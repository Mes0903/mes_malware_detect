
85707cc421ea1b198727df0d32b69cf7531d74c83741b4227068c7c423c2cb9e.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	adc    al,0x37
  401006:	cmp    DWORD PTR [ebp+0x0],ecx
  401009:	add    BYTE PTR [eax],al
  40100b:	add    BYTE PTR [edx],dh
  40100d:	adc    BYTE PTR [eax],al
  40100f:	add    BYTE PTR [ecx],al
  401011:	add    BYTE PTR [eax],al
  401013:	add    BYTE PTR [ecx],al
  401015:	add    BYTE PTR [eax],al
  401017:	add    BYTE PTR [ecx],al
  401019:	add    BYTE PTR [eax],al
  40101b:	add    BYTE PTR [eax],ch
  40101d:	adc    BYTE PTR [eax],al
  40101f:	add    BYTE PTR [eax+edx*1],ch
  401022:	add    BYTE PTR [eax],al
  401024:	xor    BYTE PTR [eax],dl
  401026:	add    BYTE PTR [eax],al
  401028:	xor    BYTE PTR [eax+eax*1+0x103e00],al
  40102f:	add    BYTE PTR [eax],al
  401031:	add    BYTE PTR [edi+0x6f],dl
  401034:	jb     0x40109a
  401036:	push   edi
  401037:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  40103e:	aas    
  40103f:	inc    ebx
  401040:	ins    BYTE PTR es:[edi],dx
  401041:	outs   dx,DWORD PTR ds:[esi]
  401042:	jae    0x4010a9
  401044:	push   edi
  401045:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  40104c:	popa   
  40104d:	je     0x4010b8
  40104f:	outs   dx,DWORD PTR ds:[esi]
  401050:	outs   dx,BYTE PTR ds:[esi]
  401051:	inc    ebx
  401052:	ins    BYTE PTR es:[edi],dx
  401053:	outs   dx,DWORD PTR ds:[esi]
  401054:	jae    0x4010bb
  401056:	push   edi
  401057:	imul   edx,DWORD PTR [ebp-0x75],0xa4ec81ec
  40105e:	add    BYTE PTR [eax],al
  401060:	add    BYTE PTR [ebx+0x3d11084d],cl
  401066:	add    BYTE PTR [eax-0x7a47ffbe],ah
  40106c:	mov    al,BYTE PTR [eax]
  40106e:	add    BYTE PTR [esi+0x33],ah
  401071:	inc    ecx
  401072:	and    BYTE PTR [ebx],ch
  401074:	or     eax,0x42b00c
  401079:	mov    ecx,0x3b4b
  40107e:	xor    DWORD PTR ds:0x429018,0x42b01c
  401088:	add    ax,cx
  40108b:	adc    ecx,DWORD PTR ds:0x42c010
  401091:	movzx  eax,ax
  401094:	mov    ecx,DWORD PTR ds:0x423e74
  40109a:	mov    ecx,DWORD PTR [ecx]
  40109c:	sub    DWORD PTR ds:0x42d014,ecx
  4010a2:	mov    DWORD PTR [ebp-0x18],eax
  4010a5:	and    DWORD PTR ds:0x42c008,ebx
  4010ab:	mov    BYTE PTR [ebp-0x1],0x61
  4010af:	sbb    ecx,0x3fcf
  4010b5:	lea    eax,[ebp-0x1]
  4010b8:	xor    ecx,ecx
  4010ba:	xor    ecx,DWORD PTR ds:0x429024
  4010c0:	adc    ecx,DWORD PTR ds:0x42b004
  4010c6:	mov    DWORD PTR ds:0x429024,ecx
  4010cc:	mov    DWORD PTR [ebp-0x10],eax
  4010cf:	mov    ecx,DWORD PTR ds:0x42d01c
  4010d5:	sub    DWORD PTR ds:0x42900c,ecx
  4010db:	mov    al,BYTE PTR [ebp-0x1]
  4010de:	mov    ecx,DWORD PTR [ebp-0x10]
  4010e1:	xor    DWORD PTR ds:0x42b004,0x42900c
  4010eb:	xor    al,0x6f
  4010ed:	sub    al,0xd
  4010ef:	adc    DWORD PTR ds:0x42d008,0x362f
  4010f9:	mov    BYTE PTR [ecx],al
  4010fb:	mov    DWORD PTR ds:0x429020,0x1b
  401105:	cmp    DWORD PTR ds:0x429020,0x0
  40110c:	je     0x40113f
  401112:	cmp    DWORD PTR ds:0x429020,0x24
  401119:	jne    0x40112d
  40111f:	push   DWORD PTR [ebp-0x24]
  401122:	push   0x424560
  401127:	call   DWORD PTR ds:0x425010
  40112d:	mov    ecx,DWORD PTR ds:0x429020
  401133:	dec    ecx
  401134:	mov    DWORD PTR ds:0x429020,ecx
  40113a:	jmp    0x401105
  40113f:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  401146:	push   ebx
  401147:	sub    ecx,eax
  401149:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  401150:	and    DWORD PTR ds:0x42901c,ebx
  401156:	mov    ecx,DWORD PTR [ebp-0x14]
  401159:	push   esi
  40115a:	mov    eax,0x7510893
  40115f:	xor    ecx,eax
  401161:	or     esi,DWORD PTR ds:0x42900c
  401167:	mov    esi,0x3272db
  40116c:	and    DWORD PTR ds:0x429024,0x1a45
  401176:	push   edi
  401177:	sub    DWORD PTR ds:0x42c018,0x2ac6
  401181:	add    ecx,esi
  401183:	mov    DWORD PTR ds:0x42c008,0x57e6
  40118d:	jmp    0x4011bb
  401192:	mov    DWORD PTR ds:0x42a014,0x4932
  40119c:	mov    dl,BYTE PTR [ebp-0x1]
  40119f:	mov    DWORD PTR ds:0x42d014,0x6fce
  4011a9:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  4011b0:	mov    DWORD PTR ds:0x42c010,0x5862
  4011ba:	inc    ecx
  4011bb:	mov    DWORD PTR ds:0x42a018,0x6e07
  4011c5:	cmp    ecx,0x40
  4011c8:	jb     0x401192
  4011ce:	sbb    DWORD PTR ds:0x42a010,0x6c84
  4011d8:	mov    edx,DWORD PTR [ebp-0x14]
  4011db:	add    DWORD PTR ds:0x42b004,0x42900c
  4011e5:	xor    edx,eax
  4011e7:	sub    DWORD PTR ds:0x42c018,0x6b15
  4011f1:	add    edx,esi
  4011f3:	jmp    0x40132b
  4011f8:	add    DWORD PTR ds:0x42b000,ecx
  4011fe:	mov    edi,DWORD PTR [ebp+0x8]
  401201:	mov    DWORD PTR ds:0x42b010,0x1a
  40120b:	cmp    DWORD PTR ds:0x42b010,0x0
  401212:	je     0x40126b
  401218:	cmp    DWORD PTR ds:0x42b010,0x3
  40121f:	jne    0x401233
  401225:	push   0x3d21
  40122a:	push   DWORD PTR [ebp-0x10]
  40122d:	call   DWORD PTR ds:0x425018
  401233:	cmp    DWORD PTR ds:0x42b010,0x4
  40123a:	jne    0x40124f
  401240:	xor    ecx,ecx
  401242:	or     ecx,DWORD PTR ds:0x42b010
  401248:	dec    ecx
  401249:	mov    DWORD PTR ds:0x42b010,ecx
  40124f:	mov    ecx,DWORD PTR ds:0x42b010
  401255:	dec    ecx
  401256:	mov    DWORD PTR ds:0x42b010,ecx
  40125c:	jmp    0x40120b
  401261:	or     DWORD PTR ds:0x429004,0x4238
  40126b:	mov    ecx,0x8a85
  401270:	sbb    DWORD PTR ds:0x42a014,0x4641
  40127a:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40127f:	xor    DWORD PTR ds:0x42901c,edi
  401285:	mov    edi,0x3b4b
  40128a:	add    cx,di
  40128d:	and    DWORD PTR ds:0x42a01c,0x60c1
  401297:	movzx  ecx,cx
  40129a:	mov    DWORD PTR [ebp-0x10],ecx
  40129d:	and    DWORD PTR ds:0x42c014,0x0
  4012a7:	jmp    0x4012b9
  4012ac:	mov    ecx,DWORD PTR ds:0x42c014
  4012b2:	inc    ecx
  4012b3:	mov    DWORD PTR ds:0x42c014,ecx
  4012b9:	cmp    DWORD PTR ds:0x42c014,0x14
  4012c0:	jae    0x4012ec
  4012c6:	cmp    DWORD PTR ds:0x42c014,0x19
  4012cd:	jne    0x4012e5
  4012d3:	push   0x42d008
  4012d8:	push   0x0
  4012da:	push   0x4244a3
  4012df:	call   DWORD PTR ds:0x42501c
  4012e5:	jmp    0x4012ac
  4012ea:	neg    ecx
  4012ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4012ef:	mov    DWORD PTR ds:0x42a000,0x57bf
  4012f9:	movzx  ecx,WORD PTR [ecx+edx*4]
  4012fd:	xor    ecx,0x8a85
  401303:	add    DWORD PTR ds:0x42b00c,0x42c004
  40130d:	add    ecx,edi
  40130f:	movzx  edi,BYTE PTR ds:0x42c018
  401316:	mov    edi,DWORD PTR [ebp-0x10]
  401319:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  401320:	mov    DWORD PTR ds:0x429024,0x374e
  40132a:	inc    edx
  40132b:	mov    ecx,0x6cf1
  401330:	mov    ecx,DWORD PTR [ebp-0x18]
  401333:	cmp    edx,ecx
  401335:	jne    0x4011f8
  40133b:	mov    ecx,DWORD PTR [ebp-0x14]
  40133e:	and    DWORD PTR ds:0x42d014,0x0
  401348:	mov    edx,DWORD PTR ds:0x42d014
  40134e:	inc    edx
  40134f:	mov    DWORD PTR ds:0x42d014,edx
  401355:	cmp    DWORD PTR ds:0x42d014,0x1e
  40135c:	jne    0x401370
  401362:	push   0x42a010
  401367:	push   DWORD PTR [ebp-0xc]
  40136a:	call   DWORD PTR ds:0x425020
  401370:	cmp    DWORD PTR ds:0x42d014,0x1a
  401377:	jb     0x401348
  40137d:	mov    edx,DWORD PTR [ebp+0x10]
  401380:	add    DWORD PTR ds:0x429018,0x42d01c
  40138a:	xor    ecx,eax
  40138c:	add    ecx,esi
  40138e:	mov    DWORD PTR [edx],ecx
  401390:	xor    DWORD PTR ds:0x429020,0x151c
  40139a:	mov    ecx,DWORD PTR [ebp-0x14]
  40139d:	sbb    DWORD PTR ds:0x42a004,0x76e2
  4013a7:	xor    ecx,eax
  4013a9:	add    ecx,esi
  4013ab:	mov    DWORD PTR [ebp-0x20],ecx
  4013ae:	mov    DWORD PTR ds:0x42c00c,0x69f9
  4013b8:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  4013bf:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  4013c6:	mov    DWORD PTR ds:0x42c00c,ecx
  4013cc:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  4013d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4013d6:	mov    DWORD PTR ds:0x429004,0x7870
  4013e0:	mov    DWORD PTR [ebp+0x8],ecx
  4013e3:	jmp    0x4015f6
  4013e8:	xor    DWORD PTR ds:0x42a014,0x45a5
  4013f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4013f5:	and    DWORD PTR ds:0x42b008,0x0
  4013ff:	mov    edx,DWORD PTR ds:0x42b008
  401405:	inc    edx
  401406:	mov    DWORD PTR ds:0x42b008,edx
  40140c:	cmp    DWORD PTR ds:0x42b008,0x29
  401413:	jne    0x401424
  401419:	push   0x3311
  40141e:	call   DWORD PTR ds:0x425028
  401424:	cmp    DWORD PTR ds:0x42b008,0x1f
  40142b:	jb     0x4013ff
  401431:	adc    DWORD PTR ds:0x42a008,0x7a1a
  40143b:	mov    edx,DWORD PTR [ebp-0x8]
  40143e:	neg    DWORD PTR ds:0x42b00c
  401444:	xor    ecx,eax
  401446:	xor    DWORD PTR ds:0x429018,0x42b01c
  401450:	xor    edx,eax
  401452:	or     DWORD PTR ds:0x429020,0x5996
  40145c:	sub    ecx,edx
  40145e:	movzx  edx,BYTE PTR ds:0x42a014
  401465:	adc    DWORD PTR ds:0x429028,edx
  40146b:	sub    ecx,esi
  40146d:	xor    DWORD PTR ds:0x429028,0xa7c
  401477:	xor    ecx,eax
  401479:	not    edx
  40147b:	mov    DWORD PTR [ebp+0x8],ecx
  40147e:	add    DWORD PTR ds:0x42a01c,0x480
  401488:	mov    ecx,DWORD PTR [ebp+0x8]
  40148b:	mov    edx,DWORD PTR [ebp-0x64]
  40148e:	or     DWORD PTR ds:0x429028,0x2c95
  401498:	lea    ecx,[edx+ecx*1+0x5708f5]
  40149f:	and    edx,0x1ea1
  4014a5:	mov    DWORD PTR [ebp-0x64],ecx
  4014a8:	and    DWORD PTR ds:0x42c000,0x0
  4014b2:	jmp    0x4014c4
  4014b7:	mov    ecx,DWORD PTR ds:0x42c000
  4014bd:	inc    ecx
  4014be:	mov    DWORD PTR ds:0x42c000,ecx
  4014c4:	cmp    DWORD PTR ds:0x42c000,0x1f
  4014cb:	jae    0x401506
  4014d1:	cmp    DWORD PTR ds:0x42c000,0x2a
  4014d8:	jne    0x401501
  4014de:	push   DWORD PTR [ebp-0x1c]
  4014e1:	push   DWORD PTR [ebp-0x10]
  4014e4:	push   0x42a004
  4014e9:	push   0x8921
  4014ee:	push   DWORD PTR [ebp-0x24]
  4014f1:	push   0x8115
  4014f6:	push   0x4d38
  4014fb:	call   DWORD PTR ds:0x42502c
  401501:	jmp    0x4014b7
  401506:	mov    ecx,DWORD PTR [ebp+0x8]
  401509:	mov    edx,DWORD PTR [ebp-0x60]
  40150c:	sub    DWORD PTR ds:0x42a000,0x42a01c
  401516:	lea    ecx,[edx+ecx*1+0x5708f5]
  40151d:	neg    edx
  40151f:	mov    DWORD PTR [ebp-0x60],ecx
  401522:	adc    DWORD PTR ds:0x42d01c,edx
  401528:	mov    ecx,DWORD PTR [ebp+0x8]
  40152b:	add    DWORD PTR ds:0x429008,0x3e29
  401535:	mov    edx,DWORD PTR [ebp-0x5c]
  401538:	add    DWORD PTR ds:0x429028,0x42b010
  401542:	lea    ecx,[edx+ecx*1+0x5708f4]
  401549:	and    DWORD PTR ds:0x42d008,0x0
  401553:	mov    edx,DWORD PTR ds:0x42d008
  401559:	inc    edx
  40155a:	mov    DWORD PTR ds:0x42d008,edx
  401560:	cmp    DWORD PTR ds:0x42d008,0x8
  401567:	jne    0x401576
  40156d:	push   DWORD PTR [ebp-0x20]
  401570:	call   DWORD PTR ds:0x425030
  401576:	cmp    DWORD PTR ds:0x42d008,0x7
  40157d:	jne    0x401592
  401583:	xor    edx,edx
  401585:	or     edx,DWORD PTR ds:0x42d008
  40158b:	inc    edx
  40158c:	mov    DWORD PTR ds:0x42d008,edx
  401592:	cmp    DWORD PTR ds:0x42d008,0x17
  401599:	jb     0x401553
  40159f:	xor    edx,DWORD PTR ds:0x42d00c
  4015a5:	mov    DWORD PTR [ebp-0x5c],ecx
  4015a8:	sbb    ecx,edx
  4015aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4015ad:	xor    DWORD PTR ds:0x42b01c,0x42c004
  4015b7:	mov    edx,DWORD PTR [ebp-0x58]
  4015ba:	lea    ecx,[edx+ecx*1+0x5708fb]
  4015c1:	xor    edx,0x2bb1
  4015c7:	mov    DWORD PTR [ebp-0x58],ecx
  4015ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4015cd:	mov    edx,DWORD PTR [ebp-0x54]
  4015d0:	adc    DWORD PTR ds:0x429024,0x7906
  4015da:	lea    ecx,[edx+ecx*1+0x5708fa]
  4015e1:	not    edx
  4015e3:	mov    DWORD PTR [ebp-0x54],ecx
  4015e6:	mov    ecx,DWORD PTR [ebp+0x8]
  4015e9:	mov    edx,DWORD PTR [ebp-0x50]
  4015ec:	lea    ecx,[edx+ecx*1+0x5708f9]
  4015f3:	mov    DWORD PTR [ebp-0x50],ecx
  4015f6:	dec    ecx
  4015f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4015fa:	xor    ecx,eax
  4015fc:	or     DWORD PTR ds:0x42d000,0x34f3
  401606:	add    ecx,esi
  401608:	mov    DWORD PTR ds:0x42c01c,0x3161
  401612:	jne    0x4013e8
  401618:	mov    DWORD PTR ds:0x429018,0x1b23
  401622:	jmp    0x405fe7
  401627:	mov    ecx,DWORD PTR [ebp-0x1c]
  40162a:	and    DWORD PTR ds:0x42c000,0x0
  401634:	jmp    0x401648
  401639:	xor    edx,edx
  40163b:	xor    edx,DWORD PTR ds:0x42c000
  401641:	inc    edx
  401642:	mov    DWORD PTR ds:0x42c000,edx
  401648:	cmp    DWORD PTR ds:0x42c000,0x15
  40164f:	jae    0x4016e1
  401655:	cmp    DWORD PTR ds:0x42c000,0xa
  40165c:	jne    0x40166e
  401662:	push   DWORD PTR [ebp-0x14]
  401665:	push   DWORD PTR [ebp-0x14]
  401668:	call   DWORD PTR ds:0x425034
  40166e:	cmp    DWORD PTR ds:0x42c000,0x9
  401675:	jne    0x40168a
  40167b:	xor    edx,edx
  40167d:	add    edx,DWORD PTR ds:0x42c000
  401683:	inc    edx
  401684:	mov    DWORD PTR ds:0x42c000,edx
  40168a:	jmp    0x401639
  40168f:	and    DWORD PTR ds:0x42c000,0x0
  401699:	mov    edx,DWORD PTR ds:0x42c000
  40169f:	inc    edx
  4016a0:	mov    DWORD PTR ds:0x42c000,edx
  4016a6:	cmp    DWORD PTR ds:0x42c000,0x1e
  4016ad:	jne    0x4016c6
  4016b3:	push   0x424403
  4016b8:	push   0x42450c
  4016bd:	push   DWORD PTR [ebp-0x18]
  4016c0:	call   DWORD PTR ds:0x42503c
  4016c6:	cmp    DWORD PTR ds:0x42c000,0x12
  4016cd:	jb     0x401699
  4016d3:	xor    edx,edx
  4016d5:	xor    edx,DWORD PTR ds:0x429010
  4016db:	sub    DWORD PTR ds:0x42a01c,edx
  4016e1:	mov    edx,DWORD PTR [ebp-0x8]
  4016e4:	xor    ecx,eax
  4016e6:	xor    edx,eax
  4016e8:	add    DWORD PTR ds:0x429014,0x42d010
  4016f2:	sub    ecx,edx
  4016f4:	mov    DWORD PTR ds:0x42d00c,0x49b3
  4016fe:	sub    ecx,esi
  401700:	xor    ecx,eax
  401702:	mov    DWORD PTR ds:0x42901c,0x3f4e
  40170c:	mov    DWORD PTR [ebp-0x1c],ecx
  40170f:	mov    ecx,DWORD PTR ds:0x42b014
  401715:	mov    ecx,DWORD PTR [ebp-0xc]
  401718:	mov    DWORD PTR [ebp+0x8],ecx
  40171b:	jmp    0x40174d
  401720:	mov    ecx,DWORD PTR [ebp+0x8]
  401723:	mov    edx,DWORD PTR [ebp-0x8]
  401726:	xor    ecx,eax
  401728:	xor    edx,eax
  40172a:	sub    ecx,edx
  40172c:	sub    ecx,esi
  40172e:	xor    ecx,eax
  401730:	mov    DWORD PTR [ebp+0x8],ecx
  401733:	mov    ecx,DWORD PTR [ebp+0x8]
  401736:	mov    edx,DWORD PTR [ebp+0x8]
  401739:	imul   edx,edx,0x5708f5
  40173f:	xor    ecx,eax
  401741:	add    ecx,esi
  401743:	lea    ecx,[ebp+ecx*4-0x64]
  401747:	mov    edi,DWORD PTR [ecx]
  401749:	add    edx,edi
  40174b:	mov    DWORD PTR [ecx],edx
  40174d:	mov    ecx,DWORD PTR [ebp+0x8]
  401750:	xor    ecx,eax
  401752:	add    ecx,esi
  401754:	jne    0x401720
  40175a:	mov    ecx,DWORD PTR [ebp-0x20]
  40175d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401764:	mov    dl,BYTE PTR [ebp-0x1]
  401767:	cmp    cl,dl
  401769:	je     0x405f48
  40176f:	mov    ecx,DWORD PTR [ebp-0x20]
  401772:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401779:	mov    edx,DWORD PTR [ebp+0xc]
  40177c:	cmp    cl,BYTE PTR [edx]
  40177e:	jne    0x405ff9
  401784:	mov    ecx,DWORD PTR [ebp-0x14]
  401787:	mov    edx,DWORD PTR [ebp+0xc]
  40178a:	movsx  edx,BYTE PTR [edx]
  40178d:	xor    ecx,eax
  40178f:	add    ecx,esi
  401791:	jmp    0x403b14
  401796:	add    al,0xcb
  401798:	xchg   edi,eax
  401799:	dec    esp
  40179a:	xchg   edi,eax
  40179b:	in     al,0x63
  40179d:	sbb    DWORD PTR [edx],0xffffff98
  4017a0:	adc    al,0xee
  4017a2:	scas   al,BYTE PTR es:[edi]
  4017a3:	cmp    ebx,DWORD PTR [ebp+esi*1+0x62]
  4017a7:	bound  esp,QWORD PTR [edx+0x62]
  4017aa:	sbb    al,0x5f
  4017ac:	bound  esp,QWORD PTR [edx+0x9]
  4017af:	xor    BYTE PTR [edi],al
  4017b1:	cmp    eax,0xf033905
  4017b6:	jns    0x4017de
  4017b8:	jne    0x401830
  4017ba:	inc    ebx
  4017bb:	jnp    0x40182f
  4017bd:	jb     0x401830
  4017bf:	sub    bl,cl
  4017c1:	sar    ch,0x4c
  4017c4:	push   esp
  4017c5:	jae    0x401844
  4017c7:	inc    ebx
  4017c8:	mov    WORD PTR [ecx+esi*2+0x45],?
  4017cc:	scas   eax,DWORD PTR es:[edi]
  4017cd:	inc    ecx
  4017ce:	push   edx
  4017cf:	cmp    al,0x90
  4017d1:	loop   0x40176a
  4017d3:	inc    di
  4017d5:	push   ecx
  4017d6:	jg     0x4017ff
  4017d8:	ins    BYTE PTR es:[edi],dx
  4017d9:	mov    dh,0x7f
  4017db:	mov    esp,0xff3023ba
  4017e0:	jbe    0x4017a2
  4017e2:	loop   0x40182f
  4017e4:	jg     0x401804
  4017e6:	icebp  
  4017e7:	and    eax,0x97f1a2d1
  4017ec:	or     ebx,esi
  4017ee:	xchg   ebx,eax
  4017ef:	xor    eax,0x92b345ef
  4017f4:	fsub   st,st(7)
  4017f6:	jno    0x4017b9
  4017f8:	sbb    al,cl
  4017fa:	out    dx,al
  4017fb:	loop   0x401833
  4017fd:	add    al,0x54
  4017ff:	adc    BYTE PTR [esi],dh
  401801:	jae    0x401877
  401803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401804:	(bad)  
  401805:	or     ebx,DWORD PTR [ebp+0x19]
  401808:	mov    dh,0xff
  40180a:	cmc    
  40180b:	push   ebp
  40180c:	xor    ebp,DWORD PTR [eax+0x2a]
  40180f:	aam    0x43
  401811:	in     eax,0x2
  401813:	loop   0x401879
  401815:	mov    ebp,0x5f84c17b
  40181a:	xchg   ebx,eax
  40181b:	mov    ebp,0x2d9a0817
  401820:	jmp    0x4017c0
  401822:	and    BYTE PTR [edx+0x6b],ch
  401825:	adc    eax,edx
  401827:	xor    DWORD PTR [edx-0x6f],ecx
  40182a:	sub    BYTE PTR [ebx],ch
  40182c:	dec    eax
  40182d:	sti    
  40182e:	scas   eax,DWORD PTR es:[edi]
  40182f:	xchg   edx,eax
  401830:	xor    eax,0xd0a7ac95
  401835:	xchg   esp,eax
  401836:	dec    ebp
  401837:	clc    
  401838:	pop    ecx
  401839:	dec    edx
  40183a:	push   eax
  40183b:	adc    BYTE PTR [esi],bh
  40183d:	jmp    0x401865
  40183f:	sbb    esi,DWORD PTR [ecx+0x2cb7d253]
  401845:	fcomp  QWORD PTR [eax]
  401847:	inc    esi
  401848:	loope  0x401894
  40184a:	inc    esi
  40184b:	mov    ecx,0xe4bf74e5
  401850:	pop    edx
  401851:	push   es
  401852:	sbb    eax,0x5df861bc
  401857:	xor    al,0xe7
  401859:	mov    edx,0x2eecf2ed
  40185e:	mov    cl,BYTE PTR [eax-0x67]
  401861:	sub    bh,BYTE PTR [ebx]
  401863:	pop    ds
  401864:	push   es
  401865:	out    0xcc,al
  401867:	adc    DWORD PTR [esi],ebx
  401869:	lods   eax,DWORD PTR ds:[esi]
  40186a:	mov    bh,0x11
  40186c:	popa   
  40186d:	(bad)  [eax-0x58]
  401870:	push   edx
  401871:	inc    edi
  401872:	and    ch,0xf6
  401875:	xchg   edx,eax
  401876:	icebp  
  401877:	mov    eax,ds:0x7993661b
  40187c:	cdq    
  40187d:	xor    eax,0xcbf0f3bb
  401882:	mov    bl,0x99
  401884:	call   0x55df5984
  401889:	sbb    al,0x73
  40188b:	mov    bl,0xa1
  40188d:	mov    DWORD PTR [ebx+0x2],esp
  401890:	aaa    
  401891:	mov    esp,0xc52f2b16
  401896:	adc    al,BYTE PTR [edx-0x2c]
  401899:	inc    eax
  40189a:	call   0xe4d77a78
  40189f:	out    0x20,eax
  4018a1:	idiv   DWORD PTR [ebx+0x315f40fc]
  4018a7:	gs loop 0x40183c
  4018aa:	sub    cl,BYTE PTR [edx]
  4018ac:	jae    0x40190f
  4018ae:	adc    DWORD PTR [ecx-0xfc4e6c0],edi
  4018b4:	mov    ebp,0xcf82ff7a
  4018b9:	(bad)  
  4018ba:	retf   0x179e
  4018bd:	add    eax,DWORD PTR [ebx]
  4018bf:	dec    ebx
  4018c0:	push   ds
  4018c1:	out    0x1b,al
  4018c3:	neg    BYTE PTR [edi+0x28db646c]
  4018c9:	aas    
  4018ca:	cmp    ebx,0xffffffda
  4018cd:	test   eax,0xc8afa97e
  4018d2:	(bad)  
  4018d3:	jl     0x401928
  4018d5:	or     al,0xbf
  4018d7:	test   DWORD PTR [edx-0x52],esi
  4018da:	sub    DWORD PTR [ebp+0x4],eax
  4018dd:	ins    BYTE PTR es:[edi],dx
  4018de:	xchg   BYTE PTR [ebx],ah
  4018e0:	pusha  
  4018e1:	int    0x1
  4018e3:	inc    esi
  4018e4:	xchg   esp,eax
  4018e5:	test   bl,dl
  4018e7:	imul   esi,DWORD PTR [edi+esi*1-0x1b],0xfa822941
  4018ef:	adc    edx,DWORD PTR [eax]
  4018f1:	adc    DWORD PTR [ecx],ebp
  4018f3:	cmp    DWORD PTR [esp+edx*8-0x53],edi
  4018f7:	or     ebp,esi
  4018f9:	adc    ebp,DWORD PTR [ebx-0x6096fee3]
  4018ff:	and    al,0x36
  401901:	popf   
  401902:	ins    DWORD PTR es:[edi],dx
  401903:	jmp    0x40197a
  401905:	repnz les dx,DWORD PTR ss:[ebx-0x4ae19f5e]
  40190e:	lahf   
  40190f:	inc    ebx
  401910:	jb     0x40195b
  401912:	adc    DWORD PTR [edi+0x77aac7ba],esp
  401918:	inc    ecx
  401919:	dec    esp
  40191a:	outs   dx,BYTE PTR ds:[esi]
  40191b:	dec    edi
  40191c:	adc    DWORD PTR [esi+ebp*2+0x12c19133],edi
  401923:	or     ecx,edx
  401925:	loopne 0x4018a8
  401927:	scas   eax,DWORD PTR es:[edi]
  401928:	ins    BYTE PTR es:[edi],dx
  401929:	in     al,dx
  40192a:	add    BYTE PTR [edx],dl
  40192c:	scas   al,BYTE PTR es:[edi]
  40192d:	add    al,0x99
  40192f:	retf   
  401930:	xor    al,0xfd
  401932:	jb     0x401987
  401934:	xor    al,0x7f
  401936:	std    
  401937:	mov    bl,0x68
  401939:	add    al,0x5
  40193b:	iret   
  40193c:	popf   
  40193d:	repnz pop ecx
  40193f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401940:	push   ebp
  401941:	xlat   BYTE PTR ds:[ebx]
  401942:	push   ebx
  401943:	sub    DWORD PTR [ecx+0x23],ebp
  401946:	shl    BYTE PTR [esp+eax*2-0x64],cl
  40194a:	aad    0x1
  40194c:	lea    eax,[ebx-0x74436904]
  401952:	push   eax
  401953:	adc    eax,esp
  401955:	push   ds
  401956:	stc    
  401957:	push   ecx
  401958:	out    0x11,al
  40195a:	es jge 0x4019b1
  40195d:	shl    DWORD PTR [edi-0x2a],1
  401960:	dec    esp
  401961:	push   esp
  401962:	in     al,0xe0
  401964:	mov    dh,0x0
  401966:	scas   al,BYTE PTR es:[edi]
  401967:	add    cl,BYTE PTR [esi+0x34]
  40196a:	jb     0x401986
  40196c:	mov    bh,0x6f
  40196e:	dec    eax
  40196f:	rcr    DWORD PTR [ebx],1
  401971:	out    0x56,al
  401973:	and    dl,BYTE PTR ds:0x10fb83f4
  401979:	cmp    al,0x68
  40197b:	or     BYTE PTR [esi-0x21cfe61b],0xd0
  401982:	push   esp
  401983:	ds pusha 
  401985:	xlat   BYTE PTR ds:[ebx]
  401986:	inc    edx
  401987:	loope  0x4019b6
  401989:	(bad)  
  40198b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40198c:	xor    ch,BYTE PTR [eax+0x6f]
  40198f:	jl     0x401960
  401991:	mov    edx,0x93f61ad6
  401996:	out    0x75,al
  401998:	mov    ecx,DWORD PTR [eax-0x141e6328]
  40199e:	xchg   ecx,eax
  40199f:	mov    ecx,0x9033705
  4019a4:	push   eax
  4019a5:	push   ds
  4019a6:	dec    edi
  4019a7:	mov    ecx,0xf9e06088
  4019ac:	and    al,0x34
  4019ae:	test   eax,0x39662261
  4019b3:	mov    ch,0x75
  4019b5:	jle    0x4019b3
  4019b7:	or     al,0x7a
  4019b9:	sub    BYTE PTR [edx],ah
  4019bb:	idiv   DWORD PTR [esi+eax*2]
  4019be:	cli    
  4019bf:	outs   dx,BYTE PTR ds:[esi]
  4019c0:	loopne 0x401a0f
  4019c2:	jno    0x401a36
  4019c4:	cmp    DWORD PTR [ebx],esi
  4019c6:	xor    eax,0x2c6d9e19
  4019cb:	(bad)  [esi-0x1a]
  4019ce:	push   ss
  4019cf:	imul   edx,DWORD PTR [esi+edi*4],0x10fe6667
  4019d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019d7:	push   0x4a
  4019d9:	jae    0x401969
  4019db:	xor    BYTE PTR [ebx-0x37],dl
  4019de:	mov    gs:0xcf4a6efc,eax
  4019e4:	inc    esi
  4019e5:	inc    edi
  4019e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019e7:	hlt    
  4019e8:	mov    edi,DWORD PTR [esi]
  4019ea:	call   0x82a8f850
  4019ef:	cmp    ax,WORD PTR [edi+0xc]
  4019f3:	stos   DWORD PTR es:[edi],eax
  4019f4:	mov    cl,0x39
  4019f6:	retf   0xf097
  4019f9:	mov    dl,0xae
  4019fb:	jmp    0x4019ed
  4019fd:	test   WORD PTR [ecx],cx
  401a00:	imul   edx,esp,0xa26b79d7
  401a06:	fprem  
  401a08:	add    bh,BYTE PTR ds:0xd4f436a7
  401a0e:	push   ds
  401a0f:	addr16 pop ds
  401a11:	ret    
  401a12:	es neg ebx
  401a15:	in     al,dx
  401a16:	xor    eax,0x59d87f20
  401a1b:	or     al,0x1c
  401a1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a1e:	mov    ds:0xf2ef5805,al
  401a23:	push   0x78
  401a25:	or     ah,BYTE PTR [eax]
  401a27:	cs pop ebx
  401a29:	mov    bl,0x26
  401a2b:	jp     0x401a4a
  401a2d:	ret    
  401a2e:	rol    ebx,cl
  401a30:	or     BYTE PTR [edi-0x60b29cfa],dh
  401a36:	scas   al,BYTE PTR es:[edi]
  401a37:	xchg   DWORD PTR [ebx-0x44b81b53],ebp
  401a3d:	pop    esi
  401a3e:	dec    eax
  401a3f:	outs   dx,BYTE PTR ds:[esi]
  401a40:	or     eax,0x96769528
  401a45:	pop    ecx
  401a46:	mov    ch,0x33
  401a48:	lea    esp,[edi]
  401a4a:	push   edx
  401a4b:	push   ebp
  401a4c:	pusha  
  401a4d:	bound  esp,QWORD PTR [eax]
  401a4f:	mov    es,esp
  401a51:	dec    ecx
  401a52:	add    esi,DWORD PTR [edi+0x5a922595]
  401a58:	xlat   BYTE PTR cs:[ebx]
  401a5a:	pop    ebx
  401a5b:	addr16 test al,0x42
  401a5e:	jle    0x401aba
  401a60:	push   0x43
  401a62:	jle    0x4019e5
  401a64:	test   eax,0x1be6991e
  401a69:	dec    ebx
  401a6a:	cld    
  401a6b:	aaa    
  401a6c:	xor    DWORD PTR [esi-0x77],ebp
  401a6f:	adc    edx,DWORD PTR [edi]
  401a71:	sar    DWORD PTR [eax],1
  401a73:	in     al,0x52
  401a75:	in     eax,0x98
  401a77:	jne    0x401aab
  401a79:	jnp    0xe20fb82f
  401a7f:	sbb    ebx,DWORD PTR [edi-0x10]
  401a82:	mov    edi,0xac60001c
  401a87:	cmp    BYTE PTR [ebp+0x33af6124],cl
  401a8d:	aas    
  401a8e:	xchg   esp,eax
  401a8f:	pop    esp
  401a90:	fstp   DWORD PTR [ecx]
  401a92:	into   
  401a93:	cmp    BYTE PTR [ebx+esi*8],ah
  401a96:	ds dec ebx
  401a98:	push   ebp
  401a99:	dec    ebx
  401a9a:	xlat   BYTE PTR ds:[ebx]
  401a9b:	cmp    al,0x27
  401a9d:	pusha  
  401a9e:	sub    edx,DWORD PTR [ebx-0x5f3cfd4c]
  401aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401aa5:	ret    0x6f48
  401aa8:	push   eax
  401aa9:	xor    eax,0xeeaab45d
  401aae:	lock mov ds:0x26ea856c,al
  401ab4:	fstp   DWORD PTR [esi]
  401ab6:	adc    esp,0x277420ff
  401abc:	xchg   esi,eax
  401abd:	mov    edi,0x94d9e85f
  401ac2:	or     al,0x7f
  401ac4:	pop    esi
  401ac5:	imul   ebx,DWORD PTR [ecx+ebx*4],0xffffffd0
  401ac9:	test   ecx,edi
  401acb:	mov    ebx,0x7745480f
  401ad0:	sahf   
  401ad1:	imul   eax,eax,0xb37e92ba
  401ad7:	xchg   ebx,eax
  401ad8:	xor    eax,0xcde9c62b
  401add:	(bad)  
  401ade:	push   edx
  401adf:	mov    eax,0xaa08079e
  401ae4:	enter  0xe3f5,0xe4
  401ae8:	test   DWORD PTR [edi],edx
  401aea:	jnp    0x401a78
  401aec:	es cwde 
  401aee:	and    DWORD PTR [edi],edi
  401af0:	inc    esp
  401af1:	sahf   
  401af2:	aaa    
  401af3:	fs call 0xcecb:0x893085dc
  401afb:	popf   
  401afc:	fld    QWORD PTR [ebp+0x122b3d91]
  401b02:	cmp    al,0x2e
  401b04:	and    al,0x50
  401b06:	dec    esi
  401b07:	pop    eax
  401b08:	adc    cl,ch
  401b0a:	enter  0xc069,0x2a
  401b0e:	outs   dx,DWORD PTR ds:[esi]
  401b0f:	(bad)  
  401b11:	idiv   DWORD PTR [edx]
  401b13:	iret   
  401b14:	rcl    BYTE PTR [edi+0x77ba17d2],0xe4
  401b1b:	(bad)  
  401b1c:	sub    ebp,DWORD PTR [eax]
  401b1e:	add    BYTE PTR [eax],al
  401b20:	adc    edi,DWORD PTR [eax-0x4dde6ae8]
  401b26:	mov    ch,0xfd
  401b28:	push   ecx
  401b29:	inc    eax
  401b2a:	adc    esi,esi
  401b2c:	iret   
  401b2d:	mov    al,ds:0x41ac4325
  401b32:	pop    edx
  401b33:	pop    es
  401b34:	mov    al,0xeb
  401b36:	mov    WORD PTR [edi-0x6e8a25f5],?
  401b3c:	lods   eax,DWORD PTR ds:[esi]
  401b3d:	and    al,0x6d
  401b3f:	sbb    DWORD PTR [ecx+ebp*4-0x2e0bdd5],ecx
  401b46:	es popf 
  401b48:	cmp    eax,edi
  401b4a:	aas    
  401b4b:	mov    edi,0xa968e0de
  401b50:	mov    edi,DWORD PTR [eax+0x46]
  401b53:	push   esp
  401b54:	sub    al,0x36
  401b56:	push   edi
  401b57:	and    eax,0xb79e6692
  401b5c:	in     eax,0xa7
  401b5e:	imul   BYTE PTR [esi]
  401b60:	mov    esi,esi
  401b62:	jne    0x401aee
  401b64:	and    BYTE PTR [ecx+eiz*8+0xa],cl
  401b68:	daa    
  401b69:	out    dx,al
  401b6a:	mov    al,ds:0xced85076
  401b6f:	add    BYTE PTR [edx-0x54bb73ea],ch
  401b75:	lods   al,BYTE PTR ds:[esi]
  401b76:	rcl    DWORD PTR [edi],cl
  401b78:	pop    edx
  401b79:	stc    
  401b7a:	retf   
  401b7b:	mov    ah,0xbb
  401b7d:	dec    ecx
  401b7e:	sahf   
  401b7f:	mov    ah,0xe2
  401b81:	jns    0x401bf9
  401b83:	outs   dx,DWORD PTR ds:[esi]
  401b84:	neg    DWORD PTR [edx]
  401b86:	loope  0x401bd9
  401b88:	arpl   WORD PTR [ebx],sp
  401b8a:	push   ss
  401b8b:	(bad)  
  401b8c:	repnz dec ecx
  401b8e:	xchg   ebx,eax
  401b8f:	mov    dl,0x66
  401b91:	ins    DWORD PTR es:[edi],dx
  401b92:	das    
  401b93:	and    eax,0xb7b18d7b
  401b98:	jnp    0x401b4d
  401b9a:	jns    0x401c18
  401b9c:	jbe    0x401b26
  401b9e:	repnz mov dl,BYTE PTR [edi+0x27]
  401ba2:	scas   al,BYTE PTR es:[edi]
  401ba3:	cmp    DWORD PTR [eax+0x4602c709],ecx
  401ba9:	mov    DWORD PTR [esi+0x3c],eax
  401bac:	dec    ebx
  401bad:	pop    ebp
  401bae:	sub    DWORD PTR [edx-0x1e2f48f5],edi
  401bb4:	fistp  DWORD PTR [ebp+0x3c4413c8]
  401bba:	rol    BYTE PTR [edx+0x7d],0x7a
  401bbe:	cli    
  401bbf:	or     DWORD PTR [ecx+eax*2-0x70d7ed85],esp
  401bc6:	xchg   bl,ah
  401bc8:	sbb    eax,0x14ed0d37
  401bcd:	push   esp
  401bce:	sub    al,0x3e
  401bd0:	dec    ecx
  401bd1:	xor    eax,0xc6bde8a
  401bd6:	arpl   WORD PTR [esi-0x5e],sp
  401bd9:	mov    al,ds:0x9216f289
  401bde:	fsub   QWORD PTR [ecx-0x49]
  401be1:	or     cl,BYTE PTR [edi+0x1a]
  401be4:	rol    BYTE PTR ds:0xee0a9706,1
  401bea:	mov    ch,BYTE PTR [edx-0x61be3fde]
  401bf0:	mov    al,BYTE PTR [ebx+0x42]
  401bf3:	xchg   BYTE PTR [edi],al
  401bf5:	push   0x774285a7
  401bfa:	ror    DWORD PTR [edx+eiz*2+0x3f217820],1
  401c01:	jl     0x401bbd
  401c03:	sub    DWORD PTR [ebx+0x939e9a0],esp
  401c09:	es in  eax,dx
  401c0b:	or     eax,0x872f51e5
  401c10:	sbb    al,0xa
  401c12:	cli    
  401c13:	dec    esi
  401c14:	mov    edi,0xe8c5ca4b
  401c19:	xchg   BYTE PTR [ebp-0x5f],al
  401c1c:	jo     0x401c30
  401c1e:	mov    cl,0xb2
  401c20:	pusha  
  401c21:	cld    
  401c22:	inc    edi
  401c23:	pop    ebp
  401c24:	sbb    al,0x2d
  401c26:	mov    dl,0x6d
  401c28:	lea    edx,[ecx+0x8]
  401c2b:	loop   0x401c7e
  401c2d:	jbe    0x401ca7
  401c2f:	xlat   BYTE PTR ds:[ebx]
  401c30:	stc    
  401c31:	dec    ecx
  401c32:	sub    bh,BYTE PTR [edi-0x153383bd]
  401c38:	jbe    0x401c0d
  401c3a:	fcomp  DWORD PTR [edx+0x1cb2dc7]
  401c40:	nop
  401c41:	inc    ebp
  401c42:	jecxz  0x401c96
  401c44:	out    dx,eax
  401c45:	fcomip st,st(6)
  401c47:	adc    eax,0x2c6ded58
  401c4c:	inc    edx
  401c4d:	mov    dh,0x32
  401c4f:	or     al,0xba
  401c51:	xor    ebp,ebx
  401c53:	ins    DWORD PTR es:[di],dx
  401c55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c56:	clc    
  401c57:	dec    ecx
  401c58:	xor    DWORD PTR [esi],0xd8f9f818
  401c5e:	jae    0x401c29
  401c60:	sub    eax,0x19f3a465
  401c65:	mov    ebp,0x7096c4d0
  401c6a:	(bad)  
  401c6b:	int3   
  401c6c:	mov    al,ds:0x781f6071
  401c71:	nop
  401c72:	shr    eax,1
  401c74:	sub    dl,ch
  401c76:	jbe    0x401c2a
  401c78:	test   esp,esi
  401c7a:	pop    edi
  401c7b:	sub    cl,BYTE PTR [esi+0x50]
  401c7e:	mov    ebp,0x1cf64467
  401c83:	retf   
  401c84:	inc    eax
  401c85:	jnp    0x401c99
  401c87:	jb     0x401cdc
  401c89:	push   esi
  401c8a:	inc    ebx
  401c8b:	adc    ebx,DWORD PTR [ebx+eax*2-0x28]
  401c8f:	aas    
  401c90:	mov    al,ds:0x892e6d31
  401c95:	sub    DWORD PTR [edi+0x3c],ebx
  401c98:	stos   DWORD PTR es:[edi],eax
  401c99:	pop    esi
  401c9a:	(bad)  [ebp-0x7b]
  401c9d:	in     eax,0xea
  401c9f:	addr16 xchg ecx,eax
  401ca1:	fwait
  401ca2:	ret    
  401ca3:	ja     0x401c63
  401ca5:	push   esi
  401ca6:	push   ebp
  401ca7:	std    
  401ca8:	aas    
  401ca9:	xchg   esp,eax
  401caa:	sub    eax,0x6ab7db82
  401caf:	loop   0x401c9e
  401cb1:	jg     0x401cc1
  401cb3:	mov    ds:0xcfd3f6fe,eax
  401cb8:	leave  
  401cb9:	cmp    eax,0xe696acb2
  401cbe:	add    ecx,DWORD PTR [ebx+0x7c]
  401cc1:	dec    ecx
  401cc2:	or     BYTE PTR [esi],bh
  401cc4:	enter  0x351b,0xf1
  401cc8:	popf   
  401cc9:	xchg   edi,eax
  401cca:	pop    esi
  401ccb:	lods   al,BYTE PTR ds:[esi]
  401ccc:	lahf   
  401ccd:	cwde   
  401cce:	outs   dx,BYTE PTR ds:[esi]
  401ccf:	ds jge 0x401cfb
  401cd2:	inc    esi
  401cd3:	push   ds
  401cd4:	aaa    
  401cd5:	test   al,0x1d
  401cd7:	in     eax,dx
  401cd8:	inc    ebp
  401cd9:	test   BYTE PTR ds:0xbf2b8272,dh
  401cdf:	ins    BYTE PTR es:[edi],dx
  401ce0:	push   edx
  401ce1:	nop
  401ce2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ce3:	ret    0xbba6
  401ce6:	sub    al,0x4
  401ce8:	push   esp
  401ce9:	ret    
  401cea:	rcl    DWORD PTR [ebx-0x668567fe],1
  401cf0:	sub    dh,BYTE PTR [eax+ecx*4+0x507ce8ce]
  401cf7:	mov    dh,0x7d
  401cf9:	pop    ss
  401cfa:	inc    edi
  401cfb:	sub    esi,edx
  401cfd:	jmp    0xea4213e2
  401d02:	mov    cl,0xf3
  401d04:	ss out dx,eax
  401d06:	adc    al,0x82
  401d08:	stos   DWORD PTR es:[edi],eax
  401d09:	mov    WORD PTR [ebp+0x32],fs
  401d0c:	jns    0x401c94
  401d0e:	into   
  401d0f:	mov    si,0xde87
  401d13:	aam    0x88
  401d15:	bnd ds es jo 0x401ce8
  401d1a:	popa   
  401d1b:	das    
  401d1c:	test   al,0x44
  401d1e:	loope  0x401d45
  401d20:	sbb    BYTE PTR [ebp+0x26c4ade6],bh
  401d26:	push   0xf5455ca
  401d2b:	or     al,0x69
  401d2d:	shr    BYTE PTR [ebx-0x6c],0x67
  401d31:	sti    
  401d32:	mov    bh,0xa1
  401d34:	ficomp DWORD PTR ss:[eax+ebp*1+0x64]
  401d39:	adc    edx,DWORD PTR [esi]
  401d3b:	js     0x401d09
  401d3d:	imul   ecx,DWORD PTR [esi-0x58e3127e],0xe47059b2
  401d47:	popa   
  401d48:	jae    0x401cd2
  401d4a:	inc    esp
  401d4b:	and    al,0x7d
  401d4d:	lea    ebx,ds:[esi]
  401d50:	cli    
  401d51:	mov    eax,ds:0x25607d43
  401d56:	outs   dx,DWORD PTR ds:[esi]
  401d57:	mul    BYTE PTR [ebx-0x1961d172]
  401d5d:	cmp    BYTE PTR [edi-0x3b8dcd11],bl
  401d63:	xor    eax,0xced8e945
  401d68:	(bad)  
  401d69:	xchg   esi,eax
  401d6a:	sbb    BYTE PTR [ecx+0x6045252a],0xe
  401d71:	xchg   edx,eax
  401d72:	pop    ebx
  401d73:	sbb    ch,BYTE PTR [edx+ebx*1+0x1]
  401d77:	fist   DWORD PTR [ebp-0x543afb96]
  401d7d:	mov    bl,0x13
  401d7f:	jb     0x401dc9
  401d81:	(bad)  
  401d82:	fiadd  DWORD PTR [edi-0x1f]
  401d85:	or     al,0x52
  401d87:	mov    DWORD PTR [edx-0x791dbcb],0x644dd6c0
  401d91:	stos   BYTE PTR es:[edi],al
  401d92:	call   0xa336:0xf5bd734
  401d99:	mov    bh,0xc7
  401d9b:	add    DWORD PTR [ebp-0x3c],esi
  401d9e:	mov    fs,WORD PTR [edi-0x34]
  401da1:	inc    ebx
  401da2:	test   ch,dl
  401da4:	imul   ecx,DWORD PTR [edi+edi*2],0x688ec324
  401dab:	mov    ebp,0xa94d30c1
  401db0:	push   esi
  401db1:	and    edi,DWORD PTR [eax+ebx*8]
  401db4:	mov    al,0x12
  401db6:	or     BYTE PTR [edx],al
  401db8:	pop    edi
  401db9:	add    bl,BYTE PTR [eax]
  401dbb:	add    esi,DWORD PTR [edi+0x61]
  401dbe:	ret    
  401dbf:	or     DWORD PTR [ebx],ebx
  401dc1:	and    al,0x21
  401dc3:	add    cl,BYTE PTR [esi+0x4e]
  401dc6:	repnz into 
  401dc8:	sbb    al,0xb0
  401dca:	and    DWORD PTR [ebx+esi*2],0xffffff92
  401dce:	in     eax,dx
  401dcf:	pop    ebx
  401dd0:	jnp    0x401d58
  401dd2:	lods   eax,DWORD PTR ds:[esi]
  401dd3:	and    al,0x17
  401dd5:	push   ds
  401dd6:	push   0xe7169cbe
  401ddb:	jo     0x401d69
  401ddd:	or     edi,DWORD PTR [edx+0x303143db]
  401de3:	push   ebx
  401de4:	or     cl,BYTE PTR [esi]
  401de6:	fsubr  st,st(4)
  401de8:	lahf   
  401de9:	neg    DWORD PTR [ebp+0x204a6ac5]
  401def:	iret   
  401df0:	xor    esi,esi
  401df2:	(bad)  [edx-0x21]
  401df5:	xlat   BYTE PTR ds:[ebx]
  401df6:	xor    BYTE PTR [ebx-0x31ec870e],0x45
  401dfd:	icebp  
  401dfe:	nop
  401dff:	fsubr  QWORD PTR [ebx]
  401e01:	frstor [eax]
  401e03:	imul   ebp,DWORD PTR [eax+0x52],0xffffff90
  401e07:	and    DWORD PTR [edi],ecx
  401e09:	jne    0x401dfe
  401e0b:	sub    DWORD PTR [ebx],edi
  401e0d:	add    esi,DWORD PTR [ebx]
  401e0f:	repnz pop es
  401e11:	lea    ecx,[ebp-0x18bbb51f]
  401e17:	int    0x28
  401e19:	sahf   
  401e1a:	test   eax,0xf102f958
  401e1f:	mov    cl,0x13
  401e21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e22:	dec    ebx
  401e23:	sbb    al,0x39
  401e25:	mov    al,ds:0xbf3219fb
  401e2a:	ins    DWORD PTR es:[edi],dx
  401e2b:	mov    al,0x75
  401e2d:	dec    edi
  401e2e:	cmc    
  401e2f:	add    al,BYTE PTR [esi-0x21]
  401e32:	push   es
  401e33:	scas   eax,DWORD PTR es:[edi]
  401e34:	adc    DWORD PTR [ebp-0x1e6151d5],0xfffffffd
  401e3b:	icebp  
  401e3c:	xchg   edx,eax
  401e3d:	dec    esi
  401e3e:	test   DWORD PTR [ecx-0x40],ebp
  401e41:	(bad)  cs:0x168fc5f2
  401e48:	(bad)  
  401e49:	ret    
  401e4a:	xor    al,0xde
  401e4c:	jl     0x401ecd
  401e4e:	data16 rcr BYTE PTR [eax-0x18797fda],1
  401e55:	iretw  
  401e57:	sub    DWORD PTR [ecx],ebx
  401e59:	daa    
  401e5a:	mov    esp,0xaee7f108
  401e5f:	test   al,0x4f
  401e61:	xor    bh,BYTE PTR [ebp-0x1241332a]
  401e67:	dec    edi
  401e68:	rcl    BYTE PTR [edi],0x61
  401e6b:	(bad)  
  401e6c:	mov    WORD PTR [eax],ds
  401e6e:	arpl   WORD PTR [ebx],ax
  401e70:	dec    edi
  401e71:	je     0x401dff
  401e73:	ins    BYTE PTR es:[edi],dx
  401e74:	mov    edx,0xdc9a171f
  401e79:	adc    al,0xf2
  401e7b:	xor    BYTE PTR [esi-0x42a5c353],cl
  401e81:	aam    0xfd
  401e83:	popf   
  401e84:	xchg   edx,eax
  401e85:	mov    ebx,0xe8b1eeea
  401e8a:	rcr    DWORD PTR [edi],cl
  401e8c:	(bad)  
  401e8d:	mov    BYTE PTR [ebp-0x5f],0x11
  401e91:	mov    edx,ds
  401e93:	mov    esi,DWORD PTR [ebx]
  401e95:	push   ss
  401e96:	jnp    0x401e75
  401e98:	push   ebx
  401e99:	sbb    BYTE PTR [ebx+esi*4-0xe98aebe],bh
  401ea0:	xchg   ecx,eax
  401ea1:	adc    bh,BYTE PTR [esi+0x4b72f7b7]
  401ea7:	adc    esp,ebx
  401ea9:	mov    esi,0xc5052e85
  401eae:	jb     0x401e87
  401eb0:	inc    esp
  401eb1:	xor    al,0xd9
  401eb3:	dec    ecx
  401eb4:	xchg   ebp,eax
  401eb5:	clc    
  401eb6:	pop    ebp
  401eb7:	mov    bl,0x26
  401eb9:	mov    eax,ds:0xbbed7abd
  401ebe:	(bad)  
  401ebf:	mov    bh,0xc8
  401ec1:	lea    ecx,ds:0xf3653a65
  401ec7:	jp     0x401ef7
  401ec9:	popa   
  401eca:	push   ds
  401ecb:	inc    ebp
  401ecc:	(bad)
  401ecf:	jmp    DWORD PTR [ecx+0x5e]
  401ed2:	jo     0x401e8c
  401ed4:	or     al,ch
  401ed6:	xor    BYTE PTR [ebp-0x1f],dh
  401ed9:	out    0x32,al
  401edb:	out    0xb3,al
  401edd:	ins    BYTE PTR es:[edi],dx
  401ede:	inc    ebp
  401edf:	pop    es
  401ee0:	mov    ebp,0x5a1a8ac4
  401ee5:	or     eax,0x6a138c83
  401eea:	mov    WORD PTR [edx],cs
  401eec:	adc    dl,BYTE PTR [ebp+0x744f65a6]
  401ef2:	xor    cl,BYTE PTR [ecx+0x28a93397]
  401ef8:	aam    0x8
  401efa:	dec    edx
  401efb:	in     eax,0xc7
  401efd:	cmp    BYTE PTR [ecx+esi*2+0x76],bl
  401f01:	ds stc 
  401f03:	jmp    0xcfdd5f3a
  401f08:	mov    edx,0xd7e4dcf3
  401f0d:	(bad)  
  401f0f:	shl    DWORD PTR [eax+0x48837abc],1
  401f15:	jnp    0x401f01
  401f17:	push   ebx
  401f18:	call   0x5a08:0xa99dd85
  401f1f:	and    ebx,DWORD PTR [ecx]
  401f21:	fs je  0x401f45
  401f24:	adc    ebp,ebx
  401f26:	xchg   esi,eax
  401f27:	xor    edx,edx
  401f29:	iret   
  401f2a:	pusha  
  401f2b:	jne    0x401ec2
  401f2d:	pusha  
  401f2e:	fsub   DWORD PTR [esi+0x64]
  401f31:	in     al,0xc2
  401f33:	and    eax,0x36414986
  401f38:	push   ecx
  401f39:	aaa    
  401f3a:	cwde   
  401f3b:	(bad)  
  401f3c:	fadd   QWORD PTR [edx-0x2a2c6c33]
  401f42:	sub    esi,eax
  401f44:	xchg   edx,eax
  401f45:	dec    edx
  401f46:	fdiv   QWORD PTR [edx]
  401f48:	add    esp,ecx
  401f4a:	lods   al,BYTE PTR ds:[esi]
  401f4b:	ret    
  401f4c:	adc    eax,0x4a2decfa
  401f51:	aam    0x3c
  401f53:	and    BYTE PTR [eax+0x56],dh
  401f56:	xchg   ecx,eax
  401f57:	das    
  401f58:	fidivr DWORD PTR [ecx]
  401f5a:	jle    0x401fac
  401f5c:	jns    0x401fa6
  401f5e:	addr16 and bl,ah
  401f61:	mov    edx,ebp
  401f63:	out    0x98,eax
  401f65:	arpl   WORD PTR [edi],ax
  401f67:	in     al,0xf6
  401f69:	lea    ebx,[ecx]
  401f6b:	xor    DWORD PTR ds:0x90f0e214,ebx
  401f71:	fidivr WORD PTR [ebx]
  401f73:	add    DWORD PTR [ecx],0x3169150e
  401f79:	scas   eax,DWORD PTR es:[edi]
  401f7a:	adc    eax,0x436c47d7
  401f7f:	add    eax,0x1a9889c0
  401f84:	out    dx,eax
  401f85:	cmp    bl,BYTE PTR [esi-0x49]
  401f88:	shl    BYTE PTR [ebp-0x1c],1
  401f8b:	(bad)  
  401f8c:	mov    BYTE PTR [esi+0x38f82c7b],al
  401f92:	int    0xce
  401f94:	push   esp
  401f95:	mov    al,ds:0x9068873c
  401f9a:	cmc    
  401f9b:	pop    ebx
  401f9c:	fucomp st(6)
  401f9e:	lods   eax,DWORD PTR ds:[esi]
  401f9f:	jl     0x401f46
  401fa1:	mov    edi,0xdf076d50
  401fa6:	xchg   BYTE PTR [ebp-0xc97733e],bl
  401fac:	mov    edx,0x8b21b8ca
  401fb1:	lock leave 
  401fb3:	pop    edi
  401fb4:	mov    edx,edi
  401fb6:	test   eax,0x9fa9fc9b
  401fbb:	jl     0x402037
  401fbd:	xchg   ecx,eax
  401fbe:	jp     0x40202c
  401fc0:	xchg   DWORD PTR [eax+0x23],ebp
  401fc3:	xchg   ecx,eax
  401fc4:	dec    edi
  401fc5:	ss xchg edi,eax
  401fc7:	jnp    0x401f59
  401fc9:	mov    esp,0xb0c8dc28
  401fce:	mov    eax,0x392bc57
  401fd3:	cmp    BYTE PTR [esi+eax*8+0x56],bl
  401fd7:	inc    ebx
  401fd8:	ror    ebp,0x9
  401fdb:	(bad)  
  401fdd:	add    eax,0x8b0bae98
  401fe2:	stos   DWORD PTR es:[edi],eax
  401fe3:	pop    edx
  401fe4:	fidivr WORD PTR [edx-0x1769b234]
  401fea:	mov    edx,0x66d67f96
  401fef:	sar    DWORD PTR [edi],1
  401ff1:	sub    BYTE PTR [eax],bl
  401ff3:	lahf   
  401ff4:	gs mov ch,0x4e
  401ff7:	adc    BYTE PTR [ecx],dl
  401ff9:	nop
  401ffa:	stos   DWORD PTR es:[edi],eax
  401ffb:	or     BYTE PTR [esi],dl
  401ffd:	sahf   
  401ffe:	lods   al,BYTE PTR ds:[esi]
  401fff:	pop    esi
  402000:	fmul   QWORD PTR [eax-0x15]
  402003:	dec    ecx
  402004:	inc    ebx
  402005:	aam    0xe3
  402007:	jae    0x402058
  402009:	call   0xda98:0xc20dfe38
  402010:	mov    dl,0x8a
  402012:	xlat   BYTE PTR ds:[ebx]
  402013:	cmp    DWORD PTR [ebx+0x56],edi
  402016:	or     dl,BYTE PTR ss:[eax-0x26]
  40201a:	jmp    0x9567738b
  40201f:	fs cwde 
  402021:	dec    edi
  402022:	mov    ch,0x4e
  402024:	or     al,0xeb
  402026:	fld    TBYTE PTR [ebx-0x4a6173b8]
  40202c:	inc    edi
  40202d:	popf   
  40202e:	mov    DWORD PTR [esi-0x1],esp
  402031:	jne    0x401fc7
  402033:	inc    esp
  402034:	sub    eax,0xa798094
  402039:	ror    BYTE PTR [eax+edi*8],0xc6
  40203d:	jge    0x401fe9
  40203f:	sti    
  402040:	(bad)  
  402041:	pop    eax
  402042:	xchg   esi,eax
  402043:	and    esp,ecx
  402045:	daa    
  402046:	mov    ecx,0x1a714a3b
  40204b:	pop    ecx
  40204c:	xchg   esi,eax
  40204d:	dec    ebx
  40204e:	out    dx,al
  40204f:	(bad)  
  402050:	aam    0xc7
  402052:	mov    eax,ds:0xb6a0f01d
  402057:	repnz and DWORD PTR [ebp-0xec21a6d],edx
  40205e:	fdivr  st(2),st
  402060:	out    0x7f,eax
  402062:	fild   QWORD PTR [eax+0x1b]
  402065:	fcomp  DWORD PTR [ebp+0x42]
  402068:	pop    esp
  402069:	cdq    
  40206a:	stc    
  40206b:	push   ds
  40206c:	mov    esi,0x1171bdb1
  402071:	inc    ebp
  402072:	call   FWORD PTR [edx+0x13]
  402075:	pop    es
  402076:	jecxz  0x40205c
  402078:	gs out dx,al
  40207a:	daa    
  40207b:	xor    BYTE PTR [ebp-0x73],cl
  40207e:	jmp    DWORD PTR [ebx+ebx*4]
  402081:	enter  0x8caf,0x4c
  402085:	xchg   esi,eax
  402086:	call   0xecab:0x2475d605
  40208d:	mov    ebp,0x218fb55f
  402092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402093:	mov    ebp,0xd8ad5852
  402098:	add    DWORD PTR [edx+0x78],esp
  40209b:	movups xmm1,XMMWORD PTR [ebx-0x4cbe7d3f]
  4020a2:	xchg   edi,eax
  4020a3:	pop    ss
  4020a4:	and    esp,DWORD PTR [edi]
  4020a6:	mov    eax,esp
  4020a8:	and    DWORD PTR [edx-0x1e],edx
  4020ab:	pop    eax
  4020ac:	adc    DWORD PTR [esp+edi*8],ebx
  4020af:	inc    edi
  4020b0:	xchg   DWORD PTR [ebx],ecx
  4020b2:	add    dh,dl
  4020b4:	imul   ebp,DWORD PTR [ebx-0x2ca3c5c7],0xd789ecfe
  4020be:	xchg   ecx,eax
  4020bf:	xor    ebp,edi
  4020c1:	outs   dx,BYTE PTR ds:[esi]
  4020c2:	cmc    
  4020c3:	and    ah,al
  4020c5:	rol    DWORD PTR ds:0xa811c035,cl
  4020cb:	sbb    BYTE PTR [edi-0x73ce55e9],al
  4020d1:	(bad)  
  4020d2:	hlt    
  4020d3:	shr    ebp,cl
  4020d5:	and    DWORD PTR [edi],0xffffffd3
  4020d8:	data16 jmp 0x4020a1
  4020db:	ficomp WORD PTR [edi]
  4020dd:	lds    ecx,FWORD PTR [ecx+0x34e89ca0]
  4020e3:	push   esp
  4020e4:	jmp    0x2c104551
  4020e9:	jne    0x402075
  4020eb:	ror    BYTE PTR [ebp-0x583aa271],1
  4020f1:	fst    DWORD PTR [edx+0x4e]
  4020f4:	sar    DWORD PTR [eax-0x2a],cl
  4020f7:	push   ds
  4020f8:	es and al,0xce
  4020fb:	xchg   esi,eax
  4020fc:	xor    DWORD PTR [edx+edi*1+0x7eb70c1],0xffffffd4
  402104:	pop    ecx
  402105:	inc    esp
  402106:	popf   
  402107:	test   eax,0x6d9a7b90
  40210c:	jge    0x4020c4
  40210e:	clc    
  40210f:	loope  0x4020d3
  402111:	mov    ds:0x5d91f51e,al
  402116:	or     DWORD PTR [eax+0x6d],edi
  402119:	jno    0x4020f2
  40211b:	xor    DWORD PTR [eax+0x4fa76d17],esi
  402121:	mov    al,0x6f
  402123:	sbb    DWORD PTR [esi],ebp
  402125:	xor    BYTE PTR [bp-0x5e],cl
  402129:	rol    DWORD PTR [edx-0x21],0x49
  40212d:	idiv   BYTE PTR [ebp-0x205e74d5]
  402133:	xchg   DWORD PTR [esi],ecx
  402135:	inc    ebp
  402136:	pushf  
  402137:	or     eax,DWORD PTR [ebx-0x5eafaa12]
  40213d:	daa    
  40213e:	shl    BYTE PTR [eax],0x8c
  402141:	in     eax,dx
  402142:	sub    DWORD PTR [edx+eiz*1],edi
  402145:	std    
  402146:	dec    edi
  402147:	data16 into 
  402149:	scas   al,BYTE PTR es:[edi]
  40214a:	inc    ebp
  40214b:	(bad)  
  40214c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40214d:	xor    ecx,DWORD PTR [ecx+0x65fef0e7]
  402153:	scas   eax,DWORD PTR es:[edi]
  402154:	mov    bl,0x14
  402156:	sub    DWORD PTR [ecx],0xfffffff6
  402159:	stos   DWORD PTR es:[edi],eax
  40215a:	sub    BYTE PTR [esi-0x32dc4efd],bh
  402160:	imul   DWORD PTR [esi]
  402162:	addr16 add al,0x15
  402165:	(bad)  
  402166:	mov    ah,0x8
  402168:	shr    BYTE PTR [ebp-0x1f77e940],0xd
  40216f:	mov    esi,0xbc210dd1
  402174:	ss daa 
  402176:	xor    BYTE PTR [edx+edx*1+0x78],ah
  40217a:	sti    
  40217b:	test   al,0x91
  40217d:	cmp    DWORD PTR [edi],edx
  40217f:	push   ss
  402180:	shl    BYTE PTR [esi+0x2e5b1b8a],1
  402186:	int3   
  402187:	jl     0x402111
  402189:	jp     0x4021f1
  40218b:	mov    edi,DWORD PTR [esp+ebp*1+0x5ce234f8]
  402192:	adc    eax,DWORD PTR [esi-0x4b]
  402195:	jns    0x40213d
  402197:	sbb    eax,0x6ef75ef
  40219c:	sar    BYTE PTR [eax+0x40e774b6],cl
  4021a2:	and    BYTE PTR [edi+0x50fcd5df],al
  4021a8:	lock push ebx
  4021aa:	pusha  
  4021ab:	mov    bl,0x3e
  4021ad:	out    0x2c,eax
  4021af:	xor    al,0x27
  4021b1:	push   0x677e60ef
  4021b6:	jp     0x4021c9
  4021b8:	cmp    al,0x47
  4021ba:	call   0x71dc:0xc18da556
  4021c1:	pusha  
  4021c2:	xchg   edi,eax
  4021c3:	mov    bl,0x47
  4021c5:	cli    
  4021c6:	leave  
  4021c7:	out    dx,al
  4021c8:	push   cs
  4021c9:	pop    edi
  4021ca:	mov    dl,0x2c
  4021cc:	in     al,0x46
  4021ce:	dec    edx
  4021cf:	in     al,dx
  4021d0:	xor    eax,0xc1080798
  4021d5:	jne    0x40224a
  4021d7:	pop    eax
  4021d8:	push   ecx
  4021d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021da:	into   
  4021db:	push   esp
  4021dc:	repz adc al,0x4d
  4021df:	xor    DWORD PTR [ecx-0x16fb90e4],0xfffffffe
  4021e6:	mov    cl,0xcd
  4021e8:	mov    edx,?
  4021ea:	mov    esi,es
  4021ec:	pop    ss
  4021ed:	es mov edx,0xd344fae3
  4021f3:	pop    esi
  4021f4:	popa   
  4021f5:	loop   0x402252
  4021f7:	ja     0x40223a
  4021f9:	adc    edi,DWORD PTR [esi-0x71440fcd]
  4021ff:	and    esi,DWORD PTR [ecx-0x2]
  402202:	adc    eax,0x444bb550
  402207:	fild   WORD PTR [eax+0x28]
  40220a:	in     eax,dx
  40220b:	cmc    
  40220c:	push   eax
  40220d:	test   DWORD PTR [eax],ebx
  40220f:	jbe    0x4021cd
  402211:	mov    dl,0x90
  402213:	bound  edi,QWORD PTR [ebp+0x6ac83be4]
  402219:	sahf   
  40221a:	sbb    BYTE PTR [edx+0x46c2e51b],0x5f
  402221:	das    
  402222:	push   eax
  402223:	lods   eax,DWORD PTR ds:[esi]
  402224:	add    al,0x14
  402226:	inc    esp
  402227:	std    
  402228:	test   DWORD PTR [ebx],ecx
  40222a:	add    ch,BYTE PTR [eax-0x369e7148]
  402230:	mov    eax,ds:0x5f5309d
  402235:	pushf  
  402236:	pop    ds
  402237:	in     eax,dx
  402238:	or     DWORD PTR [ecx-0x18f22726],eax
  40223e:	sub    edx,DWORD PTR [esp+ebx*1+0x7bf3f88a]
  402245:	dec    ecx
  402246:	out    0xd1,al
  402248:	sub    dl,BYTE PTR [ecx+0x11a441aa]
  40224e:	into   
  40224f:	aam    0x8c
  402251:	inc    ecx
  402252:	popf   
  402253:	nop
  402254:	pop    es
  402255:	add    eax,DWORD PTR [ebp-0x62]
  402258:	rcr    BYTE PTR [ecx+0x44],cl
  40225b:	mov    BYTE PTR [edi+0x39],bh
  40225e:	(bad)  
  40225f:	fimul  WORD PTR [edi-0x3f]
  402262:	cli    
  402263:	sahf   
  402264:	or     al,0x30
  402266:	int    0x6
  402268:	adc    eax,ecx
  40226a:	xor    eax,0x1ef3c517
  40226f:	mov    ds:0x405a3436,eax
  402274:	adc    DWORD PTR [esi-0x1a7fc837],0x6
  40227b:	imul   ebx
  40227d:	dec    ebx
  40227e:	push   0x71
  402280:	shl    DWORD PTR [edi+0x31],1
  402283:	lock sti 
  402285:	je     0x402286
  402287:	cli    
  402288:	dec    ebx
  402289:	cdq    
  40228a:	fild   WORD PTR [esi-0x1d1a0fbd]
  402290:	jp     0x402281
  402292:	jb     0x4022cb
  402294:	sbb    eax,0x5a6b120c
  402299:	sbb    DWORD PTR [ebp+0x402e085f],edi
  40229f:	cwde   
  4022a0:	or     esi,DWORD PTR [ebx+0x45276e55]
  4022a6:	ins    DWORD PTR es:[edi],dx
  4022a7:	jne    0x40224e
  4022a9:	cwde   
  4022aa:	sub    eax,0x6eeaf80d
  4022af:	pop    ss
  4022b0:	hlt    
  4022b1:	int    0xfe
  4022b3:	dec    esi
  4022b4:	sub    ah,BYTE PTR [ebx]
  4022b6:	sbb    DWORD PTR [ebp-0x1a],ebx
  4022b9:	sbb    al,BYTE PTR [eax]
  4022bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022bc:	data16 fiadd WORD PTR [esi]
  4022bf:	jnp    0x40229f
  4022c1:	je     0x402281
  4022c3:	cmc    
  4022c4:	xchg   ecx,eax
  4022c5:	(bad)  
  4022c6:	sti    
  4022c7:	test   DWORD PTR [edi+0xcde38d7],edi
  4022cd:	pop    esp
  4022ce:	adc    ah,bl
  4022d0:	pop    ds
  4022d1:	inc    ebp
  4022d2:	fwait
  4022d3:	arpl   WORD PTR [edx-0x23],cx
  4022d6:	ds xchg ecx,eax
  4022d8:	int    0xc6
  4022da:	sar    BYTE PTR [bp+si],cl
  4022dd:	push   es
  4022de:	fcom   DWORD PTR [eax-0x3]
  4022e1:	clc    
  4022e2:	stos   DWORD PTR es:[edi],eax
  4022e3:	and    ebx,DWORD PTR [eax]
  4022e5:	xchg   ebx,eax
  4022e6:	jne    0x402290
  4022e8:	push   eax
  4022e9:	inc    esp
  4022ea:	(bad)  
  4022eb:	xchg   ebx,eax
  4022ec:	push   ebx
  4022ed:	push   ss
  4022ee:	mov    edx,0xe9854979
  4022f3:	jnp    0x402315
  4022f5:	pop    ss
  4022f6:	jne    0x402323
  4022f8:	hlt    
  4022f9:	retf   0x60a8
  4022fc:	pop    esi
  4022fd:	inc    esp
  4022fe:	jno    0x402363
  402300:	pop    edi
  402301:	fist   DWORD PTR [ebx]
  402303:	(bad)  
  402304:	lock in al,dx
  402306:	retf   
  402307:	(bad)  
  402308:	mov    esi,0x845ad673
  40230d:	in     eax,0x68
  40230f:	jl     0x40237e
  402311:	retf   
  402312:	and    ecx,DWORD PTR [edi+0x6]
  402315:	sbb    DWORD PTR [eax],edi
  402317:	pop    edi
  402318:	fdivrp st(2),st
  40231a:	or     ecx,eax
  40231c:	jmp    0x1754:0x60deda25
  402323:	inc    ecx
  402324:	jge    0x40231f
  402326:	rcl    BYTE PTR [edx+0x1fd02039],0x22
  40232d:	retf   0xe8a2
  402330:	loopne 0x402366
  402332:	test   al,0x18
  402334:	cli    
  402335:	sbb    ch,BYTE PTR [edx+eax*1]
  402338:	les    ebx,FWORD PTR [edx-0x6a]
  40233b:	mov    esp,0xb8475f22
  402340:	scas   al,BYTE PTR es:[edi]
  402341:	and    al,0x6e
  402343:	(bad)  
  402344:	mov    ds:0xa4a60828,eax
  402349:	inc    ebp
  40234a:	fucomi st,st(2)
  40234c:	ds mov bh,ch
  40234f:	(bad)  
  402350:	mov    edi,0x2787370c
  402355:	and    DWORD PTR [ecx-0x8],edx
  402358:	inc    edx
  402359:	mov    ebp,esi
  40235b:	and    al,0x65
  40235d:	ds out dx,eax
  40235f:	xor    al,0x88
  402361:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402362:	dec    esi
  402363:	inc    ebx
  402364:	xor    DWORD PTR [esi-0x29],eax
  402367:	and    DWORD PTR [ebp*2+0x3551ea6f],ecx
  40236e:	and    BYTE PTR [ecx],al
  402370:	sbb    eax,0xb79d69b2
  402375:	pop    ecx
  402376:	loopne 0x402348
  402378:	jmp    0x40232b
  40237a:	sbb    eax,0x45133586
  40237f:	or     BYTE PTR [ecx-0x3ec1a23c],dh
  402385:	adc    ecx,edx
  402387:	or     DWORD PTR [esi-0x290f02bf],ecx
  40238d:	imul   ecx,DWORD PTR [ebp*2+0x3a0fd6bd],0xadf2f96a
  402398:	xchg   esp,eax
  402399:	cmp    bh,0x9a
  40239c:	rol    esi,cl
  40239e:	dec    edx
  40239f:	xor    al,0xd1
  4023a1:	test   BYTE PTR [esp+eiz*8],cl
  4023a4:	mov    DWORD PTR [ebx],0xd50e2ecb
  4023aa:	sbb    DWORD PTR [ecx],0xffffffaf
  4023ad:	mov    bh,0xe9
  4023af:	test   eax,0x710a0188
  4023b4:	scas   eax,DWORD PTR es:[edi]
  4023b5:	mov    ah,0x26
  4023b7:	rcr    ah,0x9a
  4023ba:	add    eax,0x2d16e59
  4023bf:	inc    eax
  4023c0:	call   0xaf14:0x5008831c
  4023c7:	and    al,0x3d
  4023c9:	lock sbb dl,0xf0
  4023cd:	xchg   ebp,eax
  4023ce:	out    0xe2,eax
  4023d0:	test   eax,0xc0fc70de
  4023d5:	mov    cl,0xb6
  4023d7:	jmp    0x4023cf
  4023d9:	inc    edi
  4023da:	add    DWORD PTR [edx+0x15],0xffffff98
  4023de:	call   0x4ad49265
  4023e3:	sbb    cl,BYTE PTR [ebx]
  4023e5:	inc    eax
  4023e6:	call   DWORD PTR [eax+edi*4-0x49]
  4023ea:	mov    cl,0x9f
  4023ec:	pop    es
  4023ed:	push   edi
  4023ee:	mov    eax,0x1999a6be
  4023f3:	push   es
  4023f4:	or     al,0xd6
  4023f6:	fidiv  DWORD PTR [esi]
  4023f8:	jne    0x402467
  4023fa:	out    dx,al
  4023fb:	stc    
  4023fc:	int3   
  4023fd:	mov    edi,0x8e805ad9
  402402:	xchg   DWORD PTR [edx],ecx
  402404:	mov    bh,0x4f
  402406:	and    al,0xd0
  402408:	jmp    0x714c:0x6c1eb8ea
  40240f:	push   es
  402410:	retf   
  402411:	pop    es
  402412:	push   ds
  402413:	mov    ds,WORD PTR [ebx+0x7eafaf9]
  402419:	cmp    DWORD PTR [ecx+0xea3af3d],eax
  40241f:	out    0x6b,al
  402421:	test   BYTE PTR [ecx],ch
  402423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402424:	or     ecx,DWORD PTR [ebx]
  402426:	xchg   ebx,eax
  402427:	popa   
  402428:	or     BYTE PTR [ebx],bl
  40242a:	std    
  40242b:	push   esp
  40242c:	push   ss
  40242d:	adc    BYTE PTR [ebx+esi*4+0x5c9cf145],ah
  402434:	jecxz  0x4023eb
  402436:	or     al,0x5
  402438:	icebp  
  402439:	jne    0x4024a7
  40243b:	and    esp,edx
  40243d:	push   ecx
  40243e:	ins    DWORD PTR es:[edi],dx
  40243f:	out    dx,al
  402440:	psadbw mm4,QWORD PTR [edi*2-0x7a0d590a]
  402448:	add    BYTE PTR [ecx],al
  40244a:	dec    eax
  40244b:	call   0x2e35bf7
  402450:	jge    0x4024b3
  402452:	fisttp WORD PTR [esi]
  402454:	jae    0x4023e5
  402456:	push   cs
  402457:	test   DWORD PTR [edi],0x8963c26d
  40245d:	mov    ds:0x30e73727,eax
  402462:	jo     0x4024b0
  402464:	xor    eax,edi
  402466:	or     al,0x7d
  402468:	push   eax
  402469:	outs   dx,BYTE PTR ds:[esi]
  40246a:	mov    ?,WORD PTR [eax]
  40246c:	scas   al,BYTE PTR es:[edi]
  40246d:	out    dx,al
  40246e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40246f:	xchg   ecx,eax
  402470:	dec    ebp
  402471:	clc    
  402472:	sbb    dh,bl
  402474:	xor    eax,0xc7bdcb18
  402479:	jne    0x402410
  40247b:	mov    bl,0x3e
  40247d:	scas   al,BYTE PTR es:[edi]
  40247e:	mov    edi,0xd65740a
  402483:	pop    ds
  402484:	cmp    cl,BYTE PTR [ebp-0x161db9cb]
  40248a:	sar    DWORD PTR [ebp-0x23],1
  40248d:	popf   
  40248e:	push   cs
  40248f:	mov    ah,0x85
  402491:	lock popf 
  402493:	sbb    dl,dh
  402495:	mov    esp,0x256a0a33
  40249a:	je     0x4024b0
  40249c:	mov    esp,0x41704c48
  4024a1:	stos   BYTE PTR es:[edi],al
  4024a2:	leave  
  4024a3:	or     edi,esi
  4024a5:	sub    esi,DWORD PTR [ebx-0x47d710f0]
  4024ab:	push   esi
  4024ac:	mov    DWORD PTR ds:0x8bb59d08,esp
  4024b2:	push   ebp
  4024b3:	mov    al,ds:0x4f57ec7d
  4024b8:	pop    edi
  4024b9:	pop    ds
  4024ba:	icebp  
  4024bb:	mov    esi,0xe13a5bbc
  4024c0:	xchg   ebx,eax
  4024c1:	xor    al,0xe2
  4024c3:	jo     0x4024d2
  4024c5:	add    DWORD PTR gs:[esi+0x6fd043fd],edi
  4024cc:	jno    0x40245b
  4024ce:	outs   dx,BYTE PTR ds:[esi]
  4024cf:	jb     0x40253f
  4024d1:	mov    dl,0x2a
  4024d3:	xchg   DWORD PTR [eax+0x6b],ebp
  4024d6:	rcl    DWORD PTR [esi+0x3c],0xc7
  4024da:	iret   
  4024db:	sbb    DWORD PTR [edi+ebx*4-0x3bac3c13],ebp
  4024e2:	xor    ebx,DWORD PTR [esi-0x38ebd93c]
  4024e8:	sti    
  4024e9:	shr    BYTE PTR [edx+0x19c72767],cl
  4024ef:	fistp  QWORD PTR [eax-0x62]
  4024f2:	sahf   
  4024f3:	mov    dl,dh
  4024f5:	(bad)  
  4024f6:	and    esp,DWORD PTR [ebp-0x7b]
  4024f9:	push   ebp
  4024fa:	shl    BYTE PTR [ebp-0x5d],0x18
  4024fe:	dec    ecx
  4024ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402500:	xchg   edi,eax
  402501:	das    
  402502:	xchg   edi,eax
  402503:	xor    bl,dl
  402505:	fist   DWORD PTR [ebx]
  402507:	bswap  ecx
  402509:	mov    ebp,0xd4e974a
  40250e:	push   ss
  40250f:	int3   
  402510:	add    al,0xca
  402512:	es mov dl,0xf5
  402515:	inc    ebx
  402516:	mov    ah,0x8a
  402518:	mov    bl,0x3b
  40251a:	mov    eax,0x90db9387
  40251f:	jmp    0x3fd8:0x175472f3
  402526:	push   ss
  402527:	popa   
  402528:	in     al,0xd1
  40252a:	loope  0x4024cd
  40252c:	sub    ebx,DWORD PTR [esi]
  40252e:	mov    bh,0xfe
  402530:	mov    ebp,DWORD PTR ds:0xe3f0f687
  402536:	test   eax,0xa1d824df
  40253b:	mov    ebp,0x257a977b
  402540:	fst    st(0)
  402542:	mov    WORD PTR [eax+0x384d13fb],?
  402548:	mov    ds,WORD PTR [eax]
  40254a:	lds    esp,FWORD PTR [ebx-0x6b676d7b]
  402550:	fwait
  402551:	cld    
  402552:	and    BYTE PTR [ecx],dh
  402554:	out    0x51,al
  402556:	(bad)  
  402557:	jnp    0x4024e0
  402559:	mov    esi,0x7c0eeb24
  40255e:	push   esp
  40255f:	je     0x402549
  402561:	pop    esp
  402562:	xchg   BYTE PTR [edx-0x613e14f1],al
  402568:	xor    bl,dh
  40256a:	(bad)  
  40256b:	dec    cl
  40256d:	outs   dx,BYTE PTR ds:[esi]
  40256e:	sbb    al,0x78
  402570:	sub    edi,DWORD PTR [edx+esi*4+0x3a]
  402574:	jecxz  0x40258f
  402576:	sub    ecx,ecx
  402578:	mov    ah,0x8a
  40257a:	call   0xc22b:0x3d39a4d5
  402581:	xor    ch,BYTE PTR [ecx]
  402583:	adc    BYTE PTR [ebp+0x11a19fdc],ch
  402589:	(bad)  
  40258b:	mov    esi,0x1cecd6b8
  402590:	or     al,0x59
  402592:	pop    es
  402593:	push   esp
  402594:	cli    
  402595:	imul   esp,DWORD PTR [ebx-0xd69ea50],0x514a452
  40259f:	add    dh,BYTE PTR [ebx]
  4025a1:	xor    BYTE PTR [eax-0x61c546c9],bl
  4025a7:	xchg   ebx,eax
  4025a8:	sbb    al,0xd1
  4025aa:	jo     0x402609
  4025ac:	sbb    DWORD PTR [ecx+0x4e17becc],0xc59d411c
  4025b6:	mov    esp,0x5adce753
  4025bb:	cmp    dl,0x6d
  4025be:	aam    0x90
  4025c0:	dec    eax
  4025c1:	call   0x7a6a8d4d
  4025c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025c7:	lods   eax,DWORD PTR ds:[esi]
  4025c8:	out    0x45,al
  4025ca:	adc    eax,0x7efaaebc
  4025cf:	push   ebx
  4025d1:	xlat   BYTE PTR ds:[ebx]
  4025d2:	scas   al,BYTE PTR es:[edi]
  4025d3:	int    0xf2
  4025d5:	int3   
  4025d6:	and    al,0x58
  4025d8:	loope  0x402659
  4025da:	jg     0x4025f4
  4025dc:	sub    esi,DWORD PTR [eax]
  4025de:	scas   al,BYTE PTR es:[edi]
  4025df:	outs   dx,DWORD PTR ds:[esi]
  4025e0:	cmp    ebx,DWORD PTR [edi]
  4025e2:	adc    BYTE PTR [eax-0x435304d2],dh
  4025e8:	gs sti 
  4025ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025eb:	aam    0xf1
  4025ed:	add    dh,bl
  4025ef:	and    bh,bh
  4025f1:	mov    ecx,0x60b85085
  4025f6:	test   al,0x3f
  4025f8:	ins    BYTE PTR es:[edi],dx
  4025f9:	jp     0x402613
  4025fb:	(bad)  
  4025fc:	sbb    eax,0xeddc78d9
  402601:	jns    0x40259f
  402603:	add    BYTE PTR [esi+0xf],ah
  402606:	loop   0x4025f3
  402608:	lea    eax,[esi-0x33]
  40260b:	jo     0x402593
  40260d:	shr    ch,0xf5
  402610:	xor    BYTE PTR [edi-0x5210148],ah
  402616:	and    eax,edi
  402618:	les    edi,FWORD PTR [esi-0x32]
  40261b:	sbb    al,BYTE PTR [edi]
  40261d:	outs   dx,BYTE PTR ds:[esi]
  40261e:	sub    bl,BYTE PTR [ebp-0x14]
  402621:	pop    ss
  402622:	mov    cs,eax
  402624:	inc    ecx
  402625:	or     esp,ecx
  402627:	cmp    esi,DWORD PTR [ebx-0x75]
  40262a:	int3   
  40262b:	push   edi
  40262c:	mov    ds:0x8ed0531c,al
  402631:	test   eax,0x61288148
  402636:	sbb    BYTE PTR ds:0x39d3d97a,bh
  40263c:	and    bh,BYTE PTR [esp+edx*2-0x47]
  402640:	jne    0x4025c8
  402642:	hlt    
  402643:	fist   WORD PTR [esi-0x4d]
  402646:	fidivr DWORD PTR [esi-0x79]
  402649:	or     edx,DWORD PTR [ecx]
  40264b:	iret   
  40264c:	scas   eax,DWORD PTR es:[edi]
  40264d:	push   ebx
  40264e:	add    ebx,ebx
  402650:	sub    al,BYTE PTR [ebp-0x36]
  402653:	pop    ecx
  402654:	bound  esi,QWORD PTR [ebp+eiz*8+0x35]
  402658:	sub    DWORD PTR [ebx],ecx
  40265a:	in     eax,0xa
  40265c:	ja     0x402666
  40265e:	std    
  40265f:	sbb    BYTE PTR [eax+0x6a],dl
  402662:	mov    bl,0x49
  402664:	loopne 0x40264a
  402666:	xor    esi,DWORD PTR [edx+0x287ed4a2]
  40266c:	jge    0x4025f9
  40266e:	mov    edi,0xc39abad2
  402673:	push   ss
  402674:	pop    es
  402675:	inc    ebx
  402676:	out    0x5,eax
  402678:	xchg   ecx,eax
  402679:	jae    0x402683
  40267b:	cld    
  40267c:	out    0x52,eax
  40267e:	sbb    bh,BYTE PTR [ecx+0x2af4d4ec]
  402684:	pop    edi
  402685:	and    DWORD PTR [edi-0x6fb7ecc2],ecx
  40268b:	clc    
  40268c:	ja     0x4026b2
  40268e:	push   0x4b992b1b
  402693:	call   0xbd494281
  402698:	mov    esp,0xd73057c0
  40269d:	push   ss
  40269e:	outs   dx,BYTE PTR ds:[esi]
  40269f:	aas    
  4026a0:	lahf   
  4026a1:	into   
  4026a2:	jp     0x4026fd
  4026a4:	daa    
  4026a5:	(bad)  
  4026a6:	fdiv   QWORD PTR [esi-0x79a570e8]
  4026ac:	pop    es
  4026ad:	mov    ebp,DWORD PTR [esi]
  4026af:	adc    ch,BYTE PTR [eax+ebp*4+0x46]
  4026b3:	ds add eax,0x1244e036
  4026b9:	cmp    ebx,DWORD PTR [ecx+0x1c86ad59]
  4026bf:	or     eax,0x43f8aa38
  4026c4:	leave  
  4026c5:	mov    ds:0x6a17cf,eax
  4026ca:	inc    esp
  4026cb:	mov    dh,0xf3
  4026cd:	dec    ebx
  4026ce:	lea    eax,[eax+0x75530fd2]
  4026d4:	mov    eax,0xb1772611
  4026d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026da:	call   0x5435:0x10d798dd
  4026e1:	adc    edi,DWORD PTR [eax+0x31]
  4026e4:	mov    al,ah
  4026e6:	push   ebx
  4026e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026e8:	iret   
  4026e9:	test   DWORD PTR [esi+0x16],ecx
  4026ec:	push   es
  4026ed:	in     eax,0x18
  4026ef:	cli    
  4026f0:	xchg   eax,edi
  4026f2:	imul   ebx,DWORD PTR [eax],0x64
  4026f5:	cmp    ecx,eax
  4026f7:	mov    dl,0xee
  4026f9:	cs jne 0x4026f7
  4026fc:	jnp    0x40276c
  4026fe:	leave  
  4026ff:	xor    dh,BYTE PTR [ecx]
  402701:	(bad)  
  402702:	jno    0x402773
  402704:	dec    ebx
  402705:	pop    ds
  402706:	mov    eax,ds:0xeb0db7d6
  40270b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40270c:	and    ah,BYTE PTR [edi+ebp*8+0x1b]
  402710:	lea    esp,[esi]
  402712:	inc    edi
  402713:	fwait
  402714:	push   cs
  402715:	out    dx,al
  402716:	sub    cl,BYTE PTR [ecx]
  402718:	outs   dx,DWORD PTR ds:[esi]
  402719:	out    dx,eax
  40271a:	test   cl,ch
  40271c:	sub    dh,BYTE PTR [edi]
  40271e:	mov    esp,0xd2de74bd
  402723:	jge    0x4027a3
  402725:	or     eax,0x34007efb
  40272a:	and    ebp,DWORD PTR ds:0x572f65cc
  402730:	fisub  DWORD PTR ds:[ecx]
  402733:	lock add eax,0xc2aab096
  402739:	stc    
  40273a:	lahf   
  40273b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40273c:	ss push eax
  40273e:	icebp  
  40273f:	sahf   
  402740:	pop    ecx
  402741:	adc    eax,0x7e8f3b9a
  402746:	push   ecx
  402747:	adc    eax,0x9e8f2b97
  40274c:	or     ah,BYTE PTR [esp+edi*8-0x72]
  402750:	popf   
  402751:	mov    DWORD PTR [ecx+0x74c8c276],edx
  402757:	push   es
  402758:	(bad)  
  402759:	int    0xbf
  40275b:	cld    
  40275c:	arpl   WORD PTR [edx-0x749e70fb],bx
  402762:	rol    BYTE PTR [ecx],cl
  402764:	les    ebp,FWORD PTR [ebp-0x5a]
  402767:	sar    DWORD PTR [eax],1
  402769:	arpl   WORD PTR [eax+edx*8+0x5b],cx
  40276d:	mov    bl,0xd
  40276f:	loopne 0x4027b3
  402771:	adc    DWORD PTR [eax],0xc65abfe4
  402777:	repnz or ecx,DWORD PTR [esi*2+0x5a703b31]
  40277f:	loop   0x4027ef
  402781:	and    BYTE PTR [ebx-0x7e],0xdb
  402785:	imul   ecx,DWORD PTR [eax],0x57
  402788:	rol    DWORD PTR [edi-0x364fd8dc],1
  40278e:	sbb    eax,0x718aa089
  402793:	or     BYTE PTR [eax+0x19],0xb1
  402797:	shr    DWORD PTR [ebp-0x2f],0x38
  40279b:	dec    esp
  40279c:	sub    al,ch
  40279e:	xchg   edi,eax
  40279f:	test   BYTE PTR [ecx-0x3c],0xaf
  4027a3:	push   ecx
  4027a4:	inc    ebx
  4027a5:	rcr    edi,cl
  4027a7:	call   0x2993:0xb0aef990
  4027ae:	and    BYTE PTR [edi],bl
  4027b0:	in     eax,dx
  4027b1:	cs pop ds
  4027b3:	and    BYTE PTR [esi],cl
  4027b5:	retf   0x7cc5
  4027b8:	push   ds
  4027b9:	xchg   BYTE PTR [ebp-0x7],ah
  4027bc:	push   0x63e5761c
  4027c1:	fst    QWORD PTR [ebx+0x35]
  4027c4:	scas   al,BYTE PTR es:[edi]
  4027c5:	adc    al,0xf2
  4027c7:	xchg   ebx,eax
  4027c8:	stos   DWORD PTR es:[edi],eax
  4027c9:	push   esp
  4027ca:	pop    es
  4027cb:	mov    ch,0x7f
  4027cd:	mov    ebp,0xd68bfb80
  4027d2:	pop    eax
  4027d3:	(bad)  
  4027d4:	imul   esi,DWORD PTR [ecx-0x1860ccd7],0xffffff84
  4027db:	sub    cl,bl
  4027dd:	inc    BYTE PTR [ebx-0x2f]
  4027e0:	fidiv  DWORD PTR ds:0x3f9b7c7e
  4027e6:	push   ss
  4027e7:	inc    ebp
  4027e8:	xchg   DWORD PTR gs:[ebp+0x7a9fccc2],esp
  4027ef:	jecxz  0x4027b7
  4027f1:	xchg   esi,eax
  4027f2:	push   esp
  4027f3:	add    ch,BYTE PTR cs:[esi+0x5d]
  4027f7:	(bad)  
  4027f8:	loop   0x402836
  4027fa:	pop    ds
  4027fb:	pop    ebp
  4027fc:	push   es
  4027fd:	mov    dh,0x17
  4027ff:	in     eax,0x8f
  402801:	mov    ecx,0x22bc60ef
  402806:	jle    0x40282d
  402808:	pusha  
  402809:	pop    eax
  40280a:	lods   eax,DWORD PTR ds:[esi]
  40280b:	push   esp
  40280c:	mov    ds,esi
  40280e:	cmp    DWORD PTR [edx],0x1d1c52ec
  402814:	mov    ah,0x4
  402816:	retf   
  402817:	mov    DWORD PTR [eax+edx*4],esp
  40281a:	sub    BYTE PTR [edi-0x75a3d8a3],al
  402820:	jbe    0x4027ee
  402822:	pushf  
  402823:	aas    
  402824:	(bad)  
  402826:	stos   DWORD PTR es:[edi],eax
  402827:	test   BYTE PTR [edx],bl
  402829:	sub    al,0x6f
  40282b:	jecxz  0x4027e3
  40282d:	les    ebp,FWORD PTR [edx]
  40282f:	inc    ecx
  402830:	mov    bl,0x2f
  402832:	mov    edx,0xb45a124a
  402837:	icebp  
  402838:	add    al,0x6d
  40283a:	or     dh,BYTE PTR [edx+0x7e]
  40283d:	mov    cl,0x91
  40283f:	xchg   ebp,eax
  402840:	shl    DWORD PTR [edi],0x5e
  402843:	push   es
  402844:	and    al,0xb5
  402846:	or     eax,0x553fd6e6
  40284b:	shl    edi,1
  40284d:	mov    esi,0x6dbfc261
  402852:	popf   
  402853:	pop    eax
  402854:	pop    ecx
  402855:	sbb    BYTE PTR [edx-0x18],ah
  402858:	aam    0xb
  40285a:	inc    edx
  40285b:	mov    eax,ds:0xcad92d49
  402860:	out    0xf7,eax
  402862:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402863:	xlat   BYTE PTR ds:[ebx]
  402864:	ja     0x402888
  402866:	push   ebp
  402867:	mov    DWORD PTR [esi+eiz*2],eax
  40286a:	mov    edx,0xef3aa717
  40286f:	xchg   dh,ch
  402871:	iret   
  402872:	in     al,dx
  402873:	dec    esp
  402874:	pop    ss
  402875:	arpl   WORD PTR [eax-0x2a2612a0],si
  40287b:	jno    0x40282d
  40287d:	in     al,dx
  40287e:	rol    dh,cl
  402880:	das    
  402881:	aas    
  402882:	mov    WORD PTR [ebx],gs
  402884:	loopne 0x402864
  402886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402887:	pop    ecx
  402888:	sub    al,0xd6
  40288a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40288b:	and    al,0x56
  40288d:	mov    ebx,DWORD PTR ds:0x67a4bc76
  402893:	push   eax
  402894:	daa    
  402895:	xchg   ebp,eax
  402896:	xchg   edi,eax
  402897:	mov    edx,0x20b181ad
  40289c:	iret   
  40289d:	repz fimul DWORD PTR [ebx]
  4028a0:	xchg   esi,eax
  4028a1:	mov    BYTE PTR [edi-0x23],dh
  4028a4:	mov    ebp,DWORD PTR [eax-0x2550186e]
  4028aa:	xlat   BYTE PTR ds:[ebx]
  4028ab:	lds    esi,FWORD PTR [esi-0x1d]
  4028ae:	ss jecxz 0x402850
  4028b1:	imul   esp,DWORD PTR [eax-0x4],0x238bcbd9
  4028b8:	fst    st(5)
  4028ba:	inc    eax
  4028bb:	pushf  
  4028bc:	in     eax,0x61
  4028be:	dec    esp
  4028bf:	int    0xa2
  4028c1:	push   ecx
  4028c2:	dec    edi
  4028c3:	in     al,0xba
  4028c5:	xor    edi,DWORD PTR [ebp-0x6af48dd3]
  4028cb:	hlt    
  4028cc:	cs adc al,dl
  4028cf:	push   esi
  4028d0:	mov    WORD PTR [esi+0xd],fs
  4028d3:	lods   al,BYTE PTR ds:[esi]
  4028d4:	fnstenv [eax]
  4028d6:	test   edx,ecx
  4028d8:	sar    BYTE PTR [edx-0x4c],0xdd
  4028dc:	mov    esi,0xd18185e3
  4028e1:	in     al,dx
  4028e2:	cld    
  4028e3:	inc    ebx
  4028e4:	or     bl,cl
  4028e6:	int    0xce
  4028e8:	add    eax,0x1a973b29
  4028ed:	lahf   
  4028ee:	pop    ds
  4028ef:	cli    
  4028f0:	add    ah,dl
  4028f2:	in     eax,dx
  4028f3:	dec    eax
  4028f4:	sar    BYTE PTR [esi+ecx*1+0x349e9a68],cl
  4028fb:	and    edi,DWORD PTR [edx]
  4028fd:	xchg   BYTE PTR [esi-0x3f],dh
  402900:	rcr    BYTE PTR [ecx],0x49
  402903:	ss adc eax,0x5bbb8445
  402909:	jbe    0x4028e5
  40290b:	pop    esp
  40290c:	test   BYTE PTR [edi+0x6996a115],dl
  402912:	int    0xf9
  402914:	call   0xb1528eba
  402919:	(bad)
  40291c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40291d:	sbb    esp,ebx
  40291f:	xchg   edx,eax
  402920:	into   
  402921:	loope  0x4028ba
  402923:	push   edx
  402924:	hlt    
  402925:	ja     0x402902
  402927:	jl     0x40293c
  402929:	std    
  40292a:	lahf   
  40292b:	inc    edx
  40292c:	sub    dl,al
  40292e:	sub    BYTE PTR [esi+0x3ece3082],0x97
  402935:	dec    ecx
  402936:	jae    0x4029a2
  402938:	push   ebp
  402939:	push   ds
  40293a:	adc    BYTE PTR [ecx-0x18a128c2],ch
  402940:	jno    0x40299e
  402942:	ret    0x9b35
  402945:	cmp    ecx,DWORD PTR [ebx+0x1c98d136]
  40294b:	sub    dh,BYTE PTR [edx-0x6557a426]
  402951:	cdq    
  402952:	(bad)  
  402953:	sub    eax,0xc441f0a6
  402958:	seta   BYTE PTR [ecx-0x60]
  40295c:	fs inc edi
  40295e:	cmp    edi,0x2d830f60
  402964:	ss jae 0x402954
  402967:	mov    dh,0x92
  402969:	adc    DWORD PTR [ecx-0x5418ff03],esp
  40296f:	out    dx,eax
  402970:	retf   0x1729
  402973:	jo     0x40291c
  402975:	leave  
  402976:	sti    
  402977:	and    edi,DWORD PTR [ebx+0x6e]
  40297a:	mov    ah,0x1
  40297c:	dec    ecx
  40297d:	xor    BYTE PTR [edi+0x5f],dh
  402980:	pop    eax
  402981:	int3   
  402982:	add    BYTE PTR [esi],cl
  402984:	mov    ds:0xcc82387e,eax
  402989:	lahf   
  40298a:	or     BYTE PTR [ebx-0x78],0x1e
  40298e:	(bad)  
  40298f:	fsubr  QWORD PTR [ebp+ecx*8+0x3ebd029]
  402996:	push   ecx
  402997:	test   al,0xc0
  402999:	add    BYTE PTR [esi-0xc],dh
  40299c:	dec    edx
  40299d:	sub    al,0x59
  40299f:	ror    ebp,1
  4029a1:	out    0x2a,eax
  4029a3:	(bad)  
  4029a4:	pop    ds
  4029a5:	daa    
  4029a6:	add    al,0x16
  4029a8:	xchg   ebp,eax
  4029a9:	mov    ecx,0xb035f24f
  4029ae:	dec    eax
  4029af:	or     bl,BYTE PTR [edi+0x72]
  4029b2:	xchg   DWORD PTR [edi+0x16],edi
  4029b5:	lds    edi,FWORD PTR [edx]
  4029b7:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029b9:	pop    ecx
  4029ba:	xor    DWORD PTR [ecx],edi
  4029bc:	loopne 0x402a34
  4029be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029bf:	out    dx,al
  4029c0:	inc    edi
  4029c1:	loopne 0x402a25
  4029c3:	test   eax,0xca72411
  4029c8:	shl    ah,1
  4029ca:	(bad)  
  4029cb:	sti    
  4029cc:	jbe    0x4029e6
  4029ce:	or     eax,0x19d64eb7
  4029d3:	cmp    DWORD PTR [esi],eax
  4029d5:	(bad)  
  4029d6:	and    DWORD PTR [edx+ebp*8],edx
  4029d9:	loop   0x402a32
  4029db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029dc:	(bad)  
  4029dd:	push   ebx
  4029de:	aaa    
  4029df:	(bad)  
  4029e1:	fbstp  TBYTE PTR [edx+ebx*8-0x5e89ea37]
  4029e8:	ins    BYTE PTR es:[edi],dx
  4029e9:	mov    al,0xd8
  4029eb:	jmp    0xe6fd:0x6e2dcdfd
  4029f2:	mov    dh,0x3e
  4029f4:	arpl   ax,ax
  4029f6:	pop    esp
  4029f7:	leave  
  4029f8:	sar    DWORD PTR [ecx+0x4730a54a],0xff
  4029ff:	inc    ecx
  402a00:	push   esi
  402a01:	push   ds
  402a02:	aaa    
  402a03:	cmp    dl,ch
  402a05:	jb     0x4029e5
  402a07:	jns    0x4029bb
  402a09:	mov    dl,0x51
  402a0b:	data16 je 0x4029ed
  402a0e:	push   es
  402a0f:	mov    ah,BYTE PTR [edx]
  402a11:	shr    DWORD PTR [ebx+0x37],cl
  402a14:	push   es
  402a15:	sbb    ebx,DWORD PTR [eax+0x11]
  402a18:	jo     0x4029eb
  402a1a:	daa    
  402a1b:	xor    BYTE PTR [edi-0x18238a02],0x7d
  402a22:	shl    al,1
  402a24:	jle    0x402a45
  402a26:	jmp    0xa946:0x9c03aee6
  402a2d:	stos   BYTE PTR es:[edi],al
  402a2e:	mov    ebp,0xcf544e90
  402a33:	stos   DWORD PTR es:[edi],eax
  402a34:	data16 mov ah,0x6
  402a37:	push   ebx
  402a38:	cmp    cl,BYTE PTR [esi-0x58b9ea25]
  402a3e:	fs shr bh,cl
  402a41:	lods   al,BYTE PTR ds:[esi]
  402a42:	div    BYTE PTR [esi-0x45]
  402a45:	and    bh,cl
  402a47:	sar    BYTE PTR fs:[edx+0x35],0xe8
  402a4c:	sar    BYTE PTR [ebx+0x33],1
  402a4f:	mov    edi,0x1a09ed25
  402a54:	jae    0x4029ee
  402a56:	adc    DWORD PTR [ebx-0x33],edi
  402a59:	xor    eax,0xb478316
  402a5e:	pop    eax
  402a5f:	jo     0x402a08
  402a61:	jl     0x402a63
  402a63:	loopne 0x402a2d
  402a65:	fisttp QWORD PTR [edx]
  402a67:	mov    ch,0x5b
  402a69:	call   0x7d3d:0x2b2c96e3
  402a70:	call   0x61ef:0xd2ca8722
  402a77:	lea    ecx,[eax-0x36]
  402a7a:	and    al,0xe4
  402a7c:	cli    
  402a7d:	push   es
  402a7e:	cmp    BYTE PTR [edx+0x6b],ch
  402a81:	sub    ch,BYTE PTR [ecx]
  402a83:	adc    al,BYTE PTR [eax]
  402a85:	unpckhps xmm4,XMMWORD PTR [ecx]
  402a88:	loopne 0x402adc
  402a8a:	arpl   WORD PTR [edx-0x8],si
  402a8d:	adc    ebp,esi
  402a8f:	lods   eax,DWORD PTR ds:[esi]
  402a90:	pop    ss
  402a91:	mov    edi,0xb13df590
  402a96:	(bad)  
  402a97:	push   DWORD PTR [ecx+0x1a4663d7]
  402a9d:	gs aam 0xe
  402aa0:	and    ah,al
  402aa2:	ins    DWORD PTR es:[edi],dx
  402aa3:	bound  ebx,QWORD PTR [ecx+0x45]
  402aa6:	test   bh,dl
  402aa8:	push   es
  402aa9:	test   BYTE PTR [eax],dl
  402aab:	mov    ecx,0x62aa3f57
  402ab0:	or     esp,eax
  402ab2:	cmp    eax,0x3bf7aad1
  402ab7:	aas    
  402ab8:	cdq    
  402ab9:	cmp    BYTE PTR [eax],bl
  402abb:	scas   eax,DWORD PTR es:[edi]
  402abc:	cld    
  402abd:	jne    0x402b03
  402abf:	retf   0xbb9d
  402ac2:	add    eax,0x589cd5e2
  402ac7:	or     esi,DWORD PTR [ebx]
  402ac9:	dec    ecx
  402aca:	add    edx,DWORD PTR [esi-0x44ce754c]
  402ad0:	inc    ebx
  402ad1:	imul   ebp,DWORD PTR [ecx+0x67],0xffffff93
  402ad5:	jmp    0x9ba7008e
  402ada:	cld    
  402adb:	(bad)  
  402adc:	in     eax,0x73
  402ade:	push   esp
  402adf:	adc    ebx,esp
  402ae1:	pop    ds
  402ae2:	into   
  402ae3:	adc    BYTE PTR [ecx-0x67fa291d],0x5e
  402aea:	mov    ecx,0x34bfcd41
  402aef:	push   ebx
  402af0:	add    eax,0x1c2c7062
  402af5:	inc    esi
  402af6:	jns    0x402b00
  402af8:	mov    ah,0x3f
  402afa:	imul   ecx,DWORD PTR [esi+0x5a],0xb526eea8
  402b01:	sar    DWORD PTR [ebx+0x68f510a7],1
  402b07:	push   esi
  402b08:	pushf  
  402b09:	xchg   esi,eax
  402b0a:	sub    DWORD PTR [edi+0x1f3ea58f],edi
  402b10:	sub    BYTE PTR [ecx+ecx*2+0x7d379b5b],dl
  402b17:	shr    DWORD PTR [ebp+0x7ed78fb0],0x1c
  402b1e:	clc    
  402b1f:	dec    esp
  402b20:	sbb    al,0xa
  402b22:	cld    
  402b23:	lods   al,BYTE PTR ss:[esi]
  402b25:	pop    ebx
  402b26:	mov    ds:0x5759734f,al
  402b2b:	adc    bh,dh
  402b2d:	xchg   edi,eax
  402b2e:	ss int3 
  402b30:	mov    DWORD PTR [esi],esi
  402b32:	jecxz  0x402add
  402b34:	lods   eax,DWORD PTR ds:[esi]
  402b35:	mov    ebp,0x61a46285
  402b3a:	out    dx,eax
  402b3b:	mov    ebx,DWORD PTR [eax-0x3d951718]
  402b41:	jp     0x402b5c
  402b43:	sub    DWORD PTR [ecx-0x34486bee],edi
  402b49:	adc    esp,esp
  402b4b:	neg    esp
  402b4d:	repnz ud0 esi,DWORD PTR [esi-0x69]
  402b52:	inc    esp
  402b53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b54:	mov    ecx,0xad1e2a2a
  402b59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b5a:	mov    ch,0x7d
  402b5c:	mov    eax,ds:0x65413b90
  402b61:	pop    ss
  402b62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b63:	push   esp
  402b64:	xchg   esp,eax
  402b65:	and    al,0xe2
  402b67:	dec    eax
  402b68:	mov    esi,0x37499da9
  402b6d:	repnz dec esi
  402b6f:	sbb    cl,bl
  402b71:	push   esp
  402b72:	daa    
  402b73:	mov    esi,0x9b671710
  402b78:	pop    ebp
  402b79:	cdq    
  402b7a:	push   ds
  402b7b:	pop    ds
  402b7c:	dec    esi
  402b7d:	ja     0x402b9b
  402b7f:	int    0xea
  402b81:	iret   
  402b82:	cmp    eax,DWORD PTR [edx+0x786e453e]
  402b88:	ins    DWORD PTR es:[edi],dx
  402b89:	or     DWORD PTR [esi+0x2c],esi
  402b8c:	xchg   ebx,eax
  402b8d:	pusha  
  402b8e:	mov    cl,0x68
  402b90:	mov    bh,0x92
  402b92:	int    0x1a
  402b94:	test   ebx,ebx
  402b96:	int    0x82
  402b98:	sub    al,0x32
  402b9a:	std    
  402b9b:	sahf   
  402b9c:	addr16 test al,0x6a
  402b9f:	les    esi,FWORD PTR [edi+edi*4]
  402ba2:	ss jmp 0x8c08:0xa01070f5
  402baa:	xchg   esi,eax
  402bab:	addr16 and al,0xed
  402bae:	cmp    dh,ch
  402bb0:	aas    
  402bb1:	xchg   ecx,eax
  402bb2:	lods   al,BYTE PTR ds:[esi]
  402bb3:	dec    ebp
  402bb4:	cmp    dl,bh
  402bb6:	xchg   BYTE PTR [edi+0x17],ch
  402bb9:	dec    ecx
  402bba:	inc    esp
  402bbb:	inc    ecx
  402bbc:	es pop esp
  402bbe:	fimul  WORD PTR [edi]
  402bc0:	in     eax,dx
  402bc1:	(bad)  
  402bc2:	idiv   BYTE PTR [ebx-0x47e1c7e7]
  402bc8:	sbb    ah,al
  402bca:	cdq    
  402bcb:	jb     0x402c4c
  402bcd:	push   eax
  402bce:	cld    
  402bcf:	jl     0x402b6e
  402bd1:	and    edx,DWORD PTR ds:0x6a271cea
  402bd7:	aad    0x7b
  402bd9:	arpl   WORD PTR [ebx],dx
  402bdb:	add    ebx,DWORD PTR [esi+0x5e]
  402bde:	lock push edx
  402be0:	push   edi
  402be1:	sti    
  402be2:	inc    edx
  402be3:	mov    ah,0x6d
  402be5:	sahf   
  402be6:	fld    DWORD PTR [edx]
  402be8:	add    BYTE PTR [ecx],dl
  402bea:	loopne 0x402c30
  402bec:	call   0x43e3:0x754a7fc6
  402bf3:	cld    
  402bf4:	or     cl,0x2e
  402bf7:	(bad)  
  402bf8:	mov    al,ds:0x70edfa32
  402bfd:	mov    dl,0x1b
  402bff:	xchg   DWORD PTR [edi+ecx*4+0x61],ebx
  402c03:	scas   eax,DWORD PTR es:[edi]
  402c04:	arpl   dx,si
  402c06:	pop    ecx
  402c07:	xor    BYTE PTR [ecx-0x730fafcb],0x2a
  402c0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c0f:	mul    BYTE PTR [edx-0x3f]
  402c12:	push   edx
  402c13:	ret    
  402c14:	mov    ds:0xe30af0fd,eax
  402c19:	std    
  402c1a:	sar    BYTE PTR [ebp+0x27],0xfc
  402c1e:	jbe    0x402c21
  402c20:	sub    al,0x8e
  402c22:	lods   eax,DWORD PTR ds:[esi]
  402c23:	mov    ah,0x11
  402c25:	jne    0x402c56
  402c27:	mov    ebp,0x80cdf5c6
  402c2c:	out    0xf6,al
  402c2e:	retf   0xd425
  402c31:	pop    esp
  402c32:	cmp    al,ch
  402c34:	(bad)  
  402c35:	fnstsw WORD PTR [esp+edx*8]
  402c38:	das    
  402c39:	nop
  402c3a:	xor    eax,DWORD PTR [edi+0x5795723c]
  402c40:	sub    DWORD PTR [edi],0x1ea98cbd
  402c46:	push   eax
  402c47:	push   edi
  402c48:	(bad)  
  402c4a:	xor    al,0x1
  402c4c:	addr16 in eax,dx
  402c4e:	gs push ss
  402c50:	psrlw  mm1,QWORD PTR [edi]
  402c53:	add    bl,al
  402c55:	push   ebx
  402c56:	mov    esi,0x3e58ad9b
  402c5b:	ja     0x402c57
  402c5d:	pop    es
  402c5e:	test   eax,0xfca83746
  402c63:	cmp    eax,0xd58eff6
  402c68:	scas   eax,DWORD PTR es:[edi]
  402c69:	jb     0x402c90
  402c6b:	inc    ebx
  402c6c:	rcl    BYTE PTR [edx-0x446d8a0f],1
  402c72:	out    dx,al
  402c73:	xchg   DWORD PTR [ebx-0x4c62d5ea],ebp
  402c79:	cld    
  402c7a:	sub    cl,ch
  402c7c:	sub    DWORD PTR [ebp-0x2246d87],edx
  402c82:	sub    eax,0xd174ed19
  402c87:	pusha  
  402c88:	ja     0x402c79
  402c8a:	arpl   WORD PTR [eax+0x5e],dx
  402c8d:	loop   0x402c80
  402c8f:	and    BYTE PTR [ebp+0x17],bh
  402c92:	pushw  0xfff3
  402c95:	xor    eax,0xa4103e68
  402c9a:	push   ebx
  402c9b:	xchg   ebx,eax
  402c9c:	or     al,0xa6
  402c9e:	loopne 0x402c25
  402ca0:	mov    ebp,DWORD PTR [esi-0x35]
  402ca3:	xor    edx,ebx
  402ca5:	fs ret 0x86a8
  402ca9:	mov    eax,0xf4a3cbd2
  402cae:	imul   eax,DWORD PTR [edi],0xffffffc1
  402cb1:	sbb    ebp,DWORD PTR [edx-0x51c2bb05]
  402cb7:	aaa    
  402cb8:	dec    esp
  402cb9:	cmp    BYTE PTR [eax+ebx*1-0x6b],dh
  402cbd:	ret    
  402cbe:	jp     0x402c9f
  402cc0:	dec    eax
  402cc1:	push   esi
  402cc2:	push   ebx
  402cc3:	out    dx,al
  402cc4:	iret   
  402cc5:	pop    ecx
  402cc6:	outs   dx,DWORD PTR ds:[esi]
  402cc7:	cdq    
  402cc8:	sub    cl,0xa1
  402ccb:	mov    edx,0x1c3e7a9e
  402cd0:	out    0xfc,eax
  402cd2:	mov    edx,0x5d45efcf
  402cd7:	popf   
  402cd8:	aam    0x84
  402cda:	iret   
  402cdb:	fs ins DWORD PTR es:[edi],dx
  402cdd:	mov    ?,WORD PTR [ebx+0x32a76c26]
  402ce3:	mov    dh,BYTE PTR [eax+0x75cbe9a9]
  402ce9:	and    ecx,DWORD PTR [ecx-0x25d4683c]
  402cef:	(bad)  
  402cf0:	jo     0x402ca7
  402cf2:	pop    ebp
  402cf3:	push   ebx
  402cf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cf5:	fsub   QWORD PTR [ecx+ecx*4]
  402cf8:	sub    DWORD PTR [eax-0x13ad5070],0x3a350618
  402d02:	clc    
  402d03:	dec    esp
  402d04:	pop    ss
  402d05:	sbb    BYTE PTR [ecx+0x55],0x73
  402d09:	mov    ds:0x8e4ce973,al
  402d0e:	mov    DWORD PTR [ecx-0x60],ebp
  402d11:	clc    
  402d12:	mov    cl,0xf9
  402d14:	retf   
  402d15:	idiv   edx
  402d17:	in     eax,dx
  402d18:	push   cs
  402d19:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  402d1b:	push   ebx
  402d1c:	sub    DWORD PTR [esi],ebp
  402d1e:	das    
  402d1f:	dec    edx
  402d20:	adc    ebp,DWORD PTR [edi+0x7]
  402d23:	shr    esp,1
  402d25:	jo     0x402d31
  402d27:	(bad)  
  402d28:	lea    ecx,[edx+0x28]
  402d2b:	enter  0xdb20,0x4d
  402d2f:	or     al,BYTE PTR [esi+0x2c415bc5]
  402d35:	xor    dh,ah
  402d37:	pop    esi
  402d38:	and    BYTE PTR [eax+0x39],dl
  402d3b:	xchg   ebx,eax
  402d3c:	dec    edx
  402d3d:	dec    edx
  402d3e:	or     ah,BYTE PTR [eax*4+0x11bb405d]
  402d45:	xchg   ebp,eax
  402d46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d47:	sbb    DWORD PTR [eax],ecx
  402d49:	cmp    eax,0x72441180
  402d4e:	test   al,0xef
  402d50:	push   ecx
  402d51:	or     al,0xd0
  402d53:	cmp    ah,BYTE PTR [ecx+edi*4-0x71]
  402d57:	cli    
  402d58:	jmp    0x402da4
  402d5a:	out    dx,al
  402d5b:	aam    0x76
  402d5d:	out    dx,eax
  402d5e:	cs xchg edx,eax
  402d60:	sahf   
  402d61:	mov    bl,BYTE PTR [edi+0x1e]
  402d64:	or     BYTE PTR [ecx+0x10],cl
  402d67:	pop    ecx
  402d68:	cmp    al,0x37
  402d6a:	xlat   BYTE PTR ds:[ebx]
  402d6b:	add    DWORD PTR [ecx+0x6d99d642],esp
  402d71:	aas    
  402d72:	(bad)  
  402d73:	jns    0x402da6
  402d75:	addr16 pop eax
  402d77:	add    DWORD PTR ds:0x8ee093cc,edx
  402d7d:	add    ecx,DWORD PTR ds:0xdfbb0a08
  402d83:	dec    ebp
  402d84:	call   0xd8ec:0xdb1be823
  402d8b:	add    BYTE PTR [ebp+0x5c5ad5db],dl
  402d91:	jnp    0x402d57
  402d93:	jg     0x402d1c
  402d95:	shl    DWORD PTR [ebx+0x331dabd2],cl
  402d9b:	xchg   esi,eax
  402d9c:	and    DWORD PTR [esi],ecx
  402d9e:	xchg   ebx,eax
  402d9f:	jge    0x402da3
  402da1:	repz ret 0xbcdc
  402da5:	sub    dh,0xd2
  402da8:	jnp    0x402d77
  402daa:	mov    cl,0xbe
  402dac:	neg    DWORD PTR [ecx-0x1e]
  402daf:	mov    ch,0xe1
  402db1:	inc    ebx
  402db2:	push   ecx
  402db3:	jp     0x402de8
  402db5:	push   ss
  402db6:	repz loope 0x402e0c
  402db9:	add    edx,DWORD PTR [ecx+0x33432a5a]
  402dbf:	pop    eax
  402dc0:	inc    ebp
  402dc1:	adc    ecx,DWORD PTR [ebx]
  402dc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dc4:	sbb    DWORD PTR [ebx+0x76],esp
  402dc7:	call   0x724f:0xc44707be
  402dce:	sbb    BYTE PTR ss:[ebx+0x1fe9840d],dh
  402dd5:	retf   0xf158
  402dd8:	sahf   
  402dd9:	xchg   edx,eax
  402dda:	adc    al,BYTE PTR [ebp+0x6c9dbcab]
  402de0:	das    
  402de1:	pop    eax
  402de2:	enter  0xacf4,0x67
  402de6:	xchg   ebx,eax
  402de7:	popf   
  402de8:	jg     0x402e30
  402dea:	cs pop eax
  402dec:	into   
  402ded:	mov    ebp,DWORD PTR [eax-0x10166da5]
  402df3:	mov    dl,0x5c
  402df5:	cmp    edi,DWORD PTR [bp+si+0x76]
  402df9:	and    al,0x89
  402dfb:	sub    eax,0x3dba8086
  402e00:	ret    0xec92
  402e03:	cmp    eax,0x9088633e
  402e08:	mov    edi,0xc47321c6
  402e0d:	xchg   edx,eax
  402e0e:	test   BYTE PTR [ebx-0x61],0xe7
  402e12:	jae    0x402e4f
  402e14:	mov    DWORD PTR [ecx+0x19],edi
  402e17:	ss push ebp
  402e19:	mov    ds:0x2b6fe7d2,eax
  402e1e:	jae    0x402dda
  402e20:	sub    dl,0x16
  402e23:	sbb    dl,BYTE PTR [ebx]
  402e25:	sahf   
  402e26:	out    0x31,eax
  402e28:	aaa    
  402e29:	jno    0x402ea2
  402e2b:	cmp    bl,ah
  402e2d:	push   ss
  402e2e:	stos   BYTE PTR es:[edi],al
  402e2f:	inc    esi
  402e30:	jnp    0x402ded
  402e32:	mov    eax,ds:0xc4f34354
  402e37:	sub    eax,0x1f002e92
  402e3c:	adc    BYTE PTR [esi],al
  402e3e:	and    bl,BYTE PTR [edi+0x29]
  402e41:	fadd   DWORD PTR [edi-0x3c4ddfe9]
  402e47:	retf   0x63c8
  402e4a:	and    dl,cl
  402e4c:	add    DWORD PTR [esi+0x0],ecx
  402e4f:	add    ecx,DWORD PTR [edi]
  402e51:	dec    edx
  402e52:	rcr    BYTE PTR [ebx+ebp*4],1
  402e55:	push   ecx
  402e56:	pusha  
  402e57:	pop    esp
  402e58:	mov    WORD PTR [eax],ss
  402e5a:	retf   
  402e5b:	pop    ebp
  402e5c:	cmp    esi,ebp
  402e5e:	jl     0x402e32
  402e60:	dec    eax
  402e61:	(bad)  
  402e62:	jle    0x402df3
  402e64:	jb     0x402e50
  402e66:	jnp    0x402e23
  402e68:	mov    al,cl
  402e6a:	mov    ah,0xb8
  402e6c:	xchg   esi,eax
  402e6d:	mov    ecx,esi
  402e6f:	mov    cl,0xd6
  402e71:	xchg   edx,eax
  402e72:	fidiv  WORD PTR [esi]
  402e74:	leave  
  402e75:	add    DWORD PTR [esp+edi*1-0x2e],ecx
  402e79:	ja     0x402e31
  402e7b:	aaa    
  402e7c:	fdiv   DWORD PTR [esi+0x3029582f]
  402e82:	test   eax,0xbb490233
  402e87:	cmp    al,0xe
  402e89:	push   DWORD PTR [esi+0x6f829386]
  402e8f:	pusha  
  402e90:	mov    cl,0x7c
  402e92:	mov    al,0x3
  402e94:	push   edi
  402e95:	sbb    al,0x36
  402e97:	push   eax
  402e98:	pop    edi
  402e99:	pop    ds
  402e9a:	pop    es
  402e9b:	pop    ebp
  402e9c:	loop   0x402e1e
  402e9e:	dec    ecx
  402e9f:	pushf  
  402ea0:	std    
  402ea1:	pop    es
  402ea2:	imul   BYTE PTR [ebx+0x30]
  402ea5:	pop    ss
  402ea6:	push   eax
  402ea7:	mov    bh,0x12
  402ea9:	mov    dh,0xc3
  402eab:	sub    DWORD PTR [ebx],esi
  402ead:	sahf   
  402eae:	call   DWORD PTR [esi]
  402eb0:	loop   0x402ed2
  402eb2:	mov    cl,0x23
  402eb4:	push   ecx
  402eb5:	bound  ebx,QWORD PTR [edx-0x469628ef]
  402ebb:	and    ebx,DWORD PTR [ecx+0x4b812966]
  402ec1:	dec    eax
  402ec2:	dec    ecx
  402ec3:	retf   
  402ec4:	adc    edi,edi
  402ec6:	mov    dh,0x40
  402ec8:	ret    
  402ec9:	rcl    ebx,1
  402ecb:	stos   BYTE PTR es:[edi],al
  402ecc:	enter  0xeaf4,0x4d
  402ed0:	shl    DWORD PTR [ecx],1
  402ed2:	retf   0xcc1e
  402ed5:	lds    edx,FWORD PTR [ebx]
  402ed7:	cmp    eax,0xf970c898
  402edc:	js     0x402e7a
  402ede:	sub    esp,DWORD PTR [esi-0x6a]
  402ee1:	mov    ecx,0xce053660
  402ee6:	fs aaa 
  402ee8:	sbb    DWORD PTR [edi],0x24
  402eeb:	push   es
  402eec:	cld    
  402eed:	inc    ebp
  402eee:	inc    eax
  402eef:	gs (bad) 
  402ef2:	xor    BYTE PTR [eax],ah
  402ef4:	sub    eax,0x1b391027
  402ef9:	retf   
  402efa:	iret   
  402efb:	or     al,BYTE PTR [ecx-0x7f]
  402efe:	push   0x36d095e9
  402f03:	pop    ebx
  402f04:	outs   dx,DWORD PTR ds:[esi]
  402f05:	sub    eax,0x8661bb8a
  402f0a:	retf   0x37bf
  402f0d:	fst    DWORD PTR [edx-0x7b51ebca]
  402f13:	add    ch,BYTE PTR [edi+0x6ccc4d35]
  402f19:	sbb    DWORD PTR [ecx+0x5b09f4c5],esp
  402f1f:	js     0x402f7a
  402f21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f22:	or     ah,ah
  402f24:	ins    BYTE PTR es:[edi],dx
  402f25:	sub    DWORD PTR [esi+0x8],ebx
  402f28:	mov    al,BYTE PTR [ecx+eiz*1+0x50a61ad1]
  402f2f:	mov    esi,0x59d7d6e3
  402f34:	in     eax,0xb9
  402f36:	in     al,0x98
  402f38:	bound  edx,QWORD PTR [eax+edi*1]
  402f3b:	push   0x9ebdc21e
  402f40:	inc    ebp
  402f41:	ins    BYTE PTR es:[edi],dx
  402f42:	sub    eax,0xa0795ba1
  402f47:	stc    
  402f48:	push   0x66
  402f4a:	xchg   esp,eax
  402f4b:	cmp    al,BYTE PTR [ecx+0x54]
  402f4e:	push   ss
  402f4f:	xchg   edx,eax
  402f50:	cld    
  402f51:	or     BYTE PTR fs:[ecx],0x8d
  402f55:	call   0x32d:0x79915c89
  402f5c:	dec    ebp
  402f5d:	cmp    BYTE PTR [edi],0x98
  402f60:	das    
  402f61:	stc    
  402f62:	mov    ?,edx
  402f64:	shl    cl,cl
  402f66:	stos   DWORD PTR es:[edi],eax
  402f67:	data16 fbstp TBYTE PTR fs:[edx+0x1d]
  402f6c:	mov    bh,ch
  402f6e:	mov    eax,DWORD PTR [edi-0x3e]
  402f71:	retf   0x9cee
  402f74:	jbe    0x402f28
  402f76:	adc    al,dh
  402f78:	mov    esi,0x3d589f8b
  402f7d:	dec    ebp
  402f7e:	loope  0x402fcb
  402f80:	cmp    ch,BYTE PTR [edx+esi*8-0x4aed9cda]
  402f87:	inc    ecx
  402f88:	call   0xf591985
  402f8d:	enter  0xa079,0x98
  402f91:	ins    DWORD PTR es:[edi],dx
  402f92:	in     eax,dx
  402f93:	mov    ebp,0x53870f2d
  402f98:	xor    al,0xb5
  402f9a:	mov    esi,0x4c3e7b6f
  402f9f:	cmp    DWORD PTR [eax-0xec1b92e],edx
  402fa5:	inc    esi
  402fa6:	shl    eax,0x30
  402fa9:	or     eax,0xd9039db
  402fae:	sbb    ebx,DWORD PTR [esi]
  402fb0:	cmp    dh,bl
  402fb2:	cmp    al,0xbe
  402fb4:	into   
  402fb5:	lods   eax,DWORD PTR ds:[esi]
  402fb6:	mov    ecx,0xeb170d30
  402fbb:	cmp    al,0x82
  402fbd:	icebp  
  402fbe:	fidiv  DWORD PTR [edx]
  402fc0:	pop    esi
  402fc1:	xchg   edx,eax
  402fc2:	clc    
  402fc3:	dec    eax
  402fc4:	pop    ebx
  402fc5:	sub    cl,bl
  402fc7:	xchg   ecx,eax
  402fc8:	mov    ch,0xa0
  402fca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fcb:	test   eax,0xf2ece0b7
  402fd0:	mov    al,0x2c
  402fd2:	pslld  mm4,mm6
  402fd5:	sbb    BYTE PTR [eax],0x73
  402fd8:	mov    esi,0x907b96b4
  402fdd:	adc    BYTE PTR [ebx+0x3f],al
  402fe0:	icebp  
  402fe1:	imul   edi,DWORD PTR [edi],0xf393043c
  402fe7:	fstp   st(6)
  402fe9:	fcmovne st,st(5)
  402feb:	iret   
  402fec:	jnp    0x403036
  402fee:	jmp    0x2c2e:0x27d5a183
  402ff5:	sub    eax,0x13e46dc4
  402ffa:	inc    esi
  402ffb:	jns    0x402fe7
  402ffd:	enter  0x5bbc,0x27
  403001:	cmp    eax,0x4dade7ed
  403006:	imul   esp,edx,0x52
  403009:	push   edi
  40300a:	or     al,0x69
  40300c:	xor    cl,bh
  40300e:	mov    ecx,0x12958464
  403013:	pop    ecx
  403014:	std    
  403015:	int    0xf7
  403017:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403018:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403019:	ror    BYTE PTR [eax],0x5e
  40301c:	and    BYTE PTR [ebp+0x8],ch
  40301f:	in     al,0x46
  403021:	fwait
  403022:	mov    dh,0x7d
  403024:	into   
  403025:	jp     0x403022
  403027:	xor    dh,BYTE PTR [eax+edi*1-0x71704ff2]
  40302e:	or     al,0xfe
  403030:	mov    WORD PTR [ebx+0x6e2b482b],gs
  403036:	stc    
  403037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403038:	xor    BYTE PTR [edx],0x78
  40303b:	fwait
  40303c:	(bad)  
  40303d:	lock ret 0xee12
  403041:	cmp    eax,0xa713e7fc
  403046:	mov    edi,0x314a56f0
  40304b:	call   DWORD PTR ds:0xbdf747dc
  403051:	or     al,0xce
  403053:	bound  ecx,QWORD PTR [edi]
  403055:	lahf   
  403056:	xchg   ebx,eax
  403057:	inc    edi
  403058:	push   cs
  403059:	lds    esp,FWORD PTR [edi+0x133aab93]
  40305f:	stc    
  403060:	int    0xe8
  403062:	and    ecx,DWORD PTR [ebx-0x28]
  403065:	push   0x8e458196
  40306a:	imul   ebx,edi,0x47
  40306d:	cld    
  40306e:	aas    
  40306f:	jmp    0xdab8984a
  403074:	(bad)  
  403076:	fbstp  TBYTE PTR [edx]
  403078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403079:	ins    DWORD PTR es:[edi],dx
  40307a:	das    
  40307b:	in     al,dx
  40307c:	xor    DWORD PTR [edx-0x5caf3f94],ebp
  403082:	inc    esp
  403083:	add    eax,0xc8e764bf
  403088:	push   0x5ade0e50
  40308d:	iret   
  40308e:	inc    edi
  40308f:	xor    ah,BYTE PTR [ebp-0x31]
  403092:	in     eax,0xa8
  403094:	mov    WORD PTR [edi-0x7516c96a],es
  40309a:	sti    
  40309b:	aad    0xc0
  40309d:	mov    BYTE PTR [esi+0x29c2dcc1],al
  4030a3:	icebp  
  4030a4:	jnp    0x4030df
  4030a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030a7:	stc    
  4030a8:	pop    eax
  4030a9:	pop    ecx
  4030aa:	mov    cl,0xc8
  4030ac:	xor    DWORD PTR [esi-0x4a],ebp
  4030af:	pop    esi
  4030b0:	add    DWORD PTR [edx+0x2dfe15bd],esi
  4030b6:	push   esp
  4030b7:	dec    edx
  4030b8:	aas    
  4030b9:	and    dh,BYTE PTR [ecx]
  4030bb:	and    eax,0x634531b8
  4030c0:	int    0xad
  4030c2:	xchg   ch,bh
  4030c4:	mov    dh,0xfe
  4030c6:	int3   
  4030c7:	cmp    edx,DWORD PTR [edi]
  4030c9:	mov    WORD PTR ds:0x6174b724,es
  4030cf:	mov    bh,0x42
  4030d1:	jecxz  0x403060
  4030d3:	mov    esi,0x65e5850a
  4030d8:	call   DWORD PTR [eax+0x1c73dd5c]
  4030de:	aad    0x48
  4030e0:	mov    eax,ds:0x2920b0e0
  4030e5:	mov    cs,eax
  4030e7:	mov    eax,0x24ae9014
  4030ec:	xchg   ebp,eax
  4030ed:	fxch   st(0)
  4030ef:	push   ecx
  4030f0:	lahf   
  4030f1:	mov    eax,ds:0xf97491c5
  4030f6:	aad    0xc6
  4030f8:	call   0xc3aed7eb
  4030fd:	inc    ebp
  4030fe:	lock cmp esi,ecx
  403101:	and    DWORD PTR [edx],eax
  403103:	inc    ebx
  403104:	xor    esp,ecx
  403106:	xchg   bh,dh
  403108:	xor    eax,0xc3722a8b
  40310d:	cmp    eax,0xac8a336f
  403112:	arpl   WORD PTR [edi],cx
  403114:	in     al,0x6
  403116:	addr16 jp 0x403162
  403119:	pop    ecx
  40311a:	std    
  40311b:	shufps xmm0,xmm5,0x71
  40311f:	dec    ebx
  403120:	pop    ecx
  403121:	pop    ebp
  403122:	dec    DWORD PTR [ebx]
  403124:	lahf   
  403125:	scas   al,BYTE PTR es:[edi]
  403126:	add    bl,dl
  403128:	add    eax,DWORD PTR [edx+0x62a6cf0]
  40312e:	or     BYTE PTR [ecx-0x485aaf30],bh
  403134:	mov    BYTE PTR [eax],ah
  403136:	or     DWORD PTR [edx],0x88aca127
  40313c:	clc    
  40313d:	push   edi
  40313e:	mov    ecx,gs
  403140:	adc    BYTE PTR [edi+0x2d99c565],0xf9
  403147:	inc    ecx
  403148:	out    0x36,al
  40314a:	adc    al,0xf4
  40314c:	aas    
  40314d:	push   0x1631d7be
  403152:	and    al,0xd1
  403154:	fild   QWORD PTR [ebp+0x77ea6917]
  40315a:	and    al,0xda
  40315c:	pop    esi
  40315d:	sub    dl,bh
  40315f:	xchg   ecx,eax
  403160:	inc    esi
  403161:	lahf   
  403162:	pusha  
  403163:	fadd   st,st(1)
  403165:	retf   
  403166:	xchg   ch,dh
  403168:	mov    eax,0x971c8f16
  40316d:	test   ch,dh
  40316f:	jg     0x403138
  403171:	push   0x7e
  403173:	jnp    0x4031c2
  403175:	cmp    cl,bh
  403177:	enter  0x7f0b,0x97
  40317b:	mov    ecx,0xc59bf429
  403180:	sub    eax,0x5fd33106
  403185:	dec    eax
  403186:	lods   eax,DWORD PTR ds:[esi]
  403187:	hlt    
  403188:	icebp  
  403189:	xor    ecx,DWORD PTR [esi-0x44]
  40318c:	jno    0x4031ba
  40318e:	in     eax,dx
  40318f:	sub    eax,0x1b3cfed9
  403194:	push   ecx
  403195:	in     al,dx
  403196:	sbb    DWORD PTR [esi+0x566a6b7d],ebp
  40319c:	jae    0x40318e
  40319e:	or     edi,0x3f
  4031a1:	dec    edi
  4031a2:	ds pop ebp
  4031a4:	mov    DWORD PTR [ebx-0x35],esp
  4031a7:	xchg   ebp,eax
  4031a8:	and    al,0xa
  4031aa:	inc    esi
  4031ab:	aas    
  4031ac:	and    esp,DWORD PTR [esi]
  4031ae:	(bad)  
  4031af:	cld    
  4031b0:	xor    BYTE PTR [ecx+edi*2],dl
  4031b3:	ja     0x4031e6
  4031b5:	ins    DWORD PTR es:[edi],dx
  4031b6:	test   esp,esi
  4031b8:	cdq    
  4031b9:	add    DWORD PTR [edi-0x1b1697aa],ebx
  4031bf:	out    dx,eax
  4031c0:	jp     0x4031ca
  4031c2:	xchg   edx,eax
  4031c3:	pushf  
  4031c4:	arpl   cx,dx
  4031c6:	fwait
  4031c7:	pop    esi
  4031c8:	ss mov edx,0x316555c2
  4031ce:	pop    ebp
  4031cf:	adc    eax,0x5a06fa0e
  4031d4:	nop
  4031d5:	fisubr DWORD PTR [ebp+ebx*1-0x2e]
  4031d9:	push   edx
  4031da:	rcr    BYTE PTR [ebx+0x114d133b],1
  4031e0:	ja     0x4031b2
  4031e2:	jecxz  0x403246
  4031e4:	mov    esi,0x20f669
  4031e9:	retf   0xb45
  4031ec:	mov    ebp,0xb8d5db2e
  4031f1:	call   0x98a8:0x4276b45
  4031f8:	es int 0xd5
  4031fb:	leave  
  4031fc:	xchg   edx,eax
  4031fd:	popf   
  4031fe:	mov    ebp,0x6dfee477
  403203:	or     ch,BYTE PTR [esi+0x3fd797fd]
  403209:	dec    ebx
  40320a:	int    0xc0
  40320c:	pop    ds
  40320d:	out    dx,eax
  40320e:	inc    ecx
  40320f:	mov    ds:0xa8fe5ce0,eax
  403214:	add    esi,DWORD PTR [ebp-0x59238707]
  40321a:	add    ecx,DWORD PTR [edi]
  40321c:	cmp    eax,0xc9fa555
  403221:	(bad)  
  403222:	fiadd  DWORD PTR [eax+0x1d]
  403225:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403226:	mov    dl,0x5f
  403228:	jmp    0xd1e1:0x5b8a0c88
  40322f:	dec    edx
  403230:	lock pop esp
  403232:	cs imul edx,ebx,0xb570dd3b
  403239:	dec    esp
  40323a:	leave  
  40323b:	std    
  40323c:	dec    eax
  40323d:	test   DWORD PTR [ecx-0x22],eax
  403240:	out    dx,eax
  403241:	mov    ebp,0x1aa0909a
  403246:	cli    
  403247:	aad    0x5e
  403249:	hlt    
  40324a:	outs   dx,BYTE PTR ds:[esi]
  40324b:	lds    edx,FWORD PTR [eax-0xcbd8999]
  403251:	sbb    dl,dl
  403253:	inc    edx
  403254:	sbb    dh,BYTE PTR [edx+ebp*2-0x3faea69c]
  40325b:	xchg   ebx,eax
  40325c:	outs   dx,DWORD PTR ds:[esi]
  40325d:	stc    
  40325e:	(bad)  
  403260:	daa    
  403261:	dec    esi
  403262:	push   0xffffff9a
  403264:	pusha  
  403265:	and    ebp,ebp
  403267:	xchg   edi,eax
  403268:	test   DWORD PTR [esi+0x2ef10db],ebx
  40326e:	mov    ah,0xf4
  403270:	sub    eax,0x9788105d
  403275:	repz inc ebx
  403277:	fsubr  DWORD PTR [edi+0x2b8b7c8e]
  40327d:	cmp    bh,BYTE PTR [ecx]
  40327f:	mov    bh,BYTE PTR [ebx-0x7f]
  403282:	loop   0x4032a7
  403284:	push   0x14
  403286:	loop   0x40326c
  403288:	add    eax,0x3765121d
  40328d:	test   eax,0x4220ac11
  403292:	sbb    BYTE PTR ds:0xeed6a633,dl
  403298:	jb     0x403258
  40329a:	imul   edi,DWORD PTR [ebx+esi*2-0x7d0f596a],0xffffffbb
  4032a2:	adc    eax,0x40d47904
  4032a7:	(bad)  
  4032a8:	mov    al,fs:0x73a37839
  4032ae:	test   al,0xcd
  4032b0:	(bad)  
  4032b1:	in     eax,0x1f
  4032b3:	fwait
  4032b4:	dec    ebx
  4032b5:	and    DWORD PTR [ebx-0x36],esp
  4032b8:	push   es
  4032b9:	dec    esp
  4032ba:	xchg   esp,eax
  4032bb:	int3   
  4032bc:	ret    0xb56c
  4032bf:	xor    al,0x8a
  4032c1:	fimul  WORD PTR [ecx-0x73]
  4032c4:	inc    ebp
  4032c5:	push   ds
  4032c6:	push   eax
  4032c7:	mov    bh,0x68
  4032c9:	pushf  
  4032ca:	ins    BYTE PTR es:[edi],dx
  4032cb:	out    0xde,al
  4032cd:	mov    ch,0x90
  4032cf:	inc    edx
  4032d0:	mov    ecx,0xc597fd87
  4032d5:	mov    ch,0x34
  4032d7:	repnz std 
  4032d9:	mov    dh,0x67
  4032db:	jno    0x40331f
  4032dd:	shl    al,cl
  4032df:	das    
  4032e0:	push   edi
  4032e1:	and    al,0x8f
  4032e3:	add    al,0x1f
  4032e5:	rol    edi,1
  4032e7:	push   edi
  4032e8:	rcr    DWORD PTR [ecx],cl
  4032ea:	adc    BYTE PTR [ebx+edx*4+0x5e],0xa2
  4032ef:	int3   
  4032f0:	fs cmc 
  4032f2:	(bad)  
  4032f3:	(bad)  
  4032f4:	add    esp,DWORD PTR [edi+0x5b]
  4032f7:	test   BYTE PTR [esi],cl
  4032f9:	cs pop edx
  4032fb:	jnp    0x403287
  4032fd:	inc    ebp
  4032fe:	jmp    0x2bed2b1c
  403303:	dec    ecx
  403304:	fistp  QWORD PTR [esi+0x6f691272]
  40330a:	ret    0xb068
  40330d:	ja     0x4032c3
  40330f:	into   
  403310:	pop    eax
  403311:	ja     0x403323
  403313:	fmul   QWORD PTR [ebx-0x77c847de]
  403319:	loop   0x4032f5
  40331b:	icebp  
  40331c:	bound  edi,QWORD PTR [edi]
  40331e:	mov    ss,WORD PTR [edx+0x59]
  403321:	je     0x4032c8
  403323:	jnp    0x403316
  403325:	sbb    ch,dh
  403327:	jp     0x4032ce
  403329:	(bad)  
  40332a:	jne    0x4032ed
  40332c:	fist   WORD PTR [edi+eiz*1+0x1a4b9394]
  403333:	lock fwait
  403335:	(bad)  
  403337:	xchg   edx,eax
  403338:	lods   eax,DWORD PTR ds:[esi]
  403339:	ins    DWORD PTR es:[edi],dx
  40333a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40333c:	jl     0x403320
  40333e:	xor    al,0x77
  403340:	cmp    BYTE PTR [esi],bl
  403342:	add    al,0x3
  403344:	xchg   BYTE PTR [ebx],ah
  403346:	cmc    
  403347:	cmp    bh,BYTE PTR [eax+ebp*1-0x73]
  40334b:	icebp  
  40334c:	bound  edi,QWORD PTR [ebx]
  40334e:	sbb    al,0x3c
  403350:	es push cs
  403352:	xor    BYTE PTR [ecx],bh
  403354:	fdivr  st,st(4)
  403356:	sbb    DWORD PTR [esi+0x6c],0x68
  40335a:	pop    ebx
  40335b:	and    DWORD PTR [ebx-0x4c],edx
  40335e:	dec    esp
  40335f:	jnp    0x40339f
  403361:	out    0x6e,eax
  403363:	jmp    0xe856:0xd4ff2748
  40336a:	pop    ss
  40336b:	sbb    DWORD PTR [ebx+0x32cc8e2e],edi
  403371:	sub    BYTE PTR [ebx+0x25],0x28
  403375:	aaa    
  403376:	jge    0x403335
  403378:	dec    ecx
  403379:	popa   
  40337a:	std    
  40337b:	or     al,0x75
  40337d:	xor    eax,0x7429e19c
  403382:	ja     0x403317
  403384:	aad    0x37
  403386:	xor    al,0x1d
  403388:	test   eax,0x3a67f294
  40338d:	(bad)  
  40338e:	adc    ah,BYTE PTR [ebp-0x33c6b66a]
  403394:	dec    ecx
  403395:	mov    esi,0xabf7cdf6
  40339a:	sbb    al,0x67
  40339c:	pcmpeqb mm3,mm2
  40339f:	dec    ebp
  4033a0:	scas   eax,DWORD PTR es:[edi]
  4033a1:	push   ebx
  4033a2:	sub    bl,BYTE PTR [eax]
  4033a4:	or     BYTE PTR [ecx+0x4d],cl
  4033a7:	push   esi
  4033a8:	push   eax
  4033a9:	add    eax,0xe1fd6782
  4033ae:	outs   dx,DWORD PTR ds:[esi]
  4033af:	pusha  
  4033b0:	add    BYTE PTR [edi+0x1b25a86b],dl
  4033b6:	lods   al,BYTE PTR ds:[esi]
  4033b7:	scas   al,BYTE PTR es:[edi]
  4033b8:	pop    es
  4033b9:	sub    BYTE PTR [edi],dl
  4033bb:	fisttp WORD PTR [eax+0x8]
  4033be:	add    bh,BYTE PTR [esi+0xe]
  4033c1:	(bad)  
  4033c2:	aad    0x94
  4033c4:	(bad)
  4033c7:	push   ss
  4033c8:	call   FWORD PTR [esi]
  4033ca:	mov    ch,0x5c
  4033cc:	inc    esi
  4033cd:	add    ebp,DWORD PTR [ecx-0x6]
  4033d0:	bnd jae 0x40341b
  4033d3:	dec    esp
  4033d4:	test   DWORD PTR ds:0x4368e04e,edi
  4033da:	pop    edi
  4033db:	outs   dx,DWORD PTR ds:[esi]
  4033dc:	push   edx
  4033dd:	cmp    ch,dh
  4033df:	imul   esp,ebp,0xd6af1cb
  4033e5:	jl     0x4033b0
  4033e7:	(bad)  
  4033e9:	jmp    0x6e07:0x9e076999
  4033f0:	mov    dh,0x73
  4033f2:	cwde   
  4033f3:	push   ds
  4033f4:	mov    BYTE PTR [ebx-0x36c8e84],ah
  4033fa:	je     0x4033b7
  4033fc:	gs jno 0x4033e3
  4033ff:	jne    0x403386
  403401:	mov    edx,0x6cc317c9
  403406:	push   es
  403407:	adc    al,0x40
  403409:	dec    eax
  40340a:	mov    ah,0xb2
  40340c:	sbb    eax,0x193230a6
  403411:	dec    esp
  403412:	push   esi
  403413:	xor    bl,BYTE PTR [ecx-0x44]
  403416:	cmp    BYTE PTR [ecx-0xa],cl
  403419:	adc    bl,dh
  40341b:	popf   
  40341c:	add    DWORD PTR [ecx+esi*8],ebx
  40341f:	retf   0x568e
  403422:	mov    cl,0x11
  403424:	sbb    BYTE PTR [ebp-0x72],0x62
  403428:	loopne 0x40349e
  40342a:	jbe    0x40342b
  40342c:	call   0xdf4f609a
  403431:	sbb    eax,0xff252839
  403436:	mov    ecx,0x8bebcd86
  40343b:	push   ebx
  40343c:	out    dx,eax
  40343d:	sub    bh,BYTE PTR [esi-0x13c97809]
  403443:	bound  esp,QWORD PTR [ebx+0x60]
  403446:	add    ebx,DWORD PTR [ecx-0x5265a7ed]
  40344c:	push   cs
  40344d:	mov    ah,0xec
  40344f:	mov    cl,0x75
  403451:	lods   eax,DWORD PTR ds:[esi]
  403452:	mov    ds:0xda3da961,eax
  403457:	push   esi
  403458:	inc    edx
  403459:	adc    DWORD PTR [esp+esi*2-0x2bf43558],0xffffffa2
  403461:	(bad)  
  403462:	jno    0x4034b4
  403464:	std    
  403465:	adc    esp,DWORD PTR [eax]
  403467:	add    bl,0x8e
  40346a:	bound  ebx,QWORD PTR [ebp-0xd]
  40346d:	jb     0x40343b
  40346f:	popf   
  403470:	add    BYTE PTR [esi+esi*1-0x7dbb4e95],dh
  403477:	pop    ecx
  403478:	les    esp,FWORD PTR [edx]
  40347a:	(bad)  
  40347b:	lock xchg esi,eax
  40347d:	lahf   
  40347e:	fwait
  40347f:	stos   DWORD PTR es:[edi],eax
  403480:	lahf   
  403481:	inc    edx
  403482:	jb     0x403427
  403484:	pop    ebp
  403485:	jecxz  0x403498
  403487:	pop    esi
  403488:	scas   al,BYTE PTR es:[edi]
  403489:	or     DWORD PTR [ebx+0x4a],ebx
  40348c:	mov    eax,0xb53b31f3
  403491:	jmp    0x25d8:0x647c647
  403498:	push   ss
  403499:	xor    ebx,DWORD PTR [edi-0x44bdc1a4]
  40349f:	lea    ebx,[esi+eiz*8]
  4034a2:	in     al,dx
  4034a3:	popf   
  4034a4:	dec    ebx
  4034a5:	adc    eax,esp
  4034a7:	xchg   ecx,eax
  4034a8:	(bad)  
  4034a9:	or     edi,DWORD PTR [eax-0x51]
  4034ac:	mov    ah,0xd4
  4034ae:	pop    ss
  4034af:	inc    edi
  4034b0:	mov    esp,0x9620e159
  4034b5:	jo     0x403535
  4034b7:	out    dx,al
  4034b8:	das    
  4034b9:	and    ebx,DWORD PTR [esi+esi*8-0x35]
  4034bd:	or     al,0x32
  4034bf:	xchg   ebp,eax
  4034c0:	sbb    al,0xe
  4034c2:	ins    BYTE PTR es:[edi],dx
  4034c3:	push   edx
  4034c4:	mov    dl,0x33
  4034c6:	test   eax,0x3911c5cc
  4034cb:	sub    BYTE PTR [esi+0x18],dl
  4034ce:	push   edx
  4034cf:	adc    eax,0x59ae28b
  4034d4:	fisttp QWORD PTR [ebx]
  4034d6:	cli    
  4034d7:	mov    edi,0xc143fa4b
  4034dc:	or     BYTE PTR [ecx],0xdd
  4034df:	jge    0x403513
  4034e1:	out    0x9e,eax
  4034e3:	ror    DWORD PTR [edx],cl
  4034e5:	add    BYTE PTR [ebp+0x7736862e],al
  4034eb:	(bad)  
  4034ec:	mov    edi,0x38ce8f5a
  4034f1:	xor    BYTE PTR [ebp+0x32b32eaf],dh
  4034f7:	stos   DWORD PTR es:[edi],eax
  4034f8:	cwde   
  4034f9:	ins    DWORD PTR es:[edi],dx
  4034fa:	mov    cl,0x18
  4034fc:	dec    eax
  4034fd:	fwait
  4034fe:	sbb    al,0x36
  403500:	fs mov edi,0x4410b314
  403506:	inc    ebp
  403507:	fstp   DWORD PTR [edx-0x17]
  40350a:	inc    edx
  40350b:	stos   BYTE PTR es:[edi],al
  40350c:	in     al,dx
  40350d:	inc    ebx
  40350e:	int    0x76
  403510:	pop    edi
  403511:	dec    esi
  403512:	sbb    eax,0x43cafdb7
  403517:	mov    fs,WORD PTR [eax*1+0x23576525]
  40351e:	loop   0x403567
  403520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403521:	arpl   WORD PTR [edi],dx
  403523:	sub    eax,0x3d94c7f6
  403528:	xor    eax,0x98eed061
  40352d:	mov    bl,0xcd
  40352f:	es call 0x1c57caec
  403535:	dec    ebp
  403536:	and    ebp,esi
  403538:	out    0xf5,eax
  40353a:	jg     0x403528
  40353c:	or     DWORD PTR [ecx+0x71],ebp
  40353f:	(bad)  
  403540:	cmc    
  403541:	jle    0x4035a8
  403543:	test   BYTE PTR [ecx+0x42],ah
  403546:	adc    BYTE PTR [ebx-0x5c],dh
  403549:	int    0xb0
  40354b:	push   esi
  40354c:	out    0x98,al
  40354e:	mov    edi,0x3582861b
  403553:	imul   edx,DWORD PTR [edx+ebx*1],0xdeaf65db
  40355a:	adc    ebx,DWORD PTR ds:0x7bf20a33
  403560:	fisttp QWORD PTR [ecx-0x6b]
  403563:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403564:	(bad)  
  403565:	hlt    
  403566:	cmp    eax,0x1f1e2a3e
  40356b:	sub    edx,ebx
  40356d:	fistp  WORD PTR [esi-0x80]
  403570:	sar    cl,0xf9
  403573:	push   ds
  403574:	pop    ebp
  403575:	xor    BYTE PTR [esi+0x986ade8],0xb5
  40357c:	cmc    
  40357d:	sbb    BYTE PTR [edi-0x19],bl
  403580:	push   ecx
  403581:	mov    eax,ds:0x62deb69c
  403586:	adc    ah,BYTE PTR [esi]
  403588:	sbb    DWORD PTR [eax+ebp*2-0x7afb1195],0xb1ad0ccf
  403593:	and    dh,BYTE PTR [edi-0x44]
  403596:	adc    cl,BYTE PTR [esi+0x5417f9a4]
  40359c:	adc    BYTE PTR [ebx-0x9],ch
  40359f:	retf   
  4035a0:	lea    ebp,[ebx+0x2f]
  4035a3:	inc    edx
  4035a4:	inc    edx
  4035a5:	xor    esi,esi
  4035a7:	mov    ebx,esi
  4035a9:	mov    DWORD PTR [ebx-0x161fcf94],eax
  4035af:	xor    BYTE PTR [eax-0x3d],0xfb
  4035b3:	dec    eax
  4035b4:	js     0x4035ee
  4035b6:	retf   0x6474
  4035b9:	sbb    DWORD PTR [ebx-0x22d024a],ebx
  4035bf:	fsubr  QWORD PTR [ebx+0x11]
  4035c2:	sub    al,0x58
  4035c4:	aaa    
  4035c5:	icebp  
  4035c6:	jb     0x403556
  4035c8:	fcomi  st,st(2)
  4035ca:	sar    BYTE PTR [esi+0x60],cl
  4035cd:	and    eax,0x9e83bd9
  4035d2:	pop    edi
  4035d3:	div    DWORD PTR [eax-0x7ead4d94]
  4035d9:	dec    edx
  4035da:	pushf  
  4035db:	add    bl,BYTE PTR [ebx]
  4035dd:	add    DWORD PTR [esi+0x5b],esp
  4035e0:	jmp    0x40357d
  4035e2:	outs   dx,DWORD PTR ds:[esi]
  4035e3:	pop    ebp
  4035e4:	fdivr  QWORD PTR [eax+0x2db3ca05]
  4035ea:	adc    eax,0x50402eb0
  4035ef:	lock gs pop edi
  4035f2:	fnstcw WORD PTR [ebx-0x6f]
  4035f5:	dec    esi
  4035f6:	mov    dl,0xc3
  4035f8:	xor    al,BYTE PTR [ebx-0x1d]
  4035fb:	fsubr  st,st(3)
  4035fd:	jne    0x40358a
  4035ff:	jmp    0xa1956e01
  403604:	ins    DWORD PTR es:[edi],dx
  403605:	mov    ah,0x20
  403607:	xor    ebp,edi
  403609:	loopne 0x403641
  40360b:	mov    cl,0xad
  40360d:	xchg   edx,eax
  40360e:	pop    es
  40360f:	pushf  
  403610:	sti    
  403611:	mov    bh,BYTE PTR [ecx+0x58]
  403614:	fiadd  WORD PTR [ecx+0x11aff7ee]
  40361a:	loope  0x4035fc
  40361c:	scas   al,BYTE PTR es:[edi]
  40361d:	mov    ds:0xf57b1897,eax
  403622:	mov    WORD PTR [ebx+0x37],0x72e4
  403628:	sahf   
  403629:	test   BYTE PTR [eax-0x4d],dh
  40362c:	mov    eax,ds:0x1b5b5d7f
  403631:	imul   edi,DWORD PTR ds:0x293eadf5,0xd4e2683b
  40363b:	call   0x8ed70f6
  403640:	pop    eax
  403641:	push   esi
  403642:	adc    al,0x4b
  403644:	dec    esi
  403645:	sbb    ah,BYTE PTR [eax+eax*2+0x41]
  403649:	pop    eax
  40364a:	cmp    BYTE PTR [eax],bl
  40364c:	adc    bh,BYTE PTR [ecx+0x5714abc8]
  403652:	fmul   st,st(7)
  403654:	retf   
  403655:	mov    bh,0x1
  403657:	jmp    0xc3ec4cae
  40365c:	pop    ss
  40365d:	arpl   WORD PTR [eax+0x7aeb9999],di
  403663:	mov    bl,0xd7
  403665:	into   
  403666:	call   0x5335af18
  40366b:	idiv   DWORD PTR [edi]
  40366d:	daa    
  40366e:	cmp    BYTE PTR [esi+0x7b],cl
  403671:	std    
  403672:	int    0x39
  403674:	aaa    
  403675:	mov    cl,0x98
  403677:	leave  
  403678:	push   0x20
  40367a:	or     bl,BYTE PTR [ebx-0x67012483]
  403680:	xlat   BYTE PTR ds:[ebx]
  403681:	test   BYTE PTR [ecx+edx*4],dl
  403684:	dec    eax
  403685:	sub    al,0x57
  403687:	js     0x4036ed
  403689:	mov    cl,0x65
  40368b:	lea    edx,[ebp-0x52]
  40368e:	icebp  
  40368f:	mov    dh,0xd8
  403691:	call   0xfaddec99
  403696:	jnp    0x40368a
  403698:	nop
  403699:	rcl    DWORD PTR [ebx-0x14f49055],1
  40369f:	inc    eax
  4036a1:	mov    eax,ds:0x635f9b6a
  4036a6:	call   0x65427e1e
  4036ab:	mov    edx,0x910de67c
  4036b0:	loope  0x403724
  4036b2:	hlt    
  4036b3:	test   eax,0x86425393
  4036b8:	fnstsw WORD PTR [ebx+eax*4+0x6e960bfa]
  4036bf:	jo     0x40371f
  4036c1:	out    dx,eax
  4036c2:	std    
  4036c3:	jnp    0x40366b
  4036c5:	mov    eax,ds:0x3992863d
  4036ca:	cmp    eax,0xed6d5ed8
  4036cf:	inc    edi
  4036d0:	(bad)
  4036d3:	push   esp
  4036d4:	into   
  4036d5:	rol    DWORD PTR [ecx+0xbd932bc],0x69
  4036dc:	jmp    FWORD PTR [esi-0x11]
  4036df:	xor    eax,0x18dad83e
  4036e4:	enter  0x4545,0xf3
  4036e8:	sbb    ch,BYTE PTR [edx+0xb84f74]
  4036ee:	js     0x40368c
  4036f0:	call   DWORD PTR [ecx-0x53]
  4036f3:	sbb    BYTE PTR [esi+0x2b7382b4],ah
  4036f9:	sahf   
  4036fa:	lods   eax,DWORD PTR ds:[esi]
  4036fb:	ret    
  4036fc:	push   ebp
  4036fd:	nop
  4036fe:	call   0x22c12a68
  403703:	test   DWORD PTR [eax-0x72680451],edi
  403709:	cwde   
  40370a:	adc    eax,0xc630e907
  40370f:	and    eax,0xdebe5beb
  403714:	inc    DWORD PTR [edi-0x62]
  403717:	mov    dl,0x44
  403719:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40371a:	je     0x403749
  40371c:	cmp    DWORD PTR [edx],edx
  40371e:	jg     0x403741
  403720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403721:	adc    ebp,DWORD PTR [edi+edx*8-0x40547897]
  403728:	pop    es
  403729:	call   FWORD PTR [edx-0x5dc1f936]
  40372f:	fsub   st,st(3)
  403731:	jmp    0x5cf5d19a
  403736:	mov    dh,BYTE PTR [ebx-0x22]
  403739:	jle    0x403732
  40373b:	dec    esi
  40373c:	int3   
  40373d:	mov    ah,0x82
  40373f:	repnz jmp FWORD PTR [edi+0x35]
  403743:	jg     0x4036ef
  403745:	cmp    eax,0x43068163
  40374a:	mov    eax,0x60c76e7f
  40374f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403750:	neg    cl
  403752:	inc    eax
  403753:	cwde   
  403754:	inc    esp
  403755:	lea    esp,[esi-0x5d]
  403758:	jne    0x4036f9
  40375a:	retf   
  40375b:	jo     0x403717
  40375d:	mov    ch,0x40
  40375f:	push   cs
  403760:	jp     0x403741
  403762:	fcom   DWORD PTR [edi+0x791ea356]
  403768:	mov    al,ds:0xf17dfd0d
  40376d:	(bad)  
  40376e:	mov    ds:0x57851533,eax
  403773:	(bad)  
  403774:	in     al,dx
  403775:	lods   eax,DWORD PTR ds:[esi]
  403776:	out    0x3,al
  403778:	fdiv   QWORD PTR [ebx-0xc6a44a6]
  40377e:	mov    cl,0xf5
  403780:	std    
  403781:	jae    0x40373d
  403783:	mov    esi,0xe522d333
  403788:	adc    BYTE PTR [eax+0x1f0d10f2],al
  40378e:	mov    esp,0xaaa06213
  403793:	pop    ecx
  403794:	jmp    0x67631d5c
  403799:	jg     0x403730
  40379b:	jnp    0x40377f
  40379d:	push   ss
  40379e:	test   ecx,ebp
  4037a0:	mov    ecx,0x55ca2cbf
  4037a5:	loope  0x40375a
  4037a7:	adc    al,dh
  4037a9:	(bad)  
  4037ab:	inc    esp
  4037ac:	cmc    
  4037ad:	jge    0x40373c
  4037af:	mov    dh,0x82
  4037b1:	mov    ?,WORD PTR [esi]
  4037b3:	lods   eax,DWORD PTR ds:[esi]
  4037b4:	dec    esi
  4037b5:	jmp    0x40376f
  4037b7:	shl    esp,1
  4037b9:	gs dec ebp
  4037bb:	fsub   QWORD PTR [esi+0x3c]
  4037be:	je     0x4037ba
  4037c0:	adc    eax,DWORD PTR [ecx+0x3e]
  4037c3:	fadd   DWORD PTR [ebp-0x21d6f98d]
  4037c9:	por    mm1,QWORD PTR [esi]
  4037cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037cd:	inc    edx
  4037ce:	fiadd  WORD PTR [ecx]
  4037d0:	mov    esp,0xae37c22
  4037d5:	repz invd 
  4037d8:	test   eax,0x2f39f6f
  4037dd:	out    dx,al
  4037de:	dec    eax
  4037df:	push   ecx
  4037e0:	(bad)  
  4037e1:	push   ss
  4037e2:	pop    ds
  4037e3:	dec    edx
  4037e4:	fdivr  QWORD PTR [ecx+0x3510826f]
  4037ea:	xor    esp,DWORD PTR [esi+0x79]
  4037ed:	cmp    BYTE PTR [eax],cl
  4037ef:	(bad)  [ebp+0x5d]
  4037f2:	push   ebx
  4037f3:	lods   al,BYTE PTR ds:[esi]
  4037f4:	jecxz  0x4037c5
  4037f6:	fisttp WORD PTR [esi+0x5d]
  4037f9:	inc    eax
  4037fa:	sbb    BYTE PTR [ebx-0x6c6f301],bl
  403800:	ins    DWORD PTR es:[edi],dx
  403801:	shr    DWORD PTR [ebp-0x69],1
  403804:	popf   
  403805:	je     0x4037b5
  403807:	xchg   ebx,eax
  403808:	push   es
  403809:	aaa    
  40380a:	sbb    esp,DWORD PTR [ebx]
  40380c:	in     al,0x61
  40380e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40380f:	jecxz  0x40380e
  403811:	xchg   ebp,eax
  403812:	lea    ecx,[ebx-0x1]
  403815:	mov    bl,0x57
  403817:	hlt    
  403818:	out    0x26,eax
  40381a:	jmp    0xebed4495
  40381f:	mov    al,0x3c
  403821:	ror    BYTE PTR [eax*4-0x3d193a07],0x35
  403829:	jnp    0x403884
  40382b:	pop    esi
  40382c:	leave  
  40382d:	iret   
  40382e:	cwde   
  40382f:	push   es
  403830:	mov    BYTE PTR [ecx+0x46fe928d],bl
  403836:	in     al,dx
  403837:	test   BYTE PTR [edx],dl
  403839:	add    BYTE PTR [esi+0x442c8a67],cl
  40383f:	addr16 sbb cl,al
  403842:	jp     0x40383e
  403844:	loopne 0x4037d0
  403846:	jle    0x403875
  403848:	add    eax,0xeba87a90
  40384d:	sbb    al,0xb
  40384f:	mov    ch,0x57
  403851:	dec    ebx
  403852:	add    edx,DWORD PTR [esi+0x52f7f135]
  403858:	stc    
  403859:	lsl    edi,WORD PTR [esi]
  40385c:	push   es
  40385d:	cld    
  40385e:	outs   dx,DWORD PTR ds:[esi]
  40385f:	adc    eax,0x18fd4672
  403864:	(bad)  
  403865:	xor    dh,BYTE PTR [eax-0x7d2433ab]
  40386b:	sbb    ah,BYTE PTR [edx+0x72]
  40386e:	stos   DWORD PTR es:[edi],eax
  40386f:	mov    bh,0xc3
  403871:	xchg   BYTE PTR [ecx+edi*1],al
  403874:	push   ebx
  403875:	repz inc edi
  403877:	push   esp
  403878:	(bad)  
  403879:	sub    eax,0xd1ee43c6
  40387e:	out    dx,eax
  40387f:	add    DWORD PTR [edi-0x33],ecx
  403882:	stos   DWORD PTR es:[edi],eax
  403883:	mov    esp,0xa13fe16b
  403888:	inc    esp
  403889:	jmp    0xcfd8:0x42e04eae
  403890:	out    dx,eax
  403891:	jo     0x403871
  403893:	retf   
  403894:	sub    eax,0x419ff514
  403899:	(bad)  
  40389a:	imul   ebp,DWORD PTR [ebx+0x26731e32],0x1d65dcc5
  4038a4:	mov    al,0x29
  4038a6:	xchg   BYTE PTR [edx+0x6efa457e],al
  4038ac:	mov    dl,ah
  4038ae:	add    al,cl
  4038b0:	arpl   WORD PTR [edx-0x21],bx
  4038b3:	xlat   BYTE PTR ds:[ebx]
  4038b4:	or     al,0x2a
  4038b6:	test   eax,0x85b7367a
  4038bb:	mov    ebx,0xeeb00dae
  4038c0:	mov    ebx,0xe5609934
  4038c5:	and    esi,ecx
  4038c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038c8:	int3   
  4038c9:	or     eax,0xaa6155c
  4038ce:	shr    DWORD PTR es:[ebp-0x47ad1e9a],1
  4038d5:	sbb    BYTE PTR [ebp+eax*1+0x41795ec4],dh
  4038dc:	dec    ecx
  4038dd:	fbld   TBYTE PTR [ecx+0x62]
  4038e0:	inc    edi
  4038e1:	dec    BYTE PTR [ecx+0x2c]
  4038e4:	jno    0x40388e
  4038e6:	add    eax,0x608e9c09
  4038eb:	out    0x28,eax
  4038ed:	mov    WORD PTR [edx],ss
  4038ef:	test   DWORD PTR [ebx],esi
  4038f1:	sbb    eax,0x17deae62
  4038f6:	and    al,0x6b
  4038f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038f9:	pop    ebp
  4038fa:	inc    eax
  4038fb:	or     ebp,DWORD PTR [edi]
  4038fd:	mov    BYTE PTR [esi-0x51],bh
  403900:	adc    bh,BYTE PTR [ecx+edi*2]
  403903:	ret    0x5878
  403906:	mov    esi,0xa8e20d57
  40390b:	fadd   QWORD PTR [ecx-0x80]
  40390e:	inc    esi
  40390f:	int    0x4b
  403911:	jnp    0x4038e1
  403913:	(bad)  
  403915:	mov    ebp,0x899f35d8
  40391a:	pusha  
  40391b:	xchg   ebp,eax
  40391c:	jge    0x4038ef
  40391e:	in     eax,0xf8
  403920:	or     BYTE PTR [ecx+edi*1+0x751f7185],bh
  403927:	test   al,0x76
  403929:	add    ebp,ecx
  40392b:	inc    edx
  40392c:	jl     0x40393d
  40392e:	xchg   ebp,eax
  40392f:	mov    al,ds:0x8bc88940
  403934:	out    dx,eax
  403935:	ss adc al,0x29
  403938:	ficom  WORD PTR [edx+esi*2-0x46089b50]
  40393f:	adc    dh,BYTE PTR fs:[eax-0x53f0f443]
  403946:	dec    edi
  403947:	xchg   ecx,ebx
  403949:	jb     0x4039b7
  40394b:	out    dx,eax
  40394c:	xor    edx,DWORD PTR [esi+0x63]
  40394f:	ins    DWORD PTR es:[edi],dx
  403950:	(bad)  
  403951:	in     al,dx
  403952:	xor    dh,BYTE PTR [esi+0x1504d931]
  403958:	push   ss
  403959:	scas   al,BYTE PTR es:[edi]
  40395a:	inc    esi
  40395b:	inc    edx
  40395c:	mov    eax,ds:0x3bb3beb7
  403961:	faddp  st(0),st
  403963:	mov    ds:0x37318560,eax
  403968:	pop    eax
  403969:	and    DWORD PTR [ebp-0x48],0xc
  40396d:	(bad)  
  40396e:	mov    eax,0xb0789f34
  403973:	jp     0x40398e
  403975:	pop    eax
  403976:	leave  
  403977:	int    0xd5
  403979:	xchg   ebx,eax
  40397a:	ins    DWORD PTR es:[edi],dx
  40397b:	lds    edi,FWORD PTR [ebx+0x76de13c3]
  403981:	push   esi
  403982:	xchg   BYTE PTR [edi],al
  403984:	paddw  mm3,QWORD PTR [ebx-0x29eca046]
  40398b:	xchg   edx,eax
  40398c:	and    ah,BYTE PTR [ebp+ecx*2+0x5c]
  403990:	and    esp,ecx
  403992:	(bad)  
  403993:	pop    esp
  403994:	lods   eax,DWORD PTR ds:[esi]
  403995:	xlat   BYTE PTR ds:[ebx]
  403996:	rcl    BYTE PTR [eax+0x5],cl
  403999:	adc    DWORD PTR [esi+ebp*1+0x68],ecx
  40399d:	sbb    al,0x1d
  40399f:	jp     0x4039c3
  4039a1:	sbb    al,0x72
  4039a3:	in     eax,dx
  4039a4:	aam    0xdd
  4039a6:	push   cs
  4039a7:	pop    ss
  4039a8:	ins    DWORD PTR es:[edi],dx
  4039a9:	pushf  
  4039aa:	add    dh,cl
  4039ac:	jb     0x40395a
  4039ae:	or     eax,0x760bab92
  4039b3:	adc    eax,0xab9ed3ba
  4039b8:	jns    0x4039c0
  4039ba:	fdiv   QWORD PTR [ecx+0x30]
  4039bd:	in     al,dx
  4039be:	inc    esi
  4039bf:	js     0x403971
  4039c1:	clc    
  4039c2:	adc    al,0xe9
  4039c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039c5:	fiadd  WORD PTR [ebx-0x6]
  4039c8:	pop    edi
  4039c9:	sbb    ecx,DWORD PTR [eax]
  4039cb:	(bad)  
  4039cc:	enter  0x7519,0x6c
  4039d0:	jg     0x4039cf
  4039d2:	scas   al,BYTE PTR es:[edi]
  4039d3:	inc    edi
  4039d4:	pop    ebp
  4039d5:	popf   
  4039d6:	mov    ecx,0xafabd6c1
  4039db:	pop    ecx
  4039dc:	cli    
  4039dd:	cmp    eax,0x8902fc17
  4039e2:	rol    BYTE PTR [ebx+0x556dbc99],cl
  4039e8:	es adc eax,0x4f692bad
  4039ee:	aam    0xd5
  4039f0:	arpl   ax,cx
  4039f2:	loopne 0x403a21
  4039f4:	pop    ebx
  4039f5:	hlt    
  4039f6:	cdq    
  4039f7:	retf   0xc7e0
  4039fa:	jg     0x403a70
  4039fc:	jmp    0x944fc93b
  403a01:	and    eax,0xd18b211
  403a06:	cmc    
  403a07:	xchg   edi,eax
  403a08:	xlat   BYTE PTR ds:[ebx]
  403a09:	inc    dx
  403a0b:	ins    BYTE PTR es:[edi],dx
  403a0c:	push   esi
  403a0d:	shr    BYTE PTR [ecx+0x3d],1
  403a10:	std    
  403a11:	pop    ebp
  403a12:	fldenv [edi-0x62]
  403a15:	das    
  403a16:	dec    edx
  403a17:	inc    edx
  403a18:	shl    ecx,cl
  403a1a:	dec    si
  403a1c:	retf   
  403a1d:	xchg   esp,eax
  403a1e:	je     0x4039f8
  403a20:	add    eax,0x927bca78
  403a25:	mov    ds:0xcc23d0f4,al
  403a2a:	adc    ecx,ecx
  403a2c:	mov    eax,ds:0x72b2e6ac
  403a31:	gs cdq 
  403a33:	mov    edi,0x655aedd8
  403a38:	push   ds
  403a39:	cdq    
  403a3a:	pusha  
  403a3b:	xor    eax,0xd854487e
  403a40:	sub    eax,0xf40d1b06
  403a45:	add    al,0xb3
  403a47:	cmp    dl,dl
  403a49:	jb     0x403abd
  403a4b:	sub    BYTE PTR [ebx+0x972a1cd],bh
  403a51:	stc    
  403a52:	sbb    edi,edi
  403a54:	dec    ebx
  403a55:	imul   eax,DWORD PTR [eax],0xffffffb6
  403a58:	jmp    0x82b8a530
  403a5d:	mov    ch,0x3
  403a5f:	sub    ecx,edx
  403a61:	add    bl,ah
  403a63:	lods   al,BYTE PTR ds:[esi]
  403a64:	aam    0xbf
  403a66:	inc    ecx
  403a67:	mov    edx,0x2eef95f4
  403a6c:	ins    DWORD PTR es:[edi],dx
  403a6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a6e:	iret   
  403a6f:	loop   0x403ada
  403a71:	jl     0x403aca
  403a73:	dec    ecx
  403a74:	jae    0x403aa9
  403a76:	adc    eax,esi
  403a78:	inc    ebp
  403a79:	in     eax,dx
  403a7a:	adc    BYTE PTR [ecx-0x4e],0xe6
  403a7e:	loop   0x403a08
  403a80:	jo     0x403a08
  403a82:	xor    ah,cl
  403a84:	addr16 adc ch,ch
  403a87:	mov    WORD PTR [esi+0x23],fs
  403a8a:	out    dx,eax
  403a8b:	test   BYTE PTR [edx-0x6a],cl
  403a8e:	jmp    0xb282:0x4eeda2aa
  403a95:	adc    ecx,DWORD PTR [eax+0x66ff7b24]
  403a9b:	push   ds
  403a9c:	sub    ch,ch
  403a9e:	fdivr  DWORD PTR [ebx-0x7994e57e]
  403aa4:	jae    0x403a76
  403aa6:	outs   dx,DWORD PTR ds:[esi]
  403aa7:	push   ebp
  403aa8:	push   ebx
  403aa9:	repnz loopne 0x403a67
  403aac:	cdq    
  403aad:	inc    esp
  403aae:	sbb    dl,bh
  403ab0:	adc    bl,BYTE PTR [esi]
  403ab2:	lods   al,BYTE PTR ds:[esi]
  403ab3:	stos   DWORD PTR es:[edi],eax
  403ab4:	push   ebp
  403ab5:	lea    edi,[ebx+ecx*8+0x78]
  403ab9:	pop    esi
  403aba:	ds inc ebp
  403abc:	mov    ah,0x27
  403abe:	lahf   
  403abf:	repz out 0xda,al
  403ac2:	sub    dl,cl
  403ac4:	jge    0x403b1f
  403ac6:	mov    esp,0xe39fc008
  403acb:	daa    
  403acc:	stc    
  403acd:	in     al,0x6c
  403acf:	(bad)  
  403ad0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ad1:	jg     0x403b08
  403ad3:	cmp    BYTE PTR [ecx+edx*4],0xd5
  403ad7:	shl    DWORD PTR [esi-0x56],0xbc
  403adb:	sbb    dh,dh
  403add:	xchg   esi,eax
  403ade:	std    
  403adf:	cwde   
  403ae0:	or     BYTE PTR [eax-0x7a74caa0],ah
  403ae6:	ret    
  403ae7:	pusha  
  403ae8:	test   al,0x3f
  403aea:	mov    DWORD PTR [edi-0x46f3e07e],0x24f2816f
  403af4:	adc    ecx,esi
  403af6:	mov    BYTE PTR [ecx],cl
  403af8:	or     DWORD PTR [edx+edx*8],0xffffffde
  403afc:	dec    ah
  403afe:	inc    esp
  403aff:	mov    ebx,0x7a18b440
  403b04:	test   BYTE PTR [ebx+0x1e],0xde
  403b08:	jo     0x403b78
  403b0a:	loopne 0x403ad2
  403b0c:	loope  0x403ad7
  403b0e:	sbb    edx,DWORD PTR [esi-0x9662a46]
  403b14:	cmp    edx,ecx
  403b16:	mov    ecx,DWORD PTR [ebp-0xc]
  403b19:	mov    DWORD PTR [ebp+0x8],ecx
  403b1c:	mov    ecx,DWORD PTR [ebp+0x8]
  403b1f:	je     0x406073
  403b25:	jmp    0x403b5a
  403b2a:	mov    ecx,DWORD PTR [ebp+0x8]
  403b2d:	mov    edx,DWORD PTR [ebp-0x8]
  403b30:	xor    ecx,eax
  403b32:	xor    edx,eax
  403b34:	sub    ecx,edx
  403b36:	sub    ecx,esi
  403b38:	xor    ecx,eax
  403b3a:	mov    DWORD PTR [ebp+0x8],ecx
  403b3d:	mov    ecx,DWORD PTR [ebp+0x8]
  403b40:	mov    edx,DWORD PTR [ebp+0x8]
  403b43:	xor    ecx,eax
  403b45:	imul   edx,edx,0x5708f5
  403b4b:	add    ecx,esi
  403b4d:	lea    ecx,[ebp+ecx*4-0x64]
  403b51:	mov    edi,DWORD PTR [ecx]
  403b53:	add    edx,edi
  403b55:	mov    DWORD PTR [ecx],edx
  403b57:	mov    ecx,DWORD PTR [ebp+0x8]
  403b5a:	xor    ecx,eax
  403b5c:	add    ecx,esi
  403b5e:	jne    0x403b2a
  403b64:	mov    ecx,DWORD PTR [ebp-0x14]
  403b67:	mov    edx,DWORD PTR [ebp+0x8]
  403b6a:	xor    ecx,eax
  403b6c:	xor    edx,eax
  403b6e:	add    ecx,esi
  403b70:	add    edx,esi
  403b72:	cmp    ecx,edx
  403b74:	jae    0x405f8d
  403b7a:	lea    edx,[ecx-0x3272db]
  403b80:	mov    DWORD PTR [ebp-0x18],edx
  403b83:	mov    edi,DWORD PTR [ebp-0x18]
  403b86:	mov    DWORD PTR [ebp-0x24],0x705fd08
  403b8d:	lea    edx,[ebp-0x24]
  403b90:	mov    DWORD PTR [ebp-0x10],edx
  403b93:	mov    edx,DWORD PTR [ebp-0x10]
  403b96:	add    DWORD PTR [edx],0x705fa08
  403b9c:	mov    ebx,DWORD PTR [ebp-0x10]
  403b9f:	xor    edi,eax
  403ba1:	add    edi,DWORD PTR [ebx]
  403ba3:	lea    edx,[ebp+ecx*4-0x64]
  403ba7:	mov    ebx,DWORD PTR [edx]
  403ba9:	xor    edi,ebx
  403bab:	mov    DWORD PTR [edx],edi
  403bad:	jmp    0x405f30
  403bb2:	pop    esi
  403bb3:	stos   BYTE PTR es:[edi],al
  403bb4:	sbb    DWORD PTR [eax],esp
  403bb6:	gs (bad) 
  403bb8:	push   ebx
  403bb9:	lds    ecx,FWORD PTR fs:[ebp-0x7b70b8b]
  403bc0:	jle    0x403b6d
  403bc2:	sbb    al,0x5f
  403bc4:	bound  esp,QWORD PTR [edx+0x1c]
  403bc7:	pop    edi
  403bc8:	bound  esp,QWORD PTR [edx-0x2d]
  403bcb:	push   ebx
  403bcc:	stos   DWORD PTR es:[edi],eax
  403bcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bce:	retf   0x4b7a
  403bd1:	dec    esi
  403bd2:	mov    ebp,0xe655f351
  403bd7:	xor    al,0xa6
  403bd9:	(bad)  
  403bda:	pop    ds
  403bdb:	aad    0x27
  403bdd:	and    eax,0xbeb8590b
  403be2:	sub    DWORD PTR [eax-0x14f240b8],ebp
  403be8:	push   0xffffffc2
  403bea:	ins    BYTE PTR es:[edi],dx
  403beb:	bound  ebx,QWORD PTR [ebx-0x269f9923]
  403bf1:	loope  0x403c19
  403bf3:	scas   eax,DWORD PTR es:[edi]
  403bf4:	imul   esp,DWORD PTR [ecx+0x6f],0xf4462eb6
  403bfb:	mov    ecx,ds
  403bfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bfe:	jmp    0x8d39:0x492c9f81
  403c05:	xlat   BYTE PTR ds:[ebx]
  403c06:	out    0xad,al
  403c08:	ins    DWORD PTR es:[edi],dx
  403c09:	stc    
  403c0a:	popf   
  403c0b:	sti    
  403c0c:	mov    eax,ds:0xecfd3432
  403c11:	xchg   esp,eax
  403c12:	cmp    eax,0xcb316773
  403c17:	jp     0x403c28
  403c19:	mov    bh,0x34
  403c1b:	aad    0x0
  403c1d:	add    eax,0x899e938a
  403c22:	mov    al,0x1f
  403c24:	out    dx,eax
  403c25:	jae    0x403c06
  403c27:	push   ebp
  403c28:	dec    edi
  403c29:	mov    edx,0xb14232cf
  403c2e:	mov    bl,0x48
  403c30:	xchg   DWORD PTR [ecx],edx
  403c32:	stos   DWORD PTR es:[edi],eax
  403c33:	rcl    edi,0x76
  403c36:	test   DWORD PTR [ebp+0x6d514bdf],esp
  403c3c:	mov    ?,esi
  403c3e:	xchg   bx,ax
  403c40:	or     al,0x27
  403c42:	gs or  al,al
  403c45:	dec    ebp
  403c46:	rcl    esi,0x3f
  403c49:	push   esi
  403c4a:	and    ah,BYTE PTR [ebx-0x4dc56572]
  403c50:	xchg   ebx,eax
  403c51:	jne    0x403c1f
  403c53:	nop
  403c54:	adc    esp,edx
  403c56:	enter  0xcae0,0x20
  403c5a:	popf   
  403c5b:	sub    al,0x44
  403c5d:	jge    0x403c7c
  403c5f:	sub    cl,ch
  403c61:	mov    esi,0x70e4e44d
  403c66:	cld    
  403c67:	(bad)  
  403c68:	scas   eax,DWORD PTR es:[edi]
  403c69:	mov    bl,0x50
  403c6b:	cli    
  403c6c:	adc    al,0x2
  403c6e:	jg     0x403ca8
  403c70:	or     ebx,DWORD PTR [edi-0xb]
  403c73:	xor    BYTE PTR [esi+eax*8+0x4ec8c5bb],0x4e
  403c7b:	mov    al,ds:0xa43a2da5
  403c80:	stos   DWORD PTR es:[edi],eax
  403c81:	pop    ds
  403c82:	int    0xb6
  403c84:	test   BYTE PTR [eax],ch
  403c86:	bound  eax,QWORD PTR [ebp-0x56541b15]
  403c8c:	pop    ebp
  403c8d:	or     DWORD PTR [ebx],0x77
  403c90:	call   0xf6e1:0xc1e5c927
  403c97:	mov    BYTE PTR [eax],al
  403c99:	inc    esp
  403c9a:	leave  
  403c9b:	into   
  403c9c:	xchg   esi,eax
  403c9d:	ja     0x403c32
  403c9f:	xchg   BYTE PTR [ecx-0xbc43b68],cl
  403ca5:	out    dx,eax
  403ca6:	pop    DWORD PTR [ebx-0x3aa38fb1]
  403cac:	sbb    ecx,esp
  403cae:	cmovbe edx,DWORD PTR [ebp+0x51]
  403cb2:	sub    eax,0x74b389a9
  403cb7:	mov    cl,0x1
  403cb9:	sbb    dl,BYTE PTR [eax-0x3e]
  403cbc:	sub    BYTE PTR [edx-0x1fa62382],bh
  403cc2:	push   esp
  403cc3:	ret    
  403cc4:	inc    ebp
  403cc5:	lock call 0x8f5dabc9
  403ccb:	push   eax
  403ccc:	retf   
  403ccd:	fnstsw WORD PTR [eax-0x63278679]
  403cd3:	aas    
  403cd4:	retf   0xd4cd
  403cd7:	xchg   edi,eax
  403cd8:	fbstp  TBYTE PTR [edi-0x3465afd7]
  403cde:	(bad)  
  403cdf:	mov    eax,0x917e5e99
  403ce4:	push   cs
  403ce5:	cmp    al,0xcb
  403ce7:	and    eax,0xedac4eb3
  403cec:	xor    bh,0x2c
  403cef:	cmp    ecx,DWORD PTR [ebx+0x57f93ca8]
  403cf5:	pop    ds
  403cf6:	jecxz  0x403cd7
  403cf8:	push   ecx
  403cf9:	push   ecx
  403cfb:	sbb    dh,BYTE PTR [eax-0x2e0c26be]
  403d01:	int    0x49
  403d03:	push   esi
  403d04:	retf   0xa377
  403d07:	lods   al,BYTE PTR gs:[esi]
  403d09:	mov    ?,WORD PTR [ebx+0x2c8b82db]
  403d0f:	inc    edx
  403d10:	dec    edx
  403d11:	or     DWORD PTR [eax+0x6a],ebp
  403d14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d15:	fbstp  TBYTE PTR [eax+0x2e740ba9]
  403d1b:	mov    ah,0x72
  403d1d:	scas   al,BYTE PTR es:[edi]
  403d1e:	lea    ebp,[edx]
  403d20:	cli    
  403d21:	xlat   BYTE PTR ds:[ebx]
  403d22:	fldcw  WORD PTR [ecx+0x55984df1]
  403d28:	sbb    BYTE PTR [esi-0x27],0x8e
  403d2c:	dec    BYTE PTR [ecx+0x5ee38b13]
  403d32:	mov    eax,0xb11cb48e
  403d37:	cmp    dh,bl
  403d39:	sbb    ah,cl
  403d3b:	dec    ebx
  403d3c:	push   ecx
  403d3d:	div    DWORD PTR [eax]
  403d3f:	daa    
  403d40:	outs   dx,DWORD PTR ds:[esi]
  403d41:	imul   ebp,ecx,0x9fe8da45
  403d47:	xor    edx,esp
  403d49:	sbb    al,0xc4
  403d4b:	adc    al,0x10
  403d4d:	xor    DWORD PTR [ecx],esp
  403d4f:	pop    edi
  403d50:	sub    eax,0xd163817
  403d55:	clc    
  403d56:	ret    
  403d57:	sbb    edx,ecx
  403d59:	cmp    al,0x5e
  403d5b:	and    al,0x32
  403d5d:	lahf   
  403d5e:	or     BYTE PTR [edi-0x69234c2f],ah
  403d64:	mov    cl,0x6f
  403d66:	mov    edi,0xca4d962a
  403d6b:	sub    BYTE PTR [esp+edi*2+0x6a],cl
  403d6f:	test   DWORD PTR [ebp+0x7dd61ddd],ebp
  403d75:	or     eax,0xd1956b
  403d7a:	jp     0x403ddc
  403d7c:	fcomp  QWORD PTR [ecx-0x453d2aae]
  403d82:	and    eax,DWORD PTR [ecx-0x194c6c9e]
  403d88:	fidivr WORD PTR [esi]
  403d8a:	or     DWORD PTR [edi+esi*1-0x3d],esp
  403d8e:	jbe    0x403d8a
  403d90:	cmp    BYTE PTR [esp+esi*1+0xe],cl
  403d94:	adc    cl,BYTE PTR [ecx-0x7f]
  403d97:	leave  
  403d98:	jmp    0xd2a0:0x3ed15ecf
  403d9f:	pop    ebp
  403da0:	push   cs
  403da1:	mov    ebp,0xd2dca651
  403da6:	xchg   DWORD PTR [eax],esp
  403da8:	xor    ch,bh
  403daa:	add    DWORD PTR [ecx+0x30b0e6a0],esi
  403db0:	stc    
  403db1:	outs   dx,DWORD PTR ds:[esi]
  403db2:	les    esp,FWORD PTR [edx+ebp*2-0x5e]
  403db6:	out    dx,eax
  403db7:	fidiv  DWORD PTR [ebx]
  403db9:	jno    0x403d84
  403dbb:	jnp    0x403d52
  403dbd:	ficomp DWORD PTR [ebx+0x27]
  403dc0:	loop   0x403dcb
  403dc2:	aad    0xef
  403dc4:	xchg   esp,eax
  403dc5:	xlat   BYTE PTR ds:[ebx]
  403dc6:	dec    edx
  403dc7:	enter  0x6bc2,0x78
  403dcb:	pop    eax
  403dcc:	or     al,0x30
  403dce:	xchg   esi,eax
  403dcf:	adc    al,bl
  403dd1:	mov    DWORD PTR [ebx-0x22],0x257f7863
  403dd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403dd9:	lock pushf 
  403ddb:	test   DWORD PTR [eax-0x4d],esi
  403dde:	stos   BYTE PTR es:[edi],al
  403ddf:	repz sbb bh,BYTE PTR [edi+0x19]
  403de3:	retf   0xe578
  403de6:	aaa    
  403de7:	call   0xbe9659b0
  403dec:	xchg   ecx,eax
  403ded:	push   ebp
  403dee:	push   ebx
  403def:	(bad)  
  403df0:	call   0xd333:0xb0256a1d
  403df7:	lock adc ebx,ebx
  403dfa:	(bad)  
  403dfb:	mov    DWORD PTR [esi],eax
  403dfd:	cmc    
  403dfe:	add    BYTE PTR [si-0x50],0x2
  403e03:	add    al,0x4
  403e05:	add    BYTE PTR [esi-0x51e110af],0x51
  403e0c:	xchg   ecx,eax
  403e0d:	jp     0x403e7a
  403e0f:	loop   0x403dcc
  403e11:	cmp    DWORD PTR [di-0x5619],esp
  403e16:	popa   
  403e17:	or     eax,0x449f7e33
  403e1c:	int3   
  403e1d:	xor    al,0x0
  403e1f:	jmp    0x48b09574
  403e24:	mov    ebx,0x35899f34
  403e29:	(bad)  [edx]
  403e2b:	jmp    0xd0c57db3
  403e30:	jg     0x403db4
  403e32:	pusha  
  403e33:	fs pushf 
  403e35:	xor    dh,BYTE PTR [ecx+0x56d2528b]
  403e3b:	mov    ch,BYTE PTR [edx+edx*4-0xa575dfc]
  403e42:	push   ebx
  403e43:	dec    ebx
  403e44:	stos   DWORD PTR es:[edi],eax
  403e45:	rcr    esp,0x37
  403e48:	iret   
  403e49:	mov    ds:0x94654dad,al
  403e4e:	retf   0xaf7e
  403e51:	ret    
  403e52:	mov    al,0x7c
  403e54:	mov    edi,0xf3201480
  403e59:	(bad)  
  403e5a:	in     al,dx
  403e5b:	div    ch
  403e5d:	test   BYTE PTR [eax-0x22],cl
  403e60:	add    al,ah
  403e62:	aad    0x9
  403e64:	adc    al,0xf2
  403e66:	sbb    eax,0xf0c7a58f
  403e6b:	cmp    DWORD PTR es:[edx],edi
  403e6e:	or     BYTE PTR [ecx+0x2f],ah
  403e71:	jno    0x403e91
  403e73:	jge    0x403ef4
  403e75:	scas   al,BYTE PTR es:[edi]
  403e76:	test   eax,0xa43965cf
  403e7b:	add    DWORD PTR ds:0x990898d3,edi
  403e81:	mov    edx,0xbc6f91b8
  403e86:	fst    QWORD PTR [ebx+ebp*2-0x2c774971]
  403e8d:	(bad)  
  403e8e:	jl     0x403ec8
  403e90:	sbb    dh,al
  403e92:	jbe    0x403ef3
  403e94:	mov    ?,WORD PTR [ebx-0x17]
  403e97:	pop    es
  403e98:	inc    BYTE PTR [ecx+eiz*4]
  403e9b:	xchg   ebp,eax
  403e9c:	jp     0x403ecf
  403e9e:	pop    eax
  403e9f:	gs ret 
  403ea1:	cmp    eax,0x44d0b1da
  403ea6:	cmp    al,0xea
  403ea8:	aas    
  403ea9:	jns    0x403ea6
  403eab:	ja     0x403f21
  403ead:	(bad)  
  403eae:	or     dh,al
  403eb0:	out    dx,eax
  403eb1:	imul   eax,DWORD PTR [edi*8+0x2a59ee7f],0x1f106693
  403ebc:	sub    bh,BYTE PTR [esi]
  403ebe:	mov    DWORD PTR [eax],esp
  403ec0:	retf   0x3c77
  403ec3:	xchg   ebx,eax
  403ec4:	aaa    
  403ec5:	ret    
  403ec6:	mov    edx,0xfaf0d3d4
  403ecb:	lahf   
  403ecc:	cmp    ecx,DWORD PTR [edx+0x3]
  403ecf:	das    
  403ed0:	add    edi,DWORD PTR [edi]
  403ed2:	addr16 inc edx
  403ed4:	mov    al,BYTE PTR [eax-0x5e]
  403ed7:	inc    edi
  403ed8:	push   esp
  403ed9:	mov    ah,BYTE PTR [ebp+edx*1+0x5e2563de]
  403ee0:	inc    esi
  403ee1:	sar    DWORD PTR [ebx+0x604a3b17],cl
  403ee7:	xor    eax,0x84e937d0
  403eec:	dec    esi
  403eed:	cli    
  403eee:	retf   0x60d
  403ef1:	push   0xffffff86
  403ef3:	sub    esi,eax
  403ef5:	dec    esi
  403ef6:	or     BYTE PTR [eax],0x5a
  403ef9:	sub    ecx,edi
  403efb:	and    esp,ebp
  403efd:	mov    dh,0x92
  403eff:	cs dec ebx
  403f01:	push   esi
  403f02:	jnp    0x403ea5
  403f04:	repnz or eax,0x14be43e5
  403f0a:	xor    bl,BYTE PTR [eax+esi*2+0x36]
  403f0e:	call   0x72274fbc
  403f13:	pop    edx
  403f14:	pop    eax
  403f15:	popf   
  403f16:	gs je  0x403f10
  403f19:	mov    BYTE PTR [ebx-0x1321d3d6],bh
  403f1f:	xor    eax,0x20001bbf
  403f24:	leave  
  403f25:	out    0x3,eax
  403f27:	pop    ds
  403f28:	xor    dl,BYTE PTR [ebp+ebp*1+0x70]
  403f2c:	cmp    BYTE PTR [ebx],dl
  403f2e:	out    dx,al
  403f2f:	adc    DWORD PTR [esp+eiz*2],ebp
  403f32:	popf   
  403f33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f34:	pop    es
  403f35:	cwde   
  403f36:	test   ebp,0xfa6c3b65
  403f3c:	jmp    0x403f33
  403f3e:	mov    ah,0x48
  403f40:	mov    dh,0x6d
  403f42:	xor    edx,DWORD PTR [edi-0x44a3d888]
  403f48:	sub    al,0x32
  403f4a:	aad    0xdd
  403f4c:	cwde   
  403f4d:	enter  0x972f,0x7a
  403f51:	ja     0x403fc1
  403f53:	mov    DWORD PTR [esi+0x6df70617],eax
  403f59:	adc    al,0x63
  403f5b:	adc    al,0x9c
  403f5d:	in     al,0x77
  403f5f:	test   ebx,eax
  403f61:	mov    eax,ds:0x962448ad
  403f66:	pop    ecx
  403f67:	add    eax,0x4525cbf3
  403f6c:	loop   0x403f91
  403f6e:	mov    ch,0xc4
  403f70:	pop    eax
  403f71:	mov    fs,WORD PTR [eax-0x1074ca20]
  403f77:	bt     DWORD PTR ss:[ebx+edx*2+0x5259e739],esp
  403f80:	aam    0x59
  403f82:	dec    edi
  403f83:	sbb    al,0xdd
  403f85:	dec    ebp
  403f86:	cld    
  403f87:	push   esi
  403f89:	xchg   ebp,eax
  403f8a:	push   edi
  403f8b:	or     al,0x3b
  403f8d:	inc    di
  403f8f:	dec    edi
  403f90:	bound  ebx,QWORD PTR [ebx-0x37289fd3]
  403f96:	xlat   BYTE PTR ds:[ebx]
  403f97:	inc    edi
  403f98:	ss popa 
  403f9a:	inc    ebp
  403f9b:	paddd  mm7,QWORD PTR [esi]
  403f9e:	inc    eax
  403f9f:	mov    ebp,0x4fce295a
  403fa4:	retf   
  403fa5:	sbb    DWORD PTR [ecx+0x14401301],edi
  403fab:	vmaxss xmm7,xmm1,DWORD PTR [eax-0x43]
  403fb0:	rcl    DWORD PTR ds:0xa243f270,0x37
  403fb7:	or     DWORD PTR [edx+0x25],esp
  403fba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fbb:	push   ebp
  403fbc:	inc    ecx
  403fbd:	push   eax
  403fbe:	mov    al,0x2e
  403fc0:	ret    0x48ae
  403fc3:	xlat   BYTE PTR ds:[ebx]
  403fc4:	fcom   st(6)
  403fc6:	mov    ecx,ecx
  403fc8:	jno    0x403fd7
  403fca:	mov    esi,ebp
  403fcc:	mov    ah,0xf2
  403fce:	push   ecx
  403fcf:	ret    0xaac5
  403fd2:	out    0xdf,eax
  403fd4:	sub    ebx,DWORD PTR [ecx-0x49dc3f62]
  403fda:	ret    0xeecc
  403fdd:	dec    esi
  403fde:	test   eax,0x9538727f
  403fe3:	jecxz  0x404049
  403fe5:	or     cl,BYTE PTR [eax]
  403fe7:	fbstp  TBYTE PTR [esi+0x258f631f]
  403fed:	rcr    BYTE PTR [eax+ecx*4+0x24],1
  403ff1:	mov    DWORD PTR [ebx],esp
  403ff3:	cld    
  403ff4:	cmc    
  403ff5:	je     0x403fd0
  403ff7:	mov    dh,0x7c
  403ff9:	xor    al,0xfa
  403ffb:	xor    ebp,edi
  403ffd:	lea    ebx,[ebp+0x4f65f1d8]
  404003:	pop    ebx
  404004:	shl    DWORD PTR [ecx],1
  404006:	jno    0x404010
  404008:	and    edx,DWORD PTR [ecx]
  40400a:	jne    0x404039
  40400c:	ins    DWORD PTR es:[edi],dx
  40400d:	jp     0x404053
  40400f:	scas   al,BYTE PTR es:[edi]
  404010:	inc    ecx
  404011:	ret    0x6688
  404014:	xor    dh,BYTE PTR [edx]
  404016:	push   es
  404017:	mov    ebp,0x91264945
  40401c:	mov    bl,0xe9
  40401e:	outs   dx,DWORD PTR ds:[esi]
  40401f:	mov    edx,0x43aabebd
  404024:	and    DWORD PTR [ebx],esp
  404026:	mov    bl,0x87
  404028:	ins    DWORD PTR es:[edi],dx
  404029:	mov    ebx,0x6a2c7ab9
  40402e:	adc    DWORD PTR [edi+0x57],esi
  404031:	sub    eax,0xbec706a4
  404036:	jmp    0xe3f1c962
  40403b:	fadd   DWORD PTR [edx+0x7bc3c714]
  404041:	push   esp
  404042:	jge    0x404086
  404044:	enter  0x9b07,0x69
  404048:	pop    ebp
  404049:	mov    ecx,0x7c5b504e
  40404e:	or     ebx,DWORD PTR [edi+0x5e]
  404051:	inc    eax
  404052:	push   eax
  404053:	sbb    DWORD PTR [ebx-0xa],0xa9142820
  40405a:	mov    bh,0x53
  40405c:	sub    al,0xb0
  40405e:	add    al,0xb9
  404060:	fidiv  WORD PTR [ecx-0x212ba53b]
  404066:	retf   
  404067:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404068:	int    0xe6
  40406a:	mov    esp,0x91521979
  40406f:	(bad)  
  404070:	xchg   ebx,eax
  404071:	cmp    cl,dh
  404073:	mov    ebx,0x8b0d5cef
  404078:	mov    bh,0xed
  40407a:	cwde   
  40407b:	or     bl,cl
  40407d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40407e:	movnti DWORD PTR [ebx-0x6903db87],esi
  404085:	retf   
  404086:	fcmovnb st,st(2)
  404088:	ror    BYTE PTR [eax+0x4f759043],cl
  40408e:	clc    
  40408f:	jno    0x404030
  404091:	ss xchg ebp,eax
  404093:	xchg   ecx,eax
  404094:	vunpckhps xmm1,xmm5,XMMWORD PTR [ecx-0x3b5c5ce0]
  40409c:	push   edi
  40409d:	push   0x44f5e95e
  4040a2:	fs jmp 0x608e:0xca60ce40
  4040aa:	jne    0x40409a
  4040ac:	das    
  4040ad:	fs xchg edx,eax
  4040af:	add    DWORD PTR [edi+0xd],0xc8fa51c8
  4040b6:	ret    
  4040b7:	test   eax,ebp
  4040b9:	stos   DWORD PTR es:[edi],eax
  4040ba:	(bad)  
  4040bb:	xchg   edx,eax
  4040bc:	mov    edi,0x579988ad
  4040c1:	and    ebx,DWORD PTR [esi+0x30]
  4040c4:	jo     0x404132
  4040c6:	ss or  ch,ch
  4040c9:	push   edx
  4040ca:	ficom  WORD PTR [ebx]
  4040cc:	scas   al,BYTE PTR es:[edi]
  4040cd:	sbb    BYTE PTR [edx],0x29
  4040d0:	int3   
  4040d1:	enter  0x4f46,0xc9
  4040d5:	xor    eax,0xc88836f4
  4040da:	xchg   esp,eax
  4040db:	inc    ebp
  4040dc:	mov    ebp,DWORD PTR [edx]
  4040de:	sub    al,0xf3
  4040e0:	add    DWORD PTR [ecx+edi*4+0x6],ebx
  4040e4:	jl     0x404087
  4040e6:	fwait
  4040e7:	jecxz  0x4040d4
  4040e9:	mov    esi,0xf84460d4
  4040ee:	and    al,0x11
  4040f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040f1:	jb     0x404131
  4040f3:	mov    al,0x17
  4040f5:	(bad)  
  4040f6:	popa   
  4040f7:	push   esi
  4040f8:	adc    BYTE PTR [edx+0x47cc0026],dl
  4040fe:	xor    eax,0x94f74061
  404103:	dec    ecx
  404104:	jg     0x40409b
  404106:	inc    ecx
  404107:	xor    al,0xef
  404109:	sti    
  40410a:	push   ebp
  40410b:	dec    edx
  40410c:	stos   BYTE PTR es:[edi],al
  40410d:	jns    0x40418c
  40410f:	test   eax,0x163233d2
  404114:	loope  0x4040b5
  404116:	xchg   BYTE PTR [esi-0x5c41d3b6],bh
  40411c:	dec    ebp
  40411d:	iret   
  40411e:	mov    ch,BYTE PTR [ebx+0x28]
  404121:	pushf  
  404122:	jle    0x404138
  404124:	les    ebx,FWORD PTR [edi-0x73]
  404127:	pop    eax
  404128:	daa    
  404129:	push   ecx
  40412a:	adc    eax,0xa27deb85
  40412f:	pop    ss
  404130:	fiadd  DWORD PTR [ecx-0x2a]
  404133:	icebp  
  404134:	es add ah,bl
  404137:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404138:	or     eax,DWORD PTR [edi-0x7ce835e1]
  40413e:	jns    0x4041b5
  404140:	call   0xd611:0x512bcdb8
  404147:	js     0x4041a8
  404149:	cld    
  40414a:	popa   
  40414b:	push   ds
  40414c:	aas    
  40414d:	out    dx,eax
  40414e:	or     DWORD PTR [edx],edx
  404150:	jl     0x4041c4
  404152:	fst    QWORD PTR [ebp-0x17]
  404155:	jnp    0x4041ab
  404157:	not    DWORD PTR [edx-0x54dc6096]
  40415d:	mov    ds:0xeb76be78,al
  404162:	inc    eax
  404163:	aas    
  404164:	xchg   esp,eax
  404165:	dec    esp
  404166:	test   BYTE PTR [esi+0x3d7539ef],ch
  40416c:	or     DWORD PTR [esi-0x30033174],0xffffff97
  404173:	ins    BYTE PTR es:[edi],dx
  404174:	xchg   eax,esi
  404176:	clc    
  404177:	shr    DWORD PTR ds:0x857543c7,1
  40417d:	xchg   DWORD PTR [ebx],ebp
  40417f:	push   0x19edb07a
  404184:	iret   
  404185:	jns    0x4041b0
  404187:	lds    esp,FWORD PTR [ebx+0x59667f6d]
  40418d:	rol    BYTE PTR [esi-0x5e],1
  404190:	sahf   
  404191:	xor    bl,BYTE PTR [eax+0x1]
  404194:	mov    eax,0x1f19a6ab
  404199:	retf   
  40419a:	add    eax,0x703cabdf
  40419f:	lods   al,BYTE PTR ds:[esi]
  4041a0:	or     dl,ch
  4041a2:	mov    ds:0x2f617fec,eax
  4041a7:	jne    0x404187
  4041a9:	jecxz  0x4041f8
  4041ab:	add    dh,BYTE PTR [ebp-0x9]
  4041ae:	adc    ah,BYTE PTR [ebx+0x5948dfb4]
  4041b4:	adc    eax,0xbf1ad9f4
  4041b9:	loopne 0x40421f
  4041bb:	fdivr  QWORD PTR [ecx+0x46]
  4041be:	dec    edx
  4041bf:	sub    BYTE PTR [ebx],0xa4
  4041c2:	iret   
  4041c3:	add    ah,bh
  4041c5:	sbb    edi,edi
  4041c7:	imul   eax,edi,0xc2208b7c
  4041cd:	and    eax,0xdad88925
  4041d2:	dec    esi
  4041d3:	lods   eax,DWORD PTR ds:[esi]
  4041d4:	xchg   esi,eax
  4041d5:	(bad)  
  4041d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041d7:	or     al,0x50
  4041d9:	clc    
  4041da:	push   0x24
  4041dc:	stc    
  4041dd:	add    al,0x6f
  4041df:	imul   edx,DWORD PTR [esi+0x23a82b26],0x29da732b
  4041e9:	call   0x9925b77a
  4041ee:	ret    0x4af8
  4041f1:	jns    0x404180
  4041f3:	and    BYTE PTR [ebp+0xe],ch
  4041f6:	clc    
  4041f7:	popf   
  4041f8:	in     al,dx
  4041f9:	xchg   DWORD PTR [edi+edi*2],ecx
  4041fc:	fnstsw WORD PTR [ebp-0x46]
  4041ff:	and    eax,0xb5144ea0
  404204:	ficom  WORD PTR [esi]
  404206:	rcl    BYTE PTR [edx+edi*8-0x17],cl
  40420a:	imul   ecx,ecx,0x2294efa6
  404210:	jb     0x404228
  404212:	int    0x6a
  404214:	mov    BYTE PTR [ebx+esi*2],al
  404217:	add    ah,BYTE PTR [ecx+0xff0dd83]
  40421d:	adc    al,0x77
  40421f:	in     al,dx
  404220:	ret    
  404221:	pop    ds
  404222:	cmp    eax,0xf8ca5539
  404227:	inc    eax
  404228:	inc    ecx
  404229:	mov    DWORD PTR [ebx],ebp
  40422b:	and    ah,BYTE PTR [ebx-0x25]
  40422e:	xchg   BYTE PTR [ebx+eax*2+0x11],ah
  404232:	ins    BYTE PTR es:[edi],dx
  404233:	pop    ebx
  404234:	and    DWORD PTR [ecx],ebp
  404236:	cwde   
  404237:	test   BYTE PTR [ebp+0x19],al
  40423a:	sub    DWORD PTR [edx+0x21b407a],eax
  404240:	xchg   ecx,eax
  404241:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404242:	xchg   ecx,eax
  404243:	sti    
  404244:	lods   eax,DWORD PTR ds:[esi]
  404245:	or     al,0x4a
  404247:	into   
  404248:	xchg   ebx,eax
  404249:	push   ecx
  40424a:	adc    eax,0xf3c516dc
  40424f:	call   FWORD PTR [edx]
  404251:	jmp    0x7f11:0x69ca4ab1
  404258:	clc    
  404259:	cld    
  40425a:	rol    BYTE PTR [ecx+0x40],1
  40425d:	cmc    
  40425e:	pop    ebp
  40425f:	jecxz  0x40425c
  404261:	aam    0xba
  404263:	dec    esi
  404264:	push   edx
  404265:	lods   eax,DWORD PTR cs:[esi]
  404267:	outs   dx,BYTE PTR ds:[esi]
  404268:	push   0xffffffa1
  40426a:	outs   dx,BYTE PTR ds:[esi]
  40426b:	std    
  40426c:	daa    
  40426d:	mov    bh,0x97
  40426f:	addr16 js 0x40428d
  404272:	in     al,0x61
  404274:	xor    al,0xaf
  404276:	aad    0xfb
  404278:	clc    
  404279:	cmp    eax,0xcd30bf90
  40427e:	mov    al,0xe6
  404280:	xor    BYTE PTR [edi+0x5f6ba74a],0x93
  404287:	ret    0x7bee
  40428a:	or     dl,BYTE PTR [eax]
  40428c:	aas    
  40428d:	xor    ah,dl
  40428f:	and    DWORD PTR [ebx],eax
  404291:	adc    esp,esi
  404293:	out    dx,eax
  404294:	jno    0x4042fd
  404296:	jmp    0x4042ed
  404298:	and    esi,ebx
  40429a:	push   ebx
  40429b:	sti    
  40429c:	and    DWORD PTR [ebx+0x20],ecx
  40429f:	and    BYTE PTR [ebp+ecx*8-0x670667d5],ch
  4042a6:	and    BYTE PTR [ebx+0x4fcdeb32],dl
  4042ac:	pop    ss
  4042ad:	adc    al,0xb7
  4042af:	mov    ds:0xcc51be3a,al
  4042b4:	ins    DWORD PTR es:[edi],dx
  4042b5:	mov    WORD PTR [ebp+0x1b4e5cf2],ss
  4042bb:	add    eax,0x27900a31
  4042c0:	popa   
  4042c1:	jge    0x4042b6
  4042c3:	test   al,0x29
  4042c5:	dec    eax
  4042c6:	mov    cl,0x8c
  4042c8:	(bad)  
  4042ca:	jmp    0x40429e
  4042cc:	add    al,0xd2
  4042ce:	leave  
  4042cf:	fidiv  WORD PTR [edi-0x49068a34]
  4042d5:	cdq    
  4042d6:	lock xchg ebx,eax
  4042d8:	test   al,0x7e
  4042da:	gs dec ebp
  4042dc:	cmp    eax,0x6b349633
  4042e1:	mov    bh,0x10
  4042e3:	aam    0x14
  4042e5:	cs repz jge 0x40432a
  4042e9:	xchg   ecx,edi
  4042eb:	sub    eax,0x3116a589
  4042f0:	(bad)  
  4042f1:	ficom  DWORD PTR [ebx+0x1533716f]
  4042f7:	mov    ebp,DWORD PTR [edx-0x3b]
  4042fa:	add    eax,0x360a206b
  4042ff:	mov    cl,0x4f
  404301:	lock fld QWORD PTR [edx+ecx*2]
  404305:	in     al,dx
  404306:	jno    0x4042e5
  404308:	mov    cl,0x44
  40430a:	scas   al,BYTE PTR es:[edi]
  40430b:	shr    BYTE PTR [ecx],1
  40430d:	arpl   WORD PTR [ecx],ax
  40430f:	loop   0x4042d9
  404311:	lods   eax,DWORD PTR ds:[esi]
  404312:	xor    ch,BYTE PTR [ebp+0xb057ac9]
  404318:	shl    edx,cl
  40431a:	lock inc edi
  40431c:	mov    ch,0x1
  40431e:	fldlg2 
  404320:	rol    DWORD PTR [ebx+0x3f459562],cl
  404326:	xchg   DWORD PTR [edx+ebx*8-0x4e840cd0],ebx
  40432d:	xor    ebx,ecx
  40432f:	xchg   esi,eax
  404330:	and    al,0xd
  404332:	std    
  404333:	divps  xmm5,XMMWORD PTR [ecx-0x10]
  404337:	and    esi,DWORD PTR [esi]
  404339:	popf   
  40433a:	repnz sub eax,0x31a2ba0
  404340:	(bad)  
  404341:	pop    esp
  404342:	push   eax
  404343:	lock fdivr st,st(1)
  404346:	add    BYTE PTR [ebx+0x275f06c9],ch
  40434c:	dec    edx
  40434d:	xor    DWORD PTR [edi],esi
  40434f:	jl     0x4042ed
  404351:	pop    edx
  404352:	mov    BYTE PTR [ecx-0x719558ce],ch
  404358:	pop    esp
  404359:	sub    DWORD PTR [esi+0x2ecfbc60],0x43179f28
  404363:	lahf   
  404364:	add    eax,DWORD PTR [esp+ecx*4-0x7a]
  404368:	pop    edx
  404369:	enter  0x7534,0x71
  40436d:	stc    
  40436e:	cmp    ebp,0x3143d930
  404374:	cli    
  404375:	or     al,0x22
  404377:	xlat   BYTE PTR ds:[ebx]
  404378:	test   DWORD PTR [esi+0x77],0xb8b2a8e8
  40437f:	adc    al,0xfb
  404381:	shl    cl,cl
  404383:	push   esi
  404384:	sbb    edi,DWORD PTR [edi-0x5d028ba4]
  40438a:	arpl   WORD PTR [edi+0x41],bp
  40438d:	mov    ecx,0xdade6486
  404392:	arpl   WORD PTR [esi-0x50f37200],dx
  404398:	enter  0x4f9c,0x18
  40439c:	popf   
  40439d:	ret    0x126f
  4043a0:	xchg   DWORD PTR [esi],edi
  4043a2:	xlat   BYTE PTR ds:[ebx]
  4043a3:	inc    esp
  4043a4:	ins    BYTE PTR es:[edi],dx
  4043a5:	pop    eax
  4043a6:	dec    esi
  4043a7:	xlat   BYTE PTR ds:[ebx]
  4043a8:	outs   dx,DWORD PTR ds:[esi]
  4043a9:	push   cs
  4043aa:	pop    eax
  4043ab:	xor    DWORD PTR [edx-0x40],eax
  4043ae:	mov    bh,0xf
  4043b0:	pop    es
  4043b1:	in     eax,dx
  4043b2:	or     edi,ecx
  4043b4:	out    0xa,eax
  4043b6:	retf   0x690a
  4043b9:	mov    eax,ds:0x325b4792
  4043be:	dec    eax
  4043bf:	push   esp
  4043c0:	jmp    0x1f56:0x3362cfe3
  4043c7:	test   BYTE PTR [ebx+0x7b0641e1],0xb
  4043ce:	(bad)  
  4043cf:	aam    0x78
  4043d1:	pop    esp
  4043d2:	(bad)  
  4043d3:	adc    DWORD PTR [ebp-0x64],edx
  4043d6:	mov    esp,0x5247742e
  4043db:	mov    ah,0xdf
  4043dd:	xor    dl,dl
  4043df:	mov    ds:0x773d3244,al
  4043e4:	mov    dl,0x7c
  4043e6:	fs jno 0x404443
  4043e9:	jmp    DWORD PTR [ebx+0x6de98b2e]
  4043ef:	pop    ds
  4043f0:	jbe    0x40440f
  4043f2:	(bad)  
  4043f4:	dec    edx
  4043f5:	mov    esp,0x5984ccaa
  4043fa:	and    esi,DWORD PTR [eax+ecx*2-0x164a0334]
  404401:	jmp    0x195cbd
  404406:	mov    dl,0x62
  404409:	repz xor dl,0x18
  40440d:	cmp    ch,BYTE PTR [eax+0x22]
  404410:	xor    edx,DWORD PTR [eax]
  404412:	shr    edx,1
  404414:	pop    ds
  404415:	inc    ebp
  404416:	jno    0x4043d6
  404418:	loopne 0x404480
  40441a:	stc    
  40441b:	jae    0x40448b
  40441d:	inc    ebx
  40441e:	in     eax,dx
  40441f:	jmp    0xc339:0xcc6370ac
  404426:	jecxz  0x40447c
  404428:	out    dx,eax
  404429:	mov    dh,0xd0
  40442b:	fcomp  DWORD PTR [esi-0x61]
  40442e:	xchg   ecx,eax
  40442f:	pop    edx
  404430:	dec    edx
  404431:	fwait
  404432:	(bad)
  404435:	scas   eax,DWORD PTR es:[edi]
  404436:	adc    cl,BYTE PTR [edx+0x7]
  404439:	push   edi
  40443a:	bound  esp,QWORD PTR [ebx+0x17f0180b]
  404440:	sub    edx,DWORD PTR [esi]
  404442:	add    al,0x55
  404444:	shl    ecx,0xa2
  404447:	mov    al,ds:0xd2db0dee
  40444c:	add    bh,al
  40444e:	sar    DWORD PTR ds:0x15f03018,1
  404454:	xor    bl,al
  404456:	mov    edx,?
  404458:	mov    ecx,0x41e4ac8f
  40445d:	data16 and BYTE PTR ds:0x66dde73,al
  404464:	lahf   
  404465:	or     al,0xaa
  404467:	test   al,0x71
  404469:	out    dx,eax
  40446a:	test   al,0xf5
  40446c:	sub    eax,0x73661555
  404471:	xor    al,0xea
  404473:	ror    DWORD PTR [ebx-0x1f],cl
  404476:	sahf   
  404477:	outs   dx,BYTE PTR ds:[esi]
  404478:	and    ebp,DWORD PTR ss:0x5e5ef7c2
  40447f:	outs   dx,BYTE PTR ds:[esi]
  404480:	pop    edi
  404481:	sbb    dl,BYTE PTR [ebp+0x44]
  404484:	adc    dh,0xde
  404487:	outs   dx,BYTE PTR ds:[esi]
  404488:	mov    bl,0xaa
  40448a:	dec    edx
  40448b:	arpl   WORD PTR [eax-0x20],bx
  40448e:	loopne 0x404505
  404490:	outs   dx,DWORD PTR ds:[esi]
  404491:	fdiv   st(6),st
  404493:	cmp    BYTE PTR [ebp+0x2927c909],bl
  404499:	je     0x4044ba
  40449b:	mov    ch,0x99
  40449d:	mov    ds:0xbd4d658b,eax
  4044a2:	xor    edi,DWORD PTR [eax+0x51]
  4044a5:	cmp    BYTE PTR [edx+0x37b8f304],0x64
  4044ac:	inc    edi
  4044ad:	int3   
  4044ae:	cmp    edx,DWORD PTR [edi-0x2f]
  4044b1:	dec    ebp
  4044b2:	imul   eax,DWORD PTR [ebx-0x29],0x64a0ad52
  4044b9:	jecxz  0x4044b4
  4044bb:	mov    ds:0x9c140e8b,eax
  4044c0:	xchg   BYTE PTR [ebx],bl
  4044c2:	push   esp
  4044c3:	imul   edx,edx,0xb7f5209b
  4044c9:	aas    
  4044ca:	pop    ebp
  4044cb:	imul   edx,DWORD PTR [ebp+0x10f5897a],0xf2c6c0d3
  4044d5:	sbb    DWORD PTR [eax+0x5e26e33],edi
  4044db:	push   cs
  4044dc:	(bad)  
  4044dd:	cmp    al,BYTE PTR [ecx-0x1a]
  4044e0:	daa    
  4044e1:	cmp    DWORD PTR [edx],edi
  4044e3:	jns    0x404488
  4044e5:	call   ebp
  4044e7:	sub    BYTE PTR [eax-0x6130193e],ah
  4044ed:	add    edi,DWORD PTR [edx]
  4044ef:	cwde   
  4044f0:	sub    eax,0xbdbdddc6
  4044f5:	xchg   edi,eax
  4044f6:	xor    bh,ch
  4044f8:	jo     0x4044aa
  4044fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044fb:	sub    ah,BYTE PTR [eax]
  4044fd:	jg     0x404513
  4044ff:	adc    ebx,DWORD PTR ds:[eax+0x7c8c2380]
  404506:	adc    esp,DWORD PTR [ecx+0x2]
  404509:	add    edx,DWORD PTR [ebp-0x69]
  40450c:	clc    
  40450d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40450e:	dec    eax
  40450f:	outs   dx,DWORD PTR ds:[esi]
  404510:	psubusw mm4,QWORD PTR [eax+0x19994261]
  404517:	call   0x2dfb778a
  40451c:	jbe    0x404554
  40451e:	sub    eax,0xbdc75094
  404523:	pop    ds
  404524:	aas    
  404525:	ficomp DWORD PTR [ebx]
  404527:	jge    0x40456d
  404529:	or     ah,al
  40452b:	pop    ebx
  40452c:	or     BYTE PTR [ebx],ah
  40452e:	loop   0x404588
  404530:	mov    eax,ds:0x736aefa8
  404535:	mov    al,0x5e
  404537:	mov    eax,ds:0x770a88fe
  40453c:	inc    edi
  40453d:	dec    ebp
  40453e:	rol    BYTE PTR ds:0xf88ac3e0,1
  404544:	arpl   WORD PTR [ebp-0x48],sp
  404547:	loop   0x404547
  404549:	mov    ?,WORD PTR [ecx]
  40454b:	sub    al,0xb
  40454d:	popa   
  40454e:	or     esi,DWORD PTR ds:[ebp+0x403a26d5]
  404555:	mov    BYTE PTR [edx],0xd9
  404558:	xbegin 0x83c017e6
  40455e:	and    al,0xe4
  404560:	mov    WORD PTR ds:0x3c48503f,?
  404566:	std    
  404567:	xor    al,0x43
  404569:	ret    
  40456a:	and    eax,0xbdfc42d0
  40456f:	mov    bl,0xee
  404571:	jmp    0x40453d
  404573:	fld    QWORD PTR ds:0x8e826988
  404579:	sub    DWORD PTR [ebx],0x37
  40457c:	out    dx,al
  40457d:	(bad)  
  40457e:	das    
  40457f:	push   edi
  404580:	hlt    
  404581:	div    ebx
  404583:	xor    DWORD PTR [eax],ecx
  404585:	inc    esp
  404586:	loopne 0x4045f1
  404588:	arpl   WORD PTR [eax-0x60],ax
  40458b:	xchg   edx,eax
  40458c:	push   esi
  40458d:	xchg   edi,eax
  40458e:	rol    ch,0xfc
  404591:	ins    BYTE PTR es:[edi],dx
  404592:	cwde   
  404593:	cmp    DWORD PTR [ecx-0x2ac10ef0],esp
  404599:	ins    DWORD PTR es:[edi],dx
  40459a:	aam    0xb6
  40459c:	ins    DWORD PTR es:[edi],dx
  40459d:	xchg   ebp,eax
  40459e:	adc    al,0x7e
  4045a0:	adc    esi,DWORD PTR [edx+edx*2-0x1e]
  4045a4:	iret   
  4045a5:	aam    0xdd
  4045a7:	pop    ebp
  4045a8:	and    DWORD PTR [ecx-0x47],ebp
  4045ab:	cmc    
  4045ac:	nop
  4045ad:	cmovge ecx,DWORD PTR [ecx-0x56]
  4045b1:	cli    
  4045b2:	dec    esi
  4045b3:	mov    edx,0x7de39878
  4045b8:	rcl    al,cl
  4045ba:	jae    0x40455f
  4045bc:	inc    ecx
  4045bd:	imul   BYTE PTR [eax+0x5b1c2370]
  4045c3:	dec    ebp
  4045c4:	mov    ds,WORD PTR [edx]
  4045c6:	sbb    bh,BYTE PTR [edx+0x6f3ed0b2]
  4045cc:	sub    esi,DWORD PTR [ebx]
  4045ce:	mov    ah,0xcc
  4045d0:	out    0xee,al
  4045d2:	outs   dx,DWORD PTR ds:[esi]
  4045d3:	xor    eax,0x4ebd996f
  4045d8:	jo     0x4045c6
  4045da:	fidiv  WORD PTR [edx+eax*1-0x26]
  4045de:	sbb    bx,WORD PTR ds:0xb8bcf474
  4045e5:	jb     0x40461a
  4045e7:	jg     0x404667
  4045e9:	clc    
  4045ea:	pushf  
  4045eb:	(bad)  
  4045ec:	idiv   ebx
  4045ee:	fild   WORD PTR [ebx+0x503ca02d]
  4045f4:	jbe    0x404641
  4045f6:	pop    edi
  4045f7:	pop    ebp
  4045f8:	jb     0x40461f
  4045fa:	xor    esi,DWORD PTR [ecx-0x58147381]
  404600:	pop    ss
  404601:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404602:	sar    DWORD PTR ds:0x17bfaef0,1
  404608:	pop    es
  404609:	push   edi
  40460a:	lahf   
  40460b:	push   edi
  40460c:	jb     0x4045f9
  40460e:	aam    0x58
  404610:	dec    esi
  404611:	jg     0x404641
  404613:	stos   BYTE PTR es:[edi],al
  404614:	(bad)  
  404615:	test   al,0x15
  404617:	or     esi,esi
  404619:	and    al,BYTE PTR [ebp-0x70]
  40461c:	pop    esi
  40461d:	scas   eax,DWORD PTR es:[edi]
  40461e:	add    BYTE PTR [eax],0x1b
  404621:	loop   0x40467d
  404623:	and    BYTE PTR [ecx+edx*8+0x71],cl
  404627:	or     eax,0xddab21f2
  40462c:	lods   al,BYTE PTR ds:[esi]
  40462d:	and    DWORD PTR [ecx],ebp
  40462f:	cwde   
  404630:	mov    dh,0xcf
  404632:	fcmovnu st,st(2)
  404634:	mov    eax,0xdd655ee0
  404639:	fistp  QWORD PTR [ebp+eax*8-0x14bee514]
  404640:	shl    BYTE PTR [esi-0x6631970],0xc8
  404647:	fisubr WORD PTR [edi-0x31]
  40464a:	shl    DWORD PTR [esi+ecx*4-0x4e9c1d57],cl
  404651:	mov    eax,ds:0x56e6e9b
  404656:	or     ebp,edx
  404658:	pop    es
  404659:	lea    ebp,[ebx+0x5adeaa53]
  40465f:	fst    QWORD PTR [esi]
  404661:	dec    ebx
  404662:	jge    0x404652
  404664:	mov    dl,0x56
  404666:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404667:	add    dh,al
  404669:	pop    esi
  40466a:	cmp    ebp,DWORD PTR [ebx-0x2b]
  40466d:	mov    ds:0xb7370629,eax
  404672:	xchg   ebx,eax
  404673:	sbb    ah,BYTE PTR [eax]
  404675:	push   ebp
  404676:	out    0x8,al
  404678:	call   0x328bb153
  40467d:	add    esi,0x46
  404680:	sub    BYTE PTR [ebx+0x7d],ah
  404683:	hlt    
  404684:	pusha  
  404685:	ss jecxz 0x4046e5
  404688:	pop    ebx
  404689:	push   edi
  40468a:	dec    edx
  40468b:	loop   0x404655
  40468d:	xchg   esi,eax
  40468e:	adc    esp,ebp
  404690:	shr    DWORD PTR [ebx+0x17],0xbf
  404694:	lahf   
  404695:	(bad)  
  404696:	jmp    0x4046e8
  404698:	xchg   sp,ax
  40469a:	push   ds
  40469b:	out    dx,eax
  40469c:	jmp    0x62a8:0xe3f34185
  4046a3:	inc    esp
  4046a4:	cli    
  4046a5:	push   ds
  4046a6:	pop    esi
  4046a7:	mov    bh,0xd0
  4046a9:	lods   eax,DWORD PTR ds:[esi]
  4046aa:	inc    ebx
  4046ab:	(bad)  
  4046ac:	mov    esp,0x7ee54f56
  4046b1:	xchg   DWORD PTR [eax+0x7a8fcf81],ebp
  4046b7:	pop    esi
  4046b8:	cli    
  4046b9:	shr    BYTE PTR [ecx],1
  4046bb:	loopne 0x4046a2
  4046bd:	fadd   DWORD PTR [eax]
  4046bf:	xlat   BYTE PTR ds:[ebx]
  4046c0:	not    DWORD PTR [ebx+0x3cc598f]
  4046c6:	fnstcw WORD PTR [ebp+ebx*8-0x32]
  4046ca:	adc    cl,BYTE PTR [edi-0x41]
  4046cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046ce:	add    DWORD PTR [edx+edi*8-0x1e],esp
  4046d2:	popf   
  4046d3:	dec    eax
  4046d4:	sbb    al,0x53
  4046d6:	(bad)
  4046d9:	xchg   edx,eax
  4046da:	xchg   esp,eax
  4046db:	xor    ch,BYTE PTR [edi+0x77]
  4046de:	(bad)  
  4046df:	mov    al,ds:0x72a00da0
  4046e4:	pop    edi
  4046e5:	in     al,0x4
  4046e7:	mov    dl,0x4d
  4046e9:	cmp    DWORD PTR [eax],ebx
  4046eb:	repnz inc ebx
  4046ed:	mov    ebp,0x9668b106
  4046f2:	pop    ebp
  4046f3:	pop    eax
  4046f4:	jbe    0x404702
  4046f6:	addr16 call 0x52a03205
  4046fc:	mov    dh,BYTE PTR [ecx-0x69cf9e30]
  404702:	adc    BYTE PTR [edx+0x575a3109],dl
  404708:	xchg   ebp,eax
  404709:	mov    ds:0x92f815af,al
  40470e:	pop    eax
  40470f:	stos   DWORD PTR es:[edi],eax
  404710:	sbb    eax,0x2c4cf86e
  404715:	cmp    esp,DWORD PTR [eax+eiz*8]
  404718:	cmc    
  404719:	(bad)
  40471c:	jnp    0x4046df
  40471e:	adc    bl,BYTE PTR [bp+0x5e]
  404722:	cli    
  404723:	in     al,dx
  404724:	fdiv   st(0),st
  404726:	sub    DWORD PTR [ebx],esp
  404728:	and    BYTE PTR [ecx],0x31
  40472b:	hlt    
  40472c:	(bad)  
  40472d:	sub    ebp,DWORD PTR [edi-0x78888cba]
  404733:	push   cs
  404734:	lahf   
  404735:	outs   dx,DWORD PTR ds:[esi]
  404736:	outs   dx,DWORD PTR ds:[esi]
  404737:	shl    edi,1
  404739:	das    
  40473a:	dec    esi
  40473b:	or     DWORD PTR [eax],ebp
  40473d:	enter  0xccf9,0xa8
  404741:	gs sbb ecx,ebx
  404744:	sbb    eax,0xde0cf43c
  404749:	mov    dh,0x19
  40474b:	pusha  
  40474c:	divss  xmm4,DWORD PTR [ebx+0x12412d7d]
  404754:	adc    BYTE PTR [ecx],cl
  404756:	(bad)  
  404757:	lods   eax,DWORD PTR ds:[esi]
  404758:	imul   ebp,DWORD PTR [edx],0xbf94730c
  40475e:	int    0x14
  404760:	inc    edx
  404761:	mov    WORD PTR [ecx-0x3d],gs
  404764:	cmp    edx,eax
  404766:	push   0xc6a68f9a
  40476b:	add    DWORD PTR [ebp+0x1543430c],esi
  404771:	sahf   
  404772:	outs   dx,BYTE PTR ds:[esi]
  404773:	fdiv   st(5),st
  404775:	adc    esp,DWORD PTR [ecx+0x12f8873f]
  40477b:	es fs nop
  40477e:	xchg   edx,eax
  40477f:	pop    ss
  404780:	xor    cl,0xed
  404783:	xchg   edx,eax
  404784:	enter  0xd1f6,0x26
  404788:	add    eax,0x8fdd2ac8
  40478d:	add    al,0x65
  40478f:	loop   0x4047bb
  404791:	lea    ecx,[esi]
  404793:	mov    DWORD PTR [edi+0x5d0bc0da],esi
  404799:	cdq    
  40479a:	repz (bad) 
  40479c:	xlat   BYTE PTR ds:[ebx]
  40479d:	xchg   edi,eax
  40479e:	push   ds
  40479f:	bound  edi,QWORD PTR [ebx+eiz*4-0x6b2fd5c2]
  4047a6:	sbb    eax,0xc5112d07
  4047ab:	xor    DWORD PTR [ebp-0x66],esp
  4047ae:	jne    0x404803
  4047b0:	mov    ebp,0x7bdea4b4
  4047b5:	mov    esp,0x1e8cb3cb
  4047ba:	inc    esp
  4047bb:	inc    esp
  4047bc:	or     BYTE PTR [esi],dh
  4047be:	in     al,dx
  4047bf:	retf   
  4047c0:	stc    
  4047c1:	cmp    ebp,DWORD PTR ds:0x2f501660
  4047c7:	xor    eax,DWORD PTR [ebp-0x75bc3808]
  4047cd:	push   ss
  4047ce:	cmp    eax,0x944de64e
  4047d3:	nop
  4047d4:	pop    esp
  4047d5:	jge    0x4047cb
  4047d7:	lea    edi,[esi]
  4047d9:	inc    ebp
  4047da:	cwde   
  4047db:	mov    edi,0x2f81c5f4
  4047e0:	and    edi,DWORD PTR [esi]
  4047e2:	pop    es
  4047e3:	lea    edx,[ebx-0x5fd3780c]
  4047e9:	imul   esp,DWORD PTR [ebx-0x55edb1c],0x2d1eaaff
  4047f3:	dec    ecx
  4047f4:	call   0x58854d5c
  4047f9:	and    DWORD PTR [ecx],ebx
  4047fb:	jae    0x404787
  4047fd:	std    
  4047fe:	mov    bl,0xd7
  404800:	jmp    0x404805
  404802:	dec    edi
  404803:	push   eax
  404804:	(bad)  [esi+0x4e]
  404807:	pop    es
  404808:	lahf   
  404809:	daa    
  40480a:	mov    bh,0xeb
  40480c:	xor    eax,0x307cfc78
  404811:	ret    0x9833
  404814:	repnz std 
  404816:	mov    BYTE PTR ds:0x8e9a8456,bh
  40481c:	pushf  
  40481d:	(bad)  
  40481e:	in     al,0x52
  404820:	cmp    eax,0x2b7837a0
  404825:	mov    cl,0x8c
  404827:	arpl   cx,bx
  404829:	aad    0x22
  40482b:	rcl    BYTE PTR [ecx],cl
  40482d:	xor    bl,BYTE PTR [eax+0x34]
  404830:	cwde   
  404831:	aas    
  404832:	das    
  404833:	frstor [eax-0x68d6b2be]
  404839:	dec    esp
  40483a:	jp     0x404814
  40483c:	mov    bl,BYTE PTR [eax]
  40483e:	mov    bh,0x28
  404840:	(bad)  
  404841:	fst    QWORD PTR [edx-0x32]
  404844:	mov    edx,0x61904dd7
  404849:	sub    edx,eax
  40484b:	jle    0x404899
  40484d:	push   es
  40484e:	sbb    al,0xe0
  404850:	add    DWORD PTR [ecx+0x1e],0xfb2bf03
  404857:	jge    0x4048be
  404859:	pop    ds
  40485a:	fidiv  DWORD PTR ds:0x51324338
  404860:	inc    ecx
  404861:	fld    DWORD PTR [eax-0x7d]
  404864:	mov    cl,BYTE PTR ds:0xadcfe4f9
  40486a:	xchg   ebx,eax
  40486b:	sti    
  40486c:	jle    0x40483a
  40486e:	pop    ecx
  40486f:	ret    0xe5a9
  404872:	mov    esi,edx
  404874:	in     al,0x49
  404876:	adc    ah,ah
  404878:	call   0x45f7cb23
  40487d:	call   0xa0ba3d1c
  404882:	sbb    DWORD PTR [edi-0x4720157a],edx
  404888:	sbb    al,0xe1
  40488a:	dec    ebx
  40488b:	scas   eax,DWORD PTR es:[edi]
  40488c:	in     al,0x9d
  40488e:	in     al,0xa8
  404890:	rcl    DWORD PTR [ecx-0x6a],0xb4
  404894:	std    
  404895:	adc    al,0x60
  404897:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  404899:	test   al,0x38
  40489b:	mov    esp,0x55e981d9
  4048a0:	sub    ch,BYTE PTR [edi-0x12]
  4048a3:	xchg   DWORD PTR [edi+0x79],eax
  4048a6:	sbb    al,0x40
  4048a8:	dec    edi
  4048a9:	xchg   edx,eax
  4048aa:	xchg   ecx,eax
  4048ab:	sahf   
  4048ac:	push   0x3c
  4048ae:	cld    
  4048af:	out    0x3a,eax
  4048b1:	xor    ah,BYTE PTR [eax]
  4048b3:	jns    0x404872
  4048b5:	push   edx
  4048b6:	adc    BYTE PTR [esi+0x120510ee],bl
  4048bc:	in     eax,dx
  4048bd:	push   ecx
  4048be:	mov    al,0x3c
  4048c0:	and    BYTE PTR [esi],0xc9
  4048c3:	repz push ss
  4048c5:	xor    DWORD PTR ds:0xf3626123,eax
  4048cb:	mov    dh,0xc9
  4048cd:	pusha  
  4048ce:	cmp    eax,0xcd187af6
  4048d3:	inc    esi
  4048d4:	push   cs
  4048d5:	dec    edx
  4048d6:	sbb    bl,BYTE PTR ds:0xe759f8df
  4048dc:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4048de:	call   0x86d55d
  4048e3:	lahf   
  4048e4:	stos   DWORD PTR es:[edi],eax
  4048e5:	push   eax
  4048e6:	xor    dh,dl
  4048e8:	int    0x28
  4048ea:	cmp    DWORD PTR ds:0xee618998,eax
  4048f0:	jbe    0x4048a7
  4048f2:	and    bl,ah
  4048f4:	scas   eax,DWORD PTR es:[edi]
  4048f5:	mov    gs,ebx
  4048f7:	daa    
  4048f8:	inc    ecx
  4048f9:	jmp    0xf452:0x96d35412
  404900:	jl     0x4048fa
  404902:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404903:	jl     0x4048ac
  404905:	test   eax,0x383a0c2e
  40490a:	ja     0x40496c
  40490c:	cmp    eax,0x895b72ff
  404911:	loopne 0x4048f4
  404913:	mov    ds:0x376bab24,eax
  404918:	mov    bl,0xeb
  40491a:	popf   
  40491b:	mov    edi,0xd205b821
  404920:	add    DWORD PTR ds:[edx],ecx
  404923:	jne    0x4048a8
  404925:	jo     0x4048a7
  404927:	fidivr WORD PTR [ecx+0x6c1ab6a0]
  40492d:	arpl   WORD PTR [edi-0x7e],bp
  404930:	aam    0x91
  404932:	sbb    ebx,DWORD PTR [edx]
  404934:	cmp    cl,BYTE PTR [eax-0x1e9404e2]
  40493a:	dec    eax
  40493b:	pop    edx
  40493c:	sti    
  40493d:	fs push ss
  40493f:	enter  0x5436,0x12
  404943:	out    dx,al
  404944:	dec    esp
  404945:	scas   eax,DWORD PTR es:[edi]
  404946:	popa   
  404947:	cs xchg ebx,eax
  404949:	pushf  
  40494a:	repz iret 
  40494c:	leave  
  40494d:	out    dx,al
  40494e:	adc    esi,DWORD PTR ds:0x4c83afad
  404954:	jmp    0xec6d:0x333c8a7d
  40495b:	fdiv   st,st(2)
  40495d:	in     eax,dx
  40495e:	sbb    ch,dl
  404960:	jne    0x4049c4
  404962:	cmp    dh,BYTE PTR [ebx+0x3c]
  404965:	pop    ebx
  404966:	hlt    
  404967:	call   0x3d6a:0xd8b4b95f
  40496e:	inc    edi
  40496f:	leave  
  404970:	push   edx
  404971:	data16 sbb bh,al
  404974:	rcl    edi,1
  404976:	fisubr DWORD PTR [ecx-0x4de968f8]
  40497c:	push   cs
  40497d:	jge    0x4049ac
  40497f:	cld    
  404980:	stos   DWORD PTR es:[edi],eax
  404981:	or     eax,0xacf49ab1
  404986:	imul   DWORD PTR gs:[ebx]
  404989:	push   ds
  40498a:	push   eax
  40498b:	repnz in al,dx
  40498d:	mov    ah,0xb5
  40498f:	add    al,0x7a
  404991:	cmp    al,0x39
  404993:	lods   eax,DWORD PTR ds:[esi]
  404994:	aaa    
  404995:	adc    eax,0x970e5b13
  40499a:	shl    bl,1
  40499c:	mov    ebx,0x76bf7aa1
  4049a1:	sbb    DWORD PTR [esi],edi
  4049a3:	js     0x4049b6
  4049a5:	lds    edi,FWORD PTR [ecx+0x4c7b60d2]
  4049ab:	ror    BYTE PTR [esi+0x7e],cl
  4049ae:	pop    edi
  4049af:	cmp    bl,BYTE PTR [ebx-0x4cd1f623]
  4049b5:	inc    esp
  4049b6:	fstp   TBYTE PTR ds:0xffb9f413
  4049bc:	mov    ecx,0x44bf5562
  4049c1:	imul   ebx,DWORD PTR [esi+0x4cdff43f],0xffffffbd
  4049c8:	sub    al,0x88
  4049ca:	mov    ds:0x5fad20c1,eax
  4049cf:	and    esi,DWORD PTR [esp+ebx*2-0x5fafc0ff]
  4049d6:	fisub  DWORD PTR [ecx-0x1b51fc4d]
  4049dc:	dec    esi
  4049dd:	pop    ecx
  4049de:	ja     0x4049b8
  4049e0:	daa    
  4049e1:	dec    ebx
  4049e2:	mov    ch,0xe4
  4049e4:	test   DWORD PTR [edx],ecx
  4049e6:	bound  edx,QWORD PTR [ebx]
  4049e8:	jge    0x4049b2
  4049ea:	fnstcw WORD PTR [ebx+0x61]
  4049ed:	dec    eax
  4049ee:	sbb    eax,0x4ef4c5e5
  4049f3:	jl     0x404985
  4049f5:	add    eax,0x2b7a3684
  4049fa:	sub    ah,BYTE PTR ds:0xe3999952
  404a00:	jg     0x4049ce
  404a02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a03:	je     0x4049a4
  404a05:	ret    0x1c74
  404a08:	pop    edx
  404a09:	add    dl,BYTE PTR [ebp+edx*8-0x244d0501]
  404a10:	jae    0x404a14
  404a12:	mov    edx,0x3adaf94d
  404a17:	mov    esi,0x9ca154db
  404a1c:	outs   dx,BYTE PTR ds:[esi]
  404a1d:	mov    ebx,0x22bb1bc5
  404a22:	shl    cl,0x95
  404a25:	stos   BYTE PTR es:[edi],al
  404a26:	or     BYTE PTR [ecx+0x7d],0x43
  404a2a:	or     esi,DWORD PTR [ebp+0x18d73376]
  404a30:	sar    ch,0x19
  404a33:	pop    eax
  404a34:	sub    bh,BYTE PTR [edi]
  404a36:	stos   BYTE PTR es:[edi],al
  404a37:	xchg   esp,eax
  404a38:	jle    0x404a60
  404a3a:	or     al,0xa8
  404a3c:	dec    edi
  404a3d:	mov    al,ds:0xbd8ad284
  404a42:	push   es
  404a43:	ins    DWORD PTR es:[edi],dx
  404a44:	out    0xf4,al
  404a46:	inc    ebp
  404a47:	inc    ebp
  404a48:	gs jo  0x404a59
  404a4b:	repz mov esp,0xc957b3ec
  404a51:	mov    ds:0x55780e6f,al
  404a56:	adc    BYTE PTR [edx-0x68],ah
  404a59:	sbb    eax,DWORD PTR [esi-0x1b1880c8]
  404a5f:	cmp    DWORD PTR [esi+ebp*2],edi
  404a62:	stos   BYTE PTR es:[edi],al
  404a63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a64:	mov    bl,0xf4
  404a66:	mov    esp,0xd605411
  404a6b:	punpcklbw mm3,DWORD PTR [ebx+0x5d]
  404a6f:	add    dl,BYTE PTR [ecx+0x6f545225]
  404a75:	sub    ebx,DWORD PTR [eax+0x42]
  404a78:	das    
  404a79:	pop    ecx
  404a7a:	inc    edx
  404a7b:	fstp   DWORD PTR [ebx+0x65]
  404a7e:	in     al,0xbe
  404a80:	mov    ecx,0xdcfe256a
  404a85:	jae    0x404a84
  404a87:	xor    eax,0xc574adde
  404a8c:	cmp    eax,0x8b1820fb
  404a91:	mov    ebx,0x274f516
  404a96:	std    
  404a97:	mov    eax,0xb5386b8f
  404a9c:	mov    al,ds:0x395db2c
  404aa1:	lahf   
  404aa2:	retf   0x777a
  404aa5:	jge    0x404a75
  404aa7:	test   ch,ah
  404aa9:	lods   al,BYTE PTR ds:[esi]
  404aaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404aab:	pop    eax
  404aac:	sbb    eax,0xf3817318
  404ab1:	repnz push 0xfffffffe
  404ab4:	inc    edx
  404ab5:	outs   dx,DWORD PTR ds:[esi]
  404ab6:	dec    ebp
  404ab7:	(bad)  
  404ab8:	(bad)  
  404aba:	(bad)  
  404abb:	pop    ds
  404abc:	call   0x4c5c9104
  404ac1:	js     0x404a86
  404ac3:	(bad)
  404ac6:	push   eax
  404ac7:	xor    BYTE PTR [ecx],0xb8
  404aca:	pop    es
  404acb:	test   BYTE PTR [ecx+0xbd9dfe9],cl
  404ad1:	je     0x404b10
  404ad3:	in     eax,dx
  404ad4:	mov    bh,BYTE PTR [edi+ebx*4+0x30fa12b3]
  404adb:	jmp    0x404b55
  404add:	pop    esp
  404ade:	adc    BYTE PTR [edi-0x78],0x1e
  404ae2:	out    dx,eax
  404ae3:	cwde   
  404ae4:	shl    DWORD PTR ss:[edi+edx*8+0x671ba3a6],0x42
  404aed:	int    0xdf
  404aef:	jae    0x404ad8
  404af1:	jns    0x404b37
  404af3:	mov    ch,0x7
  404af5:	sti    
  404af6:	jno    0x404a90
  404af8:	(bad)  
  404af9:	pmaxsw mm0,mm1
  404afc:	imul   edx,ebp,0x4b
  404aff:	fsub   QWORD PTR [ebx]
  404b01:	cwde   
  404b02:	jg     0x404b56
  404b04:	inc    ebp
  404b05:	fisttp DWORD PTR ds:0xb4f8ed70
  404b0b:	in     al,0xa3
  404b0d:	xchg   ecx,eax
  404b0e:	icebp  
  404b0f:	mov    al,0x7b
  404b11:	add    ch,bl
  404b13:	lgdtd  [edx]
  404b16:	pop    es
  404b17:	inc    BYTE PTR [edi+0x14]
  404b1a:	dec    esi
  404b1b:	pop    eax
  404b1c:	shl    BYTE PTR [edi+0x3b],1
  404b1f:	sbb    eax,0x95db2d4c
  404b24:	push   edx
  404b25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b26:	fdiv   QWORD PTR ds:0x714b67c0
  404b2c:	adc    BYTE PTR [edx],ch
  404b2e:	add    al,0xc2
  404b30:	inc    ebp
  404b31:	xor    BYTE PTR [esi+0xd8229bd],bh
  404b37:	jns    0x404b94
  404b39:	jnp    0x404bb3
  404b3b:	shr    DWORD PTR [esi+edi*8+0xa],cl
  404b3f:	mov    dl,0xd
  404b41:	jle    0x404baa
  404b43:	addr16 js 0x404b9e
  404b46:	std    
  404b47:	btc    DWORD PTR [esp+ebp*2],edx
  404b4b:	jmp    0x404b48
  404b4d:	ds jg  0x404ba6
  404b50:	out    dx,eax
  404b51:	push   0x4922b7fe
  404b56:	fsubr  DWORD PTR [edx]
  404b58:	add    dh,BYTE PTR [esi+0x38]
  404b5b:	stos   DWORD PTR es:[edi],eax
  404b5c:	xor    DWORD PTR ds:0x196d0f8d,0x921e5a74
  404b66:	ss (bad) 
  404b68:	stos   DWORD PTR es:[edi],eax
  404b69:	scas   al,BYTE PTR es:[edi]
  404b6a:	mov    esi,0x9cd8ed72
  404b6f:	sbb    edx,DWORD PTR [ecx]
  404b71:	mov    ds:0xbdbf7869,eax
  404b76:	inc    edx
  404b77:	pop    edi
  404b78:	pop    edi
  404b79:	aaa    
  404b7a:	sub    eax,0xf600a700
  404b7f:	inc    esi
  404b80:	jns    0x404b74
  404b82:	fcom   QWORD PTR [eax-0x6ab94948]
  404b88:	jns    0x404b70
  404b8a:	jne    0x404b75
  404b8c:	cmp    esp,ebp
  404b8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b8f:	fmul   QWORD PTR [ecx+0x47]
  404b92:	dec    edi
  404b93:	(bad)  
  404b94:	in     al,dx
  404b95:	iret   
  404b96:	mov    ah,0x2f
  404b98:	retf   
  404b99:	cmp    DWORD PTR [ebp+eax*2-0x41281350],esp
  404ba0:	xor    BYTE PTR [esi-0x34],bl
  404ba3:	nop
  404ba4:	pop    ebx
  404ba5:	inc    dh
  404ba7:	out    dx,al
  404ba8:	inc    eax
  404ba9:	sub    BYTE PTR [ebx+0x78964945],ch
  404baf:	cmc    
  404bb0:	enter  0xa663,0x1c
  404bb4:	add    BYTE PTR [edx-0x7e],0x68
  404bb8:	dec    ebx
  404bb9:	push   cs
  404bba:	repnz and al,0x6c
  404bbd:	aad    0xe8
  404bbf:	bound  esp,QWORD PTR [ecx+0x52559dbd]
  404bc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bc6:	stos   DWORD PTR es:[edi],eax
  404bc7:	leave  
  404bc8:	cmp    eax,0x34e34ee2
  404bcd:	mov    esi,0x38e8b6fb
  404bd2:	(bad)  
  404bd3:	sti    
  404bd4:	sub    al,BYTE PTR [edi-0x72425ddb]
  404bda:	arpl   WORD PTR [ebp+0x38d0b755],bp
  404be0:	adc    al,0xec
  404be2:	inc    esi
  404be3:	jmp    0x404bc2
  404be5:	aaa    
  404be6:	lea    eax,[esi]
  404be8:	and    DWORD PTR [esi],edi
  404bea:	or     ah,al
  404bec:	or     al,0x50
  404bee:	fistp  DWORD PTR [eax]
  404bf0:	push   ss
  404bf1:	ins    DWORD PTR es:[edi],dx
  404bf2:	mov    esi,0xf99fedd8
  404bf7:	test   al,0x35
  404bf9:	mov    ch,BYTE PTR [eax+0x72]
  404bfc:	jmp    0x1a166317
  404c01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c02:	call   0x5baa:0x8afc16df
  404c09:	sbb    eax,0x62967391
  404c0e:	call   0x9855bc5d
  404c13:	das    
  404c14:	in     eax,dx
  404c15:	xor    DWORD PTR [edx+0x4ec12da0],esi
  404c1b:	lock or BYTE PTR [ebx+0x69],dh
  404c1f:	test   BYTE PTR [esi+0x3014d9c7],cl
  404c25:	in     eax,0x9
  404c27:	cld    
  404c28:	js     0x404c14
  404c2a:	jo     0x404c0f
  404c2c:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  404c2e:	jg     0x404c3c
  404c30:	cmp    eax,0xf6c786d8
  404c35:	sbb    dh,BYTE PTR ds:0xe41c84b2
  404c3b:	sahf   
  404c3c:	stos   DWORD PTR es:[edi],eax
  404c3d:	jge    0x404be0
  404c3f:	test   bh,dl
  404c41:	push   0xe9d0ad1f
  404c46:	dec    ebp
  404c47:	sar    BYTE PTR [esi],cl
  404c49:	or     eax,0x4ea15640
  404c4e:	mov    ebp,0xe4e964d7
  404c53:	add    ebx,DWORD PTR ds:0x55624ed6
  404c59:	jp     0x404c70
  404c5b:	call   0x3dda3070
  404c60:	out    dx,eax
  404c61:	lods   al,BYTE PTR ds:[esi]
  404c62:	inc    ebp
  404c63:	leave  
  404c64:	xchg   edi,eax
  404c65:	shl    BYTE PTR [ecx-0x17],cl
  404c68:	loop   0x404c34
  404c6a:	in     eax,0x7a
  404c6c:	inc    ebp
  404c6d:	aad    0x28
  404c6f:	cld    
  404c70:	adc    BYTE PTR [esi+0x1a396185],dh
  404c76:	and    al,0x98
  404c78:	xor    bl,BYTE PTR [ecx]
  404c7a:	retf   0xf16c
  404c7d:	mov    edi,fs
  404c7f:	push   cs
  404c80:	(bad)  
  404c81:	fiadd  WORD PTR [esi+eax*4+0xf]
  404c85:	bound  edx,QWORD PTR [ebx-0x7f72300f]
  404c8b:	mov    ecx,0xc1358dd5
  404c90:	adc    BYTE PTR [esi-0x28],ch
  404c93:	pop    ds
  404c94:	popf   
  404c95:	cwde   
  404c96:	sti    
  404c97:	pusha  
  404c98:	(bad)  
  404c99:	mov    edx,0x9244b206
  404c9e:	push   ss
  404c9f:	aam    0xa0
  404ca1:	cmp    esi,edx
  404ca3:	addr16 jo 0x404c9c
  404ca6:	jb     0x404c73
  404ca8:	or     BYTE PTR [ebp-0x7f],bl
  404cab:	cwde   
  404cac:	mov    esi,0x4c9da0bc
  404cb1:	shr    DWORD PTR [ecx-0x45],0x1
  404cb5:	sbb    eax,0x342293fe
  404cba:	dec    edx
  404cbb:	popf   
  404cbc:	addr16 es repnz pop ds
  404cc0:	sahf   
  404cc1:	es adc eax,0x1bc3dd2a
  404cc7:	ret    
  404cc8:	push   ss
  404cc9:	sub    ebp,DWORD PTR [edx-0x23e123f]
  404ccf:	push   es
  404cd0:	stos   BYTE PTR es:[edi],al
  404cd1:	imul   eax,DWORD PTR [ebp+0x1a],0x1b
  404cd5:	xor    al,0xe6
  404cd7:	rcl    DWORD PTR [eax+0x59],cl
  404cda:	in     eax,0xd4
  404cdc:	shr    ecx,1
  404cde:	aas    
  404cdf:	mov    ds:0xb71642ec,al
  404ce4:	loopne 0x404d25
  404ce6:	lods   eax,DWORD PTR ds:[esi]
  404ce7:	icebp  
  404ce8:	arpl   WORD PTR [ecx-0x13],cx
  404ceb:	lahf   
  404cec:	xchg   edx,eax
  404ced:	mov    bh,0x32
  404cef:	out    dx,al
  404cf0:	loopne 0x404d2b
  404cf2:	xchg   ebx,eax
  404cf3:	adc    DWORD PTR [eax+ebp*8+0x53],ebx
  404cf7:	xor    al,0x1c
  404cf9:	xor    al,BYTE PTR [ebp+0x7594c3f1]
  404cff:	jl     0x404d4f
  404d01:	mov    edx,ebp
  404d03:	hlt    
  404d04:	call   0x6ba6:0x659ad9c6
  404d0b:	mov    BYTE PTR [eax-0x71d25093],ah
  404d11:	arpl   di,cx
  404d13:	add    bl,cl
  404d15:	adc    DWORD PTR [ebx-0x41ab91d4],0xe46b4f78
  404d1f:	jmp    0x404d14
  404d21:	jae    0x404d01
  404d23:	cwde   
  404d24:	mov    gs,WORD PTR [ecx]
  404d26:	and    eax,0xdf243d25
  404d2b:	cmc    
  404d2c:	sub    eax,0xf80d0b15
  404d31:	ret    
  404d32:	mov    ecx,0x3c4e769a
  404d37:	or     DWORD PTR [ecx+0x73],eax
  404d3a:	sub    al,0x4a
  404d3c:	sbb    eax,0x7c1e69f3
  404d41:	shr    DWORD PTR [ebx],0x88
  404d44:	les    edx,FWORD PTR [ebp-0x49]
  404d47:	fstp   QWORD PTR [ecx+eax*4-0x4d404a25]
  404d4e:	jne    0x404cf6
  404d50:	icebp  
  404d51:	mov    edi,0x1147158
  404d56:	mov    DWORD PTR [eax+0x1f7e7730],ebp
  404d5c:	mov    esi,0xac3df02a
  404d61:	int    0xd5
  404d63:	ror    al,1
  404d65:	or     DWORD PTR [edi],esi
  404d67:	clc    
  404d68:	loopne 0x404d84
  404d6a:	push   edi
  404d6b:	jle    0x404cf6
  404d6d:	in     eax,0x24
  404d6f:	out    dx,al
  404d70:	fild   WORD PTR [edi-0x408e8034]
  404d76:	loopne 0x404d49
  404d78:	sar    bh,1
  404d7a:	icebp  
  404d7b:	icebp  
  404d7c:	int3   
  404d7d:	arpl   WORD PTR [edx],si
  404d7f:	scas   eax,DWORD PTR es:[edi]
  404d80:	stc    
  404d81:	(bad)  
  404d82:	fdiv   st,st(2)
  404d84:	out    0x3,al
  404d86:	test   BYTE PTR ds:[esi-0x382d6a23],ch
  404d8d:	ins    BYTE PTR es:[edi],dx
  404d8e:	out    0xfb,eax
  404d90:	addr16 in eax,dx
  404d92:	or     DWORD PTR [edi+0x28a98719],esp
  404d98:	push   ebx
  404d99:	hlt    
  404d9a:	ret    
  404d9b:	sahf   
  404d9c:	and    al,BYTE PTR [esp+eax*1+0xa0ba018]
  404da3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404da4:	pop    esp
  404da5:	bound  edi,QWORD PTR [ebp-0x18a5f3d4]
  404dab:	push   ecx
  404dac:	jbe    0x404d85
  404dae:	data16 not BYTE PTR [edx-0x70ffe776]
  404db5:	dec    edx
  404db6:	adc    DWORD PTR [edi+edx*1+0x44],esi
  404dba:	lahf   
  404dbb:	jle    0x404d8c
  404dbd:	retf   0x6555
  404dc0:	out    dx,eax
  404dc1:	sub    bl,bl
  404dc3:	jbe    0x404db3
  404dc5:	sub    BYTE PTR [ecx-0x766158c3],dh
  404dcb:	sub    bl,ah
  404dcd:	sub    ch,BYTE PTR [edx-0xa]
  404dd0:	mov    al,0xb1
  404dd2:	add    DWORD PTR [ebx+0x31],0x71
  404dd6:	mov    WORD PTR [edx+ebp*1-0x730f956d],cs
  404ddd:	mov    eax,ds:0x248f2d41
  404de2:	cmp    al,0xbd
  404de4:	push   esi
  404de5:	xor    ah,BYTE PTR [eax-0x5eb60af3]
  404deb:	pop    esp
  404dec:	es aaa 
  404dee:	loope  0x404db6
  404df0:	or     al,0xaa
  404df2:	dec    esp
  404df3:	jnp    0x404de1
  404df5:	ret    
  404df6:	inc    ebx
  404df7:	in     eax,dx
  404df8:	movnti DWORD PTR [ecx-0x102baae2],esi
  404dff:	mov    ecx,0x1b4399d5
  404e04:	ret    0xcd77
  404e07:	dec    ecx
  404e08:	ror    DWORD PTR [edi-0x6ba4a44a],cl
  404e0e:	xchg   edx,eax
  404e0f:	cmp    eax,0x62ce9cf7
  404e14:	mov    ds:0x5fa7c9ac,al
  404e19:	inc    edi
  404e1a:	rcr    cl,0x27
  404e1d:	jne    0x404e47
  404e1f:	adc    al,0xfe
  404e21:	and    al,0xd4
  404e23:	cvttps2pi mm3,QWORD PTR [eax]
  404e26:	fwait
  404e27:	stos   BYTE PTR es:[edi],al
  404e28:	icebp  
  404e29:	in     al,dx
  404e2a:	ins    DWORD PTR es:[edi],dx
  404e2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e2c:	sub    DWORD PTR [edx],esp
  404e2e:	fisttp WORD PTR [ebx]
  404e30:	jo     0x404e26
  404e32:	(bad)  
  404e33:	and    DWORD PTR [ebx-0x46b4527f],edx
  404e39:	call   0x450:0xaab1e25b
  404e40:	int3   
  404e41:	gs push ebx
  404e43:	ret    0xd1cb
  404e46:	fdiv   QWORD PTR [edi+0x39d69566]
  404e4c:	xchg   ebp,eax
  404e4d:	aaa    
  404e4e:	pop    es
  404e4f:	push   ebp
  404e50:	mov    dh,0x63
  404e52:	fstp   QWORD PTR [esi]
  404e54:	mov    ecx,0xcba882da
  404e59:	inc    ecx
  404e5a:	retf   
  404e5b:	ds xchg esi,eax
  404e5d:	cmp    edi,esi
  404e5f:	jle    0x404e39
  404e61:	popa   
  404e62:	out    0x35,eax
  404e64:	rol    BYTE PTR [ecx-0x62cdbc1f],0x87
  404e6b:	stc    
  404e6c:	rcl    BYTE PTR [ecx+0x723e0ab2],cl
  404e72:	pop    esp
  404e73:	pop    edi
  404e74:	aas    
  404e75:	ret    0x9e1b
  404e78:	lds    edx,FWORD PTR [ecx-0x444e57d4]
  404e7e:	adc    DWORD PTR [ebx+0x32f378a7],eax
  404e84:	adc    eax,DWORD PTR [eax+ebp*2-0x74]
  404e88:	cmc    
  404e89:	xchg   ecx,eax
  404e8a:	push   esp
  404e8b:	xor    esp,esp
  404e8d:	out    0xc6,eax
  404e8f:	iret   
  404e90:	mov    WORD PTR [ebp-0x61a44bf],cs
  404e96:	shr    BYTE PTR [ebp+0x3e82716e],1
  404e9c:	mul    DWORD PTR [esi]
  404e9e:	cmp    bl,BYTE PTR ds:0xe5ce016a
  404ea4:	mov    ecx,0x26ea677b
  404ea9:	dec    ebx
  404eaa:	xor    DWORD PTR [ecx-0x5c4a4443],esi
  404eb0:	imul   eax,DWORD PTR [esi+0x2642e8e2],0xffffffff
  404eb7:	(bad)  
  404eb8:	xor    DWORD PTR [ecx+edx*1+0x37],0x4e
  404ebd:	dec    ebp
  404ebe:	fstp   QWORD PTR [esi+0x7969a415]
  404ec4:	popa   
  404ec5:	sbb    cl,BYTE PTR [esp+edx*2-0x79]
  404ec9:	repnz or al,0x50
  404ecc:	scas   al,BYTE PTR es:[edi]
  404ecd:	dec    DWORD PTR [edx-0x59]
  404ed0:	push   ss
  404ed1:	mov    esi,0x617659b8
  404ed6:	lods   al,BYTE PTR ds:[esi]
  404ed7:	pop    esp
  404ed8:	dec    edx
  404ed9:	inc    ebp
  404eda:	pusha  
  404edb:	retf   
  404edc:	add    BYTE PTR [eax*1-0x6f00b03a],bl
  404ee3:	pop    ecx
  404ee4:	int    0x13
  404ee6:	pop    edi
  404ee7:	adc    eax,0xad18a93e
  404eec:	adc    ecx,esi
  404eee:	imul   BYTE PTR [edx]
  404ef0:	dec    ebp
  404ef1:	ret    
  404ef2:	jle    0x404eb1
  404ef4:	xchg   ebx,eax
  404ef5:	and    BYTE PTR [ecx+0x36],0xd6
  404ef9:	repnz aam 0x16
  404efc:	and    al,0xb4
  404efe:	sti    
  404eff:	inc    edi
  404f00:	push   ds
  404f01:	push   ss
  404f02:	push   ss
  404f03:	xchg   BYTE PTR [edx-0x61],ch
  404f06:	(bad)
  404f0b:	sub    DWORD PTR [edi+0x5ce432f],ebp
  404f11:	add    dh,BYTE PTR [ecx]
  404f13:	adc    edi,ebp
  404f15:	lea    esp,[edx]
  404f17:	test   al,0x31
  404f19:	in     al,0x0
  404f1b:	(bad)  
  404f1c:	push   0xc8ef629a
  404f21:	test   DWORD PTR [esi],esi
  404f23:	fisub  WORD PTR [ebx-0x2f024d2a]
  404f29:	adc    eax,ecx
  404f2b:	(bad)  
  404f2c:	push   0xd98fd9ef
  404f31:	push   ebp
  404f32:	std    
  404f33:	setle  BYTE PTR ds:0x7151ceee
  404f3a:	mov    esp,0x58699814
  404f3f:	pop    esp
  404f40:	in     eax,dx
  404f41:	rol    DWORD PTR [ebp+0x13b5cc01],1
  404f47:	imul   ebx,DWORD PTR [eax-0x5a],0x49
  404f4b:	lea    esi,[edx-0x3e32985c]
  404f51:	outs   dx,BYTE PTR ds:[esi]
  404f52:	mov    esp,0x982b7736
  404f57:	push   edx
  404f58:	in     eax,0xd8
  404f5a:	jecxz  0x404f05
  404f5c:	dec    ebp
  404f5d:	fwait
  404f5e:	rcr    BYTE PTR [edx+edi*2+0x39],cl
  404f62:	(bad)  
  404f63:	call   0xfcc198c3
  404f68:	mov    ebp,0x25c10eaa
  404f6d:	jge    0x404f1f
  404f6f:	mov    dh,0xf7
  404f71:	fnstcw WORD PTR [ecx-0x50dc779b]
  404f77:	ja     0x404ff0
  404f79:	sub    BYTE PTR [edi],al
  404f7b:	shl    DWORD PTR [edx+0x8],0xb9
  404f7f:	or     al,dl
  404f81:	outs   dx,BYTE PTR ds:[esi]
  404f82:	data16 sub al,0x2b
  404f85:	add    dh,BYTE PTR [eax]
  404f87:	sbb    al,BYTE PTR [eax+0x1c3b6e6b]
  404f8d:	dec    esp
  404f8e:	fcom   QWORD PTR ds:0x9436447d
  404f94:	pop    esp
  404f95:	sub    al,0x9
  404f97:	pop    es
  404f98:	adc    ebp,ebp
  404f9a:	scas   al,BYTE PTR es:[edi]
  404f9b:	iret   
  404f9c:	ror    DWORD PTR [ecx-0x50],1
  404f9f:	imul   ebx,edi,0x43
  404fa2:	adc    eax,0x4249a927
  404fa7:	mov    ds:0x4198f1b5,al
  404fac:	xchg   ecx,eax
  404fad:	xlat   BYTE PTR ds:[ebx]
  404fae:	or     al,0x94
  404fb0:	fsub   st(1),st
  404fb2:	ins    DWORD PTR es:[edi],dx
  404fb3:	sub    BYTE PTR [eax-0x4c23738],ah
  404fb9:	sbb    al,0x67
  404fbb:	push   edi
  404fbc:	cli    
  404fbd:	adc    DWORD PTR [eax],esp
  404fbf:	mov    esi,0xed55e537
  404fc4:	std    
  404fc5:	leave  
  404fc6:	cwde   
  404fc7:	popf   
  404fc8:	test   eax,0x79a71473
  404fcd:	xor    DWORD PTR [edi],esi
  404fcf:	jecxz  0x405019
  404fd1:	adc    BYTE PTR [eax],bl
  404fd3:	mov    dl,bh
  404fd5:	xchg   edi,eax
  404fd6:	test   BYTE PTR [ecx],dl
  404fd8:	sbb    DWORD PTR [ecx],0xffffffca
  404fdb:	xor    ecx,DWORD PTR [edx+0x69ce684c]
  404fe1:	je     0x40502f
  404fe3:	inc    ecx
  404fe4:	xchg   ebx,eax
  404fe5:	jp     0x404fde
  404fe7:	enter  0xd96,0xd9
  404feb:	jmp    0x404f77
  404fed:	loopne 0x404f98
  404fef:	xor    esi,DWORD PTR [esi+0x6dff7209]
  404ff5:	fimul  DWORD PTR [ebx]
  404ff7:	arpl   ax,di
  404ff9:	in     al,0x37
  404ffb:	inc    esp
  404ffc:	call   0x443a:0xa9301b05
  405003:	cwde   
  405004:	jg     0x404f9f
  405006:	sub    al,0xb1
  405008:	popf   
  405009:	fldcw  WORD PTR [edx-0x13d9a3d8]
  40500f:	and    BYTE PTR [ecx],0x66
  405012:	mov    esp,0x21db6178
  405017:	add    ecx,0x90c32831
  40501d:	outs   dx,BYTE PTR ds:[esi]
  40501e:	xor    dl,dl
  405020:	jnp    0x405093
  405022:	ret    
  405023:	pop    edx
  405024:	xor    BYTE PTR [edx],cl
  405026:	hlt    
  405027:	mov    cl,0x20
  405029:	push   eax
  40502a:	jp     0x405094
  40502c:	push   ecx
  40502d:	xchg   ebp,eax
  40502e:	jg     0x404fbd
  405030:	dec    ebx
  405031:	pop    eax
  405032:	retf   
  405033:	or     dh,cl
  405035:	ins    DWORD PTR es:[edi],dx
  405036:	xchg   BYTE PTR [bx+di],al
  405039:	cdq    
  40503a:	or     eax,0x27b75e6d
  40503f:	lahf   
  405040:	jmp    0x2a036531
  405045:	cmp    BYTE PTR [edx+ebp*1+0x4fd8cae0],0x2d
  40504d:	mov    ebp,0x2f73ff0f
  405052:	adc    eax,0x651679bb
  405057:	sbb    ebx,ebx
  405059:	cwde   
  40505a:	in     al,0x4e
  40505c:	and    eax,0xb4a77b2b
  405061:	sub    BYTE PTR [ebx+0x45],ch
  405064:	and    DWORD PTR [ebp-0x7587ba6],edi
  40506a:	or     BYTE PTR [ebx-0x58d8ad9f],bh
  405070:	inc    esi
  405071:	and    eax,0x82b57132
  405076:	cmc    
  405077:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405078:	arpl   WORD PTR [esi+eiz*1-0x4d7f9c3],dx
  40507f:	mov    dl,0x44
  405081:	pop    edx
  405082:	lods   eax,DWORD PTR ds:[esi]
  405083:	cwde   
  405084:	sub    ebx,DWORD PTR [ebx+ecx*1]
  405087:	mov    DWORD PTR ds:0x80570bb8,esi
  40508d:	fistp  DWORD PTR [edx+edi*8+0x5c]
  405091:	sub    ah,ah
  405093:	ins    BYTE PTR es:[edi],dx
  405094:	call   0xbd0281f1
  405099:	(bad)  
  40509a:	add    ch,BYTE PTR [esi+0x50d3672f]
  4050a0:	jne    0x4050b6
  4050a2:	inc    ebp
  4050a3:	stos   BYTE PTR es:[edi],al
  4050a4:	fistp  QWORD PTR [edx-0x1c02fcf8]
  4050aa:	test   al,0xe9
  4050ac:	sbb    BYTE PTR [eax+0x5cd4f5eb],ah
  4050b2:	std    
  4050b3:	repz imul eax,DWORD PTR [ebp+0x6ce78876],0x6a
  4050bb:	mov    ecx,0x40c99d88
  4050c0:	dec    eax
  4050c1:	adc    ch,bh
  4050c3:	loop   0x405062
  4050c5:	xchg   esp,eax
  4050c6:	ret    0x4ea4
  4050c9:	mov    edx,0xeaca29b2
  4050ce:	stc    
  4050cf:	and    bh,0x98
  4050d2:	push   es
  4050d3:	jae    0x4050c3
  4050d5:	pop    edx
  4050d6:	shl    DWORD PTR [esi+edx*4+0x46],0xd4
  4050db:	inc    esi
  4050dc:	xor    DWORD PTR [esi+ebp*1-0x6ad89c45],edx
  4050e3:	mov    bl,0x77
  4050e5:	fldlg2 
  4050e7:	(bad)  
  4050e8:	pop    ds
  4050e9:	push   ebp
  4050ea:	and    al,0x7b
  4050ec:	dec    esp
  4050ed:	mov    ecx,0x420b291e
  4050f2:	popa   
  4050f3:	xor    BYTE PTR [ebp+0x76bf25c6],dl
  4050f9:	jo     0x4050cd
  4050fb:	xor    eax,ebx
  4050fd:	inc    ebp
  4050fe:	out    dx,eax
  4050ff:	adc    ch,BYTE PTR [edx]
  405101:	dec    ecx
  405102:	mov    edx,0xb61a3b52
  405107:	and    DWORD PTR [edi+0x60],ebp
  40510a:	scas   al,BYTE PTR es:[edi]
  40510b:	lahf   
  40510c:	rcr    ebp,1
  40510e:	mov    ebx,0xce46693b
  405113:	push   ebp
  405114:	xor    al,0x64
  405116:	xchg   ebp,eax
  405117:	scas   eax,DWORD PTR es:[edi]
  405118:	inc    ecx
  405119:	frstor [eax-0x5c]
  40511c:	add    DWORD PTR [edx-0x1773641e],ecx
  405122:	xchg   edi,eax
  405123:	or     eax,0xfafe1ad0
  405128:	pop    ebp
  405129:	add    eax,0x229579b2
  40512e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40512f:	sub    cl,BYTE PTR [ecx-0x7c6cf47e]
  405135:	cwde   
  405136:	mov    cl,0x63
  405138:	das    
  405139:	mov    esp,0xdbf36132
  40513e:	rcl    BYTE PTR [esi],cl
  405140:	leave  
  405141:	or     eax,0xd2791c80
  405146:	lods   al,BYTE PTR ds:[esi]
  405147:	jae    0x40512f
  405149:	repz mov cl,0xf2
  40514c:	mov    cs,WORD PTR [ebp-0x3adef358]
  405152:	stc    
  405153:	dec    esp
  405154:	ds inc edi
  405156:	xor    BYTE PTR [ecx],cl
  405158:	mov    cl,0x57
  40515a:	imul   esp,DWORD PTR ds:0xaaf53ae,0x1d
  405161:	mov    ah,0x2b
  405163:	(bad)  
  405164:	pusha  
  405165:	mov    eax,0x192183be
  40516a:	xor    eax,0xce82a373
  40516f:	push   0xffffff99
  405171:	jae    0x4051ed
  405173:	jno    0x405133
  405175:	jae    0x4051b4
  405177:	jl     0x40518a
  405179:	les    eax,FWORD PTR [edi+0x61350bd4]
  40517f:	dec    esi
  405180:	or     eax,0x7ad6e4b4
  405185:	in     al,dx
  405186:	add    BYTE PTR [edi-0x73fcf432],cl
  40518c:	cdq    
  40518d:	nop
  40518e:	(bad)  
  40518f:	loope  0x4051eb
  405191:	jecxz  0x4051f8
  405193:	outs   dx,DWORD PTR ds:[esi]
  405194:	jno    0x405145
  405196:	jne    0x405200
  405198:	repz mov bl,0x97
  40519b:	in     eax,dx
  40519c:	outs   dx,DWORD PTR ds:[esi]
  40519d:	jb     0x4051df
  40519f:	jmp    0x405137
  4051a1:	push   ebx
  4051a2:	push   ds
  4051a3:	ficom  WORD PTR [esi+edx*4]
  4051a6:	nop
  4051a7:	and    ebx,DWORD PTR [ebx]
  4051a9:	mov    bl,0xa5
  4051ab:	inc    esi
  4051ac:	into   
  4051ad:	outs   dx,DWORD PTR ds:[esi]
  4051ae:	call   0xd019c8bd
  4051b3:	cmp    cl,BYTE PTR [edx+0x216c6d01]
  4051b9:	add    edi,DWORD PTR [esp+edi*1]
  4051bc:	xor    al,0xd5
  4051be:	ret    0xd8af
  4051c1:	mov    cl,0x68
  4051c3:	ficomp DWORD PTR [ebx+0x74]
  4051c6:	jb     0x40515b
  4051c8:	sar    DWORD PTR [eax],1
  4051ca:	mov    ecx,DWORD PTR [ebp-0x4572803]
  4051d0:	clc    
  4051d1:	hlt    
  4051d2:	scas   eax,DWORD PTR es:[edi]
  4051d3:	or     cl,BYTE PTR [ebp-0x8bc3181]
  4051d9:	clc    
  4051da:	mov    al,0x57
  4051dc:	out    0x2,eax
  4051de:	xor    eax,0x3dac3cc8
  4051e3:	in     eax,0xa0
  4051e5:	xchg   edi,eax
  4051e6:	add    edx,eax
  4051e8:	js     0x4051fc
  4051ea:	mov    ah,0xee
  4051ec:	cdq    
  4051ed:	icebp  
  4051ee:	call   0x1802f5a7
  4051f3:	xor    BYTE PTR [edx],cl
  4051f5:	xor    ebp,esp
  4051f7:	adc    eax,0xbd029c19
  4051fc:	push   es
  4051fd:	push   ds
  4051fe:	dec    edx
  4051ff:	push   esp
  405200:	push   eax
  405201:	fstp   TBYTE PTR [ecx+0x60]
  405204:	in     eax,dx
  405205:	mov    edi,0xa9253316
  40520a:	push   edx
  40520b:	lock hlt 
  40520d:	cmp    al,0x73
  40520f:	leave  
  405210:	xor    BYTE PTR cs:[ebx+eax*1-0x38],dl
  405215:	sub    edi,DWORD PTR [eax+0x5fc9bbe7]
  40521b:	pop    ebp
  40521c:	add    BYTE PTR [edi-0x34],al
  40521f:	or     BYTE PTR [edx+0x20],bh
  405222:	std    
  405223:	adc    DWORD PTR [ebp-0xeb3e4c2],0x6d990378
  40522d:	repnz test eax,0xff062ca3
  405233:	call   0x3a2:0xd5640161
  40523a:	pop    esi
  40523b:	arpl   sp,sp
  40523d:	mov    ebp,0xdf215f50
  405242:	jno    0x4051f3
  405244:	jp     0x4051e7
  405246:	mov    cl,0xaf
  405248:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405249:	jb     0x4052c7
  40524b:	sub    ebp,eax
  40524d:	jmp    0x4051e5
  40524f:	adc    DWORD PTR [ebp-0x2daace6],eax
  405255:	add    al,0x64
  405257:	(bad)
  40525a:	push   cs
  40525b:	pop    ecx
  40525c:	xor    dh,dl
  40525e:	jl     0x405277
  405260:	fldenv [edx-0x8]
  405263:	jbe    0x405276
  405265:	sbb    al,0x47
  405267:	div    ebx
  405269:	xchg   ecx,eax
  40526a:	xor    al,0x68
  40526c:	ins    BYTE PTR es:[edi],dx
  40526d:	mov    cs,WORD PTR [esi]
  40526f:	xor    BYTE PTR [edi+0x2b7c0482],ah
  405275:	jbe    0x4052b8
  405277:	sub    BYTE PTR [esi-0x2e],0xbf
  40527b:	ins    DWORD PTR es:[edi],dx
  40527c:	loopne 0x4052d0
  40527e:	cmp    eax,0x387f47ae
  405283:	pop    esp
  405284:	xor    edx,edi
  405286:	or     esp,DWORD PTR [ebx+0x5cba2285]
  40528c:	sahf   
  40528d:	rol    DWORD PTR [edi-0x3c53c3aa],1
  405293:	pop    es
  405294:	rsqrtps xmm3,xmm1
  405297:	adc    bl,BYTE PTR [ebx+0x4]
  40529a:	cmp    ah,BYTE PTR [ebx]
  40529c:	jp     0x4052aa
  40529e:	jge    0x4052c4
  4052a0:	jo     0x4052ca
  4052a2:	mov    ch,0xd7
  4052a4:	sub    ecx,edi
  4052a6:	lahf   
  4052a7:	cli    
  4052a8:	add    BYTE PTR [esi+0x5c],ah
  4052ab:	sub    dh,cl
  4052ad:	mov    cl,0x72
  4052af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052b0:	shr    DWORD PTR [ebp+0x3ac6ec3f],0xc1
  4052b7:	out    0x44,eax
  4052b9:	add    dl,dh
  4052bb:	or     DWORD PTR ds:0x20c6ff02,0xffffffaf
  4052c2:	and    esi,esi
  4052c4:	adc    edi,DWORD PTR fs:[eax+0x715bc48]
  4052cb:	mov    bl,0xfd
  4052cd:	cld    
  4052ce:	daa    
  4052cf:	dec    esi
  4052d0:	cli    
  4052d1:	push   ds
  4052d2:	test   al,0xe
  4052d4:	push   0xffffffc7
  4052d6:	push   es
  4052d7:	adc    eax,0x3ebe1819
  4052dc:	mov    bh,0x1b
  4052de:	dec    ebx
  4052df:	in     eax,dx
  4052e0:	jno    0x4052eb
  4052e2:	push   es
  4052e3:	out    dx,al
  4052e4:	sub    al,0x60
  4052e6:	clc    
  4052e7:	mov    BYTE PTR [eax+0x4a],cl
  4052ea:	push   edi
  4052eb:	nop
  4052ec:	xchg   ecx,eax
  4052ed:	ins    DWORD PTR es:[edi],dx
  4052ee:	inc    ebp
  4052ef:	and    dh,BYTE PTR [ebp+0x4ffcd452]
  4052f5:	fnop   
  4052f7:	loopne 0x405301
  4052f9:	sar    BYTE PTR [edx],cl
  4052fb:	cdq    
  4052fc:	cdq    
  4052fd:	addr16 jbe 0x40531f
  405300:	push   0x7b
  405302:	aad    0x27
  405304:	mov    eax,ds:0xe48da5f7
  405309:	lea    ebp,[esi-0x47]
  40530c:	mov    ah,ch
  40530e:	mov    dh,0xc7
  405310:	xor    BYTE PTR [edi+0x4f],ah
  405313:	jmp    0x178a:0xf3e47590
  40531a:	push   edx
  40531b:	outs   dx,DWORD PTR ds:[esi]
  40531c:	sub    esp,DWORD PTR [edx+0x177c7991]
  405322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405323:	aaa    
  405324:	aam    0x12
  405326:	xor    ecx,DWORD PTR [esi+edx*4]
  405329:	jnp    0x4052b3
  40532b:	xchg   DWORD PTR [eax+0x50],edx
  40532e:	push   0x4e
  405330:	aaa    
  405331:	pop    esi
  405332:	rcr    bh,0xf4
  405335:	sub    al,0x1a
  405337:	into   
  405338:	mov    cl,BYTE PTR [ebx-0x75b6cb50]
  40533e:	ret    
  40533f:	lahf   
  405340:	retf   
  405341:	mov    eax,ebx
  405343:	mov    eax,ds:0x6e78970a
  405348:	xchg   esi,eax
  405349:	xchg   DWORD PTR [ecx+0x4e],esi
  40534c:	sub    DWORD PTR [edx],0xffffffbb
  40534f:	xor    edi,DWORD PTR [ebx-0x239a323b]
  405355:	leave  
  405356:	mov    ds:0x30024313,eax
  40535b:	icebp  
  40535c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40535d:	add    DWORD PTR ds:0xa311575b,esi
  405363:	cli    
  405364:	push   esi
  405365:	shl    DWORD PTR [esi-0x36a035b8],1
  40536b:	jnp    0x405319
  40536d:	xlat   BYTE PTR ds:[ebx]
  40536e:	mov    al,0x69
  405370:	test   BYTE PTR ds:0x7be49571,bh
  405376:	cld    
  405377:	lods   eax,DWORD PTR ds:[esi]
  405378:	push   ss
  405379:	add    DWORD PTR ds:0x3f00aaa7,0x62
  405380:	ja     0x405308
  405382:	mov    eax,ds:0xd397985e
  405387:	adc    al,0x75
  405389:	xchg   esp,eax
  40538a:	inc    ecx
  40538b:	push   cs
  40538c:	nop
  40538d:	xchg   ecx,eax
  40538e:	dec    ebx
  40538f:	dec    edi
  405390:	pop    gs
  405392:	mov    ebx,0x821bc508
  405397:	jno    0x405344
  405399:	pop    edi
  40539a:	cmp    eax,0x84ade66c
  40539f:	dec    esp
  4053a0:	cmp    DWORD PTR [eax-0x35],0x42b96dca
  4053a7:	iret   
  4053a8:	jle    0x40541b
  4053aa:	push   esp
  4053ab:	pop    esp
  4053ac:	repz and cl,BYTE PTR [ebx+0x418aab14]
  4053b3:	pop    edi
  4053b4:	xchg   ebp,eax
  4053b5:	cmp    ch,BYTE PTR [edx]
  4053b7:	adc    DWORD PTR [eax],esi
  4053b9:	call   0xe186:0xff98e19c
  4053c0:	mov    cl,0x79
  4053c2:	scas   eax,DWORD PTR es:[edi]
  4053c3:	jecxz  0x4053ea
  4053c5:	inc    ecx
  4053c6:	xor    eax,0x4ea981e4
  4053cb:	xchg   sp,ax
  4053cd:	sbb    DWORD PTR [edi+edi*8-0x32ffad0d],ebp
  4053d4:	lods   eax,DWORD PTR ds:[esi]
  4053d5:	push   cs
  4053d6:	push   esi
  4053d7:	adc    DWORD PTR [esi-0xe],ecx
  4053da:	dec    edi
  4053db:	outs   dx,DWORD PTR ds:[esi]
  4053dc:	(bad)  
  4053de:	mov    DWORD PTR [ecx+0x6],0x60bb82de
  4053e5:	sbb    ecx,DWORD PTR ds:0xf18883ce
  4053eb:	or     BYTE PTR ds:0xaf5db1c2,al
  4053f1:	(bad)  
  4053f3:	xchg   esp,eax
  4053f4:	sub    al,0xd0
  4053f6:	stos   BYTE PTR es:[edi],al
  4053f7:	xchg   ecx,eax
  4053f8:	ss add eax,0xb1e24a79
  4053fe:	xor    ah,bl
  405400:	retf   
  405401:	dec    esi
  405402:	cmp    al,0x4f
  405404:	lahf   
  405405:	(bad)  
  405406:	or     esi,DWORD PTR [esp+esi*4-0x6d3ba831]
  40540d:	pop    eax
  40540e:	fwait
  40540f:	sub    cl,bl
  405411:	pop    edi
  405412:	xchg   DWORD PTR [esi+esi*1],ecx
  405415:	push   esp
  405416:	pop    edi
  405417:	outs   dx,BYTE PTR ds:[esi]
  405418:	ss je  0x4053dc
  40541b:	pop    ss
  40541c:	pop    esp
  40541d:	fldenv ds:0xf8354007
  405423:	and    edi,DWORD PTR [edx-0x4ccecd0b]
  405429:	mov    esp,0x1e113d66
  40542e:	add    eax,0xde2f3be8
  405433:	stos   BYTE PTR es:[edi],al
  405434:	(bad)  
  405435:	aad    0xc3
  405437:	cmp    DWORD PTR [esi],0x6fcadb62
  40543d:	inc    esi
  40543e:	xor    al,0x7a
  405440:	cmps   WORD PTR gs:[esi],WORD PTR es:[edi]
  405443:	sbb    al,0x52
  405445:	repnz xlat BYTE PTR ds:[ebx]
  405447:	mov    ebx,edi
  405449:	das    
  40544a:	repnz fs pop esp
  40544d:	sub    al,0x47
  40544f:	xchg   DWORD PTR [ecx-0x4c],edx
  405452:	stc    
  405453:	ins    BYTE PTR es:[edi],dx
  405454:	inc    esp
  405455:	pop    ecx
  405456:	pop    esp
  405457:	jge    0x40543f
  405459:	sti    
  40545a:	mov    eax,0xe1866f63
  40545f:	aad    0x40
  405461:	dec    edi
  405462:	gs jmp 0xbbc67bb4
  405468:	jnp    0x40547b
  40546a:	jecxz  0x4054c8
  40546c:	inc    ecx
  40546d:	pop    ecx
  40546e:	pushf  
  40546f:	xor    ah,bl
  405471:	fmul   DWORD PTR [ebx+0x25c124fb]
  405477:	inc    esi
  405478:	inc    BYTE PTR [ebp-0xa]
  40547b:	xchg   ecx,eax
  40547c:	xchg   BYTE PTR [ecx],ch
  40547e:	and    ah,BYTE PTR [eax]
  405480:	into   
  405481:	leave  
  405482:	mov    esi,DWORD PTR [edx]
  405484:	cmp    eax,eax
  405486:	shr    BYTE PTR [ecx+eax*4],1
  405489:	cli    
  40548a:	les    esp,FWORD PTR [esi]
  40548c:	ja     0x405417
  40548e:	xchg   ebp,eax
  40548f:	cwde   
  405490:	jbe    0x40545c
  405492:	loope  0x4054c8
  405494:	out    dx,al
  405495:	stos   BYTE PTR es:[edi],al
  405496:	jbe    0x4054aa
  405498:	fninit 
  40549a:	rcl    BYTE PTR [esi+0x36b5e6b1],0x29
  4054a1:	inc    ecx
  4054a2:	push   0xffffffda
  4054a4:	ret    
  4054a5:	cmp    DWORD PTR [esi+0x1a68fd68],ecx
  4054ab:	add    eax,0x5f3bd4f1
  4054b0:	jbe    0x405512
  4054b2:	in     eax,dx
  4054b3:	shl    DWORD PTR [ebp+0x480c8408],1
  4054b9:	into   
  4054ba:	dec    esi
  4054bb:	call   0x581246a9
  4054c0:	fucomip st,st(0)
  4054c2:	inc    esp
  4054c3:	dec    ebp
  4054c4:	mov    BYTE PTR [edx],dh
  4054c6:	jne    0x4054b7
  4054c8:	iret   
  4054c9:	test   DWORD PTR [edx+0x220200ea],edx
  4054cf:	mov    ah,al
  4054d1:	pop    ebx
  4054d2:	jne    0x4054b5
  4054d4:	xor    DWORD PTR [esi+0x32],edi
  4054d7:	jnp    0x405535
  4054d9:	mov    eax,ds:0x7c81b067
  4054de:	mov    ds:0xabbe02a2,al
  4054e3:	inc    ebp
  4054e4:	jmp    0x4c46:0x2dc0e180
  4054eb:	das    
  4054ec:	xor    eax,0xb349062e
  4054f1:	sub    DWORD PTR [edx],esi
  4054f3:	into   
  4054f4:	dec    ebx
  4054f5:	inc    esp
  4054f6:	rcr    DWORD PTR [esi],cl
  4054f8:	lods   eax,DWORD PTR ds:[esi]
  4054f9:	dec    ecx
  4054fa:	push   edi
  4054fb:	jecxz  0x405519
  4054fd:	iret   
  4054fe:	(bad)  
  4054ff:	sub    BYTE PTR [ebp+edi*1-0x383c365],bl
  405506:	or     DWORD PTR [ebx-0x566be7ca],ecx
  40550c:	sub    eax,DWORD PTR [esi-0x5d]
  40550f:	fwait
  405510:	push   edx
  405511:	pusha  
  405512:	out    0x3,al
  405514:	adc    bl,bl
  405516:	shl    BYTE PTR [edi-0x2],0x83
  40551a:	shl    BYTE PTR [eax-0x75],0xdb
  40551e:	fcomp  QWORD PTR [ecx-0x3c0831b4]
  405524:	xchg   DWORD PTR [ebx+esi*4],edx
  405527:	adc    al,0xc6
  405529:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40552a:	sbb    ecx,eax
  40552c:	and    eax,0x9bd0d281
  405531:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405532:	iret   
  405533:	cmp    DWORD PTR [eax+ebx*8-0x4d],ebp
  405537:	repnz mov dl,dl
  40553a:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40553c:	push   edi
  40553d:	inc    ebp
  40553e:	xchg   esi,eax
  40553f:	in     eax,dx
  405540:	adc    BYTE PTR [esi],ch
  405542:	xor    BYTE PTR [ebx-0x34],bl
  405545:	mov    ecx,DWORD PTR ds:0x1f155de7
  40554b:	fdiv   DWORD PTR [esi+0x5c3c92dc]
  405551:	adc    BYTE PTR [ebp+0x624569c6],ah
  405557:	aaa    
  405558:	jl     0x405574
  40555a:	sbb    al,bh
  40555c:	or     dh,al
  40555e:	(bad)  [ecx+ebp*2]
  405561:	push   esp
  405562:	inc    esi
  405563:	xchg   esp,eax
  405564:	std    
  405565:	fisubr WORD PTR [eax+0x9]
  405568:	(bad)  
  405569:	or     DWORD PTR [ebx-0x2c],0xe624a9b0
  405570:	pop    edx
  405571:	test   eax,0xb584f09f
  405576:	push   0x75e07ca8
  40557b:	jns    0x405531
  40557d:	pop    ecx
  40557e:	aas    
  40557f:	dec    esi
  405580:	dec    esi
  405581:	adc    cl,BYTE PTR [esi]
  405583:	int3   
  405584:	inc    eax
  405585:	pop    edx
  405586:	dec    edx
  405587:	ja     0x405583
  405589:	jb     0x40553c
  40558b:	dec    eax
  40558c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40558d:	fild   WORD PTR [ecx+0x2c]
  405590:	call   0x114e:0x1806349e
  405597:	push   esp
  405598:	pop    esp
  405599:	icebp  
  40559a:	or     al,0xb6
  40559c:	mov    ds:0xe0e6b476,al
  4055a1:	(bad)  
  4055a2:	jmp    0x507e:0x8de09824
  4055a9:	aad    0x5
  4055ab:	sbb    eax,0xc6fbe867
  4055b0:	loope  0x405583
  4055b2:	pop    ebx
  4055b3:	adc    eax,0xed91f494
  4055b8:	nop
  4055b9:	je     0x4055b9
  4055bb:	int    0xa7
  4055bd:	cli    
  4055be:	and    DWORD PTR [ecx+0x71db2ba2],ebp
  4055c4:	xchg   ebx,eax
  4055c5:	or     ebx,ebx
  4055c7:	shl    BYTE PTR [edi+0x615d3762],cl
  4055cd:	test   dh,dl
  4055cf:	dec    ecx
  4055d0:	leave  
  4055d1:	inc    esp
  4055d2:	sbb    dh,dl
  4055d4:	mov    bl,0x9
  4055d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055d7:	and    al,0x5c
  4055d9:	test   al,0x57
  4055db:	stc    
  4055dc:	xchg   edi,eax
  4055dd:	addr16 daa 
  4055df:	adc    al,0xfe
  4055e1:	loope  0x405586
  4055e3:	rol    DWORD PTR [edx],cl
  4055e5:	(bad)  [ecx]
  4055e7:	es test eax,0xab59cd64
  4055ed:	push   ss
  4055ee:	icebp  
  4055ef:	(bad)  
  4055f0:	push   esi
  4055f1:	daa    
  4055f2:	jns    0x405644
  4055f4:	ret    0x5a18
  4055f7:	mov    cl,BYTE PTR [edx+ecx*8+0x71d6e56]
  4055fe:	mov    WORD PTR [esi-0xe7016e7],?
  405604:	mov    esp,0xa12d9740
  405609:	aad    0x47
  40560b:	shl    al,cl
  40560d:	(bad)  
  40560e:	pop    ss
  40560f:	es push es
  405611:	(bad)  [ecx-0x6a0d4b5c]
  405617:	pop    edx
  405618:	shr    bl,1
  40561a:	shr    BYTE PTR [edx-0x3],1
  40561d:	test   BYTE PTR [ecx-0x23],ch
  405620:	dec    ebx
  405621:	loopne 0x405688
  405623:	sub    DWORD PTR [eax-0x65],esi
  405626:	es out dx,eax
  405628:	mov    eax,ds:0x6c7705c1
  40562d:	sbb    ch,BYTE PTR [esi]
  40562f:	xchg   BYTE PTR [eax+0x6c],dh
  405632:	pop    esi
  405633:	stc    
  405634:	sbb    al,0x0
  405636:	cmp    ebx,DWORD PTR [ebx+0x45]
  405639:	mov    ebp,0xd68f8331
  40563e:	adc    al,0x19
  405640:	and    BYTE PTR [esi-0x7e21463a],bh
  405646:	xchg   edi,eax
  405647:	mov    edi,0x7b8c0a58
  40564c:	xor    eax,0x570effa2
  405651:	test   eax,0x95472b8c
  405656:	bnd jno 0x405694
  405659:	lahf   
  40565a:	js     0x40563b
  40565c:	xchg   esp,eax
  40565d:	icebp  
  40565e:	loope  0x405662
  405660:	pop    ebx
  405661:	dec    ebx
  405662:	cmp    ebp,ebx
  405664:	repz cmp bl,BYTE PTR [edi]
  405667:	ds push cs
  405669:	out    dx,eax
  40566a:	lods   eax,DWORD PTR ds:[esi]
  40566b:	retf   0x715a
  40566e:	xor    edi,DWORD PTR [edi-0x3b605d7f]
  405674:	pop    esi
  405675:	xchg   esp,eax
  405676:	inc    eax
  405677:	sub    ch,BYTE PTR [ecx+0x667a4df9]
  40567d:	mov    esp,0xda80e4ae
  405682:	mov    WORD PTR [edx-0x200802db],es
  405688:	sysret 
  40568a:	cmc    
  40568b:	mov    dl,0x6b
  40568d:	das    
  40568e:	jae    0x40568f
  405690:	xchg   esi,eax
  405691:	sub    eax,0xec639f20
  405696:	xor    eax,0x3742a3a1
  40569b:	leave  
  40569c:	imul   ecx,DWORD PTR [edx-0x4a],0xffffffa7
  4056a0:	arpl   WORD PTR [edx],cx
  4056a2:	jbe    0x405653
  4056a4:	jp     0x4056f9
  4056a6:	and    al,0xc1
  4056a8:	popf   
  4056a9:	and    eax,0x9e65dfbf
  4056ae:	adc    DWORD PTR [eax+eiz*1+0x43],ebx
  4056b2:	xor    DWORD PTR [edi+0x6323446c],esp
  4056b8:	cmp    dh,BYTE PTR [ebx+0x445d1103]
  4056be:	dec    edx
  4056bf:	mov    esp,0xa49d2e68
  4056c4:	mov    edi,0x984be18a
  4056c9:	bound  esi,QWORD PTR [ebp+0x4c7a6f91]
  4056cf:	mov    DWORD PTR [ecx],esp
  4056d1:	sbb    eax,0x46ebfc7
  4056d6:	xlat   BYTE PTR ds:[ebx]
  4056d7:	icebp  
  4056d8:	stos   BYTE PTR es:[edi],al
  4056d9:	inc    esp
  4056da:	jne    0x40573d
  4056dc:	xor    BYTE PTR [ecx+0x24],0x4c
  4056e0:	dec    ebx
  4056e1:	add    al,0x4e
  4056e3:	add    al,0xca
  4056e5:	aas    
  4056e6:	call   0xf93ec70e
  4056eb:	push   ebx
  4056ec:	push   ebx
  4056ed:	mov    al,0x26
  4056ef:	div    edi
  4056f1:	repnz aas 
  4056f3:	lea    esi,ds:0xe56692d8
  4056f9:	jnp    0x4056ad
  4056fb:	test   DWORD PTR [eax-0x46],esi
  4056fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056ff:	(bad)  
  405700:	jp     0x405705
  405702:	cld    
  405703:	cwde   
  405704:	mov    BYTE PTR [edx+0x3e],ah
  405707:	push   edx
  405708:	push   0x68551139
  40570d:	xor    DWORD PTR [ebx],0x73e3f720
  405713:	pop    edx
  405714:	sub    DWORD PTR [ecx+0x5e7e0027],0x8094a3be
  40571e:	ja     0x4056ab
  405720:	and    eax,ecx
  405722:	fld    TBYTE PTR [ecx]
  405724:	faddp  st(7),st
  405726:	sbb    eax,0x6e9dfcee
  40572b:	pop    ss
  40572c:	sub    al,0x0
  40572e:	xchg   edx,eax
  40572f:	jno    0x4056b6
  405731:	(bad)  [ecx-0x7d]
  405734:	scas   eax,DWORD PTR es:[edi]
  405735:	dec    edx
  405736:	sbb    eax,0xfaf96384
  40573b:	sub    dl,BYTE PTR [edi+0x51]
  40573e:	sbb    BYTE PTR [edx-0x574cf359],cl
  405744:	push   0x23fd18d5
  405749:	mov    esi,edx
  40574b:	ret    
  40574c:	jns    0x405754
  40574e:	adc    eax,DWORD PTR [ecx+0x3dcd90aa]
  405754:	pop    esp
  405755:	add    al,ch
  405757:	pop    ss
  405758:	mul    BYTE PTR [ecx-0xf]
  40575b:	iret   
  40575c:	and    al,0x8e
  40575e:	mov    ch,0x8a
  405760:	lock int 0x7e
  405763:	aad    0xb
  405765:	push   ds
  405766:	xor    esi,DWORD PTR [edx-0x44]
  405769:	xor    al,0x16
  40576b:	inc    edx
  40576c:	jbe    0x405788
  40576e:	dec    esp
  40576f:	imul   ebx,DWORD PTR [eax+0x3c96de3b],0xffffffcf
  405776:	mov    dh,0x1b
  405778:	cmc    
  405779:	icebp  
  40577a:	cmp    edi,eax
  40577c:	sbb    BYTE PTR [eax],dh
  40577e:	(bad)  
  40577f:	and    bh,BYTE PTR ds:0x6a7cfec2
  405785:	enter  0x645,0xfd
  405789:	clc    
  40578a:	and    esi,DWORD PTR [edi-0x59d6525e]
  405790:	lods   al,BYTE PTR ds:[esi]
  405791:	retf   0x1d52
  405794:	ss (bad) 
  405796:	pop    ds
  405797:	fld    QWORD PTR [edx+0x6a182ee7]
  40579d:	mov    ds:0x49324711,eax
  4057a2:	outs   dx,BYTE PTR gs:[esi]
  4057a4:	lds    ecx,FWORD PTR [edx]
  4057a6:	lods   eax,DWORD PTR ds:[esi]
  4057a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057a8:	test   eax,0x47faf52e
  4057ad:	and    eax,0x3ab51137
  4057b2:	or     eax,0x956b15f3
  4057b7:	jmp    0xee2ff2bc
  4057bc:	adc    al,0x4f
  4057be:	fcom   DWORD PTR [ebx+0x6a2d7498]
  4057c4:	jo     0x40576d
  4057c6:	jmp    0x40583c
  4057c8:	cmp    DWORD PTR [eax+0x7f],ebp
  4057cb:	and    BYTE PTR [ecx+0x4a],dl
  4057ce:	adc    al,0x3c
  4057d0:	inc    esi
  4057d1:	add    ecx,0xd33f31f
  4057d7:	sar    DWORD PTR [ecx-0xf],cl
  4057da:	push   edx
  4057db:	xchg   esp,eax
  4057dc:	cmp    DWORD PTR [eax-0x6f4d538b],ecx
  4057e2:	ds inc esp
  4057e5:	mov    ebx,ecx
  4057e7:	inc    ebx
  4057e8:	mov    ah,0x2f
  4057ea:	dec    edi
  4057eb:	or     ecx,DWORD PTR [esi]
  4057ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057ee:	xor    eax,0xf9fa7b4c
  4057f3:	fmul   DWORD PTR [ebx+0xd]
  4057f6:	mov    cl,0x5f
  4057f8:	lea    ecx,[ebx-0x10]
  4057fb:	sbb    bh,BYTE PTR [esi-0xe]
  4057fe:	sbb    dh,BYTE PTR [edx-0x63]
  405801:	jle    0x405812
  405803:	mov    eax,ds:0x30cdeb6a
  405808:	shr    BYTE PTR [edi],0x7d
  40580b:	enter  0x8dea,0x85
  40580f:	test   dl,ch
  405811:	les    eax,FWORD PTR [edi]
  405813:	adc    eax,0x17fa29e
  405818:	cld    
  405819:	xchg   al,dh
  40581b:	loop   0x405868
  40581d:	adc    al,0xe8
  40581f:	ror    ecx,0xd7
  405822:	cmp    DWORD PTR [edi+edx*4+0x4c],0x157f309a
  40582a:	int    0x9c
  40582c:	adc    eax,0xbcc85796
  405831:	std    
  405832:	adc    dl,BYTE PTR ds:0xec156553
  405838:	push   edx
  405839:	fisubr WORD PTR [eax]
  40583b:	push   cs
  40583c:	push   ds
  40583d:	jmp    0x40581d
  40583f:	std    
  405840:	and    ebp,DWORD PTR [eax-0x61]
  405843:	lahf   
  405844:	xchg   ecx,eax
  405845:	int    0xb8
  405847:	jns    0x40583f
  405849:	inc    esi
  40584a:	jne    0x4058a3
  40584c:	loopne 0x4057d2
  40584e:	mov    dl,0x61
  405850:	pop    edi
  405851:	sbb    eax,0x49469ae4
  405856:	xor    eax,0xb146daeb
  40585b:	call   0xfab30adc
  405860:	shl    BYTE PTR [ecx],0x9e
  405863:	bound  edx,QWORD PTR [esi+0x66d62f0a]
  405869:	dec    edi
  40586a:	addr16 push ss
  40586c:	popa   
  40586d:	cmp    BYTE PTR [edi+0x7],ah
  405870:	pop    edi
  405871:	sub    edx,ebx
  405873:	mov    ds:0x8a03146,al
  405878:	and    eax,0xcaa4ba47
  40587d:	sti    
  40587e:	pop    ebp
  40587f:	adc    eax,DWORD PTR [ebx-0x67]
  405882:	aad    0xfa
  405884:	mov    dl,ah
  405886:	and    al,0x1d
  405888:	xchg   ebp,eax
  405889:	xor    eax,0x831d5d26
  40588e:	xor    DWORD PTR [ebx-0x1a],ecx
  405891:	and    DWORD PTR [esi+0x2c724f31],edx
  405897:	jb     0x4058de
  405899:	sub    cl,ah
  40589b:	jmp    0x60a85f64
  4058a0:	iret   
  4058a1:	outs   dx,DWORD PTR ds:[esi]
  4058a2:	scas   al,BYTE PTR es:[edi]
  4058a3:	stos   DWORD PTR es:[edi],eax
  4058a4:	cmp    BYTE PTR [ebp+0x2a],ch
  4058a7:	cli    
  4058a8:	cld    
  4058a9:	mov    dh,ch
  4058ab:	das    
  4058ac:	xchg   ecx,eax
  4058ad:	cmp    cl,bl
  4058af:	cs push ebp
  4058b2:	fimul  WORD PTR ds:0x29077970
  4058b8:	fcmove st,st(5)
  4058ba:	fwait
  4058bb:	(bad)  
  4058bc:	jb     0x40591e
  4058be:	(bad)  
  4058bf:	mov    bh,0x70
  4058c1:	imul   edx,DWORD PTR [esi],0x2e
  4058c4:	inc    edx
  4058c5:	and    al,0xa2
  4058c7:	fs dec eax
  4058c9:	jae    0x4058ec
  4058cb:	(bad)  
  4058cc:	repz neg BYTE PTR [edi-0x5fcba170]
  4058d3:	jbe    0x4058fc
  4058d5:	pusha  
  4058d6:	retf   
  4058d7:	and    ebp,edx
  4058d9:	loope  0x405910
  4058db:	push   ebx
  4058dc:	(bad)
  4058e1:	stos   DWORD PTR es:[edi],eax
  4058e2:	xchg   esi,eax
  4058e3:	loopne 0x4058d1
  4058e5:	lods   eax,DWORD PTR ds:[esi]
  4058e6:	mov    db5,ebp
  4058e9:	mov    esi,0xdd51cb36
  4058ee:	je     0x405920
  4058f0:	test   eax,0x8e994b3
  4058f6:	push   ecx
  4058f7:	jmp    0xa45dbe5
  4058fc:	cmc    
  4058fd:	add    ecx,DWORD PTR [ebx+0x4]
  405900:	retf   0xa73d
  405903:	dec    esi
  405904:	adc    bh,BYTE PTR [ecx+0x51]
  405907:	dec    edx
  405908:	cmp    cl,BYTE PTR [ebx+0x590f2680]
  40590e:	and    ebp,DWORD PTR [ebx+0x0]
  405911:	(bad)  
  405912:	adc    BYTE PTR [eax],ah
  405914:	jmp    0x65be:0xaa340e28
  40591b:	nop
  40591c:	mov    eax,0x9f7631fd
  405921:	retf   
  405922:	or     bh,dl
  405924:	dec    eax
  405925:	test   eax,0x92ed6c7b
  40592a:	sar    DWORD PTR [eax-0x3d],cl
  40592d:	imul   eax,DWORD PTR [eax+0x4d],0xffffff82
  405931:	sub    ecx,eax
  405933:	ins    BYTE PTR es:[edi],dx
  405934:	jg     0x40592c
  405936:	aas    
  405937:	in     eax,0x47
  405939:	sbb    eax,0x9dcacc80
  40593e:	and    al,0x9a
  405940:	fisubr DWORD PTR [ecx-0x601036e2]
  405946:	loope  0x40592b
  405948:	dec    esp
  405949:	stc    
  40594a:	push   ebp
  40594b:	sub    al,0xbd
  40594d:	cli    
  40594e:	ss loopne 0x405923
  405951:	sbb    DWORD PTR [ebp+ecx*4+0x5ed11bd6],ecx
  405958:	fs loop 0x4058e5
  40595b:	lods   eax,DWORD PTR ds:[esi]
  40595c:	retf   0xee85
  40595f:	adc    dh,BYTE PTR [edx+0x15479e2a]
  405965:	push   ds
  405966:	in     eax,dx
  405967:	jbe    0x40596f
  405969:	cwde   
  40596a:	lds    esi,FWORD PTR es:[eax]
  40596d:	xchg   BYTE PTR [eax-0x60],ch
  405970:	mov    WORD PTR [esi],ds
  405972:	push   0x36
  405974:	data16 in al,0x8
  405977:	das    
  405978:	pop    eax
  405979:	cmp    cl,BYTE PTR [edi]
  40597b:	test   BYTE PTR [edx+0x2df4f38e],0x42
  405982:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405983:	xchg   edi,eax
  405984:	inc    esp
  405985:	popa   
  405986:	mov    dl,0x73
  405988:	xor    BYTE PTR [esi*4+0x289d5006],dl
  40598f:	mov    ds:0xa1dafd95,eax
  405994:	mov    eax,0xaf121487
  405999:	sbb    ecx,DWORD PTR [ebx-0x35a14b4c]
  40599f:	mov    esp,0x135d73a3
  4059a4:	inc    esi
  4059a5:	mov    DWORD PTR [esi-0x5b8ade12],ebp
  4059ab:	mov    DWORD PTR [esi],esi
  4059ad:	inc    ecx
  4059ae:	not    DWORD PTR [ebx+ebx*4]
  4059b1:	outs   dx,BYTE PTR ds:[esi]
  4059b2:	or     al,0xf4
  4059b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059b5:	add    ch,BYTE PTR [ebx]
  4059b7:	mov    eax,ds:0x14480c50
  4059bc:	xor    al,0xf9
  4059be:	int3   
  4059bf:	add    cl,BYTE PTR ds:0x83874744
  4059c5:	shl    BYTE PTR [esi-0x60469bad],1
  4059cb:	mov    dl,0xa2
  4059cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059ce:	sar    DWORD PTR [edx-0x55042185],cl
  4059d4:	dec    esp
  4059d5:	rcl    al,cl
  4059d7:	rol    DWORD PTR [eax+eiz*8-0x6a444fd5],0x7e
  4059df:	test   BYTE PTR [ebx-0x7152557f],bl
  4059e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059e6:	mov    esp,?
  4059e8:	jnp    0x405a46
  4059ea:	repz mov eax,ds:0x272dbd19
  4059f0:	xchg   esp,eax
  4059f1:	cmp    edx,esp
  4059f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059f4:	nop
  4059f5:	pop    esp
  4059f6:	pop    ss
  4059f7:	mov    eax,ds:0x48c0147d
  4059fc:	icebp  
  4059fd:	repnz popf 
  4059ff:	pop    ds
  405a00:	cdq    
  405a01:	push   cs
  405a02:	mov    dl,0x7a
  405a04:	mov    es,WORD PTR [ecx-0x58]
  405a07:	gs int 0xb6
  405a0a:	or     eax,0x781f8833
  405a0f:	or     DWORD PTR [edx-0x69],ebx
  405a12:	sbb    al,0x41
  405a14:	pop    DWORD PTR [ebx]
  405a16:	jp     0x4059bb
  405a18:	in     eax,dx
  405a19:	inc    edx
  405a1a:	or     al,0xa9
  405a1c:	and    ch,dl
  405a1e:	add    DWORD PTR [ecx-0xfa022e8],edx
  405a24:	push   0x2e
  405a26:	in     al,0x9c
  405a28:	pop    edx
  405a29:	push   edx
  405a2a:	add    DWORD PTR [edi],ebx
  405a2c:	test   DWORD PTR [ebx],edx
  405a2e:	push   esp
  405a2f:	das    
  405a30:	mov    esp,0x5c77caf3
  405a35:	call   0x388b324b
  405a3a:	rcr    DWORD PTR [esi-0x605fb6ab],1
  405a40:	mov    al,ds:0xd0659896
  405a45:	pop    esp
  405a46:	frstor [edx]
  405a48:	mov    ah,0xea
  405a4a:	or     DWORD PTR [eax],edi
  405a4c:	sub    BYTE PTR [eax],dl
  405a4e:	je     0x405a0e
  405a50:	aam    0x20
  405a52:	mov    ch,0xa6
  405a54:	scas   al,BYTE PTR es:[edi]
  405a55:	sbb    DWORD PTR [ebp-0x70efba2b],ebx
  405a5b:	fcom   DWORD PTR [esi]
  405a5d:	sbb    al,0x5c
  405a5f:	xor    DWORD PTR [ebx],ebp
  405a61:	mov    edi,0x7f57ca8c
  405a66:	mov    dl,0xba
  405a68:	sbb    ecx,DWORD PTR [eax]
  405a6a:	jp     0x405a78
  405a6c:	test   DWORD PTR [edi],edi
  405a6e:	dec    edx
  405a6f:	iret   
  405a70:	in     eax,dx
  405a71:	xchg   esi,eax
  405a72:	jl     0x405ace
  405a74:	mov    esp,0x45069c82
  405a79:	sahf   
  405a7a:	push   ecx
  405a7b:	test   al,0xec
  405a7d:	sar    esp,0x2c
  405a80:	adc    al,0x65
  405a82:	mov    BYTE PTR [ecx+0x6f],dl
  405a85:	je     0x405a1d
  405a87:	aad    0xe0
  405a89:	ret    0xaf3
  405a8c:	or     BYTE PTR [esi],0x21
  405a8f:	mov    bh,0x75
  405a91:	mov    ds:0x2318f749,eax
  405a96:	sub    al,0xd7
  405a98:	mov    cs,WORD PTR [eax-0x1f67e14a]
  405a9e:	inc    ebx
  405a9f:	call   0x141a:0xc97d683
  405aa6:	add    eax,0xc26b6a24
  405aab:	mov    bh,0x9e
  405aad:	nop
  405aae:	out    0xd2,eax
  405ab0:	adc    al,0x4c
  405ab2:	cmp    ebx,ecx
  405ab4:	rep lods eax,DWORD PTR ds:[esi]
  405ab6:	rol    ebx,1
  405ab8:	pop    esi
  405ab9:	add    BYTE PTR [esi-0x52],dl
  405abc:	loopne 0x405b06
  405abe:	mov    ds:0xb827c4a,al
  405ac3:	mov    bh,0x8f
  405ac5:	test   DWORD PTR [ebp-0x1476dae6],edx
  405acb:	stc    
  405acc:	adc    eax,0x418804c8
  405ad1:	hlt    
  405ad2:	mov    edx,0x6f72cf6c
  405ad7:	push   ds
  405ad8:	call   0xc6e97bba
  405add:	loopne 0x405af3
  405adf:	lods   eax,DWORD PTR ds:[esi]
  405ae0:	add    al,0x33
  405ae2:	(bad)  
  405ae3:	in     eax,0x9
  405ae5:	fnstsw WORD PTR [edx]
  405ae7:	dec    edi
  405ae8:	and    al,0xc8
  405aea:	div    DWORD PTR [esi-0x36]
  405aed:	je     0x405a7d
  405aef:	pushf  
  405af0:	mov    ebx,0x2484d22
  405af5:	enter  0x287f,0x64
  405af9:	scas   al,BYTE PTR es:[edi]
  405afa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405afb:	xor    ah,BYTE PTR [esi+0x77]
  405afe:	pop    es
  405aff:	imul   eax,edx,0xfffffff8
  405b02:	lods   eax,DWORD PTR ds:[esi]
  405b03:	shl    DWORD PTR [eax+ebx*4-0x2c],1
  405b07:	in     eax,dx
  405b08:	hlt    
  405b09:	test   eax,0x4a53380a
  405b0e:	lods   eax,DWORD PTR ds:[esi]
  405b0f:	xchg   esp,eax
  405b10:	or     al,0xbd
  405b12:	loop   0x405b70
  405b14:	pop    ecx
  405b15:	xchg   edx,eax
  405b16:	pusha  
  405b17:	stos   DWORD PTR es:[edi],eax
  405b18:	xchg   ecx,eax
  405b19:	xor    bh,BYTE PTR [ebp+0x1be45f40]
  405b1f:	mov    eax,ebx
  405b21:	icebp  
  405b22:	cwde   
  405b23:	outs   dx,BYTE PTR ds:[esi]
  405b24:	adc    esp,DWORD PTR [ecx+edx*1-0x1ac82ee7]
  405b2b:	icebp  
  405b2c:	and    ecx,DWORD PTR [edi+0x67]
  405b2f:	in     al,dx
  405b30:	popf   
  405b31:	sbb    cl,BYTE PTR [esp+edx*8+0x15]
  405b35:	sub    eax,0xf48bee2f
  405b3a:	fwait
  405b3b:	push   edi
  405b3c:	dec    ebp
  405b3d:	in     eax,dx
  405b3e:	cmovs  eax,DWORD PTR [esi-0x613b9861]
  405b45:	inc    ecx
  405b46:	sub    DWORD PTR [esi+0x6e],esi
  405b49:	sub    eax,0x101344fd
  405b4e:	adc    eax,0xe895adb8
  405b53:	pop    es
  405b54:	pop    edx
  405b55:	out    0x1f,eax
  405b57:	lods   eax,DWORD PTR ds:[esi]
  405b58:	mov    ebp,0xbb39cc2f
  405b5d:	mov    edi,0xcec7c84d
  405b62:	cmp    BYTE PTR [edx-0x1b],dh
  405b65:	mov    ebx,0x992d1617
  405b6a:	sub    edx,DWORD PTR cs:[esi+0xd]
  405b6e:	loop   0x405b32
  405b70:	test   al,0xb9
  405b72:	loope  0x405afb
  405b74:	lods   al,BYTE PTR ds:[esi]
  405b75:	pop    ebp
  405b76:	sub    eax,0x5aed7682
  405b7b:	test   BYTE PTR [edx-0xebb0c4d],cl
  405b81:	out    0x1f,al
  405b83:	or     ebx,DWORD PTR [edx+ecx*8-0x508aa7b7]
  405b8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b8b:	mov    ecx,0xeb13dd02
  405b90:	stc    
  405b91:	jg     0x405be4
  405b93:	inc    esi
  405b94:	dec    edx
  405b95:	xor    ecx,DWORD PTR [eax+0x5f]
  405b98:	popf   
  405b99:	pop    edi
  405b9a:	mov    al,dh
  405b9c:	or     DWORD PTR [edi-0x1b],0x4c754af5
  405ba3:	adc    eax,DWORD PTR [eax-0x18]
  405ba6:	xor    ch,BYTE PTR [eax]
  405ba8:	lds    edx,FWORD PTR [eax-0x44]
  405bab:	jmp    0x8b91:0xa49564f1
  405bb2:	jmp    0xedc1:0xb9216578
  405bb9:	mov    ds:0x216fc256,eax
  405bbe:	sbb    eax,0x319c1045
  405bc3:	data16 ins BYTE PTR es:[edi],dx
  405bc5:	js     0x405c30
  405bc7:	test   eax,0x5b428b49
  405bcc:	and    BYTE PTR [eax-0x39585427],bl
  405bd2:	inc    ebp
  405bd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bd4:	aad    0xab
  405bd6:	jmp    0x405c4a
  405bd8:	cmp    ebx,DWORD PTR [ebx]
  405bda:	push   0xfffffff5
  405bdc:	or     BYTE PTR [edx],dl
  405bde:	inc    ebx
  405bdf:	addr16 mov ch,0x43
  405be2:	push   edx
  405be3:	call   0xb3bd837
  405be8:	inc    edi
  405be9:	gs jl  0x405bcb
  405bec:	stc    
  405bed:	in     al,dx
  405bee:	out    0x4c,al
  405bf0:	mov    edi,0x5745cbb5
  405bf5:	ins    BYTE PTR es:[edi],dx
  405bf6:	xor    al,0x3
  405bf8:	loope  0x405bce
  405bfa:	adc    al,0x9d
  405bfc:	cmp    eax,0xb40f2366
  405c01:	nop
  405c02:	cs popf 
  405c04:	sub    DWORD PTR [edx],esp
  405c06:	out    0x8d,al
  405c08:	jmp    0xded2:0x60091b35
  405c0f:	jnp    0x405c45
  405c11:	xlat   BYTE PTR ds:[ebx]
  405c12:	xchg   esi,eax
  405c13:	iret   
  405c14:	sbb    bh,BYTE PTR [ecx+ecx*2]
  405c17:	imul   esp,DWORD PTR [ebp+edx*2+0x12],0xffffffba
  405c1c:	push   cs
  405c1d:	mov    bl,0x1
  405c1f:	jmp    0x78867023
  405c24:	inc    edi
  405c25:	lock hlt 
  405c27:	add    ecx,edi
  405c29:	cmp    dl,BYTE PTR [ecx-0x22]
  405c2c:	xor    BYTE PTR [edx+0x43321af0],bl
  405c32:	bound  eax,QWORD PTR [edi-0x137b4bf7]
  405c38:	pop    es
  405c39:	shr    BYTE PTR [esi],cl
  405c3b:	push   0xc88ab733
  405c40:	sbb    esi,DWORD PTR [ebx-0x31]
  405c43:	mov    cl,0x58
  405c45:	(bad)  
  405c46:	push   cs
  405c47:	iret   
  405c48:	shl    DWORD PTR [ecx+0x3e],1
  405c4b:	or     DWORD PTR [edx],esi
  405c4d:	je     0x405c53
  405c4f:	mov    dl,0x9d
  405c51:	mov    ecx,0xe9508fb0
  405c56:	loope  0x405c40
  405c58:	repz xor ebp,ecx
  405c5b:	ss test al,0x18
  405c5e:	inc    ecx
  405c5f:	cmp    edx,DWORD PTR [ecx-0x4d]
  405c62:	int3   
  405c63:	mov    ds:0x8f4a0355,al
  405c68:	mov    ds:0x357165b4,eax
  405c6d:	icebp  
  405c6e:	pop    ecx
  405c6f:	call   DWORD PTR [esp+esi*4]
  405c72:	jl     0x405cab
  405c74:	mov    ebp,0xb7a3b98d
  405c79:	pusha  
  405c7a:	mov    dh,0xa4
  405c7c:	xchg   DWORD PTR [esi+0x36bb862],eax
  405c82:	and    al,0x78
  405c84:	xcrypt-ofb (bad)
  405c85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c86:	outs   dx,BYTE PTR ds:[esi]
  405c87:	cmp    al,0x4b
  405c89:	pop    ebp
  405c8a:	enter  0x3ac1,0x4c
  405c8e:	and    ah,BYTE PTR [ebx+0x685959b0]
  405c94:	push   esp
  405c95:	adc    dh,al
  405c97:	jmp    0x405c98
  405c99:	xchg   esp,eax
  405c9a:	out    dx,al
  405c9b:	(bad)  
  405c9c:	cmc    
  405c9d:	push   ds
  405c9e:	(bad)  
  405c9f:	adc    DWORD PTR [edi+ebx*8],eax
  405ca2:	push   ebx
  405ca3:	nop
  405ca4:	int    0x4e
  405ca6:	cmp    ebp,esi
  405ca8:	xchg   edi,eax
  405ca9:	cmp    ebx,DWORD PTR [edx]
  405cab:	nop
  405cac:	mov    edx,0xea08692e
  405cb1:	icebp  
  405cb2:	and    BYTE PTR [eax+ebp*2-0x5b],bl
  405cb6:	mov    cl,0xf8
  405cb8:	in     eax,dx
  405cb9:	sti    
  405cba:	mov    ebx,0x3f17e015
  405cbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cc0:	mov    dh,0x2e
  405cc2:	inc    ebx
  405cc3:	repz mov al,ds:0x6292d0a2
  405cc9:	jecxz  0x405d43
  405ccb:	arpl   WORD PTR fs:[edi+0x49],di
  405ccf:	fcompp 
  405cd1:	pop    edi
  405cd2:	stos   BYTE PTR es:[edi],al
  405cd3:	jecxz  0x405ccf
  405cd5:	sbb    al,0xee
  405cd7:	call   0xe760:0x4e71dee3
  405cde:	add    al,0x23
  405ce0:	pop    ss
  405ce1:	retf   
  405ce2:	adc    BYTE PTR [eax+0x1c81b30d],0x5a
  405ce9:	sbb    eax,DWORD PTR [ebx+0x4bf7ffb9]
  405cef:	jne    0x405cd2
  405cf1:	sar    BYTE PTR [eax+0x640436f],1
  405cf7:	scas   al,BYTE PTR es:[edi]
  405cf8:	mov    ebp,0x94ed452e
  405cfd:	lods   al,BYTE PTR ds:[esi]
  405cfe:	adc    DWORD PTR [edx],0xffffffd8
  405d01:	(bad)  
  405d02:	mov    BYTE PTR [ebp-0x26ae8e15],bh
  405d08:	push   0x9c15f06b
  405d0d:	test   BYTE PTR [eax],ch
  405d0f:	mov    BYTE PTR [esi+0xc3231aa],al
  405d15:	or     al,BYTE PTR [ebx+0x254b3827]
  405d1b:	xchg   esp,eax
  405d1c:	test   eax,0xbd525493
  405d21:	or     esp,0xc028fef1
  405d27:	mov    ebx,gs
  405d29:	cld    
  405d2a:	pop    esp
  405d2b:	jmp    0xd0f935ab
  405d30:	rcr    DWORD PTR [eax+0x16],0x18
  405d34:	aas    
  405d35:	dec    edx
  405d36:	pop    ss
  405d37:	xchg   esp,eax
  405d38:	inc    ebp
  405d39:	mov    esp,DWORD PTR [esi]
  405d3b:	dec    ecx
  405d3c:	add    eax,0xcd96c70d
  405d41:	xchg   ebp,eax
  405d42:	retf   
  405d43:	xchg   DWORD PTR [ebx-0x18],esi
  405d46:	adc    al,BYTE PTR [eax-0xf]
  405d49:	popf   
  405d4a:	enter  0x8651,0x51
  405d4e:	cmc    
  405d4f:	jge    0x405dca
  405d51:	enter  0xeb09,0x84
  405d55:	outs   dx,WORD PTR ds:[esi]
  405d57:	aas    
  405d58:	(bad)
  405d5b:	test   DWORD PTR [ebx+0x2cd8f3a3],ebx
  405d61:	inc    esi
  405d62:	mov    eax,0xb3595655
  405d67:	pop    edx
  405d68:	scas   eax,DWORD PTR es:[edi]
  405d69:	jnp    0x405ddb
  405d6b:	dec    esi
  405d6c:	cdq    
  405d6d:	dec    ebp
  405d6e:	jecxz  0x405dda
  405d70:	jmp    0xb157:0xe74c33de
  405d77:	xor    eax,0x10cb246d
  405d7c:	fadd   DWORD PTR [ebx]
  405d7e:	test   BYTE PTR [ecx-0x28],ah
  405d81:	(bad)  
  405d82:	jae    0x405da6
  405d84:	rol    DWORD PTR [ecx+eiz*1-0x1f65c1c],0x16
  405d8c:	mov    ch,0xa3
  405d8e:	fwait
  405d8f:	aad    0xfe
  405d91:	fdiv   DWORD PTR [ebx]
  405d93:	xor    ch,BYTE PTR [ebx]
  405d95:	push   esi
  405d96:	mov    al,0xfa
  405d98:	lods   eax,DWORD PTR ds:[esi]
  405d99:	mov    bl,0x62
  405d9b:	mov    edx,0x92415e0b
  405da0:	das    
  405da1:	cmp    edx,DWORD PTR [ecx+0x77]
  405da4:	inc    eax
  405da5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405da6:	sub    DWORD PTR [esi+ecx*2-0x38],edi
  405daa:	dec    ecx
  405dab:	outs   dx,BYTE PTR ds:[esi]
  405dac:	in     al,dx
  405dad:	mov    ds,WORD PTR [eax]
  405daf:	call   0x7a3a:0x1a75bb16
  405db6:	and    al,0xb4
  405db8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405db9:	mov    ecx,0x3db908ce
  405dbe:	ds ss out 0x79,al
  405dc2:	fld    TBYTE PTR [edx+0x760750ab]
  405dc8:	and    DWORD PTR [edx-0x43],ecx
  405dcb:	pop    ss
  405dcc:	leave  
  405dcd:	ss retf 0xc868
  405dd1:	out    dx,al
  405dd2:	jp     0x405e50
  405dd4:	stos   DWORD PTR es:[edi],eax
  405dd5:	xor    ebp,esi
  405dd7:	mov    dh,0xc1
  405dd9:	shr    BYTE PTR [eax],0xe
  405ddc:	dec    ecx
  405ddd:	cdq    
  405dde:	arpl   WORD PTR ss:[esi+0x3f],di
  405de2:	bndstx [ecx-0x4c],bnd0
  405de6:	iret   
  405de7:	iret   
  405de8:	and    ebx,DWORD PTR [ecx]
  405dea:	pop    ebp
  405deb:	retf   0x48bc
  405dee:	jnp    0x405e30
  405df0:	sub    BYTE PTR [eax+eiz*4+0x154fad47],dl
  405df7:	fild   QWORD PTR [ebx-0x6e]
  405dfa:	dec    DWORD PTR [ebx+0x47]
  405dfd:	pop    ds
  405dfe:	rol    BYTE PTR [eax+0x6a8c1898],0xc
  405e05:	pop    esp
  405e06:	(bad)  
  405e07:	int    0x60
  405e09:	push   ebp
  405e0a:	repz sub al,0xf1
  405e0d:	mov    WORD PTR [edi],fs
  405e0f:	stos   DWORD PTR es:[edi],eax
  405e10:	mov    al,0x91
  405e12:	daa    
  405e13:	mov    esp,0xb4af10ea
  405e18:	pop    ebx
  405e19:	inc    ebx
  405e1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e1b:	mov    dh,0x5
  405e1d:	jmp    0x19ff8f28
  405e22:	or     bh,BYTE PTR [esi-0x62]
  405e25:	int3   
  405e26:	fs es mov eax,0xcc6c3a30
  405e2d:	mov    dl,0x3c
  405e2f:	div    edx
  405e31:	fsubp  st(0),st
  405e33:	outs   dx,DWORD PTR ds:[esi]
  405e34:	outs   dx,DWORD PTR ds:[esi]
  405e35:	xchg   ebp,eax
  405e36:	fwait
  405e37:	test   bh,bh
  405e39:	push   ds
  405e3a:	mov    al,ds:0x29f2efa7
  405e3f:	mov    edx,0xe4a324f7
  405e44:	mov    al,ds:0xbf45c970
  405e49:	add    edx,DWORD PTR [edi]
  405e4b:	imul   ebp,DWORD PTR [ebx],0x25
  405e4e:	push   0xbe10a98c
  405e53:	stos   BYTE PTR es:[edi],al
  405e54:	sbb    eax,0xa95e73f5
  405e59:	push   eax
  405e5a:	mov    ah,0x45
  405e5c:	or     eax,0xcfba8255
  405e61:	call   0xf335297c
  405e66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e67:	jle    0x405ebe
  405e69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e6a:	and    DWORD PTR [ebx-0x6a2d7743],esp
  405e70:	jle    0x405e33
  405e72:	mov    esp,DWORD PTR [edi+0x29cdae89]
  405e78:	sbb    eax,0x87d8a095
  405e7d:	or     ebp,esp
  405e7f:	pop    es
  405e80:	and    bl,BYTE PTR [ebx-0x77843bbe]
  405e86:	and    BYTE PTR [eax+0x6c],ch
  405e89:	dec    ebx
  405e8a:	mov    eax,ds:0x30e79a7d
  405e8f:	inc    eax
  405e90:	and    eax,0xdc187598
  405e95:	jne    0x405e35
  405e97:	mov    cl,0xd8
  405e99:	mov    eax,DWORD PTR [eax-0x7a]
  405e9c:	(bad)  
  405e9d:	bound  eax,QWORD PTR [ebp-0x6eb4f028]
  405ea3:	jecxz  0x405e69
  405ea5:	jne    0x405e31
  405ea7:	daa    
  405ea8:	int3   
  405ea9:	lea    esi,[ecx]
  405eab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eac:	xchg   DWORD PTR [esi],ecx
  405eae:	scas   al,BYTE PTR es:[edi]
  405eaf:	push   cs
  405eb0:	ret    
  405eb1:	sub    al,0x14
  405eb3:	push   ecx
  405eb4:	or     ah,0x8
  405eb7:	mov    DWORD PTR [ecx+0x17],ecx
  405eba:	sbb    eax,0x75693ab
  405ebf:	(bad)  
  405ec1:	inc    edx
  405ec2:	test   al,0x5b
  405ec4:	inc    ebx
  405ec5:	pop    es
  405ec6:	pusha  
  405ec7:	pusha  
  405ec8:	gs jbe 0x405ea4
  405ecb:	xchg   edi,eax
  405ecc:	stos   BYTE PTR es:[edi],al
  405ecd:	clc    
  405ece:	jle    0x405f20
  405ed0:	jmp    0x3eaa:0x38d29ef2
  405ed7:	mov    cl,0xca
  405ed9:	dec    ecx
  405eda:	cmp    al,0x24
  405edc:	mov    al,ds:0xb5b57b7c
  405ee1:	aas    
  405ee2:	std    
  405ee3:	cmp    DWORD PTR [edi],0xffffffcb
  405ee6:	ja     0x405eb6
  405ee8:	jnp    0x405eaf
  405eea:	push   eax
  405eeb:	sub    esp,DWORD PTR [ebx+0x18ff0a8d]
  405ef1:	(bad)  
  405ef3:	add    al,0xd2
  405ef5:	or     BYTE PTR [ecx-0x36],0xaa
  405ef9:	lahf   
  405efa:	les    esp,FWORD PTR [esi-0x5f]
  405efd:	add    al,0xe3
  405eff:	aas    
  405f00:	sub    dl,BYTE PTR [ecx]
  405f02:	cmp    BYTE PTR [esi+esi*1],bl
  405f05:	push   ss
  405f06:	xchg   BYTE PTR [esi+0xcf6d28b],bl
  405f0c:	test   al,0x76
  405f0e:	jmp    0xbd3f75bb
  405f13:	mov    ch,0xc9
  405f15:	scas   al,BYTE PTR es:[edi]
  405f16:	cmp    ebx,ebp
  405f18:	sub    al,0xf0
  405f1a:	std    
  405f1b:	fs jle 0x405f69
  405f1e:	lock sbb eax,0x9bb47a80
  405f24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f25:	jns    0x405ef4
  405f27:	in     al,dx
  405f28:	(bad)  
  405f29:	fs ja  0x405f9e
  405f2c:	sbb    edi,DWORD PTR [ebx-0x65]
  405f2f:	xor    BYTE PTR [ebx-0x2fccf7ab],cl
  405f35:	inc    ecx
  405f36:	inc    DWORD PTR [ebp-0x18]
  405f39:	add    edx,esi
  405f3b:	cmp    ecx,edx
  405f3d:	jb     0x403b83
  405f43:	jmp    0x405f8d
  405f48:	mov    ecx,DWORD PTR [ebp-0xc]
  405f4b:	mov    DWORD PTR [ebp+0x8],ecx
  405f4e:	jmp    0x405f80
  405f53:	mov    ecx,DWORD PTR [ebp+0x8]
  405f56:	mov    edx,DWORD PTR [ebp-0x8]
  405f59:	xor    ecx,eax
  405f5b:	xor    edx,eax
  405f5d:	sub    ecx,edx
  405f5f:	sub    ecx,esi
  405f61:	xor    ecx,eax
  405f63:	mov    DWORD PTR [ebp+0x8],ecx
  405f66:	mov    ecx,DWORD PTR [ebp+0x8]
  405f69:	mov    edx,DWORD PTR [ebp+0x8]
  405f6c:	imul   edx,edx,0x5708f5
  405f72:	xor    ecx,eax
  405f74:	add    ecx,esi
  405f76:	lea    ecx,[ebp+ecx*4-0x64]
  405f7a:	mov    edi,DWORD PTR [ecx]
  405f7c:	add    edx,edi
  405f7e:	mov    DWORD PTR [ecx],edx
  405f80:	mov    ecx,DWORD PTR [ebp+0x8]
  405f83:	xor    ecx,eax
  405f85:	add    ecx,esi
  405f87:	jne    0x405f53
  405f8d:	mov    ecx,DWORD PTR [ebp-0xc]
  405f90:	mov    DWORD PTR [ebp+0x8],ecx
  405f93:	jmp    0x405fc5
  405f98:	mov    ecx,DWORD PTR [ebp+0x8]
  405f9b:	mov    edx,DWORD PTR [ebp-0x8]
  405f9e:	xor    ecx,eax
  405fa0:	xor    edx,eax
  405fa2:	sub    ecx,edx
  405fa4:	sub    ecx,esi
  405fa6:	xor    ecx,eax
  405fa8:	mov    DWORD PTR [ebp+0x8],ecx
  405fab:	mov    ecx,DWORD PTR [ebp+0x8]
  405fae:	mov    edx,DWORD PTR [ebp+0x8]
  405fb1:	imul   edx,edx,0x5708f5
  405fb7:	xor    ecx,eax
  405fb9:	add    ecx,esi
  405fbb:	lea    ecx,[ebp+ecx*4-0x64]
  405fbf:	mov    edi,DWORD PTR [ecx]
  405fc1:	add    edx,edi
  405fc3:	mov    DWORD PTR [ecx],edx
  405fc5:	mov    ecx,DWORD PTR [ebp+0x8]
  405fc8:	xor    ecx,eax
  405fca:	add    ecx,esi
  405fcc:	jne    0x405f98
  405fd2:	mov    ecx,DWORD PTR [ebp-0x8]
  405fd5:	mov    edx,DWORD PTR [ebp-0x20]
  405fd8:	xor    ecx,eax
  405fda:	lea    ecx,[ecx+edx*1+0x3272db]
  405fe1:	mov    DWORD PTR [ebp-0x20],ecx
  405fe4:	inc    DWORD PTR [ebp+0xc]
  405fe7:	mov    ecx,DWORD PTR [ebp-0x1c]
  405fea:	xor    ecx,eax
  405fec:	add    ecx,esi
  405fee:	jne    0x401627
  405ff4:	jmp    0x40607d
  405ff9:	mov    ecx,DWORD PTR [ebp-0xc]
  405ffc:	mov    DWORD PTR [ebp+0x8],ecx
  405fff:	jmp    0x406031
  406004:	mov    ecx,DWORD PTR [ebp+0x8]
  406007:	mov    edx,DWORD PTR [ebp-0x8]
  40600a:	xor    ecx,eax
  40600c:	xor    edx,eax
  40600e:	sub    ecx,edx
  406010:	sub    ecx,esi
  406012:	xor    ecx,eax
  406014:	mov    DWORD PTR [ebp+0x8],ecx
  406017:	mov    ecx,DWORD PTR [ebp+0x8]
  40601a:	mov    edx,DWORD PTR [ebp+0x8]
  40601d:	imul   edx,edx,0x5708f5
  406023:	xor    ecx,eax
  406025:	add    ecx,esi
  406027:	lea    ecx,[ebp+ecx*4-0x64]
  40602b:	mov    edi,DWORD PTR [ecx]
  40602d:	add    edx,edi
  40602f:	mov    DWORD PTR [ecx],edx
  406031:	mov    ecx,DWORD PTR [ebp+0x8]
  406034:	xor    ecx,eax
  406036:	add    ecx,esi
  406038:	jne    0x406004
  40603e:	jmp    0x406089
  406043:	mov    ecx,DWORD PTR [ebp+0x8]
  406046:	mov    edx,DWORD PTR [ebp-0x8]
  406049:	xor    ecx,eax
  40604b:	xor    edx,eax
  40604d:	sub    ecx,edx
  40604f:	sub    ecx,esi
  406051:	xor    ecx,eax
  406053:	mov    DWORD PTR [ebp+0x8],ecx
  406056:	mov    ecx,DWORD PTR [ebp+0x8]
  406059:	mov    edx,DWORD PTR [ebp+0x8]
  40605c:	xor    ecx,eax
  40605e:	imul   edx,edx,0x5708f5
  406064:	add    ecx,esi
  406066:	lea    ecx,[ebp+ecx*4-0x64]
  40606a:	mov    edi,DWORD PTR [ecx]
  40606c:	add    edx,edi
  40606e:	mov    DWORD PTR [ecx],edx
  406070:	mov    ecx,DWORD PTR [ebp+0x8]
  406073:	xor    ecx,eax
  406075:	add    ecx,esi
  406077:	jne    0x406043
  40607d:	mov    ecx,DWORD PTR [ebp-0x8]
  406080:	xor    ecx,eax
  406082:	mov    eax,DWORD PTR [ebp+0x10]
  406085:	add    ecx,esi
  406087:	mov    DWORD PTR [eax],ecx
  406089:	pop    edi
  40608a:	jmp    0x40840d
  40608f:	inc    edx
  406090:	push   0x14
  406092:	add    DWORD PTR [ebx+ebp*2+0x53],esp
  406096:	imul   eax,esi,0x5ba0f463
  40609c:	arpl   WORD PTR [eax+0x623cb650],ax
  4060a2:	bound  ebx,QWORD PTR [edi+ebx*2]
  4060a5:	bound  esp,QWORD PTR [edx-0x34]
  4060a8:	cmp    edx,DWORD PTR [eax]
  4060aa:	and    BYTE PTR [ebp+ebp*4+0x70],ch
  4060ae:	adc    eax,0x2c077724
  4060b3:	nop
  4060b4:	cmp    eax,eax
  4060b6:	mov    ebx,0x2a5a73f4
  4060bb:	and    al,0x1d
  4060bd:	jne    0x4060c9
  4060bf:	shl    DWORD PTR [edi],0x50
  4060c2:	sub    ah,ch
  4060c4:	dec    esp
  4060c5:	call   0xd0ad61e8
  4060ca:	inc    ecx
  4060cb:	test   BYTE PTR [esi-0x259448c1],ah
  4060d1:	jmp    0x40605f
  4060d3:	stos   BYTE PTR es:[edi],al
  4060d4:	add    bh,BYTE PTR ds:0xe6aec563
  4060da:	js     0x406127
  4060dc:	frstor [ebp-0x2a9ee570]
  4060e2:	sbb    al,0x25
  4060e4:	mov    DWORD PTR [ebx+0x34],eax
  4060e7:	jmp    0x369c:0x27f406c
  4060ee:	and    dl,BYTE PTR ds:0x8fd39d8c
  4060f4:	fcom   QWORD PTR [edi+0x47b7b341]
  4060fa:	mov    ebx,0x5e2e9017
  4060ff:	mov    eax,ds:0xba20fb6
  406104:	push   esi
  406105:	fld    QWORD PTR [ecx+eax*1-0x24a5812e]
  40610c:	(bad)  
  40610d:	shl    eax,1
  40610f:	add    dl,dl
  406111:	out    dx,al
  406112:	push   edi
  406113:	jg     0x40614e
  406115:	jmp    0x40612e
  406117:	pop    es
  406118:	add    BYTE PTR [eax],al
  40611a:	cmp    eax,0xd65cf97f
  40611f:	dec    DWORD PTR [ebx-0x33ad9c72]
  406125:	(bad)  
  406126:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406127:	mov    dl,0xbb
  406129:	jne    0x406170
  40612b:	jge    0x4060e0
  40612d:	(bad)  
  406131:	and    al,0x9d
  406133:	mov    ds:0x548fc3a7,eax
  406138:	xchg   ecx,eax
  406139:	dec    ebp
  40613a:	jbe    0x40615e
  40613c:	rcr    BYTE PTR [eax+0x17],cl
  40613f:	push   ebx
  406140:	call   0x65a3:0xecf6981d
  406147:	pop    eax
  406148:	sub    al,0x1d
  40614a:	jecxz  0x4060f0
  40614c:	rcl    BYTE PTR [edi],1
  40614e:	jmp    0xc8947d7d
  406153:	into   
  406154:	add    al,0xd4
  406156:	xlat   BYTE PTR ds:[ebx]
  406157:	stc    
  406158:	cmp    BYTE PTR [edx-0x628a5fe2],al
  40615e:	imul   edi,DWORD PTR [ebx],0xffffffbf
  406161:	push   eax
  406162:	mov    edi,0x4d8a988f
  406167:	xchg   edi,eax
  406168:	lahf   
  406169:	faddp  st(3),st
  40616b:	dec    ecx
  40616c:	call   0x292197bd
  406171:	jno    0x40616d
  406173:	imul   edi,DWORD PTR [esi-0x6a6a3577],0x40
  40617a:	and    al,bl
  40617c:	push   0x739e35b1
  406181:	pop    ebx
  406182:	and    al,0x7b
  406184:	ss stos DWORD PTR es:[edi],eax
  406186:	xchg   ebx,eax
  406188:	loope  0x4061e1
  40618a:	in     eax,0x7f
  40618c:	mov    ds:0x24947ae6,eax
  406191:	hlt    
  406192:	mov    es,WORD PTR [edi-0x51]
  406195:	stos   DWORD PTR es:[edi],eax
  406196:	push   cs
  406197:	mov    ch,0xae
  406199:	pusha  
  40619a:	(bad)  
  40619b:	shl    DWORD PTR [esi+edi*2+0x221d034],1
  4061a2:	or     ecx,DWORD PTR [esi+esi*1+0x6b1c5dad]
  4061a9:	pop    es
  4061aa:	adc    edi,DWORD PTR ds:0x97bfbb95
  4061b0:	mov    cl,0x63
  4061b2:	ja     0x4061c7
  4061b4:	bound  ebp,QWORD PTR [ecx-0x79]
  4061b7:	push   0xffffff95
  4061b9:	sbb    ebp,ebx
  4061bb:	fcomip st,st(4)
  4061bd:	xor    eax,0x2cbd13f2
  4061c2:	sbb    BYTE PTR [ecx],ch
  4061c4:	mov    eax,ds:0x580da812
  4061c9:	or     esp,ebp
  4061cb:	fcmovb st,st(6)
  4061cd:	jb     0x406192
  4061cf:	jbe    0x40617f
  4061d1:	sbb    al,0x9d
  4061d3:	push   esp
  4061d4:	cmp    dh,ch
  4061d6:	dec    edi
  4061d7:	std    
  4061d8:	mov    ebx,0xeb5243ec
  4061dd:	pop    esp
  4061de:	pusha  
  4061df:	mov    ah,0x29
  4061e1:	les    esi,FWORD PTR [ecx]
  4061e3:	dec    ecx
  4061e4:	jbe    0x406176
  4061e6:	xor    eax,0xcd1ee945
  4061eb:	cdq    
  4061ec:	dec    ebx
  4061ed:	lock retf 0xece5
  4061f1:	or     al,0x5
  4061f3:	loop   0x4061de
  4061f5:	jg     0x406215
  4061f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061f8:	xchg   esp,esp
  4061fa:	sub    al,0x33
  4061fc:	sahf   
  4061fd:	frstor [esi]
  4061ff:	or     eax,0x16d0f379
  406204:	xchg   edi,eax
  406205:	jecxz  0x4061ff
  406207:	pop    esi
  406208:	cmp    BYTE PTR [edi+0x53],al
  40620b:	aas    
  40620c:	enter  0x8a01,0xc5
  406210:	jmp    0x248edbcd
  406215:	jnp    0x40620a
  406217:	nop
  406218:	fidiv  DWORD PTR [edi+0x23]
  40621b:	lods   eax,DWORD PTR ds:[esi]
  40621c:	lea    esi,[ecx-0x5360c9a9]
  406222:	sbb    ah,BYTE PTR [ecx+0x2d9b3fab]
  406228:	loope  0x4061b6
  40622a:	arpl   WORD PTR [esi-0x7e],di
  40622d:	adc    BYTE PTR [ecx+0x39377418],dl
  406233:	loope  0x4061f4
  406235:	pop    ss
  406236:	xchg   ecx,eax
  406237:	pushf  
  406238:	ret    0x9861
  40623b:	sbb    eax,0xf4c9ca5a
  406240:	pop    esi
  406241:	xor    BYTE PTR [edi+0x2f440a14],dl
  406247:	sbb    DWORD PTR [edx-0x7d],esi
  40624a:	clc    
  40624b:	lods   al,BYTE PTR ds:[esi]
  40624c:	cs rcl ebx,0x2b
  406250:	out    dx,al
  406251:	mov    ecx,0xff7bd98c
  406256:	or     BYTE PTR [eax+0x7bf330aa],ch
  40625c:	and    eax,0x2eaf6e6b
  406261:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  406263:	or     DWORD PTR [ecx-0x112f81a2],esi
  406269:	jge    0x406238
  40626b:	or     eax,0xcd4f401d
  406270:	fld    DWORD PTR [ebx-0x71]
  406273:	mov    bh,0x29
  406275:	xor    BYTE PTR [edi],al
  406277:	add    dh,ah
  406279:	cli    
  40627a:	aad    0x7c
  40627c:	xor    al,0x24
  40627e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40627f:	add    eax,esp
  406281:	cwde   
  406282:	test   al,0xee
  406284:	gs (bad) 
  406286:	out    dx,eax
  406287:	jmp    0x4062d3
  406289:	fdivr  QWORD PTR [edi]
  40628b:	adc    eax,DWORD PTR [ecx]
  40628d:	imul   ecx,DWORD PTR [ecx-0x2352bf0f],0x8c0efb2b
  406297:	pop    ds
  406298:	mov    ds:0x9faef6b9,al
  40629d:	rcl    bh,cl
  40629f:	jecxz  0x40622d
  4062a1:	mov    ds:0xf6322b00,eax
  4062a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062a7:	add    eax,0x8aa09e80
  4062ac:	popf   
  4062ad:	fldcw  WORD PTR [edx]
  4062af:	cld    
  4062b0:	adc    cl,ah
  4062b2:	mov    BYTE PTR [edi+0x147c4cbd],0x9f
  4062b9:	xchg   ebx,eax
  4062ba:	ficom  DWORD PTR [esp+esi*1+0x24a7136a]
  4062c1:	arpl   WORD PTR [edi+0x75],di
  4062c4:	mov    dl,BYTE PTR [ecx]
  4062c6:	mov    cl,0x1d
  4062c8:	push   ecx
  4062c9:	fnstenv [esi+0x6e]
  4062cc:	xlat   BYTE PTR ds:[ebx]
  4062cd:	push   ecx
  4062ce:	xchg   esi,eax
  4062cf:	daa    
  4062d0:	ret    
  4062d1:	or     DWORD PTR [edx+0x57b846ee],edx
  4062d7:	push   0x61da0ed4
  4062dc:	and    esi,esp
  4062de:	gs pusha 
  4062e0:	push   ds
  4062e1:	pop    ss
  4062e2:	inc    ecx
  4062e3:	mov    ebp,0x20727414
  4062e8:	push   cs
  4062e9:	call   0x63e5:0x3cbd922
  4062f0:	jle    0x406305
  4062f2:	and    al,0x49
  4062f4:	sbb    DWORD PTR [ebx],edx
  4062f6:	cmp    al,ch
  4062f8:	lock and al,0xda
  4062fb:	rep lods al,BYTE PTR ds:[esi]
  4062fd:	push   ebx
  4062fe:	add    eax,DWORD PTR [ebp+edi*8-0x6d]
  406302:	stc    
  406303:	lds    ecx,FWORD PTR [ecx]
  406305:	cmp    BYTE PTR [ecx],dl
  406307:	ins    DWORD PTR es:[edi],dx
  406308:	fbstp  TBYTE PTR [ecx-0xd8faf3]
  40630e:	mov    edi,0xc6fd2df5
  406313:	leave  
  406314:	cld    
  406315:	fmul   DWORD PTR [eax]
  406317:	lods   eax,DWORD PTR es:[esi]
  406319:	sub    DWORD PTR [ecx+ecx*2-0x4f],ecx
  40631d:	hlt    
  40631e:	or     DWORD PTR [ebx-0x1a],edx
  406321:	lods   eax,DWORD PTR ds:[esi]
  406322:	fisubr DWORD PTR [ecx]
  406324:	cmovp  ebx,ebp
  406327:	int    0x4e
  406329:	out    dx,al
  40632a:	push   ebp
  40632b:	cmp    cl,BYTE PTR [esi+eax*2+0x4d34e35f]
  406332:	adc    BYTE PTR cs:[ecx+0x66bd142c],ah
  406339:	dec    ebp
  40633a:	xor    cl,bl
  40633c:	push   0x82c49a87
  406341:	mov    edi,0x41dc0beb
  406346:	mov    DWORD PTR [ebp+0x721f1538],ecx
  40634c:	add    edx,edx
  40634e:	call   0xfd911591
  406353:	cmp    cl,BYTE PTR [edi-0x5]
  406356:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406357:	add    al,0x29
  406359:	inc    edi
  40635a:	aaa    
  40635b:	retf   
  40635c:	add    BYTE PTR [esp+eax*2+0x42cc1afd],0x41
  406364:	push   ds
  406365:	add    cl,BYTE PTR [ebx+0x64c1c154]
  40636b:	repnz adc BYTE PTR [ebx],ah
  40636e:	jb     0x406340
  406370:	jb     0x4063db
  406372:	clc    
  406373:	cmp    eax,0x7d832e8f
  406378:	fwait
  406379:	inc    esp
  40637a:	nop
  40637b:	sbb    al,0x1c
  40637d:	inc    ecx
  40637e:	int3   
  40637f:	dec    ebp
  406380:	mov    edi,fs
  406382:	or     BYTE PTR [ebp-0x4a39742c],ch
  406388:	sub    BYTE PTR [esp+ebp*2],bl
  40638b:	mov    DWORD PTR [ebx],0xe5b4cafe
  406391:	repnz dec eax
  406393:	daa    
  406394:	or     edx,DWORD PTR [ecx+0x7]
  406397:	sbb    ecx,DWORD PTR [ebx+0x2d944b3b]
  40639d:	push   ss
  40639e:	loopne 0x406353
  4063a0:	fstp   QWORD PTR [esi]
  4063a2:	dec    ebp
  4063a3:	fistp  QWORD PTR [ebp-0x79]
  4063a6:	test   BYTE PTR [ecx+ebx*4],ah
  4063a9:	pop    ebp
  4063aa:	std    
  4063ab:	dec    esi
  4063ac:	adc    BYTE PTR [edi+0x5178762a],0xf8
  4063b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063b4:	call   0xacac:0xbface55c
  4063bb:	xor    al,0x28
  4063bd:	aaa    
  4063be:	or     dl,0xb1
  4063c1:	dec    edi
  4063c2:	lods   eax,DWORD PTR ds:[esi]
  4063c3:	(bad)  
  4063c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063c5:	push   ecx
  4063c6:	jns    0x4063c1
  4063c8:	push   ebx
  4063c9:	lea    eax,[ebp-0x5cf42621]
  4063cf:	xchg   ebx,eax
  4063d0:	aaa    
  4063d1:	cmp    DWORD PTR [ebx],ebp
  4063d3:	and    bh,ah
  4063d5:	jmp    DWORD PTR [ecx+0x1e08ee5]
  4063db:	mov    ecx,0xe31d415e
  4063e0:	loope  0x4063c3
  4063e2:	lods   al,BYTE PTR ds:[esi]
  4063e3:	pushf  
  4063e4:	rcr    al,0x20
  4063e7:	enter  0x7f72,0x7d
  4063eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063ec:	bound  esp,QWORD PTR [ecx]
  4063ee:	test   BYTE PTR [ebp+0x6df189b9],ah
  4063f4:	jns    0x406406
  4063f6:	jmp    0xb942:0x3e6f4538
  4063fd:	jmp    0x631b13f8
  406402:	nop
  406403:	and    al,0xda
  406405:	sbb    DWORD PTR [ebp+0x6c],edi
  406408:	fs push cs
  40640a:	in     al,dx
  40640b:	sbb    DWORD PTR [eax],edi
  40640d:	or     BYTE PTR [ebx-0x260d572a],bh
  406413:	ret    
  406414:	mov    ds:0x9c9ffedc,al
  406419:	pop    ds
  40641a:	das    
  40641b:	sbb    cl,BYTE PTR [esi-0x3d]
  40641e:	mov    WORD PTR [edi+0x4001dc03],gs
  406424:	mov    dl,0x8b
  406426:	in     al,dx
  406427:	and    DWORD PTR [ebx-0x11],0xfffffff1
  40642b:	dec    ebx
  40642c:	imul   ecx,DWORD PTR [ebp-0x4ada01b2],0xffffffd5
  406433:	outs   dx,BYTE PTR ds:[esi]
  406434:	sar    DWORD PTR [esi+ebx*8],1
  406437:	dec    ebp
  406438:	add    esp,edi
  40643a:	pop    esi
  40643b:	sbb    al,0x4e
  40643d:	dec    edi
  40643e:	add    ah,BYTE PTR [eax]
  406440:	loopne 0x4063de
  406442:	test   al,0x49
  406444:	mov    cl,BYTE PTR [edx-0x64]
  406447:	pushf  
  406448:	arpl   bp,dx
  40644a:	ror    BYTE PTR [eax-0x14],1
  40644d:	adc    BYTE PTR [eax+0x4e],cl
  406450:	pop    ebx
  406451:	pop    edx
  406452:	sub    dl,dl
  406454:	ja     0x4063fd
  406456:	xchg   DWORD PTR [ebx-0xe249eed],eax
  40645c:	mov    al,0x29
  40645e:	mov    eax,DWORD PTR [ecx-0x4b25af99]
  406464:	repz xchg esp,eax
  406466:	jbe    0x406409
  406468:	call   0xb9619ef
  40646d:	xchg   edi,eax
  40646e:	ins    DWORD PTR es:[edi],dx
  40646f:	sahf   
  406470:	repnz imul esp,DWORD PTR [eax+ebp*4+0x4e],0xffffff84
  406476:	fst    QWORD PTR [eax+0x213da6f4]
  40647c:	sbb    al,0xc3
  40647e:	dec    edx
  40647f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406480:	add    ch,dl
  406482:	scas   eax,DWORD PTR es:[edi]
  406483:	xchg   BYTE PTR [ecx+0x51],bh
  406486:	ret    
  406487:	out    dx,al
  406488:	mov    esi,0xbe77aad3
  40648d:	sahf   
  40648e:	inc    esp
  40648f:	jno    0x406421
  406491:	popf   
  406492:	nop
  406493:	xchg   edi,eax
  406494:	je     0x40641d
  406496:	mov    cl,0xd8
  406498:	and    al,0x67
  40649a:	adc    ebx,eax
  40649c:	out    0x17,al
  40649e:	rcl    BYTE PTR [ebp-0x4313613f],1
  4064a4:	aas    
  4064a5:	xor    eax,0x9794b895
  4064aa:	mov    DWORD PTR [ebp-0x425bfa87],eax
  4064b0:	dec    esi
  4064b1:	in     al,0x3e
  4064b3:	mov    BYTE PTR [edx],ch
  4064b5:	repnz mov bl,dh
  4064b8:	pop    esi
  4064b9:	outs   dx,BYTE PTR ds:[esi]
  4064ba:	or     ah,BYTE PTR [ecx-0xdd729b2]
  4064c0:	and    ebx,ecx
  4064c2:	test   eax,0xd6d55ed0
  4064c7:	xchg   esp,eax
  4064c8:	xlat   BYTE PTR ds:[ebx]
  4064c9:	xchg   DWORD PTR [ebp-0x63],ecx
  4064cc:	retf   0xae5f
  4064cf:	sub    BYTE PTR [ecx-0xe661d67],bl
  4064d5:	lahf   
  4064d6:	das    
  4064d7:	inc    esp
  4064d8:	xchg   ecx,eax
  4064d9:	ror    DWORD PTR [eax+0x32],cl
  4064dc:	pushf  
  4064dd:	lds    edx,FWORD PTR [esi-0x5a]
  4064e0:	or     DWORD PTR [ecx],ecx
  4064e2:	dec    esp
  4064e3:	fild   DWORD PTR [eax]
  4064e5:	push   0x29d7f961
  4064ea:	(bad)  
  4064eb:	data16 sti 
  4064ed:	sbb    eax,0x39dc883
  4064f2:	pop    esp
  4064f3:	cmp    BYTE PTR [edx-0x5e2ff456],ah
  4064f9:	mov    ds:0xad8e1d1c,al
  4064fe:	mov    BYTE PTR [ebp+0x2bbaaed7],cl
  406504:	clc    
  406505:	clc    
  406506:	fstp   QWORD PTR [eax+0x3dcd853d]
  40650c:	or     cl,BYTE PTR [eax+0x2bf9f2d5]
  406512:	sub    eax,0xe3fc25d
  406517:	mov    bl,cl
  406519:	lds    eax,FWORD PTR [edi-0x5e]
  40651c:	mov    ah,BYTE PTR [esi+0x6cea4d75]
  406522:	mul    edi
  406524:	mov    bl,BYTE PTR [eax]
  406526:	adc    eax,0xf8e24c4
  40652b:	mov    esp,0xae9cc8ce
  406530:	outs   dx,BYTE PTR ds:[esi]
  406531:	not    BYTE PTR [ecx+ebx*1+0xcd81f3b]
  406538:	xor    eax,0xb5850483
  40653d:	ret    0x61c9
  406540:	mov    WORD PTR [esi-0x77a7b09f],fs
  406546:	and    BYTE PTR [ebx-0x60127e75],ah
  40654c:	repnz sbb esp,esp
  40654f:	xor    DWORD PTR [eax],ebx
  406551:	pop    ebp
  406552:	sahf   
  406553:	mov    eax,0xc9773b73
  406558:	and    al,0x1
  40655a:	popf   
  40655b:	mov    al,bh
  40655d:	repnz fisttp WORD PTR [esi-0x11]
  406561:	inc    ebp
  406562:	cmp    BYTE PTR [esi],0x0
  406565:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406566:	jb     0x40652a
  406568:	cmp    si,WORD PTR [esi+ebx*2-0x8]
  40656d:	push   esi
  40656e:	or     ch,BYTE PTR [eax+0x25]
  406571:	lock cdq 
  406573:	add    ah,BYTE PTR [eax+0x13a326d7]
  406579:	pop    esi
  40657a:	out    dx,al
  40657b:	sub    eax,0x3e001b80
  406580:	not    BYTE PTR ds:0xadabcde5
  406586:	neg    ebp
  406588:	inc    eax
  406589:	pop    ebx
  40658a:	push   ds
  40658b:	dec    edx
  40658c:	xor    ch,BYTE PTR ds:0x58a84d2c
  406592:	xchg   ebx,eax
  406593:	cmp    DWORD PTR ds:0x20dda3c4,ebx
  406599:	dec    ecx
  40659a:	or     al,dh
  40659c:	push   esi
  40659d:	mov    ds:0xc89d932b,eax
  4065a2:	jle    0x406604
  4065a4:	push   cs
  4065a5:	sub    DWORD PTR [edx+0xe],edx
  4065a8:	out    0x5e,eax
  4065aa:	jno    0x4065ac
  4065ac:	mov    esi,0x4368ab8b
  4065b1:	xchg   esp,eax
  4065b2:	cmp    edi,0x5d
  4065b5:	push   edx
  4065b6:	add    eax,0x39c179ab
  4065bb:	rol    BYTE PTR [edi-0x64c77353],1
  4065c1:	inc    esp
  4065c2:	jle    0x40659c
  4065c4:	nop
  4065c5:	jnp    0x406617
  4065c7:	pop    edi
  4065c8:	jo     0x406618
  4065ca:	js     0x4065e1
  4065cc:	mov    bh,0x65
  4065ce:	bnd jp 0x4065a1
  4065d1:	inc    edi
  4065d2:	mov    al,0x98
  4065d4:	outs   dx,DWORD PTR ds:[esi]
  4065d5:	aam    0xe7
  4065d7:	lods   al,BYTE PTR ds:[esi]
  4065d8:	cli    
  4065d9:	stc    
  4065da:	jg     0x40658d
  4065dc:	xchg   ebp,eax
  4065dd:	js     0x4065d8
  4065df:	in     al,0x32
  4065e1:	jmp    0x97168ed
  4065e6:	mov    bl,0x39
  4065e8:	in     eax,0x35
  4065ea:	jge    0x406609
  4065ec:	fsubr  QWORD PTR [esi-0x5dc7601d]
  4065f2:	cdq    
  4065f3:	in     eax,0xf2
  4065f5:	stos   BYTE PTR es:[edi],al
  4065f6:	mov    ecx,0x1c60cae0
  4065fb:	gs adc al,0x1
  4065fe:	mov    ds:0xa768c5be,eax
  406603:	and    al,0x2f
  406605:	cmp    ah,cl
  406607:	fdiv   DWORD PTR [edi]
  406609:	mov    bh,0xd3
  40660b:	aaa    
  40660c:	(bad)  
  40660d:	(bad)  
  40660e:	les    ebp,FWORD PTR [edi]
  406610:	aaa    
  406611:	retf   
  406612:	or     al,0xf4
  406614:	push   ebp
  406615:	add    DWORD PTR [edi],edi
  406617:	dec    edi
  406618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406619:	xor    eax,0x29983ae2
  40661e:	(bad)  
  40661f:	in     al,0xac
  406621:	inc    esi
  406622:	mov    ebp,0xe48e81a1
  406627:	int3   
  406628:	outs   dx,DWORD PTR ds:[esi]
  406629:	push   ecx
  40662a:	(bad)  
  40662b:	sar    cl,1
  40662d:	sub    bl,BYTE PTR [eax+0x9051128]
  406633:	mov    esi,0xde295b9e
  406638:	add    DWORD PTR [edx],0xd84a30ed
  40663e:	test   BYTE PTR [edi],dh
  406640:	popf   
  406641:	mov    ch,0xcc
  406643:	adc    BYTE PTR [esi-0x2d75b244],0x34
  40664a:	pop    ds
  40664b:	dec    ebx
  40664c:	dec    edx
  40664d:	adc    BYTE PTR [edx+ebp*2],bl
  406650:	test   DWORD PTR [ebx-0x4a],eax
  406653:	fcom   st(7)
  406655:	add    eax,edx
  406657:	sbb    BYTE PTR [eax-0x2992ccff],ah
  40665d:	call   0x729e4f43
  406662:	adc    DWORD PTR [edi],0xffffffed
  406665:	sar    BYTE PTR [edi+eax*8],cl
  406668:	repz jge 0x40667e
  40666b:	fs push edi
  40666d:	(bad)  
  40666e:	mov    dh,0xa9
  406670:	sbb    al,0x6e
  406672:	enter  0x35c1,0x13
  406676:	adc    DWORD PTR [edi+0xc],esp
  406679:	pop    edx
  40667a:	cld    
  40667b:	mov    dh,0x84
  40667d:	jmp    0xc1f32421
  406682:	and    DWORD PTR [ebx],edx
  406684:	or     ch,BYTE PTR [esi+0x344f2192]
  40668a:	and    ah,BYTE PTR [esi+ecx*8]
  40668d:	addr16 inc ebp
  40668f:	hlt    
  406690:	xchg   esi,eax
  406691:	xor    al,0xf5
  406693:	add    BYTE PTR [ecx+0x2980c1de],cl
  406699:	inc    ecx
  40669a:	cmp    eax,0x9e0c2a20
  40669f:	repnz pop edi
  4066a1:	cmp    ah,ch
  4066a3:	mov    DWORD PTR [esi+0x673c8ff1],eax
  4066a9:	add    al,0x7
  4066ab:	jo     0x40665a
  4066ad:	loope  0x406635
  4066af:	das    
  4066b0:	xchg   DWORD PTR [ebx],edx
  4066b2:	xor    DWORD PTR [edx-0x2addaa22],edx
  4066b8:	or     eax,0x4695c4df
  4066bd:	cmp    esp,DWORD PTR [edi+0x64c6e9df]
  4066c3:	add    BYTE PTR [ecx+0x39],ah
  4066c6:	xchg   ebp,eax
  4066c7:	mov    bh,0x54
  4066c9:	sub    DWORD PTR [ecx],esi
  4066cb:	scas   eax,DWORD PTR es:[edi]
  4066cc:	bound  ecx,QWORD PTR [ebx]
  4066ce:	cmc    
  4066cf:	xchg   esp,eax
  4066d0:	ins    BYTE PTR es:[edi],dx
  4066d1:	dec    eax
  4066d2:	ss daa 
  4066d4:	inc    esp
  4066d5:	out    0xe8,al
  4066d7:	and    al,0x5b
  4066d9:	pushf  
  4066da:	mov    bl,0x89
  4066dc:	mov    bh,0xec
  4066de:	out    0x3c,al
  4066e0:	ret    
  4066e1:	sub    eax,DWORD PTR [ebx-0x482d30c5]
  4066e7:	and    eax,0x8d679bbb
  4066ec:	in     al,0x49
  4066ee:	outs   dx,BYTE PTR ds:[esi]
  4066ef:	das    
  4066f0:	retf   
  4066f1:	iret   
  4066f2:	add    al,0xe8
  4066f4:	cmp    BYTE PTR [edx],0x62
  4066f7:	(bad)  
  4066f8:	cmc    
  4066f9:	sub    cl,cl
  4066fb:	mov    edi,ebp
  4066fd:	pop    ds
  4066fe:	jns    0x4066b1
  406700:	not    DWORD PTR [ecx]
  406702:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406703:	gs xchg ebp,eax
  406705:	jp     0x406738
  406707:	pushf  
  406708:	imul   DWORD PTR ds:0xb5d48615
  40670e:	sub    DWORD PTR [ecx+0x78],0xa239e45e
  406715:	imul   ebx,DWORD PTR [ecx-0x21],0xffffffb7
  406719:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40671a:	std    
  40671b:	push   ecx
  40671c:	fnstcw WORD PTR ds:0x77d51f64
  406723:	loope  0x406773
  406725:	cld    
  406726:	(bad)  
  406727:	adc    cl,BYTE PTR [ecx+0x2b]
  40672a:	mov    ecx,edx
  40672c:	or     ch,cl
  40672e:	xor    ebp,DWORD PTR [ecx+ecx*2+0x1d]
  406732:	frstor [ebx-0x6e1ba664]
  406738:	push   cx
  40673a:	sbb    bh,0x82
  40673d:	dec    ebx
  40673e:	add    BYTE PTR [ebp+0x50],bl
  406741:	int3   
  406742:	and    bh,0xa6
  406745:	jmp    0x6c57:0x41a09c3e
  40674c:	push   ecx
  40674d:	out    0x19,al
  40674f:	inc    edx
  406750:	xchg   esp,eax
  406751:	stos   DWORD PTR es:[edi],eax
  406752:	jmp    0x25eb:0xd720b872
  406759:	jno    0x406784
  40675b:	xor    al,0x36
  40675d:	iret   
  40675e:	push   esp
  40675f:	aam    0x77
  406761:	ss push esp
  406764:	xchg   esi,eax
  406765:	fnsave [esi]
  406767:	sbb    DWORD PTR [eax+0x70a10b6c],esi
  40676d:	bound  esi,QWORD PTR [ebp+0x16155a05]
  406773:	jmp    0xd1e3:0xecd5eddf
  40677a:	imul   ebx,DWORD PTR [eax],0x67a50238
  406780:	dec    edx
  406781:	cmp    cl,BYTE PTR [edx+ebp*4-0x13f5f4b7]
  406788:	push   0xbbfe529d
  40678d:	out    dx,al
  40678e:	rcl    BYTE PTR [esi+0x21],0x6
  406792:	(bad)  
  406793:	mov    BYTE PTR [eax+0x2b],0xdd
  406797:	stc    
  406798:	add    eax,0x6859a516
  40679d:	sbb    DWORD PTR [ebp-0x2d],edi
  4067a0:	lds    eax,FWORD PTR [esi]
  4067a2:	mov    eax,0x555a4092
  4067a7:	popa   
  4067a8:	mov    edi,0x8376c493
  4067ad:	out    0xd2,eax
  4067af:	test   al,0x4c
  4067b1:	mov    bl,0xf8
  4067b4:	xchg   ecx,eax
  4067b5:	push   esp
  4067b6:	push   ebp
  4067b7:	mov    esi,0x8ec9f507
  4067bc:	fisttp WORD PTR [eax+0xc]
  4067bf:	sbb    eax,0x8ac8c1ad
  4067c4:	mov    edi,0x355c087f
  4067c9:	xchg   bh,ch
  4067cb:	js     0x406814
  4067cd:	(bad)  
  4067ce:	jmp    DWORD PTR [eax+0x18]
  4067d1:	cmp    cl,BYTE PTR [eax]
  4067d3:	xchg   ebx,eax
  4067d4:	or     ecx,esi
  4067d6:	cld    
  4067d7:	cmc    
  4067d8:	adc    DWORD PTR [eax+edi*4-0x6e],eax
  4067dc:	scas   al,BYTE PTR es:[edi]
  4067dd:	popf   
  4067de:	xor    bl,BYTE PTR [eax+0x7cd33046]
  4067e4:	imul   esi,ebx,0xffffffb5
  4067e7:	mov    edx,0x20e337cd
  4067ec:	div    BYTE PTR [ebp-0x18207fcb]
  4067f2:	add    ebp,ecx
  4067f4:	sub    DWORD PTR [ebx],ecx
  4067f6:	sub    BYTE PTR [eax+0x33],ch
  4067f9:	or     cl,ah
  4067fb:	mov    eax,ds
  4067fd:	or     esp,eax
  4067ff:	and    ch,BYTE PTR [edi]
  406801:	pop    edi
  406802:	mov    eax,DWORD PTR [esi+eax*1-0x58]
  406806:	xor    eax,0x78c0e3e8
  40680b:	dec    BYTE PTR [ecx]
  40680d:	mov    BYTE PTR [ecx-0x15],dh
  406810:	je     0x4067be
  406812:	cli    
  406813:	cld    
  406814:	pop    edi
  406815:	test   DWORD PTR ds:0xbbf18e08,edx
  40681b:	test   al,0x14
  40681d:	dec    edi
  40681e:	mov    ebp,0x6e9d6f00
  406823:	shr    BYTE PTR [edi],0x2f
  406826:	dec    edi
  406827:	mov    cl,0x1a
  406829:	jae    0x4067bf
  40682b:	inc    ebp
  40682c:	xor    ebp,DWORD PTR [ebx-0x3a3ea7d2]
  406832:	outs   dx,BYTE PTR ds:[esi]
  406833:	pop    es
  406834:	fs jno 0x406834
  406837:	fcmove st,st(3)
  406839:	mov    ch,BYTE PTR [ecx]
  40683b:	stos   DWORD PTR es:[edi],eax
  40683c:	add    al,0x38
  40683e:	inc    edx
  40683f:	mov    ?,ebx
  406841:	jmp    0x92afd937
  406846:	mov    bh,0x3d
  406848:	icebp  
  406849:	call   0xf0a0:0x1b00b63f
  406850:	add    BYTE PTR [ebx-0x60],bh
  406853:	imul   ebp,DWORD PTR ss:[ecx],0x32
  406857:	xor    eax,0x9347e0c8
  40685c:	and    ecx,ebp
  40685e:	jp     0x4068bf
  406860:	sub    DWORD PTR [edx-0x417dfc2c],ebp
  406866:	push   es
  406867:	pop    eax
  406868:	out    0x97,eax
  40686a:	stos   BYTE PTR es:[edi],al
  40686b:	push   esp
  40686c:	ret    
  40686d:	jge    0x40687f
  40686f:	outs   dx,DWORD PTR ds:[esi]
  406870:	pop    ecx
  406871:	mov    BYTE PTR [edi+0x2e],ch
  406874:	xchg   edx,eax
  406875:	mov    ebx,0x3ad1de23
  40687a:	cmp    ebx,DWORD PTR [eax+0x2a5d1fce]
  406880:	popa   
  406881:	repz aaa 
  406883:	or     DWORD PTR [edx+0x62],ecx
  406886:	or     al,BYTE PTR [ebp+0x7d1521b]
  40688c:	lock cmp dh,BYTE PTR [ebx+0x77ccff8a]
  406893:	ret    0x1823
  406896:	jno    0x406859
  406898:	xor    ecx,edi
  40689a:	xor    cl,BYTE PTR [ebx+0x33ea93ed]
  4068a0:	clc    
  4068a1:	dec    ebx
  4068a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068a3:	jae    0x406884
  4068a5:	pop    esi
  4068a6:	(bad)  
  4068a7:	fs daa 
  4068a9:	jg     0x4068fc
  4068ab:	out    0x3e,eax
  4068ad:	ss mov esi,0x38cbe846
  4068b3:	scas   eax,DWORD PTR es:[edi]
  4068b4:	or     BYTE PTR [esi],0xfb
  4068b7:	call   0x717c:0x4d311c59
  4068be:	std    
  4068bf:	neg    BYTE PTR [esi+0x3640816b]
  4068c5:	jns    0x406897
  4068c7:	cmc    
  4068c8:	out    0x7f,al
  4068ca:	mov    dh,0xc1
  4068cc:	lock jl 0x4068ba
  4068cf:	dec    esp
  4068d0:	xchg   DWORD PTR [eax],ebx
  4068d2:	xor    al,0xdf
  4068d4:	mov    edi,0x935fd3a
  4068d9:	enter  0x5777,0xf
  4068dd:	push   0x50466ee0
  4068e2:	sub    al,0x1c
  4068e4:	mov    eax,0x35e3b4dd
  4068e9:	bound  eax,QWORD PTR [edi]
  4068eb:	mov    dl,0xd5
  4068ed:	out    dx,eax
  4068ee:	data16 sbb al,0x19
  4068f1:	loope  0x406939
  4068f3:	xchg   ecx,eax
  4068f4:	sub    DWORD PTR [ebp+ebx*2-0x61156a46],ebp
  4068fb:	inc    DWORD PTR [edx]
  4068fd:	repnz sub ebp,esp
  406900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406901:	daa    
  406902:	xor    DWORD PTR [edi-0x4fa53a19],0x39b99e31
  40690c:	sbb    eax,0x20b8a371
  406911:	dec    ebp
  406912:	in     eax,0xa9
  406914:	xor    BYTE PTR [edi],0xa5
  406917:	dec    eax
  406918:	in     eax,dx
  406919:	mov    BYTE PTR ds:0xa50f27db,0x4
  406920:	loope  0x4068e2
  406922:	je     0x406972
  406924:	arpl   bx,bx
  406926:	into   
  406927:	jbe    0x40696f
  406929:	(bad)  [ebx]
  40692b:	test   eax,0xcc6ad30
  406930:	jno    0x40699f
  406932:	fs jmp 0xc823:0xd5a3370
  40693a:	add    al,0x0
  40693c:	jmp    0xf03816db
  406941:	sbb    bl,BYTE PTR [esi+edx*4-0x5f]
  406945:	pop    ebp
  406946:	pop    ebp
  406947:	adc    eax,0xe737ed63
  40694c:	sub    al,0x1c
  40694e:	and    BYTE PTR [ebx-0x46f10db4],ah
  406954:	pop    esi
  406955:	dec    edx
  406956:	arpl   bx,sp
  406958:	or     al,0x18
  40695a:	adc    eax,0x48cc22ae
  40695f:	mov    ch,0x9b
  406961:	lods   al,BYTE PTR ds:[esi]
  406962:	adc    DWORD PTR [esi],ecx
  406964:	cmp    BYTE PTR [esi],cl
  406966:	popf   
  406967:	pop    ds
  406968:	inc    ebp
  406969:	pushf  
  40696a:	mov    ds:0x5e943530,eax
  40696f:	xor    bh,BYTE PTR [esp+esi*8+0x28]
  406973:	cdq    
  406974:	mov    dl,0xf6
  406976:	or     al,0x92
  406978:	sar    DWORD PTR [ebp+0x1a],0x45
  40697c:	mov    ebx,0x2fa920a2
  406981:	inc    edx
  406982:	add    al,0xf0
  406984:	arpl   WORD PTR ds:0x72be2f0,di
  40698a:	not    DWORD PTR [ecx]
  40698c:	jge    0x40691b
  40698e:	clc    
  40698f:	arpl   WORD PTR [ebp+0x67],ax
  406992:	icebp  
  406993:	mov    ds:0xb1b16fe7,eax
  406998:	loope  0x40696d
  40699a:	lahf   
  40699b:	hlt    
  40699c:	cmp    eax,0x6f86446d
  4069a1:	sbb    ebp,esi
  4069a3:	push   0x14
  4069a5:	into   
  4069a6:	and    DWORD PTR [edi],ecx
  4069a8:	jo     0x4069f8
  4069aa:	fnsave [ecx+0x3f]
  4069ad:	lahf   
  4069ae:	stc    
  4069af:	mov    esi,0xd0fe4d80
  4069b4:	icebp  
  4069b5:	mov    ds:0xb1560be8,eax
  4069ba:	ror    DWORD PTR [eax+eax*8+0x3f6eab86],cl
  4069c1:	ret    
  4069c2:	adc    BYTE PTR [esi+0x7ac8a21a],dl
  4069c8:	in     al,dx
  4069c9:	sub    eax,0xfe952c4d
  4069ce:	jo     0x406a0f
  4069d0:	and    BYTE PTR [edx+esi*1+0x14],cl
  4069d4:	retf   
  4069d5:	sahf   
  4069d6:	pop    es
  4069d7:	push   cs
  4069d8:	pop    edx
  4069d9:	out    0xe3,al
  4069db:	lods   al,BYTE PTR ds:[esi]
  4069dc:	jb     0x406a1c
  4069de:	fdivr  DWORD PTR [ecx-0x29]
  4069e1:	pushf  
  4069e2:	int3   
  4069e3:	call   0xeec9:0xc5a5f0ca
  4069ea:	retf   0x2b55
  4069ed:	push   eax
  4069ee:	ror    DWORD PTR [esi-0x7c],cl
  4069f1:	mov    edi,gs
  4069f3:	mov    bl,BYTE PTR [ebx]
  4069f5:	rol    BYTE PTR [esi-0x7a],cl
  4069f8:	outs   dx,BYTE PTR ds:[esi]
  4069f9:	imul   ebx,DWORD PTR [esi+0x6c],0x43
  4069fd:	sbb    BYTE PTR [ebp+0x72b05931],0x8c
  406a04:	mov    dl,0x6
  406a06:	test   al,0xaf
  406a08:	sqrtps xmm4,xmm1
  406a0b:	ret    
  406a0c:	mov    esp,0x5b06819d
  406a11:	dec    edx
  406a12:	or     al,BYTE PTR [ebx-0x63451512]
  406a18:	push   cs
  406a19:	mov    eax,ds:0x4030e12e
  406a1e:	cld    
  406a1f:	adc    DWORD PTR [ebp+0x59],edi
  406a22:	imul   BYTE PTR [ebp+0x3c]
  406a25:	mov    esp,0xb1176cf3
  406a2a:	or     dl,BYTE PTR [eax-0x48ecf64f]
  406a30:	push   ecx
  406a31:	addr16 hlt 
  406a33:	adc    eax,0x21e2517c
  406a38:	imul   esi,DWORD PTR [esi+ecx*2-0x39],0x1e2ac0f6
  406a40:	int    0x9b
  406a42:	mov    cl,0x7d
  406a44:	adc    al,0xdc
  406a46:	or     al,0xc6
  406a48:	ds inc esp
  406a4a:	(bad)  
  406a4b:	mov    al,0x6d
  406a4d:	(bad)  
  406a4e:	clc    
  406a4f:	jl     0x406a8a
  406a51:	loope  0x406a36
  406a53:	mov    DWORD PTR [esi-0x37],eax
  406a56:	(bad)  
  406a57:	cmc    
  406a58:	push   cs
  406a59:	mov    dl,BYTE PTR [edx-0x625c9cca]
  406a5f:	or     al,0x8a
  406a61:	add    eax,0x7d5ed8c6
  406a66:	jns    0x4069fc
  406a68:	sar    BYTE PTR [ebp+0x46f99995],cl
  406a6e:	xor    eax,0xb590e820
  406a73:	sub    eax,DWORD PTR [edi*2-0x79da99b]
  406a7a:	cwde   
  406a7b:	ins    DWORD PTR es:[edi],dx
  406a7c:	cmc    
  406a7d:	in     al,0x95
  406a7f:	dec    esi
  406a80:	adc    esp,DWORD PTR [edi-0x729607d0]
  406a86:	jecxz  0x406a83
  406a88:	popf   
  406a89:	push   edi
  406a8a:	mov    edx,0x64a93fb1
  406a8f:	jmp    0x406aa5
  406a91:	lea    ebp,[edi-0x522fd439]
  406a97:	jmp    0x406a7e
  406a99:	pop    edi
  406a9a:	and    BYTE PTR [edi+0x6b],al
  406a9d:	hlt    
  406a9e:	sbb    cl,BYTE PTR ds:0xefd75e76
  406aa4:	push   ss
  406aa5:	test   BYTE PTR [ebp+0x377f75ea],bh
  406aab:	xchg   ebx,eax
  406aac:	aaa    
  406aad:	in     eax,0x42
  406aaf:	das    
  406ab0:	mov    ds:0x89b5d4a6,al
  406ab5:	jo     0x406a71
  406ab7:	and    bl,BYTE PTR [ebx]
  406ab9:	out    0x26,al
  406abb:	inc    edx
  406abc:	daa    
  406abd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406abe:	push   DWORD PTR [ecx]
  406ac0:	into   
  406ac1:	adc    DWORD PTR [edx+0x19],edx
  406ac4:	add    DWORD PTR [edx-0x77],esp
  406ac7:	clc    
  406ac8:	inc    edx
  406ac9:	dec    ecx
  406aca:	pop    edi
  406acb:	mov    edx,0xdde4c920
  406ad1:	sub    DWORD PTR [eax+0x68],0x2d
  406ad5:	jmp    0x406acc
  406ad7:	repz inc ecx
  406ad9:	mov    DWORD PTR [ebx-0x242f5448],edx
  406adf:	sub    dh,cl
  406ae1:	jmp    0xeec7:0x25afa73d
  406ae8:	pop    edi
  406ae9:	jo     0x406a9e
  406aeb:	mov    dl,0x59
  406aed:	cwde   
  406aee:	rcr    DWORD PTR [edx],1
  406af0:	inc    edx
  406af1:	mov    esi,0x472286ca
  406af6:	mul    DWORD PTR [edx-0x4027f529]
  406afc:	sub    ebx,edi
  406afe:	mov    ebx,0x87553e9e
  406b03:	les    ebp,FWORD PTR [eax-0x36]
  406b06:	mov    bh,BYTE PTR [ebx]
  406b08:	nop
  406b09:	mov    ecx,0x662ace8a
  406b0e:	push   edi
  406b0f:	add    BYTE PTR [edx],cl
  406b11:	jns    0x406ab9
  406b13:	lea    esp,[ecx-0x51aaa6a3]
  406b19:	test   al,0x49
  406b1b:	pushf  
  406b1c:	pop    ss
  406b1d:	in     al,0xbf
  406b1f:	adc    bl,bh
  406b21:	test   eax,0x60f6c502
  406b26:	xchg   DWORD PTR [ebx+0x24],ebp
  406b29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b2a:	repz test BYTE PTR [esi+0x27],bh
  406b2e:	mov    DWORD PTR [esi-0x222ab593],edx
  406b34:	mov    ah,0x1f
  406b36:	ret    
  406b37:	and    eax,0x6e9b9cc5
  406b3c:	push   ebx
  406b3e:	and    BYTE PTR [eax+0x54],bl
  406b41:	jmp    0x74ef82a9
  406b46:	in     eax,0x36
  406b48:	cmp    edi,DWORD PTR [edi-0x1bdf43e0]
  406b4e:	adc    al,BYTE PTR [ecx]
  406b50:	inc    eax
  406b51:	loop   0x406bb5
  406b53:	cs push edx
  406b55:	pop    ds
  406b56:	pop    ebx
  406b57:	xor    esi,esi
  406b59:	mov    dh,0x61
  406b5b:	push   esi
  406b5c:	fs push ebp
  406b5e:	mov    al,0x44
  406b60:	pop    ebp
  406b61:	in     eax,0x2
  406b63:	xor    BYTE PTR [ebx+0x2675e04],al
  406b69:	jo     0x406b82
  406b6b:	push   ebx
  406b6c:	sbb    al,0x6f
  406b6e:	fidivr DWORD PTR [edi-0x27]
  406b71:	add    DWORD PTR [edx],ebp
  406b73:	lock pop ss
  406b75:	fwait
  406b76:	push   ds
  406b77:	in     eax,0x71
  406b79:	(bad)  [ebx+0x4fb711a5]
  406b7f:	sub    ebp,DWORD PTR [edi+0x6]
  406b82:	stos   BYTE PTR es:[edi],al
  406b83:	out    dx,al
  406b84:	sub    DWORD PTR [esi-0x419ce8b7],ebx
  406b8a:	dec    DWORD PTR ds:0x28cad351
  406b90:	sbb    BYTE PTR [ebp-0x6ec25295],al
  406b96:	lahf   
  406b97:	sar    ecx,0x76
  406b9a:	sub    DWORD PTR [ebp+0x43a09444],ebx
  406ba0:	sar    DWORD PTR [eax],1
  406ba2:	scas   eax,DWORD PTR es:[edi]
  406ba3:	addr16 push ebp
  406ba5:	xchg   esp,eax
  406ba6:	cmp    ah,ah
  406ba8:	xor    BYTE PTR [edx],ch
  406baa:	leave  
  406bab:	pop    edi
  406bac:	in     al,dx
  406bad:	xchg   edi,eax
  406bae:	or     eax,0x382cf238
  406bb3:	jg     0x406b92
  406bb5:	pop    ds
  406bb6:	(bad)
  406bb9:	pop    ebp
  406bba:	mov    ds,WORD PTR [ecx]
  406bbc:	xchg   ebp,eax
  406bbd:	aaa    
  406bbe:	mov    ch,0xf1
  406bc0:	ins    BYTE PTR es:[edi],dx
  406bc1:	in     eax,dx
  406bc2:	push   es
  406bc3:	inc    ecx
  406bc4:	ss jo  0x406baa
  406bc7:	jnp    0x406bc1
  406bc9:	ss out 0x9b,al
  406bcc:	mov    eax,ds:0x19c8c932
  406bd1:	sub    DWORD PTR [edx+edx*4-0xd4c5b10],esi
  406bd8:	in     eax,dx
  406bd9:	nop
  406bda:	add    dh,BYTE PTR [ecx]
  406bdc:	stc    
  406bdd:	das    
  406bde:	sub    dh,al
  406be0:	and    eax,DWORD PTR [edx+0x1640ce5e]
  406be6:	adc    ebx,DWORD PTR [ecx+esi*8-0x231953ef]
  406bed:	cmovl  esp,DWORD PTR [ebx+0x3d]
  406bf1:	leave  
  406bf2:	out    0xd1,eax
  406bf4:	fld    QWORD PTR [ebp-0x77db4aaa]
  406bfa:	test   DWORD PTR [esi-0x25b242cd],edx
  406c00:	mov    dh,0x91
  406c02:	jno    0x406c24
  406c04:	outs   dx,BYTE PTR ds:[esi]
  406c05:	lods   eax,DWORD PTR ds:[esi]
  406c06:	mov    eax,0x813e2994
  406c0b:	push   edi
  406c0c:	enter  0xaac4,0xd2
  406c10:	sbb    eax,0x494271dc
  406c15:	gs pop ss
  406c17:	mov    DWORD PTR [edx],ecx
  406c19:	adc    eax,0x8ee52988
  406c1e:	xchg   edi,eax
  406c1f:	push   edi
  406c20:	into   
  406c21:	fst    DWORD PTR [ecx-0x159ee44f]
  406c27:	ror    BYTE PTR [ebp-0x4bbf41fd],0xef
  406c2e:	sbb    BYTE PTR [ebp+0x5cb7c0ab],cl
  406c34:	pusha  
  406c35:	xchg   ecx,eax
  406c36:	ror    DWORD PTR [edx],cl
  406c38:	dec    ecx
  406c39:	jecxz  0x406c3b
  406c3b:	mov    edx,0x294fc768
  406c40:	cmp    DWORD PTR [ecx-0xf],edi
  406c43:	scas   eax,DWORD PTR es:[edi]
  406c44:	and    ch,cl
  406c46:	test   DWORD PTR [esi],edx
  406c48:	sbb    ecx,DWORD PTR [edx+0x5a]
  406c4b:	or     BYTE PTR [ebx],dh
  406c4d:	mov    cl,0xc2
  406c4f:	cmp    ebx,DWORD PTR [esi]
  406c51:	std    
  406c52:	cmp    edx,DWORD PTR [ebx-0x728f39ae]
  406c58:	mov    ch,0xcb
  406c5a:	rcl    BYTE PTR [eax-0x1189dd3],1
  406c60:	sbb    edx,ecx
  406c62:	outs   dx,DWORD PTR ds:[esi]
  406c63:	jbe    0x406bf9
  406c65:	pop    esi
  406c66:	or     DWORD PTR [edx],edi
  406c68:	ins    BYTE PTR es:[edi],dx
  406c69:	scas   eax,DWORD PTR es:[edi]
  406c6a:	into   
  406c6b:	pop    esi
  406c6c:	bound  eax,QWORD PTR [edx+0x3eeab4a3]
  406c72:	int3   
  406c73:	sub    al,0x4a
  406c75:	add    eax,0xc284e19b
  406c7a:	je     0x406cf0
  406c7c:	jmp    0x2e6:0xad2e6301
  406c83:	fdivr  QWORD PTR [edi-0x59ab62cc]
  406c89:	jge    0x406c39
  406c8b:	xor    ebx,edx
  406c8d:	adc    BYTE PTR [edx+0x1e6daa78],ah
  406c93:	ret    
  406c94:	mov    eax,ds:0xad8d0275
  406c99:	mov    ecx,edx
  406c9b:	inc    edi
  406c9c:	adc    bl,dh
  406c9e:	xchg   ebp,eax
  406c9f:	scas   al,BYTE PTR es:[edi]
  406ca0:	pop    esp
  406ca1:	jle    0x406c24
  406ca3:	sub    al,0x6b
  406ca5:	test   DWORD PTR [edx+0x56],0xabc791ef
  406cac:	and    al,0x7
  406cae:	stos   DWORD PTR es:[edi],eax
  406caf:	outs   dx,BYTE PTR ds:[esi]
  406cb0:	stos   BYTE PTR es:[edi],al
  406cb1:	fwait
  406cb2:	aad    0x3f
  406cb4:	mov    bl,0x3e
  406cb6:	xor    al,0x1f
  406cb8:	popa   
  406cb9:	fisub  WORD PTR [eax+0x47602fa1]
  406cbf:	or     edx,ebx
  406cc1:	inc    esp
  406cc2:	jno    0x406cf6
  406cc4:	in     al,dx
  406cc5:	(bad)  
  406cc6:	cmovo  ebp,DWORD PTR [ebx+0x69a57dc3]
  406ccd:	or     DWORD PTR [ebx],edx
  406ccf:	ss push edx
  406cd1:	hlt    
  406cd2:	jmp    0xc346:0xcf81a2be
  406cd9:	sbb    BYTE PTR [eax+0x53d7877a],al
  406cdf:	push   ds
  406ce0:	(bad)  [eax+0x1c]
  406ce3:	jb     0x406d5f
  406ce5:	gs pop ss
  406ce7:	sub    DWORD PTR [ebx+edx*8+0x79],esp
  406ceb:	fistp  DWORD PTR [ecx+0x6a]
  406cee:	push   eax
  406cef:	mov    bh,0x28
  406cf1:	xchg   ebp,eax
  406cf2:	aam    0x3a
  406cf4:	es push eax
  406cf6:	fmul   QWORD PTR [ecx-0xf0c5eb6]
  406cfc:	js     0x406d02
  406cfe:	jns    0x406cf5
  406d00:	inc    ebx
  406d01:	inc    ebx
  406d02:	enter  0xc20b,0xd2
  406d06:	pushf  
  406d07:	les    eax,FWORD PTR [edi-0x7c]
  406d0a:	push   0x58b9fa8c
  406d0f:	or     esp,DWORD PTR gs:[edi+0x69]
  406d13:	xor    BYTE PTR [edi],al
  406d15:	add    ecx,DWORD PTR [eax+0x6d]
  406d18:	mov    ch,0x5b
  406d1a:	jge    0x406d90
  406d1c:	push   edi
  406d1d:	push   cs
  406d1e:	jmp    0x406d0c
  406d20:	inc    edi
  406d21:	sbb    eax,DWORD PTR [ecx+ebx*8]
  406d24:	xor    al,0x93
  406d26:	pop    ss
  406d27:	pop    ds
  406d28:	scas   eax,DWORD PTR es:[edi]
  406d29:	lock loop 0x406cb1
  406d2c:	pop    es
  406d2d:	out    0xc3,al
  406d2f:	loope  0x406cb1
  406d31:	push   ecx
  406d32:	pop    esp
  406d33:	push   ebx
  406d34:	mov    cl,0x68
  406d36:	mov    esi,0xb6366892
  406d3b:	jecxz  0x406cbe
  406d3d:	xchg   esp,eax
  406d3e:	icebp  
  406d3f:	call   0x2d92:0x4d7fcaed
  406d46:	or     DWORD PTR [ecx],ebx
  406d48:	add    esp,DWORD PTR ds:0x778f58f5
  406d4e:	and    eax,0x8d8670a6
  406d53:	cmp    ebp,esp
  406d55:	mov    cr1,esi
  406d58:	add    esi,DWORD PTR [ecx+edi*1-0x5f]
  406d5c:	bound  esp,QWORD PTR [eax-0x53]
  406d5f:	xor    al,0xca
  406d61:	adc    al,0x3d
  406d63:	add    esp,eax
  406d65:	icebp  
  406d66:	(bad)  
  406d68:	js     0x406daf
  406d6a:	or     ebp,DWORD PTR [ebx+esi*1+0x50afce26]
  406d71:	sub    DWORD PTR [esi+0x639b77a9],ebx
  406d77:	repz shl esi,cl
  406d7a:	stos   BYTE PTR es:[edi],al
  406d7b:	outs   dx,BYTE PTR ds:[esi]
  406d7c:	add    edx,DWORD PTR [ebx+0x4]
  406d7f:	pop    ecx
  406d80:	mov    esp,0x345a2ed9
  406d85:	push   esp
  406d86:	repnz call 0x9d18:0x4f104d69
  406d8e:	mov    ?,WORD PTR [edi]
  406d90:	stos   DWORD PTR es:[edi],eax
  406d91:	vpavgw ymm5,ymm7,YMMWORD PTR [edx]
  406d95:	sub    ebx,DWORD PTR [eax+0x59]
  406d98:	xchg   edx,eax
  406d99:	jbe    0x406d82
  406d9b:	cwde   
  406d9c:	test   eax,0x47d0b315
  406da1:	(bad)  
  406da2:	(bad)  
  406da3:	jns    0x406dfa
  406da5:	lea    edx,gs:[esi]
  406da8:	push   esp
  406da9:	jnp    0x406da6
  406dab:	jecxz  0x406d7c
  406dad:	xchg   ebx,eax
  406dae:	imul   edx,DWORD PTR [ecx+0x376d5f],0xffffffc9
  406db5:	push   eax
  406db6:	sbb    BYTE PTR [edx],0x72
  406db9:	push   ss
  406dba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406dbb:	jo     0x406d76
  406dbd:	adc    eax,0x9754dd6c
  406dc2:	into   
  406dc3:	fld    QWORD PTR [ebp+edi*2-0x7e355e1e]
  406dca:	(bad)  
  406dcb:	jae    0x406d5e
  406dcd:	inc    eax
  406dce:	adc    bl,BYTE PTR [ecx+0x2957ec9e]
  406dd4:	into   
  406dd5:	pusha  
  406dd6:	mov    BYTE PTR [eax+0x34],ah
  406dd9:	(bad)  
  406dda:	sbb    ebx,DWORD PTR [ebp+0x34a04137]
  406de0:	mov    al,ds:0xacdb4d34
  406de5:	stc    
  406de6:	xor    al,0x83
  406de8:	sbb    BYTE PTR [ecx-0x3e57571f],0x71
  406def:	sar    DWORD PTR [eax*8-0x66e4c427],1
  406df6:	in     al,0x2c
  406df8:	push   ss
  406df9:	add    ah,BYTE PTR [ebx-0x6fc60fda]
  406dff:	inc    ebx
  406e00:	repnz aaa 
  406e02:	mov    bl,0x3b
  406e04:	push   eax
  406e05:	mov    ch,0x6a
  406e07:	test   al,0xd4
  406e09:	loope  0x406e7b
  406e0b:	loop   0x406e63
  406e0d:	xchg   esi,eax
  406e0e:	sbb    al,0xfb
  406e10:	xor    eax,0x98719111
  406e15:	mov    ch,0x55
  406e17:	push   ss
  406e18:	gs stc 
  406e1a:	xor    edi,DWORD PTR [ebx+0x3d754cc4]
  406e20:	fcomi  st,st(6)
  406e22:	jg     0x406e72
  406e24:	pop    eax
  406e25:	jecxz  0x406e86
  406e27:	sbb    al,0xec
  406e29:	cmp    al,0x3e
  406e2b:	es adc eax,0xf7aa62ef
  406e31:	pop    es
  406e32:	fs fwait
  406e34:	jo     0x406e2e
  406e36:	add    al,0xdd
  406e38:	mov    ah,0x8
  406e3a:	scas   al,BYTE PTR es:[edi]
  406e3b:	fdiv   QWORD PTR [ebx+0x15b2162e]
  406e41:	xchg   ecx,eax
  406e42:	mov    ds:0xdbfb2d41,eax
  406e47:	repnz sub esi,0xad42adc5
  406e4e:	mov    eax,0x52092e5a
  406e53:	mov    al,ds:0x39b08726
  406e58:	and    BYTE PTR [ebx],bl
  406e5a:	test   BYTE PTR [edi+ebx*4-0x54],bl
  406e5e:	retf   
  406e5f:	pop    esi
  406e60:	jns    0x406ea8
  406e62:	inc    eax
  406e63:	cmp    edi,DWORD PTR [ebx]
  406e65:	imul   DWORD PTR [ecx+0x27]
  406e68:	sub    al,0xd6
  406e6a:	push   ds
  406e6b:	call   0xfd7e5d1
  406e70:	push   esi
  406e71:	pop    ds
  406e72:	mov    esi,0xdb19564d
  406e77:	xor    BYTE PTR ds:0xb1c58208,cl
  406e7d:	mov    edi,0xcefaa79f
  406e82:	(bad)  
  406e83:	js     0x406e40
  406e85:	fild   QWORD PTR [edi]
  406e87:	cs adc al,0x45
  406e8a:	repnz xlat BYTE PTR ds:[ebx]
  406e8c:	add    edi,ebx
  406e8e:	arpl   WORD PTR [esi-0x6d],ax
  406e91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e92:	cli    
  406e93:	pop    ebp
  406e94:	or     al,BYTE PTR [esi]
  406e96:	sub    edi,DWORD PTR [esi+edx*1+0x3a4f2fde]
  406e9d:	dec    DWORD PTR [esp+edi*8+0xa]
  406ea1:	mov    ds:0x6a93cd6b,al
  406ea6:	pop    eax
  406ea7:	jne    0x406edd
  406ea9:	pop    ss
  406eaa:	mov    BYTE PTR [ebp-0x2b3046ad],dl
  406eb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406eb1:	lock je 0x406f27
  406eb4:	lock pop ebp
  406eb6:	int3   
  406eb7:	std    
  406eb8:	aaa    
  406eb9:	dec    edi
  406eba:	in     al,0x3b
  406ebc:	and    eax,0xf214842b
  406ec1:	stos   BYTE PTR es:[edi],al
  406ec2:	jecxz  0x406e7f
  406ec4:	ret    
  406ec5:	add    DWORD PTR [ebp+esi*8-0x63],ebp
  406ec9:	jns    0x406e62
  406ecb:	jecxz  0x406eb6
  406ecd:	xor    DWORD PTR [esi-0x5cb47d85],esp
  406ed3:	push   edx
  406ed4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ed5:	xor    eax,0xa9a04c7d
  406eda:	ss ja  0x406eda
  406edd:	pusha  
  406ede:	mov    eax,0x6aa22454
  406ee3:	cmp    al,0x67
  406ee5:	les    ebx,FWORD PTR [eax+0x4b]
  406ee8:	not    BYTE PTR [edi+0x43d12f8a]
  406eee:	or     BYTE PTR [eax-0x663999d],dh
  406ef4:	imul   esi,esi,0xffffffa3
  406ef7:	mov    edi,0xb738ab65
  406efc:	mov    BYTE PTR [esp+edx*4],ch
  406eff:	loope  0x406f01
  406f01:	pop    edi
  406f02:	test   BYTE PTR [ebx-0x5f78039a],bl
  406f08:	add    eax,0x56cc862b
  406f0d:	sbb    DWORD PTR [ebx],0xfffffffc
  406f10:	mov    eax,0xaa553489
  406f15:	mov    ebx,0xf6a52265
  406f1a:	xchg   edx,eax
  406f1b:	mov    DWORD PTR [ecx],edx
  406f1d:	sub    DWORD PTR [bp+si+0x4d],edx
  406f21:	fcomp  QWORD PTR [eax]
  406f23:	inc    eax
  406f24:	(bad)  
  406f25:	xor    esi,ebp
  406f27:	js     0x406f76
  406f29:	or     DWORD PTR [ebp+0xddbd77f],ecx
  406f2f:	or     ebx,DWORD PTR [esi-0xd003a5b]
  406f35:	push   ecx
  406f36:	pop    esp
  406f37:	jl     0x406f1c
  406f39:	dec    ecx
  406f3a:	mov    DWORD PTR [ecx-0xb7f4035],ebx
  406f40:	leave  
  406f41:	mov    bl,0xbe
  406f43:	hlt    
  406f44:	ins    BYTE PTR es:[edi],dx
  406f45:	mov    ds:0x87436bb3,al
  406f4a:	mov    eax,ecx
  406f4c:	or     ch,BYTE PTR [ebx-0x64249379]
  406f52:	addr16 push 0xffffffaf
  406f55:	call   0x2f6eed28
  406f5a:	pop    eax
  406f5b:	xchg   edi,eax
  406f5c:	in     al,0xc6
  406f5e:	and    eax,0xaa89e340
  406f63:	cli    
  406f64:	enter  0x9151,0x55
  406f68:	push   0xffffff8c
  406f6a:	mov    ebp,0xb1d4bf0c
  406f6f:	pop    esi
  406f70:	imul   ebx,esi,0x74b598a5
  406f76:	xor    DWORD PTR [edi],ebx
  406f78:	mov    dh,0x91
  406f7a:	dec    ebx
  406f7b:	cmp    DWORD PTR [ecx-0x13],esi
  406f7e:	imul   ebp,DWORD PTR [esi-0x3c8c948f],0xd400a8bc
  406f88:	dec    esp
  406f89:	jg     0x406f3e
  406f8b:	jb     0x406f11
  406f8d:	out    dx,al
  406f8e:	adc    BYTE PTR [ecx],bh
  406f90:	or     ah,BYTE PTR [edx]
  406f92:	lds    esp,FWORD PTR [eax]
  406f94:	mov    esi,esp
  406f96:	not    DWORD PTR fs:[ecx+0x2e]
  406f9a:	mov    ds:0x8c857e02,al
  406f9f:	ins    BYTE PTR es:[edi],dx
  406fa0:	inc    ebx
  406fa1:	(bad)  
  406fa2:	cmp    BYTE PTR [edi-0x45],al
  406fa5:	jbe    0x406fbc
  406fa7:	pop    ebp
  406fa8:	retf   
  406fa9:	stos   DWORD PTR es:[edi],eax
  406faa:	jl     0x406f51
  406fac:	scas   eax,DWORD PTR es:[edi]
  406fad:	retf   0x5fb6
  406fb0:	dec    esi
  406fb1:	xor    dl,BYTE PTR [eax]
  406fb3:	div    ebx
  406fb5:	mul    DWORD PTR [edx+0x1cfcf4a4]
  406fbb:	out    0x89,eax
  406fbd:	or     al,bh
  406fbf:	stos   DWORD PTR es:[edi],eax
  406fc0:	aaa    
  406fc1:	into   
  406fc2:	ds dec eax
  406fc4:	xchg   BYTE PTR es:[edx-0x40],ch
  406fc8:	into   
  406fc9:	jno    0x407010
  406fcb:	pushf  
  406fcc:	into   
  406fcd:	test   DWORD PTR [esi+0x2],eax
  406fd0:	std    
  406fd1:	mov    ebx,0x7e54dd1c
  406fd6:	dec    esi
  406fd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fd8:	repz jmp 0xa814:0xdef05610
  406fe0:	sub    edi,DWORD PTR [edx+0x36683e41]
  406fe6:	scas   eax,DWORD PTR es:[edi]
  406fe7:	jno    0x406f96
  406fe9:	cdq    
  406fea:	ss (bad) 
  406fec:	(bad)  
  406fed:	imul   esp,DWORD PTR ds:0xcea8184e,0x3f
  406ff4:	rcl    DWORD PTR gs:[ecx+eax*2],0xba
  406ff9:	pop    ss
  406ffa:	xor    ecx,DWORD PTR [ebx+0x3888bda6]
  407000:	sbb    esi,edx
  407002:	cmp    DWORD PTR [esi+0x163c4bf3],ebx
  407008:	leave  
  407009:	add    al,BYTE PTR [edx]
  40700b:	and    esi,edx
  40700d:	mov    ds:0xd4b767fe,al
  407012:	push   es
  407013:	push   cs
  407014:	(bad)  
  407016:	push   edx
  407017:	mov    ds:0x372a32ed,eax
  40701c:	sbb    eax,0xcbec37ee
  407021:	mov    ds:0xe5c21f7b,al
  407026:	movntq QWORD PTR [ebx-0x56],mm1
  40702a:	mov    bh,0xe3
  40702c:	cmp    BYTE PTR [ebx+0x3327774b],bh
  407032:	jo     0x407026
  407034:	push   edx
  407035:	enter  0xb2dc,0x44
  407039:	bound  edx,QWORD PTR [esi]
  40703b:	inc    DWORD PTR [eax]
  40703d:	adc    BYTE PTR [eax],bh
  40703f:	test   eax,0x4c1bdb5
  407044:	push   es
  407045:	dec    esp
  407046:	push   es
  407047:	push   eax
  407048:	ffree  st(4)
  40704a:	inc    esp
  40704b:	inc    ecx
  40704c:	imul   eax,DWORD PTR [edi-0x247843ee],0xa2859d63
  407056:	cs fucomi st,st(3)
  407059:	push   edi
  40705a:	loopne 0x407007
  40705c:	mov    cl,0x5a
  40705e:	pop    ss
  40705f:	add    al,0x1d
  407061:	dec    ebx
  407062:	mov    esi,0xd4a97c4d
  407067:	and    al,0x8
  407069:	jnp    0x4070a7
  40706b:	mov    eax,ds:0x3d5f80f7
  407070:	mov    cl,0xba
  407072:	mov    bh,BYTE PTR [edx-0x7d5d2dea]
  407078:	mov    edx,0x166215df
  40707d:	jg     0x4070b3
  40707f:	sub    eax,0x434a07b2
  407084:	mov    ds:0x4906fe7a,eax
  407089:	dec    ebp
  40708a:	cmp    DWORD PTR [edx-0x720574f9],esi
  407090:	ins    DWORD PTR es:[edi],dx
  407091:	dec    esp
  407092:	sti    
  407093:	jge    0x407101
  407095:	imul   ecx,DWORD PTR [esi+eiz*2-0x7e],0xffffffbd
  40709a:	(bad)  
  40709b:	add    cl,BYTE PTR [ebp+ecx*1-0x61044a49]
  4070a2:	test   DWORD PTR [edx-0x5dc1ee05],esi
  4070a8:	scas   al,BYTE PTR es:[edi]
  4070a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070aa:	sbb    edx,eax
  4070ac:	jnp    0x40705f
  4070ae:	(bad)  
  4070af:	test   al,0x4a
  4070b1:	stc    
  4070b2:	jb     0x407128
  4070b4:	mov    eax,0xe2c95de0
  4070b9:	jge    0x407041
  4070bb:	xchg   ecx,eax
  4070bc:	and    edi,ecx
  4070be:	jns    0x4070e0
  4070c0:	dec    esp
  4070c1:	mov    ds:0x62c27b9,al
  4070c6:	mul    BYTE PTR [esi+0x7b39d84c]
  4070cc:	jge    0x4070f2
  4070ce:	mov    bh,BYTE PTR [edx+ebx*4-0x30a3bcc2]
  4070d5:	cmp    al,0x40
  4070d7:	mov    dh,0x36
  4070d9:	pop    edi
  4070da:	out    0x6a,eax
  4070dc:	xchg   DWORD PTR [ebp-0xb],edi
  4070df:	pop    es
  4070e0:	shl    DWORD PTR [ebx],1
  4070e2:	xor    DWORD PTR [ecx+0x32],edx
  4070e5:	inc    ecx
  4070e6:	and    esp,DWORD PTR [ebp+ecx*4+0x5b19c2b4]
  4070ed:	fmul   st,st(6)
  4070ef:	push   0x28cc15c6
  4070f4:	push   es
  4070f5:	mov    ah,0xba
  4070f7:	scas   eax,DWORD PTR es:[edi]
  4070f8:	cmp    al,0x8e
  4070fa:	popf   
  4070fb:	ds xchg ebx,eax
  4070fd:	lea    ecx,[ebx]
  4070ff:	mov    ah,0x3b
  407101:	pop    edi
  407102:	jp     0x407087
  407104:	inc    esi
  407105:	dec    eax
  407106:	push   0x7a95bec8
  40710b:	imul   ebp,esi,0x644e39eb
  407111:	adc    DWORD PTR [edi+ecx*4+0x37],ebx
  407115:	or     eax,0xba65570e
  40711a:	and    eax,0xd8e74302
  40711f:	sub    eax,0x9638e38b
  407124:	sbb    bl,dh
  407126:	out    0xde,eax
  407128:	mov    eax,ds:0x43f6fa29
  40712d:	test   BYTE PTR [edi],dh
  40712f:	out    dx,eax
  407130:	jp     0x407180
  407132:	adc    cl,0xd7
  407135:	icebp  
  407136:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407137:	sbb    DWORD PTR [edx-0x56b95e46],edi
  40713d:	in     eax,0x13
  40713f:	push   0x84536b98
  407144:	sub    ebp,DWORD PTR [edi-0x21]
  407147:	or     eax,0x924934ee
  40714c:	pop    eax
  40714d:	sahf   
  40714e:	pop    es
  40714f:	loop   0x407117
  407151:	sbb    edx,DWORD PTR [esi-0xdd63a99]
  407157:	sub    eax,0x4b5fb58a
  40715c:	cli    
  40715d:	and    BYTE PTR [edx+0x7d24ad57],0x99
  407164:	fucomp st(3)
  407166:	jns    0x4071b1
  407168:	push   0x13
  40716a:	and    al,0xf
  40716c:	xor    dh,BYTE PTR [esi]
  40716e:	mov    ds:0xff11b1bc,eax
  407173:	scas   al,BYTE PTR es:[edi]
  407174:	cwde   
  407175:	in     al,dx
  407176:	test   BYTE PTR [eax],al
  407178:	dec    esi
  407179:	out    dx,al
  40717a:	mov    ebp,0xb51229ba
  40717f:	jbe    0x4071f8
  407181:	fidiv  DWORD PTR [ecx+eax*1-0x1c]
  407185:	xor    DWORD PTR [ebx-0x6df00b70],0x64b46de0
  40718f:	jo     0x407205
  407191:	xor    esi,0xd0fba764
  407197:	scas   al,BYTE PTR es:[edi]
  407198:	cdq    
  407199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40719a:	xchg   ebp,eax
  40719b:	ja     0x40715c
  40719d:	rol    BYTE PTR [edx+0x3c60c754],0x1a
  4071a4:	xor    al,0xfa
  4071a6:	das    
  4071a7:	call   0x203ae73e
  4071ac:	lock mov WORD PTR [ecx-0x3b1f6254],?
  4071b3:	cmp    esi,DWORD PTR [eax-0x73]
  4071b6:	and    dl,BYTE PTR [eax]
  4071b8:	pop    ds
  4071b9:	jbe    0x40715c
  4071bb:	ror    DWORD PTR [ebx],cl
  4071bd:	ja     0x4071f5
  4071bf:	(bad)
  4071c2:	rcr    BYTE PTR [edx-0x15394b06],1
  4071c8:	jns    0x407219
  4071ca:	cli    
  4071cb:	xor    cl,BYTE PTR [esp+esi*8]
  4071ce:	out    0xbd,eax
  4071d0:	in     al,0x69
  4071d2:	frstor ds:0xf60789a5
  4071d8:	inc    ebp
  4071d9:	pusha  
  4071da:	xor    al,0xdd
  4071dc:	fcomp  DWORD PTR [ebx-0x6542481f]
  4071e2:	test   eax,0xed901543
  4071e7:	jne    0x4071d5
  4071e9:	sbb    al,0x7
  4071eb:	cmp    dl,BYTE PTR [esp+ecx*8+0x23]
  4071ef:	dec    edi
  4071f0:	sahf   
  4071f1:	fcmovnb st,st(3)
  4071f3:	xchg   bh,bl
  4071f5:	cdq    
  4071f6:	inc    esp
  4071f7:	bound  ebx,QWORD PTR [edi+0x58]
  4071fa:	ret    
  4071fb:	(bad)  
  4071fc:	fnsave [eax-0x45]
  4071ff:	dec    esi
  407200:	cmp    cl,0xc0
  407203:	(bad)  
  407204:	loope  0x40725b
  407206:	xor    ecx,edi
  407208:	call   0xbdab:0x7dd5d9b2
  40720f:	xor    DWORD PTR [ebp+0x6c7ba930],ecx
  407215:	fs ret 
  407217:	add    ah,0x5c
  40721a:	ficomp WORD PTR [ebx-0x52]
  40721d:	jp     0x40721b
  40721f:	jmp    0x961c13da
  407224:	call   0xc992:0x7e03be9b
  40722b:	mov    bl,0x26
  40722d:	add    eax,0x4cab575
  407232:	outs   dx,BYTE PTR ds:[esi]
  407233:	fucom  st(7)
  407235:	aaa    
  407236:	jno    0x40724c
  407238:	in     al,dx
  407239:	sub    eax,0x1218e97e
  40723e:	or     al,0x69
  407240:	dec    esp
  407241:	xchg   BYTE PTR [esi],ah
  407243:	setle  BYTE PTR [eax]
  407246:	xor    ecx,esp
  407248:	js     0x40728c
  40724a:	cwde   
  40724b:	xchg   edi,eax
  40724c:	jle    0x4072b5
  40724e:	test   BYTE PTR [esi-0x6a],ah
  407251:	and    eax,0x730185a1
  407256:	mov    ch,0xe4
  407258:	sbb    al,0xf5
  40725a:	push   0xb505882c
  40725f:	mov    bl,0x7d
  407261:	test   eax,esi
  407263:	inc    ebp
  407264:	mov    eax,ds:0x279c4982
  407269:	test   eax,0xbc63d976
  40726e:	outs   dx,BYTE PTR ds:[esi]
  40726f:	sbb    edx,edi
  407271:	mov    bl,bh
  407273:	mov    eax,ds:0x7e305820
  407278:	imul   esi,DWORD PTR [eax+0x544e14ee],0xfffffff3
  40727f:	in     eax,dx
  407280:	imul   edi,DWORD PTR ss:[ebx-0x16a375e2],0x45dae75b
  40728b:	nop
  40728c:	cmp    al,BYTE PTR [ebx]
  40728e:	ins    BYTE PTR es:[edi],dx
  40728f:	jnp    0x40727f
  407291:	(bad)  [esi-0x75052fa3]
  407297:	and    eax,0x958ea730
  40729c:	mov    dh,BYTE PTR [eax-0x4878b676]
  4072a2:	imul   ecx,DWORD PTR [esi+eax*2+0x11c99bd9],0xfffffff6
  4072aa:	faddp  st(7),st
  4072ac:	and    DWORD PTR [eax+esi*1-0x34],esp
  4072b0:	(bad)  
  4072b1:	cmc    
  4072b2:	fidivr DWORD PTR [ecx-0x68]
  4072b5:	pop    edx
  4072b6:	sbb    al,0x6
  4072b8:	out    0x21,eax
  4072ba:	cdq    
  4072bb:	test   al,0xd
  4072bd:	ret    
  4072be:	xchg   ebx,eax
  4072bf:	aaa    
  4072c0:	mov    edx,0x689045b0
  4072c5:	dec    esi
  4072c6:	aam    0x67
  4072c8:	jmp    0xc02c52ff
  4072cd:	cmc    
  4072ce:	pop    ebp
  4072cf:	adc    dl,ah
  4072d1:	sbb    eax,0x389fb1d1
  4072d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072d7:	xchg   ebx,eax
  4072d8:	or     BYTE PTR [ebp-0x47],al
  4072db:	das    
  4072dc:	pop    esp
  4072dd:	test   al,0x2d
  4072df:	sub    al,al
  4072e1:	loope  0x4072ad
  4072e3:	shl    DWORD PTR [ebx],cl
  4072e5:	nop
  4072e6:	sub    DWORD PTR [edx+0x6b],edx
  4072e9:	nop
  4072ea:	repnz sub eax,0xa4f088b9
  4072f0:	sbb    bl,bh
  4072f2:	inc    esp
  4072f3:	mov    ch,0x50
  4072f5:	cdq    
  4072f6:	(bad)  
  4072f7:	mov    esi,0x2dd09744
  4072fc:	pushf  
  4072fd:	or     BYTE PTR [edx-0x32],ah
  407300:	push   ecx
  407301:	or     eax,0x90b64b21
  407306:	cmc    
  407307:	dec    edi
  407308:	fild   WORD PTR [ebp-0x50208da5]
  40730e:	push   0x72
  407310:	mov    bl,0xd3
  407312:	push   0x4c501c9e
  407317:	shl    DWORD PTR [ebx],cl
  407319:	ss mov dh,0x53
  40731c:	rcl    DWORD PTR [esi],1
  40731e:	jne    0x40739d
  407320:	mov    BYTE PTR [eax-0x4d6e7356],cl
  407326:	sub    dl,dh
  407328:	or     ebx,DWORD PTR [edi+ebp*2]
  40732b:	ss inc ebx
  40732d:	outs   dx,BYTE PTR ds:[esi]
  40732e:	xchg   DWORD PTR [esi+0x29],eax
  407331:	inc    ecx
  407332:	add    edi,eax
  407334:	nop
  407335:	fimul  DWORD PTR [ecx-0x27aa800a]
  40733b:	dec    edi
  40733c:	pop    ecx
  40733d:	lods   eax,DWORD PTR ds:[esi]
  40733e:	(bad)  
  407340:	sti    
  407341:	xchg   edi,eax
  407342:	sbb    edi,DWORD PTR [esi+0x482b3bb]
  407348:	dec    ebp
  407349:	rcr    cl,0x33
  40734c:	and    eax,0x718aff67
  407351:	mov    bl,BYTE PTR [ecx+ecx*1]
  407354:	mov    dh,0x6f
  407356:	in     eax,dx
  407357:	test   al,0xa5
  407359:	sar    DWORD PTR [ebx+ebx*1],cl
  40735c:	xor    DWORD PTR [eax-0x2a],0xffffffb1
  407360:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407361:	and    eax,0xa86bc9a
  407366:	out    0x6b,al
  407368:	fisubr WORD PTR [eax-0x4d2b71be]
  40736e:	or     esp,DWORD PTR ds:0x707cbefd
  407374:	jmp    0xe15e0acb
  407379:	mov    dh,0x61
  40737b:	leave  
  40737c:	not    BYTE PTR [eax-0x3c82733c]
  407382:	sar    DWORD PTR [edx+eax*1-0x17bbe49d],cl
  407389:	test   ah,dh
  40738b:	sbb    edx,ebx
  40738d:	xchg   edx,eax
  40738e:	mov    esi,0x498a569b
  407393:	sti    
  407394:	adc    al,0x67
  407396:	ret    0xa12b
  407399:	(bad)  
  40739a:	retf   
  40739b:	lds    edi,FWORD PTR [eax-0x36]
  40739e:	cdq    
  40739f:	dec    BYTE PTR [ecx-0x1983b900]
  4073a5:	bound  eax,QWORD PTR [ebx-0x2dcf3fed]
  4073ab:	(bad)  
  4073ac:	fmul   st,st(0)
  4073ae:	inc    ebp
  4073af:	icebp  
  4073b0:	gs xchg ecx,eax
  4073b2:	jle    0x40735a
  4073b4:	addr16 cld 
  4073b6:	cmp    eax,0x8443133e
  4073bb:	mov    edx,0x2dd1f4e
  4073c0:	mov    esp,0xb46b9e76
  4073c5:	cmp    dh,dh
  4073c7:	mov    ah,0xdd
  4073c9:	xchg   esi,eax
  4073ca:	xchg   edx,eax
  4073cb:	and    ebp,ebx
  4073cd:	repz imul esp,ebp,0x892f947b
  4073d4:	popf   
  4073d5:	sti    
  4073d6:	mov    dh,0xce
  4073d8:	or     DWORD PTR ds:0xb2b14647,esi
  4073de:	or     DWORD PTR [ecx],ebp
  4073e0:	dec    edx
  4073e1:	dec    edx
  4073e2:	addr16 ja 0x40744a
  4073e5:	fwait
  4073e6:	cwde   
  4073e7:	pop    ecx
  4073e8:	xchg   edx,eax
  4073e9:	dec    esi
  4073ea:	das    
  4073eb:	retf   
  4073ec:	or     al,0xed
  4073ee:	pushf  
  4073ef:	int    0x47
  4073f1:	mov    ah,0x93
  4073f3:	cmp    DWORD PTR [ebp+0x33],0x8ba4fce6
  4073fa:	add    ebx,esp
  4073fc:	enter  0x4210,0x98
  407400:	mov    ?,WORD PTR [esi]
  407402:	addr16 dec eax
  407404:	pop    ecx
  407405:	fsubr  QWORD PTR [esi]
  407407:	sbb    eax,0xff69c502
  40740c:	shl    DWORD PTR [ebx],0x21
  40740f:	mov    ecx,0xce654986
  407414:	xlat   BYTE PTR ds:[ebx]
  407415:	enter  0xe4b,0x51
  407419:	sbb    al,0x4d
  40741b:	mov    BYTE PTR [edi],bh
  40741d:	lea    edi,[ecx-0x3ce1f6ae]
  407423:	push   edx
  407424:	mov    esi,DWORD PTR [ebp-0x1d]
  407427:	neg    BYTE PTR [edx]
  407429:	(bad)  
  40742a:	sbb    eax,0xa54da750
  40742f:	mov    ds:0x96cfd1fd,eax
  407434:	dec    esp
  407435:	cmp    DWORD PTR [ecx-0x45e11c7a],ebx
  40743b:	sub    eax,0xdcd51053
  407440:	jle    0x407433
  407442:	sub    DWORD PTR [ebx+0x5c1242a3],ebx
  407448:	mov    DWORD PTR [edx+0xd],0xee2e5801
  40744f:	repnz and BYTE PTR [edi+0x2c],bl
  407453:	cdq    
  407454:	popa   
  407455:	aad    0x8a
  407457:	push   ds
  407458:	xor    eax,0xa6e53fa7
  40745d:	sbb    BYTE PTR [ebx],cl
  40745f:	xlat   BYTE PTR ds:[ebx]
  407460:	mov    WORD PTR [ebx-0x75],gs
  407463:	sahf   
  407464:	xchg   esi,eax
  407465:	jmp    0x407449
  407467:	mov    edi,0x1b809daa
  40746c:	jecxz  0x40748b
  40746e:	sub    al,BYTE PTR [edi-0x77]
  407471:	hlt    
  407472:	(bad)  
  407473:	call   0x4f0b4490
  407478:	retf   
  407479:	adc    eax,0x3f5de74d
  40747e:	xchg   edx,eax
  40747f:	and    al,0xe4
  407481:	out    dx,al
  407482:	fcom   DWORD PTR [edi+0x2f16cb96]
  407488:	js     0x40749d
  40748a:	in     al,dx
  40748b:	xchg   BYTE PTR [ebx],ah
  40748d:	in     al,dx
  40748e:	add    DWORD PTR [ebx+0x70],ecx
  407491:	push   edx
  407492:	test   DWORD PTR [edx+0x73f8b4fc],0xcbf0909
  40749c:	adc    BYTE PTR [eax+0x5a83a6ce],dh
  4074a2:	cs push ss
  4074a4:	push   esi
  4074a5:	jge    0x4074a8
  4074a7:	push   ecx
  4074a8:	ds jmp 0x8dd5:0x47870257
  4074b0:	dec    ecx
  4074b1:	pop    ecx
  4074b2:	iret   
  4074b3:	test   al,cl
  4074b5:	and    eax,0x1847fff7
  4074ba:	loopne 0x4074a1
  4074bc:	inc    eax
  4074bd:	mov    eax,cs:0x743b3893
  4074c3:	daa    
  4074c4:	and    edi,DWORD PTR [edx+ecx*2+0x67]
  4074c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074c9:	push   es
  4074ca:	cmp    al,0x2e
  4074cc:	sbb    al,0xe9
  4074ce:	push   esp
  4074cf:	dec    edi
  4074d0:	ja     0x407545
  4074d2:	stc    
  4074d3:	stos   BYTE PTR es:[edi],al
  4074d4:	ret    
  4074d5:	and    ch,BYTE PTR [esp+eax*4]
  4074d8:	sbb    BYTE PTR [ecx+esi*2+0x32d7e02],ch
  4074df:	loope  0x407531
  4074e1:	ds mov db7,ebx
  4074e5:	cmp    DWORD PTR [edx],0x79
  4074e8:	sub    BYTE PTR [ecx+ecx*1],0xd2
  4074ec:	lods   al,BYTE PTR ds:[esi]
  4074ed:	dec    ecx
  4074ee:	jno    0x407514
  4074f0:	out    dx,eax
  4074f1:	loop   0x407512
  4074f3:	daa    
  4074f4:	ins    DWORD PTR es:[edi],dx
  4074f5:	dec    ebx
  4074f6:	sahf   
  4074f7:	es lahf 
  4074f9:	cmp    al,ah
  4074fb:	nop    DWORD PTR [edx-0x2e]
  4074ff:	jae    0x40750f
  407501:	add    eax,0x8316ef1f
  407506:	(bad)
  407509:	fwait
  40750a:	mov    cl,0xcb
  40750c:	sub    BYTE PTR [ecx-0x72],ch
  40750f:	scas   al,BYTE PTR es:[edi]
  407510:	push   ebx
  407511:	(bad)  
  407512:	outs   dx,BYTE PTR ds:[esi]
  407513:	xor    eax,DWORD PTR [edx+0x3800228e]
  407519:	out    dx,al
  40751a:	or     eax,0xbbfa02f5
  40751f:	aas    
  407520:	jnp    0x407597
  407522:	and    BYTE PTR [ebx],dh
  407524:	sub    bl,BYTE PTR [ebx+ecx*8-0x26]
  407528:	outs   dx,DWORD PTR ds:[esi]
  407529:	bound  edx,QWORD PTR [ecx]
  40752b:	push   es
  40752c:	test   DWORD PTR [edi],esp
  40752e:	into   
  40752f:	fcmovnb st,st(0)
  407531:	cmc    
  407532:	mov    al,0x57
  407534:	in     al,0x9d
  407536:	stos   BYTE PTR es:[edi],al
  407537:	sbb    DWORD PTR [eax-0x4af28d25],ebp
  40753d:	retf   0xd040
  407540:	pushf  
  407541:	jmp    0x682b2012
  407546:	rol    DWORD PTR [ebx-0x70],cl
  407549:	jp     0x40753d
  40754b:	test   ebx,edi
  40754d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40754e:	stc    
  40754f:	lds    esp,FWORD PTR [ecx+0x62]
  407552:	push   edx
  407553:	cmp    DWORD PTR [ebx],ebp
  407555:	das    
  407556:	rcl    DWORD PTR [ecx+0x55],1
  407559:	add    eax,0x54410003
  40755e:	mov    cl,0x64
  407560:	hlt    
  407561:	sahf   
  407562:	ss scas eax,DWORD PTR es:[edi]
  407564:	and    esi,DWORD PTR [ebx]
  407566:	inc    edi
  407567:	inc    edx
  407568:	sti    
  407569:	xchg   ecx,eax
  40756a:	shr    DWORD PTR [edi+0x6a],1
  40756d:	sub    al,0xff
  40756f:	punpcklbw mm4,mm4
  407572:	xchg   edi,eax
  407573:	in     eax,dx
  407574:	sub    BYTE PTR [esi],bl
  407576:	pop    edx
  407577:	jno    0x4075a0
  407579:	or     DWORD PTR [eax+0x7f],edx
  40757c:	pop    es
  40757d:	add    DWORD PTR [ebx],ecx
  40757f:	xor    DWORD PTR ss:[ebx],esi
  407582:	movzx  edx,WORD PTR [edi-0x49]
  407586:	jecxz  0x407589
  407588:	sbb    edi,DWORD PTR [ecx+0x56f5cea6]
  40758e:	mov    al,0x2d
  407590:	xlat   BYTE PTR ds:[ebx]
  407591:	add    eax,DWORD PTR [ebx+0x62]
  407594:	aam    0x35
  407596:	popf   
  407597:	xor    BYTE PTR [edi+0x614df7c3],bl
  40759d:	(bad)  
  4075a0:	inc    eax
  4075a1:	mov    esi,0xf87404c
  4075a6:	inc    ebx
  4075a7:	inc    esp
  4075a8:	pop    es
  4075a9:	sub    al,0x7a
  4075ab:	fld    DWORD PTR [edx+0xa554b45]
  4075b1:	pop    ds
  4075b2:	pop    edx
  4075b3:	push   ds
  4075b4:	inc    ecx
  4075b5:	sbb    bl,cl
  4075b7:	push   ds
  4075b8:	jecxz  0x4075f6
  4075ba:	pop    ebx
  4075bb:	into   
  4075bc:	xchg   ecx,eax
  4075bd:	lods   al,BYTE PTR ds:[esi]
  4075be:	xchg   esi,eax
  4075bf:	popa   
  4075c0:	and    ebp,DWORD PTR [ecx-0x6f4ddf9d]
  4075c6:	test   BYTE PTR ds:0x39025136,ch
  4075cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075cd:	and    al,0x87
  4075cf:	aam    0xb9
  4075d1:	call   0x536372f0
  4075d6:	add    eax,0xaf672596
  4075db:	jns    0x40763f
  4075dd:	push   ebx
  4075de:	dec    edx
  4075df:	test   DWORD PTR [ebp-0x1020549],edi
  4075e5:	add    al,0xe0
  4075e7:	cwde   
  4075e8:	and    DWORD PTR [esp+edx*2+0x71cd087c],edi
  4075ef:	les    ecx,FWORD PTR ds:0x1d463c03
  4075f5:	mov    ebx,0xba45c085
  4075fa:	cmp    al,0xb1
  4075fc:	cmp    eax,0xb1686ec8
  407601:	push   esi
  407602:	mov    cl,0xc2
  407604:	or     al,0x56
  407606:	js     0x407623
  407608:	mov    ecx,DWORD PTR [esi+ebx*8]
  40760b:	lock add eax,DWORD PTR [esi-0x1969ca4e]
  407612:	repnz and al,0xf5
  407615:	push   0xffffffa7
  407617:	dec    edx
  407618:	mul    esp
  40761a:	outs   dx,BYTE PTR fs:[esi]
  40761c:	cdq    
  40761d:	adc    esi,edi
  40761f:	imul   edx,DWORD PTR [edi+0x326d2052],0x20
  407626:	ret    0x1976
  407629:	push   esi
  40762a:	jae    0x40768f
  40762c:	jg     0x4075b2
  40762e:	and    DWORD PTR [edi],edx
  407630:	sub    al,0xa0
  407632:	cmc    
  407633:	pop    es
  407634:	push   eax
  407635:	loope  0x407633
  407637:	mov    ah,0xed
  407639:	push   ecx
  40763a:	pusha  
  40763b:	mov    ecx,0xd1bda7d5
  407640:	mov    edi,0x8779716b
  407645:	fdivr  QWORD PTR [edx+ebx*8]
  407648:	push   0xdeadeb83
  40764d:	jg     0x407601
  40764f:	jge    0x40761b
  407651:	int3   
  407652:	lods   al,BYTE PTR ds:[esi]
  407653:	inc    ebp
  407654:	js     0x407642
  407656:	mov    eax,ds:0xfe29b974
  40765b:	pop    ebp
  40765c:	int    0x2b
  40765e:	les    ebx,FWORD PTR [eax+ecx*1]
  407661:	scas   al,BYTE PTR es:[edi]
  407662:	in     eax,dx
  407663:	cmc    
  407664:	mov    BYTE PTR [ecx],ch
  407666:	sbb    cl,BYTE PTR [edx-0x4f1d542d]
  40766c:	dec    esi
  40766d:	xchg   esi,eax
  40766e:	(bad)
  407671:	and    DWORD PTR [edi-0x1f],0x6c
  407675:	or     BYTE PTR [edx+ebp*2],0xc2
  407679:	xor    al,0xbc
  40767b:	cli    
  40767c:	mov    bh,0xf0
  40767e:	ret    0x8373
  407681:	xchg   esp,eax
  407682:	test   DWORD PTR [ecx],ebp
  407684:	add    eax,0xdb41be9
  407689:	ja     0x4076c4
  40768b:	mov    esp,0xf04fc19d
  407690:	das    
  407691:	mov    dh,0xba
  407693:	ret    
  407694:	dec    edi
  407695:	ds callw 0x10bf
  40769a:	push   eax
  40769b:	adc    al,0xcb
  40769d:	sbb    edx,ebp
  40769f:	jae    0x407683
  4076a1:	mov    edi,DWORD PTR [ecx]
  4076a3:	sbb    al,0xc8
  4076a5:	scas   eax,DWORD PTR es:[edi]
  4076a6:	mov    dh,0xb5
  4076a8:	out    0x82,eax
  4076aa:	or     bh,BYTE PTR [edi]
  4076ac:	popf   
  4076ad:	xchg   ecx,eax
  4076ae:	outs   dx,DWORD PTR ds:[esi]
  4076af:	fs inc esp
  4076b1:	sub    esi,DWORD PTR [eax-0x41]
  4076b4:	call   0x68f6:0x69b1352e
  4076bb:	repz sub BYTE PTR [ebx+0x140dbb64],al
  4076c2:	fidiv  WORD PTR [ebx+ebp*8]
  4076c5:	xlat   BYTE PTR ds:[ebx]
  4076c6:	xchg   ecx,eax
  4076c7:	repz cmp BYTE PTR [edx+0x5c],0x1c
  4076cc:	into   
  4076cd:	mov    edi,0x276ed7cf
  4076d2:	push   0x89281657
  4076d7:	test   eax,0x9fa623c3
  4076dc:	jns    0x407728
  4076de:	jnp    0x407700
  4076e0:	ins    DWORD PTR es:[edi],dx
  4076e1:	inc    edx
  4076e2:	push   0x327e7d23
  4076e7:	lods   al,BYTE PTR ds:[esi]
  4076e8:	shl    bl,1
  4076ea:	push   ds
  4076eb:	stos   BYTE PTR es:[edi],al
  4076ec:	inc    edx
  4076ed:	clc    
  4076ee:	jp     0x407684
  4076f0:	or     DWORD PTR [edi+0x3d],esi
  4076f3:	stos   BYTE PTR es:[edi],al
  4076f4:	xchg   al,cl
  4076f6:	int    0x26
  4076f8:	out    dx,eax
  4076f9:	pop    es
  4076fa:	push   ebp
  4076fb:	xor    esi,DWORD PTR [eax+0x47]
  4076fe:	fnstcw WORD PTR [edi+0x76]
  407701:	ins    BYTE PTR es:[edi],dx
  407702:	inc    ebp
  407703:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407704:	repz ret 0x38af
  407708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407709:	push   ebx
  40770a:	push   0x13
  40770c:	pop    edi
  40770d:	nop
  40770e:	jae    0x4076a6
  407710:	mov    bl,0x81
  407712:	neg    ch
  407714:	xor    DWORD PTR [esi],ebx
  407716:	add    eax,0x6c174e89
  40771b:	xchg   ebx,eax
  40771c:	ror    ch,cl
  40771e:	in     al,dx
  40771f:	jns    0x4076cb
  407721:	daa    
  407722:	inc    esp
  407723:	popf   
  407724:	sbb    ecx,eax
  407726:	fcmovnu st,st(1)
  407728:	push   ebx
  407729:	mov    dl,BYTE PTR [esi+0x69ae1fe]
  40772f:	test   al,0xce
  407731:	lahf   
  407732:	sub    DWORD PTR [esp+esi*4],0xffffffb7
  407736:	(bad)  
  407737:	cmp    ebp,DWORD PTR [ecx+0x30a329f4]
  40773d:	mov    ecx,0x519c7c49
  407742:	aas    
  407743:	dec    eax
  407744:	call   0x4bbe:0x72910f01
  40774b:	pop    edx
  40774c:	movlps QWORD PTR [ecx],xmm6
  40774f:	sub    al,0x2b
  407751:	mov    BYTE PTR [edi],bh
  407753:	cwde   
  407754:	dec    ebx
  407755:	push   ecx
  407756:	fwait
  407757:	push   ebp
  407758:	ds call 0x24cd:0x33ecd2a5
  407760:	cmp    bh,dh
  407762:	addr16 leave 
  407764:	mov    ecx,0xa27482f8
  407769:	das    
  40776a:	cmc    
  40776b:	dec    edx
  40776c:	mov    bl,0x38
  40776e:	pop    esi
  40776f:	call   0x5deef2dd
  407774:	div    BYTE PTR ss:[esi+0x5b]
  407778:	arpl   WORD PTR [eax],cx
  40777a:	push   edx
  40777b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40777c:	popa   
  40777d:	shl    BYTE PTR [bp+di-0x4d63],0x20
  407783:	jns    0x4077ce
  407785:	sahf   
  407786:	lea    edi,[esi-0x67125fcc]
  40778c:	ficomp WORD PTR [ecx+edx*2+0x21332202]
  407793:	cmp    eax,DWORD PTR [edx+0x42717819]
  407799:	ret    
  40779a:	mov    bh,0x40
  40779c:	in     eax,0x8c
  40779e:	std    
  40779f:	jo     0x4077da
  4077a1:	mov    eax,0x7a525b1b
  4077a6:	stc    
  4077a7:	add    esp,edx
  4077a9:	inc    ebx
  4077aa:	sbb    eax,esp
  4077ac:	loop   0x4077fc
  4077ae:	js     0x4077ba
  4077b0:	mov    gs,esp
  4077b2:	push   ecx
  4077b3:	arpl   WORD PTR [eax-0x10747243],si
  4077b9:	(bad)  [ecx+0x1c]
  4077bc:	and    DWORD PTR [ebp+0x40],0x54024c0b
  4077c3:	pop    eax
  4077c4:	push   edx
  4077c5:	jmp    0x40783e
  4077c7:	repz imul eax,DWORD PTR [edi+0x6fce9e60],0xffffff89
  4077cf:	in     al,0x95
  4077d1:	mov    esp,0xa8b6c515
  4077d6:	mov    eax,eax
  4077d8:	pop    eax
  4077d9:	test   eax,0x12e59810
  4077de:	retf   
  4077df:	mov    dh,0x9b
  4077e1:	xchg   esi,eax
  4077e2:	inc    ebx
  4077e3:	ins    BYTE PTR es:[edi],dx
  4077e4:	dec    esi
  4077e5:	(bad)
  4077e8:	mov    al,0x40
  4077ea:	ret    0x1319
  4077ed:	mov    bl,dl
  4077ef:	rol    dl,0x34
  4077f2:	bound  esi,QWORD PTR [eax-0x2d]
  4077f5:	xor    bh,BYTE PTR [eax+0x3309122a]
  4077fb:	mov    al,0x3b
  4077fd:	xor    ecx,DWORD PTR [edx]
  4077ff:	lods   eax,DWORD PTR ds:[esi]
  407800:	mov    ebx,0xf10762cb
  407805:	cmp    eax,0x2929e82a
  40780a:	mov    esi,0x8aa624b8
  40780f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407810:	dec    ecx
  407811:	or     al,0x64
  407813:	(bad)  
  407814:	in     eax,dx
  407815:	scas   al,BYTE PTR es:[edi]
  407816:	jbe    0x4077e9
  407818:	(bad)  
  40781a:	and    BYTE PTR [edx+0x1243cd51],dh
  407820:	jmp    0x407870
  407822:	dec    edx
  407823:	lahf   
  407824:	sbb    DWORD PTR ss:[edx],0x37
  407828:	dec    edx
  407829:	jg     0x4077e6
  40782b:	fisub  DWORD PTR [esi-0x6b5af7d]
  407831:	mov    cl,0xd7
  407833:	cwde   
  407834:	push   DWORD PTR [edx-0x50]
  407837:	cli    
  407838:	or     eax,0x5d5f678a
  40783d:	fcomp  DWORD PTR [ecx+ebx*8]
  407840:	jle    0x407841
  407842:	add    esp,0xffffffdb
  407845:	mov    ebp,0x558ec3ba
  40784a:	(bad)  
  40784b:	ja     0x4077f0
  40784d:	jo     0x407866
  40784f:	ds cmp eax,0x9eaa3130
  407855:	sti    
  407856:	push   ss
  407857:	inc    edx
  407858:	xchg   esi,eax
  407859:	test   BYTE PTR [eax+ebx*4],dl
  40785c:	dec    edx
  40785d:	inc    edx
  40785e:	outs   dx,DWORD PTR ds:[esi]
  40785f:	mov    al,ds:0xdbd39569
  407864:	(bad)  
  407865:	adc    DWORD PTR [edx+0x15],ebx
  407868:	add    al,0xab
  40786a:	mov    ch,0xf7
  40786c:	ds cdq 
  40786e:	xchg   ebp,eax
  40786f:	shl    DWORD PTR [ebx-0x1b33a8c1],1
  407875:	popf   
  407876:	ss xor al,0x6d
  407879:	outs   dx,DWORD PTR ds:[esi]
  40787a:	shl    BYTE PTR [edi+0x15419ca3],cl
  407880:	test   BYTE PTR ds:[edx],0x94
  407884:	(bad)  
  407885:	mov    dl,BYTE PTR [ebp+eax*4-0x2c9fae2a]
  40788c:	pop    edi
  40788d:	js     0x40781a
  40788f:	(bad)  
  407890:	in     al,dx
  407891:	in     al,dx
  407892:	mov    ecx,0x9af7bcc0
  407897:	xchg   BYTE PTR [eax-0x51],bl
  40789a:	cmp    bh,BYTE PTR [ebx-0x5e0e3688]
  4078a0:	push   edi
  4078a1:	mov    al,dh
  4078a3:	cmp    ah,ah
  4078a5:	in     al,0xec
  4078a7:	jns    0x407889
  4078a9:	mov    DWORD PTR [eax-0x2a],eax
  4078ac:	dec    ebx
  4078ad:	arpl   WORD PTR [edi-0x12],di
  4078b0:	mov    esp,DWORD PTR [esi+eax*4]
  4078b3:	test   DWORD PTR [ecx-0x7325f1e7],0xde0f9c00
  4078bd:	imul   ecx,DWORD PTR [edx+0x1a77d400],0x3adebe07
  4078c7:	fld    TBYTE PTR [ebx]
  4078c9:	daa    
  4078ca:	push   eax
  4078cb:	adc    DWORD PTR [edi+edx*1-0x4455a5be],ebp
  4078d2:	stc    
  4078d3:	nop
  4078d4:	inc    eax
  4078d5:	repnz push 0xf
  4078d8:	mov    al,ds:0xef7a3c09
  4078dd:	mov    cl,0x77
  4078df:	test   edx,0xcaa6a77
  4078e5:	or     eax,0xa791d6a7
  4078ea:	add    BYTE PTR [edi+0x39],cl
  4078ed:	adc    al,0xe6
  4078ef:	loope  0x40794b
  4078f1:	les    ecx,FWORD PTR [edi+0x12]
  4078f4:	and    al,0xef
  4078f6:	sub    DWORD PTR [edx+eax*1],ebx
  4078f9:	mov    esi,esi
  4078fb:	add    DWORD PTR [eax],0x9c00b3fd
  407901:	enter  0xd2dd,0xe8
  407905:	je     0x4078d0
  407907:	or     DWORD PTR [ecx+0x21cb81f2],ecx
  40790d:	dec    edx
  40790e:	jo     0x40793a
  407910:	xchg   edi,eax
  407911:	or     ebx,ecx
  407913:	inc    eax
  407914:	cdq    
  407915:	arpl   WORD PTR [ebp+0x3f1ddf8d],si
  40791b:	mov    BYTE PTR [eax-0x2b04b811],ah
  407921:	inc    esi
  407922:	mov    dh,0x3d
  407924:	(bad)
  407928:	jmp    0x407975
  40792a:	cmp    eax,0x7dcf8394
  40792f:	shl    ah,cl
  407931:	(bad)  
  407932:	repnz iret 
  407934:	dec    ebx
  407935:	dec    edi
  407936:	fbstp  TBYTE PTR [ebp-0x40fcf63d]
  40793c:	or     eax,0x5468aa5a
  407941:	aam    0x7b
  407943:	in     al,0x31
  407945:	cld    
  407946:	mov    ebp,DWORD PTR [ecx+0x73ec0c94]
  40794c:	add    cl,BYTE PTR [edx-0xa]
  40794f:	add    al,0x6a
  407951:	outs   dx,DWORD PTR ds:[esi]
  407952:	push   es
  407953:	inc    eax
  407954:	jp     0x407935
  407956:	dec    ebx
  407957:	inc    eax
  407958:	pop    ss
  407959:	jnp    0x4079a3
  40795b:	cmp    BYTE PTR [ebx+0x18],cl
  40795e:	mov    eax,0xc104fa2c
  407963:	inc    edx
  407964:	inc    eax
  407965:	sbb    al,0x6e
  407967:	shr    DWORD PTR [edi-0x5da96309],cl
  40796d:	adc    al,0x41
  40796f:	(bad)  
  407970:	aam    0x95
  407972:	or     al,0x54
  407974:	movups XMMWORD PTR [eax-0x3f],xmm6
  407978:	loop   0x4079d9
  40797a:	ja     0x4079f0
  40797c:	xor    al,0x5d
  40797e:	mov    dl,BYTE PTR [esi+0x2e]
  407981:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407982:	int3   
  407983:	or     dl,BYTE PTR [ecx+ecx*1-0x2f38fbe1]
  40798a:	mov    bh,BYTE PTR ds:0x639782a2
  407990:	cli    
  407991:	lahf   
  407992:	imul   edi,DWORD PTR [edx+0x1503b4de],0xfffffff7
  407999:	mov    ebp,0x30b8097b
  40799e:	push   es
  40799f:	cdq    
  4079a0:	add    al,0xfa
  4079a2:	cdq    
  4079a3:	sahf   
  4079a4:	lahf   
  4079a5:	mov    ds:0x8c1a95c6,eax
  4079aa:	pop    ds
  4079ab:	mov    cl,0x36
  4079ad:	and    DWORD PTR [ebx-0x24c60cb4],ecx
  4079b3:	bound  eax,QWORD PTR [si+0x9]
  4079b7:	add    bh,BYTE PTR [edx]
  4079b9:	add    ecx,esi
  4079bb:	cmc    
  4079bc:	and    eax,0x40da8924
  4079c1:	call   FWORD PTR [ecx+ebp*1-0x6]
  4079c5:	daa    
  4079c6:	aaa    
  4079c7:	mov    dh,0xfd
  4079c9:	mov    cl,0x0
  4079cb:	ds inc ecx
  4079cd:	pop    ebx
  4079ce:	addr16 xchg edi,eax
  4079d0:	sbb    BYTE PTR [ebp+0x67c136b9],0xb3
  4079d7:	out    dx,eax
  4079d8:	popf   
  4079d9:	mov    bh,0x89
  4079db:	(bad)  
  4079dc:	jns    0x407a00
  4079de:	addr16 mov ecx,esi
  4079e1:	inc    ebp
  4079e2:	test   al,0x53
  4079e4:	xchg   esp,eax
  4079e5:	inc    edi
  4079e6:	push   es
  4079e7:	and    esi,DWORD PTR [ebx+ebx*2+0x2e4f8b6e]
  4079ee:	or     BYTE PTR [eax+edx*4+0x160b43cd],cl
  4079f5:	ss aaa 
  4079f7:	int    0x18
  4079f9:	add    al,BYTE PTR [eax]
  4079fb:	cmp    cl,BYTE PTR [ebx-0x563c8a75]
  407a01:	scas   al,BYTE PTR es:[edi]
  407a02:	mov    bl,0xed
  407a04:	mov    ah,0xa2
  407a06:	pop    edi
  407a07:	mov    edi,ebx
  407a09:	cmp    DWORD PTR [ecx+0x16],ecx
  407a0c:	pop    di
  407a0e:	imul   eax,DWORD PTR ds:0x8a898696,0xfffffff1
  407a15:	lds    edi,FWORD PTR [ecx-0xe]
  407a18:	and    ch,BYTE PTR [eax]
  407a1a:	cld    
  407a1b:	jp     0x407a1f
  407a1d:	in     eax,dx
  407a1e:	or     BYTE PTR [ebp+0xd14ca0c],bl
  407a24:	(bad)  
  407a25:	bts    DWORD PTR [esi-0x1f],eax
  407a29:	aam    0xd7
  407a2b:	call   0x7423:0x7a5c4ce7
  407a32:	int    0x66
  407a34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a35:	ins    DWORD PTR es:[edi],dx
  407a36:	out    dx,eax
  407a37:	ss push esp
  407a39:	sub    BYTE PTR [eax+0x39fbd052],al
  407a3f:	mov    ds:0xcc417aa7,al
  407a44:	fcmovu st,st(3)
  407a46:	push   ss
  407a47:	inc    eax
  407a48:	dec    eax
  407a49:	mov    ah,0xcc
  407a4b:	test   DWORD PTR [edi-0x24],edx
  407a4e:	(bad)  
  407a50:	mov    ebp,0x37f056df
  407a55:	mov    bh,0xc4
  407a57:	fdivr  DWORD PTR ds:0xdaa3067c
  407a5d:	fimul  WORD PTR [ecx-0xd029b98]
  407a63:	sub    bl,dh
  407a65:	test   BYTE PTR [edi+ebx*1+0x60],bl
  407a69:	jmp    0x407a66
  407a6b:	inc    ebx
  407a6c:	mov    DWORD PTR [esi-0x29],edx
  407a6f:	in     al,dx
  407a70:	dec    ecx
  407a71:	jns    0x407aa3
  407a73:	retf   0x9ea4
  407a76:	push   esp
  407a77:	cli    
  407a78:	xor    BYTE PTR [edi+0x1],0x1
  407a7c:	mov    ebx,0xd54a45e2
  407a81:	push   ecx
  407a82:	mov    ebx,0x24065ef0
  407a87:	xor    al,0xab
  407a89:	in     eax,dx
  407a8a:	inc    esi
  407a8b:	xchg   eax,eax
  407a8d:	inc    edx
  407a8e:	jno    0x407a49
  407a90:	jbe    0x407ab4
  407a92:	mov    ebx,0xa8eb5ecf
  407a97:	and    bh,BYTE PTR [ecx+0x67]
  407a9a:	(bad)  
  407a9b:	mov    edx,0xfe5dc7ad
  407aa0:	xchg   edx,eax
  407aa1:	xchg   esp,eax
  407aa2:	inc    esi
  407aa3:	popa   
  407aa4:	ins    BYTE PTR es:[edi],dx
  407aa5:	jp     0x407a33
  407aa7:	data16 mov bh,0x12
  407aaa:	jp     0x407aa8
  407aac:	enter  0x9d5c,0xa1
  407ab0:	imul   esi,DWORD PTR [eax+0x27],0x358bfd96
  407ab7:	popf   
  407ab8:	loop   0x407a48
  407aba:	fcomi  st,st(2)
  407abc:	jmp    0xecee05cb
  407ac1:	mov    cl,0xff
  407ac3:	(bad)
  407ac6:	repnz fcmove st,st(2)
  407ac9:	pop    es
  407aca:	cmp    eax,eax
  407acc:	xlat   BYTE PTR ds:[ebx]
  407acd:	in     al,dx
  407ace:	inc    ebx
  407acf:	bound  eax,QWORD PTR [edx-0x221030c3]
  407ad5:	pushf  
  407ad6:	jp     0x407ac2
  407ad8:	dec    ebx
  407ad9:	mov    ah,0x4e
  407adb:	xchg   edi,eax
  407adc:	cmc    
  407add:	cdq    
  407ade:	xchg   eax,ebp
  407ae0:	cmp    eax,0x14b8fec1
  407ae5:	xchg   ecx,eax
  407ae6:	push   es
  407ae7:	mov    eax,0x5a2bb305
  407aec:	outs   dx,DWORD PTR ds:[esi]
  407aed:	sar    DWORD PTR [ebx],cl
  407aef:	dec    esi
  407af0:	adc    BYTE PTR [ebp+0x77],al
  407af3:	cmp    eax,esp
  407af5:	mov    ebx,0x3fe4a784
  407afa:	in     al,0xda
  407afc:	sub    al,0xbb
  407afe:	test   al,0x3e
  407b00:	xchg   edx,edi
  407b02:	mov    ah,0x4c
  407b04:	pop    es
  407b05:	add    DWORD PTR [ecx+0x7e],ecx
  407b08:	xor    DWORD PTR [ecx-0x16d19649],0x36
  407b0f:	lock inc ebx
  407b11:	mov    ebp,0x3affaf93
  407b16:	neg    BYTE PTR [ebx]
  407b18:	push   cs
  407b19:	leave  
  407b1a:	jnp    0x407b75
  407b1c:	ret    0xf41e
  407b1f:	pop    edx
  407b20:	or     BYTE PTR [esp+ebp*2+0x2799bd7b],dl
  407b27:	and    BYTE PTR [ecx+ecx*2+0x5c],ch
  407b2b:	int3   
  407b2c:	inc    esi
  407b2d:	in     al,dx
  407b2e:	inc    esp
  407b2f:	mov    dl,0xdb
  407b31:	push   ebp
  407b32:	pop    eax
  407b33:	fbstp  TBYTE PTR [ebx-0x3a]
  407b36:	cwde   
  407b37:	pop    es
  407b38:	pop    ss
  407b39:	push   ss
  407b3a:	bound  esp,QWORD PTR [ecx+0x54]
  407b3d:	jmp    FWORD PTR ds:0x6d2320f4
  407b43:	or     BYTE PTR [ebp+0x4013f331],0x39
  407b4a:	pop    eax
  407b4b:	xchg   edx,eax
  407b4c:	mov    ah,0x89
  407b4e:	xchg   edi,eax
  407b4f:	add    BYTE PTR [ebp-0x40],ch
  407b52:	jns    0x407b10
  407b54:	and    BYTE PTR [edi+0x1e148bc0],0xf
  407b5b:	xchg   bl,cl
  407b5d:	ss jns 0x407bb4
  407b60:	add    al,0xab
  407b62:	dec    bp
  407b64:	sub    DWORD PTR [eax],eax
  407b66:	push   0xca273fe6
  407b6b:	xor    cl,BYTE PTR [esi+0x31]
  407b6e:	xchg   edi,eax
  407b6f:	jns    0x407b1c
  407b71:	xor    esi,eax
  407b73:	adc    esi,edi
  407b75:	pop    edi
  407b76:	dec    edi
  407b77:	(bad)  
  407b78:	jmp    0x7e55:0xca250fe3
  407b7f:	aam    0x93
  407b81:	stos   DWORD PTR es:[edi],eax
  407b82:	imul   esp,DWORD PTR [edx+0x52103a2],0xd44a4324
  407b8c:	mov    ebx,0x7ecf9fb5
  407b91:	sbb    eax,0x8cf65341
  407b96:	mov    ebp,0xae27195d
  407b9b:	add    al,0xd0
  407b9d:	in     eax,0xb8
  407b9f:	imul   ebx,DWORD PTR [esp+eax*4],0x31
  407ba3:	cmp    DWORD PTR [ecx+eiz*1-0x72d2a47e],edx
  407baa:	mov    WORD PTR [eax],ss
  407bac:	mov    BYTE PTR [eax],0x18
  407baf:	jb     0x407bd8
  407bb1:	sub    al,BYTE PTR [edi+ebp*1-0x6b]
  407bb5:	jmp    0x11246053
  407bba:	out    0xfc,eax
  407bbc:	and    edx,DWORD PTR [eax-0x4c]
  407bbf:	push   eax
  407bc0:	push   edx
  407bc1:	inc    edi
  407bc2:	clc    
  407bc3:	imul   ebp,DWORD PTR [esi-0x9e6e17f],0x13
  407bca:	(bad)  [eax-0x9]
  407bcd:	mov    DWORD PTR [edx],ecx
  407bcf:	mov    ds:0xc1b7cb03,eax
  407bd4:	xchg   esp,eax
  407bd5:	shl    BYTE PTR [ebx],1
  407bd7:	out    dx,eax
  407bd8:	call   0xe57c:0xc2ac93bc
  407bdf:	mov    edx,ebx
  407be1:	add    al,0x69
  407be3:	nop
  407be4:	rcl    esp,1
  407be6:	jns    0x407c41
  407be8:	mov    DWORD PTR [esi-0x73],ecx
  407beb:	adc    DWORD PTR [edi+esi*2-0x5e250a70],esi
  407bf2:	cmc    
  407bf3:	aam    0xda
  407bf5:	test   ah,bh
  407bf7:	cli    
  407bf8:	jmp    0x3ee5:0xbc096fe3
  407bff:	clc    
  407c00:	das    
  407c01:	sub    esi,DWORD PTR [edi+0x6d]
  407c04:	nop
  407c05:	inc    ebp
  407c06:	fsubr  DWORD PTR [esi]
  407c08:	pop    edi
  407c09:	cmp    DWORD PTR [edi-0xa],0xffffffa1
  407c0d:	aas    
  407c0e:	je     0x407c72
  407c10:	popa   
  407c11:	aad    0x3e
  407c13:	inc    ecx
  407c14:	imul   edx,DWORD PTR ds:0x13dc8ef6,0x44
  407c1b:	mov    eax,0xe79a5383
  407c20:	enter  0xa671,0x78
  407c24:	pop    ebp
  407c25:	sbb    BYTE PTR [ecx],ch
  407c27:	mov    ah,0xf1
  407c29:	sbb    al,ah
  407c2b:	cwde   
  407c2c:	mov    ecx,edi
  407c2e:	gs sbb eax,0x7371e200
  407c34:	scas   eax,DWORD PTR es:[edi]
  407c35:	inc    ecx
  407c36:	mov    ?,esp
  407c38:	out    dx,eax
  407c39:	pop    ecx
  407c3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c3b:	mov    bl,0xf9
  407c3d:	mov    WORD PTR [ebx+0x3ac1a960],?
  407c43:	mov    eax,DWORD PTR [esi]
  407c45:	lds    esi,FWORD PTR [ebx]
  407c47:	pop    ebx
  407c48:	data16 jne 0x407be1
  407c4b:	imul   esp,DWORD PTR [ebx+edx*2-0x58],0xb8380875
  407c53:	jo     0x407c4e
  407c55:	inc    edx
  407c56:	sar    bh,0xa0
  407c59:	(bad)  
  407c5a:	push   ecx
  407c5b:	cwde   
  407c5c:	inc    esi
  407c5d:	fldenv [ebx]
  407c5f:	or     DWORD PTR [esi+esi*4-0x4b],esi
  407c63:	inc    edx
  407c64:	inc    ecx
  407c65:	jmp    0x638:0x7e081cb6
  407c6c:	(bad)  
  407c6d:	sub    bh,ch
  407c6f:	icebp  
  407c70:	xor    al,0xbb
  407c72:	not    BYTE PTR [eax+0x3c6f38a2]
  407c78:	mov    ?,WORD PTR [ecx-0x5a]
  407c7b:	movhps xmm5,QWORD PTR [esi]
  407c7e:	aad    0x86
  407c80:	pop    ebx
  407c81:	xor    ebp,DWORD PTR [eax-0x50]
  407c84:	test   eax,0x6ebce2ca
  407c89:	fldcw  WORD PTR [esi+0x4d]
  407c8c:	mov    al,ds:0xd6d196fe
  407c91:	or     ch,ch
  407c93:	fmul   st(6),st
  407c95:	imul   esp,DWORD PTR [ecx+esi*8],0x10
  407c99:	rcr    ebx,0xef
  407c9c:	cmp    al,0x6e
  407c9e:	mov    ecx,0xca86f26f
  407ca3:	fs inc esi
  407ca5:	jo     0x407c80
  407ca7:	in     al,0x3d
  407ca9:	xchg   ebx,eax
  407caa:	mov    bl,0x4b
  407cac:	loopne 0x407c79
  407cae:	dec    esi
  407caf:	stc    
  407cb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cb1:	lock nop
  407cb3:	mov    ebx,0xc94b8323
  407cb8:	push   ebx
  407cb9:	inc    edi
  407cba:	(bad)  
  407cbb:	dec    ebx
  407cbc:	loope  0x407cf3
  407cbe:	lods   eax,DWORD PTR ds:[esi]
  407cbf:	out    dx,eax
  407cc0:	mov    ecx,0xf0301897
  407cc5:	mov    ds:0x5cba78aa,eax
  407cca:	sub    DWORD PTR [ebp+0x3b],esi
  407ccd:	xor    edi,DWORD PTR cs:[esi-0x32]
  407cd1:	enter  0x3e12,0xcb
  407cd5:	pop    esp
  407cd6:	push   0x42
  407cd8:	aam    0x15
  407cda:	xchg   edi,eax
  407cdb:	xor    eax,0x49e3edac
  407ce0:	jge    0x407c7b
  407ce2:	dec    esp
  407ce3:	sbb    al,0x9
  407ce5:	loop   0x407d56
  407ce7:	enter  0xc387,0x9e
  407ceb:	into   
  407cec:	sub    al,BYTE PTR [ecx+0x59d0c123]
  407cf2:	jae    0x407d11
  407cf4:	inc    edx
  407cf5:	fimul  DWORD PTR [eax-0x1e6f9046]
  407cfb:	call   0x590:0x2cecdfc6
  407d02:	mov    eax,0x9294365c
  407d07:	sub    dl,ch
  407d09:	sub    DWORD PTR [eax-0x3e],ebp
  407d0c:	sti    
  407d0d:	aad    0x46
  407d0f:	adc    dh,ah
  407d11:	loope  0x407d75
  407d13:	push   edi
  407d14:	xlat   BYTE PTR ds:[ebx]
  407d15:	and    ah,dh
  407d17:	lock sbb eax,0xc6174800
  407d1d:	ror    DWORD PTR [eax-0x4],1
  407d20:	mov    edx,0xdc4d562d
  407d25:	int    0x36
  407d27:	and    dl,ch
  407d29:	mov    WORD PTR [edx+0x3db54e21],cs
  407d2f:	icebp  
  407d30:	out    0x3d,al
  407d32:	int3   
  407d33:	mov    esi,0x40094d17
  407d38:	loop   0x407cd0
  407d3a:	push   cs
  407d3b:	dec    ebx
  407d3c:	jp     0x407ccb
  407d3e:	ins    DWORD PTR es:[edi],dx
  407d3f:	pop    ebx
  407d40:	jno    0x407d4b
  407d42:	int    0x25
  407d44:	xor    bl,BYTE PTR [ecx+0x20]
  407d47:	ss (bad) 
  407d4a:	pop    ebp
  407d4b:	or     eax,0xad64471f
  407d50:	cmp    edx,ebp
  407d52:	aas    
  407d53:	inc    ebx
  407d54:	pop    edx
  407d55:	ret    
  407d56:	inc    edi
  407d57:	loope  0x407dbf
  407d59:	pop    ss
  407d5a:	into   
  407d5b:	adc    BYTE PTR [ebx],cl
  407d5d:	gs pop esi
  407d5f:	sahf   
  407d60:	cmp    edi,DWORD PTR [edi-0x1e]
  407d63:	pop    esp
  407d65:	jo     0x407d06
  407d67:	mov    WORD PTR ds:0x81375581,?
  407d6d:	sbb    BYTE PTR [edx-0x52],0xf2
  407d71:	das    
  407d72:	inc    edx
  407d73:	(bad)  
  407d74:	add    al,0xda
  407d76:	pop    es
  407d77:	outs   dx,DWORD PTR ds:[esi]
  407d78:	test   DWORD PTR [ebp-0x461b006e],esi
  407d7e:	xor    ecx,edx
  407d80:	retf   0xbd39
  407d83:	jne    0x407de6
  407d85:	xchg   esp,eax
  407d86:	mov    ss,edi
  407d88:	mov    edi,0x3c3820ec
  407d8d:	cdq    
  407d8e:	stos   DWORD PTR es:[edi],eax
  407d8f:	jno    0x407e0a
  407d91:	mov    eax,0x7c1a1447
  407d96:	(bad)  [ecx+0x301f5f6e]
  407d9c:	(bad)  
  407d9d:	xchg   ebp,eax
  407d9e:	xchg   edx,eax
  407d9f:	stos   DWORD PTR es:[edi],eax
  407da0:	pop    eax
  407da1:	fild   WORD PTR [edi-0x653edd85]
  407da7:	fsub   QWORD PTR [edx+0x3ad09d74]
  407dad:	push   ebx
  407dae:	gs xor eax,0x67adc658
  407db4:	xor    al,0x33
  407db6:	add    eax,0xd21e7ddf
  407dbb:	pop    esp
  407dbc:	and    BYTE PTR [ecx-0x7a],cl
  407dbf:	xchg   ecx,eax
  407dc0:	mov    ebp,0x46fb4b9b
  407dc5:	nop
  407dc6:	outs   dx,BYTE PTR ds:[esi]
  407dc7:	repz inc edi
  407dc9:	xchg   esi,eax
  407dca:	cmp    cl,BYTE PTR [ecx]
  407dcc:	out    dx,eax
  407dcd:	call   0xab87:0xf2e64af8
  407dd4:	inc    ebp
  407dd5:	test   al,0xf1
  407dd7:	aad    0x92
  407dd9:	loopne 0x407d8c
  407ddb:	jnp    0x407d72
  407ddd:	xchg   esi,eax
  407dde:	cmp    al,0x4d
  407de0:	and    al,0x82
  407de2:	fwait
  407de3:	xor    eax,0xe2b2a102
  407de8:	aaa    
  407de9:	sub    al,0xf2
  407deb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dec:	enter  0x4290,0xff
  407df0:	mov    ds:0xe50670ed,eax
  407df5:	leave  
  407df6:	gs xchg esp,eax
  407df8:	lahf   
  407df9:	add    al,0x6d
  407dfb:	add    eax,0x7d5bb617
  407e00:	xchg   esp,eax
  407e01:	xchg   esp,eax
  407e02:	gs (bad) 
  407e05:	repz xor cl,al
  407e08:	pop    ebx
  407e09:	(bad)  
  407e0a:	mov    bh,0x6
  407e0c:	mov    esi,?
  407e0e:	xchg   esi,eax
  407e0f:	std    
  407e10:	jge    0x407db6
  407e12:	jne    0x407daf
  407e14:	mov    esi,0x493a8d8b
  407e19:	pop    ebp
  407e1a:	mov    ch,0xbf
  407e1c:	fidivr WORD PTR [esi-0x1979f44f]
  407e22:	out    dx,al
  407e23:	das    
  407e24:	cdq    
  407e25:	mov    ds:0x111e797f,al
  407e2a:	jno    0x407e08
  407e2c:	dec    ebx
  407e2d:	ret    0x1ab
  407e30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e31:	iret   
  407e32:	and    BYTE PTR [ecx],0x3a
  407e35:	pop    edi
  407e36:	push   ebx
  407e37:	xchg   ebp,eax
  407e38:	repz xchg ebx,eax
  407e3a:	dec    esp
  407e3b:	xchg   ecx,eax
  407e3c:	xchg   esi,eax
  407e3d:	add    cl,dl
  407e3f:	dec    esi
  407e40:	gs aad 0x9
  407e43:	lock loopne 0x407de0
  407e46:	not    BYTE PTR [ebx-0x7c]
  407e49:	test   DWORD PTR cs:[edx+esi*4-0x74],0x48ddfbe
  407e52:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e54:	pushf  
  407e55:	mov    esi,esi
  407e57:	je     0x407ea5
  407e59:	xor    al,0xcd
  407e5b:	inc    edi
  407e5c:	add    dh,BYTE PTR [esi-0x14f86671]
  407e62:	mov    esp,esi
  407e64:	fistp  QWORD PTR [eax]
  407e66:	jecxz  0x407ea1
  407e68:	push   0xffffff9a
  407e6a:	inc    edx
  407e6b:	jb     0x407e38
  407e6d:	clc    
  407e6e:	cmp    eax,0xec564c22
  407e73:	and    cl,BYTE PTR [ecx*1+0x2edbec94]
  407e7a:	ret    0x8ac4
  407e7d:	pop    ebp
  407e7e:	vmwrite esp,DWORD PTR [edx]
  407e81:	push   esi
  407e82:	pop    ds
  407e83:	pop    ebx
  407e84:	xchg   ebp,eax
  407e85:	(bad)  [edx+0x679d5433]
  407e8b:	pop    ecx
  407e8c:	test   eax,0x6e1389d9
  407e91:	cdq    
  407e92:	xchg   ebx,eax
  407e93:	mov    bh,0x24
  407e95:	xor    DWORD PTR [esi+0x7f765d60],esp
  407e9b:	or     ecx,DWORD PTR [edi+0x2]
  407e9e:	cmp    BYTE PTR fs:[edi+edi*2+0x38f0708],al
  407ea6:	xchg   esp,eax
  407ea7:	push   ebx
  407ea8:	ror    al,0xdf
  407eab:	cmp    DWORD PTR [ebp+0x53b241fc],ebx
  407eb1:	int3   
  407eb2:	and    al,0x97
  407eb4:	xchg   esp,eax
  407eb5:	dec    edx
  407eb6:	xchg   esi,eax
  407eb7:	mov    esi,0xaa8dacc6
  407ebc:	sub    DWORD PTR [ecx+0xc],esp
  407ebf:	pop    eax
  407ec0:	push   esp
  407ec1:	int3   
  407ec2:	test   al,0xcb
  407ec4:	out    0xc4,eax
  407ec6:	sub    BYTE PTR ds:0x652e385e,ch
  407ecc:	and    esp,DWORD PTR [ebp+0x30]
  407ecf:	mov    al,0xdd
  407ed1:	repnz cld 
  407ed3:	and    cl,ah
  407ed5:	clc    
  407ed6:	jecxz  0x407f1a
  407ed8:	push   edx
  407ed9:	mov    ds:0xed71a2ef,eax
  407ede:	cmp    DWORD PTR [ebp+0x3dc5e32c],esp
  407ee4:	daa    
  407ee5:	test   eax,0x3e6926cc
  407eea:	into   
  407eeb:	call   0x2ead0052
  407ef0:	fstp   TBYTE PTR [ebx+ecx*4]
  407ef3:	adc    BYTE PTR [edi-0x38],bl
  407ef6:	or     BYTE PTR [ecx-0x10],bh
  407ef9:	retf   0x6b3
  407efc:	mov    ss,WORD PTR [ecx]
  407efe:	pandn  mm5,QWORD PTR [edx]
  407f01:	add    DWORD PTR [ecx+0xe2a33f],eax
  407f07:	lahf   
  407f08:	data16 aam 0xa8
  407f0b:	xchg   esp,eax
  407f0c:	stos   DWORD PTR es:[edi],eax
  407f0d:	test   BYTE PTR [ebx+0x317ab21c],dh
  407f13:	rcl    dh,cl
  407f15:	jmp    0x69e6059d
  407f1a:	pop    ebp
  407f1b:	and    eax,esi
  407f1d:	cli    
  407f1e:	xchg   edx,eax
  407f1f:	int    0x7b
  407f21:	call   0x2ba75563
  407f26:	mov    eax,0x4dbad57b
  407f2b:	js     0x407f1c
  407f2d:	xchg   edi,eax
  407f2e:	test   DWORD PTR [esi],ecx
  407f30:	add    al,0x18
  407f32:	jmp    DWORD PTR [ebx-0x11]
  407f35:	cmp    BYTE PTR [eax+ebx*2+0x70],al
  407f39:	inc    ebp
  407f3a:	ud1    eax,DWORD PTR [esi]
  407f3d:	scas   al,BYTE PTR es:[edi]
  407f3e:	sub    esp,DWORD PTR [eax+0x71]
  407f41:	push   ds
  407f42:	gs mov ebp,0xe494e864
  407f48:	mov    edi,0xab0748a2
  407f4d:	gs adc al,0xc
  407f50:	sbb    BYTE PTR [edx],bh
  407f52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f53:	add    ch,cl
  407f55:	push   ss
  407f56:	xchg   esi,ebx
  407f58:	enter  0x9a6d,0xdb
  407f5c:	xchg   ecx,eax
  407f5d:	xchg   esi,eax
  407f5e:	adc    al,0x5b
  407f60:	loopne 0x407f98
  407f62:	push   ebp
  407f63:	sahf   
  407f64:	cmp    al,0xa0
  407f66:	mov    esp,0x331cfab9
  407f6b:	arpl   WORD PTR [esi],si
  407f6d:	dec    eax
  407f6e:	fcom   DWORD PTR [ebp+0x50]
  407f71:	xor    esp,DWORD PTR [ebx]
  407f73:	sbb    ecx,DWORD PTR [eax+0x800b043]
  407f79:	rol    DWORD PTR [edx],cl
  407f7b:	sbb    edx,DWORD PTR [edx+ecx*2-0x7d426d0d]
  407f82:	or     ebp,DWORD PTR [eax]
  407f84:	in     eax,dx
  407f85:	inc    edi
  407f86:	adc    edx,DWORD PTR [eax]
  407f88:	push   cs
  407f89:	inc    ebp
  407f8a:	and    al,0xaa
  407f8c:	and    edx,ebp
  407f8e:	add    al,0x1c
  407f90:	inc    ebx
  407f91:	add    dl,BYTE PTR [ebx+0x71]
  407f94:	xchg   ecx,eax
  407f95:	sub    dl,BYTE PTR [esi+0x4a]
  407f98:	outs   dx,DWORD PTR ds:[esi]
  407f99:	test   DWORD PTR [ebp-0x15],edx
  407f9c:	in     al,dx
  407f9d:	add    BYTE PTR [edi+eax*1-0x550d0590],ch
  407fa4:	iret   
  407fa5:	sar    al,cl
  407fa7:	inc    ebp
  407fa8:	push   ss
  407fa9:	in     al,dx
  407faa:	dec    edi
  407fab:	mov    edi,0xff4ad7e2
  407fb0:	call   0x370a7a58
  407fb5:	sub    BYTE PTR [edx],ch
  407fb7:	jo     0x407fbc
  407fb9:	hlt    
  407fba:	test   BYTE PTR [ebp-0x31],0x6
  407fbe:	ins    BYTE PTR es:[edi],dx
  407fbf:	xor    eax,0xe9a09bc4
  407fc4:	pop    edx
  407fc5:	dec    ebx
  407fc6:	dec    ebp
  407fc7:	mov    ch,0x48
  407fc9:	loope  0x40804a
  407fcb:	out    0xdc,al
  407fcd:	rcr    BYTE PTR [ebp+0x5911bbc1],cl
  407fd3:	fimul  WORD PTR [edi]
  407fd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fd6:	rcl    BYTE PTR [esi],cl
  407fd8:	mov    ecx,0x78f236ae
  407fdd:	mov    ecx,DWORD PTR [eax-0x7e]
  407fe0:	jecxz  0x40802f
  407fe2:	inc    ecx
  407fe3:	push   edx
  407fe4:	fwait
  407fe5:	inc    ebp
  407fe6:	mov    ebp,0x484badda
  407feb:	dec    ecx
  407fec:	adc    DWORD PTR [ecx+0x69],ebp
  407fef:	call   0xb8b56dd0
  407ff4:	imul   eax,DWORD PTR [edi+0x59129e83],0x4b
  407ffb:	pop    ax
  407ffd:	push   edx
  407ffe:	adc    ah,BYTE PTR [ebx-0x67]
  408001:	les    ecx,FWORD PTR [eax-0x34528ad7]
  408007:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408008:	inc    ebx
  408009:	lods   al,BYTE PTR ds:[esi]
  40800a:	(bad)  
  40800b:	sub    ecx,DWORD PTR [ebx]
  40800d:	mov    esp,0xb39f4db6
  408012:	iret   
  408013:	outs   dx,DWORD PTR ds:[esi]
  408014:	sub    BYTE PTR [eax-0x49375c35],dl
  40801a:	fld    DWORD PTR [esi+0x78]
  40801d:	xor    eax,0xf281b3c7
  408022:	lahf   
  408023:	pop    ebx
  408024:	push   0x15
  408026:	hlt    
  408027:	lea    ebp,[ecx-0x66be1334]
  40802d:	push   ebx
  40802e:	aam    0xeb
  408030:	popa   
  408031:	sbb    eax,0x16fcb77
  408036:	(bad)  
  408037:	mov    WORD PTR [esi-0x268a37c1],gs
  40803d:	mov    ecx,0x7046874b
  408042:	ins    DWORD PTR es:[edi],dx
  408043:	inc    ebx
  408044:	dec    eax
  408045:	bnd jo 0x4080a5
  408048:	push   0xd
  40804a:	int3   
  40804b:	xchg   edx,eax
  40804c:	hlt    
  40804d:	inc    ebp
  40804e:	inc    ebp
  40804f:	into   
  408050:	mov    edx,0x91183a6b
  408055:	dec    ecx
  408056:	das    
  408057:	cmc    
  408058:	cmc    
  408059:	adc    edx,esp
  40805b:	sbb    edx,ebx
  40805d:	cmp    al,0x56
  40805f:	sub    al,0x4e
  408061:	mov    BYTE PTR [ebx+0x41],dl
  408064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408065:	clc    
  408066:	pop    edi
  408067:	lea    ebp,[edx]
  408069:	je     0x408001
  40806b:	ret    
  40806c:	jb     0x408029
  40806e:	imul   esi,DWORD PTR [ebp-0x41],0x3c
  408072:	es mov esi,0x79b25553
  408078:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408079:	loope  0x4080da
  40807b:	lods   eax,DWORD PTR ds:[esi]
  40807c:	cdq    
  40807d:	aad    0xfe
  40807f:	adc    dl,BYTE PTR [edx-0x19]
  408082:	arpl   WORD PTR [edx+0x4c3b7eb1],bp
  408088:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408089:	jae    0x408060
  40808b:	repz icebp 
  40808d:	xchg   esi,edx
  40808f:	sbb    BYTE PTR [ebx],0x4b
  408092:	and    ecx,ebx
  408094:	xor    eax,0x6704eee3
  408099:	cli    
  40809a:	js     0x408117
  40809c:	mov    bh,0x96
  40809e:	mov    ecx,0xbafa8079
  4080a3:	jmp    0xe8ef4e41
  4080a8:	push   cs
  4080a9:	int3   
  4080aa:	aad    0xe4
  4080ac:	sbb    bl,BYTE PTR [edi]
  4080ae:	mov    eax,0x5d42ba03
  4080b3:	xor    cl,cl
  4080b5:	mov    ebp,DWORD PTR ds:0xc9daf0b0
  4080bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080bc:	ss jo  0x408063
  4080bf:	push   0xffffffe0
  4080c1:	(bad)  
  4080c3:	gs enter 0x8711,0x39
  4080c8:	add    al,0x9c
  4080ca:	inc    ebp
  4080cb:	push   ds
  4080cc:	mov    ds:0x7324947e,al
  4080d1:	popf   
  4080d2:	imul   esi,DWORD PTR [eax+0x512e5637],0xfffffff5
  4080d9:	adc    eax,ecx
  4080db:	or     cl,BYTE PTR ds:0xe3b40747
  4080e1:	ret    
  4080e2:	add    al,0xa8
  4080e4:	fcom   QWORD PTR [ecx+0x23da91c7]
  4080ea:	stc    
  4080eb:	or     BYTE PTR [ebx-0x3a],dl
  4080ee:	add    edi,DWORD PTR [edx+0x28]
  4080f1:	cdq    
  4080f2:	test   eax,0xe79af976
  4080f7:	dec    ebx
  4080f8:	pop    ecx
  4080f9:	ins    BYTE PTR es:[edi],dx
  4080fa:	retf   
  4080fb:	sbb    bh,BYTE PTR ds:0x85d861b
  408101:	arpl   dx,si
  408103:	test   al,0x1a
  408105:	icebp  
  408106:	push   ebx
  408107:	iret   
  408108:	pop    ss
  408109:	adc    BYTE PTR [edi],dl
  40810b:	fstp   TBYTE PTR [edi-0x37c692c5]
  408111:	test   BYTE PTR [edi*4+0x382338a0],dl
  408118:	sbb    BYTE PTR [eax-0x2e127cb2],cl
  40811e:	fmul   st,st(6)
  408120:	sti    
  408121:	xlat   BYTE PTR ds:[ebx]
  408122:	stos   BYTE PTR es:[edi],al
  408123:	mov    ebp,0x48c595fb
  408128:	xor    BYTE PTR [edx-0x2d7c2d09],0xd8
  40812f:	cwde   
  408130:	outs   dx,DWORD PTR ds:[esi]
  408131:	in     eax,0x1
  408133:	pop    ds
  408134:	mov    bh,0xb1
  408136:	dec    ebp
  408137:	ja     0x4080c2
  408139:	and    al,0xb7
  40813b:	mov    ch,0x2f
  40813d:	sti    
  40813e:	lea    esi,[edx+ebp*4+0x6af94114]
  408145:	jle    0x4080f9
  408147:	push   edx
  408148:	pop    ecx
  408149:	push   es
  40814a:	jl     0x40815e
  40814c:	push   esp
  40814d:	mov    edi,0x2b8691a6
  408152:	fdiv   QWORD PTR [edi-0x1b]
  408155:	jg     0x4081a2
  408157:	ss pop esi
  408159:	ret    0x83b1
  40815c:	pop    ds
  40815d:	add    BYTE PTR ds:0x1ed40309,al
  408163:	mov    ch,0x6b
  408165:	cwde   
  408166:	push   esp
  408167:	aas    
  408168:	lea    eax,[ebx]
  40816a:	mov    edi,0x2f4d5cec
  40816f:	push   esp
  408170:	sub    eax,0xc41fb17
  408175:	push   eax
  408176:	jp     0x408174
  408178:	clc    
  408179:	test   DWORD PTR [esp+edi*4],edx
  40817c:	enter  0xa0f4,0x7c
  408180:	inc    edx
  408181:	jae    0x408163
  408183:	inc    esp
  408184:	div    DWORD PTR [ebx-0x639566a4]
  40818a:	gs dec ebx
  40818c:	out    0x10,al
  40818e:	sub    DWORD PTR [ecx-0x27],edx
  408191:	mov    cl,0x97
  408193:	push   0x42290d5c
  408198:	je     0x40813e
  40819a:	ds xor eax,0x5569a813
  4081a0:	sar    ebx,cl
  4081a2:	push   eax
  4081a3:	aam    0x13
  4081a5:	lods   eax,DWORD PTR ds:[esi]
  4081a6:	jp     0x4081e9
  4081a8:	pop    esi
  4081a9:	sub    eax,0xd7b49563
  4081ae:	into   
  4081af:	(bad)  
  4081b0:	or     cl,BYTE PTR [ebx]
  4081b2:	es cdq 
  4081b4:	outs   dx,BYTE PTR ds:[esi]
  4081b5:	in     al,dx
  4081b6:	jecxz  0x4081e9
  4081b8:	mov    esi,DWORD PTR [ecx]
  4081ba:	inc    edi
  4081bb:	or     al,0x67
  4081bd:	mov    ds:0x8486178d,eax
  4081c2:	or     bl,ch
  4081c4:	dec    eax
  4081c5:	and    bl,BYTE PTR [ebp-0x2a]
  4081c8:	pushf  
  4081c9:	inc    ecx
  4081ca:	(bad)  
  4081cc:	mov    ebp,0xaa7a3c58
  4081d1:	popf   
  4081d2:	inc    ebx
  4081d3:	push   edi
  4081d4:	cmp    al,0x4b
  4081d6:	jnp    0x4081f7
  4081d8:	mov    edx,0xf8b70579
  4081dd:	(bad)  
  4081de:	lea    esp,[edx]
  4081e0:	push   edx
  4081e1:	test   eax,0x434cd1da
  4081e6:	lahf   
  4081e7:	push   ecx
  4081e8:	out    0xcb,al
  4081ea:	mov    dh,0x14
  4081ec:	cld    
  4081ed:	mov    eax,ds:0x96c2f670
  4081f2:	inc    ebp
  4081f3:	mov    ebp,0xfedf9cb
  4081f8:	xchg   edx,eax
  4081f9:	jo     0x4081f2
  4081fb:	mov    ss,WORD PTR ds:0x937e89ee
  408201:	jmp    0x40818b
  408203:	adc    cl,BYTE PTR [edi]
  408205:	test   bl,dh
  408207:	ja     0x408254
  408209:	and    eax,0xab8534fb
  40820e:	sar    esi,cl
  408210:	popf   
  408211:	pop    esp
  408212:	and    DWORD PTR [ebx-0x190848d0],edi
  408218:	cmc    
  408219:	or     BYTE PTR [eax-0x730c331e],0x0
  408220:	push   esi
  408221:	sbb    dh,cl
  408223:	push   esp
  408224:	je     0x4081d5
  408226:	aas    
  408227:	and    bh,BYTE PTR [ebp+0x6e]
  40822a:	out    dx,eax
  40822b:	lea    ebp,[ecx-0x15]
  40822e:	stos   BYTE PTR es:[edi],al
  40822f:	xchg   ebx,eax
  408230:	loope  0x40825b
  408232:	push   edi
  408233:	fdiv   st(6),st
  408235:	aas    
  408236:	inc    esi
  408237:	jb     0x408211
  408239:	cmp    BYTE PTR ds:0x4df3353c,ch
  40823f:	pop    edx
  408240:	pop    eax
  408241:	and    edx,DWORD PTR [ecx]
  408243:	test   eax,0xfeda0686
  408248:	add    edi,esi
  40824a:	es xor eax,0x76e7699a
  408250:	scas   al,BYTE PTR es:[edi]
  408251:	sbb    al,0x8c
  408253:	jnp    0x408242
  408255:	push   eax
  408256:	push   esi
  408257:	bound  ecx,QWORD PTR [edx+ebx*8-0x60]
  40825b:	cli    
  40825c:	cmp    DWORD PTR [ebp-0x21],0x51
  408260:	mov    WORD PTR [ebx],es
  408262:	mov    ch,0x78
  408264:	ss pop eax
  408266:	cmp    al,0x83
  408268:	rol    DWORD PTR [eax+ebp*1-0x6e],1
  40826c:	jnp    0x4081fc
  40826e:	or     eax,0xbd01d65b
  408273:	adc    ebp,DWORD PTR [ebx]
  408275:	add    BYTE PTR [eax-0x5b],ch
  408278:	retf   
  408279:	cmc    
  40827a:	sar    BYTE PTR [edi+0x10],1
  40827d:	and    al,0xfc
  40827f:	je     0x4082dd
  408281:	imul   ecx,DWORD PTR [edi+0x43],0x4d
  408285:	cmp    ebx,DWORD PTR [eax-0x59]
  408288:	push   esp
  408289:	mov    bh,0x9b
  40828b:	dec    esi
  40828c:	jns    0x408222
  40828e:	das    
  40828f:	imul   ecx
  408291:	sub    al,0xe4
  408293:	test   BYTE PTR [esi-0x5b],dh
  408296:	cmp    edx,edx
  408298:	mov    esp,0x58fc5528
  40829d:	(bad)  
  40829e:	js     0x408254
  4082a0:	cmp    DWORD PTR [edi],esi
  4082a2:	out    dx,eax
  4082a3:	xor    al,0x67
  4082a5:	jne    0x408254
  4082a7:	rol    WORD PTR [edx+0x53d8399],0x87
  4082af:	ss aad 0x4a
  4082b2:	pop    ds
  4082b3:	lods   eax,DWORD PTR ds:[esi]
  4082b4:	fwait
  4082b5:	mov    edx,0x5faa24cf
  4082ba:	adc    DWORD PTR [esi],0xffffff82
  4082bd:	rcr    ebp,0x8f
  4082c0:	mov    esp,0x115980b1
  4082c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082c6:	aaa    
  4082c7:	in     al,dx
  4082c8:	xor    eax,0xc0f29c1
  4082cd:	bound  ebx,QWORD PTR [eax-0x7e]
  4082d0:	inc    edi
  4082d1:	push   ebp
  4082d2:	jbe    0x408352
  4082d4:	bound  ebp,QWORD PTR [edi-0x4c]
  4082d7:	jns    0x408358
  4082d9:	push   0x29
  4082db:	or     al,0xa6
  4082dd:	inc    ebp
  4082de:	(bad)  
  4082df:	jp     0x408343
  4082e1:	pop    ds
  4082e2:	mov    bh,0xe
  4082e4:	or     dl,BYTE PTR [eax]
  4082e6:	jp     0x408332
  4082e8:	loop   0x40835b
  4082ea:	retf   0xde04
  4082ed:	das    
  4082ee:	fisttp QWORD PTR [ecx+ebp*2-0x2b69b852]
  4082f5:	nop
  4082f6:	push   eax
  4082f7:	cmc    
  4082f8:	outs   dx,DWORD PTR ds:[esi]
  4082f9:	jmp    0xd7af:0xd667483c
  408300:	jecxz  0x408369
  408302:	mov    esp,0x8fc6cf26
  408307:	inc    eax
  408308:	leave  
  408309:	jmp    0xf13676e2
  40830e:	fnstcw WORD PTR [esi]
  408310:	nop
  408311:	ins    BYTE PTR es:[edi],dx
  408312:	ins    BYTE PTR es:[edi],dx
  408313:	sahf   
  408314:	add    DWORD PTR [edx],ebx
  408316:	idiv   DWORD PTR [ebp-0x73]
  408319:	inc    edi
  40831a:	fistp  QWORD PTR [ebx+0x75]
  40831d:	cwde   
  40831e:	fisttp WORD PTR ds:0x586163d3
  408324:	iret   
  408325:	ret    0xb14d
  408328:	push   ebp
  408329:	lahf   
  40832a:	jae    0x4082b9
  40832c:	stc    
  40832d:	xor    cl,dh
  40832f:	xor    al,0xc3
  408331:	lods   al,BYTE PTR ds:[esi]
  408332:	mov    WORD PTR [edx-0x5b],?
  408335:	ret    0xaac0
  408338:	mov    dl,0x51
  40833a:	imul   ebp,DWORD PTR [eax-0x7622a657],0xcc5fecf0
  408344:	inc    ebp
  408345:	pop    ss
  408346:	or     DWORD PTR ds:0xf4b644a0,edx
  40834c:	mov    al,ds:0xbba8c70d
  408351:	lods   eax,DWORD PTR ds:[esi]
  408352:	pop    ebp
  408353:	sub    ch,ah
  408355:	or     BYTE PTR [esi-0x4fb081bb],0x60
  40835c:	(bad)  
  408360:	jae    0x40836e
  408362:	in     al,0x63
  408364:	dec    esp
  408365:	(bad)  
  408366:	cdq    
  408367:	fsubr  st(6),st
  408369:	js     0x408369
  40836b:	xchg   ebp,eax
  40836c:	js     0x408346
  40836e:	mov    ecx,0x6ac914a
  408373:	or     eax,0x69925b7e
  408378:	ficomp WORD PTR [ebp-0x4a]
  40837b:	test   eax,0x8945ddc7
  408380:	add    BYTE PTR [ebx-0x12],cl
  408383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408384:	int3   
  408385:	hlt    
  408386:	pop    ebp
  408387:	cs enter 0x2e3,0xb4
  40838c:	pop    ss
  40838d:	push   esp
  40838e:	test   DWORD PTR [edx+0x71],esp
  408391:	and    DWORD PTR [edx+ebx*8],esp
  408394:	jb     0x40833e
  408396:	loope  0x4083a6
  408398:	and    edx,edx
  40839a:	dec    eax
  40839b:	in     al,0xb6
  40839d:	inc    ebp
  40839e:	cmp    BYTE PTR [esi],bl
  4083a0:	xchg   DWORD PTR [ebx-0x69],ebp
  4083a3:	or     BYTE PTR [ecx+eax*1-0x2c],dh
  4083a7:	shl    ebx,1
  4083a9:	addr16 test al,0x2b
  4083ac:	and    al,0xa3
  4083ae:	aas    
  4083af:	jmp    0x408368
  4083b1:	xor    al,0xb1
  4083b3:	and    esp,DWORD PTR [edi+eax*1-0x21]
  4083b7:	push   ebx
  4083b8:	cmp    eax,0xd21967ad
  4083bd:	je     0x4083aa
  4083bf:	shl    DWORD PTR [edi+ebx*1+0x27c30fd8],cl
  4083c6:	in     eax,dx
  4083c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083c8:	pop    esp
  4083c9:	in     al,dx
  4083ca:	jp     0x40838a
  4083cc:	das    
  4083cd:	cli    
  4083ce:	sub    eax,DWORD PTR [edi+0x6bd5d399]
  4083d4:	xchg   DWORD PTR ds:0xabe1dc08,ecx
  4083da:	out    0xec,eax
  4083dc:	cmp    BYTE PTR [ecx-0x69fbab53],dl
  4083e2:	inc    ebx
  4083e3:	daa    
  4083e4:	in     al,dx
  4083e5:	pop    ds
  4083e6:	call   0x9533:0x9857b9e5
  4083ed:	mov    eax,0x3a6e8340
  4083f2:	addr16 ja 0x40842a
  4083f5:	xor    DWORD PTR [ecx-0xee90159],edi
  4083fb:	jns    0x40847b
  4083fd:	mov    ebp,0x86f1c442
  408402:	jecxz  0x4083e6
  408404:	or     bh,BYTE PTR [edi-0x3b]
  408407:	leave  
  408408:	fstp   TBYTE PTR [eax+0x5e92413c]
  40840e:	pop    ebx
  40840f:	leave  
  408410:	ret    0xc
  408413:	push   ebp
  408414:	mov    ebp,esp
  408416:	mov    DWORD PTR ds:0x424184,0xf89c85b5
  408420:	mov    DWORD PTR ds:0x42a00c,0x7dd6
  40842a:	pop    ebp
  40842b:	jmp    0x41b7a1
  408430:	xor    eax,eax
  408432:	or     DWORD PTR ds:0x42b010,0x429008
  40843c:	inc    eax
  40843d:	ret    
  40843e:	push   ebp
  40843f:	mov    ebp,esp
  408441:	sub    esp,0x10
  408444:	sbb    ecx,DWORD PTR ds:0x42d008
  40844a:	mov    eax,0xf89c85b6
  40844f:	mov    edx,DWORD PTR ds:0x42b000
  408455:	add    DWORD PTR ds:0x42c018,edx
  40845b:	mov    DWORD PTR [ebp-0x4],eax
  40845e:	dec    edx
  40845f:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  408466:	mov    DWORD PTR ds:0x42b01c,0x18
  408470:	cmp    DWORD PTR ds:0x42b01c,0x0
  408477:	je     0x4084ad
  40847d:	cmp    DWORD PTR ds:0x42b01c,0x1b
  408484:	jne    0x40849b
  40848a:	push   DWORD PTR [ebp-0x28]
  40848d:	push   0x7565
  408492:	push   DWORD PTR [ebp-0x18]
  408495:	call   DWORD PTR ds:0x425040
  40849b:	mov    edx,DWORD PTR ds:0x42b01c
  4084a1:	dec    edx
  4084a2:	mov    DWORD PTR ds:0x42b01c,edx
  4084a8:	jmp    0x408470
  4084ad:	mov    ecx,DWORD PTR [ebp-0x4]
  4084b0:	xor    edx,DWORD PTR ds:0x42b008
  4084b6:	push   esi
  4084b7:	mov    DWORD PTR ds:0x42c000,0x17
  4084c1:	cmp    DWORD PTR ds:0x42c000,0x0
  4084c8:	je     0x408518
  4084ce:	cmp    DWORD PTR ds:0x42c000,0xa
  4084d5:	jne    0x4084ec
  4084db:	push   0x8fa2
  4084e0:	push   DWORD PTR [ebp-0x24]
  4084e3:	push   DWORD PTR [ebp-0xc]
  4084e6:	call   DWORD PTR ds:0x425044
  4084ec:	cmp    DWORD PTR ds:0x42c000,0xb
  4084f3:	jne    0x408506
  4084f9:	mov    edx,DWORD PTR ds:0x42c000
  4084ff:	dec    edx
  408500:	mov    DWORD PTR ds:0x42c000,edx
  408506:	mov    edx,DWORD PTR ds:0x42c000
  40850c:	dec    edx
  40850d:	mov    DWORD PTR ds:0x42c000,edx
  408513:	jmp    0x4084c1
  408518:	mov    edx,0x7510893
  40851d:	xor    ecx,edx
  40851f:	and    DWORD PTR ds:0x429018,0x2759
  408529:	mov    esi,0x3272db
  40852e:	mov    DWORD PTR ds:0x42b01c,0x64d9
  408538:	push   edi
  408539:	mov    DWORD PTR ds:0x42c000,0x1c
  408543:	cmp    DWORD PTR ds:0x42c000,0x0
  40854a:	je     0x4085a2
  408550:	cmp    DWORD PTR ds:0x42c000,0xb
  408557:	jne    0x408573
  40855d:	push   DWORD PTR [ebp-0xc]
  408560:	push   DWORD PTR [ebp-0x10]
  408563:	push   0x6908
  408568:	push   0x2a1a
  40856d:	call   DWORD PTR ds:0x425048
  408573:	cmp    DWORD PTR ds:0x42c000,0xc
  40857a:	jne    0x40858f
  408580:	xor    edi,edi
  408582:	xor    edi,DWORD PTR ds:0x42c000
  408588:	dec    edi
  408589:	mov    DWORD PTR ds:0x42c000,edi
  40858f:	mov    edi,DWORD PTR ds:0x42c000
  408595:	dec    edi
  408596:	mov    DWORD PTR ds:0x42c000,edi
  40859c:	jmp    0x408543
  4085a1:	dec    edi
  4085a2:	mov    edi,DWORD PTR [ebp+0x10]
  4085a5:	xor    DWORD PTR ds:0x429004,0x6210
  4085af:	add    ecx,esi
  4085b1:	cmp    ecx,edi
  4085b3:	je     0x408678
  4085b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4085bc:	mov    edi,DWORD PTR [ebp+0x10]
  4085bf:	xor    eax,eax
  4085c1:	xor    ecx,edx
  4085c3:	add    ecx,esi
  4085c5:	add    edi,0xfabdbef1
  4085cb:	adc    eax,0xffffffff
  4085ce:	xor    eax,0x0
  4085d1:	mov    DWORD PTR [ebp-0xc],eax
  4085d4:	push   ebx
  4085d5:	xor    ebx,ebx
  4085d7:	xor    edi,0x8a29a123
  4085dd:	mov    eax,ecx
  4085df:	add    eax,0xfabdbef1
  4085e4:	adc    ebx,0xffffffff
  4085e7:	xor    eax,0x8a29a123
  4085ec:	xor    ebx,0x0
  4085ef:	cmp    eax,edi
  4085f1:	jne    0x40860a
  4085f7:	cmp    ebx,DWORD PTR [ebp-0xc]
  4085fa:	je     0x408672
  408600:	jmp    0x40860a
  408605:	mov    esi,0x3272db
  40860a:	mov    eax,DWORD PTR [ebp-0x4]
  40860d:	mov    edi,DWORD PTR [ebp-0x8]
  408610:	xor    edi,edx
  408612:	add    edi,esi
  408614:	mov    esi,DWORD PTR [ebp+0x8]
  408617:	imul   edi,ecx
  40861a:	mov    ebx,DWORD PTR [ebp+0xc]
  40861d:	xor    eax,edx
  40861f:	add    eax,ecx
  408621:	mov    al,BYTE PTR [ebx+eax*1+0x3272db]
  408628:	mov    BYTE PTR [edi+esi*1],al
  40862b:	mov    eax,DWORD PTR [ebp-0x8]
  40862e:	mov    esi,DWORD PTR [ebp+0x10]
  408631:	xor    eax,edx
  408633:	xor    ebx,ebx
  408635:	add    esi,0xfabdbef1
  40863b:	adc    ebx,0xffffffff
  40863e:	lea    ecx,[ecx+eax*1+0x3272db]
  408645:	xor    edi,edi
  408647:	xor    esi,0x8a29a123
  40864d:	xor    ebx,0x0
  408650:	mov    eax,ecx
  408652:	add    eax,0xfabdbef1
  408657:	adc    edi,0xffffffff
  40865a:	xor    eax,0x8a29a123
  40865f:	xor    edi,0x0
  408662:	cmp    eax,esi
  408664:	jne    0x408605
  40866a:	cmp    edi,ebx
  40866c:	jne    0x408605
  408672:	mov    eax,0xf89c85b5
  408677:	pop    ebx
  408678:	pop    edi
  408679:	pop    esi
  40867a:	leave  
  40867b:	ret    0xc
  40867e:	push   ebp
  40867f:	mov    ebp,esp
  408681:	sub    esp,0x78
  408684:	adc    DWORD PTR ds:0x429000,0x42d00c
  40868e:	push   ebx
  40868f:	or     DWORD PTR ds:0x42d000,0x5016
  408699:	push   esi
  40869a:	sbb    DWORD PTR ds:0x42d008,0x6d64
  4086a4:	push   edi
  4086a5:	push   0x1f
  4086a7:	and    DWORD PTR ds:0x42d018,0x1f4a
  4086b1:	lea    eax,[ebp-0x78]
  4086b4:	push   eax
  4086b5:	not    DWORD PTR ds:0x42c008
  4086bb:	push   0x0
  4086bd:	xor    DWORD PTR ds:0x429008,0x2961
  4086c7:	jmp    0x40aa2c
  4086cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086cd:	xchg   esi,eax
  4086ce:	sub    edx,ebp
  4086d0:	out    0x65,eax
  4086d2:	arpl   WORD PTR [ebx+eiz*8+0x421a558d],dx
  4086d9:	mov    edi,0x18504e07
  4086de:	bound  esp,QWORD PTR [edx+0x3a]
  4086e1:	pop    edi
  4086e2:	bound  esp,QWORD PTR [edx+0x30]
  4086e5:	mov    edx,0x516ebc86
  4086ea:	lea    esp,[ebp+0x49df9ccc]
  4086f0:	(bad)  
  4086f2:	and    esp,DWORD PTR [edi+0x32]
  4086f5:	(bad)  
  4086f6:	cmc    
  4086f7:	sub    al,0x3f
  4086f9:	aam    0x6f
  4086fb:	jp     0x4086b4
  4086fd:	adc    BYTE PTR [ebx+ebx*8-0x51134ecd],ah
  408704:	retf   0xc569
  408707:	inc    esi
  408708:	aad    0x42
  40870a:	jle    0x40871e
  40870c:	sub    BYTE PTR [ecx+0x26],dl
  40870f:	sbb    ecx,DWORD PTR ds:0x40b242ab
  408715:	and    eax,0xa88d3b50
  40871a:	jmp    0x4086d7
  40871c:	ss xchg ebx,eax
  40871e:	jnp    0x408785
  408720:	add    BYTE PTR [eax-0x524d51c],0x84
  408727:	cmp    al,0x88
  408729:	mov    ebp,0x2bcc4b59
  40872e:	mov    ds:0x796c905d,al
  408733:	(bad)  
  408734:	loop   0x408718
  408736:	adc    ebx,esp
  408738:	dec    edi
  408739:	and    al,dl
  40873b:	je     0x408733
  40873d:	jae    0x408712
  40873f:	imul   DWORD PTR [esi+0x1c2af889]
  408745:	jge    0x408767
  408747:	mov    eax,ds:0xed0d4cd3
  40874c:	and    DWORD PTR ds:0x8c188fc4,ecx
  408752:	repnz in al,dx
  408754:	ds mov bl,0x89
  408757:	mov    bh,0xdb
  408759:	mov    edx,0x25ed1ff9
  40875e:	mov    bl,0xda
  408760:	or     DWORD PTR [ecx+0x7b],ecx
  408763:	stos   BYTE PTR es:[edi],al
  408764:	shl    bh,cl
  408766:	int    0x4f
  408768:	dec    esi
  408769:	inc    edi
  40876a:	xor    edi,DWORD PTR [edi]
  40876c:	mov    ecx,0xe16bbae8
  408771:	mov    eax,0xb27437d2
  408776:	and    ah,bh
  408778:	add    eax,0x6a90f6ee
  40877d:	sub    edx,DWORD PTR [ebx+0xe]
  408780:	ja     0x40878e
  408782:	mov    al,0x43
  408784:	or     ecx,edx
  408786:	lea    esi,[ecx+0xb40ba73]
  40878c:	xchg   esp,eax
  40878d:	fiadd  DWORD PTR [esi]
  40878f:	in     al,dx
  408790:	clc    
  408791:	(bad)
  408794:	pop    es
  408795:	xchg   edx,eax
  408796:	adc    esp,DWORD PTR [eax-0xf2be480]
  40879c:	ss inc edx
  40879e:	cs ja  0x4087b0
  4087a1:	out    0xd9,eax
  4087a3:	push   ebx
  4087a4:	scas   eax,DWORD PTR es:[edi]
  4087a5:	push   ecx
  4087a6:	cmp    ch,dl
  4087a8:	mov    eax,ds:0x73d8e22f
  4087ad:	sti    
  4087ae:	pop    ss
  4087af:	int3   
  4087b0:	sahf   
  4087b1:	pop    ss
  4087b2:	jbe    0x4087e3
  4087b4:	jmp    0x408761
  4087b6:	(bad)  
  4087b7:	ss call 0x319cfe96
  4087bd:	mov    esi,0x7622ca54
  4087c2:	faddp  st(2),st
  4087c4:	loopne 0x4087f4
  4087c6:	mul    al
  4087c8:	sub    eax,0x3d265e5c
  4087cd:	fcmovnb st,st(7)
  4087cf:	dec    ebp
  4087d0:	lds    edi,FWORD PTR [esi]
  4087d2:	dec    esi
  4087d3:	sub    dl,bh
  4087d5:	mov    edx,0x9347c7ce
  4087da:	xor    DWORD PTR [eax+0x5eacb666],edi
  4087e0:	into   
  4087e1:	dec    ebp
  4087e2:	dec    esp
  4087e3:	sub    ah,BYTE PTR [ebp-0x575e4aca]
  4087e9:	fimul  DWORD PTR [ecx+0x6e]
  4087ec:	inc    edi
  4087ed:	(bad)  
  4087ee:	(bad)  
  4087ef:	fcmovu st,st(2)
  4087f1:	sbb    BYTE PTR [edx-0x192344d3],dl
  4087f7:	dec    eax
  4087f8:	mov    al,ds:0x2b06c0c1
  4087fd:	mov    edi,0x6ca7b192
  408802:	sbb    al,0x71
  408804:	dec    edx
  408805:	(bad)  
  408806:	rcr    BYTE PTR [edx-0x10],cl
  408809:	sbb    ch,BYTE PTR [edx-0x26]
  40880c:	test   DWORD PTR [ebx],edx
  40880e:	shl    DWORD PTR [ecx-0x20],1
  408811:	mov    esp,0xd3f2a445
  408816:	hlt    
  408817:	cmc    
  408818:	fcomi  st,st(2)
  40881a:	out    dx,al
  40881b:	fst    QWORD PTR [ebp-0x1588d8ad]
  408821:	dec    esi
  408822:	and    BYTE PTR [ebx+0x32],al
  408825:	je     0x408807
  408827:	mov    ds:0x32aa119,al
  40882c:	clc    
  40882d:	mov    ebp,0xade4f94f
  408832:	cld    
  408833:	test   BYTE PTR [eax],0x55
  408836:	out    dx,eax
  408837:	mov    edi,0xd81b0bcb
  40883c:	pop    eax
  40883d:	jb     0x4087bf
  40883f:	pop    es
  408840:	jo     0x408861
  408842:	(bad)  
  408843:	mov    ecx,0x7d72f7da
  408848:	dec    edx
  408849:	aam    0xcd
  40884b:	push   edx
  40884c:	enter  0xb333,0x95
  408850:	imul   edx,DWORD PTR [edx],0xffffff8b
  408853:	aam    0x55
  408855:	(bad)  
  408856:	fist   DWORD PTR [edi]
  408858:	sar    DWORD PTR [ebp+0x25421da2],1
  40885e:	jp     0x40887f
  408860:	push   edx
  408861:	push   eax
  408862:	in     eax,0xf4
  408864:	sbb    dh,BYTE PTR [ecx-0x9]
  408867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408868:	fmul   st,st(5)
  40886a:	jne    0x408865
  40886c:	xor    cl,bh
  40886e:	add    ebp,DWORD PTR [esi+eax*8]
  408871:	fidiv  WORD PTR ds:0xdd9a3755
  408877:	out    dx,eax
  408878:	mov    ebx,0x129c80fa
  40887d:	popw   ss
  40887f:	cld    
  408880:	dec    esi
  408881:	ror    BYTE PTR ds:0xc47a71e4,cl
  408887:	nop
  408888:	shl    DWORD PTR [ebx-0x9],cl
  40888b:	cmc    
  40888c:	pop    esi
  40888d:	jns    0x4088a6
  40888f:	pop    ds
  408890:	or     BYTE PTR [ebx+0x790e100],0x21
  408897:	jbe    0x408872
  408899:	inc    eax
  40889b:	and    DWORD PTR [eax+0x60ebc7f1],edi
  4088a1:	or     al,0xdc
  4088a3:	mov    ch,0x8d
  4088a5:	inc    edi
  4088a6:	sahf   
  4088a7:	fsubr  QWORD PTR [esi+0x32]
  4088aa:	dec    edi
  4088ab:	push   ds
  4088ac:	sbb    al,0xe7
  4088ae:	int    0x7b
  4088b0:	jne    0x40887a
  4088b2:	add    dl,cl
  4088b4:	mov    esp,0x67eb16dd
  4088b9:	leave  
  4088ba:	jmp    FWORD PTR [edx-0x2de09e56]
  4088c0:	enter  0xada1,0x1c
  4088c4:	and    eax,0x4ac281c
  4088c9:	mov    dh,0x45
  4088cb:	cmp    al,0xd2
  4088cd:	mov    dh,0xd2
  4088cf:	outs   dx,DWORD PTR ds:[esi]
  4088d0:	sbb    cl,bl
  4088d2:	test   eax,esi
  4088d4:	fst    DWORD PTR [edi]
  4088d6:	jo     0x408891
  4088d8:	sahf   
  4088d9:	cmp    al,0x1d
  4088db:	cmp    al,0xf
  4088dd:	push   esi
  4088de:	or     BYTE PTR [eax],ah
  4088e0:	push   ebx
  4088e1:	scas   eax,DWORD PTR es:[edi]
  4088e2:	jae    0x408891
  4088e4:	je     0x4088bd
  4088e6:	mov    edx,0x88dcb8b3
  4088eb:	or     bh,BYTE PTR [ebp-0x3a]
  4088ee:	xor    eax,0xe9d007f1
  4088f3:	mov    dl,0xc0
  4088f5:	icebp  
  4088f6:	aam    0x8d
  4088f8:	cwde   
  4088f9:	add    eax,0x91aa6518
  4088fe:	popa   
  4088ff:	sub    eax,0x2e7a6dae
  408904:	aam    0xd5
  408906:	mul    DWORD PTR [ebp-0x47]
  408909:	dec    esp
  40890a:	std    
  40890b:	sbb    DWORD PTR [ebp*2-0x3271793e],esp
  408912:	repz arpl WORD PTR [esi+ecx*1+0x2c],si
  408917:	mov    ds:0x117c162d,al
  40891c:	mov    eax,ds:0xc219abfb
  408921:	mov    ds:0x25f7771f,al
  408926:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408927:	jmp    0x94d78719
  40892c:	dec    ebp
  40892d:	sbb    bh,0xa3
  408930:	das    
  408931:	arpl   di,si
  408933:	test   al,0xc2
  408935:	mov    eax,DWORD PTR [edx+0x69fb23a3]
  40893b:	cmp    bl,ch
  40893d:	fsubr  DWORD PTR [edx+0x4a03d5f]
  408943:	fsub   st,st(0)
  408945:	gs out 0xd4,al
  408948:	ds inc esp
  40894a:	retf   
  40894b:	sbb    ah,ah
  40894d:	test   BYTE PTR ds:0xd5328a17,al
  408953:	sbb    al,0xf7
  408955:	sbb    DWORD PTR [edx],edx
  408957:	lahf   
  408958:	test   eax,0xe5d88026
  40895d:	dec    ecx
  40895e:	enter  0x3276,0x69
  408962:	daa    
  408963:	push   ss
  408964:	and    bl,ah
  408966:	xchg   BYTE PTR [eax-0x23211be2],bh
  40896c:	fs cs xchg ecx,eax
  40896f:	pop    ebx
  408970:	xchg   DWORD PTR [ecx+0x39],esp
  408973:	jb     0x40894e
  408975:	cld    
  408976:	cmc    
  408977:	ds aad 0x67
  40897a:	pop    es
  40897b:	push   0x51
  40897d:	cmp    DWORD PTR ds:[esi-0x36],0xa6c3b8ca
  408985:	sub    eax,DWORD PTR [esp+edi*1]
  408988:	imul   esp,DWORD PTR [esi],0xed7c60f2
  40898e:	repz sub dh,BYTE PTR [esi-0x7c]
  408992:	inc    edx
  408993:	adc    DWORD PTR [edi+0x1a],0x1d
  408997:	xchg   esi,eax
  408998:	test   al,0xf4
  40899a:	cld    
  40899b:	aam    0x6a
  40899d:	fwait
  40899e:	pop    ss
  40899f:	ret    
  4089a0:	mov    ah,0xf3
  4089a2:	dec    esi
  4089a3:	jno    0x408970
  4089a5:	and    ecx,DWORD PTR [ebx]
  4089a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089a8:	(bad)  
  4089a9:	lds    ecx,FWORD PTR [edx-0x37f0df30]
  4089af:	sub    esi,DWORD PTR [ecx+0x71]
  4089b2:	sar    DWORD PTR [ebx+0x684e8ee0],1
  4089b8:	dec    ecx
  4089b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089ba:	mov    esi,0x193dc199
  4089bf:	and    edx,edx
  4089c1:	or     BYTE PTR [edi+0x5fcad2fb],ah
  4089c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089c8:	mov    ebx,0x2905d874
  4089cd:	xor    ch,dl
  4089cf:	inc    eax
  4089d0:	shr    DWORD PTR [edx-0x3f812d63],cl
  4089d6:	adc    dh,al
  4089d8:	or     edi,DWORD PTR [edi]
  4089da:	shl    DWORD PTR [ebx-0x441ca872],1
  4089e0:	or     eax,0xb35c28aa
  4089e5:	and    dl,bh
  4089e7:	mov    ch,0xe4
  4089e9:	imul   edi,DWORD PTR [ecx-0x27],0x4998ed08
  4089f0:	out    dx,eax
  4089f1:	hlt    
  4089f2:	in     al,dx
  4089f3:	inc    ebx
  4089f4:	iret   
  4089f5:	cli    
  4089f6:	and    ch,BYTE PTR [eax+eax*8+0x4592ff04]
  4089fd:	fs loope 0x408a1e
  408a00:	mov    dl,BYTE PTR ds:0xbce55297
  408a06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a07:	adc    al,BYTE PTR [eax+0x19]
  408a0a:	inc    ecx
  408a0b:	mov    ds:0xf570b263,al
  408a10:	mov    al,ds:0xbba8483b
  408a15:	leave  
  408a16:	and    eax,0xef924ab1
  408a1b:	fisttp WORD PTR [ebx]
  408a1d:	xor    al,0xcd
  408a1f:	addr16 sar bh,0x74
  408a23:	add    edx,DWORD PTR [ebp-0x74a88906]
  408a29:	iret   
  408a2a:	test   al,0xa0
  408a2c:	(bad)  
  408a2d:	adc    DWORD PTR [esi+0x6cb99aaf],ebx
  408a33:	fs fsubrp st(0),st
  408a36:	mov    ah,BYTE PTR [edx*4-0x54d28478]
  408a3d:	push   0x39
  408a3f:	and    dl,BYTE PTR [edx]
  408a41:	imul   ebp,DWORD PTR [ebx+ebx*2+0x4a4889bc],0x904588f4
  408a4c:	dec    eax
  408a4d:	push   edi
  408a4e:	xor    edx,edx
  408a50:	mov    ebx,0xf62a151b
  408a55:	dec    edx
  408a56:	and    ecx,DWORD PTR [esp+ebx*8]
  408a59:	enter  0x7c75,0x5a
  408a5d:	inc    eax
  408a5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a5f:	mov    edx,0x50ac308b
  408a64:	les    ebx,FWORD PTR [eax+0x1f686815]
  408a6a:	cmp    al,0x6
  408a6c:	pop    edx
  408a6d:	sbb    esi,DWORD PTR [edi-0x8ffcc90]
  408a73:	inc    eax
  408a74:	push   edx
  408a75:	fistp  WORD PTR [edi]
  408a77:	outs   dx,BYTE PTR ds:[esi]
  408a78:	or     bl,ah
  408a7a:	aaa    
  408a7b:	xchg   esi,eax
  408a7c:	push   eax
  408a7d:	mov    ebx,0x647714fc
  408a82:	pop    esp
  408a83:	aaa    
  408a84:	inc    ebp
  408a85:	mov    dl,0x93
  408a87:	mov    eax,0x41fe2fa
  408a8c:	nop
  408a8d:	lds    esi,FWORD PTR [ebx+0x67]
  408a90:	or     DWORD PTR [eax-0x85eb95c],eax
  408a96:	cmp    BYTE PTR [edi+esi*2-0x3],cl
  408a9a:	add    DWORD PTR [esi+eax*8],esp
  408a9d:	int3   
  408a9e:	(bad)  
  408a9f:	jo     0x408a9a
  408aa1:	inc    esi
  408aa2:	test   eax,0x21085521
  408aa7:	add    al,0x25
  408aa9:	mov    eax,fs:0x36c2d46d
  408aaf:	jp     0x408a92
  408ab1:	sub    eax,ebx
  408ab3:	push   edi
  408ab4:	nop
  408ab5:	lods   al,BYTE PTR ds:[esi]
  408ab6:	test   al,0xb
  408ab8:	jmp    0x408b1e
  408aba:	jae    0x408a46
  408abc:	pop    ebx
  408abd:	mov    eax,ebx
  408abf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ac0:	leave  
  408ac1:	scas   al,BYTE PTR es:[edi]
  408ac2:	sahf   
  408ac3:	dec    ecx
  408ac4:	mov    eax,0x1ad9c27b
  408ac9:	sbb    DWORD PTR [ecx+0x453bae69],0xffffffa0
  408ad0:	clc    
  408ad1:	(bad)  
  408ad2:	fs imul bh
  408ad5:	push   cs
  408ad6:	jg     0x408b33
  408ad8:	dec    edi
  408ad9:	aaa    
  408ada:	add    esp,DWORD PTR [ebp-0x79c3f94f]
  408ae0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ae1:	cmp    ecx,esp
  408ae3:	mov    DWORD PTR [edi-0x1d7f719a],esi
  408ae9:	dec    edi
  408aea:	daa    
  408aeb:	into   
  408aec:	and    DWORD PTR [eax-0x6c],esp
  408aef:	fnstsw WORD PTR [ecx+0x5e]
  408af2:	xor    ebp,DWORD PTR [ecx+0x2cc2346b]
  408af8:	add    DWORD PTR [eax+0x4a3d1c1],edi
  408afe:	ss sti 
  408b00:	and    DWORD PTR [ecx+0x14],edx
  408b03:	in     eax,dx
  408b04:	sbb    al,0x4e
  408b06:	pop    ds
  408b07:	sahf   
  408b08:	sbb    cl,BYTE PTR [ecx-0x5c262ca5]
  408b0e:	adc    eax,0x58c8c72d
  408b13:	cmp    esi,0x61
  408b16:	int3   
  408b17:	push   0x74b15aed
  408b1c:	in     eax,0x5f
  408b1e:	push   eax
  408b1f:	push   ss
  408b20:	dec    eax
  408b21:	call   0xe498:0xa244c975
  408b28:	ror    BYTE PTR [edx+0x4d],1
  408b2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b2c:	xchg   ebx,eax
  408b2d:	mov    esp,ss
  408b2f:	inc    esp
  408b30:	xchg   BYTE PTR [edx-0x244da379],cl
  408b36:	ds loope 0x408b62
  408b39:	mov    edi,0x6035d15a
  408b3e:	mov    ds:0xf06d8ca5,al
  408b43:	mov    eax,DWORD PTR [ecx]
  408b45:	jns    0x408b57
  408b47:	push   0x589d96d6
  408b4c:	xchg   edx,eax
  408b4d:	and    al,bh
  408b4f:	dec    ecx
  408b50:	jecxz  0x408b2c
  408b52:	stc    
  408b53:	push   ebp
  408b54:	pop    es
  408b55:	cmp    edi,DWORD PTR ds:0xbd9767bb
  408b5b:	ja     0x408b5c
  408b5d:	outs   dx,DWORD PTR ds:[esi]
  408b5e:	fld    TBYTE PTR [ebx]
  408b60:	lea    ecx,[esi-0x14]
  408b63:	push   ecx
  408b64:	and    al,0xf6
  408b66:	adc    ecx,esp
  408b68:	gs sub eax,0x94d7b5d4
  408b6e:	push   0xffffffc5
  408b70:	mov    ebx,0xcc5f529a
  408b75:	stc    
  408b76:	push   esp
  408b77:	push   ss
  408b78:	cmp    ebx,DWORD PTR [eax]
  408b7a:	and    ebp,esi
  408b7c:	push   0x6952bfce
  408b81:	mov    bl,0xb4
  408b83:	fadd   DWORD PTR [eax+0x79]
  408b86:	push   esi
  408b87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b88:	cmp    al,0x11
  408b8a:	scas   al,BYTE PTR es:[edi]
  408b8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b8c:	or     BYTE PTR [edi+esi*8+0x275cf7ba],cl
  408b93:	sahf   
  408b94:	and    al,0xd1
  408b96:	out    dx,al
  408b97:	cdq    
  408b98:	push   eax
  408b99:	scas   al,BYTE PTR es:[edi]
  408b9a:	push   edi
  408b9b:	test   DWORD PTR [esi-0x18fa51dc],0x71829036
  408ba5:	ret    0x4ce9
  408ba8:	and    eax,0xc91788d4
  408bad:	ret    
  408bae:	sub    eax,0xc7351920
  408bb3:	or     ebp,ecx
  408bb5:	or     BYTE PTR [ecx+0x7bbed530],cl
  408bbb:	jb     0x408bf6
  408bbd:	int    0xf2
  408bbf:	or     ch,ah
  408bc1:	int3   
  408bc2:	nop
  408bc3:	dec    ecx
  408bc4:	mov    al,0xef
  408bc6:	xchg   BYTE PTR [eax-0x5afc941b],bl
  408bcc:	dec    esi
  408bcd:	daa    
  408bce:	retf   0xd209
  408bd1:	xchg   ebx,eax
  408bd2:	call   0x77b6ecd0
  408bd7:	inc    esi
  408bd8:	push   ss
  408bd9:	repnz imul ebp,DWORD PTR [ecx-0x39],0xed8400c4
  408be1:	cmp    bh,BYTE PTR [ebx+0x15b920e0]
  408be7:	scas   al,BYTE PTR es:[edi]
  408be8:	adc    ah,BYTE PTR [ecx]
  408bea:	or     ah,BYTE PTR [edx-0x51]
  408bed:	mov    ah,0xe9
  408bef:	out    dx,al
  408bf0:	pop    esi
  408bf1:	mov    eax,ds:0x8fa07172
  408bf6:	stc    
  408bf7:	lods   al,BYTE PTR ds:[esi]
  408bf8:	cmp    ecx,DWORD PTR [ebp+0x31d67367]
  408bfe:	retf   0x611d
  408c01:	test   edx,ebp
  408c03:	repz mov dh,0xdc
  408c06:	sub    BYTE PTR [esi-0x13ce151e],al
  408c0c:	inc    ebx
  408c0d:	dec    eax
  408c0e:	pop    ebp
  408c0f:	inc    eax
  408c10:	jmp    DWORD PTR [ebx-0x43]
  408c13:	(bad)
  408c16:	inc    esi
  408c17:	and    DWORD PTR [edi+eax*2-0x2c],esi
  408c1b:	mov    dl,0xec
  408c1d:	add    bh,dh
  408c1f:	mov    bh,0x59
  408c21:	daa    
  408c22:	jo     0x408be3
  408c24:	mov    ebx,0xcd58b2b1
  408c29:	outs   dx,DWORD PTR ds:[esi]
  408c2a:	sub    DWORD PTR [esi-0x64],0xe119e6e8
  408c31:	(bad)  
  408c33:	mov    ch,0x73
  408c35:	gs and ebp,ecx
  408c38:	mov    cl,0xa5
  408c3a:	ret    0x78e0
  408c3d:	cld    
  408c3e:	mov    ch,0x34
  408c40:	aaa    
  408c41:	int3   
  408c42:	fsin   
  408c44:	lods   eax,DWORD PTR ds:[esi]
  408c45:	xchg   ebx,eax
  408c46:	sahf   
  408c47:	fldenv [ecx-0x4938356b]
  408c4d:	daa    
  408c4e:	xlat   BYTE PTR ds:[ebx]
  408c4f:	mov    ds:0xae541367,al
  408c54:	and    DWORD PTR [esi],0x66
  408c57:	dec    edx
  408c58:	sbb    al,bl
  408c5a:	pop    edi
  408c5b:	repz dec edx
  408c5d:	pop    edi
  408c5e:	stos   DWORD PTR es:[edi],eax
  408c5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c60:	or     esp,edi
  408c62:	scas   al,BYTE PTR es:[edi]
  408c63:	jl     0x408bff
  408c65:	popf   
  408c66:	leave  
  408c67:	pop    eax
  408c68:	nop
  408c69:	es neg BYTE PTR fs:[ecx+0x3f]
  408c6e:	adc    al,0x8f
  408c70:	iret   
  408c71:	test   eax,0xce76720d
  408c76:	mov    DWORD PTR [esi-0x2a],edi
  408c79:	fild   QWORD PTR [ebx+0x10]
  408c7c:	push   cs
  408c7d:	mov    ss,WORD PTR [edi]
  408c7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c80:	sub    DWORD PTR [esi],edi
  408c82:	mov    ebp,0xade6d0d5
  408c87:	push   ds
  408c88:	xor    dh,bh
  408c8a:	push   esp
  408c8b:	out    dx,al
  408c8c:	mov    ss,WORD PTR [eax]
  408c8e:	mov    esi,0xcbdba882
  408c93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c94:	jmp    0x4742:0xcdb8dd24
  408c9b:	fcomp  st(2)
  408c9d:	pop    eax
  408c9e:	pop    ecx
  408c9f:	xchg   esp,eax
  408ca0:	jb     0x408c3e
  408ca2:	repnz nop
  408ca4:	data16 data16 xor al,0x2b
  408ca8:	mov    WORD PTR [edx+0x54],ss
  408cab:	add    eax,0x6169fd57
  408cb0:	push   esp
  408cb1:	cs gs fmul st(4),st
  408cb5:	add    ecx,DWORD PTR [edi]
  408cb7:	adc    eax,0x2c8e0a4a
  408cbc:	xor    DWORD PTR ds:0xf1171b98,ebx
  408cc2:	test   al,0x64
  408cc4:	popa   
  408cc5:	stos   DWORD PTR es:[edi],eax
  408cc6:	js     0x408c79
  408cc8:	sub    DWORD PTR [ecx],0xfffffff2
  408ccb:	(bad)  
  408ccc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ccd:	or     DWORD PTR [edx],ebx
  408ccf:	xchg   ebx,eax
  408cd0:	ss and al,0x37
  408cd3:	(bad)  
  408cd4:	push   ebp
  408cd5:	mov    eax,0xd9878954
  408cda:	hlt    
  408cdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cdc:	xchg   ebx,eax
  408cdd:	iret   
  408cde:	adc    al,0xb2
  408ce0:	mov    edi,0x98c32f7c
  408ce5:	xor    BYTE PTR [ecx-0x63],dh
  408ce8:	cmc    
  408ce9:	fisubr WORD PTR [edx+0x3c8eee7a]
  408cef:	push   0x4359830e
  408cf4:	adc    ch,dh
  408cf6:	and    esi,ecx
  408cf8:	jno    0x408d53
  408cfa:	stos   BYTE PTR es:[edi],al
  408cfb:	and    eax,0x2fd7fb1d
  408d00:	loopne 0x408d1f
  408d02:	pop    ebx
  408d03:	(bad)  
  408d05:	push   0xffffffd6
  408d07:	sbb    bl,ch
  408d09:	aaa    
  408d0a:	xchg   esi,eax
  408d0b:	adc    DWORD PTR [ebx+0x5a],edx
  408d0e:	stos   DWORD PTR es:[edi],eax
  408d0f:	dec    esp
  408d10:	xor    cl,al
  408d12:	mov    ds:0x7a39cb0d,al
  408d17:	je     0x408ce4
  408d19:	push   0x39e0c030
  408d1e:	fnsave [edx+ebx*1]
  408d21:	icebp  
  408d22:	sub    eax,DWORD PTR [ecx-0x4f]
  408d25:	xchg   ecx,eax
  408d26:	repnz int 0xc2
  408d29:	mov    esp,0x727214f4
  408d2e:	sub    bl,BYTE PTR [ebx-0x60b5080e]
  408d34:	xor    ebx,DWORD PTR [esi+0x2484692f]
  408d3a:	xor    DWORD PTR [ebx+0x37c7f9e0],edi
  408d40:	push   cs
  408d41:	mov    ds:0xb5bc13f1,eax
  408d46:	fs pop esi
  408d48:	mov    cl,0xe
  408d4a:	mov    eax,0x6321f8e2
  408d4f:	(bad)  
  408d50:	out    dx,al
  408d51:	cmp    ebx,0xd7a8b2ed
  408d57:	add    edi,0x21ce7b85
  408d5d:	std    
  408d5e:	lds    edi,FWORD PTR [ebp-0x78f1c286]
  408d64:	push   ss
  408d65:	fcom   QWORD PTR [esi+0x360d4159]
  408d6b:	inc    ebx
  408d6c:	push   ebp
  408d6d:	in     al,dx
  408d6e:	into   
  408d6f:	sbb    ah,BYTE PTR [esi+eax*2+0x3db5cb89]
  408d76:	and    eax,0x14be5fd9
  408d7b:	sbb    ecx,ebp
  408d7d:	repnz adc al,0x41
  408d80:	nop
  408d81:	fcmovnbe st,st(6)
  408d83:	cmp    al,0xfe
  408d85:	int    0xc2
  408d87:	shl    DWORD PTR [edi],0xbb
  408d8a:	ins    BYTE PTR es:[edi],dx
  408d8b:	xchg   ebp,eax
  408d8c:	scas   al,BYTE PTR es:[edi]
  408d8d:	stc    
  408d8e:	sti    
  408d8f:	int3   
  408d90:	(bad)  
  408d91:	scas   al,BYTE PTR es:[edi]
  408d92:	jle    0x408df4
  408d94:	ins    BYTE PTR es:[edi],dx
  408d95:	and    al,0x2a
  408d97:	aad    0x63
  408d99:	push   ebp
  408d9a:	adc    DWORD PTR [esi],ecx
  408d9c:	call   0xa27877a3
  408da1:	sbb    bh,BYTE PTR [edx+0x7ff5e1ec]
  408da7:	mov    dl,0x1d
  408da9:	or     BYTE PTR [edx+eax*8-0x37b9764b],al
  408db0:	jmp    0x1ef2:0xa87cb8cd
  408db7:	xor    esp,edi
  408db9:	adc    eax,0xdf6ce4c6
  408dbe:	fsub   DWORD PTR [ecx]
  408dc0:	ret    0xc45a
  408dc3:	add    BYTE PTR [ecx-0x73e6c40d],cl
  408dc9:	inc    edi
  408dca:	inc    ebp
  408dcb:	outs   dx,DWORD PTR ds:[esi]
  408dcc:	pop    esp
  408dcd:	xor    dh,BYTE PTR [bp+si-0x5f]
  408dd1:	fidiv  DWORD PTR [esi+edi*4+0x398a5c8f]
  408dd8:	fidiv  WORD PTR [ebp+0x12]
  408ddb:	cmp    ch,dl
  408ddd:	cmp    edx,DWORD PTR [esi-0x2f]
  408de0:	cmp    BYTE PTR [edx],ch
  408de2:	popa   
  408de3:	mov    ah,0xe7
  408de5:	cmp    DWORD PTR [ebx-0x29],ebp
  408de8:	sti    
  408de9:	jne    0x408de1
  408deb:	das    
  408dec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ded:	pop    edi
  408dee:	push   edi
  408def:	in     eax,dx
  408df0:	arpl   WORD PTR [eax*2-0x5e4b5e8a],dx
  408df7:	sbb    eax,DWORD PTR [esi+0x30]
  408dfa:	mov    esi,0xab536518
  408dff:	rcr    BYTE PTR [edi-0x1ad57fdc],1
  408e05:	dec    edx
  408e06:	addr16 (bad) 
  408e08:	jecxz  0x408da9
  408e0a:	leave  
  408e0b:	ror    BYTE PTR [ebx+ebx*1],cl
  408e0e:	sti    
  408e0f:	pop    esp
  408e10:	xchg   ch,ah
  408e12:	js     0x408e91
  408e14:	adc    BYTE PTR [esi+0x7435fe29],0x1b
  408e1b:	clc    
  408e1c:	xor    eax,0x92249e7a
  408e21:	icebp  
  408e22:	mov    BYTE PTR [edi-0xabbf476],ah
  408e28:	or     BYTE PTR [edi+0x4a82a865],dh
  408e2e:	mov    ebx,0xdf134000
  408e33:	ds add al,0xd3
  408e36:	pop    esi
  408e37:	test   eax,0xc165f848
  408e3c:	fstp   QWORD PTR ds:0xe997f79b
  408e42:	retf   0xb341
  408e45:	pop    ecx
  408e46:	and    eax,0xd3e1f59e
  408e4b:	add    ecx,DWORD PTR [esi-0x6311666c]
  408e51:	frstor [ebx]
  408e53:	jb     0x408ec0
  408e55:	and    al,0x2b
  408e57:	(bad)  
  408e58:	push   edx
  408e59:	cmc    
  408e5a:	outs   dx,DWORD PTR ds:[esi]
  408e5b:	xchg   esp,eax
  408e5c:	ds mov edi,0xfb7ec252
  408e62:	push   ds
  408e63:	mov    dl,0xcf
  408e65:	pop    es
  408e66:	xchg   ebp,eax
  408e67:	mov    ebx,0xb31b43cb
  408e6c:	mov    dh,0xd3
  408e6e:	fsub   QWORD PTR [ecx-0x41690b52]
  408e74:	push   ebx
  408e75:	out    dx,al
  408e76:	mul    DWORD PTR [ebx+0x37a2e333]
  408e7c:	sar    dh,1
  408e7e:	lea    esp,[ecx]
  408e80:	mov    bl,0x3f
  408e82:	adc    DWORD PTR [ebp+0x5c],edx
  408e85:	mov    ss,WORD PTR [esi]
  408e87:	(bad)  
  408e88:	in     al,dx
  408e89:	pop    ebx
  408e8a:	mov    dh,0xa6
  408e8c:	and    edx,eax
  408e8e:	xchg   esp,eax
  408e8f:	aad    0x4
  408e91:	repnz inc ebp
  408e93:	call   0x34b9:0x40d51414
  408e9a:	xor    eax,0xa9377b7
  408e9f:	mov    bl,dl
  408ea1:	mov    cl,0x9f
  408ea3:	inc    esp
  408ea4:	add    eax,0xb059ccab
  408ea9:	cdq    
  408eaa:	or     al,0x4d
  408eac:	in     eax,dx
  408ead:	sub    eax,0xfb358ea
  408eb2:	pop    eax
  408eb3:	pop    esp
  408eb4:	enter  0xd1b6,0x6b
  408eb8:	loopne 0x408ea4
  408eba:	jl     0x408eb3
  408ebc:	fbld   TBYTE PTR [ebp-0x4bf9ed4b]
  408ec2:	loop   0x408e85
  408ec4:	clc    
  408ec5:	xchg   edi,eax
  408ec6:	sub    al,0xf8
  408ec8:	test   esi,ebx
  408eca:	test   al,0xc
  408ecc:	push   ds
  408ecd:	sbb    al,0xf8
  408ecf:	shl    al,0xec
  408ed2:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  408ed4:	mov    dh,0x7
  408ed6:	pop    esi
  408ed7:	xchg   cl,dh
  408ed9:	scas   al,BYTE PTR es:[edi]
  408eda:	cmp    eax,0xd80f13d4
  408edf:	repz xchg ecx,eax
  408ee1:	inc    esi
  408ee2:	pop    esp
  408ee3:	lahf   
  408ee4:	popa   
  408ee5:	rol    BYTE PTR ds:0xda855b2b,cl
  408eeb:	ret    
  408eec:	push   0x56
  408eee:	adc    bl,BYTE PTR [edi+ebp*8]
  408ef1:	jp     0x408ec3
  408ef3:	sbb    esi,DWORD PTR [edi-0xc]
  408ef6:	rcl    BYTE PTR [ecx],0xf8
  408ef9:	inc    edx
  408efa:	clc    
  408efb:	lds    eax,FWORD PTR [esi+ecx*1-0x3c]
  408eff:	adc    al,0xd7
  408f01:	add    BYTE PTR [esi],bh
  408f03:	call   0x2a48eeb0
  408f08:	pop    es
  408f09:	mov    cl,0x27
  408f0b:	sub    al,BYTE PTR [ebx]
  408f0d:	sbb    al,BYTE PTR [edi+0x6c]
  408f10:	add    bl,BYTE PTR [esi+0x4161d76b]
  408f16:	mov    bh,0x40
  408f18:	nop
  408f19:	xchg   DWORD PTR [ebx+0x49d7bf0],esi
  408f1f:	out    dx,eax
  408f20:	inc    al
  408f22:	iret   
  408f23:	push   es
  408f24:	aas    
  408f25:	jnp    0x408f40
  408f27:	fwait
  408f28:	popa   
  408f29:	fild   QWORD PTR [ebp+edx*8-0x33]
  408f2d:	inc    edi
  408f2e:	adc    DWORD PTR [eax],ebx
  408f30:	mov    WORD PTR [edx],es
  408f32:	popa   
  408f33:	xchg   edi,eax
  408f34:	mov    bh,0x34
  408f36:	sahf   
  408f37:	retf   
  408f38:	test   eax,0x8e541de8
  408f3d:	popf   
  408f3e:	cmp    edi,DWORD PTR [ecx+esi*2-0x4a5277b7]
  408f45:	iret   
  408f46:	jp     0x408f3f
  408f48:	sti    
  408f49:	mov    BYTE PTR [ecx],dl
  408f4b:	mov    cl,0xd8
  408f4d:	loopne 0x408f30
  408f4f:	cmp    ah,BYTE PTR [ecx]
  408f51:	stos   BYTE PTR es:[edi],al
  408f52:	outs   dx,DWORD PTR ds:[esi]
  408f53:	jmp    DWORD PTR [ebp-0x5e39f27]
  408f59:	mov    al,ds:0xccb0e25b
  408f5e:	inc    eax
  408f5f:	scas   al,BYTE PTR es:[edi]
  408f60:	adc    al,bl
  408f62:	xchg   edx,eax
  408f63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f64:	jb     0x408f22
  408f66:	xor    DWORD PTR [esi-0x4ea6288],edi
  408f6c:	ficomp DWORD PTR [ebp-0x7b274fc5]
  408f72:	fadd   DWORD PTR [ecx+edi*4+0x6d]
  408f76:	lea    esp,[ebx+0x69438fe6]
  408f7c:	pushf  
  408f7d:	pop    ebp
  408f7e:	sub    DWORD PTR [ebx+0x1b],esp
  408f81:	enter  0x60ed,0xf9
  408f85:	js     0x408f0d
  408f87:	pusha  
  408f88:	call   0xe8d0:0x3b9993ad
  408f8f:	sub    al,0x9e
  408f91:	mov    BYTE PTR [eax-0x1c3ad00c],cl
  408f97:	ret    
  408f98:	fs (bad) 
  408f9a:	aaa    
  408f9b:	xchg   BYTE PTR [ebx+0x3b],dl
  408f9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f9f:	adc    al,0x83
  408fa1:	loopne 0x408f48
  408fa3:	mov    edi,0x23a1e772
  408fa8:	jl     0x408f67
  408faa:	inc    edi
  408fab:	and    DWORD PTR [ebp-0x1],0xddfd868c
  408fb2:	push   ss
  408fb3:	call   0x81eb0e1a
  408fb8:	pop    ebp
  408fb9:	scas   al,BYTE PTR es:[edi]
  408fba:	sub    dl,BYTE PTR [ecx+ecx*1-0x2f4cba83]
  408fc1:	int    0x29
  408fc3:	pop    esi
  408fc4:	sbb    BYTE PTR [edx+0x4c],ch
  408fc7:	cld    
  408fc8:	es out 0xc0,eax
  408fcb:	cmp    al,0x71
  408fcd:	adc    al,0xf0
  408fcf:	fcom   QWORD PTR [eax+0x6c059319]
  408fd5:	fcmovnb st,st(1)
  408fd7:	xor    cl,BYTE PTR [edx-0x52]
  408fda:	dec    eax
  408fdb:	inc    dh
  408fdd:	adc    eax,0x3ed2f12c
  408fe2:	sub    eax,0xbef13331
  408fe7:	jno    0x408fec
  408fe9:	stos   DWORD PTR es:[edi],eax
  408fea:	sbb    al,ch
  408fec:	test   eax,0xd60d64ff
  408ff1:	xor    al,0xe4
  408ff3:	mov    ds:0xf6adbef0,al
  408ff8:	nop
  408ff9:	(bad)  
  408ffa:	mov    esi,0x903424ec
  408fff:	lock cmp al,0x8
  409002:	sub    ecx,DWORD PTR [ebx-0x35]
  409005:	shl    DWORD PTR [ecx],0x23
  409008:	call   0x8df1c305
  40900d:	sub    edi,esp
  40900f:	or     eax,0x81e06af9
  409014:	or     dh,BYTE PTR [eax]
  409016:	fnstcw WORD PTR [eax+0x11]
  409019:	sahf   
  40901a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40901b:	repz repnz and ebx,DWORD PTR fs:0x66d5f143
  409024:	retf   
  409025:	push   0x6b
  409027:	nop
  409028:	rcr    DWORD PTR [ecx],1
  40902a:	sbb    al,0xf8
  40902c:	jmp    0xf8d6:0xc7048bbd
  409033:	lods   al,BYTE PTR ds:[esi]
  409034:	test   eax,0x7dbfd4e
  409039:	aam    0xe1
  40903b:	ror    BYTE PTR [eax+ebp*2],cl
  40903e:	mov    eax,0x843ef55d
  409043:	mov    dh,0x1c
  409046:	cs pop ecx
  409048:	cmc    
  409049:	xor    DWORD PTR [ebp+0x6d],ecx
  40904c:	cmp    BYTE PTR [edi],bl
  40904e:	stc    
  40904f:	popf   
  409050:	xchg   edi,eax
  409051:	cs ret 0x72ab
  409055:	in     eax,dx
  409056:	push   esi
  409057:	idiv   DWORD PTR [ecx-0x4c571d78]
  40905d:	push   ss
  40905e:	mov    eax,ds:0x52662545
  409063:	push   0xfffffffe
  409065:	push   cs
  409066:	mov    DWORD PTR [ebx],0x95ae3f38
  40906c:	sti    
  40906d:	inc    esp
  40906e:	pop    ecx
  40906f:	inc    esp
  409070:	xchg   ebp,eax
  409071:	fst    QWORD PTR [eax]
  409073:	pop    ebx
  409074:	or     eax,0xbf6b862a
  409079:	dec    ebx
  40907a:	xchg   ecx,eax
  40907b:	test   eax,0x5a8aef6b
  409080:	data16 fld QWORD PTR [eax+0x227b4ad7]
  409087:	stos   DWORD PTR es:[edi],eax
  409088:	ins    BYTE PTR es:[edi],dx
  409089:	mov    esi,0xab98884a
  40908e:	cmp    al,ch
  409090:	iret   
  409091:	test   ch,al
  409093:	addr16 adc al,0xba
  409096:	aaa    
  409097:	push   edi
  409098:	fs jg  0x409026
  40909b:	bound  edi,QWORD PTR [ecx+ebx*8+0x1d25bf78]
  4090a2:	inc    ebp
  4090a3:	sbb    DWORD PTR [eax-0x69],edi
  4090a6:	dec    edi
  4090a7:	and    DWORD PTR [ebx+0x715b8083],ecx
  4090ad:	cmp    bl,0x29
  4090b0:	jns    0x4090cf
  4090b2:	out    0xdc,eax
  4090b4:	mov    ebp,DWORD PTR [edi+0x731353b1]
  4090ba:	(bad)  
  4090bb:	dec    edx
  4090bc:	rol    DWORD PTR [ebx-0x770b49ac],cl
  4090c2:	and    edi,edx
  4090c4:	stos   DWORD PTR es:[edi],eax
  4090c5:	aam    0x51
  4090c7:	fwait
  4090c8:	popa   
  4090c9:	bsr    ebx,DWORD PTR [ebp+0x4e9db3c]
  4090d0:	icebp  
  4090d1:	xor    al,0x86
  4090d3:	(bad)
  4090d7:	push   es
  4090d8:	add    BYTE PTR [edi+0x68],0x2e
  4090dc:	(bad)  
  4090dd:	retf   0xcc8e
  4090e0:	inc    edi
  4090e1:	shr    bh,cl
  4090e3:	add    ebp,edx
  4090e5:	sub    ah,BYTE PTR [ecx]
  4090e7:	test   DWORD PTR [ebx-0x61a4982f],0xe601294a
  4090f1:	xchg   esp,eax
  4090f2:	test   al,0x2e
  4090f4:	dec    ebx
  4090f5:	les    edx,FWORD PTR [ecx+0x10]
  4090f8:	jge    0x40910e
  4090fa:	pop    esp
  4090fb:	inc    ebx
  4090fc:	pop    eax
  4090fd:	sahf   
  4090fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090ff:	push   ds
  409100:	popa   
  409101:	lock out 0x33,al
  409104:	pop    edx
  409105:	lods   eax,DWORD PTR ds:[esi]
  409106:	or     ebx,esi
  409108:	not    BYTE PTR [ecx+0x22ed8778]
  40910e:	fisubr WORD PTR [eax]
  409110:	ja     0x40914d
  409112:	inc    ebx
  409113:	mov    ebp,es
  409115:	xchg   esp,eax
  409116:	jbe    0x409183
  409118:	loop   0x409128
  40911a:	mov    ch,0x6f
  40911c:	arpl   WORD PTR [eax+0x7f],bx
  40911f:	repz test DWORD PTR [esi+0x4a],edi
  409123:	push   edi
  409124:	mov    al,ds:0x7d9838e1
  409129:	lods   al,BYTE PTR ds:[esi]
  40912a:	std    
  40912b:	fwait
  40912c:	int    0xf1
  40912e:	leave  
  40912f:	clc    
  409130:	xchg   ebx,eax
  409131:	and    DWORD PTR [esp+ebp*1],esp
  409134:	lds    esp,FWORD PTR [eax-0x700b3a4d]
  40913a:	dec    esp
  40913b:	dec    ebp
  40913c:	stos   DWORD PTR es:[edi],eax
  40913d:	rcl    esp,cl
  40913f:	retf   0xb345
  409142:	stos   DWORD PTR es:[edi],eax
  409143:	mov    eax,ds:0x5febc9a
  409148:	xor    esp,DWORD PTR [edx+0x638b4853]
  40914e:	xchg   ebx,eax
  40914f:	sbb    eax,0x721497a
  409154:	pop    ebp
  409155:	stos   DWORD PTR es:[edi],eax
  409156:	push   ebx
  409158:	jmp    0x4f324200
  40915d:	ficomp WORD PTR [ebx+0x1110fc3c]
  409163:	mov    ds:0x47426685,eax
  409168:	popf   
  409169:	adc    edi,ebp
  40916b:	loope  0x4091e5
  40916d:	xchg   BYTE PTR [ebp+0x4c],dh
  409170:	ficom  DWORD PTR [edx+esi*1]
  409173:	jo     0x4091d9
  409175:	shl    BYTE PTR [ecx],0x0
  409178:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409179:	ins    BYTE PTR es:[edi],dx
  40917a:	addr16 mov ch,0x22
  40917d:	test   al,0xf0
  40917f:	aas    
  409180:	and    edi,esp
  409182:	rcr    BYTE PTR [eax+eiz*4],cl
  409185:	jle    0x40912c
  409187:	out    dx,eax
  409188:	sbb    al,0x60
  40918a:	call   0x8edc0d32
  40918f:	test   eax,0x1b8c6d40
  409194:	xor    DWORD PTR [edx+0x885c8c1],ebp
  40919a:	clc    
  40919b:	or     bh,BYTE PTR [ebx+0x8]
  40919e:	pop    DWORD PTR [esi]
  4091a0:	fcmovnbe st,st(2)
  4091a2:	clc    
  4091a3:	xor    BYTE PTR [esi+0x32],cl
  4091a6:	inc    edi
  4091a7:	icebp  
  4091a8:	or     eax,0x622c107d
  4091ad:	fwait
  4091ae:	add    edi,DWORD PTR [ebx]
  4091b0:	sar    BYTE PTR [ebp+esi*2+0x1],0xef
  4091b5:	cs rcl al,1
  4091b8:	or     cl,ah
  4091ba:	or     al,0xc0
  4091bc:	ret    0x3859
  4091bf:	out    dx,eax
  4091c0:	xchg   esp,eax
  4091c1:	pop    esp
  4091c2:	repnz dec eax
  4091c4:	lods   al,BYTE PTR ds:[esi]
  4091c5:	mov    esi,0x25ba1dcb
  4091ca:	fild   WORD PTR [ebx]
  4091cc:	cdq    
  4091cd:	add    eax,0x5a0e4179
  4091d2:	out    dx,eax
  4091d3:	or     eax,0xcd51bb9b
  4091d8:	sub    eax,esp
  4091da:	dec    ebx
  4091db:	dec    ecx
  4091dc:	outs   dx,BYTE PTR ds:[esi]
  4091dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091de:	imul   ecx,ebx,0xc1881a63
  4091e4:	dec    DWORD PTR [eax]
  4091e6:	test   al,0x9f
  4091e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091e9:	stc    
  4091ea:	xor    DWORD PTR [edi+0x6f3df710],0x35
  4091f1:	or     eax,0x25b9e872
  4091f6:	pushf  
  4091f7:	bound  edx,QWORD PTR [edx+eiz*8+0x20c830d2]
  4091fe:	test   al,0x91
  409200:	mov    edx,0x92bbfa65
  409205:	and    ebx,DWORD PTR [ecx]
  409207:	sbb    eax,0x16f7be7d
  40920c:	push   edx
  40920d:	sub    al,0x25
  40920f:	or     edx,DWORD PTR [eax+eax*2+0x7d]
  409213:	dec    ebp
  409214:	aas    
  409215:	add    eax,0x9739f7b2
  40921a:	jb     0x4091bc
  40921c:	push   edx
  40921d:	ss cld 
  40921f:	(bad)  
  409220:	fstp   QWORD PTR [ebx]
  409222:	push   esi
  409223:	cld    
  409224:	mov    esp,0x32c5a055
  409229:	clc    
  40922a:	jle    0x4091cc
  40922c:	adc    al,0xc0
  40922e:	popa   
  40922f:	fs cmc 
  409231:	mov    BYTE PTR [ebx+ecx*8+0x5c],ah
  409235:	lock (bad) 
  409237:	cmc    
  409238:	pop    es
  409239:	pop    ecx
  40923a:	(bad)  
  40923b:	js     0x409213
  40923d:	pop    eax
  40923e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40923f:	cmp    eax,0x28f9c0c1
  409244:	cmp    al,0x9f
  409246:	add    cl,BYTE PTR [edx]
  409248:	mov    eax,0x6adb3f84
  40924d:	mov    esi,0x43a3accd
  409252:	iret   
  409253:	push   eax
  409254:	ss jns 0x409293
  409257:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409258:	and    BYTE PTR [ebp+0x68],0x3a
  40925c:	cmp    eax,0x62345571
  409261:	mov    ebp,0x5e225cd7
  409266:	jae    0x409292
  409268:	je     0x4092b9
  40926a:	dec    ebp
  40926b:	mov    ah,0xcd
  40926d:	jg     0x409297
  40926f:	add    al,0x9c
  409271:	out    0x91,al
  409273:	(bad)  
  409274:	sbb    ah,BYTE PTR [ecx-0x13]
  409277:	xlat   BYTE PTR ds:[ebx]
  409278:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409279:	lock adc ebx,DWORD PTR [edx+0x31]
  40927d:	sub    al,dh
  40927f:	int3   
  409280:	adc    al,0xa
  409282:	enter  0xa4f1,0x74
  409286:	xor    DWORD PTR [eax+0x4d9bb000],eax
  40928c:	xor    DWORD PTR [edi+0x7137ac80],esi
  409292:	rcl    DWORD PTR [ebx],0x88
  409295:	sbb    BYTE PTR [ecx],0x23
  409298:	xchg   eax,ebp
  40929a:	add    eax,0xf24deedd
  40929f:	fdivrp st(2),st
  4092a1:	or     cl,BYTE PTR [ebp-0x66]
  4092a4:	call   0x6bb7:0xf38eea0f
  4092ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092ac:	ret    0xc095
  4092af:	jbe    0x409256
  4092b1:	adc    DWORD PTR [eax+0x71],edi
  4092b4:	ja     0x4092f1
  4092b6:	cmp    ch,BYTE PTR [esi]
  4092b8:	daa    
  4092b9:	pop    edx
  4092ba:	addr16 stc 
  4092bc:	fidiv  WORD PTR [eax-0x4161f1c3]
  4092c2:	xchg   esi,eax
  4092c3:	jmp    0x94a0d367
  4092c8:	xor    DWORD PTR [esi-0x58],ecx
  4092cb:	enter  0xd23e,0x90
  4092cf:	adc    DWORD PTR [edi+0x674af982],esp
  4092d5:	cmp    al,0x94
  4092d7:	cmc    
  4092d8:	dec    esi
  4092d9:	test   ch,bh
  4092db:	call   0x266e:0x3a96bafc
  4092e2:	mov    ebp,0x88da9a3d
  4092e7:	mov    bh,BYTE PTR [edx+0x38]
  4092ea:	bound  esi,QWORD PTR [ebx]
  4092ec:	sbb    BYTE PTR [esi],0x8a
  4092ef:	mov    eax,ds:0xfa327844
  4092f4:	or     ebp,DWORD PTR [ebx-0x5d13587d]
  4092fa:	inc    edi
  4092fb:	mov    al,ds:0x6aa463d2
  409300:	call   0x6e7b0df3
  409305:	inc    eax
  409306:	rol    BYTE PTR [esp+esi*8-0x73],cl
  40930a:	shl    BYTE PTR [edi-0x7f0df3a3],1
  409310:	loope  0x40931a
  409312:	mov    dh,0x1
  409314:	dec    al
  409316:	test   al,0x40
  409318:	fwait
  409319:	mov    ds:0xc8a630ea,eax
  40931e:	daa    
  40931f:	push   esi
  409320:	push   ss
  409321:	retf   0x501f
  409324:	mov    al,ds:0xdd8c3fdd
  409329:	sub    BYTE PTR [ebp+edx*8-0x339db7e8],cl
  409330:	int    0x49
  409332:	outs   dx,DWORD PTR ds:[esi]
  409333:	mov    ebx,0xaead30d6
  409338:	gs mov ah,0x44
  40933b:	rol    ch,cl
  40933d:	gs imul ecx,edx,0x4a5ee6a7
  409344:	in     al,0x93
  409346:	pusha  
  409347:	dec    eax
  409348:	xchg   esi,eax
  409349:	arpl   WORD PTR ds:0x562ac7aa,bp
  40934f:	cli    
  409350:	call   0x182537d9
  409355:	scas   al,BYTE PTR es:[edi]
  409356:	mov    ebx,DWORD PTR [ebx]
  409358:	ret    0x1281
  40935b:	mov    bl,0x81
  40935d:	in     al,dx
  40935e:	loop   0x40939c
  409360:	xor    DWORD PTR [ecx-0x2],0xdde3cde5
  409367:	shr    DWORD PTR [eax+0xe36246b],0xb4
  40936e:	das    
  40936f:	shl    BYTE PTR [eax],1
  409371:	ins    DWORD PTR es:[edi],dx
  409372:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409373:	jg     0x409358
  409375:	mov    DWORD PTR [ebx+0x5becdf38],esp
  40937b:	xor    al,ah
  40937d:	call   0x83ae:0x7eb68766
  409384:	or     al,0x1f
  409386:	sbb    BYTE PTR [edx],ch
  409388:	cli    
  409389:	or     eax,0x93289a26
  40938e:	xchg   ebp,eax
  40938f:	adc    ah,0x5a
  409392:	stc    
  409393:	mov    eax,ds:0x36e4b27f
  409398:	xchg   esp,eax
  409399:	jne    0x409326
  40939b:	jle    0x40938d
  40939d:	adc    BYTE PTR [esi],cl
  40939f:	rcr    ch,1
  4093a1:	ins    DWORD PTR es:[edi],dx
  4093a2:	mov    bl,0xa0
  4093a4:	inc    ebp
  4093a5:	mov    ds:0x4d053fb8,al
  4093aa:	pop    esp
  4093ab:	repnz or DWORD PTR [edx+edi*2+0x5e8a1034],eax
  4093b3:	into   
  4093b4:	clc    
  4093b5:	repnz sar BYTE PTR [edx],1
  4093b8:	xchg   BYTE PTR [ecx+0x22b4358a],ah
  4093be:	or     BYTE PTR [eax+ecx*4+0x41d89244],cl
  4093c5:	mov    esi,0xa5d32b5a
  4093ca:	pop    es
  4093cb:	push   0x32
  4093cd:	shl    BYTE PTR [ebx-0x42],1
  4093d0:	push   edx
  4093d1:	cwde   
  4093d2:	mov    es,eax
  4093d4:	jmp    DWORD PTR [edx+esi*8-0x17b56b00]
  4093db:	sub    bh,al
  4093dd:	(bad)  
  4093de:	out    dx,eax
  4093df:	add    al,0xed
  4093e1:	sahf   
  4093e2:	push   es
  4093e3:	pop    ecx
  4093e4:	sti    
  4093e5:	scas   eax,DWORD PTR es:[edi]
  4093e6:	adc    BYTE PTR [eax],0xec
  4093e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093ea:	outs   dx,BYTE PTR ds:[esi]
  4093eb:	(bad)  
  4093ec:	dec    esp
  4093ed:	fs ds cmp eax,0x17f0723
  4093f4:	and    esi,DWORD PTR [ebp-0x55]
  4093f7:	fsubr  QWORD PTR [ebp-0xb]
  4093fa:	add    eax,0x684bc857
  4093ff:	pushf  
  409400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409401:	xor    DWORD PTR [edx],0x5405cad7
  409407:	pushf  
  409408:	mov    ds:0x7255e887,eax
  40940d:	cmc    
  40940e:	adc    eax,0x7e094620
  409413:	fcmove st,st(2)
  409415:	mov    WORD PTR [edx],gs
  409417:	and    ch,dh
  409419:	or     ecx,DWORD PTR [esi]
  40941b:	ret    0x9b67
  40941e:	pop    edi
  40941f:	mov    DWORD PTR [eax-0x5],esi
  409422:	and    bh,BYTE PTR [edx-0x7a]
  409425:	add    bh,BYTE PTR [edx-0x4a89d0fd]
  40942b:	lods   eax,DWORD PTR es:[esi]
  40942d:	jmp    0x409453
  40942f:	cmp    DWORD PTR [eax+eax*8-0x11],ecx
  409433:	sub    eax,DWORD PTR [ecx+0x67ff9410]
  409439:	mov    bh,0xf7
  40943b:	and    dh,BYTE PTR [edi]
  40943d:	sbb    eax,0x6e83b0f5
  409442:	outs   dx,BYTE PTR ds:[esi]
  409443:	jno    0x4094b1
  409445:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409446:	aam    0x5b
  409448:	ror    ebx,0xc9
  40944b:	lock sti 
  40944d:	call   0x439b:0xc8957afd
  409454:	sub    al,0xff
  409456:	xlat   BYTE PTR ds:[ebx]
  409457:	mov    esp,0xab9eff7d
  40945c:	inc    esi
  40945d:	mov    ah,ch
  40945f:	jbe    0x409484
  409461:	iret   
  409462:	aaa    
  409463:	(bad)  
  409464:	popa   
  409465:	iret   
  409466:	stos   DWORD PTR es:[edi],eax
  409467:	cmp    ah,bl
  409469:	cmp    DWORD PTR [eiz*8+0x627da27b],0xff057e70
  409474:	and    cl,BYTE PTR [edx+0x4b88d138]
  40947a:	pop    ecx
  40947b:	call   0x8ffb9973
  409480:	sbb    ch,BYTE PTR [edi]
  409482:	xchg   ecx,eax
  409483:	inc    ebp
  409484:	test   DWORD PTR [eax+esi*4],0x8501959c
  40948b:	test   al,0xa9
  40948d:	sub    eax,0x88b08861
  409492:	retf   
  409493:	outs   dx,BYTE PTR ds:[esi]
  409494:	dec    edi
  409495:	rcr    BYTE PTR [edi-0x3e],0x9
  409499:	and    ebx,DWORD PTR [edi-0x64]
  40949c:	sbb    eax,0x4d2aaaed
  4094a1:	lahf   
  4094a2:	leave  
  4094a3:	lds    esp,FWORD PTR [ebx]
  4094a5:	xchg   DWORD PTR ds:[ebp+0x5b984596],ebx
  4094ac:	pop    edx
  4094ad:	stos   DWORD PTR es:[edi],eax
  4094ae:	mov    ?,WORD PTR [edx]
  4094b0:	pushf  
  4094b1:	xchg   ebx,eax
  4094b2:	(bad)  
  4094b3:	fcom   DWORD PTR [ebp+ecx*2-0x66]
  4094b7:	push   ebp
  4094b8:	mov    al,BYTE PTR [ecx+eax*4-0x58]
  4094bc:	xor    BYTE PTR [edx],bh
  4094be:	add    edi,DWORD PTR [edx+0x64e8e893]
  4094c4:	aaa    
  4094c5:	push   ebp
  4094c6:	adc    ecx,DWORD PTR [esp+eax*8+0x2a53f6b3]
  4094cd:	mov    eax,ds:0x87a642ea
  4094d2:	es cld 
  4094d4:	out    0xb4,eax
  4094d6:	test   DWORD PTR [esi],esp
  4094d8:	inc    eax
  4094d9:	fs js  0x40953d
  4094dc:	test   eax,0xcaefdfd4
  4094e1:	sbb    eax,0x81ddb4ba
  4094e6:	sar    BYTE PTR [esi+0x3fe2fba0],cl
  4094ec:	dec    BYTE PTR [eax]
  4094ee:	cmp    BYTE PTR [eax+edx*4+0x272a5f88],dh
  4094f5:	adc    eax,0xc10e66bf
  4094fa:	mov    esi,0xec594f38
  4094ff:	xchg   edi,eax
  409500:	xor    ebp,DWORD PTR [edi+eiz*2]
  409503:	push   DWORD PTR [edx-0x68]
  409506:	cdq    
  409507:	sbb    eax,DWORD PTR [ecx-0x2897d600]
  40950d:	outs   dx,DWORD PTR ds:[esi]
  40950e:	je     0x40954d
  409510:	les    ecx,FWORD PTR [eax+esi*8-0x79]
  409514:	push   ecx
  409515:	and    BYTE PTR [edi+0x42],cl
  409518:	stos   BYTE PTR es:[edi],al
  409519:	jg     0x4094bd
  40951b:	cs enter 0x2636,0xb9
  409520:	repz arpl WORD PTR [eax],bx
  409523:	retf   0xcde7
  409526:	adc    al,BYTE PTR [esi-0x54]
  409529:	outs   dx,DWORD PTR ds:[esi]
  40952a:	into   
  40952b:	jecxz  0x40950a
  40952d:	or     esp,DWORD PTR [ebp-0x1476b6db]
  409533:	and    eax,0x5519d74d
  409538:	sahf   
  409539:	mov    ebx,0x17bc7304
  40953e:	data16 shr BYTE PTR [ecx+edx*1-0x40f53003],1
  409546:	adc    DWORD PTR [ebx-0x5d],esp
  409549:	and    DWORD PTR [ebp+0x4],ebx
  40954c:	(bad)  [ecx]
  40954e:	(bad)  
  40954f:	xlat   BYTE PTR ds:[ebx]
  409550:	pop    ebx
  409551:	cdq    
  409552:	cs mov dl,0x14
  409555:	fs jge 0x4095ae
  409558:	push   edx
  409559:	sti    
  40955a:	adc    eax,0x1b321e58
  40955f:	inc    ebx
  409560:	dec    ecx
  409561:	dec    edx
  409562:	test   al,0xb4
  409564:	bound  ecx,QWORD PTR [eax]
  409566:	inc    ebp
  409567:	fwait
  409568:	push   ebp
  409569:	mov    esp,0x43ace071
  40956e:	sti    
  40956f:	push   ecx
  409570:	repnz mov esi,DWORD PTR ss:[ecx+0x5fc98e]
  409578:	stos   BYTE PTR es:[edi],al
  409579:	xchg   DWORD PTR [ebp-0x26],edx
  40957c:	js     0x4095cc
  40957e:	or     al,0x68
  409580:	jns    0x4095c7
  409582:	xor    ebp,DWORD PTR [ebp+0xfb5c3c4]
  409588:	out    dx,eax
  409589:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40958a:	jo     0x409525
  40958c:	and    al,0x68
  40958e:	ins    BYTE PTR es:[edi],dx
  40958f:	daa    
  409590:	hlt    
  409591:	js     0x40953e
  409593:	in     eax,dx
  409594:	adc    eax,0x22df462b
  409599:	inc    esi
  40959a:	fcompp 
  40959c:	int    0x12
  40959e:	and    ebp,ebx
  4095a0:	gs cmp al,0x70
  4095a3:	mov    al,ds:0xffa28bf8
  4095a8:	mov    esi,0xf3e24d1c
  4095ad:	sbb    ch,BYTE PTR [ecx+0x263f856d]
  4095b3:	jp     0x4095b9
  4095b5:	xchg   DWORD PTR [eax-0x531b7c1],esi
  4095bb:	jge    0x409601
  4095bd:	cld    
  4095be:	mov    edx,0x4514d215
  4095c3:	imul   eax,DWORD PTR [esi-0x316c2506],0xb39802f2
  4095cd:	push   es
  4095ce:	mov    al,ds:0x94fd9523
  4095d3:	xchg   ebp,eax
  4095d4:	xor    eax,0x430b70c1
  4095d9:	(bad)  
  4095da:	xchg   edx,eax
  4095db:	mov    BYTE PTR [ecx-0x41cb2217],cl
  4095e1:	dec    edx
  4095e2:	and    al,0xeb
  4095e4:	cmp    edi,ebp
  4095e6:	fst    QWORD PTR ds:[eax]
  4095e9:	loopne 0x409661
  4095eb:	sub    al,0x49
  4095ed:	repnz cli 
  4095ef:	sub    al,0x46
  4095f1:	cwde   
  4095f2:	aad    0x98
  4095f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095f5:	and    edx,esi
  4095f7:	stc    
  4095f8:	scas   eax,DWORD PTR es:[edi]
  4095f9:	mov    WORD PTR [ecx-0x65],fs
  4095fc:	arpl   WORD PTR [eax+eax*2+0xc],bx
  409600:	mov    dl,0x0
  409602:	js     0x409642
  409604:	push   esi
  409605:	add    al,0x53
  409607:	aad    0xfa
  409609:	dec    ebp
  40960a:	sub    ah,0xf8
  40960d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40960e:	(bad)  [ecx]
  409610:	in     al,dx
  409611:	mov    eax,0x154e5f9d
  409616:	jg     0x40965e
  409618:	in     al,0x51
  40961a:	adc    DWORD PTR [esi-0x58],ebp
  40961d:	or     al,0x32
  40961f:	pop    esp
  409620:	mov    bl,BYTE PTR [edi-0x28]
  409623:	push   ebp
  409624:	jne    0x409667
  409626:	mov    ds:0xa008f6a7,al
  40962b:	daa    
  40962c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40962d:	lea    edx,[edi+0x2a7a56f8]
  409633:	fdivr  DWORD PTR [ecx+ebx*4-0x7654389]
  40963a:	pusha  
  40963b:	push   ebp
  40963c:	xchg   ecx,eax
  40963d:	pop    es
  40963e:	imul   ebx,DWORD PTR [eax+0x33bc7bec],0x73a0da37
  409648:	fcom   DWORD PTR [esi-0x29]
  40964b:	sub    DWORD PTR [ecx-0x45],eax
  40964e:	xor    BYTE PTR [ecx-0x384db9f9],0x32
  409655:	sbb    ebp,DWORD PTR [eax]
  409657:	sbb    DWORD PTR [eax+0x59694528],edi
  40965d:	iret   
  40965e:	push   es
  40965f:	test   ah,al
  409661:	stos   BYTE PTR es:[edi],al
  409662:	mov    edi,0xb11efdd4
  409667:	aam    0x3d
  409669:	out    dx,al
  40966a:	cwde   
  40966b:	enter  0xa2c9,0x5d
  40966f:	cwde   
  409670:	dec    esi
  409671:	mov    ?,eax
  409673:	and    ch,BYTE PTR [edi]
  409675:	add    al,0xb7
  409677:	sbb    al,0xac
  409679:	outs   dx,DWORD PTR ds:[esi]
  40967a:	mov    bl,bl
  40967c:	mov    al,0x56
  40967e:	cdq    
  40967f:	loope  0x4096da
  409681:	outs   dx,DWORD PTR ds:[esi]
  409682:	jle    0x40965b
  409684:	out    dx,eax
  409685:	inc    edi
  409686:	mov    al,0x78
  409688:	pop    ds
  409689:	rcr    BYTE PTR ds:0x918519a6,cl
  40968f:	inc    esp
  409690:	push   edi
  409691:	mov    cl,0xc4
  409693:	add    edx,esp
  409695:	repnz (bad) 
  409697:	push   cs
  409698:	add    eax,0xce1268a
  40969d:	fwait
  40969e:	push   esi
  40969f:	jecxz  0x4096bc
  4096a1:	aaa    
  4096a2:	cli    
  4096a3:	cld    
  4096a4:	js     0x4096c1
  4096a6:	adc    DWORD PTR [ebx-0x136b1978],ebp
  4096ac:	sahf   
  4096ad:	xchg   edi,ebp
  4096af:	lds    edx,FWORD PTR [esp+ebp*2]
  4096b2:	mov    bh,0x21
  4096b4:	mov    DWORD PTR [eax-0xa],ecx
  4096b7:	pop    es
  4096b8:	add    DWORD PTR [ecx-0x4934be6b],ebp
  4096be:	sub    ah,ch
  4096c0:	xor    cl,BYTE PTR ds:0xb5af2fba
  4096c6:	xchg   edx,eax
  4096c7:	lds    edi,FWORD PTR [edi+eiz*2+0x9b5d29f]
  4096ce:	popa   
  4096cf:	lds    edx,FWORD PTR [eax-0x5537e25e]
  4096d5:	in     eax,dx
  4096d6:	fsubrp st(0),st
  4096d8:	jmp    0x2710914e
  4096dd:	adc    bh,BYTE PTR [esi]
  4096df:	lods   eax,DWORD PTR ds:[esi]
  4096e0:	outs   dx,BYTE PTR ds:[esi]
  4096e1:	xor    eax,0x75173f2e
  4096e6:	cs mov edi,0x96464eca
  4096ec:	xorps  xmm6,XMMWORD PTR [edx+0x45]
  4096f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096f1:	adc    ah,BYTE PTR [ebx]
  4096f3:	mov    bh,0x3c
  4096f5:	sub    eax,0xece970a4
  4096fa:	ins    DWORD PTR es:[edi],dx
  4096fb:	mov    eax,0xdc632d6a
  409700:	pop    eax
  409701:	sub    DWORD PTR [ecx],0x7a
  409704:	dec    ecx
  409705:	adc    DWORD PTR [ebx+0x621e60f2],edi
  40970b:	mov    al,ds:0xd5edc677
  409710:	xchg   DWORD PTR [eax],esp
  409712:	(bad)  
  409713:	sub    BYTE PTR [ebp-0x2d],dh
  409716:	xchg   esp,eax
  409717:	xchg   BYTE PTR [ecx],al
  409719:	clc    
  40971a:	enter  0x715a,0x83
  40971e:	jns    0x40978f
  409720:	daa    
  409721:	jae    0x409787
  409723:	bnd jge 0x40977c
  409726:	mov    al,0xe6
  409728:	in     al,dx
  409729:	scas   al,BYTE PTR es:[edi]
  40972a:	sbb    edx,eax
  40972c:	fnstsw WORD PTR [eax]
  40972e:	dec    eax
  40972f:	add    DWORD PTR [eax],esi
  409731:	ds jecxz 0x4096bf
  409734:	retf   
  409735:	dec    esi
  409736:	cdq    
  409737:	jno    0x40973f
  409739:	add    al,0x8e
  40973b:	lods   al,BYTE PTR ds:[esi]
  40973c:	cmc    
  40973d:	stc    
  40973e:	idiv   DWORD PTR [eax+0x2ca1468c]
  409744:	ja     0x40971a
  409746:	test   eax,0xdcfdaca4
  40974b:	mov    al,BYTE PTR [eax+ecx*1+0x62011242]
  409752:	jmp    0x7acb:0x1ce0f46d
  409759:	scas   al,BYTE PTR es:[edi]
  40975a:	pop    edx
  40975b:	loope  0x40976b
  40975d:	in     al,dx
  40975e:	push   ecx
  40975f:	pop    ss
  409760:	mov    edx,0x97cf85c8
  409765:	sub    al,0x8
  409767:	ficomp DWORD PTR [edi-0x27ee766d]
  40976d:	or     bl,al
  40976f:	mov    ds:0x37f1e86d,eax
  409774:	mov    dl,0xb
  409776:	add    ebx,DWORD PTR [edi-0x76]
  409779:	push   edx
  40977a:	or     esi,DWORD PTR [esi]
  40977c:	(bad)  
  40977e:	fistp  DWORD PTR [eax]
  409780:	pushf  
  409781:	xor    al,0x1
  409783:	shl    DWORD PTR [ebp-0x7171a049],1
  409789:	sti    
  40978a:	and    DWORD PTR [ecx-0x87e15c9],eax
  409790:	mov    cl,0x3c
  409792:	sbb    ebp,ecx
  409794:	pop    es
  409795:	jo     0x409730
  409797:	iret   
  409798:	add    eax,0x96d80b70
  40979d:	(bad)  
  40979e:	xlat   BYTE PTR ds:[ebx]
  40979f:	pop    edx
  4097a0:	pop    ss
  4097a1:	or     eax,0xd5660e07
  4097a6:	mov    dh,BYTE PTR [ebx]
  4097a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097a9:	adc    DWORD PTR [ebx+0x6af91418],edx
  4097af:	mov    edi,0x371a8e34
  4097b4:	int3   
  4097b5:	(bad)  
  4097b6:	ja     0x4097dd
  4097b8:	out    0x93,al
  4097ba:	aaa    
  4097bb:	pop    edx
  4097bc:	clc    
  4097bd:	xchg   edi,eax
  4097be:	test   al,0xd4
  4097c0:	loop   0x40980e
  4097c2:	dec    ebp
  4097c3:	test   DWORD PTR [edx-0x22e7e732],ecx
  4097c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097ca:	shr    DWORD PTR [eax+0x25],0x8b
  4097ce:	sbb    cl,ah
  4097d0:	add    eax,0x5c4834f9
  4097d5:	call   0x4334:0xc8b0febe
  4097dc:	fsubr  QWORD PTR [esi+0x1a]
  4097df:	sub    al,0xc2
  4097e1:	out    dx,al
  4097e2:	inc    esi
  4097e3:	mov    esi,0x91e0bcf
  4097e8:	pop    ds
  4097e9:	push   ecx
  4097ea:	xchg   esi,eax
  4097eb:	pop    ss
  4097ec:	pop    esp
  4097ee:	push   ds
  4097ef:	lods   al,BYTE PTR ds:[esi]
  4097f0:	and    DWORD PTR [ebx+edi*2],ecx
  4097f3:	push   esi
  4097f4:	inc    ebp
  4097f5:	mov    ebx,0x30afc5c4
  4097fa:	(bad)  [edi-0x514a9f2f]
  409800:	sub    bl,BYTE PTR [eax-0x72da30a0]
  409806:	out    dx,eax
  409807:	sar    DWORD PTR [edx+0x58],cl
  40980a:	xor    ah,BYTE PTR fs:[ebp-0x2a]
  40980e:	stos   DWORD PTR es:[edi],eax
  40980f:	lds    ebp,FWORD PTR [ecx+0x7377f45e]
  409815:	pop    ss
  409816:	xchg   ebp,eax
  409817:	aad    0xb0
  409819:	push   esp
  40981a:	(bad)  
  40981b:	mov    esp,0xe434fb4d
  409820:	inc    edi
  409821:	leave  
  409822:	loope  0x4098a1
  409824:	mov    al,cl
  409826:	sub    bl,BYTE PTR [esi+0x1b]
  409829:	mov    dh,0xe
  40982b:	imul   esp,DWORD PTR cs:[ecx-0x5d],0xffffffce
  409830:	mov    bl,0x70
  409832:	call   0x2703:0x3ddb0425
  409839:	or     dl,BYTE PTR [esi-0x3937f777]
  40983f:	dec    ebx
  409840:	daa    
  409841:	ja     0x409872
  409843:	fisub  WORD PTR [edi-0x58a98046]
  409849:	mov    dh,BYTE PTR [esi-0x43]
  40984c:	cli    
  40984d:	push   0x6b
  40984f:	pop    ecx
  409850:	mov    al,ds:0x86ae3
  409855:	jle    0x409873
  409857:	fnstsw WORD PTR [esi-0x7259dfd1]
  40985d:	fisub  WORD PTR [ebx+0x11]
  409860:	int3   
  409861:	pop    ebx
  409862:	clc    
  409863:	mov    ecx,0xb6d55289
  409868:	mov    BYTE PTR [ebp-0xb],ah
  40986b:	std    
  40986c:	int3   
  40986d:	cs mov dl,0x92
  409870:	outs   dx,DWORD PTR ds:[esi]
  409871:	cmp    eax,0xc1ddd47c
  409876:	loope  0x409853
  409878:	cmp    cl,BYTE PTR [ecx]
  40987a:	or     esi,DWORD PTR [eax+0x58]
  40987d:	cmp    eax,0xc05ad679
  409882:	mov    al,0xbf
  409884:	fldcw  WORD PTR [esi]
  409886:	clc    
  409887:	jl     0x409816
  409889:	xlat   BYTE PTR ds:[ebx]
  40988a:	adc    DWORD PTR [eax-0x56],esp
  40988d:	test   ch,cl
  40988f:	aaa    
  409890:	nop
  409891:	mov    ds:0x5a2c4f3a,al
  409896:	lds    ecx,FWORD PTR ds:0xfaa16a93
  40989c:	dec    ebp
  40989d:	enter  0x44f,0xfd
  4098a1:	cs inc ebx
  4098a3:	outs   dx,DWORD PTR ds:[esi]
  4098a4:	xchg   edx,edi
  4098a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098a7:	(bad)  
  4098a8:	gs mov al,ah
  4098ab:	sub    ah,al
  4098ad:	hlt    
  4098ae:	loope  0x40986e
  4098b0:	adc    eax,0x8a670721
  4098b5:	mov    ss,WORD PTR [eax-0x36356746]
  4098bb:	jo     0x40985c
  4098bd:	addr16 sbb al,0x48
  4098c0:	push   0x6ff3f41d
  4098c5:	popa   
  4098c6:	dec    esp
  4098c7:	lock mov bh,dh
  4098ca:	mov    dh,0x26
  4098cc:	or     BYTE PTR [ecx+0x62],0x8b
  4098d0:	sub    esp,esi
  4098d2:	shl    BYTE PTR [edi],cl
  4098d4:	test   ebp,edx
  4098d6:	xlat   BYTE PTR ds:[ebx]
  4098d7:	and    DWORD PTR [ebx-0x40],esi
  4098da:	loopne 0x4098a4
  4098dc:	rcl    DWORD PTR [ebp+0x1b],cl
  4098df:	xchg   esi,eax
  4098e0:	push   ds
  4098e1:	stos   DWORD PTR es:[edi],eax
  4098e2:	mov    ebp,0x295550ca
  4098e7:	xor    eax,0x806a12fa
  4098ec:	jne    0x409883
  4098ee:	inc    esp
  4098ef:	test   esi,eax
  4098f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098f2:	retf   0xfbb2
  4098f5:	or     DWORD PTR [eax+0x6b],ebp
  4098f8:	jmp    0x86f77ecd
  4098fd:	inc    esi
  4098fe:	xor    DWORD PTR [ebx],eax
  409900:	push   0x152fbb04
  409905:	les    esi,FWORD PTR [ebp+0x7d]
  409908:	sbb    bl,dh
  40990a:	push   edi
  40990b:	dec    ecx
  40990c:	sbb    al,0x6d
  40990e:	sahf   
  40990f:	sti    
  409910:	inc    ebp
  409911:	and    ebx,edi
  409913:	sub    ecx,DWORD PTR [edx-0x4c]
  409916:	lock push esp
  409918:	or     al,dl
  40991a:	test   BYTE PTR [ecx-0x58241d20],ah
  409920:	(bad)  
  409921:	mov    ebx,0x167c13fa
  409926:	mov    eax,0x2ce57b36
  40992b:	call   esi
  40992d:	mov    al,0xb6
  40992f:	ins    DWORD PTR es:[edi],dx
  409930:	pushf  
  409931:	imul   esi,DWORD PTR [edx],0xb
  409934:	pop    eax
  409935:	inc    edi
  409936:	fcomi  st,st(7)
  409938:	xor    DWORD PTR [edi-0xe],ecx
  40993b:	dec    edx
  40993c:	adc    al,0xd9
  40993e:	sbb    BYTE PTR [eax-0x5f],al
  409941:	dec    esp
  409942:	shl    DWORD PTR [ecx-0x6a700356],1
  409948:	out    dx,eax
  409949:	pop    ecx
  40994a:	(bad)  
  40994b:	or     edi,DWORD PTR [edx-0x1e86f386]
  409951:	sti    
  409952:	jp     0x4099ad
  409954:	fisub  DWORD PTR [ebx+0x2e]
  409957:	loopne 0x409979
  409959:	pop    ebp
  40995a:	or     DWORD PTR [eax],esp
  40995c:	xchg   esi,eax
  40995d:	loopne 0x409960
  40995f:	stc    
  409960:	shr    edi,cl
  409962:	sub    ch,BYTE PTR [ebx-0x71]
  409965:	fimul  DWORD PTR [ebx]
  409967:	bound  edx,QWORD PTR [ebx-0x27289d6]
  40996d:	fld    TBYTE PTR [edi-0x5b]
  409970:	mov    al,0x1a
  409972:	jnp    0x409963
  409974:	sti    
  409975:	repz enter 0x2ffb,0xff
  40997a:	dec    ebp
  40997b:	cld    
  40997c:	dec    eax
  40997d:	pop    ebp
  40997e:	(bad)  
  40997f:	in     al,dx
  409980:	sub    DWORD PTR [esi+0x35bd5054],esp
  409986:	sub    DWORD PTR [ebx+ecx*1+0x29],edi
  40998a:	test   al,0x4d
  40998c:	sbb    eax,0x9f74647f
  409991:	jo     0x409923
  409993:	adc    dl,BYTE PTR [esi+0x358e755d]
  409999:	or     bh,BYTE PTR ds:0xc6facc28
  40999f:	sti    
  4099a0:	jo     0x4099bf
  4099a2:	enter  0x60cf,0xa2
  4099a6:	or     BYTE PTR [edi-0x40],ch
  4099a9:	jge    0x4099a5
  4099ab:	mov    esp,0x72e03935
  4099b0:	fs popa 
  4099b2:	in     eax,dx
  4099b3:	repnz pop ebp
  4099b5:	xor    bl,ch
  4099b7:	sti    
  4099b8:	jge    0x4099b9
  4099ba:	enter  0xb3a2,0x5
  4099be:	mov    DWORD PTR [ebp-0x1f],edi
  4099c1:	test   BYTE PTR [edx+eiz*4],dh
  4099c4:	imul   ecx,DWORD PTR [esi+0x63e6fa7c],0xffffffbf
  4099cb:	push   esi
  4099cc:	dec    edx
  4099cd:	leave  
  4099ce:	enter  0x7a8b,0xfd
  4099d2:	xor    eax,0xac701030
  4099d7:	pop    ecx
  4099d8:	pop    es
  4099d9:	dec    ecx
  4099da:	jmp    0xb867:0x7ef363cc
  4099e1:	mov    esi,DWORD PTR ds:0x405d8ceb
  4099e7:	sub    eax,0x74449b19
  4099ec:	dec    ebp
  4099ed:	test   eax,0xf6288757
  4099f2:	dec    ebx
  4099f3:	xchg   edx,eax
  4099f4:	inc    edx
  4099f5:	in     eax,dx
  4099f6:	push   0x51
  4099f8:	aas    
  4099f9:	(bad)  
  4099fa:	jl     0x409a79
  4099fc:	lahf   
  4099fd:	push   esi
  4099fe:	lds    esi,FWORD PTR [edi-0x1f]
  409a01:	jl     0x409a72
  409a03:	out    dx,eax
  409a04:	push   cs
  409a05:	cmp    DWORD PTR ds:0xa34a0cd5,0xf4950629
  409a0f:	mov    ebp,0x9ae82c14
  409a14:	rcl    BYTE PTR [edi],1
  409a16:	sbb    esi,DWORD PTR [ebx-0x5a92fe57]
  409a1c:	xchg   ecx,eax
  409a1d:	scas   al,BYTE PTR es:[edi]
  409a1e:	ins    BYTE PTR es:[edi],dx
  409a1f:	es cmp al,0x44
  409a22:	or     al,0xc9
  409a24:	dec    ebp
  409a25:	adc    BYTE PTR [edx+0x28],dl
  409a28:	div    BYTE PTR [esi]
  409a2a:	mov    edi,0xd8dce7a2
  409a2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a30:	xchg   ebp,eax
  409a31:	xchg   edi,eax
  409a32:	mov    cl,0x26
  409a34:	sub    BYTE PTR [esi+0x4f691daf],dh
  409a3a:	push   ebx
  409a3b:	push   eax
  409a3c:	aam    0xc5
  409a3e:	out    0x18,eax
  409a40:	arpl   WORD PTR [ebx],cx
  409a42:	das    
  409a43:	in     al,0xf7
  409a45:	xchg   BYTE PTR [ecx],cl
  409a47:	add    eax,DWORD PTR [ecx+0x4ae3286a]
  409a4d:	push   esp
  409a4e:	rcl    BYTE PTR [edx+0x58c5ba4f],cl
  409a54:	xor    esp,DWORD PTR [edx-0x1875411f]
  409a5a:	mov    esi,0x9c127450
  409a5f:	dec    ebx
  409a60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a61:	add    BYTE PTR [edi+0x1],0xa7
  409a65:	cmc    
  409a66:	mov    al,0x6c
  409a68:	adc    BYTE PTR [eax+0x7b],0xc8
  409a6c:	sar    DWORD PTR [eax],cl
  409a6e:	or     eax,0x75d0f63b
  409a73:	hlt    
  409a74:	inc    esi
  409a75:	cmp    DWORD PTR [edi],eax
  409a77:	mov    al,0xea
  409a79:	xchg   esi,eax
  409a7a:	adc    ah,BYTE PTR [ebx-0x25565082]
  409a80:	cmp    DWORD PTR [ebx],eax
  409a82:	sub    DWORD PTR [eax+eax*4-0x4fdb7ae9],eax
  409a89:	and    BYTE PTR [edx-0x6025189a],cl
  409a8f:	pop    esi
  409a90:	and    BYTE PTR [ebx+0x5120e373],ah
  409a96:	cli    
  409a97:	jg     0x409ab1
  409a99:	jo     0x409a30
  409a9b:	sub    ecx,edx
  409a9d:	pop    esp
  409a9e:	mov    esp,0xeb81558b
  409aa3:	aam    0x6b
  409aa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409aa6:	fld    TBYTE PTR [ebx]
  409aa8:	outs   dx,DWORD PTR ds:[esi]
  409aa9:	jmp    0x20eb:0x1bb85021
  409ab0:	test   al,0xbc
  409ab2:	out    dx,eax
  409ab3:	out    0xdf,al
  409ab5:	lods   al,BYTE PTR ds:[esi]
  409ab6:	test   BYTE PTR [ebx-0x60],ch
  409ab9:	dec    ebx
  409aba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409abb:	cmc    
  409abc:	dec    esp
  409abd:	inc    ecx
  409abe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409abf:	push   esi
  409ac0:	ret    
  409ac1:	int    0x65
  409ac3:	cmp    DWORD PTR [ebp-0x5d],ebp
  409ac6:	data16 sbb ch,BYTE PTR [ecx]
  409ac9:	in     eax,dx
  409aca:	mov    BYTE PTR [edx],0x7b
  409acd:	sub    ah,ah
  409acf:	add    BYTE PTR [esp+esi*1],ch
  409ad2:	add    BYTE PTR [eax-0x752c16f7],cl
  409ad8:	push   es
  409ad9:	shl    DWORD PTR [ebp+0xb0385e3],1
  409adf:	scas   al,BYTE PTR es:[edi]
  409ae0:	jg     0x409afe
  409ae2:	cwde   
  409ae3:	adc    al,0x2b
  409ae5:	lock inc edi
  409ae7:	test   al,0x40
  409ae9:	inc    edi
  409aea:	xchg   edx,eax
  409aeb:	add    eax,0x62954325
  409af0:	mov    ebp,0x4ff96f7e
  409af5:	add    al,0xdc
  409af7:	and    DWORD PTR [esi],0x235132f8
  409afd:	dec    ecx
  409afe:	out    dx,eax
  409aff:	inc    ecx
  409b00:	test   ebp,esi
  409b02:	inc    ecx
  409b03:	in     eax,0x94
  409b05:	repz cs push 0xeb2500b3
  409b0c:	mov    eax,0xfd667475
  409b11:	aas    
  409b12:	ja     0x409b7d
  409b14:	cdq    
  409b15:	xor    ecx,DWORD PTR gs:[ebx+0x3fe4acbb]
  409b1c:	test   DWORD PTR [ecx-0x3769c473],edx
  409b22:	jp     0x409abb
  409b24:	push   cs
  409b25:	bnd ret 0x870f
  409b29:	cmp    al,0x40
  409b2b:	pusha  
  409b2c:	jle    0x409b01
  409b2e:	retf   0x41a5
  409b31:	mov    dh,0x99
  409b33:	ret    0x7146
  409b36:	stos   BYTE PTR es:[edi],al
  409b37:	icebp  
  409b38:	mov    BYTE PTR ds:0x718dea22,bh
  409b3e:	fdiv   DWORD PTR [ebx+0x5205bf6f]
  409b44:	mov    bl,0x3d
  409b46:	sub    esp,0x2d0c2b32
  409b4c:	pop    edx
  409b4d:	jle    0x409bc0
  409b4f:	push   0x5fbd26b6
  409b54:	loope  0x409b04
  409b56:	pushf  
  409b57:	adc    eax,0x2e058d6b
  409b5c:	popf   
  409b5d:	pop    ebp
  409b5e:	sub    bl,bh
  409b60:	cs fscale 
  409b63:	ja     0x409af7
  409b65:	xchg   ecx,eax
  409b66:	cdq    
  409b67:	out    dx,al
  409b68:	fcomp  DWORD PTR [ecx-0x6f]
  409b6b:	test   DWORD PTR [esi+0x517474b1],edi
  409b71:	push   0x56
  409b73:	push   esp
  409b74:	jb     0x409b53
  409b76:	fs mov bl,0xc2
  409b79:	mov    bl,0x3b
  409b7b:	jp     0x409b4a
  409b7d:	test   BYTE PTR [ebx],dh
  409b7f:	pop    ss
  409b80:	arpl   WORD PTR [eax-0x71487036],bp
  409b86:	aaa    
  409b87:	lahf   
  409b88:	adc    bh,bh
  409b8a:	sbb    bh,BYTE PTR [esi-0x4a]
  409b8d:	imul   eax,DWORD PTR [esi],0xe4f4ba6d
  409b93:	mov    DWORD PTR [edi+0x5c48de66],ebx
  409b99:	inc    eax
  409b9a:	pusha  
  409b9b:	jnp    0x409bee
  409b9d:	jb     0x409bff
  409b9f:	sbb    eax,0x69518ab
  409ba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ba5:	xchg   ecx,eax
  409ba6:	mov    dh,0x72
  409ba8:	leave  
  409ba9:	aaa    
  409baa:	into   
  409bab:	(bad)  
  409bac:	jo     0x409b64
  409bae:	push   ds
  409baf:	add    BYTE PTR [eax-0x6641a78],cl
  409bb5:	jecxz  0x409bf4
  409bb7:	int    0x44
  409bb9:	arpl   sp,cx
  409bbb:	or     eax,0x80bfea34
  409bc0:	dec    edx
  409bc1:	les    ecx,FWORD PTR [edx]
  409bc3:	sbb    esi,DWORD PTR [edi]
  409bc5:	pusha  
  409bc6:	push   0x1
  409bc8:	mov    esi,0x5542d0fb
  409bcd:	adc    dh,dh
  409bcf:	inc    esi
  409bd0:	fiadd  DWORD PTR [esi+eax*1+0x21]
  409bd4:	jmp    esi
  409bd6:	pop    ecx
  409bd7:	retf   
  409bd8:	lods   eax,DWORD PTR ds:[esi]
  409bd9:	retf   0x6c8c
  409bdc:	in     eax,0x47
  409bde:	and    ch,BYTE PTR [edi]
  409be0:	sub    al,0x65
  409be2:	adc    BYTE PTR [edx-0x16],bh
  409be5:	arpl   WORD PTR [ecx-0x68],bx
  409be8:	iret   
  409be9:	mov    esi,0x1b22f4ea
  409bee:	mov    BYTE PTR [edx*4+0x4ef9db36],cl
  409bf5:	div    BYTE PTR [eax+ebx*8-0x7a71f956]
  409bfc:	jno    0x409c3b
  409bfe:	inc    ecx
  409bff:	or     bh,BYTE PTR [eax+0x7]
  409c02:	ficom  DWORD PTR [esp+ebp*2+0x4a12e8c2]
  409c09:	stos   BYTE PTR es:[edi],al
  409c0a:	jns    0x409c02
  409c0c:	xchg   ecx,eax
  409c0d:	inc    ebx
  409c0e:	pop    eax
  409c0f:	jecxz  0x409c27
  409c11:	popa   
  409c12:	jl     0x409bcf
  409c14:	les    edx,FWORD PTR [edx+ebp*8]
  409c17:	aam    0xce
  409c19:	add    ah,ah
  409c1b:	sbb    BYTE PTR [esi-0x40],cl
  409c1e:	loopne 0x409c40
  409c20:	loop   0x409c55
  409c22:	gs imul ebx,edx,0xffffff8e
  409c26:	mov    eax,0x50c6e4ab
  409c2b:	push   0x1af3f113
  409c30:	ins    DWORD PTR es:[edi],dx
  409c31:	and    eax,0x7c775a3b
  409c36:	arpl   ax,bx
  409c38:	and    BYTE PTR [esp+eax*1+0x25e7a22d],0x17
  409c40:	xchg   ebp,eax
  409c41:	(bad)  
  409c42:	mov    esi,0x6be3c9c
  409c47:	rsm    
  409c49:	icebp  
  409c4a:	cld    
  409c4b:	test   BYTE PTR [ebx],bh
  409c4d:	fimul  WORD PTR [ebx+0x77]
  409c50:	dec    ebp
  409c51:	adc    eax,0x23cea503
  409c56:	xchg   esi,eax
  409c57:	jmp    0x409c99
  409c59:	xchg   ebx,eax
  409c5a:	and    al,0xa6
  409c5c:	jecxz  0x409be5
  409c5e:	test   eax,0xfa144322
  409c63:	fcmovnb st,st(6)
  409c65:	pop    ecx
  409c66:	cmc    
  409c67:	xchg   BYTE PTR [edx],bl
  409c69:	inc    edx
  409c6a:	out    0xb7,eax
  409c6c:	pop    esp
  409c6d:	scas   al,BYTE PTR es:[edi]
  409c6e:	out    dx,al
  409c6f:	ins    BYTE PTR es:[edi],dx
  409c70:	aas    
  409c71:	push   esp
  409c72:	and    DWORD PTR [edx+0x42],0xffffffd6
  409c76:	les    esp,FWORD PTR [ecx-0x536a23d9]
  409c7c:	pop    edi
  409c7d:	test   BYTE PTR es:[edi+0x61],ch
  409c81:	cwde   
  409c82:	lods   eax,DWORD PTR ds:[esi]
  409c83:	pop    ds
  409c84:	out    dx,eax
  409c85:	add    eax,0x37a223f4
  409c8a:	lea    ecx,[edx]
  409c8c:	retf   
  409c8d:	xor    al,0x7d
  409c8f:	sbb    ah,BYTE PTR [ecx+ebx*4]
  409c92:	adc    DWORD PTR [ecx-0x69dd9b85],ebx
  409c98:	sbb    al,0x7a
  409c9a:	leave  
  409c9b:	scas   eax,DWORD PTR es:[edi]
  409c9c:	xchg   ebp,eax
  409c9d:	jl     0x409cb6
  409c9f:	pop    esp
  409ca0:	inc    esp
  409ca1:	jecxz  0x409cb6
  409ca3:	cmc    
  409ca4:	or     eax,0x201b35ea
  409ca9:	xchg   esi,eax
  409caa:	imul   esp,eax,0x8e2be49f
  409cb0:	push   ds
  409cb1:	mov    ds:0xdbe351be,al
  409cb6:	mov    ds:0x67a2797b,eax
  409cbb:	fwait
  409cbc:	and    ecx,DWORD PTR [ebx-0x63bff478]
  409cc2:	lods   al,BYTE PTR ds:[esi]
  409cc3:	cmc    
  409cc4:	dec    edx
  409cc5:	jmp    0x5e5:0x835839de
  409ccc:	inc    ebx
  409ccd:	bnd jbe 0x409c5e
  409cd0:	add    BYTE PTR [eax-0x7ab42c87],0x86
  409cd7:	outs   dx,BYTE PTR ds:[esi]
  409cd8:	pop    ebx
  409cd9:	(bad)  
  409cda:	or     esi,edi
  409cdc:	xor    DWORD PTR ds:0x3ac1443c,esi
  409ce2:	imul   ecx,DWORD PTR ds:0x4656311e,0x46
  409ce9:	xlat   BYTE PTR ds:[ebx]
  409cea:	dec    esp
  409ceb:	xchg   esp,eax
  409cec:	loopne 0x409ca0
  409cee:	mov    esi,0xb1cd08f9
  409cf3:	sbb    ecx,DWORD PTR [edi+esi*8-0x34d8234]
  409cfa:	ret    0x821f
  409cfd:	push   ss
  409cfe:	jge    0x409cf7
  409d00:	test   DWORD PTR [esi-0x80],eax
  409d03:	sbb    BYTE PTR [ebx-0x12],0xc9
  409d07:	adc    BYTE PTR [ecx+ecx*4],bh
  409d0a:	scas   eax,DWORD PTR es:[edi]
  409d0b:	mov    ebp,DWORD PTR [eax]
  409d0d:	xchg   bh,bl
  409d0f:	jmp    DWORD PTR [ecx+0x3d0baf6c]
  409d15:	loope  0x409c99
  409d17:	in     eax,0x16
  409d19:	push   ebp
  409d1a:	shr    al,cl
  409d1c:	fsub   st,st(1)
  409d1e:	inc    eax
  409d1f:	call   0x6a87:0x489453aa
  409d26:	test   al,0xbf
  409d28:	or     dl,al
  409d2a:	push   ebp
  409d2b:	jmp    0x409d9c
  409d2d:	jp     0x409d49
  409d2f:	pusha  
  409d30:	aaa    
  409d31:	mov    cl,0x62
  409d33:	sub    DWORD PTR ds:0xab1cb7c0,ecx
  409d39:	cmp    BYTE PTR [eax-0x7f],cl
  409d3c:	outs   dx,DWORD PTR ds:[esi]
  409d3d:	pop    edi
  409d3e:	lds    esp,FWORD PTR [ebp+0x21660a82]
  409d44:	rcr    DWORD PTR [esi+edx*1],1
  409d47:	test   BYTE PTR [edi],al
  409d49:	adc    dl,BYTE PTR [edi]
  409d4b:	inc    edx
  409d4c:	mov    cl,0xf1
  409d4e:	xor    ch,BYTE PTR [ebp+0xeced9d8]
  409d54:	push   ss
  409d55:	pop    esi
  409d56:	aad    0x24
  409d58:	fsubr  DWORD PTR ds:0xd530177
  409d5e:	mov    bl,0x34
  409d60:	jmp    0x409d57
  409d62:	ja     0x409d3d
  409d64:	loope  0x409ceb
  409d66:	stos   DWORD PTR es:[edi],eax
  409d67:	inc    edi
  409d68:	bound  esi,QWORD PTR cs:[ecx+0x39f228af]
  409d6f:	inc    esi
  409d70:	sbb    BYTE PTR [ecx-0x18],bl
  409d73:	lds    ebx,FWORD PTR [esi+eax*1-0x20de10d]
  409d7a:	dec    ebp
  409d7b:	mov    ecx,DWORD PTR [edi-0x35006a4c]
  409d81:	ret    
  409d82:	mov    eax,0x622dde99
  409d87:	test   DWORD PTR [edx],edx
  409d89:	in     eax,0x7a
  409d8b:	cld    
  409d8c:	ficomp WORD PTR [ebp-0x4c424894]
  409d92:	jecxz  0x409de8
  409d94:	jae    0x409d58
  409d96:	mov    ah,0x70
  409d98:	adc    DWORD PTR [edx-0x45d11ea4],ebp
  409d9e:	pop    es
  409d9f:	test   DWORD PTR [ebp-0x1bb8786f],eax
  409da5:	cmc    
  409da6:	push   ds
  409da7:	sub    DWORD PTR [edx],ebx
  409da9:	push   ss
  409daa:	jmp    0x339f32f5
  409daf:	push   edi
  409db0:	fild   WORD PTR [eax]
  409db2:	aas    
  409db3:	fcmovne st,st(1)
  409db5:	mov    ebp,0xfc1c2282
  409dba:	aam    0x56
  409dbc:	test   DWORD PTR [eax],ecx
  409dbe:	push   esi
  409dbf:	in     eax,0x47
  409dc1:	or     eax,0x91a5754d
  409dc6:	mov    bl,0xfc
  409dc8:	jns    0x409d82
  409dca:	gs jmp 0x61533778
  409dd0:	inc    eax
  409dd1:	ss xchg edx,eax
  409dd3:	cli    
  409dd4:	inc    ebp
  409dd5:	popf   
  409dd6:	fcomp  st(7)
  409dd8:	xchg   ebx,eax
  409dd9:	stc    
  409dda:	jp     0x409db6
  409ddc:	cmp    eax,DWORD PTR [ebp+0x7405fef3]
  409de2:	xchg   ebp,eax
  409de3:	fisttp QWORD PTR [ecx]
  409de5:	push   edi
  409de6:	fisub  DWORD PTR [ebp+0x79db879d]
  409dec:	xchg   edi,eax
  409ded:	add    DWORD PTR [ecx],0x5706817b
  409df3:	mov    ds:0xea97f647,eax
  409df8:	jp     0x409dc5
  409dfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409dfb:	cvtdq2ps xmm0,XMMWORD PTR [eax+edx*1+0x6d]
  409e00:	adc    ecx,esp
  409e02:	jmp    0xbe01:0x15cfc4e1
  409e09:	fwait
  409e0a:	stos   DWORD PTR es:[edi],eax
  409e0b:	stc    
  409e0c:	push   esp
  409e0d:	pop    ebx
  409e0e:	or     BYTE PTR ss:[edx+0x72],bl
  409e12:	mov    eax,DWORD PTR [esi+0x21]
  409e15:	sub    BYTE PTR ds:0xb821f0ba,bh
  409e1b:	loopne 0x409e30
  409e1d:	ss into 
  409e1f:	jle    0x409dea
  409e21:	push   es
  409e22:	jne    0x409e72
  409e24:	into   
  409e25:	mov    esp,0x1e0a5ef9
  409e2a:	(bad)  
  409e2b:	sbb    eax,0xce25d664
  409e30:	sti    
  409e31:	out    0x14,al
  409e33:	inc    edi
  409e34:	mov    ecx,0x5acb98ca
  409e39:	mov    ecx,0x461568ba
  409e3e:	popa   
  409e3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e40:	shl    DWORD PTR [edx-0x31b51aaf],cl
  409e46:	out    dx,al
  409e47:	push   esi
  409e48:	int3   
  409e49:	mov    ds:0x6370674c,al
  409e4e:	pop    ebp
  409e4f:	bound  eax,QWORD PTR [ebp+ebx*1+0x5e]
  409e53:	xor    ebx,edi
  409e55:	pop    es
  409e56:	add    al,0x28
  409e58:	not    DWORD PTR [esp+ebx*8-0x61]
  409e5c:	mov    esp,0xc9f36bc6
  409e61:	sub    eax,0x43d6d4c1
  409e66:	hlt    
  409e67:	adc    ecx,DWORD PTR [edx-0x2c]
  409e6a:	jge    0x409e90
  409e6c:	(bad)  [esi]
  409e6e:	cmp    al,0x25
  409e70:	daa    
  409e71:	push   0x25dbe7c7
  409e76:	aad    0xc8
  409e78:	dec    ecx
  409e79:	mov    ebp,0xee00edc1
  409e7e:	call   0x8372e702
  409e83:	popa   
  409e84:	ret    
  409e85:	test   al,0xf4
  409e87:	cmp    eax,0xa46a8d9a
  409e8c:	mov    ?,WORD PTR [ebp+0x23f3080b]
  409e92:	loope  0x409ea2
  409e94:	pushf  
  409e95:	xor    DWORD PTR [edi+0x2eaa4530],esp
  409e9b:	inc    ebx
  409e9c:	scas   eax,DWORD PTR es:[edi]
  409e9d:	pop    eax
  409e9e:	dec    edx
  409e9f:	xor    eax,0x52833536
  409ea4:	mov    ds,WORD PTR [ebx-0x1b]
  409ea7:	pop    eax
  409ea8:	xchg   esi,eax
  409ea9:	inc    ebp
  409eaa:	icebp  
  409eab:	rcl    BYTE PTR [edi+0x6c162bd7],0x30
  409eb2:	mov    esp,0x610b1421
  409eb7:	imul   ebx,edi,0x3adb54f3
  409ebd:	xchg   edi,eax
  409ebe:	sbb    DWORD PTR [ecx-0x244e9bbc],0xdffe30c8
  409ec8:	adc    al,0xe8
  409eca:	les    esi,FWORD PTR [ebx]
  409ecc:	adc    edx,DWORD PTR [ebx]
  409ece:	cdq    
  409ecf:	aaa    
  409ed0:	(bad)  
  409ed1:	and    eax,0x4e0094ec
  409ed6:	in     eax,0x9a
  409ed8:	add    eax,0x9f209877
  409edd:	in     eax,0x89
  409edf:	bound  eax,QWORD PTR [edi]
  409ee1:	xor    eax,0xf6b7ed69
  409ee6:	cwde   
  409ee7:	mov    al,0x2c
  409ee9:	mov    ds:0x12c7e885,eax
  409eee:	fdiv   DWORD PTR [eax-0x8]
  409ef1:	add    esi,DWORD PTR [edx+0x23c6761e]
  409ef7:	mov    ah,0xe0
  409ef9:	sub    eax,0x11602ad5
  409efe:	xor    edx,edx
  409f00:	mov    edi,0x47ab46aa
  409f05:	pop    esi
  409f06:	mov    ecx,0x1e852dd1
  409f0b:	lods   eax,DWORD PTR ds:[esi]
  409f0c:	aad    0xc7
  409f0e:	xor    ah,BYTE PTR [esi+0x24]
  409f11:	jmp    0x409f91
  409f13:	push   edi
  409f14:	les    esp,FWORD PTR [ecx-0x29a36ea4]
  409f1a:	jae    0x409ef1
  409f1c:	mov    ?,WORD PTR [eax+0x584831df]
  409f22:	jae    0x409f5f
  409f24:	add    bh,BYTE PTR [ebx]
  409f26:	stos   DWORD PTR es:[edi],eax
  409f27:	(bad)  
  409f28:	repnz mov al,ds:0x81913214
  409f2e:	pop    esp
  409f2f:	scas   al,BYTE PTR es:[edi]
  409f30:	iret   
  409f31:	and    eax,0x8b367ed
  409f36:	retf   
  409f37:	xchg   BYTE PTR [ebx],dl
  409f39:	popf   
  409f3a:	sub    al,0x3a
  409f3c:	test   al,0x18
  409f3e:	xor    bh,bl
  409f40:	or     DWORD PTR [edx],ebp
  409f42:	jbe    0x409ee0
  409f44:	sar    BYTE PTR [bp+0x69b7],0xb9
  409f4a:	dec    edx
  409f4b:	ja     0x409f3c
  409f4d:	sub    edx,DWORD PTR [edi]
  409f4f:	or     DWORD PTR ds:0x781f855c,edi
  409f55:	retf   
  409f56:	and    BYTE PTR [ecx+0x61],bl
  409f59:	pop    eax
  409f5a:	cmp    edi,DWORD PTR [edx-0x3f]
  409f5d:	int3   
  409f5e:	jo     0x409ef6
  409f60:	and    BYTE PTR [edx+0x6bc223ac],0xb9
  409f67:	push   ds
  409f68:	repnz sbb eax,0xe0132d84
  409f6e:	or     esi,DWORD PTR [edx+0x59]
  409f71:	mov    edx,0x38fba745
  409f76:	ret    0x1963
  409f79:	test   BYTE PTR [ebx+0x1a],ch
  409f7c:	js     0x409f4d
  409f7e:	fsubp  st(2),st
  409f80:	stos   DWORD PTR es:[edi],eax
  409f81:	add    eax,0x57a2c7d8
  409f86:	xor    edx,DWORD PTR [edx]
  409f88:	inc    edx
  409f89:	int    0x98
  409f8b:	sub    edx,DWORD PTR [ecx-0x65]
  409f8e:	pop    DWORD PTR [ebx+0x50]
  409f91:	mov    ecx,0x969777f2
  409f96:	cmp    al,0x32
  409f98:	fcmovbe st,st(2)
  409f9a:	pushf  
  409f9b:	push   ebx
  409f9c:	iret   
  409f9d:	jb     0x409ff7
  409f9f:	shl    BYTE PTR [edi-0x27],cl
  409fa2:	fidiv  DWORD PTR [edx-0x33c1d750]
  409fa8:	xor    BYTE PTR [edi-0x77d46ec0],al
  409fae:	or     DWORD PTR [ebp-0xa],ecx
  409fb1:	sub    DWORD PTR [ecx+0x4f],esp
  409fb4:	or     al,0x1b
  409fb6:	and    BYTE PTR [eax+0x4],bl
  409fb9:	or     DWORD PTR [edi],esi
  409fbb:	sbb    cl,dh
  409fbd:	or     ebx,DWORD PTR [ebx-0x62]
  409fc0:	mov    cl,0xfa
  409fc2:	fist   DWORD PTR [edi]
  409fc4:	test   DWORD PTR [edx],ebx
  409fc6:	and    DWORD PTR [edx-0x7ccc6e67],esi
  409fcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fcd:	jbe    0x409f99
  409fcf:	add    BYTE PTR [edx-0xb],bh
  409fd2:	mov    bh,0x74
  409fd4:	xchg   ecx,eax
  409fd5:	mov    eax,ds:0x84d403c0
  409fda:	(bad)  
  409fdb:	jns    0x40a056
  409fdd:	pop    ebx
  409fde:	test   al,0x24
  409fe0:	sbb    BYTE PTR [ebx+0xa073532],0x17
  409fe7:	inc    ecx
  409fe8:	cli    
  409fe9:	cmp    esi,0xffffffa3
  409fec:	mov    cl,0x46
  409fee:	(bad)  
  409fef:	mov    edx,0x4d863df1
  409ff4:	dec    eax
  409ff5:	out    dx,al
  409ff6:	xor    ecx,DWORD PTR [ebp+esi*2-0x5a8810b8]
  409ffd:	cli    
  409ffe:	mov    dl,0x34
  40a000:	iret   
  40a001:	(bad)  
  40a002:	sub    al,0x5e
  40a004:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a005:	mov    al,ds:0x1e640ff6
  40a00a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a00b:	adc    al,0x2a
  40a00d:	dec    ebp
  40a00e:	scas   al,BYTE PTR es:[edi]
  40a00f:	shr    BYTE PTR [edi+0x2e196bf9],0xe2
  40a016:	mov    ah,0x2b
  40a018:	jmp    0x409fa5
  40a01a:	imul   eax,DWORD PTR [ebp+eiz*1-0x3f],0xfffffffa
  40a01f:	add    BYTE PTR [ebp-0x1d],cl
  40a022:	imul   esp,DWORD PTR [ebx+0x84f996e],0xffffff8f
  40a029:	test   dh,bl
  40a02b:	ret    0xda2e
  40a02e:	fsub   QWORD PTR [edi-0x5b923539]
  40a034:	xchg   cx,ax
  40a036:	sahf   
  40a037:	sub    esi,esp
  40a039:	scas   al,BYTE PTR es:[edi]
  40a03a:	mov    ebp,0x3c592d81
  40a03f:	rcl    DWORD PTR [ebx],cl
  40a041:	test   al,0x10
  40a043:	je     0x40a036
  40a045:	dec    ebx
  40a046:	cwde   
  40a047:	mov    esp,0xc623f9f4
  40a04c:	pop    esp
  40a04d:	cdq    
  40a04e:	mov    bl,0xa9
  40a050:	pop    edi
  40a051:	popa   
  40a052:	stos   DWORD PTR es:[edi],eax
  40a053:	add    bl,BYTE PTR [edx]
  40a055:	push   ss
  40a056:	mov    bl,0x77
  40a058:	mov    fs,WORD PTR ds:0xb9a6cf9e
  40a05e:	(bad)  
  40a05f:	call   0x572fe543
  40a064:	push   ecx
  40a065:	xor    bh,BYTE PTR [ebx-0x693144a0]
  40a06b:	sub    dl,0x7
  40a06e:	mov    ecx,0x57a1ba72
  40a073:	imul   ebp,ebp,0x36
  40a076:	pop    ebp
  40a077:	mov    dl,0x6f
  40a079:	pop    ss
  40a07a:	stos   DWORD PTR es:[edi],eax
  40a07b:	(bad)  
  40a07c:	jmp    DWORD PTR [eax+0x1f5c0dcc]
  40a082:	add    edx,ecx
  40a084:	jge    0x40a0d7
  40a086:	loope  0x40a079
  40a088:	jo     0x40a04f
  40a08a:	es mov cl,0x78
  40a08d:	(bad)
  40a090:	pushf  
  40a091:	test   eax,0x6df00a6f
  40a096:	fiadd  DWORD PTR [ebp+0x70]
  40a099:	fisubr WORD PTR [edi+edi*1+0x74]
  40a09d:	sti    
  40a09e:	add    BYTE PTR [ecx],bh
  40a0a0:	call   0x812c708f
  40a0a5:	add    bh,al
  40a0a7:	pop    esp
  40a0a8:	xor    DWORD PTR [ebx],ebx
  40a0aa:	out    0xd8,eax
  40a0ac:	in     al,dx
  40a0ad:	sbb    edx,ebx
  40a0af:	cld    
  40a0b0:	inc    esi
  40a0b1:	outs   dx,BYTE PTR fs:[esi]
  40a0b3:	cmp    BYTE PTR fs:[ebp-0x31],al
  40a0b7:	int    0xd4
  40a0b9:	test   eax,0x9cc7bd29
  40a0be:	ins    DWORD PTR es:[edi],dx
  40a0bf:	mov    al,ds:0x3f3468f3
  40a0c4:	add    ecx,DWORD PTR [edx-0x5709e9a6]
  40a0ca:	loope  0x40a109
  40a0cc:	int    0x3e
  40a0ce:	xor    DWORD PTR [esp+eiz*2+0x50],esi
  40a0d2:	or     BYTE PTR [edx-0x4d],0x95
  40a0d6:	sti    
  40a0d7:	sti    
  40a0d8:	jmp    0xf19d:0xb6688567
  40a0df:	jae    0x40a0bb
  40a0e1:	pop    eax
  40a0e2:	sub    eax,0x3a756c00
  40a0e7:	fwait
  40a0e8:	adc    esi,esp
  40a0ea:	stos   BYTE PTR es:[edi],al
  40a0eb:	pop    es
  40a0ec:	out    dx,eax
  40a0ed:	pusha  
  40a0ee:	xchg   esp,eax
  40a0ef:	ror    DWORD PTR [edi+0x56],0x6c
  40a0f3:	ret    
  40a0f4:	push   ss
  40a0f5:	stos   DWORD PTR es:[edi],eax
  40a0f6:	call   0xefe07433
  40a0fb:	sub    BYTE PTR [ebp-0x5384bcad],dl
  40a101:	aaa    
  40a102:	dec    edi
  40a103:	cmp    BYTE PTR [edi],0x72
  40a106:	pop    ds
  40a107:	dec    eax
  40a108:	or     dl,BYTE PTR [ecx]
  40a10a:	stc    
  40a10b:	inc    edx
  40a10c:	outs   dx,BYTE PTR ds:[esi]
  40a10d:	sti    
  40a10e:	sbb    ebx,DWORD PTR ds:[edi-0x42]
  40a112:	not    BYTE PTR [esi+0x5d]
  40a115:	lahf   
  40a116:	icebp  
  40a117:	mov    ebx,DWORD PTR [edx-0x2a]
  40a11a:	dec    esi
  40a11b:	arpl   WORD PTR [edi+0x3cf884a8],cx
  40a121:	pop    es
  40a122:	sub    eax,0x28caf952
  40a127:	mov    DWORD PTR [ebp+0x77a77d50],eax
  40a12d:	xor    bh,BYTE PTR [ebx+ebp*4+0x47afe191]
  40a134:	mov    DWORD PTR [edx+0x26],edx
  40a137:	pop    es
  40a138:	jge    0x40a0c7
  40a13a:	pop    ebp
  40a13b:	sbb    DWORD PTR [edi+esi*1+0x7407f0ae],ecx
  40a142:	in     al,0x16
  40a144:	push   edx
  40a145:	push   cs
  40a146:	jbe    0x40a168
  40a148:	sub    BYTE PTR [esi+0x4163e583],bl
  40a14e:	fisttp WORD PTR [edi]
  40a150:	cmp    BYTE PTR [eax],bl
  40a152:	push   ecx
  40a153:	and    dl,BYTE PTR [edi+edi*1+0x37376bec]
  40a15a:	imul   edx,ecx,0x5f3b4846
  40a160:	clc    
  40a161:	jecxz  0x40a14f
  40a163:	mulps  xmm0,XMMWORD PTR [ecx-0x591eea56]
  40a16a:	cmc    
  40a16b:	imul   si,WORD PTR [esi],0xffd2
  40a16f:	inc    esp
  40a170:	mov    esi,ebp
  40a172:	js     0x40a138
  40a174:	fdiv   QWORD PTR [eax+edi*8+0x1c]
  40a178:	leave  
  40a179:	and    ecx,DWORD PTR [edx]
  40a17b:	mov    WORD PTR [esi+ebx*4-0x6fdab2e9],?
  40a182:	fwait
  40a183:	adc    esp,esp
  40a185:	mov    bl,0x70
  40a187:	ins    DWORD PTR es:[edi],dx
  40a188:	sbb    al,0xa2
  40a18a:	sbb    DWORD PTR ds:0x543ecd36,ebx
  40a190:	jne    0x40a195
  40a192:	std    
  40a193:	push   ds
  40a194:	lods   eax,DWORD PTR ds:[esi]
  40a195:	fild   QWORD PTR [eax]
  40a197:	ret    
  40a198:	adc    al,0xba
  40a19a:	arpl   cx,di
  40a19c:	ror    DWORD PTR [edx+0x4b774aff],cl
  40a1a2:	repz push esi
  40a1a4:	xor    DWORD PTR [edi-0x200505f2],edi
  40a1aa:	ins    BYTE PTR es:[edi],dx
  40a1ab:	push   ds
  40a1ac:	aam    0xd4
  40a1ae:	clc    
  40a1af:	mov    edx,0x26dcd38a
  40a1b4:	add    dh,BYTE PTR [esi-0x21]
  40a1b7:	in     eax,0xb2
  40a1b9:	cmp    edi,DWORD PTR [eax-0x77377b07]
  40a1bf:	mov    esp,0x5de2ebf1
  40a1c4:	mov    ebp,0xf7e9198e
  40a1c9:	test   BYTE PTR [ebx+0x5f],ch
  40a1cc:	int    0x77
  40a1ce:	sub    al,0x4c
  40a1d0:	mul    BYTE PTR [edx]
  40a1d2:	sbb    BYTE PTR [esi+0x7312d69d],bl
  40a1d8:	add    al,0x56
  40a1da:	xlat   BYTE PTR ds:[ebx]
  40a1db:	and    ch,ah
  40a1dd:	jbe    0x40a210
  40a1df:	stos   DWORD PTR es:[edi],eax
  40a1e0:	push   ecx
  40a1e1:	pop    ss
  40a1e2:	adc    ch,BYTE PTR [edi]
  40a1e4:	dec    ecx
  40a1e5:	bound  edi,QWORD PTR [eax-0x22]
  40a1e8:	pop    ss
  40a1e9:	mov    ds:0xefefb3ea,eax
  40a1ee:	call   0x1170:0xc9baf9b6
  40a1f5:	aaa    
  40a1f6:	push   ecx
  40a1f7:	shl    BYTE PTR [eax-0x39],1
  40a1fa:	mov    eax,0x2d0bc36a
  40a1ff:	mov    dl,0x1d
  40a201:	enter  0x7a88,0x2b
  40a205:	shr    DWORD PTR [ebx-0x212bd2c1],0xd3
  40a20c:	push   0xb5fdf0f5
  40a211:	idiv   DWORD PTR [ecx+0x33b92f9f]
  40a217:	dec    ecx
  40a218:	cwde   
  40a219:	cmp    al,0x65
  40a21b:	cli    
  40a21c:	test   eax,0x48097871
  40a221:	jbe    0x40a271
  40a223:	shl    DWORD PTR [eax+0x67],1
  40a226:	jne    0x40a1de
  40a228:	aad    0xd7
  40a22a:	adc    al,0xf9
  40a22c:	dec    ebx
  40a22d:	adc    ebx,esi
  40a22f:	jle    0x40a28e
  40a231:	and    al,dl
  40a233:	adc    DWORD PTR [eax+0x55],esp
  40a236:	sbb    DWORD PTR [ebx-0x591e6c32],ecx
  40a23c:	imul   ebx,ebp,0x4dc1b050
  40a242:	jecxz  0x40a207
  40a244:	pop    ds
  40a245:	dec    DWORD PTR [esi-0x4b1e59b7]
  40a24b:	add    al,0x97
  40a24d:	loopne 0x40a1d0
  40a24f:	mov    ebx,0xf1a1ca94
  40a254:	sub    eax,0x8a961608
  40a25a:	outs   dx,BYTE PTR ds:[esi]
  40a25b:	out    0x10,al
  40a25d:	mov    bh,0x62
  40a25f:	cmp    bl,0x90
  40a262:	in     eax,dx
  40a263:	jl     0x40a263
  40a265:	ja     0x40a25f
  40a267:	test   al,0xd7
  40a269:	(bad)  [ebx+0x38f70e7c]
  40a26f:	imul   esp,DWORD PTR [edx+0x7],0xffffffe2
  40a273:	mov    WORD PTR ds:0xe02c0320,?
  40a279:	std    
  40a27a:	retf   
  40a27b:	in     eax,dx
  40a27c:	inc    ebp
  40a27d:	iret   
  40a27e:	sbb    eax,DWORD PTR [ebx+0x3b]
  40a281:	aas    
  40a282:	xor    dl,bh
  40a284:	enter  0x9d73,0xb5
  40a288:	ss jns 0x40a24d
  40a28b:	xor    eax,0xc3f9cf6f
  40a290:	arpl   WORD PTR [edi+0x1a614e2],bp
  40a296:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a297:	inc    ebx
  40a298:	je     0x40a257
  40a29a:	lahf   
  40a29b:	and    eax,0xd2ac225f
  40a2a0:	mov    ds:0x51c2ac57,eax
  40a2a5:	out    dx,al
  40a2a6:	jno    0x40a23d
  40a2a8:	cmc    
  40a2a9:	jae    0x40a297
  40a2ab:	fiadd  DWORD PTR [ebp+0x5ef627be]
  40a2b1:	push   esi
  40a2b2:	pop    esp
  40a2b3:	sub    al,0x86
  40a2b5:	add    BYTE PTR [edx+0x11],bh
  40a2b8:	fs inc ecx
  40a2ba:	add    bl,BYTE PTR [edx-0x5d]
  40a2bd:	mov    edi,0x453f3638
  40a2c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2c3:	dec    ebp
  40a2c4:	bound  edx,QWORD PTR [edi-0x3c5f7f8]
  40a2ca:	loop   0x40a2f9
  40a2cc:	add    dl,BYTE PTR [edx+0x6b]
  40a2cf:	cmp    BYTE PTR [edx-0x1bd69f83],bh
  40a2d5:	lahf   
  40a2d6:	xor    al,0x26
  40a2d8:	popf   
  40a2d9:	add    ch,BYTE PTR [ebp+0x41c65d1c]
  40a2df:	frstor [ebx]
  40a2e1:	mov    cl,0xa1
  40a2e3:	mov    eax,ds:0xba7c16cd
  40a2e8:	cli    
  40a2e9:	add    ch,BYTE PTR [edi+0x4f935e8c]
  40a2ef:	or     BYTE PTR [edi],0xc9
  40a2f2:	push   es
  40a2f3:	mov    dl,0xe7
  40a2f5:	and    eax,0x2b37a5a1
  40a2fa:	ret    0x6df5
  40a2fd:	test   DWORD PTR [ebp+0x61d45c7b],esi
  40a303:	dec    ebp
  40a304:	adc    cl,BYTE PTR ds:0xf4f4480b
  40a30a:	dec    ebx
  40a30b:	mov    esi,0x39a66c0a
  40a310:	mov    ecx,0x553dd36c
  40a315:	add    eax,0x7046f08c
  40a31a:	stos   DWORD PTR es:[edi],eax
  40a31b:	lods   al,BYTE PTR ds:[esi]
  40a31c:	jo     0x40a33a
  40a31e:	ret    
  40a31f:	add    ah,BYTE PTR fs:[ebx+0x269e54ca]
  40a326:	aad    0xb
  40a328:	in     al,dx
  40a329:	mov    eax,ds:0x813099c
  40a32e:	jl     0x40a2ea
  40a330:	pop    esi
  40a331:	push   cs
  40a332:	fdivp  st(0),st
  40a334:	pop    edi
  40a335:	push   0xffffffe1
  40a337:	add    al,0xb3
  40a339:	retf   
  40a33a:	adc    al,0x9f
  40a33c:	mov    ds:0x71f38422,al
  40a341:	out    dx,al
  40a342:	bts    DWORD PTR [eax-0x230451da],esp
  40a349:	pop    edx
  40a34a:	mov    cl,BYTE PTR [ebp-0x7b1b8b86]
  40a350:	jg     0x40a2e7
  40a352:	or     esi,ebx
  40a354:	mov    ebp,0xc9b27a17
  40a359:	rcr    DWORD PTR [edi-0x36],0x7d
  40a35d:	ret    0x135c
  40a360:	ror    BYTE PTR [edi],0x60
  40a363:	clc    
  40a364:	sti    
  40a365:	fdiv   st,st(4)
  40a367:	lods   eax,DWORD PTR ss:[esi]
  40a369:	scas   al,BYTE PTR es:[edi]
  40a36a:	jecxz  0x40a34a
  40a36c:	lods   eax,DWORD PTR ds:[esi]
  40a36d:	cmp    eax,0x5775c785
  40a372:	xchg   ebp,eax
  40a373:	(bad)  
  40a374:	lods   al,BYTE PTR ds:[esi]
  40a375:	push   esi
  40a376:	(bad)  
  40a377:	ja     0x40a35b
  40a379:	in     eax,dx
  40a37a:	cs dec edx
  40a37c:	icebp  
  40a37d:	and    DWORD PTR [ecx-0x38f3d92d],esi
  40a383:	jp     0x40a30a
  40a385:	cs out 0x3e,al
  40a388:	imul   edx,esp,0x1
  40a38b:	cmp    ebp,ebx
  40a38d:	cmp    eax,DWORD PTR [edx]
  40a38f:	outs   dx,BYTE PTR ds:[esi]
  40a390:	clc    
  40a391:	sbb    ebx,DWORD PTR [ecx]
  40a393:	arpl   dx,bp
  40a395:	imul   ecx,DWORD PTR [eax-0x21],0x7a
  40a399:	in     eax,0x1d
  40a39b:	dec    ebx
  40a39c:	popf   
  40a39d:	in     al,dx
  40a39e:	in     al,dx
  40a39f:	xchg   esp,eax
  40a3a0:	push   ebx
  40a3a1:	sbb    bl,bl
  40a3a3:	inc    ebp
  40a3a4:	inc    ebp
  40a3a5:	adc    cl,ch
  40a3a7:	and    eax,esi
  40a3a9:	jmp    0x40a409
  40a3ab:	shl    DWORD PTR [ecx+0x603687d4],1
  40a3b1:	adc    al,0xec
  40a3b3:	cs pop ebp
  40a3b5:	xchg   edx,eax
  40a3b6:	clc    
  40a3b7:	mov    eax,ds:0xa1398caf
  40a3bc:	loope  0x40a3ac
  40a3be:	cmp    edi,DWORD PTR [esi]
  40a3c0:	fwait
  40a3c1:	popa   
  40a3c2:	inc    ecx
  40a3c3:	push   ss
  40a3c4:	xchg   edx,eax
  40a3c5:	test   al,0x8d
  40a3c7:	xor    ebx,DWORD PTR [ebp-0x52]
  40a3ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3cb:	or     DWORD PTR [edx+0x4a3ce809],eax
  40a3d1:	inc    ebp
  40a3d2:	fstp   QWORD PTR [ecx+0x78]
  40a3d5:	and    ecx,DWORD PTR [esi+0xb]
  40a3d8:	test   DWORD PTR [ecx+0x4f],edi
  40a3db:	cwde   
  40a3dc:	dec    ebx
  40a3dd:	inc    esi
  40a3de:	sar    DWORD PTR [ebp+ebx*1+0x4e],1
  40a3e2:	jbe    0x40a42e
  40a3e4:	(bad)  [ecx+edi*2+0x5d]
  40a3e8:	sub    ebx,DWORD PTR [edi+0x35]
  40a3eb:	test   DWORD PTR [ebx+0xcc9af62],edi
  40a3f1:	pushf  
  40a3f2:	cmp    bh,bh
  40a3f4:	jp     0x40a3a0
  40a3f6:	and    eax,0x399fc908
  40a3fb:	or     eax,0x79ff1f88
  40a400:	mul    cl
  40a402:	int3   
  40a403:	add    al,0x49
  40a405:	or     eax,0xc733657a
  40a40a:	cmp    al,0xfb
  40a40c:	push   ebx
  40a40d:	fiadd  WORD PTR [eax+0x105053db]
  40a413:	out    0x29,eax
  40a415:	inc    ebp
  40a416:	popf   
  40a417:	jne    0x40a465
  40a419:	aad    0x1e
  40a41b:	jne    0x40a435
  40a41d:	fcmovu st,st(7)
  40a41f:	cwde   
  40a420:	ss lahf 
  40a422:	mov    eax,0x89989f32
  40a427:	jl     0x40a40b
  40a429:	sub    al,0x98
  40a42b:	cmc    
  40a42c:	jmp    0xb01dbc8a
  40a431:	fistp  QWORD PTR [esi]
  40a433:	lock idiv BYTE PTR [eax-0xa795829]
  40a43a:	push   esp
  40a43b:	ins    DWORD PTR es:[edi],dx
  40a43c:	and    eax,0x550c8c86
  40a441:	xchg   ebx,eax
  40a442:	ins    BYTE PTR es:[edi],dx
  40a443:	(bad)  
  40a444:	mov    esp,0xe6b70c34
  40a449:	jmp    0x3f2e0b9b
  40a44e:	dec    ebx
  40a44f:	jnp    0x40a4bc
  40a451:	mov    BYTE PTR [esi+0x4e43ae7b],ah
  40a457:	(bad)  [ebx]
  40a459:	outs   dx,DWORD PTR ds:[esi]
  40a45a:	cmp    edx,0xf3077a41
  40a460:	sbb    edi,esi
  40a462:	setno  BYTE PTR ds:0xf8af4d5e
  40a469:	jo     0x40a461
  40a46b:	fwait
  40a46c:	sbb    al,0x1f
  40a46e:	out    dx,eax
  40a46f:	fld    QWORD PTR [esi-0x40]
  40a472:	sahf   
  40a473:	rcr    DWORD PTR [edx+0x7c051ce6],0x63
  40a47a:	leave  
  40a47b:	test   eax,0x43f474b5
  40a480:	lds    edx,FWORD PTR [esi-0x56]
  40a483:	push   ds
  40a484:	mov    ah,0xd7
  40a486:	pop    edi
  40a487:	push   esp
  40a488:	cs lock pop edx
  40a48b:	adc    eax,0x1278d4b0
  40a490:	fadd   DWORD PTR ds:0x80b7590a
  40a496:	xchg   edx,eax
  40a497:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a498:	mov    dh,0x1b
  40a49a:	or     BYTE PTR [eax-0x3fa79e83],al
  40a4a0:	and    al,0x33
  40a4a2:	sbb    eax,0x980b8d7b
  40a4a7:	push   ds
  40a4a8:	sub    eax,0x901cefe9
  40a4ad:	sbb    BYTE PTR [eax-0x3f3915b7],0xc8
  40a4b4:	sbb    ah,BYTE PTR [ebx-0x34f7a0f2]
  40a4ba:	add    DWORD PTR [ecx],0xffffffc8
  40a4bd:	xor    DWORD PTR ds:0xb94930cc,0x5f17897d
  40a4c7:	cmp    al,0x8
  40a4c9:	jl     0x40a44b
  40a4cb:	mov    esi,0x1151a8b7
  40a4d0:	scas   eax,DWORD PTR es:[edi]
  40a4d1:	add    DWORD PTR [eax],edi
  40a4d3:	pop    ebx
  40a4d4:	or     bh,BYTE PTR [edi]
  40a4d6:	outs   dx,BYTE PTR ds:[esi]
  40a4d7:	cmp    edi,DWORD PTR [eax+0x6b]
  40a4da:	sub    eax,0x741d36d
  40a4df:	scas   eax,DWORD PTR es:[edi]
  40a4e0:	mov    BYTE PTR ds:0xb73d817e,dl
  40a4e6:	gs xchg ecx,eax
  40a4e8:	mov    ch,0x29
  40a4ea:	aas    
  40a4eb:	std    
  40a4ec:	daa    
  40a4ed:	bound  ebx,QWORD PTR [edx]
  40a4ef:	inc    ebp
  40a4f0:	into   
  40a4f1:	push   esi
  40a4f2:	dec    edi
  40a4f3:	inc    ecx
  40a4f4:	pop    eax
  40a4f5:	das    
  40a4f6:	jge    0x40a518
  40a4f8:	push   ss
  40a4f9:	ds gs jmp 0x40a55d
  40a4fd:	or     edi,edx
  40a4ff:	ret    0x806d
  40a502:	outs   dx,DWORD PTR ds:[esi]
  40a503:	popa   
  40a504:	or     edx,DWORD PTR [ecx-0x330448f7]
  40a50a:	aaa    
  40a50b:	(bad)  
  40a50c:	cli    
  40a50d:	mov    dl,0xac
  40a50f:	cmp    al,0x9d
  40a511:	nop
  40a512:	xlat   BYTE PTR ds:[ebx]
  40a513:	inc    eax
  40a514:	loope  0x40a4d3
  40a516:	jge    0x40a533
  40a518:	mov    ebx,0xfd4d9122
  40a51d:	popa   
  40a51e:	(bad)  
  40a51f:	out    0xfa,eax
  40a521:	clc    
  40a522:	mov    ah,0x2a
  40a524:	in     al,0x59
  40a526:	mov    ebp,DWORD PTR [ecx]
  40a528:	dec    edx
  40a529:	mov    bh,0x5f
  40a52b:	sbb    eax,ebx
  40a52d:	mov    bh,BYTE PTR [ecx]
  40a52f:	jne    0x40a4d7
  40a531:	sub    al,0xf7
  40a533:	lahf   
  40a534:	dec    esi
  40a535:	fcmovne st,st(3)
  40a537:	mov    DWORD PTR [ecx+0xd],esi
  40a53a:	add    dh,BYTE PTR [ebx]
  40a53c:	fistp  QWORD PTR [eax-0x5fc3c63]
  40a542:	sbb    esi,DWORD PTR [edx]
  40a544:	mov    bl,0xea
  40a546:	ss (bad) 
  40a548:	xchg   edx,eax
  40a549:	sbb    eax,0x54119293
  40a54e:	jns    0x40a4f3
  40a550:	jbe    0x40a532
  40a552:	ja     0x40a4dc
  40a554:	cmp    DWORD PTR [ecx],0x70b44e59
  40a55a:	pop    eax
  40a55b:	mov    cl,0x49
  40a55d:	cmp    ecx,edi
  40a55f:	(bad)
  40a562:	or     eax,0xe3df40d7
  40a567:	cli    
  40a568:	ins    DWORD PTR es:[edi],dx
  40a569:	inc    edi
  40a56a:	fstp   QWORD PTR [esi-0x1b569155]
  40a570:	bound  esi,QWORD PTR [ebp+0x59]
  40a573:	sbb    edi,DWORD PTR [edx+0x73]
  40a576:	push   esp
  40a577:	outs   dx,DWORD PTR ds:[esi]
  40a578:	pop    es
  40a579:	mov    edx,0x389e9617
  40a57e:	fst    DWORD PTR [eax-0x6d056300]
  40a584:	aam    0x3a
  40a586:	xchg   DWORD PTR [edi],ebp
  40a588:	daa    
  40a589:	out    0xc3,al
  40a58b:	push   cs
  40a58c:	outs   dx,BYTE PTR gs:[esi]
  40a58e:	iret   
  40a58f:	data16 adc al,0x23
  40a592:	push   0x98a968ff
  40a597:	shl    DWORD PTR [eax-0x194b5610],cl
  40a59d:	push   ebx
  40a59e:	test   eax,0x54e9ef9e
  40a5a3:	fisttp WORD PTR [ebp+0x53]
  40a5a6:	leave  
  40a5a7:	sbb    DWORD PTR [edx-0x3f],esp
  40a5aa:	into   
  40a5ab:	popf   
  40a5ac:	fcmovnb st,st(3)
  40a5ae:	mov    dh,0xa5
  40a5b0:	sub    al,0x37
  40a5b2:	mov    al,ds:0xe69dad95
  40a5b7:	mov    al,0x7f
  40a5b9:	mov    BYTE PTR [eax-0x1d],bl
  40a5bc:	fisttp DWORD PTR [edx+eax*8]
  40a5bf:	jo     0x40a5a8
  40a5c1:	rol    DWORD PTR [ebp-0x4904fc9],1
  40a5c7:	jns    0x40a5a2
  40a5c9:	dec    esi
  40a5ca:	outs   dx,DWORD PTR ds:[esi]
  40a5cb:	call   0xe7d02504
  40a5d0:	xor    al,0x88
  40a5d2:	add    BYTE PTR [edi+ecx*8-0x7299a3c0],bl
  40a5d9:	mov    eax,0x593a1385
  40a5de:	retf   
  40a5df:	mov    eax,ds:0xf0cecd9d
  40a5e4:	pop    esp
  40a5e5:	lds    ebp,FWORD PTR [ecx]
  40a5e7:	pop    ss
  40a5e8:	jecxz  0x40a5c9
  40a5ea:	fstp   DWORD PTR [eax]
  40a5ec:	cwde   
  40a5ed:	cld    
  40a5ee:	add    DWORD PTR [ecx+edx*4],edi
  40a5f1:	jecxz  0x40a5c9
  40a5f3:	adc    al,BYTE PTR cs:[ebp-0x6b]
  40a5f7:	in     eax,0x7
  40a5f9:	fild   DWORD PTR [esi+0x5bcb59b6]
  40a5ff:	daa    
  40a600:	test   DWORD PTR [eax-0x3],ebx
  40a603:	lods   eax,DWORD PTR ds:[esi]
  40a604:	push   ss
  40a605:	mov    bl,0x99
  40a607:	std    
  40a608:	in     eax,dx
  40a609:	mov    dh,0x31
  40a60b:	xchg   DWORD PTR [ebx+0x678d1bc8],ebp
  40a611:	push   ebp
  40a612:	into   
  40a613:	(bad)  
  40a614:	in     al,dx
  40a615:	gs loop 0x40a680
  40a618:	rcr    dh,cl
  40a61a:	mov    esi,0xdc0659a1
  40a61f:	stc    
  40a620:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a621:	sub    DWORD PTR [edx+0x21],0x53840509
  40a628:	scas   eax,DWORD PTR es:[edi]
  40a629:	fimul  DWORD PTR cs:[edi]
  40a62c:	aas    
  40a62d:	shr    BYTE PTR [eax-0x5c],cl
  40a630:	lahf   
  40a631:	dec    esp
  40a632:	xor    bh,BYTE PTR ds:0xc10f7d15
  40a638:	lods   al,BYTE PTR ds:[esi]
  40a639:	pop    edi
  40a63a:	adc    BYTE PTR [eax+0x6a],dl
  40a63d:	push   eax
  40a63e:	stc    
  40a63f:	inc    ecx
  40a640:	or     BYTE PTR [eax-0x5e29fea9],ch
  40a646:	sub    eax,0x20359fc7
  40a64b:	lods   al,BYTE PTR ds:[esi]
  40a64c:	aaa    
  40a64d:	or     al,0xd2
  40a64f:	xor    al,BYTE PTR [ebx+0x551819ab]
  40a655:	jnp    0x40a5f0
  40a657:	or     BYTE PTR [edi-0x6deaaf23],bl
  40a65d:	or     DWORD PTR [edx+0x119a8f21],0x6065271a
  40a667:	call   0x46952c9d
  40a66c:	sbb    DWORD PTR [edi-0x31],0x26
  40a670:	retf   
  40a671:	xor    DWORD PTR [esp+edx*4],ecx
  40a674:	dec    esp
  40a675:	mov    eax,ds:0xc275afcf
  40a67a:	repz imul edx,DWORD PTR fs:[edi+0x3e],0x22
  40a680:	or     al,0xc1
  40a682:	aad    0x58
  40a684:	sahf   
  40a685:	inc    eax
  40a686:	pop    ss
  40a687:	push   es
  40a688:	push   esp
  40a689:	out    dx,eax
  40a68a:	xlat   BYTE PTR ds:[ebx]
  40a68b:	scas   al,BYTE PTR es:[edi]
  40a68c:	or     al,0x73
  40a68e:	and    al,0xa8
  40a690:	xor    BYTE PTR [ebp+0x3b],dl
  40a693:	mov    edi,0x74033cfa
  40a698:	popa   
  40a699:	xor    ebp,DWORD PTR [ecx+ecx*1-0x17]
  40a69d:	gs pop ds
  40a69f:	fsubr  st,st(4)
  40a6a1:	cmp    eax,0x134117a6
  40a6a6:	and    DWORD PTR [ebx-0xf133881],esp
  40a6ac:	inc    esp
  40a6ad:	call   0x5a79:0x77d8e1a5
  40a6b4:	cld    
  40a6b5:	mov    al,0xa5
  40a6b7:	cmp    eax,0xaaaa6d9c
  40a6bc:	(bad)  
  40a6bd:	sbb    ah,dl
  40a6bf:	cli    
  40a6c0:	cld    
  40a6c1:	sahf   
  40a6c2:	mov    esi,0x48a5a671
  40a6c7:	cmp    DWORD PTR [ecx],eax
  40a6c9:	pop    es
  40a6ca:	stos   DWORD PTR es:[edi],eax
  40a6cb:	push   cs
  40a6cc:	adc    esp,ebp
  40a6ce:	cmp    eax,0xa2d82952
  40a6d3:	aaa    
  40a6d4:	arpl   WORD PTR [ecx+esi*4+0x2e],ax
  40a6d8:	fs mov ch,0x10
  40a6db:	fwait
  40a6dc:	shl    DWORD PTR ds:0x43676db,cl
  40a6e2:	jp     0x40a6cf
  40a6e4:	ror    BYTE PTR [edi-0x34547f2],0x6f
  40a6eb:	push   ds
  40a6ec:	jle    0x40a6d8
  40a6ee:	pop    eax
  40a6ef:	std    
  40a6f0:	fidiv  WORD PTR [ecx-0x13455658]
  40a6f6:	in     eax,dx
  40a6f7:	push   cs
  40a6f8:	pop    ebp
  40a6f9:	sub    BYTE PTR ss:[eax],ch
  40a6fc:	push   ss
  40a6fd:	mov    ecx,0x24868d9f
  40a702:	pop    ss
  40a703:	call   FWORD PTR [esi]
  40a705:	cmp    eax,0x3cd33a5f
  40a70a:	int    0x26
  40a70c:	adc    DWORD PTR [esi-0x72ab3fde],0x1e
  40a713:	mov    bh,0x7f
  40a715:	jne    0x40a754
  40a717:	or     al,0xe0
  40a719:	ds popf 
  40a71b:	mov    dl,0x1f
  40a71d:	add    BYTE PTR [edi-0x39f697cf],0x6f
  40a724:	jo     0x40a6c4
  40a726:	jle    0x40a79f
  40a728:	in     eax,dx
  40a729:	cwde   
  40a72a:	cmp    dl,0x77
  40a72d:	adc    BYTE PTR [ebp-0x2a],dl
  40a730:	xor    ch,BYTE PTR [ebp+0x3f59ecee]
  40a736:	retf   
  40a737:	jnp    0x40a79c
  40a739:	or     al,0x73
  40a73b:	pop    ss
  40a73c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a73d:	cmp    DWORD PTR [esi+0x2f],ebp
  40a740:	push   ss
  40a741:	inc    esp
  40a742:	jno    0x40a767
  40a744:	je     0x40a713
  40a746:	aad    0x63
  40a748:	mov    bl,0xa2
  40a74a:	std    
  40a74b:	sub    BYTE PTR [edx],dh
  40a74d:	les    edi,FWORD PTR [ebx-0x268c038]
  40a753:	(bad)  
  40a754:	aaa    
  40a755:	cmp    ebx,edx
  40a757:	push   ebx
  40a758:	call   0x8a880943
  40a75d:	cdq    
  40a75e:	inc    esp
  40a75f:	iret   
  40a760:	and    BYTE PTR [eax],bh
  40a762:	dec    edx
  40a763:	xchg   DWORD PTR [esi+0x1e159211],edx
  40a769:	sbb    BYTE PTR [ebx+0x7e],cl
  40a76c:	rcr    BYTE PTR [edx],0x9e
  40a76f:	push   ss
  40a770:	inc    esp
  40a771:	jle    0x40a7a1
  40a773:	(bad)  
  40a775:	sub    al,0x20
  40a777:	pop    ebp
  40a778:	(bad)  
  40a779:	out    dx,al
  40a77a:	in     al,0x53
  40a77c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a77d:	jae    0x40a756
  40a77f:	cmp    eax,0x40d0aa57
  40a784:	ror    ecx,0x14
  40a787:	jo     0x40a7a8
  40a789:	jbe    0x40a70f
  40a78b:	adc    eax,0x9ec9582e
  40a790:	push   ebx
  40a791:	clc    
  40a792:	adc    eax,0x683a306c
  40a797:	inc    ecx
  40a798:	fst    DWORD PTR [esi+0x6029e8a5]
  40a79e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a79f:	xor    al,0xa4
  40a7a1:	leave  
  40a7a2:	pop    esi
  40a7a3:	jb     0x40a789
  40a7a5:	inc    esi
  40a7a6:	arpl   WORD PTR [esi+esi*8+0x3f],bp
  40a7aa:	cmp    ecx,DWORD PTR [edx+0x54]
  40a7ad:	and    cl,ch
  40a7af:	add    ecx,DWORD PTR [ecx+esi*4]
  40a7b2:	imul   edx,DWORD PTR [edx-0x6ccd1537],0xb7b54646
  40a7bc:	imul   edi,DWORD PTR [edx+0x5cf74014],0x7
  40a7c3:	xor    eax,0xefdb4c96
  40a7c8:	out    0x5a,al
  40a7ca:	(bad)  
  40a7cb:	outs   dx,BYTE PTR ds:[esi]
  40a7cc:	jge    0x40a7b0
  40a7ce:	mov    ecx,0x2632ea37
  40a7d3:	add    al,0x49
  40a7d5:	hlt    
  40a7d6:	es pop edx
  40a7d8:	pop    edx
  40a7d9:	cmp    esp,DWORD PTR [edi]
  40a7db:	mov    ss,WORD PTR [eax]
  40a7dd:	stc    
  40a7de:	rol    DWORD PTR [edx+eax*8],0xb3
  40a7e2:	aaa    
  40a7e3:	jbe    0x40a79c
  40a7e5:	sar    DWORD PTR [edx],0xd4
  40a7e8:	cs fst st(5)
  40a7eb:	popf   
  40a7ec:	cli    
  40a7ed:	inc    ecx
  40a7ee:	add    eax,DWORD PTR [esi+0x42]
  40a7f1:	add    al,0xfb
  40a7f3:	(bad)  
  40a7f4:	sbb    BYTE PTR [ebx],al
  40a7f6:	add    al,0x28
  40a7f8:	out    0xca,al
  40a7fa:	mov    al,gs:0x9876f17f
  40a800:	aad    0xcb
  40a802:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a803:	mov    ch,0xcc
  40a805:	test   al,0x1b
  40a807:	cdq    
  40a808:	(bad)  
  40a809:	inc    esp
  40a80b:	outs   dx,BYTE PTR ds:[esi]
  40a80c:	retf   0xef9
  40a80f:	js     0x40a836
  40a811:	add    DWORD PTR [ebx+0x12853f55],0x8d901a86
  40a81b:	mov    ds:0xe827d295,al
  40a820:	retf   
  40a821:	push   esp
  40a822:	jae    0x40a7fb
  40a824:	add    BYTE PTR [ebx],ah
  40a826:	push   ecx
  40a827:	cdq    
  40a828:	mov    al,ds:0xfc5e2c6
  40a82d:	and    ebp,DWORD PTR [ebx-0x5f3198a7]
  40a833:	loop   0x40a8b1
  40a835:	in     al,0x6a
  40a837:	outs   dx,BYTE PTR ds:[esi]
  40a838:	mov    eax,ds:0x273e9280
  40a83d:	sbb    esp,DWORD PTR [edi-0x51b86dc3]
  40a843:	or     DWORD PTR [esi],ebp
  40a845:	adc    BYTE PTR [ecx+0x25200bc7],bl
  40a84b:	enter  0xed82,0xf2
  40a84f:	adc    edx,eax
  40a851:	or     eax,0x6700d920
  40a856:	inc    edi
  40a857:	mov    ds:0x1c242362,al
  40a85c:	cmc    
  40a85d:	sbb    DWORD PTR [edx-0x41],eax
  40a860:	scas   al,BYTE PTR es:[edi]
  40a861:	pop    esi
  40a862:	sbb    al,0x15
  40a864:	pusha  
  40a865:	outs   dx,BYTE PTR ds:[esi]
  40a866:	jo     0x40a7ee
  40a868:	out    dx,eax
  40a869:	xor    DWORD PTR [ebp+ebx*2+0x1a],esi
  40a86d:	(bad)  
  40a86e:	cmc    
  40a86f:	(bad)  
  40a870:	int    0x16
  40a872:	jmp    0x6725306e
  40a877:	cli    
  40a878:	cmp    eax,0x72ad7361
  40a87d:	sbb    DWORD PTR [esi+0x3d0f430b],0x34a496e8
  40a887:	adc    al,0x31
  40a889:	adc    eax,0x375690d4
  40a88e:	sbb    edi,DWORD PTR [eax]
  40a890:	xor    edx,DWORD PTR [ebp+0x4a]
  40a893:	les    edx,FWORD PTR [esp+ebx*2+0x74]
  40a897:	jns    0x40a86c
  40a899:	dec    eax
  40a89a:	lods   eax,DWORD PTR ds:[esi]
  40a89b:	iret   
  40a89c:	jne    0x40a879
  40a89e:	push   esi
  40a89f:	sbb    BYTE PTR [ecx-0x9],bl
  40a8a2:	retf   
  40a8a3:	pop    ds
  40a8a4:	sti    
  40a8a5:	push   ds
  40a8a6:	lds    esi,FWORD PTR [edx]
  40a8a8:	or     BYTE PTR [eax-0x35aecdab],al
  40a8ae:	stos   BYTE PTR es:[edi],al
  40a8af:	cmp    DWORD PTR [edi],esp
  40a8b1:	pop    edx
  40a8b2:	inc    edi
  40a8b3:	pop    eax
  40a8b4:	ret    0xc1b0
  40a8b7:	add    dl,bl
  40a8b9:	enter  0x91c2,0x4e
  40a8bd:	or     DWORD PTR [esi],ecx
  40a8bf:	push   ebx
  40a8c0:	imul   ecx,DWORD PTR [eax+0x213933b6],0xc043a677
  40a8ca:	les    edi,FWORD PTR [ecx-0x42]
  40a8cd:	and    BYTE PTR [edi-0x5928653c],dl
  40a8d3:	fsubr  QWORD PTR [edi]
  40a8d5:	adc    BYTE PTR [ebx],dl
  40a8d7:	sub    BYTE PTR [ebp-0x10c4d0dc],ah
  40a8dd:	loop   0x40a8ff
  40a8df:	mov    ecx,DWORD PTR [eax]
  40a8e1:	ins    BYTE PTR es:[edi],dx
  40a8e2:	pop    edx
  40a8e3:	pop    edi
  40a8e4:	and    dh,ch
  40a8e6:	xchg   ebx,eax
  40a8e7:	xchg   esi,eax
  40a8e8:	ss fdiv st(5),st
  40a8eb:	xlat   BYTE PTR ds:[ebx]
  40a8ec:	pop    ss
  40a8ed:	mov    edx,0xb800bb5f
  40a8f2:	xlat   BYTE PTR ds:[ebx]
  40a8f3:	pop    esi
  40a8f4:	loopne 0x40a8a1
  40a8f6:	aad    0xf0
  40a8f8:	sbb    eax,0x21aee870
  40a8fd:	push   ss
  40a8fe:	sbb    DWORD PTR [eax+0x62],ebp
  40a901:	mov    ?,WORD PTR [edx]
  40a903:	pop    edi
  40a904:	mov    cl,0xda
  40a906:	pop    edi
  40a907:	mov    bl,0x8d
  40a909:	cmp    eax,0xa0be84fb
  40a90e:	mov    al,0xe
  40a910:	or     DWORD PTR [ecx-0xb],ecx
  40a913:	jb     0x40a937
  40a915:	mov    ds:0x6cb8aae4,eax
  40a91a:	jb     0x40a8d0
  40a91c:	popa   
  40a91d:	inc    BYTE PTR [edx-0x2f9ccfa9]
  40a923:	mov    edi,0xa8669a47
  40a928:	push   edi
  40a929:	gs cwde 
  40a92b:	ds sbb eax,esp
  40a92e:	dec    esi
  40a92f:	adc    DWORD PTR [eax],eax
  40a931:	push   0x2f22633a
  40a936:	cmp    BYTE PTR [eax],0xcc
  40a939:	loope  0x40a944
  40a93b:	adc    DWORD PTR [esi-0x6a],ebx
  40a93e:	pushf  
  40a93f:	nop
  40a940:	adc    al,0x3a
  40a942:	adc    BYTE PTR [eax],ah
  40a944:	jecxz  0x40a929
  40a946:	pop    eax
  40a947:	hlt    
  40a948:	ficomp WORD PTR [ebx-0x7f]
  40a94b:	mov    dl,0x36
  40a94d:	and    eax,0x5ca29ce9
  40a952:	test   al,0x14
  40a954:	mov    dh,0x56
  40a956:	ins    DWORD PTR es:[edi],dx
  40a957:	dec    esi
  40a958:	and    esi,0xffffffbd
  40a95b:	pop    eax
  40a95c:	xchg   DWORD PTR [edi],ebx
  40a95e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a95f:	add    eax,0xe392d5d9
  40a964:	stc    
  40a965:	fcomi  st,st(1)
  40a967:	jne    0x40a8f9
  40a969:	call   0xc36a3ab9
  40a96e:	stc    
  40a96f:	imul   ebx,esp,0xf2256cab
  40a975:	and    al,0x35
  40a977:	mov    ?,esp
  40a979:	push   esi
  40a97a:	pop    ds
  40a97b:	mov    ebx,DWORD PTR [edx+0x6481c258]
  40a981:	dec    esi
  40a982:	sub    ah,cl
  40a984:	cli    
  40a985:	jnp    0x40a9a6
  40a987:	js     0x40a957
  40a989:	and    DWORD PTR [ecx+0x5aaf140b],ecx
  40a98f:	xchg   esi,eax
  40a990:	sub    bh,BYTE PTR [ebp-0x4bed5485]
  40a996:	loopne 0x40a9f0
  40a998:	push   es
  40a999:	dec    ebx
  40a99a:	fwait
  40a99b:	sub    al,0x6b
  40a99d:	and    al,0x6
  40a99f:	adc    BYTE PTR [edi],0xc7
  40a9a2:	adc    al,0x94
  40a9a4:	adc    DWORD PTR [ebx+0x20a3da24],0xbee15ee8
  40a9ae:	cmp    al,0xba
  40a9b0:	sahf   
  40a9b1:	mov    DWORD PTR [edi+0x28],ebp
  40a9b4:	sub    ecx,ecx
  40a9b6:	add    eax,edx
  40a9b8:	jbe    0x40a951
  40a9ba:	and    al,0x4c
  40a9bc:	cmp    DWORD PTR ds:0x583776fa,edi
  40a9c2:	ret    
  40a9c3:	fisubr WORD PTR [eax-0x3c]
  40a9c6:	(bad)  
  40a9c7:	or     DWORD PTR [edi+ecx*2-0x20db4a00],esi
  40a9ce:	scas   eax,DWORD PTR es:[edi]
  40a9cf:	sbb    eax,0xe43fb595
  40a9d4:	or     eax,0x6a9312fb
  40a9d9:	add    ebp,DWORD PTR [edi+0x5131f3b6]
  40a9df:	pop    eax
  40a9e0:	xor    ch,BYTE PTR [esi+0x637078bd]
  40a9e6:	sub    DWORD PTR [edx-0x2f00a8f7],esp
  40a9ec:	pop    edx
  40a9ed:	inc    ebx
  40a9ee:	and    ah,BYTE PTR [edx-0x3a]
  40a9f1:	xor    al,0xd4
  40a9f3:	mov    edx,0x7ce96092
  40a9f8:	xor    dh,BYTE PTR [esi]
  40a9fa:	shl    ah,0x90
  40a9fd:	mov    edi,0x6f5ca17b
  40aa02:	mov    ch,0x6a
  40aa04:	sbb    eax,0x5e7d9a1c
  40aa09:	shl    DWORD PTR [esp+edi*8-0x49],cl
  40aa0d:	cld    
  40aa0e:	xchg   DWORD PTR [ebx+eiz*2-0x32],eax
  40aa12:	rol    DWORD PTR [ebp-0x7df46fb],cl
  40aa18:	mov    al,BYTE PTR [eax]
  40aa1a:	mov    dl,0xcf
  40aa1c:	cmp    esi,ebx
  40aa1e:	fdiv   DWORD PTR [eax+0x62]
  40aa21:	xchg   DWORD PTR [esi+0x10654b77],esp
  40aa27:	daa    
  40aa28:	(bad)  
  40aa29:	shl    BYTE PTR [eax],1
  40aa2b:	in     eax,dx
  40aa2c:	call   DWORD PTR ds:0x425014
  40aa32:	push   0x97898797
  40aa37:	or     DWORD PTR ds:0x42a008,0x42d008
  40aa41:	call   DWORD PTR ds:0x425004
  40aa47:	and    DWORD PTR ds:0x42c01c,0x0
  40aa51:	mov    ebx,DWORD PTR ds:0x42c01c
  40aa57:	inc    ebx
  40aa58:	mov    DWORD PTR ds:0x42c01c,ebx
  40aa5e:	cmp    DWORD PTR ds:0x42c01c,0x5
  40aa65:	jne    0x40aa76
  40aa6b:	push   0x57f5
  40aa70:	call   DWORD PTR ds:0x42504c
  40aa76:	cmp    DWORD PTR ds:0x42c01c,0x4
  40aa7d:	jne    0x40aa92
  40aa83:	xor    ebx,ebx
  40aa85:	xor    ebx,DWORD PTR ds:0x42c01c
  40aa8b:	inc    ebx
  40aa8c:	mov    DWORD PTR ds:0x42c01c,ebx
  40aa92:	cmp    DWORD PTR ds:0x42c01c,0x10
  40aa99:	jb     0x40aa51
  40aa9f:	xor    eax,eax
  40aaa1:	xor    eax,DWORD PTR ds:0x42a014
  40aaa7:	xor    DWORD PTR ds:0x42d018,eax
  40aaad:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  40aab4:	or     ecx,DWORD PTR ds:0x42d008
  40aaba:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40aac1:	mov    ecx,DWORD PTR [ebp-0x4]
  40aac4:	or     DWORD PTR ds:0x42b014,edi
  40aaca:	mov    ebx,0x7510893
  40aacf:	xor    eax,eax
  40aad1:	or     eax,DWORD PTR ds:0x423ec0
  40aad7:	mov    eax,DWORD PTR [eax]
  40aad9:	or     DWORD PTR ds:0x42d018,eax
  40aadf:	xor    ecx,ebx
  40aae1:	not    eax
  40aae3:	mov    eax,0x3272db
  40aae8:	or     DWORD PTR ds:0x42c010,0x42900c
  40aaf2:	add    ecx,eax
  40aaf4:	mov    DWORD PTR [ebp-0x1c],ecx
  40aaf7:	mov    DWORD PTR ds:0x42c014,0x14
  40ab01:	cmp    DWORD PTR ds:0x42c014,0x0
  40ab08:	je     0x40aba7
  40ab0e:	cmp    DWORD PTR ds:0x42c014,0x2
  40ab15:	jne    0x40ab29
  40ab1b:	push   DWORD PTR [ebp-0x28]
  40ab1e:	push   0x4245ce
  40ab23:	call   DWORD PTR ds:0x425010
  40ab29:	cmp    DWORD PTR ds:0x42c014,0x3
  40ab30:	jne    0x40ab43
  40ab36:	mov    ecx,DWORD PTR ds:0x42c014
  40ab3c:	dec    ecx
  40ab3d:	mov    DWORD PTR ds:0x42c014,ecx
  40ab43:	mov    ecx,DWORD PTR ds:0x42c014
  40ab49:	dec    ecx
  40ab4a:	mov    DWORD PTR ds:0x42c014,ecx
  40ab50:	jmp    0x40ab01
  40ab55:	mov    DWORD PTR ds:0x42a018,0x12
  40ab5f:	cmp    DWORD PTR ds:0x42a018,0x0
  40ab66:	je     0x40aba7
  40ab6c:	cmp    DWORD PTR ds:0x42a018,0x1a
  40ab73:	jne    0x40ab85
  40ab79:	push   DWORD PTR [ebp-0x1c]
  40ab7c:	push   DWORD PTR [ebp-0x18]
  40ab7f:	call   DWORD PTR ds:0x425018
  40ab85:	mov    ecx,DWORD PTR ds:0x42a018
  40ab8b:	dec    ecx
  40ab8c:	mov    DWORD PTR ds:0x42a018,ecx
  40ab92:	jmp    0x40ab5f
  40ab97:	xor    ecx,ecx
  40ab99:	xor    ecx,DWORD PTR ds:0x424637
  40ab9f:	mov    ecx,DWORD PTR [ecx]
  40aba1:	sbb    DWORD PTR ds:0x42a00c,ecx
  40aba7:	mov    ecx,DWORD PTR [ebp+0x14]
  40abaa:	test   ecx,ecx
  40abac:	je     0x40ac29
  40abb2:	and    DWORD PTR ds:0x42c014,edi
  40abb8:	mov    ecx,DWORD PTR [ebp+0x14]
  40abbb:	mov    DWORD PTR ds:0x42c014,0x11
  40abc5:	cmp    DWORD PTR ds:0x42c014,0x0
  40abcc:	je     0x40ac1e
  40abd2:	cmp    DWORD PTR ds:0x42c014,0x5
  40abd9:	jne    0x40abf2
  40abdf:	push   0x429028
  40abe4:	push   DWORD PTR [ebp-0x20]
  40abe7:	push   0x424442
  40abec:	call   DWORD PTR ds:0x42501c
  40abf2:	cmp    DWORD PTR ds:0x42c014,0x6
  40abf9:	jne    0x40ac0c
  40abff:	mov    edi,DWORD PTR ds:0x42c014
  40ac05:	dec    edi
  40ac06:	mov    DWORD PTR ds:0x42c014,edi
  40ac0c:	mov    edi,DWORD PTR ds:0x42c014
  40ac12:	dec    edi
  40ac13:	mov    DWORD PTR ds:0x42c014,edi
  40ac19:	jmp    0x40abc5
  40ac1e:	mov    ecx,DWORD PTR [ecx]
  40ac20:	xor    DWORD PTR ds:0x42a018,ecx
  40ac26:	mov    DWORD PTR [ebp-0x1c],ecx
  40ac29:	adc    DWORD PTR ds:0x429024,edi
  40ac2f:	mov    ecx,0x7665
  40ac34:	imul   edx,eax
  40ac37:	mov    DWORD PTR ds:0x42d00c,0x1b
  40ac41:	cmp    DWORD PTR ds:0x42d00c,0x0
  40ac48:	je     0x40ac9b
  40ac4e:	cmp    DWORD PTR ds:0x42d00c,0x4
  40ac55:	jne    0x40ac69
  40ac5b:	push   0x429020
  40ac60:	push   DWORD PTR [ebp-0x1c]
  40ac63:	call   DWORD PTR ds:0x425020
  40ac69:	cmp    DWORD PTR ds:0x42d00c,0x5
  40ac70:	jne    0x40ac83
  40ac76:	mov    edi,DWORD PTR ds:0x42d00c
  40ac7c:	dec    edi
  40ac7d:	mov    DWORD PTR ds:0x42d00c,edi
  40ac83:	mov    edi,DWORD PTR ds:0x42d00c
  40ac89:	dec    edi
  40ac8a:	mov    DWORD PTR ds:0x42d00c,edi
  40ac90:	jmp    0x40ac41
  40ac95:	xor    DWORD PTR ds:0x42b010,edi
  40ac9b:	mov    esi,0x76532
  40aca0:	add    edx,ecx
  40aca2:	xchg   esi,ecx
  40aca4:	or     edi,esi
  40aca6:	mov    edi,0x54354
  40acab:	movzx  ecx,BYTE PTR ds:0x42901c
  40acb2:	sbb    DWORD PTR ds:0x429000,ecx
  40acb8:	sub    edx,edi
  40acba:	mov    ecx,DWORD PTR [ebp-0x4]
  40acbd:	sbb    DWORD PTR ds:0x429028,0x4a48
  40acc7:	xor    ecx,ebx
  40acc9:	and    esi,DWORD PTR ds:0x42900c
  40accf:	add    ecx,eax
  40acd1:	mov    DWORD PTR [ebp-0x8],ecx
  40acd4:	mov    DWORD PTR ds:0x42b014,0x169
  40acde:	mov    ecx,DWORD PTR [ebp-0x14]
  40ace1:	add    esi,DWORD PTR ds:0x42b000
  40ace7:	xor    ecx,ebx
  40ace9:	add    DWORD PTR ds:0x42d00c,0x42d004
  40acf3:	add    ecx,eax
  40acf5:	mov    DWORD PTR [ebp-0x24],ecx
  40acf8:	and    esi,esi
  40acfa:	mov    ecx,DWORD PTR [ebp-0x4]
  40acfd:	and    DWORD PTR ds:0x42b000,0x0
  40ad07:	jmp    0x40ad19
  40ad0c:	mov    esi,DWORD PTR ds:0x42b000
  40ad12:	inc    esi
  40ad13:	mov    DWORD PTR ds:0x42b000,esi
  40ad19:	cmp    DWORD PTR ds:0x42b000,0x10
  40ad20:	jae    0x40ad70
  40ad26:	cmp    DWORD PTR ds:0x42b000,0x4
  40ad2d:	jne    0x40ad3e
  40ad33:	push   0x8810
  40ad38:	call   DWORD PTR ds:0x425028
  40ad3e:	cmp    DWORD PTR ds:0x42b000,0x3
  40ad45:	jne    0x40ad58
  40ad4b:	mov    esi,DWORD PTR ds:0x42b000
  40ad51:	inc    esi
  40ad52:	mov    DWORD PTR ds:0x42b000,esi
  40ad58:	jmp    0x40ad0c
  40ad5d:	movzx  esi,WORD PTR ds:0x42d00c
  40ad64:	adc    esi,DWORD PTR ds:0x42b018
  40ad6a:	mov    DWORD PTR ds:0x42d00c,esi
  40ad70:	xor    ecx,ebx
  40ad72:	add    ecx,eax
  40ad74:	add    esi,0x75ba
  40ad7a:	mov    DWORD PTR [ebp-0x30],ecx
  40ad7d:	or     ecx,DWORD PTR ds:0x42c010
  40ad83:	mov    esi,DWORD PTR [ebp-0x4]
  40ad86:	inc    ecx
  40ad87:	xor    esi,ebx
  40ad89:	mov    ecx,DWORD PTR ds:0x42461f
  40ad8f:	mov    ecx,DWORD PTR [ecx]
  40ad91:	adc    DWORD PTR ds:0x429020,ecx
  40ad97:	add    esi,eax
  40ad99:	mov    ecx,DWORD PTR [ebp-0x24]
  40ad9c:	sub    DWORD PTR ds:0x42c010,0x42c004
  40ada6:	sub    ecx,eax
  40ada8:	lea    edx,[esi-0x3272db]
  40adae:	xor    DWORD PTR ds:0x42a004,0x429028
  40adb8:	xor    ecx,ebx
  40adba:	xor    edx,ebx
  40adbc:	mov    DWORD PTR ds:0x42b00c,0x3cf6
  40adc6:	cmp    edx,ecx
  40adc8:	mov    DWORD PTR ds:0x42a008,0x130c
  40add2:	je     0x40afdf
  40add8:	sub    ecx,0x2467
  40adde:	mov    ecx,DWORD PTR [ebp-0x4]
  40ade1:	and    DWORD PTR ds:0x42c00c,0x42d01c
  40adeb:	xor    ecx,ebx
  40aded:	add    DWORD PTR ds:0x42b018,0x2ea9
  40adf7:	add    ecx,eax
  40adf9:	mov    DWORD PTR ds:0x42b000,0x737d
  40ae03:	cmp    esi,ecx
  40ae05:	mov    DWORD PTR ds:0x42b018,0x3d4e
  40ae0f:	jne    0x40afbc
  40ae15:	push   DWORD PTR [ebp+0x8]
  40ae18:	call   0x423c46
  40ae1d:	mov    DWORD PTR [ebp-0x18],eax
  40ae20:	mov    eax,DWORD PTR [ebp-0x4]
  40ae23:	xor    edi,ecx
  40ae25:	mov    ecx,DWORD PTR [ebp-0x18]
  40ae28:	xor    eax,ebx
  40ae2a:	and    DWORD PTR ds:0x42901c,0x0
  40ae34:	jmp    0x40ae46
  40ae39:	mov    edi,DWORD PTR ds:0x42901c
  40ae3f:	inc    edi
  40ae40:	mov    DWORD PTR ds:0x42901c,edi
  40ae46:	cmp    DWORD PTR ds:0x42901c,0x1d
  40ae4d:	jae    0x40ae90
  40ae53:	cmp    DWORD PTR ds:0x42901c,0x2c
  40ae5a:	jne    0x40ae85
  40ae60:	push   0x61ef
  40ae65:	push   0x288b
  40ae6a:	push   0x42d018
  40ae6f:	push   DWORD PTR [ebp-0x28]
  40ae72:	push   0x2975
  40ae77:	push   DWORD PTR [ebp-0x24]
  40ae7a:	push   0x26ce
  40ae7f:	call   DWORD PTR ds:0x42502c
  40ae85:	jmp    0x40ae39
  40ae8a:	or     DWORD PTR ds:0x42c010,ebx
  40ae90:	mov    edi,0x3272db
  40ae95:	add    eax,edi
  40ae97:	mov    DWORD PTR ds:0x42901c,0x5f35
  40aea1:	cmp    ecx,eax
  40aea3:	mov    DWORD PTR ds:0x42c018,0x19df
  40aead:	je     0x40b04f
  40aeb3:	sub    DWORD PTR ds:0x42d018,0x5f9c
  40aebd:	push   DWORD PTR [ebp-0x18]
  40aec0:	and    DWORD PTR ds:0x42b018,0x42b000
  40aeca:	push   DWORD PTR [ebp+0x8]
  40aecd:	dec    DWORD PTR ds:0x42a00c
  40aed3:	call   0x423d25
  40aed8:	or     DWORD PTR ds:0x42a014,0x42a00c
  40aee2:	mov    DWORD PTR [ebp-0x18],eax
  40aee5:	mov    eax,DWORD PTR [ebp-0x4]
  40aee8:	sbb    DWORD PTR ds:0x42a010,0x3b6d
  40aef2:	mov    ecx,DWORD PTR [ebp-0x18]
  40aef5:	xor    eax,ebx
  40aef7:	add    DWORD PTR ds:0x429004,0x42d004
  40af01:	add    eax,edi
  40af03:	mov    DWORD PTR ds:0x42a018,0x317f
  40af0d:	cmp    ecx,eax
  40af0f:	je     0x40b04f
  40af15:	mov    eax,DWORD PTR [ebp-0x18]
  40af18:	mov    eax,DWORD PTR [eax+0x18]
  40af1b:	mov    ecx,DWORD PTR ds:0x42d000
  40af21:	xor    DWORD PTR ds:0x42a014,ecx
  40af27:	mov    DWORD PTR [ebp-0x24],eax
  40af2a:	mov    eax,DWORD PTR [ebp-0x18]
  40af2d:	and    DWORD PTR ds:0x42b018,0x0
  40af37:	jmp    0x40af49
  40af3c:	mov    ecx,DWORD PTR ds:0x42b018
  40af42:	inc    ecx
  40af43:	mov    DWORD PTR ds:0x42b018,ecx
  40af49:	cmp    DWORD PTR ds:0x42b018,0x16
  40af50:	jae    0x40af77
  40af56:	cmp    DWORD PTR ds:0x42b018,0x20
  40af5d:	jne    0x40af6c
  40af63:	push   DWORD PTR [ebp-0x28]
  40af66:	call   DWORD PTR ds:0x425030
  40af6c:	jmp    0x40af3c
  40af71:	xor    ecx,DWORD PTR ds:0x42b01c
  40af77:	mov    ecx,DWORD PTR [ebp+0x8]
  40af7a:	add    ecx,DWORD PTR [eax+0x20]
  40af7d:	sub    eax,DWORD PTR ds:0x429024
  40af83:	mov    DWORD PTR [ebp-0x2c],ecx
  40af86:	mov    eax,DWORD PTR [ebp-0x18]
  40af89:	inc    ecx
  40af8a:	mov    ecx,DWORD PTR [ebp+0x8]
  40af8d:	add    ecx,DWORD PTR [eax+0x24]
  40af90:	mov    DWORD PTR [ebp-0x34],ecx
  40af93:	xor    DWORD PTR ds:0x42a004,edi
  40af99:	mov    eax,DWORD PTR [ebp-0x18]
  40af9c:	or     DWORD PTR ds:0x42a000,ebx
  40afa2:	mov    ecx,DWORD PTR [ebp+0x8]
  40afa5:	or     DWORD PTR ds:0x42a008,0x109d
  40afaf:	add    ecx,DWORD PTR [eax+0x1c]
  40afb2:	mov    eax,edi
  40afb4:	mov    DWORD PTR [ebp-0x18],ecx
  40afb7:	jmp    0x40b017
  40afbc:	mov    ecx,DWORD PTR [ebp-0x2c]
  40afbf:	mov    edx,DWORD PTR [ebp+0x8]
  40afc2:	add    edx,DWORD PTR [ecx+esi*4]
  40afc5:	mov    DWORD PTR [ebp-0x28],edx
  40afc8:	mov    ecx,DWORD PTR [ebp-0x4]
  40afcb:	mov    edx,DWORD PTR [ebp-0x28]
  40afce:	xor    ecx,ebx
  40afd0:	add    ecx,eax
  40afd2:	cmp    edx,ecx
  40afd4:	je     0x40b017
  40afda:	jmp    0x40b003
  40afdf:	mov    ecx,DWORD PTR [ebp-0x4]
  40afe2:	mov    edx,DWORD PTR [ebp-0x8]
  40afe5:	xor    ecx,ebx
  40afe7:	add    ecx,eax
  40afe9:	cmp    edx,ecx
  40afeb:	je     0x40b05b
  40aff1:	mov    ecx,DWORD PTR [ebp-0x4]
  40aff4:	mov    edx,DWORD PTR [ebp-0x30]
  40aff7:	xor    ecx,ebx
  40aff9:	add    ecx,eax
  40affb:	cmp    edx,ecx
  40affd:	je     0x40b06a
  40b003:	lea    eax,[ebp-0x8]
  40b006:	push   eax
  40b007:	push   DWORD PTR [ebp-0x28]
  40b00a:	push   DWORD PTR [ebp+0xc]
  40b00d:	call   0x401058
  40b012:	mov    eax,0x3272db
  40b017:	mov    ecx,DWORD PTR [ebp-0x4]
  40b01a:	mov    edx,DWORD PTR [ebp-0x8]
  40b01d:	xor    ecx,ebx
  40b01f:	add    ecx,eax
  40b021:	cmp    edx,ecx
  40b023:	je     0x40b03e
  40b029:	mov    ecx,DWORD PTR [ebp-0x34]
  40b02c:	movzx  ecx,WORD PTR [ecx+esi*2]
  40b030:	mov    edx,DWORD PTR [ebp-0x18]
  40b033:	mov    ecx,DWORD PTR [edx+ecx*4]
  40b036:	mov    DWORD PTR [ebp-0x38],ecx
  40b039:	jmp    0x40afdf
  40b03e:	mov    ecx,DWORD PTR [ebp-0x14]
  40b041:	xor    ecx,ebx
  40b043:	lea    esi,[esi+ecx*1+0x3272db]
  40b04a:	jmp    0x40ad99
  40b04f:	mov    eax,DWORD PTR [ebp-0x4]
  40b052:	xor    eax,ebx
  40b054:	add    eax,edi
  40b056:	jmp    0x40f898
  40b05b:	mov    eax,DWORD PTR [ebp-0x4]
  40b05e:	xor    eax,ebx
  40b060:	add    eax,0x3272db
  40b065:	jmp    0x40f898
  40b06a:	mov    ecx,DWORD PTR [ebp-0x38]
  40b06d:	add    ecx,DWORD PTR [ebp+0x8]
  40b070:	mov    DWORD PTR [ebp-0x10],ecx
  40b073:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b076:	test   ecx,ecx
  40b078:	je     0x40d4be
  40b07e:	mov    DWORD PTR [ebp-0x20],0x0
  40b085:	push   0x3
  40b087:	xor    edx,edx
  40b089:	pop    edx
  40b08a:	add    edx,0x8
  40b08d:	push   edx
  40b08e:	pop    ecx
  40b08f:	push   0x6
  40b091:	dec    ecx
  40b092:	pop    ebx
  40b093:	dec    ebx
  40b094:	xchg   ebx,ecx
  40b096:	sub    ebx,ecx
  40b098:	xchg   ebx,ecx
  40b09a:	dec    ecx
  40b09b:	mov    eax,DWORD PTR [ebp-0x1c]
  40b09e:	imul   eax,ecx
  40b0a1:	sub    esp,eax
  40b0a3:	mov    DWORD PTR [ebp-0x20],esp
  40b0a6:	mov    eax,DWORD PTR [ebp-0x4]
  40b0a9:	mov    ecx,0x7510893
  40b0ae:	xor    eax,ecx
  40b0b0:	mov    edx,0x3272db
  40b0b5:	add    eax,edx
  40b0b7:	mov    DWORD PTR [ebp+0x8],eax
  40b0ba:	mov    eax,DWORD PTR [ebp-0x14]
  40b0bd:	xor    eax,ecx
  40b0bf:	add    eax,edx
  40b0c1:	mov    edx,DWORD PTR [ebp+0x14]
  40b0c4:	jmp    0x40d429
  40b0c9:	fidiv  DWORD PTR [ecx+0x21]
  40b0cc:	jb     0x40b137
  40b0ce:	xor    ch,BYTE PTR [ecx-0x57]
  40b0d1:	ss pop es
  40b0d3:	add    eax,0xa85c999b
  40b0d8:	psubsb mm6,mm5
  40b0db:	bound  esp,QWORD PTR [edx+0x3a]
  40b0de:	pop    edi
  40b0df:	bound  esp,QWORD PTR [edx-0x26]
  40b0e2:	test   BYTE PTR [ebx],0xc
  40b0e5:	mov    dl,0x6e
  40b0e7:	sbb    BYTE PTR [esi-0x2a],0xc5
  40b0eb:	push   ecx
  40b0ec:	and    edx,DWORD PTR [edi+0x36500b92]
  40b0f2:	loopne 0x40b106
  40b0f4:	aas    
  40b0f5:	rol    BYTE PTR [ebp-0x18],0xa0
  40b0f9:	and    ch,BYTE PTR cs:[edi-0x20]
  40b0fd:	xor    cl,dh
  40b0ff:	jp     0x40b159
  40b101:	jae    0x40b097
  40b103:	inc    eax
  40b104:	nop
  40b105:	clc    
  40b106:	(bad)  
  40b107:	int    0x80
  40b109:	cmp    al,0xde
  40b10b:	add    al,0xed
  40b10d:	and    al,0x64
  40b10f:	sbb    al,0x37
  40b111:	mov    esi,0x9296fa25
  40b116:	or     BYTE PTR [ebx],0xda
  40b119:	repnz cmc 
  40b11b:	popf   
  40b11c:	fadd   QWORD PTR [ebx]
  40b11e:	mov    eax,ds:0xabf0a097
  40b123:	retf   0xb20c
  40b126:	push   esi
  40b127:	out    0x5c,eax
  40b129:	mov    esi,0x9dcc6dc1
  40b12e:	or     edi,eax
  40b130:	outs   dx,BYTE PTR ds:[esi]
  40b131:	or     BYTE PTR [eax+0x3f460570],bl
  40b137:	xchg   edx,eax
  40b138:	scas   al,BYTE PTR es:[edi]
  40b139:	call   0x9b75cd47
  40b13e:	cdq    
  40b13f:	arpl   WORD PTR [edi+eiz*1-0x7f],sp
  40b143:	push   ebx
  40b144:	jmp    0x2ec63169
  40b149:	ins    BYTE PTR es:[edi],dx
  40b14a:	xchg   BYTE PTR ds:0xe4ca5045,al
  40b150:	and    ebp,0x5404cd6c
  40b156:	hlt    
  40b157:	loopne 0x40b126
  40b159:	mov    DWORD PTR [edi],ebp
  40b15b:	jle    0x40b198
  40b15d:	xchg   ecx,eax
  40b15e:	mov    bh,ch
  40b160:	sbb    ch,ah
  40b162:	stos   BYTE PTR es:[edi],al
  40b163:	jg     0x40b190
  40b165:	(bad)  [ecx]
  40b167:	aam    0x92
  40b169:	xchg   ebx,eax
  40b16a:	inc    esp
  40b16b:	or     ah,dl
  40b16d:	sub    DWORD PTR [ecx-0x4f],0xf788dbbd
  40b174:	xchg   ebp,eax
  40b175:	xor    al,0x10
  40b177:	rcl    esp,0xb4
  40b17a:	xor    ecx,DWORD PTR ds:0xdaa39dfb
  40b180:	cld    
  40b181:	test   BYTE PTR [ebx],dl
  40b183:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b184:	cmp    al,0xd1
  40b186:	mov    ds:0xb7a82f7e,al
  40b18b:	repnz loop 0x40b139
  40b18e:	std    
  40b18f:	xlat   BYTE PTR ds:[ebx]
  40b190:	scas   al,BYTE PTR es:[edi]
  40b191:	inc    edx
  40b192:	in     eax,0x43
  40b194:	dec    esi
  40b195:	dec    ebp
  40b196:	rcl    DWORD PTR [ebx+ecx*2+0x7e],cl
  40b19a:	push   es
  40b19b:	sbb    DWORD PTR [edx+0x654786d5],0xfffffff1
  40b1a2:	mov    ch,0x3a
  40b1a4:	mov    DWORD PTR [edi],0xabbcd660
  40b1aa:	aad    0x74
  40b1ac:	sub    DWORD PTR [ecx+0x4636edc1],edi
  40b1b2:	pop    ecx
  40b1b3:	dec    ebx
  40b1b4:	jnp    0x40b21c
  40b1b6:	ret    0x9e67
  40b1b9:	inc    ebx
  40b1ba:	push   ebp
  40b1bb:	and    DWORD PTR [edi+eiz*1-0x70],ebx
  40b1bf:	jg     0x40b190
  40b1c1:	test   eax,0xfd876a9e
  40b1c6:	bound  esi,QWORD PTR [eax+0x79a0c844]
  40b1cc:	clc    
  40b1cd:	jno    0x40b151
  40b1cf:	icebp  
  40b1d0:	lods   eax,DWORD PTR ds:[esi]
  40b1d1:	mov    ebx,0xd8c2d0a6
  40b1d6:	jp     0x40b1ef
  40b1d8:	loope  0x40b1e7
  40b1da:	scas   al,BYTE PTR es:[edi]
  40b1db:	push   ss
  40b1dc:	inc    edi
  40b1dd:	adc    al,0xa5
  40b1df:	inc    edx
  40b1e0:	jmp    0x16fc1705
  40b1e5:	push   esi
  40b1e6:	add    cl,BYTE PTR [ebx]
  40b1e8:	call   esp
  40b1ea:	lock cmp ebp,DWORD PTR [edi-0x70]
  40b1ee:	fyl2x  
  40b1f0:	stc    
  40b1f1:	mov    dh,0x7f
  40b1f3:	cdq    
  40b1f4:	sub    BYTE PTR [eax],ah
  40b1f6:	pop    esp
  40b1f7:	mov    edi,ebx
  40b1f9:	std    
  40b1fa:	and    al,bh
  40b1fc:	inc    edx
  40b1fd:	push   es
  40b1fe:	call   0x218:0x6d6f8b3f
  40b205:	test   DWORD PTR [edi+0x1a05c16b],ecx
  40b20b:	aas    
  40b20c:	iret   
  40b20d:	(bad)  
  40b20e:	dec    ebx
  40b20f:	mov    cl,0x6b
  40b211:	bound  ecx,QWORD PTR [esi]
  40b213:	ds pop gs
  40b216:	rol    BYTE PTR [ecx+0x34af13a3],cl
  40b21c:	dec    edx
  40b21d:	mov    edi,0xdf2e2619
  40b222:	mov    edx,0xed9f18ab
  40b227:	jno    0x40b239
  40b229:	aad    0x77
  40b22b:	and    dh,BYTE PTR [ebp+0x2cb65382]
  40b231:	dec    ebp
  40b232:	into   
  40b233:	inc    esi
  40b234:	push   0xffffff90
  40b236:	mov    dh,0xc3
  40b238:	test   eax,0x920cedc4
  40b23d:	push   ecx
  40b23e:	jecxz  0x40b1f5
  40b240:	pop    esi
  40b241:	(bad)  
  40b242:	pop    ecx
  40b243:	jp     0x40b201
  40b245:	mov    bh,0x8f
  40b247:	xor    edx,DWORD PTR [edi]
  40b249:	mov    bl,0x69
  40b24b:	add    al,0x88
  40b24d:	jge    0x40b266
  40b24f:	ds ret 0x4d24
  40b253:	(bad)  
  40b254:	pusha  
  40b255:	ja     0x40b2d4
  40b257:	int    0xde
  40b259:	lds    ebp,FWORD PTR [ecx+edx*8-0x4aea321b]
  40b260:	test   BYTE PTR [edx],al
  40b262:	mov    ds:0x8539d752,eax
  40b267:	push   ecx
  40b268:	or     DWORD PTR [eax],ebx
  40b26a:	ins    DWORD PTR es:[edi],dx
  40b26b:	dec    edi
  40b26c:	enter  0x61b3,0x23
  40b270:	js     0x40b263
  40b272:	mov    ecx,0x41ca9880
  40b277:	ret    
  40b278:	(bad)  
  40b279:	ja     0x40b27d
  40b27b:	xor    eax,0xc60c135c
  40b280:	jle    0x40b21e
  40b282:	xchg   ebx,eax
  40b283:	mov    ds:0x9a8378f0,al
  40b288:	pop    eax
  40b289:	fiadd  WORD PTR [ebp-0x10280052]
  40b28f:	inc    eax
  40b290:	sbb    ecx,DWORD PTR [edx]
  40b292:	mov    esi,0xc1b23fcb
  40b297:	sar    bl,cl
  40b299:	fs (bad) 
  40b29b:	cmc    
  40b29c:	adc    DWORD PTR [ebx-0x5b],ebp
  40b29f:	in     al,dx
  40b2a0:	adc    BYTE PTR [esi+0x79af055],dl
  40b2a6:	mov    ebp,0x4b3f01f8
  40b2ab:	dec    ebp
  40b2ac:	inc    edi
  40b2ad:	jg     0x40b2b1
  40b2af:	pop    ebx
  40b2b0:	into   
  40b2b1:	mov    cl,0xdf
  40b2b3:	cwde   
  40b2b4:	data16 mov ds:0x3bea5597,al
  40b2ba:	fmul   QWORD PTR [edi+0x77997c55]
  40b2c0:	or     DWORD PTR [edx],edx
  40b2c2:	dec    ebx
  40b2c3:	lods   al,BYTE PTR ds:[esi]
  40b2c4:	fdiv   st(0),st
  40b2c6:	dec    bx
  40b2c8:	mov    esp,DWORD PTR [edx]
  40b2ca:	dec    BYTE PTR [ebx]
  40b2cc:	or     bl,BYTE PTR [eax+0x2e]
  40b2cf:	add    ch,bl
  40b2d1:	mov    BYTE PTR [ebx-0x8a9c366],bh
  40b2d7:	xor    bh,dh
  40b2d9:	mov    dh,0xb1
  40b2db:	dec    ebx
  40b2dc:	adc    DWORD PTR [eax],0xffffffce
  40b2df:	xlat   BYTE PTR ds:[ebx]
  40b2e0:	fisub  DWORD PTR [ebx+0x28]
  40b2e3:	jae    0x40b2b6
  40b2e5:	icebp  
  40b2e6:	loope  0x40b2ed
  40b2e8:	push   DWORD PTR [eax]
  40b2ea:	sar    BYTE PTR [esi+eax*2-0x7d],0x62
  40b2ef:	adc    DWORD PTR [ecx+0x1a],0xffffffa2
  40b2f3:	xchg   ebx,eax
  40b2f4:	test   DWORD PTR [esi+0x2b],esi
  40b2f7:	fwait
  40b2f8:	add    BYTE PTR [edx-0x54],0x8f
  40b2fc:	sbb    BYTE PTR [esi-0x49bfec11],dl
  40b302:	xor    cl,BYTE PTR [esi+0x1e44628d]
  40b308:	xchg   ebx,edi
  40b30a:	mov    DWORD PTR [ecx],ecx
  40b30c:	aaa    
  40b30d:	mov    edi,0x519cf1c0
  40b312:	scas   eax,DWORD PTR es:[edi]
  40b313:	lea    eax,[ebx]
  40b315:	retf   0xb775
  40b318:	(bad)  
  40b319:	aam    0xbb
  40b31b:	out    0x4,ax
  40b31e:	jb     0x40b327
  40b320:	les    edx,FWORD PTR [eax-0x67ae09cc]
  40b326:	mov    esi,0x4c76d2f4
  40b32b:	push   eax
  40b32c:	(bad)  
  40b32d:	iret   
  40b32e:	dec    edx
  40b32f:	jno    0x40b34f
  40b331:	jno    0x40b39a
  40b333:	clc    
  40b334:	cmp    BYTE PTR ds:0x1d319a0e,cl
  40b33a:	or     BYTE PTR [ebx+eax*4-0x51],0x84
  40b33f:	ins    DWORD PTR es:[edi],dx
  40b340:	add    bl,BYTE PTR [ebx-0x12]
  40b343:	push   cs
  40b344:	cwde   
  40b345:	popa   
  40b346:	mov    ah,0x47
  40b348:	test   al,0x65
  40b34a:	shl    DWORD PTR [ebx+0xb4b5026],cl
  40b350:	fstp   QWORD PTR [ebp-0x7e]
  40b353:	and    al,0xa4
  40b355:	mov    dh,0x36
  40b357:	outs   dx,DWORD PTR ds:[esi]
  40b358:	call   0xa3d4:0x704e4d5c
  40b35f:	cmp    ah,BYTE PTR [edx]
  40b361:	bound  eax,QWORD PTR [edx-0x53]
  40b364:	leave  
  40b365:	cmp    al,0x8e
  40b367:	jo     0x40b2ed
  40b369:	int    0xf8
  40b36b:	loopne 0x40b364
  40b36d:	cmp    DWORD PTR [edx+0x61407429],ebx
  40b373:	xchg   ecx,eax
  40b374:	sahf   
  40b375:	test   ebp,ecx
  40b377:	stc    
  40b378:	bound  ecx,QWORD PTR [ebx]
  40b37a:	pop    esi
  40b37b:	(bad)  
  40b37c:	out    dx,eax
  40b37d:	retf   0x1e3
  40b380:	pop    esp
  40b381:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b382:	add    DWORD PTR [ebp+0x6],edx
  40b385:	xor    BYTE PTR [ebp-0x51],bh
  40b388:	(bad)  
  40b389:	call   0xc3b5cace
  40b38e:	ja     0x40b408
  40b390:	xchg   edi,eax
  40b391:	adc    BYTE PTR [esi-0x1],bh
  40b394:	mov    eax,0xff297628
  40b399:	int3   
  40b39a:	lahf   
  40b39b:	mov    ds:0x329b9622,al
  40b3a0:	jbe    0x40b3b8
  40b3a2:	aaa    
  40b3a3:	xchg   esp,eax
  40b3a4:	ins    BYTE PTR es:[edi],dx
  40b3a5:	shr    DWORD PTR [ebp+0x33],1
  40b3a8:	inc    ebx
  40b3a9:	mov    dh,0x5b
  40b3ab:	mov    ds:0xf2121c48,al
  40b3b0:	jecxz  0x40b345
  40b3b2:	xchg   ebx,eax
  40b3b3:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40b3b5:	in     al,0x46
  40b3b7:	out    0x16,al
  40b3b9:	stc    
  40b3ba:	ds dec esi
  40b3bc:	jmp    0x40b42f
  40b3be:	js     0x40b346
  40b3c0:	inc    edi
  40b3c1:	mov    ebp,0x9fae79cc
  40b3c6:	sahf   
  40b3c7:	jns    0x40b382
  40b3c9:	fs imul ecx,ecx,0x30
  40b3cd:	jae    0x40b3da
  40b3cf:	int    0xa9
  40b3d1:	pusha  
  40b3d2:	pop    ebx
  40b3d3:	sub    DWORD PTR [ecx-0x4a9216fd],edi
  40b3d9:	or     DWORD PTR [esi-0x1770cbed],edi
  40b3df:	inc    DWORD PTR [ebx+0x18ed7cf3]
  40b3e5:	and    ebp,DWORD PTR ss:[eax+0x1f]
  40b3e9:	jo     0x40b3d0
  40b3eb:	repz test al,0x23
  40b3ee:	inc    eax
  40b3ef:	jg     0x40b3d1
  40b3f1:	add    eax,0x658620ba
  40b3f6:	test   edi,eax
  40b3f8:	pop    edi
  40b3f9:	les    eax,FWORD PTR [ecx+0x2f56f407]
  40b3ff:	sbb    al,BYTE PTR [ecx]
  40b401:	and    al,BYTE PTR [edi+esi*4-0x5b0f5495]
  40b408:	in     al,dx
  40b409:	jmp    0x3c844dd1
  40b40e:	pop    esi
  40b40f:	jnp    0x40b48c
  40b411:	fidivr DWORD PTR [eax+0x584d644e]
  40b417:	je     0x40b41c
  40b419:	sub    eax,DWORD PTR [eax+edx*2-0x4bcaebae]
  40b420:	sub    dl,BYTE PTR [ecx+0x1fa37cb0]
  40b426:	ins    DWORD PTR es:[edi],dx
  40b427:	test   bh,bh
  40b429:	fwait
  40b42a:	jmp    0xe5ccfc1d
  40b42f:	addr16 (bad) 
  40b431:	hlt    
  40b432:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b433:	jp     0x40b3df
  40b435:	rcr    dh,cl
  40b437:	dec    esp
  40b438:	fcmovne st,st(2)
  40b43a:	mov    dl,0xe2
  40b43c:	jo     0x40b3f8
  40b43e:	pop    esp
  40b43f:	xchg   ebx,eax
  40b440:	pushf  
  40b441:	lea    ebp,[esi]
  40b443:	pusha  
  40b444:	jg     0x40b4bc
  40b446:	push   0x0
  40b448:	push   esp
  40b449:	fnstsw WORD PTR [eax-0xa]
  40b44c:	xchg   edi,eax
  40b44d:	push   0xfdc5bdea
  40b452:	jb     0x40b488
  40b454:	adc    al,0x7c
  40b456:	adc    eax,0xd0c93182
  40b45b:	in     eax,dx
  40b45c:	out    dx,al
  40b45d:	aas    
  40b45e:	call   0x69ad:0xb810c626
  40b465:	iret   
  40b466:	ss int 0x20
  40b469:	iret   
  40b46a:	and    al,0x92
  40b46c:	daa    
  40b46d:	mov    edx,0x6ed3b13d
  40b472:	fs out dx,al
  40b474:	push   ss
  40b475:	mov    edi,ecx
  40b477:	cmp    al,0xd1
  40b479:	and    al,0xf9
  40b47b:	(bad)  
  40b47c:	cmp    al,0x9c
  40b47e:	repz xor ebp,ecx
  40b481:	fs xor eax,0xd7eda2ad
  40b487:	fbld   TBYTE PTR [ebp+0x33]
  40b48a:	xchg   ebp,eax
  40b48b:	rcl    BYTE PTR [ebp-0x1a],1
  40b48e:	jl     0x40b4d5
  40b490:	dec    edx
  40b491:	or     ch,BYTE PTR [edi]
  40b493:	dec    esp
  40b494:	dec    esi
  40b495:	aam    0xde
  40b497:	xchg   edi,ebp
  40b499:	sar    BYTE PTR [edx+0x46],0x86
  40b49d:	js     0x40b497
  40b49f:	and    eax,0x8cc593f6
  40b4a4:	int3   
  40b4a5:	inc    ecx
  40b4a6:	push   esp
  40b4a7:	pushf  
  40b4a8:	outs   dx,DWORD PTR ds:[esi]
  40b4a9:	es and al,0x8b
  40b4ac:	ror    DWORD PTR [ebp+0x52d1fbce],1
  40b4b2:	ds push esp
  40b4b4:	in     al,0xe3
  40b4b6:	neg    BYTE PTR [ebp+0x61]
  40b4b9:	div    BYTE PTR [edx+edi*1-0x3]
  40b4bd:	jmp    DWORD PTR [edi+0x64]
  40b4c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4c1:	ss inc ebp
  40b4c3:	aaa    
  40b4c4:	out    dx,eax
  40b4c5:	sbb    BYTE PTR [ecx],0x6d
  40b4c8:	add    eax,0x6df9562b
  40b4cd:	sbb    al,BYTE PTR [edx+0x44f7e9a9]
  40b4d3:	popa   
  40b4d4:	arpl   WORD PTR [esi],bp
  40b4d6:	inc    ebp
  40b4d7:	dec    ebp
  40b4d8:	pop    esp
  40b4d9:	lahf   
  40b4da:	or     BYTE PTR [edx+0x5ec105ad],bh
  40b4e0:	adc    BYTE PTR [ecx-0x27d373f5],0x6f
  40b4e7:	dec    esi
  40b4e8:	and    eax,0x4d2d34bf
  40b4ed:	popa   
  40b4ee:	daa    
  40b4ef:	and    esp,ebp
  40b4f1:	aaa    
  40b4f2:	sbb    ebp,ebx
  40b4f4:	mov    bl,0x42
  40b4f6:	stos   DWORD PTR es:[edi],eax
  40b4f7:	mov    ecx,0x2471dfb9
  40b4fc:	dec    edx
  40b4fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4fe:	mov    bl,0x60
  40b500:	sbb    al,0x24
  40b502:	push   esi
  40b503:	or     BYTE PTR [esi-0x63d78f17],0xb3
  40b50a:	jge    0x40b4d6
  40b50c:	test   al,0x83
  40b50e:	sti    
  40b50f:	adc    esp,eax
  40b511:	and    edi,DWORD PTR [edi]
  40b513:	(bad)  
  40b514:	pop    ss
  40b515:	xchg   ebp,eax
  40b516:	xchg   ebx,eax
  40b517:	sbb    dh,bl
  40b519:	or     bh,BYTE PTR [ebx]
  40b51b:	test   al,0x4d
  40b51d:	popa   
  40b51e:	repnz test BYTE PTR [ecx],bh
  40b521:	clc    
  40b522:	sub    dh,BYTE PTR [ebp+edx*2+0x5f]
  40b526:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b527:	dec    ebx
  40b528:	inc    edi
  40b529:	or     al,0x43
  40b52b:	(bad)  
  40b52c:	ror    DWORD PTR ds:[esi+ebp*2],0x33
  40b531:	outs   dx,DWORD PTR ds:[esi]
  40b532:	xor    bh,dl
  40b534:	pusha  
  40b535:	fstp   TBYTE PTR [ebp-0x6082c520]
  40b53b:	icebp  
  40b53c:	cld    
  40b53d:	hlt    
  40b53e:	dec    esi
  40b53f:	in     al,dx
  40b540:	jp     0x40b5a9
  40b542:	shl    BYTE PTR [esp+ebx*1-0x2238d1ce],0xec
  40b54a:	je     0x40b4e6
  40b54c:	hlt    
  40b54d:	shl    DWORD PTR [esi+edi*2],0xc4
  40b551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b552:	pop    ecx
  40b553:	sti    
  40b554:	jmp    0x40b542
  40b556:	cwde   
  40b557:	push   es
  40b558:	outs   dx,DWORD PTR ds:[esi]
  40b559:	xor    dh,0xbb
  40b55c:	test   al,0x7b
  40b55e:	bound  edi,QWORD PTR [edx-0x46]
  40b561:	fld    QWORD PTR [ecx]
  40b563:	push   0xacaf4b26
  40b568:	inc    ebp
  40b569:	dec    ecx
  40b56a:	data16 jae 0x40b58b
  40b56d:	imul   ecx,edi,0xffffff9d
  40b570:	adc    DWORD PTR [ebp-0x37],ebp
  40b573:	push   esi
  40b574:	fist   DWORD PTR [ebp-0x125be0bb]
  40b57a:	sub    edx,edi
  40b57c:	cmp    esi,edx
  40b57e:	shl    DWORD PTR [edi-0x5],1
  40b581:	sub    esp,ebx
  40b583:	je     0x40b5fe
  40b585:	add    esi,edi
  40b587:	inc    ebx
  40b588:	test   DWORD PTR [edi-0x2c],eax
  40b58b:	dec    ebx
  40b58c:	cmp    al,bh
  40b58e:	cmp    eax,0x130e739b
  40b593:	mov    DWORD PTR [eax],esi
  40b595:	cmp    ah,cl
  40b597:	mov    eax,ds:0x98c86af5
  40b59c:	dec    ecx
  40b59d:	mov    esp,0x7b3bbe9e
  40b5a2:	or     ch,cl
  40b5a4:	rcr    BYTE PTR [esi],cl
  40b5a6:	stos   DWORD PTR es:[edi],eax
  40b5a7:	cs mov ebx,0xd2aa874
  40b5ad:	adc    BYTE PTR [ebp-0x41adaf13],bl
  40b5b3:	addr16 mov dl,0xc1
  40b5b6:	jl     0x40b5a9
  40b5b8:	(bad)  
  40b5b9:	sub    dh,BYTE PTR [edx+0xcf6925e]
  40b5bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5c0:	mov    ecx,0xa7458ca9
  40b5c5:	adc    eax,0xf19f4db8
  40b5ca:	sbb    edx,eax
  40b5cc:	jnp    0x40b5cd
  40b5ce:	mov    edi,0x7278f743
  40b5d3:	push   esi
  40b5d4:	add    eax,0x5bd28bcb
  40b5d9:	mov    dl,0x7a
  40b5db:	out    0x54,eax
  40b5dd:	cld    
  40b5de:	nop
  40b5df:	add    al,0x3b
  40b5e1:	das    
  40b5e2:	(bad)  
  40b5e3:	rol    DWORD PTR [ebp+0x2b],1
  40b5e6:	cmp    al,0x69
  40b5e8:	fidiv  WORD PTR [ecx-0x4d]
  40b5eb:	ins    BYTE PTR es:[edi],dx
  40b5ec:	add    DWORD PTR [eax+0x30],edi
  40b5ef:	jnp    0x40b5c7
  40b5f1:	fstp   DWORD PTR [esi+eax*8-0x4919babd]
  40b5f8:	or     dh,BYTE PTR [edx-0x61e26933]
  40b5fe:	mov    ds:0x959caaf7,eax
  40b603:	loop   0x40b677
  40b605:	or     dl,BYTE PTR [ecx+0x21e199ee]
  40b60b:	lea    ecx,[esi-0x486b332f]
  40b611:	mov    bl,0x18
  40b613:	mov    ds:0x24b1924a,eax
  40b618:	(bad)  
  40b619:	lods   eax,DWORD PTR ds:[esi]
  40b61a:	xor    eax,0x4f4e874b
  40b61f:	js     0x40b677
  40b621:	xchg   edi,eax
  40b622:	(bad)  
  40b623:	xchg   esi,eax
  40b624:	test   eax,0x494243ac
  40b629:	cs xor eax,0xe5a5e8e2
  40b62f:	dec    eax
  40b630:	and    al,0x31
  40b632:	adc    ebx,ecx
  40b634:	rol    ch,0xe9
  40b637:	push   0x4c
  40b639:	xchg   bh,bl
  40b63b:	mov    ch,ah
  40b63d:	sbb    cl,BYTE PTR [esi-0x1c]
  40b640:	mov    ebx,0x5a618989
  40b645:	loop   0x40b69e
  40b647:	hlt    
  40b648:	sbb    al,0x70
  40b64a:	mov    al,0xe0
  40b64d:	aad    0xc9
  40b64f:	das    
  40b650:	or     eax,0xcd498a1c
  40b655:	mov    ah,dl
  40b657:	mov    BYTE PTR [ebx+0x69],cl
  40b65a:	add    bh,BYTE PTR [ebp-0x379a3e74]
  40b660:	dec    ebp
  40b661:	inc    ebx
  40b662:	xchg   ebx,eax
  40b663:	push   eax
  40b664:	mov    ecx,0xc8ad7a2b
  40b669:	mov    cl,0x11
  40b66b:	pop    ebp
  40b66c:	outs   dx,BYTE PTR ds:[esi]
  40b66d:	mov    edx,0x4dc6d55f
  40b672:	iret   
  40b673:	add    ebp,edx
  40b675:	mov    ebx,0x735ffe03
  40b67a:	pop    esp
  40b67b:	jo     0x40b651
  40b67d:	pop    edx
  40b67e:	es arpl dx,di
  40b681:	out    0x23,eax
  40b683:	mov    cl,0xa
  40b685:	inc    ebx
  40b686:	push   ds
  40b687:	aad    0x3d
  40b689:	sar    BYTE PTR [ebp+edx*8-0x6c5eeda2],0xa9
  40b691:	mov    esp,0x7120f790
  40b696:	and    DWORD PTR [edx-0xa66d1ed],ebx
  40b69c:	or     ecx,DWORD PTR [esi]
  40b69e:	lods   eax,DWORD PTR ds:[esi]
  40b69f:	mov    bl,0xf4
  40b6a1:	sbb    dh,ah
  40b6a3:	and    DWORD PTR [edi],edi
  40b6a5:	jp     0x40b6a1
  40b6a7:	mov    eax,ds:0xe4e3c9e0
  40b6ac:	call   0xd965:0x2917ef7
  40b6b3:	cmp    al,0x3c
  40b6b5:	cmp    al,0xd3
  40b6b7:	push   edi
  40b6b8:	pop    eax
  40b6b9:	adc    al,0xf2
  40b6bb:	cmp    BYTE PTR [ebp+0x9535e3d],ch
  40b6c1:	mov    ds:0x3fdc251a,eax
  40b6c6:	mov    al,0x43
  40b6c8:	nop
  40b6c9:	das    
  40b6ca:	mov    dl,BYTE PTR [eax-0x427acff3]
  40b6d0:	adc    BYTE PTR [edi],al
  40b6d2:	sub    esi,ebx
  40b6d4:	ret    0x1a63
  40b6d7:	push   edi
  40b6d8:	fs pop esi
  40b6da:	xchg   edx,eax
  40b6db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6dc:	or     ebp,DWORD PTR es:[ecx]
  40b6df:	outs   dx,DWORD PTR ds:[esi]
  40b6e0:	in     eax,0x11
  40b6e2:	mov    bh,0xbe
  40b6e4:	add    DWORD PTR [ebp+0x35],0xfffffff5
  40b6e8:	repnz cmp ecx,DWORD PTR [eax-0x56]
  40b6ec:	pop    ecx
  40b6ed:	(bad)  
  40b6f0:	push   ss
  40b6f1:	dec    edx
  40b6f2:	loopne 0x40b6d6
  40b6f4:	(bad)  
  40b6f5:	bound  edx,QWORD PTR [edx-0x99e62ae]
  40b6fb:	inc    ebp
  40b6fc:	dec    esp
  40b6fd:	(bad)  
  40b6fe:	(bad)  [ebx-0x3f]
  40b701:	popa   
  40b702:	jno    0x40b6f7
  40b704:	loopne 0x40b751
  40b706:	sub    eax,0xf561ad06
  40b70b:	pushf  
  40b70c:	xchg   edx,eax
  40b70d:	loopne 0x40b6c8
  40b70f:	ss sub al,0xb2
  40b712:	pushw  es
  40b714:	pop    ebx
  40b715:	mov    bh,0x9
  40b717:	mul    BYTE PTR ds:0x3f88ec3c
  40b71d:	clc    
  40b71e:	xchg   BYTE PTR ds:0xbfc11029,ch
  40b724:	das    
  40b725:	into   
  40b726:	push   0x71a83bf7
  40b72b:	ficom  DWORD PTR [eax+0x5c]
  40b72e:	inc    ebp
  40b72f:	xchg   ebp,eax
  40b730:	push   esi
  40b731:	outs   dx,BYTE PTR ds:[esi]
  40b732:	loopne 0x40b72f
  40b734:	ret    0x3a6a
  40b737:	pop    edi
  40b738:	xchg   esp,eax
  40b739:	in     eax,dx
  40b73a:	xchg   esi,eax
  40b73b:	enter  0x5326,0xbe
  40b73f:	mov    dl,0xe3
  40b741:	out    dx,al
  40b742:	lea    ecx,[edi-0x748c8a8a]
  40b748:	mov    BYTE PTR [esi-0x3e36890a],bl
  40b74e:	mov    al,0xba
  40b750:	jbe    0x40b6ea
  40b752:	(bad)  
  40b753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b754:	sub    al,0xf1
  40b756:	int3   
  40b757:	cld    
  40b758:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b759:	push   0x4134b151
  40b75e:	gs ds dec edi
  40b761:	leave  
  40b762:	xchg   DWORD PTR [eax],edi
  40b764:	cld    
  40b765:	sub    ch,cl
  40b767:	cmp    al,0x10
  40b769:	pop    es
  40b76a:	push   ebx
  40b76b:	sbb    eax,0x77898a26
  40b770:	int    0xb3
  40b772:	repz arpl WORD PTR [edx+eiz*4+0x1c2a648d],bp
  40b77a:	cmp    DWORD PTR [ebp+edi*8-0x35],esi
  40b77e:	mov    ah,BYTE PTR [edx-0x7a54eee9]
  40b784:	icebp  
  40b785:	popa   
  40b786:	mov    esi,DWORD PTR [esi-0x10b7e182]
  40b78c:	call   0x46d:0x93c8eae7
  40b793:	lds    ebx,FWORD PTR ds:0xe5938e8f
  40b799:	in     al,dx
  40b79a:	test   edi,ebx
  40b79c:	int    0x8c
  40b79e:	sbb    BYTE PTR [ebp-0x7],bl
  40b7a1:	(bad)  
  40b7a2:	jo     0x40b733
  40b7a4:	ja     0x40b810
  40b7a6:	fsub   DWORD PTR [edx]
  40b7a8:	std    
  40b7a9:	(bad)  
  40b7aa:	sbb    ch,BYTE PTR [edi-0x57d4b92d]
  40b7b0:	mov    esp,0xcd08d3ff
  40b7b5:	aad    0xce
  40b7b7:	push   ebp
  40b7b8:	jl     0x40b7aa
  40b7ba:	jl     0x40b7bc
  40b7bc:	mov    dh,0x21
  40b7be:	adc    al,0x10
  40b7c0:	ror    BYTE PTR [esi-0x35],1
  40b7c3:	cdq    
  40b7c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7c5:	outs   dx,BYTE PTR ds:[esi]
  40b7c6:	jp     0x40b7ae
  40b7c8:	cli    
  40b7c9:	sar    BYTE PTR ds:0xfc2323ab,cl
  40b7cf:	jle    0x40b840
  40b7d1:	pop    ds
  40b7d2:	push   0x6c
  40b7d4:	and    BYTE PTR [esi],ch
  40b7d6:	lods   al,BYTE PTR ds:[esi]
  40b7d7:	rol    BYTE PTR [ecx+0x9],cl
  40b7da:	retf   
  40b7db:	outs   dx,BYTE PTR ds:[esi]
  40b7dc:	xchg   ecx,eax
  40b7dd:	(bad)  [eax-0x1df661b5]
  40b7e3:	stos   DWORD PTR es:[edi],eax
  40b7e4:	xor    al,BYTE PTR [esp+edx*2-0x1277b5f2]
  40b7eb:	mov    ds:0x2e092a4e,eax
  40b7f0:	fldcw  WORD PTR [edi]
  40b7f2:	test   DWORD PTR [ecx+edi*4],ecx
  40b7f5:	jns    0x40b777
  40b7f7:	dec    esi
  40b7f8:	push   ss
  40b7f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7fa:	in     al,0x31
  40b7fc:	sahf   
  40b7fd:	push   esp
  40b7fe:	or     BYTE PTR [ebx+0x244ebfd8],cl
  40b804:	repnz cmc 
  40b806:	push   0x29
  40b808:	xchg   esp,eax
  40b809:	aad    0xef
  40b80b:	fld    QWORD PTR [edx+0xc5ca544]
  40b811:	pop    esp
  40b812:	(bad)  
  40b813:	call   0x62ab7de8
  40b818:	in     eax,0x34
  40b81a:	or     al,BYTE PTR [esi-0x15c28f0a]
  40b820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b821:	pop    ss
  40b822:	nop
  40b823:	cmc    
  40b824:	retf   0xd065
  40b827:	shr    BYTE PTR [esi],1
  40b829:	xor    DWORD PTR [eax-0x485f3c01],esi
  40b82f:	or     al,BYTE PTR [ecx+0x1b27ef8c]
  40b835:	ins    DWORD PTR es:[edi],dx
  40b836:	jmp    0xdaf9:0x220840b2
  40b83d:	cmp    al,0xee
  40b83f:	cmp    al,0x87
  40b841:	outs   dx,BYTE PTR ds:[esi]
  40b842:	fcomp  QWORD PTR [ebp-0x49f484a4]
  40b848:	mov    edx,edi
  40b84a:	cmp    bh,0xac
  40b84d:	dec    ecx
  40b84e:	sbb    DWORD PTR [edx+edi*2],esi
  40b851:	ins    DWORD PTR es:[edi],dx
  40b852:	mov    al,0xb1
  40b854:	test   DWORD PTR [ebp-0x1b24fa2f],esi
  40b85a:	jno    0x40b8a6
  40b85c:	xchg   ecx,eax
  40b85d:	out    dx,eax
  40b85e:	nop
  40b85f:	mov    cl,0xb7
  40b861:	mov    dh,0xb5
  40b863:	jle    0x40b8b8
  40b865:	int    0xb9
  40b867:	pushf  
  40b868:	mov    edx,0xf8a1d2dc
  40b86d:	sbb    DWORD PTR [ebx+0x5e],esp
  40b870:	dec    esi
  40b871:	pop    esi
  40b872:	test   BYTE PTR [eax-0x59afddaf],0xdf
  40b879:	aam    0x8e
  40b87b:	jo     0x40b8fa
  40b87d:	cmc    
  40b87e:	data16 out dx,al
  40b880:	mov    eax,0x2a091c2a
  40b885:	mov    ecx,DWORD PTR [ebx+edx*2+0x76]
  40b889:	sub    ch,ch
  40b88b:	mov    ecx,0xbbe49e92
  40b890:	mov    bh,0x6c
  40b892:	adc    edx,ecx
  40b894:	push   0xffffffef
  40b896:	in     al,0x3
  40b898:	out    0x84,eax
  40b89a:	in     eax,dx
  40b89b:	js     0x40b913
  40b89d:	out    0x1b,eax
  40b89f:	in     eax,0x3b
  40b8a1:	shl    BYTE PTR ds:0xac9cbbf3,0xe8
  40b8a8:	sbb    edx,ecx
  40b8aa:	fdivr  st(7),st
  40b8ac:	mov    cl,0xc9
  40b8ae:	jns    0x40b87b
  40b8b0:	mov    esi,0x1939c4b6
  40b8b5:	inc    eax
  40b8b6:	mov    al,0x94
  40b8b8:	in     eax,dx
  40b8b9:	cwde   
  40b8ba:	pop    DWORD PTR [esi+0x20032abe]
  40b8c0:	icebp  
  40b8c1:	add    ebx,DWORD PTR [eax-0x3f]
  40b8c4:	mov    ebx,0xa21d4b2c
  40b8c9:	push   ss
  40b8ca:	lds    ebp,FWORD PTR ds:0x327a4b80
  40b8d0:	fcos   
  40b8d2:	jno    0x40b88d
  40b8d4:	hlt    
  40b8d5:	dec    edx
  40b8d6:	jae    0x40b8ae
  40b8d8:	push   ss
  40b8d9:	or     ebx,DWORD PTR [edi+edi*8+0x65]
  40b8dd:	pop    esi
  40b8de:	xchg   esi,eax
  40b8df:	js     0x40b86d
  40b8e1:	xchg   ebp,eax
  40b8e2:	popf   
  40b8e3:	and    ebp,DWORD PTR [eax+0x8]
  40b8e6:	mov    bh,0x76
  40b8e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8e9:	sub    cl,BYTE PTR [ebx]
  40b8eb:	popa   
  40b8ec:	push   eax
  40b8ed:	in     eax,0xb
  40b8ef:	fnstenv [edx+0x68]
  40b8f2:	jl     0x40b96b
  40b8f4:	addr16 dec ecx
  40b8f6:	jns    0x40b8f0
  40b8f8:	hlt    
  40b8f9:	dec    ecx
  40b8fa:	jnp    0x40b964
  40b8fc:	inc    edi
  40b8fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8fe:	mov    DWORD PTR [edi],ebx
  40b900:	(bad)  
  40b901:	aas    
  40b902:	xchg   edi,eax
  40b903:	add    eax,0x34e0beec
  40b908:	daa    
  40b909:	ins    BYTE PTR es:[edi],dx
  40b90a:	inc    esp
  40b90b:	sub    DWORD PTR [ecx+ebx*4],ecx
  40b90e:	xchg   ebx,eax
  40b910:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b911:	sahf   
  40b912:	stos   BYTE PTR es:[edi],al
  40b913:	cmp    esp,DWORD PTR [eax]
  40b915:	es test ah,bl
  40b918:	push   esp
  40b919:	add    bl,cl
  40b91b:	mov    cl,0x51
  40b91d:	pop    edx
  40b91e:	adc    bl,BYTE PTR [ecx]
  40b920:	push   edx
  40b921:	mov    ds:0x148d4124,al
  40b926:	pop    edi
  40b927:	mov    ch,0xce
  40b929:	or     eax,0xa704ee61
  40b92e:	repnz mov ah,0xf1
  40b931:	sbb    BYTE PTR [eax],al
  40b933:	(bad)  [esi+0x55]
  40b936:	call   0x3b0d59df
  40b93b:	pop    edx
  40b93c:	test   BYTE PTR [ebp+0x6f8af639],ah
  40b942:	enter  0x81da,0x60
  40b946:	call   0xeafbf3a3
  40b94b:	jge    0x40b97c
  40b94d:	mov    ch,0x3a
  40b94f:	cwde   
  40b950:	jg     0x40b96f
  40b952:	cmp    edx,esi
  40b954:	mov    ch,0x66
  40b956:	mov    eax,ds:0x91da4cd2
  40b95b:	in     eax,dx
  40b95c:	cmp    dl,0x69
  40b95f:	loope  0x40b931
  40b961:	(bad)  
  40b962:	leave  
  40b963:	sbb    eax,0x1e33636
  40b968:	repnz sbb al,0x16
  40b96b:	test   BYTE PTR [eax+0x28bed375],bl
  40b971:	arpl   WORD PTR [edx+0x68],dx
  40b974:	jmp    0x40b9be
  40b976:	or     DWORD PTR [ebx+0x4d],eax
  40b979:	cmc    
  40b97a:	or     al,ch
  40b97c:	cs ins BYTE PTR es:[edi],dx
  40b97e:	ja     0x40b9f3
  40b980:	pop    esp
  40b981:	pushf  
  40b982:	add    al,0xaf
  40b984:	cmp    BYTE PTR [edx+0x4ae000fa],dh
  40b98a:	and    eax,0x75559abe
  40b98f:	cmp    ebx,0xffffff85
  40b992:	fcomp  DWORD PTR [edi+0x40b153de]
  40b998:	mov    edx,0xc8bed823
  40b99d:	sbb    edx,DWORD PTR [edx]
  40b99f:	adc    esp,DWORD PTR [edx-0x13ca96d7]
  40b9a5:	and    DWORD PTR [edi+0x34],0xfffffff1
  40b9a9:	test   ecx,edi
  40b9ab:	mov    ch,0xc6
  40b9ad:	popa   
  40b9ae:	xor    al,dh
  40b9b0:	xchg   esp,ecx
  40b9b2:	ret    0x7565
  40b9b5:	and    al,0x4b
  40b9b7:	cs dec ebx
  40b9b9:	mov    BYTE PTR [edx],ch
  40b9bb:	inc    edi
  40b9bc:	int3   
  40b9bd:	call   0x75cbe679
  40b9c2:	nop
  40b9c3:	jne    0x40ba26
  40b9c5:	ucomiss xmm3,xmm0
  40b9c8:	adc    al,0x7b
  40b9ca:	xor    ebp,ecx
  40b9cc:	lods   al,BYTE PTR ds:[esi]
  40b9cd:	mov    bh,0xa2
  40b9cf:	outs   dx,BYTE PTR ds:[esi]
  40b9d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9d1:	dec    esp
  40b9d2:	outs   dx,DWORD PTR ds:[esi]
  40b9d3:	inc    ebx
  40b9d4:	adc    dl,BYTE PTR [eax]
  40b9d6:	ret    
  40b9d7:	or     DWORD PTR ds:0xf0e255fc,edi
  40b9dd:	jmp    0x514d:0xd910c82a
  40b9e4:	pop    ds
  40b9e5:	and    bh,dh
  40b9e7:	adc    dh,BYTE PTR [ecx-0x37]
  40b9ea:	mov    dl,0x22
  40b9ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9ed:	fild   DWORD PTR [ecx+ebp*1+0x367e18]
  40b9f4:	das    
  40b9f5:	enter  0xe037,0xc6
  40b9f9:	shl    edx,0x23
  40b9fc:	xor    eax,0x86dc4cd5
  40ba01:	sub    eax,0x2dae706
  40ba06:	inc    edi
  40ba07:	jae    0x40ba13
  40ba09:	aam    0x62
  40ba0b:	push   edx
  40ba0c:	xor    BYTE PTR ds:0xce87c536,dh
  40ba12:	cmp    ch,ah
  40ba14:	add    DWORD PTR [esi-0x7f],esi
  40ba17:	mov    cl,0xfc
  40ba19:	mov    cs,WORD PTR [esi-0x48b87c8c]
  40ba1f:	retf   0x73c9
  40ba22:	int    0x61
  40ba24:	call   0x31db4f26
  40ba29:	enter  0x6171,0x80
  40ba2d:	call   0x9d6e7141
  40ba32:	adc    BYTE PTR [ebx+0x2a],0xd1
  40ba36:	shr    bl,cl
  40ba38:	dec    eax
  40ba39:	dec    edi
  40ba3a:	mov    cl,0x9
  40ba3c:	mov    ch,0xfe
  40ba3e:	mov    ebp,0xdabb8880
  40ba43:	adc    al,0xa4
  40ba45:	lods   al,BYTE PTR ds:[esi]
  40ba46:	scas   al,BYTE PTR es:[edi]
  40ba47:	aam    0x86
  40ba49:	mov    esi,0x429c83e5
  40ba4e:	pop    edx
  40ba4f:	adc    BYTE PTR [edx+0x53],dl
  40ba52:	(bad)  
  40ba53:	and    al,0x9c
  40ba55:	and    ebp,DWORD PTR [esi]
  40ba57:	jb     0x40b9f1
  40ba59:	ret    0xd739
  40ba5c:	pop    ss
  40ba5d:	xchg   ebx,eax
  40ba5e:	out    dx,al
  40ba5f:	int3   
  40ba60:	push   esp
  40ba61:	inc    edi
  40ba62:	xchg   edx,eax
  40ba63:	mov    edi,0x8fbb4e6d
  40ba68:	aaa    
  40ba69:	int3   
  40ba6a:	add    DWORD PTR [ebx-0x19],ecx
  40ba6d:	lea    ebp,[edx-0x78db01fc]
  40ba73:	lods   eax,DWORD PTR ds:[esi]
  40ba74:	cmc    
  40ba75:	test   DWORD PTR [edi],esp
  40ba77:	jecxz  0x40babc
  40ba79:	pop    esp
  40ba7a:	pushf  
  40ba7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba7c:	outs   dx,BYTE PTR ds:[esi]
  40ba7d:	in     eax,0x39
  40ba7f:	jmp    0x31fc:0x3163c5fd
  40ba86:	push   0x23
  40ba88:	int    0xcf
  40ba8a:	sbb    DWORD PTR [edi+ebx*2-0x7b],ecx
  40ba8e:	fimul  DWORD PTR [edx+edx*4-0x4f]
  40ba92:	stos   BYTE PTR es:[edi],al
  40ba93:	out    0x74,eax
  40ba95:	and    al,0x6a
  40ba97:	add    ch,cl
  40ba99:	push   ss
  40ba9a:	pop    ebp
  40ba9b:	jecxz  0x40bb1c
  40ba9d:	push   0xffffffc5
  40ba9f:	or     DWORD PTR [ebx+0xd],esi
  40baa2:	stos   DWORD PTR es:[edi],eax
  40baa3:	dec    esp
  40baa4:	xchg   ebp,eax
  40baa5:	aam    0xf8
  40baa7:	test   BYTE PTR [edi-0xd24bbf0],0x7c
  40baae:	cli    
  40baaf:	jmp    0x247:0x9f67b160
  40bab6:	push   esp
  40bab7:	popa   
  40bab8:	fsub   DWORD PTR [esi+0x30]
  40babb:	pop    esp
  40babc:	sbb    BYTE PTR [ecx-0x23f7b881],bh
  40bac2:	adc    eax,0xb47f70f6
  40bac7:	in     al,dx
  40bac8:	mov    dh,0xe1
  40baca:	mov    ebx,0x9bff5b36
  40bacf:	xchg   ebx,eax
  40bad0:	aaa    
  40bad1:	stos   BYTE PTR es:[edi],al
  40bad2:	jle    0x40bb29
  40bad4:	and    DWORD PTR [edi-0x48],0x18fab923
  40badb:	push   ecx
  40badc:	test   eax,0xd3361a3b
  40bae1:	or     DWORD PTR [edx+0x4cb8926d],edx
  40bae7:	stc    
  40bae8:	in     al,0xc7
  40baea:	arpl   WORD PTR [edx],si
  40baec:	ds inc edx
  40baee:	and    DWORD PTR [bp+si+0x2119],0x39
  40baf4:	inc    ebp
  40baf5:	xchg   ecx,eax
  40baf6:	mov    ch,0x5f
  40baf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40baf9:	push   edi
  40bafa:	ret    
  40bafb:	mov    WORD PTR [ecx-0x66],es
  40bafe:	(bad)  
  40baff:	mov    esp,0x63e7e28f
  40bb04:	fimul  DWORD PTR ds:0x25e43bee
  40bb0a:	or     ecx,esp
  40bb0c:	jne    0x40ba8e
  40bb0e:	ret    0xc355
  40bb11:	push   DWORD PTR [edx]
  40bb13:	je     0x40ba9b
  40bb15:	and    cl,BYTE PTR [edi+0x68fa7362]
  40bb1b:	or     al,0xfe
  40bb1d:	sbb    BYTE PTR [ebx+0x4a],bl
  40bb20:	sub    esp,DWORD PTR [ebp-0x7e]
  40bb23:	cmp    edx,DWORD PTR [ebp+eax*8+0x50]
  40bb27:	xor    DWORD PTR ds:0xe5cd87a7,eax
  40bb2d:	push   0xd212ccd4
  40bb32:	lock mov esi,0xd93652da
  40bb38:	mov    bl,0x79
  40bb3a:	test   dl,bh
  40bb3c:	xor    DWORD PTR [ecx-0x76187c79],esi
  40bb42:	sbb    DWORD PTR [ebx+0x6a70a61b],0xffffff98
  40bb49:	and    BYTE PTR [esi],bl
  40bb4b:	push   edi
  40bb4c:	inc    ebx
  40bb4d:	add    al,0x5c
  40bb4f:	jo     0x40bbcc
  40bb51:	mov    bl,0xf9
  40bb53:	int3   
  40bb54:	cmc    
  40bb55:	mov    dh,0xe5
  40bb57:	add    ecx,DWORD PTR [edx+0x21]
  40bb5a:	jo     0x40bb0a
  40bb5c:	add    dh,BYTE PTR [edx]
  40bb5e:	or     DWORD PTR [edi],esi
  40bb60:	jno    0x40bb22
  40bb62:	cmp    ecx,esi
  40bb64:	mov    edx,0xeff7cc51
  40bb69:	pop    esi
  40bb6a:	pushf  
  40bb6b:	push   ecx
  40bb6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb6d:	test   DWORD PTR [ebp-0x1e],0x57613bb3
  40bb74:	enter  0x608b,0x4
  40bb78:	pop    eax
  40bb79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb7a:	add    eax,0xc66c6e03
  40bb7f:	scas   al,BYTE PTR es:[edi]
  40bb80:	ja     0x40bb7f
  40bb82:	ins    DWORD PTR es:[edi],dx
  40bb83:	out    0x7c,eax
  40bb85:	add    ah,BYTE PTR [ecx+0x24]
  40bb88:	cwde   
  40bb89:	repnz nop
  40bb8b:	cwde   
  40bb8c:	pop    eax
  40bb8d:	mov    bh,0x98
  40bb8f:	mov    ecx,0xc06d1ebb
  40bb94:	xor    eax,0x7a446302
  40bb99:	add    eax,0xe418d807
  40bb9e:	mov    dh,bl
  40bba0:	fimul  WORD PTR [edi]
  40bba2:	mov    esi,0xa42567e4
  40bba7:	aas    
  40bba8:	shr    DWORD PTR [esi],cl
  40bbaa:	or     ebp,DWORD PTR ds:0x35ffe215
  40bbb0:	rdtsc  
  40bbb2:	adc    ebx,DWORD PTR [ecx]
  40bbb4:	test   DWORD PTR [eax-0x14],esi
  40bbb7:	(bad)  
  40bbb8:	fist   WORD PTR [ecx-0x1c8adee0]
  40bbbe:	dec    edi
  40bbbf:	mov    bh,0xc1
  40bbc1:	mov    al,ds:0x2128c215
  40bbc6:	dec    esi
  40bbc7:	pop    edi
  40bbc8:	scas   eax,DWORD PTR es:[edi]
  40bbc9:	cwde   
  40bbca:	xchg   DWORD PTR [esi+0x6e],ebp
  40bbcd:	popa   
  40bbce:	and    edx,DWORD PTR [ecx-0x2a]
  40bbd1:	rep outs dx,DWORD PTR fs:[esi]
  40bbd4:	loop   0x40bc01
  40bbd6:	stos   BYTE PTR es:[edi],al
  40bbd7:	push   esi
  40bbd8:	or     dl,0x5
  40bbdb:	bound  edi,QWORD PTR [ebx-0x63]
  40bbde:	sub    DWORD PTR [ebp-0x3c9c0d2a],eax
  40bbe4:	dec    edx
  40bbe5:	xchg   ecx,eax
  40bbe6:	cmp    BYTE PTR [esi],cl
  40bbe8:	push   esp
  40bbe9:	shl    bl,1
  40bbeb:	aam    0xf0
  40bbed:	cmp    cl,BYTE PTR [eax]
  40bbef:	das    
  40bbf0:	ins    BYTE PTR es:[edi],dx
  40bbf1:	dec    esp
  40bbf2:	loopne 0x40bba7
  40bbf4:	add    DWORD PTR [ebp+0x780685f9],edx
  40bbfa:	cli    
  40bbfb:	xor    bh,BYTE PTR [edx-0x21440f99]
  40bc01:	and    eax,0xb468c04a
  40bc06:	cwde   
  40bc07:	bound  ebx,QWORD PTR [esi+0x7df42229]
  40bc0d:	sbb    BYTE PTR [ecx],dl
  40bc0f:	inc    edi
  40bc10:	fsubr  QWORD PTR [edx-0x1a22a4a5]
  40bc16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc17:	popf   
  40bc18:	dec    eax
  40bc19:	out    0x89,al
  40bc1b:	add    al,0x2b
  40bc1d:	lods   eax,DWORD PTR ds:[esi]
  40bc1e:	inc    eax
  40bc1f:	adc    al,0x2b
  40bc21:	fs gs mov edx,es
  40bc25:	sti    
  40bc26:	inc    ecx
  40bc27:	sub    dl,BYTE PTR [eax-0x80]
  40bc2a:	xor    BYTE PTR [edx+0x4de1db8f],bh
  40bc30:	xor    esi,eax
  40bc32:	mov    dl,0x17
  40bc34:	iret   
  40bc35:	(bad)  
  40bc36:	out    dx,al
  40bc37:	test   edx,edx
  40bc39:	mov    esp,0x3b39882b
  40bc3e:	test   BYTE PTR es:[edi+ebx*1],0x4e
  40bc43:	dec    esi
  40bc44:	outs   dx,DWORD PTR ds:[esi]
  40bc45:	dec    ecx
  40bc46:	xchg   BYTE PTR [edx-0x20],cl
  40bc49:	pop    edx
  40bc4a:	cld    
  40bc4b:	add    BYTE PTR [eax],0x9d
  40bc4e:	add    ecx,DWORD PTR [eax+0x641f6b02]
  40bc54:	ret    0x6c05
  40bc57:	mov    edx,0x9b160774
  40bc5c:	jmp    0x7c54:0xc69b09a9
  40bc63:	je     0x40bc5f
  40bc65:	pusha  
  40bc66:	lods   al,BYTE PTR ds:[esi]
  40bc67:	(bad)  
  40bc68:	xchg   esi,eax
  40bc69:	mov    bl,0x47
  40bc6b:	mov    eax,ds:0xd44e71f0
  40bc70:	jg     0x40bc86
  40bc72:	in     eax,0x2
  40bc74:	sub    edx,0xe28c9f52
  40bc7a:	xchg   esi,eax
  40bc7b:	xlat   BYTE PTR ds:[ebx]
  40bc7c:	imul   ebx,DWORD PTR [eax-0x60],0x5793aad
  40bc83:	dec    eax
  40bc84:	mov    ds:0x86d9cf20,eax
  40bc89:	popa   
  40bc8a:	gs cdq 
  40bc8c:	call   0x1c10:0xf64e421
  40bc93:	retf   
  40bc94:	inc    esp
  40bc95:	sbb    bl,bh
  40bc97:	dec    esp
  40bc98:	mov    bl,0x6a
  40bc9a:	pop    ss
  40bc9b:	pop    ecx
  40bc9c:	xor    edi,0xffffffba
  40bc9f:	inc    edx
  40bca0:	push   ds
  40bca1:	adc    BYTE PTR [edx-0x6350c2b7],0x32
  40bca8:	and    al,0xe5
  40bcaa:	mov    ds:0x8f3ec782,al
  40bcaf:	sbb    bh,BYTE PTR [ecx-0x71]
  40bcb2:	pop    esi
  40bcb3:	loopne 0x40bcf8
  40bcb5:	dec    esp
  40bcb6:	nop
  40bcb7:	sub    DWORD PTR [esi+ecx*8-0x1befc963],ebp
  40bcbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcbf:	dec    ecx
  40bcc0:	mov    cl,0xb2
  40bcc2:	test   DWORD PTR [ebx+esi*2-0x5b],ebp
  40bcc6:	aas    
  40bcc7:	mov    cl,0xfd
  40bcc9:	jle    0x40bcc4
  40bccb:	xlat   BYTE PTR ds:[ebx]
  40bccc:	sub    dh,cl
  40bcce:	and    al,0x42
  40bcd0:	adc    al,0xa6
  40bcd2:	cmp    ah,BYTE PTR [edx+0x60]
  40bcd5:	aas    
  40bcd6:	jecxz  0x40bc7a
  40bcd8:	jns    0x40bc5f
  40bcda:	xchg   ebp,eax
  40bcdb:	add    esi,DWORD PTR [ebx-0x26ad857]
  40bce1:	sub    DWORD PTR [eax],edx
  40bce3:	bound  eax,QWORD PTR [edx]
  40bce5:	pop    edx
  40bce6:	push   cs
  40bce7:	pop    ebx
  40bce8:	outs   dx,BYTE PTR ds:[esi]
  40bce9:	loope  0x40bce3
  40bceb:	xchg   DWORD PTR [esi+0x1eb8d63c],ebx
  40bcf1:	repnz mov ch,0xf7
  40bcf4:	test   eax,0x57b90233
  40bcf9:	lock mov ch,0x45
  40bcfc:	shl    BYTE PTR [edx+0x27],1
  40bcff:	ror    BYTE PTR [ebp-0x26],cl
  40bd02:	adc    esi,edi
  40bd04:	lahf   
  40bd05:	xor    DWORD PTR [eax+ecx*1-0x4ee132f4],ebp
  40bd0c:	mov    BYTE PTR [eax-0x5],bh
  40bd0f:	xchg   BYTE PTR ds:0x700384ac,dl
  40bd15:	sti    
  40bd16:	fld    DWORD PTR [ecx-0x6ebe2da7]
  40bd1c:	sub    BYTE PTR [eax+0x62e305cb],ch
  40bd22:	adc    ecx,DWORD PTR [eax+0x17275e6f]
  40bd28:	ret    0x56ff
  40bd2b:	bound  esi,QWORD PTR [esi+0x2ae2d356]
  40bd31:	dec    esi
  40bd32:	(bad)  
  40bd33:	pop    ecx
  40bd34:	and    al,al
  40bd36:	sub    dl,al
  40bd38:	ror    DWORD PTR [ebx],1
  40bd3a:	test   BYTE PTR [ebx-0x29],bh
  40bd3d:	sub    eax,0xb8dcdc24
  40bd42:	in     al,0xd4
  40bd44:	jne    0x40bd4e
  40bd46:	imul   eax,DWORD PTR [ebp+edx*4+0x46e13509],0xffffffa1
  40bd4e:	dec    ebp
  40bd4f:	xchg   ebp,eax
  40bd50:	jno    0x40bd42
  40bd52:	in     eax,0xda
  40bd54:	xchg   edx,eax
  40bd55:	mov    BYTE PTR [esi-0x78],al
  40bd58:	dec    ebx
  40bd59:	or     eax,0xb9072814
  40bd5e:	ds adc ecx,esp
  40bd61:	and    al,0x7e
  40bd63:	sbb    ebx,DWORD PTR [esi]
  40bd65:	add    al,0xdf
  40bd67:	lods   eax,DWORD PTR ds:[esi]
  40bd68:	mov    ebp,0x1c0ba52b
  40bd6d:	and    al,0x98
  40bd6f:	mov    edi,0xc7a8c24e
  40bd74:	and    ebp,DWORD PTR es:0xd6c4953
  40bd7b:	and    BYTE PTR [ecx+ebp*8],bl
  40bd7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd7f:	sub    DWORD PTR [edi],esi
  40bd81:	dec    ecx
  40bd82:	pop    esi
  40bd83:	iret   
  40bd84:	ja     0x40bd59
  40bd86:	mov    ch,0x9b
  40bd88:	sbb    ebx,DWORD PTR [edi-0x50]
  40bd8b:	adc    al,0xbf
  40bd8d:	mov    ch,0x8b
  40bd8f:	(bad)  
  40bd90:	mov    ds:0xbbc5a84e,al
  40bd95:	aam    0x84
  40bd97:	outs   dx,DWORD PTR ds:[esi]
  40bd98:	mov    dl,0xbe
  40bd9a:	cmp    esi,DWORD PTR [ecx]
  40bd9c:	mov    DWORD PTR [esi-0x69],edi
  40bd9f:	fmulp  st(3),st
  40bda1:	leave  
  40bda2:	inc    eax
  40bda3:	pusha  
  40bda4:	in     al,0xed
  40bda6:	loope  0x40bdc0
  40bda8:	(bad)  
  40bda9:	push   esi
  40bdaa:	stos   DWORD PTR es:[edi],eax
  40bdab:	aaa    
  40bdac:	push   eax
  40bdad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdae:	imul   ecx,DWORD PTR [ecx+0x3ae0377a],0x4a
  40bdb5:	cmp    BYTE PTR [edi],ah
  40bdb7:	(bad)  
  40bdb8:	jmp    0xa2b7:0xe6767926
  40bdbf:	mov    ebp,0xd5b54ad2
  40bdc4:	jmp    0x40bd72
  40bdc6:	and    edx,ecx
  40bdc8:	leave  
  40bdc9:	xor    ebp,DWORD PTR gs:[eax+0x132322c6]
  40bdd0:	sbb    BYTE PTR [edi+ebp*1],dl
  40bdd3:	aad    0xd3
  40bdd5:	aad    0xea
  40bdd7:	cli    
  40bdd8:	mov    ds:0x39e64663,eax
  40bddd:	cmp    eax,0x16131a46
  40bde2:	fist   WORD PTR [eax]
  40bde4:	repz jle 0x40be63
  40bde7:	sbb    eax,0x16b05a47
  40bdec:	inc    edx
  40bded:	or     edi,edi
  40bdef:	pop    eax
  40bdf0:	bound  ebp,QWORD PTR [ecx+edx*4]
  40bdf3:	clc    
  40bdf4:	sub    esi,DWORD PTR [eax-0x58fc394c]
  40bdfa:	lds    ecx,FWORD PTR [ecx+0x6ccaf622]
  40be00:	mov    ds:0x80ed0d83,eax
  40be05:	jo     0x40bdb1
  40be07:	in     eax,dx
  40be08:	bound  edi,QWORD PTR [edx]
  40be0a:	sbb    DWORD PTR [eax],ecx
  40be0c:	vpaddd ymm5,ymm1,ymm3
  40be10:	fs xchg esi,eax
  40be12:	jae    0x40be01
  40be14:	mov    al,ds:0x60c209eb
  40be19:	sbb    ah,al
  40be1b:	cmp    DWORD PTR [esi+0x4e],esp
  40be1e:	inc    esi
  40be1f:	aaa    
  40be20:	sub    cl,BYTE PTR [ecx-0x69c76720]
  40be26:	sahf   
  40be27:	sub    BYTE PTR [edi-0x69],0xef
  40be2b:	mov    ds:0x87a3256f,eax
  40be30:	ret    0x2a6b
  40be33:	loopne 0x40be85
  40be35:	xor    BYTE PTR [esi+0x68],dl
  40be38:	lds    esp,FWORD PTR [esi+0x2a]
  40be3b:	inc    esp
  40be3c:	inc    ebx
  40be3d:	rcl    esp,0x1
  40be40:	xchg   esi,esi
  40be42:	push   ebp
  40be43:	out    0x49,al
  40be45:	sbb    DWORD PTR [ebx-0x40],esi
  40be48:	and    DWORD PTR [ebx],ecx
  40be4a:	and    DWORD PTR [esi],eax
  40be4c:	jg     0x40be1a
  40be4e:	cmp    ebp,eax
  40be50:	inc    eax
  40be51:	mov    dh,0xb7
  40be53:	push   ebx
  40be54:	aas    
  40be55:	inc    eax
  40be56:	add    BYTE PTR [eax+0x520ea6eb],ah
  40be5c:	jg     0x40bdf3
  40be5e:	mov    dl,0xf4
  40be60:	mov    esp,0x184312af
  40be65:	and    BYTE PTR [ecx-0x29],cl
  40be68:	jo     0x40be3c
  40be6a:	int3   
  40be6b:	leave  
  40be6c:	mov    DWORD PTR [ebx+0x1f],ebp
  40be6f:	mov    ebx,0x25e1f995
  40be74:	in     al,0x41
  40be76:	ins    BYTE PTR es:[edi],dx
  40be77:	(bad)  
  40be78:	cmp    al,0x97
  40be7a:	pop    esp
  40be7b:	mov    ds:0x13f94e70,al
  40be80:	dec    ecx
  40be81:	test   BYTE PTR [eax+0x44de056c],dl
  40be87:	repnz lds ecx,FWORD PTR [edx]
  40be8a:	hlt    
  40be8b:	xchg   ebp,eax
  40be8c:	jns    0x40bf0c
  40be8e:	retf   0x36f2
  40be91:	jg     0x40be6b
  40be93:	je     0x40be9b
  40be95:	stc    
  40be96:	arpl   WORD PTR [ecx-0x4dfadf8c],si
  40be9c:	ja     0x40be3c
  40be9e:	add    al,0xfb
  40bea0:	js     0x40bee9
  40bea2:	loop   0x40bee8
  40bea4:	fdiv   DWORD PTR [esi+esi*2+0x76d40631]
  40beab:	cmp    ecx,ecx
  40bead:	mov    bh,0x15
  40beaf:	mov    bl,0x2b
  40beb1:	or     ch,BYTE PTR [edi-0x3c]
  40beb4:	mov    al,0x4
  40beb7:	push   edi
  40beb8:	push   cs
  40beb9:	(bad)  
  40beba:	in     eax,0xdd
  40bebc:	dec    esp
  40bebd:	mov    al,0x80
  40bebf:	scas   eax,DWORD PTR es:[edi]
  40bec0:	mov    eax,0x5084f9a2
  40bec5:	imul   ebp,DWORD PTR ss:[edi+0x34],0x2460c77e
  40becd:	test   ecx,ecx
  40becf:	or     DWORD PTR [edx-0x50],esp
  40bed2:	test   eax,0x9edb3b72
  40bed7:	mov    esp,0x786f341c
  40bedc:	sub    dh,BYTE PTR [ebp+0x5e]
  40bedf:	pop    edx
  40bee0:	sbb    BYTE PTR [esi+0x25d6cf41],0xbf
  40bee7:	ins    BYTE PTR es:[edi],dx
  40bee8:	pusha  
  40bee9:	scas   eax,DWORD PTR es:[edi]
  40beea:	mov    WORD PTR [edi+eiz*2],es
  40beed:	mov    ?,WORD PTR [eax]
  40beef:	inc    edx
  40bef0:	outs   dx,DWORD PTR ds:[esi]
  40bef1:	inc    esi
  40bef2:	and    BYTE PTR [ebx+esi*1-0x2bd8fa42],al
  40bef9:	inc    ebx
  40befa:	les    esi,FWORD PTR [esp+ebx*4+0x68]
  40befe:	lds    edx,FWORD PTR [eax-0x5e97e106]
  40bf04:	push   ds
  40bf05:	jp     0x40bf58
  40bf07:	mov    esi,0xbe2d887e
  40bf0c:	jge    0x40bede
  40bf0e:	clc    
  40bf0f:	nop
  40bf10:	jns    0x40beae
  40bf12:	ror    DWORD PTR [ebp+eiz*2-0x7d],1
  40bf16:	inc    edx
  40bf17:	imul   ebp,DWORD PTR [eax+edx*8+0x17],0x69d67fb4
  40bf1f:	adc    edi,DWORD PTR [ecx-0x76]
  40bf22:	adc    al,0x5a
  40bf24:	je     0x40bf0a
  40bf26:	ins    BYTE PTR es:[edi],dx
  40bf27:	push   edx
  40bf28:	je     0x40bf1c
  40bf2a:	jns    0x40bf68
  40bf2c:	push   ebx
  40bf2d:	or     DWORD PTR [esi-0x14],edx
  40bf30:	nop
  40bf31:	cmc    
  40bf32:	imul   esi,DWORD PTR [edi+edx*1-0xe],0xafaf502c
  40bf3a:	inc    edx
  40bf3b:	fnstenv [edx]
  40bf3d:	mov    ah,0x64
  40bf3f:	je     0x40bf82
  40bf41:	inc    ebx
  40bf42:	or     ebp,DWORD PTR [edx+0x1105c4c0]
  40bf48:	enter  0x202d,0x70
  40bf4c:	push   esp
  40bf4d:	pop    ebp
  40bf4e:	cmp    eax,0x39e90ae1
  40bf53:	push   ecx
  40bf54:	popf   
  40bf55:	cli    
  40bf56:	(bad)  
  40bf58:	retf   0xdd66
  40bf5b:	ja     0x40bfa4
  40bf5d:	adc    DWORD PTR fs:[ebx],edx
  40bf60:	mov    dl,BYTE PTR [edx-0x20]
  40bf63:	inc    esi
  40bf64:	inc    esp
  40bf65:	sub    dh,BYTE PTR [si-0x37]
  40bf69:	mov    eax,0xe06c55ec
  40bf6e:	leave  
  40bf6f:	adc    esp,DWORD PTR [ebx-0x33]
  40bf72:	fyl2x  
  40bf74:	mov    eax,0x5addaf55
  40bf79:	sti    
  40bf7a:	(bad)  
  40bf7b:	cli    
  40bf7c:	mov    ecx,0xa2b29efe
  40bf81:	xor    cl,dl
  40bf83:	pop    es
  40bf84:	into   
  40bf85:	stos   DWORD PTR es:[edi],eax
  40bf86:	push   esi
  40bf87:	push   edx
  40bf88:	cmp    DWORD PTR [ebx],0xffffffbe
  40bf8b:	push   edi
  40bf8c:	fwait
  40bf8d:	mov    WORD PTR [edx],gs
  40bf8f:	dec    ecx
  40bf90:	mov    esi,edx
  40bf92:	push   bx
  40bf94:	jecxz  0x40bfaf
  40bf96:	pop    esi
  40bf97:	inc    ecx
  40bf98:	sti    
  40bf99:	mov    WORD PTR [ebx-0x7cbcf622],cs
  40bf9f:	lods   eax,DWORD PTR ds:[esi]
  40bfa0:	ds dec esi
  40bfa2:	(bad)  
  40bfa3:	iret   
  40bfa4:	and    bh,al
  40bfa6:	mov    ebx,0xd4a9ae6a
  40bfab:	mov    edi,0x96b66de3
  40bfb0:	jne    0x40bfe7
  40bfb2:	imul   edi,DWORD PTR [eax+0x76],0xc6499f7d
  40bfb9:	cld    
  40bfba:	sbb    DWORD PTR [ebp-0x2da4361d],ecx
  40bfc0:	adc    dl,ch
  40bfc2:	in     al,0xdc
  40bfc4:	pop    es
  40bfc5:	out    dx,al
  40bfc6:	jmp    0x3d112ed7
  40bfcb:	(bad)  
  40bfcc:	cmp    al,0x22
  40bfce:	scas   al,BYTE PTR es:[edi]
  40bfcf:	in     al,0x77
  40bfd1:	jge    0x40bfe8
  40bfd3:	mov    edi,0x80f5dd8f
  40bfd8:	rcl    BYTE PTR [ecx+eax*8],1
  40bfdb:	pop    ebx
  40bfdc:	ffreep st(4)
  40bfde:	push   0xfdc52100
  40bfe3:	sar    DWORD PTR [edi],1
  40bfe5:	dec    eax
  40bfe6:	pop    ebp
  40bfe7:	mov    ds,WORD PTR [ebx]
  40bfe9:	aad    0x79
  40bfeb:	lahf   
  40bfec:	xchg   ebx,eax
  40bfed:	inc    ecx
  40bfee:	push   edi
  40bfef:	mov    ecx,0xa1bd0c45
  40bff4:	xor    BYTE PTR [ebx],dl
  40bff6:	or     DWORD PTR [edi],esi
  40bff8:	lahf   
  40bff9:	fisub  DWORD PTR [ecx]
  40bffb:	dec    esi
  40bffc:	mov    bl,0x3c
  40bffe:	cmp    ecx,DWORD PTR ds:0x5dc99e3b
  40c004:	push   0xffffff99
  40c006:	xchg   ebx,eax
  40c007:	nop
  40c008:	outs   dx,DWORD PTR ds:[esi]
  40c009:	add    ecx,ebp
  40c00b:	nop
  40c00c:	(bad)  
  40c00d:	popf   
  40c00e:	xchg   ecx,eax
  40c00f:	mov    eax,0xb29b1caa
  40c014:	mov    eax,ds:0x132a2708
  40c019:	mov    ah,0x0
  40c01b:	sub    BYTE PTR [eax],ch
  40c01d:	dec    eax
  40c01e:	push   ds
  40c01f:	add    eax,0xbb17df79
  40c024:	sbb    al,0xd4
  40c026:	shr    BYTE PTR [ecx+esi*1+0x5de62794],1
  40c02d:	test   BYTE PTR [esi],ch
  40c02f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c030:	rcr    cl,0x1b
  40c033:	inc    ebp
  40c034:	push   es
  40c035:	out    dx,eax
  40c036:	and    cl,BYTE PTR [ecx+0x5b]
  40c039:	call   0x5930:0x57d1e892
  40c040:	push   edi
  40c041:	dec    ecx
  40c042:	inc    esi
  40c043:	xchg   ebp,eax
  40c044:	cmp    BYTE PTR [esi-0xc],ah
  40c047:	mov    eax,0xdced3242
  40c04c:	push   edi
  40c04d:	imul   edi,DWORD PTR [edx],0xffffff88
  40c050:	or     BYTE PTR [edi+ebp*2-0x15],0x4d
  40c055:	int3   
  40c056:	mov    al,0x9f
  40c058:	inc    edi
  40c059:	mov    edi,0x3452f5ec
  40c05e:	inc    ebx
  40c05f:	or     eax,0x25f5e19f
  40c064:	fisttp QWORD PTR [esi-0x2c179128]
  40c06a:	popa   
  40c06b:	int3   
  40c06c:	test   DWORD PTR [esi+ecx*1+0x192f56e8],edx
  40c073:	pcmpeqb mm1,mm2
  40c076:	push   ecx
  40c077:	add    BYTE PTR [edi-0x3f],al
  40c07a:	or     BYTE PTR [eax+0x16d63c3f],dh
  40c080:	xchg   eax,esi
  40c082:	idiv   cl
  40c084:	jne    0x40c0af
  40c086:	lods   al,BYTE PTR ds:[esi]
  40c087:	xchg   BYTE PTR [edi+0xe],dh
  40c08a:	push   edi
  40c08b:	adc    esi,eax
  40c08d:	aam    0x77
  40c08f:	jl     0x40c0b3
  40c091:	(bad)  
  40c092:	loopne 0x40c088
  40c094:	js     0x40c0cd
  40c096:	pop    ebx
  40c097:	fsub   st,st(7)
  40c099:	add    DWORD PTR [eax],ebp
  40c09b:	in     eax,dx
  40c09c:	test   BYTE PTR [ebp+0x48],ch
  40c09f:	mov    cl,0x9a
  40c0a1:	iret   
  40c0a2:	leave  
  40c0a3:	fidivr DWORD PTR ds:0x8cc5a42f
  40c0a9:	inc    ebx
  40c0aa:	fwait
  40c0ab:	xor    ch,BYTE PTR [esi-0x47]
  40c0ae:	out    dx,eax
  40c0af:	xor    al,0xbf
  40c0b1:	das    
  40c0b2:	xchg   edx,eax
  40c0b3:	mov    al,0xeb
  40c0b5:	cld    
  40c0b6:	jmp    0xe9b:0x5f64430e
  40c0bd:	inc    edi
  40c0be:	or     BYTE PTR [esp+edi*4],al
  40c0c1:	cmp    dl,BYTE PTR [ebx+0x5b]
  40c0c4:	js     0x40c0ef
  40c0c6:	dec    ebx
  40c0c7:	shr    DWORD PTR [esi-0x44c9fd87],1
  40c0cd:	imul   ecx,DWORD PTR [edi+0x6a],0xffffffea
  40c0d1:	cwde   
  40c0d2:	or     ah,BYTE PTR [eax]
  40c0d4:	jle    0x40c11d
  40c0d6:	cld    
  40c0d7:	test   eax,0x86f86803
  40c0dc:	mov    cl,0x6c
  40c0de:	pop    es
  40c0df:	retf   
  40c0e0:	dec    edx
  40c0e1:	lahf   
  40c0e2:	das    
  40c0e3:	retf   
  40c0e4:	call   0x83be:0x19755d9b
  40c0eb:	addr16 aad 0xfb
  40c0ee:	adc    al,0x98
  40c0f0:	fwait
  40c0f1:	sub    al,0x84
  40c0f3:	shl    ah,0x7e
  40c0f6:	jecxz  0x40c09f
  40c0f8:	pop    eax
  40c0f9:	xchg   esi,eax
  40c0fa:	das    
  40c0fb:	mov    ebp,DWORD PTR [ebx+0x7b]
  40c0fe:	xchg   ebx,eax
  40c0ff:	and    al,BYTE PTR [ecx-0x63]
  40c102:	dec    esp
  40c103:	or     cl,BYTE PTR [edx+ebp*2+0x34]
  40c107:	and    eax,0x46529dae
  40c10c:	sar    BYTE PTR [ecx+0x6655d1e],0x18
  40c113:	xchg   esp,eax
  40c114:	mov    ebx,0x7d679830
  40c119:	pop    esi
  40c11a:	jns    0x40c0ed
  40c11c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c11d:	sbb    DWORD PTR [ebp-0x6520144],edx
  40c123:	mov    ss,WORD PTR [ebx+edx*1-0x1796745d]
  40c12a:	test   al,0xda
  40c12c:	inc    esi
  40c12d:	popa   
  40c12e:	lods   al,BYTE PTR ds:[esi]
  40c12f:	mov    DWORD PTR [ecx-0x3e],esp
  40c132:	sub    BYTE PTR [eax+0x3c],bh
  40c135:	ja     0x40c107
  40c137:	ror    ebp,1
  40c139:	(bad)
  40c13e:	sbb    ecx,DWORD PTR [esp+edx*8]
  40c141:	lahf   
  40c142:	not    DWORD PTR [ebx]
  40c144:	add    ebx,DWORD PTR [edi-0x6bbd99d3]
  40c14a:	cmc    
  40c14b:	int    0xc6
  40c14d:	mov    esi,0x843c96cb
  40c152:	sub    dl,al
  40c154:	pop    ecx
  40c155:	into   
  40c156:	neg    DWORD PTR [eax-0x346ffee1]
  40c15c:	xor    al,0x88
  40c15e:	dec    ebp
  40c15f:	data16 outs dx,BYTE PTR ds:[esi]
  40c161:	cmp    ebx,DWORD PTR [edx-0x3d]
  40c164:	in     al,dx
  40c165:	loop   0x40c1b1
  40c167:	add    BYTE PTR [ebx],ah
  40c169:	int3   
  40c16a:	iret   
  40c16b:	std    
  40c16c:	dec    esp
  40c16d:	shl    DWORD PTR [ecx],cl
  40c16f:	push   edi
  40c170:	push   esp
  40c171:	pop    esi
  40c172:	dec    eax
  40c173:	jnp    0x40c16a
  40c175:	push   edx
  40c176:	lock aaa 
  40c178:	dec    ebx
  40c179:	cmp    DWORD PTR [edx+0x72],edi
  40c17c:	mov    WORD PTR [ebp+0x1ade9ed5],gs
  40c182:	outs   dx,DWORD PTR ds:[esi]
  40c183:	(bad)  
  40c184:	out    0x5f,eax
  40c186:	sub    BYTE PTR [ecx+0xe9922c6],bh
  40c18c:	dec    eax
  40c18d:	int    0xbc
  40c18f:	dec    ebp
  40c190:	inc    esp
  40c191:	mov    bl,0x43
  40c193:	test   edi,ecx
  40c195:	aas    
  40c196:	pop    edx
  40c197:	mov    esp,0xe82b7cee
  40c19c:	ret    
  40c19d:	clc    
  40c19e:	sbb    BYTE PTR [esi],cl
  40c1a0:	jle    0x40c1ad
  40c1a2:	mov    al,ds:0xf785d118
  40c1a7:	je     0x40c13a
  40c1a9:	arpl   WORD PTR [ebx+0x5436a301],ax
  40c1af:	sbb    al,0x51
  40c1b1:	jno    0x40c20f
  40c1b3:	push   0x40
  40c1b5:	xlat   BYTE PTR ds:[ebx]
  40c1b6:	sti    
  40c1b7:	call   0xfad7f7d3
  40c1bc:	pop    ecx
  40c1bd:	inc    ebx
  40c1be:	(bad)  
  40c1bf:	mov    al,ds:0x7ba46fee
  40c1c4:	xchg   edi,eax
  40c1c5:	ret    
  40c1c6:	xlat   BYTE PTR ds:[ebx]
  40c1c7:	aas    
  40c1c8:	stos   DWORD PTR es:[edi],eax
  40c1c9:	test   eax,0x1c2a471
  40c1ce:	(bad)  
  40c1cf:	ins    DWORD PTR es:[edi],dx
  40c1d0:	ret    
  40c1d1:	mov    ds:0xcb7353f5,eax
  40c1d6:	(bad)  
  40c1d9:	mov    ah,0xb8
  40c1db:	pop    esi
  40c1dc:	arpl   WORD PTR [edi],dx
  40c1de:	leave  
  40c1df:	loop   0x40c1d4
  40c1e1:	lea    edi,[ebx-0x6b]
  40c1e4:	out    0x6e,al
  40c1e6:	inc    esi
  40c1e7:	sbb    esp,DWORD PTR [edx+ecx*4-0x55]
  40c1eb:	jp     0x40c18e
  40c1ed:	div    DWORD PTR [esi+0x6f18acec]
  40c1f3:	in     eax,dx
  40c1f4:	gs jecxz 0x40c225
  40c1f7:	pop    esp
  40c1f8:	cdq    
  40c1f9:	shr    bh,1
  40c1fb:	cmp    eax,0x4fd08b10
  40c200:	jno    0x40c1d3
  40c202:	nop
  40c203:	mov    ebx,0x349e7ed8
  40c208:	cmp    ecx,DWORD PTR [edi+0x56]
  40c20b:	xor    DWORD PTR [edx-0x9b8992c],ecx
  40c211:	(bad)  
  40c212:	daa    
  40c213:	add    eax,0x90107e77
  40c218:	dec    edi
  40c219:	out    dx,eax
  40c21a:	div    cl
  40c21c:	inc    esi
  40c21d:	(bad)  
  40c21e:	add    bx,cx
  40c221:	daa    
  40c222:	mov    ch,BYTE PTR [ebx-0x42e4ef32]
  40c228:	ins    BYTE PTR es:[edi],dx
  40c229:	sbb    eax,DWORD PTR [ecx-0x540e8a5c]
  40c22f:	cdq    
  40c230:	mov    ecx,0xde21c807
  40c235:	sub    ch,cl
  40c237:	out    dx,al
  40c238:	mov    esi,cs
  40c23a:	push   edx
  40c23b:	loope  0x40c291
  40c23d:	pop    esi
  40c23e:	pusha  
  40c23f:	add    dl,BYTE PTR [ecx+0x48]
  40c242:	fld    DWORD PTR [ecx-0x49]
  40c245:	pop    esi
  40c246:	sbb    al,ch
  40c248:	xchg   ecx,eax
  40c249:	sub    BYTE PTR [ebx+0x27ef5f28],bl
  40c24f:	sbb    DWORD PTR [edx+eax*8],edx
  40c252:	ror    ecx,1
  40c254:	push   ebp
  40c255:	(bad)  
  40c256:	ins    BYTE PTR es:[edi],dx
  40c257:	rcl    esi,1
  40c259:	sbb    bh,BYTE PTR [eax+0x2c2a3d2a]
  40c25f:	add    al,BYTE PTR fs:[edx+eiz*4-0x21]
  40c264:	repz int3 
  40c266:	test   BYTE PTR [esi+edx*1+0x646c28eb],ah
  40c26d:	dec    esi
  40c26e:	jmp    0x587d:0x15664c64
  40c275:	push   cs
  40c276:	sahf   
  40c277:	dec    edx
  40c278:	(bad)  
  40c27a:	js     0x40c211
  40c27c:	mov    WORD PTR [edi],?
  40c27e:	out    0x85,al
  40c280:	ds inc eax
  40c282:	out    0x71,eax
  40c284:	cli    
  40c285:	ins    DWORD PTR es:[edi],dx
  40c286:	inc    eax
  40c287:	jmp    0x40c219
  40c289:	gs dec ebp
  40c28b:	mov    dl,0x4b
  40c28d:	stos   BYTE PTR es:[edi],al
  40c28e:	cmp    cl,cl
  40c290:	sbb    BYTE PTR [eax+0x3],dh
  40c293:	pop    ebx
  40c294:	mov    bl,0xed
  40c296:	lds    ecx,FWORD PTR [ebx-0x32]
  40c299:	dec    ecx
  40c29a:	mov    WORD PTR ds:0xd7a81b23,gs
  40c2a0:	mov    edi,DWORD PTR [eax-0x54]
  40c2a3:	int    0x6b
  40c2a5:	stc    
  40c2a6:	xor    BYTE PTR [ebx],ch
  40c2a8:	xchg   esi,eax
  40c2a9:	repz sar BYTE PTR [ebp+0x33],1
  40c2ad:	adc    esi,DWORD PTR [ebx+0x66]
  40c2b0:	inc    ecx
  40c2b1:	out    dx,al
  40c2b2:	push   edi
  40c2b3:	mov    fs,WORD PTR [ecx-0x30]
  40c2b6:	test   BYTE PTR [eax],bh
  40c2b8:	mov    ch,dh
  40c2ba:	add    eax,0x8ea66aac
  40c2bf:	in     eax,dx
  40c2c0:	jnp    0x40c2ba
  40c2c2:	push   ds
  40c2c3:	lea    ecx,[eax]
  40c2c5:	fist   WORD PTR [ecx+0x4c234ecf]
  40c2cb:	pop    ebp
  40c2cc:	adc    edx,ebp
  40c2ce:	jns    0x40c258
  40c2d0:	dec    ebp
  40c2d1:	arpl   WORD PTR [ecx+ecx*4-0x76],bp
  40c2d5:	lds    ebx,FWORD PTR [eax]
  40c2d7:	jmp    0x8eaa3c6e
  40c2dc:	int    0xcb
  40c2de:	fld    DWORD PTR [ebp-0x56]
  40c2e1:	in     al,0xa9
  40c2e3:	dec    eax
  40c2e4:	sub    BYTE PTR [ebx+0x39],dl
  40c2e7:	(bad)  
  40c2e8:	lock aaa 
  40c2ea:	push   ss
  40c2eb:	push   ss
  40c2ec:	lea    ecx,[edi-0x39204645]
  40c2f2:	dec    esp
  40c2f3:	data16 jnp 0x40c2ce
  40c2f6:	mov    ds:0xb8d7353,al
  40c2fb:	inc    ebx
  40c2fc:	test   DWORD PTR [esi+0x24a091b0],0x976f9111
  40c306:	call   0xe6a8:0xa992e6db
  40c30d:	outs   dx,DWORD PTR ds:[esi]
  40c30e:	jo     0x40c2e2
  40c310:	stc    
  40c311:	je     0x40c2c4
  40c313:	dec    esi
  40c314:	and    al,0xec
  40c316:	push   ebp
  40c317:	ja     0x40c339
  40c319:	jmp    0xc7ea31f7
  40c31e:	enter  0x82d,0x69
  40c322:	test   DWORD PTR [edi+0x4b],edi
  40c325:	dec    edi
  40c326:	test   eax,0xc3ecd75
  40c32b:	jae    0x40c2cb
  40c32d:	fucomip st,st(1)
  40c32f:	fnstsw WORD PTR [eax]
  40c331:	and    DWORD PTR [esi],ebp
  40c333:	sub    eax,DWORD PTR [edx+edx*1]
  40c336:	push   0x73e8d599
  40c33b:	into   
  40c33c:	js     0x40c39e
  40c33e:	sbb    dl,bh
  40c340:	xor    esi,DWORD PTR [ecx+0x79]
  40c343:	stc    
  40c344:	mov    edi,0x1d0be334
  40c349:	xchg   esp,eax
  40c34a:	xor    al,0x7d
  40c34c:	xor    eax,0x5465a9ef
  40c351:	mov    ecx,0xcdc7dffd
  40c356:	pop    DWORD PTR [eax-0x42]
  40c359:	mov    eax,ds:0xfd839410
  40c35e:	mov    eax,ds:0xbcd37d7a
  40c363:	sbb    DWORD PTR [eax],esp
  40c365:	popf   
  40c366:	mov    bl,0xdd
  40c368:	ss pop ds
  40c36a:	dec    edx
  40c36b:	mov    al,0xe5
  40c36d:	cli    
  40c36e:	es or  ebp,DWORD PTR cs:0xbe5f2314
  40c376:	cmp    ecx,ebx
  40c378:	sub    ch,dl
  40c37a:	(bad)  
  40c37b:	mov    ah,0xca
  40c37d:	fs or  al,cl
  40c380:	mov    BYTE PTR [ebx],0x3a
  40c383:	xchg   esi,eax
  40c384:	mov    esi,0xcf1e7968
  40c389:	mov    gs,WORD PTR ds:0x56000cdf
  40c38f:	jnp    0x40c395
  40c391:	add    al,0xf1
  40c393:	mov    cl,0xc
  40c395:	jb     0x40c39c
  40c397:	push   eax
  40c398:	xchg   edi,eax
  40c399:	imul   esp,DWORD PTR [eax+0x5279d525],0xffffffbc
  40c3a0:	scas   al,BYTE PTR es:[edi]
  40c3a1:	ins    BYTE PTR es:[edi],dx
  40c3a2:	sar    bh,cl
  40c3a4:	adc    edx,DWORD PTR ds:0x28849bf3
  40c3aa:	js     0x40c3d9
  40c3ac:	jp     0x40c368
  40c3ae:	std    
  40c3af:	in     eax,0x2d
  40c3b1:	mov    dl,0x15
  40c3b3:	repnz or ch,al
  40c3b6:	xchg   ebx,eax
  40c3b7:	xchg   ecx,eax
  40c3b8:	sub    al,0x34
  40c3ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3bb:	out    0xe3,eax
  40c3bd:	mov    ecx,0x97cf3e7f
  40c3c2:	stos   DWORD PTR es:[edi],eax
  40c3c3:	fwait
  40c3c4:	dec    esi
  40c3c5:	adc    DWORD PTR [ecx+0x4a],eax
  40c3c8:	or     edi,DWORD PTR [esi-0x5]
  40c3cb:	out    dx,eax
  40c3cc:	inc    ebx
  40c3cd:	add    eax,0x9a944dd1
  40c3d2:	sbb    al,0x12
  40c3d4:	xchg   edx,eax
  40c3d5:	or     eax,0x81d6bf1a
  40c3da:	sub    al,0x53
  40c3dc:	test   cl,0xad
  40c3df:	pop    ecx
  40c3e0:	adc    bh,ch
  40c3e2:	push   ecx
  40c3e3:	add    edx,DWORD PTR [esi+0x77]
  40c3e6:	xchg   esi,eax
  40c3e7:	pop    esp
  40c3e8:	mov    cl,0xc8
  40c3ea:	jb     0x40c3a8
  40c3ec:	aaa    
  40c3ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3ee:	leave  
  40c3ef:	add    DWORD PTR [edx-0x4],0xffffff8f
  40c3f3:	sbb    al,bh
  40c3f5:	mov    eax,ds:0x68e0b90f
  40c3fa:	mov    ebx,0xf62b38f4
  40c3ff:	fadd   QWORD PTR [ebp-0x49]
  40c402:	xchg   ebp,eax
  40c403:	pop    ebx
  40c404:	test   BYTE PTR [edx],al
  40c406:	ins    BYTE PTR es:[edi],dx
  40c407:	lds    ecx,FWORD PTR [ebx+0x124c51d2]
  40c40d:	jo     0x40c445
  40c40f:	in     eax,0x6b
  40c411:	not    BYTE PTR [edi-0x13df3403]
  40c417:	or     BYTE PTR [ebx+0x37b5c461],bh
  40c41d:	stos   BYTE PTR es:[edi],al
  40c41e:	cmc    
  40c41f:	imul   ebx,DWORD PTR ds:0xeb2bab85,0x13
  40c426:	ins    BYTE PTR es:[edi],dx
  40c427:	daa    
  40c428:	dec    ebp
  40c429:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c42a:	jbe    0x40c3c9
  40c42c:	or     BYTE PTR [edi-0x74],al
  40c42f:	rol    DWORD PTR [ecx-0x19],1
  40c432:	pop    ebx
  40c433:	mov    dh,0xc5
  40c435:	adc    al,0x88
  40c437:	mov    al,0xca
  40c439:	sub    eax,0x97861b99
  40c43e:	popf   
  40c43f:	dec    esi
  40c440:	ficom  DWORD PTR [ebx]
  40c442:	pop    esp
  40c443:	dec    ecx
  40c444:	inc    eax
  40c445:	mov    esp,0x3586573e
  40c44a:	fnstcw WORD PTR [ebx-0x7c8084e8]
  40c450:	jns    0xf46238f4
  40c456:	cmp    BYTE PTR [eax+0x53f4ab4f],cl
  40c45c:	retf   
  40c45d:	in     al,0xbf
  40c45f:	pop    ebp
  40c460:	cwde   
  40c461:	retf   
  40c462:	add    ch,dl
  40c464:	dec    ebp
  40c465:	mov    ch,0x96
  40c467:	push   eax
  40c468:	jl     0x40c434
  40c46a:	inc    edi
  40c46b:	add    ch,BYTE PTR ds:0x5ad8989c
  40c471:	popf   
  40c472:	xchg   esp,eax
  40c473:	sub    ax,0x13bc
  40c477:	into   
  40c478:	ins    DWORD PTR es:[edi],dx
  40c479:	mov    bh,0xb0
  40c47b:	xor    esp,DWORD PTR [ebp+0x75abc7db]
  40c481:	inc    ebp
  40c482:	xchg   DWORD PTR [edx],esp
  40c484:	xor    al,0xe3
  40c486:	cmp    BYTE PTR [ebp+0x57],dl
  40c489:	dec    eax
  40c48a:	push   ss
  40c48b:	out    0x78,al
  40c48d:	stos   DWORD PTR es:[edi],eax
  40c48e:	and    ebx,esi
  40c490:	es inc esp
  40c492:	js     0x40c4c6
  40c494:	cmp    BYTE PTR [edx],0xa7
  40c497:	jl     0x40c463
  40c499:	push   ss
  40c49a:	mov    al,ds:0x7f60a3b1
  40c49f:	sub    ebx,DWORD PTR ds:0xc8ed7c52
  40c4a5:	aas    
  40c4a6:	adc    eax,0x589e22d
  40c4ab:	leave  
  40c4ac:	fiadd  DWORD PTR [esi-0x4d]
  40c4af:	sbb    eax,esi
  40c4b1:	sub    BYTE PTR [edx+ebp*8],0x71
  40c4b5:	retf   
  40c4b6:	inc    esi
  40c4b7:	or     dl,dh
  40c4b9:	jno    0x40c4d6
  40c4bb:	push   edi
  40c4bc:	xor    BYTE PTR fs:[esi+eax*4-0x719b0de3],0x11
  40c4c5:	xlat   BYTE PTR ds:[ebx]
  40c4c6:	cdq    
  40c4c7:	xor    bl,BYTE PTR [ebp+0x30]
  40c4ca:	xor    al,0xd0
  40c4cc:	cli    
  40c4cd:	in     al,0x1
  40c4cf:	adc    eax,0xa7bcca6a
  40c4d4:	aas    
  40c4d5:	xchg   BYTE PTR [edx],dl
  40c4d7:	pusha  
  40c4d8:	hlt    
  40c4d9:	jns    0x40c4e1
  40c4db:	pop    ds
  40c4dc:	ss in  eax,0x2e
  40c4df:	xor    al,0x43
  40c4e1:	(bad)  
  40c4e2:	jne    0x40c49a
  40c4e4:	mov    esi,0xdbc560c4
  40c4e9:	push   0xc8e656d1
  40c4ee:	push   esp
  40c4ef:	adc    ebp,DWORD PTR [ecx+0x79]
  40c4f2:	dec    esi
  40c4f3:	xchg   edx,eax
  40c4f4:	add    DWORD PTR ds:0xdda7a433,ebp
  40c4fa:	add    al,0x72
  40c4fc:	mov    BYTE PTR [ebx+eax*8-0x7a],ch
  40c500:	xor    al,bh
  40c502:	pop    esp
  40c503:	lock sbb ebx,DWORD PTR [eax+ebx*8+0x2]
  40c508:	mov    ecx,0xa84176e1
  40c50d:	push   ds
  40c50e:	test   DWORD PTR [esi],ecx
  40c510:	adc    eax,0xc22f0a28
  40c515:	mov    gs,WORD PTR [edx+0x6de54397]
  40c51b:	mov    bl,BYTE PTR [edx-0x7]
  40c51e:	leave  
  40c51f:	pop    eax
  40c520:	or     al,0x40
  40c522:	jb     0x40c53a
  40c524:	js     0x40c52e
  40c526:	adc    esi,edx
  40c528:	popf   
  40c529:	fwait
  40c52a:	aaa    
  40c52b:	ja     0x40c580
  40c52d:	data16 mov bh,0xc0
  40c530:	int3   
  40c531:	mov    al,ds:0x5dfbdb6b
  40c536:	out    dx,al
  40c537:	dec    edx
  40c538:	fisttp WORD PTR [edi+edi*4-0x3a6170f5]
  40c53f:	mov    al,ds:0x6ca89f58
  40c544:	pop    ss
  40c545:	sahf   
  40c546:	xchg   ebx,eax
  40c547:	cmp    eax,ebp
  40c549:	movq   mm0,QWORD PTR [ebp+0x70aea210]
  40c550:	mov    cl,BYTE PTR [edx-0x4c67d2e5]
  40c556:	xor    bh,cl
  40c558:	push   cs
  40c559:	push   0x7f057038
  40c55e:	pop    edi
  40c55f:	mov    dl,0x2a
  40c561:	push   ds
  40c562:	cld    
  40c563:	mov    ecx,0xbe3301d8
  40c568:	inc    edx
  40c569:	mov    ds:0x3defcd67,eax
  40c56e:	or     edi,edi
  40c570:	cmp    bh,ah
  40c572:	xchg   esp,eax
  40c573:	xchg   esp,eax
  40c574:	out    0xe4,eax
  40c576:	in     eax,dx
  40c577:	aas    
  40c578:	push   esp
  40c579:	pop    esp
  40c57a:	mov    ds:0xcb71b18b,al
  40c57f:	xchg   ebp,eax
  40c580:	add    ebx,DWORD PTR [ebx+0x7437619b]
  40c586:	or     BYTE PTR [eax-0x776cb2e0],ch
  40c58c:	xor    DWORD PTR [edi+0x4b],ebx
  40c58f:	inc    edi
  40c590:	inc    ebp
  40c591:	ret    0x5de5
  40c594:	xor    ecx,DWORD PTR [eax-0x7500e784]
  40c59a:	lahf   
  40c59b:	shl    BYTE PTR ds:0x507986fc,1
  40c5a1:	xor    esi,DWORD PTR [ebx-0x36]
  40c5a4:	(bad)  
  40c5a5:	pop    edx
  40c5a6:	ror    BYTE PTR [esi-0x5a1f15cd],0x99
  40c5ad:	in     al,0xb6
  40c5af:	call   0x4bfb07cb
  40c5b4:	jle    0x40c621
  40c5b6:	(bad)  
  40c5b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5b8:	mov    edi,0x165e6833
  40c5bd:	adc    eax,0x9b26119d
  40c5c2:	push   ecx
  40c5c3:	jmp    ebx
  40c5c5:	jno    0x40c59d
  40c5c7:	stc    
  40c5c8:	jp     0x40c5a0
  40c5ca:	add    eax,0x500c7c01
  40c5cf:	sub    eax,0x34a4884c
  40c5d4:	mov    dh,0xf0
  40c5d6:	fwait
  40c5d7:	shl    DWORD PTR [esi+0x7d],cl
  40c5da:	mov    ebp,0x3335f9ca
  40c5df:	mov    ds:0xe3c61048,al
  40c5e4:	adc    eax,0xc001267
  40c5e9:	inc    edx
  40c5ea:	push   ebp
  40c5eb:	es scas eax,DWORD PTR es:[edi]
  40c5ed:	cmp    ebp,DWORD PTR [edi]
  40c5ef:	mov    eax,0xb980d8e3
  40c5f4:	add    DWORD PTR [esi],0xffffffd7
  40c5f7:	cmp    cl,BYTE PTR [ecx+0x26211ef5]
  40c5fd:	and    edi,esp
  40c5ff:	mov    esp,0xd1ba1ae7
  40c604:	xchg   ebp,eax
  40c605:	xchg   ebp,eax
  40c606:	jae    0x40c645
  40c608:	sbb    dh,BYTE PTR [eax+0x14]
  40c60b:	jle    0x40c686
  40c60d:	jg     0x40c5ba
  40c60f:	fld    QWORD PTR [edi]
  40c611:	sar    BYTE PTR [ebx+eax*1-0xaef3faa],1
  40c618:	add    ch,BYTE PTR [edx+0x6d20c2cb]
  40c61e:	cmc    
  40c61f:	sbb    bl,BYTE PTR [edx-0x6c2f6b39]
  40c625:	sbb    ch,BYTE PTR [ecx+0x3046042d]
  40c62b:	leave  
  40c62c:	mov    ss,WORD PTR [ebp-0x77]
  40c62f:	xchg   ecx,eax
  40c630:	sbb    dh,BYTE PTR [esi+ebx*4+0x26178fe]
  40c637:	jnp    0x40c626
  40c639:	arpl   WORD PTR ds:0x2e60cc25,bx
  40c63f:	add    al,0xbf
  40c641:	sub    BYTE PTR [esi+0x23],ah
  40c644:	mov    edi,0x6c037981
  40c649:	in     eax,0xf5
  40c64b:	add    eax,0xb2a235ea
  40c650:	inc    esp
  40c651:	clc    
  40c652:	mov    ebx,0x96e17746
  40c657:	cmp    al,0x75
  40c659:	or     eax,0x31fc1874
  40c65e:	loopne 0x40c6ba
  40c660:	sub    edx,DWORD PTR [eax-0x236232c8]
  40c666:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c667:	inc    ebx
  40c668:	sbb    esi,edx
  40c66a:	inc    ebx
  40c66b:	call   0x3352:0x29cd4b80
  40c672:	clc    
  40c673:	fidiv  DWORD PTR [edi+0x1]
  40c676:	mov    al,ds:0xd3937678
  40c67b:	daa    
  40c67c:	xor    eax,0x2e14c3e7
  40c681:	dec    edx
  40c682:	repz (bad) 
  40c684:	or     dh,BYTE PTR [ebx+0x67c1266]
  40c68a:	push   0x4c
  40c68c:	inc    ecx
  40c68d:	xlat   BYTE PTR ds:[ebx]
  40c68e:	out    0x13,eax
  40c690:	leave  
  40c691:	(bad)  
  40c692:	sti    
  40c693:	repnz cmp ah,0x78
  40c697:	jmp    0x40c6b7
  40c699:	pushf  
  40c69a:	or     edx,DWORD PTR [esi-0x17506145]
  40c6a0:	fcmove st,st(5)
  40c6a2:	pop    ebx
  40c6a3:	test   eax,0x99423da8
  40c6a8:	mov    cl,0x4c
  40c6aa:	sbb    al,0x2c
  40c6ac:	mov    ch,0x54
  40c6ae:	xor    al,0x53
  40c6b0:	inc    edi
  40c6b1:	das    
  40c6b2:	cmp    al,0x9c
  40c6b4:	js     0x40c663
  40c6b6:	loop   0x40c64f
  40c6b8:	cs inc ebx
  40c6ba:	out    0x1,al
  40c6bc:	ds pop eax
  40c6be:	shl    dh,cl
  40c6c0:	add    eax,0xe588f8dd
  40c6c5:	stc    
  40c6c6:	lods   eax,DWORD PTR ds:[esi]
  40c6c7:	ffree  st(7)
  40c6c9:	inc    ebx
  40c6ca:	test   BYTE PTR [ebx+esi*4-0x2a205d9c],al
  40c6d1:	inc    edi
  40c6d2:	scas   eax,DWORD PTR es:[edi]
  40c6d3:	sub    BYTE PTR [ecx-0x788542dd],0xdc
  40c6da:	int3   
  40c6db:	addr16 call 0xca63:0xf91c193
  40c6e3:	(bad)  
  40c6e5:	mov    dh,0xab
  40c6e7:	sbb    al,0x38
  40c6e9:	jae    0x40c6c4
  40c6eb:	push   ebp
  40c6ec:	jns    0x40c66f
  40c6ee:	sbb    ecx,DWORD PTR [eax]
  40c6f0:	cs cs in al,dx
  40c6f3:	inc    eax
  40c6f4:	mov    eax,0x17d38bb1
  40c6f9:	adc    esi,DWORD PTR [ebx+0x5f]
  40c6fc:	inc    esi
  40c6fd:	adc    BYTE PTR [edx+0x77],0x88
  40c701:	inc    edx
  40c702:	inc    esp
  40c703:	retf   
  40c704:	cmp    edi,DWORD PTR [ecx]
  40c706:	test   al,0xe5
  40c708:	mov    cl,0x20
  40c70a:	mov    cl,0x25
  40c70c:	into   
  40c70d:	popa   
  40c70e:	repz ss gs ret 0xc774
  40c714:	inc    edi
  40c715:	mov    dl,0xed
  40c717:	pop    edx
  40c718:	xor    DWORD PTR [edi-0x71],0xffffffe8
  40c71c:	add    BYTE PTR [edi+0x671c0626],cl
  40c722:	push   esp
  40c723:	xor    edx,ebx
  40c725:	pusha  
  40c726:	rcr    al,1
  40c728:	lods   al,BYTE PTR ds:[esi]
  40c729:	in     al,dx
  40c72a:	cdq    
  40c72b:	out    0x16,al
  40c72d:	inc    eax
  40c72e:	push   edx
  40c72f:	adc    al,0x67
  40c731:	xor    eax,0xbb0aa472
  40c736:	dec    edx
  40c737:	hlt    
  40c738:	pushf  
  40c739:	and    BYTE PTR [esi],dh
  40c73b:	pushf  
  40c73c:	inc    edi
  40c73d:	aaa    
  40c73e:	or     BYTE PTR [ecx-0x62],dh
  40c741:	add    al,0xb5
  40c743:	cli    
  40c744:	and    bl,bl
  40c746:	int    0xac
  40c748:	mov    bh,BYTE PTR [esi]
  40c74a:	xor    DWORD PTR [esp+esi*1],eax
  40c74d:	jo     0x40c790
  40c74f:	xchg   esp,eax
  40c750:	mov    ds:0xe6c415d9,eax
  40c755:	cli    
  40c756:	cmp    esi,DWORD PTR [edx+0x464d9e3e]
  40c75c:	mov    esi,0x3e62de8f
  40c761:	jp     0x40c7c6
  40c763:	call   esp
  40c765:	mov    esi,0x53ef775b
  40c76a:	aad    0x67
  40c76c:	mov    eax,ds:0x3d7b148b
  40c771:	sub    eax,DWORD PTR [ebp-0x1c33b6a0]
  40c777:	dec    edx
  40c778:	mov    ecx,0xf2fa3357
  40c77d:	ds jae 0x40c708
  40c780:	sub    cl,dl
  40c782:	mov    al,0x51
  40c784:	ret    
  40c785:	out    0x59,al
  40c787:	mov    ebx,0x1491b6d3
  40c78c:	lods   eax,DWORD PTR ds:[esi]
  40c78d:	adc    al,BYTE PTR [eax-0x5a26c39c]
  40c793:	icebp  
  40c794:	mov    edi,0x1a7a6e4d
  40c799:	xchg   ebx,eax
  40c79a:	adc    esi,esp
  40c79c:	or     bl,dh
  40c79e:	mov    ds:0x7cd8d814,eax
  40c7a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7a4:	out    0xe8,eax
  40c7a6:	scas   eax,DWORD PTR es:[edi]
  40c7a7:	sahf   
  40c7a8:	mov    eax,ds:0x27a93fe1
  40c7ad:	pop    ss
  40c7ae:	pushf  
  40c7af:	loope  0x40c795
  40c7b1:	pop    edx
  40c7b2:	aam    0xfa
  40c7b4:	and    DWORD PTR [ebx+0x6b14b65c],esp
  40c7ba:	aas    
  40c7bb:	(bad)  
  40c7bc:	addr16 ss ja 0x40c7a9
  40c7c0:	shl    BYTE PTR [edi+0x21],1
  40c7c3:	neg    esp
  40c7c5:	push   edx
  40c7c6:	(bad)  
  40c7c7:	or     eax,0x1c905cbd
  40c7cc:	mov    dh,0x85
  40c7ce:	jmp    0x40c792
  40c7d0:	and    al,0x6f
  40c7d2:	mov    esp,0x53a63a35
  40c7d7:	(bad)  
  40c7d9:	daa    
  40c7da:	inc    ecx
  40c7db:	xchg   edi,eax
  40c7dc:	dec    ebp
  40c7dd:	(bad)  
  40c7de:	es out dx,al
  40c7e0:	mov    ch,0x73
  40c7e2:	out    dx,eax
  40c7e3:	rcl    BYTE PTR [edi],1
  40c7e5:	cs mov esi,DWORD PTR ss:[edi]
  40c7e9:	add    cl,BYTE PTR [esp+eax*2]
  40c7ec:	iret   
  40c7ed:	pop    edi
  40c7ee:	mov    dl,0x68
  40c7f0:	mov    edi,0xbb0004b1
  40c7f5:	xchg   ecx,eax
  40c7f6:	(bad)  
  40c7f8:	adc    eax,DWORD PTR [edi]
  40c7fa:	addr16 inc edi
  40c7fc:	sahf   
  40c7fd:	sub    DWORD PTR [ecx+0x2a96ea6f],ebp
  40c803:	lds    ecx,FWORD PTR [edx+0x53]
  40c806:	dec    ebx
  40c807:	sbb    DWORD PTR [ebp+0x36619c74],0x57c5bff
  40c811:	xchg   edx,eax
  40c812:	outs   dx,BYTE PTR ds:[esi]
  40c813:	ret    
  40c814:	aam    0x68
  40c816:	(bad)  
  40c818:	jecxz  0x40c866
  40c81a:	push   ss
  40c81b:	in     al,dx
  40c81c:	ins    BYTE PTR es:[edi],dx
  40c81d:	cmp    dh,BYTE PTR [esi-0x76]
  40c820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c821:	xchg   ecx,eax
  40c822:	imul   DWORD PTR [ebp+0x50]
  40c825:	dec    esi
  40c826:	pop    es
  40c827:	push   edi
  40c828:	dec    ebp
  40c829:	aaa    
  40c82a:	popf   
  40c82b:	loopne 0x40c7ff
  40c82d:	pusha  
  40c82e:	or     eax,0x8619d06f
  40c833:	rcr    edi,1
  40c835:	dec    edx
  40c836:	jmp    0xfa41:0x9a23252a
  40c83d:	stos   BYTE PTR es:[edi],al
  40c83e:	rcl    BYTE PTR [eax],0x52
  40c841:	dec    edx
  40c842:	cmp    DWORD PTR [edx],ebx
  40c844:	cmp    eax,0xa93a57e6
  40c849:	and    al,0x1b
  40c84b:	xchg   DWORD PTR [esi+0x79],ebx
  40c84e:	jecxz  0x40c888
  40c850:	push   es
  40c851:	ret    
  40c852:	daa    
  40c853:	aam    0xdb
  40c855:	fisttp QWORD PTR [ebx]
  40c857:	mov    ah,0x6c
  40c859:	daa    
  40c85a:	inc    eax
  40c85b:	mov    dh,0xc5
  40c85d:	cmp    BYTE PTR [ebp-0x79],dl
  40c860:	push   ebp
  40c861:	and    bl,BYTE PTR [ecx+0x61]
  40c864:	mov    ebx,0x22a988e6
  40c869:	std    
  40c86a:	mov    cs,WORD PTR [edx]
  40c86c:	repnz nop
  40c86e:	push   ebx
  40c86f:	rcl    BYTE PTR [esp+ebx*1+0x22],0xe6
  40c874:	or     eax,DWORD PTR [eax-0x662c5a68]
  40c87a:	fsub   DWORD PTR [eax-0x71]
  40c87d:	sbb    al,0x48
  40c87f:	(bad)  
  40c880:	cwde   
  40c881:	push   eax
  40c882:	std    
  40c883:	(bad)
  40c887:	leave  
  40c888:	lds    edi,FWORD PTR [edi+0x3e2c6292]
  40c88e:	mov    esp,0x9a3ebe2f
  40c893:	lea    ecx,[ecx]
  40c895:	pusha  
  40c896:	scas   eax,DWORD PTR es:[edi]
  40c897:	inc    esi
  40c898:	cs repnz ss mov dl,0x9e
  40c89d:	sahf   
  40c89e:	stos   DWORD PTR es:[edi],eax
  40c89f:	into   
  40c8a0:	stos   BYTE PTR es:[edi],al
  40c8a1:	out    dx,al
  40c8a2:	ds inc ebx
  40c8a4:	jae    0x40c8d9
  40c8a6:	cli    
  40c8a7:	imul   edx
  40c8a9:	jge    0x40c902
  40c8ab:	xchg   esi,eax
  40c8ac:	call   FWORD PTR [edx-0x6ca1cf9f]
  40c8b2:	test   eax,0x69969478
  40c8b7:	cdq    
  40c8b8:	inc    ecx
  40c8b9:	ror    DWORD PTR [edx+0x30],1
  40c8bc:	add    eax,0xbfaac699
  40c8c1:	cdq    
  40c8c2:	jnp    0x40c87c
  40c8c4:	(bad)  
  40c8c5:	clc    
  40c8c6:	inc    edx
  40c8c7:	rcr    BYTE PTR [ebx+edx*2],0x48
  40c8cb:	xor    edx,ecx
  40c8cd:	lea    eax,[edx+0xe]
  40c8d0:	fs mov dh,0xde
  40c8d3:	je     0x40c947
  40c8d5:	jo     0x40c912
  40c8d7:	fwait
  40c8d8:	adc    al,0x23
  40c8da:	push   ss
  40c8db:	xor    DWORD PTR [edx],ebx
  40c8dd:	in     eax,dx
  40c8de:	cmp    cl,al
  40c8e0:	xchg   BYTE PTR ds:0x7b8a31c5,al
  40c8e6:	(bad)  
  40c8e7:	ds jmp 0xb1d2c5d
  40c8ed:	or     bh,al
  40c8ef:	pop    ss
  40c8f0:	inc    esp
  40c8f1:	push   edx
  40c8f2:	icebp  
  40c8f3:	mov    esi,0x8510e7ce
  40c8f8:	shl    esi,1
  40c8fa:	dec    edx
  40c8fb:	ficomp WORD PTR [eax-0x52]
  40c8fe:	xchg   ebx,eax
  40c8ff:	bound  edi,QWORD PTR ds:0x90dbdd83
  40c905:	xor    bl,BYTE PTR [edx+ebx*8]
  40c908:	mov    cl,0x54
  40c90a:	test   dh,al
  40c90c:	ficomp WORD PTR [esi+edi*1-0x7e]
  40c910:	jecxz  0x40c89b
  40c912:	xchg   edi,eax
  40c913:	push   ds
  40c914:	shl    DWORD PTR [ecx+ecx*8+0x71ab6c97],1
  40c91b:	mov    ecx,0xc86bbe
  40c920:	(bad)  
  40c921:	js     0x40c920
  40c923:	sbb    al,0xb5
  40c925:	mov    eax,ds:0x9dd062b4
  40c92a:	mov    dh,0x40
  40c92c:	mov    dh,0xab
  40c92e:	out    dx,al
  40c92f:	mov    ?,WORD PTR [ecx]
  40c931:	push   esi
  40c932:	push   ebx
  40c933:	cmp    ah,bl
  40c935:	adc    eax,0x4fcc1a2a
  40c93a:	mov    cl,0xb3
  40c93c:	fdivr  QWORD PTR [ebx-0x7a6731b2]
  40c942:	ins    DWORD PTR es:[edi],dx
  40c943:	push   es
  40c944:	outs   dx,BYTE PTR ds:[esi]
  40c945:	or     ah,dh
  40c947:	retf   
  40c948:	mov    fs:0xfdb7da27,eax
  40c94e:	cmp    DWORD PTR [esi],0xfa680ad1
  40c954:	sub    BYTE PTR [edx],ch
  40c956:	adc    eax,esp
  40c958:	scas   al,BYTE PTR es:[edi]
  40c959:	mov    bh,0xef
  40c95b:	daa    
  40c95c:	std    
  40c95d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c95e:	add    BYTE PTR [ecx+0x74],bh
  40c961:	push   ecx
  40c962:	imul   DWORD PTR [ebx+esi*1+0x1b38dc67]
  40c969:	pop    ds
  40c96a:	mov    ecx,0x1a0f4af1
  40c96f:	sbb    DWORD PTR [edi-0x2c1295ff],0xdd92b308
  40c979:	xor    eax,0x34b26fd0
  40c97e:	sbb    al,0xcf
  40c980:	aas    
  40c981:	mov    eax,ds:0x1d2ed8ac
  40c986:	pop    edi
  40c987:	fdiv   st(3),st
  40c989:	rol    esi,0x81
  40c98c:	repnz xor BYTE PTR [ebp+0x3d],ah
  40c990:	push   0xfe2c2ea6
  40c995:	shl    al,1
  40c997:	daa    
  40c998:	popf   
  40c999:	pop    edx
  40c99a:	xchg   DWORD PTR [ecx-0x53],esi
  40c99d:	in     al,0xb
  40c99f:	daa    
  40c9a0:	and    ebp,DWORD PTR [edx-0x36]
  40c9a3:	jns    0x40c99b
  40c9a5:	(bad)  
  40c9a6:	inc    edx
  40c9a7:	fwait
  40c9a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9a9:	fild   WORD PTR [esi]
  40c9ab:	jle    0x40c959
  40c9ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9ae:	pop    eax
  40c9af:	jecxz  0x40c9ff
  40c9b1:	push   esi
  40c9b2:	push   edi
  40c9b3:	add    DWORD PTR [ebp+0x71],edx
  40c9b6:	stc    
  40c9b7:	mov    ds:0x74e8811f,eax
  40c9bc:	(bad)
  40c9c0:	pop    edi
  40c9c1:	and    al,0xea
  40c9c3:	pop    ebp
  40c9c4:	mov    al,0x31
  40c9c6:	cmp    al,0xdf
  40c9c8:	pshufw mm6,QWORD PTR [esi+0x22a10f7c],0xbc
  40c9d0:	cmp    BYTE PTR [eax-0x70],al
  40c9d3:	mov    ah,0x2a
  40c9d5:	popa   
  40c9d6:	jl     0x40c9e5
  40c9d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9d9:	push   edx
  40c9da:	loop   0x40c971
  40c9dc:	pop    ecx
  40c9dd:	or     eax,0x64afe32c
  40c9e2:	and    ch,BYTE PTR [ecx+0x7b]
  40c9e5:	mov    bl,0x2b
  40c9e7:	mov    bl,0xee
  40c9e9:	shl    DWORD PTR [esi-0x47],1
  40c9ec:	fs jae 0x40ca14
  40c9ef:	(bad)  
  40c9f0:	clc    
  40c9f1:	loope  0x40c996
  40c9f3:	pop    edx
  40c9f4:	inc    esp
  40c9f5:	or     ebp,edx
  40c9f7:	jnp    0x40c9c5
  40c9f9:	icebp  
  40c9fa:	sbb    eax,0xd4a550e5
  40c9ff:	(bad)
  40ca02:	mov    cl,0x93
  40ca04:	inc    esi
  40ca05:	enter  0x91e5,0x5a
  40ca09:	pop    es
  40ca0a:	mov    gs,WORD PTR [edx+0x4551efbe]
  40ca10:	popf   
  40ca11:	mov    es,WORD PTR [eax-0x35]
  40ca14:	dec    ebp
  40ca15:	jmp    0xf3b040ac
  40ca1a:	or     al,0x2a
  40ca1c:	sub    bl,BYTE PTR [edx-0x16]
  40ca1f:	ds unpcklps xmm6,xmm0
  40ca23:	mov    ch,0x83
  40ca25:	stos   BYTE PTR es:[edi],al
  40ca26:	adc    eax,0xa2e6afbb
  40ca2b:	add    BYTE PTR [ebx+0x4c8f586c],0x6b
  40ca32:	shr    dl,1
  40ca34:	dec    esi
  40ca35:	dec    eax
  40ca36:	mov    eax,ds:0x3ec0bafc
  40ca3b:	sub    al,0xf8
  40ca3d:	mov    DWORD PTR [ecx-0x6e6972ff],esp
  40ca43:	(bad)
  40ca47:	xlat   BYTE PTR ds:[ebx]
  40ca48:	push   0x74
  40ca4a:	lock lea esp,[ecx-0x21ddd56c]
  40ca51:	xchg   ecx,eax
  40ca52:	adc    ebp,esi
  40ca54:	xchg   esp,eax
  40ca55:	(bad)  
  40ca56:	mov    dl,dh
  40ca58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca59:	repnz pop edx
  40ca5b:	loopne 0x40c9fc
  40ca5d:	ja     0x40ca03
  40ca5f:	sbb    edx,edi
  40ca61:	add    al,0x9a
  40ca63:	das    
  40ca64:	cmp    esi,DWORD PTR [edx+0x2c]
  40ca67:	ds push es
  40ca69:	test   al,0xe
  40ca6b:	cmp    DWORD PTR [esi-0x48],0x7769ca2d
  40ca72:	popf   
  40ca73:	in     eax,dx
  40ca74:	imul   edx,DWORD PTR [ecx+0x7a43a672],0x9c7d8746
  40ca7e:	loopne 0x40ca82
  40ca80:	jno    0x40cad1
  40ca82:	inc    eax
  40ca83:	push   ebx
  40ca84:	mov    ebx,0xd29db39f
  40ca89:	dec    ecx
  40ca8a:	ins    DWORD PTR es:[edi],dx
  40ca8b:	mov    esi,0xc216774f
  40ca90:	test   al,0xdd
  40ca92:	add    DWORD PTR [esi+0x9],eax
  40ca95:	mov    ah,0x33
  40ca97:	ins    BYTE PTR es:[edi],dx
  40ca98:	out    dx,al
  40ca99:	inc    ecx
  40ca9a:	adc    eax,0xd4a9e613
  40ca9f:	pop    ebx
  40caa0:	dec    edi
  40caa1:	mov    cl,0x19
  40caa3:	dec    edi
  40caa4:	mov    dl,0x20
  40caa6:	(bad)  
  40caa7:	or     bl,bh
  40caa9:	xchg   esi,eax
  40caaa:	ss nop
  40caac:	sub    BYTE PTR [edi],bh
  40caae:	jmp    0x6409025c
  40cab3:	aam    0x1e
  40cab5:	push   es
  40cab6:	xor    esi,DWORD PTR [ecx]
  40cab8:	stc    
  40cab9:	scas   al,BYTE PTR es:[edi]
  40caba:	pusha  
  40cabb:	aaa    
  40cabc:	cwde   
  40cabd:	sub    edi,DWORD PTR [edi-0x4f]
  40cac0:	pop    edi
  40cac1:	xlat   BYTE PTR ds:[ebx]
  40cac2:	mov    edx,0x2228a84d
  40cac7:	and    eax,0x58e1f12e
  40cacc:	out    dx,al
  40cacd:	int3   
  40cace:	adc    eax,0x671bcca0
  40cad3:	or     DWORD PTR [ebx-0xa41f6b6],esp
  40cad9:	arpl   WORD PTR [ecx+0x8a75b75],bp
  40cadf:	sub    eax,DWORD PTR [ecx]
  40cae1:	dec    esp
  40cae2:	fidiv  DWORD PTR [edi-0xf]
  40cae5:	pop    eax
  40cae6:	inc    edx
  40cae7:	adc    esi,DWORD PTR [edx]
  40cae9:	inc    ecx
  40caea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40caeb:	fsub   QWORD PTR [eax+0x4ca9bfee]
  40caf1:	sbb    ah,cl
  40caf3:	adc    dh,bh
  40caf5:	das    
  40caf6:	xchg   esp,eax
  40caf7:	inc    edx
  40caf8:	sub    DWORD PTR [ecx+edi*4-0x5e],edx
  40cafc:	and    esi,esi
  40cafe:	inc    esp
  40caff:	fld    QWORD PTR es:[esi]
  40cb02:	or     ecx,DWORD PTR [edx-0x73]
  40cb05:	fadd   QWORD PTR [eax-0x469ffc02]
  40cb0b:	mov    ah,0x5b
  40cb0d:	mov    ds:0x8cf92e61,eax
  40cb12:	mov    edx,0x50a522b6
  40cb17:	test   DWORD PTR [edi+0x5615f89e],esi
  40cb1d:	jle    0x40caf8
  40cb1f:	int3   
  40cb20:	in     al,0x23
  40cb22:	out    dx,al
  40cb23:	jge    0x40cb0b
  40cb25:	xchg   DWORD PTR [edi-0x27],ecx
  40cb28:	jo     0x40cb61
  40cb2a:	xor    ebx,edx
  40cb2c:	repz sar esi,0x24
  40cb30:	pop    ss
  40cb31:	leave  
  40cb32:	aas    
  40cb33:	in     eax,0x69
  40cb35:	leave  
  40cb36:	add    esi,DWORD PTR [edi]
  40cb38:	rcr    DWORD PTR [esi],1
  40cb3a:	jnp    0x40cadd
  40cb3c:	xchg   edi,eax
  40cb3d:	dec    ebp
  40cb3e:	mov    ecx,0x9663e440
  40cb43:	pop    ebx
  40cb44:	shl    BYTE PTR [edi+0x37434275],cl
  40cb4a:	sti    
  40cb4b:	(bad)  
  40cb4c:	mov    ds:0x298dbc61,al
  40cb51:	xor    ch,al
  40cb53:	in     al,dx
  40cb54:	jecxz  0x40cb27
  40cb56:	int3   
  40cb57:	pop    edi
  40cb58:	lea    ecx,[edx-0x59]
  40cb5b:	xor    cl,BYTE PTR [eax+0x68]
  40cb5e:	repz xor ebp,DWORD PTR [eax-0x1c]
  40cb62:	push   eax
  40cb63:	into   
  40cb64:	jne    0x40cb29
  40cb66:	repnz add DWORD PTR [ecx+0x77],edi
  40cb6a:	push   ebx
  40cb6b:	sub    edi,DWORD PTR [ebp+0xc]
  40cb6e:	int    0x7c
  40cb70:	mov    edi,0xf2f4abd9
  40cb75:	push   es
  40cb76:	inc    edx
  40cb78:	or     al,0xff
  40cb7a:	and    edx,DWORD PTR [esi]
  40cb7c:	add    eax,0x97ed8bd3
  40cb81:	adc    DWORD PTR [eax+0x4e],eax
  40cb84:	iret   
  40cb85:	retf   
  40cb86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb87:	or     eax,0xe6879209
  40cb8c:	(bad)  
  40cb8e:	call   0x3f2:0x23096f9d
  40cb95:	pop    ds
  40cb96:	add    BYTE PTR [esi],al
  40cb98:	int    0x2c
  40cb9a:	pop    ecx
  40cb9b:	push   cs
  40cb9c:	push   cs
  40cb9d:	data16 sahf 
  40cb9f:	add    esp,DWORD PTR [eax]
  40cba1:	loope  0x40cb78
  40cba3:	xlat   BYTE PTR ds:[ebx]
  40cba4:	jns    0x40cbd7
  40cba6:	jnp    0x40cbf9
  40cba8:	int    0xce
  40cbaa:	ja     0x40cbe8
  40cbac:	ret    
  40cbad:	fstp   DWORD PTR [ebp-0x7d]
  40cbb0:	nop
  40cbb1:	mov    dl,0x9a
  40cbb3:	jne    0x40cb7d
  40cbb5:	or     edx,DWORD PTR [edx+0x63]
  40cbb8:	test   eax,0xeedcff1b
  40cbbd:	push   edi
  40cbbe:	sub    bh,BYTE PTR [edi+0x4c62477c]
  40cbc4:	pop    es
  40cbc5:	mov    edi,0x1adf8532
  40cbca:	rcr    ebp,cl
  40cbcc:	les    edi,FWORD PTR [edi-0x5c4100a1]
  40cbd2:	cmp    ebx,DWORD PTR [ecx-0x5503f1fe]
  40cbd8:	adc    DWORD PTR ds:0x5c595334,esi
  40cbde:	jl     0x40cc07
  40cbe0:	jno    0x40cc3b
  40cbe2:	(bad)  
  40cbe3:	lds    edi,FWORD PTR [eiz*4+0x3f4edc4f]
  40cbea:	mov    eax,0x7e04ea4e
  40cbef:	iret   
  40cbf0:	ins    BYTE PTR es:[edi],dx
  40cbf1:	push   es
  40cbf2:	lea    edx,[esi]
  40cbf4:	xchg   ebp,eax
  40cbf5:	mov    ah,0x4
  40cbf7:	xor    eax,0x9689c47f
  40cbfc:	xchg   esi,eax
  40cbfd:	scas   al,BYTE PTR es:[edi]
  40cbfe:	test   DWORD PTR [ebp+0x357064f3],esp
  40cc04:	and    esp,ecx
  40cc06:	xor    dl,ah
  40cc08:	retf   
  40cc09:	push   esp
  40cc0a:	xchg   ebx,ebx
  40cc0c:	scas   al,BYTE PTR es:[edi]
  40cc0d:	jg     0x40cbfe
  40cc0f:	inc    edx
  40cc10:	jmp    0x40cbdf
  40cc12:	jmp    0x40cc29
  40cc14:	dec    eax
  40cc15:	push   esi
  40cc16:	inc    eax
  40cc17:	dec    esi
  40cc18:	iret   
  40cc19:	push   ebx
  40cc1a:	sbb    eax,0xc1e4a5af
  40cc1f:	ret    0x1aca
  40cc22:	push   ds
  40cc23:	lods   eax,DWORD PTR ds:[esi]
  40cc24:	call   0x239a7f0b
  40cc29:	adc    DWORD PTR [ebx+ecx*1],ecx
  40cc2c:	fcomp  st(5)
  40cc2e:	inc    ebx
  40cc2f:	out    dx,eax
  40cc30:	cmp    ecx,DWORD PTR [edx+0x15a9f726]
  40cc36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc37:	inc    ecx
  40cc38:	sbb    esp,eax
  40cc3a:	frstor [esi]
  40cc3c:	arpl   di,di
  40cc3e:	cmp    eax,0x42a62ea2
  40cc43:	mov    ds:0x63ca7055,al
  40cc48:	in     al,dx
  40cc49:	add    DWORD PTR [edx-0x63],edx
  40cc4c:	js     0x40cc5e
  40cc4e:	and    BYTE PTR [ebx+ecx*4+0x1a],ch
  40cc52:	xchg   esi,eax
  40cc53:	sub    DWORD PTR [edx],0xffffffca
  40cc56:	cdq    
  40cc57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc58:	ja     0x40cbfa
  40cc5a:	adc    DWORD PTR [ebp+0x3c],ecx
  40cc5d:	jmp    0xf148:0xc73b14d3
  40cc64:	in     eax,dx
  40cc65:	jp     0x40cc87
  40cc67:	xchg   ecx,eax
  40cc68:	scas   al,BYTE PTR es:[edi]
  40cc69:	pmaxub mm5,QWORD PTR [edx]
  40cc6c:	and    eax,DWORD PTR [edx+0x10494733]
  40cc72:	sbb    BYTE PTR [ecx+0x47],0x3e
  40cc76:	mov    cl,0x6a
  40cc78:	aam    0x47
  40cc7a:	pop    edx
  40cc7b:	mov    dl,0xca
  40cc7d:	ins    DWORD PTR es:[edi],dx
  40cc7e:	dec    esi
  40cc7f:	sub    eax,DWORD PTR [edx]
  40cc81:	pop    di
  40cc83:	jo     0x40cc8e
  40cc85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc86:	jmp    0x40cc5a
  40cc88:	jl     0x40cc94
  40cc8a:	clc    
  40cc8b:	pop    ds
  40cc8c:	pavgb  mm3,QWORD PTR [esp+eax*4+0x31ce02f1]
  40cc94:	mov    edx,DWORD PTR [ecx]
  40cc96:	out    dx,eax
  40cc97:	mov    ds:0x2b5c1e3a,al
  40cc9c:	cld    
  40cc9d:	jge    0x40ccab
  40cc9f:	adc    eax,0x664266f
  40cca4:	je     0x40cd0b
  40cca6:	mov    bh,0x8b
  40cca8:	clc    
  40cca9:	sub    bh,BYTE PTR [edx]
  40ccab:	inc    esp
  40ccac:	pop    esp
  40ccad:	xchg   edi,eax
  40ccae:	pop    esp
  40ccaf:	push   edi
  40ccb0:	clc    
  40ccb1:	push   es
  40ccb2:	push   ebp
  40ccb3:	jp     0x40ccda
  40ccb5:	pop    es
  40ccb6:	popf   
  40ccb7:	scas   eax,DWORD PTR es:[edi]
  40ccb8:	jge    0x40cc61
  40ccba:	scas   al,BYTE PTR es:[edi]
  40ccbb:	cmp    eax,0x6042cf91
  40ccc0:	scas   eax,DWORD PTR es:[edi]
  40ccc1:	push   ds
  40ccc2:	bound  ebx,QWORD PTR [eax]
  40ccc4:	mov    edi,DWORD PTR [esi+0x6cdae49a]
  40ccca:	leave  
  40cccb:	ja     0x40cd14
  40cccd:	sbb    edi,edx
  40cccf:	aas    
  40ccd0:	pop    edi
  40ccd1:	xchg   ebp,eax
  40ccd2:	xchg   DWORD PTR [esi+edi*2+0x2205773c],esp
  40ccd9:	adc    esp,esi
  40ccdb:	push   edx
  40ccdc:	adc    DWORD PTR [edx+0x60],ebp
  40ccdf:	dec    esi
  40cce0:	cld    
  40cce1:	sbb    BYTE PTR [esi+ebp*8+0x44aab752],cl
  40cce8:	mov    al,ds:0xa077e735
  40cced:	xchg   DWORD PTR [eax],ebp
  40ccef:	out    dx,eax
  40ccf0:	pop    esi
  40ccf1:	inc    ebx
  40ccf2:	xor    al,0x74
  40ccf4:	rol    DWORD PTR [edi+0x7e],0xbb
  40ccf8:	sbb    eax,0x24544e80
  40ccfd:	leave  
  40ccfe:	xchg   bl,bl
  40cd00:	inc    ebp
  40cd01:	mov    ch,0x5d
  40cd03:	and    cl,BYTE PTR [edi]
  40cd05:	cdq    
  40cd06:	fwait
  40cd07:	cs push eax
  40cd09:	mov    ebx,DWORD PTR [eax-0x2b]
  40cd0c:	pop    eax
  40cd0d:	imul   BYTE PTR [ecx+0x3f76fb0d]
  40cd13:	sub    eax,0x5a4d139c
  40cd18:	stc    
  40cd19:	jmp    DWORD PTR [esi]
  40cd1b:	arpl   di,sp
  40cd1d:	xlat   BYTE PTR ds:[ebx]
  40cd1e:	xchg   esp,eax
  40cd1f:	mov    esp,0xf128868d
  40cd24:	adc    esp,DWORD PTR [ecx+eax*8+0x30]
  40cd28:	xor    eax,0xdb851712
  40cd2d:	or     eax,0x1ed38a85
  40cd32:	lock in al,0x4e
  40cd35:	jo     0x40ccf7
  40cd37:	aad    0xc
  40cd39:	inc    eax
  40cd3a:	jnp    0x40cd5b
  40cd3c:	pop    ss
  40cd3d:	mov    DWORD PTR [ebx-0x2f011f4e],eax
  40cd43:	lds    edx,FWORD PTR [esi]
  40cd45:	add    edi,DWORD PTR [edx+0x2c]
  40cd48:	push   0x58
  40cd4a:	mov    bl,0xba
  40cd4c:	cmp    eax,0xb41ed487
  40cd51:	and    cl,BYTE PTR [ecx-0x31]
  40cd54:	xchg   esi,eax
  40cd55:	cmp    al,0xf8
  40cd57:	inc    edi
  40cd58:	inc    eax
  40cd59:	jp     0x40cda4
  40cd5b:	sub    DWORD PTR [ecx-0x51],eax
  40cd5e:	jl     0x40cdad
  40cd60:	adc    al,al
  40cd62:	ds add ebx,esi
  40cd65:	out    0x7c,al
  40cd67:	and    al,0x8f
  40cd69:	xchg   esp,eax
  40cd6a:	dec    ebp
  40cd6b:	sbb    DWORD PTR ds:0x85cdcfd5,ecx
  40cd71:	xchg   BYTE PTR [esi],ah
  40cd73:	and    DWORD PTR [eax+0x6],ebp
  40cd76:	div    dl
  40cd78:	and    al,BYTE PTR [ebp+0x50]
  40cd7b:	or     dh,BYTE PTR [ebp+0xc324614]
  40cd81:	pop    ecx
  40cd82:	cs dec ecx
  40cd84:	pop    edi
  40cd85:	sub    eax,0x73e7e7e9
  40cd8a:	jnp    0x40cdf7
  40cd8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd8d:	or     edx,esp
  40cd8f:	or     DWORD PTR [ebp+0x54],edi
  40cd92:	and    BYTE PTR [ecx-0x6a4d1a21],bl
  40cd98:	cmc    
  40cd99:	dec    edi
  40cd9a:	fcom   QWORD PTR [ebx+0x26b8f6f0]
  40cda0:	sub    eax,0x4e58d537
  40cda5:	icebp  
  40cda6:	pop    ss
  40cda7:	inc    edi
  40cda8:	popf   
  40cda9:	push   es
  40cdaa:	add    ah,0xf2
  40cdad:	pop    esp
  40cdae:	dec    ebp
  40cdaf:	jo     0x40cd6a
  40cdb1:	adc    eax,0x7025bd8d
  40cdb6:	into   
  40cdb7:	ficomp WORD PTR [ebx]
  40cdb9:	jns    0x40cd8b
  40cdbb:	stc    
  40cdbc:	js     0x40cdc3
  40cdbe:	clc    
  40cdbf:	inc    esi
  40cdc0:	retf   0x3c8f
  40cdc3:	push   ds
  40cdc4:	mov    edi,0xcfc360f3
  40cdc9:	and    al,dl
  40cdcb:	fistp  WORD PTR [edx+0x77]
  40cdce:	je     0x40cdc5
  40cdd0:	sti    
  40cdd1:	and    dh,BYTE PTR [edx]
  40cdd3:	sub    DWORD PTR [edx-0x70b98c5d],eax
  40cdd9:	aaa    
  40cdda:	xchg   BYTE PTR [edx+0x7a],dh
  40cddd:	ror    DWORD PTR [ebx+0xc574942],1
  40cde3:	cmp    al,0x4b
  40cde5:	add    DWORD PTR [edi+0x4c4dc38d],edi
  40cdeb:	push   ebx
  40cdec:	sub    eax,0x7fb757e4
  40cdf1:	mov    ebp,0xe8423692
  40cdf6:	aas    
  40cdf7:	xor    DWORD PTR [esi-0x1d6c0c8e],ecx
  40cdfd:	rol    DWORD PTR [eax-0x2db83e4],1
  40ce03:	sub    al,0xda
  40ce05:	rcr    DWORD PTR [ecx-0x6bfd844c],cl
  40ce0b:	jno    0x40cdd7
  40ce0d:	jmp    0x6aec:0xc0fa98f0
  40ce14:	(bad)  
  40ce15:	je     0x40ce14
  40ce17:	into   
  40ce18:	jmp    0x585b292d
  40ce1d:	out    dx,eax
  40ce1e:	pop    edx
  40ce1f:	or     eax,0xdc81f1ec
  40ce24:	das    
  40ce25:	ja     0x40ce72
  40ce27:	push   ds
  40ce28:	pop    ebx
  40ce29:	cmp    edx,edi
  40ce2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce2c:	dec    ecx
  40ce2d:	ja     0x40ce10
  40ce2f:	dec    ebx
  40ce30:	shl    DWORD PTR [ebp-0x400f36a1],0x59
  40ce37:	mov    edi,0xbeb190bb
  40ce3c:	push   0x1953d951
  40ce41:	test   DWORD PTR [ecx+0x48ba82ae],0xf74a4ec1
  40ce4b:	add    al,0x93
  40ce4d:	scas   al,BYTE PTR es:[edi]
  40ce4e:	fdivr  st(7),st
  40ce50:	mov    edi,esp
  40ce52:	and    al,0x12
  40ce54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce55:	mov    cl,0x47
  40ce57:	out    0xd,eax
  40ce59:	xchg   edx,eax
  40ce5a:	iret   
  40ce5b:	xchg   esp,eax
  40ce5c:	xor    DWORD PTR [ecx+0x40b323c1],edx
  40ce62:	(bad)  
  40ce63:	jno    0x40ceb8
  40ce65:	inc    ebp
  40ce66:	fwait
  40ce67:	call   0x220c:0x6c3c911b
  40ce6e:	sub    bl,BYTE PTR [ebx]
  40ce70:	std    
  40ce71:	and    eax,0xc1d1f863
  40ce76:	fisub  DWORD PTR [edi-0x43ed0459]
  40ce7c:	lods   eax,DWORD PTR ds:[esi]
  40ce7d:	inc    ecx
  40ce7e:	inc    edx
  40ce7f:	retf   
  40ce80:	xor    esp,DWORD PTR [edi-0x2f9dbcb1]
  40ce86:	call   DWORD PTR [ebp-0x42]
  40ce89:	mov    ah,0xed
  40ce8b:	pop    esp
  40ce8c:	push   eax
  40ce8d:	outs   dx,DWORD PTR ds:[esi]
  40ce8e:	or     al,0x11
  40ce90:	push   edx
  40ce91:	lods   eax,DWORD PTR ds:[esi]
  40ce92:	add    BYTE PTR [edi],bl
  40ce94:	dec    esi
  40ce95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce96:	cmp    al,0xf4
  40ce98:	jno    0x40ce2b
  40ce9a:	inc    ebx
  40ce9b:	add    DWORD PTR [ebx],edx
  40ce9d:	aaa    
  40ce9e:	mov    ch,0x2
  40cea0:	mov    ebx,0xaea9bade
  40cea5:	cwde   
  40cea6:	cmp    al,0x9
  40cea8:	dec    edi
  40cea9:	sub    BYTE PTR fs:[esi+0x325b10cb],0xc
  40ceb1:	mov    al,0xba
  40ceb3:	scas   al,BYTE PTR es:[edi]
  40ceb4:	mov    eax,ds:0xdf297cf6
  40ceb9:	adc    DWORD PTR [edx+0x4e69ef99],0x14
  40cec0:	jmp    0xe366:0xe2044806
  40cec7:	int3   
  40cec8:	jg     0x40ceb3
  40ceca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cecb:	adc    BYTE PTR [edx+0x2bc48dbe],cl
  40ced1:	call   0xf4b6dd13
  40ced6:	sbb    dl,BYTE PTR [ebx+0x75e609ef]
  40cedc:	in     eax,dx
  40cedd:	jmp    0x3a49:0x30132f4e
  40cee4:	jge    0x40cea9
  40cee6:	pop    edx
  40cee7:	sub    bh,BYTE PTR [esp+edi*4-0x34639ffb]
  40ceee:	jo     0x40cf33
  40cef0:	in     al,dx
  40cef1:	repnz lock out dx,eax
  40cef4:	lods   al,BYTE PTR ds:[esi]
  40cef5:	xchg   DWORD PTR [ecx+0x5d],ebp
  40cef8:	xor    ah,bl
  40cefa:	pop    esi
  40cefb:	in     eax,0x69
  40cefd:	xchg   ebx,eax
  40cefe:	mov    al,0xb6
  40cf00:	jns    0x40cee3
  40cf02:	fcom   DWORD PTR [ebp+0x4450c07e]
  40cf08:	aam    0x77
  40cf0a:	jb     0x40cf1d
  40cf0c:	add    bl,BYTE PTR [ecx]
  40cf0e:	repz and BYTE PTR [ebp-0x261b87fc],dl
  40cf15:	inc    ebp
  40cf16:	nop
  40cf17:	fmul   QWORD PTR [edi+0x70]
  40cf1a:	out    0x60,al
  40cf1c:	dec    ebp
  40cf1d:	stos   DWORD PTR es:[edi],eax
  40cf1e:	dec    esi
  40cf1f:	xor    ebx,DWORD PTR [ebx+0x6d2d40dc]
  40cf25:	mov    ds:0xc29f7ab,al
  40cf2a:	in     eax,0xb8
  40cf2c:	fdivr  QWORD PTR ds:0x16c11be3
  40cf32:	mov    edx,DWORD PTR [edx+0x37]
  40cf35:	mov    WORD PTR [ebp-0x33664bee],es
  40cf3b:	pop    ebx
  40cf3c:	cmp    BYTE PTR [edi+0x5b],0xc8
  40cf40:	inc    eax
  40cf41:	xchg   BYTE PTR [edi],dl
  40cf43:	mov    edi,0x3176f9db
  40cf48:	adc    eax,0x7c33caac
  40cf4d:	cld    
  40cf4e:	pop    edx
  40cf4f:	sub    ax,0x31bb
  40cf53:	ins    BYTE PTR es:[edi],dx
  40cf54:	das    
  40cf55:	dec    ebp
  40cf56:	(bad)  
  40cf57:	(bad)  
  40cf59:	push   edi
  40cf5a:	mul    DWORD PTR [eax]
  40cf5c:	scas   al,BYTE PTR es:[edi]
  40cf5d:	int    0xa5
  40cf5f:	je     0x40cf04
  40cf61:	add    cl,bl
  40cf63:	jmp    0x40cf69
  40cf65:	and    al,0x87
  40cf67:	icebp  
  40cf68:	xchg   ecx,eax
  40cf69:	(bad)  
  40cf6a:	mov    edx,0x8d7265f7
  40cf6f:	push   esi
  40cf70:	ja     0x40cfa0
  40cf72:	push   ds
  40cf73:	ins    BYTE PTR es:[edi],dx
  40cf74:	dec    ecx
  40cf75:	aam    0x18
  40cf77:	in     al,0xca
  40cf79:	nop
  40cf7a:	jle    0x40cf76
  40cf7c:	xor    DWORD PTR [ebx+0xca8aa9d],ebx
  40cf82:	int    0x25
  40cf84:	hlt    
  40cf85:	in     eax,0xd9
  40cf87:	sbb    ebx,DWORD PTR ds:0x6069ff48
  40cf8d:	push   esi
  40cf8e:	out    dx,eax
  40cf8f:	lock stos BYTE PTR es:[edi],al
  40cf91:	inc    ebx
  40cf92:	ins    DWORD PTR es:[edi],dx
  40cf93:	mov    bh,0x74
  40cf95:	xor    esp,DWORD PTR [ebx]
  40cf97:	xlat   BYTE PTR ds:[ebx]
  40cf98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf99:	rcr    esi,cl
  40cf9b:	in     eax,0x3b
  40cf9d:	inc    edx
  40cf9e:	mov    bl,0x6d
  40cfa0:	call   0x45f5:0x5f2a8095
  40cfa7:	dec    ebx
  40cfa8:	ror    BYTE PTR [eax-0x6c],cl
  40cfab:	jno    0x40cf6b
  40cfad:	lods   eax,DWORD PTR ds:[esi]
  40cfae:	xchg   edi,eax
  40cfaf:	bound  ebx,QWORD PTR [esi]
  40cfb1:	sahf   
  40cfb2:	adc    ebx,DWORD PTR [esp+ebp*2]
  40cfb5:	add    al,0xeb
  40cfb7:	js     0x40cf62
  40cfb9:	add    ah,BYTE PTR [ecx+eiz*4]
  40cfbc:	sbb    eax,0x2fd5999
  40cfc1:	rol    DWORD PTR [ebp+0x72],0x94
  40cfc5:	mov    cl,0x1e
  40cfc7:	(bad)  
  40cfc9:	cmp    al,0xd0
  40cfcb:	les    eax,FWORD PTR [eax-0x4bb97072]
  40cfd1:	or     al,0xb2
  40cfd3:	test   al,0x12
  40cfd5:	xchg   DWORD PTR [esi+0x53824c92],edi
  40cfdb:	pop    ds
  40cfdc:	nop
  40cfdd:	int3   
  40cfde:	push   ebp
  40cfdf:	mov    ds:0x73c0e0f3,al
  40cfe4:	mov    ss,WORD PTR [ebx+ecx*1+0x4a0daa0c]
  40cfeb:	inc    esi
  40cfec:	imul   esp,DWORD PTR [ebp-0x11783429],0xffffffa2
  40cff3:	out    dx,eax
  40cff4:	mov    edx,0xdff16814
  40cff9:	mov    ebp,0x645613f0
  40cffe:	xchg   BYTE PTR [ecx-0x1ec3e93d],ah
  40d004:	cmp    BYTE PTR [edi+0x3e2a7ddd],0xa3
  40d00b:	cmp    DWORD PTR [eax+0x79],ebx
  40d00e:	out    dx,al
  40d00f:	or     BYTE PTR ds:0xc220a6dd,cl
  40d015:	out    dx,al
  40d016:	mov    esi,0xd54d291a
  40d01b:	adc    BYTE PTR [eax],bh
  40d01d:	mov    bh,0xe4
  40d01f:	data16 mov dh,0x6a
  40d022:	xchg   ebx,eax
  40d023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d024:	jb     0x40d07b
  40d026:	jg     0x40d07d
  40d028:	add    edx,DWORD PTR [edx+esi*2-0x10]
  40d02c:	add    DWORD PTR [edi+esi*8],edi
  40d02f:	gs mov bl,0x73
  40d032:	pop    es
  40d033:	fwait
  40d034:	inc    esp
  40d035:	pop    ecx
  40d036:	xchg   ecx,eax
  40d037:	push   edi
  40d038:	(bad)  
  40d039:	push   edx
  40d03a:	mov    ch,0xcd
  40d03c:	scas   al,BYTE PTR es:[edi]
  40d03d:	inc    ebp
  40d03e:	jge    0x40d034
  40d040:	sub    al,0x9c
  40d042:	(bad)  
  40d044:	pop    ecx
  40d045:	cdq    
  40d046:	enter  0xc99e,0x21
  40d04a:	loope  0x40cfe6
  40d04c:	shr    BYTE PTR [ecx+0x51079743],1
  40d052:	les    eax,FWORD PTR [edx-0x46826544]
  40d058:	inc    ebx
  40d059:	cmp    bl,BYTE PTR [ecx+0x3688ad5a]
  40d05f:	mov    ds:0x68957b4b,al
  40d064:	into   
  40d065:	out    dx,al
  40d066:	jb     0x40d021
  40d068:	retf   0xda96
  40d06b:	jno    0x40cffb
  40d06d:	mov    ch,0x8a
  40d06f:	add    al,0xcb
  40d071:	sub    eax,0xea55266f
  40d076:	pop    ss
  40d077:	popf   
  40d078:	dec    esp
  40d079:	xchg   DWORD PTR [edi+ecx*2+0x4b],esi
  40d07d:	push   0xf5e8682c
  40d082:	(bad)  
  40d083:	push   0xbe920706
  40d088:	adc    al,0xe1
  40d08a:	push   cs
  40d08b:	mov    ds:0x47491b90,eax
  40d090:	out    0xaf,al
  40d092:	mov    al,ds:0x87745faa
  40d097:	xchg   ebp,eax
  40d098:	outs   dx,BYTE PTR ds:[esi]
  40d099:	pushf  
  40d09a:	or     ebp,ebx
  40d09c:	xchg   DWORD PTR [eax],eax
  40d09e:	sub    BYTE PTR [esi-0x7fe80e89],0x3f
  40d0a5:	cmp    bh,BYTE PTR ds:[eax-0x741ef5c9]
  40d0ac:	add    al,0xc4
  40d0ae:	xor    ebx,DWORD PTR [esi+0x7a]
  40d0b1:	xchg   edx,eax
  40d0b2:	push   cs
  40d0b3:	pop    edx
  40d0b4:	ficomp DWORD PTR [ecx]
  40d0b6:	adc    al,0x51
  40d0b8:	int3   
  40d0b9:	xor    al,0x50
  40d0bb:	and    esp,eax
  40d0bd:	lods   al,BYTE PTR ds:[esi]
  40d0bf:	add    bl,BYTE PTR [ebx]
  40d0c1:	cmp    dl,dl
  40d0c3:	inc    esp
  40d0c4:	inc    eax
  40d0c5:	int3   
  40d0c6:	stc    
  40d0c7:	daa    
  40d0c8:	frstor [esi-0x56]
  40d0cb:	data16 xor BYTE PTR [esi+0x2d],al
  40d0cf:	pop    eax
  40d0d0:	test   eax,0xc8570e4c
  40d0d5:	dec    esi
  40d0d6:	mov    edx,0xcfa3096a
  40d0db:	add    al,0xd1
  40d0dd:	mov    esp,0x2c3e0842
  40d0e2:	xor    ebx,DWORD PTR [edx-0x239e3a5a]
  40d0e8:	jns    0x40d14b
  40d0ea:	push   ss
  40d0eb:	jecxz  0x40d0bf
  40d0ed:	mov    edi,0xb8acc8fc
  40d0f2:	aaa    
  40d0f3:	and    esi,ebx
  40d0f5:	ds js  0x40d12c
  40d0f8:	fidivr WORD PTR [edx-0x3a]
  40d0fb:	mov    esp,0x3b98982d
  40d100:	fiadd  DWORD PTR [eax-0x62]
  40d103:	xlat   BYTE PTR ds:[ebx]
  40d104:	pop    ecx
  40d105:	adc    eax,0x76aa10e2
  40d10a:	add    edi,DWORD PTR [edx+ecx*4+0x2b]
  40d10e:	rol    esp,cl
  40d110:	mov    ds:0x1fa5cb42,al
  40d115:	scas   al,BYTE PTR es:[edi]
  40d116:	(bad)  
  40d117:	cs xchg edx,eax
  40d119:	outs   dx,BYTE PTR ds:[esi]
  40d11a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d11b:	cmp    eax,0x271a88c3
  40d120:	enter  0x6fba,0xaa
  40d124:	adc    ah,BYTE PTR [edi+0x1e3dc12f]
  40d12a:	push   edx
  40d12b:	out    dx,eax
  40d12c:	or     DWORD PTR [esi+0x17d9ae3d],ecx
  40d132:	add    ch,BYTE PTR ds:0xb0599514
  40d138:	dec    edi
  40d139:	(bad)  
  40d13a:	(bad)  
  40d13b:	sbb    DWORD PTR [edi-0x46b073b7],eax
  40d141:	mov    esi,DWORD PTR [ecx]
  40d143:	std    
  40d144:	ficomp WORD PTR [eax+eiz*2-0x8]
  40d148:	dec    bp
  40d14a:	xchg   BYTE PTR [ebp+0x60868886],dh
  40d150:	mov    cs,WORD PTR [esi+eiz*2+0x1c]
  40d154:	cmp    BYTE PTR [edi],dl
  40d156:	pop    es
  40d157:	sub    DWORD PTR ds:0x347227c9,esp
  40d15d:	jl     0x40d100
  40d15f:	imul   esi,esp,0x9e1b25b5
  40d165:	xchg   esi,eax
  40d166:	add    al,0xde
  40d168:	call   0x6a30176c
  40d16d:	loope  0x40d123
  40d16f:	cli    
  40d170:	ret    0x7e0b
  40d173:	fild   QWORD PTR [esi+ebp*4]
  40d176:	lds    ebx,FWORD PTR [edx-0x53d2898a]
  40d17c:	test   BYTE PTR [edi],bl
  40d17e:	test   eax,0x479aebe1
  40d183:	inc    edi
  40d184:	mov    al,0x15
  40d186:	xor    eax,0xc6058006
  40d18b:	push   esp
  40d18c:	adc    BYTE PTR [edx+0x78661e4e],cl
  40d192:	(bad)  
  40d193:	pop    edi
  40d194:	test   DWORD PTR [ebx+ebp*4],eax
  40d197:	rcl    edx,0xf5
  40d19a:	mov    ecx,0x909233a0
  40d19f:	cwde   
  40d1a0:	pop    ecx
  40d1a1:	jge    0x40d18a
  40d1a3:	call   0xc4d5:0x6cfb9a98
  40d1aa:	mov    al,ds:0xcd7c6497
  40d1af:	add    dh,BYTE PTR [eax+ecx*1-0x59efe035]
  40d1b6:	js     0x40d224
  40d1b8:	dec    edi
  40d1b9:	bound  edx,QWORD PTR [edx+0x55]
  40d1bc:	inc    edi
  40d1bd:	push   ecx
  40d1be:	xchg   ebp,eax
  40d1bf:	push   esp
  40d1c0:	pop    ecx
  40d1c1:	out    dx,eax
  40d1c2:	mov    ah,0xb0
  40d1c4:	jo     0x40d154
  40d1c6:	pushf  
  40d1c7:	cmp    al,0x95
  40d1c9:	push   0xffffffaa
  40d1cb:	cmp    eax,0xc3422ddc
  40d1d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1d1:	or     BYTE PTR [eax-0x13cf5b22],dl
  40d1d7:	sahf   
  40d1d8:	xor    DWORD PTR [ecx+0x9d8ca9b],0xffffffdc
  40d1df:	ds aaa 
  40d1e1:	jae    0x40d18f
  40d1e3:	jmp    0x40d1ca
  40d1e5:	lahf   
  40d1e6:	aas    
  40d1e7:	cmp    al,0xff
  40d1e9:	jbe    0x40d222
  40d1eb:	mov    eax,0xb1894949
  40d1f0:	pop    ebx
  40d1f1:	pop    eax
  40d1f2:	dec    edx
  40d1f3:	pop    ss
  40d1f4:	push   0x7cb79ddd
  40d1f9:	dec    edi
  40d1fa:	test   DWORD PTR [eax+0x1a],esp
  40d1fd:	or     eax,0xc75f505e
  40d202:	xor    eax,0xd62efcf2
  40d207:	xchg   esp,eax
  40d208:	sub    esp,DWORD PTR [edi-0x15]
  40d20b:	sbb    al,0xfd
  40d20d:	mov    BYTE PTR [eax+ecx*4],al
  40d210:	jecxz  0x40d1e2
  40d212:	and    ebx,DWORD PTR [edi-0x67]
  40d215:	data16 clc 
  40d217:	stc    
  40d218:	scas   eax,DWORD PTR es:[edi]
  40d219:	lods   eax,DWORD PTR ds:[esi]
  40d21a:	dec    eax
  40d21b:	xchg   esp,eax
  40d21c:	lods   eax,DWORD PTR ds:[esi]
  40d21d:	xor    edi,DWORD PTR [edx-0x2391339b]
  40d223:	sbb    DWORD PTR [ecx],ebp
  40d225:	xor    ebp,DWORD PTR [eax]
  40d227:	inc    edi
  40d228:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d229:	push   eax
  40d22a:	sub    ecx,0xe2a91949
  40d230:	nop
  40d231:	fsubr  DWORD PTR [edi-0x13]
  40d234:	icebp  
  40d235:	sub    al,0x56
  40d237:	and    DWORD PTR [ebp+0x11],ecx
  40d23a:	push   esi
  40d23b:	clc    
  40d23c:	pop    ecx
  40d23d:	fnstcw WORD PTR [esi]
  40d23f:	mov    esi,0xd5bf62ce
  40d244:	out    dx,eax
  40d245:	or     edi,DWORD PTR [eax]
  40d247:	jecxz  0x40d1ea
  40d249:	mov    eax,ds:0x69e47ab5
  40d24e:	jecxz  0x40d2c9
  40d250:	hlt    
  40d251:	les    ebp,FWORD PTR [esi]
  40d253:	adc    eax,0x894794d8
  40d258:	sub    eax,0x95fa4c9b
  40d25d:	and    esi,edi
  40d25f:	cld    
  40d260:	mov    dh,0xcc
  40d262:	mov    esi,0xc038a36a
  40d267:	outs   dx,BYTE PTR ds:[esi]
  40d268:	xchg   ecx,eax
  40d269:	mov    bl,0xe5
  40d26b:	lea    ecx,[ebx-0x2e]
  40d26e:	leave  
  40d26f:	stos   DWORD PTR es:[edi],eax
  40d270:	lahf   
  40d271:	add    edi,ebp
  40d273:	daa    
  40d274:	jnp    0x40d235
  40d276:	jbe    0x40d275
  40d278:	cmp    al,BYTE PTR [ecx+0xe45aa22]
  40d27e:	xchg   esi,eax
  40d27f:	int3   
  40d280:	es and ah,dh
  40d283:	iret   
  40d284:	and    eax,0x128447ce
  40d289:	sti    
  40d28a:	ds scas eax,DWORD PTR es:[edi]
  40d28c:	or     DWORD PTR [ebp-0x2b],esp
  40d28f:	pop    ecx
  40d290:	fucomp st(4)
  40d292:	retf   0xf2d0
  40d295:	pop    edx
  40d296:	into   
  40d297:	add    ebx,DWORD PTR [edx+0x31e33b9a]
  40d29d:	mov    DWORD PTR [ebx],eax
  40d29f:	inc    esp
  40d2a0:	rol    eax,cl
  40d2a2:	add    bh,bl
  40d2a4:	(bad)  
  40d2a6:	mov    bl,0x94
  40d2a8:	jmp    0x83b7:0x39ce1fa8
  40d2af:	scas   eax,DWORD PTR es:[edi]
  40d2b0:	fsubr  QWORD PTR ds:0xd01c4932
  40d2b6:	mov    al,cl
  40d2b8:	sub    eax,0x79f1c8ad
  40d2bd:	retf   
  40d2be:	(bad)
  40d2c1:	jecxz  0x40d31d
  40d2c3:	mov    dh,0x5f
  40d2c5:	inc    edx
  40d2c6:	adc    esp,eax
  40d2c8:	sbb    eax,0x215bfbf5
  40d2cd:	jae    0x40d2dc
  40d2cf:	dec    esp
  40d2d0:	pop    esi
  40d2d1:	or     BYTE PTR [ebp-0x40a4b4a9],ch
  40d2d7:	jmp    0xba964e56
  40d2dc:	xor    cl,bl
  40d2de:	lock push ecx
  40d2e0:	jge    0x40d2b3
  40d2e2:	add    dl,bl
  40d2e4:	inc    esp
  40d2e5:	pop    eax
  40d2e6:	add    edi,ebx
  40d2e8:	cmp    eax,0xd9d15681
  40d2ed:	ja     0x40d2da
  40d2ef:	inc    ebx
  40d2f0:	push   esi
  40d2f1:	inc    ecx
  40d2f2:	clc    
  40d2f3:	sahf   
  40d2f4:	call   0xe7a5:0x18f3a10d
  40d2fb:	adc    al,BYTE PTR [ecx+esi*8]
  40d2fe:	fdivr  DWORD PTR [edi+eiz*1]
  40d301:	push   0xffffff96
  40d303:	out    dx,al
  40d304:	or     eax,0x40eec9a8
  40d309:	sub    BYTE PTR [edx],bl
  40d30b:	imul   ecx,DWORD PTR [esi+0x7c],0xec55843d
  40d312:	rcr    eax,1
  40d314:	in     al,dx
  40d315:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d316:	mov    ds:0xda08e8e5,eax
  40d31b:	fdivr  DWORD PTR ds:0x7590de51
  40d321:	loope  0x40d337
  40d323:	pusha  
  40d324:	loopne 0x40d392
  40d326:	cmc    
  40d327:	dec    ebx
  40d328:	daa    
  40d329:	jb     0x40d384
  40d32b:	test   BYTE PTR [ecx+0x11],ch
  40d32e:	cmp    al,0x79
  40d330:	pop    edx
  40d331:	in     eax,0x79
  40d333:	div    ebp
  40d335:	adc    edi,DWORD PTR [edx]
  40d337:	rcl    DWORD PTR [esi-0x64],0xb3
  40d33b:	inc    esp
  40d33c:	jle    0x40d2ca
  40d33e:	lods   eax,DWORD PTR ds:[esi]
  40d33f:	outs   dx,DWORD PTR ds:[esi]
  40d340:	data16 daa 
  40d342:	sub    al,0x6f
  40d344:	push   0xffffff86
  40d346:	mov    al,ds:0xe8587685
  40d34b:	sbb    eax,0xd2d10848
  40d350:	mov    al,0xf6
  40d352:	dec    eax
  40d353:	loope  0x40d30d
  40d355:	pop    ebx
  40d356:	fldcw  WORD PTR [edi+0x38]
  40d359:	push   esi
  40d35a:	cmp    ah,ch
  40d35c:	stc    
  40d35d:	jns    0x40d3db
  40d35f:	(bad)  
  40d361:	call   0xcd9a:0xc49ab06
  40d368:	sbb    dl,BYTE PTR [ebp-0x52]
  40d36b:	push   cs
  40d36c:	push   es
  40d36d:	call   0xb839:0xba760de9
  40d374:	and    eax,0x4b84dded
  40d379:	adc    BYTE PTR [eax-0x64],cl
  40d37c:	adc    DWORD PTR [ecx],edx
  40d37e:	in     al,dx
  40d37f:	xor    al,0x20
  40d381:	pop    esi
  40d382:	loopne 0x40d33d
  40d384:	adc    al,ah
  40d386:	adc    BYTE PTR [edx+ebp*8+0x20f794ab],dl
  40d38d:	mov    DWORD PTR [edi],ebp
  40d38f:	ret    
  40d390:	mov    al,0x17
  40d392:	test   eax,0x8581f5fa
  40d397:	fstp   TBYTE PTR [ecx-0x1b]
  40d39a:	es pop ds
  40d39c:	in     eax,0xf7
  40d39e:	push   edi
  40d39f:	xor    ebx,DWORD PTR [eax]
  40d3a1:	out    0x13,al
  40d3a3:	shr    BYTE PTR [esi+0x58],1
  40d3a6:	in     al,dx
  40d3a7:	add    al,0x5f
  40d3a9:	ins    DWORD PTR es:[edi],dx
  40d3aa:	leave  
  40d3ab:	(bad)  
  40d3ac:	jmp    0x96da:0x2511e7ff
  40d3b3:	mov    edi,DWORD PTR [esp+edi*4+0xc0aab30]
  40d3ba:	mov    eax,ds:0x12cff537
  40d3bf:	mov    ah,0xf8
  40d3c1:	jmp    0x40d35b
  40d3c3:	sti    
  40d3c4:	xor    eax,0x396c3baa
  40d3c9:	jl     0x40d418
  40d3cb:	stc    
  40d3cc:	pop    ss
  40d3cd:	jno    0x40d3cc
  40d3cf:	push   edi
  40d3d0:	in     eax,0x8c
  40d3d2:	addr16 loope 0x40d39f
  40d3d5:	fcmovb st,st(0)
  40d3d7:	les    eax,FWORD PTR [ebx-0x5f7dd31d]
  40d3dd:	pop    esp
  40d3de:	xchg   DWORD PTR [esi+eax*8+0x53],ebp
  40d3e2:	xchg   esp,eax
  40d3e3:	lods   eax,DWORD PTR ds:[esi]
  40d3e4:	sahf   
  40d3e5:	jne    0x40d413
  40d3e7:	cmc    
  40d3e8:	fistp  QWORD PTR [eax+0xe]
  40d3eb:	not    DWORD PTR [edx+ebx*1-0x28922549]
  40d3f2:	cld    
  40d3f3:	xor    al,BYTE PTR [edi-0x41]
  40d3f6:	popa   
  40d3f7:	adc    edi,DWORD PTR [edx-0x81f641d]
  40d3fd:	sbb    ch,BYTE PTR [ebx+0x4167350d]
  40d403:	inc    eax
  40d404:	jne    0x40d3c8
  40d406:	push   ebx
  40d407:	and    al,0xfb
  40d409:	jae    0x40d3b4
  40d40b:	sbb    BYTE PTR [edi],bl
  40d40d:	pop    ecx
  40d40e:	mul    ebx
  40d410:	popa   
  40d411:	nop
  40d412:	jecxz  0x40d491
  40d414:	dec    edi
  40d415:	es enter 0x944c,0x96
  40d41a:	or     edi,esi
  40d41c:	call   0x9276bf76
  40d421:	mov    esp,0x3cfba8ce
  40d426:	jle    0x40d3f1
  40d428:	xchg   DWORD PTR [edi],ecx
  40d42a:	scas   eax,DWORD PTR es:[edi]
  40d42b:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  40d431:	mov    ecx,DWORD PTR [ebp+0x8]
  40d434:	lea    ecx,[edx+ecx*1+0x3272db]
  40d43b:	cmp    ecx,eax
  40d43d:	je     0x40d4b4
  40d443:	mov    edi,DWORD PTR [ebp-0x14]
  40d446:	mov    eax,DWORD PTR [ebp+0x8]
  40d449:	mov    edx,DWORD PTR [ebp+0x14]
  40d44c:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d450:	mov    ecx,0x7510893
  40d455:	xor    edx,edx
  40d457:	xor    edi,ecx
  40d459:	mov    esi,0x3272db
  40d45e:	add    edi,esi
  40d460:	div    edi
  40d462:	mov    edx,DWORD PTR [ebp-0x4]
  40d465:	xor    edx,ecx
  40d467:	lea    eax,[edx+eax*1+0x3272db]
  40d46e:	mov    edx,DWORD PTR [ebp+0x8]
  40d471:	mov    edi,DWORD PTR [ebp-0x20]
  40d474:	mov    DWORD PTR [edi+edx*4],eax
  40d477:	mov    eax,DWORD PTR [ebp-0x14]
  40d47a:	mov    edx,DWORD PTR [ebp+0x8]
  40d47d:	xor    eax,ecx
  40d47f:	lea    eax,[eax+edx*1+0x3272db]
  40d486:	mov    DWORD PTR [ebp+0x8],eax
  40d489:	mov    eax,DWORD PTR [ebp-0x14]
  40d48c:	mov    edx,DWORD PTR [ebp+0x14]
  40d48f:	xor    eax,ecx
  40d491:	add    eax,esi
  40d493:	imul   eax,DWORD PTR [edx]
  40d496:	mov    edx,DWORD PTR [ebp-0x4]
  40d499:	xor    edx,ecx
  40d49b:	mov    ecx,DWORD PTR [ebp+0x8]
  40d49e:	lea    ecx,[edx+ecx*1+0x3272db]
  40d4a5:	cmp    ecx,eax
  40d4a7:	jne    0x40d443
  40d4ad:	mov    eax,esi
  40d4af:	jmp    0x40d4b9
  40d4b4:	mov    eax,0x3272db
  40d4b9:	mov    ebx,0x7510893
  40d4be:	mov    ecx,DWORD PTR [ebp-0x4]
  40d4c1:	xor    ecx,ebx
  40d4c3:	add    ecx,eax
  40d4c5:	mov    DWORD PTR [ebp-0xc],ecx
  40d4c8:	mov    ebx,0x65655
  40d4cd:	add    ebx,0x3234
  40d4d3:	xchg   ebx,esi
  40d4d5:	xor    ebx,ebx
  40d4d7:	push   esi
  40d4d8:	mov    esi,ebx
  40d4da:	pop    ebx
  40d4db:	mov    edx,esi
  40d4dd:	add    ebx,0x1002
  40d4e3:	lea    eax,[ebp-0x10]
  40d4e6:	add    edx,eax
  40d4e8:	add    edx,0x5
  40d4eb:	push   edx
  40d4ec:	inc    esi
  40d4ed:	pop    ecx
  40d4ee:	dec    ecx
  40d4ef:	jmp    0x40f854
  40d4f4:	jl     0x40d532
  40d4f6:	pop    es
  40d4f7:	call   0xe49cb803
  40d4fc:	and    BYTE PTR [edi+0x55884edd],0x89
  40d503:	adc    al,0xa0
  40d505:	shl    BYTE PTR [edx+0x62],cl
  40d508:	cmp    bl,BYTE PTR [edi+0x62]
  40d50b:	bound  esp,QWORD PTR [ecx-0x6e]
  40d50e:	retf   
  40d50f:	into   
  40d510:	sub    al,0xaa
  40d512:	or     eax,0x14c3e06f
  40d517:	(bad)  
  40d519:	iret   
  40d51a:	loope  0x40d513
  40d51c:	mov    dl,0xc1
  40d51e:	ja     0x40d514
  40d520:	ss retf 
  40d522:	or     bl,ch
  40d524:	xchg   esi,eax
  40d525:	push   cs
  40d526:	push   esp
  40d527:	mov    ds:0x72a22b54,eax
  40d52c:	stos   BYTE PTR es:[edi],al
  40d52d:	fsubr  QWORD PTR [edx+esi*1-0x77]
  40d531:	cdq    
  40d532:	stc    
  40d533:	add    esp,ebp
  40d535:	(bad)  
  40d537:	stc    
  40d538:	adc    bl,ah
  40d53a:	pop    ss
  40d53b:	and    eax,0xd33b0b98
  40d540:	sar    ch,cl
  40d542:	mov    ch,0x2
  40d544:	add    DWORD PTR [ecx+0x6249508a],eax
  40d54a:	fwait
  40d54b:	pop    ecx
  40d54c:	jp     0x40d5c7
  40d54e:	mov    ecx,0x55145ab1
  40d553:	cld    
  40d554:	lock (bad) 
  40d556:	and    ah,BYTE PTR [ecx-0x61]
  40d559:	pop    ecx
  40d55a:	test   al,0xe4
  40d55c:	jns    0x40d507
  40d55e:	test   BYTE PTR [eax-0x73],ch
  40d561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d562:	push   cs
  40d563:	jnp    0x40d587
  40d565:	popf   
  40d566:	imul   esi,DWORD PTR [edi],0x311653c
  40d56c:	pop    es
  40d56d:	in     eax,dx
  40d56e:	adc    DWORD PTR [edi],ebp
  40d570:	mov    ebp,0xc9bf4026
  40d575:	hlt    
  40d576:	add    ah,BYTE PTR [edx+0x7a]
  40d579:	arpl   WORD PTR [ecx-0x9],bx
  40d57c:	iret   
  40d57d:	adc    eax,0x196beebf
  40d582:	or     DWORD PTR [ebx+0x16],edi
  40d585:	rol    DWORD PTR [ecx+esi*1+0x2c887bda],0x67
  40d58d:	clc    
  40d58e:	xor    al,0xa2
  40d590:	adc    ebx,ebp
  40d592:	in     eax,0x76
  40d594:	mov    eax,0x905317b7
  40d599:	fsubr  st(1),st
  40d59b:	jbe    0x40d61b
  40d59d:	cmp    BYTE PTR [edx+ebp*4+0x6184a1ae],bh
  40d5a4:	jle    0x40d61a
  40d5a6:	mov    dl,0x1e
  40d5a8:	aam    0x3
  40d5aa:	in     eax,0x86
  40d5ac:	and    edx,eax
  40d5ae:	sub    eax,0x57f0741b
  40d5b3:	leave  
  40d5b4:	jg     0x40d5c7
  40d5b6:	loop   0x40d5b4
  40d5b8:	inc    esi
  40d5b9:	lea    edi,[ecx-0x24]
  40d5bc:	fwait
  40d5bd:	dec    ebx
  40d5be:	inc    eax
  40d5bf:	mov    ah,0x11
  40d5c1:	shr    BYTE PTR [ebx+edi*8],0x86
  40d5c5:	xchg   esi,eax
  40d5c6:	(bad)  
  40d5c7:	nop
  40d5c8:	xchg   DWORD PTR [ebx+0x3410b38a],ebx
  40d5ce:	xlat   BYTE PTR ds:[ebx]
  40d5cf:	mov    al,ch
  40d5d1:	arpl   WORD PTR [esi-0x52],si
  40d5d4:	pusha  
  40d5d5:	adc    bl,bh
  40d5d7:	pop    edx
  40d5d8:	repz hlt 
  40d5da:	mov    al,ds:0x8044c35a
  40d5df:	and    bl,BYTE PTR [edi]
  40d5e1:	sub    al,dl
  40d5e3:	aad    0x3b
  40d5e5:	aaa    
  40d5e6:	out    dx,eax
  40d5e7:	jb     0x40d628
  40d5e9:	ins    DWORD PTR es:[edi],dx
  40d5ea:	pushf  
  40d5eb:	adc    DWORD PTR [ebx-0x23020fec],edx
  40d5f1:	in     eax,0x38
  40d5f3:	lock or ebx,DWORD PTR [ecx+esi*4+0x1e]
  40d5f8:	mov    al,ds:0x52546264
  40d5fd:	icebp  
  40d5fe:	sbb    DWORD PTR [eax-0x17],edi
  40d601:	fs jle 0x40d66d
  40d604:	inc    ebp
  40d605:	and    ah,0x17
  40d608:	dec    edx
  40d609:	test   al,0x76
  40d60b:	adc    bl,BYTE PTR [esi-0x6d]
  40d60e:	scas   al,BYTE PTR es:[edi]
  40d60f:	inc    esp
  40d610:	cmp    edx,esp
  40d612:	sbb    al,0x6
  40d614:	out    dx,al
  40d615:	in     al,0x3
  40d617:	push   ds
  40d618:	mov    edx,DWORD PTR [edi+ebx*8-0x1]
  40d61c:	(bad)  
  40d61d:	sub    bp,WORD PTR [ebp+0x794f1ef8]
  40d624:	push   ss
  40d625:	mov    esi,0x50765c4a
  40d62a:	ins    DWORD PTR es:[edi],dx
  40d62b:	sbb    eax,0x5177b01b
  40d630:	jl     0x40d63f
  40d632:	cld    
  40d633:	dec    edi
  40d634:	jle    0x40d659
  40d636:	adc    DWORD PTR [esp+edx*1-0xf5cf8ca],edx
  40d63d:	xchg   edi,eax
  40d63e:	fidivr DWORD PTR [eax+0x646d21b7]
  40d644:	inc    edi
  40d645:	outs   dx,DWORD PTR ds:[esi]
  40d646:	popf   
  40d647:	sar    DWORD PTR [ebp-0x55],cl
  40d64a:	push   0x6b0db48d
  40d64f:	scas   al,BYTE PTR es:[edi]
  40d650:	sub    BYTE PTR [esi-0x4f88e694],0x3
  40d657:	mov    bh,0xdf
  40d659:	pop    edx
  40d65a:	jae    0x40d6cd
  40d65c:	imul   esi,ebp,0x6571c36e
  40d662:	and    BYTE PTR [edx],dh
  40d664:	clc    
  40d665:	jmp    0x302a2541
  40d66a:	push   0xffffff85
  40d66c:	mov    dl,0xac
  40d66e:	daa    
  40d66f:	xchg   BYTE PTR [ecx-0x63c321d4],ah
  40d675:	push   ds
  40d676:	imul   ebx,DWORD PTR [edx],0xb5687cb2
  40d67c:	loop   0x40d672
  40d67e:	add    eax,0x58681a0d
  40d683:	ss retf 0xc6a8
  40d687:	jp     0x40d63f
  40d689:	or     al,0xd9
  40d68b:	add    BYTE PTR [ecx],ah
  40d68d:	sub    eax,0xc5350056
  40d692:	mov    bl,0x24
  40d694:	xor    eax,0x2b573d48
  40d699:	fsubr  st(2),st
  40d69b:	jmp    0xffc1:0xc24525c1
  40d6a2:	jno    0x40d671
  40d6a4:	cld    
  40d6a5:	gs (bad) 
  40d6a7:	popf   
  40d6a8:	or     DWORD PTR [ecx-0x8c42f11],edx
  40d6ae:	lods   al,BYTE PTR ds:[esi]
  40d6af:	in     eax,dx
  40d6b0:	pop    esi
  40d6b1:	ficom  DWORD PTR [edx+0x57056616]
  40d6b7:	cmp    ecx,ebp
  40d6b9:	fucomip st,st(7)
  40d6bb:	test   DWORD PTR [edx-0x75823bab],esp
  40d6c1:	retf   
  40d6c2:	push   0x98c71c71
  40d6c7:	pusha  
  40d6c8:	imul   edx,DWORD PTR [ecx],0x9e7212dc
  40d6ce:	xlat   BYTE PTR ds:[ebx]
  40d6cf:	jmp    FWORD PTR [eax+0x3a]
  40d6d2:	or     ebx,DWORD PTR [ecx]
  40d6d4:	add    al,0xd
  40d6d6:	daa    
  40d6d7:	call   0x70ef:0x22153039
  40d6de:	imul   edi,DWORD PTR [ebp+0x76],0x28ee14b5
  40d6e5:	xor    dl,BYTE PTR [edi+0x57dbeb46]
  40d6eb:	add    eax,0xf95b8101
  40d6f0:	lods   eax,DWORD PTR ds:[esi]
  40d6f1:	in     al,dx
  40d6f2:	(bad)  
  40d6f4:	dec    ebx
  40d6f5:	push   ebp
  40d6f6:	loopne 0x40d708
  40d6f8:	dec    ecx
  40d6f9:	xor    eax,0x2bda53ec
  40d6fe:	mov    dh,0xd3
  40d700:	shl    bl,cl
  40d702:	mov    cl,0x7d
  40d704:	xchg   DWORD PTR [edi+0x7d],edx
  40d707:	stos   BYTE PTR es:[edi],al
  40d708:	jl     0x40d736
  40d70a:	push   ebp
  40d70b:	fucomi st,st(2)
  40d70d:	gs rdmsr 
  40d710:	xchg   DWORD PTR [ebx+0x60],ecx
  40d713:	inc    ebp
  40d714:	mov    bh,ch
  40d716:	(bad)  [esi+0x42]
  40d719:	cli    
  40d71a:	test   DWORD PTR [edx+0xb],0x71a07ae4
  40d721:	out    dx,eax
  40d722:	mov    eax,ds:0xc559747c
  40d727:	push   ecx
  40d728:	mov    edx,0xc0f2e1b6
  40d72d:	push   es
  40d72e:	mov    edi,0x52c71653
  40d733:	and    al,0x6b
  40d735:	sbb    DWORD PTR [esi],esp
  40d737:	cmp    ebx,DWORD PTR [edx-0x60]
  40d73a:	jp     0x40d7a4
  40d73c:	leave  
  40d73d:	xchg   esi,eax
  40d73e:	in     eax,dx
  40d73f:	ror    BYTE PTR [ecx],cl
  40d741:	mov    dh,0x77
  40d743:	jge    0x40d751
  40d745:	mov    ds:0xbb3f94a,al
  40d74a:	adc    eax,0x30d4bb5d
  40d74f:	pop    ebx
  40d750:	mov    al,0xc1
  40d752:	cs scas eax,DWORD PTR es:[edi]
  40d754:	xor    BYTE PTR [esi],bl
  40d756:	xchg   BYTE PTR [edi],bl
  40d758:	inc    esi
  40d759:	sub    BYTE PTR cs:[eax-0x73],bh
  40d75d:	scas   al,BYTE PTR es:[edi]
  40d75e:	repz adc BYTE PTR [edi+0x4d57912d],0x60
  40d766:	cmp    DWORD PTR [edx],ecx
  40d768:	cmp    al,BYTE PTR [ecx+0x275c3851]
  40d76e:	mov    cl,0x86
  40d770:	mov    eax,0x5c52bb23
  40d775:	xor    ecx,DWORD PTR [ebp+eax*1-0x48]
  40d779:	fld    DWORD PTR [eax+0x6fcffc3a]
  40d77f:	lds    ebx,FWORD PTR [ebx-0x7e0899ca]
  40d785:	popf   
  40d786:	es add al,0xfe
  40d789:	push   ss
  40d78a:	mov    eax,ds:0xe9ebc805
  40d78f:	cmc    
  40d790:	pop    edx
  40d791:	jbe    0x40d7af
  40d793:	xchg   DWORD PTR [eax-0x49],esi
  40d796:	ja     0x40d7d0
  40d798:	and    BYTE PTR [ecx+0x1283a279],0x24
  40d79f:	lds    esp,FWORD PTR [ebp-0x78]
  40d7a2:	xchg   ebp,eax
  40d7a3:	in     eax,dx
  40d7a4:	pop    ebp
  40d7a5:	mov    BYTE PTR [edi],cl
  40d7a7:	xchg   ebp,eax
  40d7a8:	pop    edi
  40d7a9:	mov    ecx,0xee26974d
  40d7ae:	(bad)  
  40d7af:	(bad)  
  40d7b0:	fld    TBYTE PTR [esi-0x24]
  40d7b3:	mov    ds:0x5f014f6e,eax
  40d7b8:	mov    dh,0xc5
  40d7ba:	jmp    ecx
  40d7bc:	imul   edx,DWORD PTR [edi+0x76],0xffffff83
  40d7c0:	mov    esp,0xe82511f1
  40d7c5:	dec    ecx
  40d7c6:	(bad)  
  40d7c7:	loope  0x40d77a
  40d7c9:	jmp    0xc3fa1a2a
  40d7ce:	je     0x40d784
  40d7d0:	lock fiadd WORD PTR [edi+0x3]
  40d7d4:	fidiv  DWORD PTR [ebx+esi*4-0x2e]
  40d7d8:	mov    cl,0xd
  40d7da:	dec    ebx
  40d7db:	pop    eax
  40d7dc:	loope  0x40d84b
  40d7de:	bound  edi,QWORD PTR [esi]
  40d7e0:	pop    es
  40d7e1:	ja     0x40d829
  40d7e3:	push   ebp
  40d7e4:	ret    0xa230
  40d7e7:	xchg   edi,eax
  40d7e8:	add    DWORD PTR [edx-0x24],0xa9ca06aa
  40d7ef:	retf   
  40d7f0:	loope  0x40d845
  40d7f2:	adc    al,0xb1
  40d7f4:	jb     0x40d846
  40d7f6:	dec    eax
  40d7f7:	mov    al,BYTE PTR [ecx+eiz*1-0x29]
  40d7fb:	into   
  40d7fc:	lea    ebx,[ecx+ebx*8-0xbc0463c]
  40d803:	in     al,0x73
  40d805:	stc    
  40d806:	fwait
  40d807:	pop    esi
  40d808:	jae    0x40d7d0
  40d80a:	mov    eax,0xec0cd713
  40d80f:	inc    edx
  40d810:	jle    0x40d7e0
  40d812:	sbb    DWORD PTR [eax-0x1b048b54],0xbdb5c44
  40d81c:	sysexit 
  40d81e:	scas   eax,DWORD PTR es:[edi]
  40d81f:	ss cdq 
  40d821:	lahf   
  40d822:	xchg   edi,eax
  40d823:	call   0xdeb6d1b3
  40d828:	xchg   BYTE PTR [esi-0x3f],dh
  40d82b:	inc    esp
  40d82c:	dec    edx
  40d82d:	test   DWORD PTR [esi+eiz*2-0x36],edi
  40d831:	mov    al,ds:0xd39fa985
  40d836:	pop    es
  40d837:	fisttp WORD PTR [ecx+0x66]
  40d83a:	in     al,dx
  40d83b:	ror    DWORD PTR [edi-0x3c],1
  40d83e:	dec    ebp
  40d83f:	sbb    BYTE PTR [ebp-0x41],cl
  40d842:	dec    edx
  40d843:	(bad)  
  40d844:	stos   DWORD PTR es:[edi],eax
  40d845:	mov    eax,ds:0xc8bcec3c
  40d84a:	mov    al,BYTE PTR [eax+0x4]
  40d84d:	sbb    cl,BYTE PTR [edi+0x43528431]
  40d853:	loopne 0x40d8ca
  40d855:	inc    ebx
  40d856:	test   BYTE PTR [edx],bl
  40d858:	sbb    esi,edx
  40d85a:	mov    esi,0xcff64f52
  40d85f:	and    ch,BYTE PTR [edx]
  40d861:	lods   eax,DWORD PTR ds:[esi]
  40d862:	jge    0x40d7ed
  40d864:	jae    0x40d7f1
  40d866:	inc    eax
  40d867:	pop    ss
  40d868:	xor    eax,0xbbcab5f
  40d86d:	ss cmp al,0xae
  40d870:	push   ebx
  40d871:	aas    
  40d872:	pop    ss
  40d873:	xchg   edx,eax
  40d874:	push   ds
  40d875:	fbld   TBYTE PTR [edx+0x6893ba5f]
  40d87b:	pop    ebp
  40d87c:	jbe    0x40d89d
  40d87e:	sbb    eax,0xac5bed64
  40d883:	je     0x40d8f2
  40d885:	sahf   
  40d886:	mov    WORD PTR [edi],ds
  40d888:	imul   ebp,DWORD PTR [ecx],0x76b02379
  40d88e:	sbb    eax,DWORD PTR [edi]
  40d890:	in     eax,dx
  40d891:	(bad)  
  40d892:	mov    dl,0xda
  40d894:	xor    BYTE PTR [ecx],ah
  40d896:	aad    0xa6
  40d898:	dec    eax
  40d899:	sub    ecx,DWORD PTR [ecx-0x7]
  40d89c:	push   ebx
  40d89d:	pop    ebx
  40d89e:	pop    es
  40d89f:	push   ss
  40d8a0:	fisttp WORD PTR [edi]
  40d8a2:	inc    edi
  40d8a3:	adc    eax,0x7569b001
  40d8a8:	pop    edx
  40d8a9:	ins    BYTE PTR es:[edi],dx
  40d8aa:	mov    ecx,0x9eb8841a
  40d8af:	or     DWORD PTR [edi-0x67bb6686],eax
  40d8b5:	inc    esp
  40d8b6:	cmp    BYTE PTR [edx],0x21
  40d8b9:	add    edi,DWORD PTR [ebp+0x4c3715e3]
  40d8bf:	aam    0x2c
  40d8c1:	shr    esi,0x6
  40d8c4:	jae    0x40d904
  40d8c6:	loop   0x40d874
  40d8c8:	push   DWORD PTR [edi+0x2f]
  40d8cb:	fs or  eax,0x5ff6d16
  40d8d1:	and    al,0x3e
  40d8d3:	fistp  DWORD PTR [edx]
  40d8d5:	test   eax,0xd3e71a38
  40d8da:	push   0x7e23fffa
  40d8df:	mov    edx,0x60be5336
  40d8e4:	jae    0x40d8a7
  40d8e6:	add    al,0x80
  40d8e8:	rcr    bh,1
  40d8ea:	cdq    
  40d8eb:	inc    DWORD PTR [ecx]
  40d8ed:	loop   0x40d945
  40d8ef:	pop    ecx
  40d8f0:	inc    eax
  40d8f1:	mov    ds:0x532d47a9,al
  40d8f6:	inc    esp
  40d8f7:	enter  0xfea1,0xcf
  40d8fb:	cmp    DWORD PTR [ecx],edx
  40d8fd:	sbb    DWORD PTR [ebx],edx
  40d8ff:	loop   0x40d918
  40d901:	cs jns 0x40d8d6
  40d904:	cmp    edx,esp
  40d906:	out    dx,eax
  40d907:	enter  0x6d07,0xfe
  40d90b:	jge    0x40d941
  40d90d:	sbb    BYTE PTR [ebx],dl
  40d90f:	outs   dx,DWORD PTR ds:[esi]
  40d910:	rcl    DWORD PTR [edx+eiz*4],cl
  40d913:	(bad)  
  40d916:	jo     0x40d8bf
  40d918:	jo     0x40d8c8
  40d91a:	into   
  40d91b:	dec    edi
  40d91c:	xchg   DWORD PTR [ebx+0xd],esp
  40d91f:	jbe    0x40d92c
  40d921:	dec    ebp
  40d922:	mov    al,es:0x273232fc
  40d928:	push   ds
  40d929:	xor    al,0xd7
  40d92b:	xor    BYTE PTR [edx-0x62],cl
  40d92e:	cwde   
  40d92f:	lock push esi
  40d931:	movntps XMMWORD PTR [ecx-0xa50e9c],xmm3
  40d938:	dec    esp
  40d939:	aad    0x85
  40d93b:	test   BYTE PTR [ebp-0x3f9ead9a],bl
  40d941:	(bad)  
  40d942:	lea    ebp,[ebx-0x6e473d71]
  40d948:	fsub   QWORD PTR [ebx+0x7af04918]
  40d94e:	xchg   edx,eax
  40d94f:	mov    ah,0x30
  40d951:	add    ebx,esi
  40d953:	dec    eax
  40d954:	mov    edx,esi
  40d956:	jecxz  0x40d922
  40d958:	je     0x40d923
  40d95a:	inc    edx
  40d95b:	(bad)  
  40d95c:	in     al,dx
  40d95d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d95e:	out    dx,al
  40d95f:	loopne 0x40d9cb
  40d961:	sar    BYTE PTR [ecx],cl
  40d963:	jo     0x40d8eb
  40d965:	xchg   esp,eax
  40d966:	cld    
  40d967:	inc    ebp
  40d968:	aam    0x9f
  40d96a:	push   ebx
  40d96b:	mov    edx,0x9dbce517
  40d970:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d971:	jp     0x40d9d4
  40d973:	mov    WORD PTR [ecx],cs
  40d975:	jge    0x40d9a6
  40d977:	dec    esp
  40d978:	jp     0x40d9b5
  40d97a:	push   es
  40d97b:	popf   
  40d97c:	mov    ebx,0x6d85d68d
  40d981:	hlt    
  40d982:	aad    0x79
  40d984:	mov    ebx,0xe79a46b4
  40d989:	push   cs
  40d98a:	pop    ds
  40d98b:	(bad)  
  40d98c:	cmp    DWORD PTR [ebp*1+0x256950e5],0x744b5e5a
  40d997:	xchg   edx,eax
  40d998:	mov    ebx,0xd2c50322
  40d99d:	test   eax,0x161dcac9
  40d9a2:	dec    ecx
  40d9a3:	das    
  40d9a4:	push   ds
  40d9a5:	int    0xa8
  40d9a7:	push   0xffffff9d
  40d9a9:	xlat   BYTE PTR ds:[ebx]
  40d9aa:	jle    0x40da0a
  40d9ac:	adc    dh,BYTE PTR ds:0x6fe3d5da
  40d9b2:	jmp    FWORD PTR [esi]
  40d9b4:	or     al,0x89
  40d9b6:	mov    dl,0xed
  40d9b8:	stc    
  40d9b9:	and    eax,0x5f4d5614
  40d9be:	lock int3 
  40d9c0:	mov    dh,0xfb
  40d9c2:	fistp  WORD PTR [edx-0x337428c8]
  40d9c8:	cmp    esi,DWORD PTR [edi-0x24d0b741]
  40d9ce:	push   eax
  40d9cf:	test   eax,0x9df760d9
  40d9d4:	loope  0x40da14
  40d9d6:	ins    BYTE PTR es:[edi],dx
  40d9d7:	mov    ah,0xb9
  40d9d9:	push   ebx
  40d9da:	xor    eax,0x22be9f0a
  40d9df:	fldenv [ebx-0x27d21dc9]
  40d9e5:	leave  
  40d9e6:	mov    ah,BYTE PTR [eax+ebp*1]
  40d9e9:	mov    al,ds:0x48894a29
  40d9ee:	sbb    DWORD PTR [ecx+0x2b10457c],eax
  40d9f4:	(bad)  
  40d9f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9f6:	mov    DWORD PTR [ebx-0x769b1ca8],ebp
  40d9fc:	mov    ah,0x1f
  40d9fe:	ins    BYTE PTR es:[edi],dx
  40d9ff:	fs jo  0x40da14
  40da02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da03:	mov    dh,0xe5
  40da05:	adc    bl,al
  40da07:	int    0x5c
  40da09:	scas   al,BYTE PTR es:[edi]
  40da0a:	sub    al,0x29
  40da0c:	and    eax,0x1a816596
  40da11:	frstor [ebp+0x7f]
  40da14:	pop    eax
  40da15:	pushf  
  40da16:	adc    eax,0x88cac716
  40da1b:	test   al,0xdb
  40da1d:	jo     0x40da9d
  40da1f:	scas   eax,DWORD PTR es:[edi]
  40da20:	dec    eax
  40da21:	pop    ss
  40da22:	fst    QWORD PTR [ebp+0x64685c83]
  40da28:	dec    esi
  40da29:	sbb    eax,0x6f469e8d
  40da2e:	imul   ecx,DWORD PTR [ecx-0x21adb158],0xfffffffe
  40da35:	sub    dh,dh
  40da37:	push   cs
  40da38:	xchg   DWORD PTR gs:[esi+ebx*8],ecx
  40da3c:	(bad)  
  40da3d:	mov    ds:0x7162da5d,al
  40da42:	and    BYTE PTR [eax],dh
  40da44:	jo     0x40da54
  40da46:	push   0xffffff8c
  40da48:	inc    esi
  40da49:	shr    DWORD PTR [edi-0x4f785c6d],0x6d
  40da50:	jmp    0x36d3:0xd27d3389
  40da57:	mov    ebx,0x736bd97d
  40da5c:	test   BYTE PTR [ecx],ah
  40da5e:	dec    edx
  40da5f:	xor    ecx,DWORD PTR [ecx+0x20]
  40da62:	out    dx,eax
  40da63:	ins    DWORD PTR es:[edi],dx
  40da64:	pop    esi
  40da65:	dec    esi
  40da66:	mov    ss,WORD PTR [eax+0x14]
  40da69:	mov    dl,0x9c
  40da6b:	xlat   BYTE PTR ds:[ebx]
  40da6c:	and    ch,al
  40da6e:	int3   
  40da6f:	popf   
  40da70:	mov    edi,0x88c9001b
  40da75:	dec    ebx
  40da76:	data16 aam 0x22
  40da79:	mov    ds:0x35db1e6,eax
  40da7e:	pop    edi
  40da7f:	and    dl,BYTE PTR [ecx]
  40da81:	adc    eax,DWORD PTR [esi+0x572ad626]
  40da87:	mov    ebx,0x51627a3c
  40da8c:	sbb    dh,BYTE PTR [edi]
  40da8e:	(bad)  
  40da8f:	jmp    0x40da3e
  40da91:	sahf   
  40da92:	lock mov ecx,0x1bc117d7
  40da98:	out    0x8,al
  40da9a:	add    BYTE PTR [ebp+0x1d],ah
  40da9d:	ret    
  40da9e:	in     al,dx
  40da9f:	jle    0x40da31
  40daa1:	sbb    al,0x19
  40daa3:	aad    0x44
  40daa5:	adc    DWORD PTR [ecx+0x55f10f04],esi
  40daab:	iret   
  40daac:	pop    edi
  40daad:	xor    al,0x6f
  40daaf:	mov    ch,0xd
  40dab1:	sbb    eax,0xaee6b780
  40dab6:	bound  eax,QWORD PTR [ebp+esi*2-0x35bcc91e]
  40dabd:	sbb    DWORD PTR [ebp-0x58],ebx
  40dac0:	iret   
  40dac1:	shl    BYTE PTR ds:0xe8dbbff1,cl
  40dac7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dac8:	mov    al,0x90
  40daca:	arpl   WORD PTR [esi+0xdea2a64],sp
  40dad0:	jmp    0x53e2849d
  40dad5:	jg     0x40dae0
  40dad7:	jmp    0xec2747ad
  40dadc:	pop    ds
  40dadd:	mov    edi,0x8f5b6013
  40dae2:	mov    bh,BYTE PTR [esi]
  40dae4:	in     al,dx
  40dae5:	pop    esp
  40dae6:	cld    
  40dae7:	xchg   DWORD PTR [edi+0x76],edx
  40daea:	hlt    
  40daeb:	and    DWORD PTR [ecx+0x3b],esi
  40daee:	sub    ch,BYTE PTR [eax+0x442b20f0]
  40daf4:	sahf   
  40daf5:	jo     0x40db62
  40daf7:	mov    al,ds:0x94132b65
  40dafc:	jne    0x40db55
  40dafe:	mov    cl,0x4c
  40db00:	adc    esp,edi
  40db02:	push   eax
  40db03:	adc    al,0x13
  40db05:	aaa    
  40db06:	xchg   esi,eax
  40db07:	cmp    DWORD PTR [ebx+0x360402d7],ebx
  40db0d:	fild   DWORD PTR [esi+0x49]
  40db10:	in     al,dx
  40db11:	push   ecx
  40db12:	xor    eax,0x26de0700
  40db17:	test   eax,0x153efc11
  40db1c:	retf   0xd349
  40db1f:	(bad)  
  40db20:	fdivr  QWORD PTR [ecx]
  40db22:	add    al,0xe9
  40db24:	push   ss
  40db25:	loop   0x40dab9
  40db27:	call   0x85f2:0x81ecce39
  40db2e:	dec    esp
  40db2f:	dec    ecx
  40db30:	mov    eax,edi
  40db32:	mov    eax,0x9bb7f9c1
  40db37:	push   es
  40db38:	ret    
  40db39:	pop    ss
  40db3a:	outs   dx,BYTE PTR ds:[esi]
  40db3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db3c:	inc    edx
  40db3d:	dec    ecx
  40db3e:	int    0xfd
  40db40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db41:	ds mov al,0x96
  40db44:	and    BYTE PTR [eax+esi*2],0x66
  40db48:	in     al,0x54
  40db4a:	int    0xee
  40db4c:	mov    dh,0x25
  40db4e:	(bad)  
  40db4f:	(bad)  
  40db50:	sbb    BYTE PTR [ecx],dl
  40db52:	mov    eax,ds:0x16b0ad87
  40db57:	mov    ebx,0x2045e3b4
  40db5c:	(bad)  
  40db5d:	push   0x52a5603a
  40db62:	cwde   
  40db63:	mov    esp,0x2d776608
  40db68:	dec    di
  40db6a:	push   ss
  40db6b:	popa   
  40db6c:	cmp    al,0xb9
  40db6e:	mov    BYTE PTR [ecx+0x35fc922e],ah
  40db74:	dec    ecx
  40db75:	push   ds
  40db76:	iret   
  40db77:	mov    ?,WORD PTR [ebx]
  40db79:	addr16 leave 
  40db7b:	dec    ecx
  40db7c:	js     0x40dbb2
  40db7e:	xor    al,0x75
  40db80:	pop    ds
  40db81:	mov    cl,0x17
  40db83:	xor    al,0x28
  40db85:	jae    0x40db34
  40db87:	pusha  
  40db88:	or     ebp,eax
  40db8a:	in     al,dx
  40db8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db8c:	xor    BYTE PTR [ebx+edi*1],bh
  40db8f:	inc    ebx
  40db90:	cmp    DWORD PTR [edi+0x7d4d0c52],0xbbe85825
  40db9a:	pop    edx
  40db9b:	jbe    0x40dbb3
  40db9d:	jo     0x40db81
  40db9f:	into   
  40dba0:	mov    esp,0xd964d9fa
  40dba5:	out    dx,eax
  40dba6:	stc    
  40dba7:	sub    eax,0x9851ef33
  40dbac:	es nop
  40dbae:	pop    ss
  40dbaf:	jmp    0x4eeb1876
  40dbb4:	js     0x40db8e
  40dbb6:	test   ah,bl
  40dbb8:	rol    DWORD PTR fs:[ebp+0xa8aa629],1
  40dbbf:	out    dx,eax
  40dbc0:	stos   DWORD PTR es:[edi],eax
  40dbc1:	push   esi
  40dbc2:	out    dx,al
  40dbc3:	adc    ebp,edx
  40dbc5:	mov    ah,0x9b
  40dbc7:	and    dl,al
  40dbc9:	ret    0x4402
  40dbcc:	push   ebp
  40dbcd:	pushf  
  40dbce:	ret    
  40dbcf:	dec    edx
  40dbd0:	xor    al,0x0
  40dbd2:	pop    es
  40dbd3:	bnd jmp 0x40dbd3
  40dbd6:	data16 and ah,cl
  40dbd9:	add    ch,BYTE PTR [edx+0x76]
  40dbdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbdd:	outs   dx,DWORD PTR ds:[esi]
  40dbde:	jecxz  0x40dbd7
  40dbe0:	shl    DWORD PTR [ebx],cl
  40dbe2:	mov    ds:0xfb88f8e9,eax
  40dbe7:	imul   ebx,ecx,0x70d54990
  40dbed:	or     esp,edx
  40dbef:	loopne 0x40db7c
  40dbf1:	fstp   QWORD PTR [edx]
  40dbf3:	ins    BYTE PTR es:[edi],dx
  40dbf4:	pop    ebx
  40dbf5:	stos   BYTE PTR es:[edi],al
  40dbf6:	shl    DWORD PTR [ecx+ecx*2+0x1e9ec7f8],1
  40dbfd:	cmp    DWORD PTR [ecx-0x5ef6bb8a],0x67ae630c
  40dc07:	pop    edi
  40dc08:	xor    bl,BYTE PTR [ebx-0x41]
  40dc0b:	arpl   WORD PTR [edi+0x1ec7c6ef],bx
  40dc11:	(bad)  
  40dc13:	aam    0x58
  40dc15:	push   ss
  40dc16:	popf   
  40dc17:	daa    
  40dc18:	xchg   edi,eax
  40dc19:	in     eax,dx
  40dc1a:	pop    edx
  40dc1b:	dec    edx
  40dc1c:	jmp    0x40dc84
  40dc1e:	add    ebx,esi
  40dc20:	sub    cl,BYTE PTR [esi]
  40dc22:	pop    ebx
  40dc23:	bound  esi,QWORD PTR [edx-0x2]
  40dc26:	sbb    BYTE PTR [edx+0x23],0xf9
  40dc2a:	into   
  40dc2b:	sahf   
  40dc2c:	inc    ebx
  40dc2d:	fwait
  40dc2e:	pop    ebx
  40dc2f:	scas   al,BYTE PTR es:[edi]
  40dc30:	or     eax,0xce537b7f
  40dc35:	pop    ebp
  40dc36:	and    dh,BYTE PTR [edx]
  40dc38:	shl    DWORD PTR [esi-0xccfc03b],1
  40dc3e:	pop    eax
  40dc3f:	(bad)  
  40dc40:	scas   al,BYTE PTR es:[edi]
  40dc41:	dec    ebx
  40dc42:	jge    0x40dc27
  40dc44:	push   esp
  40dc45:	or     dl,bh
  40dc47:	mov    bh,0xac
  40dc49:	xor    DWORD PTR [ebx],ecx
  40dc4b:	cmp    ch,BYTE PTR [eax+0x74504a9e]
  40dc51:	cmp    eax,0x598b3be2
  40dc56:	push   ecx
  40dc57:	sbb    dl,BYTE PTR [esi]
  40dc59:	or     BYTE PTR [eax+eax*4+0x1f],cl
  40dc5d:	fnsave [ebx+0x4f92e8b9]
  40dc63:	sub    ebp,DWORD PTR [esi-0x2b]
  40dc66:	add    eax,0x947b3105
  40dc6b:	xlat   BYTE PTR ds:[ebx]
  40dc6c:	push   ss
  40dc6d:	push   0x5605400d
  40dc72:	mul    DWORD PTR [edx+esi*2+0x17852945]
  40dc79:	push   ebp
  40dc7a:	inc    esi
  40dc7b:	scas   eax,DWORD PTR es:[edi]
  40dc7c:	dec    ecx
  40dc7d:	test   eax,0x8e51cbd0
  40dc82:	xor    eax,0xa6684853
  40dc87:	mov    DWORD PTR [ecx-0x56],0xfa13d5d7
  40dc8e:	lahf   
  40dc8f:	fsub   QWORD PTR [ebx-0x10]
  40dc92:	adc    eax,0x2712e8e8
  40dc97:	mov    bh,0x5a
  40dc99:	repz cmp eax,DWORD PTR [ecx+0x6b]
  40dc9d:	(bad)  
  40dc9e:	fadd   st(1),st
  40dca0:	sbb    eax,0x540a4334
  40dca5:	pop    es
  40dca6:	cld    
  40dca7:	adc    bh,al
  40dca9:	or     al,0x6f
  40dcab:	imul   eax,DWORD PTR [ecx-0x738f132f],0x6c167c0f
  40dcb5:	add    edi,esi
  40dcb7:	adc    esp,DWORD PTR [eax]
  40dcb9:	xor    ah,dl
  40dcbb:	stc    
  40dcbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcbd:	mul    BYTE PTR [edi+0x4d]
  40dcc0:	sbb    al,0x8b
  40dcc2:	mov    cl,0x81
  40dcc4:	sub    al,0xbd
  40dcc6:	imul   edx,DWORD PTR [edi],0xffffffa5
  40dcc9:	adc    esp,DWORD PTR [eax]
  40dccb:	(bad)  
  40dccc:	jl     0x40dc99
  40dcce:	cmp    eax,0xbb1ce3df
  40dcd3:	jne    0x40dcbd
  40dcd5:	and    eax,0x4e77be00
  40dcda:	push   ebx
  40dcdb:	add    eax,DWORD PTR [ebx-0x193953cb]
  40dce1:	jl     0x40dca1
  40dce3:	sub    ah,BYTE PTR [ebx+ebx*2+0x4]
  40dce7:	push   edx
  40dce8:	test   BYTE PTR [edx-0x25106bc],dh
  40dcee:	mov    al,ds:0x9a1d6cef
  40dcf3:	jae    0x40dccc
  40dcf5:	add    al,0xe7
  40dcf7:	pop    esi
  40dcf8:	(bad)  
  40dcf9:	clc    
  40dcfa:	fsubr  QWORD PTR [eax-0x7b]
  40dcfd:	shl    bh,0xfa
  40dd00:	pop    ecx
  40dd01:	iret   
  40dd02:	cwde   
  40dd03:	xchg   edi,eax
  40dd04:	dec    ebx
  40dd05:	fwait
  40dd06:	pop    edx
  40dd07:	ja     0x40dcaa
  40dd09:	push   cs
  40dd0a:	arpl   WORD PTR [edx],si
  40dd0c:	mov    bh,0xe6
  40dd0e:	cld    
  40dd0f:	stos   BYTE PTR es:[edi],al
  40dd10:	and    BYTE PTR [edx-0x1e],0xcf
  40dd14:	mov    al,ds:0xc8d20ef9
  40dd19:	fld    st(7)
  40dd1b:	or     al,0xd0
  40dd1d:	cmp    cl,cl
  40dd1f:	xor    BYTE PTR [ecx+0x7e],dl
  40dd22:	push   edi
  40dd23:	push   cs
  40dd24:	je     0x40dd1f
  40dd26:	pop    es
  40dd27:	fdivr  DWORD PTR [eax+0x5807e2b5]
  40dd2d:	adc    ecx,edx
  40dd2f:	push   cs
  40dd30:	push   cs
  40dd31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd32:	pop    esp
  40dd33:	add    ebx,edi
  40dd35:	mov    edx,DWORD PTR [edx+ecx*8-0x1f]
  40dd39:	scas   al,BYTE PTR es:[edi]
  40dd3a:	fnstsw WORD PTR [ebx]
  40dd3c:	and    dh,BYTE PTR [ebx+edi*4]
  40dd3f:	pop    ds
  40dd40:	mov    ecx,0xf1e1896b
  40dd45:	stos   BYTE PTR es:[edi],al
  40dd46:	pusha  
  40dd47:	int    0x5d
  40dd49:	jle    0x40dd74
  40dd4b:	sbb    ch,ch
  40dd4d:	push   ds
  40dd4e:	arpl   WORD PTR [edi+0x43],di
  40dd51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd52:	or     eax,0xac08230b
  40dd57:	popf   
  40dd58:	fcmove st,st(2)
  40dd5a:	imul   ebx,DWORD PTR [eax-0x360c8080],0xffffffca
  40dd61:	pop    esp
  40dd62:	(bad)  
  40dd63:	xor    ecx,DWORD PTR [esi+0x62ebf39b]
  40dd69:	stc    
  40dd6a:	inc    ecx
  40dd6b:	mov    dh,0xcd
  40dd6d:	adc    dh,dh
  40dd6f:	xor    BYTE PTR [ebx],cl
  40dd71:	inc    edx
  40dd72:	mov    edi,0x48eee799
  40dd77:	push   ebx
  40dd78:	jmp    0x40ddf3
  40dd7a:	jmp    0x4fe476f1
  40dd7f:	das    
  40dd80:	dec    esi
  40dd81:	dec    edi
  40dd82:	and    esp,DWORD PTR [ecx-0x7ac37b99]
  40dd88:	add    ch,BYTE PTR [esp+eax*8+0x3c1d70d3]
  40dd8f:	lods   eax,DWORD PTR ds:[esi]
  40dd90:	(bad)  
  40dd91:	fistp  DWORD PTR [ebp-0x6]
  40dd94:	scas   eax,DWORD PTR es:[edi]
  40dd95:	lahf   
  40dd96:	ins    BYTE PTR es:[edi],dx
  40dd97:	out    0xa4,eax
  40dd99:	push   edx
  40dd9a:	imul   BYTE PTR [edx-0x1c]
  40dd9d:	mov    eax,ds:0x16cb15e1
  40dda2:	sbb    BYTE PTR [ecx],ah
  40dda4:	add    al,0x81
  40dda6:	cmp    DWORD PTR [ebx-0x1],0xd510da92
  40ddad:	xor    BYTE PTR [eax-0x9a0f602],ah
  40ddb3:	push   edx
  40ddb4:	push   cs
  40ddb5:	rcl    BYTE PTR [ebx+0x6fe52aa6],0x19
  40ddbc:	adc    edi,edx
  40ddbe:	inc    edx
  40ddbf:	pusha  
  40ddc0:	pop    eax
  40ddc1:	fidiv  DWORD PTR [ebp+0x73]
  40ddc4:	or     cl,dl
  40ddc6:	mov    ah,bl
  40ddc8:	xchg   DWORD PTR ds:[ebx+0x6],ebx
  40ddcc:	dec    edi
  40ddcd:	std    
  40ddce:	pop    esi
  40ddcf:	inc    edx
  40ddd0:	pop    eax
  40ddd1:	das    
  40ddd2:	dec    esi
  40ddd3:	fdiv   DWORD PTR [ecx+0x12]
  40ddd6:	cli    
  40ddd7:	push   0xd93c6eff
  40dddc:	mov    eax,ds:0x7a39dda
  40dde1:	jmp    0x40de5e
  40dde3:	jmp    0xdcc9:0x511d82a8
  40ddea:	cmp    ecx,DWORD PTR [ecx-0x47]
  40dded:	mov    bh,0x2
  40ddef:	ds jno 0x40dd96
  40ddf2:	pushw  ss
  40ddf4:	mov    esp,0x48d98204
  40ddf9:	sub    DWORD PTR [edi-0x59da4b7b],ebx
  40ddff:	int    0x82
  40de01:	fwait
  40de02:	sbb    eax,0xfa84a918
  40de07:	fldenv ds:0xd40cb806
  40de0d:	int    0x71
  40de0f:	arpl   WORD PTR [edx],bx
  40de11:	xchg   BYTE PTR [ebp+0x205c10ce],ah
  40de17:	out    dx,al
  40de18:	gs (bad) 
  40de1a:	cmp    eax,DWORD PTR [eax+0x4b416f7f]
  40de20:	imul   ebx,DWORD PTR [ecx+0x27],0xedb4aba7
  40de27:	mov    ds:0x70c474e8,eax
  40de2c:	neg    esp
  40de2e:	bnd jo 0x40de5a
  40de31:	shr    BYTE PTR [edi],cl
  40de33:	jmp    0xb4d9:0xac13c930
  40de3a:	xchg   edi,eax
  40de3b:	jno    0x40ddfc
  40de3d:	jge    0x40de36
  40de3f:	xor    eax,0x7193bd12
  40de44:	test   al,0xcd
  40de46:	dec    edx
  40de47:	loop   0x40de89
  40de49:	bound  ebp,QWORD PTR [eax+0x8]
  40de4c:	push   es
  40de4d:	jmp    0x56e5c094
  40de52:	xor    BYTE PTR [eax-0x7c9f755d],ch
  40de58:	sub    BYTE PTR [ebp-0x34],dh
  40de5b:	pop    ebx
  40de5c:	out    0x9d,al
  40de5e:	(bad)  
  40de5f:	(bad)  [edx+eiz*4+0x27]
  40de63:	jle    0x40deb2
  40de65:	(bad)  
  40de67:	je     0x40de01
  40de69:	mov    ebx,0x6d710643
  40de6e:	or     ch,BYTE PTR [ebp-0x64]
  40de71:	and    bh,BYTE PTR [esi]
  40de73:	or     ch,bl
  40de75:	(bad)  
  40de77:	retf   
  40de78:	pop    ss
  40de79:	mov    ebx,0xb3ae17f7
  40de7e:	test   BYTE PTR es:0xfa527b7a,ch
  40de85:	repnz cld 
  40de87:	xchg   edx,eax
  40de88:	mov    ds:0xcb861b33,al
  40de8d:	jg     0x40dec1
  40de8f:	(bad)  [edx+0x1d]
  40de92:	mov    DWORD PTR [ecx],ebx
  40de94:	inc    esi
  40de95:	out    dx,eax
  40de96:	not    BYTE PTR [edi+eiz*2]
  40de99:	xchg   esi,eax
  40de9a:	call   0x716f:0xc90f1803
  40dea1:	cmp    edx,eax
  40dea3:	jo     0x40debb
  40dea5:	sbb    al,0xda
  40dea7:	pop    ebp
  40dea8:	jne    0x40de48
  40deaa:	test   eax,0xc0020e73
  40deaf:	js     0x40de36
  40deb1:	cmp    eax,0xc0161a59
  40deb6:	pop    eax
  40deb7:	aaa    
  40deb8:	cmp    DWORD PTR [edi+0x10],0xd0aaa3f6
  40debf:	pushf  
  40dec0:	int3   
  40dec1:	je     0x40df1a
  40dec3:	ret    0x807b
  40dec6:	fstp   DWORD PTR [edx+eiz*2]
  40dec9:	adc    al,0xa0
  40decb:	pop    eax
  40decc:	add    ecx,DWORD PTR [esi]
  40dece:	adc    DWORD PTR [edx],ebx
  40ded0:	add    BYTE PTR [eax-0x73],bh
  40ded3:	dec    ebx
  40ded4:	or     BYTE PTR [ecx+0xa],al
  40ded7:	fwait
  40ded8:	dec    ebx
  40ded9:	mov    cl,BYTE PTR [edi+0x2c802e1e]
  40dedf:	pop    edi
  40dee0:	rcl    BYTE PTR [ebp-0x4210f3fa],cl
  40dee6:	adc    eax,0xd6456c4a
  40deeb:	arpl   WORD PTR [esi-0x3b],sp
  40deee:	clc    
  40deef:	sbb    esp,DWORD PTR [ecx+0x4e5ada68]
  40def5:	mov    dh,0x9
  40def7:	add    DWORD PTR [edx-0x1eb8ae7e],0x4f
  40defe:	mov    esi,0x361adb4
  40df03:	cmp    eax,0xfc3ccf0b
  40df08:	mov    eax,0x3e496afa
  40df0d:	mov    esp,0x7058750
  40df12:	pushf  
  40df13:	loope  0x40df3e
  40df15:	mov    bl,0x89
  40df17:	add    esi,DWORD PTR [ebp+0x3c]
  40df1a:	inc    edi
  40df1b:	mov    ds:0xa6eff010,al
  40df20:	loopne 0x40defa
  40df22:	jmp    0x6d2:0x9152bb82
  40df29:	push   esi
  40df2a:	test   DWORD PTR [eax-0x68],edx
  40df2d:	das    
  40df2e:	into   
  40df2f:	ds iret 
  40df31:	mov    eax,0x5df86c25
  40df36:	daa    
  40df37:	not    BYTE PTR [ebx+0x66]
  40df3a:	cmp    al,BYTE PTR [ebp+0x5bb0890]
  40df40:	outs   dx,DWORD PTR ds:[esi]
  40df41:	mov    ebp,0x269ec485
  40df46:	es dec edi
  40df48:	sub    BYTE PTR [edi+0x6a],0xe7
  40df4c:	js     0x40df69
  40df4e:	(bad)  
  40df4f:	cmp    DWORD PTR [ebx-0x3b],eax
  40df52:	adc    dh,BYTE PTR [ebx]
  40df54:	js     0x40df2e
  40df56:	popa   
  40df57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df58:	sub    al,0xab
  40df5a:	sbb    DWORD PTR [eax-0x3547ea3c],esp
  40df60:	arpl   WORD PTR [edi+0x39],cx
  40df63:	test   DWORD PTR [edi-0x3],esi
  40df66:	clc    
  40df67:	js     0x40df54
  40df69:	popa   
  40df6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df6b:	sbb    al,0xee
  40df6d:	pushw  ss
  40df6f:	int3   
  40df70:	cmp    DWORD PTR ds:0x37f86902,eax
  40df76:	or     edi,DWORD PTR [edx-0x35e390fa]
  40df7c:	hlt    
  40df7d:	add    edx,ebp
  40df7f:	or     eax,DWORD PTR [eax]
  40df81:	pop    es
  40df82:	xor    DWORD PTR [edi+0x72e63f05],esi
  40df88:	sub    dh,BYTE PTR [esi]
  40df8a:	into   
  40df8b:	lods   eax,DWORD PTR ds:[esi]
  40df8c:	and    DWORD PTR [ecx],eax
  40df8e:	fnstenv [ecx]
  40df90:	mov    cl,0xc4
  40df92:	int    0xd6
  40df94:	adc    ch,BYTE PTR gs:[eax-0xc]
  40df98:	popa   
  40df99:	adc    ch,BYTE PTR [ecx+0x5cf1cc8e]
  40df9f:	xor    BYTE PTR [edx+0x56],ch
  40dfa2:	and    edx,DWORD PTR [ebp+eiz*1+0x7a7b1fe2]
  40dfa9:	das    
  40dfaa:	push   edi
  40dfab:	mov    cl,0x45
  40dfad:	xchg   esi,eax
  40dfae:	in     eax,0xf8
  40dfb0:	push   ss
  40dfb1:	out    dx,eax
  40dfb2:	loope  0x40df76
  40dfb4:	scas   al,BYTE PTR es:[edi]
  40dfb5:	add    ebx,DWORD PTR [edx]
  40dfb7:	popf   
  40dfb8:	call   0xc097db24
  40dfbd:	or     DWORD PTR [eax-0x5f],eax
  40dfc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfc1:	aad    0x14
  40dfc3:	aad    0x83
  40dfc5:	icebp  
  40dfc6:	jne    0x40e002
  40dfc8:	dec    esp
  40dfc9:	dec    esp
  40dfca:	hlt    
  40dfcb:	rcpps  xmm3,XMMWORD PTR [esi]
  40dfce:	dec    edx
  40dfcf:	out    dx,al
  40dfd0:	fwait
  40dfd1:	loop   0x40dfd3
  40dfd3:	sbb    cl,bh
  40dfd5:	jge    0x40e002
  40dfd7:	push   ebx
  40dfd8:	loop   0x40dfba
  40dfda:	dec    esp
  40dfdb:	push   0xfe2513d5
  40dfe0:	fcomp  QWORD PTR [eax+0x1b]
  40dfe3:	fnstenv [edi+0x3d]
  40dfe6:	sahf   
  40dfe7:	jecxz  0x40df78
  40dfe9:	jp     0x40dfa6
  40dfeb:	xor    al,0xcf
  40dfed:	xor    ah,BYTE PTR [ebp+0x0]
  40dff0:	sti    
  40dff1:	icebp  
  40dff2:	and    ecx,DWORD PTR [ebx-0x7b]
  40dff5:	outs   dx,BYTE PTR ds:[esi]
  40dff6:	sub    ecx,DWORD PTR [edi-0x11851af8]
  40dffc:	lods   al,BYTE PTR ds:[esi]
  40dffd:	lods   al,BYTE PTR ds:[esi]
  40dffe:	es into 
  40e000:	mov    bl,0x4b
  40e002:	dec    ecx
  40e003:	cmp    DWORD PTR [ecx],0x64
  40e006:	add    edx,0x846e602b
  40e00c:	mov    dl,0x76
  40e00e:	(bad)  
  40e00f:	bound  ebp,QWORD PTR [esi]
  40e011:	push   edi
  40e012:	fdivr  QWORD PTR [edi-0x39fa51ca]
  40e018:	test   DWORD PTR [eax+ebx*1-0x4e],esp
  40e01c:	pushw  0xe729
  40e020:	scas   eax,DWORD PTR es:[edi]
  40e021:	xchg   esp,eax
  40e022:	mov    cl,0x0
  40e024:	dec    edi
  40e025:	jmp    0x40e005
  40e027:	(bad)  
  40e028:	adc    cl,BYTE PTR [eax]
  40e02a:	xor    al,0xca
  40e02c:	lods   al,BYTE PTR ds:[esi]
  40e02d:	push   esi
  40e02e:	fst    QWORD PTR [ebx+0x741dc04a]
  40e034:	or     eax,0xace1b9f
  40e039:	(bad)  
  40e03a:	mov    eax,0xf112a62c
  40e03f:	and    BYTE PTR [edx],0x40
  40e042:	pop    ebp
  40e043:	jp     0x40e055
  40e045:	pop    ebx
  40e046:	jmp    0x91cf:0xb2b33d4b
  40e04d:	stc    
  40e04e:	fnstenv [edi]
  40e050:	(bad)  
  40e051:	adc    ah,BYTE PTR [ebp+0x63]
  40e054:	int    0x6b
  40e056:	inc    edx
  40e057:	sbb    esp,0x2c59e1ad
  40e05d:	inc    ecx
  40e05e:	push   esi
  40e05f:	jg     0x40e00c
  40e061:	(bad)  
  40e062:	and    esi,DWORD PTR [edx-0x23]
  40e065:	push   ds
  40e066:	into   
  40e067:	or     eax,0xae4d7b29
  40e06c:	mov    WORD PTR [esi+0x43148613],cs
  40e072:	mov    dh,0x96
  40e074:	mov    bh,BYTE PTR [esi-0x1d]
  40e077:	mov    esi,0x977a602a
  40e07c:	dec    ecx
  40e07d:	shr    BYTE PTR [edx+0x35aad249],0x16
  40e084:	xchg   edi,eax
  40e085:	jecxz  0x40e0e4
  40e087:	cs push 0x6c
  40e08a:	add    al,0xa9
  40e08c:	rcr    BYTE PTR [ecx-0x1d],cl
  40e08f:	fwait
  40e090:	dec    ecx
  40e091:	shl    BYTE PTR ds:0x799cd007,1
  40e098:	jae    0x40e104
  40e09a:	or     cl,BYTE PTR [ebp+edi*4-0x7b244760]
  40e0a1:	loopne 0x40e032
  40e0a3:	fs mov ebp,0xb2e0e8eb
  40e0a9:	sahf   
  40e0aa:	push   ss
  40e0ab:	popa   
  40e0ac:	imul   edx,DWORD PTR [edx-0xadc7ac7],0xc
  40e0b3:	imul   ebp,edx,0x6db0adf0
  40e0b9:	out    0x87,al
  40e0bb:	lahf   
  40e0bc:	test   al,0x1
  40e0be:	in     eax,dx
  40e0bf:	push   ss
  40e0c0:	add    edx,DWORD PTR [edi+0x17]
  40e0c3:	nop
  40e0c4:	aaa    
  40e0c5:	call   0xaa43ef2
  40e0ca:	mov    al,0x8e
  40e0cc:	pop    ds
  40e0cd:	xor    DWORD PTR [ecx+0x74],esi
  40e0d0:	adc    eax,0x47a0366
  40e0d5:	cmp    DWORD PTR [ebx+edi*4+0x121c5df1],edx
  40e0dc:	iret   
  40e0dd:	mov    ch,0x87
  40e0df:	and    eax,0xf3563a03
  40e0e4:	mov    cl,0xc7
  40e0e6:	addr16 pop edx
  40e0e8:	push   ss
  40e0e9:	jg     0x40e114
  40e0eb:	out    dx,al
  40e0ec:	mov    ds:0x7658c04c,eax
  40e0f1:	repnz rcr cl,1
  40e0f4:	sar    DWORD PTR [ebp-0x3a],0x54
  40e0f8:	jae    0x40e14d
  40e0fa:	repnz fucomip st,st(2)
  40e0fd:	mov    esi,0xca87a7e9
  40e102:	and    bl,BYTE PTR [esi]
  40e104:	sbb    DWORD PTR [ecx],0x1a
  40e107:	and    cl,ah
  40e109:	jmp    0x71fa:0x44ac78af
  40e110:	loopne 0x40e156
  40e112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e113:	xor    eax,0xd8252760
  40e118:	push   ebx
  40e119:	out    0x93,eax
  40e11b:	gs int3 
  40e11d:	push   esi
  40e11e:	out    0x40,al
  40e120:	out    0x1e,al
  40e122:	shr    DWORD PTR [ecx+0x33bc1e7a],cl
  40e128:	and    ch,BYTE PTR [ebp+edi*8-0x4a]
  40e12c:	ss mov ecx,0x1c886883
  40e132:	(bad)  
  40e133:	mov    ecx,0xe7c4d0f8
  40e138:	mov    ebp,0x73ec3bc7
  40e13d:	not    DWORD PTR [eax-0x57]
  40e140:	or     BYTE PTR [esi-0x5eab789b],ah
  40e146:	mov    eax,0xa3296b45
  40e14b:	adc    eax,0x32c2e2bc
  40e150:	nop
  40e151:	mov    ebx,DWORD PTR [eax+edi*2-0x7446f229]
  40e158:	lea    edi,[eax-0x6f]
  40e15b:	mov    cl,0x70
  40e15d:	fstp   DWORD PTR [esi-0xa05b622]
  40e163:	or     al,0xa3
  40e165:	push   edi
  40e166:	and    BYTE PTR [ecx-0x56],0xff
  40e16a:	aam    0x8
  40e16c:	add    eax,DWORD PTR [ecx]
  40e16e:	and    eax,0x784d3a6a
  40e173:	push   edx
  40e174:	cld    
  40e175:	dec    ebp
  40e176:	scas   al,BYTE PTR es:[edi]
  40e177:	pop    ds
  40e178:	add    ch,BYTE PTR [ebx]
  40e17a:	ins    BYTE PTR es:[edi],dx
  40e17b:	sbb    BYTE PTR ds:0x516ab100,bh
  40e181:	mov    esi,0x2264fdd1
  40e186:	mov    al,0xe2
  40e188:	mov    eax,0xa7f542f6
  40e18d:	adc    dl,BYTE PTR [ebx-0x3f]
  40e190:	xchg   BYTE PTR [esi],al
  40e192:	and    BYTE PTR [ebp+0x6b6a495f],cl
  40e198:	test   DWORD PTR [edi-0x12],eax
  40e19b:	in     eax,dx
  40e19c:	sub    al,0x99
  40e19e:	(bad)  
  40e19f:	bswap  ebx
  40e1a1:	push   edx
  40e1a2:	mov    eax,DWORD PTR [esi]
  40e1a4:	cmp    DWORD PTR [ecx+ecx*4-0x10],esp
  40e1a8:	out    dx,al
  40e1a9:	cdq    
  40e1aa:	sbb    ch,BYTE PTR [edx+0x43]
  40e1ad:	jne    0x40e1a5
  40e1af:	and    al,0x3f
  40e1b1:	sub    DWORD PTR [esi],edx
  40e1b3:	adc    BYTE PTR [edi+eiz*2+0x25],0x5f
  40e1b8:	ja     0x40e228
  40e1ba:	lods   eax,DWORD PTR ds:[esi]
  40e1bb:	in     al,dx
  40e1bc:	in     al,0x15
  40e1be:	jne    0x40e1ed
  40e1c0:	call   0xce7a6c68
  40e1c5:	push   ds
  40e1c6:	xchg   ebx,eax
  40e1c7:	add    DWORD PTR [edi+0x290f45c8],esi
  40e1cd:	lahf   
  40e1ce:	test   BYTE PTR [edx-0x7d],dh
  40e1d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1d2:	or     al,0x4f
  40e1d4:	ins    DWORD PTR es:[edi],dx
  40e1d5:	call   0x896c:0x2b67a782
  40e1dc:	mov    eax,ds:0x39d166d8
  40e1e1:	mov    bl,ch
  40e1e3:	add    eax,DWORD PTR [edx+0x28]
  40e1e6:	add    ecx,edx
  40e1e8:	call   0x22b8:0xbe2d815
  40e1ef:	adc    al,ah
  40e1f1:	mov    al,0x7d
  40e1f3:	and    eax,0x4966d7f0
  40e1f8:	mov    edx,0xb200e2fe
  40e1fd:	sub    edx,eax
  40e1ff:	loopne 0x40e23e
  40e201:	ss mov ebp,0xf24f4a11
  40e207:	mov    edx,0x62275582
  40e20c:	es mov BYTE PTR fs:[edi],al
  40e210:	and    al,0x10
  40e212:	pop    ss
  40e213:	dec    esp
  40e214:	retfw  
  40e216:	pop    ss
  40e217:	sub    dl,BYTE PTR [ebx+0x583a633a]
  40e21d:	paddq  mm0,QWORD PTR [esi]
  40e220:	retf   0xee32
  40e223:	sbb    eax,0x232307b8
  40e228:	xchg   DWORD PTR [ebx],ebx
  40e22a:	mov    ss,WORD PTR [eax-0x3b]
  40e22d:	mov    ds:0xe985c548,eax
  40e232:	inc    edi
  40e233:	loopne 0x40e26c
  40e235:	xor    al,0x1e
  40e237:	into   
  40e238:	pop    eax
  40e239:	and    edx,esi
  40e23b:	cmp    bl,ah
  40e23d:	(bad)
  40e241:	mov    ebx,0xb2c6b8d6
  40e246:	aam    0x34
  40e248:	xor    bh,ch
  40e24a:	mov    eax,0xfd102b22
  40e24f:	adc    BYTE PTR [eax+0x332fc7bf],bl
  40e255:	jp     0x40e1e2
  40e257:	xchg   edi,eax
  40e258:	out    0xe9,eax
  40e25a:	push   edx
  40e25b:	cmp    cl,ch
  40e25d:	mov    edi,0x6404a2f6
  40e262:	jne    0x40e237
  40e264:	mov    WORD PTR [edx-0x71f52719],es
  40e26a:	cmp    BYTE PTR [ebp+0x557b2c0f],bl
  40e270:	mov    WORD PTR [ecx],cs
  40e272:	scas   al,BYTE PTR es:[edi]
  40e273:	retf   
  40e274:	mov    esp,0x8ed6061d
  40e279:	int3   
  40e27a:	push   esi
  40e27b:	adc    eax,0x9dccfc6e
  40e280:	mov    al,ds:0x70ba44c2
  40e285:	xchg   ebp,eax
  40e286:	cmp    eax,0xc145f21b
  40e28b:	fwait
  40e28c:	pushf  
  40e28d:	mov    ?,WORD PTR [ecx]
  40e28f:	out    dx,al
  40e290:	lahf   
  40e291:	pop    ds
  40e292:	lds    esp,FWORD PTR [eax-0x7045878e]
  40e298:	cli    
  40e299:	jbe    0x40e2b2
  40e29b:	int3   
  40e29c:	jbe    0x40e2db
  40e29e:	pop    eax
  40e29f:	div    BYTE PTR [edx-0x189f5a0c]
  40e2a5:	lods   eax,DWORD PTR ds:[esi]
  40e2a6:	xchg   ebx,eax
  40e2a7:	sub    eax,esi
  40e2a9:	push   ss
  40e2aa:	sub    al,0x48
  40e2ac:	xchg   esp,eax
  40e2ad:	clc    
  40e2ae:	fs icebp 
  40e2b0:	call   0xc6a16086
  40e2b5:	jge    0x40e2fb
  40e2b7:	jge    0x40e2cb
  40e2b9:	pmullw mm2,QWORD PTR [esi-0x377cf4c]
  40e2c0:	(bad)  
  40e2c1:	and    al,0xbb
  40e2c3:	xor    BYTE PTR [edx-0x2c],dh
  40e2c6:	mov    edx,0xf4a82c69
  40e2cb:	(bad)  
  40e2cc:	lahf   
  40e2cd:	xchg   ecx,eax
  40e2ce:	scas   eax,DWORD PTR es:[edi]
  40e2cf:	cmp    esi,ebx
  40e2d1:	cs pop eax
  40e2d3:	daa    
  40e2d4:	daa    
  40e2d5:	out    0x2b,eax
  40e2d7:	jecxz  0x40e25a
  40e2d9:	jp     0x40e2de
  40e2db:	cmp    BYTE PTR [edi],ah
  40e2dd:	js     0x40e327
  40e2df:	cli    
  40e2e0:	push   ebx
  40e2e1:	inc    edx
  40e2e2:	pop    ss
  40e2e3:	sbb    DWORD PTR [ecx],0xd96fef54
  40e2e9:	dec    eax
  40e2ea:	addr16 data16 das 
  40e2ed:	leave  
  40e2ee:	into   
  40e2ef:	loopne 0x40e2bb
  40e2f1:	add    al,0xd6
  40e2f3:	mov    WORD PTR [esi+0x76],ss
  40e2f6:	add    BYTE PTR [eax+ecx*1+0x4c],0x69
  40e2fb:	test   eax,0x2ca69848
  40e300:	iret   
  40e301:	je     0x40e2bc
  40e303:	adc    al,0x30
  40e305:	pop    es
  40e306:	fsubr  QWORD PTR [ebx]
  40e308:	cmp    eax,ebp
  40e30a:	int3   
  40e30b:	dec    ecx
  40e30c:	loope  0x40e347
  40e30e:	inc    DWORD PTR [ecx+0x189ec4c7]
  40e314:	js     0x40e372
  40e316:	stos   DWORD PTR es:[edi],eax
  40e317:	add    bh,BYTE PTR [ebx-0x600540b4]
  40e31d:	mov    esp,0x4a74a447
  40e322:	icebp  
  40e323:	xor    dl,BYTE PTR [esi+0x51fc8ee0]
  40e329:	add    ecx,DWORD PTR [edi-0x64]
  40e32c:	bound  esp,QWORD PTR [ebx+0x7c]
  40e32f:	sub    edi,DWORD PTR [ebx]
  40e331:	pop    esi
  40e332:	inc    ecx
  40e333:	jmp    0x1eb1:0xa6334c9e
  40e33a:	mov    ds:0x3e1da10e,eax
  40e33f:	jle    0x40e303
  40e341:	cli    
  40e342:	xor    ah,BYTE PTR [edx+eax*1+0x43]
  40e346:	cmp    dl,0x64
  40e349:	bound  esp,QWORD PTR [edi+edx*1+0x17745634]
  40e350:	mov    esp,0x45cf3032
  40e355:	in     eax,0x32
  40e357:	popa   
  40e358:	pop    edx
  40e359:	dec    esp
  40e35a:	xor    cl,BYTE PTR [ecx]
  40e35c:	pop    esp
  40e35d:	out    dx,eax
  40e35e:	jp     0x40e3cc
  40e360:	push   ss
  40e361:	call   0x291e:0xd933afcc
  40e368:	pop    edx
  40e369:	sbb    al,0xcb
  40e36b:	push   ebx
  40e36c:	mov    ah,0xeb
  40e36e:	les    esi,FWORD PTR [eax+0x3b6fea5f]
  40e374:	in     eax,dx
  40e375:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e376:	or     BYTE PTR [ebx+0x6de63e89],dl
  40e37c:	cmp    DWORD PTR [ebp-0x50],0xffffffd5
  40e380:	(bad)  
  40e382:	push   es
  40e383:	jl     0x40e403
  40e385:	inc    ecx
  40e386:	ins    BYTE PTR es:[edi],dx
  40e387:	mov    edi,0x81ffeeca
  40e38c:	lods   eax,DWORD PTR ds:[esi]
  40e38d:	inc    esp
  40e38e:	mov    edi,0x61f3d
  40e393:	loop   0x40e36a
  40e395:	je     0x40e381
  40e397:	or     eax,0x89a516f4
  40e39c:	cmp    DWORD PTR [ecx+0x12],edx
  40e39f:	ins    DWORD PTR es:[edi],dx
  40e3a0:	or     DWORD PTR [ecx],edi
  40e3a2:	pusha  
  40e3a3:	sub    DWORD PTR [ebp+0x61],ebp
  40e3a6:	es aas 
  40e3a8:	cmp    al,0x83
  40e3aa:	push   ebp
  40e3ab:	bound  eax,QWORD PTR [ebp+0x2b2e0695]
  40e3b1:	nop
  40e3b2:	cmp    al,0xe3
  40e3b4:	into   
  40e3b5:	popf   
  40e3b6:	cmp    dh,bl
  40e3b8:	out    dx,al
  40e3b9:	je     0x40e370
  40e3bb:	mov    ds:0x4187baf6,al
  40e3c0:	mov    WORD PTR [ebx],cs
  40e3c2:	push   ebx
  40e3c3:	hlt    
  40e3c4:	xchg   BYTE PTR [edx+0x24],dh
  40e3c7:	sub    ecx,DWORD PTR [esi+0x283090bb]
  40e3cd:	in     al,dx
  40e3ce:	out    0x51,eax
  40e3d0:	mov    edi,0xf0a301f3
  40e3d5:	stos   BYTE PTR es:[edi],al
  40e3d6:	or     edi,eax
  40e3d8:	push   ebp
  40e3d9:	jecxz  0x40e363
  40e3db:	cmp    eax,0x8e54a7f5
  40e3e0:	and    ebx,DWORD PTR [ebx+ebx*1+0x774ce1d9]
  40e3e7:	into   
  40e3e8:	mov    esi,0x4218aa98
  40e3ed:	stos   BYTE PTR es:[edi],al
  40e3ee:	dec    esi
  40e3ef:	sbb    eax,0x9a6ea0ff
  40e3f4:	mov    ebx,0x34730967
  40e3f9:	jmp    0xb685:0xad8aae2a
  40e400:	addr16 or al,0x19
  40e403:	imul   esi,DWORD PTR [eax],0x23e438e5
  40e409:	imul   eax,DWORD PTR [esi],0x978adc98
  40e40f:	imul   BYTE PTR [edi-0x30]
  40e412:	jp     0x40e40e
  40e414:	int    0xf1
  40e416:	stos   DWORD PTR es:[edi],eax
  40e417:	into   
  40e418:	mov    ebx,DWORD PTR [ebx]
  40e41a:	mov    eax,ds:0xb4fe2780
  40e41f:	call   0x3478:0xd744911b
  40e426:	inc    ebp
  40e427:	in     al,0xb2
  40e429:	sub    ebp,ebx
  40e42b:	or     esp,DWORD PTR [esi]
  40e42d:	cmp    edx,esi
  40e42f:	cmp    DWORD PTR [ecx-0x9],edx
  40e432:	enter  0x550b,0x48
  40e436:	push   ebx
  40e437:	jecxz  0x40e3e8
  40e439:	jecxz  0x40e473
  40e43b:	jno    0x40e445
  40e43d:	push   cs
  40e43e:	fisttp DWORD PTR [eax]
  40e440:	push   edx
  40e441:	scas   eax,DWORD PTR es:[edi]
  40e442:	adc    DWORD PTR [ecx+0x4af1a9cf],edi
  40e448:	cmp    cl,BYTE PTR [ebx-0xae33f75]
  40e44e:	adc    ah,BYTE PTR ds:0x81f31e3c
  40e454:	pushf  
  40e455:	sbb    al,0x62
  40e457:	mov    ?,edx
  40e459:	xchg   DWORD PTR ds:0xe2ede573,edx
  40e45f:	or     DWORD PTR [edx-0x45],ecx
  40e462:	xchg   DWORD PTR [edx-0x4b],esp
  40e465:	inc    eax
  40e466:	pop    ecx
  40e467:	arpl   WORD PTR [eax-0x355e8dd3],bp
  40e46d:	xor    bl,bl
  40e46f:	inc    esi
  40e470:	sbb    esp,DWORD PTR [ecx]
  40e472:	or     al,0xbe
  40e474:	bsf    esi,DWORD PTR [edi]
  40e477:	or     dl,0xdb
  40e47a:	or     DWORD PTR [eax+0x43],ebx
  40e47d:	lock sbb al,0xcd
  40e480:	scas   eax,DWORD PTR es:[edi]
  40e481:	out    dx,al
  40e482:	sbb    edi,eax
  40e484:	in     eax,dx
  40e485:	jmp    0xa144:0xa81c033
  40e48c:	retf   
  40e48d:	add    BYTE PTR [ecx],dl
  40e48f:	inc    eax
  40e490:	dec    ebp
  40e491:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e492:	fadd   DWORD PTR [eax+0x45]
  40e495:	ret    
  40e496:	bnd jbe 0x40e49a
  40e499:	xor    bh,BYTE PTR [ebp-0x49]
  40e49c:	shl    DWORD PTR ss:[eax+0x15],1
  40e4a0:	inc    ebp
  40e4a1:	cli    
  40e4a2:	jg     0x40e439
  40e4a4:	dec    esp
  40e4a5:	mov    al,ah
  40e4a7:	es ja  0x40e456
  40e4aa:	cmc    
  40e4ab:	test   DWORD PTR [ebx-0x32783e43],0xb72f223c
  40e4b5:	je     0x40e493
  40e4b7:	jb     0x40e4b6
  40e4b9:	out    dx,eax
  40e4ba:	test   eax,0xb29b95b7
  40e4bf:	sub    BYTE PTR [ebx-0x67d065df],0x22
  40e4c6:	test   ah,ah
  40e4c8:	pop    ds
  40e4c9:	and    BYTE PTR [eax],bl
  40e4cb:	retf   
  40e4cc:	stos   DWORD PTR es:[edi],eax
  40e4cd:	int    0x58
  40e4cf:	in     al,dx
  40e4d0:	mov    cl,0xde
  40e4d2:	out    dx,al
  40e4d3:	cmp    esi,DWORD PTR [esp+edx*8+0x3736de41]
  40e4da:	and    eax,0xdc280ed8
  40e4df:	add    ch,BYTE PTR [ecx+0x71dbfdec]
  40e4e5:	inc    ebx
  40e4e6:	push   esi
  40e4e7:	outs   dx,BYTE PTR ds:[esi]
  40e4e8:	mov    gs,WORD PTR ds:0x96e45d3a
  40e4ee:	xchg   ebx,eax
  40e4ef:	sub    bl,dl
  40e4f1:	scas   eax,DWORD PTR es:[edi]
  40e4f2:	or     eax,0xa3dc50d7
  40e4f7:	loope  0x40e4a0
  40e4f9:	test   BYTE PTR [edx],0xd2
  40e4fc:	jge    0x40e493
  40e4fe:	jmp    0x40e4d6
  40e500:	call   0xd2e3:0x7c1b37a6
  40e507:	(bad)  
  40e508:	cli    
  40e509:	mov    edi,0xb9b42d9d
  40e50e:	xchg   edx,eax
  40e50f:	mov    edi,0x8f5fd49b
  40e514:	retf   
  40e515:	mov    eax,0x69921063
  40e51a:	xor    edi,ebx
  40e51c:	pop    DWORD PTR [edx+0x30f801e1]
  40e522:	or     edx,DWORD PTR [eax+edi*1+0x4e810f7d]
  40e529:	push   esp
  40e52a:	iret   
  40e52b:	pop    esp
  40e52c:	test   bh,cl
  40e52e:	popf   
  40e52f:	sub    al,0xe8
  40e531:	pop    eax
  40e532:	stos   BYTE PTR es:[edi],al
  40e533:	fwait
  40e534:	aad    0x1e
  40e536:	test   BYTE PTR [edx-0x7c],0xe3
  40e53a:	jae    0x40e599
  40e53c:	push   ecx
  40e53d:	call   0xadf9682c
  40e542:	dec    esp
  40e543:	mov    bh,0x37
  40e545:	mov    al,0xc9
  40e547:	jmp    0x40e5ba
  40e549:	(bad)  
  40e54a:	sbb    DWORD PTR [esi],ebx
  40e54c:	sbb    eax,DWORD PTR [ebx-0x106649fd]
  40e552:	mov    ebp,0x4b402c23
  40e557:	adc    bl,BYTE PTR [edx]
  40e559:	out    dx,eax
  40e55a:	rcr    BYTE PTR [edi-0x1f],cl
  40e55d:	cwde   
  40e55e:	mov    ah,0x4a
  40e560:	push   ebx
  40e561:	stc    
  40e562:	sar    DWORD PTR [ecx-0x40ee6403],0xf5
  40e569:	inc    ebx
  40e56a:	pop    ds
  40e56b:	and    esi,DWORD PTR [eax]
  40e56d:	xchg   ecx,eax
  40e56e:	cmp    ebp,DWORD PTR [edi-0x76dc287d]
  40e574:	retf   0xff34
  40e577:	jmp    0x40e5c6
  40e579:	pop    ds
  40e57a:	popa   
  40e57b:	cwde   
  40e57c:	push   cs
  40e57d:	inc    ebx
  40e57e:	outs   dx,DWORD PTR ds:[esi]
  40e57f:	fwait
  40e580:	xchg   edi,eax
  40e581:	fld    QWORD PTR [ebx]
  40e583:	add    BYTE PTR [ecx-0x2b],dh
  40e586:	push   eax
  40e587:	mov    ds:0x689f70d5,al
  40e58c:	retf   0x92cb
  40e58f:	adc    BYTE PTR [esi-0x5a],ah
  40e592:	adc    DWORD PTR [ebx-0xa20be49],0x5e
  40e599:	ins    DWORD PTR es:[edi],dx
  40e59a:	fisub  DWORD PTR [ebx]
  40e59c:	test   al,0x84
  40e59e:	in     eax,dx
  40e59f:	js     0x40e5ef
  40e5a1:	dec    esp
  40e5a2:	xor    ebx,DWORD PTR [ecx]
  40e5a4:	std    
  40e5a5:	cmc    
  40e5a6:	mov    ah,ch
  40e5a8:	jmp    0xca70:0x67617e1f
  40e5af:	sbb    eax,DWORD PTR [ecx-0x7e]
  40e5b2:	cwde   
  40e5b3:	retf   0xf707
  40e5b6:	push   ecx
  40e5b7:	call   0x1d34:0xea790ca7
  40e5be:	push   edi
  40e5bf:	push   esp
  40e5c0:	hlt    
  40e5c1:	and    dl,BYTE PTR [eax+edx*1]
  40e5c4:	push   0x4952c75d
  40e5c9:	call   0x4c6a:0x50d19dd5
  40e5d0:	and    ah,BYTE PTR [edx+0x58]
  40e5d3:	loopne 0x40e5e8
  40e5d5:	xchg   ebx,eax
  40e5d6:	mov    ebx,0xab6dd62b
  40e5db:	pop    eax
  40e5dc:	xor    DWORD PTR [ebx-0xa8b7f10],esi
  40e5e2:	cwde   
  40e5e3:	pop    eax
  40e5e4:	(bad)  [ebx-0x7f]
  40e5e7:	jno    0x40e64e
  40e5e9:	and    BYTE PTR [esi-0x7e553f01],ch
  40e5ef:	repz aaa 
  40e5f1:	push   ebx
  40e5f2:	and    DWORD PTR [edx+0x2b],esp
  40e5f5:	jecxz  0x40e651
  40e5f7:	mov    eax,0x9dbf08a3
  40e5fc:	and    eax,DWORD PTR [edx-0x33]
  40e5ff:	loope  0x40e67c
  40e601:	(bad)  
  40e602:	or     ecx,edi
  40e604:	ss fucomi st,st(3)
  40e607:	push   ds
  40e608:	jmp    0xde6647cb
  40e60d:	jl     0x40e5a6
  40e60f:	inc    esp
  40e610:	mov    esp,0x8d116d9a
  40e615:	pop    ecx
  40e616:	ret    
  40e617:	mov    ebx,DWORD PTR [esi+0x6514429e]
  40e61d:	xchg   edi,eax
  40e61e:	stc    
  40e61f:	call   0x35181331
  40e624:	add    eax,0x9ddacb57
  40e629:	imul   eax
  40e62b:	jmp    0xbdec:0xa1b27ac1
  40e632:	pop    esi
  40e633:	pusha  
  40e634:	xor    al,0xb4
  40e636:	mov    ebx,DWORD PTR [edx+esi*8-0x25]
  40e63a:	push   ecx
  40e63b:	leave  
  40e63c:	dec    edi
  40e63d:	cdq    
  40e63e:	sub    eax,0xcfb571d3
  40e643:	(bad)  
  40e644:	test   ah,0x29
  40e647:	(bad)  
  40e649:	add    bl,BYTE PTR [ecx]
  40e64b:	inc    edi
  40e64c:	xor    eax,0xd8829b45
  40e651:	je     0x40e61c
  40e653:	bound  esi,QWORD PTR [eax]
  40e655:	fwait
  40e656:	sub    eax,0x87eed7d9
  40e65b:	repnz test BYTE PTR [esp+eax*4],dl
  40e65f:	out    0x1a,al
  40e661:	int3   
  40e662:	out    0x8d,eax
  40e664:	and    al,0x6a
  40e666:	push   edx
  40e667:	sub    DWORD PTR [ecx+eiz*4],ebx
  40e66a:	and    DWORD PTR [ebx],esp
  40e66c:	sub    al,0x84
  40e66e:	push   edi
  40e66f:	(bad)  
  40e670:	stc    
  40e671:	xor    BYTE PTR [ecx],0x37
  40e674:	sbb    dh,cl
  40e676:	lea    eax,[edi+ebx*4]
  40e679:	popf   
  40e67a:	or     al,0x99
  40e67c:	pop    edx
  40e67d:	rcl    ebp,0x72
  40e680:	dec    ecx
  40e681:	rcr    BYTE PTR [esi+0x56],cl
  40e684:	test   eax,0xfad1e32a
  40e689:	dec    edx
  40e68a:	jbe    0x40e6d7
  40e68c:	shr    BYTE PTR [ebp-0x48],cl
  40e68f:	mov    dh,0xc8
  40e691:	or     eax,0xb7ccc2d6
  40e696:	cwde   
  40e697:	loop   0x40e6e9
  40e699:	cmp    al,0xee
  40e69b:	xor    al,0xd0
  40e69d:	inc    edi
  40e69e:	jge    0x40e70f
  40e6a0:	or     BYTE PTR ds:[ebp-0x4185aba8],bh
  40e6a7:	ficom  DWORD PTR [edi+0x2bb267e7]
  40e6ad:	and    ebx,esi
  40e6af:	and    al,0x96
  40e6b1:	or     bh,dl
  40e6b3:	sbb    al,0x7e
  40e6b5:	out    0xd3,al
  40e6b7:	cli    
  40e6b8:	mov    bh,0xd7
  40e6ba:	jmp    0xe5b2d4f1
  40e6bf:	in     al,dx
  40e6c0:	pop    ebx
  40e6c1:	out    0xd5,al
  40e6c3:	adc    al,BYTE PTR [edi-0x5d]
  40e6c6:	imul   ebx,DWORD PTR [ebx],0x1f6124db
  40e6cc:	or     dl,dh
  40e6ce:	adc    DWORD PTR [eax+eiz*4],esp
  40e6d1:	mov    bl,0xbb
  40e6d3:	int3   
  40e6d4:	(bad)  
  40e6d5:	lods   eax,DWORD PTR ds:[esi]
  40e6d6:	div    DWORD PTR [eax-0xd]
  40e6d9:	fstp   QWORD PTR [ebx+0x34]
  40e6dc:	mov    ch,0x23
  40e6de:	jmp    0x92de4ed
  40e6e3:	push   eax
  40e6e4:	adc    ch,BYTE PTR [ecx]
  40e6e6:	mov    cl,BYTE PTR [eax+0x52]
  40e6e9:	out    0xc2,eax
  40e6eb:	dec    esp
  40e6ec:	fsubrp st(6),st
  40e6ee:	xlat   BYTE PTR ds:[ebx]
  40e6ef:	xchg   DWORD PTR [edi+0x30],eax
  40e6f2:	mov    bl,0x4f
  40e6f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6f5:	lds    ebp,FWORD PTR [ebp+0x105252f9]
  40e6fb:	loope  0x40e6f3
  40e6fd:	xor    dl,BYTE PTR [edi-0x2cc9c9a5]
  40e703:	lods   eax,DWORD PTR ds:[esi]
  40e704:	je     0x40e690
  40e706:	sub    ecx,DWORD PTR [ebx]
  40e708:	pop    es
  40e709:	leave  
  40e70a:	jnp    0x40e72d
  40e70c:	sub    cl,BYTE PTR [edx-0x32044cf8]
  40e712:	ss sbb edx,esp
  40e715:	cdq    
  40e716:	stc    
  40e717:	mov    al,ds:0xd9a4503f
  40e71c:	mov    dl,0x43
  40e71e:	add    dh,dh
  40e720:	mov    WORD PTR [edi],?
  40e722:	mov    ebp,0xd6dbdb87
  40e727:	xchg   ebp,eax
  40e728:	js     0x40e75e
  40e72a:	xchg   esp,eax
  40e72b:	mov    WORD PTR [esi],fs
  40e72d:	xchg   ecx,eax
  40e72e:	mov    ecx,0xcd2cd666
  40e734:	sbb    dl,ch
  40e736:	cdq    
  40e737:	mov    al,ds:0xa132b521
  40e73c:	stos   BYTE PTR es:[edi],al
  40e73d:	push   cs
  40e73e:	fmul   QWORD PTR [edi-0x7675dd40]
  40e744:	(bad)  
  40e745:	cmp    al,0xe1
  40e747:	mov    cl,0x82
  40e749:	jno    0x40e6e0
  40e74b:	lods   al,BYTE PTR ds:[esi]
  40e74c:	ins    DWORD PTR es:[edi],dx
  40e74d:	in     al,0x60
  40e74f:	in     al,dx
  40e750:	push   esp
  40e751:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e752:	pop    ebx
  40e753:	mov    edi,0xcca68ce6
  40e758:	pop    ebx
  40e759:	cwde   
  40e75a:	sub    edi,ebx
  40e75c:	xchg   edx,eax
  40e75d:	mov    ah,0x67
  40e75f:	mov    ecx,0xa47de3d6
  40e764:	mov    ecx,0xc091da1c
  40e769:	cdq    
  40e76a:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40e76c:	imul   eax,DWORD PTR es:[edi+0x2],0x747a892e
  40e774:	mov    eax,0x1c62f231
  40e779:	xchg   esp,eax
  40e77a:	mov    dh,0xd8
  40e77c:	mov    edx,0x51f3fb3e
  40e781:	les    ebx,FWORD PTR [edx]
  40e783:	sub    BYTE PTR [eax+0x1],ch
  40e786:	adc    BYTE PTR [edi+eiz*8-0x7],bh
  40e78a:	mov    bh,0xd2
  40e78c:	sahf   
  40e78d:	dec    esp
  40e78e:	ficomp WORD PTR [esi]
  40e790:	sahf   
  40e791:	sbb    al,0x78
  40e793:	sub    ecx,DWORD PTR [edi]
  40e795:	addr16 loope 0x40e80d
  40e798:	repz cmp DWORD PTR [ecx+0x25],edi
  40e79c:	adc    eax,0x749ab499
  40e7a1:	outs   dx,BYTE PTR ds:[esi]
  40e7a2:	sub    eax,0x1b9dccdc
  40e7a7:	mov    ebp,0x5d595dd
  40e7ac:	call   0xbb5e:0x46acff12
  40e7b3:	out    dx,eax
  40e7b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7b5:	das    
  40e7b6:	jno    0x40e74b
  40e7b8:	and    DWORD PTR [eax+0x41],eax
  40e7bb:	jbe    0x40e777
  40e7bd:	add    dh,BYTE PTR [ecx]
  40e7bf:	(bad)  
  40e7c0:	iret   
  40e7c1:	cmp    cl,BYTE PTR [esi+0x5a]
  40e7c4:	mov    ah,0xc8
  40e7c6:	inc    eax
  40e7c7:	mov    al,0xd1
  40e7c9:	jne    0x40e7f2
  40e7cb:	mov    edx,0x5031749c
  40e7d0:	std    
  40e7d1:	call   0x88135217
  40e7d6:	inc    esi
  40e7d7:	fidiv  DWORD PTR [esi+0x2ba9f3bc]
  40e7dd:	sub    BYTE PTR [ebp-0x7d67052a],0x66
  40e7e4:	pop    edx
  40e7e5:	sbb    eax,DWORD PTR [esi-0x406571c1]
  40e7eb:	and    DWORD PTR [ecx+0x4c0c985c],ebp
  40e7f1:	mov    DWORD PTR [edx-0xb50a56a],esi
  40e7f7:	sub    bh,0x50
  40e7fa:	pop    esp
  40e7fb:	je     0x40e7d0
  40e7fd:	xchg   DWORD PTR [eax],ebp
  40e7ff:	ds pop ecx
  40e801:	out    dx,eax
  40e802:	or     DWORD PTR [eax+0x116197c4],0x6b
  40e809:	fcmovb st,st(5)
  40e80b:	aad    0xa3
  40e80d:	aas    
  40e80e:	jno    0x40e827
  40e810:	shl    DWORD PTR [edi-0x6f],cl
  40e813:	jo     0x40e846
  40e815:	scas   eax,DWORD PTR es:[edi]
  40e816:	iret   
  40e817:	mov    bl,0x33
  40e819:	gs fs jno 0x40e872
  40e81d:	ror    DWORD PTR [ebp+0x280cf8ee],1
  40e823:	in     eax,dx
  40e824:	mov    edx,0x2f492c91
  40e829:	push   0x4dee0c0e
  40e82e:	mov    ah,0xdc
  40e830:	jmp    0x40e84f
  40e832:	repnz iret 
  40e834:	fdivr  DWORD PTR [ebx]
  40e836:	pop    ss
  40e837:	pop    ebp
  40e838:	rol    DWORD PTR [edx],1
  40e83a:	out    dx,al
  40e83b:	outs   dx,DWORD PTR ds:[esi]
  40e83c:	cmp    DWORD PTR [esi-0x1c0a74ab],ecx
  40e842:	lea    eax,[eax+0x7b69e691]
  40e848:	xchg   ecx,eax
  40e849:	jb     0x40e81c
  40e84b:	jbe    0x40e87d
  40e84d:	sbb    ah,bl
  40e84f:	pop    ss
  40e850:	shl    DWORD PTR [edx+0x1],cl
  40e853:	push   esi
  40e854:	arpl   WORD PTR [eax+ecx*8+0x5b],cx
  40e858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e859:	adc    al,0x83
  40e85b:	mov    edi,0xc2462da3
  40e860:	push   cs
  40e861:	adc    esp,DWORD PTR fs:[edi-0x515be767]
  40e868:	loopne 0x40e88b
  40e86a:	inc    ebx
  40e86b:	imul   eax,edi,0x618becdf
  40e871:	sahf   
  40e872:	fild   QWORD PTR [edi-0x21]
  40e875:	repz push esp
  40e877:	jnp    0x40e8e9
  40e879:	add    DWORD PTR [eax],ebp
  40e87b:	push   cs
  40e87c:	mov    cl,0x76
  40e87e:	sbb    DWORD PTR [eax-0x4a3f5bc8],edi
  40e884:	sti    
  40e885:	mov    ch,0x1b
  40e887:	pop    esp
  40e888:	ins    DWORD PTR es:[edi],dx
  40e889:	push   ss
  40e88a:	dec    edx
  40e88b:	in     eax,0xba
  40e88d:	fidivr WORD PTR [edx+0x3f5f93c6]
  40e893:	add    al,0x62
  40e895:	xor    ch,BYTE PTR [ebx+eiz*8-0x20a727d0]
  40e89c:	adc    eax,ebx
  40e89e:	(bad)  
  40e89f:	(bad)  
  40e8a0:	out    dx,al
  40e8a1:	rcr    DWORD PTR [esi+eiz*1+0x37],0x7b
  40e8a6:	mov    bl,BYTE PTR [ecx+0x5f]
  40e8a9:	test   eax,0x18251dc0
  40e8ae:	add    DWORD PTR [eax-0x69],0x64
  40e8b2:	mov    al,ds:0xfed1365f
  40e8b7:	(bad)  
  40e8b8:	jmp    0x40e8aa
  40e8ba:	or     al,0xd1
  40e8bc:	(bad)  
  40e8bd:	pop    ebx
  40e8be:	push   0x8189f1f4
  40e8c3:	add    DWORD PTR [eax],ebx
  40e8c5:	(bad)  
  40e8c6:	xchg   ebp,eax
  40e8c7:	mov    dh,0x9a
  40e8c9:	cmp    eax,eax
  40e8cb:	clc    
  40e8cc:	sub    cl,BYTE PTR [eax-0x22779041]
  40e8d2:	fsubr  QWORD PTR [eax+ecx*4-0x475e85fb]
  40e8d9:	lea    esi,[eax+0x4]
  40e8dc:	cwde   
  40e8dd:	or     ebp,DWORD PTR [ebp-0x45]
  40e8e0:	cwde   
  40e8e1:	push   es
  40e8e2:	fdivr  st(2),st
  40e8e4:	sbb    DWORD PTR [ecx],esi
  40e8e6:	jne    0x40e952
  40e8e8:	sbb    DWORD PTR [edx-0x45],edx
  40e8eb:	push   ss
  40e8ec:	inc    esi
  40e8ed:	out    dx,eax
  40e8ee:	ficomp DWORD PTR gs:[eax]
  40e8f1:	retf   0x7b59
  40e8f4:	call   0x84b6:0x98fbd65a
  40e8fb:	fistp  WORD PTR [eax+0x40a7b85b]
  40e901:	popf   
  40e902:	pop    edi
  40e903:	cli    
  40e904:	mov    ch,0xd8
  40e906:	dec    edx
  40e907:	neg    DWORD PTR [ecx+0x76]
  40e90a:	loop   0x40e945
  40e90c:	dec    ebp
  40e90d:	add    esi,DWORD PTR [eax]
  40e90f:	cmp    DWORD PTR [esi-0x51a19639],ebp
  40e915:	scas   eax,DWORD PTR es:[edi]
  40e916:	pop    ebp
  40e917:	inc    ebx
  40e918:	fcom   QWORD PTR [eax]
  40e91a:	inc    ecx
  40e91b:	loopne 0x40e95c
  40e91d:	push   ds
  40e91e:	fstp   st(4)
  40e920:	gs mov ecx,0x8f2e8f59
  40e926:	rcr    DWORD PTR [eax],1
  40e928:	jg     0x40e919
  40e92a:	push   edx
  40e92b:	fldenv [ecx-0x5c8ae5ec]
  40e931:	(bad)  
  40e932:	sbb    DWORD PTR [eax-0x15],ecx
  40e935:	cdq    
  40e936:	test   al,0xd7
  40e938:	xlat   BYTE PTR fs:[ebx]
  40e93a:	inc    eax
  40e93b:	call   0x18f4:0x42594d24
  40e942:	imul   DWORD PTR [edi+eax*8+0x1e050bc3]
  40e949:	popf   
  40e94a:	or     eax,DWORD PTR [edx]
  40e94c:	dec    ecx
  40e94d:	cld    
  40e94e:	dec    edx
  40e94f:	pop    ecx
  40e950:	iret   
  40e951:	sbb    DWORD PTR [ebp+0x45e87cc],ebx
  40e957:	std    
  40e958:	jmp    FWORD PTR [ecx+0x20]
  40e95b:	cmp    al,dh
  40e95d:	retf   0x3567
  40e960:	dec    esp
  40e961:	or     al,BYTE PTR [edi+0x6fa914d8]
  40e967:	pop    ebp
  40e968:	push   ebx
  40e969:	retf   
  40e96a:	xchg   esi,eax
  40e96b:	inc    ecx
  40e96c:	cmp    al,0xa3
  40e96f:	shl    DWORD PTR [esp+esi*1+0x2b73fc65],1
  40e976:	fcmovnu st,st(3)
  40e978:	dec    ecx
  40e979:	xor    al,0xa8
  40e97b:	and    esi,DWORD PTR [esi]
  40e97d:	aad    0x4f
  40e97f:	repnz fldenv [edi-0x5c]
  40e983:	jp     0x40e9a8
  40e985:	dec    ecx
  40e986:	adc    eax,0x3f3f3059
  40e98b:	sbb    eax,0xab321260
  40e990:	sub    ecx,esi
  40e992:	or     BYTE PTR [eax-0x5],0x86
  40e996:	fild   WORD PTR [eax+0x30]
  40e999:	sub    bh,BYTE PTR [edx+eiz*1]
  40e99c:	jbe    0x40e9c6
  40e99e:	pop    edx
  40e99f:	repz pop ecx
  40e9a1:	pop    ebx
  40e9a2:	mov    al,0x10
  40e9a4:	push   ss
  40e9a5:	stos   BYTE PTR es:[edi],al
  40e9a6:	adc    ebp,DWORD PTR [edx]
  40e9a8:	push   esi
  40e9a9:	mov    cl,0x47
  40e9ab:	in     al,0x51
  40e9ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9ae:	leave  
  40e9af:	icebp  
  40e9b0:	ffreep st(1)
  40e9b2:	pop    edi
  40e9b3:	adc    DWORD PTR [edi+eiz*4-0x3c],0xce3ef5bc
  40e9bb:	inc    esp
  40e9bc:	push   ebx
  40e9bd:	int3   
  40e9be:	setb   BYTE PTR [ebp+esi*2-0x3827c313]
  40e9c6:	std    
  40e9c7:	mov    edi,0x255369b2
  40e9cc:	jae    0x40e9d4
  40e9ce:	loop   0x40e956
  40e9d0:	lds    esp,FWORD PTR [ecx-0x6e426cf3]
  40e9d6:	jp     0x40ea54
  40e9d8:	jge    0x40e9b6
  40e9da:	shl    BYTE PTR [esi-0x67],cl
  40e9dd:	xor    ch,dl
  40e9df:	inc    esp
  40e9e0:	cli    
  40e9e1:	mov    dl,0x67
  40e9e3:	xor    eax,0x586e0501
  40e9e8:	mov    ecx,0xb7b93dcb
  40e9ed:	jle    0x40e9b6
  40e9ef:	repz enter 0x7e17,0xd8
  40e9f4:	mov    ds:0x1075e219,al
  40e9f9:	loopne 0x40e999
  40e9fb:	popa   
  40e9fc:	jmp    0xe066:0xcf59fa38
  40ea03:	fld    DWORD PTR [eax-0x4344a179]
  40ea09:	push   ebx
  40ea0a:	xchg   ebp,eax
  40ea0b:	ret    0xf6ce
  40ea0e:	mov    al,0x6
  40ea10:	imul   ebx,DWORD PTR [esi],0x7f
  40ea13:	js     0x40ea02
  40ea15:	xor    ch,ah
  40ea17:	mul    DWORD PTR [eax+0x9]
  40ea1a:	test   eax,0x1d7fcd2d
  40ea1f:	mov    ds:0xaf845ac9,eax
  40ea24:	mov    edx,DWORD PTR [edx]
  40ea26:	pop    ss
  40ea27:	scas   eax,DWORD PTR es:[edi]
  40ea28:	jmp    0x7082:0x9ad20dbb
  40ea2f:	xchg   ebx,eax
  40ea30:	cmc    
  40ea31:	imul   eax,DWORD PTR [ecx-0x24],0x893ce69a
  40ea38:	imul   esp,DWORD PTR [ebp+0x7b],0xdf69b17a
  40ea3f:	push   cs
  40ea40:	rcl    esi,0xa1
  40ea43:	push   0xffffff96
  40ea45:	mov    al,ds:0x70c83bc4
  40ea4a:	dec    esp
  40ea4b:	out    dx,eax
  40ea4c:	xchg   ecx,eax
  40ea4d:	pop    ecx
  40ea4e:	(bad)  
  40ea4f:	mov    ds:0x3983802c,eax
  40ea54:	and    eax,0xf5e847db
  40ea59:	(bad)  
  40ea5a:	push   ecx
  40ea5b:	dec    edx
  40ea5c:	xor    bl,BYTE PTR [ebp+ebp*4+0x681929e4]
  40ea63:	std    
  40ea64:	mov    ecx,ebx
  40ea66:	jbe    0x40eae2
  40ea68:	outs   dx,DWORD PTR ds:[esi]
  40ea69:	aaa    
  40ea6a:	mov    eax,ds:0x11a18ba4
  40ea6f:	mov    al,0xfd
  40ea71:	pop    esi
  40ea72:	jge    0x40eab9
  40ea74:	and    ebx,DWORD PTR [eax-0x23a9ee7e]
  40ea7a:	cmp    al,bh
  40ea7c:	inc    esp
  40ea7d:	cmp    DWORD PTR [eax-0x22],esi
  40ea80:	(bad)  
  40ea81:	xor    ecx,DWORD PTR [edx-0x68]
  40ea84:	mov    cl,bh
  40ea86:	stos   DWORD PTR es:[edi],eax
  40ea87:	push   es
  40ea88:	mov    bh,0x44
  40ea8a:	mov    edi,0xbd0cbe0d
  40ea8f:	or     ch,BYTE PTR [ecx-0x336f0c6f]
  40ea95:	(bad)  
  40ea96:	jle    0x40eb0d
  40ea98:	add    DWORD PTR [ebp+0x4361fcd4],esi
  40ea9e:	add    dh,BYTE PTR [esi-0x4562cb3d]
  40eaa4:	mov    edi,DWORD PTR [ecx]
  40eaa6:	shl    cl,1
  40eaa8:	jno    0x40eafe
  40eaaa:	retf   
  40eaab:	ds push ss
  40eaad:	push   ebx
  40eaae:	retf   
  40eaaf:	ret    
  40eab0:	pop    ecx
  40eab1:	pusha  
  40eab2:	outs   dx,BYTE PTR ds:[esi]
  40eab3:	nop
  40eab4:	cli    
  40eab5:	jne    0x40eb31
  40eab7:	arpl   bp,ax
  40eab9:	cli    
  40eaba:	jns    0x40ea8c
  40eabc:	mov    dh,0x2b
  40eabe:	or     dh,ah
  40eac0:	dec    ebx
  40eac1:	fidivr DWORD PTR [ecx-0x2b552dd]
  40eac7:	or     DWORD PTR [edx],edx
  40eac9:	idiv   BYTE PTR [ebp+ebp*1-0x57]
  40eacd:	fsub   QWORD PTR [eax+0x4f]
  40ead0:	(bad)  
  40ead2:	imul   edi,edi,0xaa9a337f
  40ead8:	dec    edx
  40ead9:	jl     0x40eabd
  40eadb:	xor    eax,0xae59fd15
  40eae0:	fstp   TBYTE PTR [ebp+ecx*1-0x38363650]
  40eae7:	jae    0x40eaa3
  40eae9:	dec    ebx
  40eaea:	jno    0x40eb0f
  40eaec:	ds js  0x40eb6e
  40eaef:	mov    eax,0x8fd9bfdb
  40eaf4:	push   edx
  40eaf5:	mov    al,ds:0x5382bb7e
  40eafa:	(bad)  
  40eafb:	fmul   st(2),st
  40eafd:	inc    edx
  40eafe:	mov    al,ds:0x50b9ace1
  40eb03:	mov    BYTE PTR ds:0xa1327344,dh
  40eb09:	mov    ecx,0xaa6e06b5
  40eb0e:	push   es
  40eb0f:	xchg   esp,eax
  40eb10:	popf   
  40eb11:	scas   al,BYTE PTR es:[edi]
  40eb12:	xchg   edi,eax
  40eb13:	int    0x9c
  40eb15:	outs   dx,BYTE PTR ds:[esi]
  40eb16:	or     ebp,esi
  40eb18:	shr    BYTE PTR [ecx-0x61],0xd5
  40eb1c:	fwait
  40eb1d:	sub    ebx,DWORD PTR [ebp-0x68c9504b]
  40eb23:	and    al,0xea
  40eb25:	sbb    BYTE PTR [edi+0x2b],ch
  40eb28:	mov    esi,0x9d5b3308
  40eb2d:	xchg   esp,eax
  40eb2e:	popf   
  40eb2f:	xchg   cl,al
  40eb31:	and    eax,0x61a18b98
  40eb36:	mov    eax,0x7b168f2f
  40eb3b:	push   0xde9fe711
  40eb40:	push   ss
  40eb41:	daa    
  40eb42:	xor    BYTE PTR [ecx-0x59],ah
  40eb45:	cmc    
  40eb46:	xchg   edi,eax
  40eb47:	scas   al,BYTE PTR es:[edi]
  40eb48:	mov    dh,0xde
  40eb4a:	or     eax,0x69cb66df
  40eb4f:	mov    esp,0x47151c57
  40eb54:	ds (bad) 
  40eb56:	mov    ebp,0xdbf3b9f3
  40eb5b:	mov    ch,0xc
  40eb5d:	ss int3 
  40eb5f:	jo     0x40ebc7
  40eb61:	es xor al,dh
  40eb64:	stc    
  40eb65:	repz or dl,BYTE PTR [edx]
  40eb68:	adc    al,0xb
  40eb6a:	outs   dx,DWORD PTR ds:[esi]
  40eb6b:	nop
  40eb6c:	mov    WORD PTR [edx-0x4e3d9e26],es
  40eb72:	push   esp
  40eb73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb74:	cmc    
  40eb75:	and    eax,esp
  40eb77:	loopne 0x40eba9
  40eb79:	xchg   esp,eax
  40eb7a:	bound  esi,QWORD PTR [esi+eax*4-0x75]
  40eb7e:	lea    edx,[ebx]
  40eb80:	pop    eax
  40eb81:	inc    ecx
  40eb82:	test   BYTE PTR [ebx+0x192d016d],ch
  40eb88:	iret   
  40eb89:	idiv   DWORD PTR [ebx+0x43c7ec0e]
  40eb8f:	in     al,0x82
  40eb91:	sub    BYTE PTR [ebp-0x8],al
  40eb94:	sbb    esp,ebp
  40eb96:	sub    al,0x1f
  40eb98:	in     eax,dx
  40eb99:	arpl   WORD PTR [ecx],dx
  40eb9b:	cmc    
  40eb9c:	out    0x3b,al
  40eb9e:	idiv   edx
  40eba0:	push   edi
  40eba1:	inc    ebx
  40eba2:	sbb    al,0xec
  40eba4:	mov    DWORD PTR [edx-0x56],ecx
  40eba7:	cmp    BYTE PTR [eax],dl
  40eba9:	mov    cl,0x9f
  40ebab:	out    0xc8,al
  40ebad:	inc    edi
  40ebae:	inc    ecx
  40ebaf:	cmp    BYTE PTR ds:0x1d614d7,ch
  40ebb5:	pop    esp
  40ebb6:	mov    dh,0x20
  40ebb8:	jmp    0x40ebc9
  40ebba:	dec    ecx
  40ebbb:	push   ebx
  40ebbc:	daa    
  40ebbd:	mov    esp,0xde37e40
  40ebc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebc3:	inc    eax
  40ebc4:	shr    BYTE PTR [edx+0x4d],0x6d
  40ebc8:	mov    ds:0x60020731,eax
  40ebcd:	test   eax,0x9c296997
  40ebd2:	mov    al,ds:0xed157177
  40ebd7:	stos   DWORD PTR es:[edi],eax
  40ebd8:	adc    esp,ebx
  40ebda:	retf   0xb921
  40ebdd:	jge    0x40ebb3
  40ebdf:	cdq    
  40ebe0:	(bad)  
  40ebe2:	retf   
  40ebe3:	(bad)  
  40ebe4:	cmc    
  40ebe5:	outs   dx,DWORD PTR ds:[esi]
  40ebe6:	fcomp  DWORD PTR [edi-0x73]
  40ebe9:	leave  
  40ebea:	repz aas 
  40ebec:	push   es
  40ebed:	(bad)  
  40ebee:	cld    
  40ebef:	test   ecx,ebp
  40ebf1:	add    DWORD PTR [eax-0x11],ebp
  40ebf4:	sub    BYTE PTR [esi],ch
  40ebf6:	stc    
  40ebf7:	mov    al,ds:0xea5b9fe
  40ebfc:	shr    BYTE PTR [eax+0x4b9116dc],1
  40ec02:	test   al,cl
  40ec04:	pop    eax
  40ec05:	pop    ebx
  40ec06:	sti    
  40ec07:	inc    esp
  40ec08:	gs retf 
  40ec0a:	(bad)  
  40ec0b:	loop   0x40ec09
  40ec0d:	addr16 cwde 
  40ec0f:	outs   dx,BYTE PTR ds:[esi]
  40ec10:	jb     0x40ebec
  40ec12:	int    0x1d
  40ec14:	dec    ecx
  40ec15:	(bad)  
  40ec16:	bound  eax,QWORD PTR ds:0xb664815e
  40ec1c:	aam    0x59
  40ec1e:	ds (bad) 
  40ec21:	out    0xdb,eax
  40ec23:	push   esi
  40ec24:	ja     0x40ec71
  40ec26:	ins    DWORD PTR es:[edi],dx
  40ec27:	jo     0x40ec5b
  40ec29:	push   0xffffffcf
  40ec2b:	aas    
  40ec2c:	mov    dh,0xb5
  40ec2e:	add    eax,0xd742f15e
  40ec33:	outs   dx,BYTE PTR ds:[esi]
  40ec34:	push   ebx
  40ec35:	inc    esi
  40ec36:	xchg   ebx,eax
  40ec37:	push   ebx
  40ec38:	ffreep st(6)
  40ec3a:	adc    eax,0x92c75a20
  40ec3f:	jle    0x40ec57
  40ec41:	sti    
  40ec42:	cmp    al,0x79
  40ec44:	cwde   
  40ec45:	popf   
  40ec46:	test   DWORD PTR [ebp+0x10],edx
  40ec49:	add    bl,dl
  40ec4b:	sbb    eax,0x81bfa5b3
  40ec50:	inc    edx
  40ec52:	xchg   ecx,eax
  40ec53:	add    al,0x83
  40ec55:	sub    al,BYTE PTR [ebp+0x2]
  40ec58:	shl    DWORD PTR [esi+0x3f],1
  40ec5b:	or     BYTE PTR [eax-0x29],bh
  40ec5e:	ins    DWORD PTR es:[edi],dx
  40ec5f:	(bad)  
  40ec60:	cmc    
  40ec61:	les    ecx,FWORD PTR ds:0xeb412835
  40ec67:	iret   
  40ec68:	jno    0x40ec61
  40ec6a:	and    al,0x3e
  40ec6c:	sbb    bl,0xcf
  40ec6f:	pop    ecx
  40ec70:	aas    
  40ec71:	pop    edx
  40ec72:	pop    eax
  40ec73:	aam    0x18
  40ec75:	cmp    al,BYTE PTR [ecx+0x65]
  40ec78:	inc    esi
  40ec79:	add    DWORD PTR ds:[ebp-0x1b840c88],eax
  40ec80:	scas   eax,DWORD PTR es:[edi]
  40ec81:	pop    esi
  40ec82:	jb     0x40ec1d
  40ec84:	add    al,0x18
  40ec86:	xchg   esp,eax
  40ec87:	mov    eax,ds:0xee826c1a
  40ec8c:	pushf  
  40ec8d:	sahf   
  40ec8e:	and    DWORD PTR [esi-0x33],ebp
  40ec91:	mov    dl,0x46
  40ec93:	dec    ebp
  40ec94:	push   edi
  40ec95:	sbb    ah,BYTE PTR [ebp+0x6a]
  40ec98:	sbb    dl,BYTE PTR [ecx+0x1f]
  40ec9b:	mov    ch,0xcd
  40ec9d:	loope  0x40ecaa
  40ec9f:	cdq    
  40eca0:	jb     0x40ecfe
  40eca2:	push   edx
  40eca3:	push   edi
  40eca4:	push   esp
  40eca5:	enter  0x89fa,0x7a
  40eca9:	sub    DWORD PTR ds:0x5cb4ae5c,ebp
  40ecaf:	xchg   BYTE PTR [eax-0x4ce79ff2],bh
  40ecb5:	pop    es
  40ecb6:	inc    ecx
  40ecb7:	sti    
  40ecb8:	into   
  40ecb9:	and    BYTE PTR [edi],dl
  40ecbb:	(bad)  
  40ecbd:	daa    
  40ecbe:	dec    esi
  40ecbf:	hlt    
  40ecc0:	xchg   BYTE PTR [edi-0x138371c],ch
  40ecc6:	pop    edi
  40ecc7:	add    ecx,DWORD PTR [edi+eiz*1]
  40ecca:	pop    ebx
  40eccb:	cmp    BYTE PTR ds:0xfc6d545c,bh
  40ecd1:	lock neg BYTE PTR [eax+ebx*8]
  40ecd5:	cmp    al,0x7f
  40ecd7:	xchg   ecx,eax
  40ecd8:	mov    ds:0xfd9f4b93,al
  40ecdd:	ror    DWORD PTR [edi+eax*2-0x11],1
  40ece1:	in     eax,dx
  40ece2:	mov    ebp,0x86537029
  40ece7:	push   esi
  40ece8:	sub    BYTE PTR [eax],cl
  40ecea:	ds retf 
  40ecec:	pop    ss
  40eced:	lods   al,BYTE PTR ds:[esi]
  40ecee:	sahf   
  40ecef:	(bad)  [ebp+0x6e]
  40ecf2:	js     0x40ed0f
  40ecf4:	mov    ebp,0x1a64efb3
  40ecf9:	jmp    0xb0acf617
  40ecfe:	lahf   
  40ecff:	ror    DWORD PTR [edx+0x14d9f941],cl
  40ed05:	ins    DWORD PTR es:[edi],dx
  40ed06:	inc    DWORD PTR [edi]
  40ed08:	mov    edx,0x425db87b
  40ed0d:	push   cs
  40ed0e:	shl    ebx,1
  40ed10:	xlat   BYTE PTR ds:[ebx]
  40ed11:	test   eax,0x16bdbc9c
  40ed16:	fucomip st,st(5)
  40ed18:	inc    edi
  40ed19:	mov    WORD PTR [eax+0x6f],es
  40ed1c:	mov    ebp,0x362e0fd
  40ed21:	fimul  DWORD PTR [ecx]
  40ed23:	sub    eax,0xf125202e
  40ed28:	adc    eax,0xa9e7f310
  40ed2d:	lahf   
  40ed2e:	add    cl,al
  40ed30:	cmp    edx,esi
  40ed32:	pusha  
  40ed33:	xor    bl,BYTE PTR [eax+0x73b01d24]
  40ed39:	aam    0x1e
  40ed3b:	xchg   esp,eax
  40ed3c:	inc    ebp
  40ed3d:	outs   dx,BYTE PTR ds:[esi]
  40ed3e:	ss nop
  40ed40:	fabs   
  40ed42:	cmp    ebx,DWORD PTR [ecx]
  40ed44:	outs   dx,BYTE PTR ds:[esi]
  40ed45:	pop    esp
  40ed46:	aaa    
  40ed47:	retf   0x15f2
  40ed4a:	adc    al,0x33
  40ed4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed4d:	fisttp DWORD PTR [esi-0x1e5000d1]
  40ed53:	inc    ebx
  40ed54:	push   ss
  40ed55:	and    eax,0x796a2232
  40ed5a:	mov    ebx,0xda1f145
  40ed5f:	sahf   
  40ed60:	mov    ebp,0xdf720cd
  40ed65:	daa    
  40ed66:	mov    WORD PTR [ecx-0x18],?
  40ed69:	mov    ebx,0xd56b00bf
  40ed6e:	bswap  edx
  40ed70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed71:	push   ss
  40ed72:	cld    
  40ed73:	xor    eax,0x45096207
  40ed78:	addr16 mov eax,0x4255ef14
  40ed7e:	mov    ebx,0xf74ea3c4
  40ed83:	or     bh,ch
  40ed85:	xchg   ebx,eax
  40ed86:	dec    edi
  40ed87:	ficomp WORD PTR [edx-0x2a]
  40ed8a:	in     al,dx
  40ed8b:	add    BYTE PTR [ebp+0x7894291],al
  40ed91:	je     0x40ed42
  40ed93:	fs or  esi,edx
  40ed96:	rcr    BYTE PTR [esi],1
  40ed98:	adc    DWORD PTR [edx-0x3cf0d28e],ebx
  40ed9e:	mov    ds:0x7bd9a8e0,al
  40eda3:	das    
  40eda4:	push   esp
  40eda5:	xor    DWORD PTR [edi],esi
  40eda7:	pop    ds
  40eda8:	or     BYTE PTR [ecx],cl
  40edaa:	sbb    eax,0x63b657e3
  40edaf:	and    dl,dl
  40edb1:	pop    ds
  40edb2:	in     eax,0xf4
  40edb4:	adc    esi,DWORD PTR [ebx-0x33]
  40edb7:	mov    ds:0x719091ef,al
  40edbc:	cmp    DWORD PTR [ebx],edx
  40edbe:	je     0x40ed59
  40edc0:	mov    esp,0x4400c56d
  40edc5:	push   ebx
  40edc6:	movlps xmm1,QWORD PTR [edi+ebp*1+0x2]
  40edcb:	jno    0x40edd5
  40edcd:	es inc ebx
  40edcf:	cmc    
  40edd0:	push   edx
  40edd1:	(bad)  
  40edd2:	in     eax,0x6b
  40edd4:	and    DWORD PTR [eax],eax
  40edd6:	repnz xor eax,0xe2550cee
  40eddc:	fistp  DWORD PTR es:[esi-0x75dec98b]
  40ede3:	jmp    0xdb33:0xc97900f8
  40edea:	iret   
  40edeb:	iret   
  40edec:	xchg   ecx,eax
  40eded:	das    
  40edee:	test   eax,0xb6c66509
  40edf3:	sub    dh,BYTE PTR [edx+0x0]
  40edf6:	(bad)  
  40edf7:	clc    
  40edf8:	retf   
  40edf9:	adc    ah,BYTE PTR [eax+esi*4+0x77]
  40edfd:	adc    BYTE PTR [ecx],0x78
  40ee00:	push   ecx
  40ee01:	jno    0x40ee35
  40ee03:	mov    dl,0xe6
  40ee05:	and    ch,BYTE PTR [ecx+edx*4+0x65]
  40ee09:	pop    edx
  40ee0a:	fstp   TBYTE PTR [ebp+0x47c5cccb]
  40ee10:	aad    0xaa
  40ee12:	mov    ecx,0x581d3f8f
  40ee17:	adc    al,0x6c
  40ee19:	ss adc al,0x69
  40ee1c:	mov    ds:0xd906608a,al
  40ee21:	mov    dh,0xa2
  40ee23:	icebp  
  40ee24:	cmp    al,0xdc
  40ee26:	sub    esi,edi
  40ee28:	clc    
  40ee29:	jne    0x40edf7
  40ee2b:	push   esi
  40ee2c:	into   
  40ee2d:	mov    bh,0x51
  40ee2f:	icebp  
  40ee30:	sbb    BYTE PTR [esi+0xdd2f36e],cl
  40ee36:	rcr    DWORD PTR [edi],cl
  40ee38:	push   esi
  40ee39:	push   eax
  40ee3a:	jmp    0x40ee22
  40ee3c:	add    DWORD PTR [ebp+eiz*8-0x1ed76562],ecx
  40ee43:	(bad)
  40ee47:	xor    bl,al
  40ee49:	inc    eax
  40ee4a:	mov    ebx,0xe11464d5
  40ee4f:	imul   edi,DWORD PTR [edi-0x5c1609ac],0x3d
  40ee56:	xor    ebp,DWORD PTR [esi]
  40ee58:	loopne 0x40ee74
  40ee5a:	or     BYTE PTR ds:0x846759ed,al
  40ee60:	push   ecx
  40ee61:	lock fbstp TBYTE PTR [ebx+0x77]
  40ee65:	sub    cl,bl
  40ee67:	inc    edi
  40ee68:	lock mov ds:0x7ff6e8ad,eax
  40ee6e:	ret    
  40ee6f:	mov    edi,0xeaa846f
  40ee74:	and    BYTE PTR ss:[ebx+edi*8],bl
  40ee78:	jge    0xf78870b2
  40ee7e:	xlat   BYTE PTR ds:[ebx]
  40ee7f:	add    edi,DWORD PTR [esp+ecx*2]
  40ee82:	sub    bh,BYTE PTR [eax+0x5a39d1f9]
  40ee88:	pop    ds
  40ee89:	retf   0x92d2
  40ee8c:	in     eax,0x6f
  40ee8e:	sti    
  40ee8f:	enter  0xd247,0x25
  40ee93:	call   0x95f2:0xf46d972d
  40ee9a:	inc    esi
  40ee9b:	mov    dh,0x7e
  40ee9d:	pop    ebp
  40ee9e:	xchg   ebp,eax
  40ee9f:	aad    0x5
  40eea1:	je     0x40ee61
  40eea3:	mov    ebx,0x37958418
  40eea8:	sub    al,0x17
  40eeaa:	adc    al,0x87
  40eeac:	(bad)  
  40eeaf:	dec    esi
  40eeb0:	push   ds
  40eeb1:	mov    BYTE PTR [ecx+0x21],al
  40eeb4:	cmc    
  40eeb5:	test   BYTE PTR [ebx-0x5f],bl
  40eeb8:	out    0xa0,al
  40eeba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eebb:	outs   dx,BYTE PTR ds:[esi]
  40eebc:	push   esp
  40eebd:	sahf   
  40eebe:	mov    dh,0x17
  40eec0:	popf   
  40eec1:	dec    edx
  40eec2:	es push ds
  40eec4:	push   es
  40eec5:	icebp  
  40eec6:	aam    0xe
  40eec8:	stos   DWORD PTR es:[edi],eax
  40eec9:	adc    BYTE PTR [edx+ebx*1-0x8f86b56],bh
  40eed0:	out    0xd7,al
  40eed2:	jno    0x40eec0
  40eed4:	push   0x6bd59ef9
  40eed9:	adc    bl,BYTE PTR [edi+esi*2+0x199b5c5e]
  40eee0:	mov    bh,0x85
  40eee2:	leave  
  40eee3:	mov    bh,0x9d
  40eee5:	js     0x40ee6f
  40eee7:	mov    esi,0x5280554e
  40eeec:	jle    0x40eecf
  40eeee:	ins    DWORD PTR es:[edi],dx
  40eeef:	leave  
  40eef0:	sar    DWORD PTR [ecx-0x4e],1
  40eef3:	fucomip st,st(1)
  40eef5:	outs   dx,BYTE PTR ds:[esi]
  40eef6:	ss ror bh,0xcf
  40eefa:	in     eax,dx
  40eefb:	sbb    DWORD PTR [esp+eax*1],ecx
  40eefe:	xor    dh,cl
  40ef00:	out    0xe1,eax
  40ef02:	sbb    ebp,DWORD PTR [esi-0x2f]
  40ef05:	push   ss
  40ef06:	in     eax,0x80
  40ef08:	mov    eax,ds:0x5da50291
  40ef0d:	adc    DWORD PTR [ecx+ecx*1-0x33af2156],edx
  40ef14:	pop    esp
  40ef15:	jge    0x40ef7a
  40ef17:	cmp    dl,BYTE PTR [esi]
  40ef19:	(bad)  
  40ef1a:	xor    al,0x5c
  40ef1c:	cmp    bl,cl
  40ef1e:	jb     0x40ef4d
  40ef20:	push   es
  40ef21:	adc    DWORD PTR [ecx-0x5b],edx
  40ef24:	js     0x40ef1f
  40ef26:	cmp    DWORD PTR [edi-0x78],edx
  40ef29:	ja     0x40ef62
  40ef2b:	lods   eax,DWORD PTR ds:[esi]
  40ef2c:	pop    ebx
  40ef2d:	das    
  40ef2e:	and    BYTE PTR [ebp+0x1],cl
  40ef31:	push   0xffffffa8
  40ef33:	das    
  40ef34:	fisttp DWORD PTR [eax+edi*1-0x7c0415ac]
  40ef3b:	xchg   BYTE PTR ds:0x1033a65d,al
  40ef41:	ret    0xb0f3
  40ef44:	inc    ebp
  40ef45:	std    
  40ef46:	(bad)  ds:0x22a2e5c6
  40ef4c:	mov    BYTE PTR [edx+0x75b70231],dl
  40ef52:	ins    DWORD PTR es:[edi],dx
  40ef53:	dec    eax
  40ef54:	ins    DWORD PTR es:[edi],dx
  40ef55:	fimul  DWORD PTR [edx-0x79]
  40ef58:	cs aaa 
  40ef5a:	push   0x46ec3f1c
  40ef5f:	mov    al,al
  40ef61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef62:	mov    ds:0x54b601e9,eax
  40ef67:	scas   eax,DWORD PTR es:[edi]
  40ef68:	lock lock cmp edi,DWORD PTR [ebx+eax*2+0x6e]
  40ef6e:	scas   al,BYTE PTR es:[edi]
  40ef6f:	cmc    
  40ef70:	xor    BYTE PTR [esi],cl
  40ef72:	lock add eax,0xf65ba975
  40ef78:	imul   eax,edx,0xd700d840
  40ef7e:	ss jae 0x40ef50
  40ef81:	test   BYTE PTR [ebx-0x1e],0x81
  40ef85:	xchg   DWORD PTR [edx-0x53c4eaba],esi
  40ef8b:	in     eax,0xf
  40ef8d:	sar    ah,0x1f
  40ef90:	adc    DWORD PTR [ebp+ebx*1+0x2cb93714],esi
  40ef97:	jno    0x40efa4
  40ef99:	scas   eax,DWORD PTR es:[edi]
  40ef9a:	enter  0xeb10,0x50
  40ef9e:	(bad)  
  40ef9f:	stc    
  40efa0:	icebp  
  40efa1:	ss xor al,0x90
  40efa4:	pop    edi
  40efa5:	jl     0x40efca
  40efa7:	push   esp
  40efa8:	mov    edi,0xca9a9302
  40efad:	jge    0x40ef51
  40efaf:	xor    ecx,ebp
  40efb1:	push   ebx
  40efb2:	hlt    
  40efb3:	sub    BYTE PTR [edx],ch
  40efb5:	les    esi,FWORD PTR [edi]
  40efb7:	packuswb mm6,QWORD PTR [ebp+0x324108a2]
  40efbe:	rcr    BYTE PTR [esp+eiz*2-0x5c5bdc6a],cl
  40efc5:	js     0x40ef53
  40efc7:	lods   al,BYTE PTR ds:[esi]
  40efc8:	mov    ds:0x69264ac1,eax
  40efcd:	nop    DWORD PTR ds:0xe3c5f8e6
  40efd4:	cmp    BYTE PTR [ebp+0x5c46f790],bh
  40efda:	jecxz  0x40f03d
  40efdc:	push   esi
  40efdd:	dec    eax
  40efde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efdf:	je     0x40f04e
  40efe1:	fadd   st(0),st
  40efe3:	push   0x648e3ddc
  40efe8:	je     0x40ef6d
  40efea:	(bad)  
  40efeb:	retf   0x5a06
  40efee:	pusha  
  40efef:	adc    al,0xa1
  40eff1:	test   BYTE PTR ss:[edx-0x73],al
  40eff5:	pop    ebp
  40eff6:	add    BYTE PTR ds:0xa18f134a,al
  40effc:	mov    gs,WORD PTR [edx+0x5a]
  40efff:	(bad)  
  40f000:	or     eax,0xa78c28bf
  40f005:	addr16 addr16 pop ebp
  40f008:	shl    dl,0xc2
  40f00b:	cmp    BYTE PTR [edi-0x780526af],ch
  40f011:	not    BYTE PTR [esi+ecx*4-0x45]
  40f015:	arpl   WORD PTR [ebp+0x7a1b1d01],ax
  40f01b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f01c:	fsub   st(3),st
  40f01e:	push   ss
  40f01f:	xchg   DWORD PTR [ebx-0x24b46f61],edx
  40f025:	ds push ds
  40f027:	mov    edi,0x2d6c272b
  40f02c:	in     eax,0xef
  40f02e:	cs inc ecx
  40f030:	and    ecx,ebp
  40f032:	xor    BYTE PTR [ebx-0x1a03cbb7],bh
  40f038:	rol    BYTE PTR [ebx],0xd8
  40f03b:	pop    ecx
  40f03c:	push   es
  40f03d:	ds xor edi,ebp
  40f040:	bnd jmp 0xa1ca858b
  40f046:	test   BYTE PTR ds:[eax+0x4dbbb85],dh
  40f04d:	jecxz  0x40f082
  40f04f:	rol    BYTE PTR [edi],0xca
  40f052:	ins    BYTE PTR es:[edi],dx
  40f053:	js     0x40f0d2
  40f055:	mov    al,ah
  40f057:	or     eax,0xfb172057
  40f05c:	jae    0x40f04d
  40f05e:	fs ja  0x40f031
  40f061:	es mov ebx,0x87d1762a
  40f067:	lock lds ebp,FWORD PTR [edx-0x5b]
  40f06b:	icebp  
  40f06c:	push   ebp
  40f06d:	loopne 0x40f09e
  40f06f:	adc    al,BYTE PTR ds:0xc21bdaf3
  40f075:	repnz (bad) 
  40f078:	pop    ds
  40f079:	jnp    0x40f051
  40f07b:	add    edi,DWORD PTR [ecx+0x74a3fab7]
  40f081:	aaa    
  40f082:	sub    al,0xb9
  40f084:	cmp    ah,BYTE PTR [eax]
  40f086:	sbb    ah,dh
  40f088:	push   ss
  40f089:	inc    ecx
  40f08a:	pop    esp
  40f08b:	mov    bh,0x1c
  40f08d:	aas    
  40f08e:	push   0xc3aef324
  40f093:	fwait
  40f094:	cli    
  40f095:	mov    ds:0xda4e3545,al
  40f09a:	adc    DWORD PTR [edx],0x10
  40f09d:	int    0x44
  40f09f:	call   0xd96a:0xa53ae912
  40f0a6:	pop    ebp
  40f0a7:	dec    esi
  40f0a8:	popf   
  40f0a9:	jae    0x40f0e0
  40f0ab:	pop    eax
  40f0ac:	or     DWORD PTR [esi+0x65],edi
  40f0af:	inc    edi
  40f0b0:	adc    eax,0x9d857419
  40f0b5:	shl    al,0x4d
  40f0b8:	dec    esp
  40f0b9:	sub    eax,0xa1dfa665
  40f0be:	mov    ch,0xc5
  40f0c0:	xor    BYTE PTR [esi],dl
  40f0c2:	jmp    0x40f055
  40f0c4:	repnz or al,0xf6
  40f0c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0c8:	aaa    
  40f0c9:	adc    BYTE PTR [esi-0xb],bh
  40f0cc:	mov    ah,dl
  40f0ce:	mov    ds:0x4a827cc9,eax
  40f0d3:	jg     0x40f08d
  40f0d5:	mov    al,ds:0xaef68c7e
  40f0da:	jecxz  0x40f0c3
  40f0dc:	push   edx
  40f0dd:	push   ds
  40f0de:	inc    esi
  40f0df:	xor    al,BYTE PTR [edi+eax*1]
  40f0e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0e3:	push   es
  40f0e4:	inc    edx
  40f0e5:	jae    0x40f0a3
  40f0e7:	fwait
  40f0e8:	loope  0x40f0b9
  40f0ea:	fimul  WORD PTR [edx-0x1b16f48]
  40f0f0:	pop    esp
  40f0f1:	inc    esp
  40f0f2:	cmp    BYTE PTR [edi+eax*4-0x133c4c2a],bl
  40f0f9:	int    0x61
  40f0fb:	jne    0x40f08c
  40f0fd:	mov    eax,DWORD PTR [edx]
  40f0ff:	sub    bl,BYTE PTR [edi+edx*8-0x359a9ff3]
  40f106:	dec    ebx
  40f107:	(bad)  
  40f108:	cmp    al,BYTE PTR [esi+0x434e01e6]
  40f10e:	test   al,0x1c
  40f110:	pop    esp
  40f111:	jns    0x40f09d
  40f113:	jmp    0x54fd:0x56f47460
  40f11a:	ja     0x40f145
  40f11c:	lods   eax,DWORD PTR ds:[esi]
  40f11d:	imul   ebx,DWORD PTR [esi+0x86757f9],0x9aa91ab6
  40f127:	cdq    
  40f128:	test   ebp,0x265ea764
  40f12e:	ja     0x40f1a2
  40f130:	inc    ecx
  40f131:	imul   ebp,DWORD PTR ds:0x393841a8,0x1109ee50
  40f13b:	into   
  40f13c:	out    0xec,eax
  40f13e:	mov    dh,0x96
  40f140:	mov    ds:0x1958d50b,al
  40f145:	xor    DWORD PTR [edx],esi
  40f147:	cmp    BYTE PTR [esp+edi*4-0x57b62d58],ah
  40f14e:	xor    BYTE PTR [esi],0xe5
  40f151:	cli    
  40f152:	icebp  
  40f153:	das    
  40f154:	jbe    0x40f16e
  40f156:	aad    0x30
  40f158:	xchg   BYTE PTR [ecx-0x14f6dea],cl
  40f15e:	xor    eax,0x6b09fc1c
  40f163:	jno    0x40f1c8
  40f165:	mov    ds,WORD PTR [esi]
  40f167:	js     0x40f1b5
  40f169:	sub    esp,DWORD PTR [ebx-0xa05ed33]
  40f16f:	fdiv   QWORD PTR [ecx+ebp*1-0x4]
  40f173:	mov    esp,0x76995b8
  40f178:	jl     0x40f1b0
  40f17a:	int    0x2f
  40f17c:	popf   
  40f17d:	ins    BYTE PTR es:[edi],dx
  40f17e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f17f:	inc    ebx
  40f180:	xor    al,0xf6
  40f182:	fs xchg esp,eax
  40f184:	aaa    
  40f185:	jmp    0x58dd720a
  40f18a:	mov    BYTE PTR [ebx-0x3ccaedc1],0xa8
  40f191:	rcr    edi,0x36
  40f194:	and    ebx,esp
  40f196:	div    DWORD PTR ds:0xb1291f3b
  40f19c:	sbb    DWORD PTR [ebp-0x2],0xef5f2a2b
  40f1a3:	dec    ebx
  40f1a4:	enter  0x124a,0xe0
  40f1a8:	pop    edi
  40f1a9:	sbb    BYTE PTR [esi+0x2a],al
  40f1ac:	inc    edx
  40f1ad:	dec    edx
  40f1ae:	aas    
  40f1af:	push   cs
  40f1b0:	lds    edi,FWORD PTR [esi-0x6103506b]
  40f1b6:	xor    al,0xb4
  40f1b8:	or     BYTE PTR [eax],cl
  40f1ba:	ja     0x40f153
  40f1bc:	sbb    al,0xe3
  40f1be:	inc    ebx
  40f1bf:	sbb    bl,0xa6
  40f1c2:	retf   
  40f1c3:	pop    ecx
  40f1c4:	and    eax,0x83505f2d
  40f1c9:	adc    ebp,DWORD PTR [eax+esi*8+0x76]
  40f1cd:	test   ax,0xc18
  40f1d1:	icebp  
  40f1d2:	jmp    DWORD PTR [ebx-0x66db2e48]
  40f1d8:	test   DWORD PTR [ebx+0x5f],esp
  40f1db:	stos   BYTE PTR es:[edi],al
  40f1dc:	xor    dh,BYTE PTR [edx+0x5b]
  40f1df:	adc    cl,BYTE PTR [ebp+eiz*8-0xba5d8a6]
  40f1e6:	and    DWORD PTR [ebx+0x59],ebp
  40f1e9:	xchg   ebx,eax
  40f1ea:	add    eax,0xf61221b6
  40f1ef:	call   DWORD PTR [eax+0x24]
  40f1f2:	mov    BYTE PTR [ebx-0x33d42f95],dh
  40f1f8:	bound  ecx,QWORD PTR [edx]
  40f1fa:	adc    eax,0x8375aeaa
  40f1ff:	pop    edx
  40f200:	ins    BYTE PTR es:[edi],dx
  40f201:	push   cs
  40f202:	mov    ecx,0xc5968fc0
  40f207:	mov    WORD PTR [ecx],cs
  40f209:	into   
  40f20a:	pushf  
  40f20b:	cmp    DWORD PTR ds:0x2de9720e,0x1b
  40f212:	jbe    0x40f293
  40f214:	add    al,cl
  40f216:	push   ss
  40f217:	loope  0x40f1c3
  40f219:	push   ebx
  40f21a:	out    dx,al
  40f21b:	jbe    0x40f234
  40f21d:	push   ss
  40f21e:	aad    0x27
  40f220:	scas   al,BYTE PTR es:[edi]
  40f221:	adc    BYTE PTR [ebx-0xe],bh
  40f224:	outs   dx,DWORD PTR ds:[esi]
  40f225:	test   DWORD PTR [esp+eax*4],ebx
  40f228:	dec    eax
  40f229:	push   ecx
  40f22a:	rol    ebp,1
  40f22c:	imul   ebx,DWORD PTR [edi-0x52],0xffffff89
  40f230:	fld    DWORD PTR [ecx+0x69]
  40f233:	mov    ebp,0x16ca40e1
  40f238:	xchg   ebx,eax
  40f239:	push   es
  40f23a:	inc    esp
  40f23b:	or     DWORD PTR [ebp-0x2],eax
  40f23e:	xlat   BYTE PTR ds:[ebx]
  40f23f:	add    al,0x94
  40f241:	jecxz  0x40f25d
  40f243:	lods   al,BYTE PTR ds:[esi]
  40f244:	cmp    ah,bl
  40f246:	sbb    esp,esp
  40f248:	imul   esp,edx,0xffffffd6
  40f24b:	pop    ecx
  40f24c:	aad    0x64
  40f24e:	sbb    edi,edi
  40f250:	inc    edx
  40f251:	rcl    BYTE PTR [esi-0x34],0x3f
  40f255:	jnp    0x40f21d
  40f257:	cs call 0x69dd:0x2177dbd
  40f25f:	ins    DWORD PTR es:[edi],dx
  40f260:	fsubr  QWORD PTR [esi+0x22c2217d]
  40f266:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f267:	mov    bl,0xce
  40f269:	push   ss
  40f26a:	mov    ebp,0x763354f1
  40f26f:	mov    ecx,0xb5ed4f3
  40f274:	pop    edi
  40f275:	mov    esp,0x3bcdd578
  40f27a:	xor    eax,0x86a4b511
  40f27f:	cmp    BYTE PTR [eax+0x20],ch
  40f282:	or     ch,ah
  40f284:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f285:	out    dx,eax
  40f286:	add    eax,0x2d923487
  40f28b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f28c:	enter  0x6cd4,0xca
  40f290:	sbb    BYTE PTR [edx-0x6c381ecf],0x29
  40f297:	outs   dx,BYTE PTR ds:[esi]
  40f298:	adc    esp,ebx
  40f29a:	pop    ebp
  40f29b:	inc    esp
  40f29c:	adc    bl,BYTE PTR [ebx+0x4815b0cb]
  40f2a2:	cs sbb DWORD PTR fs:[eax*8-0x5f3daf87],0xffffffd8
  40f2ac:	push   ds
  40f2ad:	ins    DWORD PTR es:[edi],dx
  40f2ae:	aad    0x1c
  40f2b0:	retf   
  40f2b1:	sbb    cl,BYTE PTR [ebx+ebx*8-0x55]
  40f2b5:	and    BYTE PTR [edi+edi*8+0xb],bl
  40f2b9:	jp     0x40f25b
  40f2bb:	and    al,0x71
  40f2bd:	lods   al,BYTE PTR ds:[esi]
  40f2be:	or     ecx,DWORD PTR [esi-0x2c64a810]
  40f2c4:	into   
  40f2c5:	fcomp  QWORD PTR [edi]
  40f2c7:	xor    al,ah
  40f2c9:	outs   dx,BYTE PTR ds:[esi]
  40f2ca:	pop    esp
  40f2cb:	test   esi,0x2c766cec
  40f2d1:	cmp    cl,ch
  40f2d3:	cmp    al,0x19
  40f2d5:	cdq    
  40f2d6:	mov    al,ds:0xa1d7e370
  40f2db:	sub    ecx,DWORD PTR [ecx+ebp*1]
  40f2de:	std    
  40f2df:	pop    es
  40f2e0:	xor    ebp,esi
  40f2e2:	mov    cl,0x6f
  40f2e4:	adc    BYTE PTR [ebp+0x59],0x76
  40f2e8:	pop    edx
  40f2e9:	mov    ebx,0x2525f15
  40f2ee:	sahf   
  40f2ef:	fisttp QWORD PTR [edi-0x57]
  40f2f2:	push   ecx
  40f2f3:	mov    BYTE PTR [esi-0x20],al
  40f2f6:	cmp    ebx,eax
  40f2f8:	mov    ds:0x6ee4f1ac,al
  40f2fd:	add    DWORD PTR [edi+edi*2-0x6a04eb85],ecx
  40f304:	jge    0x40f29b
  40f306:	sub    al,bh
  40f308:	stc    
  40f309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f30a:	lea    ecx,[edx+0x79]
  40f30d:	repz push di
  40f310:	lods   eax,DWORD PTR ds:[esi]
  40f311:	sti    
  40f312:	jo     0x40f2b0
  40f314:	jecxz  0x40f2fb
  40f316:	das    
  40f317:	inc    ebp
  40f318:	addr16 in al,dx
  40f31a:	sub    al,0x1c
  40f31c:	cmp    edx,DWORD PTR [edi+0x36]
  40f31f:	fbstp  TBYTE PTR [eax]
  40f321:	xor    ebx,DWORD PTR [eax]
  40f323:	and    DWORD PTR [eax+0x23],0xffffff9e
  40f327:	xchg   ebp,eax
  40f328:	xchg   BYTE PTR gs:[esp+ebx*1],ah
  40f32c:	sbb    BYTE PTR fs:[edx-0x58],ah
  40f330:	retf   0x3dad
  40f333:	dec    esi
  40f334:	fcom   st(5)
  40f336:	jmp    0x90a6:0x1a1cf83d
  40f33d:	call   0x9994:0x5d566547
  40f344:	ret    
  40f345:	xchg   esp,eax
  40f346:	sub    ebx,ecx
  40f348:	test   DWORD PTR [edi+0x72],esp
  40f34b:	inc    ebx
  40f34c:	icebp  
  40f34d:	imul   edi,DWORD PTR [edi+edi*4],0xb0b284a1
  40f354:	jl     0x40f38a
  40f356:	sub    DWORD PTR [edx+0x7d3ef82],esp
  40f35c:	pop    esi
  40f35d:	lahf   
  40f35e:	mov    bh,0xbf
  40f360:	pop    eax
  40f361:	and    BYTE PTR [ecx+ebp*1+0x1f36f8f1],ah
  40f368:	push   ebx
  40f369:	std    
  40f36a:	xor    al,0x16
  40f36c:	ret    
  40f36d:	test   BYTE PTR [ebx],bl
  40f36f:	dec    edi
  40f370:	xor    al,ch
  40f372:	push   ecx
  40f373:	repnz mov WORD PTR [edi-0x4a448614],es
  40f37a:	in     al,0xbe
  40f37c:	fnstsw WORD PTR [ebp-0x57c00275]
  40f382:	outs   dx,BYTE PTR ds:[esi]
  40f383:	call   0x5629b5bf
  40f388:	and    bh,dl
  40f38a:	cmc    
  40f38b:	mov    esi,0x48f9e759
  40f390:	adc    ecx,ebx
  40f392:	cmp    cl,BYTE PTR [edx-0x57]
  40f395:	daa    
  40f396:	cmp    al,0x3
  40f398:	xor    al,0x3a
  40f39a:	pop    edx
  40f39b:	fld    st(7)
  40f39d:	loop   0x40f3b4
  40f39f:	xor    dh,BYTE PTR [ecx]
  40f3a1:	call   0x5a9c:0x654c6537
  40f3a8:	shl    DWORD PTR [edx-0x379e44b8],0x29
  40f3af:	push   ds
  40f3b0:	cmc    
  40f3b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3b2:	js     0x40f3d4
  40f3b4:	shl    DWORD PTR [eax],0x54
  40f3b7:	rcl    DWORD PTR [ebp-0x50],1
  40f3ba:	mov    bh,0x9
  40f3bc:	outs   dx,BYTE PTR ds:[esi]
  40f3bd:	mov    ecx,0x5f01b331
  40f3c2:	lock xchg edx,eax
  40f3c4:	pushf  
  40f3c5:	pop    esp
  40f3c6:	dec    esi
  40f3c7:	or     al,0xc5
  40f3c9:	fmul   st(6),st
  40f3cb:	dec    edx
  40f3cc:	sbb    BYTE PTR [edx-0x1b7333e9],0xdf
  40f3d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3d4:	retf   
  40f3d5:	mov    DWORD PTR [ebp+0x68b478dc],ecx
  40f3db:	lea    ebp,[eax]
  40f3dd:	push   es
  40f3de:	dec    esp
  40f3df:	stc    
  40f3e0:	test   eax,0x767311f6
  40f3e5:	stos   BYTE PTR es:[edi],al
  40f3e6:	push   cs
  40f3e7:	jle    0x40f452
  40f3e9:	ror    BYTE PTR [ebp+0x2ecf8c7c],1
  40f3ef:	out    0xe6,al
  40f3f1:	and    DWORD PTR [ebp-0x1b842869],esp
  40f3f7:	jge    0x40f41d
  40f3f9:	int3   
  40f3fa:	jle    0x40f46c
  40f3fc:	pop    esp
  40f3fd:	adc    BYTE PTR [ebp-0x387304b2],ah
  40f403:	push   ecx
  40f404:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f405:	gs pop eax
  40f407:	pop    es
  40f408:	mov    ds:0xd9d2cb8a,eax
  40f40d:	loope  0x40f448
  40f40f:	test   DWORD PTR [edi-0x33b28f95],esp
  40f415:	jl     0x40f40a
  40f417:	sub    eax,0x8b7989c3
  40f41c:	dec    eax
  40f41d:	rcr    DWORD PTR [ebx-0x61580924],0x5f
  40f424:	(bad)  ds:[edx-0x59d67c0b]
  40f42b:	out    0x1e,al
  40f42d:	(bad)  
  40f42e:	fimul  WORD PTR [eax]
  40f430:	xchg   ebp,eax
  40f431:	sbb    eax,DWORD PTR [ecx+0x6]
  40f434:	popf   
  40f435:	adc    dl,cl
  40f437:	jb     0x40f493
  40f439:	mov    ds:0xde7b1372,eax
  40f43e:	mov    WORD PTR [ecx-0x2b],fs
  40f441:	(bad)  
  40f442:	cmp    edi,DWORD PTR [esi+0x4e024037]
  40f448:	mov    eax,0xc4181500
  40f44d:	lea    ebx,[edx-0x10]
  40f450:	mov    DWORD PTR [edi],ebx
  40f452:	repz xchg edx,eax
  40f454:	gs out dx,al
  40f456:	pushf  
  40f457:	push   edx
  40f458:	arpl   di,bp
  40f45a:	cli    
  40f45b:	std    
  40f45c:	inc    edx
  40f45d:	loopne 0x40f4bf
  40f45f:	inc    ebp
  40f460:	adc    ah,BYTE PTR [ebp-0x2576360e]
  40f466:	xchg   ebp,eax
  40f467:	pop    esi
  40f468:	sub    esp,DWORD PTR ds:0x6c0d17f2
  40f46e:	mov    ah,0xd4
  40f470:	clc    
  40f471:	inc    edx
  40f472:	call   0xac58f68c
  40f477:	mov    eax,0x3b873d11
  40f47c:	xchg   ebx,eax
  40f47d:	fld    DWORD PTR [ebx]
  40f47f:	ror    dl,1
  40f481:	outs   dx,BYTE PTR ds:[esi]
  40f482:	add    eax,0xe9c5ecbe
  40f487:	lahf   
  40f488:	inc    esi
  40f489:	jmp    0x1cd2:0xbd138e20
  40f490:	fcomp  st(7)
  40f492:	inc    eax
  40f493:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f494:	adc    eax,DWORD PTR [esi+0x5c455c0d]
  40f49a:	cmp    al,0xb3
  40f49c:	shl    DWORD PTR [esi-0x1fe9b33b],0xb8
  40f4a3:	jne    0x40f466
  40f4a5:	into   
  40f4a6:	pop    ebp
  40f4a7:	imul   esi,DWORD PTR [ecx-0x287de044],0x2a0b7df6
  40f4b1:	push   es
  40f4b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4b3:	imul   ebx,DWORD PTR [ebx+0x71bb6fc],0xffffffa0
  40f4ba:	sar    BYTE PTR [esi+0x60f06ba1],cl
  40f4c0:	mov    ds:0xe72fa304,al
  40f4c5:	cwde   
  40f4c6:	jno    0x40f4ba
  40f4c8:	into   
  40f4c9:	mov    ch,0x24
  40f4cb:	xchg   ecx,eax
  40f4cc:	mov    ebp,esi
  40f4ce:	inc    eax
  40f4cf:	sbb    BYTE PTR [ecx],dl
  40f4d1:	add    al,0x14
  40f4d3:	mov    edx,0xf68497e6
  40f4d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4d9:	lahf   
  40f4da:	out    0x94,eax
  40f4dc:	jl     0x40f534
  40f4de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4df:	imul   ebp,ebx,0x63cd0de2
  40f4e5:	icebp  
  40f4e6:	mov    bl,0x89
  40f4e8:	out    dx,eax
  40f4e9:	lea    edx,[edi+0x36ebebc2]
  40f4ef:	cmp    cl,BYTE PTR [esi]
  40f4f1:	mov    ecx,0xfb845f5d
  40f4f6:	dec    eax
  40f4f7:	ds jg  0x40f523
  40f4fa:	mov    eax,ds:0x25195624
  40f4ff:	mov    ch,0x2
  40f501:	adc    DWORD PTR [edi+0x5],0xbda6eb9c
  40f508:	jmp    0x212f52f8
  40f50d:	adc    eax,0xc7a22d13
  40f512:	ss (bad) 
  40f514:	fstp   QWORD PTR [esi+edx*4+0x58]
  40f518:	mov    eax,ds:0x6fea04ba
  40f51d:	mov    dl,0xe4
  40f51f:	sub    eax,0xf36d61c8
  40f524:	data16 mov dh,0x14
  40f527:	or     dl,BYTE PTR [ecx+esi*8]
  40f52a:	push   eax
  40f52b:	mov    ch,0x70
  40f52d:	or     al,0xc1
  40f52f:	mov    ds:0xb8c9ee55,al
  40f534:	leave  
  40f535:	cwde   
  40f536:	mov    ebx,0x7441cb98
  40f53b:	sar    DWORD PTR [eax],cl
  40f53d:	stc    
  40f53e:	xchg   ebp,eax
  40f53f:	loopne 0x40f577
  40f541:	xor    BYTE PTR [ebp-0x29],bl
  40f544:	xor    BYTE PTR [ebp+0x12da3e63],cl
  40f54a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f54b:	pushf  
  40f54c:	(bad)  
  40f54d:	sbb    BYTE PTR [ebp+edx*1-0x70],al
  40f551:	pop    eax
  40f552:	in     eax,0xe3
  40f554:	repnz inc esi
  40f556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f557:	stos   BYTE PTR es:[edi],al
  40f558:	jp     0x40f5b3
  40f55a:	std    
  40f55b:	ins    BYTE PTR es:[edi],dx
  40f55c:	fdivr  QWORD PTR [edx+ebx*1-0x1d]
  40f560:	mov    esi,0x3fd104da
  40f565:	stos   DWORD PTR es:[edi],eax
  40f566:	inc    esp
  40f567:	cli    
  40f568:	cld    
  40f569:	pop    edx
  40f56a:	or     DWORD PTR [si],eax
  40f56d:	in     eax,dx
  40f56e:	outs   dx,DWORD PTR ds:[esi]
  40f56f:	int    0x1a
  40f571:	mov    eax,ds:0x9aae7a3d
  40f576:	stos   DWORD PTR es:[edi],eax
  40f577:	out    0x88,eax
  40f579:	xchg   ecx,eax
  40f57a:	xchg   edi,eax
  40f57b:	iret   
  40f57c:	or     eax,0x4
  40f57f:	or     DWORD PTR [ebx+0x2f5e7110],ebx
  40f585:	je     0x40f58a
  40f587:	ficom  DWORD PTR [ebx+eax*1]
  40f58a:	cld    
  40f58b:	sbb    dl,BYTE PTR [esi]
  40f58d:	xor    DWORD PTR [edi-0x27],edx
  40f590:	jae    0x40f512
  40f592:	(bad)  
  40f593:	jg     0x40f588
  40f595:	push   esp
  40f596:	call   0x627fb2b6
  40f59b:	lods   eax,DWORD PTR ds:[esi]
  40f59c:	sar    WORD PTR [edx-0x4b83f897],1
  40f5a3:	aam    0xcf
  40f5a5:	in     eax,dx
  40f5a6:	ins    BYTE PTR es:[edi],dx
  40f5a7:	lds    eax,FWORD PTR [ecx+ecx*1]
  40f5aa:	push   ecx
  40f5ab:	xor    edx,ebp
  40f5ad:	sbb    BYTE PTR [eax-0x4e],bl
  40f5b0:	test   al,0x8d
  40f5b2:	into   
  40f5b3:	(bad)  
  40f5b5:	repz and BYTE PTR [esi+0x850d436],ch
  40f5bc:	fild   QWORD PTR [ebx-0x745e0d6b]
  40f5c2:	sbb    eax,0x6344c406
  40f5c7:	(bad)  
  40f5c9:	hlt    
  40f5ca:	jns    0x40f5f6
  40f5cc:	shl    edx,0x1f
  40f5cf:	xor    BYTE PTR gs:0x6033efce,ah
  40f5d6:	fidiv  WORD PTR [eax+0x21c35d37]
  40f5dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5dd:	mov    ah,0x1a
  40f5df:	test   al,0x82
  40f5e1:	fwait
  40f5e2:	and    cl,0x73
  40f5e5:	inc    ebp
  40f5e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5e7:	mov    ch,0x14
  40f5e9:	dec    BYTE PTR [ebp+eax*1-0x6e26d0d5]
  40f5f0:	sub    BYTE PTR [ebx+0x73],cl
  40f5f3:	in     al,dx
  40f5f4:	iret   
  40f5f5:	xchg   ebp,eax
  40f5f6:	jg     0x40f583
  40f5f8:	inc    esi
  40f5f9:	iret   
  40f5fa:	ins    BYTE PTR es:[edi],dx
  40f5fb:	pop    ebp
  40f5fc:	retf   
  40f5fd:	lahf   
  40f5fe:	push   edi
  40f5ff:	inc    esp
  40f600:	jmp    0x40f5e1
  40f602:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f603:	push   ebp
  40f604:	cmp    eax,0xf0bb7d02
  40f609:	and    eax,DWORD PTR [esi-0x3e7a95b6]
  40f60f:	jb     0x40f5b0
  40f611:	daa    
  40f612:	daa    
  40f613:	push   cs
  40f614:	bound  edx,QWORD PTR [edi]
  40f616:	jl     0x40f688
  40f618:	les    edx,FWORD PTR [ebp-0x7a3efda4]
  40f61e:	cmp    al,0x58
  40f620:	in     al,0x1c
  40f622:	xchg   esp,eax
  40f623:	xchg   ebx,eax
  40f624:	test   esi,0x6b6d7f2f
  40f62a:	imul   ecx,edi,0x50826401
  40f630:	pop    eax
  40f631:	ficom  DWORD PTR [eax]
  40f633:	pushf  
  40f634:	mov    bh,BYTE PTR [ecx+0x6b78d8bc]
  40f63a:	mov    ch,0x15
  40f63c:	dec    BYTE PTR [ebp+0x23]
  40f63f:	call   0xb6d666f1
  40f644:	(bad)  
  40f646:	ficomp DWORD PTR [eiz*1-0x7d1ac8da]
  40f64d:	jecxz  0x40f63c
  40f64f:	scas   eax,DWORD PTR es:[edi]
  40f650:	out    dx,al
  40f651:	push   ebp
  40f652:	pop    esi
  40f653:	stc    
  40f654:	xor    cl,BYTE PTR [esi-0x182674af]
  40f65a:	jns    0x40f684
  40f65c:	(bad)  
  40f65d:	or     DWORD PTR [edx-0x18],ebx
  40f660:	rcl    bl,1
  40f662:	xchg   al,al
  40f664:	mov    cl,0xe8
  40f666:	cli    
  40f667:	fild   QWORD PTR [ebx-0x75]
  40f66a:	jmp    0xc261b337
  40f66f:	push   edi
  40f670:	pushf  
  40f671:	das    
  40f672:	or     eax,0x94fee0a1
  40f677:	push   edi
  40f678:	or     bh,BYTE PTR [eax+eiz*8]
  40f67b:	nop
  40f67c:	push   esp
  40f67d:	into   
  40f67e:	rol    DWORD PTR [esi+ecx*2+0x7a],cl
  40f682:	fdivr  st(6),st
  40f684:	mov    BYTE PTR ds:0x494e0e23,cl
  40f68a:	aaa    
  40f68b:	shr    BYTE PTR [ebx],cl
  40f68d:	sub    ecx,DWORD PTR [edi-0x5fc64680]
  40f693:	outs   dx,DWORD PTR ds:[esi]
  40f694:	dec    edx
  40f695:	jae    0x40f679
  40f697:	adc    al,0xeb
  40f699:	daa    
  40f69a:	cmp    BYTE PTR [ebx],cl
  40f69c:	ins    BYTE PTR es:[edi],dx
  40f69d:	cmp    ecx,edx
  40f69f:	mov    al,BYTE PTR [edi-0x37dee6cf]
  40f6a5:	jne    0x40f6aa
  40f6a7:	les    ebp,FWORD PTR [esi-0x7f58f45b]
  40f6ad:	repz icebp 
  40f6af:	push   edi
  40f6b0:	(bad)  
  40f6b1:	fild   DWORD PTR [ebp-0x3fd5b32e]
  40f6b7:	mov    bh,0x44
  40f6b9:	in     al,dx
  40f6ba:	pop    edi
  40f6bb:	ins    DWORD PTR es:[edi],dx
  40f6bc:	dec    esi
  40f6bd:	pop    ss
  40f6be:	(bad)  
  40f6bf:	cmp    ch,ah
  40f6c1:	mov    DWORD PTR [edi],ebp
  40f6c3:	mov    cl,0xe3
  40f6c5:	adc    al,0x79
  40f6c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6c8:	fbld   TBYTE PTR [ecx+0x51]
  40f6cb:	es pop esi
  40f6cd:	xchg   esi,eax
  40f6ce:	mov    dl,0x85
  40f6d0:	cwde   
  40f6d1:	jns    0x40f672
  40f6d3:	sbb    DWORD PTR [ebx*4+0x4ca2ca58],ecx
  40f6da:	mov    dh,BYTE PTR [eax-0x73804518]
  40f6e0:	clc    
  40f6e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6e2:	pop    ebp
  40f6e3:	sahf   
  40f6e4:	scas   al,BYTE PTR es:[edi]
  40f6e5:	ins    BYTE PTR es:[edi],dx
  40f6e6:	loope  0x40f6a3
  40f6e8:	mov    WORD PTR [edx+eiz*1+0x1f6bf343],es
  40f6ef:	pushf  
  40f6f0:	pop    eax
  40f6f1:	shl    BYTE PTR [esi-0x21242e42],1
  40f6f7:	pushf  
  40f6f8:	cdq    
  40f6f9:	stos   BYTE PTR es:[edi],al
  40f6fa:	adc    al,0x17
  40f6fc:	test   BYTE PTR [esp+edx*8],0x28
  40f700:	jmp    0x40f6ad
  40f702:	adc    BYTE PTR [ebp+0x73],ah
  40f705:	mov    WORD PTR [esi],ds
  40f707:	(bad)  
  40f709:	fisubr DWORD PTR [ebx]
  40f70b:	div    ebx
  40f70d:	sbb    eax,0xc56ccdba
  40f712:	sahf   
  40f713:	or     ecx,esi
  40f715:	ficom  DWORD PTR [eax+0x53be601c]
  40f71b:	call   0x9f5c:0x90acd025
  40f722:	inc    ecx
  40f723:	lods   al,BYTE PTR ds:[esi]
  40f724:	fcomp  st(7)
  40f726:	dec    ebp
  40f727:	sbb    DWORD PTR [esi-0x31],ebx
  40f72a:	std    
  40f72b:	mov    eax,0xf5ea0ead
  40f730:	gs cmp eax,0xf715447b
  40f736:	retf   0x831a
  40f739:	dec    ebp
  40f73a:	xor    eax,0x3a760f5d
  40f73f:	cmp    al,bh
  40f741:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f742:	out    dx,eax
  40f743:	aas    
  40f744:	repz mov bl,0xc2
  40f747:	and    ebx,eax
  40f749:	mov    esp,0xd9f0c71d
  40f74e:	fs pop eax
  40f750:	loopne 0x40f77e
  40f752:	and    dl,BYTE PTR [ecx+eiz*1]
  40f755:	xlat   BYTE PTR ds:[ebx]
  40f756:	sbb    BYTE PTR [edx],bh
  40f758:	shl    DWORD PTR [edi+0x1b03c005],0x88
  40f75f:	scas   al,BYTE PTR es:[edi]
  40f760:	jae    0x40f77d
  40f762:	xor    DWORD PTR [edi],esp
  40f764:	shl    esi,cl
  40f766:	xor    edi,DWORD PTR [esi+eiz*8-0x225e24fe]
  40f76d:	push   0xfd88ac85
  40f772:	xor    ecx,DWORD PTR [edx]
  40f774:	mov    al,ds:0x9c9cb9c0
  40f779:	test   DWORD PTR [edi],edi
  40f77b:	loop   0x40f7ba
  40f77d:	sub    bh,BYTE PTR [edi-0x44dc9d63]
  40f783:	push   0xffffffea
  40f785:	fcomp  DWORD PTR [ebx]
  40f787:	mov    ebp,0x369cb8e4
  40f78c:	pop    ebp
  40f78d:	push   eax
  40f78e:	and    DWORD PTR [esi-0x218a8409],0xbd318704
  40f798:	imul   DWORD PTR [ecx+0x1b]
  40f79b:	cmp    DWORD PTR [eax-0x3aae979c],esp
  40f7a1:	enter  0xfe8f,0xfc
  40f7a5:	call   0xf4901fe9
  40f7aa:	xchg   ebp,eax
  40f7ab:	mov    esp,0x2c171870
  40f7b0:	dec    esp
  40f7b1:	push   0xffffffbe
  40f7b3:	lahf   
  40f7b4:	scas   al,BYTE PTR es:[edi]
  40f7b5:	leave  
  40f7b6:	push   esi
  40f7b7:	jo     0x40f7f4
  40f7b9:	pop    esi
  40f7ba:	or     BYTE PTR [eax],0xb3
  40f7bd:	add    eax,esp
  40f7bf:	mov    dl,0x7d
  40f7c1:	jne    0x40f787
  40f7c3:	sub    bh,bl
  40f7c5:	xlat   BYTE PTR ds:[ebx]
  40f7c6:	jl     0x40f836
  40f7c8:	bound  esi,QWORD PTR [ebx+0x44]
  40f7cb:	push   0x1c
  40f7cd:	dec    edi
  40f7ce:	xchg   DWORD PTR [edi],eax
  40f7d0:	data16 mov ds:0xdbd6db2d,al
  40f7d6:	or     DWORD PTR [esi-0x6aa93625],0xc
  40f7dd:	retf   0xbe55
  40f7e0:	add    al,0xec
  40f7e2:	fxtract 
  40f7e4:	xchg   ebp,eax
  40f7e5:	xlat   BYTE PTR ds:[ebx]
  40f7e6:	inc    esp
  40f7e7:	fwait
  40f7e8:	sbb    ecx,eax
  40f7ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7eb:	and    ch,BYTE PTR [eax]
  40f7ed:	rcr    BYTE PTR [esi+edx*1+0x4ddee0d5],0x67
  40f7f5:	imul   ecx,DWORD PTR [edi+ebp*2-0x1e064b0b],0xbe9e2338
  40f800:	adc    eax,0x12a7e2a
  40f805:	loope  0x40f7e1
  40f807:	xchg   esp,eax
  40f808:	rep ins BYTE PTR es:[edi],dx
  40f80a:	xor    BYTE PTR [edx+0x21],bh
  40f80d:	xchg   BYTE PTR [ebx+0x9],cl
  40f810:	jp     0x40f842
  40f812:	aam    0xe7
  40f814:	(bad)  
  40f815:	call   0x7b9c:0x29ceb74d
  40f81c:	sahf   
  40f81d:	ja     0x40f85d
  40f81f:	jmp    0xd0caa969
  40f824:	xchg   esp,eax
  40f825:	adc    BYTE PTR [edi],0xf5
  40f828:	out    dx,al
  40f829:	mov    ss,WORD PTR [ebx-0x3c443e85]
  40f82f:	dec    ebx
  40f830:	or     BYTE PTR ds:0xa33b2960,dh
  40f836:	xlat   BYTE PTR ds:[ebx]
  40f837:	inc    ecx
  40f838:	outs   dx,BYTE PTR ds:[esi]
  40f839:	mov    ebx,0x878029ab
  40f83e:	pop    dx
  40f840:	(bad)  
  40f841:	scas   al,BYTE PTR es:[edi]
  40f842:	ficom  WORD PTR [ebx-0x3169c624]
  40f848:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f849:	inc    ebp
  40f84a:	rcl    DWORD PTR [ecx-0x1d87eb8],1
  40f850:	ins    BYTE PTR es:[edi],dx
  40f851:	adc    bh,BYTE PTR [esi-0x6eb76efa]
  40f857:	dec    ecx
  40f858:	xchg   ecx,edx
  40f85a:	dec    edx
  40f85b:	push   edx
  40f85c:	mov    edx,ebx
  40f85e:	pop    ebx
  40f85f:	dec    ebx
  40f860:	call   DWORD PTR [ebx]
  40f862:	cmp    DWORD PTR [ebp+0x10],esi
  40f865:	je     0x40f884
  40f86b:	xchg   edx,eax
  40f86c:	push   0xb
  40f86e:	pop    ecx
  40f86f:	push   0x4
  40f871:	pop    ebx
  40f872:	inc    ebx
  40f873:	xchg   ebx,ecx
  40f875:	sub    ebx,ecx
  40f877:	xchg   ebx,ecx
  40f879:	dec    ecx
  40f87a:	dec    ecx
  40f87b:	mov    eax,DWORD PTR [ebp-0x1c]
  40f87e:	imul   eax,ecx
  40f881:	add    esp,eax
  40f883:	xchg   edx,eax
  40f884:	push   eax
  40f885:	xor    ebx,ebx
  40f887:	mov    edx,esp
  40f889:	dec    edx
  40f88a:	inc    ebx
  40f88b:	add    ebx,DWORD PTR [edx+ebx*1]
  40f88e:	dec    ebx
  40f88f:	xor    edx,edx
  40f891:	add    DWORD PTR [ebp-0xc],ebx
  40f894:	pop    ebx
  40f895:	mov    eax,DWORD PTR [ebp-0xc]
  40f898:	pop    edi
  40f899:	pop    esi
  40f89a:	pop    ebx
  40f89b:	leave  
  40f89c:	ret    0x10
  40f89f:	push   ebp
  40f8a0:	mov    ebp,esp
  40f8a2:	push   ecx
  40f8a3:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  40f8aa:	add    DWORD PTR ds:0x42c010,0x33e6
  40f8b4:	mov    eax,DWORD PTR [ebp-0x4]
  40f8b7:	or     edx,ecx
  40f8b9:	mov    edx,DWORD PTR [ebp+0x10]
  40f8bc:	mov    ecx,0x7510893
  40f8c1:	xor    eax,ecx
  40f8c3:	and    DWORD PTR ds:0x42d008,0x1b89
  40f8cd:	add    eax,0x3272db
  40f8d2:	or     DWORD PTR ds:0x42a01c,0x429008
  40f8dc:	mov    DWORD PTR [edx],eax
  40f8de:	and    DWORD PTR ds:0x42c01c,0x0
  40f8e8:	xor    eax,eax
  40f8ea:	add    eax,DWORD PTR ds:0x42c01c
  40f8f0:	inc    eax
  40f8f1:	mov    ds:0x42c01c,eax
  40f8f6:	cmp    DWORD PTR ds:0x42c01c,0x28
  40f8fd:	jne    0x40f90f
  40f903:	push   DWORD PTR [ebp-0x20]
  40f906:	push   DWORD PTR [ebp-0x20]
  40f909:	call   DWORD PTR ds:0x425034
  40f90f:	cmp    DWORD PTR ds:0x42c01c,0x1d
  40f916:	jb     0x40f8e8
  40f91c:	and    DWORD PTR ds:0x42d01c,0x0
  40f926:	jmp    0x40f938
  40f92b:	mov    edx,DWORD PTR ds:0x42d01c
  40f931:	inc    edx
  40f932:	mov    DWORD PTR ds:0x42d01c,edx
  40f938:	cmp    DWORD PTR ds:0x42d01c,0x1b
  40f93f:	jae    0x40f96c
  40f945:	cmp    DWORD PTR ds:0x42d01c,0x1d
  40f94c:	jne    0x40f967
  40f952:	push   0x4245ce
  40f957:	push   0x42457e
  40f95c:	push   0x42c7
  40f961:	call   DWORD PTR ds:0x42503c
  40f967:	jmp    0x40f92b
  40f96c:	mov    eax,DWORD PTR [ebp+0xc]
  40f96f:	xor    eax,ecx
  40f971:	push   esi
  40f972:	mov    esi,DWORD PTR [ebp+0x10]
  40f975:	mov    edx,0x3272db
  40f97a:	add    eax,edx
  40f97c:	mov    DWORD PTR [esi+0x4],eax
  40f97f:	mov    eax,DWORD PTR [ebp+0x14]
  40f982:	mov    esi,DWORD PTR [ebp+0x10]
  40f985:	mov    DWORD PTR [esi+0x8],eax
  40f988:	mov    eax,DWORD PTR [ebp+0x18]
  40f98b:	mov    esi,DWORD PTR [ebp+0x10]
  40f98e:	mov    DWORD PTR [esi+0xc],eax
  40f991:	mov    eax,DWORD PTR [ebp+0x1c]
  40f994:	mov    esi,DWORD PTR [ebp+0x10]
  40f997:	mov    DWORD PTR [esi+0x10],eax
  40f99a:	mov    eax,DWORD PTR [ebp+0x8]
  40f99d:	xor    eax,ecx
  40f99f:	add    eax,edx
  40f9a1:	pop    esi
  40f9a2:	leave  
  40f9a3:	ret    0x18
  40f9a6:	push   ebp
  40f9a7:	mov    ebp,esp
  40f9a9:	mov    eax,ds:0x424074
  40f9ae:	mov    eax,DWORD PTR [eax+0x1c8]
  40f9b4:	mov    eax,DWORD PTR [eax]
  40f9b6:	movzx  ecx,BYTE PTR ds:0x429000
  40f9bd:	and    DWORD PTR ds:0x42d010,ecx
  40f9c3:	cdq    
  40f9c4:	push   ebx
  40f9c5:	add    DWORD PTR ds:0x42a008,0x429020
  40f9cf:	mov    ecx,0xfabdbef1
  40f9d4:	add    eax,ecx
  40f9d6:	mov    DWORD PTR ds:0x42d008,0x7e66
  40f9e0:	adc    edx,0xffffffff
  40f9e3:	or     DWORD PTR ds:0x42a014,edi
  40f9e9:	push   esi
  40f9ea:	push   edi
  40f9eb:	and    DWORD PTR ds:0x42a00c,0x0
  40f9f5:	jmp    0x40fa09
  40f9fa:	xor    ebx,ebx
  40f9fc:	or     ebx,DWORD PTR ds:0x42a00c
  40fa02:	inc    ebx
  40fa03:	mov    DWORD PTR ds:0x42a00c,ebx
  40fa09:	cmp    DWORD PTR ds:0x42a00c,0x1b
  40fa10:	jae    0x40fa41
  40fa16:	cmp    DWORD PTR ds:0x42a00c,0x26
  40fa1d:	jne    0x40fa36
  40fa23:	push   0x7619
  40fa28:	push   0x3c20
  40fa2d:	push   DWORD PTR [ebp-0x18]
  40fa30:	call   DWORD PTR ds:0x425040
  40fa36:	jmp    0x40f9fa
  40fa3b:	adc    ebx,DWORD PTR ds:0x42d018
  40fa41:	mov    edi,edx
  40fa43:	mov    edx,DWORD PTR [ebp+0x8]
  40fa46:	mov    DWORD PTR ds:0x42c000,0x5718
  40fa50:	mov    ebx,eax
  40fa52:	and    DWORD PTR ds:0x42c004,0x67ab
  40fa5c:	mov    eax,0x8a29a123
  40fa61:	xor    esi,esi
  40fa63:	or     DWORD PTR ds:0x429024,0x42d014
  40fa6d:	xor    ebx,eax
  40fa6f:	or     DWORD PTR ds:0x42d000,0x42a014
  40fa79:	xor    edi,0x0
  40fa7c:	and    DWORD PTR ds:0x42d000,0x42a00c
  40fa86:	add    edx,ecx
  40fa88:	adc    esi,0xffffffff
  40fa8b:	xor    edx,eax
  40fa8d:	or     DWORD PTR ds:0x42c010,0x42b010
  40fa97:	jmp    0x411e4e
  40fa9c:	mov    WORD PTR [ebx+0x6643964b],?
  40faa2:	arpl   WORD PTR [ebx+0x42],sp
  40faa5:	jno    0x40fa92
  40faa7:	ror    BYTE PTR [ecx],cl
  40faa9:	pushf  
  40faaa:	leave  
  40faab:	lods   eax,DWORD PTR ds:[esi]
  40faac:	js     0x40fa3c
  40faae:	bound  esp,QWORD PTR [edx-0x38]
  40fab1:	pop    edi
  40fab2:	bound  esp,QWORD PTR [edx-0x72]
  40fab5:	jno    0x40fb0c
  40fab7:	test   eax,0xe1c305
  40fabc:	jg     0x40fb39
  40fabe:	outs   dx,DWORD PTR ds:[esi]
  40fabf:	pop    ebx
  40fac0:	cmp    al,BYTE PTR [edi-0xa]
  40fac3:	test   BYTE PTR [ecx+0x4272860f],dl
  40fac9:	js     0x40fa91
  40facb:	lods   eax,DWORD PTR ds:[esi]
  40facc:	xchg   ebx,eax
  40facd:	mov    ah,0xa2
  40facf:	jle    0x40fb46
  40fad1:	mov    esp,0x4742191c
  40fad6:	pop    es
  40fad7:	mov    eax,0x3a3b092
  40fadc:	les    ebx,FWORD PTR ds:0x9b5f081
  40fae2:	shl    DWORD PTR [ecx+0x69],1
  40fae5:	popf   
  40fae6:	mov    ch,0x7f
  40fae8:	pushf  
  40fae9:	jecxz  0x40fae9
  40faeb:	daa    
  40faec:	ror    BYTE PTR [eax+ebp*8],cl
  40faef:	lea    esp,[edi]
  40faf1:	xor    ebx,eax
  40faf3:	pop    edx
  40faf4:	inc    ebp
  40faf5:	out    dx,eax
  40faf6:	ins    DWORD PTR es:[edi],dx
  40faf7:	(bad)  [edi-0x77]
  40fafa:	add    ah,bl
  40fafc:	mov    ah,al
  40fafe:	test   al,0x82
  40fb00:	dec    edi
  40fb01:	daa    
  40fb02:	mov    eax,0x480f39b7
  40fb07:	push   esi
  40fb08:	adc    BYTE PTR [ecx+ecx*8+0x43cae20b],0x5b
  40fb10:	sub    eax,0x68935bea
  40fb15:	loopne 0x40fb33
  40fb17:	ret    
  40fb18:	in     al,0xd1
  40fb1a:	push   esp
  40fb1b:	mov    WORD PTR [edi],es
  40fb1d:	adc    eax,0x58eb0291
  40fb22:	fstp   QWORD PTR [edi-0x40]
  40fb25:	xor    edx,eax
  40fb27:	in     al,dx
  40fb28:	push   esi
  40fb29:	ds je  0x40fb00
  40fb2c:	rcr    BYTE PTR [ecx-0x71dde184],1
  40fb32:	stos   BYTE PTR es:[edi],al
  40fb33:	cdq    
  40fb34:	fld    st(0)
  40fb36:	mov    edx,0x2514dbf5
  40fb3b:	jnp    0x40fb76
  40fb3d:	mov    esp,0x43a17b50
  40fb42:	pop    esi
  40fb43:	dec    eax
  40fb44:	inc    esp
  40fb45:	out    dx,al
  40fb46:	xchg   ecx,eax
  40fb47:	xor    bh,BYTE PTR [esp+eiz*2]
  40fb4a:	iret   
  40fb4b:	(bad)  
  40fb4c:	out    dx,al
  40fb4d:	sbb    dl,BYTE PTR [ecx]
  40fb4f:	jg     0x40fb7e
  40fb51:	dec    eax
  40fb52:	icebp  
  40fb53:	imul   ebp,edi,0x26c7e19f
  40fb59:	loop   0x40fb43
  40fb5b:	dec    eax
  40fb5c:	sub    BYTE PTR [eax+eiz*4+0x29],dh
  40fb60:	rcl    BYTE PTR [edi+edi*8-0xb],cl
  40fb64:	push   cs
  40fb65:	add    eax,0x9b6b88fb
  40fb6a:	(bad)  
  40fb6c:	push   esp
  40fb6d:	fldenv [eax]
  40fb6f:	mov    cl,0x3b
  40fb71:	and    BYTE PTR [ebp-0x204c209c],al
  40fb77:	rcl    BYTE PTR [ecx],1
  40fb79:	fcomp  QWORD PTR [ebp+0x4ec07936]
  40fb7f:	in     eax,0x3b
  40fb81:	test   DWORD PTR [esi+0x55fb04a0],eax
  40fb87:	cmp    ecx,DWORD PTR [edx+0x21012839]
  40fb8d:	xor    al,0xb7
  40fb8f:	and    bl,ch
  40fb91:	add    edx,DWORD PTR [edx+0x2d]
  40fb94:	cmp    eax,0x6bd000b
  40fb99:	fdivr  QWORD PTR [edx+0x40]
  40fb9c:	gs add eax,0x8aac8e56
  40fba2:	and    BYTE PTR [eax+0x235c5f06],0xb1
  40fba9:	rcr    BYTE PTR [edx],0xa8
  40fbac:	jle    0x40fbe4
  40fbae:	cpuid  
  40fbb0:	ret    0xd0fe
  40fbb3:	xor    ah,BYTE PTR [edi-0x7bbc0321]
  40fbb9:	jle    0x40fb5a
  40fbbb:	out    dx,al
  40fbbc:	mov    ecx,0xebd668b
  40fbc1:	jno    0x40fb79
  40fbc3:	cmp    BYTE PTR [eax],bl
  40fbc5:	push   eax
  40fbc6:	fiadd  WORD PTR [edx+0x43e015af]
  40fbcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbcd:	jp     0x40fb54
  40fbcf:	clc    
  40fbd0:	stos   DWORD PTR es:[edi],eax
  40fbd1:	and    BYTE PTR [ebx+0x6c77b4c1],bh
  40fbd7:	xchg   esi,eax
  40fbd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbd9:	fwait
  40fbda:	(bad)  
  40fbdb:	xlat   BYTE PTR ds:[ebx]
  40fbdc:	jge    0x40fba7
  40fbde:	xchg   edi,eax
  40fbdf:	sbb    bh,BYTE PTR [edx+0x4e]
  40fbe2:	retf   
  40fbe3:	push   edi
  40fbe4:	iret   
  40fbe5:	jbe    0x40fbfd
  40fbe7:	cmp    eax,ebp
  40fbe9:	cmp    al,0x87
  40fbeb:	xor    al,0xf0
  40fbed:	push   edi
  40fbee:	mov    ecx,0x21b1f7ea
  40fbf3:	jbe    0x40fbe6
  40fbf5:	xor    al,0x1
  40fbf7:	mov    dh,0x66
  40fbf9:	data16 (bad) 
  40fbfb:	into   
  40fbfc:	and    al,0x64
  40fbfe:	pop    esi
  40fbff:	ficomp DWORD PTR [eax]
  40fc01:	sar    DWORD PTR [ebx+edx*4],1
  40fc04:	jnp    0x40fbe7
  40fc06:	cmp    DWORD PTR [edi-0x28],esp
  40fc09:	and    esp,ebx
  40fc0b:	cld    
  40fc0c:	mov    ds:0x1c004e40,eax
  40fc11:	aam    0x8d
  40fc13:	xchg   ebp,eax
  40fc14:	in     al,0xce
  40fc16:	sbb    BYTE PTR [ebx],dl
  40fc18:	call   0x6534:0xfa3b662
  40fc1f:	test   DWORD PTR [edx-0x11bcb21d],0x3b11e643
  40fc29:	retf   0xd0a
  40fc2c:	lods   al,BYTE PTR ds:[esi]
  40fc2d:	push   ebp
  40fc2e:	lods   al,BYTE PTR ds:[esi]
  40fc2f:	mov    edx,DWORD PTR [esp+ecx*4+0x76]
  40fc33:	rol    BYTE PTR ds:0x444764c3,cl
  40fc39:	lock lock cmp edx,DWORD PTR [ecx-0x15]
  40fc3e:	jg     0x40fbdb
  40fc40:	sbb    ah,BYTE PTR [ecx-0x25]
  40fc43:	xchg   ebp,eax
  40fc44:	inc    edx
  40fc45:	cmp    ah,bh
  40fc47:	and    edi,DWORD PTR [edi+0x2c]
  40fc4a:	in     eax,0x16
  40fc4c:	add    DWORD PTR [edx+0x10dd216e],edx
  40fc52:	jne    0x40fc89
  40fc54:	bnd je 0x40fc4f
  40fc57:	add    eax,0x71f813b9
  40fc5c:	cld    
  40fc5d:	jbe    0x40fc16
  40fc5f:	out    dx,al
  40fc60:	rcl    DWORD PTR [ecx+0x61],1
  40fc63:	and    edx,DWORD PTR [ecx+0x75988365]
  40fc69:	jbe    0x40fcad
  40fc6b:	(bad)  
  40fc6c:	cld    
  40fc6d:	sub    al,0x66
  40fc6f:	loopne 0x40fc17
  40fc71:	push   ds
  40fc72:	mov    ebp,0x77bd0298
  40fc77:	(bad)  
  40fc78:	jecxz  0x40fc58
  40fc7a:	xchg   edi,eax
  40fc7b:	rcr    DWORD PTR ds:0x38eba7c,cl
  40fc81:	lock rol BYTE PTR [eax],0x88
  40fc85:	lds    esp,FWORD PTR [edx+ebp*4-0xa]
  40fc89:	(bad)  
  40fc8a:	jae    0x40fc82
  40fc8c:	into   
  40fc8d:	mov    DWORD PTR [edi+0x2acbe9d3],esp
  40fc93:	shr    DWORD PTR ds:0x681f203,0xc2
  40fc9a:	and    al,0x48
  40fc9d:	mov    eax,ds:0xb37422b9
  40fca2:	jnp    0x40fc45
  40fca4:	loop   0x40fd04
  40fca6:	xchg   DWORD PTR [esi],ebp
  40fca8:	jae    0x40fc72
  40fcaa:	add    al,0xee
  40fcac:	sub    eax,DWORD PTR [esi+0x5a2421a9]
  40fcb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcb3:	jb     0x40fd0d
  40fcb5:	in     eax,0xe3
  40fcb7:	lsl    esi,WORD PTR [ebx]
  40fcba:	mov    ds:0x49782a0d,eax
  40fcbf:	inc    ebp
  40fcc0:	lds    edi,FWORD PTR [edx-0x47dbd2ae]
  40fcc6:	jo     0x40fd26
  40fcc8:	sar    DWORD PTR [eax+0x214cc957],1
  40fcce:	cmp    BYTE PTR [esi-0x5b],0xa3
  40fcd2:	cmp    edi,esp
  40fcd4:	popf   
  40fcd5:	push   ebx
  40fcd6:	bswap  edx
  40fcd8:	inc    edi
  40fcd9:	add    eax,0xd1ed74e7
  40fcde:	test   BYTE PTR [edi-0x52],ah
  40fce1:	lds    ebp,FWORD PTR [edx+0x4b]
  40fce4:	pusha  
  40fce5:	fninit 
  40fce7:	aad    0x8f
  40fce9:	mov    ds:0x5bb55ed4,eax
  40fcee:	pop    es
  40fcef:	cmp    BYTE PTR [ebp+0x83e41cd],bh
  40fcf5:	dec    eax
  40fcf6:	sub    ebp,DWORD PTR [edx+0x9]
  40fcf9:	into   
  40fcfa:	es mov bh,0x9c
  40fcfd:	cmc    
  40fcfe:	jb     0x40fcdc
  40fd00:	cmp    BYTE PTR [ecx+0x75],bh
  40fd03:	mov    ds:0xa3cd43de,eax
  40fd08:	dec    ebp
  40fd09:	mov    al,ds:0x6215f25b
  40fd0e:	add    dh,BYTE PTR ds:0xf3501bc4
  40fd14:	cmp    al,0x18
  40fd16:	imul   ebp,DWORD PTR ds:0xed662e4b,0x3babad19
  40fd20:	and    BYTE PTR [edi-0x10],cl
  40fd23:	sahf   
  40fd24:	sahf   
  40fd25:	sub    ch,BYTE PTR [edi+0x4963d9d0]
  40fd2b:	mov    WORD PTR [edx],fs
  40fd2d:	retf   0xa67e
  40fd30:	or     bh,BYTE PTR ds:0x38730c51
  40fd36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd37:	add    esi,DWORD PTR [esi-0x11cbdf26]
  40fd3d:	sbb    eax,0x4330fb4
  40fd42:	mov    al,0x4
  40fd44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd45:	xchg   ebp,eax
  40fd46:	mov    DWORD PTR [ebp-0xa8cf78e],esi
  40fd4c:	js     0x40fd32
  40fd4e:	ins    DWORD PTR es:[edi],dx
  40fd4f:	cmp    ebp,DWORD PTR [edi+0x1cb90a91]
  40fd55:	(bad)  
  40fd56:	cmc    
  40fd57:	inc    esp
  40fd58:	fisttp DWORD PTR [ebx+0x45763b7d]
  40fd5e:	(bad)  
  40fd5f:	arpl   WORD PTR [ecx+ebp*4-0x4dc09112],cx
  40fd66:	mov    esp,0x215103aa
  40fd6b:	sub    esp,0x6fc60f31
  40fd71:	pop    esp
  40fd72:	retf   
  40fd73:	cmp    al,0x1e
  40fd75:	xchg   edx,eax
  40fd76:	outs   dx,DWORD PTR ds:[esi]
  40fd77:	inc    ecx
  40fd78:	jg     0x40fd45
  40fd7a:	xchg   ax,si
  40fd7d:	jle    0x40fd33
  40fd7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd80:	lock dec edi
  40fd82:	dec    ebp
  40fd83:	inc    edi
  40fd84:	mov    ebx,DWORD PTR [ebx+0x59ac016f]
  40fd8a:	and    eax,0x2a3ff75b
  40fd8f:	fsub   QWORD PTR [eax]
  40fd91:	jmp    0xcb9b:0x8bb6a98
  40fd98:	sbb    bl,dl
  40fd9a:	sub    eax,DWORD PTR [ecx-0x2b085977]
  40fda0:	clc    
  40fda1:	fwait
  40fda2:	xchg   edx,eax
  40fda3:	adc    ah,ch
  40fda5:	adc    al,0x72
  40fda7:	pop    ebp
  40fda8:	inc    ebx
  40fda9:	ret    0xc3ed
  40fdac:	call   0x790b:0x11b4ca2c
  40fdb3:	ret    
  40fdb4:	or     DWORD PTR [edx-0x74],esp
  40fdb7:	and    DWORD PTR ds:0x8ff7aa43,ecx
  40fdbd:	sub    eax,0xbcad2a6
  40fdc2:	push   cs
  40fdc3:	adc    eax,0xf6bc698d
  40fdc8:	std    
  40fdc9:	dec    ebp
  40fdca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdcb:	ficomp WORD PTR [ecx+0x18]
  40fdce:	xchg   cl,bl
  40fdd0:	inc    eax
  40fdd1:	inc    edi
  40fdd2:	inc    esp
  40fdd3:	adc    edi,ecx
  40fdd5:	inc    ebp
  40fdd6:	xor    BYTE PTR [edi],ah
  40fdd8:	cld    
  40fdd9:	mov    esp,0x5eaf6ffd
  40fdde:	jne    0x40fd6f
  40fde0:	mov    edi,0x9f16290a
  40fde5:	mov    ds:0x1e8c011c,eax
  40fdea:	sahf   
  40fdeb:	lds    ebp,FWORD PTR [eax+0x1e]
  40fdee:	icebp  
  40fdef:	and    ebx,DWORD PTR [edi+0x4d242f4d]
  40fdf5:	fstp   QWORD PTR [edi+0x66]
  40fdf8:	xchg   BYTE PTR [edx+0x5d5bb746],ch
  40fdfe:	xlat   BYTE PTR ds:[ebx]
  40fdff:	stc    
  40fe00:	nop
  40fe01:	jcxz   0x40fe40
  40fe04:	(bad)  
  40fe05:	std    
  40fe06:	rol    al,cl
  40fe08:	dec    edx
  40fe09:	stc    
  40fe0a:	pusha  
  40fe0b:	inc    esp
  40fe0c:	into   
  40fe0d:	pop    ebp
  40fe0e:	cmp    ecx,DWORD PTR [edi]
  40fe10:	sub    eax,0x36126dbc
  40fe15:	daa    
  40fe16:	je     0x40fe19
  40fe18:	inc    ecx
  40fe19:	int3   
  40fe1a:	cld    
  40fe1b:	dec    ebx
  40fe1c:	arpl   WORD PTR [ebx+0x67],di
  40fe1f:	out    0x72,eax
  40fe21:	xchg   ebp,eax
  40fe22:	jno    0x40fe63
  40fe24:	stc    
  40fe25:	imul   ebx,DWORD PTR [ebx+eax*2],0xffffff91
  40fe29:	jo     0x40fe0d
  40fe2b:	jns    0x40fdbc
  40fe2d:	adc    ebx,DWORD PTR [ebx-0x73]
  40fe30:	mov    dl,0xbe
  40fe32:	pop    eax
  40fe33:	mov    eax,0x80898949
  40fe38:	adc    ah,BYTE PTR [edi-0x7e]
  40fe3b:	cmp    BYTE PTR [esi-0x2d0ab015],ch
  40fe41:	popa   
  40fe42:	aad    0x4b
  40fe44:	cmc    
  40fe45:	push   ebp
  40fe46:	and    al,0x3
  40fe48:	mov    fs,WORD PTR [ebp+0x2180d6f5]
  40fe4e:	adc    bl,BYTE PTR [esi]
  40fe50:	push   ecx
  40fe51:	packsswb mm0,QWORD PTR [eax]
  40fe54:	or     al,BYTE PTR [eax]
  40fe56:	dec    edx
  40fe57:	sbb    bl,BYTE PTR [ebp+0x20]
  40fe5a:	in     al,dx
  40fe5b:	loopne 0x40fed8
  40fe5d:	xchg   DWORD PTR [esi-0x68],edi
  40fe60:	test   BYTE PTR [ecx-0x5],ch
  40fe63:	inc    esi
  40fe64:	mov    bh,0x54
  40fe66:	retf   0x2b4e
  40fe69:	inc    ebp
  40fe6a:	jp     0x40fe6b
  40fe6c:	dec    ebx
  40fe6d:	cmp    eax,0x8ca3eee2
  40fe72:	test   DWORD PTR [ecx+edi*1],edi
  40fe75:	fst    QWORD PTR [ebx]
  40fe77:	adc    eax,0x501d66ee
  40fe7c:	fdiv   QWORD PTR [edi+ebx*8]
  40fe7f:	pop    esi
  40fe80:	cmp    ah,BYTE PTR [ecx-0x4e]
  40fe83:	mov    edx,DWORD PTR [eax+edi*1+0x1d259c28]
  40fe8a:	test   DWORD PTR [ebx+0x2c26a24a],eax
  40fe90:	in     al,0x6d
  40fe92:	cmp    DWORD PTR [eax],ebp
  40fe94:	pop    ds
  40fe95:	adc    bl,BYTE PTR [edi]
  40fe97:	lea    ebx,[eax]
  40fe99:	pop    edx
  40fe9a:	cmp    BYTE PTR [ebp+0x416d7a78],al
  40fea0:	and    BYTE PTR [edi+0x4fed8bd8],ah
  40fea6:	cdq    
  40fea7:	popf   
  40fea8:	popf   
  40fea9:	shl    BYTE PTR [ebx-0x73d3692c],cl
  40feaf:	in     eax,dx
  40feb0:	inc    ecx
  40feb1:	mov    ss,WORD PTR [eax+0x2192bd37]
  40feb7:	add    ebx,DWORD PTR [ebx+ebx*2+0x3ffb31f5]
  40febe:	mov    al,ds:0x7db76831
  40fec3:	xor    DWORD PTR [eax],eax
  40fec5:	jo     0x40fec2
  40fec7:	add    al,0xdb
  40fec9:	ins    DWORD PTR es:[edi],dx
  40feca:	mov    ecx,0x41832e54
  40fecf:	jns    0x40fead
  40fed1:	or     ch,BYTE PTR [ecx+0x17]
  40fed4:	or     BYTE PTR [ebx+0x34bb7d98],0x6c
  40fedb:	imul   ebp,edx,0x567bf48c
  40fee1:	scas   al,BYTE PTR es:[edi]
  40fee2:	dec    ebx
  40fee3:	cwde   
  40fee4:	sub    ah,bl
  40fee6:	outs   dx,BYTE PTR ds:[esi]
  40fee7:	inc    edi
  40fee8:	fs fwait
  40feea:	mov    ds:0x4d6b0b8c,al
  40feef:	fidiv  DWORD PTR [eax]
  40fef1:	or     ebp,DWORD PTR ds:0x44219f1e
  40fef7:	or     ah,dh
  40fef9:	data16 js 0x40fedc
  40fefc:	jg     0x40fee8
  40fefe:	dec    edi
  40feff:	jle    0x40fe8c
  40ff01:	aas    
  40ff02:	loop   0x40ff0c
  40ff04:	rol    BYTE PTR [eax],cl
  40ff06:	dec    ecx
  40ff07:	cld    
  40ff08:	fdivr  QWORD PTR [esi+ecx*1+0x76]
  40ff0c:	sbb    al,0x1d
  40ff0e:	mov    cl,ch
  40ff10:	jbe    0x40ff75
  40ff12:	sbb    eax,0xc1f5c6b0
  40ff17:	cmp    al,0x36
  40ff19:	push   edi
  40ff1a:	pop    edi
  40ff1b:	mov    esp,0xfc8a59bb
  40ff20:	jbe    0x40ff9f
  40ff22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff23:	scas   al,BYTE PTR es:[edi]
  40ff24:	adc    BYTE PTR [eax+0x7a],0x6b
  40ff28:	outs   dx,DWORD PTR ds:[esi]
  40ff29:	lock add eax,0xd744af01
  40ff2f:	scas   al,BYTE PTR es:[edi]
  40ff30:	and    cl,BYTE PTR [ebx-0x4d1614b4]
  40ff36:	cdq    
  40ff37:	(bad)  
  40ff38:	jge    0x40fed8
  40ff3a:	jns    0x40ff7f
  40ff3c:	mov    bh,0x3c
  40ff3e:	into   
  40ff3f:	stos   DWORD PTR es:[edi],eax
  40ff40:	leave  
  40ff41:	xlat   BYTE PTR ds:[ebx]
  40ff42:	dec    ebp
  40ff43:	adc    eax,DWORD PTR [ecx]
  40ff45:	call   0x4999:0x48b8cf80
  40ff4c:	repnz and DWORD PTR [edx-0x674fab47],esp
  40ff53:	retf   
  40ff54:	cmp    al,0x5e
  40ff56:	adc    al,0xf7
  40ff58:	pop    ss
  40ff59:	pushf  
  40ff5a:	js     0x40ff97
  40ff5c:	push   0xfffffffe
  40ff5e:	jae    0x40ff98
  40ff60:	xchg   ecx,eax
  40ff61:	jo     0x40ff25
  40ff63:	adc    ecx,DWORD PTR [esi-0x6b]
  40ff66:	enter  0xc60e,0x8
  40ff6a:	imul   ebx,DWORD PTR [eax+0x56],0xffffffab
  40ff6e:	or     BYTE PTR [edx+0x4d],bh
  40ff71:	sub    BYTE PTR [esi+ecx*4],0x3d
  40ff75:	ds push 0xdd8c9a63
  40ff7b:	pop    esp
  40ff7c:	adc    ebp,esp
  40ff7e:	pop    esp
  40ff7f:	ins    DWORD PTR es:[edi],dx
  40ff80:	scas   eax,DWORD PTR es:[edi]
  40ff81:	or     dh,BYTE PTR [edx+0x7d]
  40ff84:	cld    
  40ff85:	push   ebx
  40ff86:	dec    esi
  40ff87:	sub    eax,DWORD PTR [esi+0xb600db4]
  40ff8d:	adc    esp,0xfffffff1
  40ff90:	xor    bl,bl
  40ff92:	sub    eax,0x1b5d6df9
  40ff97:	(bad)  
  40ff98:	cli    
  40ff99:	pop    ss
  40ff9a:	and    BYTE PTR [ecx+0x50e49deb],bh
  40ffa0:	pop    esi
  40ffa1:	cmp    dh,BYTE PTR [eax-0x5f]
  40ffa4:	xor    al,0x68
  40ffa6:	jb     0x40ff35
  40ffa8:	jmp    0x40ff2f
  40ffaa:	mov    edx,0x8546d3b3
  40ffaf:	test   BYTE PTR [esi+0x14],dl
  40ffb2:	or     DWORD PTR ds:0x99b0bf13,0xffffffa1
  40ffb9:	popf   
  40ffba:	add    BYTE PTR [ebp+0xb],0xe4
  40ffbe:	and    edi,ebp
  40ffc0:	inc    ebx
  40ffc1:	sahf   
  40ffc2:	sbb    BYTE PTR [edi+0x61],dh
  40ffc5:	je     0x40ff9d
  40ffc7:	pop    edi
  40ffc8:	jo     0x40ffcc
  40ffca:	out    0xea,al
  40ffcc:	fninit 
  40ffce:	test   al,0x91
  40ffd0:	push   edx
  40ffd1:	pop    edx
  40ffd2:	mov    al,0x13
  40ffd4:	repnz pop edi
  40ffd6:	push   es
  40ffd7:	in     eax,dx
  40ffd8:	sar    BYTE PTR [ebx+0x69],1
  40ffdb:	retf   
  40ffdc:	lock mov dl,0xbd
  40ffdf:	imul   ebp,DWORD PTR [edi-0x3],0xf2d95e4d
  40ffe6:	push   esp
  40ffe7:	cld    
  40ffe8:	shr    bh,cl
  40ffea:	adc    eax,0x5bca9aac
  40ffef:	or     eax,0xa1cd7303
  40fff4:	lds    eax,FWORD PTR [ecx-0x13]
  40fff7:	dec    edi
  40fff8:	imul   edi,DWORD PTR [ebx+0x5018d1eb],0xceac74c0
  410002:	pop    ebx
  410003:	outs   dx,BYTE PTR ds:[esi]
  410004:	(bad)  
  410005:	sub    eax,0x7c394238
  41000a:	imul   BYTE PTR [ebp-0xb89c4a3]
  410010:	dec    esp
  410011:	lock fsubr DWORD PTR [esi]
  410014:	dec    edi
  410015:	das    
  410016:	mov    bl,0x74
  410018:	mov    ds,esi
  41001a:	shl    BYTE PTR [ebx+ecx*4-0x60],1
  41001e:	test   al,0x62
  410020:	enter  0xbaa2,0x7
  410024:	outs   dx,BYTE PTR ds:[esi]
  410025:	sub    eax,0x1827cd1b
  41002a:	mov    esi,0x953b4e3e
  41002f:	out    dx,al
  410030:	inc    edi
  410031:	sub    edi,DWORD PTR [eax-0xaf99069]
  410037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410038:	sbb    bh,BYTE PTR [ebp-0x23403eeb]
  41003e:	(bad)  
  41003f:	mov    bh,0x2
  410041:	pop    es
  410042:	jae    0x4100a6
  410044:	inc    edi
  410045:	jne    0x4100b5
  410047:	dec    esi
  410048:	cmp    eax,eax
  41004a:	mov    ebp,0x40a4c654
  41004f:	fnstenv [ebp-0x2f0c12b]
  410055:	add    eax,0x1bf0b535
  41005a:	pop    es
  41005b:	aaa    
  41005c:	xchg   esp,eax
  41005d:	lahf   
  41005e:	into   
  41005f:	xor    eax,0x71c61c87
  410064:	cmc    
  410065:	dec    esi
  410066:	dec    eax
  410067:	arpl   WORD PTR [ecx],bx
  410069:	xchg   ebx,eax
  41006a:	mov    ecx,0xb318a8b4
  41006f:	and    al,0x18
  410071:	mov    dl,0xcb
  410073:	mov    cs,WORD PTR [edi-0x22f680a2]
  410079:	clc    
  41007a:	pop    edi
  41007b:	stc    
  41007c:	fbld   TBYTE PTR [edi]
  41007e:	mov    ch,0x17
  410080:	call   0xe70a4583
  410085:	cmp    ebx,esp
  410087:	jns    0x410055
  410089:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41008a:	pushf  
  41008b:	in     eax,0x35
  41008d:	jns    0x41009c
  41008f:	les    esp,FWORD PTR [edi-0x7]
  410092:	inc    edi
  410093:	ror    BYTE PTR [eax+0x118a43d5],1
  410099:	scas   eax,DWORD PTR es:[edi]
  41009a:	jge    0x410072
  41009c:	or     eax,0x2d61dd51
  4100a1:	mov    al,0xf7
  4100a3:	mov    ecx,0x99bdd65f
  4100a8:	mov    WORD PTR [ecx+edi*8-0x1d],gs
  4100ac:	mov    ds:0xd4475a8c,eax
  4100b1:	or     ch,BYTE PTR [ebx]
  4100b3:	add    eax,0x9e2ed0f1
  4100b8:	test   al,0xb1
  4100ba:	xor    DWORD PTR [eax-0x385b847a],0x37
  4100c1:	addr16 push esi
  4100c3:	jno    0x41010d
  4100c5:	inc    edx
  4100c6:	mov    ds:0x12444f9e,eax
  4100cb:	das    
  4100cc:	jle    0x4100d2
  4100ce:	push   ebx
  4100cf:	pop    es
  4100d0:	ret    0x9d81
  4100d3:	mov    BYTE PTR [esi+0x5aee0525],ch
  4100d9:	lods   eax,DWORD PTR ds:[esi]
  4100da:	das    
  4100db:	shl    edi,1
  4100dd:	fninit 
  4100df:	mov    esp,0x974cd7a2
  4100e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100e5:	lahf   
  4100e6:	mov    ah,0x60
  4100e8:	pop    ss
  4100e9:	xor    ebp,edx
  4100eb:	int3   
  4100ec:	call   0xa1a70868
  4100f1:	stc    
  4100f2:	push   esi
  4100f3:	push   esp
  4100f4:	mov    bh,0xef
  4100f6:	idiv   DWORD PTR [ebp-0x68]
  4100f9:	mov    edi,0x9b59936f
  4100fe:	mov    edx,?
  410100:	sub    ecx,ebx
  410102:	sub    BYTE PTR [esi+0x75],ah
  410105:	mov    dh,0xc6
  410107:	repnz pop esp
  410109:	dec    ebx
  41010a:	dec    edx
  41010b:	out    dx,eax
  41010c:	cwde   
  41010d:	xchg   DWORD PTR [ebx],edi
  41010f:	and    esi,DWORD PTR ds:0x47083c59
  410115:	dec    edx
  410116:	lods   al,BYTE PTR ds:[esi]
  410117:	and    DWORD PTR [ecx],edx
  410119:	jnp    0x410153
  41011b:	and    edi,DWORD PTR [eax+ebx*2-0x18]
  41011f:	pusha  
  410120:	jle    0x41010a
  410122:	adc    eax,0x182dc8cd
  410127:	cmp    DWORD PTR [esp+ecx*2+0x7ee66ec2],esi
  41012e:	scas   al,BYTE PTR es:[edi]
  41012f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410130:	lds    edi,FWORD PTR [ebx+0x20a7e804]
  410136:	mov    eax,0xd77bab78
  41013b:	pop    eax
  41013c:	jle    0x410195
  41013e:	pop    edx
  41013f:	pop    ebp
  410140:	xchg   esp,eax
  410141:	hlt    
  410142:	mov    esi,0xdf6fbf34
  410147:	dec    edx
  410148:	pop    ss
  410149:	jmp    0x1098:0xb13fe975
  410150:	push   ebx
  410151:	add    BYTE PTR [ecx+0xf85cdf4],cl
  410157:	lea    ecx,[eax+0x4b0ab2f5]
  41015d:	jg     0x4101d3
  41015f:	es inc ebx
  410161:	inc    eax
  410162:	retf   0x14e4
  410165:	lods   eax,DWORD PTR ds:[esi]
  410166:	mov    ch,0x31
  410168:	jae    0x410154
  41016a:	addr16 retf 0x46cc
  41016e:	(bad)  
  41016f:	ins    BYTE PTR es:[edi],dx
  410170:	rol    DWORD PTR [esi-0x6460447b],cl
  410176:	jg     0x410151
  410178:	lds    esp,FWORD PTR [ecx-0x47a67e2b]
  41017e:	in     al,dx
  41017f:	cmp    DWORD PTR [ebx+0x36],esi
  410182:	mov    dl,0xe9
  410184:	or     al,0xc1
  410186:	inc    ecx
  410187:	test   DWORD PTR [edx],0x7da90136
  41018d:	cmp    ebx,DWORD PTR [edi]
  41018f:	ret    
  410190:	gs inc eax
  410192:	or     BYTE PTR [eax-0x67],ah
  410195:	dec    eax
  410196:	pop    ebx
  410197:	sti    
  410198:	mov    cl,0xd2
  41019a:	ret    0x8e8c
  41019d:	or     al,0x73
  41019f:	(bad)  
  4101a0:	(bad)  
  4101a1:	and    bl,BYTE PTR [eax]
  4101a3:	dec    ebx
  4101a4:	jecxz  0x41020c
  4101a6:	push   ss
  4101a7:	hlt    
  4101a8:	dec    edx
  4101a9:	mov    dl,0x6c
  4101ab:	ins    BYTE PTR es:[edi],dx
  4101ac:	xor    ecx,ebx
  4101ae:	add    bh,dh
  4101b0:	cwde   
  4101b1:	push   0xffffffdf
  4101b3:	mov    bh,0x29
  4101b5:	(bad)  
  4101b6:	mov    dl,0xfe
  4101b8:	mov    ebx,0xe8eb7256
  4101bd:	sub    DWORD PTR [esi],eax
  4101bf:	inc    edi
  4101c0:	sub    al,0x3f
  4101c2:	push   ecx
  4101c3:	and    ah,BYTE PTR [eax-0x1a]
  4101c6:	mov    BYTE PTR [eax-0x3a50d332],bh
  4101cc:	mov    bl,0xbd
  4101ce:	cwde   
  4101cf:	mov    bh,0xdb
  4101d1:	cmp    al,0xaf
  4101d3:	clc    
  4101d4:	push   0x4b
  4101d6:	dec    esp
  4101d7:	icebp  
  4101d8:	and    ecx,DWORD PTR [ecx-0x4a]
  4101db:	leave  
  4101dc:	pop    es
  4101dd:	sub    BYTE PTR [ecx],cl
  4101df:	popa   
  4101e0:	int3   
  4101e1:	xchg   BYTE PTR [ebx+0xa7e8948],bh
  4101e7:	aad    0x7a
  4101e9:	pop    ebp
  4101ea:	push   ebp
  4101eb:	lock dec ebx
  4101ed:	or     cl,BYTE PTR ds:0x669373ab
  4101f3:	lods   al,BYTE PTR cs:[esi]
  4101f5:	adc    dl,0x45
  4101f8:	inc    eax
  4101f9:	mov    bh,ah
  4101fb:	jmp    0x1b91:0xb7dc552d
  410202:	push   esi
  410203:	dec    ebp
  410204:	adc    eax,0x8879e70b
  410209:	iret   
  41020a:	xor    al,0xb3
  41020c:	pop    esi
  41020d:	test   bh,al
  41020f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410210:	sub    BYTE PTR [edi-0x1b4e4dda],0x12
  410217:	call   0xcff1d6e8
  41021c:	test   BYTE PTR [edx-0x2d61f3b5],bh
  410222:	sbb    al,0x93
  410224:	out    0xc6,al
  410226:	hlt    
  410227:	mov    ch,0x5e
  410229:	sub    ecx,DWORD PTR [ebp+0x129ddb12]
  41022f:	jne    0x4101ea
  410231:	xchg   edx,eax
  410232:	fiadd  WORD PTR [ebp+0x54]
  410235:	mov    DWORD PTR [ecx-0x43],esi
  410238:	test   BYTE PTR [eax+edi*1+0x53042ff0],ah
  41023f:	fwait
  410240:	test   al,0x6f
  410242:	mul    BYTE PTR [esi]
  410244:	sar    edi,0x30
  410247:	lahf   
  410248:	call   0x4ad12912
  41024d:	jg     0x410282
  41024f:	scas   al,BYTE PTR es:[edi]
  410250:	ins    BYTE PTR es:[edi],dx
  410251:	mov    ds:0x6c8e4a97,eax
  410256:	or     DWORD PTR [ebp+0x1cd852e5],esi
  41025c:	lea    esi,[eax]
  41025e:	jmp    0xaa27b514
  410263:	cmp    esi,DWORD PTR [edi+0x690f6907]
  410269:	lea    ebp,[edx-0x17]
  41026c:	jno    0x9201d28f
  410272:	(bad)  
  410273:	sbb    DWORD PTR [esi+0x43],0x813f2c43
  41027a:	sbb    BYTE PTR [ecx],cl
  41027c:	dec    eax
  41027d:	shl    DWORD PTR [eax+0x216087a1],0xe0
  410284:	add    BYTE PTR [ebx-0x3fcf8f9b],bh
  41028a:	pop    ebp
  41028b:	into   
  41028c:	mov    WORD PTR [esi+0x77],ss
  41028f:	test   DWORD PTR [ecx+0x1ae9a0b5],edx
  410295:	rcl    DWORD PTR [edx],0x48
  410298:	ror    ch,0x7d
  41029b:	les    ebx,FWORD PTR [eax]
  41029d:	mov    bl,0x6a
  41029f:	lahf   
  4102a0:	(bad)  [edi]
  4102a2:	nop
  4102a3:	fsubr  DWORD PTR [ebx]
  4102a5:	ss push edx
  4102a7:	rcl    DWORD PTR [ecx-0x23ae83db],cl
  4102ad:	xchg   BYTE PTR [edi+ebx*2],dh
  4102b0:	jl     0x41030e
  4102b2:	popf   
  4102b3:	popa   
  4102b4:	xchg   edi,eax
  4102b5:	dec    ecx
  4102b6:	(bad)  
  4102b7:	icebp  
  4102b8:	sub    BYTE PTR [edi-0x16],dh
  4102bb:	ds gs test eax,0xbaea514b
  4102c2:	mov    dh,0x98
  4102c4:	fsubr  st(2),st
  4102c6:	jle    0x4102a8
  4102c8:	mov    bh,0xc8
  4102ca:	jns    0x410272
  4102cc:	sti    
  4102cd:	out    dx,eax
  4102ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102cf:	jno    0x4102fb
  4102d1:	jno    0x410312
  4102d3:	jmp    FWORD PTR ds:0x4c65017c
  4102d9:	(bad)  
  4102da:	mov    dl,0x18
  4102dc:	aaa    
  4102dd:	sbb    eax,0x6c53b698
  4102e2:	xor    DWORD PTR [edx-0x14],ecx
  4102e5:	sub    DWORD PTR [edx+0x74de216c],0xadddba85
  4102ef:	dec    esi
  4102f0:	and    al,0xef
  4102f2:	sti    
  4102f3:	add    edx,DWORD PTR [ebp+0x3cec31a3]
  4102f9:	and    DWORD PTR [edi-0x27e644c9],eax
  4102ff:	in     eax,dx
  410300:	mov    bh,0xfe
  410302:	push   eax
  410303:	aam    0x61
  410305:	jns    0x4102ba
  410307:	pop    edi
  410308:	andnps xmm3,xmm0
  41030b:	jmp    0x4102cf
  41030d:	in     eax,dx
  41030e:	and    eax,0x461436f9
  410313:	dec    ebp
  410314:	cwde   
  410315:	xlat   BYTE PTR ds:[ebx]
  410316:	adc    al,0x50
  410318:	sbb    eax,0xe8c9b5e5
  41031d:	sub    al,0xa4
  41031f:	test   al,0x1d
  410321:	loop   0x4102d6
  410323:	out    dx,eax
  410324:	push   cs
  410325:	frstor [eax]
  410327:	sbb    al,0xa7
  410329:	add    al,0xfc
  41032b:	outs   dx,DWORD PTR ds:[esi]
  41032c:	out    dx,al
  41032d:	jecxz  0x410390
  41032f:	jns    0x4103ac
  410331:	sub    BYTE PTR [edi+edx*2-0x5d4f7909],dl
  410338:	jbe    0x4102be
  41033a:	adc    BYTE PTR [edx+0x26],0xc7
  41033e:	(bad)
  410341:	add    ebx,DWORD PTR [ebx]
  410343:	in     al,0x2a
  410345:	dec    ebx
  410346:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410347:	jb     0x41035a
  410349:	add    DWORD PTR [esi],0x2b
  41034c:	xchg   BYTE PTR [ecx],cl
  41034e:	ret    
  41034f:	(bad)  
  410350:	inc    ecx
  410351:	sahf   
  410352:	fwait
  410353:	aas    
  410354:	stc    
  410355:	mov    al,ds:0x9c990ce2
  41035a:	int3   
  41035b:	add    DWORD PTR [eax],0x719e811b
  410361:	sub    BYTE PTR [edx+0x6c],0x41
  410365:	not    DWORD PTR [ecx]
  410367:	cmp    edi,ecx
  410369:	inc    bh
  41036b:	(bad)  
  41036c:	stc    
  41036d:	retf   
  41036e:	sbb    eax,0x25b38df7
  410373:	xchg   edi,eax
  410374:	adc    DWORD PTR [eax+edx*2+0x4c],0xffffff9b
  410379:	jbe    0x4103be
  41037b:	sub    eax,0x572855ef
  410380:	pushf  
  410381:	add    bl,BYTE PTR [edx-0xa3a01b4]
  410387:	xchg   edx,eax
  410388:	test   al,0xe1
  41038a:	fistp  QWORD PTR [esi+0x10d09e5e]
  410390:	jbe    0x41031a
  410392:	pop    ecx
  410393:	pop    ds
  410394:	jl     0x4103fe
  410396:	aam    0xa
  410398:	popf   
  410399:	pop    esi
  41039a:	mov    dl,0xf
  41039c:	call   0x52cc0e16
  4103a1:	cmp    bh,0xc9
  4103a4:	or     ebp,esi
  4103a6:	mov    bl,0xd8
  4103a8:	jmp    0x410371
  4103aa:	cmp    dh,BYTE PTR [edx]
  4103ac:	sti    
  4103ad:	cs xor al,0xa0
  4103b0:	stc    
  4103b1:	scas   eax,DWORD PTR es:[edi]
  4103b2:	push   esi
  4103b3:	rcl    BYTE PTR [esi-0x71a97c43],1
  4103b9:	stos   BYTE PTR es:[edi],al
  4103ba:	lods   eax,DWORD PTR ds:[esi]
  4103bb:	rcl    eax,0x88
  4103be:	xchg   esp,eax
  4103bf:	push   0x82c26e1f
  4103c4:	pop    esi
  4103c5:	and    edx,DWORD PTR [ecx]
  4103c7:	ror    BYTE PTR [edx+eax*8-0x14],0x20
  4103cc:	xor    al,0x74
  4103ce:	js     0x410430
  4103d0:	push   ecx
  4103d1:	retf   
  4103d2:	cmp    eax,0x92c7f493
  4103d7:	push   ecx
  4103d8:	cld    
  4103d9:	cs jb  0x41041b
  4103dc:	in     al,dx
  4103dd:	adc    al,0x2
  4103df:	xor    eax,0xee6f1c70
  4103e4:	xchg   esi,eax
  4103e5:	loop   0x4103a9
  4103e7:	jp     0x410393
  4103e9:	sti    
  4103ea:	stos   BYTE PTR es:[edi],al
  4103eb:	stos   DWORD PTR es:[edi],eax
  4103ec:	test   al,0xf7
  4103ee:	(bad)  
  4103ef:	push   ebp
  4103f0:	cmp    dl,BYTE PTR [esp+eax*2+0x6698e42e]
  4103f7:	jecxz  0x410409
  4103f9:	mov    ah,0x2b
  4103fb:	sar    al,cl
  4103fd:	fwait
  4103fe:	mov    eax,ds:0x4bf7d25b
  410403:	jge    0x4103f7
  410405:	cli    
  410406:	jbe    0x41046c
  410408:	adc    cl,al
  41040a:	mov    bh,0x0
  41040c:	jb     0x41047a
  41040e:	jl     0x410454
  410410:	mov    BYTE PTR [edx+ebp*2-0x76470fbc],dh
  410417:	mov    ecx,0xf75479e7
  41041c:	mov    ds:0xc4ed3e4b,al
  410421:	stos   BYTE PTR es:[edi],al
  410422:	ja     0x41047e
  410424:	enter  0xa865,0xff
  410428:	retf   0x8eca
  41042b:	inc    ebx
  41042c:	fst    DWORD PTR [esp+eax*1]
  41042f:	push   0xffffffb6
  410431:	out    dx,al
  410432:	imul   ebx,DWORD PTR [edi+0x59dc1b05],0x2f5be42d
  41043c:	sbb    DWORD PTR [ebp+edx*4+0x76df8695],esi
  410443:	mov    ds:0xad01dda9,al
  410448:	push   cs
  410449:	mov    esp,0xdf766e84
  41044e:	or     DWORD PTR [ebp+0x63],edi
  410451:	mov    ebx,0xc2ea0a9d
  410456:	mov    ecx,0x9fbc9ec8
  41045b:	popa   
  41045c:	mov    esp,0xbd0db714
  410461:	fsub   DWORD PTR [edx-0x7358df1f]
  410467:	xchg   DWORD PTR [eax-0x3677004d],esi
  41046d:	mov    dh,0x40
  41046f:	pop    ecx
  410470:	les    esi,FWORD PTR [bp+di-0x62]
  410474:	jne    0x410406
  410476:	sub    DWORD PTR ss:[eax+0x30],edi
  41047a:	jno    0x4104d5
  41047c:	ret    
  41047d:	dec    ebp
  41047e:	adc    BYTE PTR [ebx],dl
  410480:	out    0x90,eax
  410482:	mov    dl,BYTE PTR [edx-0x66]
  410485:	adc    eax,0x9743a963
  41048a:	jp     0x410452
  41048c:	push   ebx
  41048d:	aam    0x44
  41048f:	push   0x23e7a5d9
  410494:	xchg   ebp,eax
  410495:	mov    ss,WORD PTR [edx]
  410497:	cld    
  410498:	jle    0x410423
  41049a:	xor    ebx,DWORD PTR [edx]
  41049c:	pop    ds
  41049d:	mov    al,0x3d
  41049f:	sub    DWORD PTR [edx-0x9e651ea],edx
  4104a5:	add    ebx,0x6bbc9e91
  4104ab:	cmp    BYTE PTR [ebp-0x78],dh
  4104ae:	xor    BYTE PTR [ecx-0x3e],dl
  4104b1:	stos   BYTE PTR es:[edi],al
  4104b2:	call   0x6f55450f
  4104b7:	mov    cl,BYTE PTR [edi+0x66568591]
  4104bd:	in     eax,dx
  4104be:	pop    ss
  4104bf:	push   edx
  4104c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104c1:	stos   BYTE PTR es:[edi],al
  4104c2:	lock xor BYTE PTR [ebx+edx*1+0x4a],al
  4104c7:	(bad)  
  4104c9:	jle    0x410495
  4104cb:	jne    0x410499
  4104cd:	int3   
  4104ce:	outs   dx,DWORD PTR ds:[esi]
  4104cf:	(bad)  
  4104d0:	fstp   DWORD PTR [esi-0x6b1f9f31]
  4104d6:	not    ch
  4104d8:	adc    DWORD PTR [edx],edi
  4104da:	(bad)  
  4104db:	lahf   
  4104dc:	jg     0x410539
  4104de:	jb     0x41054f
  4104e0:	pop    es
  4104e1:	pop    eax
  4104e2:	retf   
  4104e3:	pop    esp
  4104e4:	pop    eax
  4104e5:	sub    edi,edx
  4104e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104e8:	ja     0x4104cf
  4104ea:	mov    esp,0x8d49ddf3
  4104ef:	sub    DWORD PTR [ecx],0xe5d8a163
  4104f5:	pop    edi
  4104f6:	jle    0x410536
  4104f8:	add    ebp,DWORD PTR [eax]
  4104fa:	out    0xb6,eax
  4104fc:	mov    BYTE PTR [ecx+0x261e61b8],cl
  410502:	mov    DWORD PTR [ebx-0x7328b82e],edx
  410508:	mov    eax,0x9697d3fe
  41050d:	pop    eax
  41050e:	retf   0xfbce
  410511:	or     al,0x56
  410513:	data16 add al,0xe2
  410516:	dec    edi
  410517:	mov    cl,0xf8
  410519:	ret    0x8bcc
  41051c:	add    DWORD PTR [edx],0xffffff8c
  41051f:	outs   dx,BYTE PTR ds:[esi]
  410520:	mov    ecx,DWORD PTR [ebx+edx*1]
  410523:	and    ecx,eax
  410525:	shl    BYTE PTR [ecx],0x57
  410528:	mov    dh,0xe3
  41052a:	mov    ah,0xfa
  41052c:	js     0x410530
  41052e:	xchg   BYTE PTR [edi+0x30b181b5],ch
  410534:	inc    ecx
  410535:	out    dx,al
  410536:	jno    0x41054d
  410538:	xlat   BYTE PTR ds:[ebx]
  410539:	not    BYTE PTR [ecx-0x50]
  41053c:	and    eax,0xf5bb3616
  410541:	(bad)  
  410542:	repz sub ah,BYTE PTR [ecx]
  410545:	lea    edx,[edx+edi*1]
  410548:	fwait
  410549:	cs pop eax
  41054b:	cmp    eax,0x25f9fd22
  410550:	rcr    DWORD PTR [esi-0x56],cl
  410553:	sub    ah,ah
  410555:	rcl    BYTE PTR [ecx+0x4722082e],0x9c
  41055c:	xlat   BYTE PTR ds:[ebx]
  41055d:	jo     0x410584
  41055f:	fstp   TBYTE PTR [ebx]
  410561:	rcl    BYTE PTR [esi+ecx*2-0x2c9fbb85],1
  410568:	jp     0x4105a4
  41056a:	dec    ecx
  41056b:	test   DWORD PTR [edi],ebx
  41056d:	(bad)  [ecx]
  41056f:	jnp    0x4105c4
  410571:	dec    esi
  410572:	or     dl,BYTE PTR [esi]
  410574:	xchg   ecx,eax
  410575:	pusha  
  410576:	sar    bh,0xd3
  410579:	mov    dl,0x6b
  41057b:	mov    edi,0x70411cf0
  410580:	mov    bl,0x5f
  410582:	(bad)  
  410583:	fs leave 
  410585:	push   ss
  410586:	push   0x797d49a8
  41058b:	pop    edi
  41058c:	lods   eax,DWORD PTR ds:[esi]
  41058d:	pusha  
  41058e:	lods   al,BYTE PTR ds:[esi]
  41058f:	mov    al,ds:0x260e916d
  410594:	jmp    0xe1de69c0
  410599:	sub    al,0x86
  41059b:	jp     0x4105ef
  41059d:	sbb    BYTE PTR [ecx-0x35],ah
  4105a0:	out    dx,eax
  4105a1:	adc    cl,ch
  4105a3:	sub    edi,DWORD PTR ds:0x9d74590c
  4105a9:	xor    ebx,ecx
  4105ab:	xchg   esp,eax
  4105ac:	(bad)  
  4105ad:	or     DWORD PTR ds:0xe2f0ea30,ebx
  4105b3:	out    0x23,al
  4105b5:	test   al,0xf7
  4105b7:	jge    0x410596
  4105b9:	aad    0x51
  4105bb:	inc    esi
  4105bc:	pop    eax
  4105bd:	adc    DWORD PTR [ecx+0x10bd87a5],edx
  4105c3:	sbb    al,0x67
  4105c5:	cmp    al,BYTE PTR [eax]
  4105c7:	cmp    ch,BYTE PTR [ebx-0x30]
  4105ca:	adc    eax,0x938ce35c
  4105cf:	pop    ecx
  4105d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105d1:	pop    edi
  4105d2:	jbe    0x410580
  4105d4:	in     eax,0x73
  4105d6:	dec    esi
  4105d7:	adc    dh,al
  4105d9:	mov    ebx,0x9b1d306
  4105de:	sub    DWORD PTR [ebp+0x162923b7],ecx
  4105e4:	jno    0x410631
  4105e6:	xchg   esi,eax
  4105e7:	stos   BYTE PTR es:[edi],al
  4105e8:	xchg   edi,eax
  4105e9:	cmp    ch,dh
  4105eb:	pop    edx
  4105ec:	sahf   
  4105ed:	or     eax,0x853aabbd
  4105f2:	int    0x86
  4105f4:	pop    ebx
  4105f5:	bound  esp,QWORD PTR [ebx+edx*8]
  4105f8:	dec    edi
  4105f9:	xchg   BYTE PTR [edi],cl
  4105fb:	pusha  
  4105fc:	push   0x2a969475
  410601:	aas    
  410602:	mov    edx,0x29d8a759
  410607:	or     eax,DWORD PTR [ebx]
  410609:	adc    eax,0x88d78a6
  41060e:	data16 (bad) 
  410611:	xchg   edx,eax
  410612:	and    dl,BYTE PTR [eax-0x5f]
  410615:	inc    ecx
  410616:	adc    eax,0xbc22d456
  41061b:	cmp    ch,BYTE PTR [eax-0x7f89865a]
  410621:	jl     0x4105f8
  410623:	fdivr  st,st(4)
  410625:	cmp    dh,BYTE PTR [edx+0x39e87f4c]
  41062b:	popa   
  41062c:	cmp    edi,DWORD PTR [eax+0x7610f598]
  410632:	hlt    
  410633:	fidivr DWORD PTR [edi-0x6a9d1869]
  410639:	dec    eax
  41063a:	cdq    
  41063b:	xchg   esp,eax
  41063c:	cmc    
  41063d:	jno    0x41061e
  41063f:	es out 0xc3,al
  410642:	sahf   
  410643:	or     BYTE PTR [edi-0x43351d0c],0xca
  41064a:	shl    DWORD PTR [esi+0x7920984d],1
  410650:	add    al,0x83
  410652:	xchg   edi,eax
  410653:	mov    eax,0x6ddd1b22
  410658:	sub    DWORD PTR [esi+0x5a50f088],ebx
  41065e:	add    ebp,DWORD PTR [esi+0x33eae874]
  410664:	mov    eax,ds:0x72bbb813
  410669:	pop    eax
  41066a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41066b:	mov    cl,0xaa
  41066d:	mov    esi,0x1dc1af87
  410672:	hlt    
  410673:	shl    DWORD PTR [esi-0x25ef3229],0x17
  41067a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41067b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41067c:	jae    0x4106ed
  41067e:	lea    esp,[eax+0x75]
  410681:	lods   eax,DWORD PTR ds:[esi]
  410682:	pop    ebp
  410683:	sub    ah,BYTE PTR [edi-0x17a4af84]
  410689:	push   cs
  41068a:	dec    edx
  41068b:	out    dx,al
  41068c:	enter  0xf8a6,0xc7
  410690:	inc    esi
  410691:	vxorps ymm1,ymm1,YMMWORD PTR [ebp+0x6e850ee8]
  410699:	stos   DWORD PTR es:[edi],eax
  41069a:	dec    esp
  41069b:	mov    ch,0xc1
  41069d:	jecxz  0x4106dc
  41069f:	mul    DWORD PTR [edi+0xb]
  4106a2:	(bad)  
  4106a3:	xor    DWORD PTR [ebx+0x3664e49b],0xcbda1bb
  4106ad:	call   0x1c7dd19d
  4106b2:	inc    edx
  4106b3:	jns    0x410726
  4106b5:	out    dx,al
  4106b6:	mov    al,BYTE PTR [ebx]
  4106b8:	fs push ds
  4106ba:	sub    DWORD PTR [edx-0x7d3209fa],esi
  4106c0:	pop    ds
  4106c1:	jl     0x4106f3
  4106c3:	jle    0x4106a4
  4106c5:	sbb    al,0xb
  4106c7:	aas    
  4106c8:	shl    eax,cl
  4106ca:	push   edx
  4106cb:	dec    eax
  4106cc:	lock inc esp
  4106ce:	rcl    DWORD PTR [edx-0x56eeb07b],0x62
  4106d5:	cli    
  4106d6:	sub    al,0x3c
  4106d8:	outs   dx,BYTE PTR ds:[esi]
  4106d9:	add    BYTE PTR ds:0x4130,al
  4106de:	neg    BYTE PTR [esi]
  4106e0:	cmp    ah,bl
  4106e2:	add    esi,DWORD PTR [eax+0x7521c3ae]
  4106e8:	mov    ds,WORD PTR [ebx]
  4106ea:	sbb    al,0xea
  4106ec:	jno    0x410733
  4106ee:	jns    0x410679
  4106f0:	lds    eax,FWORD PTR [edx-0x1bcb72f2]
  4106f6:	std    
  4106f7:	xchg   ebx,eax
  4106f8:	dec    eax
  4106f9:	mov    cl,0x42
  4106fb:	push   eax
  4106fc:	sub    eax,0x77d79ae3
  410701:	sub    al,0xb2
  410703:	push   edi
  410704:	mov    dl,0x75
  410706:	or     eax,0x16f51bdb
  41070b:	cld    
  41070c:	jno    0x410759
  41070e:	jle    0x410763
  410710:	cs loop 0x410789
  410713:	push   cs
  410714:	fxam   
  410716:	push   ebp
  410717:	idiv   DWORD PTR [esi+0x7e]
  41071a:	sbb    cl,BYTE PTR [eax+0x3d]
  41071d:	loope  0x410718
  41071f:	push   0x5c
  410721:	pop    es
  410722:	adc    BYTE PTR [eax+0x1e],ah
  410725:	daa    
  410726:	div    BYTE PTR [edi+eiz*1]
  410729:	lahf   
  41072a:	push   eax
  41072b:	add    al,0x22
  41072d:	jo     0x4106df
  41072f:	xchg   esp,eax
  410730:	iret   
  410731:	jg     0x41077c
  410733:	xor    eax,0x81bbc087
  410738:	clc    
  410739:	pop    edx
  41073a:	xlat   BYTE PTR ds:[ebx]
  41073b:	dec    edi
  41073c:	fidiv  DWORD PTR [esi+eiz*8]
  41073f:	sahf   
  410740:	xchg   edx,eax
  410741:	fldenv [edi]
  410743:	les    ebp,FWORD PTR [eax+0x4f114dc3]
  410749:	ja     0x4106e6
  41074b:	cmp    BYTE PTR [edi-0x72],dh
  41074e:	mov    ah,0x43
  410750:	(bad)  
  410751:	int    0xa1
  410753:	jnp    0x410712
  410755:	ja     0x410745
  410757:	push   0xffffffe0
  410759:	mov    edx,0x4dc4d564
  41075e:	invd   
  410760:	fsubr  QWORD PTR [eax]
  410762:	ins    DWORD PTR es:[di],dx
  410764:	sub    al,0x9d
  410766:	push   ss
  410767:	dec    esi
  410768:	lods   al,BYTE PTR ds:[esi]
  410769:	in     eax,0x35
  41076b:	shl    DWORD PTR ds:0x99036388,0x2b
  410772:	xor    al,BYTE PTR [esp+ecx*8+0x3f73c924]
  410779:	pop    ebp
  41077a:	mov    cs,WORD PTR [edx]
  41077c:	pop    edi
  41077d:	mov    ah,0xb5
  41077f:	fsubp  st(1),st
  410781:	push   es
  410782:	jnp    0x410741
  410784:	div    DWORD PTR [eax]
  410786:	(bad)  
  410787:	outs   dx,DWORD PTR ds:[esi]
  410788:	je     0x41078c
  41078a:	push   0xffffff85
  41078c:	cmp    eax,0x27a623a6
  410791:	outs   dx,BYTE PTR ds:[esi]
  410792:	fldenv [ecx]
  410794:	xor    WORD PTR [edx-0x2e],0xcf12
  41079a:	cdq    
  41079b:	gs (bad) 
  41079d:	cs jge 0x410788
  4107a0:	adc    BYTE PTR [esi+0x4f],bl
  4107a3:	xchg   bl,ah
  4107a5:	mov    fs,WORD PTR [esi]
  4107a7:	mov    ebx,0x6b0f3263
  4107ac:	stc    
  4107ad:	fild   QWORD PTR ds:0x5ee3c4e8
  4107b3:	in     al,0x99
  4107b5:	cdq    
  4107b6:	sub    BYTE PTR [esi+0x184e19ae],ah
  4107bc:	arpl   WORD PTR [ecx+0x52],si
  4107bf:	xchg   esi,eax
  4107c0:	cmp    BYTE PTR [esi],al
  4107c2:	jecxz  0x41079c
  4107c4:	popa   
  4107c5:	sub    DWORD PTR [eax],eax
  4107c7:	adc    ecx,edi
  4107c9:	call   0x6178:0x64f08ee8
  4107d0:	mov    ebp,0x1c0c9dd6
  4107d5:	dec    edx
  4107d6:	scas   al,BYTE PTR es:[edi]
  4107d7:	xchg   BYTE PTR [eax],dh
  4107d9:	or     dl,BYTE PTR [edi]
  4107db:	rcl    DWORD PTR [ebp+0x347d1c54],0xa8
  4107e2:	test   eax,0x840db7e8
  4107e7:	pop    esp
  4107e8:	xor    BYTE PTR [ecx-0x1e3c958d],ch
  4107ee:	and    al,0x27
  4107f0:	mov    esi,DWORD PTR [eax-0x330a085]
  4107f6:	mov    bl,0x96
  4107f8:	jne    0x41083e
  4107fa:	mov    ah,0x80
  4107fc:	mov    esi,0x3c95930c
  410801:	jmp    0xe9bf6057
  410806:	cli    
  410807:	dec    esi
  410808:	call   FWORD PTR [eax-0x19]
  41080b:	mov    eax,ds:0x7ff116ad
  410810:	sub    al,0x66
  410812:	nop
  410813:	push   0x17
  410815:	cmp    BYTE PTR [eax],dh
  410817:	jl     0x4107da
  410819:	sbb    eax,0xf8bb5c77
  41081e:	arpl   WORD PTR [ebx],cx
  410820:	sbb    al,0xb
  410822:	and    bh,BYTE PTR [edi+eiz*2-0x28]
  410826:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410827:	sub    DWORD PTR [edi+0x13],edi
  41082a:	neg    DWORD PTR [ebx+ebx*4-0x206dd9]
  410831:	or     dl,bh
  410833:	mov    ds:0xa75f6c55,al
  410838:	pop    edi
  410839:	inc    esp
  41083a:	lahf   
  41083b:	ds jp  0x4108ad
  41083e:	mov    ds:0xd5e02235,al
  410843:	dec    ebx
  410844:	addr16 inc ecx
  410846:	push   0xffffffbe
  410848:	ret    0x51b8
  41084b:	xlat   BYTE PTR ds:[ebx]
  41084c:	push   0x71d4f758
  410851:	pushf  
  410852:	addr16 push ebp
  410854:	and    eax,0xf1afebeb
  410859:	sub    eax,0x1f3935d1
  41085e:	and    DWORD PTR [eax-0x2e],0xffffffcb
  410862:	jl     0x4107e8
  410864:	lods   eax,DWORD PTR ds:[esi]
  410865:	pop    edi
  410866:	mov    bh,0xdd
  410868:	dec    edx
  410869:	mov    ds:0x25f6e34,al
  41086e:	mov    cl,0x4c
  410870:	jle    0x410879
  410872:	dec    edx
  410873:	(bad)  
  410874:	fwait
  410875:	jle    0x41081b
  410877:	cmp    bh,BYTE PTR [ebx-0x79]
  41087a:	pop    esi
  41087b:	cs jbe 0x4108dd
  41087e:	inc    ebp
  41087f:	dec    edi
  410880:	leave  
  410881:	dec    ebx
  410882:	test   eax,0x5e28bfc1
  410887:	inc    esi
  410888:	sar    DWORD PTR [esi-0x1b30a824],1
  41088e:	dec    edx
  41088f:	imul   DWORD PTR [ebx-0x47]
  410892:	mov    ch,BYTE PTR ss:[eax-0x3b2338d1]
  410899:	in     eax,0x1d
  41089b:	and    eax,0x6e7be194
  4108a0:	push   edx
  4108a1:	xor    cl,dl
  4108a3:	je     0x41085b
  4108a5:	fsubr  QWORD PTR [eax+0x79]
  4108a8:	std    
  4108a9:	mov    edi,0xd3169f9f
  4108ae:	add    al,0x46
  4108b0:	push   esp
  4108b1:	add    ebx,DWORD PTR [edi+0xe]
  4108b4:	sbb    bh,BYTE PTR [ecx]
  4108b6:	ins    DWORD PTR es:[edi],dx
  4108b7:	rcl    DWORD PTR [ebx+0x64d621f4],0xb1
  4108be:	(bad)  
  4108c0:	repz rcl BYTE PTR [eax-0x5b],0xb7
  4108c5:	shl    DWORD PTR [edi],1
  4108c7:	inc    eax
  4108c8:	mov    ds:0x5d4876dc,al
  4108cd:	and    esi,ecx
  4108cf:	cmp    edi,DWORD PTR [edi+0x22]
  4108d2:	aas    
  4108d3:	sbb    ah,BYTE PTR [ecx+0x0]
  4108d6:	sbb    BYTE PTR [eax],0xbc
  4108d9:	outs   dx,DWORD PTR ds:[esi]
  4108da:	xchg   BYTE PTR [edx+0x6c3aa038],al
  4108e0:	sbb    al,0xaf
  4108e2:	cmp    eax,0x344aba35
  4108e7:	retf   
  4108e8:	xor    DWORD PTR [ebp+0x4a791514],0xffffffd1
  4108ef:	or     edx,DWORD PTR [ebp+0x2a]
  4108f2:	and    ecx,DWORD PTR [ebx+0x52]
  4108f5:	stos   BYTE PTR es:[edi],al
  4108f6:	mov    BYTE PTR gs:[ecx],0x94
  4108fa:	mov    edx,ecx
  4108fc:	fwait
  4108fd:	ror    DWORD PTR [edx],0x98
  410900:	outs   dx,DWORD PTR ds:[esi]
  410901:	xor    cl,al
  410903:	out    0x7f,al
  410905:	dec    edi
  410906:	les    edi,FWORD PTR [ebp-0x2b2502a5]
  41090c:	mov    edx,DWORD PTR [ecx-0x35]
  41090f:	in     eax,0x8d
  410911:	fld    DWORD PTR [esi-0x33298873]
  410917:	xor    DWORD PTR [ecx+0x3822544c],esp
  41091d:	mov    ecx,0x2c28254d
  410922:	das    
  410923:	mov    ebx,DWORD PTR [edi-0x31a8f24d]
  410929:	add    BYTE PTR [ebp-0x3f5ac939],dl
  41092f:	adc    eax,DWORD PTR [ecx+0x2b]
  410932:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410933:	lock or eax,0x38e75629
  410939:	dec    edi
  41093a:	cs clc 
  41093c:	jmp    0x4108e9
  41093e:	outs   dx,BYTE PTR ds:[esi]
  41093f:	sti    
  410940:	nop
  410941:	cmp    al,0x5e
  410943:	stc    
  410944:	call   0xf78b:0x52e1c003
  41094b:	(bad)  
  41094c:	in     al,dx
  41094d:	das    
  41094e:	test   al,0x4f
  410950:	lock outs dx,DWORD PTR ds:[esi]
  410952:	mov    ebp,0xd5e182dc
  410957:	in     eax,0xc4
  410959:	add    DWORD PTR [ebx],ebp
  41095b:	xor    al,BYTE PTR [eax-0x26]
  41095e:	and    cl,BYTE PTR [eax]
  410960:	sbb    BYTE PTR [esi+ebx*8],ah
  410963:	cmp    eax,0x265e44d2
  410968:	sub    DWORD PTR [edx-0xcc353f8],ebp
  41096e:	mov    BYTE PTR [eax+0x29],bl
  410971:	jecxz  0x410954
  410973:	(bad)  
  410974:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410975:	cmc    
  410976:	imul   edi,DWORD PTR fs:[esi],0x52acdd07
  41097d:	aam    0xdf
  41097f:	sbb    al,al
  410981:	(bad)  
  410982:	scas   eax,DWORD PTR es:[edi]
  410983:	cmp    al,0xb1
  410985:	and    bh,al
  410987:	pop    eax
  410988:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410989:	mov    ch,0x43
  41098b:	or     ebx,DWORD PTR [esi+0xa7390a9]
  410991:	push   ebx
  410992:	mov    bh,0xba
  410994:	clc    
  410995:	adc    dh,BYTE PTR [ebx+0x69]
  410998:	sti    
  410999:	retf   
  41099a:	sbb    esi,edx
  41099c:	pop    edi
  41099d:	popf   
  41099e:	or     eax,0x6bf965f1
  4109a3:	xchg   BYTE PTR [edi],al
  4109a5:	and    DWORD PTR [edx+0x411391c7],ebp
  4109ab:	js     0x410a28
  4109ad:	adc    DWORD PTR [ebp+0x30],0xc47c0803
  4109b4:	sub    al,0x2b
  4109b6:	sbb    eax,0xb21e6beb
  4109bb:	retf   
  4109bc:	jmp    0xb59f2117
  4109c1:	push   0x60
  4109c3:	scas   eax,DWORD PTR es:[edi]
  4109c4:	push   edx
  4109c5:	sahf   
  4109c6:	(bad)  
  4109c7:	pop    ebp
  4109c8:	imul   ebx,DWORD PTR [eax+ebx*1-0x10588793],0xbcfc84c6
  4109d3:	cli    
  4109d4:	cld    
  4109d5:	mov    cl,BYTE PTR [ecx+0x6]
  4109d8:	cli    
  4109d9:	rol    BYTE PTR [edx+ebp*1],0xd9
  4109dd:	aaa    
  4109de:	adc    al,0xa9
  4109e0:	das    
  4109e1:	push   0xf438ec02
  4109e6:	ds ss xor al,0x75
  4109ea:	test   al,0x68
  4109ec:	sar    esi,1
  4109ee:	jle    0x410a42
  4109f0:	pop    eax
  4109f1:	jecxz  0x4109d8
  4109f3:	not    dh
  4109f5:	and    eax,0x11da1e70
  4109fa:	enter  0x5167,0xe2
  4109fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109ff:	add    BYTE PTR [ebx+0x65bdbaf4],0x36
  410a06:	(bad)  
  410a07:	and    esp,eax
  410a09:	cmp    DWORD PTR [ecx],0x7f
  410a0c:	sub    eax,0x45293026
  410a11:	imul   eax,edi,0xd1b06239
  410a17:	mov    ch,dl
  410a19:	cmp    eax,0x2e111d33
  410a1e:	fadd   QWORD PTR [eax]
  410a20:	adc    DWORD PTR [edi+0x5a],0xbe3587fd
  410a27:	jp     0x4109d9
  410a29:	ret    0x9d37
  410a2c:	cld    
  410a2d:	clc    
  410a2e:	jp     0x4109bc
  410a30:	cdq    
  410a31:	enter  0x80b3,0x2e
  410a35:	cwde   
  410a36:	sbb    al,0x53
  410a38:	imul   esp,DWORD PTR [ebp+0x2e],0x56
  410a3c:	sub    BYTE PTR [edi+0x5],dl
  410a3f:	jae    0x410aa1
  410a41:	cmc    
  410a42:	scas   al,BYTE PTR es:[edi]
  410a43:	mov    DWORD PTR fs:[edi],esi
  410a46:	aad    0x57
  410a48:	jns    0x410a34
  410a4a:	(bad)  
  410a4b:	xlat   BYTE PTR ds:[ebx]
  410a4c:	inc    edx
  410a4d:	inc    ebx
  410a4e:	xor    al,0xaa
  410a50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a51:	dec    eax
  410a52:	(bad)  
  410a53:	add    eax,0xf03b4c78
  410a58:	cmp    al,0x8b
  410a5a:	cmp    ah,BYTE PTR [edi]
  410a5c:	jnp    0x410adb
  410a5e:	jae    0x410a60
  410a60:	repnz ds push ebp
  410a63:	add    cl,BYTE PTR [ebx]
  410a65:	push   cs
  410a66:	mov    DWORD PTR [eax-0x379bc7d1],0x5455d640
  410a70:	jnp    0x410a57
  410a72:	pop    esp
  410a73:	mov    ah,0x53
  410a75:	test   al,0xcd
  410a77:	addr16 out 0x2e,eax
  410a7a:	dec    edx
  410a7b:	cmp    eax,0x54650d65
  410a80:	push   ss
  410a81:	lock pop ecx
  410a83:	enter  0x2629,0xf8
  410a87:	ins    DWORD PTR es:[edi],dx
  410a88:	nop
  410a89:	(bad)  
  410a8a:	xchg   ebp,eax
  410a8b:	je     0x410ad4
  410a8d:	mov    ?,WORD PTR [eax+0x3525ff9]
  410a93:	push   esi
  410a94:	std    
  410a95:	outs   dx,BYTE PTR es:[esi]
  410a97:	mov    al,BYTE PTR [edi+0x6a]
  410a9a:	push   eax
  410a9b:	adc    bh,BYTE PTR [edx-0x1fb8ada9]
  410aa1:	xor    dh,BYTE PTR [eax]
  410aa3:	xor    BYTE PTR [edx-0x217b7b32],ah
  410aa9:	jbe    0x410b1a
  410aab:	(bad)  
  410aac:	sub    DWORD PTR [ebx-0x50],edi
  410aaf:	stos   BYTE PTR es:[edi],al
  410ab0:	and    DWORD PTR [ecx],0xffffffac
  410ab3:	mov    dh,0x9c
  410ab5:	push   ds
  410ab6:	push   0x4eb5ef8d
  410abb:	sbb    al,0x8
  410abd:	sbb    BYTE PTR [ebx],0x48
  410ac0:	cs sub esi,0x5a1bfe1d
  410ac7:	mov    esi,0x2baebc0d
  410acc:	dec    esp
  410acd:	inc    esp
  410ace:	mov    cl,BYTE PTR [edx+ecx*2]
  410ad1:	or     bl,cl
  410ad3:	stos   BYTE PTR es:[edi],al
  410ad4:	mov    dh,0x74
  410ad6:	jns    0x410ae8
  410ad8:	stc    
  410ad9:	aam    0xeb
  410adb:	aas    
  410adc:	xchg   edx,eax
  410add:	stos   BYTE PTR es:[edi],al
  410ade:	mov    dl,0x5b
  410ae0:	and    cl,BYTE PTR ds:0x2a0c0ecf
  410ae6:	(bad)  
  410ae7:	adc    BYTE PTR [edx+0x6ade4000],ch
  410aed:	clc    
  410aee:	jge    0x410b6b
  410af0:	das    
  410af1:	loope  0x410aea
  410af3:	xchg   edx,eax
  410af4:	ins    DWORD PTR es:[edi],dx
  410af5:	xor    DWORD PTR [ecx+0x710e15d5],ebp
  410afb:	cwde   
  410afc:	pushf  
  410afd:	push   esi
  410afe:	xchg   BYTE PTR [esi*8+0x48dd8b84],ah
  410b05:	or     ebx,esi
  410b07:	mov    ch,BYTE PTR [eax+0x7cfcf4ee]
  410b0d:	sub    BYTE PTR [edi-0x743d6bfd],cl
  410b13:	ds add DWORD PTR gs:[ebx-0x7c],eax
  410b18:	or     DWORD PTR fs:[eax+edx*1-0x6e039a4f],ebp
  410b20:	add    eax,0x845f7ac
  410b25:	out    dx,al
  410b26:	mov    ?,esp
  410b28:	mov    dl,0xf3
  410b2a:	lock xchg ecx,eax
  410b2c:	bound  esp,QWORD PTR [ebp-0x414b2880]
  410b32:	es int 0xe2
  410b35:	lds    ebx,FWORD PTR [edi+0x4854f077]
  410b3b:	dec    ebx
  410b3c:	push   eax
  410b3d:	sub    eax,DWORD PTR [ebp-0x2aa9990e]
  410b43:	leave  
  410b44:	pop    ebp
  410b45:	test   DWORD PTR [edx],esp
  410b47:	fbstp  TBYTE PTR [ecx+0x1f93c6b]
  410b4d:	mov    ch,BYTE PTR [edx+0xf810ff3]
  410b53:	cmp    eax,0x2e2023da
  410b58:	xchg   esp,eax
  410b59:	and    al,0x6f
  410b5b:	jl     0x410b73
  410b5d:	push   0xffffffbf
  410b5f:	fiadd  DWORD PTR [edi+0x10]
  410b62:	dec    eax
  410b63:	in     al,dx
  410b64:	mov    cl,0xc1
  410b66:	fxch   st(6)
  410b68:	(bad)  
  410b69:	dec    edx
  410b6a:	fmulp  st(5),st
  410b6c:	pop    ds
  410b6d:	inc    edi
  410b6e:	je     0x410b07
  410b70:	lods   al,BYTE PTR ds:[esi]
  410b71:	push   ecx
  410b72:	leave  
  410b73:	push   eax
  410b74:	and    DWORD PTR [ebx],ecx
  410b76:	rol    BYTE PTR [esi-0x7c],cl
  410b79:	xor    dl,0x8d
  410b7c:	outs   dx,DWORD PTR ds:[esi]
  410b7d:	inc    ebx
  410b7e:	sbb    DWORD PTR ds:[ebp-0x7a2e0ee1],esi
  410b85:	cli    
  410b86:	lea    esi,[esi]
  410b88:	int3   
  410b89:	pop    ds
  410b8a:	inc    edi
  410b8b:	mov    eax,fs
  410b8d:	(bad)  
  410b90:	mov    ecx,0x386a4fea
  410b95:	(bad)  
  410b96:	sbb    dh,BYTE PTR [edi+edi*2]
  410b99:	add    BYTE PTR [edi-0x44],0xfe
  410b9d:	push   esp
  410b9e:	push   cs
  410b9f:	shr    bl,cl
  410ba1:	cwde   
  410ba2:	pop    edi
  410ba3:	fimul  DWORD PTR [ebx]
  410ba5:	test   ecx,ecx
  410ba7:	retf   
  410ba8:	(bad)  
  410ba9:	xchg   ebp,eax
  410baa:	mov    dl,dl
  410bac:	xchg   BYTE PTR [edi+edx*1+0x19],cl
  410bb0:	fwait
  410bb1:	fs inc eax
  410bb3:	cmp    al,0x5
  410bb5:	lds    ecx,FWORD PTR [edx-0x6d]
  410bb8:	and    BYTE PTR [ebp-0x24],cl
  410bbb:	scas   eax,DWORD PTR es:[edi]
  410bbc:	mov    esi,0x6656b9f
  410bc1:	add    ebx,DWORD PTR ds:0x836b28f8
  410bc7:	sbb    BYTE PTR [esi+ecx*1],dh
  410bca:	rol    BYTE PTR [eax],cl
  410bcc:	data16 and BYTE PTR [ebx-0x2d7d34b6],ah
  410bd3:	xchg   esi,eax
  410bd4:	clc    
  410bd5:	sub    DWORD PTR [eax-0x471c7e79],0x29
  410bdc:	mov    cl,0x95
  410bde:	push   0x766b0751
  410be3:	es test al,0x59
  410be6:	sbb    bh,dh
  410be8:	jle    0x410bd2
  410bea:	inc    ebx
  410beb:	ret    0xb64c
  410bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bef:	lock fisttp WORD PTR [ebp+0x21c96733]
  410bf6:	or     eax,DWORD PTR [ecx]
  410bf8:	out    0x34,al
  410bfa:	cmp    al,0xe3
  410bfc:	test   ah,bl
  410bfe:	sbb    BYTE PTR [edi],bl
  410c00:	push   0x14
  410c02:	lods   al,BYTE PTR ds:[esi]
  410c03:	shl    BYTE PTR [eax],1
  410c05:	scas   al,BYTE PTR es:[edi]
  410c06:	(bad)  
  410c07:	mov    ebx,0x41dee129
  410c0c:	mov    al,0x71
  410c0e:	or     DWORD PTR [eax],ebx
  410c10:	addr16 inc ebp
  410c12:	(bad)  
  410c14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c15:	in     al,0xa5
  410c17:	outs   dx,BYTE PTR ds:[esi]
  410c18:	sbb    BYTE PTR [ecx],0xa7
  410c1b:	gs and al,0x69
  410c1e:	lods   al,BYTE PTR ds:[esi]
  410c1f:	jbe    0x410c59
  410c21:	add    DWORD PTR [esi*2+0x5439caf9],edx
  410c28:	push   cs
  410c29:	cmp    al,0x37
  410c2b:	(bad)  
  410c2c:	ja     0x410bf6
  410c2e:	adc    eax,0x1c655055
  410c33:	sbb    DWORD PTR [edi-0x69840257],0xcaab1db3
  410c3d:	pusha  
  410c3e:	outs   dx,DWORD PTR ds:[esi]
  410c3f:	xchg   ecx,eax
  410c40:	xchg   ebp,eax
  410c41:	out    dx,eax
  410c42:	sbb    eax,0xef068361
  410c47:	xchg   DWORD PTR [edx],esp
  410c49:	xchg   DWORD PTR [esi-0x5ed9a8e2],ebx
  410c4f:	in     al,dx
  410c50:	outs   dx,BYTE PTR ds:[esi]
  410c51:	inc    esi
  410c52:	pop    esi
  410c53:	sub    esp,DWORD PTR [esi-0x76]
  410c56:	or     DWORD PTR [edx],eax
  410c58:	pop    ecx
  410c59:	cli    
  410c5a:	cmp    BYTE PTR [eax-0x17a21b5a],dl
  410c60:	mov    ?,WORD PTR [ebx+0x1b]
  410c63:	jmp    0xaf012624
  410c68:	mov    eax,0xf0dd79bd
  410c6d:	inc    edi
  410c6e:	pop    ds
  410c6f:	pop    eax
  410c70:	dec    edi
  410c71:	jae    0x410c84
  410c73:	lock fwait
  410c75:	xchg   ecx,eax
  410c76:	je     0x410bfa
  410c78:	or     al,0xfc
  410c7a:	sbb    ebx,DWORD PTR [ecx+0x39]
  410c7d:	icebp  
  410c7e:	clc    
  410c7f:	adc    DWORD PTR [eax-0x75],ecx
  410c82:	shl    DWORD PTR [ebx+0x74],cl
  410c85:	mov    dl,0xcd
  410c87:	aaa    
  410c88:	call   0xc762319b
  410c8d:	in     al,0xcf
  410c8f:	xchg   esi,edx
  410c91:	fnstsw ax
  410c93:	dec    ebx
  410c94:	out    dx,al
  410c95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c96:	mov    DWORD PTR [ebp+0x16],esp
  410c99:	adc    eax,0x651bd780
  410c9e:	loope  0x410ceb
  410ca0:	xchg   esp,eax
  410ca1:	adc    eax,0x1f15e21c
  410ca6:	dec    eax
  410ca7:	inc    ebx
  410ca8:	push   ebp
  410ca9:	push   eax
  410caa:	mov    al,0x2a
  410cac:	pusha  
  410cad:	adc    BYTE PTR [ecx-0x70],bl
  410cb0:	mov    ds:0x667dc8dc,eax
  410cb5:	gs sahf 
  410cb7:	xchg   ebp,eax
  410cb8:	stos   DWORD PTR es:[edi],eax
  410cb9:	add    al,0xb1
  410cbb:	nop
  410cbc:	dec    edx
  410cbd:	pop    esi
  410cbe:	mov    ds:0x8108984,al
  410cc3:	mov    WORD PTR [edx-0x61],gs
  410cc6:	sbb    BYTE PTR [eax],bl
  410cc8:	int    0x93
  410cca:	mov    ebx,DWORD PTR [edx+esi*2-0x77c65b87]
  410cd1:	jmp    0xe0efa778
  410cd6:	shl    dh,1
  410cd8:	js     0x410d0f
  410cda:	xor    eax,0x2b2d0a7f
  410cdf:	dec    ecx
  410ce0:	cmp    DWORD PTR ds:0x3bed16c,ebx
  410ce6:	jno    0x410cb4
  410ce8:	je     0x410c7c
  410cea:	push   ebp
  410ceb:	out    dx,al
  410cec:	addr16 push esp
  410cee:	pop    edi
  410cef:	xor    edi,esi
  410cf1:	xchg   ecx,eax
  410cf2:	dec    ebp
  410cf3:	push   cs
  410cf4:	mov    ah,0x52
  410cf6:	jg     0x410cae
  410cf8:	adc    cl,BYTE PTR [esi-0x26]
  410cfb:	fild   WORD PTR [eax+0x61cc3f38]
  410d01:	dec    ebp
  410d02:	les    ebp,FWORD PTR [esi-0x27]
  410d05:	cwde   
  410d06:	jge    0x410ce0
  410d08:	sub    al,BYTE PTR [ebx+eiz*8+0x71]
  410d0c:	or     ch,0x1b
  410d0f:	dec    ecx
  410d10:	test   al,0x80
  410d12:	inc    eax
  410d13:	aaa    
  410d14:	idiv   BYTE PTR [ebx]
  410d16:	sbb    DWORD PTR [edx-0x7a],ecx
  410d19:	pop    ss
  410d1a:	repz push edi
  410d1c:	dec    edx
  410d1d:	int3   
  410d1e:	scas   al,BYTE PTR es:[edi]
  410d1f:	shl    BYTE PTR [edx],1
  410d21:	into   
  410d22:	ret    
  410d23:	mov    dh,0x40
  410d25:	pop    eax
  410d26:	imul   ebx,eax,0xffffffaa
  410d29:	jne    0x410d24
  410d2b:	mov    eax,0xfed05229
  410d30:	mov    ch,0xd6
  410d32:	aad    0x2c
  410d34:	sub    eax,0x4f2a98eb
  410d39:	push   es
  410d3a:	mov    al,ds:0xf69f9b8d
  410d3f:	lea    eax,[ebp+0x211f005f]
  410d45:	test   DWORD PTR [edi+0x3c],eax
  410d48:	push   ebp
  410d49:	inc    ecx
  410d4a:	dec    esp
  410d4b:	loopne 0x410ce4
  410d4d:	adc    al,0xe6
  410d4f:	sbb    eax,DWORD PTR [ebp+0x536062cd]
  410d55:	cmp    DWORD PTR [ebp+edi*8+0x0],eax
  410d59:	lods   al,BYTE PTR ds:[esi]
  410d5a:	das    
  410d5b:	mov    dl,dl
  410d5d:	scas   eax,DWORD PTR es:[edi]
  410d5e:	loop   0x410d84
  410d60:	sar    BYTE PTR fs:[ebx-0x3f],cl
  410d64:	pop    esp
  410d65:	rol    BYTE PTR [edi-0x691660d2],cl
  410d6b:	or     edi,DWORD PTR [edx+0x53]
  410d6e:	mov    gs,WORD PTR [esi+ebx*4-0x7b4cd8cf]
  410d75:	pushf  
  410d76:	aam    0xe5
  410d78:	pop    eax
  410d79:	or     eax,0xa2fc833a
  410d7e:	jl     0x410d03
  410d80:	out    dx,eax
  410d81:	enter  0x8a79,0x81
  410d85:	xor    DWORD PTR [eax-0x4ed8afa3],ebx
  410d8b:	hlt    
  410d8c:	dec    eax
  410d8d:	rcl    esp,cl
  410d8f:	loope  0x410d6e
  410d91:	ss mov dh,0xe1
  410d94:	clc    
  410d95:	jecxz  0x410d68
  410d97:	jae    0x410d44
  410d99:	mov    eax,ds:0x95ae39ad
  410d9e:	push   esp
  410d9f:	retf   0x130
  410da2:	loope  0x410d2c
  410da4:	pusha  
  410da5:	hlt    
  410da6:	mov    al,bh
  410da8:	rcl    dl,0x41
  410dab:	and    BYTE PTR [ecx-0x686ae74d],cl
  410db1:	and    ebx,DWORD PTR [eax-0x5b]
  410db4:	sbb    DWORD PTR [ebx-0x2f],edx
  410db7:	imul   DWORD PTR [esi+0x2d70da8f]
  410dbd:	cwde   
  410dbe:	adc    al,0x6f
  410dc0:	xchg   edi,eax
  410dc1:	das    
  410dc2:	and    BYTE PTR fs:[eax-0x51],al
  410dc6:	adc    eax,0xf6d9bfa5
  410dcb:	ds out 0x3b,eax
  410dce:	mov    ah,0x1e
  410dd0:	stc    
  410dd1:	arpl   WORD PTR [ebx-0x60f4d9ca],sp
  410dd7:	and    eax,0x571978aa
  410ddc:	push   ebx
  410ddd:	pop    es
  410dde:	xor    eax,0xf09b486f
  410de3:	les    esi,FWORD PTR [eax+0x1e]
  410de6:	or     BYTE PTR [edx-0x1d0cea68],0x68
  410ded:	(bad)  
  410dee:	and    eax,0xc15ff21e
  410df3:	packuswb mm4,mm5
  410df6:	(bad)  
  410df7:	sbb    eax,0x6801de1
  410dfc:	div    ebp
  410dfe:	xchg   BYTE PTR [ecx+0x25],bh
  410e01:	dec    edx
  410e02:	(bad)  
  410e03:	retf   0x1298
  410e06:	(bad)  
  410e07:	and    DWORD PTR [edi+0x52],0xcaaef24
  410e0e:	mov    ds:0x6fe23cf3,eax
  410e13:	leave  
  410e14:	ret    0xcbd9
  410e17:	inc    esp
  410e18:	data16 sbb al,0xe
  410e1b:	fwait
  410e1c:	les    esp,FWORD PTR ds:0xf953cf1f
  410e22:	(bad)  
  410e23:	arpl   WORD PTR [edi],ax
  410e25:	sub    bh,bl
  410e27:	adc    BYTE PTR [eax],ch
  410e29:	pop    es
  410e2a:	fdivr  st(2),st
  410e2c:	out    0xcc,eax
  410e2e:	mov    ebp,0x118838a1
  410e33:	lock mov ss,WORD PTR [ebp+0x1fe2c8cb]
  410e3a:	fcomp  st(4)
  410e3c:	ds inc ebx
  410e3e:	jmp    0xa6ad:0xfd9307a0
  410e45:	push   ebx
  410e46:	retf   0x739d
  410e49:	sub    edi,DWORD PTR [esi+esi*2]
  410e4c:	cmc    
  410e4d:	pop    ds
  410e4e:	adc    BYTE PTR [ebp+0x32b3413e],ah
  410e54:	or     ebp,ebp
  410e56:	adc    al,0xbd
  410e58:	sahf   
  410e59:	in     eax,0x9
  410e5b:	ror    DWORD PTR [ecx-0x33],0x71
  410e5f:	hlt    
  410e60:	mov    ecx,DWORD PTR [eax+0x4e]
  410e63:	add    edi,DWORD PTR [ebp-0x4bdcaa4d]
  410e69:	je     0x410e2f
  410e6b:	xchg   BYTE PTR [esi],ah
  410e6d:	jl     0x410e47
  410e6f:	mov    edx,0xa1a8c1dd
  410e74:	sub    eax,0x92292d93
  410e79:	retf   0x4625
  410e7c:	repz inc edi
  410e7e:	add    eax,0x1334d6d
  410e83:	or     DWORD PTR [edi],ebp
  410e85:	xchg   edi,eax
  410e86:	push   esi
  410e87:	xor    ebp,DWORD PTR [eax-0x78ae5e9e]
  410e8d:	(bad)  [edi-0x54485376]
  410e93:	or     ebp,DWORD PTR [ecx]
  410e95:	test   eax,0xf0586839
  410e9a:	xchg   DWORD PTR [ecx],eax
  410e9c:	js     0x410e4c
  410e9e:	jns    0x410e3a
  410ea0:	repnz push es
  410ea2:	or     bh,dl
  410ea4:	stc    
  410ea5:	call   0x7bdc:0x23bf00d3
  410eac:	mov    ds:0x41cfa81b,al
  410eb1:	mov    DWORD PTR [ecx-0x58],eax
  410eb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410eb5:	repz dec edi
  410eb7:	push   ss
  410eb8:	outs   dx,BYTE PTR ds:[esi]
  410eb9:	fsubr  DWORD PTR [edi+ecx*2+0x4e]
  410ebd:	xchg   DWORD PTR [eax],edi
  410ebf:	div    DWORD PTR [eax-0x40]
  410ec2:	jmp    0x3438:0xe2f5c9dc
  410ec9:	stos   BYTE PTR es:[edi],al
  410eca:	xlat   BYTE PTR ds:[ebx]
  410ecb:	out    dx,eax
  410ecc:	inc    ebx
  410ecd:	xor    BYTE PTR [esi+0x5116c922],al
  410ed3:	mov    edi,0xf60a8f9
  410ed8:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  410eda:	pop    ss
  410edb:	cwde   
  410edc:	test   DWORD PTR [edi+0x2f6e3848],esp
  410ee2:	in     al,dx
  410ee3:	dec    eax
  410ee4:	repnz xor al,0xeb
  410ee7:	cmc    
  410ee8:	bound  esp,QWORD PTR [ebp-0x38]
  410eeb:	repnz xchg ebp,eax
  410eed:	or     al,0x80
  410eef:	sub    eax,0x8356af06
  410ef4:	retf   
  410ef5:	outs   dx,BYTE PTR ds:[esi]
  410ef6:	and    DWORD PTR ds:0xd7cf66c0,0x8d338b3c
  410f00:	inc    BYTE PTR [ebx-0x42]
  410f03:	sub    eax,0x80d57bbf
  410f08:	cld    
  410f09:	repnz outs dx,DWORD PTR gs:[esi]
  410f0c:	inc    ecx
  410f0d:	mov    ebx,0x563cce01
  410f12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f13:	add    bh,BYTE PTR [eax+eax*2]
  410f16:	andnps xmm0,XMMWORD PTR [ebp-0x64]
  410f1a:	sub    esi,DWORD PTR [eax]
  410f1c:	bound  edi,QWORD PTR [ecx]
  410f1e:	cmp    DWORD PTR [edi-0x3a],edx
  410f21:	sti    
  410f22:	sbb    DWORD PTR [esi+0x6db244e3],eax
  410f28:	jge    0x410f0f
  410f2a:	sbb    al,0xd5
  410f2c:	std    
  410f2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f2e:	test   eax,0x3eaed352
  410f33:	(bad)  
  410f34:	imul   eax,DWORD PTR [edx],0xffffffe1
  410f37:	mov    eax,fs:0x67901722
  410f3d:	outs   dx,DWORD PTR ds:[esi]
  410f3e:	xchg   esp,eax
  410f3f:	pop    ecx
  410f40:	jle    0x410f43
  410f42:	add    bh,dl
  410f44:	rcr    ah,0xc9
  410f47:	and    DWORD PTR [edi+0x1b],edi
  410f4a:	add    ebp,DWORD PTR [eax+0x48cc37fe]
  410f50:	adc    eax,0x84a9fdc
  410f55:	loopne 0x410ee8
  410f57:	xor    eax,0x97552f79
  410f5c:	call   0xc33c:0xa868a895
  410f63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f64:	mov    eax,0xa129997e
  410f69:	ins    BYTE PTR es:[edi],dx
  410f6a:	sbb    al,0xe5
  410f6c:	jnp    0x410f68
  410f6e:	dec    edi
  410f6f:	or     eax,ebx
  410f71:	neg    DWORD PTR [esi]
  410f73:	retf   
  410f74:	and    edx,DWORD PTR [ecx]
  410f76:	ss mov esi,0x3cdcd4ec
  410f7c:	or     ah,BYTE PTR [edx-0x19b93220]
  410f82:	cmp    DWORD PTR [eax-0x4c],edi
  410f85:	imul   edi
  410f87:	and    BYTE PTR [eax-0x34],ch
  410f8a:	jo     0x410ff3
  410f8c:	out    0x16,al
  410f8e:	or     BYTE PTR [ebp-0x3df6c92f],ah
  410f94:	jg     0x410f51
  410f96:	sub    eax,0xaa18d82
  410f9b:	imul   ebx,ecx,0x8818d94
  410fa1:	ins    BYTE PTR es:[edi],dx
  410fa2:	and    edi,DWORD PTR [ebx+0x51bae2f3]
  410fa8:	jae    0x410f82
  410faa:	mov    esi,0x9d99e07d
  410faf:	mov    bh,0xc0
  410fb1:	les    ebx,FWORD PTR [eax-0x6cfa97ff]
  410fb7:	fnstcw WORD PTR [ebx+0x66]
  410fba:	fiadd  DWORD PTR [ecx-0x1e]
  410fbd:	and    eax,esi
  410fbf:	push   edx
  410fc0:	in     al,0x5d
  410fc2:	xor    esp,DWORD PTR [ebx+esi*2-0x41]
  410fc6:	cwde   
  410fc7:	push   es
  410fc8:	cli    
  410fc9:	test   eax,0xd6215046
  410fce:	jle    0x41101e
  410fd0:	cli    
  410fd1:	stos   DWORD PTR es:[edi],eax
  410fd2:	jae    0x410f90
  410fd4:	lock add esi,edi
  410fd7:	es arpl WORD PTR ss:[edx+0x31c3e142],di
  410fdf:	sysexit 
  410fe1:	stc    
  410fe2:	hlt    
  410fe3:	lahf   
  410fe4:	jno    0x41105c
  410fe6:	inc    edx
  410fe7:	int    0xde
  410fe9:	mov    ebx,0xd2807b7
  410fee:	push   esp
  410fef:	scas   eax,DWORD PTR es:[edi]
  410ff0:	mov    ebp,0x9c78679c
  410ff5:	inc    esp
  410ff7:	test   BYTE PTR [edi+ebp*8+0x50],dh
  410ffb:	(bad)  
  410ffc:	mov    edi,0xee47de7
  411001:	adc    BYTE PTR [ebx+ebp*4+0x355b8de7],bl
  411008:	(bad)  
  411009:	and    eax,0xa5076d48
  41100e:	sbb    al,0xc3
  411010:	mov    esp,0x82c4666a
  411015:	sub    al,0xb7
  411017:	cdq    
  411018:	sbb    bh,cl
  41101a:	ret    0xa1e
  41101d:	and    DWORD PTR [esi],esp
  41101f:	sbb    DWORD PTR [eax],esp
  411021:	idiv   BYTE PTR [edx+eiz*2]
  411024:	jne    0x41105a
  411026:	sbb    esi,0x3c
  411029:	mov    ?,ebx
  41102b:	xor    BYTE PTR [esi],bl
  41102d:	aas    
  41102e:	clc    
  41102f:	cmp    DWORD PTR [esi+0x77],ecx
  411032:	pop    ebp
  411033:	pushf  
  411034:	xchg   BYTE PTR [ecx-0x63d4ea35],bh
  41103a:	lods   eax,DWORD PTR ds:[esi]
  41103b:	lock or esi,0xe4fd4b6b
  411042:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411043:	iret   
  411044:	sbb    DWORD PTR [eax],0x29
  411047:	xchg   esp,edi
  411049:	repnz and ebx,DWORD PTR [edi+0x7e]
  41104d:	add    eax,0xd0661969
  411052:	jo     0x411046
  411054:	stos   BYTE PTR es:[edi],al
  411055:	fs push 0x74
  411058:	jmp    0xf67:0x2306eb54
  41105f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411060:	sub    edi,esi
  411062:	leave  
  411063:	and    al,0x88
  411065:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411066:	popf   
  411067:	sti    
  411068:	mov    ebx,ecx
  41106a:	das    
  41106b:	cmp    BYTE PTR [esi-0x9],0xf9
  41106f:	mov    esi,0x4b457e3e
  411074:	pusha  
  411075:	mov    ecx,esp
  411077:	mov    dh,0xf
  411079:	pop    ss
  41107a:	mov    ebp,0x9ce132cd
  41107f:	add    ebp,DWORD PTR [ebx+esi*4]
  411082:	test   BYTE PTR [ebp+edi*8-0x71],dh
  411086:	inc    esp
  411087:	mov    ebx,DWORD PTR [edx]
  411089:	daa    
  41108a:	retf   0xf9c6
  41108d:	loop   0x4110c4
  41108f:	fcmovnu st,st(3)
  411091:	xor    dl,BYTE PTR [eax]
  411093:	jge    0x4110c4
  411095:	arpl   WORD PTR [eax+edi*8],bp
  411098:	and    al,0xd4
  41109a:	sbb    edx,esp
  41109c:	aam    0x5f
  41109e:	pushf  
  41109f:	ins    DWORD PTR es:[edi],dx
  4110a0:	and    BYTE PTR [edi],ah
  4110a2:	sbb    ecx,DWORD PTR [esi-0x31a42017]
  4110a8:	mov    esp,0xe10439e6
  4110ad:	mov    WORD PTR [esi-0x5b9bf310],cs
  4110b3:	xchg   edx,eax
  4110b4:	or     dl,BYTE PTR [edx-0x5c]
  4110b7:	out    dx,eax
  4110b8:	into   
  4110b9:	(bad)  
  4110ba:	arpl   WORD PTR [ecx+0x439d4949],bx
  4110c0:	retf   
  4110c1:	test   DWORD PTR [ebx],edx
  4110c3:	jae    0x41110b
  4110c5:	pop    edx
  4110c6:	and    al,0x4b
  4110c8:	call   0x38b0d3d9
  4110cd:	dec    edx
  4110ce:	sub    eax,0x498a0ec1
  4110d3:	jmp    0x411117
  4110d5:	ds xor esi,esp
  4110d8:	mov    ch,0x78
  4110da:	jp     0x41109e
  4110dc:	shl    DWORD PTR [ecx],cl
  4110de:	pop    ds
  4110df:	push   ds
  4110e0:	popa   
  4110e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110e2:	jmp    0x411142
  4110e4:	mov    al,ds:0xf24ed331
  4110e9:	fidivr WORD PTR [eax+0x1f]
  4110ec:	xchg   edi,eax
  4110ed:	sub    DWORD PTR [ebp-0x5],edx
  4110f0:	mov    esi,DWORD PTR [ebp-0x71]
  4110f3:	div    BYTE PTR ss:[ebx+0x27]
  4110f7:	test   dh,bh
  4110f9:	mov    gs,esp
  4110fb:	ret    
  4110fc:	scas   eax,DWORD PTR es:[edi]
  4110fd:	sbb    eax,0xad09c632
  411102:	lock jno 0x4110ec
  411105:	or     edi,edi
  411107:	ficom  DWORD PTR [ebp+0x70]
  41110a:	or     esp,DWORD PTR [eax+0x494a6a0f]
  411110:	mov    cl,0x63
  411112:	mov    DWORD PTR [ebp+0x73],ebx
  411115:	je     0x4110a6
  411117:	int    0x39
  411119:	ret    
  41111a:	xchg   bh,cl
  41111c:	pop    ecx
  41111d:	mov    bl,0x80
  41111f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411120:	push   ecx
  411121:	icebp  
  411122:	adc    ecx,DWORD PTR [ebx]
  411124:	fimul  DWORD PTR [esi]
  411126:	pusha  
  411127:	push   edx
  411128:	aas    
  411129:	xor    ebx,0x4870983d
  41112f:	imul   esi,DWORD PTR [eax+edi*8-0x37106b1],0xffffffcb
  411137:	push   cs
  411138:	imul   edx,DWORD PTR [ecx],0x58144f9e
  41113e:	pop    esi
  41113f:	inc    esi
  411140:	shl    BYTE PTR [edx+0x78068486],1
  411146:	sub    BYTE PTR [eax+0x2ae680bc],cl
  41114c:	and    ebp,esi
  41114e:	dec    ebp
  41114f:	test   al,0x9d
  411151:	das    
  411152:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411154:	test   edx,edi
  411156:	sbb    DWORD PTR [ecx-0x30],ebx
  411159:	cmp    al,0x72
  41115b:	push   cs
  41115c:	int3   
  41115d:	sbb    al,0x7f
  41115f:	xchg   edi,eax
  411160:	xchg   ebx,eax
  411161:	lahf   
  411162:	popa   
  411163:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411164:	mov    eax,ds:0xd97f0011
  411169:	das    
  41116a:	push   ss
  41116b:	jg     0x4111be
  41116d:	push   esi
  41116e:	sub    DWORD PTR [eax],edx
  411170:	xor    al,0xa3
  411172:	add    DWORD PTR [edx-0x11db4a08],ebx
  411178:	fs retf 
  41117a:	retf   
  41117b:	xor    ebp,ecx
  41117d:	in     al,0x17
  41117f:	lods   al,BYTE PTR ds:[esi]
  411180:	jmp    ebx
  411182:	pop    es
  411183:	dec    esi
  411184:	aad    0x9
  411186:	sti    
  411187:	mov    ds:0x83447437,al
  41118c:	jle    0x411120
  41118e:	add    dl,dh
  411190:	scas   eax,DWORD PTR es:[edi]
  411191:	mov    edx,0x6ec0c404
  411196:	(bad)  
  411197:	and    al,BYTE PTR [eax+0x2e]
  41119a:	cmp    BYTE PTR [edi],ch
  41119c:	dec    edi
  41119d:	in     al,dx
  41119e:	out    0x4,al
  4111a0:	ds jmp 0xbb8a961f
  4111a6:	sub    al,0xa5
  4111a8:	aad    0x4c
  4111aa:	loop   0x411130
  4111ac:	xchg   ebx,eax
  4111ad:	sbb    al,0xc1
  4111af:	xchg   esi,eax
  4111b0:	sbb    dl,BYTE PTR [ecx-0x62]
  4111b3:	xchg   ebp,eax
  4111b4:	fild   QWORD PTR [edi]
  4111b7:	imul   esi,DWORD PTR [esi],0xffffff97
  4111ba:	ins    DWORD PTR es:[edi],dx
  4111bb:	mov    WORD PTR [esi],?
  4111bd:	lods   al,BYTE PTR ds:[esi]
  4111be:	test   BYTE PTR [ebx+0x66],0x43
  4111c2:	outs   dx,BYTE PTR ds:[esi]
  4111c3:	sbb    ah,bh
  4111c5:	dec    ebp
  4111c6:	loopne 0x411212
  4111c8:	(bad)  
  4111c9:	jl     0x41123f
  4111cb:	push   0x61
  4111cd:	mov    eax,0x78578874
  4111d2:	pop    ds
  4111d3:	lods   al,BYTE PTR ds:[esi]
  4111d4:	(bad)  
  4111d5:	fdecstp 
  4111d7:	pop    eax
  4111d8:	das    
  4111d9:	call   0x67aa6066
  4111de:	add    BYTE PTR [eax],ah
  4111e0:	sbb    eax,0xed144bfa
  4111e5:	inc    edi
  4111e6:	push   ebx
  4111e7:	jl     0x4111b8
  4111e9:	dec    eax
  4111ea:	jge    0x4111c3
  4111ec:	pop    ss
  4111ed:	push   edi
  4111ee:	or     esi,ecx
  4111f0:	mov    ds,WORD PTR [esi-0xd97d70f]
  4111f6:	dec    edi
  4111f7:	jge    0x4111c0
  4111f9:	bound  esi,QWORD PTR [edx+0x35]
  4111fc:	mov    esp,0xe57afcc9
  411201:	sub    edx,DWORD PTR [ecx]
  411203:	out    0x8f,eax
  411205:	push   0x218b4cb8
  41120a:	push   esi
  41120b:	or     DWORD PTR [edi-0x55],0x1f
  41120f:	inc    esp
  411210:	lds    esi,FWORD PTR [ebx]
  411212:	cli    
  411213:	pop    esp
  411214:	xchg   esp,eax
  411215:	cdq    
  411216:	cld    
  411217:	and    esp,DWORD PTR [edx-0x6c]
  41121a:	mov    dh,0x6a
  41121c:	mov    al,ds:0xb957c1a2
  411221:	jae    0x41121c
  411223:	(bad)  
  411225:	es jmp 0x411235
  411228:	ss xchg ebx,eax
  41122a:	jb     0x4111f4
  41122c:	jno    0x411253
  41122e:	popf   
  41122f:	mov    bl,0x38
  411231:	jge    0x411234
  411233:	cmp    al,0xcb
  411235:	stos   BYTE PTR es:[edi],al
  411236:	sub    eax,0x4c5ca508
  41123b:	test   eax,0x85bb2e55
  411240:	test   BYTE PTR [ebp+esi*4-0x6f],bl
  411244:	push   ecx
  411245:	jmp    0x411281
  411247:	xchg   esi,ecx
  411249:	pop    ebx
  41124a:	dec    edx
  41124b:	sub    ah,BYTE PTR [ebp+0x17a72685]
  411251:	dec    ecx
  411252:	mov    BYTE PTR [edx+0x75f989c0],dh
  411258:	xor    BYTE PTR [esi+0x2d],al
  41125b:	push   es
  41125c:	aad    0xcc
  41125e:	(bad)  
  41125f:	dec    ebx
  411260:	mov    ebp,0x1c041c6a
  411265:	test   DWORD PTR [edi+0x38],edi
  411268:	mov    ds:0xa245ecca,al
  41126d:	mov    ds:0x106ea267,al
  411272:	add    BYTE PTR [edx+0x4bf1daa],ah
  411278:	jnp    0x411266
  41127a:	sbb    al,dl
  41127c:	add    BYTE PTR [esi+0x69f052ea],0x15
  411283:	xlat   BYTE PTR ds:[ebx]
  411284:	jmp    0x411278
  411286:	mov    ah,0xac
  411288:	dec    ecx
  411289:	pop    eax
  41128a:	add    al,0x3a
  41128c:	fcmovnbe st,st(4)
  41128e:	jne    0x4112f5
  411290:	test   esp,ebx
  411292:	out    0xfd,eax
  411294:	stos   BYTE PTR es:[edi],al
  411295:	xchg   ebx,eax
  411296:	mov    DWORD PTR [eax+0x33],esp
  411299:	add    eax,DWORD PTR [esi+esi*1+0x779dd9f5]
  4112a0:	push   ecx
  4112a1:	lock stos BYTE PTR es:[edi],al
  4112a3:	jae    0x41122b
  4112a5:	test   DWORD PTR [ecx+ebx*8-0x61e8c79e],esi
  4112ac:	push   ebx
  4112ad:	stc    
  4112ae:	fwait
  4112af:	idiv   BYTE PTR [esi]
  4112b1:	sub    al,0x23
  4112b3:	and    eax,0x2dfc5191
  4112b8:	jnp    0x41125e
  4112ba:	mov    ebx,0x7f5f0959
  4112bf:	mov    cl,0xfb
  4112c1:	dec    edi
  4112c2:	lea    ecx,ds:0x45a29e82
  4112c8:	clc    
  4112c9:	retf   
  4112ca:	mov    bl,0x34
  4112cc:	mov    ?,ebx
  4112ce:	data16 fldcw WORD PTR [ecx+0x6bf89316]
  4112d5:	xor    ebp,ebp
  4112d7:	enter  0x1f4b,0x82
  4112db:	mov    edi,0x12451194
  4112e0:	sub    bl,dl
  4112e2:	mov    DWORD PTR [ebx+0x59cefb47],ebp
  4112e8:	cmp    BYTE PTR [ecx+0x1217365b],ch
  4112ee:	jmp    0x411300
  4112f0:	add    esi,esp
  4112f2:	fistp  QWORD PTR ds:0x1366de7e
  4112f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112f9:	aad    0x5d
  4112fb:	addr16 mov esp,0x82e1dd7d
  411301:	dec    ebp
  411302:	aad    0x8c
  411304:	push   ds
  411305:	test   al,0x40
  411307:	jle    0x41130b
  411309:	sbb    BYTE PTR [esi+0x5c1b64bd],ah
  41130f:	aaa    
  411310:	xchg   ebp,eax
  411311:	pop    ebx
  411312:	clc    
  411313:	cmp    BYTE PTR [edx],dh
  411315:	iret   
  411316:	mov    ch,0x9
  411318:	lds    ebp,FWORD PTR [esi]
  41131a:	xchg   ecx,eax
  41131b:	sub    al,0xe0
  41131d:	ret    0x2ea3
  411320:	sbb    BYTE PTR [ecx],0x6e
  411323:	fisub  DWORD PTR [ebx+0x6e]
  411326:	jno    0x41133c
  411328:	je     0x41138d
  41132a:	ret    0xf191
  41132d:	fnstcw WORD PTR [ecx]
  41132f:	mov    ds:0x24a3193e,eax
  411334:	jae    0x41130c
  411336:	push   es
  411337:	pop    ss
  411338:	js     0x4112f5
  41133a:	in     al,dx
  41133b:	xchg   esp,eax
  41133c:	ja     0x4113b0
  41133e:	shr    DWORD PTR [edi],0x48
  411341:	lods   eax,DWORD PTR ds:[esi]
  411342:	mov    eax,ds:0x6582dbac
  411347:	imul   BYTE PTR [edx+eiz*4+0x5d]
  41134b:	sti    
  41134c:	cmp    ch,BYTE PTR [edx+0x5d112f7]
  411352:	cmp    DWORD PTR ds:0xcca95cbb,ebx
  411358:	cld    
  411359:	or     BYTE PTR [ecx+0x1a632da8],dl
  41135f:	push   ebx
  411360:	jg     0x4113bd
  411362:	pop    ss
  411363:	mov    cl,0x1
  411365:	mov    bh,0x99
  411367:	bound  ecx,QWORD PTR [eax+0x3a59b072]
  41136d:	mov    al,0x6f
  41136f:	jge    0x411300
  411371:	cmp    edi,ecx
  411373:	cld    
  411374:	xchg   edx,eax
  411375:	clc    
  411376:	aam    0xe2
  411378:	bound  eax,QWORD PTR [ebp+esi*4+0x1323afc9]
  41137f:	loop   0x41130f
  411381:	dec    esp
  411382:	retf   
  411383:	xor    eax,0xde553315
  411388:	jno    0x411370
  41138a:	bound  edi,QWORD PTR [ebx]
  41138c:	js     0x411398
  41138e:	test   cl,al
  411390:	fwait
  411391:	mov    esp,0x54a7cd1b
  411396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411397:	xchg   BYTE PTR [esp+ebx*2],al
  41139a:	stos   BYTE PTR es:[edi],al
  41139b:	cmp    bh,BYTE PTR [esi+0x427d6e81]
  4113a1:	add    bh,BYTE PTR [edx-0x1507bc08]
  4113a7:	jb     0x4113b3
  4113a9:	mov    ds:0x3c0489e2,al
  4113ae:	mov    cl,BYTE PTR [ecx+0x1871f00]
  4113b4:	push   ebx
  4113b5:	pop    ebx
  4113b6:	add    DWORD PTR [ebp+0xb],ebx
  4113b9:	mov    esp,DWORD PTR [eax+0x1b]
  4113bc:	ror    ebx,1
  4113be:	add    eax,DWORD PTR [edx+0x610dd8c3]
  4113c4:	mov    dl,0xa0
  4113c6:	inc    ecx
  4113c7:	dec    edx
  4113c8:	mov    esi,0x880c9640
  4113cd:	and    eax,0xbf2a57ef
  4113d2:	push   edi
  4113d3:	in     eax,0xbe
  4113d5:	not    BYTE PTR [eax]
  4113d7:	sbb    esi,DWORD PTR [eax]
  4113d9:	mov    al,ds:0xaa736206
  4113de:	sti    
  4113df:	push   eax
  4113e0:	dec    ebp
  4113e1:	xchg   di,ax
  4113e3:	fadd   DWORD PTR [edi]
  4113e5:	sbb    BYTE PTR [edi+0x53],bl
  4113e8:	dec    ebp
  4113e9:	out    dx,al
  4113ea:	out    0xf6,al
  4113ec:	or     BYTE PTR cs:[eiz*1+0x75f5a5c3],0x74
  4113f5:	cli    
  4113f6:	dec    edi
  4113f7:	sbb    al,0x82
  4113f9:	sub    BYTE PTR [eax+0x5b12ec3c],dh
  4113ff:	jo     0x4113d6
  411401:	shl    DWORD PTR [ecx-0x157f8662],cl
  411407:	(bad)  [ecx-0x77997608]
  41140d:	hlt    
  41140e:	add    eax,0xb52b0472
  411413:	pop    edi
  411414:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411415:	cmp    esi,edx
  411417:	cld    
  411418:	lods   al,BYTE PTR ds:[esi]
  411419:	push   eax
  41141a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41141b:	push   edx
  41141c:	(bad)  
  41141f:	xchg   edx,eax
  411420:	cmc    
  411421:	pushf  
  411422:	jecxz  0x4113b5
  411424:	lea    edi,cs:[eax+edi*4]
  411428:	mov    dl,0x87
  41142a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41142b:	cmp    DWORD PTR [edx+0x20a90b9e],edx
  411431:	loop   0x4113bb
  411433:	push   ebp
  411434:	jecxz  0x4113cd
  411436:	test   al,0x6a
  411438:	cmp    al,0x33
  41143a:	or     edx,DWORD PTR [edx]
  41143c:	fucomip st,st(1)
  41143e:	cmp    DWORD PTR [ecx],esi
  411440:	in     al,dx
  411441:	pop    eax
  411442:	stos   BYTE PTR es:[edi],al
  411443:	adc    ecx,esp
  411445:	in     eax,dx
  411446:	retf   0x11fa
  411449:	mov    dl,BYTE PTR [esp+ebx*2]
  41144c:	(bad)  
  41144d:	pop    ds
  41144e:	jmp    0xd37b:0x1bf36965
  411455:	push   ds
  411456:	inc    edi
  411457:	sub    bh,BYTE PTR [eax+edx*1-0x3c]
  41145b:	jae    0x411438
  41145d:	arpl   WORD PTR [edi+0x1e2037b1],si
  411463:	adc    DWORD PTR [ebx],0xa43831d4
  411469:	lock imul BYTE PTR [ebp+0x32]
  41146d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41146e:	in     al,dx
  41146f:	jnp    0x41141c
  411471:	cmc    
  411472:	add    cl,BYTE PTR [edx-0x578da317]
  411478:	fnsave [edx-0x6a]
  41147b:	jnp    0x4114b3
  41147d:	cld    
  41147e:	cmp    DWORD PTR [ecx+0x49986d8b],ebp
  411484:	mov    ebx,0xf06e7e63
  411489:	pop    ebp
  41148a:	add    DWORD PTR [ebx-0x65],0x2044bb40
  411491:	mov    dh,bh
  411493:	mov    bh,0x50
  411495:	call   0x26c9:0x2a9c6385
  41149c:	mov    WORD PTR [ecx-0x468dc6e7],ss
  4114a2:	imul   esp,DWORD PTR [ecx-0x38],0xdfdef5f1
  4114a9:	das    
  4114aa:	and    ah,BYTE PTR [ebp+0x2e]
  4114ad:	push   esi
  4114ae:	pop    es
  4114af:	std    
  4114b0:	dec    edx
  4114b1:	sbb    cl,BYTE PTR [ecx+ecx*2+0x32]
  4114b5:	fidivr WORD PTR [edi+0x13]
  4114b8:	fcmove st,st(0)
  4114ba:	out    dx,al
  4114bb:	jnp    0x411476
  4114bd:	mov    es,esp
  4114bf:	(bad)  
  4114c0:	mov    ecx,0x6cf68280
  4114c5:	mov    esp,0xbe3a4e0e
  4114ca:	in     eax,0x39
  4114cc:	pusha  
  4114cd:	cmp    BYTE PTR [ebp+0x5d],ch
  4114d0:	dec    ebp
  4114d1:	jo     0x4114b9
  4114d3:	mov    dh,bl
  4114d5:	sub    ebp,DWORD PTR [ebp-0x5f]
  4114d8:	stc    
  4114d9:	or     DWORD PTR [edi],esi
  4114db:	jp     0x4114d8
  4114dd:	push   eax
  4114de:	ret    0x89c
  4114e1:	sub    al,0x1a
  4114e3:	xor    al,0x99
  4114e5:	rol    dh,0xf1
  4114e8:	mov    edi,0x66818ff5
  4114ed:	les    ebx,FWORD PTR [ecx+0x4ec45b8b]
  4114f3:	sbb    ah,bl
  4114f5:	push   ebp
  4114f6:	push   ss
  4114f7:	sbb    edx,edx
  4114f9:	cld    
  4114fa:	xchg   ebx,eax
  4114fb:	sar    BYTE PTR [ebx],1
  4114fd:	(bad)  
  4114ff:	jl     0x41148e
  411501:	icebp  
  411502:	gs cdq 
  411504:	je     0x41154e
  411506:	mov    ebp,DWORD PTR [esi+0x5f7659ca]
  41150c:	pop    esp
  41150d:	xchg   DWORD PTR [edx-0x41],edx
  411510:	add    BYTE PTR [edx+0x51c6594e],dh
  411516:	out    0xe3,eax
  411518:	pop    esp
  411519:	in     al,dx
  41151a:	mul    BYTE PTR [ecx+0x418704fe]
  411520:	jmp    0x1fc010c8
  411525:	std    
  411526:	and    DWORD PTR [ebx-0x7f0f77a9],ebp
  41152c:	jno    0x41156b
  41152e:	rcr    ebx,0xd
  411531:	bound  edi,QWORD PTR [ebx+0x4070933c]
  411537:	(bad)  
  411538:	mov    edx,0x6c26e7e3
  41153d:	lock sub DWORD PTR [edi],esp
  411540:	and    al,0xba
  411542:	mov    eax,ds:0x7e75432f
  411547:	mov    bl,0x32
  411549:	outs   dx,DWORD PTR ds:[esi]
  41154a:	xchg   ebp,eax
  41154b:	inc    eax
  41154c:	out    0x74,al
  41154e:	sbb    DWORD PTR [edx-0x41],ebp
  411551:	fidiv  DWORD PTR [edx]
  411553:	mov    esp,esi
  411555:	sti    
  411556:	mov    dl,0x12
  411558:	gs xor eax,0x24e24719
  41155e:	jmp    0x745214c7
  411563:	push   ds
  411564:	cmp    al,BYTE PTR [eax-0x1e]
  411567:	push   ss
  411568:	aam    0xd5
  41156a:	shl    BYTE PTR [ebp-0x19],cl
  41156d:	mov    ebp,0x113f7daa
  411572:	mov    DWORD PTR [ebx],edx
  411574:	sbb    eax,0xabc628ac
  411579:	retf   
  41157a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41157b:	jge    0x411518
  41157d:	xor    al,BYTE PTR [eax+0x52277086]
  411583:	add    eax,0xe48cc3b0
  411588:	and    eax,0x6871b06d
  41158d:	clc    
  41158e:	jae    0x41152e
  411590:	ds push eax
  411592:	pop    esp
  411593:	loopne 0x411545
  411595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411596:	xchg   edi,eax
  411597:	dec    ebp
  411598:	test   BYTE PTR [esi],0x1b
  41159b:	mov    cl,0x1c
  41159d:	xchg   BYTE PTR [edi],dh
  41159f:	push   ss
  4115a0:	xadd   ecx,ebp
  4115a3:	mov    ah,0xe4
  4115a5:	or     esi,ebp
  4115a7:	ja     0x411584
  4115a9:	cmp    al,cl
  4115ab:	lods   eax,DWORD PTR ds:[esi]
  4115ac:	push   eax
  4115ad:	inc    esi
  4115ae:	aas    
  4115af:	cld    
  4115b0:	xchg   edi,eax
  4115b1:	jl     0x411581
  4115b3:	jmp    0xe9d7:0x3c96677
  4115ba:	jl     0x4115aa
  4115bc:	jg     0x4115ef
  4115be:	add    ch,0x62
  4115c1:	iret   
  4115c2:	add    eax,0xe69aad00
  4115c7:	sbb    eax,0x4f9cc03d
  4115cc:	daa    
  4115cd:	imul   ebp,DWORD PTR [ebx],0xffffff8d
  4115d0:	aaa    
  4115d1:	dec    esi
  4115d2:	jae    0x4115bf
  4115d4:	pop    ecx
  4115d5:	sbb    ecx,DWORD PTR [edx]
  4115d7:	jl     0x4115a4
  4115d9:	push   0x51
  4115db:	loop   0x4115ee
  4115dd:	fidiv  WORD PTR [ebx-0x79b2510]
  4115e3:	lahf   
  4115e4:	jae    0x4115de
  4115e6:	inc    ecx
  4115e7:	xor    eax,0x6310afab
  4115ec:	addr16 nop
  4115ee:	retf   
  4115ef:	adc    BYTE PTR ds:0xf1ad7503,bl
  4115f5:	jmp    0x4115dd
  4115f7:	das    
  4115f8:	mov    esi,0x8683e996
  4115fd:	xchg   sp,ax
  4115ff:	jl     0x4115d1
  411601:	inc    edx
  411602:	or     al,0x76
  411604:	pop    edi
  411605:	test   DWORD PTR [ebx-0x2c],edx
  411608:	(bad)  
  411609:	loop   0x411637
  41160b:	jmp    0xcfd09f18
  411610:	mov    al,ds:0x100c1828
  411615:	xor    BYTE PTR [edi],0xc0
  411618:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411619:	out    dx,al
  41161a:	mov    ds:0x7efa13b6,eax
  41161f:	pop    edx
  411620:	and    DWORD PTR [eax+edi*1],ebx
  411623:	push   eax
  411624:	inc    esi
  411625:	test   edx,ecx
  411627:	fsubr  QWORD PTR [eax+edx*1]
  41162a:	test   eax,0xe169f418
  41162f:	popf   
  411630:	cmc    
  411631:	mov    bh,0x58
  411633:	popa   
  411634:	out    dx,al
  411635:	cmp    edx,ebx
  411637:	and    dl,bl
  411639:	adc    DWORD PTR [esi+0x1dd981a1],eax
  41163f:	clc    
  411640:	loopne 0x4116a8
  411642:	hlt    
  411643:	je     0x41169c
  411645:	cmp    ecx,0xfffffffd
  411648:	add    bh,ah
  41164a:	inc    edx
  41164b:	push   esp
  41164c:	out    dx,al
  41164d:	mov    bh,0x1f
  41164f:	rcr    BYTE PTR [ebx-0x7f],1
  411652:	push   0x2e
  411654:	push   es
  411655:	push   edx
  411656:	ins    BYTE PTR es:[edi],dx
  411657:	xchg   esp,eax
  411658:	lods   eax,DWORD PTR ds:[esi]
  411659:	jge    0x411626
  41165b:	cwde   
  41165c:	mov    DWORD PTR [ecx],ecx
  41165e:	mov    cl,bl
  411660:	js     0x4115e7
  411662:	mov    DWORD PTR [edx],edi
  411664:	push   es
  411665:	stos   BYTE PTR es:[edi],al
  411666:	jle    0x411649
  411668:	(bad)  
  411669:	mov    dl,0x15
  41166b:	lods   al,BYTE PTR ds:[esi]
  41166c:	push   ecx
  41166d:	gs repz aas 
  411670:	mov    edi,ebp
  411672:	mov    ds:0x7ca63636,al
  411677:	pop    esi
  411678:	rcl    BYTE PTR [ebp+0x75],cl
  41167b:	jl     0x4116c0
  41167d:	out    dx,al
  41167e:	sahf   
  41167f:	aaa    
  411680:	ins    DWORD PTR es:[edi],dx
  411681:	lahf   
  411682:	xlat   BYTE PTR ds:[ebx]
  411683:	mov    esp,0x947c115c
  411688:	push   eax
  411689:	or     eax,0x8916df58
  41168e:	add    DWORD PTR [ecx-0x28b97356],edi
  411694:	push   esp
  411695:	daa    
  411696:	sub    cl,BYTE PTR [eax-0x52]
  411699:	int3   
  41169a:	mov    ds:0xe890c3e1,al
  41169f:	adc    edi,DWORD PTR [esi-0x6340189]
  4116a5:	les    edx,FWORD PTR [edx-0x47dbc296]
  4116ab:	(bad)  
  4116ac:	test   BYTE PTR [esi+0x4004e2f0],bh
  4116b2:	ss cmc 
  4116b4:	xor    BYTE PTR es:[edx-0xfec2580],ah
  4116bb:	js     0x41169e
  4116bd:	or     eax,0x3c886af7
  4116c2:	pop    ebx
  4116c3:	sub    DWORD PTR [edi],esp
  4116c5:	mov    ds:0xe1ce9314,al
  4116ca:	xlat   BYTE PTR ds:[ebx]
  4116cb:	in     al,0xe4
  4116cd:	add    ah,al
  4116cf:	in     eax,dx
  4116d0:	les    esp,FWORD PTR [edi+0x78584ec5]
  4116d6:	sub    eax,0x1d4d385e
  4116db:	xchg   esp,eax
  4116dc:	hlt    
  4116dd:	push   ecx
  4116de:	adc    eax,0xe60a5df6
  4116e3:	clc    
  4116e4:	dec    esi
  4116e5:	dec    edx
  4116e6:	clc    
  4116e7:	jmp    0x411745
  4116e9:	std    
  4116ea:	inc    ecx
  4116eb:	adc    al,dh
  4116ed:	pop    ds
  4116ee:	sbb    ecx,DWORD PTR [edx-0x63]
  4116f1:	cmp    eax,0xcfec3a71
  4116f6:	cmp    ecx,eax
  4116f8:	(bad)
  4116fb:	nop
  4116fc:	ins    DWORD PTR es:[edi],dx
  4116fd:	and    cl,bl
  4116ff:	js     0x411709
  411701:	push   esp
  411702:	mov    DWORD PTR [edi+ebp*4+0x357c1aca],eax
  411709:	addr16 jg 0x41168c
  41170c:	mov    esp,0xb0c2e719
  411711:	xor    ch,BYTE PTR [edi]
  411713:	dec    esp
  411714:	ret    0xd6c8
  411717:	out    dx,al
  411718:	(bad)  
  41171a:	outs   dx,DWORD PTR ds:[esi]
  41171b:	(bad)  
  41171c:	neg    BYTE PTR [eax-0x29]
  41171f:	inc    ebx
  411720:	sub    al,BYTE PTR [ecx+eiz*8-0x73]
  411724:	cld    
  411725:	inc    edx
  411726:	jae    0x4117a2
  411728:	leave  
  411729:	in     eax,0x47
  41172b:	popf   
  41172c:	mov    ebx,0x92b1a83f
  411731:	sbb    DWORD PTR [ebp+eax*2-0x47],0xffffffaf
  411736:	int    0x4a
  411738:	push   edx
  411739:	dec    esi
  41173a:	add    ch,BYTE PTR [edx-0x16]
  41173d:	bound  ebp,QWORD PTR [eax-0x6e8a8571]
  411743:	mov    ebp,0xeb6b7e70
  411748:	pop    ss
  411749:	outs   dx,DWORD PTR ds:[esi]
  41174a:	imul   edi,DWORD PTR [edi+0x1b],0xd39bbeac
  411751:	mov    dh,0x67
  411753:	in     eax,dx
  411754:	mov    cl,0xa3
  411756:	popf   
  411757:	sub    al,0xaf
  411759:	add    BYTE PTR [edi+eiz*8],cl
  41175c:	pop    eax
  41175d:	jb     0x4117a9
  41175f:	add    ecx,DWORD PTR ds:0xa1cb5b51
  411765:	daa    
  411766:	out    0x46,eax
  411768:	cs ins BYTE PTR es:[edi],dx
  41176a:	lea    eax,[ebx-0x7ab3a7bb]
  411770:	push   eax
  411771:	ret    0x9625
  411774:	cmc    
  411775:	fisttp QWORD PTR [eax-0x80]
  411778:	mov    ebx,0x2bc163f7
  41177d:	xchg   ebx,eax
  41177e:	mov    ch,0x99
  411780:	xchg   edi,eax
  411781:	repz arpl bx,bp
  411784:	and    esp,esp
  411786:	mov    cl,0xda
  411788:	adc    al,BYTE PTR [ebx+0x55]
  41178b:	mov    al,BYTE PTR [ecx]
  41178d:	push   edx
  41178e:	jno    0x411808
  411790:	lea    esp,[ebx-0xa]
  411793:	inc    esp
  411794:	pop    edx
  411795:	ret    
  411796:	hlt    
  411797:	lahf   
  411798:	jmp    0x4117eb
  41179a:	stos   BYTE PTR es:[edi],al
  41179b:	jbe    0x4117e2
  41179d:	fistp  WORD PTR [ecx+0x44d8fe17]
  4117a3:	cmp    BYTE PTR [esi+0x7d],ch
  4117a6:	out    0x1,al
  4117a8:	pusha  
  4117a9:	cmp    BYTE PTR [ebx+0x6aab8a28],dl
  4117af:	add    esi,DWORD PTR [esi+0x3f]
  4117b2:	sub    DWORD PTR [ecx+0x5de54f21],0x7d3a53f8
  4117bc:	add    edx,DWORD PTR [eax]
  4117be:	icebp  
  4117bf:	jmp    0x41178e
  4117c1:	es pop eax
  4117c3:	enter  0xf2f,0x6a
  4117c7:	dec    edi
  4117c8:	sub    edi,ebx
  4117ca:	aas    
  4117cb:	bnd jmp 0x4117dc
  4117ce:	sti    
  4117cf:	ja     0x41183e
  4117d1:	loopne 0x41181d
  4117d3:	pop    es
  4117d4:	inc    ebx
  4117d5:	mov    esp,0x13010c57
  4117da:	mov    esp,0xec5f8c35
  4117df:	push   ebp
  4117e0:	jmp    FWORD PTR [edx+0x5f]
  4117e3:	adc    ebx,edi
  4117e5:	loopne 0x411778
  4117e7:	cwde   
  4117e8:	pusha  
  4117e9:	ja     0x411854
  4117eb:	mov    ch,0xc2
  4117ed:	or     DWORD PTR [eax-0x33],eax
  4117f0:	xlat   BYTE PTR ds:[ebx]
  4117f1:	test   al,0x91
  4117f3:	mov    ebp,0x91ff187
  4117f8:	sub    al,0x65
  4117fa:	stc    
  4117fb:	loope  0x41182a
  4117fd:	xchg   DWORD PTR ds:0x9e402089,ebp
  411803:	mov    ?,WORD PTR [eax]
  411805:	stos   DWORD PTR es:[edi],eax
  411806:	push   es
  411807:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411808:	or     BYTE PTR [eax+0x72],0x79
  41180c:	push   es
  41180d:	push   0x2afa4deb
  411812:	mov    ecx,0xca10864b
  411817:	and    DWORD PTR [eax+0x5],ecx
  41181a:	sar    DWORD PTR [esi-0x4f],1
  41181d:	or     eax,0xbac0885b
  411822:	sbb    DWORD PTR [ebp+0x55],0x1f
  411826:	fdiv   st,st(0)
  411828:	ret    
  411829:	mov    al,0x27
  41182b:	xor    DWORD PTR [eax+0x30],eax
  41182e:	dec    ecx
  41182f:	jp     0x411820
  411831:	test   bh,dh
  411833:	pop    ss
  411834:	(bad)  
  411836:	inc    ebx
  411837:	iret   
  411838:	rcl    dh,1
  41183a:	sub    ecx,edi
  41183c:	inc    ecx
  41183d:	fsubr  QWORD PTR [ebx]
  41183f:	imul   ecx,esp,0x12
  411842:	mov    dl,BYTE PTR [ebx+0x694d287d]
  411848:	adc    BYTE PTR [edi+0x43eaea18],0x40
  41184f:	or     eax,0x6808fe41
  411854:	and    eax,0xa036e55a
  411859:	leave  
  41185a:	dec    esp
  41185b:	pop    ebp
  41185c:	mov    esi,esp
  41185e:	sub    eax,0x8257df79
  411863:	sbb    edi,DWORD PTR [ecx]
  411865:	das    
  411866:	cmp    eax,0x67a2453
  41186b:	in     al,dx
  41186c:	pop    es
  41186d:	into   
  41186e:	xchg   ebx,eax
  41186f:	mov    ebp,0x36c70136
  411874:	push   ebp
  411875:	xchg   esi,eax
  411876:	(bad)  
  411877:	lods   eax,DWORD PTR ds:[esi]
  411878:	and    esp,DWORD PTR [edx+0x7d5c300c]
  41187e:	sbb    esp,DWORD PTR [ebp+esi*1-0x1be40985]
  411885:	pop    ebp
  411886:	mov    edi,0x7499a463
  41188b:	loop   0x4118a4
  41188d:	jno    0x4118db
  41188f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411890:	jge    0x41187d
  411892:	popa   
  411893:	mov    ds:0xe937458e,eax
  411898:	jmp    0x1644:0x420cda7
  41189f:	outs   dx,DWORD PTR ds:[esi]
  4118a0:	mov    ds:0x23e1a7cd,al
  4118a5:	ja     0x411890
  4118a7:	cdq    
  4118a8:	add    BYTE PTR [esi],0x79
  4118ab:	fcomp  QWORD PTR [esi+0x43]
  4118ae:	inc    ecx
  4118af:	mov    dl,0xa9
  4118b1:	dec    DWORD PTR [edi]
  4118b3:	lods   al,BYTE PTR ds:[esi]
  4118b4:	shr    BYTE PTR [ebx-0x7e],1
  4118b7:	call   0xc90f2d9d
  4118bc:	jne    0x411852
  4118be:	sbb    DWORD PTR [ebx-0xa843f02],edi
  4118c4:	sub    edi,DWORD PTR [esi]
  4118c6:	adc    eax,0x16223f66
  4118cb:	scas   al,BYTE PTR es:[edi]
  4118cc:	pop    edx
  4118cd:	push   cs
  4118ce:	stos   BYTE PTR es:[edi],al
  4118cf:	lods   al,BYTE PTR ds:[esi]
  4118d0:	cwde   
  4118d1:	jl     0x411939
  4118d3:	out    dx,al
  4118d4:	mul    dl
  4118d6:	sub    DWORD PTR [edx],edx
  4118d8:	bound  esp,QWORD PTR [eax]
  4118da:	fwait
  4118db:	shl    BYTE PTR [ecx+esi*2],0x23
  4118df:	aad    0x59
  4118e1:	ror    al,cl
  4118e3:	or     edx,eax
  4118e5:	cmp    eax,ebx
  4118e7:	xchg   ebp,eax
  4118e8:	or     WORD PTR [edi+edi*4+0x5101ee35],bp
  4118f0:	adc    DWORD PTR ds:0x7301b443,ebx
  4118f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118f7:	jmp    0x5fd66e8
  4118fc:	dec    esp
  4118fd:	and    DWORD PTR [ebx],esp
  4118ff:	xor    ebx,0x6f
  411902:	add    cl,BYTE PTR [ecx+0x31b830ce]
  411908:	ret    0xdd24
  41190b:	or     ecx,DWORD PTR [ebp+0x6f3749f2]
  411911:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411912:	push   0x2a
  411914:	jbe    0x411926
  411916:	shr    bl,0x4d
  411919:	shr    BYTE PTR [edi+0x54aecd91],0xc4
  411920:	ins    BYTE PTR es:[edi],dx
  411921:	or     DWORD PTR [edx+0x41],esi
  411924:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411925:	out    dx,eax
  411926:	pop    eax
  411927:	dec    ebp
  411928:	push   ds
  411929:	mov    edx,DWORD PTR [edx-0x230c0eb3]
  41192f:	adc    esp,DWORD PTR [esi]
  411931:	add    ch,BYTE PTR [ecx-0x3c]
  411934:	inc    edx
  411935:	mov    ebp,DWORD PTR [esi+0x6307d124]
  41193b:	lods   eax,DWORD PTR ds:[esi]
  41193c:	fsub   st,st(1)
  41193e:	jle    0x41195f
  411940:	mov    ss,WORD PTR [ebp-0x19093ab1]
  411946:	mov    ds:0x35c6c9c6,al
  41194b:	iret   
  41194c:	and    BYTE PTR [ebx+0x695515a],cl
  411952:	js     0x411981
  411954:	jp     0x41191b
  411956:	sar    edi,cl
  411958:	mov    esi,0x78b11be3
  41195d:	test   eax,0xad03ca16
  411962:	sbb    eax,0x1e9b0f61
  411967:	cmc    
  411968:	mov    ds:0x8189f09a,al
  41196d:	aam    0xe3
  41196f:	xchg   ebp,eax
  411970:	and    DWORD PTR [eax+0x1],ebx
  411973:	sub    al,0x1e
  411975:	jecxz  0x4119e7
  411977:	jg     0x411919
  411979:	addr16 mov ah,0xad
  41197c:	je     0x4119e5
  41197e:	into   
  41197f:	cmp    DWORD PTR [eax],edx
  411981:	jge    0x411919
  411983:	pop    ss
  411984:	push   ss
  411985:	mov    edi,0x4a2478f9
  41198a:	mov    eax,fs:0xe61f18a7
  411990:	test   BYTE PTR [edi],0x38
  411993:	loop   0x41199b
  411995:	and    ecx,DWORD PTR [eax-0x43e0ff25]
  41199b:	ret    0xc307
  41199e:	popf   
  41199f:	dec    esp
  4119a0:	dec    edi
  4119a1:	iret   
  4119a2:	es pop ebx
  4119a4:	xbegin 0x389c6b19
  4119aa:	push   ebp
  4119ab:	enter  0x2846,0xc1
  4119af:	out    0x18,al
  4119b1:	mov    esp,0x519f66b8
  4119b6:	or     DWORD PTR ds:0x9e480bda,ebx
  4119bc:	mov    ds:0xf932e002,al
  4119c1:	fidivr WORD PTR [edx+eiz*1+0x45]
  4119c5:	scas   eax,DWORD PTR es:[edi]
  4119c6:	aad    0xe4
  4119c8:	ret    
  4119c9:	dec    ecx
  4119ca:	and    eax,0xd5465fe0
  4119cf:	xchg   ebx,eax
  4119d0:	jg     0x411963
  4119d2:	mov    esi,0xb91ae5e0
  4119d7:	mov    al,BYTE PTR [eax+0x3c0c4c5f]
  4119dd:	mov    edx,0x8429b0a8
  4119e2:	jle    0x411974
  4119e4:	dec    esp
  4119e5:	xor    ah,BYTE PTR [ecx]
  4119e7:	outs   dx,DWORD PTR ds:[esi]
  4119e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119e9:	int    0xa7
  4119eb:	fs inc esp
  4119ed:	nop
  4119ee:	test   al,0x3c
  4119f0:	fdiv   QWORD PTR [edi-0xf]
  4119f3:	ret    
  4119f4:	inc    ecx
  4119f5:	and    al,0x49
  4119f7:	mov    bl,0xf0
  4119f9:	push   0xffffff81
  4119fb:	test   eax,0x7fc6e1ce
  411a00:	cmp    eax,0x628cd80b
  411a05:	adc    al,0xf5
  411a07:	push   ecx
  411a08:	push   ds
  411a09:	fs cld 
  411a0b:	and    al,BYTE PTR [edx]
  411a0d:	push   esi
  411a0e:	popf   
  411a0f:	xchg   DWORD PTR [eax-0x79634973],eax
  411a15:	lock retf 
  411a17:	fadd   DWORD PTR [ebx-0x2998ca43]
  411a1d:	rcl    DWORD PTR [ecx-0x3b9a8640],cl
  411a23:	frstor [edx-0x49288057]
  411a29:	and    dh,BYTE PTR [ebp+0xe19dc83]
  411a2f:	shr    DWORD PTR [eax+0x48],1
  411a32:	aam    0xc6
  411a34:	sbb    ebp,DWORD PTR [edi]
  411a36:	jmp    0x1a69318f
  411a3b:	and    al,0x5d
  411a3d:	or     BYTE PTR [ebx+0x1c77be13],al
  411a43:	(bad)  
  411a45:	push   esi
  411a46:	jle    0x411ab5
  411a48:	call   0x48c2:0xcb2e4d9f
  411a4f:	sbb    dl,BYTE PTR [ecx]
  411a51:	push   0x2b0a44ac
  411a56:	cmp    al,0xb
  411a58:	(bad)  [edx]
  411a5a:	inc    esp
  411a5b:	push   0xffffffac
  411a5d:	rcr    DWORD PTR [eax],0xd6
  411a60:	pop    edx
  411a61:	dec    ecx
  411a62:	push   ss
  411a63:	mov    edi,DWORD PTR [ebx+0x6c]
  411a66:	mov    ds:0x297d77be,eax
  411a6b:	retf   0x1655
  411a6e:	push   es
  411a6f:	xchg   ebp,eax
  411a70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a71:	dec    ecx
  411a72:	popa   
  411a73:	test   DWORD PTR [esi],edi
  411a75:	pop    esi
  411a76:	pop    ds
  411a77:	mov    ss,WORD PTR [edi]
  411a79:	out    dx,eax
  411a7a:	in     eax,dx
  411a7b:	leave  
  411a7c:	mov    ah,0xe
  411a7e:	push   esi
  411a7f:	popa   
  411a80:	mov    al,0x1d
  411a82:	jae    0x411aaf
  411a84:	or     edx,eax
  411a86:	cdq    
  411a87:	mov    DWORD PTR [eax],edi
  411a89:	mov    dh,0x7c
  411a8b:	dec    eax
  411a8c:	jo     0x411a43
  411a8e:	fcomp  QWORD PTR [ecx+ebp*8]
  411a91:	and    eax,0xc26085bc
  411a96:	push   edi
  411a97:	dec    ecx
  411a98:	test   BYTE PTR [edx+0x6a],ch
  411a9b:	int    0xc0
  411a9d:	shl    al,0xd2
  411aa0:	out    dx,al
  411aa1:	out    0x24,al
  411aa3:	pop    ebp
  411aa4:	adc    eax,0x6eda2526
  411aa9:	inc    eax
  411aaa:	fidivr DWORD PTR ds:0xc110d4b0
  411ab0:	mov    ch,BYTE PTR [ebx-0x7c06b365]
  411ab6:	test   eax,0x292c0b81
  411abb:	pop    es
  411abc:	loope  0x411aff
  411abe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411abf:	scas   al,BYTE PTR es:[edi]
  411ac0:	clc    
  411ac1:	aam    0xde
  411ac3:	cmp    DWORD PTR [eax-0x4a],edx
  411ac6:	cmp    DWORD PTR [ebx+esi*1],0xfffffffb
  411aca:	ins    DWORD PTR es:[edi],dx
  411acb:	sti    
  411acc:	xchg   ebp,eax
  411acd:	sub    BYTE PTR [ecx],dh
  411acf:	xchg   esi,eax
  411ad0:	ret    
  411ad1:	std    
  411ad2:	out    0x72,al
  411ad4:	or     dh,BYTE PTR es:[ebx]
  411ad7:	test   al,0x22
  411ad9:	xchg   edx,eax
  411ada:	das    
  411adb:	std    
  411adc:	int3   
  411add:	pop    ss
  411ade:	xchg   ecx,eax
  411adf:	jbe    0x411aa9
  411ae1:	ja     0x411b56
  411ae3:	cs sbb al,0x3f
  411ae6:	dec    esi
  411ae7:	xor    esp,0xa81f300f
  411aed:	shr    BYTE PTR [eax],1
  411aef:	std    
  411af0:	lahf   
  411af1:	adc    DWORD PTR [ecx+esi*8],esp
  411af4:	lahf   
  411af5:	enter  0x34d6,0x16
  411af9:	adc    edx,DWORD PTR [eax-0x5ac813e6]
  411aff:	sahf   
  411b00:	arpl   WORD PTR [esi-0x33],bp
  411b03:	mov    ah,0x54
  411b05:	retf   0x200c
  411b08:	mov    ecx,0x10588f07
  411b0d:	ins    DWORD PTR es:[edi],dx
  411b0e:	inc    esp
  411b0f:	stc    
  411b10:	push   0x4346154a
  411b15:	adc    BYTE PTR [ebx],0xe
  411b18:	std    
  411b19:	clc    
  411b1a:	mov    ebx,0x459c12d
  411b1f:	mov    cl,0x6a
  411b21:	fwait
  411b22:	sub    DWORD PTR [ebx+0x5a],esp
  411b25:	addr16 inc ebx
  411b27:	pop    esp
  411b28:	adc    eax,0xa6e86341
  411b2d:	das    
  411b2e:	test   DWORD PTR [esi+esi*4+0x58b6f173],edi
  411b35:	mov    edi,0xe317f0e7
  411b3a:	into   
  411b3b:	(bad)  
  411b3c:	iret   
  411b3d:	not    BYTE PTR [ebp-0x29]
  411b40:	push   0x42ed1ee
  411b45:	jns    0x411b7a
  411b47:	ja     0x411b7c
  411b49:	inc    eax
  411b4a:	xchg   edi,eax
  411b4b:	loopne 0x411b92
  411b4d:	fnsave [ebx]
  411b4f:	adc    BYTE PTR [esi+0x38eec66],dl
  411b55:	test   BYTE PTR [eax+ecx*4],al
  411b58:	add    ebx,DWORD PTR [edx]
  411b5a:	add    DWORD PTR [edi-0x654acb7b],esi
  411b60:	mov    cl,0xb7
  411b62:	stos   BYTE PTR es:[edi],al
  411b63:	adc    edi,DWORD PTR [edi+0xc609a99]
  411b69:	jge    0x411b08
  411b6b:	stos   BYTE PTR es:[edi],al
  411b6c:	(bad)  
  411b6d:	xlat   BYTE PTR ds:[ebx]
  411b6e:	dec    esp
  411b6f:	fisttp DWORD PTR [edx+0x3f]
  411b72:	or     BYTE PTR [ebx+ebp*4],ch
  411b75:	add    esi,DWORD PTR [ecx-0x3591e55c]
  411b7b:	enter  0xd484,0x4c
  411b7f:	int    0xbe
  411b81:	mov    esi,0x72f01104
  411b86:	inc    esi
  411b87:	sbb    ah,BYTE PTR [esi+edx*2-0x49]
  411b8b:	xor    dl,dl
  411b8d:	stc    
  411b8e:	retf   0x5af2
  411b91:	mov    ebx,DWORD PTR [ecx]
  411b93:	inc    ebx
  411b94:	cmp    cl,BYTE PTR [ebx+eiz*2-0x2eba1f9e]
  411b9b:	xor    edx,DWORD PTR [edx]
  411b9d:	test   DWORD PTR [eax-0x30],0xd46bb31c
  411ba4:	adc    eax,0x6f0bc005
  411ba9:	ret    0x8067
  411bac:	fst    QWORD PTR [ecx]
  411bae:	xor    BYTE PTR [esi-0x43436841],ch
  411bb4:	xlat   BYTE PTR ds:[ebx]
  411bb5:	or     eax,0x38b6e330
  411bba:	dec    edi
  411bbb:	xor    ebx,DWORD PTR [edi+0x5116ee45]
  411bc1:	xchg   BYTE PTR ds:0x53184029,bh
  411bc7:	or     eax,0xfb1e111c
  411bcc:	stc    
  411bcd:	inc    edi
  411bce:	inc    edi
  411bcf:	fidiv  WORD PTR [esi]
  411bd1:	mov    ch,0x60
  411bd3:	cmp    esi,edx
  411bd5:	xchg   ebx,eax
  411bd6:	imul   ebp,DWORD PTR [ebp-0x5d],0xffffff90
  411bda:	lods   eax,DWORD PTR ds:[esi]
  411bdb:	lock leave 
  411bdd:	push   0x5b
  411bdf:	or     eax,0x7a2a941b
  411be4:	sub    eax,0x982df6bd
  411be9:	xchg   ecx,eax
  411bea:	sub    eax,0x9b8b14c6
  411bef:	add    al,0xa1
  411bf1:	test   al,0xe8
  411bf3:	jno    0x411c20
  411bf5:	rcr    DWORD PTR [ecx],1
  411bf7:	(bad)  
  411bf8:	icebp  
  411bf9:	sar    BYTE PTR [edx],1
  411bfb:	and    al,dl
  411bfd:	popf   
  411bfe:	pusha  
  411bff:	gs repz (bad) 
  411c02:	enter  0x6f68,0x64
  411c06:	out    dx,eax
  411c07:	add    DWORD PTR [esi],ebx
  411c09:	mov    al,ds:0x69f54ae9
  411c0e:	jecxz  0x411c54
  411c10:	pop    ds
  411c11:	and    DWORD PTR [ebp+0x5e6079ef],edx
  411c17:	xchg   edi,eax
  411c18:	sahf   
  411c19:	pminub mm7,QWORD PTR [ebp-0x3d886115]
  411c20:	aad    0xa8
  411c22:	iret   
  411c23:	dec    esp
  411c24:	xchg   esp,eax
  411c25:	adc    eax,0xaff7e153
  411c2a:	or     ah,al
  411c2c:	pop    eax
  411c2d:	sbb    BYTE PTR [ecx+0x39],ch
  411c30:	cli    
  411c31:	sbb    ebx,DWORD PTR [ebp-0xd]
  411c34:	loope  0x411c70
  411c36:	mov    dl,0x90
  411c38:	mov    bh,0x47
  411c3a:	cmp    BYTE PTR [ebp+0x8],bl
  411c3d:	cli    
  411c3e:	xor    ebp,DWORD PTR [esi+0x74]
  411c41:	sbb    BYTE PTR [ecx+edi*2-0x4fb13e36],ch
  411c48:	mov    esi,0xb6234ac8
  411c4d:	inc    ebp
  411c4e:	adc    al,0xa4
  411c50:	sub    edi,DWORD PTR [ebp-0x4b]
  411c53:	loope  0x411be6
  411c55:	mov    bh,BYTE PTR [eax]
  411c57:	jl     0x411bfd
  411c59:	enter  0xc314,0xe1
  411c5d:	das    
  411c5e:	adc    edx,DWORD PTR [ecx+0x3c]
  411c61:	ins    DWORD PTR es:[edi],dx
  411c62:	popa   
  411c63:	data16 loope 0x411c7c
  411c66:	cmc    
  411c67:	das    
  411c68:	xchg   esi,eax
  411c69:	pop    es
  411c6a:	mov    ebp,0x17d482ff
  411c6f:	out    0xef,al
  411c71:	das    
  411c72:	loope  0x411c01
  411c74:	cldemote BYTE PTR [edi-0x26ab6aac]
  411c7b:	es xchg ecx,eax
  411c7d:	inc    edi
  411c7e:	je     0x411cba
  411c80:	push   esp
  411c81:	add    ah,BYTE PTR [edx]
  411c83:	add    DWORD PTR [esi],esi
  411c85:	imul   esp,DWORD PTR [eax+ebp*2-0x79a951ba],0x4d2c24d0
  411c90:	push   es
  411c91:	dec    BYTE PTR [ebx-0x5284cd1f]
  411c97:	test   DWORD PTR [ecx+0x561af622],eax
  411c9d:	cmp    cl,cl
  411c9f:	inc    ebx
  411ca0:	dec    ebx
  411ca1:	mov    eax,0x1c56e4e0
  411ca6:	sbb    bl,cl
  411ca8:	out    dx,eax
  411ca9:	xchg   ebp,eax
  411caa:	jno    0x411cf8
  411cac:	iret   
  411cad:	(bad)
  411cb1:	dec    ebp
  411cb2:	push   ebx
  411cb3:	pop    ebp
  411cb4:	xor    BYTE PTR [si+0x41fc],0x3
  411cba:	fdivp  st(6),st
  411cbc:	cmp    edi,DWORD PTR [edx-0x100f42c8]
  411cc2:	mov    dh,0xb9
  411cc4:	xchg   al,cl
  411cc6:	ja     0x411c85
  411cc8:	pop    ds
  411cc9:	loopne 0x411d47
  411ccb:	adc    eax,0xbd15f42c
  411cd0:	sub    ah,BYTE PTR [esi+0x42]
  411cd3:	sahf   
  411cd4:	push   0xffffffe2
  411cd6:	fistp  WORD PTR [ebx-0xd]
  411cd9:	dec    esi
  411cda:	xor    al,0x10
  411cdc:	call   0x64f9:0x50a963c0
  411ce3:	sbb    BYTE PTR [edi+edi*1],al
  411ce6:	mov    edi,0xdb4fadf0
  411ceb:	and    eax,DWORD PTR [ebp+ebp*4-0x3d]
  411cef:	dec    edi
  411cf0:	icebp  
  411cf1:	outs   dx,DWORD PTR ds:[esi]
  411cf2:	and    eax,0x662205b
  411cf7:	adc    BYTE PTR [edi+0x7a3724c4],0x0
  411cfe:	adc    DWORD PTR [edx+0x6a],edi
  411d01:	push   eax
  411d02:	push   0xffffffdb
  411d04:	int    0x9d
  411d06:	aaa    
  411d07:	(bad)  
  411d08:	mov    ebp,0xbaa2e882
  411d0d:	imul   esp,DWORD PTR [esi],0x185280c8
  411d13:	stc    
  411d14:	mov    ah,0x95
  411d16:	mov    eax,0x649d5fa2
  411d1b:	adc    DWORD PTR [edx],ebp
  411d1d:	sbb    eax,0x4a9ba66f
  411d23:	sub    ah,BYTE PTR [ebp-0x7b]
  411d26:	or     DWORD PTR [eax+0x1324165f],eax
  411d2c:	int    0xd1
  411d2e:	stc    
  411d2f:	or     eax,0x37c84c74
  411d34:	sbb    cl,dh
  411d36:	loop   0x411d29
  411d38:	adc    DWORD PTR [edx+0x38d94c0d],edx
  411d3e:	imul   esi,DWORD PTR [ebx],0x5c2812ac
  411d44:	imul   esp,DWORD PTR [ebp+0x1c],0xa2bc4168
  411d4b:	lea    eax,[esi-0xcae5ba9]
  411d51:	loop   0x411cf0
  411d53:	push   0xffffffe0
  411d55:	mov    bl,BYTE PTR [edx+0x6f40019]
  411d5b:	sub    dl,al
  411d5d:	mov    eax,0x3b6290cb
  411d62:	lods   eax,DWORD PTR ds:[esi]
  411d63:	or     BYTE PTR [ecx+ecx*8+0x2b],ah
  411d67:	or     DWORD PTR ds:0x7aea292e,esp
  411d6d:	imul   esi,edx,0x5efec95
  411d73:	xchg   edx,eax
  411d74:	aaa    
  411d75:	cmp    al,0x38
  411d77:	rcr    edi,0x96
  411d7a:	les    ebx,FWORD PTR [eax]
  411d7c:	mov    esp,0x538bf1d0
  411d81:	pop    ecx
  411d82:	or     DWORD PTR [ecx-0x37],edi
  411d85:	adc    eax,0x61d767ff
  411d8a:	hlt    
  411d8b:	inc    ebp
  411d8c:	mov    dl,0xb0
  411d8e:	call   0x1ade11c4
  411d93:	mov    eax,ds:0x14e8d9fe
  411d98:	outs   dx,BYTE PTR ds:[esi]
  411d99:	jecxz  0x411e0b
  411d9b:	sub    al,0xd2
  411d9d:	add    al,0x7c
  411d9f:	sbb    ebp,DWORD PTR [ebp-0x1e]
  411da2:	add    dh,0xd5
  411da5:	push   eax
  411da6:	add    dl,bl
  411da8:	(bad)  
  411da9:	adc    cl,BYTE PTR [esi+edi*8+0x27]
  411dad:	rol    DWORD PTR [eax-0x4d],1
  411db0:	sbb    BYTE PTR [edx+0x9],0xc6
  411db4:	jno    0x411e0e
  411db6:	push   edi
  411db7:	sbb    al,0x87
  411db9:	sub    ecx,DWORD PTR [esp+esi*1+0x49]
  411dbd:	outs   dx,DWORD PTR ds:[esi]
  411dbe:	jp     0x411d56
  411dc0:	in     eax,dx
  411dc1:	and    esi,ebp
  411dc3:	xchg   ecx,eax
  411dc4:	mov    cs,WORD PTR [bx+si+0x3639]
  411dc9:	cmp    DWORD PTR [eax],edx
  411dcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dcc:	sbb    dh,cl
  411dce:	jns    0x411d92
  411dd0:	pushf  
  411dd1:	popf   
  411dd2:	test   DWORD PTR [ebp+0x45],esi
  411dd5:	pop    esp
  411dd7:	mov    bl,0xf9
  411dd9:	not    DWORD PTR [eax]
  411ddb:	not    edi
  411ddd:	dec    esp
  411dde:	xor    BYTE PTR [ebp-0x44],bh
  411de1:	outs   dx,DWORD PTR ds:[esi]
  411de2:	push   es
  411de3:	mov    ecx,0xcdfd2988
  411de8:	sub    bl,BYTE PTR ds:0x150c6be7
  411dee:	loope  0x411dd4
  411df0:	ins    DWORD PTR es:[edi],dx
  411df1:	(bad)  
  411df2:	jl     0x411e13
  411df4:	in     eax,dx
  411df5:	and    ah,BYTE PTR [edx-0x6c]
  411df8:	popf   
  411df9:	or     DWORD PTR [eax+0x2b942652],ebx
  411dff:	test   BYTE PTR [ebx+0x7],0x6
  411e03:	and    eax,0x2d15c524
  411e08:	cli    
  411e09:	inc    cl
  411e0b:	pop    ss
  411e0c:	sub    DWORD PTR [edi+0x54ed3d6a],edx
  411e12:	test   al,0xf3
  411e14:	lea    esp,[eax+eiz*8-0x42acb79c]
  411e1b:	cmp    al,0x3d
  411e1d:	fdivr  DWORD PTR [edx]
  411e1f:	jg     0x411e98
  411e21:	jno    0x411e87
  411e23:	mov    dl,0x7b
  411e25:	cli    
  411e26:	es popa 
  411e28:	sub    ecx,DWORD PTR [edi]
  411e2a:	or     DWORD PTR [ebp-0x4c12052e],eax
  411e30:	loopne 0x411dd9
  411e32:	out    0x7a,eax
  411e34:	(bad)  ds:0x229590a9
  411e3a:	ss sub ecx,DWORD PTR ds:[eax-0xf]
  411e3f:	adc    BYTE PTR [eax-0x2e49117c],al
  411e45:	fisub  DWORD PTR [eax+0x79ee27a9]
  411e4b:	mov    eax,0xf683be33
  411e50:	add    BYTE PTR [ebx],bh
  411e52:	ror    DWORD PTR [edi],cl
  411e54:	test   DWORD PTR [eax+eax*1],ebx
  411e57:	add    BYTE PTR [eax],al
  411e59:	mov    DWORD PTR ds:0x42900c,0x30b0
  411e63:	cmp    esi,edi
  411e65:	mov    DWORD PTR ds:0x42d000,0x643
  411e6f:	je     0x411edc
  411e75:	sub    edx,0x6beb
  411e7b:	mov    edx,DWORD PTR ds:0x424074
  411e81:	mov    edx,DWORD PTR [edx+0x1c0]
  411e87:	mov    edx,DWORD PTR [edx]
  411e89:	sub    DWORD PTR ds:0x42c018,0x42901c
  411e93:	xor    esi,esi
  411e95:	add    edx,ecx
  411e97:	adc    esi,0xffffffff
  411e9a:	xor    edx,eax
  411e9c:	and    DWORD PTR ds:0x42d010,0x4e39
  411ea6:	xor    esi,0x0
  411ea9:	mov    DWORD PTR ds:0x42a018,0x6a83
  411eb3:	cmp    edx,0x70941fd1
  411eb9:	mov    DWORD PTR ds:0x42d014,0x6414
  411ec3:	jne    0x411f46
  411ec9:	mov    DWORD PTR ds:0x42b000,0x2399
  411ed3:	cmp    esi,0xffffffff
  411ed6:	jne    0x411f46
  411edc:	mov    edx,DWORD PTR ds:0x4240f8
  411ee2:	mov    esi,DWORD PTR ds:0x4240f0
  411ee8:	xor    edx,esi
  411eea:	mov    DWORD PTR ds:0x4240f0,edx
  411ef0:	mov    edx,DWORD PTR [ebp+0xc]
  411ef3:	mov    edx,DWORD PTR [edx]
  411ef5:	mov    edx,DWORD PTR [edx]
  411ef7:	mov    esi,DWORD PTR ds:0x4240f0
  411efd:	add    DWORD PTR [edx],esi
  411eff:	mov    esi,DWORD PTR [ebp+0x8]
  411f02:	mov    edx,DWORD PTR ds:0x4240f0
  411f08:	xor    esi,0x7510893
  411f0e:	add    esi,0x3272db
  411f14:	xor    ebx,ebx
  411f16:	add    esi,ecx
  411f18:	adc    ebx,0xffffffff
  411f1b:	xor    edi,edi
  411f1d:	xor    esi,eax
  411f1f:	xor    ebx,0x0
  411f22:	add    edx,ecx
  411f24:	adc    edi,0xffffffff
  411f27:	xor    edx,eax
  411f29:	xor    edi,0x0
  411f2c:	cmp    edx,esi
  411f2e:	jne    0x411f46
  411f34:	cmp    edi,ebx
  411f36:	jne    0x411f46
  411f3c:	mov    eax,ds:0x4240f0
  411f41:	mov    ds:0x4240f8,eax
  411f46:	pop    edi
  411f47:	pop    esi
  411f48:	pop    ebx
  411f49:	pop    ebp
  411f4a:	ret    0x8
  411f4d:	push   ebp
  411f4e:	mov    ebp,esp
  411f50:	sub    esp,0x90
  411f56:	add    DWORD PTR ds:0x42a01c,0x734d
  411f60:	push   esi
  411f61:	xor    ecx,0xb67
  411f67:	push   edi
  411f68:	xor    eax,DWORD PTR ds:0x42a018
  411f6e:	mov    eax,ds:0x424074
  411f73:	add    esi,0x4c8c
  411f79:	mov    DWORD PTR [ebp-0x2c],eax
  411f7c:	xor    ecx,0x3033
  411f82:	mov    eax,ds:0x424180
  411f87:	and    DWORD PTR ds:0x42a010,0x0
  411f91:	mov    esi,DWORD PTR ds:0x42a010
  411f97:	inc    esi
  411f98:	mov    DWORD PTR ds:0x42a010,esi
  411f9e:	cmp    DWORD PTR ds:0x42a010,0xd
  411fa5:	jne    0x411fbe
  411fab:	push   0x1106
  411fb0:	push   DWORD PTR [ebp-0xc]
  411fb3:	push   0x571c
  411fb8:	call   DWORD PTR ds:0x425044
  411fbe:	cmp    DWORD PTR ds:0x42a010,0xc
  411fc5:	jne    0x411fda
  411fcb:	xor    esi,esi
  411fcd:	add    esi,DWORD PTR ds:0x42a010
  411fd3:	inc    esi
  411fd4:	mov    DWORD PTR ds:0x42a010,esi
  411fda:	cmp    DWORD PTR ds:0x42a010,0x14
  411fe1:	jb     0x411f91
  411fe7:	mov    DWORD PTR [ebp-0x3c],eax
  411fea:	and    DWORD PTR ds:0x42b004,edx
  411ff0:	and    DWORD PTR [ebp-0x34],0x0
  411ff4:	xor    ecx,DWORD PTR ds:0x42d010
  411ffa:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  412001:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  412008:	and    edi,DWORD PTR ds:0x42b018
  41200e:	mov    eax,DWORD PTR [ebp-0x1c]
  412011:	mov    ecx,DWORD PTR [ebp-0x1c]
  412014:	xor    edi,DWORD PTR ds:0x42b004
  41201a:	xor    eax,ecx
  41201c:	add    DWORD PTR ds:0x429018,ecx
  412022:	mov    DWORD PTR [ebp-0x1c],eax
  412025:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  41202c:	sub    ecx,esi
  41202e:	mov    eax,DWORD PTR [ebp-0x28]
  412031:	mov    DWORD PTR ds:0x42a010,0x1d
  41203b:	cmp    DWORD PTR ds:0x42a010,0x0
  412042:	je     0x4120a2
  412048:	cmp    DWORD PTR ds:0x42a010,0x4
  41204f:	jne    0x412069
  412055:	push   DWORD PTR [ebp-0x1c]
  412058:	push   0x61a2
  41205d:	push   DWORD PTR [ebp-0x1c]
  412060:	push   DWORD PTR [ebp-0x18]
  412063:	call   DWORD PTR ds:0x425048
  412069:	cmp    DWORD PTR ds:0x42a010,0x5
  412070:	jne    0x412083
  412076:	mov    ecx,DWORD PTR ds:0x42a010
  41207c:	dec    ecx
  41207d:	mov    DWORD PTR ds:0x42a010,ecx
  412083:	mov    ecx,DWORD PTR ds:0x42a010
  412089:	dec    ecx
  41208a:	mov    DWORD PTR ds:0x42a010,ecx
  412090:	jmp    0x41203b
  412095:	movzx  esi,BYTE PTR ds:0x42b010
  41209c:	sub    DWORD PTR ds:0x42c008,esi
  4120a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4120a5:	sub    edi,esi
  4120a7:	xor    eax,ecx
  4120a9:	mov    DWORD PTR [ebp-0x28],eax
  4120ac:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4120b3:	and    DWORD PTR ds:0x42b000,0x0
  4120bd:	mov    eax,ds:0x42b000
  4120c2:	inc    eax
  4120c3:	mov    ds:0x42b000,eax
  4120c8:	cmp    DWORD PTR ds:0x42b000,0x1d
  4120cf:	jne    0x4120de
  4120d5:	push   DWORD PTR [ebp-0x10]
  4120d8:	call   DWORD PTR ds:0x42504c
  4120de:	cmp    DWORD PTR ds:0x42b000,0x16
  4120e5:	jb     0x4120bd
  4120eb:	mov    DWORD PTR ds:0x429018,0x1a
  4120f5:	cmp    DWORD PTR ds:0x429018,0x0
  4120fc:	je     0x412149
  412102:	cmp    DWORD PTR ds:0x429018,0x9
  412109:	jne    0x41211d
  41210f:	push   DWORD PTR [ebp-0x10]
  412112:	push   0x424524
  412117:	call   DWORD PTR ds:0x425010
  41211d:	cmp    DWORD PTR ds:0x429018,0xa
  412124:	jne    0x412137
  41212a:	mov    ecx,DWORD PTR ds:0x429018
  412130:	dec    ecx
  412131:	mov    DWORD PTR ds:0x429018,ecx
  412137:	mov    ecx,DWORD PTR ds:0x429018
  41213d:	dec    ecx
  41213e:	mov    DWORD PTR ds:0x429018,ecx
  412144:	jmp    0x4120f5
  412149:	mov    eax,DWORD PTR [ebp-0x18]
  41214c:	adc    ecx,esi
  41214e:	mov    ecx,DWORD PTR [ebp-0x18]
  412151:	xor    eax,ecx
  412153:	xor    esi,esi
  412155:	xor    esi,DWORD PTR ds:0x429028
  41215b:	sbb    DWORD PTR ds:0x429014,esi
  412161:	mov    DWORD PTR [ebp-0x18],eax
  412164:	mov    ecx,DWORD PTR ds:0x423e80
  41216a:	mov    eax,ds:0x4243e3
  41216f:	sub    ecx,eax
  412171:	imul   ecx,DWORD PTR [ecx+eax*1]
  412175:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  41217c:	mov    DWORD PTR ds:0x42a018,0x18
  412186:	cmp    DWORD PTR ds:0x42a018,0x0
  41218d:	je     0x4121c0
  412193:	cmp    DWORD PTR ds:0x42a018,0x1b
  41219a:	jne    0x4121ac
  4121a0:	push   DWORD PTR [ebp-0x1c]
  4121a3:	push   DWORD PTR [ebp-0x18]
  4121a6:	call   DWORD PTR ds:0x425018
  4121ac:	xor    esi,esi
  4121ae:	or     esi,DWORD PTR ds:0x42a018
  4121b4:	dec    esi
  4121b5:	mov    DWORD PTR ds:0x42a018,esi
  4121bb:	jmp    0x412186
  4121c0:	mov    eax,DWORD PTR [ebp-0x24]
  4121c3:	or     DWORD PTR ds:0x429014,0x2eb5
  4121cd:	mov    ecx,DWORD PTR [ebp-0x24]
  4121d0:	mov    DWORD PTR ds:0x429000,0x1b
  4121da:	cmp    DWORD PTR ds:0x429000,0x0
  4121e1:	je     0x412218
  4121e7:	cmp    DWORD PTR ds:0x429000,0x2a
  4121ee:	jne    0x412206
  4121f4:	push   0x42901c
  4121f9:	push   0x0
  4121fb:	push   0x424412
  412200:	call   DWORD PTR ds:0x42501c
  412206:	mov    esi,DWORD PTR ds:0x429000
  41220c:	dec    esi
  41220d:	mov    DWORD PTR ds:0x429000,esi
  412213:	jmp    0x4121da
  412218:	xor    eax,ecx
  41221a:	mov    DWORD PTR [ebp-0x24],eax
  41221d:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  412224:	sbb    eax,DWORD PTR ds:0x429004
  41222a:	mov    eax,DWORD PTR [ebp-0x14]
  41222d:	sub    DWORD PTR ds:0x429018,ecx
  412233:	mov    ecx,DWORD PTR [ebp-0x14]
  412236:	and    DWORD PTR ds:0x42d014,0x19f0
  412240:	xor    eax,ecx
  412242:	mov    DWORD PTR [ebp-0x14],eax
  412245:	mov    eax,DWORD PTR [ebp-0x20]
  412248:	mov    ecx,DWORD PTR [ebp-0x14]
  41224b:	dec    esi
  41224c:	mov    esi,0x7510893
  412251:	and    DWORD PTR ds:0x42a01c,0x5143
  41225b:	xor    eax,esi
  41225d:	and    DWORD PTR ds:0x42a004,0x0
  412267:	jmp    0x41227b
  41226c:	xor    edi,edi
  41226e:	add    edi,DWORD PTR ds:0x42a004
  412274:	inc    edi
  412275:	mov    DWORD PTR ds:0x42a004,edi
  41227b:	cmp    DWORD PTR ds:0x42a004,0x15
  412282:	jae    0x4122c2
  412288:	cmp    DWORD PTR ds:0x42a004,0x5
  41228f:	jne    0x4122a3
  412295:	push   0x42c018
  41229a:	push   DWORD PTR [ebp-0x24]
  41229d:	call   DWORD PTR ds:0x425020
  4122a3:	cmp    DWORD PTR ds:0x42a004,0x4
  4122aa:	jne    0x4122bd
  4122b0:	mov    edi,DWORD PTR ds:0x42a004
  4122b6:	inc    edi
  4122b7:	mov    DWORD PTR ds:0x42a004,edi
  4122bd:	jmp    0x41226c
  4122c2:	mov    edi,0x3272db
  4122c7:	add    eax,edi
  4122c9:	xor    eax,ecx
  4122cb:	mov    DWORD PTR [ebp-0x14],eax
  4122ce:	mov    eax,DWORD PTR [ebp-0x10]
  4122d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4122d4:	sub    eax,ecx
  4122d6:	mov    DWORD PTR [ebp-0x10],eax
  4122d9:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4122e0:	mov    al,BYTE PTR [ebp-0x1]
  4122e3:	movzx  ecx,BYTE PTR [ebp-0x1]
  4122e7:	movzx  eax,al
  4122ea:	sub    ecx,eax
  4122ec:	mov    BYTE PTR [ebp-0x1],cl
  4122ef:	movzx  eax,BYTE PTR [ebp-0x1]
  4122f3:	xor    eax,0xffffff99
  4122f6:	mov    BYTE PTR [ebp-0x1],al
  4122f9:	mov    eax,DWORD PTR [ebp-0x20]
  4122fc:	xor    eax,esi
  4122fe:	add    eax,edi
  412300:	mov    DWORD PTR [ebp-0x14],eax
  412303:	lea    eax,[ebp-0x40]
  412306:	mov    DWORD PTR [ebp-0x38],eax
  412309:	lea    eax,[ebp-0x38]
  41230c:	mov    DWORD PTR [ebp-0x44],eax
  41230f:	lea    eax,[ebp-0x44]
  412312:	mov    DWORD PTR [ebp-0x8],eax
  412315:	lea    eax,[ebp-0x8]
  412318:	mov    DWORD PTR [ebp-0x48],eax
  41231b:	mov    eax,DWORD PTR [ebp-0x18]
  41231e:	jmp    0x41466d
  412323:	test   cl,dl
  412325:	icebp  
  412326:	arpl   WORD PTR gs:[ebp+0x64],sp
  41232a:	scas   eax,DWORD PTR es:[edi]
  41232b:	push   0x5f94cc8
  412330:	dec    ebp
  412331:	sahf   
  412332:	loop   0x412312
  412334:	imul   esp,DWORD PTR [edx+0x62],0x50
  412338:	pop    edi
  412339:	bound  esp,QWORD PTR [edx+0x5d]
  41233c:	or     cl,BYTE PTR [edi-0x5]
  41233f:	retf   0x43de
  412342:	cmp    eax,0x6501ff9c
  412347:	sbb    al,0x17
  412349:	jb     0x4122d0
  41234b:	inc    edi
  41234c:	call   0xc952:0x3de9592d
  412353:	push   eax
  412354:	sbb    BYTE PTR [esi+eiz*4],bl
  412357:	sahf   
  412358:	sbb    al,0xc2
  41235a:	sub    eax,0x2a1eb109
  41235f:	dec    esp
  412360:	add    eax,DWORD PTR [edx-0x61]
  412363:	das    
  412364:	adc    al,0x38
  412366:	fnstsw WORD PTR [esi+0x7252617d]
  41236c:	fisubr DWORD PTR [eax+0x475498e4]
  412372:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412373:	ror    DWORD PTR [edi-0x16326632],1
  412379:	sub    eax,0x7d7f31df
  41237e:	add    al,0x66
  412380:	add    ch,0x30
  412383:	and    eax,0x6fba6f85
  412388:	js     0x4123ab
  41238a:	mov    eax,0x82cc2ac6
  41238f:	mov    ds:0xdbf607c,al
  412394:	enter  0x20c7,0xe6
  412398:	fcmovnb st,st(4)
  41239a:	fsubr  DWORD PTR [edx-0x66f53a68]
  4123a0:	cmp    DWORD PTR [ebx+edi*2+0x35],ebp
  4123a4:	or     al,0x44
  4123a6:	fwait
  4123a7:	sbb    BYTE PTR [ebp-0x4355ec53],bl
  4123ad:	rol    esp,1
  4123af:	rol    BYTE PTR [ebx-0x4e8cb7c1],cl
  4123b5:	mov    eax,ds:0xb1fba806
  4123ba:	mov    eax,ds:0x4dea9549
  4123bf:	fidiv  DWORD PTR [esi+0x6d94ca19]
  4123c5:	test   eax,0x4bc510dc
  4123ca:	pop    ss
  4123cb:	shl    BYTE PTR ds:0xaf508ccc,1
  4123d1:	es cwde 
  4123d3:	inc    edi
  4123d4:	ins    DWORD PTR es:[edi],dx
  4123d5:	jns    0x412401
  4123d7:	sti    
  4123d8:	ins    BYTE PTR es:[edi],dx
  4123d9:	mov    ch,dl
  4123db:	inc    eax
  4123dc:	stc    
  4123dd:	push   es
  4123de:	and    al,ch
  4123e0:	loop   0x4123f0
  4123e2:	pushf  
  4123e3:	fiadd  DWORD PTR [edx+0x47f0d49f]
  4123e9:	pop    eax
  4123ea:	rcl    dh,0xd2
  4123ed:	int3   
  4123ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123ef:	cmp    dh,bl
  4123f1:	test   DWORD PTR [eax],edi
  4123f3:	call   0x56507bd1
  4123f8:	jb     0x4123a9
  4123fa:	xor    bl,bh
  4123fc:	xor    BYTE PTR [edi+edi*4+0x45],bl
  412400:	inc    esi
  412401:	leave  
  412402:	push   eax
  412403:	call   0x7d02c1f3
  412408:	outs   dx,BYTE PTR ds:[esi]
  412409:	mov    ecx,0x76c4fa41
  41240e:	jg     0x4123b8
  412410:	sub    eax,0xcdeef593
  412415:	jbe    0x41243f
  412417:	jno    0x412485
  412419:	sahf   
  41241a:	jmp    0xe266:0xf5d1d877
  412421:	aam    0x69
  412423:	adc    bh,BYTE PTR fs:0x5df0f169
  41242a:	out    dx,eax
  41242b:	jne    0x4123bf
  41242d:	and    DWORD PTR [ebx-0x67218061],esp
  412433:	frstor [ebx-0x1d2c967b]
  412439:	ds sbb dl,bh
  41243c:	or     eax,DWORD PTR [ecx+0xd3dc823]
  412442:	ja     0x4123ef
  412444:	mov    bl,0x3b
  412446:	pop    ss
  412447:	(bad)  
  412448:	jmp    0xfb5be55c
  41244d:	push   eax
  41244e:	inc    edx
  41244f:	push   ebp
  412450:	jno    0x412499
  412452:	sahf   
  412453:	inc    eax
  412454:	pop    ss
  412455:	dec    eax
  412456:	xchg   esp,eax
  412457:	(bad)  
  412458:	xchg   esp,eax
  412459:	and    DWORD PTR [edi],esp
  41245b:	adc    bh,BYTE PTR [ebx]
  41245d:	sti    
  41245e:	inc    edi
  41245f:	xor    BYTE PTR [eax-0x46],0x20
  412463:	lods   eax,DWORD PTR ds:[esi]
  412464:	fwait
  412465:	shl    DWORD PTR [edx+0x2b],1
  412468:	stc    
  412469:	cs push esi
  41246b:	cmp    al,dh
  41246d:	sub    ebp,DWORD PTR [esi+0x43]
  412470:	push   ebp
  412471:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412472:	fucomp st(4)
  412474:	arpl   WORD PTR [eax],bx
  412476:	outs   dx,DWORD PTR ds:[esi]
  412477:	stos   DWORD PTR es:[edi],eax
  412478:	push   esi
  412479:	int3   
  41247a:	dec    ebx
  41247b:	(bad)  
  41247c:	pop    edi
  41247d:	add    ah,dh
  41247f:	std    
  412480:	pushf  
  412481:	jecxz  0x412484
  412483:	cld    
  412484:	or     ebp,DWORD PTR [ebp+ecx*4-0x72783c67]
  41248b:	xor    al,0xd0
  41248d:	fwait
  41248e:	pop    eax
  41248f:	push   0x6d
  412491:	adc    bl,BYTE PTR [ebx+eiz*1+0x28]
  412495:	dec    eax
  412496:	out    dx,al
  412497:	mov    cl,0x60
  412499:	adc    eax,0x215c400a
  41249e:	or     BYTE PTR [edi-0x68],bl
  4124a1:	stos   BYTE PTR es:[edi],al
  4124a2:	and    eax,0xef68547c
  4124a7:	and    ebp,DWORD PTR [ebx+0x4b4f081e]
  4124ad:	retf   
  4124ae:	out    0x98,al
  4124b0:	cmp    BYTE PTR [ebx-0x2c],dl
  4124b3:	jg     0x4124cc
  4124b5:	mov    ah,0x18
  4124b7:	in     al,dx
  4124b8:	mov    ds:0x870a742,eax
  4124bd:	call   0x3849aeaf
  4124c2:	mov    esp,0xa8d85536
  4124c7:	aaa    
  4124c8:	cmp    BYTE PTR [ecx-0x75c0d54a],0x20
  4124cf:	or     ecx,DWORD PTR [ecx-0x3ba8979e]
  4124d5:	lock pop eax
  4124d7:	add    dh,BYTE PTR [eax+0x13]
  4124da:	cmp    ecx,edi
  4124dc:	icebp  
  4124dd:	mov    edi,0x87bb4da5
  4124e2:	mov    edi,0xc3a14b26
  4124e7:	xor    al,0xa0
  4124ea:	inc    ebx
  4124eb:	cdq    
  4124ec:	(bad)  
  4124ed:	cmc    
  4124ee:	xor    edx,DWORD PTR ds:0x7deca3c5
  4124f4:	xchg   DWORD PTR [edi+0x3705ea73],ecx
  4124fa:	jnp    0x412511
  4124fc:	mov    al,0x3d
  4124fe:	add    dl,bl
  412500:	mov    ecx,0x59c9dc01
  412505:	fwait
  412506:	retf   
  412507:	(bad)  
  412508:	or     DWORD PTR [ebx+0x1a],esi
  41250b:	jnp    0x412584
  41250d:	shl    DWORD PTR [esi],1
  41250f:	sbb    eax,0xefe7cd48
  412514:	and    al,0xc7
  412516:	mov    bl,0x22
  412518:	dec    ebp
  412519:	stos   DWORD PTR es:[edi],eax
  41251a:	inc    ecx
  41251b:	popf   
  41251c:	pop    ebp
  41251d:	jmp    0xf114ca8
  412522:	in     eax,dx
  412523:	pop    es
  412524:	sub    esi,edi
  412526:	dec    edx
  412527:	lds    esi,FWORD PTR [ebp+eiz*4-0x22]
  41252b:	xchg   esp,eax
  41252d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41252e:	ins    DWORD PTR es:[edi],dx
  41252f:	sub    dh,al
  412531:	stos   BYTE PTR es:[edi],al
  412532:	daa    
  412533:	sub    cl,BYTE PTR [edi+ebp*4+0x1d]
  412537:	lods   eax,DWORD PTR ds:[esi]
  412538:	cld    
  412539:	sub    BYTE PTR [ecx],ch
  41253b:	mov    eax,ds:0xd5a14fa0
  412540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412541:	inc    ebp
  412542:	hlt    
  412543:	push   es
  412544:	adc    BYTE PTR ds:0x715bca67,cl
  41254a:	in     eax,0xfa
  41254c:	mov    ebx,0x8b9ad2f7
  412551:	xor    al,0xe0
  412553:	ss jmp 0x51d1:0x3ec91d50
  41255b:	jne    0x412578
  41255d:	cs cmp al,0x72
  412560:	div    BYTE PTR [ecx+eiz*2-0x40]
  412564:	cmp    BYTE PTR [ebp+0x2df16394],ch
  41256a:	xor    esi,esp
  41256c:	lahf   
  41256d:	add    DWORD PTR [ebx],edi
  41256f:	fwait
  412570:	cmp    eax,0x8be7af47
  412575:	sbb    ah,BYTE PTR [eax-0x14]
  412578:	push   edx
  412579:	jl     0x4125cb
  41257b:	test   DWORD PTR [ecx+0x1],0x972a2ba7
  412582:	psrld  mm6,QWORD PTR [edx]
  412585:	fisubr DWORD PTR [edx-0x6d30e1a4]
  41258b:	js     0x41251f
  41258d:	mov    al,0xf2
  41258f:	push   es
  412590:	and    eax,DWORD PTR [edi]
  412592:	mov    ah,0xc
  412594:	dec    esp
  412595:	int    0xd8
  412597:	inc    esp
  412598:	push   ecx
  412599:	push   edx
  41259a:	xor    cl,BYTE PTR [esi-0x4c]
  41259d:	das    
  41259e:	hlt    
  41259f:	lea    ebp,[ebp-0x3b712e54]
  4125a5:	dec    ebx
  4125a6:	jae    0x412578
  4125a8:	and    DWORD PTR [eax],0xffffffdf
  4125ab:	into   
  4125ac:	push   esp
  4125ad:	mov    gs,WORD PTR [edx+0x43]
  4125b0:	outs   dx,BYTE PTR ds:[esi]
  4125b1:	loop   0x4125dd
  4125b3:	dec    edi
  4125b4:	lods   eax,DWORD PTR ds:[esi]
  4125b5:	ins    DWORD PTR es:[edi],dx
  4125b6:	xchg   BYTE PTR gs:[ebp-0x2c8c9fcd],dl
  4125bd:	xor    al,0xbf
  4125bf:	sub    dh,BYTE PTR [edx+0x2]
  4125c2:	into   
  4125c3:	mov    cl,0x5b
  4125c5:	lock and DWORD PTR cs:[ebx-0x3e],ebx
  4125ca:	mov    edi,DWORD PTR [edi+0x40]
  4125cd:	mov    ah,0x41
  4125cf:	nop
  4125d0:	pop    edi
  4125d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125d2:	xor    BYTE PTR [ebx+0x223a8492],dh
  4125d8:	xlat   BYTE PTR ds:[ebx]
  4125d9:	jne    0x412607
  4125db:	js     0x412645
  4125dd:	xor    al,0xe6
  4125df:	or     eax,0xee682e2f
  4125e4:	cmp    BYTE PTR fs:[ebp+edx*1-0x44],cl
  4125e9:	ds fwait
  4125eb:	xor    al,0xfb
  4125ed:	and    ax,0x7cb6
  4125f1:	adc    eax,0x90c25baf
  4125f6:	pop    ebx
  4125f7:	push   es
  4125f8:	mov    DWORD PTR [edi+eax*8+0x7c654c15],esp
  4125ff:	adc    al,0x2c
  412601:	jb     0x4125c7
  412603:	imul   ebx,DWORD PTR [esi-0x7e4a24a9],0x77
  41260a:	out    0x1c,eax
  41260c:	xor    DWORD PTR [ebp+0x614f3051],edi
  412612:	sbb    BYTE PTR [edi],cl
  412614:	mov    ds:0x2ec73cd6,eax
  412619:	ja     0x4125a1
  41261b:	std    
  41261c:	hlt    
  41261d:	and    eax,0xd9ba57b5
  412622:	inc    esp
  412623:	cdq    
  412624:	adc    BYTE PTR [eax+0x14],ah
  412627:	enter  0x5ead,0x2e
  41262b:	cmp    al,al
  41262d:	and    eax,0x38fbccdd
  412632:	call   0xbc072c4d
  412637:	mov    ch,dl
  412639:	mov    BYTE PTR gs:[eax-0x57],ah
  41263d:	mov    bl,BYTE PTR [ebx+0x46]
  412640:	lock int 0x86
  412643:	adc    al,0x70
  412645:	jnp    0x412649
  412647:	pop    ecx
  412648:	push   0x78
  41264a:	lock daa 
  41264c:	adc    ecx,DWORD PTR [edx+0x1]
  41264f:	outs   dx,DWORD PTR ds:[esi]
  412650:	pop    esi
  412651:	leave  
  412652:	cdq    
  412653:	push   ds
  412654:	test   eax,0xb74a2964
  412659:	xor    al,0x4a
  41265b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41265c:	shr    DWORD PTR [ebp-0x3d787419],0x3b
  412663:	push   es
  412664:	loop   0x4125f1
  412666:	pop    ecx
  412667:	jle    0x412659
  412669:	sbb    edi,eax
  41266b:	mov    ebx,0x2f95da65
  412670:	mov    esp,0xdc699e4d
  412675:	sub    cl,cl
  412677:	bound  eax,QWORD PTR [edi+0x1dd2bc66]
  41267d:	ss call 0xa08fb897
  412683:	dec    ecx
  412684:	or     BYTE PTR [eax-0x433251c4],dl
  41268a:	lods   al,BYTE PTR ds:[esi]
  41268b:	ss int3 
  41268d:	rcl    dh,1
  41268f:	retf   0x2155
  412692:	test   al,0x27
  412694:	lods   eax,DWORD PTR ds:[esi]
  412695:	cmp    eax,0xc888b432
  41269a:	inc    ebp
  41269b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41269c:	idiv   DWORD PTR [ebx+esi*2+0xf]
  4126a0:	mov    bl,0xaa
  4126a2:	sub    eax,0x9cb03521
  4126a7:	or     BYTE PTR [edx+0x6a],bh
  4126aa:	fild   WORD PTR [ecx]
  4126ac:	adc    al,0xc4
  4126ae:	add    eax,0xeae1a07c
  4126b3:	xchg   ebx,eax
  4126b4:	cmc    
  4126b5:	int3   
  4126b6:	push   edi
  4126b7:	outs   dx,DWORD PTR ds:[esi]
  4126b8:	sbb    al,0xf4
  4126ba:	inc    eax
  4126bb:	xchg   edx,eax
  4126bc:	fwait
  4126bd:	outs   dx,DWORD PTR ds:[esi]
  4126be:	jnp    0x4126d7
  4126c0:	jno    0x412694
  4126c2:	mov    ecx,0x6c9ea111
  4126c7:	loop   0x412657
  4126c9:	mov    ebx,0x859e83e2
  4126ce:	mov    ss,edx
  4126d0:	push   edx
  4126d1:	add    ah,ah
  4126d3:	push   ecx
  4126d4:	dec    edx
  4126d5:	cmp    eax,0x533af754
  4126da:	loop   0x412667
  4126dc:	pop    ss
  4126dd:	sbb    eax,0xa6a63f12
  4126e2:	xchg   esp,eax
  4126e3:	call   0x8be:0xb7d95be3
  4126ea:	inc    edx
  4126eb:	nop
  4126ec:	mov    al,0x81
  4126ee:	mov    edx,0x25288ad7
  4126f3:	xchg   esp,eax
  4126f4:	stos   BYTE PTR es:[edi],al
  4126f5:	imul   ebx,DWORD PTR [edx+0x79b1d33f],0x5e12dab8
  4126ff:	push   cs
  412700:	(bad)  
  412702:	cs clc 
  412704:	bound  esp,QWORD PTR [edx+0x73]
  412707:	jns    0x41271c
  412709:	call   0xb553:0x310de564
  412710:	adc    dh,bh
  412712:	ss inc esp
  412714:	xchg   ebp,eax
  412715:	jle    0x4126c6
  412717:	add    BYTE PTR [ecx+0x4e],bl
  41271a:	or     bh,BYTE PTR [ecx-0x7]
  41271d:	mov    ch,0xa1
  41271f:	inc    ecx
  412720:	pop    esp
  412721:	mov    ah,0x7d
  412723:	xor    ch,bl
  412725:	cdq    
  412726:	and    al,0x8c
  412728:	adc    al,0xb5
  41272a:	or     cl,BYTE PTR [edx]
  41272c:	or     esp,DWORD PTR [edx-0xfa99133]
  412732:	hlt    
  412733:	jle    0x412708
  412735:	sub    BYTE PTR [eax],ch
  412737:	loope  0x4127af
  412739:	je     0x412713
  41273b:	cmp    esi,esi
  41273d:	lea    edx,[ebp-0xf]
  412740:	and    al,0x46
  412742:	inc    edx
  412743:	xor    eax,esp
  412745:	out    dx,eax
  412746:	scas   al,BYTE PTR es:[edi]
  412747:	out    0xb4,eax
  412749:	inc    BYTE PTR [edi]
  41274b:	movhps QWORD PTR [esi],xmm4
  41274e:	loopne 0x4127a8
  412750:	stc    
  412751:	mov    ds:0x431d00a0,eax
  412756:	pop    di
  412758:	jnp    0x41277c
  41275a:	dec    ebp
  41275b:	inc    esi
  41275c:	ins    DWORD PTR es:[edi],dx
  41275d:	pop    esi
  41275e:	test   BYTE PTR [eax-0x31afc34c],bh
  412764:	jae    0x4127b3
  412766:	mov    ebp,0xcbde93fc
  41276b:	cmp    BYTE PTR [esi+0x2e],ch
  41276e:	pop    ds
  41276f:	mov    dh,0x19
  412771:	ds jne 0x412726
  412774:	sbb    DWORD PTR [edx+0x5e6ff483],esp
  41277a:	pop    ebp
  41277b:	jb     0x41271a
  41277d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41277e:	or     DWORD PTR [eax-0x19],ecx
  412781:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412782:	sahf   
  412783:	inc    ebx
  412784:	arpl   WORD PTR [ebp+0x477c9056],cx
  41278a:	arpl   WORD PTR [ebp*2-0x47f39f3d],sp
  412791:	outs   dx,DWORD PTR ds:[esi]
  412792:	loop   0x4127e4
  412794:	(bad)  [ecx+edx*4]
  412797:	jmp    0x41273b
  412799:	mov    ds:0x8a80ecc8,eax
  41279e:	fisub  WORD PTR [edi-0x3fb06e]
  4127a4:	sub    BYTE PTR [edx],dl
  4127a6:	adc    BYTE PTR [edi],bh
  4127a8:	add    al,0x4
  4127aa:	push   0x14
  4127ac:	or     BYTE PTR [eax+ebp*4],0x46
  4127b0:	mov    esp,DWORD PTR [ecx+0x53ec5095]
  4127b6:	sub    BYTE PTR [ebx+0x752651f0],bh
  4127bc:	adc    esp,edi
  4127be:	ds mov cl,0xc1
  4127c1:	mov    al,ds:0x22769d49
  4127c6:	std    
  4127c7:	in     al,dx
  4127c8:	je     0x412774
  4127ca:	adc    al,0x43
  4127cc:	cdq    
  4127cd:	jnp    0x4127ef
  4127cf:	leave  
  4127d0:	and    DWORD PTR [edx+edx*8+0x1339c7fd],edi
  4127d7:	xchg   ebp,eax
  4127d8:	js     0x412849
  4127da:	ins    DWORD PTR es:[edi],dx
  4127db:	cmp    DWORD PTR [ebx],ecx
  4127dd:	push   esi
  4127de:	or     DWORD PTR [edi+0x685642af],eax
  4127e4:	xor    ch,dl
  4127e6:	mov    edi,0x35e79513
  4127eb:	push   esp
  4127ec:	jg     0x4127cb
  4127ee:	mov    ch,0x25
  4127f0:	ror    eax,1
  4127f2:	mov    ecx,0x163619de
  4127f7:	dec    ebp
  4127f8:	adc    DWORD PTR ds:0xe3cef5ea,0xaf6467eb
  412802:	adc    eax,0x3c9544e8
  412807:	pushf  
  412808:	jno    0x41278b
  41280a:	dec    eax
  41280b:	add    eax,0x7b80ca4f
  412810:	xor    eax,0x42ed7bc2
  412815:	or     edi,ebx
  412817:	(bad)  
  412818:	sbb    al,BYTE PTR [ebx+ebp*4+0xe]
  41281c:	inc    eax
  41281d:	cmp    BYTE PTR [ebx-0x43],dh
  412820:	out    0x59,al
  412822:	lds    ecx,FWORD PTR [edi+0x1e]
  412825:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412826:	mov    edx,gs
  412828:	in     eax,dx
  412829:	sub    ebx,ecx
  41282b:	mov    BYTE PTR [edi],bh
  41282d:	dec    ebx
  41282e:	loop   0x412862
  412830:	or     al,0x56
  412832:	in     eax,0xe0
  412834:	mov    cl,0xf3
  412836:	enter  0x22a5,0xea
  41283a:	sbb    DWORD PTR [edi+0x61],edx
  41283d:	call   FWORD PTR [ebp-0x36]
  412840:	mov    WORD PTR [edi-0x4b],?
  412843:	stos   BYTE PTR es:[edi],al
  412844:	dec    esp
  412845:	push   esp
  412846:	sbb    BYTE PTR [ecx],bh
  412848:	fisubr DWORD PTR [eax]
  41284a:	sti    
  41284b:	jns    0x4127d4
  41284d:	jl     0x4128b3
  41284f:	and    dh,dh
  412851:	imul   esp,edi,0x18f9b987
  412857:	popa   
  412858:	xor    ebp,DWORD PTR [esi-0x22931b4b]
  41285e:	cmp    BYTE PTR [esi+0x6b4f2ea7],0x1f
  412865:	and    DWORD PTR [ecx-0x46d15d37],0xdfd320fd
  41286f:	stc    
  412870:	mov    eax,0x4d959b80
  412875:	adc    BYTE PTR [ecx+0x69],0x0
  412879:	dec    eax
  41287a:	xchg   esi,eax
  41287b:	cmp    ebp,DWORD PTR [eax-0x6e]
  41287e:	lock data16 xlat BYTE PTR ds:[ebx]
  412881:	jl     0x412897
  412883:	sub    dl,BYTE PTR [edi+0x1dfc2d7f]
  412889:	xor    al,0xe4
  41288b:	pusha  
  41288c:	sbb    bh,BYTE PTR [edx-0x3208d8b3]
  412892:	dec    ebp
  412893:	adc    ch,BYTE PTR [ecx-0x5f]
  412896:	push   ebx
  412897:	adc    ebp,DWORD PTR [esi]
  412899:	nop
  41289a:	ja     0x4128d5
  41289c:	cld    
  41289d:	loopne 0x4128c6
  41289f:	sahf   
  4128a0:	mov    esi,0xf349a608
  4128a5:	pop    esi
  4128a6:	cmp    ecx,DWORD PTR [edi-0x1ee46f05]
  4128ac:	mov    cl,0xa0
  4128ae:	retf   
  4128af:	jle    0x4128b4
  4128b1:	mov    eax,ds:0xdc47d171
  4128b6:	bound  edi,QWORD PTR [esi+0x32]
  4128b9:	in     eax,dx
  4128ba:	test   DWORD PTR [eax-0x22e11c58],0xaa5a07db
  4128c4:	cdq    
  4128c5:	fstp   QWORD PTR [ecx+eiz*1-0x1c]
  4128c9:	mov    edx,DWORD PTR [edx-0x4e]
  4128cc:	jo     0x41291f
  4128ce:	xchg   BYTE PTR [esi+eax*4],bl
  4128d1:	cmp    esi,0x1854403a
  4128d7:	icebp  
  4128d8:	mov    eax,eax
  4128da:	out    dx,al
  4128db:	adc    eax,0x4d6fbd5
  4128e0:	adc    eax,eax
  4128e2:	popf   
  4128e3:	pop    ebx
  4128e4:	jne    0xece128dc
  4128ea:	add    eax,0xada8301a
  4128ef:	inc    ebp
  4128f0:	or     cl,BYTE PTR [edi]
  4128f2:	sub    BYTE PTR [ecx+esi*8],bh
  4128f5:	mov    ds:0x5ba2ddc3,eax
  4128fa:	xchg   edi,eax
  4128fb:	cli    
  4128fc:	xor    DWORD PTR [ecx+0x3f],0xffffffea
  412900:	push   ds
  412901:	jle    0x412949
  412903:	push   ds
  412904:	dec    edi
  412905:	and    DWORD PTR [edx+0x28d08ac0],0xefb9055f
  41290f:	inc    ecx
  412910:	and    ebx,DWORD PTR [esi+0x13f15315]
  412916:	lea    esp,[ebx]
  412918:	pop    ds
  412919:	mov    BYTE PTR [eax+0x7],bl
  41291c:	pop    es
  41291d:	(bad)  
  41291e:	push   ss
  41291f:	mov    ecx,0x24a0a6e3
  412924:	call   0x6d6e2a2f
  412929:	hlt    
  41292a:	ins    BYTE PTR es:[edi],dx
  41292b:	cmp    DWORD PTR [ecx],ebx
  41292d:	push   esp
  41292e:	add    ebx,DWORD PTR [edx]
  412930:	jp     0x412918
  412932:	(bad)  
  412933:	push   0x56
  412935:	push   0x7f
  412937:	into   
  412938:	sbb    DWORD PTR [esi],ecx
  41293a:	sub    BYTE PTR [ebx],bl
  41293c:	in     al,dx
  41293d:	neg    dl
  41293f:	dec    esi
  412940:	sub    edx,DWORD PTR [ecx]
  412942:	arpl   WORD PTR [ebx],dx
  412944:	idiv   DWORD PTR [ebp+0x566d566a]
  41294a:	cmp    edx,edx
  41294c:	and    dl,BYTE PTR [edi+0x263ac29f]
  412952:	pop    ds
  412953:	jnp    0x4129c2
  412955:	sbb    ah,dl
  412957:	repz mov edi,0x557b00ac
  41295d:	cmp    DWORD PTR gs:[edx+0x2c2d6a3],esi
  412964:	add    DWORD PTR [di-0xc2],eax
  412969:	and    al,0xf1
  41296b:	leave  
  41296c:	mov    ebp,0xcd5c3ddb
  412971:	pop    eax
  412972:	outs   dx,BYTE PTR ds:[esi]
  412973:	dec    ebx
  412974:	fsubr  DWORD PTR [eax-0xaf4b16c]
  41297a:	add    ecx,eax
  41297c:	cmp    eax,0x89855736
  412981:	pushf  
  412982:	adc    DWORD PTR [eax+0x11],edx
  412985:	in     eax,dx
  412986:	push   ebx
  412987:	std    
  412988:	push   esp
  412989:	mov    bl,0x23
  41298b:	mov    esp,0x67989928
  412990:	sti    
  412991:	jb     0x412992
  412993:	and    BYTE PTR [eax+eax*1+0x496b4d2],al
  41299a:	aaa    
  41299b:	fist   WORD PTR [edx]
  41299d:	inc    eax
  41299e:	pushf  
  41299f:	fisttp DWORD PTR [ebp-0xfbfa57c]
  4129a5:	push   esp
  4129a6:	ss loope 0x4129f6
  4129a9:	jb     0x412953
  4129ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129ac:	mov    ds:0xb320c23e,eax
  4129b1:	call   0x2e97:0x3402f8d3
  4129b8:	stos   DWORD PTR es:[edi],eax
  4129b9:	nop
  4129ba:	adc    BYTE PTR [ecx-0xb83e2ef],ch
  4129c0:	lock int 0xc6
  4129c3:	pop    ss
  4129c4:	jl     0x4129fb
  4129c6:	pop    eax
  4129c7:	loop   0x4129f7
  4129c9:	add    DWORD PTR [ecx+0x25e1600c],0xffffffa6
  4129d0:	mov    DWORD PTR [ebp+ebx*1-0x50],ebx
  4129d4:	les    eax,FWORD PTR [ebx+0x2490750a]
  4129da:	jae    0x41298f
  4129dc:	pop    ss
  4129dd:	xchg   BYTE PTR [edx-0xc],ch
  4129e0:	pop    edi
  4129e1:	retf   0x3b08
  4129e4:	dec    BYTE PTR [ebp+0x16781d95]
  4129ea:	cdq    
  4129eb:	loop   0x4129e1
  4129ed:	mov    eax,0x20dbe54b
  4129f2:	sahf   
  4129f3:	push   ss
  4129f4:	inc    esp
  4129f5:	add    eax,0x147d4dfd
  4129fa:	inc    eax
  4129fb:	outs   dx,BYTE PTR ds:[esi]
  4129fc:	dec    esp
  4129fd:	sti    
  4129fe:	shufps xmm7,XMMWORD PTR [ecx],0xc0
  412a02:	frndint 
  412a04:	mov    BYTE PTR [ecx+0x35330ae8],cl
  412a0a:	ficom  DWORD PTR [eax-0x12]
  412a0d:	mov    ebp,0x704da47b
  412a12:	dec    edi
  412a13:	fld    DWORD PTR [esi-0x2e]
  412a16:	push   ss
  412a17:	push   ecx
  412a18:	daa    
  412a19:	jp     0x4129ee
  412a1b:	clc    
  412a1c:	ins    BYTE PTR es:[edi],dx
  412a1d:	retf   
  412a1e:	or     al,0xd4
  412a21:	and    ecx,DWORD PTR [ebx-0x214d639]
  412a27:	jne    0x412a15
  412a29:	call   0x16e1:0x97e2afe3
  412a30:	ds xchg esp,eax
  412a32:	mov    cl,0xf4
  412a34:	xchg   esp,eax
  412a35:	dec    eax
  412a36:	shr    edx,1
  412a38:	mov    ch,0xde
  412a3a:	scas   eax,DWORD PTR es:[edi]
  412a3b:	xchg   ecx,eax
  412a3c:	mov    bl,0x81
  412a3e:	repnz jmp 0xcbee:0x13bc3d18
  412a46:	outs   dx,DWORD PTR ds:[esi]
  412a47:	scas   al,BYTE PTR es:[edi]
  412a48:	pop    ds
  412a49:	sbb    al,0x10
  412a4b:	por    mm1,QWORD PTR [ebx+0x1b]
  412a4f:	mov    ds:0xbabbaf22,al
  412a54:	aad    0xb
  412a56:	push   ebx
  412a57:	push   es
  412a58:	xchg   ebp,eax
  412a59:	push   ebp
  412a5a:	cmp    dl,BYTE PTR [ecx+0x59]
  412a5d:	lock push 0xffffffc5
  412a60:	xchg   esi,eax
  412a61:	xchg   ebp,eax
  412a62:	(bad)  [esi+0x28]
  412a65:	and    al,0x14
  412a67:	loope  0x412ae0
  412a69:	xor    eax,0xdb9618bf
  412a6e:	jle    0x412a92
  412a70:	cmp    edx,DWORD PTR [ebx-0x61]
  412a73:	test   eax,0xd2496202
  412a78:	pop    eax
  412a79:	bound  edi,QWORD PTR [esi+0x10a0a97c]
  412a7f:	xchg   BYTE PTR [esp+esi*2+0x64],al
  412a83:	mov    eax,ds:0x9a7863a2
  412a88:	in     al,0xe8
  412a8a:	repnz arpl WORD PTR [ebp+0x47],bp
  412a8e:	inc    DWORD PTR [ecx]
  412a90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a91:	in     al,0xcd
  412a93:	aaa    
  412a94:	adc    dl,bh
  412a96:	jb     0x412a50
  412a98:	and    al,0x7f
  412a9a:	jns    0x412a5f
  412a9c:	add    eax,edx
  412a9e:	and    dl,BYTE PTR [edi]
  412aa0:	dec    ecx
  412aa1:	js     0x412ac9
  412aa3:	mov    bh,0x7f
  412aa5:	dec    eax
  412aa6:	test   eax,0x781c89ee
  412aab:	xor    edi,DWORD PTR [eax-0xc1afbb7]
  412ab1:	jge    0x412af3
  412ab3:	scas   al,BYTE PTR es:[edi]
  412ab4:	mov    gs,eax
  412ab6:	jbe    0x412ac1
  412ab8:	scas   eax,DWORD PTR es:[edi]
  412ab9:	dec    ebp
  412aba:	inc    esi
  412abb:	jno    0x412a70
  412abd:	add    dl,BYTE PTR [ebx-0x27afad31]
  412ac3:	cld    
  412ac4:	push   ebp
  412ac5:	push   esi
  412ac6:	inc    ebp
  412ac7:	mov    ah,0xf8
  412ac9:	sti    
  412aca:	xchg   edx,eax
  412acb:	fnsave [edi+ecx*4+0x31b490dd]
  412ad2:	mov    dl,0x4a
  412ad4:	je     0x412af0
  412ad6:	jmp    0x412abe
  412ad8:	mov    cl,0x96
  412ada:	and    eax,0x5d7296f2
  412adf:	pop    ecx
  412ae0:	(bad)  
  412ae1:	call   0x1835bad3
  412ae6:	mov    ah,0x8
  412ae8:	repz adc eax,0xd178a9c3
  412aee:	in     eax,dx
  412aef:	sub    esi,edx
  412af1:	jb     0x412af4
  412af3:	inc    edx
  412af4:	pushf  
  412af5:	adc    edi,DWORD PTR ds:[ebx]
  412af8:	stos   BYTE PTR es:[edi],al
  412af9:	repz fucomi st,st(4)
  412afc:	lahf   
  412afd:	mov    edi,0x1f5cd080
  412b02:	push   0x5c1f6385
  412b07:	ins    BYTE PTR es:[edi],dx
  412b08:	lahf   
  412b09:	fs aaa 
  412b0b:	adc    al,0xb4
  412b0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b0e:	cs test eax,0xb8a68862
  412b14:	icebp  
  412b15:	mov    DWORD PTR [ecx],ebx
  412b17:	inc    ebp
  412b18:	xor    eax,DWORD PTR [eax-0x1bae877d]
  412b1e:	and    edx,DWORD PTR [edi-0x4fee8bf1]
  412b24:	(bad)  
  412b25:	sub    BYTE PTR [ebx],dl
  412b27:	stc    
  412b28:	inc    BYTE PTR fs:0xa5d511d2
  412b2f:	or     eax,0x211ffd21
  412b34:	rcl    BYTE PTR [eax-0x50],cl
  412b37:	fsub   QWORD PTR [ecx]
  412b39:	out    dx,al
  412b3a:	or     BYTE PTR [esp+eiz*2-0x71],bl
  412b3e:	jmp    0x412ba8
  412b40:	outs   dx,DWORD PTR ds:[esi]
  412b41:	cdq    
  412b42:	and    eax,0x28333321
  412b47:	inc    BYTE PTR [edx-0x389ebd86]
  412b4d:	aad    0x57
  412b4f:	jb     0x412b9e
  412b51:	pop    es
  412b52:	cmp    al,0xb2
  412b54:	mov    ebp,0x798b2ba3
  412b59:	imul   eax,DWORD PTR [edi],0x70
  412b5c:	fwait
  412b5d:	mov    ds:0x7e547e42,al
  412b62:	cmp    bl,al
  412b64:	sbb    BYTE PTR [esi-0x4f],ch
  412b67:	rol    BYTE PTR [edi],0xfe
  412b6a:	mov    ebp,DWORD PTR ds:0xfa7c1752
  412b70:	xchg   ecx,eax
  412b71:	cmc    
  412b72:	je     0x412afc
  412b74:	in     al,dx
  412b75:	fcom   DWORD PTR [eax-0x25]
  412b78:	imul   ebp,DWORD PTR [esi-0x71],0x52
  412b7c:	jp     0x412b4c
  412b7e:	pop    edx
  412b7f:	mov    bl,0xe7
  412b81:	dec    edx
  412b82:	dec    esp
  412b83:	shr    al,1
  412b85:	aad    0x87
  412b87:	push   0xa9b5a47c
  412b8c:	ja     0x412bf8
  412b8e:	or     BYTE PTR ss:[edi+0x6],ah
  412b92:	mov    ebp,esp
  412b94:	jnp    0x412bbc
  412b96:	daa    
  412b97:	xchg   esp,eax
  412b98:	aam    0xed
  412b9a:	xchg   BYTE PTR [eax+0x26],bh
  412b9d:	sbb    dh,0x68
  412ba0:	jmp    0x412bc5
  412ba2:	mov    ss,WORD PTR [eax]
  412ba4:	inc    esp
  412ba5:	test   BYTE PTR [edx+0x6b],al
  412ba8:	jns    0x412b93
  412baa:	jae    0x412bb7
  412bac:	add    al,0x99
  412bae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412baf:	jge    0x412c0e
  412bb1:	xlat   BYTE PTR ds:[ebx]
  412bb2:	setae  BYTE PTR [eax-0x73b207a0]
  412bb9:	dec    edi
  412bba:	dec    esp
  412bbb:	stc    
  412bbc:	sar    esi,0x31
  412bbf:	int3   
  412bc0:	adc    ecx,0x4d
  412bc3:	retf   
  412bc4:	mov    dl,0xd
  412bc6:	push   es
  412bc7:	mov    BYTE PTR [esi+0x56713b78],al
  412bcd:	add    DWORD PTR [eax+0x52e6693d],esp
  412bd3:	xchg   edx,eax
  412bd4:	xchg   ecx,eax
  412bd5:	shl    esi,cl
  412bd7:	mov    ebp,0x8eec90f8
  412bdc:	push   cs
  412bdd:	jae    0x412bdf
  412bdf:	fwait
  412be0:	jmp    0x351ed006
  412be5:	push   ds
  412be6:	push   DWORD PTR [esi+ebx*1-0x65]
  412bea:	xchg   DWORD PTR [ebx-0xb],esi
  412bed:	mov    ebx,0x5d8a5d12
  412bf2:	inc    edi
  412bf3:	outs   dx,DWORD PTR ds:[esi]
  412bf4:	pop    ds
  412bf5:	mov    BYTE PTR [ecx-0x3f],dl
  412bf8:	stc    
  412bf9:	mov    ecx,ecx
  412bfb:	dec    esp
  412bfc:	and    al,0x17
  412bff:	mov    ecx,0x67301936
  412c04:	mov    esi,0xca356385
  412c09:	cmc    
  412c0a:	ret    0xe324
  412c0d:	pop    ecx
  412c0e:	stos   DWORD PTR es:[edi],eax
  412c0f:	lar    ebp,bx
  412c12:	fdivr  st(1),st
  412c14:	cmp    DWORD PTR [ebx],esi
  412c16:	cmp    al,0x1a
  412c18:	add    dl,dl
  412c1a:	bound  ebx,QWORD PTR [edx]
  412c1c:	or     eax,0x96dc8868
  412c21:	inc    eax
  412c22:	mov    bh,BYTE PTR [edi+edx*1]
  412c25:	push   ebp
  412c26:	mov    ebx,0xee997cce
  412c2b:	pop    eax
  412c2c:	dec    edx
  412c2d:	pushf  
  412c2e:	and    al,0x56
  412c30:	sub    al,0xac
  412c32:	inc    ebp
  412c33:	xor    DWORD PTR [eax+edi*2-0x715ece00],ebp
  412c3a:	inc    ebp
  412c3b:	mov    al,0xbe
  412c3d:	fistp  DWORD PTR [edi-0x2e]
  412c40:	mov    ebp,cs
  412c42:	pop    eax
  412c43:	push   0xb4bb7f05
  412c48:	adc    bl,BYTE PTR [eax+eax*2-0x59]
  412c4c:	idiv   BYTE PTR [eax+0x38]
  412c4f:	into   
  412c50:	shl    BYTE PTR [eax+0x6527cc6d],0x42
  412c57:	mov    al,0xb4
  412c59:	call   0x779d:0x225fbf2a
  412c60:	cmp    DWORD PTR [ecx-0x44],ebp
  412c63:	mov    ah,0xcd
  412c65:	sti    
  412c66:	(bad)  
  412c67:	xor    ah,BYTE PTR [eax]
  412c69:	and    ebx,esi
  412c6b:	push   esp
  412c6c:	or     eax,DWORD PTR [eax-0x1f]
  412c6f:	pop    ebx
  412c70:	fstp   TBYTE PTR [ebp+0x3057fe17]
  412c76:	pop    eax
  412c77:	add    ebx,DWORD PTR [esi+ebx*1-0x5816dc88]
  412c7e:	and    esp,esp
  412c80:	lods   eax,DWORD PTR ds:[esi]
  412c81:	test   al,0xb4
  412c83:	xchg   ebx,eax
  412c84:	push   edi
  412c85:	test   eax,0x94af9d17
  412c8a:	adc    eax,0x4da76021
  412c8f:	xor    DWORD PTR [ebp-0x41],ecx
  412c92:	sub    eax,0xc7164d8d
  412c97:	jle    0x412d02
  412c99:	cmc    
  412c9a:	icebp  
  412c9b:	xchg   edx,eax
  412c9c:	in     eax,dx
  412c9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c9e:	mov    ds:0x6c1d19a9,eax
  412ca3:	pusha  
  412ca4:	int3   
  412ca5:	inc    edx
  412ca6:	cli    
  412ca7:	jp     0x412cd1
  412ca9:	cmp    eax,0x68d182e1
  412cae:	jno    0x412cbf
  412cb0:	or     ebp,DWORD PTR [edi+0x52]
  412cb3:	ret    
  412cb4:	dec    ecx
  412cb5:	into   
  412cb6:	inc    esp
  412cb7:	mov    ebx,0x9008ae3d
  412cbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cbd:	jecxz  0x412cb7
  412cbf:	std    
  412cc0:	sbb    eax,0x544d8ddb
  412cc5:	xor    DWORD PTR [eax+ecx*2+0x7d],0xc7e1ba97
  412ccd:	jecxz  0x412d17
  412ccf:	popw   ds
  412cd1:	cmp    DWORD PTR fs:[esi+0x67ff14f3],0x16
  412cd9:	and    bl,BYTE PTR [ebp-0x49f0f351]
  412cdf:	sbb    ecx,0xc3622622
  412ce5:	jle    0x412c9d
  412ce7:	out    0xdd,al
  412ce9:	(bad)  
  412ceb:	cmp    eax,0xa52fd741
  412cf0:	sub    BYTE PTR [ebp+0x75],cl
  412cf3:	xchg   ebp,eax
  412cf4:	xor    DWORD PTR ds:0x490748ac,edx
  412cfa:	js     0x412d11
  412cfc:	in     al,0x92
  412cfe:	xchg   edi,eax
  412cff:	jno    0x412d2e
  412d01:	fcom   DWORD PTR [eax]
  412d04:	mov    bh,0x34
  412d06:	jmp    0x412cc9
  412d08:	loop   0x412cfa
  412d0a:	shr    DWORD PTR [edi],cl
  412d0c:	shr    DWORD PTR [ebx-0x29],cl
  412d0f:	dec    ebp
  412d10:	pop    ecx
  412d11:	hlt    
  412d12:	sbb    DWORD PTR [esi+0x75],esp
  412d15:	imul   esi,esp,0x3608dd9a
  412d1b:	jnp    0x412d33
  412d1d:	and    BYTE PTR [edi-0x6e1a125],bl
  412d23:	jae    0x412d39
  412d25:	add    BYTE PTR [edx+edx*2-0x4f],0x54
  412d2a:	pop    ds
  412d2b:	add    bl,BYTE PTR [esp+ebx*2+0x74a7b9ff]
  412d32:	enter  0x188,0x6c
  412d36:	repnz pop ecx
  412d38:	pop    ecx
  412d39:	mov    edi,0xbd8bf877
  412d3e:	aad    0xea
  412d40:	jb     0x412d3c
  412d42:	dec    ebp
  412d43:	jecxz  0x412d35
  412d45:	aam    0x21
  412d47:	(bad)  
  412d48:	or     eax,0x677c73c4
  412d4d:	in     al,dx
  412d4e:	daa    
  412d4f:	and    ebx,DWORD PTR [edx]
  412d51:	test   DWORD PTR [ebp+0x11],ebx
  412d54:	out    dx,al
  412d55:	inc    edi
  412d56:	or     BYTE PTR [esi-0x3c7738f],bh
  412d5c:	aas    
  412d5d:	or     al,0x3
  412d5f:	mov    ch,0x26
  412d61:	push   0x36
  412d63:	(bad)  
  412d65:	cmp    eax,0x4febeb30
  412d6a:	jle    0x412d70
  412d6c:	fsub   st,st(1)
  412d6e:	ror    BYTE PTR [edi+0x2c],1
  412d71:	jns    0x412d6b
  412d73:	fwait
  412d74:	jmp    0xbca74296
  412d79:	(bad)  
  412d7b:	mov    al,ds:0x268134e6
  412d80:	stos   DWORD PTR es:[edi],eax
  412d81:	call   0x4744:0x22385748
  412d88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d89:	or     eax,0x7b59e924
  412d8e:	leave  
  412d8f:	adc    al,0xa
  412d91:	into   
  412d92:	mov    BYTE PTR [eax+edx*4-0x7debfa0a],bh
  412d99:	push   0xffffffc3
  412d9b:	aaa    
  412d9c:	mov    esi,0x43a8344a
  412da1:	or     BYTE PTR [eax+0x199e6c1a],dl
  412da7:	fstp   TBYTE PTR [ebx]
  412da9:	retf   0x1741
  412dac:	jmp    0x412dec
  412dae:	(bad)  
  412daf:	adc    BYTE PTR [ebx-0x48],dh
  412db2:	push   ds
  412db3:	and    DWORD PTR [ebx+edx*1-0x7c1c148d],esp
  412dba:	lods   eax,DWORD PTR ds:[esi]
  412dbb:	jmp    0xb6509c8a
  412dc0:	mov    dl,0x7e
  412dc2:	shl    BYTE PTR [eax],cl
  412dc4:	lock clc 
  412dc6:	fdivp  st(0),st
  412dc8:	mov    ds:0x64139861,al
  412dcd:	in     al,0x43
  412dcf:	add    eax,0xa28160f3
  412dd4:	pop    edx
  412dd5:	jae    0x412dbb
  412dd7:	shr    DWORD PTR [ecx-0x3e],0xb3
  412ddb:	jno    0x412d5d
  412ddd:	jmp    0x412e40
  412ddf:	push   0xffffff93
  412de1:	xchg   BYTE PTR [esi],al
  412de3:	retf   0xd6f
  412de6:	retf   
  412de7:	fisubr DWORD PTR ds:0xe68672e6
  412ded:	mov    cl,0x21
  412def:	mov    DWORD PTR [ecx+ebp*1+0x23],ebp
  412df3:	inc    ebx
  412df4:	mov    bl,0x95
  412df6:	mov    ds:0x6efba450,eax
  412dfb:	jg     0x412e42
  412dfd:	out    dx,al
  412dfe:	push   ss
  412dff:	imul   edx,DWORD PTR [ebp-0xd],0xffffffc5
  412e03:	daa    
  412e04:	xchg   ebp,eax
  412e05:	ds (bad) 
  412e07:	jne    0x412e3d
  412e09:	scas   eax,DWORD PTR es:[edi]
  412e0a:	dec    edi
  412e0b:	mov    eax,es
  412e0d:	push   es
  412e0e:	popa   
  412e0f:	fsubr  QWORD PTR [esi+0x3d]
  412e12:	fistp  QWORD PTR [ecx]
  412e14:	sbb    eax,0x749638b3
  412e19:	dec    eax
  412e1a:	dec    esi
  412e1b:	(bad)  
  412e1c:	ss mov ch,0x17
  412e1f:	pop    edi
  412e20:	das    
  412e21:	das    
  412e22:	pop    edx
  412e23:	std    
  412e24:	xchg   edx,eax
  412e25:	adc    BYTE PTR [ebx-0x36],al
  412e28:	jno    0x412e22
  412e2a:	xchg   DWORD PTR [ebx],ebp
  412e2c:	dec    esi
  412e2d:	sqrtps xmm7,XMMWORD PTR [ecx]
  412e30:	repz es push ebx
  412e33:	sbb    al,0x9b
  412e35:	jp     0x412ddf
  412e37:	je     0x412df6
  412e39:	into   
  412e3a:	jl     0x412e02
  412e3c:	cdq    
  412e3d:	sub    bh,bh
  412e3f:	jae    0x412e45
  412e41:	dec    edx
  412e42:	dec    edx
  412e43:	std    
  412e44:	mov    ecx,0xcbbfe41f
  412e49:	gs mov edx,0xab85b251
  412e4f:	mov    DWORD PTR [edi+ecx*2-0x3e],ebp
  412e53:	pop    eax
  412e54:	sti    
  412e55:	clc    
  412e56:	cmp    DWORD PTR [ebp+ecx*8+0x68870404],0xfad3cfbd
  412e61:	cli    
  412e62:	and    al,bh
  412e64:	push   ebp
  412e65:	xor    al,0x94
  412e67:	push   edi
  412e68:	sbb    DWORD PTR [ebx-0x3f3ce395],edx
  412e6e:	inc    edi
  412e6f:	xor    al,0x7e
  412e72:	iret   
  412e73:	(bad)  
  412e74:	jmp    FWORD PTR [esi+eax*4]
  412e77:	mov    dl,0x8e
  412e79:	dec    edi
  412e7a:	adc    DWORD PTR [ecx+ebx*4-0x45],0xfffffff4
  412e7f:	sbb    al,0xc6
  412e81:	scas   eax,DWORD PTR es:[edi]
  412e82:	adc    DWORD PTR [edi+0x1e],0x71
  412e86:	jno    0x412ec2
  412e88:	adc    al,0x72
  412e8a:	das    
  412e8b:	test   DWORD PTR [edi+0x41280ce0],edx
  412e91:	fwait
  412e92:	mov    ebp,0xf86ed8e2
  412e97:	and    dh,BYTE PTR [esi+0x46e6e77a]
  412e9d:	into   
  412e9e:	or     esp,DWORD PTR [eax+0x158016f0]
  412ea4:	add    eax,0x8082f613
  412ea9:	mov    eax,0xa96b7daf
  412eae:	sub    esp,eax
  412eb0:	dec    esp
  412eb1:	repz mov esp,0x5b91ce6e
  412eb7:	adc    dh,bh
  412eb9:	rcl    BYTE PTR [edx],cl
  412ebb:	adc    eax,0xdd6e7a59
  412ec0:	fidiv  DWORD PTR [edi+eax*1-0x28]
  412ec4:	mov    ebx,0x9fa0cf5
  412ec9:	mov    ebp,DWORD PTR [eax]
  412ecb:	pop    es
  412ecc:	in     eax,dx
  412ecd:	les    edx,FWORD PTR [esi-0x6a58185b]
  412ed3:	xor    esi,eax
  412ed5:	or     DWORD PTR [ebp-0x8121136],0x82563bff
  412edf:	xor    BYTE PTR [ebp+0x1ac6c309],dh
  412ee5:	or     al,0x3a
  412ee7:	add    al,0xa2
  412ee9:	rol    BYTE PTR [eax-0x23],0x9a
  412eed:	lea    eax,[eax+0x1646a67]
  412ef3:	sub    DWORD PTR [ebx],edi
  412ef5:	movaps xmm5,xmm2
  412ef8:	stos   DWORD PTR es:[edi],eax
  412ef9:	dec    ecx
  412efa:	inc    esp
  412efb:	rcl    DWORD PTR [esi+eiz*2-0x26a90ad7],1
  412f02:	out    0xd9,eax
  412f04:	dec    ebx
  412f05:	es ds xor eax,0xe50d47a9
  412f0c:	pusha  
  412f0d:	test   al,0x0
  412f0f:	lock mov esp,0xdee7d033
  412f15:	mov    WORD PTR [eax+0x73],gs
  412f18:	into   
  412f19:	jl     0x412f20
  412f1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f1c:	xchg   esi,eax
  412f1d:	cmp    eax,0x6b3f3c49
  412f22:	stos   BYTE PTR es:[edi],al
  412f23:	pushf  
  412f24:	sbb    esi,0x7c
  412f27:	or     al,0xa4
  412f29:	inc    esp
  412f2a:	iret   
  412f2b:	rcr    BYTE PTR [ebx+0x36],0xe6
  412f2f:	loope  0x412eb9
  412f31:	xchg   ecx,eax
  412f32:	stos   DWORD PTR es:[edi],eax
  412f33:	pop    esi
  412f34:	pop    ecx
  412f35:	xlat   BYTE PTR ds:[ebx]
  412f36:	dec    esp
  412f37:	aas    
  412f38:	inc    edi
  412f39:	(bad)  [eax-0xc]
  412f3c:	dec    esp
  412f3e:	jne    0x412ed1
  412f40:	cmp    BYTE PTR [eax+ecx*1+0x4790a7ec],0x24
  412f48:	mov    esi,0xb47469b1
  412f4d:	ror    esi,cl
  412f4f:	(bad)  
  412f50:	fidiv  DWORD PTR [edi+0x7047c01b]
  412f56:	push   cs
  412f57:	lods   al,BYTE PTR ds:[esi]
  412f58:	push   ecx
  412f59:	bound  ebp,QWORD PTR [ecx-0x4c]
  412f5c:	xchg   esp,eax
  412f5d:	popa   
  412f5e:	ret    0xabd5
  412f61:	or     al,0x63
  412f63:	rcr    bh,1
  412f65:	push   ss
  412f66:	pusha  
  412f67:	dec    ebp
  412f68:	arpl   WORD PTR [ecx+0x7],bp
  412f6b:	sub    DWORD PTR [esp+ebp*4+0x20],0xcf9f60f8
  412f73:	sbb    ebp,DWORD PTR [edi+0x38]
  412f76:	rol    DWORD PTR [ecx],1
  412f78:	jmp    0x89b:0xae21878b
  412f7f:	xrelease xchg BYTE PTR [ecx-0x80],dl
  412f83:	sbb    DWORD PTR [ecx],0xcf1144d4
  412f89:	jo     0x412f4c
  412f8b:	aaa    
  412f8c:	stos   DWORD PTR es:[edi],eax
  412f8d:	icebp  
  412f8e:	sbb    bl,BYTE PTR [esi-0x35874c3f]
  412f94:	and    cl,BYTE PTR ds:0x609e615e
  412f9a:	frstor [eax-0x15320b02]
  412fa0:	and    edi,ebx
  412fa2:	mov    al,ds:0xe75182fe
  412fa7:	dec    eax
  412fa8:	jle    0x413021
  412faa:	mov    eax,ds:0xc3137b93
  412faf:	jmp    FWORD PTR ds:0x91a8e840
  412fb5:	sbb    DWORD PTR [edi],eax
  412fb7:	inc    esp
  412fb8:	rcr    DWORD PTR [edi+0x19],0x10
  412fbc:	jp     0x413029
  412fbe:	leave  
  412fbf:	dec    esi
  412fc0:	or     ecx,DWORD PTR cs:[ebx+0x5b]
  412fc4:	lea    esp,[esi]
  412fc6:	lock xchg edi,eax
  412fc8:	retf   0x479b
  412fcb:	int    0xd3
  412fcd:	inc    esp
  412fce:	neg    DWORD PTR [eax+0x96c0274]
  412fd4:	sti    
  412fd5:	iret   
  412fd6:	idiv   DWORD PTR [edi]
  412fd8:	cmp    ecx,ebx
  412fda:	hlt    
  412fdb:	inc    edi
  412fdc:	push   ecx
  412fdd:	fs in  al,dx
  412fdf:	xor    ah,BYTE PTR [eax]
  412fe1:	hlt    
  412fe2:	jno    0x41302a
  412fe4:	mov    bl,0x39
  412fe6:	pusha  
  412fe7:	dec    esi
  412fe8:	(bad)  
  412fe9:	je     0x413045
  412feb:	cmp    al,0x4
  412fed:	xchg   esp,eax
  412fee:	out    0x76,eax
  412ff0:	ss jmp 0x1919fb2f
  412ff6:	pop    esp
  412ff7:	shl    DWORD PTR [edx+0x77],cl
  412ffa:	into   
  412ffb:	sbb    eax,0x4912697c
  413000:	xor    BYTE PTR [esi-0x3e1c5639],ah
  413006:	je     0x413077
  413008:	and    bh,ah
  41300a:	cld    
  41300b:	jp     0x412f95
  41300d:	(bad)  
  413010:	rol    BYTE PTR [eax+0x263f3fa7],cl
  413016:	sub    eax,0x4a905837
  41301b:	mov    ch,0xd0
  41301d:	loope  0x412fb9
  41301f:	je     0x413098
  413021:	push   0xf
  413023:	ins    DWORD PTR es:[edi],dx
  413024:	sti    
  413025:	int    0xb4
  413027:	ror    BYTE PTR [ebx-0x357d379c],cl
  41302d:	loope  0x4130a6
  41302f:	mov    bl,0xf2
  413031:	fldenv [esi+0x335e9575]
  413037:	fild   WORD PTR [ecx]
  413039:	or     dl,al
  41303b:	idiv   BYTE PTR [edx-0xecc99af]
  413041:	test   al,0x93
  413043:	mov    ah,0x81
  413045:	mov    ebp,0xcf928420
  41304a:	cld    
  41304b:	scas   al,BYTE PTR es:[edi]
  41304c:	cli    
  41304d:	or     BYTE PTR [ecx],dl
  41304f:	std    
  413050:	dec    edx
  413051:	test   al,0x27
  413053:	mov    edi,0x15fb175f
  413058:	out    dx,al
  413059:	fsubr  DWORD PTR [ebx-0x68]
  41305c:	das    
  41305d:	jmp    0x4bd7df0f
  413062:	lds    esp,FWORD PTR [ebx-0x32392461]
  413068:	mov    al,0x36
  41306a:	jno    0x413027
  41306c:	enter  0x37f0,0xce
  413070:	dec    ecx
  413071:	popf   
  413072:	pop    eax
  413073:	imul   ebx,eax,0x7a
  413076:	stos   BYTE PTR es:[edi],al
  413077:	cmp    esi,DWORD PTR [ebx]
  413079:	pop    ds
  41307a:	mov    ebp,0x84b7da7d
  41307f:	dec    edi
  413080:	ret    
  413081:	mov    WORD PTR [ecx],fs
  413083:	fucom  st(1)
  413085:	mov    WORD PTR [esp+ebx*1+0x24cde7a5],cs
  41308c:	lea    esi,[esi]
  41308e:	jno    0x413105
  413090:	cmp    DWORD PTR [edi],edi
  413092:	push   0x4e
  413094:	sub    dl,ch
  413096:	test   DWORD PTR [eax+edx*4-0x1],0x4b91ca78
  41309e:	dec    ebp
  41309f:	repz jg 0x413028
  4130a2:	push   ebp
  4130a3:	out    dx,eax
  4130a4:	repz into 
  4130a6:	pop    ecx
  4130a7:	les    eax,FWORD PTR [ebx+0x92c8577]
  4130ad:	arpl   ax,dx
  4130af:	xlat   BYTE PTR ds:[ebx]
  4130b0:	push   0x1f
  4130b2:	in     eax,dx
  4130b3:	xor    cl,bl
  4130b5:	call   edx
  4130b7:	mov    WORD PTR ds:0xe2136e85,gs
  4130bd:	pop    edi
  4130be:	sub    BYTE PTR [ecx-0x1b],dh
  4130c1:	daa    
  4130c2:	pop    es
  4130c3:	pop    edx
  4130c4:	dec    DWORD PTR [edx+0x564d768e]
  4130ca:	xchg   ah,ch
  4130cc:	push   ebx
  4130cd:	mov    bl,0x7b
  4130cf:	sub    DWORD PTR [ecx+0x6cf5dc53],edi
  4130d5:	push   eax
  4130d6:	jne    0x413141
  4130d8:	inc    eax
  4130d9:	inc    esi
  4130da:	(bad)  
  4130db:	shr    BYTE PTR [eax-0xc],1
  4130de:	pushf  
  4130df:	ja     0x4130cf
  4130e1:	or     edx,DWORD PTR [ebx+0x6]
  4130e4:	xchg   edx,eax
  4130e5:	pop    eax
  4130e6:	ret    0xfa66
  4130e9:	and    BYTE PTR [esi],bh
  4130eb:	pop    edx
  4130ec:	cmc    
  4130ed:	ficomp WORD PTR [edi-0x4]
  4130f0:	sub    al,0x6c
  4130f2:	push   ebx
  4130f3:	add    DWORD PTR [edx],edi
  4130f5:	sub    DWORD PTR [ebp-0x2b7021df],ebx
  4130fb:	add    DWORD PTR [ecx],eax
  4130fd:	add    ecx,DWORD PTR [ebx]
  4130ff:	pop    esp
  413100:	pop    esp
  413101:	xor    BYTE PTR [ebx-0x6e],ah
  413104:	(bad)  
  413105:	ins    BYTE PTR es:[edi],dx
  413106:	lods   al,BYTE PTR ds:[esi]
  413107:	jns    0x41309f
  413109:	dec    edx
  41310a:	mov    ebx,0xcfcd953e
  41310f:	jbe    0x4130c4
  413111:	and    ch,BYTE PTR [eax-0x3a350e25]
  413117:	pushf  
  413118:	ret    
  413119:	jno    0x41311d
  41311b:	loope  0x413161
  41311d:	xchg   esi,eax
  41311e:	pop    ds
  41311f:	pop    ss
  413120:	mov    ah,0x7
  413122:	ins    BYTE PTR es:[edi],dx
  413123:	jge    0x413107
  413125:	adc    al,0x26
  413127:	xor    cl,BYTE PTR [edx]
  413129:	leave  
  41312a:	fbstp  TBYTE PTR [ebp+0x1f]
  41312d:	mov    esp,0xdb20d100
  413132:	fnstsw WORD PTR [esi+0x2dc922b5]
  413138:	inc    ebx
  413139:	sub    BYTE PTR [esp+ecx*2],bh
  41313c:	rcr    BYTE PTR ds:0xcd918daf,1
  413142:	imul   ebx,edx,0xffffffdc
  413145:	xor    ah,0xb1
  413148:	(bad)  
  413149:	rcr    BYTE PTR [ebx+0x29dcc749],1
  41314f:	xlat   BYTE PTR ds:[ebx]
  413150:	push   edi
  413151:	jl     0x4131cc
  413153:	adc    BYTE PTR [ebx],bh
  413155:	out    0x99,eax
  413157:	mov    ebp,0x8a90edb4
  41315c:	fwait
  41315d:	scas   eax,DWORD PTR es:[edi]
  41315e:	mov    ch,0xdf
  413160:	mov    ebp,0x24ac4a3a
  413165:	xchg   DWORD PTR [edx],ebp
  413167:	les    ebp,FWORD PTR [edi]
  413169:	lahf   
  41316a:	jmp    0xd6ea:0x3f8658c5
  413171:	xchg   edi,eax
  413172:	mov    DWORD PTR [edi+0x2d],eax
  413175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413176:	sar    DWORD PTR [ecx-0x57],0xb4
  41317a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41317b:	in     al,0x73
  41317d:	ret    0x415c
  413180:	call   0x4272:0xd09c5c3d
  413187:	retf   
  413188:	pop    eax
  413189:	clc    
  41318a:	lods   al,BYTE PTR ds:[esi]
  41318b:	xchg   DWORD PTR [ebp-0xa],edi
  41318e:	or     DWORD PTR [ebx+0x4262d401],ecx
  413194:	pop    es
  413195:	jge    0x413149
  413197:	pusha  
  413198:	dec    ebp
  413199:	cld    
  41319a:	and    al,0x8
  41319c:	fiadd  WORD PTR es:[esp+edx*4+0x18]
  4131a1:	adc    eax,0x380c593a
  4131a6:	xchg   esp,eax
  4131a7:	push   edx
  4131a8:	xchg   ebx,eax
  4131a9:	sbb    eax,0x2d9bfecb
  4131ae:	dec    edi
  4131af:	test   eax,0xa2b8ac86
  4131b4:	in     eax,0xf7
  4131b6:	setne  BYTE PTR [esp+esi*1-0x65]
  4131bb:	das    
  4131bc:	loopne 0x4131d5
  4131be:	popa   
  4131bf:	shl    al,1
  4131c1:	sub    BYTE PTR [ecx-0xb535a7f],bl
  4131c7:	mov    ebp,0xbf10d059
  4131cc:	aas    
  4131cd:	sub    DWORD PTR ds:0x4dee65c3,ebp
  4131d3:	shl    BYTE PTR [eax+ebx*2+0x386d69bc],cl
  4131da:	mov    eax,ds:0x8280a6e4
  4131df:	inc    ebx
  4131e0:	outs   dx,BYTE PTR ds:[esi]
  4131e1:	add    al,0x40
  4131e3:	outs   dx,BYTE PTR ss:[esi]
  4131e5:	sbb    eax,edi
  4131e7:	dec    eax
  4131e8:	jno    0x41321d
  4131ea:	add    dl,BYTE PTR [eax]
  4131ec:	jmp    0x760b:0xbcc6480a
  4131f3:	aas    
  4131f4:	mov    al,ds:0xf2786df0
  4131f9:	pusha  
  4131fa:	out    dx,eax
  4131fb:	xlat   BYTE PTR ds:[ebx]
  4131fc:	rcr    ah,1
  4131fe:	les    edx,FWORD PTR [ecx*2-0x6c9c2892]
  413205:	(bad)
  413208:	dec    esp
  413209:	push   eax
  41320a:	or     eax,0xfdb49e39
  41320f:	pop    es
  413210:	ja     0x413221
  413212:	jns    0x4131d5
  413214:	xchg   edx,eax
  413215:	and    al,0x2b
  413217:	lods   eax,DWORD PTR ds:[esi]
  413218:	test   al,0x31
  41321a:	mov    ebp,0xaca41656
  41321f:	and    eax,0xd54a2433
  413224:	lods   al,BYTE PTR ds:[esi]
  413225:	fnstenv [ebp+0x9b0f795]
  41322b:	jo     0x4131f1
  41322d:	xor    al,0x27
  41322f:	sbb    eax,0xbf89871d
  413234:	jno    0x4132aa
  413236:	je     0x41323e
  413238:	pop    ss
  413239:	cmp    esi,ebp
  41323b:	jae    0x4132a5
  41323d:	mov    ch,0xac
  41323f:	jne    0x41324a
  413241:	lock mov bl,0x46
  413244:	inc    edx
  413245:	lds    ebp,FWORD PTR [ebx]
  413247:	add    BYTE PTR [edx+0x20],dh
  41324a:	cmp    BYTE PTR [edx-0x370a780f],bh
  413250:	push   ss
  413251:	sti    
  413252:	mov    cl,0x44
  413254:	mov    ds:0xecfbec0,eax
  413259:	div    DWORD PTR [ecx]
  41325b:	pop    es
  41325c:	outs   dx,DWORD PTR ds:[esi]
  41325d:	and    dl,BYTE PTR [edx]
  41325f:	pop    edx
  413260:	sti    
  413261:	rcr    DWORD PTR [ecx+0x14],cl
  413264:	cmc    
  413265:	xor    al,0xb1
  413267:	mov    esi,0x6726eaf8
  41326c:	xchg   ecx,eax
  41326e:	push   esp
  41326f:	mov    WORD PTR [edi-0x7364db38],fs
  413275:	inc    edx
  413276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413277:	xchg   esp,eax
  413278:	sbb    BYTE PTR [edi+0x28347ab4],bh
  41327e:	mov    ds:0xc6447c26,eax
  413283:	push   0xffffffea
  413285:	mov    edx,DWORD PTR [ecx-0x9fcf3f0]
  41328b:	hlt    
  41328c:	xlat   BYTE PTR ds:[ebx]
  41328d:	gs ret 
  41328f:	dec    esp
  413290:	rcr    BYTE PTR [ebx+0x4b],1
  413293:	cli    
  413294:	cmp    BYTE PTR [ebx-0x5c],0xf5
  413298:	push   esp
  413299:	inc    ecx
  41329a:	jo     0x413262
  41329c:	xor    al,0x84
  41329e:	test   eax,0x1d8acb41
  4132a3:	ret    0x97a7
  4132a6:	fsubr  DWORD PTR [esi]
  4132a8:	retf   0xaa80
  4132ab:	jno    0x4132b8
  4132ad:	lahf   
  4132ae:	jae    0x413235
  4132b0:	add    al,0xa9
  4132b2:	xor    DWORD PTR [ecx+0x37],ecx
  4132b5:	sbb    eax,0x821d548b
  4132ba:	or     ebp,edx
  4132bc:	ror    esp,cl
  4132be:	xchg   ebx,eax
  4132bf:	adc    eax,0xfe54cc56
  4132c4:	lds    ebp,FWORD PTR [esi]
  4132c6:	push   edx
  4132c7:	push   edi
  4132c8:	fild   DWORD PTR [esi]
  4132ca:	xchg   esp,eax
  4132cb:	xchg   BYTE PTR [ecx+0x4c],bl
  4132ce:	mov    esi,0xb50263a2
  4132d3:	push   edi
  4132d4:	inc    DWORD PTR [eax]
  4132d6:	psubsb mm5,mm7
  4132d9:	in     eax,0xdd
  4132db:	xchg   edi,edx
  4132dd:	les    ecx,FWORD PTR [ebx+eiz*2]
  4132e0:	fisub  WORD PTR [edi+0x22]
  4132e3:	repnz loope 0x41335b
  4132e6:	out    dx,eax
  4132e7:	and    al,BYTE PTR [eax]
  4132e9:	sbb    dl,bh
  4132eb:	push   0x6c76b9e8
  4132f0:	xlat   BYTE PTR ds:[ebx]
  4132f1:	push   0x77f38c81
  4132f6:	addr16 (bad) 
  4132f9:	enter  0x1ea5,0x37
  4132fd:	adc    BYTE PTR ds:0x97aed84c,dl
  413303:	sub    al,0xda
  413305:	sub    DWORD PTR [edx+0x5e],ebp
  413308:	mov    al,ds:0xae8b2489
  41330d:	lods   al,BYTE PTR ss:[esi]
  41330f:	push   eax
  413310:	mov    DWORD PTR [eax-0x73],ebx
  413313:	mov    ?,WORD PTR [edx-0x3f]
  413316:	dec    esp
  413317:	cli    
  413318:	pop    edx
  413319:	and    BYTE PTR [edi],bh
  41331b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41331c:	or     bh,ah
  41331e:	dec    ebp
  41331f:	pop    eax
  413320:	nop
  413321:	out    dx,al
  413322:	and    ebp,DWORD PTR [esi-0x5db8e00b]
  413328:	dec    esi
  413329:	or     al,ch
  41332b:	out    0xc3,eax
  41332d:	out    0x59,al
  41332f:	and    DWORD PTR [eax*1-0x5b7c7984],edx
  413336:	push   ebx
  413337:	cld    
  413338:	aas    
  413339:	jo     0x4132ef
  41333b:	xchg   ah,dl
  41333d:	push   ss
  41333e:	mov    ds:0x4b6151db,al
  413343:	(bad)  
  413345:	pop    edx
  413346:	ja     0x41336c
  413348:	outs   dx,BYTE PTR ds:[esi]
  413349:	stos   DWORD PTR es:[edi],eax
  41334a:	fs (bad) 
  41334c:	and    eax,0xa22176d5
  413351:	and    al,0x94
  413353:	imul   BYTE PTR [ecx-0x17]
  413356:	sub    eax,0xdfc76160
  41335b:	mov    BYTE PTR [edi],ch
  41335d:	pop    esi
  41335e:	repnz icebp 
  413360:	jmp    0x413359
  413362:	adc    edi,DWORD PTR [ebx]
  413364:	das    
  413365:	jge    0x4133b5
  413367:	push   es
  413368:	call   0x6dfce4df
  41336d:	sbb    ebp,eax
  41336f:	mov    edi,0x1f9d46af
  413374:	neg    BYTE PTR [ecx-0x23]
  413377:	mov    edx,0x17b098a3
  41337c:	stos   BYTE PTR es:[edi],al
  41337d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41337e:	push   cs
  41337f:	(bad)  
  413380:	loop   0x4133e6
  413382:	in     eax,0x50
  413384:	fist   WORD PTR [esi-0x1a3eb7dc]
  41338a:	dec    edi
  41338b:	pusha  
  41338c:	in     eax,0xec
  41338e:	int3   
  41338f:	(bad)  [ebp-0x74363b0e]
  413395:	xchg   edi,eax
  413396:	xor    DWORD PTR [ecx],esi
  413398:	sub    ecx,DWORD PTR [eax+0x23]
  41339b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41339c:	int    0x7f
  41339e:	repnz inc ebp
  4133a0:	dec    ebx
  4133a1:	pusha  
  4133a2:	cld    
  4133a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133a4:	ret    
  4133a5:	fld    QWORD PTR [eax-0x58]
  4133a8:	out    dx,al
  4133a9:	fidiv  DWORD PTR [ebx]
  4133ab:	dec    eax
  4133ac:	test   al,0xca
  4133ae:	into   
  4133af:	pop    edx
  4133b0:	mov    ebx,0x19ec6a54
  4133b5:	pusha  
  4133b6:	pop    esi
  4133b7:	ins    DWORD PTR es:[edi],dx
  4133b8:	aas    
  4133b9:	cmp    ebp,DWORD PTR [eax-0x4f522b3c]
  4133bf:	pushf  
  4133c0:	jns    0x4133ce
  4133c2:	pop    esi
  4133c3:	stos   BYTE PTR es:[edi],al
  4133c4:	repz (bad) 
  4133c6:	(bad)  
  4133c7:	inc    ebp
  4133c8:	test   DWORD PTR [eax],esi
  4133ca:	xchg   ebp,eax
  4133cb:	call   0xc929:0x3d4023a
  4133d2:	fistp  WORD PTR [ebx]
  4133d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133d5:	aam    0x22
  4133d7:	xchg   DWORD PTR [ebx],esi
  4133d9:	mov    edx,0x17d686c4
  4133de:	xchg   BYTE PTR [esi+0x53a1bacb],dh
  4133e4:	imul   DWORD PTR [ecx+0xa]
  4133e7:	stos   BYTE PTR es:[edi],al
  4133e8:	pop    es
  4133e9:	hlt    
  4133ea:	mov    cl,0x7a
  4133ec:	lods   al,BYTE PTR ds:[esi]
  4133ed:	outs   dx,DWORD PTR ds:[esi]
  4133ee:	jg     0x4133ec
  4133f0:	sahf   
  4133f1:	push   ss
  4133f2:	inc    esi
  4133f3:	daa    
  4133f4:	sar    ecx,1
  4133f6:	data16 jge 0x41342f
  4133f9:	pop    ebx
  4133fa:	repz call 0x6be4:0x499e
  413401:	pop    ecx
  413402:	pop    ds
  413403:	scas   al,BYTE PTR es:[edi]
  413404:	adc    edx,DWORD PTR [eax]
  413406:	add    BYTE PTR [edi+0x22284e00],ah
  41340c:	mov    edx,0x8cbd216a
  413411:	jae    0x41341c
  413413:	sub    ah,BYTE PTR [ebx]
  413415:	mov    eax,ds:0xb712b323
  41341a:	les    esp,FWORD PTR [edi]
  41341c:	pushf  
  41341d:	add    edx,DWORD PTR ds:0xafd3bf56
  413423:	cmp    bl,BYTE PTR [ebp-0x46891790]
  413429:	test   eax,0x5fe4f502
  41342e:	aam    0xaa
  413430:	xor    al,0x9e
  413432:	jne    0x413441
  413434:	xchg   edx,eax
  413435:	imul   esi,DWORD PTR [ebp-0x3b],0x93e43fb6
  41343c:	enter  0x83d2,0x10
  413440:	std    
  413441:	push   0xffffffc5
  413443:	inc    edi
  413444:	xor    DWORD PTR [esi-0x423db033],eax
  41344a:	cmp    bh,ah
  41344c:	fmul   QWORD PTR [edx-0x38]
  41344f:	ins    BYTE PTR es:[edi],dx
  413450:	ror    DWORD PTR [esi-0x4ddb57f9],1
  413456:	(bad)  
  413457:	or     DWORD PTR [ebp+0x7b18a3c3],edi
  41345d:	dec    esi
  41345e:	lea    eax,[edx]
  413460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413461:	repnz fld QWORD PTR [eax+ebp*8-0xc]
  413466:	or     eax,0x4208be0d
  41346b:	dec    eax
  41346c:	push   edx
  41346d:	loop   0x4134c0
  41346f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413470:	ror    BYTE PTR ds:0x78b7ca85,0x83
  413477:	pop    esi
  413478:	clc    
  413479:	mul    dl
  41347b:	sub    ecx,ebp
  41347d:	xchg   DWORD PTR [eax+0x21],esi
  413480:	dec    ecx
  413481:	and    eax,0x7beb5b93
  413486:	xchg   esi,esi
  413488:	std    
  413489:	cmp    ebp,DWORD PTR [ecx+0x5a]
  41348c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41348d:	data16 (bad) 
  41348f:	jmp    0x4124:0xafb06b9e
  413496:	adc    DWORD PTR [edi-0x11e59da],0xed5a281d
  4134a0:	push   edx
  4134a1:	xchg   esi,eax
  4134a2:	pop    ebp
  4134a3:	pop    ss
  4134a4:	adc    ecx,DWORD PTR [esi]
  4134a6:	jbe    0x4134c2
  4134a8:	pusha  
  4134a9:	or     DWORD PTR [esp+ebx*2+0x1095207d],ecx
  4134b0:	or     dl,dl
  4134b2:	and    al,0xb3
  4134b4:	push   edi
  4134b5:	aam    0xe1
  4134b7:	sbb    BYTE PTR [edi+edi*4-0x6c577a3e],0xd8
  4134bf:	(bad)  
  4134c0:	or     al,0x8b
  4134c2:	aas    
  4134c3:	pop    eax
  4134c4:	in     eax,dx
  4134c5:	call   0x7dc5db8d
  4134ca:	inc    edx
  4134cb:	xor    al,0x13
  4134cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134ce:	mov    dl,0x92
  4134d0:	cmp    BYTE PTR [edx-0x53fc6cea],dh
  4134d6:	sahf   
  4134d7:	adc    BYTE PTR [ecx+0x7071be04],0x4d
  4134de:	mov    ds:0x1c4ca57b,eax
  4134e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134e4:	(bad)  
  4134e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134e7:	cmp    cl,BYTE PTR ds:0xc3971d79
  4134ed:	lea    esi,[ebx+0x0]
  4134f0:	iret   
  4134f1:	fsubr  QWORD PTR [edi]
  4134f3:	xchg   ebx,eax
  4134f4:	dec    ebp
  4134f5:	in     al,dx
  4134f6:	push   ecx
  4134f7:	je     0x4134a3
  4134f9:	xor    BYTE PTR [ebx-0x22802aec],bh
  4134ff:	ins    BYTE PTR es:[edi],dx
  413500:	shl    BYTE PTR [ecx+0x7f],cl
  413503:	daa    
  413504:	(bad)  
  413505:	pop    ds
  413506:	fdivr  DWORD PTR [edi+0x32d92a1c]
  41350c:	lds    esp,FWORD PTR [edx-0x5a]
  41350f:	psadbw mm6,QWORD PTR [ebx+0x4156187c]
  413516:	and    dx,WORD PTR [si-0x37]
  41351b:	rol    BYTE PTR [eax],0xc7
  41351e:	xchg   esp,eax
  41351f:	retf   
  413520:	or     bl,BYTE PTR [esi+0x6e]
  413523:	test   bl,al
  413525:	sub    dh,BYTE PTR [ebx-0x23445bbd]
  41352b:	push   edi
  41352c:	(bad)  [edx]
  41352e:	dec    ebp
  41352f:	arpl   WORD PTR [ecx],cx
  413531:	cmp    DWORD PTR [edx-0x72137125],eax
  413537:	cld    
  413538:	inc    edi
  413539:	sub    dh,dh
  41353b:	mov    al,0xdb
  41353d:	lock lock push edi
  413540:	loop   0x41355f
  413542:	call   FWORD PTR [ebp+0x2f]
  413545:	mov    BYTE PTR [edi],0x31
  413548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413549:	jmp    0x7fa3e8c3
  41354e:	pop    ebp
  41354f:	add    eax,0x239ac03e
  413554:	inc    esp
  413555:	pushf  
  413556:	in     al,0xc6
  413558:	sub    BYTE PTR [ebx-0x5f],0x74
  41355c:	add    BYTE PTR [esi-0x613baec],bl
  413562:	shr    bh,cl
  413564:	popf   
  413565:	loop   0x413565
  413567:	pop    eax
  413568:	in     eax,0x7d
  41356a:	adc    BYTE PTR [eax+ecx*4],dh
  41356d:	gs (bad) 
  41356f:	sbb    al,0x4a
  413571:	bound  edx,QWORD PTR [edx-0x36]
  413574:	or     ebx,DWORD PTR [esi+0x14]
  413577:	fistp  WORD PTR [edi-0x30]
  41357a:	cs jns 0x413540
  41357d:	into   
  41357e:	fcmovnb st,st(2)
  413580:	xor    eax,edi
  413582:	or     al,0x98
  413584:	data16 sub cl,bl
  413587:	dec    eax
  413588:	mov    al,ds:0x1f357129
  41358d:	sub    DWORD PTR [edi],0x91600af5
  413593:	jp     0x4135a6
  413595:	in     eax,0xe8
  413597:	add    al,0xe6
  413599:	and    DWORD PTR [eax+0x2a],0xffffffe9
  41359d:	pop    edx
  41359e:	out    0x19,eax
  4135a0:	imul   ebp,DWORD PTR cs:[ebp-0x51],0x60
  4135a5:	je     0x413623
  4135a7:	iret   
  4135a8:	xchg   edx,eax
  4135a9:	fadd   DWORD PTR [edx]
  4135ab:	hlt    
  4135ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135ad:	mov    eax,ds:0x296a6527
  4135b2:	pop    esp
  4135b3:	cmp    bl,bl
  4135b5:	sub    edx,DWORD PTR [eax+0x2d]
  4135b8:	inc    eax
  4135b9:	loopne 0x413590
  4135bb:	test   al,0x7e
  4135bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135be:	aam    0x4c
  4135c0:	inc    esi
  4135c1:	lock pop esp
  4135c3:	or     al,0xab
  4135c5:	mov    al,0xc8
  4135c7:	in     eax,0x34
  4135c9:	xchg   DWORD PTR [eax],ebp
  4135cb:	push   edi
  4135cc:	xor    esi,DWORD PTR ds:0x4af7147e
  4135d2:	loop   0x413591
  4135d4:	add    ch,BYTE PTR [edi-0x21]
  4135d7:	lock mov dl,0x24
  4135da:	das    
  4135db:	push   es
  4135dc:	xlat   BYTE PTR ds:[ebx]
  4135dd:	std    
  4135de:	cmp    al,0x5d
  4135e0:	fwait
  4135e1:	rcr    DWORD PTR fs:[eax+0x44],cl
  4135e5:	fisttp WORD PTR gs:[edi-0x12]
  4135e9:	pop    es
  4135ea:	and    cl,BYTE PTR [bp-0x3e]
  4135ee:	and    al,0x18
  4135f0:	pop    ebp
  4135f1:	lock neg BYTE PTR [edx]
  4135f4:	out    dx,al
  4135f5:	mov    edx,0x8be85584
  4135fa:	out    0xdf,eax
  4135fc:	and    DWORD PTR [ebp-0x4357b3e1],edx
  413602:	rcr    DWORD PTR [ebp-0x40231e32],cl
  413608:	iret   
  413609:	lea    edx,ds:0xd916f263
  41360f:	and    eax,0xd1abfa95
  413614:	lea    esp,[edx+eax*8-0x69b5a52]
  41361b:	pop    esp
  41361c:	sar    ebp,cl
  41361e:	xchg   edi,eax
  41361f:	jno    0x41361a
  413621:	push   esi
  413622:	jno    0x413651
  413624:	pusha  
  413625:	ret    0x132c
  413628:	add    ebx,ecx
  41362a:	test   ch,bh
  41362c:	ins    BYTE PTR es:[edi],dx
  41362d:	mov    eax,ds:0x4b4e5ff5
  413632:	mov    ah,0x6e
  413634:	pop    ss
  413635:	dec    edi
  413636:	lods   eax,DWORD PTR ds:[esi]
  413637:	sbb    al,0x78
  413639:	adc    DWORD PTR [eax],esi
  41363b:	clc    
  41363c:	jmp    esi
  41363e:	push   0x4435b7a0
  413643:	and    DWORD PTR [eax+0x4c],ebx
  413646:	lods   eax,DWORD PTR ds:[esi]
  413647:	dec    edi
  413648:	prefetchwt1 (bad)
  413649:	or     eax,0x3086bd1
  41364e:	inc    ecx
  41364f:	pusha  
  413650:	push   0x719cdcd4
  413655:	jp     0x4135f8
  413657:	mov    esi,0x95b87502
  41365c:	pop    ss
  41365d:	in     eax,dx
  41365e:	iret   
  41365f:	xor    al,0xe
  413661:	shl    BYTE PTR [esi+0x5008a970],0xb9
  413668:	shr    DWORD PTR [ecx-0xe],cl
  41366b:	js     0x41363e
  41366d:	xlat   BYTE PTR ds:[ebx]
  41366e:	push   0x3c
  413670:	sub    esp,DWORD PTR ds:[ebx+0x6be288b2]
  413677:	std    
  413678:	rcl    DWORD PTR [eax],1
  41367a:	mov    dl,BYTE PTR [ecx-0x1b]
  41367d:	pop    ebp
  41367e:	sbb    al,0x64
  413680:	push   ebp
  413681:	xor    esi,DWORD PTR [edx+0x5f]
  413684:	btr    edx,edx
  413687:	cwde   
  413688:	hlt    
  413689:	jns    0x413706
  41368b:	fwait
  41368c:	pop    eax
  41368d:	ja     0x413689
  41368f:	sar    BYTE PTR [esi-0x4ac41558],cl
  413695:	mov    ch,0xa9
  413697:	inc    ebx
  413698:	push   edx
  413699:	mov    ds:0x7c9dc740,al
  41369e:	xor    DWORD PTR [esi+0x4b80a064],ebx
  4136a4:	sbb    DWORD PTR [edi],ecx
  4136a6:	in     al,dx
  4136a7:	enter  0xe82c,0xac
  4136ab:	int    0x97
  4136ad:	je     0x41366b
  4136af:	cwde   
  4136b0:	aam    0x89
  4136b2:	aad    0x32
  4136b4:	cmp    ebx,DWORD PTR [esi+0x2254f51d]
  4136ba:	jns    0x4136ed
  4136bc:	shr    DWORD PTR [edi+0x3cfc0f27],0xc0
  4136c3:	mov    ebp,0x2a6302f4
  4136c8:	and    ch,BYTE PTR [ecx-0x2e39ec56]
  4136ce:	cvtpi2ps xmm5,mm2
  4136d1:	pop    ebp
  4136d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136d3:	retf   0xd15b
  4136d6:	sub    ah,0xd9
  4136d9:	fistp  WORD PTR [ebp+0x1a]
  4136dc:	outs   dx,DWORD PTR ds:[esi]
  4136dd:	icebp  
  4136de:	scas   eax,DWORD PTR es:[edi]
  4136df:	aaa    
  4136e0:	outs   dx,BYTE PTR ds:[esi]
  4136e1:	xchg   ebx,eax
  4136e2:	sar    DWORD PTR [ebx-0x5f4cd75e],0x31
  4136e9:	and    edi,DWORD PTR [ebp+0x57]
  4136ec:	hlt    
  4136ed:	or     DWORD PTR [ecx+0x26e4586e],ebp
  4136f3:	(bad)  
  4136f5:	lods   al,BYTE PTR ds:[esi]
  4136f6:	out    0x93,al
  4136f8:	or     edi,ebp
  4136fa:	(bad)  
  4136fb:	fistp  WORD PTR [edx-0x3e]
  4136fe:	xchg   ebp,eax
  4136ff:	aaa    
  413700:	sub    ecx,DWORD PTR cs:[edx]
  413703:	xchg   ebx,eax
  413704:	pusha  
  413705:	add    dh,bh
  413707:	cwde   
  413708:	add    ebp,DWORD PTR [edx+0x2]
  41370b:	mov    edx,0x58aee5a9
  413710:	(bad)  
  413711:	scas   al,BYTE PTR es:[edi]
  413712:	call   0x759dc0cb
  413717:	fidivr DWORD PTR [edx-0x54]
  41371a:	mov    ds:0xcd5719e7,al
  41371f:	sub    BYTE PTR [ebp+0x18],dh
  413722:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413724:	jno    0x413797
  413726:	mov    esp,0x7dd12e95
  41372b:	loope  0x413766
  41372d:	ds jge 0x4136ca
  413730:	adc    edx,DWORD PTR [ebp+0x1bc2ae4c]
  413736:	js     0x413792
  413738:	int3   
  413739:	enter  0x3036,0x45
  41373d:	sub    bl,0x3d
  413740:	add    eax,0x1e4e2088
  413745:	mov    cl,0xfd
  413747:	push   es
  413748:	adc    al,0x83
  41374a:	loope  0x41378c
  41374c:	scas   eax,DWORD PTR es:[edi]
  41374d:	mov    esi,0x60d08e44
  413752:	add    al,0xe
  413754:	mov    ds:0xcd489f31,eax
  413759:	test   DWORD PTR [eax-0x6d],edx
  41375c:	jo     0x413764
  41375e:	push   ds
  41375f:	stc    
  413760:	jle    0x4136f2
  413762:	mov    BYTE PTR [esi],cl
  413764:	or     DWORD PTR [edx],esi
  413766:	imul   ebp,DWORD PTR [edi],0xffffff81
  413769:	scas   eax,DWORD PTR es:[edi]
  41376a:	jle    0x413701
  41376c:	jnp    0x41372c
  41376e:	push   0x9d67e908
  413773:	int3   
  413774:	push   cs
  413775:	push   0x42
  413777:	out    0xf6,eax
  413779:	loopne 0x41377a
  41377b:	das    
  41377c:	push   esp
  41377d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41377e:	sbb    al,0xd5
  413780:	das    
  413781:	cld    
  413782:	push   ds
  413783:	outs   dx,DWORD PTR ds:[esi]
  413784:	outs   dx,DWORD PTR ds:[esi]
  413785:	push   0xffffffc1
  413787:	jmp    FWORD PTR [ecx]
  413789:	mov    dh,0x2f
  41378b:	pop    ds
  41378c:	xor    DWORD PTR [ebx],ecx
  41378e:	cs out 0xe4,al
  413791:	jmp    0xad6c:0xe4f57953
  413798:	pushf  
  413799:	lods   al,BYTE PTR ds:[esi]
  41379a:	std    
  41379b:	mov    esp,DWORD PTR [esi-0x3]
  41379e:	push   ds
  41379f:	rol    DWORD PTR [edx+0x30],0x1
  4137a3:	pop    edi
  4137a4:	or     al,dh
  4137a6:	mov    BYTE PTR [ebx-0x74f9b556],al
  4137ac:	sar    BYTE PTR [esi-0x2dd487b0],1
  4137b2:	sbb    eax,DWORD PTR [ebx+0x457f70d6]
  4137b8:	pushf  
  4137b9:	shl    BYTE PTR [esi-0x40],0xbc
  4137bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137be:	add    eax,0x88707fdf
  4137c3:	pop    eax
  4137c4:	adc    al,0x45
  4137c6:	mov    ecx,0x79c1e487
  4137cb:	cmc    
  4137cc:	popa   
  4137cd:	test   esp,eax
  4137cf:	cdq    
  4137d0:	lods   eax,DWORD PTR ds:[esi]
  4137d1:	mov    ebp,0xa8114fb1
  4137d6:	aas    
  4137d7:	sbb    eax,0x5203fd3a
  4137dc:	jae    0x413838
  4137de:	in     eax,0x11
  4137e0:	add    al,0x77
  4137e2:	in     al,dx
  4137e3:	fsubr  DWORD PTR [eax]
  4137e5:	push   edi
  4137e6:	lods   eax,DWORD PTR ds:[esi]
  4137e7:	mov    eax,ds:0x1ddd0
  4137ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137ed:	retf   
  4137ee:	stos   BYTE PTR es:[edi],al
  4137ef:	pusha  
  4137f0:	es ret 
  4137f2:	outs   dx,BYTE PTR ds:[esi]
  4137f3:	adc    BYTE PTR [eax-0x5a],bh
  4137f6:	sbb    DWORD PTR [ecx],esi
  4137f8:	or     dl,BYTE PTR [esi+0x76]
  4137fb:	(bad)  
  4137fc:	cs push cs
  4137fe:	clc    
  4137ff:	enter  0xe826,0xc9
  413803:	jge    0x41387c
  413805:	stos   BYTE PTR es:[edi],al
  413806:	stc    
  413807:	jne    0x4137ff
  413809:	adc    BYTE PTR [edi+ebp*8],dl
  41380c:	jl     0x4137ab
  41380e:	les    ecx,FWORD PTR [edx+0x4ec61c9b]
  413814:	in     eax,0xd1
  413816:	xchg   edi,eax
  413817:	push   es
  413818:	jecxz  0x413801
  41381a:	retf   
  41381b:	and    eax,0x7a89c5d7
  413820:	push   esp
  413821:	push   edi
  413822:	mov    cl,0xe8
  413824:	push   0xffffff92
  413826:	lahf   
  413827:	lods   al,BYTE PTR ds:[esi]
  413828:	les    ecx,FWORD PTR [ebx-0xc]
  41382b:	xchg   BYTE PTR [edi+ecx*1],cl
  41382e:	es xchg bh,bl
  413831:	bound  eax,QWORD PTR [edx]
  413833:	mov    dh,0x4d
  413835:	jge    0x41388d
  413837:	mov    ebx,0x78eb86d7
  41383c:	mov    ebp,DWORD PTR [ebx-0x3a8efdf2]
  413842:	cld    
  413843:	or     al,0x90
  413845:	pop    esi
  413846:	and    eax,0x918d8983
  41384b:	cmp    al,0x92
  41384d:	mov    dh,0x8b
  41384f:	xor    eax,DWORD PTR [edx+0x3b5d6063]
  413855:	jnp    0x413893
  413857:	fs pop ebp
  413859:	xor    al,0x8b
  41385b:	xchg   edi,eax
  41385c:	mov    ah,BYTE PTR [ecx]
  41385e:	push   0x302171e9
  413863:	pop    ecx
  413864:	into   
  413865:	push   ebp
  413866:	shl    DWORD PTR [edi+0x18],cl
  413869:	jmp    0xf00205c2
  41386e:	mov    ebx,0xeb08de52
  413873:	pushf  
  413874:	sub    al,0xbe
  413876:	jp     0x41382b
  413878:	xlat   BYTE PTR ds:[ebx]
  413879:	mov    ah,0x84
  41387b:	pop    edi
  41387c:	data16 aam 0xef
  41387f:	cmp    BYTE PTR [edx+0x16],bl
  413882:	and    ebp,DWORD PTR [edx]
  413884:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413885:	mov    al,ds:0x627df3dd
  41388a:	mov    edx,0xa0a9f727
  41388f:	sti    
  413890:	push   ss
  413891:	mov    bl,0x58
  413893:	ins    BYTE PTR es:[edi],dx
  413894:	int    0x84
  413896:	mov    esi,0x65eb08a7
  41389b:	pop    es
  41389c:	mov    dl,0xf0
  41389e:	shr    DWORD PTR [edi-0x29260a39],0x25
  4138a5:	int    0x92
  4138a7:	or     eax,0x3cf0254f
  4138ac:	popa   
  4138ad:	add    al,0x4d
  4138af:	popa   
  4138b0:	rcr    BYTE PTR [ebp+0x4c],cl
  4138b3:	nop
  4138b4:	retf   
  4138b5:	adc    DWORD PTR [esi+esi*2-0x3],0x6c
  4138ba:	mov    ds:0x5ccdc014,eax
  4138bf:	jnp    0x413920
  4138c1:	sub    BYTE PTR [edi],al
  4138c3:	push   ecx
  4138c4:	pusha  
  4138c5:	push   ebx
  4138c6:	sub    al,0xfa
  4138c8:	adc    al,0x25
  4138ca:	in     eax,dx
  4138cb:	out    dx,al
  4138cc:	outs   dx,DWORD PTR ds:[esi]
  4138cd:	xor    ecx,esi
  4138cf:	xlat   BYTE PTR ds:[ebx]
  4138d0:	sbb    eax,0x71c3a264
  4138d5:	(bad)  
  4138d6:	jecxz  0x41385e
  4138d8:	(bad)  
  4138d9:	psubd  mm3,mm3
  4138dc:	push   ecx
  4138dd:	loopne 0x413900
  4138df:	jne    0x4138a4
  4138e1:	cmp    DWORD PTR [ecx-0x6420d737],edx
  4138e7:	retf   0x9147
  4138ea:	jo     0x413875
  4138ec:	pop    edi
  4138ed:	lahf   
  4138ee:	int3   
  4138ef:	retf   0x8cf2
  4138f2:	jns    0x4138e2
  4138f4:	fst    DWORD PTR [esi]
  4138f6:	jno    0x4138d6
  4138f8:	add    ebx,DWORD PTR [esi+0x48]
  4138fb:	xchg   esi,eax
  4138fc:	imul   esp,edi,0x2738146d
  413902:	push   ebp
  413903:	xchg   DWORD PTR [edi-0x4d6be871],ecx
  413909:	mov    ss,WORD PTR [edi]
  41390b:	imul   BYTE PTR ds:0x93ba9016
  413911:	out    0x8e,eax
  413913:	shl    BYTE PTR [esi-0x4f01b73e],1
  413919:	sub    BYTE PTR [eax+ebp*2],bh
  41391c:	icebp  
  41391d:	sahf   
  41391e:	fdiv   QWORD PTR [esi+edx*1+0x76]
  413922:	sar    DWORD PTR [ebp-0x46],1
  413925:	or     BYTE PTR [ecx-0x55],cl
  413928:	imul   eax,DWORD PTR [esi+0x5f1421fb],0x1f
  41392f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413930:	aad    0xbf
  413932:	sub    ecx,DWORD PTR [ebx-0x6740ef61]
  413938:	push   ss
  413939:	pop    es
  41393a:	or     BYTE PTR [edi],ch
  41393c:	iret   
  41393d:	fs jg  0x413982
  413940:	mov    ecx,0x2eece42e
  413945:	cwde   
  413946:	pop    eax
  413947:	xchg   BYTE PTR [esi-0x62],bh
  41394a:	mov    ebp,0x3da8000
  41394f:	(bad)  
  413950:	(bad)  
  413951:	xor    al,0x14
  413953:	aad    0x9
  413955:	jmp    0x4eb:0xbd2b56a2
  41395c:	jp     0x4138e0
  41395e:	mov    ch,0x23
  413960:	and    ebx,esi
  413962:	hlt    
  413963:	jle    0x41391c
  413965:	fucomi st,st(4)
  413967:	inc    edx
  413968:	push   eax
  413969:	mov    BYTE PTR [ebp+0x33ff4fce],bl
  41396f:	iret   
  413970:	lea    ebx,[ecx]
  413972:	outs   dx,DWORD PTR ds:[esi]
  413973:	sahf   
  413974:	xlat   BYTE PTR ds:[ebx]
  413975:	mov    bl,0x28
  413977:	or     eax,0x5970336
  41397c:	adc    BYTE PTR [ebx-0x3c],ch
  41397f:	call   0x5a88:0x8be4ae0
  413986:	rol    DWORD PTR [edx+0x6b27c070],cl
  41398c:	sub    eax,0x47803a2e
  413991:	out    dx,al
  413992:	dec    ecx
  413993:	fidiv  WORD PTR [eax-0x7d057ba9]
  413999:	fs out dx,eax
  41399b:	das    
  41399c:	retf   
  41399d:	pop    esi
  41399e:	jb     0x4139f8
  4139a0:	cmp    al,0x7
  4139a2:	sbb    al,0xf2
  4139a4:	mov    gs,WORD PTR [edx]
  4139a6:	add    DWORD PTR [edi],edx
  4139a8:	scas   al,BYTE PTR es:[edi]
  4139a9:	jbe    0x41394d
  4139ab:	and    ch,0x40
  4139ae:	hlt    
  4139af:	and    ebx,edx
  4139b1:	fwait
  4139b2:	scas   eax,DWORD PTR es:[edi]
  4139b3:	and    ch,cl
  4139b5:	rcr    BYTE PTR [eax+0x41],cl
  4139b8:	pop    es
  4139b9:	inc    esp
  4139ba:	pop    ebx
  4139bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139bc:	cmp    bh,BYTE PTR ds:0x80727d94
  4139c2:	dec    ebp
  4139c3:	inc    ebp
  4139c4:	cmp    BYTE PTR [esi],dl
  4139c6:	scas   al,BYTE PTR es:[edi]
  4139c7:	daa    
  4139c8:	or     ebp,eax
  4139ca:	adc    ecx,ebx
  4139cc:	ja     0x4139b8
  4139ce:	stos   DWORD PTR es:[edi],eax
  4139cf:	push   esi
  4139d0:	sbb    BYTE PTR [ebx+0x59],dh
  4139d3:	data16 in al,dx
  4139d5:	cld    
  4139d6:	ss shl cl,cl
  4139d9:	inc    ecx
  4139da:	stos   BYTE PTR es:[edi],al
  4139db:	add    eax,0xfd1f6686
  4139e0:	lock xchg edi,eax
  4139e2:	pop    eax
  4139e3:	sub    al,BYTE PTR [eax]
  4139e5:	push   edx
  4139e6:	pop    ebp
  4139e7:	ror    DWORD PTR [esi],0x15
  4139ea:	data16 std 
  4139ec:	fild   WORD PTR [eax+0x2c3ad9bc]
  4139f2:	test   eax,0xc830f192
  4139f7:	cli    
  4139f8:	les    esp,FWORD PTR [ebp+eax*1+0x57]
  4139fc:	and    eax,0x19dc0db1
  413a01:	ror    BYTE PTR [ebp-0x65],1
  413a04:	xchg   edi,eax
  413a05:	int    0x1b
  413a07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a08:	out    0x94,al
  413a0a:	sub    bl,ah
  413a0c:	rcl    BYTE PTR [edx-0x2d199ed2],0xdf
  413a13:	out    0xa,eax
  413a15:	jmp    0x34726512
  413a1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a1b:	leave  
  413a1c:	jmp    0x26379cf1
  413a21:	ret    0x9438
  413a24:	lds    ecx,FWORD PTR [eax]
  413a26:	shl    eax,1
  413a28:	test   DWORD PTR [edi],0x1d2f09bd
  413a2e:	mov    esi,0xe98750be
  413a33:	fs sbb al,0xa1
  413a36:	cmp    eax,0x7f100fd3
  413a3b:	js     0x413a77
  413a3d:	xor    edi,edi
  413a3f:	shl    DWORD PTR [ecx-0x71],1
  413a42:	shl    DWORD PTR [ecx],0x38
  413a45:	jp     0x413a73
  413a47:	enter  0x8155,0xec
  413a4b:	cld    
  413a4c:	inc    edx
  413a4d:	xlat   BYTE PTR ds:[ebx]
  413a4e:	sbb    DWORD PTR ds:0xbb0822be,ebp
  413a54:	sahf   
  413a55:	das    
  413a56:	dec    eax
  413a57:	mov    ecx,0x312b5f84
  413a5c:	out    0xcc,al
  413a5e:	(bad)  
  413a60:	js     0x413a46
  413a62:	sbb    DWORD PTR ds:0x67f15eb2,eax
  413a68:	jae    0x413a32
  413a6a:	dec    DWORD PTR [ebp+0x60]
  413a6d:	sub    eax,0xec2582bd
  413a72:	or     dh,BYTE PTR [ebx]
  413a74:	pop    ss
  413a75:	daa    
  413a76:	dec    ecx
  413a77:	ret    0x9ba6
  413a7a:	inc    ebx
  413a7b:	or     DWORD PTR [edi],edi
  413a7d:	sar    BYTE PTR [esi],0x81
  413a80:	sub    ecx,DWORD PTR [esi]
  413a82:	in     al,0x18
  413a84:	adc    eax,0xfc27ba66
  413a89:	sar    eax,cl
  413a8b:	dec    edi
  413a8c:	fwait
  413a8d:	sbb    DWORD PTR [esp+eax*1-0x4fe4629b],edi
  413a94:	(bad)  
  413a96:	(bad)  
  413a98:	inc    ebp
  413a99:	ins    BYTE PTR es:[edi],dx
  413a9a:	and    BYTE PTR [ebx],dl
  413a9c:	loop   0x413b0d
  413a9e:	jle    0x413a87
  413aa0:	jp     0x413ad5
  413aa2:	dec    edi
  413aa3:	test   BYTE PTR [eax+0x8eb9c1f],bh
  413aa9:	test   eax,0xc5738502
  413aae:	(bad)  
  413aaf:	mov    ebx,0x393223b2
  413ab4:	repnz hlt 
  413ab6:	popf   
  413ab7:	ins    BYTE PTR es:[edi],dx
  413ab8:	sub    edi,ecx
  413aba:	js     0x413b28
  413abc:	push   cs
  413abd:	push   esp
  413abe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413abf:	fbld   TBYTE PTR [ecx]
  413ac1:	nop
  413ac2:	dec    esi
  413ac3:	xchg   ebx,eax
  413ac4:	not    BYTE PTR [edx+edi*8-0x48]
  413ac8:	cmp    al,bl
  413aca:	test   BYTE PTR [eax-0x38a567f8],0x7
  413ad1:	pop    eax
  413ad2:	xchg   ebx,eax
  413ad3:	add    eax,0xc000a72b
  413ad8:	aas    
  413ad9:	into   
  413ada:	push   ebp
  413adb:	iret   
  413adc:	mov    DWORD PTR [edi+esi*8-0x47202d30],edi
  413ae3:	jl     0x413ae5
  413ae5:	pop    ebx
  413ae6:	ss jmp 0x413a84
  413ae9:	mov    DWORD PTR [bp-0x28],0x179f5939
  413af1:	pop    es
  413af2:	adc    al,0x6d
  413af4:	push   ds
  413af5:	mov    esi,0x68cf44f8
  413afa:	jbe    0x413abc
  413afc:	mov    WORD PTR [edi+0x16],ds
  413aff:	jo     0x413adf
  413b01:	dec    ebp
  413b02:	mov    ebx,0x1a757b9d
  413b07:	push   esi
  413b08:	std    
  413b09:	fldenv [esi]
  413b0b:	jmp    DWORD PTR [ebx+0x39460103]
  413b11:	cmp    al,0x29
  413b13:	sbb    eax,0xf4ca4b74
  413b18:	fidiv  DWORD PTR [edi+0x5d]
  413b1b:	scas   al,BYTE PTR es:[edi]
  413b1c:	or     al,0x4a
  413b1e:	mov    al,0x5d
  413b20:	jae    0x413b42
  413b22:	cmp    ebx,DWORD PTR [ecx+ecx*8+0x5acae83a]
  413b29:	in     al,dx
  413b2a:	pop    ds
  413b2b:	in     eax,0x54
  413b2d:	stos   DWORD PTR es:[edi],eax
  413b2e:	jp     0x413af6
  413b30:	addr16 mov ebp,0xcf955ed6
  413b36:	les    ebx,FWORD PTR [eax]
  413b38:	in     al,0x33
  413b3a:	fstp   QWORD PTR [ebp+0x13]
  413b3d:	mov    ds:0x413ddbc7,al
  413b42:	bound  ecx,QWORD PTR [eax-0x7d9f7a9d]
  413b48:	pop    ecx
  413b49:	(bad)  
  413b4a:	jecxz  0x413ae3
  413b4c:	clc    
  413b4d:	rcr    dh,1
  413b4f:	popa   
  413b50:	mov    eax,0xb676266a
  413b55:	xlat   BYTE PTR ds:[ebx]
  413b56:	sub    DWORD PTR gs:[edi],eax
  413b59:	stos   DWORD PTR es:[edi],eax
  413b5a:	sub    BYTE PTR [edx-0x44b98fdb],bh
  413b60:	xor    al,0xa5
  413b62:	pusha  
  413b63:	mov    ecx,0x91912708
  413b68:	(bad)  
  413b69:	adc    eax,ecx
  413b6b:	cld    
  413b6c:	(bad)  
  413b6d:	and    bh,BYTE PTR cs:[esp+ebp*2-0x61c4a351]
  413b75:	retf   0xf03e
  413b78:	jmp    0x57ba9740
  413b7d:	xor    dl,dl
  413b7f:	lock dec ebx
  413b81:	in     eax,dx
  413b82:	lods   al,BYTE PTR ds:[esi]
  413b83:	(bad)  
  413b84:	sub    eax,0xacd5120d
  413b89:	cwde   
  413b8a:	fld    TBYTE PTR [edx+edi*1]
  413b8d:	mov    cs,WORD PTR [eax]
  413b8f:	mov    esi,0x4c66aa37
  413b94:	sahf   
  413b95:	and    eax,0x2c554829
  413b9a:	enter  0xeab9,0x2c
  413b9e:	jg     0x413b7c
  413ba0:	mov    al,ds:0x113df6a5
  413ba5:	mov    ebp,0xc931218
  413baa:	repz mov bl,0x59
  413bad:	ffree  st(0)
  413baf:	aas    
  413bb0:	leave  
  413bb1:	sbb    bh,BYTE PTR [edx]
  413bb3:	repz js 0x413c22
  413bb6:	loop   0x413b3b
  413bb8:	sub    bh,ch
  413bba:	adc    ch,dh
  413bbc:	cdq    
  413bbd:	data16 jno 0x413b42
  413bc0:	lds    esi,FWORD PTR [esi]
  413bc2:	outs   dx,BYTE PTR ds:[esi]
  413bc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bc4:	sbb    eax,0x35086133
  413bc9:	data16 shl BYTE PTR [ebp-0x29f32079],1
  413bd0:	outs   dx,BYTE PTR ds:[esi]
  413bd1:	fistp  DWORD PTR [eax]
  413bd3:	nop
  413bd4:	push   0x53d552fc
  413bd9:	dec    ebp
  413bda:	push   eax
  413bdb:	or     eax,0xd29731eb
  413be0:	push   esp
  413be1:	jg     0x413b89
  413be3:	push   eax
  413be4:	adc    eax,0xfef83a5f
  413be9:	jp     0x413bc4
  413beb:	pop    edx
  413bec:	cmc    
  413bed:	xor    cl,cl
  413bef:	cmp    BYTE PTR [eax],dh
  413bf1:	mov    cl,0x68
  413bf3:	jmp    0xd378918f
  413bf8:	std    
  413bf9:	and    BYTE PTR ds:0xd4bdfc22,ah
  413bff:	sbb    esi,0x64
  413c02:	push   cs
  413c03:	and    ch,cl
  413c05:	sub    al,al
  413c07:	je     0x413baa
  413c09:	xchg   esp,eax
  413c0a:	push   0x8dbaff39
  413c0f:	push   cs
  413c10:	ss lock mov ebp,eax
  413c14:	lds    ebx,FWORD PTR [esp+edi*1]
  413c17:	or     al,BYTE PTR [eax-0x1c]
  413c1a:	jne    0x413c47
  413c1c:	xor    ah,BYTE PTR ds:0x34e5f03b
  413c22:	ins    DWORD PTR es:[edi],dx
  413c23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c24:	xchg   ebp,eax
  413c25:	mov    dl,0xb1
  413c27:	jmp    0x109202d2
  413c2c:	jmp    0xfdf3:0x2a0d0434
  413c33:	jne    0x413c48
  413c35:	inc    esp
  413c36:	(bad)  ds:0xfa794c5f
  413c3c:	(bad)  
  413c3e:	cli    
  413c3f:	fisttp QWORD PTR [edx+0x2d1b8cbd]
  413c45:	mov    ds:0xb154ff4c,eax
  413c4a:	cdq    
  413c4b:	repnz stos DWORD PTR es:[edi],eax
  413c4d:	cli    
  413c4e:	scas   eax,DWORD PTR es:[edi]
  413c4f:	repnz inc DWORD PTR ss:[ebx-0x10]
  413c54:	jo     0x413c43
  413c56:	pop    ebx
  413c57:	icebp  
  413c58:	adc    al,0x24
  413c5a:	pop    ds
  413c5b:	ds pop esi
  413c5d:	ret    
  413c5e:	fwait
  413c5f:	sbb    BYTE PTR [eax],0x74
  413c62:	inc    edi
  413c63:	add    al,0x43
  413c65:	gs ins DWORD PTR es:[edi],dx
  413c67:	into   
  413c68:	lahf   
  413c69:	fistp  DWORD PTR [edi+0x6c888541]
  413c6f:	lods   eax,DWORD PTR ds:[esi]
  413c71:	add    al,0xfa
  413c73:	outs   dx,DWORD PTR ds:[esi]
  413c74:	jb     0x413ca1
  413c76:	mov    ecx,DWORD PTR [ecx-0x2d]
  413c79:	pushf  
  413c7a:	dec    eax
  413c7b:	mov    ds:0x8ac05d12,eax
  413c80:	in     al,0x8b
  413c82:	sbb    dh,BYTE PTR [edi]
  413c84:	loop   0x413cfd
  413c86:	out    0x5f,al
  413c88:	es dec eax
  413c8a:	loop   0x413c99
  413c8c:	dec    eax
  413c8d:	cs jg  0x413cbc
  413c90:	push   ss
  413c91:	nop
  413c92:	mov    ch,BYTE PTR [edx-0x42dae1b3]
  413c98:	push   ds
  413c99:	jnp    0x413c7b
  413c9b:	data16 or al,0x32
  413c9e:	sbb    al,0xe4
  413ca0:	(bad)  
  413ca1:	or     edi,DWORD PTR [edi*4-0x464425f0]
  413ca8:	test   al,0x54
  413caa:	out    dx,eax
  413cab:	mov    edi,0x5c3875ad
  413cb0:	dec    ebp
  413cb1:	cs dec esp
  413cb4:	xor    eax,DWORD PTR [edi-0x6]
  413cb7:	xor    dh,BYTE PTR [esp+ecx*4+0x63a60dea]
  413cbe:	pop    esp
  413cbf:	jmp    0x32bc:0x3344ec7
  413cc6:	push   ebx
  413cc7:	popf   
  413cc8:	in     al,dx
  413cc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cca:	mov    al,ds:0xe8e70296
  413ccf:	and    BYTE PTR [ebx-0x69],0xc6
  413cd3:	jle    0x413c66
  413cd5:	cs leave 
  413cd7:	pop    ss
  413cd8:	jmp    0x56cdac78
  413cdd:	scas   al,BYTE PTR es:[edi]
  413cde:	pop    ebx
  413cdf:	xchg   edi,eax
  413ce0:	sub    al,BYTE PTR ds:0x94acf61a
  413ce6:	icebp  
  413ce7:	fadd   DWORD PTR [ebp-0x17]
  413cea:	ret    
  413ceb:	adc    edi,ebx
  413ced:	mov    eax,ds:0x5ac8d588
  413cf2:	lock cdq 
  413cf4:	div    DWORD PTR [ecx+0x57]
  413cf7:	mov    edi,DWORD PTR [ecx+0x4d7901a8]
  413cfd:	stos   BYTE PTR es:[edi],al
  413cfe:	adc    eax,0x9792f120
  413d03:	sub    eax,0x29e6c59
  413d08:	add    DWORD PTR [esi],0xffffffbb
  413d0b:	outs   dx,DWORD PTR ds:[esi]
  413d0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d0d:	or     al,0x75
  413d0f:	inc    ecx
  413d10:	mov    al,BYTE PTR [eax+0x663572ea]
  413d16:	push   edx
  413d17:	or     bh,BYTE PTR gs:[edx-0x2b7a9e38]
  413d1e:	xor    cl,BYTE PTR [eax+0x1f3807af]
  413d24:	fnstenv [edi+esi*4+0x74df31e6]
  413d2b:	fnstenv [ebp+0x62d17fbe]
  413d31:	mov    ebx,0xe40aab32
  413d36:	popf   
  413d37:	fist   WORD PTR [edx]
  413d39:	add    BYTE PTR [esi],ch
  413d3b:	sub    dh,BYTE PTR [ebx+eiz*8-0x61]
  413d3f:	xchg   edi,eax
  413d40:	xlat   BYTE PTR ds:[ebx]
  413d41:	sbb    eax,0x6ebd0596
  413d46:	retf   0xe031
  413d49:	mov    BYTE PTR [eax-0x5b],al
  413d4c:	sub    BYTE PTR ds:0xaeba616d,0x55
  413d53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d54:	push   0x451886bf
  413d59:	mov    ecx,0xe1d3841a
  413d5e:	adc    edi,0x79f0e9e3
  413d64:	loopne 0x413d5d
  413d66:	push   edx
  413d67:	mov    dh,0xa8
  413d69:	xor    edi,DWORD PTR [edi-0x460c0ace]
  413d6f:	add    al,0xf7
  413d71:	or     BYTE PTR [edi],bh
  413d73:	fld    TBYTE PTR [eax-0x12010bf8]
  413d79:	pushf  
  413d7a:	inc    esi
  413d7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d7c:	xchg   ebp,eax
  413d7d:	xchg   esp,eax
  413d7e:	jae    0x413d69
  413d80:	xchg   ecx,eax
  413d81:	inc    esp
  413d82:	dec    ebp
  413d83:	sbb    al,0xe4
  413d85:	popa   
  413d86:	or     DWORD PTR [ebx-0x59],ebp
  413d89:	push   esi
  413d8a:	ret    
  413d8b:	xor    al,0xb
  413d8d:	aaa    
  413d8e:	cld    
  413d8f:	fs mov eax,0xb420a561
  413d95:	inc    ecx
  413d96:	jno    0x413de7
  413d98:	jns    0x413df8
  413d9a:	adc    al,0x10
  413d9c:	pop    ecx
  413d9d:	add    eax,0xb330e79d
  413da2:	(bad)  
  413da3:	(bad)  
  413da4:	mov    bh,0xbe
  413da6:	jp     0x413d92
  413da8:	int3   
  413da9:	adc    edi,DWORD PTR [eax+edx*4-0x17]
  413dad:	popf   
  413dae:	pop    es
  413daf:	jmp    0x413df9
  413db1:	or     cl,ah
  413db3:	mov    dh,0xc9
  413db5:	stc    
  413db6:	push   ds
  413db7:	jecxz  0x413da3
  413db9:	stc    
  413dba:	int3   
  413dbb:	cwde   
  413dbc:	sar    BYTE PTR [edx],1
  413dbe:	cwde   
  413dbf:	fldenv [esp]
  413dc2:	je     0x413e42
  413dc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413dc5:	sar    ah,1
  413dc7:	lea    edi,[esi-0x4cea9e2d]
  413dcd:	jg     0x413df0
  413dcf:	mov    eax,0xd6f2233f
  413dd4:	mov    dl,0xc0
  413dd6:	mov    al,0x9c
  413dd8:	cmp    bl,BYTE PTR [ecx-0x5f]
  413ddb:	sub    dl,cl
  413ddd:	les    ecx,FWORD PTR [edx]
  413ddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413de0:	pop    esp
  413de1:	clc    
  413de2:	xor    BYTE PTR [edi*4-0x45333232],ah
  413de9:	push   ecx
  413dea:	and    DWORD PTR [edi],ebx
  413dec:	xor    al,0x4f
  413dee:	pop    es
  413def:	inc    ebx
  413df0:	jmp    0x413db2
  413df2:	adc    DWORD PTR [edi+esi*1+0x3c],edx
  413df6:	cdq    
  413df7:	cmp    ebx,eax
  413df9:	push   edx
  413dfa:	scas   al,BYTE PTR es:[edi]
  413dfb:	fwait
  413dfc:	ds ds push ebp
  413dff:	mov    BYTE PTR [edx-0x60b95c15],dl
  413e05:	mov    ds:0xf9429291,al
  413e0a:	mov    eax,0xbf5c622d
  413e0f:	jns    0x413e11
  413e11:	or     esi,esi
  413e13:	xor    al,0x89
  413e15:	push   edi
  413e16:	or     BYTE PTR [ebp+0x5c764e29],ah
  413e1c:	push   esp
  413e1d:	outs   dx,BYTE PTR ds:[esi]
  413e1e:	js     0x413e62
  413e20:	pop    ebx
  413e21:	sub    BYTE PTR ss:[esi+0x7e],cl
  413e25:	(bad)  
  413e26:	fisttp WORD PTR [esi+0x40]
  413e29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e2a:	sub    al,0x8a
  413e2c:	and    dh,ch
  413e2e:	jp     0x413e4d
  413e30:	ds jp  0x413e89
  413e33:	imul   edx,DWORD PTR [ecx-0x44],0x67
  413e37:	arpl   WORD PTR [ecx-0x7a7fc157],ax
  413e3d:	into   
  413e3e:	fs stc 
  413e40:	xor    ebx,DWORD PTR [eax+0x21]
  413e43:	cmp    al,0x27
  413e45:	jb     0x413e5b
  413e47:	lds    ebx,FWORD PTR [esi+ecx*1+0x1bdab195]
  413e4e:	gs (bad) 
  413e50:	in     eax,dx
  413e51:	pusha  
  413e52:	das    
  413e53:	fdivr  QWORD PTR [eax+0x7ff30ce2]
  413e59:	aam    0xc3
  413e5b:	xor    esi,DWORD PTR [ecx-0x1d]
  413e5e:	jg     0x413de3
  413e60:	or     DWORD PTR [ecx],0x5f
  413e63:	je     0x413e1c
  413e65:	or     eax,0x8e0b6a77
  413e6a:	push   esi
  413e6b:	ror    dl,1
  413e6d:	div    DWORD PTR [edi*8-0x79d72d46]
  413e74:	fwait
  413e75:	jno    0x413e2d
  413e77:	or     edx,esi
  413e79:	mov    ecx,0xb7e8768
  413e7e:	pop    ecx
  413e7f:	add    DWORD PTR [ebp-0x2],edx
  413e82:	es ds in al,0xe7
  413e86:	mov    esi,edx
  413e88:	sub    edi,DWORD PTR [edx+0x1158c363]
  413e8e:	mov    WORD PTR [ebx+0x36],es
  413e91:	dec    eax
  413e92:	jb     0x413ea6
  413e94:	mov    cl,0x41
  413e96:	mov    BYTE PTR [ecx-0x78],bl
  413e99:	retf   
  413e9a:	and    BYTE PTR [ecx-0x17],ch
  413e9d:	in     al,0x6b
  413e9f:	mov    ecx,0xf3a474e9
  413ea4:	outs   dx,BYTE PTR ds:[esi]
  413ea5:	pusha  
  413ea6:	or     DWORD PTR [ebx+0x56],ecx
  413ea9:	test   al,0x8b
  413eab:	clc    
  413eac:	sub    esi,edi
  413eae:	dec    edi
  413eaf:	mov    edi,eax
  413eb1:	das    
  413eb2:	cwde   
  413eb3:	sbb    DWORD PTR [edi-0x335aa4fc],ebp
  413eb9:	(bad)  
  413eba:	icebp  
  413ebb:	jge    0x413f1a
  413ebd:	mov    esi,0x504d1b90
  413ec2:	mov    cl,0x33
  413ec4:	int    0x54
  413ec6:	clc    
  413ec7:	xchg   DWORD PTR [edi-0x4f143bfe],ebp
  413ecd:	scas   eax,DWORD PTR es:[edi]
  413ece:	gs or  dl,cl
  413ed1:	test   BYTE PTR [ebx+0x10],bl
  413ed4:	loop   0x413e8b
  413ed6:	dec    DWORD PTR ds:0x2a15d288
  413edc:	imul   eax,DWORD PTR [esi+ebx*4-0x28],0x5540a47d
  413ee4:	outs   dx,DWORD PTR ds:[esi]
  413ee5:	sbb    eax,0xdce03136
  413eea:	rcr    BYTE PTR [ecx-0x35],1
  413eed:	leave  
  413eee:	xor    esi,ecx
  413ef0:	pop    ebp
  413ef1:	jae    0x413f68
  413ef3:	sub    ecx,DWORD PTR [esi+0x2d]
  413ef6:	or     esi,DWORD PTR [ebp+ecx*4-0x5cce88e1]
  413efd:	neg    BYTE PTR [edx-0x24]
  413f00:	repnz not ecx
  413f03:	xchg   ecx,eax
  413f04:	outs   dx,BYTE PTR ds:[esi]
  413f05:	sbb    DWORD PTR [ecx],ebx
  413f07:	mov    cl,BYTE PTR [edx]
  413f09:	adc    eax,0x105607ad
  413f0e:	cmc    
  413f0f:	push   0xffffffc4
  413f11:	mov    bh,0x96
  413f13:	ret    
  413f14:	inc    edx
  413f15:	fild   QWORD PTR [edi]
  413f17:	jl     0x413eb3
  413f19:	arpl   WORD PTR [eax+eiz*8-0x6a4f02d9],cx
  413f20:	mov    WORD PTR [eax],?
  413f22:	adc    dl,dl
  413f24:	or     BYTE PTR [eax+0x2eda1fdc],bl
  413f2a:	ret    
  413f2b:	xchg   ebp,eax
  413f2c:	mov    ds:0xc7bd4af9,eax
  413f31:	std    
  413f32:	add    BYTE PTR [ebx-0x6fdcb09c],dh
  413f38:	(bad)  [edi+0x6e]
  413f3b:	push   0x785570d7
  413f40:	sbb    cl,ch
  413f42:	int3   
  413f43:	push   ecx
  413f44:	je     0x413f87
  413f46:	pop    edx
  413f47:	ins    BYTE PTR es:[edi],dx
  413f48:	ret    
  413f49:	int    0xc1
  413f4b:	or     dh,BYTE PTR [edx+0x18ebf7ab]
  413f51:	into   
  413f52:	inc    ecx
  413f53:	in     al,dx
  413f54:	add    esp,DWORD PTR [ebx]
  413f56:	mov    al,ds:0xa232a3b4
  413f5b:	mov    dh,0xd2
  413f5d:	add    eax,edi
  413f5f:	xchg   esi,eax
  413f60:	fidiv  DWORD PTR [esi+0xe]
  413f63:	dec    eax
  413f64:	pop    esi
  413f65:	jbe    0x413f5b
  413f67:	out    0x24,eax
  413f69:	jno    0x413f4d
  413f6b:	dec    esi
  413f6c:	movhps xmm5,QWORD PTR [esi+0x24]
  413f70:	mov    DWORD PTR [edx+0x45],esi
  413f73:	out    0x62,eax
  413f75:	mov    edx,0x7c6e626f
  413f7a:	cs jmp 0x4fbb47a8
  413f80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f81:	dec    ebx
  413f82:	pop    ebx
  413f83:	retf   0x657
  413f86:	(bad)  [ebp-0x5283f78c]
  413f8c:	pop    esi
  413f8d:	loope  0x413f8e
  413f8f:	or     BYTE PTR fs:[edi],bh
  413f92:	sub    esp,DWORD PTR [ecx*8-0x74fc74e4]
  413f99:	push   ebx
  413f9a:	jmp    0x413fd6
  413f9c:	arpl   WORD PTR [ecx+0x7d5aa3e7],bp
  413fa2:	dec    ebx
  413fa3:	mov    DWORD PTR cs:[edx-0x40d745de],ebx
  413faa:	fcmovnu st,st(7)
  413fac:	sub    al,0x33
  413fae:	(bad)  
  413faf:	jle    0x413f6e
  413fb1:	loop   0x413ff2
  413fb3:	or     BYTE PTR [ebp+edi*4-0x341e5201],bl
  413fba:	and    BYTE PTR [edi-0x52],ah
  413fbd:	int3   
  413fbe:	ins    BYTE PTR es:[edi],dx
  413fbf:	push   es
  413fc0:	inc    esi
  413fc1:	xchg   ebx,eax
  413fc2:	jmp    FWORD PTR [edi*4-0x3e5ffd82]
  413fc9:	mov    ah,0xd8
  413fcb:	push   ecx
  413fcc:	mov    ecx,DWORD PTR [edx]
  413fce:	push   cs
  413fcf:	js     0x414009
  413fd1:	lock lds esp,FWORD PTR [edi+0x12e0dd6d]
  413fd8:	dec    esp
  413fd9:	dec    ecx
  413fda:	cmp    DWORD PTR [ebx+0x35],ecx
  413fdd:	xchg   ecx,eax
  413fde:	fs int3 
  413fe0:	pop    ebx
  413fe1:	jae    0x413fcb
  413fe3:	lds    ebp,FWORD PTR [esi]
  413fe5:	rol    DWORD PTR [edx-0x2f],1
  413fe8:	add    BYTE PTR [esi],dl
  413fea:	mov    ds:0xa5799426,eax
  413fef:	push   esi
  413ff0:	mov    eax,ds:0xdc73bc4
  413ff5:	test   DWORD PTR [edi-0xb544ad5],eax
  413ffb:	(bad)  
  413ffc:	cld    
  413ffd:	adc    DWORD PTR es:[ebx-0x23],ecx
  414001:	or     edi,DWORD PTR [ecx-0x42]
  414004:	xor    DWORD PTR [edx+0x24644e20],ecx
  41400a:	shl    DWORD PTR [eax],1
  41400c:	stos   DWORD PTR es:[edi],eax
  41400d:	stc    
  41400e:	jg     0x413ff0
  414010:	das    
  414011:	sub    edi,DWORD PTR [ebx+0x5e]
  414014:	dec    edx
  414015:	cdq    
  414016:	adc    al,0x3e
  414018:	mov    ch,0x46
  41401a:	pop    ebp
  41401b:	cwde   
  41401c:	in     eax,0xd
  41401e:	jg     0x414099
  414020:	push   ebx
  414021:	push   ss
  414022:	or     DWORD PTR [edx+ecx*1],esp
  414025:	(bad)  
  414026:	fdivr  QWORD PTR [ebp+0x61]
  414029:	(bad)  
  41402a:	stos   BYTE PTR es:[edi],al
  41402b:	and    BYTE PTR [eax-0x6e5c6f93],0x6d
  414032:	push   ds
  414033:	jne    0x414011
  414035:	cmc    
  414036:	jb     0x414021
  414038:	jecxz  0x413fe5
  41403a:	sbb    DWORD PTR [esi-0x76],0x23a95f34
  414041:	and    BYTE PTR [edi+edx*8],cl
  414044:	jno    0x41402a
  414046:	dec    eax
  414047:	jmp    0x3080:0xeef86291
  41404e:	outs   dx,BYTE PTR ds:[esi]
  41404f:	and    dl,cl
  414051:	sub    edx,ebp
  414053:	setbe  BYTE PTR [esi]
  414056:	add    al,0x34
  414058:	push   esp
  414059:	inc    ecx
  41405a:	(bad)  
  41405b:	rcr    DWORD PTR [esi-0x97f8968],cl
  414061:	xor    eax,0x1375d73f
  414066:	push   eax
  414067:	jecxz  0x41408e
  414069:	push   0xffffff94
  41406b:	xchg   DWORD PTR [ecx-0x24cfee65],edx
  414071:	es loope 0x4140a6
  414074:	jmp    0x4140dc
  414076:	and    ecx,ebx
  414078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414079:	jmp    0x4140f6
  41407b:	lods   al,BYTE PTR ds:[esi]
  41407c:	daa    
  41407d:	mov    ds:0x13082e67,eax
  414082:	fstp   QWORD PTR [eax]
  414084:	adc    esi,edi
  414086:	sahf   
  414087:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414088:	pop    ss
  414089:	jno    0x41406d
  41408b:	push   0x42a563a4
  414090:	add    DWORD PTR [edx],0xfb0aa8ce
  414096:	pop    edx
  414097:	xor    BYTE PTR [eax+0x8],dl
  41409a:	shl    BYTE PTR [ecx+0x35acf743],0x29
  4140a1:	cmp    DWORD PTR [ebx+eax*8],edi
  4140a4:	popf   
  4140a5:	mov    dh,0xac
  4140a7:	sbb    ebx,ebx
  4140a9:	adc    eax,0x8d625fa0
  4140ae:	mov    ds:0xb6e178c6,eax
  4140b3:	je     0x4140d0
  4140b5:	sub    eax,0x810d7cd1
  4140ba:	pop    ds
  4140bb:	mul    BYTE PTR [edx+0x4f]
  4140be:	popf   
  4140bf:	adc    ah,BYTE PTR [edi]
  4140c1:	cmp    al,0x92
  4140c3:	push   esi
  4140c4:	mov    cl,0x96
  4140c6:	bound  ebp,QWORD PTR [edi+0x627b2b1b]
  4140cc:	loope  0x414122
  4140ce:	pop    eax
  4140cf:	mov    bl,cl
  4140d1:	icebp  
  4140d2:	fadd   st(7),st
  4140d4:	adc    al,0x6c
  4140d6:	cmp    edx,DWORD PTR [ebp-0x4b3abd63]
  4140dc:	mov    DWORD PTR [ebp+0x2e83a975],eax
  4140e2:	mov    ebp,0x6f55f187
  4140e7:	dec    ebx
  4140e8:	push   esp
  4140e9:	sub    al,0x5c
  4140eb:	cmp    DWORD PTR [ebx],esi
  4140ed:	xlat   BYTE PTR ds:[ebx]
  4140ee:	xor    BYTE PTR [eax],al
  4140f0:	aad    0x14
  4140f2:	and    DWORD PTR [eax+esi*8],0x2ffbc703
  4140f9:	adc    BYTE PTR [edi+edx*4-0x3b89f5ab],al
  414100:	mov    gs,eax
  414102:	mov    bl,0x54
  414104:	dec    eax
  414105:	call   0x37e8:0xc6f6c347
  41410c:	mov    dl,0xf5
  41410e:	mov    ecx,0xdadbe152
  414113:	sub    BYTE PTR [ebp-0x54],cl
  414116:	jg     0x4140b8
  414118:	adc    eax,0xa0fe5010
  41411d:	mov    esp,0x3032fe1
  414122:	mov    ah,0x3c
  414124:	sbb    BYTE PTR [ebx],cl
  414126:	xchg   DWORD PTR fs:[ecx],ebp
  414129:	or     eax,DWORD PTR [esi-0x144cab14]
  41412f:	pop    ss
  414130:	stos   DWORD PTR es:[edi],eax
  414131:	lods   eax,DWORD PTR ds:[esi]
  414132:	js     0x414161
  414134:	in     eax,dx
  414135:	push   esi
  414136:	mov    edx,0xf8f90e9c
  41413b:	push   es
  41413c:	int3   
  41413d:	sar    ebx,1
  41413f:	inc    esi
  414140:	leave  
  414141:	xor    BYTE PTR [edi],bl
  414143:	mov    DWORD PTR [edi-0x57d39528],0x3d106045
  41414d:	push   esi
  41414e:	inc    esp
  41414f:	(bad)
  414153:	clc    
  414154:	inc    ebp
  414155:	xlat   BYTE PTR ds:[ebx]
  414156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414157:	fisttp QWORD PTR [eax-0x46]
  41415a:	idiv   BYTE PTR [eax-0x1c]
  41415d:	adc    DWORD PTR [ecx],edx
  41415f:	mov    DWORD PTR [edx+esi*8],edi
  414162:	push   ebp
  414163:	(bad)  
  414164:	lods   al,BYTE PTR ds:[esi]
  414165:	pop    eax
  414166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414167:	call   0x932f9500
  41416c:	fwait
  41416d:	mov    dh,0xfe
  41416f:	jbe    0x4141d5
  414171:	and    BYTE PTR [ebx-0x8],ch
  414174:	pop    esi
  414175:	sbb    edx,ebp
  414177:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414178:	sbb    DWORD PTR [ebx-0x51799067],eax
  41417e:	mov    WORD PTR [eax-0x3e001114],gs
  414184:	cmp    edi,eax
  414186:	xchg   esp,eax
  414187:	lds    eax,FWORD PTR [ebp-0x16fb36ee]
  41418d:	push   esp
  41418e:	lds    ecx,FWORD PTR [edx+ecx*4]
  414191:	imul   eax,DWORD PTR [eax],0xfffffffe
  414194:	aam    0x73
  414196:	fisttp DWORD PTR [edx+0x645f99fa]
  41419c:	in     al,0xe3
  41419e:	mov    ch,0x5e
  4141a0:	sbb    BYTE PTR [edx],0xb6
  4141a3:	call   0xd019abeb
  4141a8:	nop
  4141a9:	repnz popf 
  4141ab:	in     eax,0x94
  4141ad:	(bad)  
  4141ae:	mov    ebx,0x9bad35d
  4141b3:	nop
  4141b4:	test   eax,0xdad6ac8a
  4141b9:	pop    ecx
  4141ba:	repz in eax,0xea
  4141bd:	push   ss
  4141be:	(bad)  
  4141bf:	mov    ds,esp
  4141c1:	cmp    DWORD PTR [ebx],ebp
  4141c3:	xor    DWORD PTR [edx+edx*2-0x4e],0xbfadbf3b
  4141cb:	pop    ebx
  4141cc:	push   esi
  4141cd:	ds sub ebp,0xa8e15c86
  4141d4:	fsub   DWORD PTR [ecx-0x6f28fc52]
  4141da:	dec    edx
  4141db:	mov    ah,al
  4141dd:	sar    BYTE PTR [esi-0xf],0x2f
  4141e1:	or     BYTE PTR [ebx+eax*1+0x14de0569],cl
  4141e8:	mov    edx,0xbc355600
  4141ed:	and    DWORD PTR [ebx-0x521898a2],eax
  4141f3:	jecxz  0x41426e
  4141f5:	inc    ebx
  4141f6:	fnstcw WORD PTR [edx]
  4141f8:	sar    ecx,cl
  4141fa:	pop    eax
  4141fb:	push   ds
  4141fc:	cs pop edi
  4141fe:	sub    BYTE PTR [eax-0x3975fcf7],0xe
  414205:	and    al,0x9c
  414208:	add    eax,0x4afccb03
  41420d:	and    BYTE PTR [edi+0x72b76dd9],0x57
  414214:	mov    al,0x69
  414216:	test   eax,0x7c976b64
  41421b:	in     al,dx
  41421c:	pop    esi
  41421d:	pop    eax
  41421e:	xchg   esp,eax
  41421f:	pop    ebx
  414220:	test   al,0x7c
  414222:	add    BYTE PTR ds:0xa145c3ee,dh
  414228:	add    dh,BYTE PTR [ebx]
  41422a:	jnp    0x4141b5
  41422c:	jecxz  0x4141c1
  41422e:	(bad)  
  41422f:	push   0x3b5b6dfa
  414234:	lods   al,BYTE PTR ds:[esi]
  414235:	loope  0x41423b
  414237:	std    
  414238:	jae    0x4142b9
  41423a:	fdiv   QWORD PTR [ecx+0x44bbc3fe]
  414240:	push   ebx
  414242:	sar    al,1
  414244:	mov    esi,DWORD PTR [edi+ebx*2-0x3a]
  414248:	sub    BYTE PTR [edi-0x24e39503],al
  41424e:	add    DWORD PTR [edx-0x3c],0xc818009d
  414255:	dec    esi
  414256:	mov    dl,0x9
  414258:	dec    eax
  414259:	cld    
  41425a:	and    cl,BYTE PTR [ecx]
  41425c:	es cwde 
  41425e:	ret    
  41425f:	xor    eax,0xc57ff007
  414264:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  414266:	int    0xff
  414268:	ss (bad) 
  41426a:	xlat   BYTE PTR ds:[ebx]
  41426b:	jle    0x41421d
  41426d:	sub    dh,BYTE PTR [ecx-0xd5f15ee]
  414273:	retf   
  414274:	jecxz  0x414206
  414276:	mov    edx,0xc719c8e4
  41427b:	cmp    BYTE PTR [ecx+ebp*8+0x70abb2de],0xe0
  414283:	mov    dh,0x45
  414285:	push   ss
  414286:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414287:	mov    ch,0x4e
  414289:	retf   
  41428a:	inc    ebx
  41428b:	add    DWORD PTR [eax],0xffffffda
  41428e:	push   0x964d5fd6
  414293:	mov    ah,0x6a
  414295:	(bad)  
  414296:	fdiv   QWORD PTR [ebx-0x489c3479]
  41429c:	or     al,0x14
  41429e:	shl    DWORD PTR [ebx-0x4db09f2],0x99
  4142a5:	push   esp
  4142a6:	cli    
  4142a7:	mov    ah,0x63
  4142a9:	loope  0x414282
  4142ab:	(bad)  
  4142ac:	fistp  QWORD PTR [ecx*1-0x21fd3a38]
  4142b3:	and    esi,edx
  4142b5:	jg     0x41428d
  4142b7:	mov    esi,0x54aff6be
  4142bc:	scas   eax,DWORD PTR es:[edi]
  4142bd:	cmp    DWORD PTR [ecx-0x42],0x3b
  4142c1:	sbb    esi,edx
  4142c3:	jg     0x41424c
  4142c5:	arpl   WORD PTR [ecx+0x18],si
  4142c8:	jo     0x4142c3
  4142ca:	push   0x49
  4142cc:	sbb    ecx,DWORD PTR [ebx+0x40e88de2]
  4142d2:	mov    eax,0xb8c1877
  4142d7:	cmp    eax,edx
  4142d9:	sub    DWORD PTR [edi+0x2],eax
  4142dc:	mov    ebp,0x3793ae44
  4142e1:	push   0x16067f8e
  4142e6:	pop    ss
  4142e7:	or     al,0x71
  4142e9:	test   al,0xc3
  4142eb:	push   ebx
  4142ec:	sbb    cl,0x6d
  4142ef:	jle    0x4142a4
  4142f1:	stc    
  4142f2:	pop    ebx
  4142f3:	mov    cl,0x3e
  4142f5:	mov    ebx,0xbbdecd53
  4142fa:	test   BYTE PTR [esi],cl
  4142fc:	cmc    
  4142fd:	mov    WORD PTR [ecx+0x1ed4a2c],gs
  414303:	(bad)  
  414304:	shl    DWORD PTR [ecx+0x66],cl
  414307:	xchg   ecx,eax
  414308:	rcr    DWORD PTR [ecx-0xd1f89fe],cl
  41430e:	stos   BYTE PTR es:[edi],al
  41430f:	add    al,0xaf
  414311:	sub    eax,0x93599ac2
  414316:	adc    al,BYTE PTR [ebx+0x658af536]
  41431c:	mov    ah,0xef
  41431e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41431f:	ds push ebx
  414321:	leave  
  414322:	test   BYTE PTR [ebp-0x6884494a],ah
  414328:	xor    al,0xe3
  41432a:	cmp    dl,0xe5
  41432d:	popa   
  41432e:	int3   
  41432f:	xchg   edx,eax
  414330:	xlat   BYTE PTR ds:[ebx]
  414331:	pop    ebp
  414332:	add    dl,BYTE PTR [esi]
  414334:	mov    eax,ds:0xf6b09449
  414339:	stos   BYTE PTR es:[edi],al
  41433a:	dec    ebp
  41433b:	adc    ebx,DWORD PTR [eax-0x1e6476e6]
  414341:	enter  0x653d,0x21
  414345:	mov    ch,BYTE PTR [edx+ebx*2]
  414348:	inc    ebx
  414349:	leave  
  41434a:	mov    BYTE PTR [ebx],dl
  41434c:	xchg   ecx,eax
  41434d:	mov    ss,ebp
  41434f:	es js  0x414309
  414352:	(bad)  
  414354:	push   ecx
  414355:	adc    DWORD PTR cs:[eax],esp
  414358:	ins    DWORD PTR es:[edi],dx
  414359:	fcmovb st,st(3)
  41435b:	mov    esp,0x7ea31d10
  414360:	fwait
  414361:	into   
  414362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414363:	pmovmskb edx,mm7
  414366:	(bad)  
  414367:	jmp    DWORD PTR [edi+0x6d823ffd]
  41436d:	jl     0x4143c3
  41436f:	sbb    eax,DWORD PTR [edi-0x12]
  414372:	repnz sub eax,0xff14d0b7
  414378:	cmp    eax,0x2ab0d569
  41437d:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41437f:	int    0x72
  414381:	test   edi,ebp
  414383:	mov    ebx,0x503b71d4
  414388:	mov    ebx,0xd06eb84c
  41438d:	and    al,0x6c
  41438f:	mov    al,0x62
  414391:	push   ebx
  414392:	sub    bh,dh
  414394:	aas    
  414395:	pushf  
  414396:	outs   dx,DWORD PTR ds:[esi]
  414397:	fist   DWORD PTR [eax-0x52]
  41439a:	mov    ecx,esi
  41439c:	pushf  
  41439d:	out    0xd1,al
  41439f:	push   0xffffffd9
  4143a1:	xchg   ebx,eax
  4143a2:	ss add eax,0xc9b46a7a
  4143a8:	dec    ecx
  4143a9:	scas   al,BYTE PTR es:[edi]
  4143aa:	pop    ss
  4143ab:	mov    edi,edx
  4143ad:	ret    
  4143ae:	ds cwde 
  4143b0:	mov    cl,0xcf
  4143b2:	ret    
  4143b3:	push   cs
  4143b4:	call   0x810:0x63874b4c
  4143bb:	pop    ebp
  4143bc:	out    dx,eax
  4143bd:	push   ebx
  4143be:	sub    eax,0x69bb62f1
  4143c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143c4:	out    0x87,eax
  4143c6:	mov    ds:0x8ff9bc4d,eax
  4143cb:	pop    ecx
  4143cc:	jns    0x4143fa
  4143ce:	mov    bh,0x88
  4143d0:	int    0x2
  4143d2:	sbb    al,0xbb
  4143d4:	enter  0xbdee,0xd0
  4143d8:	jbe    0x41437c
  4143da:	mov    edi,0x1aa63de7
  4143df:	data16 and al,0xd6
  4143e2:	mov    edx,0xb43cf6ab
  4143e7:	inc    eax
  4143e8:	xor    eax,0x7a4c9af5
  4143ed:	mov    eax,0xb65f1b16
  4143f2:	xor    BYTE PTR [ebx-0x23554a5b],0x17
  4143f9:	jae    0x414451
  4143fb:	adc    cl,BYTE PTR [esi-0x6b]
  4143fe:	push   ebx
  4143ff:	mov    WORD PTR [eax+0x57764757],?
  414405:	repnz mov ecx,DWORD PTR [ebx+ecx*1+0x48]
  41440a:	(bad)  
  41440c:	inc    ebx
  41440d:	idiv   bl
  41440f:	adc    ecx,DWORD PTR [bx+di+0xb]
  414413:	mov    edx,0x819c114f
  414418:	mov    ah,0x1f
  41441a:	repnz fsub DWORD PTR [edx]
  41441d:	pop    ds
  41441e:	adc    esi,DWORD PTR [edi-0x6d3c59f1]
  414424:	pop    edi
  414425:	fld    DWORD PTR [esi+esi*1-0x6d]
  414429:	pop    es
  41442a:	xchg   esp,eax
  41442b:	sahf   
  41442c:	mov    cl,0xe3
  41442e:	or     ecx,esp
  414430:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414431:	add    esp,0xef71b795
  414437:	sbb    DWORD PTR [eax+0x7a],edx
  41443a:	xor    BYTE PTR [ecx+ecx*2+0x418a80fa],al
  414441:	out    dx,al
  414442:	daa    
  414443:	jnp    0x414439
  414445:	sub    bh,dh
  414447:	shr    ecx,1
  414449:	fstp   DWORD PTR [esi-0x32124887]
  41444f:	xor    ah,BYTE PTR ds:0x64b6f240
  414455:	xchg   ecx,eax
  414456:	add    bl,al
  414458:	loope  0x4143e5
  41445a:	adc    eax,0x82cf3e5d
  41445f:	js     0x4144af
  414461:	xor    eax,0xfa17d06f
  414466:	xchg   edi,eax
  414467:	jge    0x414401
  414469:	aas    
  41446a:	enter  0x29aa,0xc6
  41446e:	mov    esi,0x58555976
  414473:	push   ds
  414474:	lea    ebp,[ecx+ebx*1-0x42]
  414478:	clc    
  414479:	retf   
  41447a:	outs   dx,DWORD PTR ds:[esi]
  41447b:	ror    DWORD PTR [ecx],0xc3
  41447e:	pop    edx
  41447f:	adc    ah,BYTE PTR [ecx]
  414481:	sti    
  414482:	jge    0x414433
  414484:	dec    ebx
  414485:	imul   edi,DWORD PTR [ebx-0x393b63a7],0x27d4103a
  41448f:	push   ebx
  414490:	and    BYTE PTR [eax+0x5f],bl
  414493:	clc    
  414494:	ins    DWORD PTR es:[edi],dx
  414495:	lahf   
  414496:	pop    eax
  414497:	ret    
  414498:	inc    eax
  414499:	data16 test al,0x95
  41449c:	mov    esp,0xef058002
  4144a1:	outs   dx,DWORD PTR ds:[esi]
  4144a2:	sub    BYTE PTR [ebp-0x1c93bc7f],dl
  4144a8:	addr16 clc 
  4144aa:	cdq    
  4144ab:	cmp    eax,0xe065cffa
  4144b0:	xlat   BYTE PTR ds:[ebx]
  4144b1:	mov    eax,0x363f6553
  4144b6:	stos   BYTE PTR es:[edi],al
  4144b7:	in     al,dx
  4144b8:	jge    0x4144f0
  4144ba:	cmc    
  4144bb:	inc    eax
  4144bc:	inc    ebp
  4144bd:	cmc    
  4144be:	xor    eax,0x22bb1f85
  4144c3:	adc    ch,bl
  4144c5:	sbb    ch,BYTE PTR [edx-0x6e182379]
  4144cb:	out    0x79,eax
  4144cd:	fisttp DWORD PTR [edi+0x6a02f31b]
  4144d3:	inc    eax
  4144d4:	mov    dl,BYTE PTR [esi+0xd6865a]
  4144da:	sbb    eax,0x1bad74a2
  4144df:	xchg   ebx,eax
  4144e0:	out    0x84,eax
  4144e2:	scas   al,BYTE PTR es:[edi]
  4144e3:	aaa    
  4144e4:	out    dx,al
  4144e5:	shl    DWORD PTR [ebx-0x51535346],0x7b
  4144ec:	adc    BYTE PTR [ecx+0x6483d8bd],0x91
  4144f3:	fwait
  4144f4:	pushf  
  4144f5:	sbb    al,0x31
  4144f7:	cs es ins DWORD PTR es:[edi],dx
  4144fa:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144fc:	ins    DWORD PTR es:[edi],dx
  4144fd:	in     al,dx
  4144fe:	mov    bl,0xe3
  414500:	jmp    0x9ea2:0xf176c646
  414507:	in     eax,0x7d
  414509:	sbb    eax,0x45162192
  41450e:	fadd   st(5),st
  414510:	pop    esp
  414511:	aas    
  414512:	sub    dh,BYTE PTR [edi]
  414514:	inc    ebx
  414515:	xchg   ebx,eax
  414516:	cmp    al,0x14
  414518:	data16 jne 0x4144f1
  41451b:	les    esp,FWORD PTR [esi-0xb2c990c]
  414521:	lods   eax,DWORD PTR ds:[esi]
  414522:	imul   edx,esp,0x1092ad1d
  414528:	pop    esp
  414529:	mov    ds:0x6974756,eax
  41452e:	adc    eax,0x142169b1
  414533:	push   esi
  414534:	das    
  414535:	rol    ah,cl
  414537:	jl     0x414595
  414539:	fistp  WORD PTR [edi]
  41453b:	xchg   BYTE PTR [ebp+0x6],bl
  41453e:	daa    
  41453f:	stc    
  414540:	out    dx,al
  414541:	dec    ebp
  414542:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414543:	xor    BYTE PTR [ebp-0x29e55f6a],0x1c
  41454a:	lea    ebx,[esi-0x7d134cc4]
  414550:	iret   
  414551:	xor    al,0xd1
  414553:	mov    eax,ds:0x52c0be3d
  414558:	mov    eax,ds:0x4a9d48e0
  41455d:	mov    cl,0xfb
  41455f:	clc    
  414560:	rol    esi,0x82
  414563:	sub    dh,0x35
  414566:	out    dx,al
  414567:	sbb    al,0x51
  414569:	ss inc esi
  41456b:	imul   esp,DWORD PTR [ebp-0x3e7cffaa],0xffffffa3
  414572:	das    
  414573:	scas   al,BYTE PTR es:[edi]
  414574:	lock repnz imul BYTE PTR [eax-0x2bfbc970]
  41457c:	push   0xffffffbb
  41457e:	dec    ebx
  41457f:	inc    ebp
  414580:	or     BYTE PTR es:[ecx+0x4599b6a9],bh
  414587:	sti    
  414588:	mov    al,0x91
  41458a:	rol    BYTE PTR es:[eax],1
  41458d:	scas   eax,DWORD PTR es:[edi]
  41458e:	and    al,dh
  414590:	mov    ds:0xd301319a,al
  414595:	add    BYTE PTR [edi-0x61],bl
  414598:	ss ds hlt 
  41459b:	adc    DWORD PTR [esi+0x34e092ad],ebx
  4145a1:	clc    
  4145a2:	pop    edx
  4145a3:	mov    dl,0xc2
  4145a5:	sub    al,0xbc
  4145a7:	in     al,0x5f
  4145a9:	jno    0x4145f8
  4145ab:	(bad)  
  4145ac:	cmp    al,0xdd
  4145ae:	jge    0x414604
  4145b0:	sub    DWORD PTR [esi+0x5a],eax
  4145b3:	pop    eax
  4145b4:	in     al,dx
  4145b5:	push   esi
  4145b6:	or     al,BYTE PTR [esi-0x53]
  4145b9:	mov    ds:0x568b0440,al
  4145be:	es out dx,al
  4145c0:	out    dx,eax
  4145c1:	or     esp,DWORD PTR [eax-0x52]
  4145c4:	je     0x4145a1
  4145c6:	repz jae 0x4145b5
  4145c9:	mov    dl,al
  4145cb:	out    0xca,al
  4145cd:	inc    edx
  4145ce:	mov    ds:0x68e8d563,eax
  4145d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145d4:	xchg   esi,eax
  4145d5:	sbb    al,0x18
  4145d7:	xor    dh,al
  4145d9:	lahf   
  4145da:	jl     0x41462f
  4145dc:	xor    eax,0xa1a1e6f9
  4145e1:	cld    
  4145e2:	add    eax,0x8a4fda0
  4145e7:	inc    esp
  4145e8:	sub    BYTE PTR [edi-0x6cea7d6f],al
  4145ee:	mov    edx,0x273c576d
  4145f3:	pop    es
  4145f4:	les    eax,FWORD PTR [esi-0x3d]
  4145f7:	inc    edi
  4145f8:	jecxz  0x41458c
  4145fa:	push   edi
  4145fb:	xor    ch,BYTE PTR [ebp-0x6c]
  4145fe:	fs popf 
  414600:	test   eax,0x6fc09283
  414605:	sti    
  414606:	nop
  414607:	mov    WORD PTR [ebp+0x76],cs
  41460a:	push   esi
  41460b:	xchg   BYTE PTR [edx],cl
  41460d:	cmp    eax,0x7570e170
  414612:	jo     0x41461d
  414614:	add    eax,0x793b5eda
  414619:	ror    BYTE PTR [ebp-0x49474285],cl
  41461f:	pop    ss
  414620:	add    DWORD PTR [esi-0x7282e688],ebp
  414626:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414627:	mov    dh,0x70
  414629:	mov    ah,0xa3
  41462b:	sbb    dh,BYTE PTR [edx-0x31861a52]
  414631:	fcomp  DWORD PTR [ebx+edi*4-0x21b11f68]
  414638:	push   esp
  414639:	mov    fs,WORD PTR [edx+0x1b]
  41463c:	mov    ebx,ecx
  41463e:	test   BYTE PTR [ecx-0x33],al
  414641:	adc    esi,DWORD PTR [edx+0x64c07866]
  414647:	sub    eax,0xfeb63e76
  41464c:	test   al,0xcb
  41464e:	lahf   
  41464f:	push   ss
  414650:	fs cli 
  414652:	inc    esi
  414653:	mov    ebp,0x350edf8a
  414658:	push   es
  414659:	cli    
  41465a:	popf   
  41465b:	into   
  41465c:	add    bh,dh
  41465e:	cdq    
  41465f:	xor    ebp,DWORD PTR [edi]
  414661:	cld    
  414662:	data16 data16 jle 0x414652
  414666:	jmp    0xb7f6ad9b
  41466b:	mov    ds:0x3c633e4,al
  414670:	(bad)  
  414671:	push   eax
  414672:	mov    eax,DWORD PTR [ebp-0x1c]
  414675:	xor    eax,esi
  414677:	add    eax,edi
  414679:	push   eax
  41467a:	mov    eax,DWORD PTR [ebp-0x10]
  41467d:	xor    eax,esi
  41467f:	add    eax,edi
  414681:	push   eax
  414682:	lea    eax,[ebp-0x90]
  414688:	push   eax
  414689:	push   DWORD PTR [ebp-0x20]
  41468c:	push   DWORD PTR [ebp-0x30]
  41468f:	call   0x40f89f
  414694:	test   eax,eax
  414696:	je     0x4146c7
  41469c:	lea    eax,[ebp-0x90]
  4146a2:	push   eax
  4146a3:	mov    eax,DWORD PTR [ebp-0x30]
  4146a6:	xor    eax,esi
  4146a8:	add    eax,edi
  4146aa:	push   eax
  4146ab:	mov    eax,DWORD PTR [ebp-0x2c]
  4146ae:	add    eax,0xaa
  4146b3:	push   eax
  4146b4:	mov    eax,DWORD PTR [ebp-0x2c]
  4146b7:	mov    eax,DWORD PTR [eax+0x198]
  4146bd:	push   DWORD PTR [eax]
  4146bf:	call   0x40867e
  4146c4:	mov    DWORD PTR [ebp-0x40],eax
  4146c7:	lea    eax,[ebp+0x4]
  4146ca:	mov    DWORD PTR [ebp-0x34],eax
  4146cd:	mov    eax,DWORD PTR [ebp-0x8]
  4146d0:	mov    eax,DWORD PTR [eax]
  4146d2:	mov    eax,DWORD PTR [eax]
  4146d4:	mov    eax,DWORD PTR [eax]
  4146d6:	test   eax,eax
  4146d8:	je     0x416aa8
  4146de:	lea    eax,[ebp-0xc]
  4146e1:	mov    DWORD PTR [ebp-0x4c],eax
  4146e4:	mov    eax,DWORD PTR [ebp-0x3c]
  4146e7:	mov    DWORD PTR [ebp-0xc],eax
  4146ea:	mov    eax,DWORD PTR [ebp-0x8]
  4146ed:	mov    eax,DWORD PTR [eax]
  4146ef:	mov    eax,DWORD PTR [eax]
  4146f1:	mov    eax,DWORD PTR [eax]
  4146f3:	sub    DWORD PTR [ebp-0xc],eax
  4146f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4146f9:	xor    ecx,esi
  4146fb:	mov    eax,0xffcd8d25
  414700:	sub    eax,ecx
  414702:	add    DWORD PTR [ebp-0xc],eax
  414705:	mov    eax,DWORD PTR [ebp-0xc]
  414708:	mov    ecx,DWORD PTR [ebp-0x8]
  41470b:	mov    ecx,DWORD PTR [ecx]
  41470d:	mov    ecx,DWORD PTR [ecx]
  41470f:	mov    ecx,DWORD PTR [ecx]
  414711:	mov    DWORD PTR [ecx+0x1],eax
  414714:	mov    al,BYTE PTR [ebp-0x1]
  414717:	mov    ecx,DWORD PTR [ebp-0x8]
  41471a:	mov    ecx,DWORD PTR [ecx]
  41471c:	mov    ecx,DWORD PTR [ecx]
  41471e:	mov    ecx,DWORD PTR [ecx]
  414720:	push   DWORD PTR [ebp-0x2c]
  414723:	xor    al,0x6f
  414725:	sub    al,0xd
  414727:	mov    BYTE PTR [ecx],al
  414729:	mov    eax,ds:0x423ef0
  41472e:	push   DWORD PTR [eax]
  414730:	push   DWORD PTR ds:0x42414c
  414736:	push   DWORD PTR ds:0x423ef8
  41473c:	push   DWORD PTR ds:0x42412c
  414742:	push   DWORD PTR ds:0x4241b4
  414748:	push   DWORD PTR [ebp-0x30]
  41474b:	jmp    0x416a9a
  414750:	jp     0x414751
  414752:	int    0x35
  414754:	ret    
  414755:	add    ecx,DWORD PTR [edx-0x41938645]
  41475b:	pop    ss
  41475c:	icebp  
  41475d:	dec    esp
  41475e:	stos   DWORD PTR es:[edi],eax
  41475f:	adc    eax,0x6261488c
  414764:	push   eax
  414765:	pop    edi
  414766:	bound  esp,QWORD PTR [edx-0x4d]
  414769:	cmp    ecx,ecx
  41476b:	cmc    
  41476c:	cmc    
  41476d:	pusha  
  41476e:	add    DWORD PTR [edi-0x58],0x1b418630
  414775:	add    eax,0xd51427da
  41477a:	adc    DWORD PTR [ebx],eax
  41477c:	fs mov dl,bl
  41477f:	jg     0x4147f3
  414781:	enter  0xe41f,0xcd
  414785:	fmul   DWORD PTR [edx+0x4c]
  414788:	pop    es
  414789:	inc    eax
  41478a:	jmp    0x5686:0xcd79b6e5
  414791:	sub    BYTE PTR [esi-0x3e],ah
  414794:	pop    edi
  414795:	jbe    0x414764
  414797:	neg    DWORD PTR [edx-0x7fd3d628]
  41479d:	pop    ecx
  41479e:	aad    0x98
  4147a0:	inc    esi
  4147a1:	stos   BYTE PTR es:[edi],al
  4147a2:	ficom  WORD PTR [ecx+ebp*1]
  4147a5:	push   edx
  4147a6:	sbb    ah,BYTE PTR [edx+0x6c]
  4147a9:	jns    0x414749
  4147ab:	jbe    0x4147f1
  4147ad:	sti    
  4147ae:	push   es
  4147af:	mov    bl,0x9c
  4147b1:	fst    QWORD PTR [ebx]
  4147b3:	mov    dh,BYTE PTR [eax]
  4147b5:	ficom  DWORD PTR [edx-0x64c18d2c]
  4147bb:	and    eax,edi
  4147bd:	int    0xe7
  4147bf:	fcos   
  4147c1:	inc    ecx
  4147c2:	sahf   
  4147c3:	into   
  4147c4:	cmp    eax,0x34d5a161
  4147c9:	addr16 jnp 0x414763
  4147cc:	inc    ebx
  4147cd:	pop    edi
  4147ce:	sub    edi,DWORD PTR [esp+eiz*8+0xb]
  4147d2:	aam    0xe7
  4147d4:	cmp    ecx,edi
  4147d6:	mov    eax,ds:0xca45fb44
  4147db:	xchg   DWORD PTR [ebx-0x518a6baf],eax
  4147e1:	push   eax
  4147e2:	xlat   BYTE PTR ds:[ebx]
  4147e3:	mov    bl,0x7
  4147e5:	or     bh,BYTE PTR [edx]
  4147e7:	pop    esp
  4147e9:	push   0x6690731
  4147ee:	and    dh,ah
  4147f0:	dec    ebx
  4147f1:	jns    0x4147b9
  4147f3:	pop    ds
  4147f4:	jb     0x41479a
  4147f6:	gs jg  0x41484e
  4147f9:	inc    eax
  4147fa:	sti    
  4147fb:	les    ecx,FWORD PTR [ecx-0x62]
  4147fe:	and    al,0xb
  414800:	ins    DWORD PTR es:[edi],dx
  414801:	cmp    eax,0x8e7efd9b
  414806:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414807:	sub    bl,BYTE PTR [esi+ebp*4-0x7c]
  41480b:	call   0x11ac:0xe6f849f0
  414812:	aas    
  414813:	add    BYTE PTR [eax+0x6d],dl
  414816:	test   BYTE PTR [ebx],bl
  414818:	test   eax,0x5e1569e9
  41481d:	ins    BYTE PTR es:[edi],dx
  41481e:	in     al,dx
  41481f:	mov    ah,0x3c
  414821:	add    al,0xe5
  414823:	pop    eax
  414824:	jns    0x4147d2
  414826:	cdq    
  414827:	call   0x6f3f:0xb52efbe9
  41482e:	jmp    0xaa27:0x21bee9c7
  414835:	push   ds
  414836:	(bad)  
  414837:	mul    DWORD PTR [esi-0x3f]
  41483a:	xchg   BYTE PTR [ebp+edx*2-0x11e8e9ea],dl
  414841:	cdq    
  414842:	fcmove st,st(5)
  414844:	aam    0x35
  414846:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414847:	popa   
  414848:	push   0xc8ca0a4d
  41484d:	xor    bl,BYTE PTR [eax+ebp*1+0x7d71e7e]
  414854:	stc    
  414855:	jl     0x4148a9
  414857:	sbb    edx,DWORD PTR [ebx]
  414859:	xchg   edi,eax
  41485a:	adc    bh,dh
  41485c:	sub    eax,DWORD PTR [ecx+0x6d]
  41485f:	popf   
  414860:	mov    ebx,0xc2112e37
  414865:	fs xchg edi,eax
  414867:	int    0xd0
  414869:	jmp    0x414862
  41486b:	pop    ds
  41486c:	bound  eax,QWORD PTR [edx-0xc]
  41486f:	xor    ch,BYTE PTR [ecx+esi*1]
  414872:	(bad)  
  414873:	retf   
  414874:	mov    esp,0xa7c4bb70
  414879:	into   
  41487a:	sar    BYTE PTR [edi-0x2ccbf4f0],cl
  414880:	xor    bl,BYTE PTR [eax]
  414882:	sub    al,0x74
  414884:	jbe    0x414835
  414886:	ror    DWORD PTR [edi+0x42b49d02],1
  41488c:	mov    ?,WORD PTR [eax+0x5d]
  41488f:	les    esp,FWORD PTR [esi+0x7f4edf7f]
  414895:	pop    ecx
  414896:	adc    al,0x0
  414898:	adc    dl,BYTE PTR [ebp+0x559f64a2]
  41489e:	xlat   BYTE PTR ds:[ebx]
  41489f:	xchg   ebx,eax
  4148a0:	jae    0x414884
  4148a2:	lahf   
  4148a3:	add    DWORD PTR [eax-0x20],0xffffffe6
  4148a7:	pop    esp
  4148a8:	adc    ebx,DWORD PTR [eax+0x4b]
  4148ab:	adc    cl,BYTE PTR [edi+edx*8]
  4148ae:	bound  esi,QWORD PTR [esi-0x466a4916]
  4148b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148b5:	cld    
  4148b6:	and    eax,0x95bfc530
  4148bb:	sbb    eax,edx
  4148bd:	aam    0xbf
  4148bf:	fnsave [edi-0x4303afe1]
  4148c5:	das    
  4148c6:	sub    eax,0xb6a69f8f
  4148cb:	cmp    DWORD PTR ds:0x84ec165a,0xffffffcc
  4148d2:	add    DWORD PTR ds:0xe530ec75,edi
  4148d8:	add    eax,0x39b7641f
  4148dd:	data16 mov es:0x949e6676,al
  4148e4:	adc    al,0x61
  4148e6:	pushf  
  4148e7:	push   ss
  4148e8:	push   ecx
  4148e9:	adc    eax,0x87edbc01
  4148ee:	and    al,0x20
  4148f0:	retf   0xa7f
  4148f3:	in     eax,dx
  4148f4:	retf   
  4148f5:	std    
  4148f6:	mov    bh,0x77
  4148f8:	jg     0x414960
  4148fa:	jno    0x41496e
  4148fc:	and    dh,BYTE PTR [ebx-0x52e1fd6f]
  414902:	fdiv   QWORD PTR [ecx]
  414904:	into   
  414905:	shr    BYTE PTR [eax-0x54],0xcb
  414909:	jge    0x414988
  41490b:	xchg   edi,eax
  41490c:	jo     0x4148a7
  41490e:	push   es
  41490f:	hlt    
  414910:	psubd  mm6,QWORD PTR [edi-0x1f]
  414914:	and    bh,cl
  414916:	and    al,0x7
  414918:	scas   eax,DWORD PTR es:[edi]
  414919:	out    0x18,al
  41491b:	push   0x159bea06
  414920:	lods   eax,DWORD PTR ds:[esi]
  414921:	je     0x414981
  414923:	cmp    ah,bl
  414925:	pop    ecx
  414926:	sub    edi,DWORD PTR [edi]
  414928:	loope  0x41498f
  41492a:	cmc    
  41492b:	xchg   DWORD PTR [ebx-0xdb10329],esi
  414931:	sbb    ah,0x31
  414934:	in     eax,dx
  414935:	mov    cl,BYTE PTR [ebx+esi*4+0x4c7bc99]
  41493c:	cdq    
  41493d:	repz push 0xc756a931
  414943:	xor    esi,DWORD PTR [ecx+ecx*2-0x6e]
  414947:	(bad)  
  414948:	nop
  414949:	jbe    0x4148d8
  41494b:	mov    eax,0x13f38fb4
  414950:	xor    ecx,DWORD PTR [edi]
  414952:	popf   
  414953:	xor    ebx,0x50eecae0
  414959:	jns    0x414990
  41495b:	adc    BYTE PTR [esi-0x311e3a27],0x79
  414962:	jne    0x4149dd
  414964:	push   esp
  414965:	call   0x13a99d62
  41496a:	sub    al,BYTE PTR [esi+0x6cd5c9c5]
  414970:	outs   dx,DWORD PTR ds:[esi]
  414971:	in     al,0x5f
  414973:	mov    ebp,0xe49fda56
  414978:	imul   edi,DWORD PTR [edx-0x10b6253c],0xde99c110
  414982:	call   0xa4da89dd
  414987:	mov    dl,0x48
  414989:	mov    eax,ds:0xc3400807
  41498e:	test   BYTE PTR [esi-0x32],al
  414991:	adc    dh,BYTE PTR [edi]
  414993:	mov    dh,0xa0
  414995:	mov    BYTE PTR [ebx],al
  414997:	dec    ecx
  414998:	lods   al,BYTE PTR ds:[esi]
  414999:	or     al,0xc3
  41499b:	jmp    0x4149ab
  41499d:	xlat   BYTE PTR ds:[ebx]
  41499e:	inc    edi
  41499f:	out    dx,eax
  4149a0:	les    esp,FWORD PTR [edx]
  4149a2:	in     eax,dx
  4149a3:	out    dx,eax
  4149a4:	mov    ah,0x29
  4149a6:	pop    esi
  4149a7:	cdq    
  4149a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149a9:	cdq    
  4149aa:	pusha  
  4149ab:	fwait
  4149ac:	fs ins DWORD PTR es:[edi],dx
  4149ae:	mov    ebp,ecx
  4149b0:	xchg   esp,eax
  4149b1:	inc    ecx
  4149b2:	adc    dl,BYTE PTR ds:0x71e86ee5
  4149b8:	jge    0x4149b3
  4149ba:	xor    esp,edi
  4149bc:	jecxz  0x4149f2
  4149be:	jl     0x4149c8
  4149c0:	pop    es
  4149c1:	outs   dx,DWORD PTR ds:[esi]
  4149c2:	add    dl,bh
  4149c4:	cmp    al,0xec
  4149c6:	push   ds
  4149c7:	into   
  4149c8:	repz push esp
  4149ca:	(bad)  
  4149cb:	int    0x5f
  4149cd:	cli    
  4149ce:	inc    ebp
  4149cf:	nop
  4149d0:	shl    BYTE PTR [ebx-0x663b0e44],1
  4149d6:	cmp    eax,0x29f353b0
  4149db:	ins    DWORD PTR es:[edi],dx
  4149dc:	and    al,0x72
  4149de:	and    esi,DWORD PTR cs:[ecx+0x34c9d65]
  4149e5:	lahf   
  4149e6:	daa    
  4149e7:	lods   eax,DWORD PTR ds:[esi]
  4149e8:	es add al,0x6e
  4149eb:	cmp    DWORD PTR [ebx],0x607b83f8
  4149f1:	pop    esp
  4149f2:	loopne 0x414985
  4149f4:	aad    0xc1
  4149f6:	imul   ebx,DWORD PTR [eax+0x4f8f7aa0],0xadcc1cc0
  414a00:	retf   0x5651
  414a03:	and    ebx,DWORD PTR [esi-0x5e3e5238]
  414a09:	push   cs
  414a0a:	push   DWORD PTR [ecx+0x4ebbfa6e]
  414a10:	cmc    
  414a11:	test   BYTE PTR [edx+edx*2+0x64],dl
  414a15:	ja     0x4149ba
  414a17:	nop
  414a18:	cdq    
  414a19:	and    al,0x4a
  414a1b:	loopne 0x414a25
  414a1d:	xchg   esp,eax
  414a1e:	mov    ds:0x42d73605,eax
  414a23:	sbb    ah,BYTE PTR [edx-0x48]
  414a26:	out    dx,al
  414a27:	jle    0x4149b2
  414a29:	and    ebp,DWORD PTR ds:0xc68333e8
  414a2f:	test   eax,0x7777dff6
  414a34:	adc    eax,0x35c7f395
  414a39:	jmp    0x497e:0x134db01e
  414a40:	and    dl,BYTE PTR ds:0x63713483
  414a46:	xchg   ecx,eax
  414a47:	adc    al,0xf9
  414a49:	stos   BYTE PTR es:[edi],al
  414a4a:	shl    DWORD PTR [eax],1
  414a4c:	push   es
  414a4d:	or     bl,bh
  414a4f:	sub    eax,0x14d75bd0
  414a54:	sti    
  414a55:	inc    esp
  414a56:	adc    BYTE PTR [ecx*1-0x77f899f8],bh
  414a5d:	(bad)  
  414a5e:	pushf  
  414a5f:	icebp  
  414a60:	ins    DWORD PTR es:[edi],dx
  414a61:	aam    0xe6
  414a63:	hlt    
  414a64:	outs   dx,BYTE PTR ds:[esi]
  414a65:	jno    0x414a6b
  414a67:	mov    ds:0x3b13109f,al
  414a6c:	nop
  414a6d:	jmp    0x542a:0x28f4ac9d
  414a74:	or     BYTE PTR [edi],dh
  414a76:	(bad)  
  414a77:	mov    ah,0x31
  414a79:	test   al,0x25
  414a7b:	jno    0x414a16
  414a7d:	fcompp 
  414a7f:	mov    dl,0x73
  414a81:	inc    ebp
  414a82:	loopne 0x414aa8
  414a84:	or     al,0x5
  414a86:	mov    edx,0x5eb7705d
  414a8b:	mov    ebp,0xbfcf145
  414a90:	adc    al,0x66
  414a92:	scas   eax,DWORD PTR es:[edi]
  414a93:	aas    
  414a94:	fcom   st(3)
  414a96:	mov    DWORD PTR [edx-0x46],edi
  414a99:	inc    esp
  414a9a:	mov    esp,0x410779ca
  414a9f:	scas   eax,DWORD PTR es:[edi]
  414aa0:	adc    DWORD PTR [esi],0xffffffe0
  414aa3:	cmp    DWORD PTR gs:[ebp-0x4c],ebp
  414aa7:	neg    DWORD PTR [edx+0x33]
  414aaa:	fistp  QWORD PTR [edx-0x735f2e00]
  414ab0:	and    BYTE PTR [ebx+0xf996ee1],0xd
  414ab7:	xlat   BYTE PTR ds:[ebx]
  414ab8:	dec    ecx
  414ab9:	cmp    ebp,DWORD PTR [eax+0x730de09f]
  414abf:	jne    0x414b0b
  414ac1:	xchg   ebx,eax
  414ac2:	jmp    DWORD PTR [ecx+0x38f6bdba]
  414ac8:	cli    
  414ac9:	mov    ah,0x7a
  414acb:	inc    ecx
  414acc:	int    0xa9
  414ace:	or     eax,0x15f6eb98
  414ad3:	imul   esp,DWORD PTR [esi-0x7],0xffffff96
  414ad7:	mov    ecx,0x73526f84
  414adc:	cmp    eax,0xaec04903
  414ae1:	mov    ecx,DWORD PTR [edi]
  414ae3:	mov    ds:0xe97d5cc3,eax
  414ae8:	in     eax,dx
  414ae9:	mov    eax,ds:0x2e06ed57
  414aee:	je     0x414b16
  414af0:	sbb    ch,cl
  414af2:	or     BYTE PTR [eax-0x68],bh
  414af5:	fdivp  st(4),st
  414af7:	mov    dh,0x9a
  414af9:	jmp    0xf314:0x3dde8332
  414b00:	shr    ebp,0x10
  414b03:	mov    dl,0x54
  414b05:	adc    eax,0xd25bf902
  414b0a:	xor    ah,bl
  414b0c:	add    al,0xe3
  414b0e:	cs (bad) 
  414b10:	mov    ds:0x6c129a55,eax
  414b15:	mov    ah,0xa3
  414b17:	mov    edi,DWORD PTR [ebp-0x27]
  414b1a:	shl    DWORD PTR [eax+0x7fbe77a9],cl
  414b20:	les    esi,FWORD PTR [eax-0x6b9b63c7]
  414b26:	dec    ebx
  414b27:	dec    esi
  414b28:	rcr    DWORD PTR gs:[eax],1
  414b2b:	outs   dx,BYTE PTR ds:[esi]
  414b2c:	inc    eax
  414b2d:	into   
  414b2e:	jns    0x414ade
  414b30:	push   ebp
  414b31:	enter  0xee63,0xf0
  414b35:	inc    edi
  414b36:	cwde   
  414b37:	lods   eax,DWORD PTR ds:[esi]
  414b38:	jb     0x414b83
  414b3a:	jle    0x414b9d
  414b3c:	pop    esi
  414b3d:	fdivp  st(6),st
  414b3f:	xlat   BYTE PTR ds:[ebx]
  414b40:	leave  
  414b41:	mov    edx,0xb14bbcf9
  414b46:	push   ebp
  414b47:	mov    al,0x39
  414b49:	ds push 0x10d5aa9c
  414b4f:	ret    
  414b50:	ins    DWORD PTR es:[edi],dx
  414b51:	push   0x38fc46bb
  414b56:	push   ecx
  414b57:	fwait
  414b58:	jns    0x414b54
  414b5a:	dec    ebp
  414b5b:	jo     0x414b1e
  414b5d:	or     DWORD PTR [edi+esi*8+0x4c],ecx
  414b61:	shl    BYTE PTR ds:0x452e814a,1
  414b67:	jl     0x414b64
  414b69:	and    eax,0x2db79132
  414b6e:	das    
  414b6f:	dec    edx
  414b70:	cs inc esi
  414b72:	add    eax,0xc212294b
  414b77:	das    
  414b78:	jno    0x414b9e
  414b7a:	scas   al,BYTE PTR es:[edi]
  414b7b:	xchg   DWORD PTR [ebx+0x5e],eax
  414b7e:	xlat   BYTE PTR ds:[ebx]
  414b7f:	(bad)  
  414b80:	fmul   st,st(2)
  414b82:	mov    dh,0x7c
  414b84:	ficom  WORD PTR [esp+ecx*2-0x502a37bb]
  414b8b:	and    bl,BYTE PTR [ecx-0x54]
  414b8e:	pusha  
  414b8f:	jle    0x414b9c
  414b91:	aam    0x7b
  414b93:	xchg   esp,eax
  414b94:	pop    ds
  414b95:	xor    al,0x5f
  414b97:	stos   BYTE PTR es:[edi],al
  414b98:	pop    edi
  414b99:	call   0xe37d:0x5b2dcd23
  414ba0:	cmp    al,0x6
  414ba2:	aaa    
  414ba3:	lds    ebp,FWORD PTR [edx+0xdcf9a69]
  414ba9:	inc    edi
  414baa:	or     esp,esp
  414bac:	icebp  
  414bad:	sub    al,0xb5
  414baf:	out    dx,eax
  414bb0:	dec    ecx
  414bb1:	ret    
  414bb2:	xor    DWORD PTR [eax+0x27],ebx
  414bb5:	dec    ebx
  414bb7:	push   esp
  414bb8:	lds    ecx,FWORD PTR [edx+0x530f7bac]
  414bbe:	shl    DWORD PTR [ecx],cl
  414bc0:	std    
  414bc1:	test   al,0xe8
  414bc3:	fisub  WORD PTR [eax+0x31802da1]
  414bc9:	push   edi
  414bca:	je     0x414bfa
  414bcc:	(bad)  
  414bce:	push   0x85c98221
  414bd3:	iret   
  414bd4:	in     al,0x8
  414bd6:	sub    eax,0xb62e6537
  414bdb:	push   0x64133a62
  414be0:	fldenvw [eax-0x62]
  414be4:	lea    esp,[ebp+0x18]
  414be7:	push   edi
  414be8:	popa   
  414be9:	or     bl,BYTE PTR [edx]
  414beb:	mov    dl,0x7d
  414bed:	call   FWORD PTR ds:0x1634e03a
  414bf3:	sbb    al,0x7c
  414bf5:	push   edx
  414bf6:	mov    BYTE PTR [edx],bh
  414bf8:	aas    
  414bf9:	or     eax,DWORD PTR [ebp+0x1c594b57]
  414bff:	aad    0x9
  414c01:	inc    esp
  414c02:	das    
  414c03:	stc    
  414c04:	pop    ss
  414c05:	out    0xbf,eax
  414c07:	stc    
  414c08:	xchg   ebx,eax
  414c09:	(bad)  
  414c0a:	ret    
  414c0b:	ins    BYTE PTR es:[edi],dx
  414c0c:	jne    0x414c0a
  414c0e:	sbb    eax,0x8c21befd
  414c13:	jmp    DWORD PTR [eax+0x1c57154b]
  414c19:	push   cs
  414c1a:	inc    esi
  414c1b:	retf   0xa751
  414c1e:	cmp    ch,dl
  414c20:	or     ebx,DWORD PTR [esi-0x339e076c]
  414c26:	adc    DWORD PTR [ebx],eax
  414c28:	xchg   DWORD PTR [esi-0x43528c13],ecx
  414c2e:	xlat   BYTE PTR ds:[ebx]
  414c2f:	push   cs
  414c30:	and    eax,0x6f6959aa
  414c35:	sbb    al,0x30
  414c37:	add    eax,0x85f72f3e
  414c3c:	cmp    dh,BYTE PTR [eax-0x2553eb17]
  414c42:	(bad)  
  414c43:	jmp    0x237d:0xd0e5bab
  414c4a:	mov    edx,DWORD PTR [eax+0x28]
  414c4d:	dec    ebx
  414c4e:	cmp    cl,BYTE PTR [edx]
  414c50:	ins    BYTE PTR es:[edi],dx
  414c51:	cbw    
  414c53:	mov    ebp,DWORD PTR [edx]
  414c55:	(bad)  
  414c56:	enter  0x3acd,0x5c
  414c5a:	fiadd  WORD PTR [edx]
  414c5c:	test   eax,0x90f1d68
  414c61:	out    0xb6,al
  414c63:	mov    ebx,0x28693439
  414c68:	jg     0x414ccb
  414c6a:	test   ebx,ebp
  414c6c:	shl    edi,1
  414c6e:	sahf   
  414c6f:	jae    0x414c42
  414c71:	aam    0x54
  414c73:	adc    BYTE PTR [edx+0x43],bl
  414c76:	not    BYTE PTR [ecx+edi*8-0x7a]
  414c7a:	or     ch,BYTE PTR [ebx]
  414c7c:	fistp  DWORD PTR [ecx+0x4]
  414c7f:	std    
  414c80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c81:	inc    edx
  414c82:	enter  0x5142,0x8b
  414c86:	pop    ebx
  414c87:	sub    ebx,DWORD PTR [ebp-0x3a]
  414c8a:	xor    esp,eax
  414c8c:	rol    DWORD PTR [edx-0x79],1
  414c8f:	jmp    0x1c12:0xd4c12139
  414c96:	jno    0x414c39
  414c98:	push   ss
  414c99:	dec    ebp
  414c9a:	or     DWORD PTR [ebx],esi
  414c9c:	xchg   edi,eax
  414c9d:	jmp    0x414c83
  414c9f:	mov    WORD PTR [ecx+0x2bc6630c],es
  414ca5:	out    dx,eax
  414ca6:	cmp    DWORD PTR [eax-0x74],eax
  414ca9:	mov    WORD PTR [ebx+0x21096914],cs
  414caf:	jno    0x414cc5
  414cb1:	cmp    ah,BYTE PTR [esi+esi*2-0x15]
  414cb5:	mov    edx,0xa050435a
  414cba:	pop    ds
  414cbb:	mov    al,0x9
  414cbd:	(bad)  
  414cbe:	test   al,0xcc
  414cc0:	inc    ecx
  414cc1:	push   eax
  414cc2:	mov    ah,BYTE PTR [ebp-0x51]
  414cc5:	mov    ds:0x9d9cfbae,al
  414cca:	fisttp QWORD PTR [esi-0x71]
  414ccd:	lods   al,BYTE PTR ds:[esi]
  414cce:	push   ds
  414ccf:	sub    bh,BYTE PTR [ecx-0x53]
  414cd2:	or     BYTE PTR [eax-0x58],ch
  414cd5:	jmp    0x102bc711
  414cda:	cli    
  414cdb:	(bad)
  414cde:	cmp    DWORD PTR [edi+0x1abdd322],ecx
  414ce4:	push   ebx
  414ce5:	(bad)  
  414ce6:	push   edx
  414ce7:	ins    BYTE PTR es:[edi],dx
  414ce8:	mov    ebx,0x505689b2
  414ced:	mov    dl,0x72
  414cef:	cmp    eax,0x4ac3e230
  414cf4:	sub    BYTE PTR [edx+0x45],0x15
  414cf8:	sub    bl,BYTE PTR [ebx]
  414cfa:	or     BYTE PTR ds:0x39dacc2c,bl
  414d00:	sub    eax,0xe5c2fc7d
  414d05:	test   al,0x4d
  414d07:	fstp   st(7)
  414d09:	sbb    al,0xcf
  414d0b:	aad    0x11
  414d0d:	les    ebp,FWORD PTR [ebx-0x3ce72246]
  414d13:	scas   eax,DWORD PTR es:[edi]
  414d14:	sub    eax,0xd21c50be
  414d19:	push   eax
  414d1a:	test   al,0x74
  414d1c:	dec    ebx
  414d1d:	lock inc edi
  414d1f:	adc    al,0x32
  414d21:	cmp    eax,0x1e91a64f
  414d26:	scas   eax,DWORD PTR es:[edi]
  414d27:	test   DWORD PTR [edi+0x5d],edx
  414d2a:	cwde   
  414d2b:	cs inc esi
  414d2d:	adc    esi,edi
  414d2f:	and    DWORD PTR [ebp-0x5ce8575c],ecx
  414d35:	push   0xadab446f
  414d3a:	lods   eax,DWORD PTR ds:[esi]
  414d3b:	pop    ebx
  414d3c:	lods   al,BYTE PTR ds:[esi]
  414d3d:	mov    dh,ah
  414d3f:	xchg   ecx,eax
  414d40:	jmp    0x40d10d94
  414d45:	addr16 das 
  414d47:	imul   ecx,eax,0xfffffff6
  414d4a:	fwait
  414d4b:	sbb    edx,DWORD PTR ds:0x8484b654
  414d51:	loope  0x414d06
  414d53:	jbe    0x414d6a
  414d55:	scas   al,BYTE PTR es:[edi]
  414d56:	cmp    DWORD PTR [eax+0x1c6141a4],esp
  414d5c:	sti    
  414d5d:	mov    esi,0xc97a5555
  414d62:	fsubrp st(5),st
  414d64:	mov    BYTE PTR [eax-0x4f],0xf9
  414d68:	or     DWORD PTR [edx+0x73],ebx
  414d6b:	xchg   esp,ebx
  414d6d:	jecxz  0x414d7d
  414d6f:	inc    esi
  414d70:	pop    eax
  414d71:	call   0x722c:0x18c84c86
  414d78:	sbb    dh,BYTE PTR [esi]
  414d7a:	hlt    
  414d7b:	sahf   
  414d7c:	retf   0x10b8
  414d7f:	sub    al,0x38
  414d81:	sbb    al,BYTE PTR ds:0x7153c9ac
  414d87:	fwait
  414d88:	hlt    
  414d89:	gs test eax,0x775db7a8
  414d8f:	loopne 0x414d47
  414d91:	mov    cl,0x4
  414d93:	imul   ecx,DWORD PTR [edx-0x22ff144d],0xffffffba
  414d9a:	fcomip st,st(6)
  414d9c:	xor    esi,DWORD PTR [ebx]
  414d9e:	mov    ah,0xe7
  414da0:	or     ebp,DWORD PTR [eax]
  414da2:	mov    esp,0xafc94392
  414da7:	cmc    
  414da8:	(bad)  
  414da9:	adc    BYTE PTR [edx-0x72e64655],dl
  414daf:	and    BYTE PTR [ecx-0x1e],bh
  414db2:	jle    0x414dfc
  414db4:	(bad)  
  414db5:	jno    0x414dbd
  414db7:	push   ebp
  414db8:	fst    DWORD PTR [ecx]
  414dba:	cmp    al,0xcf
  414dbc:	mov    bl,0x5b
  414dbe:	or     eax,0x91b7e8c6
  414dc3:	mov    cl,0x2
  414dc5:	mov    eax,0x958ada9b
  414dca:	cwde   
  414dcb:	pop    edi
  414dcc:	jmp    0x41f0cbc1
  414dd1:	aam    0x39
  414dd3:	dec    ebx
  414dd4:	pusha  
  414dd5:	mov    ebp,0x84edd67e
  414dda:	cs push es
  414ddc:	or     ch,BYTE PTR [eax-0x1535aac1]
  414de2:	mov    eax,ds:0x3d834033
  414de7:	mov    eax,0xbc0357c3
  414dec:	mov    ecx,0x904a127f
  414df1:	loope  0x414d8d
  414df3:	nop
  414df4:	cwde   
  414df5:	shl    ebp,0x3e
  414df8:	xor    BYTE PTR [edx+0xd],dh
  414dfb:	mov    ebx,ecx
  414dfd:	scas   eax,DWORD PTR es:[edi]
  414dfe:	inc    ebp
  414e00:	div    eax
  414e02:	sbb    bh,BYTE PTR [edx+0x55]
  414e05:	retf   
  414e06:	mov    esp,0x58e60bdf
  414e0b:	mov    WORD PTR [ecx-0xa],ss
  414e0e:	les    ebp,FWORD PTR [esi]
  414e10:	cli    
  414e11:	pop    edi
  414e12:	outs   dx,DWORD PTR ds:[esi]
  414e13:	lds    ebp,FWORD PTR [ebx+edi*2]
  414e16:	cwde   
  414e17:	xchg   ebx,eax
  414e18:	int    0xfd
  414e1a:	mov    al,0x24
  414e1c:	inc    ebx
  414e1d:	pop    edx
  414e1e:	push   ecx
  414e1f:	add    eax,0x3f425351
  414e24:	scas   eax,DWORD PTR es:[edi]
  414e25:	jp     0x414e4d
  414e27:	pusha  
  414e28:	dec    ecx
  414e29:	sub    eax,DWORD PTR [ecx-0x576f5d15]
  414e2f:	xor    eax,0xdf2d51c0
  414e34:	mov    BYTE PTR [eax+0x389381de],ah
  414e3a:	mov    edx,0x1428e367
  414e3f:	inc    ebx
  414e40:	mov    eax,0xa3dc7ae7
  414e45:	or     eax,0x64554c65
  414e4a:	pop    ebx
  414e4b:	jnp    0x414ec6
  414e4d:	mov    dl,0x40
  414e4f:	xchg   BYTE PTR [esi-0x54],dl
  414e52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e53:	mov    ebp,0xf483a4ab
  414e58:	and    DWORD PTR [ecx+ecx*4-0x51358065],ebx
  414e5f:	add    ebp,ebp
  414e61:	mov    dh,0xca
  414e63:	jnp    0x414e55
  414e65:	aad    0x41
  414e67:	fadd   DWORD PTR cs:[esi+0x20ad1fe7]
  414e6e:	mov    DWORD PTR [edi-0x30d09e03],eax
  414e74:	hlt    
  414e75:	adc    al,0x34
  414e77:	or     eax,0x9cc29256
  414e7c:	retf   
  414e7d:	pop    eax
  414e7e:	idiv   BYTE PTR [eax+0x17]
  414e81:	push   esi
  414e82:	rol    DWORD PTR [ebx-0x33],cl
  414e85:	out    dx,al
  414e86:	mov    eax,ds:0x2210dcd
  414e8b:	sub    al,0x97
  414e8d:	gs leave 
  414e8f:	sub    ch,BYTE PTR [ebx]
  414e91:	and    eax,DWORD PTR [eax+0x4749e60d]
  414e97:	adc    DWORD PTR [ebp+0x9d25b4a],ecx
  414e9d:	pop    ss
  414e9e:	lds    ebp,FWORD PTR [edx]
  414ea0:	mov    eax,DWORD PTR [ebx]
  414ea2:	ins    BYTE PTR es:[edi],dx
  414ea3:	or     BYTE PTR [ecx],ch
  414ea5:	push   es
  414ea6:	mov    bh,0x9
  414ea8:	jmp    0x414efe
  414eaa:	dec    ecx
  414eab:	or     DWORD PTR [ecx],0x9e27c1c6
  414eb1:	mov    ecx,0x7966bfac
  414eb6:	fcmovnb st,st(5)
  414eb8:	ret    0x148
  414ebb:	push   esp
  414ebc:	hlt    
  414ebd:	enter  0x365a,0x79
  414ec1:	jl     0x414f38
  414ec3:	jg     0x414efe
  414ec5:	or     ecx,DWORD PTR [edx]
  414ec7:	sub    DWORD PTR [eax],ecx
  414ec9:	xchg   edx,eax
  414eca:	imul   esp,DWORD PTR [edx-0x76],0x36
  414ece:	mov    bl,0xc8
  414ed0:	daa    
  414ed1:	imul   ecx,DWORD PTR [eax],0xd27b5187
  414ed7:	xor    BYTE PTR [ebp-0x58],al
  414eda:	mov    ds:0xdb6b1c81,al
  414edf:	popf   
  414ee0:	std    
  414ee1:	clc    
  414ee2:	xor    BYTE PTR ds:0x3c43e42f,0x10
  414ee9:	xor    al,0x8c
  414eeb:	xlat   BYTE PTR ds:[ebx]
  414eec:	fiadd  DWORD PTR ds:0x518317e6
  414ef2:	or     eax,0xdf632eef
  414ef7:	xor    DWORD PTR [esi+0x30d6faf7],0xc
  414efe:	stos   BYTE PTR es:[edi],al
  414eff:	repnz or dl,BYTE PTR [eax+0x64]
  414f03:	xor    DWORD PTR ds:0x7b38cb3c,esi
  414f09:	pushf  
  414f0a:	xor    al,0x7e
  414f0c:	shr    BYTE PTR [esi-0x33],1
  414f0f:	xchg   eax,ebp
  414f11:	mov    edi,0x39610f97
  414f16:	in     al,0xd8
  414f18:	xchg   esi,eax
  414f19:	sub    eax,0xf50f3445
  414f1e:	xchg   DWORD PTR [ecx+0x47d24ffc],ecx
  414f24:	cmc    
  414f25:	out    0xd7,al
  414f27:	adc    ecx,DWORD PTR [ebx+0xe]
  414f2a:	neg    cl
  414f2c:	xlat   BYTE PTR ds:[ebx]
  414f2d:	loope  0x414f76
  414f2f:	mov    eax,ds:0x32617736
  414f34:	pop    es
  414f35:	jmp    0x414eb9
  414f37:	pop    edx
  414f38:	xor    al,BYTE PTR [eax-0x3b]
  414f3b:	cmp    esp,DWORD PTR [ebx-0x73]
  414f3e:	packuswb mm1,QWORD PTR [esi-0x37]
  414f42:	mov    cl,0x68
  414f44:	pop    eax
  414f45:	mov    bl,0xf5
  414f47:	and    DWORD PTR [eax+0x7bdd59ef],esi
  414f4d:	pop    esi
  414f4e:	sti    
  414f4f:	lock lds ecx,FWORD PTR [esi+0x3c]
  414f53:	adc    BYTE PTR [eax],ch
  414f55:	fwait
  414f56:	icebp  
  414f57:	fcom   QWORD PTR ds:0xcf99299d
  414f5d:	sbb    BYTE PTR [ecx+0x5d9f44c4],0xd4
  414f64:	fisubr WORD PTR ds:0x4e6e09de
  414f6a:	push   ss
  414f6b:	seta   BYTE PTR [ebp-0x1a]
  414f6f:	cmc    
  414f70:	add    DWORD PTR [esi-0x66],0x23
  414f74:	push   ebp
  414f75:	cmp    eax,0x34df2998
  414f7a:	cmp    al,0x80
  414f7c:	dec    edx
  414f7d:	push   0x59
  414f7f:	mov    ch,0x90
  414f81:	and    esi,DWORD PTR [esi]
  414f83:	xchg   ebx,eax
  414f84:	xor    eax,0x2fe149e5
  414f89:	pop    es
  414f8a:	or     BYTE PTR [ecx+ecx*2-0x4f],dl
  414f8e:	jge    0x414f7c
  414f90:	xlat   BYTE PTR ds:[ebx]
  414f91:	mov    DWORD PTR [ebx],esp
  414f93:	pop    esp
  414f94:	mov    esp,0xb1792d4a
  414f99:	add    ecx,esp
  414f9b:	jl     0x414fe3
  414f9d:	lods   eax,DWORD PTR fs:[esi]
  414f9f:	repz iret 
  414fa1:	xor    edx,DWORD PTR [edi-0x3fe5735]
  414fa7:	rcl    eax,1
  414fa9:	out    0x4c,al
  414fab:	das    
  414fac:	lods   eax,DWORD PTR ds:[esi]
  414fad:	ins    DWORD PTR es:[edi],dx
  414fae:	inc    esp
  414faf:	adc    BYTE PTR [edx-0x73],cl
  414fb2:	pop    ds
  414fb3:	jl     0x414f38
  414fb5:	test   al,0x34
  414fb7:	cli    
  414fb8:	sar    bh,1
  414fba:	or     BYTE PTR [ecx+0x49a7a092],dl
  414fc0:	push   esp
  414fc1:	pop    eax
  414fc2:	shl    esi,0x5
  414fc5:	xlat   BYTE PTR ds:[ebx]
  414fc6:	(bad)  
  414fc7:	mov    dh,0x21
  414fc9:	pop    ds
  414fca:	leave  
  414fcb:	sub    al,0xc1
  414fcd:	out    0xaf,al
  414fcf:	les    ecx,FWORD PTR cs:[esi+0x7f]
  414fd3:	arpl   WORD PTR [edi+0x65],dx
  414fd6:	jnp    0x414f89
  414fd8:	dec    eax
  414fd9:	and    cl,BYTE PTR [ebp-0x11]
  414fdc:	test   DWORD PTR [edx+0x8],ebp
  414fdf:	popa   
  414fe0:	push   0xffffffff
  414fe2:	lahf   
  414fe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fe4:	adc    eax,0xb738976a
  414fe9:	mov    ecx,0x4a12f64c
  414fee:	dec    edi
  414fef:	imul   edx,DWORD PTR [ebx],0x8
  414ff2:	or     al,0xc7
  414ff4:	in     eax,dx
  414ff5:	push   eax
  414ff6:	jns    0x41503e
  414ff8:	les    esi,FWORD PTR [edx]
  414ffa:	lds    esp,FWORD PTR [eax+ebx*8-0x22]
  414ffe:	sub    ch,dl
  415000:	repnz mov dl,0x5c
  415003:	mov    ds:0x40e0a96f,eax
  415008:	xor    eax,0xf36d50e2
  41500d:	xor    al,0x28
  41500f:	aam    0x7
  415011:	mov    edx,0x5589d0c2
  415016:	dec    edx
  415017:	cmp    edi,ebp
  415019:	jne    0x414fbb
  41501b:	shl    BYTE PTR [ebx*1+0x22cf179e],0xe9
  415023:	inc    ecx
  415024:	adc    edx,0x4835d204
  41502a:	inc    ecx
  41502b:	adc    dh,al
  41502d:	(bad)
  415032:	sbb    ebp,DWORD PTR [esi]
  415034:	jge    0x415008
  415036:	rcl    BYTE PTR [ebp+0x10],1
  415039:	mov    eax,0x2507c5f8
  41503e:	and    al,0x50
  415040:	les    edx,FWORD PTR [esi]
  415042:	call   0x4dcd:0x4591fa18
  415049:	ror    BYTE PTR [edx],cl
  41504b:	dec    ecx
  41504c:	rcl    ah,1
  41504e:	push   0xe9929a31
  415053:	inc    edx
  415054:	add    DWORD PTR [ecx+0x54],0x71
  415058:	into   
  415059:	imul   ebx,DWORD PTR [edx-0x2f499288],0x99b92978
  415063:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415064:	scas   al,BYTE PTR es:[edi]
  415065:	out    dx,eax
  415066:	mov    edi,0x80875c3f
  41506b:	and    BYTE PTR [eax+0x230fec48],cl
  415071:	out    dx,eax
  415072:	sub    al,BYTE PTR [edx]
  415074:	dec    ebp
  415075:	dec    esi
  415076:	dec    edx
  415077:	push   ds
  415078:	mov    ecx,0x713d9b12
  41507d:	fucomip st,st(7)
  41507f:	fwait
  415080:	dec    edx
  415081:	jmp    FWORD PTR [edx+0x1f2ec0ea]
  415087:	test   cl,dh
  415089:	dec    edx
  41508a:	test   BYTE PTR [ebx+0x21],al
  41508d:	in     eax,dx
  41508e:	push   edi
  41508f:	xchg   esp,eax
  415090:	es out dx,al
  415092:	ins    DWORD PTR es:[edi],dx
  415093:	mov    bh,0x60
  415095:	jns    0x415041
  415097:	push   edx
  415098:	mov    BYTE PTR [ecx+0xb],ch
  41509b:	pushf  
  41509c:	fld    QWORD PTR [edx]
  41509e:	and    esi,esi
  4150a0:	sub    DWORD PTR [ebp-0x10],0xcd3b1b19
  4150a7:	adc    DWORD PTR [eax-0x1a],eax
  4150aa:	and    dl,BYTE PTR [edi+0x20]
  4150ad:	push   ss
  4150ae:	mov    eax,ds:0x3e91506e
  4150b3:	sti    
  4150b4:	mov    ebp,0x9c5bdcda
  4150b9:	cmp    BYTE PTR [ecx+0x4996f938],0x43
  4150c0:	mov    ds:0x74092a92,al
  4150c5:	or     bh,BYTE PTR [eax-0x80]
  4150c8:	add    edi,DWORD PTR [edx]
  4150ca:	mov    ds:0xca38f8bc,al
  4150cf:	mov    eax,ds:0x6e4a05c2
  4150d4:	fdivr  st(1),st
  4150d6:	pop    ss
  4150d7:	dec    edi
  4150d8:	ret    
  4150d9:	mov    ah,0x71
  4150db:	jmp    0x4150a3
  4150dd:	mov    edx,0x1bc8b8fe
  4150e2:	sar    esi,0x34
  4150e5:	out    0x69,eax
  4150e7:	stc    
  4150e8:	in     al,0xf6
  4150ea:	mov    ebx,0xb52028ee
  4150ef:	data16 aas 
  4150f1:	test   DWORD PTR gs:[edx],ecx
  4150f4:	jbe    0x41513a
  4150f6:	ins    DWORD PTR es:[edi],dx
  4150f7:	mov    cs,WORD PTR [eax]
  4150f9:	pop    ecx
  4150fa:	lods   eax,DWORD PTR ds:[esi]
  4150fb:	adc    ecx,edi
  4150fd:	shr    dl,cl
  4150ff:	xchg   ecx,eax
  415100:	or     al,0x27
  415102:	ficomp WORD PTR [edi+esi*1]
  415105:	mov    eax,0x5608d8b1
  41510a:	stos   BYTE PTR es:[edi],al
  41510b:	xor    esp,ecx
  41510d:	scas   eax,DWORD PTR es:[edi]
  41510e:	add    cl,ch
  415110:	stc    
  415111:	mov    eax,es
  415113:	dec    ebp
  415114:	push   ds
  415115:	dec    ebx
  415116:	mov    ds:0x7466ebe0,al
  41511b:	xor    eax,0xc9ea04b6
  415120:	in     eax,0xf5
  415122:	xchg   edi,eax
  415123:	ret    0x3d12
  415126:	in     eax,0xbc
  415128:	loop   0x415111
  41512a:	stc    
  41512b:	fcom   DWORD PTR [ebx+eiz*4+0x167f5dc7]
  415132:	inc    ebx
  415133:	daa    
  415134:	fisub  WORD PTR ds:0x3f03a385
  41513a:	push   esi
  41513b:	mov    ecx,0xb41982a4
  415140:	inc    esp
  415141:	aad    0x1c
  415143:	pop    es
  415144:	pop    ebp
  415145:	scas   eax,DWORD PTR es:[edi]
  415146:	lahf   
  415147:	xlat   BYTE PTR ds:[ebx]
  415148:	and    DWORD PTR [esi-0x78365df3],esp
  41514e:	add    al,0x4e
  415150:	mov    bl,0xc0
  415152:	push   esp
  415153:	jae    0x4151a2
  415155:	mov    ecx,0x874450dd
  41515a:	lods   al,BYTE PTR ds:[esi]
  41515b:	adc    BYTE PTR [eax+edx*1],dl
  41515e:	or     ebx,DWORD PTR [ebx+0x4e]
  415161:	out    dx,al
  415162:	xor    eax,0x330e7e69
  415167:	and    DWORD PTR [esi+0x33fd42a5],eax
  41516d:	push   ebx
  41516e:	adc    al,0xb3
  415170:	fdiv   QWORD PTR [edx]
  415172:	xor    edi,edi
  415174:	loope  0x4151e7
  415176:	push   ds
  415177:	sub    al,0x91
  415179:	add    eax,esp
  41517b:	push   ebx
  41517c:	pop    ds
  41517d:	xchg   ecx,eax
  41517e:	mov    esi,0xb5d94902
  415183:	jmp    0x208c91f7
  415188:	dec    ebp
  415189:	ds mul ah
  41518c:	mov    cl,0x46
  41518e:	push   ebp
  41518f:	fisttp DWORD PTR [ecx+0x39]
  415192:	push   eax
  415193:	cmp    cl,BYTE PTR [esi-0x56fa2d72]
  415199:	mov    WORD PTR gs:[edx+0x17],?
  41519d:	cs into 
  41519f:	inc    esp
  4151a0:	push   ebx
  4151a1:	rcr    DWORD PTR [ebp+edi*8-0x1],1
  4151a5:	pop    eax
  4151a6:	je     0x41513f
  4151a8:	aas    
  4151a9:	sbb    al,0x61
  4151ab:	int3   
  4151ac:	leave  
  4151ad:	out    0x5a,eax
  4151af:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151b1:	shl    bl,1
  4151b3:	push   esp
  4151b4:	pop    esi
  4151b5:	xlat   BYTE PTR ds:[ebx]
  4151b6:	xchg   cl,bl
  4151b8:	cli    
  4151b9:	cmp    DWORD PTR [eax+0x4ac8fd96],edx
  4151bf:	sbb    al,0x3a
  4151c1:	pop    ebp
  4151c2:	xchg   ebp,eax
  4151c3:	sbb    DWORD PTR [ebp-0x3f],esp
  4151c6:	add    al,0x7e
  4151c8:	cmp    BYTE PTR [edi],cl
  4151ca:	cdq    
  4151cb:	adc    eax,0xea3f7827
  4151d0:	mov    edx,0xe1a66424
  4151d5:	pop    eax
  4151d6:	mov    ah,0x20
  4151d8:	xor    al,0xf1
  4151da:	ret    
  4151db:	mov    ds:0x45562cd9,al
  4151e0:	mov    edx,esp
  4151e2:	aad    0x34
  4151e4:	fisubr WORD PTR [edx]
  4151e6:	lahf   
  4151e7:	nop
  4151e8:	inc    ebx
  4151e9:	scas   eax,DWORD PTR es:[edi]
  4151ea:	xchg   ebx,eax
  4151eb:	xchg   esi,eax
  4151ec:	out    0xbb,eax
  4151ee:	call   0xc310:0x92687351
  4151f5:	into   
  4151f6:	clc    
  4151f7:	stos   DWORD PTR es:[edi],eax
  4151f8:	daa    
  4151f9:	inc    esp
  4151fa:	pop    edi
  4151fb:	push   ecx
  4151fc:	ror    edi,1
  4151fe:	xchg   ebx,eax
  4151ff:	push   ss
  415200:	mov    bh,BYTE PTR [eax-0x4b]
  415203:	shl    BYTE PTR [edx-0x684c3fe1],0x4
  41520a:	sbb    ecx,DWORD PTR [ecx+0x19fc8ca8]
  415210:	and    ebp,edi
  415212:	mov    bh,0x26
  415214:	cwde   
  415215:	mov    ah,0x59
  415217:	repnz mov ch,0x55
  41521a:	stos   BYTE PTR es:[edi],al
  41521b:	gs cld 
  41521d:	jae    0x415221
  41521f:	iret   
  415220:	inc    ebx
  415221:	out    dx,eax
  415222:	mov    ah,0xf2
  415224:	jbe    0x4151f7
  415226:	or     BYTE PTR [edx],dl
  415228:	leave  
  415229:	fist   WORD PTR ds:0x8cc7feee
  41522f:	dec    ebx
  415230:	call   0x7d2f371a
  415235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415236:	jns    0x41529d
  415238:	cld    
  415239:	sub    BYTE PTR [edx+ecx*8+0x4d],dl
  41523d:	xchg   edx,eax
  41523e:	inc    ecx
  41523f:	ror    DWORD PTR [edi+ecx*4-0x10ea0736],1
  415246:	mov    eax,ds:0xf85395e6
  41524b:	mov    ebp,0x575ef97c
  415250:	loope  0x415200
  415252:	lods   eax,DWORD PTR cs:[esi]
  415254:	mov    ds:0x299f2646,al
  415259:	jmp    0x35433a83
  41525e:	fwait
  41525f:	call   0x4086dbd1
  415264:	xor    esp,esi
  415266:	retf   0xdbd3
  415269:	call   0xcb3a98ba
  41526e:	dec    esp
  41526f:	daa    
  415270:	adc    esi,DWORD PTR [eax+edx*1-0x12e8fc0a]
  415277:	cmp    BYTE PTR [ecx],ch
  415279:	(bad)  
  41527a:	leave  
  41527b:	hlt    
  41527c:	fsubr  st(5),st
  41527e:	push   ebp
  41527f:	imul   ebx,DWORD PTR [ecx+eax*1-0x6af0b218],0xead9d4db
  41528a:	outs   dx,BYTE PTR ds:[esi]
  41528b:	sbb    ebx,DWORD PTR [eax+0x3f51a60d]
  415291:	into   
  415292:	das    
  415293:	nop
  415294:	ret    0xff1
  415297:	and    al,0x69
  415299:	lahf   
  41529a:	loopne 0x415246
  41529c:	imul   esi,ebp,0xddd7352d
  4152a2:	mov    al,ds:0xfea93f58
  4152a7:	xchg   ecx,eax
  4152a8:	pop    es
  4152a9:	cmp    al,0xe6
  4152ab:	inc    esi
  4152ac:	push   ebx
  4152ad:	aaa    
  4152ae:	xchg   esp,eax
  4152af:	mov    dh,0x17
  4152b1:	pop    edi
  4152b2:	sbb    al,0x52
  4152b4:	jnp    0x4152af
  4152b6:	push   es
  4152b7:	add    eax,DWORD PTR [ebp+0x20]
  4152ba:	das    
  4152bb:	jo     0x4152fc
  4152bd:	sub    bh,BYTE PTR [eax]
  4152bf:	or     edx,DWORD PTR [ecx-0x40]
  4152c2:	pop    ss
  4152c3:	inc    esi
  4152c4:	ret    0x2a6b
  4152c7:	and    ch,dl
  4152c9:	faddp  st(0),st
  4152cb:	pop    ds
  4152cc:	xchg   BYTE PTR [esi-0x44],dl
  4152cf:	mov    edx,0xbd9cc70a
  4152d4:	push   ds
  4152d5:	jbe    0x4152f7
  4152d7:	jp     0x4152ca
  4152d9:	out    dx,al
  4152da:	(bad)  
  4152db:	and    eax,0x322db808
  4152e0:	and    esi,0xffffffdb
  4152e3:	icebp  
  4152e4:	adc    DWORD PTR [ebp-0x17131bfb],edx
  4152ea:	test   al,0xf0
  4152ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152ed:	push   edi
  4152ee:	(bad)  
  4152ef:	mul    bh
  4152f1:	aas    
  4152f2:	xchg   ebx,eax
  4152f3:	or     al,0xdc
  4152f5:	sub    al,0x6a
  4152f7:	nop
  4152f8:	lds    esp,FWORD PTR [edi-0x5c]
  4152fb:	pop    edi
  4152fc:	xchg   ebp,eax
  4152fd:	aad    0xee
  4152ff:	cmp    DWORD PTR [edx+0x341314d],edx
  415305:	mov    WORD PTR [eax+0x71],fs
  415308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415309:	push   esp
  41530a:	adc    eax,0x3167da8e
  41530f:	pop    ds
  415310:	mov    BYTE PTR [edi],al
  415312:	push   0x14ce7499
  415317:	ins    BYTE PTR es:[edi],dx
  415318:	icebp  
  415319:	ja     0x415340
  41531b:	out    dx,eax
  41531c:	cmp    esi,edi
  41531e:	mov    dh,0xe
  415320:	inc    esi
  415321:	js     0x415300
  415323:	pop    edi
  415324:	push   ebx
  415325:	mov    ds:0x694aec7a,eax
  41532a:	cmp    ah,BYTE PTR [edx-0x1e]
  41532d:	lds    edx,FWORD PTR [ecx-0xfbe68d3]
  415333:	inc    ebp
  415334:	js     0x415320
  415336:	popf   
  415337:	test   DWORD PTR [edi+esi*1],ecx
  41533a:	jns    0x415324
  41533c:	jle    0x41534a
  41533e:	out    dx,al
  41533f:	out    dx,al
  415340:	shr    DWORD PTR [ebx-0x29],1
  415343:	pop    es
  415344:	es inc ebx
  415346:	ja     0x4153a6
  415348:	mov    cl,0x50
  41534a:	and    BYTE PTR [ecx+0x4e],0x88
  41534e:	loope  0x41538d
  415350:	xchg   DWORD PTR [eax],edi
  415352:	icebp  
  415353:	js     0x415381
  415355:	(bad)  [eax]
  415357:	std    
  415358:	scas   al,BYTE PTR es:[edi]
  415359:	push   edx
  41535a:	outs   dx,BYTE PTR ds:[esi]
  41535b:	push   ss
  41535c:	mov    bh,0xeb
  41535e:	sub    ch,ch
  415360:	adc    BYTE PTR [eax],bl
  415362:	scas   al,BYTE PTR es:[edi]
  415363:	and    eax,0xc1eaf87d
  415368:	cdq    
  415369:	rol    DWORD PTR [esi-0x1d],1
  41536c:	adc    cl,BYTE PTR [ebx]
  41536e:	int3   
  41536f:	or     al,BYTE PTR [ebx-0x3f14bde8]
  415375:	(bad)  
  415376:	not    BYTE PTR [edi*4+0x612c02e5]
  41537d:	cmp    dl,cl
  41537f:	les    edx,FWORD PTR [edx]
  415381:	mov    WORD PTR [edx+edx*8-0x73311a6a],ds
  415388:	lods   al,BYTE PTR ds:[esi]
  415389:	fs aad 0xfc
  41538c:	mov    BYTE PTR [ecx+0x6fa60793],bh
  415392:	scas   al,BYTE PTR es:[edi]
  415393:	loop   0x415336
  415395:	xor    bh,BYTE PTR [edx+0x9d43e40]
  41539b:	xchg   ebx,eax
  41539c:	xchg   ah,bl
  41539e:	call   0x2566:0xf161772
  4153a5:	sbb    esi,DWORD PTR [ebx-0xca8821a]
  4153ab:	sub    ebp,DWORD PTR [eax+edi*2+0x14ec60b8]
  4153b2:	(bad)  
  4153b3:	mov    ebp,0xe20ee7f3
  4153b8:	mov    ebp,0xbd2037d8
  4153bd:	sbb    BYTE PTR [ebx],0x97
  4153c0:	mov    eax,0x5a27b9ba
  4153c5:	je     0x415395
  4153c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153c8:	jo     0x41543e
  4153ca:	neg    ecx
  4153cc:	mov    ebx,0x9883da46
  4153d1:	ja     0x41540c
  4153d3:	icebp  
  4153d4:	(bad)  
  4153d5:	push   0x6d
  4153d7:	xchg   esp,eax
  4153d8:	stos   DWORD PTR es:[edi],eax
  4153d9:	arpl   si,dx
  4153db:	pop    ecx
  4153dc:	jnp    0x415432
  4153de:	pop    ss
  4153df:	(bad)  [edi]
  4153e1:	and    eax,0x3d183e8d
  4153e6:	mov    ds:0x5cf35443,al
  4153eb:	inc    ebp
  4153ec:	aad    0x96
  4153ee:	clc    
  4153ef:	sbb    eax,0xd6e442a3
  4153f4:	dec    edx
  4153f5:	stos   BYTE PTR es:[edi],al
  4153f6:	ins    BYTE PTR es:[edi],dx
  4153f7:	sbb    eax,0x9a73d610
  4153fc:	or     BYTE PTR [eax],dh
  4153fe:	pop    esi
  4153ff:	sub    ch,BYTE PTR [ebx+0x89a5115]
  415405:	(bad)  
  415406:	fbld   TBYTE PTR [esi-0x62a2e390]
  41540c:	cmp    al,0x54
  41540e:	cmp    eax,0x7830c2f1
  415413:	xchg   ebp,eax
  415414:	xor    bl,BYTE PTR [ebx]
  415416:	cld    
  415417:	sbb    BYTE PTR [edi+0x6e959f08],0x5f
  41541e:	push   esp
  41541f:	inc    edx
  415420:	pop    ds
  415421:	outs   dx,DWORD PTR ds:[esi]
  415422:	in     eax,dx
  415423:	test   eax,0x48e6dcb7
  415428:	mov    eax,ds:0x9d5b3b5e
  41542d:	inc    edi
  41542e:	fbld   TBYTE PTR [edi+0x7a]
  415431:	fimul  DWORD PTR [ecx+ecx*1-0x325fe126]
  415438:	pop    DWORD PTR [ebp-0x78]
  41543b:	add    DWORD PTR [ecx+0x3b],ebx
  41543e:	xchg   esp,eax
  41543f:	ins    DWORD PTR es:[edi],dx
  415440:	xchg   esp,eax
  415441:	fld    DWORD PTR [ecx+0x2b]
  415444:	add    DWORD PTR [ebx],0x35
  415447:	cdq    
  415448:	nop
  415449:	loop   0x4153e6
  41544b:	pop    ebx
  41544c:	retf   
  41544d:	xor    bh,cl
  41544f:	mov    ds:0x6aa40c5c,al
  415454:	xchg   edx,eax
  415455:	push   ds
  415456:	ds mov fs,ebp
  415459:	inc    ebx
  41545a:	dec    esp
  41545b:	lea    ebp,[edx]
  41545d:	sbb    bl,BYTE PTR [edi+0x36]
  415460:	out    dx,eax
  415461:	mov    bh,0x6a
  415463:	sar    BYTE PTR [ecx],cl
  415465:	cs test eax,0x69f1ac62
  41546b:	or     eax,0x10901899
  415470:	pop    ds
  415471:	pop    ecx
  415472:	add    WORD PTR [edi+0x4d43117a],si
  415479:	mov    ebx,?
  41547b:	lods   eax,DWORD PTR ds:[esi]
  41547c:	js     0x415448
  41547e:	and    BYTE PTR [edi],bh
  415480:	push   eax
  415481:	sbb    BYTE PTR [eax-0x6f52ef7c],ah
  415487:	ja     0x41548c
  415489:	call   0x4325:0xab7fa67f
  415490:	jns    0x41546e
  415492:	mov    al,0x55
  415494:	clc    
  415495:	mov    esp,0x10c2a907
  41549a:	xor    eax,0x9197b029
  41549f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154a0:	or     eax,0x43a95cc6
  4154a5:	mov    edx,0x5860ace
  4154aa:	sbb    DWORD PTR [ebx-0x12],0xa938116c
  4154b1:	repz mul BYTE PTR [ebx+0x57]
  4154b5:	into   
  4154b6:	jle    0x41545b
  4154b8:	out    dx,eax
  4154b9:	fwait
  4154ba:	ins    DWORD PTR es:[edi],dx
  4154bb:	sub    al,0xda
  4154bd:	pop    eax
  4154be:	xlat   BYTE PTR ds:[ebx]
  4154bf:	xchg   edx,eax
  4154c0:	sbb    eax,0x4adf8a80
  4154c5:	xor    DWORD PTR [edx+edx*1+0x5d987fdf],edi
  4154cc:	pushf  
  4154cd:	and    DWORD PTR [esi],0x69
  4154d0:	sbb    DWORD PTR [ebx+0x38],ebx
  4154d3:	ss push ebp
  4154d5:	push   edx
  4154d6:	hlt    
  4154d7:	int    0xac
  4154d9:	push   ss
  4154da:	jbe    0x41545e
  4154dc:	sbb    edx,DWORD PTR [ebx]
  4154de:	push   esp
  4154df:	ret    0x215f
  4154e2:	mov    edi,0xf9a3ea9e
  4154e7:	jnp    0x41552c
  4154e9:	push   ebx
  4154ea:	sub    al,0x2f
  4154ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154ed:	sub    eax,0x461b3194
  4154f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154f3:	jbe    0x41550a
  4154f5:	pop    ds
  4154f6:	or     al,BYTE PTR [ecx+0x40]
  4154f9:	mov    dl,BYTE PTR [esp+esi*8]
  4154fc:	mov    edx,0x5ae0c7c1
  415501:	cwde   
  415502:	hlt    
  415503:	(bad)  
  415504:	rol    DWORD PTR [eax],cl
  415506:	icebp  
  415507:	shl    al,0xc2
  41550a:	mov    es,eax
  41550c:	push   es
  41550d:	ds out 0xe6,eax
  415510:	jae    0x4154f4
  415512:	jl     0x4154cb
  415514:	and    DWORD PTR [edx+0x4fab1060],eax
  41551a:	pop    es
  41551b:	imul   esi,DWORD PTR [edx-0x5b],0xffffffc2
  41551f:	jmp    0xeeb4:0xb56b616e
  415526:	(bad)  
  415528:	sbb    al,0xd5
  41552a:	pop    ecx
  41552b:	ficom  WORD PTR [eax+0x2d16df05]
  415531:	inc    esi
  415532:	adc    al,BYTE PTR [edx]
  415534:	mov    ebx,0xdb4bdfd2
  415539:	jge    0x415581
  41553b:	daa    
  41553c:	xchg   edi,eax
  41553d:	cli    
  41553e:	jb     0x415524
  415540:	adc    edi,DWORD PTR [edi-0x6d]
  415543:	and    BYTE PTR [ebp-0x54027b47],dl
  415549:	punpckhwd mm3,QWORD PTR [ebp+0x68e5ddd]
  415550:	in     al,dx
  415551:	mov    dl,0xf6
  415553:	add    al,0xb9
  415555:	push   esp
  415556:	out    0xc9,al
  415558:	jno    0x41559e
  41555a:	mov    ch,0x2b
  41555c:	push   ds
  41555d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41555e:	cmp    BYTE PTR ds:0xc1c5f9e8,cl
  415564:	and    eax,DWORD PTR [edx]
  415566:	mov    cl,0xb3
  415568:	xor    ah,BYTE PTR [edx]
  41556a:	pop    es
  41556b:	jno    0x4155da
  41556d:	xchg   edi,eax
  41556e:	push   ecx
  41556f:	mov    al,0xfe
  415571:	neg    ah
  415573:	out    dx,al
  415574:	xchg   ebp,eax
  415575:	push   cs
  415576:	icebp  
  415577:	inc    edi
  415578:	mov    dl,0x73
  41557a:	mov    ch,0x44
  41557c:	ins    BYTE PTR es:[edi],dx
  41557d:	inc    esi
  41557e:	retf   0xd435
  415581:	loopne 0x415599
  415583:	add    bh,al
  415585:	and    ah,BYTE PTR [esi]
  415587:	(bad)  
  415588:	shl    BYTE PTR [edi],0xbd
  41558b:	les    edi,FWORD PTR [eax+0x57ddbc73]
  415591:	retf   
  415592:	cmp    DWORD PTR [esi+0x4814842e],eax
  415598:	cwde   
  415599:	mov    eax,ds:0x775fe911
  41559e:	push   edi
  41559f:	outs   dx,BYTE PTR ds:[esi]
  4155a0:	rcr    DWORD PTR [eax],cl
  4155a2:	arpl   bp,dx
  4155a4:	xor    DWORD PTR [ebx+0xe],ebx
  4155a7:	pop    edi
  4155a8:	bound  esi,QWORD PTR ds:[edi+0x1b820ff8]
  4155af:	and    eax,0xff241ced
  4155b4:	scas   eax,DWORD PTR es:[edi]
  4155b5:	ins    BYTE PTR es:[edi],dx
  4155b6:	imul   eax,DWORD PTR [eax-0x1c],0xf8c9873b
  4155bd:	lods   al,BYTE PTR ds:[esi]
  4155be:	test   BYTE PTR [esp+esi*1+0x6],0x47
  4155c3:	les    ebp,FWORD PTR [edx+edi*2+0x783ea4bc]
  4155ca:	mov    al,ds:0xfd97f5ab
  4155cf:	mov    esp,0x91aee942
  4155d4:	pop    eax
  4155d5:	in     al,0xab
  4155d7:	ss retf 0xc986
  4155db:	cwde   
  4155dc:	mov    gs,edi
  4155de:	fisttp QWORD PTR [esi+0x138f11e4]
  4155e4:	rcl    esi,cl
  4155e6:	dec    ecx
  4155e7:	mov    BYTE PTR [ebx-0x11ac5b7a],bh
  4155ed:	sti    
  4155ee:	pop    esi
  4155ef:	and    DWORD PTR [edx],ebp
  4155f1:	push   ecx
  4155f2:	add    ebx,DWORD PTR [ebx-0x6fa58ad3]
  4155f8:	pop    ds
  4155f9:	xchg   edx,eax
  4155fa:	add    dh,dh
  4155fc:	test   edi,eax
  4155fe:	gs sbb eax,0xc5d88b6a
  415604:	hlt    
  415605:	pop    ebx
  415606:	icebp  
  415607:	not    BYTE PTR [ecx-0x26c0a9da]
  41560d:	push   ss
  41560e:	dec    ecx
  41560f:	enter  0xf0fa,0xa1
  415613:	mov    edx,0xf915eeaa
  415618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415619:	xor    dl,BYTE PTR [edi-0x60]
  41561c:	and    BYTE PTR [edx],al
  41561e:	lods   al,BYTE PTR ds:[esi]
  41561f:	jno    0x4155ec
  415621:	jae    0x415647
  415623:	loop   0x4155d2
  415625:	dec    esp
  415626:	lahf   
  415627:	dec    ebp
  415628:	mov    ah,0xa8
  41562a:	xchg   DWORD PTR [ecx-0x71b31d8b],ecx
  415630:	out    0xf7,al
  415632:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  415634:	mov    esp,0x5f6bcf7e
  415639:	and    dl,dl
  41563b:	mov    dl,0xc1
  41563d:	rol    bh,0x5b
  415640:	push   0xffffffd0
  415642:	pop    ds
  415643:	pop    ebp
  415644:	jmp    0x4155e4
  415646:	push   eax
  415647:	sub    edx,DWORD PTR [ecx+0x69]
  41564a:	jg     0x415600
  41564c:	test   BYTE PTR [edx-0x18],dl
  41564f:	and    ch,BYTE PTR [ecx]
  415651:	gs fdiv st,st(1)
  415654:	sub    esi,ebx
  415656:	inc    ecx
  415657:	test   DWORD PTR [ebp-0x1e96a65c],edi
  41565d:	inc    esp
  41565e:	jg     0x415652
  415660:	xor    BYTE PTR [edi],ah
  415662:	cs cdq 
  415664:	fcmove st,st(2)
  415666:	mov    ds:0xe7fb398f,eax
  41566b:	adc    ebp,ebx
  41566d:	mov    eax,ds:0x2fe5524c
  415672:	rcl    BYTE PTR [eax-0x4cf4c70e],cl
  415678:	inc    ebp
  415679:	jns    0x4156ea
  41567b:	cld    
  41567c:	ret    0xe911
  41567f:	push   esi
  415680:	neg    DWORD PTR [ecx]
  415682:	cmp    dh,BYTE PTR [eax-0x7457f726]
  415688:	mov    eax,ds:0x369cdca4
  41568d:	jns    0x415673
  41568f:	add    al,BYTE PTR [ebp+0x41126504]
  415695:	jnp    0x41563b
  415697:	repnz std 
  415699:	xchg   edx,eax
  41569a:	fdiv   QWORD PTR [edi-0x3a]
  41569d:	or     al,0x20
  41569f:	xor    al,0xab
  4156a1:	mov    ebp,0x651a677f
  4156a6:	enter  0x7882,0x9b
  4156aa:	ja     0x415688
  4156ac:	inc    edx
  4156ad:	(bad)
  4156b1:	dec    ebx
  4156b2:	in     eax,0x46
  4156b4:	mov    ecx,0x48a71112
  4156b9:	shl    cl,1
  4156bb:	jo     0x4156e8
  4156bd:	add    al,0xa0
  4156bf:	jno    0x41564a
  4156c1:	or     ebx,DWORD PTR [ebx-0x19]
  4156c4:	es pop esp
  4156c6:	pop    ds
  4156c7:	ds cdq 
  4156c9:	add    al,0x8e
  4156cb:	pop    es
  4156cc:	sbb    esi,esi
  4156ce:	(bad)  
  4156d0:	sbb    DWORD PTR [ebx],esi
  4156d2:	cmp    al,0x89
  4156d4:	pushf  
  4156d5:	mov    ecx,0xf01d88c2
  4156da:	push   esi
  4156db:	not    BYTE PTR [ecx]
  4156dd:	sbb    ebp,ecx
  4156df:	cmp    al,0x7e
  4156e1:	into   
  4156e2:	sub    DWORD PTR [ebp+0x577e4511],eax
  4156e8:	repz fld TBYTE PTR [ecx+0x1f]
  4156ec:	cmp    al,0x2c
  4156ee:	inc    esp
  4156ef:	scas   al,BYTE PTR es:[edi]
  4156f0:	inc    edx
  4156f1:	outs   dx,BYTE PTR ds:[esi]
  4156f2:	cmp    BYTE PTR [eax+0x2d066790],dl
  4156f8:	mov    dh,0x88
  4156fa:	aaa    
  4156fb:	stos   DWORD PTR es:[edi],eax
  4156fc:	sub    BYTE PTR [ebp+edx*4-0x5ab4088e],al
  415703:	add    ebp,DWORD PTR [edx+0x65]
  415706:	pinsrw mm1,WORD PTR [edx+0xd],0x73
  41570b:	jecxz  0x41577b
  41570d:	fild   DWORD PTR [ecx+eax*4]
  415710:	push   ebp
  415711:	jmp    0x73871270
  415716:	mov    esp,0xc2c6aab3
  41571b:	adc    eax,0x16c4fa82
  415720:	cmp    eax,0x18e710b7
  415725:	ret    0x9d9a
  415728:	ins    DWORD PTR es:[edi],dx
  415729:	out    0x12,al
  41572b:	les    eax,FWORD PTR [edx-0x55d97dc7]
  415731:	sub    esi,DWORD PTR [esi+eiz*4+0x29]
  415735:	or     DWORD PTR [edi+0x50fd875d],ebx
  41573b:	cmp    DWORD PTR [edi+0x5eb1ef05],0xffffffa9
  415742:	fisub  DWORD PTR [ebx]
  415744:	cmp    ch,dh
  415746:	sar    BYTE PTR [eax-0x60d1e36c],1
  41574c:	or     al,0xf2
  41574e:	jns    0x4157c0
  415750:	out    dx,eax
  415751:	cdq    
  415752:	push   ebp
  415753:	mov    ds:0x8fb3b2dd,eax
  415758:	sub    al,0x83
  41575a:	ret    
  41575b:	sbb    ax,0x583f
  41575f:	loopne 0x4156ec
  415761:	int3   
  415762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415763:	mov    esi,0xb8c91e4c
  415768:	cld    
  415769:	je     0x415724
  41576b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41576c:	icebp  
  41576d:	retf   0xa263
  415770:	and    al,0xe3
  415772:	cmp    eax,0x9f949311
  415777:	jae    0x41572d
  415779:	xor    edi,DWORD PTR [esi+0x4c5c2471]
  41577f:	pop    esp
  415780:	js     0x41573c
  415782:	mov    bl,0x24
  415784:	in     al,dx
  415785:	xor    BYTE PTR ds:0xb5f26f3,dh
  41578b:	sar    DWORD PTR [ebp-0x65],0x69
  41578f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415790:	(bad)  
  415791:	neg    DWORD PTR [esi]
  415793:	inc    edx
  415794:	mov    ax,ds:0x82cbb298
  41579a:	xchg   esi,eax
  41579b:	mov    ds:0x409d5892,eax
  4157a0:	fnstsw WORD PTR [edi]
  4157a2:	pop    esi
  4157a3:	sbb    bh,BYTE PTR [edi]
  4157a5:	inc    esi
  4157a6:	ds repnz lahf 
  4157a9:	mov    ds:0x2797a645,al
  4157ae:	add    BYTE PTR [edx-0x32327c99],dl
  4157b4:	add    DWORD PTR [edx-0x220ab76c],0xe8988e5b
  4157be:	and    eax,0x84a37c01
  4157c3:	loope  0x415749
  4157c5:	add    BYTE PTR [edx+0x6671757c],bl
  4157cb:	pusha  
  4157cc:	stc    
  4157cd:	out    0x82,al
  4157cf:	push   esi
  4157d0:	(bad)  
  4157d1:	jecxz  0x415785
  4157d3:	mov    eax,0xafa7ab13
  4157d8:	or     ebx,ebp
  4157da:	push   DWORD PTR [ecx]
  4157dc:	jb     0x4157ea
  4157de:	xchg   edi,eax
  4157df:	mov    ds:0xfd9c976,eax
  4157e4:	jns    0x4157c2
  4157e6:	retf   0x7dad
  4157e9:	dec    esi
  4157ea:	retf   
  4157eb:	in     eax,dx
  4157ec:	mov    ebp,0x320b2b6b
  4157f1:	ss pop ss
  4157f3:	in     eax,dx
  4157f4:	pop    ds
  4157f5:	push   ds
  4157f6:	cs push ebx
  4157f8:	jb     0x415863
  4157fa:	rol    esi,1
  4157fc:	dec    eax
  4157fd:	es in  eax,0xb0
  415800:	push   0xffffffe8
  415802:	out    dx,al
  415803:	or     esp,esi
  415805:	loopne 0x415872
  415807:	xchg   ecx,eax
  415808:	mov    edi,0x4945dab7
  41580d:	imul   eax,DWORD PTR [ebx-0x135aba15],0xb45b216
  415817:	adc    ecx,DWORD PTR ds:0xc3a8f5f3
  41581d:	sbb    esp,esp
  41581f:	shl    DWORD PTR [ebx+0x3f5fb8eb],0x41
  415826:	repz jmp ecx
  415829:	jmp    0x6df0:0xecb6444c
  415830:	or     edx,edi
  415832:	push   0xd0d82a76
  415837:	adc    al,0x87
  415839:	ds sbb eax,0x23271bee
  41583f:	lahf   
  415840:	push   ds
  415841:	sub    edx,DWORD PTR [ebx+0x79c8efe2]
  415847:	and    ah,BYTE PTR [edi+0x4d0b7dcc]
  41584d:	hlt    
  41584e:	sar    DWORD PTR [esi+0x4d4cc75f],0x86
  415855:	les    ebp,FWORD PTR [ebx-0x1c5ef03d]
  41585b:	ror    DWORD PTR [edx],0x77
  41585e:	pop    esi
  41585f:	adc    edi,ebx
  415861:	ins    DWORD PTR es:[edi],dx
  415862:	mov    ds:0xb9863615,al
  415867:	lods   al,BYTE PTR ds:[esi]
  415868:	or     BYTE PTR [ecx],0xc0
  41586b:	dec    edx
  41586c:	mov    eax,0xa484c5be
  415871:	xchg   BYTE PTR [ebx+0x7fe806f3],dh
  415877:	mov    esi,0xe1c63050
  41587c:	adc    ebx,DWORD PTR [edi]
  41587e:	(bad)  [ebp+0x62cc3042]
  415884:	mov    ebx,0xfac483ed
  415889:	add    al,0xe9
  41588b:	cmp    eax,0x591be499
  415890:	mov    eax,0x863a1e7
  415895:	sti    
  415896:	push   0xd88b77d4
  41589b:	adc    al,0xa
  41589d:	mov    DWORD PTR [ecx],ebx
  41589f:	mov    ecx,0x8cd63e4c
  4158a4:	add    DWORD PTR [eax+0x142c70ac],edx
  4158aa:	popa   
  4158ab:	cmp    edx,esp
  4158ad:	push   eax
  4158ae:	out    dx,al
  4158af:	jmp    0x4158da
  4158b1:	imul   esi,DWORD PTR [ecx],0xffffff84
  4158b4:	cmp    al,0x68
  4158b6:	fnstcw WORD PTR [esp+edi*2]
  4158b9:	fnstsw WORD PTR [esi+0x7c]
  4158bc:	mov    ebp,0x750c56fa
  4158c1:	push   cs
  4158c2:	lea    esp,[esi-0x6]
  4158c5:	arpl   WORD PTR [esi+0x3e],cx
  4158c8:	xor    al,BYTE PTR [esp+edx*8]
  4158cb:	jmp    0x3064145d
  4158d0:	pop    ss
  4158d1:	loop   0x415888
  4158d3:	leave  
  4158d4:	repnz push ecx
  4158d6:	push   edx
  4158d7:	adc    DWORD PTR [edi+0x52],esp
  4158da:	aam    0xd5
  4158dc:	xlat   BYTE PTR ds:[ebx]
  4158dd:	lahf   
  4158de:	(bad)  
  4158df:	retf   0x823a
  4158e2:	lahf   
  4158e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158e4:	fild   DWORD PTR [edx+0x6a341e81]
  4158ea:	sbb    cl,dl
  4158ec:	es inc ebx
  4158ee:	xor    DWORD PTR [esi-0x50ca69f],ecx
  4158f4:	sub    DWORD PTR [esi],ebx
  4158f6:	idiv   DWORD PTR [ebp+0xfe78fde]
  4158fc:	sbb    BYTE PTR [ebp-0x33],bh
  4158ff:	pop    ebp
  415900:	sbb    DWORD PTR [eax-0x459b042c],edx
  415906:	mov    DWORD PTR [edx],ebx
  415908:	shl    BYTE PTR [edx+0x44300e0e],cl
  41590e:	in     eax,dx
  41590f:	pop    ebx
  415910:	and    al,0x6a
  415912:	inc    edi
  415913:	jne    0x415907
  415915:	aad    0x1
  415917:	mov    gs,WORD PTR [ecx+0x4a]
  41591a:	rol    cl,0xae
  41591d:	inc    esi
  41591e:	sub    dh,BYTE PTR [eax+ebp*1-0x1]
  415922:	add    al,0x25
  415924:	xchg   eax,ecx
  415926:	fadd   DWORD PTR [ebp+0x45]
  415929:	inc    eax
  41592a:	loope  0x415914
  41592c:	test   DWORD PTR [edi],edx
  41592e:	loop   0x415933
  415930:	push   eax
  415931:	pop    es
  415932:	pusha  
  415933:	cmp    ebp,DWORD PTR [ebx-0x4bd316dc]
  415939:	cmp    eax,0x95090d67
  41593e:	icebp  
  41593f:	cli    
  415940:	test   eax,0x48089303
  415945:	lock (bad) 
  415947:	leave  
  415948:	and    eax,0xdcbec4d6
  41594d:	(bad)  
  41594e:	and    dl,BYTE PTR [eax+0x14f5ba43]
  415954:	push   esi
  415955:	add    edx,ecx
  415957:	or     cl,BYTE PTR [edx+0x48a746b0]
  41595d:	jnp    0x4159b8
  41595f:	xchg   DWORD PTR [edi],edx
  415961:	cwde   
  415962:	jmp    0x2266:0xa309b2fe
  415969:	sbb    ch,al
  41596b:	xor    eax,0x7307be6c
  415970:	cwde   
  415971:	retf   
  415972:	loop   0x4159aa
  415974:	ss psraw mm4,mm1
  415978:	sub    edi,DWORD PTR [ecx+esi*4]
  41597b:	fistp  DWORD PTR [esi+0x8]
  41597e:	(bad)  
  41597f:	lods   eax,DWORD PTR ss:[esi]
  415981:	fisubr DWORD PTR [esi+0x123be505]
  415987:	push   ebp
  415988:	lock xchg edx,eax
  41598a:	dec    eax
  41598b:	pop    edi
  41598c:	sub    bh,ch
  41598e:	aaa    
  41598f:	sub    dl,BYTE PTR ds:0xe2b11bb
  415995:	adc    eax,0x2ffe47f8
  41599a:	inc    ebx
  41599b:	cmp    ah,0xcf
  41599e:	push   ebp
  41599f:	sbb    ch,bl
  4159a1:	or     dh,ch
  4159a3:	int3   
  4159a4:	jb     0x415951
  4159a6:	xor    al,0x55
  4159a8:	dec    ebx
  4159a9:	pop    edi
  4159aa:	sub    edx,eax
  4159ac:	sub    edx,DWORD PTR [ecx]
  4159ae:	add    eax,0x731f7ff4
  4159b3:	adc    al,0x8
  4159b5:	js     0x4159e1
  4159b7:	js     0x415977
  4159b9:	pop    esp
  4159ba:	sbb    DWORD PTR ds:0x7eff3c0c,0x5f
  4159c1:	popa   
  4159c2:	aad    0xe9
  4159c4:	inc    esp
  4159c5:	out    dx,eax
  4159c6:	jl     0x4159c6
  4159c8:	dec    ebx
  4159c9:	ret    
  4159ca:	(bad)  
  4159cb:	lock sub ecx,esi
  4159ce:	cwde   
  4159cf:	inc    edi
  4159d0:	jp     0x4159e4
  4159d2:	clc    
  4159d3:	inc    esp
  4159d4:	aaa    
  4159d5:	jno    0x415a48
  4159d7:	outs   dx,DWORD PTR ds:[esi]
  4159d8:	jae    0x4159da
  4159da:	sar    DWORD PTR ds:0x27560636,1
  4159e0:	sbb    al,0xd9
  4159e2:	and    DWORD PTR [eax-0x3ce16b2],ebx
  4159e8:	hlt    
  4159e9:	pop    esi
  4159ea:	push   edi
  4159eb:	adc    ch,BYTE PTR [ebp+0x381de030]
  4159f1:	icebp  
  4159f2:	or     DWORD PTR [ecx],0xd6e69382
  4159f8:	inc    ebx
  4159f9:	out    dx,al
  4159fa:	cmp    al,0x90
  4159fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159fd:	mov    eax,ds:0x54d62a53
  415a02:	gs (bad) 
  415a04:	or     dl,BYTE PTR [ecx-0x44]
  415a07:	outs   dx,DWORD PTR ds:[esi]
  415a08:	rcr    BYTE PTR [esi],cl
  415a0a:	mov    bh,0x92
  415a0c:	in     eax,dx
  415a0d:	fcmovb st,st(5)
  415a0f:	and    ecx,DWORD PTR [ebp-0x80]
  415a12:	cmp    DWORD PTR [ecx-0x64],eax
  415a15:	xor    al,0x66
  415a17:	sub    bl,BYTE PTR [edx]
  415a19:	sub    ch,cl
  415a1b:	outs   dx,BYTE PTR ds:[esi]
  415a1c:	dec    esp
  415a1d:	sub    BYTE PTR [ebp-0xe0196b1],bh
  415a23:	fbld   TBYTE PTR [edi+ecx*1]
  415a26:	adc    BYTE PTR [edi],cl
  415a28:	(bad)  
  415a29:	adc    dh,ch
  415a2b:	in     eax,dx
  415a2c:	pop    ds
  415a2d:	(bad)  
  415a2e:	sbb    DWORD PTR [ecx+0x7d],edi
  415a31:	inc    edi
  415a32:	xchg   edi,eax
  415a33:	pop    ds
  415a34:	jl     0x415a8a
  415a36:	sbb    DWORD PTR [eax],ebx
  415a38:	lea    ecx,[ebx]
  415a3a:	ss xchg esi,eax
  415a3c:	shl    DWORD PTR [ecx-0x158a5bd9],0x55
  415a43:	test   eax,0xdb27cf55
  415a48:	sbb    edi,DWORD PTR [ebx+0x1a2e679d]
  415a4e:	in     al,0x53
  415a50:	dec    eax
  415a51:	ins    DWORD PTR es:[edi],dx
  415a52:	dec    esi
  415a53:	loopne 0x415aa3
  415a55:	dec    ebx
  415a56:	and    cl,BYTE PTR [ebx]
  415a58:	call   0xf2dc0cd5
  415a5d:	mov    ch,0x98
  415a5f:	cmp    BYTE PTR [edi+0x2f4b03b3],bl
  415a65:	mov    ebx,0x9165d7b7
  415a6a:	call   0xa996b5ea
  415a6f:	jns    0x415a9f
  415a71:	pop    es
  415a72:	pop    ss
  415a73:	aam    0x13
  415a75:	out    0x57,al
  415a77:	ror    DWORD PTR [eax+eax*2+0x4207b06b],0xb5
  415a7f:	(bad)  
  415a81:	xor    eax,0xf496b913
  415a86:	nop
  415a87:	rcr    BYTE PTR [esi+edi*8-0x55],0x40
  415a8c:	pushf  
  415a8d:	repnz mov BYTE PTR [ecx],0xc2
  415a91:	cmp    DWORD PTR [esi+0x4b292556],edx
  415a97:	jo     0x415a64
  415a99:	pop    ebx
  415a9a:	mov    edx,DWORD PTR [ecx-0x56]
  415a9d:	jns    0x415a72
  415a9f:	leave  
  415aa0:	loopne 0x415a95
  415aa2:	pop    eax
  415aa3:	adc    al,0xe0
  415aa5:	push   ebx
  415aa6:	pop    ecx
  415aa7:	add    eax,0x152fa769
  415aac:	xchg   ebx,eax
  415aad:	lahf   
  415aae:	dec    eax
  415aaf:	push   edx
  415ab0:	fmul   QWORD PTR [edi-0x7bc1efd7]
  415ab6:	stos   BYTE PTR es:[edi],al
  415ab7:	call   0x1c89026c
  415abc:	ret    
  415abd:	inc    esp
  415abe:	sub    al,0x71
  415ac0:	push   ds
  415ac1:	imul   esi,ebp,0xffffffd7
  415ac4:	and    eax,0x943e677e
  415ac9:	push   ds
  415aca:	mov    ebp,0x3c08f0dc
  415acf:	cmp    ebx,eax
  415ad1:	dec    eax
  415ad2:	jmp    0x415b48
  415ad4:	es push ebx
  415ad6:	cmp    eax,0x94889392
  415adb:	fldenv [esi-0xdd716cd]
  415ae1:	outs   dx,DWORD PTR ds:[esi]
  415ae2:	sbb    ch,BYTE PTR [ebx]
  415ae4:	jne    0x415ace
  415ae6:	aas    
  415ae7:	scas   eax,DWORD PTR es:[edi]
  415ae8:	xor    BYTE PTR [ebx+ebx*8-0x4c],ch
  415aec:	cmp    DWORD PTR [edx-0x20],esi
  415aef:	stc    
  415af0:	push   ebx
  415af1:	cmp    eax,0xc97c45a2
  415af6:	pop    edx
  415af7:	jp     0x415aff
  415af9:	sti    
  415afa:	out    0xdb,al
  415afc:	rcl    al,1
  415afe:	aam    0x3b
  415b00:	mov    eax,0x563642db
  415b05:	jecxz  0x415b76
  415b07:	outs   dx,DWORD PTR ds:[esi]
  415b08:	adc    dl,dl
  415b0a:	mov    ebp,0xa774d2cc
  415b0f:	and    ch,BYTE PTR [edx]
  415b11:	dec    esp
  415b12:	mov    ebx,0x84ac40b0
  415b17:	mov    ch,0xfb
  415b19:	in     al,dx
  415b1a:	dec    ebp
  415b1b:	mov    al,ah
  415b1d:	push   es
  415b1e:	mov    eax,ds:0xa1c8ccdd
  415b23:	neg    BYTE PTR [ebp+0xc0134fc]
  415b29:	push   esp
  415b2a:	jmp    0xf605925a
  415b2f:	js     0x415ae4
  415b31:	pop    esp
  415b32:	sbb    eax,0x5499b82d
  415b37:	pusha  
  415b38:	iret   
  415b39:	rol    DWORD PTR [edx],1
  415b3b:	stos   BYTE PTR es:[edi],al
  415b3c:	mov    dh,0xc3
  415b3e:	push   ss
  415b3f:	adc    DWORD PTR [ebx],ebp
  415b41:	ret    
  415b42:	fadd   st,st(7)
  415b44:	mov    bl,0xe0
  415b46:	mov    ds:0x21f5eae4,al
  415b4b:	leave  
  415b4c:	ins    DWORD PTR es:[edi],dx
  415b4d:	minps  xmm0,XMMWORD PTR [edi-0x5fc2d9b2]
  415b54:	sar    DWORD PTR ds:0x36cb7b16,cl
  415b5a:	adc    dl,cl
  415b5c:	aaa    
  415b5d:	test   eax,0xc03ed3f2
  415b62:	push   DWORD PTR [ebx-0xfd4e636]
  415b68:	pop    esi
  415b69:	jg     0x415b76
  415b6b:	in     al,0x1d
  415b6d:	ins    DWORD PTR es:[edi],dx
  415b6e:	call   0x936e8d8e
  415b73:	jle    0x415bce
  415b75:	push   esi
  415b76:	mov    ah,0xb9
  415b78:	jb     0x415ba5
  415b7a:	sub    al,0x4d
  415b7c:	push   esi
  415b7d:	add    DWORD PTR [ebx],ebx
  415b7f:	xchg   edi,eax
  415b80:	(bad)  
  415b81:	mov    ds:0x44dd60d7,eax
  415b86:	arpl   WORD PTR [edx],bx
  415b88:	push   0x36fa249d
  415b8d:	(bad)  
  415b8e:	sbb    eax,0xf6ee6caa
  415b93:	iret   
  415b94:	das    
  415b95:	sub    esi,DWORD PTR [esi]
  415b97:	fld    TBYTE PTR [eax-0x1dbab07f]
  415b9d:	stc    
  415b9e:	mov    al,0xa7
  415ba0:	mov    edi,0x6430bee5
  415ba5:	dec    esi
  415ba6:	out    0x86,al
  415ba8:	scas   al,BYTE PTR es:[edi]
  415ba9:	xor    DWORD PTR [ecx+0x7e],edi
  415bac:	pop    ss
  415bad:	or     edx,DWORD PTR [ebx]
  415baf:	and    ebx,DWORD PTR [ebx+0x2d]
  415bb2:	push   edi
  415bb3:	fmul   QWORD PTR [eax+0x77]
  415bb6:	addr16 pop eax
  415bb8:	aaa    
  415bb9:	mov    edi,ebx
  415bbb:	xor    BYTE PTR [ebx],dl
  415bbd:	je     0x415c05
  415bbf:	push   edx
  415bc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bc1:	jle    0x415bc3
  415bc3:	aam    0xea
  415bc5:	fcomp  DWORD PTR [ebx+0x3b35109f]
  415bcb:	arpl   WORD PTR [ecx+0x3ab42478],bp
  415bd1:	inc    esi
  415bd2:	jmp    0x415bad
  415bd4:	dec    ebx
  415bd5:	push   esp
  415bd6:	sub    DWORD PTR [esi-0x70],eax
  415bd9:	std    
  415bda:	mov    ebp,0xab37858a
  415bdf:	inc    edx
  415be0:	pop    es
  415be1:	shl    ebx,0x96
  415be4:	cli    
  415be5:	cli    
  415be6:	iret   
  415be7:	sar    esp,1
  415be9:	pop    esi
  415bea:	pop    edx
  415beb:	push   esp
  415bec:	push   es
  415bed:	and    DWORD PTR [esp+eiz*2+0x10],ebx
  415bf1:	push   edx
  415bf2:	inc    eax
  415bf3:	xchg   DWORD PTR [esi],esp
  415bf5:	sbb    eax,0xe28edd50
  415bfa:	in     al,0x0
  415bfc:	jge    0x415bf6
  415bfe:	daa    
  415bff:	and    bh,BYTE PTR [eax+0x245522dc]
  415c05:	xchg   ecx,eax
  415c06:	pusha  
  415c07:	jns    0x415bf6
  415c09:	mov    bh,0x26
  415c0b:	add    ah,ch
  415c0d:	ins    BYTE PTR es:[edi],dx
  415c0e:	fstp   TBYTE PTR [ebx]
  415c10:	jno    0x415c27
  415c12:	ins    BYTE PTR es:[edi],dx
  415c13:	dec    ebx
  415c14:	jbe    0x415c05
  415c16:	cmp    cl,ch
  415c18:	cdq    
  415c19:	mov    ebp,0x52e3b06f
  415c1e:	mov    esi,0x8839f59f
  415c23:	ja     0x415c44
  415c25:	push   ecx
  415c26:	(bad)
  415c29:	in     al,dx
  415c2a:	and    dl,BYTE PTR [ecx]
  415c2c:	fnsetpm(287 only) 
  415c2e:	test   al,0x8d
  415c30:	clc    
  415c31:	and    DWORD PTR [edi+0x7e8e1cb],0xffffffc6
  415c38:	pushf  
  415c39:	cmp    BYTE PTR [ebp+0xb],0x42
  415c3d:	dec    esp
  415c3e:	dec    edx
  415c3f:	cs mov dh,cl
  415c42:	xchg   ebx,eax
  415c43:	rcl    BYTE PTR [esi-0x1f],0x5b
  415c47:	push   ecx
  415c48:	mov    al,0x8b
  415c4a:	jmp    0x4d55:0xbe4a5ec9
  415c51:	daa    
  415c52:	(bad)  
  415c53:	out    0x93,al
  415c55:	enter  0x72db,0xa7
  415c59:	out    dx,eax
  415c5a:	add    dl,dl
  415c5c:	mov    ds:0xa12301e2,al
  415c61:	push   esi
  415c62:	xor    BYTE PTR [esi+0x586821ce],bh
  415c68:	test   BYTE PTR [esi],bh
  415c6a:	jp     0x415c53
  415c6c:	jns    0x415ce2
  415c6e:	xlat   BYTE PTR ds:[ebx]
  415c6f:	xchg   esp,eax
  415c70:	stc    
  415c71:	ficom  WORD PTR [esi+0xc]
  415c74:	dec    eax
  415c75:	retf   0x6945
  415c78:	in     eax,0xf1
  415c7a:	in     eax,dx
  415c7b:	push   edi
  415c7c:	add    al,0xcc
  415c7e:	ds jae 0x415cd5
  415c81:	retw   0x8ff1
  415c85:	adc    al,0xc0
  415c87:	sbb    ch,BYTE PTR [ecx]
  415c89:	shr    DWORD PTR [esi],1
  415c8b:	jge    0x415cd9
  415c8d:	mov    ebx,0xc89cc818
  415c92:	mov    ebx,0x4e1c70eb
  415c97:	cwde   
  415c98:	sbb    BYTE PTR [ecx-0x2f59797d],0xa0
  415c9f:	xchg   ebx,eax
  415ca0:	popa   
  415ca1:	xor    esi,DWORD PTR [esi]
  415ca3:	adc    ch,BYTE PTR ds:0x54ff3c77
  415ca9:	fld    TBYTE PTR [ebp+0x7b0975cb]
  415caf:	in     al,0x85
  415cb1:	pop    ebx
  415cb2:	aaa    
  415cb3:	lock mov ebp,0xfd447517
  415cb9:	pushf  
  415cba:	enter  0x50cf,0x9a
  415cbe:	add    DWORD PTR [esi-0xe],eax
  415cc1:	outs   dx,BYTE PTR ds:[esi]
  415cc2:	sti    
  415cc3:	mov    bl,BYTE PTR [edx-0x20]
  415cc6:	jl     0x415c60
  415cc8:	outs   dx,BYTE PTR ds:[esi]
  415cc9:	es push ebx
  415ccb:	daa    
  415ccc:	cmp    cl,BYTE PTR [ebp-0x6c88189e]
  415cd2:	dec    DWORD PTR [ebx]
  415cd4:	jmp    0x415c9d
  415cd6:	mov    ebx,ss
  415cd8:	dec    ebp
  415cd9:	ss into 
  415cdb:	icebp  
  415cdc:	cwde   
  415cdd:	rcr    ebx,0xd7
  415ce0:	sbb    al,0xfc
  415ce2:	xor    DWORD PTR [eax],edi
  415ce4:	pop    esi
  415ce5:	repnz pop edi
  415ce7:	cs ror ch,1
  415cea:	adc    al,0x3e
  415cec:	daa    
  415ced:	ja     0x415cf8
  415cef:	jl     0x415d1d
  415cf1:	repnz pop edx
  415cf3:	int    0x77
  415cf5:	cmc    
  415cf6:	or     ecx,ebx
  415cf8:	xor    DWORD PTR [edx+0x40fba1a2],0x35
  415cff:	push   ecx
  415d00:	cli    
  415d01:	dec    edx
  415d02:	scas   al,BYTE PTR es:[edi]
  415d03:	cmp    BYTE PTR [ecx],cl
  415d05:	jl     0x415cb5
  415d07:	cmp    DWORD PTR [eax],edi
  415d09:	cmp    BYTE PTR [ecx-0x5f2e727],cl
  415d0f:	xchg   esi,eax
  415d10:	fist   WORD PTR [ecx-0x19a131b9]
  415d16:	pop    ebx
  415d17:	mov    dl,0x36
  415d19:	and    DWORD PTR [ebp+0x30],ecx
  415d1c:	cld    
  415d1d:	xchg   BYTE PTR [edi-0x5e184f8d],dh
  415d23:	adc    DWORD PTR [ecx-0x33462ab7],0x55
  415d2a:	mov    edx,0xf1a06c60
  415d2f:	and    al,ah
  415d31:	xchg   esp,eax
  415d32:	cwde   
  415d33:	ins    BYTE PTR es:[edi],dx
  415d34:	fidivr DWORD PTR ds:0xd784f31
  415d3a:	outs   dx,BYTE PTR ds:[esi]
  415d3b:	ds mov dh,bl
  415d3e:	es push 0x4d
  415d41:	(bad)  
  415d42:	aas    
  415d43:	mov    cl,0x2e
  415d45:	daa    
  415d46:	dec    eax
  415d47:	ret    0xfcdc
  415d4a:	sahf   
  415d4b:	das    
  415d4c:	xchg   esp,eax
  415d4d:	cwde   
  415d4e:	xor    edx,eax
  415d50:	jle    0x415d99
  415d52:	aad    0x10
  415d54:	mov    ebx,edi
  415d56:	retf   0xcbad
  415d59:	iret   
  415d5a:	ret    0x7969
  415d5d:	inc    ecx
  415d5e:	das    
  415d5f:	pop    ss
  415d60:	cmp    bl,BYTE PTR [ebx+ebp*8]
  415d63:	sbb    al,0x81
  415d65:	icebp  
  415d66:	les    eax,FWORD PTR [edi]
  415d68:	jge    0x415ddb
  415d6a:	jp     0x415cf9
  415d6c:	xor    al,0x9
  415d6e:	jg     0x415d28
  415d70:	mov    ecx,0x6d6f4a2f
  415d75:	push   0xffffffdb
  415d77:	dec    esp
  415d78:	jae    0x415df6
  415d7a:	mov    dh,0x5d
  415d7c:	jmp    0xfbf8ea3f
  415d81:	inc    ebp
  415d82:	adc    eax,0x2a770eaa
  415d87:	std    
  415d88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d89:	adc    dl,bh
  415d8b:	jb     0x415dbd
  415d8d:	pushf  
  415d8e:	push   es
  415d8f:	sub    DWORD PTR [edx-0x1bcef92d],ecx
  415d95:	into   
  415d96:	sbb    al,0x91
  415d98:	xor    edi,DWORD PTR [eax+0x16]
  415d9b:	sbb    BYTE PTR [eax+0x185fee5f],0xd2
  415da2:	push   esp
  415da3:	mov    al,ds:0x48f896b3
  415da8:	ja     0x415ded
  415daa:	push   edi
  415dab:	mov    eax,ds:0x2ae7b70
  415db0:	mov    esp,0x71363158
  415db5:	cmp    eax,0x5cd9d952
  415dba:	out    dx,al
  415dbb:	(bad)  
  415dbc:	les    esp,FWORD PTR [edx-0x5882cc82]
  415dc2:	dec    ebx
  415dc3:	aad    0xf0
  415dc5:	cmp    cl,BYTE PTR ds:0x22bc0dc2
  415dcb:	lds    ebx,FWORD PTR [eax+ebx*2]
  415dce:	push   ebx
  415dcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415dd0:	xor    esp,DWORD PTR [edi+0x40d5c772]
  415dd6:	in     al,0x27
  415dd8:	xchg   ecx,eax
  415dd9:	xor    DWORD PTR [ecx],0xb3839728
  415ddf:	scas   al,BYTE PTR es:[edi]
  415de0:	ror    DWORD PTR ds:0x305bcc1d,cl
  415de6:	mov    esp,0x6159e26
  415deb:	sbb    bl,BYTE PTR [edi]
  415ded:	clc    
  415dee:	cmp    eax,0x662ae179
  415df3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415df4:	push   ss
  415df5:	push   ebx
  415df6:	int    0xa4
  415df8:	popa   
  415df9:	sbb    ebp,DWORD PTR [ecx+esi*8+0x54]
  415dfd:	pop    edx
  415dfe:	mov    ecx,0xe031a3fa
  415e03:	call   0x5eae:0x6122c180
  415e0a:	xchg   ecx,esi
  415e0c:	push   ds
  415e0d:	and    BYTE PTR [edx],bl
  415e0f:	psubsw mm4,mm1
  415e12:	xor    eax,0x470c0f49
  415e17:	enter  0x35d7,0x52
  415e1b:	adc    esp,DWORD PTR [ecx-0x1ce2674e]
  415e21:	pop    esi
  415e22:	ret    
  415e23:	mov    WORD PTR gs:[ebx],ss
  415e26:	sbb    BYTE PTR [eax+0x50],0x9b
  415e2a:	loopne 0x415e6b
  415e2c:	sub    al,0x9c
  415e2e:	sahf   
  415e2f:	add    eax,0x9eee7012
  415e34:	add    BYTE PTR ds:0xe20c279e,bh
  415e3a:	(bad)  
  415e3b:	ja     0x415e4f
  415e3d:	jmp    0xbf42cce3
  415e42:	sub    eax,0x2b3bdf63
  415e47:	pop    es
  415e48:	(bad)  
  415e49:	push   ebx
  415e4a:	sbb    ecx,ecx
  415e4c:	inc    edx
  415e4d:	cld    
  415e4e:	jg     0x415dfe
  415e50:	lea    edx,[esi-0xf]
  415e53:	add    edi,edi
  415e55:	inc    edx
  415e56:	sbb    BYTE PTR [edi],ah
  415e58:	jge    0x415e58
  415e5a:	loopne 0x415df8
  415e5c:	test   DWORD PTR [edx+0x57],0x4aebc9bf
  415e63:	mov    esp,0x99956db7
  415e68:	mov    al,ds:0x2d15f543
  415e6d:	dec    ebx
  415e6e:	cmp    DWORD PTR [edx-0x22],0xffffffa6
  415e72:	(bad)  
  415e73:	retf   0x9ff8
  415e76:	mov    WORD PTR [ebx+0x641b5cb7],cs
  415e7c:	adc    BYTE PTR [ecx],dh
  415e7e:	js     0x415eb3
  415e80:	fwait
  415e81:	mov    gs,WORD PTR [edi-0x57971daa]
  415e87:	outs   dx,BYTE PTR ds:[esi]
  415e88:	mov    cl,BYTE PTR [edx-0x79ed7768]
  415e8e:	outs   dx,BYTE PTR ds:[esi]
  415e8f:	jg     0x415ecc
  415e91:	mov    al,ds:0x2d42ddfe
  415e96:	(bad)
  415e9a:	lods   al,BYTE PTR ds:[esi]
  415e9b:	add    eax,0x8ecb2c79
  415ea0:	stc    
  415ea1:	(bad)  
  415ea2:	ja     0x415e9a
  415ea4:	jne    0x415ea1
  415ea6:	call   0xb8edd924
  415eab:	xor    eax,0xf2c537ff
  415eb0:	scas   al,BYTE PTR es:[edi]
  415eb1:	sbb    DWORD PTR [ebx+0xe7025fe],esp
  415eb7:	cs mov eax,esi
  415eba:	ror    dl,1
  415ebc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ebd:	sub    ebp,esp
  415ebf:	xchg   edi,eax
  415ec0:	mov    ds:0xa7699d,al
  415ec5:	iret   
  415ec6:	pop    esp
  415ec7:	fs xchg edi,eax
  415ec9:	mov    BYTE PTR [ecx],cl
  415ecb:	jecxz  0x415ef4
  415ecd:	out    dx,al
  415ece:	cmp    DWORD PTR [esp+edx*2-0x13],ecx
  415ed2:	sub    ch,ch
  415ed4:	shr    DWORD PTR [edx],1
  415ed6:	lds    esi,FWORD PTR [edx-0x5c]
  415ed9:	outs   dx,DWORD PTR ds:[esi]
  415eda:	or     esp,esi
  415edc:	inc    edx
  415edd:	mov    edi,DWORD PTR [esi+edx*8-0x34e1bd5e]
  415ee4:	and    dh,BYTE PTR [edx+ebp*8-0x7b91885b]
  415eeb:	cs in  al,0x90
  415eee:	and    BYTE PTR [ebx],0xb4
  415ef1:	push   esi
  415ef2:	fcomp  st(4)
  415ef4:	cmp    eax,0x9cfdd7bc
  415ef9:	jae    0x415f29
  415efb:	out    0xa7,eax
  415efd:	xor    esi,DWORD PTR [ebx]
  415eff:	aaa    
  415f00:	shl    ecx,cl
  415f02:	and    BYTE PTR gs:[ebp-0x21],bl
  415f06:	scas   eax,DWORD PTR es:[edi]
  415f07:	(bad)  
  415f08:	repz icebp 
  415f0a:	xor    eax,DWORD PTR [edx+0x3bdcf830]
  415f10:	dec    eax
  415f11:	out    0x7f,eax
  415f13:	sbb    ebp,DWORD PTR ss:[esi]
  415f16:	add    esp,esi
  415f18:	fst    QWORD PTR [esi-0x9]
  415f1b:	sub    DWORD PTR [edi],ebp
  415f1d:	daa    
  415f1e:	int    0x7c
  415f20:	shr    DWORD PTR [ebp-0x76],1
  415f23:	sbb    BYTE PTR [edi-0x10b84160],al
  415f29:	cwde   
  415f2a:	out    0xa9,eax
  415f2c:	adc    al,dh
  415f2e:	xlat   BYTE PTR ds:[ebx]
  415f2f:	pop    edi
  415f30:	jl     0x415f10
  415f32:	jo     0x415f1f
  415f34:	lahf   
  415f35:	push   ds
  415f36:	dec    ecx
  415f37:	mov    edi,0xafcb04f4
  415f3c:	mov    esp,0x5e86ab4
  415f41:	in     eax,dx
  415f42:	shl    BYTE PTR [edx],cl
  415f44:	xchg   esp,eax
  415f45:	lahf   
  415f46:	je     0x415ee8
  415f48:	imul   ecx,esp,0xffffff8c
  415f4b:	ja     0x415ef5
  415f4d:	popa   
  415f4e:	add    eax,0x9cd4fccb
  415f53:	and    edx,ebp
  415f55:	and    ah,bh
  415f57:	mov    cl,ah
  415f59:	test   BYTE PTR [edi],bh
  415f5b:	add    eax,0x5414f9e3
  415f60:	in     al,0xdc
  415f62:	div    BYTE PTR [ebx+0x41f87966]
  415f68:	xorps  xmm2,xmm7
  415f6b:	or     eax,0xd65d20ee
  415f70:	(bad)  
  415f71:	jno    0x415efc
  415f73:	cmp    al,0xa9
  415f75:	mov    bh,0x4b
  415f77:	jge    0x415f0c
  415f79:	add    eax,0xada52723
  415f7e:	ins    DWORD PTR es:[edi],dx
  415f7f:	pop    ss
  415f80:	sbb    eax,0x330d03d9
  415f85:	sub    ecx,DWORD PTR [edi+ecx*4-0x12f802ca]
  415f8c:	fwait
  415f8d:	jne    0x415f13
  415f8f:	jo     0x415f19
  415f91:	lea    esp,[edi]
  415f93:	outs   dx,DWORD PTR ds:[esi]
  415f94:	xor    dh,cl
  415f96:	ins    DWORD PTR es:[edi],dx
  415f97:	sti    
  415f98:	mov    cl,0x92
  415f9a:	xor    BYTE PTR [ebx],al
  415f9c:	icebp  
  415f9d:	jp     0x415f9f
  415f9f:	test   dl,0x38
  415fa2:	mov    WORD PTR [edx],?
  415fa4:	(bad)  
  415fa6:	mov    ecx,0x87a8aa97
  415fab:	mov    esp,0x6e60db10
  415fb0:	or     eax,0x7598f2d6
  415fb5:	aas    
  415fb6:	push   ecx
  415fb7:	aaa    
  415fb8:	jl     0x415fd6
  415fba:	add    al,0xac
  415fbc:	aas    
  415fbd:	mov    edx,esi
  415fbf:	jg     0x415ffe
  415fc1:	mov    al,0x12
  415fc3:	mov    ?,ecx
  415fc5:	mov    ds,WORD PTR [ecx]
  415fc7:	pop    ds
  415fc8:	aad    0x8b
  415fca:	in     eax,0x22
  415fcc:	xchg   ebp,eax
  415fcd:	scas   al,BYTE PTR es:[edi]
  415fce:	mov    ds:0x59c0769b,eax
  415fd3:	xchg   esp,eax
  415fd4:	inc    esp
  415fd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fd6:	int3   
  415fd7:	es scas al,BYTE PTR es:[edi]
  415fd9:	mov    ebp,0xcf63c991
  415fde:	mov    ebx,0xaa79b61
  415fe3:	cmp    DWORD PTR [edi],ebp
  415fe5:	sbb    cl,BYTE PTR [eax-0x74]
  415fe8:	in     eax,dx
  415fe9:	xchg   ebp,eax
  415fea:	lahf   
  415feb:	jnp    0x41604b
  415fed:	(bad)  
  415fee:	leave  
  415fef:	mov    al,0xc2
  415ff1:	mov    ch,0x49
  415ff3:	fild   WORD PTR [esi-0x5]
  415ff6:	adc    eax,0x1ee2987d
  415ffb:	int3   
  415ffc:	pop    ebx
  415ffd:	cwd    
  415fff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416000:	jmp    0x41606e
  416002:	pop    ebx
  416003:	adc    ebp,DWORD PTR [esi+0x29e65d1c]
  416009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41600a:	inc    ebp
  41600b:	sbb    eax,0xeab100d8
  416010:	(bad)  
  416011:	rcr    DWORD PTR [edx-0x3989317f],0xc7
  416018:	cmp    BYTE PTR [ebx+0x31fe5f93],bl
  41601e:	mov    esp,DWORD PTR [esi-0x219111c1]
  416024:	add    cl,bl
  416026:	ins    DWORD PTR es:[edi],dx
  416027:	aad    0x38
  416029:	fsub   DWORD PTR [ebp-0x698e999c]
  41602f:	push   eax
  416030:	jp     0x415fd7
  416032:	xchg   ebp,eax
  416033:	test   eax,0xcee05cc4
  416038:	jle    0x416012
  41603a:	test   BYTE PTR [esi+0x28a6d86e],dl
  416040:	jne    0x416071
  416042:	das    
  416043:	in     al,0x3b
  416045:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416046:	ror    ah,0x63
  416049:	(bad)  
  41604a:	jmp    0xf0aba853
  41604f:	mov    edi,0xdfebb92e
  416054:	xor    ch,BYTE PTR [edx+0x5b]
  416057:	into   
  416058:	mov    ecx,0x42e77a4a
  41605d:	outs   dx,DWORD PTR ds:[esi]
  41605e:	into   
  41605f:	mov    ?,WORD PTR [edx]
  416061:	xor    ebx,DWORD PTR [edx+0x48]
  416064:	pop    esp
  416065:	scas   al,BYTE PTR es:[edi]
  416066:	fimul  WORD PTR [ebp+0x6ade1300]
  41606c:	retf   
  41606d:	iret   
  41606e:	or     BYTE PTR [edx+edx*2+0x56],ah
  416072:	dec    ebp
  416073:	push   esp
  416074:	test   eax,0x8133e7fd
  416079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41607a:	push   es
  41607b:	ret    0x7a2d
  41607e:	pop    ebp
  41607f:	sbb    cl,BYTE PTR [edi+0x60]
  416082:	sub    al,0xf7
  416084:	fiadd  WORD PTR ds:0xef28beb2
  41608a:	in     eax,0x27
  41608c:	pop    ds
  41608d:	pop    ebp
  41608e:	or     DWORD PTR [eax+0x71],0x5615fe11
  416095:	mov    al,ds:0xccb1ae02
  41609a:	mov    DWORD PTR [ebx-0x3b],esp
  41609d:	fiadd  WORD PTR [edx]
  41609f:	rcr    DWORD PTR [eax+0x5486c1e4],cl
  4160a5:	xchg   BYTE PTR ds:0x8ddb2ec6,cl
  4160ab:	sbb    eax,0x2c6cf60a
  4160b0:	pusha  
  4160b1:	push   ss
  4160b2:	dec    esi
  4160b3:	xchg   esp,eax
  4160b4:	push   ds
  4160b5:	cmp    DWORD PTR [edi+0x34],0x6fc049bb
  4160bc:	and    BYTE PTR [ebp-0x55],dh
  4160bf:	inc    edx
  4160c0:	pusha  
  4160c1:	jecxz  0x41606a
  4160c3:	test   eax,0x75500643
  4160c8:	jge    0x416109
  4160ca:	mov    ebx,0x8900a0bc
  4160cf:	push   eax
  4160d0:	dec    ecx
  4160d1:	jp     0x41613d
  4160d3:	outs   dx,DWORD PTR ds:[esi]
  4160d4:	sub    ah,ch
  4160d6:	(bad)  
  4160d7:	sahf   
  4160d8:	rol    BYTE PTR [ecx-0x6f4c4c4e],cl
  4160de:	add    al,0xc6
  4160e0:	sbb    ecx,DWORD PTR [edx-0x52]
  4160e3:	xchg   ecx,eax
  4160e4:	stos   BYTE PTR es:[edi],al
  4160e5:	mov    bl,0xf0
  4160e7:	xor    eax,esi
  4160e9:	push   si
  4160eb:	cli    
  4160ec:	dec    ebx
  4160ed:	dec    edx
  4160ee:	movq   mm0,QWORD PTR [esi+0x62e69dde]
  4160f5:	rcl    dl,cl
  4160f7:	inc    ecx
  4160f8:	scas   al,BYTE PTR es:[edi]
  4160f9:	mov    ebx,0x3a7473b9
  4160fe:	push   edi
  4160ff:	mov    edx,0x4e4dd62
  416104:	mov    al,0xf
  416106:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416107:	popa   
  416108:	loopne 0x4160a1
  41610a:	lea    eax,[esi+ecx*1-0x4d]
  41610e:	mov    DWORD PTR [ecx],0x83ef6c99
  416114:	adc    al,0x99
  416116:	and    al,0x33
  416118:	cld    
  416119:	inc    edx
  41611a:	test   al,0xd0
  41611c:	je     0x416182
  41611e:	ins    DWORD PTR es:[edi],dx
  41611f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416120:	dec    edi
  416121:	mov    eax,0xe4c4490c
  416126:	(bad)  
  416127:	cs pop esi
  416129:	std    
  41612a:	loopne 0x41612b
  41612c:	(bad)  [ecx-0x61]
  41612f:	icebp  
  416130:	mov    ds:0x44952202,eax
  416135:	sub    al,0xf4
  416137:	mov    DWORD PTR [edx+ecx*8],edx
  41613a:	jmp    0x41610c
  41613c:	sbb    eax,0x4b53063f
  416141:	cmc    
  416142:	inc    edi
  416143:	aam    0xc0
  416145:	(bad)  
  416146:	cmovbe ebp,eax
  416149:	pop    esp
  41614a:	jecxz  0x416160
  41614c:	leave  
  41614d:	sbb    BYTE PTR [esi],ch
  41614f:	int    0x11
  416151:	call   0x5c3c:0xb34a5c95
  416158:	cmp    edi,DWORD PTR [edx-0x4fcd5044]
  41615e:	fidiv  DWORD PTR [esi-0x18b6d434]
  416164:	test   al,0x4
  416166:	push   eax
  416167:	fstp   DWORD PTR [esi+0x18]
  41616a:	pop    eax
  41616b:	loop   0x4160fd
  41616d:	data16 scas al,BYTE PTR es:[edi]
  41616f:	pop    ebp
  416170:	push   edi
  416171:	repz lea ecx,[eax]
  416174:	retf   0x1915
  416177:	and    ebx,DWORD PTR [esi+0x5e]
  41617a:	jg     0x416194
  41617c:	pop    edi
  41617d:	xchg   edi,eax
  41617e:	aas    
  41617f:	cmp    eax,0xebbfc656
  416184:	add    eax,DWORD PTR [eax]
  416186:	and    ebp,DWORD PTR [eax]
  416188:	adc    ebx,DWORD PTR [ebx-0xb]
  41618b:	imul   ebx,DWORD PTR [esi+0x69],0x69
  41618f:	mov    ecx,0x3cd24205
  416194:	sbb    BYTE PTR [edx],bl
  416196:	rcl    BYTE PTR [ebx-0x7be8b67],cl
  41619c:	mov    al,cl
  41619e:	mov    dl,0x31
  4161a0:	add    eax,0x6a11aec8
  4161a5:	jge    0x416192
  4161a7:	adc    ecx,edi
  4161a9:	mov    al,ds:0x4fa84103
  4161ae:	les    eax,FWORD PTR [edi]
  4161b0:	adc    DWORD PTR [esi+0x6cbb79d1],edx
  4161b6:	fwait
  4161b7:	jg     0x41622c
  4161b9:	jmp    0xd2f9:0xee555d4b
  4161c0:	sbb    edi,DWORD PTR [ebx+0x51]
  4161c3:	sub    ebp,DWORD PTR [edx+0x7b4e41d3]
  4161c9:	mov    esp,0xd5bb6e2
  4161ce:	rol    DWORD PTR [edx+0x4c1a0f6f],1
  4161d4:	add    BYTE PTR [edx+0x70c1a30c],bh
  4161da:	jge    0x416218
  4161dc:	shl    dl,1
  4161de:	lock lds ecx,FWORD PTR fs:[edx+0x71]
  4161e3:	inc    edi
  4161e4:	dec    ebp
  4161e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161e6:	das    
  4161e7:	push   cs
  4161e8:	mov    ebx,0xfdb7f893
  4161ed:	or     al,BYTE PTR [eax]
  4161ef:	adc    al,0x71
  4161f1:	dec    eax
  4161f2:	stos   DWORD PTR es:[edi],eax
  4161f3:	pop    eax
  4161f4:	pop    ss
  4161f5:	nop
  4161f6:	sti    
  4161f7:	nop
  4161f8:	sub    BYTE PTR [ebx+0x7142d19f],0x36
  4161ff:	mov    bh,BYTE PTR [edi+0x20]
  416202:	mov    ch,0x1f
  416204:	adc    al,0x14
  416206:	xor    ecx,DWORD PTR [esi+0x65]
  416209:	mov    eax,ds:0xc7e2fab4
  41620e:	out    dx,al
  41620f:	sbb    al,0x11
  416211:	(bad)  
  416212:	mov    ebp,DWORD PTR [eax+edx*2-0x21]
  416216:	inc    eax
  416217:	mov    ebx,0x2b0e1d76
  41621c:	fsubr  DWORD PTR [eax]
  41621e:	add    DWORD PTR ds:0xcd6e5add,ebx
  416224:	mov    ebx,0x59641d66
  416229:	sub    eax,0x14d4468
  41622e:	pop    ecx
  41622f:	out    0x2f,al
  416231:	les    esi,FWORD PTR [eax-0x12]
  416234:	pavgb  mm0,QWORD PTR [eax]
  416237:	icebp  
  416238:	add    ebp,ebx
  41623a:	outs   dx,BYTE PTR ds:[esi]
  41623b:	inc    edi
  41623c:	and    al,0xe
  41623e:	popf   
  41623f:	test   al,0x42
  416241:	xchg   ebx,eax
  416242:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  416244:	jmp    0x5be9520a
  416249:	ret    
  41624a:	inc    ebp
  41624b:	add    al,0xcd
  41624d:	pop    edi
  41624e:	jle    0x41622e
  416250:	add    dh,BYTE PTR [edi]
  416252:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416253:	es jmp 0x2db5:0x31c7f903
  41625b:	adc    BYTE PTR [edi-0xa38df33],ch
  416261:	mov    es,WORD PTR [ebp+0x1c]
  416264:	mov    bl,0x83
  416266:	and    dl,BYTE PTR [edi-0x6176c57b]
  41626c:	test   eax,0x8a4138d5
  416271:	cmp    al,dh
  416273:	aas    
  416274:	into   
  416275:	adc    eax,0xb58656a1
  41627a:	or     al,0x55
  41627c:	pop    ebp
  41627d:	cs movs BYTE PTR es:[edi],BYTE PTR ss:[esi]
  416280:	leave  
  416281:	dec    edx
  416282:	mov    edx,0x15ec9c6f
  416287:	dec    ebp
  416288:	jbe    0x416212
  41628a:	mov    edx,0x3bc06edd
  41628f:	loopne 0x416223
  416291:	jge    0x4162c8
  416293:	jg     0x41624f
  416295:	les    edx,FWORD PTR [ebp-0x5a8bb81c]
  41629b:	xchg   esi,eax
  41629c:	loope  0x41625c
  41629e:	cmp    dl,0x4a
  4162a1:	adc    BYTE PTR [ebx-0x62a07e11],ah
  4162a7:	enter  0x6984,0x4a
  4162ab:	fiadd  DWORD PTR [ebx]
  4162ad:	into   
  4162ae:	rcl    DWORD PTR [ebx],0xee
  4162b1:	mov    al,ds:0x112b8ced
  4162b6:	(bad)  
  4162b7:	jge    0x4162e1
  4162b9:	jp     0x416247
  4162bb:	(bad)
  4162bf:	mov    ds:0xdc3f504e,al
  4162c4:	push   cs
  4162c5:	ins    BYTE PTR es:[edi],dx
  4162c6:	sub    ebx,esp
  4162c8:	inc    ebp
  4162c9:	mul    ebp
  4162cb:	and    al,0xf0
  4162cd:	out    dx,al
  4162ce:	push   esp
  4162cf:	or     dh,BYTE PTR [ebp-0xe]
  4162d2:	push   esi
  4162d3:	add    BYTE PTR [esi-0x1e71b101],bh
  4162d9:	imul   edi,eax,0x2377c0ef
  4162df:	cmp    edi,ebp
  4162e1:	aaa    
  4162e2:	in     eax,dx
  4162e3:	aaa    
  4162e4:	nop
  4162e5:	imul   edx,DWORD PTR [ebp+0x21],0x78ef7647
  4162ec:	mov    ds:0xd3aa16c9,eax
  4162f1:	xor    eax,0xa9fc5194
  4162f6:	or     ah,BYTE PTR [ebp-0x55]
  4162f9:	inc    edi
  4162fa:	jmp    0xb1bd:0xc73f8ec1
  416301:	inc    esp
  416302:	and    esi,DWORD PTR ds:0xe3932186
  416308:	mov    ebp,0xf0c24695
  41630d:	aad    0xfd
  41630f:	mov    BYTE PTR [esi-0xc],bh
  416312:	daa    
  416313:	jmp    0x8204:0x2fb73173
  41631a:	fmul   DWORD PTR [edx+0x5f]
  41631d:	fxtract 
  41631f:	rcr    BYTE PTR [ebx],1
  416321:	in     eax,0x6
  416323:	adc    al,0xf3
  416325:	pushf  
  416326:	or     dh,BYTE PTR [esp+ecx*2]
  416329:	and    esi,esp
  41632b:	ja     0x41633c
  41632d:	sbb    DWORD PTR [esp+ecx*4+0x49],esp
  416331:	or     DWORD PTR [edx+0x1d],esi
  416334:	cmp    BYTE PTR [esi+eax*4+0x16],0x77
  416339:	shl    edi,0x55
  41633c:	and    al,0x36
  41633e:	mov    ebp,0xd206d832
  416343:	cmp    BYTE PTR [ecx],al
  416345:	mov    al,0xeb
  416347:	rol    ch,0xfe
  41634a:	out    0x37,eax
  41634c:	fidiv  WORD PTR [eax+0x2e]
  41634f:	jmp    0x6546a3e5
  416354:	push   ecx
  416355:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416356:	popa   
  416357:	sbb    ebp,ebp
  416359:	xchg   ecx,eax
  41635a:	sub    al,0xc8
  41635c:	add    al,0x67
  41635e:	jmp    0x4163d0
  416360:	lods   al,BYTE PTR ds:[esi]
  416361:	push   ss
  416362:	pushf  
  416363:	lock test cl,dh
  416366:	inc    esp
  416367:	retf   0xb759
  41636a:	jb     0x4163c8
  41636c:	lds    eax,FWORD PTR [edx]
  41636e:	jg     0x416339
  416370:	add    eax,0xdfe8291a
  416375:	daa    
  416376:	mov    bl,0xde
  416378:	push   ds
  416379:	jmp    0x41633b
  41637b:	mov    ds,WORD PTR ds:0x78f463ad
  416381:	cmp    ebp,DWORD PTR [esi]
  416383:	jl     0x416375
  416385:	cld    
  416386:	push   0x6d
  416388:	sub    ebx,DWORD PTR fs:[ecx+0x3d]
  41638c:	sub    DWORD PTR [ecx+eiz*1+0x41976279],ecx
  416393:	mov    ebp,0x985df81
  416398:	pop    ss
  416399:	mov    ebx,0x862233d1
  41639e:	or     al,0x9a
  4163a0:	aaa    
  4163a1:	inc    edi
  4163a2:	call   0x802a0049
  4163a7:	loope  0x416407
  4163a9:	les    esi,FWORD PTR ds:0xbc4e166a
  4163af:	adc    eax,0x5ece37a2
  4163b4:	and    al,BYTE PTR [edi]
  4163b6:	popf   
  4163b7:	xlat   BYTE PTR ds:[ebx]
  4163b8:	jmp    0xf6:0x60c38760
  4163bf:	pop    edx
  4163c0:	jmp    0xea7a863d
  4163c5:	adc    ah,BYTE PTR [edi+0x5e6129e6]
  4163cb:	xor    al,0x6e
  4163cd:	loop   0x416392
  4163cf:	popa   
  4163d0:	not    DWORD PTR [ebp+0x726d222f]
  4163d6:	mov    ch,0xb1
  4163d8:	in     al,dx
  4163d9:	mov    edi,0x829e9261
  4163de:	loope  0x416424
  4163e0:	mov    ds:0x24c1766e,al
  4163e5:	mov    BYTE PTR ds:0xaa465f47,al
  4163eb:	mov    cl,0x74
  4163ed:	pop    edx
  4163ee:	jo     0x416450
  4163f0:	scas   al,BYTE PTR es:[edi]
  4163f1:	xchg   ecx,eax
  4163f2:	jge    0x41643b
  4163f4:	mov    ds:0x2d40da33,eax
  4163f9:	jle    0x4163fc
  4163fb:	sti    
  4163fc:	cmp    al,0xae
  4163fe:	pop    ecx
  4163ff:	xor    DWORD PTR [eax-0x50],ecx
  416402:	retf   
  416403:	ret    0xbb24
  416406:	(bad)  
  416407:	cli    
  416408:	call   0x5cd705f5
  41640d:	pushf  
  41640e:	cmp    BYTE PTR [ebx+0x69],dl
  416411:	sub    edi,ebp
  416413:	sti    
  416414:	lock add DWORD PTR [edx+0x33e3931b],0x84a3cb85
  41641f:	ret    0xc149
  416422:	es iret 
  416424:	into   
  416425:	aaa    
  416426:	and    eax,0xa9ead728
  41642b:	into   
  41642c:	and    al,0xe7
  41642e:	fcmove st,st(1)
  416430:	pop    eax
  416431:	adc    DWORD PTR [ecx],0xfffffff1
  416434:	inc    edx
  416435:	fisub  DWORD PTR ds:[eax+0x6d]
  416439:	xchg   esp,eax
  41643a:	push   edx
  41643b:	repnz xchg ebp,eax
  41643d:	(bad)  
  41643e:	outs   dx,BYTE PTR ds:[esi]
  41643f:	sub    al,0x43
  416441:	(bad)  
  416442:	das    
  416443:	lahf   
  416444:	jge    0x416400
  416446:	xor    al,ch
  416448:	test   dh,cl
  41644a:	cmp    al,BYTE PTR [edx+0x3a]
  41644d:	daa    
  41644e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41644f:	jno    0x416410
  416451:	arpl   dx,dx
  416453:	mov    ebx,0x47e1f2ab
  416458:	xor    eax,0x742974e4
  41645d:	test   eax,0xfb6aea7d
  416462:	xor    eax,0x341fe06e
  416467:	mov    bh,0xe7
  416469:	fstp   DWORD PTR [esi]
  41646b:	retf   
  41646c:	scas   eax,DWORD PTR es:[edi]
  41646d:	ss gs pushf 
  416470:	loopne 0x41640a
  416472:	cli    
  416473:	std    
  416474:	mov    bl,0xeb
  416476:	jl     0x416488
  416478:	and    al,0x42
  41647a:	fidiv  DWORD PTR [edx]
  41647c:	xor    DWORD PTR [edx],eax
  41647e:	push   0x63
  416480:	push   eax
  416481:	sahf   
  416482:	dec    ebp
  416483:	jae    0x416490
  416485:	jbe    0x4164d2
  416487:	mov    al,0x5c
  416489:	inc    edi
  41648a:	fmul   QWORD PTR [esi-0x60]
  41648d:	dec    ebx
  41648e:	gs push ss
  416490:	xchg   ecx,eax
  416491:	pusha  
  416492:	repnz xchg esp,eax
  416494:	(bad)  
  416495:	mov    eax,ds:0xf73b5566
  41649a:	les    esi,FWORD PTR [eax-0x58]
  41649d:	dec    edi
  41649e:	out    0xcb,eax
  4164a0:	pop    ebp
  4164a1:	sbb    eax,0x1ed1e4f8
  4164a6:	loope  0x41650a
  4164a8:	dec    esp
  4164a9:	fcmovu st,st(0)
  4164ab:	cmp    edi,DWORD PTR [ecx]
  4164ad:	inc    eax
  4164ae:	ret    
  4164af:	xchg   DWORD PTR [eax+eiz*2-0x5c623246],esp
  4164b6:	xor    eax,0xea5dda
  4164bb:	jo     0x4164b7
  4164bd:	scas   eax,DWORD PTR es:[edi]
  4164be:	sbb    BYTE PTR [edx],bh
  4164c0:	lea    esp,[eax-0xa]
  4164c3:	xchg   ebp,eax
  4164c4:	inc    ebx
  4164c5:	mov    esp,0xc2881b1
  4164ca:	sub    esi,DWORD PTR [edi]
  4164cc:	push   ss
  4164cd:	jb     0x416509
  4164cf:	sbb    ebx,DWORD PTR [edx]
  4164d1:	in     eax,0xc4
  4164d3:	add    BYTE PTR [edi+0x14370df1],al
  4164d9:	add    BYTE PTR [esi+eiz*2],0x5e
  4164dd:	or     DWORD PTR [ecx],ecx
  4164df:	xlat   BYTE PTR ds:[ebx]
  4164e0:	pop    esp
  4164e1:	test   esi,ebp
  4164e3:	scas   al,BYTE PTR es:[edi]
  4164e4:	pop    ebx
  4164e5:	pop    eax
  4164e6:	inc    ecx
  4164e7:	pusha  
  4164e8:	out    dx,eax
  4164e9:	mov    ch,0xa2
  4164eb:	mov    ds:0xf39e335e,eax
  4164f0:	shl    BYTE PTR [ecx],cl
  4164f2:	jnp    0x41647a
  4164f4:	and    ebx,0x75db4148
  4164fa:	mov    ebx,0xd7f94d34
  4164ff:	jg     0x4164d3
  416501:	cld    
  416502:	push   0xcbbf23b4
  416507:	sub    BYTE PTR [ebp-0x30],bh
  41650a:	cli    
  41650b:	inc    esi
  41650c:	xor    edi,DWORD PTR [edx-0x606e5f50]
  416512:	xor    BYTE PTR [esi-0x336262d9],ch
  416518:	test   edi,edi
  41651a:	daa    
  41651b:	push   0x12d0f6e8
  416520:	jnp    0x416563
  416522:	test   eax,0xe86c82e7
  416527:	jmp    0x4164bd
  416529:	and    eax,0xe0875cd9
  41652e:	(bad)  
  41652f:	or     eax,0xc2e304ee
  416534:	psubd  mm5,mm2
  416537:	or     DWORD PTR [ecx+eax*8-0x44],eax
  41653b:	cmp    DWORD PTR [edx+esi*2],ebp
  41653e:	(bad)  
  41653f:	stc    
  416540:	push   edx
  416541:	into   
  416542:	(bad)  
  416543:	and    bl,dl
  416545:	mov    esp,0x9f0cef0f
  41654a:	dec    edi
  41654b:	(bad)  [ebx-0x51e98301]
  416551:	cmp    BYTE PTR [edi-0x129039c],dl
  416557:	addr16 mov al,ds:0x9be4
  41655b:	push   DWORD PTR [ecx+0x3d]
  41655e:	popf   
  41655f:	xor    BYTE PTR [eax-0x3d80e6de],0xb1
  416566:	mov    edx,DWORD PTR [ecx+eiz*2+0x73]
  41656a:	lahf   
  41656b:	mov    bh,0xb
  41656d:	push   ebx
  41656e:	jae    0x4165c3
  416570:	xchg   BYTE PTR [ecx-0x28],ch
  416573:	scas   al,BYTE PTR es:[edi]
  416574:	add    dh,BYTE PTR [esi]
  416576:	mov    bl,0xc8
  416578:	or     al,0xb3
  41657a:	aaa    
  41657b:	scas   al,BYTE PTR es:[edi]
  41657c:	xchg   BYTE PTR [edx-0x7f08aca2],ch
  416582:	hlt    
  416583:	and    al,0x93
  416585:	aaa    
  416586:	xchg   esi,eax
  416587:	retf   0x6121
  41658a:	iret   
  41658b:	xchg   ebx,eax
  41658c:	stc    
  41658d:	in     al,0x93
  41658f:	dec    edx
  416590:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416591:	ret    0x34bc
  416594:	ret    
  416595:	add    eax,0x1e8ed1e1
  41659a:	into   
  41659b:	lahf   
  41659c:	retf   
  41659d:	add    al,0x51
  41659f:	mov    ecx,0x285b6111
  4165a4:	cmp    eax,edi
  4165a6:	in     al,dx
  4165a7:	add    BYTE PTR [ebp+ebx*4+0x29d07d0],ah
  4165ae:	sti    
  4165af:	mov    esi,0x3e903ed
  4165b4:	loop   0x4165cb
  4165b6:	pop    ebx
  4165b7:	lods   eax,DWORD PTR ds:[esi]
  4165b8:	jp     0x4165e7
  4165ba:	repz pop es
  4165bc:	mov    ebp,DWORD PTR [ecx]
  4165be:	inc    esi
  4165bf:	out    dx,al
  4165c0:	lock mov bh,0xf0
  4165c3:	mov    ecx,0xb41f0034
  4165c8:	or     cl,cl
  4165ca:	and    al,0x66
  4165cc:	in     eax,dx
  4165cd:	mov    ebp,0x973b8423
  4165d2:	test   al,al
  4165d4:	imul   edx,DWORD PTR [ebx+0x2e],0xffffff99
  4165d8:	cmp    cl,BYTE PTR [edx-0x11]
  4165db:	inc    ebx
  4165dc:	loopne 0x416659
  4165de:	lea    edx,[ecx-0x335fe731]
  4165e4:	idiv   BYTE PTR [ebx]
  4165e6:	imul   edx,ecx,0xffffffb6
  4165e9:	mov    BYTE PTR [esi-0x18d4e229],bh
  4165ef:	(bad)  
  4165f0:	jmp    FWORD PTR [ebp-0x74]
  4165f3:	les    ebp,FWORD PTR [eax]
  4165f5:	out    0x5,al
  4165f7:	dec    eax
  4165f8:	xor    al,BYTE PTR [edi-0x397ecda8]
  4165fe:	jl     0x416586
  416600:	jne    0x416679
  416602:	mov    edx,0x47c401e8
  416607:	into   
  416608:	clc    
  416609:	adc    al,0x3c
  41660b:	adc    BYTE PTR [eax-0x19c90a12],ah
  416611:	push   ss
  416612:	ins    BYTE PTR es:[edi],dx
  416613:	jp     0x416605
  416615:	aad    0xd1
  416617:	es (bad) 
  416619:	jl     0x416659
  41661b:	or     al,0x8c
  41661d:	ss adc eax,0x6fe91372
  416623:	mov    eax,ds:0x2a18a78d
  416628:	pushf  
  416629:	ret    0xefef
  41662c:	fwait
  41662d:	lock xchg ebp,eax
  41662f:	cli    
  416630:	fld    TBYTE PTR ds:0xd0ec6c28
  416636:	data16 out dx,al
  416638:	dec    ebp
  416639:	mul    BYTE PTR [edx+0x5f]
  41663c:	sub    al,0x40
  41663e:	(bad)  
  41663f:	cmp    ebp,DWORD PTR [edi+0x700df09b]
  416645:	js     0x416633
  416647:	or     eax,0x957e52c2
  41664c:	enter  0x63ee,0x3f
  416650:	sub    ecx,DWORD PTR [ecx+0x20a01f3a]
  416656:	adc    ch,BYTE PTR [edi-0x3]
  416659:	and    bh,bh
  41665b:	pop    ebx
  41665c:	pop    edi
  41665d:	dec    ebx
  41665e:	mov    bl,bl
  416660:	repnz (bad) 
  416663:	lods   al,BYTE PTR ds:[esi]
  416664:	inc    esp
  416665:	das    
  416666:	popf   
  416667:	fs pop ss
  416669:	inc    ecx
  41666a:	pop    edi
  41666b:	sahf   
  41666c:	mov    ebp,0xe61f2b4e
  416671:	sbb    eax,0xe1403a60
  416676:	ins    DWORD PTR es:[edi],dx
  416677:	adc    DWORD PTR [ebx+0x53d54567],ecx
  41667d:	jnp    0x416693
  41667f:	ss xchg esp,eax
  416681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416682:	(bad)  
  416683:	int    0xee
  416685:	sub    eax,0x2a6c2c1d
  41668a:	mov    cl,BYTE PTR [esi+0x2b]
  41668d:	mov    al,ds:0x3950de09
  416692:	pop    eax
  416693:	retf   
  416694:	pop    DWORD PTR [ebp+ebx*2+0x72]
  416698:	mov    cl,BYTE PTR [eax+ebp*1-0x5be5d446]
  41669f:	or     eax,DWORD PTR [edx+0x43]
  4166a2:	jno    0x4166d0
  4166a4:	stos   DWORD PTR es:[edi],eax
  4166a5:	add    esi,DWORD PTR [ebx-0x5f]
  4166a8:	inc    edi
  4166a9:	push   0xfffffffb
  4166ab:	inc    esi
  4166ac:	mov    ebp,0xb8b5561f
  4166b1:	repnz sub edx,DWORD PTR ds:0xc787af95
  4166b8:	jbe    0x4166e2
  4166ba:	dec    ebp
  4166bb:	inc    ecx
  4166bc:	inc    ebp
  4166bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166be:	xor    eax,0xa4990ee9
  4166c3:	cwde   
  4166c4:	popa   
  4166c5:	repnz or eax,0xfad79202
  4166cb:	push   ebp
  4166cc:	ja     0x4166b5
  4166ce:	fnstenv [ecx]
  4166d0:	cmp    dl,al
  4166d2:	shl    DWORD PTR [ecx+edx*1],0xb8
  4166d6:	xor    DWORD PTR [esi+0x7],eax
  4166d9:	and    BYTE PTR [edi-0x5c],al
  4166dc:	pop    edx
  4166dd:	fstp   TBYTE PTR [ebx-0x79f8c0ff]
  4166e3:	loope  0x41672e
  4166e5:	fistp  QWORD PTR [edi+eax*2]
  4166e8:	mov    WORD PTR [ebx-0x4],ss
  4166eb:	loopne 0x416725
  4166ed:	imul   ecx,DWORD PTR [edx],0x6f
  4166f0:	push   esi
  4166f1:	stos   BYTE PTR es:[edi],al
  4166f2:	lods   eax,DWORD PTR ds:[esi]
  4166f3:	xchg   esp,eax
  4166f4:	xor    eax,0xe823ad43
  4166f9:	aaa    
  4166fa:	mov    edi,0xa27ffd2f
  4166ff:	das    
  416700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416701:	arpl   WORD PTR gs:[edi],di
  416704:	(bad)  
  416705:	loope  0x4166c6
  416707:	(bad)  
  416708:	cli    
  416709:	adc    bh,al
  41670b:	stos   BYTE PTR es:[edi],al
  41670c:	lds    esi,FWORD PTR [edi]
  41670e:	xor    edx,DWORD PTR [ebp-0x451916e9]
  416714:	test   edi,ebp
  416716:	icebp  
  416717:	mov    ebx,0x9f908f69
  41671c:	jg     0x41672d
  41671e:	jp     0x416796
  416720:	add    BYTE PTR [ecx],0x17
  416723:	mov    ch,BYTE PTR ds:0x9348ee00
  416729:	jo     0x416716
  41672b:	push   ecx
  41672c:	jecxz  0x4166cf
  41672e:	jnp    0x4166b0
  416730:	cli    
  416731:	xchg   DWORD PTR [ebp+0x4de6c323],edi
  416737:	(bad)  
  416738:	mov    ebx,0x1935f03a
  41673d:	sub    al,0x59
  41673f:	sbb    BYTE PTR [ecx+0x74c6029d],ch
  416745:	push   esi
  416746:	call   DWORD PTR [ebp-0x44acb6f2]
  41674c:	add    DWORD PTR [esi+0x1c50527c],esp
  416752:	lds    eax,FWORD PTR [ebx+ebp*1]
  416755:	push   esi
  416756:	push   0xffffffc0
  416758:	enter  0x47e3,0x83
  41675c:	push   ebx
  41675d:	in     al,dx
  41675e:	cdq    
  41675f:	or     ebx,ebx
  416761:	push   ebp
  416762:	fdivr  QWORD PTR [edx]
  416764:	lock mov ebp,ebp
  416767:	push   edx
  416768:	imul   esp,DWORD PTR [ebx+ebp*1],0x2443eab7
  41676f:	repnz cwde 
  416771:	adc    dl,BYTE PTR [ebx+eiz*4]
  416774:	push   ebp
  416775:	jmp    0x41676d
  416777:	dec    ecx
  416778:	(bad)  
  416779:	in     al,0x4f
  41677b:	les    ebp,FWORD PTR [ecx-0x684dc881]
  416781:	pop    ss
  416782:	stc    
  416783:	xor    DWORD PTR [eax],eax
  416785:	stc    
  416786:	mov    ebx,0x8d381d41
  41678b:	repnz cmp eax,0x1f8d6a6c
  416791:	retf   
  416792:	out    dx,al
  416793:	aaa    
  416794:	push   ecx
  416795:	push   edi
  416796:	inc    edi
  416797:	fsub   DWORD PTR [edx+0x6c]
  41679a:	add    DWORD PTR [esi+ebp*2+0x70],0xfffffffd
  41679f:	xor    al,0xf9
  4167a1:	outs   dx,BYTE PTR ds:[esi]
  4167a2:	xchg   BYTE PTR [esi+eax*2-0x131363f3],dl
  4167a9:	jbe    0x416739
  4167ab:	push   ebp
  4167ac:	rep stos BYTE PTR es:[edi],al
  4167ae:	xor    ebp,DWORD PTR [edx+0x4c]
  4167b1:	stc    
  4167b2:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4167b4:	stc    
  4167b5:	mov    edx,DWORD PTR [edi+0x4c2d7d4b]
  4167bb:	add    ch,cl
  4167bd:	arpl   bx,ax
  4167bf:	(bad)  
  4167c0:	loop   0x416774
  4167c2:	mov    esp,0x1e8efa80
  4167c7:	sub    BYTE PTR [edx+ebp*1],al
  4167ca:	int    0x35
  4167cc:	daa    
  4167cd:	shl    ch,0x7a
  4167d0:	repz rcl BYTE PTR [edx],1
  4167d3:	ins    BYTE PTR es:[edi],dx
  4167d4:	jne    0x41679f
  4167d6:	inc    eax
  4167d7:	out    0xb7,al
  4167d9:	push   eax
  4167da:	and    al,BYTE PTR [eax-0x55]
  4167dd:	sbb    dl,ah
  4167df:	test   eax,0xc355530c
  4167e4:	aas    
  4167e5:	mov    WORD PTR [ebp+0x76],es
  4167e8:	cmp    DWORD PTR [edx],eax
  4167ea:	fcom   DWORD PTR ds:0xd0bd8992
  4167f0:	call   0x1bfbf03
  4167f5:	mov    ds:0x4bf01709,eax
  4167fa:	adc    DWORD PTR [ebx-0x6a],edi
  4167fd:	ins    DWORD PTR es:[edi],dx
  4167fe:	jmp    0xcc86168e
  416803:	out    0x83,eax
  416805:	xchg   esi,eax
  416806:	cmp    ch,0x8f
  416809:	dec    esp
  41680a:	call   0xdc4bd17f
  41680f:	jmp    0xe22b:0xa823429
  416816:	in     eax,dx
  416817:	xchg   BYTE PTR ds:0xd6009b2c,ch
  41681d:	xor    DWORD PTR ds:0xa3216261,0xa370052e
  416827:	ja     0x416812
  416829:	in     eax,dx
  41682a:	daa    
  41682b:	jmp    0x416879
  41682d:	retf   0xe707
  416830:	cmp    ch,dh
  416832:	lds    edx,FWORD PTR [ecx-0x28a8708b]
  416838:	pop    eax
  416839:	aam    0x69
  41683b:	jecxz  0x416831
  41683d:	inc    esp
  41683e:	lods   eax,DWORD PTR ds:[esi]
  41683f:	mov    al,0x6c
  416841:	or     esp,eax
  416843:	cwde   
  416844:	mov    eax,ds:0x18db9652
  416849:	or     al,0xd1
  41684b:	pop    edx
  41684c:	xor    bl,al
  41684e:	test   DWORD PTR [ebx+0x38],0x278e0b55
  416855:	push   ds
  416856:	sub    ch,cl
  416858:	lods   al,BYTE PTR cs:[esi]
  41685a:	pop    ebp
  41685b:	mov    edx,0x50e76578
  416860:	or     DWORD PTR [ebp-0x18e3c818],esp
  416866:	fisubr WORD PTR [ebp+0x22c1cdb2]
  41686c:	push   cs
  41686d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41686e:	test   DWORD PTR [edi+0x3],0x39184972
  416875:	xor    DWORD PTR [ebx-0x26],0x934338a1
  41687c:	cmp    cl,dh
  41687e:	cmp    dh,BYTE PTR [ebp+0x5b8baa5b]
  416884:	(bad)  
  416885:	loope  0x41684b
  416887:	sahf   
  416888:	popf   
  416889:	jns    0x4168e2
  41688b:	dec    esp
  41688c:	cmp    al,0x60
  41688e:	xor    eax,0xe760f377
  416893:	sub    DWORD PTR [ebp+0x27a1d356],0x8936685c
  41689d:	outs   dx,BYTE PTR ds:[esi]
  41689e:	mov    ebp,0xb2e7c427
  4168a3:	retf   
  4168a4:	push   0xf4a85f43
  4168a9:	xor    al,0x24
  4168ab:	push   ecx
  4168ac:	int    0xfe
  4168ae:	inc    ecx
  4168af:	mov    ebp,0x1bb28e4e
  4168b4:	push   esp
  4168b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168b6:	add    ebx,DWORD PTR [eax-0x8]
  4168b9:	ret    0x359c
  4168bc:	cmp    bh,dl
  4168be:	cs adc eax,0x841646f4
  4168c4:	mov    dl,0xe2
  4168c6:	out    0x3,al
  4168c8:	jge    0x41691b
  4168ca:	(bad)  
  4168cb:	jge    0x41688d
  4168cd:	not    BYTE PTR [edx]
  4168cf:	jo     0x416888
  4168d1:	mov    ch,0x27
  4168d3:	shr    edx,1
  4168d5:	push   ebx
  4168d6:	shr    BYTE PTR [ebp-0x48a827fd],cl
  4168dc:	fimul  DWORD PTR [ecx]
  4168de:	and    ah,bl
  4168e0:	pop    ebp
  4168e1:	lahf   
  4168e2:	lods   eax,DWORD PTR ds:[esi]
  4168e3:	fsubr  st,st(6)
  4168e5:	stos   BYTE PTR es:[edi],al
  4168e6:	sub    DWORD PTR [ecx-0x6099bcaf],esp
  4168ec:	pop    ebp
  4168ed:	fild   QWORD PTR [edi+0x5845a807]
  4168f3:	mov    al,ds:0xb9a1fb0c
  4168f8:	fs cmc 
  4168fa:	js     0x4168a3
  4168fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168fd:	scas   al,BYTE PTR es:[edi]
  4168fe:	cmp    DWORD PTR [ebx-0x22],ebp
  416901:	cmp    BYTE PTR [ebp+0x3e1b40e7],ch
  416907:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416908:	retf   
  416909:	ja     0x416975
  41690b:	cdq    
  41690c:	leave  
  41690d:	xchg   ebp,eax
  41690e:	cli    
  41690f:	or     al,0x2d
  416911:	rcl    BYTE PTR [esi+0x164a23af],1
  416917:	int    0x81
  416919:	lock sbb BYTE PTR [edi+ebx*1+0x566e7fcd],al
  416921:	jmp    0x66cf:0x853adcb7
  416928:	push   edx
  416929:	sbb    al,0x48
  41692b:	test   DWORD PTR [ebp+ebp*4+0x76eacf23],edx
  416932:	sub    esi,DWORD PTR ss:[edi-0x55469a1d]
  416939:	mov    al,0x8c
  41693b:	dec    esi
  41693c:	out    dx,eax
  41693d:	xchg   ebp,eax
  41693e:	popa   
  41693f:	ja     0x416983
  416941:	xlat   BYTE PTR ds:[ebx]
  416942:	and    esi,DWORD PTR [edi-0x27]
  416945:	call   0x8fafe076
  41694a:	sbb    al,0x7
  41694c:	sub    eax,0xa703f505
  416951:	mov    dl,0xd4
  416953:	push   ecx
  416954:	cmp    ah,BYTE PTR [esi+0x4875f83b]
  41695a:	push   edi
  41695b:	pop    ebx
  41695c:	icebp  
  41695d:	xchg   ebx,eax
  41695e:	fiadd  WORD PTR es:[ebp-0x1f]
  416962:	sub    ebx,esp
  416964:	faddp  st(5),st
  416966:	inc    eax
  416967:	sub    eax,DWORD PTR [esi]
  416969:	xor    ebp,DWORD PTR [ebx]
  41696b:	dec    esi
  41696c:	(bad)  
  41696d:	stc    
  41696e:	outs   dx,DWORD PTR ds:[esi]
  41696f:	and    dl,BYTE PTR [esi-0x3418894a]
  416975:	xor    DWORD PTR [edx+0x25],esi
  416978:	fidiv  DWORD PTR [ebx]
  41697a:	push   ss
  41697b:	aad    0x9
  41697d:	rcl    BYTE PTR fs:[edx+0x4a57ddaf],cl
  416984:	ret    0x23e0
  416987:	jnp    0x416934
  416989:	(bad)
  41698d:	jmp    0x9593:0x2a8917d1
  416994:	lock xchg esp,eax
  416996:	shl    BYTE PTR [ebp-0x3c],1
  416999:	ret    0x2af0
  41699c:	es push ds
  41699e:	call   0x6c8c:0x306036e8
  4169a5:	jp     0x4169bd
  4169a7:	(bad)  
  4169a8:	outs   dx,BYTE PTR ds:[esi]
  4169a9:	lods   eax,DWORD PTR ds:[esi]
  4169aa:	xchg   edi,eax
  4169ab:	clc    
  4169ac:	and    ch,BYTE PTR [edx-0x5afd091c]
  4169b2:	mov    cl,0x11
  4169b4:	adc    eax,0x9ed5dfb1
  4169b9:	ret    
  4169ba:	cs or  ch,cl
  4169bd:	retf   
  4169be:	push   eax
  4169bf:	jae    0x41694d
  4169c1:	mov    edi,0x5116aba0
  4169c6:	dec    edx
  4169c7:	pop    ebx
  4169c8:	pushf  
  4169c9:	inc    DWORD PTR [edx+0x3bb9a19c]
  4169cf:	dec    ecx
  4169d0:	or     BYTE PTR [ebx-0x53cca98],0x51
  4169d7:	(bad)  
  4169d8:	sbb    esi,esp
  4169da:	jg     0x4169c4
  4169dc:	dec    esp
  4169dd:	outs   dx,DWORD PTR ds:[esi]
  4169de:	shr    DWORD PTR [edx-0x39a1f904],0x4f
  4169e5:	mov    esi,DWORD PTR [ebp-0x7672cfbf]
  4169eb:	leave  
  4169ec:	sbb    bl,BYTE PTR [eax-0x9]
  4169ef:	add    BYTE PTR [ebp-0x7d],ah
  4169f2:	jns    0x41697a
  4169f4:	xor    eax,DWORD PTR [ebp+0x6c959014]
  4169fa:	mov    edi,0x12ff43a8
  4169ff:	mov    cl,al
  416a01:	jge    0x416a33
  416a03:	xchg   BYTE PTR [edi-0xe1909d2],bl
  416a09:	in     al,dx
  416a0a:	and    ecx,DWORD PTR [edi+0x645bf359]
  416a10:	jle    0x416a83
  416a12:	call   0xc9b1:0x45548bd5
  416a19:	inc    BYTE PTR [edi+0x3da60837]
  416a1f:	sbb    al,0x5e
  416a21:	idiv   BYTE PTR [ecx]
  416a23:	inc    esi
  416a24:	mov    esi,0x9a183eb7
  416a29:	out    0x19,eax
  416a2b:	shl    DWORD PTR ds:[ecx+0x1f9ed8c5],0x87
  416a33:	and    esi,ebx
  416a35:	ja     0x416a1e
  416a37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a38:	lods   eax,DWORD PTR ds:[esi]
  416a39:	out    dx,al
  416a3a:	call   0x80bc:0x67ca599c
  416a41:	xor    DWORD PTR [edi],0x1a
  416a44:	mov    WORD PTR [bx+di],ss
  416a47:	sbb    ch,dl
  416a49:	mov    dl,0xa2
  416a4b:	mov    bh,0x63
  416a4d:	ret    
  416a4e:	inc    esi
  416a4f:	and    BYTE PTR [edi+0x1f],dl
  416a52:	lahf   
  416a53:	jne    0x416a0d
  416a55:	lea    eax,[edi]
  416a57:	fs pop edx
  416a59:	push   esi
  416a5a:	and    cl,0x65
  416a5d:	popa   
  416a5e:	jl     0x416ade
  416a60:	pop    ds
  416a61:	sbb    bl,BYTE PTR [ebp+0x23]
  416a64:	cmp    DWORD PTR [edi],esi
  416a66:	ds push ecx
  416a68:	mov    bh,al
  416a6a:	out    dx,al
  416a6b:	push   0x1435a24e
  416a70:	dec    edx
  416a71:	sbb    bh,BYTE PTR [esi]
  416a73:	cli    
  416a74:	test   eax,0xa0a33fcd
  416a79:	and    DWORD PTR [ebx*8-0x17035574],esp
  416a80:	push   es
  416a81:	ret    0xde22
  416a84:	push   ds
  416a85:	jp     0x416acb
  416a87:	sbb    al,0x47
  416a89:	outs   dx,BYTE PTR ds:[esi]
  416a8a:	stos   DWORD PTR es:[edi],eax
  416a8b:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  416a8d:	adc    BYTE PTR [edi],dl
  416a8f:	sbb    BYTE PTR [ecx],0x6
  416a92:	dec    eax
  416a93:	pop    esp
  416a94:	inc    esp
  416a95:	jge    0x416a3b
  416a97:	sbb    ebp,esi
  416a99:	lods   eax,DWORD PTR ds:[esi]
  416a9a:	push   DWORD PTR [ebp-0x20]
  416a9d:	mov    eax,DWORD PTR [ebp-0x8]
  416aa0:	mov    eax,DWORD PTR [eax]
  416aa2:	mov    eax,DWORD PTR [eax]
  416aa4:	mov    eax,DWORD PTR [eax]
  416aa6:	call   eax
  416aa8:	mov    eax,DWORD PTR [ebp-0x34]
  416aab:	mov    ecx,DWORD PTR ds:0x4240f0
  416ab1:	add    DWORD PTR [eax],ecx
  416ab3:	pop    edi
  416ab4:	pop    esi
  416ab5:	leave  
  416ab6:	ret    
  416ab7:	push   ebp
  416ab8:	mov    ebp,esp
  416aba:	sub    esp,0x18
  416abd:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  416ac4:	lea    eax,[ebp+0x14]
  416ac7:	mov    edx,DWORD PTR ds:0x42c00c
  416acd:	sub    DWORD PTR ds:0x42c01c,edx
  416ad3:	mov    DWORD PTR [ebp-0x4],eax
  416ad6:	and    DWORD PTR ds:0x42c01c,ebx
  416adc:	push   esi
  416add:	sub    ecx,esi
  416adf:	mov    esi,0xf89c85b6
  416ae4:	sub    ecx,ecx
  416ae6:	mov    DWORD PTR [ebp-0xc],esi
  416ae9:	or     DWORD PTR ds:0x42b000,0x59c6
  416af3:	lea    eax,[ebp-0xc]
  416af6:	sub    DWORD PTR ds:0x42b014,0x4110
  416b00:	mov    DWORD PTR [ebp-0x14],eax
  416b03:	add    ecx,ecx
  416b05:	mov    eax,DWORD PTR [ebp-0xc]
  416b08:	mov    edx,DWORD PTR [ebp-0x14]
  416b0b:	adc    DWORD PTR ds:0x429014,0x59c
  416b15:	mov    ecx,0x7510893
  416b1a:	xor    eax,ecx
  416b1c:	sub    DWORD PTR ds:0x42b014,0x42b004
  416b26:	add    eax,0x3272db
  416b2b:	mov    DWORD PTR [edx],eax
  416b2d:	mov    edx,DWORD PTR ds:0x42a004
  416b33:	add    DWORD PTR ds:0x429000,edx
  416b39:	mov    eax,ds:0x423eec
  416b3e:	mov    edx,DWORD PTR ds:0x42901c
  416b44:	add    DWORD PTR ds:0x429000,edx
  416b4a:	mov    edx,DWORD PTR [ebp-0x4]
  416b4d:	sub    DWORD PTR ds:0x42d000,0x780c
  416b57:	mov    eax,DWORD PTR [eax]
  416b59:	add    eax,DWORD PTR [edx]
  416b5b:	add    DWORD PTR ds:0x42900c,ecx
  416b61:	push   edi
  416b62:	and    DWORD PTR ds:0x429020,0x0
  416b6c:	mov    edx,DWORD PTR ds:0x429020
  416b72:	inc    edx
  416b73:	mov    DWORD PTR ds:0x429020,edx
  416b79:	cmp    DWORD PTR ds:0x429020,0x25
  416b80:	jne    0x416b8f
  416b86:	push   DWORD PTR [ebp-0x20]
  416b89:	call   DWORD PTR ds:0x425028
  416b8f:	cmp    DWORD PTR ds:0x429020,0x19
  416b96:	jb     0x416b6c
  416b9c:	add    DWORD PTR ds:0x42c01c,0x73bd
  416ba6:	mov    DWORD PTR [ebp-0x8],eax
  416ba9:	adc    DWORD PTR ds:0x42d00c,ecx
  416baf:	mov    edi,DWORD PTR [ebp+0x8]
  416bb2:	sbb    DWORD PTR ds:0x42d018,0x1580
  416bbc:	mov    eax,ds:0x424074
  416bc1:	and    DWORD PTR ds:0x42b01c,0x0
  416bcb:	jmp    0x416bdd
  416bd0:	mov    edx,DWORD PTR ds:0x42b01c
  416bd6:	inc    edx
  416bd7:	mov    DWORD PTR ds:0x42b01c,edx
  416bdd:	cmp    DWORD PTR ds:0x42b01c,0x1a
  416be4:	jae    0x416c47
  416bea:	cmp    DWORD PTR ds:0x42b01c,0x10
  416bf1:	jne    0x416c1c
  416bf7:	push   0x2d19
  416bfc:	push   DWORD PTR [ebp-0x10]
  416bff:	push   0x42d014
  416c04:	push   0x14d6
  416c09:	push   0x3bac
  416c0e:	push   0x6779
  416c13:	push   DWORD PTR [ebp-0xc]
  416c16:	call   DWORD PTR ds:0x42502c
  416c1c:	cmp    DWORD PTR ds:0x42b01c,0xf
  416c23:	jne    0x416c38
  416c29:	xor    edx,edx
  416c2b:	add    edx,DWORD PTR ds:0x42b01c
  416c31:	inc    edx
  416c32:	mov    DWORD PTR ds:0x42b01c,edx
  416c38:	jmp    0x416bd0
  416c3d:	adc    DWORD PTR ds:0x429028,0x58d4
  416c47:	mov    eax,DWORD PTR [eax+0x198]
  416c4d:	mov    edx,DWORD PTR ds:0x4243f7
  416c53:	mov    edx,DWORD PTR [edx]
  416c55:	add    DWORD PTR ds:0x42d008,edx
  416c5b:	xor    edi,ecx
  416c5d:	or     edx,0x793e
  416c63:	jmp    0x41901b
  416c68:	paddsw mm6,QWORD PTR es:[eax+0x63a36ce3]
  416c70:	mov    eax,0xbbe19036
  416c75:	out    dx,eax
  416c76:	cli    
  416c77:	inc    eax
  416c78:	jp     0x416c9e
  416c7a:	popa   
  416c7b:	(bad)  
  416c7c:	(bad)  
  416c7d:	pop    edi
  416c7e:	bound  esp,QWORD PTR [edx+0xc]
  416c81:	mov    ah,0xe2
  416c83:	dec    esp
  416c84:	enter  0x93f7,0xae
  416c88:	dec    ebx
  416c89:	sti    
  416c8a:	stos   DWORD PTR es:[edi],eax
  416c8b:	adc    edx,DWORD PTR [ebx]
  416c8d:	cdq    
  416c8e:	inc    ebx
  416c8f:	add    al,0x89
  416c91:	xchg   esi,eax
  416c92:	and    dh,ch
  416c94:	cs clc 
  416c96:	cmp    eax,0x8e8b7274
  416c9b:	dec    esp
  416c9c:	push   edi
  416c9d:	jg     0x416c8c
  416c9f:	outs   dx,BYTE PTR ds:[esi]
  416ca0:	nop
  416ca1:	inc    ebx
  416ca2:	push   edx
  416ca3:	or     eax,0x257f8f1c
  416ca8:	inc    ebx
  416ca9:	fild   QWORD PTR [edx+0x3e83a49c]
  416caf:	ds push ebx
  416cb1:	fs or  eax,0xd19c521d
  416cb7:	arpl   sp,di
  416cb9:	test   eax,0x36dfc6aa
  416cbe:	test   edx,edx
  416cc0:	fwait
  416cc1:	aas    
  416cc2:	mov    dh,0xfa
  416cc4:	push   0x657392f9
  416cc9:	add    BYTE PTR [ecx-0x39],0x9b
  416ccd:	xor    esi,ebp
  416ccf:	(bad)  
  416cd0:	aas    
  416cd1:	retf   
  416cd2:	mov    ebp,ecx
  416cd4:	pop    ecx
  416cd5:	fwait
  416cd6:	ins    DWORD PTR es:[edi],dx
  416cd7:	mov    ch,0x22
  416cd9:	call   0x3a18:0x44452a55
  416ce0:	enter  0xfd79,0x45
  416ce4:	mov    edi,0xefffa77c
  416ce9:	cld    
  416cea:	es call ebp
  416ced:	dec    ebp
  416cee:	cs jmp 0xc0d4:0x84bf1636
  416cf6:	outs   dx,BYTE PTR ds:[esi]
  416cf7:	or     DWORD PTR [eax],esi
  416cf9:	data16 lods al,BYTE PTR ds:[esi]
  416cfb:	jns    0x416cc1
  416cfd:	pop    ecx
  416cfe:	jne    0x416ce0
  416d00:	loope  0x416d56
  416d02:	iret   
  416d03:	mul    DWORD PTR [esi+0x1a220fbf]
  416d09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d0a:	xor    al,BYTE PTR [ecx]
  416d0c:	inc    esi
  416d0d:	imul   esp,DWORD PTR [ecx+edx*2],0x31b49c1
  416d14:	adc    BYTE PTR [edi],dh
  416d16:	xor    BYTE PTR [esi],cl
  416d18:	or     dh,BYTE PTR [eax]
  416d1a:	push   edi
  416d1b:	xchg   esp,eax
  416d1c:	mov    edi,0x394f192a
  416d21:	pop    esp
  416d22:	add    al,0x8
  416d24:	in     eax,dx
  416d25:	inc    edi
  416d26:	sub    al,0x8f
  416d28:	sbb    al,0xac
  416d2a:	mov    esi,0x8d433d85
  416d2f:	mov    ds:0xb7e11ef3,eax
  416d34:	xchg   dx,ax
  416d36:	ja     0x416d30
  416d38:	ror    DWORD PTR [esi+0x71],1
  416d3b:	fnstcw WORD PTR ds:0xfd7a1f75
  416d41:	(bad)  
  416d42:	mov    ds:0x17acce1,eax
  416d47:	push   0xda9a871
  416d4c:	push   ecx
  416d4d:	hlt    
  416d4e:	sbb    bh,bl
  416d50:	cld    
  416d51:	dec    esp
  416d52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d53:	sti    
  416d54:	imul   DWORD PTR [edx+0x33]
  416d57:	enter  0x8b5f,0x61
  416d5b:	hlt    
  416d5c:	ja     0x416cfa
  416d5e:	int3   
  416d5f:	aad    0xcf
  416d61:	in     eax,0x4b
  416d63:	pop    ecx
  416d64:	sbb    edi,DWORD PTR [edx+0xad6bd0d]
  416d6a:	xchg   ebx,eax
  416d6b:	mov    edi,0x4391ed1
  416d70:	cld    
  416d71:	enter  0xf28c,0x77
  416d75:	xor    eax,0x59a61496
  416d7a:	cmp    BYTE PTR [ebx+0x56],bl
  416d7d:	fist   DWORD PTR [ecx+0x2c]
  416d80:	mov    ah,0xce
  416d82:	dec    ebx
  416d83:	mov    edx,0x4906acfb
  416d88:	dec    edi
  416d89:	dec    esp
  416d8a:	pop    edi
  416d8b:	mov    eax,ds:0xb476d4d3
  416d90:	cmc    
  416d91:	push   0xffffff93
  416d93:	sub    cl,al
  416d95:	gs jae 0x416d28
  416d98:	jmp    0x865d91eb
  416d9d:	lahf   
  416d9e:	dec    eax
  416d9f:	jns    0x416d48
  416da1:	or     DWORD PTR [ebx+0x12],ebx
  416da4:	pop    esi
  416da5:	aaa    
  416da6:	nop
  416da7:	jne    0x416dee
  416da9:	jb     0x416e28
  416dab:	sub    cl,bh
  416dad:	cmp    al,BYTE PTR [eax]
  416daf:	call   0x115f:0xbbbb38d2
  416db6:	dec    ecx
  416db7:	rol    BYTE PTR [ebp+0x6d],cl
  416dba:	sti    
  416dbb:	out    dx,al
  416dbc:	test   eax,0x49f302f
  416dc1:	jl     0x416db9
  416dc3:	fild   DWORD PTR [eax]
  416dc5:	inc    ebp
  416dc6:	cmc    
  416dc7:	add    DWORD PTR [ecx-0x2a],edx
  416dca:	mov    ebx,0x2cc8d30f
  416dcf:	imul   esp,DWORD PTR [ebx+0x3d],0xb7f1dc9c
  416dd6:	dec    esp
  416dd7:	sub    eax,DWORD PTR [eax]
  416dd9:	fbstp  TBYTE PTR [eax]
  416ddb:	aas    
  416ddc:	dec    ax
  416dde:	push   eax
  416ddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416de0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416de1:	repnz xchg edi,eax
  416de3:	aas    
  416de4:	xor    BYTE PTR [ebx-0x56],0x2f
  416de8:	out    0xaf,al
  416dea:	arpl   WORD PTR [edx+0xfccc6c1],bx
  416df0:	push   ebx
  416df1:	stos   BYTE PTR es:[edi],al
  416df2:	jg     0x416dfc
  416df4:	mov    ebp,0x3e0f2602
  416df9:	mov    ebx,0xe6e78501
  416dfe:	call   0x1862:0xcc9b64f4
  416e05:	push   ecx
  416e06:	xchg   esi,eax
  416e07:	ss inc edi
  416e09:	sbb    al,0x54
  416e0b:	clc    
  416e0c:	xor    dl,ah
  416e0e:	push   edi
  416e0f:	mov    ds:0xb441934a,al
  416e14:	xor    BYTE PTR [ecx-0x7a53078f],0x7a
  416e1b:	stos   BYTE PTR es:[edi],al
  416e1c:	cld    
  416e1d:	lock sub eax,0x94f3f99a
  416e23:	imul   edx,edx,0x12
  416e26:	cmc    
  416e27:	stos   BYTE PTR es:[edi],al
  416e28:	enterw 0xe315,0xba
  416e2d:	fld    TBYTE PTR [ecx]
  416e2f:	or     BYTE PTR [eax],bl
  416e31:	(bad)  
  416e32:	enter  0x1c04,0xb2
  416e36:	jp     0x416e69
  416e38:	and    al,BYTE PTR [edi]
  416e3a:	test   BYTE PTR [esi+edi*1-0x2efcbe25],bl
  416e41:	in     al,0x54
  416e43:	sbb    al,0xf3
  416e45:	sbb    dl,cl
  416e47:	mov    eax,0x89f7cb00
  416e4c:	(bad)  [edi+eax*8-0x1bdc7c4b]
  416e53:	add    BYTE PTR [ecx-0x7a],0x68
  416e57:	pop    edi
  416e58:	imul   esp,DWORD PTR [esp+ebp*2-0x55],0xffffff84
  416e5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e5e:	push   esp
  416e5f:	inc    ecx
  416e60:	jns    0x416e01
  416e62:	in     al,0xe5
  416e64:	sbb    eax,0x65d4bbcb
  416e69:	cld    
  416e6a:	arpl   bx,bx
  416e6c:	mov    ah,0x1d
  416e6e:	rcr    BYTE PTR [edi-0x3f],cl
  416e71:	in     eax,dx
  416e72:	popf   
  416e73:	les    esp,FWORD PTR [esi+0x7c]
  416e76:	cwde   
  416e77:	mov    ebx,0x7090629
  416e7c:	mov    ecx,0xee1104b3
  416e81:	mov    esi,0x576257ee
  416e86:	retf   0xe5e2
  416e89:	loope  0x416e0b
  416e8b:	in     eax,dx
  416e8c:	xchg   ebp,eax
  416e8d:	fst    DWORD PTR [esi]
  416e8f:	jo     0x416e50
  416e91:	or     ecx,DWORD PTR ds:0x47050792
  416e97:	jne    0x416efe
  416e99:	je     0x416e5d
  416e9b:	mov    gs,ebp
  416e9d:	lahf   
  416e9e:	push   ebx
  416e9f:	data16 fmulp st(3),st
  416ea2:	scas   al,BYTE PTR es:[edi]
  416ea3:	add    al,bh
  416ea5:	pop    edi
  416ea6:	push   0x2b
  416ea8:	sbb    bl,BYTE PTR [ebx]
  416eaa:	call   0x97b404bb
  416eaf:	clc    
  416eb0:	or     eax,0xfefb647
  416eb5:	jbe    0x416ef9
  416eb7:	arpl   cx,bp
  416eb9:	or     al,0xe0
  416ebb:	push   cs
  416ebc:	hlt    
  416ebd:	add    BYTE PTR [ecx-0x1454552c],bl
  416ec3:	xchg   edi,eax
  416ec4:	inc    eax
  416ec5:	nop
  416ec6:	adc    eax,0x8bc495fc
  416ecb:	push   ebp
  416ecc:	js     0x416f0c
  416ece:	inc    edx
  416ecf:	adc    ebx,esi
  416ed1:	sub    bh,cl
  416ed3:	call   0xa76bdba1
  416ed8:	(bad)  
  416ed9:	in     al,dx
  416eda:	mov    ecx,0xb654b35a
  416edf:	leave  
  416ee0:	mov    ds:0x5e858ca1,al
  416ee5:	sbb    BYTE PTR [eax-0x436c4fa1],al
  416eeb:	jge    0x416f31
  416eed:	or     al,0x1f
  416eef:	dec    ebx
  416ef0:	dec    edi
  416ef1:	jge    0x416ead
  416ef3:	add    dl,BYTE PTR [ebp-0x454e7df3]
  416ef9:	mov    al,ds:0x293861da
  416efe:	xchg   ecx,eax
  416eff:	fucomp st(4)
  416f01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f02:	outs   dx,BYTE PTR ds:[esi]
  416f03:	sahf   
  416f04:	adc    DWORD PTR [esp+ecx*8],ecx
  416f07:	fist   WORD PTR [esi-0x38]
  416f0a:	aaa    
  416f0b:	push   0x73c39a36
  416f10:	push   ss
  416f11:	sbb    cl,BYTE PTR [eax+edi*1-0x42a1928d]
  416f18:	imul   ebp,DWORD PTR [eax],0xffffff9e
  416f1b:	shl    ebp,1
  416f1d:	fucomi st,st(4)
  416f1f:	(bad)  
  416f21:	(bad)  
  416f23:	ins    BYTE PTR es:[edi],dx
  416f24:	jns    0x416f48
  416f26:	xor    DWORD PTR [ebx+0x8e8be19],esi
  416f2c:	popf   
  416f2d:	xchg   esi,eax
  416f2e:	mov    bh,0x8c
  416f30:	out    0x38,eax
  416f32:	xor    DWORD PTR ds:0x46f53f85,edi
  416f38:	mov    DWORD PTR [ebx+0x2e],ebp
  416f3b:	test   al,0xb5
  416f3d:	dec    ecx
  416f3e:	popf   
  416f3f:	inc    esp
  416f40:	push   es
  416f41:	mov    al,ds:0x6e4aca49
  416f46:	repnz (bad) 
  416f48:	out    0xeb,al
  416f4a:	sbb    BYTE PTR [edx+0x21caeed],bl
  416f50:	cmp    DWORD PTR [edi+0x24dd2a9a],0x39
  416f57:	(bad)  
  416f58:	in     al,dx
  416f59:	bound  ebp,QWORD PTR [ebx-0x3e208275]
  416f5f:	clc    
  416f60:	loope  0x416f09
  416f62:	mov    ebp,0x32a725cc
  416f67:	scas   al,BYTE PTR es:[edi]
  416f68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f69:	xchg   ecx,eax
  416f6a:	mov    dl,0xb5
  416f6c:	push   es
  416f6d:	ins    DWORD PTR es:[edi],dx
  416f6e:	outs   dx,BYTE PTR ds:[esi]
  416f6f:	fsubr  DWORD PTR [edx-0x30]
  416f72:	(bad)  
  416f73:	jle    0x416f64
  416f75:	(bad)  
  416f77:	jnp    0x416f19
  416f79:	cwde   
  416f7a:	push   ds
  416f7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f7c:	pop    ds
  416f7d:	iret   
  416f7e:	jnp    0x416f50
  416f80:	sahf   
  416f81:	(bad)
  416f84:	mov    ecx,0xd4b0951a
  416f89:	jl     0x416fdb
  416f8b:	pop    ds
  416f8c:	hlt    
  416f8d:	int    0x7a
  416f8f:	push   es
  416f90:	cmp    eax,0xff70cda6
  416f95:	xchg   ecx,eax
  416f96:	call   0x401b:0x75026cad
  416f9d:	mov    edx,0x868838a5
  416fa2:	push   edx
  416fa3:	sub    esp,0xffffff8a
  416fa6:	aad    0xb4
  416fa8:	(bad)
  416fac:	push   ds
  416fad:	jns    0x417020
  416faf:	or     ecx,DWORD PTR [ecx-0x4f]
  416fb2:	lods   eax,DWORD PTR ds:[esi]
  416fb3:	sbb    edi,eax
  416fb5:	inc    esi
  416fb6:	mov    WORD PTR [esi],ds
  416fb8:	mov    esi,0x191c05e0
  416fbd:	or     eax,0xd1085b64
  416fc2:	and    eax,0x6aba895d
  416fc7:	sar    DWORD PTR [edx+0x2f1ce263],cl
  416fcd:	add    ah,ah
  416fcf:	(bad)  
  416fd0:	rol    DWORD PTR [esi-0x2899a6bb],1
  416fd6:	in     al,0xd8
  416fd8:	(bad)  
  416fd9:	(bad)
  416fdd:	xor    eax,0x4fcf564c
  416fe2:	mov    ebx,DWORD PTR [ebp-0x3b]
  416fe5:	fnstcw WORD PTR [ecx+0x7b9724c9]
  416feb:	jmp    0x84cd:0x3baff251
  416ff2:	sub    DWORD PTR [ebx],0xffffff97
  416ff5:	sub    bh,BYTE PTR [ebp+0x7e2ba8a0]
  416ffb:	sub    al,0x5
  416ffd:	or     eax,0x3ce49e95
  417002:	or     DWORD PTR [edx+0x9],0xffffffc9
  417006:	mov    BYTE PTR [ebp+0x21e0a246],bl
  41700c:	in     eax,dx
  41700d:	dec    eax
  41700e:	adc    ebx,DWORD PTR [ebx]
  417010:	stc    
  417011:	or     eax,DWORD PTR [eax]
  417013:	sar    DWORD PTR [ebx],0xeb
  417016:	fmul   DWORD PTR [eax-0x46]
  417019:	push   edx
  41701a:	mov    esi,0x1c1ea0b
  41701f:	leave  
  417020:	lahf   
  417021:	sbb    eax,0x35cc2541
  417026:	push   ss
  417027:	xor    al,0xae
  417029:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41702a:	ins    DWORD PTR es:[edi],dx
  41702b:	hlt    
  41702c:	mov    ebp,0xbd8343ee
  417031:	outs   dx,DWORD PTR ds:[esi]
  417032:	adc    al,0x7
  417034:	xchg   esi,eax
  417035:	clc    
  417036:	test   BYTE PTR [eax+0x577189f5],bh
  41703c:	lock mov ds:0x73708642,eax
  417042:	cwde   
  417043:	inc    ebx
  417044:	lahf   
  417045:	push   es
  417046:	push   edx
  417047:	pop    edx
  417048:	push   ebx
  417049:	mov    ebp,0xb990ada3
  41704e:	mov    al,0xdf
  417050:	lods   eax,DWORD PTR ds:[esi]
  417051:	dec    ebp
  417052:	xchg   edi,eax
  417053:	faddp  st(4),st
  417055:	or     al,0x4b
  417057:	ins    BYTE PTR es:[edi],dx
  417058:	fcomi  st,st(7)
  41705a:	pop    ecx
  41705b:	jo     0x41701b
  41705d:	leave  
  41705e:	push   ebx
  41705f:	or     DWORD PTR [edx+0x1b],ecx
  417062:	mov    edi,0x47e4095b
  417067:	ret    
  417068:	shl    edx,0x6b
  41706b:	mov    WORD PTR [ebx],?
  41706d:	pop    edi
  41706e:	push   0x63
  417070:	mov    ebx,DWORD PTR [eax+0x33b79b02]
  417076:	pushf  
  417077:	sbb    eax,ecx
  417079:	dec    ebp
  41707a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41707b:	mov    ds:0xdeb53a18,al
  417080:	cmp    DWORD PTR [ecx],0x81f31f6a
  417086:	sub    BYTE PTR ds:0x6a3c6a51,bh
  41708c:	mov    edx,0x3f154e39
  417091:	pop    eax
  417092:	jns    0x4170c1
  417094:	aaa    
  417095:	push   ecx
  417096:	out    dx,eax
  417097:	mov    ds:0x6073e4aa,al
  41709c:	lods   al,BYTE PTR ds:[esi]
  41709d:	dec    esp
  41709e:	sbb    bh,BYTE PTR [ebx-0x4]
  4170a1:	xchg   BYTE PTR [ebx],bl
  4170a3:	push   ebp
  4170a4:	ss mov bh,0x7b
  4170a7:	(bad)  
  4170a8:	and    DWORD PTR [eax-0x6d],ebp
  4170ab:	xor    eax,0x3b478462
  4170b0:	aas    
  4170b1:	ror    BYTE PTR [esi],0x48
  4170b4:	and    eax,DWORD PTR [esi+0x27]
  4170b7:	ja     0x4170e9
  4170b9:	lods   al,BYTE PTR ds:[esi]
  4170ba:	sar    ebp,0x93
  4170bd:	dec    esi
  4170be:	(bad)  
  4170bf:	or     bl,dl
  4170c1:	sar    DWORD PTR [edi+0x68f03abf],1
  4170c7:	js     0x417093
  4170c9:	jbe    0x41711a
  4170cb:	es inc eax
  4170cd:	lea    edx,[edx+0x26]
  4170d0:	xchg   DWORD PTR [ebp-0x73],eax
  4170d3:	mov    al,ds:0x3bf0203e
  4170d8:	sub    cl,al
  4170da:	cmp    edx,esp
  4170dc:	mov    esp,0x54631090
  4170e1:	and    al,0x5a
  4170e3:	int    0xc3
  4170e5:	rcr    BYTE PTR [ebx],0xe9
  4170e8:	sahf   
  4170e9:	div    ecx
  4170eb:	pop    esp
  4170ec:	push   ds
  4170ed:	leave  
  4170ee:	bsf    edx,DWORD PTR [edi]
  4170f1:	cmp    eax,0xc2c7eba8
  4170f6:	fcomp  st(6)
  4170f8:	(bad)  
  4170f9:	ja     0x417154
  4170fb:	mov    DWORD PTR [esi],edx
  4170fd:	jle    0x4170ca
  4170ff:	das    
  417100:	stc    
  417101:	jno    0x417105
  417103:	mov    BYTE PTR [esi+eiz*1+0x58ba7575],al
  41710a:	jle    0x4170a7
  41710c:	mov    ecx,0xc7887ea
  417111:	(bad)  
  417112:	xor    esp,ebp
  417114:	pushf  
  417115:	cmp    BYTE PTR [edi-0x3],ch
  417118:	aam    0x5f
  41711a:	bound  edi,QWORD PTR [edx+0x49]
  41711d:	aaa    
  41711e:	lock mov esi,DWORD PTR [ebp-0x79a6c20d]
  417125:	cmp    dl,BYTE PTR [ecx]
  417127:	mov    esi,0xac073257
  41712c:	leave  
  41712d:	(bad)  
  41712e:	lds    edi,FWORD PTR [eax]
  417130:	xor    bh,BYTE PTR [ebx+0x1926908d]
  417136:	adc    ch,BYTE PTR [eax]
  417138:	cdq    
  417139:	adc    BYTE PTR [ebp-0x9],bh
  41713c:	fimul  DWORD PTR ds:0x5822e1b5
  417142:	mov    ch,BYTE PTR [ebp-0x1b]
  417145:	add    ah,bh
  417147:	dec    esi
  417148:	push   edi
  417149:	mov    bh,0xc8
  41714b:	sub    eax,0xf91f48d0
  417150:	push   esp
  417151:	xchg   DWORD PTR [esp+ebp*4+0x5ae3686c],esp
  417158:	push   0xffffff83
  41715a:	test   al,0x3a
  41715c:	sbb    BYTE PTR [ecx+0x6c3d5d01],ah
  417162:	jmp    0xadff:0x3baf74a4
  417169:	add    al,0x3b
  41716b:	mov    al,ds:0xe92def3d
  417170:	fwait
  417171:	hlt    
  417172:	imul   esp,edi,0x77c582b4
  417178:	lds    ebx,FWORD PTR [eax+esi*8-0x50]
  41717c:	or     BYTE PTR [edi-0x4b],bl
  41717f:	cmc    
  417180:	xor    DWORD PTR [edi-0x43576a08],eax
  417186:	jns    0x417109
  417188:	jl     0x41716b
  41718a:	mov    al,0x73
  41718c:	jge    0x4171d1
  41718e:	inc    ebp
  41718f:	scas   al,BYTE PTR es:[edi]
  417190:	sahf   
  417191:	popf   
  417192:	xchg   ecx,eax
  417193:	aam    0x36
  417195:	ficom  WORD PTR [ebp+0x6aaab88]
  41719b:	xlat   BYTE PTR ds:[ebx]
  41719c:	push   edi
  41719d:	xor    al,0xa9
  41719f:	jbe    0x4171e8
  4171a1:	nop
  4171a2:	and    eax,0x326b04da
  4171a7:	push   eax
  4171a8:	sbb    al,0x2b
  4171aa:	mov    ebx,0x82c1dc7
  4171af:	mov    eax,ds:0x80c8f23e
  4171b4:	push   ebx
  4171b5:	add    ecx,edi
  4171b7:	(bad)  
  4171b8:	push   ds
  4171b9:	pop    ebp
  4171ba:	ror    DWORD PTR [eax+0x5bb6c2ed],1
  4171c0:	mov    ecx,eax
  4171c2:	mov    eax,ds:0xe4dc039
  4171c7:	in     eax,0x6c
  4171c9:	cld    
  4171ca:	rol    eax,cl
  4171cc:	popf   
  4171cd:	cs fs cmp eax,0xf8575e5e
  4171d4:	fsubr  DWORD PTR [ecx+0x72]
  4171d7:	fisttp DWORD PTR [ebx]
  4171d9:	aas    
  4171da:	pop    ebp
  4171db:	and    cl,BYTE PTR [ebp+0x72]
  4171de:	jbe    0x417223
  4171e0:	shl    DWORD PTR [ecx+eax*2+0x1c],cl
  4171e4:	dec    esp
  4171e5:	or     BYTE PTR ds:0xba7a4e1b,dh
  4171eb:	pop    ss
  4171ec:	dec    ecx
  4171ed:	inc    edi
  4171ee:	sub    eax,0xe58e4cd0
  4171f3:	mov    DWORD PTR [esi-0x1d],edx
  4171f6:	add    ebp,eax
  4171f8:	popa   
  4171f9:	pop    esp
  4171fa:	inc    esp
  4171fb:	mov    edx,0x7aa5842c
  417200:	sbb    al,BYTE PTR [eax+0x7e]
  417203:	jmp    0xabef:0x80493962
  41720a:	mov    al,ds:0xf6f2570f
  41720f:	ret    
  417210:	mov    ecx,0x35dca3eb
  417215:	adc    cl,BYTE PTR [ebp+0x13e08f54]
  41721b:	pop    esi
  41721c:	mov    dh,0xb1
  41721e:	fwait
  41721f:	stc    
  417220:	jecxz  0x4171b1
  417222:	ror    BYTE PTR [esi-0x46],cl
  417225:	imul   esi,DWORD PTR [ebx+0x257b8b74],0xffffff91
  41722c:	outs   dx,BYTE PTR ds:[esi]
  41722d:	(bad)  
  41722e:	dec    esp
  41722f:	jmp    0x417284
  417231:	jmp    0x22d9:0x571ab0bf
  417238:	xchg   ebp,eax
  417239:	in     eax,dx
  41723a:	adc    al,0xa9
  41723c:	or     edx,DWORD PTR [ebp+0x7ed62067]
  417242:	or     eax,0xc491aec9
  417247:	outs   dx,DWORD PTR ds:[esi]
  417248:	jns    0x4171f4
  41724a:	pop    eax
  41724b:	xor    DWORD PTR [ebx-0x375c59a0],0x6f73adf3
  417255:	lahf   
  417256:	and    ebx,DWORD PTR [edi+edx*4]
  417259:	std    
  41725a:	fsubr  QWORD PTR [edx-0x3a]
  41725d:	jp     0x4172a2
  41725f:	and    DWORD PTR [ecx+edi*4],eax
  417262:	int3   
  417263:	mov    ebx,0xd15f1450
  417268:	stos   DWORD PTR es:[edi],eax
  417269:	arpl   WORD PTR ds:0x19ac7d6d,si
  41726f:	dec    esp
  417270:	inc    ebx
  417271:	test   DWORD PTR [ebp+0x58],edi
  417274:	mov    ax,0x958d
  417278:	ja     0x4172d3
  41727a:	or     al,0xe2
  41727c:	add    edi,edx
  41727e:	test   esp,ecx
  417280:	or     BYTE PTR [edx-0x2712fb26],0x34
  417287:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  417289:	popa   
  41728a:	pop    es
  41728b:	add    ebx,DWORD PTR [edi-0x41]
  41728e:	jns    0x417305
  417290:	mov    al,dh
  417292:	mov    esp,0xa273d02
  417297:	jne    0x41722a
  417299:	hlt    
  41729a:	out    dx,eax
  41729b:	rol    DWORD PTR [ebx],0x67
  41729e:	out    0xe0,eax
  4172a0:	fcmovu st,st(7)
  4172a2:	rol    DWORD PTR [edi-0x29],0x76
  4172a6:	clc    
  4172a7:	inc    ebx
  4172a8:	rcl    BYTE PTR [esi-0x26ec6425],cl
  4172ae:	hlt    
  4172af:	in     al,0x5c
  4172b1:	inc    ebp
  4172b2:	lahf   
  4172b3:	mov    DWORD PTR [ebp+0x26],ebp
  4172b6:	repz cs cmp ebp,esp
  4172ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172bb:	or     bl,BYTE PTR [edx]
  4172bd:	sbb    DWORD PTR [edx+0x5c4f7328],esi
  4172c3:	int    0x51
  4172c5:	or     esi,DWORD PTR [edx+0x7f]
  4172c8:	inc    esp
  4172c9:	sub    BYTE PTR [ebx+esi*1+0x1b],bh
  4172cd:	or     al,bh
  4172cf:	pushf  
  4172d0:	out    0x1e,eax
  4172d2:	mov    ch,0xc6
  4172d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172d5:	mul    cl
  4172d7:	in     al,0xd7
  4172d9:	jbe    0x4172c7
  4172db:	pop    edi
  4172dc:	cmp    ebp,DWORD PTR [edx+0xb004a8d]
  4172e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172e3:	dec    esi
  4172e4:	ja     0x4172bf
  4172e6:	(bad)  
  4172e7:	jecxz  0x417338
  4172e9:	(bad)  
  4172ea:	mov    esi,DWORD PTR [ecx]
  4172ec:	pop    ds
  4172ed:	fdiv   QWORD PTR [esi+0x43]
  4172f0:	xchg   edi,eax
  4172f1:	jbe    0x4172f6
  4172f3:	jmp    0x4172c2
  4172f5:	or     DWORD PTR [ecx],esi
  4172f7:	mov    ds:0x646f7ef,al
  4172fc:	int3   
  4172fd:	call   0x3efb:0x67eb8ee4
  417304:	fld    QWORD PTR [ecx-0x4bd51941]
  41730a:	and    ch,BYTE PTR ds:0x5d645ef1
  417310:	jo     0x417328
  417312:	lahf   
  417313:	jp     0x4172f8
  417315:	lods   al,BYTE PTR ds:[esi]
  417316:	(bad)  
  417317:	and    DWORD PTR [edi-0x3c],edi
  41731a:	xor    eax,0x5999dad2
  41731f:	ret    
  417320:	pop    ebx
  417321:	imul   eax,DWORD PTR [esi+0x1c],0xfe909c10
  417328:	mov    esi,edx
  41732a:	sub    ebx,DWORD PTR [eax]
  41732c:	into   
  41732d:	int3   
  41732e:	fmul   st(1),st
  417330:	push   0x82e393d6
  417335:	std    
  417336:	xchg   bl,bh
  417338:	pop    esp
  417339:	push   cs
  41733a:	sub    DWORD PTR ss:[eax+0x19aec8af],ebp
  417341:	adc    eax,0xa6e1c18
  417346:	out    dx,al
  417347:	pop    esi
  417348:	rcr    DWORD PTR [eax],0x22
  41734b:	sbb    ebp,DWORD PTR [eax+0x47f2ac39]
  417351:	cmp    al,0xc8
  417353:	mov    bl,0x60
  417355:	sub    al,0x46
  417357:	ds in  al,0x2a
  41735a:	or     DWORD PTR [ebx+0x3],edx
  41735d:	inc    ebx
  41735e:	movlps QWORD PTR [ebp-0x7d],xmm1
  417362:	pop    eax
  417363:	mov    cl,0x38
  417365:	jns    0x4173e4
  417367:	mov    bl,bh
  417369:	and    eax,0xef6e7f20
  41736e:	and    ebp,edx
  417370:	dec    BYTE PTR [edi]
  417372:	std    
  417373:	mov    dl,0x8a
  417375:	push   0xfbbcd0ab
  41737a:	ds sbb edx,ebp
  41737d:	es pop ss
  41737f:	mov    ebx,0xbc3e6d27
  417384:	add    eax,0xf17298ae
  417389:	into   
  41738a:	add    BYTE PTR [eax-0x4572464e],0x84
  417391:	lods   eax,DWORD PTR ds:[esi]
  417392:	mov    ebp,0x37a38771
  417397:	dec    edi
  417398:	pop    edi
  417399:	rcr    al,0x1
  41739c:	mov    cl,0xc6
  41739e:	aaa    
  41739f:	shl    BYTE PTR [ebp+edx*4-0xae55c36],cl
  4173a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173a7:	mov    eax,ds:0x19dc314e
  4173ac:	jo     0x4173f7
  4173ae:	or     eax,0x8f5c2a46
  4173b3:	fcmovne st,st(6)
  4173b5:	daa    
  4173b6:	mov    esi,0xf3e21c96
  4173bb:	mov    bl,0x27
  4173bd:	xchg   ebp,eax
  4173be:	out    0x2e,al
  4173c0:	call   0x174f:0xaea6c012
  4173c7:	push   cs
  4173c8:	dec    ebx
  4173c9:	mov    dh,0xd
  4173cb:	pop    edi
  4173cc:	pop    edx
  4173cd:	jge    0x41735f
  4173cf:	ret    
  4173d0:	mov    esp,0x1a6bfef4
  4173d5:	pop    esp
  4173d6:	(bad)  
  4173d7:	lock pop ecx
  4173d9:	adc    ebp,DWORD PTR [esi+0x19654377]
  4173df:	fs sub al,0x2f
  4173e2:	lock jno 0x4173ba
  4173e5:	jb     0x41737d
  4173e7:	popf   
  4173e8:	test   DWORD PTR [ecx-0x3d],edx
  4173eb:	xchg   edx,eax
  4173ec:	in     al,0xb8
  4173ee:	lea    esi,[ecx]
  4173f0:	(bad)  
  4173f1:	out    dx,eax
  4173f2:	jb     0x417463
  4173f4:	cmp    eax,DWORD PTR [edx-0x2bf423e4]
  4173fa:	sub    ecx,esi
  4173fc:	in     eax,dx
  4173fd:	das    
  4173fe:	(bad)  
  4173ff:	jbe    0x41740a
  417401:	and    BYTE PTR [eax+edi*1],ah
  417404:	(bad)  
  417405:	idiv   DWORD PTR [ebx+0x2f]
  417408:	lds    ecx,FWORD PTR [ecx-0x59]
  41740b:	nop    DWORD PTR ds:0x76b147c8
  417412:	mov    WORD PTR [ecx+0x6a],cs
  417415:	and    eax,0x2b613171
  41741a:	xchg   ecx,eax
  41741b:	cld    
  41741c:	cmp    ebx,DWORD PTR [edi+0x2c]
  41741f:	dec    esi
  417420:	inc    edi
  417421:	mov    bl,0x90
  417423:	mov    cl,0x40
  417425:	inc    ecx
  417426:	jb     0x4173e8
  417428:	mov    esi,0xd4fcc07c
  41742d:	dec    edx
  41742e:	daa    
  41742f:	js     0x417498
  417431:	rcl    DWORD PTR [edi],cl
  417433:	mov    edi,0xe30edec8
  417438:	jp     0x417404
  41743a:	div    cl
  41743c:	mov    edi,0x5d9ed1a9
  417441:	xor    al,0x64
  417443:	push   cs
  417444:	or     al,dh
  417446:	scas   al,BYTE PTR es:[edi]
  417447:	std    
  417448:	push   ecx
  417449:	fxch   st(0)
  41744b:	sub    eax,0xb6705cfb
  417450:	lock sub edx,DWORD PTR [esp+ecx*4-0x3e3fd5d3]
  417458:	loope  0x41743d
  41745a:	call   0xf67d00a6
  41745f:	mov    cl,0x40
  417461:	jmp    0x41743b
  417463:	fnsave [ebx]
  417465:	mov    eax,0x62dfbee3
  41746a:	sub    ebp,ebx
  41746c:	fs pop ss
  41746e:	fwait
  41746f:	fwait
  417470:	ja     0x41745b
  417472:	push   eax
  417473:	jmp    0x417447
  417475:	mov    DWORD PTR [edi-0x6ba3d71f],ecx
  41747b:	mov    al,0x52
  41747d:	dec    esp
  41747e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41747f:	pusha  
  417480:	jne    0x4174c3
  417482:	lods   al,BYTE PTR ds:[esi]
  417483:	xchg   esi,eax
  417484:	push   cs
  417485:	inc    esi
  417486:	pop    es
  417487:	dec    DWORD PTR [eax+0x2c3a86f3]
  41748d:	ret    
  41748e:	jnp    0x4174d6
  417490:	and    DWORD PTR [esi-0x7c],ebp
  417493:	push   esi
  417494:	inc    esi
  417495:	mov    ch,0xfb
  417497:	pop    esi
  417498:	fadd   QWORD PTR [edi]
  41749a:	hlt    
  41749b:	pop    ebx
  41749c:	imul   ebp,DWORD PTR [ebp+0x63],0x3a
  4174a0:	popa   
  4174a1:	push   esi
  4174a2:	add    ch,BYTE PTR [bp+di-0x2b]
  4174a6:	xor    BYTE PTR [edi],cl
  4174a8:	imul   edi,DWORD PTR [edi],0x940d2d1f
  4174ae:	enter  0x9416,0xf3
  4174b2:	stos   BYTE PTR es:[edi],al
  4174b3:	dec    esp
  4174b4:	mov    ds:0x118e4511,al
  4174b9:	or     ch,BYTE PTR [esi]
  4174bb:	test   BYTE PTR [eax+ebx*4],0xa5
  4174bf:	xchg   DWORD PTR [esi],esi
  4174c1:	sar    ebx,cl
  4174c3:	and    al,0x24
  4174c5:	pop    ebx
  4174c6:	enter  0xd7ff,0x85
  4174ca:	jmp    0x4174d4
  4174cc:	jl     0x41748c
  4174ce:	call   0x7f60:0x1c05
  4174d4:	inc    ebx
  4174d5:	out    dx,ax
  4174d7:	sbb    DWORD PTR [ecx],ebx
  4174d9:	dec    ebx
  4174da:	mov    BYTE PTR [eax+0x637d92f5],cl
  4174e0:	sub    DWORD PTR ds:0x9fbe16cb,0x76
  4174e7:	daa    
  4174e8:	jo     0x4174b5
  4174ea:	cmp    dh,BYTE PTR [ecx]
  4174ec:	mov    DWORD PTR [ebx+0x1c],edx
  4174ef:	inc    ebx
  4174f0:	adc    eax,0x3c170160
  4174f5:	call   0xba61:0x218f14d3
  4174fc:	mov    edx,0x5c809bad
  417501:	hlt    
  417502:	daa    
  417503:	stc    
  417504:	push   esi
  417505:	jns    0x417543
  417507:	daa    
  417508:	mov    dh,0x73
  41750a:	arpl   WORD PTR [ecx+eax*1+0x77ecd80],cx
  417511:	inc    esp
  417512:	js     0x41755f
  417514:	xchg   esp,eax
  417515:	adc    al,0x3a
  417517:	cld    
  417518:	add    eax,0xd7b1020e
  41751d:	js     0x41758f
  41751f:	test   al,0x9b
  417521:	adc    ah,ah
  417523:	not    DWORD PTR [ecx]
  417525:	aas    
  417526:	and    BYTE PTR [esi-0x3cd9bbde],bl
  41752c:	pop    edi
  41752d:	fldcw  WORD PTR [edi-0x24]
  417530:	add    al,0x37
  417532:	out    dx,al
  417533:	les    esi,FWORD PTR [esi+0x292d2541]
  417539:	or     al,0xff
  41753b:	or     BYTE PTR [edi+0x216951c1],dl
  417541:	fimul  DWORD PTR [eax+0x6b]
  417544:	(bad)  
  417545:	and    dh,0x58
  417548:	xchg   esi,eax
  417549:	ret    
  41754a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41754b:	or     DWORD PTR [ebx],eax
  41754d:	jge    0x4175bb
  41754f:	add    ah,0xb
  417552:	into   
  417553:	cwde   
  417554:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  417556:	jge    0x4174e3
  417558:	retf   0x2e6e
  41755b:	mov    ch,0x23
  41755d:	cmc    
  41755e:	push   ecx
  41755f:	push   0x5452ce51
  417564:	mov    ch,0xd1
  417566:	arpl   WORD PTR [ebx-0x54],bx
  417569:	sbb    esp,ecx
  41756b:	pop    edx
  41756c:	inc    edi
  41756d:	xchg   esi,eax
  41756e:	popf   
  41756f:	pop    ebp
  417570:	push   ds
  417571:	mov    al,0xea
  417573:	pop    es
  417574:	or     eax,0xf390134b
  417579:	pusha  
  41757a:	(bad)  
  41757b:	mov    edx,0x74c85c78
  417580:	imul   ecx,DWORD PTR [ebx],0xba3ba0e8
  417586:	fadd   QWORD PTR [ebp+edi*2-0x23]
  41758a:	mov    eax,ds:0xe726b2c8
  41758f:	fdiv   st(7),st
  417591:	shl    DWORD PTR cs:[eax],0x21
  417595:	push   esi
  417596:	shr    BYTE PTR [esi],1
  417598:	xchg   esi,eax
  417599:	xor    al,0x63
  41759b:	jno    0x417601
  41759d:	mov    ds:0xfb261863,al
  4175a2:	adc    eax,0x6ffbb95b
  4175a7:	sbb    DWORD PTR [eax],ebx
  4175a9:	or     ecx,0x49
  4175ac:	xchg   esp,eax
  4175ad:	push   0x1f316830
  4175b2:	les    si,DWORD PTR [ebp+0x7da1816d]
  4175b9:	(bad)  
  4175ba:	retf   
  4175bb:	mov    cl,0xd0
  4175bd:	sahf   
  4175be:	inc    ebx
  4175bf:	mov    ds:0xd5fc997b,eax
  4175c4:	stos   BYTE PTR es:[edi],al
  4175c5:	aaa    
  4175c6:	test   esi,edx
  4175c8:	outs   dx,DWORD PTR ds:[esi]
  4175c9:	mov    bl,0x8e
  4175cb:	jp     0x4175f1
  4175cd:	fbstp  TBYTE PTR [eax+0x55]
  4175d0:	in     eax,0xee
  4175d2:	sub    DWORD PTR [edi+esi*4],0xffffffdb
  4175d6:	inc    ecx
  4175d7:	push   0x4
  4175d9:	ror    bh,1
  4175db:	call   DWORD PTR [esi+ebp*8-0x59b249c6]
  4175e2:	loope  0x4175dc
  4175e4:	scas   al,BYTE PTR es:[edi]
  4175e5:	mov    edi,0x28b6322c
  4175ea:	aaa    
  4175eb:	loopne 0x417639
  4175ed:	mov    ebp,0xe9f72dec
  4175f2:	push   eax
  4175f3:	out    0xc5,eax
  4175f5:	loope  0x41766e
  4175f7:	mov    eax,0x49606441
  4175fc:	cmp    ecx,DWORD PTR [edx+0x4cb68cb0]
  417602:	inc    esi
  417603:	and    DWORD PTR [eax],0x43695d84
  417609:	rcl    DWORD PTR [eax],cl
  41760b:	pop    ebx
  41760c:	pop    edi
  41760d:	and    edx,esi
  41760f:	jne    0x4175a0
  417611:	imul   esp,DWORD PTR [esi+0x5bb34fcb],0x5e
  417618:	sbb    esi,DWORD PTR [esi-0x49]
  41761b:	in     eax,0xdd
  41761d:	shr    DWORD PTR [esi+0x384e8315],cl
  417623:	repnz rcl bh,0x58
  417627:	mov    DWORD PTR [esi],edx
  417629:	into   
  41762a:	sbb    ah,bl
  41762c:	sub    ebx,ebx
  41762e:	pop    ecx
  41762f:	or     BYTE PTR [esi+ebx*1+0x280ded62],dl
  417636:	dec    eax
  417637:	pop    ss
  417638:	mov    bh,0xa2
  41763a:	pop    eax
  41763b:	pop    ebp
  41763c:	or     DWORD PTR [esp+ebx*1],esp
  41763f:	xchg   edx,eax
  417640:	mov    esp,0xcb42e58b
  417645:	inc    eax
  417646:	xchg   edi,eax
  417647:	xchg   edx,eax
  417648:	fild   QWORD PTR [eax]
  41764a:	sub    DWORD PTR [edi+eiz*8+0x63],eax
  41764e:	add    DWORD PTR [ebx-0xc],ebp
  417651:	pop    ss
  417652:	test   al,0x68
  417654:	push   ebp
  417655:	push   edx
  417656:	jecxz  0x4175ec
  417658:	shr    al,1
  41765a:	(bad)
  41765d:	fsub   QWORD PTR ds:0xd6ff15c1
  417663:	lea    eax,[eax+0x9167f77]
  417669:	les    ebx,FWORD PTR [edi-0x72]
  41766c:	ret    0xb41e
  41766f:	mov    esi,0xefb63d1a
  417674:	mov    edx,0x1ff66f4b
  417679:	xor    cl,BYTE PTR [esi+0x38f4f532]
  41767f:	inc    edi
  417680:	stos   BYTE PTR es:[edi],al
  417681:	in     eax,dx
  417682:	push   cs
  417683:	mov    dl,0x16
  417685:	daa    
  417686:	dec    esi
  417687:	ror    BYTE PTR [edi+eiz*1-0x4d360b58],1
  41768e:	xchg   ecx,eax
  41768f:	lock mov al,0x4e
  417692:	out    0xa8,al
  417694:	push   es
  417695:	nop
  417696:	aad    0x7b
  417698:	xor    esp,ebx
  41769a:	mov    bl,0xe7
  41769c:	jbe    0x41762f
  41769e:	repz fst QWORD PTR [eax]
  4176a1:	clc    
  4176a2:	daa    
  4176a3:	test   DWORD PTR [esi-0x532626b3],esp
  4176a9:	bound  ebx,QWORD PTR [ecx+0x51056210]
  4176af:	pop    ecx
  4176b0:	(bad)  
  4176b1:	pop    edi
  4176b2:	in     al,dx
  4176b3:	(bad)  
  4176b5:	cmp    eax,0x32831d51
  4176ba:	jecxz  0x417645
  4176bc:	or     esp,DWORD PTR [ebp-0x553d30ec]
  4176c2:	test   eax,0x69ef9db6
  4176c7:	dec    esp
  4176c8:	mov    dl,0x7e
  4176ca:	add    al,0x67
  4176cc:	sbb    al,0x59
  4176ce:	jmp    0x4c4bf8f6
  4176d3:	add    ebx,edi
  4176d5:	les    ebp,FWORD PTR [ebp-0x5e]
  4176d8:	ds cs pop ecx
  4176db:	fild   WORD PTR [ebx]
  4176dd:	cmp    ch,ah
  4176df:	rol    DWORD PTR [edx+0x5d944db4],cl
  4176e5:	rcl    BYTE PTR [ebx],1
  4176e7:	inc    edx
  4176e8:	pushf  
  4176e9:	mov    edi,0x1ac3c737
  4176ee:	repz pop eax
  4176f0:	or     BYTE PTR [eax+0x2df4005e],dh
  4176f6:	ret    
  4176f7:	aas    
  4176f8:	gs pop ebx
  4176fa:	inc    ecx
  4176fb:	bound  ebp,QWORD PTR [ebx]
  4176fd:	add    al,0xb5
  4176ff:	xchg   ecx,eax
  417700:	mov    ebx,0xc09307b4
  417705:	mov    bh,0xa0
  417707:	sub    eax,0xe9ae1f52
  41770c:	mov    ds:0x50cbd1c2,al
  417711:	xor    esi,DWORD PTR [esi+0x4c]
  417714:	std    
  417715:	pop    ecx
  417716:	mov    ah,0x11
  417718:	(bad)  
  417719:	or     dh,ah
  41771b:	push   esp
  41771c:	bound  edx,QWORD PTR [eax]
  41771e:	popf   
  41771f:	sti    
  417720:	rcr    dl,cl
  417722:	or     esp,DWORD PTR [ebx+0x50687405]
  417728:	push   es
  417729:	scas   eax,DWORD PTR es:[edi]
  41772a:	pushf  
  41772b:	fld    DWORD PTR [ebp+0x1e623cd6]
  417731:	mov    al,0xba
  417733:	xchg   BYTE PTR [edi],dh
  417735:	jge    0x417743
  417737:	mov    esp,0xce968779
  41773c:	and    ecx,0xe9ef4ac2
  417742:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417743:	out    0x4c,eax
  417745:	inc    edx
  417746:	pop    ecx
  417747:	jg     0x417735
  417749:	mov    cs,WORD PTR [edi-0x50]
  41774c:	push   esp
  41774d:	in     eax,0x98
  41774f:	and    bh,BYTE PTR [edx]
  417751:	xchg   esi,eax
  417752:	loopne 0x41774a
  417754:	cmp    al,0x1d
  417756:	les    esi,FWORD PTR [ecx+eiz*8]
  417759:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41775a:	sub    ebp,edi
  41775c:	dec    ecx
  41775d:	stos   BYTE PTR es:[edi],al
  41775e:	sbb    ebp,DWORD PTR [ebx+0x4c]
  417761:	pop    edi
  417762:	(bad)  
  417763:	mov    esi,esp
  417765:	mov    ebp,0xd61453ea
  41776a:	xor    al,BYTE PTR [edi+0x7e]
  41776d:	pop    ebx
  41776e:	and    edi,DWORD PTR [ecx]
  417770:	lods   eax,DWORD PTR ds:[esi]
  417771:	out    0xd,al
  417773:	jecxz  0x4176fe
  417775:	call   0xfea8b98e
  41777a:	sbb    dl,BYTE PTR [ecx+0x5a]
  41777d:	out    dx,eax
  41777e:	push   0xffffffcb
  417780:	adc    ebx,DWORD PTR [eax+0x7d]
  417783:	pusha  
  417784:	cmp    esi,DWORD PTR [eax-0x6]
  417787:	dec    eax
  417788:	rcl    BYTE PTR [edx+edx*8],cl
  41778b:	scas   eax,DWORD PTR es:[di]
  41778d:	in     eax,dx
  41778e:	jmp    0x41776a
  417790:	mov    WORD PTR [edx],fs
  417792:	aaa    
  417793:	adc    BYTE PTR [ebx+0x64539b9a],0xd7
  41779a:	mov    ebx,0x3e45246f
  41779f:	enter  0x9d74,0x58
  4177a3:	fxch   st(7)
  4177a5:	adc    al,0x3d
  4177a7:	call   0x9290:0x9d3628d
  4177ae:	pop    es
  4177af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177b0:	sub    DWORD PTR [ebx+0x75744f57],0x53
  4177b7:	mov    ecx,0xc317883f
  4177bc:	ins    BYTE PTR es:[edi],dx
  4177bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177be:	loopne 0x417797
  4177c0:	mov    ecx,0xa4ec0e8b
  4177c5:	ret    0xdcb8
  4177c8:	adc    eax,0xf8895b1d
  4177cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177ce:	shr    DWORD PTR [ebp+0x2124e9bb],0xcb
  4177d5:	mov    ds:0x68a4a8c5,al
  4177da:	aad    0xb8
  4177dc:	int    0x61
  4177de:	repz fwait
  4177e0:	aas    
  4177e1:	push   es
  4177e2:	xor    ebp,edx
  4177e4:	loopne 0x417805
  4177e6:	push   ebp
  4177e7:	ret    0x25af
  4177ea:	or     BYTE PTR ds:0x10b09378,ch
  4177f0:	lods   al,BYTE PTR ds:[esi]
  4177f1:	push   cs
  4177f2:	xchg   ebp,eax
  4177f3:	outs   dx,DWORD PTR ds:[esi]
  4177f4:	push   edx
  4177f5:	in     eax,dx
  4177f6:	sub    eax,0x3d3c52de
  4177fb:	cdq    
  4177fc:	add    ecx,DWORD PTR es:[ebx]
  4177ff:	lods   al,BYTE PTR ds:[esi]
  417800:	and    al,0xbb
  417802:	inc    edi
  417803:	call   0xcbe62fec
  417808:	in     al,dx
  417809:	pusha  
  41780a:	shl    BYTE PTR [ecx+0xe],cl
  41780d:	iret   
  41780e:	pop    edx
  41780f:	sbb    DWORD PTR [ebx],esi
  417811:	mov    BYTE PTR ds:0xfbd06a4a,dl
  417817:	out    dx,al
  417818:	cld    
  417819:	xchg   ebp,eax
  41781a:	outs   dx,DWORD PTR ds:[esi]
  41781b:	or     dh,ah
  41781d:	xchg   DWORD PTR ds:0x455db51b,ecx
  417823:	fist   DWORD PTR [esi]
  417825:	inc    ebp
  417826:	mov    edi,0x9345bb1f
  41782b:	mov    dh,0x1b
  41782d:	cmp    BYTE PTR gs:[esi-0x7fcfb93],bh
  417834:	daa    
  417835:	jmp    0x14e70787
  41783a:	leave  
  41783b:	mov    edx,0xdac5b23c
  417840:	xchg   esi,eax
  417841:	adc    eax,0x440fb0c9
  417846:	mov    esi,0x5ecbd860
  41784b:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41784d:	aad    0x2f
  41784f:	dec    BYTE PTR [edx-0x11a5e0fb]
  417855:	je     0x4177de
  417857:	fwait
  417858:	gs icebp 
  41785a:	xor    al,0xd1
  41785c:	pop    ebp
  41785d:	jmp    0x24f7:0xfcc9f062
  417864:	or     bh,BYTE PTR [ecx]
  417866:	cmp    DWORD PTR [ecx-0x610461be],edi
  41786c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41786d:	call   0xd896e6de
  417872:	pop    ss
  417873:	or     BYTE PTR [edx-0x66],cl
  417876:	in     al,0xaa
  417878:	fimul  WORD PTR [ecx-0x7b]
  41787b:	mov    WORD PTR [edi+0x6f7caedb],es
  417881:	push   esi
  417882:	mov    edi,0xd2fef571
  417887:	add    esi,0x1c752a4b
  41788d:	dec    ebx
  41788e:	mov    ds:0x467a025b,eax
  417893:	fs pop esi
  417895:	gs sbb esi,ebp
  417898:	test   BYTE PTR [edi],ch
  41789a:	dec    ebx
  41789b:	push   0xfffffff4
  41789d:	xchg   DWORD PTR [edi],ebx
  41789f:	ja     0x41783c
  4178a1:	lds    ebx,FWORD PTR [edi+0x4bfe2426]
  4178a7:	in     eax,0x49
  4178a9:	rcr    BYTE PTR [edi+0x46],1
  4178ac:	test   eax,0xbc44c953
  4178b1:	pusha  
  4178b2:	push   0xffffffcc
  4178b4:	fldcw  WORD PTR [edx]
  4178b6:	int3   
  4178b7:	cmc    
  4178b8:	shr    ebp,cl
  4178ba:	xchg   DWORD PTR [edi+0x65],esp
  4178bd:	and    eax,0xd168f248
  4178c2:	ds dec edx
  4178c4:	push   esi
  4178c5:	cmp    dh,BYTE PTR [edi+esi*2]
  4178c8:	push   esi
  4178c9:	scas   eax,DWORD PTR es:[edi]
  4178ca:	jo     0x41789d
  4178cc:	xor    esp,edx
  4178ce:	in     eax,0xac
  4178d0:	jle    0x41786a
  4178d2:	jle    0x4178ac
  4178d4:	iret   
  4178d5:	rcl    DWORD PTR [eax+0x6b],0x5f
  4178d9:	xchg   edx,eax
  4178da:	aaa    
  4178db:	mov    ah,0x9
  4178dd:	nop
  4178de:	pop    edx
  4178df:	mov    al,ds:0xc9d0e9ad
  4178e4:	and    eax,0xc31c0635
  4178e9:	mov    ah,BYTE PTR [eax]
  4178eb:	ret    0xa771
  4178ee:	fild   QWORD PTR [esi+ebx*1]
  4178f1:	in     eax,dx
  4178f2:	jp     0x41789a
  4178f4:	setp   BYTE PTR [eax+0x7d8ac2d4]
  4178fb:	lds    edx,FWORD PTR [edi]
  4178fd:	mov    ecx,0xa1f351d0
  417902:	cmp    eax,0xa4a70aab
  417907:	sbb    BYTE PTR [edi-0x3dc53c96],ch
  41790d:	and    al,0x4a
  41790f:	mov    al,BYTE PTR [ecx+0x44]
  417912:	(bad)  [edi-0x17]
  417915:	(bad)  
  417916:	cli    
  417917:	daa    
  417918:	and    bl,BYTE PTR [eax]
  41791a:	add    DWORD PTR [eax],esp
  41791c:	mov    eax,ds:0x6bc7f847
  417921:	mov    ebx,0xca44f274
  417926:	adc    DWORD PTR [ecx+0x54],ebx
  417929:	clc    
  41792a:	dec    ecx
  41792b:	out    0x78,al
  41792d:	pop    ebx
  41792e:	and    BYTE PTR [esi],ch
  417930:	or     eax,0xe5847a1f
  417935:	es jne 0x41793e
  417938:	dec    esp
  417939:	bound  ecx,QWORD PTR [edi]
  41793b:	mov    dh,0xcc
  41793d:	out    dx,al
  41793e:	or     DWORD PTR [ebx+0x65900fa9],0x5d
  417945:	jge    0x4179b4
  417947:	xor    bl,al
  417949:	nop
  41794a:	out    0x1d,eax
  41794c:	jg     0x41792d
  41794e:	pop    ebp
  41794f:	mov    edi,0x4de4c564
  417954:	jns    0x41797f
  417956:	xchg   ebp,eax
  417957:	adc    eax,0xffffffe7
  41795a:	sbb    dh,BYTE PTR [ebx+esi*2+0x56476737]
  417961:	out    dx,al
  417962:	repz pop edi
  417964:	mov    edi,DWORD PTR [ebp-0x29]
  417967:	sbb    esi,DWORD PTR [ecx+0x1d]
  41796a:	dec    esi
  41796b:	adc    eax,0x5643fce4
  417970:	fldcw  WORD PTR [eax-0x6bafd4d1]
  417976:	lods   eax,DWORD PTR ds:[esi]
  417977:	nop
  417978:	sbb    edx,edx
  41797a:	mov    DWORD PTR [esi],ebx
  41797c:	and    eax,0x5f430b94
  417981:	or     eax,0x1214804
  417986:	imul   edi,DWORD PTR [ebp+0xc3bb353],0xc3be889d
  417990:	jns    0x41794e
  417992:	popf   
  417993:	cwde   
  417994:	cmp    dh,dh
  417996:	lods   al,BYTE PTR ds:[esi]
  417997:	in     al,dx
  417998:	jne    0x4179ff
  41799a:	add    eax,0x8636943c
  41799f:	in     al,0xf9
  4179a1:	in     al,0x43
  4179a3:	lock mul DWORD PTR [esi-0x6f]
  4179a7:	ficomp WORD PTR [eax-0x58a83e8b]
  4179ad:	or     DWORD PTR [edi-0x9],edi
  4179b0:	mov    esi,0x4e2ca3fc
  4179b5:	pop    es
  4179b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179b7:	loop   0x417a2f
  4179b9:	mov    ecx,0xf5bca52b
  4179be:	sub    ah,al
  4179c0:	sbb    dh,bh
  4179c2:	call   0x94dfc4
  4179c7:	adc    DWORD PTR [esi-0xd],esi
  4179ca:	sbb    al,BYTE PTR [edx+0x46834894]
  4179d0:	sub    ebp,DWORD PTR [eax+0x50]
  4179d3:	mov    cl,0x46
  4179d5:	dec    esi
  4179d6:	test   BYTE PTR [eax],bl
  4179d8:	pop    ss
  4179d9:	push   ds
  4179da:	xlat   BYTE PTR ds:[ebx]
  4179db:	sbb    esi,edx
  4179dd:	jmp    0x417a2d
  4179df:	pusha  
  4179e0:	aam    0xc
  4179e2:	mov    BYTE PTR [ebx-0x5dbf7c27],dh
  4179e8:	or     al,0x4d
  4179ea:	and    esp,DWORD PTR [esi+eiz*4-0x6eb7ca31]
  4179f1:	mov    dl,0x7e
  4179f3:	xchg   ebp,eax
  4179f4:	pop    edx
  4179f5:	sub    al,BYTE PTR [ebx]
  4179f7:	mov    al,ds:0xcd985887
  4179fc:	xchg   edi,eax
  4179fd:	pop    esi
  4179fe:	call   FWORD PTR [eax-0x2a]
  417a01:	xor    DWORD PTR [edx+0x764d4f80],0x1a
  417a08:	arpl   WORD PTR [eax+edi*8+0x7c],sp
  417a0c:	jmp    0xa1cd797a
  417a11:	mov    BYTE PTR [edx+0x32078708],dh
  417a17:	pop    ecx
  417a18:	nop
  417a19:	cli    
  417a1a:	les    ebx,FWORD PTR [ebx]
  417a1c:	mov    al,ds:0x41bbcb3b
  417a21:	fnstcw WORD PTR [eax+eax*8]
  417a24:	and    BYTE PTR [edi+0x6b],ch
  417a27:	aaa    
  417a28:	in     eax,0x3a
  417a2a:	popa   
  417a2b:	sbb    DWORD PTR [ecx],0x787ca9fd
  417a31:	aaa    
  417a32:	pop    ebx
  417a33:	and    eax,0xca02788c
  417a38:	sbb    dh,BYTE PTR [ecx-0x3178c7c8]
  417a3e:	mov    ah,0x43
  417a40:	clc    
  417a41:	or     BYTE PTR [eax+ecx*1-0x7],ch
  417a45:	shl    DWORD PTR [ebx+0x35],0xee
  417a49:	mov    edx,DWORD PTR [ebx-0x53]
  417a4c:	sub    al,0xc8
  417a4e:	sub    BYTE PTR [edx],ch
  417a50:	adc    al,0x69
  417a52:	push   ebx
  417a53:	fdiv   st,st(3)
  417a55:	outs   dx,DWORD PTR ds:[esi]
  417a56:	stos   DWORD PTR es:[edi],eax
  417a57:	jo     0x417abe
  417a59:	mov    dh,0x1b
  417a5b:	sub    bh,dl
  417a5d:	push   ds
  417a5e:	or     eax,0x3870c37
  417a63:	in     eax,dx
  417a64:	leave  
  417a65:	xchg   edi,eax
  417a66:	iret   
  417a67:	pop    ecx
  417a68:	mov    esp,0x803435fb
  417a6d:	retf   
  417a6e:	js     0x417a49
  417a70:	add    eax,0x49660c42
  417a75:	sub    DWORD PTR [eax],edx
  417a77:	retf   0x4ec3
  417a7a:	mov    ah,BYTE PTR [ecx+0x5dbc09bd]
  417a80:	push   cs
  417a81:	xlat   BYTE PTR ds:[ebx]
  417a82:	leave  
  417a83:	push   ebp
  417a84:	ss sub al,0xdf
  417a87:	xor    cl,dl
  417a89:	xor    ecx,eax
  417a8b:	or     ch,dl
  417a8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a8e:	xchg   DWORD PTR [edx+0x2f28c3e3],ecx
  417a94:	lahf   
  417a95:	retf   
  417a96:	mov    edx,0xd597735e
  417a9b:	mov    ecx,0x95528eeb
  417aa0:	or     eax,0xac042cec
  417aa5:	out    0x9b,al
  417aa7:	push   es
  417aa8:	iret   
  417aa9:	xor    BYTE PTR [ebp-0x9],0x92
  417aad:	fnstsw WORD PTR [edx-0x1c]
  417ab0:	stos   BYTE PTR es:[edi],al
  417ab1:	call   0x2a383939
  417ab6:	sbb    al,0x27
  417ab8:	sbb    al,0xf7
  417aba:	mov    DWORD PTR [ebx+0x2c],0xd799da5
  417ac1:	loope  0x417acf
  417ac3:	out    0x4,eax
  417ac5:	jbe    0x417af6
  417ac7:	cmp    BYTE PTR [ebx-0x7be5351f],bl
  417acd:	jbe    0x417af3
  417acf:	cld    
  417ad0:	lods   al,BYTE PTR ds:[esi]
  417ad1:	adc    ch,dl
  417ad3:	jo     0x417b47
  417ad5:	cmp    BYTE PTR [ebx+0x3e],0x5a
  417ad9:	pop    ebx
  417ada:	jp     0x417af1
  417adc:	test   BYTE PTR cs:[esi],cl
  417adf:	inc    edi
  417ae0:	mov    ebp,0xfe005abd
  417ae5:	cmc    
  417ae6:	add    edx,DWORD PTR [ebp+0x7c]
  417ae9:	aam    0xf
  417aeb:	std    
  417aec:	sti    
  417aed:	push   0x4b
  417aef:	into   
  417af0:	stos   BYTE PTR es:[edi],al
  417af1:	xor    DWORD PTR [ebx-0x34ee7428],ebx
  417af7:	dec    esi
  417af8:	push   edx
  417af9:	inc    edi
  417afa:	jge    0x417b3f
  417afc:	mov    eax,ds:0x267c78fe
  417b01:	ja     0x417b56
  417b03:	shr    DWORD PTR [ebp+edi*4+0x536b5c74],0x70
  417b0b:	adc    DWORD PTR [ebx-0xb19e48f],ecx
  417b11:	jmp    0x417b6a
  417b13:	into   
  417b14:	adc    bh,dl
  417b16:	shl    ah,0xd3
  417b19:	aam    0xdd
  417b1b:	sub    BYTE PTR [eax-0x4d],0xe8
  417b1f:	(bad)  
  417b20:	sub    al,0x66
  417b22:	je     0x417b34
  417b24:	xchg   esp,eax
  417b25:	imul   eax,DWORD PTR ds:0x128d4cf1,0xd12dc1f
  417b2f:	mov    edi,0x459d40db
  417b34:	in     al,dx
  417b35:	jne    0x417b8c
  417b37:	mov    bl,0x37
  417b39:	push   eax
  417b3a:	enter  0x731b,0xda
  417b3e:	mov    esp,0xe5392cf2
  417b43:	jecxz  0x417bc3
  417b45:	add    ebp,esi
  417b47:	dec    DWORD PTR [ebx]
  417b49:	daa    
  417b4a:	iret   
  417b4b:	adc    ebx,DWORD PTR [eax]
  417b4d:	test   eax,0x93d81162
  417b52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b53:	sub    BYTE PTR [edx+0x4a6dbd31],0xe8
  417b5a:	fimul  WORD PTR [edi+0x30]
  417b5d:	not    BYTE PTR [edx-0x21]
  417b60:	addr16 fs inc ebp
  417b63:	mov    ebp,0x995c1cf7
  417b68:	cdq    
  417b69:	add    dh,cl
  417b6b:	call   DWORD PTR [eax]
  417b6d:	mov    cl,0xf6
  417b6f:	mov    ?,WORD PTR [edx+edx*2+0x38b48f39]
  417b76:	sub    edi,DWORD PTR [ebp-0x642577aa]
  417b7c:	or     cl,BYTE PTR [ebp+0x208b56c9]
  417b82:	push   eax
  417b83:	lahf   
  417b84:	cmp    eax,0x83c907b8
  417b89:	mov    dl,0x1a
  417b8b:	xor    ch,BYTE PTR [eax+0x5]
  417b8e:	fsub   QWORD PTR [ebp+0x74a2c426]
  417b94:	add    ecx,eax
  417b96:	clc    
  417b97:	and    eax,0x147831ce
  417b9c:	mov    eax,ds:0x41453ec3
  417ba1:	js     0x417b43
  417ba3:	jp     0x417b8a
  417ba5:	shr    BYTE PTR [edx],1
  417ba7:	or     dl,ah
  417ba9:	fisubr DWORD PTR [eax-0x6e]
  417bac:	add    ebx,esi
  417bae:	out    dx,al
  417baf:	scas   al,BYTE PTR es:[edi]
  417bb0:	jp     0x417c2e
  417bb2:	push   edx
  417bb3:	cmp    dl,cl
  417bb5:	pusha  
  417bb6:	sub    al,0x5b
  417bb8:	popa   
  417bb9:	les    ebp,FWORD PTR es:[edi-0x26aabd90]
  417bc0:	add    bl,ah
  417bc2:	push   ebx
  417bc3:	jecxz  0x417c2c
  417bc5:	mov    ebp,0x211ca26a
  417bca:	into   
  417bcb:	and    DWORD PTR [edi+ebx*8],ebx
  417bce:	pop    ebp
  417bcf:	mov    ebx,0xe7ec7f33
  417bd4:	bound  edi,QWORD PTR [ebx+0x4ecc3904]
  417bda:	mov    dh,0x13
  417bdc:	lds    ebp,FWORD PTR [ecx+edx*2-0x49a64ca9]
  417be3:	xchg   esp,eax
  417be4:	lods   eax,DWORD PTR ds:[esi]
  417be5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417be6:	mov    eax,ds:0xd751d9c5
  417beb:	cmp    al,ah
  417bed:	push   0xffffff85
  417bef:	sub    al,BYTE PTR [ebx-0x10]
  417bf2:	sahf   
  417bf3:	push   ss
  417bf4:	dec    eax
  417bf5:	add    eax,0x4a0b1e4
  417bfa:	iret   
  417bfb:	cmp    al,0x9e
  417bfd:	cmp    al,0xaf
  417bff:	jo     0x417b9f
  417c01:	mov    al,0xd8
  417c03:	retf   0x9b5f
  417c06:	fst    st(6)
  417c08:	imul   ebp,esi,0x92cc8b4d
  417c0e:	fnstcw WORD PTR [edx+0x78]
  417c11:	pop    ebp
  417c12:	popf   
  417c13:	xchg   ebp,eax
  417c14:	(bad)  
  417c15:	sub    dh,dh
  417c17:	inc    ecx
  417c18:	sar    BYTE PTR ds:0xae53135b,1
  417c1e:	sub    ebx,esp
  417c20:	ins    DWORD PTR es:[edi],dx
  417c21:	mov    ebp,0x9d4a73c7
  417c26:	inc    edx
  417c27:	and    dl,BYTE PTR [edi]
  417c29:	jnp    0x417be0
  417c2b:	out    dx,al
  417c2c:	jae    0x417c9d
  417c2e:	in     al,0x9f
  417c30:	pop    es
  417c31:	mov    ebx,0x9c4be8b3
  417c36:	nop
  417c37:	lods   eax,DWORD PTR ds:[esi]
  417c38:	sar    DWORD PTR [esp+esi*2-0x57],1
  417c3c:	gs or  eax,0x8378f94e
  417c42:	cdq    
  417c43:	jl     0x417c81
  417c45:	mov    al,0x12
  417c47:	jb     0x417cb9
  417c49:	push   ebx
  417c4a:	ret    0xac7e
  417c4d:	outs   dx,DWORD PTR ds:[esi]
  417c4e:	mov    al,ds:0x4c0052ae
  417c53:	sub    bl,BYTE PTR es:[ecx+ebp*1]
  417c57:	mov    ebx,DWORD PTR [edi-0x60]
  417c5a:	ror    DWORD PTR [ecx+0x3b],cl
  417c5d:	mov    esp,0x2101cc17
  417c62:	cld    
  417c63:	sub    DWORD PTR [eax-0x26ccd712],ecx
  417c69:	add    al,0x7d
  417c6b:	xor    DWORD PTR [ecx],edi
  417c6d:	loope  0x417c6d
  417c6f:	mov    esi,DWORD PTR [ecx-0x2d]
  417c72:	stos   BYTE PTR es:[edi],al
  417c73:	rcl    DWORD PTR [edx-0x514c7f05],cl
  417c79:	les    ebp,FWORD PTR [ebp-0x4f]
  417c7c:	aaa    
  417c7d:	add    esi,0x46
  417c80:	or     dl,0xf8
  417c83:	fidiv  DWORD PTR [ecx+0x4e]
  417c86:	push   esi
  417c87:	jno    0x417ce0
  417c89:	dec    ebp
  417c8a:	cmp    al,0xbf
  417c8c:	jle    0x417c11
  417c8e:	xchg   esp,eax
  417c8f:	xchg   edi,eax
  417c90:	xchg   ecx,eax
  417c91:	dec    ecx
  417c92:	push   0x40
  417c94:	mov    al,dl
  417c96:	adc    al,0xa4
  417c98:	adc    eax,DWORD PTR [eax+edi*2]
  417c9b:	xlat   BYTE PTR ds:[ebx]
  417c9c:	mov    cl,0x78
  417c9e:	mov    dl,0xfe
  417ca0:	inc    esp
  417ca1:	sbb    ebp,esi
  417ca3:	pop    ds
  417ca4:	into   
  417ca5:	sbb    BYTE PTR [edx-0x6141b56c],bl
  417cab:	adc    DWORD PTR [ebx],ebx
  417cad:	lds    edx,FWORD PTR [esp+ebx*4+0x30edff3f]
  417cb4:	mov    ch,0x4c
  417cb6:	in     al,dx
  417cb7:	out    dx,al
  417cb8:	mov    edi,0x307a0383
  417cbd:	pop    esi
  417cbe:	cmp    esp,DWORD PTR [ecx-0x67e26635]
  417cc4:	(bad)
  417cc8:	adc    edx,ebp
  417cca:	push   0x7d
  417ccc:	or     eax,DWORD PTR [eax+0x28]
  417ccf:	or     eax,0xc5df15a1
  417cd4:	nop
  417cd5:	test   DWORD PTR [esi],0x933e0b45
  417cdb:	and    al,0xcc
  417cdd:	xor    eax,0x896731d3
  417ce2:	ins    BYTE PTR es:[edi],dx
  417ce3:	dec    eax
  417ce4:	outs   dx,BYTE PTR ds:[esi]
  417ce5:	aaa    
  417ce6:	add    DWORD PTR ds:0xd80f2254,edi
  417cec:	mov    cr6,esi
  417cef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cf0:	(bad)  
  417cf1:	xor    BYTE PTR [edx-0x33ad3db9],al
  417cf7:	sbb    BYTE PTR [esi-0x56],ch
  417cfa:	ficom  WORD PTR [ebp-0x12]
  417cfd:	test   eax,0x71d8c47d
  417d02:	hlt    
  417d03:	inc    ecx
  417d04:	jmp    0xeed6:0x6aeaf7fa
  417d0b:	add    BYTE PTR [ebp+0x3c],bl
  417d0e:	(bad)  
  417d10:	dec    edi
  417d11:	outs   dx,BYTE PTR ds:[esi]
  417d12:	adc    ebp,DWORD PTR [esi-0x3a]
  417d15:	lods   al,BYTE PTR ds:[esi]
  417d16:	inc    eax
  417d17:	data16 adc BYTE PTR [ecx],bl
  417d1a:	push   edx
  417d1b:	xor    al,0x1
  417d1d:	lock lahf 
  417d1f:	gs mov al,0x1e
  417d22:	or     BYTE PTR [esi+0x6b],ah
  417d25:	enter  0x475,0x3d
  417d29:	fnstcw WORD PTR [edi-0x3c88ebb1]
  417d2f:	mov    ecx,0x67e84651
  417d34:	in     al,dx
  417d35:	clc    
  417d36:	scas   eax,DWORD PTR es:[edi]
  417d37:	or     eax,DWORD PTR ds:0x4e0dd71f
  417d3d:	fisub  WORD PTR [eax]
  417d3f:	lea    ebp,[esp+ebx*1]
  417d42:	hlt    
  417d43:	aas    
  417d44:	xchg   ecx,eax
  417d45:	push   cs
  417d46:	push   0xffffff97
  417d48:	mul    BYTE PTR [esi]
  417d4a:	and    edx,ebp
  417d4c:	aaa    
  417d4d:	outs   dx,DWORD PTR ds:[esi]
  417d4e:	cs xchg esp,eax
  417d50:	cld    
  417d51:	test   DWORD PTR [ebx],0x985558e
  417d57:	mov    al,ds:0x8c78f99c
  417d5c:	xor    DWORD PTR [edi+edi*2],eax
  417d5f:	cs ret 0x211a
  417d63:	out    dx,al
  417d64:	cmp    edi,edx
  417d66:	(bad)  
  417d67:	call   0x938ba096
  417d6c:	xchg   BYTE PTR [edi-0x7e],ch
  417d6f:	popf   
  417d70:	rcr    cl,0x69
  417d73:	loopne 0x417d8b
  417d75:	add    DWORD PTR [ecx-0x4f],edx
  417d78:	jbe    0x417d33
  417d7a:	imul   edx,DWORD PTR [ebx+0x48fba177],0xfffffff1
  417d81:	call   0x9fd3:0xfc2b3679
  417d88:	pop    ebp
  417d89:	mov    ds:0xf93ce23d,al
  417d8e:	addr16 sub esp,ebp
  417d91:	mov    edx,0xc839980d
  417d96:	enter  0x829c,0xe2
  417d9a:	stos   BYTE PTR es:[edi],al
  417d9b:	adc    BYTE PTR [esp+edi*2-0x28],dh
  417d9f:	mov    edi,0x69377ab
  417da4:	hlt    
  417da5:	push   es
  417da6:	(bad)  
  417da7:	mov    bh,0x25
  417da9:	bound  eax,QWORD PTR [edx]
  417dab:	stos   DWORD PTR es:[edi],eax
  417dac:	mov    BYTE PTR [esi],ch
  417dae:	adc    al,0x12
  417db0:	jp     0x417db4
  417db2:	jne    0x417d8b
  417db4:	sahf   
  417db5:	mov    ebx,0xbe9a5e5b
  417dba:	in     al,dx
  417dbb:	call   0x2549f24b
  417dc0:	push   ss
  417dc1:	push   eax
  417dc2:	jae    0x417d75
  417dc4:	scas   al,BYTE PTR es:[edi]
  417dc5:	xor    ebp,esp
  417dc7:	mov    BYTE PTR [edx],bh
  417dc9:	and    BYTE PTR [ecx],al
  417dcb:	mov    al,0xc5
  417dcd:	not    DWORD PTR [esi-0x3a]
  417dd0:	jb     0x417e49
  417dd2:	scas   eax,DWORD PTR es:[edi]
  417dd3:	inc    ebx
  417dd4:	sqrtps xmm7,XMMWORD PTR [eax+0x1505e041]
  417ddb:	adc    eax,0x1f7dae4d
  417de0:	stc    
  417de1:	mov    edx,0x89a8f222
  417de6:	or     BYTE PTR [edi-0x4c],al
  417de9:	mov    eax,ds:0x6d4c4bd2
  417dee:	adc    al,0x36
  417df0:	out    dx,eax
  417df1:	(bad)  
  417df2:	and    eax,0xb2e6f920
  417df7:	lea    ebx,[ebp+0x7fd89afb]
  417dfd:	adc    DWORD PTR [edi-0x417e7c47],edx
  417e03:	popa   
  417e04:	cmp    eax,0x217be601
  417e09:	sbb    DWORD PTR [eax-0x305adeb2],eax
  417e0f:	adc    DWORD PTR [eax],ebx
  417e11:	mov    edx,0x23def519
  417e16:	and    eax,0x25cff278
  417e1b:	out    dx,eax
  417e1c:	mov    dl,0x6d
  417e1e:	inc    esi
  417e1f:	sbb    al,0x87
  417e21:	data16 stc 
  417e23:	ins    BYTE PTR es:[edi],dx
  417e24:	push   es
  417e25:	xchg   edi,eax
  417e26:	and    DWORD PTR [ecx-0x1c],esi
  417e29:	scas   al,BYTE PTR es:[edi]
  417e2a:	and    BYTE PTR [ecx-0x73],cl
  417e2d:	cmp    dl,BYTE PTR ds:0x84ce9eda
  417e33:	mov    ch,0xe2
  417e35:	fwait
  417e36:	add    eax,0xb7ebc8d6
  417e3b:	jnp    0x417e26
  417e3d:	bound  ebp,QWORD PTR [ecx+0x5b9b0f9a]
  417e43:	test   al,0xe1
  417e45:	mov    al,0x6c
  417e47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e48:	ins    DWORD PTR es:[edi],dx
  417e49:	fs clc 
  417e4b:	pop    edi
  417e4c:	test   eax,0xcf0470f0
  417e51:	push   edx
  417e52:	jl     0x417e73
  417e54:	out    0xd6,al
  417e56:	mov    esp,0xf39e756b
  417e5b:	pop    edx
  417e5c:	imul   DWORD PTR [ebp+0x12]
  417e5f:	push   0xa0c9038c
  417e64:	daa    
  417e65:	xor    dl,bh
  417e67:	sbb    cl,BYTE PTR [ebp+0xa]
  417e6a:	test   eax,0x57993c31
  417e6f:	(bad)  
  417e70:	adc    eax,0x10bca98
  417e75:	inc    ebx
  417e76:	push   ebp
  417e77:	push   0xb0618f56
  417e7c:	fld    st(7)
  417e7e:	sbb    eax,0x8b41c85c
  417e83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e84:	push   ecx
  417e85:	mov    eax,0x379344a0
  417e8a:	loopne 0x417ead
  417e8c:	ror    BYTE PTR [ebx],1
  417e8e:	(bad)  
  417e8f:	hlt    
  417e90:	shr    BYTE PTR [edx],cl
  417e92:	inc    esi
  417e93:	fstp   QWORD PTR [ecx]
  417e95:	clc    
  417e96:	sti    
  417e97:	dec    esi
  417e98:	lea    esp,[eax+0x96994da]
  417e9e:	jmp    0x417e6d
  417ea0:	dec    esp
  417ea1:	aaa    
  417ea2:	lods   eax,DWORD PTR ds:[esi]
  417ea3:	mov    al,0x50
  417ea5:	mov    edx,0x24e4a19
  417eaa:	fbld   TBYTE PTR [eax-0x7a5edf62]
  417eb0:	xor    al,0x76
  417eb2:	jl     0x417e80
  417eb4:	jp     0x417ef0
  417eb6:	pop    esp
  417eb7:	jb     0x417f1e
  417eb9:	in     al,0x1
  417ebb:	pop    ss
  417ebc:	cmp    eax,0x8ded6ab8
  417ec1:	inc    ebp
  417ec2:	mul    BYTE PTR [edi+0x664b5b00]
  417ec8:	jnp    0x417f32
  417eca:	adc    BYTE PTR [eax-0x455a44a4],bl
  417ed0:	retf   0x1358
  417ed3:	mov    ecx,0x2f11e033
  417ed8:	mov    ah,0x6c
  417eda:	in     al,dx
  417edb:	jne    0x417f17
  417edd:	pop    ecx
  417ede:	mov    ebp,0x69419f9a
  417ee3:	pusha  
  417ee4:	les    ebp,FWORD PTR [eax]
  417ee6:	sub    ch,BYTE PTR [edi+0x37]
  417ee9:	aad    0xee
  417eeb:	cdq    
  417eec:	scas   al,BYTE PTR es:[edi]
  417eed:	push   esp
  417eee:	pop    ebp
  417eef:	mov    cs,edi
  417ef1:	clc    
  417ef2:	or     edx,DWORD PTR [ebx]
  417ef4:	and    BYTE PTR [esi],dh
  417ef6:	mov    al,0x90
  417ef8:	stos   DWORD PTR es:[edi],eax
  417ef9:	jmp    0xa63f8323
  417efe:	dec    ecx
  417eff:	ja     0x417f4f
  417f01:	inc    edi
  417f02:	pop    es
  417f03:	sti    
  417f04:	pop    es
  417f05:	push   ss
  417f06:	fucomp st(6)
  417f08:	clc    
  417f09:	cmp    al,0xe9
  417f0b:	ret    
  417f0c:	sub    al,0xf2
  417f0e:	fwait
  417f0f:	push   ecx
  417f10:	ret    
  417f11:	pop    ebp
  417f12:	test   eax,0x49903c4b
  417f17:	inc    esp
  417f18:	pop    eax
  417f19:	pop    esp
  417f1a:	xchg   DWORD PTR [edi+0x7eb91f],ecx
  417f20:	sbb    DWORD PTR [ebx+0x1c],esp
  417f23:	ins    DWORD PTR es:[edi],dx
  417f24:	sbb    DWORD PTR [ecx+0x6c31ad66],0x62e3d5b4
  417f2e:	push   0x73
  417f30:	cs out dx,al
  417f32:	pop    es
  417f33:	pop    edx
  417f34:	cmp    eax,0xaadb5d3b
  417f39:	inc    esp
  417f3a:	call   0x6272:0x90fe44dc
  417f41:	(bad)
  417f44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f45:	rcr    BYTE PTR [esi],cl
  417f47:	repnz cwde 
  417f49:	sub    eax,0xbbb4483e
  417f4e:	dec    esi
  417f4f:	es dec ecx
  417f51:	jbe    0x417f14
  417f53:	xor    BYTE PTR [edi],cl
  417f55:	dec    ebx
  417f56:	dec    eax
  417f57:	sti    
  417f58:	pop    esp
  417f59:	cvtps2pi mm7,QWORD PTR [ebp-0x7b1dc288]
  417f60:	rcr    BYTE PTR [esi+0x4e],cl
  417f63:	push   esp
  417f64:	jnp    0x417fc9
  417f66:	jp     0x417eeb
  417f68:	sub    ch,BYTE PTR [ebx+0x39]
  417f6b:	mov    es,WORD PTR [eax]
  417f6d:	xchg   edi,eax
  417f6e:	or     esp,DWORD PTR [ecx-0x19]
  417f71:	mov    ch,0x96
  417f73:	push   esp
  417f74:	stc    
  417f75:	xor    eax,0xddd5a519
  417f7a:	push   ss
  417f7b:	test   ch,al
  417f7d:	out    dx,al
  417f7e:	aam    0x28
  417f80:	dec    edi
  417f81:	ins    DWORD PTR es:[edi],dx
  417f82:	jb     0x417fc6
  417f84:	fist   DWORD PTR [ebx+0x4]
  417f87:	dec    esp
  417f88:	sub    al,0x93
  417f8a:	adc    DWORD PTR [ecx+0x3c2a45ae],ebx
  417f90:	pushf  
  417f91:	add    DWORD PTR [ecx+0x60441391],esi
  417f97:	dec    esp
  417f98:	mov    eax,0xe0cd22e
  417f9d:	sahf   
  417f9e:	lahf   
  417f9f:	mov    edi,0x9fe0dff8
  417fa4:	and    DWORD PTR [ebx],0xffffffd7
  417fa7:	jg     0x417f6e
  417fa9:	mov    ch,0x89
  417fab:	sbb    al,BYTE PTR [edi-0x3b]
  417fae:	dec    edi
  417faf:	mov    esi,0xabeaa9b1
  417fb4:	test   al,0x14
  417fb6:	adc    eax,0xa7e59789
  417fbb:	popa   
  417fbc:	jno    0x418039
  417fbe:	inc    esp
  417fbf:	retf   0x567a
  417fc2:	sub    al,0x44
  417fc4:	retf   0xd51f
  417fc7:	cmp    dl,BYTE PTR [ebp+0x59ff235d]
  417fcd:	pop    esp
  417fce:	sub    al,0xb1
  417fd0:	pop    ds
  417fd1:	in     al,0x48
  417fd3:	jmp    0x418014
  417fd5:	push   0x8fcc985b
  417fda:	popa   
  417fdb:	ret    0x5e90
  417fde:	push   ebp
  417fdf:	mov    ch,0xf1
  417fe1:	mov    dl,0xec
  417fe3:	pop    ecx
  417fe4:	inc    esi
  417fe5:	call   0x71b79d8e
  417fea:	mov    dl,0xe0
  417fec:	mov    esi,fs
  417fee:	push   eax
  417fef:	mov    ch,0x54
  417ff1:	jne    0x417f9d
  417ff3:	ror    ah,1
  417ff5:	jge    0x417f9f
  417ff7:	push   esi
  417ff8:	hlt    
  417ff9:	sbb    DWORD PTR [esi],edx
  417ffb:	mov    esp,0x4e07c2cd
  418000:	scas   eax,DWORD PTR es:[edi]
  418001:	mov    BYTE PTR [ecx-0xe],cl
  418004:	bound  esp,QWORD PTR [edi-0x6a]
  418007:	daa    
  418008:	pop    ebx
  418009:	aad    0xc8
  41800b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41800d:	pop    ss
  41800e:	enter  0x5e97,0xb9
  418012:	adc    dh,BYTE PTR [ecx+0xd]
  418015:	call   esi
  418017:	call   0x2bf1:0x2959ab99
  41801e:	dec    ebp
  41801f:	es pop ds
  418021:	into   
  418022:	push   esi
  418023:	stos   BYTE PTR es:[edi],al
  418024:	mov    DWORD PTR [eax],esi
  418026:	ror    BYTE PTR [esi+esi*2-0x278c99f7],1
  41802d:	xor    BYTE PTR [esi+0x319180ef],dh
  418033:	shl    DWORD PTR ds:0x67661218,0x82
  41803a:	dec    ebp
  41803b:	inc    ecx
  41803c:	push   ds
  41803d:	or     al,0x15
  41803f:	popa   
  418040:	(bad)  
  418041:	mov    WORD PTR [eax-0x38dfdd7c],?
  418047:	jae    0x41809e
  418049:	arpl   sp,bp
  41804b:	or     edi,DWORD PTR [ecx]
  41804d:	iret   
  41804e:	aam    0x7f
  418050:	(bad)  
  418052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418053:	pop    ss
  418054:	sti    
  418055:	inc    ebp
  418056:	sti    
  418057:	jne    0x41809f
  418059:	adc    al,0x58
  41805b:	adc    BYTE PTR [esp+ebx*1+0x30],0x31
  418060:	fwait
  418061:	popa   
  418062:	cli    
  418063:	sbb    dh,dh
  418065:	mov    dl,0x1f
  418067:	xchg   DWORD PTR [eax],esi
  418069:	mov    cs,WORD PTR [edx]
  41806b:	cmp    ch,dl
  41806d:	push   ecx
  41806e:	mov    ah,BYTE PTR [ebx]
  418070:	icebp  
  418071:	pop    ebx
  418072:	or     DWORD PTR [edx],esi
  418074:	and    edx,DWORD PTR [eax]
  418076:	jno    0x41808a
  418078:	shl    BYTE PTR [eax+0x7d],1
  41807b:	add    al,0x62
  41807d:	jne    0x418058
  41807f:	mov    ds:0xffd7493e,eax
  418084:	cmp    BYTE PTR [esi-0x6a],dl
  418087:	les    esp,FWORD PTR [esi+0x7d]
  41808a:	imul   eax,ebx,0xfffffff2
  41808d:	test   eax,0xf074a846
  418092:	test   eax,0xc10a707
  418097:	out    dx,eax
  418098:	test   eax,0x17030115
  41809d:	inc    esp
  41809e:	pop    ebp
  41809f:	cmp    al,BYTE PTR [edx-0x1c11aac4]
  4180a5:	call   0x68ed:0x2f9a6696
  4180ac:	cmovge eax,DWORD PTR [ecx-0x18]
  4180b0:	test   eax,0x4c237729
  4180b5:	adc    BYTE PTR [ebp-0x6964c3a7],bl
  4180bb:	mov    edx,0xa408448a
  4180c0:	push   eax
  4180c1:	fild   DWORD PTR [eax+0x5ae11614]
  4180c7:	imul   BYTE PTR [ebx]
  4180c9:	jno    0x41808e
  4180cb:	mov    ebp,0x2cee568c
  4180d0:	shl    DWORD PTR [ebp+eiz*2+0x5ace613d],cl
  4180d7:	sub    al,0x2e
  4180d9:	test   al,0x37
  4180db:	jo     0x41815a
  4180dd:	pop    edi
  4180de:	xor    ecx,DWORD PTR [ebx+ebp*8+0x6768b49]
  4180e5:	push   ds
  4180e6:	dec    esp
  4180e7:	rcl    DWORD PTR [edx-0x7f],cl
  4180ea:	dec    esp
  4180eb:	push   0x97f36d7b
  4180f0:	addr16 cmp al,0x4
  4180f3:	mov    ebx,0x73156e0d
  4180f8:	popf   
  4180f9:	data16 mov ch,0x95
  4180fc:	add    BYTE PTR [edi-0x45ed4dda],bh
  418102:	jmp    0x418179
  418104:	jne    0x418102
  418106:	dec    edi
  418107:	std    
  418108:	pop    ecx
  418109:	dec    ebx
  41810a:	dec    edx
  41810b:	sti    
  41810c:	adc    DWORD PTR [edi],edx
  41810e:	data16 adc dl,BYTE PTR [edx+edi*2]
  418112:	ja     0x418111
  418114:	adc    bh,ah
  418116:	cmp    ch,BYTE PTR [esi]
  418118:	jmp    0x4180db
  41811a:	in     al,dx
  41811b:	mov    edx,0x8f5aec61
  418120:	ins    DWORD PTR es:[edi],dx
  418121:	retf   0x864c
  418124:	test   eax,0x9b2a0fa9
  418129:	sub    al,0xcc
  41812b:	mov    esi,0x3e43d780
  418130:	dec    esp
  418131:	inc    edx
  418132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418133:	sub    esi,DWORD PTR [ebx-0x30aceb91]
  418139:	outs   dx,BYTE PTR ds:[esi]
  41813a:	into   
  41813b:	xchg   esp,eax
  41813c:	jmp    0x9267:0x5a2cc38d
  418143:	je     0x418188
  418145:	aam    0xf0
  418147:	mov    ds:0x860da2f0,al
  41814c:	stc    
  41814d:	test   al,0x61
  41814f:	or     al,0xb2
  418151:	dec    edi
  418152:	push   es
  418153:	cmp    al,0x74
  418155:	je     0x4181b3
  418157:	mov    dh,0x6f
  418159:	sbb    ecx,DWORD PTR [edx-0xee6cdca]
  41815f:	cli    
  418160:	mov    ebp,0x932d877
  418165:	retf   
  418166:	xchg   edx,eax
  418167:	bound  esp,QWORD PTR ds:[edi-0x5f942e53]
  41816e:	push   cs
  41816f:	stos   BYTE PTR es:[edi],al
  418170:	push   ss
  418171:	pop    ecx
  418172:	sar    dh,1
  418174:	in     al,dx
  418175:	in     eax,0xdc
  418177:	jmp    0x45b6:0xa154236e
  41817e:	(bad)  
  41817f:	fstp   DWORD PTR [edi-0x6dfa8f8c]
  418185:	lods   al,BYTE PTR ds:[esi]
  418186:	clc    
  418187:	outs   dx,BYTE PTR ds:[esi]
  418188:	add    BYTE PTR [edx],al
  41818a:	int    0xf5
  41818c:	rol    BYTE PTR es:[ecx],0xf1
  418190:	mov    cl,0xe
  418192:	jmp    0x96f498be
  418197:	pop    ss
  418198:	adc    ebp,ebx
  41819a:	aaa    
  41819b:	mov    ecx,0xa03c3bd5
  4181a0:	dec    eax
  4181a1:	cs pop ds
  4181a3:	jbe    0x4181cc
  4181a5:	dec    edi
  4181a6:	jb     0x41820f
  4181a8:	sbb    DWORD PTR [edi],ecx
  4181aa:	sti    
  4181ab:	stos   DWORD PTR es:[edi],eax
  4181ac:	add    al,0x89
  4181ae:	mov    ds:0x7aacd4b3,eax
  4181b3:	js     0x4181a8
  4181b5:	sti    
  4181b6:	nop
  4181b7:	std    
  4181b8:	xchg   edi,eax
  4181b9:	das    
  4181ba:	push   esi
  4181bb:	mov    cl,0xe3
  4181bd:	add    eax,0xd12e8140
  4181c2:	sbb    ah,BYTE PTR ds:0xb04f2146
  4181c8:	push   ecx
  4181c9:	inc    ebp
  4181ca:	sub    al,0xbb
  4181cc:	sub    DWORD PTR [ebx-0x52],0x5
  4181d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181d1:	xchg   esp,eax
  4181d2:	jb     0x4181c3
  4181d4:	sub    BYTE PTR [edx-0x152315f6],dl
  4181da:	inc    edx
  4181db:	xchg   DWORD PTR [ebx],esp
  4181dd:	xor    al,0x18
  4181df:	retf   0xb4a2
  4181e2:	jle    0x418188
  4181e4:	jne    0x4181c9
  4181e6:	adc    ebx,DWORD PTR [esi+ecx*8-0x5d]
  4181ea:	in     eax,dx
  4181eb:	shl    eax,cl
  4181ed:	shr    ebp,1
  4181ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181f0:	in     eax,dx
  4181f1:	xor    BYTE PTR [ecx],bl
  4181f3:	push   esi
  4181f4:	imul   eax,DWORD PTR [esi+0x1a086e09],0x7c
  4181fb:	aam    0xc1
  4181fd:	in     al,0xb7
  4181ff:	add    BYTE PTR [ebp+0x1c2ac3b8],al
  418205:	call   0x7da309bd
  41820a:	xchg   BYTE PTR [ebp+0x61],dh
  41820d:	push   cs
  41820e:	shl    DWORD PTR [ebx-0x2f72db4],cl
  418214:	add    ch,dh
  418216:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418217:	jp     0x41826f
  418219:	aam    0xb6
  41821b:	shl    ebp,0x2e
  41821e:	mov    al,0x9
  418220:	and    eax,0xcfae81d5
  418225:	inc    ebp
  418226:	and    DWORD PTR [ebx],eax
  418228:	push   ebp
  418229:	iret   
  41822a:	mov    edi,0x7ced139c
  41822f:	xchg   DWORD PTR [edi+0x14e2d4a6],edi
  418235:	jns    0x41827b
  418237:	stos   BYTE PTR es:[edi],al
  418238:	and    eax,0x801088bd
  41823d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41823e:	shl    BYTE PTR ds:0x79d7f2a7,0x38
  418245:	xor    al,0xe9
  418247:	cli    
  418248:	(bad)  
  418249:	mov    dl,0xf8
  41824b:	xor    ecx,DWORD PTR [ebx]
  41824d:	xor    al,0x94
  41824f:	nop
  418250:	repnz retf 0x34e
  418254:	jl     0x418284
  418256:	je     0x418270
  418258:	aam    0xe6
  41825a:	or     eax,0xed9c24a7
  41825f:	mov    al,ds:0x34341075
  418264:	push   ecx
  418265:	inc    ebp
  418266:	ret    
  418267:	out    dx,al
  418268:	adc    al,cl
  41826a:	call   0xc1015d63
  41826f:	mov    cl,0xbe
  418271:	int3   
  418272:	push   ecx
  418273:	mov    DWORD PTR [eax+ebp*4],edx
  418276:	inc    ebp
  418277:	imul   ebx,DWORD PTR [eax],0xffffffa5
  41827a:	sbb    BYTE PTR [ebx+0x5a511b13],dl
  418280:	es inc ebx
  418282:	retf   
  418283:	jp     0x418208
  418285:	mov    cl,0x96
  418287:	xor    al,0x48
  418289:	jp     0x41823d
  41828b:	pusha  
  41828c:	mov    BYTE PTR [ebx+0x6b9e1bbc],ah
  418292:	(bad)  
  418293:	xlat   BYTE PTR ds:[ebx]
  418294:	in     al,dx
  418295:	inc    eax
  418296:	mov    ds:0xc3f7358,eax
  41829b:	mov    eax,ds:0x66650e67
  4182a0:	sti    
  4182a1:	or     eax,0xc3acf00a
  4182a6:	mov    ecx,ds
  4182a8:	data16 mov ds:0x3b28f985,al
  4182ae:	xchg   esp,eax
  4182af:	mov    ds:0x5754a726,eax
  4182b4:	fisubr DWORD PTR [eax+eiz*2-0x2a76d46]
  4182bb:	fisubr DWORD PTR [esi]
  4182bd:	loopne 0x418269
  4182bf:	push   eax
  4182c0:	sub    eax,0x9873fd24
  4182c5:	dec    esi
  4182c6:	sub    dh,BYTE PTR [edx]
  4182c8:	xor    al,BYTE PTR [esi+0x7d3520d1]
  4182ce:	jbe    0x4182b8
  4182d0:	mov    esi,0x5192957f
  4182d5:	mov    bl,0xbd
  4182d7:	stc    
  4182d8:	pop    edx
  4182d9:	gs in  al,dx
  4182db:	outs   dx,DWORD PTR ds:[esi]
  4182dc:	leave  
  4182dd:	cdq    
  4182de:	aad    0x52
  4182e0:	adc    al,0xbb
  4182e2:	cmp    BYTE PTR [ebx+0x2],bl
  4182e5:	test   DWORD PTR [edi+0x1f],edx
  4182e8:	sub    eax,0xc9f7a56b
  4182ed:	retf   
  4182ee:	pop    esp
  4182ef:	mov    bh,BYTE PTR [esi+esi*2+0x3b388f04]
  4182f6:	shl    BYTE PTR [esi+ecx*1+0x41174fd5],cl
  4182fd:	push   eax
  4182fe:	pop    edi
  4182ff:	outs   dx,BYTE PTR ds:[esi]
  418300:	dec    eax
  418301:	rcr    ah,0x21
  418304:	rol    BYTE PTR [eax+0x2b],0x5f
  418308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418309:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41830a:	add    DWORD PTR [eax-0x7c],edx
  41830d:	jo     0x418349
  41830f:	mov    ds:0x5c9feafa,eax
  418314:	es ret 0x3816
  418318:	cmp    al,0x2
  41831a:	pop    esp
  41831b:	repz frstor [esi+0x79a8199e]
  418322:	into   
  418323:	lods   al,BYTE PTR ds:[esi]
  418324:	ja     0x4182b2
  418326:	adc    edx,esi
  418328:	xlat   BYTE PTR ds:[ebx]
  418329:	jmp    0x2288:0x830f6049
  418330:	dec    ebx
  418331:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418332:	mov    ch,BYTE PTR [ebp+edx*4+0xd]
  418336:	sti    
  418337:	dec    esp
  418338:	pop    ss
  418339:	adc    DWORD PTR ds:0x395852ac,edx
  41833f:	pop    ebx
  418340:	adc    BYTE PTR [esi+0x65559e9f],0x54
  418347:	mov    eax,ds:0x46182281
  41834c:	pop    eax
  41834d:	mov    es,WORD PTR [ebp+0x6e]
  418350:	push   eax
  418351:	push   cs
  418352:	adc    BYTE PTR [edx],0xd2
  418355:	ror    BYTE PTR [edx-0xa50c5f7],cl
  41835b:	les    esi,FWORD PTR gs:[ecx-0x80]
  41835f:	cmc    
  418360:	data16 jl 0x418368
  418363:	adc    ch,BYTE PTR [eax+0x52]
  418366:	adc    DWORD PTR [ebp-0x1d],edx
  418369:	xchg   esi,eax
  41836a:	cmp    esp,DWORD PTR [ebx-0x64add15e]
  418370:	or     BYTE PTR ds:0xb5a48f08,0x48
  418377:	xor    bh,ah
  418379:	push   esi
  41837a:	sub    DWORD PTR [ecx+0x66],0x5d9454e0
  418381:	lds    ecx,FWORD PTR [edi+0x69]
  418384:	fidiv  DWORD PTR ds:0x7140f5af
  41838a:	mov    eax,ds:0x5dcb226a
  41838f:	xchg   ebp,ecx
  418391:	xor    eax,0xf6e350dd
  418396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418397:	jne    0x418366
  418399:	jmp    0xa43a:0x96a5097c
  4183a0:	adc    al,0x30
  4183a2:	outs   dx,DWORD PTR ds:[esi]
  4183a3:	(bad)  [ebx]
  4183a5:	shl    BYTE PTR ds:0x781f5f17,0xff
  4183ac:	pop    esi
  4183ad:	xchg   ebp,eax
  4183ae:	xor    cl,BYTE PTR [edx+0x3a]
  4183b1:	sti    
  4183b2:	lods   al,BYTE PTR ds:[esi]
  4183b3:	pop    ss
  4183b4:	push   esi
  4183b5:	inc    ecx
  4183b6:	lahf   
  4183b7:	sub    BYTE PTR [ecx+ebx*1],ch
  4183ba:	or     BYTE PTR [ebp+0x33],cl
  4183bd:	fcom   QWORD PTR [ecx-0x289497b8]
  4183c3:	sahf   
  4183c4:	add    esi,DWORD PTR [ebp+0x4d2a8a9f]
  4183ca:	sbb    eax,0x5be9c97b
  4183cf:	rcl    ebx,cl
  4183d1:	in     eax,dx
  4183d2:	rol    DWORD PTR [esi-0x51],0xa
  4183d6:	popa   
  4183d7:	int3   
  4183d8:	xchg   ebp,eax
  4183d9:	shr    DWORD PTR [ebx+0x4f725d15],1
  4183df:	dec    edi
  4183e0:	cmp    ah,ch
  4183e2:	frstor [ecx+0x61]
  4183e5:	out    dx,al
  4183e6:	add    BYTE PTR [edi+0x58ecd842],bl
  4183ec:	les    esp,FWORD PTR [ebx-0x248dddc3]
  4183f2:	enter  0xafa4,0xd8
  4183f6:	lock xor BYTE PTR [ebx+ebx*4],dh
  4183fa:	cmp    bh,BYTE PTR [esi]
  4183fc:	mov    esp,0xf8133413
  418401:	inc    esp
  418402:	mov    ecx,DWORD PTR [eax+ecx*4-0x564312a0]
  418409:	stc    
  41840a:	pop    edx
  41840b:	test   al,0x5d
  41840d:	xlat   BYTE PTR ds:[ebx]
  41840e:	sti    
  41840f:	adc    bl,BYTE PTR [ebx+0x44]
  418412:	cs pop ebp
  418414:	and    BYTE PTR [edi-0x3e66204],0x85
  41841b:	adc    esp,DWORD PTR [esi]
  41841d:	pop    ebp
  41841e:	sbb    cl,dh
  418420:	std    
  418421:	cs sti 
  418423:	mov    ds:0x7c15ab2,eax
  418428:	push   ds
  418429:	ins    DWORD PTR es:[edi],dx
  41842a:	imul   ebp,ebp,0xffffffad
  41842d:	mov    eax,ds:0x165af20f
  418432:	fcom   st(2)
  418434:	jne    0x4183f8
  418436:	fdiv   DWORD PTR [eax+0x62]
  418439:	ret    
  41843a:	imul   ebx,DWORD PTR [ebx+0x20b9979d],0x5f85ca07
  418444:	scas   eax,DWORD PTR es:[edi]
  418445:	test   DWORD PTR [eax+ebp*1+0x20bcc5a],edi
  41844c:	push   esp
  41844d:	mov    dh,0x55
  41844f:	push   ds
  418450:	outs   dx,BYTE PTR ds:[esi]
  418451:	das    
  418452:	sbb    ebx,ecx
  418454:	push   cs
  418455:	(bad)  
  418456:	retf   0x1baf
  418459:	out    0x31,al
  41845b:	mov    ah,al
  41845d:	push   esp
  41845e:	imul   edi,DWORD PTR [edi-0x4d00e0f4],0xa8693bb7
  418468:	mov    WORD PTR [eax],gs
  41846a:	and    DWORD PTR [ebx+edx*2+0x7328e87b],ebx
  418471:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418472:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418473:	sbb    edx,esp
  418475:	sahf   
  418476:	adc    cl,BYTE PTR [esi-0x5f]
  418479:	dec    ebx
  41847a:	jmp    0x33bc:0xa3dacb65
  418481:	jne    0x4184ed
  418483:	xchg   BYTE PTR [ebx-0x90389d0],bh
  418489:	mov    ebx,0xf5090bc9
  41848e:	(bad)  
  41848f:	push   0xffffff9b
  418491:	or     BYTE PTR [edi-0x3],0xeb
  418495:	repz or eax,0x86ebac43
  41849b:	loope  0x418454
  41849d:	mov    ch,0xaf
  41849f:	cmp    ah,BYTE PTR [ebx]
  4184a1:	pop    ds
  4184a2:	enter  0x1a5c,0x42
  4184a6:	dec    edx
  4184a7:	call   0x85b7:0x9e8491f
  4184ae:	stos   BYTE PTR es:[edi],al
  4184af:	pop    edi
  4184b0:	cs loope 0x418504
  4184b3:	cmp    BYTE PTR [ecx+0x66a0967d],al
  4184b9:	int3   
  4184ba:	fsub   QWORD PTR [edi+ebx*1]
  4184bd:	cmp    DWORD PTR [ebx-0x4a],esi
  4184c0:	stos   DWORD PTR es:[edi],eax
  4184c1:	mov    eax,ds:0xd43e7683
  4184c6:	adc    DWORD PTR [ebp-0x3fa5d3ad],esp
  4184cc:	inc    ebp
  4184cd:	clc    
  4184ce:	hlt    
  4184cf:	outs   dx,DWORD PTR gs:[esi]
  4184d1:	mov    edx,ebx
  4184d3:	mov    eax,ds:0xecad7018
  4184d8:	or     DWORD PTR [eax-0x37a9f099],0x8a683bbc
  4184e2:	rcr    BYTE PTR [edx-0x134b77cb],1
  4184e8:	add    eax,0x56c5e557
  4184ed:	ins    DWORD PTR es:[edi],dx
  4184ee:	cmc    
  4184ef:	push   0xd8e6e73
  4184f4:	into   
  4184f5:	loop   0x41847a
  4184f7:	or     ch,ch
  4184f9:	mov    edi,0x9d4691a4
  4184fe:	mov    ds:0xb5cdf0fc,al
  418503:	inc    ebp
  418504:	mov    eax,ds:0x35f0fd09
  418509:	out    dx,al
  41850a:	mov    edx,0x3f562d76
  41850f:	ror    BYTE PTR [esp+edx*8],cl
  418512:	or     bh,BYTE PTR [edx+0x33953100]
  418518:	or     al,0x89
  41851a:	ins    DWORD PTR es:[edi],dx
  41851b:	cs int 0x47
  41851e:	jo     0x418582
  418520:	mov    ds:0x66424609,al
  418525:	icebp  
  418526:	jnp    0x418595
  418528:	or     ah,bl
  41852a:	imul   esp,ebp,0x23
  41852d:	sub    dl,ch
  41852f:	cwde   
  418530:	xchg   ebp,eax
  418531:	sbb    bh,BYTE PTR [esp+edx*8]
  418534:	les    esi,FWORD PTR [ebx-0x51]
  418537:	dec    esp
  418538:	dec    ebx
  418539:	sub    BYTE PTR cs:[ebx-0x71],ah
  41853d:	push   0x2d
  41853f:	ds xor eax,0x257adf9c
  418545:	mov    ds:0x36c39f19,al
  41854a:	es sbb eax,edi
  41854d:	cmp    bl,al
  41854f:	pusha  
  418550:	arpl   dx,ax
  418552:	ret    0xb4c1
  418555:	je     0x4184fa
  418557:	out    dx,eax
  418558:	sbb    eax,0xe982bec0
  41855d:	loope  0x4185c5
  41855f:	cmp    BYTE PTR [esi-0x5639782],ch
  418565:	sbb    al,0x27
  418567:	dec    edi
  418568:	sbb    BYTE PTR [esi+0x52],ah
  41856b:	adc    al,0x9b
  41856d:	xchg   ebp,eax
  41856e:	add    dh,0x57
  418571:	addr16 mov bh,0x64
  418574:	adc    ch,BYTE PTR [edx+0x2c5765ba]
  41857a:	sub    DWORD PTR [edx-0x3fabb742],ecx
  418580:	and    BYTE PTR [edi+0x27766a76],cl
  418586:	retf   0xd3a5
  418589:	stos   DWORD PTR es:[edi],eax
  41858a:	out    dx,al
  41858b:	push   ss
  41858c:	jmp    0x64a76bd8
  418591:	xchg   ebp,eax
  418592:	xchg   edx,eax
  418593:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418594:	aad    0x8d
  418596:	int3   
  418597:	fs cmp al,0xac
  41859a:	imul   esp,DWORD PTR [edx],0xcebbc7a5
  4185a0:	iret   
  4185a1:	or     eax,0xb615b3bb
  4185a6:	(bad)  
  4185a7:	xor    esi,ebx
  4185a9:	pop    esp
  4185aa:	jns    0x4185a3
  4185ac:	jnp    0x4185d6
  4185ae:	inc    edi
  4185af:	pop    ecx
  4185b0:	je     0x418532
  4185b2:	out    dx,eax
  4185b3:	inc    esi
  4185b4:	lods   eax,DWORD PTR ds:[esi]
  4185b5:	adc    ch,bl
  4185b7:	cmc    
  4185b8:	adc    esi,eax
  4185ba:	and    al,0x21
  4185bc:	gs sub al,0x4d
  4185bf:	or     BYTE PTR [eax+0x50efaaf7],dl
  4185c5:	xor    eax,DWORD PTR [edi+0x1c874d9f]
  4185cb:	mov    bh,0x1
  4185cd:	push   ebp
  4185ce:	imul   ebp,DWORD PTR [edi-0x3fba3b68],0x29
  4185d5:	mov    esi,0x967c31e2
  4185da:	sub    al,0xec
  4185dc:	jl     0x418573
  4185de:	in     al,0x33
  4185e0:	ja     0x418646
  4185e2:	sbb    al,0x7e
  4185e4:	jg     0x41858a
  4185e6:	sbb    eax,0x1b11ee75
  4185eb:	push   edi
  4185ec:	adc    DWORD PTR [eax+eiz*4+0x7a702694],ecx
  4185f3:	nop
  4185f4:	fdivp  st(4),st
  4185f6:	stos   BYTE PTR es:[edi],al
  4185f7:	mov    dh,0x93
  4185f9:	icebp  
  4185fa:	ror    DWORD PTR [ecx-0x7ba63ebd],cl
  418600:	xchg   esi,eax
  418601:	call   0xe6df:0x9eb4c0e8
  418608:	test   al,0x2c
  41860a:	jno    0x418590
  41860c:	push   ecx
  41860d:	cs ins BYTE PTR es:[edi],dx
  41860f:	sbb    al,0xda
  418611:	mov    ebx,0xe6160438
  418616:	pop    eax
  418617:	jge    0x418642
  418619:	jmp    0x41859d
  41861b:	adc    al,0x8
  41861d:	adc    dl,BYTE PTR [ecx+0x4adc85e]
  418623:	cmp    BYTE PTR [edi-0x50],ch
  418626:	(bad)  
  418627:	or     esi,DWORD PTR [eax-0x6b44a005]
  41862d:	cmp    bh,BYTE PTR [esp+edi*1]
  418630:	dec    edi
  418631:	dec    esp
  418632:	add    ch,BYTE PTR [ecx]
  418634:	pop    ds
  418635:	cmp    dh,dh
  418637:	loopne 0x4185db
  418639:	inc    esp
  41863a:	or     edi,DWORD PTR [edx]
  41863c:	push   esp
  41863d:	fwait
  41863e:	retf   0x50fa
  418641:	push   edx
  418642:	scas   eax,DWORD PTR es:[edi]
  418643:	xchg   esi,eax
  418644:	and    al,0xd2
  418646:	lods   eax,DWORD PTR ds:[esi]
  418647:	in     eax,dx
  418648:	jmp    0x42afbf82
  41864d:	sar    dl,0xf8
  418650:	fdiv   DWORD PTR [edx+0x3ee4f8b9]
  418656:	(bad)  
  418657:	adc    DWORD PTR [ebp+0x76],edi
  41865a:	repnz xor al,BYTE PTR [esi]
  41865d:	fcomp  st(7)
  41865f:	xor    ebp,esi
  418661:	neg    BYTE PTR [edx+0x4486cec8]
  418667:	(bad)  
  418668:	or     al,0x70
  41866a:	test   DWORD PTR gs:[ecx-0x71],ecx
  41866e:	push   ecx
  41866f:	cs or  al,0x2f
  418672:	pushf  
  418673:	mov    ebx,0x322bab7e
  418678:	add    eax,0x69b467f9
  41867d:	sub    eax,0xd0ea7c86
  418682:	mov    ch,0x92
  418684:	push   ebp
  418685:	cmp    BYTE PTR es:[ecx+0x1dabfe0d],dh
  41868c:	gs mov ch,0xe6
  41868f:	push   0xffffffb9
  418691:	cs js  0x4186ad
  418694:	addr16 add eax,0x2b4aa4d9
  41869a:	es cwde 
  41869c:	mov    BYTE PTR es:[ecx-0x5ea0dbdb],al
  4186a3:	scas   al,BYTE PTR es:[edi]
  4186a4:	mov    ch,0xe5
  4186a6:	xor    DWORD PTR [ebp-0x6e],edi
  4186a9:	mov    esp,0x304d7e3f
  4186ae:	je     0x4186a3
  4186b0:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4186b2:	outs   dx,BYTE PTR ds:[esi]
  4186b3:	and    eax,DWORD PTR [ecx]
  4186b5:	mov    DWORD PTR [ecx+eiz*4+0x213b1c87],esi
  4186bc:	call   0x6d35:0xe7a89705
  4186c3:	dec    ecx
  4186c4:	inc    esp
  4186c5:	arpl   dx,si
  4186c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186c8:	dec    eax
  4186c9:	aam    0x80
  4186cb:	sbb    al,0xe0
  4186cd:	dec    ecx
  4186ce:	pop    ebx
  4186cf:	into   
  4186d0:	fild   QWORD PTR [ecx+0x0]
  4186d3:	or     ch,BYTE PTR ds:0xe749
  4186d8:	shr    cl,0xb1
  4186db:	ds inc esi
  4186dd:	enter  0x9a29,0xc
  4186e1:	gs inc ebp
  4186e3:	push   eax
  4186e4:	repz cmp al,BYTE PTR [ebp-0x9]
  4186e8:	or     BYTE PTR [esp+eax*1-0x4d],cl
  4186ec:	pop    edx
  4186ed:	adc    eax,0xe66eb9a8
  4186f2:	pop    es
  4186f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186f4:	(bad)  
  4186f7:	ret    0xd84a
  4186fa:	mov    ?,WORD PTR [esi]
  4186fc:	lds    esi,FWORD PTR ds:0x91a7f309
  418702:	test   DWORD PTR [eax+0x5e],ecx
  418705:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418706:	xchg   ebx,eax
  418707:	cmp    ebx,edi
  418709:	push   ecx
  41870a:	push   0x51
  41870c:	int    0x86
  41870e:	dec    esi
  41870f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418710:	data16 (bad) 
  418712:	dec    edx
  418713:	sub    al,0xa6
  418715:	jnp    0x418791
  418717:	dec    edi
  418718:	out    0xa7,al
  41871a:	pushf  
  41871b:	mov    ds:0x975b23f3,al
  418720:	test   DWORD PTR [ecx+0x6c],eax
  418723:	pop    esi
  418724:	enter  0xc885,0x5b
  418728:	or     ecx,esp
  41872a:	dec    eax
  41872b:	lock ins BYTE PTR es:[edi],dx
  41872d:	xchg   edi,eax
  41872e:	pop    es
  41872f:	sti    
  418730:	clc    
  418731:	bnd je 0x418730
  418734:	ja     0x4186d5
  418736:	dec    ebx
  418737:	and    al,BYTE PTR gs:[ecx]
  41873a:	mov    dh,0x67
  41873c:	lds    esi,FWORD PTR [ebp+0x59328eaa]
  418742:	stos   DWORD PTR es:[edi],eax
  418743:	mov    eax,0x4ee47bbc
  418748:	sub    DWORD PTR [ebx],edx
  41874a:	icebp  
  41874b:	ss inc ebx
  41874d:	loope  0x41874c
  41874f:	inc    esp
  418750:	mov    eax,ds:0x7e197c34
  418755:	mov    DWORD PTR [ebx-0x48cb2e47],edx
  41875b:	fwait
  41875c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41875d:	leave  
  41875e:	fwait
  41875f:	sahf   
  418760:	sbb    BYTE PTR [ecx-0x470d4180],0x6a
  418767:	jb     0x41878b
  418769:	test   eax,0xca72f9d2
  41876e:	out    dx,eax
  41876f:	and    dl,dl
  418771:	in     al,0xfb
  418773:	mov    al,ds:0x58f50a8c
  418778:	dec    ecx
  418779:	addr16 mov dh,0xa5
  41877c:	hlt    
  41877d:	fld    DWORD PTR [esi-0x58fedd26]
  418783:	push   0x29
  418785:	cmp    BYTE PTR [eax],0x7f
  418788:	push   ebp
  418789:	repz xchg ecx,eax
  41878b:	neg    ebp
  41878d:	and    eax,0xd076faf
  418792:	(bad)  [edx+0x53]
  418795:	sahf   
  418796:	mov    dl,BYTE PTR [edi]
  418798:	inc    edx
  418799:	test   al,0x43
  41879b:	mov    ah,0xc6
  41879d:	test   eax,0xf27b59f5
  4187a2:	pop    ss
  4187a3:	push   es
  4187a4:	pop    ecx
  4187a5:	test   DWORD PTR [ecx],ebx
  4187a7:	cwde   
  4187a8:	dec    esp
  4187a9:	pop    edx
  4187aa:	add    esp,ecx
  4187ac:	mov    dl,0x51
  4187ae:	dec    edi
  4187af:	push   ebx
  4187b0:	add    eax,0x9227ce52
  4187b5:	xlat   BYTE PTR ds:[ebx]
  4187b6:	adc    eax,0xb504c27e
  4187bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187bc:	out    0x6a,al
  4187be:	push   ebx
  4187bf:	stos   BYTE PTR es:[edi],al
  4187c0:	pop    ebp
  4187c1:	ins    BYTE PTR es:[edi],dx
  4187c2:	inc    ebx
  4187c3:	test   al,dl
  4187c5:	daa    
  4187c6:	pop    ecx
  4187c7:	or     BYTE PTR [edi],bl
  4187c9:	lods   al,BYTE PTR ds:[esi]
  4187ca:	test   al,0x7b
  4187cc:	std    
  4187cd:	push   esi
  4187ce:	mov    BYTE PTR [eax+edx*1+0x20f3d7f3],ah
  4187d5:	test   al,0xbc
  4187d7:	lods   al,BYTE PTR ds:[esi]
  4187d8:	add    cl,al
  4187da:	cld    
  4187db:	(bad)  
  4187dc:	and    DWORD PTR ds:0x910e37f6,edx
  4187e2:	add    al,BYTE PTR [ecx-0xafacfc]
  4187e8:	int    0xb6
  4187ea:	outs   dx,DWORD PTR ds:[esi]
  4187eb:	data16 mov bh,0x78
  4187ee:	jp     0x418800
  4187f0:	sar    DWORD PTR [ecx-0x22],cl
  4187f3:	sbb    edi,DWORD PTR [esi+0x1a764001]
  4187f9:	and    ebp,DWORD PTR [edx+0x21c433ba]
  4187ff:	xor    eax,0x718278dd
  418804:	retf   0xcf5b
  418807:	popf   
  418808:	sub    ebx,esi
  41880a:	lahf   
  41880b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41880c:	das    
  41880d:	test   eax,0xddaf3497
  418813:	push   ecx
  418814:	ins    DWORD PTR es:[edi],dx
  418815:	mov    ds:0x4ae7d12d,eax
  41881a:	mov    ch,ch
  41881c:	shl    DWORD PTR [edi+0x25b8fa91],0x90
  418823:	lods   eax,DWORD PTR ds:[esi]
  418824:	les    edi,FWORD PTR [ecx-0x33489a4b]
  41882a:	fldenv [esi+0x4e]
  41882d:	fnstcw WORD PTR [ebx-0x32]
  418830:	shr    BYTE PTR [ebx+0x24],1
  418833:	jmp    0x4187fb
  418835:	std    
  418836:	inc    DWORD PTR [edx-0x8]
  418839:	jg     0x41881a
  41883b:	out    dx,eax
  41883c:	cmp    DWORD PTR [edi-0x42],edi
  41883f:	adc    BYTE PTR [edx],bl
  418841:	sbb    BYTE PTR [edx],ch
  418843:	sahf   
  418844:	jmp    0xaaa1cba0
  418849:	fmul   QWORD PTR [ebp-0x31]
  41884c:	enter  0x1ad7,0x42
  418850:	sub    ch,bl
  418852:	and    DWORD PTR [esi],ebx
  418854:	mov    ebp,0xfb35e22f
  418859:	sub    BYTE PTR [edx+0x52a01829],al
  41885f:	(bad)
  418863:	jg     0x41881b
  418865:	and    al,BYTE PTR [edi-0x6]
  418868:	in     al,0xf7
  41886a:	mov    al,ds:0xf36fdac6
  41886f:	sub    ah,bh
  418871:	loopne 0x41887e
  418873:	inc    ecx
  418874:	mov    bh,0xd5
  418876:	rol    dh,cl
  418878:	fidivr DWORD PTR [edx+0x15]
  41887b:	clc    
  41887c:	(bad)  
  41887d:	jmp    0x560a:0xe559c1b3
  418884:	stc    
  418885:	mov    bl,0x5d
  418887:	mov    ecx,0xf5535fae
  41888c:	push   ebp
  41888d:	dec    esi
  41888e:	inc    ebp
  41888f:	push   esp
  418890:	aas    
  418891:	clc    
  418892:	sti    
  418893:	fnsave [esi]
  418895:	popf   
  418896:	dec    ebp
  418897:	add    eax,0xdbe91d48
  41889c:	xchg   esi,eax
  41889d:	ds test edx,esi
  4188a0:	(bad)  
  4188a1:	aad    0x9
  4188a3:	cmpxchg BYTE PTR [esi],al
  4188a6:	aas    
  4188a7:	into   
  4188a8:	pop    ebp
  4188a9:	fcmovnb st,st(1)
  4188ab:	imul   ecx,DWORD PTR [edi+0x6e16178a],0x7b
  4188b2:	mov    ecx,0xe72460a0
  4188b7:	pop    ds
  4188b8:	dec    edx
  4188b9:	rol    BYTE PTR [ebp-0x12],1
  4188bc:	jl     0x41892d
  4188be:	pop    eax
  4188bf:	cmp    BYTE PTR [edi+0x23],0xe8
  4188c3:	pushf  
  4188c4:	push   edi
  4188c5:	das    
  4188c6:	rol    DWORD PTR [edi-0x806a3bf],cl
  4188cc:	dec    esp
  4188cd:	sub    BYTE PTR [eax-0x50],ch
  4188d0:	std    
  4188d1:	dec    BYTE PTR [edx-0x4d]
  4188d4:	call   0xfdc1d327
  4188d9:	shl    DWORD PTR [edi-0x52],0xdb
  4188dd:	std    
  4188de:	test   DWORD PTR [ebp+0x1872601],0xc5187f98
  4188e8:	cdq    
  4188e9:	call   0x9727fb73
  4188ee:	mov    WORD PTR [ebx],cs
  4188f0:	imul   esi,DWORD PTR [eax-0x34008fc4],0xffffffd4
  4188f7:	js     0x4188f2
  4188f9:	mov    ebx,fs
  4188fb:	jno    0x418936
  4188fd:	sub    eax,DWORD PTR [eax]
  4188ff:	fadd   st,st(7)
  418901:	js     0x4188c8
  418903:	xlat   BYTE PTR ds:[ebx]
  418904:	lock xchg ebx,eax
  418906:	adc    eax,0x4205484e
  41890b:	sbb    eax,0x6bc66099
  418910:	fs sti 
  418912:	adc    ebx,esi
  418914:	mov    esi,0x33bf62eb
  418919:	jae    0x41894f
  41891b:	loope  0x418909
  41891d:	stc    
  41891e:	jnp    0x4188a8
  418920:	clc    
  418921:	mov    bh,0x6a
  418923:	mov    ah,0x76
  418925:	xlat   BYTE PTR ds:[ebx]
  418926:	pop    edi
  418927:	sbb    al,0x56
  418929:	jb     0x4188d2
  41892b:	loope  0x4188d2
  41892d:	test   BYTE PTR [ebx-0x22],0x7b
  418931:	outs   dx,BYTE PTR ds:[esi]
  418932:	iret   
  418933:	mov    ds:0xe2435f72,al
  418938:	in     al,0x3d
  41893a:	jae    0x4188f5
  41893c:	imul   ebp,DWORD PTR [ebx+edi*1],0xffffffe7
  418940:	mov    bh,0xe1
  418942:	mov    al,ds:0x31bd8471
  418947:	jo     0x418906
  418949:	jns    0x418923
  41894b:	fadd   QWORD PTR [edx]
  41894d:	popf   
  41894e:	imul   ecx,ebp,0x4f1b5d68
  418954:	sbb    ch,BYTE PTR [eax]
  418956:	mov    ds:0xa998a876,eax
  41895b:	adc    BYTE PTR [edi],cl
  41895d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41895e:	icebp  
  41895f:	push   edi
  418960:	ja     0x4188f5
  418962:	(bad)
  418967:	dec    BYTE PTR [edx-0x6601ea5d]
  41896d:	mov    ch,0x63
  41896f:	sub    eax,0xd0db103a
  418974:	or     al,0x89
  418976:	scas   eax,DWORD PTR es:[edi]
  418977:	or     esp,0x7e
  41897a:	adc    eax,0x4c4e88ae
  41897f:	in     eax,0xd0
  418981:	jae    0x4189f8
  418983:	fiadd  WORD PTR [ebx-0x62d78acc]
  418989:	ins    DWORD PTR es:[edi],dx
  41898a:	mov    al,ds:0x94f8ec71
  41898f:	in     eax,0xbf
  418991:	sub    ch,BYTE PTR [eax+0x44]
  418994:	bound  eax,QWORD PTR [ebp+0x24]
  418997:	iret   
  418998:	and    ecx,0x25
  41899b:	push   ebp
  41899c:	mov    edx,0x24632865
  4189a1:	sbb    al,0xd5
  4189a3:	xor    al,0x1b
  4189a5:	xor    ecx,esp
  4189a7:	out    0xd,eax
  4189a9:	(bad)  
  4189aa:	sahf   
  4189ab:	cmp    dh,al
  4189ad:	push   edx
  4189ae:	mov    al,ds:0xe0c6b90a
  4189b3:	or     BYTE PTR [ebx+ecx*8-0x4f6d9063],dh
  4189ba:	sub    edx,ecx
  4189bc:	jle    0x4189e9
  4189be:	sub    eax,0x4f98eabc
  4189c3:	push   ebx
  4189c4:	jbe    0x4189d2
  4189c6:	pusha  
  4189c7:	or     eax,0xbdfe7aad
  4189cc:	repz dec ecx
  4189ce:	mov    al,BYTE PTR [esi]
  4189d0:	and    esp,DWORD PTR [ecx-0x5c]
  4189d3:	mov    ch,0x47
  4189d5:	gs stos BYTE PTR es:[edi],al
  4189d7:	cld    
  4189d8:	sub    ch,BYTE PTR [eax+0x78]
  4189db:	pop    ecx
  4189dc:	xor    al,0xe4
  4189de:	ret    
  4189df:	in     eax,0xa8
  4189e1:	das    
  4189e2:	xchg   ebx,eax
  4189e3:	dec    ebp
  4189e4:	xor    al,0x52
  4189e6:	inc    ebp
  4189e7:	jl     0x4189b3
  4189e9:	inc    ebx
  4189ea:	(bad)  
  4189eb:	shr    BYTE PTR [ecx],cl
  4189ed:	push   es
  4189ee:	idiv   ebp
  4189f0:	in     eax,0x43
  4189f2:	jecxz  0x418a4c
  4189f4:	in     eax,0x62
  4189f6:	scas   al,BYTE PTR es:[edi]
  4189f7:	or     eax,DWORD PTR [eax+esi*4]
  4189fa:	cmc    
  4189fb:	in     al,0xf7
  4189fd:	dec    ebp
  4189fe:	add    DWORD PTR [ebx-0x24e99acd],eax
  418a04:	or     ebx,DWORD PTR [ecx-0x29a854f8]
  418a0a:	jns    0x418a7a
  418a0c:	sub    esp,DWORD PTR [ecx-0x34]
  418a0f:	push   edx
  418a10:	mov    dh,0xb3
  418a12:	pop    eax
  418a13:	in     al,dx
  418a14:	pop    DWORD PTR [eax-0x22]
  418a17:	jge    0x418a3f
  418a19:	mov    fs,WORD PTR [esi+0xf16d02f]
  418a1f:	adc    bl,al
  418a21:	mov    esp,0xf16ffc6f
  418a26:	sub    DWORD PTR [ebp-0x3d],eax
  418a29:	sbb    ecx,ecx
  418a2b:	xchg   esi,eax
  418a2c:	mov    bh,0xdd
  418a2e:	inc    ecx
  418a2f:	inc    eax
  418a30:	dec    esp
  418a31:	jl     0x4189d9
  418a33:	pop    ds
  418a34:	dec    ebx
  418a35:	pop    ecx
  418a36:	lods   eax,DWORD PTR ds:[esi]
  418a37:	(bad)  
  418a38:	sub    al,0x5f
  418a3a:	sahf   
  418a3b:	dec    esi
  418a3c:	dec    edx
  418a3d:	sub    DWORD PTR [edi+0x21],ecx
  418a40:	jecxz  0x4189d3
  418a42:	mov    WORD PTR [edx+0x46],gs
  418a45:	inc    ecx
  418a46:	popf   
  418a47:	rcl    BYTE PTR [ebx-0x51],0x2e
  418a4b:	outs   dx,BYTE PTR ds:[esi]
  418a4c:	leave  
  418a4d:	or     eax,0x41c5921f
  418a52:	inc    ecx
  418a53:	idiv   DWORD PTR [edi+0x62da2e98]
  418a59:	leave  
  418a5a:	adc    al,0x26
  418a5c:	repz xor al,0x63
  418a5f:	es popa 
  418a61:	add    bl,BYTE PTR [ebx-0x390a6160]
  418a67:	ret    0xd0f8
  418a6a:	mov    ecx,0x47c68f12
  418a6f:	daa    
  418a70:	in     eax,dx
  418a71:	sub    al,0x8a
  418a73:	addr16 lahf 
  418a75:	or     BYTE PTR [esp+ebx*2+0x742dd5f1],ch
  418a7c:	and    edx,DWORD PTR ds:0x429e81b3
  418a82:	or     ebx,ecx
  418a84:	add    DWORD PTR [edx-0x1f42eb55],edi
  418a8a:	adc    ecx,DWORD PTR [ebx+0x1e88507c]
  418a90:	dec    esi
  418a91:	lahf   
  418a92:	(bad)  
  418a93:	cdq    
  418a94:	jb     0x418a75
  418a96:	int    0xcf
  418a98:	hlt    
  418a99:	fdivp  st(6),st
  418a9b:	sahf   
  418a9c:	mov    ch,0x81
  418a9e:	lds    ebp,FWORD PTR [eax+0x2666593e]
  418aa4:	call   0x33:0x74cb5709
  418aab:	int    0xc3
  418aad:	pop    esi
  418aae:	dec    ebx
  418aaf:	scas   al,BYTE PTR es:[edi]
  418ab0:	jmp    0xa6bcf470
  418ab5:	pop    ss
  418ab6:	cmp    BYTE PTR [edx],bh
  418ab8:	push   ecx
  418ab9:	dec    edi
  418aba:	xchg   ebp,eax
  418abb:	and    al,0x89
  418abd:	sbb    ch,BYTE PTR [ecx+0x66]
  418ac0:	adc    al,0xce
  418ac2:	push   0xb0b532a3
  418ac7:	retf   0xdb64
  418aca:	sub    BYTE PTR [edi-0x53],0xf1
  418ace:	xchg   ecx,eax
  418acf:	adc    bh,BYTE PTR [esi-0x3ff6dda9]
  418ad5:	pop    ebx
  418ad6:	test   eax,edx
  418ad8:	fcomp  DWORD PTR [esi+ebp*8]
  418adb:	test   al,0xde
  418add:	sbb    ecx,eax
  418adf:	xchg   edi,eax
  418ae0:	and    al,0x5f
  418ae2:	sbb    BYTE PTR [edi+0x4f],cl
  418ae5:	push   0x68347cf7
  418aea:	adc    BYTE PTR [ebp+0x19],bl
  418aed:	enter  0x7778,0xb8
  418af1:	sti    
  418af2:	mov    al,0xfa
  418af4:	inc    edx
  418af5:	(bad)  
  418af6:	imul   esp,DWORD PTR [eax-0x8],0xba6d8d4
  418afd:	dec    ebx
  418afe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418aff:	sub    BYTE PTR [edi+0xdda0dc7],cl
  418b05:	pop    es
  418b06:	mov    ebp,0xda699fc6
  418b0b:	sbb    esi,DWORD PTR [edx]
  418b0d:	jo     0x418b88
  418b0f:	push   0xffffffbb
  418b11:	sahf   
  418b12:	out    0x35,al
  418b14:	mov    fs,WORD PTR [eax-0x2f862a83]
  418b1a:	int3   
  418b1b:	mov    edx,0x84b765fa
  418b20:	inc    edi
  418b21:	pop    edi
  418b22:	sbb    edi,ebp
  418b24:	sub    ah,BYTE PTR [edi+0xbd71d3a]
  418b2a:	icebp  
  418b2b:	cdq    
  418b2c:	jb     0x418b19
  418b2e:	out    dx,al
  418b2f:	stc    
  418b30:	cs push esi
  418b32:	sub    BYTE PTR [edx+0x2ea01064],dl
  418b38:	bound  esp,QWORD PTR [ebp+eax*2-0x50]
  418b3c:	cld    
  418b3d:	pop    edi
  418b3e:	loop   0x418ba3
  418b40:	ficomp DWORD PTR [edi+0x10fc6c54]
  418b46:	push   ss
  418b47:	mov    ah,0x41
  418b49:	xlat   BYTE PTR ds:[ebx]
  418b4a:	jns    0x418b52
  418b4c:	ret    0x89ef
  418b4f:	cs test al,0xd8
  418b52:	idiv   ecx
  418b54:	adc    dl,BYTE PTR fs:[ebp-0x80]
  418b58:	push   edx
  418b59:	xchg   BYTE PTR [edx+0xb21a20a],bl
  418b5f:	fiadd  DWORD PTR [edx+0x29]
  418b62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b63:	push   es
  418b64:	ret    0x22de
  418b67:	nop
  418b68:	shl    BYTE PTR [esi-0x29b1331b],cl
  418b6e:	test   al,0x28
  418b70:	mov    al,al
  418b72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b73:	mov    dh,0x41
  418b75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b76:	aas    
  418b77:	mov    edx,DWORD PTR [ebx]
  418b79:	jp     0x418b68
  418b7b:	xchg   BYTE PTR [eax+ecx*4],ch
  418b7e:	inc    esp
  418b7f:	jl     0x418b5b
  418b81:	std    
  418b82:	push   cs
  418b83:	jb     0x67f4c489
  418b89:	xchg   edx,eax
  418b8a:	imul   ebp,ebp,0x9f834db6
  418b90:	leave  
  418b91:	(bad)  
  418b92:	mov    esp,0x6a176737
  418b98:	xchg   esi,eax
  418b99:	ffree  st(0)
  418b9b:	add    edx,DWORD PTR [ebx+esi*1]
  418b9e:	sbb    eax,0xea8a6630
  418ba3:	pop    esi
  418ba4:	sub    al,0xc4
  418ba6:	shl    BYTE PTR [edx+edx*4+0x4c88c053],0x9a
  418bae:	adc    eax,ebx
  418bb0:	xchg   esi,eax
  418bb1:	or     dh,BYTE PTR [esi+0x7db4a8ee]
  418bb7:	sub    eax,0xf69a4889
  418bbc:	fsubr  st,st(3)
  418bbe:	jns    0x418bf6
  418bc0:	gs pop esp
  418bc2:	cmp    al,0x37
  418bc4:	lods   al,BYTE PTR ds:[esi]
  418bc5:	jbe    0x418c1c
  418bc7:	mov    dl,0xd0
  418bc9:	push   0xffffffc4
  418bcb:	rol    DWORD PTR [ebx+0xb4a86a0],0x21
  418bd2:	out    0x72,al
  418bd4:	sub    eax,0x3f58f975
  418bd9:	popa   
  418bda:	xchg   esp,eax
  418bdb:	xor    esp,DWORD PTR [esi+0x2ef0480a]
  418be1:	test   al,0x9f
  418be4:	retf   0x560f
  418be7:	dec    eax
  418be8:	das    
  418be9:	pop    edi
  418bea:	or     al,0xaf
  418bec:	iret   
  418bed:	or     BYTE PTR [edi-0x76],dl
  418bf0:	sahf   
  418bf1:	iret   
  418bf2:	cmp    al,0x2e
  418bf4:	inc    ecx
  418bf5:	add    esp,DWORD PTR [esi+0x6c]
  418bf8:	push   cs
  418bf9:	mov    dh,0xd9
  418bfb:	jp     0x418bb7
  418bfd:	(bad)  
  418bfe:	imul   esi,ebp,0x508b0daf
  418c04:	mov    al,ds:0xbf37f35b
  418c09:	std    
  418c0a:	sub    al,bh
  418c0c:	pop    ds
  418c0d:	cwde   
  418c0e:	mov    bh,0xdc
  418c10:	mov    ebx,0x2e2ff4d7
  418c15:	and    DWORD PTR [edi-0x1b3bfa7f],edx
  418c1b:	lea    ebx,[ebp+0x2125fbb4]
  418c21:	mov    ds:0xbd7f91d4,eax
  418c26:	loop   0x418c02
  418c28:	es inc edi
  418c2a:	lods   al,BYTE PTR ds:[esi]
  418c2b:	stos   DWORD PTR es:[edi],eax
  418c2c:	ins    BYTE PTR es:[edi],dx
  418c2d:	mov    ah,0xa9
  418c2f:	or     ecx,DWORD PTR [eax-0x456d0f1b]
  418c35:	scas   eax,DWORD PTR es:[edi]
  418c36:	test   al,0x55
  418c38:	mov    ebp,0x73077db7
  418c3d:	or     edi,eax
  418c3f:	xor    BYTE PTR [edx],al
  418c41:	xor    BYTE PTR [esi-0x24],dl
  418c44:	cmp    DWORD PTR [ecx+0x45987899],0x804e2821
  418c4e:	pusha  
  418c4f:	fwait
  418c50:	in     eax,0xc0
  418c52:	xchg   esi,eax
  418c53:	dec    esp
  418c54:	rcl    esp,1
  418c56:	fs iret 
  418c58:	pop    edx
  418c59:	ret    
  418c5a:	hlt    
  418c5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c5c:	js     0x418c01
  418c5e:	sub    eax,0xa2ab86cb
  418c63:	dec    edx
  418c64:	lock pushf 
  418c66:	xchg   ecx,eax
  418c67:	mov    eax,0xd10d0c2e
  418c6c:	(bad)  
  418c6e:	pop    esp
  418c6f:	and    edi,DWORD PTR [esi-0x43]
  418c72:	pop    ecx
  418c73:	aad    0x5c
  418c75:	mov    al,ds:0xe37a259a
  418c7a:	push   ecx
  418c7b:	add    bh,BYTE PTR [esi-0x39]
  418c7e:	iret   
  418c7f:	xor    DWORD PTR [edi-0x27acc28b],ecx
  418c85:	cmp    ecx,DWORD PTR [ebx+0x48]
  418c88:	or     BYTE PTR [eax],al
  418c8a:	imul   esp,edx,0x75
  418c8d:	adc    esp,DWORD PTR [ebx-0x7693041e]
  418c93:	leave  
  418c94:	bound  ebx,QWORD PTR [ecx-0x51587ffe]
  418c9a:	sbb    al,0xfd
  418c9c:	cdq    
  418c9d:	shl    BYTE PTR [ebx+0x32648bd9],1
  418ca3:	jnp    0x418c6e
  418ca5:	lea    eax,[ecx]
  418ca7:	rcr    ah,0xef
  418caa:	(bad)
  418cae:	pop    es
  418caf:	cmp    eax,0x3e6eabea
  418cb4:	std    
  418cb5:	inc    edi
  418cb6:	in     al,dx
  418cb7:	jmp    0xd92f:0xf0f13026
  418cbe:	sbb    BYTE PTR [ebp+0x44],ch
  418cc1:	adc    BYTE PTR [ebp+0x7bea1cbf],dl
  418cc7:	mov    ecx,DWORD PTR [edx]
  418cc9:	xor    DWORD PTR [ecx],ecx
  418ccb:	inc    esi
  418ccc:	test   ebx,edi
  418cce:	ret    0x68d9
  418cd1:	(bad)  
  418cd2:	popa   
  418cd3:	fs stos DWORD PTR es:[edi],eax
  418cd5:	cmp    BYTE PTR [edi+eiz*8],dl
  418cd8:	or     bl,BYTE PTR [edx-0x3a]
  418cdb:	add    BYTE PTR [edx],bh
  418cdd:	mul    bh
  418cdf:	adc    BYTE PTR [ebp+0x2e],ch
  418ce2:	(bad)  
  418ce3:	clc    
  418ce4:	les    edi,FWORD PTR [edi-0x50]
  418ce7:	mov    eax,0x5ae869ad
  418cec:	fiadd  WORD PTR [eax-0x52]
  418cef:	outs   dx,DWORD PTR ds:[esi]
  418cf0:	mov    dl,0xe2
  418cf2:	adc    DWORD PTR ds:0xe60e1de6,ebp
  418cf8:	jge    0x418ce1
  418cfa:	fldenv [ebx+0x45]
  418cfd:	jo     0x418cc3
  418cff:	xchg   DWORD PTR [ecx],ecx
  418d01:	jp     0x418c95
  418d03:	or     eax,0x9e3b72d0
  418d08:	xor    BYTE PTR [edx],ah
  418d0a:	lods   eax,DWORD PTR ds:[esi]
  418d0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d0c:	pop    esi
  418d0d:	add    eax,0xd38ab1fe
  418d12:	xor    ah,BYTE PTR [eax+0x2]
  418d15:	inc    ebx
  418d16:	(bad)  
  418d17:	cld    
  418d18:	gs mov dh,0xc8
  418d1b:	add    DWORD PTR [ecx+0x7fe9ba66],ecx
  418d21:	push   ebx
  418d22:	sub    dh,BYTE PTR [esi-0x1d]
  418d25:	inc    ebx
  418d26:	push   edi
  418d27:	shl    BYTE PTR [ecx+0x14],1
  418d2a:	cmp    al,0x1d
  418d2c:	out    0xcb,al
  418d2e:	ins    BYTE PTR es:[edi],dx
  418d2f:	push   esi
  418d30:	push   ebx
  418d31:	sub    BYTE PTR [edi-0x455741d8],0x65
  418d38:	xlat   BYTE PTR ds:[ebx]
  418d39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d3a:	dec    eax
  418d3b:	sar    DWORD PTR [esi-0x91ab019],cl
  418d41:	iret   
  418d42:	push   ss
  418d43:	neg    BYTE PTR [eax-0x493ba654]
  418d49:	rcl    dl,1
  418d4b:	mov    bh,BYTE PTR [ebp+0x795c01]
  418d51:	sbb    ch,BYTE PTR [ebp-0xb27b30]
  418d57:	pop    edi
  418d58:	push   esp
  418d59:	mov    edx,0x9fa37e84
  418d5e:	xchg   cl,bh
  418d60:	cmp    al,0xf
  418d62:	clc    
  418d63:	cmc    
  418d64:	mov    esi,0x75f27186
  418d69:	sbb    BYTE PTR [ecx+0x4b],cl
  418d6c:	(bad)  
  418d6d:	pop    esi
  418d6e:	rol    DWORD PTR [ecx+0x56],0xae
  418d72:	adc    DWORD PTR [ebx-0x56],0xfffffff6
  418d76:	pop    edx
  418d77:	add    esp,0x3673dc2e
  418d7d:	retf   0x66a6
  418d80:	sub    ecx,DWORD PTR [edi-0x5d996b64]
  418d86:	and    eax,0xbc924e48
  418d8b:	push   ecx
  418d8c:	and    BYTE PTR [eax+0x63b4b0ef],ch
  418d92:	imul   ebp,edi,0x3e57631
  418d98:	in     eax,0x49
  418d9a:	adc    esp,edi
  418d9c:	mov    al,ds:0x19a3aaa1
  418da1:	xor    BYTE PTR [edx+0x31],dl
  418da4:	sub    BYTE PTR [esp+edi*2-0x35],ch
  418da8:	rcr    eax,cl
  418daa:	fnstcw WORD PTR ds:0x4f9b248
  418db0:	call   FWORD PTR [ebp+0x4c]
  418db3:	add    DWORD PTR ds:0xfefe25e2,ecx
  418db9:	pop    es
  418dba:	cmp    al,0x8d
  418dbc:	jecxz  0x418dbc
  418dbe:	pop    ds
  418dbf:	jbe    0x418dca
  418dc1:	sahf   
  418dc2:	mov    cl,0x19
  418dc4:	stos   BYTE PTR es:[edi],al
  418dc5:	test   eax,0x27a4e9e0
  418dca:	iret   
  418dcb:	adc    eax,DWORD PTR [edi-0x1f]
  418dce:	jno    0x418d7d
  418dd0:	test   eax,0x5caa5729
  418dd5:	cmp    DWORD PTR [edi-0x182913b9],0x2a9b2bdc
  418ddf:	xchg   edx,eax
  418de0:	lahf   
  418de1:	enter  0xdf82,0xd3
  418de5:	mov    esp,0x8c80c6bd
  418dea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418deb:	mov    DWORD PTR [ebp+0x16407525],esi
  418df1:	ins    DWORD PTR es:[edi],dx
  418df2:	or     ebp,DWORD PTR [edx]
  418df4:	mov    al,0x9b
  418df6:	mov    ebx,0x20ec77a7
  418dfb:	pop    eax
  418dfc:	mov    BYTE PTR [eax],al
  418dfe:	sub    BYTE PTR [edi-0x3a6fdea3],al
  418e04:	or     ebx,edx
  418e06:	leave  
  418e07:	add    eax,DWORD PTR [edi+0x37]
  418e0a:	inc    ebp
  418e0b:	mov    ecx,0x44a8594c
  418e10:	stos   DWORD PTR es:[edi],eax
  418e11:	push   ss
  418e12:	cmp    eax,0xb86d4956
  418e17:	mov    eax,ds:0xd407949
  418e1c:	(bad)  
  418e1e:	rcr    BYTE PTR [ebp-0x51],0x4c
  418e22:	mov    dh,BYTE PTR [eax-0x4e9320f5]
  418e28:	out    dx,al
  418e29:	jg     0x418df3
  418e2b:	jle    0x418e60
  418e2d:	fucomp st(7)
  418e2f:	mov    edx,0x59454c8e
  418e34:	mov    ebx,0x9ee37ff
  418e39:	into   
  418e3a:	jp     0x418e2e
  418e3c:	mov    dl,0xa0
  418e3e:	cwde   
  418e3f:	mov    ecx,0x9aa9f0b
  418e44:	imul   ebx,DWORD PTR [esi-0x5e],0x164787bb
  418e4b:	mov    bh,BYTE PTR [edi]
  418e4d:	sbb    bl,BYTE PTR [ebx]
  418e4f:	arpl   WORD PTR [edx-0x29525483],cx
  418e55:	arpl   WORD PTR [ebx-0x6b141f1d],bp
  418e5b:	bound  ebx,QWORD PTR [ebx+0x6a]
  418e5e:	pop    ds
  418e5f:	mov    al,ds:0x32eebf89
  418e64:	adc    DWORD PTR [ecx],0x25
  418e67:	and    DWORD PTR [ebp+ebp*4-0x46c050c5],edi
  418e6e:	shl    DWORD PTR [edi+ecx*2+0x45],cl
  418e72:	push   eax
  418e73:	(bad)  [edx]
  418e75:	fcomp  DWORD PTR [edi-0x23b9abeb]
  418e7b:	mov    eax,ds:0xd17a6e3f
  418e80:	mov    esp,0x77fb6533
  418e85:	push   edi
  418e86:	les    esp,FWORD PTR [edi-0x7d]
  418e89:	push   ds
  418e8a:	push   ss
  418e8b:	pop    ebx
  418e8c:	mov    eax,ds:0xa541ade4
  418e91:	aad    0xd0
  418e93:	adc    eax,0x1f9daa21
  418e98:	sbb    ecx,DWORD PTR [ebx+0x485a95da]
  418e9e:	xor    dl,ch
  418ea0:	mov    ah,0x7a
  418ea2:	add    eax,0x6d78f693
  418ea7:	imul   eax,edi,0x99570478
  418ead:	pop    edi
  418eae:	lea    ecx,[ebx]
  418eb0:	mov    BYTE PTR [ebp-0x72],al
  418eb3:	in     eax,dx
  418eb4:	xor    DWORD PTR [edx+0x65],0x2a
  418eb8:	jns    0x418ee4
  418eba:	dec    edi
  418ebb:	retfw  0xa4b3
  418ebf:	xor    ecx,DWORD PTR [ecx]
  418ec1:	xor    dh,BYTE PTR [ebx-0x5f]
  418ec4:	popa   
  418ec5:	clc    
  418ec6:	iret   
  418ec7:	jnp    0x418f2d
  418ec9:	dec    esp
  418eca:	push   esi
  418ecb:	jo     0x418ede
  418ecd:	inc    DWORD PTR [edx-0x1c54ce86]
  418ed3:	pop    ebx
  418ed4:	jmp    0x4a91a322
  418ed9:	(bad)  
  418edb:	fnstsw WORD PTR [ebp+0x557b0880]
  418ee1:	mov    edx,DWORD PTR [eax]
  418ee3:	jb     0x418eca
  418ee5:	jno    0x418f58
  418ee7:	pop    ss
  418ee8:	mov    ?,ecx
  418eea:	mov    ebp,0xb5f46625
  418eef:	jle    0x418f3b
  418ef1:	xchg   ebx,eax
  418ef2:	sbb    edx,DWORD PTR [edx]
  418ef4:	imul   ebx,DWORD PTR [ecx+esi*2],0x7610bf8b
  418efb:	adc    ch,cl
  418efd:	sub    eax,0x431fabf7
  418f02:	sar    BYTE PTR [eax],cl
  418f04:	les    ebp,FWORD PTR [eax+0x70]
  418f07:	xchg   ebx,eax
  418f08:	jmp    0x418f13
  418f0a:	push   ebx
  418f0b:	inc    ecx
  418f0c:	or     dh,BYTE PTR [ebx+0x6a]
  418f0f:	dec    esi
  418f10:	add    dh,BYTE PTR [ecx+eiz*1]
  418f13:	pushf  
  418f14:	dec    ecx
  418f15:	leave  
  418f16:	inc    edx
  418f17:	cmp    eax,ebp
  418f19:	and    DWORD PTR [ebx],edi
  418f1b:	or     al,0xde
  418f1d:	and    BYTE PTR [esi],dh
  418f1f:	out    0xbe,eax
  418f21:	add    eax,DWORD PTR [eax-0x458048ee]
  418f27:	mov    bl,0x30
  418f29:	retf   0x1bf5
  418f2c:	fild   QWORD PTR [esi]
  418f2e:	pop    edx
  418f2f:	sahf   
  418f30:	push   ds
  418f31:	jnp    0x418f35
  418f33:	out    0x16,eax
  418f35:	popf   
  418f36:	lock ins DWORD PTR es:[edi],dx
  418f38:	mul    BYTE PTR [ecx-0x7b]
  418f3b:	dec    edx
  418f3c:	jp     0x418fb3
  418f3e:	xor    ebp,DWORD PTR [ebp-0x1a0131d7]
  418f44:	fld    DWORD PTR [ecx]
  418f46:	cdq    
  418f47:	loope  0x418fae
  418f49:	cmp    DWORD PTR [ebx],edi
  418f4b:	sbb    eax,0x6366b815
  418f50:	jmp    0x67c1:0x8a853302
  418f57:	cdq    
  418f58:	add    BYTE PTR [ebx],bh
  418f5a:	mov    ebp,esp
  418f5c:	xchg   ecx,eax
  418f5d:	in     eax,0x58
  418f5f:	xchg   BYTE PTR [ecx],ch
  418f61:	repnz int 0x2
  418f64:	mov    DWORD PTR ds:0x3e1fcff6,edx
  418f6a:	or     DWORD PTR [edx],esp
  418f6c:	ins    DWORD PTR es:[edi],dx
  418f6d:	div    DWORD PTR [ecx-0x2a]
  418f70:	pop    ebp
  418f71:	mov    ecx,0x124019f7
  418f76:	icebp  
  418f77:	scas   al,BYTE PTR es:[edi]
  418f78:	scas   al,BYTE PTR es:[edi]
  418f79:	mov    eax,ds:0xf4041b44
  418f7e:	jmp    0x418fd4
  418f80:	push   esi
  418f81:	pusha  
  418f82:	or     ecx,ebp
  418f84:	mov    ds,WORD PTR [ebx]
  418f86:	aam    0xbe
  418f88:	xchg   DWORD PTR [edx+0x3aeef3f8],esi
  418f8e:	lods   eax,DWORD PTR ds:[esi]
  418f8f:	das    
  418f90:	sbb    esp,edx
  418f92:	cmp    bh,BYTE PTR [ebx+0x6c]
  418f95:	inc    eax
  418f96:	gs xchg ebx,eax
  418f98:	ds or  dh,ch
  418f9b:	mov    cl,0x69
  418f9d:	dec    edi
  418f9e:	test   eax,0xd416c62a
  418fa3:	nop
  418fa4:	jmp    DWORD PTR [esi-0x4dc34701]
  418faa:	jbe    0x41900d
  418fac:	or     eax,0x9ff84c45
  418fb1:	clc    
  418fb2:	sbb    DWORD PTR [esi-0x139c0d9b],0x28f5c822
  418fbc:	inc    ecx
  418fbd:	xor    al,0x4b
  418fbf:	pop    eax
  418fc0:	pop    eax
  418fc1:	pop    eax
  418fc2:	fidiv  WORD PTR [esi-0x611fe3c1]
  418fc8:	push   edi
  418fc9:	cmp    ch,BYTE PTR [ebp-0x416c5d97]
  418fcf:	fnstsw WORD PTR ds:0x8c981c8
  418fd5:	addr16 or eax,0xbfb6a7c4
  418fdb:	sbb    edx,DWORD PTR [ecx-0x59b56813]
  418fe1:	jecxz  0x418fe9
  418fe3:	add    bl,BYTE PTR [edx+ecx*8-0x72dcdd3c]
  418fea:	jg     0x419038
  418fec:	xchg   esi,eax
  418fed:	leave  
  418fee:	fstp   TBYTE PTR [eax-0x4c]
  418ff1:	test   eax,0x7daa40e8
  418ff6:	(bad)  
  418ff7:	out    dx,eax
  418ff8:	gs jns 0x418feb
  418ffb:	mov    bh,BYTE PTR [eax-0x71]
  418ffe:	or     al,0x18
  419000:	and    eax,esi
  419002:	push   edi
  419003:	test   al,0x53
  419005:	cmp    edx,edi
  419007:	pop    ds
  419008:	dec    esp
  419009:	enter  0x1d7e,0xd5
  41900d:	mov    bh,0x88
  41900f:	mov    dh,BYTE PTR [edx+0xd]
  419012:	in     eax,dx
  419013:	shl    BYTE PTR [ebp+ebx*2+0x71f253a8],0xe2
  41901b:	mov    edx,0x3272db
  419020:	add    DWORD PTR ds:0x42a008,0x5e50
  41902a:	add    edi,edx
  41902c:	mov    DWORD PTR ds:0x42a000,0x7626
  419036:	cmp    DWORD PTR [eax],edi
  419038:	je     0x419045
  41903e:	mov    eax,DWORD PTR [eax]
  419040:	jmp    0x41b79b
  419045:	mov    eax,DWORD PTR [ebp+0x18]
  419048:	mov    DWORD PTR ds:0x42b004,0x29bc
  419052:	cmp    eax,esi
  419054:	jne    0x41906e
  41905a:	push   0xf89c85b5
  41905f:	mov    DWORD PTR ds:0x42a018,0x6618
  419069:	jmp    0x41b78a
  41906e:	mov    esi,DWORD PTR [ebp+0x18]
  419071:	mov    eax,0xf89c85b4
  419076:	mov    DWORD PTR ds:0x42a010,0x8ff
  419080:	cmp    esi,eax
  419082:	mov    DWORD PTR ds:0x42d010,0x7cdb
  41908c:	jne    0x41b77a
  419092:	mov    eax,DWORD PTR [ebp+0x10]
  419095:	xor    esi,esi
  419097:	add    esi,DWORD PTR ds:0x423ea4
  41909d:	mov    esi,DWORD PTR [esi]
  41909f:	and    DWORD PTR ds:0x42a010,esi
  4190a5:	xor    eax,ecx
  4190a7:	mov    DWORD PTR ds:0x42c01c,0x15
  4190b1:	cmp    DWORD PTR ds:0x42c01c,0x0
  4190b8:	je     0x419106
  4190be:	cmp    DWORD PTR ds:0x42c01c,0x7
  4190c5:	jne    0x4190d4
  4190cb:	push   DWORD PTR [ebp-0xc]
  4190ce:	call   DWORD PTR ds:0x425030
  4190d4:	cmp    DWORD PTR ds:0x42c01c,0x8
  4190db:	jne    0x4190ee
  4190e1:	mov    esi,DWORD PTR ds:0x42c01c
  4190e7:	dec    esi
  4190e8:	mov    DWORD PTR ds:0x42c01c,esi
  4190ee:	mov    esi,DWORD PTR ds:0x42c01c
  4190f4:	dec    esi
  4190f5:	mov    DWORD PTR ds:0x42c01c,esi
  4190fb:	jmp    0x4190b1
  419100:	neg    DWORD PTR ds:0x42b00c
  419106:	add    eax,edx
  419108:	and    DWORD PTR ds:0x42b004,0x0
  419112:	mov    esi,DWORD PTR ds:0x42b004
  419118:	inc    esi
  419119:	mov    DWORD PTR ds:0x42b004,esi
  41911f:	cmp    DWORD PTR ds:0x42b004,0x4
  419126:	jne    0x41913c
  41912c:	push   0x6d2e
  419131:	push   0x438c
  419136:	call   DWORD PTR ds:0x425034
  41913c:	cmp    DWORD PTR ds:0x42b004,0x3
  419143:	jne    0x419156
  419149:	mov    esi,DWORD PTR ds:0x42b004
  41914f:	inc    esi
  419150:	mov    DWORD PTR ds:0x42b004,esi
  419156:	cmp    DWORD PTR ds:0x42b004,0x10
  41915d:	jb     0x419112
  419163:	mov    DWORD PTR [ebp-0x18],eax
  419166:	and    DWORD PTR ds:0x42d014,0x0
  419170:	mov    eax,ds:0x42d014
  419175:	inc    eax
  419176:	mov    ds:0x42d014,eax
  41917b:	cmp    DWORD PTR ds:0x42d014,0x1a
  419182:	jne    0x41919d
  419188:	push   0x4245b8
  41918d:	push   0x42457e
  419192:	push   0x87a6
  419197:	call   DWORD PTR ds:0x42503c
  41919d:	cmp    DWORD PTR ds:0x42d014,0x15
  4191a4:	jb     0x419170
  4191aa:	inc    esi
  4191ab:	mov    eax,DWORD PTR [ebp+0xc]
  4191ae:	mov    DWORD PTR ds:0x42c000,0x10
  4191b8:	cmp    DWORD PTR ds:0x42c000,0x0
  4191bf:	je     0x419213
  4191c5:	cmp    DWORD PTR ds:0x42c000,0x5
  4191cc:	jne    0x4191e5
  4191d2:	push   DWORD PTR [ebp-0x14]
  4191d5:	push   0x594c
  4191da:	push   0x7c33
  4191df:	call   DWORD PTR ds:0x425040
  4191e5:	cmp    DWORD PTR ds:0x42c000,0x6
  4191ec:	jne    0x4191ff
  4191f2:	mov    esi,DWORD PTR ds:0x42c000
  4191f8:	dec    esi
  4191f9:	mov    DWORD PTR ds:0x42c000,esi
  4191ff:	xor    esi,esi
  419201:	add    esi,DWORD PTR ds:0x42c000
  419207:	dec    esi
  419208:	mov    DWORD PTR ds:0x42c000,esi
  41920e:	jmp    0x4191b8
  419213:	mov    esi,DWORD PTR [ebp-0x8]
  419216:	and    DWORD PTR ds:0x429020,0x232c
  419220:	xor    eax,ecx
  419222:	inc    DWORD PTR ds:0x429028
  419228:	add    eax,edx
  41922a:	and    DWORD PTR ds:0x42a008,0x32e2
  419234:	imul   eax,DWORD PTR [esi]
  419237:	mov    esi,DWORD PTR [ebp+0x8]
  41923a:	xor    esi,ecx
  41923c:	add    esi,edx
  41923e:	cmp    esi,eax
  419240:	mov    eax,DWORD PTR [ebp-0x4]
  419243:	push   ebx
  419244:	je     0x419263
  41924a:	mov    esi,DWORD PTR [ebp-0x18]
  41924d:	add    DWORD PTR [eax],esi
  41924f:	mov    eax,DWORD PTR [ebp-0x4]
  419252:	mov    esi,DWORD PTR [ebp+0xc]
  419255:	xor    esi,ecx
  419257:	add    esi,edx
  419259:	imul   esi,DWORD PTR [eax]
  41925c:	mov    DWORD PTR [eax],esi
  41925e:	jmp    0x419268
  419263:	mov    esi,DWORD PTR [ebp+0x14]
  419266:	xor    DWORD PTR [eax],esi
  419268:	mov    eax,DWORD PTR [ebp-0x4]
  41926b:	mov    edi,DWORD PTR [ebp+0x10]
  41926e:	xor    edi,ecx
  419270:	mov    esi,0xffcd8d25
  419275:	mov    ebx,esi
  419277:	sub    ebx,edi
  419279:	add    DWORD PTR [eax],ebx
  41927b:	mov    eax,DWORD PTR [ebp-0x4]
  41927e:	mov    edi,DWORD PTR [ebp-0x8]
  419281:	add    edi,DWORD PTR [eax]
  419283:	mov    DWORD PTR [ebp-0x8],edi
  419286:	mov    eax,DWORD PTR [ebp+0xc]
  419289:	mov    edi,DWORD PTR [ebp+0xc]
  41928c:	xor    edi,ecx
  41928e:	xor    eax,ecx
  419290:	lea    eax,[eax+edi*1+0x64e5b6]
  419297:	mov    edi,DWORD PTR [ebp+0xc]
  41929a:	xor    edi,ecx
  41929c:	add    edi,edx
  41929e:	imul   eax,edi
  4192a1:	mov    edi,DWORD PTR [ebp+0xc]
  4192a4:	xor    edi,ecx
  4192a6:	sub    edi,eax
  4192a8:	mov    eax,DWORD PTR [ebp-0x4]
  4192ab:	add    edi,edx
  4192ad:	cmp    DWORD PTR [eax],edi
  4192af:	mov    eax,DWORD PTR [ebp-0x4]
  4192b2:	mov    edi,DWORD PTR [ebp+0x10]
  4192b5:	jg     0x4192c8
  4192bb:	xor    edi,ecx
  4192bd:	mov    ebx,esi
  4192bf:	sub    ebx,edi
  4192c1:	add    DWORD PTR [eax],ebx
  4192c3:	jmp    0x4192ce
  4192c8:	xor    edi,ecx
  4192ca:	add    edi,edx
  4192cc:	add    DWORD PTR [eax],edi
  4192ce:	mov    eax,DWORD PTR [ebp-0x8]
  4192d1:	mov    edi,DWORD PTR [ebp-0x10]
  4192d4:	mov    eax,DWORD PTR [eax]
  4192d6:	xor    edi,ecx
  4192d8:	add    edi,0x3272da
  4192de:	not    edi
  4192e0:	and    eax,edi
  4192e2:	movsx  di,BYTE PTR [eax+0x1]
  4192e7:	mov    ebx,0x3b4b
  4192ec:	sub    di,bx
  4192ef:	mov    ebx,0x8a85
  4192f4:	xor    di,bx
  4192f7:	mov    ebx,0x4f8a
  4192fc:	cmp    di,bx
  4192ff:	jne    0x419327
  419305:	movsx  di,BYTE PTR [eax]
  419309:	mov    ebx,0x3b4b
  41930e:	sub    di,bx
  419311:	mov    ebx,0x8a85
  419316:	xor    di,bx
  419319:	mov    ebx,0x4f87
  41931e:	cmp    di,bx
  419321:	je     0x419337
  419327:	mov    edi,DWORD PTR [ebp-0x10]
  41932a:	xor    edi,ecx
  41932c:	mov    ebx,esi
  41932e:	sub    ebx,edi
  419330:	add    eax,ebx
  419332:	jmp    0x4192e2
  419337:	mov    esi,DWORD PTR [ebp-0x14]
  41933a:	mov    esi,DWORD PTR [esi]
  41933c:	mov    edi,DWORD PTR [eax+0x3c]
  41933f:	lea    esi,[edi+esi*8+0x78]
  419343:	mov    esi,DWORD PTR [esi+eax*1]
  419346:	mov    DWORD PTR [ebp-0x8],esi
  419349:	mov    esi,DWORD PTR [ebp+0x8]
  41934c:	xor    esi,ecx
  41934e:	add    esi,edx
  419350:	mov    DWORD PTR [ebp-0x14],esi
  419353:	mov    esi,DWORD PTR [ebp+0x8]
  419356:	mov    edi,DWORD PTR [ebp-0x8]
  419359:	xor    esi,ecx
  41935b:	add    esi,edx
  41935d:	pop    ebx
  41935e:	cmp    edi,esi
  419360:	jne    0x41937e
  419366:	mov    eax,DWORD PTR [ebp+0xc]
  419369:	xor    eax,ecx
  41936b:	mov    ecx,DWORD PTR [ebp-0x8]
  41936e:	add    eax,edx
  419370:	imul   eax,ecx
  419373:	mov    DWORD PTR [ebp-0x8],eax
  419376:	push   DWORD PTR [ebp+0x18]
  419379:	jmp    0x41b78a
  41937e:	mov    ecx,DWORD PTR [ebp-0x8]
  419381:	add    ecx,eax
  419383:	jmp    0x41b73b
  419388:	dec    ebx
  419389:	cmp    al,0x60
  41938b:	or     DWORD PTR [edi],0x426c6b9d
  419391:	push   cs
  419392:	mov    ch,BYTE PTR [ebp+ebp*4-0xe]
  419396:	jge    0x419402
  419398:	fild   WORD PTR [ecx]
  41939a:	popa   
  41939b:	(bad)  
  41939c:	(bad)  
  41939d:	pop    edi
  41939e:	bound  esp,QWORD PTR [edx-0x47]
  4193a1:	mov    esp,0x4d3b38f0
  4193a6:	jnp    0x419399
  4193a8:	push   0x325330bc
  4193ad:	push   edi
  4193ae:	fistp  DWORD PTR [edi-0x64b8bbc9]
  4193b4:	out    dx,eax
  4193b5:	pop    ss
  4193b6:	stos   BYTE PTR es:[edi],al
  4193b7:	xchg   ebx,eax
  4193b8:	pusha  
  4193b9:	in     eax,dx
  4193ba:	mov    es,WORD PTR [edx+0x56bb359]
  4193c0:	mov    ebp,0x39ecea63
  4193c5:	neg    BYTE PTR [ecx]
  4193c7:	in     eax,dx
  4193c8:	cmp    ecx,DWORD PTR [edi+0x6bb011ad]
  4193ce:	test   ebp,ebp
  4193d0:	int    0x13
  4193d2:	icebp  
  4193d3:	je     0x419454
  4193d5:	sar    DWORD PTR [edi-0xadf5057],0x8c
  4193dc:	mov    cl,0x7c
  4193de:	stos   BYTE PTR es:[edi],al
  4193df:	test   DWORD PTR [edx],eax
  4193e1:	adc    cl,BYTE PTR [ebp-0x65]
  4193e4:	pop    ecx
  4193e5:	mov    BYTE PTR [ebx+0x2d],al
  4193e8:	ins    DWORD PTR es:[edi],dx
  4193e9:	mov    edx,0xad973be8
  4193ee:	(bad)  [esi-0x17]
  4193f1:	xor    DWORD PTR [edx-0x66],ebp
  4193f4:	outs   dx,BYTE PTR ds:[esi]
  4193f5:	iret   
  4193f6:	mov    edx,0x381b08ed
  4193fb:	call   0x2681:0x7094376c
  419402:	outs   dx,BYTE PTR ds:[esi]
  419403:	inc    edi
  419404:	std    
  419405:	mov    ss,WORD PTR [ecx+0x523959d3]
  41940b:	inc    edi
  41940c:	add    eax,0xfe605633
  419411:	test   eax,0xd8c6e15f
  419416:	or     ch,BYTE PTR [edi+0x7d12cbd]
  41941c:	or     BYTE PTR [edi+0x41755ede],dh
  419422:	inc    esp
  419423:	test   eax,0xd771463a
  419428:	jmp    0x419403
  41942a:	in     al,0x95
  41942c:	jmp    0x62a09b14
  419431:	outs   dx,BYTE PTR cs:[esi]
  419433:	addr16 call 0xcfde:0x3b3c94f3
  41943b:	clc    
  41943c:	mov    dl,bh
  41943e:	sbb    edi,esp
  419440:	xchg   edi,eax
  419441:	adc    al,0xe4
  419443:	enter  0x9cff,0x38
  419447:	and    al,0xdb
  419449:	test   al,0x3f
  41944b:	sbb    eax,0x33da081
  419450:	dec    edi
  419451:	dec    ebp
  419452:	jl     0x419413
  419454:	xor    al,0x5e
  419456:	fist   DWORD PTR [ebx]
  419458:	pop    ds
  419459:	stc    
  41945a:	mov    ebx,0xc5a35130
  41945f:	jno    0x4193f2
  419461:	cmp    eax,0x56480885
  419466:	lods   al,BYTE PTR ds:[esi]
  419467:	fsubr  st(0),st
  419469:	mov    ecx,0x3c9a13b4
  41946e:	or     eax,0xb6cc09ae
  419473:	mov    ebp,0x62a67a37
  419478:	push   esp
  419479:	push   ebx
  41947a:	mov    ebx,0xd43ab767
  41947f:	sub    DWORD PTR [esi-0x363f633c],edi
  419485:	sbb    ebp,DWORD PTR [edx-0x151f5780]
  41948b:	xor    ebx,DWORD PTR [ebp+0x55]
  41948e:	loope  0x419448
  419490:	add    DWORD PTR [eax+0xe],ebx
  419493:	mov    cs,WORD PTR [edi+0x1d]
  419496:	aad    0x20
  419498:	loope  0x41948b
  41949a:	sub    al,0x94
  41949c:	out    0x84,eax
  41949e:	cmp    al,0x79
  4194a0:	and    eax,0xec3533b1
  4194a5:	sbb    esi,DWORD PTR [ecx]
  4194a7:	aaa    
  4194a8:	ret    
  4194a9:	int    0xd4
  4194ab:	and    BYTE PTR ds:[eax+0x7d059608],bh
  4194b2:	imul   DWORD PTR [edx+ecx*2]
  4194b5:	lods   eax,DWORD PTR ds:[esi]
  4194b6:	cmp    bh,BYTE PTR [edi+ecx*2-0x2204ad62]
  4194bd:	data16 jg 0x4194a7
  4194c0:	lods   al,BYTE PTR ds:[esi]
  4194c1:	outs   dx,DWORD PTR ds:[esi]
  4194c2:	pop    es
  4194c3:	pop    ebp
  4194c4:	imul   ebp,ebx,0x5b7b9619
  4194ca:	gs mov esi,0x49441713
  4194d0:	out    0xe,eax
  4194d2:	aas    
  4194d3:	in     al,dx
  4194d4:	shl    DWORD PTR [ebp+0x2fcc76ef],0xba
  4194db:	jnp    0x4194b9
  4194dd:	add    eax,0x3cc8d800
  4194e2:	or     ebx,DWORD PTR [esi]
  4194e4:	stc    
  4194e5:	cmp    DWORD PTR [ecx+0x799bbdf8],ebp
  4194eb:	pushf  
  4194ec:	retf   
  4194ed:	aad    0x3a
  4194ef:	pop    ebx
  4194f0:	lods   eax,DWORD PTR ds:[esi]
  4194f1:	push   0x9255aa
  4194f6:	test   DWORD PTR [esp+edx*8-0x3f0d6b4],ebp
  4194fd:	adc    eax,0x801882e
  419502:	cmp    cl,BYTE PTR [ecx+0x1d]
  419505:	sbb    eax,0x7914c15
  41950a:	les    ebx,FWORD PTR [ecx-0x4]
  41950d:	inc    ebp
  41950e:	push   edi
  41950f:	out    dx,eax
  419510:	in     eax,dx
  419511:	call   0xad8a68c2
  419516:	mov    ebx,DWORD PTR [esi-0x64]
  419519:	cmp    DWORD PTR [edx+0x4d],0x3f7ca759
  419520:	in     eax,dx
  419521:	enter  0x2902,0x9b
  419525:	dec    esp
  419526:	pusha  
  419527:	push   esi
  419528:	push   edi
  419529:	outs   dx,BYTE PTR ds:[esi]
  41952a:	and    al,0xec
  41952c:	adc    bh,BYTE PTR [eax-0x22]
  41952f:	adc    al,0x1e
  419531:	clc    
  419532:	mov    bh,0x1e
  419534:	mov    ah,0xed
  419536:	xchg   esp,eax
  419537:	enter  0xeb19,0xa3
  41953b:	leave  
  41953c:	pop    ds
  41953d:	rol    DWORD PTR [esi],cl
  41953f:	inc    ebp
  419540:	aad    0x29
  419542:	ins    DWORD PTR es:[edi],dx
  419543:	xchg   ebx,eax
  419544:	mov    al,0xb
  419546:	jg     0x419588
  419548:	dec    eax
  419549:	addr16 mov edi,0xd5cfd7b6
  41954f:	xor    ch,BYTE PTR [ebx-0x63]
  419552:	pop    eax
  419553:	jge    0x419504
  419555:	fisttp DWORD PTR [eax+0x45]
  419558:	shr    DWORD PTR [edi+0x48],0xf0
  41955c:	mov    ds:0x5c5c0b73,al
  419561:	inc    edx
  419562:	mov    esi,0x462ec0ed
  419567:	jo     0x4195ab
  419569:	mov    es,ecx
  41956b:	pop    ebp
  41956c:	ja     0x41958e
  41956e:	aas    
  41956f:	add    bh,BYTE PTR ds:0x5fcc09c2
  419575:	aas    
  419576:	imul   DWORD PTR [eax-0x61]
  419579:	xor    BYTE PTR [ebp-0x5758edb3],al
  41957f:	inc    ecx
  419580:	(bad)  
  419582:	bound  edx,QWORD PTR [ecx]
  419584:	mov    ecx,DWORD PTR [eax+0x6]
  419587:	inc    edx
  419588:	pop    esi
  419589:	jmp    0xca0bee7d
  41958e:	fs iret 
  419590:	fmul   QWORD PTR [edi-0x40]
  419593:	dec    esi
  419594:	mov    DWORD PTR [edi-0x2c9bc9c3],0x2b9990e6
  41959e:	fisttp DWORD PTR [eax-0x1c]
  4195a1:	int    0x57
  4195a3:	ins    BYTE PTR es:[edi],dx
  4195a4:	mov    cl,0xcb
  4195a6:	cwde   
  4195a7:	out    0x4,al
  4195a9:	daa    
  4195aa:	call   0xe10e9d60
  4195af:	mov    bh,0x7c
  4195b1:	shl    dh,0xf4
  4195b4:	stc    
  4195b5:	adc    bl,cl
  4195b7:	dec    sp
  4195b9:	lahf   
  4195ba:	mov    edx,ebp
  4195bc:	in     eax,0x49
  4195be:	mov    esi,0xcf7cffda
  4195c3:	sbb    BYTE PTR [ecx],al
  4195c5:	jp     0x4195af
  4195c7:	sub    esp,edi
  4195c9:	imul   ecx,eax,0x409d76f0
  4195cf:	aam    0x2f
  4195d1:	mov    dh,0x50
  4195d3:	jecxz  0x419590
  4195d5:	jne    0x4195d5
  4195d7:	fsub   st,st(4)
  4195d9:	inc    edx
  4195da:	lods   al,BYTE PTR ds:[esi]
  4195db:	jge    0x4195e8
  4195dd:	fistp  QWORD PTR [ecx]
  4195df:	cmp    eax,0xc36e8273
  4195e4:	jo     0x4195fb
  4195e6:	xor    al,0xb7
  4195e8:	or     edi,DWORD PTR [eax-0x1e]
  4195eb:	in     eax,dx
  4195ec:	mov    esp,0x3eb4f7c7
  4195f1:	dec    DWORD PTR [eax-0x61d7f8bd]
  4195f7:	test   DWORD PTR [ecx-0x73de2048],ebx
  4195fd:	shr    DWORD PTR [eax+0x2ac54b73],0xf
  419604:	add    dh,BYTE PTR [ebx+0x77dd4fef]
  41960a:	inc    edi
  41960b:	dec    esi
  41960c:	test   edi,ebp
  41960e:	pop    esi
  41960f:	cmp    eax,0x3f368577
  419614:	push   edi
  419615:	cld    
  419616:	jo     0x41961e
  419618:	jno    0x419621
  41961a:	pop    ecx
  41961b:	or     bl,dl
  41961d:	adc    DWORD PTR [edx-0x2344cd2c],ecx
  419623:	adc    ebp,DWORD PTR [esi+ecx*2]
  419626:	push   ds
  419627:	out    dx,al
  419628:	adc    al,BYTE PTR [edi+ebp*4+0x5b]
  41962c:	adc    bh,bl
  41962e:	(bad)  
  41962f:	push   edx
  419630:	lock and eax,0xfbd93e5f
  419636:	xchg   ebp,eax
  419637:	dec    ecx
  419638:	mov    ebp,0x5a183d72
  41963d:	dec    esp
  41963e:	stc    
  41963f:	push   ebx
  419640:	push   ecx
  419641:	mov    bl,0x76
  419643:	sbb    eax,0xe6cb545a
  419648:	(bad)
  41964c:	and    al,0x53
  41964e:	mov    cl,0x5d
  419650:	shl    al,cl
  419652:	inc    esi
  419653:	dec    eax
  419654:	jle    0x41960c
  419656:	arpl   si,ax
  419658:	sbb    BYTE PTR [edi],dh
  41965a:	ficomp DWORD PTR ds:[edi+0x1a]
  41965e:	jl     0x41965d
  419660:	(bad)  
  419662:	data16 adc al,0x52
  419665:	popa   
  419666:	sbb    edi,DWORD PTR [eax+edi*4+0x13]
  41966a:	aas    
  41966b:	adc    al,0xf4
  41966d:	jns    0x419631
  41966f:	outs   dx,BYTE PTR ds:[esi]
  419670:	and    eax,0xe8a15885
  419675:	js     0x4196a5
  419677:	cdq    
  419678:	cmp    al,0x84
  41967a:	outs   dx,BYTE PTR ds:[esi]
  41967b:	mov    BYTE PTR [ebp+0x6a11f40],bl
  419681:	xchg   esp,eax
  419682:	je     0x4196da
  419684:	sub    DWORD PTR [eax-0x3c],eax
  419687:	mov    ch,0xc3
  419689:	sub    bl,BYTE PTR [eax+0xf71f3eb]
  41968f:	jge    0x41970f
  419691:	jns    0x4196f5
  419693:	sbb    cl,0x76
  419696:	pop    ebp
  419697:	stos   BYTE PTR es:[edi],al
  419698:	das    
  419699:	(bad)  
  41969a:	outs   dx,DWORD PTR ds:[esi]
  41969b:	mov    esp,0x7b08f1e9
  4196a0:	mov    esi,0xfb1ece3c
  4196a5:	(bad)  
  4196a6:	sbb    esi,edx
  4196a8:	or     ebx,DWORD PTR [eax]
  4196aa:	mov    dh,0x37
  4196ac:	jnp    0x4196cd
  4196ae:	inc    ebx
  4196af:	call   0x52923442
  4196b4:	or     ebx,DWORD PTR [edi]
  4196b6:	push   ss
  4196b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196b8:	jg     0x41964b
  4196ba:	xchg   edi,edx
  4196bc:	jbe    0x419645
  4196be:	(bad)  
  4196bf:	pop    ss
  4196c0:	in     al,dx
  4196c1:	test   al,0x4e
  4196c3:	stos   BYTE PTR es:[edi],al
  4196c4:	mov    ebx,0x57d81759
  4196c9:	lock outs dx,DWORD PTR ds:[esi]
  4196cb:	in     al,dx
  4196cc:	sbb    DWORD PTR [ebx+ebx*1+0x44],0x79e1b132
  4196d4:	pusha  
  4196d5:	dec    esp
  4196d6:	push   es
  4196d7:	or     bh,BYTE PTR [edi+0x65babc47]
  4196dd:	std    
  4196de:	rcl    bh,1
  4196e0:	xor    DWORD PTR [ebx],esi
  4196e2:	es dec edi
  4196e4:	out    0x2c,al
  4196e6:	test   al,0x20
  4196e8:	or     ecx,DWORD PTR [ebx-0x4d5ebd98]
  4196ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196ef:	ss cld 
  4196f1:	dec    ebx
  4196f2:	test   BYTE PTR [ebp+0x72],dh
  4196f5:	dec    ebp
  4196f6:	mov    eax,ds:0x8e07c4fe
  4196fb:	jmp    0x1758:0xfe805d77
  419702:	add    BYTE PTR [ebx+0x6a],dl
  419705:	or     al,al
  419707:	sbb    eax,DWORD PTR [ebx-0x32]
  41970a:	xor    BYTE PTR [ebx+0x20],ah
  41970d:	and    ecx,DWORD PTR gs:[edx+0x379fce50]
  419714:	mov    ds:0x89304ad1,al
  419719:	fisub  DWORD PTR [edi-0x20]
  41971c:	sbb    ah,bh
  41971e:	stos   DWORD PTR es:[edi],eax
  41971f:	es pop ebx
  419721:	dec    ecx
  419722:	xchg   edi,eax
  419723:	pusha  
  419724:	or     bh,ah
  419726:	icebp  
  419727:	inc    edi
  419728:	push   cs
  419729:	pop    ss
  41972a:	lahf   
  41972b:	cs data16 stos BYTE PTR es:[edi],al
  41972e:	xchg   ebp,eax
  41972f:	icebp  
  419730:	mov    ebx,0xe5740803
  419735:	jae    0x41977f
  419737:	xchg   esp,eax
  419738:	das    
  419739:	mov    cl,0x93
  41973b:	ret    0x5e4d
  41973e:	(bad)  
  41973f:	push   ss
  419740:	sbb    eax,ecx
  419742:	jnp    0x419792
  419744:	pop    esi
  419745:	xor    BYTE PTR [eax-0x49],al
  419748:	add    BYTE PTR [edi+0x6f49fd38],ch
  41974e:	out    dx,al
  41974f:	adc    ecx,eax
  419751:	inc    ebx
  419752:	jne    0x419720
  419754:	and    eax,0xbef366a4
  419759:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41975a:	retf   
  41975b:	or     al,0x5
  41975d:	xchg   esi,eax
  41975e:	dec    ebp
  41975f:	jo     0x4197d3
  419761:	add    al,0x71
  419763:	and    esp,eax
  419765:	fnstsw WORD PTR [eax+eax*8+0x54f79990]
  41976c:	hlt    
  41976d:	retf   
  41976e:	lahf   
  41976f:	push   eax
  419770:	iret   
  419771:	(bad)  
  419772:	(bad)  [edi-0x4c]
  419775:	inc    eax
  419776:	sti    
  419777:	mov    ds:0xd58c8867,al
  41977c:	mov    WORD PTR [edx+0x232e6324],es
  419782:	push   0xffffffe3
  419784:	repnz mov cl,BYTE PTR [eax-0x6a]
  419788:	sub    BYTE PTR [ebx+0x14e76e7b],0x76
  41978f:	das    
  419790:	mov    WORD PTR [edx-0x63],ss
  419793:	into   
  419794:	ss (bad) 
  419796:	addr16 inc edx
  419798:	xor    DWORD PTR [edi+0x5c918ca7],esi
  41979e:	lea    esi,[ebx]
  4197a0:	cwde   
  4197a1:	adc    BYTE PTR [ebx],dl
  4197a3:	add    bl,BYTE PTR [bx+si-0x7833]
  4197a8:	sbb    edx,esp
  4197aa:	ret    0x83a7
  4197ad:	loope  0x4197d0
  4197af:	push   0x96025806
  4197b4:	ret    0x9fae
  4197b7:	in     al,dx
  4197b8:	mov    ah,0xb6
  4197ba:	mov    dl,0x70
  4197bc:	ins    BYTE PTR es:[edi],dx
  4197bd:	hlt    
  4197be:	push   ecx
  4197bf:	xor    al,0xb3
  4197c1:	dec    edx
  4197c2:	lods   eax,DWORD PTR ds:[esi]
  4197c3:	(bad)  
  4197c4:	leave  
  4197c5:	clc    
  4197c6:	test   al,0x3d
  4197c8:	arpl   WORD PTR ds:0xa4c90e93,di
  4197ce:	imul   ebp,DWORD PTR [ebp-0x7a],0xffffff96
  4197d2:	and    eax,DWORD PTR [ecx+0xa]
  4197d5:	add    bh,BYTE PTR [ebx+eax*4+0x7666ce3f]
  4197dc:	mov    cl,0x9b
  4197de:	add    DWORD PTR [ebx],ecx
  4197e0:	or     ebp,DWORD PTR [edx]
  4197e2:	(bad)  
  4197e3:	jbe    0x4197ba
  4197e5:	push   0xffffffc7
  4197e7:	enter  0x88e9,0x2d
  4197eb:	ss fwait
  4197ed:	cwde   
  4197ee:	test   DWORD PTR [eax],eax
  4197f0:	dec    ecx
  4197f1:	fdivr  QWORD PTR [eax+ecx*4]
  4197f4:	imul   edi,DWORD PTR ds:0x549fb264,0x61
  4197fb:	outs   dx,BYTE PTR ds:[esi]
  4197fc:	mov    ebp,0x16b38079
  419801:	pop    ebx
  419802:	cmc    
  419803:	adc    ebx,DWORD PTR [esi]
  419805:	int3   
  419806:	into   
  419807:	js     0x41983c
  419809:	add    BYTE PTR [ebp+0x5c6f4068],ah
  41980f:	loop   0x4197c6
  419811:	adc    ch,BYTE PTR ds:0x7badf18b
  419817:	jg     0x419821
  419819:	in     eax,0x90
  41981b:	add    DWORD PTR [edx+0x6f],esp
  41981e:	mov    bl,0x66
  419820:	mov    WORD PTR [ecx-0x4866aeba],ss
  419826:	push   esp
  419827:	fucom  st(3)
  419829:	dec    ecx
  41982a:	in     al,0x7b
  41982c:	int3   
  41982d:	ds fwait
  41982f:	xor    BYTE PTR [edx],al
  419831:	and    DWORD PTR [edi-0x78eaba4f],0xffffffe7
  419838:	fsub   st,st(0)
  41983a:	in     eax,dx
  41983b:	adc    dh,0xb5
  41983e:	cld    
  41983f:	push   0xffffff9c
  419841:	(bad)  
  419842:	jns    0x419867
  419844:	mov    ch,0x20
  419846:	mov    ebx,0x7a17cb53
  41984b:	cmc    
  41984c:	test   edi,0xb4401530
  419852:	mov    eax,0x2294897
  419857:	lock push es
  419859:	lds    esi,FWORD PTR [ebp+0x25e34ec2]
  41985f:	dec    ebx
  419860:	stc    
  419861:	push   ss
  419862:	push   0xffffffbf
  419864:	in     eax,dx
  419865:	mov    bl,0x9c
  419867:	xchg   edx,eax
  419868:	les    ebx,FWORD PTR [ebx+0x63]
  41986b:	test   BYTE PTR [eax+esi*4-0x76],bh
  41986f:	aam    0xe5
  419871:	mov    cl,0x95
  419873:	lea    ebp,[ecx-0x33]
  419876:	jg     0x4198a1
  419878:	aas    
  419879:	and    bl,ah
  41987b:	jle    0x41981e
  41987d:	and    ch,BYTE PTR [ebp-0x2b7cfd1a]
  419883:	arpl   WORD PTR [ecx+0x48ddc5c8],dx
  419889:	dec    edx
  41988a:	test   al,0xd4
  41988c:	sbb    BYTE PTR [esp+ecx*2],bl
  41988f:	adc    eax,0x9f5053fb
  419894:	clc    
  419895:	cmp    esp,DWORD PTR [ebx+0x751ca3ac]
  41989b:	(bad)  
  41989c:	pop    ebx
  41989d:	(bad)  
  41989f:	out    0xed,eax
  4198a1:	idiv   BYTE PTR [edx+0x2d0531c1]
  4198a7:	dec    esi
  4198a8:	test   ebp,esp
  4198aa:	mov    eax,ds:0x393d77dc
  4198af:	bound  dx,DWORD PTR [esi+0x27]
  4198b3:	and    DWORD PTR [ebx+0x17],ecx
  4198b6:	das    
  4198b7:	inc    esp
  4198b8:	inc    edx
  4198b9:	loop   0x4198c8
  4198bb:	cmp    ecx,DWORD PTR [eax]
  4198bd:	(bad)  
  4198be:	sahf   
  4198bf:	scas   al,BYTE PTR es:[edi]
  4198c0:	add    ch,cl
  4198c2:	adc    BYTE PTR [edx+0x4],cl
  4198c5:	cmp    al,0x96
  4198c7:	xlat   BYTE PTR ds:[ebx]
  4198c8:	mov    ebp,0xa7fec96f
  4198cd:	or     al,0x8b
  4198cf:	adc    BYTE PTR [ebx+ebp*8],ah
  4198d2:	and    cl,bl
  4198d4:	sti    
  4198d5:	add    BYTE PTR [ebx+ecx*2+0x520c72cd],bh
  4198dc:	sti    
  4198dd:	add    bh,BYTE PTR [ebx-0x6f]
  4198e0:	push   edx
  4198e1:	(bad)  
  4198e2:	comiss xmm3,DWORD PTR [esi+0x31e230c0]
  4198e9:	rcr    DWORD PTR [ecx-0x48],cl
  4198ec:	imul   ecx,DWORD PTR [esi],0x9b87e023
  4198f2:	inc    ebx
  4198f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198f4:	xchg   bl,bl
  4198f6:	int    0xc7
  4198f8:	stos   BYTE PTR es:[edi],al
  4198f9:	mov    edx,edi
  4198fb:	add    bh,BYTE PTR [eax*2+0x623691ff]
  419902:	pop    es
  419903:	pop    eax
  419904:	enter  0xdd54,0x63
  419908:	xor    BYTE PTR [ebx],dh
  41990a:	inc    esi
  41990b:	(bad)  
  41990c:	ficom  DWORD PTR [ebp+0x72]
  41990f:	scas   eax,DWORD PTR es:[edi]
  419910:	rcl    DWORD PTR [edi+0x6e398b5a],0x7
  419917:	xor    eax,0x561d92cd
  41991c:	pop    edx
  41991d:	popa   
  41991e:	sbb    eax,0x1b858e29
  419923:	ja     0x4198db
  419925:	add    al,0x68
  419927:	cmp    cl,BYTE PTR [ecx-0x656d7b3c]
  41992d:	loop   0x4198e7
  41992f:	pop    edx
  419930:	push   ds
  419931:	adc    al,dh
  419933:	inc    edx
  419934:	int    0x81
  419936:	rcl    BYTE PTR [ebp-0x3f],0xe
  41993a:	add    ebx,DWORD PTR [edx]
  41993c:	ficomp WORD PTR [eax+0xb]
  41993f:	dec    esp
  419940:	and    ebx,0x49
  419943:	sti    
  419944:	(bad)  
  419945:	js     0x419977
  419947:	stc    
  419948:	sti    
  419949:	ds xor al,0x3f
  41994c:	addr16 cs daa 
  41994f:	xor    DWORD PTR [esi-0x52eae581],eax
  419955:	sar    BYTE PTR [ecx],cl
  419957:	bound  esp,QWORD PTR [esi]
  419959:	punpckhwd mm6,QWORD PTR [esi+ebx*2+0x5ffc7a49]
  419961:	daa    
  419962:	sahf   
  419963:	and    BYTE PTR [edi-0x4e],dl
  419966:	std    
  419967:	cmp    al,0x98
  419969:	xor    eax,0xc82a2af2
  41996e:	pop    eax
  41996f:	push   ebx
  419970:	arpl   dx,si
  419972:	outs   dx,BYTE PTR ds:[esi]
  419973:	sub    al,0x9
  419975:	mov    ds:0x5ce43cc1,eax
  41997a:	cmp    bl,BYTE PTR [esi]
  41997c:	dec    esp
  41997d:	jge    0x419926
  41997f:	cld    
  419980:	mov    fs,WORD PTR [eax+0x7b]
  419983:	lock adc bl,BYTE PTR [esi-0x1ecd7ed9]
  41998a:	inc    esi
  41998b:	sub    ebp,DWORD PTR [edi]
  41998d:	mov    dh,0xce
  41998f:	fs or  al,0x96
  419992:	jns    0x419926
  419994:	xchg   edx,eax
  419995:	and    al,0x4f
  419997:	mov    BYTE PTR [eax+ebp*2-0xc],dl
  41999b:	scas   al,BYTE PTR es:[edi]
  41999c:	out    dx,eax
  41999d:	(bad)  
  41999e:	mov    bh,0xb8
  4199a0:	xchg   edi,eax
  4199a1:	sbb    al,0x7a
  4199a3:	test   dh,ah
  4199a5:	adc    DWORD PTR [edx],0xfc8bd50a
  4199ab:	imul   BYTE PTR [edi-0x3e]
  4199ae:	pop    esp
  4199af:	inc    edi
  4199b0:	(bad)  
  4199b1:	xchg   ebp,eax
  4199b2:	loope  0x419972
  4199b4:	lods   eax,DWORD PTR ds:[esi]
  4199b5:	push   edx
  4199b6:	xor    eax,DWORD PTR [ebp-0x2e9f35e7]
  4199bc:	and    edi,ebp
  4199be:	(bad)  
  4199bf:	mov    ecx,0x3272b7ec
  4199c4:	inc    esp
  4199c5:	mov    eax,edx
  4199c7:	nop
  4199c8:	add    bl,bl
  4199ca:	mov    ch,0x99
  4199cc:	fiadd  WORD PTR [edx+edi*1+0x7183fd9]
  4199d3:	hlt    
  4199d4:	out    0x9a,al
  4199d6:	mov    al,ds:0x80f4ab2b
  4199db:	push   eax
  4199dc:	pop    ds
  4199dd:	ret    
  4199de:	push   cs
  4199df:	rol    BYTE PTR [esi+0xb4472d1],1
  4199e5:	and    eax,0x24ca887c
  4199ea:	icebp  
  4199eb:	(bad)  
  4199ed:	inc    edx
  4199ee:	ss or  ch,ah
  4199f1:	dec    esp
  4199f2:	lds    ebp,FWORD PTR [ebx+eiz*8-0x9b09fe3]
  4199f9:	aam    0xf5
  4199fb:	jp     0x419a2c
  4199fd:	sbb    al,0x11
  4199ff:	or     al,0xc8
  419a01:	shr    BYTE PTR [edi-0x364ac67a],cl
  419a07:	jb     0x419a28
  419a09:	add    dl,BYTE PTR [eax+0x50a8b89b]
  419a0f:	test   BYTE PTR [ecx-0x19],dh
  419a12:	jg     0x419a82
  419a14:	or     eax,0x4d4d66ce
  419a19:	cmp    dh,BYTE PTR [edi+0x78]
  419a1c:	mov    BYTE PTR [esi+0x273891f8],ch
  419a22:	xor    ebx,DWORD PTR [edx]
  419a24:	loope  0x419a96
  419a26:	push   ebp
  419a27:	jp     0x419a52
  419a29:	jns    0x419a8f
  419a2b:	or     eax,0x53f88024
  419a30:	dec    esp
  419a31:	cmp    cl,BYTE PTR [eax+edi*1+0x3e]
  419a35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a36:	dec    esp
  419a37:	fs lock pusha 
  419a3a:	in     eax,0x5b
  419a3c:	sub    dh,al
  419a3e:	out    dx,al
  419a3f:	inc    edi
  419a40:	mov    ecx,0x11c50b21
  419a45:	jmp    0xcf7d:0x72d0fc78
  419a4c:	cmp    ebp,DWORD PTR [ebp-0x6825bb72]
  419a52:	imul   esp,DWORD PTR [edi+0x1d6a964a],0x939d2d9b
  419a5c:	and    eax,0xc93dd6ba
  419a61:	or     BYTE PTR [esi-0x7a6f7b9e],dl
  419a67:	pop    es
  419a68:	out    0x50,al
  419a6a:	es dec edx
  419a6c:	stos   BYTE PTR es:[edi],al
  419a6d:	pop    esp
  419a6e:	test   al,0x34
  419a70:	ror    DWORD PTR [ebp+0x284fdf9b],1
  419a76:	fwait
  419a77:	or     BYTE PTR [ecx+0x6d],bh
  419a7a:	shr    BYTE PTR [ebx+0x2a8a9f37],1
  419a80:	jo     0x419ace
  419a82:	adc    DWORD PTR [eax-0x7208aae0],0xf70fc837
  419a8c:	lock mov bl,0xa0
  419a8f:	add    ebp,DWORD PTR [edx+0x7a4dc6fd]
  419a95:	cld    
  419a96:	xchg   esi,eax
  419a97:	pusha  
  419a98:	pop    es
  419a99:	mov    ebp,0x165bc92f
  419a9e:	jb     0x419aad
  419aa0:	xchg   ebx,eax
  419aa1:	push   edi
  419aa2:	adc    eax,0xe6140bb0
  419aa7:	and    al,0x94
  419aa9:	cwde   
  419aaa:	retf   0x4e70
  419aad:	adc    dl,ah
  419aaf:	out    dx,eax
  419ab0:	jns    0x419ae5
  419ab2:	sub    eax,ebp
  419ab4:	jl     0x419ae2
  419ab6:	addr16 cdq 
  419ab8:	jle    0x419a7a
  419aba:	cwde   
  419abb:	shl    ecx,0x8a
  419abe:	mov    dh,0x83
  419ac0:	loop   0x419aa2
  419ac2:	push   edi
  419ac3:	xchg   ebp,esi
  419ac5:	mov    bh,0xb7
  419ac7:	scas   eax,DWORD PTR es:[edi]
  419ac8:	pop    es
  419ac9:	and    BYTE PTR [esi+edx*8+0x62dbcc39],ah
  419ad0:	xlat   BYTE PTR ds:[ebx]
  419ad1:	adc    eax,0x3c8cfd4f
  419ad6:	stc    
  419ad7:	aas    
  419ad8:	cmp    eax,edx
  419ada:	(bad)
  419add:	repz cmp al,0x9e
  419ae0:	cdq    
  419ae1:	adc    BYTE PTR [esi],0x24
  419ae4:	fucom  st(6)
  419ae6:	push   eax
  419ae7:	or     BYTE PTR [edx-0x22],bh
  419aea:	fisubr WORD PTR [edx+ebp*4-0x11]
  419aee:	or     ecx,DWORD PTR [eax+0x18]
  419af1:	(bad)  
  419af2:	int    0x44
  419af4:	push   ds
  419af5:	(bad)  
  419af6:	stos   DWORD PTR es:[edi],eax
  419af7:	add    bh,BYTE PTR [eax+0x6e]
  419afa:	jb     0x419ae6
  419afc:	xchg   ebx,eax
  419afd:	mov    WORD PTR [eax-0x6e],gs
  419b00:	mov    ah,0xae
  419b02:	fwait
  419b03:	add    DWORD PTR [ebx-0x4dddda8c],0x5153152c
  419b0d:	add    BYTE PTR [ebx-0x4347cbbd],0x25
  419b14:	test   eax,0xca43d359
  419b19:	jge    0x419a9f
  419b1b:	(bad)  
  419b1c:	dec    edx
  419b1d:	retf   
  419b1e:	aam    0x25
  419b20:	cmp    DWORD PTR [ebx+0x6f],edx
  419b23:	adc    eax,0xa7321473
  419b28:	aad    0x76
  419b2a:	bound  ebp,QWORD PTR [esi+ebx*8+0x5c13464b]
  419b31:	sti    
  419b32:	push   0x8a15e0c
  419b37:	pop    ecx
  419b38:	pop    ebp
  419b39:	and    edx,DWORD PTR [esi-0x58]
  419b3c:	mov    ch,0xcb
  419b3e:	cmp    cl,cl
  419b40:	fcomip st,st(5)
  419b42:	xor    DWORD PTR [esp+ebp*2-0x30],ebp
  419b46:	mov    al,0xd5
  419b48:	push   ss
  419b49:	mov    ds:0x85b1e9cf,al
  419b4e:	add    BYTE PTR [eax-0x6e3babd3],bh
  419b54:	int    0xa4
  419b56:	mov    esp,0xc02697a1
  419b5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b5c:	in     eax,dx
  419b5d:	out    0x72,eax
  419b5f:	sbb    eax,0xfe2f56c0
  419b64:	push   ebx
  419b65:	and    DWORD PTR [esi-0x678e34f7],ebx
  419b6b:	add    dl,BYTE PTR [eax+eax*8]
  419b6e:	mov    ch,BYTE PTR [ecx-0x39]
  419b71:	mov    ecx,0xbb9d1e16
  419b76:	out    0xdc,eax
  419b78:	std    
  419b79:	push   ecx
  419b7a:	jecxz  0x419afd
  419b7c:	ror    ebp,cl
  419b7e:	push   es
  419b7f:	cdq    
  419b80:	add    eax,0xb3ce26e1
  419b85:	les    esp,FWORD PTR [edx-0x17]
  419b88:	into   
  419b89:	or     edi,esi
  419b8b:	aaa    
  419b8c:	push   0xffffffa3
  419b8e:	sub    BYTE PTR [edi+esi*4-0x2e],ah
  419b92:	fdivr  QWORD PTR [edx+0x75089c6f]
  419b98:	push   0x177e3311
  419b9d:	sub    BYTE PTR [esi+0x52f5eed8],dl
  419ba3:	out    dx,al
  419ba4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ba5:	add    al,0xdc
  419ba7:	repz cdq 
  419ba9:	xor    eax,0x50e65a96
  419bae:	ja     0x419b86
  419bb0:	sbb    ecx,DWORD PTR [edx]
  419bb2:	inc    eax
  419bb3:	unpcklps xmm0,xmm3
  419bb6:	call   0xbb4c98f4
  419bbb:	pop    es
  419bbc:	jp     0x419bbf
  419bbe:	mov    ebp,esi
  419bc0:	ja     0x419b93
  419bc2:	adc    eax,0xcd5cac5
  419bc7:	(bad)  
  419bc8:	jo     0x419bd9
  419bca:	cmc    
  419bcb:	cs das 
  419bcd:	sbb    eax,0xcdc363fe
  419bd2:	in     al,0xe7
  419bd4:	iret   
  419bd5:	test   DWORD PTR [esp+ecx*2+0xb],edx
  419bd9:	and    BYTE PTR [ebx],bh
  419bdb:	cmc    
  419bdc:	stc    
  419bdd:	jl     0x419bc1
  419bdf:	popa   
  419be0:	hlt    
  419be1:	(bad)  
  419be2:	je     0x419bad
  419be4:	test   DWORD PTR [edx+0x6e463beb],esi
  419bea:	int3   
  419beb:	dec    ecx
  419bec:	ret    0x64da
  419bef:	add    al,0xaf
  419bf1:	add    ch,BYTE PTR [ebx+0x8]
  419bf4:	popa   
  419bf5:	call   0x620a:0x7d4ca9cb
  419bfc:	in     al,dx
  419bfd:	iret   
  419bfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bff:	imul   eax,DWORD PTR [ebx],0xffffffcb
  419c02:	int3   
  419c03:	imul   ecx,DWORD PTR [edi],0x1c
  419c06:	cmp    ah,BYTE PTR ds:0x67d09c12
  419c0c:	out    dx,al
  419c0d:	push   esi
  419c0e:	sahf   
  419c0f:	test   al,0x51
  419c11:	pop    ebx
  419c12:	mov    DWORD PTR [edi-0x3e],esi
  419c15:	mov    BYTE PTR [esi+0x2bab1be],ch
  419c1b:	push   cs
  419c1c:	and    eax,0xe4a0ff58
  419c21:	xor    eax,0xe82999f4
  419c26:	aaa    
  419c27:	mov    ds:0x435294a6,eax
  419c2c:	sti    
  419c2d:	fisubr DWORD PTR ds:[esi]
  419c30:	js     0x419bed
  419c32:	div    DWORD PTR [ecx-0x104679a4]
  419c38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c39:	aam    0x2b
  419c3b:	loopne 0x419bc1
  419c3d:	and    al,0x2f
  419c40:	ror    DWORD PTR [ebp-0x343e6b4],0xc9
  419c47:	mov    al,ds:0x3aad3887
  419c4c:	adc    DWORD PTR [esp+eiz*2+0x2f],eax
  419c50:	loopne 0x419be3
  419c52:	push   ds
  419c53:	lds    esp,FWORD PTR [esi+eax*2+0x7c]
  419c57:	inc    edx
  419c58:	(bad)  
  419c5a:	imul   edx,DWORD PTR [esi-0x4291b266],0xcb5405c7
  419c64:	call   0x883ded0b
  419c69:	xchg   esp,eax
  419c6a:	out    0xa2,eax
  419c6c:	mov    esi,ss
  419c6e:	out    0x7c,eax
  419c70:	push   es
  419c71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c72:	mov    DWORD PTR [ecx+0x37],0x558802e7
  419c79:	xor    al,0xdd
  419c7b:	xchg   ch,bh
  419c7d:	retf   
  419c7e:	inc    edx
  419c7f:	inc    ebx
  419c80:	nop
  419c81:	pop    ds
  419c82:	push   edx
  419c83:	sahf   
  419c84:	call   0x631b:0x41706405
  419c8b:	fstp   QWORD PTR [ebp-0x440b9815]
  419c91:	imul   ebx,DWORD PTR ds:0xab28ecc8,0x79
  419c98:	jmp    0x419ce4
  419c9a:	arpl   WORD PTR ds:0xa5f7e177,si
  419ca0:	outs   dx,DWORD PTR ds:[esi]
  419ca1:	inc    ecx
  419ca2:	dec    ebp
  419ca3:	setne  BYTE PTR [ebx-0x74]
  419ca7:	imul   ecx,DWORD PTR [esi+0x1a],0x53d7bd7e
  419cae:	cmp    dl,bh
  419cb0:	jo     0x419cd0
  419cb2:	cmp    BYTE PTR [edi-0x2e],dl
  419cb5:	xchg   ebp,eax
  419cb6:	(bad)  [edi-0x4c468d9c]
  419cbc:	in     al,dx
  419cbd:	dec    eax
  419cbe:	pop    ds
  419cbf:	and    eax,0xa9e2491a
  419cc4:	in     al,0x93
  419cc6:	mov    ebx,0x14f09281
  419ccb:	or     al,BYTE PTR [esi]
  419ccd:	sbb    DWORD PTR [eax],esp
  419ccf:	push   0x54d4ce24
  419cd4:	out    dx,al
  419cd5:	sti    
  419cd6:	push   esp
  419cd7:	and    DWORD PTR [ebx-0x3e],0x33
  419cdb:	jmp    DWORD PTR [edi+0x4b]
  419cde:	popf   
  419cdf:	mov    WORD PTR [ebx],fs
  419ce1:	dec    esp
  419ce2:	cmc    
  419ce3:	mov    bh,0x83
  419ce5:	xor    eax,0xc940a572
  419cea:	out    dx,al
  419ceb:	sub    al,0xe0
  419ced:	popf   
  419cee:	sahf   
  419cef:	mov    cs,WORD PTR [edi]
  419cf1:	sti    
  419cf2:	or     al,0x99
  419cf4:	fs cmp eax,0x6be97c85
  419cfa:	inc    ebp
  419cfb:	xor    eax,0xe6bcf6d9
  419d00:	push   0xffffff99
  419d02:	mov    eax,0x7530c180
  419d07:	ss add ebp,ebx
  419d0a:	pop    es
  419d0b:	es stc 
  419d0d:	cmp    eax,0x8061da00
  419d12:	mov    bl,0x27
  419d14:	retf   0xcef1
  419d17:	ffree  st(7)
  419d19:	das    
  419d1a:	repnz int 0x6e
  419d1d:	jge    0x419d77
  419d1f:	xchg   edi,eax
  419d20:	les    ebp,FWORD PTR [ebx]
  419d22:	push   eax
  419d23:	or     al,0xba
  419d25:	pop    ebx
  419d26:	cwde   
  419d27:	pop    edx
  419d28:	push   ecx
  419d29:	push   esp
  419d2a:	sbb    eax,0x78de96c1
  419d2f:	js     0x419d0f
  419d31:	and    eax,0x936bac8a
  419d36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d37:	ret    
  419d38:	push   edx
  419d39:	inc    esp
  419d3a:	in     eax,dx
  419d3b:	(bad)  
  419d3c:	and    bl,cl
  419d3e:	inc    ebx
  419d3f:	repz adc esp,DWORD PTR [ebx]
  419d42:	push   0xfffffff1
  419d44:	cdq    
  419d45:	lods   al,BYTE PTR ds:[esi]
  419d46:	pop    edx
  419d47:	sar    BYTE PTR [ebx+0x4e764675],0x50
  419d4e:	not    DWORD PTR [esi+eiz*1+0x737e4635]
  419d55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d56:	popf   
  419d57:	or     BYTE PTR [ecx+esi*4-0x381db75a],dh
  419d5e:	mov    DWORD PTR [edi-0x48],ebx
  419d61:	push   eax
  419d62:	mov    db1,edx
  419d65:	xchg   edx,eax
  419d66:	jmp    0x582d:0x1dd4d5cc
  419d6d:	dec    ebx
  419d6e:	lods   al,BYTE PTR ds:[esi]
  419d6f:	test   ebx,esp
  419d71:	push   edi
  419d72:	(bad)  
  419d73:	ja     0x419d01
  419d75:	fincstp 
  419d77:	add    eax,0xf232cdf6
  419d7c:	sahf   
  419d7d:	or     eax,0xb3879960
  419d82:	mov    dh,0x64
  419d84:	dec    eax
  419d85:	or     eax,0xa79adcea
  419d8a:	aad    0x6e
  419d8c:	ret    
  419d8d:	fdivr  st(5),st
  419d8f:	or     BYTE PTR [esi-0x30],ch
  419d92:	shr    al,cl
  419d94:	in     eax,0x9e
  419d96:	dec    ecx
  419d97:	jno    0x419d47
  419d99:	push   es
  419d9a:	push   ecx
  419d9b:	mov    eax,0xa8d30707
  419da0:	repz not BYTE PTR [eax+0x0]
  419da4:	mov    ds:0x348e0b8a,eax
  419da9:	cmp    esp,DWORD PTR [ebx+0x6f86d706]
  419daf:	outs   dx,BYTE PTR ds:[esi]
  419db0:	repnz ss mov cl,0xff
  419db4:	cmp    DWORD PTR [esi+0x47],esi
  419db7:	dec    esp
  419db8:	jb     0x419d79
  419dba:	xchg   ebx,eax
  419dbb:	push   ebp
  419dbc:	or     BYTE PTR [eax*8+0x4579d480],0x0
  419dc4:	xchg   esi,eax
  419dc5:	in     al,0x4e
  419dc7:	cmp    bh,dh
  419dc9:	scas   eax,DWORD PTR es:[edi]
  419dca:	mov    ebp,0xad12bbf4
  419dcf:	jg     0x419e07
  419dd1:	in     eax,dx
  419dd2:	mov    ds,WORD PTR [ecx+0x2bf1d2d7]
  419dd8:	daa    
  419dd9:	imul   esi,DWORD PTR [edi+0x3f26d685],0xffffffae
  419de0:	or     edi,DWORD PTR [ebx+0x80bb5a8]
  419de6:	add    al,0x47
  419de8:	imul   edi,DWORD PTR [esi+0x4f],0xffffffcf
  419dec:	or     WORD PTR [esp+ecx*8-0x35d8691d],dx
  419df4:	mov    al,ds:0xf6460480
  419df9:	push   ebp
  419dfa:	fs mov bl,0xb1
  419dfd:	jbe    0x419e2b
  419dff:	enter  0xf9f6,0xde
  419e03:	shl    BYTE PTR [ebp+ecx*2-0x6d8bebfe],0x22
  419e0b:	xchg   ebx,eax
  419e0c:	or     dh,dh
  419e0e:	inc    esi
  419e0f:	mov    edi,0xcd0e2592
  419e14:	ds mov fs,ebp
  419e17:	mov    bl,0xe3
  419e19:	int3   
  419e1a:	int    0xd0
  419e1c:	and    al,0x14
  419e1e:	push   esp
  419e1f:	jecxz  0x419e70
  419e21:	popa   
  419e22:	arpl   WORD PTR [esi+0x292db7b],dx
  419e28:	repnz jecxz 0x419dbf
  419e2b:	dec    esp
  419e2c:	(bad)  [edi]
  419e2e:	jno    0x419e90
  419e30:	dec    esp
  419e31:	mov    ebx,0x2300b0b8
  419e36:	std    
  419e37:	add    eax,0x4df5f103
  419e3c:	fucom  st(2)
  419e3e:	mov    bp,?
  419e41:	mov    edx,0xaf3e2b85
  419e46:	dec    esp
  419e47:	mov    ecx,0xa9eb822a
  419e4c:	push   ebx
  419e4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e4e:	retf   
  419e4f:	push   ebx
  419e50:	add    BYTE PTR [ecx+eiz*8+0x93dfe0e],ch
  419e57:	addr16 (bad) 
  419e59:	(bad)  
  419e5b:	mov    esi,0x623d975c
  419e60:	inc    ecx
  419e61:	or     ch,BYTE PTR [ecx-0x28]
  419e64:	jmp    0x419ed1
  419e66:	pushf  
  419e67:	scas   eax,DWORD PTR es:[edi]
  419e68:	sti    
  419e69:	cmp    al,BYTE PTR [eax+0x644cedf1]
  419e6f:	cmp    DWORD PTR [ebx+0x202c311a],esp
  419e75:	mov    dl,0x33
  419e77:	inc    ebp
  419e78:	and    al,0x52
  419e7a:	and    eax,0xc4a46d39
  419e7f:	in     al,0xd
  419e81:	bound  edi,QWORD PTR [edx+ebx*1-0x34]
  419e85:	ror    DWORD PTR [ecx+0x372da716],1
  419e8b:	and    ecx,edx
  419e8d:	mov    bh,0x81
  419e8f:	pop    ebx
  419e90:	fisttp WORD PTR [edi]
  419e92:	xor    cl,0xf7
  419e95:	push   ecx
  419e96:	ret    
  419e97:	test   edx,esp
  419e99:	loopne 0x419ebf
  419e9b:	mov    eax,0x1534a1d9
  419ea0:	imul   esi,esp,0xb46fb410
  419ea6:	jno    0x419eae
  419ea8:	sub    edx,esp
  419eaa:	and    al,0xab
  419eac:	xor    esp,DWORD PTR fs:[eax+0x2]
  419eb0:	add    esi,edx
  419eb2:	jg     0x419ea6
  419eb4:	cli    
  419eb5:	sti    
  419eb6:	mov    esi,0xfec6453e
  419ebb:	mov    ebp,0x4f5259a9
  419ec0:	pusha  
  419ec1:	cdq    
  419ec2:	nop
  419ec3:	push   esp
  419ec4:	data16 sbb cl,BYTE PTR [ebx-0x5c440d05]
  419ecb:	and    ebp,esi
  419ecd:	test   ebp,edi
  419ecf:	pop    edi
  419ed0:	fucomip st,st(7)
  419ed2:	shr    BYTE PTR [ecx-0x79908799],0xf7
  419ed9:	in     al,0x24
  419edb:	sbb    eax,0x6848b048
  419ee0:	mov    ah,0x25
  419ee2:	sbb    al,0x13
  419ee4:	into   
  419ee5:	pusha  
  419ee6:	or     al,0xf0
  419ee8:	mov    dh,0x23
  419eea:	ins    DWORD PTR es:[edi],dx
  419eeb:	and    ebx,DWORD PTR [esi+ecx*8+0xc]
  419eef:	das    
  419ef0:	(bad)  
  419ef1:	loop   0x419e7d
  419ef3:	lea    ecx,[eax+ebp*2-0x6aaa36a8]
  419efa:	push   es
  419efb:	push   cs
  419efc:	dec    edi
  419efd:	addr16 dec eax
  419eff:	pmaddwd mm2,QWORD PTR [ebx+0x337975f7]
  419f06:	call   0x9ba9c984
  419f0b:	test   al,0x99
  419f0d:	imul   ebx,ecx,0x91f00e39
  419f13:	sbb    DWORD PTR [esi+ebx*4+0x633dd167],esi
  419f1a:	pop    edx
  419f1b:	push   ecx
  419f1c:	sbb    eax,0xe96e2454
  419f21:	dec    edx
  419f22:	gs into 
  419f24:	in     al,0x49
  419f26:	popf   
  419f27:	adc    ecx,0x7685ae37
  419f2d:	fs mov dl,0x1f
  419f30:	adc    DWORD PTR [ebx],ebx
  419f32:	mov    bl,0x93
  419f34:	adc    DWORD PTR [ebp-0x458f7409],edx
  419f3a:	icebp  
  419f3b:	jmp    0x6c6d4d2d
  419f40:	lahf   
  419f41:	mov    ss,WORD PTR [esi+0x8]
  419f44:	adc    esp,0xffffffa6
  419f47:	lahf   
  419f48:	sbb    eax,0x4ef41ca1
  419f4d:	xor    BYTE PTR [edi+ebx*4-0x73e976f9],ah
  419f54:	call   0x52e9b50d
  419f59:	xlat   BYTE PTR ds:[ebx]
  419f5a:	xchg   esp,eax
  419f5b:	clc    
  419f5c:	lods   eax,DWORD PTR ds:[esi]
  419f5d:	adc    DWORD PTR [edi-0x5bea23c4],ecx
  419f63:	scas   al,BYTE PTR es:[edi]
  419f64:	int    0x2a
  419f66:	or     eax,0x73ecc339
  419f6b:	cli    
  419f6c:	lock sbb esi,DWORD PTR fs:[ecx+0x5e]
  419f71:	or     al,BYTE PTR [esi-0x18]
  419f74:	xchg   BYTE PTR fs:[esi],ah
  419f77:	lods   al,BYTE PTR ss:[esi]
  419f79:	xchg   edi,eax
  419f7a:	sbb    al,0x3f
  419f7d:	test   DWORD PTR [esi+eiz*1+0x17d04be],edi
  419f84:	dec    ebx
  419f85:	dec    esi
  419f86:	inc    edi
  419f87:	imul   ebx,DWORD PTR [ebx+0x27],0x21
  419f8b:	mov    al,ds:0x98807360
  419f90:	dec    ebx
  419f91:	dec    ebp
  419f92:	dec    edi
  419f93:	inc    esi
  419f94:	outs   dx,BYTE PTR ds:[esi]
  419f95:	pop    ds
  419f96:	add    al,0xa7
  419f98:	imul   edx,DWORD PTR ds:0x485672d,0xb73bba8f
  419fa2:	fistp  WORD PTR [edi]
  419fa4:	or     edx,DWORD PTR [edi+ebp*1]
  419fa7:	cmp    DWORD PTR [edx+ecx*4],esp
  419faa:	imul   ebx,DWORD PTR [edi+0x5c],0xf6e318d4
  419fb1:	dec    edi
  419fb2:	pop    eax
  419fb3:	aad    0xa2
  419fb5:	add    bl,BYTE PTR [esi]
  419fb7:	cmp    eax,0xf0a56d82
  419fbc:	mov    ds:0x6f6e98f6,al
  419fc1:	sub    BYTE PTR [ecx+0x4],ah
  419fc4:	aaa    
  419fc5:	adc    esp,eax
  419fc7:	sti    
  419fc8:	cmc    
  419fc9:	sub    edi,ebx
  419fcb:	push   edx
  419fcc:	cwde   
  419fcd:	jle    0x419fe2
  419fcf:	cmp    ah,0xfd
  419fd2:	xchg   esp,eax
  419fd3:	and    al,0x61
  419fd5:	or     eax,0x1cefd872
  419fda:	popf   
  419fdb:	mov    esp,0x6eeb8adc
  419fe0:	jnp    0x41a02e
  419fe2:	sub    DWORD PTR [ebx],0xc84da554
  419fe8:	repnz mov bh,0x61
  419feb:	xlat   BYTE PTR ds:[ebx]
  419fec:	std    
  419fed:	mov    ebx,0x61adf525
  419ff2:	fcmovu st,st(0)
  419ff4:	jmp    FWORD PTR [edx]
  419ff6:	push   0xffffff93
  419ff8:	sar    BYTE PTR [eax],1
  419ffa:	sbb    al,0x7c
  419ffc:	push   cs
  419ffd:	pop    ebx
  419ffe:	lds    ebp,FWORD PTR [ebp+0x48b931a4]
  41a004:	xchg   ebp,eax
  41a005:	xchg   DWORD PTR [ebp+0x4661ed0e],ebp
  41a00b:	(bad)  
  41a00c:	xor    al,0xe2
  41a00e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a00f:	and    BYTE PTR [ecx],ah
  41a011:	sub    eax,0x829239a8
  41a016:	(bad)  
  41a017:	jl     0x41a01b
  41a019:	jb     0x419fd3
  41a01b:	mov    edi,DWORD PTR [edi+0x35]
  41a01e:	jo     0x41a03d
  41a020:	fst    DWORD PTR [edx-0x34]
  41a023:	ins    DWORD PTR es:[edi],dx
  41a024:	jle    0x41a0a1
  41a026:	ret    0xb5e9
  41a029:	cld    
  41a02a:	cmp    DWORD PTR [esp+edi*8-0x80],0x2a
  41a02f:	imul   ebx,DWORD PTR [edi+0xf06f5d8],0x6d56bda9
  41a039:	jg     0x41a092
  41a03b:	pop    ds
  41a03c:	in     eax,dx
  41a03d:	xchg   BYTE PTR [ebp-0x3678babc],dh
  41a043:	cwde   
  41a044:	scas   eax,DWORD PTR es:[edi]
  41a045:	xchg   edi,eax
  41a046:	cmp    bl,dh
  41a048:	sar    ch,1
  41a04a:	pop    ss
  41a04b:	inc    ebx
  41a04c:	sbb    DWORD PTR [esi],esi
  41a04e:	or     eax,ecx
  41a050:	lods   al,BYTE PTR ds:[esi]
  41a051:	rol    DWORD PTR [ecx],1
  41a053:	mov    ebx,0x256e3965
  41a058:	int3   
  41a059:	sbb    ebp,DWORD PTR [ebx]
  41a05b:	mov    ch,0x62
  41a05d:	pop    edx
  41a05e:	ret    0xb2a5
  41a061:	(bad)  
  41a062:	jmp    0x685735f4
  41a067:	in     al,0x9
  41a069:	inc    esi
  41a06a:	xchg   esi,ebx
  41a06c:	mov    esp,DWORD PTR [ecx]
  41a06e:	les    esi,FWORD PTR [eax]
  41a070:	jge    0x419ffa
  41a072:	frstor [edx+ecx*4-0x488ec8f8]
  41a079:	pop    edx
  41a07a:	and    ecx,esp
  41a07c:	cmp    DWORD PTR [ebp+0x65],esp
  41a07f:	out    dx,al
  41a080:	hlt    
  41a081:	repnz push 0x34
  41a084:	pop    eax
  41a085:	xchg   edi,eax
  41a086:	aas    
  41a087:	pop    ss
  41a088:	out    dx,al
  41a089:	mov    cl,0x32
  41a08b:	adc    edx,eax
  41a08d:	mov    edx,0x8dc2cd11
  41a092:	cmp    ecx,0x40
  41a095:	outs   dx,BYTE PTR ds:[esi]
  41a096:	jns    0x41a01f
  41a098:	fadd   DWORD PTR [edx]
  41a09a:	push   edi
  41a09b:	cmp    eax,0x28986cb2
  41a0a0:	mov    WORD PTR [esi+edi*2-0x32],fs
  41a0a4:	xchg   esi,eax
  41a0a5:	not    DWORD PTR [ebx]
  41a0a7:	xlat   BYTE PTR ds:[ebx]
  41a0a8:	(bad)  
  41a0a9:	pop    edi
  41a0aa:	in     eax,0x71
  41a0ac:	and    eax,0x2e63fced
  41a0b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0b2:	xor    eax,0x765b137
  41a0b7:	ins    BYTE PTR es:[edi],dx
  41a0b8:	sbb    ebp,DWORD PTR [ebx+0x61]
  41a0bb:	push   edi
  41a0bc:	cmp    DWORD PTR [esi+0x1381e6cf],ebp
  41a0c2:	dec    eax
  41a0c3:	adc    BYTE PTR [edi+0x4c],bh
  41a0c6:	push   ebx
  41a0c7:	leave  
  41a0c8:	clc    
  41a0c9:	jmp    0x6345:0x8897d7ed
  41a0d0:	nop
  41a0d1:	ror    DWORD PTR [edx+edi*1],1
  41a0d4:	xor    eax,0xce9db34e
  41a0d9:	ficomp WORD PTR [esi+0x71]
  41a0dc:	mov    ds:0x69e371f2,eax
  41a0e1:	sbb    DWORD PTR [esp+ecx*2+0x210c4319],0xffffff90
  41a0e9:	inc    eax
  41a0ea:	imul   ecx
  41a0ec:	add    eax,0xdfade094
  41a0f1:	jns    0x41a137
  41a0f3:	test   dh,ah
  41a0f5:	test   DWORD PTR [ebp-0x30fad3bd],0x36048a66
  41a0ff:	cmp    eax,DWORD PTR [edi-0x5c]
  41a102:	cs xchg ecx,edi
  41a105:	add    eax,0xb7a9e20f
  41a10a:	xchg   edi,eax
  41a10b:	adc    ah,BYTE PTR [eax]
  41a10d:	arpl   WORD PTR [edx+0x5a],dx
  41a110:	push   eax
  41a111:	and    al,0x29
  41a113:	or     dh,0x94
  41a116:	dec    edi
  41a117:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a118:	push   0xffffffbb
  41a11a:	push   ebp
  41a11b:	jnp    0x41a0db
  41a11d:	adc    eax,0xe663fa10
  41a122:	sub    ebp,DWORD PTR [ebx+eax*1]
  41a125:	sti    
  41a126:	push   0x6a
  41a128:	or     DWORD PTR [ebp-0xa],esi
  41a12b:	cmp    al,0x90
  41a12d:	or     eax,0x3c92ae44
  41a132:	aad    0xbf
  41a134:	jnp    0x41a0dc
  41a136:	repnz cmp BYTE PTR [ecx],0x77
  41a13a:	pop    ebp
  41a13b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a13c:	cmp    al,0x7e
  41a13e:	add    BYTE PTR [ecx-0x37],al
  41a141:	adc    BYTE PTR [esp+edi*4+0x47],bh
  41a145:	test   eax,0x48e9a12c
  41a14a:	push   eax
  41a14b:	push   edx
  41a14c:	mov    esp,DWORD PTR [edi+eiz*2+0x7869c9c7]
  41a153:	dec    ebx
  41a154:	sbb    eax,0x7766c780
  41a159:	mov    bh,0xa6
  41a15b:	add    edx,0xe9318cc7
  41a161:	sahf   
  41a162:	mov    es,WORD PTR [ebx-0x7db36802]
  41a168:	leave  
  41a169:	mov    edi,0xb112969a
  41a16e:	lds    esp,FWORD PTR [ebx]
  41a170:	(bad)  
  41a172:	retf   0x12c6
  41a175:	data16 loop 0x41a10b
  41a178:	mov    esp,DWORD PTR [ebp+0x8]
  41a17b:	mov    ebx,0xb6f44994
  41a180:	or     eax,0x58fe02cf
  41a185:	idiv   DWORD PTR [esi+0x5a96b679]
  41a18b:	push   edi
  41a18c:	or     al,0xba
  41a18e:	rcr    DWORD PTR [ebp-0x66ac5369],1
  41a194:	mov    cl,0x17
  41a196:	daa    
  41a197:	(bad)  
  41a198:	cwde   
  41a199:	(bad)  
  41a19a:	push   ebp
  41a19b:	int    0xfb
  41a19d:	fldenv [eax-0x13]
  41a1a1:	movhps QWORD PTR [ebx+0x69e8cdce],xmm7
  41a1a8:	ds dec ecx
  41a1aa:	aam    0xa7
  41a1ac:	mov    bh,0xa5
  41a1ae:	and    eax,0xbbbf7778
  41a1b3:	scas   eax,DWORD PTR es:[edi]
  41a1b4:	or     DWORD PTR [esi+ebx*2-0x5b],edi
  41a1b8:	out    0xe2,eax
  41a1ba:	sbb    eax,0x8aef8b22
  41a1bf:	add    bh,BYTE PTR [edi+edi*8-0x4c]
  41a1c3:	lds    eax,FWORD PTR [edi-0x3e6db8a1]
  41a1c9:	ret    0x935d
  41a1cc:	out    dx,al
  41a1cd:	int3   
  41a1ce:	pop    ds
  41a1cf:	mov    cl,bh
  41a1d1:	add    ch,ah
  41a1d3:	adc    DWORD PTR [esp+ebp*1],esi
  41a1d6:	rol    BYTE PTR [edi+0x6f],cl
  41a1d9:	and    eax,DWORD PTR [edi]
  41a1db:	or     DWORD PTR [edi+0x7d],ebp
  41a1de:	or     ch,BYTE PTR [eax+0x18]
  41a1e1:	popa   
  41a1e2:	mov    bh,0x80
  41a1e4:	mov    edx,0x7a17a30e
  41a1e9:	or     eax,edi
  41a1eb:	mov    esp,0x3de1e3a1
  41a1f0:	rcr    DWORD PTR [ecx-0x20],1
  41a1f3:	sbb    DWORD PTR [ebx-0x2d],eax
  41a1f6:	int    0x4d
  41a1f8:	push   ebx
  41a1f9:	mov    ecx,ecx
  41a1fb:	push   cs
  41a1fc:	repnz stos BYTE PTR es:[edi],al
  41a1fe:	loope  0x41a215
  41a200:	aad    0xf1
  41a202:	sbb    BYTE PTR ds:0xf4ac65ba,0x37
  41a209:	neg    BYTE PTR [ebx-0x5b]
  41a20c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a20d:	adc    al,0x2
  41a20f:	sub    dh,BYTE PTR [ebx-0x50beb9ad]
  41a215:	arpl   WORD PTR [eax-0x1580728e],dx
  41a21b:	mov    dl,0x8f
  41a21d:	arpl   WORD PTR ds:0x6b6f2d67,ax
  41a223:	jecxz  0x41a299
  41a225:	mov    ds:0x8d06cc9e,al
  41a22a:	mov    edi,0xdd0e3269
  41a22f:	dec    eax
  41a230:	jns    0x41a253
  41a232:	leave  
  41a233:	pop    es
  41a234:	js     0x41a201
  41a236:	and    al,0xb5
  41a238:	test   BYTE PTR [eax],cl
  41a23a:	and    DWORD PTR [ebp-0x26da554],0x29d819f1
  41a244:	loop   0x41a28a
  41a246:	aam    0x1f
  41a248:	fcmove st,st(6)
  41a24a:	and    BYTE PTR es:[ebx-0x61],ah
  41a24e:	pop    ebx
  41a24f:	repnz pop es
  41a251:	inc    edx
  41a252:	test   eax,0xc64b93df
  41a257:	or     eax,0x77f79b91
  41a25c:	push   cs
  41a25d:	adc    esp,DWORD PTR [esp-0x4cce622f]
  41a264:	fstp   st(5)
  41a266:	dec    eax
  41a267:	dec    ebx
  41a268:	dec    esp
  41a269:	push   es
  41a26a:	loop   0x41a2de
  41a26c:	lods   eax,DWORD PTR ds:[esi]
  41a26d:	div    BYTE PTR [ebp+edx*1+0x2e]
  41a271:	data16 cmp ah,BYTE PTR [eax-0x18]
  41a275:	xor    al,0x5a
  41a277:	cmp    BYTE PTR [ebx],0x7f
  41a27a:	cld    
  41a27b:	je     0x41a24e
  41a27d:	lahf   
  41a27e:	fcmovnb st,st(4)
  41a280:	jb     0x41a2e1
  41a282:	enter  0xd9c9,0x2d
  41a286:	mov    ebp,0x65bfe073
  41a28b:	pushf  
  41a28c:	iret   
  41a28d:	pop    esi
  41a28e:	call   0x90a3:0x3562497d
  41a295:	ins    DWORD PTR es:[edi],dx
  41a296:	xor    al,0x96
  41a298:	ror    BYTE PTR [ecx+0x585af7ed],cl
  41a29e:	mov    al,0x32
  41a2a0:	test   eax,0x4bd3431c
  41a2a5:	clc    
  41a2a6:	push   eax
  41a2a7:	sub    eax,0x9f9a2fa6
  41a2ac:	mov    edi,eax
  41a2ae:	js     0x41a2d3
  41a2b0:	inc    edi
  41a2b1:	and    ch,BYTE PTR [esi]
  41a2b3:	out    0xf4,eax
  41a2b5:	ficom  WORD PTR ds:0x5a492226
  41a2bb:	adc    BYTE PTR [eax],ah
  41a2bd:	dec    eax
  41a2be:	xor    BYTE PTR [eax+ebx*4-0x22586cd1],ah
  41a2c5:	jmp    WORD PTR [ecx+0x39154483]
  41a2cc:	dec    esi
  41a2cd:	inc    edx
  41a2ce:	dec    ecx
  41a2cf:	jecxz  0x41a254
  41a2d1:	std    
  41a2d2:	mov    dh,0x33
  41a2d4:	out    dx,al
  41a2d5:	push   0xffffffb4
  41a2d7:	daa    
  41a2d8:	jge    0x41a2d1
  41a2da:	push   0xffffffb1
  41a2dc:	inc    edi
  41a2dd:	xchg   eax,esp
  41a2df:	mov    bl,0xf6
  41a2e1:	xchg   ebp,eax
  41a2e2:	ret    
  41a2e3:	aam    0xab
  41a2e5:	dec    eax
  41a2e6:	cdq    
  41a2e7:	fnstcw WORD PTR [edi]
  41a2e9:	popf   
  41a2ea:	popa   
  41a2eb:	mov    esi,DWORD PTR [ebx]
  41a2ed:	dec    edi
  41a2ee:	test   eax,0x21225c80
  41a2f3:	jge    0x41a282
  41a2f5:	adc    ebp,DWORD PTR [edi+edx*1+0x3a4bcaa1]
  41a2fc:	shr    DWORD PTR [edi+ebx*4],1
  41a2ff:	pop    ebp
  41a300:	mov    al,ds:0x223235b4
  41a305:	ds (bad) 
  41a307:	mov    edi,0xae4a7535
  41a30c:	add    BYTE PTR ds:0x3650861d,dl
  41a312:	jge    0x41a308
  41a314:	or     ebx,eax
  41a316:	push   0x10e54804
  41a31b:	adc    ecx,DWORD PTR [ebx-0x21]
  41a31e:	dec    eax
  41a31f:	mov    ah,0x71
  41a321:	clc    
  41a322:	jb     0x41a2de
  41a324:	sub    BYTE PTR ds:0xcc3495e,0xed
  41a32b:	lahf   
  41a32c:	cmp    al,0xbf
  41a32e:	scas   al,BYTE PTR es:[edi]
  41a32f:	sar    edi,1
  41a331:	mov    esp,DWORD PTR [esi]
  41a333:	mov    es,WORD PTR ds:0x67d6836
  41a339:	adc    ebx,esp
  41a33b:	gs sahf 
  41a33d:	pop    ebx
  41a33e:	adc    ecx,DWORD PTR [ecx]
  41a340:	add    esp,edx
  41a342:	cwde   
  41a343:	jl     0x41a2fb
  41a345:	add    BYTE PTR [eax+0x5f6016bb],bh
  41a34b:	jle    0x41a37d
  41a34d:	mov    ecx,0x92b3f9c0
  41a352:	out    0x80,al
  41a354:	mov    ds:0xcb38514c,eax
  41a359:	inc    esi
  41a35a:	mov    bl,0xcb
  41a35c:	lods   al,BYTE PTR ds:[esi]
  41a35d:	jmp    0xf1367d19
  41a362:	jns    0x41a365
  41a364:	in     eax,0xe5
  41a366:	outs   dx,DWORD PTR ds:[esi]
  41a367:	mov    DWORD PTR [ecx-0x7c],edx
  41a36a:	mov    ds:0x7bfce1e9,al
  41a36f:	test   BYTE PTR [eax+0x2a],0x1
  41a373:	fst    QWORD PTR [esp+eiz*8-0x49]
  41a377:	in     al,0xa7
  41a379:	mov    ebp,esi
  41a37b:	pop    edi
  41a37c:	in     al,0x5b
  41a37e:	mov    bl,cl
  41a380:	cmp    BYTE PTR [edx+0x38],dl
  41a383:	scas   al,BYTE PTR es:[edi]
  41a384:	jl     0x41a3b0
  41a386:	ficom  WORD PTR [esi+0xa787ecd]
  41a38c:	push   es
  41a38d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a38e:	push   ss
  41a38f:	mov    edi,0x90ab437
  41a394:	sbb    ah,BYTE PTR [ebx]
  41a396:	mov    ebx,0x3cb2d4d3
  41a39b:	mov    esp,DWORD PTR [esp+ecx*2-0x28]
  41a39f:	hlt    
  41a3a0:	sar    DWORD PTR [ecx+eax*4+0xd5a1f94],1
  41a3a7:	xor    ecx,eax
  41a3a9:	mov    ds,WORD PTR [eax+0x129b7d08]
  41a3af:	pop    es
  41a3b0:	jbe    0x41a347
  41a3b2:	mov    edi,0x7a099160
  41a3b7:	mov    al,ds:0xbdb7c271
  41a3bc:	lock shr BYTE PTR [ebp+0x35],1
  41a3c0:	lods   al,BYTE PTR ds:[esi]
  41a3c1:	dec    ebx
  41a3c2:	dec    edx
  41a3c3:	retf   0x7a68
  41a3c6:	sub    ah,dl
  41a3c8:	adc    cl,BYTE PTR [esi]
  41a3ca:	loope  0x41a3e3
  41a3cc:	mov    al,0xb5
  41a3ce:	ret    0x4528
  41a3d1:	xor    eax,0xd756a6f5
  41a3d6:	mov    ds:0x3a5aae5f,eax
  41a3db:	mov    edx,?
  41a3dd:	or     BYTE PTR [ebx-0x2f2ada2e],bl
  41a3e3:	inc    DWORD PTR [ebx]
  41a3e5:	sbb    al,BYTE PTR [esi+0x6e]
  41a3e8:	aaa    
  41a3e9:	mov    eax,0x45078d16
  41a3ee:	sub    esp,esi
  41a3f0:	add    eax,0xa8d8a0e3
  41a3f5:	mov    eax,ds:0xe875d96b
  41a3fa:	jg     0x41a434
  41a3fc:	ins    DWORD PTR es:[edi],dx
  41a3fd:	sub    al,0xd8
  41a3ff:	hlt    
  41a400:	pop    esi
  41a401:	jmp    0x10bc:0xc79afaf2
  41a408:	pop    edx
  41a409:	stos   DWORD PTR es:[edi],eax
  41a40a:	lods   al,BYTE PTR ds:[esi]
  41a40b:	(bad)  
  41a40c:	jo     0x41a42d
  41a40e:	je     0x41a414
  41a410:	push   ss
  41a411:	inc    edi
  41a412:	jno    0x41a3e6
  41a414:	out    0x9b,eax
  41a416:	sub    ah,dh
  41a418:	mov    ebp,0xbdce1997
  41a41d:	xchg   ebp,eax
  41a41e:	xchg   esp,eax
  41a41f:	lods   al,BYTE PTR ds:[esi]
  41a420:	frstor [edi-0x43bff6d6]
  41a426:	call   0x38d5:0x56761d59
  41a42d:	inc    ebx
  41a42e:	in     eax,0x59
  41a430:	push   edi
  41a431:	inc    ebx
  41a432:	cmc    
  41a433:	test   DWORD PTR [ebx-0x36d90f1],esp
  41a439:	pop    ss
  41a43a:	push   ebp
  41a43b:	pop    edi
  41a43c:	fild   WORD PTR [edi+0x80893b5]
  41a442:	loope  0x41a407
  41a444:	(bad)  
  41a445:	mov    ds,WORD PTR [eax+ebp*2]
  41a448:	cdq    
  41a449:	dec    ebx
  41a44a:	and    dl,BYTE PTR [edi]
  41a44c:	inc    ebp
  41a44d:	rol    BYTE PTR [edi+0x3ab6d7f0],1
  41a453:	loope  0x41a3d7
  41a455:	pop    eax
  41a456:	xchg   ebx,eax
  41a457:	(bad)  
  41a458:	js     0x41a3ee
  41a45a:	mov    ds:0x5d4b3c39,al
  41a45f:	xchg   edi,eax
  41a460:	sub    eax,0x7531d43a
  41a465:	das    
  41a466:	mov    edx,0xffc8c5ff
  41a46b:	cwde   
  41a46c:	xchg   ebp,eax
  41a46d:	cmp    DWORD PTR [ebx],esp
  41a46f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a470:	sbb    DWORD PTR [esi],eax
  41a472:	repz or cl,BYTE PTR [eax]
  41a475:	mov    cl,al
  41a477:	ficomp WORD PTR [ecx-0x4de2b5cb]
  41a47d:	jp     0x41a4be
  41a47f:	inc    esi
  41a480:	mov    bh,BYTE PTR [ecx+eiz*8+0x2293aabb]
  41a487:	adc    DWORD PTR [ecx-0x4f],esp
  41a48a:	imul   esi,DWORD PTR [edx-0x68b7e271],0x4fc609de
  41a494:	in     eax,0x95
  41a496:	(bad)  
  41a498:	inc    edi
  41a499:	jmp    0x41a41b
  41a49b:	mov    ds:0x45a8a333,al
  41a4a0:	cmp    ch,al
  41a4a2:	push   esp
  41a4a3:	cli    
  41a4a4:	out    dx,eax
  41a4a5:	lds    ecx,FWORD PTR [eax-0x26bc5dec]
  41a4ab:	and    al,0x44
  41a4ad:	sbb    ch,dl
  41a4af:	inc    edx
  41a4b0:	test   DWORD PTR [esi-0x6],0x822aec9c
  41a4b7:	dec    ecx
  41a4b8:	sub    DWORD PTR [edx],eax
  41a4ba:	int3   
  41a4bb:	imul   ebp,DWORD PTR [esi-0x9],0x70bf9b48
  41a4c2:	mov    DWORD PTR [eax-0x3d2acfc8],ebp
  41a4c8:	adc    DWORD PTR [edi+eax*2+0x5b],0xaf8b861e
  41a4d0:	add    BYTE PTR [edx+0xe],ch
  41a4d3:	inc    ebx
  41a4d4:	mov    bl,0x4c
  41a4d6:	ss xchg ebx,eax
  41a4d8:	inc    ebx
  41a4d9:	into   
  41a4da:	call   0xd1c08d74
  41a4df:	mov    ch,0xad
  41a4e1:	lods   eax,DWORD PTR ds:[esi]
  41a4e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4e3:	fwait
  41a4e4:	addr16 xchg edi,eax
  41a4e6:	femms  
  41a4e8:	test   al,0x77
  41a4ea:	add    edi,ebp
  41a4ec:	mov    ecx,0x89674443
  41a4f1:	bound  esi,QWORD PTR [edx+0x5c]
  41a4f4:	cld    
  41a4f5:	hlt    
  41a4f6:	cmp    esi,ecx
  41a4f8:	xor    al,0xb4
  41a4fa:	cs stos BYTE PTR es:[edi],al
  41a4fc:	sub    eax,0xd2d737aa
  41a501:	mov    esp,0xd7e7e78f
  41a506:	(bad)  
  41a507:	(bad)  
  41a508:	outs   dx,DWORD PTR ds:[esi]
  41a509:	repz sbb DWORD PTR [ebp+eax*2-0x24],0x6c
  41a50f:	add    al,0x96
  41a511:	jbe    0x41a589
  41a513:	xlat   BYTE PTR ds:[ebx]
  41a514:	mov    esi,0xd2c6bd6
  41a519:	push   cs
  41a51a:	icebp  
  41a51b:	jae    0x41a538
  41a51d:	jecxz  0x41a553
  41a51f:	add    al,0xd7
  41a521:	es xor eax,0x42d5dc92
  41a527:	sub    al,0x41
  41a529:	cs jb  0x41a593
  41a52c:	loop   0x41a54c
  41a52e:	mov    eax,ds:0x567745a9
  41a533:	mov    edi,0xb718e57
  41a538:	into   
  41a539:	pop    ecx
  41a53a:	xor    ebx,DWORD PTR [eax-0x13a1d4f3]
  41a540:	rcr    BYTE PTR [ebx+0x635db312],cl
  41a546:	sbb    al,0xb
  41a548:	test   DWORD PTR ds:[ecx+0x70],edx
  41a54c:	cs xor al,0xac
  41a54f:	out    0xfe,al
  41a551:	mov    dl,0x9f
  41a553:	pop    esp
  41a554:	xchg   BYTE PTR [esp+edi*2-0x80],dh
  41a558:	and    al,0x97
  41a55a:	sbb    ah,ah
  41a55c:	in     al,0xaa
  41a55e:	mov    ch,0x7a
  41a560:	vpmacssdqh ymm11,ymm0,ymm3,YMMWORD PTR [eax+0x7ab31b81]
  41a56a:	mov    edx,0x4a81133d
  41a56f:	nop
  41a570:	outs   dx,DWORD PTR ds:[esi]
  41a571:	mov    al,0x70
  41a573:	sub    ah,BYTE PTR [esi+0x75825d27]
  41a579:	ret    0x3b47
  41a57c:	sahf   
  41a57d:	retf   0xdca2
  41a580:	leave  
  41a581:	push   edi
  41a582:	mov    ebx,0xeeab5e8a
  41a587:	push   esi
  41a588:	outs   dx,DWORD PTR ds:[esi]
  41a589:	or     eax,ecx
  41a58b:	stc    
  41a58c:	jae    0x41a5b7
  41a58e:	or     eax,0x44e70e4f
  41a593:	mov    ah,0xf
  41a595:	dec    edx
  41a596:	push   ds
  41a597:	sti    
  41a598:	call   0x386e:0x3bb65ab4
  41a59f:	fnstcw WORD PTR [edx+0x238c5562]
  41a5a5:	mov    cl,0x76
  41a5a7:	fadd   DWORD PTR [edx]
  41a5a9:	xchg   ebx,edx
  41a5ab:	adc    DWORD PTR [edi+ecx*4],edi
  41a5ae:	sbb    dh,ah
  41a5b0:	pop    ebp
  41a5b1:	aaa    
  41a5b2:	xor    dh,BYTE PTR [edi+0x5d907fbb]
  41a5b8:	fistp  QWORD PTR [eax+0x20869ca0]
  41a5be:	adc    al,0x16
  41a5c0:	or     BYTE PTR ds:0xbe5c7cf6,bh
  41a5c7:	add    BYTE PTR [eax],ch
  41a5c9:	bound  esp,QWORD PTR [edi-0xa248c20]
  41a5cf:	xor    eax,0xb9529963
  41a5d4:	cmp    BYTE PTR [edx],bl
  41a5d6:	lgs    esp,FWORD PTR [edi+eax*2]
  41a5da:	cdq    
  41a5db:	jmp    0x69089280
  41a5e0:	and    al,0xd8
  41a5e2:	xlat   BYTE PTR ds:[ebx]
  41a5e3:	inc    edx
  41a5e4:	aad    0x40
  41a5e6:	or     BYTE PTR [ebx],ch
  41a5e8:	xchg   ebx,eax
  41a5e9:	pop    ebx
  41a5ea:	xor    esp,DWORD PTR [edx-0x78]
  41a5ed:	into   
  41a5ee:	(bad)  
  41a5ef:	mov    al,0x74
  41a5f1:	loope  0x41a594
  41a5f3:	push   0x35
  41a5f5:	fist   DWORD PTR [esi-0x7]
  41a5f8:	jne    0x41a589
  41a5fa:	adc    edx,ecx
  41a5fc:	clc    
  41a5fd:	out    dx,eax
  41a5fe:	ins    DWORD PTR es:[edi],dx
  41a5ff:	clc    
  41a600:	and    esi,edi
  41a602:	fld    QWORD PTR [ecx]
  41a604:	iret   
  41a605:	xchg   edi,eax
  41a606:	adc    eax,0x1d5b6b0d
  41a60b:	cmp    ecx,DWORD PTR ds:0xfec45eb6
  41a611:	scas   eax,DWORD PTR es:[edi]
  41a612:	and    al,0x5c
  41a614:	call   0x2c632f28
  41a619:	inc    eax
  41a61a:	pop    eax
  41a61b:	mov    ds:0x6efdd19b,al
  41a620:	clc    
  41a621:	pusha  
  41a622:	or     eax,0xfbfcaad7
  41a627:	dec    ebp
  41a628:	inc    ebp
  41a629:	or     eax,0x482b3aa8
  41a62e:	inc    ebp
  41a62f:	enter  0xf2d0,0x77
  41a633:	test   BYTE PTR [edi+0x1ead3fca],0xb
  41a63a:	lahf   
  41a63b:	push   ebx
  41a63c:	add    eax,0xa489aed2
  41a641:	loopne 0x41a5e4
  41a643:	gs push esp
  41a645:	inc    ecx
  41a646:	jmp    0xd1524a5e
  41a64b:	mov    eax,0x71f03c14
  41a650:	(bad)  
  41a651:	jmp    0x41a664
  41a653:	inc    ebx
  41a654:	sub    dl,BYTE PTR [esi-0x52]
  41a657:	(bad)  
  41a658:	jl     0x41a5e5
  41a65a:	shl    al,cl
  41a65c:	es in  eax,0xe1
  41a65f:	adc    BYTE PTR [eax+0x397525fd],ch
  41a665:	repnz push ebx
  41a667:	out    dx,al
  41a668:	adc    dl,bh
  41a66a:	enter  0xf52c,0xaa
  41a66e:	fmul   st(2),st
  41a670:	cdq    
  41a671:	pop    ss
  41a672:	mov    dh,0xfc
  41a674:	in     eax,dx
  41a675:	mov    DWORD PTR [edx+0x41],eax
  41a678:	and    esi,ecx
  41a67a:	mov    esi,0x573b4d80
  41a67f:	or     DWORD PTR [ebp-0x5982cf69],eax
  41a685:	xchg   esp,eax
  41a686:	mov    edx,0x2e167d19
  41a68b:	mov    bl,0x61
  41a68d:	mov    DWORD PTR [ebx+0x733c80c0],eax
  41a693:	mov    WORD PTR [edi+0x76d133a7],ds
  41a699:	test   BYTE PTR [eax+0x4305a57c],ch
  41a69f:	mov    esp,0x8760c500
  41a6a4:	ret    
  41a6a5:	data16 (bad) 
  41a6a7:	leave  
  41a6a8:	inc    ebx
  41a6a9:	dec    DWORD PTR ds:0x45e0d487
  41a6af:	call   0x6df6426b
  41a6b4:	test   eax,0x7f73ed06
  41a6b9:	mov    edx,0xf4e80067
  41a6be:	fiadd  WORD PTR ds:0xa13a01c9
  41a6c4:	adc    al,0x12
  41a6c6:	shl    DWORD PTR [ecx],cl
  41a6c8:	cmc    
  41a6c9:	inc    esi
  41a6ca:	jb     0x41a6cf
  41a6cc:	or     ecx,DWORD PTR [ebx]
  41a6ce:	les    edx,FWORD PTR [ecx]
  41a6d0:	jle    0x41a6cf
  41a6d2:	mov    cl,BYTE PTR [eax+0x4f40fa5d]
  41a6d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6d9:	jmp    0x41a718
  41a6db:	int3   
  41a6dc:	mov    ds:0xe4e4fd44,eax
  41a6e1:	lahf   
  41a6e2:	call   0x8253:0x49f7bc53
  41a6e9:	and    al,0xa6
  41a6eb:	imul   edi,DWORD PTR [edx+0x5a5acf11],0x4a44f0a7
  41a6f5:	sbb    BYTE PTR [ecx],bh
  41a6f7:	dec    edx
  41a6f8:	add    al,0x66
  41a6fa:	and    eax,0x28bfc71c
  41a6ff:	cwde   
  41a700:	clc    
  41a701:	and    ecx,ecx
  41a703:	shl    BYTE PTR [ecx+edx*4],cl
  41a706:	adc    al,0xf6
  41a708:	cmp    al,0xa9
  41a70a:	lahf   
  41a70b:	sbb    al,BYTE PTR [ebp+eiz*4+0x82ce178]
  41a712:	cmovl  edi,DWORD PTR [edi+0xb64508f]
  41a719:	push   es
  41a71a:	mov    eax,0xb9a0b41d
  41a71f:	jne    0x41a6a2
  41a721:	jne    0x41a729
  41a723:	xlat   BYTE PTR ds:[ebx]
  41a724:	out    0x3f,eax
  41a726:	std    
  41a727:	pop    eax
  41a728:	adc    eax,0xd407028e
  41a72d:	mov    ds:0xd5b0fb64,eax
  41a732:	loop   0x41a6e0
  41a734:	out    dx,al
  41a735:	mov    DWORD PTR [ebx],eax
  41a737:	and    eax,0x9e112412
  41a73c:	pop    ds
  41a73d:	dec    esp
  41a73e:	int3   
  41a73f:	ja     0x41a76d
  41a741:	pop    esp
  41a742:	sti    
  41a743:	ror    eax,0xc
  41a746:	jmp    0x41a711
  41a748:	pop    ecx
  41a749:	pop    edi
  41a74a:	cmp    ah,ah
  41a74c:	cdq    
  41a74d:	xchg   ebx,eax
  41a74e:	sar    BYTE PTR [ebp+0x4f],cl
  41a751:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a752:	and    al,0x24
  41a754:	fdivp  st(4),st
  41a756:	push   0xe675103f
  41a75b:	mov    esi,0xc0e3f278
  41a760:	adc    DWORD PTR [eax-0x48e70ac0],ebp
  41a766:	sub    eax,DWORD PTR [ecx+0x6866356d]
  41a76c:	rcr    BYTE PTR [esi-0x125ff2c9],1
  41a772:	fiadd  DWORD PTR [ecx+0x1455a81e]
  41a778:	fdiv   DWORD PTR [edi+0x457e071c]
  41a77e:	daa    
  41a77f:	mov    ah,0x5a
  41a781:	lea    ebx,[esi+0x2]
  41a784:	out    0xeb,al
  41a786:	lea    edi,[edi]
  41a788:	xor    ebx,DWORD PTR [edi]
  41a78a:	push   edi
  41a78b:	adc    bl,BYTE PTR [edx]
  41a78d:	mov    edi,DWORD PTR [ecx+0x5f]
  41a790:	scas   eax,DWORD PTR es:[edi]
  41a791:	push   ebx
  41a792:	fsubr  DWORD PTR [edi+0x4841edcc]
  41a798:	mov    ds:0x244869b7,eax
  41a79d:	(bad)  
  41a79e:	push   edx
  41a79f:	adc    DWORD PTR [ebx+0x439acacc],0x7c6fb83a
  41a7a9:	mov    ebx,0x75732e7d
  41a7ae:	xor    eax,0xcebee6a2
  41a7b3:	xlat   BYTE PTR ds:[ebx]
  41a7b4:	addr16 cwde 
  41a7b6:	xchg   ebp,eax
  41a7b7:	mov    al,ds:0xe313cbee
  41a7bc:	outs   dx,BYTE PTR ds:[esi]
  41a7bd:	in     al,dx
  41a7be:	inc    ebp
  41a7bf:	sar    BYTE PTR [ebp+0x36],0xe
  41a7c3:	mov    ch,0x9d
  41a7c5:	pushf  
  41a7c6:	ins    DWORD PTR es:[edi],dx
  41a7c7:	sub    eax,0xa99dd187
  41a7cc:	jno    0x41a774
  41a7ce:	jp     0x41a754
  41a7d0:	cs (bad) 
  41a7d2:	and    bl,0xf0
  41a7d5:	pop    edx
  41a7d6:	test   al,0x93
  41a7d8:	fs mov esp,0xdcca5346
  41a7de:	popf   
  41a7df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7e0:	adc    DWORD PTR [ecx+0xa722f9f],ebp
  41a7e6:	std    
  41a7e7:	cld    
  41a7e8:	dec    ebp
  41a7e9:	mov    eax,ds:0x3b03b860
  41a7ee:	jo     0x41a803
  41a7f0:	adc    eax,0x6ee794b
  41a7f5:	push   esp
  41a7f6:	jbe    0x41a7a8
  41a7f8:	(bad)  
  41a7f9:	addr16 mov edi,0x49c67415
  41a7ff:	cli    
  41a800:	pop    eax
  41a801:	jns    0x41a85f
  41a803:	ror    ah,0x8f
  41a806:	or     DWORD PTR [edx],0x2dbc2990
  41a80c:	push   0x579b529d
  41a811:	outs   dx,BYTE PTR ds:[esi]
  41a812:	inc    ebx
  41a813:	mov    esp,0x181d70f1
  41a818:	sub    DWORD PTR [edi],edx
  41a81a:	xchg   ebp,eax
  41a81b:	adc    dl,BYTE PTR [ecx]
  41a81d:	xlat   BYTE PTR ds:[ebx]
  41a81e:	xchg   cl,dh
  41a820:	lock aam 0xb0
  41a823:	sbb    BYTE PTR [ecx+0x4c],ch
  41a826:	mov    eax,0x86a0870
  41a82b:	test   ch,bh
  41a82d:	pop    ecx
  41a82e:	or     DWORD PTR [edi+ecx*2],esi
  41a831:	add    eax,0x7fadcad
  41a836:	dec    ebx
  41a837:	add    eax,0x8170c055
  41a83c:	lahf   
  41a83d:	push   edx
  41a83e:	lahf   
  41a83f:	shl    BYTE PTR [eax],cl
  41a841:	and    bl,cl
  41a843:	push   esi
  41a844:	(bad)  
  41a845:	jmp    0xef20690d
  41a84a:	mov    WORD PTR [ecx+0x2d],fs
  41a84d:	les    edx,FWORD PTR [esi-0x20]
  41a850:	scas   al,BYTE PTR es:[edi]
  41a851:	lods   al,BYTE PTR ds:[esi]
  41a852:	ret    0xc135
  41a855:	cdq    
  41a856:	mov    edx,0x4647528
  41a85b:	jmp    0x990bc6c7
  41a860:	jp     0x41a8a0
  41a862:	dec    ebp
  41a863:	(bad)  [edx]
  41a865:	add    ah,BYTE PTR [edi]
  41a867:	jge    0x41a870
  41a869:	cmp    ecx,DWORD PTR [eax]
  41a86b:	ja     0x41a819
  41a86d:	adc    ebx,ecx
  41a86f:	adc    DWORD PTR [eax],esi
  41a871:	push   ds
  41a872:	rol    ch,cl
  41a874:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a875:	sbb    eax,0x69c0aaf
  41a87a:	imul   eax,edi,0x72d22995
  41a880:	mov    eax,esp
  41a882:	ror    DWORD PTR ds:0xf7965f9b,cl
  41a888:	movlps QWORD PTR [ecx-0x32],xmm5
  41a88c:	pop    ss
  41a88d:	loope  0x41a855
  41a88f:	sub    dh,BYTE PTR [ecx]
  41a891:	test   BYTE PTR ds:0x4393a12,dl
  41a897:	ja     0x41a844
  41a899:	adc    dh,BYTE PTR [edi+edx*2]
  41a89c:	add    BYTE PTR [edi+ecx*4],dl
  41a89f:	mov    ch,0x44
  41a8a1:	push   edx
  41a8a2:	or     BYTE PTR [edi-0xfbfc36e],bh
  41a8a8:	data16 shr BYTE PTR [esi+ecx*4],1
  41a8ac:	xor    bh,bh
  41a8ae:	das    
  41a8af:	xchg   ecx,eax
  41a8b0:	push   esi
  41a8b1:	jbe    0x41a8ae
  41a8b3:	cwde   
  41a8b4:	repz mov ch,BYTE PTR [esi-0x64cbb81b]
  41a8bb:	push   esi
  41a8bc:	jnp    0x41a909
  41a8be:	cmp    ebx,DWORD PTR [ebp-0x62]
  41a8c1:	(bad)  
  41a8c2:	pop    eax
  41a8c3:	dec    DWORD PTR [eax+0x59ecf14a]
  41a8c9:	cli    
  41a8ca:	mov    esp,0x13f0a77f
  41a8cf:	pop    ds
  41a8d0:	aam    0x7c
  41a8d2:	into   
  41a8d3:	xchg   edi,eax
  41a8d4:	shl    DWORD PTR [edi+0x3ffff6ec],1
  41a8da:	cli    
  41a8db:	push   esi
  41a8dc:	mov    ds:0x49e7683b,eax
  41a8e1:	push   eax
  41a8e2:	test   DWORD PTR [edx],ebp
  41a8e4:	cwde   
  41a8e5:	push   esp
  41a8e6:	jge    0x41a8bb
  41a8e8:	jmp    0x233:0x27f6af35
  41a8ef:	dec    ecx
  41a8f0:	test   DWORD PTR [ecx-0x26],0xf9912e3f
  41a8f7:	sub    DWORD PTR [ebx+0x1c2f4811],0x4a21d17d
  41a901:	scas   al,BYTE PTR es:[edi]
  41a902:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a903:	out    0x7c,al
  41a905:	faddp  st(6),st
  41a907:	or     cl,BYTE PTR [edi]
  41a909:	fcom   QWORD PTR ds:0xb9182039
  41a90f:	es cdq 
  41a911:	sbb    DWORD PTR [esi-0x215f9674],edi
  41a917:	xchg   ebx,eax
  41a918:	iret   
  41a919:	retf   0x7ba3
  41a91c:	test   eax,0x48cb29cb
  41a921:	pop    ds
  41a922:	or     BYTE PTR ds:0xd55578fb,bh
  41a928:	or     ecx,esp
  41a92a:	inc    edx
  41a92b:	shl    BYTE PTR [eax],0xab
  41a92e:	retf   
  41a92f:	dec    edx
  41a930:	push   esp
  41a931:	and    al,0xf4
  41a933:	xchg   ebp,eax
  41a934:	xor    cl,bl
  41a936:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a937:	inc    ebx
  41a938:	inc    esp
  41a939:	mov    ch,0xb8
  41a93b:	gs and eax,0x94c291a5
  41a941:	mov    dh,0x93
  41a943:	ror    DWORD PTR [ebx+0x69],1
  41a946:	sub    ecx,DWORD PTR [esi]
  41a948:	jne    0x41a9a0
  41a94a:	mov    ebp,0xb87f4fc
  41a94f:	data16 icebp 
  41a951:	rcr    dh,0xbc
  41a954:	xor    eax,0xeca96592
  41a959:	(bad)  
  41a95a:	mov    ebx,0xbd302bc1
  41a95f:	mov    edx,esp
  41a961:	pop    ds
  41a962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a964:	(bad)  
  41a965:	jmp    0x41a906
  41a967:	inc    esp
  41a968:	test   eax,0x549ce60a
  41a96d:	jle    0x41a9ea
  41a96f:	push   0x1e
  41a971:	popa   
  41a972:	and    edi,DWORD PTR [eax+edx*8]
  41a975:	lds    ebx,FWORD PTR [ecx-0x65dac268]
  41a97b:	cwde   
  41a97c:	loop   0x41a912
  41a97e:	mov    bh,0x8d
  41a980:	mov    al,ds:0x4b7bf45e
  41a985:	mov    ecx,0x5a847644
  41a98a:	or     BYTE PTR [ebp+0x5d8aa230],0x6
  41a991:	and    BYTE PTR [ecx+0x67],0x9
  41a995:	fcmovbe st,st(7)
  41a997:	mov    cl,0xc
  41a999:	cmp    ebp,DWORD PTR [bx]
  41a99c:	adc    al,0x19
  41a99e:	pusha  
  41a99f:	fstp   DWORD PTR [edi]
  41a9a1:	jne    0x41a92a
  41a9a3:	fstp   TBYTE PTR [eax+0x13]
  41a9a6:	int    0x73
  41a9a8:	or     DWORD PTR [edx+0x7b45f5f7],esp
  41a9ae:	mov    dl,0xc5
  41a9b0:	cmp    al,0x37
  41a9b2:	cdq    
  41a9b3:	sar    BYTE PTR [esp+eiz*8+0x63e582cb],cl
  41a9ba:	and    ch,BYTE PTR [ebp+0xa]
  41a9bd:	loop   0x41a96a
  41a9bf:	test   eax,0x18b97926
  41a9c4:	aas    
  41a9c5:	jne    0x3117e2d7
  41a9cb:	jns    0x41a9c6
  41a9cd:	popa   
  41a9ce:	test   eax,0xcad2f954
  41a9d3:	stc    
  41a9d4:	rcr    BYTE PTR [eax],0x2f
  41a9d7:	pusha  
  41a9d8:	mov    eax,DWORD PTR [edi-0x5623e52b]
  41a9de:	inc    edi
  41a9df:	inc    esp
  41a9e0:	jb     0x41a984
  41a9e2:	sub    al,BYTE PTR [ecx-0xb]
  41a9e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9e6:	stc    
  41a9e7:	mov    eax,ds:0x7307d82a
  41a9ec:	pop    ebp
  41a9ed:	mov    cl,0x24
  41a9ef:	dec    ebx
  41a9f0:	sub    bh,BYTE PTR [ebx+0x4e]
  41a9f3:	gs jb  0x41a9a0
  41a9f6:	sbb    DWORD PTR [ebp-0x58],ebp
  41a9f9:	push   cs
  41a9fa:	out    0x7c,al
  41a9fc:	inc    edx
  41a9fd:	test   al,bl
  41a9ff:	inc    eax
  41aa00:	xchg   DWORD PTR [ebx+0x4983ebad],esp
  41aa06:	cld    
  41aa07:	xchg   esp,eax
  41aa08:	int    0xb9
  41aa0a:	ins    BYTE PTR es:[edi],dx
  41aa0b:	ds ja  0x41a9de
  41aa0e:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41aa10:	or     dh,BYTE PTR [edi]
  41aa12:	js     0x41a9fb
  41aa14:	xor    dl,BYTE PTR [edi]
  41aa16:	or     DWORD PTR [eax],ecx
  41aa18:	scas   eax,DWORD PTR es:[edi]
  41aa19:	mov    ebx,0x371b1fe
  41aa1e:	fsubr  QWORD PTR [eax-0x3]
  41aa21:	sbb    al,0x40
  41aa23:	int3   
  41aa24:	mov    eax,DWORD PTR [edx]
  41aa26:	xor    eax,esp
  41aa28:	scas   al,BYTE PTR es:[edi]
  41aa29:	sar    BYTE PTR [ecx+0x24fa5a9c],0xba
  41aa30:	dec    edi
  41aa31:	jge    0x41aa64
  41aa33:	jmp    0x41a9c4
  41aa35:	pop    es
  41aa36:	mov    edi,0x62a660e7
  41aa3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa3c:	(bad)  
  41aa3d:	out    dx,al
  41aa3e:	dec    eax
  41aa3f:	and    DWORD PTR [ecx],esp
  41aa41:	loopne 0x41aa81
  41aa43:	imul   esi,DWORD PTR [edx+0x2d],0xffffff9c
  41aa47:	or     dl,bh
  41aa49:	test   DWORD PTR [esi],esi
  41aa4b:	dec    DWORD PTR cs:[esi+0x55]
  41aa4f:	(bad)  
  41aa51:	sti    
  41aa52:	shl    bh,0xb3
  41aa55:	sti    
  41aa56:	int3   
  41aa57:	push   eax
  41aa58:	or     al,0x29
  41aa5a:	lods   eax,DWORD PTR ds:[esi]
  41aa5b:	push   ecx
  41aa5c:	cmp    dh,al
  41aa5e:	mov    ch,0xb1
  41aa60:	and    edx,DWORD PTR [esi]
  41aa62:	jno    0x41aa33
  41aa64:	adc    BYTE PTR [eax],ch
  41aa66:	xchg   edx,eax
  41aa67:	sbb    bh,BYTE PTR [ebx+esi*4-0xa]
  41aa6b:	movups xmm1,XMMWORD PTR [ebp-0x77]
  41aa6f:	push   es
  41aa70:	das    
  41aa71:	xchg   edx,eax
  41aa72:	sahf   
  41aa73:	mov    eax,0x1c801a71
  41aa78:	push   eax
  41aa79:	and    bh,BYTE PTR [ecx+0x4b]
  41aa7c:	test   BYTE PTR [ebx+0x163a376f],al
  41aa82:	sbb    bl,cl
  41aa84:	jns    0x41aa0c
  41aa86:	rcl    DWORD PTR [esi],1
  41aa88:	in     eax,dx
  41aa89:	adc    eax,0xe60292a0
  41aa8e:	jb     0x41aad4
  41aa90:	outs   dx,BYTE PTR ds:[esi]
  41aa91:	jb     0x41aacc
  41aa93:	out    0x95,eax
  41aa95:	icebp  
  41aa96:	jne    0x41ab04
  41aa98:	mov    ds:0x4ff30ff1,eax
  41aa9d:	mov    edi,0xd4a15ea2
  41aaa2:	cld    
  41aaa3:	fild   QWORD PTR [ebp+0x2c]
  41aaa6:	in     al,dx
  41aaa7:	ins    DWORD PTR es:[edi],dx
  41aaa8:	imul   esi,DWORD PTR [esi-0x29b52bf8],0x43
  41aaaf:	jo     0x41aab5
  41aab1:	repz jo 0x41ab27
  41aab4:	pushf  
  41aab5:	and    ebp,DWORD PTR [eax]
  41aab7:	sub    eax,0xe4918ade
  41aabc:	push   edi
  41aabd:	and    BYTE PTR [ecx],al
  41aabf:	xor    bl,BYTE PTR [esi]
  41aac1:	lods   al,BYTE PTR ss:[esi]
  41aac3:	and    ah,BYTE PTR [eax-0xb]
  41aac6:	fnstenv [ecx+eiz*4]
  41aac9:	sti    
  41aaca:	fisubr DWORD PTR [edi]
  41aacc:	mov    bl,0xb
  41aace:	pop    edi
  41aacf:	and    eax,0x354c71e2
  41aad4:	dec    ebp
  41aad5:	pop    esi
  41aad6:	and    DWORD PTR [ebp+eax*8+0x7b],eax
  41aada:	stos   BYTE PTR es:[edi],al
  41aadb:	pushf  
  41aadc:	scas   al,BYTE PTR es:[edi]
  41aadd:	imul   edx,DWORD PTR [ebx+0x788a26cf],0x40cc9da9
  41aae7:	js     0x41aa6e
  41aae9:	sub    dh,BYTE PTR [edx+ebx*8]
  41aaec:	scas   eax,DWORD PTR es:[edi]
  41aaed:	cmp    eax,0x80831b3f
  41aaf2:	loope  0x41aa8e
  41aaf4:	mov    al,0x65
  41aaf6:	sar    ecx,0x22
  41aaf9:	ja     0x41aacb
  41aafb:	xchg   edi,eax
  41aafc:	ins    BYTE PTR es:[edi],dx
  41aafd:	loop   0x41aae9
  41aaff:	cdq    
  41ab00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab01:	clc    
  41ab02:	fldenv [edi+0xc]
  41ab05:	push   ds
  41ab06:	xchg   BYTE PTR [ecx+ecx*4+0x5e],al
  41ab0a:	xchg   esp,eax
  41ab0b:	and    esi,DWORD PTR [ecx]
  41ab0d:	sbb    ebp,edi
  41ab0f:	mov    WORD PTR [edx+0x20f41f9b],cs
  41ab15:	jmp    0x41aadc
  41ab17:	inc    ebx
  41ab18:	push   0x6e
  41ab1a:	inc    eax
  41ab1b:	add    eax,0xb0879c04
  41ab20:	fwait
  41ab21:	or     DWORD PTR [edx+eiz*1-0x1817922c],edx
  41ab28:	lds    ebx,FWORD PTR [ecx+0x1bf70d9c]
  41ab2e:	out    0x23,al
  41ab30:	int    0x8e
  41ab32:	jecxz  0x41ab8a
  41ab34:	nop
  41ab35:	cdq    
  41ab36:	inc    ebp
  41ab37:	and    dl,ch
  41ab39:	mov    dh,0x4e
  41ab3b:	xor    ah,ah
  41ab3d:	mov    bl,0x32
  41ab3f:	push   ecx
  41ab40:	fistp  DWORD PTR [eax+edi*1-0x39]
  41ab44:	loopne 0x41ab8b
  41ab46:	lahf   
  41ab47:	xchg   BYTE PTR [edx-0xb],ch
  41ab4a:	scas   ax,WORD PTR es:[edi]
  41ab4c:	mov    DWORD PTR [edi+0x4db06012],ebx
  41ab52:	repz or BYTE PTR [edx],al
  41ab55:	add    edi,esi
  41ab57:	js     0x41aba0
  41ab59:	ds adc eax,0x9e69ba1b
  41ab5f:	or     al,0xce
  41ab61:	cmp    ah,BYTE PTR [eax]
  41ab63:	dec    edx
  41ab64:	adc    DWORD PTR [edi+0x42f7dc70],ecx
  41ab6a:	sar    BYTE PTR [ebp-0x61a960a0],0xef
  41ab71:	jae    0x41abdf
  41ab73:	push   eax
  41ab74:	and    ah,bh
  41ab76:	scas   eax,DWORD PTR es:[edi]
  41ab77:	outs   dx,BYTE PTR ds:[esi]
  41ab78:	mov    cl,0xec
  41ab7a:	pop    ebx
  41ab7b:	xchg   edi,eax
  41ab7c:	ret    
  41ab7d:	icebp  
  41ab7e:	aas    
  41ab7f:	loope  0x41ab8b
  41ab81:	dec    ecx
  41ab82:	cmp    eax,0xd8bd8fd9
  41ab87:	inc    ebp
  41ab88:	dec    ebx
  41ab89:	add    BYTE PTR [edi-0x13d3006a],bh
  41ab8f:	jnp    0x41ab85
  41ab91:	fistp  WORD PTR [esp+eax*4]
  41ab94:	mov    ecx,0x2a280a43
  41ab99:	ret    
  41ab9a:	fld    QWORD PTR [ebx]
  41ab9c:	adc    al,0x65
  41ab9e:	push   ecx
  41ab9f:	popf   
  41aba0:	ret    0x3781
  41aba3:	and    DWORD PTR [ebx],ebx
  41aba5:	cmp    ah,BYTE PTR [edi-0xc]
  41aba8:	adc    ebx,DWORD PTR [ecx-0x6e]
  41abab:	xchg   ecx,eax
  41abac:	nop
  41abad:	lahf   
  41abae:	jl     0x41abc3
  41abb0:	push   edx
  41abb1:	lods   al,BYTE PTR ds:[esi]
  41abb2:	xor    eax,0x221f8e59
  41abb7:	fimul  WORD PTR [edx+edx*2]
  41abba:	js     0x41abbd
  41abbc:	std    
  41abbd:	mov    al,0xa3
  41abbf:	mov    eax,ds:0x5083a368
  41abc4:	or     bh,BYTE PTR [edx+0x2f31a38e]
  41abca:	mov    esi,0x53e0594a
  41abcf:	js     0x41ab65
  41abd1:	stc    
  41abd2:	and    ebp,ebx
  41abd4:	setg   al
  41abd7:	stos   DWORD PTR es:[edi],eax
  41abd8:	inc    ecx
  41abd9:	ja     0x41ab97
  41abdb:	fidivr WORD PTR [edx+0x7be249e1]
  41abe1:	jecxz  0x41ac46
  41abe3:	loope  0x41ac26
  41abe5:	out    dx,al
  41abe6:	or     al,0xb9
  41abe8:	icebp  
  41abe9:	call   0x78a0779f
  41abee:	jno    0x41ab97
  41abf0:	loop   0x41abd9
  41abf2:	scas   al,BYTE PTR es:[edi]
  41abf3:	cmp    cl,BYTE PTR [edi]
  41abf5:	in     al,dx
  41abf6:	sub    DWORD PTR [eax-0x12],esp
  41abf9:	xor    eax,0x9de1e0e6
  41abfe:	aam    0x2d
  41ac00:	or     al,0x88
  41ac02:	pop    edi
  41ac03:	or     ebx,esp
  41ac05:	inc    esi
  41ac06:	mov    eax,DWORD PTR [edx+0x6a]
  41ac09:	dec    ecx
  41ac0a:	inc    ebx
  41ac0b:	shr    BYTE PTR [esi-0x54],cl
  41ac0e:	int3   
  41ac0f:	cwde   
  41ac10:	xchg   esi,eax
  41ac11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac12:	adc    DWORD PTR [ecx-0x45],edi
  41ac15:	cmp    BYTE PTR [edi+0xb1a347d],0xea
  41ac1c:	int    0x8f
  41ac1e:	mov    ebx,0xa027fc53
  41ac23:	fucomp st(7)
  41ac25:	setg   BYTE PTR [edx]
  41ac28:	inc    esp
  41ac29:	and    al,ch
  41ac2b:	mov    cl,0x20
  41ac2d:	fstp   TBYTE PTR [edi-0x6b4f4c31]
  41ac33:	jmp    0x6b80:0xaa588a81
  41ac3a:	pusha  
  41ac3b:	cmc    
  41ac3c:	cdq    
  41ac3d:	mov    es,edi
  41ac3f:	sub    DWORD PTR [edi+0x17],ecx
  41ac42:	xor    eax,0xd37d41dd
  41ac47:	and    DWORD PTR [edx],ebp
  41ac49:	xlat   BYTE PTR ds:[ebx]
  41ac4a:	repz jmp 0xc855:0x5d516dfb
  41ac52:	rol    DWORD PTR [ecx-0x793381ef],0x80
  41ac59:	(bad)  
  41ac5a:	in     al,dx
  41ac5b:	pop    esp
  41ac5c:	cmp    ecx,edi
  41ac5e:	mov    edx,0xa792a0ba
  41ac63:	jnp    0x41ac38
  41ac65:	icebp  
  41ac66:	jmp    0x41ac77
  41ac68:	pop    es
  41ac69:	ss fucom st(5)
  41ac6c:	jp     0x41ac3f
  41ac6e:	(bad)  
  41ac6f:	aaa    
  41ac70:	sti    
  41ac71:	loope  0x41acd2
  41ac73:	sub    dl,BYTE PTR [ebp+0x36993dd8]
  41ac79:	mov    eax,ebx
  41ac7b:	xor    BYTE PTR [edx],ah
  41ac7d:	cmp    DWORD PTR [edx],0xc66dd211
  41ac83:	add    al,BYTE PTR [edx]
  41ac85:	fiadd  WORD PTR [ecx]
  41ac87:	hlt    
  41ac88:	push   cs
  41ac89:	mov    ?,WORD PTR [ebp+0x64]
  41ac8c:	iret   
  41ac8d:	cli    
  41ac8e:	fsubr  QWORD PTR [ebx]
  41ac90:	bound  edx,QWORD PTR [ebp-0x3e]
  41ac93:	sub    BYTE PTR [edx-0x7e],ch
  41ac96:	inc    ebp
  41ac97:	pop    ecx
  41ac98:	and    ebx,DWORD PTR [ecx]
  41ac9a:	in     al,dx
  41ac9b:	cmc    
  41ac9c:	inc    ecx
  41ac9d:	retf   
  41ac9e:	lods   al,BYTE PTR ds:[esi]
  41ac9f:	pop    edi
  41aca0:	imul   ecx,DWORD PTR [edx-0x3b27ed58],0x26
  41aca7:	cmp    BYTE PTR [edx],dl
  41aca9:	mov    dh,0xe2
  41acab:	popf   
  41acac:	inc    esp
  41acad:	xchg   edi,eax
  41acae:	mov    dh,0xb1
  41acb0:	gs inc ebx
  41acb2:	add    DWORD PTR [ebx],esi
  41acb4:	retf   
  41acb5:	mov    ds:0x504b60c4,al
  41acba:	das    
  41acbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acbc:	push   ebp
  41acbd:	pop    ecx
  41acbe:	adc    esp,DWORD PTR [esi+0x75]
  41acc1:	adc    eax,0x935e96c9
  41acc6:	sahf   
  41acc7:	outs   dx,BYTE PTR ds:[esi]
  41acc8:	loope  0x41ad1d
  41acca:	sub    al,0xc6
  41accc:	loopne 0x41ad2d
  41acce:	outs   dx,DWORD PTR ds:[esi]
  41accf:	fs aaa 
  41acd1:	inc    eax
  41acd2:	adc    esi,DWORD PTR [esi-0x7d]
  41acd5:	sbb    BYTE PTR [ecx-0x70],0x34
  41acd9:	mov    ch,0xc5
  41acdb:	aam    0x33
  41acdd:	call   0xb0f5d0f
  41ace2:	mov    ebp,0xb658b6bf
  41ace7:	int3   
  41ace8:	test   dl,dh
  41acea:	and    BYTE PTR [esi-0x341d1352],dh
  41acf0:	inc    ecx
  41acf1:	test   DWORD PTR [ebx+ecx*4+0x17abb23e],0xaae9d76
  41acfc:	in     al,0xc1
  41acfe:	adc    esi,0x54c3b09b
  41ad04:	mov    esp,0x4885b28
  41ad09:	add    DWORD PTR [ecx],edi
  41ad0b:	stc    
  41ad0c:	jns    0x41acd4
  41ad0e:	mov    esp,DWORD PTR [ebx]
  41ad10:	mov    al,BYTE PTR [edi-0x41]
  41ad13:	rcl    BYTE PTR [esi],cl
  41ad15:	or     DWORD PTR [ecx],ecx
  41ad17:	mov    eax,ds:0x5275226d
  41ad1c:	push   es
  41ad1d:	inc    ebp
  41ad1e:	sbb    DWORD PTR [esi+0x9f5a8d7],0xffffffcf
  41ad25:	mov    ebp,0x2f3640d1
  41ad2a:	loopne 0x41ad5b
  41ad2c:	sub    esp,DWORD PTR [esi+0x6a72844f]
  41ad32:	in     eax,dx
  41ad33:	dec    ecx
  41ad34:	out    dx,eax
  41ad35:	repnz sti 
  41ad37:	add    esi,edx
  41ad39:	mov    esp,0x49097378
  41ad3e:	and    eax,DWORD PTR [ebx+0x67]
  41ad41:	stc    
  41ad42:	neg    DWORD PTR [edi+0x664a79ac]
  41ad48:	add    edi,0x3
  41ad4b:	in     al,dx
  41ad4c:	push   ebx
  41ad4d:	std    
  41ad4e:	shrd   DWORD PTR [edi-0x4f],esi,0xb
  41ad53:	ins    BYTE PTR es:[edi],dx
  41ad54:	pop    edi
  41ad55:	retf   
  41ad56:	inc    esi
  41ad57:	cmp    al,0x46
  41ad59:	pop    ds
  41ad5a:	pop    eax
  41ad5b:	lock push esi
  41ad5d:	push   ebx
  41ad5e:	imul   ebx
  41ad60:	cmp    ah,BYTE PTR [edx+0x2cd80052]
  41ad66:	mov    al,0xb8
  41ad68:	jae    0x41ad85
  41ad6a:	dec    edx
  41ad6b:	jge    0x41ad37
  41ad6d:	shl    DWORD PTR [edi+0x1dc2dcd4],1
  41ad73:	push   cs
  41ad74:	test   DWORD PTR [esi],ecx
  41ad76:	jbe    0x41ad5f
  41ad78:	test   DWORD PTR [ecx+0x3c],ebp
  41ad7b:	mov    bl,0xc0
  41ad7d:	mov    edi,DWORD PTR cs:[edx-0x65]
  41ad81:	cmp    eax,0x13b1dde2
  41ad86:	or     esi,esi
  41ad88:	fcom   QWORD PTR [eax+eax*1]
  41ad8b:	sub    bh,dh
  41ad8d:	in     eax,dx
  41ad8e:	ret    
  41ad8f:	inc    eax
  41ad90:	sbb    ebp,DWORD PTR [ecx-0x5]
  41ad93:	xor    al,0x3c
  41ad95:	mov    esp,0x6800064f
  41ad9a:	add    BYTE PTR [eax],bl
  41ad9c:	jmp    0x41ad46
  41ad9e:	push   ecx
  41ad9f:	push   ebx
  41ada0:	loope  0x41addf
  41ada2:	sahf   
  41ada3:	in     al,0x52
  41ada5:	mov    eax,0x42715105
  41adaa:	imul   DWORD PTR [edi]
  41adac:	cmp    BYTE PTR [edi+ebx*2+0x269a805b],ch
  41adb3:	shl    cl,1
  41adb5:	cmp    BYTE PTR [edx],bh
  41adb7:	test   DWORD PTR [ecx-0xc],eax
  41adba:	lods   eax,DWORD PTR ds:[esi]
  41adbb:	loopne 0x41ae35
  41adbd:	cmp    al,0x82
  41adbf:	pop    eax
  41adc0:	rcl    BYTE PTR [eax-0x6c],cl
  41adc3:	cmp    al,0xc3
  41adc5:	in     eax,0x20
  41adc7:	clc    
  41adc8:	and    eax,0xce5a065e
  41adcd:	mov    ch,0xe2
  41adcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41add0:	(bad)  
  41add1:	leave  
  41add2:	aaa    
  41add3:	mov    esp,0x772a556a
  41add8:	mov    ch,0x52
  41adda:	and    dh,BYTE PTR [ecx]
  41addc:	call   0x4d73:0x15f1ca63
  41ade3:	mov    ah,BYTE PTR [ecx]
  41ade5:	xchg   edi,eax
  41ade6:	and    al,0x98
  41ade8:	(bad)
  41adeb:	pop    esp
  41adec:	xchg   edx,eax
  41aded:	sub    dl,BYTE PTR [esi-0x4b]
  41adf0:	and    eax,ebp
  41adf2:	(bad)
  41adf5:	iret   
  41adf6:	mov    eax,DWORD PTR [esi+0x4d844240]
  41adfc:	in     eax,0x32
  41adfe:	inc    ebp
  41adff:	push   ebp
  41ae00:	mov    WORD PTR [esi-0x304dedc],cs
  41ae06:	fs add eax,0x2e502027
  41ae0c:	fild   QWORD PTR [esi+0x71]
  41ae0f:	add    BYTE PTR [ecx],bh
  41ae11:	in     al,0x58
  41ae13:	ret    0x6a79
  41ae16:	ja     0x41ae68
  41ae18:	out    0x47,al
  41ae1a:	cmp    dl,BYTE PTR [edx-0x79281b90]
  41ae20:	scas   eax,DWORD PTR es:[edi]
  41ae21:	xchg   esp,eax
  41ae22:	sbb    eax,0x2c56a5e5
  41ae27:	ins    BYTE PTR es:[edi],dx
  41ae28:	(bad)  
  41ae29:	push   esi
  41ae2a:	ret    0x5d85
  41ae2d:	mov    ecx,0xa0544551
  41ae32:	xchg   DWORD PTR [ebx-0x33a16f6b],eax
  41ae38:	bound  esp,QWORD PTR [ecx+0x7afd9167]
  41ae3e:	sahf   
  41ae3f:	bound  edx,QWORD PTR [esi]
  41ae41:	inc    esp
  41ae42:	aad    0x8d
  41ae44:	pusha  
  41ae45:	call   0xc091:0xf2cae36d
  41ae4c:	sti    
  41ae4d:	cmp    DWORD PTR [esp+ebx*4-0x3382df98],esi
  41ae54:	xlat   BYTE PTR ds:[ebx]
  41ae55:	push   eax
  41ae56:	sahf   
  41ae57:	mov    al,ds:0x99f81c92
  41ae5c:	mov    ch,0x1e
  41ae5e:	mov    esp,0x387fa885
  41ae63:	push   0xa558c23b
  41ae68:	sar    BYTE PTR [edi],1
  41ae6a:	dec    esp
  41ae6b:	std    
  41ae6c:	xor    ch,BYTE PTR [ebx]
  41ae6e:	nop
  41ae6f:	xchg   esi,eax
  41ae70:	mov    cl,0xfe
  41ae72:	xchg   edi,eax
  41ae73:	cmp    DWORD PTR [ebp-0xa],ecx
  41ae76:	sbb    al,0xe3
  41ae78:	cmp    eax,0xcdbe316f
  41ae7d:	xlat   BYTE PTR ds:[ebx]
  41ae7e:	fs push ss
  41ae80:	imul   ecx,DWORD PTR [ebx-0x7a],0xffffffa9
  41ae84:	mov    ch,0x36
  41ae86:	enter  0x4759,0xa2
  41ae8a:	and    DWORD PTR [ecx+0x69c32a95],ebx
  41ae90:	sar    bl,cl
  41ae92:	fldcw  WORD PTR [esi]
  41ae94:	mov    eax,ds:0xe287de53
  41ae99:	pop    esp
  41ae9a:	ja     0x41aebd
  41ae9c:	call   0x8d859751
  41aea1:	add    al,0x9f
  41aea3:	mov    eax,0xdfb73f9e
  41aea8:	jl     0x41ae81
  41aeaa:	mov    eax,0x2698ed5f
  41aeaf:	dec    edi
  41aeb0:	call   0xf062ad6e
  41aeb5:	or     eax,0xcfb24f3c
  41aeba:	loope  0x41aebc
  41aebc:	sub    cl,BYTE PTR [eax]
  41aebe:	fcom   st(7)
  41aec0:	hlt    
  41aec1:	sbb    dl,bl
  41aec3:	push   esi
  41aec4:	js     0x41aeb2
  41aec6:	loope  0x41af1e
  41aec8:	or     DWORD PTR [esi+0x5d],0x2eca0c2a
  41aecf:	dec    ecx
  41aed0:	adc    DWORD PTR [eax-0x6a],edx
  41aed3:	xchg   edx,eax
  41aed4:	or     DWORD PTR [eax],esi
  41aed6:	pop    ds
  41aed7:	xchg   ecx,eax
  41aed8:	sub    esi,DWORD PTR [esi-0x31]
  41aedb:	sbb    eax,0xcf6e61ef
  41aee0:	test   DWORD PTR [ebx+0x7b1ec562],esi
  41aee6:	imul   ecx,DWORD PTR [ebp+0x37261efc],0x12
  41aeed:	push   0x2bb9992e
  41aef2:	push   ss
  41aef3:	xor    al,0x7
  41aef5:	jg     0x41aeba
  41aef7:	mov    edx,0xac900355
  41aefc:	sub    al,0x31
  41aefe:	adc    al,0xa5
  41af00:	arpl   si,bp
  41af02:	ds enter 0x3f37,0xa5
  41af07:	fsub   DWORD PTR [edi]
  41af09:	add    edi,DWORD PTR [esi+0x49c2b699]
  41af0f:	data16 fcmovbe st,st(3)
  41af12:	leave  
  41af13:	mov    al,ds:0xb3d04148
  41af18:	xchg   esi,eax
  41af19:	xchg   edx,eax
  41af1a:	dec    ebx
  41af1b:	mov    edx,0x2fee7672
  41af20:	bound  eax,QWORD PTR [edx-0x48]
  41af23:	push   DWORD PTR [edx-0x63a538ca]
  41af29:	test   DWORD PTR [ebp+edx*2-0x77],ebp
  41af2d:	sub    DWORD PTR [eax-0x45e97099],ecx
  41af33:	and    eax,0x3d211808
  41af38:	sub    al,0x70
  41af3a:	xor    DWORD PTR [ebp+0x1a4814cf],ecx
  41af40:	xchg   ebx,eax
  41af41:	mov    ds:0xbbba0879,eax
  41af46:	pop    ebp
  41af47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af48:	stos   BYTE PTR es:[edi],al
  41af49:	pop    esp
  41af4a:	fwait
  41af4b:	ins    BYTE PTR es:[edi],dx
  41af4c:	icebp  
  41af4d:	dec    esp
  41af4e:	sub    esi,DWORD PTR [ebp+0x42]
  41af51:	xchg   ebx,eax
  41af52:	imul   eax,ebp,0x36ec414d
  41af58:	or     eax,0xb3530f4f
  41af5d:	push   esp
  41af5e:	dec    ebp
  41af5f:	cmp    al,0xb9
  41af61:	mov    ecx,0x7409ad2d
  41af66:	mov    BYTE PTR [ecx+ebx*8],ch
  41af69:	js     0x41af2f
  41af6b:	retf   0x6a68
  41af6e:	xlat   BYTE PTR ds:[ebx]
  41af6f:	test   eax,0x2dc9fe64
  41af74:	(bad)
  41af78:	mov    WORD PTR [ecx+0x5b],ss
  41af7b:	fiadd  WORD PTR [esi+eax*4-0x79]
  41af7f:	loope  0x41af39
  41af81:	mov    esp,ss
  41af83:	xchg   edx,eax
  41af84:	test   DWORD PTR ds:0xd47f434b,esi
  41af8a:	test   BYTE PTR [ecx+eiz*1-0x2f],ah
  41af8e:	fnsave [eax-0x4f]
  41af91:	and    ebp,DWORD PTR [ebp+0x7e]
  41af94:	popa   
  41af95:	mov    eax,ds:0x12cfa592
  41af9a:	adc    al,0x19
  41af9c:	jge    0x41afb9
  41af9e:	and    BYTE PTR [ecx],0x2b
  41afa1:	xor    DWORD PTR [edx],ecx
  41afa3:	das    
  41afa4:	loop   0x41b003
  41afa6:	imul   edi,DWORD PTR [esi+0xc06a6d2],0xd7ca6312
  41afb0:	jne    0x41af41
  41afb2:	dec    ecx
  41afb3:	jnp    0x41afa3
  41afb5:	sbb    BYTE PTR [esi+0x6c],dh
  41afb8:	jmp    0x41af68
  41afba:	imul   edx,eax,0xffffffd3
  41afbd:	fadd   DWORD PTR [ecx]
  41afbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afc0:	push   0x30
  41afc2:	or     BYTE PTR [edx],al
  41afc4:	repz sub DWORD PTR [ecx],0x18
  41afc8:	dec    edi
  41afc9:	push   edx
  41afca:	cmp    bh,BYTE PTR [eax]
  41afcc:	push   ecx
  41afcd:	and    cl,BYTE PTR [esi+0x7f174c8f]
  41afd3:	dec    edx
  41afd4:	jge    0x41afd4
  41afd6:	mov    eax,0x4d5b7e9e
  41afdb:	mov    bl,0x1c
  41afdd:	jecxz  0x41afc6
  41afdf:	jne    0x41af98
  41afe1:	data16 fcomi st,st(5)
  41afe4:	xchg   BYTE PTR [ebx],bl
  41afe6:	mov    ecx,0x983a33fa
  41afeb:	xchg   ebx,eax
  41afec:	pop    ds
  41afed:	sbb    eax,0x33c94a2
  41aff2:	xchg   ebx,eax
  41aff3:	mov    DWORD PTR [ebx-0x6f068610],ebp
  41aff9:	xchg   eax,esi
  41affb:	mov    ah,0x71
  41affd:	adc    al,0x83
  41afff:	inc    esi
  41b000:	nop
  41b001:	daa    
  41b002:	sub    eax,0xa6cf4b0c
  41b007:	ss aaa 
  41b009:	add    edi,esp
  41b00b:	mov    bh,al
  41b00d:	fwait
  41b00e:	int    0xf
  41b010:	lods   al,BYTE PTR ds:[esi]
  41b011:	and    al,0xb7
  41b013:	jl     0x41affc
  41b015:	push   esp
  41b016:	ss push esi
  41b018:	adc    al,0x41
  41b01a:	jecxz  0x41afce
  41b01c:	pushf  
  41b01d:	jne    0x41afe6
  41b01f:	icebp  
  41b020:	mov    eax,ds:0x4f43ad4b
  41b025:	test   eax,0x3f13da6e
  41b02a:	out    dx,al
  41b02b:	jns    0x41afff
  41b02d:	cmp    ah,BYTE PTR [esi]
  41b02f:	mov    al,0x76
  41b031:	stos   BYTE PTR es:[edi],al
  41b032:	push   ecx
  41b033:	call   0x35313df3
  41b038:	hlt    
  41b039:	mov    ecx,0xaccd398
  41b03e:	das    
  41b03f:	aam    0xcb
  41b041:	add    BYTE PTR [edx-0x1294404d],0xca
  41b048:	mov    ebp,0xe3c66a6c
  41b04d:	mov    WORD PTR [edx],ds
  41b04f:	xor    BYTE PTR ds:0xe9ea64fa,0xcc
  41b056:	mov    eax,0x6887baa1
  41b05b:	xor    DWORD PTR [esi+0xf],edx
  41b05e:	sub    BYTE PTR ds:0xf407d894,bh
  41b064:	pop    edi
  41b065:	adc    al,0xa7
  41b067:	frstor [ebp+ebp*1-0x56]
  41b06b:	ds inc ecx
  41b06d:	jb     0x41b0df
  41b06f:	and    DWORD PTR [esi-0x10],ebp
  41b072:	pop    edi
  41b073:	add    DWORD PTR [esi-0x41],eax
  41b076:	fdivr  DWORD PTR [edi+0x35]
  41b079:	push   cs
  41b07a:	outs   dx,DWORD PTR ds:[esi]
  41b07b:	xor    ah,ah
  41b07d:	dec    ebx
  41b07e:	push   ebx
  41b07f:	mov    bl,0xaf
  41b081:	fisttp QWORD PTR [eax-0x2b]
  41b084:	pop    eax
  41b085:	jmp    0x41b076
  41b087:	(bad)  
  41b088:	in     eax,0xb0
  41b08a:	ins    BYTE PTR es:[edi],dx
  41b08b:	jo     0x41b09d
  41b08d:	ss scas ax,WORD PTR es:[edi]
  41b090:	xlat   BYTE PTR ds:[ebx]
  41b091:	cmc    
  41b092:	jns    0x41b0ea
  41b094:	add    eax,0x15133ea1
  41b099:	pop    esp
  41b09a:	jmp    0xb2493bd2
  41b09f:	mov    cl,0x9c
  41b0a1:	into   
  41b0a2:	mov    dh,0xff
  41b0a4:	ja     0x41b08e
  41b0a6:	inc    edi
  41b0a7:	bsr    eax,DWORD PTR [edi+0x2b9c5c7b]
  41b0ae:	stos   DWORD PTR es:[edi],eax
  41b0af:	scas   al,BYTE PTR es:[edi]
  41b0b0:	jnp    0x41b0cb
  41b0b2:	xlat   BYTE PTR ds:[ebx]
  41b0b3:	setb   bl
  41b0b6:	adc    al,0xd5
  41b0b8:	mov    cl,0x15
  41b0ba:	mov    esp,0xb42c38
  41b0bf:	les    edx,FWORD PTR [ebx]
  41b0c1:	jmp    0x714b:0x5d3dddba
  41b0c8:	dec    ecx
  41b0c9:	pop    ecx
  41b0ca:	sbb    al,0x2b
  41b0cc:	lock mov dh,0x56
  41b0cf:	mov    bh,0xfe
  41b0d1:	fldpi  
  41b0d3:	pop    esp
  41b0d4:	enter  0xbf97,0xc
  41b0d8:	and    DWORD PTR [ebp+0x6c],esi
  41b0db:	fcmovu st,st(5)
  41b0dd:	and    al,0xa7
  41b0df:	pop    edi
  41b0e0:	sub    al,0xaf
  41b0e2:	out    0x86,al
  41b0e4:	pop    esi
  41b0e5:	outs   dx,DWORD PTR ds:[esi]
  41b0e6:	aam    0x62
  41b0e8:	sahf   
  41b0e9:	xor    eax,DWORD PTR [edx+0x125f57c6]
  41b0ef:	mov    edx,0xc755985e
  41b0f4:	inc    ebp
  41b0f5:	inc    edx
  41b0f6:	call   0x934311c1
  41b0fb:	pop    ecx
  41b0fc:	aad    0xed
  41b0fe:	cwde   
  41b0ff:	jns    0x41b10e
  41b101:	dec    edi
  41b102:	adc    eax,0x41ab7ebb
  41b107:	and    edx,eax
  41b109:	les    ecx,FWORD PTR [edx]
  41b10b:	mov    ds:0xdebe14a1,eax
  41b110:	or     eax,0xe757c781
  41b115:	jns    0x41b158
  41b117:	dec    edx
  41b118:	push   0x5ee5ed91
  41b11d:	test   eax,0xa160b6f2
  41b122:	jae    0x41b0d0
  41b124:	aas    
  41b125:	gs ds jne 0x41b169
  41b129:	fdivr  QWORD PTR [eax-0x641e84e7]
  41b12f:	push   cs
  41b130:	stos   BYTE PTR es:[edi],al
  41b131:	test   eax,0xc64d7e9c
  41b136:	gs sub eax,0xd3566333
  41b13c:	out    dx,eax
  41b13d:	jae    0x41b174
  41b13f:	bnd jno 0x41b0cb
  41b142:	mov    cl,0x9e
  41b144:	cmp    dh,ch
  41b146:	or     dl,dh
  41b148:	sub    DWORD PTR [ebx+0x3ef20d54],0x5811e22e
  41b152:	mov    WORD PTR ds:0xd8128373,cs
  41b158:	dec    edi
  41b159:	and    DWORD PTR [edx+0x54a8dfde],0x30
  41b160:	lds    ebx,FWORD PTR [edx-0x656a974d]
  41b166:	imul   ebx,DWORD PTR [edx+0x41],0x9dc1a
  41b16d:	call   0x6721dfbd
  41b172:	add    al,0xfa
  41b174:	jns    0x41b113
  41b176:	clc    
  41b177:	mov    cs,WORD PTR [edi]
  41b179:	aas    
  41b17a:	popa   
  41b17b:	jmp    0x3f63fec1
  41b180:	adc    ebp,esi
  41b182:	or     bl,bl
  41b184:	jmp    0xfecc2aa0
  41b189:	shl    BYTE PTR [ecx-0x10fa72fb],1
  41b18f:	pusha  
  41b190:	push   ds
  41b191:	mov    cl,BYTE PTR [ebx-0x38]
  41b194:	xchg   esp,eax
  41b195:	out    dx,eax
  41b196:	aaa    
  41b197:	jns    0x41b12d
  41b199:	hlt    
  41b19a:	mov    ebx,0xf562c5a
  41b19f:	sbb    al,0x8b
  41b1a1:	nop
  41b1a2:	repz or BYTE PTR [ebp+0x34491971],bl
  41b1a9:	pop    eax
  41b1aa:	test   BYTE PTR ds:0x4334d2e4,ah
  41b1b0:	jno    0x41b143
  41b1b2:	mov    BYTE PTR [esi-0x8],dh
  41b1b5:	xor    al,0xf8
  41b1b7:	fs dec edx
  41b1b9:	call   eax
  41b1bb:	cli    
  41b1bc:	dec    ebx
  41b1bd:	and    ebx,edx
  41b1bf:	dec    ebp
  41b1c0:	shl    BYTE PTR ds:0xa0a1671f,1
  41b1c6:	loop   0x41b185
  41b1c8:	popa   
  41b1c9:	xchg   BYTE PTR [eax+0x5b],al
  41b1cc:	pop    ecx
  41b1cd:	cmp    dl,dl
  41b1cf:	cld    
  41b1d0:	push   esp
  41b1d1:	clc    
  41b1d2:	cli    
  41b1d3:	rol    BYTE PTR [edi+0x462304ae],0x11
  41b1da:	xchg   edx,ebp
  41b1dc:	pop    edx
  41b1dd:	lock xlat BYTE PTR ds:[ebx]
  41b1df:	ja     0x41b252
  41b1e1:	popa   
  41b1e2:	lods   eax,DWORD PTR ds:[esi]
  41b1e3:	push   ds
  41b1e4:	mov    dl,0xd9
  41b1e6:	add    DWORD PTR [esp+ebp*4],edx
  41b1e9:	xchg   esi,eax
  41b1ea:	mov    dh,0xcf
  41b1ec:	mov    dh,BYTE PTR [edx]
  41b1ee:	mov    esp,0xe370b6c3
  41b1f3:	jo     0x41b20b
  41b1f5:	mov    ds:0x93ccd40a,al
  41b1fa:	stos   DWORD PTR es:[edi],eax
  41b1fb:	sbb    al,BYTE PTR [ebx+ecx*4+0x57adc730]
  41b202:	cmp    DWORD PTR [eax-0x5d],0x59
  41b206:	and    al,cl
  41b208:	mov    bh,0xd7
  41b20a:	rcr    dh,1
  41b20c:	fild   DWORD PTR [eax]
  41b20e:	(bad)  
  41b20f:	repz sbb al,0x76
  41b212:	jo     0x41b224
  41b214:	imul   esp,DWORD PTR [esp+ebp*2],0x60e1adc9
  41b21b:	imul   ecx,DWORD PTR [esp+edi*8],0xffffffff
  41b21f:	ficom  WORD PTR [edx]
  41b221:	pop    ebx
  41b222:	lds    edi,FWORD PTR [edi+esi*4+0x4e]
  41b226:	sub    BYTE PTR [ebx+0x78],al
  41b229:	das    
  41b22a:	inc    esp
  41b22b:	xor    al,0x90
  41b22d:	not    DWORD PTR [esi-0x1b]
  41b230:	je     0x41b20b
  41b232:	dec    ebp
  41b233:	jno    0x41b255
  41b235:	out    dx,al
  41b236:	ss mov eax,0x8a4d098a
  41b23c:	cld    
  41b23d:	fild   DWORD PTR [ecx+0x63c18409]
  41b243:	and    esi,DWORD PTR [esp+edi*4-0x28287caf]
  41b24a:	adc    al,cl
  41b24c:	cmp    dh,BYTE PTR [eax+0x2224434e]
  41b252:	add    DWORD PTR [ecx-0x10],ebp
  41b255:	xchg   ebp,eax
  41b256:	jmp    0x78de:0x26b85d79
  41b25d:	into   
  41b25e:	mov    ds:0xf3c4d62e,eax
  41b263:	cmc    
  41b264:	popf   
  41b265:	aaa    
  41b266:	pop    edx
  41b267:	jae    0x41b24f
  41b269:	lods   al,BYTE PTR ds:[esi]
  41b26a:	sbb    BYTE PTR [ecx],bl
  41b26c:	adc    DWORD PTR [esi-0x15],esp
  41b26f:	stc    
  41b270:	mov    dh,0x27
  41b272:	pop    esp
  41b273:	sub    ecx,0x17
  41b276:	sbb    ah,BYTE PTR [ebx]
  41b278:	sub    eax,0x5106c867
  41b27d:	andnps xmm6,XMMWORD PTR [eax+edi*4-0x4a]
  41b282:	or     BYTE PTR [esi],dl
  41b284:	jl     0x41b29d
  41b286:	push   edx
  41b287:	sub    bl,dh
  41b289:	mov    BYTE PTR [ebx],ch
  41b28b:	cs aam 0x0
  41b28e:	mov    al,ds:0x1fe2b3ee
  41b293:	scas   eax,DWORD PTR es:[edi]
  41b294:	inc    eax
  41b295:	sub    al,0x5f
  41b297:	pop    esi
  41b298:	mov    cl,0xb2
  41b29a:	xor    cl,BYTE PTR [eax-0x53]
  41b29d:	mov    dl,0xc7
  41b29f:	gs repz xchg ecx,eax
  41b2a2:	(bad)  
  41b2a3:	mov    es,WORD PTR [ebx+0x2c]
  41b2a6:	push   es
  41b2a7:	pop    ss
  41b2a8:	pushf  
  41b2a9:	outs   dx,DWORD PTR ds:[esi]
  41b2aa:	loopne 0x41b2ef
  41b2ac:	push   esp
  41b2ad:	mov    esp,0xa5ff8d50
  41b2b2:	inc    edx
  41b2b3:	leave  
  41b2b4:	adc    al,0x35
  41b2b6:	or     bl,BYTE PTR [edi-0x15]
  41b2b9:	ret    0x382b
  41b2bc:	and    edx,DWORD PTR [eax*1-0x5ae94a7c]
  41b2c3:	inc    esp
  41b2c4:	retf   0xe9fb
  41b2c7:	icebp  
  41b2c8:	fs pop ebx
  41b2ca:	aaa    
  41b2cb:	pop    ss
  41b2cc:	mov    gs,WORD PTR [edi+0x23506d11]
  41b2d2:	push   ebp
  41b2d3:	nop
  41b2d4:	sub    ebp,DWORD PTR [eax+0x29]
  41b2d7:	jne    0x41b2d4
  41b2d9:	mov    ds:0xd958deff,al
  41b2de:	jno    0x41b26c
  41b2e0:	mov    bl,0xe7
  41b2e2:	inc    BYTE PTR [edx+0x40]
  41b2e5:	adc    ecx,DWORD PTR [edi+0x4d]
  41b2e8:	test   BYTE PTR [ecx],0x9
  41b2eb:	or     ecx,DWORD PTR [edx-0x49]
  41b2ee:	int3   
  41b2ef:	add    edx,edi
  41b2f1:	stc    
  41b2f2:	jbe    0x41b2cd
  41b2f4:	arpl   WORD PTR [esi+0x2662444c],si
  41b2fa:	mov    eax,0x491e3c55
  41b2ff:	(bad)  
  41b300:	in     eax,0x7f
  41b302:	push   ebx
  41b303:	mov    bh,0x1e
  41b305:	fsubr  DWORD PTR [ecx-0x33]
  41b308:	pop    edi
  41b309:	fidiv  WORD PTR [esi]
  41b30b:	loopne 0x41b33f
  41b30d:	test   eax,0x86e4e7d8
  41b312:	jmp    0x22541e7f
  41b317:	call   0x3a8946fa
  41b31c:	sub    bh,dl
  41b31e:	xchg   esi,eax
  41b31f:	pop    DWORD PTR [ebx-0x72e04a2e]
  41b325:	dec    ebx
  41b326:	jbe    0x41b367
  41b328:	fist   DWORD PTR [eax+0x6ac49000]
  41b32e:	dec    edi
  41b32f:	add    BYTE PTR gs:[ebx+0x53408ce9],0xf9
  41b337:	popa   
  41b338:	mov    ebx,0x5ae07371
  41b33d:	push   ebx
  41b33e:	fstp   DWORD PTR [edi*2+0x648270b4]
  41b345:	pusha  
  41b346:	xchg   ebp,eax
  41b347:	sub    eax,DWORD PTR [ebp+0x382453d0]
  41b34d:	out    dx,al
  41b34e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b34f:	mov    bl,0x64
  41b351:	xor    BYTE PTR [edi+0x43b4cc95],ah
  41b357:	inc    esi
  41b358:	xor    edi,DWORD PTR [eax-0x6c5d6ad6]
  41b35e:	jb     0x41b2f5
  41b360:	add    al,0x31
  41b362:	fistp  WORD PTR [ebx+0x4f]
  41b365:	jo     0x41b3d3
  41b367:	or     al,0xdb
  41b369:	mov    al,0x0
  41b36b:	mov    esp,0xfb72c53a
  41b370:	sar    DWORD PTR [ebp-0x4a],1
  41b373:	loope  0x41b3a8
  41b375:	inc    ebp
  41b376:	daa    
  41b377:	(bad)  
  41b379:	xchg   esi,eax
  41b37a:	mov    al,0x9d
  41b37c:	mov    ecx,DWORD PTR [esp-0x14]
  41b380:	sub    ah,ch
  41b382:	add    bh,BYTE PTR [ecx+0x1a06e971]
  41b388:	adc    eax,0x67f2fcac
  41b38d:	push   0xe105c489
  41b392:	stos   BYTE PTR es:[edi],al
  41b393:	dec    esi
  41b394:	xor    bl,BYTE PTR [ebp-0x68626f61]
  41b39a:	es push ebp
  41b39c:	out    dx,eax
  41b39d:	or     al,0x38
  41b39f:	fild   WORD PTR [eax-0x183834b9]
  41b3a5:	and    al,0xa0
  41b3a7:	fnstsw WORD PTR [ebx+ebp*2+0x76]
  41b3ab:	loopne 0x41b33b
  41b3ad:	mov    al,0x99
  41b3af:	cmp    edi,DWORD PTR [edx-0x75]
  41b3b2:	jmp    0xe37eda75
  41b3b7:	shl    DWORD PTR [ecx+0x3b],1
  41b3ba:	fsub   DWORD PTR [ebx-0x29]
  41b3bd:	or     DWORD PTR [edx+0x432c3131],ecx
  41b3c3:	in     eax,dx
  41b3c4:	dec    eax
  41b3c5:	adc    BYTE PTR [edx],bh
  41b3c7:	arpl   WORD PTR [edx-0x1b7b07d1],ax
  41b3cd:	jno    0x41b43d
  41b3cf:	loop   0x41b42f
  41b3d1:	fadd   DWORD PTR [edx+0x1a]
  41b3d4:	mov    cl,0x9
  41b3d6:	mov    esi,0x9a79b7bf
  41b3db:	ret    0xed8c
  41b3de:	mov    ?,WORD PTR [esi+ecx*4]
  41b3e1:	add    esi,ecx
  41b3e3:	lods   eax,DWORD PTR ds:[esi]
  41b3e4:	int    0xe4
  41b3e6:	mov    fs,WORD PTR [edx]
  41b3e8:	pusha  
  41b3e9:	(bad)  
  41b3ea:	jp     0x41b45f
  41b3ec:	pushf  
  41b3ed:	js     0x41b3b8
  41b3ef:	retf   
  41b3f0:	sti    
  41b3f1:	xchg   esi,eax
  41b3f2:	mov    esi,0xa4c69ce
  41b3f8:	cmp    ch,BYTE PTR [edi]
  41b3fa:	stos   DWORD PTR es:[edi],eax
  41b3fb:	lods   eax,DWORD PTR ds:[esi]
  41b3fc:	cli    
  41b3fd:	les    ebp,FWORD PTR [ebp+0x4118ba9]
  41b403:	lods   al,BYTE PTR ds:[esi]
  41b404:	push   eax
  41b405:	mov    BYTE PTR [eax],0x7
  41b408:	in     eax,0xad
  41b40a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b40b:	sbb    ch,dh
  41b40d:	fdivr  QWORD PTR [ecx+0x10]
  41b410:	dec    ecx
  41b411:	and    DWORD PTR [esi+0x5e],eax
  41b414:	daa    
  41b415:	sbb    al,0xe8
  41b417:	clc    
  41b418:	sbb    bl,BYTE PTR [ecx+0x6f]
  41b41b:	in     al,dx
  41b41c:	dec    esi
  41b41d:	pop    ss
  41b41e:	push   ss
  41b41f:	int    0x2a
  41b421:	test   BYTE PTR [eax-0x4740de2c],cl
  41b427:	mov    bh,0xa6
  41b429:	mov    dl,0xff
  41b42b:	addr16 ret 
  41b42d:	shl    ebp,0x5d
  41b430:	xor    edx,edi
  41b432:	or     eax,0xb8077013
  41b437:	jmp    0xb60cdf1d
  41b43c:	sub    edi,edx
  41b43e:	leave  
  41b43f:	and    edx,eax
  41b441:	rcl    DWORD PTR [edi+0x6f4c285b],0xf4
  41b448:	mov    ebp,0x933cec30
  41b44d:	mov    ds:0x87f707d2,eax
  41b452:	mov    eax,0xad0b1cbb
  41b457:	movhps xmm0,QWORD PTR [eax+eiz*2]
  41b45b:	js     0x41b403
  41b45d:	stos   DWORD PTR es:[edi],eax
  41b45e:	cmp    ch,dh
  41b460:	xchg   BYTE PTR [edx+0x9dc008b],al
  41b466:	dec    ebp
  41b467:	ins    DWORD PTR es:[edi],dx
  41b468:	fcmove st,st(6)
  41b46a:	adc    BYTE PTR [ecx],dl
  41b46c:	stos   BYTE PTR es:[di],al
  41b46e:	lea    edx,[edx]
  41b470:	jp     0x41b4b5
  41b472:	(bad)  
  41b473:	into   
  41b474:	ss ja  0x41b425
  41b477:	mov    ebx,0x446ccf0c
  41b47c:	push   cs
  41b47d:	dec    BYTE PTR [edx]
  41b47f:	push   ds
  41b480:	(bad)  
  41b481:	gs popa 
  41b483:	fdivr  QWORD PTR [ebp+0x71]
  41b486:	cmc    
  41b487:	aas    
  41b488:	inc    edx
  41b489:	xchg   esp,ebp
  41b48b:	sub    DWORD PTR ds:0xac36a666,eax
  41b491:	fnstsw WORD PTR [eax]
  41b493:	jns    0x41b47f
  41b495:	or     dl,dl
  41b497:	out    dx,al
  41b498:	or     BYTE PTR [esi+0x3b],cl
  41b49b:	shr    BYTE PTR [eax-0x45],0x48
  41b49f:	mov    edi,0x1e566ec9
  41b4a4:	aam    0xcf
  41b4a6:	pop    ecx
  41b4a7:	xchg   esp,eax
  41b4a8:	shl    BYTE PTR [esi],0xce
  41b4ab:	addr16 inc ebx
  41b4ad:	mov    ds,WORD PTR [ebp-0x2729e036]
  41b4b3:	cli    
  41b4b4:	mov    eax,0xe89b5964
  41b4b9:	and    ch,BYTE PTR [eax-0x26c3c05c]
  41b4bf:	xchg   esi,eax
  41b4c0:	or     BYTE PTR [esi+0x5c59ed15],dl
  41b4c6:	jp     0x41b4a1
  41b4c8:	pop    eax
  41b4c9:	aad    0x45
  41b4cb:	mov    WORD PTR [edi+0x6c],ds
  41b4ce:	pop    ss
  41b4cf:	aaa    
  41b4d0:	aam    0xad
  41b4d2:	mov    eax,ds:0x5667dd3
  41b4d7:	test   al,0x31
  41b4d9:	(bad)
  41b4dd:	adc    al,bl
  41b4df:	rol    DWORD PTR ds:0x1f855677,0x6
  41b4e6:	fs xchg ebx,eax
  41b4e8:	int3   
  41b4e9:	lea    eax,[esi-0x5a48183c]
  41b4ef:	es push esi
  41b4f1:	inc    edi
  41b4f2:	cdq    
  41b4f3:	mov    dl,BYTE PTR [esi-0x3e52262]
  41b4f9:	clc    
  41b4fa:	std    
  41b4fb:	sbb    ebp,DWORD PTR ds:0xb5818086
  41b501:	out    dx,al
  41b502:	pop    ds
  41b503:	enter  0x683a,0xf9
  41b507:	xor    ebp,0x35ad7aac
  41b50d:	xchg   BYTE PTR [ebx-0x341ad371],dl
  41b513:	inc    ecx
  41b514:	add    BYTE PTR [eax],dh
  41b516:	xor    cl,BYTE PTR [eax+0x59f94534]
  41b51c:	imul   DWORD PTR [ecx]
  41b51e:	add    al,0x9d
  41b520:	mov    ah,0x5d
  41b522:	xchg   esi,eax
  41b523:	fsubrp st(1),st
  41b525:	inc    esi
  41b526:	shr    BYTE PTR [ebx],cl
  41b528:	lds    esi,FWORD PTR [ebx]
  41b52a:	xchg   BYTE PTR [esi-0x71],bl
  41b52d:	fwait
  41b52e:	inc    edi
  41b52f:	bound  eax,QWORD PTR [ebp+0x5d70a293]
  41b535:	retf   
  41b536:	xor    bl,BYTE PTR [esi+0x7a]
  41b539:	fs push edx
  41b53b:	cli    
  41b53c:	mov    edx,0x1501db09
  41b541:	mov    edx,0x641e73d2
  41b546:	cmp    DWORD PTR [ebp-0x49],edx
  41b549:	pop    eax
  41b54a:	jp     0x41b5c6
  41b54c:	js     0x41b523
  41b54e:	retf   0x253a
  41b551:	sub    al,0x76
  41b553:	inc    edi
  41b554:	fstp   DWORD PTR [ecx-0x71]
  41b557:	xchg   BYTE PTR [ebx],bh
  41b559:	daa    
  41b55a:	out    dx,al
  41b55b:	push   edi
  41b55c:	push   ebp
  41b55d:	imul   eax,DWORD PTR [esi-0x98987a9],0xffffffe2
  41b564:	outs   dx,DWORD PTR ds:[esi]
  41b565:	add    al,0xda
  41b567:	or     al,0x2f
  41b569:	lods   eax,DWORD PTR ds:[esi]
  41b56a:	cdq    
  41b56b:	mov    edi,0xf0d116dd
  41b570:	xchg   edx,eax
  41b571:	cdq    
  41b572:	ret    0x8386
  41b575:	pop    esp
  41b576:	ret    
  41b577:	stos   BYTE PTR es:[edi],al
  41b578:	(bad)  
  41b579:	int3   
  41b57a:	vpaddb xmm1,xmm4,xmm0
  41b57e:	mov    eax,ds:0xa693c654
  41b583:	push   0xffffffa2
  41b585:	mov    dh,0x84
  41b587:	nop
  41b588:	push   esi
  41b589:	mov    gs:0x7e8f06ce,al
  41b58f:	hlt    
  41b590:	leave  
  41b591:	pop    ds
  41b592:	dec    eax
  41b593:	adc    al,0x46
  41b595:	bound  esi,QWORD PTR [ecx+0x3827cdfa]
  41b59b:	rcr    DWORD PTR [esi-0x441103f5],cl
  41b5a1:	call   0xf422:0xdb8f603
  41b5a8:	mov    ecx,0x88770168
  41b5ad:	xor    ecx,0x2e325871
  41b5b3:	or     ebx,DWORD PTR ds:0xa4b1e4cc
  41b5b9:	or     DWORD PTR cs:[ecx-0x47],ecx
  41b5bd:	inc    eax
  41b5be:	stc    
  41b5bf:	int3   
  41b5c0:	jecxz  0x41b5df
  41b5c2:	mov    dl,0xf2
  41b5c4:	push   edi
  41b5c5:	pop    eax
  41b5c6:	adc    al,0x50
  41b5c8:	dec    esi
  41b5c9:	fcomp  QWORD PTR [edi]
  41b5cb:	lahf   
  41b5cc:	(bad)  
  41b5cd:	pop    esi
  41b5ce:	icebp  
  41b5cf:	pop    eax
  41b5d0:	mov    cl,0xb8
  41b5d2:	mov    DWORD PTR ds:0x172ec0ea,edx
  41b5d8:	out    dx,al
  41b5d9:	dec    eax
  41b5da:	jecxz  0x41b612
  41b5dc:	iret   
  41b5dd:	pop    esi
  41b5de:	inc    esp
  41b5df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5e0:	imul   ecx,DWORD PTR [eax+0x2da2e936],0x5e064269
  41b5ea:	lock push ss
  41b5ec:	adc    ch,BYTE PTR [esi+0x67]
  41b5ef:	das    
  41b5f0:	or     ecx,DWORD PTR [edx-0x6e1e4868]
  41b5f6:	sub    eax,0xcf85ce93
  41b5fb:	jnp    0x41b5ee
  41b5fd:	test   ah,cl
  41b5ff:	cmp    DWORD PTR [ebx],eax
  41b601:	les    edi,FWORD PTR [ebx]
  41b603:	fld    TBYTE PTR [edx-0x1]
  41b606:	(bad)  
  41b607:	fwait
  41b608:	inc    ebx
  41b609:	mov    DWORD PTR [eax-0x37f95bc4],edx
  41b60f:	daa    
  41b610:	or     eax,0xe859bf6e
  41b615:	aad    0x43
  41b617:	inc    esi
  41b618:	fucomp st(6)
  41b61a:	inc    edx
  41b61b:	dec    esi
  41b61c:	lea    ebx,[ebx]
  41b61e:	sahf   
  41b61f:	stc    
  41b620:	push   ss
  41b621:	mov    dl,0x17
  41b623:	mov    edi,0x6f03e1b0
  41b628:	jmp    0xdbf4:0x604a26a8
  41b62f:	(bad)  
  41b630:	jp     0x41b5b5
  41b632:	xchg   bl,dl
  41b634:	cld    
  41b635:	pop    ss
  41b636:	in     al,dx
  41b637:	mov    BYTE PTR [esp+esi*8-0x634717b0],dl
  41b63e:	std    
  41b63f:	inc    ecx
  41b640:	imul   eax,DWORD PTR [ecx-0x32],0x362ea8e9
  41b647:	or     ecx,edi
  41b649:	int3   
  41b64a:	mov    ds:0xbc2c2743,eax
  41b64f:	mov    esi,0xf51cb924
  41b654:	sbb    eax,0xcabea13e
  41b659:	pop    ebp
  41b65a:	push   esi
  41b65b:	iret   
  41b65c:	jb     0x41b671
  41b65e:	pushf  
  41b65f:	mov    al,ds:0x63d92ca4
  41b664:	xchg   edi,eax
  41b665:	mov    esi,DWORD PTR [esi]
  41b667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b668:	loop   0x41b683
  41b66a:	inc    BYTE PTR [edi+0x7c825c1d]
  41b670:	mov    ch,0x1a
  41b672:	lods   al,BYTE PTR ds:[esi]
  41b673:	cli    
  41b674:	retf   
  41b675:	shr    DWORD PTR [eax-0x4f69b036],0x59
  41b67c:	mov    edx,0xe3716742
  41b681:	push   ebp
  41b682:	mov    eax,ds:0xb3cec0cf
  41b687:	sbb    eax,0xf8037fd7
  41b68c:	push   esi
  41b68d:	icebp  
  41b68e:	jmp    0x37d3bc92
  41b693:	(bad)  
  41b694:	mov    bh,0x3d
  41b696:	dec    edx
  41b697:	push   eax
  41b698:	sbb    esi,ecx
  41b69a:	test   DWORD PTR [esi-0x1a],esp
  41b69d:	add    ebx,DWORD PTR [esi]
  41b69f:	out    0xed,al
  41b6a1:	inc    edi
  41b6a2:	jne    0x41b705
  41b6a4:	ss pop ss
  41b6a6:	xor    al,0xcd
  41b6a8:	push   esi
  41b6a9:	push   edi
  41b6aa:	out    0xb0,al
  41b6ac:	jo     0x41b69a
  41b6ae:	fs lahf 
  41b6b0:	mov    DWORD PTR [edx-0xe643f6],ebp
  41b6b6:	iret   
  41b6b7:	xchg   DWORD PTR [ebx+0x799f74c3],eax
  41b6bd:	xchg   esp,eax
  41b6be:	retf   0x6f56
  41b6c1:	inc    ebx
  41b6c2:	and    ebx,0x3ce4271
  41b6c8:	xor    ebp,ebx
  41b6ca:	nop
  41b6cb:	and    al,0xf5
  41b6cd:	mov    al,BYTE PTR [ebx]
  41b6cf:	data16 fld TBYTE PTR [ecx-0x6f015b35]
  41b6d6:	frstor [edi-0x3bd83666]
  41b6dc:	add    edi,ebp
  41b6de:	lods   eax,DWORD PTR es:[esi]
  41b6e0:	mov    ah,0x30
  41b6e2:	cmp    DWORD PTR [ecx+0x2bc817],eax
  41b6e8:	mov    ch,0x30
  41b6ea:	sub    dh,BYTE PTR [ebx-0x2b]
  41b6ed:	and    eax,0x6cebde0a
  41b6f2:	jge    0x41b6e7
  41b6f4:	adc    DWORD PTR [edx-0x1f35b609],0x1b6aa97d
  41b6fe:	clc    
  41b6ff:	cli    
  41b700:	push   ecx
  41b701:	out    0x7f,eax
  41b703:	mov    esp,0xdde7085b
  41b708:	push   eax
  41b709:	jns    0x41b68c
  41b70b:	repnz adc eax,0xb41b5ecc
  41b711:	pop    ebx
  41b712:	mov    bh,0x9e
  41b714:	mov    edi,0x60a808a2
  41b719:	rcl    ecx,cl
  41b71b:	push   0xffffff8d
  41b71d:	cld    
  41b71e:	addr16 cmp eax,0xb2b77b1b
  41b724:	(bad)  
  41b725:	neg    BYTE PTR [ebp-0x13]
  41b728:	bsr    ebx,DWORD PTR [edx-0x65754252]
  41b72f:	push   es
  41b730:	sub    eax,DWORD PTR [ecx-0x6ecdcfc9]
  41b736:	rcl    BYTE PTR [edx-0x37],0x8f
  41b73a:	sbb    eax,0x8bec4d89
  41b73f:	dec    ebp
  41b740:	in     al,dx
  41b741:	mov    ecx,DWORD PTR [ecx+0xc]
  41b744:	movsx  cx,BYTE PTR [ecx+eax*1]
  41b749:	mov    edx,0x3b4b
  41b74e:	sub    cx,dx
  41b751:	mov    edx,0x8a85
  41b756:	xor    cx,dx
  41b759:	mov    edx,0x4f85
  41b75e:	cmp    cx,dx
  41b761:	jne    0x419376
  41b767:	mov    ecx,DWORD PTR ds:0x424074
  41b76d:	mov    ecx,DWORD PTR [ecx+0x198]
  41b773:	mov    DWORD PTR [ecx],eax
  41b775:	jmp    0x41b79b
  41b77a:	mov    ecx,DWORD PTR [ebp+0x18]
  41b77d:	cmp    ecx,0xf89c85b5
  41b783:	jne    0x41b79b
  41b789:	push   eax
  41b78a:	push   DWORD PTR [ebp+0x14]
  41b78d:	push   DWORD PTR [ebp+0x10]
  41b790:	push   DWORD PTR [ebp+0xc]
  41b793:	push   DWORD PTR [ebp+0x8]
  41b796:	call   0x416ab7
  41b79b:	pop    edi
  41b79c:	pop    esi
  41b79d:	leave  
  41b79e:	ret    0x14
  41b7a1:	push   ebp
  41b7a2:	mov    ebp,esp
  41b7a4:	sub    esp,0x48
  41b7a7:	push   ebx
  41b7a8:	movzx  eax,BYTE PTR ds:0x42901c
  41b7af:	sub    DWORD PTR ds:0x429010,eax
  41b7b5:	push   esi
  41b7b6:	adc    DWORD PTR ds:0x429000,0x3a05
  41b7c0:	push   edi
  41b7c1:	xor    edi,0x559a
  41b7c7:	xor    esi,esi
  41b7c9:	mov    DWORD PTR [ebp-0x20],esi
  41b7cc:	sub    eax,0x6d46
  41b7d1:	mov    eax,DWORD PTR [ebp-0xc]
  41b7d4:	push   0x5
  41b7d6:	and    DWORD PTR ds:0x42b010,0x0
  41b7e0:	mov    edi,DWORD PTR ds:0x42b010
  41b7e6:	inc    edi
  41b7e7:	mov    DWORD PTR ds:0x42b010,edi
  41b7ed:	cmp    DWORD PTR ds:0x42b010,0x1e
  41b7f4:	jne    0x41b80f
  41b7fa:	push   0x4aeb
  41b7ff:	push   0x362c
  41b804:	push   0x611c
  41b809:	call   DWORD PTR ds:0x425044
  41b80f:	cmp    DWORD PTR ds:0x42b010,0x11
  41b816:	jb     0x41b7e0
  41b81c:	and    DWORD PTR ds:0x429020,0x0
  41b826:	jmp    0x41b838
  41b82b:	mov    edi,DWORD PTR ds:0x429020
  41b831:	inc    edi
  41b832:	mov    DWORD PTR ds:0x429020,edi
  41b838:	cmp    DWORD PTR ds:0x429020,0x1b
  41b83f:	jae    0x41b8d2
  41b845:	cmp    DWORD PTR ds:0x429020,0x5
  41b84c:	jne    0x41b86a
  41b852:	push   0x6d5d
  41b857:	push   0x6bd3
  41b85c:	push   0x2a83
  41b861:	push   DWORD PTR [ebp-0x20]
  41b864:	call   DWORD PTR ds:0x425048
  41b86a:	cmp    DWORD PTR ds:0x429020,0x4
  41b871:	jne    0x41b884
  41b877:	mov    edi,DWORD PTR ds:0x429020
  41b87d:	inc    edi
  41b87e:	mov    DWORD PTR ds:0x429020,edi
  41b884:	jmp    0x41b82b
  41b889:	mov    DWORD PTR ds:0x42901c,0x1a
  41b893:	cmp    DWORD PTR ds:0x42901c,0x0
  41b89a:	je     0x41b8d2
  41b8a0:	cmp    DWORD PTR ds:0x42901c,0x29
  41b8a7:	jne    0x41b8b8
  41b8ad:	push   0x3b9c
  41b8b2:	call   DWORD PTR ds:0x42504c
  41b8b8:	xor    edi,edi
  41b8ba:	or     edi,DWORD PTR ds:0x42901c
  41b8c0:	dec    edi
  41b8c1:	mov    DWORD PTR ds:0x42901c,edi
  41b8c7:	jmp    0x41b893
  41b8cc:	sub    DWORD PTR ds:0x429008,ecx
  41b8d2:	mov    DWORD PTR [ebp-0xc],eax
  41b8d5:	and    DWORD PTR ds:0x42d01c,0x0
  41b8df:	mov    edi,DWORD PTR ds:0x42d01c
  41b8e5:	inc    edi
  41b8e6:	mov    DWORD PTR ds:0x42d01c,edi
  41b8ec:	cmp    DWORD PTR ds:0x42d01c,0x13
  41b8f3:	jne    0x41b909
  41b8f9:	push   0x8e10
  41b8fe:	push   0x42457e
  41b903:	call   DWORD PTR ds:0x425010
  41b909:	cmp    DWORD PTR ds:0x42d01c,0x11
  41b910:	jb     0x41b8df
  41b916:	pop    edi
  41b917:	push   0x424188
  41b91c:	sub    DWORD PTR ds:0x42a018,0x42b000
  41b926:	call   DWORD PTR ds:0x425024
  41b92c:	adc    DWORD PTR ds:0x42c014,0x59ac
  41b936:	push   esi
  41b937:	xor    DWORD PTR ds:0x42d018,0x57bc
  41b941:	push   0x2
  41b943:	add    DWORD PTR ds:0x42a014,0x11b6
  41b94d:	push   0x1
  41b94f:	push   0x2
  41b951:	and    DWORD PTR ds:0x42d004,0x42a01c
  41b95b:	push   0x1
  41b95d:	and    DWORD PTR ds:0x42a004,0x42b014
  41b967:	push   0x8678768
  41b96c:	sbb    DWORD PTR ds:0x42901c,0x42c014
  41b976:	push   0x87676776
  41b97b:	sub    DWORD PTR ds:0x42a008,0x42c014
  41b985:	call   DWORD PTR ds:0x425000
  41b98b:	push   esi
  41b98c:	push   0x68
  41b98e:	push   0xd
  41b990:	push   0x5
  41b992:	push   0x3
  41b994:	push   0x5468787
  41b999:	sub    DWORD PTR ds:0x429014,0x2577
  41b9a3:	call   DWORD PTR ds:0x425008
  41b9a9:	xor    DWORD PTR ds:0x42c00c,0x43e8
  41b9b3:	dec    edi
  41b9b4:	mov    DWORD PTR ds:0x42d008,0x724a
  41b9be:	jne    0x41b917
  41b9c4:	push   0x42419c
  41b9c9:	push   esi
  41b9ca:	push   esi
  41b9cb:	call   DWORD PTR ds:0x425038
  41b9d1:	or     DWORD PTR ds:0x42b004,0x42b00c
  41b9db:	test   eax,eax
  41b9dd:	je     0x41ba3c
  41b9e3:	add    DWORD PTR ds:0x429008,edx
  41b9e9:	mov    eax,ds:0x75687681
  41b9ee:	and    DWORD PTR ds:0x429024,0x0
  41b9f8:	mov    ebx,DWORD PTR ds:0x429024
  41b9fe:	inc    ebx
  41b9ff:	mov    DWORD PTR ds:0x429024,ebx
  41ba05:	cmp    DWORD PTR ds:0x429024,0x24
  41ba0c:	jne    0x41ba1e
  41ba12:	push   DWORD PTR [ebp-0x24]
  41ba15:	push   DWORD PTR [ebp-0x18]
  41ba18:	call   DWORD PTR ds:0x425018
  41ba1e:	cmp    DWORD PTR ds:0x429024,0x1e
  41ba25:	jb     0x41b9f8
  41ba2b:	add    DWORD PTR ds:0x42d000,ebx
  41ba31:	imul   eax,eax,0x5463da19
  41ba37:	mov    ds:0x75687681,eax
  41ba3c:	not    eax
  41ba3e:	mov    eax,DWORD PTR [ebp-0xc]
  41ba41:	mov    ebx,DWORD PTR ds:0x42b010
  41ba47:	mov    ebx,0xf89c85b6
  41ba4c:	cmp    eax,ebx
  41ba4e:	mov    DWORD PTR ds:0x42d01c,0x2eca
  41ba58:	jne    0x41baa0
  41ba5e:	add    DWORD PTR ds:0x429018,0x42a018
  41ba68:	mov    DWORD PTR ds:0x424184,0xf89c85b5
  41ba72:	or     DWORD PTR ds:0x42b01c,0x42c010
  41ba7c:	push   DWORD PTR [ebp+0x10]
  41ba7f:	push   DWORD PTR [ebp+0xc]
  41ba82:	push   DWORD PTR [ebp+0x8]
  41ba85:	call   0x408413
  41ba8a:	adc    edi,edi
  41ba8c:	mov    ecx,DWORD PTR ds:0x424074
  41ba92:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41ba98:	sbb    esi,0x7064
  41ba9e:	mov    DWORD PTR [ecx],eax
  41baa0:	mov    DWORD PTR [ebp-0x4],ebx
  41baa3:	add    esi,0x7033
  41baa9:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41bab0:	and    DWORD PTR ds:0x42d000,0x0
  41baba:	jmp    0x41bace
  41babf:	xor    ecx,ecx
  41bac1:	add    ecx,DWORD PTR ds:0x42d000
  41bac7:	inc    ecx
  41bac8:	mov    DWORD PTR ds:0x42d000,ecx
  41bace:	cmp    DWORD PTR ds:0x42d000,0x1d
  41bad5:	jae    0x41bb24
  41badb:	cmp    DWORD PTR ds:0x42d000,0x9
  41bae2:	jne    0x41bafb
  41bae8:	push   0x42b01c
  41baed:	push   DWORD PTR [ebp-0x1c]
  41baf0:	push   0x42448a
  41baf5:	call   DWORD PTR ds:0x42501c
  41bafb:	cmp    DWORD PTR ds:0x42d000,0x8
  41bb02:	jne    0x41bb15
  41bb08:	mov    ecx,DWORD PTR ds:0x42d000
  41bb0e:	inc    ecx
  41bb0f:	mov    DWORD PTR ds:0x42d000,ecx
  41bb15:	jmp    0x41babf
  41bb1a:	mov    DWORD PTR ds:0x42a01c,0x231b
  41bb24:	lea    eax,[ebp-0x28]
  41bb27:	and    DWORD PTR ds:0x42c008,0x0
  41bb31:	mov    edi,DWORD PTR ds:0x42c008
  41bb37:	inc    edi
  41bb38:	mov    DWORD PTR ds:0x42c008,edi
  41bb3e:	cmp    DWORD PTR ds:0x42c008,0x17
  41bb45:	jne    0x41bb59
  41bb4b:	push   0x42a00c
  41bb50:	push   DWORD PTR [ebp-0x18]
  41bb53:	call   DWORD PTR ds:0x425020
  41bb59:	cmp    DWORD PTR ds:0x42c008,0x10
  41bb60:	jb     0x41bb31
  41bb66:	and    DWORD PTR ds:0x42900c,0x0
  41bb70:	jmp    0x41bb84
  41bb75:	xor    ecx,ecx
  41bb77:	or     ecx,DWORD PTR ds:0x42900c
  41bb7d:	inc    ecx
  41bb7e:	mov    DWORD PTR ds:0x42900c,ecx
  41bb84:	cmp    DWORD PTR ds:0x42900c,0x1b
  41bb8b:	jae    0x41bc1f
  41bb91:	cmp    DWORD PTR ds:0x42900c,0x20
  41bb98:	jne    0x41bba7
  41bb9e:	push   DWORD PTR [ebp-0x14]
  41bba1:	call   DWORD PTR ds:0x425028
  41bba7:	jmp    0x41bb75
  41bbac:	mov    DWORD PTR ds:0x42b00c,0x15
  41bbb6:	cmp    DWORD PTR ds:0x42b00c,0x0
  41bbbd:	je     0x41bc1f
  41bbc3:	cmp    DWORD PTR ds:0x42b00c,0x4
  41bbca:	jne    0x41bbf1
  41bbd0:	push   0x6080
  41bbd5:	push   DWORD PTR [ebp-0x20]
  41bbd8:	push   0x42d004
  41bbdd:	push   0x710d
  41bbe2:	push   DWORD PTR [ebp-0x10]
  41bbe5:	push   DWORD PTR [ebp-0x14]
  41bbe8:	push   DWORD PTR [ebp-0x24]
  41bbeb:	call   DWORD PTR ds:0x42502c
  41bbf1:	cmp    DWORD PTR ds:0x42b00c,0x5
  41bbf8:	jne    0x41bc0d
  41bbfe:	xor    edi,edi
  41bc00:	add    edi,DWORD PTR ds:0x42b00c
  41bc06:	dec    edi
  41bc07:	mov    DWORD PTR ds:0x42b00c,edi
  41bc0d:	mov    edi,DWORD PTR ds:0x42b00c
  41bc13:	dec    edi
  41bc14:	mov    DWORD PTR ds:0x42b00c,edi
  41bc1a:	jmp    0x41bbb6
  41bc1f:	mov    DWORD PTR [ebp-0x20],eax
  41bc22:	movzx  ecx,BYTE PTR ds:0x429028
  41bc29:	xor    ecx,DWORD PTR ds:0x42c00c
  41bc2f:	mov    DWORD PTR ds:0x429028,ecx
  41bc35:	lea    eax,[ebp-0x2c]
  41bc38:	and    DWORD PTR ds:0x429004,0x0
  41bc42:	jmp    0x41bc54
  41bc47:	mov    esi,DWORD PTR ds:0x429004
  41bc4d:	inc    esi
  41bc4e:	mov    DWORD PTR ds:0x429004,esi
  41bc54:	cmp    DWORD PTR ds:0x429004,0x1e
  41bc5b:	jae    0x41bcfb
  41bc61:	cmp    DWORD PTR ds:0x429004,0x7
  41bc68:	jne    0x41bc79
  41bc6e:	push   0x5e54
  41bc73:	call   DWORD PTR ds:0x425030
  41bc79:	cmp    DWORD PTR ds:0x429004,0x6
  41bc80:	jne    0x41bc95
  41bc86:	xor    esi,esi
  41bc88:	xor    esi,DWORD PTR ds:0x429004
  41bc8e:	inc    esi
  41bc8f:	mov    DWORD PTR ds:0x429004,esi
  41bc95:	jmp    0x41bc47
  41bc9a:	and    DWORD PTR ds:0x42b00c,0x0
  41bca4:	jmp    0x41bcb6
  41bca9:	mov    esi,DWORD PTR ds:0x42b00c
  41bcaf:	inc    esi
  41bcb0:	mov    DWORD PTR ds:0x42b00c,esi
  41bcb6:	cmp    DWORD PTR ds:0x42b00c,0x12
  41bcbd:	jae    0x41bcfb
  41bcc3:	cmp    DWORD PTR ds:0x42b00c,0xc
  41bcca:	jne    0x41bcdc
  41bcd0:	push   DWORD PTR [ebp-0x10]
  41bcd3:	push   DWORD PTR [ebp-0x28]
  41bcd6:	call   DWORD PTR ds:0x425034
  41bcdc:	cmp    DWORD PTR ds:0x42b00c,0xb
  41bce3:	jne    0x41bcf6
  41bce9:	mov    esi,DWORD PTR ds:0x42b00c
  41bcef:	inc    esi
  41bcf0:	mov    DWORD PTR ds:0x42b00c,esi
  41bcf6:	jmp    0x41bca9
  41bcfb:	mov    DWORD PTR [ebp-0x1c],eax
  41bcfe:	mov    eax,ds:0x424074
  41bd03:	mov    eax,DWORD PTR [eax+0x1c8]
  41bd09:	mov    eax,DWORD PTR [eax]
  41bd0b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bd0e:	mov    esi,0x7510893
  41bd13:	xor    eax,esi
  41bd15:	mov    edi,0x3272db
  41bd1a:	add    eax,edi
  41bd1c:	mov    DWORD PTR [ecx],eax
  41bd1e:	mov    eax,ds:0x424284
  41bd23:	cmp    eax,0x301ac8f5
  41bd28:	jne    0x41bd4f
  41bd2e:	mov    eax,DWORD PTR [ebp-0x4]
  41bd31:	mov    ecx,DWORD PTR ds:0x424074
  41bd37:	mov    ecx,DWORD PTR [ecx+0x198]
  41bd3d:	xor    eax,esi
  41bd3f:	add    eax,edi
  41bd41:	mov    DWORD PTR [ecx],eax
  41bd43:	mov    eax,DWORD PTR [ebp-0x4]
  41bd46:	xor    eax,esi
  41bd48:	add    eax,edi
  41bd4a:	mov    ds:0x424284,eax
  41bd4f:	mov    eax,ds:0x424074
  41bd54:	mov    eax,DWORD PTR [eax+0x18c]
  41bd5a:	mov    eax,DWORD PTR [eax]
  41bd5c:	mov    DWORD PTR [ebp-0x30],eax
  41bd5f:	mov    eax,0xf89c85ba
  41bd64:	mov    DWORD PTR [ebp-0x1c],eax
  41bd67:	mov    DWORD PTR [ebp-0x1c],eax
  41bd6a:	mov    DWORD PTR [ebp-0x1c],eax
  41bd6d:	mov    DWORD PTR [ebp-0x1c],ebx
  41bd70:	mov    DWORD PTR [ebp-0x38],eax
  41bd73:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  41bd7a:	mov    ebx,DWORD PTR [ebp-0x4]
  41bd7d:	mov    ecx,DWORD PTR [ebp-0x8]
  41bd80:	mov    edx,DWORD PTR [ebp-0x8]
  41bd83:	xor    edx,esi
  41bd85:	xor    ecx,esi
  41bd87:	add    ecx,edx
  41bd89:	mov    edx,DWORD PTR [ebp-0x8]
  41bd8c:	xor    ebx,esi
  41bd8e:	xor    edx,esi
  41bd90:	add    ebx,edi
  41bd92:	lea    ecx,[ecx+edx*1+0x975891]
  41bd99:	cmp    ebx,ecx
  41bd9b:	ja     0x41bdfc
  41bda1:	mov    eax,DWORD PTR [ebp-0x8]
  41bda4:	xor    eax,esi
  41bda6:	lea    eax,[eax+ebx*1+0x3272db]
  41bdad:	push   eax
  41bdae:	mov    eax,DWORD PTR [ebp-0x1c]
  41bdb1:	xor    eax,esi
  41bdb3:	lea    eax,[ebp+eax*1+0x3272e3]
  41bdba:	push   eax
  41bdbb:	mov    eax,ds:0x424074
  41bdc0:	push   DWORD PTR [eax+0x1bc]
  41bdc6:	call   0x40843e
  41bdcb:	mov    eax,DWORD PTR [ebp-0x8]
  41bdce:	xor    eax,esi
  41bdd0:	lea    ebx,[ebx+eax*1+0x3272db]
  41bdd7:	mov    eax,DWORD PTR [ebp-0x8]
  41bdda:	mov    ecx,DWORD PTR [ebp-0x8]
  41bddd:	xor    ecx,esi
  41bddf:	xor    eax,esi
  41bde1:	add    eax,ecx
  41bde3:	mov    ecx,DWORD PTR [ebp-0x8]
  41bde6:	xor    ecx,esi
  41bde8:	lea    eax,[eax+ecx*1+0x975891]
  41bdef:	cmp    ebx,eax
  41bdf1:	jbe    0x41bda1
  41bdf7:	mov    eax,0xf89c85ba
  41bdfc:	mov    ecx,DWORD PTR [ebp+0xc]
  41bdff:	mov    DWORD PTR ds:0x423ef8,ecx
  41be05:	mov    ecx,DWORD PTR [ebp+0x10]
  41be08:	mov    DWORD PTR ds:0x42414c,ecx
  41be0e:	mov    ecx,DWORD PTR ds:0x423ef8
  41be14:	mov    edx,DWORD PTR [ebp-0x20]
  41be17:	sub    ecx,edi
  41be19:	xor    ecx,esi
  41be1b:	mov    DWORD PTR [edx],ecx
  41be1d:	mov    edx,DWORD PTR [ebp-0xc]
  41be20:	mov    ecx,0xf89c85b6
  41be25:	cmp    edx,ecx
  41be27:	jne    0x41be52
  41be2d:	lea    eax,[ebp-0x14]
  41be30:	mov    DWORD PTR [ebp-0x24],eax
  41be33:	lea    eax,[ebp+0x4]
  41be36:	mov    DWORD PTR [ebp-0x14],eax
  41be39:	mov    eax,DWORD PTR [ebp-0x14]
  41be3c:	test   eax,eax
  41be3e:	je     0x41bf67
  41be44:	mov    eax,DWORD PTR [ebp-0x10]
  41be47:	mov    eax,DWORD PTR [ebp-0x8]
  41be4a:	lea    eax,[ebp-0x24]
  41be4d:	jmp    0x41bf5e
  41be52:	mov    edx,DWORD PTR [ebp-0x28]
  41be55:	cmp    edx,0xf89c85b5
  41be5b:	je     0x41beb8
  41be61:	mov    edx,DWORD PTR [ebp-0x4]
  41be64:	mov    ebx,DWORD PTR [ebp-0x2c]
  41be67:	xor    edx,esi
  41be69:	add    edx,edi
  41be6b:	cmp    edx,ebx
  41be6d:	je     0x41beb8
  41be73:	mov    eax,ds:0x424074
  41be78:	mov    eax,DWORD PTR [eax+0x194]
  41be7e:	mov    ecx,DWORD PTR [eax]
  41be80:	mov    eax,DWORD PTR [ecx+0x3c]
  41be83:	push   DWORD PTR ds:0x42414c
  41be89:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41be8d:	push   DWORD PTR ds:0x423ef8
  41be93:	add    eax,ecx
  41be95:	mov    ecx,DWORD PTR ds:0x424074
  41be9b:	mov    ecx,DWORD PTR [ecx+0x194]
  41bea1:	push   DWORD PTR [ecx]
  41bea3:	call   eax
  41bea5:	mov    ecx,DWORD PTR ds:0x424074
  41beab:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41beb1:	mov    DWORD PTR [ecx],eax
  41beb3:	jmp    0x41bf67
  41beb8:	mov    edx,DWORD PTR [ebp-0x4]
  41bebb:	mov    ebx,DWORD PTR [ebp-0x30]
  41bebe:	xor    edx,esi
  41bec0:	add    edx,edi
  41bec2:	cmp    edx,ebx
  41bec4:	jne    0x41bf1d
  41beca:	mov    edx,DWORD PTR [ebp-0x4]
  41becd:	mov    ebx,DWORD PTR ds:0x424074
  41bed3:	mov    ebx,DWORD PTR [ebx+0x198]
  41bed9:	xor    edx,esi
  41bedb:	add    edx,edi
  41bedd:	cmp    edx,DWORD PTR [ebx]
  41bedf:	jne    0x41befa
  41bee5:	push   ecx
  41bee6:	mov    ecx,DWORD PTR [ebp-0x4]
  41bee9:	xor    ecx,esi
  41beeb:	add    ecx,edi
  41beed:	push   ecx
  41beee:	push   eax
  41beef:	push   DWORD PTR [ebp-0x8]
  41bef2:	push   DWORD PTR [ebp-0x4]
  41bef5:	call   0x416ab7
  41befa:	push   DWORD PTR [ebp-0x8]
  41befd:	push   DWORD PTR [ebp-0x4]
  41bf00:	call   0x41bf89
  41bf05:	mov    eax,DWORD PTR [ebp-0x4]
  41bf08:	xor    eax,esi
  41bf0a:	add    eax,edi
  41bf0c:	mov    ds:0x4240f8,eax
  41bf11:	mov    eax,DWORD PTR [ebp-0x4]
  41bf14:	xor    eax,esi
  41bf16:	add    eax,edi
  41bf18:	mov    ds:0x4240f0,eax
  41bf1d:	lea    eax,[ebp-0x18]
  41bf20:	mov    DWORD PTR [ebp-0x34],eax
  41bf23:	lea    eax,[ebp+0x4]
  41bf26:	mov    DWORD PTR [ebp-0x18],eax
  41bf29:	mov    eax,DWORD PTR [ebp-0x18]
  41bf2c:	test   eax,eax
  41bf2e:	je     0x41bf67
  41bf34:	mov    DWORD PTR [ebp-0x3c],0xf152c3d
  41bf3b:	mov    DWORD PTR [ebp-0x40],0x712ed08
  41bf42:	mov    DWORD PTR [ebp-0x44],0x373fc2e
  41bf49:	mov    DWORD PTR [ebp-0x48],0x72670a1e
  41bf50:	call   0x411f4d
  41bf55:	mov    eax,DWORD PTR [ebp-0x10]
  41bf58:	mov    eax,DWORD PTR [ebp-0x8]
  41bf5b:	lea    eax,[ebp-0x34]
  41bf5e:	push   eax
  41bf5f:	push   DWORD PTR [ebp-0x4]
  41bf62:	call   0x40f9a6
  41bf67:	mov    eax,ds:0x424074
  41bf6c:	push   0x4
  41bf6e:	add    eax,0x1cc
  41bf73:	push   eax
  41bf74:	lea    eax,[ebp-0x10]
  41bf77:	push   eax
  41bf78:	call   0x40843e
  41bf7d:	mov    eax,DWORD PTR [ebp-0x10]
  41bf80:	mov    eax,DWORD PTR [eax]
  41bf82:	pop    edi
  41bf83:	pop    esi
  41bf84:	pop    ebx
  41bf85:	leave  
  41bf86:	ret    0xc
  41bf89:	push   ebp
  41bf8a:	mov    ebp,esp
  41bf8c:	sub    esp,0x98
  41bf92:	mov    eax,DWORD PTR [ebp+0x8]
  41bf95:	inc    ecx
  41bf96:	push   ebx
  41bf97:	sbb    DWORD PTR ds:0x42a014,edx
  41bf9d:	push   esi
  41bf9e:	add    esi,esi
  41bfa0:	push   edi
  41bfa1:	and    DWORD PTR ds:0x42c014,0x0
  41bfab:	jmp    0x41bfbd
  41bfb0:	mov    edi,DWORD PTR ds:0x42c014
  41bfb6:	inc    edi
  41bfb7:	mov    DWORD PTR ds:0x42c014,edi
  41bfbd:	cmp    DWORD PTR ds:0x42c014,0x1f
  41bfc4:	jae    0x41c01b
  41bfca:	cmp    DWORD PTR ds:0x42c014,0xb
  41bfd1:	jne    0x41bfea
  41bfd7:	push   0x4245ce
  41bfdc:	push   0x424560
  41bfe1:	push   DWORD PTR [ebp-0x1c]
  41bfe4:	call   DWORD PTR ds:0x42503c
  41bfea:	cmp    DWORD PTR ds:0x42c014,0xa
  41bff1:	jne    0x41c004
  41bff7:	mov    edi,DWORD PTR ds:0x42c014
  41bffd:	inc    edi
  41bffe:	mov    DWORD PTR ds:0x42c014,edi
  41c004:	jmp    0x41bfb0
  41c009:	mov    esi,DWORD PTR ds:0x42c000
  41c00f:	or     esi,DWORD PTR ds:0x42a000
  41c015:	mov    DWORD PTR ds:0x42c000,esi
  41c01b:	mov    esi,0x7510893
  41c020:	xor    eax,esi
  41c022:	mov    edi,DWORD PTR ds:0x423ea4
  41c028:	mov    ecx,DWORD PTR ds:0x423ec0
  41c02e:	sub    edi,ecx
  41c030:	sub    edi,DWORD PTR [edi+ecx*1]
  41c033:	mov    edi,0x3272db
  41c038:	add    eax,edi
  41c03a:	xor    ecx,0x38ef
  41c040:	mov    DWORD PTR [ebp-0x30],eax
  41c043:	mov    eax,ds:0x423ef4
  41c048:	mov    DWORD PTR ds:0x429010,0x1f
  41c052:	cmp    DWORD PTR ds:0x429010,0x0
  41c059:	je     0x41c0ad
  41c05f:	cmp    DWORD PTR ds:0x429010,0xf
  41c066:	jne    0x41c081
  41c06c:	push   0x82e0
  41c071:	push   0x7826
  41c076:	push   0x30a6
  41c07b:	call   DWORD PTR ds:0x425040
  41c081:	cmp    DWORD PTR ds:0x429010,0x10
  41c088:	jne    0x41c09b
  41c08e:	mov    ecx,DWORD PTR ds:0x429010
  41c094:	dec    ecx
  41c095:	mov    DWORD PTR ds:0x429010,ecx
  41c09b:	mov    ecx,DWORD PTR ds:0x429010
  41c0a1:	dec    ecx
  41c0a2:	mov    DWORD PTR ds:0x429010,ecx
  41c0a8:	jmp    0x41c052
  41c0ad:	mov    eax,DWORD PTR [eax]
  41c0af:	add    ecx,DWORD PTR ds:0x42a01c
  41c0b5:	jmp    0x41e403
  41c0ba:	icebp  
  41c0bb:	push   ecx
  41c0bc:	inc    edi
  41c0bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0bf:	mov    ds:0x413825ab,eax
  41c0c4:	aaa    
  41c0c5:	and    al,0x10
  41c0c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0c8:	aam    0xeb
  41c0ca:	and    al,0xfd
  41c0cc:	popa   
  41c0cd:	bound  edx,QWORD PTR [ecx+0x5f]
  41c0d0:	bound  esp,QWORD PTR [edx-0x35]
  41c0d3:	cmp    eax,0xf727f320
  41c0d8:	das    
  41c0d9:	fstp   TBYTE PTR [esp+ebx*2-0x60]
  41c0dd:	mov    cl,0xce
  41c0df:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0e1:	cdq    
  41c0e2:	jle    0x41c125
  41c0e4:	sub    bh,dl
  41c0e6:	pop    edx
  41c0e7:	mov    ah,0x9c
  41c0e9:	test   DWORD PTR [esi-0x2b81c58f],ebp
  41c0ef:	dec    esp
  41c0f0:	cmp    ebx,DWORD PTR [edx+0x3a19506d]
  41c0f6:	mov    cl,bh
  41c0f8:	sahf   
  41c0f9:	pop    DWORD PTR [edi+ebp*4+0x47346f2c]
  41c100:	in     al,dx
  41c101:	aas    
  41c102:	jae    0x41c13e
  41c104:	hlt    
  41c105:	lods   al,BYTE PTR ds:[esi]
  41c106:	jb     0x41c0ce
  41c108:	out    dx,eax
  41c109:	ficom  DWORD PTR [ecx]
  41c10b:	mov    WORD PTR [ecx],ss
  41c10d:	std    
  41c10e:	or     BYTE PTR [ebx-0x5d05d967],cl
  41c114:	xchg   ebx,eax
  41c115:	(bad)  
  41c116:	sbb    al,0x96
  41c118:	in     eax,0x6b
  41c11a:	out    dx,al
  41c11b:	mov    edx,DWORD PTR [esi+ecx*4]
  41c11e:	outs   dx,BYTE PTR ds:[esi]
  41c11f:	or     al,0x65
  41c121:	jnp    0x41c14a
  41c123:	addr16 pop esp
  41c125:	add    al,0xa3
  41c127:	fdivr  DWORD PTR [ebx+0x69]
  41c12a:	pushf  
  41c12b:	add    cl,BYTE PTR ds:0x135ef4e8
  41c131:	add    DWORD PTR [esi+0xa280d5c],0x4d
  41c138:	jo     0x41c0e5
  41c13a:	or     BYTE PTR [eax+0x33d16770],dl
  41c140:	arpl   WORD PTR [edx-0x4d2a1f9d],bp
  41c146:	out    0xe6,eax
  41c148:	lds    eax,FWORD PTR [edi]
  41c14a:	sub    edx,DWORD PTR [edx-0x4e]
  41c14d:	imul   esi,DWORD PTR [ecx],0x9
  41c150:	in     al,dx
  41c151:	scas   al,BYTE PTR es:[edi]
  41c152:	fsubr  QWORD PTR [edx+ebp*1+0x1010e199]
  41c159:	pop    edx
  41c15a:	js     0x41c13e
  41c15c:	dec    eax
  41c15d:	daa    
  41c15e:	das    
  41c15f:	ret    0xea89
  41c162:	fisttp WORD PTR [ebx+0x4b]
  41c165:	mov    gs,edi
  41c167:	jae    0x41c0ed
  41c169:	jne    0x41c191
  41c16b:	mov    edi,0xc45a6e8c
  41c170:	mov    esp,0x8911fc56
  41c175:	push   cs
  41c176:	mov    esi,0x937b7d34
  41c17b:	fisub  DWORD PTR [esi]
  41c17d:	adc    edx,DWORD PTR [ecx]
  41c17f:	cmp    eax,0x1a1b4675
  41c184:	and    BYTE PTR [esi],cl
  41c186:	in     eax,dx
  41c187:	sub    DWORD PTR [edx],ebp
  41c189:	test   al,0x23
  41c18b:	inc    esi
  41c18c:	mov    al,BYTE PTR [edi+0x19b0c9e4]
  41c192:	sbb    ebp,ebx
  41c194:	push   cs
  41c195:	sub    al,0xbb
  41c197:	cli    
  41c198:	sbb    eax,0xf5a3de72
  41c19d:	shr    BYTE PTR [eax-0x3c824af8],1
  41c1a3:	pusha  
  41c1a4:	ins    BYTE PTR es:[edi],dx
  41c1a5:	xlat   BYTE PTR ds:[ebx]
  41c1a6:	test   eax,0xcea9962c
  41c1ab:	jo     0x41c1c4
  41c1ad:	cmp    eax,0x33ea6c7e
  41c1b2:	pop    ecx
  41c1b3:	clc    
  41c1b4:	and    ecx,ecx
  41c1b6:	sub    ecx,DWORD PTR [eax-0x70]
  41c1b9:	loope  0x41c1a0
  41c1bb:	jno    0x41c193
  41c1bd:	fcmovu st,st(6)
  41c1bf:	stc    
  41c1c0:	arpl   WORD PTR [eax],di
  41c1c2:	lock iret 
  41c1c4:	stc    
  41c1c5:	fld    QWORD PTR [edi-0x6e65b8f1]
  41c1cb:	sub    dl,BYTE PTR [edx-0x5ae7ef50]
  41c1d1:	cs sub eax,0xe3c4aee6
  41c1d7:	mov    ebp,0xcc8ffa8a
  41c1dc:	repz ds scas al,BYTE PTR es:[edi]
  41c1df:	sbb    edx,DWORD PTR [edi-0x755af3ab]
  41c1e5:	inc    ebx
  41c1e6:	lods   eax,DWORD PTR ds:[esi]
  41c1e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1e8:	sub    al,0x59
  41c1ea:	sbb    eax,0xe4c596a7
  41c1ef:	ss jne 0x41c17a
  41c1f2:	inc    ecx
  41c1f3:	add    eax,0xb3080e87
  41c1f8:	dec    ebx
  41c1f9:	inc    ebx
  41c1fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1fb:	test   al,0xef
  41c1fd:	xchg   ebp,eax
  41c1ff:	xchg   esi,eax
  41c200:	pop    esp
  41c201:	cdq    
  41c202:	pop    esi
  41c203:	and    DWORD PTR [eax],ecx
  41c205:	and    eax,0x3cd9fb39
  41c20a:	imul   esi,DWORD PTR [ebp-0x187ce00a],0xac751992
  41c214:	xlat   BYTE PTR ds:[ebx]
  41c215:	lahf   
  41c216:	sub    BYTE PTR ds:[edi+eiz*4-0x48235308],bl
  41c21e:	mov    ah,0xb2
  41c220:	adc    BYTE PTR [edi-0x35ab4d4d],ah
  41c226:	xchg   edi,eax
  41c227:	shl    ebp,cl
  41c229:	sbb    al,0x4a
  41c22b:	data16 adc ch,BYTE PTR [ebp-0x50ca696a]
  41c232:	mov    ds:0x2a9edf38,al
  41c237:	shl    edi,cl
  41c239:	sar    BYTE PTR [edx+0x545bcc96],1
  41c23f:	mov    ds:0x29f6dbd2,eax
  41c244:	sub    esi,DWORD PTR [ebx-0x31c12b06]
  41c24a:	out    dx,al
  41c24b:	out    0x2c,al
  41c24d:	sub    eax,0xfbcc47f4
  41c252:	arpl   WORD PTR [ebp+0x791bd489],ax
  41c258:	icebp  
  41c259:	push   ebp
  41c25a:	pop    ss
  41c25b:	fcmovu st,st(4)
  41c25d:	ja     0x41c1fe
  41c25f:	jp     0x41c1e4
  41c261:	shl    DWORD PTR [edi+0x3fc86fd8],0xb8
  41c268:	int    0xab
  41c26a:	mov    DWORD PTR [edi+0xf],ecx
  41c26d:	rcr    BYTE PTR [ebp+0x1b],cl
  41c270:	mov    eax,ds:0xc4b4e17e
  41c275:	jmp    0x41c236
  41c277:	dec    esp
  41c278:	xchg   BYTE PTR [edi-0x1eedb887],ch
  41c27e:	push   ebx
  41c27f:	jge    0x41c2c7
  41c281:	call   0x6781:0xe56fdd01
  41c288:	mov    esp,0xba16ca5b
  41c28d:	cmpxchg edi,edi
  41c290:	dec    edx
  41c291:	ins    BYTE PTR es:[edi],dx
  41c292:	and    DWORD PTR [ebx-0x1b],ebx
  41c295:	jmp    0xa625:0x647177ab
  41c29c:	xchg   edi,eax
  41c29d:	mov    dh,0x69
  41c29f:	push   ebx
  41c2a0:	add    edx,DWORD PTR [ebp-0x57b44761]
  41c2a6:	mov    esp,0x1c56c005
  41c2ab:	retf   0xaaa9
  41c2ae:	test   al,0x67
  41c2b0:	ins    BYTE PTR es:[edi],dx
  41c2b1:	outs   dx,DWORD PTR ds:[esi]
  41c2b2:	mov    al,ds:0x5e463d92
  41c2b7:	imul   edi,ebx,0x20de5479
  41c2bd:	xor    dl,BYTE PTR [ecx+0x4b]
  41c2c0:	mov    WORD PTR [esp+ebx*4+0x38],fs
  41c2c4:	xchg   ebx,eax
  41c2c5:	lahf   
  41c2c6:	in     eax,dx
  41c2c7:	inc    ebx
  41c2c8:	inc    eax
  41c2c9:	push   0x57
  41c2cb:	(bad)  
  41c2cc:	dec    ecx
  41c2cd:	xor    BYTE PTR [eax],bl
  41c2cf:	inc    esi
  41c2d0:	or     BYTE PTR [esp+ebp*4-0x4d],ch
  41c2d4:	pop    edx
  41c2d5:	add    esp,DWORD PTR [esi-0x18]
  41c2d8:	(bad)  
  41c2d9:	push   0xf86193d3
  41c2de:	adc    BYTE PTR [edi+eiz*1-0x1d],al
  41c2e2:	fwait
  41c2e3:	std    
  41c2e4:	adc    BYTE PTR [eax],dh
  41c2e6:	mov    cl,cl
  41c2e8:	push   ebp
  41c2e9:	mov    esp,0x233bbd8
  41c2ee:	or     eax,0xb4933d14
  41c2f3:	and    eax,0x932a6c91
  41c2f8:	aad    0xf3
  41c2fa:	pop    esi
  41c2fb:	je     0x41c2b5
  41c2fd:	ds pushw ss
  41c300:	mov    edi,0x3c8308e6
  41c305:	call   0x93103c74
  41c30a:	jno    0x41c2d6
  41c30c:	xor    BYTE PTR [edi+0x3f],ah
  41c30f:	mov    ds:0xf7ac09eb,al
  41c314:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c315:	xor    BYTE PTR [eax],0x1d
  41c318:	jge    0x41c35c
  41c31a:	mov    eax,0xc7ba68cc
  41c31f:	fwait
  41c320:	mov    es,WORD PTR [ebx+0x6c66c1c1]
  41c326:	test   BYTE PTR [ebp+0x4aa9048],al
  41c32c:	mov    cl,0xec
  41c32e:	cmp    al,0xf5
  41c330:	fild   QWORD PTR [ecx-0x44]
  41c333:	pop    ds
  41c334:	xchg   esp,eax
  41c335:	mov    al,ds:0x74a96f9d
  41c33a:	sub    dh,0x11
  41c33d:	and    edi,DWORD PTR [ebx]
  41c33f:	cmp    al,0x1b
  41c341:	cmp    ebp,ebx
  41c343:	(bad)  
  41c344:	mul    DWORD PTR [ebx]
  41c346:	mov    DWORD PTR [eax+0x6a6827bd],ecx
  41c34c:	outs   dx,BYTE PTR ds:[esi]
  41c34d:	imul   edi,ecx,0x5c
  41c350:	jecxz  0x41c2f8
  41c352:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c353:	aad    0x59
  41c355:	sub    eax,0xd1f4bb91
  41c35a:	ss cmp eax,0xeb44d5e2
  41c360:	adc    al,0xc1
  41c362:	jno    0x41c3c9
  41c364:	cdq    
  41c365:	shr    BYTE PTR [ecx],cl
  41c367:	jecxz  0x41c2ee
  41c369:	and    al,0xf
  41c36b:	or     ecx,ecx
  41c36d:	loopne 0x41c3a1
  41c36f:	and    dh,ch
  41c371:	into   
  41c372:	push   0x38
  41c374:	xor    ch,bh
  41c376:	bound  esp,QWORD PTR [ebx+0x31]
  41c379:	mov    dl,0xdc
  41c37b:	in     eax,dx
  41c37c:	pop    ss
  41c37d:	mov    ds:0x66b56a61,al
  41c382:	scas   al,BYTE PTR es:[edi]
  41c383:	idiv   DWORD PTR [ecx]
  41c385:	mov    eax,0x5b3b91e
  41c38a:	aas    
  41c38b:	mov    ds:0x26f60fd4,eax
  41c390:	and    ecx,DWORD PTR [ebx+0x7c]
  41c393:	add    cl,BYTE PTR [edx+0x443235f3]
  41c399:	test   DWORD PTR [edi],ebp
  41c39b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c39c:	adc    bl,BYTE PTR [esi+0x52f4448c]
  41c3a2:	sbb    DWORD PTR [eax+0x4c6bb5],eax
  41c3a8:	bound  ebx,QWORD PTR ds:0xa5077cc6
  41c3ae:	(bad)  
  41c3b0:	lahf   
  41c3b1:	pop    es
  41c3b2:	mul    edi
  41c3b4:	int    0xa0
  41c3b6:	pop    esp
  41c3b7:	mov    ah,0x40
  41c3b9:	push   ecx
  41c3ba:	mov    ds:0x2cdef48,al
  41c3bf:	sbb    eax,0xa00fca03
  41c3c4:	jb     0x41c38b
  41c3c6:	aad    0xdd
  41c3c8:	adc    DWORD PTR [ebx-0x47],ebx
  41c3cb:	in     al,dx
  41c3cc:	mov    dl,0x5a
  41c3ce:	enter  0x6db2,0x2a
  41c3d2:	xor    eax,0xb21e3d84
  41c3d7:	xlat   BYTE PTR ds:[ebx]
  41c3d8:	mov    eax,0x38c7473c
  41c3dd:	je     0x41c364
  41c3df:	push   cs
  41c3e0:	add    ah,BYTE PTR [edi+edx*1+0x51326039]
  41c3e7:	dec    edi
  41c3e8:	sbb    al,0x96
  41c3ea:	enter  0x4241,0x8c
  41c3ee:	sub    cl,BYTE PTR [edi+0x4f891f48]
  41c3f4:	jmp    0x41c466
  41c3f6:	mov    edi,0xa16642af
  41c3fb:	ss das 
  41c3fd:	in     al,dx
  41c3fe:	mov    esi,0x59d6b4d7
  41c403:	fld    TBYTE PTR [eax]
  41c405:	jno    0x41c445
  41c407:	sub    esp,0x79
  41c40a:	in     al,0xb4
  41c40c:	minps  xmm7,xmm0
  41c40f:	jbe    0x41c3a0
  41c411:	retf   
  41c412:	pop    ebp
  41c413:	mov    bh,0x64
  41c415:	or     DWORD PTR [edi],0x162430c9
  41c41b:	inc    edx
  41c41c:	xor    ebp,DWORD PTR [ebp-0x43c8c357]
  41c422:	cmp    ch,ch
  41c424:	adc    eax,0x68a7a2c6
  41c429:	(bad)  
  41c42a:	xchg   edx,eax
  41c42b:	in     al,dx
  41c42c:	mov    WORD PTR [edi],es
  41c42e:	int    0x78
  41c430:	shr    BYTE PTR [eax+0x2],1
  41c433:	sub    al,0x19
  41c435:	daa    
  41c436:	les    esi,FWORD PTR [esi-0x727bf10a]
  41c43c:	sbb    al,0xe3
  41c43e:	aad    0x62
  41c440:	rcl    BYTE PTR [ebp-0x4f],cl
  41c443:	mov    ?,WORD PTR [ebx+0x715e66cd]
  41c449:	hlt    
  41c44a:	push   0x8597cf07
  41c44f:	sub    edi,DWORD PTR [esi-0x3367fedb]
  41c455:	in     eax,dx
  41c456:	popf   
  41c457:	int3   
  41c458:	xchg   DWORD PTR [esi+0x3a],ebx
  41c45b:	outs   dx,DWORD PTR ds:[esi]
  41c45c:	xor    BYTE PTR [ebx+ecx*8],ch
  41c45f:	rcl    esi,1
  41c461:	in     eax,dx
  41c462:	dec    esi
  41c463:	leave  
  41c464:	inc    edi
  41c465:	mov    ebx,0x3884822a
  41c46a:	mov    esi,0xc61c6a67
  41c470:	ret    
  41c471:	mov    edx,0x1fd00ca2
  41c476:	and    DWORD PTR [esi-0x4a],0x625731df
  41c47d:	in     al,0xbb
  41c47f:	ss in  al,0xbb
  41c482:	arpl   WORD PTR [eax+0x7e5a4074],si
  41c488:	or     eax,0xef02683b
  41c48d:	pop    esi
  41c48e:	sub    BYTE PTR [esi],0xda
  41c491:	(bad)  
  41c492:	das    
  41c493:	fidiv  WORD PTR [edi+0x32a744ce]
  41c499:	icebp  
  41c49a:	pop    ecx
  41c49b:	or     ah,BYTE PTR [ebp-0x46d2a25a]
  41c4a1:	adc    DWORD PTR [eax],ebx
  41c4a3:	ficom  WORD PTR [edx+0x21]
  41c4a6:	fdiv   st(7),st
  41c4a8:	cld    
  41c4a9:	mov    ds,WORD PTR [esi+0x23]
  41c4ac:	mov    ch,0x6
  41c4ae:	ja     0x41c51c
  41c4b0:	mov    esi,0xcb0a8f5d
  41c4b5:	sub    BYTE PTR [edx*8-0x3da5379b],dh
  41c4bc:	stos   BYTE PTR es:[edi],al
  41c4bd:	repnz cli 
  41c4bf:	jge    0x41c4be
  41c4c1:	adc    al,0x7b
  41c4c3:	icebp  
  41c4c4:	jb     0x41c4f8
  41c4c6:	mov    eax,0x39841ac5
  41c4cb:	(bad)  
  41c4cc:	xor    eax,0x8f3e4cce
  41c4d1:	mov    eax,0xcf7081f5
  41c4d6:	fild   DWORD PTR [ebx+0x2c]
  41c4db:	fisub  WORD PTR [esi+ebx*1-0x4]
  41c4df:	dec    edi
  41c4e0:	xchg   esp,eax
  41c4e1:	leave  
  41c4e2:	inc    ebp
  41c4e3:	push   eax
  41c4e4:	push   es
  41c4e5:	xchg   esi,eax
  41c4e6:	mov    ds:0x1ed0ee5b,al
  41c4eb:	(bad)  
  41c4ed:	pop    edi
  41c4ef:	mov    bh,0x8e
  41c4f1:	lods   al,BYTE PTR ds:[esi]
  41c4f2:	retf   0x4c0
  41c4f5:	test   DWORD PTR [edi],ecx
  41c4f7:	test   eax,0x54c80f9e
  41c4fc:	(bad)  
  41c4fd:	imul   eax,DWORD PTR [edx-0x60],0xae92cbec
  41c504:	lods   al,BYTE PTR ds:[esi]
  41c505:	das    
  41c506:	and    BYTE PTR [edi],ah
  41c508:	cmp    dl,BYTE PTR [ebp-0x24]
  41c50b:	or     ecx,DWORD PTR [edi+0x2d]
  41c50e:	dec    ebp
  41c50f:	addr16 jl 0x41c4e8
  41c512:	aaa    
  41c513:	inc    ecx
  41c514:	and    DWORD PTR fs:[edx-0x37910987],0x1f
  41c51c:	test   al,0x93
  41c51e:	mov    DWORD PTR [ebx+0x17],0x68734433
  41c525:	jg     0x41c52d
  41c527:	rcl    BYTE PTR [edi],cl
  41c529:	stos   DWORD PTR es:[edi],eax
  41c52a:	cmp    eax,DWORD PTR [edx+0x51]
  41c52d:	call   0xaf14:0x2f61a0cf
  41c534:	xchg   ebx,eax
  41c535:	sub    al,0x7a
  41c537:	mov    bl,0x40
  41c539:	inc    ebx
  41c53a:	adc    ebx,edx
  41c53c:	ins    BYTE PTR es:[di],dx
  41c53e:	jo     0x41c52e
  41c540:	rcl    DWORD PTR [ecx],0x28
  41c543:	add    ebx,DWORD PTR [edi+0x6e]
  41c546:	not    DWORD PTR [edi]
  41c548:	call   0x3f3c:0xc14a0085
  41c54f:	popf   
  41c550:	xor    dh,BYTE PTR [ecx]
  41c552:	pushf  
  41c553:	sbb    DWORD PTR [ebx+0x24],eax
  41c556:	xsha1  (bad)
  41c557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c558:	retf   
  41c559:	cmp    ebp,DWORD PTR [ebp+0x32]
  41c55c:	shl    BYTE PTR [edx+0x9],cl
  41c55f:	inc    ecx
  41c560:	jge    0x41c510
  41c562:	xchg   edx,eax
  41c563:	mov    eax,DWORD PTR [ecx+0x4d]
  41c566:	push   ss
  41c567:	mov    dl,0x5c
  41c569:	fucomip st,st(0)
  41c56b:	push   ebx
  41c56c:	pop    ebp
  41c56d:	xchg   edi,eax
  41c56e:	sbb    al,dl
  41c570:	mov    al,0x3c
  41c572:	call   0xcb813634
  41c577:	arpl   WORD PTR [ebp+0x26e93e55],ax
  41c57d:	sahf   
  41c57e:	ret    
  41c57f:	dec    esp
  41c580:	adc    DWORD PTR [eax-0x62],edx
  41c583:	hlt    
  41c584:	shl    BYTE PTR [ecx+0x16120c9f],cl
  41c58a:	push   esi
  41c58b:	pop    ss
  41c58c:	aas    
  41c58d:	push   ecx
  41c58e:	inc    ecx
  41c58f:	mov    DWORD PTR [eax-0xd25e03e],edx
  41c595:	ins    BYTE PTR es:[edi],dx
  41c596:	in     eax,dx
  41c597:	or     ah,BYTE PTR [ebp+edx*2+0x183258b5]
  41c59e:	jg     0x41c606
  41c5a0:	inc    esp
  41c5a1:	ret    0xacc0
  41c5a4:	cmp    al,0x50
  41c5a6:	jns    0x41c55c
  41c5a8:	sahf   
  41c5a9:	lods   eax,DWORD PTR ds:[esi]
  41c5aa:	and    DWORD PTR [esi-0x4e],ecx
  41c5ad:	scas   eax,DWORD PTR es:[edi]
  41c5ae:	movsx  esi,BYTE PTR [ecx-0x60]
  41c5b2:	pop    edi
  41c5b3:	adc    al,0x26
  41c5b5:	in     eax,dx
  41c5b6:	mov    gs,WORD PTR [ecx-0x527499c8]
  41c5bc:	push   ecx
  41c5bd:	popa   
  41c5be:	gs sahf 
  41c5c0:	out    0xf1,eax
  41c5c2:	mov    DWORD PTR [esi-0x58],ebp
  41c5c5:	mov    dl,0xf3
  41c5c7:	fdiv   QWORD PTR [eax+0x71]
  41c5ca:	stos   DWORD PTR es:[edi],eax
  41c5cb:	inc    ebx
  41c5cc:	xchg   edi,eax
  41c5cd:	repz test eax,0xc2217f27
  41c5d3:	adc    BYTE PTR [eax+ebp*8+0x1e],0x70
  41c5d8:	fwait
  41c5d9:	pop    esp
  41c5da:	xchg   edi,eax
  41c5db:	ja     0x41c5e6
  41c5dd:	pushf  
  41c5de:	add    al,0xe9
  41c5e0:	pop    ss
  41c5e1:	pop    ebp
  41c5e2:	mov    esp,0xba2de7bd
  41c5e7:	rcl    DWORD PTR [esi+0x197aa07a],0x6d
  41c5ee:	mov    edx,0x2db9b39f
  41c5f3:	je     0x41c5ae
  41c5f5:	(bad)  
  41c5f6:	push   es
  41c5f7:	hlt    
  41c5f8:	dec    eax
  41c5f9:	data16 jae 0x41c583
  41c5fc:	sbb    BYTE PTR [edx+0x3b],0x56
  41c600:	mov    DWORD PTR [edx+0x2e9de02a],0x17d78652
  41c60a:	and    al,0xa5
  41c60c:	ret    
  41c60d:	test   eax,0xc4d26f8
  41c612:	or     al,0x8d
  41c614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c615:	mov    esp,0xc60ff740
  41c61a:	(bad)  
  41c61b:	aam    0xee
  41c61d:	out    0xb1,al
  41c61f:	(bad)  
  41c620:	test   eax,0xc7280b5e
  41c625:	and    DWORD PTR [ebp+0x5e3b7533],ecx
  41c62b:	sar    BYTE PTR [ebx+0x6f],0x52
  41c62f:	jmp    0xb061:0xe43ba182
  41c636:	dec    esp
  41c637:	dec    esp
  41c638:	fisttp DWORD PTR [esi+0x14]
  41c63b:	add    cl,BYTE PTR [eax+ebx*4+0x1f6815c0]
  41c642:	jb     0x41c690
  41c644:	(bad)
  41c647:	inc    edx
  41c648:	lea    ebp,[ebp+0x55ba1a56]
  41c64e:	addr16 xchg esi,eax
  41c650:	inc    ebp
  41c651:	neg    DWORD PTR [esi+0x4d]
  41c654:	mov    ebx,0x48f6f49f
  41c659:	outs   dx,DWORD PTR ds:[esi]
  41c65a:	cmp    dh,BYTE PTR [ebx-0x17]
  41c65d:	sub    eax,0xdae241df
  41c662:	das    
  41c663:	xchg   ebx,eax
  41c664:	inc    edx
  41c665:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c666:	mov    ss,WORD PTR [ebx+ebx*1+0x2]
  41c66a:	mov    ecx,0x94db88b2
  41c66f:	int    0xe
  41c671:	add    al,0xf3
  41c673:	push   esp
  41c674:	sbb    eax,0x1bd9418e
  41c679:	inc    ecx
  41c67a:	clc    
  41c67b:	cmp    eax,0x5b402c31
  41c680:	and    bl,BYTE PTR [esi+0x56a9cbdf]
  41c686:	adc    DWORD PTR [ecx-0x4284403],ecx
  41c68c:	cmp    al,0x96
  41c68e:	inc    ebx
  41c68f:	and    BYTE PTR [eax-0x14533e5],bl
  41c695:	adc    BYTE PTR [ebx+ebx*8+0x66b65179],cl
  41c69c:	retf   
  41c69d:	push   esp
  41c69e:	loop   0x41c683
  41c6a0:	mov    ecx,DWORD PTR ds:0x4dd3edc
  41c6a6:	test   eax,0x1478023c
  41c6ab:	sbb    dl,ch
  41c6ad:	cmp    al,0x79
  41c6af:	mov    esi,0xcb2a3484
  41c6b4:	push   ss
  41c6b5:	add    eax,eax
  41c6b7:	cld    
  41c6b8:	push   ds
  41c6b9:	push   ebx
  41c6ba:	or     ebx,eax
  41c6bc:	call   0x581f:0x54afa646
  41c6c3:	enter  0xe082,0x8c
  41c6c7:	cwde   
  41c6c8:	or     ebp,eax
  41c6ca:	adc    bh,dl
  41c6cc:	jge    0x41c743
  41c6ce:	or     esi,ecx
  41c6d0:	loop   0x41c664
  41c6d2:	and    al,0xd6
  41c6d4:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6d6:	or     dl,bl
  41c6d8:	sub    ah,BYTE PTR [edi]
  41c6da:	push   esi
  41c6db:	fcomp  st(4)
  41c6dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6de:	pop    esi
  41c6df:	pop    ds
  41c6e0:	mov    ebp,0x3a6fa07d
  41c6e5:	dec    esi
  41c6e6:	leave  
  41c6e7:	lods   eax,DWORD PTR ds:[esi]
  41c6e8:	or     BYTE PTR [eax-0x1ce99c],0xe1
  41c6ef:	lods   eax,DWORD PTR ds:[esi]
  41c6f0:	mov    ds:0xaae5215f,eax
  41c6f5:	jns    0x41c687
  41c6f7:	xchg   esi,eax
  41c6f8:	jmp    0x9b6d813f
  41c6fd:	dec    eax
  41c6fe:	inc    esp
  41c6ff:	ud2    
  41c701:	push   es
  41c702:	mov    WORD PTR [esp+ecx*4-0x19],?
  41c706:	sahf   
  41c707:	adc    eax,0xac4f2e2c
  41c70c:	or     DWORD PTR [ebx+0x1389bc0a],ebx
  41c712:	jae    0x41c707
  41c714:	mov    al,0xb0
  41c716:	jmp    0x41c754
  41c718:	test   eax,0xa5ee50f3
  41c71d:	dec    esi
  41c71e:	xchg   edi,eax
  41c71f:	ins    DWORD PTR es:[edi],dx
  41c720:	sbb    eax,0xa734a3a8
  41c725:	push   eax
  41c726:	cli    
  41c727:	sahf   
  41c728:	inc    esp
  41c729:	mov    ebp,DWORD PTR [ebp+0x4302de33]
  41c72f:	fcmovne st,st(6)
  41c731:	mov    cl,0xf3
  41c733:	fcom   QWORD PTR [edi+0x1cf383af]
  41c739:	int3   
  41c73a:	jnp    0x41c721
  41c73c:	dec    esi
  41c73d:	into   
  41c73e:	ss out dx,eax
  41c740:	stos   BYTE PTR es:[edi],al
  41c741:	inc    edx
  41c742:	imul   ebp,DWORD PTR [eax+ebp*8-0x716246be],0xf67a89fd
  41c74d:	push   edi
  41c74e:	mov    al,BYTE PTR [edx-0x1]
  41c751:	dec    ecx
  41c752:	cmp    al,0x9b
  41c754:	call   0xcff7:0x48517371
  41c75b:	push   ecx
  41c75c:	gs (bad) 
  41c75f:	xor    al,0x56
  41c761:	push   esi
  41c762:	outs   dx,BYTE PTR ds:[esi]
  41c763:	sub    BYTE PTR [ecx+0x568203c0],dl
  41c769:	loope  0x41c6fe
  41c76b:	faddp  st(6),st
  41c76d:	imul   esp,DWORD PTR [ebx-0x23],0x28
  41c771:	mov    esp,0x92958b41
  41c776:	sbb    esi,DWORD PTR [eax+0xdfb6f2b]
  41c77c:	dec    edi
  41c77d:	repnz repnz scas eax,DWORD PTR es:[edi]
  41c780:	and    DWORD PTR [ebx+esi*1],ebp
  41c783:	jp     0x41c745
  41c785:	mov    esi,0x63ba5a24
  41c78a:	sti    
  41c78b:	dec    ebx
  41c78c:	sub    ch,bh
  41c78e:	mov    eax,ds:0x14ce38ce
  41c793:	popa   
  41c794:	add    DWORD PTR [eax+0x33],esi
  41c797:	adc    ah,BYTE PTR [ebx-0x5b4f906a]
  41c79d:	mov    ah,0x81
  41c79f:	outs   dx,DWORD PTR ds:[esi]
  41c7a0:	fs jo  0x41c7a0
  41c7a3:	lods   eax,DWORD PTR ds:[esi]
  41c7a4:	sar    BYTE PTR [esi],0xfd
  41c7a7:	sub    DWORD PTR [eax+0xd],0x5578c2d7
  41c7ae:	adc    esi,esi
  41c7b0:	aad    0x89
  41c7b2:	(bad)  
  41c7b3:	sbb    DWORD PTR [ebp+0x50],ebx
  41c7b6:	(bad)  
  41c7b7:	je     0x41c7ee
  41c7b9:	jbe    0x41c764
  41c7bb:	mov    dl,0xa6
  41c7bd:	test   ebp,0xc0c1d644
  41c7c3:	jle    0x41c76f
  41c7c5:	mov    ch,0x6b
  41c7c7:	cdq    
  41c7c8:	xchg   ch,ah
  41c7ca:	or     eax,0x2481224b
  41c7cf:	mov    esi,0xb1edc281
  41c7d4:	aad    0xa4
  41c7d6:	ret    
  41c7d7:	out    0xb1,al
  41c7d9:	lods   eax,DWORD PTR ds:[esi]
  41c7da:	cmp    al,0x94
  41c7dc:	ins    DWORD PTR es:[edi],dx
  41c7dd:	sub    BYTE PTR [esi+0x64],bh
  41c7e0:	mov    edx,0x7a5f115d
  41c7e5:	test   eax,0x21c5f738
  41c7ea:	sub    DWORD PTR ds:0xfc7f358d,edx
  41c7f0:	iret   
  41c7f1:	ret    0x5cef
  41c7f4:	xor    al,0x2e
  41c7f6:	ja     0x41c818
  41c7f8:	imul   esi,DWORD PTR [edx+0x66809e8f],0xffffff8e
  41c7ff:	sub    al,BYTE PTR [edx-0x47a56921]
  41c805:	and    al,0x70
  41c807:	jl     0x41c78b
  41c809:	sahf   
  41c80a:	jae    0x41c792
  41c80c:	ret    
  41c80d:	sbb    ch,BYTE PTR [edx-0x206099b1]
  41c813:	mov    esp,0xdb50f7d
  41c818:	sub    eax,0xec8f64d3
  41c81d:	repnz mov ebp,0x748750ac
  41c823:	or     esp,DWORD PTR ds:0x75f668e
  41c829:	sbb    eax,0x3d8d7e5a
  41c82e:	xor    eax,0x80bd3e44
  41c833:	(bad)  
  41c834:	fld    TBYTE PTR [edx+0x71]
  41c837:	pop    esi
  41c838:	(bad)  
  41c839:	dec    ebp
  41c83a:	in     al,0x98
  41c83c:	jl     0x41c825
  41c83e:	int    0x30
  41c840:	iret   
  41c841:	mov    edx,0x5683608a
  41c846:	adc    cl,BYTE PTR [esi+0x7e]
  41c849:	sbb    esi,DWORD PTR [edx]
  41c84b:	data16 mov al,0xd8
  41c84e:	or     BYTE PTR [edi-0x2f6eaf38],dl
  41c854:	inc    eax
  41c855:	mov    ch,0x38
  41c857:	mov    eax,0xc9e8cd40
  41c85c:	cmp    al,0xc7
  41c85e:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41c860:	fdivp  st(7),st
  41c862:	cmp    esp,ebx
  41c864:	lds    esi,FWORD PTR [ebp+0x82d8bb6]
  41c86a:	lock nop
  41c86c:	pop    esi
  41c86d:	xchg   BYTE PTR ds:0x24edd98e,dl
  41c873:	sbb    esi,edi
  41c875:	fist   WORD PTR [edx+0xd]
  41c878:	dec    edi
  41c879:	mov    BYTE PTR [ebx+0x3c],0x1
  41c87d:	jb     0x41c8b8
  41c87f:	dec    eax
  41c880:	stos   DWORD PTR es:[edi],eax
  41c881:	inc    ebx
  41c882:	xchg   ebx,eax
  41c883:	mov    ah,0x9c
  41c885:	in     al,dx
  41c886:	test   eax,0x611d5eb9
  41c88b:	add    eax,0x4e3a790a
  41c890:	xor    BYTE PTR [edi-0x1327dfa2],bh
  41c896:	cmp    eax,0xce0be263
  41c89b:	dec    edi
  41c89c:	xor    BYTE PTR [ebx-0x13548dc5],cl
  41c8a2:	(bad)  
  41c8a4:	adc    DWORD PTR [ecx+edx*8],ebp
  41c8a7:	(bad)  
  41c8a8:	mov    dh,0x8b
  41c8aa:	add    dl,bh
  41c8ac:	mov    bh,0x54
  41c8ae:	dec    ebp
  41c8af:	push   esi
  41c8b0:	jl     0x41c87c
  41c8b2:	icebp  
  41c8b3:	xor    DWORD PTR [ebp+0x2d],edi
  41c8b6:	dec    edx
  41c8b7:	stc    
  41c8b8:	enter  0x16c1,0x89
  41c8bc:	and    al,BYTE PTR [edi-0xf]
  41c8bf:	in     al,0x6c
  41c8c1:	jle    0x41c916
  41c8c3:	ret    0xa399
  41c8c6:	mov    BYTE PTR [edi-0x16d2531],cl
  41c8cc:	cld    
  41c8cd:	loope  0x41c892
  41c8cf:	jp     0x41c893
  41c8d1:	cdq    
  41c8d2:	bound  esi,QWORD PTR [eax]
  41c8d4:	add    esp,edi
  41c8d6:	ins    BYTE PTR es:[edi],dx
  41c8d7:	add    esi,ebx
  41c8d9:	xor    al,0xcb
  41c8db:	imul   edi,DWORD PTR [ebp+0x7c],0x3931da06
  41c8e2:	ins    DWORD PTR es:[edi],dx
  41c8e3:	das    
  41c8e4:	add    bh,cl
  41c8e6:	mov    ecx,DWORD PTR [ebx]
  41c8e8:	mul    BYTE PTR [edi]
  41c8ea:	adc    cl,BYTE PTR [ebx+0x55]
  41c8ed:	lods   eax,DWORD PTR ds:[esi]
  41c8ee:	scas   eax,DWORD PTR es:[edi]
  41c8ef:	mov    bh,0x37
  41c8f1:	jnp    0x41c924
  41c8f3:	test   al,0xed
  41c8f5:	(bad)  
  41c8f7:	(bad)  
  41c8f8:	lock xchg edx,eax
  41c8fa:	mov    ebx,ebp
  41c8fc:	out    dx,al
  41c8fd:	stos   DWORD PTR es:[edi],eax
  41c8fe:	(bad)
  41c901:	(bad)  
  41c902:	int3   
  41c903:	xor    ebx,DWORD PTR [edx+0x27]
  41c906:	cmp    eax,0xe9c3264e
  41c90b:	sub    DWORD PTR [ecx-0x6a],esp
  41c90e:	cmp    esi,0x464acbf7
  41c914:	sar    BYTE PTR gs:[edi],1
  41c917:	jns    0x41c921
  41c919:	jge    0x41c912
  41c91b:	push   0x1f
  41c91d:	shr    DWORD PTR [esi+0x26ccbf52],1
  41c923:	sbb    al,0x32
  41c925:	les    eax,FWORD PTR [esi+0x17d09586]
  41c92b:	cld    
  41c92c:	outs   dx,DWORD PTR ds:[esi]
  41c92d:	fnstenv [edx+edi*8]
  41c930:	dec    ebp
  41c931:	mov    bl,cl
  41c933:	ss lock inc ebp
  41c936:	out    0x7f,eax
  41c938:	jb     0x41c903
  41c93a:	push   ebp
  41c93b:	mov    edx,0xfc8bb242
  41c940:	mov    DWORD PTR ss:[ebx],eax
  41c943:	and    esi,DWORD PTR [ebp+0x63cd2a36]
  41c949:	test   BYTE PTR ds:0xbc941e4a,ah
  41c94f:	push   cs
  41c950:	ds int 0x9b
  41c953:	mov    bl,0x49
  41c955:	push   ds
  41c956:	fild   QWORD PTR [ebx]
  41c958:	or     al,0xfb
  41c95a:	bnd jmp 0x41c938
  41c95d:	mov    esi,0x398a580
  41c962:	sbb    eax,0xeffaab79
  41c967:	add    DWORD PTR [eax],ebx
  41c969:	xchg   edx,eax
  41c96a:	xor    DWORD PTR [ebx-0x46],0xbc858f9
  41c971:	fld    TBYTE PTR [edi]
  41c973:	push   esp
  41c974:	xchg   edi,eax
  41c975:	ret    
  41c976:	pop    ebp
  41c977:	dec    ebx
  41c978:	jmp    0xdbf6bada
  41c97d:	cmp    DWORD PTR [edx-0x4a340c21],edi
  41c983:	je     0x41c910
  41c985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c986:	adc    eax,0x27f6e6ed
  41c98b:	dec    esi
  41c98c:	dec    ebx
  41c98d:	test   eax,0x44a71b01
  41c992:	mov    DWORD PTR [ecx+0x7b],eax
  41c995:	xchg   edi,eax
  41c996:	shl    BYTE PTR [esi+ecx*8-0x406d958b],0x3e
  41c99e:	push   ebx
  41c99f:	in     eax,0xd0
  41c9a1:	jo     0x41c9f9
  41c9a3:	call   FWORD PTR [esi+edx*8-0x63]
  41c9a7:	(bad)  [ecx-0x4d]
  41c9aa:	adc    DWORD PTR [edi],0x250ce21d
  41c9b0:	call   DWORD PTR [eax+edx*1-0x8]
  41c9b4:	or     eax,0x75a3cfc1
  41c9b9:	aam    0x60
  41c9bb:	call   0x2590c608
  41c9c0:	add    ebx,DWORD PTR gs:[edx-0x25314a34]
  41c9c7:	pop    ebp
  41c9c8:	ja     0x41c9b9
  41c9ca:	dec    ebp
  41c9cb:	rol    DWORD PTR [edi+0x8],0x4e
  41c9cf:	je     0x41c981
  41c9d1:	mov    ds:0x811c6cf8,eax
  41c9d6:	mov    edi,0x915a352c
  41c9db:	fistp  DWORD PTR [eax-0x6d]
  41c9de:	ret    
  41c9df:	xchg   DWORD PTR [eax-0x1144d394],ebx
  41c9e5:	retf   0x76b5
  41c9e8:	xchg   esi,eax
  41c9e9:	aam    0xe
  41c9eb:	daa    
  41c9ec:	shl    BYTE PTR [ebp+ebp*1-0x13],cl
  41c9f0:	(bad)  
  41c9f1:	jge    0x41c9fc
  41c9f3:	shl    BYTE PTR [ecx+0x3e73e1e6],1
  41c9f9:	mov    ecx,0x1529e7ee
  41c9fe:	xor    eax,edi
  41ca00:	or     dh,BYTE PTR [ebp+0x90769bc]
  41ca06:	cmp    bh,BYTE PTR es:[ebx+esi*8+0x6798aa68]
  41ca0e:	pop    ss
  41ca0f:	fwait
  41ca10:	(bad)  
  41ca11:	cmp    DWORD PTR [ebx-0x4e],esp
  41ca14:	in     eax,0x9b
  41ca16:	jle    0x41ca53
  41ca18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca19:	or     ebx,DWORD PTR [ecx]
  41ca1b:	nop
  41ca1c:	int3   
  41ca1d:	lds    edx,FWORD PTR [ebx-0x6d]
  41ca20:	sub    esi,DWORD PTR [ebp+0x9]
  41ca23:	inc    esi
  41ca24:	dec    ebx
  41ca25:	mov    edi,0x2b00b6fd
  41ca2a:	fisttp DWORD PTR [ebp-0x1b154c20]
  41ca30:	add    eax,0xe48c73a
  41ca35:	adc    ecx,DWORD PTR [ebx+0x19]
  41ca38:	sar    DWORD PTR [edx-0x1d],1
  41ca3b:	dec    ebx
  41ca3c:	sub    esi,ebp
  41ca3e:	in     al,dx
  41ca3f:	lahf   
  41ca40:	sahf   
  41ca41:	sub    eax,edx
  41ca43:	fstp   QWORD PTR [eax-0x728e8185]
  41ca49:	mov    edi,?
  41ca4b:	mov    ch,0xfd
  41ca4d:	add    eax,0x8952ff05
  41ca52:	jo     0x41caa0
  41ca54:	cmp    ch,bh
  41ca56:	stos   BYTE PTR es:[edi],al
  41ca57:	jne    0x41cac5
  41ca59:	sbb    ecx,0x7
  41ca5c:	dec    ecx
  41ca5d:	test   DWORD PTR [ebx-0x3dbe293d],edx
  41ca63:	cs aad 0xc7
  41ca66:	push   0x14
  41ca68:	stos   DWORD PTR es:[edi],eax
  41ca69:	outs   dx,DWORD PTR ds:[esi]
  41ca6a:	mov    ecx,0x80e197
  41ca6f:	pop    ecx
  41ca70:	mov    edx,0xc97e5f5f
  41ca75:	je     0x41ca24
  41ca77:	adc    edx,DWORD PTR [ebx-0x3285dfc0]
  41ca7d:	xchg   esi,eax
  41ca7e:	jae    0x41ca31
  41ca80:	ret    0x6437
  41ca83:	sub    al,0x74
  41ca85:	adc    DWORD PTR [ecx+0x18],ebx
  41ca88:	out    dx,eax
  41ca89:	add    cl,BYTE PTR [edi]
  41ca8b:	add    eax,0x2e7ca5fa
  41ca90:	imul   edx,DWORD PTR [esi-0x53],0x9240a97c
  41ca97:	retf   
  41ca98:	scas   eax,DWORD PTR es:[edi]
  41ca99:	push   ecx
  41ca9a:	mov    ebp,0x990f2169
  41ca9f:	jb     0x41caa9
  41caa1:	xchg   DWORD PTR [eax-0x5345514e],esp
  41caa7:	ds push ebx
  41caa9:	inc    edi
  41caaa:	test   eax,0x85625dd9
  41caaf:	push   ebx
  41cab0:	(bad)  
  41cab1:	mov    ch,0xef
  41cab3:	fadd   QWORD PTR [ecx-0x4c697f94]
  41cab9:	shl    dl,0xf5
  41cabc:	inc    esp
  41cabd:	aad    0xc2
  41cabf:	sbb    bh,al
  41cac1:	int    0xe
  41cac3:	repz xchg edx,eax
  41cac5:	mov    bl,0x5f
  41cac7:	push   esi
  41cac8:	rol    DWORD PTR [edi-0x46],0x7f
  41cacc:	xchg   DWORD PTR [esi+0xd6431f5],ebp
  41cad2:	adc    eax,0x93aeadba
  41cad7:	mov    edx,0x20703aea
  41cadc:	popf   
  41cadd:	fcomp  DWORD PTR [edx]
  41cadf:	stc    
  41cae0:	add    al,0xb0
  41cae2:	add    edi,DWORD PTR ds:0xcff19e1f
  41cae8:	inc    edx
  41cae9:	repnz dec ecx
  41caeb:	iret   
  41caec:	retf   0x67b6
  41caef:	lods   al,BYTE PTR ds:[esi]
  41caf0:	retf   0x97b3
  41caf3:	xchg   BYTE PTR [ebx],dl
  41caf5:	clc    
  41caf6:	or     DWORD PTR [eax-0x73],ecx
  41caf9:	cmp    eax,0x6ac18b23
  41cafe:	inc    esi
  41caff:	pop    ss
  41cb00:	mov    al,0x6d
  41cb02:	push   eax
  41cb03:	jg     0x41cb44
  41cb05:	shr    DWORD PTR [eax],1
  41cb07:	aam    0xd3
  41cb09:	push   esi
  41cb0a:	inc    edx
  41cb0b:	sbb    DWORD PTR [ecx-0x13],0x76
  41cb0f:	cwde   
  41cb10:	pop    es
  41cb11:	jns    0x41cb03
  41cb13:	pop    esp
  41cb14:	push   0xffffffba
  41cb16:	dec    ebp
  41cb17:	hlt    
  41cb18:	and    DWORD PTR [ecx],eax
  41cb1a:	(bad)  
  41cb1b:	push   edi
  41cb1c:	hlt    
  41cb1d:	sub    ebx,DWORD PTR [ebx+0x6cd36241]
  41cb23:	stos   BYTE PTR es:[edi],al
  41cb24:	xchg   esp,eax
  41cb25:	je     0x41cb77
  41cb27:	xchg   ecx,eax
  41cb28:	in     al,0x44
  41cb2a:	cmp    BYTE PTR [esi],0xc3
  41cb2d:	sbb    eax,esp
  41cb2f:	nop
  41cb30:	dec    eax
  41cb31:	iret   
  41cb32:	aam    0x3a
  41cb34:	pop    esi
  41cb35:	jns    0x41cb34
  41cb37:	jle    0x41caec
  41cb39:	cli    
  41cb3a:	push   ds
  41cb3b:	jno    0x41cb0d
  41cb3d:	mov    bl,0xe4
  41cb3f:	xchg   esi,ebx
  41cb41:	add    ch,cl
  41cb43:	call   0x9be8:0x3e1bd98
  41cb4a:	loop   0x41cbb8
  41cb4c:	mov    bh,BYTE PTR [ebx+0x27cbbadc]
  41cb52:	mov    eax,ds:0xcc72f63
  41cb57:	push   cs
  41cb58:	rol    BYTE PTR [eax+0x7edca69c],0xbe
  41cb5f:	inc    edx
  41cb60:	pusha  
  41cb61:	jmp    0x41cb7b
  41cb63:	inc    edx
  41cb64:	test   ebp,esp
  41cb66:	in     al,dx
  41cb67:	lods   al,BYTE PTR ds:[esi]
  41cb68:	int    0xf9
  41cb6a:	lods   al,BYTE PTR ds:[esi]
  41cb6b:	shl    bl,cl
  41cb6d:	sbb    eax,0xcfb82b79
  41cb72:	shl    DWORD PTR [ebx-0x57],0xae
  41cb76:	sub    eax,0x55e42635
  41cb7b:	call   FWORD PTR [edi+0x1]
  41cb7e:	loopne 0x41cbc8
  41cb80:	shr    BYTE PTR [ecx-0x5a6dcda3],cl
  41cb86:	sub    bl,BYTE PTR [edi+0x3c]
  41cb89:	add    eax,0x828f8d19
  41cb8e:	jne    0x41cb57
  41cb90:	ficomp DWORD PTR [edi-0x2f]
  41cb93:	pop    esi
  41cb94:	add    BYTE PTR ds:0xd34bfd1,0xe5
  41cb9b:	mov    ah,0x50
  41cb9d:	in     eax,0x37
  41cb9f:	mov    fs,WORD PTR [edi]
  41cba1:	push   edx
  41cba2:	mov    ch,0x5e
  41cba4:	push   ecx
  41cba5:	jecxz  0x41cb8c
  41cba7:	pop    es
  41cba8:	or     edx,DWORD PTR [edi]
  41cbaa:	or     esi,DWORD PTR [edi]
  41cbac:	ret    
  41cbad:	fld    QWORD PTR [esi]
  41cbaf:	mov    esp,0x4286972a
  41cbb4:	inc    esi
  41cbb5:	push   0xda12e2f8
  41cbba:	imul   ebx,DWORD PTR [edi+0x17c89a75],0x2e9496b6
  41cbc4:	mov    cl,ch
  41cbc6:	(bad)  
  41cbc7:	fidiv  WORD PTR [ebp-0x30]
  41cbca:	push   edx
  41cbcb:	xor    eax,0x5e2cc663
  41cbd0:	(bad)  
  41cbd1:	pop    ebp
  41cbd2:	outs   dx,BYTE PTR ds:[esi]
  41cbd3:	and    edi,DWORD PTR [ebx+0x740bd1f6]
  41cbd9:	jmp    0x7a3c:0xa13e06bf
  41cbe0:	mov    bl,0x9
  41cbe2:	mov    esp,0x4bf5f05b
  41cbe7:	in     eax,0xaf
  41cbe9:	jb     0x41cb6b
  41cbeb:	mov    edi,es
  41cbed:	inc    ebx
  41cbee:	pop    ds
  41cbef:	inc    ebp
  41cbf0:	pop    eax
  41cbf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbf2:	repz enter 0x8350,0xa2
  41cbf7:	adc    dh,dh
  41cbf9:	jp     0x41cc60
  41cbfb:	fisub  DWORD PTR [edx+eax*1]
  41cbfe:	scas   eax,DWORD PTR es:[edi]
  41cbff:	inc    ebx
  41cc00:	retf   
  41cc01:	and    al,0x58
  41cc03:	lods   eax,DWORD PTR ds:[esi]
  41cc04:	push   ecx
  41cc05:	dec    esp
  41cc06:	shr    ecx,1
  41cc08:	jecxz  0x41cc09
  41cc0a:	rcl    edx,cl
  41cc0c:	mov    BYTE PTR [eax+0x39],ch
  41cc0f:	ret    0x5bdb
  41cc12:	add    DWORD PTR [edx+0x2eb0c736],esp
  41cc18:	imul   ebx,DWORD PTR [esi+0xefe5f4c],0xd745c639
  41cc22:	jmp    0x7b5a:0xa2000efe
  41cc29:	pshufw mm0,mm6,0x74
  41cc2d:	xchg   esp,eax
  41cc2e:	(bad)  
  41cc2f:	mov    al,ds:0xc4598c38
  41cc34:	arpl   WORD PTR [esi],di
  41cc36:	jae    0x41cc2d
  41cc38:	pop    esp
  41cc39:	stc    
  41cc3a:	xor    bh,BYTE PTR ds:0x73d2ed1e
  41cc40:	dec    ecx
  41cc41:	push   ebx
  41cc42:	cld    
  41cc43:	jecxz  0x41cc0f
  41cc45:	push   ss
  41cc46:	push   0x2858322d
  41cc4b:	and    DWORD PTR [eax+0x3f3113c2],0x4132951a
  41cc55:	sahf   
  41cc56:	push   edx
  41cc57:	or     eax,0x218befad
  41cc5c:	mov    eax,0x4efcacf2
  41cc61:	loope  0x41cc1c
  41cc63:	test   BYTE PTR [ebp-0x3543d5dc],dh
  41cc69:	add    al,0xa3
  41cc6b:	es (bad) 
  41cc6d:	push   eax
  41cc6e:	inc    esp
  41cc6f:	push   cs
  41cc70:	mov    al,ds:0x47f00e5
  41cc75:	sbb    eax,0x6be7f35b
  41cc7a:	(bad)  
  41cc7b:	mov    edx,0x36aa0ab5
  41cc80:	scas   eax,DWORD PTR es:[edi]
  41cc81:	or     bh,BYTE PTR [ebp+0x53]
  41cc84:	arpl   WORD PTR [eax],dx
  41cc86:	addr16 pop edx
  41cc88:	stc    
  41cc89:	mov    edi,0x25ce7d65
  41cc8e:	xor    BYTE PTR [ebp+0x21],al
  41cc91:	clc    
  41cc92:	out    0xef,al
  41cc94:	(bad)  
  41cc95:	and    BYTE PTR [esi],al
  41cc97:	mov    ds:0x89be5d0,al
  41cc9c:	xchg   esp,eax
  41cc9d:	nop
  41cc9e:	mov    dl,0xa
  41cca0:	or     BYTE PTR [edx-0x7499d6c4],0x51
  41cca7:	outs   dx,DWORD PTR ds:[esi]
  41cca8:	in     eax,0x11
  41ccaa:	xor    DWORD PTR [ebx],esi
  41ccac:	jle    0x41ccf1
  41ccae:	fdiv   DWORD PTR [ecx+0x5447e08d]
  41ccb4:	sbb    eax,0x9fd28ccd
  41ccb9:	push   ss
  41ccba:	sar    ch,0x10
  41ccbd:	arpl   WORD PTR [ebx+0x487b5a1c],bx
  41ccc3:	inc    ecx
  41ccc4:	mov    BYTE PTR [eax-0x22],cl
  41ccc7:	jae    0x41ccab
  41ccc9:	std    
  41ccca:	adc    eax,0x6705974f
  41cccf:	out    0x64,al
  41ccd1:	sbb    eax,0x269dac62
  41ccd6:	mov    ah,0x64
  41ccd8:	leave  
  41ccd9:	repz mov ds:0x4a2d73b9,eax
  41ccdf:	jmp    0x4a95a841
  41cce4:	dec    edx
  41cce5:	mov    cl,0x34
  41cce7:	or     al,BYTE PTR [eax-0x4870bdbf]
  41cced:	rcr    BYTE PTR fs:[esi],cl
  41ccf0:	call   0xe508:0x7787dc9e
  41ccf7:	out    dx,eax
  41ccf8:	cmp    al,BYTE PTR [eax]
  41ccfa:	stc    
  41ccfb:	jb     0x41ccb8
  41ccfd:	aam    0x8d
  41ccff:	(bad)  
  41cd00:	out    0x17,eax
  41cd02:	xchg   edx,eax
  41cd03:	ret    0xdc38
  41cd06:	cmp    edi,DWORD PTR [edi+0x68]
  41cd09:	cmp    BYTE PTR [edx+esi*4+0x37713127],cl
  41cd10:	jl     0x41ccb8
  41cd12:	jb     0x41ccf5
  41cd14:	shr    ah,cl
  41cd16:	cmp    al,0x24
  41cd18:	mov    DWORD PTR [ebp-0x46b8ebd9],ebx
  41cd1e:	sbb    BYTE PTR [edi],dh
  41cd20:	ins    BYTE PTR es:[edi],dx
  41cd21:	and    al,0xb7
  41cd23:	(bad)  
  41cd25:	xor    DWORD PTR [ebp+esi*4-0x46],esi
  41cd29:	imul   DWORD PTR [esi-0x5f]
  41cd2c:	xchg   edx,eax
  41cd2d:	adc    bl,BYTE PTR [edi+eax*2-0x80fc6bf]
  41cd34:	mov    dl,0xba
  41cd36:	shl    BYTE PTR [ecx-0x37],cl
  41cd39:	rcl    BYTE PTR [ebp+0x1b55098b],cl
  41cd3f:	sar    BYTE PTR [ebp+0xfb80dc3],0xbf
  41cd46:	adc    al,0xd9
  41cd48:	push   ecx
  41cd49:	sbb    BYTE PTR [ecx+0x62],dl
  41cd4c:	daa    
  41cd4d:	lea    esp,[edi-0x512792dc]
  41cd53:	enter  0x28c5,0x9f
  41cd57:	xlat   BYTE PTR ds:[ebx]
  41cd58:	lods   eax,DWORD PTR ds:[esi]
  41cd59:	dec    esi
  41cd5a:	in     eax,0x6b
  41cd5c:	add    dh,BYTE PTR [ecx-0x3091154d]
  41cd62:	sub    dh,ch
  41cd64:	cmp    DWORD PTR [edi-0x6a],esp
  41cd67:	mov    edi,DWORD PTR [edx-0x62]
  41cd6a:	test   al,0x7b
  41cd6c:	xor    al,0xd2
  41cd6e:	loop   0x41cd5c
  41cd70:	loope  0x41cd52
  41cd72:	mov    dl,0x2e
  41cd74:	test   BYTE PTR [ecx+0x56097430],ah
  41cd7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd7b:	sbb    dh,BYTE PTR [eax+ebp*8-0xe364c1e]
  41cd82:	mov    esi,DWORD PTR [ebx]
  41cd84:	xchg   esi,eax
  41cd85:	cmc    
  41cd86:	pop    edx
  41cd87:	jne    0x41cd4d
  41cd89:	in     al,dx
  41cd8a:	iret   
  41cd8b:	sbb    bh,BYTE PTR [edi+0x48e15c12]
  41cd91:	jg     0x41cdb9
  41cd93:	cmp    esp,ebp
  41cd95:	lds    ebp,FWORD PTR [ebp+0x4a]
  41cd98:	fcmovnu st,st(2)
  41cd9a:	xor    al,0x82
  41cd9c:	pop    ss
  41cd9d:	fistp  WORD PTR [ecx-0x1a6f781f]
  41cda3:	and    edx,DWORD PTR [ebx+0x20]
  41cda6:	lods   eax,DWORD PTR ds:[esi]
  41cda7:	pop    ebx
  41cda8:	int    0xe7
  41cdaa:	(bad)  
  41cdab:	int3   
  41cdac:	push   ecx
  41cdad:	dec    ecx
  41cdae:	fst    st(0)
  41cdb0:	cld    
  41cdb1:	sub    DWORD PTR ds:0x14ec1c6d,esi
  41cdb7:	(bad)  
  41cdb8:	xchg   esp,eax
  41cdb9:	xor    al,0xdd
  41cdbb:	fninit 
  41cdbd:	repz fwait
  41cdbf:	pop    ss
  41cdc0:	jbe    0x41ce07
  41cdc2:	push   esi
  41cdc3:	rcl    DWORD PTR es:[ebx+eax*1-0x77],0x7c
  41cdc9:	int3   
  41cdca:	sbb    al,0x98
  41cdcc:	mov    ch,0xee
  41cdce:	scas   eax,DWORD PTR es:[edi]
  41cdcf:	imul   edi,DWORD PTR ds:0xa88ae605,0xfcaa73ba
  41cdd9:	cmp    DWORD PTR [ecx-0x15],0x7bd59b2e
  41cde0:	(bad)  
  41cde1:	das    
  41cde2:	jns    0x41cddb
  41cde4:	mov    ds:0xa3ca1fde,eax
  41cde9:	and    ah,cl
  41cdeb:	lea    eax,[eax]
  41cded:	out    0x29,eax
  41cdef:	aaa    
  41cdf0:	ret    0x5338
  41cdf3:	mov    WORD PTR [esi+eiz*8+0x3],gs
  41cdf7:	retf   0xb570
  41cdfa:	(bad)  
  41cdfb:	mov    edx,0xb22a65b4
  41ce00:	sub    DWORD PTR [edi+0x7e],edi
  41ce03:	xchg   edi,eax
  41ce04:	das    
  41ce05:	retf   
  41ce06:	es scas eax,DWORD PTR es:[edi]
  41ce08:	pushf  
  41ce09:	nop
  41ce0a:	sbb    DWORD PTR [ebp-0x50],ebp
  41ce0d:	cli    
  41ce0e:	ret    
  41ce0f:	mov    ds:0x1fbb597c,eax
  41ce14:	ror    ch,1
  41ce16:	es xchg esp,eax
  41ce18:	loopne 0x41cde1
  41ce1a:	popf   
  41ce1b:	or     al,0x18
  41ce1d:	mov    ds:0x4f4506ed,eax
  41ce22:	out    dx,al
  41ce23:	lods   al,BYTE PTR ds:[esi]
  41ce24:	push   0x75
  41ce26:	stos   DWORD PTR es:[edi],eax
  41ce27:	or     edx,DWORD PTR [di]
  41ce2a:	mov    ds:0xfc36079e,al
  41ce2f:	retf   
  41ce30:	or     bl,BYTE PTR [ebx+0x48]
  41ce33:	jmp    0x41ce57
  41ce35:	iret   
  41ce36:	div    ebp
  41ce38:	arpl   WORD PTR [esp+ebx*8+0x416479d],di
  41ce3f:	mov    al,0x78
  41ce41:	xor    BYTE PTR [ebx-0x4c],bh
  41ce44:	ds mov ch,0x7d
  41ce47:	das    
  41ce48:	sub    BYTE PTR [edi+0x5dd5288e],cl
  41ce4e:	fidiv  DWORD PTR [eax]
  41ce50:	mov    edi,0xc73ef706
  41ce55:	lods   eax,DWORD PTR ds:[esi]
  41ce56:	mov    edx,0xeef01656
  41ce5b:	xor    eax,0x9b50fe9e
  41ce60:	jge    0x41cdfb
  41ce62:	or     ebx,DWORD PTR [edx+0x3702bafa]
  41ce68:	call   0xd3bab564
  41ce6d:	xchg   DWORD PTR [esi-0x6595523c],edx
  41ce73:	pop    ss
  41ce74:	adc    cl,dh
  41ce76:	dec    edi
  41ce77:	pop    ecx
  41ce78:	pop    esi
  41ce79:	jmp    0x7067:0xed785aa3
  41ce80:	(bad)  
  41ce81:	out    dx,eax
  41ce82:	jae    0x41cef0
  41ce84:	(bad)  
  41ce85:	call   0xde9658bb
  41ce8a:	clc    
  41ce8b:	into   
  41ce8c:	or     DWORD PTR [eax+0x42],0x30d2d6d2
  41ce93:	fnstcw WORD PTR [ecx-0x5f]
  41ce96:	or     eax,DWORD PTR [esi-0x58bd083a]
  41ce9c:	outs   dx,BYTE PTR ds:[esi]
  41ce9d:	cdq    
  41ce9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce9f:	pop    edi
  41cea0:	fldcw  WORD PTR [edi-0x49425470]
  41cea6:	rol    ebp,1
  41cea8:	sbb    eax,0x25fc94b3
  41cead:	push   esp
  41ceae:	jmp    0xec73:0x12bd2d7b
  41ceb5:	sub    DWORD PTR [esp+ebx*4+0x2e36cdb1],esp
  41cebc:	push   ds
  41cebd:	jp     0x41ceb5
  41cebf:	cmp    eax,0x2bfe0980
  41cec4:	sub    eax,DWORD PTR [ebp+0x590fe970]
  41ceca:	add    ecx,ebp
  41cecc:	push   es
  41cecd:	xor    eax,0xa4db402c
  41ced2:	pushf  
  41ced3:	mov    ch,0xf
  41ced5:	cmp    eax,0x14c6dbd6
  41ceda:	imul   esi,DWORD PTR [ecx-0x5423dd44],0xffffffd1
  41cee1:	es cdq 
  41cee3:	retf   
  41cee4:	fsubp  st(7),st
  41cee6:	fst    DWORD PTR [edi-0x11]
  41cee9:	add    BYTE PTR [eax-0x19a7cdcf],cl
  41ceef:	add    al,0x73
  41cef1:	mov    esp,DWORD PTR [edx+0x15]
  41cef4:	xchg   BYTE PTR [ecx-0x65456ba4],dl
  41cefa:	fmul   DWORD PTR [edx]
  41cefc:	scas   eax,DWORD PTR es:[edi]
  41cefd:	mov    ebp,0x9fe02898
  41cf02:	mov    ch,0x4c
  41cf04:	cmp    ebx,DWORD PTR [edx]
  41cf06:	daa    
  41cf07:	xor    edi,0xffffff99
  41cf0a:	xchg   ebp,eax
  41cf0b:	fdiv   QWORD PTR [si+0x2853]
  41cf10:	xchg   esi,eax
  41cf11:	(bad)  
  41cf12:	ins    BYTE PTR es:[edi],dx
  41cf13:	cs and al,bh
  41cf16:	(bad)  
  41cf17:	int    0x46
  41cf19:	out    0x82,eax
  41cf1b:	cs (bad) 
  41cf1d:	daa    
  41cf1e:	sub    BYTE PTR [eax],0x1f
  41cf21:	bound  ecx,QWORD PTR [edx-0x61]
  41cf24:	or     dl,BYTE PTR [edi-0x52]
  41cf27:	xchg   ebx,eax
  41cf28:	mov    WORD PTR [edi-0x35],ds
  41cf2b:	adc    ebx,ecx
  41cf2d:	js     0x41cf01
  41cf2f:	pop    es
  41cf30:	fistp  WORD PTR [edx+0x1a]
  41cf33:	jno    0x41cef3
  41cf35:	in     eax,0x44
  41cf37:	xchg   edx,eax
  41cf38:	sub    ah,dl
  41cf3a:	outs   dx,BYTE PTR ds:[esi]
  41cf3b:	cmc    
  41cf3c:	cli    
  41cf3d:	and    DWORD PTR [ebp+edx*1-0x7f],ebx
  41cf41:	jo     0x41cee8
  41cf43:	mov    edx,DWORD PTR [ebx-0x24397c16]
  41cf49:	lahf   
  41cf4a:	iret   
  41cf4b:	pushf  
  41cf4c:	lock inc esi
  41cf4e:	push   edx
  41cf4f:	ret    0x78ed
  41cf52:	bound  esi,QWORD PTR [eax]
  41cf54:	data16 repnz lahf 
  41cf57:	loop   0x41cfa6
  41cf59:	xchg   ecx,eax
  41cf5a:	test   eax,0x59ea8c7d
  41cf5f:	call   0xd9b:0xedf43b4e
  41cf66:	adc    DWORD PTR [ebp+0x77d4039a],esp
  41cf6c:	ja     0x41cf80
  41cf6e:	ja     0x41cf8c
  41cf70:	in     eax,0xd2
  41cf72:	scas   al,BYTE PTR es:[edi]
  41cf73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf74:	jge    0x41cfdb
  41cf76:	mov    esp,DWORD PTR [esi-0x7a3819a9]
  41cf7c:	xchg   ebp,eax
  41cf7d:	push   esp
  41cf7e:	ins    BYTE PTR es:[edi],dx
  41cf7f:	ror    DWORD PTR [ebp-0x40],cl
  41cf82:	fwait
  41cf83:	xor    BYTE PTR [ecx+0x46],bh
  41cf86:	int3   
  41cf87:	cmp    eax,0x21b589ee
  41cf8c:	adc    bh,dh
  41cf8e:	inc    ebx
  41cf8f:	std    
  41cf90:	jl     0x41cfb7
  41cf92:	shl    DWORD PTR [edi-0x4c943331],0x1b
  41cf99:	mov    dl,0x98
  41cf9b:	sbb    BYTE PTR gs:[eax+0x1d91d0eb],al
  41cfa2:	xchg   ebx,ebx
  41cfa4:	nop
  41cfa5:	xor    eax,0xb0648b73
  41cfaa:	sbb    ah,BYTE PTR [ebp-0x2f]
  41cfad:	lahf   
  41cfae:	es mov al,0xd4
  41cfb1:	addr16 pop es
  41cfb3:	jae    0x41cfe4
  41cfb5:	and    DWORD PTR [ecx-0xaf37862],edx
  41cfbb:	mov    ebx,0x3b31d481
  41cfc0:	inc    ebp
  41cfc1:	dec    ecx
  41cfc2:	test   DWORD PTR [esi+esi*8-0x1ca8b022],ebx
  41cfc9:	push   edi
  41cfca:	mov    al,dh
  41cfcc:	shl    BYTE PTR ds:0xf060bef9,cl
  41cfd2:	cdq    
  41cfd3:	imul   DWORD PTR [edx+0x1300a018]
  41cfd9:	in     eax,0xc2
  41cfdb:	ja     0x41d022
  41cfdd:	push   0x3e
  41cfdf:	je     0x41d060
  41cfe1:	shl    BYTE PTR [ebx+esi*8-0x63f510b3],0x46
  41cfe9:	push   edx
  41cfea:	aam    0x44
  41cfec:	xlat   BYTE PTR ds:[ebx]
  41cfed:	aad    0xb3
  41cfef:	and    al,0xbc
  41cff1:	sti    
  41cff2:	mov    WORD PTR [esi+0x67],ds
  41cff5:	scas   eax,DWORD PTR es:[edi]
  41cff6:	lahf   
  41cff7:	jbe    0x41d005
  41cff9:	add    DWORD PTR [ebx-0x19cd9332],esi
  41cfff:	leave  
  41d000:	and    DWORD PTR [esi-0x3f],ebp
  41d003:	lahf   
  41d004:	sbb    al,0x41
  41d006:	stos   BYTE PTR es:[edi],al
  41d007:	fist   WORD PTR fs:[ebx-0x61f0214e]
  41d00e:	iret   
  41d00f:	and    edi,0xffffffee
  41d012:	xchg   ecx,eax
  41d013:	shr    DWORD PTR [esi],1
  41d015:	out    0x74,eax
  41d017:	xor    bh,BYTE PTR [ebp-0x4d]
  41d01a:	dec    esi
  41d01b:	outs   dx,BYTE PTR ds:[esi]
  41d01c:	pop    es
  41d01d:	and    eax,DWORD PTR [edx-0x4fbcfb8f]
  41d023:	xor    esp,ebx
  41d025:	inc    ah
  41d027:	dec    ebx
  41d028:	and    DWORD PTR [edi-0x28d17bae],ebp
  41d02e:	push   ds
  41d02f:	out    0xbb,eax
  41d031:	inc    DWORD PTR [ebp+0x71cc75cb]
  41d037:	inc    ecx
  41d038:	inc    ebp
  41d039:	in     al,0x12
  41d03b:	xlat   BYTE PTR ds:[ebx]
  41d03c:	in     al,dx
  41d03d:	jno    0x41d0ba
  41d03f:	mov    esi,0x33acc7cd
  41d044:	outs   dx,BYTE PTR ds:[esi]
  41d045:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d046:	es push cs
  41d048:	dec    ecx
  41d049:	push   ss
  41d04a:	inc    edx
  41d04b:	in     eax,dx
  41d04c:	inc    edi
  41d04d:	outs   dx,BYTE PTR ds:[esi]
  41d04e:	out    0xaa,al
  41d050:	jbe    0x41d0b1
  41d052:	dec    ecx
  41d053:	fdivr  DWORD PTR [ebx+0x1]
  41d056:	pop    ebp
  41d057:	inc    esi
  41d058:	lods   eax,DWORD PTR ds:[esi]
  41d059:	into   
  41d05a:	fild   QWORD PTR [esi-0x3b]
  41d05d:	imul   edi,DWORD PTR [ebp-0x4fa578f9],0xffffffaf
  41d064:	pusha  
  41d065:	lea    edx,[ebp-0x50]
  41d068:	fild   QWORD PTR [edx+0x2d]
  41d06b:	mov    ebx,edx
  41d06d:	outs   dx,DWORD PTR ds:[esi]
  41d06e:	mov    esp,0x9ed988b6
  41d073:	out    0x90,eax
  41d075:	fs (bad) 
  41d077:	cdq    
  41d078:	cmp    eax,0x2c4a9b5c
  41d07d:	xor    dl,BYTE PTR [ebp-0x55]
  41d080:	mov    ds:0x1016e12a,al
  41d085:	clc    
  41d086:	pop    ecx
  41d087:	inc    ebx
  41d088:	jg     0x41d0b6
  41d08a:	add    DWORD PTR [eax+edx*2+0x1c],eax
  41d08e:	cmp    ecx,DWORD PTR [esi]
  41d090:	arpl   WORD PTR [edx+0x13e416ae],ax
  41d096:	(bad)  
  41d098:	mov    ds:0x9cca485,eax
  41d09d:	pop    ds
  41d09e:	imul   eax,DWORD PTR [ebx+0x59],0xe31a1c0a
  41d0a5:	adc    ah,BYTE PTR [edi]
  41d0a7:	or     eax,0x57b9bcf3
  41d0ac:	mov    DWORD PTR [ecx+0x73b8cf63],ebp
  41d0b2:	or     DWORD PTR [edi+0x31],esp
  41d0b5:	(bad)  
  41d0b7:	call   0x8721:0x868e3cf4
  41d0be:	lds    eax,FWORD PTR [ebx]
  41d0c0:	inc    esp
  41d0c1:	clc    
  41d0c2:	jmp    0x41d13d
  41d0c4:	push   ebx
  41d0c5:	push   edx
  41d0c6:	hlt    
  41d0c7:	mov    ecx,0xe9705915
  41d0cc:	mov    edi,0xbe84023e
  41d0d1:	(bad)  
  41d0d2:	dec    edx
  41d0d3:	mov    dl,0x4b
  41d0d5:	push   es
  41d0d6:	jne    0x41d0dc
  41d0d8:	sti    
  41d0d9:	cld    
  41d0da:	dec    ebx
  41d0db:	clc    
  41d0dc:	stos   DWORD PTR es:[edi],eax
  41d0dd:	out    0xef,eax
  41d0df:	enter  0x8d12,0x1f
  41d0e3:	mov    eax,ds:0xb378c8b1
  41d0e8:	lods   eax,DWORD PTR ds:[esi]
  41d0e9:	ds cmc 
  41d0eb:	and    eax,0xd8514dcd
  41d0f0:	adc    DWORD PTR [eax+ecx*1-0x31],0x1
  41d0f5:	jle    0x41d08c
  41d0f7:	xor    edi,DWORD PTR [ecx]
  41d0f9:	xor    al,0xfb
  41d0fb:	dec    esp
  41d0fc:	sbb    dl,BYTE PTR [eax-0x4eb1b600]
  41d102:	pop    edi
  41d103:	fldcw  WORD PTR [ebp+edx*1-0x18]
  41d107:	(bad)  
  41d109:	test   eax,0xd892b11e
  41d10e:	fisub  DWORD PTR [eax+0x35a8fdc5]
  41d114:	xor    al,0x5f
  41d116:	int    0x91
  41d118:	aas    
  41d119:	fisttp DWORD PTR [eax+0x51]
  41d11c:	push   esi
  41d11d:	in     eax,dx
  41d11e:	dec    ebp
  41d11f:	inc    edi
  41d120:	inc    esi
  41d121:	retf   0x13e1
  41d124:	add    DWORD PTR [ebx+0x442075a4],edi
  41d12a:	jmp    0xfed:0xc2a34695
  41d131:	add    BYTE PTR [ebx],bl
  41d133:	mov    bl,BYTE PTR [eax+edi*4]
  41d136:	dec    eax
  41d137:	and    edx,edi
  41d139:	sahf   
  41d13a:	aad    0x37
  41d13c:	jge    0x41d109
  41d13e:	scas   eax,DWORD PTR es:[edi]
  41d13f:	das    
  41d140:	stos   BYTE PTR es:[edi],al
  41d141:	in     al,0x9c
  41d143:	mov    WORD PTR [eax-0x26],gs
  41d146:	(bad)  
  41d147:	mov    edx,0x3a775c5a
  41d14c:	xor    al,0x71
  41d14e:	and    eax,0xd7d3fe39
  41d153:	xor    DWORD PTR ss:[ecx+0x27],ebp
  41d157:	scas   eax,DWORD PTR es:[edi]
  41d158:	push   ss
  41d159:	dec    ebp
  41d15a:	xchg   esi,eax
  41d15b:	mov    bh,0x22
  41d15d:	into   
  41d15e:	sbb    ebx,DWORD PTR [ebp+0x4dc5038e]
  41d164:	mov    edi,0xbac84a6a
  41d169:	mov    dx,0xb6b9
  41d16d:	ins    DWORD PTR es:[edi],dx
  41d16e:	mov    ds:0x89a50267,eax
  41d173:	sub    eax,0x771911eb
  41d178:	mov    DWORD PTR [edi+edi*4],esi
  41d17b:	jmp    esi
  41d17d:	jno    0x41d1be
  41d17f:	dec    edx
  41d180:	pop    ss
  41d181:	mov    ah,0x20
  41d183:	and    eax,0x64b02e8f
  41d188:	je     0x41d17e
  41d18a:	ds push es
  41d18c:	into   
  41d18d:	in     al,0xa
  41d18f:	shr    esi,0xcf
  41d192:	fisttp WORD PTR ds:0x9b2fcd81
  41d198:	xor    eax,0xb8d89ba1
  41d19d:	mov    al,ds:0xed6df48c
  41d1a2:	pop    ss
  41d1a3:	or     eax,edi
  41d1a5:	or     DWORD PTR [ebx+0x1e],ebx
  41d1a8:	arpl   WORD PTR [esi-0x921215f],ax
  41d1ae:	daa    
  41d1af:	loopne 0x41d1b2
  41d1b1:	call   0x3488:0xff312092
  41d1b8:	xchg   esi,eax
  41d1b9:	lds    eax,FWORD PTR [ebp+0x21]
  41d1bc:	xor    al,0x60
  41d1be:	std    
  41d1bf:	lock mov edx,0x592af45c
  41d1c5:	fdiv   QWORD PTR [edi+0x5a]
  41d1c8:	pop    ebp
  41d1c9:	adc    al,0x46
  41d1cb:	jl     0x41d173
  41d1cd:	adc    BYTE PTR [ebp+ebp*4-0x7f],dl
  41d1d1:	xchg   ebp,eax
  41d1d2:	mov    edi,0x684714ac
  41d1d7:	les    eax,FWORD PTR ds:0x25d3078c
  41d1dd:	inc    esp
  41d1de:	sub    al,0xce
  41d1e0:	and    dh,BYTE PTR [ebp+0x20]
  41d1e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1e4:	mov    esp,0xeed3b4f5
  41d1e9:	xor    ecx,DWORD PTR [eax+0x72]
  41d1ec:	jmp    0x41d210
  41d1ee:	movd   mm5,DWORD PTR [eax-0x4e]
  41d1f2:	mov    es,WORD PTR [edi+edi*2]
  41d1f5:	adc    bh,0x54
  41d1f8:	push   cs
  41d1f9:	mov    ebp,0xfb6b8056
  41d1fe:	test   BYTE PTR ds:0x636a812a,cl
  41d204:	stos   DWORD PTR es:[edi],eax
  41d205:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d206:	ins    DWORD PTR es:[edi],dx
  41d207:	xor    al,0x98
  41d209:	xchg   ecx,eax
  41d20a:	fstp   TBYTE PTR [esp+eax*8-0x5a]
  41d20e:	mov    ss,WORD PTR [esi-0x52ab63b3]
  41d214:	xor    DWORD PTR [ebp-0x1480ab9a],esi
  41d21a:	(bad)  
  41d21b:	mov    bh,dh
  41d21d:	stc    
  41d21e:	cs or  ah,dh
  41d221:	sbb    bl,ch
  41d223:	or     bh,BYTE PTR [edi+0x58]
  41d226:	js     0x41d229
  41d228:	cmp    BYTE PTR [bx+si],0xe3
  41d22c:	inc    ecx
  41d22d:	sub    BYTE PTR [esi+ecx*1-0x75],0xe6
  41d232:	mov    BYTE PTR ds:0x2b15afdb,al
  41d238:	inc    ebp
  41d239:	xchg   BYTE PTR [edi+0x15c4be4],dh
  41d23f:	test   DWORD PTR [edx],edx
  41d241:	cmp    eax,DWORD PTR [edi+0x9]
  41d244:	in     al,0x7e
  41d246:	frstor [esi+edi*1-0x5173981a]
  41d24d:	cmp    eax,0xeedfb25e
  41d252:	jmp    0xd117f7ed
  41d257:	and    eax,DWORD PTR ds:0xbc02bd0b
  41d25d:	fs or  eax,0xdf1577bb
  41d263:	ror    cl,0x96
  41d266:	xchg   BYTE PTR [ebx+0x2b10e691],cl
  41d26c:	retf   
  41d26d:	inc    esi
  41d26e:	push   ebx
  41d26f:	jno    0x41d26c
  41d271:	(bad)  
  41d272:	loopne 0x41d2ab
  41d274:	sbb    edi,DWORD PTR [eax]
  41d276:	push   ds
  41d277:	mov    edx,0x5aff2415
  41d27c:	(bad)  
  41d27d:	scas   eax,DWORD PTR es:[edi]
  41d27e:	mov    ds:0x1fb57b7,eax
  41d283:	cmp    DWORD PTR [edi+0x2dfd6da3],ebx
  41d289:	sub    BYTE PTR [ecx-0x34],bl
  41d28c:	cmp    BYTE PTR [edx+0x2c3eadee],ch
  41d292:	add    esi,ebx
  41d294:	ins    BYTE PTR es:[edi],dx
  41d295:	push   esi
  41d296:	lahf   
  41d297:	fwait
  41d298:	add    esp,DWORD PTR [esi]
  41d29a:	cli    
  41d29b:	lea    edx,[eax]
  41d29d:	pop    ss
  41d29e:	mov    edx,0xd464bef6
  41d2a3:	cli    
  41d2a4:	fld    QWORD PTR [ebp-0xe]
  41d2a7:	xor    BYTE PTR [esi-0x5d3b3eda],dh
  41d2ad:	call   0x35f6:0xb347bd83
  41d2b4:	mov    eax,0xf0910187
  41d2b9:	jnp    0x41d2b8
  41d2bb:	sub    eax,0x9cde0512
  41d2c0:	scas   eax,DWORD PTR es:[edi]
  41d2c1:	mov    eax,0xa03b4ed9
  41d2c6:	test   eax,0x285fbb51
  41d2cb:	and    eax,0x8fa23814
  41d2d0:	mov    dl,0x45
  41d2d2:	retf   0x5a71
  41d2d5:	mov    al,0x49
  41d2d7:	into   
  41d2d8:	mov    edi,0x2984e442
  41d2dd:	in     al,0x20
  41d2df:	sub    eax,0xc429c6e8
  41d2e4:	repnz mov ds:0xb363daa8,al
  41d2ea:	pop    ss
  41d2eb:	add    cl,dl
  41d2ed:	loope  0x41d2cb
  41d2ef:	in     eax,dx
  41d2f0:	push   0xffffffba
  41d2f2:	mov    al,ds:0x2474cad0
  41d2f7:	test   BYTE PTR [ebp+ecx*4+0x38c6917a],0x61
  41d2ff:	xor    al,0x4c
  41d301:	cmp    dl,BYTE PTR [edx]
  41d303:	cmp    ecx,edi
  41d305:	and    esi,esi
  41d307:	dec    ebx
  41d308:	data16 xchg BYTE PTR [edi+0x302ac139],cl
  41d30f:	or     eax,0x387e9138
  41d314:	pop    es
  41d315:	adc    DWORD PTR [edx+0x51],edi
  41d318:	inc    esi
  41d319:	leave  
  41d31a:	sub    eax,0x6db4afb7
  41d31f:	imul   edx,esp,0x2f
  41d322:	lods   eax,DWORD PTR ds:[esi]
  41d323:	mov    ecx,eax
  41d325:	xlat   BYTE PTR ds:[ebx]
  41d326:	jge    0x41d397
  41d328:	mov    dh,0x17
  41d32a:	xchg   ebx,eax
  41d32b:	cld    
  41d32c:	pusha  
  41d32d:	mov    BYTE PTR ds:0xd99a3b75,0xa7
  41d334:	xor    eax,0xc88594b8
  41d339:	or     bl,dh
  41d33b:	in     al,dx
  41d33c:	stos   DWORD PTR es:[edi],eax
  41d33d:	test   BYTE PTR [edi],bl
  41d33f:	imul   edx,DWORD PTR [edx+0x50628d60],0xeec5f8e9
  41d349:	inc    eax
  41d34a:	inc    edx
  41d34b:	push   0x5f
  41d34d:	dec    edi
  41d34e:	es and eax,0x7ebd7b52
  41d354:	pusha  
  41d355:	test   eax,0x1bb4609c
  41d35a:	test   bh,dh
  41d35c:	or     dl,bh
  41d35e:	xchg   DWORD PTR [edx],esp
  41d360:	push   ebp
  41d361:	pop    esi
  41d362:	pop    esi
  41d363:	(bad)  
  41d365:	sahf   
  41d366:	scas   eax,DWORD PTR es:[edi]
  41d367:	popa   
  41d368:	int3   
  41d369:	add    al,ah
  41d36b:	mov    DWORD PTR [ebp+0x51],edi
  41d36e:	inc    edi
  41d36f:	jbe    0x41d318
  41d371:	jno    0x41d348
  41d373:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d374:	pop    edi
  41d375:	jmp    0x4ddbc411
  41d37a:	push   ecx
  41d37b:	mov    ah,0xaa
  41d37d:	stos   BYTE PTR es:[edi],al
  41d37e:	cdq    
  41d37f:	mov    ebp,esi
  41d381:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d382:	push   ds
  41d383:	test   DWORD PTR [esi],0xb8c24620
  41d389:	int    0x8c
  41d38b:	sbb    dh,BYTE PTR [ebx]
  41d38d:	cmp    ch,dl
  41d38f:	and    DWORD PTR [esi-0x78],0x1a
  41d393:	icebp  
  41d394:	and    DWORD PTR [ecx-0x7f],0x51b34940
  41d39b:	int3   
  41d39c:	mov    cl,0x7e
  41d39e:	icebp  
  41d39f:	fcomp  QWORD PTR [esi]
  41d3a1:	(bad)  
  41d3a2:	aas    
  41d3a3:	inc    DWORD PTR [eax+0x28]
  41d3a6:	dec    edx
  41d3a7:	enter  0x1357,0x7
  41d3ab:	sar    BYTE PTR [eax-0x328c7e26],0x45
  41d3b2:	sub    al,0xb4
  41d3b4:	inc    edx
  41d3b5:	ret    
  41d3b6:	test   BYTE PTR [eax+0x1f],cl
  41d3b9:	repz popa 
  41d3bb:	mov    edi,0xedabff13
  41d3c0:	and    DWORD PTR [ebx],eax
  41d3c2:	mov    dh,0x7b
  41d3c4:	push   ebx
  41d3c5:	cmp    eax,0xf4961ffa
  41d3ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3cb:	ficom  DWORD PTR [edx+0x2d]
  41d3ce:	lea    ecx,[ecx+0x793afd14]
  41d3d4:	test   al,0x57
  41d3d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3d7:	push   ebx
  41d3d8:	mov    esp,0xf71ad941
  41d3dd:	cli    
  41d3de:	jp     0x41d393
  41d3e0:	outs   dx,BYTE PTR ds:[esi]
  41d3e1:	outs   dx,BYTE PTR ds:[esi]
  41d3e2:	and    BYTE PTR [edx-0x1d4d326c],dl
  41d3e8:	mov    ch,0xfc
  41d3ea:	clc    
  41d3eb:	cld    
  41d3ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3ed:	imul   edx,ebp,0xffffff80
  41d3f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3f1:	xchg   ebp,eax
  41d3f2:	mov    ch,0x80
  41d3f4:	mov    ch,0xbf
  41d3f6:	jmp    0x5c91:0x76f36731
  41d3fd:	push   ebp
  41d3fe:	(bad)  
  41d400:	or     BYTE PTR [ebx+0x5d],dh
  41d403:	mov    esi,0x18b9d937
  41d408:	jge    0x41d46a
  41d40a:	cmp    DWORD PTR [ecx-0x32527ada],0x3a90f620
  41d414:	stos   DWORD PTR es:[edi],eax
  41d415:	xchg   ebx,eax
  41d416:	pushf  
  41d417:	sub    dl,BYTE PTR [esi+edi*2-0x797e4c6]
  41d41e:	push   0xc8db579f
  41d423:	cli    
  41d424:	aad    0x28
  41d426:	(bad)  
  41d427:	mov    eax,ds:0x7e590455
  41d42c:	pop    ss
  41d42d:	pushf  
  41d42e:	in     al,dx
  41d42f:	push   ecx
  41d430:	mov    al,0x95
  41d432:	retf   
  41d433:	mov    ecx,0x683de030
  41d438:	in     eax,0xd2
  41d43a:	call   0x1730:0x9d227f01
  41d441:	ds je  0x41d4ba
  41d444:	mov    al,ds:0x7c8b8db0
  41d449:	xor    ebp,DWORD PTR [edi-0x69]
  41d44c:	nop    eax
  41d44f:	and    eax,0xd1c2b927
  41d454:	push   edi
  41d455:	std    
  41d456:	inc    ebx
  41d457:	ins    BYTE PTR es:[edi],dx
  41d458:	sbb    ecx,DWORD PTR [eax+0x2e]
  41d45b:	ja     0x41d3fa
  41d45d:	jb     0x41d4b7
  41d45f:	aam    0xd9
  41d461:	fs cmp bh,al
  41d464:	cdq    
  41d465:	arpl   WORD PTR [esi+ebp*4],bx
  41d468:	das    
  41d469:	sbb    al,BYTE PTR [ebp+0x70]
  41d46c:	std    
  41d46d:	add    eax,0x9c0e1513
  41d472:	dec    ebx
  41d473:	in     eax,0x17
  41d475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d476:	dec    ebx
  41d477:	aas    
  41d478:	leave  
  41d479:	cs cmp bl,bh
  41d47c:	or     ebx,0x5c
  41d47f:	outs   dx,BYTE PTR ds:[esi]
  41d480:	dec    DWORD PTR [ebp+0x5abec091]
  41d486:	cwde   
  41d487:	shl    BYTE PTR [ebx-0x7022fbda],0xb6
  41d48e:	int3   
  41d48f:	hlt    
  41d490:	and    eax,0x31e86dcc
  41d495:	jb     0x41d41c
  41d497:	out    0xbc,al
  41d499:	call   0x76184999
  41d49e:	push   ss
  41d49f:	pop    edi
  41d4a0:	sub    al,0x3a
  41d4a2:	mov    ch,bh
  41d4a4:	xchg   ebx,eax
  41d4a5:	pop    ss
  41d4a6:	jmp    0x15dfb697
  41d4ab:	mov    al,ds:0x23933ee7
  41d4b0:	add    al,0xf0
  41d4b2:	out    dx,al
  41d4b3:	cli    
  41d4b4:	or     esi,DWORD PTR [ebp+0x4d]
  41d4b7:	aaa    
  41d4b8:	mov    ebx,0x2e18e815
  41d4bd:	cmp    al,BYTE PTR [esi]
  41d4bf:	or     ebx,esi
  41d4c1:	fild   DWORD PTR [esi+0x3c]
  41d4c4:	outs   dx,BYTE PTR ds:[esi]
  41d4c5:	fwait
  41d4c6:	cmp    al,0xad
  41d4c8:	(bad)  
  41d4c9:	xor    al,0x6e
  41d4cb:	ret    
  41d4cc:	pop    ss
  41d4cd:	cmp    BYTE PTR ds:0xe2f4104,bl
  41d4d3:	mov    ebp,0x4a6e430
  41d4d8:	and    BYTE PTR [eax+ecx*2],dh
  41d4db:	fwait
  41d4dc:	outs   dx,DWORD PTR ds:[esi]
  41d4dd:	add    eax,0x7e01a622
  41d4e2:	sub    ecx,esi
  41d4e4:	pop    ebp
  41d4e5:	(bad)  
  41d4e6:	aaa    
  41d4e7:	pop    ss
  41d4e8:	shl    BYTE PTR [eax+ebp*1-0x4794cb36],1
  41d4ef:	pop    edx
  41d4f0:	ss sar esp,1
  41d4f3:	inc    ecx
  41d4f4:	adc    esi,DWORD PTR [edx+0x74ddeb9d]
  41d4fa:	fwait
  41d4fb:	inc    ebp
  41d4fc:	leave  
  41d4fd:	sbb    esp,DWORD PTR [esi]
  41d4ff:	hlt    
  41d500:	(bad)  
  41d501:	nop
  41d502:	mov    ch,0x6c
  41d504:	loopne 0x41d524
  41d506:	lahf   
  41d507:	cmp    DWORD PTR ds:0xd6eadaed,0x3cf236ec
  41d511:	shl    DWORD PTR [ebx-0x5da55360],1
  41d517:	sub    edi,DWORD PTR [ecx]
  41d519:	imul   edx,DWORD PTR [esi+edx*1-0x7bde506c],0x449b6b3a
  41d524:	fdivr  DWORD PTR [esi+0x18]
  41d527:	dec    eax
  41d528:	pop    eax
  41d529:	fild   WORD PTR [ebx+0x76]
  41d52c:	mov    esp,0x39a8a332
  41d531:	shr    DWORD PTR [eax-0xf48bc86],1
  41d537:	xor    edx,edi
  41d539:	mov    al,ds:0x9fa70307
  41d53e:	addr16 dec edi
  41d540:	add    eax,DWORD PTR [eax-0x7b0bb43e]
  41d546:	cmp    esi,DWORD PTR [ebp-0x5b]
  41d549:	fimul  WORD PTR [edi]
  41d54b:	call   0x2b31:0x4b01c7ea
  41d552:	dec    edx
  41d553:	rcr    BYTE PTR cs:[edx],cl
  41d556:	sbb    bh,BYTE PTR [ebp-0x6aac61cb]
  41d55c:	scas   al,BYTE PTR es:[edi]
  41d55d:	ret    0xfd33
  41d560:	cmp    dl,BYTE PTR [ebx-0x15db2360]
  41d566:	inc    ebx
  41d567:	mov    gs,WORD PTR [edi+0x47d8ac34]
  41d56d:	arpl   WORD PTR [edi+0x2eb49973],di
  41d573:	dec    edi
  41d574:	in     al,0xb7
  41d576:	sbb    bl,0x64
  41d579:	pop    ebx
  41d57a:	aad    0xdd
  41d57c:	jnp    0x41d5f3
  41d57e:	hlt    
  41d57f:	inc    cx
  41d581:	xchg   ebx,ebp
  41d583:	cmp    al,0x5
  41d585:	(bad)  
  41d586:	out    dx,al
  41d587:	not    BYTE PTR [ebx]
  41d589:	aaa    
  41d58a:	gs popf 
  41d58c:	repz adc edi,DWORD PTR [ecx+edx*2]
  41d590:	add    BYTE PTR [edi-0x6a],ah
  41d593:	dec    esi
  41d594:	pop    eax
  41d595:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d596:	xchg   edi,eax
  41d597:	pushf  
  41d598:	mov    edi,?
  41d59a:	push   ebx
  41d59b:	in     eax,0xa4
  41d59d:	push   edi
  41d59e:	jp     0x41d605
  41d5a0:	inc    ebp
  41d5a1:	out    0xb8,eax
  41d5a3:	mov    esi,0x9aba74e7
  41d5a8:	loopne 0x41d58c
  41d5aa:	pop    edx
  41d5ab:	xchg   DWORD PTR [ecx+ebp*8+0x45da54df],esi
  41d5b2:	(bad)  
  41d5b3:	repnz in eax,dx
  41d5b5:	mov    ds:0x372d4205,eax
  41d5ba:	loope  0x41d621
  41d5bc:	call   0xf79a:0xad925b37
  41d5c3:	inc    edi
  41d5c4:	xchg   esp,eax
  41d5c5:	xor    DWORD PTR [edi+eiz*2-0x67],edx
  41d5c9:	fcmovnbe st,st(0)
  41d5cb:	test   eax,ecx
  41d5cd:	daa    
  41d5ce:	popf   
  41d5cf:	call   0xa36d8b16
  41d5d4:	dec    ecx
  41d5d5:	inc    ebx
  41d5d6:	xor    esp,ecx
  41d5d8:	fdiv   st,st(7)
  41d5da:	scas   eax,DWORD PTR es:[edi]
  41d5db:	cld    
  41d5dc:	(bad)  
  41d5dd:	aas    
  41d5de:	mov    ds:0xfd55a2c,al
  41d5e3:	mov    dl,0x26
  41d5e5:	and    ch,ah
  41d5e7:	shl    BYTE PTR ds:0x43c61d0a,1
  41d5ed:	je     0x41d627
  41d5ef:	les    esp,FWORD PTR [ebp-0x5a]
  41d5f2:	out    dx,eax
  41d5f3:	push   0x11
  41d5f5:	ficomp DWORD PTR gs:[edx+0x658d1d56]
  41d5fc:	je     0x41d607
  41d5fe:	pusha  
  41d5ff:	test   eax,0xf010e587
  41d604:	pop    ebp
  41d605:	cs jne 0x41d644
  41d608:	or     ebx,DWORD PTR [ebx+0x67d4dbc5]
  41d60e:	pop    ebp
  41d60f:	cdq    
  41d610:	or     ebx,DWORD PTR [eax]
  41d612:	mov    al,ah
  41d614:	(bad)  
  41d615:	fistp  QWORD PTR [esi-0x53]
  41d618:	rol    DWORD PTR [edi-0x784f10d9],0x5d
  41d61f:	out    dx,eax
  41d620:	mov    ecx,0x596e1ec7
  41d625:	leave  
  41d626:	pop    ebp
  41d627:	sbb    bl,dh
  41d629:	clc    
  41d62a:	mov    ebx,0xe845ffba
  41d62f:	sbb    BYTE PTR [esi],0x50
  41d632:	(bad)  
  41d634:	sbb    DWORD PTR [esi+0x1d],eax
  41d637:	push   es
  41d638:	pop    edx
  41d639:	jo     0x41d619
  41d63b:	(bad)  
  41d63c:	push   ss
  41d63d:	in     eax,dx
  41d63e:	cmp    al,0x4f
  41d640:	and    eax,0xe09aa860
  41d645:	push   edx
  41d646:	mov    al,ds:0x297d1f4
  41d64b:	jbe    0x41d666
  41d64d:	adc    DWORD PTR [ebp-0x7aed9d5e],esp
  41d653:	into   
  41d654:	jl     0x41d60f
  41d656:	sbb    DWORD PTR [edx-0x757bc838],edx
  41d65c:	push   es
  41d65d:	mov    bl,0xbf
  41d65f:	std    
  41d660:	xor    eax,0x1f957919
  41d665:	mov    DWORD PTR [edx+0x6],0xe9ea0d
  41d66c:	fimul  DWORD PTR [ebp-0x70]
  41d66f:	jne    0x41d643
  41d671:	rcpps  xmm7,XMMWORD PTR [ecx]
  41d674:	ret    0xa5be
  41d677:	sbb    BYTE PTR [esi-0x44878761],ah
  41d67d:	inc    ecx
  41d67e:	dec    ebx
  41d67f:	jle    0x41d6d7
  41d681:	and    BYTE PTR [esp+eiz*8+0x21],al
  41d685:	dec    eax
  41d686:	out    dx,al
  41d687:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d688:	jmp    0x834:0x44b5d8e3
  41d68f:	jg     0x41d6a1
  41d691:	sbb    BYTE PTR [ecx+0x1442da34],dl
  41d697:	mov    ch,BYTE PTR ds:0xf12ed858
  41d69d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d69e:	xor    eax,DWORD PTR [esi]
  41d6a0:	cmp    eax,0xb8319e31
  41d6a5:	jl     0x41d66c
  41d6a7:	cmc    
  41d6a8:	push   ecx
  41d6a9:	jecxz  0x41d667
  41d6ab:	dec    ecx
  41d6ac:	mov    al,0xd3
  41d6ae:	icebp  
  41d6af:	popa   
  41d6b0:	out    dx,eax
  41d6b1:	arpl   WORD PTR [eax*4-0x7f082578],dx
  41d6b8:	sbb    BYTE PTR [ebx],cl
  41d6ba:	aas    
  41d6bb:	lea    edx,[edx]
  41d6bd:	data16 mov al,ds:0x47953791
  41d6c4:	popf   
  41d6c5:	mov    ch,0x52
  41d6c7:	sbb    eax,0x51e84062
  41d6cc:	xor    ebx,eax
  41d6ce:	scas   al,BYTE PTR es:[edi]
  41d6cf:	into   
  41d6d0:	sar    DWORD PTR [ecx],cl
  41d6d2:	aaa    
  41d6d3:	ja     0x41d729
  41d6d5:	dec    ecx
  41d6d6:	pop    ss
  41d6d7:	adc    dh,cl
  41d6d9:	cmp    bh,BYTE PTR [edx]
  41d6db:	sbb    dh,BYTE PTR [ebx+0x73]
  41d6de:	ret    0xf28b
  41d6e1:	pop    ebp
  41d6e2:	jbe    0x41d681
  41d6e4:	pushf  
  41d6e5:	jmp    0x41d701
  41d6e7:	dec    ebp
  41d6e8:	adc    DWORD PTR [eax-0x26],ecx
  41d6eb:	ins    DWORD PTR es:[edi],dx
  41d6ec:	(bad)  
  41d6ed:	fiadd  WORD PTR [edx+edx*1]
  41d6f0:	pop    esi
  41d6f1:	dec    eax
  41d6f2:	sbb    ecx,DWORD PTR [ebx+0x3e]
  41d6f5:	dec    esp
  41d6f6:	inc    eax
  41d6f7:	sub    ebp,DWORD PTR ds:0x37d5c023
  41d6fd:	jge    0x41d6de
  41d6ff:	cwde   
  41d700:	pop    esp
  41d701:	sbb    al,dh
  41d703:	test   BYTE PTR [ebp+0x29],bh
  41d706:	imul   edi,DWORD PTR ds:0xd3ef1353,0xffffffbc
  41d70d:	pop    ebp
  41d70e:	ins    BYTE PTR es:[edi],dx
  41d70f:	mov    BYTE PTR [ebp+0x63],cl
  41d712:	not    dl
  41d714:	push   es
  41d715:	test   BYTE PTR [esp+eiz*8],cl
  41d718:	fdiv   QWORD PTR [ecx-0x6168d256]
  41d71e:	push   ecx
  41d71f:	pop    edx
  41d720:	pusha  
  41d721:	rcr    BYTE PTR [ebx],0xb4
  41d724:	adc    ebp,ebp
  41d726:	xchg   ah,bh
  41d728:	xor    DWORD PTR [eax],ebp
  41d72a:	pop    ebx
  41d72b:	mov    al,0xf1
  41d72d:	call   0x6219:0x9be0a9b1
  41d734:	push   ebp
  41d735:	ret    0x7b5e
  41d738:	push   eax
  41d739:	mov    ah,0x27
  41d73b:	xchg   edi,eax
  41d73c:	jne    0x41d789
  41d73e:	xchg   ebp,eax
  41d73f:	(bad)  
  41d740:	xor    DWORD PTR [esi-0x1c],ebp
  41d743:	and    edi,DWORD PTR [eax+edx*1-0x15c7a565]
  41d74a:	jo     0x41d720
  41d74c:	(bad)  
  41d74f:	jecxz  0x41d7cb
  41d751:	lahf   
  41d752:	into   
  41d753:	cs scas eax,DWORD PTR es:[edi]
  41d755:	inc    esi
  41d756:	sbb    DWORD PTR [eax-0x42],ecx
  41d759:	inc    edx
  41d75a:	imul   DWORD PTR [ebp-0x30]
  41d75d:	mov    ds,esp
  41d75f:	push   ds
  41d760:	mov    ds:0xb4c3a2c1,al
  41d765:	popa   
  41d766:	dec    esi
  41d767:	inc    edx
  41d768:	js     0x41d7b6
  41d76a:	push   ebp
  41d76b:	cdq    
  41d76c:	adc    BYTE PTR [edx],0x97
  41d76f:	or     ebp,DWORD PTR [ebx-0x4f]
  41d772:	loopne 0x41d71b
  41d774:	aas    
  41d775:	(bad)  
  41d776:	jle    0x41d7bf
  41d778:	ror    BYTE PTR [esi-0x7a],cl
  41d77b:	jmp    0x1d71:0xa9947de4
  41d782:	xlat   BYTE PTR ds:[ebx]
  41d783:	retf   0x4afb
  41d786:	xchg   DWORD PTR [ecx+0xb5ed2ed],ecx
  41d78c:	dec    ebx
  41d78d:	cli    
  41d78e:	ret    
  41d78f:	inc    ecx
  41d790:	fisubr DWORD PTR [ebx+0x1a84af93]
  41d796:	leave  
  41d797:	repnz out 0x1f,al
  41d79a:	add    esp,DWORD PTR [edx]
  41d79c:	sbb    DWORD PTR [eax],edx
  41d79e:	sti    
  41d79f:	imul   esi,DWORD PTR [ebp+edi*8+0x64],0xffffffb6
  41d7a4:	xchg   ecx,eax
  41d7a5:	mov    esi,DWORD PTR [edx+0x61030ceb]
  41d7ab:	mov    DWORD PTR [edi+ecx*1-0x47],eax
  41d7af:	outs   dx,DWORD PTR ds:[esi]
  41d7b0:	les    edi,FWORD PTR [eax]
  41d7b2:	test   BYTE PTR [edx+0x29],0xca
  41d7b6:	xor    al,0x45
  41d7b8:	les    eax,FWORD PTR ds:0x10249b67
  41d7be:	pop    edx
  41d7bf:	sub    al,0xe
  41d7c1:	or     ah,BYTE PTR ds:0xd37d1ecf
  41d7c7:	jmp    0x84d24db7
  41d7cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7cd:	mov    edi,0x9d176e67
  41d7d2:	mov    ecx,0x2b8d5eab
  41d7d7:	lea    esp,[edi+0x3b]
  41d7da:	jne    0x41d7ef
  41d7dc:	add    al,ch
  41d7de:	add    BYTE PTR [ebx+ecx*4+0x4ad61d05],bh
  41d7e5:	mov    bh,0x38
  41d7e7:	jb     0x41d78e
  41d7e9:	dec    edi
  41d7ea:	mov    WORD PTR [ebp-0x20],ss
  41d7ed:	fidiv  WORD PTR [edx+0x1023c67]
  41d7f3:	out    dx,al
  41d7f4:	adc    bh,BYTE PTR [edx-0x49]
  41d7f7:	std    
  41d7f8:	or     DWORD PTR [ebp+0x497a830c],edx
  41d7fe:	mov    edi,0x9b539847
  41d803:	(bad)  
  41d804:	fbstp  TBYTE PTR [edi]
  41d806:	aam    0x8c
  41d808:	mov    ds:0x206d29c3,al
  41d80d:	add    al,BYTE PTR [di]
  41d810:	fst    DWORD PTR [edi]
  41d812:	cwde   
  41d813:	sti    
  41d814:	pop    esp
  41d815:	jnp    0x41d7b3
  41d817:	aaa    
  41d818:	test   DWORD PTR [ecx+0x6],esi
  41d81b:	shl    DWORD PTR [ebx],cl
  41d81d:	sub    ch,al
  41d81f:	add    dh,BYTE PTR [ecx+0x6a]
  41d822:	pop    es
  41d823:	xchg   ecx,eax
  41d824:	sub    ebx,esp
  41d826:	ror    BYTE PTR [esi],0x2
  41d829:	sbb    DWORD PTR [eax-0x32],esp
  41d82c:	ins    BYTE PTR es:[edi],dx
  41d82d:	jo     0x41d816
  41d82f:	fwait
  41d830:	aam    0x85
  41d832:	dec    esp
  41d833:	pop    esi
  41d834:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d835:	lods   eax,DWORD PTR ds:[esi]
  41d836:	call   0x5810:0x6e41a4bf
  41d83d:	jg     0x41d887
  41d83f:	dec    edi
  41d840:	or     ecx,DWORD PTR [eax+ebp*2-0x63]
  41d844:	push   eax
  41d845:	inc    ecx
  41d846:	imul   esp,DWORD PTR [ecx+edx*2],0xffffffbf
  41d84a:	nop
  41d84b:	jmp    0x9c71:0x33838511
  41d852:	xor    BYTE PTR [edx+0x7c],0x5
  41d856:	mov    ecx,0xc5035a28
  41d85b:	scas   al,BYTE PTR es:[edi]
  41d85c:	sub    BYTE PTR [ecx],ah
  41d85e:	sar    eax,cl
  41d860:	xchg   BYTE PTR [ebx+0x28],dh
  41d863:	mov    WORD PTR [eax],es
  41d865:	jge    0x41d8e2
  41d867:	test   al,0x30
  41d869:	retf   
  41d86a:	pop    edi
  41d86b:	mov    ebp,0xae4dbed5
  41d870:	push   esp
  41d871:	mov    al,ds:0x3d5e1baf
  41d876:	das    
  41d877:	mov    edi,0x5a20f0c7
  41d87c:	jle    0x41d831
  41d87e:	add    dl,BYTE PTR [edi+ecx*1]
  41d881:	dec    ebp
  41d882:	push   ecx
  41d883:	pop    ebp
  41d884:	sti    
  41d885:	fsub   DWORD PTR [eax-0x48f75e8c]
  41d88b:	cwde   
  41d88c:	mov    ebx,DWORD PTR ss:[eax]
  41d88f:	inc    esp
  41d890:	das    
  41d891:	cmp    ah,BYTE PTR [ebp+edx*4-0x5]
  41d895:	jno    0x41d906
  41d897:	lds    esi,FWORD PTR [edx+0x58]
  41d89a:	sbb    BYTE PTR [ebx+0x7793761],0xb2
  41d8a1:	shr    BYTE PTR [ebp+0x57],cl
  41d8a4:	mov    bh,0xa8
  41d8a6:	lods   eax,DWORD PTR ds:[esi]
  41d8a7:	inc    ecx
  41d8a8:	push   esp
  41d8a9:	add    al,0xd7
  41d8ab:	arpl   WORD PTR [ebx+ebx*4-0x37],di
  41d8af:	sar    DWORD PTR [ebp+0x6fd7c9ef],0x57
  41d8b6:	mov    ah,0x15
  41d8b8:	lods   al,BYTE PTR ds:[esi]
  41d8b9:	dec    eax
  41d8ba:	rol    DWORD PTR [edx-0x2b7f43a],cl
  41d8c0:	mov    bl,0x35
  41d8c2:	jmp    0x1e617a74
  41d8c7:	daa    
  41d8c8:	lea    ebx,[esi-0x2ba843d0]
  41d8ce:	arpl   WORD PTR [ecx-0xd38cd0a],bp
  41d8d4:	imul   esi,DWORD PTR [ecx+ebp*1],0x7d9fd711
  41d8db:	lods   eax,DWORD PTR ds:[esi]
  41d8dc:	call   0xb13f:0xfb7a63c9
  41d8e3:	xchg   DWORD PTR [ecx-0x12580710],ebp
  41d8e9:	mov    ds:0x3340fca8,eax
  41d8ee:	jno    0x41d925
  41d8f0:	call   0x313ec4de
  41d8f5:	jae    0x41d8e2
  41d8f7:	retf   0x9c1d
  41d8fa:	push   eax
  41d8fb:	loop   0x41d8b9
  41d8fd:	lahf   
  41d8fe:	frstor [esi+eiz*2]
  41d901:	clc    
  41d902:	adc    al,0x98
  41d904:	icebp  
  41d905:	scas   eax,DWORD PTR es:[edi]
  41d906:	xor    ah,BYTE PTR [edx]
  41d908:	retf   0x7416
  41d90b:	fsubr  DWORD PTR [eax+0x31]
  41d90e:	arpl   WORD PTR [ebp-0x4c749f18],cx
  41d914:	fwait
  41d915:	mov    DWORD PTR [ecx+0x40],eax
  41d918:	push   eax
  41d919:	ret    0x8b14
  41d91c:	mov    eax,0x5cd6a3cf
  41d921:	jns    0x41d93e
  41d923:	rcr    BYTE PTR [eax],cl
  41d925:	outs   dx,DWORD PTR ds:[esi]
  41d926:	js     0x41d9a4
  41d928:	inc    esp
  41d929:	and    eax,0x4a2dd0fc
  41d92e:	fs test eax,0x478b1e67
  41d934:	pop    esp
  41d935:	ret    
  41d936:	call   0xeb9ee8aa
  41d93b:	(bad)
  41d93f:	mov    eax,0xab373d85
  41d944:	outs   dx,DWORD PTR ds:[esi]
  41d945:	push   esp
  41d946:	outs   dx,DWORD PTR ds:[esi]
  41d947:	add    dh,BYTE PTR [eax-0x69e4f990]
  41d94d:	jbe    0x41d98d
  41d94f:	adc    esi,esi
  41d951:	mov    esi,esi
  41d953:	adc    BYTE PTR [eax+0x7019dae7],0x71
  41d95a:	pop    ds
  41d95b:	(bad)  [ebx+0x61]
  41d95e:	arpl   bp,sp
  41d960:	repz (bad) 
  41d962:	aaa    
  41d963:	sub    eax,0xf4c26d63
  41d968:	jno    0x41d977
  41d96a:	fs mov eax,0xc731a494
  41d970:	(bad)  
  41d971:	mov    ds:0x374db343,al
  41d976:	(bad)  
  41d977:	ins    DWORD PTR es:[edi],dx
  41d978:	ret    
  41d979:	mov    dl,0xd2
  41d97b:	or     ch,BYTE PTR [ebx]
  41d97d:	xchg   BYTE PTR [edx-0x4a],bh
  41d980:	sbb    al,0xbc
  41d982:	setg   dh
  41d985:	das    
  41d986:	jae    0xbca30182
  41d98c:	and    ebx,DWORD PTR [ecx]
  41d98e:	(bad)  
  41d990:	add    DWORD PTR [edi-0x23],esi
  41d993:	leave  
  41d994:	or     esp,ecx
  41d996:	mov    al,ds:0x36001638
  41d99b:	leave  
  41d99c:	sbb    ecx,ecx
  41d99e:	push   esp
  41d99f:	(bad)  
  41d9a0:	nop
  41d9a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9a2:	mov    dh,0x44
  41d9a4:	sub    BYTE PTR [eax],al
  41d9a6:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41d9a8:	js     0x41d9cc
  41d9aa:	sahf   
  41d9ab:	mov    al,BYTE PTR [ebp+0x33]
  41d9ae:	add    ah,al
  41d9b0:	lea    ecx,[eax-0x9]
  41d9b3:	out    dx,al
  41d9b4:	in     al,0x93
  41d9b6:	les    ecx,FWORD PTR [eax+esi*8+0x1fdadd2b]
  41d9bd:	in     al,dx
  41d9be:	mov    edi,DWORD PTR [edi+0x22]
  41d9c1:	cmp    eax,0x48
  41d9c4:	fimul  DWORD PTR [esi+0x7107d1b0]
  41d9ca:	push   ecx
  41d9cb:	outs   dx,BYTE PTR ds:[esi]
  41d9cc:	pop    esp
  41d9cd:	add    bh,BYTE PTR [esi]
  41d9cf:	ret    0xe975
  41d9d2:	pop    ss
  41d9d3:	pop    esp
  41d9d4:	mov    al,BYTE PTR [ebp+ebp*4+0x44000688]
  41d9db:	mov    edx,0xf5585d00
  41d9e0:	dec    edi
  41d9e1:	sbb    ebp,DWORD PTR [ecx]
  41d9e3:	popa   
  41d9e4:	push   es
  41d9e5:	(bad)  
  41d9e8:	jg     0x41d97b
  41d9ea:	xchg   BYTE PTR [esi-0x253e3a13],dh
  41d9f0:	popf   
  41d9f1:	jbe    0x41d984
  41d9f3:	into   
  41d9f4:	dec    edx
  41d9f5:	and    DWORD PTR [eax-0x6f],ebp
  41d9f8:	inc    ebx
  41d9f9:	dec    eax
  41d9fa:	mov    cl,0x64
  41d9fc:	test   al,0x2c
  41d9fe:	ror    BYTE PTR [edx],1
  41da00:	sub    bh,BYTE PTR [ebp+0x6f]
  41da03:	push   ds
  41da04:	mov    eax,0xb199994a
  41da09:	sub    ebx,eax
  41da0b:	jne    0x41d9e3
  41da0d:	jns    0x41d9f3
  41da0f:	cli    
  41da10:	and    BYTE PTR [esp+eax*1-0x60c39e67],dh
  41da17:	cmc    
  41da18:	and    edx,DWORD PTR cs:[esi-0x4b7a6505]
  41da1f:	xchg   DWORD PTR [ebx-0x6e40febf],esi
  41da25:	push   edx
  41da26:	clc    
  41da27:	xchg   esi,eax
  41da28:	xchg   edi,eax
  41da29:	xchg   edi,eax
  41da2a:	int    0x84
  41da2c:	cmp    eax,0x17d376b3
  41da31:	lods   al,BYTE PTR ds:[esi]
  41da32:	mov    al,0xa4
  41da34:	lock pop eax
  41da36:	sbb    dh,dh
  41da38:	dec    ebx
  41da39:	outs   dx,BYTE PTR ds:[esi]
  41da3a:	jmp    0xa15bcb5b
  41da3f:	inc    ebp
  41da40:	mov    dl,0xd7
  41da42:	cli    
  41da43:	inc    ecx
  41da44:	sbb    BYTE PTR [edx],0x26
  41da47:	(bad)  
  41da48:	sub    bh,ah
  41da4a:	push   ebp
  41da4b:	cmp    eax,0x58cd2bad
  41da50:	jo     0x41da4c
  41da52:	fist   WORD PTR [edx+0x5a]
  41da55:	mov    dh,0x4d
  41da57:	loop   0x41dab3
  41da59:	or     dl,ah
  41da5b:	ins    DWORD PTR es:[edi],dx
  41da5c:	push   eax
  41da5d:	dec    edi
  41da5e:	jne    0x41da52
  41da60:	lods   eax,DWORD PTR ds:[esi]
  41da61:	imul   BYTE PTR [ebx+0x72]
  41da64:	popa   
  41da65:	outs   dx,DWORD PTR ds:[esi]
  41da66:	jnp    0x41dae5
  41da68:	les    ecx,FWORD PTR [ebp+edx*1+0x2fa7ea5d]
  41da6f:	xlat   BYTE PTR ds:[ebx]
  41da70:	jno    0x41da00
  41da72:	arpl   WORD PTR [ebp+ebp*2+0x35961ab4],bp
  41da79:	loope  0x41da9a
  41da7b:	out    dx,eax
  41da7c:	xchg   edx,eax
  41da7d:	jmp    0x7a29:0x51f65079
  41da84:	es xchg ebx,eax
  41da86:	(bad)  
  41da87:	ins    BYTE PTR es:[edi],dx
  41da88:	jae    0x41dae4
  41da8a:	test   al,0xc8
  41da8c:	jmp    0x1835:0xdad7945c
  41da93:	and    al,0xef
  41da95:	jmp    0x41da20
  41da97:	jge    0x41daed
  41da99:	push   esi
  41da9a:	push   edx
  41da9b:	in     al,dx
  41da9c:	in     al,dx
  41da9d:	dec    esp
  41da9e:	cmp    ebx,DWORD PTR [ebp+ebx*1+0x2e]
  41daa2:	and    al,0x99
  41daa4:	push   0x16
  41daa6:	in     eax,dx
  41daa7:	pop    esi
  41daa8:	cmc    
  41daa9:	(bad)  
  41daaa:	popa   
  41daab:	fisttp WORD PTR [ebx+0x5722a07d]
  41dab1:	cmp    DWORD PTR [eax-0x79],edi
  41dab4:	jno    0x41db26
  41dab6:	adc    eax,0x4fa6a606
  41dabb:	xchg   ebx,eax
  41dabc:	leave  
  41dabd:	cs jbe 0x41dabb
  41dac0:	pop    ebp
  41dac1:	and    DWORD PTR [ecx+0x1f],edx
  41dac4:	jle    0x41daf3
  41dac6:	in     al,0xe3
  41dac8:	mov    dl,0xa3
  41daca:	dec    ecx
  41dacb:	data16 jnp 0x41da83
  41dace:	xor    DWORD PTR [eax+0x454bdfe0],edx
  41dad4:	in     eax,dx
  41dad5:	bound  ebx,QWORD PTR [ebp+0x2e]
  41dad8:	mov    al,ch
  41dada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dadb:	test   edi,ebx
  41dadd:	cld    
  41dade:	sub    BYTE PTR [ebp+0x44369b2f],0x4a
  41dae5:	cmc    
  41dae6:	ja     0x41da81
  41dae8:	cmp    edi,DWORD PTR [edi+0x75e14f30]
  41daee:	mov    ch,0x2e
  41daf0:	mov    al,ds:0x7f1f880a
  41daf5:	adc    DWORD PTR [edx-0x2bd73485],0x49
  41dafc:	divps  xmm5,XMMWORD PTR [edx-0x1c16926]
  41db03:	pushf  
  41db04:	rol    BYTE PTR [ebx],0x40
  41db07:	loope  0x41daa0
  41db09:	outs   dx,DWORD PTR ds:[esi]
  41db0a:	stc    
  41db0b:	stos   BYTE PTR es:[edi],al
  41db0c:	jno    0x41db55
  41db0e:	push   ecx
  41db0f:	mov    ecx,0x4f1a3db
  41db14:	adc    DWORD PTR [ecx-0x2b],ebp
  41db17:	arpl   WORD PTR [ecx+0x76],ax
  41db1a:	mov    DWORD PTR [ebx+0xe],esp
  41db1d:	sbb    ecx,ecx
  41db1f:	retf   0xcbc1
  41db22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db23:	(bad)  
  41db24:	push   ds
  41db25:	ins    DWORD PTR es:[edi],dx
  41db26:	add    eax,ebx
  41db28:	push   eax
  41db29:	pop    ebx
  41db2a:	and    bh,BYTE PTR [ebp+0x21]
  41db2d:	call   0x656184f1
  41db32:	inc    ebp
  41db33:	mov    ds:0xf637a431,al
  41db38:	sub    cl,BYTE PTR [ebx+0x64cf14f3]
  41db3e:	pop    ebp
  41db3f:	add    BYTE PTR [ebx-0x21],ah
  41db42:	xor    ecx,DWORD PTR [esi]
  41db44:	xchg   ecx,eax
  41db45:	cdq    
  41db46:	push   ds
  41db47:	inc    ebp
  41db48:	adc    DWORD PTR [ebx-0x1cd3457f],eax
  41db4e:	scas   eax,DWORD PTR es:[edi]
  41db4f:	xchg   edi,eax
  41db50:	sahf   
  41db51:	cmp    DWORD PTR [ecx-0x6d0337ff],eax
  41db57:	xchg   BYTE PTR [ecx-0x67],bh
  41db5a:	mov    ch,0xfc
  41db5c:	dec    ebp
  41db5d:	mov    DWORD PTR [edi],0x5f1b0f7e
  41db63:	test   al,0x19
  41db65:	inc    eax
  41db66:	dec    esp
  41db67:	mov    ah,0x46
  41db69:	leave  
  41db6a:	(bad)  
  41db6b:	jae    0x60ce6542
  41db71:	gs or  eax,0xe093ec15
  41db77:	inc    eax
  41db78:	mov    al,ds:0xba4268f2
  41db7d:	in     eax,dx
  41db7e:	add    BYTE PTR [eax],al
  41db80:	inc    eax
  41db81:	dec    esp
  41db82:	mov    BYTE PTR [ebx+0x2391486c],cl
  41db88:	stos   BYTE PTR es:[edi],al
  41db89:	dec    edx
  41db8a:	add    al,0xff
  41db8c:	out    dx,eax
  41db8d:	leave  
  41db8e:	inc    esi
  41db8f:	mov    esp,DWORD PTR [ecx]
  41db91:	iret   
  41db92:	or     DWORD PTR [ebp+0x16],esp
  41db95:	loop   0x41db75
  41db97:	push   ebp
  41db98:	jg     0x41dbcd
  41db9a:	jp     0x41db53
  41db9c:	pop    ebp
  41db9d:	xor    DWORD PTR [edx],ecx
  41db9f:	mov    bh,0xe2
  41dba1:	jg     0x41db3d
  41dba3:	shl    BYTE PTR [edi],cl
  41dba5:	cdq    
  41dba6:	scas   eax,DWORD PTR es:[edi]
  41dba7:	sub    dh,ch
  41dba9:	nop
  41dbaa:	jg     0x41db4b
  41dbac:	call   0xaf62501b
  41dbb1:	lods   al,BYTE PTR ds:[esi]
  41dbb2:	(bad)  
  41dbb3:	pop    edi
  41dbb4:	add    al,0xe8
  41dbb6:	loope  0x41dc16
  41dbb8:	fst    QWORD PTR [ebx+0x66]
  41dbbb:	push   0x30
  41dbbd:	inc    esi
  41dbbe:	cmp    al,BYTE PTR [esi+ebx*1-0x18d975ec]
  41dbc5:	sar    DWORD PTR [edx+0x3d5da155],0x6
  41dbcc:	mov    ds:0x6a0a3750,eax
  41dbd1:	pusha  
  41dbd2:	hlt    
  41dbd3:	popf   
  41dbd4:	pop    ss
  41dbd5:	pushf  
  41dbd6:	rcl    DWORD PTR [edi+edx*2],0x3c
  41dbda:	xchg   ebp,eax
  41dbdb:	sbb    al,0x9c
  41dbdd:	jg     0x41dc47
  41dbdf:	xlat   BYTE PTR ds:[ebx]
  41dbe0:	fisttp QWORD PTR [edx+0x36]
  41dbe3:	ins    DWORD PTR es:[edi],dx
  41dbe4:	jo     0x41db7b
  41dbe6:	call   0x57d:0x439de2c5
  41dbed:	xor    ebx,edi
  41dbef:	(bad)  
  41dbf0:	aaa    
  41dbf1:	fdivr  QWORD PTR [edx]
  41dbf3:	add    DWORD PTR [ebx+0x26],eax
  41dbf6:	mov    ah,0x90
  41dbf8:	stos   BYTE PTR es:[edi],al
  41dbf9:	mov    ebx,0xe96fd1f9
  41dbfe:	hlt    
  41dbff:	add    edi,DWORD PTR [edi-0x19da2cb3]
  41dc05:	outs   dx,BYTE PTR ds:[esi]
  41dc06:	xchg   BYTE PTR ds:0x742de1a6,ah
  41dc0c:	jp     0x41dc11
  41dc0e:	popf   
  41dc0f:	daa    
  41dc10:	pop    DWORD PTR [ebx-0xc]
  41dc13:	retf   
  41dc14:	leave  
  41dc15:	les    edx,FWORD PTR cs:[edx+0x56]
  41dc19:	inc    edi
  41dc1a:	sbb    edx,DWORD PTR [ebx-0x19]
  41dc1d:	mov    ah,0xac
  41dc1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc20:	or     ebx,eax
  41dc22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc23:	xor    eax,0x120664be
  41dc28:	pop    edx
  41dc29:	aaa    
  41dc2a:	bnd jnp 0x41dbde
  41dc2d:	xchg   ebx,eax
  41dc2e:	arpl   WORD PTR [ebx+eax*1-0x3441cf1c],dx
  41dc35:	push   esp
  41dc36:	dec    esi
  41dc37:	in     eax,0x79
  41dc39:	jno    0x41dca4
  41dc3b:	pop    esi
  41dc3c:	rol    esp,cl
  41dc3e:	xlat   BYTE PTR ds:[ebx]
  41dc3f:	in     al,dx
  41dc40:	and    al,BYTE PTR [edi+0x254002b1]
  41dc46:	jno    0x41dc4c
  41dc48:	xchg   ecx,ebx
  41dc4a:	js     0x41dbce
  41dc4c:	push   0xdd8fae4c
  41dc51:	xor    BYTE PTR [ecx-0x551d1140],al
  41dc57:	test   DWORD PTR [ecx+ebp*1],0xabd009d7
  41dc5e:	loope  0x41dc79
  41dc60:	xor    bh,dl
  41dc62:	xor    al,0xc
  41dc64:	mov    ebx,0xac4427c1
  41dc69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc6a:	loop   0x41dc43
  41dc6c:	into   
  41dc6d:	xchg   edi,eax
  41dc6e:	mov    al,ds:0x6ea2b06
  41dc73:	imul   ebp,ecx,0xfffffffe
  41dc76:	sahf   
  41dc77:	push   0x24
  41dc79:	sbb    esp,ebx
  41dc7b:	cwde   
  41dc7c:	loopne 0x41dce5
  41dc7e:	jbe    0x41dca1
  41dc80:	pop    ecx
  41dc81:	add    eax,DWORD PTR [ecx-0x3f]
  41dc84:	jnp    0x41dcc1
  41dc86:	push   ecx
  41dc87:	inc    ebx
  41dc88:	stc    
  41dc89:	mov    al,ds:0xaac9eb5a
  41dc8e:	fisttp WORD PTR [ebp+0x2b]
  41dc91:	es mov edi,0x7e113dac
  41dc97:	mov    ecx,0x941805fd
  41dc9c:	sub    BYTE PTR [eax],0xcb
  41dc9f:	push   eax
  41dca0:	scas   eax,DWORD PTR es:[edi]
  41dca1:	xor    BYTE PTR ds:0x703470fc,ch
  41dca7:	mov    edx,DWORD PTR [ebp-0x36]
  41dcaa:	mov    ebx,0x7571b297
  41dcaf:	sbb    eax,0xc2ee7e80
  41dcb4:	fisttp WORD PTR [ebp+0x4aa52398]
  41dcba:	std    
  41dcbb:	out    0xaf,al
  41dcbd:	xchg   esp,eax
  41dcbe:	push   0xffffffb8
  41dcc0:	pop    ss
  41dcc1:	imul   edi
  41dcc3:	or     edx,DWORD PTR [esi]
  41dcc5:	cmp    bl,BYTE PTR [ebx-0x12]
  41dcc8:	pop    ebp
  41dcc9:	push   esp
  41dcca:	jae    0x41dcc3
  41dccc:	xor    BYTE PTR [esi+0x639af428],0x5e
  41dcd3:	shl    BYTE PTR [ecx-0x6e7b1093],cl
  41dcd9:	mov    bh,0xc8
  41dcdb:	mov    dl,0x9
  41dcdd:	inc    eax
  41dcde:	dec    esp
  41dcdf:	mov    ebp,0x1a8b696
  41dce4:	sub    dl,BYTE PTR [edi+0x7aa0c713]
  41dcea:	inc    esp
  41dceb:	cwde   
  41dcec:	int    0xd3
  41dcee:	mov    esi,0x54194f8
  41dcf3:	push   0x68bba5c9
  41dcf8:	mov    esi,DWORD PTR [edx+0x549642ee]
  41dcfe:	sti    
  41dcff:	push   ebx
  41dd00:	lar    edi,WORD PTR [esi-0x3]
  41dd04:	jl     0x41dcd5
  41dd06:	loopne 0x41dd2a
  41dd08:	mov    eax,DWORD PTR [ecx+0x1c4c5a09]
  41dd0e:	das    
  41dd0f:	mov    edx,0x4a74e745
  41dd14:	or     eax,0x70e157ee
  41dd19:	lods   al,BYTE PTR ds:[esi]
  41dd1a:	lods   eax,DWORD PTR fs:[esi]
  41dd1c:	call   0x25aa2267
  41dd21:	outs   dx,BYTE PTR ds:[esi]
  41dd22:	mov    ecx,eax
  41dd24:	stos   DWORD PTR es:[edi],eax
  41dd25:	leave  
  41dd26:	stos   BYTE PTR es:[edi],al
  41dd27:	jmp    0x833e7c73
  41dd2c:	mov    ebx,esi
  41dd2e:	fs (bad) 
  41dd30:	jmp    ebp
  41dd32:	jmp    0xecc3:0xe91aedcf
  41dd39:	jbe    0x41dcfe
  41dd3b:	(bad)  
  41dd3d:	shl    esi,0x92
  41dd40:	jp     0x41dd07
  41dd42:	xor    dh,BYTE PTR [edx-0x80]
  41dd45:	xchg   ecx,eax
  41dd46:	push   0xffffffb8
  41dd48:	xor    ebx,DWORD PTR [esi+0x23]
  41dd4b:	out    0x9c,al
  41dd4d:	jnp    0x41dd12
  41dd4f:	ss retf 
  41dd51:	xchg   esi,eax
  41dd52:	and    DWORD PTR [esi+ebx*2+0x5a7e6d15],esp
  41dd59:	push   eax
  41dd5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd5b:	pop    eax
  41dd5c:	mov    ds:0x8b118ef5,al
  41dd61:	lea    esp,[edi-0x4d]
  41dd64:	or     al,0xd4
  41dd66:	cli    
  41dd67:	pusha  
  41dd68:	fimul  DWORD PTR [esi+0x6b2a183a]
  41dd6e:	rcr    esi,0xa0
  41dd71:	mov    al,0xca
  41dd73:	inc    esp
  41dd74:	iret   
  41dd75:	in     al,0xfd
  41dd77:	xchg   edx,eax
  41dd78:	inc    esp
  41dd79:	leave  
  41dd7a:	cmp    al,0x6f
  41dd7c:	xchg   ecx,eax
  41dd7d:	and    al,BYTE PTR [eax+0x5f297179]
  41dd83:	cwde   
  41dd84:	jmp    0x41dd5c
  41dd86:	lahf   
  41dd87:	fmul   QWORD PTR [edx+0x5d]
  41dd8a:	in     eax,dx
  41dd8b:	imul   edx,DWORD PTR [edx-0x7e],0x4dea9302
  41dd92:	inc    ebx
  41dd93:	jl     0x41dd1a
  41dd95:	or     edx,DWORD PTR [ebp+0x3b5a9ac3]
  41dd9b:	idiv   DWORD PTR [edx-0x6cea2033]
  41dda1:	int    0x1b
  41dda3:	fs scas eax,DWORD PTR es:[edi]
  41dda5:	outs   dx,DWORD PTR ds:[esi]
  41dda6:	sub    BYTE PTR [ecx],dh
  41dda8:	fcmovnu st,st(1)
  41ddaa:	(bad)  
  41ddab:	pop    esp
  41ddac:	mov    dh,0x7c
  41ddae:	and    DWORD PTR [edi-0x1a],0x44
  41ddb2:	leave  
  41ddb3:	cmp    dl,al
  41ddb5:	bound  ebp,QWORD PTR [edi+ebx*2-0x67e4f040]
  41ddbc:	lahf   
  41ddbd:	pop    edx
  41ddbe:	dec    esi
  41ddbf:	mov    dh,0x6e
  41ddc1:	inc    esp
  41ddc2:	dec    edi
  41ddc3:	js     0x41dd7e
  41ddc5:	jbe    0x41ddd3
  41ddc7:	cmp    BYTE PTR [eax+0x2c60f62c],0x78
  41ddce:	call   0x922220b0
  41ddd3:	repnz pop edi
  41ddd5:	sub    eax,0xee374942
  41ddda:	mov    dx,WORD PTR [eax-0x7a1de42a]
  41dde1:	leave  
  41dde2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dde3:	imul   ecx,DWORD PTR [eax+0x4],0x7d90b90e
  41ddea:	jno    0x41de27
  41ddec:	mov    DWORD PTR [eax+0x416af4a1],edi
  41ddf2:	xchg   DWORD PTR [eiz*4-0x80c2adc],ecx
  41ddf9:	dec    ecx
  41ddfa:	cmp    DWORD PTR [esi-0x694223ff],edx
  41de00:	and    DWORD PTR ds:[ecx+0x17],ebx
  41de04:	pop    esp
  41de05:	movnti DWORD PTR [esi+esi*1+0x8],esp
  41de0a:	mov    ah,bh
  41de0c:	jne    0x41de85
  41de0e:	add    DWORD PTR [eax+eiz*8-0x65b85f0c],esp
  41de15:	adc    dh,al
  41de17:	lds    edi,FWORD PTR [ecx]
  41de19:	xor    cl,ah
  41de1b:	pop    ds
  41de1c:	jno    0x41de14
  41de1e:	sub    ah,BYTE PTR [eax]
  41de20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de21:	stc    
  41de22:	pop    ecx
  41de23:	ret    
  41de24:	add    esi,DWORD PTR [esi]
  41de26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de27:	fbld   TBYTE PTR [eax+0x58]
  41de2a:	xchg   ecx,eax
  41de2b:	sbb    eax,esp
  41de2d:	or     DWORD PTR [ebx-0x48a55409],0xae9a5f56
  41de37:	sti    
  41de38:	fistp  WORD PTR [edi]
  41de3a:	jo     0x41de60
  41de3c:	jg     0x41de56
  41de3e:	scas   eax,DWORD PTR es:[edi]
  41de3f:	push   ecx
  41de40:	bound  ebp,QWORD PTR [ebp-0x6ad6e219]
  41de46:	mov    dh,BYTE PTR [ebx+ebp*2]
  41de49:	(bad)  
  41de4a:	cli    
  41de4b:	test   al,0x4f
  41de4d:	mov    ds:0xc0f8eaa2,eax
  41de52:	mov    ch,0x42
  41de54:	inc    eax
  41de55:	(bad)  
  41de56:	xchg   ebp,eax
  41de57:	xor    dh,bh
  41de59:	mov    esp,0xd068eb22
  41de5e:	sar    esi,0x6b
  41de61:	push   eax
  41de62:	sub    DWORD PTR ds:0xf2ebc37c,0x19635228
  41de6c:	clc    
  41de6d:	stc    
  41de6e:	dec    ecx
  41de6f:	or     eax,0x1a9e884
  41de74:	cmp    edx,esi
  41de76:	dec    esp
  41de77:	popa   
  41de78:	sbb    BYTE PTR [esi+0x5c],bh
  41de7b:	add    DWORD PTR [eax+0x75],0xd78d08c4
  41de82:	(bad)  
  41de85:	push   ebp
  41de86:	test   DWORD PTR [eax],0x5c8150a6
  41de8c:	mov    eax,gs:0xc25c7b88
  41de92:	stos   BYTE PTR es:[edi],al
  41de93:	sub    edi,eax
  41de95:	sub    DWORD PTR [ebx],edx
  41de97:	xchg   esi,eax
  41de98:	mov    ds:0x8378cd63,al
  41de9d:	arpl   WORD PTR [esi-0x47fbecb4],ax
  41dea3:	mov    bl,0x9e
  41dea5:	jmp    0x41dea1
  41dea7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dea8:	mov    dl,0xa1
  41deaa:	out    dx,eax
  41deab:	mov    dh,0x96
  41dead:	in     eax,0x7e
  41deaf:	jmp    0x41de5e
  41deb1:	xchg   edi,eax
  41deb2:	aaa    
  41deb3:	dec    ecx
  41deb4:	sbb    edx,DWORD PTR [esp+ebx*8+0x5b2dcf82]
  41debb:	data16 aas 
  41debd:	cli    
  41debe:	push   cs
  41debf:	push   es
  41dec0:	bound  ebp,QWORD PTR [ecx+0xb3d0b1e]
  41dec6:	mov    cl,0xc2
  41dec8:	jle    0x41df16
  41deca:	sub    cl,ah
  41decc:	clc    
  41decd:	xchg   ebp,eax
  41dece:	repz xor ch,BYTE PTR [esi]
  41ded1:	mov    eax,0x3eb1fa18
  41ded6:	push   esp
  41ded7:	inc    ecx
  41ded8:	cmp    DWORD PTR [esi],esp
  41deda:	sbb    eax,0x921b522a
  41dedf:	adc    al,0x71
  41dee1:	adc    BYTE PTR [ebx],0x7e
  41dee4:	jle    0x41df22
  41dee6:	xchg   eax,ebx
  41dee8:	and    BYTE PTR [edi-0x29c176c8],dl
  41deee:	ror    BYTE PTR [eax+ecx*1+0x3f22db8b],1
  41def5:	ret    
  41def6:	mov    al,0x75
  41def8:	fucom  st(7)
  41defa:	shl    DWORD PTR ds:0xf1b5ba87,cl
  41df00:	cwde   
  41df01:	retf   0xee7a
  41df04:	imul   ebx,DWORD PTR [ecx+0x79],0x31
  41df08:	int    0x2f
  41df0a:	mov    eax,0x197d16dc
  41df0f:	test   eax,0x137cbe71
  41df14:	(bad)  
  41df15:	fild   QWORD PTR [ecx+0x29]
  41df18:	aad    0x36
  41df1a:	retf   
  41df1b:	stos   BYTE PTR es:[edi],al
  41df1c:	imul   edi,DWORD PTR [ebx],0x29
  41df1f:	repnz lods al,BYTE PTR ds:[esi]
  41df21:	mov    al,ds:0x369504cc
  41df26:	or     al,BYTE PTR ds:0x83b8e21
  41df2c:	nop
  41df2d:	and    DWORD PTR [ebx+edx*1+0x4df5ced5],esp
  41df34:	fcomp  st(5)
  41df36:	cmp    al,0xf8
  41df38:	scas   eax,DWORD PTR es:[edi]
  41df39:	dec    ecx
  41df3a:	or     ecx,edx
  41df3c:	nop
  41df3d:	push   ebx
  41df3e:	sub    BYTE PTR [eax+0x57],dl
  41df41:	mov    dh,0x2f
  41df43:	nop
  41df44:	mov    DWORD PTR [ebx-0x45],edx
  41df47:	in     eax,dx
  41df48:	jne    0x41deeb
  41df4a:	sar    DWORD PTR [ebp+0x1a851681],cl
  41df50:	stos   DWORD PTR es:[edi],eax
  41df51:	pop    eax
  41df52:	jmp    0xa4577dbf
  41df57:	dec    ebx
  41df58:	outs   dx,DWORD PTR ds:[esi]
  41df59:	push   edx
  41df5a:	mov    eax,0x366e1946
  41df5f:	dec    esp
  41df60:	test   DWORD PTR [ecx-0x426e5819],eax
  41df66:	outs   dx,DWORD PTR ds:[esi]
  41df67:	(bad)  
  41df68:	std    
  41df69:	std    
  41df6a:	sub    edi,DWORD PTR cs:[edx+0x5ce8ace4]
  41df71:	fwait
  41df72:	retf   
  41df73:	ss retf 0x168d
  41df77:	sub    ebx,esp
  41df79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df7a:	inc    ebp
  41df7b:	arpl   WORD PTR [eax-0x76],bp
  41df7e:	mov    edx,0x9d56175f
  41df83:	leave  
  41df84:	jb     0x41dfe8
  41df86:	jne    0x41dfcb
  41df88:	ins    DWORD PTR es:[edi],dx
  41df89:	push   edi
  41df8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df8c:	sbb    esi,ecx
  41df8e:	lock mov al,0x86
  41df91:	mov    edi,DWORD PTR [esi+0x39fe74a4]
  41df97:	jne    0x41df4f
  41df99:	or     eax,0x2dc2bde6
  41df9e:	or     DWORD PTR [ebx],esi
  41dfa0:	mov    bh,0xe5
  41dfa2:	not    DWORD PTR [ebp-0x21]
  41dfa5:	mov    ecx,0x4620bbd5
  41dfaa:	add    bh,BYTE PTR [esp+esi*2]
  41dfad:	push   edx
  41dfae:	sub    al,0xc1
  41dfb0:	dec    esi
  41dfb1:	fidiv  WORD PTR [ebp+0x2b]
  41dfb4:	lea    esp,[ebx-0x20]
  41dfb7:	xchg   DWORD PTR [esi],ecx
  41dfb9:	fwait
  41dfba:	loop   0x41dfa8
  41dfbc:	addr16 repnz mov ebp,0x668dd8a2
  41dfc3:	std    
  41dfc4:	imul   edx,DWORD PTR [ebx+0x8aba5d5],0xffffffaa
  41dfcb:	mov    esi,0x1ffcb508
  41dfd0:	test   BYTE PTR [edi],ch
  41dfd2:	stos   DWORD PTR es:[edi],eax
  41dfd3:	arpl   di,ax
  41dfd5:	add    BYTE PTR [esi+0x38],al
  41dfd8:	or     eax,0xced59897
  41dfdd:	sub    al,0x42
  41dfdf:	xchg   ebp,eax
  41dfe0:	push   ds
  41dfe1:	push   cs
  41dfe2:	pop    ebx
  41dfe3:	int    0x15
  41dfe5:	dec    ecx
  41dfe6:	mov    al,ds:0xc93cce28
  41dfeb:	push   0x60
  41dfed:	mov    eax,ds:0x6def00eb
  41dff2:	leave  
  41dff3:	pop    esp
  41dff4:	(bad)
  41dff7:	aam    0x77
  41dff9:	js     0x41dfdc
  41dffb:	int    0xd9
  41dffd:	dec    ebp
  41dffe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfff:	push   ds
  41e000:	push   0x17
  41e002:	mov    dh,0x89
  41e004:	jae    0x41e035
  41e006:	mov    ch,0x5f
  41e008:	jmp    0x41e066
  41e00a:	out    0x4e,eax
  41e00c:	stos   DWORD PTR es:[edi],eax
  41e00d:	xchg   esp,edi
  41e00f:	aas    
  41e010:	pop    esp
  41e011:	jmp    0x41e03e
  41e013:	add    BYTE PTR [eax+ecx*8+0xcf0e6cb],0x9c
  41e01b:	xor    bh,bh
  41e01d:	push   ss
  41e01e:	mov    bh,0xe5
  41e020:	xor    dl,bl
  41e022:	push   cs
  41e023:	mov    al,0x78
  41e025:	mov    gs,WORD PTR [esi-0x16]
  41e028:	stos   BYTE PTR es:[edi],al
  41e029:	or     BYTE PTR [ebp+0x28d90270],ah
  41e02f:	add    al,0x57
  41e031:	sub    BYTE PTR [esi+ebp*2+0x44],cl
  41e035:	sti    
  41e036:	mov    dl,0x67
  41e038:	jnp    0x41dfe7
  41e03a:	push   edx
  41e03b:	or     BYTE PTR [edi-0x80],bl
  41e03e:	mov    al,0xe0
  41e040:	sub    ebp,DWORD PTR [ebx+0x37]
  41e043:	fnsave ds:0x46ce78c0
  41e049:	or     BYTE PTR [edi-0x409e5657],dh
  41e04f:	mov    dh,0xf4
  41e051:	aam    0x30
  41e053:	pusha  
  41e054:	mov    edi,cs
  41e056:	mov    ds:0xd3b665b2,al
  41e05b:	sbb    DWORD PTR [esp+ebp*1+0x2c71eb79],ebx
  41e062:	ficom  DWORD PTR [ecx]
  41e064:	out    0x4f,al
  41e066:	mov    edi,0x8ee397a5
  41e06b:	mov    edi,0x79a0ee66
  41e070:	je     0x41e0bd
  41e072:	imul   edi,ecx,0x4bb3a078
  41e078:	add    eax,0xa8af5b7e
  41e07d:	and    DWORD PTR [esi+0x2fbd242a],esp
  41e083:	jo     0x41e0ec
  41e085:	fistp  WORD PTR [esi]
  41e087:	ja     0x41e046
  41e089:	pop    esp
  41e08a:	mov    bh,0x32
  41e08c:	pop    eax
  41e08d:	or     DWORD PTR [edi+0x7c],0xb0d22853
  41e094:	xor    DWORD PTR [edi+0x54],esi
  41e097:	mov    esp,0xeec57670
  41e09c:	sbb    edx,edi
  41e09e:	xchg   edi,eax
  41e09f:	mov    eax,ss
  41e0a1:	push   ebx
  41e0a2:	and    al,0xc2
  41e0a4:	mov    DWORD PTR [eax-0x1bada88c],edi
  41e0aa:	std    
  41e0ab:	leave  
  41e0ac:	add    eax,edx
  41e0ae:	lea    eax,[ebp-0x2c9af7ad]
  41e0b4:	mov    dh,0x62
  41e0b6:	mov    dl,BYTE PTR [eax-0x74]
  41e0b9:	pop    eax
  41e0ba:	(bad)  
  41e0bb:	dec    ebp
  41e0bc:	adc    BYTE PTR [esi+eiz*1+0x3abdebc8],bl
  41e0c3:	and    DWORD PTR [ebx],esi
  41e0c5:	xchg   BYTE PTR [esp+ebx*2+0x1e6d3002],ah
  41e0cc:	lods   eax,DWORD PTR ds:[esi]
  41e0cd:	add    eax,0x5c337ad2
  41e0d2:	call   0x38de:0xa5e0c487
  41e0d9:	pop    ss
  41e0da:	shl    edi,1
  41e0dc:	int3   
  41e0dd:	push   eax
  41e0de:	or     eax,0x51c8124c
  41e0e3:	rcr    dh,cl
  41e0e5:	repz loopne 0x41e078
  41e0e8:	in     al,dx
  41e0e9:	inc    esi
  41e0ea:	inc    esi
  41e0eb:	sahf   
  41e0ec:	xor    al,BYTE PTR [edx]
  41e0ee:	sbb    eax,0x597e145c
  41e0f3:	iret   
  41e0f4:	pop    ebx
  41e0f5:	out    dx,eax
  41e0f6:	fadd   st(3),st
  41e0f8:	fmul   DWORD PTR [esi]
  41e0fa:	outs   dx,DWORD PTR ss:[esi]
  41e0fc:	mov    esp,0x75f13a87
  41e101:	sub    BYTE PTR [eax+0x444dc29d],al
  41e107:	inc    ecx
  41e108:	add    DWORD PTR [ebx],ebx
  41e10a:	das    
  41e10b:	call   0x5f84:0xce51816b
  41e112:	or     bl,ch
  41e114:	out    dx,eax
  41e115:	mov    dl,0x3c
  41e117:	jecxz  0x41e197
  41e119:	mov    esp,0x3d3d15c6
  41e11e:	(bad)  
  41e11f:	(bad)  
  41e120:	cmc    
  41e121:	sbb    DWORD PTR [ebx],ebp
  41e123:	sbb    esp,DWORD PTR [edi]
  41e125:	push   ss
  41e126:	in     eax,dx
  41e127:	add    eax,DWORD PTR [ecx]
  41e129:	cmp    BYTE PTR [esi+ebx*2-0x71],bl
  41e12d:	xchg   edi,eax
  41e12e:	sub    BYTE PTR [edi-0x131ab3b7],dl
  41e134:	xor    esp,DWORD PTR [ebp-0x6]
  41e137:	out    dx,eax
  41e138:	jne    0x41e0f8
  41e13a:	mov    ecx,0x40d61db3
  41e13f:	bound  eax,QWORD PTR [edx+esi*1+0x1f52083a]
  41e146:	jg     0x41e178
  41e148:	dec    eax
  41e149:	push   esi
  41e14a:	mov    ecx,0x1d80e152
  41e14f:	aaa    
  41e150:	sbb    BYTE PTR [edi],0x4
  41e153:	es int3 
  41e155:	or     eax,0x3e715042
  41e15a:	jp     0x41e181
  41e15c:	push   cs
  41e15d:	cmp    eax,0x7b2596a9
  41e162:	mov    esp,0xa367cc20
  41e167:	icebp  
  41e168:	xor    ecx,ebx
  41e16a:	retf   
  41e16b:	and    BYTE PTR [eax+ecx*8-0x34],dl
  41e16f:	mov    ecx,0x1a0f58d5
  41e174:	es mov bl,0x1
  41e177:	cmp    DWORD PTR [edx],ecx
  41e179:	mov    cl,0x4e
  41e17b:	jmp    0xf6c7:0xea7ba603
  41e182:	dec    ecx
  41e183:	retf   
  41e184:	jno    0x41e1de
  41e186:	test   ah,dh
  41e188:	mov    eax,ds:0x1b5de45b
  41e18d:	and    BYTE PTR [edx-0x6a9bf59b],bl
  41e193:	shl    cl,cl
  41e195:	neg    dl
  41e197:	test   eax,0xd3da731
  41e19c:	mov    bl,0x3b
  41e19e:	mov    ebp,0xa6a6cabe
  41e1a3:	ror    DWORD PTR [ecx+ecx*1-0x4edf28c8],1
  41e1aa:	aad    0xaf
  41e1ac:	idiv   BYTE PTR fs:[esp+edi*2]
  41e1b0:	xor    al,0xed
  41e1b2:	add    ah,BYTE PTR [eax-0x30adaf18]
  41e1b8:	mov    al,0x9
  41e1ba:	sbb    esi,DWORD PTR [ebp-0x71]
  41e1bd:	or     ah,BYTE PTR [edi+0x36]
  41e1c0:	push   eax
  41e1c1:	and    ecx,DWORD PTR [edi+esi*8]
  41e1c4:	outs   dx,DWORD PTR ds:[esi]
  41e1c5:	adc    BYTE PTR [edx+0x1ca6c511],bh
  41e1cb:	or     eax,0x823d01a
  41e1d0:	loope  0x41e171
  41e1d2:	mov    dl,0x70
  41e1d4:	inc    ecx
  41e1d5:	retf   
  41e1d6:	sub    ah,BYTE PTR [edi-0x65]
  41e1d9:	push   cs
  41e1da:	loop   0x41e235
  41e1dc:	imul   edx,DWORD PTR [ebp+0x5a],0x76
  41e1e0:	out    0x1a,eax
  41e1e2:	or     DWORD PTR [ecx-0x74],esi
  41e1e5:	fnstcw WORD PTR [ebp+eax*4-0xa973b91]
  41e1ec:	test   BYTE PTR [ebp-0xb623d86],ah
  41e1f2:	dec    eax
  41e1f3:	and    ebp,DWORD PTR [eax]
  41e1f5:	jp     0x41e22b
  41e1f7:	mov    ah,0x89
  41e1f9:	ror    DWORD PTR [ebp+0x54463499],1
  41e1ff:	jb     0x41e20b
  41e201:	or     edi,DWORD PTR [esi-0x8]
  41e204:	cmp    eax,0x85eb04c7
  41e209:	cmp    esi,DWORD PTR [edx-0x1ac7cfe2]
  41e20f:	cmp    eax,0x15fc3a20
  41e214:	push   edx
  41e215:	fs jo  0x41e216
  41e218:	sbb    eax,eax
  41e21a:	shl    DWORD PTR [esi],0x94
  41e21d:	pushf  
  41e21e:	std    
  41e21f:	std    
  41e220:	(bad)  
  41e221:	call   0x437e289b
  41e226:	arpl   WORD PTR [esi+0x4c],bp
  41e229:	sbb    ebp,ecx
  41e22b:	(bad)  
  41e22c:	repz push esi
  41e22e:	ret    0x44ad
  41e231:	jge    0x41e28a
  41e233:	mov    dl,0xa1
  41e235:	fcmove st,st(5)
  41e237:	adc    ecx,esi
  41e239:	fisttp WORD PTR [ecx*4+0x5cbf768f]
  41e240:	push   esp
  41e241:	ja     0x41e1d2
  41e243:	push   edi
  41e244:	jnp    0x41e2a9
  41e246:	and    DWORD PTR [ecx],ecx
  41e248:	cmp    al,0xba
  41e24a:	or     dh,BYTE PTR [edx-0x238a8287]
  41e250:	pop    edx
  41e251:	sbb    BYTE PTR [edx+edx*8+0x36],0x6
  41e256:	imul   edx,DWORD PTR [ecx+0x48c10330],0x10
  41e25d:	jae    0x41e2cc
  41e25f:	inc    esp
  41e260:	cwde   
  41e261:	jge    0x41e2c8
  41e263:	xor    DWORD PTR [ebp-0xe],ecx
  41e266:	push   edx
  41e267:	dec    ecx
  41e268:	sbb    bh,ch
  41e26a:	adc    dl,BYTE PTR [edi-0x40441863]
  41e270:	jmp    0x88345e02
  41e275:	neg    BYTE PTR [ebx-0x52]
  41e278:	sub    DWORD PTR [eax],esp
  41e27a:	ret    
  41e27b:	lahf   
  41e27c:	or     ebp,DWORD PTR ds:0xf66dc9eb
  41e282:	fdiv   QWORD PTR [edi+0x3b]
  41e285:	in     al,0x77
  41e287:	adc    eax,0xea9fedd
  41e28c:	push   ecx
  41e28d:	push   edx
  41e28e:	mul    BYTE PTR [edi+0x7c]
  41e291:	add    al,0x33
  41e293:	stos   DWORD PTR es:[edi],eax
  41e294:	push   ss
  41e295:	pusha  
  41e296:	cs out dx,eax
  41e298:	cs mov cl,0x74
  41e29b:	pop    es
  41e29c:	jnp    0x41e249
  41e29e:	adc    BYTE PTR [eax-0x3851711f],ch
  41e2a4:	test   DWORD PTR [esi],ecx
  41e2a6:	js     0x41e28a
  41e2a8:	jb     0x41e22d
  41e2aa:	or     ecx,DWORD PTR [ebx+esi*1-0x3b]
  41e2ae:	cmp    al,0x6d
  41e2b0:	mov    WORD PTR [ebp-0x23dfe3db],?
  41e2b6:	test   al,0x38
  41e2b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2b9:	in     al,dx
  41e2ba:	adc    eax,0x891243fa
  41e2bf:	es repnz push 0xaf9cb37c
  41e2c6:	mov    cl,BYTE PTR [ecx]
  41e2c8:	ins    BYTE PTR es:[edi],dx
  41e2c9:	or     eax,0x8cbe1532
  41e2ce:	or     al,0xa8
  41e2d0:	dec    edx
  41e2d1:	out    0x7a,al
  41e2d3:	lock push eax
  41e2d5:	fucomp st(6)
  41e2d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2d8:	loopne 0x41e2b7
  41e2da:	mov    edi,edx
  41e2dc:	sbb    al,0x4f
  41e2de:	mov    bh,0x3b
  41e2e0:	fmul   st(1),st
  41e2e2:	out    0x2,al
  41e2e4:	mov    eax,ds:0x66e958f2
  41e2e9:	mov    edi,0x18310a15
  41e2ee:	in     al,0x2e
  41e2f0:	push   ebx
  41e2f1:	push   es
  41e2f2:	(bad)  [esi-0x615c60be]
  41e2f8:	jbe    0x41e2db
  41e2fa:	or     BYTE PTR [edx-0x5dda5d3],al
  41e300:	pushf  
  41e301:	push   ss
  41e302:	fwait
  41e303:	mov    ecx,0xfa43d000
  41e308:	mov    dh,0x6d
  41e30a:	loopne 0x41e32f
  41e30c:	xchg   ebx,ecx
  41e30e:	(bad)  
  41e30f:	xor    edi,edx
  41e311:	(bad)  
  41e312:	xchg   ebx,eax
  41e313:	retf   0x2687
  41e316:	sbb    ch,BYTE PTR [eax+edi*1-0x4e]
  41e31a:	call   FWORD PTR ds:[eax+0x698cdb8]
  41e321:	xor    al,0xbc
  41e323:	add    BYTE PTR [ecx-0x5f],cl
  41e326:	aam    0xda
  41e328:	shl    BYTE PTR [edi],cl
  41e32a:	xlat   BYTE PTR ds:[ebx]
  41e32b:	cmp    edx,esp
  41e32d:	lods   eax,DWORD PTR ds:[esi]
  41e32e:	pop    ss
  41e32f:	push   0x7ee85b97
  41e334:	mov    al,0x19
  41e336:	push   esi
  41e337:	mov    ecx,0x4ba7e36f
  41e33c:	stc    
  41e33d:	xchg   DWORD PTR [eax+ecx*2],ebx
  41e340:	das    
  41e341:	cld    
  41e342:	mov    ds:0xf4e6f7f,eax
  41e347:	adc    al,0xcd
  41e349:	daa    
  41e34a:	cmc    
  41e34b:	sub    ecx,ecx
  41e34d:	pushf  
  41e34e:	dec    BYTE PTR [edi]
  41e350:	test   BYTE PTR [edi+ebx*2],0x9b
  41e354:	loop   0x41e342
  41e356:	pusha  
  41e357:	loop   0x41e328
  41e359:	mov    edx,DWORD PTR [ebx+ebx*1+0xbd36293]
  41e360:	repz pop edi
  41e362:	test   BYTE PTR ds:[edi-0x77],ah
  41e366:	pop    ss
  41e367:	jg     0x41e347
  41e369:	cmc    
  41e36a:	inc    eax
  41e36b:	hlt    
  41e36c:	ja     0x41e3dc
  41e36e:	pop    ss
  41e36f:	xor    al,0x82
  41e371:	mov    DWORD PTR [eax],ecx
  41e373:	xchg   esp,eax
  41e374:	xchg   edx,eax
  41e375:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e376:	inc    eax
  41e377:	fs stos BYTE PTR es:[edi],al
  41e379:	mov    ch,0x26
  41e37b:	xchg   ebp,eax
  41e37c:	popf   
  41e37d:	addr16 pop esp
  41e37f:	xchg   ecx,eax
  41e380:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e381:	sub    BYTE PTR [edx+0x525982c7],cl
  41e387:	xchg   ebx,eax
  41e388:	sbb    eax,0x35a121c
  41e38d:	retf   
  41e38e:	mov    eax,0xbe1988b4
  41e393:	jo     0x41e35a
  41e395:	mov    ds:0xf2f540ca,al
  41e39a:	jmp    0x4d71f85c
  41e39f:	pop    ebp
  41e3a0:	mov    dl,0xcf
  41e3a2:	sbb    BYTE PTR [edi],ah
  41e3a4:	push   esp
  41e3a5:	push   ecx
  41e3a6:	add    al,0x7c
  41e3a8:	xlat   BYTE PTR ds:[ebx]
  41e3a9:	jmp    0x5efad907
  41e3ae:	pushf  
  41e3af:	push   edx
  41e3b0:	adc    DWORD PTR [edi+ecx*8],0x5
  41e3b4:	jmp    0x87b21e2e
  41e3b9:	cmp    esi,DWORD PTR [ebx+0x44ead813]
  41e3bf:	inc    eax
  41e3c0:	stc    
  41e3c1:	inc    ecx
  41e3c2:	mov    ebx,0x2f89f5cf
  41e3c7:	xchg   ebp,eax
  41e3c8:	mov    DWORD PTR [edi-0x67],eax
  41e3cb:	sub    eax,DWORD PTR [ebx]
  41e3cd:	nop
  41e3ce:	xchg   esp,eax
  41e3cf:	and    al,0x9a
  41e3d1:	sbb    BYTE PTR [edi+0x106606bb],0xd7
  41e3d8:	arpl   WORD PTR [ebx-0x3d],di
  41e3db:	in     eax,dx
  41e3dc:	(bad)  
  41e3dd:	in     al,dx
  41e3de:	fsubr  st,st(4)
  41e3e0:	mov    ch,0x14
  41e3e2:	and    eax,DWORD PTR [eax+0x25bf8c93]
  41e3e8:	ror    BYTE PTR [esi+0x63cd5e97],cl
  41e3ee:	sbb    ch,0x5c
  41e3f1:	sub    ebx,DWORD PTR [ecx+0x7da278b2]
  41e3f7:	psubq  mm5,QWORD PTR [edi-0x21]
  41e3fb:	ret    
  41e3fc:	inc    eax
  41e3fd:	js     0x41e398
  41e3ff:	add    eax,0x893c8a8e
  41e404:	inc    ebp
  41e405:	loopne 0x41e3ce
  41e407:	add    eax,0x429028
  41e40c:	push   ds
  41e40d:	add    BYTE PTR [eax],al
  41e40f:	add    BYTE PTR [ebx+0x4290283d],al
  41e415:	add    BYTE PTR [eax],al
  41e417:	je     0x41e45f
  41e41d:	cmp    DWORD PTR ds:0x429028,0x2e
  41e424:	jne    0x41e43f
  41e42a:	push   0x88e3
  41e42f:	push   0x5900
  41e434:	push   0x6949
  41e439:	call   DWORD PTR ds:0x425044
  41e43f:	mov    eax,ds:0x429028
  41e444:	dec    eax
  41e445:	mov    ds:0x429028,eax
  41e44a:	jmp    0x41e410
  41e44f:	mov    eax,ds:0x424623
  41e454:	mov    ecx,DWORD PTR ds:0x423ec0
  41e45a:	sub    ecx,eax
  41e45c:	or     eax,DWORD PTR [eax+ecx*1]
  41e45f:	mov    eax,ds:0x4240fc
  41e464:	mov    eax,DWORD PTR [eax]
  41e466:	mov    DWORD PTR [ebp-0x28],eax
  41e469:	mov    DWORD PTR [ebp-0x38],0xf89c87b6
  41e470:	mov    eax,DWORD PTR [ebp-0x38]
  41e473:	mov    DWORD PTR ds:0x42b004,0x13
  41e47d:	cmp    DWORD PTR ds:0x42b004,0x0
  41e484:	je     0x41e4fb
  41e48a:	cmp    DWORD PTR ds:0x42b004,0x19
  41e491:	jne    0x41e4ad
  41e497:	push   0x8602
  41e49c:	push   DWORD PTR [ebp-0x28]
  41e49f:	push   DWORD PTR [ebp-0x18]
  41e4a2:	push   0x5ed1
  41e4a7:	call   DWORD PTR ds:0x425048
  41e4ad:	mov    ecx,DWORD PTR ds:0x42b004
  41e4b3:	dec    ecx
  41e4b4:	mov    DWORD PTR ds:0x42b004,ecx
  41e4ba:	jmp    0x41e47d
  41e4bf:	and    DWORD PTR ds:0x42d010,0x0
  41e4c9:	mov    ecx,DWORD PTR ds:0x42d010
  41e4cf:	inc    ecx
  41e4d0:	mov    DWORD PTR ds:0x42d010,ecx
  41e4d6:	cmp    DWORD PTR ds:0x42d010,0x1d
  41e4dd:	jne    0x41e4ee
  41e4e3:	push   0x7e2c
  41e4e8:	call   DWORD PTR ds:0x42504c
  41e4ee:	cmp    DWORD PTR ds:0x42d010,0x1c
  41e4f5:	jb     0x41e4c9
  41e4fb:	xor    eax,esi
  41e4fd:	and    DWORD PTR ds:0x429008,0x0
  41e507:	jmp    0x41e519
  41e50c:	mov    ecx,DWORD PTR ds:0x429008
  41e512:	inc    ecx
  41e513:	mov    DWORD PTR ds:0x429008,ecx
  41e519:	cmp    DWORD PTR ds:0x429008,0x14
  41e520:	jae    0x41e568
  41e526:	cmp    DWORD PTR ds:0x429008,0xb
  41e52d:	jne    0x41e543
  41e533:	push   0x3d49
  41e538:	push   0x424403
  41e53d:	call   DWORD PTR ds:0x425010
  41e543:	cmp    DWORD PTR ds:0x429008,0xa
  41e54a:	jne    0x41e55d
  41e550:	mov    ecx,DWORD PTR ds:0x429008
  41e556:	inc    ecx
  41e557:	mov    DWORD PTR ds:0x429008,ecx
  41e55d:	jmp    0x41e50c
  41e562:	and    ecx,0x72e7
  41e568:	add    eax,edi
  41e56a:	xor    DWORD PTR ds:0x42c010,0x649e
  41e574:	mov    DWORD PTR [ebp-0x30],eax
  41e577:	mov    ecx,DWORD PTR ds:0x429028
  41e57d:	xor    DWORD PTR ds:0x42b018,ecx
  41e583:	mov    eax,ds:0x424074
  41e588:	sbb    ecx,0x5dc9
  41e58e:	mov    DWORD PTR [ebp-0x30],eax
  41e591:	sub    eax,eax
  41e593:	mov    eax,DWORD PTR [ebp-0x20]
  41e596:	mov    DWORD PTR [ebp-0x14],eax
  41e599:	mov    eax,DWORD PTR [ebp-0x14]
  41e59c:	push   0x4
  41e59e:	not    ecx
  41e5a0:	pop    ecx
  41e5a1:	adc    DWORD PTR ds:0x42a004,0x37d1
  41e5ab:	sub    ecx,eax
  41e5ad:	add    ecx,DWORD PTR [ebp-0x28]
  41e5b0:	mov    eax,ds:0x429024
  41e5b5:	or     DWORD PTR ds:0x42a008,eax
  41e5bb:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  41e5c2:	mov    DWORD PTR ds:0x42a008,0x13
  41e5cc:	cmp    DWORD PTR ds:0x42a008,0x0
  41e5d3:	je     0x41e627
  41e5d9:	cmp    DWORD PTR ds:0x42a008,0x9
  41e5e0:	jne    0x41e5f6
  41e5e6:	push   0x665a
  41e5eb:	push   0x4c85
  41e5f0:	call   DWORD PTR ds:0x425018
  41e5f6:	cmp    DWORD PTR ds:0x42a008,0xa
  41e5fd:	jne    0x41e60e
  41e603:	mov    eax,ds:0x42a008
  41e608:	dec    eax
  41e609:	mov    ds:0x42a008,eax
  41e60e:	xor    eax,eax
  41e610:	xor    eax,DWORD PTR ds:0x42a008
  41e616:	dec    eax
  41e617:	mov    ds:0x42a008,eax
  41e61c:	jmp    0x41e5cc
  41e621:	and    DWORD PTR ds:0x42c018,edi
  41e627:	mov    DWORD PTR [ebp-0x24],ecx
  41e62a:	and    DWORD PTR ds:0x42b000,0x4083
  41e634:	mov    DWORD PTR [ebp-0x98],0xf89c85ba
  41e63e:	mov    eax,DWORD PTR [ebp-0x14]
  41e641:	sub    DWORD PTR ds:0x429028,0x42c00c
  41e64b:	mov    DWORD PTR [ebp-0x94],eax
  41e651:	mov    DWORD PTR ds:0x429018,0x60a2
  41e65b:	mov    eax,DWORD PTR [ebp-0x24]
  41e65e:	mov    DWORD PTR [ebp-0x90],eax
  41e664:	sub    eax,0x1a7d
  41e669:	mov    eax,DWORD PTR [ebp-0x2c]
  41e66c:	add    DWORD PTR ds:0x429014,0x42b010
  41e676:	xor    eax,esi
  41e678:	add    eax,edi
  41e67a:	or     DWORD PTR ds:0x42a01c,0xdce
  41e684:	mov    DWORD PTR [ebp-0x8c],eax
  41e68a:	xor    DWORD PTR ds:0x42d004,0x42a000
  41e694:	lea    eax,[ebp-0x50]
  41e697:	sub    DWORD PTR ds:0x429020,0x429004
  41e6a1:	mov    DWORD PTR [ebp-0x88],eax
  41e6a7:	sub    DWORD PTR ds:0x429028,0x1657
  41e6b1:	mov    eax,DWORD PTR [ebp-0x98]
  41e6b7:	xor    eax,esi
  41e6b9:	sub    DWORD PTR ds:0x42c01c,0x42d010
  41e6c3:	add    eax,edi
  41e6c5:	mov    DWORD PTR [ebp-0x98],eax
  41e6cb:	and    DWORD PTR ds:0x42d004,0x42b004
  41e6d5:	lea    eax,[ebp-0x98]
  41e6db:	sbb    DWORD PTR ds:0x42d008,0x429018
  41e6e5:	push   eax
  41e6e6:	and    DWORD PTR ds:0x42c004,edi
  41e6ec:	mov    eax,DWORD PTR [ebp+0xc]
  41e6ef:	sub    DWORD PTR ds:0x42b014,0x42a01c
  41e6f9:	xor    eax,esi
  41e6fb:	add    eax,edi
  41e6fd:	sbb    DWORD PTR ds:0x429024,0x42c01c
  41e707:	push   eax
  41e708:	and    eax,DWORD PTR ds:0x42c018
  41e70e:	mov    eax,ds:0x424094
  41e713:	adc    DWORD PTR ds:0x429004,0x7be0
  41e71d:	push   0x423fea
  41e722:	and    DWORD PTR ds:0x429000,0x42b018
  41e72c:	push   DWORD PTR [eax]
  41e72e:	xor    DWORD PTR ds:0x42c014,0x72b4
  41e738:	call   0x40867e
  41e73d:	inc    eax
  41e73e:	mov    eax,DWORD PTR [ebp-0x14]
  41e741:	add    ecx,DWORD PTR ds:0x42b00c
  41e747:	mov    ecx,DWORD PTR [ebp-0x24]
  41e74a:	mov    DWORD PTR [ebp-0x4c],ecx
  41e74d:	mov    ecx,DWORD PTR [ebp+0x8]
  41e750:	xor    DWORD PTR ds:0x429020,0x42a008
  41e75a:	xor    ecx,esi
  41e75c:	mov    DWORD PTR [ebp-0x38],eax
  41e75f:	xor    DWORD PTR ds:0x42c014,0x42a014
  41e769:	add    ecx,edi
  41e76b:	jmp    0x423bf4
  41e770:	adc    ebx,DWORD PTR ds:0x429018
  41e776:	lea    edx,[ecx+eax*1]
  41e779:	mov    DWORD PTR ds:0x42d000,0x1d
  41e783:	cmp    DWORD PTR ds:0x42d000,0x0
  41e78a:	je     0x41e7ca
  41e790:	cmp    DWORD PTR ds:0x42d000,0x24
  41e797:	jne    0x41e7b0
  41e79d:	push   0x42a008
  41e7a2:	push   DWORD PTR [ebp-0x14]
  41e7a5:	push   0x42441f
  41e7aa:	call   DWORD PTR ds:0x42501c
  41e7b0:	xor    ebx,ebx
  41e7b2:	add    ebx,DWORD PTR ds:0x42d000
  41e7b8:	dec    ebx
  41e7b9:	mov    DWORD PTR ds:0x42d000,ebx
  41e7bf:	jmp    0x41e783
  41e7c4:	and    DWORD PTR ds:0x42c010,ecx
  41e7ca:	mov    DWORD PTR [ebp-0x28],edx
  41e7cd:	sub    edx,ebx
  41e7cf:	mov    edx,DWORD PTR [ebp-0x4c]
  41e7d2:	and    DWORD PTR ds:0x42d00c,0x0
  41e7dc:	jmp    0x41e7ee
  41e7e1:	mov    ebx,DWORD PTR ds:0x42d00c
  41e7e7:	inc    ebx
  41e7e8:	mov    DWORD PTR ds:0x42d00c,ebx
  41e7ee:	cmp    DWORD PTR ds:0x42d00c,0x19
  41e7f5:	jae    0x41e843
  41e7fb:	cmp    DWORD PTR ds:0x42d00c,0xe
  41e802:	jne    0x41e818
  41e808:	push   0x42901c
  41e80d:	push   0x4df2
  41e812:	call   DWORD PTR ds:0x425020
  41e818:	cmp    DWORD PTR ds:0x42d00c,0xd
  41e81f:	jne    0x41e834
  41e825:	xor    ebx,ebx
  41e827:	xor    ebx,DWORD PTR ds:0x42d00c
  41e82d:	inc    ebx
  41e82e:	mov    DWORD PTR ds:0x42d00c,ebx
  41e834:	jmp    0x41e7e1
  41e839:	sbb    DWORD PTR ds:0x42d00c,0x42a014
  41e843:	sub    edx,ecx
  41e845:	sbb    DWORD PTR ds:0x429014,ebx
  41e84b:	mov    DWORD PTR [ebp-0x20],edx
  41e84e:	and    DWORD PTR ds:0x42d01c,0x0
  41e858:	mov    edx,DWORD PTR ds:0x42d01c
  41e85e:	inc    edx
  41e85f:	mov    DWORD PTR ds:0x42d01c,edx
  41e865:	cmp    DWORD PTR ds:0x42d01c,0x8
  41e86c:	jne    0x41e87b
  41e872:	push   DWORD PTR [ebp-0x10]
  41e875:	call   DWORD PTR ds:0x425028
  41e87b:	cmp    DWORD PTR ds:0x42d01c,0x7
  41e882:	jne    0x41e897
  41e888:	xor    edx,edx
  41e88a:	or     edx,DWORD PTR ds:0x42d01c
  41e890:	inc    edx
  41e891:	mov    DWORD PTR ds:0x42d01c,edx
  41e897:	cmp    DWORD PTR ds:0x42d01c,0x11
  41e89e:	jb     0x41e858
  41e8a4:	mov    edx,DWORD PTR [ebp-0x20]
  41e8a7:	mov    DWORD PTR [ebp-0x14],edx
  41e8aa:	mov    edx,DWORD PTR [ebp-0x28]
  41e8ad:	mov    DWORD PTR [ebp-0x34],0xf89c85b6
  41e8b4:	mov    DWORD PTR [ebp-0x44],edx
  41e8b7:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  41e8be:	mov    edx,DWORD PTR [ebp-0x34]
  41e8c1:	xor    edx,esi
  41e8c3:	add    edx,edi
  41e8c5:	mov    DWORD PTR [ebp-0x10],edx
  41e8c8:	mov    edx,DWORD PTR [ebp-0x34]
  41e8cb:	xor    edx,esi
  41e8cd:	add    edx,edi
  41e8cf:	mov    DWORD PTR [ebp-0x8],edx
  41e8d2:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41e8d9:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  41e8e0:	mov    edx,DWORD PTR [ebp-0x34]
  41e8e3:	mov    ebx,DWORD PTR [ebp-0x14]
  41e8e6:	xor    edx,esi
  41e8e8:	add    edx,edi
  41e8ea:	cmp    ebx,edx
  41e8ec:	je     0x423be8
  41e8f2:	mov    eax,DWORD PTR [ebp-0x18]
  41e8f5:	xor    eax,esi
  41e8f7:	mov    edx,0xffcd8d25
  41e8fc:	sub    edx,eax
  41e8fe:	add    edx,DWORD PTR [ebp-0x14]
  41e901:	mov    eax,DWORD PTR [ebp-0x18]
  41e904:	mov    ebx,DWORD PTR [ebp-0x10]
  41e907:	xor    eax,esi
  41e909:	add    eax,edi
  41e90b:	imul   eax,ebx
  41e90e:	cmp    eax,edx
  41e910:	ja     0x423be5
  41e916:	mov    edx,DWORD PTR [ebp-0x10]
  41e919:	mov    eax,DWORD PTR [ebp-0x14]
  41e91c:	mov    ebx,DWORD PTR [ebp-0x28]
  41e91f:	sub    eax,edx
  41e921:	xor    ebx,esi
  41e923:	xor    edx,edx
  41e925:	add    ebx,edi
  41e927:	div    ebx
  41e929:	mov    DWORD PTR [ebp-0x8],eax
  41e92c:	mov    eax,DWORD PTR [ebp-0x2c]
  41e92f:	mov    edx,DWORD PTR [ebp-0x8]
  41e932:	xor    eax,esi
  41e934:	add    eax,edi
  41e936:	cmp    edx,eax
  41e938:	jbe    0x41e948
  41e93e:	mov    eax,DWORD PTR [ebp-0x2c]
  41e941:	xor    eax,esi
  41e943:	add    eax,edi
  41e945:	mov    DWORD PTR [ebp-0x8],eax
  41e948:	mov    eax,DWORD PTR [ebp-0x28]
  41e94b:	mov    edx,DWORD PTR [ebp-0x8]
  41e94e:	xor    eax,esi
  41e950:	add    eax,edi
  41e952:	imul   eax,edx
  41e955:	mov    DWORD PTR [ebp-0x8],eax
  41e958:	mov    eax,DWORD PTR [ebp-0x34]
  41e95b:	mov    edx,DWORD PTR [ebp-0x8]
  41e95e:	xor    eax,esi
  41e960:	add    eax,edi
  41e962:	cmp    edx,eax
  41e964:	je     0x423bce
  41e96a:	mov    eax,DWORD PTR [ebp-0x8]
  41e96d:	mov    DWORD PTR [ebp-0x24],eax
  41e970:	mov    eax,DWORD PTR [ebp-0x10]
  41e973:	add    eax,DWORD PTR [ebp-0x44]
  41e976:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  41e97d:	mov    DWORD PTR [ebp-0x8],eax
  41e980:	mov    eax,0xf89c85b5
  41e985:	mov    DWORD PTR [ebp-0x3c],eax
  41e988:	mov    DWORD PTR [ebp-0x40],0xf89c85b4
  41e98f:	mov    DWORD PTR [ebp-0x30],0xf89c85bb
  41e996:	mov    DWORD PTR [ebp-0x1c],eax
  41e999:	mov    eax,DWORD PTR [ebp-0x20]
  41e99c:	xor    eax,esi
  41e99e:	add    eax,edi
  41e9a0:	jmp    0x423b8a
  41e9a5:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41e9ac:	mov    eax,DWORD PTR [ebp-0x1c]
  41e9af:	mov    edx,DWORD PTR [ebp-0xc]
  41e9b2:	xor    eax,esi
  41e9b4:	add    eax,edi
  41e9b6:	imul   eax,edx
  41e9b9:	mov    edx,DWORD PTR [ebp-0x8]
  41e9bc:	mov    al,BYTE PTR [eax+edx*1]
  41e9bf:	mov    BYTE PTR [ebp-0x1],al
  41e9c2:	mov    eax,DWORD PTR [ebp-0x1c]
  41e9c5:	mov    edx,DWORD PTR [ebp-0xc]
  41e9c8:	xor    eax,esi
  41e9ca:	add    eax,edi
  41e9cc:	imul   eax,edx
  41e9cf:	mov    edx,DWORD PTR [ebp-0x40]
  41e9d2:	xor    edx,esi
  41e9d4:	add    eax,edx
  41e9d6:	mov    edx,DWORD PTR [ebp-0x8]
  41e9d9:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  41e9e1:	jmp    0x420d2f
  41e9e6:	iret   
  41e9e7:	and    edi,DWORD PTR [esi+0x59]
  41e9ea:	(bad)  
  41e9eb:	daa    
  41e9ec:	mov    ds:0x1c7877a3,eax
  41e9f1:	jle    0x41e97a
  41e9f3:	js     0x41ea72
  41e9f5:	mov    dl,0x13
  41e9f7:	fisub  DWORD PTR [ecx+0x62]
  41e9fa:	push   ecx
  41e9fb:	pop    edi
  41e9fc:	bound  esp,QWORD PTR [edx+0x60]
  41e9ff:	stc    
  41ea00:	aad    0x58
  41ea02:	rcl    BYTE PTR [esi],0x7c
  41ea05:	dec    esi
  41ea06:	sbb    DWORD PTR [esi-0x3afdf5c3],ecx
  41ea0c:	mov    edx,0xc507caa1
  41ea11:	jns    0x41ea8e
  41ea13:	js     0x41ea49
  41ea15:	out    dx,al
  41ea16:	ja     0x41ea00
  41ea18:	pop    eax
  41ea19:	fsubr  QWORD PTR [ecx+0xc]
  41ea1c:	fsub   DWORD PTR [edx+0x4ac16d44]
  41ea22:	std    
  41ea23:	jne    0x41e9ee
  41ea25:	dec    esp
  41ea26:	ins    BYTE PTR es:[edi],dx
  41ea27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea28:	sbb    BYTE PTR [esi+0x6beed6ec],bl
  41ea2e:	(bad)  
  41ea30:	or     ch,bh
  41ea32:	mov    ecx,0x99791592
  41ea37:	jb     0x41ea51
  41ea39:	or     edi,DWORD PTR [esi-0x3e]
  41ea3c:	or     al,0xe6
  41ea3e:	push   edi
  41ea3f:	mov    dl,0xda
  41ea41:	cmp    DWORD PTR [esi],ebp
  41ea43:	scas   al,BYTE PTR es:[edi]
  41ea44:	push   edx
  41ea45:	repnz gs add eax,0xa5a8d0ad
  41ea4c:	pushf  
  41ea4d:	push   0xafacc260
  41ea52:	mov    eax,0xffae36e3
  41ea57:	leave  
  41ea58:	aas    
  41ea59:	scas   eax,DWORD PTR es:[edi]
  41ea5a:	xor    DWORD PTR [edi-0x6b],eax
  41ea5d:	mov    ecx,0xfc1f52a6
  41ea62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea63:	repz cmp BYTE PTR [esi],0xb1
  41ea67:	pop    es
  41ea68:	popf   
  41ea69:	(bad)  
  41ea6a:	jno    0x41eab7
  41ea6c:	adc    ecx,DWORD PTR es:[ebp+ebp*2+0x4c]
  41ea71:	out    dx,al
  41ea72:	sbb    DWORD PTR [ebx],0xffffffca
  41ea75:	cwde   
  41ea76:	cld    
  41ea77:	push   es
  41ea78:	lahf   
  41ea79:	ror    BYTE PTR [esi+edx*8+0x37],cl
  41ea7d:	dec    ebp
  41ea7e:	mov    ds:0x84d16f2e,al
  41ea83:	and    bh,BYTE PTR [eax]
  41ea85:	es stos BYTE PTR es:[edi],al
  41ea87:	or     bh,bl
  41ea89:	adc    dl,bh
  41ea8b:	ins    BYTE PTR es:[edi],dx
  41ea8c:	jne    0x41ea92
  41ea8e:	xor    al,0x7d
  41ea90:	inc    ebp
  41ea91:	push   ecx
  41ea92:	ret    0x9af4
  41ea95:	cmp    esi,edi
  41ea97:	fistp  QWORD PTR [edi-0xc]
  41ea9a:	jmp    0x2ba1:0x87628e6d
  41eaa1:	rcl    DWORD PTR [ecx+eiz*4-0x53],cl
  41eaa5:	jle    0x41ea3e
  41eaa7:	add    BYTE PTR [eax+0x2a3180b7],al
  41eaad:	jno    0x41eae5
  41eaaf:	pushf  
  41eab0:	sbb    DWORD PTR [ecx+ebp*4+0x6],esp
  41eab4:	jo     0x41ea76
  41eab6:	mov    dl,0x94
  41eab8:	mov    ecx,0x2269c3ee
  41eabd:	in     al,dx
  41eabe:	jp     0x41ea9c
  41eac0:	(bad)  
  41eac1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eac2:	int    0xbb
  41eac4:	push   eax
  41eac5:	add    BYTE PTR [eax+0x21],bl
  41eac8:	mov    eax,0x99c2f0e1
  41eacd:	jns    0x41eaca
  41eacf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ead0:	ror    ecx,1
  41ead2:	mov    DWORD PTR [esi],esi
  41ead4:	push   ebp
  41ead5:	jl     0x41eabd
  41ead7:	sub    dh,dl
  41ead9:	push   edi
  41eada:	cdq    
  41eadb:	fisubr DWORD PTR [ebx+0x3f]
  41eade:	inc    esp
  41eadf:	jmp    0x8868:0x3e112e77
  41eae6:	(bad)  
  41eae7:	cmp    al,0x9d
  41eae9:	cwde   
  41eaea:	std    
  41eaeb:	ja     0x41eb03
  41eaed:	push   esp
  41eaee:	pop    ecx
  41eaef:	test   BYTE PTR [ebp-0x2a85f0b1],dh
  41eaf5:	and    BYTE PTR [eax],al
  41eaf7:	scas   al,BYTE PTR es:[edi]
  41eaf8:	into   
  41eaf9:	mov    al,es:0xffd43c7
  41eaff:	cs (bad) 
  41eb01:	popa   
  41eb02:	mov    dh,0x2
  41eb04:	pusha  
  41eb05:	cli    
  41eb06:	dec    ecx
  41eb07:	fisttp QWORD PTR [edx+0x7d]
  41eb0a:	dec    ecx
  41eb0c:	inc    edx
  41eb0d:	and    bl,ah
  41eb0f:	dec    eax
  41eb10:	mov    bl,0x72
  41eb12:	jl     0x41eb2b
  41eb14:	mov    ah,0xec
  41eb16:	and    DWORD PTR [edi],edx
  41eb18:	push   edi
  41eb19:	outs   dx,DWORD PTR es:[esi]
  41eb1b:	ret    0xa2dc
  41eb1e:	pushf  
  41eb1f:	push   esp
  41eb20:	test   eax,0x34822ae7
  41eb25:	inc    edi
  41eb26:	add    DWORD PTR [edi],ecx
  41eb28:	cli    
  41eb29:	fcom   QWORD PTR [ecx]
  41eb2b:	ins    DWORD PTR es:[edi],dx
  41eb2c:	dec    esi
  41eb2d:	(bad)  
  41eb2e:	test   DWORD PTR [ecx+0x1d],0xe1b7ec06
  41eb35:	pop    edx
  41eb36:	(bad)  
  41eb37:	in     al,0xfd
  41eb39:	or     BYTE PTR [esi-0x62],0xa9
  41eb3d:	or     ecx,DWORD PTR [ebp-0x3ecd46bd]
  41eb43:	inc    ebx
  41eb44:	push   ebx
  41eb45:	push   edx
  41eb46:	mov    eax,0x3776ae33
  41eb4b:	jo     0x41eb7a
  41eb4d:	mov    bl,0x3a
  41eb4f:	test   al,0x7c
  41eb51:	daa    
  41eb52:	jl     0x41eb2a
  41eb54:	push   esi
  41eb55:	mov    edx,DWORD PTR [edi+0x1b]
  41eb58:	pop    ebx
  41eb59:	mov    esi,0x506a2bcf
  41eb5e:	fldl2t 
  41eb60:	push   0x7dbfac0e
  41eb65:	jbe    0x41eb2e
  41eb67:	add    DWORD PTR [ecx-0x57d83d75],0x41
  41eb6e:	or     DWORD PTR [ecx+0xd],edi
  41eb71:	lods   al,BYTE PTR ds:[esi]
  41eb72:	xlat   BYTE PTR ds:[ebx]
  41eb73:	ja     0x41ebcd
  41eb75:	ucomiss xmm0,DWORD PTR [edx+ebx*8]
  41eb79:	sti    
  41eb7a:	ds loop 0x41ebcb
  41eb7d:	xor    eax,0xb5f99b0f
  41eb82:	mov    ah,BYTE PTR [eax-0x69]
  41eb85:	mov    bh,0xc4
  41eb87:	(bad)  
  41eb88:	loopne 0x41ebc8
  41eb8a:	dec    ebp
  41eb8b:	lea    edi,[esi+0x7a]
  41eb8e:	call   0x28e0:0x72ef12c
  41eb95:	call   0xbfcec075
  41eb9a:	lock out dx,al
  41eb9c:	xchg   ebx,eax
  41eb9d:	data16 jle 0x41ebdb
  41eba0:	xor    eax,0xe13e0a90
  41eba5:	jne    0x41eb75
  41eba7:	mov    ds:0x111f3c59,eax
  41ebac:	mov    edx,0x4e0cced8
  41ebb1:	dec    eax
  41ebb2:	fcom   QWORD PTR [esp+edx*4+0x3e5a29b]
  41ebb9:	pop    ebx
  41ebba:	fnclex 
  41ebbc:	sub    DWORD PTR [ebp-0xc],ebx
  41ebbf:	fisub  DWORD PTR [esi+edx*4]
  41ebc2:	enter  0x76b,0x5b
  41ebc6:	inc    eax
  41ebc7:	inc    ebx
  41ebc8:	in     al,0x97
  41ebca:	pop    eax
  41ebcb:	mov    al,0x39
  41ebcd:	xchg   ebx,eax
  41ebce:	jp     0x41ebfa
  41ebd0:	fwait
  41ebd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebd2:	mov    ecx,DWORD PTR [ebx-0x3d]
  41ebd5:	js     0x41ec0a
  41ebd7:	ror    DWORD PTR ds:0x4a615f6d,1
  41ebdd:	gs gs mov esp,ebx
  41ebe1:	mov    esi,0x88ba55b0
  41ebe6:	inc    ebx
  41ebe7:	ret    
  41ebe8:	pop    ecx
  41ebe9:	ds dec eax
  41ebeb:	mov    al,ds:0xa45004d7
  41ebf0:	dec    edi
  41ebf1:	cmp    al,0x22
  41ebf3:	dec    eax
  41ebf4:	shl    DWORD PTR [edi+edi*4],cl
  41ebf7:	xchg   esi,eax
  41ebf8:	add    esp,0x9c66fecc
  41ebfe:	jo     0x41ebb9
  41ec00:	retf   
  41ec01:	les    esp,FWORD PTR [ecx+0x3]
  41ec04:	pusha  
  41ec05:	addr16 mov esi,0x19bbb549
  41ec0b:	pop    esp
  41ec0c:	pop    esp
  41ec0d:	inc    esi
  41ec0e:	add    BYTE PTR [ebp+0x5d],bh
  41ec11:	arpl   WORD PTR [esi],si
  41ec13:	fst    QWORD PTR [esi+edi*2+0x58cbe49e]
  41ec1a:	jb     0x41ebec
  41ec1c:	mov    eax,0x66022ccc
  41ec21:	sbb    DWORD PTR [ecx+0x6128d1db],ebx
  41ec27:	(bad)  
  41ec28:	xlat   BYTE PTR ds:[ebx]
  41ec29:	daa    
  41ec2a:	fwait
  41ec2b:	mov    eax,ds:0xf61e9d3
  41ec30:	test   BYTE PTR [esp+edi*4],bh
  41ec33:	pop    ds
  41ec34:	stos   BYTE PTR es:[edi],al
  41ec35:	lahf   
  41ec36:	inc    ebx
  41ec37:	mov    esp,0x66b9e219
  41ec3c:	xchg   esp,eax
  41ec3d:	mov    eax,ds:0x6c579665
  41ec42:	cmp    ebx,DWORD PTR [edx+0x11ca192]
  41ec48:	lahf   
  41ec49:	and    eax,0xf62f517
  41ec4e:	fisub  DWORD PTR [ebp+eax*4-0x344da7c0]
  41ec55:	adc    esp,edi
  41ec57:	xchg   edi,eax
  41ec58:	repnz mov eax,ds:0x5270e9ea
  41ec5e:	inc    esi
  41ec5f:	pusha  
  41ec60:	lods   al,BYTE PTR ds:[esi]
  41ec61:	push   eax
  41ec62:	test   dh,bh
  41ec64:	jmp    0x1d1b:0xd10da3bb
  41ec6b:	bound  edi,QWORD PTR [edx-0x138f05c5]
  41ec71:	inc    esp
  41ec72:	fcom   QWORD PTR [ecx+0x45]
  41ec75:	push   cs
  41ec76:	shl    ebx,1
  41ec78:	mov    cl,0xcf
  41ec7a:	fistp  WORD PTR [edx+ecx*1-0x51f3ad6c]
  41ec81:	jl     0x41ec2a
  41ec83:	or     al,BYTE PTR [eax+0x4edca78e]
  41ec89:	mov    ds:0x16ae20f3,eax
  41ec8e:	imul   edx,DWORD PTR [edi+ebx*4],0x5d
  41ec92:	rcr    ebp,cl
  41ec94:	(bad)  
  41ec95:	push   eax
  41ec96:	inc    eax
  41ec97:	ffreep st(3)
  41ec99:	test   al,ah
  41ec9b:	mov    esp,0x2c263732
  41eca0:	mov    ebx,0xe8e7401a
  41eca5:	ds loop 0x41ecd9
  41eca8:	or     DWORD PTR [ecx-0x58],edx
  41ecab:	das    
  41ecac:	fimul  DWORD PTR [eax-0x2bc3f57f]
  41ecb2:	cmc    
  41ecb3:	add    BYTE PTR [ecx-0x78],dl
  41ecb6:	cmp    ah,bh
  41ecb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecb9:	shr    DWORD PTR [ecx-0x2e9403c2],0xec
  41ecc0:	addr16 and al,0x91
  41ecc3:	xor    BYTE PTR [ebp+0x69],bh
  41ecc6:	adc    ah,dl
  41ecc8:	mov    cl,0x41
  41ecca:	adc    eax,DWORD PTR [ecx-0x6abd8da0]
  41ecd0:	rol    DWORD PTR [ecx],1
  41ecd2:	sbb    ah,BYTE PTR [ebp-0x4e778078]
  41ecd8:	xor    BYTE PTR [ecx],al
  41ecda:	jge    0x41ed2c
  41ecdc:	test   eax,0xefcb5264
  41ece1:	mov    fs,WORD PTR [esi-0x70]
  41ece4:	mov    ?,WORD PTR cs:[edx+0x63]
  41ece8:	lea    eax,[eax+0x73]
  41eceb:	arpl   WORD PTR [ebx+0x50cf0dd2],di
  41ecf1:	mov    WORD PTR [eax+0x5b],ss
  41ecf4:	int    0xe0
  41ecf6:	(bad)  
  41ecf8:	inc    ecx
  41ecf9:	or     edi,0xf1454ef5
  41ecff:	jne    0x41ed3c
  41ed01:	retf   0xef8a
  41ed04:	jno    0x41ecf8
  41ed06:	mov    ds:0xd205bb3c,al
  41ed0b:	(bad)  
  41ed0c:	sbb    DWORD PTR ds:0x56e99484,ebx
  41ed12:	inc    ebp
  41ed13:	adc    eax,0xcc313ae6
  41ed18:	dec    esp
  41ed19:	hlt    
  41ed1a:	retf   
  41ed1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed1c:	add    BYTE PTR [ecx-0x1f],0x73
  41ed20:	mov    di,0x3c6f
  41ed24:	cmp    DWORD PTR [ecx],ecx
  41ed26:	push   esp
  41ed27:	pop    eax
  41ed28:	add    DWORD PTR [edi+0x26],ebx
  41ed2b:	xchg   ebp,eax
  41ed2c:	imul   ebx,ebp,0xffffffaa
  41ed2f:	fst    DWORD PTR [ebp*2-0x30bc3d54]
  41ed36:	stc    
  41ed37:	lods   al,BYTE PTR ds:[esi]
  41ed38:	arpl   WORD PTR es:[ebx],cx
  41ed3b:	aad    0x7f
  41ed3d:	rol    cl,0x6a
  41ed40:	repz fsub QWORD PTR [ecx]
  41ed43:	sbb    DWORD PTR [eax],ecx
  41ed45:	imul   eax,DWORD PTR [edx],0xb8a3cecf
  41ed4b:	in     eax,0x9f
  41ed4d:	fistp  DWORD PTR [ebx+0x45]
  41ed50:	pop    edi
  41ed51:	jecxz  0x41ed66
  41ed53:	push   edi
  41ed54:	ja     0x41ed85
  41ed56:	(bad)  
  41ed57:	pop    fs
  41ed59:	jbe    0x41edbd
  41ed5b:	fsubr  st,st(1)
  41ed5d:	xor    ah,BYTE PTR [eax]
  41ed5f:	cld    
  41ed60:	or     bl,BYTE PTR [ebp-0x5b3e2420]
  41ed66:	std    
  41ed67:	out    0x9,eax
  41ed69:	pop    ds
  41ed6a:	jno    0x41ed1d
  41ed6c:	(bad)  
  41ed6d:	and    al,0xc9
  41ed6f:	push   cs
  41ed70:	fcom   st(7)
  41ed72:	cmp    BYTE PTR [si+0x6207],dh
  41ed77:	and    al,0x18
  41ed79:	leave  
  41ed7a:	lds    esp,FWORD PTR [eax+0x53be5df3]
  41ed80:	dec    ebx
  41ed81:	mov    esi,0x193bca65
  41ed86:	jle    0x41edad
  41ed88:	inc    edx
  41ed89:	push   ss
  41ed8a:	ficom  WORD PTR [edx-0x31dfa0a4]
  41ed90:	push   0x63848d0a
  41ed95:	sti    
  41ed96:	mov    eax,ebx
  41ed98:	jmp    0x5154188a
  41ed9d:	cmp    eax,0xff009cea
  41eda2:	lahf   
  41eda3:	daa    
  41eda4:	ret    
  41eda5:	pop    edi
  41eda6:	adc    edi,DWORD PTR [ecx+0x51]
  41eda9:	pop    esi
  41edaa:	test   BYTE PTR [edi+0x35],ah
  41edad:	mov    ?,WORD PTR [esi+0x6d95490c]
  41edb3:	cdq    
  41edb4:	clc    
  41edb5:	scas   eax,DWORD PTR es:[edi]
  41edb6:	jmp    0x39eb:0xfdcb2ca4
  41edbd:	sbb    al,0xe8
  41edbf:	push   0x4ddb9e39
  41edc4:	push   ecx
  41edc5:	int    0x36
  41edc7:	xor    dl,BYTE PTR [edi]
  41edc9:	into   
  41edca:	jb     0x41ed88
  41edcc:	nop
  41edcd:	push   ecx
  41edce:	jb     0x41ee07
  41edd0:	jb     0x41ee19
  41edd2:	aaa    
  41edd3:	pop    esp
  41edd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edd5:	loopne 0x41edaf
  41edd7:	jg     0x41ed6d
  41edd9:	outs   dx,BYTE PTR ds:[esi]
  41edda:	daa    
  41eddb:	mov    fs,WORD PTR [esi]
  41eddd:	push   esp
  41edde:	std    
  41eddf:	pop    esp
  41ede0:	add    al,0xb4
  41ede2:	not    BYTE PTR [ebx-0x35d33843]
  41ede8:	addr16 sbb al,0x84
  41edeb:	cmp    bl,BYTE PTR [ecx-0x4b]
  41edee:	jns    0x41ed83
  41edf0:	mov    bl,0x2d
  41edf2:	fs jle 0x41ee6c
  41edf5:	sbb    BYTE PTR [ebp+esi*2-0x5f62015],0x77
  41edfd:	lahf   
  41edfe:	(bad)  
  41ee00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee01:	xchg   esp,eax
  41ee02:	mov    ebx,0x4a86d315
  41ee07:	push   0x8
  41ee09:	ds adc ecx,eax
  41ee0c:	js     0x41ee46
  41ee0e:	loope  0x41ee60
  41ee10:	sub    dh,ah
  41ee12:	pop    ds
  41ee13:	mov    BYTE PTR [esi],bl
  41ee15:	or     dh,al
  41ee17:	ds pop esi
  41ee19:	push   eax
  41ee1a:	in     eax,dx
  41ee1b:	cmp    bh,BYTE PTR [ecx-0x3e]
  41ee1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee1f:	jb     0x41ee7a
  41ee21:	aas    
  41ee22:	mov    ds:0xf2844958,al
  41ee27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee28:	enter  0x6f08,0xc8
  41ee2c:	jnp    0x41ee24
  41ee2e:	mov    ds,WORD PTR ds:0x2c445428
  41ee34:	push   es
  41ee35:	ret    0x5b1e
  41ee38:	in     al,dx
  41ee39:	lods   eax,DWORD PTR ds:[esi]
  41ee3a:	ins    BYTE PTR es:[edi],dx
  41ee3b:	mov    ch,0x2a
  41ee3d:	aam    0x16
  41ee3f:	dec    edx
  41ee40:	push   ecx
  41ee41:	inc    edi
  41ee42:	mov    edi,0x19952ec
  41ee47:	cdq    
  41ee48:	les    edi,FWORD PTR [ebx-0x31]
  41ee4b:	xor    al,0xe8
  41ee4d:	out    dx,al
  41ee4e:	add    ecx,ecx
  41ee50:	cmc    
  41ee51:	(bad)
  41ee55:	push   ebp
  41ee56:	dec    edx
  41ee57:	outs   dx,DWORD PTR ss:[esi]
  41ee59:	(bad)  
  41ee5b:	pop    ss
  41ee5c:	mov    edi,0x960e72aa
  41ee61:	into   
  41ee62:	mov    eax,ds:0xc22c1934
  41ee67:	repz push edx
  41ee69:	aas    
  41ee6a:	mov    dh,0x69
  41ee6c:	xchg   edi,eax
  41ee6d:	xor    eax,0xa7ac86a2
  41ee72:	enter  0x8547,0xfc
  41ee76:	pushf  
  41ee77:	sbb    eax,0x13276cce
  41ee7c:	xchg   ebp,eax
  41ee7d:	dec    ebp
  41ee7e:	adc    bh,BYTE PTR [eax]
  41ee80:	ss out 0x58,al
  41ee83:	inc    edi
  41ee84:	dec    edi
  41ee85:	dec    ebp
  41ee86:	jg     0x41ee80
  41ee88:	getsec 
  41ee8a:	sahf   
  41ee8b:	ret    0xf66f
  41ee8e:	inc    ebp
  41ee8f:	xor    cl,al
  41ee91:	sbb    al,0x9c
  41ee93:	xchg   ebp,eax
  41ee94:	je     0x41ee94
  41ee96:	fmul   DWORD PTR [ebp-0x17]
  41ee99:	mov    cl,0x6e
  41ee9b:	leave  
  41ee9c:	aam    0x58
  41ee9e:	xor    BYTE PTR [esp+ebp*1-0x11],dh
  41eea2:	mov    bh,0x5
  41eea4:	fs gs mov ah,0xcf
  41eea8:	cwde   
  41eea9:	adc    BYTE PTR [edi*8-0xba40537],cl
  41eeb0:	mov    bh,0xea
  41eeb2:	leave  
  41eeb3:	push   ebx
  41eeb4:	cwde   
  41eeb5:	cmp    BYTE PTR [esi],ah
  41eeb7:	xor    al,0x21
  41eeb9:	push   ds
  41eeba:	out    dx,al
  41eebb:	arpl   WORD PTR [ecx+eax*8-0x189f0b89],bx
  41eec2:	fisttp WORD PTR [ecx-0xd4f637d]
  41eec8:	mov    dh,0x35
  41eeca:	mov    fs,WORD PTR [edi]
  41eecc:	pop    ecx
  41eecd:	aam    0xd
  41eecf:	stos   BYTE PTR es:[edi],al
  41eed0:	or     eax,0x73f5965e
  41eed5:	dec    ecx
  41eed6:	out    0x79,al
  41eed8:	jecxz  0x41ef24
  41eeda:	pop    ecx
  41eedb:	scas   al,BYTE PTR es:[edi]
  41eedc:	jle    0x41eebc
  41eede:	sbb    BYTE PTR [ebx-0x1f288642],cl
  41eee4:	jno    0x41ef61
  41eee6:	dec    edx
  41eee7:	push   es
  41eee8:	div    DWORD PTR [ebp+0x62643184]
  41eeee:	ss ror dh,cl
  41eef1:	add    esi,DWORD PTR [ebp-0x54]
  41eef4:	(bad)  
  41eef5:	out    dx,eax
  41eef6:	cld    
  41eef7:	test   al,0x57
  41eef9:	jmp    0x8fc8b59e
  41eefe:	out    0x6b,eax
  41ef00:	imul   ebx,DWORD PTR [ebp+edx*4-0x69],0x55
  41ef05:	retf   0x9a08
  41ef08:	dec    eax
  41ef09:	mov    eax,ds:0x7513cf62
  41ef0e:	sub    BYTE PTR ds:0x85f67d6a,cl
  41ef14:	cmp    al,0xc7
  41ef16:	fmul   DWORD PTR [ebp+0x41]
  41ef19:	lods   al,BYTE PTR ds:[esi]
  41ef1a:	adc    edx,ecx
  41ef1c:	cwde   
  41ef1d:	icebp  
  41ef1e:	jo     0x41eeca
  41ef20:	jno    0x41ef88
  41ef22:	and    BYTE PTR [ebx-0x4],bl
  41ef25:	adc    DWORD PTR [eax+0x240b2297],esp
  41ef2b:	cmp    eax,0x4f42e0ef
  41ef30:	fld    DWORD PTR [esp+edi*1+0x61a1c622]
  41ef37:	cld    
  41ef38:	fld    QWORD PTR [edi+edi*4+0x9]
  41ef3c:	sbb    al,0xe
  41ef3e:	(bad)  
  41ef3f:	(bad)  
  41ef41:	(bad)  
  41ef42:	jge    0x41eec8
  41ef44:	add    al,ch
  41ef46:	loop   0x41ef1d
  41ef48:	out    dx,eax
  41ef49:	repnz dec esi
  41ef4b:	mov    ebp,0x898c0db5
  41ef50:	pop    esp
  41ef51:	xchg   edx,eax
  41ef52:	popa   
  41ef53:	pop    esp
  41ef54:	mov    bl,0x58
  41ef56:	jmp    0x172d:0xd6b70e97
  41ef5d:	mov    bl,0x74
  41ef5f:	test   al,al
  41ef61:	xchg   esp,eax
  41ef62:	loopne 0x41eee8
  41ef64:	dec    ecx
  41ef65:	jbe    0x41ef21
  41ef67:	xlat   BYTE PTR ds:[ebx]
  41ef68:	add    cl,BYTE PTR ds:0x26f4966a
  41ef6e:	sub    eax,0x8cc9bfa5
  41ef73:	int    0x1
  41ef75:	or     al,ah
  41ef77:	(bad)  
  41ef78:	push   esp
  41ef79:	lods   eax,DWORD PTR ds:[esi]
  41ef7a:	push   esi
  41ef7b:	test   al,0xa7
  41ef7d:	idiv   BYTE PTR gs:[esi-0x35]
  41ef81:	adc    cl,BYTE PTR [eax]
  41ef83:	shr    BYTE PTR [ecx+eiz*8+0x3a],cl
  41ef87:	cmp    al,0x59
  41ef89:	xor    edi,edx
  41ef8b:	enter  0xefc2,0x5f
  41ef8f:	and    DWORD PTR [ebp-0x3a],ebp
  41ef92:	jge    0x41efdc
  41ef94:	mov    eax,DWORD PTR [esi-0x70]
  41ef97:	imul   DWORD PTR [esi]
  41ef99:	inc    eax
  41ef9a:	cld    
  41ef9b:	int3   
  41ef9c:	(bad)  
  41ef9d:	adc    ah,ch
  41ef9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efa0:	push   eax
  41efa1:	jbe    0x41ef27
  41efa3:	or     al,0x66
  41efa5:	leave  
  41efa6:	push   esi
  41efa7:	idiv   DWORD PTR [edx*1-0x8c74633]
  41efae:	sub    ah,ch
  41efb0:	sar    BYTE PTR [ebx+0x4f8661c1],0x7e
  41efb7:	or     al,0xe7
  41efb9:	out    dx,al
  41efba:	jmp    0xa41f744b
  41efbf:	mov    ds:0xcd675748,al
  41efc4:	hlt    
  41efc5:	xchg   edx,eax
  41efc6:	iret   
  41efc7:	je     0x41ef69
  41efc9:	and    BYTE PTR [edi+ecx*1-0x52f02af4],bh
  41efd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efd1:	sub    BYTE PTR [eax],cl
  41efd3:	shl    esp,0x5a
  41efd6:	loop   0x41ef96
  41efd8:	or     DWORD PTR ds:0x1d8f460d,ebp
  41efde:	ds jmp 0x1ad94708
  41efe4:	cmp    ah,BYTE PTR [edi+0x5e]
  41efe7:	pop    ss
  41efe8:	pop    ebp
  41efe9:	pop    edx
  41efea:	test   DWORD PTR [edx],0x8787a68a
  41eff0:	xchg   esp,eax
  41eff1:	add    BYTE PTR [ecx],ch
  41eff3:	add    DWORD PTR [ebp+edi*2+0x7acae838],edi
  41effa:	xor    esi,0x721b52d7
  41f000:	add    eax,0x5e6bd6dd
  41f005:	jp     0x41f048
  41f007:	cmp    BYTE PTR [ebp+0x10180515],bl
  41f00d:	pop    esi
  41f00e:	fist   DWORD PTR [ecx-0x13]
  41f011:	mov    ebp,gs
  41f013:	inc    eax
  41f014:	add    dl,BYTE PTR [edx+0x733e18ce]
  41f01a:	mov    dl,BYTE PTR [ecx+eiz*8-0x7ec46ff3]
  41f021:	cmc    
  41f022:	dec    edi
  41f023:	(bad)  
  41f024:	sub    eax,DWORD PTR [ecx+0x18303b68]
  41f02a:	mov    ecx,ebx
  41f02c:	(bad)  
  41f02d:	push   si
  41f02f:	jbe    0x41f087
  41f031:	iret   
  41f032:	jbe    0x41f092
  41f034:	retf   
  41f035:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f036:	lahf   
  41f037:	sbb    ecx,DWORD PTR [esp+ebx*8]
  41f03a:	and    eax,0x6de360b4
  41f03f:	dec    edi
  41f040:	mov    edx,0x1881715b
  41f045:	in     eax,dx
  41f046:	jl     0x41f08b
  41f048:	jg     0x41f00d
  41f04a:	rcl    edx,cl
  41f04c:	sub    DWORD PTR [ebp+ecx*8+0x7b46eb5c],ebx
  41f053:	in     al,dx
  41f054:	imul   esp,esp,0x94d4274
  41f05a:	inc    esi
  41f05b:	(bad)  
  41f05c:	jnp    0x41f025
  41f05e:	mov    esi,0x43345e72
  41f063:	jno    0x41efe7
  41f065:	jp     0x41f018
  41f067:	push   edx
  41f068:	jge    0x41f0df
  41f06a:	xchg   edx,eax
  41f06b:	(bad)  
  41f06c:	dec    ebx
  41f06d:	adc    al,0xd5
  41f06f:	loopne 0x41f022
  41f071:	xor    BYTE PTR [edi],ah
  41f073:	add    al,0x51
  41f075:	mov    eax,ds:0xa15e8ac7
  41f07a:	mov    ebp,0xf04f2198
  41f07f:	mov    ch,0xce
  41f081:	or     ebx,DWORD PTR [esi]
  41f083:	int3   
  41f084:	mov    bl,0x84
  41f086:	aaa    
  41f087:	imul   ebx,edi,0x375afecf
  41f08d:	sar    DWORD PTR ds:0xfc00d564,cl
  41f093:	loopne 0x41f065
  41f095:	(bad)  
  41f096:	cmp    al,0x31
  41f098:	test   al,0xff
  41f09a:	out    0x59,eax
  41f09c:	call   0x75cb:0x24429cee
  41f0a3:	pop    ebx
  41f0a4:	sti    
  41f0a5:	mov    ds:0x99ee4d5,eax
  41f0aa:	mov    ebx,0x56af8a16
  41f0af:	and    bl,BYTE PTR [edx]
  41f0b1:	jecxz  0x41f052
  41f0b3:	fstp   QWORD PTR [ebp+0x45e553c2]
  41f0b9:	mov    BYTE PTR [esp+eax*8-0x1d91db4f],al
  41f0c0:	adc    dh,BYTE PTR [eax+0x67]
  41f0c3:	(bad)  
  41f0c4:	sbb    ebp,DWORD PTR [ebx-0x484b45c4]
  41f0ca:	ror    dl,cl
  41f0cc:	les    ebp,FWORD PTR [ecx+0x4b29063d]
  41f0d2:	pop    esp
  41f0d3:	ja     0x41f066
  41f0d5:	sbb    BYTE PTR [ebp+0x72],cl
  41f0d8:	sbb    ecx,DWORD PTR [edi-0x2f]
  41f0db:	stos   DWORD PTR es:[edi],eax
  41f0dc:	inc    edx
  41f0dd:	mov    bl,0x37
  41f0df:	xor    ecx,DWORD PTR [edx-0x52]
  41f0e2:	add    dl,BYTE PTR [edx]
  41f0e4:	jne    0x41f09f
  41f0e6:	sbb    DWORD PTR [esi+0x65],0xb91edaad
  41f0ed:	jb     0x41f0ec
  41f0ef:	fcom   DWORD PTR [edx+0x2c]
  41f0f2:	add    DWORD PTR [eax],ebp
  41f0f4:	push   cs
  41f0f5:	cmp    esp,DWORD PTR [edx]
  41f0f7:	mov    dh,0x54
  41f0f9:	jae    0x41f16f
  41f0fb:	rcl    al,0x25
  41f0fe:	fld    QWORD PTR [edi-0x3b76f239]
  41f104:	mov    esi,0xd8e96977
  41f109:	jp     0x41f10b
  41f10b:	sbb    BYTE PTR [esi-0x66d0e4ca],dl
  41f111:	add    ah,bh
  41f113:	or     eax,0x14c6afdc
  41f118:	jg     0x41f0c6
  41f11a:	jmp    0xb1b0:0x7b89c1c8
  41f121:	xor    esp,DWORD PTR [ebp-0x2cdf20ea]
  41f127:	mov    ebx,0x161e5414
  41f12c:	xor    dl,dh
  41f12e:	jmp    0x4010:0xd883596a
  41f135:	push   ss
  41f136:	push   eax
  41f137:	sub    edx,DWORD PTR [eax+0x301d45fa]
  41f13d:	dec    esp
  41f13e:	fnstsw WORD PTR [ecx+ebp*1]
  41f141:	(bad)  
  41f142:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f143:	sub    eax,0xa001fd04
  41f148:	or     DWORD PTR [ebp-0x14],ecx
  41f14b:	aam    0x36
  41f14d:	sbb    eax,0x9701ece8
  41f152:	pop    edi
  41f153:	mov    eax,ds:0xb20d0621
  41f158:	xlat   BYTE PTR ds:[ebx]
  41f159:	mov    dl,0x7f
  41f15b:	xchg   ebx,ecx
  41f15d:	push   ss
  41f15e:	xchg   esi,eax
  41f15f:	cdq    
  41f160:	enter  0x456e,0x22
  41f164:	jnp    0x41f16b
  41f166:	shl    DWORD PTR [ebx+0x241c5b1f],cl
  41f16c:	sub    ah,BYTE PTR [ebx]
  41f16e:	sbb    DWORD PTR es:[ebx-0x6f735019],edx
  41f175:	inc    ebp
  41f176:	and    ebp,DWORD PTR gs:[eax+esi*2-0x2c]
  41f17b:	sub    dh,BYTE PTR [edi]
  41f17d:	xchg   ebx,eax
  41f17e:	or     DWORD PTR [eax+0x6e452cdb],esi
  41f184:	jae    0x41f16d
  41f186:	sub    esi,DWORD PTR [edx-0x23cf134a]
  41f18c:	call   0xa49032a1
  41f191:	push   ss
  41f192:	xor    edx,ebp
  41f194:	nop
  41f195:	rcr    eax,0xd5
  41f198:	xchg   ebp,eax
  41f199:	outs   dx,BYTE PTR ds:[esi]
  41f19a:	pop    ebx
  41f19b:	mov    es,WORD PTR [ebx]
  41f19d:	adc    al,0x1
  41f19f:	(bad)  [ecx+eiz*4-0x33]
  41f1a3:	mov    eax,0xf250fe17
  41f1a8:	xchg   BYTE PTR [edi-0x43],ah
  41f1ab:	aaa    
  41f1ac:	iret   
  41f1ad:	mov    bh,0x8d
  41f1af:	enter  0x7beb,0x5b
  41f1b3:	fnstcw WORD PTR ds:0x36b93737
  41f1b9:	push   esi
  41f1ba:	or     eax,DWORD PTR [eax+ecx*4+0x20]
  41f1be:	test   eax,0x2c1c2043
  41f1c3:	das    
  41f1c4:	xchg   DWORD PTR [eax],esi
  41f1c6:	stc    
  41f1c7:	dec    edx
  41f1c8:	pop    DWORD PTR ds:0xd183a18
  41f1ce:	or     al,0x6d
  41f1d0:	arpl   bp,bp
  41f1d2:	mov    ch,0x7
  41f1d4:	call   0x50557589
  41f1d9:	jle    0x41f25a
  41f1db:	cmp    BYTE PTR [ebx+0x75],al
  41f1de:	fs (bad) 
  41f1e0:	push   ebp
  41f1e1:	and    al,0xe4
  41f1e3:	xor    DWORD PTR [edi-0x3b],ebx
  41f1e6:	pop    es
  41f1e7:	std    
  41f1e8:	push   cs
  41f1e9:	add    al,0x2
  41f1eb:	out    dx,eax
  41f1ec:	xchg   bl,bl
  41f1ee:	inc    ecx
  41f1ef:	and    cl,BYTE PTR [edi+0x60]
  41f1f2:	dec    edi
  41f1f3:	stc    
  41f1f4:	cdq    
  41f1f5:	xchg   ecx,eax
  41f1f6:	test   eax,0xbe191ddf
  41f1fb:	dec    edx
  41f1fc:	popa   
  41f1fd:	adc    DWORD PTR [ebp-0x31],esp
  41f200:	jmp    0xf6752bab
  41f205:	mov    WORD PTR [edx+ebx*1],ss
  41f208:	xor    dl,BYTE PTR [esi+0x77a61d42]
  41f20e:	inc    ebp
  41f20f:	cli    
  41f210:	je     0x41f1fc
  41f212:	(bad)  
  41f213:	scas   al,BYTE PTR es:[edi]
  41f214:	mov    ds:0x28abda40,al
  41f219:	fucomp st(2)
  41f21b:	sahf   
  41f21c:	div    DWORD PTR [edi-0x7c]
  41f21f:	call   DWORD PTR [eax-0x2ec528d0]
  41f225:	jbe    0x41f1cf
  41f227:	arpl   bp,sp
  41f229:	xchg   esi,eax
  41f22a:	cmp    al,0x63
  41f22c:	test   BYTE PTR [ebx-0x355350a7],bh
  41f232:	mov    DWORD PTR [edx+0x3996aa4d],ecx
  41f238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f239:	push   ecx
  41f23a:	aad    0xfb
  41f23c:	sahf   
  41f23d:	out    dx,al
  41f23e:	xchg   BYTE PTR [eax],al
  41f240:	std    
  41f241:	sub    BYTE PTR [ebx],bh
  41f243:	pop    edx
  41f244:	mov    al,ds:0x4b402fdc
  41f249:	out    0x24,eax
  41f24b:	push   ecx
  41f24c:	and    eax,0xe1298634
  41f251:	out    0xac,eax
  41f253:	push   0x70
  41f255:	adc    bl,BYTE PTR [edx+0x2a]
  41f258:	jbe    0x41f20e
  41f25a:	or     al,BYTE PTR [esi+0x3d]
  41f25d:	gs mov al,0x75
  41f260:	or     BYTE PTR [ebx-0x2a],0x54
  41f264:	jno    0x41f243
  41f266:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f267:	or     DWORD PTR [edx],edi
  41f269:	add    edi,0xffffffa4
  41f26c:	and    DWORD PTR [ecx],0x6a4bf220
  41f272:	push   cs
  41f273:	adc    ch,0x4d
  41f276:	inc    edi
  41f277:	pop    ds
  41f278:	xchg   DWORD PTR [ecx],esp
  41f27a:	sbb    eax,0xe75973a6
  41f27f:	loop   0x41f21f
  41f281:	call   0xc799:0xb76ce267
  41f288:	hlt    
  41f289:	pop    ebp
  41f28a:	bnd jno 0x41f2fa
  41f28d:	out    dx,eax
  41f28e:	cmp    BYTE PTR [edx+edx*1-0x38],cl
  41f292:	mov    BYTE PTR [edi],cl
  41f294:	dec    eax
  41f295:	dec    esp
  41f296:	mov    ah,0xa0
  41f298:	xor    DWORD PTR [ebx],ebx
  41f29a:	inc    ecx
  41f29b:	xchg   ecx,eax
  41f29c:	mov    gs,WORD PTR [edx+0xfa9c6ce]
  41f2a2:	out    0xc0,eax
  41f2a4:	dec    eax
  41f2a5:	jmp    FWORD PTR [ebx]
  41f2a7:	pop    eax
  41f2a8:	(bad)  
  41f2a9:	fnsave [eax-0x4e]
  41f2ac:	bound  ebp,QWORD PTR [esi-0x76e81c9e]
  41f2b2:	add    DWORD PTR [edx],ecx
  41f2b4:	stos   DWORD PTR es:[edi],eax
  41f2b5:	pop    esp
  41f2b6:	adc    ah,ah
  41f2b8:	cmp    eax,DWORD PTR [esi-0x2f0cd1a6]
  41f2be:	daa    
  41f2bf:	repz jb 0x41f341
  41f2c2:	(bad)
  41f2c5:	(bad)  
  41f2c6:	cmp    DWORD PTR [eax-0x32],esp
  41f2c9:	adc    al,BYTE PTR ds:0x49eb5b56
  41f2cf:	leave  
  41f2d0:	dec    ecx
  41f2d1:	push   0x2f
  41f2d3:	sub    ecx,DWORD PTR [edx+eax*4-0xd]
  41f2d7:	dec    BYTE PTR [ebx]
  41f2d9:	sbb    DWORD PTR [esi],edi
  41f2db:	add    DWORD PTR [ebp-0x1cc20dc8],edi
  41f2e1:	repz js 0x41f2fe
  41f2e4:	repnz sub BYTE PTR [esi+0xe],dh
  41f2e8:	(bad)  
  41f2e9:	out    dx,al
  41f2ea:	pop    eax
  41f2eb:	loope  0x41f2d8
  41f2ed:	mov    ds:0xf3627540,al
  41f2f2:	inc    esi
  41f2f3:	lods   eax,DWORD PTR ds:[esi]
  41f2f4:	cli    
  41f2f5:	call   0x61199633
  41f2fa:	bnd jnp 0x41f28a
  41f2fd:	fs dec eax
  41f2ff:	dec    ebp
  41f300:	and    DWORD PTR [ebp-0x1b1faa27],0xffffffc1
  41f307:	mov    eax,ds:0x5bf77c4c
  41f30c:	xor    BYTE PTR [ebp+0x9],ch
  41f30f:	mov    edx,eax
  41f311:	fiadd  DWORD PTR ds:0x5ae5245a
  41f317:	outs   dx,BYTE PTR ds:[esi]
  41f318:	jmp    0xcd38:0xcbbfda8a
  41f31f:	bound  eax,QWORD PTR [ecx]
  41f321:	fstp   TBYTE PTR [eax-0x6616d241]
  41f327:	pop    eax
  41f328:	push   es
  41f329:	cmp    eax,0x70a11ee3
  41f32e:	arpl   WORD PTR [edi],di
  41f330:	das    
  41f331:	pop    ss
  41f332:	mov    ch,0x97
  41f334:	pop    esi
  41f335:	(bad)  
  41f336:	lock bound ebp,QWORD PTR [eax]
  41f339:	xchg   DWORD PTR [ebx+0x5dd1bc90],edi
  41f33f:	mov    ecx,0xc0daeb7a
  41f344:	cmp    BYTE PTR [esi+0x60],ch
  41f347:	scas   al,BYTE PTR es:[edi]
  41f348:	sub    edx,0x43b1d18f
  41f34e:	cmp    BYTE PTR [ebx-0x24],cl
  41f351:	stos   DWORD PTR es:[edi],eax
  41f352:	and    edx,ebp
  41f354:	cmp    BYTE PTR [edx],ah
  41f356:	xor    ebx,DWORD PTR [esi]
  41f358:	inc    ebp
  41f359:	lea    esp,[ecx]
  41f35b:	fld    TBYTE PTR [edi]
  41f35d:	imul   esi,edi,0x6cad1101
  41f363:	push   0xab9166a2
  41f368:	fst    DWORD PTR [edi]
  41f36a:	and    al,0x84
  41f36c:	scas   al,BYTE PTR es:[edi]
  41f36d:	mov    eax,0x29b757a2
  41f372:	and    edi,eax
  41f374:	mov    edx,0x93bbca76
  41f379:	cld    
  41f37a:	div    DWORD PTR [ecx+edx*1+0x19cb4d56]
  41f381:	es pushf 
  41f383:	nop
  41f384:	sub    al,0x65
  41f386:	fld    DWORD PTR ds:0xa229442d
  41f38c:	xor    eax,0x42946d6b
  41f391:	or     ebx,0xffffff82
  41f394:	mov    DWORD PTR [edi-0x50],ebx
  41f397:	add    eax,0xbcd414dd
  41f39c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f39d:	cwde   
  41f39e:	xchg   esi,eax
  41f39f:	xchg   esp,eax
  41f3a0:	jo     0x41f414
  41f3a2:	ret    0x7bb6
  41f3a5:	mov    al,0x54
  41f3a7:	pop    edx
  41f3a8:	inc    ecx
  41f3a9:	mov    edx,0xfd9b8b2e
  41f3ae:	into   
  41f3af:	out    0xf9,al
  41f3b1:	mov    fs,WORD PTR [edx+0x1f]
  41f3b4:	aam    0xd6
  41f3b6:	ins    BYTE PTR es:[edi],dx
  41f3b7:	int    0x50
  41f3b9:	push   ss
  41f3ba:	mov    cl,0x52
  41f3bc:	add    edi,edi
  41f3be:	cs adc eax,0x3535b42b
  41f3c4:	mov    dl,0xb9
  41f3c6:	test   edx,0xb9184372
  41f3cc:	jge    0x41f3d7
  41f3ce:	add    esi,DWORD PTR [ebx-0x2c0f6c99]
  41f3d4:	push   ss
  41f3d5:	jns    0x41f420
  41f3d7:	rcr    BYTE PTR [ebx+0x7d],1
  41f3da:	push   eax
  41f3db:	retf   0x7a6a
  41f3de:	in     al,0xa8
  41f3e0:	enter  0x5c29,0x32
  41f3e4:	jecxz  0x41f42a
  41f3e6:	fild   DWORD PTR [ecx-0x21]
  41f3e9:	jno    0x41f3ac
  41f3eb:	popa   
  41f3ec:	dec    eax
  41f3ed:	repz out dx,al
  41f3ef:	sub    eax,0x2d2457fe
  41f3f4:	int3   
  41f3f5:	dec    ecx
  41f3f6:	sahf   
  41f3f7:	jmp    0x41f3a9
  41f3f9:	pop    es
  41f3fa:	push   edx
  41f3fb:	fistp  QWORD PTR [edi-0x3d]
  41f3fe:	out    0x6f,eax
  41f400:	mov    edi,0xc3d986ba
  41f405:	mov    al,0xc7
  41f407:	out    0x4c,eax
  41f409:	sbb    eax,0xca28bbc7
  41f40e:	mov    ecx,0xecd12970
  41f413:	push   esp
  41f414:	daa    
  41f415:	ret    
  41f416:	push   es
  41f417:	iret   
  41f418:	sbb    eax,DWORD PTR [ebp-0x29]
  41f41b:	push   eax
  41f41c:	sub    esp,DWORD PTR [ebx]
  41f41e:	inc    ebp
  41f41f:	rcr    DWORD PTR [ebx-0x7d],1
  41f422:	loopne 0x41f40e
  41f424:	and    DWORD PTR [edx+ebx*4-0x35245f2b],eax
  41f42b:	pop    ds
  41f42c:	mov    ax,0x5856
  41f430:	ja     0x41f3ec
  41f432:	popf   
  41f433:	std    
  41f434:	pop    eax
  41f435:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f436:	sub    al,0x2f
  41f438:	inc    esi
  41f439:	cwde   
  41f43a:	mov    ds:0xd3011677,al
  41f43f:	ja     0x41f3fa
  41f441:	leave  
  41f442:	mov    cl,0x77
  41f444:	cmp    DWORD PTR [edi-0x580ba9b3],ebp
  41f44a:	mov    dl,0x8c
  41f44c:	push   edx
  41f44d:	int    0x4c
  41f44f:	ss in  eax,0x8b
  41f452:	pop    eax
  41f453:	mov    esi,0x560fde8f
  41f458:	div    DWORD PTR [ebx+ecx*8]
  41f45b:	dec    edx
  41f45c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f45d:	icebp  
  41f45e:	js     0x41f471
  41f460:	cmp    esp,DWORD PTR [eax-0x1034d499]
  41f466:	pop    es
  41f467:	cmp    BYTE PTR [ebp+0x7a9502f1],bl
  41f46d:	fidiv  WORD PTR [ecx-0x48a8ac3e]
  41f473:	fwait
  41f474:	shr    edx,cl
  41f476:	leave  
  41f477:	jp     0x41f4b1
  41f479:	sbb    eax,0xf9d4fc81
  41f47e:	push   ebx
  41f47f:	cmc    
  41f480:	repnz sub BYTE PTR [ebp+0x1ce42bb3],dl
  41f487:	add    eax,0x7b67f2e6
  41f48c:	mov    eax,0x5b942225
  41f491:	push   cs
  41f492:	shr    BYTE PTR [esi],0xf6
  41f495:	je     0x41f4de
  41f497:	cs das 
  41f499:	push   ecx
  41f49a:	mov    ds:0x90794f4a,eax
  41f49f:	mov    esi,0x890590f5
  41f4a4:	sub    DWORD PTR [ecx+0x2c],eax
  41f4a7:	mov    dl,0x79
  41f4a9:	lea    edi,[ecx-0xc8657bd]
  41f4af:	aaa    
  41f4b0:	lds    ebp,FWORD PTR [eax+0x2b014979]
  41f4b6:	and    edx,DWORD PTR [ebx-0x3e]
  41f4b9:	test   BYTE PTR [ebp-0x3a],dh
  41f4bc:	fdivr  QWORD PTR [edx-0x17]
  41f4bf:	adc    DWORD PTR [ebx],0xffffff85
  41f4c2:	call   0xa80e:0x71ccc7bb
  41f4c9:	rcr    DWORD PTR [ecx],1
  41f4cb:	sub    BYTE PTR ds:0xe6567d4e,dh
  41f4d1:	push   0x30
  41f4d3:	xor    eax,0x2a7620bf
  41f4d8:	jecxz  0x41f4bb
  41f4da:	in     al,0xf3
  41f4dc:	inc    ebp
  41f4dd:	sub    al,0x52
  41f4df:	adc    ecx,esi
  41f4e1:	scas   al,BYTE PTR es:[edi]
  41f4e2:	in     eax,0x2d
  41f4e4:	fld    QWORD PTR [edx-0x443ec6fb]
  41f4ea:	mov    eax,ds:0x74e05db
  41f4ef:	cli    
  41f4f0:	iret   
  41f4f1:	test   BYTE PTR [edi-0x3b],0xee
  41f4f5:	mov    ecx,0xec9a349
  41f4fa:	das    
  41f4fb:	adc    eax,0xd781569d
  41f500:	dec    esi
  41f501:	ins    DWORD PTR es:[edi],dx
  41f502:	out    dx,al
  41f503:	pop    ebx
  41f504:	push   esi
  41f505:	and    al,0x2d
  41f507:	popa   
  41f508:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f509:	pop    edx
  41f50a:	mov    dl,0xe7
  41f50c:	ret    0x9ceb
  41f50f:	(bad)  
  41f510:	xchg   esp,eax
  41f511:	std    
  41f512:	mov    ecx,0x8b830adc
  41f517:	add    BYTE PTR [ecx-0x1f],0xec
  41f51b:	test   eax,0xa33f4242
  41f520:	out    0x1d,eax
  41f522:	aam    0xec
  41f524:	pop    ecx
  41f525:	jnp    0x41f4b2
  41f527:	stos   BYTE PTR es:[edi],al
  41f528:	fnstsw WORD PTR [ebx+0x18]
  41f52b:	xchg   ebx,eax
  41f52c:	pop    ebp
  41f52d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f52e:	scas   al,BYTE PTR es:[edi]
  41f52f:	je     0x41f510
  41f531:	xchg   BYTE PTR [bp+si-0x8],dl
  41f535:	xchg   esp,eax
  41f536:	mov    edx,0xf44c2e77
  41f53b:	pop    ebp
  41f53c:	loop   0x41f55b
  41f53e:	sbb    DWORD PTR [esi-0x50f2f5ec],esp
  41f544:	xchg   esp,eax
  41f545:	std    
  41f546:	outs   dx,BYTE PTR ds:[esi]
  41f547:	dec    eax
  41f548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f549:	out    0x74,al
  41f54b:	inc    ebp
  41f54c:	jno    0x41f57b
  41f54e:	or     DWORD PTR [edx+0x75],ebp
  41f551:	sub    DWORD PTR [edi-0x2014ede3],esi
  41f557:	jns    0x41f5bc
  41f559:	push   edi
  41f55a:	popa   
  41f55b:	sbb    DWORD PTR [esi+0x79],esi
  41f55e:	(bad)  
  41f55f:	fist   DWORD PTR [ebx-0x2d99e724]
  41f565:	inc    edi
  41f566:	xchg   edx,eax
  41f567:	and    al,0xa
  41f569:	push   0x64846954
  41f56e:	fbstp  TBYTE PTR [eax+0x39343fbf]
  41f574:	inc    ebp
  41f575:	mov    ds:0xa97000df,eax
  41f57a:	std    
  41f57b:	es or  ebx,eax
  41f57e:	scas   al,BYTE PTR es:[edi]
  41f57f:	xor    cl,dl
  41f581:	inc    esi
  41f582:	dec    esi
  41f583:	sub    DWORD PTR [edx],esp
  41f585:	in     eax,dx
  41f586:	dec    esi
  41f587:	inc    eax
  41f588:	mov    ebp,0xee0e41b7
  41f58d:	ret    
  41f58e:	jg     0x41f516
  41f590:	fwait
  41f591:	and    ah,BYTE PTR [ebp+0xd]
  41f594:	and    eax,0x65490ba
  41f599:	popf   
  41f59a:	jg     0x41f5d8
  41f59c:	pop    edx
  41f59d:	iret   
  41f59e:	mov    ch,0x7d
  41f5a0:	inc    esi
  41f5a1:	pop    esp
  41f5a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5a3:	push   ebp
  41f5a4:	jmp    0xc9d04da0
  41f5a9:	cmp    DWORD PTR [edx+ebx*1],edx
  41f5ac:	fcomp  QWORD PTR [eax-0x3f]
  41f5af:	cli    
  41f5b0:	(bad)  
  41f5b1:	cmp    al,0x6e
  41f5b3:	xchg   edx,eax
  41f5b4:	push   eax
  41f5b5:	mov    eax,0x4ce17319
  41f5ba:	popf   
  41f5bb:	enter  0x932b,0x4f
  41f5bf:	cmp    esp,DWORD PTR [ebx]
  41f5c1:	cdq    
  41f5c2:	cmp    ebp,DWORD PTR [ecx-0x71]
  41f5c5:	pop    es
  41f5c6:	cdq    
  41f5c7:	mov    ebx,0xaa496982
  41f5cc:	pop    esp
  41f5cd:	pop    ecx
  41f5ce:	retf   
  41f5cf:	xchg   edx,eax
  41f5d0:	push   edi
  41f5d1:	loopne 0x41f564
  41f5d3:	popa   
  41f5d4:	cld    
  41f5d5:	mov    edx,0x78a4a059
  41f5da:	jbe    0x41f614
  41f5dc:	(bad)  
  41f5dd:	imul   ebx,edi,0xa6fd89f9
  41f5e3:	jg     0x41f58c
  41f5e5:	add    al,bh
  41f5e7:	mov    ebp,0x27365f99
  41f5ec:	or     edi,esp
  41f5ee:	or     ah,ah
  41f5f0:	(bad)  
  41f5f1:	mov    cl,BYTE PTR [ebx-0x3d]
  41f5f4:	imul   BYTE PTR [ecx+0x6d21db5e]
  41f5fa:	out    0xf1,al
  41f5fc:	rol    DWORD PTR [esi-0x8],0x8c
  41f600:	adc    edx,esi
  41f602:	push   0xffdf5e5c
  41f607:	pop    edi
  41f608:	popf   
  41f609:	stc    
  41f60a:	cmp    DWORD PTR [edi+0x26],edx
  41f60d:	or     ah,BYTE PTR [ecx-0x5c9dce04]
  41f613:	push   ds
  41f614:	mov    edx,0x59ea9089
  41f619:	ins    BYTE PTR es:[edi],dx
  41f61a:	mov    al,ds:0xb229426
  41f61f:	(bad)  
  41f620:	xchg   esp,eax
  41f621:	and    esi,ecx
  41f623:	xchg   edx,eax
  41f624:	fabs   
  41f626:	pop    ebp
  41f627:	sahf   
  41f628:	iret   
  41f629:	or     BYTE PTR [edi+0x594e2990],dh
  41f62f:	repz leave 
  41f631:	sub    BYTE PTR [ebx+0x168d9175],0x9e
  41f638:	bound  edi,QWORD PTR ds:[edi]
  41f63b:	pop    ds
  41f63c:	or     bh,BYTE PTR [ecx-0x144e541d]
  41f642:	adc    ah,BYTE PTR [edi-0x5dc53307]
  41f648:	sbb    eax,0xe5d51f6b
  41f64d:	mov    DWORD PTR [eax],eax
  41f64f:	loop   0x41f5db
  41f651:	imul   ecx,DWORD PTR [eax+0x5de25693],0xac2135d4
  41f65b:	out    dx,al
  41f65c:	add    ebx,esp
  41f65e:	(bad)  
  41f65f:	push   esi
  41f660:	add    cl,0x43
  41f663:	sub    edx,DWORD PTR ds:0x5effc3dd
  41f669:	push   eax
  41f66a:	cli    
  41f66b:	mov    al,0xae
  41f66d:	sar    BYTE PTR [ecx+0x53ba255a],1
  41f673:	(bad)  
  41f674:	lods   al,BYTE PTR ds:[esi]
  41f675:	xchg   ebx,eax
  41f676:	jmp    0x2aae:0x5d9d6e77
  41f67d:	mov    ds:0x44a3d7be,eax
  41f682:	imul   ebp,DWORD PTR [esi+esi*4-0x504c0f9a],0x95f98e85
  41f68d:	mov    cl,BYTE PTR [edx+0x7c]
  41f690:	mov    al,0xe6
  41f692:	pop    eax
  41f693:	cmc    
  41f694:	xlat   BYTE PTR ds:[ebx]
  41f695:	dec    ebx
  41f696:	test   DWORD PTR [esi],eax
  41f698:	gs push esi
  41f69a:	mov    dh,0xb4
  41f69c:	fcmovbe st,st(5)
  41f69e:	imul   edi,DWORD PTR [ebx+edx*1],0x1351e783
  41f6a5:	ficomp DWORD PTR [esi-0x6c2cff1]
  41f6ab:	jae    0x41f712
  41f6ad:	scas   al,BYTE PTR es:[edi]
  41f6ae:	xchg   BYTE PTR [bp+si+0x7b],ah
  41f6b2:	lea    edi,[ecx]
  41f6b4:	push   edx
  41f6b5:	xor    cl,BYTE PTR [ebp-0x78]
  41f6b8:	repnz mov edx,0x4b262704
  41f6be:	int3   
  41f6bf:	(bad)  
  41f6c0:	pusha  
  41f6c1:	mov    bh,ch
  41f6c3:	out    0xbc,al
  41f6c5:	sbb    ah,BYTE PTR [eax+0x49]
  41f6c8:	xor    DWORD PTR [edx+ebp*1],eax
  41f6cb:	dec    esp
  41f6cc:	(bad)  
  41f6cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6ce:	sbb    eax,0x9b0a714
  41f6d3:	fwait
  41f6d4:	stc    
  41f6d5:	ficomp WORD PTR [edi]
  41f6d7:	sbb    BYTE PTR [esi-0x2],al
  41f6da:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6dc:	retf   0x5c80
  41f6df:	jne    0x41f730
  41f6e1:	dec    edx
  41f6e2:	les    ebx,FWORD PTR [edx]
  41f6e4:	pop    DWORD PTR [eax+eiz*2+0x33]
  41f6e8:	daa    
  41f6e9:	inc    edi
  41f6ea:	cmp    eax,0xac81b47f
  41f6ef:	adc    al,0x7d
  41f6f1:	jbe    0x41f6da
  41f6f3:	inc    ebx
  41f6f4:	cmp    ebp,ebx
  41f6f6:	xchg   edx,eax
  41f6f7:	mul    edx
  41f6f9:	lahf   
  41f6fa:	and    DWORD PTR [edi],ecx
  41f6fc:	or     DWORD PTR [edi-0x2adebea6],edi
  41f702:	rcl    DWORD PTR [eax],1
  41f704:	call   0x19fafffa
  41f709:	xor    al,0xf2
  41f70b:	or     eax,0x99686af1
  41f710:	test   eax,0x5b53407e
  41f715:	aas    
  41f716:	(bad)  
  41f717:	fdiv   QWORD PTR [edx]
  41f719:	stc    
  41f71a:	pop    ebp
  41f71b:	fxch   st(1)
  41f71d:	mul    BYTE PTR [edx]
  41f71f:	cwde   
  41f720:	popa   
  41f721:	or     ch,BYTE PTR [esi+0x40]
  41f724:	(bad)  
  41f726:	popf   
  41f727:	push   esi
  41f728:	arpl   sp,di
  41f72a:	outs   dx,BYTE PTR ds:[esi]
  41f72b:	xchg   ebx,eax
  41f72c:	inc    ecx
  41f72d:	mov    bh,0x86
  41f72f:	int3   
  41f730:	or     ah,ch
  41f732:	shl    DWORD PTR [esi+ecx*1],cl
  41f735:	mov    DWORD PTR [edi+0x656c4b62],edx
  41f73b:	xchg   ebx,eax
  41f73c:	rol    dl,cl
  41f73e:	mov    ch,0x7e
  41f740:	imul   ebp,DWORD PTR [edi+edx*4],0x3
  41f744:	outs   dx,DWORD PTR ds:[esi]
  41f745:	xchg   ecx,eax
  41f746:	out    dx,eax
  41f747:	data16 jae 0x41f774
  41f74a:	mov    edx,0x29d2c7a7
  41f74f:	gs cmc 
  41f751:	dec    ebp
  41f752:	inc    edi
  41f753:	push   0xffffffbb
  41f755:	dec    ebx
  41f756:	and    al,0x52
  41f758:	or     al,0x21
  41f75a:	ret    
  41f75b:	jnp    0x41f7d1
  41f75d:	gs stos BYTE PTR es:[edi],al
  41f75f:	outs   dx,DWORD PTR ds:[esi]
  41f760:	repz or BYTE PTR [esi+eiz*1+0x1a],cl
  41f765:	cmp    eax,0x932008fa
  41f76a:	pop    eax
  41f76b:	jmp    0xf7b4:0x8b3c3acd
  41f772:	jae    0x41f75a
  41f774:	jnp    0x41f78c
  41f776:	fmul   QWORD PTR [ecx+0x4efbc8fc]
  41f77c:	lahf   
  41f77d:	mov    eax,0xdc8593b6
  41f782:	loope  0x41f711
  41f784:	cwde   
  41f785:	jg     0x41f752
  41f787:	cmp    esi,DWORD PTR [ecx+0x4d12c7c8]
  41f78d:	mov    eax,0x641feb24
  41f792:	aaa    
  41f793:	jnp    0x41f74f
  41f795:	fstp   QWORD PTR [eax*1-0x56733229]
  41f79c:	xchg   ebx,eax
  41f79d:	outs   dx,DWORD PTR ds:[esi]
  41f79e:	jmp    0x41f7d2
  41f7a0:	mov    fs:0xccc4290e,eax
  41f7a6:	stos   DWORD PTR es:[edi],eax
  41f7a7:	jbe    0x41f744
  41f7a9:	xlat   BYTE PTR ds:[ebx]
  41f7aa:	mov    edx,0x499e6d69
  41f7af:	mov    bl,0x9a
  41f7b1:	(bad)  
  41f7b2:	xchg   ebp,eax
  41f7b3:	mov    eax,ds:0xb09b6660
  41f7b8:	stc    
  41f7b9:	mov    ecx,0x298274ed
  41f7be:	in     al,dx
  41f7bf:	or     al,0x5c
  41f7c1:	rcl    esp,0x18
  41f7c4:	add    BYTE PTR [ebp+0x3078b8bf],0x73
  41f7cb:	fist   WORD PTR [edx+0x5ec9d53]
  41f7d1:	pop    ebx
  41f7d2:	mov    eax,ds:0x9bf03727
  41f7d7:	inc    esi
  41f7d8:	test   DWORD PTR [eax-0x5],ecx
  41f7db:	add    ebp,DWORD PTR [edx+0x7f310949]
  41f7e1:	mov    bh,0xbe
  41f7e3:	jno    0x41f827
  41f7e5:	hlt    
  41f7e6:	jbe    0x41f7d5
  41f7e8:	mov    al,0x9d
  41f7ea:	mov    al,0x7d
  41f7ec:	inc    DWORD PTR [ebx]
  41f7ee:	iret   
  41f7ef:	clc    
  41f7f0:	rcr    BYTE PTR [ebp+esi*1-0x3d],1
  41f7f4:	out    dx,al
  41f7f5:	(bad)  
  41f7f8:	jge    0x41f7bf
  41f7fa:	leave  
  41f7fb:	iret   
  41f7fc:	out    dx,al
  41f7fd:	leave  
  41f7fe:	jmp    0x239b:0x526697aa
  41f805:	xadd   BYTE PTR ds:0x8b7c95d4,al
  41f80c:	test   ch,ch
  41f80e:	jb     0x41f797
  41f810:	aad    0x78
  41f812:	into   
  41f813:	adc    ah,bh
  41f815:	and    al,0xe
  41f817:	or     eax,0x8c5eb04c
  41f81c:	push   ebp
  41f81d:	dec    edi
  41f81e:	xor    al,0xd7
  41f820:	gs push 0xffffffe7
  41f823:	push   esi
  41f824:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f825:	jo     0x41f7aa
  41f827:	adc    eax,0x48507566
  41f82c:	cmp    eax,0xf273f0e4
  41f831:	dec    ebp
  41f832:	loopne 0x41f844
  41f834:	or     al,0xe
  41f836:	leave  
  41f837:	jns    0x41f7df
  41f839:	ins    DWORD PTR es:[edi],dx
  41f83a:	xor    ch,BYTE PTR [edi+edx*1-0x6600cb87]
  41f841:	leave  
  41f842:	xchg   edx,eax
  41f843:	mov    al,ds:0x51a2184
  41f848:	mov    edx,0xf27b7013
  41f84d:	repz sub DWORD PTR [edx],edi
  41f850:	in     eax,0x4e
  41f852:	xchg   ecx,eax
  41f853:	fisttp WORD PTR [ebx-0x623ae5de]
  41f859:	aad    0x9f
  41f85b:	or     BYTE PTR [ecx+0x4a],ah
  41f85e:	mov    ch,BYTE PTR [ebp-0x66]
  41f861:	cdq    
  41f862:	sar    DWORD PTR ds:0xd3275bf4,0xa4
  41f869:	adc    bh,dl
  41f86b:	add    bh,BYTE PTR [edx+ecx*1]
  41f86e:	aam    0x95
  41f870:	or     dl,BYTE PTR [ecx-0x14]
  41f873:	outs   dx,DWORD PTR ds:[esi]
  41f874:	ins    BYTE PTR es:[edi],dx
  41f875:	xor    BYTE PTR [edi+eax*4],cl
  41f878:	rol    edx,1
  41f87a:	mov    ch,0x4c
  41f87c:	jp     0x41f80b
  41f87e:	call   0x6e4c4fe9
  41f883:	out    0x0,al
  41f885:	arpl   di,bx
  41f887:	jbe    0x41f908
  41f889:	adc    BYTE PTR [ebx],bh
  41f88b:	jecxz  0x41f825
  41f88d:	fcom   QWORD PTR [ecx+0x2138498e]
  41f893:	pop    ebx
  41f894:	fist   DWORD PTR [ebx+eax*1+0x67561778]
  41f89b:	mov    ds:0x706203cd,al
  41f8a0:	retf   
  41f8a1:	es pop ebp
  41f8a3:	mov    edi,0x33ecd4bb
  41f8a9:	add    DWORD PTR [esi-0xfbbdda9],esp
  41f8af:	into   
  41f8b0:	aad    0xd5
  41f8b2:	xor    ah,BYTE PTR [edx]
  41f8b4:	push   edx
  41f8b5:	mov    ebp,0x207637d0
  41f8ba:	and    eax,DWORD PTR [ecx+ebx*2+0x367fbd30]
  41f8c1:	adc    ch,al
  41f8c3:	les    edx,FWORD PTR [esi-0x625e3419]
  41f8c9:	fcmovnu st,st(6)
  41f8cb:	pop    esp
  41f8cc:	or     BYTE PTR [ebx],cl
  41f8ce:	stc    
  41f8cf:	and    BYTE PTR [ebp-0x616f9ad8],bh
  41f8d5:	xor    ecx,0xffffff8e
  41f8d8:	lock icebp 
  41f8da:	dec    DWORD PTR [ebx+0x4f]
  41f8dd:	xchg   edx,eax
  41f8de:	cmp    bh,BYTE PTR [edi]
  41f8e0:	icebp  
  41f8e1:	seta   BYTE PTR [edx]
  41f8e4:	stc    
  41f8e5:	and    eax,0x66c4422
  41f8ea:	gs scas eax,DWORD PTR es:[edi]
  41f8ec:	popa   
  41f8ed:	add    DWORD PTR [ebx-0x2b6127d3],ebp
  41f8f3:	push   eax
  41f8f4:	mov    ch,0xd5
  41f8f6:	int3   
  41f8f7:	fdivr  QWORD PTR [ebp-0x1aed5a4b]
  41f8fd:	data16 cmp cl,BYTE PTR [eax-0x27]
  41f901:	outs   dx,BYTE PTR ds:[esi]
  41f902:	(bad)
  41f905:	fdiv   QWORD PTR [ecx+0x1e]
  41f908:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f909:	jnp    0x41f971
  41f90b:	scas   al,BYTE PTR es:[edi]
  41f90c:	dec    ecx
  41f90d:	xchg   ebx,eax
  41f90e:	adc    cl,BYTE PTR [ebx-0x78]
  41f911:	fucomp st(3)
  41f913:	mov    fs,WORD PTR [esi]
  41f915:	ret    0x6a3c
  41f918:	jae    0x41f98d
  41f91a:	mov    gs,WORD PTR [eax+0x339de706]
  41f920:	scas   al,BYTE PTR es:[edi]
  41f921:	adc    esp,DWORD PTR [edi+ebx*2]
  41f924:	inc    edi
  41f925:	call   DWORD PTR [edi+0x23]
  41f928:	aad    0x61
  41f92a:	push   DWORD PTR [edx-0x3d35f828]
  41f930:	test   eax,0x296f9b21
  41f935:	mov    al,0xcf
  41f937:	dec    edi
  41f938:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f939:	mov    ecx,0xb0eb0d68
  41f93e:	daa    
  41f93f:	scas   eax,DWORD PTR es:[edi]
  41f940:	ficomp DWORD PTR [ecx+eiz*1]
  41f943:	mov    DWORD PTR [ecx+0x9],esp
  41f946:	mov    dl,0x7f
  41f948:	fucom  st(7)
  41f94a:	mov    esp,0xddeb8074
  41f94f:	push   ebx
  41f950:	pop    esp
  41f951:	fs mov edx,0xde5fecac
  41f957:	xchg   ebp,eax
  41f958:	dec    edi
  41f959:	lea    eax,[ecx+esi*2-0x3b0e106c]
  41f960:	pop    ebp
  41f961:	inc    ebp
  41f962:	repnz aam 0x9e
  41f965:	sbb    cl,bh
  41f967:	jg     0x41f9db
  41f969:	aas    
  41f96a:	jns    0x41f99c
  41f96c:	ror    DWORD PTR [edi-0x75],0x66
  41f970:	and    BYTE PTR [ebx+0x112aab6a],0x45
  41f977:	mov    ah,0x6c
  41f979:	cmp    DWORD PTR [edi],edi
  41f97b:	cmp    edx,DWORD PTR [ebp+0x67]
  41f97e:	sub    eax,0xe30b39a8
  41f983:	ins    BYTE PTR es:[edi],dx
  41f984:	repz sub al,0xc5
  41f987:	ja     0x41f944
  41f989:	fisttp WORD PTR [eax+0x2a]
  41f98c:	icebp  
  41f98d:	jno    0x41fa0a
  41f98f:	loop   0x41f97f
  41f991:	mov    edx,0x7c0cef48
  41f996:	std    
  41f997:	mov    esi,0xef869bac
  41f99c:	jp     0x41f9b4
  41f99e:	(bad)  
  41f99f:	sbb    eax,0xb83e0aa8
  41f9a4:	sub    ch,ch
  41f9a6:	sbb    eax,eax
  41f9a8:	lods   al,BYTE PTR ds:[esi]
  41f9a9:	push   ds
  41f9aa:	fiadd  DWORD PTR [ebp-0x38]
  41f9ad:	sbb    eax,0xbc29f53c
  41f9b2:	gs push edi
  41f9b4:	iret   
  41f9b5:	imul   eax,DWORD PTR ds:0x47ca3cca,0x5f4849a
  41f9bf:	(bad)  
  41f9c1:	mov    ecx,0xbee65ceb
  41f9c6:	into   
  41f9c7:	cmp    bh,0x43
  41f9ca:	clc    
  41f9cb:	pop    edx
  41f9cc:	daa    
  41f9cd:	xlat   BYTE PTR ds:[ebx]
  41f9ce:	push   cs
  41f9cf:	(bad)  
  41f9d0:	aas    
  41f9d1:	shl    BYTE PTR [edx-0x3b],1
  41f9d4:	sbb    eax,0xa2bad17d
  41f9d9:	retf   0xa886
  41f9dc:	adc    DWORD PTR [eax],esi
  41f9de:	out    0xad,al
  41f9e0:	xor    al,0x16
  41f9e2:	int3   
  41f9e3:	jb     0x41f9f7
  41f9e5:	mov    edi,0x208f6a85
  41f9ea:	push   cs
  41f9eb:	dec    eax
  41f9ec:	mov    edi,0xf43b48da
  41f9f1:	jle    0x41f9fc
  41f9f3:	bound  ebp,QWORD PTR [esp+eiz*4+0x1a]
  41f9f7:	jbe    0x88e802b6
  41f9fd:	or     DWORD PTR [edx-0x5c],ebp
  41fa00:	cmp    BYTE PTR [ebx],bh
  41fa02:	(bad)  [ecx-0x1754b23f]
  41fa08:	sub    al,0x2b
  41fa0a:	inc    esp
  41fa0b:	stos   BYTE PTR es:[edi],al
  41fa0c:	add    dl,bl
  41fa0e:	les    eax,FWORD PTR [edi]
  41fa10:	sti    
  41fa11:	inc    ecx
  41fa12:	rcr    BYTE PTR [eax-0x65a6819c],0x4a
  41fa19:	pop    ss
  41fa1a:	retf   0xc335
  41fa1d:	bound  esi,QWORD PTR [edi+0x7a]
  41fa20:	fwait
  41fa21:	(bad)  
  41fa22:	sbb    edx,DWORD PTR [edx+0x12]
  41fa25:	inc    esp
  41fa26:	out    dx,al
  41fa27:	mov    ebp,0xf03ff51f
  41fa2c:	jecxz  0x41fa8d
  41fa2e:	ret    0xfd53
  41fa31:	in     al,0x60
  41fa33:	adc    al,0x2f
  41fa35:	pop    ds
  41fa36:	popa   
  41fa37:	mov    cl,0xa1
  41fa39:	(bad)  
  41fa3b:	scas   eax,DWORD PTR es:[edi]
  41fa3c:	out    dx,al
  41fa3d:	(bad)  
  41fa3e:	(bad)  [ebp+0x2bb2991e]
  41fa44:	ins    DWORD PTR es:[edi],dx
  41fa45:	dec    eax
  41fa46:	hlt    
  41fa47:	repnz mov edi,0x90402ef4
  41fa4d:	test   BYTE PTR [ecx+0x3d8bb404],dl
  41fa53:	scas   al,BYTE PTR es:[edi]
  41fa54:	sbb    al,0x53
  41fa56:	and    BYTE PTR [edi],0x48
  41fa59:	sub    edi,ebp
  41fa5b:	mov    esi,0xfc872820
  41fa60:	sbb    eax,0x7cb554
  41fa65:	repnz ficom DWORD PTR [esi+eax*4-0x17be99cb]
  41fa6d:	inc    eax
  41fa6e:	pop    eax
  41fa6f:	inc    edi
  41fa70:	push   edx
  41fa71:	loop   0x41fa7a
  41fa73:	and    ecx,0xcd388d22
  41fa79:	in     eax,dx
  41fa7a:	imul   edx,DWORD PTR [esi-0x12],0xfdef8cf2
  41fa81:	inc    edx
  41fa82:	xchg   bh,dh
  41fa84:	inc    edi
  41fa85:	popa   
  41fa86:	fist   WORD PTR [eax]
  41fa88:	pop    esi
  41fa89:	out    0x46,al
  41fa8b:	xchg   ax,ax
  41fa8d:	gs jbe 0x41fae0
  41fa90:	jne    0x41fa38
  41fa92:	jns    0x41fb03
  41fa94:	repz xlat BYTE PTR ds:[ebx]
  41fa96:	clc    
  41fa97:	sub    ebx,DWORD PTR [ebp+0x6f]
  41fa9a:	jno    0x41fa35
  41fa9c:	mov    bl,0xf8
  41fa9e:	jne    0x41fabd
  41faa0:	sub    BYTE PTR [esi+0xe],0xdf
  41faa4:	inc    esp
  41faa5:	retf   0x96a2
  41faa8:	sbb    eax,0x5c607e94
  41faad:	sbb    BYTE PTR [ecx+eax*8-0x16],dl
  41fab1:	out    0x65,eax
  41fab3:	cmc    
  41fab4:	and    dh,BYTE PTR [edi]
  41fab6:	test   DWORD PTR [esi-0x5575b91d],0x697c149c
  41fac0:	aam    0x10
  41fac2:	push   ebx
  41fac3:	sti    
  41fac4:	and    esi,0x220208ef
  41faca:	xor    BYTE PTR [esi+esi*2+0x33],0xc5
  41facf:	stc    
  41fad0:	push   esp
  41fad1:	fldcw  WORD PTR [ecx+0x27024472]
  41fad7:	dec    edx
  41fad8:	inc    eax
  41fad9:	dec    ebp
  41fada:	rcl    esi,1
  41fadc:	and    ah,bh
  41fade:	ficom  WORD PTR [eax]
  41fae0:	jo     0x41fa6e
  41fae2:	xchg   DWORD PTR [esi],ebp
  41fae4:	add    BYTE PTR ds:0xf0fa8987,ah
  41faea:	sar    BYTE PTR [edi-0x32],cl
  41faed:	neg    DWORD PTR [esi+0x6f]
  41faf0:	adc    edi,eax
  41faf2:	outs   dx,DWORD PTR ds:[esi]
  41faf3:	and    BYTE PTR [ecx+0x19],0x69
  41faf7:	xchg   ebp,eax
  41faf8:	aad    0x28
  41fafa:	aad    0xb
  41fafc:	daa    
  41fafd:	pop    esp
  41fafe:	sbb    ebx,DWORD PTR [ecx]
  41fb00:	je     0x41fb28
  41fb02:	mov    bh,BYTE PTR [edi+ebx*4]
  41fb05:	sub    cl,cl
  41fb07:	sti    
  41fb08:	rcl    BYTE PTR [edi+0x31],0x9
  41fb0c:	retf   0x81e1
  41fb0f:	jp     0x41fab9
  41fb11:	push   0xbe0f50a3
  41fb16:	rcr    DWORD PTR [ebp+0x1e94e1d8],1
  41fb1c:	iret   
  41fb1d:	push   esp
  41fb1e:	inc    edx
  41fb1f:	sub    eax,0x65c11b93
  41fb24:	(bad)  
  41fb25:	adc    al,0x41
  41fb27:	inc    edx
  41fb28:	stc    
  41fb29:	mov    edi,0x6847efa6
  41fb2e:	arpl   WORD PTR [ecx],di
  41fb30:	jecxz  0x41fb5c
  41fb32:	or     al,0x55
  41fb34:	fbld   TBYTE PTR [eax]
  41fb36:	loop   0x41fb3b
  41fb38:	ins    BYTE PTR es:[edi],dx
  41fb39:	jge    0x41fb07
  41fb3b:	sbb    bl,bh
  41fb3d:	mov    ecx,ecx
  41fb3f:	fwait
  41fb40:	xchg   ebx,eax
  41fb41:	or     eax,0xc765f032
  41fb46:	loope  0x41faed
  41fb48:	pop    edi
  41fb49:	nop
  41fb4a:	cmp    ebx,DWORD PTR [ebp-0x5a8a950d]
  41fb50:	jne    0x41fbac
  41fb52:	in     eax,0xf0
  41fb54:	mov    bh,0xc2
  41fb56:	mov    ah,BYTE PTR [eax+0x3b6a987a]
  41fb5c:	addr16 and eax,0xd4c0861e
  41fb62:	and    eax,0xd2905ea4
  41fb67:	push   ss
  41fb68:	cmp    al,0x39
  41fb6a:	mov    esp,?
  41fb6c:	lock mov ecx,0x73f86238
  41fb72:	or     al,cl
  41fb74:	test   BYTE PTR [ebx-0x4b],dl
  41fb77:	pop    esi
  41fb78:	test   al,0x9
  41fb7a:	cdq    
  41fb7b:	loope  0x41fb87
  41fb7d:	test   BYTE PTR [esi],0x85
  41fb80:	ds in  al,0xda
  41fb83:	push   es
  41fb84:	push   edx
  41fb85:	lds    esi,FWORD PTR [ebx-0x71082f60]
  41fb8b:	retf   
  41fb8c:	retf   0x5770
  41fb8f:	dec    esi
  41fb90:	outs   dx,BYTE PTR ds:[esi]
  41fb91:	push   0x8ce7e65c
  41fb96:	(bad)  
  41fb97:	call   0x397cd49f
  41fb9c:	mov    ah,0x5d
  41fb9e:	inc    ebx
  41fb9f:	push   edx
  41fba0:	clc    
  41fba1:	scas   al,BYTE PTR es:[edi]
  41fba2:	jecxz  0x41fbb0
  41fba4:	add    DWORD PTR [edi+0x56],0x36cfe9fa
  41fbab:	outs   dx,BYTE PTR ds:[esi]
  41fbac:	sbb    edx,DWORD PTR es:[ecx+0x64]
  41fbb0:	popf   
  41fbb1:	mov    DWORD PTR [ecx],ecx
  41fbb3:	mov    esp,0xb7637749
  41fbb8:	inc    esp
  41fbb9:	(bad)  
  41fbba:	in     al,0x6e
  41fbbc:	jecxz  0x41fb82
  41fbbe:	pop    ecx
  41fbbf:	sub    edx,eax
  41fbc1:	jmp    DWORD PTR [edi]
  41fbc3:	pop    ds
  41fbc4:	push   ss
  41fbc5:	add    DWORD PTR [eax],ebx
  41fbc7:	cvtps2pd xmm5,xmm2
  41fbca:	pop    edx
  41fbcb:	addr16 cld 
  41fbcd:	push   ebp
  41fbce:	(bad)  
  41fbcf:	test   eax,0x5ae6a917
  41fbd4:	(bad)  
  41fbd5:	call   0xde4e4f5e
  41fbda:	xor    al,0x49
  41fbdc:	ins    BYTE PTR es:[edi],dx
  41fbdd:	int    0x6c
  41fbdf:	mov    ebx,0x2e7e1899
  41fbe4:	jne    0x41fc3b
  41fbe6:	(bad)  
  41fbe7:	mov    ch,0x46
  41fbe9:	dec    edi
  41fbea:	cmp    al,BYTE PTR [eax]
  41fbec:	push   esi
  41fbed:	jmp    0xcae30e01
  41fbf2:	add    DWORD PTR [edx],esi
  41fbf4:	and    eax,0xeb9ec1e8
  41fbf9:	lahf   
  41fbfa:	xchg   esp,eax
  41fbfb:	fadd   DWORD PTR [edx+0x6a3b3a04]
  41fc01:	lods   al,BYTE PTR ds:[esi]
  41fc02:	pop    edx
  41fc03:	loopne 0x41fc16
  41fc05:	mov    ch,0x51
  41fc07:	lods   al,BYTE PTR ds:[esi]
  41fc08:	jl     0x41fc74
  41fc0a:	test   BYTE PTR [edx],al
  41fc0c:	sti    
  41fc0d:	jno    0x41fc71
  41fc0f:	jecxz  0x41fc32
  41fc11:	retf   
  41fc12:	pop    ecx
  41fc13:	dec    eax
  41fc14:	xchg   ecx,eax
  41fc15:	or     al,0x9b
  41fc17:	pop    edx
  41fc18:	popa   
  41fc19:	(bad)  
  41fc1a:	out    0xbd,eax
  41fc1c:	fxch   st(2)
  41fc1e:	mov    ch,0x7a
  41fc20:	mov    esi,fs
  41fc22:	inc    ebx
  41fc23:	std    
  41fc24:	lods   al,BYTE PTR ds:[esi]
  41fc25:	sub    ah,BYTE PTR [edx+0x14]
  41fc28:	cmp    DWORD PTR [ebx-0x6c63ed8c],esp
  41fc2e:	pop    ds
  41fc2f:	sahf   
  41fc30:	cdq    
  41fc31:	sub    dl,BYTE PTR [ebp+0x812ef17]
  41fc37:	pop    ss
  41fc38:	les    ebx,FWORD PTR [eax+0x6c]
  41fc3b:	add    BYTE PTR [edx+0x2811b2aa],cl
  41fc41:	in     eax,dx
  41fc42:	jg     0x41fcac
  41fc44:	test   al,0x4
  41fc46:	stos   DWORD PTR es:[edi],eax
  41fc47:	dec    edi
  41fc48:	jmp    0x5f3f6fd5
  41fc4d:	sub    eax,0xed524859
  41fc52:	xchg   ecx,eax
  41fc53:	and    eax,0xdda49d59
  41fc58:	dec    eax
  41fc59:	lea    eax,[ecx-0x15652992]
  41fc5f:	jno    0x41fcd3
  41fc61:	int    0xca
  41fc63:	adc    eax,0x543a76c0
  41fc68:	loopne 0x41fcd1
  41fc6a:	pop    ds
  41fc6b:	icebp  
  41fc6c:	cmp    BYTE PTR [ebx+0x288dd630],bh
  41fc72:	ins    BYTE PTR es:[edi],dx
  41fc73:	jg     0x41fc92
  41fc75:	dec    ebp
  41fc76:	sbb    DWORD PTR [esi+0x35],esp
  41fc79:	test   eax,0x49786250
  41fc7f:	mov    dh,0x33
  41fc81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc82:	or     BYTE PTR [ebx],ah
  41fc84:	mov    BYTE PTR [ecx-0x11],al
  41fc87:	popa   
  41fc88:	pop    ebx
  41fc89:	shr    DWORD PTR [esi+0x44],1
  41fc8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc8d:	inc    ecx
  41fc8e:	(bad)  
  41fc8f:	xor    BYTE PTR [eax+eax*4+0x5dd2ae4a],dh
  41fc96:	dec    DWORD PTR [ebp+0x23]
  41fc99:	push   ds
  41fc9a:	sar    BYTE PTR [esi-0x6e017cac],0xc2
  41fca1:	(bad)  
  41fca2:	dec    eax
  41fca3:	fiadd  DWORD PTR [edx-0x4a]
  41fca6:	sahf   
  41fca7:	jge    0x41fc5e
  41fca9:	daa    
  41fcaa:	(bad)  
  41fcab:	push   esp
  41fcac:	aad    0x86
  41fcae:	test   al,0x8f
  41fcb0:	sub    dh,dh
  41fcb2:	adc    BYTE PTR [ebx-0x7a],cl
  41fcb5:	cmc    
  41fcb6:	ins    BYTE PTR es:[edi],dx
  41fcb7:	push   ebp
  41fcb8:	in     eax,0xdb
  41fcba:	clc    
  41fcbb:	xchg   BYTE PTR [edi+0x3516553e],cl
  41fcc1:	popf   
  41fcc2:	fistp  WORD PTR [esi+0x306383ad]
  41fcc8:	(bad)  
  41fcca:	cld    
  41fccb:	xlat   BYTE PTR ds:[ebx]
  41fccc:	loope  0x41fd38
  41fcce:	mov    ecx,ebp
  41fcd0:	jle    0x41fcc6
  41fcd2:	jmp    0xd56b0b72
  41fcd7:	push   ebp
  41fcd8:	in     eax,0x65
  41fcda:	xlat   BYTE PTR ds:[ebx]
  41fcdb:	mov    ch,0x31
  41fcdd:	pop    ebx
  41fcde:	pop    ds
  41fcdf:	pop    eax
  41fce0:	pop    ss
  41fce1:	unpcklps xmm7,XMMWORD PTR [edx+0x6d3c0b98]
  41fce8:	cmp    al,0xe0
  41fcea:	call   0xf7ea:0xeb40aadc
  41fcf1:	clc    
  41fcf2:	not    BYTE PTR [eax+edi*8+0x3b]
  41fcf6:	push   edi
  41fcf7:	out    dx,al
  41fcf8:	xor    eax,0xcb69210d
  41fcfd:	add    al,0x7
  41fcff:	call   0x3abafc2
  41fd04:	popa   
  41fd05:	test   eax,0x4e3f0adf
  41fd0a:	das    
  41fd0b:	sbb    ebx,DWORD PTR [ebp-0x42cab540]
  41fd11:	das    
  41fd12:	shr    BYTE PTR [esi+0x4c038991],cl
  41fd18:	dec    esi
  41fd19:	pop    ebx
  41fd1a:	cmp    al,0x19
  41fd1c:	retf   
  41fd1d:	pop    ebx
  41fd1e:	fistp  DWORD PTR [edi+ebx*4-0x1bf80b60]
  41fd25:	jmp    0x31668dcc
  41fd2a:	mov    WORD PTR [eax+0x4e],gs
  41fd2d:	pusha  
  41fd2e:	push   esi
  41fd2f:	repz adc ebx,DWORD PTR [esi-0x19]
  41fd33:	rcr    DWORD PTR [eax-0x64],0x77
  41fd37:	push   edx
  41fd38:	mov    dl,0x2f
  41fd3a:	jno    0x41fd8b
  41fd3c:	pop    ebp
  41fd3d:	inc    eax
  41fd3e:	jne    0x41fcf3
  41fd40:	imul   esp,DWORD PTR [ebx-0x4951541e],0x4822d504
  41fd4a:	mov    esp,fs
  41fd4c:	xchg   ecx,eax
  41fd4d:	push   eax
  41fd4e:	hlt    
  41fd4f:	pop    ss
  41fd50:	enter  0xd740,0x58
  41fd54:	int3   
  41fd55:	pop    es
  41fd56:	nop
  41fd57:	jle    0x41fd47
  41fd59:	mov    edx,0x2102a481
  41fd5e:	pop    ebx
  41fd5f:	stos   DWORD PTR es:[edi],eax
  41fd60:	pop    edi
  41fd61:	push   0x22
  41fd63:	aad    0xb4
  41fd65:	push   0x73daef0b
  41fd6a:	leave  
  41fd6b:	int    0x5c
  41fd6d:	retf   0x710
  41fd70:	mov    ah,bl
  41fd72:	or     dh,BYTE PTR [esi]
  41fd74:	adc    cl,bl
  41fd76:	push   ss
  41fd77:	adc    bh,BYTE PTR [edi+0xe6c7560]
  41fd7d:	dec    ebx
  41fd7e:	sbb    bh,BYTE PTR [esp+esi*8-0x8575629]
  41fd85:	mov    eax,ds:0x57d76021
  41fd8a:	(bad)  [edx-0x77]
  41fd8d:	xchg   esp,eax
  41fd8e:	lahf   
  41fd8f:	push   ss
  41fd90:	popa   
  41fd91:	and    BYTE PTR [ebx-0x242ef07d],dl
  41fd97:	(bad)  
  41fd98:	daa    
  41fd99:	mov    bl,0xca
  41fd9b:	xor    DWORD PTR [ebx-0x1f46d37e],0xffffffbc
  41fda2:	mov    BYTE PTR [esi-0x22],dh
  41fda5:	or     DWORD PTR [ecx+eax*1-0x18],eax
  41fda9:	dec    ecx
  41fdab:	and    ebx,edx
  41fdad:	mov    dh,0x3
  41fdaf:	into   
  41fdb0:	xor    DWORD PTR [eax-0x583d931d],0x5e7ca219
  41fdba:	dec    esp
  41fdbb:	pushf  
  41fdbc:	ficomp WORD PTR [eax+ebx*8+0x14]
  41fdc0:	xor    eax,0x984719c7
  41fdc5:	mov    ah,0x78
  41fdc7:	pop    ds
  41fdc8:	addr16 repz out dx,al
  41fdcb:	and    eax,DWORD PTR [ebx]
  41fdcd:	adc    al,0xf7
  41fdcf:	mov    esp,0x1f242fad
  41fdd4:	mov    eax,0x6f9d7c82
  41fdd9:	loop   0x41fd9d
  41fddb:	adc    BYTE PTR [edx+0x2],dl
  41fdde:	nop
  41fddf:	adc    esp,edx
  41fde1:	pop    esp
  41fde2:	push   ecx
  41fde3:	stos   DWORD PTR es:[edi],eax
  41fde4:	stc    
  41fde5:	cmp    ecx,DWORD PTR [edi]
  41fde7:	push   edx
  41fde8:	jnp    0x41fd76
  41fdea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdeb:	das    
  41fdec:	(bad)
  41fdf0:	jne    0x41fdbb
  41fdf2:	cmp    DWORD PTR [ebp+eiz*2-0x36],eax
  41fdf6:	push   ecx
  41fdf7:	fidivr WORD PTR [eax]
  41fdf9:	aas    
  41fdfa:	stc    
  41fdfb:	sbb    DWORD PTR gs:[ebp-0x43],esi
  41fdff:	mov    ch,BYTE PTR [ebx+0x45]
  41fe02:	pop    esp
  41fe03:	out    0x2a,al
  41fe05:	jp     0x41fe27
  41fe07:	or     DWORD PTR [ebx+0x4ddf2679],edx
  41fe0d:	test   DWORD PTR [ebx+0x32e103ba],edi
  41fe13:	adc    al,0x97
  41fe15:	int    0xd1
  41fe17:	fnstenv [edi+0x466a0a83]
  41fe1d:	and    al,0x8c
  41fe1f:	pop    ecx
  41fe20:	inc    edx
  41fe21:	js     0x41fddf
  41fe23:	cmp    BYTE PTR [ebx],ah
  41fe25:	push   esp
  41fe26:	adc    ebp,DWORD PTR [ebp+0x73]
  41fe29:	mov    bh,0xf7
  41fe2b:	lea    edx,[ebx-0x38]
  41fe2e:	or     al,0x17
  41fe30:	(bad)  
  41fe31:	clc    
  41fe32:	popa   
  41fe33:	add    eax,0x991929b7
  41fe38:	fs pop esi
  41fe3a:	call   0xb3e6999f
  41fe3f:	shl    esp,1
  41fe41:	xchg   edi,eax
  41fe42:	xor    dl,dh
  41fe44:	cmp    eax,0xd62e0b2b
  41fe49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe4a:	inc    ecx
  41fe4b:	lods   eax,DWORD PTR ds:[esi]
  41fe4c:	inc    esp
  41fe4d:	icebp  
  41fe4e:	ins    DWORD PTR es:[edi],dx
  41fe4f:	dec    edx
  41fe50:	or     eax,0xf2e0369d
  41fe55:	aaa    
  41fe56:	add    eax,0xbd1448cd
  41fe5b:	imul   esp,DWORD PTR [esp+edx*8-0x68],0xffffffe3
  41fe60:	lea    eax,[ebx-0x3d065c5d]
  41fe66:	icebp  
  41fe67:	adc    DWORD PTR [edi],edx
  41fe69:	sbb    BYTE PTR [ebp-0x33],ch
  41fe6c:	fbld   TBYTE PTR [ecx+0x6d0ae3cc]
  41fe72:	repz sub dh,0xc
  41fe76:	scas   al,BYTE PTR es:[edi]
  41fe77:	push   0xb8f08f8c
  41fe7c:	pop    eax
  41fe7d:	mov    ?,WORD PTR [edi+0x1cc8be7a]
  41fe83:	ins    DWORD PTR es:[edi],dx
  41fe84:	cli    
  41fe85:	pop    ebp
  41fe86:	(bad)
  41fe89:	cwde   
  41fe8a:	adc    DWORD PTR [eax],0x7f
  41fe8d:	mov    al,0x1e
  41fe8f:	push   ss
  41fe90:	sahf   
  41fe91:	sbb    BYTE PTR [ebx+0x294fd00f],0xbe
  41fe98:	sbb    BYTE PTR [eax-0x19],dh
  41fe9b:	js     0x41fee6
  41fe9d:	sbb    eax,0x1c8f8d4e
  41fea2:	aaa    
  41fea3:	xchg   ebp,eax
  41fea4:	sub    al,0xf1
  41fea6:	imul   esp,DWORD PTR [ebp+0x73],0xfffffffd
  41feaa:	mov    DWORD PTR [esi],ebx
  41feac:	arpl   WORD PTR [eax+0x57],cx
  41feaf:	sahf   
  41feb0:	pop    eax
  41feb1:	ins    WORD PTR es:[edi],dx
  41feb3:	add    bl,ah
  41feb5:	ja     0x41fe5e
  41feb7:	ss es and al,0x1f
  41febb:	jle    0x41fe94
  41febd:	daa    
  41febe:	aas    
  41febf:	ss cdq 
  41fec1:	cld    
  41fec2:	mov    esp,es
  41fec4:	sbb    DWORD PTR [ebx],edx
  41fec6:	and    edi,eax
  41fec8:	aas    
  41fec9:	in     eax,0xbb
  41fecb:	lahf   
  41fecc:	cmp    eax,0xf7509229
  41fed1:	call   0xd3e7:0x24b75ea7
  41fed8:	mov    esp,0x4c66894a
  41fedd:	scas   al,BYTE PTR es:[edi]
  41fede:	jne    0x41feee
  41fee0:	test   eax,0x83739c76
  41fee5:	add    ecx,edi
  41fee7:	out    0x77,eax
  41fee9:	test   al,0x6f
  41feeb:	ss std 
  41feed:	mov    ch,0x73
  41feef:	jmp    0x968d:0xc92e7169
  41fef6:	pushf  
  41fef7:	(bad)  
  41fef8:	test   al,0x7e
  41fefa:	pusha  
  41fefb:	inc    ebx
  41fefc:	cmp    bh,BYTE PTR es:[ebx+0x5b]
  41ff00:	xchg   edx,eax
  41ff01:	mov    ebp,DWORD PTR [ebx-0x2b]
  41ff04:	jns    0x41feab
  41ff06:	(bad)  
  41ff07:	mov    bl,0x19
  41ff09:	pop    esp
  41ff0a:	je     0x41ff4c
  41ff0c:	sub    ecx,esi
  41ff0e:	sub    al,0x3e
  41ff10:	mov    bl,BYTE PTR [eax-0x46]
  41ff13:	and    eax,edi
  41ff15:	push   eax
  41ff16:	daa    
  41ff17:	mov    eax,0xed88f12a
  41ff1c:	mov    ch,0x70
  41ff1e:	mov    esi,0x7c299b49
  41ff23:	mov    cl,0x99
  41ff25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff26:	xchg   esi,eax
  41ff27:	stos   BYTE PTR es:[edi],al
  41ff28:	pop    ebx
  41ff29:	out    0xed,al
  41ff2b:	xchg   BYTE PTR [ebx+0x34],bl
  41ff2e:	or     dl,BYTE PTR [esi+eiz*8]
  41ff31:	push   ds
  41ff32:	fstp   QWORD PTR [edi+0x35]
  41ff35:	cdq    
  41ff36:	mov    esi,0x9c830c68
  41ff3b:	ds ret 0x56ee
  41ff3f:	mov    ds:0x63dac256,al
  41ff44:	pop    edx
  41ff45:	mov    ebp,0x3d5a9904
  41ff4a:	cmp    BYTE PTR [edi+0x2a7feb3e],al
  41ff50:	dec    edi
  41ff51:	mov    ah,0x55
  41ff53:	or     edx,DWORD PTR [esi+eax*1+0x2cc29dbe]
  41ff5a:	pop    ecx
  41ff5b:	lahf   
  41ff5c:	daa    
  41ff5d:	xchg   esi,eax
  41ff5e:	fidiv  DWORD PTR [ebp+0xe]
  41ff61:	mov    cl,0x16
  41ff63:	xchg   esi,eax
  41ff64:	lahf   
  41ff65:	outs   dx,BYTE PTR ds:[esi]
  41ff66:	dec    ebp
  41ff67:	sbb    eax,0x56b317af
  41ff6c:	lahf   
  41ff6d:	cmp    edi,DWORD PTR [ecx-0xa6ed98a]
  41ff73:	or     DWORD PTR [eax-0x3f50d4b1],esi
  41ff79:	ficomp WORD PTR [edi-0x5c]
  41ff7c:	or     esi,DWORD PTR [ebx+0xd]
  41ff7f:	mov    ch,0xea
  41ff81:	pop    eax
  41ff82:	inc    edx
  41ff83:	ins    DWORD PTR es:[edi],dx
  41ff84:	or     al,0x3c
  41ff86:	adc    DWORD PTR gs:[esi],0x7d
  41ff8a:	xchg   ecx,eax
  41ff8b:	pop    ecx
  41ff8c:	inc    ecx
  41ff8d:	inc    edi
  41ff8e:	mov    eax,ds:0x95a95e95
  41ff93:	pop    edi
  41ff94:	cmc    
  41ff95:	mov    ds:0x177b80c3,al
  41ff9a:	sub    al,0x7
  41ff9c:	cmp    al,0x5b
  41ff9e:	xchg   ebx,eax
  41ff9f:	dec    edx
  41ffa0:	pop    ebp
  41ffa1:	adc    eax,0x5e1e1a71
  41ffa6:	iret   
  41ffa7:	repz pop es
  41ffa9:	das    
  41ffaa:	add    BYTE PTR [edx+edx*1],0xc6
  41ffae:	sbb    esi,esp
  41ffb0:	cmc    
  41ffb1:	xor    DWORD PTR [eax+0x45],edx
  41ffb4:	sub    ebx,DWORD PTR [edx+eiz*1-0x40]
  41ffb8:	jnp    0x41ffc5
  41ffba:	mov    al,ds:0xcecea40a
  41ffbf:	xchg   edx,eax
  41ffc0:	imul   ecx,DWORD PTR [ecx-0x32],0x61
  41ffc4:	xchg   ebp,eax
  41ffc5:	sbb    bh,dl
  41ffc7:	int3   
  41ffc8:	push   es
  41ffc9:	mov    WORD PTR [ebp+0x5b5c0371],cs
  41ffcf:	jle    0x41ff7e
  41ffd1:	jecxz  0x41ffa5
  41ffd3:	cli    
  41ffd4:	push   ecx
  41ffd5:	scas   al,BYTE PTR es:[edi]
  41ffd6:	inc    ebp
  41ffd7:	shl    DWORD PTR [ecx],cl
  41ffd9:	mov    al,BYTE PTR [ebp+0x40]
  41ffdc:	mov    dl,0xce
  41ffde:	jb     0x42003c
  41ffe0:	inc    edi
  41ffe1:	mov    al,bh
  41ffe3:	(bad)  
  41ffe4:	hlt    
  41ffe5:	sbb    eax,0x9f177390
  41ffea:	ret    
  41ffeb:	int    0xcc
  41ffed:	jge    0x42006c
  41ffef:	dec    edi
  41fff0:	out    dx,al
  41fff1:	cwde   
  41fff2:	test   DWORD PTR [edi+0x589eead],ebx
  41fff8:	pop    ebx
  41fff9:	cs popf 
  41fffb:	(bad)  
  41fffc:	aam    0xe2
  41fffe:	push   esp
  41ffff:	xchg   edx,eax
  420000:	adc    eax,0x84b86cac
  420005:	add    BYTE PTR [edx-0x68],ah
  420008:	xor    BYTE PTR [edx-0x6a7bb5dc],0x3a
  42000f:	push   esp
  420010:	adc    al,0xa0
  420012:	mov    dh,0xb
  420014:	out    0xbf,al
  420016:	mov    al,ds:0x97464aeb
  42001b:	imul   edx,ebp,0x18
  42001e:	ins    BYTE PTR es:[edi],dx
  42001f:	fmul   DWORD PTR [edi+0x67f62c9c]
  420025:	loop   0x42009c
  420027:	in     al,dx
  420028:	mov    esp,DWORD PTR [esi+esi*8+0x43]
  42002c:	cmp    bh,BYTE PTR [ebx+0x5b4f244a]
  420032:	mov    bl,0xb1
  420034:	fiadd  DWORD PTR [edx]
  420036:	(bad)  
  420037:	fld    DWORD PTR [ecx]
  420039:	(bad)  
  42003b:	std    
  42003c:	mov    bh,0xbc
  42003e:	and    ecx,DWORD PTR [ecx+ecx*2+0x4f73364e]
  420045:	cmp    eax,0x97d5daa7
  42004a:	dec    ebx
  42004b:	les    esp,FWORD PTR [eax-0x4]
  42004e:	fadd   QWORD PTR [ebx]
  420050:	mov    ebx,0xe7d32979
  420055:	lfs    ecx,FWORD PTR [edi-0x3b]
  420059:	ins    DWORD PTR es:[edi],dx
  42005a:	mov    ebx,0x19d2a4e8
  42005f:	add    BYTE PTR [ebx-0x24f557af],dl
  420065:	jno    0x42000d
  420067:	add    DWORD PTR ds:0x7a503242,ebx
  42006d:	push   es
  42006e:	arpl   WORD PTR [eax],dx
  420070:	jno    0x420080
  420072:	leave  
  420073:	popa   
  420074:	xor    eax,0x9cb42c47
  420079:	mov    WORD PTR ss:[ebx],ds
  42007c:	fs push esp
  42007e:	test   DWORD PTR [edx],esi
  420080:	clc    
  420081:	or     ch,0x4a
  420084:	sbb    DWORD PTR [ecx],ecx
  420086:	and    al,0x5c
  420088:	enter  0xc310,0xb7
  42008c:	rcr    dh,1
  42008e:	lahf   
  42008f:	(bad)  
  420090:	pusha  
  420091:	pop    esp
  420092:	push   ss
  420093:	imul   edi,DWORD PTR [ebp-0x1c10f8ce],0xdc0e89e1
  42009d:	mov    WORD PTR [ecx+0x46d39eb7],fs
  4200a3:	test   BYTE PTR [ecx-0x403eb161],0xd7
  4200aa:	rol    BYTE PTR [eax-0x7e],0x91
  4200ae:	pop    ebp
  4200af:	iret   
  4200b0:	sub    BYTE PTR [edx+0x3a],dh
  4200b3:	sub    cl,al
  4200b5:	push   0xffffffe8
  4200b7:	fsub   DWORD PTR [ecx-0x6a]
  4200ba:	in     al,0x4d
  4200bc:	les    ecx,FWORD PTR [esi]
  4200be:	jo     0x4200dc
  4200c0:	inc    ebx
  4200c1:	dec    BYTE PTR [ecx]
  4200c3:	shl    DWORD PTR [ecx-0x2a],1
  4200c6:	cmp    bh,BYTE PTR [ecx+edx*8-0x43]
  4200ca:	jmp    0xb4fd:0xa4cc8109
  4200d1:	sub    DWORD PTR [ebx-0x564677f],edi
  4200d7:	jecxz  0x420111
  4200d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200da:	repz push ecx
  4200dc:	jne    0x42011b
  4200de:	shl    DWORD PTR [edx-0x7f],1
  4200e1:	dec    ebx
  4200e2:	repz (bad) 
  4200e4:	out    0xc9,eax
  4200e6:	inc    ebp
  4200e7:	jmp    0xd756:0x5bcd0242
  4200ee:	mov    bh,0xc
  4200f0:	push   edi
  4200f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200f2:	xor    eax,0xcce4adb
  4200f7:	sub    eax,DWORD PTR gs:[edx+0x65]
  4200fb:	pusha  
  4200fc:	push   ss
  4200fd:	mov    esp,0xf71aa31e
  420102:	push   ecx
  420103:	int    0x35
  420105:	fsubr  DWORD PTR [edi+0x3a]
  420108:	pop    edi
  420109:	pop    esp
  42010a:	or     ah,BYTE PTR [ebp+0x6d]
  42010d:	call   0x76a5b907
  420112:	jg     0x4200e3
  420114:	mov    DWORD PTR [bx+0x73b5],edx
  420119:	push   ds
  42011a:	sbb    al,0x4
  42011c:	fisub  WORD PTR [esi+0x46631cfe]
  420122:	push   ecx
  420123:	jno    0x420191
  420125:	int3   
  420126:	inc    edx
  420127:	(bad)  
  420128:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420129:	shr    BYTE PTR [esi],1
  42012b:	pop    ss
  42012c:	dec    ebp
  42012d:	gs or  al,0x7e
  420130:	loopne 0x420117
  420132:	xchg   ebp,eax
  420133:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420134:	pop    edx
  420135:	xchg   esp,eax
  420136:	push   ebp
  420137:	inc    esp
  420138:	fsubr  QWORD PTR [esi]
  42013a:	mov    ebp,0xf90b577f
  42013f:	push   cs
  420140:	fdiv   st,st(0)
  420142:	sti    
  420143:	outs   dx,DWORD PTR ds:[esi]
  420144:	lods   eax,DWORD PTR ds:[esi]
  420145:	xchg   esi,eax
  420146:	(bad)  [esp+edx*2-0x3f3b251f]
  42014d:	in     al,0xf7
  42014f:	xchg   edx,eax
  420150:	sti    
  420151:	das    
  420152:	ins    BYTE PTR es:[edi],dx
  420153:	mov    ah,0x24
  420155:	(bad)  
  420157:	jo     0x42019b
  420159:	hlt    
  42015a:	out    0xff,eax
  42015c:	dec    eax
  42015d:	in     eax,dx
  42015e:	push   ecx
  42015f:	jmp    0x420126
  420161:	add    al,0xd8
  420164:	xor    DWORD PTR [edx+0x1334ca39],esp
  42016a:	stos   BYTE PTR es:[edi],al
  42016b:	lods   eax,DWORD PTR ds:[esi]
  42016c:	clc    
  42016d:	ret    
  42016e:	mov    dl,0xa9
  420170:	fisubr DWORD PTR [eax]
  420172:	scas   al,BYTE PTR es:[edi]
  420173:	push   edx
  420174:	mov    edi,0x406300ec
  420179:	sub    DWORD PTR [eax+0x73],esp
  42017c:	test   al,0xac
  42017e:	icebp  
  42017f:	popf   
  420180:	out    dx,al
  420181:	retf   
  420182:	pushf  
  420183:	shl    DWORD PTR [esi+0xf],0xcd
  420187:	ins    DWORD PTR es:[edi],dx
  420188:	hlt    
  420189:	daa    
  42018a:	and    BYTE PTR [edx],ah
  42018c:	in     al,0x9
  42018e:	mov    WORD PTR [ebp-0x1efaf793],?
  420194:	jle    0x42016b
  420196:	sti    
  420197:	aas    
  420198:	cmp    dl,ah
  42019a:	xchg   edx,eax
  42019b:	mov    al,0x11
  42019d:	mov    BYTE PTR [esi],dh
  42019f:	rcr    cl,cl
  4201a1:	loope  0x42014e
  4201a3:	add    ebx,DWORD PTR [edx+edx*1+0x7b4c9e83]
  4201aa:	and    ebx,DWORD PTR [ebx+0x48c4d534]
  4201b0:	aaa    
  4201b1:	adc    eax,DWORD PTR ds:0x40f74474
  4201b7:	pop    eax
  4201b8:	shl    DWORD PTR [edi-0x19],1
  4201bb:	mov    ah,0x38
  4201bd:	inc    ecx
  4201be:	dec    edx
  4201bf:	push   ss
  4201c0:	mov    esi,0x51db79f6
  4201c5:	gs cmovae edx,eax
  4201c9:	idiv   bl
  4201cb:	dec    edi
  4201cc:	inc    edx
  4201cd:	fcom   DWORD PTR [ebx]
  4201cf:	inc    edx
  4201d0:	scas   eax,DWORD PTR es:[edi]
  4201d1:	mov    ebp,0x9c8e1f63
  4201d6:	mov    dl,0x8b
  4201d8:	mov    al,0xa6
  4201da:	mov    al,ds:0x40f0b52b
  4201df:	jmp    0x9db5:0x9b8a267
  4201e6:	(bad)  
  4201e7:	stos   BYTE PTR es:[edi],al
  4201e8:	sbb    dl,BYTE PTR [esi-0x10]
  4201eb:	popf   
  4201ec:	adc    al,0x35
  4201ee:	jmp    0x977cf365
  4201f3:	lds    edi,FWORD PTR [esi+0x2c2640fb]
  4201f9:	cwde   
  4201fa:	addr16 jle 0x42019f
  4201fd:	jae    0x420230
  4201ff:	mov    BYTE PTR [ecx-0x31],dl
  420202:	push   edx
  420203:	aad    0x35
  420205:	neg    BYTE PTR [eax+0x50]
  420208:	push   ebp
  420209:	or     DWORD PTR [ebx-0x7a15df13],esi
  42020f:	daa    
  420210:	shl    BYTE PTR [eax-0x4e9ff486],0xd8
  420217:	cmp    BYTE PTR [ecx+0x195e96e4],dh
  42021d:	fsub   QWORD PTR cs:[ebp-0x6e4ddf10]
  420224:	fst    QWORD PTR [eax-0x2f]
  420227:	(bad)  
  420228:	neg    BYTE PTR [ebp-0x65]
  42022b:	mov    eax,ds:0xbaacaa36
  420230:	jle    0x420230
  420232:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420233:	sub    al,0x4b
  420235:	jo     0x4201f6
  420237:	jae    0x4202b6
  420239:	mov    cl,0xc2
  42023b:	retf   0xceef
  42023e:	test   DWORD PTR [edi+0x2f],ebx
  420241:	fwait
  420242:	xor    BYTE PTR [esi-0x73],al
  420245:	gs enter 0x4933,0x9d
  42024a:	(bad)  
  42024c:	sub    esi,DWORD PTR [edx-0x23]
  42024f:	ret    
  420250:	in     al,dx
  420251:	jge    0x420248
  420253:	push   esp
  420254:	mov    ds:0x49dbaecc,eax
  420259:	add    al,0x9a
  42025b:	pop    ds
  42025c:	pop    ds
  42025d:	in     al,0xaa
  42025f:	sub    edx,DWORD PTR ds:0xa538bf97
  420265:	xchg   esi,eax
  420266:	cmp    esp,DWORD PTR [esi]
  420268:	ins    DWORD PTR es:[edi],dx
  420269:	test   eax,0x64c781fa
  42026e:	sbb    edi,DWORD PTR [edx-0x207fc94c]
  420274:	and    DWORD PTR [edi-0x7a],esi
  420277:	scas   eax,DWORD PTR es:[edi]
  420278:	pop    esp
  420279:	cmp    cl,BYTE PTR [ecx]
  42027b:	xchg   edx,eax
  42027c:	xchg   edx,eax
  42027d:	or     DWORD PTR [ebp+0x70],esp
  420280:	(bad)  
  420281:	xchg   ebx,eax
  420282:	or     DWORD PTR [edx-0x43ede2d4],esi
  420288:	jmp    0xd34574d4
  42028d:	pusha  
  42028e:	dec    edx
  42028f:	out    0x5a,eax
  420291:	test   DWORD PTR [eax-0x5f705fd6],0xfbbc39d4
  42029b:	jle    0x42027b
  42029d:	scas   al,BYTE PTR es:[edi]
  42029e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42029f:	ret    0xd071
  4202a2:	and    BYTE PTR [eax-0x49ab74d7],bh
  4202a8:	shr    dh,1
  4202aa:	shr    esp,cl
  4202ac:	fidivr WORD PTR [edx]
  4202ae:	ret    
  4202af:	aas    
  4202b0:	test   DWORD PTR [edi-0x4095fe1f],ecx
  4202b6:	in     eax,0xd2
  4202b8:	retf   
  4202b9:	int3   
  4202ba:	aad    0xfb
  4202bc:	xchg   ebx,eax
  4202bd:	add    al,0x1d
  4202bf:	fistp  QWORD PTR [edx-0x7b96edf8]
  4202c5:	push   0x419a65ea
  4202ca:	cmp    eax,0xd5822bd0
  4202cf:	jg     0x4202ff
  4202d1:	ins    DWORD PTR es:[edi],dx
  4202d2:	jge    0x420308
  4202d4:	aas    
  4202d5:	arpl   WORD PTR [ebp+0x2c51b967],bx
  4202db:	mov    eax,ds:0x6a0e8f24
  4202e0:	jecxz  0x4202ec
  4202e2:	mov    al,0x72
  4202e4:	call   0x9e59f361
  4202e9:	xchg   esi,eax
  4202ea:	mov    ah,0x13
  4202ec:	add    eax,0xa50cfe83
  4202f1:	arpl   WORD PTR [edi-0x76],ax
  4202f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202f6:	inc    esp
  4202f7:	(bad)  
  4202f8:	std    
  4202f9:	xchg   edi,eax
  4202fa:	or     eax,0xfe733aba
  4202ff:	fs loope 0x4202ef
  420302:	outs   dx,BYTE PTR ds:[esi]
  420303:	inc    ebp
  420304:	enter  0x5ad8,0xef
  420308:	lea    ecx,[eax+0x7]
  42030b:	push   ecx
  42030c:	arpl   bx,di
  42030e:	mov    eax,0xdf827daa
  420313:	and    esp,esi
  420315:	stc    
  420316:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420317:	mov    gs,WORD PTR [esi+ecx*1]
  42031a:	push   cs
  42031b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42031c:	xchg   esp,eax
  42031d:	(bad)  
  42031e:	ja     0x4202a4
  420320:	retf   0x5e1f
  420323:	push   ebp
  420324:	(bad)  
  420326:	mov    eax,0xbd281cf5
  42032b:	xlat   BYTE PTR ds:[ebx]
  42032c:	push   es
  42032d:	inc    edx
  42032e:	dec    edx
  42032f:	adc    ecx,edx
  420331:	aam    0x1b
  420333:	lods   al,BYTE PTR ds:[esi]
  420334:	or     eax,0xd190b29c
  420339:	mov    ch,0x43
  42033b:	sub    eax,0xbaabeda2
  420340:	cdq    
  420341:	ins    BYTE PTR es:[edi],dx
  420342:	mov    edx,0xd85221ac
  420347:	add    ebp,DWORD PTR [ebp+0x5]
  42034a:	fcomp  st(4)
  42034c:	pop    edi
  42034d:	iret   
  42034e:	add    al,0xe6
  420350:	imul   eax,DWORD PTR [edx-0x1c],0xb132ca98
  420357:	in     eax,dx
  420358:	pushf  
  420359:	std    
  42035a:	mov    BYTE PTR [esi+0x33f4d951],ah
  420360:	repz (bad) 
  420362:	xor    ch,BYTE PTR [ebx]
  420364:	pop    edx
  420365:	push   edi
  420366:	jbe    0x42036f
  420368:	sbb    DWORD PTR [eax],edx
  42036a:	fld    QWORD PTR [esi+ebp*4+0x63]
  42036e:	push   0xb907bbfa
  420373:	stc    
  420374:	mov    esi,0x86372c2c
  420379:	mov    ecx,0x2e5eb2c9
  42037e:	stc    
  42037f:	jae    0x42030d
  420381:	dec    edi
  420382:	jne    0x420338
  420384:	mov    BYTE PTR [edx],bh
  420386:	pop    ds
  420387:	out    dx,eax
  420388:	test   al,0x4a
  42038a:	jae    0x420316
  42038c:	push   es
  42038d:	mov    eax,ds:0xde3bdb56
  420392:	sahf   
  420393:	ror    BYTE PTR [edi-0x7],0xc9
  420397:	cmp    BYTE PTR [ebp-0x5d],dl
  42039a:	fcmovne st,st(0)
  42039c:	mov    al,ds:0xd333d1d8
  4203a1:	mov    ebp,ecx
  4203a3:	xchg   ebx,eax
  4203a4:	hlt    
  4203a5:	div    BYTE PTR [ebp-0x30437d8f]
  4203ab:	cmp    esi,DWORD PTR [eax+0x29b58efb]
  4203b1:	scas   al,BYTE PTR es:[edi]
  4203b2:	push   0x1de69925
  4203b7:	ins    BYTE PTR es:[edi],dx
  4203b8:	cmp    ebx,esi
  4203ba:	jbe    0x42035d
  4203bc:	push   ecx
  4203bd:	dec    esp
  4203be:	add    esi,esp
  4203c0:	dec    ebp
  4203c1:	sub    al,0x4
  4203c3:	mov    edx,0xf735a6f5
  4203c8:	(bad)  
  4203c9:	rol    DWORD PTR ds:0xffd7aa54,1
  4203cf:	stos   DWORD PTR es:[edi],eax
  4203d0:	pop    ebx
  4203d1:	add    BYTE PTR [esi],bl
  4203d3:	pop    ds
  4203d4:	inc    eax
  4203d5:	jge    0x4203fe
  4203d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203d8:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4203da:	mov    ds:0xd6af7d5e,eax
  4203df:	call   0x93274926
  4203e4:	pop    ebx
  4203e5:	loopne 0x4203f6
  4203e7:	shl    cl,cl
  4203e9:	xchg   BYTE PTR [ebp-0x132de8c6],dl
  4203ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203f0:	xchg   edi,eax
  4203f1:	jnp    0x420428
  4203f3:	(bad)  
  4203f4:	jl     0x4203b2
  4203f6:	ss and eax,edi
  4203f9:	jns    0x42042b
  4203fb:	aad    0xc8
  4203fd:	fisub  WORD PTR [ebx]
  4203ff:	gs jno 0x42038d
  420402:	icebp  
  420403:	xor    al,0xc7
  420405:	push   0x56fd01d7
  42040a:	xchg   ebp,eax
  42040b:	pop    edx
  42040c:	mov    eax,ds:0xf78cf111
  420411:	and    DWORD PTR [esi+ebp*4],edi
  420414:	je     0x4203af
  420416:	push   ds
  420417:	sbb    ecx,DWORD PTR [esp+eiz*2]
  42041a:	call   0x161b75ad
  42041f:	mov    dl,0x47
  420421:	fs dec ecx
  420423:	inc    ebp
  420424:	ret    0x8999
  420427:	shr    DWORD PTR [edi],0x31
  42042a:	fldln2 
  42042c:	xor    al,0x2
  42042e:	or     esp,ebp
  420430:	adc    DWORD PTR [ebp+0x72534d3d],0xffffffdd
  420437:	push   ebp
  420438:	(bad)  
  420439:	dec    BYTE PTR [eax]
  42043b:	std    
  42043c:	clc    
  42043d:	shl    esp,0xe9
  420440:	mov    ds:0xa4fef961,al
  420445:	sub    eax,0x9c2a4c0b
  42044a:	adc    al,al
  42044c:	les    ebx,FWORD PTR ds:0xf186dc8c
  420452:	sbb    dh,BYTE PTR [ecx+0x26a3a444]
  420458:	clc    
  420459:	pop    edx
  42045a:	call   FWORD PTR [ecx-0x285a41b7]
  420460:	mov    ah,0x6b
  420462:	cmp    ebp,DWORD PTR [edx+0xcff810]
  420468:	inc    esi
  420469:	repz clc 
  42046b:	fldenv [ecx+0x1a3d0622]
  420471:	call   0x31cf:0x3aadfdf2
  420478:	imul   DWORD PTR [ebp-0x43110a54]
  42047e:	or     bh,BYTE PTR [esi+ebx*8+0x1bd9bacd]
  420485:	aam    0x31
  420487:	in     al,0xce
  420489:	mov    dh,0x26
  42048b:	jge    0x420472
  42048d:	xchg   esp,eax
  42048e:	xor    eax,0x76e7f152
  420493:	xchg   BYTE PTR [ebp-0x39c829c0],bl
  420499:	pop    eax
  42049a:	jnp    0x4204b6
  42049c:	pcmpgtw mm2,QWORD PTR [ebp+0x5b]
  4204a0:	xchg   ebp,eax
  4204a1:	inc    edi
  4204a2:	test   DWORD PTR [ecx-0x32],0x8222b324
  4204a9:	lea    edi,[edi]
  4204ab:	idiv   BYTE PTR [ecx-0x41]
  4204ae:	lahf   
  4204af:	int    0xc8
  4204b1:	test   eax,0xbee99e66
  4204b6:	int    0xae
  4204b8:	call   0xf9fb6b46
  4204bd:	sti    
  4204be:	jmp    0x3aa8:0x9123f9ec
  4204c5:	out    0xef,eax
  4204c7:	inc    ebx
  4204c8:	icebp  
  4204c9:	dec    ebp
  4204ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204cb:	gs pop esi
  4204cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204ce:	and    eax,0x5da66af1
  4204d3:	aas    
  4204d4:	inc    ecx
  4204d5:	lods   al,BYTE PTR ds:[esi]
  4204d6:	repnz test al,0xd9
  4204d9:	jmp    0xbf5d:0x7d360a0b
  4204e0:	pop    ss
  4204e1:	pop    ds
  4204e2:	je     0x4204eb
  4204e4:	(bad)  
  4204e5:	mov    ah,0x11
  4204e7:	cwde   
  4204e8:	push   edx
  4204e9:	aas    
  4204ea:	call   0x87a938e6
  4204ef:	outs   dx,DWORD PTR ds:[esi]
  4204f0:	rcr    DWORD PTR [edi+ecx*8+0x30],cl
  4204f4:	aaa    
  4204f5:	rcr    DWORD PTR [esi],0x7b
  4204f8:	ins    DWORD PTR es:[edi],dx
  4204f9:	jns    0x4204c1
  4204fb:	icebp  
  4204fc:	retf   0x5740
  4204ff:	adc    dl,al
  420501:	dec    ebx
  420502:	push   edx
  420503:	dec    eax
  420504:	fbld   TBYTE PTR [edi-0x55]
  420507:	inc    esi
  420508:	lods   eax,DWORD PTR ds:[esi]
  420509:	lahf   
  42050a:	xor    eax,0xda7a3c4c
  42050f:	popa   
  420510:	test   DWORD PTR [eax-0x44],edi
  420513:	or     edi,DWORD PTR [ecx+0x69]
  420516:	ja     0x4204c8
  420518:	call   0xfe77:0x88d5367a
  42051f:	dec    edi
  420520:	in     eax,0xa1
  420522:	loopne 0x420546
  420524:	inc    ebx
  420525:	mov    edx,gs
  420527:	pop    ecx
  420528:	imul   edx,DWORD PTR [eax-0x7a3241f6],0x16
  42052f:	cmp    eax,DWORD PTR [edx]
  420531:	stos   DWORD PTR es:[edi],eax
  420532:	fisub  WORD PTR [edi+ebx*1-0x49]
  420536:	jns    0x42052a
  420538:	sub    esp,esi
  42053a:	cmc    
  42053b:	adc    eax,0xddbc47ed
  420540:	fisub  DWORD PTR ss:[edi-0x15]
  420544:	fmulp  st(3),st
  420546:	dec    ebp
  420547:	test   al,0x6d
  420549:	xor    edi,DWORD PTR [edx-0x2d53c63f]
  42054f:	push   0xffffffae
  420551:	push   ss
  420552:	sar    DWORD PTR [ebp+0x3d2793b8],1
  420558:	lock daa 
  42055a:	rol    DWORD PTR [esi+0x8d82be6],1
  420560:	sahf   
  420561:	test   al,0x44
  420563:	pop    ecx
  420564:	jl     0x42055b
  420566:	cmp    al,0xb2
  420568:	or     bl,BYTE PTR [eax+edx*1-0x60]
  42056c:	daa    
  42056d:	inc    edx
  42056e:	mov    ds:0x25e58e59,eax
  420573:	mul    BYTE PTR [edx+0x7e]
  420576:	xchg   ecx,eax
  420577:	(bad)  
  420578:	cld    
  420579:	test   BYTE PTR [edi+0x61],0xac
  42057d:	adc    BYTE PTR [ebx],ch
  42057f:	mov    ds:0xd2658342,eax
  420584:	fsubp  st(2),st
  420586:	xor    eax,0x2dafe2cd
  42058b:	adc    BYTE PTR [ecx],bh
  42058d:	daa    
  42058e:	imul   ecx,DWORD PTR [esi-0x3],0x28
  420592:	adc    ch,dl
  420594:	mov    cl,0xdc
  420596:	and    ecx,0x68
  420599:	loop   0x4205b4
  42059b:	fcmovu st,st(1)
  42059d:	loop   0x4205f4
  42059f:	loope  0x4205a5
  4205a1:	outs   dx,BYTE PTR ds:[esi]
  4205a2:	push   esi
  4205a3:	fsubr  DWORD PTR [ebx+0x4c]
  4205a6:	jl     0x420603
  4205a8:	dec    eax
  4205a9:	push   es
  4205aa:	and    ebp,DWORD PTR [ecx+ecx*1]
  4205ad:	addr16 addr16 inc eax
  4205b0:	ror    BYTE PTR [edi],cl
  4205b2:	jbe    0x4205e7
  4205b4:	sub    BYTE PTR [ebx+esi*1-0x2c],bh
  4205b8:	push   0x9c466e1d
  4205bd:	jne    0x420550
  4205bf:	dec    esp
  4205c0:	inc    ebx
  4205c1:	clc    
  4205c2:	cdq    
  4205c3:	(bad)  
  4205c4:	mov    eax,0x4f7c8552
  4205c9:	retf   
  4205ca:	cld    
  4205cb:	pop    ss
  4205cc:	test   ebp,edi
  4205ce:	loop   0x420633
  4205d0:	rol    DWORD PTR [esi-0x60967a56],cl
  4205d6:	push   0x9
  4205d8:	inc    edi
  4205d9:	jno    0x420577
  4205db:	jmp    DWORD PTR [ebx-0x709490c]
  4205e1:	sti    
  4205e2:	fwait
  4205e3:	dec    esi
  4205e4:	jmp    0xe6974e76
  4205e9:	mov    eax,ds:0x61c2056
  4205ee:	xor    ecx,DWORD PTR [edi]
  4205f0:	adc    esp,DWORD PTR [edi+0x349f4ffc]
  4205f6:	cdq    
  4205f7:	hlt    
  4205f8:	clc    
  4205f9:	pop    ebp
  4205fa:	fadd   DWORD PTR [edx+edx*8-0x52686ca4]
  420601:	pusha  
  420602:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420603:	call   0x38c:0x86588302
  42060a:	ss sbb ebp,eax
  42060d:	xor    DWORD PTR ds:0x439ada0d,0xb5e0134a
  420617:	into   
  420618:	aad    0x39
  42061a:	(bad)  
  42061b:	lea    edi,[eax+0x20]
  42061e:	inc    esi
  42061f:	or     al,0x54
  420621:	mov    DWORD PTR [esi],0x365c6d26
  420627:	fnstsw WORD PTR ds:0xe4c3c1dd
  42062d:	test   dl,cl
  42062f:	(bad)  
  420630:	xor    cl,BYTE PTR [edi]
  420632:	inc    ebp
  420633:	jle    0x420639
  420635:	js     0x420696
  420637:	stc    
  420638:	mul    BYTE PTR [eax+0xb]
  42063b:	call   0xf3b9990a
  420640:	ja     0x420612
  420642:	xlat   BYTE PTR ds:[ebx]
  420643:	inc    ebx
  420644:	mov    al,0x88
  420646:	icebp  
  420647:	ja     0x420648
  420649:	pop    esi
  42064a:	jnp    0x4206a7
  42064c:	dec    ebx
  42064d:	cld    
  42064e:	cmp    ebp,DWORD PTR [ebx]
  420650:	and    eax,0xd8575901
  420655:	sahf   
  420656:	mov    esi,0x9658b173
  42065b:	adc    dh,al
  42065d:	adc    al,BYTE PTR [esi]
  42065f:	idiv   DWORD PTR [eax]
  420661:	push   ds
  420662:	push   ebx
  420663:	and    BYTE PTR [eax+0x1d5a8858],ah
  420669:	and    edi,DWORD PTR [edi]
  42066b:	adc    BYTE PTR [esi-0x61e8c02c],dh
  420671:	rol    DWORD PTR [eax+eax*1+0x46],0xc4
  420676:	jo     0x42063d
  420678:	mov    ds:0x954e37f5,al
  42067d:	ins    BYTE PTR es:[edi],dx
  42067e:	call   DWORD PTR [esi+0x2fea0043]
  420684:	in     eax,dx
  420685:	sbb    al,0xcf
  420687:	sub    eax,0x977c9b3d
  42068c:	xor    al,ch
  42068e:	cdq    
  42068f:	mov    bl,0x4c
  420691:	pop    ss
  420692:	mov    eax,0x3438d38e
  420697:	mov    esi,DWORD PTR [edx]
  420699:	sub    ecx,DWORD PTR [ecx+0x51ba105a]
  42069f:	outs   dx,BYTE PTR ds:[esi]
  4206a0:	es adc ecx,ebp
  4206a3:	test   DWORD PTR [edx+0x278a8af],0x90a5cde4
  4206ad:	mov    ebx,0x8aa1ab3
  4206b2:	cmc    
  4206b3:	sub    al,0x7
  4206b5:	mov    BYTE PTR [ebp-0xc219641],dh
  4206bb:	fist   WORD PTR [esi]
  4206bd:	sub    ecx,DWORD PTR es:[ecx+0x42]
  4206c1:	iret   
  4206c2:	popa   
  4206c3:	jmp    0xc5c7529f
  4206c8:	lahf   
  4206c9:	test   DWORD PTR [eax],esp
  4206cb:	loop   0x42065f
  4206cd:	(bad)
  4206d1:	mov    ebp,0x806a4bf4
  4206d6:	adc    bh,BYTE PTR [edx-0x29]
  4206d9:	mov    edx,DWORD PTR [ecx-0x2]
  4206dc:	loopne 0x4206d0
  4206de:	rcr    esp,cl
  4206e0:	ror    DWORD PTR [ecx+edx*4-0x6a33219d],cl
  4206e7:	clc    
  4206e8:	in     al,dx
  4206e9:	int3   
  4206ea:	loope  0x42072f
  4206ec:	sub    DWORD PTR [ebp-0xf09b6d9],edi
  4206f2:	js     0x4206a1
  4206f4:	dec    esi
  4206f5:	std    
  4206f6:	in     al,0xbc
  4206f8:	dec    ebp
  4206f9:	sbb    al,0xe3
  4206fb:	pop    eax
  4206fc:	mov    dl,0x24
  4206fe:	clc    
  4206ff:	mov    esi,0x3df25c5d
  420704:	enter  0x3b7c,0x51
  420708:	dec    esp
  420709:	shl    edx,0x75
  42070c:	jae    0x4206fe
  42070e:	xchg   ecx,eax
  42070f:	push   edi
  420710:	out    dx,eax
  420711:	call   0xf4d7:0xdb70d2d2
  420718:	pusha  
  420719:	push   es
  42071a:	push   ds
  42071b:	xchg   ecx,eax
  42071c:	mov    dl,0xb3
  42071e:	fwait
  42071f:	ret    0x9044
  420722:	call   0xda9bff0a
  420727:	arpl   si,bp
  420729:	(bad)  
  42072b:	pop    edx
  42072c:	pop    ds
  42072d:	pop    ebx
  42072e:	aam    0xe5
  420730:	mul    DWORD PTR [ebx-0x7d]
  420733:	retf   
  420734:	jecxz  0x420781
  420736:	retf   
  420737:	bound  ecx,QWORD PTR [esi+ebp*1]
  42073a:	scas   eax,DWORD PTR es:[edi]
  42073b:	aaa    
  42073c:	shl    DWORD PTR [eax],0x80
  42073f:	mov    ah,0x18
  420741:	addr16 aaa 
  420743:	bound  edx,QWORD PTR [esi+ebx*1]
  420746:	test   al,0x7
  420748:	rol    BYTE PTR [ebx-0x3c92eaee],cl
  42074e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42074f:	sbb    edx,edi
  420751:	pop    esi
  420752:	xchg   esp,eax
  420753:	xchg   edx,eax
  420754:	fsubr  QWORD PTR [ebx+eax*4+0x24]
  420758:	out    dx,al
  420759:	mov    ch,0x9
  42075b:	data16 aad 0x6a
  42075e:	xor    ebp,ebp
  420760:	int    0xa
  420762:	lds    esi,FWORD PTR [edi]
  420764:	sti    
  420765:	push   cs
  420766:	fiadd  WORD PTR ds:0x7a5bda9f
  42076c:	hlt    
  42076d:	in     al,0xf7
  42076f:	mov    WORD PTR [edx],cs
  420771:	ds sbb cl,dh
  420774:	inc    eax
  420775:	pop    esi
  420776:	pop    ebp
  420777:	pop    eax
  420778:	test   DWORD PTR [eax],esi
  42077a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42077b:	xchg   esp,eax
  42077c:	inc    esp
  42077d:	inc    ebp
  42077e:	cmp    eax,0xa690cd73
  420783:	popf   
  420784:	mov    ds:0x8c35ded5,eax
  420789:	lahf   
  42078a:	aam    0x70
  42078c:	sbb    eax,0x11e7de9e
  420791:	lea    ecx,[ebx]
  420793:	push   edi
  420794:	scas   al,BYTE PTR es:[edi]
  420795:	fsub   st(0),st
  420797:	sbb    eax,0xa0bf5a2f
  42079c:	fs dec edi
  42079e:	scas   eax,DWORD PTR es:[edi]
  42079f:	sub    al,0xaa
  4207a1:	and    ah,ah
  4207a3:	sub    eax,0xb6b1e16a
  4207a8:	popa   
  4207a9:	ret    
  4207aa:	cmc    
  4207ab:	clc    
  4207ac:	and    esi,DWORD PTR [esi-0x18]
  4207af:	(bad)  
  4207b0:	out    0x28,eax
  4207b2:	and    DWORD PTR [ebx+0x36194032],eax
  4207b8:	and    bh,cl
  4207ba:	jno    0x420783
  4207bc:	iret   
  4207bd:	inc    eax
  4207be:	adc    DWORD PTR [esi+0x4095027a],esp
  4207c4:	sub    ebp,DWORD PTR [edx-0x1e]
  4207c7:	test   eax,0xf5c7f44c
  4207cc:	jno    0x4207e7
  4207ce:	push   ds
  4207cf:	jp     0x420847
  4207d1:	dec    ebp
  4207d2:	push   ecx
  4207d3:	adc    dh,bh
  4207d5:	mov    cl,0x5f
  4207d7:	shr    BYTE PTR [edx],cl
  4207d9:	inc    esi
  4207db:	add    eax,0xaa2f773
  4207e0:	dec    edi
  4207e1:	or     DWORD PTR [esi-0x3affb5ad],0xfffffff9
  4207e8:	div    BYTE PTR [edx+0x46]
  4207eb:	test   BYTE PTR [esi-0x39],ah
  4207ee:	in     al,dx
  4207ef:	in     al,dx
  4207f0:	xchg   edi,eax
  4207f1:	arpl   WORD PTR [ebp-0x3bd40ddb],di
  4207f7:	(bad)  
  4207f8:	pop    esp
  4207f9:	adc    eax,0xf3f05e63
  4207fe:	inc    esi
  4207ff:	adc    ah,ah
  420801:	vcmpps xmm1,xmm1,XMMWORD PTR [esi+esi*2+0xe],0xf9
  420808:	xchg   edx,eax
  420809:	gs cmp dh,ah
  42080c:	xchg   DWORD PTR [ebx+ebp*1+0x5b7305db],eax
  420813:	add    dh,ah
  420815:	xchg   DWORD PTR [edx+0x54],ebp
  420818:	cmp    DWORD PTR [esi],edi
  42081a:	push   edi
  42081b:	xchg   esi,eax
  42081c:	imul   BYTE PTR [ebp-0x4a1e212a]
  420822:	aaa    
  420823:	js     0x4207ed
  420825:	xor    DWORD PTR [esi+0x477b6dca],ebp
  42082b:	mov    DWORD PTR [edx+0x76dc7754],edi
  420831:	or     DWORD PTR [ecx+0x5ea0d02b],esi
  420837:	xchg   edi,eax
  420838:	mov    al,ds:0x45a0abab
  42083d:	pop    ebx
  42083e:	repz push eax
  420840:	xchg   edi,eax
  420841:	cmp    BYTE PTR [ecx+0x50],cl
  420844:	test   eax,0x80998e76
  420849:	(bad)  
  42084a:	mov    cl,0x49
  42084c:	adc    DWORD PTR [edi],edx
  42084e:	mov    dl,0xc6
  420850:	icebp  
  420851:	enter  0x6ff5,0x71
  420855:	jnp    0x4208a4
  420857:	xor    DWORD PTR [edi+0xc],edx
  42085a:	mov    esp,0x2f51d42f
  42085f:	pop    esp
  420860:	out    dx,eax
  420861:	xor    ah,BYTE PTR [esi+ecx*1+0x4d103445]
  420868:	jbe    0x420822
  42086a:	adc    al,0x52
  42086c:	in     al,dx
  42086d:	pop    ecx
  42086e:	(bad)  
  420870:	lods   al,BYTE PTR ds:[esi]
  420871:	adc    esp,DWORD PTR [esi-0x3df1a7d6]
  420877:	dec    ebp
  420878:	shr    BYTE PTR [edi+0x4704f90d],cl
  42087e:	rcr    BYTE PTR [edi+0x5368a4fb],1
  420884:	outs   dx,BYTE PTR ds:[esi]
  420885:	mov    edi,0xebf8a1cd
  42088a:	out    dx,eax
  42088b:	add    BYTE PTR [ebp+0x37],bh
  42088e:	xor    DWORD PTR [edi+0x4e],edi
  420891:	ins    DWORD PTR es:[edi],dx
  420892:	lock js 0x4208bf
  420895:	cli    
  420896:	sub    BYTE PTR [ecx],0x1c
  420899:	int    0x8f
  42089b:	iret   
  42089c:	mov    eax,0x9ee3bda5
  4208a1:	sub    al,0x87
  4208a3:	adc    ch,BYTE PTR [ebx+ebx*1]
  4208a6:	invd   
  4208a8:	fistp  WORD PTR [edx-0x15e6180d]
  4208ae:	sub    dh,BYTE PTR [ebx+esi*1-0x42]
  4208b2:	cld    
  4208b3:	clc    
  4208b4:	adc    eax,0x8e79c487
  4208b9:	mov    ds:0x59cec859,al
  4208be:	jg     0x4208a8
  4208c0:	(bad)  
  4208c1:	mov    ch,0x5e
  4208c3:	dec    ecx
  4208c4:	frstor [ebp-0x7540c91f]
  4208ca:	add    BYTE PTR [ebp-0x59a2d59d],ah
  4208d0:	hlt    
  4208d1:	add    esi,DWORD PTR [ecx]
  4208d3:	dec    ebx
  4208d4:	mov    dh,0xde
  4208d6:	popf   
  4208d7:	cmp    edi,ebp
  4208d9:	cmp    al,0x45
  4208db:	inc    esi
  4208dc:	xor    eax,0xff3b8e82
  4208e1:	inc    eax
  4208e2:	in     eax,0xe7
  4208e4:	push   eax
  4208e5:	cmp    al,0xc9
  4208e7:	(bad)  [ebx+eax*1+0x80b110a]
  4208ee:	fidivr WORD PTR [ecx+0x2ac7301b]
  4208f4:	mov    ecx,0x8a867934
  4208f9:	rcr    bh,0xb9
  4208fc:	sub    DWORD PTR [eax+0x455bac6],ebx
  420902:	hlt    
  420903:	outs   dx,BYTE PTR ds:[esi]
  420904:	(bad)  
  420905:	mov    bh,0xaf
  420907:	adc    dh,BYTE PTR [esp+edi*8+0x367627a4]
  42090e:	jae    0x4208e8
  420910:	or     eax,DWORD PTR [ecx]
  420912:	jmp    0xc046:0x2b315fa1
  420919:	das    
  42091a:	pop    ecx
  42091b:	es sub al,0xfb
  42091e:	adc    DWORD PTR [eax],esp
  420920:	cld    
  420921:	jmp    0xb5ef:0xb7b67768
  420928:	fldcw  WORD PTR [edi+0x105ac4ea]
  42092e:	retf   0xbf53
  420931:	ja     0x42090a
  420933:	loopne 0x4208f4
  420935:	ss dec ebp
  420937:	(bad)  
  420938:	stc    
  420939:	cmp    al,0xb5
  42093b:	dec    DWORD PTR [edi]
  42093d:	(bad)  
  42093e:	adc    eax,0x5168530f
  420943:	jae    0x4208dd
  420945:	popf   
  420946:	xor    BYTE PTR [ecx+0x45c87f1b],bh
  42094c:	push   ebp
  42094d:	idiv   DWORD PTR [ebx+0x7b54dd12]
  420953:	xchg   DWORD PTR [ebx],ecx
  420955:	fadd   DWORD PTR [ebp-0x6e2bdc53]
  42095b:	pop    ebx
  42095c:	pop    ebp
  42095d:	mov    dl,0xfd
  42095f:	sbb    eax,0xa4462be7
  420964:	add    eax,0x75fcf92a
  420969:	addr16 add edi,esp
  42096c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42096d:	and    DWORD PTR [ecx-0x33],0x61b8ee5c
  420974:	cld    
  420975:	mov    esi,0x28e8f61d
  42097a:	mov    esi,0x736d0255
  42097f:	jmp    0x8b9184fc
  420984:	stos   BYTE PTR es:[edi],al
  420985:	and    cl,dl
  420987:	adc    ch,BYTE PTR [ebx+eiz*4-0x21]
  42098b:	inc    eax
  42098c:	ja     0x4209e1
  42098e:	push   ecx
  42098f:	jg     0x4209d3
  420991:	mov    al,ds:0xf3904466
  420996:	and    eax,0x56ecf121
  42099b:	xchg   BYTE PTR [eax],bh
  42099d:	jb     0x420929
  42099f:	sbb    bh,bl
  4209a1:	mov    bh,0xee
  4209a3:	gs jmp 0x733c2cfb
  4209a9:	xchg   DWORD PTR ds:0x2c53f265,edx
  4209af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209b0:	or     edi,ecx
  4209b2:	xor    DWORD PTR [ecx+0x63],eax
  4209b5:	inc    esp
  4209b6:	stos   DWORD PTR es:[edi],eax
  4209b7:	jnp    0x4209b9
  4209b9:	cmp    al,0x71
  4209bb:	fsub   st(3),st
  4209bd:	pop    ds
  4209be:	ret    
  4209bf:	or     al,0xc6
  4209c1:	loop   0x4209d4
  4209c3:	out    dx,al
  4209c4:	mov    bh,0xda
  4209c6:	in     eax,0x16
  4209c8:	adc    DWORD PTR [esi-0x65e684d],esi
  4209ce:	test   eax,0x904578e1
  4209d3:	add    DWORD PTR [ebp-0x3050ad01],esi
  4209d9:	dec    BYTE PTR [edi+0x77e624a1]
  4209df:	leave  
  4209e0:	and    esp,DWORD PTR [edx+0x6b]
  4209e3:	or     BYTE PTR [ebx],al
  4209e5:	sub    ebp,DWORD PTR [ebp+0x37]
  4209e8:	push   es
  4209e9:	mov    ecx,0x68ddf040
  4209ee:	sbb    BYTE PTR [ecx-0x755d4580],bl
  4209f4:	in     eax,0x4c
  4209f6:	neg    al
  4209f8:	push   0x57
  4209fa:	loop   0x4209ca
  4209fc:	xchg   edx,eax
  4209fd:	enter  0x403f,0x32
  420a01:	adc    dh,BYTE PTR [eax+0x16683e7b]
  420a07:	add    DWORD PTR [edx+0x88e98de],esp
  420a0d:	and    eax,0x31736973
  420a12:	icebp  
  420a13:	ret    
  420a14:	cld    
  420a15:	jmp    0x420a8f
  420a17:	add    al,0xf3
  420a19:	and    esi,DWORD PTR [esi-0x31bb30d3]
  420a1f:	int3   
  420a20:	mov    edi,0xd8261563
  420a25:	in     al,0x1a
  420a27:	xchg   esi,edx
  420a29:	shr    edx,cl
  420a2b:	and    al,0xb7
  420a2d:	fnsave [esi+0x49]
  420a30:	das    
  420a31:	rcl    BYTE PTR [ebx+0x21d3e0c9],cl
  420a37:	ds call 0x9a334ca7
  420a3d:	das    
  420a3e:	clc    
  420a3f:	sub    BYTE PTR [ebp+0x7e321fe6],dl
  420a45:	sbb    eax,0xe7ba4b13
  420a4a:	pop    esp
  420a4b:	mov    BYTE PTR [edi-0x4f],al
  420a4e:	pop    eax
  420a4f:	je     0x4209d9
  420a51:	sbb    ah,BYTE PTR [ecx]
  420a53:	nop
  420a54:	mov    ds:0xf5a61ac7,eax
  420a59:	mov    edx,0x189ab52c
  420a5e:	icebp  
  420a5f:	mov    dh,0x7e
  420a61:	add    BYTE PTR ds:0x7eb08352,dl
  420a67:	test   DWORD PTR [ebx+0x5a8ae0c4],0x9bb4d955
  420a71:	call   0x96290cf
  420a76:	(bad)  
  420a77:	pusha  
  420a78:	mov    dh,0x60
  420a7a:	(bad)  
  420a7b:	and    esi,DWORD PTR [edi+0x26e9c175]
  420a81:	gs xchg esp,eax
  420a83:	push   0x9df1824b
  420a88:	push   eax
  420a89:	cli    
  420a8a:	pop    es
  420a8b:	and    edx,DWORD PTR [esi]
  420a8d:	stos   DWORD PTR es:[edi],eax
  420a8e:	cmp    eax,0x106ddbd
  420a93:	popf   
  420a94:	(bad)  
  420a95:	(bad)  
  420a96:	sub    ebx,edx
  420a98:	lods   eax,DWORD PTR ds:[esi]
  420a99:	mov    eax,ds:0x89670d44
  420a9e:	mov    edi,0xa410b074
  420aa3:	(bad)  
  420aa4:	mov    ebp,0xdcbcc335
  420aa9:	adc    ah,BYTE PTR [ebp+0x7865363e]
  420aaf:	bnd gs jg 0x420a56
  420ab3:	xchg   edi,eax
  420ab4:	les    ecx,FWORD PTR [ebx]
  420ab6:	mov    edx,0xf18c15d1
  420abb:	push   esi
  420abc:	jnp    0x420a80
  420abe:	sti    
  420abf:	lahf   
  420ac0:	rol    DWORD PTR [ebx],cl
  420ac2:	pop    ss
  420ac3:	push   ebx
  420ac4:	jae    0x420ac2
  420ac6:	stos   BYTE PTR es:[edi],al
  420ac7:	adc    bl,bh
  420ac9:	or     al,0x8b
  420acb:	imul   eax,ebp,0xffffff83
  420ace:	push   esi
  420acf:	mov    bh,cl
  420ad1:	mov    bh,0xd6
  420ad3:	imul   esp,DWORD PTR [esp+ebp*2-0x52928235],0xd4f55231
  420ade:	jbe    0x420ab8
  420ae0:	lahf   
  420ae1:	jmp    0x420b1b
  420ae3:	mov    ebx,DWORD PTR [ecx+0x3a959b0c]
  420ae9:	sub    BYTE PTR [eax],ch
  420aeb:	cmp    dh,bl
  420aed:	outs   dx,DWORD PTR ds:[esi]
  420aee:	pop    ss
  420aef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420af0:	or     DWORD PTR [edi+0x27],0x5c
  420af4:	out    dx,al
  420af5:	xor    ch,dh
  420af7:	push   esp
  420af8:	xor    eax,DWORD PTR [edi-0x3ff8ec2e]
  420afe:	and    eax,0x992ab9c2
  420b03:	iret   
  420b04:	imul   DWORD PTR [eax]
  420b06:	jmp    0xea32d903
  420b0b:	add    dl,BYTE PTR [eax-0x3d]
  420b0e:	mov    DWORD PTR [esi+0x4bdd85bc],esp
  420b14:	(bad)  
  420b15:	adc    BYTE PTR [esi+0x2f93f9c6],cl
  420b1b:	xchg   ebp,eax
  420b1c:	(bad)  
  420b1d:	and    esi,ebp
  420b1f:	mov    esp,0x84a949c2
  420b24:	jne    0x420af1
  420b26:	cmp    al,0xef
  420b28:	out    dx,eax
  420b29:	cmp    al,0x6c
  420b2b:	jnp    0x420b42
  420b2d:	sbb    eax,0x4030cdc6
  420b32:	fadd   DWORD PTR [esi]
  420b34:	pop    ebx
  420b35:	push   0x257b207e
  420b3a:	dec    ebx
  420b3b:	mov    edi,0xb07f5a00
  420b40:	mov    al,ds:0x7a2d2888
  420b45:	inc    ebp
  420b46:	adc    BYTE PTR [esi-0x45],bh
  420b49:	mov    ?,ebx
  420b4b:	dec    esi
  420b4c:	dec    eax
  420b4d:	sahf   
  420b4e:	and    DWORD PTR [ecx],ebp
  420b50:	or     BYTE PTR [esi+0x7e7efa20],al
  420b56:	in     eax,dx
  420b57:	xchg   edi,eax
  420b58:	adc    edi,DWORD PTR [esi-0x62]
  420b5b:	ret    
  420b5c:	das    
  420b5d:	test   eax,0x9deb41d2
  420b62:	in     al,0x3
  420b64:	jae    0x420afe
  420b66:	or     al,0x92
  420b68:	mov    bl,0xd9
  420b6a:	push   0x55
  420b6c:	mov    ebx,0x25632ddb
  420b71:	xchg   ebx,eax
  420b72:	not    DWORD PTR [esp+eiz*4-0x6b2bee4a]
  420b79:	adc    al,0xae
  420b7b:	xchg   ecx,eax
  420b7c:	outs   dx,DWORD PTR ds:[esi]
  420b7d:	mov    ds:0x7fc7a75c,al
  420b82:	xor    eax,0x27775788
  420b87:	mov    esi,0xf508746d
  420b8c:	pop    ecx
  420b8d:	cld    
  420b8e:	mov    bl,0x8
  420b90:	sahf   
  420b91:	pusha  
  420b92:	inc    edx
  420b93:	(bad)  
  420b94:	mov    DWORD PTR [esp+esi*4-0x180220af],0x2cf592c
  420b9f:	jmp    FWORD PTR [ebx]
  420ba1:	mov    ds:0x5036ef5b,eax
  420ba6:	loopne 0x420c17
  420ba8:	sub    al,BYTE PTR [ebx+0x6c]
  420bab:	rol    BYTE PTR [eax+0x32],1
  420bae:	fst    DWORD PTR [esi+0x85385fd]
  420bb4:	cld    
  420bb5:	ficom  DWORD PTR [ebx+0x28]
  420bb8:	or     dh,0x24
  420bbb:	jge    0xf243ad6
  420bc1:	pushf  
  420bc2:	out    dx,al
  420bc3:	jne    0x420bd5
  420bc5:	xchg   edx,eax
  420bc6:	sbb    al,0xd2
  420bc8:	sbb    ah,BYTE PTR [eax+0x6b547ffa]
  420bce:	ror    ah,0x1d
  420bd1:	cdq    
  420bd2:	sbb    ch,BYTE PTR fs:[edx+0x29]
  420bd6:	pop    eax
  420bd7:	std    
  420bd8:	in     al,dx
  420bd9:	aam    0xe
  420bdb:	or     eax,0x17be0fa1
  420be0:	cmp    al,0xf6
  420be2:	add    cl,BYTE PTR [ebp-0x13]
  420be5:	pop    ss
  420be6:	aaa    
  420be7:	add    edi,DWORD PTR [esi-0x7249ffe8]
  420bed:	aad    0xe8
  420bef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bf0:	js     0x420c41
  420bf2:	inc    ebx
  420bf3:	jmp    0x35cb:0xafa7ad7c
  420bfa:	push   ebp
  420bfb:	xor    esp,DWORD PTR [ecx+0x33]
  420bfe:	aaa    
  420bff:	xor    eax,0x6848d182
  420c04:	push   es
  420c05:	xchg   edx,eax
  420c06:	add    edi,DWORD PTR [edx+0x48f3bfa0]
  420c0c:	es (bad) 
  420c0e:	int    0xef
  420c10:	les    eax,FWORD PTR [eax+0x7f]
  420c13:	push   edx
  420c14:	jbe    0x420c2b
  420c16:	mov    dh,0x47
  420c18:	xchg   edx,eax
  420c19:	or     ebx,DWORD PTR [ebx+eax*2]
  420c1c:	push   esi
  420c1d:	daa    
  420c1e:	imul   ebp,DWORD PTR [edi],0x8e6614c2
  420c24:	mov    esp,0x2e14f166
  420c29:	test   eax,0x27ad7bf5
  420c2e:	dec    ecx
  420c2f:	pop    edx
  420c30:	stos   BYTE PTR es:[edi],al
  420c31:	arpl   WORD PTR ds:0x9b128788,cx
  420c37:	and    edi,eax
  420c39:	jl     0x420cb9
  420c3b:	dec    ecx
  420c3c:	test   eax,0x1e17e946
  420c41:	mov    eax,ds:0x504d5d15
  420c46:	fbld   TBYTE PTR [eax]
  420c48:	aaa    
  420c49:	cwde   
  420c4a:	and    esi,DWORD PTR [edi+0x14]
  420c4d:	ret    
  420c4e:	add    bh,al
  420c50:	fucomi st,st(2)
  420c52:	or     DWORD PTR [ecx+0x545dd976],0xa9498800
  420c5c:	add    ah,BYTE PTR [edi+0x27]
  420c5f:	push   ebx
  420c60:	jle    0x420c00
  420c62:	cli    
  420c63:	nop
  420c64:	call   FWORD PTR ds:0x3a592fcd
  420c6a:	mov    ds:0x1fa6fa4c,al
  420c6f:	or     edx,DWORD PTR [edx-0x18]
  420c72:	into   
  420c73:	clc    
  420c74:	pop    ss
  420c75:	and    al,0x5e
  420c77:	mov    bh,0x7c
  420c79:	and    BYTE PTR [eax+0x21ec634],ah
  420c7f:	pop    ds
  420c80:	ret    0x66c5
  420c83:	shr    DWORD PTR [ebx],1
  420c85:	and    cl,ch
  420c87:	jmp    0xed8:0x4466676f
  420c8e:	in     eax,0xc0
  420c90:	pushf  
  420c91:	(bad)  
  420c92:	cmp    ch,BYTE PTR [ebx+0x28]
  420c95:	dec    esi
  420c96:	mov    al,0x81
  420c98:	and    dl,BYTE PTR [esi+0x32]
  420c9b:	cmp    BYTE PTR [eax-0x240a0eff],ah
  420ca1:	fimul  WORD PTR [ebx-0x56552a37]
  420ca7:	out    0xcc,eax
  420ca9:	hlt    
  420caa:	xchg   edx,eax
  420cab:	scas   eax,DWORD PTR es:[edi]
  420cac:	popa   
  420cad:	div    BYTE PTR [edx+0x63934e32]
  420cb3:	aas    
  420cb4:	jmp    0xe3c50ce3
  420cb9:	aad    0x50
  420cbb:	dec    eax
  420cbc:	or     DWORD PTR [esi-0x41d3aab8],esp
  420cc2:	push   es
  420cc3:	add    edi,eax
  420cc5:	sub    eax,0xef6632b7
  420cca:	test   eax,0x580256fc
  420ccf:	add    DWORD PTR [edi-0x6cde18a3],esp
  420cd5:	push   cs
  420cd6:	push   cs
  420cd7:	bound  esp,QWORD PTR [edx-0x65]
  420cda:	and    DWORD PTR ds:0x36d6ce6f,esp
  420ce0:	mov    edi,0xb16d6f81
  420ce5:	mov    bl,0x39
  420ce7:	test   eax,0x6141b62f
  420cec:	(bad)  
  420ced:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420cee:	mov    al,ds:0x6d4937dd
  420cf3:	inc    ebp
  420cf4:	fwait
  420cf5:	pop    esp
  420cf6:	push   edi
  420cf7:	(bad)  
  420cf8:	lods   al,BYTE PTR ds:[esi]
  420cf9:	pop    eax
  420cfa:	stc    
  420cfb:	in     eax,dx
  420cfc:	iret   
  420cfd:	mov    ds:0x7c05aacf,al
  420d02:	xlat   BYTE PTR ds:[ebx]
  420d03:	addr16 mov esp,0xab6f077
  420d09:	mov    ecx,0x1807669e
  420d0e:	bound  edi,QWORD PTR [ecx+eiz*4]
  420d11:	sub    BYTE PTR [eax-0x5ddf038c],bh
  420d17:	cmp    eax,0x2edc331a
  420d1c:	adc    BYTE PTR [edx],dl
  420d1e:	mov    dl,0x51
  420d20:	push   esi
  420d21:	cli    
  420d22:	out    dx,eax
  420d23:	jle    0x420d6c
  420d25:	pop    ebp
  420d26:	inc    esp
  420d27:	das    
  420d28:	lahf   
  420d29:	sub    esi,ecx
  420d2b:	pop    esi
  420d2c:	xchg   ebp,eax
  420d2d:	dec    edi
  420d2e:	mov    dx,WORD PTR [ebp-0x48]
  420d32:	jmp    0x423080
  420d37:	sub    eax,0xe7c03733
  420d3c:	fsub   QWORD PTR [ebp-0x7d]
  420d3f:	(bad)  [esi-0x53]
  420d42:	jle    0x420d82
  420d44:	pop    eax
  420d45:	hlt    
  420d46:	adc    edx,eax
  420d48:	mov    bh,0x61
  420d4a:	bound  edx,QWORD PTR [ecx+0x5f]
  420d4d:	bound  esp,QWORD PTR [edx+0x19]
  420d50:	mov    eax,0xa2809482
  420d55:	mov    esp,0x4f3ea4c7
  420d5a:	mov    dl,0x9c
  420d5c:	mov    ds:0x9d9f4725,eax
  420d61:	or     eax,0x7cd691cf
  420d66:	adc    ebp,DWORD PTR [esi]
  420d68:	loope  0x420cea
  420d6a:	pop    edi
  420d6b:	jae    0x420d3c
  420d6d:	stc    
  420d6e:	dec    esi
  420d6f:	lds    edi,FWORD PTR [edx]
  420d71:	xchg   edx,eax
  420d72:	ins    BYTE PTR es:[edi],dx
  420d73:	scas   al,BYTE PTR es:[edi]
  420d74:	inc    ecx
  420d75:	mov    dh,bl
  420d77:	or     al,0xf1
  420d79:	aad    0x6f
  420d7b:	jne    0x420de1
  420d7d:	retf   0xeddc
  420d80:	or     eax,0x8728ecbd
  420d85:	dec    ecx
  420d86:	data16 or bl,dh
  420d89:	sbb    ebp,0xf
  420d8c:	mov    esp,0x8bf143ff
  420d91:	add    edi,ebx
  420d93:	pop    es
  420d94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d95:	sub    DWORD PTR [esi],eax
  420d97:	je     0x420dec
  420d99:	xor    cl,ch
  420d9b:	sub    DWORD PTR [edi],eax
  420d9d:	retf   
  420d9e:	popa   
  420d9f:	or     eax,0xead893c0
  420da4:	pop    edx
  420da5:	add    ecx,0xd34b509b
  420dab:	retf   0xfbb9
  420dae:	inc    esi
  420daf:	addr16 inc ebp
  420db1:	jnp    0x420d65
  420db3:	adc    eax,0xe8d6a74e
  420db8:	pop    esi
  420db9:	aas    
  420dba:	retf   0xbaca
  420dbd:	pop    ds
  420dbe:	(bad)  
  420dbf:	(bad)  
  420dc0:	cmp    eax,0xef5012f8
  420dc5:	and    al,0xcb
  420dc7:	call   DWORD PTR [esi+0x4c9bd27f]
  420dcd:	dec    ebx
  420dce:	test   al,0x7c
  420dd0:	lahf   
  420dd1:	iret   
  420dd2:	cdq    
  420dd3:	mov    cl,0x6b
  420dd5:	int3   
  420dd6:	pushf  
  420dd7:	sub    BYTE PTR [edx-0x521b41aa],dl
  420ddd:	fld    DWORD PTR [edi+ecx*1]
  420de0:	pop    esi
  420de1:	jmp    0xecfa:0x1fa6c9dd
  420de8:	xor    BYTE PTR [edx+0x24f66678],al
  420dee:	sbb    al,0x9f
  420df0:	jo     0x420e4b
  420df2:	adc    dh,BYTE PTR [edx]
  420df4:	and    ch,ah
  420df6:	add    BYTE PTR [eax-0xf],ah
  420df9:	and    bl,BYTE PTR [eax]
  420dfb:	mov    bh,0x6a
  420dfd:	mov    DWORD PTR [ebx],edi
  420dff:	ret    
  420e00:	mov    gs,WORD PTR [edx]
  420e02:	outs   dx,BYTE PTR ds:[esi]
  420e03:	push   edx
  420e04:	push   edi
  420e05:	scas   al,BYTE PTR es:[edi]
  420e06:	adc    eax,0xfd51a7a
  420e0b:	gs sbb al,0x8f
  420e0e:	mov    cl,0xde
  420e10:	(bad)  
  420e12:	pop    ebp
  420e13:	cs inc ecx
  420e15:	jp     0x420dfe
  420e17:	mov    ds:0x69413a19,eax
  420e1c:	mov    ebp,0x33352812
  420e21:	bound  edi,QWORD PTR [ebp-0x20c74530]
  420e27:	mov    dh,0x23
  420e29:	jne    0x420e80
  420e2b:	sbb    al,0x10
  420e2d:	popf   
  420e2e:	mov    dl,0x24
  420e30:	js     0x420e85
  420e32:	in     eax,dx
  420e33:	and    BYTE PTR [ebp-0x15dce97d],bl
  420e39:	xchg   edi,eax
  420e3a:	mov    ebp,0xb204fd80
  420e3f:	or     bl,al
  420e41:	in     eax,dx
  420e42:	mov    al,0x44
  420e44:	dec    ebx
  420e45:	into   
  420e46:	sar    BYTE PTR [esi],1
  420e48:	jns    0x420e36
  420e4a:	lahf   
  420e4b:	jecxz  0x420e01
  420e4d:	pushf  
  420e4e:	fwait
  420e4f:	and    DWORD PTR [ecx+0x4652061f],ebp
  420e55:	sbb    ebp,DWORD PTR [ebp-0x3d]
  420e58:	pop    esi
  420e59:	xor    edx,DWORD PTR [ecx+ebp*1]
  420e5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e5d:	in     eax,0x66
  420e5f:	call   0x18060608
  420e64:	cld    
  420e65:	xor    eax,0x23b9dd50
  420e6a:	das    
  420e6b:	mov    DWORD PTR [ebx+0x11a26176],edx
  420e71:	loope  0x420e3f
  420e73:	add    BYTE PTR [eax+edi*1+0x348227b0],al
  420e7a:	mov    ecx,0x7dc96685
  420e7f:	mov    cl,0xbc
  420e81:	adc    DWORD PTR [ebx+0x5db620e],edx
  420e87:	fdiv   QWORD PTR [ebx+0x16]
  420e8a:	push   edx
  420e8b:	sbb    BYTE PTR [esi+edi*1],dh
  420e8e:	stos   BYTE PTR es:[edi],al
  420e8f:	popf   
  420e90:	test   BYTE PTR [ebp-0x47],ch
  420e93:	xor    DWORD PTR [esi-0x59947e2],eax
  420e99:	(bad)  
  420e9a:	add    BYTE PTR [ebx-0xa],dh
  420e9d:	nop
  420e9e:	jmp    0x420edf
  420ea0:	and    BYTE PTR [edi-0x80],bh
  420ea3:	adc    dh,al
  420ea5:	out    dx,eax
  420ea6:	dec    eax
  420ea7:	cwde   
  420ea8:	xchg   esi,eax
  420ea9:	es inc ecx
  420eab:	add    edi,DWORD PTR [esp+ebx*8]
  420eae:	push   eax
  420eaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420eb0:	lock sbb esi,DWORD PTR [esi]
  420eb3:	mov    ebx,0xefe36bcc
  420eb8:	dec    eax
  420eb9:	mov    al,0xdc
  420ebb:	and    ch,dl
  420ebd:	rcl    DWORD PTR [edi],cl
  420ebf:	scas   al,BYTE PTR es:[edi]
  420ec0:	jge    0x420f2a
  420ec2:	test   ebx,ebx
  420ec4:	pushf  
  420ec5:	xlat   BYTE PTR ds:[ebx]
  420ec6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ec7:	paddsb mm3,mm6
  420eca:	mov    dl,0x80
  420ecc:	pop    ebp
  420ecd:	pop    edx
  420ece:	les    eax,FWORD PTR [eax+0x71]
  420ed1:	je     0x420ea7
  420ed3:	xor    ah,BYTE PTR [ebp-0x35]
  420ed6:	retf   0x59be
  420ed9:	icebp  
  420eda:	cmc    
  420edb:	out    dx,al
  420edc:	test   BYTE PTR [edi],bh
  420ede:	rcr    edi,cl
  420ee0:	add    BYTE PTR [edi-0x71],al
  420ee3:	xchg   ebx,eax
  420ee4:	popa   
  420ee5:	sub    BYTE PTR [eax+0x69],bh
  420ee8:	sub    dh,BYTE PTR [edx+0x68]
  420eeb:	std    
  420eec:	push   es
  420eed:	gs mov cl,0x4e
  420ef0:	jno    0x420edb
  420ef2:	pop    es
  420ef3:	stos   DWORD PTR es:[edi],eax
  420ef4:	rcl    DWORD PTR [ecx+esi*4-0x2fac5250],cl
  420efb:	jmp    0x1fee:0xa094a95d
  420f02:	aaa    
  420f03:	aam    0xa9
  420f05:	les    ebx,FWORD PTR [ecx+ecx*4+0x6e24d500]
  420f0c:	or     ch,0x4f
  420f0f:	fdiv   st,st(4)
  420f11:	js     0x420ed8
  420f13:	aaa    
  420f14:	sbb    eax,0x2c4546d4
  420f19:	iret   
  420f1a:	fistp  QWORD PTR [ebx+0x1dbc47b5]
  420f20:	jecxz  0x420f2f
  420f22:	xchg   DWORD PTR [esi-0x46e89120],ebx
  420f28:	mov    esi,0x8095c6c8
  420f2d:	xchg   ecx,eax
  420f2e:	jge    0x420f31
  420f30:	or     ch,BYTE PTR [ebp+0x48]
  420f33:	aaa    
  420f34:	dec    ecx
  420f35:	dec    esi
  420f36:	inc    edx
  420f37:	pop    edi
  420f38:	xchg   ebp,eax
  420f39:	mov    dl,0xf9
  420f3b:	xchg   ebx,eax
  420f3c:	jmp    0xe55f57c2
  420f41:	shr    BYTE PTR [ebx+0x65b8fd27],0x7c
  420f48:	test   eax,0xd6c3cf43
  420f4d:	sbb    ebp,ebx
  420f4f:	push   edx
  420f50:	add    DWORD PTR [ebx-0x2813ceb],0xc4e4b39e
  420f5a:	not    DWORD PTR [eax-0x28]
  420f5d:	jl     0x420f90
  420f5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f60:	cld    
  420f61:	jbe    0x420f13
  420f63:	out    0x98,al
  420f65:	xchg   esp,eax
  420f66:	add    ebp,DWORD PTR [eax+0x2d7be628]
  420f6c:	mov    ecx,0x9b684f9c
  420f71:	xchg   ebx,eax
  420f72:	mov    WORD PTR [ebx+eiz*2+0x67f5a991],fs
  420f79:	js     0x420f2f
  420f7b:	sti    
  420f7c:	pop    ds
  420f7d:	mov    esi,0xbba320d7
  420f82:	pusha  
  420f83:	sbb    bh,ah
  420f85:	dec    edx
  420f86:	push   ds
  420f87:	jne    0x420f5b
  420f89:	jbe    0x420f68
  420f8b:	dec    edi
  420f8c:	mov    ds:0x4e39ed73,eax
  420f91:	push   esp
  420f92:	enter  0xab4f,0xa9
  420f96:	jns    0x420fe2
  420f98:	or     DWORD PTR [esi+0x24],esp
  420f9b:	jb     0x420fa0
  420f9d:	xchg   esi,eax
  420f9e:	sub    DWORD PTR [eax+0x0],eax
  420fa1:	jge    0x42100a
  420fa3:	push   ebp
  420fa4:	test   al,0x7d
  420fa6:	jmp    0x4ab33bdb
  420fab:	push   ebx
  420fac:	nop
  420fad:	mov    dl,BYTE PTR [edi-0x5c]
  420fb0:	lods   al,BYTE PTR ds:[esi]
  420fb1:	and    eax,DWORD PTR [ecx+0x754f0453]
  420fb7:	aad    0xaa
  420fb9:	shl    DWORD PTR ss:[ebp+0x5a68d82f],1
  420fc0:	leave  
  420fc1:	mov    cl,0xd3
  420fc3:	sti    
  420fc4:	mov    al,0xcc
  420fc6:	pop    eax
  420fc7:	ds cmp eax,0xfa54d725
  420fcd:	jbe    0x420f6c
  420fcf:	or     eax,DWORD PTR [edx+eiz*4]
  420fd2:	push   esi
  420fd3:	mov    esi,0xbd42c466
  420fd8:	fs cmp eax,0x125abc47
  420fde:	rol    DWORD PTR ds:0x7fa2eef1,cl
  420fe4:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fe6:	mov    ebp,0x19309ea3
  420feb:	jb     0x42100c
  420fed:	pop    ds
  420fee:	mov    edx,DWORD PTR [ecx]
  420ff0:	jmp    0x757:0x4ecf892e
  420ff7:	mov    esp,0xa03f5f61
  420ffc:	xchg   ecx,eax
  420ffd:	fsubrp st(4),st
  420fff:	jecxz  0x42101e
  421001:	arpl   ax,ax
  421003:	cld    
  421004:	mov    esp,0x635f4511
  421009:	mov    eax,ds:0x9e50538e
  42100e:	mov    ecx,0x1dd411a9
  421013:	cdq    
  421014:	or     eax,DWORD PTR [ebx+0x4c]
  421017:	loop   0x421035
  421019:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42101a:	(bad)  
  42101b:	call   0x2b73:0x48f19e25
  421022:	ror    DWORD PTR [eax-0x6a],cl
  421025:	adc    DWORD PTR [ebx-0x6c],esi
  421028:	cdq    
  421029:	push   ecx
  42102a:	jp     0x421018
  42102c:	retf   
  42102d:	test   DWORD PTR ds:0xaa51a1a9,ebx
  421033:	mov    bl,0xe9
  421035:	xor    eax,0xf0b8eaed
  42103a:	mov    ebp,0xf6f8f4b4
  42103f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421040:	(bad)  
  421041:	sbb    eax,0x7d9ad788
  421046:	jo     0x421080
  421048:	mov    esp,DWORD PTR [ecx]
  42104a:	es jne 0x4210ab
  42104d:	mov    ds:0x609649a3,eax
  421052:	pop    esp
  421053:	adc    al,0x80
  421055:	mov    dh,BYTE PTR [eax-0xb3880b4]
  42105b:	adc    ch,BYTE PTR [esi]
  42105d:	fnsave [eax+0x74071b3c]
  421063:	fidiv  DWORD PTR [ebp+0x2e]
  421066:	popa   
  421067:	or     ch,bl
  421069:	neg    BYTE PTR [eax]
  42106b:	inc    ebx
  42106c:	and    eax,esi
  42106e:	dec    eax
  42106f:	mov    ch,0xc8
  421071:	and    DWORD PTR [edx+edi*8+0x1a],0x3a
  421076:	xchg   esi,eax
  421077:	mov    ?,esp
  421079:	(bad)  
  42107a:	dec    esi
  42107b:	hlt    
  42107c:	pop    esi
  42107d:	push   0x2c
  42107f:	rcr    DWORD PTR [esi],0xab
  421082:	jo     0x421070
  421084:	xchg   edi,eax
  421085:	lea    eax,[esi+esi*4+0x23afdb7e]
  42108c:	pop    eax
  42108d:	clc    
  42108e:	out    0x8f,al
  421090:	cmp    edx,DWORD PTR [ebx+esi*4-0x6e6f4c88]
  421097:	scas   ax,WORD PTR es:[edi]
  421099:	push   ss
  42109a:	cmp    eax,esp
  42109c:	xchg   esp,eax
  42109d:	ja     0x421062
  42109f:	aaa    
  4210a0:	pop    ss
  4210a1:	pop    esp
  4210a2:	pop    edi
  4210a3:	or     esp,DWORD PTR [ebx]
  4210a5:	cwde   
  4210a6:	dec    esi
  4210a7:	ror    DWORD PTR [ebp-0x4b],1
  4210aa:	mov    cl,0x2c
  4210ac:	into   
  4210ad:	add    esi,edi
  4210af:	cmp    bh,BYTE PTR [eax]
  4210b1:	xchg   edi,eax
  4210b2:	mov    ch,0x51
  4210b4:	frstor [ebx+0x5e03d0c1]
  4210ba:	(bad)  
  4210bc:	test   eax,0x8f92491f
  4210c1:	dec    edx
  4210c2:	loopne 0x421048
  4210c4:	mov    ch,0xba
  4210c6:	test   DWORD PTR [edi+ecx*1+0x49],0x3e30727f
  4210ce:	mov    bl,0xf1
  4210d0:	rcl    DWORD PTR [edx+0x318106c4],0xa9
  4210d7:	cli    
  4210d8:	dec    edx
  4210d9:	out    0x3a,eax
  4210db:	inc    ecx
  4210dc:	push   edx
  4210dd:	mov    al,0xd9
  4210df:	add    BYTE PTR [ebx],al
  4210e1:	mov    bh,0x7
  4210e3:	test   ah,dl
  4210e5:	hlt    
  4210e6:	iret   
  4210e7:	push   fs
  4210e9:	push   ss
  4210ea:	adc    ch,cl
  4210ec:	xchg   BYTE PTR [ebx-0x15],al
  4210ef:	xlat   BYTE PTR ds:[ebx]
  4210f0:	out    0xf7,al
  4210f2:	xor    al,0x9a
  4210f4:	in     eax,0xbe
  4210f6:	pop    edi
  4210f7:	push   esi
  4210f8:	pop    esi
  4210f9:	(bad)  
  4210fa:	fdivp  st(1),st
  4210fc:	push   esi
  4210fd:	daa    
  4210fe:	jecxz  0x4210b8
  421100:	int    0x18
  421102:	jmp    0x6a18d7fa
  421107:	retf   
  421108:	jno    0x42111d
  42110a:	fwait
  42110b:	dec    ebp
  42110c:	sub    DWORD PTR [ebp+0x3f],0xffffffbc
  421110:	add    esi,DWORD PTR ds:0xaf3fed67
  421116:	and    eax,DWORD PTR [edi+0x2b]
  421119:	add    BYTE PTR [edx+ecx*2],bh
  42111c:	pop    esi
  42111d:	dec    eax
  42111e:	fidiv  DWORD PTR [esp+edx*2]
  421121:	fadd   QWORD PTR [ebp-0x8f09e3d]
  421127:	jmp    0x618aa9f8
  42112c:	xchg   ecx,eax
  42112d:	ret    
  42112e:	mov    edi,0xd47b9d72
  421133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421134:	scas   eax,DWORD PTR es:[edi]
  421135:	ja     0x4210f1
  421137:	push   edi
  421138:	cmp    DWORD PTR [ebx-0x29],0xb233bc2e
  42113f:	jl     0x421122
  421141:	ret    0x2e6d
  421144:	call   FWORD PTR [edx-0x28]
  421147:	adc    eax,0x24b8bfa0
  42114c:	sub    ecx,DWORD PTR [ecx]
  42114e:	ret    
  42114f:	sbb    eax,0x93041862
  421154:	imul   ebx,DWORD PTR [esi-0x4f],0xffffffc0
  421158:	xor    al,0x96
  42115a:	es fwait
  42115c:	sbb    dl,dl
  42115e:	mov    BYTE PTR [ebp+0x9fd2168],cl
  421164:	fdiv   DWORD PTR [ebx+0x11cc66d]
  42116a:	inc    ebp
  42116b:	test   BYTE PTR [esi],bl
  42116d:	push   edi
  42116e:	jne    0x4211a0
  421170:	sub    DWORD PTR [edi+0x1268ef02],ebx
  421176:	in     al,0x52
  421178:	fiadd  WORD PTR [eax+0x24]
  42117b:	sar    dh,cl
  42117d:	pop    ss
  42117e:	jg     0x42119b
  421180:	jno    0x4211ac
  421182:	daa    
  421183:	mov    cl,bl
  421185:	xchg   ecx,eax
  421186:	jmp    0x4211a3
  421188:	not    DWORD PTR [edx]
  42118a:	test   DWORD PTR [ecx],0xeeb8b8ef
  421190:	sbb    DWORD PTR [esi+0x59f8b62d],edi
  421196:	dec    ebp
  421197:	pop    eax
  421198:	sub    edi,ecx
  42119a:	popa   
  42119b:	outs   dx,BYTE PTR ds:[esi]
  42119c:	jp     0x421171
  42119e:	je     0x421173
  4211a0:	icebp  
  4211a1:	mov    eax,DWORD PTR [ebx+0x49]
  4211a4:	and    BYTE PTR [edi+0x6a],bl
  4211a7:	mov    esp,0x2b7d9b3a
  4211ac:	mov    ecx,DWORD PTR [esi+0x74e8eadd]
  4211b2:	push   esi
  4211b3:	(bad)  
  4211b5:	jle    0x421232
  4211b7:	pushf  
  4211b8:	xchg   edi,eax
  4211b9:	stc    
  4211ba:	sub    BYTE PTR [eax-0x6a5792b1],0x7b
  4211c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211c2:	in     al,dx
  4211c3:	adc    bh,BYTE PTR [eax-0x61431623]
  4211c9:	mov    edx,0x6744a1ae
  4211ce:	push   ecx
  4211cf:	dec    esi
  4211d0:	ss aad 0xe2
  4211d3:	fidiv  DWORD PTR [eax+0x630869ca]
  4211d9:	int3   
  4211da:	je     0x4211b9
  4211dc:	cs jns 0x42118b
  4211df:	stos   DWORD PTR es:[edi],eax
  4211e0:	fwait
  4211e1:	(bad)  
  4211e2:	cwde   
  4211e3:	pusha  
  4211e4:	mov    ebx,0x272be799
  4211e9:	inc    eax
  4211ea:	fnstcw WORD PTR [edi]
  4211ec:	xchg   edx,eax
  4211ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211ee:	ficomp WORD PTR [ebp+0x1d7f807b]
  4211f4:	cmp    al,0x99
  4211f6:	adc    al,0xd7
  4211f8:	push   esi
  4211f9:	lock add eax,ebx
  4211fc:	push   0xffffffbc
  4211fe:	pop    ebx
  4211ff:	mov    ah,0x42
  421201:	mov    DWORD PTR [ecx-0x24],ebp
  421204:	fidiv  WORD PTR [eax-0x36]
  421207:	jo     0x42118d
  421209:	xor    bh,BYTE PTR [edx+0x2873022]
  42120f:	cs push ebx
  421211:	shr    DWORD PTR [eax],cl
  421213:	mov    dl,0x84
  421215:	mov    eax,0x9b597d3f
  42121a:	imul   dx,WORD PTR [eax-0x15],0x8064
  421220:	lea    esp,[ebx-0x4d]
  421223:	loope  0x42123d
  421225:	dec    edi
  421226:	jmp    0xbe8e:0x80d266cc
  42122d:	scas   eax,DWORD PTR es:[edi]
  42122e:	and    al,BYTE PTR [edx+edx*8]
  421231:	cdq    
  421232:	std    
  421233:	jmp    0xc614:0xc6bb68d
  42123a:	mov    edx,0x2a5f0788
  42123f:	mov    eax,0x786e2ad9
  421244:	pop    eax
  421245:	lahf   
  421246:	mov    esi,0x818dd3d1
  42124b:	sti    
  42124c:	pop    ebx
  42124d:	leave  
  42124e:	fld    DWORD PTR [edx]
  421250:	mov    ebx,0x4f77129a
  421255:	loope  0x42122e
  421257:	mov    dl,0xa6
  421259:	lahf   
  42125a:	add    BYTE PTR [eax-0x12aca9d9],dl
  421260:	xchg   ebp,eax
  421261:	or     al,0xd3
  421263:	inc    edi
  421264:	pop    esp
  421265:	out    0x7e,eax
  421267:	jae    0x42128c
  421269:	xor    BYTE PTR [esi-0x1dbe1402],al
  42126f:	or     DWORD PTR [esi+0x29b00a8b],edi
  421275:	hlt    
  421276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421277:	rcl    BYTE PTR [edx+edi*4-0x67],0xa7
  42127c:	popf   
  42127d:	hlt    
  42127e:	dec    esi
  42127f:	push   esp
  421280:	ins    DWORD PTR es:[edi],dx
  421281:	dec    eax
  421282:	mov    bl,bl
  421284:	stos   DWORD PTR es:[edi],eax
  421285:	daa    
  421286:	stc    
  421287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421288:	sub    eax,0xaad3c2a3
  42128d:	push   ebx
  42128e:	mov    edi,0x992dc6ea
  421293:	arpl   WORD PTR [esi-0x18],cx
  421296:	jp     0x4212f2
  421298:	fiadd  DWORD PTR [ecx-0x37]
  42129b:	fwait
  42129c:	outs   dx,DWORD PTR ds:[esi]
  42129d:	xchg   esp,eax
  42129e:	or     al,0x53
  4212a0:	xor    al,0x6e
  4212a2:	dec    esi
  4212a3:	cwde   
  4212a4:	lods   al,BYTE PTR ds:[esi]
  4212a5:	inc    edx
  4212a6:	lods   eax,DWORD PTR ds:[esi]
  4212a7:	mul    DWORD PTR [ebx-0x39]
  4212aa:	or     BYTE PTR [ebx-0x251a8344],bh
  4212b0:	sbb    dh,BYTE PTR [ebp+0x64]
  4212b3:	xchg   BYTE PTR [ebp-0x6e],bl
  4212b6:	fs shl ch,0x6e
  4212ba:	mov    esp,0xcbf6a825
  4212bf:	add    esi,esi
  4212c1:	fidiv  WORD PTR [ecx-0x34]
  4212c4:	fcomp  QWORD PTR [ebp-0x6]
  4212c7:	inc    edx
  4212c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212c9:	add    DWORD PTR [esi-0x75],esi
  4212cc:	add    bl,BYTE PTR [eax+0x24]
  4212cf:	arpl   WORD PTR [edi-0x33ddb987],cx
  4212d5:	aaa    
  4212d6:	push   0x3e
  4212d8:	repz jecxz 0x4212b0
  4212db:	ret    0x89d9
  4212de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212df:	in     al,0xed
  4212e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212e2:	aaa    
  4212e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212e4:	sub    DWORD PTR [ebx],edx
  4212e6:	push   ebx
  4212e7:	fwait
  4212e8:	loop   0x42130f
  4212ea:	fcmovu st,st(5)
  4212ec:	jmp    0x32eb7a37
  4212f1:	mov    edi,0x5022bac
  4212f6:	iret   
  4212f7:	jno    0x42135c
  4212f9:	jb     0x4212c7
  4212fb:	cmp    DWORD PTR ds:0x4de14176,edx
  421301:	sbb    DWORD PTR [esi-0x1],esp
  421304:	retf   
  421305:	ss stc 
  421307:	loope  0x4212d6
  421309:	jg     0x4212b9
  42130b:	ret    0x14db
  42130e:	push   edx
  42130f:	cmp    dl,BYTE PTR [edi+0x3b03ce55]
  421315:	leave  
  421316:	ds sti 
  421318:	bound  esi,QWORD PTR [ecx+edi*1+0x72089317]
  42131f:	inc    esp
  421320:	(bad)  
  421321:	jmp    0x421374
  421323:	mov    dl,0x79
  421325:	loopne 0x4212e1
  421327:	mov    eax,0xcee8d328
  42132c:	popf   
  42132d:	sbb    ecx,esi
  42132f:	fcomi  st,st(5)
  421331:	mov    ah,0xff
  421333:	rcr    BYTE PTR [ecx],1
  421335:	int3   
  421336:	es stc 
  421338:	inc    esi
  421339:	mov    edx,?
  42133b:	dec    esi
  42133c:	push   edx
  42133d:	outs   dx,BYTE PTR ds:[esi]
  42133e:	mov    esp,0xd16be54
  421343:	jg     0x42136c
  421345:	loop   0x421352
  421347:	bound  esi,QWORD PTR [ecx+0x64]
  42134a:	push   0x68132136
  42134f:	fwait
  421350:	out    dx,al
  421351:	sbb    eax,0xb669d006
  421356:	mov    eax,ds:0x6c5c1140
  42135b:	out    0x30,al
  42135d:	xlat   BYTE PTR ds:[ebx]
  42135e:	cmp    eax,0xab4b0228
  421363:	lds    edx,FWORD PTR [edx]
  421365:	(bad)  
  421366:	loop   0x421344
  421368:	pop    ebp
  421369:	or     BYTE PTR [edi+0x284d4c6a],cl
  42136f:	and    bh,dl
  421371:	pop    esp
  421372:	mov    bh,BYTE PTR [eax]
  421374:	imul   ecx,eax,0x3f
  421377:	sbb    dh,0x57
  42137a:	cld    
  42137b:	cdq    
  42137c:	mov    ebp,0xdf8498a5
  421381:	call   0x4d6e4872
  421386:	fwait
  421387:	sub    ebp,DWORD PTR [eiz*8+0x7f4f1fc0]
  42138e:	sti    
  42138f:	or     eax,0xb325e4f9
  421394:	pop    ss
  421395:	cmp    BYTE PTR [ebx+0x4f42a9b8],cl
  42139b:	les    esp,FWORD PTR [ebx+eax*8-0x54]
  42139f:	inc    ebx
  4213a0:	lahf   
  4213a1:	(bad)  [ebp-0x5e]
  4213a4:	fcomp  QWORD PTR [ecx-0x4d29dffa]
  4213aa:	dec    esp
  4213ab:	xchg   ecx,eax
  4213ac:	and    bl,BYTE PTR [eax-0x772562ba]
  4213b2:	les    edx,FWORD PTR [edi]
  4213b4:	jl     0x421410
  4213b6:	repnz iret 
  4213b8:	xor    BYTE PTR [ebx-0x54ff653f],al
  4213be:	(bad)  
  4213bf:	fadd   QWORD PTR [esi]
  4213c1:	mov    ecx,0x67e32463
  4213c6:	mov    ds:0xf678c956,eax
  4213cb:	aam    0x81
  4213cd:	jecxz  0x4213b4
  4213cf:	pop    esi
  4213d0:	aas    
  4213d1:	push   ecx
  4213d2:	dec    ebp
  4213d3:	scas   eax,DWORD PTR es:[edi]
  4213d4:	jmp    0x5a0c:0xc9a58a63
  4213db:	enter  0xbaa7,0x9a
  4213df:	int3   
  4213e0:	stos   BYTE PTR es:[edi],al
  4213e1:	ret    
  4213e2:	jmp    0xa6ee:0x5598f924
  4213e9:	sub    ah,BYTE PTR [ecx+0x33]
  4213ec:	int3   
  4213ed:	aaa    
  4213ee:	xor    al,0x7f
  4213f0:	clc    
  4213f1:	aam    0x87
  4213f3:	das    
  4213f4:	sbb    eax,0xd918cb3a
  4213f9:	aad    0x96
  4213fb:	in     al,dx
  4213fc:	into   
  4213fd:	add    al,0x9b
  4213ff:	inc    eax
  421400:	adc    ecx,esi
  421402:	dec    esi
  421403:	imul   BYTE PTR [ebx]
  421405:	inc    edx
  421406:	inc    ebp
  421407:	jnp    0x421472
  421409:	inc    ecx
  42140a:	iret   
  42140b:	mov    ds:0xfad4f5d1,al
  421410:	mov    WORD PTR [ebp-0x4b9eccf5],ds
  421416:	aaa    
  421417:	out    dx,eax
  421418:	js     0x42141e
  42141a:	jae    0x421425
  42141c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42141d:	jne    0x421443
  42141f:	pop    esp
  421420:	push   ecx
  421421:	or     al,0xe8
  421423:	outs   dx,DWORD PTR ds:[esi]
  421424:	push   ss
  421425:	inc    eax
  421426:	stos   DWORD PTR es:[edi],eax
  421427:	dec    edi
  421428:	push   esp
  421429:	cmp    DWORD PTR [ecx+0x78],edx
  42142c:	(bad)  
  42142d:	loop   0x421456
  42142f:	dec    ebx
  421430:	jo     0x4213c0
  421432:	aad    0x4a
  421434:	push   edi
  421435:	mov    ch,0x7e
  421437:	shr    BYTE PTR [edi],cl
  421439:	xchg   edi,eax
  42143a:	push   ecx
  42143b:	xor    ebx,esp
  42143d:	fst    QWORD PTR [ecx]
  42143f:	jb     0x421450
  421441:	add    ch,bh
  421443:	ficomp DWORD PTR [ebp+0x13cf9ccb]
  421449:	add    al,0x50
  42144b:	not    ebx
  42144d:	dec    ecx
  42144e:	repz jmp 0x15489f4b
  421454:	mov    eax,ds:0x4d5ee090
  421459:	icebp  
  42145a:	lods   al,BYTE PTR ds:[esi]
  42145b:	int3   
  42145c:	ret    
  42145d:	or     al,0x4d
  42145f:	push   0xbb154f12
  421464:	enter  0x4dbc,0x87
  421468:	retf   
  421469:	lods   al,BYTE PTR ds:[esi]
  42146a:	outs   dx,BYTE PTR ds:[esi]
  42146b:	sub    eax,0x6088ff95
  421470:	retf   0xd9bc
  421473:	mov    ds:0x7832dd19,al
  421478:	(bad)  
  421479:	lock pop esp
  42147b:	fld    DWORD PTR [eax+0x663045a8]
  421481:	arpl   WORD PTR [ecx+0x6274ba4b],si
  421487:	es jmp 0x22431002
  42148d:	ins    DWORD PTR es:[edi],dx
  42148e:	in     eax,0x33
  421490:	dec    ebp
  421491:	imul   ebx,ecx,0xec2b7db9
  421497:	cmp    ebx,edx
  421499:	pop    eax
  42149a:	pop    ebp
  42149b:	enter  0xb28e,0x31
  42149f:	lock sub esi,DWORD PTR [edx+ebp*2]
  4214a3:	push   ebp
  4214a4:	retf   
  4214a5:	sub    BYTE PTR [ebx+0x210b0246],bl
  4214ab:	not    edi
  4214ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214ae:	in     eax,dx
  4214af:	fs int3 
  4214b1:	shl    BYTE PTR [esi],cl
  4214b3:	pop    ecx
  4214b4:	(bad)  
  4214b6:	mov    cl,0x65
  4214b8:	lock jno 0x4214bd
  4214bb:	jae    0x421524
  4214bd:	push   eax
  4214be:	sub    BYTE PTR [esi+ebx*4-0x5a602a44],0x5b
  4214c6:	ja     0x42146e
  4214c8:	or     al,0xc5
  4214ca:	clc    
  4214cb:	arpl   dx,bp
  4214cd:	or     BYTE PTR [edi-0x376b1fe5],ch
  4214d3:	lods   eax,DWORD PTR ds:[esi]
  4214d4:	retf   0x424e
  4214d7:	cs xor edx,ebx
  4214da:	out    0xf5,al
  4214dc:	mov    ds:0x598596b9,eax
  4214e1:	imul   esi,DWORD PTR [ebx-0x61],0x58
  4214e5:	clc    
  4214e6:	sbb    dl,BYTE PTR [ebp+0x729ce2ca]
  4214ec:	inc    BYTE PTR [edx-0x19]
  4214ef:	imul   edx,DWORD PTR [edx],0xb68e31ba
  4214f5:	hlt    
  4214f6:	les    sp,DWORD PTR [ebp-0xb]
  4214fa:	sbb    BYTE PTR [ebp+ebx*8-0x3a6866b3],al
  421501:	xchg   BYTE PTR [esi],ch
  421503:	mov    ch,0x92
  421505:	push   esi
  421506:	js     0x421577
  421508:	push   ss
  421509:	xor    dl,BYTE PTR [edx-0x27947d6d]
  42150f:	out    dx,eax
  421510:	mov    ebx,0xd7dd62f5
  421515:	jl     0x421573
  421517:	mov    BYTE PTR [edi-0x1a],bl
  42151a:	aas    
  42151b:	xor    BYTE PTR [esi],ah
  42151d:	or     al,BYTE PTR [ecx]
  42151f:	push   cs
  421520:	xor    DWORD PTR ds:0x875d409a,edx
  421526:	(bad)  
  421527:	fistp  WORD PTR [ecx*2-0x2051c0fd]
  42152e:	sub    BYTE PTR [ebx+0x56],al
  421531:	xchg   BYTE PTR [esp+eax*8+0x43e98ee7],dh
  421538:	push   ss
  421539:	cld    
  42153a:	add    bl,BYTE PTR [esi+0x22038a42]
  421540:	out    dx,eax
  421541:	jne    0x4215ac
  421543:	test   ebx,ebx
  421545:	ds pop esi
  421547:	aam    0x3e
  421549:	fs call 0x4863:0x8bef2573
  421551:	dec    esi
  421552:	jp     0x421538
  421554:	rol    DWORD PTR [edi+0x1],1
  421557:	mov    eax,ds:0xff756405
  42155c:	mov    fs:0xf9997923,eax
  421562:	repnz cmp esi,esp
  421565:	push   0x75bcd4b2
  42156a:	retf   
  42156b:	pusha  
  42156c:	sar    BYTE PTR ds:0x4266a93a,1
  421572:	int3   
  421573:	add    BYTE PTR [ecx-0x11],bl
  421576:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421577:	sar    DWORD PTR es:[ecx-0x80],0x47
  42157c:	ins    DWORD PTR es:[edi],dx
  42157d:	mov    dl,cl
  42157f:	xchg   DWORD PTR [ebp-0x745e3ef7],esi
  421585:	push   esi
  421586:	lds    esp,FWORD PTR [edi+0x6d2e0e8c]
  42158c:	xchg   edx,eax
  42158d:	in     al,dx
  42158e:	mov    al,ds:0xc7e2ffc
  421593:	jle    0x42152d
  421595:	push   ss
  421596:	fidivr WORD PTR [edi]
  421598:	push   ecx
  421599:	cmp    ecx,DWORD PTR [esi-0x18]
  42159c:	fwait
  42159d:	add    eax,0xc6b550eb
  4215a2:	sub    DWORD PTR [ebx-0x7],eax
  4215a5:	dec    esp
  4215a6:	repnz xor BYTE PTR [esi+0x30],dh
  4215aa:	jae    0x42157c
  4215ac:	sub    edx,ecx
  4215ae:	mov    ds:0x1c42411c,al
  4215b3:	hlt    
  4215b4:	push   ecx
  4215b5:	ficomp WORD PTR [eax+0x6f5e5629]
  4215bb:	ds es sahf 
  4215be:	mov    edi,0x1c19e1c1
  4215c3:	mov    sp,0xed8e
  4215c7:	int3   
  4215c8:	dec    edi
  4215c9:	ret    0x3eef
  4215cc:	out    dx,eax
  4215cd:	and    DWORD PTR cs:[ebx-0x79],edi
  4215d1:	popa   
  4215d2:	inc    edx
  4215d3:	daa    
  4215d4:	and    BYTE PTR [ebx+edi*4],dl
  4215d7:	push   esp
  4215d8:	jae    0x421622
  4215da:	push   edx
  4215db:	sbb    al,0x94
  4215dd:	cmp    DWORD PTR [eax+0x23bea50],ebx
  4215e3:	cmp    DWORD PTR [ecx+0x383ba966],0xb030f9e5
  4215ed:	jecxz  0x4215d8
  4215ef:	push   ds
  4215f0:	pop    esi
  4215f1:	mov    cl,0x36
  4215f3:	ret    0xbf1a
  4215f6:	jne    0x4215d9
  4215f8:	mov    bh,0x3
  4215fa:	rcl    ah,0x0
  4215fd:	nop
  4215fe:	cli    
  4215ff:	loope  0x4215f7
  421601:	and    BYTE PTR [edx-0x6ef783bc],ah
  421607:	sbb    BYTE PTR [edx+ebp*4+0x47bfea34],dh
  42160e:	ffree  st(6)
  421610:	inc    eax
  421611:	loopne 0x4215c0
  421613:	retfw  0x8eae
  421617:	sub    BYTE PTR [edx+0x753ede62],dl
  42161d:	pop    ss
  42161e:	and    al,0x6c
  421620:	mov    eax,0xaf5163f1
  421625:	(bad)  
  421627:	idiv   al
  421629:	dec    eax
  42162a:	je     0x4215c4
  42162c:	xchg   esp,eax
  42162d:	sub    ebx,DWORD PTR [esi+0x11b439cb]
  421633:	data16 jns 0x4215d4
  421636:	pop    ecx
  421637:	(bad)  
  421638:	jns    0x42164a
  42163a:	mul    BYTE PTR [esi+0x1e]
  42163d:	mov    edi,0x9e3e5cca
  421642:	(bad)  
  421643:	pop    eax
  421644:	lds    eax,FWORD PTR [edx+0x78]
  421647:	inc    edx
  421648:	or     bh,dh
  42164a:	mov    ch,0x80
  42164c:	mov    ebp,0x8c08efcc
  421651:	adc    edx,DWORD PTR [ecx+0x62cb419a]
  421657:	(bad)  
  421658:	xchg   edx,eax
  421659:	aad    0xe3
  42165b:	pusha  
  42165c:	lahf   
  42165d:	xor    BYTE PTR [ebp-0x61],ch
  421660:	jb     0x421654
  421662:	(bad)
  421665:	sbb    eax,0xcf1b45f2
  42166a:	or     BYTE PTR [edx-0x45],bl
  42166d:	jge    0x4215f2
  42166f:	lea    ebx,[ebp+0x79]
  421672:	xchg   edx,eax
  421673:	push   edx
  421674:	adc    BYTE PTR [edi+0x38],al
  421677:	aam    0x1e
  421679:	adc    ebp,DWORD PTR ds:0xbf03ac19
  42167f:	xor    al,0x37
  421681:	xor    DWORD PTR gs:[edx+0x45],0xe5abc7ff
  421689:	mov    dl,0xc9
  42168b:	test   BYTE PTR [edi],dh
  42168d:	mov    ecx,0x64a8b4af
  421692:	xchg   ebp,eax
  421693:	test   eax,0xe5df8346
  421698:	lods   eax,DWORD PTR ds:[esi]
  421699:	sar    bl,1
  42169b:	pushf  
  42169c:	push   0xdce977b5
  4216a1:	fmul   st(6),st
  4216a3:	fild   WORD PTR [edx]
  4216a5:	xchg   ah,bl
  4216a7:	loopne 0x421713
  4216a9:	arpl   bp,dx
  4216ab:	loopne 0x42172a
  4216ad:	test   eax,0xd26218ab
  4216b2:	mov    eax,0x7edd97ee
  4216b7:	in     eax,0x77
  4216b9:	mov    ds:0x27d58441,eax
  4216be:	fadd   st,st(1)
  4216c0:	dec    edx
  4216c1:	js     0x421729
  4216c3:	(bad)  
  4216c4:	push   esi
  4216c5:	push   edx
  4216c6:	sar    DWORD PTR [esp+edx*4-0x1],0xa8
  4216cb:	pop    edx
  4216cc:	stc    
  4216cd:	stos   BYTE PTR es:[edi],al
  4216ce:	in     al,dx
  4216cf:	call   0x3bbcb296
  4216d4:	pop    esp
  4216d5:	inc    edx
  4216d6:	jecxz  0x4216f3
  4216d8:	scas   eax,DWORD PTR es:[edi]
  4216d9:	fimul  WORD PTR [ecx-0x60f869f1]
  4216df:	scas   eax,DWORD PTR es:[edi]
  4216e0:	pop    es
  4216e1:	jb     0x42172b
  4216e3:	scas   al,BYTE PTR es:[edi]
  4216e4:	lock div DWORD PTR [ebp+0x5e993fdb]
  4216eb:	adc    eax,0x1d95bfb8
  4216f0:	dec    edi
  4216f1:	mov    ds:0x6b790def,al
  4216f6:	xchg   ebp,eax
  4216f7:	push   eax
  4216f8:	fwait
  4216f9:	mov    ds:0x68198ab3,eax
  4216fe:	iret   
  4216ff:	xchg   edi,eax
  421700:	xor    eax,0x87881bf4
  421705:	add    ecx,ebp
  421707:	aas    
  421708:	sahf   
  421709:	aam    0x88
  42170b:	lods   al,BYTE PTR ds:[esi]
  42170c:	pop    ebp
  42170d:	cli    
  42170e:	outs   dx,DWORD PTR ds:[esi]
  42170f:	mov    ebx,0x1a40b2d2
  421714:	stos   BYTE PTR es:[edi],al
  421715:	push   esp
  421716:	lea    ecx,[eax-0x199ceaa8]
  42171c:	xchg   esi,eax
  42171d:	push   ss
  42171e:	xlat   BYTE PTR ds:[ebx]
  42171f:	jnp    0x421704
  421721:	(bad)  
  421722:	jo     0x4216c0
  421724:	fbstp  TBYTE PTR [ebp+0x65]
  421727:	jecxz  0x421719
  421729:	pop    ebx
  42172a:	test   eax,0x81a1f81f
  42172f:	mov    ?,WORD PTR [ebp+eax*2+0x53]
  421733:	push   esp
  421734:	stos   DWORD PTR es:[edi],eax
  421735:	mov    bh,0x7c
  421737:	cmp    DWORD PTR ds:0x2002e33,eax
  42173d:	fwait
  42173e:	retf   0x1e2d
  421741:	mov    eax,0xf45b423
  421746:	and    ebp,ebx
  421748:	jecxz  0x42179e
  42174a:	xchg   esp,eax
  42174b:	ret    
  42174c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42174d:	push   ebp
  42174e:	dec    edi
  42174f:	(bad)  
  421751:	sbb    esi,esi
  421753:	jmp    0xc060:0xcfdb8c22
  42175a:	jp     0x4216eb
  42175c:	pop    edx
  42175d:	jge    0x4217de
  42175f:	test   eax,0x657dac49
  421764:	cmp    edx,ebx
  421766:	cmp    DWORD PTR [eax+0x5c],0xc986783e
  42176d:	nop
  42176e:	clc    
  42176f:	pop    ss
  421770:	ret    
  421771:	and    al,0xa6
  421773:	mov    cl,0x76
  421775:	cdq    
  421776:	addr16 daa 
  421778:	add    dh,BYTE PTR [eax-0x3e]
  42177b:	(bad)  
  42177c:	jle    0x4217e0
  42177e:	push   ss
  42177f:	fld    DWORD PTR [eax+0x7]
  421782:	inc    edi
  421783:	loope  0x421802
  421785:	ror    DWORD PTR [eax-0x6b],cl
  421788:	jns    0x4217b0
  42178a:	jecxz  0x421721
  42178c:	inc    edi
  42178d:	rcl    DWORD PTR [esi-0x79],0xc9
  421791:	push   ecx
  421792:	rcl    DWORD PTR [edx],0xfc
  421795:	fs aas 
  421797:	(bad)  
  421798:	gs add eax,0x1a81f555
  42179e:	mov    cl,0x66
  4217a0:	mov    bh,al
  4217a2:	jno    0x421732
  4217a4:	popa   
  4217a5:	in     al,0x3e
  4217a7:	gs jo  0x42172b
  4217aa:	jno    0x421788
  4217ac:	jmp    0x9bb2a04
  4217b1:	push   es
  4217b2:	int3   
  4217b3:	aas    
  4217b4:	popf   
  4217b5:	cmp    bl,BYTE PTR [ecx-0x25]
  4217b8:	jle    0x42177f
  4217ba:	stos   DWORD PTR es:[edi],eax
  4217bb:	icebp  
  4217bc:	xor    ebp,DWORD PTR [edx-0x438a1c34]
  4217c2:	lock push edi
  4217c4:	shl    BYTE PTR [ebp-0x336e357a],0x9e
  4217cb:	inc    edx
  4217cc:	in     al,dx
  4217cd:	xchg   edx,eax
  4217ce:	push   es
  4217cf:	or     BYTE PTR cs:[esp+ecx*8-0x11],dh
  4217d4:	or     DWORD PTR [eax-0xfccfba4],esi
  4217da:	(bad)  
  4217db:	ficomp DWORD PTR [ecx-0x7542f3a4]
  4217e1:	ror    ch,0x8f
  4217e4:	mov    ds:0x8076894c,al
  4217e9:	and    al,0xc9
  4217eb:	mov    dl,0x2
  4217ed:	mov    bl,cl
  4217ef:	mov    bh,0x34
  4217f1:	shr    ebp,0xa8
  4217f4:	adc    ebp,DWORD PTR [esi-0x4842713a]
  4217fa:	ret    
  4217fb:	adc    edx,DWORD PTR [edi]
  4217fd:	jno    0x4217ae
  4217ff:	(bad)  
  421801:	pop    es
  421802:	sub    DWORD PTR [eax+edi*2-0x6c3f2770],edi
  421809:	and    esi,ebx
  42180b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42180c:	cld    
  42180d:	add    ebp,esp
  42180f:	push   ds
  421810:	add    al,0x69
  421812:	or     DWORD PTR ds:0xe5736fed,0xffffffe3
  421819:	cmp    al,0xb8
  42181b:	xchg   ecx,eax
  42181c:	push   es
  42181d:	fidiv  WORD PTR cs:[eax+0x7b]
  421821:	fwait
  421822:	mov    bh,0x88
  421824:	pushf  
  421825:	sub    DWORD PTR [eax+ecx*4],esp
  421828:	jge    0x4217d9
  42182a:	push   edx
  42182b:	mov    dl,0xa4
  42182d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42182e:	lahf   
  42182f:	push   es
  421830:	add    DWORD PTR [edx-0x76],edi
  421833:	aaa    
  421834:	push   edx
  421835:	mul    BYTE PTR [esi]
  421837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421838:	xchg   ebx,eax
  421839:	pop    edx
  42183a:	pop    esp
  42183b:	add    al,BYTE PTR [ecx]
  42183d:	pushf  
  42183e:	repz es jne 0x42184c
  421842:	push   ss
  421843:	xor    edi,DWORD PTR [edi-0x30]
  421846:	sub    DWORD PTR ss:[eax-0x4c7b8d8c],edi
  42184d:	ss adc al,0xef
  421850:	push   ecx
  421851:	xchg   ecx,eax
  421852:	add    al,0x5a
  421854:	pop    eax
  421855:	dec    edx
  421856:	xchg   edi,eax
  421857:	xchg   ecx,esi
  421859:	xlat   BYTE PTR ds:[ebx]
  42185a:	pusha  
  42185b:	jecxz  0x4217e6
  42185d:	cli    
  42185e:	in     eax,dx
  42185f:	lods   al,BYTE PTR ds:[esi]
  421860:	inc    eax
  421861:	in     eax,0x77
  421863:	mul    DWORD PTR [edi-0x5e]
  421866:	mov    eax,0x219a3a64
  42186b:	adc    bl,dh
  42186d:	dec    esi
  42186e:	call   0xdd278ca4
  421873:	sub    al,0xd5
  421875:	es stc 
  421877:	xor    eax,0x20997ff
  42187c:	xchg   ebp,eax
  42187d:	les    ebx,FWORD PTR [ecx+ebp*8-0x56acafc5]
  421884:	pop    esp
  421885:	add    al,0x1e
  421887:	stc    
  421888:	fnstcw WORD PTR ss:[eax-0x44]
  42188c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42188d:	jp     0x4218f8
  42188f:	pop    edx
  421890:	mov    eax,0xf331fda4
  421895:	imul   esi,DWORD PTR [edx+0x73],0xdb87729b
  42189c:	or     eax,0xbb1dcd99
  4218a1:	push   esi
  4218a2:	clc    
  4218a3:	enter  0x92b4,0xb2
  4218a7:	out    dx,al
  4218a8:	cld    
  4218a9:	jo     0x42185a
  4218ab:	jnp    0x421886
  4218ad:	mov    ds:0xd65e6834,eax
  4218b2:	mul    DWORD PTR [edi+edx*2]
  4218b5:	(bad)  
  4218b6:	pop    ecx
  4218b7:	jl     0x421878
  4218b9:	cmp    eax,0x9b78355
  4218be:	outs   dx,DWORD PTR ds:[esi]
  4218bf:	mov    ds:0xbd0b29a6,al
  4218c4:	pop    ss
  4218c5:	inc    eax
  4218c6:	sti    
  4218c7:	pop    edx
  4218c8:	mov    bh,0x1e
  4218ca:	in     eax,dx
  4218cb:	dec    ebx
  4218cc:	and    ah,ch
  4218ce:	dec    edx
  4218cf:	clc    
  4218d0:	mov    ebp,0xb4516bcc
  4218d5:	mov    eax,ds:0x3a9d944
  4218da:	mov    edx,0xafb5c704
  4218df:	mov    DWORD PTR [esi],0xc112194f
  4218e5:	add    bh,BYTE PTR [eax+0x52467748]
  4218eb:	push   edi
  4218ec:	mov    ds:0xdce9813b,eax
  4218f1:	iret   
  4218f2:	das    
  4218f3:	stos   DWORD PTR es:[edi],eax
  4218f4:	jmp    0x5f4:0x2e90d072
  4218fb:	and    esp,DWORD PTR [ebx-0x424d8e87]
  421901:	out    dx,al
  421902:	add    edx,DWORD PTR [edx]
  421904:	sbb    BYTE PTR gs:[ebx],bh
  421907:	jmp    0xfc5b:0x2faab4b
  42190e:	xchg   edi,eax
  42190f:	icebp  
  421910:	jo     0x42198f
  421912:	sub    al,0x2d
  421914:	int    0x78
  421916:	stc    
  421917:	jg     0x4218c2
  421919:	dec    ebx
  42191a:	jp     0x42194f
  42191c:	aad    0x28
  42191e:	fld    st(3)
  421920:	pop    ebp
  421921:	xchg   ecx,eax
  421922:	into   
  421923:	xchg   ebp,eax
  421924:	ss clc 
  421926:	repnz dec esp
  421928:	nop
  421929:	test   al,0x33
  42192b:	sbb    dl,BYTE PTR [ecx]
  42192d:	mov    al,0x7c
  42192f:	mov    esi,edi
  421931:	stos   DWORD PTR es:[edi],eax
  421932:	daa    
  421933:	dec    edx
  421934:	bound  edi,QWORD PTR [ebx-0x604a0681]
  42193a:	ret    0x3851
  42193d:	xor    ebp,DWORD PTR [ebx-0x47c4a793]
  421943:	or     eax,0xe12f074a
  421948:	cmc    
  421949:	cwde   
  42194a:	aad    0x46
  42194c:	xor    al,BYTE PTR [edx-0x54]
  42194f:	jl     0x42196b
  421951:	jecxz  0x4219bb
  421953:	sbb    eax,DWORD PTR [edi]
  421955:	out    0x92,al
  421957:	cmc    
  421958:	scas   eax,DWORD PTR es:[edi]
  421959:	mov    edi,0x1ba2e99
  42195e:	pop    ebp
  42195f:	pop    ecx
  421960:	xchg   ecx,eax
  421961:	sub    esi,DWORD PTR [edi]
  421963:	cld    
  421964:	enter  0x133d,0x90
  421968:	cwde   
  421969:	or     eax,0x57c8bb72
  42196e:	pushf  
  42196f:	loopne 0x42195d
  421971:	and    BYTE PTR [esi],bh
  421973:	pop    esi
  421974:	xor    ah,BYTE PTR [eax]
  421976:	loope  0x421905
  421978:	or     dh,al
  42197a:	mov    cl,0x5d
  42197c:	out    0x83,al
  42197e:	stos   DWORD PTR es:[edi],eax
  42197f:	mov    al,ds:0xdfa76c02
  421984:	lods   eax,DWORD PTR ds:[esi]
  421985:	pop    ecx
  421986:	xchg   ecx,eax
  421987:	lahf   
  421988:	int    0xa3
  42198a:	daa    
  42198b:	xor    eax,0x2ebb0f35
  421990:	int    0x6e
  421992:	sbb    DWORD PTR [ebx+edi*8],edx
  421995:	fstp   TBYTE PTR [edi+edi*4-0x3c0682be]
  42199c:	inc    ebp
  42199d:	inc    edx
  42199e:	add    DWORD PTR [ebp+0x46e5e6c2],0xffffffe7
  4219a5:	mov    ebp,0x621e4b82
  4219aa:	sahf   
  4219ab:	push   0x183c241d
  4219b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219b1:	pop    esp
  4219b2:	lahf   
  4219b3:	xlat   BYTE PTR ds:[ebx]
  4219b4:	ins    DWORD PTR es:[edi],dx
  4219b5:	mov    edx,0x14ae37bc
  4219ba:	in     eax,dx
  4219bb:	jg     0x421a05
  4219bd:	aam    0xba
  4219bf:	frstor [bx+si-0x7729]
  4219c4:	add    eax,0x23da0910
  4219c9:	add    edx,DWORD PTR [edx]
  4219cb:	mov    WORD PTR [ebp-0x42a30cfe],gs
  4219d1:	(bad)  
  4219d2:	imul   DWORD PTR [ebx+0x1dde7d7f]
  4219d8:	and    ch,dl
  4219da:	jb     0x4219cd
  4219dc:	mov    gs,WORD PTR ds:0x518c1c8a
  4219e2:	mov    ecx,0xb68d55d7
  4219e7:	cmp    eax,0xeb6e46fa
  4219ec:	clc    
  4219ed:	imul   esi,esp,0xf40801b1
  4219f3:	inc    esp
  4219f4:	add    esi,DWORD PTR [edx-0x25e7bbb6]
  4219fa:	or     DWORD PTR [eax-0x1a],ebp
  4219fd:	dec    eax
  4219fe:	cmp    eax,0x401d5053
  421a03:	test   eax,0x2733d005
  421a08:	neg    DWORD PTR [eax]
  421a0a:	fs xchg esp,eax
  421a0c:	cs adc bl,dh
  421a0f:	cli    
  421a10:	addr16 mov dh,0x6c
  421a13:	add    edi,DWORD PTR fs:[edi+0x1d]
  421a17:	xchg   cl,al
  421a19:	or     DWORD PTR [ebx+0x67],ebx
  421a1c:	ins    DWORD PTR es:[edi],dx
  421a1d:	xchg   ebp,eax
  421a1e:	xchg   edx,eax
  421a1f:	mov    ah,0xf4
  421a21:	(bad)  
  421a22:	lods   eax,DWORD PTR ds:[esi]
  421a23:	pop    ds
  421a24:	bound  ebp,QWORD PTR [ebx]
  421a26:	ss and eax,0x21392f3d
  421a2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a2d:	(bad)  
  421a2e:	mov    cl,0x29
  421a30:	jle    0x421a3c
  421a32:	xchg   esi,ebx
  421a34:	or     BYTE PTR [ebp-0x6c],ch
  421a37:	imul   eax,ebp,0xd2c68188
  421a3d:	push   esi
  421a3e:	daa    
  421a3f:	aas    
  421a40:	jl     0x421a9e
  421a42:	ins    BYTE PTR es:[edi],dx
  421a43:	(bad)  
  421a44:	call   0x37ce:0x239cd665
  421a4b:	add    eax,0xd26b1f2e
  421a50:	ins    BYTE PTR es:[edi],dx
  421a51:	mov    ebx,0x6a99477
  421a56:	pop    eax
  421a57:	pop    ebp
  421a58:	sti    
  421a59:	iret   
  421a5a:	ja     0x421a2d
  421a5c:	xor    esi,0x9a29f88b
  421a62:	add    eax,0x42ba7fdd
  421a67:	sbb    al,0xd8
  421a69:	retf   0xe8bd
  421a6c:	mov    ebx,0xdf9e3161
  421a71:	mov    al,0x77
  421a73:	into   
  421a74:	je     0x421a95
  421a76:	mov    cl,0xd0
  421a78:	mov    bl,0x3
  421a7a:	leave  
  421a7b:	or     DWORD PTR [ebx+0x7e],ebx
  421a7e:	inc    eax
  421a7f:	bound  ebx,QWORD PTR [eax-0x4]
  421a82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a83:	in     eax,0xf8
  421a85:	in     al,0xb9
  421a87:	repz test DWORD PTR [ecx],eax
  421a8a:	xchg   esp,eax
  421a8b:	push   ss
  421a8c:	adc    eax,0x57de546f
  421a91:	mov    ch,0x63
  421a93:	aas    
  421a94:	pop    esi
  421a95:	pop    edx
  421a96:	imul   edi,DWORD PTR [ecx+0x29],0xffffff81
  421a9a:	call   0x56e72dc5
  421a9f:	loop   0x421ac7
  421aa1:	call   0xc8a2:0x2adabca2
  421aa8:	loope  0x421ad3
  421aaa:	lock add BYTE PTR [edi+0x72ca1fea],ah
  421ab1:	jmp    0x256918a0
  421ab6:	pop    edi
  421ab7:	fcom   st(3)
  421ab9:	stos   DWORD PTR es:[edi],eax
  421aba:	in     al,dx
  421abb:	fcmovne st,st(1)
  421abd:	push   esp
  421abe:	mov    ebx,0xd356ed6d
  421ac3:	mov    ch,0x9d
  421ac5:	icebp  
  421ac6:	bnd jne 0x421a89
  421ac9:	cmp    eax,0xa537c910
  421ace:	(bad)  
  421acf:	aaa    
  421ad0:	mov    ecx,0xe82681c6
  421ad5:	mov    ah,0x97
  421ad7:	mov    esi,DWORD PTR [ebx+0x3a]
  421ada:	pop    ds
  421adb:	repz and al,0x4c
  421ade:	(bad)  
  421adf:	mov    cl,0xad
  421ae1:	test   DWORD PTR [edx-0x1b],ebp
  421ae4:	lods   al,BYTE PTR ds:[esi]
  421ae5:	pop    ecx
  421ae6:	sbb    ch,ch
  421ae8:	(bad)  
  421ae9:	xchg   ebp,eax
  421aea:	sbb    al,0x94
  421aec:	out    dx,eax
  421aed:	cmp    BYTE PTR [esi-0x72],ch
  421af0:	sahf   
  421af1:	mov    bh,0x5c
  421af3:	push   ecx
  421af4:	push   esi
  421af5:	xor    DWORD PTR [ecx-0x2976a748],ebp
  421afb:	in     eax,0x1e
  421afd:	int    0x4
  421aff:	jns    0x421b54
  421b01:	loopne 0x421b75
  421b03:	push   cs
  421b04:	mov    al,ds:0x7d122e7c
  421b09:	pop    es
  421b0a:	sahf   
  421b0b:	xchg   ecx,eax
  421b0c:	cmp    dl,BYTE PTR [edx-0x6a1a4d04]
  421b12:	in     eax,dx
  421b13:	sub    eax,0xa1e7cb0e
  421b18:	jne    0x421ac0
  421b1a:	pop    ss
  421b1b:	popf   
  421b1c:	jl     0x421b6a
  421b1e:	inc    eax
  421b1f:	pop    ds
  421b20:	int    0x54
  421b22:	fs std 
  421b24:	cmp    al,0x1c
  421b26:	mov    dl,BYTE PTR [edx]
  421b28:	jge    0x421afe
  421b2a:	push   esp
  421b2b:	xlat   BYTE PTR ds:[ebx]
  421b2c:	jge    0x421ae7
  421b2e:	sub    al,0xa0
  421b30:	inc    ecx
  421b31:	loope  0x421b6c
  421b33:	idiv   DWORD PTR [ebp-0x103fa2d2]
  421b39:	dec    ebx
  421b3a:	shr    BYTE PTR [edi],0xfc
  421b3d:	mov    ds:0x6b7ec0af,al
  421b42:	(bad)  
  421b43:	xchg   ebx,eax
  421b44:	std    
  421b45:	outs   dx,BYTE PTR ds:[esi]
  421b46:	mov    esi,0xd53343db
  421b4b:	cli    
  421b4c:	inc    ebx
  421b4d:	adc    edi,DWORD PTR [edx]
  421b4f:	sbb    DWORD PTR [edx+eax*4-0x6],esi
  421b53:	lods   eax,DWORD PTR cs:[esi]
  421b55:	jmp    0xf158:0x5019e7e4
  421b5c:	xor    bh,BYTE PTR [esi+0x6d041dff]
  421b62:	cmc    
  421b63:	neg    BYTE PTR [ecx+0x3b538b0c]
  421b69:	xor    dh,BYTE PTR [ebx+edx*2-0x4f00efa]
  421b70:	jb     0x421b63
  421b72:	and    DWORD PTR [ecx-0x6a3bf768],eax
  421b78:	jno    0x421bef
  421b7a:	int    0x95
  421b7c:	imul   esp,esp,0x94f565ad
  421b82:	fild   WORD PTR [ebx-0x57]
  421b85:	mov    ch,0x83
  421b87:	xchg   DWORD PTR [eax+0x4a15d558],edx
  421b8d:	mov    ebp,0x18c6c3e4
  421b92:	push   edi
  421b93:	xchg   esi,eax
  421b94:	lock test eax,0xa0e4e083
  421b9a:	pushf  
  421b9b:	jno    0x421b1d
  421b9d:	fidiv  WORD PTR [eax+0x377dd374]
  421ba3:	push   0xef73bdc5
  421ba8:	enter  0xb45b,0xbd
  421bac:	scas   al,BYTE PTR es:[edi]
  421bad:	pop    ds
  421bae:	push   cs
  421baf:	les    ebx,FWORD PTR [esi-0x6bf4ed15]
  421bb5:	add    esi,DWORD PTR [edi]
  421bb7:	xchg   ecx,eax
  421bb8:	or     al,0xbb
  421bba:	int    0xcf
  421bbc:	add    eax,0xd71a288f
  421bc1:	xor    edi,ebx
  421bc3:	div    DWORD PTR [esi-0x2]
  421bc6:	ds and esi,esp
  421bc9:	xchg   esi,eax
  421bca:	xchg   esi,eax
  421bcb:	inc    DWORD PTR [ebx+0x4a]
  421bce:	pusha  
  421bcf:	nop
  421bd0:	push   ss
  421bd1:	fs sub esi,ebx
  421bd4:	jbe    0x421bca
  421bd6:	ins    BYTE PTR es:[edi],dx
  421bd7:	cmp    al,0xec
  421bd9:	add    edi,eax
  421bdb:	xchg   esi,eax
  421bdc:	push   eax
  421bdd:	mov    dh,0xf8
  421bdf:	dec    edi
  421be0:	and    bl,bl
  421be2:	daa    
  421be3:	sbb    eax,0xbdc50fdb
  421be8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421be9:	adc    al,0x92
  421beb:	and    DWORD PTR [esi+0x1d],ecx
  421bee:	shl    BYTE PTR [eax+0x3b],1
  421bf1:	jmp    0x421bf7
  421bf3:	jbe    0x421b79
  421bf5:	pop    ss
  421bf6:	fdiv   DWORD PTR [eax-0x2c868ae7]
  421bfc:	popa   
  421bfd:	scas   al,BYTE PTR es:[edi]
  421bfe:	pop    eax
  421bff:	cmc    
  421c00:	cs pop eax
  421c02:	imul   ecx,DWORD PTR [ebx-0x62ac732a],0xdcde2e57
  421c0c:	jmp    0x421c87
  421c0e:	mov    bh,0xb9
  421c10:	pushf  
  421c11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c12:	lock inc edi
  421c14:	push   esp
  421c15:	sbb    eax,0xf4d25699
  421c1a:	mov    edi,0xdfec9130
  421c1f:	cld    
  421c20:	push   ecx
  421c21:	cdq    
  421c22:	adc    bh,BYTE PTR [ecx-0x8]
  421c25:	aas    
  421c26:	mov    cl,0x61
  421c28:	jg     0x421bba
  421c2a:	pop    ebp
  421c2b:	fist   DWORD PTR [eax-0x5c55c58c]
  421c31:	fld    QWORD PTR [ecx-0x75aa4fd2]
  421c37:	sahf   
  421c38:	sar    BYTE PTR [ecx+0x3a47b9a6],1
  421c3e:	dec    ecx
  421c3f:	gs call 0x562f0af1
  421c45:	cmp    ch,BYTE PTR [ebx-0x21]
  421c48:	or     DWORD PTR [ebp+0x26fe7fd1],0x37812384
  421c52:	ja     0x421c3e
  421c54:	out    0x3a,al
  421c56:	push   ebp
  421c57:	push   ss
  421c58:	mov    ecx,0xa62612cf
  421c5d:	push   es
  421c5e:	pop    edi
  421c5f:	xchg   BYTE PTR [edi+0x33af8132],dl
  421c65:	loopne 0x421c67
  421c67:	or     esp,DWORD PTR [ebx*2-0x30aa91b0]
  421c6e:	out    dx,al
  421c6f:	jle    0x421c8f
  421c71:	adc    eax,0x718f2ff6
  421c76:	ja     0x421c85
  421c78:	ror    esp,1
  421c7a:	test   cl,dh
  421c7c:	xchg   edx,eax
  421c7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c7e:	pop    ecx
  421c7f:	push   esi
  421c80:	or     DWORD PTR [esi-0x5920b27b],edx
  421c86:	sbb    DWORD PTR [esi-0x50],esp
  421c89:	and    al,0x82
  421c8b:	add    cl,ah
  421c8d:	or     cl,cl
  421c8f:	mov    BYTE PTR [edx+0x1],dh
  421c92:	and    ah,bl
  421c94:	inc    esi
  421c95:	(bad)  
  421c96:	dec    ebx
  421c97:	add    al,0xb0
  421c99:	cmc    
  421c9a:	cs std 
  421c9c:	stc    
  421c9d:	mov    edx,0x2b9073a5
  421ca2:	in     al,dx
  421ca3:	aaa    
  421ca4:	mov    edi,0xa00d318f
  421ca9:	jnp    0x421cdd
  421cab:	pop    esp
  421cac:	cwde   
  421cad:	sbb    al,BYTE PTR [ebx+0x321c992c]
  421cb3:	dec    esi
  421cb4:	fild   WORD PTR [eax+0x3c]
  421cb7:	cs not cl
  421cba:	ja     0x421c95
  421cbc:	aad    0xcf
  421cbe:	and    bl,BYTE PTR [edi]
  421cc0:	lods   eax,DWORD PTR ds:[esi]
  421cc1:	jmp    0x620fe578
  421cc6:	cmp    DWORD PTR [edi-0x76],ebp
  421cc9:	pop    esi
  421cca:	mov    ds:0xecbe809b,eax
  421ccf:	retf   
  421cd0:	rcl    BYTE PTR [eax+0x1a95d3d6],cl
  421cd6:	push   0x8e70d23e
  421cdb:	xchg   BYTE PTR [ebp+0x58],ch
  421cde:	(bad)  
  421cdf:	sti    
  421ce0:	stc    
  421ce1:	jno    0x421d0e
  421ce3:	ret    0x7d75
  421ce6:	mov    al,ds:0xbc0f84a0
  421ceb:	mov    WORD PTR [ebx+0x51df27d4],ss
  421cf1:	mov    dl,0x3b
  421cf3:	xchg   DWORD PTR ds:0x3c1cac43,ecx
  421cf9:	out    0x78,al
  421cfb:	push   esi
  421cfc:	ins    BYTE PTR es:[edi],dx
  421cfd:	lahf   
  421cfe:	retf   
  421cff:	pop    ebx
  421d00:	std    
  421d01:	call   0xe18be9dc
  421d06:	mov    cl,0x3a
  421d08:	in     eax,0xdd
  421d0a:	fst    QWORD PTR [edi-0x27b466d7]
  421d10:	xor    BYTE PTR [ebp-0x7bdfa7e2],ah
  421d16:	sub    al,0x28
  421d18:	loope  0x421d37
  421d1a:	clc    
  421d1b:	mov    esi,eax
  421d1d:	push   ss
  421d1e:	bound  ebp,QWORD PTR [ebp+0x6e152422]
  421d24:	(bad)  
  421d26:	mov    BYTE PTR [ecx-0x22b7efe8],0x7f
  421d2d:	xor    esp,edi
  421d2f:	not    ch
  421d31:	or     ebx,DWORD PTR [ebx]
  421d33:	aas    
  421d34:	lahf   
  421d35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d36:	cld    
  421d37:	sar    DWORD PTR [ebp-0x6ccda0cd],0xba
  421d3e:	mov    eax,ds:0x26d0fa20
  421d43:	dec    ecx
  421d44:	loopne 0x421d05
  421d46:	inc    edi
  421d47:	daa    
  421d48:	xchg   edx,eax
  421d49:	cmp    eax,0x303ef3eb
  421d4e:	cmp    al,BYTE PTR [ecx-0x58809322]
  421d54:	scas   eax,DWORD PTR es:[edi]
  421d55:	push   ds
  421d56:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  421d58:	pop    ebx
  421d59:	retf   0xef83
  421d5c:	sbb    bh,BYTE PTR [eax+ecx*8]
  421d5f:	lds    edx,FWORD PTR ds:0x53f8c049
  421d65:	clc    
  421d66:	sbb    BYTE PTR [esi],bl
  421d68:	sub    ch,bh
  421d6a:	dec    edi
  421d6b:	mul    DWORD PTR [esi]
  421d6d:	mov    bl,0x37
  421d6f:	sub    eax,DWORD PTR [eax-0x7]
  421d72:	pop    ds
  421d73:	test   BYTE PTR [eax+ebp*4-0x1be4194e],cl
  421d7a:	daa    
  421d7b:	loope  0x421d58
  421d7d:	push   ecx
  421d7e:	dec    ecx
  421d7f:	repz mul BYTE PTR [edi]
  421d82:	inc    ebp
  421d83:	sub    DWORD PTR [ebx-0x50a9b1a4],eax
  421d89:	or     ebp,0x11b7216f
  421d8f:	or     BYTE PTR [ecx],al
  421d91:	ret    
  421d92:	pop    esi
  421d93:	das    
  421d94:	imul   esp,DWORD PTR [edi+eax*1-0x51f116fb],0x1b
  421d9c:	inc    ebp
  421d9d:	and    al,0x21
  421d9f:	in     eax,0x77
  421da1:	cmp    DWORD PTR [ebp+0x72],esp
  421da4:	or     dh,BYTE PTR [edi+0x7f]
  421da7:	inc    DWORD PTR [eax-0x70c0451a]
  421dad:	lock adc BYTE PTR ds:0x45b0ca1,0x56
  421db5:	and    ecx,DWORD PTR [ebx]
  421db7:	mov    ecx,0xf51d0c67
  421dbc:	sub    DWORD PTR [ebp+0x4835f7f2],0xffffff8d
  421dc3:	sub    ah,BYTE PTR [edx+0x3d7e2e79]
  421dc9:	add    DWORD PTR [edi],edi
  421dcb:	aas    
  421dcc:	pop    edx
  421dcd:	sbb    DWORD PTR [edx-0x58f7e6ed],ebp
  421dd3:	jbe    0x421d87
  421dd5:	jns    0x421d61
  421dd7:	dec    eax
  421dd8:	inc    esi
  421dd9:	ja     0x421d7d
  421ddb:	ins    DWORD PTR es:[edi],dx
  421ddc:	pop    es
  421ddd:	loope  0x421e1d
  421ddf:	jl     0x421dcd
  421de1:	mov    eax,0x19f22554
  421de6:	aam    0x9a
  421de8:	(bad)  
  421dea:	gs adc esp,ebp
  421ded:	inc    eax
  421dee:	add    eax,0x9b7d3657
  421df3:	shr    DWORD PTR [ebp+0x63],0xe4
  421df7:	pushw  0xffb2
  421dfa:	jnp    0x421dfa
  421dfc:	fld    QWORD PTR [ecx]
  421dfe:	leave  
  421dff:	ds or  al,0x90
  421e02:	pop    ebp
  421e03:	loope  0x421de5
  421e05:	gs mov cl,0x3a
  421e08:	in     eax,0x21
  421e0a:	pop    eax
  421e0b:	fs mov ah,0xdb
  421e0e:	loop   0x421e37
  421e10:	test   bh,ch
  421e12:	push   0x36
  421e14:	ja     0x421e4a
  421e16:	mov    al,0xc8
  421e18:	test   al,0x4c
  421e1a:	pusha  
  421e1b:	mov    dh,0xb5
  421e1d:	pop    ecx
  421e1e:	inc    edi
  421e1f:	rol    BYTE PTR [esi+0x74],1
  421e22:	or     ebx,ecx
  421e24:	dec    ebp
  421e25:	(bad)  
  421e26:	mov    eax,0xb1bda39e
  421e2b:	test   al,0xda
  421e2d:	fsubp  st(0),st
  421e2f:	xchg   BYTE PTR [ecx+0x519f3986],bh
  421e35:	out    0x9d,al
  421e37:	pusha  
  421e38:	xchg   ebx,ebx
  421e3a:	fist   WORD PTR [ebx-0x7c3e689]
  421e40:	aad    0x25
  421e42:	pop    ebp
  421e43:	addr16 jbe 0x421dd8
  421e46:	ins    DWORD PTR es:[edi],dx
  421e47:	xor    esp,esi
  421e49:	mov    ebx,0x5dc9b2df
  421e4e:	sub    al,0xb4
  421e50:	loopne 0x421e69
  421e52:	fstp   TBYTE PTR [ebx+0x36]
  421e55:	fadd   st,st(5)
  421e57:	rcr    eax,1
  421e59:	xor    DWORD PTR [edx-0x16],ecx
  421e5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e5d:	jp     0x421eb1
  421e5f:	inc    eax
  421e60:	xor    ebp,DWORD PTR [ebx]
  421e62:	pop    ecx
  421e63:	js     0x421e00
  421e65:	xor    ebp,DWORD PTR [edx+0x42]
  421e68:	arpl   WORD PTR [ebx+0x7],dx
  421e6b:	mov    edx,0x5282d9ed
  421e70:	in     eax,0x49
  421e72:	xchg   esi,eax
  421e73:	fild   WORD PTR [ebp-0xe]
  421e76:	cmc    
  421e77:	(bad)  
  421e78:	cmp    DWORD PTR [eax-0x1de8c4e0],edx
  421e7e:	test   eax,0xae713cc7
  421e83:	push   0xaddc5f73
  421e88:	xlat   BYTE PTR ds:[ebx]
  421e89:	add    bl,BYTE PTR [ebp+0xb]
  421e8c:	push   ebp
  421e8d:	sahf   
  421e8e:	dec    edx
  421e8f:	inc    esp
  421e90:	les    ecx,FWORD PTR [edx+0x7b]
  421e93:	jecxz  0x421eea
  421e95:	test   DWORD PTR [esi+ecx*1+0x54],edx
  421e99:	rcr    DWORD PTR ds:0xf36dd4d7,0xf7
  421ea0:	iret   
  421ea1:	arpl   WORD PTR [ebx],si
  421ea3:	pop    ebp
  421ea4:	add    al,0x4b
  421ea6:	ins    BYTE PTR es:[edi],dx
  421ea7:	push   edi
  421ea8:	cmp    BYTE PTR [edx],ch
  421eaa:	rcr    DWORD PTR [edx+0x49],0xd
  421eae:	out    dx,al
  421eaf:	mov    WORD PTR [ecx],?
  421eb1:	(bad)  
  421eb2:	je     0x421f16
  421eb4:	fisubr WORD PTR [ecx]
  421eb6:	repnz and cl,BYTE PTR [eax]
  421eb9:	pushf  
  421eba:	test   al,0x48
  421ebc:	sub    BYTE PTR [esi+eax*1-0x25],cl
  421ec0:	sub    bh,BYTE PTR [eax-0x2]
  421ec3:	repz out dx,eax
  421ec5:	inc    edi
  421ec6:	add    eax,0x6d29708c
  421ecb:	repnz xchg ebx,eax
  421ecd:	push   ecx
  421ece:	xor    dh,BYTE PTR [esi+0x4fb7e8c3]
  421ed4:	add    DWORD PTR [esi-0x58a80a08],ebx
  421eda:	jne    0x421e74
  421edc:	test   BYTE PTR [eax-0x7dc5c93],al
  421ee2:	loop   0x421f48
  421ee4:	out    0x3c,eax
  421ee6:	add    eax,0xa024d536
  421eeb:	inc    ebx
  421eec:	and    eax,0x86f8aef2
  421ef1:	xchg   ebx,eax
  421ef2:	ror    esp,1
  421ef4:	shr    DWORD PTR [ecx-0x48],0x29
  421ef8:	and    ch,al
  421efa:	fs enter 0x24b5,0x8a
  421eff:	mov    ecx,0x3e1cdc9e
  421f04:	xor    esp,esp
  421f06:	xchg   DWORD PTR [esi],esp
  421f08:	mov    bl,0x66
  421f0a:	sbb    ecx,esp
  421f0c:	lea    ebx,[eax]
  421f0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f0f:	mov    esp,0x279d593c
  421f14:	xor    eax,DWORD PTR [edx]
  421f16:	ror    BYTE PTR [esi-0x6da69e02],cl
  421f1c:	not    edi
  421f1e:	enter  0x4195,0x4
  421f22:	add    BYTE PTR [edi-0x26f65d69],al
  421f28:	mov    ebp,0x82f22495
  421f2d:	xor    BYTE PTR [esi+0x1a],ah
  421f30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f31:	mov    BYTE PTR [ebx-0x48],bh
  421f34:	jb     0x421f64
  421f36:	bound  esi,QWORD PTR [ecx+0x727b8ca4]
  421f3c:	jmp    0x7f4f98dc
  421f41:	rcl    DWORD PTR [edx+0x74ba2b6],cl
  421f47:	push   edi
  421f48:	and    esp,DWORD PTR [ecx]
  421f4a:	cdq    
  421f4b:	ja     0x421f31
  421f4d:	jns    0x421fcb
  421f4f:	inc    edi
  421f50:	xor    dh,dl
  421f52:	test   BYTE PTR [ebp-0x76236667],al
  421f58:	pushf  
  421f59:	aam    0xd7
  421f5b:	fiadd  DWORD PTR [edx+0x27]
  421f5e:	dec    eax
  421f5f:	aas    
  421f60:	test   al,dl
  421f62:	addr16 nop
  421f64:	cdq    
  421f65:	sub    al,0x4e
  421f67:	pop    edx
  421f68:	dec    edx
  421f69:	xlat   BYTE PTR ds:[ebx]
  421f6a:	jl     0x421fd8
  421f6c:	(bad)  
  421f6d:	jmp    0x421fd1
  421f6f:	in     al,0x9a
  421f71:	(bad)
  421f74:	(bad)  
  421f75:	(bad)  
  421f76:	xor    eax,DWORD PTR [ecx-0x5d]
  421f79:	xchg   ebx,eax
  421f7a:	call   0x8ef9:0xc950fa44
  421f81:	dec    ecx
  421f82:	ror    edx,1
  421f84:	ins    DWORD PTR es:[edi],dx
  421f85:	lds    edi,FWORD PTR [ebx+eax*4]
  421f88:	out    dx,eax
  421f89:	repz in al,dx
  421f8b:	js     0x421f75
  421f8d:	ret    0xf1e7
  421f90:	icebp  
  421f91:	(bad)  
  421f92:	and    al,0xd7
  421f94:	jae    0x421f35
  421f96:	cmc    
  421f97:	jno    0x7aa2989c
  421f9d:	scas   eax,DWORD PTR es:[edi]
  421f9e:	jno    0x421fcc
  421fa0:	jle    0x421fc9
  421fa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fa3:	xchg   esp,edi
  421fa5:	dec    edi
  421fa6:	push   ecx
  421fa7:	fcmovnbe st,st(0)
  421fa9:	pop    eax
  421faa:	rcl    edx,0xe3
  421fad:	mov    dl,BYTE PTR [esi]
  421faf:	out    0xcb,al
  421fb1:	out    dx,eax
  421fb2:	pop    esp
  421fb3:	stos   DWORD PTR es:[edi],eax
  421fb4:	pop    es
  421fb5:	jmp    0x1a2d53f
  421fba:	xor    al,0xcd
  421fbc:	arpl   WORD PTR [edx+0x3d23637d],cx
  421fc2:	out    0x73,eax
  421fc4:	popa   
  421fc5:	pop    eax
  421fc6:	cmp    eax,0x22698b4e
  421fcb:	add    ah,BYTE PTR [ebp+eax*8-0x55]
  421fcf:	(bad)  
  421fd0:	div    DWORD PTR [eax]
  421fd2:	xchg   ebx,eax
  421fd3:	dec    edx
  421fd4:	push   ss
  421fd5:	icebp  
  421fd6:	jo     0x422037
  421fd8:	fist   DWORD PTR [ecx-0x19]
  421fdb:	loopne 0x421fa4
  421fdd:	push   ss
  421fde:	sub    BYTE PTR [eax-0x6ec9c6d9],bl
  421fe4:	push   cs
  421fe5:	push   eax
  421fe6:	dec    ebx
  421fe7:	inc    ebx
  421fe8:	or     eax,0x927e426f
  421fed:	jnp    0x421fdf
  421fef:	mov    ah,0xe6
  421ff1:	mov    esi,0x8bbd95fb
  421ff6:	or     esi,DWORD PTR [esp+ebp*4]
  421ff9:	push   0xffffffd3
  421ffb:	jbe    0x421fc4
  421ffd:	icebp  
  421ffe:	(bad)  
  422000:	mov    WORD PTR [ebx+0x34],?
  422003:	lods   al,BYTE PTR ds:[esi]
  422004:	inc    ebx
  422005:	dec    ebx
  422006:	adc    al,0xf3
  422008:	int3   
  422009:	jg     0x42206c
  42200b:	jl     0x422004
  42200d:	loopne 0x422004
  42200f:	push   cs
  422010:	retf   
  422011:	jne    0x422020
  422013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422014:	or     eax,0x47458df2
  422019:	push   esp
  42201a:	xchg   edi,eax
  42201b:	push   cs
  42201c:	arpl   WORD PTR ds:[edx+esi*4+0x49],di
  422021:	jle    0x42208b
  422023:	addr16 clc 
  422025:	xchg   esi,eax
  422026:	pop    edi
  422027:	(bad)  
  422028:	jnp    0x422068
  42202a:	aaa    
  42202b:	pop    esi
  42202c:	sbb    DWORD PTR [edx+ecx*2+0x2a062f68],0xffffffb2
  422034:	div    DWORD PTR [edx-0x64]
  422037:	retf   0x722b
  42203a:	dec    eax
  42203b:	daa    
  42203c:	lods   al,BYTE PTR ds:[esi]
  42203d:	sub    BYTE PTR [edi+0x7c14bbd2],ch
  422043:	add    BYTE PTR [eax],dl
  422045:	adc    eax,0xc18d2420
  42204a:	xchg   edx,eax
  42204b:	cmp    al,0x30
  42204d:	nop
  42204e:	xchg   ebx,eax
  42204f:	mov    dl,0x17
  422051:	push   edx
  422052:	fidiv  WORD PTR [edx-0x14]
  422055:	nop
  422056:	adc    eax,0x99c43bc3
  42205b:	xor    al,BYTE PTR [eax+0x4b78e2bc]
  422061:	mov    eax,ds:0x64193e83
  422066:	fidiv  DWORD PTR [esi-0x6cfc3502]
  42206c:	mov    eax,0xb3e8cec5
  422071:	ror    bl,cl
  422073:	scas   eax,DWORD PTR es:[edi]
  422074:	dec    ebx
  422075:	sbb    ah,bh
  422077:	ret    0xae90
  42207a:	and    al,0xda
  42207c:	sbb    eax,0xb7f90cf9
  422081:	jg     0x422081
  422083:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422084:	mov    eax,ds:0xe31db5b9
  422089:	jno    0x4220c7
  42208b:	push   ecx
  42208c:	lods   al,BYTE PTR ds:[esi]
  42208d:	aaa    
  42208e:	dec    esi
  42208f:	and    eax,0xb0ee92ba
  422094:	sub    eax,0x1876c89b
  422099:	mov    WORD PTR [ebp-0x47b07797],ds
  42209f:	ins    BYTE PTR es:[edi],dx
  4220a0:	xchg   esi,eax
  4220a1:	xchg   edx,eax
  4220a2:	mov    ah,0xc5
  4220a4:	and    cl,bh
  4220a6:	data16 cli 
  4220a8:	pop    es
  4220a9:	pop    ebx
  4220aa:	and    al,0x1f
  4220ac:	into   
  4220ad:	add    BYTE PTR ds:0xce7c7c3a,bl
  4220b3:	inc    esp
  4220b4:	dec    ebx
  4220b5:	or     al,0x9b
  4220b7:	jmp    0x116c0ce2
  4220bc:	jecxz  0x4220f3
  4220be:	cmp    dh,al
  4220c0:	(bad)  
  4220c1:	lds    edi,FWORD PTR [ecx]
  4220c3:	dec    edi
  4220c4:	ja     0x42205e
  4220c6:	adc    BYTE PTR [edx],bh
  4220c8:	pop    ebx
  4220c9:	jo     0x422064
  4220cb:	or     al,0xca
  4220cd:	call   0xc35e:0x136d48c9
  4220d4:	call   0xbd8a:0xbf195141
  4220db:	and    BYTE PTR ds:0x56868e4e,ch
  4220e1:	and    al,0x7b
  4220e3:	es stc 
  4220e5:	mov    ebp,0xdaac9ebd
  4220ea:	inc    edi
  4220eb:	fidivr WORD PTR [edi-0x2e8f1b0a]
  4220f1:	sbb    eax,0x4a0797e5
  4220f6:	loope  0x4220ae
  4220f8:	(bad)  
  4220f9:	push   ss
  4220fa:	leave  
  4220fb:	xchg   edx,eax
  4220fc:	pushf  
  4220fd:	xor    esi,ecx
  4220ff:	std    
  422100:	xchg   esi,eax
  422101:	fldenv [ebp+0x41]
  422104:	or     bh,bl
  422106:	ins    DWORD PTR es:[edi],dx
  422107:	add    dh,bl
  422109:	in     eax,dx
  42210a:	cmp    BYTE PTR [eax],dh
  42210c:	test   DWORD PTR [edi-0x5e],ecx
  42210f:	inc    edi
  422110:	jns    0x422111
  422112:	or     al,BYTE PTR [esp+esi*4-0x6bba9203]
  422119:	push   es
  42211a:	popa   
  42211b:	shl    ebp,1
  42211d:	jne    0x4220b2
  42211f:	loop   0x4220bb
  422121:	dec    edi
  422122:	or     bh,al
  422124:	inc    esi
  422125:	sahf   
  422126:	imul   edi,DWORD PTR [esi-0x5fed3b50],0xea214473
  422130:	push   ebx
  422131:	repz add al,0xab
  422134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422135:	mov    al,0x9
  422137:	jmp    0x4221b8
  422139:	dec    edi
  42213a:	dec    edi
  42213b:	ja     0x4220e3
  42213d:	jg     0x422188
  42213f:	pushf  
  422140:	inc    ebx
  422141:	xchg   edx,eax
  422142:	in     eax,dx
  422143:	mov    WORD PTR ds:0xe42c6cb9,cs
  422149:	dec    edi
  42214a:	adc    BYTE PTR [edx],al
  42214c:	push   eax
  42214d:	mov    dl,0xd4
  42214f:	cld    
  422150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422151:	push   ds
  422152:	mov    edi,0xbe7e1169
  422157:	sbb    eax,DWORD PTR [eax+0xc952f8f]
  42215d:	je     0x4220fd
  42215f:	jl     0x4221c2
  422161:	or     eax,0x5fcd92b0
  422166:	or     BYTE PTR [bp+si-0x2b],0xd3
  42216b:	sub    eax,0x11e6e9d5
  422170:	sbb    BYTE PTR [edi+0x4b],bl
  422173:	xor    ebx,0x4d289da8
  422179:	pop    ecx
  42217a:	mov    dl,bh
  42217c:	call   0xf90e:0xac7018ee
  422183:	inc    esi
  422184:	add    BYTE PTR [ebx+0x76],0x2c
  422188:	(bad)  
  422189:	pop    ss
  42218a:	(bad)  
  42218b:	int3   
  42218c:	loope  0x42220a
  42218e:	jno    0x4221ba
  422190:	xchg   BYTE PTR [eax+ebp*4-0x199e005c],dh
  422197:	out    dx,eax
  422198:	or     eax,0xac4aa669
  42219d:	mov    al,0xb8
  42219f:	les    ebx,FWORD PTR [esi-0x41]
  4221a2:	(bad)  
  4221a3:	push   ebp
  4221a4:	jae    0x422169
  4221a6:	(bad)  
  4221a7:	push   edx
  4221a8:	loop   0x422219
  4221aa:	es mov al,0xaf
  4221ad:	sbb    ah,ch
  4221af:	cmp    eax,0xf27defed
  4221b4:	xchg   BYTE PTR [ebx+0x62],al
  4221b7:	sbb    BYTE PTR [ebx+0x32],al
  4221ba:	test   al,0x69
  4221bc:	xor    al,0xd
  4221be:	mov    ebx,0x8d87c812
  4221c3:	lea    edx,[esi]
  4221c5:	jne    0x4221a4
  4221c7:	dec    eax
  4221c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221c9:	sahf   
  4221ca:	daa    
  4221cb:	test   BYTE PTR [esp+edi*1-0x102ffa47],al
  4221d2:	dec    eax
  4221d3:	outs   dx,DWORD PTR ds:[esi]
  4221d4:	jmp    0x911f89ed
  4221d9:	inc    eax
  4221da:	xchg   ebp,eax
  4221db:	stos   BYTE PTR es:[edi],al
  4221dc:	xor    al,0xc6
  4221de:	add    cl,BYTE PTR [edx-0x4a]
  4221e1:	pop    edx
  4221e2:	jae    0x4221fa
  4221e4:	pop    ds
  4221e5:	lahf   
  4221e6:	jno    0x4221cc
  4221e8:	inc    ebx
  4221e9:	or     DWORD PTR [eax-0x1d245ddc],edx
  4221ef:	call   0xb78:0xc4ba0c15
  4221f6:	mov    ds,WORD PTR [eax+0x433bfec7]
  4221fc:	dec    ebp
  4221fd:	popf   
  4221fe:	mov    bh,0xc9
  422200:	mov    bh,dl
  422202:	pop    ecx
  422203:	sahf   
  422204:	cwde   
  422205:	aaa    
  422206:	test   al,0x54
  422208:	fdivr  QWORD PTR [esi]
  42220a:	or     BYTE PTR [edx-0x5],0x36
  42220e:	aaa    
  42220f:	sbb    BYTE PTR [edi+0x16],ch
  422212:	sahf   
  422213:	mov    dl,0x65
  422215:	call   0xb62e:0x68b550dc
  42221c:	test   DWORD PTR [edi+0x42],0x279f3d92
  422223:	cld    
  422224:	pop    eax
  422225:	cmp    eax,0x8e84c070
  42222a:	jge    0x4221c1
  42222c:	imul   edx,ebp,0xb7ea3500
  422232:	jp     0x4221c9
  422234:	jmp    0x50623677
  422239:	and    bh,BYTE PTR [edi-0x88a84c8]
  42223f:	xor    dl,al
  422241:	das    
  422242:	push   esi
  422243:	mov    ah,0x21
  422245:	addr16 das 
  422247:	repz scas al,BYTE PTR es:[edi]
  422249:	leave  
  42224a:	pop    es
  42224b:	mov    BYTE PTR [edx],0x70
  42224e:	aam    0xa3
  422250:	rcr    DWORD PTR [edx-0x61acd868],0x90
  422257:	adc    eax,0x78942254
  42225c:	push   es
  42225d:	ss mov ebp,0xf755594b
  422263:	test   eax,0xcbacd79e
  422268:	add    ch,bl
  42226a:	mov    ah,dh
  42226c:	mov    ecx,0x95e67495
  422271:	into   
  422272:	sub    eax,0x59e48a72
  422277:	pop    edi
  422278:	jbe    0x4222a7
  42227a:	push   esi
  42227b:	pop    esi
  42227c:	xchg   BYTE PTR ds:0x9567723f,al
  422282:	imul   ecx,DWORD PTR ds:[esi+0xc],0xfffffffb
  422287:	ins    BYTE PTR es:[edi],dx
  422288:	ret    
  422289:	pop    ds
  42228a:	xchg   esp,eax
  42228b:	neg    DWORD PTR ds:0x3937823c
  422291:	in     al,0xea
  422293:	and    dl,ch
  422295:	sti    
  422296:	pop    edx
  422297:	test   eax,0xae1264e9
  42229c:	(bad)  
  42229e:	mov    al,BYTE PTR [eax+0x3a63a2fc]
  4222a4:	and    edi,DWORD PTR [ebx]
  4222a6:	adc    al,0xc
  4222a8:	mov    BYTE PTR [edi-0x6ce4cfce],ah
  4222ae:	daa    
  4222af:	cmp    ecx,ecx
  4222b1:	fst    QWORD PTR [edx+0x29d2aad3]
  4222b7:	sbb    dl,BYTE PTR [edx]
  4222b9:	push   ebx
  4222ba:	ret    0x7679
  4222bd:	or     edi,esp
  4222bf:	jmp    DWORD PTR [edx+0x6fedcdb2]
  4222c5:	scas   eax,DWORD PTR es:[edi]
  4222c6:	jg     0x422331
  4222c8:	mov    ah,0x4a
  4222ca:	enter  0x3d46,0x22
  4222ce:	inc    eax
  4222cf:	popf   
  4222d0:	sub    al,0xa6
  4222d2:	pop    ecx
  4222d3:	dec    esi
  4222d4:	clc    
  4222d5:	dec    eax
  4222d6:	jecxz  0x42232e
  4222d8:	dec    ebx
  4222d9:	pop    eax
  4222da:	popf   
  4222db:	pop    ds
  4222dc:	push   0x46
  4222de:	gs ds iret 
  4222e1:	test   BYTE PTR [ecx-0x5ea933ab],dl
  4222e7:	aad    0xfb
  4222e9:	call   0x961a:0x8af39779
  4222f0:	mov    edi,0x33412708
  4222f5:	pusha  
  4222f6:	push   eax
  4222f7:	dec    edx
  4222f8:	xor    BYTE PTR [ebx+0x2958258f],dl
  4222fe:	push   ecx
  4222ff:	sub    BYTE PTR [ecx],cl
  422301:	enter  0x85c4,0x85
  422305:	sahf   
  422306:	pop    es
  422307:	stos   DWORD PTR es:[edi],eax
  422308:	push   ebx
  422309:	pop    ecx
  42230a:	sbb    DWORD PTR [eax],ecx
  42230c:	dec    edx
  42230d:	add    eax,0x852c815d
  422312:	push   ebx
  422313:	test   al,0x88
  422315:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422316:	xor    al,BYTE PTR [edi+0x288e6d40]
  42231c:	jno    0x4222f2
  42231e:	xchg   ecx,eax
  42231f:	int    0x1f
  422321:	ret    
  422322:	fs (bad) 
  422324:	je     0x422325
  422326:	retf   0xbd9b
  422329:	add    BYTE PTR [ebp+0x57],al
  42232c:	push   ebx
  42232d:	and    ah,BYTE PTR [ebx]
  42232f:	imul   ebp,DWORD PTR [edx-0x51333414],0xffffff9d
  422336:	sub    edx,DWORD PTR [ebx-0x19]
  422339:	jnp    0x4222c8
  42233b:	sub    edi,DWORD PTR [eax]
  42233d:	dec    DWORD PTR [ebp-0x5bd51cb0]
  422343:	adc    BYTE PTR [edi],dh
  422345:	nop
  422346:	imul   eax,ebp,0x3b8690bc
  42234c:	jo     0x4223bb
  42234e:	fwait
  42234f:	push   ebp
  422350:	dec    eax
  422351:	loopne 0x422349
  422353:	lds    ecx,FWORD PTR [ebp+0x2]
  422356:	mov    WORD PTR [edi-0x444eb9d7],fs
  42235c:	inc    eax
  42235d:	mov    eax,0xd05736c2
  422362:	lods   al,BYTE PTR ds:[esi]
  422363:	mov    ah,0x74
  422365:	push   edi
  422366:	scas   al,BYTE PTR es:[edi]
  422367:	xchg   cx,ax
  422369:	dec    ecx
  42236a:	mov    fs,WORD PTR [ecx+eax*2+0xca6cc1e]
  422371:	loopne 0x422307
  422373:	xor    BYTE PTR [ecx],ch
  422375:	adc    BYTE PTR [edx],dl
  422377:	or     al,0xf0
  422379:	push   edi
  42237a:	or     eax,0x44f9325d
  42237f:	imul   esp,DWORD PTR [ebx-0x31adc020],0xffffffe0
  422386:	pop    edx
  422387:	pop    esi
  422388:	call   0xcadb:0xe9b27537
  42238f:	pop    ecx
  422390:	data16 cmc 
  422392:	cmp    DWORD PTR [ecx],0x4597dce
  422398:	lods   al,BYTE PTR ds:[esi]
  422399:	fst    QWORD PTR [edi]
  42239b:	stos   DWORD PTR es:[edi],eax
  42239c:	sbb    dh,BYTE PTR [ecx]
  42239e:	mov    DWORD PTR [ebx],ecx
  4223a0:	out    dx,eax
  4223a1:	sub    DWORD PTR [esi],esp
  4223a3:	mov    eax,ds:0x44908a3
  4223a8:	imul   BYTE PTR [eax-0x17]
  4223ab:	xor    BYTE PTR [edx-0x2e98d3be],ah
  4223b1:	push   ebx
  4223b2:	mov    cs:0x8fe137a1,al
  4223b8:	adc    BYTE PTR ss:[ecx+edx*8+0x1cb7815c],dh
  4223c0:	or     DWORD PTR [ebx+0x2f],esi
  4223c3:	pop    edi
  4223c4:	push   cs
  4223c5:	push   0xf6a97d7e
  4223ca:	xchg   edi,eax
  4223cb:	mov    dh,ah
  4223cd:	fsubr  DWORD PTR [esi]
  4223cf:	or     DWORD PTR [edx+0x2339e2df],esi
  4223d5:	push   esi
  4223d6:	or     al,0xd7
  4223d8:	add    DWORD PTR [edi+0x10f3519f],0x2c0d0524
  4223e2:	jg     0x4223f8
  4223e4:	in     al,0xa9
  4223e6:	pop    ebx
  4223e7:	and    eax,0x82cd19a2
  4223ec:	mov    edx,0x6f264ed0
  4223f1:	or     al,0x91
  4223f3:	gs sbb ebx,esp
  4223f6:	dec    ebx
  4223f7:	ins    DWORD PTR es:[edi],dx
  4223f8:	pop    esi
  4223f9:	sar    DWORD PTR [edx],0xa4
  4223fc:	dec    esi
  4223fd:	mov    dh,dh
  4223ff:	xor    esp,edi
  422401:	iret   
  422402:	(bad)  
  422403:	mov    ah,0xaa
  422405:	lds    ebp,FWORD PTR [eax-0x4e]
  422408:	cmp    BYTE PTR [ebp+0xd],0xda
  42240c:	mov    cl,0x5c
  42240e:	test   DWORD PTR ds:0xd8757a8f,ebx
  422414:	lahf   
  422415:	cwde   
  422416:	mov    WORD PTR [esi+0x2b],es
  422419:	daa    
  42241a:	pop    ecx
  42241b:	rol    DWORD PTR [ebp+0x47aec52b],0x7b
  422422:	(bad)  
  422423:	xor    edi,DWORD PTR [edi+0x7d]
  422426:	outs   dx,DWORD PTR ds:[esi]
  422427:	jmp    0x422479
  422429:	cmc    
  42242a:	ret    
  42242b:	push   esi
  42242c:	jmp    0x2b93:0xdec3cc49
  422433:	loopne 0x4223e9
  422435:	sti    
  422436:	push   edi
  422437:	lods   eax,DWORD PTR ds:[esi]
  422438:	dec    edi
  422439:	lea    eax,[edx]
  42243b:	loope  0x4224ac
  42243d:	scas   eax,DWORD PTR es:[edi]
  42243e:	jmp    0xf47deaf5
  422443:	pop    ds
  422444:	test   BYTE PTR [edi],dl
  422446:	jno    0x4224a3
  422448:	mov    al,0x47
  42244a:	cdq    
  42244b:	and    eax,0x218cb7c0
  422450:	and    ecx,DWORD PTR [ebp+0x392b79b5]
  422456:	popf   
  422457:	rcl    BYTE PTR [edx+0x7ad65621],0x24
  42245e:	mov    edi,0xe0e0bdfd
  422463:	call   0x6067:0xacc12577
  42246a:	popf   
  42246b:	sbb    eax,0xd813d3e2
  422470:	mov    ebx,0xb52bd364
  422475:	repz sbb eax,0x5381507b
  42247b:	or     BYTE PTR [ebx+0x5d],bh
  42247e:	sahf   
  42247f:	mov    bh,0x62
  422481:	out    dx,eax
  422482:	mov    ecx,0x3965e11e
  422487:	mov    ebp,0xb5f6309d
  42248c:	mov    ebp,0x649bf4b5
  422491:	fnsave [esi]
  422493:	push   cs
  422494:	sti    
  422495:	rcl    ecx,1
  422497:	add    ebp,DWORD PTR [ebp+0x13a34615]
  42249d:	addr16 push ds
  42249f:	test   eax,0xea4132ec
  4224a4:	and    ecx,DWORD PTR [edx-0x8176ece]
  4224aa:	sub    DWORD PTR [edx],0xf88a0ba0
  4224b0:	popa   
  4224b1:	and    BYTE PTR [esi],dl
  4224b3:	push   DWORD PTR [ebx+esi*8+0x348032b3]
  4224ba:	cli    
  4224bb:	iret   
  4224bc:	mov    dh,0x4a
  4224be:	pop    ss
  4224bf:	stos   DWORD PTR es:[edi],eax
  4224c0:	cld    
  4224c1:	pop    edx
  4224c2:	loope  0x422454
  4224c4:	out    0xfb,eax
  4224c6:	pop    esp
  4224c7:	pop    esi
  4224c8:	cmp    edi,edx
  4224ca:	out    0xc0,eax
  4224cc:	loopne 0x422466
  4224ce:	push   ecx
  4224cf:	aas    
  4224d0:	and    ebp,ebx
  4224d2:	mov    al,ds:0x720d39f6
  4224d7:	mov    esi,0x13bf584e
  4224dc:	pop    ds
  4224dd:	or     ch,al
  4224df:	(bad)  
  4224e0:	call   FWORD PTR [esi-0xf5d29d5]
  4224e6:	into   
  4224e7:	js     0x42254a
  4224e9:	xlat   BYTE PTR ds:[ebx]
  4224ea:	je     0x42253c
  4224ec:	ds mov ch,0x42
  4224ef:	into   
  4224f0:	gs iret 
  4224f2:	test   BYTE PTR [eax+0x44],0xd8
  4224f6:	hlt    
  4224f7:	adc    BYTE PTR [edx-0x7d],bl
  4224fa:	in     eax,0x9c
  4224fc:	adc    BYTE PTR [eax+0x6b],bl
  4224ff:	or     dl,BYTE PTR [eax+eiz*8-0x5d]
  422503:	xor    eax,0x28f7f80d
  422508:	fild   QWORD PTR [edi+0x57]
  42250b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42250c:	xchg   DWORD PTR [ebp-0x12],esp
  42250f:	ins    DWORD PTR es:[edi],dx
  422510:	adc    eax,0xaad3a591
  422515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422516:	sbb    DWORD PTR [ebp+0x7fbbb277],esp
  42251c:	push   0x9b7bc3b4
  422521:	int    0xb3
  422523:	adc    eax,0x9d5d44f9
  422528:	fnstsw WORD PTR [edi-0x7f257328]
  42252e:	jae    0x42255a
  422530:	inc    esi
  422531:	xchg   DWORD PTR ds:0xf0d204e4,ecx
  422537:	xchg   ebp,eax
  422538:	iret   
  422539:	xor    al,0x23
  42253b:	xor    eax,0x76d88077
  422540:	inc    ebp
  422541:	sbb    eax,0xf49f029b
  422546:	bound  esi,QWORD PTR [ebp+0x5c]
  422549:	sub    DWORD PTR [edi+0x7dc1c7c3],eax
  42254f:	jno    0x4225b9
  422551:	or     al,0xe3
  422553:	cs push es
  422555:	test   eax,0x92fbc209
  42255a:	imul   ecx,DWORD PTR [ecx+0x1e55cc90],0x3933b072
  422564:	call   FWORD PTR [ebx]
  422566:	int3   
  422567:	sub    al,0x58
  422569:	(bad)  
  42256a:	jl     0x42250a
  42256c:	adc    al,0x5f
  42256e:	pop    ss
  42256f:	mov    edi,0x29679d2d
  422574:	xor    BYTE PTR [esi+0x6e],dl
  422577:	(bad)  
  422578:	lock mov dl,0x2b
  42257b:	outs   dx,DWORD PTR ds:[esi]
  42257c:	push   DWORD PTR [eax-0x66fce578]
  422582:	and    al,0xa3
  422584:	sbb    al,0xfd
  422586:	cmp    dl,BYTE PTR [edx+0x67fa9ef8]
  42258c:	push   esi
  42258d:	in     eax,0x8f
  42258f:	mov    ch,BYTE PTR [ebp+eax*8+0x5]
  422593:	push   ebp
  422594:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422595:	stc    
  422596:	and    eax,0x5bfe9ff9
  42259b:	sub    dh,dh
  42259d:	out    dx,eax
  42259e:	adc    ah,BYTE PTR [edx+0x53]
  4225a1:	mov    ah,0xc7
  4225a3:	inc    esi
  4225a4:	mov    ah,0x3a
  4225a6:	std    
  4225a7:	sbb    BYTE PTR [esi+edi*1+0x212ad63f],dl
  4225ae:	hlt    
  4225af:	popf   
  4225b0:	mov    bl,BYTE PTR [edx]
  4225b2:	(bad)  
  4225b3:	push   edx
  4225b4:	mov    al,BYTE PTR [edx]
  4225b6:	popa   
  4225b7:	mov    dh,0xec
  4225b9:	shl    ebx,1
  4225bb:	(bad)  
  4225bc:	in     eax,dx
  4225bd:	scas   al,BYTE PTR es:[edi]
  4225be:	or     eax,0xde5dc7fc
  4225c3:	jmp    DWORD PTR [eax+0x6719c894]
  4225c9:	pop    es
  4225ca:	cmp    bl,cl
  4225cc:	sar    BYTE PTR [ecx],cl
  4225ce:	sbb    al,0xd
  4225d0:	rol    DWORD PTR [ebx-0x15],1
  4225d3:	shl    DWORD PTR [ebx],1
  4225d5:	clc    
  4225d6:	iret   
  4225d7:	daa    
  4225d8:	lds    ecx,FWORD PTR [edi-0x39d75027]
  4225de:	dec    edi
  4225df:	(bad)  
  4225e0:	adc    esp,esi
  4225e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225e3:	mov    edx,0xdad2c6de
  4225e8:	mov    ds:0x69c5bf61,al
  4225ed:	push   ebp
  4225ee:	call   0xb0bc38a0
  4225f3:	dec    eax
  4225f4:	rcl    ebx,cl
  4225f6:	stos   BYTE PTR es:[edi],al
  4225f7:	fstp   DWORD PTR [esi+0x3631c855]
  4225fd:	aaa    
  4225fe:	dec    esi
  4225ff:	jb     0x4225d4
  422601:	pop    es
  422602:	sub    BYTE PTR [ebx+edx*2],bh
  422605:	xchg   ebp,eax
  422606:	add    ah,BYTE PTR [ebp-0x4960f03b]
  42260c:	add    al,0xb5
  42260e:	fist   DWORD PTR ds:0x89a72e2b
  422614:	ret    0xf7f6
  422617:	inc    ebp
  422618:	mov    ebp,0xadc89757
  42261d:	dec    edx
  42261e:	sub    ebp,DWORD PTR [ebx]
  422620:	(bad)  
  422621:	push   ebp
  422622:	not    BYTE PTR [eax]
  422624:	dec    edx
  422625:	push   cs
  422626:	ds call 0x2780:0xd4ec2ef0
  42262e:	lock das 
  422630:	mov    al,0x1a
  422632:	stos   BYTE PTR es:[edi],al
  422633:	in     al,0x30
  422635:	inc    ebp
  422636:	or     eax,0xecee26ed
  42263b:	(bad)  
  42263d:	push   edx
  42263e:	xchg   edx,eax
  42263f:	cmc    
  422640:	inc    esi
  422641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422642:	cdq    
  422643:	or     ebx,DWORD PTR ds:0x62a0ee20
  422649:	retf   
  42264a:	aaa    
  42264b:	dec    ecx
  42264c:	dec    DWORD PTR [eax-0x70b9b3b]
  422652:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422653:	imul   esp,DWORD PTR [ebp-0x3e],0xffffff99
  422657:	push   eax
  422658:	and    eax,0x99881c4
  42265d:	push   0xfffffff1
  42265f:	ins    BYTE PTR es:[edi],dx
  422660:	ss mov esi,0x26e7f7ab
  422666:	scas   eax,DWORD PTR es:[edi]
  422667:	sbb    bh,BYTE PTR [edi-0x23]
  42266a:	fs (bad) 
  42266c:	js     0x42268c
  42266e:	dec    eax
  42266f:	xchg   bl,dl
  422671:	pop    ebp
  422672:	mov    ah,0x7
  422674:	adc    DWORD PTR [edx-0x6d1ea898],0x24
  42267b:	aad    0xc1
  42267d:	mov    ecx,0x6c66c5f5
  422682:	mov    ecx,0x6d7a27e2
  422687:	aad    0x34
  422689:	cmp    eax,0x7194554f
  42268e:	pushf  
  42268f:	shr    DWORD PTR [ecx-0xf17c130],0xde
  422696:	adc    ch,BYTE PTR [edi-0x1254c903]
  42269c:	and    cl,BYTE PTR [ecx-0x59a5d478]
  4226a2:	js     0x4226de
  4226a4:	dec    ebp
  4226a5:	fsub   DWORD PTR [ebp+0x14]
  4226a8:	add    ecx,esp
  4226aa:	outs   dx,DWORD PTR ds:[esi]
  4226ab:	ins    BYTE PTR es:[edi],dx
  4226ac:	inc    ebx
  4226ad:	pop    ss
  4226ae:	scas   eax,DWORD PTR es:[edi]
  4226af:	dec    ecx
  4226b0:	ja     0x4226d2
  4226b2:	cli    
  4226b3:	sbb    BYTE PTR [edx-0x786fb2d1],0xc7
  4226ba:	mov    ebp,0xa5ef0cb5
  4226bf:	add    dh,cl
  4226c1:	clc    
  4226c2:	add    al,BYTE PTR ds:0x64580fd7
  4226c8:	test   BYTE PTR [ebp+ebp*2-0x7cae3407],bl
  4226cf:	xor    dl,BYTE PTR [ebp+0x71]
  4226d2:	xchg   edx,eax
  4226d3:	sub    DWORD PTR [ebx-0x79],edi
  4226d6:	xor    ebp,DWORD PTR [edi+eiz*1-0x71e61398]
  4226dd:	test   al,0xad
  4226df:	imul   edi,ebp,0x25
  4226e2:	mov    al,0x9d
  4226e4:	mov    edx,0x21cf8360
  4226e9:	add    eax,0xe3b12152
  4226ee:	mov    ch,0xdb
  4226f0:	push   ss
  4226f1:	mov    ch,BYTE PTR [eax]
  4226f3:	xor    dl,BYTE PTR [edx+0x1e610cc8]
  4226f9:	add    edx,DWORD PTR [esi]
  4226fb:	add    al,0xa1
  4226fd:	adc    al,0xf3
  4226ff:	sbb    cl,BYTE PTR [esi-0x42]
  422702:	test   bh,cl
  422704:	pop    ebp
  422705:	dec    edi
  422706:	cmp    eax,0x905fcfb1
  42270b:	jmp    0xd158:0x3fb369d9
  422712:	call   0x2fe:0xf153cd9d
  422719:	lock loop 0x422734
  42271c:	retf   
  42271d:	retf   0xdfc
  422720:	jmp    0x7bcb:0xd31e52a9
  422727:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  422729:	mov    al,ds:0x37111812
  42272e:	jmp    0x422703
  422730:	mov    eax,0xca689fb3
  422735:	add    ah,BYTE PTR [eax-0x5e814667]
  42273b:	jne    0x4226c6
  42273d:	dec    ecx
  42273e:	cli    
  42273f:	ins    BYTE PTR es:[edi],dx
  422740:	fstp   QWORD PTR [edi-0x54]
  422743:	push   ds
  422744:	cmp    eax,0x296c4987
  422749:	sbb    al,0x15
  42274b:	push   ss
  42274c:	lock test eax,0xba8ba1e4
  422752:	lods   al,BYTE PTR ds:[esi]
  422753:	add    DWORD PTR [eax-0x56],0xe0d26138
  42275a:	fidiv  WORD PTR [ecx+0x6afa5ed3]
  422760:	scas   eax,DWORD PTR es:[edi]
  422761:	std    
  422762:	mov    esp,0xf7883b0b
  422767:	icebp  
  422768:	hlt    
  422769:	jle    0x4227a6
  42276b:	jge    0x422757
  42276d:	jmp    0x422744
  42276f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422770:	shr    dl,0x82
  422773:	add    BYTE PTR [edi+eax*8-0x77c0cdb6],bl
  42277a:	xor    eax,0xbd6b617a
  42277f:	inc    ecx
  422780:	pop    eax
  422781:	dec    esi
  422782:	pop    ds
  422783:	stos   BYTE PTR es:[edi],al
  422784:	scas   eax,DWORD PTR es:[edi]
  422785:	xchg   ebx,eax
  422786:	ja     0x422784
  422788:	lods   eax,DWORD PTR ds:[esi]
  422789:	jle    0x4227bf
  42278b:	add    bl,cl
  42278d:	xor    BYTE PTR ds:0x11ec96bd,0x27
  422794:	std    
  422795:	sub    BYTE PTR [edx+0x35],dh
  422798:	call   0x4d8e:0x6e0b4bda
  42279f:	inc    esi
  4227a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227a1:	mov    bl,0x4d
  4227a3:	pop    ecx
  4227a4:	xor    edx,DWORD PTR [esi+0x315067a3]
  4227aa:	aam    0x36
  4227ac:	call   FWORD PTR [esi+eiz*4+0x3e620669]
  4227b3:	xor    ch,dl
  4227b5:	mov    esp,DWORD PTR [edi-0x9]
  4227b8:	mov    edi,0xbba13a2b
  4227bd:	mov    ebp,0x933ea3a5
  4227c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227c3:	nop
  4227c4:	xchg   edx,eax
  4227c5:	pop    es
  4227c6:	pop    ebx
  4227c7:	scas   al,BYTE PTR es:[edi]
  4227c8:	mov    ebp,0xa55a037d
  4227cd:	icebp  
  4227ce:	retf   0x8021
  4227d1:	push   eax
  4227d2:	inc    esp
  4227d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227d4:	and    esp,DWORD PTR [ecx+esi*1]
  4227d7:	adc    al,0xf3
  4227d9:	rcl    bh,0xe9
  4227dc:	dec    ecx
  4227dd:	scas   eax,DWORD PTR es:[edi]
  4227de:	jecxz  0x42277d
  4227e0:	out    dx,eax
  4227e1:	rol    BYTE PTR [edx],cl
  4227e3:	mov    al,0xa1
  4227e5:	jecxz  0x42283d
  4227e7:	xlat   BYTE PTR ds:[ebx]
  4227e8:	jl     0x42277b
  4227ea:	xchg   esi,eax
  4227eb:	mov    al,BYTE PTR [esi+0x42]
  4227ee:	js     0x42278b
  4227f0:	imul   ebp,DWORD PTR [ecx+esi*1],0xbc36ec16
  4227f7:	idiv   cl
  4227f9:	arpl   WORD PTR ds:0x9f3baaa,bx
  4227ff:	mov    cl,0x29
  422801:	imul   esp,DWORD PTR [ebx],0x4b
  422804:	cmp    BYTE PTR [esi],al
  422806:	sbb    cl,BYTE PTR [edx]
  422808:	sahf   
  422809:	inc    eax
  42280a:	mov    al,0x9
  42280c:	lock or ax,0x8781
  422811:	mov    BYTE PTR [edx-0x8],dl
  422814:	les    ecx,FWORD PTR [ebp+ebp*2+0x2d]
  422818:	sti    
  422819:	sub    ah,BYTE PTR [ebx-0x46]
  42281c:	fidivr DWORD PTR [esi+0xf]
  42281f:	imul   esi,DWORD PTR [edx],0xfffffff4
  422822:	xchg   DWORD PTR [ebx+0x7715926d],esp
  422828:	mov    esi,esp
  42282a:	adc    al,0x68
  42282c:	in     eax,dx
  42282d:	in     al,dx
  42282e:	sub    bh,BYTE PTR [eax+ebp*1]
  422831:	push   edi
  422832:	aam    0x1c
  422834:	repnz mov ah,0xa
  422837:	cmp    DWORD PTR [esi],edi
  422839:	mov    ebx,0xbf1bdb33
  42283e:	cmp    DWORD PTR cs:[esi-0x2acf51d8],0xacb155ca
  422849:	out    dx,al
  42284a:	mov    ah,BYTE PTR [edx-0x7963582c]
  422850:	(bad)  [ebx]
  422852:	mov    ch,0xbb
  422854:	push   ds
  422855:	sahf   
  422856:	push   edx
  422857:	scas   al,BYTE PTR es:[edi]
  422858:	sbb    BYTE PTR ds:0x6fdab20,0xb6
  42285f:	xor    eax,0xee1809d1
  422864:	sbb    bl,dl
  422866:	stc    
  422867:	inc    ebp
  422868:	inc    ebx
  422869:	push   edi
  42286a:	js     0x4228b8
  42286c:	jmp    FWORD PTR [edx-0x5a4dae39]
  422872:	jbe    0x422866
  422874:	out    dx,eax
  422875:	jmp    0x4228dd
  422877:	pcmpgtd mm4,QWORD PTR [edi+ecx*1-0x6f]
  42287c:	icebp  
  42287d:	arpl   WORD PTR ds:0x819bcda3,ax
  422883:	sbb    esp,DWORD PTR [eax-0x41]
  422886:	xor    al,bh
  422888:	loopne 0x422852
  42288a:	cmp    eax,0x44a8cb5b
  42288f:	mov    bl,0x46
  422891:	add    al,0x53
  422893:	or     al,BYTE PTR [edi+0x6371cbe3]
  422899:	cli    
  42289a:	mov    ds:0x10b15beb,eax
  42289f:	cdq    
  4228a0:	add    bl,bh
  4228a2:	dec    edx
  4228a3:	and    DWORD PTR [esi-0x39],esp
  4228a6:	xor    al,0x50
  4228a8:	push   DWORD PTR [ecx+edi*4]
  4228ab:	push   esi
  4228ac:	mov    ds:0x38b62ad6,eax
  4228b1:	mov    edi,0xc8a173b3
  4228b6:	mov    ecx,0x6a029b3d
  4228bb:	jb     0x42292f
  4228bd:	mov    BYTE PTR ds:0xcf05ec04,bl
  4228c3:	cmp    al,0xc0
  4228c5:	in     eax,dx
  4228c6:	sbb    DWORD PTR [ebp+0x4d8039c4],ecx
  4228cc:	test   DWORD PTR [ecx-0x1ef6356e],eax
  4228d2:	xor    ah,ch
  4228d4:	pop    ebp
  4228d5:	(bad)
  4228d8:	jb     0x4228cb
  4228da:	mov    al,BYTE PTR [esi-0x7b80d191]
  4228e0:	ins    BYTE PTR es:[edi],dx
  4228e1:	dec    ebx
  4228e2:	sbb    ecx,edi
  4228e4:	pushf  
  4228e5:	inc    esp
  4228e6:	in     al,dx
  4228e7:	or     DWORD PTR [edi+0x1f],0x31
  4228eb:	dec    edi
  4228ec:	xor    BYTE PTR [edi+eiz*8+0x2c7c2753],bl
  4228f3:	out    0x1b,al
  4228f5:	aam    0xe
  4228f7:	dec    ebx
  4228f8:	in     al,0xbf
  4228fa:	and    eax,0xc2cc70c9
  4228ff:	xchg   esp,eax
  422900:	bound  esi,QWORD PTR [edi-0x101beced]
  422906:	xchg   DWORD PTR [eax+ebp*4-0x7a],ebp
  42290a:	inc    edx
  42290b:	inc    eax
  42290c:	pop    edi
  42290d:	nop
  42290e:	inc    ecx
  42290f:	adc    esp,DWORD PTR [esi-0x5a]
  422912:	dec    eax
  422913:	and    bl,BYTE PTR [edi]
  422915:	psrlw  mm6,QWORD PTR [ebp+eax*2+0x7a]
  42291a:	mov    al,ds:0xe04ab3bc
  42291f:	add    DWORD PTR [ebp-0x3bd4da2f],ebp
  422925:	loopne 0x422925
  422927:	pop    ds
  422928:	(bad)  
  42292a:	imul   ebp,DWORD PTR [ebx-0x27d94582],0x984c7bee
  422934:	(bad)  
  422936:	mov    WORD PTR [edx-0x26fc84b3],cs
  42293c:	or     BYTE PTR [eax+0x67],dl
  42293f:	gs sub eax,0x23db6bc
  422945:	dec    ebp
  422946:	clc    
  422947:	dec    ebx
  422948:	xlat   BYTE PTR ds:[ebx]
  422949:	test   al,0x9d
  42294b:	push   eax
  42294c:	pop    esi
  42294d:	mov    BYTE PTR [ebp-0x59],dl
  422950:	and    BYTE PTR [edi],0x93
  422953:	cmp    al,0xe5
  422955:	rcr    BYTE PTR [ebx+0x3c],cl
  422958:	and    BYTE PTR [edi],bl
  42295a:	pop    esp
  42295b:	mov    esp,0xae0ae7f2
  422960:	cli    
  422961:	les    eax,FWORD PTR [ebp+ecx*8-0x52]
  422965:	lea    ebx,[ecx+0x14576e16]
  42296b:	arpl   WORD PTR ds:0x36c0e77b,ax
  422971:	jle    0x422965
  422973:	mov    ch,bl
  422975:	in     al,0x3a
  422977:	sub    BYTE PTR [ebx+0x7],0x3
  42297b:	jno    0x422952
  42297d:	jne    0x422986
  42297f:	cwde   
  422980:	and    al,0x4a
  422982:	fs js  0x4229b5
  422985:	adc    eax,0xf48bf40f
  42298a:	sub    BYTE PTR [esi+0xa],dh
  42298d:	xor    ebp,eax
  42298f:	retf   0x5211
  422992:	xchg   BYTE PTR [ecx],al
  422994:	inc    edi
  422995:	repnz dec edi
  422997:	inc    esp
  422998:	daa    
  422999:	cmp    BYTE PTR [esi-0xe],bh
  42299c:	push   esp
  42299d:	pop    ds
  42299e:	das    
  42299f:	stos   BYTE PTR es:[edi],al
  4229a0:	or     DWORD PTR [eax+0x774bd18c],esi
  4229a6:	mul    cl
  4229a8:	push   esi
  4229a9:	aas    
  4229aa:	cmp    bh,BYTE PTR [ecx+0x11f6b8f4]
  4229b0:	call   0x13f6:0x5e6b684e
  4229b7:	leave  
  4229b8:	cld    
  4229b9:	mov    ds:0x3ce2ffab,eax
  4229be:	add    BYTE PTR ds:0x782522ef,bl
  4229c4:	es mov cl,0xd5
  4229c7:	lahf   
  4229c8:	add    dh,0xda
  4229cb:	pop    edx
  4229cc:	mov    ds,WORD PTR [ebp+0x50de302]
  4229d2:	test   BYTE PTR [edx-0xb510b46],al
  4229d8:	das    
  4229d9:	out    dx,eax
  4229da:	sar    DWORD PTR [edi-0x45711a79],1
  4229e0:	adc    al,0x53
  4229e2:	imul   edx,DWORD PTR [ecx-0x361ffe61],0xd47693b3
  4229ec:	add    DWORD PTR [eax-0x1d],edx
  4229ef:	adc    al,0xe0
  4229f1:	mov    BYTE PTR ds:0x7cf29674,bh
  4229f7:	and    ah,BYTE PTR [esi]
  4229f9:	jl     0x42298a
  4229fb:	jle    0x422a4c
  4229fd:	push   eax
  4229fe:	push   ebp
  4229ff:	imul   ebx,edx,0xa361658f
  422a05:	rol    DWORD PTR [ebp-0x2c],1
  422a08:	test   ebx,0x497b249e
  422a0e:	xor    ch,BYTE PTR [edx]
  422a10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a11:	sub    eax,0xab76c4cc
  422a16:	pop    esi
  422a17:	mov    edi,0x5fbcd746
  422a1c:	clc    
  422a1d:	jns    0x4229e2
  422a1f:	or     eax,0xe8f7c09b
  422a24:	pusha  
  422a25:	das    
  422a26:	mov    ds:0x19e13ad3,eax
  422a2b:	pop    ecx
  422a2c:	cmp    BYTE PTR [ebp-0x684b71c7],dl
  422a32:	and    eax,0x7c4ec1e
  422a37:	aaa    
  422a38:	sbb    ch,bh
  422a3a:	mov    DWORD PTR [esp+edx*4],ecx
  422a3d:	dec    ebp
  422a3e:	enter  0x222a,0xe0
  422a42:	pop    edi
  422a43:	xor    DWORD PTR [ebp-0x5ebbfc0c],0xffffffdb
  422a4a:	arpl   WORD PTR [edi-0x13dc4b01],dx
  422a50:	xor    ecx,eax
  422a52:	pushf  
  422a53:	popf   
  422a54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a55:	scas   eax,DWORD PTR es:[edi]
  422a56:	mov    bh,0x11
  422a58:	xchg   DWORD PTR [edi-0x18],eax
  422a5b:	bound  ebp,QWORD PTR [edx-0xca985f3]
  422a61:	not    DWORD PTR [ebx+0x7c]
  422a64:	and    ebx,DWORD PTR [esi-0x55]
  422a67:	or     al,0x11
  422a69:	jp     0x422a34
  422a6b:	add    ebx,0xca9329c8
  422a71:	sbb    BYTE PTR [eax+0x1c6c67df],0xee
  422a78:	mov    esi,0xfe547efc
  422a7d:	inc    edx
  422a7e:	and    ebx,DWORD PTR [eax+0x26658bef]
  422a84:	outs   dx,DWORD PTR ds:[esi]
  422a85:	pop    ecx
  422a86:	rcr    al,0xbd
  422a89:	aaa    
  422a8a:	ds enter 0x1d5f,0xe3
  422a8f:	icebp  
  422a90:	out    dx,eax
  422a91:	xor    bh,BYTE PTR [ecx-0x7c]
  422a94:	add    bh,BYTE PTR [eax-0x1c658b83]
  422a9a:	out    dx,eax
  422a9b:	fcmove st,st(4)
  422a9d:	mov    ebp,0xb15c844e
  422aa2:	pop    edx
  422aa3:	inc    esp
  422aa4:	loope  0x422ac1
  422aa6:	popa   
  422aa7:	fchs   
  422aa9:	sbb    bh,BYTE PTR [ebx+0x1c4762d8]
  422aaf:	ret    0xab7f
  422ab2:	loope  0x422b00
  422ab4:	arpl   WORD PTR [edx-0x49],dx
  422ab7:	(bad)  
  422ab8:	aas    
  422ab9:	retf   
  422aba:	pop    ds
  422abb:	loopne 0x422a61
  422abd:	add    BYTE PTR [edi-0x1ecb9d0b],bh
  422ac3:	push   ebx
  422ac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ac5:	aas    
  422ac6:	fimul  WORD PTR [eax-0x2c96ce3b]
  422acc:	cmp    cl,BYTE PTR [ebp-0x35f8c69]
  422ad2:	cdq    
  422ad3:	cmp    al,0xf9
  422ad5:	xchg   ebx,eax
  422ad6:	stc    
  422ad7:	adc    DWORD PTR [edi+0x777722c8],esp
  422add:	gs (bad) 
  422adf:	sub    eax,0xd0f799dd
  422ae4:	mov    ss,WORD PTR [esi+0x5ea562ba]
  422aea:	cld    
  422aeb:	out    dx,al
  422aec:	push   esi
  422aed:	repz es mov dl,0x61
  422af1:	jbe    0x422ad6
  422af3:	stos   DWORD PTR es:[edi],eax
  422af4:	(bad)  
  422af6:	fwait
  422af7:	inc    edi
  422af8:	retf   
  422af9:	mov    edi,0x9d3fc508
  422afe:	mov    bh,0x75
  422b00:	mov    ebp,0x281fc816
  422b05:	cmc    
  422b06:	adc    eax,0x28c097da
  422b0b:	pop    es
  422b0c:	aas    
  422b0d:	jg     0x422ab7
  422b0f:	push   cs
  422b10:	jae    0x422b2d
  422b12:	mov    ds:0xc3963a1d,al
  422b17:	or     DWORD PTR [ecx-0x4edb3938],esp
  422b1d:	sar    DWORD PTR [ebp+0x3c7e2dfd],1
  422b23:	int    0xcd
  422b25:	push   edx
  422b26:	nop
  422b27:	ja     0x422add
  422b29:	int    0xe8
  422b2b:	xchg   BYTE PTR [edi-0x56d39a1b],ah
  422b31:	arpl   WORD PTR [eax],bp
  422b33:	repnz xchg edi,eax
  422b35:	pop    eax
  422b36:	push   cs
  422b37:	mov    ah,0x89
  422b39:	push   edi
  422b3a:	xchg   ecx,eax
  422b3b:	jge    0x422b6a
  422b3d:	xchg   esp,eax
  422b3e:	sti    
  422b3f:	fistp  QWORD PTR [esi+0x29d6588f]
  422b45:	xchg   ebx,eax
  422b46:	jbe    0x422b13
  422b48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b49:	dec    ecx
  422b4a:	pop    esi
  422b4b:	pop    ss
  422b4c:	loop   0x422b88
  422b4e:	pop    edx
  422b4f:	int    0x2e
  422b51:	push   ebp
  422b52:	sbb    DWORD PTR [edi+0x2af8237e],0x55
  422b59:	dec    edx
  422b5a:	out    0xca,eax
  422b5c:	mov    ebx,0xf1b7b171
  422b61:	scas   eax,DWORD PTR es:[edi]
  422b62:	xchg   esi,ebp
  422b64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b65:	outs   dx,BYTE PTR ds:[esi]
  422b66:	mov    WORD PTR [ecx-0xc],gs
  422b69:	sub    DWORD PTR [ebx+0x1a],ecx
  422b6c:	or     eax,0x89f0f6db
  422b71:	fcmovnu st,st(4)
  422b73:	repz mov ds:0xfe76df1c,eax
  422b79:	add    BYTE PTR [edx+0x51d17b01],dh
  422b7f:	xchg   esi,eax
  422b80:	xchg   edx,eax
  422b81:	pop    ecx
  422b82:	int3   
  422b83:	pop    esp
  422b84:	in     al,dx
  422b85:	loop   0x422b1e
  422b87:	ret    0xd1cb
  422b8a:	mov    bh,BYTE PTR [edi-0x75]
  422b8d:	icebp  
  422b8e:	pop    edi
  422b8f:	or     eax,0xaeb57d4c
  422b94:	or     eax,0xb7860fce
  422b99:	jp     0x422bc7
  422b9b:	or     al,0x9c
  422b9d:	pop    esp
  422b9e:	xor    BYTE PTR [eax-0xe4946de],dl
  422ba4:	mov    ah,BYTE PTR [edx+edx*1-0x47d59a47]
  422bab:	cld    
  422bac:	push   0x20
  422bae:	fistp  DWORD PTR cs:[edx+0x5cc401e4]
  422bb5:	iret   
  422bb6:	out    dx,eax
  422bb7:	ficom  WORD PTR [ebp-0x6fd4640]
  422bbd:	xor    bh,BYTE PTR [edx]
  422bbf:	imul   ecx,DWORD PTR [edx-0x2acdfab9],0x39254846
  422bc9:	push   ebp
  422bca:	push   ds
  422bcb:	jmp    0x52d168ec
  422bd0:	outs   dx,BYTE PTR ds:[esi]
  422bd1:	inc    ebx
  422bd2:	push   es
  422bd3:	push   es
  422bd4:	out    0xe6,eax
  422bd6:	out    dx,al
  422bd7:	pop    ss
  422bd8:	mov    ebx,0xc3c6d90b
  422bdd:	js     0x422c05
  422bdf:	mov    eax,0x142105b9
  422be4:	push   ebx
  422be5:	outs   dx,DWORD PTR ds:[esi]
  422be6:	xor    cl,BYTE PTR [ecx-0x66c7f60]
  422bec:	hlt    
  422bed:	jae    0x422bc7
  422bef:	aaa    
  422bf0:	call   FWORD PTR [ecx+eax*4-0x18654af0]
  422bf7:	inc    ebp
  422bf8:	fs jmp 0xbae2:0x920d8243
  422c00:	scas   eax,DWORD PTR es:[edi]
  422c01:	fbstp  TBYTE PTR [eax-0x39b6e385]
  422c07:	jo     0x422b99
  422c09:	xchg   ebx,eax
  422c0a:	js     0x422c3e
  422c0c:	mov    esi,0x2c575c77
  422c11:	and    eax,0x61cdc200
  422c16:	sbb    BYTE PTR [esi-0x78b9fd8d],bh
  422c1c:	fbld   TBYTE PTR [ecx]
  422c1e:	sub    dl,BYTE PTR [ebx+eiz*4+0x14]
  422c22:	cmp    cl,BYTE PTR [esi+0x5a51a3f5]
  422c28:	cmp    esp,DWORD PTR [edx-0x6cfeb872]
  422c2e:	ficomp DWORD PTR [ecx+0x1d]
  422c31:	sbb    BYTE PTR [ecx+0x3],0x2c
  422c35:	inc    bx
  422c37:	xor    al,0xe9
  422c39:	xor    bh,BYTE PTR [edi+0x24926cf0]
  422c3f:	cld    
  422c40:	loopne 0x422c89
  422c42:	dec    esi
  422c43:	adc    cl,dl
  422c45:	inc    edi
  422c46:	jbe    0x422cc0
  422c48:	mov    ah,0x59
  422c4a:	shl    DWORD PTR [ebx-0x6ae02c1d],0x77
  422c51:	add    eax,0xa79c4095
  422c56:	int    0xa3
  422c58:	imul   ebp,esi,0x42fb8042
  422c5e:	nop
  422c5f:	add    eax,DWORD PTR [edx-0x155db8ce]
  422c65:	out    0x32,al
  422c67:	shl    dh,0x4f
  422c6a:	je     0x422cda
  422c6c:	cmc    
  422c6d:	cmp    eax,0x871a5e46
  422c72:	and    esp,DWORD PTR [ecx]
  422c74:	in     eax,dx
  422c75:	xchg   ecx,edx
  422c77:	(bad)  
  422c78:	mov    ecx,0xf9e8f7a3
  422c7d:	lea    edi,[edi+eax*8+0x59]
  422c81:	addr16 push ecx
  422c83:	pop    eax
  422c84:	add    BYTE PTR [edx+ebp*8],0x2
  422c88:	je     0x422c0f
  422c8a:	in     al,0x5
  422c8c:	daa    
  422c8d:	and    ebx,ecx
  422c8f:	cmp    bh,bl
  422c91:	data16 ja 0x422ccf
  422c94:	ins    BYTE PTR es:[edi],dx
  422c95:	ret    
  422c96:	sub    BYTE PTR [ebx],bl
  422c98:	pop    edx
  422c99:	out    dx,eax
  422c9a:	arpl   WORD PTR [ecx-0x69700b7d],di
  422ca0:	daa    
  422ca1:	enter  0xd4ea,0xbc
  422ca5:	aaa    
  422ca6:	mov    ebx,0xed7036
  422cab:	add    DWORD PTR [ebx],0xe13ed840
  422cb1:	not    BYTE PTR [edi]
  422cb3:	dec    ebp
  422cb4:	mov    cl,0x23
  422cb6:	ret    0x775e
  422cb9:	sub    eax,DWORD PTR [edi+0x5c7c0d42]
  422cbf:	inc    esi
  422cc0:	mov    dl,0x86
  422cc2:	xchg   ebx,eax
  422cc3:	inc    edx
  422cc4:	gs jns 0x422c8e
  422cc7:	arpl   WORD PTR [eax],sp
  422cc9:	pop    esp
  422cca:	mov    esi,0x2f452382
  422ccf:	call   0x182ceacf
  422cd4:	sub    DWORD PTR [eax-0x5b59a15d],ebx
  422cda:	fidiv  DWORD PTR [esi]
  422cdc:	xor    BYTE PTR [ebx+0xb],0x9b
  422ce0:	push   esp
  422ce1:	xchg   ecx,eax
  422ce2:	aas    
  422ce3:	fs cs nop
  422ce6:	adc    dh,BYTE PTR [esi+eiz*4]
  422ce9:	fwait
  422cea:	or     ecx,esi
  422cec:	addr16 pop edx
  422cee:	adc    dh,cl
  422cf0:	sahf   
  422cf1:	jmp    0x422d55
  422cf3:	cmp    eax,0x3f839718
  422cf8:	sbb    dh,BYTE PTR [eax-0x68de9fc]
  422cfe:	mov    dh,BYTE PTR [ebx]
  422d00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d01:	adc    dl,al
  422d03:	pop    eax
  422d04:	mov    WORD PTR [ebx-0x49],ds
  422d07:	in     al,dx
  422d08:	mov    al,ds:0xa6f86a75
  422d0d:	jns    0x422cf1
  422d0f:	lods   al,BYTE PTR es:[esi]
  422d11:	jbe    0x422cc0
  422d13:	sbb    al,cl
  422d15:	ficom  WORD PTR es:[eax-0x7c]
  422d19:	call   0x370f1205
  422d1e:	jg     0x422cf4
  422d20:	fsub   DWORD PTR [ebp+0x4eb3443b]
  422d26:	cmp    eax,0x5408607d
  422d2b:	repnz rol BYTE PTR [ebx],cl
  422d2e:	mov    al,ds:0xc7fe293e
  422d33:	and    eax,0xa04039d2
  422d38:	xor    DWORD PTR [edi-0x66bb49a1],eax
  422d3e:	retfw  
  422d40:	stos   DWORD PTR es:[edi],eax
  422d41:	jo     0x422d43
  422d43:	jp     0x422d4e
  422d45:	jl     0x422ce1
  422d47:	pop    es
  422d48:	sub    ah,BYTE PTR [ebp+0x2a]
  422d4b:	push   ecx
  422d4c:	xchg   edx,eax
  422d4d:	xor    eax,0x3535446
  422d52:	int3   
  422d53:	enter  0x9412,0x76
  422d57:	push   ebp
  422d58:	ds lahf 
  422d5a:	dec    esp
  422d5b:	push   edi
  422d5c:	inc    edi
  422d5d:	clc    
  422d5e:	sbb    eax,0xa4500f7a
  422d63:	jl     0x422dd1
  422d65:	dec    eax
  422d66:	jns    0x422daa
  422d68:	pop    edx
  422d69:	xchg   ebp,eax
  422d6a:	push   eax
  422d6b:	jp     0x422d1e
  422d6d:	sub    BYTE PTR [esi-0x2c4bd1d2],cl
  422d73:	icebp  
  422d74:	loop   0x422dc1
  422d76:	iret   
  422d77:	scas   al,BYTE PTR es:[edi]
  422d78:	ss push edi
  422d7a:	mov    edi,0x1963e70b
  422d7f:	jb     0x422d58
  422d81:	js     0x422d69
  422d83:	fsubr  st(2),st
  422d85:	xchg   ebp,eax
  422d86:	sub    DWORD PTR [esi+edi*4+0x14e5842],ebx
  422d8d:	dec    edx
  422d8e:	ret    0x246a
  422d91:	push   ebx
  422d92:	xchg   ecx,eax
  422d93:	js     0x422dbe
  422d95:	cmp    cl,BYTE PTR ds:0x61991efc
  422d9b:	rcl    BYTE PTR [edx+0x5a],0x10
  422d9f:	jo     0x422da1
  422da1:	xrelease xchg BYTE PTR [ebx-0x16],ah
  422da5:	pusha  
  422da6:	xlat   BYTE PTR ds:[ebx]
  422da7:	test   BYTE PTR [eax-0x3174e947],ch
  422dad:	fmulp  st(0),st
  422daf:	cld    
  422db0:	or     ebp,DWORD PTR [ecx]
  422db2:	bnd ret 
  422db4:	hlt    
  422db5:	test   eax,0xd18ee889
  422dba:	or     eax,0x5b4e2122
  422dbf:	not    al
  422dc1:	cmp    bh,dh
  422dc3:	jb     0x422e33
  422dc5:	mov    bh,BYTE PTR [eax*8+0xc92e74b]
  422dcc:	addr16 jno 0x422d6f
  422dcf:	sub    eax,0x6016143e
  422dd4:	xchg   DWORD PTR [ecx],edx
  422dd6:	sub    al,0xbf
  422dd8:	in     al,dx
  422dd9:	sbb    DWORD PTR [eax],esi
  422ddb:	pop    esi
  422ddc:	shl    BYTE PTR [eax-0x3ff53c7d],cl
  422de2:	or     DWORD PTR [ebx+0x34],edi
  422de5:	pop    eax
  422de6:	into   
  422de7:	cwde   
  422de8:	in     al,0xed
  422dea:	scas   eax,DWORD PTR es:[edi]
  422deb:	es mov bl,0x15
  422dee:	popa   
  422def:	push   esi
  422df0:	sub    DWORD PTR [eax],edi
  422df2:	ficom  WORD PTR [edi-0x44104213]
  422df8:	xchg   edi,eax
  422df9:	ss leave 
  422dfb:	dec    ecx
  422dfc:	or     esp,DWORD PTR [ecx]
  422dfe:	ins    BYTE PTR es:[edi],dx
  422dff:	sbb    eax,0x35de3c4f
  422e04:	xor    al,0x9b
  422e06:	mov    edi,0xe05d8c65
  422e0b:	and    esi,DWORD PTR [edx-0x75]
  422e0e:	out    dx,al
  422e0f:	(bad)
  422e12:	adc    BYTE PTR [eax],dl
  422e14:	rcr    DWORD PTR [esi],0xbd
  422e17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e18:	xchg   ebp,eax
  422e19:	(bad)  
  422e1a:	neg    esi
  422e1c:	fdiv   st(2),st
  422e1e:	jp     0x422e9a
  422e20:	cmp    DWORD PTR [edx],eax
  422e22:	jmp    0x422e09
  422e24:	pop    edx
  422e25:	pusha  
  422e26:	not    DWORD PTR [ecx+0x3d]
  422e29:	jnp    0x422e7e
  422e2b:	dec    ebp
  422e2c:	cs push ecx
  422e2e:	mov    BYTE PTR [esi-0x6b],al
  422e31:	inc    ebx
  422e32:	push   esp
  422e33:	cli    
  422e34:	mov    DWORD PTR [edx-0x1e],edx
  422e37:	jae    0x422e27
  422e39:	cmp    al,0xd
  422e3b:	and    BYTE PTR [eax-0x4c2d3a65],ch
  422e41:	sub    eax,0xd295c38e
  422e46:	jmp    0x422e34
  422e48:	adc    esp,ebx
  422e4a:	enter  0x10ab,0x54
  422e4e:	cwde   
  422e4f:	xor    al,0xe0
  422e51:	stos   BYTE PTR es:[edi],al
  422e52:	pop    esp
  422e53:	push   eax
  422e54:	cmp    dh,bh
  422e56:	aam    0x2
  422e58:	lods   eax,DWORD PTR ds:[esi]
  422e59:	xor    BYTE PTR ds:0x7a45e072,dl
  422e5f:	sahf   
  422e60:	imul   esi,DWORD PTR [ecx+0x6391fc2f],0xa670c5ef
  422e6a:	adc    BYTE PTR [esi+0x45],ch
  422e6d:	das    
  422e6e:	and    ah,dh
  422e70:	lock sbb DWORD PTR [ebx*1+0x6b0d2273],edx
  422e78:	push   ecx
  422e79:	cwde   
  422e7a:	shl    DWORD PTR ds:0xfff33d6c,1
  422e80:	cmp    ah,BYTE PTR [edi]
  422e82:	test   al,0xd0
  422e84:	cmp    eax,0x609bf0a9
  422e89:	or     eax,0x9391983c
  422e8e:	das    
  422e8f:	arpl   WORD PTR [ebx+0x25],bx
  422e92:	sbb    edx,esi
  422e94:	jo     0x422eab
  422e96:	jmp    0x422e49
  422e98:	mov    eax,ds:0x9c52b52b
  422e9d:	pop    ecx
  422e9e:	aad    0xc6
  422ea0:	pop    ds
  422ea1:	dec    ebx
  422ea2:	inc    esp
  422ea3:	fldenv [eax]
  422ea5:	mov    ah,0x9e
  422ea7:	dec    edx
  422ea8:	daa    
  422ea9:	push   edx
  422eaa:	(bad)  
  422eab:	mov    DWORD PTR [ecx+0x4282dab7],0xa776f9f5
  422eb5:	shl    edi,cl
  422eb7:	add    BYTE PTR ds:0x27e6246b,ch
  422ebd:	out    0xd,al
  422ebf:	mov    edi,0xa97d38c2
  422ec4:	mov    dl,0xc5
  422ec6:	xchg   esp,eax
  422ec7:	ror    dh,cl
  422ec9:	ret    0x8245
  422ecc:	jns    0x422f20
  422ece:	jns    0x422e7f
  422ed0:	inc    DWORD PTR cs:[esi+0x30ee02a0]
  422ed7:	out    dx,al
  422ed8:	adc    ch,dl
  422eda:	xchg   esp,eax
  422edb:	cmp    ebx,DWORD PTR ds:0xba0d6350
  422ee1:	add    eax,0x8b6693bf
  422ee6:	mov    edi,0x88c5f2f9
  422eeb:	fcomp  DWORD PTR [ecx+eiz*2]
  422eee:	adc    al,0x66
  422ef0:	out    0xe1,al
  422ef2:	mov    bh,0xac
  422ef4:	mov    bl,BYTE PTR [ebp+0x1949257b]
  422efa:	xchg   BYTE PTR [ebx-0x5fe86d78],ch
  422f00:	sub    BYTE PTR [ebx],ah
  422f02:	dec    ebx
  422f03:	loope  0x422f6f
  422f05:	fist   DWORD PTR [esi-0x7f848c50]
  422f0b:	adc    edi,ecx
  422f0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f0e:	pop    ebx
  422f0f:	stos   BYTE PTR es:[edi],al
  422f10:	cmp    edx,esi
  422f12:	jg     0x422f15
  422f14:	inc    eax
  422f15:	pop    ecx
  422f16:	or     cl,BYTE PTR [ebp+0x10]
  422f19:	cmp    al,0xde
  422f1b:	inc    eax
  422f1c:	in     eax,0x7f
  422f1e:	dec    ebp
  422f1f:	or     ch,cl
  422f21:	ins    DWORD PTR es:[edi],dx
  422f22:	push   ecx
  422f23:	mov    ch,0x44
  422f25:	popf   
  422f26:	mov    ebp,0xb679f3d0
  422f2b:	js     0x422f62
  422f2d:	push   esp
  422f2e:	nop
  422f2f:	cmp    eax,0x81f166d6
  422f34:	add    BYTE PTR [eax+0x57],ah
  422f37:	sub    BYTE PTR [ebx],bh
  422f39:	sub    eax,0x5daaef7e
  422f3e:	stos   DWORD PTR es:[edi],eax
  422f3f:	mov    bh,0x37
  422f41:	add    ebp,DWORD PTR [eax+0x515e3f8a]
  422f47:	pop    ebx
  422f48:	mov    edi,0x2630da04
  422f4d:	faddp  st(2),st
  422f4f:	das    
  422f50:	out    dx,eax
  422f51:	inc    ebp
  422f52:	mov    ch,0xc1
  422f54:	daa    
  422f55:	pop    esp
  422f56:	sbb    eax,0x5cf4e583
  422f5b:	cmp    BYTE PTR [ebx-0x40556a86],cl
  422f61:	pop    ss
  422f62:	jmp    0x2e36:0x842e7e80
  422f69:	das    
  422f6a:	out    dx,eax
  422f6b:	rcl    BYTE PTR [edi-0x118f8bab],cl
  422f71:	dec    eax
  422f72:	enter  0x939c,0xc2
  422f76:	sbb    al,BYTE PTR [esp+eiz*4+0x0]
  422f7a:	add    bh,bl
  422f7c:	jns    0x422f22
  422f7e:	mov    BYTE PTR [edx+0x67],dl
  422f81:	(bad)  
  422f82:	xchg   edi,eax
  422f83:	add    dl,BYTE PTR [edi-0x46f3c3e]
  422f89:	jne    0x422fef
  422f8b:	(bad)  
  422f8d:	sbb    dl,BYTE PTR [edi-0x5abeb1ac]
  422f93:	sar    BYTE PTR ds:0x46852a80,0x31
  422f9a:	jmp    0x422fe6
  422f9c:	xor    eax,0x359371f5
  422fa1:	(bad)  
  422fa2:	scas   eax,DWORD PTR es:[edi]
  422fa3:	jnp    0x422ff2
  422fa5:	xor    cl,0xb4
  422fa8:	aam    0xdf
  422faa:	fisubr DWORD PTR [esp+ecx*1+0x68]
  422fae:	cmp    eax,0x588915ba
  422fb3:	(bad)  
  422fb4:	scas   eax,DWORD PTR es:[edi]
  422fb5:	sbb    BYTE PTR [ebp+0x23],al
  422fb8:	leave  
  422fb9:	jle    0x422f9c
  422fbb:	xchg   esi,eax
  422fbc:	repz aad 0x6a
  422fbf:	xlat   BYTE PTR ds:[ebx]
  422fc0:	sahf   
  422fc1:	and    eax,0xc441790
  422fc6:	es aaa 
  422fc8:	scas   eax,DWORD PTR es:[edi]
  422fc9:	or     esp,DWORD PTR [edi+0x63da068a]
  422fcf:	lods   al,BYTE PTR ds:[esi]
  422fd0:	ret    0x82af
  422fd3:	mov    cl,0xe3
  422fd5:	imul   eax,ebx,0x76add872
  422fdb:	outs   dx,DWORD PTR ds:[esi]
  422fdc:	sub    ecx,DWORD PTR [ecx]
  422fde:	push   esp
  422fdf:	cli    
  422fe0:	int3   
  422fe1:	test   DWORD PTR [edx],0x13ba8e4e
  422fe7:	jnp    0x422fa6
  422fe9:	dec    esp
  422fea:	mov    ch,0x7
  422fec:	gs ins BYTE PTR es:[edi],dx
  422fee:	jge    0x422ff0
  422ff0:	pop    ecx
  422ff1:	out    0x46,eax
  422ff3:	adc    eax,0x797b54eb
  422ff8:	mov    esi,0x9338c58e
  422ffd:	jae    0x42303b
  422fff:	sbb    eax,0x5b1ecbe7
  423004:	mov    ds:0x446c6579,al
  423009:	pop    edx
  42300a:	rcl    esp,cl
  42300c:	or     eax,DWORD PTR [eax+edi*1-0x7c6572d5]
  423013:	lahf   
  423014:	adc    al,BYTE PTR [eax]
  423016:	retf   0x3239
  423019:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42301a:	addr16 jae 0x42300d
  42301d:	(bad)  
  42301f:	pop    eax
  423020:	popa   
  423021:	add    ebx,DWORD PTR [ecx+0x204a1945]
  423027:	pushf  
  423028:	dec    ebx
  423029:	mov    ds:0xa56e673d,eax
  42302e:	(bad)  
  42302f:	fs pop ebx
  423031:	daa    
  423032:	fwait
  423033:	cmp    DWORD PTR [eax+0x71aa2f5b],edx
  423039:	dec    eax
  42303a:	adc    ebp,0x424f38a2
  423040:	xchg   edi,eax
  423041:	icebp  
  423042:	clc    
  423043:	mov    ecx,0xe935942b
  423048:	ja     0x4230bb
  42304a:	jnp    0x423008
  42304c:	test   BYTE PTR [edi-0x3f],al
  42304f:	popa   
  423050:	xchg   ebx,eax
  423051:	xchg   edx,eax
  423052:	dec    esi
  423053:	and    cl,bh
  423055:	sub    eax,0x64afbb05
  42305a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42305c:	mov    WORD PTR [edi],?
  42305e:	addr16 orps xmm0,xmm6
  423062:	stos   BYTE PTR es:[edi],al
  423063:	loop   0x4230ba
  423065:	sub    edx,DWORD PTR [eax-0x41c1c9a1]
  42306b:	push   0xbe8c2a8
  423070:	shl    DWORD PTR [ecx+0x56],0xe3
  423074:	jmp    0x422fff
  423076:	xchg   edx,eax
  423077:	sar    BYTE PTR [ecx+0x28d2fa01],1
  42307d:	retf   
  42307e:	cmp    eax,0x8dd63315
  423083:	test   BYTE PTR [edx],al
  423085:	(bad)  [edx+0x32]
  423088:	add    BYTE PTR [edi],cl
  42308a:	mov    dh,0x55
  42308c:	push   DWORD PTR [ebx]
  42308e:	ror    BYTE PTR [eax+0x458aff55],1
  423094:	dec    DWORD PTR [ebx+0x5d8be455]
  42309a:	hlt    
  42309b:	xor    edx,esi
  42309d:	add    edx,edi
  42309f:	imul   edx,ebx
  4230a2:	mov    ebx,DWORD PTR [ebp-0x8]
  4230a5:	mov    BYTE PTR [edx+ebx*1],al
  4230a8:	mov    eax,DWORD PTR [ebp-0x1c]
  4230ab:	mov    edx,DWORD PTR [ebp-0xc]
  4230ae:	xor    eax,esi
  4230b0:	add    eax,edi
  4230b2:	imul   eax,edx
  4230b5:	mov    edx,DWORD PTR [ebp-0x8]
  4230b8:	mov    al,BYTE PTR [eax+edx*1]
  4230bb:	mov    BYTE PTR [ebp-0x1],al
  4230be:	mov    eax,DWORD PTR [ebp-0x1c]
  4230c1:	mov    edx,DWORD PTR [ebp-0xc]
  4230c4:	xor    eax,esi
  4230c6:	add    eax,edi
  4230c8:	imul   eax,edx
  4230cb:	mov    edx,DWORD PTR [ebp-0x3c]
  4230ce:	xor    edx,esi
  4230d0:	add    eax,edx
  4230d2:	jmp    0x423b40
  4230d7:	mov    ds:0x985c80eb,eax
  4230dc:	stos   DWORD PTR es:[edi],eax
  4230dd:	arpl   WORD PTR [ebx-0x7e],sp
  4230e0:	jg     0x4230ad
  4230e2:	xchg   ch,ah
  4230e4:	or     eax,0x94b1accb
  4230e9:	popa   
  4230ea:	bound  esi,QWORD PTR [ecx]
  4230ec:	js     0x423150
  4230ee:	bound  esp,QWORD PTR [esi+ebp*4]
  4230f1:	push   ecx
  4230f2:	test   cl,ah
  4230f4:	popf   
  4230f5:	arpl   ax,bx
  4230f7:	push   ebp
  4230f8:	sub    eax,DWORD PTR [ebx+ebx*1-0x65]
  4230fc:	mov    al,0x9f
  4230fe:	add    dh,bh
  423100:	inc    ebx
  423101:	rol    DWORD PTR [esi-0x37c3e4fd],0xc8
  423108:	imul   ebp,DWORD PTR [ecx-0x2c],0xffffffd2
  42310c:	pop    ebx
  42310d:	lods   eax,DWORD PTR ds:[esi]
  42310e:	dec    eax
  42310f:	mov    ds:0xc825864b,eax
  423114:	mov    eax,ds:0x2ad46310
  423119:	pusha  
  42311a:	push   edx
  42311b:	ins    DWORD PTR es:[edi],dx
  42311c:	add    al,0xdb
  42311e:	cs jg  0x423150
  423121:	xor    eax,0x84cd4373
  423126:	mov    eax,ds:0x817f8033
  42312b:	and    al,0xd4
  42312e:	jns    0x42318d
  423130:	sub    al,0xbc
  423132:	iret   
  423133:	sub    DWORD PTR [edi-0x78e854b2],esi
  423139:	sbb    eax,DWORD PTR [ebp-0x68211a4d]
  42313f:	dec    ebx
  423140:	or     BYTE PTR [esi],ah
  423142:	push   ebx
  423143:	inc    ecx
  423144:	push   edi
  423145:	sbb    ecx,DWORD PTR [edi]
  423147:	pop    ecx
  423148:	setne  BYTE PTR [esi+0x5a]
  42314c:	pushf  
  42314d:	pop    esi
  42314e:	pop    ecx
  42314f:	stos   BYTE PTR es:[edi],al
  423150:	pop    edx
  423151:	jmp    0x4231bd
  423153:	mov    dl,0x7a
  423155:	dec    ebx
  423156:	iret   
  423157:	stos   DWORD PTR es:[edi],eax
  423158:	sub    al,0x95
  42315a:	dec    ebx
  42315b:	xor    al,0x22
  42315d:	aaa    
  42315e:	add    DWORD PTR [esi+eax*1],0xf7000ddd
  423165:	mov    bl,0xed
  423167:	jle    0x4231aa
  423169:	(bad)  
  42316a:	mov    ebx,0xfcf44006
  42316f:	sbb    al,0x58
  423171:	push   ebx
  423172:	xor    eax,0xaf6197e9
  423177:	add    al,0xfd
  423179:	jns    0x423115
  42317b:	in     eax,dx
  42317c:	and    DWORD PTR [ecx+0x1b],edi
  42317f:	mov    ebx,0xbbb0e0b6
  423184:	repz pop ds
  423186:	push   ebx
  423187:	xor    al,0xe0
  423189:	xchg   esp,eax
  42318a:	dec    edx
  42318b:	fucomp st(3)
  42318d:	sub    ch,BYTE PTR [ecx-0x57]
  423190:	mov    BYTE PTR [esi-0x5356d2e3],0xf5
  423197:	dec    ebx
  423198:	out    0xc,eax
  42319a:	call   0xeb8c:0x7dba2d
  4231a1:	dec    esi
  4231a2:	hlt    
  4231a3:	out    0x66,al
  4231a5:	push   edx
  4231a6:	sub    ebp,esp
  4231a8:	mov    ds:0xb774faa0,eax
  4231ad:	lods   eax,DWORD PTR ds:[esi]
  4231ae:	mov    BYTE PTR [esp+eiz*2-0x12],ch
  4231b2:	sub    BYTE PTR [eax+0x6b5725cb],bh
  4231b8:	and    eax,0x651fb2df
  4231bd:	add    eax,DWORD PTR [esi]
  4231bf:	xor    bl,BYTE PTR [edi+0x3c]
  4231c2:	add    eax,0x867d5870
  4231c7:	pop    ebx
  4231c8:	sti    
  4231c9:	stos   BYTE PTR es:[edi],al
  4231ca:	inc    edi
  4231cb:	cmc    
  4231cc:	push   es
  4231cd:	out    dx,eax
  4231ce:	aaa    
  4231cf:	loope  0x42319d
  4231d1:	push   0xf
  4231d3:	xchg   ebx,eax
  4231d4:	jnp    0x423224
  4231d6:	rol    DWORD PTR [ebp-0x22a1222b],1
  4231dc:	ror    BYTE PTR [ecx+edi*1+0x55c671cd],1
  4231e3:	xchg   BYTE PTR [ebx-0x13c16553],dl
  4231e9:	dec    edx
  4231ea:	xor    dl,0x73
  4231ed:	inc    edx
  4231ee:	arpl   WORD PTR [edi+0x234a5ba],cx
  4231f4:	push   ebx
  4231f5:	push   edi
  4231f6:	and    al,0x28
  4231f8:	xchg   edx,eax
  4231f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4231fa:	popf   
  4231fb:	dec    ebx
  4231fc:	mov    esp,0x6015bc8e
  423201:	cs pop ebp
  423203:	and    DWORD PTR [ebp-0x5181d0d3],0xe4d8548
  42320d:	cli    
  42320e:	rol    DWORD PTR [eax+edi*4],0x70
  423212:	or     cl,ah
  423214:	adc    eax,0x6e299c23
  423219:	inc    esp
  42321a:	retf   
  42321b:	fwait
  42321c:	sahf   
  42321d:	xchg   DWORD PTR ds:0x8ad22414,ebp
  423223:	mov    WORD PTR [ebp+0xf89cf32],cs
  423229:	nop
  42322a:	ins    BYTE PTR es:[edi],dx
  42322b:	jl     0x42328c
  42322d:	xchg   DWORD PTR [edi+0x5f],edi
  423230:	adc    eax,0x3ba1018a
  423235:	cdq    
  423236:	pusha  
  423237:	ss into 
  423239:	fmul   QWORD PTR [edx-0x16a5866f]
  42323f:	scas   al,BYTE PTR es:[edi]
  423240:	adc    BYTE PTR [ebx],bh
  423242:	pushf  
  423243:	(bad)  [ecx-0x48192801]
  423249:	mov    cl,0x4a
  42324b:	aad    0xfa
  42324d:	jle    0x423281
  42324f:	dec    ecx
  423250:	jns    0x42327a
  423252:	stos   BYTE PTR es:[edi],al
  423253:	and    DWORD PTR [edx-0x23],edi
  423256:	inc    esi
  423257:	pop    eax
  423258:	push   esi
  423259:	cmc    
  42325a:	ret    0x34d2
  42325d:	mov    cl,0xeb
  42325f:	int3   
  423260:	dec    edi
  423261:	mov    eax,DWORD PTR [ebx-0x21]
  423264:	in     al,0x97
  423266:	inc    ecx
  423267:	ds push esi
  423269:	daa    
  42326a:	jp     0x42329f
  42326c:	mov    eax,0x3043cc7
  423271:	add    BYTE PTR [ebx-0x4a3dc484],cl
  423277:	out    dx,ax
  423279:	or     bh,ch
  42327b:	adc    BYTE PTR ds:[ebp-0x3a3e3c1b],0x37
  423283:	mov    cl,0xe8
  423285:	dec    ebx
  423286:	pop    edx
  423287:	cmp    ah,ah
  423289:	push   eax
  42328a:	call   0x7b7f:0x582215b5
  423291:	lds    ebx,FWORD PTR [ebx-0x55a0151f]
  423297:	imul   BYTE PTR [eax-0x2c]
  42329a:	jo     0x4232e0
  42329c:	and    ebx,ebp
  42329e:	lea    edx,[ebx-0x56]
  4232a1:	test   eax,0xf7bc97dd
  4232a6:	mov    ecx,0xfcee38ef
  4232ab:	xor    DWORD PTR [esi],0xffffffd0
  4232ae:	into   
  4232af:	add    BYTE PTR [esi-0x28],ah
  4232b2:	jo     0x423258
  4232b4:	pop    ds
  4232b5:	js     0x42327e
  4232b7:	adc    ecx,edi
  4232b9:	adc    DWORD PTR [edi+0x12],edi
  4232bc:	enter  0xc567,0x60
  4232c0:	jecxz  0x423253
  4232c2:	adc    al,0x19
  4232c4:	sbb    ch,BYTE PTR [ebx]
  4232c6:	cwde   
  4232c7:	stos   DWORD PTR es:[edi],eax
  4232c8:	push   ecx
  4232c9:	mov    ah,BYTE PTR [ebp+0x7ad92042]
  4232cf:	add    ah,BYTE PTR [eax+0x726a573e]
  4232d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232d6:	add    bl,al
  4232d8:	jns    0x42332b
  4232da:	xchg   DWORD PTR [edi],esi
  4232dc:	lock test DWORD PTR [edx+0x61],esp
  4232e0:	jnp    0x42333d
  4232e2:	and    cl,BYTE PTR [ebp+0x64]
  4232e5:	inc    ecx
  4232e6:	outs   dx,BYTE PTR ds:[esi]
  4232e7:	add    bh,ah
  4232e9:	fs dec ebp
  4232eb:	(bad)  
  4232ec:	sbb    BYTE PTR [esi+esi*1],bl
  4232ef:	retf   
  4232f0:	test   al,dl
  4232f2:	aaa    
  4232f3:	lods   al,BYTE PTR ds:[esi]
  4232f4:	xor    DWORD PTR [ecx+0x51424217],ecx
  4232fa:	jp     0x423372
  4232fc:	push   es
  4232fd:	sub    dl,dh
  4232ff:	test   DWORD PTR [edx],edx
  423301:	outs   dx,BYTE PTR ds:[esi]
  423302:	dec    esp
  423303:	or     DWORD PTR [ebp+0x23a715b3],esp
  423309:	mov    dh,0x7a
  42330b:	pusha  
  42330c:	lds    esi,FWORD PTR [edx+0x29]
  42330f:	daa    
  423310:	or     edx,ebx
  423312:	stos   BYTE PTR es:[edi],al
  423313:	inc    ebp
  423314:	adc    al,0xfc
  423316:	test   al,0xba
  423318:	jp     0x42331f
  42331a:	push   esi
  42331b:	pop    esi
  42331c:	mov    ebx,eax
  42331e:	pop    ebx
  42331f:	ror    DWORD PTR [esi],0x26
  423322:	add    edx,esp
  423324:	or     BYTE PTR [edi-0x26d61114],bh
  42332a:	(bad)  
  42332b:	cmc    
  42332c:	aad    0x64
  42332e:	xlat   BYTE PTR ds:[ebx]
  42332f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423330:	jns    0x423319
  423332:	mov    WORD PTR [ebx+0x208e7400],fs
  423338:	fisttp QWORD PTR [eax-0x6ff19599]
  42333e:	add    bh,al
  423340:	pop    eax
  423341:	aad    0x3d
  423343:	lods   eax,DWORD PTR ds:[esi]
  423344:	repnz push edx
  423346:	push   esp
  423347:	sbb    eax,0x9632b46b
  42334c:	hlt    
  42334d:	std    
  42334e:	(bad)  
  42334f:	(bad)  
  423350:	jb     0x423347
  423352:	mov    esi,0xdeb95552
  423357:	xor    esp,DWORD PTR [ebx+0x10a035ad]
  42335d:	fsubr  QWORD PTR [ebp+0x33]
  423360:	mov    DWORD PTR [eax-0x6e9b8fc1],edx
  423366:	mov    bl,0x94
  423368:	call   0x732aaf60
  42336d:	mov    dh,0xe
  42336f:	push   ecx
  423370:	xchg   BYTE PTR [esi+0x42],dl
  423373:	and    bh,BYTE PTR [ebp+edx*8+0x1b93054f]
  42337a:	mov    ds:0x412a8922,eax
  42337f:	and    DWORD PTR [ebp+0x712aede7],ebx
  423385:	das    
  423386:	ja     0x4233d2
  423388:	push   ebx
  423389:	sub    BYTE PTR [edx],0x0
  42338c:	sub    al,BYTE PTR [edi-0x4f]
  42338f:	(bad)  
  423390:	sub    eax,0xc46465af
  423395:	mov    ch,0x3f
  423397:	sar    BYTE PTR [ecx],cl
  423399:	mov    edi,0x3eddbc4b
  42339e:	out    0xb4,al
  4233a0:	out    0x67,al
  4233a2:	enter  0x6657,0x26
  4233a6:	test   BYTE PTR [esi*2-0x28efc971],0x67
  4233ae:	stos   BYTE PTR es:[edi],al
  4233af:	and    edi,DWORD PTR ds:0xfa7e16e0
  4233b5:	mov    BYTE PTR [edx],bl
  4233b7:	push   edx
  4233b8:	pop    fs
  4233ba:	bound  edi,QWORD PTR [edi]
  4233bc:	ins    DWORD PTR es:[edi],dx
  4233bd:	pop    ds
  4233be:	sar    BYTE PTR [ecx+0x8a2ef80],1
  4233c4:	sbb    eax,0x84183a76
  4233c9:	jns    0x4233b0
  4233cb:	outs   dx,BYTE PTR ds:[esi]
  4233cc:	sti    
  4233cd:	cmc    
  4233ce:	adc    dl,BYTE PTR [edx]
  4233d0:	push   esi
  4233d1:	fwait
  4233d2:	jno    0x423409
  4233d4:	mov    al,0xa9
  4233d6:	xchg   edi,eax
  4233d7:	leave  
  4233d8:	fnstenv [edx-0x57074bd5]
  4233de:	inc    esp
  4233df:	xor    DWORD PTR [ebx-0x5a],ecx
  4233e2:	std    
  4233e3:	imul   eax
  4233e5:	les    ebp,FWORD PTR [ecx+0x4c]
  4233e8:	(bad)  
  4233e9:	cmp    bl,BYTE PTR [ecx-0x5c596c78]
  4233ef:	and    edi,ebx
  4233f1:	jge    0x423419
  4233f3:	popa   
  4233f4:	push   0x1
  4233f6:	lods   eax,DWORD PTR ds:[esi]
  4233f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233f8:	xor    dl,bl
  4233fa:	xchg   edi,eax
  4233fb:	cdq    
  4233fc:	loope  0x42344e
  4233fe:	sbb    bh,dl
  423400:	stos   BYTE PTR es:[edi],al
  423401:	in     eax,dx
  423402:	xor    BYTE PTR [ebx-0x7c],dh
  423405:	jns    0x4233c4
  423407:	gs inc ebp
  423409:	enter  0x2e2b,0x75
  42340d:	into   
  42340e:	mov    ds:0x67144871,al
  423413:	sub    bl,BYTE PTR [edx+0x67]
  423416:	xor    bh,BYTE PTR [edx]
  423418:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423419:	ds stos BYTE PTR es:[edi],al
  42341b:	fild   DWORD PTR [esi]
  42341d:	dec    esi
  42341e:	or     al,BYTE PTR [esi-0x4c]
  423421:	sbb    eax,0xd6020887
  423426:	cmp    dh,BYTE PTR [edi+0x1a]
  423429:	div    DWORD PTR [eax-0x50]
  42342c:	dec    ebx
  42342d:	sbb    BYTE PTR [ecx-0x127349eb],ah
  423433:	fsubr  DWORD PTR [ecx+ebx*1+0x2a]
  423437:	popf   
  423438:	ins    BYTE PTR es:[edi],dx
  423439:	or     al,0x98
  42343b:	and    esp,DWORD PTR [eax]
  42343d:	inc    eax
  42343e:	mov    ?,WORD PTR [ecx-0x2246fc7e]
  423444:	stos   DWORD PTR es:[edi],eax
  423445:	aam    0xf9
  423447:	jge    0x4233d7
  423449:	in     al,0x63
  42344b:	sub    esi,DWORD PTR [esi-0x4fee215c]
  423451:	sbb    ecx,eax
  423453:	enter  0x882c,0x4b
  423457:	dec    esi
  423458:	aas    
  423459:	es and eax,0x413e19d7
  42345f:	in     al,dx
  423460:	hlt    
  423461:	std    
  423462:	(bad)  
  423463:	ins    BYTE PTR es:[edi],dx
  423464:	fstp   DWORD PTR [edi+0x38590b91]
  42346a:	imul   edx,DWORD PTR [ebx+0xf],0x2e81416c
  423471:	in     eax,0x84
  423473:	or     ecx,DWORD PTR [ebx]
  423475:	and    al,0xf
  423477:	(bad)  
  423478:	aad    0x81
  42347a:	cmp    eax,0xb5e1cb51
  42347f:	popa   
  423480:	mov    ds:0xbc3d924d,al
  423485:	outs   dx,DWORD PTR ds:[esi]
  423486:	cmp    bh,BYTE PTR [ebx]
  423488:	out    0xb4,eax
  42348a:	out    0x1c,al
  42348c:	outs   dx,DWORD PTR ds:[esi]
  42348d:	outs   dx,BYTE PTR ds:[esi]
  42348e:	loop   0x4234a7
  423490:	mov    esp,0xdbfceade
  423495:	dec    edi
  423496:	loope  0x423492
  423498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423499:	aas    
  42349a:	jno    0x4234e4
  42349c:	gs ins BYTE PTR es:[edi],dx
  42349e:	and    DWORD PTR [esi],edi
  4234a0:	bound  edi,QWORD PTR [ebx-0x75eaab9a]
  4234a6:	aam    0xda
  4234a8:	stos   DWORD PTR es:[edi],eax
  4234a9:	sbb    eax,0x6012e7f7
  4234ae:	out    0xcf,al
  4234b0:	sti    
  4234b1:	pop    esp
  4234b2:	adc    DWORD PTR [ecx+edx*1],esi
  4234b5:	adc    ecx,DWORD PTR [eax+ebx*8]
  4234b8:	fsub   QWORD PTR [ebx+0x66]
  4234bb:	mov    ah,0xa1
  4234bd:	xchg   esp,eax
  4234be:	mov    sp,0x2b3f
  4234c2:	jmp    0xa885635b
  4234c7:	mov    ebp,0xed22950c
  4234cc:	cmp    al,0xd3
  4234ce:	xchg   ecx,eax
  4234cf:	gs jb  0x42348f
  4234d2:	jb     0x4234ed
  4234d4:	cs pusha 
  4234d6:	jno    0x423540
  4234d8:	and    al,0xb3
  4234da:	daa    
  4234db:	mov    BYTE PTR [edi],bh
  4234dd:	in     al,dx
  4234de:	es jecxz 0x423510
  4234e1:	stc    
  4234e2:	lahf   
  4234e3:	push   ebp
  4234e4:	cmp    ah,BYTE PTR [edx-0x139ea16d]
  4234ea:	out    0x3b,eax
  4234ec:	adc    bh,BYTE PTR [ecx+0x24]
  4234ef:	add    DWORD PTR [ecx-0x38],0xdc5093fc
  4234f6:	test   BYTE PTR [eax+0x52ca420a],ch
  4234fc:	and    BYTE PTR ds:0xe3d7f333,al
  423502:	shr    DWORD PTR [eax+0x75],cl
  423505:	jb     0x423556
  423507:	lahf   
  423508:	cmp    eax,0x383b7207
  42350d:	fimul  DWORD PTR [esp+ebx*4+0x15]
  423511:	inc    edi
  423512:	mov    ah,BYTE PTR [ebp+0x62]
  423515:	and    ebp,0xbdc36d6
  42351b:	add    ebp,DWORD PTR [edi-0x63c737a2]
  423521:	inc    ebp
  423522:	adc    BYTE PTR [edi-0x56],cl
  423525:	push   cs
  423526:	daa    
  423527:	jecxz  0x423526
  423529:	sbb    eax,0x1f871ddc
  42352e:	stc    
  42352f:	popa   
  423530:	dec    ebp
  423531:	xor    eax,DWORD PTR [edi+0x4c9b4d13]
  423537:	jecxz  0x42359e
  423539:	jo     0x423569
  42353b:	push   edx
  42353c:	mov    gs,WORD PTR [ebx-0x52]
  42353f:	inc    eax
  423540:	inc    edi
  423541:	ins    BYTE PTR es:[edi],dx
  423542:	mov    eax,ds:0x95259ed7
  423547:	sub    esi,ecx
  423549:	mov    DWORD PTR [ecx],esp
  42354b:	movq   mm0,QWORD PTR [esi]
  42354e:	fild   QWORD PTR [edi]
  423550:	std    
  423551:	jecxz  0x42359f
  423553:	xor    edx,DWORD PTR [ecx-0x5f]
  423556:	pusha  
  423557:	mov    cl,0x29
  423559:	cmp    dh,ch
  42355b:	xchg   esp,eax
  42355c:	or     DWORD PTR [ebx-0x69],eax
  42355f:	xchg   esi,eax
  423560:	(bad)  
  423562:	icebp  
  423563:	xchg   edx,eax
  423564:	test   DWORD PTR [ebp+edx*1-0x72c70e6a],edi
  42356b:	xchg   BYTE PTR [ecx-0x25],ch
  42356e:	jb     0x42358f
  423570:	cmp    bh,dl
  423572:	fcom   DWORD PTR [ecx]
  423574:	pop    edi
  423575:	sub    al,0x74
  423577:	cli    
  423578:	and    al,0xd3
  42357a:	and    al,BYTE PTR [ecx]
  42357c:	inc    ecx
  42357d:	push   ebx
  42357e:	sahf   
  42357f:	pusha  
  423580:	lods   eax,DWORD PTR ds:[esi]
  423581:	jl     0x423525
  423583:	inc    ebx
  423584:	sahf   
  423585:	cwde   
  423586:	jmp    0xd52bc7b9
  42358b:	cmp    DWORD PTR [ebp-0x32],esi
  42358e:	hlt    
  42358f:	loope  0x4235c9
  423591:	or     bl,bh
  423593:	dec    edi
  423594:	inc    esp
  423595:	or     BYTE PTR [eax],bh
  423597:	push   ebx
  423598:	mov    BYTE PTR [ebp+0x18],bl
  42359b:	std    
  42359c:	test   eax,0x1530e72c
  4235a1:	mov    edx,0xd9402e89
  4235a6:	fs pushf 
  4235a8:	dec    ecx
  4235a9:	mov    esp,0xc75c411d
  4235ae:	ss or  eax,0x73d9b2ca
  4235b4:	sub    bh,BYTE PTR [edx-0x5e8f456e]
  4235ba:	mov    esi,0x466afdb0
  4235bf:	adc    DWORD PTR [edx-0x62],esi
  4235c2:	aad    0xbf
  4235c4:	leave  
  4235c5:	scas   al,BYTE PTR es:[edi]
  4235c6:	(bad)  
  4235c7:	test   bh,dl
  4235c9:	in     eax,dx
  4235ca:	mov    cl,0x15
  4235cc:	cmp    bl,BYTE PTR [ecx+0x5b5021d2]
  4235d2:	xor    BYTE PTR [edi-0x4e],0x24
  4235d6:	rol    dl,cl
  4235d8:	je     0x423629
  4235da:	or     eax,0x75cf4594
  4235df:	sahf   
  4235e0:	sub    ebx,DWORD PTR ds:0x11afc986
  4235e6:	inc    esi
  4235e7:	and    dh,bl
  4235e9:	pop    edx
  4235ea:	xlat   BYTE PTR ds:[ebx]
  4235eb:	ds jnp 0x423573
  4235ee:	xchg   bh,bh
  4235f0:	sub    ah,BYTE PTR [edi+0x2]
  4235f3:	cmp    BYTE PTR [esi+edx*2-0x9],ch
  4235f7:	repnz loopne 0x42362b
  4235fa:	pop    ecx
  4235fb:	or     al,0x7e
  4235fd:	jbe    0x4235be
  4235ff:	stos   BYTE PTR es:[edi],al
  423600:	retf   
  423601:	loopne 0x423660
  423603:	xchg   ebp,eax
  423604:	mov    al,0x17
  423606:	fnstcw WORD PTR [edx+0x71]
  423609:	std    
  42360a:	jne    0x423604
  42360c:	loop   0x42367f
  42360e:	mov    ebx,0x8a7f4238
  423613:	adc    ebp,DWORD PTR [eax+0x13]
  423616:	ins    DWORD PTR es:[edi],dx
  423617:	in     eax,0x7d
  423619:	pop    eax
  42361a:	rcl    DWORD PTR [ebp-0x15],0xe0
  42361e:	outs   dx,BYTE PTR ds:[esi]
  42361f:	inc    ebx
  423620:	jo     0x42367e
  423622:	fidiv  WORD PTR [edi+esi*8]
  423625:	and    eax,0xeb96c92e
  42362a:	popf   
  42362b:	outs   dx,DWORD PTR ds:[esi]
  42362c:	xor    BYTE PTR [ecx+0x22],0x6a
  423630:	xchg   DWORD PTR [ebx+0x1a],eax
  423633:	jp     0x4235bd
  423635:	out    0x65,al
  423637:	xchg   esp,eax
  423638:	ror    DWORD PTR [ebx-0x555f3620],0x31
  42363f:	add    eax,0xfea3f0ee
  423644:	mov    dh,0x1
  423646:	sar    BYTE PTR [eax+eax*1-0x1c],cl
  42364a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42364b:	push   eax
  42364c:	nop
  42364d:	(bad)  
  42364e:	xchg   edx,eax
  42364f:	push   edx
  423650:	dec    ebp
  423651:	xchg   esp,eax
  423652:	cmp    DWORD PTR [ebp-0x1a],0x5ff177c1
  423659:	lods   al,BYTE PTR ds:[esi]
  42365a:	xchg   ebp,eax
  42365b:	push   es
  42365c:	call   0xad42:0x94c430c6
  423663:	test   eax,0xffc3c02b
  423668:	push   cs
  423669:	je     0x4235ed
  42366b:	ja     0x42364d
  42366d:	lds    ebp,FWORD PTR [eax]
  42366f:	mov    eax,ds:0xf35f9cfb
  423674:	dec    DWORD PTR [edi]
  423676:	lds    edx,FWORD PTR [ebp+esi*4-0x1d]
  42367a:	mov    bh,0x12
  42367c:	enter  0xbe46,0xf7
  423680:	jge    0x4236a7
  423682:	push   edi
  423683:	mov    ch,0xcd
  423685:	loop   0x42363e
  423687:	sub    DWORD PTR [ebp+0x20c469ef],edx
  42368d:	add    bh,BYTE PTR [eax-0xcb9a224]
  423693:	call   0x2a1a054
  423698:	fucomp st(3)
  42369a:	mov    ebp,0xf4c8be62
  42369f:	xchg   esp,eax
  4236a0:	ins    BYTE PTR es:[edi],dx
  4236a1:	fdiv   st(3),st
  4236a3:	or     al,0x9e
  4236a5:	vaddsd xmm6,xmm4,QWORD PTR [edx]
  4236a9:	test   BYTE PTR [esi-0x4f465629],0xff
  4236b0:	add    ah,BYTE PTR [edx+0x59]
  4236b3:	mov    edi,0x36f72f08
  4236b8:	sbb    eax,0x8ede2aec
  4236bd:	jmp    0xfc284215
  4236c2:	ja     0x42369b
  4236c4:	mov    al,bh
  4236c6:	inc    ebx
  4236c7:	and    ebx,DWORD PTR [eax+0x6fbeb4a5]
  4236cd:	stc    
  4236ce:	ins    DWORD PTR es:[edi],dx
  4236cf:	inc    ebx
  4236d0:	cmp    edx,DWORD PTR [edx+eax*2-0x2fc2e919]
  4236d7:	lock hlt 
  4236d9:	(bad)  
  4236da:	adc    ecx,DWORD PTR ss:[edi*4+0x3bca492a]
  4236e2:	fdivr  st(1),st
  4236e4:	int3   
  4236e5:	arpl   WORD PTR [ebx],dx
  4236e7:	das    
  4236e8:	pop    es
  4236e9:	(bad)  
  4236ea:	and    bl,BYTE PTR [edi+0x35]
  4236ed:	or     esp,edi
  4236ef:	in     al,0x7d
  4236f1:	cmp    DWORD PTR [esi+0x50139550],esi
  4236f7:	scas   eax,DWORD PTR es:[edi]
  4236f8:	into   
  4236f9:	push   0xa0318ca9
  4236fe:	dec    BYTE PTR [ebx-0x80]
  423701:	xor    eax,DWORD PTR [esi+0x2d]
  423704:	fdivr  DWORD PTR [eax-0x33]
  423707:	cwde   
  423708:	mov    eax,ds:0x70d61947
  42370d:	mov    ch,0xa5
  42370f:	and    eax,ebp
  423711:	cwde   
  423712:	inc    edi
  423713:	push   ss
  423714:	sbb    DWORD PTR [ecx-0x58],ecx
  423717:	xchg   ecx,eax
  423718:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423719:	push   0x73af5247
  42371e:	push   0x737b35f6
  423723:	adc    BYTE PTR [edx-0x8b1ddfd],bh
  423729:	xor    DWORD PTR [ebp+0x4ecc8c22],edi
  42372f:	cs icebp 
  423731:	cs call edx
  423734:	pop    edx
  423735:	and    BYTE PTR [ebx-0x178df0f],cl
  42373b:	add    esp,ebx
  42373d:	add    al,0xac
  42373f:	xor    cl,ch
  423741:	gs clc 
  423743:	mov    bl,0x68
  423745:	test   eax,0x601e31f6
  42374a:	mov    ds:0xdce34245,eax
  42374f:	frstor [ebx+edx*2+0x11211367]
  423756:	add    DWORD PTR [ecx],esi
  423758:	xchg   ebx,eax
  423759:	fiadd  WORD PTR [edi+0x21765452]
  42375f:	jae    0x42372d
  423761:	rcr    ch,cl
  423763:	add    DWORD PTR [edi],ebx
  423765:	cmp    dh,BYTE PTR [edx+0x3ad94270]
  42376b:	in     eax,dx
  42376c:	inc    ebp
  42376d:	jmp    0xe610:0x2651dec2
  423774:	int3   
  423775:	cmp    ebp,edi
  423777:	mov    bl,0xa1
  423779:	ja     0x42374e
  42377b:	jno    0x423739
  42377d:	es cwde 
  42377f:	jle    0x4237fc
  423781:	push   esi
  423782:	xor    edi,DWORD PTR [esi-0x43]
  423785:	sbb    eax,0x5fea1ade
  42378a:	dec    edx
  42378b:	stos   DWORD PTR es:[edi],eax
  42378c:	fimul  WORD PTR [ebp+0x6d]
  42378f:	(bad)  
  423790:	(bad)  
  423791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423792:	imul   ebp
  423794:	ins    BYTE PTR es:[edi],dx
  423795:	mov    es,WORD PTR [edx+eiz*1]
  423798:	je     0x423758
  42379a:	mov    bl,0x3f
  42379c:	cwde   
  42379d:	push   0x22ab99c4
  4237a2:	inc    ebp
  4237a3:	lahf   
  4237a4:	mov    eax,ds:0x9e595c57
  4237a9:	mov    ebx,0x31c8557a
  4237ae:	ss jb  0x423735
  4237b1:	mov    ecx,0xd540f4eb
  4237b6:	test   BYTE PTR [edi],0xa3
  4237b9:	push   edi
  4237ba:	mov    ds:0xcb70755a,al
  4237bf:	inc    edi
  4237c0:	dec    eax
  4237c1:	lods   eax,DWORD PTR ds:[esi]
  4237c2:	fimul  DWORD PTR [ecx]
  4237c4:	clc    
  4237c5:	leave  
  4237c6:	dec    eax
  4237c7:	aas    
  4237c8:	hlt    
  4237c9:	cmc    
  4237ca:	xlat   BYTE PTR ds:[ebx]
  4237cb:	ja     0x42378b
  4237cd:	lods   al,BYTE PTR ds:[esi]
  4237ce:	scas   eax,DWORD PTR es:[edi]
  4237cf:	mov    eax,ds:0xf34618e4
  4237d4:	cmp    BYTE PTR [ecx-0x1b],dh
  4237d7:	stos   BYTE PTR es:[edi],al
  4237d8:	ss inc edi
  4237da:	lods   eax,DWORD PTR ds:[esi]
  4237db:	jb     0x4237ae
  4237dd:	ss ret 0x4a87
  4237e1:	cwde   
  4237e2:	adc    BYTE PTR [esi+edx*4-0x7b],bl
  4237e6:	mov    bl,0x3f
  4237e9:	xor    ecx,DWORD PTR [ecx+0x6a]
  4237ec:	in     al,dx
  4237ed:	fld    QWORD PTR [esi+eax*8]
  4237f0:	fwait
  4237f1:	jge    0x42383d
  4237f3:	sub    al,BYTE PTR [eax+0x6]
  4237f6:	int    0xe4
  4237f8:	push   cs
  4237f9:	(bad)  
  4237fb:	or     al,0x61
  4237fd:	or     DWORD PTR [edi-0x643fd1a9],esp
  423803:	push   edx
  423804:	int3   
  423805:	push   0x83a0c303
  42380a:	test   BYTE PTR [eax],0x7e
  42380d:	xchg   dh,dh
  42380f:	shl    BYTE PTR [ebx+ebx*8-0x5b3ad085],0xe6
  423817:	ret    0x7b41
  42381a:	sbb    DWORD PTR ds:0xaa945f35,ecx
  423820:	adc    DWORD PTR [eax-0x47],ebp
  423823:	push   ss
  423824:	sbb    DWORD PTR [edi],0xf71fc635
  42382a:	pop    ebp
  42382b:	retf   
  42382c:	add    DWORD PTR [edx+0x291ab2af],0x1016c7a0
  423836:	loope  0x4237d1
  423838:	sbb    eax,0xca9a105f
  42383d:	dec    eax
  42383e:	mov    cl,0xdb
  423840:	adc    DWORD PTR [ebx],esi
  423842:	xchg   ebx,eax
  423843:	inc    ecx
  423844:	mov    ds:0x4d5b6c68,eax
  423849:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42384a:	jle    0x423834
  42384c:	jmp    0xed6d:0x5ec0c1f0
  423853:	push   esp
  423854:	pop    eax
  423855:	adc    eax,0xc1c5d65b
  42385a:	bound  esi,QWORD PTR ds:0x9f7e7c25
  423860:	in     eax,0x46
  423862:	push   esi
  423863:	cwde   
  423864:	pop    ds
  423865:	pop    es
  423866:	xchg   ebx,eax
  423867:	push   ecx
  423868:	(bad)  
  423869:	nop
  42386a:	sub    ch,bl
  42386c:	pop    ebx
  42386d:	dec    esp
  42386e:	jne    0x423823
  423870:	mov    al,0x15
  423872:	and    al,0x5d
  423874:	jp     0x4238b4
  423876:	stos   BYTE PTR es:[edi],al
  423877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423878:	call   0x3f30:0xc477c52f
  42387f:	ins    DWORD PTR es:[edi],dx
  423880:	fnstcw WORD PTR [eax+0x517bac3e]
  423886:	mov    bl,0xd5
  423888:	cmp    DWORD PTR [esp+eax*1-0x3685ea09],ecx
  42388f:	mov    esp,0xb5967b2d
  423894:	push   ebp
  423895:	ficomp WORD PTR [eax-0x4744e454]
  42389b:	inc    esp
  42389d:	setle  BYTE PTR [ebp-0x65806f50]
  4238a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238a5:	scas   eax,DWORD PTR es:[edi]
  4238a6:	shl    BYTE PTR [esp+edi*2+0x14],1
  4238aa:	cmp    DWORD PTR [edi],edi
  4238ac:	jae    0x423878
  4238ae:	or     BYTE PTR [ebp+0x44],ah
  4238b1:	inc    edi
  4238b2:	or     dh,BYTE PTR [edx-0x4fca1e2a]
  4238b8:	(bad)  
  4238b9:	xchg   edi,eax
  4238ba:	imul   ebx,DWORD PTR [ebx+edx*4+0xd],0x4d
  4238bf:	mov    al,ds:0xee69966b
  4238c4:	jns    0x42385a
  4238c6:	sub    bl,cl
  4238c8:	test   BYTE PTR ds:0xa8c671fd,bl
  4238ce:	jge    0x4238fb
  4238d0:	leave  
  4238d1:	xor    BYTE PTR [ecx-0x6b223eb0],dh
  4238d7:	sub    dh,al
  4238d9:	cli    
  4238da:	xchg   DWORD PTR [edi-0x57],ebx
  4238dd:	arpl   WORD PTR [ebp-0x50],si
  4238e0:	cwde   
  4238e1:	xchg   esp,edx
  4238e3:	pop    ebp
  4238e4:	dec    ebp
  4238e5:	pushw  cs
  4238e7:	sbb    eax,0xa345bf1e
  4238ec:	xchg   DWORD PTR [eax+ebp*2+0x33],esp
  4238f0:	mov    bh,0x82
  4238f2:	push   esi
  4238f3:	sub    ah,dl
  4238f5:	sti    
  4238f6:	mov    ecx,DWORD PTR [edi-0x38]
  4238f9:	cmp    al,bh
  4238fb:	adc    BYTE PTR [ebp-0x1b],al
  4238fe:	popa   
  4238ff:	dec    ebp
  423900:	mov    eax,0x1e692f51
  423905:	push   ss
  423906:	retf   0xef39
  423909:	ss pushf 
  42390b:	fist   DWORD PTR [eax+0x2e]
  42390e:	daa    
  42390f:	xor    al,0x81
  423911:	pop    edi
  423912:	sbb    BYTE PTR [ebp-0x3c33a60e],dl
  423918:	jae    0x42398f
  42391a:	stos   BYTE PTR es:[edi],al
  42391b:	add    eax,0x8b3bd8b5
  423920:	and    al,0x15
  423922:	outs   dx,BYTE PTR ds:[esi]
  423923:	pop    eax
  423924:	hlt    
  423925:	outs   dx,DWORD PTR ds:[esi]
  423926:	frstor [eax+edi*8+0x717c8699]
  42392d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42392e:	mov    ah,dh
  423930:	out    dx,eax
  423931:	xchg   BYTE PTR ds:0x143c5946,bl
  423937:	aas    
  423938:	mov    WORD PTR [ebx],cs
  42393a:	nop
  42393b:	adc    DWORD PTR [ebp+0x42],ebp
  42393e:	and    esi,DWORD PTR [edi+0x57]
  423941:	cmc    
  423942:	sbb    eax,0xc11727a6
  423947:	mov    eax,ds:0xee1d1acb
  42394c:	pusha  
  42394d:	loopne 0x423907
  42394f:	dec    eax
  423950:	jnp    0x42395a
  423952:	jmp    0x4239b7
  423954:	vcmpps ymm7,ymm7,YMMWORD PTR [esi+0x34ee77e0],0x41
  42395d:	retf   
  42395e:	jmp    0xb39962ce
  423963:	sbb    al,0x1e
  423965:	fist   DWORD PTR [ebp-0x75]
  423968:	sbb    BYTE PTR [esi-0x1c458592],0x67
  42396f:	push   esi
  423970:	and    ebp,DWORD PTR [ecx-0x36]
  423973:	ds xor al,0xee
  423976:	(bad)  
  423978:	jmp    0x290d:0x6814a425
  42397f:	aaa    
  423980:	in     eax,dx
  423981:	mov    eax,0x35ee4808
  423986:	and    BYTE PTR [edi-0x8],cl
  423989:	jmp    0x7349e090
  42398e:	or     BYTE PTR [esi+edi*8],ah
  423991:	in     eax,0x54
  423993:	fcom   QWORD PTR [ebp-0x1]
  423996:	xor    BYTE PTR [edi-0x23ccde3a],ah
  42399c:	fmul   DWORD PTR [ebx+0x59cbcb93]
  4239a2:	mov    cl,0x13
  4239a4:	add    eax,0xe2c55e31
  4239a9:	xchg   edx,eax
  4239aa:	enter  0xe496,0xfa
  4239ae:	sub    esi,DWORD PTR [ecx]
  4239b0:	cmp    cl,ah
  4239b2:	push   eax
  4239b3:	outs   dx,BYTE PTR ds:[esi]
  4239b4:	dec    esp
  4239b5:	sar    BYTE PTR [edx],cl
  4239b7:	cmp    BYTE PTR ds:0x5117a3fc,dh
  4239bd:	sbb    ecx,0xa48f80b7
  4239c3:	loopne 0x4239c9
  4239c5:	fnstcw WORD PTR [edx+esi*1+0x1e476e20]
  4239cc:	xchg   DWORD PTR [edx-0x21],ecx
  4239cf:	ins    BYTE PTR es:[edi],dx
  4239d0:	jb     0x423962
  4239d2:	lock push 0xf61c495a
  4239d8:	sub    BYTE PTR [ecx],bh
  4239da:	and    eax,0x9264734f
  4239df:	mov    ebx,0x9d9681ad
  4239e4:	repnz cmp eax,0xd91d7c0f
  4239ea:	dec    eax
  4239eb:	ss arpl si,dx
  4239ee:	pop    esi
  4239ef:	dec    edx
  4239f0:	aas    
  4239f1:	(bad)  
  4239f2:	(bad)  [esi-0x63]
  4239f5:	jbe    0x4239bc
  4239f7:	ja     0x423a2a
  4239f9:	sti    
  4239fa:	adc    ch,BYTE PTR [esi]
  4239fc:	setge  BYTE PTR [ebp+0x646475d1]
  423a03:	je     0x423a19
  423a05:	adc    ecx,DWORD PTR [ecx+0x6c0c257c]
  423a0b:	(bad)  
  423a0c:	aad    0xd7
  423a0e:	lods   al,BYTE PTR ds:[esi]
  423a0f:	es mov esp,0x9249363e
  423a15:	xchg   edx,eax
  423a16:	pushf  
  423a17:	test   al,0x88
  423a19:	ror    al,1
  423a1b:	test   DWORD PTR [esi+0x58429ccf],edx
  423a21:	stc    
  423a22:	je     0x423a5c
  423a24:	xchg   esp,eax
  423a25:	add    DWORD PTR [eax+0x1d0433db],0x561fd04a
  423a2f:	pushf  
  423a30:	inc    ebx
  423a31:	add    al,0x2d
  423a33:	xchg   ebp,eax
  423a34:	nop
  423a35:	xor    ebp,DWORD PTR [eax+0x29]
  423a38:	outs   dx,BYTE PTR ds:[esi]
  423a39:	retf   0xb52b
  423a3c:	stos   DWORD PTR es:[edi],eax
  423a3d:	adc    eax,DWORD PTR [ebp+0x6d13f81c]
  423a43:	(bad)  
  423a44:	neg    DWORD PTR [esi]
  423a46:	rcl    DWORD PTR [ebx-0x75],0xda
  423a4a:	xchg   ebp,eax
  423a4b:	and    eax,0xf4bdee33
  423a50:	dec    esi
  423a51:	retf   
  423a52:	inc    ecx
  423a53:	dec    edx
  423a54:	push   eax
  423a55:	lea    eax,[edi+esi*4+0x69]
  423a59:	cdq    
  423a5a:	shl    BYTE PTR [eax],1
  423a5c:	popf   
  423a5d:	jns    0x423ad0
  423a5f:	cmp    al,0x17
  423a61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a62:	ds scas al,BYTE PTR es:[edi]
  423a64:	ficom  DWORD PTR [eax+eiz*2-0x5a9a9cc]
  423a6b:	dec    ebp
  423a6c:	inc    edi
  423a6d:	xlat   BYTE PTR ds:[ebx]
  423a6e:	jmp    0x9722:0x66100eff
  423a75:	dec    edx
  423a76:	(bad)  
  423a77:	jg     0x423a5e
  423a79:	(bad)  [ebp+0x11]
  423a7c:	mov    ebx,0x1245c755
  423a81:	fld    TBYTE PTR [edi+0x1a933357]
  423a87:	es int 0xc6
  423a8a:	mov    dl,0x98
  423a8c:	daa    
  423a8d:	push   eax
  423a8e:	and    BYTE PTR [edi+0x43],dl
  423a91:	ror    BYTE PTR [esi+0x1ea02f1a],cl
  423a97:	jno    0x423a62
  423a99:	adc    al,0x58
  423a9b:	rol    BYTE PTR [edx-0x61348924],cl
  423aa1:	mov    eax,eax
  423aa3:	(bad)  
  423aa4:	jge    0x423a90
  423aa6:	imul   ebx,DWORD PTR [edi+0x6c],0x37
  423aaa:	or     eax,0x6340a146
  423aaf:	hlt    
  423ab0:	enter  0x8895,0xf0
  423ab4:	cs shl ah,cl
  423ab7:	mov    ah,0xe5
  423ab9:	dec    ebx
  423aba:	scas   al,BYTE PTR es:[edi]
  423abb:	and    eax,0xe8af7a
  423ac0:	rcr    BYTE PTR [esi+edi*4-0x2646f42a],1
  423ac7:	adc    edx,DWORD PTR [edx]
  423ac9:	dec    edi
  423aca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423acb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423acc:	mov    bl,0x31
  423ace:	adc    dl,BYTE PTR [edx+0x4]
  423ad1:	bound  eax,QWORD PTR [ebx]
  423ad3:	dec    edi
  423ad4:	pushf  
  423ad5:	out    dx,eax
  423ad6:	jb     0x423a6b
  423ad8:	nop
  423ad9:	test   ebp,ebx
  423adb:	frstor [ebx-0x23]
  423ade:	fidivr WORD PTR [esi]
  423ae0:	imul   BYTE PTR [edx+0x64]
  423ae3:	iret   
  423ae4:	seto   al
  423ae7:	add    al,0xfc
  423ae9:	push   eax
  423aea:	adc    bl,0x64
  423aed:	adc    bh,BYTE PTR [edi+edx*2-0x37]
  423af1:	fprem  
  423af3:	mov    ebp,0x89e43fc6
  423af8:	jne    0x423b6c
  423afa:	cli    
  423afb:	mov    ebx,0xc31f670
  423b00:	add    eax,0x8a7c51d1
  423b05:	xchg   ecx,eax
  423b06:	xor    bh,BYTE PTR [edx-0x5b25333f]
  423b0c:	inc    ebx
  423b0d:	(bad)  
  423b0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b0f:	mov    ah,0xf8
  423b11:	dec    eax
  423b12:	mov    ch,0xb
  423b14:	cwde   
  423b15:	mov    ds:0xcb5b64af,eax
  423b1a:	shl    dl,1
  423b1c:	pop    eax
  423b1d:	loopne 0x423af8
  423b1f:	or     esi,DWORD PTR [edi-0x72]
  423b22:	outs   dx,DWORD PTR ss:[esi]
  423b24:	out    dx,eax
  423b25:	pop    edx
  423b26:	pop    ebp
  423b27:	scas   eax,DWORD PTR es:[edi]
  423b28:	into   
  423b29:	pop    esi
  423b2a:	test   al,0x91
  423b2c:	retf   
  423b2d:	aam    0x9c
  423b2f:	or     al,0xf6
  423b31:	jecxz  0x423b6d
  423b33:	xor    DWORD PTR [ebx],edx
  423b35:	les    edi,FWORD PTR [edx+0x6f]
  423b38:	sbb    DWORD PTR [eax+0x21],eax
  423b3b:	in     eax,0x26
  423b3d:	inc    ebp
  423b3e:	sbb    BYTE PTR [eax-0x75],ah
  423b41:	push   ebp
  423b42:	clc    
  423b43:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  423b4b:	mov    edx,DWORD PTR [ebp-0x54]
  423b4e:	xor    edx,esi
  423b50:	lea    eax,[edx+eax*1+0x3272db]
  423b57:	movzx  edx,BYTE PTR [ebp-0x1]
  423b5b:	xor    edx,eax
  423b5d:	mov    BYTE PTR [ebp-0x1],dl
  423b60:	mov    al,BYTE PTR [ebp-0x1]
  423b63:	mov    edx,DWORD PTR [ebp-0x1c]
  423b66:	mov    ebx,DWORD PTR [ebp-0xc]
  423b69:	xor    edx,esi
  423b6b:	add    edx,edi
  423b6d:	imul   edx,ebx
  423b70:	mov    ebx,DWORD PTR [ebp-0x8]
  423b73:	mov    BYTE PTR [edx+ebx*1],al
  423b76:	mov    eax,DWORD PTR [ebp-0x30]
  423b79:	mov    edx,DWORD PTR [ebp-0x3c]
  423b7c:	xor    eax,esi
  423b7e:	xor    edx,esi
  423b80:	add    eax,edi
  423b82:	add    edx,edi
  423b84:	imul   eax,edx
  423b87:	add    eax,DWORD PTR [ebp-0xc]
  423b8a:	mov    DWORD PTR [ebp-0xc],eax
  423b8d:	mov    eax,DWORD PTR [ebp-0xc]
  423b90:	mov    edx,DWORD PTR [ebp-0x24]
  423b93:	cmp    edx,eax
  423b95:	jb     0x41e9a5
  423b9b:	mov    eax,DWORD PTR [ebp-0x3c]
  423b9e:	mov    edx,DWORD PTR [ebp-0x24]
  423ba1:	xor    eax,esi
  423ba3:	add    eax,edi
  423ba5:	imul   eax,edx
  423ba8:	mov    edx,DWORD PTR [ebp-0x20]
  423bab:	xor    edx,esi
  423bad:	add    edx,edi
  423baf:	or     eax,edx
  423bb1:	mov    edx,DWORD PTR [ebp-0x18]
  423bb4:	xor    edx,esi
  423bb6:	add    eax,edx
  423bb8:	mov    edx,DWORD PTR [ebp-0x18]
  423bbb:	xor    edx,esi
  423bbd:	add    eax,edx
  423bbf:	mov    edx,DWORD PTR [ebp-0x10]
  423bc2:	lea    eax,[eax+edx*1+0x64e5b6]
  423bc9:	jmp    0x423bdd
  423bce:	mov    eax,DWORD PTR [ebp-0x18]
  423bd1:	mov    edx,DWORD PTR [ebp-0x10]
  423bd4:	xor    eax,esi
  423bd6:	lea    eax,[eax+edx*1+0x3272db]
  423bdd:	mov    DWORD PTR [ebp-0x10],eax
  423be0:	jmp    0x41e8f2
  423be5:	mov    eax,DWORD PTR [ebp-0x38]
  423be8:	mov    edx,DWORD PTR [ebp+0xc]
  423beb:	xor    edx,esi
  423bed:	lea    ecx,[ecx+edx*1+0x3272db]
  423bf4:	lea    edx,[ecx-0x3272db]
  423bfa:	xor    edx,esi
  423bfc:	cmp    edx,0xf89c95b6
  423c02:	jne    0x41e770
  423c08:	mov    ecx,DWORD PTR [ebp+0x8]
  423c0b:	mov    edx,DWORD PTR [ebp+0xc]
  423c0e:	mov    ebx,DWORD PTR [ebp+0x8]
  423c11:	xor    edx,esi
  423c13:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  423c1a:	xor    ecx,esi
  423c1c:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  423c23:	xor    ebx,esi
  423c25:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  423c2c:	mov    edx,DWORD PTR [ebp+0xc]
  423c2f:	xor    edx,esi
  423c31:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  423c38:	mov    eax,DWORD PTR [ebp+0xc]
  423c3b:	xor    eax,esi
  423c3d:	add    eax,edi
  423c3f:	pop    edi
  423c40:	pop    esi
  423c41:	pop    ebx
  423c42:	leave  
  423c43:	ret    0x8
  423c46:	push   ebp
  423c47:	mov    ebp,esp
  423c49:	push   ecx
  423c4a:	mov    eax,ds:0x42c008
  423c4f:	xor    DWORD PTR ds:0x42c000,eax
  423c55:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  423c5c:	mov    eax,DWORD PTR [ebp+0x8]
  423c5f:	sbb    DWORD PTR ds:0x42d010,0x5f50
  423c69:	mov    al,BYTE PTR [eax]
  423c6b:	add    DWORD PTR ds:0x429020,0x42b018
  423c75:	add    al,0xd
  423c77:	xor    DWORD PTR ds:0x42901c,0x429000
  423c81:	xor    al,0x6f
  423c83:	mov    DWORD PTR ds:0x42d008,0x56e
  423c8d:	cmp    al,0x35
  423c8f:	mov    DWORD PTR ds:0x42c000,0x518
  423c99:	jne    0x423d14
  423c9f:	mov    eax,DWORD PTR [ebp+0x8]
  423ca2:	mov    edx,DWORD PTR ds:0x429014
  423ca8:	or     DWORD PTR ds:0x429010,edx
  423cae:	mov    ecx,DWORD PTR [ebp+0x8]
  423cb1:	add    ecx,DWORD PTR [eax+0x3c]
  423cb4:	mov    edx,0x7510893
  423cb9:	adc    eax,DWORD PTR ds:0x42c01c
  423cbf:	mov    DWORD PTR [ebp+0x8],ecx
  423cc2:	mov    eax,DWORD PTR [ebp-0x4]
  423cc5:	xor    eax,edx
  423cc7:	adc    ecx,0x2aad
  423ccd:	push   esi
  423cce:	add    DWORD PTR ds:0x42d01c,0x22ba
  423cd8:	mov    esi,DWORD PTR [ebp+0x8]
  423cdb:	xor    ecx,ecx
  423cdd:	xor    ecx,DWORD PTR ds:0x42901c
  423ce3:	xor    ecx,DWORD PTR ds:0x42a010
  423ce9:	mov    DWORD PTR ds:0x42901c,ecx
  423cef:	mov    ecx,0x3272db
  423cf4:	add    eax,ecx
  423cf6:	cmp    DWORD PTR [esi+0x54],eax
  423cf9:	pop    esi
  423cfa:	je     0x423d08
  423d00:	mov    eax,DWORD PTR [ebp+0x8]
  423d03:	jmp    0x423d21
  423d08:	mov    eax,DWORD PTR [ebp-0x4]
  423d0b:	xor    eax,edx
  423d0d:	add    eax,ecx
  423d0f:	jmp    0x423d21
  423d14:	mov    eax,DWORD PTR [ebp-0x4]
  423d17:	xor    eax,0x7510893
  423d1c:	add    eax,0x3272db
  423d21:	leave  
  423d22:	ret    0x4
  423d25:	push   ebp
  423d26:	mov    ebp,esp
  423d28:	push   ecx
  423d29:	sub    DWORD PTR ds:0x42d010,0x2dcc
  423d33:	push   ecx
  423d34:	and    DWORD PTR ds:0x42d014,0x0
  423d3e:	jmp    0x423d52
  423d43:	xor    edx,edx
  423d45:	add    edx,DWORD PTR ds:0x42d014
  423d4b:	inc    edx
  423d4c:	mov    DWORD PTR ds:0x42d014,edx
  423d52:	cmp    DWORD PTR ds:0x42d014,0x1d
  423d59:	jae    0x423d90
  423d5f:	cmp    DWORD PTR ds:0x42d014,0x26
  423d66:	jne    0x423d8b
  423d6c:	push   0x643f
  423d71:	push   DWORD PTR [ebp-0x24]
  423d74:	push   0x42a010
  423d79:	push   DWORD PTR [ebp-0xc]
  423d7c:	push   DWORD PTR [ebp-0x10]
  423d7f:	push   DWORD PTR [ebp-0x10]
  423d82:	push   DWORD PTR [ebp-0x28]
  423d85:	call   DWORD PTR ds:0x42502c
  423d8b:	jmp    0x423d43
  423d90:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  423d97:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  423d9e:	dec    eax
  423d9f:	mov    eax,DWORD PTR [ebp-0x4]
  423da2:	add    edx,0x6ccb
  423da8:	push   esi
  423da9:	mov    esi,DWORD PTR [ebp-0x8]
  423dac:	adc    DWORD PTR ds:0x42a00c,ebx
  423db2:	mov    edx,0x7510893
  423db7:	sbb    DWORD PTR ds:0x42c018,0x5978
  423dc1:	xor    eax,edx
  423dc3:	sbb    DWORD PTR ds:0x42901c,0x3646
  423dcd:	xor    esi,edx
  423dcf:	sub    DWORD PTR ds:0x429014,0x4430
  423dd9:	mov    ecx,0x3272db
  423dde:	sbb    DWORD PTR ds:0x42d01c,0x42900c
  423de8:	add    esi,ecx
  423dea:	mov    DWORD PTR ds:0x42a010,0x31b3
  423df4:	add    eax,ecx
  423df6:	inc    DWORD PTR ds:0x42c01c
  423dfc:	imul   eax,esi
  423dff:	mov    esi,DWORD PTR [ebp+0xc]
  423e02:	mov    DWORD PTR ds:0x429028,0xd41
  423e0c:	cmp    esi,eax
  423e0e:	jne    0x423e2c
  423e14:	and    esi,eax
  423e16:	mov    eax,DWORD PTR [ebp-0x4]
  423e19:	mov    esi,DWORD PTR [ebp-0x8]
  423e1c:	xor    eax,edx
  423e1e:	xor    esi,edx
  423e20:	add    eax,ecx
  423e22:	add    esi,ecx
  423e24:	imul   eax,esi
  423e27:	jmp    0x423e67
  423e2c:	mov    eax,DWORD PTR [ebp+0xc]
  423e2f:	mov    eax,DWORD PTR [eax+0x78]
  423e32:	mov    DWORD PTR [ebp+0xc],eax
  423e35:	mov    eax,DWORD PTR [ebp-0x4]
  423e38:	mov    esi,DWORD PTR [ebp-0x8]
  423e3b:	xor    eax,edx
  423e3d:	xor    esi,edx
  423e3f:	add    eax,ecx
  423e41:	add    esi,ecx
  423e43:	imul   eax,esi
  423e46:	mov    esi,DWORD PTR [ebp+0xc]
  423e49:	cmp    esi,eax
  423e4b:	mov    eax,DWORD PTR [ebp-0x4]
  423e4e:	je     0x423e19
  423e54:	xor    eax,edx
  423e56:	add    eax,ecx
  423e58:	mov    ecx,DWORD PTR [ebp+0xc]
  423e5b:	imul   eax,ecx
  423e5e:	add    eax,DWORD PTR [ebp+0x8]
  423e61:	mov    DWORD PTR [ebp+0xc],eax
  423e64:	mov    eax,DWORD PTR [ebp+0xc]
  423e67:	pop    esi
  423e68:	leave  
  423e69:	ret    0x8
  423e6c:	add    BYTE PTR [eax-0x5ffbffbe],ah
  423e72:	inc    edx
  423e73:	add    BYTE PTR [eax],cl
  423e75:	mov    al,ds:0xa00c0042
  423e7a:	inc    edx
  423e7b:	add    BYTE PTR [eax],dl
  423e7d:	mov    al,ds:0xa0140042
  423e82:	inc    edx
  423e83:	add    BYTE PTR [eax],bl
  423e85:	mov    al,ds:0xa01c0042
  423e8a:	inc    edx
  423e8b:	add    BYTE PTR [eax],al
  423e8d:	mov    al,0x42
  423e8f:	add    BYTE PTR [eax+esi*4],al
  423e92:	inc    edx
  423e93:	add    BYTE PTR [eax],cl
  423e95:	mov    al,0x42
  423e97:	add    BYTE PTR [eax+esi*4],cl
  423e9a:	inc    edx
  423e9b:	add    BYTE PTR [eax],dl
  423e9d:	mov    al,0x42
  423e9f:	add    BYTE PTR [eax+esi*4],dl
  423ea2:	inc    edx
  423ea3:	add    BYTE PTR [eax],bl
  423ea5:	mov    al,0x42
  423ea7:	add    BYTE PTR [eax+esi*4],bl
  423eaa:	inc    edx
  423eab:	add    BYTE PTR [eax],al
  423ead:	rol    BYTE PTR [edx+0x0],0x4
  423eb1:	rol    BYTE PTR [edx+0x0],0x8
  423eb5:	rol    BYTE PTR [edx+0x0],0xc
  423eb9:	rol    BYTE PTR [edx+0x0],0x10
  423ebd:	rol    BYTE PTR [edx+0x0],0x14
  423ec1:	rol    BYTE PTR [edx+0x0],0x18
  423ec5:	rol    BYTE PTR [edx+0x0],0x1c
  423ec9:	rol    BYTE PTR [edx+0x0],0x75
  423ecd:	ins    DWORD PTR es:[edi],dx
  423ece:	push   ecx
  423ecf:	push   eax
  423ed0:	jo     0x423f4c
  423ed2:	addr16 jo 0x423f2b
  423ed5:	pop    eax
  423ed6:	inc    ebp
  423ed7:	push   edx
  423ed8:	jb     0x423f4e
  423eda:	inc    esi
  423edb:	je     0x423f24
  423edd:	gs ins BYTE PTR es:[edi],dx
  423edf:	dec    esp
  423ee0:	js     0x423f4a
  423ee2:	inc    edx
  423ee3:	js     0x423f2b
  423ee5:	arpl   WORD PTR [edx+0x66],ax
  423ee8:	inc    ebx
  423ee9:	push   ebp
  423eea:	jno    0x423f62
  423eec:	mov    BYTE PTR [edx+0x42],al
  423eef:	add    BYTE PTR [eax+0x34004242],dl
  423ef5:	inc    ecx
  423ef6:	inc    edx
  423ef7:	add    bh,ch
  423ef9:	or     esi,DWORD PTR [edx+0x304e790e]
  423eff:	dec    esi
  423f00:	xchg   DWORD PTR [edi+0x3d],ecx
  423f03:	dec    esi
  423f04:	scas   eax,DWORD PTR es:[edi]
  423f05:	dec    edi
  423f06:	ds dec esi
  423f08:	js     0x423f58
  423f0a:	cmp    ecx,DWORD PTR [esi-0x64]
  423f0d:	dec    edi
  423f0e:	inc    esp
  423f0f:	dec    esi
  423f10:	jae    0x423f60
  423f12:	inc    ecx
  423f13:	dec    esi
  423f14:	xor    BYTE PTR [esi+0x40],cl
  423f17:	dec    esi
  423f18:	pop    esp
  423f19:	pop    ebp
  423f1a:	pop    edi
  423f1b:	push   edx
  423f1c:	cmp    DWORD PTR [esi+0x79],ecx
  423f1f:	dec    esi
  423f20:	xor    BYTE PTR [esi-0x79],cl
  423f23:	dec    edi
  423f24:	cmp    eax,0x3e4faf4e
  423f29:	dec    esi
  423f2a:	js     0x423f7a
  423f2c:	cmp    ecx,DWORD PTR [esi-0x64]
  423f2f:	dec    edi
  423f30:	inc    esp
  423f31:	dec    esi
  423f32:	mov    DWORD PTR [edi+0x41],ecx
  423f35:	dec    esi
  423f36:	xor    BYTE PTR [esi+0x40],cl
  423f39:	dec    esi
  423f3a:	pop    esp
  423f3b:	ins    DWORD PTR es:[edi],dx
  423f3c:	pop    edi
  423f3d:	bound  edi,QWORD PTR [ecx]
  423f3f:	dec    esi
  423f40:	jns    0x423f90
  423f42:	xor    BYTE PTR [esi-0x80],cl
  423f45:	dec    edi
  423f46:	cmp    eax,0x394e734e
  423f4b:	dec    esi
  423f4c:	mov    ds:0x304e3a4f,al
  423f51:	dec    esi
  423f52:	inc    esi
  423f53:	dec    esi
  423f54:	pop    esp
  423f55:	jge    0x423fb6
  423f57:	jb     0x423fc8
  423f59:	sub    BYTE PTR [esi-0x7d],0x7e
  423f5d:	xchg   ebx,eax
  423f5e:	jns    0x423ef0
  423f60:	aas    
  423f61:	dec    esi
  423f62:	test   BYTE PTR [edi+0x30],cl
  423f65:	dec    esi
  423f66:	test   BYTE PTR [edi+0x3c],cl
  423f69:	dec    esi
  423f6a:	mov    ds:0x734e394f,al
  423f6f:	dec    esi
  423f70:	inc    ebp
  423f71:	dec    esi
  423f72:	xor    BYTE PTR [esi+0x44],cl
  423f75:	dec    esi
  423f76:	pop    esp
  423f77:	lea    ebx,[edi-0x7e]
  423f7a:	outs   dx,DWORD PTR ds:[esi]
  423f7b:	xchg   edx,eax
  423f7c:	outs   dx,BYTE PTR ds:[esi]
  423f7d:	xchg   ebx,eax
  423f7e:	jle    0x423f23
  423f80:	jns    0x423f22
  423f82:	aas    
  423f83:	dec    esi
  423f84:	test   BYTE PTR [edi+0x30],cl
  423f87:	dec    esi
  423f88:	test   BYTE PTR [edi+0x3c],cl
  423f8b:	dec    esi
  423f8c:	mov    ds:0x894e394f,al
  423f91:	dec    edi
  423f92:	inc    ebp
  423f93:	dec    esi
  423f94:	xor    BYTE PTR [esi+0x44],cl
  423f97:	dec    esi
  423f98:	pop    esp
  423f99:	popf   
  423f9a:	pop    edi
  423f9b:	xchg   edx,eax
  423f9c:	outs   dx,DWORD PTR ds:[esi]
  423f9d:	mov    ds:0xb37ea36e,al
  423fa2:	jns    0x423f54
  423fa4:	aas    
  423fa5:	dec    esi
  423fa6:	mov    cs,WORD PTR [edi+0x30]
  423fa9:	dec    esi
  423faa:	lods   al,BYTE PTR ds:[esi]
  423fab:	dec    edi
  423fac:	cmp    eax,0x394e734e
  423fb1:	dec    esi
  423fb2:	mov    eax,ds:0x304e3a4f
  423fb7:	dec    esi
  423fb8:	inc    esp
  423fb9:	dec    esi
  423fba:	pop    esp
  423fbb:	lods   eax,DWORD PTR ds:[esi]
  423fbc:	pop    edi
  423fbd:	mov    ds:0xb36eb26f,al
  423fc2:	jle    0x423f87
  423fc4:	jns    0x423f86
  423fc6:	aas    
  423fc7:	dec    esi
  423fc8:	mov    cs,WORD PTR [edi+0x30]
  423fcb:	dec    esi
  423fcc:	lods   al,BYTE PTR ds:[esi]
  423fcd:	dec    edi
  423fce:	cmp    eax,0x394e7e4e
  423fd3:	dec    esi
  423fd4:	lahf   
  423fd5:	dec    edi
  423fd6:	cmp    ecx,DWORD PTR [esi+0x30]
  423fd9:	dec    esi
  423fda:	inc    ebp
  423fdb:	dec    esi
  423fdc:	pop    esp
  423fdd:	mov    ebp,0xc26fb25f
  423fe2:	outs   dx,BYTE PTR ds:[esi]
  423fe3:	ret    
  423fe4:	jle    0x423fb9
  423fe6:	jns    0x423fb8
  423fe8:	aas    
  423fe9:	dec    esi
  423fea:	mov    cs,WORD PTR [edi+0x30]
  423fed:	dec    esi
  423fee:	lods   al,BYTE PTR ds:[esi]
  423fef:	dec    edi
  423ff0:	cmp    eax,0x394f804e
  423ff5:	dec    esi
  423ff6:	lods   al,BYTE PTR ds:[esi]
  423ff7:	dec    edi
  423ff8:	cmp    cl,BYTE PTR [esi+0x30]
  423ffb:	dec    esi
  423ffc:	inc    esi
  423ffd:	dec    esi
  423ffe:	pop    esp
  423fff:	int    0x5f
  424001:	ret    0xd26f
  424004:	outs   dx,BYTE PTR ds:[esi]
  424005:	sar    DWORD PTR [esi-0x1d],cl
  424008:	jns    0x423fea
  42400a:	aas    
  42400b:	dec    esi
  42400c:	mov    cs,WORD PTR [edi+0x30]
  42400f:	dec    esi
  424010:	lods   al,BYTE PTR ds:[esi]
  424011:	dec    edi
  424012:	cmp    eax,0x394f834e
  424017:	dec    esi
  424018:	mov    ds:0x304e3a4f,al
  42401d:	dec    esi
  42401e:	inc    esp
  42401f:	dec    esi
  424020:	pop    esp
  424021:	fstp   QWORD PTR [edi-0x2e]
  424024:	outs   dx,DWORD PTR ds:[esi]
  424025:	loop   0x424095
  424027:	jecxz  0x4240a7
  424029:	repz jns 0x42401c
  42402c:	aas    
  42402d:	dec    esi
  42402e:	lea    ecx,[edi+0x30]
  424031:	dec    esi
  424032:	lahf   
  424033:	dec    edi
  424034:	cmp    eax,0x3c4fa04e
  424039:	dec    esi
  42403a:	xor    BYTE PTR [esi+0x3f],cl
  42403d:	dec    esi
  42403e:	pop    esp
  42403f:	in     eax,dx
  424040:	pop    edi
  424041:	loop   0x4240b2
  424043:	repnz outs dx,BYTE PTR ds:[esi]
  424045:	repz jle 0x42404b
  424048:	jns    0x42404a
  42404a:	jle    0x42405f
  42404c:	jns    0x42405e
  42404e:	cmp    al,0x4e
  424050:	jg     0x4240a0
  424052:	xor    BYTE PTR [esi-0x65],cl
  424055:	dec    edi
  424056:	xor    cl,BYTE PTR [esi-0x80]
  424059:	dec    edi
  42405a:	cmp    al,0x4e
  42405c:	lods   eax,DWORD PTR ds:[esi]
  42405d:	dec    edi
  42405e:	cmp    ecx,DWORD PTR [esi+0x30]
  424061:	dec    esi
  424062:	inc    ebp
  424063:	dec    esi
  424064:	pop    esp
  424065:	or     eax,0x126f025f
  42406a:	outs   dx,BYTE PTR ds:[esi]
  42406b:	adc    edi,DWORD PTR [esi+0x23]
  42406e:	jns    0x424090
  424070:	aas    
  424071:	dec    esi
  424072:	add    BYTE PTR [eax],al
  424074:	cld    
  424075:	ds inc edx
  424077:	add    al,dh
  424079:	inc    eax
  42407a:	inc    edx
  42407b:	add    al,bh
  42407d:	inc    eax
  42407e:	inc    edx
  42407f:	add    BYTE PTR [edx+eax*2+0x41fc0042],dl
  424086:	inc    edx
  424087:	add    BYTE PTR [edx+eax*2+0x40d80042],al
  42408e:	inc    edx
  42408f:	add    ah,bl
  424091:	inc    eax
  424092:	inc    edx
  424093:	add    BYTE PTR [eax+0x40004242],al
  424099:	inc    ecx
  42409a:	inc    edx
  42409b:	add    BYTE PTR ds:0x36f89ca9,cl
  4240a1:	mov    edx,0x40f4f89c
  4240a6:	inc    edx
  4240a7:	add    BYTE PTR [eax-0x33ffbdbf],bh
  4240ad:	inc    ecx
  4240ae:	inc    edx
  4240af:	add    al,bl
  4240b1:	inc    ecx
  4240b2:	inc    edx
  4240b3:	add    al,ch
  4240b5:	inc    ecx
  4240b6:	inc    edx
  4240b7:	add    BYTE PTR [ecx+eax*2],ch
  4240ba:	inc    edx
  4240bb:	add    al,bh
  4240bd:	ds inc edx
  4240bf:	add    BYTE PTR [ecx+eax*2+0x42],cl
  4240c3:	add    BYTE PTR [ecx+eax*2],bh
  4240c6:	inc    edx
  4240c7:	add    BYTE PTR [eax-0x49ffbdbe],bl
  4240cd:	test   DWORD PTR [eax+edi*8-0x7ee8f4e7],ebx
  4240d4:	add    BYTE PTR [ecx+0x42],al
  4240d7:	add    BYTE PTR [esp+ebx*1],dl
  4240da:	push   ss
  4240db:	or     DWORD PTR [eax],0x7050d
  4240e1:	add    BYTE PTR [eax+0x0],al
  4240e4:	cmp    al,BYTE PTR [edx+0x3e]
  4240e7:	ds mov edx,0x6d004287
  4240ed:	push   ebp
  4240ee:	inc    esp
  4240ef:	imul   ecx,DWORD PTR [eax],0x86275fa
  4240f5:	in     eax,dx
  4240f6:	inc    BYTE PTR [edi]
  4240f8:	aas    
  4240f9:	cli    
  4240fa:	mov    ds:0x4240e805,eax
  4240ff:	add    BYTE PTR [ebp-0x4a07636b],dh
  424105:	xchg   esi,eax
  424106:	pushf  
  424107:	clc    
  424108:	mov    ah,0x95
  42410a:	pushf  
  42410b:	clc    
  42410c:	mov    ebx,0xbaf89c95
  424111:	xchg   ebp,eax
  424112:	pushf  
  424113:	clc    
  424114:	mov    ecx,0xb8f89c95
  424119:	xchg   ebp,eax
  42411a:	pushf  
  42411b:	clc    
  42411c:	mov    edi,0xbef89c95
  424121:	xchg   ebp,eax
  424122:	pushf  
  424123:	clc    
  424124:	mov    ebp,0xa6f89c95
  424129:	xchg   ebp,eax
  42412a:	pushf  
  42412b:	clc    
  42412c:	jmp    0x423e:0xf06003f9
  424133:	add    BYTE PTR [eax+edx*2+0x42],bh
  424137:	add    BYTE PTR [ebx+0x77],dl
  42413a:	jbe    0x42418c
  42413c:	mov    dh,0x85
  42413e:	pushf  
  42413f:	clc    
  424140:	sbb    ecx,ebp
  424142:	push   eax
  424143:	pop    es
  424144:	in     eax,0x7
  424146:	add    BYTE PTR [eax],al
  424148:	in     al,dx
  424149:	ds inc edx
  42414b:	add    BYTE PTR [ebx],bl
  42414d:	or     eax,DWORD PTR [esi+ecx*1]
	...
  424180:	jl     0x4241d2
  424182:	inc    edx
  424183:	add    BYTE PTR [esi+0x68f89c85],dh
  424189:	jne    0x424204
  42418b:	je     0x424202
  42418d:	jns    0x424203
  42418f:	jb     0x4241f9
  424191:	addr16 pushw 0x68
  424195:	imul   esp,DWORD PTR [bx+0x68],0x0
  42419a:	add    BYTE PTR [eax],al
  42419c:	addr16 pushw 0x68
  4241a0:	addr16 push 0x67
  4241a3:	pushw  0x6b6a
  4241a7:	push   0x676b67
	...
  4241b4:	jle    0x42413c
  4241b6:	inc    eax
  4241b7:	add    BYTE PTR [ebp-0x5db060b1],ah
  4241bd:	dec    edi
  4241be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241bf:	dec    edi
  4241c0:	lahf   
  4241c1:	dec    edi
  4241c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241c3:	dec    edi
  4241c4:	ins    DWORD PTR es:[edi],dx
  4241c5:	dec    esi
  4241c6:	bound  ecx,QWORD PTR [esi+0x30]
  4241c9:	dec    esi
  4241ca:	add    BYTE PTR [eax],al
  4241cc:	cdq    
  4241cd:	dec    edi
  4241ce:	pushf  
  4241cf:	dec    edi
  4241d0:	fwait
  4241d1:	dec    edi
  4241d2:	ins    DWORD PTR es:[edi],dx
  4241d3:	dec    esi
  4241d4:	bound  ecx,QWORD PTR [esi+0x30]
  4241d7:	dec    esi
  4241d8:	scas   eax,DWORD PTR es:[edi]
  4241d9:	dec    edi
  4241da:	lods   eax,DWORD PTR ds:[esi]
  4241db:	dec    edi
  4241dc:	lahf   
  4241dd:	dec    edi
  4241de:	mov    ds:0x624e6d4f,al
  4241e3:	dec    esi
  4241e4:	xor    BYTE PTR [esi+0x0],cl
  4241e7:	add    BYTE PTR [ebp-0x5bb067b1],ch
  4241ed:	dec    edi
  4241ee:	test   eax,0xa04f934f
  4241f3:	dec    edi
  4241f4:	fwait
  4241f5:	dec    edi
  4241f6:	xor    BYTE PTR [esi+0x0],cl
  4241f9:	add    BYTE PTR [eax],al
  4241fb:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  424202:	mov    WORD PTR [ebp-0x32734274],gs
  424208:	mov    ebp,ds
  42420a:	mov    ebp,gs
  42420c:	mov    ebp,?
  42420e:	mov    WORD PTR ds:0x2d8c1d8c,cs
  424214:	mov    WORD PTR ds:0x6d8c5d8c,?
  42421a:	mov    WORD PTR [edx-0x74],?
  42421d:	jae    0x4241ab
  42421f:	jo     0x4241ad
  424221:	jno    0x4241af
  424223:	jbe    0x4241b1
  424225:	ja     0x4241b3
  424227:	je     0x4241b5
  424229:	jne    0x4241b7
  42422b:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  424232:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  424238:	lods   al,BYTE PTR ds:[esi]
  424239:	jge    0x4241f7
  42423b:	jge    0x4241db
  42423d:	(bad)  
  42423e:	jns    0x4242b3
  424240:	mov    ecx,0x7d738cb1
  424245:	ins    DWORD PTR es:[edi],dx
  424246:	enter  0x9fc6,0x26
  42424a:	jb     0x42424f
  42424c:	test   eax,0xb956bb17
  424251:	hlt    
  424252:	test   al,0x37
  424254:	test   al,0x7e
  424256:	fnstenv [ecx-0x6a]
  424259:	mov    cl,0x6a
  42425b:	push   0xffffffce
  42425d:	or     BYTE PTR [edx],bl
  42425f:	xlat   BYTE PTR ds:[ebx]
  424260:	out    dx,eax
  424261:	add    eax,0x9321d7aa
  424266:	scas   al,BYTE PTR es:[edi]
  424267:	adc    DWORD PTR [esi],esp
  424269:	jge    0x42428e
  42426b:	fidiv  WORD PTR [edi]
  42426d:	leave  
  42426e:	hlt    
  42426f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424270:	cmp    ax,0x1fc8
  424274:	mov    dh,cl
  424276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424277:	(bad)  
  424278:	and    DWORD PTR [eax],ebx
  42427a:	and    DWORD PTR [ecx+0x0],esi
  42427d:	add    BYTE PTR [eax],al
  42427f:	add    al,ch
  424281:	(bad)  [ebx+0x7]
  424284:	cmc    
  424285:	enter  0x301a,0x10
  424289:	push   eax
  42428a:	inc    edx
  42428b:	add    BYTE PTR [ecx+0x66],dh
  42428e:	jp     0x4242fe
  424290:	loopne 0x4242d2
  424292:	inc    edx
  424293:	add    BYTE PTR [ecx+eax*2+0x42],al
  424297:	add    BYTE PTR [eax],cl
  424299:	in     eax,dx
  42429a:	adc    al,BYTE PTR [edi]
  42429c:	pop    ecx
  42429d:	inc    ebx
  42429e:	inc    edx
  42429f:	outs   dx,BYTE PTR ds:[esi]
  4242a0:	popa   
  4242a1:	imul   eax,DWORD PTR [edx+0x61],0x6b
  4242a5:	jne    0x424315
  4242a7:	dec    ebx
  4242a8:	je     0x42430d
  4242aa:	bound  esp,QWORD PTR [edi+0x78]
  4242ad:	dec    eax
  4242ae:	bound  edx,QWORD PTR [ebx+0x53]
  4242b1:	inc    ebx
  4242b2:	push   ebp
  4242b3:	push   eax
  4242b4:	ja     0x424330
  4242b6:	jp     0x424305
  4242b8:	push   esi
  4242b9:	arpl   WORD PTR gs:[ecx+0x45],si
  4242bd:	dec    edx
  4242be:	dec    esi
  4242bf:	data16 ja 0x424310
  4242c2:	imul   ebp,DWORD PTR [eax+0x0],0x0
	...
  4242d5:	add    BYTE PTR [eax],al
  4242d7:	add    BYTE PTR [edi+0x6c],ch
  4242da:	push   0x49657557
  4242df:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  4242e5:	push   edi
  4242e6:	je     0x42435d
  4242e8:	push   0x66
  4242ea:	jbe    0x42432e
  4242ec:	jo     0x424337
  4242ee:	dec    ebp
  4242ef:	dec    ebp
  4242f0:	pop    edx
  4242f1:	jp     0x42434d
  4242f3:	jbe    0x42433b
  4242f5:	pop    ecx
  4242f6:	jo     0x424370
  4242f8:	push   edi
  4242f9:	jbe    0x424342
  4242fb:	ja     0x424340
  4242fd:	js     0x424347
  4242ff:	jno    0x424349
  424301:	inc    ebp
  424302:	inc    esp
  424303:	inc    esp
  424304:	push   ecx
  424305:	dec    edx
  424306:	ins    BYTE PTR es:[edi],dx
  424307:	dec    ebx
  424308:	jbe    0x424378
  42430a:	pop    eax
  42430b:	jbe    0x42430d
  42430d:	add    BYTE PTR [ecx+0x46],al
  424310:	jae    0x424388
  424312:	dec    ebx
  424313:	gs js  0x42437c
  424316:	ins    BYTE PTR es:[edi],dx
  424317:	jp     0x424319
  424319:	add    BYTE PTR [ebx+0x41],cl
  42431c:	fs gs jno 0x42438d
  424320:	push   ebx
  424321:	inc    ecx
  424322:	inc    ebx
  424323:	outs   dx,BYTE PTR ds:[esi]
  424324:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  424328:	push   edx
  424329:	push   ecx
  42432a:	push   0x43000064
  42432f:	pop    eax
  424330:	outs   dx,DWORD PTR ds:[esi]
  424331:	push   0x66694355
  424336:	dec    edi
  424337:	je     0x424385
  424339:	jo     0x42433b
  42433b:	add    BYTE PTR [ebx+0x6f],dl
  42433e:	inc    edi
  42433f:	dec    esi
  424340:	outs   dx,DWORD PTR ds:[esi]
  424341:	pop    ecx
  424342:	inc    edi
  424343:	jb     0x42438c
  424345:	jns    0x4243bd
  424347:	inc    ecx
  424348:	pop    eax
  424349:	add    BYTE PTR [edi+0x67],dh
  42434c:	dec    edi
  42434d:	dec    esp
  42434e:	dec    ebp
  42434f:	inc    edx
  424350:	jno    0x4243c3
  424352:	jae    0x4243a7
  424354:	push   eax
  424355:	arpl   WORD PTR [eax],ax
  424357:	add    BYTE PTR [ecx+edi*2+0x45],cl
  42435b:	bound  ebp,QWORD PTR [ecx+0x46]
  42435e:	dec    ecx
  42435f:	ja     0x4243a6
  424361:	dec    eax
  424362:	inc    ebp
  424363:	inc    edx
  424364:	push   ebx
  424365:	push   ecx
  424366:	add    BYTE PTR [eax],al
  424368:	outs   dx,BYTE PTR ds:[esi]
  424369:	dec    eax
  42436a:	jno    0x4243c5
  42436c:	jbe    0x4243ba
  42436e:	ins    BYTE PTR es:[edi],dx
  42436f:	inc    edx
  424370:	push   0x73
  424375:	add    BYTE PTR [eax],al
  424377:	add    BYTE PTR [eax],al
  424379:	add    BYTE PTR [eax],al
  42437b:	add    BYTE PTR [edx+0x44],bl
  42437e:	jbe    0x4243c9
  424380:	imul   ecx,DWORD PTR [esi+0x6e],0x66
  424384:	ins    DWORD PTR es:[di],dx
  424386:	je     0x4243cf
  424388:	ins    BYTE PTR es:[edi],dx
  424389:	jae    0x4243f5
  42438b:	inc    esi
  42438c:	ins    DWORD PTR es:[edi],dx
  42438d:	je     0x4243e5
  42438f:	push   0x56584178
  424394:	push   ebx
  424395:	addr16 dec edx
  424397:	jo     0x42440b
  424399:	js     0x42440a
  42439b:	pop    eax
  42439c:	dec    ebx
  42439d:	push   esp
  42439e:	dec    esp
  42439f:	jns    0x4243ec
  4243a1:	js     0x42441b
  4243a3:	outs   dx,BYTE PTR ds:[esi]
  4243a4:	pop    ecx
  4243a5:	jae    0x424415
  4243a7:	push   0x43644448
  4243ac:	arpl   WORD PTR [edx+0x55],sp
  4243af:	push   0x42504e67
  4243b4:	push   ebp
  4243b5:	je     0x42442c
  4243b7:	addr16 dec edi
  4243b9:	dec    esp
  4243ba:	inc    edx
  4243bb:	ins    DWORD PTR es:[edi],dx
  4243bc:	inc    esi
  4243bd:	inc    esi
  4243be:	inc    esi
  4243bf:	arpl   WORD PTR [edx+0x47],bx
  4243c2:	push   ebp
  4243c3:	inc    ebx
  4243c4:	popa   
  4243c5:	push   edx
  4243c6:	dec    esp
  4243c7:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  4243ce:	push   ecx
  4243cf:	push   ebx
  4243d0:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  4243d7:	dec    edx
  4243d8:	jns    0x424443
  4243da:	push   edx
  4243db:	inc    ebx
  4243dc:	jo     0x424453
  4243de:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  4243e2:	fs add al,dl
  4243e5:	inc    edx
  4243e6:	add    BYTE PTR [eax+edx*8],al
  4243e9:	inc    edx
  4243ea:	add    BYTE PTR [eax],cl
  4243ec:	rol    BYTE PTR [edx+0x0],1
  4243ef:	or     al,0xd0
  4243f1:	inc    edx
  4243f2:	add    BYTE PTR [eax],dl
  4243f4:	rol    BYTE PTR [edx+0x0],1
  4243f7:	adc    al,0xd0
  4243f9:	inc    edx
  4243fa:	add    BYTE PTR [eax],bl
  4243fc:	rol    BYTE PTR [edx+0x0],1
  4243ff:	sbb    al,0xd0
  424401:	inc    edx
  424402:	add    BYTE PTR [edi+0x37],al
  424405:	cmp    BYTE PTR [edi+0x4b],bl
  424408:	inc    ecx
  424409:	aaa    
  42440a:	dec    ecx
  42440b:	ss pop edi
  42440d:	xor    BYTE PTR [eax+0x35],dl
  424410:	dec    esi
  424411:	add    BYTE PTR [eax+0x49],cl
  424414:	xor    al,0x5f
  424416:	dec    esp
  424417:	inc    esp
  424418:	dec    esp
  424419:	xor    bl,BYTE PTR [edi+0x35]
  42441c:	dec    eax
  42441d:	xor    BYTE PTR [eax],al
  42441f:	dec    esp
  424420:	inc    ecx
  424421:	xor    al,0x5f
  424423:	dec    ebx
  424424:	pop    edx
  424425:	xor    esi,DWORD PTR [ebx]
  424427:	dec    ebp
  424428:	pop    edi
  424429:	xor    al,0x0
  42442b:	pop    ecx
  42442c:	inc    esi
  42442d:	push   eax
  42442e:	aaa    
  42442f:	xor    DWORD PTR [edx],esi
  424431:	pop    edi
  424432:	cmp    DWORD PTR [eax+eax*1+0x45],ecx
  424436:	xor    eax,0x33595f41
  42443b:	aaa    
  42443c:	push   edx
  42443d:	xor    bl,BYTE PTR [edi+0x4c]
  424440:	pop    edx
  424441:	add    BYTE PTR [edx+0x45],cl
  424444:	push   ebx
  424445:	xor    DWORD PTR [edi+0x43],ebx
  424448:	dec    esp
  424449:	inc    esi
  42444a:	add    BYTE PTR [eax+0x58],bl
  42444d:	xor    eax,0x444e515f
  424452:	xor    eax,0x4300425f
  424457:	inc    ecx
  424458:	dec    ebx
  424459:	cmp    DWORD PTR ds:0x365f3939,esi
  42445f:	xor    al,0x42
  424461:	pop    edi
  424462:	pop    eax
  424463:	push   edi
  424464:	add    BYTE PTR [ebx+0x45],cl
  424467:	cmp    DWORD PTR ss:[edi+0x56],ebx
  42446b:	xor    eax,DWORD PTR [esi+0x4c]
  42446e:	add    BYTE PTR [ebp+0x53],cl
  424471:	dec    edi
  424472:	pop    edi
  424473:	push   ebx
  424474:	inc    ebx
  424475:	xor    al,0x5f
  424477:	inc    ebx
  424478:	push   ebp
  424479:	xor    eax,DWORD PTR [ecx+0x0]
  42447c:	dec    esi
  42447d:	inc    esi
  42447e:	xor    eax,0x494f345f
  424483:	xor    ecx,DWORD PTR [esi+0x5f]
  424486:	push   esp
  424487:	cmp    BYTE PTR [esi+0x0],dl
  42448a:	pop    edx
  42448b:	xor    esi,DWORD PTR [esi]
  42448d:	aaa    
  42448e:	pop    edi
  42448f:	xor    eax,0x5f363437
  424494:	push   edi
  424495:	add    BYTE PTR [ebp+0x4a],cl
  424498:	push   edx
  424499:	pop    edi
  42449a:	xor    DWORD PTR [edx],esi
  42449c:	inc    ebp
  42449d:	inc    edx
  42449e:	ss pop edi
  4244a0:	inc    ecx
  4244a1:	dec    ebx
  4244a2:	add    BYTE PTR [edx+0x54],cl
  4244a5:	dec    edi
  4244a6:	pop    edi
  4244a7:	push   esp
  4244a8:	cmp    BYTE PTR [eax],dh
  4244aa:	inc    edi
  4244ab:	add    BYTE PTR [ecx+esi*1+0x4d],al
  4244af:	pop    edi
  4244b0:	xor    DWORD PTR [ebp+0x57],eax
  4244b3:	pop    edx
  4244b4:	cmp    BYTE PTR ss:[edi+0x38],bl
  4244b8:	inc    ebp
  4244b9:	dec    edi
  4244ba:	add    BYTE PTR [eax+0x53],cl
  4244bd:	xor    DWORD PTR [ecx],edi
  4244bf:	pop    edi
  4244c0:	dec    ebx
  4244c1:	inc    edx
  4244c2:	push   esp
  4244c3:	pop    edi
  4244c4:	push   esi
  4244c5:	add    BYTE PTR [ecx+0x49],al
  4244c8:	dec    edx
  4244c9:	pop    edi
  4244ca:	xor    eax,0x33344d4d
  4244cf:	pop    edi
  4244d0:	push   ecx
  4244d1:	inc    esi
  4244d2:	inc    edi
  4244d3:	dec    edi
  4244d4:	add    BYTE PTR [esi+0x4b],dl
  4244d7:	push   edx
  4244d8:	pop    edi
  4244d9:	inc    ebx
  4244da:	pop    ecx
  4244db:	xor    ebx,DWORD PTR [edi+0x35]
  4244de:	inc    edi
  4244df:	dec    eax
  4244e0:	xor    BYTE PTR [edx+0x0],al
  4244e3:	push   esi
  4244e4:	xor    eax,0x315f3452
  4244e9:	ss inc esp
  4244eb:	xor    eax,0x5956004a
  4244f0:	inc    ecx
  4244f1:	pop    edi
  4244f2:	push   esi
  4244f3:	push   ebp
  4244f4:	inc    ebp
  4244f5:	pop    edi
  4244f6:	xor    BYTE PTR [ecx],dh
  4244f8:	add    BYTE PTR [edi+0x58],al
  4244fb:	dec    edx
  4244fc:	pop    edi
  4244fd:	inc    edi
  4244fe:	inc    esi
  4244ff:	push   esi
  424500:	dec    esp
  424501:	push   edi
  424502:	add    BYTE PTR [edi+0x35],al
  424505:	dec    ebx
  424506:	pop    edi
  424507:	ss dec ebx
  424509:	xor    esi,DWORD PTR ds:0x33005600
  42450f:	add    BYTE PTR [edi+0x0],dl
  424512:	xor    eax,0x5f003600
  424517:	add    BYTE PTR [ecx+0x0],bl
  42451a:	dec    eax
  42451b:	add    BYTE PTR [ecx+0x0],bl
  42451e:	inc    ebp
  42451f:	add    BYTE PTR [eax+0x0],cl
  424522:	add    BYTE PTR [eax],al
  424524:	push   eax
  424525:	add    BYTE PTR [eax],dh
  424527:	add    BYTE PTR [ecx+0x0],bl
  42452a:	pop    edi
  42452b:	add    BYTE PTR [ecx+0x0],bl
  42452e:	xor    al,BYTE PTR [eax]
  424530:	dec    edi
  424531:	add    BYTE PTR [ebx],dh
  424533:	add    BYTE PTR [edi+0x0],dl
  424536:	pop    edi
  424537:	add    BYTE PTR [eax+eax*1+0x4f],al
  42453b:	add    BYTE PTR [ebx+0x0],dl
  42453e:	add    BYTE PTR [eax],al
  424540:	dec    ebp
  424541:	add    BYTE PTR [esi+0x0],dl
  424544:	push   esp
  424545:	add    BYTE PTR [edi+0x0],bl
  424548:	inc    edx
  424549:	add    BYTE PTR [edx+0x0],dl
  42454c:	xor    al,0x0
  42454e:	pop    edi
  42454f:	add    BYTE PTR [ecx+0x0],al
  424552:	push   esp
  424553:	add    BYTE PTR [edx+0x0],dl
  424556:	pop    edi
  424557:	add    BYTE PTR [edi+0x0],cl
  42455a:	xor    eax,DWORD PTR [eax]
  42455c:	inc    edx
  42455d:	add    BYTE PTR [eax],al
  42455f:	add    BYTE PTR [esi+0x0],cl
  424562:	cmp    BYTE PTR [eax],al
  424564:	push   eax
  424565:	add    BYTE PTR [eax],dh
  424567:	add    BYTE PTR [edi+0x0],bl
  42456a:	push   edx
  42456b:	add    BYTE PTR [edi+0x0],al
  42456e:	inc    edx
  42456f:	add    BYTE PTR [eax],bh
  424571:	add    BYTE PTR [eax+eax*1],dh
  424574:	pop    edi
  424575:	add    BYTE PTR [edi+0x0],cl
  424578:	push   eax
  424579:	add    BYTE PTR [esi],dh
  42457b:	add    BYTE PTR [eax],al
  42457d:	add    BYTE PTR [edx+0x0],bl
  424580:	pop    eax
  424581:	add    BYTE PTR [ecx],dh
  424583:	add    BYTE PTR [eax],bh
  424585:	add    BYTE PTR [edi+0x0],bl
  424588:	push   edi
  424589:	add    BYTE PTR [edx+0x0],dl
  42458c:	dec    ebx
  42458d:	add    BYTE PTR [edi+0x0],bl
  424590:	inc    esp
  424591:	add    BYTE PTR [esi],dh
  424593:	add    BYTE PTR [ecx],bh
  424595:	add    BYTE PTR [esi],dh
  424597:	add    BYTE PTR [esi+0x0],dl
  42459a:	add    BYTE PTR [eax],al
  42459c:	push   ebp
  42459d:	add    BYTE PTR [eax],dh
  42459f:	add    BYTE PTR [eax+eax*1+0x5f],al
  4245a3:	add    BYTE PTR [edx+0x0],dl
  4245a6:	dec    ecx
  4245a7:	add    BYTE PTR [edi+0x0],cl
  4245aa:	xor    eax,DWORD PTR [eax]
  4245ac:	xor    eax,0x34005f00
  4245b1:	add    BYTE PTR [edi+0x0],cl
  4245b4:	pop    ecx
  4245b5:	add    BYTE PTR [eax],al
  4245b7:	add    BYTE PTR [eax+eax*1+0x31],cl
  4245bb:	add    BYTE PTR [esi+0x0],al
  4245be:	pop    edi
  4245bf:	add    BYTE PTR [ebp+0x0],cl
  4245c2:	dec    ebp
  4245c3:	add    BYTE PTR [eax],bh
  4245c5:	add    BYTE PTR [esi],dh
  4245c7:	add    BYTE PTR [edx+0x0],al
  4245ca:	dec    esp
  4245cb:	add    BYTE PTR [eax],al
  4245cd:	add    BYTE PTR [edx+0x0],al
  4245d0:	xor    eax,0x5f003500
  4245d5:	add    BYTE PTR [eax+0x0],bl
  4245d8:	inc    esp
  4245d9:	add    BYTE PTR [edi+0x0],cl
  4245dc:	inc    ecx
  4245dd:	add    BYTE PTR [eax+eax*1],dh
  4245e0:	add    BYTE PTR [eax],al
  4245e2:	push   ecx
  4245e3:	add    BYTE PTR [eax],bh
  4245e5:	add    BYTE PTR [ecx+0x0],dl
  4245e8:	pop    edi
  4245e9:	add    BYTE PTR [eax+eax*1+0x31],dl
  4245ed:	add    BYTE PTR [ecx],dh
  4245ef:	add    BYTE PTR [eax],bh
  4245f1:	add    BYTE PTR [edi+0x0],bl
  4245f4:	aaa    
  4245f5:	add    BYTE PTR [edx+0x0],al
  4245f8:	add    BYTE PTR [eax],al
  4245fa:	push   edx
  4245fb:	add    BYTE PTR [ecx],bh
  4245fd:	add    BYTE PTR [esi+0x0],dl
  424600:	pop    edi
  424601:	add    BYTE PTR [eax+eax*1],dh
  424604:	push   edx
  424605:	add    BYTE PTR [ecx+0x0],bl
  424608:	pop    edi
  424609:	add    BYTE PTR [eax],bh
  42460b:	add    BYTE PTR [eax],dh
  42460d:	add    BYTE PTR [edx+0x0],bl
  424610:	add    BYTE PTR [eax],al
  424612:	add    BYTE PTR [eax],al
  424614:	nop
  424615:	inc    edx
  424616:	add    BYTE PTR [eax+edx*4],al
  424619:	inc    edx
  42461a:	add    BYTE PTR [eax],cl
  42461c:	nop
  42461d:	inc    edx
  42461e:	add    BYTE PTR [eax+edx*4],cl
  424621:	inc    edx
  424622:	add    BYTE PTR [eax],dl
  424624:	nop
  424625:	inc    edx
  424626:	add    BYTE PTR [eax+edx*4],dl
  424629:	inc    edx
  42462a:	add    BYTE PTR [eax],bl
  42462c:	nop
  42462d:	inc    edx
  42462e:	add    BYTE PTR [eax+edx*4],bl
  424631:	inc    edx
  424632:	add    BYTE PTR [eax],ah
  424634:	nop
  424635:	inc    edx
  424636:	add    BYTE PTR [eax+edx*4],ah
  424639:	inc    edx
  42463a:	add    BYTE PTR [eax],ch
  42463c:	nop
  42463d:	inc    edx
	...
