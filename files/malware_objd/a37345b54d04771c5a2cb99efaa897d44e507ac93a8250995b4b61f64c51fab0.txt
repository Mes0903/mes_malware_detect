
a37345b54d04771c5a2cb99efaa897d44e507ac93a8250995b4b61f64c51fab0.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x24
  401006:	push   ebx
  401007:	push   esi
  401008:	push   edi
  401009:	lea    eax,[ebp-0x24]
  40100c:	push   eax
  40100d:	call   DWORD PTR ds:0x418060
  401013:	lea    eax,[ebp-0x24]
  401016:	push   eax
  401017:	call   DWORD PTR ds:0x418034
  40101d:	lea    eax,[ebp-0x8]
  401020:	push   eax
  401021:	push   0x1
  401023:	call   DWORD PTR ds:0x4180c4
  401029:	xor    esi,esi
  40102b:	push   esi
  40102c:	push   0x1
  40102e:	push   esi
  40102f:	call   DWORD PTR ds:0x418088
  401035:	mov    eax,DWORD PTR [ebp-0x8]
  401038:	mov    ecx,DWORD PTR [eax]
  40103a:	lea    edx,[ebp-0xc]
  40103d:	push   edx
  40103e:	push   0x4181e0
  401043:	push   eax
  401044:	call   DWORD PTR [ecx]
  401046:	mov    ds:0x4194b8,eax
  40104b:	mov    eax,DWORD PTR [ebp+0xc]
  40104e:	mov    ecx,eax
  401050:	shr    ecx,1
  401052:	push   0x3
  401054:	lea    ebx,[ecx+eax*2]
  401057:	pop    edi
  401058:	mov    DWORD PTR [ebp-0x4],edi
  40105b:	test   ebx,ebx
  40105d:	je     0x4010a2
  40105f:	mov    eax,DWORD PTR [ebp+0x8]
  401062:	mov    eax,DWORD PTR [eax+esi*4]
  401065:	sub    eax,DWORD PTR ds:0x4194b8
  40106b:	mov    ecx,DWORD PTR [ebp+0x10]
  40106e:	push   0x1
  401070:	push   0xf6
  401075:	add    eax,0x718b102e
  40107a:	push   0x0
  40107c:	mov    DWORD PTR [ecx],eax
  40107e:	call   DWORD PTR ds:0x418098
  401084:	add    DWORD PTR [ebp+0x10],0x4
  401088:	call   DWORD PTR ds:0x41804c
  40108e:	xor    eax,eax
  401090:	cmp    DWORD PTR [ebp-0x4],edi
  401093:	setne  al
  401096:	add    eax,0x2
  401099:	add    esi,eax
  40109b:	mov    DWORD PTR [ebp-0x4],eax
  40109e:	cmp    esi,ebx
  4010a0:	jb     0x40105f
  4010a2:	mov    esi,DWORD PTR [ebp+0x14]
  4010a5:	mov    DWORD PTR [ebp-0x4],edi
  4010a8:	xor    ebx,ebx
  4010aa:	push   edi
  4010ab:	push   0x0
  4010ad:	call   DWORD PTR ds:0x4180b0
  4010b3:	mov    eax,ds:0x419414
  4010b8:	mov    eax,DWORD PTR [eax+ebx*4]
  4010bb:	mov    ecx,DWORD PTR ds:0x4194b8
  4010c1:	lea    eax,[eax+ecx*1+0x78a7389e]
  4010c8:	mov    DWORD PTR [esi],eax
  4010ca:	xor    eax,eax
  4010cc:	add    esi,0x4
  4010cf:	cmp    DWORD PTR [ebp-0x4],edi
  4010d2:	setne  al
  4010d5:	add    eax,0x2
  4010d8:	add    ebx,eax
  4010da:	mov    DWORD PTR [ebp-0x4],eax
  4010dd:	cmp    ebx,0xcd
  4010e3:	jb     0x4010aa
  4010e5:	call   DWORD PTR ds:0x418054
  4010eb:	mov    eax,0x970c6fda
  4010f0:	sub    eax,DWORD PTR ds:0x4194b8
  4010f6:	lea    ebx,[esi+0x8]
  4010f9:	mov    DWORD PTR [esi],eax
  4010fb:	mov    eax,0x3fcd1a15
  401100:	sub    eax,DWORD PTR ds:0x4194b8
  401106:	mov    DWORD PTR [esi+0x4],eax
  401109:	mov    eax,ds:0x419040
  40110e:	mov    esi,DWORD PTR ds:0x41803c
  401114:	mov    ds:0x41906c,eax
  401119:	call   esi
  40111b:	and    DWORD PTR [ebp+0xc],0x0
  40111f:	mov    DWORD PTR [ebp-0x4],edi
  401122:	push   0xfffffff8
  401124:	push   0xff85
  401129:	call   DWORD PTR ds:0x418094
  40112f:	mov    ecx,DWORD PTR [ebp+0xc]
  401132:	mov    eax,ds:0x419434
  401137:	mov    eax,DWORD PTR [eax+ecx*4]
  40113a:	mov    ecx,DWORD PTR ds:0x4194b8
  401140:	lea    eax,[eax+ecx*1+0x4ecdcb5f]
  401147:	mov    DWORD PTR [ebx],eax
  401149:	xor    eax,eax
  40114b:	add    ebx,0x4
  40114e:	cmp    DWORD PTR [ebp-0x4],edi
  401151:	setne  al
  401154:	add    eax,0x2
  401157:	add    DWORD PTR [ebp+0xc],eax
  40115a:	cmp    DWORD PTR [ebp+0xc],0xeb
  401161:	mov    DWORD PTR [ebp-0x4],eax
  401164:	jb     0x401122
  401166:	mov    eax,ds:0x419200
  40116b:	and    DWORD PTR [ebp+0xc],0x0
  40116f:	mov    ds:0x419238,eax
  401174:	mov    eax,DWORD PTR [ebp+0x18]
  401177:	mov    ecx,eax
  401179:	shr    ecx,1
  40117b:	lea    eax,[ecx+eax*2]
  40117e:	mov    DWORD PTR [ebp-0x4],edi
  401181:	mov    DWORD PTR [ebp+0x14],eax
  401184:	test   eax,eax
  401186:	je     0x4011c5
  401188:	mov    eax,ds:0x4193a8
  40118d:	mov    ecx,DWORD PTR [ebp+0xc]
  401190:	mov    eax,DWORD PTR [eax+ecx*4]
  401193:	mov    ecx,DWORD PTR ds:0x4194b8
  401199:	lea    eax,[eax+ecx*1-0x50618c5]
  4011a0:	mov    DWORD PTR [ebx],eax
  4011a2:	call   esi
  4011a4:	add    ebx,0x4
  4011a7:	call   esi
  4011a9:	xor    eax,eax
  4011ab:	cmp    DWORD PTR [ebp-0x4],edi
  4011ae:	setne  al
  4011b1:	add    eax,0x2
  4011b4:	mov    DWORD PTR [ebp-0x4],eax
  4011b7:	mov    eax,DWORD PTR [ebp+0xc]
  4011ba:	add    eax,DWORD PTR [ebp-0x4]
  4011bd:	mov    DWORD PTR [ebp+0xc],eax
  4011c0:	cmp    eax,DWORD PTR [ebp+0x14]
  4011c3:	jb     0x401188
  4011c5:	mov    eax,0x3a59376d
  4011ca:	sub    eax,DWORD PTR ds:0x4194b8
  4011d0:	mov    DWORD PTR [ebp-0x4],edi
  4011d3:	mov    DWORD PTR [ebx],eax
  4011d5:	add    ebx,0x4
  4011d8:	xor    esi,esi
  4011da:	mov    eax,DWORD PTR [ebp+0x1c]
  4011dd:	mov    eax,DWORD PTR [eax+esi*4]
  4011e0:	mov    ecx,DWORD PTR ds:0x4194b8
  4011e6:	lea    eax,[eax+ecx*1+0x1cfb8b53]
  4011ed:	push   0x418164
  4011f2:	mov    DWORD PTR [ebx],eax
  4011f4:	push   0x0
  4011f6:	add    ebx,0x4
  4011f9:	call   DWORD PTR ds:0x418070
  4011ff:	xor    eax,eax
  401201:	cmp    DWORD PTR [ebp-0x4],edi
  401204:	setne  al
  401207:	add    eax,0x2
  40120a:	add    esi,eax
  40120c:	mov    DWORD PTR [ebp-0x4],eax
  40120f:	cmp    esi,0xf0
  401215:	jb     0x4011da
  401217:	lea    eax,[ebp-0x24]
  40121a:	push   eax
  40121b:	call   DWORD PTR ds:0x418040
  401221:	lea    eax,[ebp-0x24]
  401224:	push   eax
  401225:	call   DWORD PTR ds:0x418044
  40122b:	pop    edi
  40122c:	pop    esi
  40122d:	pop    ebx
  40122e:	leave  
  40122f:	ret    
  401230:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401231:	inc    ecx
  401232:	inc    edx
  401233:	jns    0x40128a
  401235:	add    BYTE PTR [eax],al
  401237:	add    BYTE PTR [esi-0x66],bh
  40123a:	xor    DWORD PTR [edi],esp
  40123c:	push   0xffffffcc
  40123e:	add    BYTE PTR [ebx+0xff0f00],al
  401244:	add    al,dh
  401246:	adc    bl,BYTE PTR [esp+ecx*8-0x100]
  40124d:	(bad)
  401250:	add    DWORD PTR [ebp+0x4d],esi
  401253:	pop    ebp
  401254:	(bad)  
  401255:	fld    QWORD PTR [eax]
  401257:	(bad)  
  401259:	dec    ecx
  40125a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40125b:	dec    ebx
  40125c:	mov    ecx,esp
  40125e:	add    BYTE PTR [eax],dl
  401260:	imul   esp
  401262:	adc    cl,BYTE PTR [edi+eax*8-0x1]
  401266:	mov    edx,DWORD PTR ds:0x898b5d8b
  40126c:	repz mov ecx,0x458b3099
  401272:	(bad)  
  401273:	adc    BYTE PTR [edi-0x3370e8fe],dh
  401279:	mov    ebx,ebp
  40127b:	add    BYTE PTR [ebx-0xe000000],cl
  401281:	(bad)  
  401282:	and    DWORD PTR [ebx+0x45],esi
  401285:	rol    BYTE PTR [eax],0x75
  401288:	xor    DWORD PTR [eax+0xf08f1bc],ecx
  40128e:	mov    DWORD PTR [eax],eax
  401290:	add    BYTE PTR [eax+eax*1],cl
  401293:	or     BYTE PTR [edi+0x55],dl
  401296:	xchg   ebp,eax
  401297:	xor    DWORD PTR [ebp+0x74],ecx
  40129a:	add    BYTE PTR [ebx+0x7c966734],cl
  4012a0:	mov    DWORD PTR [esi-0x73],eax
  4012a3:	call   FWORD PTR [ebp+0x0]
  4012a6:	add    BYTE PTR [ebx-0x20a6a48f],cl
  4012ac:	push   eax
  4012ad:	add    ah,cl
  4012af:	add    BYTE PTR [eax-0x44],bh
  4012b2:	add    bl,BYTE PTR [ebp-0x75]
  4012b5:	add    al,0x85
  4012b7:	int3   
  4012b8:	add    BYTE PTR [edi],cl
  4012ba:	add    BYTE PTR [ebx-0x2e0a3188],cl
  4012c0:	inc    DWORD PTR [ebp-0x146dcd00]
  4012c6:	es ds int3 
  4012c9:	mov    DWORD PTR [ebx-0x7ca9a300],ecx
  4012cf:	int3   
  4012d0:	out    dx,eax
  4012d1:	dec    esp
  4012d2:	dec    esi
  4012d3:	dec    esp
  4012d5:	or     ah,cl
  4012d7:	push   esi
  4012d8:	cld    
  4012d9:	call   0xff:0x175ced4
  4012e0:	add    BYTE PTR [esi-0x1],al
  4012e3:	add    bh,bh
  4012e5:	sub    edx,DWORD PTR [ebx+0xc0cffba]
  4012eb:	(bad)  [ebx]
  4012ed:	test   DWORD PTR [edx+eax*4],ecx
  4012f0:	int3   
  4012f1:	adc    eax,0x10050
  4012f6:	add    ah,cl
  4012f8:	mov    ds:0x2fefc6,al
  4012fd:	add    BYTE PTR [ecx+0x45418500],cl
  401303:	mov    eax,0x750001
  401308:	add    ecx,esp
  40130a:	in     al,dx
  40130b:	push   ebp
  40130c:	lods   al,BYTE PTR ds:[esi]
  40130d:	dec    ebx
  40130e:	(bad)  
  40130f:	xor    al,BYTE PTR [eax]
  401311:	dec    esp
  401313:	add    ebp,edi
  401315:	sub    al,0xca
  401317:	push   es
  401318:	dec    DWORD PTR [ebp+0x0]
  40131b:	int3   
  40131c:	inc    DWORD PTR [ecx]
  40131e:	push   eax
  40131f:	add    BYTE PTR [edi-0x45],bh
  401322:	sub    BYTE PTR [ecx],al
  401324:	push   ebp
  401325:	mov    eax,DWORD PTR [ebp-0x39]
  401328:	js     0x40136d
  40132a:	fs das 
  40132c:	add    DWORD PTR [eax],eax
  40132e:	je     0x401385
  401330:	int3   
  401331:	add    DWORD PTR [ebp+0x216b8904],eax
  401337:	out    0x45,al
  401339:	dec    ebp
  40133a:	int3   
  40133b:	add    BYTE PTR [edx+0x4d29927e],cl
  401341:	add    BYTE PTR [ecx+0xf008b55],cl
  401347:	mov    edi,DWORD PTR [ebx+0x1b]
  40134a:	lea    edi,[ecx-0x7a7cff7d]
  401350:	(bad)  
  401351:	jge    0x401302
  401353:	sbb    BYTE PTR [ebx-0x33eff375],cl
  401359:	add    edi,edi
  40135b:	jne    0x4013d3
  40135d:	xor    al,0x10
  40135f:	add    cl,ah
  401361:	int3   
  401362:	or     DWORD PTR [ebx+0x3233cead],0x0
  401369:	add    ah,cl
  40136b:	add    BYTE PTR [eax],al
  40136d:	add    eax,DWORD PTR [eax]
  40136f:	adc    bh,dh
  401371:	xor    eax,0x4600950d
  401376:	call   0x25488ecb
  40137b:	jp     0x401392
  40137d:	jne    0x40137f
  40137f:	add    BYTE PTR [ecx],al
  401381:	add    bh,bh
  401383:	call   DWORD PTR [edx-0x7b]
  401386:	shr    BYTE PTR [eax],1
  401388:	inc    DWORD PTR [eax]
  40138a:	dec    DWORD PTR [ebx-0x2018b181]
  401390:	mov    ecx,DWORD PTR [ebx+0xc0100eb]
  401396:	mov    ecx,DWORD PTR [ecx+0x48fec687]
  40139c:	dec    esp
  40139e:	inc    DWORD PTR [eax]
  4013a0:	test   BYTE PTR [eax],dh
  4013a2:	push   cs
  4013a3:	test   eax,0xcc8b04e0
  4013a8:	add    al,ch
  4013aa:	push   esi
  4013ab:	int3   
  4013ac:	mov    DWORD PTR [esi+0x48b08dc],esi
  4013b2:	add    al,ch
  4013b4:	lahf   
  4013b5:	sbb    eax,esi
  4013b7:	mov    ecx,DWORD PTR ss:[ebx-0x74afffbb]
  4013be:	add    BYTE PTR [eax],al
  4013c0:	scas   al,BYTE PTR es:[edi]
  4013c1:	push   eax
  4013c2:	cmp    al,0x69
  4013c4:	inc    ebp
  4013c5:	call   DWORD PTR [eax+0x1]
  4013c8:	fmul   DWORD PTR [esi+0x800efec]
  4013ce:	add    BYTE PTR [ebp-0x73],bl
  4013d1:	int3   
  4013d2:	sldt   ebx
  4013d5:	dec    edi
  4013d6:	pop    DWORD PTR [ebp+eax*2-0x4bb97275]
  4013dd:	lds    ebp,FWORD PTR [edi+eax*1+0x10]
  4013e4:	inc    ebp
  4013e5:	mov    ecx,DWORD PTR [ebx+0xe279600]
  4013eb:	push   ebx
  4013ec:	adc    BYTE PTR [eax],al
  4013ee:	int3   
  4013ef:	shr    cl,0x87
  4013f2:	ret    
  4013f3:	xlat   BYTE PTR ds:[ebx]
  4013f4:	mov    ecx,DWORD PTR [ebx+0x5601]
  4013fa:	(bad)  
  4013fb:	shl    BYTE PTR [ebp+0x35],0x46
  4013ff:	mov    edi,0x6ac08b
  401404:	icebp  
  401405:	jnp    0x401418
  401407:	pop    esi
  401408:	add    DWORD PTR [esi-0x34],0x0
  40140c:	int3   
  40140d:	int3   
  40140e:	add    DWORD PTR [eax],eax
  401410:	ret    0x8a51
  401413:	icebp  
  401414:	(bad)  
  401415:	fld    QWORD PTR [ebp-0x15]
  401418:	iret   
  401419:	jbe    0x401444
  40141b:	imul   eax,DWORD PTR [eax],0xce8ff00
  401421:	jmp    0x401423
  401423:	add    dl,al
  401425:	xor    ebp,DWORD PTR [eax]
  401427:	mov    edx,0x85e046cc
  40142c:	ja     0x4013fc
  40142e:	adc    ebx,DWORD PTR [edi-0x34]
  401431:	je     0x4013be
  401433:	fisttp QWORD PTR [ebx-0x591fff00]
  401439:	xchg   DWORD PTR [edi],esp
  40143b:	imul   ecx,DWORD PTR [ebx-0x69ffa220],0x740c5a24
  401445:	push   esi
  401446:	add    esp,ecx
  401448:	push   ebp
  401449:	add    BYTE PTR [eax],al
  40144b:	add    dl,al
  40144d:	mov    eax,ds:0x8bebc0e2
  401452:	add    BYTE PTR [esi-0x34],al
  401455:	push   ecx
  401456:	fisub  WORD PTR [ebx-0x33ba0039]
  40145c:	add    BYTE PTR [ebp+0xf],dh
  40145f:	int3   
  401460:	jmp    0x4c03d60
  401465:	inc    ebp
  401466:	add    BYTE PTR [ebx-0x5ec67629],cl
  40146c:	rol    BYTE PTR [ecx],0xdd
  40146f:	call   DWORD PTR ds:0xce0033dd
  401475:	repnz popf 
  401477:	rol    BYTE PTR [ebp+0x6900ccec],0xd7
  40147e:	adc    ebx,DWORD PTR [ecx]
  401480:	int3   
  401481:	xadd   BYTE PTR [ecx+eax*1],cl
  401485:	jmp    0x401487
  401487:	or     al,0xdf
  401489:	repz sbb eax,0x338b64
  40148f:	inc    edx
  401491:	out    dx,al
  401492:	imul   edx,DWORD PTR [edi],0xffffffcc
  401495:	int3   
  401496:	add    al,0x0
  401498:	add    ah,cl
  40149a:	lea    eax,[ecx]
  40149c:	dec    esi
  40149d:	push   edx
  40149e:	pop    es
  40149f:	mov    ecx,0xc78bffc0
  4014a4:	mov    bh,0x85
  4014a6:	push   0x31
  4014a8:	test   DWORD PTR [ebp-0x34],ecx
  4014ab:	ror    BYTE PTR [ebx+0x7875c056],0xdf
  4014b2:	jmp    0x238b:0xcc8b000f
  4014b9:	jbe    0x4014cf
  4014bb:	pop    es
  4014bc:	mov    edx,DWORD PTR [ebp+0xc]
  4014bf:	dec    DWORD PTR [ebx+0x7a00cc01]
  4014c5:	mov    DWORD PTR [edx+0x4],0x8d014600
  4014cc:	ja     0x40151f
  4014ce:	fcmove st,st(3)
  4014d0:	add    BYTE PTR [eax],al
  4014d2:	add    BYTE PTR [ecx+0x8b0cff],cl
  4014d8:	push   esi
  4014d9:	jbe    0x401545
  4014db:	sbb    al,0xe8
  4014dd:	add    BYTE PTR [eax],al
  4014df:	push   esi
  4014e0:	mov    cl,BYTE PTR [esi+0x22]
  4014e3:	inc    ecx
  4014e4:	add    ah,cl
  4014e6:	or     BYTE PTR [ebx+0x75e0],cl
  4014ec:	mov    eax,ds:0xffd819fb
  4014f1:	int3   
  4014f2:	inc    edi
  4014f4:	and    DWORD PTR [eax+0x2d],ebx
  4014f7:	push   edx
  4014f8:	inc    ebp
  4014f9:	mov    eax,DWORD PTR [ecx]
  4014fb:	dec    DWORD PTR [esp+ecx*1]
  4014fe:	int3   
  4014ff:	or     al,0x13
  401501:	scas   eax,DWORD PTR es:[edi]
  401502:	pop    ebp
  401503:	aas    
  401504:	rcl    BYTE PTR [eax],0x1
  401507:	add    BYTE PTR [ebx+0xf90981],bh
  40150d:	mov    eax,DWORD PTR [eax]
  40150f:	inc    esi
  401510:	inc    DWORD PTR [ecx]
  401512:	call   0x226e4518
  401517:	jg     0x40155e
  401519:	lea    ecx,[esp+ecx*1]
  40151c:	jo     0x4014a4
  40151e:	stos   BYTE PTR es:[edi],al
  40151f:	dec    esp
  401521:	call   0x103f156b
  401526:	adc    eax,0x11617f04
  40152b:	jg     0x401597
  40152d:	test   DWORD PTR [ebx],esi
  40152f:	cmp    eax,0x10
  401532:	(bad)  
  401533:	std    
  401534:	int3   
  401535:	int3   
  401536:	inc    ebp
  401537:	add    edi,edi
  401539:	inc    DWORD PTR [edx*1-0x6af0a93d]
  401540:	fimul  DWORD PTR [ebp+0x8]
  401543:	add    BYTE PTR [ebx+0x78f7667],cl
  401549:	add    BYTE PTR [ebp-0x1],dh
  40154c:	je     0x4014d9
  40154e:	mov    ecx,DWORD PTR [edi]
  401550:	int3   
  401551:	mov    eax,ds:0xccece3f3
  401556:	mov    eax,DWORD PTR [eax]
  401558:	mov    ebx,esp
  40155a:	enter  0xf977,0x0
  40155e:	mov    ecx,DWORD PTR [ebx+0x4545dd01]
  401564:	int3   
  401565:	mov    WORD PTR [ebx],ss
  401567:	retf   
  401568:	scas   eax,DWORD PTR es:[edi]
  401569:	mov    ecx,esp
  40156b:	add    BYTE PTR [eax],al
  40156d:	xchg   edi,eax
  40156e:	outs   dx,DWORD PTR ds:[esi]
  40156f:	ins    WORD PTR es:[edi],dx
  401571:	add    al,ch
  401573:	add    bh,bh
  401575:	jne    0x40155f
  401577:	add    BYTE PTR [ecx],al
  401579:	fwait
  40157a:	sub    al,0x2d
  40157c:	mov    al,0xcc
  40157e:	add    DWORD PTR [ebx+ecx*4+0x5e],esi
  401582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401583:	add    ecx,DWORD PTR [ebx-0x34]
  401586:	adc    bh,bh
  401588:	rol    al,0xff
  40158b:	add    DWORD PTR [eax],eax
  40158d:	jecxz  0x4015dd
  40158f:	cmp    ah,BYTE PTR [eax+eax*1+0x15]
  401593:	or     BYTE PTR [eax],al
  401595:	dec    esi
  401596:	shr    ebp,cl
  401598:	(bad)  [ebx-0x7abaeb00]
  40159e:	jmp    0x4015f5
  4015a0:	add    DWORD PTR [ebx+ebx*4-0x66],edx
  4015a4:	lods   eax,DWORD PTR ds:[esi]
  4015a5:	je     0x4015a7
  4015a7:	add    esp,ecx
  4015a9:	repnz sub BYTE PTR [edx],0x6f
  4015ad:	add    BYTE PTR [eax],al
  4015af:	jge    0x4016b4
  4015b5:	xchg   ebp,eax
  4015b6:	fucomp st(4)
  4015b8:	adc    eax,0x838bec08
  4015bd:	and    dh,ch
  4015bf:	push   ss
  4015c0:	loope  0x4015c3
  4015c2:	add    al,0xcc
  4015c4:	test   eax,eax
  4015c6:	add    BYTE PTR [eax],al
  4015c8:	mov    esp,ebp
  4015ca:	loopne 0x40161c
  4015cc:	outs   dx,DWORD PTR ds:[esi]
  4015cd:	int3   
  4015ce:	mov    esi,DWORD PTR [eax+ecx*1-0x26]
  4015d2:	int    0x59
  4015d4:	jnp    0x4015a2
  4015d6:	test   edi,edi
  4015d8:	pop    ebp
  4015d9:	mov    ecx,DWORD PTR [edi]
  4015db:	int3   
  4015dc:	add    DWORD PTR [eax],edx
  4015de:	test   eax,0x4ccadf9
  4015e3:	int3   
  4015e4:	int3   
  4015e5:	mov    BYTE PTR [edx],0x6
  4015e8:	unpckhps xmm1,xmm4
  4015eb:	add    ch,bl
  4015ed:	add    bh,bh
  4015ef:	pop    ebp
  4015f0:	or     BYTE PTR [ecx],ah
  4015f2:	test   eax,0x8d0087f9
  4015f7:	add    BYTE PTR [eax],al
  4015f9:	arpl   WORD PTR [edx-0x36],si
  4015fc:	rcl    BYTE PTR [ebp-0x75],1
  4015ff:	push   ebp
  401600:	(bad)  
  401601:	dec    esp
  401603:	add    BYTE PTR [ebx+0x78b26335],cl
  401609:	add    bl,ch
  40160b:	int3   
  40160c:	add    cl,bl
  40160e:	cwde   
  40160f:	aas    
  401610:	iret   
  401611:	add    DWORD PTR [eax],eax
  401613:	dec    ebp
  401614:	in     al,dx
  401615:	add    ah,cl
  401617:	add    al,0xe0
  401619:	in     eax,dx
  40161a:	add    eax,ebp
  40161c:	add    cl,ah
  40161e:	test   DWORD PTR [eax],eax
  401620:	add    BYTE PTR [eax],ah
  401622:	loop   0x4015b6
  401624:	std    
  401625:	mov    esp,ecx
  401627:	int3   
  401628:	inc    DWORD PTR [eax]
  40162a:	dec    ebp
  40162b:	adc    BYTE PTR [eax],al
  40162d:	js     0x401633
  40162f:	add    bl,BYTE PTR [eax+0x5d74ff74]
  401635:	sub    eax,0xad59fb
  40163a:	add    al,0x0
  40163c:	add    bh,bh
  40163e:	add    BYTE PTR [eax],al
  401640:	add    BYTE PTR [ebx+0x72],ch
  401643:	daa    
  401644:	stos   BYTE PTR es:[edi],al
  401645:	lea    eax,[ebx]
  401647:	ror    BYTE PTR [ebx-0x8de6447],0x0
  40164e:	int3   
  40164f:	inc    ebp
  401650:	inc    ebp
  401651:	mov    DWORD PTR [ebx-0xeeb7675],ecx
  401657:	cld    
  401658:	mov    eax,ds:0xffcc8b
  40165d:	inc    eax
  40165e:	neg    DWORD PTR [esi]
  401660:	iret   
  401661:	push   eax
  401662:	mov    ecx,DWORD PTR [eax]
  401664:	inc    ebp
  401665:	mov    eax,eax
  401667:	add    BYTE PTR [ebp+0x69f3aa58],cl
  40166d:	inc    ebp
  40166e:	dec    DWORD PTR [edi]
  401670:	mov    edx,DWORD PTR [edi]
  401672:	test   eax,0x8b10bda6
  401677:	call   0x13f8b67
  40167c:	mov    ecx,DWORD PTR [ebx]
  40167e:	shl    bl,1
  401680:	scas   eax,DWORD PTR es:[edi]
  401681:	add    BYTE PTR [eax],al
  401683:	inc    DWORD PTR [eax]
  401685:	sub    BYTE PTR fs:[eax],bh
  401688:	out    0x0,eax
  40168a:	inc    esi
  40168b:	pop    ebp
  40168c:	ror    BYTE PTR [edi+edi*8],0x89
  401690:	inc    DWORD PTR [eax-0x36]
  401693:	and    dl,cl
  401695:	int3   
  401696:	inc    ebp
  401697:	push   eax
  401698:	add    cl,dl
  40169a:	inc    esi
  40169b:	inc    esp
  40169c:	mov    bh,0x33
  40169e:	add    BYTE PTR [eax],al
  4016a0:	add    al,0x0
  4016a2:	je     0x4016a4
  4016a4:	adc    eax,0x2f390736
  4016a9:	add    BYTE PTR [ecx-0x33bc8a75],cl
  4016af:	clc    
  4016b0:	test   DWORD PTR [ebp+0x30000cc],eax
  4016b6:	or     BYTE PTR [eax],al
  4016b8:	add    BYTE PTR [esi+esi*1+0x11],al
  4016bc:	mov    cl,0x0
  4016be:	add    BYTE PTR [ecx+0x5b68c156],cl
  4016c4:	push   eax
  4016c5:	add    BYTE PTR [eax],al
  4016c7:	add    BYTE PTR [ebp+0x5d74080c],al
  4016cd:	fiadd  DWORD PTR [edx-0x34]
  4016d0:	dec    esp
  4016d1:	add    BYTE PTR [eax],al
  4016d3:	add    al,ah
  4016d5:	xor    DWORD PTR [eax-0x7433cc68],0xffffffcc
  4016dc:	mov    eax,DWORD PTR [eax]
  4016de:	add    bh,bh
  4016e0:	add    BYTE PTR [ecx+0x30],dl
  4016e3:	stos   BYTE PTR es:[edi],al
  4016e4:	inc    ebx
  4016e5:	jne    0x4016b3
  4016e7:	mov    DWORD PTR [esi-0x3f],eax
  4016ea:	mov    dh,0x6b
  4016ec:	sub    al,BYTE PTR [esi+0x45]
  4016ef:	or     BYTE PTR [ebx+0x4748b55],cl
  4016f5:	jnp    0x4016a8
  4016f7:	shl    DWORD PTR [ecx+0x458b0008],cl
  4016fd:	rcl    bh,1
  4016ff:	(bad)  
  401701:	mov    eax,DWORD PTR [eax]
  401703:	or     BYTE PTR [esi-0x75],al
  401706:	add    BYTE PTR [ecx+eax*1-0x67],dh
  40170a:	adc    eax,0x5ddd9562
  40170f:	add    ah,cl
  401711:	jecxz  0x4016dd
  401713:	ins    DWORD PTR es:[edi],dx
  401714:	jae    0x4016e2
  401716:	mov    ecx,DWORD PTR [ebp-0x75]
  401719:	int3   
  40171a:	jne    0x40176c
  40171c:	add    dh,cl
  40171e:	stc    
  40171f:	(bad)  
  401720:	mov    ds:0x3300cc00,al
  401725:	cmp    al,0xf6
  401727:	icebp  
  401728:	leave  
  401729:	add    BYTE PTR [ebx+0x8cc0074],al
  40172f:	inc    ebp
  401730:	call   0xcc8e2ac
  401735:	add    BYTE PTR [eax],al
  401737:	or     DWORD PTR [ebx+0x3e0c0108],0xffffffff
  40173e:	jmp    0x401740
  401740:	call   DWORD PTR [ebp+0x1]
  401743:	add    BYTE PTR [eiz*2+0xec95fa],al
  40174a:	add    BYTE PTR [eax+eax*1],cl
  40174d:	cmp    esi,DWORD PTR [esi]
  40174f:	clc    
  401750:	and    esp,ecx
  401752:	add    BYTE PTR [eax],al
  401754:	inc    ebp
  401755:	add    bh,bh
  401757:	mov    eax,DWORD PTR [eax]
  401759:	jns    0x401702
  40175b:	sub    bh,BYTE PTR [esi]
  40175d:	int3   
  40175e:	add    bh,bh
  401760:	loopne 0x4016fa
  401762:	int    0x6e
  401764:	mov    esp,0x7508cc00
  401769:	add    al,0x8d
  40176b:	int3   
  40176c:	mov    ecx,DWORD PTR [esi+0x459e3995]
  401772:	add    BYTE PTR [eax],dl
  401774:	or     BYTE PTR [ebp+0x8ee3418],bl
  40177a:	add    BYTE PTR [ecx+0x80c8b],cl
  401780:	mov    ebx,DWORD PTR [edx+0x47]
  401783:	addr16 adc cl,ah
  401786:	int3   
  401787:	push   0xffffff8b
  401789:	sub    ch,bl
  40178b:	push   es
  40178c:	pusha  
  40178d:	dec    ebp
  40178e:	push   eax
  40178f:	push   ebp
  401790:	mov    DWORD PTR [eax],eax
  401792:	inc    esi
  401793:	mov    ecx,DWORD PTR [ebx-0x4c7ff60f]
  401799:	test   DWORD PTR [eax],eax
  40179b:	add    bh,al
  40179d:	add    bh,BYTE PTR [edx-0x72ff9dda]
  4017a3:	add    DWORD PTR [ebx+0xcc8b01],ecx
  4017a9:	repz xor DWORD PTR [eax+0xc748b86],ebp
  4017b0:	add    BYTE PTR [ecx*1+0x8002304],bl
  4017b7:	call   0xeb40203f
  4017bc:	add    BYTE PTR [ebx-0x7f],al
  4017bf:	cdq    
  4017c0:	fmul   QWORD PTR [ebx-0x8eab000]
  4017c6:	xor    dh,cl
  4017c8:	pop    ebx
  4017c9:	int3   
  4017ca:	inc    esi
  4017cb:	test   DWORD PTR [eax+ecx*1],eax
  4017ce:	pop    ebp
  4017cf:	add    BYTE PTR [eax],al
  4017d1:	fild   DWORD PTR [ecx]
  4017d3:	mov    al,fs:0x8bcccc
  4017d9:	test   eax,0x230923
  4017de:	add    BYTE PTR [eax],al
  4017e0:	mov    esi,DWORD PTR [ebp+edx*2-0x7b]
  4017e4:	test   DWORD PTR [ebp+0x44],ebp
  4017e7:	cs fwait
  4017e9:	add    BYTE PTR [ebx+0x17400000],cl
  4017ef:	inc    edx
  4017f0:	mov    dh,0x8b
  4017f2:	dec    DWORD PTR [ebx-0x74ffff40]
  4017f8:	push   DWORD PTR [esi+edi*2+0x75ffcdc2]
  4017ff:	mov    esp,ecx
  401801:	ret    
  401802:	sub    edx,DWORD PTR [esi+eax*2+0x100800b0]
  401809:	jmp    DWORD PTR [eax]
  40180b:	inc    edi
  40180c:	push   0xffffffa0
  40180e:	or     al,0x0
  401810:	mov    ecx,DWORD PTR [ecx+0x8d00]
  401816:	daa    
  401817:	and    DWORD PTR [edx+0x49],ecx
  40181a:	push   DWORD PTR [ebp+0x5d]
  40181d:	lea    esp,[ebp+0x144d229]
  401823:	mov    eax,DWORD PTR [ebx-0x747a0100]
  401829:	adc    BYTE PTR [eax+0xf1ea1],cl
  40182f:	or     ah,cl
  401831:	je     0x4017b5
  401833:	pop    esp
  401834:	mov    esi,0x8508e0fb
  401839:	add    bh,bh
  40183b:	mov    eax,DWORD PTR [eax]
  40183d:	add    BYTE PTR [esi-0x33464e04],dh
  401843:	add    al,0xcc
  401845:	test   DWORD PTR [edx+eax*4],esp
  401848:	fidivr WORD PTR [eax+0x74]
  40184b:	adc    al,al
  40184d:	inc    ebp
  40184e:	mov    esi,DWORD PTR [eax+eax*1+0x0]
  401852:	adc    al,0x68
  401854:	loopne 0x4017ec
  401856:	add    BYTE PTR [eax],al
  401858:	int3   
  401859:	add    al,ch
  40185b:	ds adc esi,esp
  40185e:	dec    DWORD PTR [ecx+0x8b8575]
  401864:	add    BYTE PTR [ebp+esi*2-0x1d],dh
  401868:	mov    al,0xec
  40186b:	add    eax,eax
  40186d:	dec    DWORD PTR [ecx-0x74678d42]
  401873:	add    BYTE PTR [eax],dl
  401875:	add    esi,DWORD PTR [edi+edi*8+0x0]
  401879:	add    dl,dl
  40187b:	dec    esi
  40187c:	repz add ecx,DWORD PTR [ebx+0x2ccc0000]
  401883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401884:	ror    BYTE PTR [ebx+0x15],cl
  401887:	mov    ecx,esp
  401889:	int3   
  40188a:	dec    ebp
  40188b:	mov    eax,DWORD PTR [eax]
  40188d:	test   esp,esi
  40188f:	xor    DWORD PTR [ebp+0x75ff83ad],0xb9ccd374
  401899:	mov    bl,0x0
  40189b:	add    BYTE PTR [ecx],al
  40189d:	add    BYTE PTR [ebx+ecx*4-0x75],dh
  4018a1:	add    DWORD PTR ds:0xfc8a5f4,edx
  4018a7:	push   eax
  4018a8:	inc    ebp
  4018a9:	adc    eax,0x528fcf2b
  4018ae:	test   DWORD PTR [eax],eax
  4018b0:	add    DWORD PTR [ebx+0x401eb],ecx
  4018b6:	pop    ecx
  4018b7:	lds    eax,FWORD PTR [ebx-0x3ffe3d]
  4018bd:	or     BYTE PTR [edx+0x4dd263],ah
  4018c3:	add    BYTE PTR [eax*4+0x1450000],cl
  4018ca:	retf   
  4018cb:	test   DWORD PTR [eax-0x3333748a],0x1ff73146
  4018d5:	out    dx,eax
  4018d6:	inc    DWORD PTR [ecx]
  4018d8:	loopne 0x4018da
  4018da:	inc    ebp
  4018db:	int3   
  4018dc:	mov    edi,edi
  4018de:	fsubr  DWORD PTR [esi]
  4018e0:	dec    edx
  4018e1:	inc    esi
  4018e2:	add    BYTE PTR [eax],al
  4018e4:	mov    ecx,DWORD PTR [ebx+0x490a85d0]
  4018ea:	push   eax
  4018eb:	add    BYTE PTR [eax],al
  4018ed:	mov    eax,DWORD PTR [ebp-0x29cd0000]
  4018f3:	clc    
  4018f4:	inc    eax
  4018f5:	jge    0x40187a
  4018f7:	call   0xc9121908
  4018fc:	out    0x78,al
  4018fe:	add    BYTE PTR [ecx],al
  401900:	add    bh,bh
  401902:	add    BYTE PTR [eax],al
  401904:	add    DWORD PTR [eax],0x4c
  401907:	mov    dl,0x59
  401909:	mov    ebp,ds
  40190b:	call   DWORD PTR [esi-0x34]
  40190e:	xlat   BYTE PTR ds:[ebx]
  40190f:	xor    DWORD PTR [ecx],0x3d
  401912:	mov    ecx,DWORD PTR [ebx-0x33f777]
  401918:	mov    esi,DWORD PTR [edx+edi*2+0x50]
  40191c:	rcl    BYTE PTR [edi+0x1],cl
  40191f:	add    ah,cl
  401921:	je     0x40195a
  401923:	cmp    DWORD PTR [ecx-0x78],0xffffffff
  401927:	lea    eax,[eax]
  401929:	push   DWORD PTR [ebx]
  40192b:	add    BYTE PTR [ecx+0x5d017200],cl
  401931:	jbe    0x401943
  401933:	mov    edi,edi
  401935:	mov    esp,DWORD PTR [ebx+ebx*4-0x1f33e3f2]
  40193c:	push   0x1
  40193e:	mov    eax,0xc25cc08
  401944:	daa    
  401945:	push   edi
  401946:	add    BYTE PTR [ebx+0x6ce9e808],cl
  40194c:	mov    ebx,0xffff4c
  401951:	or     al,0xff
  401953:	inc    esi
  401954:	test   DWORD PTR [ebx+0x4bf6728c],ecx
  40195a:	jns    0x5cf876e3
  401960:	es mov al,0x8d
  401963:	lea    eax,[eax]
  401965:	(bad)  
  401966:	call   0x64c55f57
  40196b:	dec    BYTE PTR ds:0x33000070
  401971:	add    BYTE PTR ds:0xe89cd2a3,al
  401977:	mov    ecx,DWORD PTR [ecx+0x5d008b]
  40197d:	push   esi
  40197e:	xchg   DWORD PTR [esi-0x748ae1ee],ecx
  401984:	test   DWORD PTR [esi+0x2f],eax
  401987:	outs   dx,DWORD PTR ds:[esi]
  401988:	mov    eax,ds:0x8b8b009e
  40198d:	lea    eax,[eax]
  40198f:	add    edi,edi
  401991:	jmp    esp
  401993:	xor    eax,0x8b00c1e4
  401998:	add    BYTE PTR [eax],al
  40199a:	and    DWORD PTR [esi-0x33baefba],edx
  4019a0:	rol    BYTE PTR [ecx],0x1
  4019a3:	inc    ebp
  4019a4:	rol    BYTE PTR [eax],0xd1
  4019a7:	mov    ch,0xd7
  4019a9:	outs   dx,DWORD PTR ds:[esi]
  4019aa:	add    ah,cl
  4019ac:	or     BYTE PTR [eax],dl
  4019ae:	inc    ebp
  4019af:	xchg   edx,eax
  4019b0:	(bad)  
  4019b1:	cld    
  4019b2:	add    BYTE PTR [ecx],al
  4019b4:	mov    eax,DWORD PTR [ebx]
  4019b6:	push   ebp
  4019b7:	add    BYTE PTR [eax],al
  4019b9:	call   0x755ece44
  4019be:	add    BYTE PTR [ebx+0x3a62c775],cl
  4019c4:	aam    0x64
  4019c6:	jne    0x4019fb
  4019c8:	jnp    0x8b95a4de
  4019ce:	and    esi,edx
  4019d0:	(bad)
  4019d5:	xor    ebp,esp
  4019d7:	pop    esi
  4019d8:	js     0x401971
  4019da:	adc    eax,0xffff0075
  4019df:	int3   
  4019e0:	add    BYTE PTR [esi+edi*2+0x73],dh
  4019e4:	and    eax,0x1cc0044
  4019e9:	dec    DWORD PTR [ecx]
  4019eb:	jl     0x401a4e
  4019ed:	sub    eax,DWORD PTR [eax]
  4019ef:	or     al,0xcc
  4019f1:	add    BYTE PTR [eax],al
  4019f3:	mov    DWORD PTR [ebp+0x45],eax
  4019f6:	das    
  4019f7:	sub    DWORD PTR [ebx-0x9574b5],0x97f462ff
  401a01:	adc    DWORD PTR [eax],eax
  401a03:	inc    esi
  401a04:	push   ebp
  401a05:	add    esp,ecx
  401a07:	fld    QWORD PTR [eax]
  401a09:	add    BYTE PTR [ebx+eax*2-0x59],bh
  401a0d:	jl     0x401a10
  401a0f:	int3   
  401a10:	add    BYTE PTR [esi-0x2a],dl
  401a13:	jbe    0x401a07
  401a15:	mov    dl,0x0
  401a17:	je     0x401a1a
  401a19:	rol    BYTE PTR [ebx+esi*1],0xc7
  401a1d:	mov    ecx,DWORD PTR [edx-0x63]
  401a20:	pop    eax
  401a21:	test   eax,0xcc08c000
  401a26:	cmp    esp,ebx
  401a28:	loopne 0x401a7b
  401a2a:	(bad)  
  401a2b:	inc    DWORD PTR [ebx+0x4600cc]
  401a31:	int3   
  401a32:	pushf  
  401a33:	mov    ds:0x8b6a5ea3,al
  401a38:	xor    edi,edi
  401a3a:	scas   al,BYTE PTR es:[edi]
  401a3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a3c:	jne    0x4019c8
  401a3e:	adc    eax,0xc00100
  401a43:	test   DWORD PTR [eax],eax
  401a45:	add    BYTE PTR [ebp-0x46],bl
  401a48:	xor    al,0x51
  401a4a:	or     ah,cl
  401a4c:	add    bh,bh
  401a4e:	add    dl,BYTE PTR [edx+0x71]
  401a51:	xchg   esi,eax
  401a52:	int3   
  401a53:	lea    eax,[eax]
  401a55:	add    bh,bh
  401a57:	add    BYTE PTR [esp+ecx*8],al
  401a5a:	jns    0x401ac2
  401a5c:	pop    ebp
  401a5d:	mov    eax,DWORD PTR [ebp-0x34]
  401a60:	mov    DWORD PTR [ecx],eax
  401a62:	xor    ebp,DWORD PTR [ecx-0x76afaa2e]
  401a68:	mov    DWORD PTR [eax],eax
  401a6a:	dec    esp
  401a6c:	add    BYTE PTR [eax],al
  401a6e:	not    DWORD PTR [edi-0x3376b692]
  401a74:	add    BYTE PTR [eax-0x29],dl
  401a77:	lods   eax,DWORD PTR ds:[esi]
  401a78:	arpl   WORD PTR [edx+0x0],sp
  401a7b:	inc    DWORD PTR [esi-0x77]
  401a7e:	dec    esp
  401a80:	int3   
  401a81:	pop    ebp
  401a82:	jmp    0x94d3ee
  401a87:	rcl    BYTE PTR [ebp+0x1],0x25
  401a8b:	sbb    DWORD PTR [edx+0x80fcc8e],0x8
  401a92:	adc    BYTE PTR [eax],al
  401a94:	push   eax
  401a95:	add    DWORD PTR [ecx-0x6e],esi
  401a98:	out    0xbe,al
  401a9a:	mov    DWORD PTR [eax],eax
  401a9c:	jne    0x401afb
  401a9e:	xchg   ecx,eax
  401a9f:	shl    DWORD PTR [eax*2-0x22f7ff20],cl
  401aa6:	mov    edx,DWORD PTR [ebp+0x0]
  401aa9:	add    esi,eax
  401aab:	push   edx
  401aac:	dec    esi
  401aad:	bound  ebx,QWORD PTR [ebp+0x45]
  401ab0:	add    BYTE PTR [esi-0x1],al
  401ab3:	push   ebx
  401ab4:	gs pop eax
  401ab6:	int3   
  401ab7:	mov    DWORD PTR [ecx],eax
  401ab9:	push   0xffffffc7
  401abb:	dec    DWORD PTR [ebp-0x7fb19aff]
  401ac1:	adc    DWORD PTR [eax],eax
  401ac3:	mov    ecx,DWORD PTR [ebx-0x1465b1cd]
  401ac9:	test   al,0x0
  401acb:	test   DWORD PTR [ecx],eax
  401acd:	inc    eax
  401acf:	add    BYTE PTR [ebx+0x33ad7401],cl
  401ad5:	inc    ebx
  401ad6:	int3   
  401ad7:	or     BYTE PTR [ebx+0x46e22200],cl
  401add:	sbb    esp,ecx
  401adf:	mov    esi,DWORD PTR [ebp-0x77]
  401ae2:	add    DWORD PTR [ebx+0x49c8cc45],ecx
  401ae8:	jno    0x401b39
  401aea:	je     0x401aec
  401aec:	mov    edi,edi
  401aee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401aef:	mov    ebp,0x1c0fbac
  401af4:	add    BYTE PTR [eax+0x0],dl
  401af7:	add    BYTE PTR [eax],al
  401af9:	jne    0x401ae4
  401afb:	das    
  401afc:	push   ebx
  401afd:	nop
  401afe:	mov    edi,edi
  401b00:	pop    ebp
  401b01:	add    BYTE PTR [esi+0x2f],bl
  401b04:	test   cl,0xc0
  401b07:	(bad)  
  401b08:	inc    DWORD PTR [eax]
  401b0a:	str    WORD PTR [ebx-0x55d3cf8]
  401b11:	push   edi
  401b12:	nop
  401b13:	je     0x401b15
  401b15:	lldt   WORD PTR [esi]
  401b18:	idiv   dl
  401b1a:	sbb    eax,0x5674015d
  401b1f:	mov    eax,DWORD PTR [eax]
  401b21:	or     ch,bl
  401b23:	mov    dh,0x8a
  401b25:	out    dx,eax
  401b26:	or     cl,BYTE PTR [ebx+0x38cc0c55]
  401b2c:	rcl    DWORD PTR [esi-0x4b],1
  401b2f:	lea    edx,ds:0x74000000
  401b35:	add    BYTE PTR [ebx+0x72fe7ce9],cl
  401b3b:	add    BYTE PTR [eax],al
  401b3d:	inc    esi
  401b3e:	int3   
  401b3f:	shl    BYTE PTR [esi-0xff3bdb],0x89
  401b46:	test   DWORD PTR [ebp-0x34],ecx
  401b49:	int3   
  401b4a:	add    BYTE PTR [ebx],al
  401b4c:	test   eax,0x7446175c
  401b51:	call   0xeb0ea2a3
  401b56:	lods   al,BYTE PTR ds:[esi]
  401b57:	mov    eax,DWORD PTR [ebx-0xa2aa34]
  401b5d:	mov    esp,ecx
  401b5f:	loopne 0x401b1d
  401b61:	xor    al,0xe5
  401b63:	or     ah,cl
  401b65:	jne    0x401bc4
  401b67:	out    0xe9,al
  401b69:	push   edi
  401b6a:	lods   eax,DWORD PTR ds:[esi]
  401b6b:	add    DWORD PTR [ebp+0x1],eax
  401b6e:	add    bh,bh
  401b70:	pop    ebp
  401b71:	add    al,0x8
  401b73:	test   eax,0x8893fc7
  401b78:	add    DWORD PTR [ecx],0xffffffcc
  401b7b:	pop    esi
  401b7c:	mov    esp,0x8915f8ea
  401b81:	inc    DWORD PTR [eax]
  401b83:	in     al,dx
  401b84:	add    al,0xf
  401b86:	(bad)  
  401b87:	mov    ebx,0x508d755b
  401b8c:	mov    eax,DWORD PTR [eax]
  401b8e:	mov    DWORD PTR [ecx+0xa1cfe9],eax
  401b94:	pop    ebp
  401b95:	add    ah,cl
  401b97:	or     al,0x8b
  401b99:	jmp    0x401b9c
  401b9b:	in     al,0x69
  401b9d:	test   eax,0x80304fa
  401ba2:	add    BYTE PTR [edi+eiz*4-0xb],ch
  401ba6:	and    al,0xdd
  401ba8:	add    BYTE PTR [eax],al
  401baa:	add    BYTE PTR [eax],dl
  401bac:	add    DWORD PTR [ecx],eax
  401bae:	add    BYTE PTR [eax-0x7a1b54fa],ah
  401bb4:	add    al,ch
  401bb6:	push   esi
  401bb7:	dec    ebp
  401bb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bb9:	pop    ebp
  401bba:	push   ds
  401bbb:	add    DWORD PTR [eax],eax
  401bbd:	mov    ebx,ebp
  401bbf:	add    BYTE PTR [eax],al
  401bc1:	add    al,al
  401bc3:	xchg   esp,eax
  401bc4:	inc    ebp
  401bc5:	stos   DWORD PTR es:[edi],eax
  401bc6:	repnz add BYTE PTR [eax],al
  401bc9:	mov    ecx,esp
  401bcb:	mov    ?,WORD PTR [eax-0x74ffb925]
  401bd1:	add    BYTE PTR [ebx+0x5d8b8bff],al
  401bd7:	mov    esi,0xe3f306
  401bdc:	pop    ebp
  401bdd:	int3   
  401bde:	mov    esi,DWORD PTR [eax-0x334bce5a]
  401be4:	add    BYTE PTR [eax],al
  401be6:	push   DWORD PTR [ebp+ecx*2+0x1]
  401bea:	int3   
  401beb:	sbb    eax,0xdda80b8f
  401bf0:	rol    BYTE PTR [ebp+0x1],0xd6
  401bf4:	mov    bh,bl
  401bf6:	add    ebp,eax
  401bf8:	inc    DWORD PTR [ebp+0x4500018b]
  401bfe:	add    bl,dl
  401c00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c02:	fs int3 
  401c04:	add    esi,DWORD PTR [ebp+0x45]
  401c07:	les    esi,FWORD PTR [esi+0x400cbf5]
  401c0d:	int3   
  401c0e:	int3   
  401c0f:	je     0x401c1d
  401c11:	call   0xf9dec899
  401c16:	iret   
  401c17:	mov    eax,DWORD PTR [ecx]
  401c19:	inc    ebp
  401c1a:	inc    ebp
  401c1c:	xchg   BYTE PTR [edx],bl
  401c1e:	int    0xcc
  401c20:	mov    eax,DWORD PTR [ecx]
  401c22:	add    al,0x85
  401c24:	add    BYTE PTR [esi+0x8],dl
  401c27:	lods   eax,DWORD PTR ds:[esi]
  401c28:	lahf   
  401c29:	cli    
  401c2a:	lods   al,BYTE PTR ds:[esi]
  401c2b:	mov    esi,DWORD PTR [ebx]
  401c2d:	je     0x401c2f
  401c2f:	(bad)  
  401c30:	shr    cl,0xd5
  401c33:	pop    ebp
  401c34:	in     al,dx
  401c35:	int3   
  401c36:	or     BYTE PTR [eax],al
  401c38:	mov    eax,edi
  401c3a:	add    DWORD PTR [esi+0xb603a8],esi
  401c40:	push   eax
  401c41:	add    DWORD PTR [ecx],eax
  401c43:	xchg   esi,eax
  401c44:	mov    BYTE PTR [esp+eiz*4],ah
  401c47:	je     0x401c15
  401c49:	add    DWORD PTR [eax+eax*1],ecx
  401c4c:	add    DWORD PTR [eax],ecx
  401c4e:	or     BYTE PTR [edi-0x331df34f],bh
  401c54:	adc    eax,0xb4c20000
  401c59:	cmpps  xmm0,XMMWORD PTR [eax],0xcc
  401c5d:	add    al,al
  401c5f:	(bad)  
  401c60:	in     al,dx
  401c61:	dec    DWORD PTR [ebx-0x56086374]
  401c67:	push   0xffffff8b
  401c69:	jne    0x401bf6
  401c6b:	leave  
  401c6c:	mov    ebx,0x8b45c916
  401c71:	(bad)  
  401c73:	ror    BYTE PTR [ebx-0x79563fff],0xfe
  401c7a:	mov    al,0xc0
  401c7c:	add    ch,bl
  401c7e:	add    BYTE PTR [ecx-0x222fe23e],dl
  401c84:	add    al,0x1
  401c86:	add    DWORD PTR [ebp+0x10],0x1
  401c8a:	push   esi
  401c8b:	mov    al,0xa2
  401c8d:	jmp    0xff41e949
  401c92:	mov    ebx,DWORD PTR [eax+0xb7048a]
  401c98:	pop    ebp
  401c99:	or     al,0xcc
  401c9b:	mov    ecx,DWORD PTR [ebx-0x7668ffff]
  401ca1:	jmp    0x8ecc:0x883891a
  401ca8:	ds loop 0x401ccb
  401cab:	mov    ecx,esp
  401cad:	add    BYTE PTR [eax+eax*1+0x4],dh
  401cb1:	jne    0x401c7f
  401cb3:	xchg   esi,eax
  401cb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cb5:	div    DWORD PTR [edx+0x3018b01]
  401cbb:	popf   
  401cbc:	(bad)  
  401cbd:	(bad)  
  401cbe:	mov    edx,0xff8bff
  401cc3:	add    BYTE PTR [eax],al
  401cc5:	add    esp,ecx
  401cc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cc8:	mov    eax,ds:0xff8db105
  401ccd:	or     BYTE PTR [eax],al
  401ccf:	or     DWORD PTR [edi-0x74ffbd28],edx
  401cd5:	in     al,dx
  401cd6:	mov    eax,DWORD PTR [eax]
  401cd8:	mov    esi,DWORD PTR [eax+edx*2+0x3e]
  401cdc:	mov    DWORD PTR [ecx],ebp
  401cde:	mov    dl,0x0
  401ce0:	mov    eax,DWORD PTR [eax]
  401ce2:	push   eax
  401ce3:	xchg   ecx,eax
  401ce4:	call   0x46ff:0x4655b9f2
  401ceb:	add    BYTE PTR [ebp+0x469e015d],cl
  401cf1:	sub    bh,BYTE PTR [ebp+0xcc8b00]
  401cf7:	xchg   ebx,eax
  401cf8:	xchg   ebp,eax
  401cf9:	out    dx,eax
  401cfa:	mov    ebp,0x83ffcc00
  401cff:	add    BYTE PTR [eax],dl
  401d01:	xor    ecx,DWORD PTR [ebp-0x74]
  401d04:	cdq    
  401d05:	cmc    
  401d06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d07:	int3   
  401d08:	(bad)  
  401d0a:	add    BYTE PTR [ecx+edi*4-0x17ff37f9],dh
  401d11:	int3   
  401d12:	mov    ecx,DWORD PTR [ebx-0x457c7300]
  401d18:	xchg   BYTE PTR [edi],bl
  401d1a:	rol    DWORD PTR [eax],0xff
  401d1d:	test   DWORD PTR [ecx-0x3bea474d],ecx
  401d23:	mov    eax,DWORD PTR [eax]
  401d25:	dec    esp
  401d27:	int3   
  401d28:	mov    ebp,eax
  401d2a:	inc    ebp
  401d2b:	mov    ebx,0x8bd3e9b1
  401d30:	add    BYTE PTR [ecx],al
  401d32:	jmp    0x401ce6
  401d34:	mov    ebp,0xcc08d80a
  401d39:	mov    edi,edi
  401d3b:	int3   
  401d3c:	add    BYTE PTR [ebp+0x1aafb900],cl
  401d42:	mov    esi,0x45cc158b
  401d47:	scas   eax,DWORD PTR es:[edi]
  401d48:	mov    ds:0x898bfc08,al
  401d4d:	or     BYTE PTR [ecx],al
  401d4f:	inc    ebp
  401d50:	mov    DWORD PTR [eax],eax
  401d52:	add    cl,ch
  401d54:	rol    DWORD PTR [ebx],0x1f
  401d57:	adc    BYTE PTR [ebx+0x569a1500],cl
  401d5d:	add    edi,DWORD PTR [eax]
  401d5f:	int3   
  401d60:	inc    DWORD PTR [eax]
  401d62:	add    BYTE PTR [ecx],al
  401d64:	inc    ebp
  401d65:	or     al,0x8b
  401d67:	stc    
  401d68:	(bad)  
  401d69:	stc    
  401d6a:	inc    esp
  401d6b:	add    DWORD PTR [eax],eax
  401d6d:	add    DWORD PTR [eax-0x5c],edx
  401d70:	call   0x8b45:0x8bad8b
  401d77:	add    BYTE PTR [eax+0x0],dl
  401d7a:	add    BYTE PTR [edi+0x8fefddb],al
  401d80:	add    BYTE PTR [eax],al
  401d82:	adc    eax,0xf46e96a1
  401d87:	(bad)  
  401d89:	jmp    0x401d16
  401d8b:	test   eax,ebp
  401d8d:	inc    esi
  401d8e:	inc    esi
  401d8f:	mov    al,0xa3
  401d91:	cs mov edi,0x8b744500
  401d97:	mov    ds:0x28638b,al
  401d9c:	adc    BYTE PTR [eax+eax*1+0x1],dh
  401da0:	add    ecx,DWORD PTR [ebx-0x538a6ff8]
  401da6:	mov    esi,0x50cc00dd
  401dab:	mov    ecx,0xffb151a6
  401db0:	(bad)  
  401db2:	add    DWORD PTR [eax],eax
  401db4:	add    DWORD PTR [ebx-0x51b64800],ecx
  401dba:	or     BYTE PTR [eax],al
  401dbc:	add    DWORD PTR [eax],0x75
  401dbf:	call   0x8c183056
  401dc4:	xor    esp,eax
  401dc6:	lea    eax,[eax]
  401dc8:	test   DWORD PTR [ebp+0x6a],ebx
  401dcb:	inc    eax
  401dcc:	push   eax
  401dcd:	push   ds
  401dce:	add    eax,0xccc8b03
  401dd3:	repz (bad) 
  401dd5:	repz fisttp DWORD PTR [ebx-0x3300ff96]
  401ddc:	add    ah,cl
  401dde:	int3   
  401ddf:	fstp   DWORD PTR [edi-0x74f048ba]
  401de5:	add    DWORD PTR [eax],0xffffff95
  401de8:	div    dl
  401dea:	out    dx,eax
  401deb:	inc    ebp
  401dec:	add    BYTE PTR [eax],al
  401dee:	add    DWORD PTR [edx-0x7d],ebp
  401df1:	add    BYTE PTR [eax],al
  401df3:	das    
  401df4:	aaa    
  401df5:	jle    0x401dbc
  401df7:	sldt   WORD PTR [ecx+eax*1]
  401dfb:	mov    al,ds:0x56627229
  401e00:	add    bh,bh
  401e02:	or     al,0x0
  401e04:	mov    DWORD PTR [ebx-0x39c5218c],ecx
  401e0a:	int    0x8b
  401e0c:	int3   
  401e0d:	por    mm7,mm4
  401e10:	rcr    DWORD PTR [ecx],cl
  401e12:	ror    esp,0x8b
  401e15:	call   0xcdfb1a
  401e1a:	int3   
  401e1b:	in     al,dx
  401e1c:	sub    DWORD PTR [ebx],esp
  401e1e:	inc    esp
  401e1f:	dec    DWORD PTR [ebx-0x6e0b7700]
  401e25:	push   esi
  401e26:	scas   al,BYTE PTR es:[edi]
  401e27:	add    ch,bl
  401e29:	push   eax
  401e2a:	rol    BYTE PTR [eax],0x74
  401e2d:	mov    ecx,DWORD PTR [ebx+0xd710ea9]
  401e33:	mov    eax,DWORD PTR [ebp-0x34]
  401e36:	add    BYTE PTR [esi+eax*1-0x33762e06],ch
  401e3d:	int3   
  401e3e:	(bad)  
  401e3f:	int3   
  401e40:	add    DWORD PTR [ebx-0x7a775f77],ecx
  401e46:	fld    DWORD PTR [eax]
  401e48:	add    BYTE PTR [ebx-0x78425a75],cl
  401e4e:	sub    eax,0xc89ff01
  401e53:	inc    ebp
  401e54:	add    BYTE PTR [eax],al
  401e56:	add    BYTE PTR [edi-0x742b9dd2],ah
  401e5c:	in     al,dx
  401e5d:	dec    ebp
  401e5e:	add    BYTE PTR [edi],dl
  401e60:	inc    DWORD PTR [edx]
  401e62:	dec    eax
  401e63:	test   DWORD PTR [eax],eax
  401e65:	add    BYTE PTR [eax+ecx*1],al
  401e68:	mov    eax,DWORD PTR [eax]
  401e6a:	int3   
  401e6b:	mov    al,0x62
  401e6d:	repz into 
  401e6f:	(bad)  
  401e70:	jmp    0x401e72
  401e72:	dec    ebp
  401e73:	mov    dh,0xa7
  401e75:	or     eax,0x458dccf1
  401e7a:	or     BYTE PTR ds:0xbd10cc00,dl
  401e80:	test   eax,0xc0000d11
  401e85:	jne    0x401e93
  401e87:	in     al,0xdd
  401e89:	mov    esp,0xe08b0813
  401e8e:	int3   
  401e8f:	rol    BYTE PTR [eax],0x0
  401e92:	add    BYTE PTR ds:0x24b6d3,ch
  401e98:	mov    ecx,DWORD PTR [ebx-0xd4d6a34]
  401e9e:	mov    edi,0x44de0ff
  401ea3:	or     al,0x8
  401ea5:	je     0x401ea7
  401ea7:	xchg   BYTE PTR ds:0xccb812,dh
  401ead:	call   FWORD PTR [ebp-0x28]
  401eb0:	and    BYTE PTR [ebx+0x4501bf],ch
  401eb6:	dec    esp
  401eb8:	int3   
  401eb9:	jne    0x401f01
  401ebb:	mov    esi,0xcce8104b
  401ec0:	inc    ebp
  401ec1:	dec    DWORD PTR [ebx+0x2a32153c]
  401ec7:	add    BYTE PTR [ebp-0x77],dh
  401eca:	push   esi
  401ecb:	mov    DWORD PTR [ebx-0xb3c33ff],ecx
  401ed1:	or     bh,dh
  401ed3:	pop    ebp
  401ed4:	add    BYTE PTR [eax],cl
  401ed6:	push   ebp
  401ed7:	add    DWORD PTR [eax-0xe],esp
  401eda:	or     DWORD PTR [ecx-0x34],edx
  401edd:	test   DWORD PTR [ebx+0x8b0000],ecx
  401ee3:	(bad)  
  401ee4:	fdiv   DWORD PTR [ebx]
  401ee6:	and    esp,DWORD PTR [ebp-0x33ffff00]
  401eec:	(bad)  
  401eed:	stos   DWORD PTR es:[edi],eax
  401eee:	(bad)  
  401eef:	jo     0x401ebd
  401ef1:	adc    BYTE PTR [eax],al
  401ef3:	add    esp,ecx
  401ef5:	add    al,al
  401ef7:	xor    eax,DWORD PTR [ebp-0x59]
  401efa:	in     eax,0x79
  401efc:	or     ah,cl
  401efe:	add    DWORD PTR [eax],eax
  401f00:	mov    bh,0x94
  401f02:	push   ss
  401f03:	pop    ecx
  401f04:	add    BYTE PTR [ecx],al
  401f06:	je     0x401f08
  401f08:	adc    BYTE PTR [ebp+0x0],al
  401f0b:	push   edx
  401f0d:	in     al,dx
  401f0e:	enter  0xff0f,0x33
  401f12:	mov    eax,DWORD PTR [eax]
  401f14:	jle    0x401f4c
  401f16:	jo     0x401ea5
  401f18:	int3   
  401f19:	int3   
  401f1a:	push   0xffffffff
  401f1c:	adc    eax,0x9b00eb83
  401f21:	repz push esi
  401f23:	pop    DWORD PTR [eax]
  401f25:	mov    ecx,DWORD PTR [ebx-0xbe7948c]
  401f2b:	mov    ch,0x5d
  401f2d:	mov    ebp,esp
  401f2f:	add    BYTE PTR [eax],al
  401f31:	mov    ecx,DWORD PTR [ebx-0x69f97975]
  401f37:	fadd   DWORD PTR [eax]
  401f39:	add    DWORD PTR [eax],0x45
  401f3c:	or     al,0x86
  401f3e:	inc    esp
  401f3f:	sbb    eax,DWORD PTR [eax+eax*1]
  401f42:	test   edi,edi
  401f44:	add    bh,bh
  401f46:	adc    eax,0xcef9d900
  401f4b:	inc    ecx
  401f4c:	rol    BYTE PTR [eax],0xcc
  401f4f:	jne    0x401f76
  401f51:	mov    al,ds:0x4002d48
  401f56:	mov    ecx,DWORD PTR [ecx-0x7400effc]
  401f5c:	cmp    bh,al
  401f5e:	xchg   DWORD PTR ds:0xff4504c0,eax
  401f64:	adc    eax,0x747b3c6c
  401f69:	add    BYTE PTR [eax+eax*1+0xc],dh
  401f6d:	jne    0x401fe4
  401f6f:	test   edi,ebx
  401f71:	push   edi
  401f72:	(bad)  
  401f73:	and    bh,bh
  401f75:	call   0x21367541
  401f7a:	std    
  401f7b:	test   BYTE PTR [eax],al
  401f7d:	mov    eax,DWORD PTR [eax]
  401f7f:	int3   
  401f80:	add    al,0x0
  401f82:	add    BYTE PTR [eax],al
  401f84:	scas   al,BYTE PTR es:[edi]
  401f85:	sub    edi,DWORD PTR [edx-0x33fffca4]
  401f8b:	mov    ebp,DWORD PTR [ebx-0x74add9cf]
  401f91:	mov    edx,DWORD PTR [eax-0x1]
  401f94:	add    DWORD PTR [eax],eax
  401f96:	inc    DWORD PTR [eax]
  401f98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f99:	in     al,dx
  401f9a:	loope  0x401f74
  401f9c:	int3   
  401f9d:	add    BYTE PTR [ebp-0x34],dh
  401fa0:	lock adc bh,BYTE PTR es:0x18b0845
  401fa8:	jmp    0x402014
  401faa:	xor    eax,DWORD PTR [ecx]
  401fac:	dec    DWORD PTR [ebx-0x5e]
  401faf:	push   edx
  401fb0:	add    esp,ecx
  401fb2:	int3   
  401fb3:	in     al,dx
  401fb4:	xchg   edx,eax
  401fb5:	ins    DWORD PTR es:[edi],dx
  401fb6:	fld    QWORD PTR [ecx+0x0]
  401fb9:	inc    esi
  401fba:	or     al,0x8b
  401fbc:	rol    BYTE PTR [ebp+0x0],0x4
  401fc0:	xchg   edx,eax
  401fc1:	jb     0x402025
  401fc3:	and    eax,0xff450050
  401fc8:	mov    dl,0x3a
  401fca:	sub    esp,eax
  401fcc:	add    BYTE PTR [esp+esi*2-0x39],dh
  401fd0:	push   esi
  401fd1:	call   0x343ba5a2
  401fd6:	add    BYTE PTR [ecx+0xc],dl
  401fd9:	mov    ecx,DWORD PTR [ebx+0x663c13c0]
  401fdf:	push   cs
  401fe0:	cmovge esi,DWORD PTR [ebp+0x0]
  401fe4:	add    BYTE PTR [ebp-0x7b],cl
  401fe7:	xor    DWORD PTR [esi+0x5a],0x2c
  401feb:	mov    al,BYTE PTR [eax]
  401fed:	add    edi,edi
  401fef:	adc    bl,ah
  401ff1:	iret   
  401ff2:	mov    ecx,edi
  401ff4:	call   DWORD PTR [esi+0x74]
  401ff7:	add    DWORD PTR [eax],0x0
  401ffa:	add    esp,ecx
  401ffc:	push   esp
  401ffd:	mov    bh,0x31
  401fff:	cmp    ecx,DWORD PTR [eax]
  402001:	adc    eax,0x6b23eb50
  402006:	int    0x4e
  402008:	or     BYTE PTR [eax],al
  40200a:	add    BYTE PTR [ebp+0x75],dl
  40200d:	mov    eax,DWORD PTR [eax]
  40200f:	add    DWORD PTR [eax+0x20],ebx
  402012:	(bad)  
  402013:	cmc    
  402014:	add    bl,ch
  402016:	inc    ebp
  402017:	add    al,0x5a
  402019:	inc    edx
  40201a:	mov    dh,0x54
  40201c:	int3   
  40201d:	mov    DWORD PTR [eax],eax
  40201f:	add    BYTE PTR [ebp-0x75],cl
  402022:	add    BYTE PTR [eax],al
  402024:	imul   eax,edx,0x8b9803
  40202a:	mov    esp,ecx
  40202c:	push   esi
  40202d:	(bad)  
  40202e:	fld    st(0)
  402030:	or     al,0x0
  402032:	je     0x402033
  402034:	inc    DWORD PTR [ebp+0x50]
  402037:	int3   
  402038:	pop    ss
  402039:	xlat   BYTE PTR ds:[ebx]
  40203a:	and    eax,0xddcc13
  40203f:	add    DWORD PTR [edx],esi
  402041:	stos   BYTE PTR es:[edi],al
  402042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402043:	inc    edx
  402044:	mov    ebp,ebx
  402046:	push   0xffffffff
  402048:	adc    eax,0x41ffdd46
  40204d:	xor    al,cl
  40204f:	imul   ecx,DWORD PTR [ebx-0x73b9af34],0x3c
  402056:	iret   
  402057:	imul   esi,DWORD PTR [eax+eax*1+0x5d],0x83ff8b
  40205f:	inc    ebp
  402060:	jmp    0x7583:0x557fa15e
  402067:	invd   
  402069:	adc    BYTE PTR [esp],0x8
  40206d:	add    DWORD PTR [ebx+0xfcc1515],ecx
  402073:	add    BYTE PTR [ecx],dl
  402075:	rcl    BYTE PTR [ecx],cl
  402077:	arpl   WORD PTR [ebp-0x6b22fffd],cx
  40207d:	shl    BYTE PTR [ebp+0x55],0xcc
  402081:	add    BYTE PTR [esp+ecx*8],cl
  402084:	mov    edx,DWORD PTR [esi+0x46]
  402087:	jmp    FWORD PTR [ebx]
  402089:	inc    edi
  40208a:	pop    eax
  40208b:	mov    eax,eax
  40208d:	add    DWORD PTR [edi+edi*8],eax
  402090:	xor    eax,0x114899d
  402095:	add    ecx,esp
  402097:	add    BYTE PTR [ecx-0x727aff00],cl
  40209d:	inc    ebp
  40209e:	xor    esi,esp
  4020a0:	add    BYTE PTR [eax+eax*1],al
  4020a3:	add    BYTE PTR [ecx+0xd16899],ah
  4020a9:	int3   
  4020aa:	dec    esp
  4020ac:	fld    QWORD PTR [eax]
  4020ae:	int3   
  4020af:	add    BYTE PTR [edx+0x1198b3d],dh
  4020b5:	add    DWORD PTR [ecx-0x72cd617d],ecx
  4020bb:	lds    eax,FWORD PTR [ebx+0x45ff6a15]
  4020c1:	(bad)  
  4020c2:	in     al,dx
  4020c3:	add    BYTE PTR [esi],dl
  4020c5:	pop    edx
  4020c6:	sbb    ebx,ebx
  4020c8:	inc    esi
  4020c9:	int3   
  4020ca:	add    BYTE PTR [ebp+0x2610d48a],cl
  4020d0:	add    BYTE PTR [eax],al
  4020d2:	mov    ecx,DWORD PTR [ebp-0x7afff000]
  4020d8:	lods   eax,DWORD PTR ds:[esi]
  4020d9:	mov    eax,ds:0xcccc93e3
  4020de:	int3   
  4020df:	xor    DWORD PTR ds:0x83b8963,0x0
  4020e6:	int3   
  4020e7:	adc    BYTE PTR [eax+eax*1],al
  4020ea:	dec    DWORD PTR [ebx+0x784a56f5]
  4020f0:	or     al,0x83
  4020f2:	dec    ebp
  4020f3:	add    edi,DWORD PTR [ebx-0x747d30ff]
  4020f9:	add    BYTE PTR [ebp-0x3f1474f8],cl
  4020ff:	inc    esi
  402100:	aas    
  402101:	adc    al,0x0
  402103:	repz int3 
  402105:	cmp    edi,0x1
  402108:	inc    ebp
  402109:	push   ss
  40210a:	cli    
  40210b:	jno    0x402119
  40210d:	add    DWORD PTR [ebx+0x5085cc],ecx
  402113:	add    BYTE PTR [ebx+0x4f74b4],cl
  402119:	add    bh,bh
  40211b:	xor    edx,DWORD PTR [ebx+0x2c]
  40211e:	frstor [esi+0x0]
  402121:	inc    ebp
  402122:	add    DWORD PTR [ebp+0x1],eax
  402125:	int3   
  402126:	int3   
  402127:	add    BYTE PTR [esi-0x2ec973],al
  40212d:	int3   
  40212e:	mov    ecx,esp
  402130:	jmp    0x402119
  402132:	paddq  mm0,QWORD PTR [ecx]
  402135:	add    ah,cl
  402137:	bswap  esp
  402139:	mov    ecx,esp
  40213b:	add    DWORD PTR [edi-0x7d],0x1e
  40213f:	popf   
  402140:	mov    ecx,DWORD PTR [eax]
  402142:	add    BYTE PTR [eax],al
  402144:	fs mov ebp,0x89748d27
  40214a:	mov    ecx,DWORD PTR [ebx+0x6a8d0101]
  402150:	xchg   esp,eax
  402151:	mov    cl,0xf9
  402153:	jbe    0x402154
  402155:	add    BYTE PTR [ecx],al
  402157:	fnstsw WORD PTR [ebp+0x16a7077]
  40215d:	int3   
  40215e:	add    BYTE PTR [ebp+0x75],dl
  402161:	add    bh,bh
  402163:	add    BYTE PTR [ecx-0x4cd02c],ah
  402169:	push   DWORD PTR [ebp+0xc]
  40216c:	inc    edx
  40216d:	push   ebp
  40216e:	add    al,0x55
  402170:	pop    ebp
  402171:	adc    bh,al
  402173:	int3   
  402174:	dec    DWORD PTR [ecx+0x34d0000]
  40217a:	cdq    
  40217b:	add    DWORD PTR [eax],0x4b00ffdd
  402181:	dec    DWORD PTR fs:[ecx+ecx*4+0x74]
  402186:	sbb    DWORD PTR [ebp+0x1],0xffffff83
  40218a:	add    bl,ch
  40218c:	mov    bh,BYTE PTR [esp+ebp*1]
  40218f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402190:	add    DWORD PTR [ebx+0x311b000f],ecx
  402196:	pop    esi
  402197:	pop    esp
  402198:	or     BYTE PTR [eax],al
  40219a:	add    BYTE PTR [eax+ecx*1],cl
  40219d:	add    BYTE PTR [ecx],al
  40219f:	mov    esp,DWORD PTR [edi+0x3fee33]
  4021a5:	int3   
  4021a6:	add    DWORD PTR [eax],eax
  4021a8:	pusha  
  4021a9:	mov    dl,0x28
  4021ab:	mov    ebp,0xff0ccc8b
  4021b0:	push   0x8
  4021b2:	rol    BYTE PTR [eax],0x42
  4021b5:	std    
  4021b6:	sub    eax,DWORD PTR [esi+0x183cc46]
  4021bc:	retf   
  4021bd:	cmp    ch,cl
  4021bf:	cmp    al,BYTE PTR [eax]
  4021c1:	mov    DWORD PTR [eax],0x10cc018b
  4021c7:	add    BYTE PTR [eax-0x51],cl
  4021ca:	sub    al,0xb7
  4021cc:	add    DWORD PTR [eax+eax*1],ecx
  4021cf:	add    BYTE PTR [edi],dl
  4021d1:	shl    DWORD PTR [ecx],0x84
  4021d4:	add    BYTE PTR [edx+0x3],ch
  4021d7:	int3   
  4021d8:	or     BYTE PTR [eax],al
  4021da:	call   DWORD PTR ds:0xb527d075
  4021e0:	add    DWORD PTR [eax],eax
  4021e2:	mov    DWORD PTR [ebp+0x7275c768],eax
  4021e8:	add    al,0x15
  4021ea:	push   eax
  4021eb:	mov    eax,DWORD PTR [ebx-0x60f3ff75]
  4021f1:	outs   dx,DWORD PTR ds:[esi]
  4021f2:	and    ah,BYTE PTR ds:0xcc748900
  4021f8:	(bad)  
  4021f9:	(bad)  
  4021fa:	mov    bh,0xdb
  4021fc:	add    BYTE PTR [ebx+0x454600cc],al
  402202:	mov    DWORD PTR [edi],ecx
  402204:	(bad)  
  402205:	outs   dx,BYTE PTR ds:[esi]
  402206:	push   0xffffff9a
  402208:	add    BYTE PTR [eax],al
  40220a:	add    eax,DWORD PTR [eax]
  40220c:	iret   
  40220d:	pop    es
  40220e:	fidivr DWORD PTR [edx-0x75]
  402211:	mov    DWORD PTR [ecx-0x148bff77],ecx
  402217:	cmovge esp,DWORD PTR [ebx-0x46]
  40221b:	xchg   ecx,eax
  40221c:	inc    DWORD PTR [eax]
  40221e:	add    DWORD PTR [eax],eax
  402220:	ret    
  402221:	dec    edi
  402222:	fild   QWORD PTR [ebp-0x33fffe97]
  402228:	add    BYTE PTR [edi],bh
  40222a:	jecxz  0x4022a5
  40222c:	push   es
  40222d:	add    BYTE PTR [eax],al
  40222f:	mov    esi,DWORD PTR [ebx]
  402231:	add    BYTE PTR [ebx-0x54c4f734],cl
  402237:	nop
  402238:	int    0xff
  40223a:	test   DWORD PTR [eax],ecx
  40223c:	pop    ebp
  40223d:	lock sub DWORD PTR [eax],ebp
  402240:	mov    eax,ds:0xf00cc08
  402245:	mov    ecx,DWORD PTR [edi]
  402247:	mov    eax,DWORD PTR [ebp-0x18]
  40224a:	sub    eax,0x1af91
  40224f:	adc    eax,0x6edcbb00
  402254:	xor    BYTE PTR [ecx+0xeb75c0],cl
  40225a:	int3   
  40225b:	(bad)  
  40225c:	push   esp
  40225e:	sub    ah,BYTE PTR [esi]
  402260:	xor    DWORD PTR [ebx+0x69cc0004],eax
  402266:	cdq    
  402267:	jae    0x4021fd
  402269:	lea    edx,[ebp-0x14]
  40226c:	add    al,0x0
  40226e:	inc    ebp
  40226f:	add    al,0xf
  402271:	cmc    
  402272:	push   es
  402273:	div    edx
  402275:	mov    edi,edi
  402277:	add    BYTE PTR [ebx-0x5f5a8d84],cl
  40227d:	mov    ecx,DWORD PTR [ebx-0xff007b]
  402283:	add    ah,cl
  402285:	sub    BYTE PTR [edx+0x67],ch
  402288:	int    0x46
  40228a:	int3   
  40228b:	add    DWORD PTR [esi*1-0x7423eaeb],ecx
  402292:	int3   
  402293:	add    bl,ch
  402295:	add    BYTE PTR [eax],al
  402297:	adc    DWORD PTR ds:0x2878d87c,0xffffffcc
  40229e:	add    BYTE PTR [eax],al
  4022a0:	int3   
  4022a1:	jo     0x4022b7
  4022a3:	dec    esi
  4022a4:	pushf  
  4022a5:	adc    BYTE PTR [ebp+0x0],dh
  4022a8:	int3   
  4022a9:	add    ecx,DWORD PTR [eax]
  4022ab:	or     BYTE PTR [eax],al
  4022ad:	call   0xeccc:0xcc5467f5
  4022b4:	add    BYTE PTR ds:0xdd3a42a5,dh
  4022ba:	ror    BYTE PTR [ebx-0x33ff0000],0x0
  4022c1:	std    
  4022c2:	inc    edi
  4022c3:	fcomp  QWORD PTR [edi]
  4022c5:	add    BYTE PTR [ebp+0x0],dh
  4022c8:	or     BYTE PTR [edi+eiz*1-0x7639a9],dl
  4022cf:	in     al,dx
  4022d0:	inc    ebp
  4022d1:	mov    eax,DWORD PTR [ecx]
  4022d3:	test   DWORD PTR [esp+eax*2],ecx
  4022d6:	pushf  
  4022d7:	push   esi
  4022d8:	xchg   edi,eax
  4022d9:	je     0x4022db
  4022db:	add    DWORD PTR [eax],eax
  4022dd:	cmp    BYTE PTR [edx],ah
  4022df:	ror    dh,1
  4022e1:	mov    ecx,esp
  4022e3:	call   0x470c973e
  4022e8:	push   ebp
  4022e9:	mov    esi,DWORD PTR ss:[edi+0x68]
  4022ed:	mov    eax,DWORD PTR [esp+esi*2]
  4022f0:	jmp    FWORD PTR [esi]
  4022f2:	pop    ds
  4022f3:	fldenv [edx]
  4022f5:	push   ebp
  4022f6:	add    DWORD PTR [eax],eax
  4022f8:	mov    DWORD PTR [eax],eax
  4022fa:	call   0x4709aecb
  4022ff:	jmp    0x4022ef
  402301:	add    BYTE PTR [eax],al
  402303:	int3   
  402304:	add    BYTE PTR [esi-0x23],ch
  402307:	mov    al,ds:0x74cc5dbe
  40230c:	dec    DWORD PTR [eax]
  40230e:	dec    ebp
  40230f:	test   DWORD PTR [ebx-0x316fc2a8],ecx
  402315:	inc    DWORD PTR [ecx]
  402317:	(bad)  
  402318:	(bad)  
  402319:	mov    ebp,0x7558163c
  40231e:	int3   
  40231f:	rol    BYTE PTR [eax],0x4
  402322:	loopne 0x402398
  402324:	je     0x40239b
  402326:	sub    bh,BYTE PTR [eax]
  402328:	sbb    eax,0x1ccddcc
  40232d:	aaa    
  40232e:	fild   DWORD PTR [ebp-0x7a228a50]
  402334:	add    BYTE PTR [ecx],al
  402336:	add    edx,DWORD PTR [esi+0x0]
  402339:	ror    BYTE PTR [ecx],1
  40233b:	bswap  esi
  40233d:	add    BYTE PTR [eax],al
  40233f:	inc    esi
  402340:	int3   
  402341:	pop    ebx
  402342:	cmp    eax,0xcc006415
  402347:	mov    ecx,DWORD PTR [ebx-0x74130100]
  40234d:	adc    al,dh
  40234f:	xchg   ecx,eax
  402350:	xor    al,0x0
  402352:	add    BYTE PTR [ebx+0x3f6635cc],cl
  402358:	jl     0x40235a
  40235a:	adc    eax,0xcc00cccc
  40235f:	mov    eax,DWORD PTR [eax]
  402361:	in     al,0x9
  402363:	jns    0x4023ab
  402365:	add    BYTE PTR [ecx],al
  402367:	inc    DWORD PTR [ecx]
  402369:	pop    eax
  40236a:	add    esi,edx
  40236c:	mov    DWORD PTR [eax],eax
  40236e:	int3   
  40236f:	lea    eax,[ecx]
  402371:	or     BYTE PTR [ebp+0xc],bl
  402374:	int3   
  402375:	dec    ebp
  402376:	sub    eax,0xff8b4172
  40237b:	add    DWORD PTR [ebp-0x1decb380],eax
  402381:	inc    ebp
  402382:	or     al,0x8d
  402384:	add    BYTE PTR [ebx],al
  402386:	je     0x402390
  402388:	push   ebp
  402389:	push   esp
  40238a:	cli    
  40238b:	mov    cl,BYTE PTR [ebx]
  40238d:	adc    bl,ch
  40238f:	add    bh,bh
  402391:	add    cl,BYTE PTR [ecx]
  402393:	xor    BYTE PTR [eax+eax*1+0x0],dl
  402397:	int3   
  402398:	str    WORD PTR [ebx+0x3df78bff]
  40239f:	xor    bh,BYTE PTR ds:0xcceb4500
  4023a5:	cmp    dh,al
  4023a7:	aad    0x13
  4023a9:	mov    eax,DWORD PTR [ebx-0x743f7440]
  4023af:	dec    DWORD PTR [eax]
  4023b1:	sub    ebp,0x85f26c
  4023b7:	mov    eax,eax
  4023b9:	ss clc 
  4023bb:	les    eax,FWORD PTR [eax+0x0]
  4023be:	(bad)  
  4023bf:	mov    eax,0x748b898d
  4023c5:	adc    eax,0x30dcae5
  4023ca:	pop    ebp
  4023cb:	mov    ecx,esp
  4023cd:	(bad)
  4023d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023d1:	je     0x4023d3
  4023d3:	add    BYTE PTR [ebp+0x74],dh
  4023d6:	je     0x402363
  4023d8:	or     BYTE PTR [eax+eax*1],ch
  4023db:	jmp    0x148244d
  4023e0:	sar    ah,0xbe
  4023e3:	inc    esp
  4023e4:	(bad)  
  4023e5:	add    BYTE PTR [eax],al
  4023e7:	mov    DWORD PTR [edx+0x5d],ebp
  4023ea:	pop    ebp
  4023eb:	sldt   esp
  4023ee:	xor    DWORD PTR [eax+0xe8bf],0x1cf1498b
  4023f8:	or     eax,0x1017410
  4023fd:	int3   
  4023fe:	add    bh,bh
  402400:	push   ebx
  402402:	jge    0x402433
  402404:	out    dx,eax
  402405:	call   0x99c92412
  40240a:	in     al,0x9d
  40240c:	stc    
  40240d:	test   DWORD PTR [edi+edi*8],eax
  402410:	mov    DWORD PTR [eax],eax
  402412:	add    BYTE PTR [ebx+0x61058300],cl
  402418:	mov    ds:0xff8d8900,eax
  40241d:	out    dx,al
  40241e:	lahf   
  40241f:	aam    0xca
  402421:	add    ah,ch
  402423:	mov    eax,DWORD PTR [ecx*4+0x1a01cc01]
  40242a:	xchg   esp,eax
  40242b:	mov    edi,0xff0074
  402430:	lea    edx,[edi+0x3b]
  402433:	(bad)  
  402435:	add    DWORD PTR [ebx+0xffff00],ecx
  40243b:	add    BYTE PTR [ebp-0x49],bl
  40243e:	adc    eax,0x5600f576
  402443:	add    BYTE PTR [ecx+ebp*2],al
  402446:	sbb    ebx,eax
  402448:	mov    ecx,DWORD PTR [eax]
  40244a:	add    BYTE PTR [edi],cl
  40244c:	add    DWORD PTR [ebx+0x4b000001],ecx
  402452:	mov    bh,0x66
  402454:	push   ss
  402455:	pop    ebp
  402456:	add    DWORD PTR [eax],eax
  402458:	call   0x6da54dde
  40245d:	je     0x4024d4
  40245f:	test   DWORD PTR [eax],edx
  402461:	add    eax,0x4
  402464:	add    cl,cl
  402466:	and    BYTE PTR [edi-0x48],dl
  402469:	add    ah,cl
  40246b:	adc    DWORD PTR [eax],0x65
  40246e:	pop    ds
  40246f:	iret   
  402470:	jmp    0x12c307d
  402475:	or     BYTE PTR [eax],al
  402477:	add    BYTE PTR [eax],al
  402479:	dec    DWORD PTR [edx+esi*4+0x8d15f2]
  402480:	push   0xffffff89
  402482:	cmc    
  402483:	pushf  
  402484:	and    BYTE PTR [edx+0x55],ch
  402487:	inc    ebp
  402488:	mov    ecx,esp
  40248a:	add    bh,bh
  40248c:	seto   BYTE PTR ds:0x1c90
  402493:	add    bh,bh
  402495:	jbe    0x402454
  402497:	push   ebp
  402498:	jmp    0x338d6a28
  40249d:	add    BYTE PTR [ebx+0x25468b75],cl
  4024a3:	sub    BYTE PTR [eax-0x75],ch
  4024a6:	test   DWORD PTR [ecx],eax
  4024a8:	add    BYTE PTR [eax+eiz*2-0x2d],dh
  4024ac:	repz jmp 0x402497
  4024af:	add    BYTE PTR [eax],al
  4024b1:	xor    ecx,DWORD PTR [ebx+0x55c355ec]
  4024b7:	mov    ebp,esp
  4024b9:	sub    esp,0xc
  4024bc:	push   ebx
  4024bd:	push   esi
  4024be:	push   edi
  4024bf:	lea    eax,[ebp-0x8]
  4024c2:	push   eax
  4024c3:	push   0x1
  4024c5:	mov    DWORD PTR ds:0x4190ec,0xa
  4024cf:	call   DWORD PTR ds:0x4180c4
  4024d5:	mov    eax,DWORD PTR [ebp-0x8]
  4024d8:	mov    ecx,DWORD PTR [eax]
  4024da:	lea    edx,[ebp-0xc]
  4024dd:	push   edx
  4024de:	push   0x4181e0
  4024e3:	push   eax
  4024e4:	call   DWORD PTR [ecx]
  4024e6:	xor    ecx,ecx
  4024e8:	cmp    eax,0x80004002
  4024ed:	setne  cl
  4024f0:	mov    ds:0x4194b8,eax
  4024f5:	mov    eax,0x74479c62
  4024fa:	push   0x418170
  4024ff:	push   0x0
  402501:	dec    ecx
  402502:	and    ecx,0x5949f4ed
  402508:	add    ecx,0x20eb
  40250e:	sub    eax,ecx
  402510:	mov    ecx,DWORD PTR ds:0x419428
  402516:	mov    DWORD PTR [ecx],eax
  402518:	call   DWORD PTR ds:0x418070
  40251e:	mov    eax,ds:0x419034
  402523:	add    DWORD PTR ds:0x419428,0x4
  40252a:	mov    esi,DWORD PTR ds:0x419428
  402530:	push   0x3
  402532:	pop    ebx
  402533:	mov    ds:0x41917c,eax
  402538:	mov    edi,ebx
  40253a:	xor    eax,eax
  40253c:	mov    ecx,DWORD PTR ds:0x419420
  402542:	mov    ecx,DWORD PTR [ecx+eax*4]
  402545:	sub    ecx,DWORD PTR ds:0x4194b8
  40254b:	sub    ecx,0x1b19c70e
  402551:	mov    DWORD PTR [esi],ecx
  402553:	xor    ecx,ecx
  402555:	add    esi,0x4
  402558:	cmp    edi,ebx
  40255a:	setne  cl
  40255d:	lea    edi,[ecx+0x2]
  402560:	add    eax,edi
  402562:	cmp    eax,0xd2
  402567:	jb     0x40253c
  402569:	push   0xfffffff8
  40256b:	push   0x108
  402570:	call   DWORD PTR ds:0x418094
  402576:	mov    eax,ds:0x4194b8
  40257b:	add    eax,0x3442b1a
  402580:	mov    DWORD PTR [esi],eax
  402582:	call   DWORD PTR ds:0x41803c
  402588:	mov    eax,ds:0x4194b8
  40258d:	add    eax,0xf9621686
  402592:	mov    DWORD PTR [esi+0x4],eax
  402595:	add    esi,0x8
  402598:	mov    DWORD PTR [ebp-0x4],ebx
  40259b:	xor    edi,edi
  40259d:	call   DWORD PTR ds:0x418054
  4025a3:	mov    eax,DWORD PTR [ebp+0x8]
  4025a6:	mov    eax,DWORD PTR [eax+edi*4]
  4025a9:	mov    ecx,DWORD PTR ds:0x4194b8
  4025af:	lea    eax,[eax+ecx*1-0x255e7c8e]
  4025b6:	mov    DWORD PTR [esi],eax
  4025b8:	xor    eax,eax
  4025ba:	add    esi,0x4
  4025bd:	cmp    DWORD PTR [ebp-0x4],ebx
  4025c0:	setne  al
  4025c3:	add    eax,0x2
  4025c6:	add    edi,eax
  4025c8:	mov    DWORD PTR [ebp-0x4],eax
  4025cb:	cmp    edi,0xca
  4025d1:	jb     0x40259d
  4025d3:	mov    edx,DWORD PTR [ebp+0x10]
  4025d6:	mov    esi,edx
  4025d8:	shr    esi,1
  4025da:	lea    edi,[esi+edx*2]
  4025dd:	xor    eax,eax
  4025df:	mov    ecx,ebx
  4025e1:	test   edi,edi
  4025e3:	je     0x40260f
  4025e5:	mov    esi,DWORD PTR [ebp+0x14]
  4025e8:	mov    edx,DWORD PTR [ebp+0xc]
  4025eb:	mov    edx,DWORD PTR [edx+eax*4]
  4025ee:	sub    edx,DWORD PTR ds:0x4194b8
  4025f4:	add    edx,0x35fca375
  4025fa:	mov    DWORD PTR [esi],edx
  4025fc:	xor    edx,edx
  4025fe:	add    esi,0x4
  402601:	cmp    ecx,ebx
  402603:	setne  dl
  402606:	lea    ecx,[edx+0x2]
  402609:	add    eax,ecx
  40260b:	cmp    eax,edi
  40260d:	jb     0x4025e8
  40260f:	pop    edi
  402610:	pop    esi
  402611:	pop    ebx
  402612:	leave  
  402613:	ret    
  402614:	adc    DWORD PTR [edi+ecx*4],esi
  402617:	gs add esp,ecx
  40261a:	int3   
  40261b:	lea    eax,[ebp+esi*1-0x74fe30e7]
  402622:	call   DWORD PTR [esi-0x75]
  402625:	je     0x402627
  402627:	mov    DWORD PTR [ecx],edx
  402629:	inc    edx
  40262a:	pop    es
  40262b:	out    dx,eax
  40262c:	dec    esp
  40262e:	inc    ebp
  40262f:	or     al,0x6b
  402631:	outs   dx,BYTE PTR ds:[esi]
  402632:	ja     0x4025e3
  402634:	int3   
  402635:	add    esp,ecx
  402637:	inc    ebp
  402638:	add    BYTE PTR [ecx],al
  40263a:	loopne 0x402651
  40263c:	shl    DWORD PTR [eax+0x3f],0x9
  402640:	add    al,al
  402642:	sar    bh,0x5a
  402645:	mov    eax,0x8b008750
  40264a:	mov    edi,edi
  40264c:	int3   
  40264d:	add    BYTE PTR [ebp+0x0],dl
  402650:	pop    ss
  402651:	imul   ebp,DWORD PTR ds:[edi-0x74ff1800],0xffffff90
  402659:	adc    ebx,0x747400a1
  40265f:	add    DWORD PTR [eax],eax
  402661:	push   eax
  402662:	inc    DWORD PTR [ebp+0x3c0041cb]
  402668:	inc    ebp
  402669:	cmovge eax,DWORD PTR [ebx]
  40266c:	adc    al,0xa
  40266e:	pop    edx
  40266f:	adc    al,BYTE PTR [ecx]
  402671:	lea    eax,[ecx]
  402673:	lea    edx,[esi+0x0]
  402676:	add    BYTE PTR [ebx+edi*4],al
  402679:	xlat   BYTE PTR ds:[ebx]
  40267a:	test   BYTE PTR [edi],0x0
  40267d:	or     BYTE PTR [eax],al
  40267f:	int3   
  402680:	jge    0x402683
  402682:	inc    esp
  402683:	fucomi st,st(3)
  402685:	inc    DWORD PTR [ecx]
  402687:	add    BYTE PTR [ebx-0x51fff38b],cl
  40268d:	pop    esp
  40268e:	mov    ch,0x1f
  402690:	add    bh,al
  402692:	cmovne eax,DWORD PTR [edi-0x74]
  402696:	jp     0x4026b8
  402698:	mov    eax,DWORD PTR [ebp+0xdd558b]
  40269e:	cmp    edi,0x4b
  4026a1:	mov    ebp,0x9adc
  4026a6:	add    al,0xff
  4026a8:	out    0x14,al
  4026aa:	inc    edi
  4026ab:	fadd   DWORD PTR [eax]
  4026ad:	add    BYTE PTR [ebp+0x45],al
  4026b0:	push   ebp
  4026b1:	(bad)  
  4026b3:	add    dl,ah
  4026b5:	mov    ebx,0x8b0d1a
  4026ba:	add    BYTE PTR [ebp-0x27d4b487],cl
  4026c0:	inc    ebp
  4026c1:	mov    ecx,esp
  4026c3:	inc    ebp
  4026c4:	add    DWORD PTR [eax],eax
  4026c6:	call   0x923576ca
  4026cb:	mov    ah,0x0
  4026cd:	add    BYTE PTR [eax],al
  4026cf:	add    BYTE PTR [esi-0x29],dh
  4026d2:	std    
  4026d3:	inc    DWORD PTR [ebp-0x18]
  4026d6:	or     al,0x8b
  4026d8:	add    al,al
  4026da:	int3   
  4026db:	add    bl,ch
  4026dd:	pushf  
  4026de:	jmp    0x895acc1
  4026e3:	add    DWORD PTR [esi-0x416f77],0x0
  4026ea:	xor    edi,edi
  4026ec:	add    DWORD PTR [eax],0x1
  4026ef:	mov    ecx,DWORD PTR [ebx]
  4026f1:	inc    eax
  4026f2:	in     eax,dx
  4026f3:	mov    dh,0x8b
  4026f5:	call   FWORD PTR [ebp-0x1]
  4026f8:	inc    edi
  4026f9:	fs cli 
  4026fb:	inc    eax
  4026fc:	int3   
  4026fd:	je     0x4026ff
  4026ff:	add    ah,cl
  402701:	or     DWORD PTR [ebx-0x46bbc475],0xffffffca
  402708:	add    BYTE PTR [ebx+0x407b45cc],cl
  40270e:	sub    DWORD PTR [esi+0x45466a00],edi
  402714:	add    DWORD PTR [ecx],0xffffff8b
  402717:	call   0xf78a65cd
  40271c:	add    BYTE PTR [eax],al
  40271e:	mov    ecx,DWORD PTR [ebx-0x384dd346]
  402724:	add    BYTE PTR [ecx],al
  402726:	add    BYTE PTR [ebx+0x450003cc],cl
  40272c:	and    al,0x87
  40272e:	sbb    DWORD PTR [esi+0x8bcc01],0x60
  402735:	fild   QWORD PTR [ebx]
  402737:	push   edx
  402738:	add    BYTE PTR [edx-0x75],ch
  40273b:	int3   
  40273c:	add    BYTE PTR [eax],al
  40273e:	dec    ebp
  40273f:	add    BYTE PTR ds:0x45d03dc0,bh
  402745:	int3   
  402746:	add    eax,DWORD PTR [ecx]
  402748:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40274a:	arpl   WORD PTR [ecx],sp
  40274c:	adc    BYTE PTR [eax],al
  40274e:	inc    ebp
  40274f:	adc    BYTE PTR [eax],al
  402751:	adc    eax,0x2338cc74
  402756:	dec    ebx
  402757:	loopne 0x4027a9
  402759:	push   eax
  40275a:	mov    eax,DWORD PTR [ebp+0x27]
  40275d:	test   BYTE PTR [ebx],al
  40275f:	sti    
  402760:	dec    esp
  402762:	inc    ebp
  402763:	rol    BYTE PTR [eax],0xcc
  402766:	push   ebp
  402767:	add    BYTE PTR [ebx+ebp*1-0x15],cl
  40276b:	out    dx,eax
  40276c:	(bad)  
  40276d:	mov    esi,DWORD PTR [ebp+eax*4+0x7c]
  402771:	es push ebp
  402773:	or     ecx,DWORD PTR [ebx+0x45c700]
  402779:	inc    DWORD PTR [ebp-0x18]
  40277c:	inc    ebx
  40277d:	mov    eax,0x18bb79b
  402782:	add    BYTE PTR [ecx],al
  402784:	out    0x4b,al
  402786:	ds sar bh,0x4
  40278a:	mov    eax,DWORD PTR [eax]
  40278c:	add    BYTE PTR [edi+edi*8+0x1],dh
  402790:	cmp    edx,DWORD PTR [ecx+eax*4-0x7cffff4a]
  402797:	add    DWORD PTR [ebx+0xd6939c],eax
  40279d:	mov    eax,DWORD PTR [ebx-0x3333f400]
  4027a3:	int3   
  4027a4:	lods   eax,DWORD PTR ds:[esi]
  4027a5:	fs pop edi
  4027a7:	out    0xc0,al
  4027a9:	add    BYTE PTR [eax+eax*1],al
  4027ac:	push   ds
  4027ad:	paddsw mm4,mm3
  4027b0:	inc    DWORD PTR [eax]
  4027b2:	mov    DWORD PTR [eax],eax
  4027b4:	int3   
  4027b5:	add    BYTE PTR [eax],dl
  4027b7:	mov    eax,DWORD PTR [esi+0x39]
  4027ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027bb:	push   ds
  4027bc:	mov    eax,DWORD PTR [ebp+0x10]
  4027bf:	push   esi
  4027c0:	pushf  
  4027c1:	hlt    
  4027c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027c3:	and    eax,DWORD PTR [eax]
  4027c5:	adc    eax,0x45000085
  4027ca:	add    bh,bh
  4027cc:	cwde   
  4027cd:	lahf   
  4027ce:	clc    
  4027cf:	jo     0x40275c
  4027d1:	int3   
  4027d2:	test   DWORD PTR [ebx+0x183ddaa9],ecx
  4027d8:	int3   
  4027d9:	add    BYTE PTR [ebp+0x56],al
  4027dc:	fisttp QWORD PTR [ebp+0x11355d00]
  4027e2:	and    ecx,esi
  4027e4:	or     DWORD PTR [ebx+0x5c711500],0xffffffb4
  4027eb:	or     al,0x8b
  4027ed:	add    al,0x85
  4027ef:	add    DWORD PTR [ecx],eax
  4027f1:	pop    ebp
  4027f2:	mov    ecx,DWORD PTR [ecx+0x2fa1a27a]
  4027f8:	mov    eax,DWORD PTR [eax]
  4027fa:	add    DWORD PTR [eax],eax
  4027fc:	pop    es
  4027fd:	popf   
  4027fe:	cwde   
  4027ff:	push   ds
  402800:	int3   
  402801:	jne    0x402818
  402803:	add    BYTE PTR [ebx-0x4a7c0075],al
  402809:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40280a:	jo     0x4027ea
  40280c:	int3   
  40280d:	mov    eax,DWORD PTR [eax]
  40280f:	call   0xe7aa4fae
  402814:	adc    DWORD PTR [eax],0x33
  402817:	pop    ebp
  402818:	mov    ecx,DWORD PTR [ebx-0x458fff75]
  40281e:	imul   esp,ebx,0x898bc7
  402824:	imul   esp,DWORD PTR [ebx+0x4f],0x4d7400af
  40282b:	int3   
  40282c:	push   ebp
  40282d:	add    BYTE PTR [eax],al
  40282f:	inc    esi
  402830:	jge    0x4027de
  402832:	and    eax,0xcc5501
  402837:	add    BYTE PTR [esi+0x501d7a01],ah
  40283d:	mov    eax,DWORD PTR [eax]
  40283f:	mov    DWORD PTR [eax],eax
  402841:	(bad)  
  402842:	push   eax
  402843:	push   0xffffffa6
  402845:	mov    eax,ds:0x8c7ffa0
  40284a:	or     BYTE PTR [ebx-0x1dc2593d],cl
  402850:	fld    QWORD PTR [eax]
  402852:	int3   
  402853:	inc    DWORD PTR [eax]
  402855:	add    BYTE PTR [ebx+0xf75358b],cl
  40285b:	xor    eax,0x7508cc0c
  402860:	or     eax,DWORD PTR [esi+0x15eb345b]
  402866:	add    esp,ecx
  402868:	(bad)  
  402869:	inc    DWORD PTR [eax]
  40286b:	or     BYTE PTR [ebx],al
  40286d:	inc    edx
  40286e:	xchg   esi,eax
  40286f:	ficom  DWORD PTR [eax-0x1]
  402872:	jmp    0x4028e8
  402874:	test   eax,0xdea7a8
  402879:	int3   
  40287a:	mov    eax,DWORD PTR [eax]
  40287c:	add    BYTE PTR [ecx],al
  40287e:	mov    DWORD PTR [ebp-0xc619e65],eax
  402884:	or     ah,cl
  402886:	add    BYTE PTR [ebx+0x5b12a284],al
  40288c:	add    BYTE PTR [ebx+eax*4-0x34],dh
  402890:	add    BYTE PTR [ebx-0x5e5f33f8],al
  402896:	xchg   edi,eax
  402897:	imul   eax,DWORD PTR [eax],0x458b8b8b
  40289d:	mul    DWORD PTR [ebp-0x33a2ff83]
  4028a3:	inc    ebp
  4028a4:	int3   
  4028a5:	mov    DWORD PTR [esp+ecx*1+0x16],esi
  4028a9:	arpl   WORD PTR [ebx+0x71],bp
  4028ac:	inc    DWORD PTR [ebx-0x9830000]
  4028b2:	mov    eax,ds:0x89746a69
  4028b7:	jne    0x4028a5
  4028b9:	jmp    eax
  4028bb:	call   0xcae8e726
  4028c0:	int3   
  4028c1:	add    BYTE PTR [eax],al
  4028c3:	push   0x39
  4028c5:	popa   
  4028c6:	call   0x83ff:0x8b0133f2
  4028cd:	or     al,0xcc
  4028cf:	push   0xffffffaa
  4028d1:	push   edx
  4028d2:	mov    al,ds:0x45001c
  4028d7:	int3   
  4028d8:	stos   DWORD PTR es:[edi],eax
  4028d9:	mov    ss,WORD PTR [edx-0x337433fe]
  4028df:	add    eax,DWORD PTR [eax]
  4028e1:	add    ah,ch
  4028e3:	inc    ebp
  4028e4:	sub    dl,BYTE PTR [edi+0x14523fa]
  4028ea:	add    DWORD PTR [eax],eax
  4028ec:	data16 ja 0x402953
  4028ef:	xor    al,0x85
  4028f1:	jmp    0x402880
  4028f3:	test   DWORD PTR [eax],eax
  4028f5:	add    BYTE PTR [esp+ecx*8],cl
  4028f8:	pop    ss
  4028f9:	mov    ah,0xee
  4028fb:	ins    DWORD PTR es:[edi],dx
  4028fc:	sub    esp,0xffffffcc
  4028ff:	add    BYTE PTR [ebp-0x74490d62],al
  402905:	call   DWORD PTR [ebp-0x75]
  402908:	je     0x40290a
  40290a:	add    bh,bh
  40290c:	pop    esp
  40290d:	pusha  
  40290e:	xor    eax,0x8b8356ac
  402913:	add    BYTE PTR ds:0x941d88,cl
  402919:	int3   
  40291a:	push   ebp
  40291b:	fld    QWORD PTR [eax]
  40291d:	mov    ebp,esp
  40291f:	inc    esi
  402920:	jae    0x4028f7
  402922:	xchg   ebx,eax
  402923:	cmp    eax,0x100108
  402928:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402929:	mov    eax,0xff0d3c
  40292e:	mov    esi,DWORD PTR [ebx]
  402930:	test   esp,ecx
  402932:	add    BYTE PTR [ecx-0x38c6c1e9],cl
  402938:	call   0xc37339c0
  40293d:	push   ebp
  40293e:	mov    ebp,esp
  402940:	push   ecx
  402941:	push   ecx
  402942:	push   esi
  402943:	push   edi
  402944:	lea    eax,[ebp-0x4]
  402947:	push   eax
  402948:	push   0x1
  40294a:	call   DWORD PTR ds:0x4180c4
  402950:	mov    eax,DWORD PTR [ebp-0x4]
  402953:	mov    ecx,DWORD PTR [eax]
  402955:	lea    edx,[ebp-0x8]
  402958:	push   edx
  402959:	push   0x4181e0
  40295e:	push   eax
  40295f:	call   DWORD PTR [ecx]
  402961:	xor    ecx,ecx
  402963:	cmp    eax,0x80004002
  402968:	setne  cl
  40296b:	mov    ds:0x4194b8,eax
  402970:	mov    eax,0xa2fd5397
  402975:	dec    ecx
  402976:	and    ecx,0xd40fd03
  40297c:	add    ecx,0xb8de
  402982:	sub    eax,ecx
  402984:	mov    ecx,DWORD PTR ds:0x41936c
  40298a:	mov    DWORD PTR [ecx],eax
  40298c:	add    DWORD PTR ds:0x41936c,0x4
  402993:	mov    esi,DWORD PTR ds:0x41936c
  402999:	call   DWORD PTR ds:0x418054
  40299f:	push   0x3
  4029a1:	pop    edi
  4029a2:	mov    ecx,edi
  4029a4:	xor    eax,eax
  4029a6:	push   ebx
  4029a7:	mov    edx,DWORD PTR ds:0x4194b8
  4029ad:	mov    ebx,DWORD PTR ds:0x4194c8
  4029b3:	xor    edx,0x64d628a7
  4029b9:	add    edx,DWORD PTR [ebx+eax*4]
  4029bc:	mov    DWORD PTR [esi],edx
  4029be:	xor    edx,edx
  4029c0:	add    esi,0x4
  4029c3:	cmp    ecx,edi
  4029c5:	setne  dl
  4029c8:	lea    ecx,[edx+0x2]
  4029cb:	add    eax,ecx
  4029cd:	cmp    eax,0xa2
  4029d2:	jb     0x4029a7
  4029d4:	mov    ebx,edi
  4029d6:	call   DWORD PTR ds:0x41803c
  4029dc:	xor    eax,eax
  4029de:	mov    ecx,eax
  4029e0:	shl    ecx,0x2
  4029e3:	add    ecx,0x40af01
  4029e9:	mov    ecx,DWORD PTR [ecx]
  4029eb:	sub    ecx,DWORD PTR ds:0x4194b8
  4029f1:	sub    ecx,0x2d68ff1f
  4029f7:	mov    DWORD PTR [esi],ecx
  4029f9:	xor    ecx,ecx
  4029fb:	add    esi,0x4
  4029fe:	cmp    ebx,edi
  402a00:	setne  cl
  402a03:	lea    ebx,[ecx+0x2]
  402a06:	add    eax,ebx
  402a08:	cmp    eax,0xaf
  402a0d:	jb     0x4029de
  402a0f:	mov    eax,esi
  402a11:	mov    esi,edi
  402a13:	xor    ecx,ecx
  402a15:	pop    ebx
  402a16:	mov    edx,DWORD PTR ds:0x4194d0
  402a1c:	mov    edx,DWORD PTR [edx+ecx*4]
  402a1f:	sub    edx,DWORD PTR ds:0x4194b8
  402a25:	add    edx,0x10ee46c2
  402a2b:	mov    DWORD PTR [eax],edx
  402a2d:	xor    edx,edx
  402a2f:	add    eax,0x4
  402a32:	cmp    esi,edi
  402a34:	setne  dl
  402a37:	lea    esi,[edx+0x2]
  402a3a:	add    ecx,esi
  402a3c:	cmp    ecx,0x2
  402a3f:	jb     0x402a16
  402a41:	mov    cl,BYTE PTR ds:0x4194b8
  402a47:	sub    cl,0x2
  402a4a:	pop    edi
  402a4b:	mov    BYTE PTR [eax],cl
  402a4d:	pop    esi
  402a4e:	leave  
  402a4f:	ret    
  402a50:	cmp    DWORD PTR [ecx],esi
  402a52:	mov    dl,0xcc
  402a54:	inc    esi
  402a55:	push   esi
  402a56:	int3   
  402a57:	rcl    BYTE PTR [ebx],0x7b
  402a5a:	clc    
  402a5b:	sbb    al,BYTE PTR [ebp+0x88d00dd]
  402a61:	je     0x402a63
  402a63:	int3   
  402a64:	psrad  mm5,mm5
  402a67:	out    dx,eax
  402a68:	in     al,dx
  402a69:	add    DWORD PTR [eax],eax
  402a6b:	add    BYTE PTR [ebx],dl
  402a6d:	fsub   QWORD PTR [esi+0xcff5d1c]
  402a73:	or     BYTE PTR [eax],al
  402a75:	jmp    0x402a7f
  402a77:	add    BYTE PTR [ecx+edi*4],dl
  402a7a:	leave  
  402a7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a7c:	add    al,0x0
  402a7e:	mov    ebp,DWORD PTR [edx+0x46]
  402a81:	jno    0x402ac0
  402a83:	fwait
  402a84:	add    DWORD PTR [eax],eax
  402a86:	adc    BYTE PTR [eax],al
  402a88:	inc    esi
  402a89:	jmp    eax
  402a8b:	mov    ecx,DWORD PTR [eax+ebp*1]
  402a8e:	out    0xff,eax
  402a90:	add    al,0x1
  402a92:	push   esi
  402a93:	int3   
  402a94:	lods   al,BYTE PTR ds:[esi]
  402a95:	outs   dx,BYTE PTR ds:[esi]
  402a96:	push   ebx
  402a97:	mov    edx,0x83ff8bcc
  402a9c:	mov    ecx,DWORD PTR [eax]
  402a9e:	int3   
  402a9f:	in     al,dx
  402aa0:	push   ebp
  402aa1:	inc    ecx
  402aa2:	sti    
  402aa3:	add    DWORD PTR [eax],0xffffffff
  402aa6:	mov    eax,DWORD PTR [esi+0x4e]
  402aa9:	sub    DWORD PTR [esi+0x30083dd],0x8b8945ff
  402ab3:	rcr    al,0x71
  402ab6:	and    eax,0x8b0102
  402abb:	int3   
  402abc:	mov    eax,0x74dc6edb
  402ac1:	mov    edi,edi
  402ac3:	int3   
  402ac4:	call   0x12862ac8
  402ac9:	fdiv   QWORD PTR [eax-0x2f]
  402acc:	mov    eax,eax
  402ace:	mov    eax,DWORD PTR [ecx]
  402ad0:	add    BYTE PTR [eax+0xcc8e72],ah
  402ad6:	test   DWORD PTR [eax],eax
  402ad8:	or     DWORD PTR [ebx+0x1c26dde0],0x74
  402adf:	jne    0x402ae5
  402ae1:	add    DWORD PTR [ebx+0x5bdb3555],eax
  402ae7:	xchg   edi,eax
  402ae8:	push   0xffffffcc
  402aea:	call   0x8b482bda
  402aef:	jmp    edi
  402af1:	jne    0x402b4b
  402af3:	xchg   esp,eax
  402af4:	jmp    0x402ad6
  402af6:	add    BYTE PTR [eax],al
  402af8:	cwde   
  402af9:	xlat   BYTE PTR ds:[ebx]
  402afa:	push   edi
  402afb:	ror    esp,1
  402afd:	adc    eax,0xcc85e800
  402b02:	add    BYTE PTR [ecx-0x2d5477db],cl
  402b08:	mov    eax,DWORD PTR [ebp+0x1c5e0000]
  402b0e:	lahf   
  402b0f:	je     0x402a9c
  402b11:	inc    DWORD PTR [eax]
  402b13:	add    DWORD PTR [ebx-0x1f7c3334],ecx
  402b19:	mov    dl,0x6f
  402b1b:	dec    ebx
  402b1c:	push   eax
  402b1d:	add    BYTE PTR [eax],dl
  402b1f:	add    bh,ah
  402b21:	or     eax,0xccbc83
  402b26:	add    BYTE PTR [eax+eax*1],al
  402b29:	mov    eax,DWORD PTR [ecx]
  402b2b:	push   ebp
  402b2c:	xor    ebp,DWORD PTR [ecx-0x66]
  402b2f:	and    BYTE PTR [eax],al
  402b31:	add    BYTE PTR [eax],al
  402b33:	push   esi
  402b34:	mov    esp,0xfbc8aa5
  402b39:	add    BYTE PTR [ebx],al
  402b3b:	jmp    0x402ac0
  402b3d:	add    BYTE PTR [ebx-0x6c22bc00],cl
  402b43:	cmp    cl,ah
  402b45:	add    esi,DWORD PTR [ebp+0x8]
  402b48:	pop    ecx
  402b49:	jnp    0x402b07
  402b4b:	lods   al,BYTE PTR ds:[esi]
  402b4c:	int3   
  402b4d:	or     BYTE PTR [ebp+0x55],dh
  402b50:	mov    edi,edi
  402b52:	mov    eax,DWORD PTR [eax]
  402b54:	pop    es
  402b55:	std    
  402b56:	rcl    DWORD PTR [eax-0x76ffff8c],cl
  402b5c:	outs   dx,BYTE PTR ds:[esi]
  402b5d:	inc    eax
  402b5e:	push   edx
  402b5f:	fwait
  402b60:	dec    ebp
  402b61:	test   DWORD PTR [ebx*8-0x337413ff],ecx
  402b68:	sub    al,dh
  402b6a:	scas   eax,DWORD PTR es:[edi]
  402b6b:	dec    ebp
  402b6c:	add    DWORD PTR [eax],eax
  402b6e:	add    BYTE PTR [ebx-0x6eb371db],cl
  402b74:	add    BYTE PTR [eax],al
  402b76:	add    BYTE PTR [eax],al
  402b78:	mov    eax,DWORD PTR [eax]
  402b7a:	add    DWORD PTR [ecx+ebp*4-0xb],esi
  402b7e:	jae    0x402b1d
  402b80:	add    BYTE PTR [eax],al
  402b82:	int3   
  402b83:	xor    ecx,edx
  402b85:	jecxz  0x402b54
  402b87:	nop
  402b88:	add    eax,DWORD PTR [eax]
  402b8a:	or     BYTE PTR [ebp+0x0],dh
  402b8d:	dec    esp
  402b8f:	sub    DWORD PTR [esi-0x76d7dfaf],0x0
  402b96:	add    esp,ecx
  402b98:	imul   ebp,edx,0x6a0fb848
  402b9e:	add    BYTE PTR [ebx+0xc008b75],cl
  402ba4:	jp     0x402be7
  402ba6:	gs mov bl,0xcc
  402ba9:	push   0x0
  402bab:	add    al,0x3d
  402bad:	je     0x402baa
  402baf:	fadd   DWORD PTR [ebp-0x77]
  402bb2:	mov    DWORD PTR [ebx-0x7cfffff1],eax
  402bb8:	mov    esp,0xdbd3c1
  402bbd:	mov    eax,DWORD PTR [ecx]
  402bbf:	mov    ebp,esp
  402bc1:	inc    ecx
  402bc2:	xchg   ah,bl
  402bc4:	adc    eax,0xcc00ff
  402bc9:	mov    eax,DWORD PTR [ebp-0x50563715]
  402bcf:	cwde   
  402bd0:	push   ebp
  402bd1:	fld    QWORD PTR [eax+eax*1]
  402bd4:	iret   
  402bd5:	jnp    0x402c4e
  402bd7:	sahf   
  402bd8:	add    BYTE PTR [eax],al
  402bda:	mov    eax,DWORD PTR [ecx]
  402bdc:	add    bh,bh
  402bde:	mov    eax,DWORD PTR [eax]
  402be0:	or     DWORD PTR gs:[esi-0x38],ecx
  402be4:	int3   
  402be5:	add    BYTE PTR [ebx-0x7b4caa00],cl
  402beb:	test   DWORD PTR [eax],ecx
  402bed:	add    BYTE PTR [ecx+0x83389ff],cl
  402bf3:	jmp    FWORD PTR [edi]
  402bf5:	sti    
  402bf6:	std    
  402bf7:	add    al,0xdd
  402bfa:	xor    eax,DWORD PTR [ebp-0x300b668a]
  402c00:	add    BYTE PTR [eax],cl
  402c02:	add    BYTE PTR [eax],al
  402c04:	add    DWORD PTR [ebx-0x1d023f7b],ecx
  402c0a:	cmp    esp,DWORD PTR [ecx+0x45]
  402c0d:	lea    eax,[ebp-0x2021f334]
  402c13:	xchg   esi,eax
  402c14:	add    DWORD PTR [eax],0x1
  402c17:	lea    eax,[eax+eax*1]
  402c1a:	int3   
  402c1b:	add    BYTE PTR [edx],ch
  402c1d:	xor    eax,0xc0ac3f
  402c22:	adc    eax,0xe78dc074
  402c27:	xor    ecx,DWORD PTR [ebx+0x46ffcc01]
  402c2d:	add    bh,bh
  402c2f:	add    BYTE PTR [edx+eax*2],dl
  402c32:	xor    eax,0x8b00009c
  402c37:	add    BYTE PTR [ecx-0x3396bc94],bl
  402c3d:	int3   
  402c3e:	add    eax,ebp
  402c40:	mov    DWORD PTR [ebx-0x21de0100],ecx
  402c46:	jae    0x402c9e
  402c48:	mov    eax,DWORD PTR [eax]
  402c4a:	inc    DWORD PTR [eax]
  402c4c:	mov    bl,0xde
  402c4e:	mov    al,ds:0x17455ab
  402c53:	int3   
  402c54:	add    esp,ecx
  402c56:	mov    DWORD PTR [eax],eax
  402c58:	aad    0x66
  402c5a:	call   0x2e8:0x4d010154
  402c61:	arpl   WORD PTR [ecx],cx
  402c63:	rol    DWORD PTR [eax],1
  402c65:	mov    ebx,ebp
  402c67:	int3   
  402c68:	mov    ecx,DWORD PTR [ecx-0x47170000]
  402c6e:	outs   dx,BYTE PTR ds:[esi]
  402c6f:	pop    edi
  402c70:	add    BYTE PTR [ebx],al
  402c72:	jne    0x402bf9
  402c74:	mov    ds:0x8b737df9,al
  402c79:	dec    esp
  402c7b:	inc    DWORD PTR [eax]
  402c7d:	int3   
  402c7e:	add    al,0xcc
  402c80:	in     al,dx
  402c81:	repnz xchg ecx,eax
  402c83:	ds int3 
  402c85:	adc    BYTE PTR [eax],cl
  402c87:	add    DWORD PTR [ebx],edi
  402c89:	fcom   QWORD PTR [ebx]
  402c8b:	adc    al,0x0
  402c8d:	add    BYTE PTR ds:0x83838b00,dl
  402c93:	add    esi,edx
  402c95:	cmp    eax,0xccb54d
  402c9a:	add    al,0x8b
  402c9c:	and    eax,0x29a96a
  402ca1:	dec    DWORD PTR [ebx+0x50ddcc00]
  402ca7:	mov    eax,DWORD PTR [edx+ebp*2+0xb]
  402cab:	lods   al,BYTE PTR ds:[esi]
  402cac:	adc    BYTE PTR ds:0x6a268b00,dl
  402cb2:	xchg   esp,eax
  402cb3:	sub    DWORD PTR [ebx+0xc0cce0],eax
  402cb9:	add    DWORD PTR [eax],eax
  402cbb:	mov    DWORD PTR [edx+ebp*2+0x7],0xcc6aac
  402cc3:	mov    DWORD PTR [edi],esp
  402cc5:	push   0x7f
  402cc7:	sub    DWORD PTR [ebx-0x13fbfffd],ecx
  402ccd:	add    BYTE PTR [ebp-0x75],dl
  402cd0:	inc    esp
  402cd1:	push   0x3
  402cd3:	lods   al,BYTE PTR ds:[esi]
  402cd4:	fisttp QWORD PTR [ebx+0x6a28cc00]
  402cda:	push   0x29
  402cdc:	mov    ecx,esp
  402cde:	in     al,dx
  402cdf:	inc    ebp
  402ce0:	or     al,0x6a
  402ce2:	mov    edi,edi
  402ce4:	push   ebp
  402ce5:	sub    eax,0x858bb654
  402cea:	mov    eax,DWORD PTR [ebp+0x55]
  402ced:	sub    eax,0x8b15a4fc
  402cf2:	(bad)  
  402cf3:	call   0x40a283
  402cf8:	ret    
  402cf9:	fs ins DWORD PTR es:[edi],dx
  402cfb:	cmp    DWORD PTR [edi-0x74007275],ebx
  402d01:	pusha  
  402d02:	cmc    
  402d03:	ja     0x402ca4
  402d05:	mov    edx,DWORD PTR [eax]
  402d07:	or     BYTE PTR [ebp-0x7a8bfcb3],al
  402d0d:	cmp    esi,DWORD PTR [ecx+0x73]
  402d10:	enter  0x338b,0x50
  402d14:	mov    esp,esp
  402d16:	clc    
  402d17:	cld    
  402d18:	loope  0x402ce6
  402d1a:	call   0x10962eeb
  402d1f:	add    bh,bh
  402d21:	adc    dl,al
  402d23:	aaa    
  402d24:	push   ebx
  402d25:	mov    DWORD PTR [eax+0x45],edx
  402d28:	adc    eax,0x8546fc6b
  402d2d:	int3   
  402d2e:	call   0x120f4be
  402d33:	add    BYTE PTR [ebx-0x6ef9cbec],cl
  402d39:	jmp    FWORD PTR [edx+0x56]
  402d3c:	bndstx [ecx],bnd0
  402d3f:	or     BYTE PTR [ecx-0x39],ah
  402d42:	push   0x8
  402d44:	int3   
  402d45:	mov    edi,edi
  402d47:	je     0x402d49
  402d49:	and    DWORD PTR [eax+0xfe84f],esi
  402d4f:	inc    esi
  402d50:	add    BYTE PTR [edi+0x4],ah
  402d53:	sbb    eax,0x33000063
  402d58:	fld    QWORD PTR [eax]
  402d5a:	add    ecx,DWORD PTR [ebx-0x7d167a75]
  402d60:	retf   0x8b
  402d63:	add    BYTE PTR [ecx],al
  402d65:	imul   ecx,DWORD PTR [eax],0x47
  402d68:	add    DWORD PTR [bp+0x50],0x0
  402d6d:	add    BYTE PTR [ebp+0x49f6008b],al
  402d73:	mov    ebx,DWORD PTR [eax+ecx*1-0x34]
  402d77:	inc    DWORD PTR [ebx]
  402d79:	jae    0x402d87
  402d7b:	fwait
  402d7c:	in     eax,dx
  402d7d:	add    BYTE PTR [eax],al
  402d7f:	add    BYTE PTR [eax],al
  402d81:	jmp    0x402d06
  402d83:	mov    ebp,ebx
  402d85:	jae    0x402da2
  402d87:	ins    BYTE PTR es:[edi],dx
  402d88:	add    eax,0xdd000800
  402d8d:	test   BYTE PTR [eax],dl
  402d8f:	inc    ebx
  402d90:	or     BYTE PTR [ecx+0x100c0ff],0xcc
  402d97:	add    BYTE PTR [ebx-0x57590795],cl
  402d9d:	test   ebp,ebx
  402d9f:	push   0x50
  402da1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402da2:	adc    al,0x83
  402da4:	(bad)  
  402da5:	jmp    0x402d73
  402da7:	dec    DWORD PTR [ebx+0x18b00ff]
  402dad:	fstp   DWORD PTR [ecx+0x46ccc1ac]
  402db3:	push   eax
  402db4:	add    ecx,DWORD PTR [eax+0x61e8f6]
  402dba:	int3   
  402dbb:	adc    eax,0xdd01cc0f
  402dc0:	frstor [edi-0x24]
  402dc3:	not    DWORD PTR [edx+0x33ff0003]
  402dc9:	add    BYTE PTR [esi],0xa4
  402dcc:	sbb    BYTE PTR [eax+eax*1],al
  402dcf:	je     0x402dd1
  402dd1:	int3   
  402dd2:	pop    ebp
  402dd3:	mov    esp,ecx
  402dd5:	mov    ds:0x1fbc8b,eax
  402dda:	inc    ebp
  402ddb:	test   esp,ecx
  402ddd:	lock mul BYTE PTR gs:[edi-0x1]
  402de2:	je     0x402d6f
  402de4:	je     0x402d73
  402de6:	inc    ebp
  402de7:	mov    edx,DWORD PTR [eax]
  402de9:	xchg   edi,eax
  402dea:	(bad)  
  402deb:	jl     0x402db8
  402ded:	inc    ebp
  402dee:	lea    eax,[eax]
  402df0:	add    BYTE PTR [edx+ebp*1],bl
  402df3:	add    edi,DWORD PTR [ecx+0x5d005d8b]
  402df9:	push   esi
  402dfa:	add    bh,bh
  402dfc:	mov    eax,ecx
  402dfe:	(bad)  
  402dff:	adc    cl,BYTE PTR [ebx-0x33feff34]
  402e05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e06:	out    0x34,al
  402e08:	jmp    0x196fad9
  402e0d:	add    DWORD PTR [ebp-0x67267700],ecx
  402e13:	lods   al,BYTE PTR ds:[esi]
  402e14:	or     DWORD PTR [ebp+0x2aeccc8b],ecx
  402e1a:	(bad)  
  402e1b:	fsub   QWORD PTR [edx+0x0]
  402e1e:	int3   
  402e1f:	push   0x1
  402e21:	int3   
  402e22:	or     al,0x0
  402e24:	mov    eax,edi
  402e26:	imul   BYTE PTR [eax+0x8b6a73]
  402e2c:	or     bh,cl
  402e2e:	xor    eax,0x5dff6f03
  402e33:	mov    edx,DWORD PTR [ebp+0x1]
  402e36:	int3   
  402e37:	add    BYTE PTR [ecx+0x7314ae92],cl
  402e3d:	add    BYTE PTR [eax],al
  402e3f:	add    BYTE PTR [ebx+esi*4],cl
  402e42:	sub    eax,DWORD PTR [edi]
  402e44:	jg     0x402e46
  402e46:	or     BYTE PTR [esi+0x8],dl
  402e49:	add    BYTE PTR [eax],al
  402e4b:	add    BYTE PTR [ebp-0x59],al
  402e4e:	fidiv  DWORD PTR [edi+eax*4]
  402e51:	push   esi
  402e52:	inc    DWORD PTR [esi+0x0]
  402e55:	add    ebx,DWORD PTR [edx-0x27]
  402e58:	add    BYTE PTR [ebx+0x5dcc00eb],cl
  402e5e:	mov    edi,edi
  402e60:	add    BYTE PTR [ebx-0x1bd050],ah
  402e66:	int3   
  402e67:	ror    BYTE PTR [ebx+0x32eea0a3],0x0
  402e6e:	add    bh,bh
  402e70:	int3   
  402e71:	int3   
  402e72:	int3   
  402e73:	add    BYTE PTR [ebx+0x6faa7a4a],cl
  402e79:	push   ebp
  402e7a:	add    DWORD PTR [ebx-0x8cb3e01],ecx
  402e80:	inc    esp
  402e81:	add    BYTE PTR [eax],al
  402e83:	add    BYTE PTR [edx+0x0],ch
  402e86:	add    DWORD PTR [ebx+0x14ba30c0],ecx
  402e8c:	add    BYTE PTR [bx+si],al
  402e8f:	int3   
  402e90:	adc    BYTE PTR [edi-0x76caedd4],al
  402e96:	fld    QWORD PTR [eax]
  402e98:	mov    DWORD PTR [ebp+0x0],eax
  402e9b:	add    bh,bh
  402e9d:	push   0xf
  402e9f:	shl    DWORD PTR [ecx+0x8b0000],cl
  402ea5:	fwait
  402ea6:	js     0x402f22
  402ea8:	ins    BYTE PTR es:[edi],dx
  402ea9:	inc    ebp
  402eaa:	int3   
  402eab:	push   esi
  402eac:	add    al,0x8b
  402eae:	add    bh,bh
  402eb0:	add    BYTE PTR [eax],bh
  402eb2:	sbb    edi,esp
  402eb4:	imul   eax,DWORD PTR [eax],0x8
  402eb7:	add    al,0x8
  402eb9:	call   0x8b40ed6
  402ebe:	int3   
  402ebf:	test   edi,edi
  402ec1:	or     al,0x4d
  402ec3:	mov    eax,DWORD PTR [eax]
  402ec5:	mov    ebp,0xcc7f741d
  402eca:	(bad)  
  402ecc:	push   eax
  402ecd:	ins    DWORD PTR es:[edi],dx
  402ece:	pop    ecx
  402ecf:	clc    
  402ed0:	inc    edi
  402ed1:	mov    ecx,DWORD PTR [ecx-0x7aff33f8]
  402ed7:	add    DWORD PTR [eax],eax
  402ed9:	inc    esi
  402eda:	xor    ch,0x92
  402edd:	(bad)  
  402ede:	int3   
  402edf:	add    BYTE PTR [ecx],al
  402ee1:	js     0x402ef7
  402ee3:	sti    
  402ee4:	add    DWORD PTR [ecx+0x748b0074],ecx
  402eea:	adc    BYTE PTR [eax],al
  402eec:	int3   
  402eed:	push   edx
  402eee:	aad    0x3
  402ef0:	addr16 inc esi
  402ef2:	add    BYTE PTR [edi],cl
  402ef4:	add    BYTE PTR [ebx],cl
  402ef6:	mov    dl,0x3
  402ef8:	popa   
  402ef9:	jne    0x402e84
  402efb:	add    BYTE PTR [eax],al
  402efd:	add    DWORD PTR [ecx],eax
  402eff:	add    BYTE PTR [ebx+0x7b143fd2],al
  402f05:	mov    edx,DWORD PTR ds:0x62b30085
  402f0b:	aas    
  402f0c:	aad    0x75
  402f0e:	push   eax
  402f0f:	test   DWORD PTR [ebp+0x74c7cc],ecx
  402f15:	lea    ebx,[ecx+0x23]
  402f18:	imul   eax,DWORD PTR [eax],0xb5100074
  402f1e:	jae    0x402f76
  402f20:	adc    ebp,esp
  402f22:	adc    eax,0xccff
  402f27:	int3   
  402f28:	push   ebp
  402f29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f2a:	adc    DWORD PTR [ebp+0x3300005e],esi
  402f30:	jmp    FWORD PTR [ecx-0x339cca16]
  402f36:	add    al,ah
  402f38:	add    BYTE PTR [eax],al
  402f3a:	add    ah,cl
  402f3c:	xor    DWORD PTR [ebp-0x74f0ac8f],0xffffff8b
  402f43:	or     al,0x50
  402f45:	in     al,0xce
  402f47:	fs out 0x33,al
  402f4a:	add    BYTE PTR [eax],al
  402f4c:	int3   
  402f4d:	jne    0x402f4f
  402f4f:	add    bh,al
  402f51:	in     al,0xf8
  402f53:	hlt    
  402f54:	imul   ecx,DWORD PTR [ebx+0x7d080000],0x8b63e66b
  402f5e:	inc    esi
  402f5f:	add    BYTE PTR [ebp+0x0],dh
  402f62:	inc    DWORD PTR [eax]
  402f64:	add    BYTE PTR [edi],cl
  402f66:	sti    
  402f67:	push   ebx
  402f68:	cld    
  402f69:	add    BYTE PTR [ecx+0x64d00089],cl
  402f6f:	pop    esp
  402f70:	outs   dx,DWORD PTR ds:[esi]
  402f71:	int3   
  402f72:	mov    ecx,DWORD PTR [ebx+0x30c0400]
  402f78:	mov    ebp,ecx
  402f7a:	jl     0x402f60
  402f7c:	and    bh,bh
  402f7e:	(bad)  
  402f7f:	(bad)  
  402f80:	inc    ebx
  402f82:	out    0xd7,eax
  402f84:	sti    
  402f85:	imul   ecx,esp,0xe40000cc
  402f8b:	jmp    0x8908:0x400921f
  402f92:	int3   
  402f93:	add    al,0xff
  402f95:	add    BYTE PTR [edx],al
  402f97:	ss push edi
  402f99:	stc    
  402f9a:	add    BYTE PTR [ecx+0x2f6810cc],cl
  402fa0:	mov    dl,0x29
  402fa2:	add    BYTE PTR [eax],dl
  402fa4:	inc    ebp
  402fa5:	mov    eax,DWORD PTR [ebp-0x63ff3900]
  402fab:	test   eax,0xc7082d38
  402fb0:	add    eax,ebp
  402fb2:	popf   
  402fb3:	ret    
  402fb4:	rcl    BYTE PTR es:[eax+0x0],0x0
  402fb9:	add    BYTE PTR [eax],al
  402fbb:	adc    BYTE PTR ds:0x1dc55cc,dl
  402fc1:	mov    ds:0xcc457501,al
  402fc6:	inc    edi
  402fc7:	add    BYTE PTR [ebp+0x41],al
  402fca:	in     al,dx
  402fcb:	push   0x0
  402fcd:	int3   
  402fce:	inc    DWORD PTR [eax]
  402fd0:	mov    eax,DWORD PTR [eax]
  402fd2:	jecxz  0x402f80
  402fd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fd5:	repz add BYTE PTR [ebp+0x15],dl
  402fd9:	push   0x1b
  402fdb:	push   ss
  402fdc:	call   0x6a33:0xffebd8
  402fe3:	or     bh,bh
  402fe5:	call   0xfc3a9b3f
  402fea:	add    DWORD PTR [eax],0xffffffff
  402fed:	mov    edx,DWORD PTR [edx+0x27]
  402ff0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ff1:	xchg   esp,eax
  402ff2:	mov    eax,DWORD PTR [eax]
  402ff4:	add    DWORD PTR [edx*2+0x39cc1500],ecx
  402ffb:	in     al,0xa3
  402ffd:	inc    ebp
  402ffe:	ror    ah,0x0
  403001:	add    BYTE PTR [eax],cl
  403003:	fwait
  403004:	dec    ecx
  403005:	in     al,dx
  403006:	mov    ecx,esp
  403008:	int3   
  403009:	add    eax,esp
  40300b:	call   0xd1953f99
  403010:	repnz stc 
  403012:	inc    DWORD PTR [eax]
  403014:	add    BYTE PTR [ebx-0x204de34a],cl
  40301a:	add    BYTE PTR [eax],cl
  40301c:	xor    ebx,ebp
  40301e:	mov    eax,DWORD PTR [ebx]
  403020:	add    BYTE PTR [eax],al
  403022:	jmp    0x1260cc6
  403027:	add    ah,cl
  403029:	adc    dh,cl
  40302b:	jp     0x403079
  40302d:	push   edx
  40302e:	test   eax,ebp
  403030:	mov    eax,DWORD PTR [eax]
  403032:	add    DWORD PTR [eax],eax
  403034:	add    al,0xcc
  403036:	clc    
  403037:	loop   0x40304a
  403039:	or     BYTE PTR [eax],al
  40303b:	add    BYTE PTR [eax+eax*8],cl
  40303e:	mov    esp,0x75d73ff1
  403043:	jmp    0x403046
  403045:	int3   
  403046:	or     BYTE PTR [ebx],dh
  403048:	add    BYTE PTR [ebx+0x565779f2],al
  40304e:	(bad)  
  403050:	call   DWORD PTR [ebp+0x38]
  403053:	neg    BYTE PTR [eax+0x45ff7b]
  403059:	int3   
  40305a:	int3   
  40305b:	int3   
  40305c:	add    BYTE PTR [ebp-0x356c1d96],cl
  403062:	jmp    0x403030
  403064:	add    esp,ecx
  403066:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403067:	in     al,dx
  403068:	aad    0x67
  40306a:	xor    DWORD PTR [eax+eax*1+0x33],0xffffff8b
  40306f:	test   DWORD PTR [ebx-0x2a99fbff],ecx
  403075:	arpl   ax,ax
  403077:	or     ch,bl
  403079:	add    dh,ch
  40307b:	push   edx
  40307c:	xchg   ebp,eax
  40307d:	dec    ebp
  40307e:	inc    edi
  403080:	inc    DWORD PTR [eax]
  403082:	add    BYTE PTR [ebx+0x72cc8900],cl
  403088:	lahf   
  403089:	dec    ebp
  40308a:	jmp    0x403074
  40308c:	add    DWORD PTR [eax],ecx
  40308e:	mov    dl,0x7e
  403090:	mov    edx,0xcccc0c6c
  403095:	loopne 0x403020
  403097:	je     0x4030a1
  403099:	add    ebx,esi
  40309b:	pop    esi
  40309c:	mov    esi,0x8b04012f
  4030a1:	int3   
  4030a2:	(bad)  
  4030a4:	mov    edi,0xf458595
  4030a9:	(bad)  
  4030aa:	dec    esp
  4030ac:	pop    ebp
  4030ad:	add    esi,ebp
  4030af:	lea    ebx,[ebp+0x36]
  4030b2:	add    bh,bh
  4030b4:	inc    DWORD PTR [eax]
  4030b6:	jno    0x4030dd
  4030b8:	(bad)  
  4030b9:	jp     0x403087
  4030bb:	int3   
  4030bc:	add    DWORD PTR [eax],eax
  4030be:	add    BYTE PTR [ebx+0x36ae088b],cl
  4030c4:	fdivr  QWORD PTR [ebp-0x15]
  4030c7:	mov    edx,DWORD PTR ds:0x93ba7a45
  4030cd:	jbe    0x40308f
  4030cf:	or     BYTE PTR [ebx+0x4d04],cl
  4030d5:	add    BYTE PTR [ecx-0x60],bl
  4030d8:	jge    0x4030da
  4030da:	int3   
  4030db:	lea    esi,[ebx]
  4030dd:	mov    ecx,esp
  4030df:	cmp    eax,0xcc000dd5
  4030e4:	sldt   WORD PTR [ecx]
  4030e7:	add    esp,ecx
  4030e9:	push   DWORD PTR [eax-0x7421d564]
  4030ef:	int3   
  4030f0:	mov    esi,DWORD PTR [ebp+0x37]
  4030f3:	test   eax,0x83839737
  4030f8:	inc    esi
  4030f9:	je     0x4030d8
  4030fb:	add    BYTE PTR [eax],al
  4030fd:	add    ah,bh
  4030ff:	sbb    ebx,DWORD PTR [ebp+0x1d]
  403102:	inc    ebp
  403103:	int3   
  403104:	int3   
  403105:	add    esi,esi
  403107:	xlat   BYTE PTR ds:[ebx]
  403108:	in     al,0x95
  40310a:	add    esp,ecx
  40310c:	int3   
  40310d:	test   DWORD PTR [ebp+0x4],eax
  403110:	int3   
  403111:	add    BYTE PTR [ebx+ebx*4+0x88bc391],bh
  403118:	inc    esi
  403119:	or     al,0xcf
  40311b:	sbb    bl,BYTE PTR [edx-0x74a972af]
  403121:	mov    ecx,DWORD PTR [ebx-0x29ff95f4]
  403127:	(bad)
  40312a:	add    BYTE PTR [esi-0x75],al
  40312d:	or     bl,cl
  40312f:	add    DWORD PTR [edi-0x59],0xff04ff
  403136:	add    BYTE PTR [ebx+ecx*4],al
  403139:	add    edx,esi
  40313b:	xor    al,0x3a
  40313d:	dec    esp
  40313e:	xor    eax,DWORD PTR [eax]
  403140:	fnsave [ecx+ecx*8-0x39]
  403144:	ror    cl,cl
  403146:	in     al,dx
  403147:	add    BYTE PTR [eax],al
  403149:	je     0x403117
  40314b:	add    BYTE PTR [ebx-0x221f8ecd],cl
  403151:	dec    edx
  403152:	jne    0x403153
  403154:	call   0xc2131e25
  403159:	jbe    0x40315c
  40315b:	mov    edi,edi
  40315d:	lea    ecx,[ebx+0x3100338d]
  403163:	adc    eax,0x8b568f10
  403168:	add    BYTE PTR [eax],al
  40316a:	mov    bh,0x47
  40316c:	add    edi,eax
  40316e:	je     0x4031e4
  403170:	int3   
  403171:	add    BYTE PTR [eax],al
  403173:	mov    ecx,DWORD PTR [ebx-0x67e2f00]
  403179:	cmp    eax,0xeb048b00
  40317e:	out    dx,al
  40317f:	jl     0x40315e
  403181:	cmp    edi,0xffffff89
  403184:	mov    edi,edi
  403186:	mov    esp,ecx
  403188:	add    al,0x0
  40318a:	add    ch,BYTE PTR [ecx+ebp*8]
  40318d:	dec    esi
  40318e:	int3   
  40318f:	add    BYTE PTR [ebp+0x10],al
  403192:	fcom   QWORD PTR [esi+edi*8-0x74f722a2]
  403199:	add    al,ch
  40319b:	mov    edi,edi
  40319d:	add    dh,ch
  40319f:	jbe    0x4031f9
  4031a1:	adc    eax,DWORD PTR [eax+eax*1]
  4031a4:	add    BYTE PTR [ebx+0x58047ed7],cl
  4031aa:	je     0x4031ac
  4031ac:	add    DWORD PTR [ecx],0x0
  4031af:	je     0x4031b0
  4031b1:	add    al,al
  4031b3:	adc    DWORD PTR es:[esi-0x7affba7b],0x549e2a9
  4031be:	mov    ebp,eax
  4031c0:	rol    BYTE PTR [eax],0x0
  4031c3:	push   DWORD PTR [ebp+0x8]
  4031c6:	push   ecx
  4031c7:	adc    ch,al
  4031c9:	cld    
  4031ca:	inc    esi
  4031cb:	test   DWORD PTR [ecx],eax
  4031cd:	mov    edx,DWORD PTR [edx]
  4031cf:	xchg   esi,eax
  4031d0:	ret    0xcc7c
  4031d3:	add    DWORD PTR [eax],eax
  4031d5:	mov    DWORD PTR [ecx],0x49ff0083
  4031db:	cmp    DWORD PTR [edx+ebp*8],eax
  4031de:	add    bh,bh
  4031e0:	adc    BYTE PTR [eax],al
  4031e2:	jo     0x40319f
  4031e4:	ins    BYTE PTR es:[edi],dx
  4031e5:	add    ah,cl
  4031e7:	int3   
  4031e8:	je     0x4031ea
  4031ea:	inc    esi
  4031eb:	add    BYTE PTR [ebx-0x1859c00],cl
  4031f1:	inc    edx
  4031f2:	add    BYTE PTR [ebx+ecx*4],cl
  4031f5:	je     0x403241
  4031f7:	loop   0x4031f8
  4031f9:	inc    ebp
  4031fa:	adc    BYTE PTR [eax-0x1],dl
  4031fd:	int3   
  4031fe:	mov    esp,ecx
  403200:	mov    eax,DWORD PTR [esi-0x9]
  403203:	mov    esp,0xcc55d8c6
  403208:	or     BYTE PTR [ebx+0x4e95d859],cl
  40320e:	or     al,0x89
  403210:	int3   
  403211:	or     esp,0x1
  403214:	dec    esp
  403216:	add    eax,0x89f84d7a
  40321b:	add    bl,ch
  40321d:	jmp    0x4031ad
  40321f:	or     al,dl
  403221:	call   0xcc00:0x8d8b158d
  403228:	inc    ebp
  403229:	mov    ebx,edi
  40322b:	xchg   ebp,eax
  40322c:	sbb    esp,ebp
  40322e:	add    BYTE PTR [eax+eax*1+0x0],dh
  403232:	mov    al,0x8b
  403234:	rcl    DWORD PTR [edi+0x0],0xeb
  403238:	bswap  esp
  40323a:	call   0xc53fb81f
  40323f:	bound  ecx,QWORD PTR [eax]
  403241:	mov    edx,0x18500
  403246:	ret    
  403247:	into   
  403248:	cmp    al,0x78
  40324a:	xor    cl,ah
  40324c:	mov    eax,eax
  40324e:	int3   
  40324f:	mov    esp,0xccad1f8f
  403254:	sub    eax,0xffffffc0
  403257:	mov    eax,DWORD PTR [eax]
  403259:	add    BYTE PTR [eax],al
  40325b:	sti    
  40325c:	sub    BYTE PTR [edi+eiz*2-0x18],ch
  403260:	mov    ecx,esp
  403262:	add    BYTE PTR [edx+0x28],ch
  403265:	mov    al,0x9b
  403267:	mov    DWORD PTR [eax],edx
  403269:	mov    ecx,esp
  40326b:	add    BYTE PTR [ebx+0x31797500],al
  403271:	mov    ah,0x99
  403273:	lea    eax,[ecx]
  403275:	test   DWORD PTR [ecx],eax
  403277:	xchg   ebp,eax
  403278:	add    eax,0xff00d1c2
  40327d:	mov    DWORD PTR [eax],eax
  40327f:	add    al,0x8b
  403281:	dec    ebp
  403282:	mov    DWORD PTR [edi+0x1e1402c],eax
  403288:	test   DWORD PTR [ecx+0x688ea500],ecx
  40328e:	jg     0x403219
  403290:	mov    eax,DWORD PTR [eax]
  403292:	mov    eax,DWORD PTR [eax]
  403294:	add    ah,cl
  403296:	add    dh,ah
  403298:	xchg   esp,eax
  403299:	inc    eax
  40329a:	jle    0x403268
  40329c:	or     al,0x74
  40329e:	mov    ecx,DWORD PTR [edi]
  4032a0:	std    
  4032a1:	sub    ebx,DWORD PTR [edx+ebp*2+0x74330000]
  4032a8:	or     al,0x89
  4032aa:	je     0x40327c
  4032ac:	mov    ds:0x1750ccf,eax
  4032b1:	inc    DWORD PTR [ebx+0xeaaab07]
  4032b7:	(bad)  
  4032b8:	int3   
  4032b9:	dec    DWORD PTR [ecx+0xe846e0]
  4032bf:	pop    edx
  4032c0:	pop    esp
  4032c1:	xchg   BYTE PTR [ebp-0x3376f7aa],al
  4032c7:	leave  
  4032c8:	inc    edi
  4032c9:	push   0x26
  4032cb:	add    DWORD PTR [eax],eax
  4032cd:	add    BYTE PTR [eax],al
  4032cf:	jne    0x40325c
  4032d1:	mov    ebx,ebp
  4032d3:	push   esp
  4032d4:	or     BYTE PTR [eax+0xd],bh
  4032d7:	add    BYTE PTR [eax],al
  4032d9:	add    BYTE PTR [ebp-0x2a],cl
  4032dc:	stos   BYTE PTR es:[edi],al
  4032dd:	lock sub BYTE PTR [eax],al
  4032e0:	add    ah,cl
  4032e2:	add    al,0xe8
  4032e4:	mov    ecx,esp
  4032e6:	mov    edi,DWORD PTR [ebx+edx*2-0x38fcb842]
  4032ed:	add    bh,bh
  4032ef:	push   eax
  4032f0:	loop   0x403323
  4032f2:	cmp    al,BYTE PTR [eax]
  4032f4:	push   ebp
  4032f5:	add    bh,bh
  4032f7:	mov    eax,DWORD PTR [ebx-0x49d6fb01]
  4032fd:	out    dx,al
  4032fe:	ins    BYTE PTR es:[edi],dx
  4032ff:	or     BYTE PTR [ebx+0x1934e045],cl
  403305:	nop
  403306:	push   ebp
  403307:	je     0x403309
  403309:	fisttp QWORD PTR [ebx-0x7400a234]
  40330f:	or     edx,DWORD PTR ds:0x5000385c
  403315:	add    BYTE PTR [ebx-0x392567ee],cl
  40331b:	call   DWORD PTR [eax+0x0]
  40331e:	adc    BYTE PTR [ecx-0x1c76ba20],cl
  403324:	sbb    edx,DWORD PTR [edx]
  403326:	sub    al,BYTE PTR [ecx]
  403328:	or     BYTE PTR [eax],cl
  40332a:	add    al,dh
  40332c:	int    0x4e
  40332e:	push   ds
  40332f:	inc    esi
  403330:	add    DWORD PTR [ebx+0x568901cc],ecx
  403336:	add    BYTE PTR [edi-0x23],bh
  403339:	out    0x3c,al
  40333b:	add    DWORD PTR [eax],eax
  40333d:	fucomp st(0)
  40333f:	mov    esp,0x8b381c20
  403344:	test   DWORD PTR [ebx+ecx*4],ecx
  403347:	add    DWORD PTR [esi-0x34],eax
  40334a:	add    DWORD PTR [edx],edx
  40334c:	adc    al,0x3c
  40334e:	push   esp
  40334f:	int3   
  403350:	add    BYTE PTR [eax],al
  403352:	add    BYTE PTR [edi+edx*4],dl
  403355:	add    eax,0xdd740099
  40335a:	add    ah,cl
  40335c:	adc    BYTE PTR [ebp+0x46],dl
  40335f:	imul   ecx,DWORD PTR [ebx+0xcc28d2],0x1
  403366:	adc    eax,0x4823f7f4
  40336b:	add    BYTE PTR [ecx],al
  40336d:	add    BYTE PTR [ecx],al
  40336f:	(bad)  
  403370:	inc    DWORD PTR [ecx]
  403372:	or     al,bh
  403374:	mov    ebx,0xcc00eb39
  403379:	or     esp,0xffffffd6
  40337c:	add    BYTE PTR [eax],dl
  40337e:	inc    ebx
  40337f:	mov    eax,DWORD PTR [eax]
  403381:	or     DWORD PTR [ebx+0x454d8d],0x19
  403388:	sbb    DWORD PTR [ebx+0x5c],ebx
  40338b:	add    BYTE PTR [eax],al
  40338d:	mov    eax,0x66448319
  403393:	test   DWORD PTR [eax],eax
  403395:	inc    ebp
  403396:	add    ah,cl
  403398:	int3   
  403399:	lea    esi,[ebp-0x3d]
  40339c:	outs   dx,DWORD PTR ds:[esi]
  40339d:	xchg   esi,eax
  40339e:	push   edi
  40339f:	or     ah,cl
  4033a1:	add    BYTE PTR [edx+eiz*8],cl
  4033a4:	pop    ds
  4033a5:	push   esi
  4033a6:	pusha  
  4033a7:	cmp    edi,0x4d
  4033aa:	loopne 0x403337
  4033ac:	mov    eax,DWORD PTR [ebx-0x4140b6aa]
  4033b2:	ror    DWORD PTR [ebx-0x23ffaa00],0x9b
  4033b9:	fsubp  st(6),st
  4033bb:	adc    BYTE PTR [ecx],al
  4033bd:	add    BYTE PTR [ebp+0x18b558b],cl
  4033c3:	pop    edi
  4033c4:	pop    eax
  4033c5:	jp     0x403350
  4033c7:	call   0x724920b7
  4033cc:	ret    0xbae1
  4033cf:	add    BYTE PTR [ebx-0x74af2275],cl
  4033d5:	int3   
  4033d6:	inc    esi
  4033d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033d8:	mov    bl,0x4f
  4033da:	out    0xc,al
  4033dc:	add    BYTE PTR [ebx-0x7b8da901],cl
  4033e2:	sub    BYTE PTR [ebx],al
  4033e4:	add    BYTE PTR [ebp-0xfeffff],al
  4033ea:	add    BYTE PTR [ebp+ebp*4+0x4edf],al
  4033f1:	test   DWORD PTR [ebx+ebx*4-0x18],esi
  4033f5:	test   eax,0xccfffff2
  4033fa:	ror    BYTE PTR [ebx-0x29333400],0x1b
  403401:	icebp  
  403402:	mov    al,0xc
  403405:	add    esp,ecx
  403407:	sbb    esp,DWORD PTR [edi]
  403409:	or     BYTE PTR [edi-0x15],0x74
  40340d:	add    al,0x0
  40340f:	or     DWORD PTR [ebx+0x19e20000],0xffffffd0
  403416:	mov    dh,0x8b
  403418:	rol    BYTE PTR [eax],0x74
  40341b:	(bad)  
  40341e:	std    
  40341f:	mov    ecx,esp
  403421:	mov    eax,DWORD PTR [ebx-0x7413ff8b]
  403427:	push   ds
  403428:	addr16 lock pop ecx
  40342b:	push   ebp
  40342c:	add    DWORD PTR [eax],eax
  40342e:	call   DWORD PTR [ebx]
  403430:	scas   eax,DWORD PTR es:[edi]
  403431:	gs dec eax
  403433:	rol    BYTE PTR [ecx],0x85
  403436:	add    BYTE PTR [eax],al
  403438:	add    DWORD PTR [eax],eax
  40343a:	add    BYTE PTR [edx+0x6f],bl
  40343d:	inc    esi
  40343e:	mov    ch,0x1
  403440:	jmp    0x403441
  403442:	add    BYTE PTR [edx-0x23],dl
  403445:	(bad)  
  403446:	popa   
  403447:	int3   
  403448:	add    BYTE PTR [eax],al
  40344a:	int3   
  40344b:	add    BYTE PTR [ebx-0x4c880034],cl
  403451:	cdq    
  403452:	jp     0x4033d7
  403454:	push   0x0
  403456:	adc    eax,0x843e33
  40345b:	or     al,0x46
  40345d:	mov    DWORD PTR [eax],eax
  40345f:	mov    eax,DWORD PTR [ebp+0x15]
  403462:	in     al,dx
  403463:	inc    ebx
  403464:	mov    dl,0xfb
  403466:	mov    eax,ds:0x55005600
  40346b:	fs push edx
  40346d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40346e:	bound  edx,QWORD PTR [eax-0x75]
  403471:	in     al,dx
  403472:	or     BYTE PTR [ebp+0xc],bl
  403475:	int3   
  403476:	mov    ebx,DWORD PTR [ecx]
  403478:	add    BYTE PTR [ebx+0x30],0x0
  40347c:	xor    eax,DWORD PTR [eax]
  40347e:	add    al,ch
  403480:	cmp    ebp,DWORD PTR [eax+esi*1-0x34]
  403484:	add    BYTE PTR [ebx-0xff0073],cl
  40348a:	int3   
  40348b:	xor    eax,0x15f4b35e
  403490:	add    BYTE PTR [ebx+0x8f8a00],cl
  403496:	mov    ch,0xcc
  403498:	add    BYTE PTR [eax],al
  40349a:	push   DWORD PTR [ebp+ecx*2+0x0]
  40349e:	call   FWORD PTR [esi]
  4034a0:	data16 push sp
  4034a3:	add    al,0x0
  4034a5:	add    BYTE PTR [eax],al
  4034a7:	push   esi
  4034a8:	xor    bh,BYTE PTR [edi-0x74effeac]
  4034ae:	add    BYTE PTR [ebp+0x75],bl
  4034b1:	add    DWORD PTR [ebx+0x2a962e50],0x0
  4034b8:	add    ah,cl
  4034ba:	mov    ebp,ebx
  4034bc:	inc    ebp
  4034bd:	pop    es
  4034be:	jns    0x4034c0
  4034c0:	or     al,0x33
  4034c2:	inc    ebp
  4034c3:	test   DWORD PTR [eax],eax
  4034c5:	call   0xae53c310
  4034ca:	sub    al,ah
  4034cc:	test   DWORD PTR [ebp-0x75],ebx
  4034cf:	inc    edi
  4034d0:	inc    edi
  4034d1:	mov    ecx,0xdd01012a
  4034d6:	inc    esi
  4034d7:	dec    esp
  4034d9:	add    DWORD PTR [edx+0x18],ebp
  4034dc:	pop    ebx
  4034dd:	jecxz  0x403487
  4034df:	int3   
  4034e0:	int3   
  4034e1:	add    bh,bh
  4034e3:	push   esi
  4034e4:	and    eax,0xf8b3b72
  4034e9:	test   DWORD PTR [ebx+0x7485],ecx
  4034ef:	lods   al,BYTE PTR ds:[esi]
  4034f0:	jl     0x403474
  4034f2:	mov    ah,0x0
  4034f4:	add    BYTE PTR [eax],al
  4034f6:	add    BYTE PTR [ecx+eiz*1+0x2c45],al
  4034fd:	inc    DWORD PTR [ecx]
  4034ff:	add    BYTE PTR [ecx],al
  403501:	mov    ebx,ebp
  403503:	xchg   edi,eax
  403504:	inc    eax
  403505:	push   es
  403506:	pop    ds
  403507:	(bad)  
  403508:	dec    DWORD PTR [esp+ecx*1]
  40350b:	cli    
  40350c:	inc    edi
  40350d:	in     eax,0xda
  40350f:	je     0x403556
  403511:	add    BYTE PTR [eax+eax*1],cl
  403514:	add    BYTE PTR [ebx+0x4708e745],cl
  40351a:	jbe    0x403524
  40351c:	add    BYTE PTR [eax],dl
  40351e:	je     0x403548
  403520:	sahf   
  403521:	sahf   
  403522:	daa    
  403523:	add    DWORD PTR [eax],eax
  403525:	add    BYTE PTR [ecx],al
  403527:	push   esi
  403528:	mov    ecx,esp
  40352a:	mov    edx,DWORD PTR [ecx-0x22b741eb]
  403530:	rcr    ch,0x1
  403533:	call   0x1f29ff9
  403538:	add    bh,bh
  40353a:	xor    DWORD PTR [ebp+0x8],0xffffff8b
  40353e:	add    BYTE PTR [eax],bh
  403540:	adc    al,0x78
  403542:	xor    cl,BYTE PTR [ebx+0x2300ff04]
  403548:	push   esp
  403549:	jb     0x4035c2
  40354b:	fisttp QWORD PTR [ecx-0x7400ff01]
  403551:	add    al,0x56
  403553:	loop   0x403540
  403555:	jge    0x403518
  403557:	shr    ah,0x8b
  40355a:	int3   
  40355b:	hlt    
  40355c:	cdq    
  40355d:	sub    BYTE PTR [edx],0x8b
  403560:	je     0x4035d7
  403562:	add    BYTE PTR [ebp+0x0],cl
  403565:	sldt   WORD PTR [edi+0x755bd8ea]
  40356c:	add    BYTE PTR [ebx-0x8df1834],cl
  403572:	pop    edx
  403573:	add    BYTE PTR [ebx],dh
  403575:	lea    edx,[ebp+0xf]
  403578:	(bad)  
  403579:	int3   
  40357a:	add    BYTE PTR [ecx+eax*2+0x30f112c],bh
  403581:	mov    esi,DWORD PTR [ecx+edi*8-0x6b]
  403585:	(bad)  
  403586:	int    0x8b
  403588:	mov    ecx,esp
  40358a:	add    BYTE PTR [eax],al
  40358c:	mov    edi,edi
  40358e:	or     BYTE PTR [ecx+0xc30066],dl
  403594:	add    DWORD PTR [eax],eax
  403596:	mov    eax,ecx
  403598:	jne    0x4035ff
  40359a:	mov    edi,0x748b75
  40359f:	rol    BYTE PTR [eax],0xf
  4035a2:	add    dh,ch
  4035a4:	adc    DWORD PTR [ebp-0x4a],edi
  4035a7:	add    BYTE PTR [ebp+0x1193748b],al
  4035ad:	lods   eax,DWORD PTR ds:[esi]
  4035ae:	xchg   edi,eax
  4035af:	add    ecx,DWORD PTR [edi]
  4035b1:	jne    0x40353e
  4035b3:	add    BYTE PTR [ecx+0x15e4ff74],cl
  4035b9:	cmp    BYTE PTR [ecx-0x1],0x0
  4035bd:	or     ah,cl
  4035bf:	mov    ch,0x5e
  4035c1:	enter  0xa,0x8d
  4035c5:	int3   
  4035c6:	push   eax
  4035c7:	fisttp QWORD PTR [ebp-0x353cf3ba]
  4035cd:	push   edx
  4035ce:	and    edx,DWORD PTR [eax-0x39]
  4035d1:	int3   
  4035d2:	int3   
  4035d3:	add    bl,dh
  4035d5:	mov    cs,WORD PTR [ebp+0x2]
  4035d8:	mov    ecx,esp
  4035da:	mov    DWORD PTR [eax],eax
  4035dc:	mov    eax,DWORD PTR [eax]
  4035de:	mov    ebp,eax
  4035e0:	or     ah,ch
  4035e2:	and    al,al
  4035e4:	add    al,ah
  4035e6:	add    ah,cl
  4035e8:	sub    BYTE PTR [edi+eax*4-0x14fbfe5e],dl
  4035ef:	mov    edi,eax
  4035f1:	add    BYTE PTR [ebx+0x7a04400f],cl
  4035f7:	or     DWORD PTR [eax],eax
  4035f9:	fisttp QWORD PTR [ebp+0x75]
  4035fc:	lahf   
  4035fd:	cmp    al,0x98
  4035ff:	pop    ecx
  403600:	int3   
  403601:	mov    eax,DWORD PTR [eax]
  403603:	je     0x4035e5
  403605:	mov    edi,edi
  403607:	fstp   QWORD PTR [ebx+0x3c]
  40360a:	loope  0x403657
  40360c:	mov    ecx,DWORD PTR [ebx-0x1c297500]
  403612:	in     eax,dx
  403613:	jmp    0xcc8b:0x8b8b01
  40361a:	pop    ebp
  40361b:	frstor [edi+0x3f]
  40361e:	and    eax,0xffff0074
  403623:	push   esi
  403624:	int    0xf3
  403626:	inc    ebx
  403627:	rol    DWORD PTR [ebp-0x76761475],0x8d
  40362e:	mov    eax,DWORD PTR [eax]
  403630:	push   es
  403631:	fadd   DWORD PTR [ecx-0x35]
  403634:	add    BYTE PTR [ecx-0x373874f8],cl
  40363a:	dec    edi
  40363b:	inc    edi
  40363c:	dec    DWORD PTR [ebx+0x88bebc7]
  403642:	mov    ecx,DWORD PTR [ebx+0x68bd24ae]
  403648:	add    BYTE PTR [ebp-0x75],al
  40364b:	add    dh,bl
  40364d:	push   cs
  40364e:	js     0x40360d
  403650:	int3   
  403651:	adc    BYTE PTR [ebp-0x1],bl
  403654:	dec    esp
  403656:	inc    ebp
  403657:	add    bl,ch
  403659:	hlt    
  40365a:	jl     0x403662
  40365c:	add    BYTE PTR [ebp-0x2b2376f8],cl
  403662:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403663:	mov    ebx,0x8ffc083
  403668:	add    DWORD PTR [eax],eax
  40366a:	mov    ecx,DWORD PTR [ebx-0x39144998]
  403670:	shl    BYTE PTR [ecx+eax*1+0xc],0xbb
  403675:	sub    BYTE PTR [edx+0x7400cc94],al
  40367b:	int3   
  40367c:	(bad)  
  40367e:	add    BYTE PTR [edi+edi*4+0x79],dh
  403682:	out    0x73,al
  403684:	int3   
  403685:	add    DWORD PTR [edx-0x1],ebp
  403688:	inc    ebx
  403689:	push   es
  40368a:	mov    BYTE PTR [edx-0x33ff7b00],ch
  403690:	test   DWORD PTR [eax],eax
  403692:	call   0xf2371d97
  403697:	sbb    DWORD PTR [ebx-0x36f7fcfc],ecx
  40369d:	mov    ebx,0x5033463c
  4036a2:	mov    DWORD PTR [ebp-0x75],0x228bcc08
  4036a9:	jno    0x403671
  4036ab:	int3   
  4036ac:	inc    esi
  4036ad:	jne    0x40363a
  4036af:	add    BYTE PTR [edi],dl
  4036b1:	adc    esi,eax
  4036b3:	loopne 0x4036b6
  4036b5:	dec    DWORD PTR [ebx-0x33957af8]
  4036bb:	or     BYTE PTR [edi],cl
  4036bd:	jge    0x40364f
  4036bf:	pop    ecx
  4036c0:	je     0x40364d
  4036c2:	je     0x4036f7
  4036c4:	in     al,dx
  4036c5:	sar    BYTE PTR [ecx],1
  4036c7:	fild   DWORD PTR [ebp-0x34]
  4036ca:	add    BYTE PTR [ebx-0x7cfffef1],cl
  4036d0:	ror    edi,1
  4036d2:	dec    edi
  4036d3:	ret    0x800
  4036d6:	inc    ebp
  4036d7:	jmp    DWORD PTR [edx+0x56811716]
  4036dd:	int3   
  4036de:	mov    DWORD PTR [eax+eax*1+0x0],esi
  4036e2:	push   0xffffffdd
  4036e4:	push   es
  4036e5:	idiv   DWORD PTR [edi+esi*8-0xb300]
  4036ec:	hlt    
  4036ed:	call   0x5640cc60
  4036f2:	int3   
  4036f3:	call   0xde0c873d
  4036f8:	or     bl,cl
  4036fa:	mov    ebx,0xf85cc74
  4036ff:	dec    eax
  403701:	mov    ebx,DWORD PTR [ebx+ecx*2]
  403704:	push   DWORD PTR [ebp+0x4]
  403707:	push   ebp
  403708:	or     al,0x8d
  40370a:	inc    esi
  40370b:	add    BYTE PTR [esi-0x2b],cl
  40370e:	ins    BYTE PTR es:[edi],dx
  40370f:	mov    eax,ds:0xdd01744d
  403714:	mov    eax,ds:0x487b5f8
  403719:	add    ah,cl
  40371b:	add    BYTE PTR [eax+0x0],dl
  40371e:	je     0x403708
  403720:	adc    ebp,DWORD PTR [edx+0x1158831]
  403726:	add    esp,ecx
  403728:	mov    esi,0x14c0222
  40372d:	call   DWORD PTR [eax]
  40372f:	xor    ecx,DWORD PTR [ecx-0x54ba3375]
  403735:	sbb    esi,DWORD PTR [esi-0x7622ffb9]
  40373b:	test   DWORD PTR [edi+edx*1+0x4d],esp
  40373f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403740:	or     al,0xff
  403742:	mov    eax,DWORD PTR [ebp+0x46]
  403745:	add    BYTE PTR [ebp+0x16a6cd00],al
  40374b:	dec    eax
  40374c:	int3   
  40374d:	push   eax
  40374e:	add    BYTE PTR [ebx-0x6ecf0069],cl
  403754:	ud0    ebp,ebx
  403757:	sbb    DWORD PTR [ebp-0x75],0x0
  40375b:	jmp    0x403753
  40375d:	mov    BYTE PTR [ebx+ebx*8],bh
  403760:	int3   
  403761:	add    DWORD PTR [eax],0xffffffe0
  403764:	sbb    BYTE PTR [ebx-0x33ffc53c],dh
  40376a:	mov    eax,DWORD PTR [eax]
  40376c:	or     BYTE PTR [eax],cl
  40376e:	add    BYTE PTR [eax],al
  403770:	sub    al,0xce
  403772:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403773:	mov    es,WORD PTR [eax]
  403775:	int3   
  403776:	add    BYTE PTR [ebx-0x2f65d291],cl
  40377c:	int3   
  40377d:	add    BYTE PTR [eax],al
  40377f:	mov    DWORD PTR [eax],eax
  403781:	inc    esi
  403782:	pop    ebp
  403783:	add    BYTE PTR [edx+0x7526397f],bh
  403789:	add    al,0xcc
  40378b:	add    BYTE PTR [edi+0xc],bl
  40378e:	loope  0x403806
  403790:	inc    ebp
  403791:	add    al,0x0
  403793:	or     BYTE PTR [eax],dl
  403795:	dec    DWORD PTR [ebx+0x4b3f7600]
  40379b:	loopne 0x4037ea
  40379d:	inc    DWORD PTR [ebp-0x75]
  4037a0:	ds in  al,dx
  4037a2:	in     eax,dx
  4037a3:	xchg   ebp,eax
  4037a4:	dec    DWORD PTR [ecx-0x7a8bfb8c]
  4037aa:	je     0x4037ab
  4037ac:	add    al,0x90
  4037ae:	hlt    
  4037af:	dec    esp
  4037b0:	mov    ebx,DWORD PTR [ebp+0x10]
  4037b3:	mov    eax,esp
  4037b5:	into   
  4037b6:	fisubr WORD PTR [eax-0x34]
  4037b9:	test   eax,ebp
  4037bb:	mov    eax,DWORD PTR [eax]
  4037bd:	cmp    edi,0xffffffff
  4037c0:	pusha  
  4037c1:	sbb    eax,0xff852ee7
  4037c6:	mov    ecx,DWORD PTR [ebx+0x535687d1]
  4037cc:	or     bh,bh
  4037ce:	add    ah,cl
  4037d0:	add    DWORD PTR [eax],eax
  4037d2:	int3   
  4037d3:	frstor [ecx]
  4037d5:	in     al,dx
  4037d6:	daa    
  4037d7:	in     al,0x8b
  4037d9:	int3   
  4037da:	or     al,0xcc
  4037dc:	push   ebp
  4037dd:	cmp    DWORD PTR [edx+edx*1],0x46cc8b8b
  4037e4:	int3   
  4037e5:	add    al,0x45
  4037e7:	call   DWORD PTR [ebp-0x30]
  4037ea:	inc    esi
  4037eb:	sti    
  4037ec:	mov    eax,DWORD PTR [eax]
  4037ee:	je     0x403779
  4037f0:	mov    DWORD PTR [eax],esp
  4037f2:	dec    esi
  4037f3:	int3   
  4037f4:	fld    QWORD PTR [eax]
  4037f6:	je     0x4037f9
  4037f8:	add    BYTE PTR [esi+0x4],al
  4037fb:	adc    BYTE PTR [eax-0x15],ch
  4037fe:	mov    BYTE PTR [esi-0x74fe74f8],dh
  403804:	push   cs
  403805:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403806:	loopne 0x4037c8
  403808:	adc    eax,0xccff5600
  40380d:	add    BYTE PTR [eax],al
  40380f:	add    BYTE PTR [eax-0x33108970],bh
  403815:	add    BYTE PTR [eax],al
  403817:	mov    esp,DWORD PTR [eax+0x26]
  40381a:	xchg   esp,eax
  40381b:	push   ss
  40381c:	(bad)  
  40381d:	inc    DWORD PTR [esi-0x75]
  403820:	add    ah,cl
  403822:	int3   
  403823:	inc    ebp
  403824:	mov    bh,0x70
  403826:	inc    eax
  403827:	imul   eax,DWORD PTR [eax],0xcecc0845
  40382d:	gs inc edx
  40382f:	jns    0x403839
  403831:	(bad)  
  403833:	je     0x403835
  403835:	add    BYTE PTR [ebx],dh
  403837:	mov    DWORD PTR [edx+0x79],edx
  40383a:	mov    al,0xb3
  40383c:	inc    ebp
  40383d:	or     ah,cl
  40383f:	add    DWORD PTR [edx+0xbfd747],edi
  403845:	xor    eax,DWORD PTR [ebx+0x10e80100]
  40384b:	int3   
  40384c:	fidiv  WORD PTR [ecx+0x61]
  40384f:	inc    edx
  403850:	xor    eax,DWORD PTR [ebp+0x1]
  403853:	mov    edi,DWORD PTR [edi+0x7c3c84]
  403859:	add    DWORD PTR ds:0x15005500,edx
  40385f:	cvtps2pi mm4,QWORD PTR [esp+esi*4]
  403863:	mov    dl,0x89
  403865:	push   ebp
  403866:	cmp    edi,0xffffff8f
  403869:	adc    DWORD PTR [edx],edi
  40386b:	pop    eax
  40386c:	fisttp QWORD PTR [ecx-0x3300fc01]
  403872:	add    DWORD PTR [ecx+0x598064a3],ecx
  403878:	add    ah,cl
  40387a:	push   esi
  40387b:	add    BYTE PTR [ebx+0x19f42a],dh
  403881:	add    ah,ch
  403883:	pop    ebp
  403884:	add    DWORD PTR [eax],eax
  403886:	pop    ebp
  403887:	add    bl,dl
  403889:	mov    dl,0x85
  40388b:	jle    0x40388d
  40388d:	add    bh,bh
  40388f:	loopne 0x403901
  403891:	fild   WORD PTR [eax]
  403893:	jp     0x403895
  403895:	inc    DWORD PTR [ebp-0x1]
  403898:	mov    ecx,DWORD PTR [ebp+0x6b1b0089]
  40389e:	sbb    BYTE PTR [esi+0x0],cl
  4038a1:	add    eax,DWORD PTR [ebx-0x17411eeb]
  4038a7:	xchg   BYTE PTR [eax],al
  4038a9:	add    DWORD PTR [ebp+0x45],eax
  4038ac:	int3   
  4038ad:	int3   
  4038ae:	int3   
  4038af:	je     0x403896
  4038b1:	push   0x4d
  4038b3:	mov    eax,0xddc000
  4038b8:	pop    esi
  4038b9:	adc    DWORD PTR [ecx+ebp*2],edx
  4038bc:	add    BYTE PTR [ebx-0x76fc7401],cl
  4038c2:	or     al,0x45
  4038c4:	push   ebp
  4038c5:	nop
  4038c6:	xor    al,0x58
  4038c8:	add    ah,ch
  4038ca:	add    BYTE PTR [eax],al
  4038cc:	push   ebp
  4038cd:	pop    esp
  4038ce:	out    0xea,al
  4038d0:	mov    ecx,DWORD PTR [ecx+0x108bcc00]
  4038d6:	rcl    BYTE PTR [ebp-0x1c],0x50
  4038da:	jno    0x40394f
  4038dc:	or     esp,0xc
  4038df:	dec    DWORD PTR [ebx]
  4038e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038e2:	add    al,0x2c
  4038e4:	add    BYTE PTR [esp+ecx*8-0x75],dh
  4038e8:	inc    DWORD PTR [eax]
  4038ea:	add    BYTE PTR [eax],al
  4038ec:	sub    dh,BYTE PTR [edi+0xff46e5]
  4038f2:	int3   
  4038f3:	push   ebp
  4038f4:	add    DWORD PTR [esi+0x68],0x52
  4038f8:	add    BYTE PTR [eax],al
  4038fa:	mov    edi,edi
  4038fc:	mov    esi,DWORD PTR [ebp+0x4]
  4038ff:	(bad)  
  403900:	ja     0x10c5078
  403906:	add    bh,al
  403908:	shr    DWORD PTR [eax+edx*4],0x8d
  40390c:	(bad)  
  40390d:	dec    DWORD PTR [eax]
  40390f:	add    BYTE PTR [ecx+ecx*4],cl
  403912:	add    DWORD PTR [eax],eax
  403914:	shr    ah,1
  403916:	pop    ebp
  403917:	push   0xffffff83
  403919:	mov    ebx,ebp
  40391b:	add    BYTE PTR [ecx+0xf26721],bh
  403921:	int3   
  403922:	push   0xffffffff
  403924:	add    esp,ecx
  403926:	int3   
  403927:	inc    ebp
  403928:	ret    
  403929:	mov    DWORD PTR [ebx-0x33ff033a],ebx
  40392f:	or     al,0x8b
  403931:	and    ebx,edi
  403933:	mov    edx,0x56836e
  403938:	add    BYTE PTR [eax],al
  40393a:	add    BYTE PTR [ebx],al
  40393c:	test   DWORD PTR [ecx+0xfd2864],ebx
  403942:	adc    al,ch
  403944:	add    BYTE PTR [esi+0x8d6c3f1],al
  40394a:	add    ah,cl
  40394c:	add    BYTE PTR [eax],al
  40394e:	mov    edi,edi
  403950:	or     BYTE PTR [esi],bh
  403952:	sub    al,0xe3
  403954:	pusha  
  403955:	mov    DWORD PTR [ebx-0x2e9dff7d],ecx
  40395b:	and    BYTE PTR ds:0xff000000,bl
  403961:	add    BYTE PTR [eax],al
  403963:	je     0x403965
  403965:	addr16 or al,0xc3
  403968:	add    esi,DWORD PTR [ebx+ecx*4+0x45]
  40396c:	adc    BYTE PTR [edi],dh
  40396e:	hlt    
  40396f:	pop    ss
  403970:	jl     0x403976
  403972:	mov    esi,DWORD PTR [ebp-0x1]
  403975:	call   0x58cbbcbf
  40397a:	jne    0x403906
  40397c:	mov    eax,ds:0x4
  403981:	arpl   WORD PTR [edx],di
  403983:	ror    DWORD PTR gs:[ebx+0x50cc0800],1
  40398a:	mov    ecx,DWORD PTR [ecx-0x228eeb23]
  403990:	loope  0x40391b
  403992:	mov    ebp,esp
  403994:	int3   
  403995:	mov    ebp,DWORD PTR [eax+0x63]
  403998:	nop
  403999:	add    DWORD PTR [ecx],eax
  40399b:	mov    edi,edi
  40399d:	dec    ebp
  40399e:	or     BYTE PTR [ebx+0x22133a00],cl
  4039a4:	mov    edi,0x56ff8dcc
  4039a9:	dec    ecx
  4039aa:	dec    esi
  4039ab:	sbb    eax,0x4dcc01fb
  4039b0:	test   DWORD PTR [eax],eax
  4039b2:	mov    ecx,DWORD PTR [ebp-0x731b78bb]
  4039b8:	call   0xddf2:0x8574cc15
  4039bf:	fiadd  WORD PTR [ebx]
  4039c1:	add    BYTE PTR [eax+eax*1-0x7d],dh
  4039c5:	jne    0x403a17
  4039c7:	add    DWORD PTR [eax],eax
  4039c9:	pop    ecx
  4039ca:	rcr    DWORD PTR [ebx-0x338b7263],cl
  4039d0:	add    BYTE PTR [esi],dl
  4039d2:	mul    BYTE PTR [ebp+0x8000c0b]
  4039d8:	loopne 0x403963
  4039da:	invd   
  4039dc:	add    BYTE PTR [esi-0x14a46366],bh
  4039e2:	add    ch,bl
  4039e4:	sub    edx,0xffffffe8
  4039e7:	jmp    0x8d85c324
  4039ec:	add    BYTE PTR [ecx],al
  4039ee:	add    edi,edi
  4039f0:	dec    DWORD PTR [esi]
  4039f2:	clc    
  4039f3:	mov    dh,0xb3
  4039f5:	mov    DWORD PTR [esi+0x15],edx
  4039f8:	int3   
  4039f9:	std    
  4039fa:	jecxz  0x4039e3
  4039fc:	popa   
  4039fd:	int3   
  4039fe:	je     0x403a04
  403a00:	or     BYTE PTR [eax],al
  403a02:	dec    DWORD PTR [ebx-0x5f1ffb34]
  403a08:	loope  0x4039d6
  403a0a:	int3   
  403a0b:	add    al,0xcc
  403a0d:	or     dh,al
  403a0f:	leave  
  403a10:	xchg   BYTE PTR [ebp-0x75],bl
  403a13:	add    ch,bl
  403a15:	add    al,al
  403a17:	jmp    0x4039a4
  403a19:	push   es
  403a1a:	inc    ebx
  403a1b:	mov    al,ds:0x8501cc32
  403a20:	mov    eax,DWORD PTR [ecx+0xc3ee68]
  403a26:	test   DWORD PTR [eax],eax
  403a28:	int3   
  403a29:	add    bh,bh
  403a2b:	push   0x0
  403a2d:	or     DWORD PTR [ebp-0x4a],esp
  403a30:	jl     0x403a32
  403a32:	mov    eax,DWORD PTR [eax]
  403a34:	lea    esp,[edx]
  403a36:	pushf  
  403a37:	leave  
  403a38:	dec    edi
  403a39:	add    al,0x0
  403a3b:	mov    eax,DWORD PTR [eax+eax*1]
  403a3e:	mov    ecx,esp
  403a40:	add    BYTE PTR [edx-0x58],ah
  403a43:	mov    BYTE PTR [edi],ch
  403a45:	call   0x78410236
  403a4a:	sub    al,0x19
  403a4c:	cmp    ecx,DWORD PTR [esp+ebp*8]
  403a4f:	call   0x5040c554
  403a54:	add    al,0xc6
  403a56:	cld    
  403a57:	push   es
  403a58:	lock loopne 0x403a43
  403a5b:	mov    DWORD PTR [ecx],eax
  403a5d:	aaa    
  403a5e:	stc    
  403a5f:	out    dx,al
  403a60:	xchg   ebx,eax
  403a61:	add    BYTE PTR [eax],dl
  403a63:	add    BYTE PTR [esi+0x15],al
  403a66:	mov    eax,DWORD PTR [eax]
  403a68:	adc    eax,0x35e3793f
  403a6d:	ror    BYTE PTR [eax],0x0
  403a70:	in     al,dx
  403a71:	mov    edx,0xff90938e
  403a76:	adc    BYTE PTR [ebx+ebp*8+0x0],dh
  403a7a:	dec    DWORD PTR [ebx-0x2c9fcfff]
  403a80:	mov    ?,WORD PTR [eax+eax*1+0x46]
  403a84:	inc    ebp
  403a85:	setge  BYTE PTR [edi+0x45cc0021]
  403a8c:	int3   
  403a8d:	add    eax,DWORD PTR [ebp-0x1900ff34]
  403a93:	cmp    DWORD PTR [edi+0x0],ebp
  403a96:	in     al,dx
  403a97:	dec    DWORD PTR [ebx+0x629ce6bb]
  403a9d:	add    DWORD PTR [edx-0x1],ebp
  403aa0:	int3   
  403aa1:	or     bh,bh
  403aa3:	add    DWORD PTR [eax],eax
  403aa5:	call   0x13357c0
  403aaa:	push   ebp
  403aab:	jne    0x403a36
  403aad:	test   DWORD PTR [edx+eiz*4-0xf],ebx
  403ab1:	mov    ecx,esp
  403ab3:	xor    eax,DWORD PTR [eax]
  403ab5:	add    BYTE PTR [eax],al
  403ab7:	mov    ebx,ebp
  403ab9:	push   cs
  403aba:	fcmovbe st,st(0)
  403abc:	fdiv   st(7),st
  403abe:	add    BYTE PTR [eax+eax*1],cl
  403ac1:	dec    edx
  403ac2:	xor    al,0x79
  403ac4:	sub    al,0x8b
  403ac6:	push   esi
  403ac7:	add    BYTE PTR [eax],al
  403ac9:	je     0x403a97
  403acb:	adc    BYTE PTR [ebp+0x7],al
  403ace:	popa   
  403acf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ad0:	pop    ecx
  403ad1:	add    DWORD PTR [ecx],0xffffffc0
  403ad4:	or     BYTE PTR [edi-0x7498f20f],dh
  403ada:	mov    eax,DWORD PTR [eax]
  403adc:	inc    DWORD PTR [ebp+0x45]
  403adf:	(bad)  
  403ae0:	fld    QWORD PTR [ebp-0x1a]
  403ae3:	cmp    dl,BYTE PTR [edi]
  403ae5:	add    BYTE PTR [eax],al
  403ae7:	lea    eax,[ecx]
  403ae9:	lahf   
  403aea:	inc    ebp
  403aeb:	int3   
  403aec:	in     eax,dx
  403aed:	mov    eax,DWORD PTR [eax]
  403aef:	add    ah,ch
  403af1:	mov    eax,eax
  403af3:	adc    eax,0xf603c6ff
  403af8:	in     al,dx
  403af9:	push   eax
  403afa:	add    BYTE PTR [ecx],al
  403afc:	add    DWORD PTR [edi-0x2f],edi
  403aff:	in     eax,dx
  403b00:	loope  0x403a8d
  403b02:	int3   
  403b03:	lea    eax,[eax]
  403b05:	mov    eax,DWORD PTR [ecx]
  403b07:	(bad)  
  403b09:	je     0x403aea
  403b0b:	fsub   st,st(0)
  403b0d:	ud0    ebp,DWORD PTR [edx+0x45]
  403b11:	add    esp,edi
  403b13:	mov    bl,0x7b
  403b15:	add    al,al
  403b17:	mov    DWORD PTR [ebp-0x1],esi
  403b1a:	call   0x5ad4b01e
  403b1f:	dec    ebx
  403b20:	ins    DWORD PTR es:[edi],dx
  403b21:	int3   
  403b22:	add    DWORD PTR [eax],eax
  403b24:	int3   
  403b25:	fild   WORD PTR ds:[esi+0x801e809]
  403b2c:	pop    ebp
  403b2d:	int3   
  403b2e:	or     BYTE PTR [ebp-0x39],dh
  403b31:	mov    eax,0x8318f7dd
  403b36:	push   0x45
  403b38:	or     al,0x91
  403b3a:	call   0x1583:0x4574df07
  403b41:	add    BYTE PTR [edi],cl
  403b43:	dec    DWORD PTR [edi]
  403b45:	xchg   DWORD PTR [edx*2+0x758b01f3],ebp
  403b4c:	int3   
  403b4d:	jmp    0xbdcb33
  403b52:	push   eax
  403b53:	test   edi,edi
  403b55:	int3   
  403b56:	dec    ebp
  403b57:	add    BYTE PTR [eax],al
  403b59:	fwait
  403b5a:	mov    ds:0x8bff1c7a,al
  403b5f:	call   DWORD PTR [esi+0x68]
  403b62:	sbb    eax,0x883e1c4
  403b67:	add    BYTE PTR [edi],cl
  403b69:	or     ah,cl
  403b6b:	add    BYTE PTR [ebx-0x2b2a51b5],cl
  403b71:	lea    eax,[ebp+0x13ff4500]
  403b77:	sbb    DWORD PTR [eax+eax*1],edx
  403b7a:	int3   
  403b7b:	add    BYTE PTR [eax],al
  403b7d:	add    DWORD PTR ds:0x53f985cc,edx
  403b83:	lds    ebp,FWORD PTR [edx+0xcc0800]
  403b89:	push   es
  403b8a:	js     0x403b3d
  403b8c:	jne    0x403b13
  403b8e:	je     0x403b90
  403b90:	mov    ecx,DWORD PTR [ecx-0x74ff7677]
  403b96:	pop    ss
  403b97:	ret    
  403b98:	lahf   
  403b99:	jne    0x403b9b
  403b9b:	add    DWORD PTR [edi],ecx
  403b9d:	jbe    0x403b93
  403b9f:	jmp    0x8b:0xcc8b008d
  403ba6:	push   ebp
  403ba7:	int3   
  403ba8:	add    al,0x1
  403baa:	adc    edx,DWORD PTR [esi+0x4b]
  403bad:	mov    ecx,DWORD PTR [ebx+0x63380f00]
  403bb3:	nop
  403bb4:	fisubr WORD PTR [edx+0x0]
  403bb7:	add    BYTE PTR [ebx-0x33a201],cl
  403bbd:	cmp    al,0x4c
  403bbf:	lds    esp,FWORD PTR [ebp+0x8]
  403bc2:	test   DWORD PTR [ecx+0x6f0c8574],ecx
  403bc8:	and    cl,ah
  403bca:	push   0xffffff8b
  403bcc:	loopne 0x403bb6
  403bce:	loopne 0x403c3a
  403bd0:	mov    DWORD PTR [ebx+0x4e],edi
  403bd3:	cdq    
  403bd4:	mov    ds:0x8b0c0003,al
  403bd9:	ins    BYTE PTR es:[edi],dx
  403bda:	xchg   edi,eax
  403bdb:	mov    ebx,0x5d0400d0
  403be0:	add    BYTE PTR ds:0xe0001000,dl
  403be6:	sar    BYTE PTR [eax+edx*8+0x3],0xf
  403beb:	add    BYTE PTR [ecx-0x5fee1f78],cl
  403bf1:	inc    ebp
  403bf2:	pop    ebp
  403bf3:	add    BYTE PTR ds:0xff0000,dl
  403bf9:	loope  0x403bbf
  403bfb:	jge    0x403bdc
  403bfd:	inc    DWORD PTR [eax]
  403bff:	inc    DWORD PTR [eax]
  403c01:	retf   
  403c02:	js     0x403c4d
  403c04:	pop    esi
  403c05:	test   DWORD PTR [ebx-0x33ff7475],ecx
  403c0b:	adc    BYTE PTR [eax],al
  403c0d:	test   BYTE PTR [esp+eax*1-0x5f],cl
  403c11:	int3   
  403c12:	in     al,dx
  403c13:	add    BYTE PTR [eax],al
  403c15:	aaa    
  403c16:	ret    0x4fe
  403c19:	add    al,0xc
  403c1b:	add    bh,bh
  403c1d:	add    BYTE PTR [esi-0x75],al
  403c20:	add    BYTE PTR [edx-0x31],al
  403c23:	imul   ebx,DWORD PTR [ebp-0x7d],0x0
  403c27:	push   ebp
  403c28:	add    BYTE PTR [edi+0x2a],bl
  403c2b:	jecxz  0x403bd1
  403c2d:	or     BYTE PTR [eax],al
  403c2f:	jne    0x403bbc
  403c31:	add    esp,ecx
  403c33:	add    eax,DWORD PTR [esi-0x75]
  403c36:	arpl   WORD PTR [ebp+eiz*4+0x4006a0f],bx
  403c3d:	sub    DWORD PTR [eax+0xc0dc1a],esp
  403c43:	int3   
  403c44:	or     BYTE PTR [ebp+0x3d750100],al
  403c4a:	in     al,dx
  403c4b:	retf   
  403c4c:	ffree  st(7)
  403c4e:	add    BYTE PTR [ecx],al
  403c50:	add    DWORD PTR [esi],eax
  403c52:	add    al,0xa0
  403c54:	pop    edi
  403c55:	int3   
  403c56:	add    BYTE PTR [ebp-0x73],dh
  403c59:	inc    esi
  403c5a:	add    BYTE PTR [ebp+0x9f03855],cl
  403c60:	in     eax,dx
  403c61:	or     al,0xc0
  403c63:	adc    eax,0xa620eff
  403c68:	in     eax,dx
  403c69:	int3   
  403c6a:	add    BYTE PTR [eax],al
  403c6c:	add    BYTE PTR [ebx-0xb747475],cl
  403c72:	sub    al,0xe2
  403c74:	in     eax,0x89
  403c76:	or     BYTE PTR [ebp-0x34],dh
  403c79:	ret    
  403c7a:	push   ebp
  403c7b:	cli    
  403c7c:	xchg   ebx,eax
  403c7d:	xchg   edi,eax
  403c7e:	add    BYTE PTR [eax],al
  403c80:	push   ebp
  403c81:	add    BYTE PTR [ecx-0x4d],cl
  403c84:	retf   0x8b4c
  403c87:	add    BYTE PTR [eax+0x0],dl
  403c8a:	dec    DWORD PTR [ebp-0x5200337d]
  403c90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c91:	and    eax,DWORD PTR [eax]
  403c93:	add    bh,bh
  403c95:	add    BYTE PTR [ecx],cl
  403c97:	jo     0x403ca5
  403c99:	add    BYTE PTR [eax],0xcc
  403c9c:	mov    ebx,DWORD PTR [ebp+0x10]
  403c9f:	inc    ebp
  403ca0:	dec    DWORD PTR [ebx+0x4b968f19]
  403ca6:	inc    eax
  403ca8:	je     0x403c35
  403caa:	pop    es
  403cab:	bound  eax,QWORD PTR [esi+0x1ff1e]
  403cb1:	add    al,0xc0
  403cb3:	mov    eax,ebp
  403cb5:	adc    BYTE PTR [edx],al
  403cb7:	enter  0x5f3e,0x0
  403cbb:	ror    BYTE PTR [ebx-0x39338ef4],0x59
  403cc2:	int3   
  403cc3:	dec    ebp
  403cc4:	add    bh,bh
  403cc6:	sldt   WORD PTR [eax]
  403cc9:	mov    DWORD PTR [ecx],ecx
  403ccb:	xlat   BYTE PTR ds:[ebx]
  403ccc:	movd   DWORD PTR [eax],mm0
  403ccf:	dec    esp
  403cd1:	add    al,dl
  403cd3:	cmp    BYTE PTR [ebp+0x26],ah
  403cd6:	int3   
  403cd7:	fld    QWORD PTR [eax]
  403cd9:	add    ah,cl
  403cdb:	inc    DWORD PTR [eax]
  403cdd:	add    BYTE PTR ds:0xeb5c8fa3,al
  403ce3:	int3   
  403ce4:	add    al,0xf
  403ce6:	mov    ebp,0x4522d0e7
  403ceb:	add    BYTE PTR [ecx],al
  403ced:	or     bh,bh
  403cef:	inc    esi
  403cf0:	mov    edi,edi
  403cf2:	sbb    esp,DWORD PTR [esp+ebp*8-0x33337c95]
  403cf9:	shl    cl,0xbe
  403cfc:	shl    DWORD PTR [ebx-0x34],0xcc
  403d00:	push   ebp
  403d01:	dec    DWORD PTR [ebx-0x9fe7415]
  403d07:	add    esp,0xffffff9e
  403d0a:	fld    QWORD PTR [eax]
  403d0c:	adc    eax,0xa669f289
  403d11:	dec    eax
  403d12:	push   eax
  403d13:	inc    ebp
  403d14:	add    ah,cl
  403d16:	je     0x403d5e
  403d18:	int3   
  403d19:	mov    esp,edi
  403d1b:	ins    DWORD PTR es:[edi],dx
  403d1c:	retf   
  403d1d:	and    al,0xcc
  403d1f:	or     al,0x1
  403d21:	int3   
  403d22:	int    0xcf
  403d24:	stos   DWORD PTR es:[edi],eax
  403d25:	cmp    cl,ah
  403d27:	(bad)  
  403d29:	mov    edi,edi
  403d2b:	add    BYTE PTR [eax],dl
  403d2d:	je     0x403cfc
  403d2f:	or     al,0xa0
  403d31:	pop    ds
  403d32:	add    BYTE PTR [ebp+0x68335500],al
  403d38:	xlat   BYTE PTR ds:[ebx]
  403d39:	mov    BYTE PTR [eax],al
  403d3b:	add    eax,DWORD PTR [ecx]
  403d3d:	int3   
  403d3e:	(bad)  
  403d3f:	dec    DWORD PTR [ebx-0x48899e96]
  403d45:	mov    ebx,0x8bc00045
  403d4a:	jecxz  0x403d42
  403d4c:	cmp    edx,DWORD PTR [edx]
  403d4e:	mov    DWORD PTR [ebp+0x5d],ecx
  403d51:	add    DWORD PTR [ecx],eax
  403d53:	add    BYTE PTR [eax],cl
  403d55:	int3   
  403d56:	push   es
  403d57:	inc    ebx
  403d58:	fistp  DWORD PTR [edx+0x0]
  403d5b:	add    BYTE PTR [ebx-0x3d38d675],cl
  403d61:	clc    
  403d62:	adc    eax,0xccff0075
  403d67:	inc    ebp
  403d68:	inc    ebp
  403d69:	add    BYTE PTR [edx-0x1782031d],ch
  403d6f:	pop    ebp
  403d70:	movups xmm5,XMMWORD PTR [ecx+0x589817]
  403d77:	int3   
  403d78:	mov    ecx,DWORD PTR [ebx-0xfeff00]
  403d7e:	sbb    BYTE PTR [esi+0x9],ah
  403d81:	cdq    
  403d82:	adc    eax,0x64eb8b00
  403d87:	ret    0x4aa4
  403d8a:	inc    ebp
  403d8b:	or     BYTE PTR [eax],al
  403d8d:	push   DWORD PTR [ebx+ecx*4-0x75]
  403d91:	adc    BYTE PTR [edi],cl
  403d93:	mov    edi,0xcc753a8f
  403d98:	mov    DWORD PTR [ecx],eax
  403d9a:	int3   
  403d9b:	adc    BYTE PTR [ebx+0x310034a],ah
  403da1:	add    BYTE PTR [ebx-0x29177500],cl
  403da7:	loop   0x403de4
  403da9:	ins    BYTE PTR es:[edi],dx
  403daa:	int3   
  403dab:	inc    ebp
  403dac:	(bad)  
  403dad:	jmp    0x403dcb
  403daf:	dec    esp
  403db0:	popa   
  403db1:	leave  
  403db2:	int3   
  403db3:	inc    ebp
  403db4:	mov    ecx,DWORD PTR [ebx-0x74ff22bb]
  403dba:	jns    0x403dcb
  403dbc:	ss cmp bh,bh
  403dbf:	pcmpeqw mm0,QWORD PTR [eax]
  403dc2:	jp     0x403de3
  403dc4:	int3   
  403dc5:	mov    eax,DWORD PTR [eax]
  403dc7:	inc    DWORD PTR [eax]
  403dc9:	call   DWORD PTR [eax]
  403dcb:	add    BYTE PTR ds:0xfb96960c,dl
  403dd1:	sbb    ecx,DWORD PTR [ebx-0x39fffc00]
  403dd7:	fst    QWORD PTR [ebx+eax*8]
  403dda:	jmp    0x403d65
  403ddc:	adc    eax,0x1011574
  403de1:	(bad)  
  403de2:	(bad)  
  403de4:	repz inc eax
  403de6:	mov    ebp,DWORD PTR [edx+0x0]
  403de9:	int3   
  403dea:	push   edi
  403deb:	jbe    0x403db0
  403ded:	mov    WORD PTR [eax],es
  403def:	add    al,0xcc
  403df1:	add    DWORD PTR [ebx+0x2a00ff01],ecx
  403df7:	sahf   
  403df8:	loop   0x403e23
  403dfa:	mov    DWORD PTR [ecx],eax
  403dfc:	add    bh,bh
  403dfe:	(bad)  
  403dff:	fcomp  QWORD PTR es:[ecx-0x741fff34]
  403e06:	add    BYTE PTR [esi+0x0],al
  403e09:	shr    ah,0xab
  403e0c:	out    dx,al
  403e0d:	ror    esp,cl
  403e0f:	mov    DWORD PTR [eax],eax
  403e11:	adc    eax,0x5ee21743
  403e16:	(bad)  
  403e17:	je     0x403e83
  403e19:	in     al,dx
  403e1a:	dec    ebp
  403e1b:	add    BYTE PTR [edi+edi*8+0x25],dh
  403e1f:	sub    esi,ebx
  403e21:	xor    al,0x8b
  403e23:	add    BYTE PTR [eax],al
  403e25:	int3   
  403e26:	sti    
  403e27:	dec    ebx
  403e28:	cwde   
  403e29:	mov    cs,WORD PTR [ebp+0x1]
  403e2c:	add    ecx,esp
  403e2e:	mov    eax,DWORD PTR [esi-0x75]
  403e31:	add    al,0x90
  403e33:	mov    esi,0xdd2941
  403e38:	push   eax
  403e39:	add    DWORD PTR [ebx],ebx
  403e3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e3c:	adc    DWORD PTR [eax+0x4d000001],0x1
  403e43:	mov    ecx,DWORD PTR [ebp+0x0]
  403e46:	mov    edx,tr1
  403e49:	aaa    
  403e4a:	or     al,0x0
  403e4c:	mov    eax,DWORD PTR [eax]
  403e4e:	or     DWORD PTR [esi-0x74339353],esi
  403e54:	je     0x403e9b
  403e56:	add    DWORD PTR [esi+0x10],eax
  403e59:	add    ebx,DWORD PTR [edx-0x6c]
  403e5c:	mov    ds:0xc000df,al
  403e61:	jmp    0x403df6
  403e63:	or     eax,0x755457
  403e68:	int3   
  403e69:	jne    0x403df4
  403e6b:	call   DWORD PTR [eax]
  403e6d:	or     al,0x9e
  403e6f:	data16 mov ?,WORD PTR [ebx+0xf]
  403e73:	mov    eax,DWORD PTR [eax]
  403e75:	add    al,cl
  403e77:	mov    edi,0xdddd1d89
  403e7c:	inc    ebp
  403e7d:	add    BYTE PTR [ebx+0x72080001],cl
  403e83:	(bad)  
  403e84:	jecxz  0x403eca
  403e86:	mov    edi,edi
  403e88:	int3   
  403e89:	je     0x403e5d
  403e8b:	retf   
  403e8c:	(bad)  
  403e8d:	pop    ecx
  403e8e:	push   ebp
  403e8f:	loopne 0x403e90
  403e91:	add    bh,al
  403e93:	or     BYTE PTR [edi],cl
  403e95:	je     0x403e2b
  403e97:	jl     0x403e4c
  403e99:	sti    
  403e9a:	add    bh,bh
  403e9c:	add    BYTE PTR [eax],al
  403e9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e9f:	test   DWORD PTR [edi+0x10cc42],edx
  403ea5:	add    ah,cl
  403ea7:	fisttp QWORD PTR [ebx-0x13109f8]
  403ead:	mov    eax,DWORD PTR ds:[esi-0x1]
  403eb1:	jmp    0x403e6e
  403eb3:	mov    edx,0x8b331d15
  403eb8:	int3   
  403eb9:	test   ebp,ebx
  403ebb:	add    DWORD PTR [ebp+0x6a],ebx
  403ebe:	push   ebx
  403ebf:	cmp    eax,0xff0864be
  403ec4:	jmp    0x403ec6
  403ec6:	sbb    al,0xbb
  403ec8:	daa    
  403ec9:	and    DWORD PTR [ebx+0xc0001cc],ecx
  403ecf:	(bad)  
  403ed0:	inc    DWORD PTR [eax]
  403ed2:	inc    edx
  403ed3:	mov    ebp,0x858b5c1b
  403ed8:	je     0x403ed9
  403eda:	and    edi,DWORD PTR [ebx-0x26]
  403edd:	fs push eax
  403edf:	str    esp
  403ee2:	inc    DWORD PTR [eax]
  403ee4:	or     ah,cl
  403ee6:	repz mov ds:0x8e873ac,eax
  403eec:	jnp    0x6c25b541
  403ef2:	loopne 0x403ec0
  403ef4:	mov    DWORD PTR [ecx],eax
  403ef6:	loopne 0x403ef8
  403ef8:	inc    ebp
  403ef9:	adc    BYTE PTR [edx],dl
  403efb:	scas   eax,DWORD PTR es:[edi]
  403efc:	mov    ebp,0x489ff53
  403f01:	je     0x403e89
  403f03:	gs cmp bh,dh
  403f06:	push   0x1
  403f08:	call   0xff410bd9
  403f0d:	push   0x1f
  403f0f:	shr    DWORD PTR [edx-0x748bff7b],1
  403f15:	add    BYTE PTR [ecx],cl
  403f17:	and    eax,0xc017383
  403f1c:	test   DWORD PTR [ebp+0x88b8b8b],eax
  403f22:	push   ebx
  403f23:	jno    0x403efe
  403f25:	retf   0x8bc7
  403f28:	add    edi,edi
  403f2a:	leave  
  403f2b:	test   ah,bl
  403f2d:	and    al,0x8b
  403f2f:	call   0x75418434
  403f34:	adc    bh,bh
  403f36:	mov    ebp,0x7f92c3
  403f3b:	ror    BYTE PTR [ebx-0x164df5bb],0xfe
  403f42:	add    BYTE PTR [eax],al
  403f44:	push   0xffffffff
  403f46:	mov    DWORD PTR [eax],ecx
  403f48:	inc    esi
  403f49:	add    BYTE PTR [ecx],bl
  403f4b:	aam    0xbf
  403f4d:	sub    al,0xf
  403f50:	mov    eax,DWORD PTR [eax]
  403f52:	outs   dx,BYTE PTR ds:[esi]
  403f53:	and    DWORD PTR [ebp-0x3333fe93],esi
  403f59:	int3   
  403f5a:	lmsw   WORD PTR [eax+eax*1+0x11]
  403f5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f60:	out    0xbb,eax
  403f62:	add    BYTE PTR [ecx+ecx*4+0x50],dh
  403f66:	dec    ebp
  403f67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f68:	sahf   
  403f69:	ror    DWORD PTR [ebx-0x33fffff8],cl
  403f6f:	inc    DWORD PTR [eax]
  403f71:	or     dh,dl
  403f73:	aaa    
  403f74:	or     ah,BYTE PTR [eax]
  403f76:	call   DWORD PTR [eax]
  403f78:	mov    eax,DWORD PTR [eax]
  403f7a:	leave  
  403f7b:	mov    bl,0xa7
  403f7d:	mov    eax,0xff018355
  403f82:	test   DWORD PTR [eax],eax
  403f84:	add    DWORD PTR [eax],eax
  403f86:	pop    ss
  403f87:	mov    ebx,0x4cc799c
  403f8c:	adc    ah,cl
  403f8e:	ret    
  403f8f:	jb     0x403fbe
  403f91:	lea    ebp,[ecx]
  403f93:	inc    DWORD PTR [ebp+0x7115ff5d]
  403f99:	test   DWORD PTR ds:0xc,ebp
  403f9f:	mov    ecx,DWORD PTR [ebx+0x2db01cc]
  403fa5:	xor    al,0x1c
  403fa7:	add    BYTE PTR [eax],al
  403fa9:	add    DWORD PTR [eax],0xffffffaa
  403fac:	inc    edi
  403fad:	hlt    
  403fae:	push   ecx
  403faf:	in     al,dx
  403fb0:	add    BYTE PTR [ebp+0x74],al
  403fb3:	add    DWORD PTR [eax],0x0
  403fb6:	add    BYTE PTR [edi+0x25],ch
  403fb9:	jne    0x403f54
  403fbb:	push   0xffffff8b
  403fbd:	inc    esi
  403fbe:	inc    DWORD PTR [edx]
  403fc0:	adc    esi,DWORD PTR [edi]
  403fc2:	add    al,0x4
  403fc5:	add    BYTE PTR [ebp-0x20],dh
  403fc8:	add    BYTE PTR [eax],al
  403fca:	dec    DWORD PTR [ebx+ebx*2+0x27]
  403fce:	dec    ecx
  403fcf:	add    bh,bh
  403fd1:	int3   
  403fd2:	mov    edx,DWORD PTR [esi]
  403fd4:	outs   dx,BYTE PTR ds:[esi]
  403fd5:	jle    0x404015
  403fd7:	add    DWORD PTR [ebx-0x3333338b],ecx
  403fdd:	add    DWORD PTR [eax],eax
  403fdf:	jmp    0x474:0x893c9052
  403fe6:	fisttp QWORD PTR [edx+ebx*1]
  403fe9:	or     BYTE PTR [esp+esi*2+0x83cccc],cl
  403ff0:	adc    BYTE PTR [eax+eax*1+0x21],dh
  403ff4:	pop    ebx
  403ff5:	xchg   esi,eax
  403ff6:	push   cs
  403ff7:	add    BYTE PTR [eax],al
  403ff9:	mov    esi,DWORD PTR [ebx]
  403ffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ffc:	dec    eax
  403ffd:	add    BYTE PTR ss:[bx+si],al
  404001:	add    ah,cl
  404003:	inc    ebp
  404004:	add    BYTE PTR [ecx],al
  404006:	add    BYTE PTR [ebx],dh
  404008:	add    eax,0xcc103fd3
  40400d:	add    BYTE PTR [ebx+0x48b5387a],cl
  404013:	push   ebp
  404014:	int3   
  404015:	add    BYTE PTR [ebp-0x7c38a920],al
  40401b:	aas    
  40401c:	add    esi,DWORD PTR ds:0x75cc001b
  404022:	add    ecx,esi
  404024:	(bad)  
  404025:	jmp    0x40407a
  404027:	adc    BYTE PTR [ebx+0x45000074],al
  40402d:	add    DWORD PTR [eax],eax
  40402f:	leave  
  404030:	mov    edi,0xc0835c44
  404035:	add    BYTE PTR [eax],al
  404037:	clc    
  404038:	xchg   BYTE PTR ds:0xcc108b48,bh
  40403e:	mov    ecx,DWORD PTR [ecx-0x974b934]
  404044:	mov    bh,0x60
  404046:	push   eax
  404047:	push   0xffffff89
  404049:	lea    ecx,[eax]
  40404b:	sbb    ah,BYTE PTR [ebp+0x750094d0]
  404051:	or     ch,bl
  404053:	lea    eax,[ecx]
  404055:	mov    edx,DWORD PTR [ebp+0x2b]
  404058:	push   esi
  404059:	fs ins DWORD PTR es:[edi],dx
  40405b:	loopne 0x4040a2
  40405d:	je     0x40405e
  40405f:	sub    al,0x52
  404061:	cli    
  404062:	push   cs
  404063:	add    BYTE PTR [eax-0x34],dl
  404066:	mov    eax,DWORD PTR [ebp-0x7274ffbb]
  40406c:	in     eax,dx
  40406d:	lds    edx,FWORD PTR [ebx+0x0]
  404070:	loopne 0x40403e
  404072:	add    DWORD PTR ds:0x52748b,esi
  404078:	adc    BYTE PTR [ebx+0xf8b0000],cl
  40407e:	orps   xmm0,XMMWORD PTR [ecx+ecx*4+0x748d082a]
  404086:	call   FWORD PTR [esi-0x77]
  404089:	popf   
  40408a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40408b:	mov    ecx,DWORD PTR [ebx-0x33ff7300]
  404091:	add    DWORD PTR [ecx-0x460bcb5],ecx
  404097:	add    BYTE PTR [ebx-0x1f098b14],cl
  40409d:	das    
  40409e:	push   edi
  40409f:	or     BYTE PTR [ecx-0x76334000],cl
  4040a5:	add    BYTE PTR [eax],al
  4040a7:	shr    DWORD PTR [edi+0x80c7664],cl
  4040ad:	add    ah,cl
  4040af:	mov    eax,ds:0x13098cf
  4040b4:	add    BYTE PTR [eax],al
  4040b6:	(bad)  
  4040b7:	int3   
  4040b8:	adc    eax,0xb5e2e8cc
  4040bd:	and    al,0xba
  4040bf:	dec    DWORD PTR [edi]
  4040c1:	adc    BYTE PTR [eax],al
  4040c3:	xor    BYTE PTR [edx],bl
  4040c5:	inc    ebp
  4040c6:	xchg   esi,eax
  4040c7:	add    ah,cl
  4040c9:	mov    eax,DWORD PTR [ecx]
  4040cb:	add    BYTE PTR [ebx],al
  4040cd:	add    BYTE PTR [ebx-0x4623b3d7],cl
  4040d3:	int3   
  4040d4:	int3   
  4040d5:	add    ah,ch
  4040d7:	int3   
  4040d8:	dec    ebp
  4040d9:	mov    eax,ds:0xcc88
  4040de:	test   DWORD PTR [ebp-0x7ab20034],eax
  4040e4:	push   esi
  4040e5:	sub    BYTE PTR [ecx],ah
  4040e7:	mov    edi,edi
  4040e9:	mov    DWORD PTR [edi+ebp*4],ecx
  4040ec:	inc    ebp
  4040ed:	gs fdiv st(7),st
  4040f0:	push   0xf
  4040f2:	ud0    ecx,DWORD PTR [ebx-0x3019feff]
  4040f9:	out    0x19,eax
  4040fb:	lea    eax,[ebp-0x3527401]
  404101:	pop    esp
  404102:	add    DWORD PTR [ecx-0x74008a23],ecx
  404108:	je     0x404109
  40410a:	inc    ebp
  40410b:	inc    esp
  40410c:	xchg   ebp,eax
  40410d:	inc    ebx
  40410e:	fwait
  40410f:	int3   
  404110:	add    ah,cl
  404112:	int3   
  404113:	mov    ds:0x5a8f40,eax
  404118:	add    BYTE PTR [eax],al
  40411a:	add    DWORD PTR [eax],eax
  40411c:	add    BYTE PTR [ebp-0x1],bl
  40411f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404120:	inc    esp
  404121:	or     al,0x9e
  404123:	adc    ch,bl
  404125:	add    ah,cl
  404127:	retf   0x8e63
  40412a:	lods   al,BYTE PTR ds:[esi]
  40412b:	add    al,0xdd
  40412d:	add    DWORD PTR [eax],eax
  40412f:	add    edi,0x0
  404132:	add    BYTE PTR [ebx+0x7e],bh
  404135:	test   al,0x2a
  404137:	int3   
  404138:	int3   
  404139:	add    BYTE PTR [eax],cl
  40413b:	jno    0x404178
  40413d:	leave  
  40413e:	ret    0xff89
  404141:	test   esp,ecx
  404143:	pop    ebp
  404144:	xor    eax,DWORD PTR [eax]
  404146:	add    BYTE PTR [esp+edx*8],bl
  404149:	sbb    BYTE PTR [eax],bl
  40414b:	(bad)  
  40414c:	inc    DWORD PTR [ebp+0x3d49170c]
  404152:	push   0xff008bcc
  404157:	mov    eax,DWORD PTR [eax]
  404159:	ltr    WORD PTR [ebp+0x65]
  40415d:	and    al,0x16
  40415f:	add    BYTE PTR [eax],al
  404161:	je     0x404163
  404163:	(bad)  
  404164:	in     al,0x6a
  404166:	xchg   edi,eax
  404167:	inc    ebp
  404168:	(bad)  
  404169:	jmp    0x40416b
  40416b:	add    eax,ebp
  40416d:	adc    ah,cl
  40416f:	mov    cl,0x26
  404171:	mov    esp,0xcc8b004d
  404176:	add    bh,cl
  404178:	popa   
  404179:	push   ecx
  40417a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40417b:	in     al,dx
  40417c:	add    BYTE PTR [ebp-0x72747475],al
  404182:	adc    bl,ah
  404184:	xlat   BYTE PTR ds:[ebx]
  404185:	inc    ebp
  404186:	or     BYTE PTR [ebp-0x5dffff00],0x42
  40418d:	in     eax,0x3
  40418f:	add    BYTE PTR ds:0x75cc8300,dl
  404195:	mov    ecx,esp
  404197:	or     ebp,DWORD PTR [edx]
  404199:	pop    ss
  40419a:	mov    BYTE PTR [eax],0x1
  40419d:	inc    esi
  40419e:	add    BYTE PTR [ebx+edx*2],al
  4041a1:	pop    es
  4041a2:	jb     0x4041a4
  4041a4:	inc    esi
  4041a5:	add    ah,cl
  4041a7:	jne    0x404195
  4041a9:	(bad)  
  4041aa:	jmp    DWORD PTR [esi-0x47]
  4041ad:	into   
  4041ae:	jp     0x4041f5
  4041b0:	add    BYTE PTR [ebp+0x45],al
  4041b3:	sbb    eax,0x85b9df2b
  4041b8:	inc    esi
  4041b9:	add    BYTE PTR [ecx],al
  4041bb:	(bad)  
  4041bc:	mov    eax,DWORD PTR [ebp+0x50]
  4041bf:	pmaxsw mm0,mm1
  4041c2:	in     al,0x0
  4041c4:	inc    ebp
  4041c5:	rol    BYTE PTR [esi+0x28],0x76
  4041c9:	sub    cl,ah
  4041cb:	add    BYTE PTR [eax],al
  4041cd:	in     al,dx
  4041ce:	add    bh,bh
  4041d0:	test   DWORD PTR [eax],eax
  4041d2:	call   FWORD PTR [ebp+edi*2-0x31]
  4041d6:	dec    edx
  4041d7:	inc    DWORD PTR [eax]
  4041d9:	add    BYTE PTR [ebx-0x228895bf],cl
  4041df:	add    BYTE PTR [eax],al
  4041e1:	add    bl,ch
  4041e3:	mov    DWORD PTR [eax],eax
  4041e5:	int3   
  4041e6:	inc    ebp
  4041e7:	pop    ebp
  4041e8:	sti    
  4041e9:	jne    0x40420f
  4041eb:	in     al,dx
  4041ec:	mov    eax,DWORD PTR [eax]
  4041ee:	push   0x11
  4041f0:	xchg   edx,eax
  4041f1:	and    DWORD PTR [ecx],eax
  4041f3:	add    BYTE PTR [ebx],dh
  4041f5:	add    BYTE PTR [ebx+0x890400],cl
  4041fb:	aaa    
  4041fc:	ror    BYTE PTR [eax+0x48ba0],1
  404202:	mov    esp,DWORD PTR [eax-0x1e]
  404205:	sbb    DWORD PTR [ecx-0x2233ff20],ebp
  40420b:	dec    DWORD PTR [ebx-0x1a9b2275]
  404211:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404212:	pop    edi
  404213:	fld    QWORD PTR [eax]
  404215:	add    esp,ecx
  404217:	cmp    DWORD PTR ds:0xf7b,edx
  40421d:	jmp    0x4041e6
  40421f:	mov    esp,ecx
  404221:	invd   
  404223:	and    esp,DWORD PTR [edx+0x3f]
  404226:	mov    BYTE PTR [ebx],al
  404228:	pop    ebp
  404229:	or     ah,cl
  40422b:	mov    ch,0xcb
  40422d:	mov    BYTE PTR [esi],ch
  40422f:	add    DWORD PTR [ebx+eax*4+0x10],esi
  404233:	mov    ecx,esp
  404235:	add    bh,bh
  404237:	ret    
  404238:	push   ebp
  404239:	mov    ebp,esp
  40423b:	sub    esp,0x20
  40423e:	push   ebx
  40423f:	push   esi
  404240:	push   edi
  404241:	lea    eax,[ebp-0x20]
  404244:	push   eax
  404245:	call   DWORD PTR ds:0x418060
  40424b:	lea    eax,[ebp-0x20]
  40424e:	push   eax
  40424f:	call   DWORD PTR ds:0x418034
  404255:	lea    eax,[ebp-0x4]
  404258:	push   eax
  404259:	push   0x1
  40425b:	call   DWORD PTR ds:0x4180c4
  404261:	mov    eax,DWORD PTR [ebp-0x4]
  404264:	mov    ecx,DWORD PTR [eax]
  404266:	lea    edx,[ebp-0x8]
  404269:	push   edx
  40426a:	push   0x4181e0
  40426f:	push   eax
  404270:	call   DWORD PTR [ecx]
  404272:	push   0x3
  404274:	pop    esi
  404275:	mov    ds:0x4194b8,eax
  40427a:	mov    ecx,esi
  40427c:	xor    eax,eax
  40427e:	mov    edx,DWORD PTR ds:0x41941c
  404284:	mov    edx,DWORD PTR [edx+eax*4]
  404287:	mov    edi,DWORD PTR ds:0x4194b8
  40428d:	lea    edx,[edx+edi*1+0xb38dc4a]
  404294:	mov    edi,DWORD PTR ds:0x4194e4
  40429a:	mov    DWORD PTR [edi],edx
  40429c:	add    DWORD PTR ds:0x4194e4,0x4
  4042a3:	xor    edx,edx
  4042a5:	cmp    ecx,esi
  4042a7:	setne  dl
  4042aa:	lea    ecx,[edx+0x2]
  4042ad:	add    eax,ecx
  4042af:	cmp    eax,0xe8
  4042b4:	jb     0x40427e
  4042b6:	mov    edx,DWORD PTR [ebp+0xc]
  4042b9:	mov    ecx,DWORD PTR ds:0x4194e4
  4042bf:	mov    edi,edx
  4042c1:	shr    edi,1
  4042c3:	lea    edi,[edi+edx*2]
  4042c6:	xor    eax,eax
  4042c8:	mov    ebx,esi
  4042ca:	test   edi,edi
  4042cc:	je     0x4042f5
  4042ce:	mov    edx,DWORD PTR [ebp+0x8]
  4042d1:	mov    edx,DWORD PTR [edx+eax*4]
  4042d4:	sub    edx,DWORD PTR ds:0x4194b8
  4042da:	add    edx,0x575dd230
  4042e0:	mov    DWORD PTR [ecx],edx
  4042e2:	xor    edx,edx
  4042e4:	add    ecx,0x4
  4042e7:	cmp    ebx,esi
  4042e9:	setne  dl
  4042ec:	lea    ebx,[edx+0x2]
  4042ef:	add    eax,ebx
  4042f1:	cmp    eax,edi
  4042f3:	jb     0x4042ce
  4042f5:	mov    edi,esi
  4042f7:	xor    eax,eax
  4042f9:	mov    edx,DWORD PTR ds:0x41948c
  4042ff:	mov    edx,DWORD PTR [edx+eax*4]
  404302:	sub    edx,DWORD PTR ds:0x4194b8
  404308:	sub    edx,0x23e9468a
  40430e:	mov    DWORD PTR [ecx],edx
  404310:	xor    edx,edx
  404312:	add    ecx,0x4
  404315:	cmp    edi,esi
  404317:	setne  dl
  40431a:	lea    edi,[edx+0x2]
  40431d:	add    eax,edi
  40431f:	cmp    eax,0xf0
  404324:	jb     0x4042f9
  404326:	push   0xbe
  40432b:	push   0x0
  40432d:	mov    edi,ecx
  40432f:	call   DWORD PTR ds:0x4180b0
  404335:	mov    ecx,esi
  404337:	xor    eax,eax
  404339:	mov    edx,DWORD PTR ds:0x4193ec
  40433f:	mov    edx,DWORD PTR [edx+eax*4]
  404342:	sub    edx,DWORD PTR ds:0x4194b8
  404348:	sub    edx,0x3f8c1c9e
  40434e:	mov    DWORD PTR [edi],edx
  404350:	xor    edx,edx
  404352:	add    edi,0x4
  404355:	cmp    ecx,esi
  404357:	setne  dl
  40435a:	lea    ecx,[edx+0x2]
  40435d:	add    eax,ecx
  40435f:	cmp    eax,0xeb
  404364:	jb     0x404339
  404366:	mov    eax,edi
  404368:	mov    edi,esi
  40436a:	xor    ecx,ecx
  40436c:	mov    edx,DWORD PTR ds:0x419410
  404372:	mov    edx,DWORD PTR [edx+ecx*4]
  404375:	sub    edx,DWORD PTR ds:0x4194b8
  40437b:	sub    edx,0x75bd507c
  404381:	mov    DWORD PTR [eax],edx
  404383:	xor    edx,edx
  404385:	add    eax,0x4
  404388:	cmp    edi,esi
  40438a:	setne  dl
  40438d:	lea    edi,[edx+0x2]
  404390:	add    ecx,edi
  404392:	cmp    ecx,0xd4
  404398:	jb     0x40436c
  40439a:	mov    ecx,eax
  40439c:	mov    edi,esi
  40439e:	xor    eax,eax
  4043a0:	mov    edx,DWORD PTR ds:0x4193d0
  4043a6:	mov    edx,DWORD PTR [edx+eax*4]
  4043a9:	mov    ebx,DWORD PTR ds:0x4194b8
  4043af:	lea    edx,[edx+ebx*1+0x7456140a]
  4043b6:	mov    DWORD PTR [ecx],edx
  4043b8:	xor    edx,edx
  4043ba:	add    ecx,0x4
  4043bd:	cmp    edi,esi
  4043bf:	setne  dl
  4043c2:	lea    edi,[edx+0x2]
  4043c5:	add    eax,edi
  4043c7:	cmp    eax,0xa7
  4043cc:	jb     0x4043a0
  4043ce:	lea    eax,[ebp-0x20]
  4043d1:	push   eax
  4043d2:	call   DWORD PTR ds:0x418040
  4043d8:	lea    eax,[ebp-0x20]
  4043db:	push   eax
  4043dc:	call   DWORD PTR ds:0x418044
  4043e2:	pop    edi
  4043e3:	pop    esi
  4043e4:	pop    ebx
  4043e5:	leave  
  4043e6:	ret    
  4043e7:	jns    0x404419
  4043e9:	push   0xffffffbe
  4043eb:	int3   
  4043ec:	je     0x4043da
  4043ee:	add    DWORD PTR [eax+edi*8+0x7a],eax
  4043f2:	sub    eax,0x508b45
  4043f7:	je     0x40443f
  4043f9:	int3   
  4043fa:	add    DWORD PTR [ebx-0x28],eax
  4043fd:	mov    ebp,DWORD PTR [esi+0x0]
  404400:	loopne 0x404417
  404402:	mov    edx,DWORD PTR [esi]
  404404:	sbb    DWORD PTR ds:0x8bdd0fb7,edx
  40440a:	dec    ebp
  40440b:	rcl    BYTE PTR [ebp+0x0],0x45
  40440f:	jae    0x404428
  404411:	adc    ch,ch
  404413:	test   DWORD PTR [eax-0x75],edx
  404416:	mov    eax,eax
  404418:	pop    ebp
  404419:	sub    eax,DWORD PTR [eax-0x75]
  40441c:	add    BYTE PTR [ebp-0x75],al
  40441f:	int3   
  404420:	add    BYTE PTR [eax],cl
  404422:	push   esi
  404423:	les    esi,FWORD PTR ds:0x858b8e69
  404429:	dec    esp
  40442b:	add    DWORD PTR [ecx+0x1d],ecx
  40442e:	pop    DWORD PTR [eax]
  404430:	inc    esi
  404431:	adc    eax,0x8b100015
  404436:	inc    ecx
  404438:	cs hlt 
  40443a:	add    DWORD PTR [eax],0xffffff8b
  40443d:	or     BYTE PTR [ecx-0x2e86d266],cl
  404443:	add    BYTE PTR [ebx-0x74ff74fc],al
  404449:	int3   
  40444a:	(bad)  
  40444b:	(bad)  
  40444c:	in     eax,dx
  40444d:	adc    al,0x9d
  40444f:	add    BYTE PTR [eax],al
  404451:	add    BYTE PTR [eax+0x38],dl
  404454:	sub    DWORD PTR [eiz*8-0x333f8b7d],esi
  40445b:	(bad)  
  40445c:	rcl    BYTE PTR [esi-0x34],0x26
  404460:	add    cl,bl
  404462:	jp     0x40444f
  404464:	add    BYTE PTR [ebp+0x0],dl
  404467:	psubsw mm5,QWORD PTR [edx+0x11500ad]
  40446e:	dec    DWORD PTR [ebx+0x6c550015]
  404474:	dec    edx
  404475:	imul   esp,DWORD PTR [edx+0x458b08cc],0xffffffef
  40447c:	mov    ah,BYTE PTR [ebp+0x5f]
  40447f:	add    BYTE PTR [ebx+0x508d83cc],cl
  404485:	add    BYTE PTR [ecx+0x64359768],cl
  40448b:	(bad)  
  40448c:	inc    DWORD PTR [eax]
  40448e:	mov    ecx,DWORD PTR [edx]
  404490:	sahf   
  404491:	out    dx,eax
  404492:	int3   
  404493:	or     al,0xdd
  404495:	add    al,0x8b
  404497:	je     0x404465
  404499:	add    BYTE PTR [ebx],dh
  40449b:	dec    BYTE PTR [esi-0x19]
  40449e:	dec    ah
  4044a0:	add    al,0x0
  4044a2:	add    DWORD PTR [esi+0x49a03f2],edi
  4044a8:	mov    ecx,DWORD PTR [ecx-0x76ffcc75]
  4044ae:	adc    eax,0xaa1a5645
  4044b3:	inc    esi
  4044b4:	or     al,0x0
  4044b6:	add    BYTE PTR [edx],dh
  4044b8:	ret    
  4044b9:	xor    edi,DWORD PTR [edx+0x0]
  4044bc:	je     0x404503
  4044be:	mov    DWORD PTR [eax],0xfe8bff74
  4044c4:	lea    ebp,[esi]
  4044c6:	push   ecx
  4044c7:	mov    DWORD PTR [eax+eax*1+0x4d],esi
  4044cb:	sbb    bl,BYTE PTR [edx*1+0x45eb52]
  4044d2:	mov    edi,edi
  4044d4:	add    BYTE PTR [eax],al
  4044d6:	mov    ebx,DWORD PTR [ebx+edx*2]
  4044d9:	int    0x79
  4044db:	add    BYTE PTR [eax],al
  4044dd:	call   DWORD PTR [eax+0x2b]
  4044e0:	push   edx
  4044e1:	(bad)  [edi-0x75]
  4044e4:	xor    edi,edi
  4044e6:	int3   
  4044e7:	add    BYTE PTR [eax],al
  4044e9:	je     0x404530
  4044eb:	repz add al,0x11
  4044ee:	ret    0xff
  4044f1:	or     al,0xc7
  4044f3:	loop   0x40451c
  4044f5:	mov    ecx,DWORD PTR [ebx-0x330077]
  4044fb:	add    DWORD PTR [eax-0x77],edx
  4044fe:	add    BYTE PTR [ebx-0x78],dl
  404501:	xchg   al,ch
  404503:	push   ebp
  404504:	add    BYTE PTR [ebx-0x79a29240],cl
  40450a:	add    BYTE PTR fs:[ebp+0x1],dh
  40450e:	inc    DWORD PTR [eax]
  404510:	mov    eax,DWORD PTR [eax]
  404512:	add    al,bl
  404514:	jg     0x4044f4
  404516:	mov    dh,0x8b
  404518:	inc    esi
  404519:	push   ebp
  40451a:	je     0x4044d7
  40451c:	add    DWORD PTR [ecx-0x26],0x8b0000ff
  404523:	add    BYTE PTR [eax],al
  404525:	inc    ebp
  404526:	int3   
  404527:	mov    eax,ds:0xccdddb6c
  40452c:	test   DWORD PTR [eax],eax
  40452e:	rol    BYTE PTR [ecx-0x3fc4ff37],0x8b
  404535:	(bad)  
  404536:	inc    DWORD PTR [esi-0x39]
  404539:	add    DWORD PTR [eax],eax
  40453b:	push   cs
  40453c:	or     eax,0xcc0177e5
  404541:	add    bh,bh
  404543:	shl    DWORD PTR [esi+eax*4],0x2
  404547:	add    BYTE PTR [eax],al
  404549:	or     al,0xff
  40454b:	xor    DWORD PTR [eax+ebp*8-0x75],0x1a
  404550:	adc    ch,BYTE PTR [ebx]
  404552:	dec    ebp
  404553:	or     al,0x0
  404555:	add    DWORD PTR [ecx+0x666bd66c],ecx
  40455b:	mov    esi,DWORD PTR [ebp+eax*2+0x0]
  40455f:	inc    DWORD PTR [eax]
  404561:	inc    DWORD PTR [eax]
  404563:	push   ebx
  404564:	push   ds
  404565:	inc    ebx
  404566:	sbb    BYTE PTR [ebp-0x34],dh
  404569:	add    BYTE PTR [ecx],al
  40456b:	add    al,0xd5
  40456d:	mov    ah,0xe0
  40456f:	call   DWORD PTR [esi-0x34]
  404572:	or     BYTE PTR [eax],al
  404574:	mov    ebp,esp
  404576:	int3   
  404577:	sahf   
  404578:	xchg   edi,eax
  404579:	pop    ss
  40457a:	inc    edx
  40457b:	inc    ebp
  40457c:	loopne 0x404509
  40457e:	mov    ebp,DWORD PTR [ebx-0x32]
  404581:	aaa    
  404582:	and    ecx,DWORD PTR [ebx+0x15d50]
  404588:	jne    0x40458b
  40458a:	add    bh,al
  40458c:	outs   dx,BYTE PTR ds:[esi]
  40458d:	jae    0x4045ab
  40458f:	test   DWORD PTR [eax],eax
  404591:	add    BYTE PTR [eax],al
  404593:	ins    DWORD PTR es:[edi],dx
  404594:	int    0xe5
  404596:	lahf   
  404597:	jne    0x404524
  404599:	dec    esp
  40459b:	add    BYTE PTR [eax],cl
  40459d:	add    BYTE PTR [ebx],al
  40459f:	jnp    0x40455a
  4045a1:	outs   dx,DWORD PTR ds:[esi]
  4045a2:	lahf   
  4045a3:	add    BYTE PTR [eax],al
  4045a5:	adc    BYTE PTR [eax],al
  4045a7:	loope  0x4045f7
  4045a9:	fiadd  WORD PTR [edi-0x17f733b3]
  4045af:	mov    ecx,esp
  4045b1:	int3   
  4045b2:	inc    esi
  4045b3:	inc    esi
  4045b4:	sub    ebp,DWORD PTR [ecx+0x8b00ea]
  4045ba:	int3   
  4045bb:	add    ebx,DWORD PTR ds:0x10cc9d93
  4045c1:	call   0x13f9313
  4045c6:	add    dh,dl
  4045c8:	addr16 cli 
  4045ca:	mov    eax,0x834675
  4045cf:	ds lock push esi
  4045d2:	xchg   DWORD PTR [eax],eax
  4045d4:	mov    ecx,DWORD PTR [eax]
  4045d6:	add    BYTE PTR [eax],al
  4045d8:	int3   
  4045d9:	mov    ecx,DWORD PTR [ebx+0x6ea4f888]
  4045df:	inc    DWORD PTR [ecx]
  4045e1:	call   DWORD PTR [esi-0x1]
  4045e4:	xor    edx,DWORD PTR [esi]
  4045e6:	push   edi
  4045e7:	add    BYTE PTR ds:0xc00050cc,dl
  4045ed:	pop    ebp
  4045ee:	int3   
  4045ef:	add    dl,BYTE PTR [edx-0x55]
  4045f2:	jne    0x4045c0
  4045f4:	add    BYTE PTR [eax],dl
  4045f6:	add    dl,bh
  4045f8:	sbb    al,0xf7
  4045fa:	test   al,0xff
  4045fc:	bswap  esp
  4045fe:	add    BYTE PTR [esi+eax*2],al
  404601:	je     0x404604
  404603:	out    0x26,eax
  404605:	call   DWORD PTR [edi+0x0]
  404608:	je     0x40467e
  40460a:	mov    edx,DWORD PTR [edx+0x4e]
  40460d:	std    
  40460e:	push   ecx
  40460f:	add    BYTE PTR [ebp-0x7676ba96],al
  404615:	add    esp,ecx
  404617:	out    0x42,al
  404619:	clc    
  40461a:	in     eax,dx
  40461b:	mov    ecx,DWORD PTR [ebx+0x24f10100]
  404621:	cmp    DWORD PTR [esp+ebp*8+0x0],eax
  404625:	jne    0x404626
  404627:	int3   
  404628:	mov    DWORD PTR [esi+0x0],eax
  40462b:	aam    0x1c
  40462d:	mov    ecx,0xcccc00f9
  404632:	add    eax,ebx
  404634:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404635:	(bad)  
  404636:	mov    bh,0xcc
  404638:	add    BYTE PTR ds:0x5600cc00,dl
  40463e:	add    BYTE PTR [ebp+0x2a],al
  404641:	sti    
  404642:	arpl   WORD PTR [eax],ax
  404644:	mov    DWORD PTR [eax],eax
  404646:	add    BYTE PTR [ebx+0x44],dl
  404649:	inc    esp
  40464a:	ror    DWORD PTR [ebx+0x4d000000],1
  404650:	add    BYTE PTR [eax],al
  404652:	push   eax
  404653:	in     eax,0x11
  404655:	ror    BYTE PTR [eax+0x0],0x8b
  404659:	dec    esp
  40465b:	mov    cl,0x8d
  40465d:	cmc    
  40465e:	ror    ah,1
  404660:	mov    DWORD PTR [ebx+0x5615],ecx
  404666:	mov    eax,ecx
  404668:	adc    eax,0x7500f90c
  40466d:	inc    DWORD PTR [ebx-0x49d670d3]
  404673:	add    BYTE PTR [esp+ecx*8+0x0],dh
  404677:	add    BYTE PTR [eax],dl
  404679:	jne    0x40467b
  40467b:	imul   esi,DWORD PTR [edi],0xcc8c46
  404681:	int3   
  404682:	pop    ebp
  404683:	pop    es
  404684:	xchg   ebp,eax
  404685:	adc    DWORD PTR [esi-0x76007b00],0x5601cccc
  40468f:	jne    0x404679
  404691:	xchg   BYTE PTR [ecx],dh
  404693:	add    al,0xc7
  404695:	call   DWORD PTR [eax+0x5e]
  404698:	mov    eax,0x8b10b61c
  40469d:	or     DWORD PTR [ebp+0xcc74],0xffffffbc
  4046a4:	xchg   esi,edx
  4046a6:	dec    esi
  4046a7:	inc    esi
  4046a8:	or     BYTE PTR [eax],al
  4046aa:	inc    ebp
  4046ab:	cs push ds
  4046ad:	inc    esp
  4046ae:	cld    
  4046af:	add    BYTE PTR [esi-0x1],al
  4046b2:	add    ebx,ebp
  4046b4:	or     al,0xe8
  4046b6:	test   DWORD PTR [esi-0xee0eba],esp
  4046bc:	mov    eax,eax
  4046be:	add    ch,bh
  4046c0:	in     eax,0x90
  4046c2:	mov    ds:0x6a088b,eax
  4046c7:	test   DWORD PTR [eax],eax
  4046c9:	add    BYTE PTR [ebx-0x5989315],cl
  4046cf:	add    DWORD PTR [ebx+0x4d8315cc],ecx
  4046d5:	mov    DWORD PTR ds:0x5d008b,esp
  4046db:	(bad)  
  4046dc:	jne    0x4046ea
  4046de:	add    DWORD PTR [edi],esp
  4046e0:	and    ebp,0x5dcc8528
  4046e6:	mov    eax,ebp
  4046e8:	lods   eax,DWORD PTR ds:[esi]
  4046e9:	add    eax,0x10
  4046ec:	int3   
  4046ed:	or     al,0x45
  4046ef:	mov    DWORD PTR [eax],eax
  4046f1:	je     0x404702
  4046f3:	sbb    eax,0x8900463f
  4046f9:	add    BYTE PTR [ebp-0x7],al
  4046fc:	in     eax,dx
  4046fd:	hlt    
  4046fe:	mov    DWORD PTR [eax],0x8b554500
  404704:	or     BYTE PTR [eax],al
  404706:	or     BYTE PTR [esi+0x74400dfa],bl
  40470c:	ud0    ecx,DWORD PTR [ebp-0x3012d9a7]
  404713:	rcr    BYTE PTR [ebp+0x55],0xcc
  404717:	mov    eax,DWORD PTR [ecx]
  404719:	add    ah,cl
  40471b:	fisttp QWORD PTR [edx+0x748b32]
  404721:	int3   
  404722:	add    BYTE PTR [ecx],ch
  404724:	retf   0xd06f
  404727:	loopne 0x404729
  404729:	add    al,ah
  40472b:	add    BYTE PTR [ebx-0x7611ff01],al
  404731:	and    DWORD PTR [esi-0x33747675],ebp
  404737:	mov    bl,0x22
  404739:	cdq    
  40473a:	sbb    DWORD PTR [esp+ecx*1],ecx
  40473d:	dec    DWORD PTR [ebx+0x46ebe800]
  404743:	rcr    BYTE PTR [edx-0x6e],0x6e
  404747:	mov    ecx,DWORD PTR [ebx+0x758ccc01]
  40474d:	inc    esp
  40474e:	test   BYTE PTR [eax],0x0
  404751:	(bad)  
  404752:	str    esp
  404755:	or     BYTE PTR [eax-0x4c],dl
  404758:	sub    dl,BYTE PTR [ebx]
  40475a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40475b:	or     DWORD PTR [ecx-0x4295fb8c],0xffffffce
  404762:	adc    al,0x8d
  404764:	inc    ebp
  404765:	mov    DWORD PTR [ebx+0x16a008b],ecx
  40476b:	lods   al,BYTE PTR ds:[esi]
  40476c:	out    dx,eax
  40476d:	stos   DWORD PTR es:[edi],eax
  40476e:	dec    eax
  40476f:	int3   
  404770:	mov    ebp,ebx
  404772:	je     0x40478e
  404774:	xor    ecx,ecx
  404776:	mov    esp,0x8dff0f00
  40477b:	add    bh,bh
  40477d:	add    BYTE PTR [ebx+0x7c1c11e6],al
  404783:	add    BYTE PTR [eax],al
  404785:	add    BYTE PTR [eax],al
  404787:	ret    
  404788:	push   ss
  404789:	shr    DWORD PTR [eax+0x748500e6],1
  40478f:	inc    ebp
  404790:	call   FWORD PTR [eax+0x29]
  404793:	adc    BYTE PTR [ebp+0x0],al
  404796:	je     0x40480d
  404798:	add    BYTE PTR [eax],al
  40479a:	add    BYTE PTR [eax],al
  40479c:	mov    cl,0x10
  40479e:	inc    eax
  40479f:	rol    BYTE PTR [ecx],0x0
  4047a2:	int3   
  4047a3:	mov    eax,esi
  4047a5:	icebp  
  4047a6:	push   ebp
  4047a7:	mov    esp,0x8ccffff
  4047ac:	inc    ebp
  4047ad:	add    DWORD PTR [ebx-0x6fb260ff],ecx
  4047b3:	ins    DWORD PTR es:[edi],dx
  4047b4:	mov    DWORD PTR [eax],eax
  4047b6:	je     0x4047c0
  4047b8:	add    bl,BYTE PTR [ebp+0x4172]
  4047be:	mov    eax,DWORD PTR [eax]
  4047c0:	inc    ebp
  4047c1:	inc    DWORD PTR [eax]
  4047c3:	mov    DWORD PTR [eax],edx
  4047c5:	or     DWORD PTR [edx],0x1550192
  4047cb:	add    BYTE PTR [edx-0x1d],bl
  4047ce:	or     ebp,DWORD PTR [esi+0xff0400]
  4047d4:	add    DWORD PTR [esp+eax*1],eax
  4047d7:	mov    esp,esp
  4047d9:	sub    edi,DWORD PTR [edx]
  4047db:	add    eax,0x8900
  4047e0:	add    dl,BYTE PTR [ebp+eax*2+0x83ccec]
  4047e7:	mov    DWORD PTR [edi+edi*8+0x1],esi
  4047eb:	push   eax
  4047ec:	lods   eax,DWORD PTR ds:[esi]
  4047ed:	mov    ds:0xccdd1253,al
  4047f2:	add    ah,cl
  4047f4:	int    0xa9
  4047f6:	xchg   ecx,eax
  4047f7:	mov    BYTE PTR [eax],al
  4047f9:	je     0x404784
  4047fb:	add    bh,bh
  4047fd:	inc    esi
  4047fe:	add    BYTE PTR [eax],al
  404800:	push   edi
  404801:	pushw  0x1d
  404804:	loopne 0x404853
  404806:	mov    eax,DWORD PTR [eax]
  404808:	xchg   DWORD PTR [ecx+ebx*4-0x69],ebp
  40480c:	add    bh,bh
  40480e:	mov    ecx,DWORD PTR [eax+eax*1]
  404811:	add    BYTE PTR [eax],al
  404813:	mov    esi,DWORD PTR [edx+0x5daf5052]
  404819:	add    BYTE PTR [eax],al
  40481b:	add    dh,dl
  40481d:	inc    edx
  40481e:	scas   al,BYTE PTR es:[edi]
  40481f:	scas   al,BYTE PTR es:[edi]
  404820:	mov    eax,DWORD PTR [ecx]
  404822:	add    BYTE PTR [ebp+0x4d00ff],cl
  404828:	fcmovnb st,st(4)
  40482a:	or     BYTE PTR [ecx],0xc0
  40482d:	mov    ecx,DWORD PTR [ebx-0x56a5df00]
  404833:	push   edx
  404834:	add    bh,bh
  404836:	or     al,0x1
  404838:	add    ah,cl
  40483a:	add    ah,cl
  40483c:	xlat   BYTE PTR ds:[ebx]
  40483d:	scas   eax,DWORD PTR es:[edi]
  40483e:	ss test al,0x0
  404841:	mov    edi,edi
  404843:	pop    ebp
  404844:	xor    BYTE PTR [edx-0x1f],al
  404847:	mov    eax,DWORD PTR [ecx]
  404849:	add    al,0x4
  40484b:	ror    BYTE PTR [ebx-0x1133748c],0x7a
  404852:	das    
  404853:	xchg   ebx,eax
  404854:	or     BYTE PTR [ebx+0x1c2f0874],al
  40485a:	mov    ds:0x458bc0c0,al
  40485f:	mov    ebx,ebp
  404861:	rol    BYTE PTR [esp+esi*2],0x8f
  404865:	das    
  404866:	lods   eax,DWORD PTR ds:[esi]
  404867:	jo     0x40487e
  404869:	add    BYTE PTR [eax],al
  40486b:	add    DWORD PTR [edi+eiz*4-0x1],esp
  40486f:	inc    bp
  404871:	je     0x4047f6
  404873:	add    BYTE PTR [eax],al
  404875:	add    ch,bl
  404877:	call   FWORD PTR [ebp-0x59]
  40487a:	iret   
  40487b:	scas   eax,DWORD PTR es:[edi]
  40487c:	add    BYTE PTR [eax],al
  40487e:	dec    DWORD PTR [ecx+0x6a032b34]
  404884:	add    eax,eax
  404886:	add    BYTE PTR [ebx+0x1dd4585],cl
  40488c:	(bad)  
  40488d:	jmp    0x10c9fe4
  404892:	rol    BYTE PTR [eax],0xc
  404895:	enter  0x605,0x0
  404899:	inc    ebp
  40489a:	adc    eax,0xff890085
  40489f:	ror    BYTE PTR [edi],0x82
  4048a2:	dec    eax
  4048a3:	or     eax,0x10146
  4048a8:	cmp    al,0xae
  4048aa:	aas    
  4048ab:	test   DWORD PTR fs:[eax],edx
  4048ae:	je     0x40483b
  4048b0:	int3   
  4048b1:	inc    DWORD PTR [ecx]
  4048b3:	mov    ebp,edx
  4048b5:	cmp    ebp,ebp
  4048b7:	fiadd  DWORD PTR [eax]
  4048b9:	int3   
  4048ba:	xor    edx,DWORD PTR [esi+0x34]
  4048bd:	cmp    eax,0xcc8baf4d
  4048c2:	add    BYTE PTR [ebp-0x7d],bl
  4048c5:	add    BYTE PTR [esp+ebp*8],cl
  4048c8:	jmp    0x404873
  4048ca:	pop    es
  4048cb:	inc    edx
  4048cc:	lea    edx,[ebp-0x40]
  4048cf:	add    al,0x1a
  4048d1:	cmc    
  4048d2:	push   edx
  4048d3:	sub    ecx,DWORD PTR [ebx-0x74748bff]
  4048d9:	dec    DWORD PTR [ecx-0x38ea9f00]
  4048df:	inc    ebx
  4048e0:	add    ch,bl
  4048e2:	inc    DWORD PTR [eax]
  4048e4:	pusha  
  4048e5:	mov    ds:0x8bffc0e6,eax
  4048ea:	dec    esp
  4048ec:	push   DWORD PTR [eax+eax*1+0x0]
  4048f0:	mov    edi,0x25fa75
  4048f5:	add    BYTE PTR [ebp-0x1],dl
  4048f8:	fwait
  4048f9:	mov    esi,0x7474b69c
  4048fe:	add    BYTE PTR [eax],al
  404900:	add    BYTE PTR [eax],al
  404902:	add    DWORD PTR [ebx-0x67cdc95b],ecx
  404908:	mov    eax,DWORD PTR [eax]
  40490a:	int3   
  40490b:	cvtdq2ps xmm6,XMMWORD PTR [edx+0x800c6ba]
  404912:	add    BYTE PTR [ebx+0x75e88bcc],cl
  404918:	mov    ebx,edi
  40491a:	in     al,dx
  40491b:	in     al,dx
  40491c:	or     BYTE PTR [ebx+0x4a218d8b],al
  404922:	and    esp,DWORD PTR [edi]
  404924:	int3   
  404925:	pop    ebp
  404926:	loopne 0x404985
  404928:	loopne 0x40492a
  40492a:	adc    eax,0x37d6d00
  40492f:	and    cl,ah
  404931:	dec    DWORD PTR [ebp-0x34]
  404934:	mov    ebx,DWORD PTR [ebp*8+0xfffccc3]
  40493b:	loopne 0x4048c6
  40493d:	je     0x40493f
  40493f:	adc    BYTE PTR [edx],ah
  404941:	and    DWORD PTR ds:0x83460898,ebp
  404947:	int3   
  404948:	mov    ds:0xff0f8d29,eax
  40494d:	mov    eax,DWORD PTR [eax]
  40494f:	xor    esi,DWORD PTR [ebx]
  404951:	adc    DWORD PTR [esi-0x7b],0x63
  404955:	jmp    0x8900:0x154dc461
  40495c:	ins    BYTE PTR es:[edi],dx
  40495d:	mov    bl,0xa2
  40495f:	dec    ebx
  404960:	mov    ecx,DWORD PTR [ebx+0x3008b8b]
  404966:	int3   
  404967:	add    dl,al
  404969:	mov    esp,DWORD PTR [ecx]
  40496b:	pusha  
  40496c:	test   DWORD PTR [ebp-0x1],eax
  40496f:	or     BYTE PTR [edi+edi*4-0x49],ch
  404973:	jecxz  0x4048fe
  404975:	pop    ebp
  404976:	add    DWORD PTR [eax],eax
  404978:	int3   
  404979:	mov    ecx,DWORD PTR [ebx-0x7ad22f34]
  40497f:	jmp    0x4049d7
  404981:	in     al,dx
  404982:	(bad)  
  404983:	jne    0x404936
  404985:	push   ebp
  404986:	inc    ecx
  404987:	and    DWORD PTR [ebx-0x17ff0100],ecx
  40498d:	int3   
  40498e:	or     al,0x0
  404990:	push   0xfffffffa
  404992:	in     al,dx
  404993:	enter  0x45,0x0
  404997:	push   ebp
  404998:	sbb    eax,0x45ba0fee
  40499d:	mov    ecx,esp
  40499f:	mov    edi,edi
  4049a1:	push   DWORD PTR [ebp+eax*4+0x2b]
  4049a5:	loop   0x4049b0
  4049a7:	mov    ds:0xcc00468b,al
  4049ac:	mov    eax,ds:0x8b97b4fd
  4049b1:	inc    DWORD PTR [ebp-0x7638ff8b]
  4049b7:	push   ebp
  4049b9:	jns    0x4049de
  4049bb:	stos   BYTE PTR es:[edi],al
  4049bc:	mov    eax,DWORD PTR [eax]
  4049be:	push   esi
  4049bf:	push   0x4b
  4049c1:	jmp    0x760d04e4
  4049c6:	mov    esp,ecx
  4049c8:	add    DWORD PTR [ebp+0x50],0xffffffe8
  4049cc:	xlat   BYTE PTR ds:[ebx]
  4049cd:	stos   BYTE PTR es:[edi],al
  4049ce:	js     0x40499d
  4049d0:	mov    ecx,DWORD PTR [eax]
  4049d2:	dec    DWORD PTR [eax]
  4049d4:	shr    BYTE PTR [ecx],0xb8
  4049d7:	pop    ss
  4049d8:	or     al,0x89
  4049da:	push   ebp
  4049db:	int3   
  4049dc:	jne    0x4049de
  4049de:	test   DWORD PTR [ebp+0x2d],esi
  4049e1:	outs   dx,DWORD PTR ds:[esi]
  4049e2:	inc    ebp
  4049e3:	fst    QWORD PTR [eax]
  4049e5:	add    BYTE PTR [eax],al
  4049e7:	add    BYTE PTR [ebx],cl
  4049e9:	jg     0x404a1b
  4049eb:	ss int3 
  4049ed:	add    BYTE PTR [ebx+ecx*4],cl
  4049f0:	(bad)  
  4049f2:	push   0x0
  4049f4:	leave  
  4049f5:	pop    esi
  4049f6:	das    
  4049f7:	fadd   QWORD PTR [eax]
  4049f9:	add    BYTE PTR [ebx-0x23c840cd],cl
  4049ff:	sub    al,0x0
  404a01:	add    BYTE PTR [esi+eax*2],cl
  404a04:	push   esi
  404a05:	xor    DWORD PTR [ebp-0x7d],0xffffffb5
  404a09:	pop    ecx
  404a0a:	enter  0x14f,0x0
  404a0e:	inc    DWORD PTR [ebx-0x66537e5d]
  404a14:	je     0x4049e2
  404a16:	add    BYTE PTR [ebx-0x8b34],cl
  404a1c:	mov    es,WORD PTR [edx-0x74762f53]
  404a22:	jne    0x404a8e
  404a24:	pop    ds
  404a25:	jp     0x404a6c
  404a27:	(bad)  
  404a28:	push   eax
  404a29:	add    BYTE PTR [ebx-0x17f73400],cl
  404a2f:	add    BYTE PTR [eax],dl
  404a31:	clc    
  404a32:	cmp    DWORD PTR [eax+0x4],ebx
  404a35:	mov    ecx,DWORD PTR [ecx+0x68d4ad6a]
  404a3b:	adc    eax,0x8ff04
  404a40:	jne    0x404a4a
  404a42:	add    DWORD PTR [ebp+0x25],eax
  404a45:	dec    edx
  404a46:	outs   dx,BYTE PTR ds:[esi]
  404a47:	xchg   esi,eax
  404a48:	int3   
  404a49:	mov    edx,DWORD PTR [ebp-0x73]
  404a4c:	jno    0x404a8f
  404a4e:	push   esp
  404a4f:	push   ss
  404a50:	adc    BYTE PTR [eax+eax*1],cl
  404a53:	dec    ebp
  404a54:	test   esp,ecx
  404a56:	jnp    0xe05fb7a7
  404a5c:	dec    esp
  404a5e:	or     BYTE PTR [eax],al
  404a60:	cmovs  edx,edx
  404a63:	scas   al,BYTE PTR es:[edi]
  404a64:	int3   
  404a65:	add    DWORD PTR [ecx],eax
  404a67:	in     al,dx
  404a68:	mov    eax,DWORD PTR [eax]
  404a6a:	dec    esp
  404a6c:	adc    edi,DWORD PTR [edx-0x36]
  404a6f:	das    
  404a70:	add    BYTE PTR [eax],al
  404a72:	pop    ebp
  404a73:	je     0x404ad5
  404a75:	mov    es,WORD PTR [ecx-0x2]
  404a78:	inc    DWORD PTR [ecx]
  404a7a:	mov    DWORD PTR [ecx+0x4d8300],ecx
  404a80:	push   esp
  404a81:	inc    ebp
  404a82:	or     DWORD PTR [ebx],ecx
  404a84:	fld    QWORD PTR [eax]
  404a86:	int3   
  404a87:	jmp    0x404af7
  404a89:	sbb    al,0x4a
  404a8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a8c:	int3   
  404a8d:	je     0x404a8f
  404a8f:	mov    DWORD PTR [eax],0xebe88900
  404a95:	gs inc edi
  404a97:	pop    esi
  404a98:	add    DWORD PTR [ebp+0x33],ebx
  404a9b:	mov    esi,DWORD PTR [edx+0x78]
  404a9e:	mov    eax,0x75cc10b1
  404aa3:	call   0xeb404b74
  404aa8:	je     0x404ada
  404aaa:	xchg   dl,ah
  404aac:	add    BYTE PTR [ecx+0x79a6cc56],cl
  404ab2:	inc    ebx
  404ab3:	scas   eax,DWORD PTR es:[edi]
  404ab4:	inc    ebp
  404ab5:	add    BYTE PTR [ebx],al
  404ab7:	test   DWORD PTR [ebx+0x1308c000],ecx
  404abd:	mov    ch,0xe4
  404abf:	or     eax,0x15458900
  404ac4:	jecxz  0x404aec
  404ac6:	stos   BYTE PTR es:[edi],al
  404ac7:	and    bh,bh
  404ac9:	mov    esp,ecx
  404acb:	int3   
  404acc:	mov    eax,DWORD PTR [eax]
  404ace:	ror    BYTE PTR [eax],0xca
  404ad1:	sub    ebp,edi
  404ad3:	inc    esi
  404ad4:	or     al,0x3
  404ad6:	pop    ebp
  404ad7:	or     al,0x3e
  404ad9:	push   edi
  404ada:	add    eax,0x8983cc17
  404adf:	(bad)  
  404ae0:	call   DWORD PTR [ebp+0x45]
  404ae3:	punpcklwd mm7,DWORD PTR [eax]
  404ae6:	lods   al,BYTE PTR ds:[esi]
  404ae7:	adc    eax,0xcc00105d
  404aec:	sti    
  404aed:	fidiv  WORD PTR [edx-0x74ff1f1d]
  404af3:	add    BYTE PTR [eax],al
  404af5:	add    BYTE PTR [eax],al
  404af7:	add    ebx,eax
  404af9:	out    0x8b,al
  404afb:	push   ecx
  404afc:	rol    DWORD PTR [eax],0x85
  404aff:	add    BYTE PTR [ebp-0x2251c1ae],al
  404b05:	add    ah,cl
  404b07:	mov    DWORD PTR [eax],eax
  404b09:	add    BYTE PTR [eax],al
  404b0b:	adc    BYTE PTR [eax],al
  404b0d:	int3   
  404b0e:	or     edx,eax
  404b10:	fwait
  404b11:	int3   
  404b12:	je     0x404a9f
  404b14:	add    BYTE PTR [ecx+0x27],dh
  404b17:	shl    DWORD PTR [edx],cl
  404b19:	inc    ebp
  404b1a:	mov    eax,DWORD PTR [eax]
  404b1c:	pop    ebp
  404b1d:	mov    ecx,DWORD PTR [eax+eax*1]
  404b20:	mov    eax,DWORD PTR [ecx]
  404b22:	cmp    dl,BYTE PTR [edx]
  404b24:	dec    edx
  404b25:	je     0x404b27
  404b27:	add    al,0x8b
  404b29:	xchg   DWORD PTR [ebx-0x70],esi
  404b2c:	in     al,0x45
  404b2e:	add    BYTE PTR [ebx+0x4500cc8b],cl
  404b34:	loopne 0x404aed
  404b36:	int    0x43
  404b38:	xchg   ebp,eax
  404b39:	int3   
  404b3a:	inc    ebp
  404b3b:	add    DWORD PTR [eax],eax
  404b3d:	mov    ds:0x4d0cdb,al
  404b42:	or     al,0xc0
  404b44:	add    BYTE PTR [ecx],al
  404b46:	mov    ecx,DWORD PTR [eax]
  404b48:	add    al,0x4f
  404b4a:	jne    0x404ba4
  404b4c:	mov    BYTE PTR [ebp+0x0],dh
  404b4f:	inc    esi
  404b50:	add    BYTE PTR [edi-0x30dc3],dl
  404b56:	add    BYTE PTR [eax],al
  404b58:	mov    DWORD PTR [eax],eax
  404b5a:	add    bh,bh
  404b5c:	add    ch,dl
  404b5e:	stos   DWORD PTR es:[edi],eax
  404b5f:	loop   0x404b91
  404b61:	add    ah,cl
  404b63:	push   esi
  404b64:	mov    esi,DWORD PTR [edx+esi*2+0x16]
  404b68:	sbb    edi,edi
  404b6a:	dec    esp
  404b6c:	add    BYTE PTR [edx-0x77],ch
  404b6f:	(bad)  
  404b70:	jmp    0x404b62
  404b72:	sub    edi,DWORD PTR [ecx]
  404b74:	cmp    DWORD PTR [ebp-0x75],ebx
  404b77:	mov    ecx,DWORD PTR [eax]
  404b79:	sbb    cl,dl
  404b7b:	bound  ebx,QWORD PTR [ebx-0x7474008c]
  404b81:	lea    eax,[eax]
  404b83:	test   DWORD PTR [ebx],esi
  404b85:	push   cs
  404b86:	pop    ss
  404b87:	enter  0x5545,0x0
  404b8b:	mov    ecx,DWORD PTR [ebp-0x703f7697]
  404b91:	(bad)  
  404b93:	mov    eax,DWORD PTR [eax]
  404b95:	inc    ebp
  404b96:	add    BYTE PTR [ebx+0x68579c00],cl
  404b9c:	sub    eax,0x748b00eb
  404ba1:	push   DWORD PTR [edx+eiz*1+0x2c]
  404ba5:	int3   
  404ba6:	mov    edx,DWORD PTR [ebp+0x0]
  404ba9:	jne    0x404bb3
  404bab:	mov    DWORD PTR [ebx+0x2eb18593],ecx
  404bb1:	int3   
  404bb2:	in     al,dx
  404bb3:	add    BYTE PTR [ebp-0x66],cl
  404bb6:	loopne 0x404c2c
  404bb8:	or     al,0x45
  404bba:	push   ebp
  404bbb:	add    BYTE PTR [ebx+0x558b8bcc],cl
  404bc1:	sub    al,0xfc
  404bc3:	stc    
  404bc4:	lahf   
  404bc5:	add    eax,DWORD PTR [eax+ecx*1]
  404bc8:	(bad)  
  404bca:	test   DWORD PTR [edx],0x8d00a1
  404bd0:	add    BYTE PTR [ebx-0x17760075],cl
  404bd6:	xor    edx,esp
  404bd8:	test   DWORD PTR [ebp-0x6c330100],0x838cd6fc
  404be2:	int3   
  404be3:	add    BYTE PTR [eax],cl
  404be5:	or     BYTE PTR [ecx-0x76dffff8],cl
  404beb:	aas    
  404bec:	dec    esi
  404bed:	rol    BYTE PTR [eax],0x0
  404bf0:	add    al,0xec
  404bf2:	fwait
  404bf3:	cwde   
  404bf4:	cwde   
  404bf5:	dec    DWORD PTR [eax]
  404bf7:	or     al,0x75
  404bf9:	add    DWORD PTR [ecx+0x2bcb89cc],ecx
  404bff:	cs cmp eax,0xc0cce083
  404c05:	push   ebp
  404c06:	add    al,0xb4
  404c08:	mov    eax,0xff46ff00
  404c0d:	in     al,dx
  404c0e:	inc    DWORD PTR [ecx]
  404c10:	call   FWORD PTR [edx+ebx*1]
  404c13:	fcom   st(6)
  404c15:	sldt   WORD PTR [eax]
  404c18:	mov    ebx,DWORD PTR [ebx]
  404c1a:	ret    0x7b73
  404c1d:	int3   
  404c1e:	add    BYTE PTR [ebp+0x75cc00ff],cl
  404c24:	mov    esp,esp
  404c26:	test   BYTE PTR [eax],0x2c
  404c29:	add    BYTE PTR [eax],al
  404c2b:	mov    ebx,DWORD PTR [ebp+0x1b]
  404c2e:	iret   
  404c2f:	sbb    bl,dl
  404c31:	add    BYTE PTR [eax],al
  404c33:	lea    eax,[ecx]
  404c35:	push   esi
  404c36:	add    BYTE PTR [ebx+0x69e4aa00],cl
  404c3c:	xchg   ebx,eax
  404c3d:	add    BYTE PTR [eax],al
  404c3f:	mov    eax,DWORD PTR [eax]
  404c41:	ins    DWORD PTR es:[edi],dx
  404c42:	je     0x404c48
  404c44:	dec    ecx
  404c45:	inc    DWORD PTR [eax+eax*1]
  404c48:	call   0x10cd7d8
  404c4d:	pop    ebp
  404c4e:	or     ebp,ebx
  404c50:	dec    esp
  404c51:	add    ah,cl
  404c53:	add    BYTE PTR [ebx+0x6cd05bd9],cl
  404c59:	add    DWORD PTR [ebx+0xf8b4dcc],ecx
  404c5f:	add    bh,bh
  404c61:	sub    DWORD PTR [edx],ebp
  404c63:	test   DWORD PTR [ecx],esi
  404c65:	int3   
  404c66:	int3   
  404c67:	add    BYTE PTR [ecx],al
  404c69:	cmp    eax,0x56073674
  404c6e:	add    BYTE PTR [eax],al
  404c70:	add    BYTE PTR [ecx+0x638b45cc],cl
  404c76:	pop    ss
  404c77:	xor    edi,ecx
  404c79:	mov    edi,edi
  404c7b:	int3   
  404c7c:	dec    ebp
  404c7d:	mov    bh,0x5f
  404c7f:	push   esi
  404c80:	fmul   DWORD PTR [ecx+eax*1]
  404c83:	int3   
  404c84:	mov    esi,DWORD PTR [ebp-0x75]
  404c87:	mov    edx,DWORD PTR [eax]
  404c89:	push   0x8b6cb13d
  404c8e:	add    BYTE PTR [eax],cl
  404c90:	lea    ecx,[ebx-0x2]
  404c93:	imul   ebx,DWORD PTR [ebx],0x898b04
  404c99:	dec    DWORD PTR [eax]
  404c9b:	jne    0x404c9d
  404c9d:	retf   0xc0cf
  404ca0:	mov    bh,0x4
  404ca2:	mov    eax,edi
  404ca4:	add    bl,cl
  404ca6:	sbb    BYTE PTR [ebx+0x6a8b451f],dh
  404cac:	add    BYTE PTR [ebp-0x34],al
  404caf:	add    BYTE PTR [ebx-0x1518e9af],cl
  404cb5:	push   DWORD PTR [ebp-0x75]
  404cb8:	add    BYTE PTR [ebx+ebp*1-0x2],ch
  404cbc:	xchg   edi,eax
  404cbd:	add    BYTE PTR [ecx],al
  404cbf:	add    BYTE PTR [eax],al
  404cc1:	rcl    BYTE PTR [eax],0x8b
  404cc4:	add    BYTE PTR [eax+0x1],ah
  404cc7:	(bad)  
  404cc9:	mov    eax,DWORD PTR [eax]
  404ccb:	push   eax
  404ccc:	add    BYTE PTR [esi+0x44ce02c],dl
  404cd2:	rol    BYTE PTR [ecx],0xcc
  404cd5:	inc    ebp
  404cd6:	push   DWORD PTR [edi+edi*8-0xa]
  404cda:	cld    
  404cdb:	push   esi
  404cdc:	mov    eax,ds:0x8b008bff
  404ce1:	retf   0x66ec
  404ce4:	jae    0x404ce6
  404ce6:	je     0x404d3e
  404ce8:	rol    BYTE PTR [eax],0x75
  404ceb:	int3   
  404cec:	add    BYTE PTR [ebp+eiz*8+0x1ff9785],ah
  404cf3:	jne    0x404d05
  404cf5:	(bad)
  404cf8:	jbe    0x404d06
  404cfa:	mov    eax,DWORD PTR [ebp+0x0]
  404cfd:	add    al,ah
  404cff:	mov    eax,DWORD PTR [eax]
  404d01:	mov    ds:0x257f4c,al
  404d06:	add    BYTE PTR [ebp+0x6c1bc0cc],al
  404d0c:	dec    edx
  404d0d:	mov    DWORD PTR ds:0x1000033,edx
  404d13:	push   esi
  404d14:	add    BYTE PTR [edx],ah
  404d16:	push   edx
  404d17:	push   ebx
  404d18:	mov    eax,0x89c075
  404d1d:	mov    ds,WORD PTR [ebx+ebx*2+0xff2c]
  404d24:	int3   
  404d25:	adc    eax,0x220c8300
  404d2a:	mov    al,ds:0x1000a791
  404d2f:	add    ah,cl
  404d31:	mov    al,ds:0x85f993ae
  404d36:	inc    DWORD PTR [ebp+0x15]
  404d39:	rol    BYTE PTR [ebx+0x55fb0800],0xd0
  404d40:	sbb    esp,ecx
  404d42:	add    DWORD PTR [ebp-0x39],ebx
  404d45:	inc    eax
  404d46:	mov    ebx,?
  404d48:	cmp    eax,0x8740000
  404d4d:	je     0x404d57
  404d4f:	add    BYTE PTR [ebx-0x52949abb],cl
  404d55:	inc    DWORD PTR [ebp+0x18e000ff]
  404d5b:	pop    es
  404d5c:	and    al,0x45
  404d5e:	jne    0x404dd4
  404d60:	add    BYTE PTR [ebp+0x0],bl
  404d63:	add    BYTE PTR [eax],dl
  404d65:	and    bh,BYTE PTR [ecx]
  404d67:	icebp  
  404d68:	leave  
  404d69:	int3   
  404d6a:	inc    ebp
  404d6b:	je     0x404d6c
  404d6d:	adc    eax,edx
  404d6f:	fimul  DWORD PTR [eax+eax*1+0x8]
  404d73:	dec    DWORD PTR [ebx+0xcccc]
  404d79:	add    BYTE PTR [ebx-0x337c7e40],dh
  404d7f:	add    ah,cl
  404d81:	out    dx,al
  404d82:	mov    eax,0x8b00127e
  404d87:	or     BYTE PTR [eax],cl
  404d89:	add    BYTE PTR [eax],al
  404d8b:	inc    DWORD PTR [eax]
  404d8d:	stos   BYTE PTR es:[edi],al
  404d8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d8f:	xor    eax,0x458915b3
  404d94:	je     0x404da4
  404d96:	dec    esp
  404d97:	mov    fs,WORD PTR [edx+0x6a8b45]
  404d9d:	mov    eax,DWORD PTR [eax]
  404d9f:	test   DWORD PTR [eax],eax
  404da1:	scas   eax,DWORD PTR es:[edi]
  404da2:	hlt    
  404da3:	(bad)  
  404da4:	xchg   edx,eax
  404da5:	or     BYTE PTR [eax],dl
  404da7:	add    BYTE PTR ds:0x7298e924,dl
  404dad:	mov    eax,DWORD PTR [esp+esi*2]
  404db0:	int3   
  404db1:	add    bh,bh
  404db3:	adc    al,al
  404db5:	adc    edi,esp
  404db7:	ret    
  404db8:	lods   al,BYTE PTR ds:[esi]
  404db9:	int3   
  404dba:	inc    DWORD PTR [ebp-0x1b1ff300]
  404dc0:	aas    
  404dc1:	je     0x404d4e
  404dc3:	xor    ebp,eax
  404dc5:	mov    DWORD PTR [ecx-0x4bafff8c],ecx
  404dcb:	mov    bh,0xaa
  404dcd:	add    BYTE PTR [eax],al
  404dcf:	add    BYTE PTR [ebx-0x1102223b],cl
  404dd5:	inc    DWORD PTR [eax]
  404dd7:	add    BYTE PTR [eax],al
  404dd9:	add    DWORD PTR [eax],0xffffff8b
  404ddc:	mov    esp,DWORD PTR [edi]
  404dde:	out    dx,eax
  404ddf:	pop    ecx
  404de0:	adc    al,0x8b
  404de2:	or     esp,0xffffffdd
  404de5:	cmp    ah,BYTE PTR [edx]
  404de7:	sahf   
  404de8:	cli    
  404de9:	add    BYTE PTR [eax],al
  404deb:	add    DWORD PTR [eax],eax
  404ded:	int3   
  404dee:	add    BYTE PTR [eax],al
  404df0:	add    BYTE PTR [ebp+0x456671ad],bh
  404df6:	push   eax
  404df7:	inc    ebp
  404df8:	in     al,dx
  404df9:	add    al,0x2a
  404dfb:	jl     0x404dc7
  404dfd:	int3   
  404dfe:	add    eax,DWORD PTR [eax]
  404e00:	je     0x404e17
  404e02:	lea    eax,[eax]
  404e04:	add    al,0xbf
  404e06:	add    DWORD PTR [edx],esi
  404e08:	cmc    
  404e09:	add    DWORD PTR [eax],0x0
  404e0c:	add    BYTE PTR [eax-0x3310faba],ch
  404e12:	int3   
  404e13:	or     BYTE PTR [ebp-0x75],dh
  404e16:	inc    DWORD PTR [eax]
  404e18:	or     BYTE PTR [ecx+0x195b009],al
  404e1e:	int3   
  404e1f:	int3   
  404e20:	add    dh,cl
  404e22:	mov    eax,ds:0xb1a3
  404e27:	add    BYTE PTR [ebx+0x4d8bcc5d],cl
  404e2d:	ins    BYTE PTR es:[edi],dx
  404e2e:	in     al,dx
  404e2f:	test   BYTE PTR [edi+edi*8-0x4774ff01],bh
  404e36:	adc    bl,BYTE PTR [edx]
  404e38:	dec    esp
  404e39:	dec    DWORD PTR [ecx+0x8cc0010]
  404e3f:	add    ah,cl
  404e41:	cmp    al,0x88
  404e43:	jno    0x404ea1
  404e45:	mov    eax,DWORD PTR [ecx]
  404e47:	or     ah,cl
  404e49:	loope  0x404e49
  404e4b:	stc    
  404e4c:	and    ecx,DWORD PTR [edi]
  404e4e:	add    ah,cl
  404e50:	call   0xed2bd9e0
  404e55:	int    0xf6
  404e57:	ret    0x12
  404e5a:	adc    BYTE PTR [ebp+0x56],dh
  404e5d:	(bad)  
  404e5e:	les    esi,FWORD PTR [esi+0x12]
  404e61:	lea    eax,[eax]
  404e63:	jmp    0x404e25
  404e65:	add    BYTE PTR [ebp+0x0],dl
  404e68:	int3   
  404e69:	pop    edx
  404e6a:	mov    ch,0x6b
  404e6c:	xchg   ebp,eax
  404e6d:	add    BYTE PTR [eax],al
  404e6f:	or     al,0xe8
  404e71:	mov    ecx,0xff84b6e6
  404e76:	int3   
  404e77:	inc    ebp
  404e78:	add    DWORD PTR [eax+eax*1],ecx
  404e7b:	int3   
  404e7c:	add    bl,al
  404e7e:	loope  0x404eb4
  404e80:	fsubr  QWORD PTR [edx-0x23]
  404e83:	add    BYTE PTR [eax],al
  404e85:	add    BYTE PTR [ebx-0x55],al
  404e88:	push   esp
  404e89:	and    al,BYTE PTR [eax]
  404e8b:	int3   
  404e8c:	je     0x404e8e
  404e8e:	inc    ebp
  404e8f:	int3   
  404e90:	mov    edx,DWORD PTR [esi+0x4e]
  404e93:	retf   0x45f4
  404e96:	push   ebp
  404e97:	add    bh,bh
  404e99:	or     bl,ch
  404e9b:	inc    ecx
  404e9c:	cld    
  404e9d:	inc    edi
  404e9e:	adc    eax,0xff0000
  404ea3:	add    BYTE PTR [ebx-0x4c6ce5cd],cl
  404ea9:	jno    0x404eac
  404eab:	jne    0x404e38
  404ead:	add    BYTE PTR [eax],al
  404eaf:	inc    ecx
  404eb0:	std    
  404eb1:	call   0x5db61b41
  404eb6:	add    DWORD PTR [ebp-0x7d],edx
  404eb9:	or     bl,dh
  404ebb:	jbe    0x404ef9
  404ebd:	retf   
  404ebe:	inc    DWORD PTR [eax]
  404ec0:	rol    al,0x13
  404ec3:	pop    ebp
  404ec4:	or     BYTE PTR [eax+eax*1+0x75],ch
  404ec8:	inc    eax
  404eca:	jmp    0x404ed0
  404ecc:	push   eax
  404ecd:	jmp    FWORD PTR [esi-0x2628b4]
  404ed3:	fstp   st(5)
  404ed5:	int3   
  404ed6:	dec    edi
  404ed7:	inc    ebx
  404ed8:	ds push es
  404eda:	push   DWORD PTR [ebx]
  404edc:	inc    ebp
  404edd:	add    ch,bl
  404edf:	fisttp QWORD PTR [ebx-0x2770f173]
  404ee5:	dec    edx
  404ee6:	int3   
  404ee7:	add    ah,cl
  404ee9:	call   0xe3992bcd
  404eee:	jge    0x554d1b7f
  404ef4:	je     0x404e81
  404ef6:	push   edi
  404ef7:	inc    ecx
  404ef8:	inc    edi
  404ef9:	jmp    0xc0c5da44
  404efe:	xchg   edx,eax
  404eff:	icebp  
  404f00:	push   edi
  404f01:	ins    DWORD PTR es:[edi],dx
  404f02:	add    DWORD PTR [ebp+0x0],ebx
  404f05:	int3   
  404f06:	dec    DWORD PTR [ebx-0x17f374bb]
  404f0c:	repz cld 
  404f0e:	or     esp,0xffffff8b
  404f11:	add    bl,ch
  404f13:	lock cmp ebx,DWORD PTR [eax-0x75]
  404f17:	add    BYTE PTR [ebp-0x73],al
  404f1a:	mov    esp,ecx
  404f1c:	int3   
  404f1d:	add    dl,dh
  404f1f:	sub    al,0x23
  404f21:	jbe    0x404ee3
  404f23:	mov    eax,ebp
  404f25:	inc    ebp
  404f26:	sub    al,0xbe
  404f28:	repz or al,BYTE PTR [ebp+0x45]
  404f2c:	dec    DWORD PTR [ebx-0x768b33fc]
  404f32:	dec    esp
  404f33:	inc    edi
  404f34:	xor    ah,bh
  404f36:	jmp    0x404f04
  404f38:	(bad)  
  404f39:	in     al,dx
  404f3a:	pop    edx
  404f3b:	xchg   DWORD PTR [edi+0x3],eax
  404f3e:	add    BYTE PTR [eax],cl
  404f40:	mov    ecx,esp
  404f42:	lgdtd  [ebp+0x5d]
  404f46:	jl     0x404f6f
  404f48:	out    dx,eax
  404f49:	sub    al,0x0
  404f4b:	add    BYTE PTR [eax],al
  404f4d:	push   0x19
  404f4f:	stos   DWORD PTR es:[edi],eax
  404f50:	xlat   BYTE PTR ds:[ebx]
  404f51:	and    eax,DWORD PTR [ecx]
  404f53:	add    BYTE PTR [ecx-0x75000000],cl
  404f59:	dec    DWORD PTR [esi-0x13ee1095]
  404f5f:	adc    BYTE PTR [eax],al
  404f61:	add    ah,bh
  404f63:	xor    al,0xdf
  404f65:	idiv   bh
  404f67:	mov    esi,DWORD PTR [ebx]
  404f69:	add    BYTE PTR [ecx-0x4bffff7d],cl
  404f6f:	test   eax,0xdd33b142
  404f74:	add    edx,DWORD PTR [eax+0x48]
  404f77:	int3   
  404f78:	cli    
  404f79:	sti    
  404f7a:	push   0x15
  404f7c:	int3   
  404f7d:	add    BYTE PTR [eax],al
  404f7f:	add    ah,cl
  404f81:	add    BYTE PTR [edi-0x76],bl
  404f84:	cmp    bh,cl
  404f86:	or     BYTE PTR [eax+ebp*8-0x15],dh
  404f8a:	into   
  404f8b:	scas   al,BYTE PTR es:[edi]
  404f8c:	adc    eax,DWORD PTR [ecx]
  404f8e:	or     BYTE PTR [ebp+0x4],al
  404f91:	shl    BYTE PTR [esp+eax*1+0x4],0x0
  404f96:	mov    ebx,0x8ba9267b
  404f9b:	add    esp,ecx
  404f9d:	int3   
  404f9e:	or     DWORD PTR [esi+ebp*8-0x68],0xffe80000
  404fa6:	add    bh,bh
  404fa8:	mov    eax,DWORD PTR [eax]
  404faa:	jno    0x404f53
  404fac:	cmp    dl,al
  404fae:	push   eax
  404faf:	inc    ebp
  404fb0:	add    BYTE PTR [ebx+0x71920d50],cl
  404fb6:	mov    DWORD PTR [eax],eax
  404fb8:	pop    ebp
  404fb9:	push   ebp
  404fba:	ror    ah,0x0
  404fbd:	mov    edi,DWORD PTR [eax+0x58]
  404fc0:	xchg   BYTE PTR [eax+0x45ddeb56],bh
  404fc6:	push   ebx
  404fc7:	lods   al,BYTE PTR ds:[esi]
  404fc8:	jp     0x405030
  404fca:	call   0x8b40dacf
  404fcf:	mov    edx,DWORD PTR ds:0xdec0ec0c
  404fd5:	jo     0x404fb7
  404fd7:	add    al,0x1
  404fd9:	mov    ebp,DWORD PTR [ecx+eiz*8-0x3374c3c6]
  404fe0:	add    BYTE PTR [eax],al
  404fe2:	add    BYTE PTR [eax],al
  404fe4:	pop    ebp
  404fe5:	add    edi,ebx
  404fe7:	leave  
  404fe8:	(bad)  
  404fe9:	adc    bh,bh
  404feb:	mov    ecx,esp
  404fed:	rcl    BYTE PTR [ebx+eax*4+0x42],0x3a
  404ff2:	add    DWORD PTR [eax],eax
  404ff4:	add    BYTE PTR [edi],cl
  404ff6:	add    DWORD PTR [eax],eax
  404ff8:	xor    edx,DWORD PTR [eax]
  404ffa:	pushf  
  404ffb:	shr    DWORD PTR [edx+0x64],1
  404ffe:	add    al,0xc
  405000:	add    bh,bh
  405002:	or     al,0xe9
  405004:	ds sbb al,0x0
  405007:	rol    BYTE PTR [eax],0x0
  40500a:	add    BYTE PTR [ebp+0x770eddff],al
  405010:	or     eax,0x10183de
  405015:	add    BYTE PTR [ebx-0x3fb10418],dl
  40501b:	mov    DWORD PTR [esp+ecx*8],ecx
  40501e:	int3   
  40501f:	int3   
  405020:	xor    eax,DWORD PTR [eax]
  405022:	fwait
  405023:	sub    edi,edi
  405025:	cmp    eax,0x8b8bcc00
  40502a:	mov    dl,0x1a
  40502c:	repz xchg ecx,eax
  40502e:	dec    DWORD PTR [ecx+0x5ddd01]
  405034:	add    BYTE PTR [ebx],dh
  405036:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405037:	jg     0x404fd2
  405039:	sub    DWORD PTR [eax],eax
  40503b:	loopne 0x404ffd
  40503d:	int3   
  40503e:	pop    ecx
  40503f:	div    ch
  405041:	stos   BYTE PTR es:[edi],al
  405042:	mov    eax,DWORD PTR [eax]
  405044:	mov    ecx,esp
  405046:	add    BYTE PTR [eax],al
  405048:	add    BYTE PTR [ecx],al
  40504a:	ror    bl,0xfe
  40504d:	stc    
  40504e:	inc    ebp
  40504f:	add    al,al
  405051:	add    DWORD PTR [ecx+0xc],edi
  405054:	fs dec ebx
  405056:	inc    DWORD PTR [eax]
  405058:	add    BYTE PTR [ebx-0x33baf775],cl
  40505e:	test   DWORD PTR [esi+0x45086ad2],edx
  405064:	add    DWORD PTR [ebp-0x18],0x67
  405068:	pop    eax
  405069:	or     BYTE PTR [ebx+0xc0145cc],al
  40506f:	add    BYTE PTR [ebx+0x7243f58d],cl
  405075:	mov    esp,cs
  405077:	add    ah,cl
  405079:	mov    esp,DWORD PTR [ebx]
  40507b:	ins    BYTE PTR es:[edi],dx
  40507c:	mov    DWORD PTR [eax],ecx
  40507e:	add    DWORD PTR [ebp-0x77],0xffffff8b
  405082:	mov    eax,DWORD PTR [eax]
  405084:	loopne 0x4050cb
  405086:	(bad)  
  405087:	or     DWORD PTR [edi+0x5e],eax
  40508a:	add    al,al
  40508c:	add    BYTE PTR [esp+edi*2],cl
  40508f:	mov    dl,dl
  405091:	sub    BYTE PTR [edi],cl
  405093:	ror    ah,0xff
  405096:	add    BYTE PTR [eax],al
  405098:	dec    ebp
  405099:	test   DWORD PTR [eax-0x74d6d153],esp
  40509f:	rcr    ch,0x50
  4050a2:	pop    edi
  4050a3:	stos   BYTE PTR es:[edi],al
  4050a4:	retf   
  4050a5:	sub    BYTE PTR [ebp+0xc00100],al
  4050ab:	(bad)  
  4050ac:	call   0xabe8b8b2
  4050b1:	cld    
  4050b2:	inc    DWORD PTR [ecx]
  4050b4:	fisttp QWORD PTR [eax]
  4050b6:	in     eax,0x34
  4050b8:	loop   0x40512f
  4050ba:	test   DWORD PTR [ebp+0x10],ecx
  4050bd:	(bad)  
  4050be:	inc    DWORD PTR [eax]
  4050c0:	mov    edi,edi
  4050c2:	or     bh,BYTE PTR [eax-0x7af73d91]
  4050c8:	mov    edi,edi
  4050ca:	sahf   
  4050cb:	xchg   esp,eax
  4050cc:	leave  
  4050cd:	fiadd  DWORD PTR [ecx]
  4050cf:	jmp    FWORD PTR [edx-0x75]
  4050d2:	jne    0x4050d5
  4050d4:	cmovne esi,ecx
  4050d7:	sbb    edx,eax
  4050d9:	test   BYTE PTR [eax],0x0
  4050dc:	mov    eax,DWORD PTR [esi+0x27]
  4050df:	lods   eax,DWORD PTR ds:[esi]
  4050e0:	jg     0x4050e8
  4050e2:	push   ebp
  4050e3:	add    BYTE PTR [ebx],al
  4050e5:	jne    0x405072
  4050e7:	je     0x4050f5
  4050e9:	int3   
  4050ea:	int3   
  4050eb:	pop    gs
  4050ed:	jne    0x405135
  4050ef:	add    BYTE PTR [eax],al
  4050f1:	mov    eax,DWORD PTR [ebx-0x760e5e68]
  4050f7:	int3   
  4050f8:	add    BYTE PTR [ebx-0x14fe8a40],cl
  4050fe:	jmp    0x405129
  405100:	(bad)  
  405101:	or     al,al
  405103:	add    edi,eax
  405105:	int3   
  405106:	or     eax,0x28d881
  40510b:	mov    eax,DWORD PTR [eax]
  40510d:	je     0x40510f
  40510f:	mov    eax,DWORD PTR [eax]
  405111:	je     0x405164
  405113:	jg     0x40515b
  405115:	adc    al,0x56
  405117:	add    BYTE PTR [ecx+0x390b4e8b],cl
  40511d:	iret   
  40511e:	add    BYTE PTR [ebx],al
  405120:	dec    ebp
  405121:	add    al,0x8b
  405123:	add    al,0x15
  405125:	mov    ebp,DWORD PTR [ebp+0x550ee706]
  40512b:	add    BYTE PTR [ecx],al
  40512d:	add    ebp,ebx
  40512f:	pusha  
  405130:	bound  ecx,QWORD PTR [eax+0x50]
  405133:	mov    DWORD PTR [ebp-0x33f7fff0],eax
  405139:	adc    dl,bl
  40513b:	retf   0x2212
  40513e:	push   esi
  40513f:	(bad)  
  405140:	jmp    0x4050cb
  405142:	shr    DWORD PTR [ecx-0x33ffeb06],1
  405148:	or     al,0x0
  40514a:	add    BYTE PTR [ebp-0x40],dl
  40514d:	paddsb mm1,mm7
  405150:	jmp    0x11cc:0xcc00cc28
  405157:	dec    eax
  405158:	or     BYTE PTR [edi+0x75],ch
  40515b:	add    BYTE PTR [eax],al
  40515d:	adc    BYTE PTR [ecx],al
  40515f:	in     al,dx
  405160:	push   ebp
  405161:	mov    ebx,DWORD PTR [edi-0x744cf136]
  405167:	add    ah,cl
  405169:	push   ebp
  40516a:	dec    esp
  40516b:	mov    dl,0xdb
  40516d:	dec    eax
  40516e:	add    DWORD PTR [eax],eax
  405170:	mov    eax,DWORD PTR [ebp+0x4]
  405173:	mov    ebp,eax
  405175:	call   FWORD PTR [eax]
  405177:	cld    
  405178:	clc    
  405179:	fisttp QWORD PTR [eax]
  40517b:	add    BYTE PTR [ebp-0x77],cl
  40517e:	leave  
  40517f:	repz scas eax,DWORD PTR es:[edi]
  405181:	jl     0x405184
  405183:	int3   
  405184:	add    BYTE PTR [eax+eax*8],al
  405187:	push   0x0
  405189:	or     bl,al
  40518b:	cli    
  40518c:	cmp    DWORD PTR [ecx],edi
  40518e:	int3   
  40518f:	int3   
  405190:	je     0x405192
  405192:	out    0xa9,al
  405194:	jbe    0x405160
  405196:	add    DWORD PTR [eax],eax
  405198:	mov    ecx,DWORD PTR [ebx-0x3313ff7b]
  40519e:	icebp  
  40519f:	cmp    dl,ch
  4051a1:	loop   0x4051af
  4051a3:	or     DWORD PTR [edi],0xffffffcc
  4051a6:	pop    edx
  4051a7:	add    al,0x8a
  4051a9:	rol    BYTE PTR [ebp-0x7c7a00f4],cl
  4051af:	ud0    esp,eax
  4051b2:	out    dx,eax
  4051b3:	dec    ecx
  4051b4:	scas   al,BYTE PTR es:[edi]
  4051b5:	out    dx,eax
  4051b6:	add    BYTE PTR [eax],al
  4051b8:	add    ah,cl
  4051ba:	sub    al,0x93
  4051bc:	sub    bl,ch
  4051be:	add    BYTE PTR [eax],al
  4051c0:	dec    ebp
  4051c1:	int3   
  4051c2:	or     BYTE PTR [ecx],al
  4051c4:	add    BYTE PTR [ebp+0x4b],al
  4051c7:	ss sahf 
  4051c9:	push   edi
  4051ca:	inc    ebp
  4051cb:	inc    DWORD PTR [ebx+0x4628048b]
  4051d1:	pusha  
  4051d2:	add    BYTE PTR [ebx+0x8bcc8b],cl
  4051d8:	add    BYTE PTR [ebx-0x7b886199],cl
  4051de:	add    DWORD PTR [ebp-0x3697fea3],ecx
  4051e4:	or     BYTE PTR [ecx-0x7d],0x0
  4051e8:	add    BYTE PTR [eax],al
  4051ea:	xor    eax,DWORD PTR [eax]
  4051ec:	dec    esp
  4051ee:	fisubr WORD PTR [edi+0x7]
  4051f1:	repz adc eax,0xc30f0000
  4051f7:	scas   eax,DWORD PTR es:[edi]
  4051f8:	dec    esi
  4051f9:	imul   esi,DWORD PTR [ebx+0xc8b0045],0xffffffe7
  405200:	xchg   ecx,eax
  405201:	mov    ah,0x8c
  405203:	mov    ebx,ebp
  405205:	add    ecx,DWORD PTR [eax+eax*1]
  405208:	inc    eax
  40520a:	shl    BYTE PTR ds:0x165fdf,0x1
  405211:	inc    ebp
  405212:	add    edx,DWORD PTR [ebx-0x33]
  405215:	sbb    BYTE PTR [eax+eax*1+0xff8bff],cl
  40521c:	test   edi,eax
  40521e:	add    al,dh
  405220:	mov    ebp,0x89f974
  405225:	je     0x4051b2
  405227:	sbb    DWORD PTR [esi],0x4f
  40522a:	inc    ecx
  40522b:	add    BYTE PTR [eax+eiz*8-0x73],dh
  40522f:	(bad)  
  405230:	push   0x1
  405232:	call   DWORD PTR ds:0xae9cb9
  405238:	inc    ebp
  405239:	add    BYTE PTR [eax],al
  40523b:	leave  
  40523c:	adc    eax,0x110d55f
  405241:	je     0x405243
  405243:	add    BYTE PTR [ecx],al
  405245:	mov    eax,DWORD PTR [eax]
  405247:	sbb    al,0x61
  405249:	mul    BYTE PTR [edx]
  40524b:	(bad)  
  40524c:	jmp    eax
  40524e:	add    dl,bl
  405250:	pop    ss
  405251:	and    bh,BYTE PTR [esi-0x15]
  405254:	add    BYTE PTR [eax],al
  405256:	add    al,0xcc
  405258:	mov    ecx,DWORD PTR [eax]
  40525a:	adc    BYTE PTR ds:0xcc72537f,ch
  405260:	int3   
  405261:	int3   
  405262:	mov    DWORD PTR ds:0x17c795b,esp
  405268:	add    BYTE PTR [eax],al
  40526a:	(bad)  
  40526b:	int3   
  40526c:	(bad)  
  40526d:	dec    DWORD PTR [ebx-0x2ba2e42]
  405273:	ror    BYTE PTR [ebp+0x10b10001],0x19
  40527a:	sbb    BYTE PTR [ebx-0x72227496],al
  405280:	add    BYTE PTR [edi],cl
  405282:	pop    gs
  405284:	jg     0x405260
  405286:	lock inc ebp
  405288:	add    ch,bl
  40528a:	(bad)  
  40528c:	sar    BYTE PTR [edi+0x5674e9],1
  405292:	add    BYTE PTR [eax+eax*1+0x1],dh
  405296:	mov    DWORD PTR [ebx+0x66],esp
  405299:	add    edx,DWORD PTR [ecx+0x8becff]
  40529f:	xchg   ebx,eax
  4052a0:	mov    esp,0x4089a1b
  4052a5:	mov    esp,eax
  4052a7:	push   esi
  4052a8:	push   esi
  4052a9:	push   esi
  4052aa:	lea    ebp,[edx]
  4052ac:	ins    BYTE PTR es:[edi],dx
  4052ad:	outs   dx,DWORD PTR ds:[esi]
  4052ae:	test   DWORD PTR [ecx],0x8145c010
  4052b4:	adc    DWORD PTR [eax-0x74f7a9],ecx
  4052ba:	add    BYTE PTR [ebx-0x37a9cc15],cl
  4052c0:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4052c2:	aam    0xff
  4052c4:	add    DWORD PTR [ebx-0x7c25ff34],ecx
  4052ca:	sbb    al,0x75
  4052cc:	mov    DWORD PTR [eax],0xc04dd
  4052d2:	int3   
  4052d3:	add    al,0x12
  4052d5:	mov    bh,0x67
  4052d7:	mov    edi,edi
  4052d9:	je     0x405266
  4052db:	sub    DWORD PTR [ebx+ebx*8],ebx
  4052de:	xor    BYTE PTR [eax],al
  4052e0:	add    BYTE PTR [ebp+0x89cc15],al
  4052e6:	add    BYTE PTR [edi+ebx*4+0x1ff92b5],dh
  4052ed:	mov    ecx,DWORD PTR [edi]
  4052ef:	ret    0xd9e9
  4052f2:	adc    al,0x6a
  4052f4:	add    BYTE PTR ds:0x8b008b00,dl
  4052fa:	mov    esi,DWORD PTR [ecx-0x7cb1acfa]
  405300:	int3   
  405301:	call   0x3f187b91
  405306:	popa   
  405307:	test   DWORD PTR [ebp-0x1],edx
  40530a:	mov    ecx,DWORD PTR [ebp+0x27dd0c00]
  405310:	and    DWORD PTR [edi+esi*4],edi
  405313:	add    BYTE PTR [ebp+0x74],al
  405316:	mov    esp,DWORD PTR [eax-0x74bfdedc]
  40531c:	add    al,ch
  40531e:	add    BYTE PTR [eax],cl
  405320:	mov    esp,ecx
  405322:	call   FWORD PTR [edi-0x33253d93]
  405328:	mov    ecx,esp
  40532a:	add    BYTE PTR [ebp+0x70],al
  40532d:	ret    0xffed
  405330:	xor    ecx,DWORD PTR [ebx-0x17ffa201]
  405336:	add    BYTE PTR [ecx-0x33b07498],bl
  40533c:	int3   
  40533d:	mov    ecx,DWORD PTR [edi+eiz*1]
  405340:	popf   
  405341:	out    0xdc,eax
  405343:	jne    0x4053af
  405345:	mov    ecx,esp
  405347:	add    BYTE PTR [ebx-0x3fa77a75],cl
  40534d:	arpl   WORD PTR [ebx+0x8ff75c7],cx
  405353:	adc    ebx,edx
  405355:	mov    eax,0xdd8b4db6
  40535a:	mov    DWORD PTR [eax],eax
  40535c:	dec    ebp
  40535d:	inc    DWORD PTR [eax]
  40535f:	xchg   BYTE PTR [esi+0x748816],ah
  405365:	je     0x405368
  405367:	nop
  405368:	or     BYTE PTR [ecx],cl
  40536a:	jmp    0x40534c
  40536c:	inc    ebp
  40536d:	add    ah,cl
  40536f:	mov    ecx,DWORD PTR [eax]
  405371:	add    DWORD PTR [ebx],0xffffff93
  405374:	sbb    ecx,ebx
  405376:	lahf   
  405377:	pcmpeqb mm0,QWORD PTR [edx*1-0x107b67ac]
  40537f:	mov    ebp,eax
  405381:	mov    DWORD PTR [ebp+0x75],ebx
  405384:	int3   
  405385:	jne    0x4053d4
  405387:	ret    0xdbcb
  40538a:	dec    edx
  40538b:	inc    ebp
  40538c:	fld    QWORD PTR [eax]
  40538e:	add    BYTE PTR [eax+0x4580534],ch
  405394:	fld    QWORD PTR [eax]
  405396:	lea    eax,[ebp-0x7d]
  405399:	in     al,dx
  40539a:	jne    0x405326
  40539c:	call   0x15c3e3b1
  4053a1:	in     al,dx
  4053a2:	add    BYTE PTR [ebx-0x74],dl
  4053a5:	add    al,0xb
  4053a7:	or     al,0xcc
  4053a9:	add    BYTE PTR [eax+eax*1],cl
  4053ac:	add    BYTE PTR [eax],al
  4053ae:	add    BYTE PTR [ebp+edi*8+0x1cc8716],bl
  4053b5:	add    ah,cl
  4053b7:	dec    edx
  4053b8:	inc    bl
  4053ba:	mov    WORD PTR [eax],es
  4053bc:	mov    eax,DWORD PTR [ebx+0x8b8bcc]
  4053c2:	mov    esp,DWORD PTR [edi+ebp*1-0x13cc293e]
  4053c9:	or     al,0xff
  4053cb:	adc    eax,0xd30e7d
  4053d0:	inc    DWORD PTR [eax]
  4053d2:	add    bh,bh
  4053d4:	int3   
  4053d5:	int3   
  4053d6:	int3   
  4053d7:	or     al,0xd9
  4053d9:	add    al,0x5a
  4053db:	mov    eax,DWORD PTR [eax]
  4053dd:	int3   
  4053de:	mov    ecx,DWORD PTR [edi-0x150b48]
  4053e4:	int3   
  4053e5:	int3   
  4053e6:	mov    eax,DWORD PTR [ecx]
  4053e8:	rdpmc  
  4053ea:	push   esi
  4053eb:	xor    al,BYTE PTR [eax-0x74747a64]
  4053f1:	mov    DWORD PTR [eax],eax
  4053f3:	lods   eax,DWORD PTR ds:[esi]
  4053f4:	imul   esi,ebx,0x8b080ce9
  4053fa:	dec    esp
  4053fc:	int3   
  4053fd:	mov    DWORD PTR [ebp+0x1d],ebx
  405400:	ret    0xdfd5
  405403:	inc    ebp
  405404:	mov    ecx,esp
  405406:	add    BYTE PTR ds:0x8bbdea1f,dl
  40540c:	add    bh,bh
  40540e:	add    BYTE PTR [eax],al
  405410:	mov    edi,edi
  405412:	lea    edi,[ebx]
  405414:	iret   
  405415:	(bad)  
  405416:	(bad)  [ebx-0x58761500]
  40541c:	repz fdiv DWORD PTR [edx]
  40541f:	or     al,0x0
  405421:	inc    ebp
  405422:	add    BYTE PTR [ebx+0x310085cc],cl
  405428:	mov    ch,ah
  40542a:	lea    eax,[ebp-0x169533ff]
  405430:	push   0xc0ec0dbf
  405435:	add    BYTE PTR [esi-0x75],al
  405438:	mov    ecx,esp
  40543a:	int3   
  40543b:	call   0xcc8b:0x356d6b
  405442:	mov    DWORD PTR ds:0x108dc719,edi
  405448:	call   DWORD PTR [esi+0x0]
  40544b:	pop    ebp
  40544c:	mov    eax,DWORD PTR [eax]
  40544e:	inc    esi
  40544f:	stos   DWORD PTR es:[edi],eax
  405450:	jg     0x40548f
  405452:	pop    eax
  405453:	mov    ecx,DWORD PTR [ebx-0x1d7afe96]
  405459:	xchg   DWORD PTR [eax*2+0xff0000],edi
  405460:	mov    esi,DWORD PTR [ebx]
  405462:	mov    eax,DWORD PTR [ebp+0x132e671]
  405468:	je     0x40546b
  40546a:	add    dh,al
  40546c:	mov    dh,0x9d
  40546e:	jmp    0xe001:0x75ffff83
  405475:	add    BYTE PTR [ebp-0x3d],al
  405478:	push   ebp
  405479:	mov    ebp,esp
  40547b:	sub    esp,0x24
  40547e:	push   ebx
  40547f:	push   esi
  405480:	push   edi
  405481:	lea    eax,[ebp-0x24]
  405484:	push   eax
  405485:	call   DWORD PTR ds:0x418060
  40548b:	lea    eax,[ebp-0x24]
  40548e:	push   eax
  40548f:	call   DWORD PTR ds:0x418034
  405495:	lea    eax,[ebp-0x8]
  405498:	push   eax
  405499:	push   0x1
  40549b:	call   DWORD PTR ds:0x4180c4
  4054a1:	mov    eax,DWORD PTR [ebp-0x8]
  4054a4:	mov    ecx,DWORD PTR [eax]
  4054a6:	lea    edx,[ebp-0xc]
  4054a9:	push   edx
  4054aa:	push   0x4181e0
  4054af:	push   eax
  4054b0:	call   DWORD PTR [ecx]
  4054b2:	mov    ebx,DWORD PTR [ebp+0x8]
  4054b5:	push   0x3
  4054b7:	pop    esi
  4054b8:	mov    ds:0x4194b8,eax
  4054bd:	mov    edi,esi
  4054bf:	xor    eax,eax
  4054c1:	xor    edx,edx
  4054c3:	mov    ecx,eax
  4054c5:	shl    ecx,0x2
  4054c8:	add    ecx,0x40f8f1
  4054ce:	cmp    DWORD PTR ds:0x4194b8,0x80004002
  4054d8:	setne  dl
  4054db:	dec    edx
  4054dc:	and    edx,0xff82d2b1
  4054e2:	add    edx,0x4279
  4054e8:	add    edx,DWORD PTR [ecx]
  4054ea:	xor    ecx,ecx
  4054ec:	mov    DWORD PTR [ebx],edx
  4054ee:	add    ebx,0x4
  4054f1:	cmp    edi,esi
  4054f3:	setne  cl
  4054f6:	lea    edi,[ecx+0x2]
  4054f9:	add    eax,edi
  4054fb:	cmp    eax,0xed
  405500:	jb     0x4054c1
  405502:	mov    DWORD PTR [ebp+0x8],esi
  405505:	xor    edi,edi
  405507:	mov    eax,ds:0x419404
  40550c:	mov    eax,DWORD PTR [eax+edi*4]
  40550f:	mov    ecx,DWORD PTR ds:0x4194b8
  405515:	push   0xcf
  40551a:	lea    eax,[eax+ecx*1+0x209b49cb]
  405521:	push   0x0
  405523:	mov    DWORD PTR [ebx],eax
  405525:	call   DWORD PTR ds:0x4180b0
  40552b:	xor    eax,eax
  40552d:	add    ebx,0x4
  405530:	cmp    DWORD PTR [ebp+0x8],esi
  405533:	setne  al
  405536:	add    eax,0x2
  405539:	add    edi,eax
  40553b:	mov    DWORD PTR [ebp+0x8],eax
  40553e:	cmp    edi,0xb4
  405544:	jb     0x405507
  405546:	push   0xfffffff8
  405548:	push   0x550c
  40554d:	call   DWORD PTR ds:0x418094
  405553:	mov    DWORD PTR [ebp+0x8],esi
  405556:	xor    edi,edi
  405558:	mov    eax,ds:0x419470
  40555d:	mov    eax,DWORD PTR [eax+edi*4]
  405560:	mov    ecx,DWORD PTR ds:0x4194b8
  405566:	lea    eax,[eax+ecx*1+0x7707d04a]
  40556d:	mov    DWORD PTR [ebx],eax
  40556f:	add    ebx,0x4
  405572:	call   DWORD PTR ds:0x41803c
  405578:	xor    eax,eax
  40557a:	cmp    DWORD PTR [ebp+0x8],esi
  40557d:	setne  al
  405580:	add    eax,0x2
  405583:	add    edi,eax
  405585:	mov    DWORD PTR [ebp+0x8],eax
  405588:	cmp    edi,0xe6
  40558e:	jb     0x405558
  405590:	mov    ecx,esi
  405592:	xor    eax,eax
  405594:	mov    edi,0xaa
  405599:	mov    edx,DWORD PTR [ebp+0xc]
  40559c:	mov    edx,DWORD PTR [edx+eax*4]
  40559f:	sub    edx,DWORD PTR ds:0x4194b8
  4055a5:	sub    edx,0x42424fdc
  4055ab:	mov    DWORD PTR [ebx],edx
  4055ad:	xor    edx,edx
  4055af:	add    ebx,0x4
  4055b2:	cmp    ecx,esi
  4055b4:	setne  dl
  4055b7:	lea    ecx,[edx+0x2]
  4055ba:	add    eax,ecx
  4055bc:	cmp    eax,edi
  4055be:	jb     0x405599
  4055c0:	mov    ecx,ebx
  4055c2:	mov    DWORD PTR [ebp+0x8],esi
  4055c5:	xor    eax,eax
  4055c7:	mov    edx,DWORD PTR [ebp+0x10]
  4055ca:	mov    edx,DWORD PTR [edx+eax*4]
  4055cd:	mov    ebx,DWORD PTR ds:0x4194b8
  4055d3:	lea    edx,[edx+ebx*1+0x40c78813]
  4055da:	mov    DWORD PTR [ecx],edx
  4055dc:	xor    edx,edx
  4055de:	add    ecx,0x4
  4055e1:	cmp    DWORD PTR [ebp+0x8],esi
  4055e4:	setne  dl
  4055e7:	add    edx,0x2
  4055ea:	add    eax,edx
  4055ec:	mov    DWORD PTR [ebp+0x8],edx
  4055ef:	cmp    eax,0xca
  4055f4:	jb     0x4055c7
  4055f6:	mov    eax,ds:0x4190e4
  4055fb:	mov    ds:0x419170,eax
  405600:	mov    eax,ds:0x41924c
  405605:	push   0x418128
  40560a:	xor    ebx,ebx
  40560c:	push   ebx
  40560d:	mov    DWORD PTR [ebp-0x4],ecx
  405610:	mov    DWORD PTR [ebp+0x8],esi
  405613:	mov    ds:0x419314,eax
  405618:	call   DWORD PTR ds:0x418070
  40561e:	mov    ecx,DWORD PTR [ebp-0x4]
  405621:	mov    eax,ebx
  405623:	shl    eax,0x2
  405626:	add    eax,0x40cf02
  40562b:	mov    eax,DWORD PTR [eax]
  40562d:	sub    eax,DWORD PTR ds:0x4194b8
  405633:	add    eax,0x6e914d0e
  405638:	mov    DWORD PTR [ecx],eax
  40563a:	call   DWORD PTR ds:0x41804c
  405640:	add    DWORD PTR [ebp-0x4],0x4
  405644:	xor    eax,eax
  405646:	cmp    DWORD PTR [ebp+0x8],esi
  405649:	setne  al
  40564c:	add    eax,0x2
  40564f:	add    ebx,eax
  405651:	mov    DWORD PTR [ebp+0x8],eax
  405654:	cmp    ebx,edi
  405656:	jb     0x40561e
  405658:	mov    eax,DWORD PTR [ebp-0x4]
  40565b:	mov    DWORD PTR [ebp-0x4],eax
  40565e:	mov    DWORD PTR [ebp+0x8],esi
  405661:	xor    ebx,ebx
  405663:	mov    eax,ds:0x4193c4
  405668:	mov    ecx,DWORD PTR ds:0x4194b8
  40566e:	mov    eax,DWORD PTR [eax+ebx*4]
  405671:	lea    eax,[eax+ecx*1-0x4eb6229c]
  405678:	mov    ecx,DWORD PTR [ebp-0x4]
  40567b:	push   0x418120
  405680:	push   0x0
  405682:	mov    DWORD PTR [ecx],eax
  405684:	call   DWORD PTR ds:0x418070
  40568a:	add    DWORD PTR [ebp-0x4],0x4
  40568e:	xor    eax,eax
  405690:	cmp    DWORD PTR [ebp+0x8],esi
  405693:	setne  al
  405696:	add    eax,0x2
  405699:	add    ebx,eax
  40569b:	mov    DWORD PTR [ebp+0x8],eax
  40569e:	cmp    ebx,edi
  4056a0:	jb     0x405663
  4056a2:	lea    eax,[ebp-0x24]
  4056a5:	push   eax
  4056a6:	call   DWORD PTR ds:0x418040
  4056ac:	lea    eax,[ebp-0x24]
  4056af:	push   eax
  4056b0:	call   DWORD PTR ds:0x418044
  4056b6:	pop    edi
  4056b7:	pop    esi
  4056b8:	pop    ebx
  4056b9:	leave  
  4056ba:	ret    
  4056bb:	shr    DWORD PTR [ecx-0x74009eed],0x0
  4056c2:	int3   
  4056c3:	jmp    0xff:0xff835c06
  4056ca:	push   0xf
  4056cc:	mov    ecx,DWORD PTR [ecx-0x579ce334]
  4056d2:	imul   eax,DWORD PTR [eax],0xeecc5500
  4056d8:	sbb    al,0x66
  4056da:	or     DWORD PTR [eax],0x8560000
  4056e0:	add    bh,bh
  4056e2:	int3   
  4056e3:	in     al,0xd1
  4056e5:	popa   
  4056e6:	dec    edi
  4056e7:	mov    ecx,DWORD PTR [ebx+0x1559cc8b]
  4056ed:	xchg   edi,eax
  4056ee:	jne    0x40567b
  4056f0:	mov    eax,DWORD PTR [eax]
  4056f2:	add    BYTE PTR [esp+ecx*8+0x56],dh
  4056f6:	je     0x4056e5
  4056f8:	fs adc cl,cl
  4056fb:	je     0x405688
  4056fd:	add    al,0x8d
  4056ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405700:	pop    ebx
  405701:	popf   
  405702:	pop    eax
  405703:	add    al,0x45
  405705:	add    BYTE PTR [ebx+0xc00110],cl
  40570b:	hlt    
  40570c:	loope  0x40578b
  40570e:	icebp  
  40570f:	add    bh,bh
  405711:	add    BYTE PTR [esi+0x3f],al
  405714:	js     0x4056eb
  405716:	cld    
  405717:	push   ebp
  405718:	fld    QWORD PTR [ebp-0x34]
  40571b:	fisttp QWORD PTR [ebx+0x6ff70104]
  405721:	leave  
  405722:	mov    bh,0xe8
  405724:	add    DWORD PTR [eax+eax*1],0x61
  405728:	in     al,dx
  405729:	sub    ch,ch
  40572b:	add    BYTE PTR [esp+ecx*8],al
  40572e:	fisttp QWORD PTR [ebx-0x1f8b74b0]
  405734:	sub    dl,BYTE PTR [edi+0x10cccc9e]
  40573a:	call   DWORD PTR [ecx+0x5c]
  40573d:	push   esi
  40573e:	fisttp DWORD PTR [edi]
  405740:	inc    ebp
  405741:	jmp    0x40570a
  405743:	add    BYTE PTR [eax-0x39],dl
  405746:	add    dh,cl
  405748:	lar    edx,WORD PTR [ebp-0x33a2ea01]
  40574f:	paddb  mm1,QWORD PTR [edi+0x50]
  405753:	inc    esi
  405754:	rol    BYTE PTR [eax],0x33
  405757:	push   eax
  405758:	mov    DWORD PTR [ebx-0x76b2f7f4],ecx
  40575e:	aad    0xff
  405760:	int3   
  405761:	add    ah,cl
  405763:	and    BYTE PTR [edx-0x72],al
  405766:	mov    edx,0xcc0015c7
  40576b:	push   ebp
  40576c:	push   esi
  40576d:	add    bh,bh
  40576f:	out    0x7e,eax
  405771:	(bad)  [ebp+0x1]
  405774:	int3   
  405775:	push   eax
  405776:	pandn  mm4,QWORD PTR [edi]
  405779:	push   ecx
  40577a:	add    BYTE PTR [ebp+0x0],0xc0
  40577e:	add    BYTE PTR [eax],al
  405780:	call   0x429e5810
  405785:	daa    
  405786:	mov    ds:0xc000,al
  40578b:	cmp    ch,BYTE PTR [edi-0xa]
  40578e:	outs   dx,BYTE PTR ds:[esi]
  40578f:	mov    eax,DWORD PTR [eax]
  405791:	mov    eax,DWORD PTR [eax]
  405793:	jne    0x4057f2
  405795:	add    BYTE PTR [ebp-0x6c8f87b1],al
  40579b:	push   ebp
  40579c:	sar    bh,0x8b
  40579f:	dec    esp
  4057a0:	outs   dx,BYTE PTR ds:[esi]
  4057a1:	loop   0x40576a
  4057a3:	add    BYTE PTR [ebx-0x340000],al
  4057a9:	(bad)  
  4057aa:	jmp    0x40577d
  4057ac:	xor    esp,DWORD PTR [ecx]
  4057ae:	fwait
  4057af:	add    ch,bl
  4057b1:	cmp    edi,0x65
  4057b4:	shl    BYTE PTR [ecx+0x7e],0x89
  4057b8:	add    BYTE PTR [eax],al
  4057ba:	add    ah,cl
  4057bc:	or     esp,0x0
  4057bf:	pop    esi
  4057c0:	jnp    0x4057b0
  4057c2:	iret   
  4057c3:	fld    QWORD PTR [eax]
  4057c5:	call   DWORD PTR [ebp+0x5e]
  4057c8:	mov    edx,0x8b0098a4
  4057cd:	lea    eax,[eax]
  4057cf:	inc    DWORD PTR [ebp+0x41ea0055]
  4057d5:	fstp   DWORD PTR [edx+0xf]
  4057d8:	mov    eax,DWORD PTR [eax]
  4057da:	call   DWORD PTR [eax]
  4057dc:	fidiv  WORD PTR [esi]
  4057de:	fiadd  WORD PTR [ebx+0x1cc7401]
  4057e4:	jmp    0x4057c3
  4057e6:	add    BYTE PTR [edx+0x562c2993],bh
  4057ec:	or     DWORD PTR [ecx+0x4601c489],0x78
  4057f3:	add    al,0x33
  4057f5:	test   eax,eax
  4057f7:	add    DWORD PTR [ecx],eax
  4057f9:	add    DWORD PTR [ecx],eax
  4057fb:	jnp    0x405869
  4057fd:	cli    
  4057fe:	jne    0x405815
  405800:	int3   
  405801:	int3   
  405802:	mov    edi,ebx
  405804:	inc    eax
  405805:	push   esp
  405806:	jb     0x4057d4
  405808:	test   DWORD PTR [ebx-0x7cffef7d],ecx
  40580e:	loopne 0x40586b
  405810:	(bad)  
  405811:	js     0x4057e3
  405813:	add    BYTE PTR [eax],dl
  405815:	int3   
  405816:	jne    0x4057fc
  405818:	sub    DWORD PTR fs:[ebp-0x75],ebx
  40581c:	mov    edi,edi
  40581e:	adc    eax,0x830c8b0c
  405823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405824:	xor    al,0x41
  405826:	cmc    
  405827:	mov    eax,DWORD PTR [ecx]
  405829:	int3   
  40582a:	int3   
  40582b:	inc    edi
  40582c:	sbb    esp,DWORD PTR [ecx*2-0x337c2275]
  405833:	mov    DWORD PTR [eax],eax
  405835:	or     al,0xe8
  405837:	jnp    0x4057d9
  405839:	outs   dx,BYTE PTR ds:[esi]
  40583a:	adc    esp,ecx
  40583c:	add    bl,ch
  40583e:	add    BYTE PTR [ecx+eax*8],dh
  405841:	pop    ecx
  405842:	or     eax,DWORD PTR [ecx]
  405844:	int3   
  405845:	add    DWORD PTR [eax],eax
  405847:	or     al,0x74
  405849:	int3   
  40584a:	inc    esi
  40584b:	clc    
  40584c:	stc    
  40584d:	test   al,0xd6
  40584f:	fisttp QWORD PTR [ebx-0x1f39fe75]
  405855:	out    dx,al
  405856:	enter  0xcc55,0x8
  40585a:	inc    ebp
  40585b:	adc    eax,0xb9000083
  405860:	dec    ecx
  405861:	mov    DWORD PTR [ecx],edi
  405863:	adc    BYTE PTR [eax],cl
  405865:	pop    ebp
  405866:	mov    ebx,DWORD PTR [edx]
  405868:	pop    ebp
  405869:	xchg   edi,eax
  40586a:	outs   dx,BYTE PTR ds:[esi]
  40586b:	test   esp,ecx
  40586d:	or     al,0x0
  40586f:	add    DWORD PTR [eax+eax*1-0x75],esi
  405873:	ins    DWORD PTR es:[edi],dx
  405874:	add    dh,dl
  405876:	lods   eax,DWORD PTR ds:[esi]
  405877:	add    BYTE PTR [ebp-0x7b],dh
  40587a:	xcrypt-ctr (bad)
  40587b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40587c:	frstor [edi]
  40587e:	inc    esi
  40587f:	inc    ebp
  405880:	or     ch,bl
  405882:	pop    ebp
  405883:	add    bh,bh
  405885:	int3   
  405886:	push   esp
  405888:	fldcw  WORD PTR [edi-0x69]
  40588b:	add    BYTE PTR [eax],al
  40588d:	adc    eax,0x470e7600
  405892:	push   cs
  405893:	inc    DWORD PTR [ebx-0x14feaa01]
  405899:	add    DWORD PTR [ecx-0x4ee59724],ecx
  40589f:	mov    eax,DWORD PTR [eax]
  4058a1:	adc    eax,0x41097533
  4058a6:	xchg   edi,eax
  4058a7:	je     0x4058a9
  4058a9:	mov    ecx,DWORD PTR [ecx-0x7495ffeb]
  4058af:	mov    dl,0xc1
  4058b1:	inc    eax
  4058b2:	ss push ebp
  4058b4:	int3   
  4058b5:	add    esp,ecx
  4058b7:	mov    edx,0x919f08
  4058bc:	add    BYTE PTR ds:0xdd0808,dl
  4058c2:	or     ah,ah
  4058c4:	pop    eax
  4058c5:	pop    ss
  4058c6:	mov    dl,0x0
  4058c8:	push   ebp
  4058c9:	add    BYTE PTR [ecx],al
  4058cb:	aaa    
  4058cc:	add    dl,BYTE PTR [esi+0x3ffdd97]
  4058d2:	add    DWORD PTR [eax],ecx
  4058d4:	(bad)  
  4058d5:	pop    ebp
  4058d6:	push   eax
  4058d7:	out    dx,eax
  4058d8:	mov    al,ds:0xcc009526
  4058dd:	jmp    0x405912
  4058df:	repz cwde 
  4058e1:	sbb    eax,0x150c8bed
  4058e6:	int3   
  4058e7:	add    al,0xff
  4058e9:	add    BYTE PTR [eax],al
  4058eb:	rol    BYTE PTR [edx+0x3ec6646],1
  4058f1:	jne    0x40587e
  4058f3:	sub    eax,0x8bcf55bc
  4058f8:	call   DWORD PTR [eax]
  4058fa:	mov    DWORD PTR [eax+0x8],edx
  4058fd:	int3   
  4058fe:	add    BYTE PTR [edx+0x20],bh
  405901:	sub    al,0xc5
  405903:	add    DWORD PTR [ebx-0x7e0e7675],ecx
  405909:	sub    eax,0x8898bf3
  40590e:	add    BYTE PTR [ebp+0xc],al
  405911:	add    BYTE PTR [ebp+0x37],cl
  405914:	jmp    0x40592b
  405916:	jecxz  0x40595d
  405918:	jmp    0x405922
  40591a:	or     BYTE PTR [eax],ch
  40591c:	lock outs dx,DWORD PTR ds:[esi]
  40591e:	xchg   ebp,eax
  40591f:	mov    eax,DWORD PTR [ecx]
  405921:	mov    eax,eax
  405923:	inc    ebp
  405924:	mov    esi,DWORD PTR [edi+edi*8-0x52]
  405928:	push   eax
  405929:	push   0xffffff89
  40592b:	test   DWORD PTR [ebx+ecx*4],ecx
  40592e:	jne    0x405957
  405930:	sar    DWORD PTR [ebp-0x6f],cl
  405933:	ffree  st(7)
  405935:	mov    DWORD PTR [ecx],0x55cc568b
  40593b:	xchg   ecx,eax
  40593c:	icebp  
  40593d:	xor    ebp,ebp
  40593f:	mov    esi,DWORD PTR [esp+ecx*1-0x20]
  405943:	imul   eax,DWORD PTR [ebx-0x7422771b],0xffffffc0
  40594a:	call   DWORD PTR [eax]
  40594c:	add    BYTE PTR [ebp-0xc3f2101],cl
  405952:	jb     0x405954
  405954:	mov    eax,DWORD PTR [esi-0x1]
  405957:	in     al,dx
  405958:	lock fwait
  40595a:	ja     0x40595c
  40595c:	ror    BYTE PTR [ebx+0x4d85],0x0
  405963:	scas   eax,DWORD PTR es:[edi]
  405964:	jbe    0x4059cf
  405966:	xchg   BYTE PTR [eax],cl
  405968:	add    DWORD PTR [eax],eax
  40596a:	inc    ebp
  40596b:	mul    BYTE PTR [eax-0x748a7195]
  405971:	dec    ebp
  405972:	add    BYTE PTR [ebx-0x3ffff01],cl
  405978:	adc    BYTE PTR [esi],bh
  40597a:	jno    0x40593c
  40597c:	lea    eax,[ebx]
  40597e:	rol    BYTE PTR [edx+0x70],0x4
  405982:	rol    BYTE PTR [eax],cl
  405984:	mov    eax,DWORD PTR [eax]
  405986:	xor    eax,DWORD PTR [ebp-0x18]
  405989:	add    BYTE PTR [ecx],al
  40598b:	sub    ch,BYTE PTR [ecx]
  40598d:	test   BYTE PTR [edi-0x14],al
  405990:	add    ah,cl
  405992:	int3   
  405993:	scas   al,BYTE PTR es:[edi]
  405994:	(bad)  
  405996:	lds    edx,FWORD PTR [eax-0x75]
  405999:	add    BYTE PTR [ebx-0xffff34],cl
  40599f:	adc    edx,ebx
  4059a1:	inc    esi
  4059a2:	dec    ecx
  4059a3:	mov    eax,DWORD PTR [ebp+0xc]
  4059a6:	jmp    0x40596b
  4059a8:	push   ebp
  4059a9:	mov    ebp,esp
  4059ab:	sub    esp,0x68
  4059ae:	push   ebx
  4059af:	push   esi
  4059b0:	push   edi
  4059b1:	lea    eax,[ebp-0x24]
  4059b4:	push   eax
  4059b5:	call   DWORD PTR ds:0x418060
  4059bb:	lea    eax,[ebp-0x24]
  4059be:	push   eax
  4059bf:	call   DWORD PTR ds:0x418034
  4059c5:	lea    eax,[ebp-0x8]
  4059c8:	push   eax
  4059c9:	push   0x1
  4059cb:	call   DWORD PTR ds:0x4180c4
  4059d1:	mov    eax,DWORD PTR [ebp-0x8]
  4059d4:	mov    ecx,DWORD PTR [eax]
  4059d6:	lea    edx,[ebp-0xc]
  4059d9:	push   edx
  4059da:	push   0x4181e0
  4059df:	push   eax
  4059e0:	call   DWORD PTR [ecx]
  4059e2:	mov    ebx,DWORD PTR [ebp+0x8]
  4059e5:	push   0x3
  4059e7:	pop    esi
  4059e8:	mov    ds:0x4194b8,eax
  4059ed:	mov    DWORD PTR [ebp-0x4],esi
  4059f0:	xor    edi,edi
  4059f2:	mov    eax,ds:0x419458
  4059f7:	mov    eax,DWORD PTR [eax+edi*4]
  4059fa:	sub    eax,DWORD PTR ds:0x4194b8
  405a00:	add    eax,0x1ed4b7c3
  405a05:	mov    DWORD PTR [ebx],eax
  405a07:	lea    eax,[ebp-0x68]
  405a0a:	push   eax
  405a0b:	call   DWORD PTR ds:0x418050
  405a11:	push   0x418118
  405a16:	push   0x0
  405a18:	add    ebx,0x4
  405a1b:	call   DWORD PTR ds:0x418070
  405a21:	xor    eax,eax
  405a23:	cmp    DWORD PTR [ebp-0x4],esi
  405a26:	setne  al
  405a29:	add    eax,0x2
  405a2c:	add    edi,eax
  405a2e:	mov    DWORD PTR [ebp-0x4],eax
  405a31:	cmp    edi,0xb4
  405a37:	jb     0x4059f2
  405a39:	mov    edi,esi
  405a3b:	call   DWORD PTR ds:0x41808c
  405a41:	xor    ebx,ebx
  405a43:	mov    eax,ds:0x419438
  405a48:	mov    eax,DWORD PTR [eax+ebx*4]
  405a4b:	sub    eax,DWORD PTR ds:0x4194b8
  405a51:	mov    ecx,DWORD PTR ds:0x4193a4
  405a57:	push   0xfffffff8
  405a59:	sub    eax,0x6d119a54
  405a5e:	push   0x8b01
  405a63:	mov    DWORD PTR [ecx],eax
  405a65:	call   DWORD PTR ds:0x418094
  405a6b:	add    DWORD PTR ds:0x4193a4,0x4
  405a72:	xor    eax,eax
  405a74:	cmp    edi,esi
  405a76:	setne  al
  405a79:	lea    edi,[eax+0x2]
  405a7c:	add    ebx,edi
  405a7e:	cmp    ebx,0xc8
  405a84:	jb     0x405a43
  405a86:	mov    ecx,DWORD PTR ds:0x4193a4
  405a8c:	mov    edi,esi
  405a8e:	xor    eax,eax
  405a90:	mov    edx,DWORD PTR [ebp+0xc]
  405a93:	mov    edx,DWORD PTR [edx+eax*4]
  405a96:	mov    ebx,DWORD PTR ds:0x4194b8
  405a9c:	lea    edx,[edx+ebx*1-0x1d24a54b]
  405aa3:	mov    DWORD PTR [ecx],edx
  405aa5:	xor    edx,edx
  405aa7:	add    ecx,0x4
  405aaa:	cmp    edi,esi
  405aac:	setne  dl
  405aaf:	lea    edi,[edx+0x2]
  405ab2:	add    eax,edi
  405ab4:	cmp    eax,0xdc
  405ab9:	jb     0x405a90
  405abb:	xor    edi,edi
  405abd:	push   edi
  405abe:	push   0xcf
  405ac3:	push   edi
  405ac4:	mov    ebx,ecx
  405ac6:	call   DWORD PTR ds:0x418098
  405acc:	push   0x418110
  405ad1:	push   edi
  405ad2:	mov    edi,DWORD PTR ds:0x418070
  405ad8:	mov    DWORD PTR [ebp-0x4],esi
  405adb:	call   edi
  405add:	xor    eax,eax
  405adf:	mov    ecx,DWORD PTR ds:0x419498
  405ae5:	mov    ecx,DWORD PTR [ecx+eax*4]
  405ae8:	mov    edx,DWORD PTR ds:0x4194b8
  405aee:	lea    ecx,[ecx+edx*1-0x5e701c95]
  405af5:	mov    DWORD PTR [ebx],ecx
  405af7:	xor    ecx,ecx
  405af9:	add    ebx,0x4
  405afc:	cmp    DWORD PTR [ebp-0x4],esi
  405aff:	setne  cl
  405b02:	add    ecx,0x2
  405b05:	add    eax,ecx
  405b07:	mov    DWORD PTR [ebp-0x4],ecx
  405b0a:	cmp    eax,0xb1
  405b0f:	jb     0x405adf
  405b11:	mov    ebx,DWORD PTR [ebp+0x10]
  405b14:	mov    ecx,esi
  405b16:	xor    eax,eax
  405b18:	mov    edx,DWORD PTR ds:0x4193d8
  405b1e:	mov    edx,DWORD PTR [edx+eax*4]
  405b21:	sub    edx,DWORD PTR ds:0x4194b8
  405b27:	sub    edx,0x4a274ed9
  405b2d:	mov    DWORD PTR [ebx],edx
  405b2f:	xor    edx,edx
  405b31:	add    ebx,0x4
  405b34:	cmp    ecx,esi
  405b36:	setne  dl
  405b39:	lea    ecx,[edx+0x2]
  405b3c:	add    eax,ecx
  405b3e:	cmp    eax,0xe8
  405b43:	jb     0x405b18
  405b45:	mov    DWORD PTR ds:0x4190dc,esi
  405b4b:	mov    DWORD PTR [ebp-0x4],esi
  405b4e:	call   DWORD PTR ds:0x41808c
  405b54:	xor    eax,eax
  405b56:	mov    ecx,DWORD PTR ds:0x4193dc
  405b5c:	mov    ecx,DWORD PTR [ecx+eax*4]
  405b5f:	sub    ecx,DWORD PTR ds:0x4194b8
  405b65:	add    ecx,0x2b135a29
  405b6b:	mov    DWORD PTR [ebx],ecx
  405b6d:	xor    ecx,ecx
  405b6f:	add    ebx,0x4
  405b72:	cmp    DWORD PTR [ebp-0x4],esi
  405b75:	setne  cl
  405b78:	add    ecx,0x2
  405b7b:	add    eax,ecx
  405b7d:	mov    DWORD PTR [ebp-0x4],ecx
  405b80:	cmp    eax,0xca
  405b85:	jb     0x405b56
  405b87:	push   0x418108
  405b8c:	push   0x0
  405b8e:	call   edi
  405b90:	mov    DWORD PTR [ebp-0x4],esi
  405b93:	xor    edi,edi
  405b95:	mov    eax,ds:0x419488
  405b9a:	mov    eax,DWORD PTR [eax+edi*4]
  405b9d:	mov    ecx,DWORD PTR ds:0x4194b8
  405ba3:	push   0x46
  405ba5:	lea    eax,[eax+ecx*1+0x48d3bf60]
  405bac:	push   0x0
  405bae:	mov    DWORD PTR [ebx],eax
  405bb0:	call   DWORD PTR ds:0x4180b0
  405bb6:	xor    eax,eax
  405bb8:	add    ebx,0x4
  405bbb:	cmp    DWORD PTR [ebp-0x4],esi
  405bbe:	setne  al
  405bc1:	add    eax,0x2
  405bc4:	add    edi,eax
  405bc6:	mov    DWORD PTR [ebp-0x4],eax
  405bc9:	cmp    edi,0xd7
  405bcf:	jb     0x405b95
  405bd1:	lea    eax,[ebp-0x24]
  405bd4:	push   eax
  405bd5:	call   DWORD PTR ds:0x418040
  405bdb:	lea    eax,[ebp-0x24]
  405bde:	push   eax
  405bdf:	call   DWORD PTR ds:0x418044
  405be5:	pop    edi
  405be6:	pop    esi
  405be7:	pop    ebx
  405be8:	leave  
  405be9:	ret    
  405bea:	jbe    0x405b98
  405bec:	outs   dx,BYTE PTR ds:[esi]
  405bed:	inc    BYTE PTR [ebp+0x0]
  405bf0:	add    BYTE PTR [eax],al
  405bf2:	fwait
  405bf3:	lock xor DWORD PTR [ecx+0x0],eax
  405bf7:	dec    esp
  405bf9:	add    al,0x4
  405bfb:	mov    eax,DWORD PTR [edi+ecx*1]
  405bfe:	inc    esp
  405bff:	or     al,0xf5
  405c01:	jne    0x405c03
  405c03:	mov    ecx,DWORD PTR [eax]
  405c05:	add    esi,DWORD PTR [esi-0x5]
  405c08:	cmp    eax,0x48b43
  405c0d:	add    ebx,DWORD PTR [ebp-0x40]
  405c10:	add    DWORD PTR [eax],edx
  405c12:	jb     0x405c0a
  405c14:	or     DWORD PTR gs:[eax],eax
  405c17:	add    ecx,DWORD PTR [ebx-0x53f84e00]
  405c1d:	call   0x8d4d:0x18b000c
  405c24:	add    DWORD PTR [ebp+0x4a],eax
  405c27:	mov    esp,0x338b2f95
  405c2c:	mov    ecx,esp
  405c2e:	mov    dl,0x39
  405c30:	in     eax,dx
  405c31:	mov    DWORD PTR gs:[eax],eax
  405c34:	mov    eax,DWORD PTR [eax]
  405c36:	call   0x4741d13b
  405c3b:	mov    DWORD PTR [esi-0x76ea7abf],esi
  405c41:	add    BYTE PTR [edi],dl
  405c43:	push   ds
  405c44:	sub    ebp,eax
  405c46:	adc    DWORD PTR [ebp+0x0],0x0
  405c4a:	add    BYTE PTR [eax],al
  405c4c:	add    DWORD PTR [eax+0x22],edx
  405c4f:	and    al,0xf2
  405c51:	pop    ds
  405c52:	add    ecx,DWORD PTR [esp+esi*2]
  405c55:	inc    ebp
  405c56:	sub    eax,0xfbd7c6
  405c5b:	add    DWORD PTR [eax],eax
  405c5d:	mov    ecx,DWORD PTR [ebx+0x2c83cccc]
  405c63:	add    BYTE PTR [ecx],0x65
  405c66:	inc    esi
  405c67:	add    BYTE PTR [ebp+0x45],al
  405c6a:	cwde   
  405c6b:	mov    ds:0x75005c5a,eax
  405c70:	pop    ebp
  405c71:	add    BYTE PTR [eax],al
  405c73:	add    ah,cl
  405c75:	call   DWORD PTR [ebp+edi*8+0xeb21]
  405c7c:	int3   
  405c7d:	rcr    dl,0xdf
  405c80:	adc    eax,edi
  405c82:	jmp    0x405c84
  405c84:	int3   
  405c85:	mov    ebp,esp
  405c87:	mov    eax,DWORD PTR [eax]
  405c89:	int3   
  405c8a:	neg    BYTE PTR [ebx+edi*8-0x17ff005c]
  405c91:	add    DWORD PTR [esi+0x5cb17c],esi
  405c97:	add    BYTE PTR [edi+edi*8],al
  405c9a:	mov    ecx,DWORD PTR [ebx+0xda80c10]
  405ca0:	mov    ecx,0xec8b8b38
  405ca5:	add    cl,bl
  405ca7:	out    dx,eax
  405ca8:	mov    ah,0xf7
  405caa:	add    DWORD PTR [eax],0xc
  405cad:	add    BYTE PTR [eax],al
  405caf:	test   DWORD PTR [ecx],eax
  405cb1:	test   DWORD PTR [edx],esi
  405cb3:	add    eax,0xcc4d0e05
  405cb8:	inc    DWORD PTR [edi+eax*2]
  405cbb:	add    eax,0xcc35eb
  405cc0:	adc    BYTE PTR [edi],cl
  405cc2:	add    esp,ecx
  405cc4:	add    BYTE PTR [eax],al
  405cc6:	pop    edx
  405cc7:	dec    ebx
  405cc8:	out    0x3f,eax
  405cca:	adc    eax,0xbe004600
  405ccf:	hlt    
  405cd0:	out    0x9f,al
  405cd2:	push   DWORD PTR [eax+ecx*1-0x14]
  405cd6:	pop    ebp
  405cd7:	push   DWORD PTR [eax+edx*2+0x1b]
  405cdb:	jmp    0x74736fc4
  405ce0:	inc    DWORD PTR [eax]
  405ce2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ce3:	mov    dl,0xae
  405ce5:	sub    BYTE PTR [eax],al
  405ce7:	push   esi
  405ce8:	(bad)  
  405ce9:	jmp    0x405c76
  405ceb:	mov    eax,DWORD PTR [eax]
  405ced:	sbb    DWORD PTR [edi+0x74d9330c],0xffffff85
  405cf4:	dec    ebp
  405cf5:	lea    edi,[esi]
  405cf7:	cmp    BYTE PTR [edi],dl
  405cf9:	es pop ebp
  405cfb:	lea    eax,[eax+eax*1]
  405cfe:	int3   
  405cff:	int3   
  405d00:	add    DWORD PTR [eax],eax
  405d02:	lahf   
  405d03:	mov    eax,ds:0x85457406
  405d08:	ror    BYTE PTR [ebx+0x6ae65a50],0x74
  405d0f:	or     DWORD PTR [ecx+0x150cc08],0xffffffe0
  405d16:	pop    eax
  405d17:	or     eax,0x55452fc5
  405d1c:	or     BYTE PTR [eax],al
  405d1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d1f:	les    ecx,FWORD PTR [ecx-0x33cc3fc4]
  405d25:	adc    BYTE PTR [eax],cl
  405d27:	rol    BYTE PTR [ecx],0x89
  405d2a:	mov    eax,0x116ecde
  405d2f:	add    DWORD PTR [eax],0x0
  405d32:	bound  ebx,QWORD PTR [ecx]
  405d34:	add    eax,0xff008b25
  405d39:	add    esp,ecx
  405d3b:	add    BYTE PTR [ebx-0x3671927d],cl
  405d41:	cmp    DWORD PTR [ebp-0x333fff0],ecx
  405d47:	mov    ebx,0x509d13
  405d4c:	mov    ecx,DWORD PTR [edi+ecx*1]
  405d4f:	inc    ebp
  405d50:	sub    esp,0x46
  405d53:	loopne 0x405d41
  405d55:	call   0x36a1:0x744500
  405d5c:	test   eax,0xcccc89d8
  405d61:	test   DWORD PTR [ebx-0x3fba74fd],ecx
  405d67:	pop    ds
  405d68:	add    ebp,eax
  405d6a:	int3   
  405d6b:	int3   
  405d6c:	call   0x6e3b4c51
  405d71:	push   ecx
  405d72:	or     al,0xff
  405d74:	add    DWORD PTR [ebx*8-0x43ff7700],0xffffffa1
  405d7c:	inc    ebx
  405d7d:	push   esi
  405d7e:	add    al,0x15
  405d80:	mov    esp,ecx
  405d82:	out    dx,eax
  405d83:	mov    eax,edx
  405d85:	mov    BYTE PTR [eax],0x45
  405d88:	push   eax
  405d89:	mov    ebx,ebp
  405d8b:	mov    eax,DWORD PTR [eax]
  405d8d:	add    edx,esi
  405d8f:	repnz aaa 
  405d91:	sbb    DWORD PTR [eax],eax
  405d93:	add    ah,cl
  405d95:	int3   
  405d96:	push   esi
  405d98:	in     eax,dx
  405d99:	rol    DWORD PTR [eax],cl
  405d9b:	or     BYTE PTR [eax],al
  405d9d:	pop    ebp
  405d9e:	mov    ecx,DWORD PTR [ebx+0x2406ff15]
  405da4:	hlt    
  405da5:	pusha  
  405da6:	add    BYTE PTR [ebp-0x75],cl
  405da9:	int3   
  405daa:	mov    ah,0x18
  405dac:	sbb    BYTE PTR [ecx+0x4d0c8bc7],ch
  405db2:	dec    esp
  405db4:	test   DWORD PTR [ebx+0x50ab02e8],ecx
  405dba:	add    DWORD PTR ds:0x62300000,edx
  405dc0:	xlat   BYTE PTR ds:[ebx]
  405dc1:	inc    si
  405dc3:	add    BYTE PTR [eax],al
  405dc5:	add    al,ch
  405dc7:	mov    eax,DWORD PTR [eax]
  405dc9:	dec    ebp
  405dca:	dec    esi
  405dcb:	and    al,0x68
  405dcd:	push   0x1154583
  405dd2:	ss daa 
  405dd4:	pop    ss
  405dd5:	sub    BYTE PTR [ecx],al
  405dd7:	add    DWORD PTR [ecx],eax
  405dd9:	dec    ebp
  405dda:	add    DWORD PTR [eax+eax*1],ecx
  405ddd:	mov    esi,edx
  405ddf:	push   esp
  405de0:	xor    DWORD PTR [ebp-0x75],edx
  405de3:	dec    DWORD PTR [ebp+0x19312b8b]
  405de9:	inc    edi
  405dea:	mov    esp,eax
  405dec:	inc    DWORD PTR [eax]
  405dee:	mov    ecx,DWORD PTR [ebx+0x20c68d89]
  405df4:	mov    DWORD PTR [ecx-0x15],eax
  405df7:	or     al,0xeb
  405df9:	int3   
  405dfa:	das    
  405dfb:	xchg   ecx,eax
  405dfc:	mov    edx,0x8b00002b
  405e01:	call   0x473fe94c
  405e06:	sahf   
  405e07:	shr    BYTE PTR [eax-0x6d],0x8b
  405e0b:	push   DWORD PTR [ebx]
  405e0d:	(bad)  
  405e0f:	fstp   st(1)
  405e11:	adc    BYTE PTR [eax],al
  405e13:	push   eax
  405e14:	add    DWORD PTR [ebx+0x8b008b],ecx
  405e1a:	mov    esp,0x551c67fb
  405e1f:	add    BYTE PTR [eax],al
  405e21:	or     al,0xe6
  405e23:	test   DWORD PTR [ebp+eiz*8+0x45],ebp
  405e27:	push   DWORD PTR [eax+edx*1-0x14]
  405e2b:	int3   
  405e2c:	add    al,0xcc
  405e2e:	addr16 int 0x2
  405e31:	lods   eax,DWORD PTR ds:[esi]
  405e32:	mov    ebx,ebp
  405e34:	add    BYTE PTR [eax],al
  405e36:	add    BYTE PTR [ecx],ch
  405e38:	mov    ah,0xb
  405e3a:	mov    edi,edi
  405e3c:	inc    DWORD PTR [eax]
  405e3e:	int3   
  405e3f:	push   eax
  405e40:	fld    QWORD PTR [eax]
  405e42:	sahf   
  405e43:	xor    eax,0x88bceec
  405e48:	xor    eax,DWORD PTR [ebx+0x314bcc5]
  405e4e:	(bad)  
  405e4f:	int3   
  405e50:	int3   
  405e51:	int3   
  405e52:	push   0x5d
  405e54:	int3   
  405e55:	int3   
  405e56:	ds push ss
  405e58:	imul   ebp,edx,0xffffff85
  405e5b:	add    DWORD PTR [eax+eax*1-0x3a],esi
  405e5f:	out    dx,al
  405e60:	push   edx
  405e62:	or     al,0xcc
  405e64:	adc    BYTE PTR [ecx+0x0],cl
  405e6a:	ret    
  405e6b:	add    DWORD PTR [edx-0x66],esp
  405e6e:	mov    bh,0x8b
  405e70:	ror    ah,0x89
  405e73:	sbb    DWORD PTR [ecx],ebp
  405e75:	(bad)  
  405e76:	push   edi
  405e77:	mov    DWORD PTR [eax],eax
  405e79:	add    DWORD PTR [eax],eax
  405e7b:	add    BYTE PTR [esi-0x77],al
  405e7e:	mov    ebx,DWORD PTR [edi]
  405e80:	fld    TBYTE PTR [eax]
  405e82:	scas   al,BYTE PTR es:[edi]
  405e83:	add    ah,cl
  405e85:	mov    ecx,DWORD PTR [ebx-0x57e4b9b2]
  405e8b:	add    al,ch
  405e8d:	add    BYTE PTR [eax+ecx*1+0x0],dh
  405e91:	mov    eax,DWORD PTR [ebx-0x4f461a8d]
  405e97:	mov    ecx,DWORD PTR [ebx+0x6e3100c0]
  405e9d:	push   cs
  405e9e:	loop   0x405e2b
  405ea0:	call   0x862c6091
  405ea5:	add    BYTE PTR [ebx+0x64fdbad],al
  405eab:	or     BYTE PTR [ebx+0x44cdcc00],cl
  405eb1:	xchg   edx,eax
  405eb2:	push   cs
  405eb3:	add    BYTE PTR [ebx-0x7aeaff39],cl
  405eb9:	add    al,ah
  405ebb:	shl    DWORD PTR [eax+0x458bc769],0x0
  405ec2:	push   0x6c
  405ec4:	arpl   WORD PTR [eax],sp
  405ec6:	fmul   DWORD PTR [ebx-0x7aba7500]
  405ecc:	call   DWORD PTR ds:0x44735400
  405ed2:	mov    cl,0xcc
  405ed4:	or     al,0x50
  405ed6:	add    al,cl
  405ed8:	mov    esp,0xff00c737
  405edd:	mov    eax,DWORD PTR [eax]
  405edf:	shr    ah,0x1
  405ee2:	add    bl,cl
  405ee4:	jb     0x405f0d
  405ee6:	jns    0x405e6d
  405ee8:	jmp    0x405ed5
  405eea:	adc    ch,bh
  405eec:	xor    DWORD PTR [esi],ebx
  405eee:	adc    al,0x0
  405ef0:	add    al,al
  405ef2:	adc    eax,0x555585ff
  405ef7:	int    0xd7
  405ef9:	inc    ebx
  405efa:	mov    cs,WORD PTR [edi]
  405efc:	add    esp,ecx
  405efe:	call   0xa4a925b6
  405f03:	inc    DWORD PTR [ecx]
  405f05:	add    BYTE PTR [ebx+0xff0175],cl
  405f0b:	lods   al,BYTE PTR ds:[esi]
  405f0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f0d:	paddsw mm0,QWORD PTR [ebp-0x7d]
  405f11:	mov    eax,DWORD PTR [ebp-0x4b]
  405f14:	aaa    
  405f15:	jnp    0x405eaa
  405f17:	inc    ebp
  405f18:	xor    DWORD PTR [ebp+eax*2-0x75],0x56
  405f1d:	or     BYTE PTR [ebx+0x1128d823],al
  405f23:	dec    DWORD PTR [ebp+0x1]
  405f26:	or     al,0x97
  405f28:	retf   0xb34a
  405f2b:	call   0xe0406230
  405f30:	mov    eax,DWORD PTR [eax]
  405f32:	mov    DWORD PTR [ebx],ecx
  405f34:	and    bl,BYTE PTR [eax-0x35]
  405f37:	xor    eax,DWORD PTR [ebx-0x1faab2f1]
  405f3d:	inc    esp
  405f3e:	pop    es
  405f3f:	add    al,0x8b
  405f41:	int3   
  405f42:	mov    ecx,DWORD PTR [ebx-0x417474f8]
  405f48:	jge    0x405f4f
  405f4a:	push   DWORD PTR [ebp+0x0]
  405f4d:	je     0x405f57
  405f4f:	jo     0x405f2a
  405f51:	cli    
  405f52:	or     eax,0xcc01018b
  405f57:	int3   
  405f58:	add    DWORD PTR [ebp+0x56],edx
  405f5b:	call   0x10adb9d
  405f60:	adc    BYTE PTR [eax],al
  405f62:	add    BYTE PTR [eax],dh
  405f64:	mov    ecx,0xf002265
  405f69:	add    BYTE PTR [eax],al
  405f6b:	int3   
  405f6c:	add    bh,al
  405f6e:	mov    edx,ebx
  405f70:	inc    ecx
  405f71:	sub    BYTE PTR [esi-0x74390000],ah
  405f77:	push   cs
  405f78:	pop    eax
  405f79:	adc    ebp,ebx
  405f7b:	int3   
  405f7c:	inc    DWORD PTR [ebp+0x508bcc8b]
  405f82:	add    dh,ah
  405f84:	xor    ch,BYTE PTR [esi-0x4]
  405f87:	add    ah,cl
  405f89:	add    BYTE PTR ds:0xb0a9a623,dl
  405f8f:	add    BYTE PTR [ebx],dh
  405f91:	int3   
  405f92:	add    BYTE PTR [eax],al
  405f94:	mov    DWORD PTR [eax],eax
  405f96:	mov    ebx,DWORD PTR [edi]
  405f98:	mov    eax,0x37a74
  405f9d:	int3   
  405f9e:	add    BYTE PTR [eax],bl
  405fa0:	mov    ebx,0x8500cec2
  405fa5:	inc    DWORD PTR [ecx]
  405fa7:	int3   
  405fa8:	test   esp,ecx
  405faa:	call   0xcff3190b
  405faf:	pop    ebp
  405fb0:	jne    0x405ff7
  405fb2:	add    BYTE PTR [edi-0x7a2f8209],ch
  405fb8:	add    BYTE PTR [esi-0x1],dl
  405fbb:	dec    DWORD PTR [ebp+0x0]
  405fbe:	jmp    FWORD PTR [ecx+0xd]
  405fc1:	les    esi,FWORD PTR [eax+eax*1-0x2c8b8bba]
  405fc8:	imul   edi
  405fca:	jmp    0xffe8:0x46898bcc
  405fd1:	mov    eax,DWORD PTR [eax]
  405fd3:	xchg   edi,eax
  405fd4:	cmp    al,0xb7
  405fd6:	retf   
  405fd7:	dec    DWORD PTR [eax]
  405fd9:	inc    ebp
  405fda:	add    BYTE PTR [ebx+0x1ea6087],ah
  405fe0:	dec    DWORD PTR [ebx+0x3ff08c0]
  405fe6:	or     DWORD PTR [edi],0xffffffc9
  405fe9:	pop    ebx
  405fea:	dec    ebp
  405feb:	dec    esp
  405fed:	add    BYTE PTR [eax],cl
  405fef:	shl    DWORD PTR [eax-0x4c],cl
  405ff2:	pop    eax
  405ff3:	add    BYTE PTR [eax],al
  405ff5:	add    DWORD PTR [eax],eax
  405ff7:	mov    ecx,DWORD PTR [ebx+0x1115558b]
  405ffd:	mov    esi,0x15330000
  406002:	add    BYTE PTR [edx+0x4c],dl
  406005:	adc    al,0xfc
  406007:	push   0x45
  406009:	inc    ebp
  40600a:	call   0x5040601f
  40600f:	pop    edi
  406010:	xchg   edi,eax
  406011:	xor    bh,BYTE PTR [edi+0x0]
  406014:	add    DWORD PTR [ebp+0xeb6bc74],ecx
  40601a:	xor    al,0x4d
  40601c:	mov    esp,ecx
  40601e:	add    BYTE PTR [edi+edi*8-0x34],dh
  406022:	add    dl,al
  406024:	pop    edi
  406025:	outs   dx,DWORD PTR ds:[esi]
  406026:	xchg   ecx,eax
  406027:	add    esp,ecx
  406029:	add    bh,bh
  40602b:	(bad)  
  40602c:	pop    eax
  40602d:	es mov bh,0x1
  406030:	add    BYTE PTR ds:0xcc6a8bdd,dl
  406036:	mov    eax,eax
  406038:	(bad)  
  406039:	sbb    ebp,DWORD PTR [eax-0x34000000]
  40603f:	call   0x8c27cca7
  406044:	push   esi
  406045:	mov    DWORD PTR [ecx],eax
  406047:	lea    eax,[eax]
  406049:	add    ah,cl
  40604b:	fnstsw WORD PTR [eax-0xabd9]
  406051:	add    bl,ch
  406053:	adc    BYTE PTR ds:0x89568e28,bh
  406059:	adc    ah,cl
  40605b:	add    al,0x74
  40605d:	ror    BYTE PTR [edx+esi*2],0x82
  406061:	cld    
  406062:	mov    ebx,0x100cc8b
  406067:	(bad)  
  406068:	call   0x8300:0x501fc3
  40606f:	or     al,0x0
  406071:	adc    BYTE PTR [ebp-0x6a],cl
  406074:	ja     0x4060ad
  406076:	mov    WORD PTR [eax],es
  406078:	add    BYTE PTR ds:0xc2666b8b,dl
  40607e:	sub    al,BYTE PTR [eax]
  406080:	int3   
  406081:	add    BYTE PTR [eax],al
  406083:	or     esp,0xffffff8b
  406086:	inc    ebp
  406087:	int3   
  406088:	push   eax
  406089:	(bad)  
  40608a:	dec    esi
  40608b:	add    ch,bl
  40608d:	add    BYTE PTR [ecx],al
  40608f:	adc    BYTE PTR [ebx+0x48],dl
  406092:	pop    ebx
  406093:	dec    DWORD PTR [ebx-0x3f0000f8]
  406099:	inc    DWORD PTR [eax]
  40609b:	fistp  QWORD PTR [eax+0x5df24b]
  4060a1:	add    esp,ecx
  4060a3:	into   
  4060a4:	jno    0x406040
  4060a6:	dec    esi
  4060a7:	push   ebp
  4060a8:	add    BYTE PTR [eax+eax*1+0x0],dh
  4060ac:	test   DWORD PTR [ebp-0x77],ebx
  4060af:	pop    edx
  4060b0:	push   0x8500c02c
  4060b5:	mov    ecx,DWORD PTR [ebx+0x134d83a7]
  4060bb:	dec    DWORD PTR [ecx-0x22727700]
  4060c1:	add    BYTE PTR [ecx],al
  4060c3:	dec    esp
  4060c4:	shr    DWORD PTR [esi+0x6f],1
  4060c7:	add    BYTE PTR [ebp+esi*2-0x75],dh
  4060cb:	jmp    0x83ff:0x8c97ea
  4060d2:	add    BYTE PTR [ebp-0x533ffff],al
  4060d8:	xlat   BYTE PTR ds:[ebx]
  4060d9:	fsubr  QWORD PTR [esi-0x7c00bb]
  4060df:	outs   dx,DWORD PTR ds:[esi]
  4060e0:	mov    bl,0x24
  4060e2:	stc    
  4060e3:	jne    0x4060a5
  4060e5:	add    BYTE PTR [eax],al
  4060e7:	lea    esi,[eax+eax*1-0x75]
  4060eb:	xor    DWORD PTR [edx-0x74330ce2],edi
  4060f1:	mov    DWORD PTR [ebx-0x6f7ee8b8],ecx
  4060f7:	add    al,0x8b
  4060f9:	jmp    0x406086
  4060fb:	add    BYTE PTR [eax],al
  4060fd:	int3   
  4060fe:	inc    edx
  406100:	adc    al,0x46
  406102:	retf   0xc
  406105:	fisttp QWORD PTR [eax+edx*2]
  406108:	mov    edi,0x8b83c495
  40610d:	test   ebp,ebx
  40610f:	pop    ebp
  406110:	lea    ecx,[ebx+0x29314d8b]
  406116:	cwde   
  406117:	adc    eax,0xcd084500
  40611c:	cmp    DWORD PTR ds:0x75898bcc,edi
  406122:	add    BYTE PTR [edi],cl
  406124:	add    BYTE PTR [ebx],dh
  406126:	inc    ebp
  406127:	(bad)  
  406128:	xchg   ebp,eax
  406129:	mov    eax,ds:0x400f9
  40612e:	add    BYTE PTR [ebx],bl
  406130:	mov    WORD PTR [esp+edx*4],?
  406133:	add    BYTE PTR [ecx],al
  406135:	int3   
  406136:	pop    ebp
  406137:	add    BYTE PTR [ebp+0x6b338bff],al
  40613d:	inc    esi
  40613e:	aaa    
  40613f:	add    al,0xe0
  406141:	call   0x76a670d1
  406146:	jg     0x40617b
  406148:	add    edi,edi
  40614a:	int3   
  40614b:	add    ch,bl
  40614d:	mov    ecx,DWORD PTR [ebx+0x643bbdb]
  406153:	inc    DWORD PTR [eax]
  406155:	add    bh,bh
  406157:	nop    DWORD PTR [eax*4-0x74337d]
  40615f:	fisttp QWORD PTR [ebp+0x6e4e8b50]
  406165:	add    BYTE PTR [eax-0x7400b901],0xa4
  40616c:	xor    dl,BYTE PTR [eax]
  40616e:	test   BYTE PTR [ebp+0x0],dl
  406171:	add    BYTE PTR [eax],al
  406173:	(bad)  
  406174:	int3   
  406175:	add    ah,cl
  406177:	jns    0x4060ff
  406179:	cmp    al,0x6b
  40617b:	mov    ecx,DWORD PTR [eax]
  40617d:	add    BYTE PTR [eax],al
  40617f:	sbb    eax,0x74e74bc3
  406184:	add    BYTE PTR [ebp+0x3301ffcc],cl
  40618a:	je     0x406158
  40618c:	add    cl,cl
  40618e:	add    BYTE PTR [eax],al
  406190:	call   0x57246995
  406195:	jnp    0x40620a
  406197:	int3   
  406198:	add    al,0xc
  40619a:	mov    ecx,esp
  40619c:	jne    0x40619e
  40619e:	pop    ebp
  40619f:	dec    ebx
  4061a0:	lahf   
  4061a1:	mov    DWORD PTR [eax+0x5500008b],0xba4ccc13
  4061ab:	add    DWORD PTR [eax],eax
  4061ad:	add    DWORD PTR [ebp-0x8b7434],eax
  4061b3:	and    al,0x74
  4061b5:	cmp    DWORD PTR [ecx-0x75],eax
  4061b8:	push   DWORD PTR [eax+eax*1+0x4e]
  4061bc:	retf   0x4388
  4061bf:	add    BYTE PTR [eax],al
  4061c1:	add    BYTE PTR [eax],al
  4061c3:	int3   
  4061c4:	or     ah,cl
  4061c6:	int3   
  4061c7:	test   BYTE PTR [ecx+0x46],bh
  4061ca:	leave  
  4061cb:	mov    edx,DWORD PTR [eax]
  4061cd:	push   eax
  4061ce:	mov    edx,DWORD PTR [esi+0x5b2d6d]
  4061d4:	je     0x4061a2
  4061d6:	int3   
  4061d7:	push   ebp
  4061d8:	je     0x4061a6
  4061da:	mov    ecx,DWORD PTR [edx+0x59]
  4061dd:	ss pushf 
  4061df:	add    ah,cl
  4061e1:	int3   
  4061e2:	add    ah,cl
  4061e4:	inc    esp
  4061e5:	push   0x858b467c
  4061ea:	sgdtd  [ebp+0x0]
  4061ee:	xor    ebx,DWORD PTR [ecx]
  4061f0:	pop    ss
  4061f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061f2:	in     al,0x85
  4061f4:	int3   
  4061f5:	add    BYTE PTR [ebp-0x716d62d9],al
  4061fb:	dec    esp
  4061fd:	add    BYTE PTR [ebx+0x5d50006a],cl
  406203:	mov    bl,0x5
  406205:	dec    eax
  406206:	jg     0x406210
  406208:	sub    DWORD PTR [edx+0x0],0xffffffcb
  40620c:	xchg   ebx,eax
  40620d:	and    cl,BYTE PTR cs:[ebx-0xea2300]
  406214:	add    ah,cl
  406216:	add    BYTE PTR [edx],bl
  406218:	nop
  406219:	push   edx
  40621a:	mov    eax,0x8bdd458b
  40621f:	addr16 popa 
  406221:	(bad)  
  406222:	lds    ecx,FWORD PTR [ebp+0x0]
  406225:	push   eax
  406226:	add    eax,eax
  406228:	fucomp st(3)
  40622a:	inc    ebx
  40622c:	outs   dx,DWORD PTR ds:[esi]
  40622d:	sub    eax,0x8dfff333
  406232:	mov    DWORD PTR [ebp+0x11],ecx
  406235:	js     0x40625f
  406237:	scas   eax,DWORD PTR es:[edi]
  406238:	int3   
  406239:	add    al,al
  40623b:	ror    ah,0x0
  40623e:	int3   
  40623f:	add    BYTE PTR ds:0x8b5c054a,bl
  406245:	add    BYTE PTR [edi],cl
  406247:	add    dl,al
  406249:	and    al,0x84
  40624b:	push   cs
  40624c:	or     BYTE PTR [ebp+0x0],al
  40624f:	add    DWORD PTR [eax],0xffffffdd
  406252:	add    esp,ecx
  406254:	into   
  406255:	add    BYTE PTR [ecx+0x15c7cc19],0xff
  40625c:	dec    eax
  40625d:	ss add edi,edx
  406260:	add    DWORD PTR [ebp-0xffff34],eax
  406266:	mov    edx,DWORD PTR ds:0xe7343f1
  40626c:	inc    ebp
  40626d:	inc    DWORD PTR [eax]
  40626f:	fnsave [ecx-0x63]
  406272:	pop    ebp
  406273:	dec    ecx
  406274:	jmp    0x406201
  406276:	sldt   WORD PTR [eax]
  406279:	add    BYTE PTR [esi-0x40],dl
  40627c:	fcom   st(7)
  40627e:	jge    0x4062e5
  406280:	call   0xa140ed91
  406285:	or     edi,edi
  406287:	push   0xffffffc7
  406289:	inc    ebp
  40628a:	add    ah,cl
  40628c:	rol    BYTE PTR [ebp+0x227a8bc0],0x23
  406293:	out    0x0,al
  406295:	adc    al,al
  406297:	int3   
  406298:	xor    BYTE PTR [esi+edi*4+0x68],ah
  40629c:	fld    QWORD PTR [eax]
  40629e:	inc    DWORD PTR [ebp+0x10]
  4062a1:	add    BYTE PTR [eax],al
  4062a3:	or     al,0x44
  4062a5:	push   ss
  4062a6:	loopne 0x4062ad
  4062a8:	add    BYTE PTR [eax-0x7d],dl
  4062ab:	jne    0x40632a
  4062ad:	loopne 0x40625a
  4062af:	ja     0x4062b1
  4062b1:	int3   
  4062b2:	mov    eax,DWORD PTR [ebx+ecx*4]
  4062b5:	mov    ecx,DWORD PTR [ebx+0x34607510]
  4062bb:	iret   
  4062bc:	inc    ebp
  4062bd:	jne    0x4062bf
  4062bf:	rcl    BYTE PTR ds:0xc0816ed0,0x3
  4062c6:	call   0xcd62cb
  4062cb:	add    BYTE PTR [ebx],bh
  4062cd:	int3   
  4062ce:	add    eax,ebp
  4062d0:	add    ah,cl
  4062d2:	inc    esi
  4062d3:	jmp    0x406272
  4062d5:	pop    edi
  4062d6:	jge    0x406277
  4062d8:	or     BYTE PTR [eax],al
  4062da:	add    ah,cl
  4062dc:	mov    DWORD PTR [ebx-0x2c54f073],ecx
  4062e2:	mov    BYTE PTR [esi+0x0],dl
  4062e5:	inc    DWORD PTR [eax]
  4062e7:	in     al,dx
  4062e8:	fcom   QWORD PTR [esi+0xec9409]
  4062ee:	add    ah,cl
  4062f0:	mov    eax,DWORD PTR [ebx+0x6e408b8b]
  4062f6:	lea    esp,[ebx+ecx*4+0x0]
  4062fa:	or     BYTE PTR [ebx],dh
  4062fc:	cmp    al,0xca
  4062fe:	mov    esp,0x74c09d
  406303:	(bad)  
  406304:	int3   
  406305:	add    BYTE PTR [eax+eax*1],al
  406308:	pop    ecx
  406309:	aas    
  40630a:	enter  0x5503,0x0
  40630e:	mov    edi,edi
  406310:	or     edi,ebp
  406312:	jo     0x4062a2
  406314:	mov    eax,DWORD PTR [ecx]
  406316:	jne    0x406317
  406318:	add    DWORD PTR [edx*1+0x52f10500],eax
  40631f:	bswap  esp
  406321:	fisttp QWORD PTR [ebx-0xa86befc]
  406327:	dec    ebp
  406328:	jmp    0x40630a
  40632a:	rol    BYTE PTR [ebp-0x14aaff73],0x83
  406331:	cmp    eax,ecx
  406333:	pop    edi
  406334:	add    BYTE PTR [ebp-0x7d],al
  406337:	inc    edi
  406339:	pop    edi
  40633a:	pop    ds
  40633b:	push   ds
  40633c:	add    DWORD PTR [ebx],eax
  40633e:	int3   
  40633f:	(bad)  
  406340:	(bad)  
  406341:	in     al,dx
  406342:	mov    DWORD PTR [eax],edx
  406344:	cmp    ecx,DWORD PTR [ecx+0x45005529]
  40634a:	add    DWORD PTR [ebp+0x2a84e955],eax
  406350:	rol    BYTE PTR [ecx],0x8b
  406353:	inc    DWORD PTR [ecx]
  406355:	adc    DWORD PTR [eax],0xffffff85
  406358:	pop    esi
  406359:	movups xmm3,XMMWORD PTR [esi]
  40635c:	adc    BYTE PTR [ecx],al
  40635e:	or     al,0xff
  406360:	in     eax,0xb5
  406362:	sbb    al,0xfc
  406364:	mov    DWORD PTR [ecx],eax
  406366:	add    ah,cl
  406368:	add    BYTE PTR [ebx-0x71d3ff8b],cl
  40636e:	xlat   BYTE PTR ds:[ebx]
  40636f:	xchg   DWORD PTR [eax],eax
  406371:	mov    DWORD PTR [ebp-0x34],eax
  406374:	sub    eax,0xef23a0
  406379:	int3   
  40637a:	add    DWORD PTR [ebp-0x74a9aaf8],eax
  406380:	sbb    al,0x9b
  406382:	mov    esp,0x74e80c1b
  406387:	jne    0x40636f
  406389:	(bad)  
  40638a:	mov    esp,0x28
  40638f:	add    BYTE PTR [ebx+0x4c564500],cl
  406395:	mov    ebp,0xe8cc92d4
  40639a:	mov    eax,DWORD PTR [eax]
  40639c:	mov    eax,0x83453af6
  4063a1:	add    BYTE PTR [esi+0x0],dl
  4063a4:	int3   
  4063a5:	ror    ah,0xcc
  4063a8:	xor    DWORD PTR [esi+0x3c],ecx
  4063ab:	push   es
  4063ac:	add    DWORD PTR [eax-0x77],edx
  4063af:	add    BYTE PTR [edi-0x42],dh
  4063b2:	dec    ebx
  4063b3:	ror    DWORD PTR [ebx-0x10000],cl
  4063b9:	xor    edi,edi
  4063bb:	int3   
  4063bc:	inc    eax
  4063bd:	jecxz  0x406384
  4063bf:	inc    BYTE PTR [eax]
  4063c1:	mov    eax,DWORD PTR [eax]
  4063c3:	inc    DWORD PTR ds:0xcc0a40d8
  4063c9:	add    eax,DWORD PTR [esi+0x0]
  4063cc:	je     0x4063de
  4063ce:	add    BYTE PTR [ebx+0x5c3f07b4],al
  4063d4:	mov    eax,DWORD PTR [ebp+0x3]
  4063d7:	or     BYTE PTR ds:0xcc408a34,dl
  4063dd:	add    DWORD PTR [eax],ecx
  4063df:	call   0x41976f
  4063e4:	jl     0x40640d
  4063e6:	pop    ebp
  4063e7:	inc    esp
  4063e8:	mov    ecx,esp
  4063ea:	inc    esi
  4063eb:	int3   
  4063ec:	push   esi
  4063ed:	sbb    dl,BYTE PTR [edx]
  4063ef:	dec    eax
  4063f0:	inc    DWORD PTR [eax]
  4063f2:	inc    ebp
  4063f3:	mov    ecx,DWORD PTR [ebx+0xccc008b]
  4063f9:	or     eax,0x1ff437f
  4063fe:	add    DWORD PTR [ebp-0x71885dbd],eax
  406404:	add    BYTE PTR [eax],al
  406406:	je     0x40640c
  406408:	mov    eax,DWORD PTR [eax]
  40640a:	add    ah,cl
  40640c:	dec    edi
  40640d:	or     DWORD PTR [ebx-0x7a],ebp
  406410:	add    BYTE PTR [ebx-0x62a333bb],cl
  406416:	mov    ds:0x758bff68,eax
  40641b:	cmp    edi,0x4d
  40641e:	adc    eax,0x988bea01
  406423:	ins    BYTE PTR es:[edi],dx
  406424:	mov    ecx,DWORD PTR [ebx+0x5d8b0889]
  40642a:	mov    ah,0x69
  40642c:	add    BYTE PTR [ecx],al
  40642e:	adc    DWORD PTR [eax],0x0
  406431:	mov    DWORD PTR [ebp+0x74],ecx
  406434:	sub    cl,bl
  406436:	sub    BYTE PTR [eax],0x83
  406439:	rol    BYTE PTR [eax],0x0
  40643c:	jmp    0x75cc:0x109f4ee0
  406443:	int3   
  406444:	push   eax
  406445:	inc    DWORD PTR [edx*2-0x778c3e2d]
  40644c:	(bad)  
  40644d:	jmp    0x40641b
  40644f:	int3   
  406450:	xor    esi,DWORD PTR [ecx+0x4]
  406453:	pop    ebx
  406454:	mov    ecx,esp
  406456:	int3   
  406457:	mov    edi,edi
  406459:	inc    esi
  40645a:	add    BYTE PTR [ecx],al
  40645c:	jne    0x4064af
  40645e:	das    
  40645f:	(bad)  
  406460:	push   DWORD PTR [esp+ecx*8-0x75]
  406464:	add    eax,0xff504d7
  406469:	add    DWORD PTR [eax],eax
  40646b:	(bad)  
  40646d:	mov    esp,ecx
  40646f:	je     0x4064af
  406471:	jmp    0x2bdc5a
  406476:	int3   
  406477:	or     al,0xf7
  406479:	in     al,dx
  40647a:	or     DWORD PTR [edx-0x75],0x1008b
  406481:	add    BYTE PTR [ebx-0x8731701],cl
  406487:	pop    ds
  406488:	add    edi,edi
  40648a:	push   ebp
  40648b:	int3   
  40648c:	dec    edx
  40648d:	sahf   
  40648e:	and    dh,ah
  406490:	adc    eax,0xffcc00
  406495:	push   eax
  406496:	test   DWORD PTR [ebx+0x1c3dcb02],ecx
  40649c:	int3   
  40649d:	add    esi,DWORD PTR [ebx]
  40649f:	test   DWORD PTR [edi],ebp
  4064a1:	add    dh,BYTE PTR [ebx+0x41]
  4064a4:	add    BYTE PTR [eax],al
  4064a6:	test   DWORD PTR [eax],eax
  4064a8:	test   DWORD PTR [ecx],eax
  4064aa:	int3   
  4064ab:	pop    ebp
  4064ac:	add    esi,edi
  4064ae:	dec    DWORD PTR [ebx+0x1]
  4064b1:	add    ah,cl
  4064b3:	int3   
  4064b4:	test   BYTE PTR [edi],bl
  4064b6:	jl     0x406534
  4064b8:	jne    0x4064c9
  4064ba:	mov    eax,DWORD PTR [eax]
  4064bc:	add    bh,al
  4064be:	inc    ebp
  4064bf:	int3   
  4064c0:	cld    
  4064c1:	dec    esp
  4064c2:	xchg   esi,eax
  4064c3:	out    0x1,eax
  4064c5:	add    BYTE PTR [ebp-0x7d],dl
  4064c8:	or     DWORD PTR [eax-0x74338bb7],eax
  4064ce:	mov    ecx,DWORD PTR [ebx+0x50018b15]
  4064d4:	iret   
  4064d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064d6:	cmp    dl,BYTE PTR [esi+0x0]
  4064d9:	fucomp st(3)
  4064db:	int3   
  4064dc:	sub    BYTE PTR [ecx+0x10],dh
  4064df:	mov    dl,0x0
  4064e1:	adc    eax,0xff8b0000
  4064e6:	mov    esp,ecx
  4064e8:	test   al,0x5b
  4064ea:	cmp    cl,BYTE PTR [ecx-0x74b2baf1]
  4064f0:	ds add eax,0x4651c
  4064f6:	sub    eax,0x75
  4064f9:	loopne 0x4064fb
  4064fb:	add    DWORD PTR ds:0xace4af,ebx
  406501:	call   DWORD PTR [esi-0x1]
  406504:	shr    DWORD PTR [edx+0x31],cl
  406507:	xchg   ebx,eax
  406508:	add    BYTE PTR [ecx],al
  40650a:	mov    ecx,DWORD PTR [ebx-0x7500]
  406510:	test   al,0xb5
  406512:	cmp    al,0xf6
  406514:	test   DWORD PTR [ecx],eax
  406516:	mov    ecx,DWORD PTR [ebp+0x2f]
  406519:	push   ebx
  40651a:	out    0x2e,eax
  40651c:	(bad)  
  40651d:	dec    esp
  40651f:	add    bh,bh
  406521:	add    esp,ecx
  406523:	add    bh,dl
  406525:	xchg   esi,eax
  406526:	push   edi
  406527:	cmp    BYTE PTR [ebx-0x73eaf800],cl
  40652d:	mov    ds:0x1dd878f,eax
  406532:	loopne 0x4065a8
  406534:	mov    DWORD PTR [ebp+0x74],edx
  406537:	push   eax
  406538:	jo     0x4064ef
  40653a:	inc    ebx
  40653b:	inc    ebx
  40653c:	inc    ebp
  40653d:	adc    BYTE PTR [ebp+0x1],dh
  406540:	shr    DWORD PTR [ebx-0x14bff3],1
  406546:	add    BYTE PTR [ebp-0x74fff1],cl
  40654c:	or     al,0xa8
  40654e:	ins    BYTE PTR es:[edi],dx
  40654f:	jne    0x406531
  406551:	mov    ecx,esp
  406553:	add    al,0x4d
  406555:	popa   
  406556:	stos   DWORD PTR es:[edi],eax
  406557:	add    bh,bh
  406559:	mov    eax,DWORD PTR [eax]
  40655b:	dec    ebp
  40655c:	mov    DWORD PTR [eax],eax
  40655e:	add    BYTE PTR [ebx+0x3d6272fb],cl
  406564:	push   0x10
  406566:	int3   
  406567:	int3   
  406568:	fmul   st,st(0)
  40656a:	pushf  
  40656b:	push   ss
  40656c:	add    bh,bh
  40656e:	je     0x406585
  406570:	add    BYTE PTR [ebp-0x34],dh
  406573:	int3   
  406574:	jl     0x4065ba
  406576:	fxam   
  406578:	add    ah,cl
  40657a:	test   DWORD PTR [eax],eax
  40657c:	cmp    al,0x2d
  40657e:	mov    al,0xc6
  406580:	add    BYTE PTR [ecx],al
  406582:	mov    ecx,DWORD PTR [ebx-0x8bfffc]
  406588:	sar    dh,1
  40658a:	adc    ebx,DWORD PTR [ebx+0x8560110]
  406590:	ret    
  406591:	jmp    0x758bb9ca
  406596:	inc    ebp
  406597:	add    BYTE PTR [eax],al
  406599:	sti    
  40659a:	loope  0x4065c7
  40659c:	sbb    al,0x0
  40659e:	mov    esi,DWORD PTR [esp+ecx*1-0x7b]
  4065a2:	add    BYTE PTR [ebx-0x4feb7734],cl
  4065a8:	imul   esp,eax,0x717501ff
  4065ae:	adc    BYTE PTR [esi+0x4e],dh
  4065b1:	pop    ebp
  4065b2:	je     0x406580
  4065b4:	add    BYTE PTR [ebp+0x0],al
  4065b7:	mov    ecx,DWORD PTR [ebx-0x3a959455]
  4065bd:	mov    edi,edi
  4065bf:	xor    ecx,DWORD PTR [ebx-0x3dbdf989]
  4065c5:	mov    ecx,DWORD PTR [edi]
  4065c7:	add    DWORD PTR [ebp+0x8],edx
  4065ca:	add    DWORD PTR [ebx-0x7b165975],0xffffffb8
  4065d1:	inc    esi
  4065d2:	push   esi
  4065d3:	add    BYTE PTR [ebp-0x37],cl
  4065d6:	push   edi
  4065d7:	push   ebp
  4065d8:	add    BYTE PTR [ebp+0x6acc008b],al
  4065de:	add    al,0x0
  4065e0:	add    BYTE PTR [ebx-0x6f],ah
  4065e3:	sub    al,BYTE PTR [esi]
  4065e5:	inc    DWORD PTR [eax]
  4065e7:	add    ah,cl
  4065e9:	or     al,0x2
  4065eb:	cli    
  4065ec:	xchg   esi,eax
  4065ed:	add    BYTE PTR [ebx+0xf008b8b],cl
  4065f3:	add    BYTE PTR [ebx],dh
  4065f5:	dec    BYTE PTR [edi]
  4065f7:	and    al,0xd7
  4065f9:	mov    eax,DWORD PTR [eax*4-0x5fc5387d]
  406600:	xlat   BYTE PTR ds:[ebx]
  406601:	int3   
  406602:	int3   
  406603:	call   0xff41f109
  406608:	call   FWORD PTR [edx+0x3f]
  40660b:	jl     0x4065fc
  40660d:	shl    BYTE PTR [ebx+ecx*4+0x55],0x52
  406612:	loope  0x40661d
  406614:	bound  eax,QWORD PTR [eax]
  406616:	push   esi
  406617:	add    edi,edi
  406619:	mov    eax,DWORD PTR [eax]
  40661b:	dec    DWORD PTR [ecx+0xb397414]
  406621:	mov    DWORD PTR [eax],ecx
  406623:	dec    DWORD PTR [edi+ebp*8]
  406626:	jae    0x40664b
  406628:	imul   ecx,esp,0xeb08cc89
  40662e:	inc    ebp
  40662f:	adc    BYTE PTR [eax],al
  406631:	and    eax,0x8917f9f4
  406636:	add    BYTE PTR [ebp-0x77],al
  406639:	(bad)  
  40663c:	jmp    0x758d:0x8b560100
  406643:	int3   
  406644:	or     al,0xb1
  406646:	pushf  
  406647:	add    ebx,DWORD PTR [ecx]
  406649:	add    ah,cl
  40664b:	int3   
  40664c:	add    ebx,DWORD PTR [ecx]
  40664e:	cdq    
  40664f:	shl    BYTE PTR [esi],0x0
  406652:	add    BYTE PTR [eax],al
  406654:	pop    ebp
  406655:	mov    eax,DWORD PTR [eax]
  406657:	int3   
  406658:	or     al,0x8f
  40665a:	jmp    0x8515:0x56047aa4
  406661:	scas   al,BYTE PTR es:[edi]
  406662:	mov    ch,0x1e
  406664:	inc    ebp
  406665:	int3   
  406666:	or     BYTE PTR [eax],al
  406668:	int3   
  406669:	add    BYTE PTR [ebx+0x3ccf8300],cl
  40666f:	jle    0x4066c0
  406671:	add    BYTE PTR [ecx],al
  406673:	add    DWORD PTR [eax],eax
  406675:	mov    al,ds:0x756d2713
  40667a:	add    eax,eax
  40667c:	add    DWORD PTR [ebp-0x19aa0000],0x26
  406683:	jo     0x406652
  406685:	pop    ebp
  406686:	int3   
  406687:	or     DWORD PTR [eax],0xffffffec
  40668a:	pop    ebx
  40668b:	jg     0x8b493292
  406691:	or     BYTE PTR [edi],cl
  406693:	push   ebp
  406694:	mov    edi,eax
  406696:	retf   
  406697:	test   DWORD PTR [esi+0x8b00ff],ebx
  40669d:	dec    esi
  40669e:	ud1    ebp,edi
  4066a1:	add    BYTE PTR [eax],al
  4066a3:	(bad)  
  4066a5:	add    BYTE PTR [ebx+0x1ad6cc45],cl
  4066ab:	fs push ebx
  4066ad:	mov    eax,edi
  4066af:	add    BYTE PTR [eax],dl
  4066b1:	test   eax,0x91a332
  4066b6:	mov    ebp,eax
  4066b8:	add    BYTE PTR [eax],al
  4066ba:	add    DWORD PTR [ebx-0x2f9e6b75],0x15
  4066c1:	mov    eax,DWORD PTR [ecx]
  4066c3:	add    ah,cl
  4066c5:	jbe    0x4066fa
  4066c7:	mov    al,ds:0x747498
  4066cc:	add    esp,ecx
  4066ce:	mov    ecx,DWORD PTR [eax]
  4066d0:	shr    BYTE PTR [edx-0x80],0x81
  4066d4:	loope  0x4066d6
  4066d6:	fld    QWORD PTR [eax]
  4066d8:	add    BYTE PTR [edi-0x38a3422e],ch
  4066de:	mov    esp,ecx
  4066e0:	inc    DWORD PTR [ebp+0x0]
  4066e3:	int3   
  4066e4:	add    al,dh
  4066e6:	pop    esp
  4066e7:	mov    ds:0x8d10c74b,al
  4066ec:	add    BYTE PTR [edi+0x17],bl
  4066ef:	int3   
  4066f0:	test   BYTE PTR [eax],0xcc
  4066f3:	add    bh,al
  4066f5:	add    edi,edi
  4066f7:	inc    esi
  4066f8:	int3   
  4066f9:	xchg   esp,eax
  4066fa:	pusha  
  4066fb:	xchg   BYTE PTR [esi+0xff85c7],ch
  406701:	inc    ecx
  406702:	pminub mm5,QWORD PTR [ebx+eax*1+0xccff00]
  40670a:	mov    ebx,DWORD PTR [ebp-0x75]
  40670d:	sti    
  40670e:	ret    
  40670f:	loopne 0x4066eb
  406711:	add    BYTE PTR [eax],al
  406713:	mov    ecx,DWORD PTR [eax]
  406715:	jp     0x406701
  406717:	jbe    0x40678c
  406719:	add    esp,ebp
  40671b:	add    al,0xcc
  40671d:	add    esp,ecx
  40671f:	add    BYTE PTR [esp+ebx*4-0x2],dh
  406723:	pop    es
  406724:	pop    edi
  406725:	in     al,dx
  406726:	fisttp QWORD PTR [eax]
  406728:	add    BYTE PTR [esp+ecx*8-0x24],bh
  40672c:	mov    bl,0xe8
  40672e:	mov    DWORD PTR ds:0x45cc08ff,edx
  406734:	mov    DWORD PTR [edi],eax
  406736:	loope  0x4066d9
  406738:	inc    edi
  406739:	int3   
  40673a:	add    bh,bh
  40673c:	add    dh,bl
  40673e:	iret   
  40673f:	sbb    ebp,ebx
  406741:	call   0x1b5f09c
  406746:	add    BYTE PTR [ebx-0x62e9ea00],cl
  40674c:	and    eax,0xff007400
  406751:	xor    BYTE PTR [edx],cl
  406753:	jge    0x4066e6
  406755:	add    ah,cl
  406757:	add    BYTE PTR [ecx-0x8a0100],cl
  40675d:	lea    edx,[edi-0x7428af]
  406763:	or     BYTE PTR [eax],al
  406765:	mov    ds:0xcc7306,al
  40676a:	mov    eax,DWORD PTR [ecx]
  40676c:	int3   
  40676d:	push   eax
  40676e:	jne    0x40675b
  406770:	(bad)  
  406771:	push   edx
  406772:	bound  ecx,QWORD PTR [ecx-0x3f]
  406775:	loopne 0x406743
  406777:	or     BYTE PTR [ecx],al
  406779:	push   es
  40677a:	sti    
  40677b:	retf   
  40677c:	sbb    al,al
  40677e:	int3   
  40677f:	pop    ebp
  406780:	jne    0x40676e
  406782:	add    BYTE PTR [ecx],al
  406784:	(bad)  
  406785:	popa   
  406786:	std    
  406787:	sub    dh,ah
  406789:	push   0xffffffc0
  40678b:	int3   
  40678c:	mov    edi,DWORD PTR [eax-0x56]
  40678f:	cmc    
  406790:	xor    eax,0xcc008b83
  406795:	int3   
  406796:	push   eax
  406797:	add    al,ch
  406799:	inc    ebp
  40679a:	ss lahf 
  40679c:	sbb    al,BYTE PTR [ebp-0x75]
  40679f:	lea    eax,[ebp+0x137ced82]
  4067a5:	int3   
  4067a6:	jmp    0x406774
  4067a8:	pop    ebp
  4067a9:	mov    ecx,DWORD PTR [ebx-0x28edba34]
  4067af:	jp     0x406742
  4067b1:	int3   
  4067b2:	mov    DWORD PTR [ebp+0x4831d055],eax
  4067b8:	scas   al,BYTE PTR es:[edi]
  4067b9:	mov    ebp,DWORD PTR [edx+0x50]
  4067bc:	test   DWORD PTR [eax*4+0x4de44610],eax
  4067c3:	sbb    dl,BYTE PTR [eax-0x7c7474ab]
  4067c9:	cmp    al,0x64
  4067cb:	cmc    
  4067cc:	xchg   ecx,eax
  4067cd:	test   esp,ecx
  4067cf:	je     0x4067d2
  4067d1:	add    ecx,esp
  4067d3:	inc    DWORD PTR [ecx]
  4067d5:	adc    dl,BYTE PTR [edx]
  4067d7:	jno    0x406844
  4067d9:	test   DWORD PTR [eax],ecx
  4067db:	add    esi,DWORD PTR [ebx]
  4067dd:	out    0x9e,eax
  4067df:	jl     0x40684e
  4067e1:	add    BYTE PTR [eax],cl
  4067e3:	add    al,0x8b
  4067e5:	add    BYTE PTR [ebx-0x6ca67a20],cl
  4067eb:	xchg   esi,eax
  4067ec:	xchg   edx,eax
  4067ed:	fisttp QWORD PTR [ebx-0x13573320]
  4067f3:	pop    ss
  4067f4:	ins    DWORD PTR es:[edi],dx
  4067f5:	add    BYTE PTR [ebp+0xf],al
  4067f8:	pop    ebp
  4067f9:	add    DWORD PTR [eax],eax
  4067fb:	int3   
  4067fc:	int3   
  4067fd:	rcl    DWORD PTR [eax],1
  4067ff:	std    
  406800:	lods   eax,DWORD PTR ds:[esi]
  406801:	fisttp QWORD PTR [eax*4+0x973bf01]
  406808:	dec    sp
  40680b:	adc    eax,0x858b8b00
  406810:	push   0xffffffd5
  406812:	arpl   WORD PTR [esp+esi*2],sp
  406815:	add    bh,bh
  406817:	je     0x4067e5
  406819:	inc    eax
  40681a:	call   FWORD PTR [edi*1-0x7433ffaa]
  406821:	int3   
  406822:	add    BYTE PTR [ecx],al
  406824:	add    DWORD PTR [esi+eiz*2],ebx
  406827:	mov    ds:0x4007a,al
  40682c:	adc    al,dl
  40682e:	ins    BYTE PTR es:[edi],dx
  40682f:	mov    ds:0xcc000036,al
  406834:	add    DWORD PTR [ebp-0x75],0x1
  406838:	call   0xce12f98a
  40683d:	add    DWORD PTR [ebp+esi*2+0x0],esi
  406841:	(bad)
  406844:	data16 je 0x406848
  406847:	mov    ecx,DWORD PTR [ecx+0xcc]
  40684d:	sbb    al,0xc5
  40684f:	pushf  
  406850:	inc    ebx
  406851:	mov    ecx,esp
  406853:	dec    ebp
  406854:	mov    ebp,DWORD PTR [esp+edi*2]
  406857:	push   ss
  406858:	lea    eax,[ebx]
  40685a:	add    BYTE PTR [ecx],al
  40685c:	int3   
  40685d:	add    ch,bl
  40685f:	push   esi
  406860:	adc    eax,0xeb9c8fd5
  406865:	shl    al,0x8d
  406868:	inc    esi
  406869:	cmp    BYTE PTR [edx],dl
  40686b:	pop    ds
  40686c:	cdq    
  40686d:	or     BYTE PTR [ecx],al
  40686f:	int3   
  406870:	inc    DWORD PTR [eax]
  406872:	add    BYTE PTR [ecx-0x3d4df400],cl
  406878:	sar    bh,1
  40687a:	mov    DWORD PTR [ecx-0x46ef3600],ecx
  406880:	lods   eax,DWORD PTR ds:[esi]
  406881:	mov    eax,DWORD PTR [eax]
  406883:	int3   
  406884:	or     BYTE PTR [eax],al
  406886:	mov    DWORD PTR [eax],eax
  406888:	int3   
  406889:	cdq    
  40688a:	les    edx,FWORD PTR [esi+0x458b59]
  406890:	add    ebp,eax
  406892:	clc    
  406893:	push   esp
  406894:	(bad)  
  406895:	inc    DWORD PTR [eax]
  406897:	inc    ebp
  406898:	add    al,0x0
  40689a:	int3   
  40689b:	add    ah,cl
  40689d:	test   al,0xf1
  40689f:	xor    cl,BYTE PTR [ebp+0x1851515]
  4068a5:	(bad)  
  4068a6:	dec    esp
  4068a7:	imul   eax,eax,0x8b0000ff
  4068ad:	int3   
  4068ae:	add    BYTE PTR [ecx+0x8feb500],cl
  4068b4:	(bad)  
  4068b5:	mov    ecx,DWORD PTR [eax+eax*1]
  4068b8:	jne    0x406917
  4068ba:	shl    DWORD PTR [ebp+0x1eb8bb2],1
  4068c0:	add    eax,0x0
  4068c3:	add    edi,edi
  4068c5:	mov    edi,0x4daf0d02
  4068ca:	push   0xffffff8b
  4068cc:	int3   
  4068cd:	in     al,dx
  4068ce:	rcl    DWORD PTR [edx+0x808cca4],cl
  4068d4:	add    DWORD PTR [eax-0x75],edx
  4068d7:	add    BYTE PTR [eax],al
  4068d9:	dec    ebx
  4068da:	push   edx
  4068db:	or     esi,DWORD PTR [edx+0x45ff]
  4068e1:	jnp    0x406928
  4068e3:	mov    DWORD PTR [edi+ecx*1-0x74740001],ebp
  4068ea:	xor    DWORD PTR [ebx],0x0
  4068ed:	gs call 0xff4c8193
  4068f3:	add    ah,cl
  4068f5:	xlat   BYTE PTR ds:[ebx]
  4068f6:	xchg   esi,eax
  4068f7:	pop    edx
  4068f8:	out    0xcc,al
  4068fa:	or     BYTE PTR [ebx-0x340000],cl
  406900:	add    DWORD PTR [esi+ecx*1+0x3e],ebx
  406904:	mov    ecx,0x89104d
  406909:	js     0x4068bd
  40690b:	mov    al,ds:0x74cc32
  406910:	or     al,0x89
  406912:	add    BYTE PTR [ecx],al
  406914:	add    DWORD PTR [ebp+0x27],eax
  406917:	mov    dh,0xbb
  406919:	mov    edi,edi
  40691b:	add    ah,cl
  40691d:	pop    ebx
  40691e:	or     eax,edx
  406920:	and    DWORD PTR ds:0x15100400,edx
  406926:	inc    DWORD PTR [eax]
  406928:	mov    eax,ebx
  40692a:	xchg   BYTE PTR [edi+edi*4],bl
  40692d:	adc    bl,ch
  40692f:	loopne 0x4068fd
  406931:	pop    ebp
  406932:	out    0x7c,eax
  406934:	in     al,dx
  406935:	(bad)  
  406936:	add    ah,cl
  406938:	push   ebp
  406939:	push   ebp
  40693a:	xor    ecx,DWORD PTR [ebx-0x5d978bff]
  406940:	cmp    eax,0xcc83f8
  406945:	or     al,bl
  406947:	fdiv   QWORD PTR ds:[esi-0x75]
  40694b:	or     BYTE PTR [ebx+0xf8374],al
  406951:	mov    ebp,DWORD PTR [ebp+0x6812e2]
  406957:	add    BYTE PTR [ebx-0x2fcd96ff],cl
  40695d:	inc    esi
  40695e:	mov    edx,DWORD PTR [ebp-0x39]
  406961:	jne    0x4068e6
  406963:	adc    BYTE PTR [eax],al
  406965:	jne    0x4068fd
  406967:	xor    eax,DWORD PTR [esi]
  406969:	mov    es,WORD PTR [eax]
  40696b:	push   0xffffffff
  40696d:	add    BYTE PTR [edx+0x5221d7],cl
  406973:	add    BYTE PTR [eax],al
  406975:	int3   
  406976:	add    al,ah
  406978:	pop    ebp
  406979:	jmp    FWORD PTR [ecx-0x6]
  40697c:	test   BYTE PTR [edx+0x8],0x8d
  406980:	int3   
  406981:	dec    ebp
  406982:	dec    edi
  406983:	mov    edx,0xff00ca40
  406988:	add    BYTE PTR [eax],al
  40698a:	add    BYTE PTR [ebp+0x0],dh
  40698d:	adc    eax,0xd24b833f
  406992:	fst    QWORD PTR [eax-0x34]
  406995:	push   esi
  406996:	dec    ebp
  406997:	lods   eax,DWORD PTR ds:[esi]
  406998:	(bad)  
  406999:	test   BYTE PTR [ecx],al
  40699b:	mov    ecx,DWORD PTR [ecx+0x467500cc]
  4069a1:	mov    ebx,DWORD PTR [edi]
  4069a3:	xchg   ebx,eax
  4069a4:	add    cl,BYTE PTR [edi+0x890f00]
  4069aa:	inc    esi
  4069ab:	pop    ebp
  4069ac:	or     al,BYTE PTR [edi+0x0]
  4069af:	or     al,0x0
  4069b1:	add    DWORD PTR [eax],eax
  4069b3:	mov    DWORD PTR [eax],eax
  4069b5:	add    eax,eax
  4069b7:	xchg   edi,eax
  4069b8:	adc    eax,0xdd56ccdf
  4069bd:	lea    esp,[ebp-0x40]
  4069c0:	fld    QWORD PTR [edi-0x1]
  4069c3:	add    BYTE PTR [eax],al
  4069c5:	inc    esi
  4069c6:	(bad)  
  4069c7:	call   DWORD PTR [eax]
  4069c9:	add    BYTE PTR [ecx-0x10],ah
  4069cc:	in     al,dx
  4069cd:	ror    DWORD PTR [eax],cl
  4069cf:	add    BYTE PTR ds:0xfcea7e00,dl
  4069d5:	rol    BYTE PTR [eax],cl
  4069d7:	add    DWORD PTR [edi],ecx
  4069d9:	shl    BYTE PTR [ebx],0x0
  4069dc:	inc    ebp
  4069dd:	add    BYTE PTR [ecx],cl
  4069df:	jmp    0x4069c5
  4069e1:	sahf   
  4069e2:	add    esp,ecx
  4069e4:	adc    eax,0xe7cd274d
  4069e9:	push   ss
  4069ea:	fld    QWORD PTR [eax]
  4069ec:	mov    eax,DWORD PTR [eax]
  4069ee:	bswap  esp
  4069f0:	pop    ebp
  4069f1:	pop    ebp
  4069f2:	push   edi
  4069f3:	push   0xffffffd8
  4069f5:	mov    BYTE PTR [eax],0x0
  4069f8:	test   ebx,ebp
  4069fa:	jns    0x406a67
  4069fc:	mov    ecx,0xc700dd
  406a01:	add    BYTE PTR [eax],al
  406a03:	add    esp,ecx
  406a05:	add    al,0x7b
  406a07:	in     al,dx
  406a08:	ins    BYTE PTR es:[edi],dx
  406a09:	mov    edx,0x75cc00
  406a0e:	xchg   edi,eax
  406a0f:	out    0x4e,al
  406a11:	mov    DWORD PTR [eax],0xffc08b
  406a17:	mov    edx,DWORD PTR [esi-0x7b]
  406a1a:	pop    ecx
  406a1b:	stos   DWORD PTR es:[edi],eax
  406a1c:	in     al,dx
  406a1d:	lahf   
  406a1e:	call   DWORD PTR [esi-0x40]
  406a21:	add    DWORD PTR [edx+0x56],ebx
  406a24:	rol    BYTE PTR [ebx-0x74ff33f1],0xeb
  406a2b:	loopne 0x406a2d
  406a2d:	add    bl,ah
  406a2f:	fs sub esi,ecx
  406a32:	add    BYTE PTR [ecx+0x5fb4ccc0],cl
  406a38:	push   cs
  406a39:	jmp    0x8b:0x8b8b0000
  406a40:	fucomp st(0)
  406a42:	cmp    eax,0x446eb5f
  406a47:	add    BYTE PTR [ecx+0x25ebfc00],cl
  406a4d:	jg     0x406a37
  406a4f:	int3   
  406a50:	inc    esi
  406a51:	int3   
  406a52:	inc    DWORD PTR [ecx]
  406a54:	add    bh,bh
  406a56:	enter  0xdba1,0xa5
  406a5a:	je     0x406a23
  406a5c:	inc    ebp
  406a5d:	int3   
  406a5e:	shr    BYTE PTR [ecx],1
  406a60:	xchg   edx,eax
  406a61:	repz loopne 0x406a63
  406a64:	int3   
  406a65:	pop    ebp
  406a66:	mov    eax,DWORD PTR [eax]
  406a68:	add    DWORD PTR [eax],eax
  406a6a:	push   esi
  406a6b:	dec    esp
  406a6c:	out    dx,al
  406a6d:	push   cs
  406a6e:	je     0x406ae4
  406a70:	add    BYTE PTR [eax],al
  406a72:	push   edx
  406a73:	cmp    al,0x87
  406a75:	pop    ss
  406a76:	(bad)  [edx-0x34]
  406a79:	mov    ecx,DWORD PTR [ebp-0x3aeff340]
  406a7f:	push   ebx
  406a80:	add    esp,DWORD PTR [eax]
  406a82:	je     0x406aee
  406a84:	add    BYTE PTR [eax],al
  406a86:	or     edx,DWORD PTR [edx+0x189c770]
  406a8c:	mov    ecx,DWORD PTR [ebx+0x4500ff74]
  406a92:	fimul  DWORD PTR [esp+eiz*8+0x5c]
  406a96:	mov    ebp,esp
  406a98:	mov    ecx,DWORD PTR [edx+eiz*8]
  406a9b:	cmp    edi,DWORD PTR [eax+0x8b0078]
  406aa1:	sar    bh,0x89
  406aa4:	or     al,0x46
  406aa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406aa7:	imul   esp,ebp,0xccff748e
  406aad:	adc    bl,bl
  406aaf:	mov    dl,0x2b
  406ab1:	ror    BYTE PTR [ebx-0x763372fc],1
  406ab7:	add    BYTE PTR [eax],al
  406ab9:	mov    ecx,DWORD PTR [esi-0x74034ca5]
  406abf:	int3   
  406ac0:	add    BYTE PTR [ecx*8+0x45d0688e],cl
  406ac7:	bswap  esp
  406ac9:	mov    ecx,DWORD PTR [ebp-0x39]
  406acc:	dec    DWORD PTR [edi]
  406ace:	int    0xb8
  406ad0:	sub    eax,0x100cc71
  406ad5:	add    BYTE PTR [ebx+esi*8],bl
  406ad8:	(bad)  
  406ad9:	loope  0x406adc
  406adb:	add    BYTE PTR [ebp+0xc],al
  406ade:	loopne 0x406ae0
  406ae0:	add    BYTE PTR [ebx-0x3f55aaab],cl
  406ae6:	rdpmc  
  406ae8:	int3   
  406ae9:	int3   
  406aea:	into   
  406aeb:	sar    eax,cl
  406aed:	adc    eax,DWORD PTR [ebp+0x0]
  406af0:	int3   
  406af1:	or     BYTE PTR [ebx+0x4bff8bdd],cl
  406af7:	or     BYTE PTR [edi+ebp*2-0x75],cl
  406afb:	jne    0x406afc
  406afd:	adc    BYTE PTR [ebx],ch
  406aff:	mov    gs,WORD PTR [edi]
  406b01:	mov    edx,0x745d45dd
  406b06:	add    BYTE PTR [eax],al
  406b08:	je     0x406b12
  406b0a:	or     eax,0xf4ba08
  406b0f:	add    al,al
  406b11:	int3   
  406b12:	stos   DWORD PTR es:[edi],eax
  406b13:	clc    
  406b14:	add    esi,edx
  406b16:	push   0x15
  406b18:	int3   
  406b19:	inc    ebp
  406b1a:	mov    ecx,DWORD PTR [ebp-0xb3fff0]
  406b20:	jae    0x406b21
  406b22:	dec    ebp
  406b23:	int3   
  406b24:	add    al,ah
  406b26:	adc    al,0x37
  406b28:	jne    0x406b98
  406b2a:	add    ah,ch
  406b2c:	add    BYTE PTR [ecx*4+0xb748500],cl
  406b33:	test   eax,0xff0090d5
  406b38:	test   DWORD PTR [ebp-0x7a],ebx
  406b3b:	mov    esi,0xc796b7
  406b40:	mov    DWORD PTR [ebp-0x7d],eax
  406b43:	int3   
  406b44:	call   DWORD PTR ds:0x53f37c63
  406b4a:	mov    ecx,DWORD PTR [ebx-0x1ba33320]
  406b50:	leave  
  406b51:	push   eax
  406b52:	add    BYTE PTR [ecx-0x743322f1],cl
  406b58:	add    BYTE PTR [ebx-0x423d938a],cl
  406b5e:	mov    DWORD PTR [eax],eax
  406b60:	or     esp,0x79
  406b63:	push   ebp
  406b64:	pop    edi
  406b65:	fs add al,al
  406b68:	add    DWORD PTR [ecx+0xc8d00cc],ecx
  406b6e:	pop    edi
  406b6f:	mov    esi,ebx
  406b71:	jne    0x406b72
  406b73:	fisttp QWORD PTR [eax]
  406b75:	mov    esp,DWORD PTR [ebx+esi*2+0x4cc9ffb]
  406b7c:	mov    DWORD PTR [edx+0x1],ebp
  406b7f:	in     al,dx
  406b80:	(bad)  
  406b81:	(bad)  
  406b82:	mov    eax,0x7ba5a8
  406b87:	mov    DWORD PTR [eax],eax
  406b89:	add    al,0xc6
  406b8b:	jbe    0x406bb9
  406b8d:	fld    DWORD PTR [ebx+0x450008]
  406b93:	int3   
  406b94:	add    BYTE PTR [eax],cl
  406b96:	(bad)  
  406b97:	aad    0x88
  406b99:	mov    dh,0x4
  406b9b:	add    DWORD PTR [eax],eax
  406b9d:	shr    BYTE PTR [esi+0x8d40ca],0x0
  406ba4:	int3   
  406ba5:	add    ah,cl
  406ba7:	je     0x406b34
  406ba9:	je     0x406b80
  406bab:	faddp  st(0),st
  406bad:	leave  
  406bae:	mov    ecx,DWORD PTR [ebx-0x23d43301]
  406bb4:	gs add ah,cl
  406bb7:	or     BYTE PTR [eax],al
  406bb9:	dec    DWORD PTR [ebp+0x52564501]
  406bbf:	pop    edx
  406bc0:	xor    eax,0x8005027
  406bc5:	int3   
  406bc6:	stc    
  406bc7:	push   cs
  406bc8:	sub    DWORD PTR [edi-0x74f30100],ecx
  406bce:	or     al,0x8b
  406bd0:	inc    DWORD PTR [eax]
  406bd2:	add    eax,ebx
  406bd4:	push   ebp
  406bd5:	jns    0x406b62
  406bd7:	or     BYTE PTR [eax],dl
  406bd9:	add    BYTE PTR ds:0x1101504,al
  406bdf:	inc    edi
  406be1:	int3   
  406be2:	int3   
  406be3:	inc    DWORD PTR [eax]
  406be5:	add    bh,al
  406be7:	cmp    eax,0x8b7509cc
  406bec:	int3   
  406bed:	push   ebp
  406bee:	aam    0xe4
  406bf0:	ins    BYTE PTR es:[edi],dx
  406bf1:	push   0xffffff8b
  406bf3:	add    DWORD PTR [eax],0x0
  406bf6:	add    ah,cl
  406bf8:	add    BYTE PTR [ebp-0x5a],dh
  406bfb:	pop    eax
  406bfc:	lods   al,BYTE PTR ds:[esi]
  406bfd:	pop    esi
  406bfe:	je     0x406be8
  406c00:	add    BYTE PTR [edx+0x64],ch
  406c03:	push   edx
  406c04:	enter  0xe3,0xc
  406c08:	int3   
  406c09:	mov    DWORD PTR [eax],0x14c08500
  406c0f:	sbb    BYTE PTR [eax-0x55],ch
  406c12:	xor    eax,DWORD PTR [eax]
  406c14:	add    DWORD PTR [ebx],esi
  406c16:	adc    eax,0x85df8c57
  406c1b:	add    BYTE PTR [ecx-0x763333aa],cl
  406c21:	add    al,0x31
  406c23:	fsub   DWORD PTR [ecx-0x17ff335f]
  406c29:	push   ebp
  406c2a:	xchg   ebp,eax
  406c2b:	inc    ebx
  406c2c:	xor    al,BYTE PTR [eax+ebp*8+0x74001001]
  406c33:	add    BYTE PTR [ebx-0x270f500],cl
  406c39:	pop    es
  406c3a:	mov    eax,DWORD PTR [eax]
  406c3c:	add    BYTE PTR [ebx],al
  406c3e:	loope  0x406bdd
  406c40:	xlat   BYTE PTR ds:[ebx]
  406c41:	out    dx,eax
  406c42:	call   0x85f646
  406c47:	rol    BYTE PTR [ebp-0x1],0x15
  406c4b:	fwait
  406c4c:	xchg   ebx,eax
  406c4d:	sub    eax,0x4cc04c7
  406c52:	out    dx,al
  406c53:	xchg   BYTE PTR [eax+0x74cc0068],cl
  406c59:	rdpmc  
  406c5b:	add    BYTE PTR [ebx-0x5a62fff8],cl
  406c61:	or     esp,0x0
  406c64:	mov    eax,DWORD PTR [ebp-0x20faf991]
  406c6a:	mov    esi,DWORD PTR [eax+ecx*1+0x0]
  406c6e:	add    DWORD PTR [ebp-0x1],ebx
  406c71:	cmp    DWORD PTR [edx+0x32],0x5d
  406c75:	or     cl,ah
  406c77:	jmp    0x406c02
  406c79:	int3   
  406c7a:	jo     0x406ce8
  406c7c:	and    ecx,DWORD PTR [eax]
  406c7e:	inc    DWORD PTR [eax]
  406c80:	int3   
  406c81:	mov    edi,edi
  406c83:	test   edi,edi
  406c85:	int3   
  406c86:	aad    0x37
  406c88:	and    al,0x13
  406c8a:	add    DWORD PTR [eax],eax
  406c8c:	mov    eax,DWORD PTR [ebx]
  406c8e:	or     DWORD PTR [edi-0x747426fd],eax
  406c94:	int3   
  406c95:	jmp    0x406d0c
  406c97:	int3   
  406c98:	mov    esp,ecx
  406c9a:	xchg   DWORD PTR [eax-0x3320e1],esi
  406ca0:	add    BYTE PTR [edi],cl
  406ca2:	aad    0x89
  406ca4:	daa    
  406ca5:	sub    esi,DWORD PTR [esp+ecx*8+0x0]
  406ca9:	int3   
  406caa:	int3   
  406cab:	mov    ecx,esp
  406cad:	call   0x4742731b
  406cb2:	add    BYTE PTR [ebx-0x4482f800],cl
  406cb8:	mov    ds:0x3ffcc87,al
  406cbd:	add    BYTE PTR [ebp-0x75],cl
  406cc0:	fisttp QWORD PTR [ebx+0x680caa58]
  406cc6:	add    BYTE PTR [ecx+0x1a4ec08b],cl
  406ccc:	push   esp
  406ccd:	jp     0x406ccf
  406ccf:	push   eax
  406cd0:	add    al,0x83
  406cd2:	loopne 0x406ca0
  406cd4:	mov    eax,DWORD PTR [ebp-0x5]
  406cd7:	pop    edx
  406cd8:	push   ss
  406cd9:	cmp    al,0x0
  406cdb:	inc    DWORD PTR [eax]
  406cdd:	add    bl,al
  406cdf:	xor    al,0xee
  406ce1:	out    dx,al
  406ce2:	popa   
  406ce3:	dec    esp
  406ce5:	mov    DWORD PTR [eax],eax
  406ce7:	lahf   
  406ce8:	push   0x8b551f62
  406ced:	jmp    0x406c7a
  406cef:	pcmpeqb mm1,QWORD PTR [ebx-0x72a70e00]
  406cf6:	inc    ebx
  406cf7:	add    BYTE PTR [eax],al
  406cf9:	or     esp,0xffffff8b
  406cfc:	inc    esi
  406cfd:	push   ecx
  406cfe:	pusha  
  406cff:	inc    esi
  406d00:	add    bh,al
  406d02:	mov    eax,DWORD PTR [ecx]
  406d04:	inc    DWORD PTR [eax]
  406d06:	add    bh,bh
  406d08:	bnd jp 0x406cf1
  406d0b:	jne    0x406d62
  406d0d:	inc    esi
  406d0e:	add    BYTE PTR [ecx+0xc7f1613],al
  406d14:	add    bh,bh
  406d16:	int3   
  406d17:	mov    esi,DWORD PTR [edi+edi*8-0x75]
  406d1b:	jp     0x406d9a
  406d1d:	jmp    0x406ce1
  406d1f:	add    BYTE PTR [ebx],al
  406d21:	add    BYTE PTR ds:0x53af42f1,dl
  406d27:	mov    eax,DWORD PTR [ebp-0x75]
  406d2a:	mov    DWORD PTR [ebx],esi
  406d2c:	add    BYTE PTR [ecx],al
  406d2e:	je     0x406d3f
  406d30:	and    ah,ch
  406d32:	sar    edi,0x0
  406d35:	add    BYTE PTR [ebp+0x4e25347f],al
  406d3b:	loopne 0x406d49
  406d3d:	push   DWORD PTR [ecx+ecx*4-0x75]
  406d41:	add    esp,ecx
  406d43:	scas   eax,DWORD PTR es:[edi]
  406d44:	ret    
  406d45:	mov    ch,0xa3
  406d47:	add    BYTE PTR [eax+0x1],dl
  406d4a:	int3   
  406d4b:	test   eax,0x157dc95f
  406d50:	mov    eax,edi
  406d52:	add    BYTE PTR [ebx-0x5b74ffbb],cl
  406d58:	inc    ebx
  406d59:	pushf  
  406d5a:	pop    ds
  406d5b:	adc    ch,bl
  406d5d:	fld    QWORD PTR [esi+ebx*8]
  406d60:	xchg   ah,bl
  406d62:	sub    ecx,DWORD PTR [ebx+0x898500]
  406d68:	int3   
  406d69:	int3   
  406d6a:	(bad)  [ebx]
  406d6c:	adc    cl,BYTE PTR [ecx-0x4b]
  406d6f:	add    DWORD PTR [eax],edx
  406d71:	inc    ebp
  406d72:	call   FWORD PTR [eax]
  406d74:	sahf   
  406d75:	clc    
  406d76:	inc    ebp
  406d77:	add    DWORD PTR [ebx+0x8000003],ecx
  406d7d:	add    BYTE PTR [edi*8-0x132adf05],al
  406d84:	add    DWORD PTR [eax],eax
  406d86:	add    BYTE PTR [edi+0x15473cc5],ch
  406d8c:	add    ah,cl
  406d8e:	adc    BYTE PTR [ebx],al
  406d90:	ror    BYTE PTR [ecx+0x5cda55ff],0x71
  406d97:	mov    DWORD PTR [ecx],eax
  406d99:	inc    ebp
  406d9a:	(bad)  
  406d9b:	das    
  406d9c:	push   ebx
  406d9d:	dec    ecx
  406d9e:	scas   al,BYTE PTR es:[edi]
  406d9f:	add    BYTE PTR [ebp-0x33ffff34],al
  406da5:	add    al,0x8b
  406da7:	push   cs
  406da8:	(bad)  
  406da9:	pusha  
  406daa:	add    edi,edi
  406dac:	or     al,0x8
  406dae:	push   0x32
  406db0:	aad    0x88
  406db2:	pop    es
  406db3:	mov    eax,DWORD PTR [eax]
  406db5:	dec    DWORD PTR [ebx-0x33ba0073]
  406dbb:	mov    al,0xcd
  406dbd:	icebp  
  406dbe:	dec    edi
  406dbf:	add    DWORD PTR [eax],eax
  406dc1:	push   eax
  406dc2:	mov    edi,DWORD PTR [ebx]
  406dc4:	jge    0x406d4f
  406dc6:	daa    
  406dc7:	add    DWORD PTR [eax],eax
  406dc9:	mov    eax,DWORD PTR [ecx]
  406dcb:	mov    ecx,esp
  406dcd:	inc    DWORD PTR [eax]
  406dcf:	retf   
  406dd0:	mov    ebp,0x8b0c8349
  406dd5:	int3   
  406dd6:	add    BYTE PTR [ebx+0x3bd351],dh
  406ddc:	mov    ebp,ebx
  406dde:	je     0x406ddf
  406de0:	add    BYTE PTR [eax],al
  406de2:	add    BYTE PTR [esi-0x2f],bl
  406de5:	mov    ch,0x7
  406de7:	add    BYTE PTR [eax],al
  406de9:	mov    esi,DWORD PTR [ebp+0x8]
  406dec:	(bad)  
  406ded:	push   edx
  406dee:	pop    ds
  406def:	mov    DWORD PTR [ebx+0x500000],ecx
  406df5:	add    BYTE PTR [ecx],al
  406df7:	add    BYTE PTR [eax+0x42],0x8a
  406dfb:	lea    esi,[ebp-0x75]
  406dfe:	add    DWORD PTR [eax+0x75c46],ebx
  406e04:	inc    esi
  406e05:	mov    DWORD PTR [ebx+0x84de88b],ecx
  406e0b:	into   
  406e0c:	inc    ebp
  406e0d:	push   ds
  406e0e:	mov    bh,0x1
  406e10:	add    bh,bh
  406e12:	mov    eax,DWORD PTR ds:0x4fbcd0
  406e18:	jmp    0x406e19
  406e1a:	inc    DWORD PTR [eax]
  406e1c:	inc    ebp
  406e1d:	mov    ecx,DWORD PTR [ecx+eiz*4]
  406e20:	dec    esp
  406e21:	stc    
  406e22:	addr16 jmp 0x406e24
  406e25:	in     al,dx
  406e26:	inc    ebp
  406e27:	fidivr DWORD PTR [ebx]
  406e29:	lock xlat BYTE PTR ds:[ebx]
  406e2b:	adc    BYTE PTR [edi],cl
  406e2d:	test   DWORD PTR [ebp+0x74c0e845],eax
  406e33:	push   ebp
  406e34:	pop    edi
  406e35:	and    ecx,DWORD PTR [edi-0x1]
  406e38:	inc    ebp
  406e39:	mov    edx,DWORD PTR [ebp+0x65]
  406e3c:	jo     0x406de7
  406e3e:	xchg   ebp,eax
  406e3f:	inc    DWORD PTR [eax]
  406e41:	int3   
  406e42:	(bad)  
  406e43:	jne    0x406e45
  406e45:	mov    edi,edi
  406e47:	shr    DWORD PTR [edi+0x10ffb998],cl
  406e4d:	psubsb mm3,QWORD PTR [edi]
  406e50:	mov    ebx,0xc0cc47fe
  406e55:	inc    DWORD PTR [eax]
  406e57:	add    BYTE PTR [ebx],al
  406e59:	add    BYTE PTR [eax],al
  406e5b:	cmp    ah,al
  406e5d:	add    eax,0x7401002d
  406e62:	pop    ebp
  406e63:	cli    
  406e64:	jb     0x406e54
  406e66:	test   DWORD PTR [eax-0x1],edx
  406e69:	mov    eax,DWORD PTR [eax]
  406e6b:	int3   
  406e6c:	or     BYTE PTR [eax],cl
  406e6e:	or     BYTE PTR [edi-0x4c],ah
  406e71:	xor    BYTE PTR [eax-0x33eaf7b3],cl
  406e77:	bound  ebx,QWORD PTR [ebp-0x8bd08f]
  406e7d:	add    ecx,DWORD PTR [ebx+0x748bcccc]
  406e83:	dec    ebp
  406e84:	xchg   edx,eax
  406e85:	or     DWORD PTR [esi],ebp
  406e87:	dec    DWORD PTR [ecx-0x272ff100]
  406e8d:	dec    edi
  406e8e:	xchg   ebp,eax
  406e8f:	adc    ah,cl
  406e91:	add    BYTE PTR [eax],cl
  406e93:	lea    eax,[eax]
  406e95:	add    al,ch
  406e97:	cmp    esi,DWORD PTR [ebp-0x3f7478c0]
  406e9d:	push   0x75
  406e9f:	cld    
  406ea0:	gs (bad) 
  406ea2:	(bad)  
  406ea3:	add    BYTE PTR [eax],al
  406ea5:	adc    ah,cl
  406ea7:	(bad)  
  406ea8:	push   0xffffffcc
  406eaa:	add    BYTE PTR [esi+0x61],cl
  406ead:	mov    BYTE PTR [ebx-0x75],ah
  406eb0:	mov    eax,DWORD PTR [eax]
  406eb2:	add    BYTE PTR [edi+0xc532f3],cl
  406eb8:	push   esi
  406eb9:	add    BYTE PTR [ebp-0x1],dh
  406ebc:	or     al,0x45
  406ebe:	(bad)  
  406ebf:	jbe    0x406ed1
  406ec1:	xchg   edx,eax
  406ec2:	inc    esp
  406ec3:	add    BYTE PTR [eax],al
  406ec5:	add    ah,cl
  406ec7:	add    cl,BYTE PTR [ecx+0xb18b]
  406ecd:	add    BYTE PTR [eax],al
  406ecf:	or     ah,cl
  406ed1:	add    al,al
  406ed3:	or     al,0xd7
  406ed5:	push   edx
  406ed6:	pushf  
  406ed7:	mov    ecx,DWORD PTR [ecx-0x3b4b337d]
  406edd:	mov    esp,0x8508e7
  406ee2:	mov    ebp,esp
  406ee4:	mov    DWORD PTR [eax],eax
  406ee6:	cvttps2pi mm4,QWORD PTR [ebp+ecx*8-0x47]
  406eeb:	add    BYTE PTR [ebp+0x8],bl
  406eee:	push   ebp
  406eef:	dec    ebp
  406ef0:	adc    BYTE PTR [esi-0x1700ff19],0xe0
  406ef7:	jmp    0x406f01
  406ef9:	cmp    edi,0x9
  406efc:	in     al,dx
  406efd:	out    0xd4,eax
  406eff:	add    BYTE PTR [ebp-0x20],dl
  406f02:	(bad)  
  406f03:	fldcw  WORD PTR [ecx+0xccd4f0]
  406f09:	add    BYTE PTR [eax],al
  406f0b:	add    BYTE PTR [esi+0x8],al
  406f0e:	push   0xffffff87
  406f10:	mov    ds:0x107010,eax
  406f15:	add    DWORD PTR [eax+0x35],edx
  406f18:	cdq    
  406f19:	(bad)  
  406f1a:	ror    BYTE PTR [esp+esi*2],cl
  406f1d:	int3   
  406f1e:	add    ah,cl
  406f20:	int3   
  406f21:	(bad)  
  406f23:	jecxz  0x406eb5
  406f25:	cmp    ecx,DWORD PTR [esi]
  406f27:	mov    DWORD PTR [ebx-0x14ef7434],ecx
  406f2d:	jg     0x406f96
  406f2f:	adc    DWORD PTR [esi+0xc],0xffffffec
  406f33:	add    BYTE PTR [ecx+0x58f50033],cl
  406f39:	call   0xe800:0xccea
  406f40:	(bad)
  406f44:	add    ah,cl
  406f46:	add    al,0x50
  406f48:	inc    ebp
  406f49:	add    BYTE PTR [ebx-0x27b56f25],cl
  406f4f:	call   DWORD PTR [eax]
  406f51:	int3   
  406f52:	add    BYTE PTR [ecx-0x29],dh
  406f55:	xor    bl,BYTE PTR [eax+0x8]
  406f58:	loopne 0x406f5b
  406f5a:	dec    esp
  406f5c:	mov    eax,DWORD PTR [eax]
  406f5e:	inc    ebp
  406f5f:	test   al,0x72
  406f61:	repnz cmp bh,0xff
  406f65:	add    ah,cl
  406f67:	xor    ecx,DWORD PTR [ecx+0x63]
  406f6a:	loope  0x406fb1
  406f6c:	add    DWORD PTR [eax],0x0
  406f6f:	or     BYTE PTR [eax],al
  406f71:	int3   
  406f72:	add    BYTE PTR [edi-0x44],bl
  406f75:	dec    ebx
  406f76:	loopne 0x406f03
  406f78:	inc    esi
  406f79:	fisttp QWORD PTR [ebx+0x4a536bda]
  406f7f:	add    BYTE PTR [eax],al
  406f81:	pop    ebp
  406f82:	mov    ecx,DWORD PTR [eax]
  406f84:	je     0x406f86
  406f86:	add    BYTE PTR [edi-0x3f5edcb6],ch
  406f8c:	push   eax
  406f8d:	in     al,dx
  406f8e:	mov    edi,DWORD PTR [eax]
  406f90:	fcom   st(1)
  406f92:	push   0xffffff8b
  406f94:	add    BYTE PTR [eax],al
  406f96:	call   0xcc4f779b
  406f9b:	xchg   edx,eax
  406f9c:	sbb    al,0x97
  406f9e:	out    0xcc,al
  406fa0:	add    BYTE PTR [eax+eax*1],al
  406fa3:	outs   dx,BYTE PTR ds:[esi]
  406fa4:	inc    ecx
  406fa5:	ds mov cl,0x8b
  406fa8:	xor    ecx,DWORD PTR [ebx-0x7495f301]
  406fae:	test   DWORD PTR [edx*4+0xcc7169],ecx
  406fb5:	add    BYTE PTR [eax+0x0],dl
  406fb8:	mov    ?,WORD PTR [eax+0xff7456]
  406fbe:	add    ebp,ebx
  406fc0:	je     0x406fc2
  406fc2:	inc    DWORD PTR [eax+eiz*4-0x3376b500]
  406fc9:	int3   
  406fca:	jne    0x407047
  406fcc:	fcomp  QWORD PTR [ebx]
  406fce:	mov    ch,al
  406fd0:	add    DWORD PTR [eax],edx
  406fd2:	pop    ebp
  406fd3:	inc    ebp
  406fd4:	dec    ebp
  406fd5:	pcmpeqw mm0,QWORD PTR [ebp+0x4d]
  406fd9:	xor    BYTE PTR [ebp-0x34],dl
  406fdc:	add    BYTE PTR [eax],al
  406fde:	push   eax
  406fdf:	inc    eax
  406fe1:	cmp    cl,BYTE PTR [edi+0x8]
  406fe4:	add    BYTE PTR [edx+ebp*2],cl
  406fe7:	or     BYTE PTR [ebx-0x5136ff00],al
  406fed:	outs   dx,DWORD PTR ds:[esi]
  406fee:	les    esi,FWORD PTR [ebx+ecx*4+0x15]
  406ff2:	add    ah,bh
  406ff4:	cmp    ch,BYTE PTR [esi-0x74fe95ab]
  406ffa:	int3   
  406ffb:	mov    esi,DWORD PTR [ebx]
  406ffd:	mov    eax,DWORD PTR [ebx-0x6f9b4f4b]
  407003:	inc    ebp
  407004:	je     0x406f8f
  407006:	add    bl,al
  407008:	xor    bh,ah
  40700a:	pop    edi
  40700b:	stos   DWORD PTR es:[edi],eax
  40700c:	add    BYTE PTR [esp+ecx*8+0x0],dh
  407010:	out    0xdd,eax
  407012:	(bad)  
  407013:	arpl   WORD PTR [ebp-0x34],ax
  407016:	or     ah,cl
  407018:	jne    0x406fa5
  40701a:	add    BYTE PTR [ebp+0x30],al
  40701d:	pusha  
  40701e:	push   cs
  40701f:	dec    esi
  407020:	add    esp,ecx
  407022:	dec    DWORD PTR [eax]
  407024:	cld    
  407025:	dec    ecx
  407026:	pusha  
  407027:	and    ecx,DWORD PTR [edi]
  407029:	add    BYTE PTR [ebx+0xff4545],cl
  40702f:	je     0x407089
  407031:	sub    al,0x30
  407033:	inc    eax
  407034:	call   0x3f977000
  407039:	and    esp,DWORD PTR [eax]
  40703b:	inc    esp
  40703c:	add    al,al
  40703e:	adc    BYTE PTR [eax],al
  407040:	add    ecx,DWORD PTR [ebx-0x6ec80000]
  407046:	push   ecx
  407047:	jmp    0x4070be
  407049:	je     0x407017
  40704b:	lea    ecx,[edx-0x33f84596]
  407051:	(bad)  
  407052:	int3   
  407053:	add    BYTE PTR [ecx],al
  407055:	add    BYTE PTR [ebx-0x14822834],cl
  40705b:	dec    ebp
  40705c:	call   0x21413070
  407061:	cmp    eax,0x8b560f27
  407066:	add    bl,ch
  407068:	mov    eax,DWORD PTR [ebp-0x7d]
  40706b:	push   eax
  40706c:	push   0x1d
  40706e:	and    dl,BYTE PTR [esi+0x450cff10]
  407074:	sub    esp,eax
  407076:	jne    0x40701f
  407078:	add    BYTE PTR [ebp+0x8158b45],al
  40707e:	add    BYTE PTR [ebp+0x43202e39],al
  407084:	in     al,dx
  407085:	inc    eax
  407087:	add    DWORD PTR [esi+0x5d1b5e3a],ecx
  40708d:	int3   
  40708e:	loopne 0x407090
  407090:	add    BYTE PTR [ecx+0x1a1100eb],cl
  407096:	aad    0x74
  407098:	inc    esi
  407099:	add    DWORD PTR [ebp+0x0],edx
  40709c:	into   
  40709d:	and    ecx,DWORD PTR [ebp+0x23]
  4070a0:	pop    ebp
  4070a1:	mov    eax,DWORD PTR [ebp+0x558dff56]
  4070a7:	add    BYTE PTR [edx+0x4e087aa],ch
  4070ad:	add    BYTE PTR [eax],al
  4070af:	push   ebp
  4070b0:	lods   al,BYTE PTR ds:[esi]
  4070b1:	mov    eax,ds:0x851b7e
  4070b6:	pop    ebp
  4070b7:	add    BYTE PTR [eax],al
  4070b9:	mov    edx,DWORD PTR [esi-0x75]
  4070bc:	lods   eax,DWORD PTR ss:[esi]
  4070be:	inc    eax
  4070bf:	out    0x15,al
  4070c1:	jne    0x407119
  4070c3:	add    BYTE PTR [edx],bl
  4070c5:	jo     0x40708a
  4070c7:	jns    0x4070c8
  4070c9:	dec    DWORD PTR [ebx+0x3ec0300]
  4070cf:	mov    ebx,DWORD PTR [ecx+0x3c]
  4070d2:	cmp    dl,BYTE PTR [ecx+ecx*4]
  4070d5:	adc    BYTE PTR [ebp+eax*2-0x3f],dh
  4070d9:	xor    al,0x86
  4070db:	cmp    al,bh
  4070dd:	add    ah,cl
  4070df:	push   ebp
  4070e0:	add    BYTE PTR [eax],al
  4070e2:	add    BYTE PTR [eax],al
  4070e4:	dec    esi
  4070e5:	xchg   ecx,eax
  4070e6:	cmp    BYTE PTR [eax-0x7cfef075],bl
  4070ec:	inc    esi
  4070ed:	push   ebx
  4070ee:	mov    eax,0x40195
  4070f3:	add    BYTE PTR [ebx-0x20ff1fff],cl
  4070f9:	jbe    0x4070f1
  4070fb:	and    al,BYTE PTR [eax]
  4070fd:	add    ch,bl
  4070ff:	add    BYTE PTR [edi],dh
  407101:	jge    0x407137
  407103:	cmp    DWORD PTR [ebx+0xff0300],ecx
  407109:	adc    eax,0x1e4c75cc
  40710e:	fcmovnu st,st(0)
  407110:	add    BYTE PTR [esp+ecx*8-0x7d],dh
  407114:	push   esi
  407115:	(bad)  
  407116:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407117:	and    DWORD PTR [edi],ecx
  407119:	add    bh,bh
  40711b:	or     BYTE PTR ds:0x9d10dd00,dl
  407121:	jb     0x4070ac
  407123:	add    al,0xc
  407125:	add    DWORD PTR [eax+0x8],edx
  407128:	jmp    0x8b:0xccafb164
  40712f:	xor    ecx,DWORD PTR [eax]
  407131:	(bad)  
  407132:	push   DWORD PTR [esp+edi*8+0x41]
  407136:	jl     0x4071b7
  407138:	mov    DWORD PTR [ebp-0x75],esi
  40713b:	sbb    DWORD PTR [edi+edx*1-0x33ffe751],0xffffff8d
  407143:	inc    DWORD PTR [eax]
  407145:	pop    ebp
  407146:	add    DWORD PTR [eax],eax
  407148:	and    al,0xa3
  40714a:	sbb    edx,DWORD PTR [edx-0x40]
  40714d:	add    BYTE PTR [eax],al
  40714f:	push   0x22
  407151:	cmp    eax,0xebe01f19
  407156:	dec    esp
  407158:	dec    ebp
  407159:	dec    DWORD PTR [ebx+0x172320c0]
  40715f:	xchg   edx,eax
  407160:	mov    edi,edi
  407162:	int3   
  407163:	jmp    0x4071cb
  407165:	adc    dl,dh
  407167:	or     edi,edi
  407169:	mov    ecx,esp
  40716b:	inc    ebp
  40716c:	mov    ecx,DWORD PTR [eax]
  40716e:	add    DWORD PTR [ebx-0x484260e4],ecx
  407174:	add    BYTE PTR [eax],al
  407176:	add    bh,bh
  407178:	xchg   ebp,eax
  407179:	dec    esp
  40717a:	push   esi
  40717b:	ror    ah,cl
  40717d:	int3   
  40717e:	test   DWORD PTR [ebp+0x33],eax
  407181:	mov    eax,DWORD PTR [eax]
  407183:	inc    ebp
  407184:	mov    dh,0xa8
  407186:	stos   BYTE PTR es:[edi],al
  407187:	das    
  407188:	add    BYTE PTR [ecx],al
  40718a:	pop    ebp
  40718b:	int3   
  40718c:	cmp    esp,esp
  40718e:	test   BYTE PTR [ecx+0x74],0xe8
  407192:	mov    esp,ecx
  407194:	mov    ecx,DWORD PTR [ebx-0x5dcd22f8]
  40719a:	adc    ebx,DWORD PTR [edi+0x100145]
  4071a0:	popa   
  4071a1:	xor    BYTE PTR [ebx],0x83
  4071a4:	push   eax
  4071a5:	or     BYTE PTR [ecx],al
  4071a7:	add    BYTE PTR [ebp-0x72f73301],al
  4071ad:	mov    al,0x46
  4071af:	inc    edi
  4071b0:	add    ecx,DWORD PTR [ebx-0x673f7700]
  4071b6:	cli    
  4071b7:	pop    ss
  4071b8:	push   eax
  4071b9:	mov    eax,DWORD PTR [eax]
  4071bb:	add    BYTE PTR [eax],al
  4071bd:	jne    0x4071cf
  4071bf:	add    BYTE PTR [eax-0x55],al
  4071c2:	loopne 0x407222
  4071c4:	add    BYTE PTR [ecx],al
  4071c6:	add    BYTE PTR [eax],al
  4071c8:	test   DWORD PTR [ecx+eiz*4-0x14f774a0],edi
  4071cf:	mov    DWORD PTR [ebx+0x7d75cc00],ecx
  4071d5:	outs   dx,DWORD PTR ds:[esi]
  4071d6:	(bad)  
  4071d7:	push   ecx
  4071d8:	xor    eax,DWORD PTR [ebp+0x1]
  4071db:	mov    esi,DWORD PTR [eax-0xc]
  4071de:	sar    bl,cl
  4071e0:	add    edi,eax
  4071e2:	add    BYTE PTR [eax],al
  4071e4:	mov    ecx,DWORD PTR [eax]
  4071e6:	add    BYTE PTR [eax-0x70],dl
  4071e9:	xor    BYTE PTR [ecx],ch
  4071eb:	cld    
  4071ec:	add    ah,cl
  4071ee:	(bad)  
  4071ef:	int3   
  4071f0:	in     al,0xb3
  4071f2:	retf   
  4071f3:	out    0x0,al
  4071f5:	add    BYTE PTR [ebx-0x742200bb],cl
  4071fb:	jne    0x40722a
  4071fd:	out    dx,al
  4071fe:	mov    edx,0x8b4500b5
  407203:	mov    ebp,DWORD PTR [ebx-0x5e]
  407206:	jle    0x4071c8
  407208:	or     al,0x45
  40720a:	adc    BYTE PTR [ebp-0x34],dh
  40720d:	int3   
  40720e:	inc    DWORD PTR [eax]
  407210:	ret    0x488c
  407213:	or     BYTE PTR [ebx-0x1200f7f0],0x26
  40721a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40721b:	and    eax,DWORD PTR [eax]
  40721d:	int3   
  40721e:	int3   
  40721f:	mov    ecx,esp
  407221:	mov    edi,edi
  407223:	add    DWORD PTR [ebx],esi
  407225:	cmp    esi,DWORD PTR [eax+0x10006a25]
  40722b:	int3   
  40722c:	push   esp
  40722d:	fidiv  DWORD PTR [edi+ebx*8]
  407230:	test   DWORD PTR [esi-0x7d],eax
  407233:	mov    DWORD PTR [ebp-0x4cb93375],eax
  407239:	xlat   BYTE PTR ds:[ebx]
  40723a:	add    BYTE PTR [ecx-0x74b934],0x47
  407241:	add    eax,0x1ffe132
  407246:	or     al,0xeb
  407248:	or     al,0x0
  40724a:	add    BYTE PTR [ebx-0xdc4f42],cl
  407250:	(bad)  
  407252:	mov    ecx,esp
  407254:	add    al,0x75
  407256:	xor    al,0xdc
  407258:	mov    edx,DWORD PTR ds:0xe80000cc
  40725e:	add    ah,cl
  407260:	sbb    ch,bh
  407262:	and    BYTE PTR gs:[ebx+0x67cccc00],cl
  407269:	fwait
  40726a:	pop    ss
  40726b:	fisttp WORD PTR [ecx+0x74cc158b]
  407271:	xor    esi,DWORD PTR [ebp+0xc]
  407274:	mov    esp,0x60038c
  407279:	add    BYTE PTR [eax],cl
  40727b:	add    edx,DWORD PTR [edi]
  40727d:	xor    DWORD PTR [edx-0x33747aa1],edi
  407283:	jne    0x407285
  407285:	dec    ebp
  407286:	add    bh,bh
  407288:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407289:	cmp    BYTE PTR [ecx+0x21],0x0
  40728d:	int3   
  40728e:	loopne 0x40726d
  407290:	jmp    0x0:0x914694
  407297:	mov    eax,DWORD PTR [ecx]
  407299:	add    ah,cl
  40729b:	or     BYTE PTR [ebx-0x9],dh
  40729e:	cmp    edx,DWORD PTR [edi-0x75]
  4072a1:	or     al,0x0
  4072a3:	in     al,dx
  4072a4:	repz pop ss
  4072a6:	cmp    esi,DWORD PTR [ecx+0x0]
  4072a9:	inc    DWORD PTR [eax]
  4072ab:	inc    ebp
  4072ac:	call   0x2f40e83c
  4072b1:	gs xchg bh,bl
  4072b4:	int3   
  4072b5:	mov    DWORD PTR [eax],0xff0e2d01
  4072bb:	mov    ds:0xeb8b0100,eax
  4072c0:	test   esp,ecx
  4072c2:	call   0xa3e87fa7
  4072c7:	imul   ebx,DWORD PTR [ebp-0x39],0x7a910000
  4072ce:	jmp    0x15cbfde3
  4072d3:	mov    edx,DWORD PTR [eax]
  4072d5:	pop    ebp
  4072d6:	loopne 0x407263
  4072d8:	xlat   BYTE PTR ds:[ebx]
  4072d9:	lea    eax,[eax+0x18]
  4072dc:	add    al,0x1
  4072de:	add    BYTE PTR [ebp-0x29],al
  4072e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072e2:	aas    
  4072e3:	sub    eax,0x338bcc00
  4072e8:	mov    esi,DWORD PTR [ebx]
  4072ea:	bswap  esp
  4072ec:	cmp    bh,BYTE PTR [edi+eax*1-0x743f7262]
  4072f3:	mov    edi,DWORD PTR [edx+ebp*4]
  4072f6:	push   edi
  4072f7:	cs int3 
  4072f9:	loopne 0x4072fb
  4072fb:	add    BYTE PTR [ecx],al
  4072fd:	jne    0x4072ff
  4072ff:	add    BYTE PTR [ebx+edi*1],ch
  407302:	inc    edi
  407303:	jno    0x40728e
  407305:	mov    ebx,ebp
  407307:	mov    esp,DWORD PTR [edi]
  407309:	inc    esi
  40730a:	xchg   edi,eax
  40730b:	pushf  
  40730c:	add    BYTE PTR [eax],al
  40730e:	dec    DWORD PTR [ebx+0x150100]
  407314:	xor    dh,bh
  407316:	imul   dh
  407318:	add    BYTE PTR [ebx-0x6014fff8],cl
  40731e:	xor    ah,BYTE PTR [esi+0x744d00]
  407324:	dec    esp
  407326:	xor    esp,eax
  407328:	xor    al,0x41
  40732a:	outs   dx,DWORD PTR ds:[esi]
  40732b:	push   ds
  40732c:	add    ah,cl
  40732e:	add    BYTE PTR [ebx+0x20087237],al
  407334:	add    bh,al
  407336:	inc    esi
  407337:	mov    DWORD PTR [eax],0xbf45ec03
  40733d:	push   eax
  40733e:	cwde   
  40733f:	and    ecx,DWORD PTR [eax]
  407341:	mov    DWORD PTR [ebp-0x73],ecx
  407344:	push   ds
  407345:	pop    edi
  407346:	jb     0x4072d8
  407348:	fisttp QWORD PTR [ebx-0x33ff7434]
  40734e:	mov    eax,DWORD PTR [ebp+0x77]
  407351:	xlat   BYTE PTR ds:[ebx]
  407352:	and    al,0x2d
  407354:	lea    ecx,[ebx+0x5f77ccff]
  40735a:	out    dx,al
  40735b:	pop    ds
  40735c:	or     BYTE PTR [ecx-0x2233fffc],cl
  407362:	add    al,0x0
  407364:	inc    esi
  407365:	sub    DWORD PTR [edx],esi
  407367:	jg     0x407368
  407369:	add    BYTE PTR [edx-0x77],ch
  40736c:	bound  ecx,QWORD PTR [edi+0x47]
  40736f:	inc    esp
  407370:	or     BYTE PTR [eax],cl
  407372:	inc    DWORD PTR [eax]
  407374:	shl    al,0x6a
  407377:	mov    DWORD PTR [edx],ebp
  407379:	mov    esp,0x8bccf196
  40737e:	add    BYTE PTR [eax],al
  407380:	jl     0x4073e1
  407382:	mov    eax,ds:0xccba
  407387:	add    bl,ch
  407389:	jne    0x40738b
  40738b:	push   eax
  40738c:	jo     0x4073bd
  40738e:	mov    BYTE PTR [esi],bl
  407390:	int3   
  407391:	fst    QWORD PTR [ebp+0x0]
  407394:	mov    bh,0x5f
  407396:	popa   
  407397:	sub    al,0x0
  407399:	add    BYTE PTR ds:0x89cc0083,dl
  40739f:	int3   
  4073a0:	pushf  
  4073a1:	ins    DWORD PTR es:[edi],dx
  4073a2:	jb     0x4073d6
  4073a4:	or     al,0xff
  4073a6:	or     BYTE PTR [ebx-0x67fb4e3d],cl
  4073ac:	push   esi
  4073ad:	je     0x40733c
  4073af:	int3   
  4073b0:	wbinvd 
  4073b2:	mov    ebx,0x8b08bff2
  4073b7:	inc    ebp
  4073b8:	fld    QWORD PTR [eax]
  4073ba:	add    BYTE PTR [ebx-0x5ecf7000],al
  4073c0:	push   0x4cc0001
  4073c5:	jg     0x40740d
  4073c7:	mov    al,BYTE PTR [ebp-0x34]
  4073ca:	add    al,0xff
  4073cc:	je     0x40735b
  4073ce:	add    BYTE PTR [eax],al
  4073d0:	or     BYTE PTR ds:0xe05a23f9,dl
  4073d6:	(bad)  
  4073d7:	inc    DWORD PTR [eax]
  4073d9:	xor    DWORD PTR [edi-0x59],edx
  4073dc:	and    BYTE PTR [ebp+0x8],al
  4073df:	mov    ecx,DWORD PTR [ebx+0xececc0]
  4073e5:	mov    DWORD PTR [edx+eiz*8+0x740355c0],edi
  4073ec:	loopne 0x4073fc
  4073ee:	push   cs
  4073ef:	fimul  WORD PTR [ebx+ecx*4]
  4073f2:	mov    eax,DWORD PTR [eax]
  4073f4:	je     0x4073f6
  4073f6:	add    BYTE PTR [ecx-0xf015d01],cl
  4073fc:	mov    dh,0x45
  4073fe:	add    bh,bh
  407400:	add    BYTE PTR [ebx-0xc3f0bf],dl
  407406:	add    DWORD PTR [ecx],eax
  407408:	add    BYTE PTR [eax],al
  40740a:	(bad)  
  40740b:	in     al,dx
  40740c:	add    bl,bl
  40740e:	inc    edi
  40740f:	sbb    BYTE PTR [esi],cl
  407411:	int3   
  407412:	add    bh,bh
  407414:	int3   
  407415:	inc    ecx
  407416:	pop    edi
  407417:	pop    ds
  407418:	inc    edx
  407419:	adc    eax,0x8b0c8b
  40741e:	int3   
  40741f:	loopne 0x407467
  407421:	xchg   edx,eax
  407422:	out    dx,al
  407423:	pop    ds
  407424:	jmp    0x407426
  407426:	push   esi
  407427:	int3   
  407428:	inc    esi
  407429:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40742b:	fisubr WORD PTR [ebx]
  40742d:	int3   
  40742e:	add    DWORD PTR [ebx+0xff00c7],ecx
  407434:	int3   
  407435:	dec    edi
  407436:	xor    DWORD PTR [edx-0x74a97605],esp
  40743c:	or     BYTE PTR [ebx-0x7b],bl
  40743f:	cmp    ecx,esi
  407441:	dec    DWORD PTR [ebx+0x450cff04]
  407447:	in     al,dx
  407448:	add    BYTE PTR [ebx+ebp*1+0x32],cl
  40744c:	pop    esi
  40744d:	push   esi
  40744e:	mov    edi,edi
  407450:	int3   
  407451:	dec    ecx
  407452:	add    BYTE PTR [edx],bh
  407454:	adc    BYTE PTR [ecx],al
  407456:	dec    DWORD PTR [ebx-0x33747a7b]
  40745c:	or     DWORD PTR [ecx-0x767ca594],0xffffffcc
  407463:	dec    DWORD PTR [ebp+0x20]
  407466:	jbe    0x407447
  407468:	xchg   ecx,eax
  407469:	add    BYTE PTR [ecx],al
  40746b:	dec    ebp
  40746c:	test   edi,edi
  40746e:	call   0xcccc34fc
  407473:	(bad)  
  407475:	mov    eax,DWORD PTR [eax]
  407477:	or     bh,bh
  407479:	fistp  WORD PTR [ebx-0x72]
  40747c:	xchg   edi,eax
  40747d:	add    BYTE PTR [eax],al
  40747f:	or     BYTE PTR [ebp+0x0],al
  407482:	xor    eax,DWORD PTR [eax]
  407484:	add    DWORD PTR [ebx+esi*2-0x24],0x3a
  407489:	add    BYTE PTR [eax],al
  40748b:	int3   
  40748c:	mov    edi,DWORD PTR [esi-0x1f76202c]
  407492:	mov    DWORD PTR [edi],ecx
  407494:	add    ah,cl
  407496:	add    BYTE PTR [ebx+0x666a9a08],cl
  40749c:	fild   DWORD PTR [eax]
  40749e:	push   ebp
  40749f:	int3   
  4074a0:	add    BYTE PTR [edi],bh
  4074a2:	std    
  4074a3:	xchg   ebp,eax
  4074a4:	add    BYTE PTR [eax],0x4d
  4074a7:	pop    ebp
  4074a8:	inc    ebp
  4074a9:	call   0xa34100ad
  4074ae:	ja     0x407518
  4074b0:	nop
  4074b1:	add    ah,cl
  4074b3:	int3   
  4074b4:	xor    edx,DWORD PTR [ebx-0x7c5a08d0]
  4074ba:	pop    ebp
  4074bb:	add    ah,cl
  4074bd:	str    WORD PTR [ebx+0x352819cc]
  4074c4:	xchg   edi,eax
  4074c5:	test   DWORD PTR [ecx+0xbbc005d],ecx
  4074cb:	hlt    
  4074cc:	xchg   edx,eax
  4074cd:	add    BYTE PTR [eax],al
  4074cf:	sbb    DWORD PTR [ebp+0x50],0xffffff8b
  4074d3:	mov    edi,edi
  4074d5:	mov    dl,dl
  4074d7:	xlat   BYTE PTR ds:[ebx]
  4074d8:	sub    al,0xcc
  4074da:	int3   
  4074db:	cmovne edi,DWORD PTR [eax]
  4074de:	imul   ebx,DWORD PTR [ebp-0x4a],0x0
  4074e2:	inc    ebp
  4074e3:	mov    eax,DWORD PTR [eax]
  4074e5:	test   DWORD PTR [ebx+0x2a6b0801],ecx
  4074eb:	(bad)  
  4074ec:	xchg   ecx,eax
  4074ed:	dec    esp
  4074ef:	call   0x9233dcf4
  4074f4:	iret   
  4074f5:	int3   
  4074f6:	add    DWORD PTR [ebx+0x460000cc],ecx
  4074fc:	or     al,0x89
  4074fe:	ins    BYTE PTR es:[edi],dx
  4074ff:	call   0xde0c7585
  407504:	add    BYTE PTR [edx-0xb],dh
  407507:	(bad)  
  407508:	loope  0x40753d
  40750a:	test   DWORD PTR [ebx+0xcc75cc],ecx
  407510:	add    BYTE PTR [edx],bl
  407512:	jb     0x407545
  407514:	and    BYTE PTR [ebx],dh
  407516:	inc    DWORD PTR [eax]
  407518:	je     0x91b986b
  40751e:	add    al,ch
  407520:	sgdtd  [eax]
  407523:	int3   
  407524:	add    BYTE PTR [esi+0x44a930a],cl
  40752a:	add    BYTE PTR [ecx],al
  40752c:	mov    ebx,DWORD PTR [esp+eiz*4]
  40752f:	adc    al,0x7d
  407531:	lea    ecx,[ebx+0x100cc04]
  407537:	in     al,dx
  407538:	test   DWORD PTR [ecx-0x33c65abe],edx
  40753e:	add    BYTE PTR [ebx+0x5da70a46],cl
  407544:	bound  ecx,QWORD PTR [ebx+0x8008b8b]
  40754a:	inc    ebp
  40754b:	add    BYTE PTR [eax],dl
  40754d:	xlat   BYTE PTR ds:[ebx]
  40754e:	cwde   
  40754f:	sub    eax,DWORD PTR [ebp+esi*2+0x4904ccff]
  407556:	adc    ebx,eax
  407558:	ins    BYTE PTR es:[edi],dx
  407559:	inc    ebp
  40755a:	fst    QWORD PTR ds:0x89c7dd00
  407560:	sub    edi,0x37
  407563:	add    edx,DWORD PTR [edx]
  407565:	mov    eax,DWORD PTR [eax]
  407567:	mov    eax,DWORD PTR [eax]
  407569:	adc    ebx,DWORD PTR [edx+0x108bd66f]
  40756f:	add    BYTE PTR [ecx+0x4561500],cl
  407575:	sub    ecx,DWORD PTR [ebx+0x81307]
  40757b:	or     al,0x0
  40757d:	pop    ss
  40757e:	inc    esp
  40757f:	call   0xc775:0xff8bdd2f
  407586:	int3   
  407587:	(bad)  
  407588:	in     al,dx
  407589:	adc    eax,eax
  40758b:	arpl   WORD PTR [ebp+eax*4+0x50],si
  40758f:	add    BYTE PTR [ebp-0x45],dl
  407592:	sbb    eax,0x8b01b647
  407597:	dec    DWORD PTR [eax]
  407599:	call   0xc7cc3d12
  40759e:	pusha  
  40759f:	es cwde 
  4075a1:	pop    ebp
  4075a2:	add    BYTE PTR [ebp-0x75],al
  4075a5:	push   esp
  4075a6:	jmp    0xff509500
  4075ab:	add    DWORD PTR [ecx],eax
  4075ad:	add    BYTE PTR [ebp+0x2b5a3300],al
  4075b3:	stos   DWORD PTR es:[edi],eax
  4075b4:	iret   
  4075b5:	je     0x4075b8
  4075b7:	add    BYTE PTR [ecx],al
  4075b9:	mov    eax,0x83c5ffc0
  4075be:	inc    DWORD PTR [eax]
  4075c0:	pop    ebp
  4075c1:	dec    DWORD PTR [ebx-0x5f7eff7b]
  4075c7:	xchg   ecx,eax
  4075c8:	pop    ss
  4075c9:	add    BYTE PTR [ebp+0x62a600cc],cl
  4075cf:	add    BYTE PTR [ecx+0x838b5d],ch
  4075d5:	int3   
  4075d6:	add    BYTE PTR [ebx-0x576c7e39],cl
  4075dc:	or     esp,0xffffffff
  4075df:	inc    DWORD PTR [ebp-0x16af61ee]
  4075e5:	adc    BYTE PTR [ebx-0x1776ff75],cl
  4075eb:	int3   
  4075ec:	add    BYTE PTR [esp+esi*4],ah
  4075ef:	es jp  0x4075f5
  4075f2:	add    BYTE PTR [eax],dl
  4075f4:	adc    eax,0x9a234555
  4075f9:	mov    edi,edi
  4075fb:	mov    eax,DWORD PTR [eax]
  4075fd:	int3   
  4075fe:	push   eax
  4075ff:	jne    0x4075c8
  407601:	pop    eax
  407602:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  407604:	push   edi
  407605:	mov    esp,ecx
  407607:	jne    0x407594
  407609:	pop    ecx
  40760a:	dec    edx
  40760b:	or     esi,eax
  40760d:	mov    esp,ecx
  40760f:	adc    eax,0xc0cc4555
  407614:	call   DWORD PTR [esi+0x4b]
  407617:	(bad)  
  407619:	add    DWORD PTR [esi-0x20],0x75
  40761d:	(bad)  
  40761e:	in     al,dx
  40761f:	xchg   esp,eax
  407620:	mov    dl,0x0
  407622:	int3   
  407623:	add    BYTE PTR [esi-0x75],dl
  407626:	add    BYTE PTR [ebx-0x11e1ec75],cl
  40762c:	mov    al,ds:0xff4600
  407631:	push   0x1f8df44
  407636:	cmp    edi,0xffffffcc
  407639:	mov    ecx,DWORD PTR [ecx+0x393f7400]
  40763f:	mov    al,0x7
  407641:	or     BYTE PTR [edx-0x34],ch
  407644:	call   DWORD PTR [eax+0x4c]
  407647:	push   cs
  407648:	pop    ds
  407649:	add    BYTE PTR [ebp+0x1],cl
  40764c:	test   DWORD PTR [esi-0x34],eax
  40764f:	mov    ecx,DWORD PTR [ecx-0x4ccf3585]
  407655:	call   0xb4cb76e5
  40765a:	adc    BYTE PTR [edx+0x62],bh
  40765d:	add    DWORD PTR [ebx-0x3ff322bb],ecx
  407663:	inc    DWORD PTR [ebp+0x68]
  407666:	mov    ds:0xcc45002f,al
  40766b:	(bad)  
  40766c:	(bad)  
  40766d:	mov    ecx,0x3bd26b
  407672:	add    BYTE PTR [eax],dl
  407674:	mov    ebp,ebx
  407676:	lea    ecx,[ebx-0xcf8d300]
  40767c:	ins    DWORD PTR es:[edi],dx
  40767d:	mov    ecx,esp
  40767f:	add    BYTE PTR [eax],al
  407681:	jo     0x4076d1
  407683:	addr16 ror ah,cl
  407686:	lea    eax,[eax]
  407688:	add    al,0x0
  40768a:	add    BYTE PTR [ebx+0x524cee00],cl
  407690:	int3   
  407691:	add    eax,DWORD PTR [eax]
  407693:	int3   
  407694:	or     bl,al
  407696:	push   ebp
  407697:	mov    ebp,esp
  407699:	sub    esp,0x64
  40769c:	push   ebx
  40769d:	push   esi
  40769e:	push   edi
  40769f:	lea    eax,[ebp-0x64]
  4076a2:	push   eax
  4076a3:	push   0x0
  4076a5:	call   DWORD PTR ds:0x418090
  4076ab:	mov    esi,eax
  4076ad:	lea    eax,[ebp-0x24]
  4076b0:	push   eax
  4076b1:	call   DWORD PTR ds:0x418060
  4076b7:	lea    eax,[ebp-0x24]
  4076ba:	push   eax
  4076bb:	call   DWORD PTR ds:0x418034
  4076c1:	push   0x0
  4076c3:	call   DWORD PTR ds:0x418000
  4076c9:	mov    DWORD PTR [ebp-0x4],eax
  4076cc:	lea    eax,[ebp-0x8]
  4076cf:	push   eax
  4076d0:	push   0x1
  4076d2:	call   DWORD PTR ds:0x4180c4
  4076d8:	mov    eax,DWORD PTR [ebp-0x8]
  4076db:	mov    ecx,DWORD PTR [eax]
  4076dd:	lea    edx,[ebp-0xc]
  4076e0:	push   edx
  4076e1:	push   0x4181e0
  4076e6:	push   eax
  4076e7:	call   DWORD PTR [ecx]
  4076e9:	push   0x1
  4076eb:	push   esi
  4076ec:	mov    ds:0x4194b8,eax
  4076f1:	call   DWORD PTR ds:0x418004
  4076f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4076fa:	push   0x3
  4076fc:	pop    esi
  4076fd:	mov    edi,esi
  4076ff:	xor    eax,eax
  407701:	mov    edx,DWORD PTR ds:0x4194b0
  407707:	mov    edx,DWORD PTR [edx+eax*4]
  40770a:	sub    edx,DWORD PTR ds:0x4194b8
  407710:	add    edx,0x2f28e7b5
  407716:	mov    DWORD PTR [ecx],edx
  407718:	xor    edx,edx
  40771a:	add    ecx,0x4
  40771d:	cmp    edi,esi
  40771f:	setne  dl
  407722:	lea    edi,[edx+0x2]
  407725:	add    eax,edi
  407727:	cmp    eax,0xd4
  40772c:	jb     0x407701
  40772e:	mov    ecx,DWORD PTR [ebp+0xc]
  407731:	mov    edx,ecx
  407733:	shr    edx,1
  407735:	lea    ecx,[edx+ecx*2]
  407738:	xor    eax,eax
  40773a:	mov    edi,esi
  40773c:	test   ecx,ecx
  40773e:	je     0x407774
  407740:	mov    edx,DWORD PTR ds:0x419478
  407746:	mov    edx,DWORD PTR [edx+eax*4]
  407749:	sub    edx,DWORD PTR ds:0x4194b8
  40774f:	mov    ebx,DWORD PTR ds:0x4194a0
  407755:	add    edx,0xf1c8165
  40775b:	mov    DWORD PTR [ebx],edx
  40775d:	add    DWORD PTR ds:0x4194a0,0x4
  407764:	xor    edx,edx
  407766:	cmp    edi,esi
  407768:	setne  dl
  40776b:	lea    edi,[edx+0x2]
  40776e:	add    eax,edi
  407770:	cmp    eax,ecx
  407772:	jb     0x407740
  407774:	mov    eax,ds:0x4194a0
  407779:	mov    ecx,0x95bddd6d
  40777e:	sub    ecx,DWORD PTR ds:0x4194b8
  407784:	mov    edi,esi
  407786:	mov    DWORD PTR [eax],ecx
  407788:	add    eax,0x4
  40778b:	xor    ecx,ecx
  40778d:	mov    edx,DWORD PTR ds:0x419408
  407793:	mov    edx,DWORD PTR [edx+ecx*4]
  407796:	sub    edx,DWORD PTR ds:0x4194b8
  40779c:	add    edx,0x2127f5bd
  4077a2:	mov    DWORD PTR [eax],edx
  4077a4:	xor    edx,edx
  4077a6:	add    eax,0x4
  4077a9:	cmp    edi,esi
  4077ab:	setne  dl
  4077ae:	lea    edi,[edx+0x2]
  4077b1:	add    ecx,edi
  4077b3:	cmp    ecx,0xed
  4077b9:	jb     0x40778d
  4077bb:	mov    ebx,eax
  4077bd:	mov    eax,DWORD PTR [ebp+0x10]
  4077c0:	mov    ecx,eax
  4077c2:	shr    ecx,1
  4077c4:	lea    eax,[ecx+eax*2]
  4077c7:	xor    edi,edi
  4077c9:	mov    DWORD PTR [ebp+0xc],esi
  4077cc:	mov    DWORD PTR [ebp+0x10],eax
  4077cf:	test   eax,eax
  4077d1:	je     0x40781f
  4077d3:	push   0xfffffff8
  4077d5:	push   0x850c
  4077da:	call   DWORD PTR ds:0x418094
  4077e0:	mov    ecx,DWORD PTR ds:0x419474
  4077e6:	mov    ecx,DWORD PTR [ecx+edi*4]
  4077e9:	xor    eax,eax
  4077eb:	cmp    DWORD PTR ds:0x4194b8,0x80004002
  4077f5:	setne  al
  4077f8:	dec    eax
  4077f9:	and    eax,0x694a02b0
  4077fe:	add    eax,0xd5
  407803:	sub    ecx,eax
  407805:	xor    eax,eax
  407807:	mov    DWORD PTR [ebx],ecx
  407809:	add    ebx,0x4
  40780c:	cmp    DWORD PTR [ebp+0xc],esi
  40780f:	setne  al
  407812:	add    eax,0x2
  407815:	add    edi,eax
  407817:	mov    DWORD PTR [ebp+0xc],eax
  40781a:	cmp    edi,DWORD PTR [ebp+0x10]
  40781d:	jb     0x4077d3
  40781f:	push   0x0
  407821:	push   0x72
  407823:	push   0x0
  407825:	call   DWORD PTR ds:0x418098
  40782b:	mov    eax,DWORD PTR [ebp+0x18]
  40782e:	mov    ecx,eax
  407830:	shr    ecx,1
  407832:	lea    eax,[ecx+eax*2]
  407835:	xor    edi,edi
  407837:	mov    DWORD PTR [ebp+0xc],esi
  40783a:	mov    DWORD PTR [ebp+0x10],eax
  40783d:	test   eax,eax
  40783f:	je     0x407879
  407841:	mov    eax,DWORD PTR [ebp+0x14]
  407844:	mov    eax,DWORD PTR [eax+edi*4]
  407847:	sub    eax,DWORD PTR ds:0x4194b8
  40784d:	push   0x4180f4
  407852:	add    eax,0x7623d9ed
  407857:	mov    DWORD PTR [ebx],eax
  407859:	push   0x0
  40785b:	add    ebx,0x4
  40785e:	call   DWORD PTR ds:0x418070
  407864:	xor    eax,eax
  407866:	cmp    DWORD PTR [ebp+0xc],esi
  407869:	setne  al
  40786c:	add    eax,0x2
  40786f:	add    edi,eax
  407871:	mov    DWORD PTR [ebp+0xc],eax
  407874:	cmp    edi,DWORD PTR [ebp+0x10]
  407877:	jb     0x407841
  407879:	mov    eax,ds:0x4191b8
  40787e:	mov    ds:0x41931c,eax
  407883:	mov    edi,esi
  407885:	xor    eax,eax
  407887:	mov    ecx,DWORD PTR ds:0x41937c
  40788d:	mov    ecx,DWORD PTR [ecx+eax*4]
  407890:	mov    edx,DWORD PTR ds:0x4194b8
  407896:	lea    ecx,[ecx+edx*1+0x2d4dae86]
  40789d:	mov    DWORD PTR [ebx],ecx
  40789f:	xor    ecx,ecx
  4078a1:	add    ebx,0x4
  4078a4:	cmp    edi,esi
  4078a6:	setne  cl
  4078a9:	lea    edi,[ecx+0x2]
  4078ac:	add    eax,edi
  4078ae:	cmp    eax,0xf0
  4078b3:	jb     0x407887
  4078b5:	mov    edi,esi
  4078b7:	xor    eax,eax
  4078b9:	mov    edx,DWORD PTR ds:0x419490
  4078bf:	xor    ecx,ecx
  4078c1:	cmp    DWORD PTR ds:0x4194b8,0x80004002
  4078cb:	setne  cl
  4078ce:	dec    ecx
  4078cf:	and    ecx,0xf2e1ae8e
  4078d5:	add    ecx,0x374c
  4078db:	add    ecx,DWORD PTR [edx+eax*4]
  4078de:	mov    DWORD PTR [ebx],ecx
  4078e0:	xor    ecx,ecx
  4078e2:	add    ebx,0x4
  4078e5:	cmp    edi,esi
  4078e7:	setne  cl
  4078ea:	lea    edi,[ecx+0x2]
  4078ed:	add    eax,edi
  4078ef:	cmp    eax,0xe8
  4078f4:	jb     0x4078b9
  4078f6:	lea    eax,[ebp-0x64]
  4078f9:	push   eax
  4078fa:	push   0x0
  4078fc:	call   DWORD PTR ds:0x4180a0
  407902:	lea    eax,[ebp-0x24]
  407905:	push   eax
  407906:	call   DWORD PTR ds:0x418040
  40790c:	lea    eax,[ebp-0x24]
  40790f:	push   eax
  407910:	call   DWORD PTR ds:0x418044
  407916:	cmp    DWORD PTR [ebp-0x4],0x0
  40791a:	pop    edi
  40791b:	pop    esi
  40791c:	pop    ebx
  40791d:	je     0x407928
  40791f:	push   DWORD PTR [ebp-0x4]
  407922:	call   DWORD PTR ds:0x418014
  407928:	leave  
  407929:	ret    
  40792a:	jnp    0x40794b
  40792c:	aad    0xb2
  40792e:	add    BYTE PTR [eax],al
  407930:	add    ecx,DWORD PTR [edi]
  407932:	sub    DWORD PTR [edi-0x16],ecx
  407935:	mov    cl,0x1
  407937:	add    BYTE PTR [ebp-0x75],al
  40793a:	adc    BYTE PTR [ebx+0x64670000],cl
  407940:	sbb    al,0x7a
  407942:	add    al,0x0
  407944:	inc    ebp
  407945:	or     eax,0xffffffd9
  407948:	mov    dl,0x46
  40794a:	int3   
  40794b:	int3   
  40794c:	int3   
  40794d:	mov    esp,ecx
  40794f:	je     0x407950
  407951:	inc    esi
  407952:	mov    ebp,DWORD PTR [edx]
  407954:	mov    al,ds:0x4d00a2
  407959:	int3   
  40795a:	js     0x407963
  40795c:	sti    
  40795d:	jb     0x40795e
  40795f:	mov    ecx,DWORD PTR [ebx-0x337472eb]
  407965:	inc    esi
  407966:	add    DWORD PTR [ebp-0x33],ebx
  407969:	mov    dh,0x0
  40796b:	int3   
  40796c:	je     0x40797e
  40796e:	inc    ebp
  40796f:	mov    al,ds:0x3ccf4b4
  407974:	inc    DWORD PTR [eax]
  407976:	pop    ebp
  407977:	inc    ebp
  407978:	inc    ebp
  407979:	add    BYTE PTR [ebx+edx*4],ah
  40797c:	les    eax,FWORD PTR [ebp+edx*1+0x1]
  407980:	add    BYTE PTR [eax],al
  407982:	outs   dx,DWORD PTR ds:[esi]
  407983:	mov    WORD PTR [ebp+0x5074dd7e],fs
  407989:	add    DWORD PTR [ebp+0x0],0xffffffdd
  40798d:	mov    edi,DWORD PTR [edi+ebx*1-0x7c006ea9]
  407994:	jne    0x407a0b
  407996:	std    
  407997:	fwait
  407998:	xchg   DWORD PTR [ecx+0x0],esi
  40799b:	push   ebp
  40799c:	adc    BYTE PTR [eax],al
  40799e:	inc    DWORD PTR [eax]
  4079a0:	fnsave [esi+eax*1-0x57]
  4079a4:	or     BYTE PTR [edi-0x74ffff00],dh
  4079aa:	stos   DWORD PTR es:[edi],eax
  4079ab:	les    edi,FWORD PTR [ebp+0x1ca]
  4079b1:	ror    BYTE PTR [ebx-0x4bcc3334],0x29
  4079b8:	pop    edi
  4079b9:	aaa    
  4079ba:	inc    ebp
  4079bb:	add    BYTE PTR [ebp-0x77],al
  4079be:	lods   al,BYTE PTR ds:[esi]
  4079bf:	xor    dl,bh
  4079c1:	cli    
  4079c2:	jmp    0x407a19
  4079c4:	mov    ecx,DWORD PTR [ebx+0x8b5d]
  4079ca:	lods   eax,DWORD PTR ds:[esi]
  4079cb:	ss inc esi
  4079cd:	adc    dh,BYTE PTR [ebx+ecx*4+0x75]
  4079d1:	add    al,0x59
  4079d3:	mov    ch,0xbd
  4079d5:	inc    esp
  4079d6:	jne    0x407963
  4079d8:	add    DWORD PTR [esi+0xc],0x74
  4079dc:	test   DWORD PTR [ecx],eax
  4079de:	ficomp DWORD PTR [edi+0xc04f1f4]
  4079e4:	or     BYTE PTR [ebx-0x3d184895],cl
  4079ea:	jmp    0x407a61
  4079ec:	mov    ecx,DWORD PTR [ecx-0x14efffff]
  4079f2:	shr    DWORD PTR [edi-0x4c],0x52
  4079f6:	pop    ebp
  4079f7:	mov    eax,esp
  4079f9:	add    al,cl
  4079fb:	das    
  4079fc:	clc    
  4079fd:	stos   DWORD PTR es:[edi],eax
  4079fe:	add    bh,bh
  407a00:	int3   
  407a01:	(bad)  
  407a02:	mov    eax,DWORD PTR [eax]
  407a04:	je     0x4079e6
  407a06:	jb     0x4079af
  407a08:	or     BYTE PTR [esi+0x895d8b],0x32
  407a0f:	mov    bl,0xad
  407a11:	jae    0x407a1b
  407a13:	dec    DWORD PTR [ebp+0x5d010000]
  407a19:	push   eax
  407a1a:	xchg   ebx,eax
  407a1b:	sbb    al,dl
  407a1d:	mov    dh,0x1
  407a1f:	mov    edi,edi
  407a21:	add    al,ch
  407a23:	inc    eax
  407a24:	scas   eax,DWORD PTR es:[edi]
  407a25:	mov    ch,0x0
  407a27:	minps  xmm0,XMMWORD PTR [eax]
  407a2a:	or     al,0x8b
  407a2c:	mov    ebx,DWORD PTR [ebp-0x10]
  407a2f:	mov    dl,0x1a
  407a31:	int3   
  407a32:	add    BYTE PTR [ebx+0x24a4e815],al
  407a38:	mov    ah,0x22
  407a3a:	push   esi
  407a3b:	mov    edi,edi
  407a3d:	jne    0x407a4f
  407a3f:	adc    BYTE PTR [eax],cl
  407a41:	add    BYTE PTR [ecx+0x74],dh
  407a44:	call   0xe400:0x8d89dd5c
  407a4b:	add    ax,0xc7ea
  407a4f:	dec    ebp
  407a50:	push   esi
  407a51:	int3   
  407a52:	mov    DWORD PTR [edx+ebp*2],eax
  407a55:	call   DWORD PTR [edi]
  407a57:	mov    bl,0x53
  407a59:	ror    DWORD PTR [ebx-0x51ff3301],1
  407a5f:	sbb    eax,DWORD PTR [ebx]
  407a61:	ror    BYTE PTR [ebx+0x4575eb83],1
  407a67:	mov    ecx,esp
  407a69:	inc    ebp
  407a6a:	enter  0x5ebf,0x5
  407a6e:	mov    ecx,esp
  407a70:	mov    ecx,DWORD PTR [eax+eiz*4]
  407a73:	inc    edi
  407a74:	mov    ch,0xf2
  407a76:	add    BYTE PTR [esi+0x8],al
  407a79:	inc    esi
  407a7a:	ror    BYTE PTR [ebp+0x465b8b00],0xbb
  407a81:	and    al,0xcc
  407a83:	add    bh,bh
  407a85:	(bad)  
  407a86:	in     eax,0x25
  407a88:	or     dl,dh
  407a8a:	in     al,dx
  407a8b:	int3   
  407a8c:	add    DWORD PTR [esi-0x34],eax
  407a8f:	xor    eax,DWORD PTR [edi+edi*8]
  407a92:	pop    esp
  407a93:	imul   ebp,DWORD PTR [edx-0xfe330f],0xf
  407a9a:	mov    edx,0x1a2c95f
  407a9f:	add    BYTE PTR [eax],cl
  407aa1:	int3   
  407aa2:	inc    esi
  407aa3:	add    al,0x50
  407aa5:	add    BYTE PTR [edi-0x33f747fe],dl
  407aab:	mov    edi,edi
  407aad:	int3   
  407aae:	popf   
  407aaf:	js     0x407a33
  407ab1:	push   es
  407ab2:	mov    eax,DWORD PTR [eax]
  407ab4:	add    BYTE PTR [eax],cl
  407ab6:	add    al,ah
  407ab8:	add    ah,cl
  407aba:	int3   
  407abb:	imul   ebx,DWORD PTR [eax-0x2272fbf0],0xc495c485
  407ac5:	sbb    BYTE PTR [eax],al
  407ac7:	add    BYTE PTR [ebp+0x1],al
  407aca:	add    BYTE PTR [ebp-0x77],bl
  407acd:	cmp    DWORD PTR [ecx-0x63],0xffffff9e
  407ad1:	and    bh,bh
  407ad3:	add    BYTE PTR [eax],al
  407ad5:	add    dh,ah
  407ad7:	fs push ss
  407ad9:	ret    0x1
  407adc:	int3   
  407add:	int3   
  407ade:	int3   
  407adf:	loopne 0x407ae1
  407ae1:	(bad)  
  407ae2:	call   0x10a99998
  407ae7:	int3   
  407ae8:	add    BYTE PTR [eax],al
  407aea:	lock test DWORD PTR [esi],esp
  407aed:	rol    DWORD PTR [ebx+ecx*4],cl
  407af0:	or     ah,ch
  407af2:	je     0x407a7f
  407af4:	push   ebp
  407af5:	in     al,dx
  407af6:	clc    
  407af7:	cmp    ch,BYTE PTR [esi]
  407af9:	lods   eax,DWORD PTR ds:[esi]
  407afa:	test   DWORD PTR [eax],ecx
  407afc:	mov    ecx,DWORD PTR [eax]
  407afe:	add    BYTE PTR [eax-0x74ffbb2b],ch
  407b04:	mov    eax,DWORD PTR [ecx]
  407b06:	add    BYTE PTR [ebp-0x367efef8],cl
  407b0c:	and    cl,BYTE PTR [ebp+0x10]
  407b0f:	dec    ebp
  407b10:	int3   
  407b11:	add    BYTE PTR [eax],ch
  407b13:	shl    dh,cl
  407b15:	push   esp
  407b16:	adc    eax,0xffff0856
  407b1b:	mov    eax,DWORD PTR [ebx]
  407b1d:	setb   cl
  407b20:	stos   DWORD PTR es:[edi],eax
  407b21:	pop    esp
  407b22:	add    al,0x33
  407b24:	add    al,0xc0
  407b26:	ins    BYTE PTR es:[edi],dx
  407b27:	loope  0x407b41
  407b29:	in     al,0xc0
  407b2b:	add    ch,bl
  407b2d:	je     0x407b74
  407b2f:	adc    BYTE PTR [eax],al
  407b31:	mov    esp,DWORD PTR [ebx+eax*2]
  407b34:	pop    edx
  407b35:	xor    DWORD PTR [eax],eax
  407b37:	int3   
  407b38:	dec    DWORD PTR [ebx+0x562ea2c]
  407b3e:	jmp    0x407b1d
  407b40:	add    BYTE PTR [ecx+0x88300],cl
  407b46:	xor    al,0x54
  407b48:	push   0xffffffba
  407b4a:	add    ah,cl
  407b4c:	int3   
  407b4d:	add    BYTE PTR [esi+ebp*1],bh
  407b50:	jb     0x407b79
  407b52:	adc    DWORD PTR ds:0xffffe846,0x74
  407b59:	jne    0x407afe
  407b5b:	add    eax,0x80c88b4
  407b60:	mov    esp,ecx
  407b62:	lock or eax,0x915b
  407b68:	int3   
  407b69:	test   DWORD PTR [eax],eax
  407b6b:	je     0x407bb2
  407b6d:	inc    ebp
  407b6e:	les    edx,FWORD PTR ds:0x468b98c5
  407b74:	or     bh,bh
  407b76:	jns    0x407b95
  407b78:	mov    al,ds:0x8b0fc761
  407b7d:	int3   
  407b7e:	add    BYTE PTR [ebp+0x299e748b],al
  407b84:	xchg   esi,eax
  407b85:	adc    BYTE PTR es:[ebp+0xc],dh
  407b89:	mov    esp,DWORD PTR [ebx+0x8acb329]
  407b8f:	add    ah,cl
  407b91:	rcr    ch,0x8b
  407b94:	in     al,dx
  407b95:	add    eax,esi
  407b97:	xor    DWORD PTR [edx-0x4b],ebx
  407b9a:	verw   bx
  407b9d:	mov    eax,esp
  407b9f:	cmp    esp,eax
  407ba1:	rol    BYTE PTR [ecx],0xcc
  407ba4:	add    BYTE PTR [eax],al
  407ba6:	mov    esp,ecx
  407ba8:	add    BYTE PTR [eax],al
  407baa:	jns    0x407bf1
  407bac:	sahf   
  407bad:	enter  0x8b,0x83
  407bb1:	inc    ebp
  407bb2:	out    0x64,al
  407bb4:	mov    esi,0x8b0004c1
  407bb9:	add    BYTE PTR [ebp+0x0],dl
  407bbc:	mov    eax,DWORD PTR [ecx]
  407bbe:	nop
  407bbf:	mov    cl,0xca
  407bc1:	push   0xff00cc00
  407bc6:	mov    al,ds:0x1d2d685
  407bcb:	pop    ebp
  407bcc:	add    BYTE PTR [edx-0x7b],ch
  407bcf:	add    BYTE PTR [ebp+0x0],al
  407bd2:	ret    
  407bd3:	add    BYTE PTR [esi],bh
  407bd5:	pop    esp
  407bd6:	mov    edi,0x1890000
  407bdb:	(bad)  
  407bdc:	int3   
  407bdd:	and    al,0xa8
  407bdf:	jne    0x407be0
  407be1:	jne    0x407be3
  407be3:	sar    bh,0x0
  407be6:	push   ebp
  407be7:	cli    
  407be8:	retf   0x8e5f
  407beb:	inc    esi
  407bec:	add    BYTE PTR [ebx],dh
  407bee:	call   FWORD PTR [ecx+0x749d4b5b]
  407bf4:	or     al,0xcc
  407bf6:	mov    eax,DWORD PTR [eax]
  407bf8:	shl    BYTE PTR [ebp+0x0],0x34
  407bfc:	cmp    cl,BYTE PTR [ecx-0x60]
  407bff:	bswap  esp
  407c01:	shl    BYTE PTR [ebx],0x19
  407c04:	xchg   esi,eax
  407c05:	push   edx
  407c06:	pop    esi
  407c07:	mov    ecx,esp
  407c09:	sar    bh,0x0
  407c0c:	add    al,0x8b
  407c0e:	add    DWORD PTR [ecx-0x2da17e],ebx
  407c14:	int3   
  407c15:	in     al,dx
  407c16:	add    BYTE PTR [esi+esi*4+0x748b04e5],bl
  407c1d:	fisttp QWORD PTR [eax]
  407c1f:	inc    ebp
  407c20:	add    BYTE PTR [esi+0x46],al
  407c23:	adc    bh,cl
  407c25:	adc    al,0x27
  407c27:	int3   
  407c28:	add    al,ch
  407c2a:	or     BYTE PTR [esi-0x74366c69],cl
  407c30:	int3   
  407c31:	fld    QWORD PTR [eax]
  407c33:	int3   
  407c34:	or     al,0x5d
  407c36:	mov    eax,ebp
  407c38:	mov    ch,0x7
  407c3a:	aas    
  407c3b:	add    al,al
  407c3d:	mov    ebx,ebp
  407c3f:	out    dx,eax
  407c40:	ficomp WORD PTR [edx+ecx*2-0x74f07440]
  407c47:	push   ebp
  407c48:	add    BYTE PTR [eax],al
  407c4a:	je     0x407c3b
  407c4c:	mov    ecx,0x458b9476
  407c51:	or     al,0x0
  407c53:	mov    WORD PTR [ebx+0xe],?
  407c56:	mov    DWORD PTR [eax],0xcc8b8b45
  407c5c:	mov    DWORD PTR [ebp+0x4bb54a8b],eax
  407c62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c63:	int3   
  407c64:	xor    edx,DWORD PTR [eax]
  407c66:	adc    BYTE PTR [ebx+0xb2085a],bh
  407c6c:	lea    eax,[eax]
  407c6e:	push   esi
  407c6f:	or     ah,cl
  407c71:	add    BYTE PTR [ecx-0x718406b6],cl
  407c77:	mov    ecx,DWORD PTR [ebx-0x7f977401]
  407c7d:	jmp    0x74aa7ce7
  407c82:	inc    ebp
  407c83:	test   DWORD PTR [ebx-0x7449ff75],ecx
  407c89:	xchg   ebx,eax
  407c8a:	push   ebx
  407c8b:	mov    ecx,DWORD PTR [eax]
  407c8d:	add    BYTE PTR [eax+ecx*4],cl
  407c90:	enter  0xde74,0x74
  407c94:	je     0x407c9a
  407c96:	mov    DWORD PTR [eax],eax
  407c98:	add    BYTE PTR [ecx],al
  407c9a:	add    DWORD PTR [edi-0x1f599523],edx
  407ca0:	add    bh,bh
  407ca2:	add    ch,cl
  407ca4:	and    al,0x4b
  407ca6:	sub    ch,bl
  407ca8:	add    BYTE PTR [ebx+0x458be800],cl
  407cae:	pop    ebp
  407caf:	sbb    eax,0x4544a986
  407cb4:	rol    BYTE PTR [eax],0xcc
  407cb7:	mov    bh,0x86
  407cb9:	pop    ebx
  407cba:	cmp    ecx,esp
  407cbc:	adc    BYTE PTR [eax],cl
  407cbe:	mov    DWORD PTR [ebp+0x0],ecx
  407cc1:	add    BYTE PTR [eax],al
  407cc3:	push   edx
  407cc4:	xchg   BYTE PTR [edx+0x45],bl
  407cc7:	add    al,0xc
  407cc9:	mov    ecx,DWORD PTR [ebx-0xff109f4]
  407ccf:	dec    DWORD PTR [ebx-0x33a2a215]
  407cd5:	cmovbe edx,DWORD PTR [edx+0x46]
  407cd9:	mov    ebp,ds
  407cdb:	add    al,0xff
  407cdd:	or     BYTE PTR [ecx],al
  407cdf:	ror    DWORD PTR [edx+0x88b9b3c],1
  407ce5:	int3   
  407ce6:	dec    ebp
  407ce7:	ud0    eax,DWORD PTR [eax]
  407cea:	push   eax
  407ceb:	xchg   esp,eax
  407cec:	sbb    bl,BYTE PTR [ecx+0xc89ff4c]
  407cf2:	int3   
  407cf3:	jmp    0x7545:0xc7e1eb
  407cfa:	add    al,0x8b
  407cfc:	call   0x41a7d56
  407d01:	dec    edi
  407d02:	fimul  DWORD PTR [edi]
  407d04:	inc    ebp
  407d05:	add    edi,edi
  407d07:	sub    eax,0xccb4b730
  407d0c:	add    ah,cl
  407d0e:	mov    DWORD PTR [ebp+0x0],eax
  407d11:	add    BYTE PTR [ebx+0x3a476817],cl
  407d17:	je     0x407c9c
  407d19:	inc    DWORD PTR [eax]
  407d1b:	or     BYTE PTR [esi],bh
  407d1d:	(bad)
  407d20:	push   ebp
  407d21:	add    BYTE PTR [edx+ebp*2+0x46],dh
  407d25:	add    BYTE PTR [eax+eiz*4],cl
  407d28:	test   BYTE PTR [eax+0x55e8b0],dl
  407d2e:	add    BYTE PTR [ecx+0x4b],ah
  407d31:	out    0x8b,eax
  407d33:	add    BYTE PTR [esi-0x15],al
  407d36:	inc    DWORD PTR [eax]
  407d38:	mov    ecx,DWORD PTR [ebx+0x706d9300]
  407d3e:	sbb    BYTE PTR [ebx+0x51833300],cl
  407d44:	mov    al,0xcf
  407d46:	push   edi
  407d47:	push   ebp
  407d48:	int3   
  407d49:	xor    ecx,DWORD PTR [ebx+ecx*4]
  407d4c:	jmp    0x407d4e
  407d4e:	adc    dl,ch
  407d50:	leave  
  407d51:	push   eax
  407d52:	sahf   
  407d53:	test   DWORD PTR [ebx-0x19cf76f1],ecx
  407d59:	int    0x8c
  407d5b:	int3   
  407d5c:	fisttp QWORD PTR [eax]
  407d5e:	ffree  st(0)
  407d60:	inc    ebp
  407d61:	int3   
  407d62:	add    BYTE PTR ds:0xf53eaaa,dh
  407d68:	add    BYTE PTR [ebp-0x75],al
  407d6b:	xchg   edx,eax
  407d6c:	sar    bh,cl
  407d6e:	repz fld QWORD PTR [ebx-0x74008c00]
  407d75:	mov    DWORD PTR [eax],eax
  407d77:	aam    0x64
  407d79:	add    eax,0xcc6a8bd7
  407d7e:	int3   
  407d7f:	sbb    al,0xe1
  407d82:	jge    0x407d84
  407d84:	ror    BYTE PTR [ebp+0xc00000],0x0
  407d8b:	nop
  407d8c:	cmp    DWORD PTR [ecx-0x24],ecx
  407d8f:	mov    DWORD PTR [ebx+0x2e5f108b],ecx
  407d95:	push   ss
  407d96:	shl    BYTE PTR [ebx],cl
  407d98:	je     0x407df0
  407d9a:	add    BYTE PTR [eax],al
  407d9c:	inc    DWORD PTR [eax+eax*1]
  407d9f:	fsub   DWORD PTR [esi]
  407da1:	jmp    0xe8cc:0xe8af
  407da8:	cmp    DWORD PTR [esp+eax*4-0x76ffeaf4],esp
  407daf:	fld    QWORD PTR [eax]
  407db1:	add    ah,cl
  407db3:	dec    edi
  407db4:	mov    al,0x48
  407db6:	test   DWORD PTR ss:[ebx+0x65c7008b],eax
  407dbd:	xor    DWORD PTR [ebp-0x75],ebx
  407dc0:	loopne 0x407dc2
  407dc2:	push   esi
  407dc3:	mov    eax,DWORD PTR [eax]
  407dc5:	mov    DWORD PTR [edi],ecx
  407dc7:	pop    ds
  407dc8:	(bad)  
  407dc9:	or     dl,ah
  407dcb:	add    BYTE PTR [ebp+0x6291ffcc],al
  407dd1:	add    BYTE PTR [eax+eax*1],cl
  407dd4:	add    ah,cl
  407dd6:	mov    eax,DWORD PTR [eax]
  407dd8:	adc    eax,0x95070004
  407ddd:	add    bl,BYTE PTR [edx-0x34]
  407de0:	inc    ebp
  407de1:	je     0x407de3
  407de3:	xchg   ebx,eax
  407de4:	lods   al,BYTE PTR ds:[esi]
  407de5:	daa    
  407de6:	mov    ds:0xfff0300,eax
  407deb:	(bad)  
  407dec:	mov    esi,DWORD PTR [ebp+0x50]
  407def:	pushf  
  407df0:	mov    bh,0xf7
  407df2:	pop    esp
  407df3:	je     0x407df9
  407df5:	rol    BYTE PTR [esi+0x57],0xb7
  407df9:	sub    BYTE PTR [ebp+0x1075ccc0],ch
  407dff:	add    BYTE PTR [ebx-0x42e3ff75],cl
  407e05:	out    dx,al
  407e06:	aam    0x0
  407e08:	inc    ebp
  407e09:	mov    eax,DWORD PTR [esp+edi*8]
  407e0c:	daa    
  407e0d:	push   0x79
  407e0f:	jne    0x407e15
  407e11:	add    DWORD PTR [eax],eax
  407e13:	mov    eax,DWORD PTR [ebp-0x75]
  407e16:	add    BYTE PTR [ebp+0x332e56],dh
  407e1c:	inc    DWORD PTR [ebp-0x1]
  407e1f:	and    eax,0x8574b42
  407e24:	mov    ecx,DWORD PTR [ebx-0xf3f375]
  407e2a:	add    BYTE PTR [ebx+0x49],al
  407e2d:	popa   
  407e2e:	scas   al,BYTE PTR es:[edi]
  407e2f:	add    DWORD PTR [eax],eax
  407e31:	add    BYTE PTR [ebp+0x40537e29],cl
  407e37:	jmp    0x407e05
  407e39:	jne    0x407e3b
  407e3b:	int3   
  407e3c:	int3   
  407e3d:	add    BYTE PTR [eax+eiz*8-0x1b],dh
  407e41:	and    BYTE PTR [ebp+0x5d],dl
  407e44:	mov    ecx,DWORD PTR [edi]
  407e46:	inc    ebp
  407e47:	mov    esi,edi
  407e49:	aaa    
  407e4a:	pop    ebx
  407e4b:	inc    DWORD PTR [eax]
  407e4d:	add    ah,cl
  407e4f:	mov    eax,DWORD PTR [eax]
  407e51:	inc    DWORD PTR [ebx]
  407e53:	ret    
  407e54:	stc    
  407e55:	fprem1 
  407e57:	dec    ebp
  407e58:	mov    ecx,DWORD PTR [ecx-0x1314337b]
  407e5e:	add    BYTE PTR [ebx-0x34],al
  407e61:	inc    ebp
  407e62:	add    BYTE PTR [eax],al
  407e64:	inc    ebp
  407e65:	inc    DWORD PTR [eax]
  407e67:	add    BYTE PTR [ebp-0x25],ah
  407e6a:	and    ch,BYTE PTR [ebx+0x1008910]
  407e70:	outs   dx,BYTE PTR es:[esi]
  407e72:	scas   eax,DWORD PTR es:[edi]
  407e73:	aad    0x0
  407e75:	push   ebp
  407e76:	test   esp,ecx
  407e78:	int3   
  407e79:	mov    esi,DWORD PTR [ebp+0x1]
  407e7c:	(bad)  
  407e7d:	loope  0x407eb8
  407e7f:	or     eax,0xc04ccff
  407e84:	adc    bh,dl
  407e86:	dec    esp
  407e87:	arpl   WORD PTR ds:0x4088b,dx
  407e8d:	int3   
  407e8e:	or     al,0x0
  407e90:	aas    
  407e91:	xor    BYTE PTR [ecx-0x7c],0x55
  407e95:	add    BYTE PTR [ebp-0x34],dh
  407e98:	push   ds
  407e99:	mov    eax,ds:0x1030d7f
  407e9e:	add    BYTE PTR [ebx+0xff8301],cl
  407ea4:	mov    dl,0x8f
  407ea6:	jae    0x407ed5
  407ea8:	int3   
  407ea9:	add    BYTE PTR [ebp-0x77],dl
  407eac:	call   0x876cd6d
  407eb1:	test   DWORD PTR [eax],eax
  407eb3:	mov    edx,DWORD PTR ds:0xe545e800
  407eb9:	dec    esp
  407eba:	retf   0xff59
  407ebd:	push   ebp
  407ebe:	inc    DWORD PTR [eax]
  407ec0:	dec    DWORD PTR [edx+0x8]
  407ec3:	scas   eax,DWORD PTR es:[edi]
  407ec4:	int3   
  407ec5:	or     BYTE PTR [ebx+0x1008b08],cl
  407ecb:	adc    esp,0x3b
  407ece:	adc    eax,0x7400015f
  407ed3:	or     al,0x46
  407ed5:	inc    eax
  407ed6:	xor    ch,BYTE PTR [ebx]
  407ed8:	mov    ecx,esp
  407eda:	push   0x0
  407edc:	mov    esi,DWORD PTR [ebp+0x0]
  407edf:	mov    esi,DWORD PTR [edx]
  407ee1:	call   0x5600:0x889b14a
  407ee8:	mov    esi,0xcc632ded
  407eed:	int3   
  407eee:	push   esi
  407eef:	fld    QWORD PTR [eax]
  407ef1:	dec    esp
  407ef3:	add    dl,dl
  407ef5:	and    bh,cl
  407ef7:	nop
  407ef8:	mov    eax,DWORD PTR [eax]
  407efa:	jne    0x407efc
  407efc:	stos   BYTE PTR es:[edi],al
  407efd:	neg    DWORD PTR [ebx]
  407eff:	shl    eax,0xff
  407f02:	jne    0x407f04
  407f04:	mov    ebx,ebp
  407f06:	push   DWORD PTR [ebp+edi*1-0x6e]
  407f0a:	jns    0x407f1c
  407f0c:	add    DWORD PTR [eax],0x0
  407f0f:	jne    0x407f45
  407f11:	jg     0x407ec8
  407f13:	es int3 
  407f15:	jne    0x407f23
  407f17:	or     BYTE PTR [ebp+0x0],bl
  407f1a:	test   DWORD PTR [eax],eax
  407f1c:	mov    esi,0x6ab782c7
  407f21:	add    DWORD PTR [eax],0x0
  407f24:	ss sbb al,0xe5
  407f27:	iret   
  407f28:	inc    esi
  407f29:	or     al,al
  407f2b:	int3   
  407f2c:	add    ah,cl
  407f2e:	mov    DWORD PTR [eax],eax
  407f30:	icebp  
  407f31:	add    al,0x5c
  407f33:	(bad)  
  407f34:	mov    edx,DWORD PTR [esi-0x34]
  407f37:	mov    edx,eax
  407f39:	retf   0x6d30
  407f3c:	add    eax,DWORD PTR [eax]
  407f3e:	add    ah,cl
  407f40:	push   ebp
  407f41:	mov    esp,ecx
  407f43:	dec    ebp
  407f44:	sar    BYTE PTR [esi],cl
  407f46:	push   eax
  407f47:	mov    eax,0x89cccc74
  407f4c:	mov    eax,ds:0x8b1de1bb
  407f51:	jmp    0x407f53
  407f53:	mov    ecx,DWORD PTR [ebx+0x4c850074]
  407f59:	cmp    DWORD PTR [ebp+0x17],0x745ddd8b
  407f60:	shr    esp,0xa
  407f63:	or     al,BYTE PTR [ecx]
  407f65:	add    al,0x8b
  407f67:	or     BYTE PTR [eax+eax*1],al
  407f6a:	adc    BYTE PTR [eax],al
  407f6c:	mov    edx,0xff890cb6
  407f71:	add    BYTE PTR [ebx-0x4c56da34],cl
  407f77:	xor    DWORD PTR [eax],eax
  407f79:	lea    ecx,[edi]
  407f7b:	mov    eax,DWORD PTR [ebx+0x22048500]
  407f81:	mov    ebp,0xe8294b
  407f86:	sar    bh,0x2b
  407f89:	or     ch,BYTE PTR [ebx]
  407f8b:	mov    cl,BYTE PTR [ebx+0x5d00]
  407f91:	push   ebp
  407f92:	add    BYTE PTR [ebp+0xd],al
  407f95:	shl    DWORD PTR [esi+0x20],1
  407f98:	inc    ebp
  407f99:	mov    eax,DWORD PTR [eax]
  407f9b:	mov    esp,DWORD PTR [ebp-0x33be84a3]
  407fa1:	or     BYTE PTR [ebx+0x40fc701],cl
  407fa7:	int3   
  407fa8:	(bad)  
  407fa9:	into   
  407faa:	ja     0x407f3d
  407fac:	mov    eax,DWORD PTR [ebx]
  407fae:	adc    bh,bh
  407fb0:	and    eax,0x45314dbd
  407fb5:	je     0x40802c
  407fb7:	add    bh,bh
  407fb9:	inc    DWORD PTR [eax]
  407fbb:	test   edi,ecx
  407fbd:	mov    ebx,0xf834a7d
  407fc2:	je     0x407fa1
  407fc4:	loopne 0x407fcf
  407fc6:	mov    dl,0x1a
  407fc8:	add    BYTE PTR [eax+eax*1],al
  407fcb:	or     BYTE PTR [eax],al
  407fcd:	shl    BYTE PTR [eax+eax*1-0x3d],0xd7
  407fd2:	or     eax,0x8b8b003e
  407fd7:	add    BYTE PTR [edx-0x3396a85e],dh
  407fdd:	mov    edi,edi
  407fdf:	mov    ecx,DWORD PTR [ebp+0x68338b08]
  407fe5:	div    cl
  407fe7:	jle    0x407fb5
  407fe9:	add    BYTE PTR [eax],al
  407feb:	int3   
  407fec:	or     DWORD PTR [eax-0x76ef55b7],edx
  407ff2:	adc    ah,cl
  407ff4:	add    ah,cl
  407ff6:	(bad)  
  407ff7:	int3   
  407ff8:	pop    eax
  407ff9:	das    
  407ffa:	fcomp  QWORD PTR [edi+0x0]
  407ffd:	mov    esp,ecx
  407fff:	rcl    BYTE PTR [ebx],0xec
  408002:	cli    
  408003:	pop    ebx
  408004:	int3   
  408005:	mov    eax,eax
  408007:	dec    DWORD PTR [eax]
  408009:	fld    QWORD PTR [eax]
  40800b:	push   ebp
  40800c:	push   esi
  40800d:	pop    ebp
  40800e:	ret    0xfffc
  408011:	or     BYTE PTR [ebx-0x2ef3a434],cl
  408017:	inc    edi
  408018:	int3   
  408019:	or     al,0x3
  40801b:	mov    eax,ebp
  40801d:	add    DWORD PTR [eax],ecx
  40801f:	mov    ebx,DWORD PTR [eax+ebp*8-0x72330621]
  408026:	pop    ebp
  408027:	add    dh,dh
  408029:	jmp    0x569695c4
  40802e:	add    DWORD PTR [ebx+0x108ff0c],ecx
  408034:	mov    edx,0x85f273a
  408039:	adc    eax,0x97398bcc
  40803e:	jns    0x407fe0
  408040:	add    BYTE PTR [ebx+0x3cccc50],cl
  408046:	jmp    0x4080bc
  408048:	cs retf 0x3819
  40804c:	push   esi
  40804d:	add    BYTE PTR [ebp+0x46],al
  408050:	push   0xffffff91
  408052:	(bad)  
  408053:	adc    eax,DWORD PTR [eax]
  408055:	dec    ebp
  408056:	add    ch,bl
  408058:	add    BYTE PTR [eax],al
  40805a:	jmp    0x407fe7
  40805c:	call   0x7475:0xcc0d8a2c
  408063:	push   ecx
  408065:	jecxz  0x408065
  408067:	push   ds
  408068:	add    bh,bh
  40806a:	pop    ebp
  40806b:	fnsave [ebp+0x0]
  40806e:	add    BYTE PTR [ecx],al
  408070:	push   ss
  408071:	shl    DWORD PTR [eax],1
  408073:	bound  ecx,QWORD PTR [eax]
  408075:	int3   
  408076:	add    al,0x0
  408078:	push   0xffffffc2
  40807a:	inc    ecx
  40807b:	jle    0x408085
  40807d:	add    BYTE PTR [ecx+0x500000],cl
  408083:	add    bl,bl
  408085:	mov    dl,0x5a
  408087:	std    
  408088:	or     esp,0x0
  40808b:	mov    edi,DWORD PTR [ebx]
  40808d:	icebp  
  40808e:	xchg   ebx,eax
  40808f:	xchg   BYTE PTR [eax],al
  408091:	int3   
  408092:	int3   
  408093:	mov    ebx,ebp
  408095:	adc    eax,0xc02d7400
  40809a:	dec    ecx
  40809b:	xor    eax,0x4000100
  4080a0:	enter  0x7fb4,0xfc
  4080a4:	je     0x4080aa
  4080a6:	add    ch,bl
  4080a8:	inc    ebp
  4080a9:	jmp    0x408077
  4080ab:	loopne 0x408077
  4080ad:	sbb    al,BYTE PTR [edx+ebp*1-0x33fb3315]
  4080b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080b5:	push   ss
  4080b6:	sub    al,0x96
  4080b8:	in     al,dx
  4080b9:	add    bh,bh
  4080bb:	mov    eax,DWORD PTR [eax]
  4080bd:	mov    edx,DWORD PTR [esi+0x0]
  4080c0:	scas   eax,DWORD PTR es:[edi]
  4080c1:	mov    eax,0x7474687c
  4080c6:	add    BYTE PTR [ebx+0x2a1617a6],cl
  4080cc:	inc    ebp
  4080cd:	test   DWORD PTR [eax],eax
  4080cf:	push   ebp
  4080d0:	push   eax
  4080d1:	or     BYTE PTR ds:0xe0a52b0c,dl
  4080d7:	test   esp,ecx
  4080d9:	int3   
  4080da:	pop    ebp
  4080db:	add    DWORD PTR [edx],edx
  4080dd:	(bad)  
  4080df:	es int3 
  4080e1:	add    esp,ecx
  4080e3:	add    DWORD PTR [ebx+0x178300e0],ecx
  4080e9:	mov    esp,0x750c683c
  4080ee:	add    BYTE PTR [ebx+0x750b93dd],cl
  4080f4:	jne    0x4080d3
  4080f6:	inc    esi
  4080f7:	add    BYTE PTR [esi+0x0],dl
  4080fa:	add    BYTE PTR [eax],al
  4080fc:	loop   0x40811d
  4080fe:	jbe    0x40809b
  408100:	int3   
  408101:	int3   
  408102:	add    ah,ch
  408104:	mov    eax,DWORD PTR [edi]
  408106:	cs scas al,BYTE PTR es:[edi]
  408108:	int3   
  408109:	dec    DWORD PTR [eax]
  40810b:	add    al,ch
  40810d:	add    BYTE PTR [eax],al
  40810f:	add    BYTE PTR ds:0xd14364,bh
  408115:	push   0xffffffcc
  408117:	mov    eax,ebx
  408119:	push   ebx
  40811a:	pop    ds
  40811b:	add    edx,DWORD PTR [edi+edi*8]
  40811e:	push   ebp
  40811f:	(bad)  
  408120:	je     0x408129
  408122:	pusha  
  408123:	jae    0x408155
  408125:	inc    ebp
  408126:	mov    eax,DWORD PTR [eax]
  408128:	or     BYTE PTR [eax+0x33],dl
  40812b:	dec    DWORD PTR [ebp+0x4]
  40812e:	imul   esp,DWORD PTR [esi+0xc008bb7],0x8
  408135:	fwait
  408136:	shr    DWORD PTR [ebx+0x10],0x8b
  40813a:	jne    0x4080c7
  40813c:	int3   
  40813d:	add    al,0x1
  40813f:	add    ah,cl
  408141:	mul    DWORD PTR gs:[edx+0x174bb]
  408148:	add    DWORD PTR [esi-0x3f87a129],esi
  40814e:	je     0x408154
  408150:	add    DWORD PTR [ebx+0x727400cc],ecx
  408156:	shr    cl,cl
  408158:	jmp    0xccd825e
  40815d:	mov    ebp,0xaf6f21
  408162:	inc    DWORD PTR [ecx]
  408164:	mov    esi,DWORD PTR [esp+ecx*8+0x0]
  408168:	mov    esp,ecx
  40816a:	test   BYTE PTR [edi-0x7474ff46],bl
  408170:	add    cl,bl
  408172:	test   al,0x89
  408174:	out    dx,eax
  408175:	mov    eax,DWORD PTR [eax]
  408177:	add    DWORD PTR [eax],0xffffffeb
  40817a:	int3   
  40817b:	add    BYTE PTR [ebx+0x5fe47a0a],al
  408181:	add    al,0x0
  408183:	add    BYTE PTR [ebx+0x39e869ff],al
  408189:	add    edi,edi
  40818b:	add    BYTE PTR [ebx-0x22ff7700],cl
  408191:	add    eax,0x6a1ee672
  408196:	mov    eax,DWORD PTR [ebx]
  408198:	je     0x408147
  40819a:	push   es
  40819b:	loope  0x40813b
  40819d:	add    ah,cl
  40819f:	add    BYTE PTR [ebx+0x4583],cl
  4081a5:	call   0xcc:0xcc99e9d9
  4081ac:	cmovl  ebp,DWORD PTR [esi-0x33747e92]
  4081b3:	inc    ebp
  4081b4:	add    BYTE PTR [ebp+eax*2+0x0],dh
  4081b8:	lea    esp,[edx+0x1b]
  4081bb:	or     dh,BYTE PTR [ebx-0x3374ff34]
  4081c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081c2:	ins    BYTE PTR es:[edi],dx
  4081c3:	mov    ds:0x10f00ce,eax
  4081c8:	or     al,0xc
  4081ca:	je     0x408157
  4081cc:	add    BYTE PTR [eax-0x72efc03f],cl
  4081d2:	push   esi
  4081d3:	add    eax,DWORD PTR [eax]
  4081d5:	call   DWORD PTR gs:[eax-0x3ffeea4e]
  4081dc:	add    al,ah
  4081de:	(bad)  
  4081df:	int3   
  4081e0:	add    al,0xc5
  4081e2:	or     DWORD PTR [edi-0xc],ecx
  4081e5:	fnsave [esi+edx*2-0x34]
  4081e9:	ror    dh,1
  4081eb:	xchg   edx,eax
  4081ec:	nop
  4081ed:	inc    DWORD PTR [ebx]
  4081ef:	call   DWORD PTR ds:0xccccdd8b
  4081f5:	mov    ds:0x8948cb6c,eax
  4081fa:	pop    ebp
  4081fb:	push   esi
  4081fc:	mov    eax,DWORD PTR [ecx+0x52]
  4081ff:	sub    DWORD PTR ds:0x45008b10,edi
  408205:	jmp    FWORD PTR [edx-0x7d]
  408208:	inc    DWORD PTR [esi]
  40820a:	or     BYTE PTR ds:0xcc8d0f8e,dl
  408210:	fucom  st(4)
  408212:	pop    edi
  408213:	inc    ecx
  408214:	xor    al,BYTE PTR [eax]
  408216:	mov    ecx,esp
  408218:	je     0x40821b
  40821a:	add    DWORD PTR [ebx+0x7d0e72ff],ecx
  408220:	sub    al,0xcc
  408222:	inc    ebp
  408223:	mov    esi,DWORD PTR [ebx+esi*4-0x31]
  408227:	sbb    al,0x22
  408229:	rol    BYTE PTR [eax],0xff
  40822c:	int3   
  40822d:	je     0x4081ba
  40822f:	add    al,ah
  408231:	arpl   WORD PTR [ebp-0x5b],si
  408234:	pop    ebx
  408235:	add    BYTE PTR [ebp-0x75],dh
  408238:	add    BYTE PTR [ebp-0x65],ch
  40823b:	xchg   ebp,eax
  40823c:	inc    eax
  40823d:	add    DWORD PTR [ebp+0x45],0x0
  408241:	int3   
  408242:	in     al,dx
  408243:	add    al,al
  408245:	lods   eax,DWORD PTR ds:[esi]
  408246:	scas   eax,DWORD PTR es:[edi]
  408247:	mov    WORD PTR ds:0x8cc04ff,gs
  40824d:	mov    edi,0x659c66
  408252:	rol    BYTE PTR [ecx],0x0
  408255:	adc    eax,0xa78b8510
  40825a:	inc    edx
  40825b:	lods   eax,DWORD PTR ds:[esi]
  40825c:	jge    0x4082bb
  40825e:	mov    eax,eax
  408260:	or     ch,dl
  408262:	jno    0x4082d4
  408264:	adc    ecx,DWORD PTR [ebx+0x1000015]
  40826a:	int3   
  40826b:	inc    ebp
  40826c:	mov    ebx,ebp
  40826e:	cmp    dl,al
  408270:	call   0xe182:0x45000085
  408277:	les    ebx,FWORD PTR ds:0xebcccc56
  40827d:	int3   
  40827e:	adc    eax,0x4639008b
  408283:	shl    BYTE PTR [edi],1
  408285:	jge    0x12282d1
  40828b:	dec    BYTE PTR [edx-0x34]
  40828e:	jne    0x40828f
  408290:	add    ah,ch
  408292:	add    DWORD PTR [ecx-0x67781b96],ecx
  408298:	inc    eax
  408299:	dec    esp
  40829b:	add    ecx,DWORD PTR [ecx-0x16eb5d22]
  4082a1:	int3   
  4082a2:	test   DWORD PTR [esp+ecx*8-0x75],esi
  4082a6:	jne    0x4082b0
  4082a8:	(bad)  
  4082aa:	xor    edi,DWORD PTR [eax-0x22]
  4082ad:	mov    esp,ecx
  4082af:	add    BYTE PTR [ebx-0x2b86b6f5],cl
  4082b5:	add    BYTE PTR [eax],al
  4082b7:	int3   
  4082b8:	inc    ebp
  4082b9:	push   eax
  4082ba:	int3   
  4082bb:	int3   
  4082bc:	push   0xffffffd6
  4082be:	xlat   BYTE PTR ds:[ebx]
  4082bf:	mov    es,WORD PTR [ebx+0x0]
  4082c2:	jne    0x408249
  4082c4:	inc    esi
  4082c5:	arpl   di,dx
  4082c7:	addr16 or ah,0xc7
  4082cb:	add    DWORD PTR [ebp-0x74b9ffa3],ecx
  4082d1:	pop    esi
  4082d2:	adc    DWORD PTR [ebp+0x42],0x5d
  4082d6:	dec    esp
  4082d8:	add    al,dh
  4082da:	fs in  eax,0xf1
  4082dd:	push   0xffffffc7
  4082df:	inc    ebp
  4082e0:	mov    eax,DWORD PTR [eax]
  4082e2:	int3   
  4082e3:	int3   
  4082e4:	mov    ebx,DWORD PTR [edi-0x72c98d4e]
  4082ea:	push   0x0
  4082ec:	jmp    DWORD PTR [ebx+0x74bbbf40]
  4082f2:	add    BYTE PTR [ebp-0x40],al
  4082f5:	int3   
  4082f6:	int3   
  4082f7:	int3   
  4082f8:	mov    edi,DWORD PTR [edi+0x34]
  4082fb:	inc    ebx
  4082fc:	pusha  
  4082fd:	inc    DWORD PTR [eax]
  4082ff:	inc    DWORD PTR [eax]
  408301:	push   esi
  408302:	test   bh,bl
  408304:	mov    al,ds:0xc0ffff
  408309:	inc    DWORD PTR [eax]
  40830b:	int3   
  40830c:	dec    ebp
  40830d:	mov    edi,0x8b5168f7
  408312:	add    BYTE PTR [eax],al
  408314:	add    BYTE PTR [esi+0x622330],ch
  40831a:	int3   
  40831b:	add    BYTE PTR [eax],al
  40831d:	dec    esp
  40831f:	mov    eax,DWORD PTR [ecx]
  408321:	adc    DWORD PTR [edi+0x846789d],ecx
  408327:	add    BYTE PTR [ebx],al
  408329:	push   ebx
  40832a:	inc    edx
  40832b:	adc    al,0x63
  40832d:	add    BYTE PTR [eax],al
  40832f:	je     0x4082bc
  408331:	add    BYTE PTR [eax],al
  408333:	add    bh,bh
  408335:	leave  
  408336:	sub    eax,esi
  408338:	xchg   esp,eax
  408339:	inc    DWORD PTR [ebx+0x12200075]
  40833f:	pop    ebx
  408340:	pop    edi
  408341:	bswap  esp
  408343:	mov    esi,DWORD PTR [ebx+ecx*4-0x15]
  408347:	mov    DWORD PTR [eax],0x2d42c9fd
  40834d:	jne    0x40834e
  40834f:	push   ebp
  408350:	add    BYTE PTR [ecx+0xbc1eb4],ch
  408356:	fld    QWORD PTR [ecx]
  408358:	add    ch,bl
  40835a:	add    al,ch
  40835c:	or     al,0xfd
  40835e:	ret    0x4be
  408361:	add    bh,bh
  408363:	inc    DWORD PTR [ecx]
  408365:	lahf   
  408366:	xor    BYTE PTR [ebx-0x747aafa3],0x5d
  40836d:	int3   
  40836e:	add    BYTE PTR [ebx+0x43317185],cl
  408374:	push   cs
  408375:	(bad)  
  408376:	inc    DWORD PTR [esi-0x75]
  408379:	push   es
  40837a:	cmp    DWORD PTR [edx-0x13f7746e],eax
  408380:	mov    eax,DWORD PTR [eax]
  408382:	jne    0x408383
  408384:	jne    0x408359
  408386:	push   eax
  408387:	retf   
  408388:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408389:	push   0xffffff85
  40838b:	call   0x52172b05
  408390:	ret    
  408391:	push   DWORD PTR [ebp+0x0]
  408394:	or     al,0x8b
  408396:	add    DWORD PTR [eax],0x0
  408399:	sub    cl,BYTE PTR [edi]
  40839b:	mov    esi,ebx
  40839d:	push   eax
  40839e:	or     esp,0x0
  4083a1:	mov    esi,0x8d695baa
  4083a6:	add    DWORD PTR [eax],eax
  4083a8:	pop    ebp
  4083a9:	(bad)  
  4083aa:	rol    BYTE PTR [eax],0x8b
  4083ad:	ret    
  4083ae:	sub    esp,0x24
  4083b1:	mov    eax,ds:0x41910c
  4083b6:	push   ebx
  4083b7:	push   ebp
  4083b8:	push   esi
  4083b9:	mov    ds:0x419244,eax
  4083be:	push   edi
  4083bf:	lea    eax,[esp+0x1c]
  4083c3:	push   eax
  4083c4:	call   DWORD PTR ds:0x418060
  4083ca:	lea    eax,[esp+0x1c]
  4083ce:	push   eax
  4083cf:	call   DWORD PTR ds:0x418034
  4083d5:	lea    eax,[esp+0x14]
  4083d9:	push   eax
  4083da:	push   0x1
  4083dc:	call   DWORD PTR ds:0x4180c4
  4083e2:	push   0xfffffff8
  4083e4:	push   0x854d
  4083e9:	call   DWORD PTR ds:0x418094
  4083ef:	mov    eax,DWORD PTR [esp+0x14]
  4083f3:	mov    ecx,DWORD PTR [eax]
  4083f5:	lea    edx,[esp+0x18]
  4083f9:	push   edx
  4083fa:	push   0x4181e0
  4083ff:	push   eax
  408400:	call   DWORD PTR [ecx]
  408402:	mov    ds:0x4194b8,eax
  408407:	call   DWORD PTR ds:0x41803c
  40840d:	mov    ebp,DWORD PTR [esp+0x38]
  408411:	push   0x3
  408413:	pop    edi
  408414:	mov    ebx,edi
  408416:	xor    esi,esi
  408418:	mov    eax,ds:0x419468
  40841d:	mov    eax,DWORD PTR [eax+esi*4]
  408420:	sub    eax,DWORD PTR ds:0x4194b8
  408426:	add    eax,0x251b5fad
  40842b:	mov    DWORD PTR [ebp+0x0],eax
  40842e:	call   DWORD PTR ds:0x418054
  408434:	push   0x4181cc
  408439:	push   0x0
  40843b:	add    ebp,0x4
  40843e:	call   DWORD PTR ds:0x418070
  408444:	xor    eax,eax
  408446:	cmp    ebx,edi
  408448:	setne  al
  40844b:	lea    ebx,[eax+0x2]
  40844e:	add    esi,ebx
  408450:	cmp    esi,0xb1
  408456:	jb     0x408418
  408458:	mov    ebp,DWORD PTR ds:0x418098
  40845e:	mov    esi,DWORD PTR [esp+0x3c]
  408462:	mov    DWORD PTR [esp+0x10],edi
  408466:	xor    ebx,ebx
  408468:	mov    eax,ds:0x419380
  40846d:	mov    eax,DWORD PTR [eax+ebx*4]
  408470:	sub    eax,DWORD PTR ds:0x4194b8
  408476:	push   0x0
  408478:	add    eax,0x6f68107c
  40847d:	push   0x7c
  40847f:	mov    DWORD PTR [esi],eax
  408481:	push   0x0
  408483:	add    esi,0x4
  408486:	call   ebp
  408488:	xor    eax,eax
  40848a:	cmp    DWORD PTR [esp+0x10],edi
  40848e:	setne  al
  408491:	add    eax,0x2
  408494:	add    ebx,eax
  408496:	mov    DWORD PTR [esp+0x10],eax
  40849a:	cmp    ebx,0xc3
  4084a0:	jb     0x408468
  4084a2:	mov    eax,0x902cc743
  4084a7:	sub    eax,DWORD PTR ds:0x4194b8
  4084ad:	push   0xfffffff8
  4084af:	mov    DWORD PTR [esi],eax
  4084b1:	push   0xff50
  4084b6:	add    esi,0x4
  4084b9:	call   DWORD PTR ds:0x418094
  4084bf:	xor    ebx,ebx
  4084c1:	push   ebx
  4084c2:	push   edi
  4084c3:	push   ebx
  4084c4:	mov    DWORD PTR [esp+0x1c],edi
  4084c8:	call   DWORD PTR ds:0x418088
  4084ce:	mov    eax,ebx
  4084d0:	shl    eax,0x2
  4084d3:	add    eax,0x401230
  4084d8:	mov    eax,DWORD PTR [eax]
  4084da:	sub    eax,DWORD PTR ds:0x4194b8
  4084e0:	push   0x4181bc
  4084e5:	sub    eax,0x7709056d
  4084ea:	push   0x0
  4084ec:	mov    DWORD PTR [esi],eax
  4084ee:	call   DWORD PTR ds:0x418070
  4084f4:	xor    eax,eax
  4084f6:	add    esi,0x4
  4084f9:	cmp    DWORD PTR [esp+0x10],edi
  4084fd:	setne  al
  408500:	add    eax,0x2
  408503:	add    ebx,eax
  408505:	mov    DWORD PTR [esp+0x10],eax
  408509:	cmp    ebx,0xc3
  40850f:	jb     0x4084ce
  408511:	push   0x1
  408513:	push   0x66
  408515:	push   0x0
  408517:	call   ebp
  408519:	push   0x0
  40851b:	push   0x5d
  40851d:	push   0x0
  40851f:	mov    ebx,edi
  408521:	call   ebp
  408523:	xor    eax,eax
  408525:	mov    ecx,DWORD PTR ds:0x419374
  40852b:	mov    ecx,DWORD PTR [ecx+eax*4]
  40852e:	mov    edx,DWORD PTR ds:0x4194b8
  408534:	lea    ecx,[ecx+edx*1+0x631cd358]
  40853b:	mov    DWORD PTR [esi],ecx
  40853d:	xor    ecx,ecx
  40853f:	add    esi,0x4
  408542:	cmp    ebx,edi
  408544:	setne  cl
  408547:	lea    ebx,[ecx+0x2]
  40854a:	add    eax,ebx
  40854c:	cmp    eax,0xa0
  408551:	jb     0x408525
  408553:	call   DWORD PTR ds:0x41803c
  408559:	mov    ebx,edi
  40855b:	xor    ebp,ebp
  40855d:	mov    eax,ds:0x4194b8
  408562:	mov    ecx,DWORD PTR ds:0x419390
  408568:	xor    eax,0x65752d13
  40856d:	add    eax,DWORD PTR [ecx+ebp*4]
  408570:	mov    DWORD PTR [esi],eax
  408572:	call   DWORD PTR ds:0x41804c
  408578:	xor    eax,eax
  40857a:	add    esi,0x4
  40857d:	cmp    ebx,edi
  40857f:	setne  al
  408582:	lea    ebx,[eax+0x2]
  408585:	add    ebp,ebx
  408587:	cmp    ebp,0xa2
  40858d:	jb     0x40855d
  40858f:	push   0x4181b0
  408594:	push   0x0
  408596:	call   DWORD PTR ds:0x418070
  40859c:	mov    ebp,esi
  40859e:	mov    ebx,edi
  4085a0:	xor    esi,esi
  4085a2:	call   DWORD PTR ds:0x41803c
  4085a8:	mov    eax,DWORD PTR [esp+0x40]
  4085ac:	mov    eax,DWORD PTR [eax+esi*4]
  4085af:	mov    ecx,DWORD PTR ds:0x4194b8
  4085b5:	lea    eax,[eax+ecx*1+0x392949ef]
  4085bc:	mov    DWORD PTR [ebp+0x0],eax
  4085bf:	call   DWORD PTR ds:0x41803c
  4085c5:	xor    eax,eax
  4085c7:	add    ebp,0x4
  4085ca:	cmp    ebx,edi
  4085cc:	setne  al
  4085cf:	lea    ebx,[eax+0x2]
  4085d2:	add    esi,ebx
  4085d4:	cmp    esi,0xa0
  4085da:	jb     0x4085a2
  4085dc:	lea    eax,[esp+0x1c]
  4085e0:	push   eax
  4085e1:	call   DWORD PTR ds:0x418040
  4085e7:	lea    eax,[esp+0x1c]
  4085eb:	push   eax
  4085ec:	call   DWORD PTR ds:0x418044
  4085f2:	pop    edi
  4085f3:	pop    esi
  4085f4:	pop    ebp
  4085f5:	pop    ebx
  4085f6:	add    esp,0x24
  4085f9:	ret    
  4085fa:	fidiv  DWORD PTR [edx-0x6b]
  4085fd:	sti    
  4085fe:	add    BYTE PTR [eax],al
  408600:	jmp    FWORD PTR [edx+0x63]
  408603:	or     DWORD PTR [edi],esi
  408605:	xchg   esi,eax
  408606:	add    BYTE PTR [edi],cl
  408608:	dec    DWORD PTR [ebx+0xcc008b]
  40860e:	dec    esi
  40860f:	jle    0x408665
  408611:	jo     0x408596
  408613:	je     0x408625
  408615:	mov    esi,ebx
  408617:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408618:	or     eax,DWORD PTR [ebp+0xec00]
  40861e:	test   edi,edi
  408620:	test   DWORD PTR [ebp-0x22],esi
  408623:	inc    ecx
  408624:	or     ebx,DWORD PTR [esi+0x0]
  408627:	mov    eax,DWORD PTR [ebp+0x45]
  40862a:	mov    edx,0xe2744d
  40862f:	dec    esp
  408631:	mov    DWORD PTR [ebx+ecx*4+0x0],esi
  408635:	mov    esi,DWORD PTR [edx+0x1e486bc]
  40863b:	je     0x40863c
  40863d:	lea    ecx,[edx+0x4da25ae0]
  408643:	add    ah,cl
  408645:	add    eax,DWORD PTR [ecx]
  408647:	int3   
  408648:	push   eax
  408649:	mov    esi,DWORD PTR [edx]
  40864b:	outs   dx,DWORD PTR ds:[esi]
  40864c:	add    esp,DWORD PTR [ebp+esi*2-0x5dff768c]
  408653:	jnp    0x4086b8
  408655:	mov    edi,0xcc8bc700
  40865a:	mov    DWORD PTR [ecx],eax
  40865c:	add    bh,bh
  40865e:	and    al,0x46
  408660:	data16 sahf 
  408662:	ror    BYTE PTR [ebp-0x34],0x0
  408666:	hlt    
  408667:	outs   dx,DWORD PTR ds:[esi]
  408668:	stos   DWORD PTR es:[edi],eax
  408669:	jg     0x4086b0
  40866b:	add    ah,cl
  40866d:	dec    ebp
  40866e:	add    eax,DWORD PTR [eax]
  408670:	or     ah,cl
  408672:	jge    0x4086b2
  408674:	and    bh,cl
  408676:	mov    ecx,DWORD PTR [ebx+0x2d92008b]
  40867c:	fbstp  TBYTE PTR [edi-0x7c3374f1]
  408682:	adc    eax,0xa400e845
  408687:	push   ebx
  408688:	ja     0x40863d
  40868a:	fisttp QWORD PTR [ebx+0x5e478900]
  408690:	scas   al,BYTE PTR es:[edi]
  408691:	pushf  
  408692:	xor    eax,DWORD PTR [eax]
  408694:	add    BYTE PTR [eax],cl
  408696:	call   0x76ca6f20
  40869b:	pusha  
  40869c:	jb     0x4086d4
  40869e:	mov    DWORD PTR [ebp-0x63517401],eax
  4086a4:	xchg   edi,eax
  4086a5:	retf   
  4086a6:	or     BYTE PTR [eax],al
  4086a8:	sldt   WORD PTR [ebx*2-0x610538ff]
  4086b0:	div    BYTE PTR [ebx-0x75]
  4086b3:	add    bh,bh
  4086b5:	push   DWORD PTR [ebx+0x64]
  4086b8:	ret    0x56c9
  4086bb:	int3   
  4086bc:	add    BYTE PTR [ecx+0x15d8b],cl
  4086c2:	add    eax,DWORD PTR [edi+eax*4+0x80108b3]
  4086c9:	add    BYTE PTR [edx+0x63],dl
  4086cc:	je     0x4086d7
  4086ce:	dec    DWORD PTR [ebx-0x7a743301]
  4086d4:	(bad)  
  4086d6:	add    eax,esp
  4086d8:	pop    eax
  4086d9:	xchg   esi,eax
  4086da:	or     BYTE PTR [ebx-0xd2a74ff],cl
  4086e0:	ja     0x408758
  4086e2:	push   ebp
  4086e3:	add    BYTE PTR [eax],al
  4086e5:	add    BYTE PTR [ecx],al
  4086e7:	pop    ebp
  4086e8:	inc    esi
  4086e9:	dec    ebp
  4086ea:	sbb    DWORD PTR [esi],eax
  4086ec:	adc    eax,0x4748ba0
  4086f1:	add    BYTE PTR [edx-0x7a21fb66],dl
  4086f7:	add    BYTE PTR [ebx-0x33ff7500],cl
  4086fd:	int3   
  4086fe:	pop    es
  4086ff:	inc    ebp
  408700:	push   ebp
  408701:	mov    dl,BYTE PTR ds:0x9650ffcc
  408707:	pushf  
  408708:	hlt    
  408709:	gs je  0x4086d8
  40870c:	add    esi,DWORD PTR [ebx+ecx*4-0x75]
  408710:	or     DWORD PTR [ebx+0x2f144bb7],0x0
  408717:	add    BYTE PTR [eax-0x75],dl
  40871a:	sahf   
  40871b:	jmp    0x469e0cd4
  408720:	add    BYTE PTR [eax+0x0],dl
  408723:	sldt   WORD PTR [esi+eax*4]
  408727:	or     BYTE PTR ds:0x8b01ffa4,0x89
  40872e:	shr    BYTE PTR [eax+edi*4+0x8008ba2],0xcc
  408736:	jmp    0x408704
  408738:	je     0x40873a
  40873a:	nop
  40873b:	fld    DWORD PTR gs:[esp+ebp*8-0x60fffc00]
  408743:	jbe    0x40879a
  408745:	pop    ebx
  408746:	or     BYTE PTR [ebp-0x40],al
  408749:	or     BYTE PTR [ebp-0x12747477],cl
  40874f:	inc    esp
  408750:	mov    ebp,0x8b74ebfa
  408755:	add    BYTE PTR [eax-0x10],bh
  408758:	mov    edx,0x8b89000c
  40875d:	add    DWORD PTR [eax],0xffffffcc
  408760:	inc    ebp
  408761:	add    BYTE PTR [ebp+ecx*4+0x5d],bl
  408765:	lea    eax,[eax]
  408767:	lea    ecx,[ebp+0x15a7c5cc]
  40876d:	sbb    eax,0x55eb004d
  408772:	int3   
  408773:	or     BYTE PTR [eax],al
  408775:	add    ah,dl
  408777:	mov    BYTE PTR [eax-0x21],dh
  40877a:	add    BYTE PTR [ebx-0x4f1a13f1],cl
  408780:	fisttp DWORD PTR [ecx]
  408782:	add    edi,edi
  408784:	add    ah,cl
  408786:	loopne 0x408788
  408788:	add    BYTE PTR [ebx-0x7165b4c6],cl
  40878e:	mov    edi,edi
  408790:	add    BYTE PTR [eax],al
  408792:	repz pop eax
  408794:	into   
  408795:	pop    ds
  408796:	jae    0x4dc397e9
  40879c:	add    DWORD PTR [eax],ecx
  40879e:	mov    ebp,0x8b8bece9
  4087a3:	mov    esp,ecx
  4087a5:	add    BYTE PTR [edi+eax*2-0x6b],bh
  4087a9:	mov    ebx,0x1460075
  4087ae:	inc    DWORD PTR [eax]
  4087b0:	xor    ecx,DWORD PTR [ebp+0x67277a2c]
  4087b6:	add    BYTE PTR [eax],al
  4087b8:	add    DWORD PTR [eax+ebp*4],eax
  4087bb:	adc    eax,0x46008f27
  4087c0:	add    edi,edi
  4087c2:	adc    BYTE PTR [eax],al
  4087c4:	add    BYTE PTR ds:0x53a45ea3,dl
  4087ca:	(bad)  
  4087cb:	call   0x61170cdc
  4087d0:	add    edx,DWORD PTR [esp+ecx*8+0x10ff5503]
  4087d7:	mov    ecx,DWORD PTR [ebx+0x4c283400]
  4087dd:	sub    al,0x1
  4087df:	or     BYTE PTR [eax],al
  4087e1:	inc    ebp
  4087e2:	and    DWORD PTR [ecx-0x3f],edi
  4087e5:	mov    esp,0x894500
  4087ea:	push   eax
  4087eb:	add    BYTE PTR [eax],al
  4087ed:	add    BYTE PTR [edx-0x3faa7452],dh
  4087f3:	add    DWORD PTR [ebx+esi*1],ecx
  4087f6:	mov    ds:0xc01e2154,al
  4087fb:	add    BYTE PTR [ebp+0xf000089],al
  408801:	add    DWORD PTR [esi-0x333c05f9],edi
  408807:	push   ebp
  408808:	add    BYTE PTR [eax],al
  40880a:	js     0x408799
  40880c:	adc    DWORD PTR [ecx],edi
  40880e:	str    WORD PTR [eax]
  408811:	add    edx,DWORD PTR [ebp-0x75]
  408814:	fisttp QWORD PTR [ebx-0x61783b3e]
  40881a:	int3   
  40881b:	adc    eax,0x21b900ff
  408820:	adc    BYTE PTR [esi+0x8b7589],dh
  408826:	add    ch,bl
  408828:	mov    edx,DWORD PTR [esi-0x2e]
  40882b:	inc    esi
  40882c:	mov    edx,0x56cceb19
  408831:	add    al,dh
  408833:	jo     0x4087be
  408835:	mov    eax,0xddeb8b
  40883a:	inc    DWORD PTR [eax]
  40883c:	mov    ecx,esp
  40883e:	loope  0x40882b
  408840:	cmp    al,0x11
  408842:	shl    BYTE PTR [eax+eax*1+0x74],0x8c
  408847:	jmp    0xecb5519f
  40884c:	lea    ecx,[ecx-0x33af0100]
  408852:	out    0x8d,al
  408854:	sub    BYTE PTR [edx],ah
  408856:	ror    BYTE PTR [ecx-0x4a86fd00],0xbb
  40885d:	loopne 0x408874
  40885f:	add    BYTE PTR [esp+eax*1-0x7b],dh
  408863:	call   DWORD PTR [eax-0x34]
  408866:	imul   ebp,DWORD PTR [esi+0x1000b1e],0x74
  40886d:	add    BYTE PTR [edi+0x79],bl
  408870:	sub    bh,BYTE PTR [edx+0x0]
  408873:	jnp    0x408d45
  408879:	add    bl,bl
  40887b:	lea    esp,[ebx]
  40887d:	(bad)  
  40887e:	int3   
  40887f:	adc    ah,cl
  408881:	(bad)  
  408882:	mov    eax,0x5ddcf7a7
  408887:	add    eax,ebp
  408889:	add    DWORD PTR [esi-0x1],eax
  40888c:	lea    eax,[eax]
  40888e:	dec    ebp
  40888f:	ds nop
  408891:	ror    BYTE PTR [eax],cl
  408893:	jne    0x408895
  408895:	or     bl,ah
  408897:	sbb    eax,0x8b00724a
  40889c:	loopne 0x40889d
  40889e:	test   eax,esp
  4088a0:	test   DWORD PTR [ecx],eax
  4088a2:	jns    0x408845
  4088a4:	mov    ebp,0xebff01df
  4088a9:	xor    edx,DWORD PTR [edi]
  4088ab:	inc    ebx
  4088ac:	xchg   ecx,eax
  4088ad:	iret   
  4088ae:	add    BYTE PTR [edi],cl
  4088b0:	add    DWORD PTR [eax],0x1
  4088b3:	add    BYTE PTR [eax*2-0x5ebc1c3d],al
  4088ba:	stos   BYTE PTR es:[edi],al
  4088bb:	add    BYTE PTR [eax*2-0x40c39ff0],cl
  4088c2:	stos   DWORD PTR es:[edi],eax
  4088c3:	mov    DWORD PTR [ebp-0x18],edx
  4088c6:	(bad)  
  4088c7:	in     al,dx
  4088c8:	push   ebp
  4088c9:	loopne 0x4088cb
  4088cb:	imul   ecx,DWORD PTR [ebx-0x74ef8d5d],0x0
  4088d2:	int3   
  4088d3:	xchg   edi,eax
  4088d4:	xor    al,0x22
  4088d6:	aad    0x75
  4088d8:	inc    esi
  4088d9:	mov    DWORD PTR ds:0xcc000000,edx
  4088df:	ret    0x9e70
  4088e2:	pusha  
  4088e3:	add    BYTE PTR [eax],al
  4088e5:	add    BYTE PTR [eax],al
  4088e7:	dec    esp
  4088e8:	out    dx,eax
  4088e9:	fsub   DWORD PTR [esi]
  4088eb:	mov    DWORD PTR [eax],0xcc8b0100
  4088f1:	mov    ebx,DWORD PTR [ebp-0x39]
  4088f4:	add    al,BYTE PTR [ecx+ecx*2]
  4088f7:	add    DWORD PTR [eax],eax
  4088f9:	dec    ebp
  4088fa:	mov    edx,edi
  4088fc:	pop    edx
  4088fd:	xlat   BYTE PTR ds:[ebx]
  4088fe:	cmp    eax,0x1750156
  408903:	fld    QWORD PTR [eax]
  408905:	mov    eax,DWORD PTR [eax]
  408907:	retf   
  408908:	dec    ebp
  408909:	sub    DWORD PTR [eax],ecx
  40890b:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  40890f:	sub    ch,BYTE PTR [ecx-0x4c]
  408912:	dec    edi
  408913:	int3   
  408914:	add    BYTE PTR [ecx],al
  408916:	add    BYTE PTR [ebx+0x23cc8b89],cl
  40891c:	add    ah,BYTE PTR [edi]
  40891e:	sub    al,0x0
  408920:	int3   
  408921:	shl    BYTE PTR [ebx],0x82
  408924:	jge    0x408977
  408926:	push   es
  408927:	orps   xmm1,XMMWORD PTR [ebx-0x3374f773]
  40892e:	add    dh,dh
  408930:	test   eax,0xffcc9df3
  408935:	xor    ecx,DWORD PTR [ecx-0x11a3d7a8]
  40893b:	mov    DWORD PTR [eax],0x5d0075dd
  408941:	add    BYTE PTR [eax],al
  408943:	leave  
  408944:	add    DWORD PTR [eax-0x60],eax
  408947:	push   ebp
  408948:	test   DWORD PTR [ebp+0x0],esi
  40894b:	xor    eax,0xc736c4
  408950:	add    BYTE PTR [eax],cl
  408952:	ror    BYTE PTR [ebx-0x77aff375],0x90
  408959:	sbb    al,0x3a
  40895b:	xor    ecx,esp
  40895d:	push   esi
  40895e:	int3   
  40895f:	sub    BYTE PTR [eax],0xaa
  408962:	add    BYTE PTR es:0x46,dl
  408969:	add    BYTE PTR [esi+0x6e],dl
  40896c:	data16 mov cl,BYTE PTR [esi+0x898bcc]
  408973:	jle    0x40895e
  408975:	cmp    al,0x49
  408977:	je     0x408904
  408979:	push   esi
  40897a:	jne    0x4089af
  40897c:	mov    ebx,ebp
  40897e:	mov    ebx,DWORD PTR [ebx]
  408980:	mov    dh,0xa4
  408982:	push   0xffffffdd
  408984:	mov    eax,DWORD PTR [eax]
  408986:	loopne 0x4089e1
  408988:	nop
  408989:	inc    esp
  40898a:	out    dx,eax
  40898b:	add    al,al
  40898d:	int3   
  40898e:	inc    ebp
  40898f:	dec    esp
  408991:	add    BYTE PTR [ebp+0x74],dl
  408994:	and    cl,cl
  408996:	js     0x408997
  408998:	or     BYTE PTR [esi+0x4d],al
  40899b:	sahf   
  40899c:	in     eax,dx
  40899d:	and    esp,eax
  40899f:	mov    eax,DWORD PTR [eax]
  4089a1:	add    BYTE PTR [eax],al
  4089a3:	add    BYTE PTR [ebp-0x7d],al
  4089a6:	inc    DWORD PTR [ecx-0x23]
  4089a9:	sbb    eax,DWORD PTR [edx-0x73]
  4089ac:	or     DWORD PTR [eax],0xffffff83
  4089af:	sub    eax,0xdd8cd8b8
  4089b4:	inc    ebp
  4089b5:	inc    DWORD PTR [eax]
  4089b7:	ud0    edi,edi
  4089ba:	add    DWORD PTR [edx],ecx
  4089bc:	je     0x4089e8
  4089be:	in     al,0x74
  4089c0:	test   DWORD PTR [ecx+0x29bdee00],ecx
  4089c6:	push   0x8b00ff08
  4089cb:	adc    bh,bh
  4089cd:	add    bh,al
  4089cf:	(bad)  
  4089d0:	(bad)  
  4089d1:	sub    BYTE PTR [eax],dh
  4089d3:	add    bh,bh
  4089d5:	or     al,0xcc
  4089d7:	je     0x408979
  4089d9:	shl    al,0x0
  4089dc:	ror    ah,0x46
  4089df:	inc    ebp
  4089e0:	mov    eax,DWORD PTR [eax]
  4089e2:	add    BYTE PTR [edi+0x4574e47d],bl
  4089e8:	lea    eax,[ecx]
  4089ea:	inc    ebp
  4089eb:	dec    ebp
  4089ec:	sub    ecx,esi
  4089ee:	add    BYTE PTR [eax],0x45
  4089f1:	rol    BYTE PTR [ecx],0x0
  4089f4:	mov    edi,edi
  4089f6:	or     BYTE PTR [edx-0xaccd0f],bl
  4089fc:	int3   
  4089fd:	mov    ecx,DWORD PTR [ebx-0x6bccfe25]
  408a03:	add    BYTE PTR [edx+0x0],ch
  408a06:	mov    eax,DWORD PTR [edi+edi*8]
  408a09:	mov    eax,DWORD PTR [eax]
  408a0b:	or     BYTE PTR [edi],dl
  408a0d:	or     BYTE PTR [edi+0x0],cl
  408a10:	test   DWORD PTR [eax+eax*1-0x37],esi
  408a14:	or     edx,DWORD PTR [eax+0x8b00cd]
  408a1a:	int3   
  408a1b:	or     BYTE PTR [ebx-0x379733f4],cl
  408a21:	cmp    DWORD PTR [ebx],esp
  408a23:	int3   
  408a24:	add    ch,bl
  408a26:	add    BYTE PTR [edi-0x13],al
  408a29:	out    dx,al
  408a2a:	dec    esi
  408a2b:	inc    ebp
  408a2c:	add    BYTE PTR [ebx+0x6a0000],cl
  408a32:	jne    0x408a87
  408a34:	cdq    
  408a35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a36:	cdq    
  408a37:	call   0xf7cb9a24
  408a3c:	mov    dl,0xf4
  408a3e:	push   ecx
  408a3f:	pop    ebp
  408a40:	add    al,al
  408a42:	mov    ecx,DWORD PTR [eax]
  408a44:	add    BYTE PTR [ecx],al
  408a46:	mov    edx,DWORD PTR ds:0xf54ba3
  408a4c:	int3   
  408a4d:	or     BYTE PTR [eax],al
  408a4f:	(bad)  
  408a50:	xchg   ebx,eax
  408a51:	aam    0x26
  408a53:	push   esi
  408a54:	add    BYTE PTR [eax],al
  408a56:	test   DWORD PTR [eax],eax
  408a58:	add    DWORD PTR [eax],eax
  408a5a:	loopne 0x408a71
  408a5c:	cdq    
  408a5d:	mov    eax,ds:0x44683
  408a62:	add    BYTE PTR [ecx],dh
  408a64:	pop    esp
  408a65:	cmp    edx,DWORD PTR [ebx+0x3]
  408a68:	push   0xffffffe8
  408a6a:	add    bh,bh
  408a6c:	add    DWORD PTR [eax],edx
  408a6e:	add    BYTE PTR [edx-0x3a],dh
  408a71:	imul   eax,DWORD PTR es:[ebp-0x1],0x0
  408a76:	inc    esi
  408a77:	push   0x5b
  408a79:	mov    bl,BYTE PTR [esi+0xc89ff8b]
  408a7f:	int3   
  408a80:	mov    eax,DWORD PTR [ecx]
  408a82:	jmp    0x408a58
  408a84:	adc    BYTE PTR [ecx+0x3],ah
  408a87:	mov    ecx,esp
  408a89:	inc    esi
  408a8a:	or     BYTE PTR [ebp+0x507cfc00],ah
  408a90:	add    DWORD PTR [eax],eax
  408a92:	test   DWORD PTR [eax],eax
  408a94:	add    ah,ch
  408a96:	mov    edi,DWORD PTR [ecx-0x74ae660d]
  408a9c:	rol    BYTE PTR [ebx+0x20757c04],0x21
  408aa3:	push   esi
  408aa4:	mov    edi,edi
  408aa6:	add    BYTE PTR [eax],al
  408aa8:	inc    DWORD PTR [eax]
  408aaa:	add    ecx,esi
  408aac:	mov    cl,0x29
  408aae:	enter  0xffff,0x75
  408ab2:	push   0xffffff96
  408ab4:	fistp  DWORD PTR [ebx]
  408ab6:	add    eax,0x10c7008b
  408abb:	or     DWORD PTR [ebx+0xc5110c0],0x14
  408ac2:	ret    0x5608
  408ac5:	jne    0x408aa7
  408ac7:	jl     0x408ab7
  408ac9:	shl    BYTE PTR [edi-0x7438a201],1
  408acf:	add    BYTE PTR [ebx-0x265522bb],cl
  408ad5:	sub    eax,0x75838b29
  408ada:	mov    edx,ecx
  408adc:	pop    edx
  408add:	and    dh,BYTE PTR ds:0xc8b6a
  408ae3:	push   esi
  408ae4:	adc    bh,bh
  408ae6:	fstp   QWORD PTR [eax+edx*2]
  408ae9:	sbb    al,dh
  408aeb:	xor    edx,DWORD PTR ds:0xbe2eff00
  408af1:	xchg   DWORD PTR ds:0xe8898b,edi
  408af7:	inc    DWORD PTR [eax]
  408af9:	invd   
  408afb:	pop    esi
  408afc:	pop    eax
  408afd:	das    
  408afe:	push   es
  408aff:	je     0x408b01
  408b01:	mov    edi,edi
  408b03:	ja     0x408aeb
  408b05:	bound  edx,QWORD PTR [ebp+0x0]
  408b08:	add    ah,cl
  408b0a:	adc    eax,0x4d
  408b0f:	out    dx,al
  408b10:	out    dx,eax
  408b11:	jnp    0x408b37
  408b13:	int3   
  408b14:	add    BYTE PTR [ebx],dh
  408b16:	add    cl,dl
  408b18:	fwait
  408b19:	adc    DWORD PTR fs:[ebx+0x1eb8bff],ecx
  408b20:	jne    0xcfea6a26
  408b26:	add    ax,WORD PTR [ecx]
  408b29:	add    DWORD PTR [eax],eax
  408b2b:	cs sbb eax,0x108173
  408b31:	add    bh,al
  408b33:	add    BYTE PTR [eax],al
  408b35:	mov    DWORD PTR [ebp-0x16],edx
  408b38:	(bad)  
  408b39:	pop    ds
  408b3a:	dec    esi
  408b3b:	pop    ebp
  408b3c:	int3   
  408b3d:	inc    ebp
  408b3e:	int3   
  408b3f:	mov    al,0x45
  408b41:	add    DWORD PTR [eax+eax*1],ecx
  408b44:	add    BYTE PTR [ebx+eax*4],cl
  408b47:	add    BYTE PTR [ebx-0x39274fc],cl
  408b4d:	sbb    eax,edx
  408b4f:	int3   
  408b50:	bswap  esp
  408b52:	add    al,0xd6
  408b54:	jo     0x408b8c
  408b56:	adc    DWORD PTR [ebp+0x56],esi
  408b59:	inc    DWORD PTR [eax]
  408b5b:	or     al,0x1
  408b5d:	dec    ebp
  408b5e:	(bad)  
  408b5f:	fdiv   st(1),st
  408b61:	ins    BYTE PTR es:[edi],dx
  408b62:	mov    ds:0xff8585dd,eax
  408b67:	inc    ebp
  408b68:	cmp    BYTE PTR [ebx+0x37],bh
  408b6b:	add    DWORD PTR [eax],0x0
  408b6e:	add    BYTE PTR [eax],al
  408b70:	mov    DWORD PTR [ecx],0x2dbbb5c0
  408b76:	cmp    al,0x1
  408b78:	add    BYTE PTR [ebx-0x38d78601],cl
  408b7e:	jb     0x408b6c
  408b80:	add    BYTE PTR [eax+ecx*1],al
  408b83:	mov    eax,DWORD PTR [eax]
  408b85:	loopne 0x408b86
  408b87:	or     eax,ecx
  408b89:	imul   esi,DWORD PTR [edi+0xc],0xffffffcc
  408b8d:	add    ch,bl
  408b8f:	ret    
  408b90:	ins    BYTE PTR es:[edi],dx
  408b91:	aas    
  408b92:	sbb    BYTE PTR [eax+eax*1],al
  408b95:	mov    ecx,DWORD PTR [ebx-0x1f063c34]
  408b9b:	imul   ecx,DWORD PTR [eax],0x8b8d8983
  408ba1:	mov    eax,DWORD PTR [eax]
  408ba3:	push   ebp
  408ba4:	out    dx,al
  408ba5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ba6:	popa   
  408ba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ba8:	mov    esi,DWORD PTR [eax+eax*1-0x77]
  408bac:	outs   dx,BYTE PTR ds:[esi]
  408bad:	adc    BYTE PTR [edx+eax*8+0x5601cc00],al
  408bb4:	add    BYTE PTR [ebp+0x1],bl
  408bb7:	add    BYTE PTR [ecx+0x27],cl
  408bba:	js     0x408bad
  408bbc:	int3   
  408bbd:	rol    BYTE PTR [eax],0xcc
  408bc0:	jns    0x408c06
  408bc2:	pop    ebx
  408bc3:	fild   DWORD PTR [esi+0x45]
  408bc6:	lea    eax,[eax]
  408bc8:	mov    eax,DWORD PTR [eax]
  408bca:	add    BYTE PTR [ebp-0x46],cl
  408bcd:	or     al,BYTE PTR [edx-0x18]
  408bd0:	adc    BYTE PTR [eax],al
  408bd2:	int3   
  408bd3:	push   ebp
  408bd4:	add    ch,BYTE PTR [ebx+0x3300afb3]
  408bda:	add    BYTE PTR [esi+0x0],dl
  408bdd:	or     al,0x8b
  408bdf:	int3   
  408be0:	shl    dl,1
  408be2:	lock ror DWORD PTR [eax+ecx*1],1
  408be6:	push   eax
  408be7:	or     BYTE PTR [edi+0x24],bl
  408bea:	inc    ebp
  408beb:	adc    eax,DWORD PTR [edi+edi*8]
  408bee:	inc    ebp
  408bef:	add    BYTE PTR [ecx],al
  408bf1:	add    BYTE PTR [eax],cl
  408bf3:	inc    esi
  408bf4:	enter  0xdde2,0xac
  408bf8:	push   esi
  408bf9:	ror    ah,0x8b
  408bfc:	jl     0x408b8e
  408bfe:	push   esi
  408bff:	mov    ecx,esp
  408c01:	call   0x408de6
  408c06:	add    al,0x56
  408c08:	xor    ch,dl
  408c0a:	add    ecx,DWORD PTR [ebx-0x33a28bf8]
  408c10:	fdiv   st,st(0)
  408c12:	fld    QWORD PTR [esi+0x15]
  408c15:	mov    eax,DWORD PTR [ebp+0x758bcc00]
  408c1b:	shl    bh,0xd9
  408c1e:	out    dx,al
  408c1f:	pop    ds
  408c20:	inc    ebp
  408c21:	add    DWORD PTR [edx+ebp*2],0xffffffc1
  408c25:	rcl    BYTE PTR [ecx],cl
  408c27:	loope  0x408c29
  408c29:	in     al,dx
  408c2a:	add    BYTE PTR [eax],al
  408c2c:	mov    esi,DWORD PTR [esp+ecx*8+0x0]
  408c30:	cld    
  408c31:	repnz inc ebp
  408c33:	lahf   
  408c34:	push   eax
  408c35:	add    ah,cl
  408c37:	push   esi
  408c38:	jecxz  0x408ca7
  408c3a:	and    al,ah
  408c3c:	push   eax
  408c3d:	in     al,dx
  408c3e:	add    BYTE PTR [eax],al
  408c40:	add    ah,cl
  408c42:	xor    eax,DWORD PTR [esi-0x3f]
  408c45:	xchg   esp,eax
  408c46:	stos   DWORD PTR es:[edi],eax
  408c47:	je     0x408c4d
  408c49:	adc    DWORD PTR [eax],0xffffffc0
  408c4c:	mov    ebx,0xce16c1
  408c51:	inc    ebp
  408c52:	add    DWORD PTR [eax+0x5d],edx
  408c55:	mov    eax,DWORD PTR [eax]
  408c57:	(bad)  
  408c58:	mov    edi,0x8b2839c1
  408c5d:	add    edi,edi
  408c5f:	add    ecx,eax
  408c61:	adc    DWORD PTR ds:0x40,0xffffff8d
  408c68:	int3   
  408c69:	add    eax,esp
  408c6b:	add    cl,al
  408c6d:	cmp    DWORD PTR [eax],0xc000c7
  408c73:	xor    DWORD PTR [esi-0x336f0eba],0x1
  408c7a:	mov    DWORD PTR [ebx-0x76ff3400],ecx
  408c80:	xchg   DWORD PTR [edx],ebx
  408c82:	pop    eax
  408c83:	test   al,0xcc
  408c85:	mov    DWORD PTR [ebp-0x1],ecx
  408c88:	adc    bh,BYTE PTR [ebx]
  408c8a:	loopne 0x408c71
  408c8c:	or     bh,bh
  408c8e:	(bad)  
  408c8f:	mov    ecx,esp
  408c91:	mov    eax,DWORD PTR [eax]
  408c93:	mov    edx,DWORD PTR [ecx+0x50111ddd]
  408c99:	call   0xff5c8ca2
  408c9e:	pop    esp
  408c9f:	lods   eax,DWORD PTR ds:[esi]
  408ca0:	fnsave [ebx+ecx*4-0x75]
  408ca4:	mov    esi,DWORD PTR [ebp+0xc]
  408ca7:	jmp    DWORD PTR [edx+0x1daea71]
  408cad:	add    BYTE PTR [ebx+0x6425f2e8],cl
  408cb3:	push   edi
  408cb4:	int3   
  408cb5:	int3   
  408cb6:	int3   
  408cb7:	add    DWORD PTR [ebp-0x40],edx
  408cba:	or     al,0xc0
  408cbc:	test   eax,0xc11be6
  408cc1:	add    edi,edi
  408cc3:	mov    ebx,eax
  408cc5:	rcl    BYTE PTR [esi],1
  408cc7:	stos   DWORD PTR es:[edi],eax
  408cc8:	add    BYTE PTR [eax],al
  408cca:	ror    BYTE PTR [ebx+0x0],0xe8
  408cd1:	clc    
  408cd2:	je     0x408d30
  408cd4:	add    ch,bl
  408cd6:	or     al,0x4d
  408cd8:	sti    
  408cd9:	adc    al,BYTE PTR [edx+0x1d]
  408cdc:	mov    DWORD PTR [ebx-0x74ba17f8],ecx
  408ce2:	test   DWORD PTR [ebx-0x30ec1a67],ecx
  408ce8:	or     bh,bh
  408cea:	mov    DWORD PTR [eax],eax
  408cec:	cmp    esp,ebx
  408cee:	call   FWORD PTR [esi+0x800ff8b]
  408cf4:	push   esi
  408cf5:	int3   
  408cf6:	add    BYTE PTR [eax],al
  408cf8:	inc    edx
  408cf9:	loopne 0x408cce
  408cfb:	(bad)  
  408cfc:	int3   
  408cfd:	add    bl,ch
  408cff:	or     ch,bh
  408d01:	adc    DWORD PTR [edx+eax*4+0x15898b8b],esi
  408d08:	or     al,0xdd
  408d0a:	add    BYTE PTR [ebp-0x3a],dh
  408d0d:	aad    0x56
  408d0f:	int3   
  408d10:	mov    esi,DWORD PTR [eax+eax*8+0x45]
  408d14:	sbb    dh,al
  408d16:	dec    esp
  408d17:	(bad)  
  408d18:	dec    DWORD PTR [ebx-0x74fe33eb]
  408d1e:	shl    BYTE PTR [ebp+0x17],0x30
  408d22:	sbb    DWORD PTR [ecx+0x5d008b],edi
  408d28:	inc    eax
  408d29:	adc    BYTE PTR [edx-0x74740032],bh
  408d2f:	mov    esi,DWORD PTR [ebp-0x77]
  408d32:	add    DWORD PTR [eax],eax
  408d34:	(bad)  
  408d35:	and    BYTE PTR [edx+ecx*2],bl
  408d38:	add    BYTE PTR [eax],al
  408d3a:	int3   
  408d3b:	in     al,dx
  408d3c:	and    edx,DWORD PTR [ebx]
  408d3e:	scas   eax,DWORD PTR es:[edi]
  408d3f:	mov    al,ds:0x8b8b016a
  408d44:	inc    DWORD PTR [ebp+0x2ed0000]
  408d4a:	fsubr  st(3),st
  408d4c:	mov    ecx,DWORD PTR [ebp+0x0]
  408d4f:	int3   
  408d50:	fcom   QWORD PTR ds:0x741825
  408d56:	dec    ebp
  408d57:	jne    0x408ce4
  408d59:	add    BYTE PTR [eax],al
  408d5b:	push   eax
  408d5c:	sub    bl,dl
  408d5e:	in     eax,0xd7
  408d60:	add    ah,cl
  408d62:	rol    BYTE PTR [esi+edx*4],0x46
  408d66:	mov    eax,0x3cc00db
  408d6b:	add    BYTE PTR [eax],al
  408d6d:	add    BYTE PTR [ecx+eax*1],cl
  408d70:	add    edx,DWORD PTR [ebx+eax*1+0x46e0c703]
  408d77:	test   DWORD PTR [eax-0x7495daf1],ecx
  408d7d:	or     bh,bh
  408d7f:	add    BYTE PTR [eax],al
  408d81:	test   DWORD PTR [eax],edx
  408d83:	add    BYTE PTR [edi+ebx*1+0x46],al
  408d87:	mov    bl,0xdd
  408d89:	jmp    0x408d57
  408d8b:	add    DWORD PTR [ecx+eax*2],esp
  408d8e:	sbb    eax,0x8d21
  408d93:	or     al,0x8b
  408d95:	inc    DWORD PTR [eax]
  408d97:	add    bh,dh
  408d99:	cmc    
  408d9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d9b:	and    eax,DWORD PTR [ecx]
  408d9d:	test   DWORD PTR [eax],ecx
  408d9f:	add    BYTE PTR [ecx-0x7c],bh
  408da2:	rcr    ebp,1
  408da4:	jmp    0x408d83
  408da6:	add    BYTE PTR [eax],al
  408da8:	pop    ebp
  408da9:	add    BYTE PTR [eax],al
  408dab:	add    BYTE PTR [esi+0x3e13444],cl
  408db1:	add    BYTE PTR [ebx+0x39229108],cl
  408db7:	push   0x8
  408db9:	rol    BYTE PTR [ecx],0x45
  408dbc:	add    BYTE PTR [ebx+0x4ceddff],al
  408dc2:	lds    ebp,FWORD PTR [ecx+0xc4d0008]
  408dc8:	pop    ds
  408dc9:	std    
  408dca:	inc    ebx
  408dcb:	int    0x0
  408dcd:	int3   
  408dce:	test   DWORD PTR [eax],eax
  408dd0:	add    ecx,DWORD PTR [ebx+0x26a40c8b]
  408dd6:	in     al,0x34
  408dd8:	je     0x408d65
  408dda:	int3   
  408ddb:	add    BYTE PTR [ebp-0x3],ch
  408dde:	adc    dl,BYTE PTR [eax+0x0]
  408de1:	mov    edi,edi
  408de3:	int3   
  408de4:	mov    eax,DWORD PTR [ebp-0x34]
  408de7:	dec    esi
  408de9:	mov    esp,esp
  408deb:	(bad)  
  408dec:	xor    eax,DWORD PTR [ecx]
  408dee:	add    bh,bh
  408df0:	fcom   DWORD PTR [edx+0x43]
  408df3:	and    edi,edi
  408df5:	mov    eax,DWORD PTR [eax]
  408df7:	add    BYTE PTR [eax],al
  408df9:	add    BYTE PTR [ebp+0x0],bl
  408dfc:	ror    BYTE PTR [edx],1
  408dfe:	enter  0x809,0xff
  408e02:	mov    eax,DWORD PTR [eax]
  408e04:	outs   dx,BYTE PTR ds:[esi]
  408e05:	add    eax,edi
  408e07:	in     al,dx
  408e08:	add    BYTE PTR [ebp+0x0],cl
  408e0b:	or     al,0x8b
  408e0d:	mov    eax,eax
  408e0f:	mov    DWORD PTR [ebx],eax
  408e11:	mov    bh,0xc5
  408e13:	mov    es,WORD PTR [eax]
  408e15:	push   0x0
  408e17:	mov    esp,DWORD PTR [ebx+edx*4+0xd]
  408e1b:	rol    DWORD PTR [ecx],0x0
  408e1e:	add    al,ah
  408e20:	inc    DWORD PTR [eax]
  408e22:	or     BYTE PTR [eax],al
  408e24:	jecxz  0x408dba
  408e26:	jmp    DWORD PTR [edi+0xf]
  408e29:	inc    DWORD PTR [ebp-0x18]
  408e2c:	fdiv   st,st(5)
  408e2e:	jne    0x408e38
  408e30:	push   esi
  408e31:	inc    ebp
  408e32:	test   esp,ecx
  408e34:	fisttp QWORD PTR [ecx-0x27080075]
  408e3a:	loope  0x408e4c
  408e3c:	mov    eax,DWORD PTR [ebx+0x11d285cc]
  408e42:	adc    ecx,DWORD PTR [esi]
  408e44:	inc    DWORD PTR [eax]
  408e46:	add    bh,bh
  408e48:	test   DWORD PTR [ebx-0x5bae9600],ecx
  408e4e:	inc    esi
  408e4f:	dec    esp
  408e50:	mov    DWORD PTR [ebp+0x0],eax
  408e53:	mov    eax,DWORD PTR [edx]
  408e55:	xchg   edi,eax
  408e56:	ss pop ebx
  408e58:	add    BYTE PTR [eax],al
  408e5a:	add    eax,esp
  408e5c:	lea    ecx,[edi]
  408e5e:	test   DWORD PTR [edx+edx*2],ecx
  408e61:	pop    ss
  408e62:	arpl   WORD PTR [ebp-0x74fe2300],cx
  408e68:	lock fistp QWORD PTR [edi]
  408e6b:	add    edx,DWORD PTR [eax+0x0]
  408e6e:	je     0x408e3c
  408e70:	add    BYTE PTR [eax+eax*1],al
  408e73:	mov    DWORD PTR [edi+esi*1-0x5b],0xc08c9
  408e7b:	mov    ecx,DWORD PTR [ebx]
  408e7d:	sbb    eax,0xc226
  408e82:	mov    ebp,eax
  408e84:	push   esi
  408e85:	call   0xc3cf0415
  408e8a:	nop
  408e8b:	jbe    0x408e8c
  408e8d:	add    bh,bh
  408e8f:	add    BYTE PTR [eax+0x7],ch
  408e92:	sbb    ch,bh
  408e94:	add    esp,ecx
  408e96:	push   esi
  408e97:	add    BYTE PTR [eax],al
  408e99:	add    BYTE PTR [edi],cl
  408e9b:	add    BYTE PTR [edx],ch
  408e9d:	xchg   esi,eax
  408e9e:	lock mov cl,0x74
  408ea1:	inc    ebp
  408ea2:	(bad)  
  408ea3:	jmp    edi
  408ea5:	daa    
  408ea6:	popa   
  408ea7:	cmp    eax,0xece0ec00
  408eac:	int3   
  408ead:	or     BYTE PTR [ebx+0x1c7d1e00],cl
  408eb3:	int3   
  408eb4:	int3   
  408eb5:	or     al,0x46
  408eb7:	add    bl,al
  408eb9:	scas   al,BYTE PTR es:[edi]
  408eba:	rol    BYTE PTR [ecx],0xa2
  408ebd:	test   DWORD PTR [ebp+0x10],ebx
  408ec0:	push   ebp
  408ec1:	fistp  DWORD PTR [eax-0x49]
  408ec4:	mov    eax,0xc008515
  408ec9:	mov    ecx,DWORD PTR [eax]
  408ecb:	mov    eax,DWORD PTR [eax]
  408ecd:	call   0x89be37ec
  408ed2:	dec    DWORD PTR [edx*1-0x6e60bbef]
  408ed9:	add    BYTE PTR [eax],al
  408edb:	adc    eax,0xcc8b008b
  408ee0:	add    BYTE PTR [edx],bl
  408ee2:	fwait
  408ee3:	stos   DWORD PTR es:[edi],eax
  408ee4:	fs adc eax,0x43740089
  408eea:	push   ecx
  408eeb:	mov    dh,0x4b
  408eed:	add    BYTE PTR [eax+eax*1-0x75],dh
  408ef1:	or     al,0x4
  408ef3:	adc    eax,0xfe9c6501
  408ef8:	pop    esi
  408ef9:	add    BYTE PTR ds:0x2fab8b01,dl
  408eff:	aam    0xe1
  408f01:	add    BYTE PTR [ebx],al
  408f03:	mov    DWORD PTR [ebp-0x75],eax
  408f06:	add    BYTE PTR [esi-0x7d],al
  408f09:	imul   edi,DWORD PTR [ebp+eax*4+0x25],0xffffffcc
  408f0e:	or     al,0xcc
  408f10:	je     0x408f39
  408f12:	xor    esi,DWORD PTR [ebp-0x50]
  408f15:	adc    BYTE PTR [eax],al
  408f17:	add    DWORD PTR [eax],eax
  408f19:	add    DWORD PTR [edx+0x0],ebp
  408f1c:	adc    eax,0x9465a1c8
  408f21:	add    BYTE PTR [eax],al
  408f23:	int3   
  408f24:	or     BYTE PTR [ecx+0x4e],dl
  408f27:	rol    BYTE PTR [esi-0x23],1
  408f2a:	or     al,0xcc
  408f2c:	add    ah,cl
  408f2e:	inc    DWORD PTR [esi-0x75]
  408f31:	and    BYTE PTR [esi+0x4da191],dh
  408f37:	add    DWORD PTR [ebx-0x274d4229],ecx
  408f3d:	inc    ebp
  408f3e:	adc    BYTE PTR [ebx+0xff4d83],cl
  408f44:	mov    esp,DWORD PTR [esp+eiz*4]
  408f47:	daa    
  408f48:	inc    eax
  408f49:	add    bh,bh
  408f4b:	mov    eax,DWORD PTR [eax]
  408f4d:	js     0x408ef3
  408f4f:	in     al,0xf6
  408f51:	mov    DWORD PTR [ebp+0x1],ebx
  408f54:	int3   
  408f55:	int3   
  408f56:	mov    ecx,DWORD PTR [ebx+0x69534c8b]
  408f5c:	dec    ebx
  408f5d:	add    BYTE PTR [ebx-0x627434],cl
  408f63:	inc    esi
  408f64:	xor    ecx,esp
  408f66:	lea    ecx,[ebx-0x74ff7439]
  408f6c:	mov    edx,DWORD PTR [esi+0xddc338]
  408f72:	add    DWORD PTR [esi+0x4d],0x58
  408f76:	push   eax
  408f77:	test   al,bl
  408f79:	add    BYTE PTR [ebp+0x0],cl
  408f7c:	je     0x408ff3
  408f7e:	add    DWORD PTR [ebp-0x79f3575],ecx
  408f84:	(bad)  
  408f85:	in     al,dx
  408f86:	mov    esi,DWORD PTR [ebx]
  408f88:	add    BYTE PTR [esi+0xbfac56],bl
  408f8e:	add    BYTE PTR [eax],al
  408f90:	add    BYTE PTR [esp+ecx*8],cl
  408f93:	dec    DWORD PTR [ebp-0x53]
  408f96:	mov    ebp,0x8308cbac
  408f9b:	add    esp,ecx
  408f9d:	dec    ebx
  408f9e:	adc    dh,al
  408fa0:	mov    esp,eax
  408fa2:	add    ah,cl
  408fa4:	push   DWORD PTR [ebx]
  408fa6:	mov    ecx,DWORD PTR [ebx+0xd353c8b]
  408fac:	sbb    eax,0x838b0008
  408fb1:	jecxz  0x408fcc
  408fb3:	bound  ebp,QWORD PTR [ebx+0x16acccc]
  408fb9:	add    ch,bl
  408fbb:	mov    esi,DWORD PTR [ebp-0x1d]
  408fbe:	imul   ebp,DWORD PTR [ebx-0x74ff7698],0x8
  408fc5:	mov    cl,0x44
  408fc7:	push   ss
  408fc8:	popa   
  408fc9:	inc    DWORD PTR [ebp+0x0]
  408fcc:	pop    ebp
  408fcd:	add    BYTE PTR [ebp+0x45],al
  408fd0:	add    bl,ah
  408fd2:	inc    ebx
  408fd3:	outs   dx,BYTE PTR ds:[esi]
  408fd4:	icebp  
  408fd5:	int3   
  408fd6:	add    DWORD PTR [ecx+0x7939a055],ecx
  408fdc:	push   eax
  408fdd:	add    DWORD PTR [ebx+0x0],eax
  408fe3:	inc    DWORD PTR [eax]
  408fe5:	mov    dh,0xb4
  408fe7:	pusha  
  408fe8:	rol    BYTE PTR [eax],cl
  408fea:	add    ah,cl
  408fec:	add    BYTE PTR [edi+0x6c],ch
  408fef:	fwait
  408ff0:	popf   
  408ff1:	push   DWORD PTR [ebp-0x1]
  408ff4:	or     al,0xcc
  408ff6:	add    al,ah
  408ff8:	add    BYTE PTR [edx],bl
  408ffa:	cmp    al,bl
  408ffc:	push   ds
  408ffd:	mov    eax,DWORD PTR [eax]
  408fff:	je     0x408fcd
  409001:	mov    WORD PTR [ebx],?
  409003:	sbb    ebp,edi
  409005:	mov    ecx,DWORD PTR [ecx+0x5689cc8b]
  40900b:	je     0x408f96
  40900d:	mov    dl,0x88
  40900f:	addr16 xchg esi,eax
  409011:	int3   
  409012:	mov    eax,DWORD PTR [ebx+0x5c798dcc]
  409018:	sbb    eax,DWORD PTR [ebx]
  40901a:	adc    DWORD PTR [eax],0xffffff8b
  40901d:	je     0x408faa
  40901f:	add    BYTE PTR [ebx],al
  409021:	mov    dh,0x59
  409023:	and    al,0x35
  409025:	call   0xcb0d5cf6
  40902a:	shl    DWORD PTR ds:0x8bcc88,cl
  409030:	add    DWORD PTR [eax],eax
  409032:	jmp    0x409035
  409034:	push   esi
  409035:	sbb    bl,BYTE PTR [ebp-0x33ffe028]
  40903b:	add    DWORD PTR [ebp+0x62],ecx
  40903e:	cs aas 
  409040:	sbb    DWORD PTR [eax],eax
  409042:	pop    ebp
  409043:	add    ah,cl
  409045:	je     0x409047
  409047:	dec    DWORD PTR [ebx+0x4cda50d8]
  40904d:	int3   
  40904e:	int3   
  40904f:	call   0x1cc5665c
  409054:	mov    ch,0x0
  409056:	int3   
  409057:	mov    DWORD PTR [eax+eax*1],ecx
  40905a:	add    DWORD PTR [ebx-0x733f68ab],ecx
  409060:	and    BYTE PTR ds:0x9e0f0001,dl
  409066:	pop    ss
  409067:	mov    WORD PTR [ecx-0x75],fs
  40906a:	inc    ebp
  40906b:	adc    al,al
  40906d:	add    BYTE PTR [eax],al
  40906f:	add    BYTE PTR [eax+0x73],dl
  409072:	imul   ebp,DWORD PTR [esi-0x4c],0x100cceb
  409079:	push   es
  40907a:	repz in eax,dx
  40907c:	cdq    
  40907d:	jmp    0x40907f
  40907f:	or     al,0xcc
  409081:	adc    BYTE PTR [eax],al
  409083:	call   FWORD PTR [ebp+0x6b]
  409086:	push   0x898b014a
  40908b:	add    BYTE PTR [ebx+0x203582c6],cl
  409091:	add    BYTE PTR [eax],al
  409093:	add    BYTE PTR [ebp+0x55],dh
  409096:	test   DWORD PTR [eax],ecx
  409098:	add    BYTE PTR [edx-0x13be5f31],dl
  40909e:	je     0x4090a0
  4090a0:	mov    esp,DWORD PTR [ecx+0x3f]
  4090a3:	dec    esi
  4090a4:	and    al,0x1
  4090a6:	add    DWORD PTR [eax],0x3
  4090a9:	pop    ebp
  4090aa:	int3   
  4090ab:	pop    ebp
  4090ac:	je     0x4090e7
  4090ae:	sbb    bl,cl
  4090b0:	enter  0x6a00,0x8d
  4090b4:	mov    esi,DWORD PTR [ebx-0x2d77cb]
  4090ba:	or     al,0x89
  4090bc:	sub    esp,0xffffff89
  4090bf:	push   esi
  4090c0:	(bad)  
  4090c1:	jle    0x4090f6
  4090c3:	mov    al,0x4c
  4090c5:	push   eax
  4090c6:	inc    ebp
  4090c7:	mov    eax,DWORD PTR [edx+ecx*4]
  4090ca:	aas    
  4090cb:	pop    ds
  4090cc:	add    al,BYTE PTR [ebp-0x748a7cab]
  4090d2:	mov    eax,DWORD PTR [eax]
  4090d4:	or     DWORD PTR [ecx],0x11
  4090d7:	mov    al,ds:0xcccccca0
  4090dc:	add    BYTE PTR ds:0x1088a1bc,bh
  4090e2:	test   esp,ecx
  4090e4:	add    BYTE PTR [esi+0x0],dl
  4090e7:	int3   
  4090e8:	mov    ecx,DWORD PTR [ebp+0x5d]
  4090eb:	sbb    eax,0x8d9
  4090f0:	add    BYTE PTR [eax],ch
  4090f2:	lds    ebp,FWORD PTR [ecx+0x11]
  4090f5:	mov    eax,DWORD PTR [eax]
  4090f7:	add    DWORD PTR [eax],eax
  4090f9:	add    BYTE PTR [ebx-0x47b8fb8c],cl
  4090ff:	fsubr  QWORD PTR ds:0xc08018b
  409105:	jnp    0x409165
  409107:	dec    eax
  409108:	push   esi
  409109:	adc    BYTE PTR [ebx-0x3f330100],cl
  40910f:	int3   
  409110:	add    BYTE PTR [esi+0x12314ac],bh
  409116:	mov    edx,DWORD PTR [eax]
  409118:	add    BYTE PTR [edi+0x1cfff01],dh
  40911e:	call   0xc9912f
  409123:	int3   
  409124:	mov    esp,DWORD PTR [esi-0x74665d2a]
  40912a:	int3   
  40912b:	or     al,0x8b
  40912d:	push   esi
  40912e:	blcs   edi,DWORD PTR [di-0x34]
  409135:	add    BYTE PTR [eax],dl
  409137:	add    BYTE PTR [eax],al
  409139:	pop    eax
  40913a:	xor    dh,BYTE PTR [esi-0x3333ff05]
  409140:	add    BYTE PTR ds:0x2387e2,dl
  409146:	jne    0x40914c
  409148:	mov    DWORD PTR [eax],eax
  40914a:	je     0x40915c
  40914c:	mov    esp,DWORD PTR [esi+0x569399a8]
  409152:	add    BYTE PTR [eax],al
  409154:	int3   
  409155:	sub    ch,ch
  409157:	icebp  
  409158:	and    ah,cl
  40915a:	inc    DWORD PTR [eax]
  40915c:	jne    0x4091b4
  40915e:	mov    DWORD PTR [ebx+0x77a029cc],eax
  409164:	and    esp,ecx
  409166:	add    DWORD PTR [eax],eax
  409168:	add    bh,ah
  40916a:	iret   
  40916b:	repnz and BYTE PTR [ebx+0xfdd8d04],cl
  409172:	push   eax
  409173:	add    BYTE PTR [eax],cl
  409175:	or     BYTE PTR [eax-0x35],dl
  409178:	(bad)  
  409179:	mov    edx,DWORD PTR ds:0x6386048b
  40917f:	mov    al,0x93
  409181:	test   DWORD PTR [eax],eax
  409183:	mov    edi,edi
  409185:	dec    DWORD PTR [ecx+0x4c845650]
  40918b:	adc    eax,0xeb1b
  409190:	call   0x461cd9a5
  409195:	int3   
  409196:	sub    eax,0xffffffcc
  409199:	mov    DWORD PTR [ebx-0x3eb1ff40],ecx
  40919f:	sub    ah,bh
  4091a1:	add    BYTE PTR [ebx+0x37ea0800],cl
  4091a7:	lods   eax,DWORD PTR ds:[esi]
  4091a8:	mov    esp,0x3018bcc
  4091ad:	call   DWORD PTR ds:0xd4ac0075
  4091b3:	mov    ds:0x8bcc2c,eax
  4091b8:	inc    ebp
  4091b9:	add    cl,BYTE PTR [ecx]
  4091bb:	push   esp
  4091bc:	imul   eax,DWORD PTR [eax],0x0
  4091bf:	mov    esi,DWORD PTR [eax+eax*8-0x40]
  4091c3:	(bad)  
  4091c4:	inc    ebx
  4091c6:	adc    edx,0x8d8b94e4
  4091cc:	fld    QWORD PTR [eax]
  4091ce:	cdq    
  4091cf:	sub    edx,ebp
  4091d1:	inc    ecx
  4091d2:	mov    eax,eax
  4091d4:	jne    0x409196
  4091d6:	add    ah,cl
  4091d8:	push   eax
  4091d9:	add    BYTE PTR [ecx+0x1fe4d1],bl
  4091df:	fnsave [ebp+0x0]
  4091e2:	loope  0x4091b1
  4091e4:	out    0x55,al
  4091e6:	add    BYTE PTR [ecx],al
  4091e8:	add    BYTE PTR [ebx-0xfffe34],al
  4091ee:	stc    
  4091ef:	pop    edx
  4091f0:	stos   DWORD PTR es:[edi],eax
  4091f1:	push   ds
  4091f2:	add    DWORD PTR [eax-0x7d],edx
  4091f5:	jmp    0x40925f
  4091f7:	into   
  4091f8:	xchg   edi,eax
  4091f9:	adc    eax,0x14600
  4091fe:	(bad)  
  4091ff:	inc    DWORD PTR [eax]
  409201:	add    dl,cl
  409203:	lods   al,BYTE PTR ds:[esi]
  409204:	mov    DWORD PTR [eax-0x1],ecx
  409207:	add    BYTE PTR [ebx],al
  409209:	add    BYTE PTR [ebx+0xf9552b9],bl
  40920f:	mov    eax,DWORD PTR [eax]
  409211:	int3   
  409212:	add    esp,ecx
  409214:	or     ah,cl
  409216:	cdq    
  409217:	rcl    DWORD PTR [edi-0x75],1
  40921a:	shl    BYTE PTR [ebp+0x50],0x45
  40921e:	retf   0xcd9a
  409221:	stc    
  409222:	mov    ecx,DWORD PTR [ebp-0x75]
  409225:	call   DWORD PTR [eax]
  409227:	int3   
  409228:	int3   
  409229:	add    BYTE PTR [ecx+0x7e4d1],bl
  40922f:	add    BYTE PTR [eax],al
  409231:	jmp    0x4091e8
  409233:	add    ah,BYTE PTR [ebp+0x8e8017d]
  409239:	dec    DWORD PTR [ecx-0xb17b975]
  40923f:	shl    esp,1
  409241:	xchg   esp,eax
  409242:	mov    ecx,DWORD PTR [eax]
  409244:	mov    DWORD PTR [esp+ecx*1-0xb],esi
  409248:	xchg   edi,eax
  409249:	xchg   edi,eax
  40924a:	add    bh,bh
  40924c:	add    BYTE PTR [ecx-0x72aa3334],cl
  409252:	fiadd  DWORD PTR [ecx+0x46007cf5]
  409258:	dec    ebp
  409259:	(bad)  
  40925a:	call   0x83d57730
  40925f:	push   ebp
  409260:	inc    DWORD PTR [eax]
  409262:	dec    DWORD PTR [ecx-0x6e560100]
  409268:	pop    eax
  409269:	mov    WORD PTR [edi],cs
  40926b:	int3   
  40926c:	jmp    FWORD PTR [edx+0xe]
  40926f:	adc    DWORD PTR [edi+0x5d0fff80],ecx
  409275:	ror    ah,0xff
  409278:	int3   
  409279:	add    DWORD PTR [ebp-0x46],ebp
  40927c:	xor    dl,BYTE PTR [ebp-0x74fff800]
  409282:	cdq    
  409283:	ror    DWORD PTR ds:0x8bcc6e,1
  409289:	int3   
  40928a:	add    BYTE PTR [eax],al
  40928c:	dec    esp
  40928e:	push   cs
  40928f:	loop   0x40925d
  409291:	xlat   BYTE PTR ds:[ebx]
  409292:	add    BYTE PTR [edi],cl
  409294:	add    ecx,DWORD PTR [ebp-0x67]
  409297:	shl    esp,1
  409299:	jg     0x409287
  40929b:	jne    0x409222
  40929d:	int3   
  40929e:	add    BYTE PTR [ebx+0x7dc110cc],cl
  4092a4:	mov    dh,0x7d
  4092a6:	or     BYTE PTR [eax],al
  4092a8:	add    al,0x8b
  4092aa:	or     eax,0x8b5df61f
  4092af:	add    BYTE PTR [ebx+0x103cc33],al
  4092b5:	add    BYTE PTR [esi+ebp*8+0xdd75],al
  4092bc:	jne    0x4092bd
  4092be:	pop    edx
  4092bf:	mov    dl,0xed
  4092c1:	inc    eax
  4092c2:	push   0xffffffcc
  4092c4:	inc    DWORD PTR [ecx]
  4092c6:	mov    esp,ecx
  4092c8:	add    BYTE PTR [ebx-0x6b1b017f],al
  4092ce:	mov    eax,DWORD PTR [eax]
  4092d0:	mov    eax,DWORD PTR [ebp-0x67]
  4092d3:	push   cs
  4092d4:	in     eax,0x11
  4092d6:	or     DWORD PTR [ebx+0x458345],0xffffffcc
  4092dd:	fstp   QWORD PTR [ecx-0x3860a82f]
  4092e3:	inc    esi
  4092e4:	mov    DWORD PTR [eax],eax
  4092e6:	sbb    esi,ecx
  4092e8:	jmp    0x75ff:0x8bec0007
  4092ef:	push   esi
  4092f0:	add    DWORD PTR [eax],eax
  4092f2:	lahf   
  4092f3:	push   esp
  4092f4:	fst    QWORD PTR [eax+eax*1]
  4092f7:	inc    DWORD PTR [ebx+0x25d4104d]
  4092fd:	(bad)  
  4092fe:	mov    esi,DWORD PTR [eax+ecx*1-0x1]
  409302:	adc    al,ch
  409304:	add    bh,bh
  409306:	cs pop ebx
  409308:	int    0x48
  40930a:	mov    eax,DWORD PTR [eax]
  40930c:	add    BYTE PTR [ebp-0x66],cl
  40930f:	daa    
  409310:	outs   dx,BYTE PTR ds:[esi]
  409311:	xchg   ebx,eax
  409312:	dec    DWORD PTR [ebx-0x7a747a75]
  409318:	add    BYTE PTR [ecx],al
  40931a:	ret    0xd897
  40931d:	cmp    DWORD PTR [ebp-0x8ff1377],eax
  409323:	mov    esp,0x48d9573
  409328:	int3   
  409329:	int3   
  40932a:	adc    eax,0x6bcc0000
  40932f:	inc    edi
  409330:	jmp    0xaf83:0x45ff1e
  409337:	pop    ss
  409338:	cmc    
  409339:	data16 add BYTE PTR [eax],al
  40933c:	dec    ebp
  40933d:	or     BYTE PTR [edi],cl
  40933f:	int3   
  409340:	push   eax
  409341:	add    BYTE PTR [ebx+eax*1-0x52],bl
  409345:	(bad)  
  409346:	je     0x409348
  409348:	add    BYTE PTR ds:0x94e4c081,dl
  40934e:	add    DWORD PTR [ebp+0x5d],eax
  409351:	mov    ebx,DWORD PTR [ebp+0x10]
  409354:	lea    ecx,[ebx+0x7dade398]
  40935a:	dec    ebp
  40935b:	int3   
  40935c:	add    al,ch
  40935e:	adc    cl,0xe4
  409361:	xchg   esp,eax
  409362:	or     esp,0xffffff8b
  409365:	int3   
  409366:	add    DWORD PTR [esi-0x34],eax
  409369:	push   0xb
  40936b:	les    ebp,FWORD PTR [eax+0xeb10f6]
  409371:	adc    BYTE PTR [eax-0x74edb34d],bl
  409377:	(bad)  
  409379:	add    al,0xdd
  40937b:	int3   
  40937c:	push   eax
  40937d:	call   FWORD PTR [ecx-0x726ac62f]
  409383:	(bad)  
  409384:	or     BYTE PTR [eax],cl
  409386:	and    dh,BYTE PTR [edi+0x8008168]
  40938c:	mov    eax,DWORD PTR [eax]
  40938e:	int3   
  40938f:	add    BYTE PTR [eax],al
  409391:	mov    esi,DWORD PTR [ebp-0x743a79cb]
  409397:	pop    ebp
  409398:	(bad)  
  409399:	or     BYTE PTR [edx+0x55],bh
  40939c:	out    0xe7,eax
  40939e:	add    BYTE PTR [ebx+ecx*4],cl
  4093a1:	mov    eax,edi
  4093a3:	add    BYTE PTR [ebx-0xed5dbaa],al
  4093a9:	sub    al,0x45
  4093ab:	dec    DWORD PTR [ebx+0x3ad9d9eb]
  4093b1:	ror    BYTE PTR [esp+ecx*8],1
  4093b4:	test   esp,ecx
  4093b6:	call   0x1d0d1ebb
  4093bb:	xchg   ebp,eax
  4093bc:	mov    ds:0xcc4610ec,al
  4093c1:	add    BYTE PTR [ecx],bl
  4093c3:	or     eax,0x8b10da6e
  4093c8:	add    BYTE PTR [ebx+0x400],cl
  4093ce:	xchg   ebp,eax
  4093cf:	mov    ebp,0x108a45e
  4093d4:	add    DWORD PTR [ecx],0x13
  4093d7:	mov    DWORD PTR [esi-0x3f],ebx
  4093da:	add    BYTE PTR [ecx],al
  4093dc:	pop    ebp
  4093dd:	test   DWORD PTR [eax],eax
  4093df:	add    al,ah
  4093e1:	adc    BYTE PTR [ecx-0x3374e95f],bl
  4093e7:	add    DWORD PTR [ebx+eax*4],ecx
  4093ea:	push   0xffffffba
  4093ec:	pop    ecx
  4093ed:	mov    bl,0xeb
  4093ef:	add    bh,bh
  4093f1:	int3   
  4093f2:	push   0xffffffcc
  4093f4:	mov    DWORD PTR [eax],eax
  4093f6:	and    al,0x5
  4093f8:	xor    al,0xc5
  4093fa:	pop    ebp
  4093fb:	mov    eax,DWORD PTR [eax]
  4093fd:	test   ecx,eax
  4093ff:	leave  
  409400:	add    bh,BYTE PTR [ecx+0x8500eb]
  409406:	je     0x4093c8
  409408:	add    bl,ch
  40940a:	call   0x10:0xccf62c54
  409411:	add    BYTE PTR [ebx],cl
  409413:	aad    0x34
  409415:	push   ebp
  409416:	or     al,0xdd
  409418:	inc    DWORD PTR [ebx]
  40941a:	add    bl,ch
  40941c:	mov    eax,eax
  40941e:	jns    0x4093b3
  409420:	mov    bl,0x11
  409422:	mov    eax,DWORD PTR [eax]
  409424:	mov    ecx,DWORD PTR [ebx-0x7e54b15a]
  40942a:	int3   
  40942b:	jmp    0x40942d
  40942d:	add    BYTE PTR [ebp-0x34],bl
  409430:	test   esp,ebp
  409432:	fsub   st,st(3)
  409435:	loop   0x40943b
  409437:	mov    eax,DWORD PTR [eax]
  409439:	xor    edx,DWORD PTR [ecx+0x18cd47]
  40943f:	add    BYTE PTR [eax],al
  409441:	mov    eax,DWORD PTR [eax]
  409443:	(bad)  
  409444:	dec    esp
  409446:	xchg   ebx,eax
  409447:	jmp    0x468b:0xebffdd8c
  40944e:	sbb    dl,al
  409450:	hlt    
  409451:	stos   DWORD PTR es:[edi],eax
  409452:	add    DWORD PTR [eax],eax
  409454:	dec    DWORD PTR [ebx+0xe80083]
  40945a:	arpl   bp,di
  40945c:	push   edx
  40945d:	cmp    BYTE PTR [eax],al
  40945f:	int3   
  409460:	int3   
  409461:	add    ecx,ebx
  409463:	pop    esp
  409464:	pop    esp
  409465:	jge    0x4093ec
  409467:	jmp    0x409479
  409469:	add    ah,cl
  40946b:	int3   
  40946c:	add    BYTE PTR ds:0x812b4801,dl
  409472:	add    BYTE PTR [ecx-0x13dc7475],cl
  409478:	int3   
  409479:	rol    BYTE PTR [edi+edi*8],1
  40947c:	add    BYTE PTR [ebp-0x34],al
  40947f:	add    BYTE PTR [eax+eax*1],al
  409482:	ret    
  409483:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409484:	test   eax,0x8b0049fc
  409489:	add    DWORD PTR [ebx+0x745f418f],ecx
  40948f:	lea    eax,[ebx]
  409491:	inc    eax
  409493:	int3   
  409494:	add    BYTE PTR [ebp+0x10],dl
  409497:	sub    BYTE PTR [esi+0x5f],ch
  40949a:	mov    bh,bh
  40949c:	je     0x409421
  40949e:	push   esi
  40949f:	xor    ebp,DWORD PTR [ebp-0x14ffc76a]
  4094a5:	add    BYTE PTR [ecx],al
  4094a7:	int3   
  4094a8:	add    BYTE PTR [eax],al
  4094aa:	add    BYTE PTR [ecx],cl
  4094ac:	mov    eax,0xff0038bf
  4094b1:	add    al,al
  4094b3:	mov    BYTE PTR [edx-0x7472fc],dh
  4094b9:	add    ah,cl
  4094bb:	add    BYTE PTR [esi+0x10],al
  4094be:	dec    DWORD PTR [edx]
  4094c0:	test   eax,0xff01e7bb
  4094c5:	dec    DWORD PTR [ebx-0x6aa02d85]
  4094cb:	push   0x1
  4094cd:	inc    ebp
  4094ce:	add    BYTE PTR [ecx-0x1ff3400],cl
  4094d4:	jp     0x409544
  4094d6:	sahf   
  4094d7:	add    BYTE PTR [eax],al
  4094d9:	add    BYTE PTR [edx+0x3e],ch
  4094dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094dd:	mov    esp,0x8b450c57
  4094e2:	call   0xccca8072
  4094e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094e9:	pop    esp
  4094ea:	mov    al,ds:0x75008bff
  4094ef:	(bad)  
  4094f0:	mov    cl,0xec
  4094f2:	enter  0xc08,0x89
  4094f6:	int3   
  4094f7:	add    BYTE PTR [eax],al
  4094f9:	inc    ebp
  4094fa:	xor    ecx,0xffffffb8
  4094fd:	ins    BYTE PTR es:[edi],dx
  4094fe:	call   0xc7a5:0xdd01
  409505:	leave  
  409506:	mov    DWORD PTR [ebp+0x0],0x89c700c0
  40950d:	add    BYTE PTR [esi-0x62],al
  409510:	ins    BYTE PTR es:[edi],dx
  409511:	fadd   DWORD PTR [eax+0x0]
  409514:	ror    BYTE PTR [esp+esi*2],0x56
  409518:	xchg   BYTE PTR [edx-0xd],bl
  40951b:	loopne 0x40951d
  40951d:	add    ah,cl
  40951f:	int3   
  409520:	add    DWORD PTR [esi+0x1],0xffffffe8
  409524:	ror    bl,1
  409526:	in     eax,dx
  409527:	test   DWORD PTR [edx+0x4],ebp
  40952a:	je     0x4094d6
  40952c:	test   eax,0xc08ba690
  409531:	add    BYTE PTR [eax],al
  409533:	add    eax,DWORD PTR [eax]
  409535:	add    BYTE PTR [ecx],al
  409537:	dec    esi
  409538:	pusha  
  409539:	ds stc 
  40953b:	ror    BYTE PTR [ebx-0x6789eaff],0xc5
  409542:	fs or  al,0x83
  409545:	add    BYTE PTR [eax],al
  409547:	call   0x8cc614c
  40954c:	or     dh,BYTE PTR [esi+0x4c]
  409552:	add    BYTE PTR [ebx],bl
  409554:	jp     0x4095c5
  409556:	mov    ecx,0xffcc04c7
  40955b:	adc    eax,0x3e010183
  409560:	rcl    BYTE PTR [ebx*8+0x4],cl
  409567:	dec    ecx
  409568:	mov    edi,0x8504ac16
  40956d:	rcl    BYTE PTR [ebp+0x6a],0x0
  409571:	je     0x409573
  409573:	xor    ch,BYTE PTR [ecx+0xcc069c]
  409579:	add    ah,cl
  40957b:	xchg   edx,eax
  40957c:	(bad)  [ebp-0x74f7ff]
  409582:	add    al,0x45
  409584:	int3   
  409585:	mov    ecx,DWORD PTR [eax]
  409587:	imul   ebp,DWORD PTR [ebp-0x7aff4d89],0xffffffcc
  40958e:	add    BYTE PTR [ebp+0x50c89088],cl
  409594:	add    BYTE PTR [ebp+0x5dcc74dd],al
  40959a:	add    BYTE PTR ds:0x6a73b0a1,dh
  4095a0:	add    BYTE PTR [eax+eiz*8],cl
  4095a3:	daa    
  4095a4:	sahf   
  4095a5:	lock ins DWORD PTR es:[edi],dx
  4095a7:	add    DWORD PTR [eax],eax
  4095a9:	inc    esi
  4095aa:	inc    ebp
  4095ab:	mov    edi,edi
  4095ad:	add    ch,bl
  4095af:	or     DWORD PTR cs:[ebp-0x3333ffbd],esp
  4095b6:	clflush BYTE PTR [ecx+0x89dadb]
  4095bd:	int3   
  4095be:	add    bh,bh
  4095c0:	mov    eax,ebp
  4095c2:	je     0x409636
  4095c4:	repnz outs dx,BYTE PTR ds:[esi]
  4095c6:	mov    ah,0x1
  4095c8:	int3   
  4095c9:	add    BYTE PTR [ecx],al
  4095cb:	lea    eax,[edx+0x45008a30]
  4095d1:	add    bh,bh
  4095d3:	push   ebp
  4095d4:	add    BYTE PTR [ebx],al
  4095d6:	add    BYTE PTR [edi-0x4b],cl
  4095d9:	jns    0x40963d
  4095db:	add    BYTE PTR [eax],al
  4095dd:	add    ch,bl
  4095df:	mov    BYTE PTR [ebp+ebp*1-0x72],ch
  4095e3:	add    BYTE PTR [ebx-0x74fffeab],cl
  4095e9:	adc    ah,cl
  4095eb:	sbb    al,0xe8
  4095ed:	fisttp QWORD PTR [ebp+0x15001585]
  4095f3:	pop    esp
  4095f4:	mov    DWORD PTR [ecx+0x83346fc],edx
  4095fa:	or     DWORD PTR [ebx-0xb00ff77],0xffffff93
  409601:	arpl   dx,ax
  409603:	adc    eax,0xffe804ec
  409608:	lods   eax,DWORD PTR ds:[esi]
  409609:	lahf   
  40960a:	and    eax,0xc83c703
  40960f:	add    BYTE PTR [ebx-0x7a7074cd],cl
  409615:	jg     0x409631
  409617:	mov    eax,DWORD PTR [eax]
  409619:	add    al,0xff
  40961b:	or     eax,0x8bd39d09
  409620:	inc    esi
  409621:	add    BYTE PTR [ebx+0x55040050],cl
  409627:	pop    ecx
  409628:	mov    ecx,0xff8baa23
  40962d:	mov    edi,0x6194d394
  409633:	adc    BYTE PTR [eax],al
  409635:	add    ah,cl
  409637:	mov    ecx,esp
  409639:	in     al,dx
  40963a:	lsl    ecx,WORD PTR [esp+edi*2]
  40963e:	repz mov eax,DWORD PTR [eax]
  409641:	xor    eax,DWORD PTR [eax]
  409643:	xchg   ebp,eax
  409644:	jb     0x40969c
  409646:	fdiv   st(7),st
  409648:	add    BYTE PTR [esp+ecx*1],al
  40964b:	or     BYTE PTR [ebx-0x266b8b75],cl
  409651:	xchg   BYTE PTR [ebx-0x34],bl
  409654:	add    BYTE PTR [ebp+0x0],bl
  409657:	sub    eax,0x7402d5c0
  40965c:	je     0x4095e9
  40965e:	add    BYTE PTR [ebp+0x1f0000cc],al
  409664:	jmp    0xccc7:0x408d079
  40966b:	adc    ah,cl
  40966d:	ins    DWORD PTR es:[edi],dx
  40966e:	inc    edx
  40966f:	add    BYTE PTR [eax],al
  409671:	int3   
  409672:	test   edi,edi
  409674:	add    DWORD PTR ds:0xb88e9004,edx
  40967a:	stc    
  40967b:	add    BYTE PTR [ebx+0x241bcc8b],cl
  409681:	pop    edi
  409682:	jmp    0xffb62086
  409687:	adc    BYTE PTR [ebp-0xd970000],al
  40968d:	mov    ds:0x8b011063,al
  409692:	add    DWORD PTR [esi+0x9],ecx
  409695:	sub    eax,0x15ffc7
  40969a:	inc    ebp
  40969b:	add    DWORD PTR [edi],ecx
  40969d:	inc    esi
  40969e:	jne    0x4096ce
  4096a0:	out    dx,al
  4096a1:	mov    al,ds:0x1100113
  4096a6:	fnsave ds:0x50e5773e
  4096ac:	int3   
  4096ad:	bswap  esp
  4096af:	mov    edi,edi
  4096b1:	inc    eax
  4096b3:	frstor [esi-0x7633ede2]
  4096b9:	inc    ebp
  4096ba:	add    BYTE PTR [eax-0x23],bh
  4096bd:	je     0x409672
  4096bf:	inc    ebp
  4096c0:	add    BYTE PTR [eax],al
  4096c2:	in     al,dx
  4096c3:	int3   
  4096c4:	jne    0x4096c7
  4096c6:	add    BYTE PTR [eax],al
  4096c8:	inc    eax
  4096c9:	jg     0x40967f
  4096cb:	(bad)  
  4096cd:	add    ch,bl
  4096cf:	xor    al,0x2a
  4096d1:	and    BYTE PTR [ebp-0x17337601],dl
  4096d7:	inc    ebp
  4096d8:	add    BYTE PTR [ebx-0x107293ff],cl
  4096de:	leave  
  4096df:	add    DWORD PTR [ebx],esi
  4096e1:	int3   
  4096e2:	add    bl,al
  4096e4:	out    0x8c,eax
  4096e6:	call   0xcd2996ea
  4096eb:	(bad)  
  4096ed:	call   0x81290867
  4096f2:	fdiv   QWORD PTR [ebp+0x8]
  4096f5:	add    BYTE PTR [eax],cl
  4096f7:	push   0x89415871
  4096fc:	or     BYTE PTR [ecx],al
  4096fe:	je     0x4096cc
  409700:	mov    edi,edi
  409702:	int3   
  409703:	ret    
  409704:	popf   
  409705:	mov    DWORD PTR [ebp+0x2b],ecx
  409708:	fisttp QWORD PTR [ecx+0x662dcc00]
  40970e:	dec    edx
  40970f:	test   eax,0x85608c0
  409714:	int3   
  409715:	dec    DWORD PTR [ebx+0x5ef26600]
  40971b:	add    cl,BYTE PTR [edi]
  40971d:	add    ah,cl
  40971f:	int3   
  409720:	inc    edx
  409721:	jo     0x4096a3
  409723:	pop    ss
  409724:	add    BYTE PTR [eax],al
  409726:	add    BYTE PTR [eax],cl
  409728:	mov    eax,DWORD PTR [eax]
  40972a:	add    bh,al
  40972c:	dec    esp
  40972d:	aas    
  40972e:	add    eax,0x8bccffb9
  409733:	mov    ecx,DWORD PTR [ebp+0x7405b6f2]
  409739:	mov    eax,DWORD PTR [eax]
  40973b:	call   DWORD PTR [eax]
  40973d:	add    al,al
  40973f:	add    BYTE PTR [ebx-0x33543f69],ah
  409745:	add    DWORD PTR [ecx],eax
  409747:	add    BYTE PTR [eax-0x74c5c7a8],dh
  40974d:	pop    ebp
  40974e:	inc    eax
  409750:	add    al,ch
  409752:	add    BYTE PTR [eax],al
  409754:	fdiv   st,st(6)
  409756:	ret    0x862
  409759:	add    edx,DWORD PTR [esi-0x20]
  40975c:	fs push edx
  40975e:	xchg   ecx,eax
  40975f:	adc    al,0x74
  409761:	add    BYTE PTR [ebp-0x75],dl
  409764:	add    BYTE PTR [esi+0x1],dl
  409767:	call   esp
  409769:	stos   BYTE PTR es:[edi],al
  40976a:	inc    ebp
  40976b:	or     eax,0x45085d00
  409770:	push   es
  409771:	dec    esp
  409772:	retf   0xc7c
  409775:	adc    eax,0x6a00cc45
  40977a:	add    DWORD PTR [eax],0x2a
  40977d:	mov    edx,0xcc8bf216
  409782:	add    bh,bh
  409784:	jo     0x409788
  409786:	inc    esi
  409787:	in     eax,0xdd
  409789:	int3   
  40978a:	or     BYTE PTR [ecx+0x558b],cl
  409790:	ss push eax
  409792:	call   0x7fcc:0x75e8562c
  409799:	pusha  
  40979a:	mov    al,ds:0x50cc8517
  40979f:	add    bh,bh
  4097a1:	mov    ecx,DWORD PTR [eax]
  4097a3:	mov    eax,DWORD PTR [ecx-0x54]
  4097a6:	xor    eax,0x89000018
  4097ab:	add    BYTE PTR [ebx+0x42],bl
  4097ae:	mov    cl,0x73
  4097b0:	mov    esp,ecx
  4097b2:	inc    esi
  4097b3:	add    BYTE PTR [ebp+0x1],al
  4097b6:	add    bh,al
  4097b8:	pop    ebp
  4097b9:	int    0x34
  4097bb:	mov    eax,0xdd010075
  4097c0:	test   DWORD PTR [esi+0x46acf0f],esi
  4097c6:	add    al,al
  4097c8:	ror    ah,0x56
  4097cb:	je     0x409839
  4097cd:	ins    DWORD PTR es:[edi],dx
  4097ce:	adc    BYTE PTR [ebx-0x7afe8a77],dh
  4097d4:	lods   al,BYTE PTR ds:[esi]
  4097d5:	cli    
  4097d6:	stc    
  4097d7:	mov    al,ds:0x4574e801
  4097dc:	mov    eax,DWORD PTR [ecx]
  4097de:	mov    esi,DWORD PTR [ebx+ebp*2+0x76]
  4097e2:	xchg   esi,eax
  4097e3:	mov    ds:0x55004589,eax
  4097e8:	mov    ebp,0x567fef4d
  4097ed:	int3   
  4097ee:	mov    ecx,esp
  4097f0:	adc    DWORD PTR [esi+0x0],0x45
  4097f4:	pop    edx
  4097f5:	mov    ch,0x4
  4097f7:	jns    0x4097f9
  4097f9:	int3   
  4097fa:	mov    eax,DWORD PTR [ebx+0x1228665]
  409800:	inc    esi
  409801:	dec    esp
  409803:	dec    ebp
  409804:	je     0x4097ee
  409806:	je     0x40987d
  409808:	mov    ah,0xfb
  40980a:	out    dx,al
  40980b:	jo     0x40980d
  40980d:	int3   
  40980e:	mov    ebx,ebp
  409810:	imul   ecx,esp,0xc0105ef2
  409816:	add    ah,cl
  409818:	add    bh,bh
  40981a:	jne    0x40981d
  40981c:	mov    ds,ecx
  40981e:	add    al,0x6b
  409820:	add    BYTE PTR [ebx-0x379b1800],cl
  409826:	fisubr DWORD PTR [esi+0x56748d00]
  40982c:	je     0x409874
  40982e:	dec    ebp
  40982f:	add    BYTE PTR [esi],dh
  409831:	dec    edi
  409832:	add    al,0x3a
  409834:	mov    DWORD PTR [eax],edx
  409836:	mov    DWORD PTR [ecx],eax
  409838:	lods   al,BYTE PTR ds:[esi]
  409839:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40983a:	mov    ebx,0x72
  40983f:	int3   
  409840:	mov    eax,DWORD PTR [eax]
  409842:	call   DWORD PTR [eax+0x36]
  409845:	jecxz  0x4098a7
  409847:	adc    cl,BYTE PTR [ecx+0x6d01cc0c]
  40984d:	mov    BYTE PTR [eax+ecx*8+0x1],ah
  409851:	add    al,ch
  409853:	je     0x4097e0
  409855:	add    BYTE PTR [ebx-0x582e3f8c],cl
  40985b:	mov    al,0x0
  40985d:	add    BYTE PTR [eax],al
  40985f:	call   0x2b49c026
  409864:	adc    bh,al
  409866:	je     0x409867
  409868:	test   DWORD PTR [ecx-0x351b3375],ecx
  40986e:	cli    
  40986f:	fst    DWORD PTR [ebp+0x15]
  409872:	add    BYTE PTR [ebx-0x77289214],cl
  409878:	loopne 0x409882
  40987a:	dec    ebp
  40987b:	add    BYTE PTR [ecx-0x62ff3400],cl
  409881:	lock clc 
  409883:	icebp  
  409884:	add    BYTE PTR [eax],dl
  409886:	mov    eax,DWORD PTR [eax]
  409888:	mov    ah,0xc7
  40988a:	sub    bh,al
  40988c:	mov    ecx,DWORD PTR [ebx+0x454d8904]
  409892:	rcl    BYTE PTR [ebp-0x7a],0x10
  409896:	sahf   
  409897:	jle    0x4098de
  409899:	or     BYTE PTR [eax],al
  40989b:	je     0x4098c2
  40989d:	ret    0xd884
  4098a0:	mov    DWORD PTR [ecx-0x7400f800],ecx
  4098a6:	test   DWORD PTR [edx-0x7f],ebp
  4098a9:	(bad)  
  4098aa:	jg     0x409897
  4098ac:	add    BYTE PTR [eax-0x75],dl
  4098af:	psadbw mm6,QWORD PTR [eax+0x27]
  4098b3:	fisttp QWORD PTR [ebx+0xe88955]
  4098b9:	push   DWORD PTR [ebp+0x4]
  4098bc:	inc    esi
  4098bd:	push   edx
  4098be:	cmp    BYTE PTR [eax-0x3333338c],bh
  4098c4:	sub    bh,BYTE PTR [eax]
  4098c6:	lahf   
  4098c7:	popf   
  4098c8:	(bad)  
  4098c9:	inc    DWORD PTR [ebp-0xffff75]
  4098cf:	int3   
  4098d0:	pop    es
  4098d1:	lea    ecx,ds:0xcccc55a2
  4098d7:	mov    DWORD PTR [edx*8+0x15ccc232],ebp
  4098de:	add    BYTE PTR [ebx+0x8000003],cl
  4098e4:	fidivr DWORD PTR [ecx]
  4098e6:	pop    es
  4098e7:	mov    ebp,0x88b0000
  4098ec:	lods   al,BYTE PTR ds:[esi]
  4098ed:	mov    DWORD PTR [edi-0x7414fe41],eax
  4098f3:	pop    ebp
  4098f4:	add    BYTE PTR [ebp+0x0],dh
  4098f7:	mov    esi,DWORD PTR [ebx+0xfaa887d]
  4098fd:	add    DWORD PTR [ebp+0x6ceae05d],eax
  409903:	stos   BYTE PTR es:[edi],al
  409904:	push   esi
  409905:	add    BYTE PTR [ebx+0x110],cl
  40990b:	lea    esp,[esi+esi*2+0x64]
  40990f:	lahf   
  409910:	mov    eax,DWORD PTR [eax]
  409912:	or     BYTE PTR [ebx+eiz*4],cl
  409915:	js     0x4098a1
  409917:	rol    BYTE PTR [ecx],cl
  409919:	mov    DWORD PTR [esi+0x0],eax
  40991c:	push   0xffffff8b
  40991e:	mov    eax,DWORD PTR [eax]
  409920:	sbb    BYTE PTR es:[eax-0x748b7cb8],0x0
  409928:	push   edi
  409929:	retf   0x7b07
  40992c:	push   ebp
  40992d:	int3   
  40992e:	add    DWORD PTR [eax],eax
  409930:	add    BYTE PTR [esi+0x4],al
  409933:	(bad)  
  409934:	mov    edi,0x742cf1c6
  409939:	mov    esi,DWORD PTR [ebx]
  40993b:	pmaxub mm2,QWORD PTR [ecx-0x11]
  40993f:	inc    esi
  409940:	add    ah,ch
  409942:	add    ah,cl
  409944:	mov    ecx,DWORD PTR [eax]
  409946:	mov    eax,DWORD PTR [eax]
  409948:	(bad)  
  40994a:	xchg   edi,eax
  40994b:	adc    BYTE PTR [ebp+0x0],dl
  40994e:	adc    ah,cl
  409950:	pusha  
  409951:	add    eax,0x5d3d9a
  409956:	dec    DWORD PTR [ebp+0x758b8b8b]
  40995c:	pop    ecx
  40995d:	push   ss
  40995e:	mov    edx,0x8bc0e849
  409963:	add    BYTE PTR [ebx+0x5a],dh
  409966:	shr    DWORD PTR [edx-0x1f00fe20],0x0
  40996d:	in     al,dx
  40996e:	add    BYTE PTR [eax],dl
  409970:	stos   BYTE PTR es:[edi],al
  409971:	xchg   ebp,eax
  409972:	cld    
  409973:	jge    0x409981
  409975:	or     BYTE PTR [ecx],al
  409977:	add    BYTE PTR [ebp-0x7459c0f4],ch
  40997d:	int3   
  40997e:	add    DWORD PTR [ebx+0x175cc00],eax
  409984:	inc    ebp
  409985:	lock shl BYTE PTR [ebx+0x75000001],0xad
  40998d:	xchg   ecx,eax
  40998e:	inc    eax
  40998f:	dec    ebx
  409990:	add    BYTE PTR [ebx],al
  409992:	(bad)  
  409993:	int3   
  409994:	add    BYTE PTR [eax],al
  409996:	or     BYTE PTR [ebx+0x724af376],cl
  40999c:	add    BYTE PTR [ecx-0x479beaf0],cl
  4099a2:	xchg   edi,eax
  4099a3:	jmp    0x4099b1
  4099a5:	add    BYTE PTR [ebp+0x0],al
  4099a8:	add    BYTE PTR [esp+ecx*8-0x34],dh
  4099ac:	les    edi,FWORD PTR [esi+ebx*2-0x7b]
  4099b0:	mov    eax,DWORD PTR [eax]
  4099b2:	test   DWORD PTR [eax],eax
  4099b4:	xor    dl,BYTE PTR [eax]
  4099b6:	jle    0x40996d
  4099b8:	inc    eax
  4099ba:	add    al,0x0
  4099bc:	add    BYTE PTR [ecx+0xf4e0000],cl
  4099c2:	push   edi
  4099c3:	push   esi
  4099c4:	dec    DWORD PTR [ebp-0x6ed9ea8c]
  4099ca:	xchg   edi,eax
  4099cb:	dec    eax
  4099cc:	lea    ebx,[ebp+0x10]
  4099cf:	inc    esi
  4099d0:	add    ah,cl
  4099d2:	add    BYTE PTR [eax],al
  4099d4:	push   0x507907c9
  4099d9:	mov    edi,edi
  4099db:	add    al,dl
  4099dd:	lds    esp,FWORD PTR [eax+0x1d]
  4099e0:	ffree  st(7)
  4099e2:	inc    ebp
  4099e3:	lea    eax,[ebp+0x0]
  4099e6:	add    bh,bh
  4099e8:	dec    ebp
  4099e9:	sbb    bh,BYTE PTR [esi+0x1ff00a9]
  4099ef:	int3   
  4099f0:	scas   eax,DWORD PTR es:[edi]
  4099f1:	mov    edi,0x5d152bcc
  4099f6:	add    al,0x0
  4099f8:	adc    BYTE PTR [ebp-0x309b76bb],cl
  4099fe:	mov    BYTE PTR [edx],ah
  409a00:	mov    DWORD PTR [eax],eax
  409a02:	add    ah,cl
  409a04:	js     0x409a7e
  409a06:	dec    esp
  409a07:	xor    al,0x8
  409a09:	add    esp,ecx
  409a0b:	add    BYTE PTR [eax],al
  409a0d:	or     al,0xe0
  409a0f:	test   DWORD PTR [edi-0x55],eax
  409a12:	inc    ebp
  409a13:	lock adc eax,0xa1ff89c0
  409a19:	pop    edi
  409a1a:	fsubr  DWORD PTR [edi-0x74fffef8]
  409a20:	mov    eax,DWORD PTR [eax]
  409a22:	mov    ecx,DWORD PTR [ebx-0x4bf84581]
  409a28:	mov    eax,DWORD PTR [eax]
  409a2a:	add    DWORD PTR [esi+0x64],eax
  409a2d:	push   edx
  409a2e:	retf   
  409a2f:	scas   eax,DWORD PTR es:[edi]
  409a30:	add    BYTE PTR [eax],al
  409a32:	mov    edx,DWORD PTR [eax]
  409a34:	int3   
  409a35:	add    BYTE PTR [esp+eax*1+0x2c],dh
  409a39:	jb     0x4099ef
  409a3b:	adc    ah,cl
  409a3d:	jne    0x409a85
  409a3f:	add    BYTE PTR [ebx+0x757f59f8],al
  409a45:	int3   
  409a46:	add    bh,bh
  409a48:	add    DWORD PTR [eax],eax
  409a4a:	int3   
  409a4b:	add    BYTE PTR [esi-0x74d6faa6],cl
  409a51:	test   DWORD PTR [ebx+esi*1],eax
  409a54:	and    eax,0xff41fcf
  409a59:	add    BYTE PTR [eax],al
  409a5b:	add    ah,cl
  409a5d:	mov    ecx,esp
  409a5f:	mov    DWORD PTR [esi],esp
  409a61:	inc    edx
  409a62:	pop    eax
  409a63:	inc    edi
  409a64:	add    DWORD PTR [ebp+ebx*2-0x75],esi
  409a68:	pop    esp
  409a69:	mov    al,ds:0x8b8b8d39
  409a6e:	add    bh,bh
  409a70:	add    BYTE PTR [eax],al
  409a72:	test   esp,ecx
  409a74:	fidiv  WORD PTR [eax-0x13]
  409a77:	inc    esp
  409a78:	dec    esp
  409a7a:	int3   
  409a7b:	add    BYTE PTR [ebx],dl
  409a7d:	cmp    cl,BYTE PTR ds:0x8830071
  409a83:	je     0x409a12
  409a85:	je     0x409a53
  409a87:	inc    ebp
  409a88:	lods   al,BYTE PTR ds:[esi]
  409a89:	mov    dl,0xed
  409a8b:	sldt   WORD PTR gs:[eax]
  409a8f:	add    BYTE PTR [esi-0x4f],dh
  409a92:	dec    ecx
  409a93:	xchg   ecx,eax
  409a94:	add    BYTE PTR [eax],al
  409a96:	je     0x409b0c
  409a98:	mov    DWORD PTR [eax],0xb28d0845
  409a9e:	push   ds
  409a9f:	jmp    0x409a2c
  409aa1:	add    BYTE PTR [ebx-0x6f08c5ff],cl
  409aa7:	add    DWORD PTR cs:[ecx],0xffffffff
  409aab:	inc    ebp
  409aac:	add    BYTE PTR ds:0x55c3cc00,dl
  409ab2:	mov    ebp,esp
  409ab4:	sub    esp,0x24
  409ab7:	push   ebx
  409ab8:	push   esi
  409ab9:	push   edi
  409aba:	lea    eax,[ebp-0x24]
  409abd:	push   eax
  409abe:	call   DWORD PTR ds:0x418060
  409ac4:	lea    eax,[ebp-0x24]
  409ac7:	push   eax
  409ac8:	call   DWORD PTR ds:0x418034
  409ace:	lea    eax,[ebp-0x8]
  409ad1:	push   eax
  409ad2:	push   0x1
  409ad4:	call   DWORD PTR ds:0x4180c4
  409ada:	mov    eax,DWORD PTR [ebp-0x8]
  409add:	mov    ecx,DWORD PTR [eax]
  409adf:	lea    edx,[ebp-0xc]
  409ae2:	push   edx
  409ae3:	push   0x4181e0
  409ae8:	push   eax
  409ae9:	call   DWORD PTR [ecx]
  409aeb:	mov    edi,DWORD PTR [ebp+0x8]
  409aee:	push   0x3
  409af0:	pop    ebx
  409af1:	mov    ds:0x4194b8,eax
  409af6:	mov    DWORD PTR [ebp-0x4],ebx
  409af9:	xor    esi,esi
  409afb:	mov    eax,ds:0x4193f4
  409b00:	mov    eax,DWORD PTR [eax+esi*4]
  409b03:	sub    eax,DWORD PTR ds:0x4194b8
  409b09:	push   0x0
  409b0b:	add    eax,0x512e61cb
  409b10:	push   0x1
  409b12:	mov    DWORD PTR [edi],eax
  409b14:	push   0x0
  409b16:	add    edi,0x4
  409b19:	call   DWORD PTR ds:0x418088
  409b1f:	xor    eax,eax
  409b21:	cmp    DWORD PTR [ebp-0x4],ebx
  409b24:	setne  al
  409b27:	add    eax,0x2
  409b2a:	add    esi,eax
  409b2c:	mov    DWORD PTR [ebp-0x4],eax
  409b2f:	cmp    esi,0xd4
  409b35:	jb     0x409afb
  409b37:	push   0x72
  409b39:	push   0x0
  409b3b:	call   DWORD PTR ds:0x4180b0
  409b41:	mov    esi,ebx
  409b43:	xor    eax,eax
  409b45:	mov    ecx,DWORD PTR ds:0x419440
  409b4b:	mov    ecx,DWORD PTR [ecx+eax*4]
  409b4e:	mov    edx,DWORD PTR ds:0x4194b8
  409b54:	lea    ecx,[ecx+edx*1-0x71994db8]
  409b5b:	mov    DWORD PTR [edi],ecx
  409b5d:	xor    ecx,ecx
  409b5f:	add    edi,0x4
  409b62:	cmp    esi,ebx
  409b64:	setne  cl
  409b67:	lea    esi,[ecx+0x2]
  409b6a:	add    eax,esi
  409b6c:	cmp    eax,0xc3
  409b71:	jb     0x409b45
  409b73:	call   DWORD PTR ds:0x418054
  409b79:	mov    DWORD PTR [ebp-0x4],ebx
  409b7c:	xor    esi,esi
  409b7e:	call   DWORD PTR ds:0x41803c
  409b84:	mov    eax,ds:0x41942c
  409b89:	mov    eax,DWORD PTR [eax+esi*4]
  409b8c:	mov    ecx,DWORD PTR ds:0x4194b8
  409b92:	lea    eax,[eax+ecx*1+0x68d114a8]
  409b99:	mov    DWORD PTR [edi],eax
  409b9b:	xor    eax,eax
  409b9d:	add    edi,0x4
  409ba0:	cmp    DWORD PTR [ebp-0x4],ebx
  409ba3:	setne  al
  409ba6:	add    eax,0x2
  409ba9:	add    esi,eax
  409bab:	mov    DWORD PTR [ebp-0x4],eax
  409bae:	cmp    esi,0xcf
  409bb4:	jb     0x409b7e
  409bb6:	lea    eax,[ebp-0x24]
  409bb9:	push   eax
  409bba:	call   DWORD PTR ds:0x418040
  409bc0:	lea    eax,[ebp-0x24]
  409bc3:	push   eax
  409bc4:	call   DWORD PTR ds:0x418044
  409bca:	pop    edi
  409bcb:	pop    esi
  409bcc:	pop    ebx
  409bcd:	leave  
  409bce:	ret    
  409bcf:	add    al,0x44
  409bd1:	mov    eax,0x830fc7
  409bd6:	add    DWORD PTR [eax-0x33cbe5d7],edi
  409bdc:	shr    al,0x0
  409bdf:	add    BYTE PTR [eax],al
  409be1:	(bad)  
  409be2:	(bad)  
  409be3:	cld    
  409be4:	adc    al,0x9c
  409be6:	inc    eax
  409be7:	ror    ah,0xff
  409bea:	or     BYTE PTR [ecx],ah
  409bec:	enter  0x2f90,0x46
  409bf0:	add    eax,DWORD PTR [eax]
  409bf2:	add    BYTE PTR [eax],al
  409bf4:	add    bh,bh
  409bf6:	int3   
  409bf7:	(bad)  
  409bf8:	mov    eax,ds:0x85e6cf
  409bfd:	add    ah,cl
  409bff:	ret    0xc5e3
  409c02:	xchg   DWORD PTR [edx+0x0],ebp
  409c05:	add    BYTE PTR [eax],al
  409c07:	jne    0x409c08
  409c09:	push   ebp
  409c0a:	mov    esp,DWORD PTR [ebp-0x33063950]
  409c10:	inc    esi
  409c11:	add    BYTE PTR [eax],al
  409c13:	sbb    al,0xfa
  409c15:	cdq    
  409c16:	repz lea eax,[eax]
  409c19:	mov    eax,DWORD PTR [eax]
  409c1b:	add    BYTE PTR [ebx-0x58369573],al
  409c21:	push   ebx
  409c22:	dec    ebx
  409c23:	int3   
  409c24:	add    BYTE PTR [ebp+0x0],cl
  409c27:	mov    ebp,0xcc2d6e1a
  409c2c:	add    BYTE PTR [ebx+0x551008ff],cl
  409c32:	ja     0x8e8afc
  409c38:	je     0x409c3e
  409c3a:	mov    DWORD PTR [ebp+0x1f],esp
  409c3d:	inc    esi
  409c3e:	xchg   ebx,eax
  409c3f:	add    DWORD PTR [ebx-0x74ff8c00],ecx
  409c45:	add    al,ch
  409c47:	push   ds
  409c48:	cmp    cl,dh
  409c4a:	cmc    
  409c4b:	(bad)  
  409c4c:	dec    DWORD PTR [edi+edi*8]
  409c4f:	ror    BYTE PTR [ebx+0x2a],1
  409c52:	inc    esp
  409c53:	int3   
  409c54:	dec    ebp
  409c55:	add    ah,ch
  409c57:	dec    DWORD PTR [ecx-0x663b14bb]
  409c5d:	push   esp
  409c5e:	fmul   DWORD PTR [ebx+0x53007400]
  409c64:	shr    esi,cl
  409c66:	mov    cl,0x0
  409c68:	mov    eax,DWORD PTR [ecx]
  409c6a:	adc    eax,0x88bff89
  409c6f:	loope  0x409ce6
  409c71:	push   esi
  409c72:	mov    DWORD PTR [eax],0xbecc00ff
  409c78:	sbb    eax,0x3cc259a
  409c7d:	int3   
  409c7e:	add    BYTE PTR [eax],al
  409c80:	ror    BYTE PTR [edi],0x0
  409c83:	test   BYTE PTR [eax+0x5d00480f],0x0
  409c8a:	add    BYTE PTR [eax],ch
  409c8c:	(bad)  
  409c8d:	jns    0x409c9f
  409c8f:	fisttp QWORD PTR [ebx+0x185ff00]
  409c95:	mov    DWORD PTR [ecx],eax
  409c97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c98:	sbb    al,0xc4
  409c9a:	jg     0x409ce1
  409c9c:	mov    ecx,DWORD PTR [edi]
  409c9e:	add    DWORD PTR [ecx],esp
  409ca0:	mov    ah,0x4b
  409ca2:	dec    ebx
  409ca3:	add    BYTE PTR [edx+0x1],ch
  409ca6:	add    BYTE PTR [eax],al
  409ca8:	jne    0x409c33
  409caa:	mov    esp,DWORD PTR [edx+0xf]
  409cad:	push   ebx
  409cae:	pop    ebp
  409caf:	add    BYTE PTR [eax],al
  409cb1:	add    al,0xff
  409cb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cb4:	add    bl,BYTE PTR [ebp-0xb]
  409cb7:	add    al,0xc0
  409cb9:	mov    edx,DWORD PTR [eax]
  409cbb:	mov    ecx,DWORD PTR [ecx+0x5d480489]
  409cc1:	bound  edi,QWORD PTR [ebx-0x1474fd00]
  409cc7:	mov    bl,0xaf
  409cc9:	leave  
  409cca:	mov    esp,cs
  409ccc:	push   0x0
  409cce:	mov    eax,DWORD PTR [ecx]
  409cd0:	mov    eax,DWORD PTR [eax]
  409cd2:	add    DWORD PTR [eax],esp
  409cd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cd5:	mov    BYTE PTR [edx-0x7474748b],al
  409cdb:	mov    bl,0xb2
  409cdd:	js     0x409cda
  409cdf:	add    BYTE PTR [esi-0x1],dl
  409ce2:	add    BYTE PTR [eax],al
  409ce4:	int3   
  409ce5:	add    BYTE PTR [eax],dl
  409ce7:	push   es
  409ce8:	mov    dh,bh
  409cea:	aaa    
  409ceb:	add    ah,cl
  409ced:	add    BYTE PTR [ebx+0x713b4a52],cl
  409cf3:	or     al,0x8b
  409cf5:	rol    BYTE PTR [ebx+0xe8ddff],0x2a
  409cfc:	in     eax,0xa4
  409cfe:	in     al,0x0
  409d00:	int3   
  409d01:	inc    ebp
  409d02:	add    ah,cl
  409d04:	cmc    
  409d05:	aad    0xc4
  409d07:	add    DWORD PTR [eax],eax
  409d09:	add    BYTE PTR [eax],al
  409d0b:	add    BYTE PTR [eax],cl
  409d0d:	add    al,al
  409d0f:	and    ah,BYTE PTR [esi-0x74330e66]
  409d15:	mov    eax,DWORD PTR [eax]
  409d17:	in     al,dx
  409d18:	sbb    cl,BYTE PTR [eax+ebp*2]
  409d1b:	(bad)  
  409d1c:	(bad)  
  409d1d:	call   0x8b8e6923
  409d22:	add    BYTE PTR [eax],ah
  409d24:	sbb    BYTE PTR [ebx+ebx*2+0x75],dl
  409d28:	pop    ebp
  409d29:	(bad)  
  409d2a:	dec    ebp
  409d2b:	xchg   edi,eax
  409d2c:	and    eax,0xcc104a66
  409d31:	inc    esi
  409d32:	je     0x409cbf
  409d34:	mov    ecx,DWORD PTR [ebx-0x4a485634]
  409d3a:	inc    ebp
  409d3b:	loopne 0x409d82
  409d3d:	call   DWORD PTR [esi-0x24]
  409d40:	(bad)  
  409d41:	cmp    edx,DWORD PTR [ecx+0x0]
  409d44:	pop    ebp
  409d45:	adc    eax,0xdd8b00
  409d4a:	jmp    FWORD PTR [esi+0x74208d73]
  409d50:	(bad)  
  409d51:	push   ebp
  409d52:	or     al,0xa2
  409d54:	push   ecx
  409d55:	sub    al,0x37
  409d57:	pop    ebp
  409d58:	add    BYTE PTR [ecx+0x890075],cl
  409d5e:	pop    ebp
  409d5f:	mov    ds:0x8b35dc54,eax
  409d64:	add    al,0x8
  409d66:	add    BYTE PTR [ecx-0x23ae05],ch
  409d6c:	add    al,al
  409d6e:	mov    ecx,esp
  409d70:	add    al,al
  409d72:	inc    DWORD PTR [ebx-0x3f30f4a2]
  409d78:	je     0x409d07
  409d7a:	call   ebp
  409d7c:	mov    edi,0xcc006bb3
  409d81:	lea    ebx,[ebp-0x40]
  409d84:	inc    DWORD PTR [ebp-0x75]
  409d87:	jmp    0x454d:0xa658f4
  409d8e:	adc    eax,0xef068bca
  409d93:	add    BYTE PTR [eax],al
  409d95:	mov    ecx,DWORD PTR [ebx-0x33fbff15]
  409d9b:	sub    al,BYTE PTR [edi]
  409d9d:	sub    DWORD PTR [esi-0x3f74f000],esp
  409da3:	ret    
  409da4:	pop    ebp
  409da5:	xchg   edi,eax
  409da6:	cdq    
  409da7:	ror    ah,0x10
  409daa:	push   esi
  409dab:	push   esi
  409dac:	mov    ecx,esp
  409dae:	add    BYTE PTR [ecx-0x33bcba21],ch
  409db4:	int3   
  409db5:	add    al,0x89
  409db7:	push   DWORD PTR gs:[esi+0xf83ccb7]
  409dbe:	add    BYTE PTR [eax],al
  409dc0:	je     0x409d89
  409dc2:	add    bl,bl
  409dc4:	ret    
  409dc5:	xchg   edx,eax
  409dc6:	lea    eax,[eax]
  409dc8:	add    BYTE PTR ds:0x54f395cc,dl
  409dce:	sub    ecx,esp
  409dd0:	rol    BYTE PTR [ebp-0x7b],0x6a
  409dd4:	or     al,0x0
  409dd6:	pop    ebp
  409dd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409dd8:	dec    ebx
  409dd9:	lods   eax,DWORD PTR ds:[esi]
  409dda:	div    DWORD PTR [ebp-0x20]
  409ddd:	mov    ecx,DWORD PTR [ebx-0x6ba5b0ad]
  409de3:	inc    esi
  409de4:	add    ebx,ebp
  409de6:	lea    ecx,[ebx+0x4f850075]
  409dec:	xchg   esi,eax
  409ded:	xchg   DWORD PTR [ebp+0x0],ecx
  409df0:	add    DWORD PTR [ebp-0x1],0xffffffa6
  409df4:	jecxz  0x409d77
  409df6:	inc    edi
  409df7:	add    BYTE PTR [eax],al
  409df9:	in     al,dx
  409dfa:	dec    DWORD PTR [eax]
  409dfc:	add    BYTE PTR [esp+eax*1-0x7b],dh
  409e00:	je     0x409e35
  409e02:	cmp    eax,0xf000145
  409e07:	jmp    0xcc9d8e10
  409e0c:	add    BYTE PTR [ebx],al
  409e0e:	mov    edi,edi
  409e10:	mov    edx,DWORD PTR ds:0x425989cc
  409e16:	adc    BYTE PTR [eax],cl
  409e18:	mov    eax,DWORD PTR [eax]
  409e1a:	add    BYTE PTR [edi+ecx*1-0x3c],bl
  409e1e:	mov    ch,0x1
  409e20:	adc    DWORD PTR [esi+0x15],0xffffffff
  409e24:	add    BYTE PTR [esp+ecx*8+0x66],dh
  409e28:	push   0x4d565df1
  409e2d:	mov    ecx,DWORD PTR [ebx-0x3d471ef8]
  409e33:	add    BYTE PTR [ebx+0xf000c08],cl
  409e39:	mov    ebx,DWORD PTR [ebp-0x31]
  409e3c:	dec    edx
  409e3d:	popa   
  409e3e:	push   ebp
  409e3f:	int3   
  409e40:	add    BYTE PTR [eax],al
  409e42:	add    al,0x93
  409e44:	xor    DWORD PTR [ecx],edx
  409e46:	sub    DWORD PTR [eax],edx
  409e48:	mov    ecx,esp
  409e4a:	adc    DWORD PTR [eax+0x0],0x15
  409e4e:	inc    ebp
  409e4f:	add    al,0x3b
  409e51:	push   cs
  409e52:	add    BYTE PTR es:[ebx-0x4bfc33a3],al
  409e59:	jp     0x409eab
  409e5b:	pop    ebp
  409e5c:	int3   
  409e5d:	int3   
  409e5e:	add    bh,bh
  409e60:	mov    edx,DWORD PTR ds:0xcea1ab01
  409e66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e67:	add    ch,bl
  409e69:	cmp    edi,0xffffffe7
  409e6c:	mov    esp,0x330f7b71
  409e71:	dec    esp
  409e73:	add    BYTE PTR ds:0xc7c10000,dl
  409e79:	cmp    ecx,DWORD PTR [edi+0x50458300]
  409e7f:	add    eax,0xa0a2c2
  409e84:	add    BYTE PTR [ecx+0xc0ff00],cl
  409e8a:	add    BYTE PTR [ecx+0x5d],ch
  409e8d:	push   esi
  409e8e:	push   0xffffffdd
  409e90:	mov    DWORD PTR [ebp+0x4157428d],ecx
  409e96:	mov    ah,0xc7
  409e98:	inc    ebp
  409e99:	je     0x409e9c
  409e9b:	je     0x409e28
  409e9d:	add    BYTE PTR [ebp+0x49faa419],cl
  409ea3:	call   0xcbab2c33
  409ea8:	pop    eax
  409ea9:	xchg   ecx,eax
  409eaa:	arpl   WORD PTR [ebx+ecx*4-0x1],si
  409eae:	inc    ebp
  409eaf:	push   0x0
  409eb1:	add    ah,cl
  409eb3:	iret   
  409eb4:	or     eax,0xc0104685
  409eb9:	int3   
  409eba:	pop    ebp
  409ebb:	pop    ecx
  409ebc:	push   0xffffffbb
  409ebe:	and    eax,DWORD PTR [eax]
  409ec0:	mov    eax,DWORD PTR [eax]
  409ec2:	inc    DWORD PTR [ecx]
  409ec4:	add    BYTE PTR [eax],al
  409ec6:	(bad)  
  409ec7:	aas    
  409ec8:	sbb    eax,0x8b4d6167
  409ecd:	int3   
  409ece:	add    BYTE PTR [esi-0x69],bl
  409ed1:	aaa    
  409ed2:	out    dx,eax
  409ed3:	mov    ecx,DWORD PTR [edi]
  409ed5:	in     al,dx
  409ed6:	adc    BYTE PTR [edx+0x0],ch
  409ed9:	add    BYTE PTR [eax],al
  409edb:	xchg   edi,eax
  409edc:	inc    BYTE PTR [ebx]
  409ede:	mov    dl,0x8b
  409ee0:	add    ah,cl
  409ee2:	mov    esi,DWORD PTR [ebx]
  409ee4:	mov    bl,0x98
  409ee6:	and    edi,edi
  409ee8:	call   0xc0ab8a3a
  409eed:	bswap  esp
  409eef:	aam    0x3b
  409ef1:	bound  edx,QWORD PTR [edx+0x45]
  409ef4:	mov    eax,DWORD PTR [ecx]
  409ef6:	add    BYTE PTR [ebx-0x7a],al
  409ef9:	push   cs
  409efa:	push   esp
  409efb:	int3   
  409efc:	add    BYTE PTR [eax],al
  409efe:	push   esi
  409eff:	inc    ebp
  409f00:	add    ah,cl
  409f02:	int3   
  409f03:	jg     0x409f3e
  409f05:	push   ss
  409f06:	pop    esi
  409f07:	add    BYTE PTR [ecx],al
  409f09:	add    BYTE PTR [ebx+0x5abc3a2d],cl
  409f0f:	add    BYTE PTR [eax],al
  409f11:	je     0x409edf
  409f13:	add    BYTE PTR [ecx+0x3ccc088b],cl
  409f19:	sbb    DWORD PTR [edi-0x22ff7673],ecx
  409f1f:	dec    edi
  409f20:	cmp    eax,0x721b
  409f25:	inc    DWORD PTR [eax]
  409f27:	je     0x409f29
  409f29:	test   DWORD PTR [ebp-0x7e],esi
  409f2c:	(bad)
  409f2f:	inc    ebp
  409f30:	add    BYTE PTR [ebp-0x103efd00],cl
  409f36:	and    eax,0xff8b8b15
  409f3b:	adc    DWORD PTR [esi-0x1],0xffffffff
  409f3f:	inc    ecx
  409f40:	leave  
  409f41:	dec    eax
  409f42:	inc    ebx
  409f43:	add    BYTE PTR [ebx+0x78ae45c0],cl
  409f49:	add    al,0x14
  409f4b:	je     0x409f4d
  409f4d:	in     al,dx
  409f4e:	adc    BYTE PTR [eax],cl
  409f50:	mov    ecx,DWORD PTR [eax]
  409f52:	mov    ebx,edx
  409f54:	jl     0x409f50
  409f56:	xlat   BYTE PTR ds:[ebx]
  409f57:	mov    DWORD PTR [ecx+0x3086a45],ecx
  409f5d:	(bad)  
  409f5e:	ins    BYTE PTR es:[edi],dx
  409f5f:	call   0x419e73
  409f64:	lea    eax,[ecx]
  409f66:	dec    DWORD PTR [esi]
  409f68:	fnstcw WORD PTR [ebp+0x74cc8bb8]
  409f6e:	add    cl,dh
  409f70:	sub    ecx,ecx
  409f72:	xor    eax,0x8b005600
  409f77:	mov    ebx,ebp
  409f79:	mov    ecx,DWORD PTR [edi]
  409f7b:	ret    
  409f7c:	dec    edx
  409f7d:	pusha  
  409f7e:	das    
  409f7f:	popa   
  409f80:	rol    BYTE PTR [ebp+0x48640000],0x1c
  409f87:	cmp    edx,DWORD PTR [ebp-0x23]
  409f8a:	add    BYTE PTR [ebx-0xff76f8],al
  409f90:	or     esp,DWORD PTR [edx+0xeb127b]
  409f96:	int3   
  409f97:	int3   
  409f98:	xchg   ebx,eax
  409f99:	lods   al,BYTE PTR ds:[esi]
  409f9a:	pop    eax
  409f9b:	cli    
  409f9c:	add    BYTE PTR [ecx-0x3f33aff8],cl
  409fa2:	int3   
  409fa3:	int3   
  409fa4:	sbb    al,0x37
  409fa6:	and    edx,DWORD PTR [ebx-0x75]
  409fa9:	add    al,al
  409fab:	int3   
  409fac:	pop    ebp
  409fad:	xchg   esp,eax
  409fae:	out    0xb0,al
  409fb0:	mov    eax,edi
  409fb2:	mov    edi,edi
  409fb4:	push   esi
  409fb5:	(bad)  
  409fb7:	call   0x360eb354
  409fbc:	in     al,dx
  409fbd:	int3   
  409fbe:	int3   
  409fbf:	int3   
  409fc0:	fwait
  409fc1:	je     0x40a012
  409fc3:	rcl    DWORD PTR [eax],0xc7
  409fc6:	mov    eax,DWORD PTR [eax]
  409fc8:	mov    ebx,DWORD PTR [ebp+0xc]
  409fcb:	or     BYTE PTR [ebp+0x14],bl
  409fce:	xchg   edi,eax
  409fcf:	bswap  esp
  409fd1:	add    al,al
  409fd3:	or     BYTE PTR [eax-0x80],dh
  409fd6:	xchg   edi,eax
  409fd7:	pop    ss
  409fd8:	add    BYTE PTR [ecx-0x3333ffab],cl
  409fde:	add    BYTE PTR [ebx-0x1d000c35],cl
  409fe4:	mov    ecx,DWORD PTR [edi]
  409fe6:	add    DWORD PTR [ebx+0x542be54f],ecx
  409fec:	or     BYTE PTR [ebp-0x34],cl
  409fef:	add    ah,cl
  409ff1:	add    BYTE PTR [ebx+ecx*4+0x47],dh
  409ff5:	cmp    BYTE PTR [eax+0x3b],0x8
  409ff9:	add    BYTE PTR [eax+eax*1],cl
  409ffc:	inc    edi
  409ffd:	outs   dx,DWORD PTR ds:[esi]
  409ffe:	mov    esp,DWORD PTR [eax+eax*1-0x74747475]
  40a005:	add    BYTE PTR [ebp+0x7dd5685],al
  40a00b:	inc    eax
  40a00c:	inc    ebp
  40a00d:	(bad)  
  40a00e:	jmp    0x409f99
  40a010:	and    DWORD PTR [ecx-0x74335bd0],eax
  40a016:	add    BYTE PTR [edi],cl
  40a018:	add    al,al
  40a01a:	test   DWORD PTR [ebp+0x1d],ebx
  40a01d:	pop    esi
  40a01e:	hlt    
  40a01f:	jo     0x40a095
  40a021:	add    DWORD PTR [ecx],eax
  40a023:	or     al,0xd5
  40a025:	pop    esp
  40a026:	push   ds
  40a027:	imul   ecx,DWORD PTR [ebx-0xffff7d],0xd074ff00
  40a031:	xchg   ecx,eax
  40a032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a033:	and    eax,0xcc8b6aff
  40a038:	cmp    ebp,ebp
  40a03a:	mov    BYTE PTR [ecx+0x46],bh
  40a040:	dec    DWORD PTR [ebx+0x3da00c10]
  40a046:	in     al,dx
  40a047:	jmp    0xfb56c4c
  40a04c:	sub    BYTE PTR [edi],bh
  40a04e:	jg     0x40a0c4
  40a050:	pop    ebp
  40a051:	add    DWORD PTR [ebp+0xc7500ff],eax
  40a057:	add    al,0x7d
  40a059:	daa    
  40a05a:	fcmove st,st(4)
  40a05c:	add    ah,cl
  40a05e:	add    BYTE PTR [edi+ebp*8+0x77],dh
  40a062:	inc    ecx
  40a063:	pop    edx
  40a064:	rcl    BYTE PTR [ebp-0x34],0x15
  40a068:	je     0x40a0de
  40a06a:	test   eax,eax
  40a06c:	mov    edi,edi
  40a06e:	fbstp  TBYTE PTR [ebp-0x338ab300]
  40a074:	mov    ds:0xf619c04,eax
  40a079:	add    ah,cl
  40a07b:	int3   
  40a07c:	add    al,0x0
  40a07e:	call   0x9761f64f
  40a083:	cmp    al,0x45
  40a085:	mov    DWORD PTR [ebx+0x2d6b1a00],ecx
  40a08b:	pop    esp
  40a08c:	adc    eax,0xdd008b10
  40a091:	mov    DWORD PTR [esp+esi*2],ecx
  40a094:	dec    eax
  40a095:	mov    DWORD PTR [ebp+0xdd95],eax
  40a09b:	add    DWORD PTR [edi-0x7f],ebp
  40a09e:	xor    eax,DWORD PTR [ebp+0x0]
  40a0a1:	push   ebp
  40a0a2:	sgdtd  [eax+eax*1]
  40a0a6:	add    DWORD PTR [ebp+0x7d],ecx
  40a0a9:	hlt    
  40a0aa:	mov    bh,0xd5
  40a0ac:	add    BYTE PTR [ebp+0x6a66838b],al
  40a0b2:	rcr    BYTE PTR [ebx+eax*4-0x75],1
  40a0b6:	or     al,0xcc
  40a0b8:	(bad)  
  40a0b9:	fisttp QWORD PTR [edi]
  40a0bb:	add    BYTE PTR [ebp-0x74],al
  40a0be:	xchg   eax,ebp
  40a0c0:	add    BYTE PTR [eax],al
  40a0c2:	add    BYTE PTR [ecx],al
  40a0c4:	sbb    DWORD PTR ds:[edx],0x53
  40a0c8:	mov    ebp,ebx
  40a0ca:	orps   xmm3,XMMWORD PTR [ebp-0x75]
  40a0ce:	inc    esi
  40a0cf:	add    DWORD PTR [ecx+0x5c],ebp
  40a0d2:	loope  0x40a134
  40a0d4:	int3   
  40a0d5:	mov    eax,DWORD PTR [eax]
  40a0d7:	shl    BYTE PTR [edi-0x26],0xd2
  40a0db:	pop    esp
  40a0dc:	jne    0x40a069
  40a0de:	add    eax,DWORD PTR [eax]
  40a0e0:	jmp    0x40a0ae
  40a0e2:	add    DWORD PTR [eax],0x47
  40a0e5:	lahf   
  40a0e6:	mov    bl,BYTE PTR [ebp+eax*2+0x0]
  40a0ea:	add    BYTE PTR [ecx],al
  40a0ec:	hlt    
  40a0ed:	jnp    0x40a15a
  40a0ef:	cld    
  40a0f0:	(bad)  
  40a0f2:	adc    eax,0x83000100
  40a0f7:	add    DWORD PTR [eax+0x7a],ebp
  40a0fa:	stos   DWORD PTR es:[edi],eax
  40a0fb:	popa   
  40a0fc:	or     al,0xcc
  40a0fe:	add    BYTE PTR [ebx+0x5ccfda67],cl
  40a104:	add    bh,bh
  40a106:	inc    DWORD PTR [eax]
  40a108:	add    bh,bh
  40a10a:	inc    ebp
  40a10b:	inc    DWORD PTR [esi-0x61]
  40a10e:	lea    ebx,[ecx-0x75]
  40a111:	fld    QWORD PTR [eax]
  40a113:	mov    eax,DWORD PTR [esi+0x14d6af8]
  40a119:	add    BYTE PTR [ebp+0x33cc01ff],al
  40a11f:	call   FWORD PTR [ebp+0x6c]
  40a122:	add    ah,BYTE PTR [esi-0x34]
  40a125:	jne    0x40a0f3
  40a127:	or     BYTE PTR [ebp+ebx*1+0x7585139b],dh
  40a12e:	or     BYTE PTR [ebx+0x4d0c],al
  40a134:	sbb    bh,BYTE PTR [esi-0x33742a5f]
  40a13a:	mov    eax,DWORD PTR [eax]
  40a13c:	(bad)  
  40a13d:	rcr    BYTE PTR [ecx-0x1d],0x56
  40a141:	int3   
  40a142:	push   0xffffffff
  40a144:	add    BYTE PTR [eax],al
  40a146:	add    DWORD PTR [ebp+0x19],eax
  40a149:	gs pop di
  40a14c:	lea    eax,[eax]
  40a14e:	mov    edi,edi
  40a150:	fst    QWORD PTR [edx*2+0x8dd7d]
  40a157:	push   esi
  40a158:	sldt   WORD PTR [eax]
  40a15b:	test   DWORD PTR [ecx+0x48],eax
  40a15e:	mov    esi,0x8b017519
  40a163:	add    BYTE PTR [ebp+0xaea950],dh
  40a169:	(bad)  
  40a16a:	dec    esp
  40a16c:	mov    eax,DWORD PTR [eax]
  40a16e:	dec    ebp
  40a16f:	add    BYTE PTR [ebp-0x24],ch
  40a172:	pop    esp
  40a173:	xchg   ebx,eax
  40a174:	push   DWORD PTR [ebx]
  40a176:	lldt   WORD PTR [ecx+0x48]
  40a17a:	daa    
  40a17b:	iret   
  40a17c:	in     al,dx
  40a17d:	int3   
  40a17e:	(bad)  
  40a17f:	jne    0x40a10c
  40a181:	add    BYTE PTR [esp+ecx*8],cl
  40a184:	cmc    
  40a185:	mov    ch,0x46
  40a187:	cdq    
  40a188:	push   eax
  40a189:	inc    ebp
  40a18a:	mov    eax,DWORD PTR [ebx+0x3187c08f]
  40a190:	fisttp QWORD PTR [ebx-0x3fffea34]
  40a196:	add    BYTE PTR [ebx+esi*1-0x7b],dh
  40a19a:	pop    ss
  40a19b:	dec    edi
  40a19c:	push   DWORD PTR [ebp-0x34]
  40a19f:	dec    DWORD PTR [ecx+0x165b7dd]
  40a1a5:	add    DWORD PTR [ebp+0x10],edx
  40a1a8:	add    BYTE PTR [ebp+0x5990cc0c],al
  40a1ae:	jp     0x40a1bb
  40a1b0:	ror    BYTE PTR [ebp-0x220876ff],0x3f
  40a1b7:	mov    cl,0x1
  40a1b9:	je     0x40a140
  40a1bb:	push   ebp
  40a1bc:	add    BYTE PTR [eax],al
  40a1be:	call   0xdfaa8fc3
  40a1c3:	sahf   
  40a1c4:	int3   
  40a1c5:	fld    QWORD PTR [eax]
  40a1c7:	add    dh,cl
  40a1c9:	mov    edx,fs
  40a1cb:	adc    DWORD PTR [eax],ecx
  40a1cd:	add    BYTE PTR [edi],cl
  40a1cf:	add    BYTE PTR [edx-0x75],ch
  40a1d2:	add    BYTE PTR [edi+ecx*8],al
  40a1d5:	(bad)  
  40a1d6:	sub    cl,BYTE PTR [eax+0x0]
  40a1d9:	int3   
  40a1da:	mov    ebp,ebx
  40a1dc:	jne    0x40a242
  40a1de:	sbb    DWORD PTR [ecx+0xf5000],edi
  40a1e4:	(bad)  
  40a1e5:	int3   
  40a1e6:	mov    DWORD PTR [ecx],eax
  40a1e8:	std    
  40a1e9:	(bad)  
  40a1ea:	leave  
  40a1eb:	mov    ecx,DWORD PTR [edx*2+0x158dcc00]
  40a1f2:	add    al,0xd6
  40a1f4:	add    ch,bl
  40a1f6:	mov    edx,DWORD PTR [eax+0x0]
  40a1f9:	inc    esi
  40a1fa:	add    eax,esp
  40a1fc:	sub    eax,0x7428aa14
  40a201:	or     al,0x89
  40a203:	mov    esi,DWORD PTR [edi-0x14]
  40a206:	inc    ebp
  40a207:	jb     0x40a209
  40a209:	int3   
  40a20a:	test   esp,ecx
  40a20c:	add    BYTE PTR [eax],al
  40a20e:	inc    DWORD PTR [eax]
  40a210:	mov    ch,0xb0
  40a212:	push   0xccdd8b24
  40a217:	int3   
  40a218:	ins    DWORD PTR es:[edi],dx
  40a219:	faddp  st(2),st
  40a21b:	xchg   esp,eax
  40a21c:	add    bh,bh
  40a21e:	int3   
  40a21f:	int3   
  40a220:	add    BYTE PTR [eax],al
  40a222:	inc    esi
  40a223:	in     al,dx
  40a224:	jno    0x40a1da
  40a226:	mov    bh,0x6d
  40a228:	add    eax,DWORD PTR [eax]
  40a22a:	mov    ecx,DWORD PTR [ebx-0x4f9aa0b2]
  40a230:	push   esi
  40a231:	bswap  esp
  40a233:	pop    ebp
  40a234:	add    BYTE PTR [ebx+0x4518b89],cl
  40a23a:	daa    
  40a23b:	popa   
  40a23c:	int3   
  40a23d:	add    BYTE PTR [eax+eax*1],al
  40a240:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a241:	pop    eax
  40a242:	jecxz  0x40a293
  40a244:	add    BYTE PTR [eax],dl
  40a246:	add    al,0x8d
  40a248:	add    edi,edi
  40a24a:	adc    eax,0x65549a89
  40a24f:	(bad)  
  40a250:	adc    BYTE PTR [eax],al
  40a252:	add    BYTE PTR [ecx-0x25b69873],cl
  40a258:	inc    DWORD PTR [esi-0x75]
  40a25b:	add    DWORD PTR [eax],eax
  40a25d:	add    BYTE PTR [ebp-0x2c9f6fc],al
  40a263:	jb     0x40a265
  40a265:	lea    ecx,[ebp+0x4d]
  40a268:	pop    esi
  40a269:	mov    bh,0x35
  40a26b:	sub    eax,0x4508eccc
  40a270:	add    BYTE PTR [eax+eax*1],al
  40a273:	xor    esp,DWORD PTR [eax+ecx*8+0x100f26d]
  40a27a:	int3   
  40a27b:	adc    eax,0x22f4ebe4
  40a280:	int3   
  40a281:	mov    eax,DWORD PTR [ecx]
  40a283:	add    BYTE PTR [eax],al
  40a285:	push   esi
  40a286:	add    BYTE PTR [edx+esi*2],al
  40a289:	fsubr  st(4),st
  40a28b:	fisttp WORD PTR [eax*2-0x155c33bb]
  40a292:	push   0x9
  40a294:	mov    DWORD PTR [ecx],eax
  40a296:	or     DWORD PTR [ebx-0x338afcbb],0xffffffcd
  40a29d:	mov    dl,0xc2
  40a29f:	arpl   WORD PTR [eax],ax
  40a2a1:	ffree  st(0)
  40a2a3:	add    al,bl
  40a2a5:	cwde   
  40a2a6:	sub    DWORD PTR [ebp+0x45],ebx
  40a2a9:	je     0x40a2b7
  40a2ab:	mov    ebx,ebp
  40a2ad:	add    DWORD PTR [ecx],eax
  40a2af:	add    BYTE PTR [ebx-0x19],bl
  40a2b2:	fld    TBYTE PTR [eax+edx*1]
  40a2b5:	mov    eax,DWORD PTR [ecx]
  40a2b7:	add    al,0x86
  40a2b9:	mov    bh,0x3
  40a2bb:	xchg   edx,eax
  40a2bc:	or     al,0x1
  40a2be:	add    BYTE PTR [eax],al
  40a2c0:	je     0x40a24b
  40a2c2:	push   eax
  40a2c3:	add    DWORD PTR ds:0x74842a5d,edi
  40a2c9:	add    BYTE PTR [ebx+0x3bfac38b],cl
  40a2cf:	out    dx,eax
  40a2d0:	pop    ebp
  40a2d1:	or     BYTE PTR [eax],al
  40a2d3:	int3   
  40a2d4:	mov    edi,DWORD PTR [eax-0x76ea0b1c]
  40a2da:	(bad)  
  40a2db:	dec    esp
  40a2dd:	add    al,0xe8
  40a2df:	or     BYTE PTR [ebp-0x7a],al
  40a2e2:	pop    ss
  40a2e3:	pop    ebp
  40a2e4:	sbb    BYTE PTR [ebx-0x4a747423],al
  40a2ea:	mov    dl,0x99
  40a2ec:	cmp    eax,0x6a890f00
  40a2f1:	mov    DWORD PTR ds:0x5a440f85,edx
  40a2f7:	jne    0x40a30c
  40a2f9:	call   DWORD PTR ds:0x50fdff01
  40a2ff:	imul   esp,DWORD PTR [ebp-0x33ff76f4],0xffff838b
  40a309:	aad    0x78
  40a30b:	xor    eax,0x8385cc46
  40a310:	adc    BYTE PTR [edx-0x7ab276a9],bh
  40a316:	dec    DWORD PTR [ebx+0x86aff75]
  40a31c:	dec    DWORD PTR [ebx-0x44]
  40a31f:	or     DWORD PTR [ecx-0x20],0x5a080085
  40a326:	es mov cl,0x51
  40a329:	lea    esi,[ebp+0x0]
  40a32c:	int3   
  40a32d:	add    BYTE PTR [eax],al
  40a32f:	mov    edi,edi
  40a331:	ret    0x51bf
  40a334:	cmp    ecx,DWORD PTR [ebx-0x3b337434]
  40a33a:	popa   
  40a33b:	sub    ebp,DWORD PTR [edi+0x3565d00]
  40a341:	add    DWORD PTR [ebx+ecx*4],ecx
  40a344:	jne    0x40a2f6
  40a346:	popf   
  40a347:	xchg   esi,eax
  40a348:	and    DWORD PTR [ebx+eax*4-0x1],esi
  40a34c:	int3   
  40a34d:	xchg   BYTE PTR [ecx+0x49],bl
  40a350:	mov    eax,ds:0xcc0800cc
  40a355:	add    ah,cl
  40a357:	add    BYTE PTR [esi-0x3],dl
  40a35a:	sahf   
  40a35b:	adc    eax,0xcc5d4ddc
  40a360:	inc    DWORD PTR [ebp-0x177e44e0]
  40a366:	add    eax,eax
  40a368:	add    esi,DWORD PTR [ebp+0x15]
  40a36b:	fisttp QWORD PTR [ebx-0x47d56b4f]
  40a371:	add    DWORD PTR [eax],eax
  40a373:	adc    eax,0xf9989f56
  40a378:	push   ecx
  40a379:	shl    BYTE PTR [ebp+0x8],0x8b
  40a37d:	(bad)  
  40a37e:	int3   
  40a37f:	mov    DWORD PTR [eax],eax
  40a381:	fmul   DWORD PTR [edi-0x66]
  40a384:	cmp    al,0x8
  40a386:	add    BYTE PTR [eax],al
  40a388:	(bad)  
  40a389:	ja     0x40a38d
  40a38b:	mov    dh,0xbd
  40a38d:	dec    DWORD PTR [ebx+0xc74088b]
  40a393:	push   eax
  40a394:	lea    ebp,[eax+0x3c]
  40a397:	and    DWORD PTR [esi-0x75],ecx
  40a39a:	add    DWORD PTR [eax],edx
  40a39c:	push   eax
  40a39d:	xchg   esi,eax
  40a39e:	es xor edi,ebp
  40a3a1:	add    BYTE PTR [eax],al
  40a3a3:	dec    DWORD PTR [ebx+0xcc00ff]
  40a3a9:	test   BYTE PTR [edx],bl
  40a3ab:	jmp    0x40a39d
  40a3ad:	add    BYTE PTR [ebx+0x45fa0000],cl
  40a3b3:	pop    ss
  40a3b4:	nop
  40a3b5:	add    BYTE PTR [eax],al
  40a3b7:	mov    ecx,esp
  40a3b9:	dec    DWORD PTR [ebx+0x4caa1074]
  40a3bf:	scas   al,BYTE PTR es:[edi]
  40a3c0:	adc    DWORD PTR [ebp+0x1],eax
  40a3c3:	add    ah,cl
  40a3c5:	pop    ecx
  40a3c6:	cmp    ch,cl
  40a3c8:	scas   al,BYTE PTR es:[edi]
  40a3c9:	jmp    eax
  40a3cb:	inc    ebp
  40a3cc:	mov    ecx,DWORD PTR [ebx+0x7c85cc00]
  40a3d2:	dec    edi
  40a3d3:	add    eax,0x8b000c36
  40a3d8:	mov    ebp,DWORD PTR ds:0x832c484a
  40a3de:	add    BYTE PTR [ebx-0x7474ff39],cl
  40a3e4:	je     0x40a412
  40a3e6:	sbb    bh,bl
  40a3e8:	inc    ebx
  40a3e9:	loopne 0x40a3eb
  40a3eb:	cmp    edi,0xffffffa9
  40a3ee:	xchg   ch,dh
  40a3f0:	mov    edx,0x8dcc00cc
  40a3f5:	int3   
  40a3f6:	add    BYTE PTR [ebx+ecx*4],cl
  40a3f9:	xor    ch,BYTE PTR ds:0xe055447a
  40a3ff:	add    bh,bh
  40a401:	mov    ebp,0x5db4175a
  40a406:	or     ah,cl
  40a408:	lea    ecx,[ebx+0x618b0401]
  40a40e:	jae    0x40a42f
  40a410:	dec    esp
  40a411:	or     BYTE PTR [ebp-0x22ebff75],al
  40a417:	sti    
  40a418:	adc    DWORD PTR [eax+0x0],edx
  40a41b:	int3   
  40a41c:	mov    eax,DWORD PTR [eax]
  40a41e:	int3   
  40a41f:	(bad)  
  40a420:	inc    DWORD PTR [ecx+0x4c]
  40a423:	call   0x11cc:0xcddc030
  40a42a:	inc    ecx
  40a42b:	addr16 push ecx
  40a42d:	add    BYTE PTR [ebp-0x748bff01],al
  40a433:	call   DWORD PTR [eax]
  40a435:	dec    esp
  40a436:	pop    ss
  40a437:	push   ecx
  40a438:	jno    0x40a43a
  40a43a:	add    edi,edi
  40a43c:	push   esi
  40a43d:	fst    QWORD PTR [edi]
  40a43f:	pop    esi
  40a440:	jp     0x40a3cd
  40a442:	int3   
  40a443:	add    al,0x46
  40a445:	fld    QWORD PTR [ecx]
  40a447:	add    BYTE PTR [ebx+edx*1-0x62],dh
  40a44b:	jo     0x40a47b
  40a44d:	mov    DWORD PTR [eax],eax
  40a44f:	add    ch,bl
  40a451:	and    BYTE PTR [ecx+eax*2+0x45550c82],dl
  40a458:	or     BYTE PTR [eax],al
  40a45a:	andnps xmm3,xmm5
  40a45d:	jl     0x40a4c3
  40a45f:	jle    0x40a498
  40a461:	add    DWORD PTR [ebp+0x0],esi
  40a464:	add    ecx,eax
  40a466:	pop    edi
  40a467:	cmp    dh,BYTE PTR [eax]
  40a469:	jne    0x40a3f6
  40a46b:	int3   
  40a46c:	int3   
  40a46d:	inc    ebp
  40a46e:	lea    ecx,[eax]
  40a470:	jne    0x40a43f
  40a472:	mov    WORD PTR [ecx],ds
  40a474:	out    dx,al
  40a475:	mov    ecx,DWORD PTR [ebp-0x23]
  40a478:	mov    ecx,eax
  40a47a:	adc    al,0xab
  40a47c:	cmp    BYTE PTR [eax],al
  40a47e:	test   DWORD PTR [ebx-0x33338b40],ecx
  40a484:	mov    ebx,DWORD PTR [edx+0x10de4d2f]
  40a48a:	(bad)  
  40a48b:	fisttp QWORD PTR [ecx+0x6e1c2285]
  40a491:	add    al,ch
  40a493:	mov    DWORD PTR [ebx-0x33ff7423],ecx
  40a499:	jmp    0x40a4b4
  40a49b:	dec    ecx
  40a49c:	cmp    al,0x8b
  40a49e:	dec    esp
  40a4a0:	add    BYTE PTR [ebx-0x177bb459],bh
  40a4a6:	ror    ah,0x8b
  40a4a9:	add    BYTE PTR [eax+ecx*1],cl
  40a4ac:	push   0xffffffbd
  40a4ae:	fs fs cs add bh,bh
  40a4b3:	fnsave [ebp-0x2f]
  40a4b6:	mov    ah,0x40
  40a4b8:	ror    BYTE PTR fs:[ebx+0x1501cc00],0x0
  40a4c0:	in     al,dx
  40a4c1:	or     al,0x4e
  40a4c3:	inc    ecx
  40a4c4:	mov    al,ds:0x89ff01ff
  40a4c9:	sti    
  40a4ca:	and    al,BYTE PTR [ebx-0x1fff760a]
  40a4d0:	or     BYTE PTR [eax],cl
  40a4d2:	mov    edx,DWORD PTR ds:0x16bb1910
  40a4d8:	loop   0x40a4c6
  40a4da:	add    BYTE PTR [ebx-0x51eb3d00],cl
  40a4e0:	jo     0x40a46d
  40a4e2:	int3   
  40a4e3:	add    BYTE PTR [eax],al
  40a4e5:	add    BYTE PTR [eax+eax*1-0x34],dh
  40a4e9:	and    DWORD PTR [ecx+0x72],edx
  40a4ec:	fucom  st(0)
  40a4ee:	add    BYTE PTR [eax],al
  40a4f0:	ror    BYTE PTR ds:0x5da8f1d6,0xdd
  40a4f7:	add    al,0x0
  40a4f9:	or     BYTE PTR [eax],cl
  40a4fb:	jne    0x40a4fc
  40a4fd:	adc    ah,dh
  40a4ff:	retf   0x58
  40a502:	add    BYTE PTR [eax-0x1],dl
  40a505:	fwait
  40a506:	in     al,0x1
  40a508:	das    
  40a509:	push   esi
  40a50a:	rol    BYTE PTR [eax],0x0
  40a50d:	loopne 0x40a50e
  40a50f:	je     0x40a4d1
  40a511:	into   
  40a512:	xor    ebx,eax
  40a514:	je     0x40a4f6
  40a516:	add    BYTE PTR [ebx+0x3a3cc60c],cl
  40a51c:	xor    al,BYTE PTR [eax]
  40a51e:	add    DWORD PTR [ebx],0x0
  40a521:	int3   
  40a522:	jne    0x40a524
  40a524:	add    DWORD PTR [ecx+0x38],ebx
  40a527:	mov    ds:0x85ffcc11,eax
  40a52c:	mov    ecx,DWORD PTR [ecx]
  40a52e:	and    dh,BYTE PTR [ebx+ecx*8]
  40a531:	in     al,dx
  40a532:	push   esi
  40a533:	add    ah,cl
  40a535:	add    ebp,eax
  40a537:	add    BYTE PTR [ebx+0x656d201a],cl
  40a53d:	dec    DWORD PTR [ecx+0x63ff0074]
  40a543:	mov    dh,BYTE PTR [ecx+0x8]
  40a546:	add    bl,ch
  40a548:	mov    ebx,ebp
  40a54a:	adc    BYTE PTR [ebx-0x41061100],cl
  40a550:	xchg   edx,eax
  40a551:	call   0x7a00a557
  40a556:	ds mov ecx,0x8bc0cc36
  40a55c:	add    BYTE PTR [eax],al
  40a55e:	add    BYTE PTR [eax],cl
  40a560:	add    BYTE PTR [esi],cl
  40a562:	lahf   
  40a563:	and    eax,0xcc8baf
  40a568:	add    DWORD PTR [ecx+0x2ea31c],edx
  40a56e:	push   esi
  40a56f:	adc    BYTE PTR [eax],al
  40a571:	adc    BYTE PTR [eax],cl
  40a573:	inc    esi
  40a574:	je     0x40a4f9
  40a576:	je     0x40a5cd
  40a578:	add    al,BYTE PTR [eax]
  40a57a:	or     al,0xcc
  40a57c:	add    BYTE PTR [esi-0x6a],dh
  40a57f:	jge    0x40a5d3
  40a581:	je     0x40a50e
  40a583:	mov    edx,DWORD PTR ds:0xff8b08ff
  40a589:	jl     0x40a5c6
  40a58b:	mov    esp,0x4601ccaa
  40a590:	adc    cl,al
  40a592:	xchg   esp,eax
  40a593:	lods   eax,DWORD PTR ds:[esi]
  40a594:	cmp    BYTE PTR [eax],cl
  40a596:	or     bh,bh
  40a598:	add    BYTE PTR ds:0x9c748b0c,dl
  40a59e:	jmp    0x40a548
  40a5a0:	call   0x50cb:0xc7894d8b
  40a5a7:	push   es
  40a5a8:	add    BYTE PTR [eax],0x0
  40a5ab:	add    al,0x85
  40a5ad:	jmp    0x40a538
  40a5af:	mov    eax,DWORD PTR [eax]
  40a5b1:	mov    bl,0xc4
  40a5b3:	push   ecx
  40a5b4:	icebp  
  40a5b5:	or     BYTE PTR [eax],al
  40a5b7:	add    esp,ecx
  40a5b9:	mov    cl,0xd8
  40a5bb:	pop    ecx
  40a5bc:	cmp    DWORD PTR [eax],eax
  40a5be:	add    DWORD PTR [eax],eax
  40a5c0:	adc    BYTE PTR [ebp+0x0],dh
  40a5c3:	add    BYTE PTR [ebx-0xb5729b8],al
  40a5c9:	inc    DWORD PTR [eax]
  40a5cb:	cmp    edi,0x1b
  40a5ce:	outs   dx,DWORD PTR ds:[esi]
  40a5cf:	inc    ecx
  40a5d0:	imul   eax,DWORD PTR [eax],0x0
  40a5d3:	inc    DWORD PTR [esi+0x8]
  40a5d6:	add    DWORD PTR [eax+eax*1],eax
  40a5d9:	fcmovne st,st(1)
  40a5db:	scas   eax,DWORD PTR es:[edi]
  40a5dc:	push   ebp
  40a5dd:	int3   
  40a5de:	lgdtd  ds:0x293f241e
  40a5e5:	add    DWORD PTR [eax],0x50
  40a5e8:	add    ah,cl
  40a5ea:	mov    eax,DWORD PTR [ecx]
  40a5ec:	mov    ebx,eax
  40a5ee:	cs ins DWORD PTR es:[edi],dx
  40a5f0:	lea    esp,[eax]
  40a5f2:	add    BYTE PTR [ecx],al
  40a5f4:	add    BYTE PTR [ebp-0x3c0e8894],cl
  40a5fa:	inc    esi
  40a5fb:	lea    eax,[eax]
  40a5fd:	add    BYTE PTR [ebx-0x352200f0],cl
  40a603:	mov    DWORD PTR [eax],esi
  40a605:	ret    0x83
  40a608:	add    DWORD PTR [ebp-0x2e],eax
  40a60b:	xor    BYTE PTR [edx+0x31],bh
  40a60e:	dec    esp
  40a610:	lea    edx,[esi+0x0]
  40a613:	add    BYTE PTR [eax],al
  40a615:	add    BYTE PTR [esi],ah
  40a617:	hlt    
  40a618:	shl    bl,cl
  40a61a:	in     al,dx
  40a61b:	or     bh,bh
  40a61d:	int3   
  40a61e:	push   ds
  40a61f:	mov    edi,0x5001a547
  40a624:	int3   
  40a625:	or     ah,cl
  40a627:	lea    eax,[eax]
  40a629:	add    DWORD PTR [esi+0x1d],0xffffffe4
  40a62d:	cdq    
  40a62e:	add    BYTE PTR [eax],al
  40a630:	fisttp QWORD PTR [ebx+0x39b46362]
  40a636:	add    BYTE PTR [eax],al
  40a638:	adc    BYTE PTR [eax],al
  40a63a:	inc    esi
  40a63b:	jmp    0x40a604
  40a63d:	jmp    DWORD PTR [esi-0x748ebc20]
  40a643:	je     0x40a645
  40a645:	mov    esp,DWORD PTR [edx+0x6c]
  40a648:	rol    BYTE PTR [ecx],1
  40a64a:	add    BYTE PTR [ebx+0x740fff8b],cl
  40a650:	add    DWORD PTR [ebp-0x7095547a],ecx
  40a656:	mov    eax,DWORD PTR [eax]
  40a658:	add    BYTE PTR [ebp-0x3a],al
  40a65b:	aaa    
  40a65c:	fist   DWORD PTR [ecx+eax*1+0x0]
  40a660:	add    al,ch
  40a662:	ror    BYTE PTR [ebx+0x55220100],0xbe
  40a669:	(bad)  
  40a66a:	push   ebp
  40a66b:	mov    ecx,esp
  40a66d:	and    DWORD PTR [ebx+0x60],0xffffff99
  40a671:	jae    0x40a673
  40a673:	add    BYTE PTR [ebx-0x33fe3400],cl
  40a679:	push   ebp
  40a67a:	(bad)  
  40a67b:	pushf  
  40a67c:	pushf  
  40a67d:	ret    
  40a67e:	mov    eax,DWORD PTR [ecx]
  40a680:	add    BYTE PTR [eax],cl
  40a682:	xchg   edx,eax
  40a683:	call   0xdd41f568
  40a688:	(bad)  
  40a689:	int3   
  40a68a:	mov    ecx,DWORD PTR [ebp+0x12f0cc08]
  40a690:	enter  0x8b4d,0x83
  40a694:	inc    ebp
  40a695:	pop    ebp
  40a696:	fbld   TBYTE PTR [esp+edi*4+0xff5de2]
  40a69d:	je     0x40a62a
  40a69f:	add    al,0x0
  40a6a1:	dec    ebp
  40a6a2:	sub    BYTE PTR [eax+0x4cc3e52],0x0
  40a6a9:	xor    DWORD PTR [ecx],0x1
  40a6ac:	or     ecx,DWORD PTR [ecx+0x1]
  40a6af:	int3   
  40a6b0:	mov    eax,DWORD PTR [ecx]
  40a6b2:	dec    esp
  40a6b4:	int3   
  40a6b5:	add    bh,cl
  40a6b7:	int    0x1c
  40a6b9:	mov    ebp,0x6a0f008b
  40a6be:	add    BYTE PTR [ebx-0x4a],ch
  40a6c1:	stc    
  40a6c2:	int3   
  40a6c3:	loopne 0x40a6c9
  40a6c5:	or     al,0x0
  40a6c7:	add    DWORD PTR [ebx+0x74c5d3cc],ecx
  40a6cd:	pusha  
  40a6ce:	inc    DWORD PTR [ebx+ecx*4]
  40a6d1:	mov    esi,DWORD PTR [edi+ebx*2-0x42]
  40a6d5:	ins    DWORD PTR es:[edi],dx
  40a6d6:	mov    eax,eax
  40a6d8:	add    BYTE PTR [eax],al
  40a6da:	add    BYTE PTR [ebp+0x0],dl
  40a6dd:	mov    edx,DWORD PTR [edx-0x41]
  40a6e0:	mov    bh,0x8d
  40a6e2:	int3   
  40a6e3:	mov    ebp,ebx
  40a6e5:	add    BYTE PTR [ebx+0x851359b],bl
  40a6eb:	or     BYTE PTR [ebx-0x340000],cl
  40a6f1:	int3   
  40a6f2:	push   esp
  40a6f3:	mov    dh,0x84
  40a6f5:	stc    
  40a6f6:	add    BYTE PTR [ebp+0x1],al
  40a6f9:	test   DWORD PTR [esi+0x63],edi
  40a6fc:	out    dx,al
  40a6fd:	jmp    0xfff:0xcc8b45
  40a704:	add    BYTE PTR [eax],al
  40a706:	scas   al,BYTE PTR es:[edi]
  40a707:	paddd  mm3,QWORD PTR [edi]
  40a70a:	add    al,0xc0
  40a70c:	add    BYTE PTR [eax],al
  40a70e:	retf   0x1c9e
  40a711:	int3   
  40a712:	add    BYTE PTR [eax],dl
  40a714:	mov    ecx,esp
  40a716:	add    BYTE PTR [ebx+0x1012008b],cl
  40a71c:	(bad)  
  40a71d:	clc    
  40a71e:	int3   
  40a71f:	add    BYTE PTR [ebp+0x74],bl
  40a722:	or     cl,BYTE PTR [esi-0x13ff3751]
  40a728:	or     al,0xc0
  40a72a:	push   esi
  40a72b:	je     0x40a7a2
  40a72d:	add    ecx,DWORD PTR [eax+0xe584a6]
  40a733:	push   0xffffffc0
  40a735:	add    ecx,DWORD PTR [ecx]
  40a737:	push   bp
  40a739:	jbe    0x40a74b
  40a73b:	mov    DWORD PTR [ebx+0x108b6a8b],ecx
  40a741:	add    bh,ch
  40a743:	cli    
  40a744:	pop    edi
  40a745:	jge    0x40a6cc
  40a747:	add    ah,cl
  40a749:	int3   
  40a74a:	sbb    bh,bl
  40a74c:	mov    BYTE PTR [edx-0x74cc7434],bl
  40a752:	mov    ecx,esp
  40a754:	int3   
  40a755:	in     al,dx
  40a756:	cmp    BYTE PTR [edi-0x7d],bh
  40a759:	push   eax
  40a75a:	cmp    edi,0xffffff8b
  40a75d:	adc    BYTE PTR [ebx+0x54],bl
  40a760:	cs xor eax,0x898b8d
  40a766:	add    BYTE PTR [eax-0x39],dl
  40a769:	fld    QWORD PTR [edi-0x2239836e]
  40a76f:	lea    ecx,[ebx-0x5ecd38f1]
  40a775:	(bad)  
  40a776:	int3   
  40a777:	adc    BYTE PTR [ebp-0x74ff7d00],al
  40a77d:	inc    ebp
  40a77e:	add    ebp,edx
  40a780:	loop   0x40a703
  40a782:	mov    eax,DWORD PTR [eax]
  40a784:	add    DWORD PTR [eax],eax
  40a786:	and    BYTE PTR [edi],al
  40a788:	jmp    0x843fb00f
  40a78d:	add    BYTE PTR [ebx-0x1274ff34],cl
  40a793:	sbb    ecx,DWORD PTR [edi+0x7a]
  40a796:	je     0x40a7a8
  40a798:	call   0xf5be19e2
  40a79d:	pop    es
  40a79e:	mov    eax,DWORD PTR [eax]
  40a7a0:	je     0x40a7f8
  40a7a2:	add    bh,bh
  40a7a4:	add    DWORD PTR [eax],eax
  40a7a6:	ret    0xae4e
  40a7a9:	push   esi
  40a7aa:	add    BYTE PTR [ebp-0x75],al
  40a7ad:	mov    eax,DWORD PTR [ebp+0xa1b9d4]
  40a7b3:	dec    ebp
  40a7b4:	int3   
  40a7b5:	dec    DWORD PTR [ebx+0x296ac0ff]
  40a7bb:	mov    dl,0x43
  40a7bd:	fisttp DWORD PTR [ebx-0x4eff76aa]
  40a7c3:	retf   
  40a7c4:	daa    
  40a7c5:	and    BYTE PTR [ebp+0x0],al
  40a7c8:	jmp    FWORD PTR [edx+0x0]
  40a7cb:	pop    ebp
  40a7cc:	add    BYTE PTR [ecx],al
  40a7ce:	scas   eax,DWORD PTR es:[edi]
  40a7cf:	sbb    bl,dl
  40a7d1:	aad    0x0
  40a7d3:	adc    BYTE PTR [esi+0x5d],dl
  40a7d6:	(bad)  
  40a7d7:	cmp    bl,al
  40a7d9:	xchg   DWORD PTR [eax],eax
  40a7db:	mov    eax,DWORD PTR [esi-0x34]
  40a7de:	je     0x40a7f5
  40a7e0:	mov    ecx,DWORD PTR [eax]
  40a7e2:	test   BYTE PTR [edi-0x4b],ah
  40a7e5:	je     0x40a7fc
  40a7e7:	or     al,0xf
  40a7e9:	add    dh,al
  40a7eb:	outs   dx,BYTE PTR ds:[esi]
  40a7ec:	sub    ecx,0x30c00
  40a7f2:	dec    DWORD PTR [ebx+0x3d8415cc]
  40a7f8:	push   eax
  40a7f9:	enter  0xff8b,0x0
  40a7fd:	push   eax
  40a7fe:	imul   ecx,DWORD PTR [ecx],0x54
  40a801:	or     al,0xff
  40a803:	mov    ecx,esp
  40a805:	adc    BYTE PTR [eax],al
  40a807:	inc    ebp
  40a808:	mov    edi,edi
  40a80a:	into   
  40a80b:	mov    fs,WORD PTR [ebp+0x6f]
  40a80e:	add    BYTE PTR [ebx+0x1fd100cc],al
  40a814:	sbb    DWORD PTR [ecx+eax*1+0x10],0x7445158b
  40a81c:	mov    eax,DWORD PTR [eax]
  40a81e:	mov    eax,0x10007806
  40a823:	inc    ebp
  40a824:	add    al,al
  40a826:	mov    es,WORD PTR [eax-0x13]
  40a829:	jmp    0xcc8b:0xff3300cc
  40a830:	rcl    BYTE PTR [eax+0x42],0xdc
  40a834:	jle    0x40a882
  40a836:	add    DWORD PTR [eax],edx
  40a838:	inc    ebp
  40a839:	(bad)  
  40a83a:	cmc    
  40a83b:	(bad)  ds:0x748b858e
  40a841:	int3   
  40a842:	or     BYTE PTR [eax],al
  40a844:	dec    esp
  40a846:	out    0xc8,al
  40a848:	mov    ebx,0x500f014d
  40a84d:	inc    ebp
  40a84e:	jo     0x40a877
  40a850:	or     edx,0xffffffe8
  40a853:	jnp    0x8b40a89f
  40a859:	je     0x40a84a
  40a85b:	repz jnp 0x40a847
  40a85e:	mov    DWORD PTR [eax],eax
  40a860:	adc    BYTE PTR [edx+edx*1],cl
  40a863:	add    al,al
  40a865:	jo     0x40a867
  40a867:	rol    BYTE PTR [ebp-0x77],0x0
  40a86b:	int3   
  40a86c:	call   0x8337dc71
  40a871:	dec    eax
  40a872:	add    al,0x0
  40a874:	inc    ebp
  40a875:	mov    esi,ebp
  40a877:	call   0xdd:0x74ddf27d
  40a87e:	dec    DWORD PTR [eax]
  40a880:	add    ah,cl
  40a882:	dec    eax
  40a883:	(bad)  
  40a884:	sbb    eax,0xff0f003b
  40a889:	add    ah,dl
  40a88b:	mov    eax,ds:0x10da7
  40a890:	add    BYTE PTR [ebp+0x0],dh
  40a893:	mov    ecx,DWORD PTR [eax]
  40a895:	int3   
  40a896:	or     DWORD PTR [esp+ebx*8+0x1750053],0xffffffcc
  40a89e:	ins    DWORD PTR es:[edi],dx
  40a89f:	jge    0x40a832
  40a8a1:	mov    edx,0xebff04cc
  40a8a6:	(bad)  
  40a8a8:	int3   
  40a8a9:	jne    0x40a8f7
  40a8ab:	adc    BYTE PTR [edx-0x3a],al
  40a8ae:	lea    eax,[ecx]
  40a8b0:	add    DWORD PTR [eax],eax
  40a8b2:	repz xchg edi,eax
  40a8b4:	addr16 sub al,0x89
  40a8b7:	mov    DWORD PTR [eax],0x568b89
  40a8bd:	add    BYTE PTR [edx+0x73],ah
  40a8c0:	mov    WORD PTR [ebx],?
  40a8c2:	mov    esi,DWORD PTR [ecx+ecx*4+0x6a]
  40a8c6:	or     dl,cl
  40a8c8:	push   esi
  40a8c9:	jl     0x40a91b
  40a8cb:	jmp    0x40a8cd
  40a8cd:	adc    BYTE PTR [eax],al
  40a8cf:	int3   
  40a8d0:	push   DWORD PTR [ebp-0x10]
  40a8d3:	rcr    DWORD PTR [ecx-0x16],cl
  40a8d6:	int3   
  40a8d7:	adc    eax,0x26e383ff
  40a8dc:	cmp    edx,ebp
  40a8de:	add    BYTE PTR ds:0x75cccc00,dl
  40a8e4:	add    ah,cl
  40a8e6:	shl    DWORD PTR [esi-0x6c],1
  40a8e9:	inc    esp
  40a8ea:	or     BYTE PTR [eax],al
  40a8ec:	mov    edx,DWORD PTR [esi+0x50]
  40a8ef:	fnstenv [ecx-0x34]
  40a8f2:	or     ah,cl
  40a8f4:	add    BYTE PTR [ebp-0x1],al
  40a8f7:	fisttp QWORD PTR [edi]
  40a8f9:	add    DWORD PTR ds:0xff13176d,edx
  40a8ff:	int3   
  40a900:	add    DWORD PTR [eax],0xc
  40a903:	ret    0x570e
  40a906:	movups xmm1,XMMWORD PTR [ecx-0x33fffff8]
  40a90d:	push   esi
  40a90e:	out    0xe7,eax
  40a910:	xor    eax,0x55004d
  40a915:	or     cl,cl
  40a917:	cmp    DWORD PTR [edi-0xff7491],0xff01898b
  40a921:	call   FWORD PTR ds:0x269886
  40a927:	add    DWORD PTR [eax],eax
  40a929:	add    bh,dl
  40a92b:	js     0x40a979
  40a92d:	inc    ebp
  40a92e:	add    al,0x46
  40a930:	add    al,0x50
  40a932:	add    DWORD PTR [esi-0x75],edx
  40a935:	je     0x40a94a
  40a937:	mov    esp,DWORD PTR [esi]
  40a939:	sub    ecx,esp
  40a93b:	add    BYTE PTR [ebx+0x7d2f5c00],cl
  40a941:	sbb    BYTE PTR [ebp+0x1],0x0
  40a945:	add    DWORD PTR [ebp+0x35cc8b50],eax
  40a94b:	mov    dl,0x6a
  40a94d:	jmp    0xccc9ef52
  40a952:	lock mov ecx,0xff04255e
  40a958:	shl    BYTE PTR [ebx],0x8b
  40a95b:	jne    0x40a95c
  40a95d:	add    BYTE PTR [edi],dh
  40a95f:	or     BYTE PTR [eax],al
  40a961:	xchg   ebp,eax
  40a962:	je     0x40a8ef
  40a964:	push   esi
  40a965:	add    dl,dl
  40a967:	jg     0x40a9c6
  40a969:	in     eax,0x1
  40a96b:	int3   
  40a96c:	mov    eax,DWORD PTR [eax]
  40a96e:	mov    esi,DWORD PTR [ebx+ecx*4-0x15]
  40a972:	ret    
  40a973:	int3   
  40a974:	push   ebx
  40a975:	sub    esi,0xffffffcc
  40a978:	mov    ecx,DWORD PTR [ebx+0x47148900]
  40a97e:	mov    esi,0x875
  40a983:	add    BYTE PTR [ebx+0x676689ff],cl
  40a989:	cld    
  40a98a:	add    ebp,ebx
  40a98c:	mov    edi,edi
  40a98e:	int3   
  40a98f:	mov    cl,0xa1
  40a991:	retf   0xcc1d
  40a994:	push   ebp
  40a995:	call   0x89413566
  40a99a:	int3   
  40a99b:	test   BYTE PTR [ecx-0x7d],ah
  40a99e:	cmp    eax,0x1004d
  40a9a3:	dec    ebx
  40a9a4:	sbb    DWORD PTR [edx+0x1a],ebp
  40a9a7:	dec    ebp
  40a9a8:	or     BYTE PTR [esi+0x0],al
  40a9ab:	add    BYTE PTR [eax],al
  40a9ad:	jmp    0x40a9ae
  40a9af:	fiadd  WORD PTR [edi+0x3c]
  40a9b2:	lock adc eax,0xe908e8cc
  40a9b8:	sub    edx,ecx
  40a9ba:	add    BYTE PTR [eax],al
  40a9bc:	je     0x40a9cd
  40a9be:	or     esp,0x1
  40a9c1:	add    BYTE PTR [ebx],dh
  40a9c3:	mov    ds:0x7524c9ce,al
  40a9c8:	or     DWORD PTR [ebx-0xd761b34],0x10
  40a9cf:	dec    esp
  40a9d1:	add    BYTE PTR [ebx+eax*4],cl
  40a9d4:	add    BYTE PTR [ebp-0x94a6b14],al
  40a9da:	hlt    
  40a9db:	push   eax
  40a9dc:	(bad)  
  40a9de:	mov    edx,ecx
  40a9e0:	jne    0x40aa25
  40a9e2:	cli    
  40a9e3:	(bad)  
  40a9e4:	inc    DWORD PTR [ebp+0x89]
  40a9ea:	mov    ebp,ebp
  40a9ec:	jmp    0x40aece
  40a9f1:	mov    eax,DWORD PTR [esi+0x49]
  40a9f4:	mov    bh,0x26
  40a9f6:	repz add BYTE PTR [eax],al
  40a9f9:	int3   
  40a9fa:	add    BYTE PTR [ecx],al
  40a9fc:	call   FWORD PTR [ebp+0x3]
  40a9ff:	movhps QWORD PTR [ebx],xmm7
  40aa02:	sahf   
  40aa03:	add    DWORD PTR [eax],eax
  40aa05:	int3   
  40aa06:	shr    BYTE PTR [esp+ebp*2],0x7b
  40aa0a:	in     al,dx
  40aa0b:	(bad)  
  40aa0d:	je     0x40a998
  40aa0f:	je     0x40aa10
  40aa11:	push   esi
  40aa12:	push   ebp
  40aa13:	dec    edx
  40aa14:	cmovge esp,edx
  40aa17:	or     al,0x74
  40aa19:	int3   
  40aa1a:	mov    esi,DWORD PTR [ebx-0x37]
  40aa1d:	jae    0x40aa22
  40aa1f:	call   0x13fab23
  40aa24:	mov    ecx,DWORD PTR [eax*4-0x48f1e045]
  40aa2b:	(bad)  
  40aa2c:	mov    edx,DWORD PTR [ebp-0x75]
  40aa2f:	xchg   esi,eax
  40aa30:	inc    edi
  40aa31:	push   esi
  40aa32:	jge    0x40aa79
  40aa34:	add    DWORD PTR [ebx+ecx*4],ecx
  40aa37:	add    DWORD PTR [ebx+0x755345eb],0x3b
  40aa3e:	int    0x0
  40aa40:	int3   
  40aa41:	add    BYTE PTR [ebx-0x412b7414],cl
  40aa47:	or     DWORD PTR [ebx+0xcc0c00],0x0
  40aa4e:	inc    DWORD PTR ds:0x8d42fe6c
  40aa54:	add    DWORD PTR [ebp-0x6b5078ff],ecx
  40aa5a:	jp     0x40aa5b
  40aa5c:	int3   
  40aa5d:	fld    QWORD PTR [ecx]
  40aa5f:	mov    ebx,ebp
  40aa61:	mov    esi,DWORD PTR [ebx]
  40aa63:	pop    esp
  40aa64:	or     eax,0x8315d65c
  40aa69:	inc    DWORD PTR [eax]
  40aa6b:	and    eax,0x89257cb0
  40aa70:	adc    BYTE PTR [eax],al
  40aa72:	jnp    0x1403644
  40aa78:	dec    eax
  40aa79:	adc    BYTE PTR [esi-0x1],0x8b
  40aa7d:	int3   
  40aa7e:	inc    esi
  40aa7f:	xchg   esi,eax
  40aa80:	dec    ebp
  40aa81:	test   BYTE PTR [ebx-0x3fb97500],bh
  40aa87:	add    BYTE PTR [eax],al
  40aa89:	inc    ebp
  40aa8a:	(bad)  
  40aa8b:	xor    ecx,DWORD PTR [ebp+0x72]
  40aa8e:	in     eax,0x10
  40aa90:	(bad)  
  40aa91:	fld    QWORD PTR [ecx]
  40aa93:	pop    es
  40aa94:	(bad)  
  40aa95:	sub    esp,DWORD PTR [eax-0x75]
  40aa98:	push   ebp
  40aa99:	add    BYTE PTR [ebp-0x75],al
  40aa9c:	je     0x40aa2b
  40aa9e:	xor    edi,DWORD PTR [ebx]
  40aaa0:	retf   
  40aaa1:	and    DWORD PTR [eax],0x885cceb
  40aaa7:	pop    edx
  40aaa8:	mov    ecx,DWORD PTR [ebx-0x7474f772]
  40aaae:	(bad)  
  40aab0:	test   DWORD PTR [eax],eax
  40aab2:	(bad)  
  40aab3:	in     al,dx
  40aab4:	js     0x40aa66
  40aab6:	std    
  40aab7:	int3   
  40aab8:	add    BYTE PTR [ecx+0x1862a01],cl
  40aabe:	std    
  40aabf:	add    BYTE PTR [ebx+0x18b5500],cl
  40aac5:	call   0x2dc201ca
  40aaca:	outs   dx,DWORD PTR ds:[esi]
  40aacb:	mov    DWORD PTR [eax+edx*2+0x0],esi
  40aacf:	mov    edx,0x8bd403d4
  40aad4:	int3   
  40aad5:	add    ah,cl
  40aad7:	mov    esi,DWORD PTR [ebp-0x34]
  40aada:	or     al,0x8e
  40aadc:	cwde   
  40aadd:	retf   0xe015
  40aae0:	mov    DWORD PTR [ebp+0x1],eax
  40aae3:	mov    dl,0x10
  40aae5:	jnp    0x40aa8a
  40aae7:	push   esi
  40aae8:	add    DWORD PTR [ecx],eax
  40aaea:	add    ah,cl
  40aaec:	add    BYTE PTR [esi+0x1],al
  40aaef:	sub    al,BYTE PTR [edx-0x44]
  40aaf2:	mov    al,BYTE PTR [ecx]
  40aaf4:	dec    ebp
  40aaf5:	int3   
  40aaf6:	int3   
  40aaf7:	xchg   esp,eax
  40aaf8:	push   esp
  40aaf9:	jle    0x40ab0c
  40aafb:	je     0x40ab42
  40aafd:	int3   
  40aafe:	add    BYTE PTR [eax],al
  40ab00:	pop    ebp
  40ab01:	dec    DWORD PTR [edi]
  40ab03:	sub    eax,0x8bbd64f4
  40ab08:	int3   
  40ab09:	or     DWORD PTR [ecx+0x14d96132],0x0
  40ab10:	or     DWORD PTR [esi+eax*2],0x8
  40ab14:	add    BYTE PTR [ecx],al
  40ab16:	add    DWORD PTR [esi+0x4c],edx
  40ab19:	sub    al,0x57
  40ab1b:	add    BYTE PTR [ebp+0x56],dl
  40ab1e:	inc    ebp
  40ab1f:	adc    ecx,0x2f
  40ab22:	jmp    0x40aaf0
  40ab24:	mov    esp,ecx
  40ab26:	add    BYTE PTR [eax],al
  40ab28:	add    ah,cl
  40ab2a:	push   DWORD PTR ds:0x830a2904
  40ab30:	add    BYTE PTR [eax],al
  40ab32:	mov    eax,DWORD PTR [edx-0x4b]
  40ab35:	repz pop ds
  40ab37:	jmp    0x40abad
  40ab39:	add    BYTE PTR [esi+0x10],dl
  40ab3c:	je     0x40ab3d
  40ab3e:	mov    edi,DWORD PTR [edi+0x2b]
  40ab41:	jmp    0x30cc:0x4d3308df
  40ab48:	outs   dx,DWORD PTR ds:[esi]
  40ab49:	add    al,0x28
  40ab4b:	bswap  esp
  40ab4d:	or     BYTE PTR [ebp-0x748bf3fc],cl
  40ab53:	idiv   ebx
  40ab55:	mov    bh,0x11
  40ab57:	(bad)  
  40ab58:	int3   
  40ab59:	add    BYTE PTR [esp+esi*1],al
  40ab5c:	nop
  40ab5d:	xchg   edx,eax
  40ab5e:	cli    
  40ab5f:	jne    0x40ab65
  40ab61:	inc    ebp
  40ab62:	add    bh,bh
  40ab64:	fnsave [eax+eax*1-0x28]
  40ab68:	leave  
  40ab69:	ret    
  40ab6a:	test   DWORD PTR [eax],0xb356cccc
  40ab70:	popa   
  40ab71:	xlat   BYTE PTR ds:[ebx]
  40ab72:	out    0xff,al
  40ab74:	int3   
  40ab75:	inc    ebp
  40ab76:	(bad)  
  40ab77:	loopne 0x40ab02
  40ab79:	inc    DWORD PTR [eax+ebx*8]
  40ab7c:	dec    edi
  40ab7d:	mov    ebp,fs
  40ab7f:	in     al,dx
  40ab80:	inc    ebp
  40ab81:	or     BYTE PTR [esi+0x37],dl
  40ab84:	jmp    0x40ac03
  40ab86:	test   BYTE PTR [eax],0xc
  40ab89:	add    BYTE PTR [ebp+0x0],al
  40ab8c:	add    BYTE PTR [ebx+0x4e385f8b],cl
  40ab92:	xadd   BYTE PTR [eax],al
  40ab95:	int3   
  40ab96:	lea    ebp,[esi+0x71]
  40ab99:	repz and al,0x8b
  40ab9c:	push   DWORD PTR [eax+eax*1+0x15]
  40aba0:	dec    esp
  40aba2:	call   0xf870c0c8
  40aba7:	mov    edi,0xf45c0c6a
  40abad:	xor    eax,0xcc56003a
  40abb2:	add    BYTE PTR [ebx+eax*1],cl
  40abb5:	mov    ecx,DWORD PTR [edi]
  40abb7:	or     DWORD PTR [eax],ecx
  40abb9:	jg     0x40abb6
  40abbb:	add    BYTE PTR [ebp+ebx*8+0x0],dh
  40abbf:	cmp    DWORD PTR [esi],esp
  40abc1:	mov    ds:0x8dd00b7,al
  40abc6:	int3   
  40abc7:	mov    ecx,DWORD PTR [ecx+0x68110089]
  40abcd:	imul   ebx,DWORD PTR [edx],0x18908
  40abd3:	fist   DWORD PTR [ebp+edi*2+0x458d000c]
  40abda:	add    BYTE PTR [eax],al
  40abdc:	inc    esi
  40abdd:	mov    DWORD PTR [ebp-0x4e],edx
  40abe0:	mov    eax,ds:0x75744a27
  40abe5:	add    edi,eax
  40abe7:	gs loop 0x40ac05
  40abea:	std    
  40abeb:	push   0x0
  40abed:	call   0x56413742
  40abf2:	int3   
  40abf3:	sub    BYTE PTR [edx+0x6d],0x12
  40abf7:	push   0x0
  40abf9:	int3   
  40abfa:	add    DWORD PTR [edx-0x59],edx
  40abfd:	xor    DWORD PTR [ebx+0xeb8bcc],0xcc500050
  40ac07:	cmp    DWORD PTR [edi+0x73],ebp
  40ac0a:	push   0xffffff8b
  40ac0c:	add    DWORD PTR [ebx+ecx*4+0x10],esi
  40ac10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac11:	cld    
  40ac12:	xchg   ebx,eax
  40ac13:	dec    DWORD PTR [ebx+0x46ff8b8b]
  40ac19:	add    BYTE PTR [eax],al
  40ac1b:	xor    eax,0xccabcd63
  40ac20:	or     DWORD PTR [ebx+0x5fecb245],0xffffffe9
  40ac27:	add    BYTE PTR [eax],al
  40ac29:	jne    0x40ac33
  40ac2b:	mov    eax,DWORD PTR [eax]
  40ac2d:	add    BYTE PTR ds:0x309c7518,dl
  40ac33:	add    BYTE PTR [eax],dl
  40ac35:	push   esi
  40ac36:	je     0x40ac7e
  40ac38:	pop    esi
  40ac39:	jle    0x40ac40
  40ac3b:	add    ch,bl
  40ac3d:	push   eax
  40ac3e:	add    edi,edi
  40ac40:	add    bh,bh
  40ac42:	mov    edi,DWORD PTR [ebx+0x2f]
  40ac45:	lock and edi,eax
  40ac48:	mov    esi,DWORD PTR [esp+ecx*8-0xf]
  40ac4c:	and    DWORD PTR [edx+0x5deb8bd4],esp
  40ac52:	in     al,dx
  40ac53:	fld    QWORD PTR [eax]
  40ac55:	add    BYTE PTR [ecx],al
  40ac57:	push   edx
  40ac58:	or     BYTE PTR [ebp-0x12],bh
  40ac5b:	int3   
  40ac5c:	add    BYTE PTR [eax],al
  40ac5e:	xor    DWORD PTR [ecx],0xffffffcb
  40ac61:	push   esi
  40ac62:	mov    esp,0xcc55008b
  40ac67:	inc    esi
  40ac68:	add    DWORD PTR [eax],eax
  40ac6a:	adc    al,ah
  40ac6c:	mov    DWORD PTR [bx+di],ebp
  40ac6f:	call   0x3aca9889
  40ac74:	sub    BYTE PTR [edx-0x7aff3301],cl
  40ac7a:	add    BYTE PTR [ebp-0x15],bl
  40ac7d:	add    BYTE PTR [esi+esi*2],al
  40ac80:	xor    esi,DWORD PTR [esi+0x22]
  40ac83:	add    BYTE PTR [ebp+0x1],dl
  40ac86:	adc    eax,0xd17af11b
  40ac8b:	mov    edx,DWORD PTR ds:0x45018b15
  40ac91:	push   eax
  40ac92:	dec    ebp
  40ac93:	ret    
  40ac94:	sub    BYTE PTR [edi],al
  40ac96:	add    al,BYTE PTR [eax]
  40ac98:	add    BYTE PTR [ebx-0x7dd46bf8],cl
  40ac9e:	xchg   edi,eax
  40ac9f:	add    BYTE PTR [eax],al
  40aca1:	int3   
  40aca2:	add    DWORD PTR [eax],ecx
  40aca4:	push   esi
  40aca5:	adc    ah,cl
  40aca7:	inc    ebx
  40aca8:	mov    DWORD PTR [edi],edx
  40acaa:	dec    eax
  40acab:	add    ecx,DWORD PTR [ebp-0x575cffff]
  40acb1:	sub    edi,eax
  40acb3:	add    BYTE PTR [eax],al
  40acb5:	add    ch,bl
  40acb7:	add    BYTE PTR [ebx+0x55c30885],cl
  40acbd:	mov    ebp,esp
  40acbf:	sub    esp,0x24
  40acc2:	push   ebx
  40acc3:	push   esi
  40acc4:	push   edi
  40acc5:	lea    eax,[ebp-0x24]
  40acc8:	push   eax
  40acc9:	call   DWORD PTR ds:0x418060
  40accf:	lea    eax,[ebp-0x24]
  40acd2:	push   eax
  40acd3:	call   DWORD PTR ds:0x418034
  40acd9:	lea    eax,[ebp-0x8]
  40acdc:	push   eax
  40acdd:	push   0x1
  40acdf:	call   DWORD PTR ds:0x4180c4
  40ace5:	mov    eax,DWORD PTR [ebp-0x8]
  40ace8:	mov    ecx,DWORD PTR [eax]
  40acea:	lea    edx,[ebp-0xc]
  40aced:	push   edx
  40acee:	push   0x4181e0
  40acf3:	push   eax
  40acf4:	call   DWORD PTR [ecx]
  40acf6:	mov    ebx,DWORD PTR [ebp+0x8]
  40acf9:	push   0x3
  40acfb:	mov    ds:0x4194b8,eax
  40ad00:	mov    eax,ds:0x4190cc
  40ad05:	pop    esi
  40ad06:	mov    ds:0x419108,eax
  40ad0b:	mov    DWORD PTR [ebp-0x4],esi
  40ad0e:	xor    edi,edi
  40ad10:	mov    eax,ds:0x419370
  40ad15:	mov    eax,DWORD PTR [eax+edi*4]
  40ad18:	mov    ecx,DWORD PTR ds:0x4194b8
  40ad1e:	lea    eax,[eax+ecx*1+0x5b308916]
  40ad25:	push   0x77
  40ad27:	mov    DWORD PTR [ebx],eax
  40ad29:	push   0x0
  40ad2b:	add    ebx,0x4
  40ad2e:	call   DWORD PTR ds:0x4180b0
  40ad34:	xor    eax,eax
  40ad36:	cmp    DWORD PTR [ebp-0x4],esi
  40ad39:	setne  al
  40ad3c:	add    eax,0x2
  40ad3f:	add    edi,eax
  40ad41:	mov    DWORD PTR [ebp-0x4],eax
  40ad44:	cmp    edi,0xf0
  40ad4a:	jb     0x40ad10
  40ad4c:	mov    DWORD PTR [ebp-0x4],esi
  40ad4f:	xor    edi,edi
  40ad51:	push   0x4181d8
  40ad56:	push   0x0
  40ad58:	call   DWORD PTR ds:0x418070
  40ad5e:	mov    ecx,DWORD PTR [ebp+0xc]
  40ad61:	mov    ecx,DWORD PTR [ecx+edi*4]
  40ad64:	xor    eax,eax
  40ad66:	cmp    DWORD PTR ds:0x4194b8,0x80004002
  40ad70:	setne  al
  40ad73:	dec    eax
  40ad74:	and    eax,0x844c62aa
  40ad79:	add    eax,0x25c
  40ad7e:	sub    ecx,eax
  40ad80:	xor    eax,eax
  40ad82:	mov    DWORD PTR [ebx],ecx
  40ad84:	add    ebx,0x4
  40ad87:	cmp    DWORD PTR [ebp-0x4],esi
  40ad8a:	setne  al
  40ad8d:	add    eax,0x2
  40ad90:	add    edi,eax
  40ad92:	mov    DWORD PTR [ebp-0x4],eax
  40ad95:	cmp    edi,0xa0
  40ad9b:	jb     0x40ad51
  40ad9d:	mov    eax,ebx
  40ad9f:	mov    edi,esi
  40ada1:	xor    ecx,ecx
  40ada3:	mov    ebx,DWORD PTR ds:0x4194d8
  40ada9:	mov    edx,0x32b9b7e9
  40adae:	sub    edx,DWORD PTR ds:0x4194b8
  40adb4:	xor    edx,DWORD PTR [ebx+ecx*4]
  40adb7:	mov    DWORD PTR [eax],edx
  40adb9:	xor    edx,edx
  40adbb:	add    eax,0x4
  40adbe:	cmp    edi,esi
  40adc0:	setne  dl
  40adc3:	lea    edi,[edx+0x2]
  40adc6:	add    ecx,edi
  40adc8:	cmp    ecx,0xdc
  40adce:	jb     0x40ada3
  40add0:	mov    ecx,DWORD PTR ds:0x4194b8
  40add6:	add    ecx,0xefe3e442
  40addc:	mov    DWORD PTR [eax],ecx
  40adde:	add    eax,0x4
  40ade1:	mov    edi,esi
  40ade3:	xor    ecx,ecx
  40ade5:	mov    edx,DWORD PTR ds:0x4194c4
  40adeb:	mov    edx,DWORD PTR [edx+ecx*4]
  40adee:	sub    edx,DWORD PTR ds:0x4194b8
  40adf4:	sub    edx,0x70274d40
  40adfa:	mov    DWORD PTR [eax],edx
  40adfc:	xor    edx,edx
  40adfe:	add    eax,0x4
  40ae01:	cmp    edi,esi
  40ae03:	setne  dl
  40ae06:	lea    edi,[edx+0x2]
  40ae09:	add    ecx,edi
  40ae0b:	cmp    ecx,0xc8
  40ae11:	jb     0x40ade5
  40ae13:	mov    eax,ds:0x4193cc
  40ae18:	mov    edi,eax
  40ae1a:	shr    edi,1
  40ae1c:	lea    eax,[edi+eax*2]
  40ae1f:	xor    ecx,ecx
  40ae21:	mov    edx,esi
  40ae23:	test   eax,eax
  40ae25:	je     0x40ae5f
  40ae27:	mov    eax,ds:0x4194b8
  40ae2c:	mov    edi,DWORD PTR ds:0x419378
  40ae32:	xor    eax,0x12e0f52
  40ae37:	add    eax,DWORD PTR [edi+ecx*4]
  40ae3a:	mov    edi,DWORD PTR [ebp+0x10]
  40ae3d:	add    DWORD PTR [ebp+0x10],0x4
  40ae41:	mov    DWORD PTR [edi],eax
  40ae43:	xor    eax,eax
  40ae45:	cmp    edx,esi
  40ae47:	setne  al
  40ae4a:	lea    edx,[eax+0x2]
  40ae4d:	mov    eax,ds:0x4193cc
  40ae52:	mov    edi,eax
  40ae54:	shr    edi,1
  40ae56:	add    ecx,edx
  40ae58:	lea    eax,[edi+eax*2]
  40ae5b:	cmp    ecx,eax
  40ae5d:	jb     0x40ae27
  40ae5f:	mov    edi,DWORD PTR [ebp+0x10]
  40ae62:	push   0xfffffff8
  40ae64:	push   0x1089
  40ae69:	call   DWORD PTR ds:0x418094
  40ae6f:	mov    ecx,esi
  40ae71:	xor    eax,eax
  40ae73:	mov    edx,DWORD PTR ds:0x4194bc
  40ae79:	mov    edx,DWORD PTR [edx+eax*4]
  40ae7c:	sub    edx,DWORD PTR ds:0x4194b8
  40ae82:	add    edx,0x6986e452
  40ae88:	mov    DWORD PTR [edi],edx
  40ae8a:	xor    edx,edx
  40ae8c:	add    edi,0x4
  40ae8f:	cmp    ecx,esi
  40ae91:	setne  dl
  40ae94:	lea    ecx,[edx+0x2]
  40ae97:	add    eax,ecx
  40ae99:	cmp    eax,0xc5
  40ae9e:	jb     0x40ae73
  40aea0:	push   0x1
  40aea2:	mov    ebx,edi
  40aea4:	push   0x1f
  40aea6:	xor    edi,edi
  40aea8:	push   edi
  40aea9:	call   DWORD PTR ds:0x418098
  40aeaf:	mov    DWORD PTR [ebp-0x4],esi
  40aeb2:	mov    eax,ds:0x419398
  40aeb7:	mov    eax,DWORD PTR [eax+edi*4]
  40aeba:	sub    eax,DWORD PTR ds:0x4194b8
  40aec0:	add    eax,0x13fef72a
  40aec5:	mov    DWORD PTR [ebx],eax
  40aec7:	add    ebx,0x4
  40aeca:	call   DWORD PTR ds:0x41803c
  40aed0:	xor    eax,eax
  40aed2:	cmp    DWORD PTR [ebp-0x4],esi
  40aed5:	setne  al
  40aed8:	add    eax,0x2
  40aedb:	add    edi,eax
  40aedd:	mov    DWORD PTR [ebp-0x4],eax
  40aee0:	cmp    edi,0xb1
  40aee6:	jb     0x40aeb2
  40aee8:	lea    eax,[ebp-0x24]
  40aeeb:	push   eax
  40aeec:	call   DWORD PTR ds:0x418040
  40aef2:	lea    eax,[ebp-0x24]
  40aef5:	push   eax
  40aef6:	call   DWORD PTR ds:0x418044
  40aefc:	pop    edi
  40aefd:	pop    esi
  40aefe:	pop    ebx
  40aeff:	leave  
  40af00:	ret    
  40af01:	mov    edx,0x8b1b1985
  40af06:	pop    ebp
  40af07:	mov    DWORD PTR [ebx+0xdf95f6a],ecx
  40af0d:	int3   
  40af0e:	add    BYTE PTR [eax],al
  40af10:	dec    ebp
  40af11:	lea    ecx,[ebp-0x1]
  40af14:	add    BYTE PTR [edi],ch
  40af16:	mov    esp,0x46dde00d
  40af1b:	int3   
  40af1c:	int3   
  40af1d:	dec    ecx
  40af1e:	xchg   dh,bl
  40af20:	push   ecx
  40af21:	jne    0x40af03
  40af23:	int3   
  40af24:	mov    eax,0xe9040083
  40af2a:	pop    edi
  40af2b:	leave  
  40af2c:	dec    esp
  40af2d:	add    BYTE PTR [ecx-0x2a8a3340],cl
  40af33:	fcomp  QWORD PTR [ebp+0x0]
  40af36:	int3   
  40af37:	mov    eax,DWORD PTR [eax]
  40af39:	inc    ebp
  40af3a:	add    ah,cl
  40af3c:	int3   
  40af3d:	into   
  40af3e:	lods   al,BYTE PTR ds:[esi]
  40af3f:	sbb    al,dh
  40af41:	add    BYTE PTR [eax],al
  40af43:	or     BYTE PTR [eax],al
  40af45:	mov    ebx,0x8b2c8a77
  40af4a:	int3   
  40af4b:	mov    DWORD PTR [ebx-0x7476baff],ecx
  40af51:	mov    bh,0x4c
  40af53:	dec    edx
  40af54:	sbb    BYTE PTR [eax],al
  40af56:	add    BYTE PTR [eax],al
  40af58:	int3   
  40af59:	scas   eax,DWORD PTR es:[edi]
  40af5a:	mov    bh,BYTE PTR [ebx+0x2a]
  40af5d:	add    BYTE PTR [ecx],al
  40af5f:	or     al,0x0
  40af61:	add    BYTE PTR [ebx+0x48230000],cl
  40af67:	or     eax,0xffecc71e
  40af6c:	fld    QWORD PTR [edx-0x3d]
  40af6f:	fst    QWORD PTR [ebx]
  40af71:	fld    QWORD PTR [ebp-0x14f80000]
  40af77:	verr   WORD PTR [edx+0x7d]
  40af7b:	lea    ecx,[edi+edi*8+0x4945cc74]
  40af82:	sar    DWORD PTR [ecx],0x6
  40af85:	int3   
  40af86:	add    bh,bh
  40af88:	add    ah,cl
  40af8a:	mov    eax,DWORD PTR [ebp-0x471add34]
  40af90:	lahf   
  40af91:	mov    ecx,DWORD PTR [ebx-0x65790034]
  40af97:	out    dx,al
  40af98:	ret    0x856a
  40af9b:	int3   
  40af9c:	dec    DWORD PTR [ebp+0x43460004]
  40afa2:	xor    eax,0x8b003144
  40afa7:	inc    esi
  40afa8:	pop    ebp
  40afa9:	xor    DWORD PTR [eax+0x2bde],edx
  40afaf:	(bad)  
  40afb0:	inc    DWORD PTR [eax]
  40afb2:	inc    DWORD PTR [eax]
  40afb4:	jne    0x40b019
  40afb6:	mov    ?,WORD PTR [edi-0x33ff33bf]
  40afbc:	int3   
  40afbd:	or     BYTE PTR [esp+edi*2-0x3f],bl
  40afc1:	call   DWORD PTR ds:0x75
  40afc7:	add    BYTE PTR [eax],cl
  40afc9:	fcom   DWORD PTR [ebx-0x4f]
  40afcc:	cli    
  40afcd:	mov    DWORD PTR [ebx-0x750300fd],ecx
  40afd3:	jmp    0x40b051
  40afd5:	add    edi,edi
  40afd7:	inc    esi
  40afd8:	or     BYTE PTR [ebp-0x75],dl
  40afdb:	add    bh,bh
  40afdd:	mov    bh,0x71
  40afdf:	xor    ebp,eax
  40afe1:	add    BYTE PTR [ebp-0x75],al
  40afe4:	shl    ch,0x4d
  40afe7:	nop
  40afe8:	lahf   
  40afe9:	int3   
  40afea:	add    BYTE PTR [ebp+0x0],al
  40afed:	mov    eax,DWORD PTR [eax]
  40afef:	test   DWORD PTR [ecx],eax
  40aff1:	cmc    
  40aff2:	lds    ebp,FWORD PTR [ecx+0x100045ef]
  40aff8:	adc    bl,bl
  40affa:	test   DWORD PTR [edx+esi*8],ecx
  40affd:	add    DWORD PTR [eax],eax
  40afff:	mov    eax,DWORD PTR [eax]
  40b001:	or     esp,0xffffffff
  40b004:	add    DWORD PTR [ecx+0x26],eax
  40b007:	out    dx,al
  40b008:	push   edi
  40b009:	mov    ecx,DWORD PTR [esp+ecx*8]
  40b00c:	call   0x3f80343
  40b011:	mov    eax,DWORD PTR [eax]
  40b013:	adc    eax,0x8300ff
  40b018:	add    al,0xe8
  40b01a:	jno    0x40afc9
  40b01c:	rol    BYTE PTR [eax],0x1
  40b01f:	add    BYTE PTR [ebx-0x7d490b9e],cl
  40b025:	je     0x40b027
  40b027:	or     bh,bh
  40b029:	or     al,0x8b
  40b02b:	test   edi,edi
  40b02d:	fldenv [esi+0x42]
  40b030:	sbb    eax,DWORD PTR [eax]
  40b032:	test   DWORD PTR [eax],eax
  40b034:	call   FWORD PTR [edi+0x4]
  40b037:	jecxz  0x40afd2
  40b039:	inc    ebp
  40b03a:	unpckhps xmm1,xmm4
  40b03d:	add    BYTE PTR [eax+0x8],dl
  40b040:	add    dh,bl
  40b042:	in     eax,0x2b
  40b044:	test   BYTE PTR [ebp+0x0],0xcc
  40b048:	mov    eax,DWORD PTR [edx+0x73c4d3]
  40b04e:	adc    eax,0xe8cc00cc
  40b053:	jmp    0x40b021
  40b055:	aaa    
  40b056:	jg     0x40b013
  40b058:	sub    BYTE PTR [ebx],al
  40b05a:	add    al,0xcc
  40b05c:	or     al,0x35
  40b05e:	pandn  mm6,mm2
  40b061:	fld    QWORD PTR [eax]
  40b063:	add    BYTE PTR [eax],al
  40b065:	or     al,0x8
  40b067:	add    eax,DWORD PTR [eax]
  40b069:	ss add cl,ah
  40b06c:	sub    BYTE PTR [eax],al
  40b06e:	add    BYTE PTR [ecx],al
  40b070:	add    BYTE PTR [ebp+0x12],dl
  40b073:	scas   al,BYTE PTR es:[edi]
  40b074:	jecxz  0x40b042
  40b076:	add    ah,cl
  40b078:	mov    edi,0x2ecc8b50
  40b07e:	inc    eax
  40b07f:	(bad)  
  40b080:	jmp    0x40b0f6
  40b082:	add    al,al
  40b084:	add    BYTE PTR [eax],ch
  40b086:	mov    esi,DWORD PTR [edx+0xc0000a5]
  40b08c:	add    BYTE PTR [ecx-0x41f3373],cl
  40b092:	push   edx
  40b093:	sub    bl,BYTE PTR [ecx-0xfffebb]
  40b099:	mov    DWORD PTR [ecx-0x13743e8a],eax
  40b09f:	or     esp,0x10
  40b0a2:	jne    0x40b0a4
  40b0a4:	jmp    0x40b051
  40b0a6:	dec    ebx
  40b0a7:	push   ebp
  40b0a8:	rol    BYTE PTR [eax],cl
  40b0aa:	add    BYTE PTR [esi*2-0x1c8a5bbd],cl
  40b0b1:	or     al,0x4
  40b0b3:	add    BYTE PTR [ebp+0x808ff75],cl
  40b0b9:	inc    ebp
  40b0ba:	push   ebx
  40b0bb:	fst    DWORD PTR [edi+0x1e000]
  40b0c1:	stos   BYTE PTR es:[edi],al
  40b0c2:	sbb    BYTE PTR [ecx-0x747474e2],0x8b
  40b0c9:	or     DWORD PTR [ebx-0x7090f775],0xffffffb2
  40b0d0:	sub    DWORD PTR [eax],eax
  40b0d2:	add    DWORD PTR [eax],eax
  40b0d4:	add    BYTE PTR [ebp+0x4548e094],cl
  40b0da:	dec    DWORD PTR [ebp+0x8088bff]
  40b0e0:	add    DWORD PTR [eax*4-0x2238cd61],esi
  40b0e7:	call   0xc8d0db77
  40b0ec:	sbb    ebp,0x33
  40b0ef:	int3   
  40b0f0:	add    BYTE PTR [ebx],al
  40b0f2:	add    al,0x89
  40b0f4:	add    BYTE PTR [ebp+eiz*8-0x14741a7d],ch
  40b0fb:	mov    DWORD PTR [eax],eax
  40b0fd:	inc    ecx
  40b0fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0ff:	sub    al,dl
  40b101:	inc    DWORD PTR [eax]
  40b103:	add    BYTE PTR [ecx],al
  40b105:	mov    ecx,esp
  40b107:	int3   
  40b108:	loopne 0x40b119
  40b10a:	mov    ds:0x83010ce2,al
  40b10f:	dec    DWORD PTR [ebx+0x59b23fb2]
  40b115:	push   eax
  40b116:	or     BYTE PTR [eax],al
  40b118:	je     0x40b11d
  40b11a:	or     al,0x0
  40b11c:	pcmpeqw mm4,mm1
  40b11f:	pop    ds
  40b120:	aam    0x1
  40b122:	int3   
  40b123:	add    bh,bh
  40b125:	fild   QWORD PTR [edi-0xba6170]
  40b12b:	loopne 0x40b135
  40b12d:	int3   
  40b12e:	add    BYTE PTR [ebp+0x4],al
  40b131:	(bad)  
  40b132:	jbe    0x40b1a3
  40b134:	mov    ah,0xcc
  40b136:	add    BYTE PTR [ecx-0x42b7b896],cl
  40b13c:	mov    al,ds:0x4600004d
  40b141:	jne    0x40b193
  40b143:	add    DWORD PTR [eax],eax
  40b145:	imul   ebx,DWORD PTR [eax-0x31],0xff1546f1
  40b14c:	int3   
  40b14d:	gs xor eax,0x8b333fd8
  40b153:	test   edi,edi
  40b155:	inc    edi
  40b157:	fld    QWORD PTR [ebp-0x2f]
  40b15a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b15b:	lods   al,BYTE PTR ds:[esi]
  40b15c:	mov    esi,0xdd0010
  40b161:	lea    edx,[ebp-0x78]
  40b164:	jmp    eax
  40b166:	lea    ecx,[ebx-0x33af0075]
  40b16c:	push   esi
  40b16d:	jge    0x40b0fa
  40b16f:	icebp  
  40b170:	and    eax,DWORD PTR [eax]
  40b172:	add    eax,esp
  40b174:	mov    DWORD PTR [ecx],esi
  40b176:	xchg   BYTE PTR [eax-0x2d],cl
  40b179:	push   ebp
  40b17a:	mov    ebp,ebx
  40b17c:	mov    esi,DWORD PTR [ebp-0x75]
  40b17f:	add    DWORD PTR [eax],0x9
  40b182:	dec    di
  40b184:	push   ds
  40b185:	add    BYTE PTR [eax+ecx*1+0x4],dh
  40b189:	jmp    0x8b8b:0xa98a6c
  40b190:	mov    eax,DWORD PTR [eax]
  40b192:	push   ebp
  40b193:	dec    esp
  40b195:	or     edx,DWORD PTR [esi-0x56]
  40b198:	popf   
  40b199:	add    ah,cl
  40b19b:	je     0x40b169
  40b19d:	imul   esi,DWORD PTR [ecx+0xe02361],0xcc080033
  40b1a7:	in     al,dx
  40b1a8:	add    BYTE PTR [eax],ah
  40b1aa:	xchg   esp,eax
  40b1ab:	das    
  40b1ac:	ror    DWORD PTR [ebx+0x39005500],0xf5
  40b1b3:	mov    ds:0xc000005b,eax
  40b1b8:	mov    ebp,eax
  40b1ba:	adc    BYTE PTR [ecx],al
  40b1bc:	add    al,0xc3
  40b1be:	fstp   QWORD PTR [ebx]
  40b1c0:	mov    cl,0x2d
  40b1c2:	add    BYTE PTR [eax],al
  40b1c4:	add    BYTE PTR [eax],al
  40b1c6:	scas   eax,DWORD PTR es:[edi]
  40b1c7:	dec    ecx
  40b1c8:	xchg   edi,eax
  40b1c9:	mov    eax,DWORD PTR [eax]
  40b1cb:	and    eax,0x0
  40b1ce:	mov    eax,DWORD PTR [ebx]
  40b1d0:	add    BYTE PTR [eax],al
  40b1d2:	xor    cl,cl
  40b1d4:	adc    al,0x51
  40b1d6:	add    esp,ecx
  40b1d8:	dec    DWORD PTR [edi]
  40b1da:	test   al,0x1
  40b1dc:	fs inc esp
  40b1de:	add    BYTE PTR [eax],al
  40b1e0:	adc    BYTE PTR [esi-0x34],al
  40b1e3:	dec    ebp
  40b1e4:	inc    ebp
  40b1e5:	push   DWORD PTR [ebp+0x54]
  40b1e8:	push   ebx
  40b1e9:	cmc    
  40b1ea:	add    DWORD PTR [ebp-0x34],eax
  40b1ed:	int3   
  40b1ee:	repnz and edx,DWORD PTR [ebx]
  40b1f1:	xor    BYTE PTR [ebx],dh
  40b1f3:	dec    ebp
  40b1f4:	add    BYTE PTR [eax+eax*1],cl
  40b1f7:	dec    ebp
  40b1f8:	add    BYTE PTR [eax],al
  40b1fa:	test   eax,0x74e4db07
  40b1ff:	mov    eax,DWORD PTR [eax]
  40b201:	mov    ebp,DWORD PTR [ebx+0x5]
  40b204:	dec    esp
  40b205:	imul   eax,DWORD PTR [ebp+0x3300cc00],0xcde8cc00
  40b20f:	or     bl,ah
  40b211:	in     eax,dx
  40b212:	add    DWORD PTR [esi+0xf],edx
  40b215:	je     0x40b19a
  40b217:	jne    0x40b22d
  40b219:	jmp    0x89b53d2e
  40b21e:	add    BYTE PTR [ebx-0x691cff34],al
  40b224:	push   esp
  40b225:	xor    eax,0xff01eb89
  40b22a:	adc    eax,0x693db6
  40b22f:	add    BYTE PTR [ebx+0x10c108b],cl
  40b235:	je     0x40b1f7
  40b237:	cmova  esp,ebp
  40b23a:	mov    ebp,esp
  40b23c:	add    ah,cl
  40b23e:	or     BYTE PTR [eax+0x4e88fd2],ch
  40b244:	loopne 0x40b20d
  40b246:	int3   
  40b247:	int3   
  40b248:	in     al,dx
  40b249:	add    bh,bh
  40b24b:	pop    ebp
  40b24c:	dec    edx
  40b24d:	xchg   DWORD PTR [ebx-0x2aa90100],eax
  40b253:	in     al,0x25
  40b255:	xchg   ecx,eax
  40b256:	add    BYTE PTR [ecx],al
  40b258:	add    BYTE PTR [eax],al
  40b25a:	mov    DWORD PTR [ebx-0x40a733aa],ecx
  40b260:	test   eax,0x101895d
  40b265:	adc    BYTE PTR [edi],bl
  40b267:	fnstcw WORD PTR ds:0x10748b5a
  40b26d:	mov    ecx,esp
  40b26f:	add    BYTE PTR [eax],al
  40b271:	push   esp
  40b273:	mov    WORD PTR [ebp-0x9],fs
  40b276:	dec    DWORD PTR [eax]
  40b278:	add    BYTE PTR [ebx+0x44fd2e0a],cl
  40b27e:	add    BYTE PTR [eax],al
  40b280:	add    BYTE PTR [eax],cl
  40b282:	test   DWORD PTR [ebx-0x65a7fef8],ecx
  40b288:	std    
  40b289:	cmp    eax,0x74158bcc
  40b28e:	shl    cl,0x53
  40b291:	das    
  40b292:	call   0xe841baa3
  40b297:	or     ah,cl
  40b299:	inc    esi
  40b29a:	imul   edi,esi,0xffffffff
  40b29d:	std    
  40b29e:	add    DWORD PTR [ebx+0x728ebff],ecx
  40b2a4:	xchg   edi,eax
  40b2a5:	jmp    0x40b2ed
  40b2a7:	add    DWORD PTR [ecx-0x7cff7c75],ecx
  40b2ad:	add    dh,ch
  40b2af:	push   ebx
  40b2b0:	daa    
  40b2b1:	dec    ah
  40b2b3:	or     BYTE PTR [ecx+0x3a20fb75],cl
  40b2b9:	idiv   edi
  40b2bb:	add    BYTE PTR [eax],dl
  40b2bd:	int3   
  40b2be:	je     0x40b28c
  40b2c0:	mov    ecx,DWORD PTR [eax]
  40b2c2:	pop    ecx
  40b2c3:	pusha  
  40b2c4:	in     al,0xec
  40b2c6:	add    esp,ecx
  40b2c8:	add    bh,bh
  40b2ca:	stos   BYTE PTR es:[edi],al
  40b2cb:	lock sbb DWORD PTR [edx-0x34],ebx
  40b2cf:	add    ah,cl
  40b2d1:	int3   
  40b2d2:	lea    ecx,[ebx+0x41e40110]
  40b2d8:	imul   eax,DWORD PTR [eax+0x8b5d00],0x548bfd89
  40b2e2:	inc    ebp
  40b2e3:	add    bh,bh
  40b2e5:	add    bh,al
  40b2e7:	(bad)  
  40b2e8:	(bad)  
  40b2e9:	dec    DWORD PTR [esi-0x82d379]
  40b2ef:	add    BYTE PTR [ebp+0x45],al
  40b2f2:	mov    edi,0x8b726d91
  40b2f7:	inc    DWORD PTR [eax]
  40b2f9:	add    BYTE PTR [ebx+0x5cdd008b],al
  40b2ff:	out    dx,eax
  40b300:	jge    0x40b28c
  40b302:	int3   
  40b303:	add    DWORD PTR [eax],eax
  40b305:	int3   
  40b306:	test   al,0xda
  40b308:	mov    esp,0xcc8b048f
  40b30d:	lea    ebp,[edx-0x1]
  40b310:	push   eax
  40b311:	jmp    0x40b358
  40b313:	ficomp DWORD PTR [edi]
  40b315:	add    al,0x8b
  40b317:	add    DWORD PTR [ecx],0xffffffff
  40b31a:	xor    DWORD PTR [ebp-0x33ffe2cd],0x550000
  40b324:	call   0x846861e9
  40b329:	aaa    
  40b32a:	add    DWORD PTR [eax+eax*1],eax
  40b32d:	int3   
  40b32e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b32f:	jmp    0xcc41b272
  40b334:	add    BYTE PTR [esi+0x46],dl
  40b337:	add    al,0xcc
  40b339:	int3   
  40b33a:	hlt    
  40b33b:	mov    al,0x75
  40b33d:	gs int3 
  40b33f:	add    BYTE PTR [eax],al
  40b341:	mov    esi,DWORD PTR [ecx-0x73f296]
  40b347:	adc    ah,cl
  40b349:	xor    ebp,eax
  40b34b:	add    ch,bl
  40b34d:	shr    BYTE PTR [ecx+0x14d821c],0x0
  40b354:	test   ebp,ebx
  40b356:	xor    eax,0xc73dbee1
  40b35b:	pop    ebp
  40b35c:	pop    ebp
  40b35d:	add    BYTE PTR [ebx-0x77338b75],cl
  40b363:	cli    
  40b364:	sub    BYTE PTR [ecx+ecx*4+0x56],dl
  40b368:	add    ah,cl
  40b36a:	lea    edx,[ebp-0x3fff9dad]
  40b370:	int3   
  40b371:	adc    eax,0x8010100
  40b376:	mov    ecx,0x4d4810
  40b37b:	add    DWORD PTR [ebx],0x0
  40b37e:	xlat   BYTE PTR ds:[ebx]
  40b37f:	pop    ds
  40b380:	and    DWORD PTR ds:0x4dff,0x83038501
  40b38a:	push   0x875b799
  40b38f:	push   0x3
  40b391:	mov    DWORD PTR [ebx+0x30],esp
  40b394:	int    0x6e
  40b396:	mov    DWORD PTR [eax],0x8d8b8b8b
  40b39c:	inc    ebp
  40b39d:	add    ch,bl
  40b39f:	and    al,0x70
  40b3a1:	ret    
  40b3a2:	add    BYTE PTR [esi+0x0],al
  40b3a5:	push   edx
  40b3a7:	pop    ecx
  40b3a8:	popf   
  40b3a9:	xchg   ecx,eax
  40b3aa:	test   DWORD PTR [ebx-0x74fb76ba],ecx
  40b3b0:	mov    edx,DWORD PTR [eax+0x41]
  40b3b3:	push   es
  40b3b4:	xor    ecx,DWORD PTR [ebp+0x56]
  40b3b7:	mov    ecx,DWORD PTR [ecx-0x321c88f0]
  40b3bd:	test   BYTE PTR [ecx],al
  40b3bf:	dec    ebp
  40b3c0:	call   0xccc491c4
  40b3c5:	add    al,0xde
  40b3c7:	adc    BYTE PTR [eax-0x54],dl
  40b3ca:	add    ah,cl
  40b3cc:	loopne 0x40b3cd
  40b3ce:	imul   cl
  40b3d0:	call   0x8c0d8038
  40b3d5:	push   DWORD PTR [ebp-0x77]
  40b3d8:	add    BYTE PTR [ebx-0x5224b65d],cl
  40b3de:	mov    ebx,DWORD PTR [ebp-0x7b]
  40b3e1:	je     0x40b40a
  40b3e3:	fnstcw WORD PTR [ebx+eax*4]
  40b3e6:	add    BYTE PTR [eax+eax*1],al
  40b3e9:	and    eax,0x1
  40b3ec:	int3   
  40b3ed:	add    DWORD PTR [esi+0x3],edi
  40b3f0:	popf   
  40b3f1:	out    dx,al
  40b3f2:	int3   
  40b3f3:	inc    ebp
  40b3f4:	pop    ebp
  40b3f5:	or     al,0x8f
  40b3f7:	xchg   esp,eax
  40b3f8:	fs data16 add bh,bh
  40b3fc:	mov    eax,DWORD PTR [eax]
  40b3fe:	add    BYTE PTR [eax],al
  40b400:	mov    ecx,DWORD PTR [edi]
  40b402:	dec    esi
  40b403:	mov    al,ds:0x8904df84
  40b408:	int3   
  40b409:	test   esp,esi
  40b40b:	xchg   edx,eax
  40b40c:	xchg   edi,eax
  40b40d:	dec    esp
  40b40e:	add    al,0x3
  40b410:	mov    DWORD PTR [eax],0xec7401ff
  40b416:	sbb    al,0x23
  40b418:	push   ecx
  40b419:	adc    eax,DWORD PTR [eax]
  40b41b:	dec    DWORD PTR [eax+eax*1]
  40b41e:	xchg   esp,eax
  40b41f:	jmp    0xff:0x8bdd2b09
  40b426:	dec    ebp
  40b427:	mov    eax,DWORD PTR [ebp-0x68193800]
  40b42d:	arpl   WORD PTR [eax],ax
  40b42f:	add    bh,bh
  40b431:	in     al,dx
  40b432:	test   BYTE PTR [edx+0xcc74462],0x0
  40b439:	rol    BYTE PTR [eax],0xe0
  40b43c:	call   0x4b8aa6cc
  40b441:	sub    BYTE PTR [eax],cl
  40b443:	add    BYTE PTR [ecx],al
  40b445:	inc    ebx
  40b447:	and    BYTE PTR [eax+ecx*2+0x7a],al
  40b44b:	add    BYTE PTR [ecx],al
  40b44d:	add    bh,bh
  40b44f:	sbb    al,ch
  40b451:	imul   eax,DWORD PTR [ecx+0x5d],0x1
  40b455:	pop    ebp
  40b456:	add    DWORD PTR [eax],eax
  40b458:	push   0x15
  40b45a:	xor    esi,esp
  40b45c:	sub    BYTE PTR [eax+0x6d],ah
  40b45f:	add    DWORD PTR [ebx-0x335bf7a3],ecx
  40b465:	inc    esp
  40b466:	push   es
  40b467:	mov    DWORD PTR [ebx],eax
  40b469:	int3   
  40b46a:	int3   
  40b46b:	fld    QWORD PTR [eax*4-0x14c727fc]
  40b472:	push   esp
  40b473:	add    al,ch
  40b475:	add    BYTE PTR [ebp+0x3d],dh
  40b478:	inc    ebp
  40b479:	ins    DWORD PTR es:[edi],dx
  40b47a:	jns    0x140924c
  40b480:	inc    ebp
  40b481:	add    DWORD PTR [eax],eax
  40b483:	pop    ds
  40b484:	jae    0x40b4f7
  40b486:	push   esp
  40b487:	add    DWORD PTR [eax],eax
  40b489:	mov    eax,DWORD PTR [edx+eiz*1]
  40b48c:	or     cl,BYTE PTR [eax+0x48]
  40b48f:	in     al,dx
  40b490:	add    ah,cl
  40b492:	int3   
  40b493:	int3   
  40b494:	add    DWORD PTR [ebx+0x67253345],ecx
  40b49a:	sti    
  40b49b:	mov    edi,edi
  40b49d:	je     0x40b46b
  40b49f:	xchg   ebp,eax
  40b4a0:	stos   BYTE PTR es:[edi],al
  40b4a1:	and    eax,0x8300ffcc
  40b4a6:	mov    ecx,DWORD PTR [eax]
  40b4a8:	jne    0x40b48a
  40b4aa:	je     0x40b459
  40b4ac:	xor    al,0x47
  40b4ae:	mov    esi,0x8b00cc00
  40b4b3:	pusha  
  40b4b4:	jo     0x40b514
  40b4b6:	ja     0x40b4b8
  40b4b8:	push   eax
  40b4b9:	add    BYTE PTR [ecx],al
  40b4bb:	add    al,al
  40b4bd:	je     0x40b448
  40b4bf:	fcomp  DWORD PTR [edi-0x33ff1e26]
  40b4c5:	or     al,0x8b
  40b4c7:	test   eax,0xcc082f14
  40b4cc:	add    BYTE PTR [ebx-0x33ff95f8],cl
  40b4d2:	add    cl,dl
  40b4d4:	ja     0x40b529
  40b4d6:	adc    al,0x0
  40b4d8:	str    WORD PTR [ebx+0x6af0378d]
  40b4df:	inc    ebp
  40b4e0:	add    BYTE PTR [eax],al
  40b4e2:	int3   
  40b4e3:	int3   
  40b4e4:	test   esp,ebp
  40b4e6:	add    DWORD PTR [esi+0x5dc8b1d5],edx
  40b4ec:	call   DWORD PTR [esi-0x34]
  40b4ef:	jbe    0x40b4d3
  40b4f1:	mov    bl,0x14
  40b4f3:	dec    ebp
  40b4f4:	add    BYTE PTR [eax],al
  40b4f6:	add    bh,al
  40b4f8:	or     al,0x1
  40b4fa:	int3   
  40b4fb:	fcomip st,st(4)
  40b4fd:	out    0xd4,eax
  40b4ff:	(bad)  
  40b500:	dec    DWORD PTR [ebx+0x52f8de01]
  40b506:	fist   WORD PTR [esi+0x5d]
  40b509:	int3   
  40b50a:	dec    DWORD PTR [ebx-0x7c14feff]
  40b510:	sub    DWORD PTR [ebp+edi*2+0xfcccc04],esp
  40b517:	daa    
  40b518:	retf   0x2226
  40b51b:	mov    ecx,DWORD PTR [ecx-0x7affb234]
  40b521:	add    BYTE PTR [eax],al
  40b523:	push   edx
  40b524:	jb     0x40b591
  40b526:	pop    ebp
  40b527:	add    DWORD PTR [eax],ecx
  40b529:	add    BYTE PTR [eax],al
  40b52b:	scas   eax,DWORD PTR es:[edi]
  40b52c:	fwait
  40b52d:	jmp    0x40b559
  40b52f:	push   0xffffffc0
  40b531:	add    ah,cl
  40b533:	mov    eax,DWORD PTR [eax]
  40b535:	or     al,0x8
  40b537:	(bad)
  40b53a:	and    cl,BYTE PTR [eax]
  40b53c:	mov    edx,DWORD PTR [eax]
  40b53e:	add    BYTE PTR [edx+ecx*8],ah
  40b541:	mov    al,0xe6
  40b543:	add    DWORD PTR [ebx+0x30085ff],ecx
  40b549:	pop    ebp
  40b54a:	jne    0x40b574
  40b54c:	fsub   QWORD PTR [esi+0x76]
  40b54f:	or     bh,bh
  40b551:	add    BYTE PTR [ebx-0x389dd7d],al
  40b557:	push   eax
  40b558:	push   ebp
  40b559:	add    ah,cl
  40b55b:	int3   
  40b55c:	mov    esp,ecx
  40b55e:	add    BYTE PTR [eax+0x55],dl
  40b561:	shl    BYTE PTR [ebx+0x33010c10],0x70
  40b568:	dec    esi
  40b569:	fwait
  40b56a:	in     al,0x0
  40b56c:	int3   
  40b56d:	inc    ebp
  40b56e:	(bad)  
  40b56f:	inc    DWORD PTR [eax]
  40b571:	add    BYTE PTR [ecx],al
  40b573:	adc    BYTE PTR [ebx+0x6ac2e5],ah
  40b579:	ud0    esi,DWORD PTR [edx+0x56eff6c7]
  40b580:	fld    QWORD PTR [eax]
  40b582:	push   ebp
  40b583:	pop    ebp
  40b584:	add    BYTE PTR [eax],cl
  40b586:	mov    ebx,DWORD PTR [esi+0x56]
  40b589:	xor    eax,0xec108bae
  40b58e:	test   edx,esi
  40b590:	(bad)  
  40b591:	lahf   
  40b592:	sbb    BYTE PTR [ebx+0x1000000],cl
  40b598:	add    BYTE PTR [ebx+0x3236a600],cl
  40b59e:	hlt    
  40b59f:	mov    ecx,DWORD PTR [ebx-0x5edaff75]
  40b5a5:	and    eax,0x300bc
  40b5aa:	mov    ecx,esp
  40b5ac:	loopne 0x40b58b
  40b5ae:	mov    eax,DWORD PTR [ebp+0x11]
  40b5b1:	imul   esp,esi,0x0
  40b5b4:	add    BYTE PTR [esp+ecx*8+0x16],dh
  40b5b8:	mov    esp,0x8bc0d9d2
  40b5bd:	add    BYTE PTR [ebx-0x2222ff00],cl
  40b5c3:	out    dx,eax
  40b5c4:	jecxz  0x40b5a0
  40b5c6:	sub    eax,0x8b8300eb
  40b5cb:	jl     0x40b59a
  40b5cd:	jge    0x40b59e
  40b5cf:	je     0x40b5d0
  40b5d1:	add    BYTE PTR [eax],cl
  40b5d3:	adc    eax,0x698b4645
  40b5d8:	push   cs
  40b5d9:	push   ds
  40b5da:	dec    esi
  40b5db:	add    BYTE PTR [eax],al
  40b5dd:	dec    DWORD PTR [ebx-0x55c5efc8]
  40b5e3:	int3   
  40b5e4:	shl    BYTE PTR [ebx],0xcc
  40b5e7:	dec    ebp
  40b5e8:	or     al,0xcc
  40b5ea:	int3   
  40b5eb:	stos   DWORD PTR es:[edi],eax
  40b5ec:	lock pop ecx
  40b5ee:	cli    
  40b5ef:	add    BYTE PTR [ecx],al
  40b5f1:	mov    DWORD PTR [eax],edx
  40b5f3:	icebp  
  40b5f4:	and    BYTE PTR [esi],bh
  40b5f6:	shl    BYTE PTR gs:[ebp-0x18],0x10
  40b5fb:	add    BYTE PTR [eax],al
  40b5fd:	or     DWORD PTR [edi+eax*2],0x28
  40b601:	push   cs
  40b602:	dec    edx
  40b603:	mov    ecx,DWORD PTR [ebp+0x0]
  40b606:	push   ebp
  40b607:	push   ebp
  40b608:	int    0xe4
  40b60a:	out    dx,al
  40b60b:	mov    ecx,esp
  40b60d:	int3   
  40b60e:	mov    ecx,esp
  40b610:	add    BYTE PTR [eax],al
  40b612:	or     al,0x95
  40b614:	xlat   BYTE PTR ds:[ebx]
  40b615:	shl    BYTE PTR [esi+0x4],cl
  40b618:	mov    DWORD PTR [eax],0x74136975
  40b61e:	mov    edi,edi
  40b620:	or     BYTE PTR [eax],al
  40b622:	add    bh,bh
  40b624:	inc    ebp
  40b625:	mov    edi,edi
  40b627:	dec    ecx
  40b628:	daa    
  40b629:	out    dx,al
  40b62a:	add    eax,DWORD PTR [eax]
  40b62c:	dec    DWORD PTR [ebx+0x12dc1508]
  40b632:	and    al,BYTE PTR [eax]
  40b634:	mov    eax,DWORD PTR [eax]
  40b636:	dec    ebp
  40b637:	inc    DWORD PTR [ecx]
  40b639:	add    BYTE PTR [eax],al
  40b63b:	in     eax,dx
  40b63c:	jge    0x40b5de
  40b63e:	lock inc ebp
  40b640:	inc    DWORD PTR [ecx]
  40b642:	call   0xbb6b0440
  40b647:	mov    DWORD PTR ds:0x560000,edx
  40b64d:	add    BYTE PTR [ebx-0x6c44a223],al
  40b653:	fisttp QWORD PTR [ebp+0x37110800]
  40b659:	repz add al,0x8b
  40b65c:	add    BYTE PTR [eax],al
  40b65e:	mov    eax,DWORD PTR [eax]
  40b660:	mov    eax,DWORD PTR [edx+ebp*2]
  40b663:	inc    ebp
  40b664:	adc    al,0xb2
  40b666:	add    eax,0x14510ec
  40b66b:	cwde   
  40b66c:	xchg   esi,eax
  40b66d:	xor    BYTE PTR [edx-0x1],dh
  40b670:	add    BYTE PTR [eax],al
  40b672:	add    BYTE PTR [ebx+0x7c018b00],cl
  40b678:	popf   
  40b679:	mov    ?,WORD PTR [ebp+0x5d]
  40b67c:	jne    0x40b609
  40b67e:	je     0x40b64d
  40b680:	fild   QWORD PTR [edx-0x7476ffd7]
  40b686:	int3   
  40b687:	int3   
  40b688:	dec    ebp
  40b689:	mov    eax,DWORD PTR [ebp*2-0x7a07bd19]
  40b690:	test   DWORD PTR [edx-0x1],ebp
  40b693:	lds    esp,FWORD PTR [ecx-0x2]
  40b696:	jmp    0x40b699
  40b698:	inc    DWORD PTR [ebx]
  40b69a:	add    BYTE PTR [eax],al
  40b69c:	mov    eax,DWORD PTR [eax]
  40b69e:	inc    DWORD PTR [edi]
  40b6a0:	mov    eax,0x897467eb
  40b6a5:	dec    DWORD PTR [ecx-0x51d444b]
  40b6ab:	mov    eax,DWORD PTR [eax]
  40b6ad:	int3   
  40b6ae:	add    BYTE PTR [edx-0x7b],ch
  40b6b1:	(bad)  
  40b6b2:	mov    esi,DWORD PTR [ebx+0x50]
  40b6b5:	jb     0x40b662
  40b6b7:	add    BYTE PTR [eax],al
  40b6b9:	lea    ecx,[ebx-0x71900328]
  40b6bf:	inc    DWORD PTR [eax]
  40b6c1:	add    DWORD PTR [eax],0xffffffff
  40b6c4:	int3   
  40b6c5:	mov    eax,DWORD PTR [eax]
  40b6c7:	mov    dh,0x74
  40b6c9:	lea    edx,[edx]
  40b6cb:	inc    DWORD PTR [eax]
  40b6cd:	int3   
  40b6ce:	loopne 0x40b749
  40b6d0:	push   eax
  40b6d1:	jle    0x40b664
  40b6d3:	dec    DWORD PTR [ecx-0x33ff7500]
  40b6d9:	add    BYTE PTR [ebx+0x7fbe2a0a],al
  40b6df:	add    al,0x1
  40b6e1:	lea    eax,[eax]
  40b6e3:	pop    ebp
  40b6e4:	or     DWORD PTR [esi+0x450045dd],edx
  40b6ea:	inc    DWORD PTR [ebp-0x75]
  40b6ed:	xor    esi,DWORD PTR [ebp-0x6a]
  40b6f0:	push   cs
  40b6f1:	fcom   QWORD PTR ds:0x8d005601
  40b6f7:	push   esi
  40b6f8:	jecxz  0x40b6f6
  40b6fa:	lahf   
  40b6fb:	xor    ebx,ebp
  40b6fd:	test   DWORD PTR [eax],eax
  40b6ff:	xor    eax,DWORD PTR [ebx+0x6cc3cc8b]
  40b705:	jp     0x40b774
  40b707:	pushf  
  40b708:	inc    DWORD PTR [eax]
  40b70a:	add    BYTE PTR ds:0x63894ec2,dl
  40b710:	fnsave [ebp+0x0]
  40b713:	or     al,0x89
  40b715:	(bad)  
  40b716:	dec    DWORD PTR [ebx-0x5f920451]
  40b71c:	inc    DWORD PTR [eax+eax*1]
  40b71f:	in     al,dx
  40b720:	push   edx
  40b721:	outs   dx,BYTE PTR ds:[esi]
  40b722:	push   es
  40b723:	sbb    BYTE PTR [ebx-0x173fba00],cl
  40b729:	inc    esi
  40b72a:	int3   
  40b72b:	add    DWORD PTR [ebp+ebp*4+0x3e],eax
  40b72f:	in     al,dx
  40b730:	int3   
  40b731:	(bad)  
  40b732:	mov    DWORD PTR [ebx-0x3527f87f],ecx
  40b738:	int3   
  40b739:	int3   
  40b73a:	add    BYTE PTR [ecx],al
  40b73c:	in     al,dx
  40b73d:	mov    DWORD PTR [ebx+0x29e9d275],ecx
  40b743:	enter  0xc00,0xe0
  40b747:	push   DWORD PTR [ecx]
  40b749:	or     DWORD PTR [edx-0x43],0x45
  40b74d:	(bad)  
  40b74e:	fld    QWORD PTR [ecx]
  40b750:	add    ah,cl
  40b752:	mov    DWORD PTR [esi-0x4f],0xd5d77f
  40b759:	add    BYTE PTR [eax],al
  40b75b:	test   DWORD PTR [esi],edx
  40b75d:	imul   edi,DWORD PTR [esi],0x32
  40b760:	inc    ebp
  40b761:	mov    eax,DWORD PTR [ecx]
  40b763:	inc    ebp
  40b764:	mov    edx,DWORD PTR [eax]
  40b766:	inc    esi
  40b767:	pop    ebp
  40b768:	jmp    0x89:0xb52eeb
  40b76f:	or     DWORD PTR [edx-0x33ad6073],0xffffff85
  40b776:	add    BYTE PTR [eax-0x1],dl
  40b779:	add    eax,ebp
  40b77b:	(bad)  
  40b77c:	jge    0x40b7a6
  40b77e:	cwde   
  40b77f:	or     eax,0x8500458b
  40b784:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b785:	mov    dh,BYTE PTR [ebp-0x33172252]
  40b78b:	call   0x8b414304
  40b790:	dec    esi
  40b791:	cld    
  40b792:	mov    edx,0x55830cc5
  40b797:	mov    esi,DWORD PTR [ebp-0x38052ed3]
  40b79d:	add    bh,bh
  40b79f:	inc    DWORD PTR [eax]
  40b7a1:	mov    ecx,DWORD PTR [eax]
  40b7a3:	xor    esp,DWORD PTR [eax]
  40b7a5:	sbb    BYTE PTR [eiz*4+0x15ff8b01],ch
  40b7ac:	nop
  40b7ad:	pushf  
  40b7ae:	push   ds
  40b7af:	lods   al,BYTE PTR ds:[esi]
  40b7b0:	add    BYTE PTR [ebp+0x75],dh
  40b7b3:	test   edi,eax
  40b7b5:	int3   
  40b7b6:	je     0x40b741
  40b7b8:	cmp    bl,BYTE PTR [edx+0x8ff340d]
  40b7be:	add    BYTE PTR [eax],al
  40b7c0:	lds    ebp,FWORD PTR [ebx+edi*1+0x45d8311]
  40b7c7:	int3   
  40b7c8:	xor    DWORD PTR [eax+eax*1+0x4],0x28
  40b7cd:	repz retf 0x4e1
  40b7d1:	push   esi
  40b7d2:	pop    ebp
  40b7d3:	(bad)  
  40b7d4:	rol    ah,cl
  40b7d6:	retf   0x5028
  40b7d9:	inc    esi
  40b7da:	inc    ebp
  40b7db:	mov    DWORD PTR [eax],eax
  40b7dd:	test   DWORD PTR [eax],eax
  40b7df:	or     BYTE PTR [eax-0x17],ah
  40b7e2:	lea    eax,[ecx+0x1000085]
  40b7e8:	xchg   edi,eax
  40b7e9:	lock mov edi,0xcc04017f
  40b7ef:	or     ah,cl
  40b7f1:	add    BYTE PTR [eax],dl
  40b7f3:	in     al,dx
  40b7f4:	cmp    DWORD PTR [ecx],esp
  40b7f6:	xor    BYTE PTR [ebp+0x1450000],bh
  40b7fc:	push   es
  40b7fd:	push   ebx
  40b7fe:	gs mov esp,0x56c000
  40b804:	inc    ebp
  40b805:	int3   
  40b806:	add    BYTE PTR [eax],al
  40b808:	or     eax,0x751f7bd6
  40b80d:	inc    ebp
  40b80e:	add    BYTE PTR [ebp-0x27],dh
  40b811:	jb     0x40b7ba
  40b813:	int    0x8
  40b815:	push   0x5d
  40b817:	add    BYTE PTR [ebp-0x2bf3ff14],al
  40b81d:	jmp    0x15cde0bf
  40b822:	je     0x40b824
  40b824:	iret   
  40b825:	and    eax,0x5556e294
  40b82a:	xadd   BYTE PTR [ebx-0x65337500],cl
  40b831:	xchg   eax,eax
  40b833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b834:	add    DWORD PTR [ebp+0x0],eax
  40b837:	add    cl,bl
  40b839:	ja     0x40b859
  40b83b:	mov    esi,0xff450883
  40b840:	int3   
  40b841:	mov    eax,DWORD PTR [esp+ecx*8]
  40b844:	push   ds
  40b845:	in     eax,dx
  40b846:	or     ecx,edx
  40b848:	mov    ecx,DWORD PTR [ebp+0x5091cc00]
  40b84e:	mov    eax,ds:0xc70091
  40b853:	or     BYTE PTR [ecx*2-0x65951ffd],cl
  40b85a:	fsub   DWORD PTR [ecx]
  40b85c:	add    al,0x8b
  40b85e:	mov    esi,DWORD PTR [edi+edi*1-0x73]
  40b862:	mov    esi,0xcccc0f4f
  40b867:	add    BYTE PTR [eax],al
  40b869:	add    BYTE PTR [edi+edi*8-0x6c],dh
  40b86d:	mov    ds:0x741594d5,eax
  40b872:	jne    0x40b8e8
  40b874:	or     BYTE PTR [edx+0x3e],bh
  40b877:	xchg   esi,eax
  40b878:	add    BYTE PTR [eax],al
  40b87a:	add    DWORD PTR [eax],eax
  40b87c:	mov    ecx,esp
  40b87e:	xor    esi,DWORD PTR [ebp+0x4a]
  40b881:	xchg   ecx,eax
  40b882:	sub    BYTE PTR [ecx+0x468b0010],cl
  40b888:	xlat   BYTE PTR ds:[ebx]
  40b889:	neg    DWORD PTR [ebx]
  40b88b:	scas   eax,DWORD PTR es:[edi]
  40b88c:	inc    ebp
  40b88d:	push   eax
  40b88e:	je     0x40b890
  40b890:	add    BYTE PTR [eax],al
  40b892:	mov    esi,DWORD PTR [eax+ebx*2+0x2b]
  40b896:	mov    ds:0x10000eb,eax
  40b89b:	add    BYTE PTR [edx-0xc519a7],ch
  40b8a1:	int3   
  40b8a2:	ror    BYTE PTR [ebx-0x74f78c00],0xa0
  40b8a9:	loopne 0x40b8f4
  40b8ab:	outs   dx,DWORD PTR ds:[esi]
  40b8ac:	je     0x40b839
  40b8ae:	lldt   dx
  40b8b1:	rcl    DWORD PTR [edx+0x750000cd],cl
  40b8b7:	add    ah,cl
  40b8b9:	call   0x1013c7be
  40b8be:	pop    ebx
  40b8bf:	inc    eax
  40b8c0:	inc    esi
  40b8c1:	add    ah,cl
  40b8c3:	add    al,0x53
  40b8c5:	inc    ecx
  40b8c6:	lahf   
  40b8c7:	pop    esi
  40b8c8:	add    BYTE PTR [esi+0x0],al
  40b8cb:	inc    ebp
  40b8cc:	add    ah,cl
  40b8ce:	mov    eax,DWORD PTR [ebx-0x1f63f82a]
  40b8d4:	mov    ecx,esp
  40b8d6:	add    BYTE PTR [eax],al
  40b8d8:	(bad)  
  40b8da:	cmp    ch,BYTE PTR [ebx+eax*1-0x33fe8a01]
  40b8e1:	add    BYTE PTR [ebx+0x5f9208b],cl
  40b8e7:	mov    edi,0x8b0000
  40b8ec:	mov    eax,0xf0500c
  40b8f1:	mov    ecx,DWORD PTR [ebx+0x565d0800]
  40b8f7:	int3   
  40b8f8:	stos   DWORD PTR es:[edi],eax
  40b8f9:	cld    
  40b8fa:	add    al,BYTE PTR ss:[ebp+0x0]
  40b8fe:	int3   
  40b8ff:	call   0x9f2a6d91
  40b904:	inc    ebp
  40b905:	loopne 0x40b8d3
  40b907:	lea    eax,[ebp+0x1]
  40b90a:	add    BYTE PTR [ecx-0x7b397ed9],cl
  40b910:	int3   
  40b911:	jmp    0x40b8df
  40b913:	or     BYTE PTR [eax-0x333e3815],ch
  40b919:	mov    eax,DWORD PTR [eax]
  40b91b:	add    bh,bh
  40b91d:	push   esi
  40b91e:	add    bh,bh
  40b920:	and    ah,BYTE PTR [esi+0x3a]
  40b923:	mov    BYTE PTR [ecx],0xff
  40b926:	add    ah,ch
  40b928:	or     ah,ch
  40b92a:	and    eax,0x898dec70
  40b92f:	add    BYTE PTR [edi+edi*8],al
  40b932:	add    DWORD PTR [ebx+0x51188808],ecx
  40b938:	add    BYTE PTR [eax],al
  40b93a:	mov    edi,edi
  40b93c:	dec    ebx
  40b93d:	call   0xcc00:0x8bebba
  40b944:	add    BYTE PTR [edi+edi*8],cl
  40b947:	or     BYTE PTR [ecx+0x7b],dl
  40b94a:	mov    ss,WORD PTR [ebx+ecx*4]
  40b94d:	inc    ebp
  40b94e:	adc    DWORD PTR [eax-0x1f],0xffffffae
  40b952:	xchg   BYTE PTR [eax],cl
  40b954:	mov    edi,edi
  40b956:	add    DWORD PTR [ecx-0x728b34],ecx
  40b95c:	rol    DWORD PTR [edi+0xccb31d],cl
  40b962:	add    al,0x8b
  40b964:	js     0x40b96e
  40b966:	cmc    
  40b967:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b968:	add    al,0x0
  40b96a:	add    BYTE PTR [ebp+0x1],al
  40b96d:	int3   
  40b96e:	inc    eax
  40b970:	outs   dx,BYTE PTR ds:[esi]
  40b971:	mov    eax,0x8cca64f
  40b976:	mov    eax,eax
  40b978:	mov    edi,0x3387d76b
  40b97d:	mov    edi,edi
  40b97f:	push   0x74
  40b981:	add    BYTE PTR [eax],cl
  40b983:	add    ebp,ebp
  40b985:	jge    0x40b9fa
  40b987:	xchg   bh,bh
  40b989:	shl    BYTE PTR [esp+ecx*8-0x80],0x3b
  40b98e:	jae    0x40b91e
  40b990:	add    BYTE PTR [ebp+0x568d08],cl
  40b996:	mov    edx,DWORD PTR [eax-0x3d]
  40b999:	push   ebp
  40b99a:	mov    ebp,esp
  40b99c:	sub    esp,0x24
  40b99f:	mov    eax,ds:0x41917c
  40b9a4:	push   ebx
  40b9a5:	push   esi
  40b9a6:	mov    ds:0x41930c,eax
  40b9ab:	push   edi
  40b9ac:	lea    eax,[ebp-0x24]
  40b9af:	push   eax
  40b9b0:	call   DWORD PTR ds:0x418060
  40b9b6:	lea    eax,[ebp-0x24]
  40b9b9:	push   eax
  40b9ba:	call   DWORD PTR ds:0x418034
  40b9c0:	mov    eax,ds:0x41900c
  40b9c5:	mov    ds:0x41901c,eax
  40b9ca:	lea    eax,[ebp-0x8]
  40b9cd:	push   eax
  40b9ce:	push   0x1
  40b9d0:	call   DWORD PTR ds:0x4180c4
  40b9d6:	mov    eax,DWORD PTR [ebp-0x8]
  40b9d9:	mov    ecx,DWORD PTR [eax]
  40b9db:	lea    edx,[ebp-0xc]
  40b9de:	push   edx
  40b9df:	push   0x4181e0
  40b9e4:	push   eax
  40b9e5:	call   DWORD PTR [ecx]
  40b9e7:	mov    esi,DWORD PTR [ebp+0x8]
  40b9ea:	push   0x3
  40b9ec:	pop    edi
  40b9ed:	mov    ds:0x4194b8,eax
  40b9f2:	mov    ecx,edi
  40b9f4:	xor    eax,eax
  40b9f6:	mov    edx,DWORD PTR ds:0x41946c
  40b9fc:	mov    edx,DWORD PTR [edx+eax*4]
  40b9ff:	mov    ebx,DWORD PTR ds:0x4194b8
  40ba05:	lea    edx,[edx+ebx*1-0x39adedc5]
  40ba0c:	mov    DWORD PTR [esi],edx
  40ba0e:	xor    edx,edx
  40ba10:	add    esi,0x4
  40ba13:	cmp    ecx,edi
  40ba15:	setne  dl
  40ba18:	lea    ecx,[edx+0x2]
  40ba1b:	add    eax,ecx
  40ba1d:	cmp    eax,0xac
  40ba22:	jb     0x40b9f6
  40ba24:	mov    ecx,edi
  40ba26:	xor    eax,eax
  40ba28:	mov    edx,DWORD PTR ds:0x4193f0
  40ba2e:	mov    edx,DWORD PTR [edx+eax*4]
  40ba31:	sub    edx,DWORD PTR ds:0x4194b8
  40ba37:	sub    edx,0x2c2c9523
  40ba3d:	mov    DWORD PTR [esi],edx
  40ba3f:	xor    edx,edx
  40ba41:	add    esi,0x4
  40ba44:	cmp    ecx,edi
  40ba46:	setne  dl
  40ba49:	lea    ecx,[edx+0x2]
  40ba4c:	add    eax,ecx
  40ba4e:	cmp    eax,0xa5
  40ba53:	jb     0x40ba28
  40ba55:	mov    DWORD PTR [ebp+0x8],edi
  40ba58:	xor    ebx,ebx
  40ba5a:	mov    eax,ds:0x419460
  40ba5f:	mov    eax,DWORD PTR [eax+ebx*4]
  40ba62:	sub    eax,DWORD PTR ds:0x4194b8
  40ba68:	push   0xe1
  40ba6d:	sub    eax,0x2091e15e
  40ba72:	mov    DWORD PTR [esi],eax
  40ba74:	push   0x0
  40ba76:	add    esi,0x4
  40ba79:	call   DWORD PTR ds:0x4180b0
  40ba7f:	xor    eax,eax
  40ba81:	cmp    DWORD PTR [ebp+0x8],edi
  40ba84:	setne  al
  40ba87:	add    eax,0x2
  40ba8a:	add    ebx,eax
  40ba8c:	mov    DWORD PTR [ebp+0x8],eax
  40ba8f:	cmp    ebx,0xaa
  40ba95:	jb     0x40ba5a
  40ba97:	xor    eax,eax
  40ba99:	cmp    DWORD PTR ds:0x4194b8,0x80004002
  40baa3:	setne  al
  40baa6:	xor    ebx,ebx
  40baa8:	push   ebx
  40baa9:	push   ebx
  40baaa:	push   ebx
  40baab:	dec    eax
  40baac:	and    eax,0x39ccd4ec
  40bab1:	add    eax,0xd27f445c
  40bab6:	mov    DWORD PTR [esi],eax
  40bab8:	call   DWORD PTR ds:0x418088
  40babe:	push   0x418188
  40bac3:	push   ebx
  40bac4:	mov    ebx,DWORD PTR ds:0x418070
  40baca:	call   ebx
  40bacc:	add    esi,0x4
  40bacf:	and    DWORD PTR [ebp-0x4],0x0
  40bad3:	mov    DWORD PTR [ebp+0x8],edi
  40bad6:	push   0xfffffff8
  40bad8:	push   0x5608
  40badd:	call   DWORD PTR ds:0x418094
  40bae3:	mov    eax,ds:0x419450
  40bae8:	mov    ecx,DWORD PTR [ebp-0x4]
  40baeb:	mov    eax,DWORD PTR [eax+ecx*4]
  40baee:	sub    eax,DWORD PTR ds:0x4194b8
  40baf4:	sub    eax,0x60006aeb
  40baf9:	mov    DWORD PTR [esi],eax
  40bafb:	xor    eax,eax
  40bafd:	add    esi,0x4
  40bb00:	cmp    DWORD PTR [ebp+0x8],edi
  40bb03:	setne  al
  40bb06:	add    eax,0x2
  40bb09:	add    DWORD PTR [ebp-0x4],eax
  40bb0c:	cmp    DWORD PTR [ebp-0x4],0xa0
  40bb13:	mov    DWORD PTR [ebp+0x8],eax
  40bb16:	jb     0x40bad6
  40bb18:	mov    DWORD PTR [ebp-0x4],esi
  40bb1b:	mov    DWORD PTR [ebp+0x8],edi
  40bb1e:	xor    esi,esi
  40bb20:	mov    eax,ds:0x4193bc
  40bb25:	mov    ecx,DWORD PTR ds:0x4194b8
  40bb2b:	mov    eax,DWORD PTR [eax+esi*4]
  40bb2e:	lea    eax,[eax+ecx*1+0x9c1fbf8]
  40bb35:	mov    ecx,DWORD PTR [ebp-0x4]
  40bb38:	add    DWORD PTR [ebp-0x4],0x4
  40bb3c:	push   0x418178
  40bb41:	push   0x0
  40bb43:	mov    DWORD PTR [ecx],eax
  40bb45:	call   ebx
  40bb47:	xor    eax,eax
  40bb49:	cmp    DWORD PTR [ebp+0x8],edi
  40bb4c:	setne  al
  40bb4f:	add    eax,0x2
  40bb52:	add    esi,eax
  40bb54:	mov    DWORD PTR [ebp+0x8],eax
  40bb57:	cmp    esi,0xaf
  40bb5d:	jb     0x40bb20
  40bb5f:	lea    eax,[ebp-0x24]
  40bb62:	push   eax
  40bb63:	call   DWORD PTR ds:0x418040
  40bb69:	lea    eax,[ebp-0x24]
  40bb6c:	push   eax
  40bb6d:	call   DWORD PTR ds:0x418044
  40bb73:	pop    edi
  40bb74:	pop    esi
  40bb75:	pop    ebx
  40bb76:	leave  
  40bb77:	ret    
  40bb78:	sar    BYTE PTR [eax-0x33f0ad8b],0x3
  40bb7f:	mov    edx,DWORD PTR [edi-0x49]
  40bb82:	mov    esi,0x50ff00b1
  40bb87:	adc    BYTE PTR [ecx],al
  40bb89:	push   eax
  40bb8a:	or     al,0x0
  40bb8c:	into   
  40bb8d:	setp   ah
  40bb90:	push   0x1
  40bb92:	loopne 0x40bb60
  40bb94:	sub    al,0x98
  40bb96:	test   eax,0x46c779
  40bb9b:	add    DWORD PTR [ecx+eax*1],0x33
  40bb9f:	mov    ecx,DWORD PTR [ebx]
  40bba1:	icebp  
  40bba2:	push   ds
  40bba3:	call   0x769a:0x898be08b
  40bbaa:	cmp    al,0x3a
  40bbac:	xor    edi,edi
  40bbae:	int3   
  40bbaf:	add    al,0xc
  40bbb1:	int3   
  40bbb2:	dec    ebp
  40bbb3:	ror    bh,0xb4
  40bbb6:	jmp    0x5800:0x845004e
  40bbbd:	test   BYTE PTR [edx+ebx*1+0x743300cc],ch
  40bbc4:	int3   
  40bbc5:	inc    ebp
  40bbc6:	test   DWORD PTR ds:0x82d4359e,edx
  40bbcc:	add    al,0x8b
  40bbce:	mov    eax,DWORD PTR [eax]
  40bbd0:	xchg   edx,eax
  40bbd1:	(bad)  
  40bbd2:	push   ds
  40bbd3:	inc    ebx
  40bbd4:	je     0x40bba2
  40bbd6:	adc    BYTE PTR [ebp+0x855556a],cl
  40bbdc:	icebp  
  40bbdd:	adc    eax,0x508b7370
  40bbe2:	add    al,0x8
  40bbe4:	mov    cs,WORD PTR [esi+eiz*4+0x33008b45]
  40bbeb:	xor    eax,DWORD PTR [ecx]
  40bbed:	mov    ecx,DWORD PTR [eax]
  40bbef:	int3   
  40bbf0:	jl     0x40bbd7
  40bbf2:	dec    eax
  40bbf3:	add    al,0x0
  40bbf5:	int3   
  40bbf6:	int3   
  40bbf7:	jmp    0x40bbf3
  40bbf9:	(bad)  
  40bbfa:	xor    esi,DWORD PTR [edx+0x7500018d]
  40bc00:	int3   
  40bc01:	call   0xf656bb06
  40bc06:	jne    0x40bc7f
  40bc08:	lea    esi,[ebp-0x75]
  40bc0b:	add    BYTE PTR [eax-0x1a],al
  40bc0e:	dec    edi
  40bc0f:	sub    eax,0xddff7508
  40bc14:	mov    esp,ecx
  40bc16:	mov    eax,DWORD PTR [ebp+0x2661e3e]
  40bc1c:	push   ebp
  40bc1d:	push   esi
  40bc1e:	call   0x38e4998
  40bc23:	aam    0x0
  40bc25:	mov    edx,DWORD PTR [ebp+0x0]
  40bc28:	add    DWORD PTR [ebp+0x5a6d0000],eax
  40bc2e:	(bad)  
  40bc2f:	and    BYTE PTR [ebx+0xa8b4589],cl
  40bc35:	popa   
  40bc36:	sub    edx,DWORD PTR [eax]
  40bc38:	dec    DWORD PTR [edi]
  40bc3a:	add    DWORD PTR [eax],eax
  40bc3c:	add    BYTE PTR [eax],cl
  40bc3e:	add    BYTE PTR [esi+0x21],dl
  40bc41:	jnp    0x40bc8d
  40bc43:	adc    esp,ecx
  40bc45:	dec    DWORD PTR [esp+eax*1]
  40bc48:	xor    eax,0xe09d7f63
  40bc4d:	int3   
  40bc4e:	je     0x40bcc4
  40bc50:	int3   
  40bc51:	add    bh,bh
  40bc53:	inc    esi
  40bc54:	cmp    ch,BYTE PTR [esi+0x8b0545]
  40bc5a:	loopne 0x40bc5c
  40bc5c:	xchg   edi,eax
  40bc5d:	fwait
  40bc5e:	icebp  
  40bc5f:	push   cs
  40bc60:	inc    ebp
  40bc61:	add    bh,bh
  40bc63:	add    BYTE PTR [ebp-0x7cf73318],cl
  40bc69:	cmp    al,0xa1
  40bc6b:	adc    ecx,DWORD PTR [ebp-0x1]
  40bc6e:	add    BYTE PTR [eax],al
  40bc70:	mov    ch,0x16
  40bc72:	mov    eax,0xff8b8b33
  40bc77:	inc    DWORD PTR [ecx]
  40bc79:	lea    ecx,[edi]
  40bc7b:	add    BYTE PTR [eax-0x6e],bh
  40bc7e:	push   ds
  40bc7f:	and    BYTE PTR [eax],al
  40bc81:	pop    ebp
  40bc82:	add    BYTE PTR [eax],cl
  40bc84:	daa    
  40bc85:	imul   ecx,DWORD PTR [ebx+eax*1],0x50c73389
  40bc8c:	adc    eax,0xd9005045
  40bc91:	popa   
  40bc92:	(bad)  
  40bc93:	xor    BYTE PTR [ebx-0x677a7500],cl
  40bc99:	pop    eax
  40bc9a:	test   eax,0xcc8b8de3
  40bc9f:	inc    ebp
  40bca0:	inc    esi
  40bca1:	ror    BYTE PTR [ebx+0x35a30708],0x57
  40bca8:	add    BYTE PTR [eax],al
  40bcaa:	adc    BYTE PTR [eax],al
  40bcac:	clc    
  40bcad:	mov    dl,0x61
  40bcaf:	lea    eax,[eax]
  40bcb1:	push   esi
  40bcb2:	adc    ah,cl
  40bcb4:	inc    esi
  40bcb5:	xor    ecx,esp
  40bcb7:	inc    esi
  40bcb8:	setg   al
  40bcbb:	sbb    esp,ecx
  40bcbd:	xor    eax,DWORD PTR [ebx+0x738d0383]
  40bcc3:	xchg   ecx,eax
  40bcc4:	inc    ebp
  40bcc5:	or     al,0xcc
  40bcc7:	mov    ecx,DWORD PTR [ebx-0x75747434]
  40bccd:	pop    esp
  40bcce:	int3   
  40bccf:	push   0xffffff8b
  40bcd1:	adc    eax,0x93b4e801
  40bcd6:	and    al,0xe7
  40bcd8:	add    DWORD PTR [eax-0x40],edx
  40bcdb:	add    BYTE PTR [ecx],al
  40bcdd:	mov    edx,DWORD PTR ds:0x366d078b
  40bce3:	dec    edx
  40bce4:	add    BYTE PTR [eax],al
  40bce6:	inc    DWORD PTR [eax]
  40bce8:	gs pop ds
  40bcea:	nop
  40bceb:	cld    
  40bcec:	call   0x55b5bebd
  40bcf1:	or     BYTE PTR [eax],al
  40bcf3:	je     0x40bd21
  40bcf5:	inc    eax
  40bcf6:	or     al,0x79
  40bcf8:	mov    ecx,DWORD PTR [ebx+0x1d2ecccc]
  40bcfe:	mov    ds:0x8b46cc7f,eax
  40bd03:	mov    eax,DWORD PTR [ebx-0x3fe0001]
  40bd09:	nop
  40bd0a:	sbb    eax,0x8bcc8be3
  40bd0f:	add    DWORD PTR [esi+eax*4],ecx
  40bd12:	jp     0x40bd60
  40bd14:	or     BYTE PTR [ebx-0x223333ba],al
  40bd1a:	inc    DWORD PTR [ebp-0x4c087df4]
  40bd20:	add    BYTE PTR [ebp+0x0],dl
  40bd23:	adc    BYTE PTR [esi+0x55b05f60],dh
  40bd29:	mov    eax,DWORD PTR [eax]
  40bd2b:	adc    BYTE PTR [ebp-0x1],cl
  40bd2e:	call   0xe81db633
  40bd33:	bound  ecx,QWORD PTR [ebx+0x8b0000]
  40bd39:	pop    edx
  40bd3a:	out    dx,eax
  40bd3b:	fs int3 
  40bd3d:	add    al,0x8b
  40bd3f:	inc    DWORD PTR [edi+edi*8]
  40bd42:	add    BYTE PTR [ebx+0xd71d7e6],cl
  40bd48:	mov    DWORD PTR [ecx+0x3f2fc70f],ecx
  40bd4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd4f:	fisttp QWORD PTR [ebp+0xcc8b00]
  40bd55:	(bad)  
  40bd56:	in     al,dx
  40bd57:	add    BYTE PTR [edx+0x54],al
  40bd5a:	jp     0x40bd16
  40bd5c:	add    al,ch
  40bd5e:	or     BYTE PTR [ebp+0xff878cc],al
  40bd64:	mov    DWORD PTR [eax],ecx
  40bd66:	add    ah,cl
  40bd68:	adc    eax,0x14655ff
  40bd6d:	popa   
  40bd6e:	adc    DWORD PTR [edx],0x0
  40bd71:	add    BYTE PTR [eax],al
  40bd73:	test   DWORD PTR [ebx+0x4],edi
  40bd76:	out    dx,eax
  40bd77:	rol    BYTE PTR [eax],0x0
  40bd7a:	mov    ecx,esp
  40bd7c:	mov    edx,DWORD PTR [ebp+0x0]
  40bd7f:	add    ch,ah
  40bd81:	mov    cs,WORD PTR ss:0x15d084d
  40bd88:	call   0x8b01:0x8b89cee9
  40bd8f:	loopne 0x40bd1c
  40bd91:	adc    BYTE PTR [eax],al
  40bd93:	loopne 0x40bd78
  40bd95:	std    
  40bd96:	pop    ds
  40bd97:	dec    esi
  40bd98:	add    BYTE PTR [eax],al
  40bd9a:	push   eax
  40bd9b:	mov    esp,DWORD PTR [ecx]
  40bd9d:	inc    esp
  40bd9e:	cmp    edx,DWORD PTR [eax+eax*1-0x1]
  40bda2:	mov    eax,DWORD PTR [eax]
  40bda4:	loopne 0x40bda6
  40bda6:	inc    DWORD PTR [eax]
  40bda8:	mov    DWORD PTR [eax+esi*1],esp
  40bdab:	dec    ebx
  40bdac:	mov    edi,edi
  40bdae:	int3   
  40bdaf:	add    BYTE PTR [edx],ch
  40bdb1:	dec    ebp
  40bdb2:	pop    edx
  40bdb3:	adc    al,0x8b
  40bdb5:	mov    eax,DWORD PTR [eax]
  40bdb7:	inc    esi
  40bdb8:	or     bh,bh
  40bdba:	mov    eax,DWORD PTR [ebx+0x310c5d81]
  40bdc0:	cmovne ecx,esp
  40bdc3:	dec    DWORD PTR [esi+0x2a]
  40bdc6:	mov    eax,0xccc0441
  40bdcb:	push   ebp
  40bdcc:	mov    ecx,DWORD PTR [ebp+0x4d6f5600]
  40bdd2:	gs push cs
  40bdd4:	add    BYTE PTR [eax],al
  40bdd6:	(bad)  
  40bdd7:	inc    edi
  40bdd9:	xchg   ebx,eax
  40bdda:	mov    BYTE PTR [esi],cl
  40bddc:	add    BYTE PTR [ebx+0x45338b],cl
  40bde2:	loopne 0x40bde5
  40bde4:	mov    ecx,0x467f1b93
  40bde9:	push   0xffffffcc
  40bdeb:	or     BYTE PTR [ebp+0x53],bh
  40bdee:	retf   0x8b19
  40bdf1:	mov    eax,DWORD PTR [eax]
  40bdf3:	mov    eax,DWORD PTR [eax]
  40bdf5:	inc    esi
  40bdf6:	push   esi
  40bdf7:	or     BYTE PTR [ecx+0x5d],bh
  40bdfa:	or     al,0x37
  40bdfc:	dec    esp
  40bdfe:	mov    ebp,esp
  40be00:	dec    edi
  40be01:	sub    bh,BYTE PTR [edx-0x5]
  40be04:	mov    ecx,DWORD PTR [ebp-0x75]
  40be07:	call   0x13fc00b
  40be0c:	push   edi
  40be0d:	push   ds
  40be0e:	and    al,0xb4
  40be10:	int3   
  40be11:	or     al,0xcc
  40be13:	add    DWORD PTR [eax],ebp
  40be15:	or     al,0x6b
  40be17:	push   cs
  40be18:	mov    esi,DWORD PTR [eax+ecx*1-0x34]
  40be1c:	dec    DWORD PTR [ebx+0x3af81056]
  40be22:	jmp    0x40bdfa
  40be24:	jmp    0x40be12
  40be26:	inc    ebp
  40be27:	add    dh,bh
  40be29:	stos   DWORD PTR es:[edi],eax
  40be2a:	mov    ebx,0x8bcc03d2
  40be2f:	je     0x40be3d
  40be31:	mov    esi,DWORD PTR [ebp-0x73]
  40be34:	sbb    eax,0x5d4b5125
  40be39:	mov    esi,DWORD PTR [edi+edi*8-0x3e]
  40be3d:	sti    
  40be3e:	scas   eax,DWORD PTR es:[edi]
  40be3f:	ins    BYTE PTR es:[edi],dx
  40be40:	add    BYTE PTR [eax],al
  40be42:	int3   
  40be43:	add    BYTE PTR [eax],al
  40be45:	inc    DWORD PTR [eax]
  40be47:	je     0x40be00
  40be49:	xchg   edx,eax
  40be4a:	and    eax,ebp
  40be4c:	add    BYTE PTR [eax],al
  40be4e:	add    BYTE PTR [ecx+0x62e8d207],cl
  40be54:	in     al,dx
  40be55:	mov    eax,DWORD PTR [eax]
  40be57:	cmovne ecx,esp
  40be5a:	add    BYTE PTR [eax+0x25],dl
  40be5d:	push   ss
  40be5e:	(bad)  
  40be5f:	cwde   
  40be60:	push   ebp
  40be61:	int3   
  40be62:	add    BYTE PTR [eax],al
  40be64:	retf   0xe495
  40be67:	xor    ecx,DWORD PTR [ebx-0x3f750000]
  40be6d:	adc    eax,0x5d6b008d
  40be72:	addr16 jmp 0x76ac:0xcc00eb8b
  40be7a:	mov    esi,0x8d45ff9c
  40be7f:	add    BYTE PTR [edx-0x1],ch
  40be82:	push   esi
  40be83:	pop    ebp
  40be84:	ret    
  40be85:	stos   BYTE PTR es:[edi],al
  40be86:	and    al,al
  40be88:	ja     0x40be8a
  40be8a:	add    BYTE PTR [eax],al
  40be8c:	add    BYTE PTR [ecx],al
  40be8e:	pop    eax
  40be8f:	cmc    
  40be90:	mov    edx,0xeb0000e8
  40be95:	mov    ebp,DWORD PTR [edx+0x0]
  40be98:	push   esi
  40be99:	mov    dh,0x78
  40be9b:	push   ebx
  40be9c:	dec    esp
  40be9d:	add    BYTE PTR [eax],al
  40be9f:	add    al,0xec
  40bea1:	cmp    bl,BYTE PTR [edx]
  40bea3:	call   0xc0ff:0xbb
  40beaa:	or     BYTE PTR [ebx-0x4118ef34],cl
  40beb0:	ror    DWORD PTR [ebp+0x620089dd],0xc7
  40beb7:	rcl    BYTE PTR [esi+0x8],1
  40beba:	mov    edx,DWORD PTR ds:0x8b460f00
  40bec0:	or     BYTE PTR [eax+0x39],ah
  40bec3:	dec    eax
  40bec4:	ins    BYTE PTR es:[edi],dx
  40bec5:	inc    ebp
  40bec6:	int3   
  40bec7:	inc    DWORD PTR [eax]
  40bec9:	retf   0xc2cd
  40becc:	xchg   edx,eax
  40becd:	ror    BYTE PTR [eax],0xc
  40bed0:	or     al,0xc
  40bed2:	inc    DWORD PTR [ecx]
  40bed4:	int3   
  40bed5:	xchg   DWORD PTR [ebp+0x8b6d02],edx
  40bedb:	add    BYTE PTR [ebx],dh
  40bedd:	mov    ds:0x4d8236a6,eax
  40bee2:	add    eax,eax
  40bee4:	jne    0x40be71
  40bee6:	or     ah,cl
  40bee8:	jmp    FWORD PTR [edi+0x14]
  40beeb:	push   ss
  40beec:	loopne 0x40be77
  40beee:	int3   
  40beef:	dec    DWORD PTR [ebx+0x603595a8]
  40bef5:	int3   
  40bef6:	int3   
  40bef7:	je     0x40bef9
  40bef9:	mov    eax,DWORD PTR [eax]
  40befb:	add    BYTE PTR [eax],al
  40befd:	add    eax,0xeade54
  40bf02:	add    al,0x8b
  40bf04:	mov    DWORD PTR [ebx+0x6a778],ebp
  40bf0a:	mov    ecx,esp
  40bf0c:	add    al,0x0
  40bf0e:	call   0x17a14adf
  40bf13:	dec    eax
  40bf14:	out    dx,eax
  40bf15:	int3   
  40bf16:	mov    eax,DWORD PTR [eax]
  40bf18:	(bad)  
  40bf19:	cmp    dh,bl
  40bf1b:	cmp    al,0x65
  40bf1d:	add    BYTE PTR [ebp+0x0],dh
  40bf20:	mov    eax,DWORD PTR [eax]
  40bf22:	rol    BYTE PTR [eax],0x0
  40bf25:	mov    eax,ds:0x7449cf35
  40bf2a:	jmp    0x40bf2b
  40bf2c:	int3   
  40bf2d:	cdq    
  40bf2e:	hlt    
  40bf2f:	inc    edi
  40bf30:	outs   dx,DWORD PTR ds:[esi]
  40bf31:	in     al,dx
  40bf32:	add    al,0xf
  40bf34:	fld    QWORD PTR [ecx]
  40bf36:	int3   
  40bf37:	adc    DWORD PTR [eax],0x27
  40bf3a:	repz or dh,bh
  40bf3d:	push   DWORD PTR [eax+ebp*8-0x75]
  40bf41:	push   esp
  40bf42:	pop    ecx
  40bf43:	pushf  
  40bf44:	fs mov ecx,esp
  40bf47:	sub    ebx,0xffffffcc
  40bf4a:	add    bh,al
  40bf4c:	push   ebp
  40bf4d:	sbb    ah,BYTE PTR [ebx]
  40bf4f:	ss int3 
  40bf51:	or     DWORD PTR [edi],0x0
  40bf54:	add    BYTE PTR [ebx+0x57],bl
  40bf57:	mov    esp,0x8b00ccbc
  40bf5c:	mov    eax,DWORD PTR [ebp-0x3fff2234]
  40bf62:	sbb    eax,0x8945f41f
  40bf67:	pop    ebp
  40bf68:	int3   
  40bf69:	mov    edx,0xff7f049f
  40bf6e:	dec    esp
  40bf70:	mov    ecx,esp
  40bf72:	add    ecx,DWORD PTR [ebx-0x36543377]
  40bf78:	add    eax,DWORD PTR [ebp-0x75]
  40bf7b:	add    BYTE PTR [eax],cl
  40bf7d:	pop    ebx
  40bf7e:	inc    esp
  40bf7f:	lods   al,BYTE PTR ds:[esi]
  40bf80:	imul   ecx,DWORD PTR [ebx+0x5504e000],0xffffff83
  40bf87:	push   ebp
  40bf88:	add    ch,cl
  40bf8a:	sub    ecx,ecx
  40bf8c:	jmp    0x40bf8e
  40bf8e:	adc    bh,bh
  40bf90:	test   DWORD PTR [ebp-0x740d04ff],edi
  40bf96:	push   esi
  40bf97:	add    BYTE PTR [ecx],al
  40bf99:	add    al,al
  40bf9b:	inc    ebp
  40bf9c:	add    BYTE PTR [eax],dh
  40bf9e:	js     0x40bf31
  40bfa0:	mov    esp,0x8500ec85
  40bfa5:	fcomp  st(6)
  40bfa7:	xor    edi,eax
  40bfa9:	mov    eax,DWORD PTR [ecx]
  40bfab:	mov    DWORD PTR [eax],eax
  40bfad:	shr    bl,0x6a
  40bfb0:	mov    ebp,DWORD PTR [esi+eiz*1]
  40bfb3:	xchg   esp,eax
  40bfb4:	sbb    edi,edi
  40bfb6:	add    ah,cl
  40bfb8:	add    esp,eax
  40bfba:	xchg   ebp,eax
  40bfbb:	out    0x64,al
  40bfbd:	int3   
  40bfbe:	lea    eax,[ebp+0x740100]
  40bfc4:	int3   
  40bfc5:	rcr    DWORD PTR [ecx],0x73
  40bfc8:	pop    es
  40bfc9:	int3   
  40bfca:	inc    ebp
  40bfcb:	adc    BYTE PTR [eax],al
  40bfcd:	mov    ebp,0xffe6e367
  40bfd2:	add    ch,bl
  40bfd4:	mov    ecx,esp
  40bfd6:	pop    ebp
  40bfd7:	add    al,ch
  40bfd9:	in     al,dx
  40bfda:	dec    esi
  40bfdb:	push   cs
  40bfdc:	mov    ecx,0x4683dd00
  40bfe1:	mov    ebx,DWORD PTR [ebx+0x75456ec5]
  40bfe7:	inc    esi
  40bfe8:	add    al,ch
  40bfea:	add    BYTE PTR [ebx+0xdbd99cc],cl
  40bff0:	test   DWORD PTR [ebp+0x8],eax
  40bff3:	push   0xffffff89
  40bff5:	loopne 0x40c020
  40bff7:	repz stc 
  40bff9:	int3   
  40bffa:	int3   
  40bffb:	mov    DWORD PTR [ebx-0x7c007500],eax
  40c001:	test   BYTE PTR [eax-0x1f749b9b],bh
  40c007:	inc    esi
  40c008:	xor    eax,DWORD PTR [eax+0x67]
  40c00b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c00c:	ds je  0x40c017
  40c00f:	push   eax
  40c010:	rcl    BYTE PTR [eax],0xcc
  40c013:	add    edi,edi
  40c015:	rcr    BYTE PTR ds:0x897b9a,1
  40c01b:	add    BYTE PTR [eax],al
  40c01d:	int3   
  40c01e:	push   cs
  40c01f:	hlt    
  40c020:	call   0x8b:0xf55ffff
  40c027:	add    bh,al
  40c029:	push   edi
  40c02a:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40c02c:	pavgb  mm1,QWORD PTR [ebp+0x55]
  40c030:	or     DWORD PTR [ecx-0xe2f9d0],0xffffff8d
  40c037:	inc    ebp
  40c038:	add    BYTE PTR [ebx+0x590000c7],cl
  40c03e:	mov    WORD PTR [edi+0x44],?
  40c041:	push   eax
  40c042:	cmovne eax,DWORD PTR [esi+0x19]
  40c046:	sub    eax,0xcce3c5
  40c04b:	add    BYTE PTR [ebx-0xff9575],cl
  40c051:	mov    ch,BYTE PTR [eax-0x1c]
  40c054:	xchg   DWORD PTR [edx+0x0],ebp
  40c057:	mov    eax,DWORD PTR [eax]
  40c059:	sahf   
  40c05a:	jb     0x40c00a
  40c05c:	sbb    edi,edi
  40c05e:	add    BYTE PTR [ebx+0xc08b04],cl
  40c064:	jne    0x40c0ca
  40c066:	push   ecx
  40c067:	or     dl,BYTE PTR [ecx+0x8]
  40c06a:	int3   
  40c06b:	add    BYTE PTR [eax],al
  40c06d:	mov    al,ds:0x1dbd4c5
  40c072:	jne    0x40c074
  40c074:	add    BYTE PTR [eax],al
  40c076:	push   esi
  40c077:	dec    esp
  40c079:	mov    dl,0x39
  40c07b:	dec    esp
  40c07c:	out    0xe0,eax
  40c07e:	je     0x40c068
  40c080:	fst    QWORD PTR [esi-0x7462ae1f]
  40c086:	add    BYTE PTR [ebx+0x150075cc],cl
  40c08c:	add    BYTE PTR [ecx-0xc],cl
  40c08f:	xchg   edx,eax
  40c090:	scas   al,BYTE PTR es:[edi]
  40c091:	add    BYTE PTR [eax],al
  40c093:	int3   
  40c094:	add    BYTE PTR [ebp+edi*8+0x29],ah
  40c098:	ins    BYTE PTR es:[edi],dx
  40c099:	dec    DWORD PTR [ebx+0xfff4683]
  40c09f:	add    BYTE PTR [ebp-0x36],dh
  40c0a2:	in     al,dx
  40c0a3:	nop
  40c0a4:	or     eax,0xff468b
  40c0a9:	ret    
  40c0aa:	dec    ecx
  40c0ab:	sti    
  40c0ac:	mov    esp,0x1ff00
  40c0b1:	add    BYTE PTR [ecx],al
  40c0b3:	mov    ecx,DWORD PTR [edx+edx*4]
  40c0b6:	mov    dl,0xd1
  40c0b8:	or     eax,DWORD PTR [eax]
  40c0ba:	add    BYTE PTR [eax],al
  40c0bc:	mov    ecx,DWORD PTR [ecx+edi*1+0x75c5]
  40c0c3:	add    BYTE PTR [ecx],al
  40c0c5:	add    al,al
  40c0c7:	in     al,dx
  40c0c8:	mov    edi,esp
  40c0ca:	push   edi
  40c0cb:	pop    eax
  40c0cc:	sbb    eax,DWORD PTR [ecx]
  40c0ce:	add    BYTE PTR [ecx],al
  40c0d0:	add    BYTE PTR [eax+ebx*2-0x33b9d1bb],dl
  40c0d7:	or     BYTE PTR [ebx+0x8bff00],cl
  40c0dd:	xchg   esp,eax
  40c0de:	stos   BYTE PTR es:[edi],al
  40c0df:	inc    esp
  40c0e0:	lock push esi
  40c0e2:	dec    ebp
  40c0e3:	in     al,dx
  40c0e4:	loopne 0x40c084
  40c0e6:	addr16 or edx,esi
  40c0e9:	je     0x40c0b7
  40c0eb:	add    ah,cl
  40c0ed:	inc    DWORD PTR [eax]
  40c0ef:	mov    ecx,esp
  40c0f1:	lahf   
  40c0f2:	jns    0x40c102
  40c0f4:	or     DWORD PTR [eax],0x55
  40c0f7:	add    al,al
  40c0f9:	pop    es
  40c0fa:	retf   
  40c0fb:	fisubr DWORD PTR [ebx+0x1]
  40c0fe:	jmp    0x40c08b
  40c100:	dec    ebp
  40c101:	int3   
  40c102:	push   0xffffff8b
  40c104:	add    BYTE PTR [eax+0x4d82ae1d],al
  40c10a:	push   ebp
  40c10b:	shr    al,0x10
  40c10e:	and    al,0x35
  40c110:	add    bh,0x8
  40c113:	je     0x40c114
  40c115:	inc    DWORD PTR [eax]
  40c117:	push   ebp
  40c118:	jne    0x40c0cf
  40c11a:	fdiv   QWORD PTR [esi+0x6e]
  40c11d:	je     0x40c134
  40c11f:	lea    ecx,[ebx-0x19d6983c]
  40c125:	add    DWORD PTR [esi+0x0],0x4
  40c129:	inc    esi
  40c12a:	jne    0x40c118
  40c12c:	adc    BYTE PTR ds:0x571b2d,dh
  40c132:	dec    DWORD PTR [ebp-0x47feee7d]
  40c138:	loope  0x40c0bd
  40c13a:	lea    ecx,[ecx+0x508b088b]
  40c140:	int3   
  40c141:	adc    edi,ebp
  40c143:	mov    ah,0x45
  40c145:	push   esi
  40c146:	mov    ecx,DWORD PTR [ebx*8-0x58ae8ecf]
  40c14d:	add    BYTE PTR [ebx+0x18b83],cl
  40c153:	add    BYTE PTR [ebx+0x2910378d],cl
  40c159:	add    al,ah
  40c15b:	in     al,dx
  40c15c:	int3   
  40c15d:	pop    ebp
  40c15e:	dec    esp
  40c15f:	repnz inc esi
  40c161:	add    BYTE PTR [eax],al
  40c163:	pop    ebp
  40c164:	mov    esp,ecx
  40c166:	add    al,0x8b
  40c168:	add    BYTE PTR [ecx-0x33c0b61c],ah
  40c16e:	add    BYTE PTR [ebx-0x12eb8b96],cl
  40c174:	pop    edx
  40c175:	jne    0x40c1cd
  40c177:	or     BYTE PTR [ebx],al
  40c179:	(bad)  
  40c17a:	dec    DWORD PTR [ebx-0xad710ff]
  40c180:	call   DWORD PTR es:0x246d0300
  40c187:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c188:	cmp    esi,DWORD PTR [edi+edi*8+0x0]
  40c18c:	mov    ecx,DWORD PTR [ebp+0x1]
  40c18f:	mov    eax,DWORD PTR [esi+0x13]
  40c192:	mov    cl,0x97
  40c194:	and    eax,0x5000eb8b
  40c199:	out    dx,eax
  40c19a:	xchg   edx,eax
  40c19b:	push   ss
  40c19c:	enter  0x7455,0xcc
  40c1a0:	dec    DWORD PTR [ebx+0x61cc4555]
  40c1a6:	mov    eax,ds:0x7401d51a
  40c1ab:	add    BYTE PTR [eax],al
  40c1ad:	cld    
  40c1ae:	sahf   
  40c1af:	inc    ebp
  40c1b0:	dec    BYTE PTR [ebx+0x40c45]
  40c1b6:	add    DWORD PTR [edi],ecx
  40c1b8:	ror    dl,0x1f
  40c1bb:	push   0xffffffd5
  40c1bd:	int3   
  40c1be:	inc    DWORD PTR [ebp-0x138d300]
  40c1c4:	push   edx
  40c1c5:	add    al,0x74
  40c1c7:	pop    ebp
  40c1c8:	test   eax,eax
  40c1ca:	mov    eax,edi
  40c1cc:	push   0x0
  40c1ce:	jp     0x40c231
  40c1d0:	imul   edi,edi,0x118d7400
  40c1d6:	and    al,0xd2
  40c1d8:	outs   dx,BYTE PTR ds:[esi]
  40c1d9:	je     0x40c220
  40c1db:	add    BYTE PTR [eax],dl
  40c1dd:	add    BYTE PTR [ebx+eax*4],al
  40c1e0:	int3   
  40c1e1:	ret    
  40c1e2:	jmp    0xcc0dff
  40c1e7:	add    DWORD PTR [ebp-0x450fd5d7],ecx
  40c1ed:	inc    ebp
  40c1ee:	inc    esi
  40c1ef:	mov    eax,DWORD PTR [ecx]
  40c1f1:	add    BYTE PTR [ecx],al
  40c1f3:	je     0x40c1c1
  40c1f5:	adc    eax,DWORD PTR [ecx+0x5]
  40c1f8:	cmp    ecx,DWORD PTR [ebp+0x3]
  40c1fb:	test   DWORD PTR [eax],eax
  40c1fd:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40c1ff:	pop    edx
  40c200:	bound  eax,QWORD PTR [eax]
  40c202:	add    ah,cl
  40c204:	mov    ecx,DWORD PTR [ebx-0x5874b914]
  40c20a:	pushf  
  40c20b:	mov    DWORD PTR [edx+0x55],0xe0ff0108
  40c212:	int    0xc3
  40c214:	jne    0x40c28b
  40c216:	mov    edi,edi
  40c218:	fld    QWORD PTR [eax]
  40c21a:	or     al,0x8
  40c21c:	add    BYTE PTR [edx],al
  40c21e:	push   ss
  40c21f:	rcr    ch,1
  40c221:	add    BYTE PTR [eax],al
  40c223:	add    DWORD PTR [ecx],0x70
  40c226:	push   cs
  40c227:	imul   esp,eax,0xf
  40c22a:	add    DWORD PTR [ebx+esi*1],ecx
  40c22d:	rol    BYTE PTR [ecx],0x83
  40c230:	int3   
  40c231:	sub    DWORD PTR [ecx],esi
  40c233:	mov    ah,0xe0
  40c235:	mov    DWORD PTR [ebx-0x7cb0cc40],ecx
  40c23b:	into   
  40c23c:	imul   ebx,ebp,0xff018b00
  40c242:	dec    esp
  40c244:	int3   
  40c245:	ret    
  40c246:	jmp    0xff03:0x838370ea
  40c24d:	add    DWORD PTR [esi-0x11],ecx
  40c250:	push   esp
  40c251:	ja     0x40c253
  40c253:	add    BYTE PTR [ebp+ecx*4+0x1],dh
  40c257:	push   eax
  40c258:	add    BYTE PTR [eax],al
  40c25a:	js     0x40c22a
  40c25c:	push   edi
  40c25d:	ins    DWORD PTR es:[edi],dx
  40c25e:	inc    ebp
  40c25f:	mov    DWORD PTR [eax],eax
  40c261:	push   eax
  40c262:	call   0x11ffc9d
  40c267:	rol    BYTE PTR [eax],0x4d
  40c26a:	je     0x40c26d
  40c26c:	add    BYTE PTR [ebp+0x52d7fc20],al
  40c272:	je     0x40c2e9
  40c274:	inc    DWORD PTR [eax]
  40c276:	xchg   esi,eax
  40c277:	leave  
  40c278:	and    al,0x75
  40c27a:	add    al,0xff
  40c27c:	dec    esp
  40c27e:	je     0x40c2ea
  40c280:	inc    DWORD PTR [ebp-0x3cb8f8d2]
  40c286:	dec    ebp
  40c287:	inc    ebp
  40c288:	int3   
  40c289:	test   DWORD PTR [ebp+0x72],ebp
  40c28c:	ficom  DWORD PTR [edi]
  40c28e:	add    BYTE PTR [ebx-0x38fe13ff],cl
  40c294:	mov    ecx,esp
  40c296:	pop    ss
  40c297:	repnz xchg edx,eax
  40c299:	push   0xffffffcc
  40c29b:	xor    ecx,DWORD PTR [ecx+0x36ed7eff]
  40c2a1:	add    eax,0x33850045
  40c2a6:	add    BYTE PTR [eax],al
  40c2a8:	pop    ebp
  40c2a9:	int3   
  40c2aa:	shr    DWORD PTR [ebx+eax*8-0x23],1
  40c2ae:	(bad)  
  40c2b0:	add    BYTE PTR [eax],al
  40c2b2:	data16 lock fdivr DWORD PTR [ecx-0x77]
  40c2b7:	push   esi
  40c2b8:	add    BYTE PTR [ebx],al
  40c2ba:	inc    ebp
  40c2bb:	add    BYTE PTR [eax],al
  40c2bd:	loopne 0x40c308
  40c2bf:	daa    
  40c2c0:	and    al,bh
  40c2c2:	or     esp,0x0
  40c2c5:	push   0xffffffff
  40c2c7:	pop    ds
  40c2c8:	(bad)  
  40c2c9:	cmc    
  40c2ca:	add    BYTE PTR [ebp+0x1],dl
  40c2cd:	int3   
  40c2ce:	xor    ecx,esp
  40c2d0:	mov    eax,DWORD PTR [eax]
  40c2d2:	push   ecx
  40c2d3:	mov    ah,0x29
  40c2d5:	mov    bh,0x8b
  40c2d7:	int3   
  40c2d8:	dec    DWORD PTR [eax]
  40c2da:	cmp    al,BYTE PTR [esi-0x28]
  40c2dd:	sbb    DWORD PTR [eax],eax
  40c2df:	add    ah,cl
  40c2e1:	xor    eax,DWORD PTR [eax]
  40c2e3:	mov    ecx,DWORD PTR [ebx-0xe209daa]
  40c2e9:	icebp  
  40c2ea:	mov    eax,DWORD PTR [ecx]
  40c2ec:	push   DWORD PTR [ebx+ecx*8-0x17]
  40c2f0:	pushf  
  40c2f1:	repnz dec DWORD PTR [eax]
  40c2f4:	push   ebp
  40c2f5:	je     0x40c282
  40c2f7:	add    BYTE PTR [ecx+0x42d9de46],cl
  40c2fd:	cmc    
  40c2fe:	add    BYTE PTR [eax],al
  40c300:	inc    DWORD PTR [eax]
  40c302:	outs   dx,DWORD PTR ds:[esi]
  40c303:	pop    edx
  40c304:	mov    edi,0xcc4d33
  40c309:	add    BYTE PTR [eax],al
  40c30b:	add    eax,DWORD PTR [ebp+0xc]
  40c30e:	clc    
  40c30f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c310:	sub    ah,BYTE PTR [ecx-0x1]
  40c313:	xor    ecx,DWORD PTR [ebx+0x66c8645]
  40c319:	stc    
  40c31a:	add    BYTE PTR [eax],al
  40c31c:	add    ah,cl
  40c31e:	mov    eax,ebp
  40c320:	mov    edi,edi
  40c322:	leave  
  40c323:	mov    ds:0x897643,eax
  40c328:	mov    eax,DWORD PTR [eax]
  40c32a:	test   BYTE PTR [edx+ebx*1],ch
  40c32d:	in     eax,0x0
  40c32f:	int3   
  40c330:	dec    ebp
  40c331:	add    BYTE PTR [ebp+0x0],al
  40c334:	add    BYTE PTR [eax],cl
  40c336:	cmp    dl,bh
  40c338:	cmp    ch,dh
  40c33a:	xor    ecx,DWORD PTR [ebx+0x5f46ff01]
  40c340:	xor    BYTE PTR [eax],ah
  40c342:	inc    esi
  40c343:	add    eax,ebp
  40c345:	add    DWORD PTR [eax],eax
  40c347:	or     BYTE PTR [ebx-0x1de0bdfc],cl
  40c34d:	cmc    
  40c34e:	je     0x40c2db
  40c350:	dec    DWORD PTR [eax]
  40c352:	cmp    bh,BYTE PTR [ebp-0x6]
  40c355:	xchg   bh,bh
  40c357:	adc    eax,0x8b00004d
  40c35c:	push   eax
  40c35d:	lea    ecx,[ebp-0x1]
  40c360:	jp     0x40c399
  40c362:	mov    eax,DWORD PTR [eax]
  40c364:	add    al,al
  40c366:	(bad)  
  40c368:	es push ebp
  40c36a:	add    DWORD PTR [ebx-0x2213fd00],eax
  40c370:	ror    BYTE PTR [ebx+0x7b1a6ce5],0x5d
  40c377:	inc    ebp
  40c378:	adc    eax,0x6e7045
  40c37d:	repz inc ebp
  40c37f:	lea    esi,[ebp+0x75]
  40c382:	add    al,0x0
  40c384:	add    ah,cl
  40c386:	ja     0x40c34b
  40c388:	and    cl,ah
  40c38a:	add    DWORD PTR [ebp-0x4b217c75],ecx
  40c390:	push   esi
  40c391:	ror    DWORD PTR [ebx+0x6a89cc00],1
  40c397:	add    edi,edi
  40c399:	inc    esi
  40c39a:	ins    BYTE PTR es:[edi],dx
  40c39b:	rol    ecx,cl
  40c39d:	mov    dl,0xe8
  40c39f:	inc    esi
  40c3a0:	add    BYTE PTR [ecx],al
  40c3a2:	(bad)
  40c3a5:	sbb    ecx,DWORD PTR [eax]
  40c3a7:	mov    edx,DWORD PTR [eax-0x34]
  40c3aa:	shr    bl,0x0
  40c3ad:	add    BYTE PTR [eax+0x2223f5],dl
  40c3b3:	or     ah,cl
  40c3b5:	(bad)  
  40c3b6:	fcmovu st,st(7)
  40c3b8:	cmp    cl,BYTE PTR [edi]
  40c3ba:	jmp    eax
  40c3bc:	dec    DWORD PTR [ebx-0x33fbfe8c]
  40c3c2:	addr16 jmp 0x40c3db
  40c3c5:	cmc    
  40c3c6:	dec    esp
  40c3c8:	add    BYTE PTR [ebp+0x73],dl
  40c3cb:	fs sub eax,0x46cc041b
  40c3d1:	inc    DWORD PTR [eax]
  40c3d3:	add    bh,bh
  40c3d5:	push   ebp
  40c3d6:	dec    edx
  40c3d7:	std    
  40c3d8:	and    eax,0x10fe
  40c3dd:	adc    eax,0x719ae2f0
  40c3e2:	add    bl,ch
  40c3e4:	xor    esi,DWORD PTR [ebp-0x75]
  40c3e7:	mov    eax,DWORD PTR [eax]
  40c3e9:	add    BYTE PTR [eax-0xbcccae],bl
  40c3ef:	or     BYTE PTR [eax],al
  40c3f1:	(bad)  
  40c3f2:	popw   ds
  40c3f4:	call   0xff89:0xff8b54
  40c3fb:	add    BYTE PTR [eax],al
  40c3fd:	je     0x40c3c6
  40c3ff:	in     eax,dx
  40c400:	and    eax,0x89c000a6
  40c405:	add    BYTE PTR [esi],dh
  40c407:	jl     0x40c410
  40c409:	ins    BYTE PTR es:[edi],dx
  40c40a:	ror    BYTE PTR [ebx-0x33743f34],0xeb
  40c411:	(bad)  
  40c412:	pop    edi
  40c413:	ror    DWORD PTR [esp+ebx*1-0x33ffa3],cl
  40c41a:	test   DWORD PTR [esi-0x74f0472a],esi
  40c420:	add    DWORD PTR [eax],0xffffff85
  40c423:	mov    ebp,DWORD PTR [edx+0x4d]
  40c426:	aam    0xe
  40c428:	ret    
  40c429:	mov    bh,0x1
  40c42b:	push   eax
  40c42c:	or     BYTE PTR [ebx-0x624c6a7e],cl
  40c432:	rol    BYTE PTR [ebx-0x7474ef15],0xcc
  40c439:	add    BYTE PTR [ecx],ah
  40c43b:	(bad)  
  40c43d:	lds    ecx,FWORD PTR [ebp+0x39500f8b]
  40c443:	ror    BYTE PTR [esi],1
  40c445:	pop    ss
  40c446:	inc    DWORD PTR [eax]
  40c448:	dec    ebp
  40c449:	add    ah,cl
  40c44b:	mov    DWORD PTR [eax],eax
  40c44d:	add    BYTE PTR [esi+eax*1+0xc7e31b],al
  40c454:	dec    DWORD PTR [ebx*8-0x334af91e]
  40c45b:	adc    BYTE PTR [eax],al
  40c45d:	add    BYTE PTR [eax],al
  40c45f:	int3   
  40c460:	inc    ebp
  40c461:	add    BYTE PTR [eax-0x338e583b],bh
  40c467:	or     BYTE PTR [esi+0x55],dl
  40c46a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c46b:	dec    ebx
  40c46c:	push   0x5d8b0059
  40c471:	inc    ebp
  40c472:	shr    al,0x5d
  40c475:	push   0x25
  40c477:	loope  0x40c40e
  40c479:	adc    BYTE PTR [eax],al
  40c47b:	in     al,dx
  40c47c:	add    bl,ch
  40c47e:	or     eax,0xff8e1ba0
  40c483:	add    al,0x5d
  40c485:	add    BYTE PTR [eax],al
  40c487:	mov    esi,DWORD PTR [ebp+0x0]
  40c48a:	jo     0x40c4cc
  40c48c:	pop    ebx
  40c48d:	aaa    
  40c48e:	mov    edx,DWORD PTR [esi-0x40]
  40c491:	add    BYTE PTR [esi],cl
  40c493:	fidivr WORD PTR [bp+di-0x7418]
  40c498:	(bad)  
  40c499:	invd   
  40c49b:	add    BYTE PTR [ebp+0x0],dl
  40c49e:	push   ebp
  40c49f:	out    dx,al
  40c4a0:	mov    dl,0x99
  40c4a2:	add    DWORD PTR [ebx+eax*4],eax
  40c4a5:	xor    edi,DWORD PTR [esi-0x62]
  40c4a8:	pop    esi
  40c4a9:	mov    bh,0x8
  40c4ab:	dec    esp
  40c4ad:	add    BYTE PTR [eax],al
  40c4af:	push   eax
  40c4b0:	add    BYTE PTR [eax],al
  40c4b2:	xor    BYTE PTR [ecx+eiz*1-0x76fcfe63],ah
  40c4b9:	inc    ebp
  40c4ba:	and    eax,0x760e78
  40c4bf:	mov    edi,edi
  40c4c1:	add    DWORD PTR [eax],edx
  40c4c3:	add    ecx,DWORD PTR [ebp-0x435e1100]
  40c4c9:	push   ss
  40c4ca:	inc    esi
  40c4cb:	add    ah,cl
  40c4cd:	lea    esp,[edi]
  40c4cf:	clc    
  40c4d0:	mov    eax,es:0xff00018b
  40c4d6:	add    DWORD PTR [eax+eax*1],ecx
  40c4d9:	add    al,0x7f
  40c4db:	mov    ds:0x89c8ad,al
  40c4e0:	(bad)  
  40c4e2:	sbb    bh,ch
  40c4e4:	sbb    DWORD PTR [edi],0x8b00ff
  40c4ea:	inc    ebp
  40c4eb:	or     BYTE PTR [ebx],al
  40c4ed:	add    BYTE PTR [edx+0x2c],ch
  40c4f0:	push   esp
  40c4f1:	out    dx,eax
  40c4f2:	add    ah,cl
  40c4f4:	add    BYTE PTR [eax],al
  40c4f6:	jns    0x40c544
  40c4f8:	jbe    0x40c532
  40c4fa:	int3   
  40c4fb:	rol    bh,0x0
  40c4fe:	adc    ah,cl
  40c500:	(bad)  
  40c501:	(bad)  
  40c502:	js     0x40c525
  40c504:	daa    
  40c505:	str    WORD PTR [ebx+0x207f830c]
  40c50c:	pop    ebx
  40c50d:	mov    ch,0x74
  40c50f:	push   esi
  40c510:	add    BYTE PTR [eax],al
  40c512:	add    BYTE PTR [ebp+0x0],dl
  40c515:	cmp    DWORD PTR [eax+0x1e],0x30
  40c519:	adc    bh,bh
  40c51b:	push   0xffffffc0
  40c51d:	int3   
  40c51e:	loop   0x40c50a
  40c520:	xchg   esp,eax
  40c521:	in     al,dx
  40c522:	add    BYTE PTR [ecx],al
  40c524:	int3   
  40c525:	add    eax,esp
  40c527:	add    BYTE PTR [eax],al
  40c529:	mov    esp,DWORD PTR [eax+0x17]
  40c52c:	mov    ebp,DWORD PTR [edi]
  40c52e:	add    BYTE PTR [ecx],al
  40c530:	pop    ebp
  40c531:	mov    esp,ebp
  40c533:	dec    ecx
  40c534:	bound  ebx,QWORD PTR [esi-0x747474ff]
  40c53a:	mov    esp,ecx
  40c53c:	add    al,ah
  40c53e:	jbe    0x40c4df
  40c540:	and    BYTE PTR [ebx],bh
  40c542:	add    BYTE PTR [ecx+eax*1],al
  40c545:	push   ebp
  40c546:	dec    ebx
  40c547:	shl    DWORD PTR [edx+eiz*8],0x8d
  40c54b:	int3   
  40c54c:	mov    ecx,DWORD PTR [eax*4+0x5d000108]
  40c553:	jmp    0x40c528
  40c555:	jecxz  0x40c59c
  40c557:	add    BYTE PTR [ecx],al
  40c559:	or     BYTE PTR [edi+0x65],ch
  40c55c:	xor    BYTE PTR [esi-0x8b7500],0x8b
  40c563:	add    esp,ecx
  40c565:	ffree  st(3)
  40c567:	sub    al,0x38
  40c569:	fimul  WORD PTR [esp+ecx*8-0x33ba3400]
  40c570:	jg     0x40c5bb
  40c572:	js     0x40c578
  40c574:	je     0x40c55e
  40c576:	or     DWORD PTR [ebx+0x768b0000],0x69
  40c57d:	iret   
  40c57e:	into   
  40c57f:	inc    DWORD PTR [esi+0x0]
  40c582:	add    BYTE PTR [eax+0x9f429b],cl
  40c588:	int3   
  40c589:	mov    DWORD PTR [ebx-0xff74ff],ecx
  40c58f:	mul    BYTE PTR [edi+0x8f44]
  40c595:	je     0x40c59f
  40c597:	push   esi
  40c598:	mov    edx,0x15009b3c
  40c59d:	add    BYTE PTR [esi+0x10],dl
  40c5a0:	add    BYTE PTR [eax+eax*8],cl
  40c5a3:	pop    esp
  40c5a4:	mov    ebx,0x8501ae6b
  40c5a9:	dec    esp
  40c5ab:	sbb    DWORD PTR [edx],edi
  40c5ad:	push   es
  40c5ae:	pop    eax
  40c5af:	add    BYTE PTR [ebx-0x74ff7d00],cl
  40c5b5:	push   esi
  40c5b6:	xor    edx,DWORD PTR [esi]
  40c5b8:	imul   eax,DWORD PTR [ebx],0x8900cc5b
  40c5be:	adc    BYTE PTR [edi+0x5033089d],cl
  40c5c4:	pop    ebp
  40c5c5:	jmp    0x40c593
  40c5c7:	or     BYTE PTR [ebp+0x0],dh
  40c5ca:	int3   
  40c5cb:	loopne 0x40c63c
  40c5cd:	inc    ecx
  40c5ce:	pop    edi
  40c5cf:	in     al,dx
  40c5d0:	add    ah,cl
  40c5d2:	mov    ecx,DWORD PTR [edx+0x67]
  40c5d5:	rcl    DWORD PTR [ebx-0x1],cl
  40c5d8:	dec    ebp
  40c5d9:	add    BYTE PTR [eax],al
  40c5db:	int3   
  40c5dc:	or     BYTE PTR [eax],al
  40c5de:	call   FWORD PTR [eax+0x77]
  40c5e1:	js     0x40c581
  40c5e3:	or     BYTE PTR [edx*1+0x377f4b00],cl
  40c5ea:	fsubr  st(0),st
  40c5ec:	dec    esp
  40c5ee:	(bad)  
  40c5ef:	fisttp QWORD PTR [ebx+0x7f610400]
  40c5f5:	fiadd  DWORD PTR ss:[eax]
  40c5f8:	add    al,0xff
  40c5fa:	adc    eax,0xfccad039
  40c5ff:	add    bh,bh
  40c601:	or     al,0xcc
  40c603:	mov    eax,eax
  40c605:	test   DWORD PTR [ebx+0x5a486412],ecx
  40c60b:	add    BYTE PTR [ecx],al
  40c60d:	je     0x40c613
  40c60f:	scas   al,BYTE PTR es:[edi]
  40c610:	enter  0x58d3,0x4d
  40c614:	mov    DWORD PTR [ebx-0x743ff77d],ecx
  40c61a:	add    dh,cl
  40c61c:	idiv   ch
  40c61e:	ret    
  40c61f:	add    BYTE PTR [ebx+0x302015ff],cl
  40c625:	les    ecx,FWORD PTR [ebx]
  40c627:	add    BYTE PTR [ebp+0x0],dh
  40c62a:	lea    edx,[eax+0x75]
  40c62d:	dec    ebp
  40c62e:	and    DWORD PTR [ecx],0x15
  40c631:	test   al,dl
  40c633:	mov    eax,DWORD PTR [eax]
  40c635:	jne    0x40c5ba
  40c637:	adc    al,0x89
  40c639:	add    dl,BYTE PTR [edx-0x75]
  40c63c:	int3   
  40c63d:	mov    esi,DWORD PTR [ebp-0x7d]
  40c640:	mov    DWORD PTR [eax],eax
  40c642:	(bad)  
  40c643:	int3   
  40c644:	or     esi,eax
  40c646:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c647:	push   eax
  40c648:	add    DWORD PTR [eax],eax
  40c64a:	push   eax
  40c64b:	or     al,0xaf
  40c64d:	xor    eax,0x8bcc892c
  40c652:	mov    eax,DWORD PTR [eax]
  40c654:	fnsave [ebx]
  40c656:	mov    ebp,eax
  40c658:	ja     0x40c65f
  40c65a:	call   0x8f32:0x89ffffcc
  40c661:	and    al,0x72
  40c663:	add    DWORD PTR [eax],eax
  40c665:	add    BYTE PTR [eax],al
  40c667:	add    BYTE PTR [eax],al
  40c669:	or     ah,cl
  40c66b:	xor    al,0x29
  40c66d:	xor    eax,0x88b892f
  40c672:	mov    edi,DWORD PTR [edx+ecx*4]
  40c675:	inc    edx
  40c676:	ja     0x40c678
  40c678:	mov    eax,eax
  40c67a:	mov    ecx,DWORD PTR [ebx-0x7b172300]
  40c680:	jb     0x40c60d
  40c682:	popf   
  40c683:	add    BYTE PTR [ebx+0x5ebe0008],cl
  40c689:	adc    ah,ah
  40c68b:	int3   
  40c68c:	add    ah,cl
  40c68e:	add    BYTE PTR [ebx-0x23ffef75],cl
  40c694:	mov    al,ds:0x83085e41
  40c699:	mov    eax,DWORD PTR [eax]
  40c69b:	push   edi
  40c69c:	mov    cl,0xa
  40c69e:	xchg   ecx,eax
  40c69f:	int3   
  40c6a0:	dec    DWORD PTR [ebx+0x1ff5d01]
  40c6a6:	add    BYTE PTR [edx],bl
  40c6a8:	lods   eax,DWORD PTR ds:[esi]
  40c6a9:	loop   0x40c630
  40c6ab:	ror    ah,0x0
  40c6ae:	mov    esi,DWORD PTR [esi+0x66]
  40c6b1:	pop    esi
  40c6b2:	xchg   DWORD PTR [ecx+0x8cc008b],ecx
  40c6b8:	push   ebp
  40c6b9:	pop    ebp
  40c6ba:	mov    esi,edi
  40c6bc:	gs (bad) 
  40c6be:	imul   eax,DWORD PTR [eax],0x0
  40c6c1:	inc    edi
  40c6c3:	bound  edi,QWORD PTR [edx+0x36]
  40c6c6:	xchg   esi,eax
  40c6c7:	add    DWORD PTR [ebp+0x5600cc],0xffffffff
  40c6ce:	mov    DWORD PTR [edi+0x68],ecx
  40c6d1:	xchg   ecx,eax
  40c6d2:	jae    0x40c729
  40c6d4:	add    BYTE PTR [ecx],al
  40c6d6:	mov    edi,DWORD PTR [eax-0x1396f751]
  40c6dc:	jne    0x40c6aa
  40c6de:	inc    ebp
  40c6df:	add    al,al
  40c6e1:	add    DWORD PTR [ebx-0x33e556b4],ecx
  40c6e7:	je     0x40c6e9
  40c6e9:	add    BYTE PTR [eax],dl
  40c6eb:	sbb    al,0x44
  40c6ed:	cmp    al,BYTE PTR [esi+0x10c70056]
  40c6f3:	inc    DWORD PTR [ecx]
  40c6f5:	je     0x40c6f6
  40c6f7:	cmp    ah,BYTE PTR [edx]
  40c6f9:	je     0x40c6e4
  40c6fb:	add    al,0x1
  40c6fd:	dec    ebp
  40c6fe:	int3   
  40c6ff:	push   esp
  40c700:	mov    esi,0x8b00d3b1
  40c705:	push   0xffffff83
  40c707:	inc    esi
  40c708:	add    BYTE PTR [ebp+0x3dafe008],al
  40c70e:	mov    cs,WORD PTR [eax]
  40c710:	add    BYTE PTR [ebx-0x479a2bf8],cl
  40c716:	sbb    BYTE PTR [ecx+0x100100],cl
  40c71c:	add    BYTE PTR [esi+0x0],dl
  40c71f:	mov    al,0x66
  40c721:	adc    DWORD PTR [ecx+0x46],esi
  40c724:	in     al,dx
  40c725:	jmp    0x40c6f3
  40c727:	out    dx,eax
  40c728:	scas   al,BYTE PTR es:[edi]
  40c729:	xor    bl,BYTE PTR [ecx+eax*1-0x34]
  40c72d:	add    al,0xcc
  40c72f:	je     0x40c6fd
  40c731:	int3   
  40c732:	(bad)  
  40c733:	cmp    al,0x82
  40c735:	dec    esi
  40c736:	inc    ebp
  40c737:	add    BYTE PTR [eax],al
  40c739:	int3   
  40c73a:	add    DWORD PTR [ecx],esp
  40c73c:	mov    al,0x24
  40c73e:	jge    0x40c6c5
  40c740:	add    BYTE PTR [ebx-0x74f000],cl
  40c746:	mov    ebp,DWORD PTR [edx+ebp*1]
  40c749:	sahf   
  40c74a:	ror    esp,cl
  40c74c:	dec    DWORD PTR [eax]
  40c74e:	add    BYTE PTR [edx],bl
  40c750:	ds pop ds
  40c752:	jl     0x40c714
  40c754:	jne    0x40c6db
  40c756:	push   esi
  40c757:	test   esp,ecx
  40c759:	inc    eax
  40c75b:	cwde   
  40c75c:	jge    0x40c776
  40c75e:	jno    0x40c727
  40c760:	add    ah,cl
  40c762:	add    BYTE PTR ds:0x7476ffaf,ch
  40c768:	loopne 0x40c7df
  40c76a:	int3   
  40c76b:	mov    DWORD PTR [eax],edx
  40c76d:	add    al,0x8b
  40c76f:	xor    edi,DWORD PTR [edi]
  40c771:	fisub  WORD PTR [edi+0x5d]
  40c774:	mov    DWORD PTR [eax],eax
  40c776:	int3   
  40c777:	cmp    dl,BYTE PTR [eax+0x4cc793e]
  40c77d:	add    BYTE PTR [edi],cl
  40c77f:	add    BYTE PTR [eax],cl
  40c781:	pop    ebp
  40c782:	int3   
  40c783:	out    0x73,eax
  40c785:	sub    BYTE PTR [eax+eax*1+0x33],dl
  40c789:	or     BYTE PTR [ebx+0x2707793b],cl
  40c78f:	push   0x0
  40c791:	add    BYTE PTR [ebx+0x400cc],cl
  40c797:	pop    es
  40c798:	test   BYTE PTR [esi],bl
  40c79a:	mov    bl,0xff
  40c79c:	add    BYTE PTR [ebp+0x1383d89],al
  40c7a2:	dec    ebp
  40c7a3:	mov    eax,DWORD PTR [eax]
  40c7a5:	add    BYTE PTR [ecx-0x333300f8],cl
  40c7ab:	cmp    cl,BYTE PTR [edx+0x6bcb]
  40c7b1:	inc    DWORD PTR [eax]
  40c7b3:	call   0x8ba6ee42
  40c7b8:	ud0    edi,edi
  40c7bb:	mov    eax,DWORD PTR [eax]
  40c7bd:	push   ebp
  40c7be:	mov    edi,DWORD PTR [edx]
  40c7c0:	jl     0x40c7ed
  40c7c2:	jb     0x40c790
  40c7c4:	add    eax,DWORD PTR [eax+eax*1]
  40c7c7:	push   ecx
  40c7c8:	mov    al,ds:0x898bdd32
  40c7cd:	add    esp,ebp
  40c7cf:	mov    eax,DWORD PTR [eax]
  40c7d1:	inc    DWORD PTR [ebp+0x1fa703fb]
  40c7d7:	dec    esp
  40c7d9:	add    BYTE PTR [eax],al
  40c7db:	(bad)  
  40c7dc:	push   ebp
  40c7dd:	xor    eax,ebx
  40c7df:	add    al,0x0
  40c7e1:	mov    esi,DWORD PTR [ebp-0x34]
  40c7e4:	(bad)  
  40c7e5:	in     al,dx
  40c7e6:	int3   
  40c7e7:	pop    edi
  40c7e8:	xor    ebx,ecx
  40c7ea:	addr16 or al,al
  40c7ed:	jne    0x40c77a
  40c7ef:	pop    ebp
  40c7f0:	test   eax,0xfc5e
  40c7f5:	add    BYTE PTR [eax],al
  40c7f7:	push   ebp
  40c7f8:	add    BYTE PTR [eax],dl
  40c7fa:	add    BYTE PTR [edi-0x55],cl
  40c7fd:	and    eax,0x8b00ff73
  40c802:	dec    ebp
  40c803:	out    0x5d,eax
  40c805:	leave  
  40c806:	in     al,0x45
  40c808:	add    esp,ecx
  40c80a:	add    BYTE PTR [ebp+0x0],al
  40c80d:	jne    0x40c79a
  40c80f:	lahf   
  40c810:	mov    ecx,es
  40c812:	add    al,0x0
  40c814:	int3   
  40c815:	int3   
  40c816:	add    BYTE PTR [edi],ah
  40c818:	jecxz  0x40c851
  40c81a:	fnsave [ebx+ecx*4-0x75]
  40c81e:	add    DWORD PTR [ecx],0x0
  40c821:	mov    ecx,DWORD PTR [ebx+0x77f7413f]
  40c827:	add    al,ah
  40c829:	int3   
  40c82a:	pop    ebp
  40c82b:	ja     0x40c832
  40c82d:	in     al,0x8b
  40c82f:	add    BYTE PTR [eax],al
  40c831:	add    BYTE PTR [eax],al
  40c833:	fld    QWORD PTR [ecx]
  40c835:	test   DWORD PTR [eax],eax
  40c837:	idiv   DWORD PTR [edx-0x32]
  40c83a:	les    ecx,FWORD PTR [edi]
  40c83c:	add    BYTE PTR [eax],al
  40c83e:	push   eax
  40c83f:	pop    eax
  40c840:	mov    dh,0x6b
  40c842:	sahf   
  40c843:	int3   
  40c844:	add    al,ah
  40c846:	add    BYTE PTR [eax],al
  40c848:	int3   
  40c849:	test   DWORD PTR [eax],eax
  40c84b:	or     edi,DWORD PTR ss:0xe074a6
  40c852:	add    BYTE PTR [ebx+edx*4],cl
  40c855:	jnp    0x40c7d7
  40c857:	add    al,ch
  40c859:	add    BYTE PTR [eax],al
  40c85b:	mov    DWORD PTR [eax],eax
  40c85d:	add    al,ch
  40c85f:	call   0xd61138
  40c864:	fisttp QWORD PTR [ebx+0x16a5c01]
  40c86a:	push   ebx
  40c86b:	add    al,0x89
  40c86d:	or     DWORD PTR [ecx+0x115ffcc],0x4c
  40c874:	add    DWORD PTR ds:0x1c0ff68,esi
  40c87a:	add    esp,esi
  40c87c:	ins    DWORD PTR es:[edi],dx
  40c87d:	cmp    eax,0x1ff0072
  40c882:	test   DWORD PTR [eax],edx
  40c884:	inc    DWORD PTR [eax]
  40c886:	add    DWORD PTR [edx+edi*2-0x74fb77fb],ebp
  40c88d:	add    bh,bh
  40c88f:	mov    dl,0x7b
  40c891:	ja     0x40c886
  40c893:	inc    DWORD PTR [eax]
  40c895:	add    DWORD PTR [ebp+0x4],eax
  40c898:	mov    ecx,DWORD PTR [ebx-0x7d27f475]
  40c89e:	(bad)  
  40c89f:	inc    DWORD PTR [ebx+0x63735075]
  40c8a5:	dec    edi
  40c8a6:	js     0x40c8b0
  40c8a8:	mov    DWORD PTR [ebx+0x400e056],ecx
  40c8ae:	add    BYTE PTR ds:0x10394c1f,ch
  40c8b4:	mov    DWORD PTR ds:0x3fc53a01,edx
  40c8ba:	aad    0x8b
  40c8bc:	add    DWORD PTR [eax],0xffffff8d
  40c8bf:	mov    esp,ecx
  40c8c1:	add    BYTE PTR [eax],cl
  40c8c3:	mov    al,ds:0x753bc213
  40c8c8:	mov    eax,DWORD PTR [eax+eax*1]
  40c8cb:	pop    ebx
  40c8cc:	push   ecx
  40c8cd:	pushf  
  40c8ce:	fwait
  40c8cf:	push   0xffffffcc
  40c8d1:	add    BYTE PTR [ebx+0xcc75c7],al
  40c8d7:	add    BYTE PTR [eax+0x22],bh
  40c8da:	ins    DWORD PTR es:[edi],dx
  40c8db:	pop    ebp
  40c8dc:	inc    esi
  40c8dd:	add    bh,bh
  40c8df:	cmp    BYTE PTR [esi-0x3e],bh
  40c8e2:	imul   eax,DWORD PTR [eax],0x0
  40c8e5:	push   eax
  40c8e6:	add    bh,bh
  40c8e8:	add    BYTE PTR [eax+eax*1],al
  40c8eb:	js     0x40c95a
  40c8ed:	enter  0x368,0xf
  40c8f1:	inc    DWORD PTR [eax]
  40c8f3:	jne    0x40c87c
  40c8f5:	jecxz  0x40c897
  40c8f7:	xor    ecx,DWORD PTR [ebx-0x14f31740]
  40c8fd:	mov    edi,edi
  40c8ff:	push   eax
  40c900:	js     0x40c934
  40c902:	stos   DWORD PTR es:[edi],eax
  40c903:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40c907:	das    
  40c908:	dec    ecx
  40c909:	loope  0x40c893
  40c90b:	add    ecx,DWORD PTR [ebx+0xcc8933]
  40c911:	dec    DWORD PTR [ebp+0x6d3b4044]
  40c917:	or     BYTE PTR [eax],cl
  40c919:	add    esp,ecx
  40c91b:	push   0xffffffc8
  40c91d:	pop    edi
  40c91e:	inc    edi
  40c91f:	add    BYTE PTR [eax],al
  40c921:	in     al,dx
  40c922:	add    BYTE PTR [ebx-0x3c00fe7d],cl
  40c928:	test   BYTE PTR [ecx+0x5c],bh
  40c92b:	jno    0x40c9a1
  40c92d:	add    BYTE PTR [ebp+0x6cbd4beb],cl
  40c933:	sub    DWORD PTR [ebp+edx*1+0x0],esi
  40c937:	push   ebp
  40c938:	dec    ebp
  40c939:	int3   
  40c93a:	mov    eax,DWORD PTR [ecx]
  40c93c:	push   ds
  40c93d:	scas   al,BYTE PTR es:[edi]
  40c93e:	jb     0x40c93a
  40c940:	add    BYTE PTR [eax+0x0],dl
  40c943:	push   ebp
  40c944:	push   edx
  40c945:	and    al,0xe0
  40c948:	add    ah,cl
  40c94a:	int3   
  40c94b:	add    eax,DWORD PTR [eax]
  40c94d:	add    BYTE PTR [ecx+0x5d28a54d],cl
  40c953:	mov    ebx,0x6a04cc
  40c958:	inc    esp
  40c959:	mov    ds:0x4002b22,al
  40c95e:	jne    0x40c960
  40c960:	int3   
  40c961:	mov    eax,DWORD PTR [eax]
  40c963:	mov    DWORD PTR [eax-0x26],ebx
  40c966:	pop    esi
  40c967:	ins    DWORD PTR es:[edi],dx
  40c968:	int3   
  40c969:	je     0x40c9b0
  40c96b:	add    ebp,esp
  40c96d:	mov    al,0x64
  40c96f:	jl     0x40c959
  40c971:	int3   
  40c972:	xor    eax,eax
  40c974:	add    al,0x0
  40c976:	inc    DWORD PTR [ebx+0x117bd86]
  40c97c:	add    BYTE PTR [ebx-0x49acffeb],cl
  40c982:	push   ss
  40c983:	and    al,BYTE PTR [eax]
  40c985:	add    edi,edi
  40c987:	mov    eax,DWORD PTR [eax]
  40c989:	fld    QWORD PTR [eax]
  40c98b:	int3   
  40c98c:	mov    cl,0x77
  40c98e:	std    
  40c98f:	(bad)  
  40c990:	dec    esp
  40c992:	push   eax
  40c993:	add    BYTE PTR [edi+esi*4+0xc5649d1],ah
  40c99a:	mov    DWORD PTR [ebx+0x3890008],ecx
  40c9a0:	test   DWORD PTR [edi],ecx
  40c9a2:	sub    eax,0x748b894d
  40c9a7:	test   esi,esi
  40c9a9:	xlat   BYTE PTR ds:[ebx]
  40c9aa:	mov    ecx,0xe8ff01db
  40c9af:	or     esp,0x45
  40c9b2:	mov    ecx,DWORD PTR [ebx+0x6c76b4fc]
  40c9b8:	jns    0xbf339632
  40c9be:	out    dx,al
  40c9bf:	fisttp QWORD PTR [eax]
  40c9c1:	call   0x20dc949
  40c9c6:	fld    QWORD PTR [eax]
  40c9c8:	mov    ds:0x122a896,eax
  40c9cd:	add    BYTE PTR [eax],al
  40c9cf:	push   eax
  40c9d0:	inc    edx
  40c9d1:	adc    BYTE PTR [eax-0x33223f8f],bh
  40c9d7:	add    DWORD PTR ds:0x7b508b50,edx
  40c9dd:	push   ecx
  40c9de:	bound  ecx,QWORD PTR [edx-0x748bfe01]
  40c9e4:	pop    esp
  40c9e5:	ret    0x56af
  40c9e8:	call   0x497a776
  40c9ed:	push   eax
  40c9ee:	pop    ebp
  40c9ef:	mov    esp,DWORD PTR [ebp-0x1a]
  40c9f2:	push   esp
  40c9f3:	push   ds
  40c9f4:	dec    ebp
  40c9f5:	mov    edi,edi
  40c9f7:	inc    ebp
  40c9f8:	retf   0xb1ca
  40c9fb:	paddsb mm7,mm7
  40c9fe:	jne    0x40c9cc
  40ca00:	or     BYTE PTR [ecx],al
  40ca02:	int3   
  40ca03:	int3   
  40ca04:	data16 add BYTE PTR [eax],bh
  40ca07:	adc    al,0x0
  40ca09:	int3   
  40ca0a:	mov    eax,DWORD PTR [eax]
  40ca0c:	dec    edx
  40ca0d:	jns    0x40ca4f
  40ca0f:	add    DWORD PTR [ebx-0x337aff34],0x5c45ff85
  40ca19:	lock cmp dl,BYTE PTR [edi+0xc7e80c]
  40ca20:	mov    eax,0x83610b93
  40ca25:	loopne 0x40c9b0
  40ca27:	mov    edi,edi
  40ca29:	pop    ebp
  40ca2a:	mov    esi,DWORD PTR [ebp-0x5f]
  40ca2d:	push   ecx
  40ca2e:	xor    ebx,ebx
  40ca30:	mov    ecx,esp
  40ca32:	dec    ebp
  40ca33:	add    BYTE PTR [esi-0x6a],ch
  40ca36:	jbe    0x40ca4a
  40ca38:	mov    DWORD PTR [eax],eax
  40ca3a:	fld    QWORD PTR [eax]
  40ca3c:	add    BYTE PTR [ebp-0x34],bl
  40ca3f:	fnstsw WORD PTR [edx]
  40ca41:	in     eax,0x3a
  40ca43:	scas   al,BYTE PTR es:[edi]
  40ca44:	pop    ebp
  40ca45:	inc    DWORD PTR [eax]
  40ca47:	int3   
  40ca48:	mov    edi,0x8aba0bb
  40ca4d:	je     0x40ca0f
  40ca4f:	mov    ecx,esp
  40ca51:	dec    esp
  40ca53:	rcl    BYTE PTR [edx+0x2c],0xa8
  40ca57:	xchg   BYTE PTR [eax],al
  40ca59:	or     al,0x0
  40ca5b:	inc    esi
  40ca5c:	push   0x85db509b
  40ca61:	loopne 0x40ca62
  40ca63:	dec    esp
  40ca65:	int3   
  40ca66:	add    BYTE PTR [eax],al
  40ca68:	out    0xbb,al
  40ca6a:	push   eax
  40ca6b:	retf   
  40ca6c:	add    al,0x15
  40ca6e:	int3   
  40ca6f:	add    BYTE PTR [esi+0x2e],bh
  40ca72:	ins    BYTE PTR es:[edi],dx
  40ca73:	dec    ebx
  40ca74:	add    bh,bh
  40ca76:	add    al,al
  40ca78:	push   esi
  40ca79:	int3   
  40ca7a:	inc    DWORD PTR [eax]
  40ca7c:	daa    
  40ca7d:	dec    esi
  40ca7e:	jb     0x40ca39
  40ca80:	mov    eax,DWORD PTR [eax]
  40ca82:	dec    esp
  40ca84:	out    dx,eax
  40ca85:	rcr    DWORD PTR [esi+0x4f],cl
  40ca88:	je     0x40ca92
  40ca8a:	add    ah,cl
  40ca8c:	test   DWORD PTR [ebx+0x8600100],ecx
  40ca92:	icebp  
  40ca93:	cmp    edx,DWORD PTR ds:0xf2158b75
  40ca99:	retf   
  40ca9a:	call   0x1401138
  40ca9f:	je     0x40ca6d
  40caa1:	add    DWORD PTR [edi],ecx
  40caa3:	add    BYTE PTR [ecx+0x22],ah
  40caa6:	add    BYTE PTR [edx+0x1e80003],ah
  40caac:	jp     0x40ca47
  40caae:	imul   ebp,DWORD PTR [ebp+ecx*2+0x0],0x8b758bdd
  40cab6:	add    al,ah
  40cab8:	adc    DWORD PTR [esi],edi
  40caba:	xlat   BYTE PTR ds:[ebx]
  40cabb:	adc    eax,DWORD PTR [eax]
  40cabd:	mov    eax,DWORD PTR [esi+0x55]
  40cac0:	add    edi,DWORD PTR [esi+0x48906fe]
  40cac6:	add    BYTE PTR [eax],al
  40cac8:	loopne 0x40cac9
  40caca:	push   0x8
  40cacc:	push   esi
  40cacd:	add    DWORD PTR [edx+0xd],ebx
  40cad0:	test   DWORD PTR [eax],eax
  40cad2:	add    DWORD PTR [ebp+0x29d72bbe],0xffffff8d
  40cad9:	jne    0x40ca64
  40cadb:	inc    DWORD PTR [ebp+0x58dde856]
  40cae1:	lods   al,BYTE PTR ds:[esi]
  40cae2:	mov    WORD PTR [edx],es
  40cae4:	mov    ecx,DWORD PTR [ecx-0x519e0000]
  40caea:	hlt    
  40caeb:	xlat   BYTE PTR ds:[ebx]
  40caec:	add    bh,bh
  40caee:	inc    ebp
  40caef:	add    BYTE PTR [eax],al
  40caf1:	push   ebp
  40caf2:	jmp    0x40cb00
  40caf4:	inc    DWORD PTR [ebp+esi*1+0x10c700e6]
  40cafb:	add    DWORD PTR [esi+0xd95303],eax
  40cb01:	add    BYTE PTR [eax],al
  40cb03:	inc    esi
  40cb04:	add    DWORD PTR [ebx-0x645bff8c],ecx
  40cb0a:	lock pop es
  40cb0c:	int3   
  40cb0d:	add    DWORD PTR [esi-0x1],edx
  40cb10:	jge    0x40cb1b
  40cb12:	bnd jbe 0x40caa0
  40cb15:	call   DWORD PTR [ebp-0x7d]
  40cb18:	ror    BYTE PTR [eax],0xcc
  40cb1b:	adc    eax,0x2393f0e
  40cb20:	test   DWORD PTR [eax],eax
  40cb22:	add    ecx,esp
  40cb24:	xchg   edx,eax
  40cb25:	scas   al,BYTE PTR es:[edi]
  40cb26:	sub    al,0x66
  40cb28:	adc    eax,0x457401
  40cb2d:	mov    eax,DWORD PTR [esp+ecx*8]
  40cb30:	adc    eax,0x830f9df5
  40cb35:	add    DWORD PTR [eax],eax
  40cb37:	int3   
  40cb38:	fwait
  40cb39:	shr    DWORD PTR cs:[edx+0x56],0x8b
  40cb3e:	jmp    0x40cb40
  40cb40:	mov    eax,DWORD PTR [ecx]
  40cb42:	add    BYTE PTR [ebp-0x1],al
  40cb45:	inc    ecx
  40cb47:	add    DWORD PTR [eax],eax
  40cb49:	int3   
  40cb4a:	mov    eax,DWORD PTR [eax]
  40cb4c:	loopne 0x40cb18
  40cb4e:	rol    BYTE PTR ds:[eax],1
  40cb51:	add    BYTE PTR [ebx+0x400ffcc],cl
  40cb57:	mov    ebx,DWORD PTR [esi+esi*1-0x59]
  40cb5b:	jo     0x40cbb3
  40cb5d:	add    BYTE PTR [ebp+0x1],dl
  40cb60:	sub    BYTE PTR [ecx+ecx*2-0x333f74a0],dh
  40cb67:	or     al,0xcc
  40cb69:	mov    DWORD PTR [ecx+0x108a9f15],ecx
  40cb6f:	sbb    edi,edi
  40cb71:	add    BYTE PTR [ecx+0x6752b1cc],cl
  40cb77:	in     al,dx
  40cb78:	add    BYTE PTR [ebx-0x743376ff],cl
  40cb7e:	push   ebp
  40cb7f:	add    BYTE PTR [esi+0x11cd0d0],al
  40cb85:	or     BYTE PTR [ecx],al
  40cb87:	(bad)  
  40cb88:	fadd   QWORD PTR [eax-0x6f]
  40cb8b:	(bad)  
  40cb8c:	add    BYTE PTR [eax],al
  40cb8e:	or     al,0x1
  40cb90:	add    bh,bh
  40cb92:	pcmpeqb mm7,QWORD PTR [edi-0x56dd05]
  40cb99:	push   0xffffff8b
  40cb9b:	pop    ebp
  40cb9c:	mov    WORD PTR [edx],fs
  40cb9e:	outs   dx,DWORD PTR ds:[esi]
  40cb9f:	das    
  40cba0:	add    BYTE PTR [eax],al
  40cba2:	test   DWORD PTR [eax],eax
  40cba4:	dec    ebp
  40cba5:	int3   
  40cba6:	push   0xffffffff
  40cba8:	out    0x35,al
  40cbaa:	xor    DWORD PTR [esp+esi*2-0x77],ecx
  40cbae:	push   esi
  40cbaf:	add    BYTE PTR [esi],cl
  40cbb1:	idiv   BYTE PTR [ecx]
  40cbb3:	jnp    0x40cbbd
  40cbb5:	fisttp QWORD PTR [ecx-0x33fffffd]
  40cbbb:	add    BYTE PTR ds:0x7f4cb5,cl
  40cbc1:	add    BYTE PTR [edi],cl
  40cbc3:	mov    ebx,DWORD PTR [ebx+ebx*8-0x74f316d4]
  40cbca:	add    BYTE PTR [ecx],al
  40cbcc:	mov    DWORD PTR [ebp+0x70b800cc],ecx
  40cbd2:	xor    eax,0xcc8900e3
  40cbd7:	pop    ebp
  40cbd8:	retf   0xe9da
  40cbdb:	sbb    ah,cl
  40cbdd:	or     al,al
  40cbdf:	int3   
  40cbe0:	int3   
  40cbe1:	add    BYTE PTR [ecx*2-0x222fdae4],al
  40cbe8:	add    BYTE PTR [eax],cl
  40cbea:	add    bh,bh
  40cbec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbed:	scas   eax,DWORD PTR es:[edi]
  40cbee:	(bad)  
  40cbf0:	je     0x40cc25
  40cbf2:	push   eax
  40cbf3:	mov    ecx,DWORD PTR [edi]
  40cbf5:	push   esi
  40cbf6:	add    BYTE PTR [eax],dl
  40cbf8:	and    al,0xb6
  40cbfa:	push   cs
  40cbfb:	imul   ecx,DWORD PTR [ebx-0x52feb300],0x2d
  40cc02:	idiv   bh
  40cc04:	add    BYTE PTR [eax],al
  40cc06:	lea    edx,[ebp+0xc]
  40cc09:	shr    bl,0x1
  40cc0c:	jp     0x40cc01
  40cc0e:	add    edx,DWORD PTR ds:0x8b0033ff
  40cc14:	popa   
  40cc15:	mov    dl,BYTE PTR [ecx+0x32]
  40cc18:	add    BYTE PTR [eax],al
  40cc1a:	add    BYTE PTR [eax+eax*1],al
  40cc1d:	add    eax,DWORD PTR [ecx]
  40cc1f:	add    dh,ch
  40cc21:	rcr    al,0x2e
  40cc24:	add    bh,bh
  40cc26:	add    BYTE PTR [eax-0x5d],dl
  40cc29:	mov    edx,0x74555151
  40cc2e:	add    BYTE PTR [ebx+0x6aeccc89],cl
  40cc34:	adc    esi,ecx
  40cc36:	xor    BYTE PTR [edi],bl
  40cc38:	add    BYTE PTR [ecx+0xa718b00],cl
  40cc3e:	sub    BYTE PTR [esp+ecx*8],0x6a
  40cc42:	or     al,0x6a
  40cc44:	test   DWORD PTR [ebx+0x246f8b00],eax
  40cc4a:	mov    ?,WORD PTR [ecx-0x1]
  40cc4d:	je     0x40ccb9
  40cc4f:	add    BYTE PTR [edi+0x48],bh
  40cc52:	data16 and BYTE PTR [esi+0x0],al
  40cc56:	add    BYTE PTR [eax],al
  40cc58:	test   DWORD PTR [eax],eax
  40cc5a:	mov    eax,DWORD PTR [eax]
  40cc5c:	or     eax,0xe8c70130
  40cc61:	add    edi,edi
  40cc63:	xor    eax,ebx
  40cc65:	addr16 cmc 
  40cc67:	les    ecx,FWORD PTR [esi+0xebccff]
  40cc6d:	stc    
  40cc6e:	pop    esi
  40cc6f:	push   0x9
  40cc71:	int3   
  40cc72:	add    edx,DWORD PTR [ebp-0x34]
  40cc75:	dec    DWORD PTR [ecx-0x51350075]
  40cc7b:	outs   dx,DWORD PTR ds:[esi]
  40cc7c:	icebp  
  40cc7d:	add    BYTE PTR [edx-0x75],ch
  40cc80:	dec    ebp
  40cc81:	scas   eax,DWORD PTR es:[edi]
  40cc82:	lock inc ebx
  40cc84:	jl     0x40cc52
  40cc86:	add    edi,edi
  40cc88:	add    ah,cl
  40cc8a:	mov    eax,DWORD PTR [eax]
  40cc8c:	mov    ebp,DWORD PTR [eax+0x1dcd196]
  40cc92:	add    al,0x0
  40cc94:	add    dl,al
  40cc96:	not    DWORD PTR [ecx-0xfff36d]
  40cc9c:	adc    eax,0x8b15008b
  40cca1:	mov    dl,0xea
  40cca3:	inc    ebp
  40cca4:	fstp   st(5)
  40cca6:	int3   
  40cca7:	mov    ecx,DWORD PTR [ebx+0xcf5866e]
  40ccad:	push   DWORD PTR [ebp-0x34]
  40ccb0:	add    ah,cl
  40ccb2:	mov    eax,DWORD PTR [esi+0x75]
  40ccb5:	inc    edx
  40ccb6:	jo     0x40cc3d
  40ccb8:	push   es
  40ccb9:	xor    eax,DWORD PTR [eax]
  40ccbb:	add    DWORD PTR [eax],0xf
  40ccbe:	retf   0xcf1b
  40ccc1:	adc    BYTE PTR [eax],al
  40ccc3:	(bad)  
  40ccc4:	dec    DWORD PTR [ebx-0x5d3fff00]
  40ccca:	adc    BYTE PTR [ebp-0xff7488],al
  40ccd0:	int3   
  40ccd1:	mov    ds:0xe83279,eax
  40ccd6:	add    BYTE PTR [ebp-0x75],bl
  40ccd9:	add    ah,cl
  40ccdb:	mov    ecx,DWORD PTR [ebx-0x23666d12]
  40cce1:	int3   
  40cce2:	adc    eax,0x99e101ff
  40cce7:	cmp    BYTE PTR [edi+0x75],0x75
  40cceb:	lea    ecx,[ecx+0x1100400]
  40ccf1:	cmp    BYTE PTR [eax],bh
  40ccf3:	lods   al,BYTE PTR ds:[esi]
  40ccf4:	mov    ah,cl
  40ccf6:	add    BYTE PTR [eax],al
  40ccf8:	inc    ebp
  40ccf9:	int3   
  40ccfa:	dec    esp
  40ccfb:	jle    0x40cd65
  40ccfd:	jne    0x40cccb
  40ccff:	ror    BYTE PTR [ebx+0x48974cc],0xe3
  40cd06:	push   ecx
  40cd07:	(bad)  
  40cd09:	fisttp QWORD PTR [eax]
  40cd0b:	add    BYTE PTR [ebx-0x3d913cb0],cl
  40cd11:	or     al,0xcc
  40cd13:	inc    ebp
  40cd14:	add    bh,bh
  40cd16:	mov    ecx,esp
  40cd18:	adc    eax,0xa565b815
  40cd1d:	int3   
  40cd1e:	int3   
  40cd1f:	or     al,0x0
  40cd21:	gs into 
  40cd23:	jno    0x40cd47
  40cd25:	add    BYTE PTR [ebx+0x50cc0000],cl
  40cd2b:	add    DWORD PTR [ebp+0x1a9f27c2],0x0
  40cd32:	add    bh,bh
  40cd34:	mov    edi,DWORD PTR [edi]
  40cd36:	jmp    0x401:0xc0459d28
  40cd3d:	add    BYTE PTR [ecx],al
  40cd3f:	dec    esp
  40cd41:	shr    BYTE PTR [ebp-0x73],0xc
  40cd45:	xor    ecx,esp
  40cd47:	mov    eax,DWORD PTR [ecx]
  40cd49:	jl     0x40ccec
  40cd4b:	jo     0x40cd0e
  40cd4d:	bswap  esp
  40cd4f:	mov    DWORD PTR [eax+0x74],edx
  40cd52:	add    BYTE PTR [ebx+ecx*4],al
  40cd55:	sub    ah,BYTE PTR [ebp-0x1d]
  40cd58:	mov    ecx,0x75898bcc
  40cd5d:	out    dx,al
  40cd5e:	in     al,0xbc
  40cd60:	inc    esi
  40cd61:	add    BYTE PTR [ebp+0x74],dl
  40cd64:	add    BYTE PTR [ecx+0x48ff0000],cl
  40cd6a:	mov    dl,0xd6
  40cd6c:	stc    
  40cd6d:	add    BYTE PTR [ebp+0x15],bl
  40cd70:	test   eax,ebx
  40cd72:	xor    al,0xcb
  40cd74:	in     al,dx
  40cd75:	add    al,0x45
  40cd77:	xor    DWORD PTR [eax+eax*1-0x39],0xffffff89
  40cd7c:	int3   
  40cd7d:	clc    
  40cd7e:	test   DWORD PTR [ecx],edi
  40cd80:	pop    esi
  40cd81:	add    BYTE PTR [ebx-0x2857ff73],cl
  40cd87:	add    cl,dh
  40cd89:	add    BYTE PTR [ebp+0x1ccc000],cl
  40cd8f:	inc    esi
  40cd90:	jmp    0x40cdb5
  40cd92:	adc    BYTE PTR [ebp+0x1501002b],bh
  40cd98:	add    eax,DWORD PTR [esi+0x22]
  40cd9b:	scas   eax,DWORD PTR es:[edi]
  40cd9c:	hlt    
  40cd9d:	or     BYTE PTR [eax+0x33],dl
  40cda0:	add    al,0xff
  40cda2:	push   0x0
  40cda4:	push   0xffffff82
  40cda6:	scas   al,BYTE PTR es:[edi]
  40cda7:	hlt    
  40cda8:	sub    ebp,eax
  40cdaa:	or     al,0x8b
  40cdac:	add    DWORD PTR [eax],edx
  40cdae:	int3   
  40cdaf:	nop
  40cdb0:	xor    al,0x85
  40cdb2:	add    al,ch
  40cdb4:	push   ebp
  40cdb5:	shr    al,0x8b
  40cdb8:	add    BYTE PTR [ecx],dh
  40cdba:	mov    dl,0xea
  40cdbc:	pop    es
  40cdbd:	mov    ebp,DWORD PTR [edx+0x46]
  40cdc0:	add    BYTE PTR [ecx-0x33967bb6],bl
  40cdc6:	xor    ecx,esp
  40cdc8:	lea    eax,[eax]
  40cdca:	mov    eax,DWORD PTR [eax]
  40cdcc:	add    DWORD PTR [eax-0x5],eax
  40cdcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdd0:	lds    ecx,FWORD PTR [ecx+0x1b000174]
  40cdd6:	fisubr DWORD PTR [ecx]
  40cdd8:	and    DWORD PTR [ecx-0x33ffff34],ecx
  40cdde:	mov    eax,DWORD PTR [ebp-0x34]
  40cde1:	xchg   DWORD PTR [ecx-0x6c],ebx
  40cde4:	test   al,0x75
  40cde6:	mov    DWORD PTR [eax],eax
  40cde8:	dec    ebp
  40cde9:	jl     0x40ce11
  40cdeb:	stos   WORD PTR es:[edi],ax
  40cded:	push   esi
  40cdee:	add    BYTE PTR [ebx],dh
  40cdf0:	dec    ebp
  40cdf1:	push   esi
  40cdf2:	lsl    eax,WORD PTR [eax]
  40cdf5:	mov    dh,0x45
  40cdf7:	ja     0x40ce4e
  40cdf9:	xor    DWORD PTR [ebx+ecx*4+0x0],0x54
  40cdfe:	(bad)  
  40cdff:	divps  xmm6,XMMWORD PTR [ebp+0x56]
  40ce03:	loopne 0x40ce04
  40ce05:	push   eax
  40ce06:	add    DWORD PTR [eax],eax
  40ce08:	add    DWORD PTR [eax],ecx
  40ce0a:	adc    eax,ebp
  40ce0c:	xor    cl,BYTE PTR [eax+eax*8]
  40ce0f:	add    ah,cl
  40ce11:	add    esi,eax
  40ce13:	mov    eax,ds:0xffeb09
  40ce18:	dec    DWORD PTR [ebx-0xff8a18]
  40ce1e:	(bad)  
  40ce1f:	pop    ebp
  40ce20:	dec    ecx
  40ce21:	add    BYTE PTR [ebx-0x7fe47500],cl
  40ce27:	xor    ebp,DWORD PTR [ebx+0x8008b00]
  40ce2d:	int3   
  40ce2e:	int3   
  40ce2f:	add    BYTE PTR [eax],al
  40ce31:	cmp    ebp,edi
  40ce33:	bswap  edx
  40ce35:	add    BYTE PTR [ebp+0x719fff00],al
  40ce3b:	ret    0xe0f9
  40ce3e:	mov    eax,DWORD PTR [eax]
  40ce40:	add    BYTE PTR [ebp-0x75],al
  40ce43:	call   0x95a48847
  40ce48:	inc    esp
  40ce49:	loopne 0x40cebf
  40ce4b:	add    BYTE PTR [ebp-0x119fb1cf],al
  40ce51:	add    BYTE PTR [eax],al
  40ce53:	add    BYTE PTR [ebp+0x0],dl
  40ce56:	jne    0x40ce9d
  40ce58:	mov    ebp,DWORD PTR [esi+0x3f]
  40ce5b:	sub    BYTE PTR [esi],bl
  40ce5d:	add    BYTE PTR [eax],al
  40ce5f:	inc    ebp
  40ce60:	add    DWORD PTR [ebx],eax
  40ce62:	mov    eax,ds:0x8b8d2e7f
  40ce67:	mov    edi,edi
  40ce69:	add    BYTE PTR [eax],al
  40ce6b:	add    al,0xcc
  40ce6d:	mov    ds:0x1356eb2,al
  40ce72:	jne    0x40cdff
  40ce74:	int3   
  40ce75:	cmp    BYTE PTR [ecx+0x8571],cl
  40ce7b:	mov    ebp,ebx
  40ce7d:	add    ah,cl
  40ce7f:	test   edi,edi
  40ce81:	jmp    0x5d:0x8be8a4fd
  40ce88:	add    BYTE PTR [ebx],bh
  40ce8a:	adc    esi,DWORD PTR [esi+0x30]
  40ce8d:	push   eax
  40ce8e:	add    al,0xff
  40ce90:	add    al,0x4
  40ce92:	push   eax
  40ce93:	pop    ebp
  40ce94:	mov    esp,edi
  40ce96:	and    esp,ecx
  40ce98:	rol    BYTE PTR [eax],cl
  40ce9a:	add    bh,al
  40ce9c:	bswap  eax
  40ce9e:	sar    BYTE PTR [esi],cl
  40cea0:	out    0xf,eax
  40cea2:	add    eax,0x0
  40cea5:	add    BYTE PTR [ebp-0x3f8b33f8],al
  40ceab:	in     eax,dx
  40ceac:	lds    edx,FWORD PTR [ebp-0x1]
  40ceaf:	int3   
  40ceb0:	add    bh,dl
  40ceb2:	(bad)  
  40ceb3:	jbe    0x40cee9
  40ceb5:	lea    edx,ds:0xcc00ff
  40cebb:	mov    eax,DWORD PTR [eax]
  40cebd:	(bad)  
  40cebe:	in     al,0x6f
  40cec0:	lods   al,BYTE PTR ds:[esi]
  40cec1:	(bad)  
  40cec2:	int3   
  40cec3:	lea    ecx,[ecx-0x5fe439fe]
  40cec9:	pop    ebp
  40ceca:	or     DWORD PTR [ebx-0x7cffba00],0x74
  40ced1:	aam    0x44
  40ced3:	sbb    BYTE PTR [ebx+0x80c00],al
  40ced9:	adc    cl,ah
  40cedb:	or     al,0x9c
  40cedd:	inc    esi
  40cede:	dec    DWORD PTR [edi]
  40cee0:	adc    DWORD PTR [ebp-0x34],0xffffffcc
  40cee4:	add    BYTE PTR [ebx],al
  40cee6:	jno    0x40ce80
  40cee8:	mov    es,WORD PTR [ebx]
  40ceea:	or     BYTE PTR [ecx],al
  40ceec:	add    BYTE PTR [ebp+0x56711a66],cl
  40cef2:	test   ebp,ebx
  40cef4:	mov    edi,edi
  40cef6:	mov    edx,DWORD PTR [esi-0x75]
  40cef9:	push   eax
  40cefa:	shr    edi,0xa6
  40cefd:	add    al,al
  40ceff:	add    BYTE PTR [eax],al
  40cf01:	ret    
  40cf02:	popa   
  40cf03:	cmp    al,0x7a
  40cf05:	cmp    edx,DWORD PTR [esi-0x75]
  40cf08:	adc    eax,0xae562675
  40cf0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf0e:	int3   
  40cf0f:	xor    eax,DWORD PTR [ebp+0x55ffcc]
  40cf15:	add    BYTE PTR [esi+0x18],cl
  40cf18:	pop    ds
  40cf19:	lods   eax,DWORD PTR ds:[esi]
  40cf1a:	add    BYTE PTR [ebx-0x7fb5ff75],cl
  40cf20:	jmp    0x113fcf2b
  40cf25:	fisttp QWORD PTR [eax]
  40cf27:	mov    ecx,esp
  40cf29:	int3   
  40cf2a:	mov    WORD PTR [eax-0x71],fs
  40cf2d:	lods   eax,DWORD PTR ds:[esi]
  40cf2e:	je     0x40ceb5
  40cf30:	add    BYTE PTR [ebp-0x53],cl
  40cf33:	sub    al,0xd3
  40cf35:	clc    
  40cf36:	int3   
  40cf37:	add    BYTE PTR [ebp+0x10045c0],al
  40cf3d:	lea    ecx,[ebp-0x47]
  40cf40:	jg     0x40cf5c
  40cf42:	mov    edi,edi
  40cf44:	int3   
  40cf45:	add    BYTE PTR [esi],al
  40cf47:	add    eax,DWORD PTR [esi+0x2b]
  40cf4a:	loopne 0x40cf4c
  40cf4c:	or     DWORD PTR [eax],0x0
  40cf4f:	add    bh,al
  40cf51:	int3   
  40cf52:	or     dh,bh
  40cf54:	(bad)  
  40cf55:	fadd   DWORD PTR [eax]
  40cf57:	call   0xbc55b48
  40cf5c:	mov    ecx,0x338bb9
  40cf61:	mov    DWORD PTR [ecx],0x94750800
  40cf67:	dec    edx
  40cf68:	mov    cl,0x3b
  40cf6a:	mov    ebp,ebx
  40cf6c:	or     BYTE PTR [ecx],al
  40cf6e:	dec    edx
  40cf6f:	int3   
  40cf70:	push   0x8574ec5a
  40cf75:	pop    ebp
  40cf76:	je     0x40cf78
  40cf78:	add    BYTE PTR [eax],al
  40cf7a:	cmp    eax,0xecaceaca
  40cf7f:	add    BYTE PTR [ebx-0x6d2080bb],cl
  40cf85:	pop    ecx
  40cf86:	int3   
  40cf87:	mov    eax,DWORD PTR [eax]
  40cf89:	int3   
  40cf8a:	dec    DWORD PTR [ebx+0x38d00056]
  40cf90:	pop    edi
  40cf91:	sti    
  40cf92:	mov    esp,eax
  40cf94:	mov    eax,DWORD PTR [eax]
  40cf96:	mov    ds:0x46a705,eax
  40cf9b:	add    BYTE PTR [eax],al
  40cf9d:	add    DWORD PTR [eax],eax
  40cf9f:	mov    ecx,esp
  40cfa1:	jmp    FWORD PTR [ebp+0x74a793a1]
  40cfa7:	add    al,ah
  40cfa9:	(bad)  
  40cfaa:	fst    DWORD PTR [ebp-0x66]
  40cfad:	test   DWORD PTR [eax],0xc0ff0085
  40cfb3:	add    BYTE PTR [ebp+0x0],al
  40cfb6:	in     al,0x7d
  40cfb8:	and    DWORD PTR [esi+0xccc78b],0xffffffd9
  40cfbf:	in     eax,0x71
  40cfc1:	add    BYTE PTR [di+0x0],cl
  40cfc6:	mov    edx,DWORD PTR [ebp+0x5d]
  40cfc9:	add    ah,ch
  40cfcb:	fidivr WORD PTR [esi-0x72fc3f56]
  40cfd1:	int3   
  40cfd2:	push   ds
  40cfd3:	cmc    
  40cfd4:	push   edi
  40cfd5:	pop    ebx
  40cfd6:	jmp    FWORD PTR [edx-0x73]
  40cfd9:	inc    ebp
  40cfda:	mov    eax,edi
  40cfdc:	add    BYTE PTR [eax],al
  40cfde:	and    BYTE PTR [ecx+0x33723],cl
  40cfe4:	(bad)  
  40cfe5:	call   0x7fd9c1e5
  40cfea:	je     0x40cf77
  40cfec:	add    DWORD PTR [ecx],eax
  40cfee:	add    DWORD PTR [esi+0x0],0x8
  40cff2:	sbb    al,0x8c
  40cff4:	or     cl,BYTE PTR [ebp+eax*2+0x74]
  40cff8:	or     DWORD PTR [ebx+0x46d626b9],0xffffffff
  40cfff:	add    eax,DWORD PTR [eax]
  40d001:	add    al,0xcc
  40d003:	int3   
  40d004:	or     al,0x3
  40d006:	mov    eax,0xb9d28b
  40d00b:	add    BYTE PTR [ecx+0x3b92538b],cl
  40d011:	inc    ecx
  40d012:	rol    BYTE PTR [ebx-0x7cff1400],0x83
  40d019:	test   DWORD PTR [esp+ebx*4+0x18d0177],edx
  40d020:	add    eax,DWORD PTR [eax]
  40d022:	aad    0x8b
  40d024:	sbb    DWORD PTR [ecx+0xc00ccff],0x33
  40d02b:	mov    edx,DWORD PTR ds:0xa03545
  40d031:	call   0x7e0d:0xe0cc008d
  40d038:	mov    bl,BYTE PTR [edi+0x0]
  40d03b:	mov    eax,DWORD PTR [eax*4-0x74ccff75]
  40d042:	call   0x85a04f30
  40d047:	mov    DWORD PTR [eax],eax
  40d049:	inc    esi
  40d04a:	jns    0x40d03c
  40d04c:	jmp    DWORD PTR [esp+esi*2+0x0]
  40d050:	jmp    0x40d061
  40d052:	lea    eax,[eax]
  40d054:	int3   
  40d055:	push   ecx
  40d057:	mov    eax,0x15c06853
  40d05c:	push   eax
  40d05d:	push   ebp
  40d05e:	clc    
  40d05f:	xor    eax,0x4c7a9a9
  40d064:	add    al,al
  40d066:	test   DWORD PTR [ebp+0x17efc0dd],ecx
  40d06c:	dec    esi
  40d06d:	or     al,0xff
  40d06f:	mov    eax,DWORD PTR [eax]
  40d071:	mov    edi,ecx
  40d073:	push   eax
  40d074:	jg     0x40cffa
  40d076:	or     DWORD PTR [ebx-0x7cfe7a34],0xffffff8b
  40d07d:	mov    ebp,DWORD PTR [esi+0x8393ebd]
  40d083:	add    DWORD PTR [ebp+0x0],0xfffffffc
  40d087:	add    bh,BYTE PTR [esi-0x74feffeb]
  40d08d:	add    BYTE PTR [ebp-0x1],dl
  40d090:	loopne 0x40d106
  40d092:	mov    ?,WORD PTR [ebp-0x14]
  40d095:	jge    0x40d09f
  40d097:	int3   
  40d098:	push   ebp
  40d099:	fnsave [ecx]
  40d09b:	ja     0x40d080
  40d09d:	fxch   st(4)
  40d09f:	add    BYTE PTR [ebp-0x7cf70075],cl
  40d0a5:	call   FWORD PTR [edx]
  40d0a7:	arpl   WORD PTR [esi+edx*2],dx
  40d0aa:	dec    esp
  40d0ac:	jne    0x40d104
  40d0ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0af:	repnz rcl dl,cl
  40d0b2:	or     DWORD PTR [eax*2-0x76fffceb],0xc
  40d0ba:	ins    DWORD PTR es:[edi],dx
  40d0bb:	adc    eax,0xff858371
  40d0c0:	inc    DWORD PTR [eax]
  40d0c2:	repz (bad) 
  40d0c4:	in     eax,0x5c
  40d0c6:	adc    DWORD PTR [eax],0xffffff8b
  40d0c9:	add    DWORD PTR [ebx+0x2eccff01],eax
  40d0cf:	cmp    DWORD PTR [edx+0xffff88],ebx
  40d0d5:	int3   
  40d0d6:	jle    0x40d0f4
  40d0d8:	xchg   edi,eax
  40d0d9:	mov    ds:0x6a00004d,eax
  40d0de:	test   esp,ecx
  40d0e0:	add    ch,bl
  40d0e2:	mov    ds:0xd38f09,eax
  40d0e7:	or     BYTE PTR [ebp+0x0],dh
  40d0ea:	push   ebp
  40d0eb:	clc    
  40d0ec:	loopne 0x40d11e
  40d0ee:	xor    ecx,esp
  40d0f0:	adc    eax,0xe8ff8bcc
  40d0f5:	or     al,0x7e
  40d0f7:	sbb    DWORD PTR ds:0xcc0000d8,ecx
  40d0fd:	mov    edx,DWORD PTR [ebp-0x33ba04bc]
  40d103:	mov    eax,DWORD PTR [ebp+0x74ddc00c]
  40d109:	add    BYTE PTR [eax+0x4],cl
  40d10c:	into   
  40d10d:	cmc    
  40d10e:	invd   
  40d110:	add    BYTE PTR [eax],al
  40d112:	pop    ds
  40d113:	fimul  WORD PTR [edx+eiz*1-0x33b27440]
  40d11a:	(bad)  
  40d11b:	jmp    0x40d11e
  40d11d:	int3   
  40d11e:	sub    al,0x39
  40d120:	mov    bl,0x3f
  40d122:	lea    eax,[ebx+0x76f8008b]
  40d128:	mov    dl,0x84
  40d12a:	lea    esi,[ebp+ebx*8-0x7d]
  40d12e:	or     DWORD PTR [eax],0x75
  40d131:	call   0x19ab4cef
  40d136:	inc    ebp
  40d137:	push   0xffffff8b
  40d139:	add    BYTE PTR [esi-0x29],dl
  40d13c:	jo     0x40d104
  40d13e:	inc    DWORD PTR [eax]
  40d140:	mov    ecx,esp
  40d142:	or     al,0x83
  40d144:	(bad)  
  40d145:	call   DWORD PTR [edx]
  40d147:	sbb    BYTE PTR [ecx-0x74ccba65],al
  40d14d:	pop    ebp
  40d14e:	loope  0x40d157
  40d150:	ror    BYTE PTR [edi],cl
  40d152:	push   ebp
  40d153:	sidtd  [eax]
  40d156:	mov    ecx,DWORD PTR [ebx-0x6ae79600]
  40d15c:	shr    DWORD PTR [esp+ecx*8],cl
  40d15f:	mov    DWORD PTR [ecx+0x4cf2d800],ecx
  40d165:	mov    eax,0x898b5500
  40d16a:	mov    eax,DWORD PTR [eax]
  40d16c:	add    bh,bh
  40d16e:	add    edx,DWORD PTR [ebp-0x33b9c04b]
  40d174:	mov    eax,DWORD PTR [ebx+0x33f62816]
  40d17a:	mov    DWORD PTR [eax],eax
  40d17c:	mov    ecx,esp
  40d17e:	inc    DWORD PTR [eax]
  40d180:	adc    eax,0xf02b40cc
  40d185:	pop    ecx
  40d186:	add    DWORD PTR [ebp-0x75],eax
  40d189:	pop    ebp
  40d18a:	lea    edi,[edx-0x76f014c8]
  40d190:	add    BYTE PTR [edi],cl
  40d192:	add    BYTE PTR [ebx-0x5b0c0100],al
  40d198:	cmp    eax,DWORD PTR [edx+0x15]
  40d19b:	add    BYTE PTR [ebx-0x5536e701],cl
  40d1a1:	mov    eax,ds:0x104501
  40d1a6:	int3   
  40d1a7:	add    al,0xcc
  40d1a9:	add    bl,al
  40d1ab:	out    dx,al
  40d1ac:	ret    0x3c2b
  40d1af:	add    edi,edi
  40d1b1:	dec    DWORD PTR [eax]
  40d1b3:	outs   dx,BYTE PTR ds:[esi]
  40d1b4:	mov    bl,0xef
  40d1b6:	jmp    0x74cbd244
  40d1bb:	je     0x40d212
  40d1bd:	test   DWORD PTR [ebp+0x47083ea8],ecx
  40d1c3:	or     BYTE PTR [esp+ecx*8],cl
  40d1c6:	mov    DWORD PTR [eax+0x7535b72f],ecx
  40d1cc:	mov    DWORD PTR [ecx+0x100],ecx
  40d1d2:	mov    DWORD PTR [eax+eiz*4-0x1a],esp
  40d1d6:	cmp    eax,0x8898bcc
  40d1db:	int3   
  40d1dc:	in     eax,dx
  40d1dd:	mov    eax,ds:0xddcccc56
  40d1e2:	dec    ebp
  40d1e3:	dec    ebp
  40d1e4:	(bad)  
  40d1e5:	int3   
  40d1e6:	int3   
  40d1e7:	sbb    ebp,edx
  40d1e9:	xchg   ebp,eax
  40d1ea:	adc    BYTE PTR [ebx-0x71ff33f8],al
  40d1f0:	imul   esi,ecx,0x8bccf6
  40d1f6:	rol    al,0x15
  40d1f9:	add    BYTE PTR [ebp+0x5ee68ef5],cl
  40d1ff:	add    bh,bh
  40d201:	loopne 0x40d18e
  40d203:	or     BYTE PTR [ebx],ah
  40d205:	mov    ah,0x13
  40d207:	fisttp QWORD PTR [ebx+0x5d8bcc00]
  40d20d:	add    eax,eax
  40d20f:	js     0x40d196
  40d211:	cmp    al,0x67
  40d213:	add    eax,eax
  40d215:	mov    eax,DWORD PTR [eax]
  40d217:	xchg   BYTE PTR [edi-0x76baefaa],dh
  40d21d:	dec    DWORD PTR [eax]
  40d21f:	mov    ebp,eax
  40d221:	inc    ebp
  40d222:	inc    ebp
  40d223:	fnsavew [ebx-0x7400ea7b]
  40d22a:	mov    esp,DWORD PTR [eax-0x33]
  40d22d:	mov    ds:0xcc00ccaf,eax
  40d232:	call   0x5e2146ab
  40d237:	push   cs
  40d238:	ins    DWORD PTR es:[edi],dx
  40d239:	sub    al,0xc7
  40d23b:	int3   
  40d23c:	add    BYTE PTR [ebx-0x8c369f8],al
  40d242:	pop    ds
  40d243:	add    BYTE PTR [eax],al
  40d245:	mov    eax,DWORD PTR [ebx+0x6a85000f]
  40d24b:	mov    ebp,0xffbd319e
  40d250:	int3   
  40d251:	mov    eax,DWORD PTR [eax]
  40d253:	jmp    0x40d279
  40d255:	jo     0x40d292
  40d257:	push   0x0
  40d259:	or     BYTE PTR [eax],al
  40d25b:	(bad)  
  40d25c:	inc    DWORD PTR [ecx]
  40d25e:	mov    DWORD PTR [ebp-0x1e],esp
  40d261:	clc    
  40d262:	adc    cl,BYTE PTR [ebx+0x8008300]
  40d268:	jmp    0x3ff6b8
  40d26d:	add    BYTE PTR [eax],al
  40d26f:	mov    ecx,esp
  40d271:	add    al,ah
  40d273:	push   esi
  40d274:	repz (bad) 
  40d276:	cmp    BYTE PTR [ebx+0x66cc8bc0],cl
  40d27c:	jmp    0xeb85:0xffcc3295
  40d283:	mov    ecx,esp
  40d285:	adc    BYTE PTR [ecx],al
  40d287:	xchg   BYTE PTR [edx],bl
  40d289:	neg    DWORD PTR [ebp+0x0]
  40d28c:	add    al,0x8b
  40d28e:	add    ecx,0xffffffb2
  40d291:	fcom   DWORD PTR [esi]
  40d293:	add    ah,cl
  40d295:	inc    esi
  40d296:	test   DWORD PTR [ecx],eax
  40d298:	call   DWORD PTR ds:0xcee5a7c0
  40d29e:	mov    al,0x0
  40d2a0:	int3   
  40d2a1:	add    bh,bh
  40d2a3:	sub    esp,DWORD PTR [ebp+0x100b784]
  40d2a9:	dec    DWORD PTR [ebx+esi*1]
  40d2ac:	test   DWORD PTR [eax],eax
  40d2ae:	adc    BYTE PTR [edx],bh
  40d2b0:	add    eax,0x8b65e0
  40d2b5:	push   eax
  40d2b6:	inc    ebp
  40d2b7:	popf   
  40d2b8:	retf   
  40d2b9:	mov    edi,0x8b018518
  40d2be:	add    BYTE PTR [eax*2-0x4a9fff34],cl
  40d2c5:	adc    dh,BYTE PTR [ebx+ebp*8-0x23]
  40d2c9:	add    BYTE PTR [eax],dl
  40d2cb:	mov    ds:0x82841d4,al
  40d2d0:	mov    ecx,DWORD PTR [ebx-0x72ba7601]
  40d2d6:	xor    DWORD PTR [esp+edi*4-0xd],0x10
  40d2db:	jne    0x40d2ba
  40d2dd:	add    bh,bh
  40d2df:	fs dec edx
  40d2e1:	adc    eax,0xc0008b1f
  40d2e6:	mov    ecx,DWORD PTR [ebp-0x34]
  40d2e9:	jmp    0x40d2eb
  40d2eb:	hlt    
  40d2ec:	sub    eax,0x8b464b84
  40d2f1:	je     0x40d2f3
  40d2f3:	sub    BYTE PTR [edx+ecx*2],ch
  40d2f6:	mov    eax,DWORD PTR gs:[eax]
  40d2f9:	add    BYTE PTR [eax],al
  40d2fb:	inc    esi
  40d2fc:	call   0x6f1d701
  40d301:	pop    esp
  40d302:	and    ecx,DWORD PTR [eax]
  40d304:	add    ah,cl
  40d306:	rcl    bl,0xda
  40d309:	test   DWORD PTR [ebx],ecx
  40d30b:	fisttp QWORD PTR [eax+eax*1]
  40d30e:	add    BYTE PTR [ebx-0x11747a39],cl
  40d314:	out    0xa6,eax
  40d316:	add    BYTE PTR [eax],cl
  40d318:	inc    ebp
  40d319:	jnp    0x384e657c
  40d31f:	add    al,0x3
  40d321:	mov    eax,DWORD PTR [ebp-0x75]
  40d324:	int3   
  40d325:	add    BYTE PTR [ecx+0x5b2d674f],cl
  40d32b:	inc    DWORD PTR [eax]
  40d32d:	int3   
  40d32e:	add    BYTE PTR [ecx+0x24],al
  40d331:	je     0x40d363
  40d333:	dec    esp
  40d335:	int3   
  40d336:	int3   
  40d337:	add    ah,cl
  40d339:	add    bh,bh
  40d33b:	stos   DWORD PTR es:[edi],eax
  40d33c:	xchg   ecx,eax
  40d33d:	call   0x4b00:0x5d00ff18
  40d344:	je     0x40d32d
  40d346:	push   ecx
  40d347:	je     0x40d349
  40d349:	add    BYTE PTR [ebp+0xccccc00],al
  40d34f:	pop    esi
  40d350:	or     cl,BYTE PTR ds:0x74740048
  40d356:	(bad)  
  40d357:	fisubr DWORD PTR [edi-0x13]
  40d35a:	sbb    DWORD PTR [ecx],eax
  40d35c:	int3   
  40d35d:	int3   
  40d35e:	add    esp,ecx
  40d360:	inc    ebp
  40d361:	int3   
  40d362:	mov    DWORD PTR ds:0x4d0b56eb,edx
  40d368:	(bad)  
  40d369:	mov    eax,DWORD PTR [ecx]
  40d36b:	call   0x38b:0xeb0cb346
  40d372:	inc    DWORD PTR [eax]
  40d374:	mov    ecx,DWORD PTR [eax]
  40d376:	add    BYTE PTR [ebx],al
  40d378:	loop   0x40d391
  40d37a:	and    bh,bh
  40d37c:	(bad)  
  40d37e:	add    dl,al
  40d380:	leave  
  40d381:	cmp    esp,DWORD PTR [esp+esi*2-0x7417fe77]
  40d388:	mov    esi,DWORD PTR [ebx]
  40d38a:	call   0xf4568e6e
  40d38f:	add    DWORD PTR [ebx-0x74a93400],ecx
  40d395:	sbb    ah,bh
  40d397:	inc    DWORD PTR [ecx]
  40d399:	adc    BYTE PTR [eax-0x34],dl
  40d39c:	add    DWORD PTR [ebx],esi
  40d39e:	inc    ebp
  40d39f:	adc    al,0xc1
  40d3a1:	sub    eax,0x85558d00
  40d3a6:	inc    esi
  40d3a7:	push   0xf5f4ae
  40d3ac:	mov    eax,DWORD PTR [eax]
  40d3ae:	add    BYTE PTR [eax+eax*1+0x10],dh
  40d3b2:	mov    DWORD PTR [eax-0x7cb9c741],esi
  40d3b8:	je     0x40d3ba
  40d3ba:	add    al,0x76
  40d3bc:	(bad)  
  40d3bd:	out    dx,eax
  40d3be:	imul   eax,DWORD PTR [ecx],0x0
  40d3c1:	int3   
  40d3c2:	add    ah,cl
  40d3c4:	inc    DWORD PTR [eax]
  40d3c6:	add    BYTE PTR [edx-0x6d],al
  40d3c9:	pop    esi
  40d3ca:	mov    dl,0xcc
  40d3cc:	mov    ecx,esp
  40d3ce:	add    bl,ah
  40d3d0:	sahf   
  40d3d1:	out    dx,al
  40d3d2:	retf   0x748b
  40d3d5:	pop    ebp
  40d3d6:	add    DWORD PTR [ebx-0x7fea0075],ecx
  40d3dc:	mov    bl,0xa4
  40d3de:	add    BYTE PTR gs:[eax],al
  40d3e1:	jmp    0x40d3ef
  40d3e3:	xchg   edi,eax
  40d3e4:	ss pushf 
  40d3e6:	popa   
  40d3e7:	(bad)  
  40d3e8:	int3   
  40d3e9:	mov    ecx,DWORD PTR [ebx-0x7c7601]
  40d3ef:	les    eax,FWORD PTR ds:0x5001c0
  40d3f5:	add    BYTE PTR [ebp-0x3dd005a9],al
  40d3fb:	add    ah,cl
  40d3fd:	call   0xcd0cd4c2
  40d402:	test   DWORD PTR [eax-0x33cab7e1],esi
  40d408:	lea    eax,[ebp+0x0]
  40d40b:	cmp    esp,ebx
  40d40d:	add    eax,0xeb7434
  40d412:	push   eax
  40d413:	inc    DWORD PTR [ebp-0x1]
  40d416:	mov    eax,DWORD PTR [eax]
  40d418:	in     eax,0x8f
  40d41a:	bound  esi,QWORD PTR [ebp-0x1]
  40d41d:	add    BYTE PTR [ebp-0x72],dl
  40d420:	mov    bl,BYTE PTR [edi+0x133cc58]
  40d426:	add    ah,ch
  40d428:	add    bh,bh
  40d42a:	add    edi,esi
  40d42c:	imul   BYTE PTR [esi]
  40d42e:	mov    ebp,0x748b8b00
  40d433:	test   DWORD PTR [edx+0x313e],edi
  40d439:	add    BYTE PTR [eax],al
  40d43b:	int3   
  40d43c:	mov    edx,DWORD PTR [esi-0x75]
  40d43f:	mov    al,ds:0x3394a217
  40d444:	mov    DWORD PTR [eax],eax
  40d446:	dec    DWORD PTR [edx]
  40d448:	cmc    
  40d449:	not    DWORD PTR [ecx-0x337614ba]
  40d44f:	rol    BYTE PTR [esi+0x4d],0xff
  40d453:	xchg   esp,eax
  40d454:	sub    DWORD PTR ds:0x85cc00df,0xffffffff
  40d45b:	pop    edi
  40d45c:	push   0x8b89a510
  40d461:	dec    DWORD PTR [ebp-0x74003301]
  40d467:	inc    edx
  40d468:	retf   
  40d469:	sbb    eax,0x1ff750d
  40d46e:	add    bl,al
  40d470:	aaa    
  40d471:	inc    esp
  40d472:	scas   eax,DWORD PTR es:[edi]
  40d473:	xlat   BYTE PTR ds:[ebx]
  40d474:	push   DWORD PTR [ebx]
  40d476:	ud0    ebp,DWORD PTR [ecx]
  40d479:	popa   
  40d47a:	and    esi,esi
  40d47c:	add    ah,cl
  40d47e:	add    BYTE PTR [ebp+eax*4-0x75],dh
  40d482:	jne    0x40d485
  40d484:	sub    DWORD PTR [eax+0x2e],0x5ded
  40d48b:	push   eax
  40d48c:	jo     0x40d508
  40d48e:	(bad)  
  40d48f:	in     al,dx
  40d490:	add    al,al
  40d492:	or     DWORD PTR [ebx-0xf7ffff],0x1d
  40d499:	scas   al,BYTE PTR es:[edi]
  40d49a:	add    eax,DWORD PTR [eax+0x1]
  40d49d:	add    BYTE PTR [ebp+0x45],dh
  40d4a0:	pop    es
  40d4a1:	js     0x40d521
  40d4a3:	push   esp
  40d4a4:	mov    eax,DWORD PTR [ebx-0x748b7500]
  40d4aa:	(bad)  
  40d4ab:	inc    ecx
  40d4ad:	or     al,ch
  40d4af:	jg     0x40d43c
  40d4b1:	inc    ebp
  40d4b2:	mov    eax,DWORD PTR [eax]
  40d4b4:	adc    DWORD PTR [ebx-0x26],ecx
  40d4b7:	cmp    al,0x46
  40d4b9:	add    BYTE PTR [ecx],al
  40d4bb:	(bad)  
  40d4bc:	int3   
  40d4bd:	jmp    0x40d442
  40d4bf:	je     0x40d4f3
  40d4c1:	out    dx,al
  40d4c2:	in     al,dx
  40d4c3:	into   
  40d4c4:	push   ebp
  40d4c5:	call   0xfb4e3f96
  40d4ca:	mov    sp,0xff00
  40d4ce:	int3   
  40d4cf:	(bad)  
  40d4d0:	inc    DWORD PTR [eax]
  40d4d2:	add    BYTE PTR [ebx-0x7fd56f6a],cl
  40d4d8:	jmp    0x40d4da
  40d4da:	int3   
  40d4db:	or     BYTE PTR [edx-0x52],ah
  40d4de:	add    eax,edx
  40d4e0:	mov    DWORD PTR [eax],eax
  40d4e2:	dec    DWORD PTR [ebp+0x5d010004]
  40d4e8:	std    
  40d4e9:	cmp    BYTE PTR [ebx-0x5c],0x8b
  40d4ed:	int3   
  40d4ee:	rol    BYTE PTR [eax],0xe9
  40d4f1:	mov    dh,0xc
  40d4f3:	push   ss
  40d4f4:	add    BYTE PTR [eax],al
  40d4f6:	add    BYTE PTR ds:0x1500eb8b,dl
  40d4fc:	xchg   ecx,eax
  40d4fd:	mov    al,0xb7
  40d4ff:	mov    esp,0x83cc00
  40d504:	js     0x40d4f0
  40d506:	jmp    0x8548d5ac
  40d50b:	push   0xffffff8b
  40d50d:	mov    eax,DWORD PTR [eax]
  40d50f:	push   ebp
  40d510:	dec    eax
  40d511:	jg     0x40d4d6
  40d513:	into   
  40d514:	add    eax,DWORD PTR [eax]
  40d516:	add    BYTE PTR [ebp+0x25],dl
  40d519:	mov    edi,ebp
  40d51b:	mov    es,WORD PTR [eax]
  40d51d:	add    BYTE PTR [eax],al
  40d51f:	mov    DWORD PTR [esi+0x45],edx
  40d522:	inc    DWORD PTR [eax]
  40d524:	sbb    BYTE PTR [esi+esi*1-0x73],ah
  40d528:	mov    eax,DWORD PTR [eax]
  40d52a:	or     al,0x8b
  40d52c:	mov    al,ds:0x89a1d2a0
  40d531:	add    DWORD PTR [eax],eax
  40d533:	invd   
  40d535:	mov    eax,DWORD PTR [ebp+0x6616066a]
  40d53b:	sub    BYTE PTR [ebp-0xdb93334],cl
  40d541:	loope  0x40d57a
  40d543:	outs   dx,BYTE PTR ds:[esi]
  40d544:	add    BYTE PTR [eax],al
  40d546:	add    BYTE PTR [eax*4-0x7aff0000],al
  40d54d:	test   al,0x69
  40d54f:	(bad)  
  40d550:	call   FWORD PTR [ebp+0x0]
  40d553:	int3   
  40d554:	xchg   esp,eax
  40d556:	push   ss
  40d557:	dec    esi
  40d558:	add    BYTE PTR [ecx],al
  40d55a:	add    DWORD PTR [eax+eax*1-0x1],esi
  40d55e:	je     0x40d52c
  40d560:	push   ss
  40d561:	mov    DWORD PTR [ebp+0x1c],ecx
  40d564:	int3   
  40d565:	add    BYTE PTR [ebx-0x5fd02f77],cl
  40d56b:	mov    bl,0x8b
  40d56d:	add    BYTE PTR [eax],dl
  40d56f:	add    ah,cl
  40d571:	add    al,0x8b
  40d573:	add    BYTE PTR [ecx-0x747c03d0],bh
  40d579:	mov    DWORD PTR [eax],eax
  40d57b:	add    BYTE PTR [ecx+0xe2ae7f],ch
  40d581:	add    DWORD PTR [eax],eax
  40d583:	pop    ebp
  40d584:	add    BYTE PTR [ebx],al
  40d586:	mov    DWORD PTR [eax],eax
  40d588:	mov    bl,0xde
  40d58a:	mov    ebx,0xc004ffa9
  40d58f:	int3   
  40d590:	sub    ebx,esp
  40d592:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d593:	test   DWORD PTR es:[eax],eax
  40d596:	mov    edx,DWORD PTR [ebp+0xc]
  40d599:	fld    QWORD PTR [ebp-0x76f84b00]
  40d59f:	push   edx
  40d5a0:	int3   
  40d5a1:	or     BYTE PTR [ebp-0x1],al
  40d5a4:	inc    ecx
  40d5a5:	jp     0x40d59f
  40d5a7:	mov    ch,0xf
  40d5a9:	add    bl,ch
  40d5ab:	mov    eax,DWORD PTR [ebx]
  40d5ad:	in     al,dx
  40d5ae:	loopne 0x40d624
  40d5b0:	fidivr WORD PTR [edx+edi*1+0x7a]
  40d5b4:	add    BYTE PTR [eax],al
  40d5b6:	add    BYTE PTR [ebp-0x25],dl
  40d5b9:	mov    dl,0x35
  40d5bb:	nop
  40d5bc:	inc    ebp
  40d5bd:	add    BYTE PTR [ebx-0x7433007d],al
  40d5c3:	or     BYTE PTR [esi],bh
  40d5c5:	test   eax,0x74537f
  40d5ca:	adc    BYTE PTR [ebp+0x7],bl
  40d5cd:	xor    ebp,ecx
  40d5cf:	nop
  40d5d0:	int3   
  40d5d1:	add    bh,bh
  40d5d3:	mov    eax,DWORD PTR [eax]
  40d5d5:	lea    eax,[eax]
  40d5d7:	sbb    DWORD PTR [ecx-0x5c],0x7e
  40d5db:	icebp  
  40d5dc:	add    bh,bh
  40d5de:	add    DWORD PTR [ebp+0x600e0f8d],ecx
  40d5e4:	dec    DWORD PTR [ebx-0x72747cbb]
  40d5ea:	jne    0x40d5ec
  40d5ec:	push   esi
  40d5ed:	ja     0x40d575
  40d5ef:	lock (bad) 
  40d5f1:	inc    DWORD PTR [ebx+0x6f51418b]
  40d5f7:	jmp    0x8:0x748b0056
  40d5fe:	push   esi
  40d5ff:	mov    edx,DWORD PTR [ebx+0x56]
  40d602:	sub    ebp,0xc
  40d605:	inc    DWORD PTR [eax]
  40d607:	or     al,0x3f
  40d609:	mov    ebx,0xcc0c1a
  40d60f:	mov    eax,DWORD PTR [ecx]
  40d611:	mov    DWORD PTR [eax],eax
  40d613:	push   eax
  40d614:	pusha  
  40d615:	cwde   
  40d616:	out    dx,al
  40d617:	add    BYTE PTR gs:[ebp-0x1],bl
  40d61b:	test   DWORD PTR [esi+0x7cef18],edi
  40d621:	push   DWORD PTR [eax+eax*1+0x0]
  40d625:	test   esp,ecx
  40d627:	fnsave ds:0xcccc044e
  40d62d:	add    DWORD PTR [ebp+ecx*4-0x3],esi
  40d631:	pop    edx
  40d632:	(bad)  
  40d633:	push   eax
  40d634:	add    BYTE PTR [eax],al
  40d636:	mov    eax,DWORD PTR [eax]
  40d638:	add    BYTE PTR [eax],al
  40d63a:	add    BYTE PTR [ebx-0x53124b7c],cl
  40d640:	jmp    0x40d642
  40d642:	int3   
  40d643:	dec    ebp
  40d644:	lahf   
  40d645:	sub    al,0xc5
  40d647:	pop    ecx
  40d648:	add    DWORD PTR [ebx+eax*1],eax
  40d64b:	or     al,0x4
  40d64d:	mov    eax,DWORD PTR [ebp+0x50]
  40d650:	jmp    0x1045:0x84c9e02
  40d657:	add    esp,edx
  40d659:	dec    ebp
  40d65a:	mov    WORD PTR [esi-0x34],?
  40d65d:	int3   
  40d65e:	or     al,0xff
  40d660:	or     al,0xff
  40d662:	add    bh,bh
  40d664:	sbb    al,BYTE PTR [eax]
  40d666:	mov    esi,0x82
  40d66b:	mov    eax,DWORD PTR [esi+0xf02033]
  40d671:	push   ebp
  40d672:	add    BYTE PTR [ecx],al
  40d674:	jne    0x40d677
  40d676:	inc    DWORD PTR [ebp-0x63]
  40d679:	lods   eax,DWORD PTR ds:[esi]
  40d67a:	and    BYTE PTR [ebx-0x75],al
  40d67d:	add    BYTE PTR [eax],cl
  40d67f:	add    BYTE PTR [edi-0x67],dh
  40d682:	lock test BYTE PTR [eax],0xff
  40d686:	add    al,ch
  40d688:	add    DWORD PTR [eax],ecx
  40d68a:	mov    edi,edi
  40d68c:	pop    ebp
  40d68d:	jbe    0x40d68e
  40d68f:	mov    ch,0x55
  40d691:	pcmpeqw mm1,QWORD PTR [ecx+0x123ef386]
  40d698:	mov    eax,DWORD PTR [ebx+0x33c0ff8b]
  40d69e:	mov    ecx,DWORD PTR [eax]
  40d6a0:	add    ah,BYTE PTR [ebp-0x3f]
  40d6a3:	add    DWORD PTR [bx+di],eax
  40d6a6:	add    ah,cl
  40d6a8:	xchg   DWORD PTR [esi-0x76ff4bee],ebx
  40d6ae:	mov    eax,DWORD PTR [ecx]
  40d6b0:	mov    ebx,DWORD PTR [ebp-0x75]
  40d6b3:	add    BYTE PTR [ebp-0x8dfd95],bh
  40d6b9:	int3   
  40d6ba:	mov    ecx,DWORD PTR [ebx+0x1700cb73]
  40d6c0:	jnp    0x95d792
  40d6c6:	add    al,0x0
  40d6c8:	jp     0x40d676
  40d6ca:	loope  0x40d6e6
  40d6cc:	mov    ecx,DWORD PTR [ebx+0x4be98bff]
  40d6d2:	inc    ecx
  40d6d3:	rcl    BYTE PTR ds:0x56ff0010,1
  40d6d9:	int3   
  40d6da:	inc    DWORD PTR [eax]
  40d6dc:	cmp    ecx,ebx
  40d6de:	cld    
  40d6df:	pop    ebx
  40d6e0:	add    BYTE PTR [eax],al
  40d6e2:	add    BYTE PTR [ebx+0x2bfdcba0],cl
  40d6e8:	add    al,0x10
  40d6ea:	inc    esi
  40d6eb:	push   esi
  40d6ec:	je     0x40d6ee
  40d6ee:	inc    esi
  40d6ef:	mov    ebx,DWORD PTR [ebp-0x38]
  40d6f2:	inc    esi
  40d6f3:	lahf   
  40d6f4:	or     ch,bl
  40d6f6:	add    al,0xe8
  40d6f8:	ss cmp al,0x62
  40d6fb:	jle    0x40d6fe
  40d6fd:	int3   
  40d6fe:	dec    DWORD PTR [ecx+0x5dcc8b]
  40d704:	push   ss
  40d705:	test   eax,0x56106e20
  40d70a:	add    BYTE PTR [ebx],al
  40d70c:	push   cs
  40d70d:	dec    ebp
  40d70e:	add    eax,DWORD PTR [edi+0xcc50e8]
  40d714:	test   DWORD PTR [ebx+0x465f0fcc],ecx
  40d71a:	sar    BYTE PTR ds:0xffffff83,0xe9
  40d721:	adc    edi,edi
  40d723:	mov    ebp,0x10800
  40d728:	add    BYTE PTR [eax+0x0],dl
  40d72b:	inc    ebp
  40d72c:	sub    BYTE PTR ds:0xdd8bc262,ch
  40d732:	add    bh,bh
  40d734:	out    dx,al
  40d735:	dec    ebx
  40d736:	sbb    DWORD PTR [esi+0xcc33cc],ebx
  40d73c:	rol    BYTE PTR [eax],0xeb
  40d73f:	mov    esp,DWORD PTR [ebx+eax*1+0x41]
  40d743:	sub    cl,BYTE PTR [ebx+0x246008b]
  40d749:	fbld   TBYTE PTR ds:0x800740b
  40d74f:	lea    eax,[ecx]
  40d751:	int3   
  40d752:	int3   
  40d753:	mov    ebx,esi
  40d755:	add    eax,0x3ccf56f
  40d75a:	invd   
  40d75c:	inc    ebp
  40d75d:	test   ebx,ebp
  40d75f:	jno    0x40d760
  40d761:	add    BYTE PTR [eax],al
  40d763:	push   0x8
  40d765:	add    eax,DWORD PTR [ebx-0x4cdff07b]
  40d76b:	mov    ebx,0x8bc0cc00
  40d770:	aaa    
  40d771:	add    eax,0xb
  40d774:	je     0x40d756
  40d776:	call   DWORD PTR [ebp-0x15]
  40d779:	add    BYTE PTR [eax],dl
  40d77b:	int3   
  40d77c:	add    BYTE PTR [ebx+ebx*8-0x19],dh
  40d780:	dec    ebp
  40d781:	bswap  esp
  40d783:	mov    eax,ebx
  40d785:	pushf  
  40d786:	repnz or al,0xa0
  40d789:	add    BYTE PTR [eax],al
  40d78b:	sar    bh,0x5b
  40d78e:	pop    es
  40d78f:	(bad)  
  40d790:	dec    esi
  40d791:	mov    eax,DWORD PTR [eax]
  40d793:	add    BYTE PTR [eax+0x1],dl
  40d796:	add    BYTE PTR [eax],al
  40d798:	add    DWORD PTR [ebx-0x1c],ebp
  40d79b:	bound  eax,QWORD PTR [ebx-0x22953323]
  40d7a1:	mov    edi,0xe8fd392e
  40d7a6:	add    BYTE PTR [eax],al
  40d7a8:	add    BYTE PTR [ebp+0x0],dl
  40d7ab:	add    ah,cl
  40d7ad:	sbb    al,0x64
  40d7af:	fimul  DWORD PTR [ebx+0x10010]
  40d7b5:	fdivr  QWORD PTR [eax]
  40d7b7:	push   edx
  40d7b9:	inc    ebp
  40d7ba:	add    BYTE PTR [ebx+0x74ff898b],cl
  40d7c0:	mov    esi,DWORD PTR [ebp-0x72f70821]
  40d7c6:	dec    ebp
  40d7c7:	or     ah,cl
  40d7c9:	and    DWORD PTR [edx],ecx
  40d7cb:	test   eax,0xff50ff87
  40d7d0:	int3   
  40d7d1:	adc    eax,0xa4830c8b
  40d7d6:	add    al,0x19
  40d7d8:	or     esp,0x9ccccc00
  40d7de:	(bad)  
  40d7df:	sbb    dl,BYTE PTR [esi]
  40d7e1:	in     al,dx
  40d7e2:	xor    eax,DWORD PTR [eax]
  40d7e4:	add    al,0xff
  40d7e6:	mov    edi,edi
  40d7e8:	inc    ebp
  40d7e9:	sub    BYTE PTR [edi+0x8],bh
  40d7ec:	ss pop ebp
  40d7ee:	xor    eax,DWORD PTR [ebx+0x7f0183cc]
  40d7f4:	inc    ebx
  40d7f5:	or     bh,bh
  40d7f7:	mov    eax,DWORD PTR [eax]
  40d7f9:	mov    ecx,esp
  40d7fb:	add    BYTE PTR [eax],al
  40d7fd:	xchg   BYTE PTR [ecx],ch
  40d7ff:	cli    
  40d800:	test   DWORD PTR [ebp-0x2e747700],eax
  40d806:	inc    edi
  40d807:	dec    ecx
  40d808:	pop    edi
  40d809:	add    BYTE PTR [edi],cl
  40d80b:	(bad)  
  40d80c:	jmp    0x40d81e
  40d80e:	add    BYTE PTR [ebx-0x5118a100],cl
  40d814:	dec    edi
  40d815:	add    BYTE PTR [ecx+0x383890f],cl
  40d81b:	lods   eax,DWORD PTR ds:[esi]
  40d81c:	mov    DWORD PTR [ebx+0x468b8b08],ecx
  40d822:	test   DWORD PTR [eax],eax
  40d824:	mov    ebp,ecx
  40d826:	call   0x56493ccd
  40d82b:	je     0x40d7f9
  40d82d:	gs add bl,ah
  40d830:	scas   eax,DWORD PTR es:[edi]
  40d831:	bswap  esp
  40d833:	add    al,0xcc
  40d835:	int3   
  40d836:	add    BYTE PTR [eax],al
  40d838:	or     al,0xe3
  40d83a:	xchg   BYTE PTR [eax+edi*8-0x40],ah
  40d83e:	or     BYTE PTR [eax+eax*1-0x70],dh
  40d842:	lahf   
  40d843:	pop    esp
  40d844:	push   esp
  40d845:	add    BYTE PTR [eax],al
  40d847:	mov    eax,DWORD PTR [eax]
  40d849:	add    BYTE PTR [edi],cl
  40d84b:	mov    ecx,DWORD PTR [ecx+0x1506c373]
  40d851:	add    BYTE PTR [ecx],al
  40d853:	add    BYTE PTR [ebp+0x72],dh
  40d856:	hlt    
  40d857:	lods   eax,DWORD PTR ds:[esi]
  40d858:	cmp    al,0xe0
  40d85a:	add    BYTE PTR [esi+0x45],al
  40d85d:	mov    eax,eax
  40d85f:	add    bh,al
  40d861:	or     esp,DWORD PTR ds:0xcc01763b
  40d867:	rol    BYTE PTR [eax],0xc6
  40d86a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d86b:	mov    ebx,0x758d08e6
  40d870:	add    al,0x1
  40d872:	mov    eax,DWORD PTR [ebp-0x1ea3917b]
  40d878:	ror    esp,1
  40d87a:	or     DWORD PTR [eax],0x45
  40d87d:	adc    ah,BYTE PTR [edx-0x60]
  40d880:	and    ecx,DWORD PTR [ebx-0x748b3301]
  40d886:	add    BYTE PTR [ebp+0x74e92500],al
  40d88c:	mov    BYTE PTR [ebp+0x2c8501ff],0xa3
  40d893:	jno    0x40d8ac
  40d895:	int3   
  40d896:	add    ah,ch
  40d898:	add    BYTE PTR [ecx-0x22fffe40],cl
  40d89e:	sub    esp,DWORD PTR [edx+ebx*2]
  40d8a1:	call   0x2540d972
  40d8a6:	in     al,dx
  40d8a7:	cli    
  40d8a8:	add    ecx,esp
  40d8aa:	or     al,0xff
  40d8ac:	loopne 0x40d8ae
  40d8ae:	adc    BYTE PTR [ebx-0x2f678e01],cl
  40d8b4:	add    DWORD PTR [bx+si],eax
  40d8b7:	mov    ebp,ebx
  40d8b9:	push   ecx
  40d8ba:	es mov cl,0x92
  40d8bd:	add    al,ah
  40d8bf:	add    BYTE PTR [eax],al
  40d8c1:	mov    eax,DWORD PTR [eax]
  40d8c3:	adc    eax,0x4c4cde56
  40d8c8:	mov    bh,bh
  40d8ca:	add    BYTE PTR [ebp+0x2229af00],al
  40d8d0:	mov    eax,0x89cc10ff
  40d8d5:	add    BYTE PTR [ebx+0x35021089],cl
  40d8db:	scas   eax,DWORD PTR es:[edi]
  40d8dc:	aam    0x0
  40d8de:	inc    esi
  40d8df:	mov    DWORD PTR [eax],eax
  40d8e1:	mov    ds:0xc0404d40,eax
  40d8e6:	je     0x40d8e8
  40d8e8:	add    BYTE PTR [ebp+0x74],dl
  40d8eb:	(bad)  
  40d8ec:	or     al,0x56
  40d8ee:	jmp    0x55515763
  40d8f3:	or     DWORD PTR [ebx+ebp*1],0xfffffffe
  40d8f7:	jmp    0x40d8a8
  40d8f9:	add    BYTE PTR [eax],al
  40d8fb:	jne    0x40d8c9
  40d8fd:	call   DWORD PTR ds:0xdc54dd74
  40d903:	cmp    ebp,DWORD PTR [edx+0x5d]
  40d906:	je     0x40d90c
  40d908:	add    al,0xa6
  40d90a:	lock push cs
  40d90c:	(bad)  
  40d90d:	adc    BYTE PTR ds:0x8b8b8b00,dl
  40d913:	add    al,0xf
  40d915:	jb     0x40d923
  40d917:	cmc    
  40d918:	stc    
  40d919:	add    BYTE PTR [ecx+0x42583cc],cl
  40d91f:	ins    DWORD PTR es:[edi],dx
  40d920:	xchg   ebx,eax
  40d921:	or     BYTE PTR [edx+0x50],ch
  40d924:	inc    esi
  40d925:	int3   
  40d926:	mov    DWORD PTR [eax],eax
  40d928:	add    BYTE PTR [ebx-0x3d],bl
  40d92b:	mov    dh,0x8d
  40d92d:	je     0x40d8bc
  40d92f:	add    ah,cl
  40d931:	mov    al,BYTE PTR [ebx-0xfff554]
  40d937:	add    DWORD PTR [ebx],esi
  40d939:	inc    DWORD PTR [ebp-0x7b]
  40d93c:	mov    ebx,DWORD PTR [eax*1-0x763f5cb7]
  40d943:	je     0x40d8d0
  40d945:	popa   
  40d946:	(bad)  
  40d947:	push   0x67
  40d949:	push   eax
  40d94a:	mov    edx,DWORD PTR [ebp-0x77]
  40d94d:	fld    QWORD PTR [eax]
  40d94f:	mov    ecx,DWORD PTR [eax]
  40d951:	and    edi,DWORD PTR [ebp-0x31]
  40d954:	or     BYTE PTR [eax+eax*1],al
  40d957:	add    ah,cl
  40d959:	in     al,0xcb
  40d95b:	cmp    DWORD PTR [ecx-0x7cfeff40],edx
  40d961:	add    al,0x0
  40d963:	dec    DWORD PTR [ecx+0x3be76a38]
  40d969:	call   0xb2404d6f
  40d96e:	js     0x40d912
  40d970:	shl    al,1
  40d972:	pop    ebp
  40d973:	jne    0x40d9bb
  40d975:	add    BYTE PTR [ebx+0x2a5e0045],cl
  40d97b:	adc    eax,0x45550025
  40d980:	int3   
  40d981:	ror    al,cl
  40d983:	jbe    0x40d930
  40d985:	loopne 0x40d972
  40d987:	int3   
  40d988:	add    al,al
  40d98a:	mov    DWORD PTR [eax],ecx
  40d98c:	add    BYTE PTR [ebx+0x4a],bh
  40d98f:	mov    dl,BYTE PTR [eax]
  40d991:	int3   
  40d992:	test   DWORD PTR [eax],eax
  40d994:	push   ebp
  40d995:	gs in  al,0x73
  40d998:	push   ecx
  40d999:	add    BYTE PTR [ebp-0x75],al
  40d99c:	or     BYTE PTR [eax],al
  40d99e:	add    BYTE PTR [ebp+0x1],dh
  40d9a1:	cmp    al,0x1
  40d9a3:	xor    eax,0x8b8b4d83
  40d9a8:	jne    0x40d9af
  40d9aa:	out    dx,al
  40d9ab:	cmp    esp,ebp
  40d9ad:	mov    edi,edi
  40d9af:	test   edi,edi
  40d9b1:	punpckhdq mm1,mm4
  40d9b4:	add    ah,ch
  40d9b6:	or     dl,BYTE PTR [ebx+0xccff93]
  40d9bc:	test   DWORD PTR [edi-0x18],ebx
  40d9bf:	add    al,0xcb
  40d9c1:	test   DWORD PTR [ecx],eax
  40d9c3:	int3   
  40d9c4:	mov    edx,DWORD PTR [eax]
  40d9c6:	add    DWORD PTR [eax],eax
  40d9c8:	add    BYTE PTR [edi+0x18],ah
  40d9cb:	fcmovnb st,st(4)
  40d9cd:	inc    DWORD PTR [ebp-0x77]
  40d9d0:	push   fs
  40d9d2:	push   ebp
  40d9d3:	and    eax,0x7400ff86
  40d9d8:	add    DWORD PTR [eax],eax
  40d9da:	add    ah,cl
  40d9dc:	pop    ebp
  40d9dd:	cmp    eax,0xa54a95
  40d9e2:	or     al,0x56
  40d9e4:	int3   
  40d9e5:	mov    ebp,0xeb0531
  40d9ea:	je     0x40d9eb
  40d9ec:	add    al,ah
  40d9ee:	mov    edi,edi
  40d9f0:	int3   
  40d9f1:	adc    al,dl
  40d9f3:	add    al,0xc3
  40d9f5:	mov    eax,DWORD PTR [eax]
  40d9f7:	inc    DWORD PTR [eax]
  40d9f9:	je     0x40d9dd
  40d9fb:	pushf  
  40d9fc:	push   ebp
  40d9fd:	add    BYTE PTR [eax],al
  40d9ff:	pop    ebp
  40da00:	add    al,0x75
  40da02:	push   eax
  40da03:	inc    esi
  40da04:	mov    edx,DWORD PTR [ecx-0x76104f6e]
  40da0a:	int3   
  40da0b:	add    BYTE PTR [ebx-0x30f22b16],cl
  40da11:	add    BYTE PTR [ebp+0x0],bl
  40da14:	push   0x75
  40da16:	add    ah,cl
  40da18:	inc    ebp
  40da19:	jle    0x40d9bb
  40da1b:	lods   al,BYTE PTR ds:[esi]
  40da1c:	out    dx,al
  40da1d:	add    BYTE PTR [eax],dl
  40da1f:	mov    ecx,DWORD PTR [ebx-0x73918e96]
  40da25:	mov    edi,edi
  40da27:	ud0    eax,DWORD PTR [eax]
  40da2a:	mov    DWORD PTR [ebp-0x14],esi
  40da2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da2e:	lock mov edi,0x8b08
  40da34:	add    BYTE PTR [esp+0x46],al
  40da38:	mov    al,ds:0x150000ff
  40da3d:	dec    ebp
  40da3e:	mov    ecx,DWORD PTR [eax]
  40da40:	add    ah,ah
  40da42:	mov    al,ds:0x4be08
  40da47:	call   0x7d1753d7
  40da4c:	add    BYTE PTR fs:[eax],al
  40da4f:	add    DWORD PTR [ecx+eax*1],0x1
  40da53:	add    BYTE PTR [ecx+ebx*1+0x41],dh
  40da57:	cmp    edx,DWORD PTR [eax+0x8b56]
  40da5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da5e:	sbb    edx,esi
  40da60:	inc    edi
  40da61:	add    BYTE PTR [ebx-0x33ffff40],cl
  40da67:	int3   
  40da68:	push   ebp
  40da69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da6a:	jle    0x40da68
  40da6c:	inc    edx
  40da6d:	add    bl,ch
  40da6f:	add    BYTE PTR [ebx-0x7e72c97b],cl
  40da75:	mov    ecx,DWORD PTR [ebx+0x55ffcc]
  40da7b:	push   0x0
  40da7d:	sub    bh,BYTE PTR [ebx+0x2c]
  40da80:	sbb    BYTE PTR [eax],al
  40da82:	int3   
  40da83:	add    al,ch
  40da85:	addr16 call 0xcd0d7e8f
  40da8b:	add    BYTE PTR [eax],al
  40da8d:	int3   
  40da8e:	inc    DWORD PTR [eax]
  40da90:	add    dl,ah
  40da92:	xor    BYTE PTR [ebx+edi*4],ch
  40da95:	mov    edx,DWORD PTR ds:0xebe90000
  40da9b:	or     BYTE PTR [ebx],dl
  40da9d:	int3   
  40da9e:	mov    ecx,DWORD PTR [eax]
  40daa0:	mov    DWORD PTR [ebx+0x5300ccc0],ecx
  40daa6:	push   cs
  40daa7:	and    al,0xd9
  40daa9:	or     al,0xff
  40daab:	adc    BYTE PTR [eax],al
  40daad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daae:	sar    DWORD PTR [ebx+ecx*4-0x77],0x0
  40dab3:	int3   
  40dab4:	push   esi
  40dab5:	inc    esi
  40dab6:	mov    ebx,DWORD PTR [ebp-0x75]
  40dab9:	push   edi
  40daba:	sahf   
  40dabb:	fs sbb esp,ecx
  40dabe:	mov    edi,edi
  40dac0:	(bad)  [ecx-0x333e6bf9]
  40dac6:	push   esi
  40dac7:	add    bh,bh
  40dac9:	add    BYTE PTR [eax],al
  40dacb:	rol    BYTE PTR [eax],0x69
  40dace:	out    dx,al
  40dacf:	sar    DWORD PTR [ebp+0x0],cl
  40dad2:	inc    DWORD PTR [ebp-0x34]
  40dad5:	bnd call 0x9e540f
  40dadb:	add    ah,cl
  40dadd:	int3   
  40dade:	int3   
  40dadf:	inc    DWORD PTR [ebx]
  40dae1:	mov    ebp,0x45a1e49a
  40dae6:	push   eax
  40dae7:	adc    BYTE PTR [eax],dl
  40dae9:	aam    0xa0
  40daeb:	in     eax,dx
  40daec:	mov    eax,0x1cc8b
  40daf1:	int3   
  40daf2:	int3   
  40daf3:	add    BYTE PTR [eax],al
  40daf5:	sbb    esp,DWORD PTR ds:0xff002134
  40dafb:	int3   
  40dafc:	add    BYTE PTR ds:0xa4d384,dh
  40db02:	add    BYTE PTR [ecx-0x74ffff8c],cl
  40db08:	jne    0x40db56
  40db0a:	push   es
  40db0b:	std    
  40db0c:	mov    al,BYTE PTR [eax]
  40db0e:	xor    eax,DWORD PTR [ebp+0x201cc315]
  40db14:	inc    edi
  40db15:	pop    ds
  40db16:	dec    ebp
  40db17:	mov    eax,DWORD PTR [ebp+0xf]
  40db1a:	mov    ds:0x8382cc03,eax
  40db1f:	inc    esi
  40db20:	int3   
  40db21:	add    BYTE PTR [eax],al
  40db23:	rol    BYTE PTR [ecx],0x50
  40db26:	mov    ah,0xe7
  40db28:	js     0x40db27
  40db2a:	add    ah,cl
  40db2c:	lea    eax,[ebx-0x6634d373]
  40db32:	add    BYTE PTR [eax],cl
  40db34:	loopne 0x40db69
  40db36:	or     DWORD PTR [edi],0x74
  40db39:	or     BYTE PTR [edx-0x67],bl
  40db3c:	push   edi
  40db3d:	iret   
  40db3e:	dec    esp
  40db40:	je     0x40db0e
  40db42:	mov    ah,BYTE PTR [eax]
  40db44:	mov    dh,0x8f
  40db46:	mov    ecx,DWORD PTR [ebp+0x40000ff]
  40db4c:	inc    ebp
  40db4d:	add    ah,al
  40db4f:	fisttp WORD PTR [eax+0x8bf5]
  40db55:	jmp    0x40db3d
  40db57:	inc    ebp
  40db58:	cdq    
  40db59:	fld    st(7)
  40db5b:	call   0xc660eb
  40db60:	push   esi
  40db61:	add    ah,dl
  40db63:	mov    esp,0x7401fb38
  40db68:	mov    edi,0x728ad3c3
  40db6e:	adc    eax,0x158b
  40db73:	or     BYTE PTR [eax],al
  40db75:	in     al,dx
  40db76:	jb     0x40db50
  40db78:	shr    cl,0x1
  40db7b:	push   esi
  40db7c:	mov    eax,DWORD PTR [eax]
  40db7e:	pop    esp
  40db7f:	cmp    BYTE PTR [esi],bl
  40db81:	out    dx,al
  40db82:	mov    eax,DWORD PTR [eax]
  40db84:	add    BYTE PTR [ecx-0x1772fc],cl
  40db8a:	out    0xdf,al
  40db8c:	mov    cl,0xb6
  40db8e:	mov    ecx,esp
  40db90:	or     al,0x0
  40db92:	mov    WORD PTR [edi+esi*1-0x133374ca],ds
  40db99:	or     al,0xf
  40db9b:	mov    eax,DWORD PTR [eax]
  40db9d:	inc    ebp
  40db9e:	and    eax,0x75cdcdc2
  40dba3:	add    BYTE PTR [ebx+0x3b59ed00],al
  40dba9:	ret    0xcc75
  40dbac:	je     0x40dc23
  40dbae:	mov    ecx,DWORD PTR [ecx+eax*1]
  40dbb1:	mov    edx,edx
  40dbb3:	push   esi
  40dbb4:	repz jae 0x1143ddba
  40dbbb:	mov    ch,0x85
  40dbbd:	int    0x0
  40dbbf:	mov    DWORD PTR [esi+0x0],eax
  40dbc2:	mov    edx,DWORD PTR [ebp+0x45]
  40dbc5:	add    BYTE PTR [eax+edx*4+0x8bd180],dl
  40dbcc:	add    DWORD PTR [eax],eax
  40dbce:	xchg   edx,eax
  40dbcf:	fisttp DWORD PTR [edi+0x42]
  40dbd2:	rol    BYTE PTR [eax],0x89
  40dbd5:	je     0x40dbd7
  40dbd7:	add    BYTE PTR [ebx-0x2479f800],cl
  40dbdd:	aam    0xff
  40dbdf:	test   DWORD PTR [ebx+0x63d3b683],ecx
  40dbe5:	inc    ecx
  40dbe6:	add    BYTE PTR [esi+0x0],dl
  40dbe9:	add    BYTE PTR [eax],al
  40dbeb:	add    BYTE PTR [eax],al
  40dbed:	jne    0x40db98
  40dbef:	test   BYTE PTR [esp+ecx*2],al
  40dbf2:	push   esi
  40dbf3:	add    BYTE PTR [eax],al
  40dbf5:	xor    esp,DWORD PTR [ecx-0x7c]
  40dbf8:	xchg   esi,eax
  40dbf9:	adc    ecx,DWORD PTR [eax]
  40dbfb:	inc    ebp
  40dbfc:	add    BYTE PTR [eax],al
  40dbfe:	add    ah,cl
  40dc00:	mov    DWORD PTR [eax],eax
  40dc02:	bound  edx,QWORD PTR [edi]
  40dc04:	outs   dx,DWORD PTR ds:[esi]
  40dc05:	aas    
  40dc06:	ror    BYTE PTR [ebx+0x4ffbcc55],0x43
  40dc0d:	sub    al,0x0
  40dc0f:	call   0xcc6714
  40dc14:	fnsave [ebp+ebp*4+0x24]
  40dc18:	aas    
  40dc19:	adc    al,BYTE PTR [eax]
  40dc1b:	lldt   WORD PTR ds:0xcdd091a2
  40dc22:	inc    DWORD PTR [eax]
  40dc24:	add    BYTE PTR [ebp-0x77],dh
  40dc27:	mov    DWORD PTR [ebx-0x110fbb00],ecx
  40dc2d:	xchg   edx,eax
  40dc2e:	int3   
  40dc2f:	inc    ebp
  40dc30:	add    BYTE PTR [eax],al
  40dc32:	mov    cl,0xd3
  40dc34:	pop    es
  40dc35:	lods   eax,DWORD PTR ds:[esi]
  40dc36:	call   0x40dc3c
  40dc3b:	jne    0x40dc45
  40dc3d:	add    BYTE PTR [eax-0x7465c0b0],dl
  40dc43:	or     BYTE PTR [eax],cl
  40dc45:	add    BYTE PTR [edx],ah
  40dc47:	fcomp  DWORD PTR [ecx+0xc45ff1e]
  40dc4d:	add    BYTE PTR [ecx-0x7133ff34],cl
  40dc53:	retf   
  40dc54:	fmul   QWORD PTR [ebp+0x1]
  40dc57:	loopne 0x40dbe4
  40dc59:	je     0x40dcd4
  40dc5b:	add    eax,0x83009280
  40dc60:	add    DWORD PTR [ecx+0xf0ccc45],ecx
  40dc66:	lds    eax,FWORD PTR [ebx+0x486f1]
  40dc6c:	add    ch,bl
  40dc6e:	mov    ch,0xb3
  40dc70:	and    eax,0xcc8b2f
  40dc75:	push   ebp
  40dc76:	or     al,0x0
  40dc78:	inc    DWORD PTR [ebx-0x25d2793f]
  40dc7e:	test   eax,eax
  40dc80:	int3   
  40dc81:	int3   
  40dc82:	xlat   BYTE PTR ds:[ebx]
  40dc83:	inc    edx
  40dc84:	outs   dx,DWORD PTR ds:[esi]
  40dc85:	dec    ebx
  40dc86:	add    DWORD PTR [ebx+0x0],ecx
  40dc8c:	rol    BYTE PTR [eax],0x2a
  40dc8f:	cmp    edx,DWORD PTR [ecx]
  40dc91:	adc    al,BYTE PTR [eax]
  40dc93:	adc    eax,0x2a1f014d
  40dc98:	mov    ?,WORD PTR [edi]
  40dc9a:	push   esi
  40dc9b:	or     esp,0x5d
  40dc9e:	push   esi
  40dc9f:	call   0xd0f12ca4
  40dca4:	xchg   BYTE PTR [eax+0x56],ch
  40dca7:	add    ecx,DWORD PTR [ebx-0x76f87514]
  40dcad:	and    BYTE PTR [eax],al
  40dcaf:	fld    QWORD PTR [ebp-0x3333fe75]
  40dcb5:	or     al,0x2a
  40dcb7:	mov    BYTE PTR [ebx+0x7401dd18],bh
  40dcbd:	mov    ecx,DWORD PTR [edx+0x81157eb]
  40dcc3:	add    BYTE PTR [eax],al
  40dcc5:	mov    ecx,DWORD PTR [eax+eax*1]
  40dcc8:	inc    ebp
  40dcc9:	adc    BYTE PTR [eax],cl
  40dccb:	test   BYTE PTR [ebx+0x6],al
  40dcce:	adc    DWORD PTR [ebp+0x0],0xf
  40dcd2:	cld    
  40dcd3:	(bad)  
  40dcd4:	(bad)  
  40dcd6:	(bad)  
  40dcd7:	fisttp QWORD PTR [ebx+0xf33cc0c]
  40dcdd:	mov    ebp,eax
  40dcdf:	add    ch,BYTE PTR [eax-0x72ffff08]
  40dce5:	mov    esi,DWORD PTR [ecx-0x4a]
  40dce8:	outs   dx,DWORD PTR ds:[esi]
  40dce9:	push   cs
  40dcea:	mov    esp,ebp
  40dcec:	mov    DWORD PTR [eax],edx
  40dcee:	fld    QWORD PTR [ebx-0xca41400]
  40dcf4:	mov    cl,0x11
  40dcf6:	mov    DWORD PTR [ecx],eax
  40dcf8:	inc    ebp
  40dcf9:	or     al,0x4e
  40dcfb:	(bad)  
  40dcfc:	fwait
  40dcfd:	sbb    cl,BYTE PTR [eax]
  40dcff:	int3   
  40dd00:	push   esi
  40dd01:	mov    ecx,DWORD PTR [ebx+0x23cc8bff]
  40dd07:	and    eax,0xccbcd1
  40dd0c:	add    eax,DWORD PTR [ebx+0x3b0bf313]
  40dd12:	jne    0x40dd14
  40dd14:	mov    DWORD PTR [ebx-0x22ff0001],ecx
  40dd1a:	sub    al,0xbe
  40dd1c:	scas   eax,DWORD PTR es:[edi]
  40dd1d:	mov    al,ds:0x8cc00
  40dd22:	js     0x40dd8f
  40dd24:	pop    ecx
  40dd25:	cli    
  40dd26:	add    BYTE PTR [ebx+0xc00],cl
  40dd2c:	push   esi
  40dd2d:	jmp    DWORD PTR [eax+0x3a892e]
  40dd33:	mov    ecx,esp
  40dd35:	int3   
  40dd36:	adc    ah,dl
  40dd38:	dec    ebx
  40dd39:	les    eax,FWORD PTR [eax]
  40dd3b:	inc    esi
  40dd3c:	dec    DWORD PTR [ebx+0x500045ff]
  40dd42:	add    al,0xc
  40dd44:	in     eax,0x42
  40dd46:	int3   
  40dd47:	int3   
  40dd48:	add    bh,bh
  40dd4a:	jb     0x40dd74
  40dd4c:	in     al,0xa8
  40dd4e:	add    eax,DWORD PTR [eax]
  40dd50:	inc    DWORD PTR [esi-0x34]
  40dd53:	loopne 0x40dcda
  40dd55:	or     BYTE PTR [eax+0x6a],dl
  40dd58:	pop    ebp
  40dd59:	data16 add BYTE PTR [eax+eax*1],cl
  40dd5d:	int3   
  40dd5e:	rol    DWORD PTR [ebp-0x76ff97cd],1
  40dd64:	int3   
  40dd65:	push   ebp
  40dd66:	inc    DWORD PTR [eax]
  40dd68:	adc    eax,0x4c3aea89
  40dd6d:	xor    ecx,esp
  40dd6f:	add    BYTE PTR [eax],al
  40dd71:	adc    BYTE PTR [eax-0x3],dh
  40dd74:	jmp    0x40dcfd
  40dd76:	mov    ebp,esp
  40dd78:	add    BYTE PTR [eax],al
  40dd7a:	int3   
  40dd7b:	push   esi
  40dd7c:	int3   
  40dd7d:	pop    ebp
  40dd7e:	sbb    cl,BYTE PTR ds:0x850058fc
  40dd84:	add    BYTE PTR [eax],cl
  40dd86:	aam    0x9d
  40dd88:	rol    DWORD PTR [ecx],0xcc
  40dd8b:	inc    ebp
  40dd8c:	pop    ebp
  40dd8d:	push   eax
  40dd8e:	add    BYTE PTR [esi-0x75],al
  40dd91:	add    DWORD PTR [esi],ebp
  40dd93:	pop    esp
  40dd94:	cdq    
  40dd95:	push   edx
  40dd96:	mov    eax,DWORD PTR [eax]
  40dd98:	je     0x40dda2
  40dd9a:	xlat   BYTE PTR ds:[ebx]
  40dd9b:	xchg   esi,eax
  40dd9c:	jl     0x40dddc
  40dd9e:	inc    esi
  40dd9f:	je     0x40dde7
  40dda1:	add    al,al
  40dda3:	add    ah,cl
  40dda5:	je     0x40dde9
  40dda7:	push   ds
  40dda8:	outs   dx,DWORD PTR ds:[esi]
  40dda9:	mov    cl,BYTE PTR [ecx+0x2d74cc00]
  40ddaf:	sub    DWORD PTR [ecx-0x33a99584],edi
  40ddb5:	or     al,0x45
  40ddb7:	mov    eax,DWORD PTR [ecx]
  40ddb9:	int3   
  40ddba:	mov    WORD PTR [ecx+0x45ffd071],es
  40ddc0:	int3   
  40ddc1:	add    BYTE PTR [edi],al
  40ddc3:	sbb    BYTE PTR [edx],ch
  40ddc5:	cmc    
  40ddc6:	push   eax
  40ddc7:	add    bh,bh
  40ddc9:	inc    ebp
  40ddca:	or     al,0x74
  40ddcc:	pop    ebp
  40ddcd:	int3   
  40ddce:	pushf  
  40ddcf:	push   0x11
  40ddd1:	aad    0x85
  40ddd3:	call   0x6b642dd8
  40ddd8:	xor    dl,BYTE PTR [edx+0x8]
  40dddb:	push   ebp
  40dddc:	int3   
  40dddd:	test   esp,ecx
  40dddf:	add    ah,cl
  40dde1:	add    edx,ebx
  40dde3:	dec    ebx
  40dde4:	scas   al,BYTE PTR es:[edi]
  40dde5:	pop    eax
  40dde6:	mov    eax,DWORD PTR [ebx+0x5e00080c]
  40ddec:	inc    esp
  40dded:	daa    
  40ddee:	push   ebp
  40ddef:	add    BYTE PTR [eax],al
  40ddf1:	pop    ebp
  40ddf2:	fisttp QWORD PTR [ebx-0xc737c8b]
  40ddf8:	inc    ecx
  40ddf9:	add    DWORD PTR [eax],0xffffffdd
  40ddfc:	mov    eax,eax
  40ddfe:	stos   BYTE PTR es:[edi],al
  40ddff:	fcmovbe st,st(6)
  40de01:	fmul   DWORD PTR [ebp+0x400]
  40de07:	inc    ebp
  40de08:	dec    esp
  40de0a:	idiv   BYTE PTR [eax]
  40de0c:	dec    eax
  40de0d:	lock or BYTE PTR [ebp-0x14],bl
  40de11:	mov    eax,DWORD PTR [eax-0x74958a9b]
  40de17:	add    BYTE PTR [ebp-0x1],bl
  40de1a:	add    BYTE PTR [eax+eax*1-0x1],dh
  40de1e:	jbe    0x40de31
  40de20:	add    BYTE PTR ds:0xc0ddcc00,0xd6
  40de27:	arpl   WORD PTR cs:[ebx+0x745000ec],dx
  40de2e:	int3   
  40de2f:	push   0x0
  40de31:	add    BYTE PTR [ecx+0xcc5bc3b],dh
  40de37:	add    BYTE PTR [ebx-0x68b19600],cl
  40de3d:	jl     0x40de3f
  40de3f:	mov    eax,DWORD PTR [eax]
  40de41:	or     ah,cl
  40de43:	pop    ebp
  40de44:	jne    0x40de4a
  40de46:	enter  0x7882,0xd8
  40de4a:	mov    eax,DWORD PTR [ebp-0x34]
  40de4d:	shr    BYTE PTR [ebx+0x7a0c93],0x83
  40de54:	add    edi,edi
  40de56:	rol    al,0x6a
  40de59:	je     0x40de7d
  40de5b:	cmp    esp,0x1e
  40de5e:	inc    esi
  40de5f:	inc    ebp
  40de60:	call   0x985c7d31
  40de65:	mov    es,WORD PTR [eax]
  40de67:	add    BYTE PTR [ecx],al
  40de69:	add    BYTE PTR [ebx+ecx*4+0x46],dh
  40de6d:	int3   
  40de6e:	les    eax,FWORD PTR [edx-0x33ff7ba6]
  40de74:	add    BYTE PTR [eax],al
  40de76:	imul   esi,DWORD PTR [eax-0x6f],0x801002a
  40de7d:	inc    ebp
  40de7e:	adc    eax,0xc3ffcc00
  40de83:	push   ebp
  40de84:	mov    ebp,esp
  40de86:	sub    esp,0x24
  40de89:	push   ebx
  40de8a:	push   esi
  40de8b:	push   edi
  40de8c:	lea    eax,[ebp-0x24]
  40de8f:	push   eax
  40de90:	call   DWORD PTR ds:0x418060
  40de96:	lea    eax,[ebp-0x24]
  40de99:	push   eax
  40de9a:	call   DWORD PTR ds:0x418034
  40dea0:	mov    eax,ds:0x419260
  40dea5:	mov    ds:0x419298,eax
  40deaa:	lea    eax,[ebp-0x8]
  40dead:	push   eax
  40deae:	push   0x1
  40deb0:	call   DWORD PTR ds:0x4180c4
  40deb6:	mov    eax,DWORD PTR [ebp-0x8]
  40deb9:	mov    ecx,DWORD PTR [eax]
  40debb:	lea    edx,[ebp-0xc]
  40debe:	push   edx
  40debf:	push   0x4181e0
  40dec4:	push   eax
  40dec5:	call   DWORD PTR [ecx]
  40dec7:	mov    edi,DWORD PTR [ebp+0x8]
  40deca:	push   0x3
  40decc:	pop    esi
  40decd:	mov    ds:0x4194b8,eax
  40ded2:	mov    DWORD PTR [ebp-0x4],esi
  40ded5:	xor    ebx,ebx
  40ded7:	jmp    0x40dede
  40ded9:	mov    eax,ds:0x4194b8
  40dede:	mov    ecx,DWORD PTR ds:0x419430
  40dee4:	xor    eax,0x190391e9
  40dee9:	add    eax,DWORD PTR [ecx+ebx*4]
  40deec:	mov    DWORD PTR [edi],eax
  40deee:	add    edi,0x4
  40def1:	call   DWORD PTR ds:0x41804c
  40def7:	xor    eax,eax
  40def9:	cmp    DWORD PTR [ebp-0x4],esi
  40defc:	setne  al
  40deff:	add    eax,0x2
  40df02:	add    ebx,eax
  40df04:	mov    DWORD PTR [ebp-0x4],eax
  40df07:	cmp    ebx,0xeb
  40df0d:	jb     0x40ded9
  40df0f:	call   DWORD PTR ds:0x41808c
  40df15:	push   0x1
  40df17:	push   0xc3
  40df1c:	xor    ebx,ebx
  40df1e:	push   ebx
  40df1f:	mov    DWORD PTR [ebp-0x4],esi
  40df22:	call   DWORD PTR ds:0x418098
  40df28:	mov    eax,ds:0x419424
  40df2d:	mov    eax,DWORD PTR [eax+ebx*4]
  40df30:	sub    eax,DWORD PTR ds:0x4194b8
  40df36:	push   0xfffffff8
  40df38:	sub    eax,0x6a6ce10a
  40df3d:	mov    DWORD PTR [edi],eax
  40df3f:	push   0x18b
  40df44:	add    edi,0x4
  40df47:	call   DWORD PTR ds:0x418094
  40df4d:	xor    eax,eax
  40df4f:	cmp    DWORD PTR [ebp-0x4],esi
  40df52:	setne  al
  40df55:	add    eax,0x2
  40df58:	add    ebx,eax
  40df5a:	mov    DWORD PTR [ebp-0x4],eax
  40df5d:	cmp    ebx,0xbe
  40df63:	jb     0x40df28
  40df65:	mov    ecx,DWORD PTR [ebp+0xc]
  40df68:	mov    eax,ds:0x4190ac
  40df6d:	mov    edx,ecx
  40df6f:	shr    edx,1
  40df71:	mov    ds:0x419128,eax
  40df76:	lea    ecx,[edx+ecx*2]
  40df79:	xor    eax,eax
  40df7b:	mov    DWORD PTR [ebp-0x4],esi
  40df7e:	test   ecx,ecx
  40df80:	je     0x40dfc2
  40df82:	mov    ebx,DWORD PTR ds:0x419394
  40df88:	mov    ebx,DWORD PTR [ebx+eax*4]
  40df8b:	xor    edx,edx
  40df8d:	cmp    DWORD PTR ds:0x4194b8,0x80004002
  40df97:	setne  dl
  40df9a:	dec    edx
  40df9b:	and    edx,0x4f9767e
  40dfa1:	add    edx,0x3130
  40dfa7:	sub    ebx,edx
  40dfa9:	xor    edx,edx
  40dfab:	mov    DWORD PTR [edi],ebx
  40dfad:	add    edi,0x4
  40dfb0:	cmp    DWORD PTR [ebp-0x4],esi
  40dfb3:	setne  dl
  40dfb6:	add    edx,0x2
  40dfb9:	add    eax,edx
  40dfbb:	mov    DWORD PTR [ebp-0x4],edx
  40dfbe:	cmp    eax,ecx
  40dfc0:	jb     0x40df82
  40dfc2:	push   0xfe
  40dfc7:	xor    ebx,ebx
  40dfc9:	push   ebx
  40dfca:	call   DWORD PTR ds:0x4180b0
  40dfd0:	push   0x41814c
  40dfd5:	mov    DWORD PTR [ebp+0x8],edi
  40dfd8:	mov    edi,DWORD PTR ds:0x418070
  40dfde:	push   ebx
  40dfdf:	mov    DWORD PTR [ebp-0x4],esi
  40dfe2:	call   edi
  40dfe4:	mov    eax,ds:0x4194ac
  40dfe9:	mov    eax,DWORD PTR [eax+ebx*4]
  40dfec:	sub    eax,DWORD PTR ds:0x4194b8
  40dff2:	mov    ecx,DWORD PTR [ebp+0x8]
  40dff5:	add    DWORD PTR [ebp+0x8],0x4
  40dff9:	push   0x41813c
  40dffe:	sub    eax,0xa2b1921
  40e003:	push   0x0
  40e005:	mov    DWORD PTR [ecx],eax
  40e007:	call   edi
  40e009:	xor    eax,eax
  40e00b:	cmp    DWORD PTR [ebp-0x4],esi
  40e00e:	setne  al
  40e011:	add    eax,0x2
  40e014:	add    ebx,eax
  40e016:	mov    DWORD PTR [ebp-0x4],eax
  40e019:	cmp    ebx,0xaa
  40e01f:	jb     0x40dfe4
  40e021:	mov    ebx,DWORD PTR [ebp+0x8]
  40e024:	mov    edi,esi
  40e026:	xor    eax,eax
  40e028:	mov    ecx,DWORD PTR [ebp+0x10]
  40e02b:	mov    ecx,DWORD PTR [ecx+eax*4]
  40e02e:	sub    ecx,DWORD PTR ds:0x4194b8
  40e034:	sub    ecx,0x4e3d19a0
  40e03a:	mov    DWORD PTR [ebx],ecx
  40e03c:	xor    ecx,ecx
  40e03e:	add    ebx,0x4
  40e041:	cmp    edi,esi
  40e043:	setne  cl
  40e046:	lea    edi,[ecx+0x2]
  40e049:	add    eax,edi
  40e04b:	cmp    eax,0xa0
  40e050:	jb     0x40e028
  40e052:	call   DWORD PTR ds:0x41808c
  40e058:	mov    DWORD PTR [ebp-0x4],esi
  40e05b:	xor    edi,edi
  40e05d:	push   0x0
  40e05f:	push   esi
  40e060:	push   0x0
  40e062:	call   DWORD PTR ds:0x418088
  40e068:	mov    eax,DWORD PTR [ebp+0x14]
  40e06b:	mov    eax,DWORD PTR [eax+edi*4]
  40e06e:	sub    eax,DWORD PTR ds:0x4194b8
  40e074:	push   0xa
  40e076:	add    eax,0x75915848
  40e07b:	push   0x0
  40e07d:	mov    DWORD PTR [ebx],eax
  40e07f:	call   DWORD PTR ds:0x4180b0
  40e085:	xor    eax,eax
  40e087:	add    ebx,0x4
  40e08a:	cmp    DWORD PTR [ebp-0x4],esi
  40e08d:	setne  al
  40e090:	add    eax,0x2
  40e093:	add    edi,eax
  40e095:	mov    DWORD PTR [ebp-0x4],eax
  40e098:	cmp    edi,0xe1
  40e09e:	jb     0x40e05d
  40e0a0:	mov    eax,ds:0x419198
  40e0a5:	mov    ds:0x4192c8,eax
  40e0aa:	mov    eax,ds:0x4190d0
  40e0af:	mov    ds:0x4192ec,eax
  40e0b4:	call   DWORD PTR ds:0x41803c
  40e0ba:	mov    edi,esi
  40e0bc:	xor    eax,eax
  40e0be:	mov    ecx,DWORD PTR [ebp+0x18]
  40e0c1:	mov    ecx,DWORD PTR [ecx+eax*4]
  40e0c4:	sub    ecx,DWORD PTR ds:0x4194b8
  40e0ca:	add    ecx,0x1c3aeb7a
  40e0d0:	mov    DWORD PTR [ebx],ecx
  40e0d2:	xor    ecx,ecx
  40e0d4:	add    ebx,0x4
  40e0d7:	cmp    edi,esi
  40e0d9:	setne  cl
  40e0dc:	lea    edi,[ecx+0x2]
  40e0df:	add    eax,edi
  40e0e1:	cmp    eax,0xa0
  40e0e6:	jb     0x40e0be
  40e0e8:	lea    eax,[ebp-0x24]
  40e0eb:	push   eax
  40e0ec:	call   DWORD PTR ds:0x418040
  40e0f2:	lea    eax,[ebp-0x24]
  40e0f5:	push   eax
  40e0f6:	call   DWORD PTR ds:0x418044
  40e0fc:	pop    edi
  40e0fd:	pop    esi
  40e0fe:	pop    ebx
  40e0ff:	leave  
  40e100:	ret    
  40e101:	jnp    0x40e0e0
  40e103:	jp     0x40e0df
  40e105:	pop    ebp
  40e106:	inc    DWORD PTR [eax]
  40e108:	jmp    ebx
  40e10a:	jge    0x40e153
  40e10c:	add    DWORD PTR [eax],0x10
  40e10f:	(bad)  
  40e110:	in     al,dx
  40e111:	lea    eax,[eax]
  40e113:	call   DWORD PTR [ebp+0x66]
  40e116:	aam    0x50
  40e118:	ins    BYTE PTR es:[edi],dx
  40e119:	mov    DWORD PTR [eax],eax
  40e11b:	add    BYTE PTR [ebx-0x15a43a38],cl
  40e121:	mov    edx,DWORD PTR [eax]
  40e123:	int3   
  40e124:	dec    ebp
  40e125:	je     0x40e0f3
  40e127:	add    BYTE PTR [eax],al
  40e129:	adc    BYTE PTR [esi-0x41],cl
  40e12c:	js     0x40e11a
  40e12e:	mov    DWORD PTR [eax],0x1c2e185
  40e134:	dec    esp
  40e136:	add    BYTE PTR [eax],al
  40e138:	add    al,0x3
  40e13a:	or     al,0xcc
  40e13c:	push   eax
  40e13d:	fild   QWORD PTR [edi+0x45471a]
  40e143:	int3   
  40e144:	mov    DWORD PTR [esi],esp
  40e146:	imul   esi,DWORD PTR [esi+0x50],0xcc8b45ff
  40e14d:	inc    eax
  40e14f:	jnp    0x614fd86b
  40e155:	add    BYTE PTR [eax],al
  40e157:	pop    ebp
  40e158:	inc    esi
  40e159:	fidiv  WORD PTR [ebx+0x6aebae]
  40e15f:	push   ebp
  40e160:	int3   
  40e161:	add    BYTE PTR [eax],al
  40e163:	or     BYTE PTR [ecx-0x1a66e868],cl
  40e169:	add    BYTE PTR [ebx-0x2b3d8b7d],al
  40e16f:	pop    ebx
  40e170:	js     0x40e0fd
  40e172:	add    bh,bh
  40e174:	jmp    0x40e176
  40e176:	add    BYTE PTR [ebx+ecx*4-0x28],dh
  40e17a:	ret    0xfe9b
  40e17d:	mov    ecx,esp
  40e17f:	mov    eax,eax
  40e181:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e182:	inc    eax
  40e183:	in     al,dx
  40e184:	lods   al,BYTE PTR ds:[esi]
  40e185:	add    BYTE PTR [ebp+0xc],al
  40e188:	mov    ecx,DWORD PTR [ebx+0xe8508ff]
  40e18e:	and    ebx,DWORD PTR [ebx+edx*8-0x33efb934]
  40e195:	enter  0x90db,0x76
  40e199:	add    bh,al
  40e19b:	call   0x4541e26c
  40e1a0:	add    BYTE PTR [edx+0x45866230],dh
  40e1a6:	mov    edi,edi
  40e1a8:	(bad)  
  40e1a9:	pop    esp
  40e1aa:	test   DWORD PTR [ebp-0x74aa95ca],0x46000800
  40e1b4:	int3   
  40e1b5:	sti    
  40e1b6:	ror    DWORD PTR [ebp+eax*4+0x0],0xcc
  40e1bb:	mov    ecx,DWORD PTR [ebx+0xdfac97c]
  40e1c1:	inc    DWORD PTR [eax+ecx*1]
  40e1c4:	test   DWORD PTR [edx+0x0],ebp
  40e1c7:	(bad)  
  40e1c8:	call   0x118cd868
  40e1cd:	dec    DWORD PTR [ebx+0x441a0100]
  40e1d3:	xor    eax,0xdda2
  40e1d8:	add    DWORD PTR [ebx-0x4baba34],0x51
  40e1df:	mov    ds:0x8b898b67,al
  40e1e4:	test   DWORD PTR [esi+0x5b],eax
  40e1e7:	pop    ebp
  40e1e8:	cli    
  40e1e9:	or     BYTE PTR [ebx+0x10cc4d],cl
  40e1ef:	push   0xffffff83
  40e1f1:	loope  0x40e1f6
  40e1f3:	mov    dl,0x96
  40e1f5:	cmp    edi,0xffffff8b
  40e1f8:	add    BYTE PTR [edi],bh
  40e1fa:	xchg   ecx,eax
  40e1fb:	jge    0x40e249
  40e1fd:	int3   
  40e1fe:	mov    ecx,DWORD PTR [ebx+0x1e88b00]
  40e204:	add    BYTE PTR ds:0x79755f,bh
  40e20a:	inc    esi
  40e20b:	add    ebp,ebx
  40e20d:	inc    eax
  40e20e:	fisubr WORD PTR ds:0x33008d7d
  40e214:	add    edi,edi
  40e216:	add    ch,bl
  40e218:	inc    ebp
  40e219:	dec    edi
  40e21a:	push   es
  40e21b:	aas    
  40e21c:	sti    
  40e21d:	test   DWORD PTR [eax],ecx
  40e21f:	inc    ebp
  40e220:	or     bh,cl
  40e222:	cmp    DWORD PTR [edx+edi*8],esi
  40e225:	add    esp,ecx
  40e227:	dec    DWORD PTR [eax*2-0x3974fff1]
  40e22e:	retf   
  40e22f:	int    0x85
  40e231:	add    BYTE PTR [ecx],al
  40e233:	mov    eax,DWORD PTR [eax]
  40e235:	push   cs
  40e236:	sar    BYTE PTR [edi],1
  40e238:	popa   
  40e239:	mov    DWORD PTR [ebx+esi*1+0x0],esi
  40e23d:	bswap  esp
  40e23f:	jmp    0x40e240
  40e241:	or     ebp,ebx
  40e243:	test   al,dh
  40e245:	mov    DWORD PTR [ebx],esi
  40e247:	je     0x40e215
  40e249:	dec    esp
  40e24a:	test   eax,edx
  40e24c:	xchg   edx,eax
  40e24d:	call   0x3cccf1e
  40e252:	pop    ebp
  40e253:	inc    ebp
  40e254:	int3   
  40e255:	pop    es
  40e256:	cmp    DWORD PTR [esi+ecx*1],ecx
  40e259:	or     bh,bh
  40e25b:	pop    ebp
  40e25c:	add    BYTE PTR [edi+0x46fc31f],dh
  40e262:	mov    eax,DWORD PTR [eax]
  40e264:	push   ebp
  40e265:	dec    DWORD PTR [ebp-0x34]
  40e268:	je     0x40e2d7
  40e26a:	pop    ds
  40e26b:	sahf   
  40e26c:	addr16 jne 0x40e26f
  40e26f:	je     0x40e25d
  40e271:	int    0x4a
  40e273:	sub    cx,WORD PTR [edi+edi*8]
  40e277:	cmp    edi,0xffffff8b
  40e27a:	fisttp QWORD PTR [eax]
  40e27c:	cmp    DWORD PTR [ecx+ebp*4-0x62],0x0
  40e281:	add    ah,cl
  40e283:	inc    DWORD PTR [eax]
  40e285:	adc    BYTE PTR [eax+0x7],cl
  40e288:	adc    al,0x8b
  40e28a:	add    BYTE PTR [ebx-0x7cff01],cl
  40e290:	mov    edi,DWORD PTR [edx-0x53]
  40e293:	or     ebp,0xffffff8b
  40e296:	test   ebx,ebp
  40e298:	je     0x40e2a6
  40e29a:	shl    DWORD PTR es:[ebp-0x34],0x8d
  40e29f:	or     BYTE PTR [eax+ecx*1],al
  40e2a2:	add    BYTE PTR [ebx-0x2f8188c],cl
  40e2a8:	jbe    0x40e2fa
  40e2aa:	int3   
  40e2ab:	jne    0x40e2ad
  40e2ad:	enter  0x4ef,0x7
  40e2b1:	mov    eax,DWORD PTR [ecx]
  40e2b3:	(bad)  
  40e2b4:	dec    DWORD PTR [ebx+0x4000c000]
  40e2ba:	int3   
  40e2bb:	mov    cl,0x7c
  40e2bd:	in     al,dx
  40e2be:	add    DWORD PTR [ecx],eax
  40e2c0:	add    DWORD PTR [eax+0x13],edx
  40e2c3:	jle    0x40e2c0
  40e2c5:	mov    eax,DWORD PTR [eax]
  40e2c7:	int3   
  40e2c8:	add    DWORD PTR [eax],eax
  40e2ca:	mov    DWORD PTR [eax],0x86780501
  40e2d0:	cld    
  40e2d1:	or     BYTE PTR [ebx+0x6bd44501],cl
  40e2d7:	(bad)  
  40e2d8:	in     eax,0x75
  40e2da:	je     0x40e2f1
  40e2dc:	adc    DWORD PTR ds:0xf78b898b,0x63
  40e2e3:	lahf   
  40e2e4:	in     eax,0x0
  40e2e6:	add    BYTE PTR [ebx],dh
  40e2e8:	add    BYTE PTR [esi-0x6b],dl
  40e2eb:	push   ebp
  40e2ec:	mov    bh,0x0
  40e2ee:	loopne 0x40e27b
  40e2f0:	mov    DWORD PTR [eax],eax
  40e2f2:	push   ebp
  40e2f3:	add    DWORD PTR [eax],eax
  40e2f5:	test   ch,0x62
  40e2f8:	clc    
  40e2f9:	mov    ecx,DWORD PTR [ecx+0x23be15cc]
  40e2ff:	(bad)  
  40e300:	jle    0x40e30a
  40e302:	add    al,0x0
  40e304:	mov    eax,eax
  40e306:	add    BYTE PTR [ebx+0x496d0508],cl
  40e30c:	dec    ebp
  40e30d:	mov    DWORD PTR [ebp+0x3],eax
  40e310:	add    BYTE PTR [eax+edx*1+0x8b7fce],bh
  40e317:	add    BYTE PTR [eax],al
  40e319:	adc    BYTE PTR [ebp-0x34],dl
  40e31c:	mov    edi,DWORD PTR [edx+0x7c]
  40e31f:	sar    DWORD PTR [edi],0x8b
  40e322:	add    ecx,DWORD PTR [eax]
  40e324:	lea    ecx,[edx]
  40e326:	js     0x40e2f4
  40e328:	xchg   esi,eax
  40e329:	mov    edi,edi
  40e32b:	add    ah,cl
  40e32d:	add    DWORD PTR [eax],eax
  40e32f:	loopne 0x40e2be
  40e331:	xchg   ebx,eax
  40e332:	sub    eax,0x8b4d0647
  40e337:	mov    eax,DWORD PTR [ebp+0x318b4b16]
  40e33d:	int3   
  40e33e:	test   DWORD PTR [ebp+0x50],eax
  40e341:	pop    ebp
  40e342:	add    BYTE PTR [eax],al
  40e344:	jne    0x40e2ed
  40e346:	jb     0x40e3a7
  40e348:	mov    edi,0x1574cc
  40e34d:	rol    BYTE PTR [edi],1
  40e34f:	xchg   ecx,eax
  40e350:	int    0x0
  40e352:	test   ebp,ebx
  40e354:	add    BYTE PTR [ecx],al
  40e356:	add    al,0x83
  40e358:	(bad)  
  40e359:	push   0x3
  40e35b:	and    BYTE PTR [ebp+0x4458b89],0x0
  40e362:	enter  0x7845,0x8b
  40e366:	add    bh,bh
  40e368:	push   0xffffffff
  40e36a:	or     BYTE PTR [ebp+0x55],al
  40e36d:	iret   
  40e36e:	ret    0x56ff
  40e371:	inc    DWORD PTR [ebp-0x75]
  40e374:	or     ch,bl
  40e376:	out    0x12,eax
  40e378:	sbb    BYTE PTR [eax],cl
  40e37a:	int3   
  40e37b:	mov    ecx,DWORD PTR [ebx+0xf04008b]
  40e381:	lods   al,BYTE PTR ds:[esi]
  40e382:	push   ss
  40e383:	sbb    al,BYTE PTR [ebp+0x45]
  40e386:	add    BYTE PTR [ecx+eax*1-0x12],dh
  40e38a:	push   cs
  40e38b:	pop    ss
  40e38c:	xchg   esi,eax
  40e38d:	add    BYTE PTR [ebx-0x3f7a33ff],cl
  40e393:	int3   
  40e394:	push   esi
  40e395:	inc    DWORD PTR [ebp+0x5]
  40e398:	cli    
  40e399:	int3   
  40e39a:	add    DWORD PTR [ebx],eax
  40e39c:	int3   
  40e39d:	out    0xc8,al
  40e39f:	lea    eax,[esi]
  40e3a1:	int3   
  40e3a2:	call   0x85e430
  40e3a7:	(bad)  
  40e3a8:	jmp    DWORD PTR [ecx]
  40e3aa:	nop
  40e3ab:	int    0x45
  40e3ad:	add    bl,ch
  40e3af:	add    BYTE PTR [eax],al
  40e3b1:	test   al,0xa5
  40e3b3:	inc    eax
  40e3b4:	mov    DWORD PTR [ecx],0xc700ccec
  40e3ba:	int3   
  40e3bb:	inc    ebp
  40e3bc:	mov    eax,ebx
  40e3be:	scas   al,BYTE PTR es:[edi]
  40e3bf:	add    eax,0xcc00d1b3
  40e3c4:	or     al,0xcc
  40e3c6:	ret    
  40e3c7:	mov    bl,0xf7
  40e3c9:	or     eax,DWORD PTR [eax]
  40e3cb:	add    DWORD PTR [eax],ecx
  40e3cd:	mov    edx,DWORD PTR [esi-0x18]
  40e3d0:	add    ah,cl
  40e3d2:	or     ch,BYTE PTR [ecx+0x8b332d]
  40e3d8:	add    bh,bh
  40e3da:	rcr    ch,cl
  40e3dc:	ror    BYTE PTR [ebx+0x5d],0x89
  40e3e0:	push   eax
  40e3e1:	(bad)  
  40e3e2:	dec    esp
  40e3e4:	mov    ecx,DWORD PTR [eax]
  40e3e6:	loopne 0x40e3ee
  40e3e8:	xchg   esp,eax
  40e3e9:	pop    ecx
  40e3ea:	mov    ebp,DWORD PTR [edx+0x0]
  40e3ed:	dec    ebp
  40e3ee:	out    dx,al
  40e3ef:	aad    0x7a
  40e3f1:	inc    eax
  40e3f2:	je     0x40e3c0
  40e3f4:	dec    DWORD PTR [eax]
  40e3f6:	pop    ebp
  40e3f7:	add    DWORD PTR [eax],0x6a
  40e3fa:	test   al,0xd
  40e3fc:	mov    dl,0x4f
  40e3fe:	mov    DWORD PTR [ecx+0x44a1dd33],ecx
  40e404:	xchg   esi,eax
  40e405:	out    0xff,eax
  40e407:	lea    eax,[eax]
  40e409:	add    BYTE PTR [ebx+ecx*4],al
  40e40c:	add    ah,cl
  40e40e:	push   cs
  40e40f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e410:	cmp    al,ah
  40e412:	add    eax,esp
  40e414:	add    BYTE PTR [esi-0x38],al
  40e417:	enter  0xbb0f,0x8b
  40e41b:	add    BYTE PTR [ebp+0x0],cl
  40e41e:	je     0x40e41f
  40e420:	inc    DWORD PTR [ecx]
  40e422:	inc    ecx
  40e423:	jmp    0x101:0xcc00f5e5
  40e42a:	aas    
  40e42b:	jecxz  0x40e461
  40e42d:	dec    eax
  40e42e:	add    BYTE PTR [ebp+0x0],al
  40e431:	jmp    0x40e413
  40e433:	int3   
  40e434:	add    BYTE PTR [eax+0x48],dl
  40e437:	loop   0x40e3d8
  40e439:	push   ebx
  40e43a:	add    BYTE PTR [ebx+ecx*4+0x74],dh
  40e43e:	push   es
  40e43f:	in     eax,dx
  40e440:	mov    bh,0x14
  40e442:	add    bl,ch
  40e444:	adc    BYTE PTR [ebp-0x14],al
  40e447:	mov    eax,DWORD PTR [eax]
  40e449:	add    DWORD PTR [ebx],ebp
  40e44b:	(bad)  
  40e44c:	test   eax,0x45ff8b01
  40e451:	mov    ecx,DWORD PTR [ecx+eax*8+0xcfea2]
  40e458:	(bad)  
  40e459:	(bad)  
  40e45a:	inc    DWORD PTR [eax]
  40e45c:	add    BYTE PTR [ebx-0x2594377],cl
  40e462:	or     esp,0x0
  40e465:	test   DWORD PTR [ebp+0x8df4b7],ebp
  40e46b:	or     BYTE PTR [ebx-0x7c003900],cl
  40e471:	mov    edx,DWORD PTR [ecx+0x4d9b94e7]
  40e477:	add    BYTE PTR [eax],al
  40e479:	int3   
  40e47a:	dec    edx
  40e47b:	ss pop ds
  40e47d:	imul   eax,DWORD PTR [eax],0x75
  40e480:	int3   
  40e481:	add    DWORD PTR [eax],ecx
  40e483:	dec    DWORD PTR [eax]
  40e485:	add    dh,bl
  40e487:	pop    ebx
  40e488:	mov    eax,0x8004570
  40e48d:	add    bh,ch
  40e48f:	(bad)  
  40e491:	or     DWORD PTR [ecx],eax
  40e493:	int3   
  40e494:	add    BYTE PTR [ecx+0xc701],cl
  40e49a:	std    
  40e49b:	loop   0x40e48b
  40e49d:	inc    ebp
  40e49e:	push   eax
  40e49f:	add    BYTE PTR [ebp+0x32e2c500],al
  40e4a5:	dec    ecx
  40e4a6:	jmp    FWORD PTR [edx-0x73]
  40e4a9:	add    al,0xf
  40e4ab:	add    BYTE PTR [eax],al
  40e4ad:	inc    esi
  40e4ae:	mov    esi,0x1fdcae2
  40e4b3:	jne    0x40e481
  40e4b5:	add    BYTE PTR [eax-0x17],al
  40e4b8:	cmp    DWORD PTR fs:[ebp+0x6a],esi
  40e4bc:	add    BYTE PTR [eax+eax*1],cl
  40e4bf:	mov    eax,DWORD PTR [eax]
  40e4c1:	add    ch,al
  40e4c3:	push   ebx
  40e4c4:	rcr    BYTE PTR [ecx-0x75],1
  40e4c7:	mov    edx,DWORD PTR [esi-0x40]
  40e4ca:	mov    esp,0x8706da7
  40e4cf:	inc    esi
  40e4d0:	add    BYTE PTR [eax],al
  40e4d2:	add    BYTE PTR [eax],cl
  40e4d4:	jne    0x40e52b
  40e4d6:	sub    ah,ch
  40e4d8:	out    dx,al
  40e4d9:	inc    edi
  40e4da:	je     0x40e467
  40e4dc:	add    BYTE PTR [eax],al
  40e4de:	or     BYTE PTR [esi],ch
  40e4e0:	daa    
  40e4e1:	retf   0x8b
  40e4e4:	add    edx,DWORD PTR [esi+0x10]
  40e4e7:	add    BYTE PTR [ebx+0x2c654974],cl
  40e4ed:	jge    0x40e4d7
  40e4ef:	call   0x19d171f4
  40e4f4:	test   al,0x8
  40e4f6:	add    ah,cl
  40e4f8:	(bad)  
  40e4fa:	jmp    0x40e4bc
  40e4fc:	push   DWORD PTR [esp+edi*2+0x20]
  40e500:	clc    
  40e501:	mov    WORD PTR [eax],es
  40e503:	add    DWORD PTR [edi],ecx
  40e505:	int3   
  40e506:	cmp    al,0x6e
  40e508:	cdq    
  40e509:	inc    eax
  40e50a:	add    BYTE PTR [eax],cl
  40e50c:	add    BYTE PTR [ebp+0x5d],al
  40e50f:	mov    ecx,esp
  40e511:	add    al,0xbd
  40e513:	popa   
  40e514:	repnz mov ecx,0xec00cc00
  40e51a:	iret   
  40e51b:	ficom  WORD PTR [edi+0x17401bb]
  40e521:	add    BYTE PTR [eax],al
  40e523:	add    BYTE PTR [ecx],al
  40e525:	int3   
  40e526:	aas    
  40e527:	pop    edi
  40e528:	adc    BYTE PTR [edx],0x0
  40e52b:	mov    eax,DWORD PTR [eax]
  40e52d:	add    dh,dh
  40e52f:	push   es
  40e530:	call   0x8b:0x838b046e
  40e537:	add    ah,cl
  40e539:	add    dh,al
  40e53b:	adc    edx,DWORD PTR [ecx]
  40e53d:	add    ecx,DWORD PTR [ebx-0x4b00f7ba]
  40e543:	mov    dl,0x57
  40e545:	stos   BYTE PTR es:[edi],al
  40e546:	inc    DWORD PTR [ebp-0x20]
  40e549:	add    BYTE PTR [eax],al
  40e54b:	int3   
  40e54c:	push   eax
  40e54d:	add    al,0x54
  40e54f:	aad    0x62
  40e551:	fxch   st(4)
  40e553:	mov    DWORD PTR [eax],eax
  40e555:	add    BYTE PTR [edi+0x46355fdb],ch
  40e55b:	test   DWORD PTR [esp+ecx*8-0x7d],esi
  40e55f:	bswap  esp
  40e561:	mov    eax,DWORD PTR [eax+0x33]
  40e564:	xlat   BYTE PTR ds:[ebx]
  40e565:	or     DWORD PTR [esp+ecx*8],0xe32c4650
  40e56c:	mov    ?,WORD PTR [ebx+eax*4+0x8b7556]
  40e573:	mov    eax,DWORD PTR [ebp-0x3e234300]
  40e579:	mov    ebx,0x4008300
  40e57e:	push   ds
  40e57f:	aas    
  40e580:	in     eax,0xf8
  40e582:	add    ah,cl
  40e584:	add    BYTE PTR [edx+0x74],ch
  40e587:	lea    eax,[eax]
  40e589:	add    BYTE PTR [edi-0x761b9379],ch
  40e58f:	mov    DWORD PTR [eax],0xa6ea7700
  40e595:	repnz add al,0x3
  40e598:	push   0x55
  40e59a:	add    BYTE PTR [ebx-0x696cbab0],cl
  40e5a0:	aaa    
  40e5a1:	jne    0x40e5b8
  40e5a3:	dec    DWORD PTR [ebx-0x4eae3c75]
  40e5a9:	dec    eax
  40e5aa:	add    BYTE PTR [ecx+0xcc75ff],cl
  40e5b0:	mov    esi,DWORD PTR [ecx+ebp*8-0x15]
  40e5b4:	sub    BYTE PTR [esi-0x34],0x8b
  40e5b8:	add    ah,cl
  40e5ba:	pop    es
  40e5bb:	xor    al,0xe4
  40e5bd:	cmp    al,0xff
  40e5bf:	inc    ebp
  40e5c0:	mov    ecx,esp
  40e5c2:	cmp    edi,0xffffffff
  40e5c5:	add    BYTE PTR [edi-0x74f62f20],ah
  40e5cb:	mov    eax,DWORD PTR [eax]
  40e5cd:	pop    ebp
  40e5ce:	fsub   DWORD PTR es:[ebp-0x58]
  40e5d2:	mov    edi,edi
  40e5d4:	adc    eax,0x8b4555
  40e5d9:	add    DWORD PTR [ecx+0x1c],edx
  40e5dc:	retf   
  40e5dd:	out    0x8b,eax
  40e5df:	mov    DWORD PTR [edi],ecx
  40e5e1:	call   FWORD PTR [edi+ebp*8-0x60]
  40e5e5:	dec    esi
  40e5e6:	add    BYTE PTR [esi+0x75],al
  40e5e9:	int3   
  40e5ea:	int3   
  40e5eb:	adc    BYTE PTR [eax],al
  40e5ed:	inc    esi
  40e5ee:	adc    BYTE PTR [edi],dh
  40e5f0:	test   DWORD PTR [edx-0x23],0x5900dd45
  40e5f7:	push   esi
  40e5f8:	mov    cl,0x81
  40e5fa:	int3   
  40e5fb:	add    esp,ecx
  40e5fd:	add    BYTE PTR [ebx-0x7dfff777],cl
  40e603:	imul   ebx,edi,0xffffffdd
  40e606:	add    BYTE PTR [ebx],al
  40e608:	je     0x40e64f
  40e60a:	dec    eax
  40e60b:	in     al,dx
  40e60c:	jno    0x40e5fd
  40e60e:	or     al,0x4d
  40e610:	add    BYTE PTR [eax],al
  40e612:	add    BYTE PTR [edx-0x1],ch
  40e615:	inc    esi
  40e617:	inc    esi
  40e618:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e619:	mov    ebx,0x15001015
  40e61e:	push   ss
  40e61f:	loopne 0x40e5a5
  40e621:	inc    esp
  40e622:	add    BYTE PTR [eax],al
  40e624:	add    BYTE PTR [eax],al
  40e626:	ror    ah,0x1
  40e629:	jne    0x40e5fe
  40e62b:	cmp    esi,esi
  40e62d:	sbb    al,0x74
  40e62f:	or     BYTE PTR [ecx],al
  40e631:	jne    0x40e5e3
  40e633:	setns  BYTE PTR [eax]
  40e636:	add    BYTE PTR [eax],al
  40e638:	add    BYTE PTR [eax],al
  40e63a:	test   DWORD PTR [eax],eax
  40e63c:	inc    ebp
  40e63d:	adc    DWORD PTR [edi],0xffffffd7
  40e640:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e641:	adc    DWORD PTR [esi+0x1],0xe33b898b
  40e648:	push   ss
  40e649:	test   BYTE PTR [eax],0x1
  40e64c:	mov    ebx,DWORD PTR [ebp+0x45]
  40e64f:	rcl    BYTE PTR [eax],0xcc
  40e652:	pop    ebx
  40e653:	inc    esi
  40e654:	jbe    0x40e64e
  40e656:	add    BYTE PTR [ebp-0x40],bl
  40e659:	cmp    DWORD PTR [ebp+0x6adc5f9c],0x0
  40e660:	inc    esi
  40e661:	int3   
  40e662:	int3   
  40e663:	add    ah,cl
  40e665:	add    DWORD PTR [eax-0x61],esp
  40e668:	sub    bh,BYTE PTR [ebx-0x1]
  40e66b:	dec    DWORD PTR [eax]
  40e66d:	add    ebx,ebx
  40e66f:	aam    0xc2
  40e671:	in     al,dx
  40e672:	add    BYTE PTR [eax],al
  40e674:	add    esp,ecx
  40e676:	add    BYTE PTR [eax],al
  40e678:	inc    DWORD PTR [ecx]
  40e67a:	mov    edi,0x75892bdb
  40e67f:	jnp    0x5672b551
  40e685:	mov    esp,0xcc8bcc
  40e68a:	int3   
  40e68b:	add    BYTE PTR [ebx-0x772060ff],al
  40e691:	stc    
  40e692:	mov    eax,DWORD PTR [ebp-0x62dff400]
  40e698:	cmp    eax,0x8b8b007b
  40e69d:	add    ah,cl
  40e69f:	mov    ecx,esp
  40e6a1:	mov    edi,DWORD PTR [ecx+0x67]
  40e6a4:	lds    ecx,FWORD PTR [ebx+ecx*4]
  40e6a7:	add    BYTE PTR [eax],al
  40e6a9:	pop    ebp
  40e6aa:	mov    dl,0xff
  40e6ac:	cwde   
  40e6ad:	std    
  40e6ae:	(bad)  
  40e6b0:	int3   
  40e6b1:	add    DWORD PTR [ebp-0x34],eax
  40e6b4:	adc    BYTE PTR [eax+0x44],dl
  40e6b7:	push   0x754d039f
  40e6bc:	add    bh,bh
  40e6be:	xchg   edx,eax
  40e6bf:	dec    esp
  40e6c0:	mov    edi,0x83044518
  40e6c5:	add    BYTE PTR [esi-0x75],al
  40e6c8:	push   esi
  40e6c9:	cmp    DWORD PTR [edx+0xf65a729],0xc
  40e6d0:	or     bh,bh
  40e6d2:	js     0x40e726
  40e6d4:	mov    al,0x25
  40e6d6:	mov    eax,DWORD PTR [eax]
  40e6d8:	pop    ebp
  40e6d9:	mov    eax,DWORD PTR [ecx]
  40e6db:	int3   
  40e6dc:	add    BYTE PTR [ecx+eax*4],cl
  40e6df:	(bad)
  40e6e3:	je     0x40e72b
  40e6e5:	add    dl,bl
  40e6e7:	xchg   ebp,eax
  40e6e8:	das    
  40e6e9:	cmc    
  40e6ea:	add    BYTE PTR [ebx+0xcc0300],cl
  40e6f0:	add    DWORD PTR [ebp+0x44],0x78
  40e6f4:	mov    esi,0x8b8b8be2
  40e6f9:	je     0x40e680
  40e6fb:	cdq    
  40e6fc:	pusha  
  40e6fd:	adc    al,BYTE PTR [eax]
  40e6ff:	dec    DWORD PTR [ebx+0xcc89ff]
  40e705:	loopne 0x40e6c1
  40e707:	cmp    DWORD PTR [ebx+0x8cc0402],ebp
  40e70d:	push   esi
  40e70e:	jp     0x40e702
  40e710:	push   0xcc33ce
  40e715:	add    BYTE PTR [ebp+0x74],dl
  40e718:	inc    ebp
  40e719:	call   DWORD PTR [edx]
  40e71b:	xor    al,0x4e
  40e71d:	add    al,0x4
  40e71f:	mov    DWORD PTR [edi],ecx
  40e721:	add    DWORD PTR [edi+edx*2-0x7c76076c],edi
  40e728:	int3   
  40e729:	add    BYTE PTR [eax],al
  40e72b:	add    bh,bh
  40e72d:	add    ch,bh
  40e72f:	jmp    0x40e747
  40e731:	push   ecx
  40e732:	inc    DWORD PTR [ebp-0x141e00ff]
  40e738:	fs jl  0x40e7af
  40e73b:	add    BYTE PTR [eax],al
  40e73d:	or     al,0x0
  40e73f:	mov    ecx,DWORD PTR [edi+edi*8]
  40e742:	(bad)  
  40e743:	cld    
  40e744:	mov    dl,0x44
  40e746:	jmp    0x40e734
  40e748:	str    edx
  40e74b:	and    DWORD PTR [edi-0x74ff74dc],edi
  40e751:	int3   
  40e752:	inc    DWORD PTR [eax]
  40e754:	add    BYTE PTR [ebx],al
  40e756:	ret    
  40e757:	push   esp
  40e758:	jp     0x40e6fc
  40e75a:	cld    
  40e75b:	int3   
  40e75c:	int3   
  40e75d:	push   eax
  40e75e:	pmuludq mm4,mm6
  40e761:	jecxz  0x40e798
  40e763:	mov    edi,edi
  40e765:	rol    BYTE PTR [ecx],0x8b
  40e768:	add    DWORD PTR [ebx-0xb10d334],ecx
  40e76e:	rol    DWORD PTR [ebp-0x75],0x74
  40e772:	add    edi,ecx
  40e774:	lods   eax,DWORD PTR ds:[esi]
  40e775:	icebp  
  40e776:	pop    ss
  40e777:	add    BYTE PTR [eax],al
  40e779:	add    al,0x46
  40e77b:	inc    esi
  40e77c:	mov    ebx,ebp
  40e77e:	add    BYTE PTR [ebx+0x74b96e7a],ch
  40e784:	mov    DWORD PTR [esp+ecx*8-0x14],esi
  40e788:	retf   
  40e789:	loopne 0x40e777
  40e78b:	dec    esp
  40e78d:	push   0x33
  40e78f:	je     0x40e7c4
  40e791:	test   DWORD PTR [ebp-0xc],eax
  40e794:	push   ebx
  40e795:	mov    dh,BYTE PTR [ebp+0xcccc46]
  40e79b:	popa   
  40e79c:	push   ebp
  40e79d:	in     al,0xe5
  40e79f:	add    BYTE PTR [ebp-0x337aff75],cl
  40e7a5:	xor    edi,edi
  40e7a7:	mov    dh,0xff
  40e7a9:	mov    eax,ds:0xccff0010
  40e7ae:	jmp    FWORD PTR [esi+0x4640ea5c]
  40e7b4:	or     BYTE PTR [eax],al
  40e7b6:	add    DWORD PTR [ebp+0x4d],eax
  40e7b9:	add    DWORD PTR [ecx-0xc9ad7f],ecx
  40e7bf:	add    BYTE PTR [eax],cl
  40e7c1:	or     DWORD PTR [edx+ebx*2],0xffffff83
  40e7c5:	loopne 0x40e7e5
  40e7c7:	add    BYTE PTR [ebp+0x4e08389],cl
  40e7cd:	rcr    ch,0xd9
  40e7d0:	popf   
  40e7d1:	cli    
  40e7d2:	pushf  
  40e7d3:	add    DWORD PTR [eax],eax
  40e7d5:	dec    DWORD PTR [ecx+0x5591f34]
  40e7db:	add    al,ah
  40e7dd:	add    BYTE PTR [ebx-0x7a7aff7b],cl
  40e7e3:	ror    BYTE PTR [edx+eax*2-0x148bffe2],0x8
  40e7eb:	retf   
  40e7ec:	sar    BYTE PTR [edi+0x41],0x8d
  40e7f0:	int3   
  40e7f1:	fld    QWORD PTR [ecx]
  40e7f3:	add    DWORD PTR [eax],eax
  40e7f5:	add    BYTE PTR [eax],al
  40e7f7:	jmp    0x40e78e
  40e7f9:	xor    DWORD PTR [ecx-0x338b7300],0xffffffe9
  40e800:	shr    esi,0xf0
  40e803:	add    BYTE PTR [ebx-0x1372fff8],cl
  40e809:	int3   
  40e80a:	add    BYTE PTR [ebx+ebp*2],dh
  40e80d:	in     eax,0xb6
  40e80f:	mov    ecx,DWORD PTR [ecx+0x4e24600]
  40e815:	iret   
  40e816:	sti    
  40e817:	push   ebp
  40e818:	add    ebx,ebp
  40e81a:	add    BYTE PTR [eax],al
  40e81c:	int3   
  40e81d:	je     0x40e7eb
  40e81f:	adc    DWORD PTR [eax-0x65],ebp
  40e822:	iret   
  40e823:	rcr    ch,0x8b
  40e826:	(bad)  
  40e827:	adc    ebp,DWORD PTR [ebp+0x26]
  40e82a:	add    BYTE PTR [eax],al
  40e82c:	mov    eax,DWORD PTR [eax]
  40e82e:	inc    ebp
  40e82f:	mov    esp,ecx
  40e831:	int3   
  40e832:	verr   cx
  40e835:	or     BYTE PTR [edx],bh
  40e837:	rcl    BYTE PTR ds:0x50c37545,0x80
  40e83e:	pop    es
  40e83f:	loopne 0x40e840
  40e841:	or     al,ah
  40e843:	add    BYTE PTR [eax],al
  40e845:	or     BYTE PTR [eax],al
  40e847:	and    BYTE PTR [edi+eax*8+0x4cc0056],cl
  40e84e:	int3   
  40e84f:	lea    ebp,[eax]
  40e851:	lock fsubr DWORD PTR [edx+0x8]
  40e855:	add    DWORD PTR [eax],0xffffff89
  40e858:	add    BYTE PTR [ebx],al
  40e85a:	call   eax
  40e85c:	push   ds
  40e85d:	xchg   ebx,eax
  40e85e:	mov    esi,0x401ec
  40e863:	or     BYTE PTR [edi-0x52],0xe1
  40e867:	int3   
  40e868:	add    DWORD PTR [ebx+0x48b8b00],ecx
  40e86e:	ror    bh,0x57
  40e871:	lea    edx,[ebp-0xfefffc]
  40e877:	scas   al,BYTE PTR es:[edi]
  40e878:	cmp    al,bh
  40e87a:	dec    ah
  40e87c:	add    BYTE PTR [ecx],al
  40e87e:	test   DWORD PTR [eax],edx
  40e880:	int3   
  40e881:	loopne 0x40e80c
  40e883:	inc    eax
  40e884:	pop    eax
  40e885:	aas    
  40e886:	mov    bl,0x85
  40e888:	int3   
  40e889:	dec    ebp
  40e88a:	add    DWORD PTR [edx-0x4f],ebp
  40e88d:	push   edi
  40e88e:	jmp    0x0:0x55e0
  40e895:	inc    ebp
  40e896:	pop    ebp
  40e897:	aam    0x48
  40e899:	dec    esi
  40e89a:	mov    dl,0x85
  40e89c:	jmp    0x40e89d
  40e89e:	mov    ecx,esi
  40e8a0:	rol    edx,1
  40e8a2:	dec    esi
  40e8a3:	mov    edi,edi
  40e8a5:	int3   
  40e8a6:	mov    ecx,DWORD PTR [ecx-0x24fc0075]
  40e8ac:	js     0x40e904
  40e8ae:	(bad)
  40e8b1:	dec    DWORD PTR [eax]
  40e8b3:	sub    eax,0xadbc39
  40e8b8:	add    BYTE PTR [ebx-0x7633ff18],cl
  40e8be:	add    BYTE PTR [eax+0xf869dd],al
  40e8c4:	je     0x40e853
  40e8c6:	sub    edx,0xfffffff3
  40e8c9:	mov    ds:0x7485002a,eax
  40e8ce:	add    DWORD PTR [eax],eax
  40e8d0:	lea    eax,[eax]
  40e8d2:	mov    DWORD PTR [edx+0x10d3f84],ebp
  40e8d8:	add    BYTE PTR [ebp-0x75],dl
  40e8db:	leave  
  40e8dc:	imul   DWORD PTR [edx]
  40e8de:	(bad)  
  40e8df:	push   esi
  40e8e0:	inc    esi
  40e8e1:	add    al,0x1
  40e8e3:	add    BYTE PTR [eax+eax*1-0x75],dh
  40e8e7:	xor    DWORD PTR [eax+0xc74e831],0xb8a58300
  40e8f1:	mov    esi,DWORD PTR [ecx*4+0x4deb]
  40e8f8:	add    BYTE PTR [eax],al
  40e8fa:	or     ah,ch
  40e8fc:	aad    0xce
  40e8fe:	sub    al,0x75
  40e900:	inc    ebp
  40e901:	add    BYTE PTR [ebx-0x19af692],cl
  40e907:	mov    ecx,esp
  40e909:	or     BYTE PTR [ebp-0x75],al
  40e90c:	or     bh,bh
  40e90e:	add    BYTE PTR [ebx],cl
  40e910:	popa   
  40e911:	cld    
  40e912:	ret    
  40e913:	inc    DWORD PTR [esi-0x34]
  40e916:	add    BYTE PTR [ebx],al
  40e918:	popa   
  40e919:	cmp    dh,bh
  40e91b:	add    BYTE PTR [ebp+0x0],dl
  40e91e:	mov    DWORD PTR [ebp+0x0],eax
  40e921:	inc    esi
  40e922:	mov    esp,DWORD PTR [ebx]
  40e924:	fwait
  40e925:	sbb    DWORD PTR [esi],edx
  40e927:	add    DWORD PTR [ebx],eax
  40e929:	mov    eax,DWORD PTR [eax]
  40e92b:	neg    BYTE PTR [esi-0x7cff1a12]
  40e931:	int3   
  40e932:	in     al,dx
  40e933:	int3   
  40e934:	int3   
  40e935:	inc    ebp
  40e936:	mov    edx,DWORD PTR [eax]
  40e938:	ja     0x40e8f6
  40e93a:	(bad)  
  40e93b:	int3   
  40e93c:	add    ah,cl
  40e93e:	mov    edi,DWORD PTR [eax+0x4de7f442]
  40e944:	add    BYTE PTR [ebx+0xffcc],cl
  40e94a:	mov    edi,DWORD PTR [eax+0x8b5c0]
  40e950:	mov    eax,DWORD PTR [eax]
  40e952:	mov    edi,DWORD PTR [esi-0x7c6e9fa1]
  40e958:	add    BYTE PTR [ebp-0x40],cl
  40e95b:	add    DWORD PTR [eax],0xffffff83
  40e95e:	pmaddwd mm5,QWORD PTR [ecx]
  40e961:	retf   
  40e962:	sub    eax,0x45016aeb
  40e967:	sbb    eax,0x1a14069
  40e96c:	int3   
  40e96d:	je     0x40e9a2
  40e96f:	add    BYTE PTR [ecx],al
  40e971:	add    DWORD PTR [eax],eax
  40e973:	or     al,0x62
  40e975:	jbe    0x40e944
  40e977:	mov    eax,DWORD PTR [ebx+0x74eb4600]
  40e97d:	call   0xddc5e9f6
  40e982:	or     BYTE PTR [ecx],al
  40e984:	mov    eax,DWORD PTR [ebp-0x60b2a600]
  40e98a:	sub    DWORD PTR [eax],eax
  40e98c:	or     al,0x0
  40e98e:	add    DWORD PTR [edi-0x66],esp
  40e991:	mov    DWORD PTR [ebp-0x7474fe75],esi
  40e997:	mov    eax,DWORD PTR [eax]
  40e999:	add    BYTE PTR [ebx+0x41e26940],cl
  40e99f:	(bad)  
  40e9a0:	(bad)  [edx-0x75]
  40e9a3:	mov    ds:0x8b52e864,al
  40e9a8:	inc    ebp
  40e9a9:	add    eax,DWORD PTR [eax]
  40e9ab:	mov    edx,DWORD PTR [esi+0x0]
  40e9ae:	add    dh,ch
  40e9b0:	dec    esp
  40e9b1:	sbb    BYTE PTR [eax-0x34],cl
  40e9b4:	add    ah,cl
  40e9b6:	mov    esp,DWORD PTR ds:0x8d05144d
  40e9bc:	add    ah,cl
  40e9be:	inc    esi
  40e9bf:	add    ah,cl
  40e9c1:	push   ebp
  40e9c2:	inc    DWORD PTR [ebp+0xb]
  40e9c5:	push   edi
  40e9c6:	outs   dx,BYTE PTR ds:[esi]
  40e9c7:	add    ecx,esp
  40e9c9:	mov    eax,DWORD PTR [eax]
  40e9cb:	jmp    0x513a87a0
  40e9d0:	add    DWORD PTR [ebx+0xc08d83],ecx
  40e9d6:	adc    eax,0x4ad67ece
  40e9db:	add    DWORD PTR [ebp-0x7f0200fd],ecx
  40e9e1:	sub    al,bl
  40e9e3:	int3   
  40e9e4:	inc    DWORD PTR [ecx]
  40e9e6:	add    BYTE PTR [ebx-0x48f77475],cl
  40e9ec:	push   edx
  40e9ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9ee:	mov    esi,0xc70808
  40e9f3:	adc    al,0xe
  40e9f5:	mov    al,0xcd
  40e9f7:	jne    0x40e9c5
  40e9f9:	add    BYTE PTR [ebx],al
  40e9fb:	inc    DWORD PTR [eax]
  40e9fd:	int3   
  40e9fe:	mov    DWORD PTR [ecx+eax*4+0x8b0ee3],edx
  40ea05:	add    BYTE PTR [ebx+0x13466b0d],cl
  40ea0b:	je     0x40ea0d
  40ea0d:	adc    DWORD PTR [ebp+0x10],0xffffff8d
  40ea11:	je     0x40e9df
  40ea13:	out    dx,eax
  40ea14:	mov    ds:0x4d8bb5de,eax
  40ea19:	add    DWORD PTR [ecx],eax
  40ea1b:	addr16 imul ebp,ebp,0x88b56a7
  40ea22:	mov    eax,DWORD PTR [eax]
  40ea24:	ror    BYTE PTR [ebx-0x300e837d],0xe2
  40ea2b:	call   0x7744ea31
  40ea30:	mov    esp,0x1d75
  40ea35:	(bad)  
  40ea36:	fld    QWORD PTR [eax]
  40ea38:	fisttp QWORD PTR [edi]
  40ea3a:	add    BYTE PTR [esi],bh
  40ea3c:	pushf  
  40ea3d:	pushf  
  40ea3e:	mov    ecx,0x5d8beb8b
  40ea43:	iret   
  40ea44:	pop    ds
  40ea45:	outs   dx,DWORD PTR ds:[esi]
  40ea46:	js     0x40ea49
  40ea48:	je     0x40e9d5
  40ea4a:	add    ah,cl
  40ea4c:	int3   
  40ea4d:	je     0x40ea4f
  40ea4f:	out    dx,al
  40ea50:	hlt    
  40ea51:	sbb    ch,BYTE PTR [edx]
  40ea53:	add    al,0x85
  40ea55:	or     al,0xf
  40ea57:	mov    al,0x15
  40ea59:	mov    ebp,0x855601e4
  40ea5e:	add    bh,al
  40ea60:	push   eax
  40ea61:	call   0xbb76ce66
  40ea66:	push   edx
  40ea67:	adc    eax,0x5bec5d10
  40ea6c:	push   ebx
  40ea6d:	dec    esi
  40ea6e:	xchg   ebx,eax
  40ea6f:	int3   
  40ea70:	add    BYTE PTR [edi],cl
  40ea72:	mov    eax,DWORD PTR [ecx+eax*1]
  40ea75:	add    esp,ecx
  40ea77:	push   ecx
  40ea78:	add    DWORD PTR [edi+0x45ff0f09],ebx
  40ea7e:	add    bl,al
  40ea80:	in     al,0x64
  40ea82:	adc    edx,DWORD PTR ds:0x8b8bcc00
  40ea88:	ret    
  40ea89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea8a:	clc    
  40ea8b:	pop    DWORD PTR [ecx-0x7c337b00]
  40ea91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea92:	sbb    edi,DWORD PTR [edx+0x46]
  40ea95:	dec    esp
  40ea97:	jne    0x40eadf
  40ea99:	mov    ecx,DWORD PTR [ecx+0x556b000c]
  40ea9f:	addr16 sub al,0xe8
  40eaa2:	push   ebp
  40eaa3:	jne    0x40eaa5
  40eaa5:	add    DWORD PTR [ecx-0x74fe611b],eax
  40eaab:	add    al,0x0
  40eaad:	xor    ebp,esp
  40eaaf:	xor    eax,DWORD PTR [eax]
  40eab1:	cs jbe 0x40eb0e
  40eab4:	in     eax,dx
  40eab5:	add    BYTE PTR [eax],al
  40eab7:	add    al,0xec
  40eab9:	add    ch,BYTE PTR [edx]
  40eabb:	push   ds
  40eabc:	test   eax,0x75ff8b01
  40eac1:	add    BYTE PTR [ebp-0x1],dl
  40eac4:	add    BYTE PTR [esi],dl
  40eac6:	pop    eax
  40eac7:	arpl   si,bp
  40eac9:	in     al,dx
  40eaca:	inc    ebp
  40eacb:	mov    ebp,esp
  40eacd:	lahf   
  40eace:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eacf:	ja     0x40ead1
  40ead1:	jne    0x40ead3
  40ead3:	add    esp,ecx
  40ead5:	add    ch,bl
  40ead7:	(bad)  
  40ead8:	call   DWORD PTR [ebx+0x2d]
  40eadb:	and    al,0x77
  40eadd:	or     BYTE PTR [ebx+0x10470100],cl
  40eae3:	dec    esi
  40eae4:	call   0xc:0x750145ff
  40eaeb:	add    BYTE PTR [esp+eax*2+0x77],dh
  40eaef:	push   ebx
  40eaf0:	retf   0x758d
  40eaf3:	dec    DWORD PTR [edi+ecx*1]
  40eaf6:	data16 out 0xc9,al
  40eaf9:	add    BYTE PTR [ebx+0x750000],cl
  40eaff:	add    BYTE PTR [esi-0x67],al
  40eb02:	popa   
  40eb03:	dec    ecx
  40eb04:	sbb    ebp,0x2cce801
  40eb0a:	test   eax,0x10ff7d45
  40eb0f:	mov    ecx,DWORD PTR [ebx+0x456a086a]
  40eb15:	or     dl,BYTE PTR [edi]
  40eb17:	add    eax,0x8383006d
  40eb1c:	add    BYTE PTR [ebx],cl
  40eb1e:	xor    edi,eax
  40eb20:	into   
  40eb21:	test   DWORD PTR [ebx+0x1ec8b8d],ecx
  40eb27:	adc    eax,0x42aedd00
  40eb2c:	pop    ss
  40eb2d:	je     0x40eb2e
  40eb2f:	add    BYTE PTR [edi+edi*8+0x51],dh
  40eb33:	push   esi
  40eb34:	retf   
  40eb35:	mov    ecx,DWORD PTR [eax*4+0x558b8b00]
  40eb3c:	add    eax,DWORD PTR [eax]
  40eb3e:	sub    eax,0xf049b77
  40eb43:	fisttp QWORD PTR [ecx-0x60ae60ba]
  40eb49:	add    ecx,DWORD PTR [ebx-0x74ff7a01]
  40eb4f:	mov    eax,DWORD PTR [ebp+0x2]
  40eb52:	jns    0x40eba6
  40eb54:	into   
  40eb55:	adc    DWORD PTR [eax-0x34],0x0
  40eb59:	retf   
  40eb5a:	stos   BYTE PTR es:[edi],al
  40eb5b:	inc    ebx
  40eb5c:	adc    DWORD PTR [ecx],eax
  40eb5e:	or     al,ah
  40eb60:	rol    al,0xcc
  40eb63:	test   DWORD PTR [ecx-0x79bd570a],ecx
  40eb69:	add    BYTE PTR [eax],cl
  40eb6b:	inc    DWORD PTR [eax]
  40eb6d:	push   0xcc1248a0
  40eb72:	add    BYTE PTR [eax],al
  40eb74:	(bad)  
  40eb75:	adc    eax,0x3700ff8b
  40eb7a:	mov    ch,0xec
  40eb7c:	mov    eax,0xc7740083
  40eb81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb82:	ins    BYTE PTR es:[edi],dx
  40eb83:	adc    BYTE PTR [eax-0x75],ah
  40eb86:	mov    ecx,esp
  40eb88:	inc    DWORD PTR [esi-0x7b]
  40eb8b:	mov    DWORD PTR [ebx-0x32f021f1],ecx
  40eb91:	add    BYTE PTR [ebp+0x1],al
  40eb94:	add    BYTE PTR [ebx-0x33ba7110],dl
  40eb9a:	call   DWORD PTR ds:0xcc000074
  40eba0:	xor    esp,DWORD PTR [ebx+0x46a9dedc]
  40eba6:	add    BYTE PTR [eax],al
  40eba8:	rcl    BYTE PTR [ecx+0xf1bb40],0x8b
  40ebaf:	add    BYTE PTR [eax],al
  40ebb1:	add    ah,cl
  40ebb3:	add    DWORD PTR [ebx+0x128089df],eax
  40ebb9:	inc    DWORD PTR [eax]
  40ebbb:	or     BYTE PTR [ebp-0x3f4cd2ae],cl
  40ebc1:	add    al,0xcc
  40ebc3:	(bad)  
  40ebc4:	jmp    0x40ebc6
  40ebc6:	int3   
  40ebc7:	int3   
  40ebc8:	int3   
  40ebc9:	fdivr  st,st(0)
  40ebcb:	sbb    BYTE PTR [edx],0xdd
  40ebce:	pop    ebp
  40ebcf:	add    BYTE PTR [ebx-0x279c6fd9],cl
  40ebd5:	fld    QWORD PTR [ebp-0x747c8b7d]
  40ebdb:	push   esi
  40ebdc:	jne    0x40ebc6
  40ebde:	xor    eax,0x8b006cfa
  40ebe3:	add    ah,cl
  40ebe5:	lock sahf 
  40ebe7:	shl    BYTE PTR [eax],1
  40ebe9:	mov    ecx,DWORD PTR [ecx+0x450000]
  40ebef:	inc    DWORD PTR [eax]
  40ebf1:	test   DWORD PTR [esi],ebp
  40ebf3:	inc    ebp
  40ebf4:	dec    DWORD PTR cs:[eax]
  40ebf7:	mov    eax,DWORD PTR [ecx+ebx*8]
  40ebfa:	adc    eax,0x8b01ec60
  40ebff:	add    BYTE PTR [eax],al
  40ec01:	int3   
  40ec02:	or     BYTE PTR [ebx-0x576c5475],cl
  40ec08:	rol    DWORD PTR [eax],0xcc
  40ec0b:	lea    ecx,[ebx-0x4948c2ca]
  40ec11:	mov    eax,DWORD PTR [eax]
  40ec13:	add    DWORD PTR [eax],0x75
  40ec16:	push   eax
  40ec17:	or     al,ch
  40ec19:	icebp  
  40ec1a:	adc    cl,dh
  40ec1c:	xchg   edx,eax
  40ec1d:	add    BYTE PTR [ecx],al
  40ec1f:	add    BYTE PTR [ebp+0x8],al
  40ec22:	add    al,0x1f
  40ec24:	fild   DWORD PTR [eax]
  40ec26:	jne    0x40ec2c
  40ec28:	add    al,ch
  40ec2a:	inc    DWORD PTR [ecx]
  40ec2c:	inc    esi
  40ec2d:	pusha  
  40ec2e:	cmp    al,0x19
  40ec30:	push   edx
  40ec31:	ror    BYTE PTR [ebx-0x6d28338c],0x55
  40ec38:	push   edx
  40ec39:	add    BYTE PTR [eax],al
  40ec3b:	dec    DWORD PTR [ebx-0x750000]
  40ec41:	daa    
  40ec42:	cwde   
  40ec43:	push   edx
  40ec44:	cwde   
  40ec45:	in     al,dx
  40ec46:	dec    DWORD PTR [ebx-0x2865c200]
  40ec4c:	repz push ebp
  40ec4e:	int3   
  40ec4f:	rol    BYTE PTR [eax],0x8b
  40ec52:	jne    0x40ebdd
  40ec54:	int3   
  40ec55:	sbb    ebx,DWORD PTR [eax+0x56]
  40ec58:	fmul   st(4),st
  40ec5a:	xor    ecx,DWORD PTR [ebx+0x236dd100]
  40ec60:	out    0x8b,al
  40ec62:	int3   
  40ec63:	mov    eax,eax
  40ec65:	in     al,dx
  40ec66:	(bad)  
  40ec67:	call   0x725a146c
  40ec6c:	jg     0x40ec3a
  40ec6e:	add    BYTE PTR [ebx-0x5e645e75],cl
  40ec74:	mov    bh,0x8b
  40ec76:	inc    ebp
  40ec77:	add    BYTE PTR [ebx+0x8748901],al
  40ec7d:	add    DWORD PTR [edi+0x42],edi
  40ec80:	xchg   edi,eax
  40ec81:	add    BYTE PTR [eax],cl
  40ec83:	test   DWORD PTR [esi+ebx*2-0x43],esi
  40ec87:	push   edi
  40ec88:	fisttp WORD PTR [eax]
  40ec8a:	add    al,0xc7
  40ec8c:	mov    eax,DWORD PTR [eax]
  40ec8e:	mov    eax,eax
  40ec90:	adc    BYTE PTR [ebx+0x15ed81d6],bl
  40ec96:	mov    edi,edi
  40ec98:	mov    ecx,DWORD PTR [edi-0x33479bb9]
  40ec9e:	mov    esi,DWORD PTR [eax+ecx*1-0x75]
  40eca2:	dec    esp
  40eca4:	add    bl,bl
  40eca6:	sbb    al,0x2a
  40eca8:	lods   al,BYTE PTR ds:[esi]
  40eca9:	add    BYTE PTR [eax],al
  40ecab:	add    BYTE PTR [ebx+0x6d3d860a],cl
  40ecb1:	inc    DWORD PTR [ebx]
  40ecb3:	lea    esi,[eax+eax*1+0x0]
  40ecb7:	mov    eax,DWORD PTR [eax]
  40ecb9:	dec    esi
  40ecba:	(bad)  
  40ecbc:	(bad)  
  40ecbe:	add    BYTE PTR [ecx],al
  40ecc0:	add    ebx,ebx
  40ecc2:	xchg   BYTE PTR [ecx],bh
  40ecc4:	fld    QWORD PTR [eax]
  40ecc6:	add    esp,ecx
  40ecc8:	dec    ebp
  40ecc9:	int3   
  40ecca:	je     0x40ec57
  40eccc:	int3   
  40eccd:	sbb    eax,DWORD PTR [esi+eiz*4+0x8b21]
  40ecd4:	je     0x40eca7
  40ecd6:	push   ebp
  40ecd7:	jns    0x40ecba
  40ecd9:	push   ebp
  40ecda:	add    BYTE PTR [edi],cl
  40ecdc:	int3   
  40ecdd:	mov    eax,DWORD PTR [ebx+0x63ebc050]
  40ece3:	mov    al,ds:0xffcc009a
  40ece8:	xor    DWORD PTR [edx-0x74344c1a],0xffffffcc
  40ecef:	mov    esi,DWORD PTR [ebp-0x34]
  40ecf2:	int3   
  40ecf3:	add    BYTE PTR [ebx-0x7e2b284],cl
  40ecf9:	add    BYTE PTR [eax],al
  40ecfb:	mov    DWORD PTR [eax],eax
  40ecfd:	pop    es
  40ecfe:	push   0xcccd82
  40ed03:	int3   
  40ed04:	add    DWORD PTR [edx-0x75],ebp
  40ed07:	(bad)  
  40ed08:	int3   
  40ed09:	(bad)  
  40ed0a:	jmp    0x40ecd4
  40ed0c:	sub    al,BYTE PTR [eax]
  40ed0e:	push   0x55
  40ed10:	mov    edi,edx
  40ed12:	add    BYTE PTR [edx+0x6a8bff4b],al
  40ed18:	(bad)  [edx+0x10]
  40ed1b:	int3   
  40ed1c:	inc    ebp
  40ed1d:	xchg   esi,eax
  40ed1e:	xchg   ebp,eax
  40ed1f:	jecxz  0x40ed4e
  40ed21:	int3   
  40ed22:	int3   
  40ed23:	add    DWORD PTR ds:0xa1e824d9,edx
  40ed29:	add    BYTE PTR [eax],cl
  40ed2b:	int3   
  40ed2c:	mov    DWORD PTR [eax],eax
  40ed2e:	or     al,0x8b
  40ed30:	add    ah,dh
  40ed32:	test   DWORD PTR [ebx+0x4e],edx
  40ed35:	add    BYTE PTR [ebx+0x7b2a8b8b],al
  40ed3b:	jg     0x40edb2
  40ed3d:	push   eax
  40ed3e:	test   esp,ecx
  40ed40:	je     0x40ed97
  40ed42:	add    BYTE PTR [ebx-0x3452d48c],cl
  40ed48:	adc    al,0x0
  40ed4a:	add    BYTE PTR [ecx],al
  40ed4c:	je     0x40eda6
  40ed4e:	dec    ecx
  40ed4f:	enter  0x8b27,0x83
  40ed53:	mov    ecx,esp
  40ed55:	push   ebp
  40ed56:	mov    eax,DWORD PTR [ecx]
  40ed58:	int3   
  40ed59:	push   es
  40ed5a:	adc    cl,bh
  40ed5c:	or     DWORD PTR [ebx+0x43080083],0xffffffeb
  40ed63:	sub    BYTE PTR [ebx-0x75],0xcc
  40ed67:	dec    DWORD PTR [ecx+0x75ddff00]
  40ed6d:	or     BYTE PTR ds:0x83852d36,dh
  40ed73:	add    BYTE PTR [ebp-0x51],al
  40ed76:	fdivr  st,st(1)
  40ed78:	xor    al,0x75
  40ed7a:	add    BYTE PTR [ebx+0x8cc5d8b],cl
  40ed80:	mov    edi,esp
  40ed82:	fdiv   DWORD PTR [ebx+0x36]
  40ed85:	int3   
  40ed86:	int3   
  40ed87:	jne    0x40ed14
  40ed89:	and    eax,0xf539e3
  40ed8e:	inc    DWORD PTR [ebx]
  40ed90:	mov    eax,DWORD PTR [eax]
  40ed92:	dec    ebp
  40ed93:	add    BYTE PTR [ebx+0x434cfe64],cl
  40ed99:	mov    eax,DWORD PTR [eax]
  40ed9b:	add    BYTE PTR [ebx-0x12d7c6cf],cl
  40eda1:	mov    eax,DWORD PTR [eax]
  40eda3:	mov    edi,edi
  40eda5:	add    bh,bh
  40eda7:	adc    eax,0x42793889
  40edac:	cmp    esi,DWORD PTR [edi+edi*8+0x0]
  40edb0:	je     0x40ede2
  40edb2:	mov    ds:0x8b2ef8,al
  40edb7:	mov    edx,DWORD PTR [eax]
  40edb9:	inc    ebp
  40edba:	inc    ebp
  40edbb:	add    BYTE PTR [eax],al
  40edbd:	xchg   esp,eax
  40edbe:	sub    DWORD PTR [eax-0x58],ebx
  40edc1:	inc    DWORD PTR [ecx]
  40edc3:	add    BYTE PTR [eax],al
  40edc5:	and    eax,DWORD PTR [ebp-0x34]
  40edc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edc9:	int3   
  40edca:	dec    ebp
  40edcb:	add    BYTE PTR [ecx],al
  40edcd:	add    BYTE PTR [esp+ecx*8],al
  40edd0:	add    BYTE PTR [ebx+0x66],dl
  40edd3:	push   ds
  40edd4:	or     al,BYTE PTR [eax]
  40edd6:	mov    eax,DWORD PTR [eax]
  40edd8:	add    esp,edi
  40edda:	aas    
  40eddb:	xor    al,0xcb
  40eddd:	mov    edi,edi
  40eddf:	fld    QWORD PTR [eax]
  40ede1:	mov    ecx,DWORD PTR [ebx*8+0x1a96fb45]
  40ede8:	std    
  40ede9:	add    DWORD PTR [ebx-0x68097500],ecx
  40edef:	push   ebx
  40edf0:	add    BYTE PTR [eax],0x0
  40edf3:	add    BYTE PTR [ebp-0x34],al
  40edf6:	add    ecx,esp
  40edf8:	mov    edx,DWORD PTR ds:0xedfc74
  40edfe:	je     0x40ee00
  40ee00:	(bad)  
  40ee01:	jmp    0x343d6787
  40ee06:	mov    ecx,DWORD PTR [ecx+0xffcccc]
  40ee0c:	push   ebp
  40ee0d:	loop   0x40ee6e
  40ee0f:	out    0xad,al
  40ee11:	jmp    0x40ed9c
  40ee13:	int3   
  40ee14:	mov    eax,edx
  40ee16:	jmp    0x40ee07
  40ee18:	sub    al,0xff
  40ee1a:	pop    ebp
  40ee1b:	int3   
  40ee1c:	dec    esp
  40ee1e:	add    eax,ebp
  40ee20:	add    eax,ebx
  40ee22:	push   ebp
  40ee23:	mov    ebp,esp
  40ee25:	sub    esp,0x8c
  40ee2b:	push   ebx
  40ee2c:	push   esi
  40ee2d:	push   edi
  40ee2e:	push   0x9907
  40ee33:	push   0x7
  40ee35:	xor    esi,esi
  40ee37:	push   esi
  40ee38:	call   DWORD PTR ds:0x418008
  40ee3e:	push   esi
  40ee3f:	mov    DWORD PTR [ebp-0x10],eax
  40ee42:	mov    DWORD PTR [ebp-0xc],0x85
  40ee49:	call   DWORD PTR ds:0x418048
  40ee4f:	lea    eax,[ebp-0x60]
  40ee52:	push   eax
  40ee53:	call   DWORD PTR ds:0x418060
  40ee59:	lea    eax,[ebp-0x60]
  40ee5c:	push   eax
  40ee5d:	call   DWORD PTR ds:0x418034
  40ee63:	push   0x3
  40ee65:	pop    ebx
  40ee66:	push   esi
  40ee67:	mov    DWORD PTR [ebp-0x44],0x30
  40ee6e:	mov    DWORD PTR [ebp-0x40],ebx
  40ee71:	mov    DWORD PTR [ebp-0x3c],esi
  40ee74:	mov    DWORD PTR [ebp-0x38],esi
  40ee77:	mov    DWORD PTR [ebp-0x34],esi
  40ee7a:	call   DWORD PTR ds:0x418030
  40ee80:	mov    edi,0x7f00
  40ee85:	push   edi
  40ee86:	push   esi
  40ee87:	mov    DWORD PTR [ebp-0x30],eax
  40ee8a:	call   DWORD PTR ds:0x4180a4
  40ee90:	push   edi
  40ee91:	push   esi
  40ee92:	mov    DWORD PTR [ebp-0x2c],eax
  40ee95:	call   DWORD PTR ds:0x4180a8
  40ee9b:	push   esi
  40ee9c:	mov    DWORD PTR [ebp-0x28],eax
  40ee9f:	call   DWORD PTR ds:0x41800c
  40eea5:	push   edi
  40eea6:	push   esi
  40eea7:	mov    DWORD PTR [ebp-0x24],eax
  40eeaa:	mov    DWORD PTR [ebp-0x20],esi
  40eead:	mov    DWORD PTR [ebp-0x1c],0x4180e4
  40eeb4:	call   DWORD PTR ds:0x4180a4
  40eeba:	mov    DWORD PTR [ebp-0x18],eax
  40eebd:	mov    eax,ds:0x419008
  40eec2:	mov    ds:0x419054,eax
  40eec7:	lea    eax,[ebp-0x44]
  40eeca:	push   eax
  40eecb:	call   DWORD PTR ds:0x4180ac
  40eed1:	lea    eax,[ebp-0x14]
  40eed4:	push   eax
  40eed5:	push   0x1
  40eed7:	call   DWORD PTR ds:0x4180c4
  40eedd:	mov    eax,DWORD PTR [ebp-0x14]
  40eee0:	mov    ecx,DWORD PTR [eax]
  40eee2:	lea    edx,[ebp-0x48]
  40eee5:	push   edx
  40eee6:	push   0x4181e0
  40eeeb:	push   eax
  40eeec:	call   DWORD PTR [ecx]
  40eeee:	mov    ds:0x4194b8,eax
  40eef3:	push   0xad
  40eef8:	lea    eax,[ebp-0xc]
  40eefb:	push   eax
  40eefc:	call   DWORD PTR ds:0x418020
  40ef02:	mov    edi,DWORD PTR [ebp+0x8]
  40ef05:	mov    DWORD PTR [ebp-0x8],ebx
  40ef08:	mov    DWORD PTR [ebp-0x4],esi
  40ef0b:	mov    eax,ds:0x4194b4
  40ef10:	mov    ecx,DWORD PTR [ebp-0x4]
  40ef13:	mov    eax,DWORD PTR [eax+ecx*4]
  40ef16:	mov    ecx,DWORD PTR ds:0x4194b8
  40ef1c:	lea    eax,[eax+ecx*1+0x699d963a]
  40ef23:	mov    DWORD PTR [edi],eax
  40ef25:	lea    eax,[ebp-0x8c]
  40ef2b:	push   eax
  40ef2c:	push   esi
  40ef2d:	push   esi
  40ef2e:	call   DWORD PTR ds:0x418024
  40ef34:	xor    eax,eax
  40ef36:	add    edi,0x4
  40ef39:	cmp    DWORD PTR [ebp-0x8],ebx
  40ef3c:	setne  al
  40ef3f:	add    eax,0x2
  40ef42:	add    DWORD PTR [ebp-0x4],eax
  40ef45:	cmp    DWORD PTR [ebp-0x4],0xcd
  40ef4c:	mov    DWORD PTR [ebp-0x8],eax
  40ef4f:	jb     0x40ef0b
  40ef51:	mov    eax,ds:0x4194b8
  40ef56:	xor    eax,0x2a27270f
  40ef5b:	add    eax,0x5bdbf3ed
  40ef60:	mov    DWORD PTR [edi],eax
  40ef62:	add    edi,0x4
  40ef65:	call   DWORD PTR ds:0x418028
  40ef6b:	mov    DWORD PTR [ebp-0x8],ebx
  40ef6e:	mov    DWORD PTR [ebp-0x4],esi
  40ef71:	mov    eax,ds:0x4194a4
  40ef76:	mov    ecx,DWORD PTR [ebp-0x4]
  40ef79:	mov    eax,DWORD PTR [eax+ecx*4]
  40ef7c:	sub    eax,DWORD PTR ds:0x4194b8
  40ef82:	push   0x80
  40ef87:	push   0x90
  40ef8c:	push   esi
  40ef8d:	add    eax,0x4cab703f
  40ef92:	push   esi
  40ef93:	mov    DWORD PTR [edi],eax
  40ef95:	call   DWORD PTR ds:0x418010
  40ef9b:	mov    DWORD PTR [ebp+0x8],eax
  40ef9e:	xor    eax,eax
  40efa0:	add    edi,0x4
  40efa3:	cmp    DWORD PTR [ebp-0x8],ebx
  40efa6:	setne  al
  40efa9:	add    eax,0x2
  40efac:	add    DWORD PTR [ebp-0x4],eax
  40efaf:	cmp    DWORD PTR [ebp-0x4],0xca
  40efb6:	mov    DWORD PTR [ebp-0x8],eax
  40efb9:	jb     0x40ef71
  40efbb:	mov    DWORD PTR [ebp-0x8],ebx
  40efbe:	xor    eax,eax
  40efc0:	mov    ecx,DWORD PTR ds:0x419454
  40efc6:	mov    ecx,DWORD PTR [ecx+eax*4]
  40efc9:	mov    edx,DWORD PTR ds:0x4194b8
  40efcf:	lea    ecx,[ecx+edx*1-0x749f1bb9]
  40efd6:	mov    DWORD PTR [edi],ecx
  40efd8:	xor    ecx,ecx
  40efda:	add    edi,0x4
  40efdd:	cmp    DWORD PTR [ebp-0x8],ebx
  40efe0:	setne  cl
  40efe3:	add    ecx,0x2
  40efe6:	add    eax,ecx
  40efe8:	mov    DWORD PTR [ebp-0x8],ecx
  40efeb:	cmp    eax,0xe6
  40eff0:	jb     0x40efc0
  40eff2:	lea    eax,[ebp-0x68]
  40eff5:	push   eax
  40eff6:	call   DWORD PTR ds:0x41802c
  40effc:	mov    eax,ds:0x4194b8
  40f001:	add    eax,0x201802a6
  40f006:	mov    DWORD PTR [edi],eax
  40f008:	add    edi,0x4
  40f00b:	mov    DWORD PTR [ebp-0x8],ebx
  40f00e:	mov    DWORD PTR [ebp-0x4],esi
  40f011:	push   0xad
  40f016:	lea    eax,[ebp-0xc]
  40f019:	push   eax
  40f01a:	call   DWORD PTR ds:0x418020
  40f020:	mov    eax,DWORD PTR [ebp-0x4]
  40f023:	mov    ecx,DWORD PTR ds:0x4194b8
  40f029:	shl    eax,0x2
  40f02c:	add    eax,0x402cf9
  40f031:	mov    eax,DWORD PTR [eax]
  40f033:	push   0x36
  40f035:	lea    eax,[eax+ecx*1+0x210ce79b]
  40f03c:	push   esi
  40f03d:	mov    DWORD PTR [edi],eax
  40f03f:	call   DWORD PTR ds:0x4180b0
  40f045:	xor    eax,eax
  40f047:	add    edi,0x4
  40f04a:	cmp    DWORD PTR [ebp-0x8],ebx
  40f04d:	setne  al
  40f050:	add    eax,0x2
  40f053:	add    DWORD PTR [ebp-0x4],eax
  40f056:	cmp    DWORD PTR [ebp-0x4],0xa2
  40f05d:	mov    DWORD PTR [ebp-0x8],eax
  40f060:	jb     0x40f011
  40f062:	mov    eax,0x65384caa
  40f067:	sub    eax,DWORD PTR ds:0x4194b8
  40f06d:	mov    DWORD PTR [edi],eax
  40f06f:	mov    edi,DWORD PTR ds:0x418014
  40f075:	cmp    DWORD PTR [ebp-0x10],esi
  40f078:	je     0x40f07f
  40f07a:	push   DWORD PTR [ebp-0x10]
  40f07d:	call   edi
  40f07f:	cmp    DWORD PTR [ebp+0x8],esi
  40f082:	je     0x40f089
  40f084:	push   DWORD PTR [ebp+0x8]
  40f087:	call   edi
  40f089:	lea    eax,[ebp-0x60]
  40f08c:	push   eax
  40f08d:	call   DWORD PTR ds:0x418040
  40f093:	lea    eax,[ebp-0x60]
  40f096:	push   eax
  40f097:	call   DWORD PTR ds:0x418044
  40f09d:	pop    edi
  40f09e:	pop    esi
  40f09f:	pop    ebx
  40f0a0:	leave  
  40f0a1:	ret    
  40f0a2:	adc    BYTE PTR [ebp-0x6c],dl
  40f0a5:	or     al,0x0
  40f0a7:	add    BYTE PTR [ebx-0x37516c40],cl
  40f0ad:	cmp    eax,DWORD PTR [ebx+0x7400cc85]
  40f0b3:	xor    eax,DWORD PTR [ebx*2-0x32a643f1]
  40f0ba:	(bad)  
  40f0bb:	inc    DWORD PTR [eax]
  40f0bd:	add    BYTE PTR [ebx],ch
  40f0bf:	imul   edx,DWORD PTR [edi+0xff8b3c],0xffffffff
  40f0c6:	or     BYTE PTR [eax+eax*1-0x34],dh
  40f0ca:	mov    cl,0x34
  40f0cc:	mov    ds:0xcc00001c,eax
  40f0d1:	int3   
  40f0d2:	or     al,ah
  40f0d4:	mov    DWORD PTR ds:0xff000375,ebp
  40f0da:	lea    ecx,[ecx-0x6af8ff23]
  40f0e0:	scas   al,BYTE PTR es:[edi]
  40f0e1:	loop   0x40f0e2
  40f0e3:	inc    ebp
  40f0e4:	add    ah,cl
  40f0e6:	add    DWORD PTR [eax+0xf01eaa8],esp
  40f0ec:	int3   
  40f0ed:	add    BYTE PTR [ebp+0x46],cl
  40f0f0:	int3   
  40f0f1:	add    DWORD PTR [edi-0x46],ecx
  40f0f4:	mov    ecx,0x7474e842
  40f0f9:	add    ecx,ecx
  40f0fb:	stos   DWORD PTR es:[edi],eax
  40f0fc:	addr16 cmp eax,0xffcc00ff
  40f102:	int3   
  40f103:	add    DWORD PTR [eax+edx*1+0x17],esi
  40f107:	stos   DWORD PTR es:[edi],eax
  40f108:	rcr    BYTE PTR [esi],1
  40f10a:	int3   
  40f10b:	add    ah,cl
  40f10d:	loopne 0x40f146
  40f10f:	repnz push ebp
  40f111:	cmc    
  40f112:	and    eax,0xffffff8b
  40f115:	add    BYTE PTR [ebx+0x188900cc],cl
  40f11b:	call   DWORD PTR [ebx]
  40f11d:	or     ah,cl
  40f11f:	inc    ebp
  40f120:	int3   
  40f121:	add    BYTE PTR [edx+eax*1],dl
  40f124:	adc    al,0xe1
  40f126:	lea    eax,[ebx-0x7433aa00]
  40f12c:	or     al,0x0
  40f12e:	(bad)  
  40f12f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f130:	jnp    0x40f109
  40f132:	add    ebp,ebx
  40f134:	fld    QWORD PTR [ecx]
  40f136:	or     al,0x41
  40f138:	fwait
  40f139:	xchg   esp,ecx
  40f13b:	je     0x40f0c8
  40f13d:	add    BYTE PTR [eax],al
  40f13f:	xor    edx,DWORD PTR [ebp+0x75]
  40f142:	dec    ecx
  40f143:	aad    0x25
  40f145:	xchg   ebx,eax
  40f146:	add    al,ch
  40f148:	sbb    ebp,0xfffffff6
  40f14b:	int3   
  40f14c:	xchg   esi,eax
  40f14d:	or     BYTE PTR [ebx+0x5501850c],0xcc
  40f154:	or     esp,0xffffffa9
  40f157:	pop    es
  40f158:	inc    ebp
  40f159:	sub    ebx,ebp
  40f15b:	or     al,0x74
  40f15d:	mov    esi,DWORD PTR [ebx+0x18]
  40f160:	sub    DWORD PTR [edx],0x8b008b
  40f166:	test   DWORD PTR [ebp+0x0],eax
  40f169:	rol    BYTE PTR [ebx-0x140d0cc8],0xdd
  40f170:	int3   
  40f171:	mov    esp,DWORD PTR [esi-0x9562ad]
  40f177:	mov    DWORD PTR [eax],eax
  40f179:	or     BYTE PTR [ecx],al
  40f17b:	call   0xd6bcfa4c
  40f180:	test   DWORD PTR [edi],ebx
  40f182:	add    ch,bl
  40f184:	cmp    edi,0x63
  40f187:	call   0x8c401810
  40f18c:	add    DWORD PTR [eax],ecx
  40f18e:	add    DWORD PTR [eax],eax
  40f190:	mov    DWORD PTR [eax],eax
  40f192:	push   edi
  40f193:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f194:	inc    ebx
  40f195:	in     al,dx
  40f196:	je     0x40f20d
  40f198:	add    BYTE PTR [ebx-0xc007106],cl
  40f19e:	jmp    0x40f12b
  40f1a0:	add    eax,DWORD PTR [eax]
  40f1a2:	dec    esp
  40f1a4:	add    BYTE PTR [eax],al
  40f1a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1a7:	mov    cl,0x80
  40f1a9:	jno    0x40f220
  40f1ab:	dec    esp
  40f1ad:	mov    eax,DWORD PTR [edx+0x51]
  40f1b0:	pop    ebx
  40f1b1:	das    
  40f1b2:	push   esi
  40f1b3:	add    BYTE PTR [ebx-0x743376f8],cl
  40f1b9:	mov    ecx,edi
  40f1bb:	pop    ss
  40f1bc:	stos   DWORD PTR es:[edi],eax
  40f1bd:	adc    esp,ecx
  40f1bf:	add    BYTE PTR [eax*2-0x5ce69216],cl
  40f1c6:	add    BYTE PTR [ecx*2+0x33eb55],al
  40f1cd:	or     al,0x54
  40f1cf:	gs jno 0x40f23a
  40f1d2:	mov    eax,DWORD PTR [ecx]
  40f1d4:	test   DWORD PTR [ebp+0x4e],eax
  40f1d7:	sub    al,0x5d
  40f1d9:	loop   0x40f1f0
  40f1db:	int3   
  40f1dc:	jne    0x8b48f2ae
  40f1e2:	out    0x7d,al
  40f1e4:	rol    BYTE PTR [edx+0x8beb04],cl
  40f1ea:	std    
  40f1eb:	xor    DWORD PTR [esp+eax*8-0x77],esi
  40f1ef:	add    BYTE PTR [eax],cl
  40f1f1:	mov    ecx,DWORD PTR [ebx+0x30018b85]
  40f1f7:	xor    eax,0x5f99
  40f1fc:	(bad)  
  40f1fd:	dec    edx
  40f1ff:	leave  
  40f200:	js     0x40f252
  40f202:	int3   
  40f203:	rol    BYTE PTR [eax],0x8b
  40f206:	push   eax
  40f207:	add    BYTE PTR [ebx+0x55a87145],al
  40f20d:	sbb    eax,0x8bcc00
  40f212:	cmp    eax,0x743a3767
  40f217:	int3   
  40f218:	mov    eax,DWORD PTR [eax]
  40f21a:	mov    eax,DWORD PTR [ebx+0x58aff89]
  40f220:	xor    DWORD PTR [eax-0x74ff76ff],edx
  40f226:	cld    
  40f227:	iret   
  40f228:	and    BYTE PTR [ebx],cl
  40f22a:	add    edi,edi
  40f22c:	dec    DWORD PTR [ebx+0x83500c]
  40f232:	jmp    0x4bfddb4
  40f237:	push   0x0
  40f239:	pop    ebp
  40f23a:	jb     0x40f292
  40f23c:	xchg   ebx,eax
  40f23d:	loop   0x40f1ca
  40f23f:	mov    ecx,DWORD PTR [ebx-0x74fe3301]
  40f245:	jne    0x40f250
  40f247:	sub    BYTE PTR [ebx+edi*2],0x8b
  40f24b:	lea    edx,ds:0xb32a34c0
  40f251:	mov    BYTE PTR [ebp-0x1],bl
  40f254:	adc    eax,0x8cc08
  40f259:	mov    ebx,edi
  40f25b:	adc    al,0x14
  40f25d:	xor    DWORD PTR [edi+edi*8],ecx
  40f260:	add    bh,al
  40f262:	popa   
  40f263:	jle    0x40f237
  40f265:	test   eax,0xc0008d8b
  40f26a:	dec    DWORD PTR [ebx-0xd4133ff]
  40f270:	xchg   DWORD PTR [eax],ebx
  40f272:	lea    eax,[eax]
  40f274:	mov    eax,DWORD PTR [eax]
  40f276:	loop   0x40f2e5
  40f278:	pop    ds
  40f279:	xchg   ebp,eax
  40f27a:	mov    edi,edi
  40f27c:	(bad)  
  40f27d:	jne    0x40f27f
  40f27f:	push   ebp
  40f280:	or     al,0x85
  40f282:	inc    edx
  40f283:	add    dl,BYTE PTR [ebx]
  40f285:	mov    ah,0x8b
  40f287:	or     al,0x0
  40f289:	int3   
  40f28a:	inc    eax
  40f28b:	hlt    
  40f28c:	xchg   esp,eax
  40f28d:	stos   BYTE PTR es:[edi],al
  40f28e:	add    eax,DWORD PTR [ebx-0x3800fea3]
  40f294:	mov    edx,DWORD PTR [eax]
  40f296:	add    DWORD PTR [ebp-0x2e],0xffffffb6
  40f29a:	inc    ebp
  40f29b:	push   0xffffffcc
  40f29d:	adc    BYTE PTR [ecx-0x33ac23a5],dl
  40f2a3:	int3   
  40f2a4:	push   esi
  40f2a5:	add    BYTE PTR [eax],al
  40f2a7:	int3   
  40f2a8:	inc    DWORD PTR [ebx+0x4fa2e984]
  40f2ae:	add    DWORD PTR [eax],eax
  40f2b0:	int3   
  40f2b1:	push   esi
  40f2b2:	iret   
  40f2b3:	add    BYTE PTR [ebp+0xffa2],0x8d
  40f2ba:	or     bh,bh
  40f2bc:	or     BYTE PTR [ebp-0x4b5d92d6],cl
  40f2c2:	add    ah,cl
  40f2c4:	add    BYTE PTR [edx+eax*8],cl
  40f2c7:	scas   al,BYTE PTR es:[edi]
  40f2c8:	ja     0x40f297
  40f2ca:	int3   
  40f2cb:	dec    DWORD PTR [ebx+0x174016a]
  40f2d1:	int3   
  40f2d2:	neg    DWORD PTR [esi]
  40f2d4:	mov    edx,fs
  40f2d6:	(bad)  
  40f2d8:	push   eax
  40f2d9:	mov    esp,DWORD PTR [ebx+0x19b1055]
  40f2df:	je     0x40f2e1
  40f2e1:	add    BYTE PTR [ecx],al
  40f2e3:	add    BYTE PTR [eax],al
  40f2e5:	int3   
  40f2e6:	dec    esp
  40f2e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2e8:	inc    ebp
  40f2e9:	lea    eax,[ecx]
  40f2eb:	add    BYTE PTR [eax],al
  40f2ed:	or     al,0x69
  40f2ef:	add    esi,ebp
  40f2f1:	loop   0x40f2f3
  40f2f3:	jne    0x40f2f5
  40f2f5:	jne    0x40f2be
  40f2f7:	add    al,ch
  40f2f9:	add    cl,bl
  40f2fb:	(bad)
  40f2fe:	add    BYTE PTR [ecx],al
  40f300:	add    BYTE PTR [eax],al
  40f302:	cmp    BYTE PTR [eax-0x7c761345],0x0
  40f309:	mov    eax,DWORD PTR [eax]
  40f30b:	add    DWORD PTR [eax],eax
  40f30d:	add    DWORD PTR [ecx-0x1d],edi
  40f310:	or     al,0x28
  40f312:	mov    ecx,DWORD PTR [esp+esi*2]
  40f315:	add    BYTE PTR [edi+0x8],dh
  40f318:	(bad)  
  40f319:	mov    al,0xc
  40f31b:	int3   
  40f31c:	add    BYTE PTR [ebp-0x75],dl
  40f31f:	add    BYTE PTR [eax+ecx*1],cl
  40f322:	cmc    
  40f323:	xchg   edx,eax
  40f324:	xchg   edx,eax
  40f325:	xchg   esi,eax
  40f326:	dec    ebp
  40f327:	rol    BYTE PTR [ecx],0x8b
  40f32a:	ret    
  40f32b:	xor    al,0xea
  40f32d:	ins    BYTE PTR es:[edi],dx
  40f32e:	in     al,0x8b
  40f330:	ror    BYTE PTR [eax],0x46
  40f333:	test   eax,0x8e4239b
  40f338:	call   0x14ff3fd
  40f33d:	in     al,dx
  40f33e:	add    al,0x11
  40f340:	xor    BYTE PTR [esi-0x33007625],cl
  40f346:	add    BYTE PTR ds:0x545bc1,dl
  40f34c:	int3   
  40f34d:	je     0x40f2da
  40f34f:	add    ah,cl
  40f351:	adc    BYTE PTR [eax],al
  40f353:	sub    al,0x7c
  40f355:	jae    0x40f3af
  40f357:	add    BYTE PTR [ebx-0x28373ff8],al
  40f35d:	fdivr  QWORD PTR [edi+edi*8+0x89c0]
  40f364:	or     BYTE PTR [eax],al
  40f366:	add    BYTE PTR [edx+ebp*8+0x2c],al
  40f36a:	or     esp,0x61ff8b8d
  40f370:	sti    
  40f371:	and    eax,esi
  40f373:	inc    ebp
  40f374:	int3   
  40f375:	add    edi,eax
  40f377:	mov    DWORD PTR [eax],edx
  40f379:	add    DWORD PTR [ebp+0x271f9a06],0x0
  40f380:	int3   
  40f381:	or     BYTE PTR [ebp+0x39ff7c58],al
  40f387:	in     al,dx
  40f388:	dec    esp
  40f38a:	add    bh,bh
  40f38c:	or     al,0x0
  40f38e:	add    al,0x2f
  40f390:	lea    edx,[edi+edx*1+0x8b000c]
  40f397:	adc    DWORD PTR [ebp-0x47],edi
  40f39a:	js     0x40f368
  40f39c:	mov    edi,edi
  40f39e:	mov    eax,DWORD PTR [eax]
  40f3a0:	xor    eax,DWORD PTR [eax]
  40f3a2:	int3   
  40f3a3:	xchg   edx,eax
  40f3a4:	pop    ebp
  40f3a5:	push   0xff01dd4d
  40f3aa:	add    BYTE PTR [edi],cl
  40f3ac:	int    0x6b
  40f3ae:	pop    ss
  40f3af:	jne    0xc9fc40
  40f3b5:	add    BYTE PTR [eax],al
  40f3b7:	loop   0x40f3d7
  40f3b9:	cmp    BYTE PTR [eax+0x38b008d],0xc4
  40f3c0:	addr16 call 0x8bca511e
  40f3c6:	add    ecx,esp
  40f3c8:	(bad)  
  40f3c9:	in     al,dx
  40f3ca:	add    dl,dh
  40f3cc:	cmp    edi,DWORD PTR [eax+eiz*4]
  40f3cf:	int3   
  40f3d0:	int3   
  40f3d1:	inc    ebp
  40f3d2:	mov    esp,DWORD PTR [edx+0xe]
  40f3d5:	pop    edi
  40f3d6:	jmp    0x85c0:0xe8030000
  40f3dd:	add    BYTE PTR [ebp-0x1ce302f1],al
  40f3e3:	add    DWORD PTR [ebx-0x24c0cd00],ecx
  40f3e9:	pusha  
  40f3ea:	pop    eax
  40f3eb:	jae    0x13ff3f9
  40f3f1:	rol    BYTE PTR [eax],0x91
  40f3f4:	stos   BYTE PTR es:[edi],al
  40f3f5:	pandn  mm0,QWORD PTR [ecx]
  40f3f8:	sar    bh,0xcc
  40f3fb:	xor    bl,BYTE PTR [ebx-0x32]
  40f3fe:	iret   
  40f3ff:	or     DWORD PTR [eax],0xffffffcc
  40f402:	(bad)  
  40f403:	push   DWORD PTR [ebx]
  40f405:	int3   
  40f406:	adc    eax,0x527286ed
  40f40b:	inc    ebp
  40f40c:	mov    eax,DWORD PTR [eax]
  40f40e:	add    BYTE PTR [edi+eax*1+0x42],dh
  40f412:	xchg   ecx,eax
  40f413:	int3   
  40f414:	add    BYTE PTR [ebp+0x86ac0ff],cl
  40f41a:	mov    ebp,esp
  40f41c:	inc    esp
  40f41d:	(bad)  
  40f41e:	sbb    al,BYTE PTR [eax]
  40f420:	mov    eax,DWORD PTR [eax]
  40f422:	push   ebp
  40f423:	daa    
  40f424:	pop    es
  40f425:	pop    edx
  40f426:	cmp    cl,BYTE PTR [ecx+0x85dff]
  40f42c:	add    BYTE PTR [esi-0x34],dl
  40f42f:	ret    0x73a4
  40f432:	or     cl,BYTE PTR [ebx-0x1d0072f4]
  40f438:	(bad)
  40f43c:	or     al,0xcc
  40f43e:	call   DWORD PTR [ebp+0x0]
  40f441:	or     BYTE PTR [ecx],al
  40f443:	js     0x40f456
  40f445:	sub    al,0xa8
  40f447:	int3   
  40f448:	fisttp QWORD PTR [ebx+0x6cf6ce8b]
  40f44e:	inc    esp
  40f44f:	inc    DWORD PTR [eax]
  40f451:	jmp    0x40f4c8
  40f453:	mov    ebp,DWORD PTR [edx+0x5d]
  40f456:	add    bh,al
  40f458:	pop    ds
  40f459:	mov    bh,0xc0
  40f45b:	add    ah,cl
  40f45d:	mov    edi,edi
  40f45f:	data16 fld DWORD PTR [eax-0x64]
  40f463:	add    ecx,DWORD PTR [edi]
  40f465:	add    BYTE PTR [ebx-0x74ff7423],cl
  40f46b:	inc    eax
  40f46c:	ror    DWORD PTR ds:[edi+0x0],cl
  40f470:	int3   
  40f471:	add    al,ch
  40f473:	mov    WORD PTR [ebx-0x76137593],?
  40f479:	add    esp,ecx
  40f47b:	mov    DWORD PTR [eax],eax
  40f47d:	add    ecx,esp
  40f47f:	fs sbb eax,0x10006643
  40f485:	add    BYTE PTR [ebx+0x1d31b52],cl
  40f48b:	add    edi,edi
  40f48d:	inc    DWORD PTR [eax]
  40f48f:	add    DWORD PTR [eax],0x1
  40f492:	frstor [ecx+0xf13c3]
  40f498:	add    BYTE PTR [eax],al
  40f49a:	(bad)  
  40f49b:	or     eax,0xcc1bde7c
  40f4a0:	mov    ecx,esp
  40f4a2:	or     esp,0x74
  40f4a5:	ror    BYTE PTR [ebx*1-0x3360f04e],0x45
  40f4ad:	add    BYTE PTR [ecx+0xd013d6d],cl
  40f4b3:	pop    ebp
  40f4b4:	int3   
  40f4b5:	mov    edx,DWORD PTR ds:0xddcc
  40f4bb:	(bad)  
  40f4bc:	in     eax,dx
  40f4bd:	sub    al,0x48
  40f4bf:	or     al,0x33
  40f4c1:	add    BYTE PTR [esi+0x2e],dl
  40f4c4:	retf   0x18d
  40f4c7:	test   DWORD PTR [ebx+0x6a0f008b],ecx
  40f4cd:	xor    edx,DWORD PTR ds:0x4dad8b34
  40f4d3:	lea    ecx,[eax]
  40f4d5:	mov    ebp,eax
  40f4d7:	jbe    0x40f4f9
  40f4d9:	pop    ebx
  40f4da:	loopne 0x40f4dc
  40f4dc:	dec    ebp
  40f4dd:	add    DWORD PTR [eax],eax
  40f4df:	dec    DWORD PTR [eax]
  40f4e1:	add    ah,cl
  40f4e3:	fs je  0x40f4a9
  40f4e6:	mov    cl,BYTE PTR [ebp-0x323f7500]
  40f4ec:	inc    ecx
  40f4ed:	arpl   WORD PTR [esi],cx
  40f4ef:	add    BYTE PTR [ebp-0x1],cl
  40f4f2:	call   0x4245c3
  40f4f7:	sti    
  40f4f8:	(bad)  
  40f4f9:	jecxz  0x40f499
  40f4fb:	sub    esp,0x45
  40f4fe:	mov    edx,ebx
  40f500:	call   0xeb00:0x1e8262e
  40f507:	push   esi
  40f508:	or     al,0xcc
  40f50a:	add    bh,bl
  40f50c:	retf   0xccae
  40f50f:	int3   
  40f510:	add    BYTE PTR [eax],al
  40f512:	or     al,0xe4
  40f514:	test   al,0x16
  40f516:	jb     0x40f527
  40f518:	add    ah,cl
  40f51a:	in     al,dx
  40f51b:	add    ah,cl
  40f51d:	dec    DWORD PTR [ebx*4+0x6eab8e]
  40f524:	int3   
  40f525:	ror    ah,0x68
  40f528:	jmp    0x402ed0
  40f52d:	inc    ebp
  40f52e:	dec    esp
  40f530:	add    DWORD PTR [ebx-0x73f606bb],eax
  40f536:	sub    eax,0xcc8900cc
  40f53b:	xchg   BYTE PTR [edx],bh
  40f53d:	xchg   esp,eax
  40f53e:	pushf  
  40f53f:	add    BYTE PTR [ebx+0xfdd8375],cl
  40f545:	mov    DWORD PTR [edx+eax*8],eax
  40f548:	mov    bl,0xcc
  40f54a:	stos   BYTE PTR es:[edi],al
  40f54b:	or     ah,cl
  40f54d:	add    ah,cl
  40f54f:	lea    eax,[eax+0x7b]
  40f552:	fmul   DWORD PTR [eax]
  40f554:	pop    ebp
  40f555:	jne    0x40f557
  40f557:	add    ah,cl
  40f559:	add    BYTE PTR [ebp-0x1e],dl
  40f55c:	into   
  40f55d:	push   0x58
  40f55f:	or     DWORD PTR [ebx+0x1e78cc00],0xffffffee
  40f566:	sub    edi,edi
  40f568:	int3   
  40f569:	add    BYTE PTR [ebx+0x1546338b],cl
  40f56f:	(bad)  
  40f570:	int    0xa2
  40f572:	cmc    
  40f573:	inc    DWORD PTR [eax]
  40f575:	int3   
  40f576:	add    BYTE PTR [eax+ebp*1],dh
  40f579:	xchg   edx,eax
  40f57a:	sahf   
  40f57b:	add    bh,bh
  40f57d:	mov    ecx,DWORD PTR [ebx-0x3333ffb3]
  40f583:	ror    DWORD PTR [edi+0x55eb9d02],1
  40f589:	int3   
  40f58a:	add    BYTE PTR [edi],dl
  40f58c:	mov    ah,0x25
  40f58e:	or     DWORD PTR [ecx-0xfff7ab],0xf98b0004
  40f598:	mov    ebp,0xff5da41f
  40f59d:	mov    eax,DWORD PTR [eax]
  40f59f:	inc    ecx
  40f5a0:	sar    BYTE PTR [ecx-0x22b2cf],cl
  40f5a6:	add    ah,cl
  40f5a8:	add    DWORD PTR [eax],0x15
  40f5ab:	loopne 0x40f576
  40f5ad:	ins    DWORD PTR es:[edi],dx
  40f5ae:	xor    al,BYTE PTR [eax]
  40f5b0:	ror    BYTE PTR [ebx+0x2e9ef1ec],0xfd
  40f5b7:	lea    ecx,[ebx-0x7474ff75]
  40f5bd:	add    DWORD PTR [ebx+0x20734e96],ecx
  40f5c3:	add    edi,edi
  40f5c5:	int3   
  40f5c6:	inc    ebx
  40f5c8:	out    dx,eax
  40f5c9:	punpckhwd mm0,QWORD PTR [ebx+0x0]
  40f5cd:	mov    DWORD PTR [ebx+0x7471248b],0x1ccc0ad
  40f5d7:	ror    BYTE PTR [ebx-0x2bff3375],0xfb
  40f5de:	fwait
  40f5df:	inc    ebx
  40f5e0:	lea    eax,[eax]
  40f5e2:	int3   
  40f5e3:	adc    BYTE PTR [edx+edx*4-0x76ff92a5],al
  40f5ea:	call   0x8410635
  40f5ef:	mov    DWORD PTR [ebp+0x50fdfb81],esp
  40f5f5:	xor    ecx,DWORD PTR [ecx+0x740c09cc]
  40f5fb:	inc    edx
  40f5fc:	add    DWORD PTR [ebp-0x33007c34],ecx
  40f602:	add    BYTE PTR [ebx],al
  40f604:	mov    edx,esp
  40f606:	cmp    al,0x3c
  40f608:	mov    DWORD PTR [ecx],eax
  40f60a:	inc    DWORD PTR [ebp+0xe]
  40f60d:	push   ebx
  40f60e:	js     0x40f60e
  40f610:	fld    QWORD PTR [ebx+0x5083cc8b]
  40f616:	add    BYTE PTR [eax],al
  40f618:	pop    ebp
  40f619:	cs fwait
  40f61b:	jge    0x40f61d
  40f61d:	lea    ecx,[ebx-0x54e69c00]
  40f623:	lods   al,BYTE PTR ds:[esi]
  40f624:	push   esi
  40f625:	xor    eax,DWORD PTR [eax]
  40f627:	int3   
  40f628:	add    BYTE PTR [ebp-0x34],dh
  40f62b:	int3   
  40f62c:	inc    edx
  40f62d:	xor    esi,DWORD PTR [edi-0x50]
  40f630:	(bad)  
  40f631:	call   DWORD PTR [eax]
  40f633:	call   ebx
  40f635:	je     0x40f5e4
  40f637:	xlat   BYTE PTR ds:[ebx]
  40f638:	add    DWORD PTR [eax],eax
  40f63a:	mov    eax,DWORD PTR [eax]
  40f63c:	add    BYTE PTR [ebp+0x0],dh
  40f63f:	push   DWORD PTR [edx-0x74d2884d]
  40f645:	add    BYTE PTR [ebx+0x3dce14ff],cl
  40f64b:	jl     0x40f64d
  40f64d:	inc    ebp
  40f64e:	mov    ecx,DWORD PTR [eax]
  40f650:	or     BYTE PTR [esi+0x8],dl
  40f653:	add    BYTE PTR ds:0xffcfe50d,dh
  40f659:	add    DWORD PTR [eax],eax
  40f65b:	int3   
  40f65c:	ror    BYTE PTR [ebp+0x5d],1
  40f65f:	fld    QWORD PTR [eax]
  40f661:	add    BYTE PTR [ecx+0x8b1501],cl
  40f667:	add    esp,DWORD PTR [edi+ebx*2]
  40f66a:	xor    edx,DWORD PTR [esi]
  40f66c:	add    BYTE PTR [esp+ecx*8+0x0],dh
  40f670:	mov    ebx,0xf25ae7d
  40f675:	jne    0x40f6bd
  40f677:	(bad)  
  40f678:	(bad)  
  40f67a:	add    ah,cl
  40f67c:	or     DWORD PTR [eax],eax
  40f67e:	pop    ebp
  40f67f:	jae    0x40f689
  40f681:	je     0x40f60e
  40f683:	mov    ebp,DWORD PTR [edi+ecx*2-0x337aee45]
  40f68a:	inc    esi
  40f68b:	xor    ecx,DWORD PTR [eax]
  40f68d:	or     DWORD PTR [eax],0x45
  40f690:	sbb    DWORD PTR [ebx-0xfe712b],edx
  40f696:	add    BYTE PTR [eax],al
  40f698:	and    cl,BYTE PTR [edx]
  40f69a:	stc    
  40f69b:	dec    ecx
  40f69c:	add    BYTE PTR [ecx+0x1568dff],cl
  40f6a2:	add    BYTE PTR [esi+0x2b],al
  40f6a5:	test   al,0x76
  40f6a7:	pop    DWORD PTR [eax]
  40f6a9:	mov    DWORD PTR [eax+eax*1-0x8],esi
  40f6ad:	mov    ds:0xcc4d40f4,eax
  40f6b2:	shl    BYTE PTR [ebx],0x0
  40f6b5:	inc    ebp
  40f6b6:	pop    ebp
  40f6b7:	add    DWORD PTR [ebx-0x8390c],ebp
  40f6bd:	add    BYTE PTR [edi],cl
  40f6bf:	inc    ebp
  40f6c0:	in     eax,0x68
  40f6c2:	inc    esp
  40f6c3:	pop    ebp
  40f6c4:	mov    DWORD PTR [eax],eax
  40f6c6:	add    BYTE PTR [ebx+0x5de08b],al
  40f6cc:	fs dec edx
  40f6ce:	lock icebp 
  40f6d0:	add    BYTE PTR ds:0x24d78933,dl
  40f6d6:	outs   dx,BYTE PTR ds:[esi]
  40f6d7:	mov    eax,0xcc00008b
  40f6dc:	add    ah,cl
  40f6de:	dec    esp
  40f6e0:	les    edx,FWORD PTR [edx]
  40f6e2:	pop    ebp
  40f6e3:	inc    eax
  40f6e4:	or     DWORD PTR [ebx+0xff34d55],0x30
  40f6eb:	inc    ebx
  40f6ec:	(bad)  
  40f6ed:	jne    0x40f6ef
  40f6ef:	mov    eax,DWORD PTR [esi-0x75]
  40f6f2:	int3   
  40f6f3:	int3   
  40f6f4:	dec    eax
  40f6f5:	xchg   ebp,eax
  40f6f6:	jmp    0x8b418203
  40f6fb:	or     BYTE PTR ds:0x5653c3,al
  40f701:	mov    ecx,DWORD PTR [ebx+0x85ff01]
  40f707:	mov    ebp,DWORD PTR [ebx]
  40f709:	aam    0xce
  40f70b:	push   edi
  40f70c:	or     BYTE PTR [ebx+0x1ae88500],cl
  40f712:	(bad)  
  40f713:	jns    0x40f715
  40f715:	add    BYTE PTR [ebx+0x45758d00],cl
  40f71b:	call   0x71420b08
  40f720:	or     BYTE PTR [edi],cl
  40f722:	adc    bh,al
  40f724:	data16 loop 0x40f754
  40f727:	mov    ebx,0x0
  40f72c:	or     BYTE PTR [ebx+0xa64cc8b],al
  40f732:	jns    0x40f714
  40f734:	add    DWORD PTR [ebx],esi
  40f736:	je     0x40f720
  40f738:	stc    
  40f739:	cmc    
  40f73a:	enter  0x8a,0xc
  40f73e:	rol    BYTE PTR [eax],0xcc
  40f741:	add    BYTE PTR [ebp+0x45],dh
  40f744:	ins    BYTE PTR es:[edi],dx
  40f745:	add    dl,cl
  40f747:	or     DWORD PTR [ebx+0x3ffcc00],0xffa94af1
  40f751:	inc    esi
  40f752:	dec    esp
  40f754:	add    BYTE PTR [eax],al
  40f756:	inc    esi
  40f757:	add    bh,bl
  40f759:	idiv   eax
  40f75b:	les    edx,FWORD PTR [eax]
  40f75d:	add    ah,cl
  40f75f:	add    al,bl
  40f761:	pop    eax
  40f762:	cs int 0xff
  40f765:	inc    DWORD PTR [ebx+0x45ec008b]
  40f76b:	add    BYTE PTR [edi],ch
  40f76d:	fcomp  st(4)
  40f76f:	inc    ebp
  40f770:	adc    bh,bh
  40f772:	or     al,0x0
  40f774:	out    0xc6,eax
  40f776:	bound  ebx,QWORD PTR [esi]
  40f778:	mov    edx,DWORD PTR [esi-0x1]
  40f77b:	add    bh,bh
  40f77d:	mov    ebx,DWORD PTR [ebp+0x8]
  40f780:	shl    dh,cl
  40f782:	ins    BYTE PTR es:[edi],dx
  40f783:	dec    ebp
  40f784:	test   DWORD PTR [eax],eax
  40f786:	cmp    edi,0xffffff82
  40f789:	pop    edx
  40f78a:	pop    ss
  40f78b:	dec    esp
  40f78c:	je     0x40f78e
  40f78e:	int3   
  40f78f:	add    BYTE PTR [ebp-0x75],dh
  40f792:	xor    DWORD PTR [ebx],0xffffffd5
  40f795:	xchg   DWORD PTR [ecx+0x1758bcb],esi
  40f79b:	add    BYTE PTR [ebp+eax*4+0x558b4895],bh
  40f7a2:	inc    ebp
  40f7a3:	inc    DWORD PTR [eax]
  40f7a5:	fisttp QWORD PTR [ebx-0x2d25500]
  40f7ab:	enter  0x8b0c,0x33
  40f7af:	add    esp,ebx
  40f7b1:	ss dec ebp
  40f7b3:	je     0x40f775
  40f7b5:	add    DWORD PTR [eax+edx*1-0x75],esi
  40f7b9:	add    BYTE PTR [ecx-0x1217c834],cl
  40f7bf:	fild   WORD PTR [ebx+0x12c00000]
  40f7c5:	push   edx
  40f7c6:	cmp    eax,0x75850021
  40f7cb:	push   DWORD PTR [ebx]
  40f7cd:	test   DWORD PTR [eax],eax
  40f7cf:	adc    eax,0xe73d49b1
  40f7d4:	add    DWORD PTR [ecx+0x1ad750cc],ecx
  40f7da:	xchg   esi,eax
  40f7db:	jo     0x40f762
  40f7dd:	inc    ebp
  40f7de:	add    BYTE PTR [edi],cl
  40f7e0:	add    DWORD PTR [ebp-0x34],eax
  40f7e3:	mov    esi,DWORD PTR [esi-0x49]
  40f7e6:	repnz test DWORD PTR gs:[eax],eax
  40f7ea:	add    DWORD PTR [esi-0x10],eax
  40f7ed:	jge    0x40f86c
  40f7ef:	add    DWORD PTR ds:[esp+ecx*8+0x1],esi
  40f7f4:	int3   
  40f7f5:	int3   
  40f7f6:	adc    BYTE PTR [eax],al
  40f7f8:	and    eax,0x85af47aa
  40f7fd:	(bad)  
  40f7fe:	int3   
  40f7ff:	test   DWORD PTR [ebx-0x74839105],esi
  40f805:	push   esi
  40f806:	add    DWORD PTR [eax],edx
  40f808:	mov    ebp,eax
  40f80a:	mov    ebp,DWORD PTR [edx+0x75]
  40f80d:	mov    edi,0x8754e09
  40f812:	add    BYTE PTR [eax-0x18],dl
  40f815:	call   0xcc:0x1ff444a
  40f81c:	add    ah,cl
  40f81e:	mov    eax,DWORD PTR [ecx]
  40f820:	rcl    DWORD PTR [ebp+0x2f],0xbe
  40f824:	or     al,0x8b
  40f826:	mov    ecx,DWORD PTR [edx+esi*2]
  40f829:	or     BYTE PTR [edi+0x22],bl
  40f82c:	push   esi
  40f82d:	add    BYTE PTR [ebx+0x15600dd],cl
  40f833:	int3   
  40f834:	mov    ecx,0x8bdbaa40
  40f839:	or     al,al
  40f83b:	dec    DWORD PTR [edi+0x13]
  40f83e:	adc    bh,BYTE PTR [ebp-0x74ffa218]
  40f844:	add    BYTE PTR [eax],al
  40f846:	je     0x40f808
  40f848:	jne    0x40f88d
  40f84a:	pop    ecx
  40f84b:	cmp    DWORD PTR [eax],eax
  40f84d:	call   0xc1ec83a7
  40f852:	aas    
  40f853:	add    BYTE PTR [esi+edx*2],0xe0
  40f857:	test   DWORD PTR [eax],eax
  40f859:	push   eax
  40f85a:	inc    DWORD PTR [eax]
  40f85c:	dec    ecx
  40f85d:	std    
  40f85e:	dec    esp
  40f85f:	cmp    edi,0xffffff8b
  40f862:	push   ebp
  40f863:	add    BYTE PTR [ecx],bl
  40f865:	int    0x46
  40f867:	add    al,0x8b
  40f869:	mov    edi,edi
  40f86b:	mov    edi,edi
  40f86d:	or     al,0x6a
  40f86f:	mov    eax,ebx
  40f871:	imul   ebp,DWORD PTR [edx-0xfff3d8],0xffffffcc
  40f878:	mov    ah,0x94
  40f87a:	mov    BYTE PTR [ecx],ch
  40f87c:	add    bh,bh
  40f87e:	mov    eax,DWORD PTR [ebp+0x74c70385]
  40f884:	lock xlat BYTE PTR ds:[ebx]
  40f886:	outs   dx,BYTE PTR ds:[esi]
  40f887:	add    DWORD PTR [ebp-0x75],ebx
  40f88a:	add    BYTE PTR [ebx-0x851bdb3],cl
  40f890:	add    BYTE PTR [ebp+0x0],al
  40f893:	add    BYTE PTR [eax],al
  40f895:	pop    ebp
  40f896:	add    esp,ebp
  40f898:	xlat   BYTE PTR ds:[ebx]
  40f899:	es inc ecx
  40f89b:	out    0xcc,al
  40f89d:	add    BYTE PTR [ebp-0x14eb0300],al
  40f8a3:	sub    al,BYTE PTR [ebp+0x1008b]
  40f8a9:	add    BYTE PTR [ecx],al
  40f8ab:	mov    DWORD PTR [esi+0x74d69ac8],esp
  40f8b1:	mov    eax,DWORD PTR [ebp-0x6fc355ff]
  40f8b7:	mov    esi,0xcc00cc89
  40f8bc:	add    BYTE PTR [ecx+eax*1],cl
  40f8bf:	add    BYTE PTR ds:0x841ab9a,al
  40f8c5:	lea    edx,[eax]
  40f8c7:	add    eax,ebx
  40f8c9:	cmp    ch,bh
  40f8cb:	ja     0x40f91a
  40f8cd:	int3   
  40f8ce:	je     0x40f8d0
  40f8d0:	or     al,0x75
  40f8d2:	add    BYTE PTR [eax],cl
  40f8d4:	push   es
  40f8d5:	das    
  40f8d6:	xchg   DWORD PTR [eax-0x34],edi
  40f8d9:	add    DWORD PTR [edi+edi*8],ecx
  40f8dc:	or     BYTE PTR [ebx-0x4],al
  40f8df:	mov    edi,0x75004545
  40f8e4:	mov    ecx,DWORD PTR [ebx-0x9b33318]
  40f8ea:	and    al,0x67
  40f8ec:	push   0xffffff83
  40f8ee:	add    BYTE PTR [ebx-0x33f1633d],al
  40f8f4:	outs   dx,DWORD PTR ds:[esi]
  40f8f5:	add    BYTE PTR [eax],al
  40f8f7:	inc    ebp
  40f8f8:	je     0x40f880
  40f8fa:	ret    0xca0b
  40f8fd:	dec    DWORD PTR [esp+ecx*1]
  40f900:	mov    DWORD PTR [ebp+0x4],ebx
  40f903:	push   eax
  40f904:	add    esi,esp
  40f906:	pop    edi
  40f907:	xchg   BYTE PTR [edi],ch
  40f909:	mov    edi,edi
  40f90b:	add    BYTE PTR [eax-0x4a],dl
  40f90e:	or     BYTE PTR [edi+0x43],0x1
  40f912:	add    bh,bh
  40f914:	add    al,ch
  40f916:	add    bh,bh
  40f918:	add    ch,bl
  40f91a:	call   0x5500:0x74457eb1
  40f921:	xor    DWORD PTR [eax-0x64],edi
  40f924:	dec    ebp
  40f925:	or     BYTE PTR [eax],al
  40f927:	mov    esi,DWORD PTR [ebx]
  40f929:	dec    ebp
  40f92a:	add    BYTE PTR [eax],al
  40f92c:	test   DWORD PTR [ecx+0x32],edi
  40f92f:	mov    esp,0x18b00e8
  40f934:	mov    esp,DWORD PTR [edi-0x7cca88e4]
  40f93a:	mov    ecx,DWORD PTR [ecx+0xe00000]
  40f940:	in     al,dx
  40f941:	push   esp
  40f942:	push   cs
  40f943:	add    cl,BYTE PTR [ebx+ecx*4+0x568901cc]
  40f94a:	popf   
  40f94b:	loop   0x40f970
  40f94d:	fld    QWORD PTR [eax]
  40f94f:	mov    eax,DWORD PTR [eax]
  40f951:	add    BYTE PTR [eax],al
  40f953:	or     esp,0xfffffff4
  40f956:	pop    edi
  40f957:	imul   edi,edi,0x1010000
  40f95d:	das    
  40f95e:	push   ebp
  40f95f:	imul   edx,DWORD PTR [edi],0xffffff89
  40f962:	mov    ecx,esp
  40f964:	push   esi
  40f965:	add    BYTE PTR [eax],al
  40f967:	rol    BYTE PTR [eax],0x51
  40f96a:	dec    edx
  40f96b:	cmp    edx,ebx
  40f96d:	int3   
  40f96e:	dec    esp
  40f970:	int3   
  40f971:	daa    
  40f972:	aas    
  40f973:	imul   ebx,DWORD PTR ds:0x15004500,0xffffffcc
  40f97a:	push   ebp
  40f97b:	add    BYTE PTR [ebp+0x35],al
  40f97e:	div    esp
  40f980:	aad    0x1
  40f982:	int3   
  40f983:	or     DWORD PTR [ecx+0x242f310e],0x0
  40f98a:	or     BYTE PTR [eax],al
  40f98c:	mov    edx,DWORD PTR [ebp+0x0]
  40f98f:	lea    ecx,[ebx+0x692e7327]
  40f995:	push   0x33
  40f997:	loopne 0x40f924
  40f999:	sbb    dh,bh
  40f99b:	mov    ah,0x16
  40f99d:	add    BYTE PTR [ebx-0x74ffff96],cl
  40f9a3:	add    BYTE PTR [ebx],dh
  40f9a5:	pop    edx
  40f9a6:	push   cs
  40f9a7:	je     0x40f959
  40f9a9:	int3   
  40f9aa:	dec    ebp
  40f9ab:	loopne 0x40f932
  40f9ad:	loope  0x40f9f2
  40f9af:	popf   
  40f9b0:	shl    DWORD PTR [ebp+ecx*4+0x15],cl
  40f9b4:	add    BYTE PTR [ebx],al
  40f9b6:	add    BYTE PTR [ebx-0x5e275800],cl
  40f9bc:	outs   dx,DWORD PTR ds:[esi]
  40f9bd:	add    DWORD PTR [eax],0x1
  40f9c0:	call   0xb7a3dfd3
  40f9c5:	(bad)  
  40f9c6:	(bad)  
  40f9c7:	inc    DWORD PTR [eax]
  40f9c9:	add    BYTE PTR [ebx+0x43371045],cl
  40f9cf:	mov    BYTE PTR [eax+0x3345],dh
  40f9d5:	jno    0x40f9ec
  40f9d7:	in     eax,dx
  40f9d8:	push   ebx
  40f9d9:	add    BYTE PTR [esi+0xf],al
  40f9dc:	mov    DWORD PTR [edi],ecx
  40f9de:	jmp    0x40f963
  40f9e0:	inc    ebp
  40f9e1:	ds js  0x40f9d3
  40f9e4:	inc    edx
  40f9e5:	add    BYTE PTR [eax],al
  40f9e7:	loopne 0x40f9d4
  40f9e9:	jge    0x40fa1d
  40f9eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9ec:	inc    edx
  40f9ed:	mov    ecx,esp
  40f9ef:	add    ah,cl
  40f9f1:	add    ecx,DWORD PTR [ebx-0x602274f1]
  40f9f7:	mov    ecx,0x804c0ec
  40f9fc:	mov    DWORD PTR [edx+0x10600570],ecx
  40fa02:	in     al,dx
  40fa03:	dec    DWORD PTR [ebx-0x34000000]
  40fa09:	xchg   DWORD PTR [edi+0x19],ecx
  40fa0c:	ins    DWORD PTR es:[edi],dx
  40fa0d:	or     BYTE PTR [edx+0x15],ch
  40fa10:	fnstsw WORD PTR [eax]
  40fa12:	cs xor ecx,ecx
  40fa15:	add    BYTE PTR [ebp+0x330046],al
  40fa1b:	call   0xc50478a5
  40fa20:	mov    ah,0x0
  40fa22:	add    BYTE PTR [ebx+0x37c5dcc],al
  40fa28:	mov    dl,0x3
  40fa2a:	push   esi
  40fa2b:	inc    DWORD PTR [eax]
  40fa2d:	add    eax,DWORD PTR [eax]
  40fa2f:	add    BYTE PTR [edx+eax*1],al
  40fa32:	lahf   
  40fa33:	mov    WORD PTR [ebx],fs
  40fa35:	int3   
  40fa36:	mov    edi,edi
  40fa38:	jne    0x40faa0
  40fa3a:	dec    ebp
  40fa3b:	mov    ?,WORD PTR [esp+esi*2-0x74fffb77]
  40fa42:	int3   
  40fa43:	cmp    edi,0xfffffff4
  40fa46:	xor    BYTE PTR [edx],dh
  40fa48:	lds    eax,FWORD PTR [eax]
  40fa4a:	push   esi
  40fa4b:	inc    esi
  40fa4c:	add    ah,cl
  40fa4e:	sahf   
  40fa4f:	jmp    0x40fa15
  40fa51:	shr    al,0x0
  40fa54:	int3   
  40fa55:	add    BYTE PTR [ebx-0x674cfbf0],cl
  40fa5b:	in     eax,0x31
  40fa5d:	add    DWORD PTR [eax],eax
  40fa5f:	inc    ebp
  40fa60:	lea    ebx,[ecx+ebx*4]
  40fa63:	or     al,0x24
  40fa65:	mov    esp,ecx
  40fa67:	add    DWORD PTR [ebx+0xf008b],0xffffffa7
  40fa6e:	mov    ss,WORD PTR [edx+0xc0183f4]
  40fa74:	add    BYTE PTR [esi],bh
  40fa76:	bnd jns 0x40fa94
  40fa79:	add    BYTE PTR [eax],dl
  40fa7b:	mov    ebp,DWORD PTR [edx+0x0]
  40fa7e:	je     0x40fa09
  40fa80:	pop    ebp
  40fa81:	out    0xe3,al
  40fa83:	sub    dh,BYTE PTR [edx-0x72fc0100]
  40fa89:	sub    al,0x9b
  40fa8b:	mov    BYTE PTR ds:0x75cc08cc,bh
  40fa91:	or     ah,cl
  40fa93:	int3   
  40fa94:	jmp    DWORD PTR [ecx]
  40fa96:	lods   eax,DWORD PTR ds:[esi]
  40fa97:	dec    esp
  40fa98:	inc    ecx
  40fa99:	mov    ebp,DWORD PTR [edx-0x18]
  40fa9c:	inc    ebp
  40fa9d:	inc    esi
  40fa9e:	sahf   
  40fa9f:	mov    dl,0xdc
  40faa1:	inc    ebp
  40faa2:	dec    esp
  40faa4:	add    BYTE PTR [ebp-0x77],al
  40faa7:	mov    esi,DWORD PTR [ebp+0x2]
  40faaa:	adc    eax,0x45151c74
  40faaf:	or     BYTE PTR [ecx],al
  40fab1:	pop    edx
  40fab2:	stc    
  40fab3:	sub    al,0x79
  40fab5:	inc    esi
  40fab6:	int3   
  40fab7:	or     al,0xc
  40fab9:	mov    DWORD PTR [edi],ecx
  40fabb:	add    BYTE PTR [ebx-0x371ccda3],al
  40fac1:	add    BYTE PTR [ebx+0x2ced018b],cl
  40fac7:	dec    edx
  40fac8:	scas   al,BYTE PTR es:[edi]
  40fac9:	or     esp,0xffffffff
  40facc:	mov    DWORD PTR [eax],eax
  40face:	mov    ecx,DWORD PTR [eax*4+0x18b3ad07]
  40fad5:	test   DWORD PTR [ebx-0x1da17700],ecx
  40fadb:	xor    DWORD PTR ds:0x838b8bcc,esp
  40fae1:	fld    QWORD PTR [ecx]
  40fae3:	mov    eax,DWORD PTR [esi+0x70]
  40fae6:	daa    
  40fae7:	lds    ebp,FWORD PTR [edx]
  40fae9:	fstp   st(5)
  40faeb:	call   DWORD PTR [eax]
  40faed:	(bad)  
  40faee:	int3   
  40faef:	sub    dl,BYTE PTR [eax]
  40faf1:	add    BYTE PTR [eax],al
  40faf3:	dec    ebp
  40faf4:	or     al,0x8b
  40faf6:	add    BYTE PTR [eax],al
  40faf8:	int3   
  40faf9:	dec    ecx
  40fafa:	jp     0x40fa81
  40fafc:	sub    DWORD PTR [ecx],eax
  40fafe:	add    BYTE PTR [eax],al
  40fb00:	mov    edi,DWORD PTR [edx+esi*4]
  40fb03:	or     al,0x9
  40fb05:	add    BYTE PTR ds:0xc78b6a00,dl
  40fb0b:	int3   
  40fb0c:	or     BYTE PTR [ebp-0xd],cl
  40fb0f:	mov    DWORD PTR [esi+0x74],esp
  40fb12:	mov    eax,eax
  40fb14:	mov    esi,DWORD PTR [edi]
  40fb16:	in     eax,dx
  40fb17:	addr16 push esi
  40fb19:	jmp    0x40fb60
  40fb1b:	inc    ebp
  40fb1c:	mov    ecx,esp
  40fb1e:	add    ah,cl
  40fb20:	add    BYTE PTR [edi+ebp*4],dl
  40fb23:	push   ebp
  40fb24:	sti    
  40fb25:	or     DWORD PTR [ebx+0x6f3f0001],0xffffff91
  40fb2c:	push   ebx
  40fb2d:	loopne 0x40fb30
  40fb2f:	add    BYTE PTR [ecx-0x1400fe75],cl
  40fb35:	call   0x845:0x240703
  40fb3c:	add    BYTE PTR [edx],bh
  40fb3e:	ss lahf 
  40fb40:	mov    cl,BYTE PTR [ebx+0x7545cc]
  40fb46:	mov    esi,DWORD PTR [ebp+0x1]
  40fb49:	pop    edi
  40fb4a:	setbe  BYTE PTR [eax-0x17ba7500]
  40fb51:	popf   
  40fb52:	mov    al,ds:0xcc007c68
  40fb57:	jne    0x40fb5c
  40fb59:	add    BYTE PTR [ebp+0x45],al
  40fb5c:	add    BYTE PTR [ebx+0x45cd3c2d],bh
  40fb62:	push   esi
  40fb63:	add    BYTE PTR [esp+ebp*8+0xd],dh
  40fb67:	lea    ebp,[edi-0x33761f75]
  40fb6d:	int3   
  40fb6e:	int3   
  40fb6f:	mov    eax,DWORD PTR [eax]
  40fb71:	out    0x6a,al
  40fb73:	add    cl,BYTE PTR [ebp+0x7401cccc]
  40fb79:	cmp    esp,DWORD PTR [edi+0x78]
  40fb7c:	sbb    DWORD PTR [esi+0x45],edx
  40fb7f:	add    DWORD PTR [eax],eax
  40fb81:	add    al,ch
  40fb83:	int3   
  40fb84:	push   ebp
  40fb85:	pop    edx
  40fb86:	push   cs
  40fb87:	dec    edi
  40fb88:	lods   eax,DWORD PTR ds:[esi]
  40fb89:	mov    eax,DWORD PTR [ecx]
  40fb8b:	int3   
  40fb8c:	jmp    edi
  40fb8e:	shl    DWORD PTR [eax],1
  40fb90:	daa    
  40fb91:	inc    esi
  40fb92:	(bad)  
  40fb93:	jmp    0x40fb99
  40fb95:	int3   
  40fb96:	inc    ebp
  40fb97:	mov    DWORD PTR [eax],eax
  40fb99:	xor    BYTE PTR [ebx],0x64
  40fb9c:	ror    BYTE PTR [eax],cl
  40fb9e:	inc    eax
  40fba0:	add    dl,ch
  40fba2:	xor    DWORD PTR [edi+0x3003305],ecx
  40fba8:	add    BYTE PTR [ebx-0x8743339],cl
  40fbae:	push   ss
  40fbaf:	mov    eax,ds:0x8b000402
  40fbb4:	int3   
  40fbb5:	test   ch,bh
  40fbb7:	jno    0x40fbd6
  40fbb9:	inc    ebp
  40fbba:	mov    esp,ecx
  40fbbc:	mov    eax,DWORD PTR [ebx]
  40fbbe:	add    al,0xc0
  40fbc0:	mov    eax,esi
  40fbc2:	lahf   
  40fbc3:	inc    ebx
  40fbc4:	pop    ecx
  40fbc5:	add    BYTE PTR [ebx],dh
  40fbc7:	add    BYTE PTR [eax+ebx*4],al
  40fbca:	xchg   edi,eax
  40fbcb:	xor    dh,BYTE PTR [ebp-0x747cff23]
  40fbd1:	call   0x1151005b
  40fbd6:	or     al,0x42
  40fbd8:	mov    bl,0xe0
  40fbda:	mov    DWORD PTR [ebp-0x77],eax
  40fbdd:	pop    eax
  40fbde:	and    al,0xe5
  40fbe0:	sub    eax,0xdd83838b
  40fbe5:	pop    ebp
  40fbe6:	add    ah,cl
  40fbe8:	add    bh,dh
  40fbea:	sti    
  40fbeb:	(bad)  
  40fbec:	inc    BYTE PTR [ebx-0x17f40000]
  40fbf2:	arpl   WORD PTR [edx-0x74],cx
  40fbf5:	add    BYTE PTR [eax],al
  40fbf7:	rol    BYTE PTR [ebx],0x8
  40fbfa:	test   DWORD PTR [ebx+0x690bf985],ecx
  40fc00:	mov    ebp,0x85cc8b00
  40fc05:	add    ebp,DWORD PTR ds:0x8b5d664c
  40fc0b:	add    BYTE PTR [ebx-0xa9aa75],cl
  40fc11:	adc    BYTE PTR [eax],al
  40fc13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc14:	adc    al,0x8
  40fc16:	test   DWORD PTR [eax],edx
  40fc18:	add    BYTE PTR [esi+0x19],bl
  40fc1b:	and    DWORD PTR [ecx],eax
  40fc1d:	mov    esp,ecx
  40fc1f:	int3   
  40fc20:	add    BYTE PTR [eax],al
  40fc22:	or     BYTE PTR [ebp-0x1],dh
  40fc25:	in     al,dx
  40fc26:	cwde   
  40fc27:	xor    al,0x27
  40fc29:	add    DWORD PTR [ecx],eax
  40fc2b:	add    BYTE PTR [esi+0x5e],dl
  40fc2e:	add    al,0xbf
  40fc30:	sbb    al,BYTE PTR [eax]
  40fc32:	mov    ecx,DWORD PTR [ebx+0x8b56cc]
  40fc38:	je     0x40fbbc
  40fc3a:	or     DWORD PTR [edi-0x74ffff6b],edi
  40fc40:	add    BYTE PTR [esi-0x767e298a],bl
  40fc46:	jnp    0x8340fc4c
  40fc4c:	int3   
  40fc4d:	in     al,0x0
  40fc4f:	mov    cl,0xac
  40fc51:	push   ebp
  40fc52:	add    BYTE PTR [ecx],al
  40fc54:	add    BYTE PTR [ebp-0x746e40c1],ah
  40fc5a:	add    ah,cl
  40fc5c:	push   eax
  40fc5d:	call   0xf7418595
  40fc62:	push   ds
  40fc63:	and    dh,dl
  40fc65:	jne    0x40fc6f
  40fc67:	add    BYTE PTR [ebx-0xff560f6],cl
  40fc6d:	add    BYTE PTR [eax],al
  40fc6f:	add    BYTE PTR [eax],al
  40fc71:	shr    BYTE PTR [edx-0x75],0x5d
  40fc75:	fs stos DWORD PTR es:[edi],eax
  40fc77:	int    0x28
  40fc79:	int3   
  40fc7a:	add    BYTE PTR [eax+eax*1-0x6e],dh
  40fc7e:	xor    al,0x2e
  40fc80:	adc    esi,DWORD PTR [ebx]
  40fc82:	inc    ebp
  40fc83:	(bad)  
  40fc84:	int3   
  40fc85:	int3   
  40fc86:	add    ah,cl
  40fc88:	xor    ebx,DWORD PTR [edx+0x33]
  40fc8b:	sahf   
  40fc8c:	scas   al,BYTE PTR es:[edi]
  40fc8d:	mov    DWORD PTR [ebx-0x67f8ff34],ecx
  40fc93:	aad    0xb1
  40fc95:	lea    eax,[eax]
  40fc97:	inc    esi
  40fc98:	push   ebp
  40fc99:	call   0x5349e89d
  40fc9e:	in     al,0x1e
  40fca0:	mov    dh,0xff
  40fca2:	test   DWORD PTR [ebx+0x50b0c345],ecx
  40fca8:	xor    BYTE PTR cs:[esi-0x1],dl
  40fcac:	or     DWORD PTR [ecx+0x778908f],0x46
  40fcb3:	dec    ebp
  40fcb4:	je     0x40fcb6
  40fcb6:	call   0x54cbfd46
  40fcbb:	fs in  al,0x52
  40fcbe:	je     0x40fcbf
  40fcc0:	rol    BYTE PTR [ebp+0x787d681b],0xf
  40fcc7:	add    BYTE PTR [ecx+ecx*4+0x0],dh
  40fccb:	add    BYTE PTR [eax],dl
  40fccd:	add    dl,bl
  40fccf:	sbb    bh,BYTE PTR [ebx+0x54]
  40fcd2:	str    esp
  40fcd5:	add    cl,cl
  40fcd7:	(bad)  [ecx-0x12]
  40fcda:	(bad)  
  40fcdb:	dec    DWORD PTR [ebx+0x3748b]
  40fce1:	mov    esi,DWORD PTR [eax]
  40fce3:	test   al,0x6e
  40fce5:	enter  0x1045,0x8b
  40fce9:	add    DWORD PTR [edx],edx
  40fceb:	cmc    
  40fcec:	jno    0x40fcd6
  40fcee:	add    al,0x8
  40fcf0:	int3   
  40fcf1:	inc    esi
  40fcf2:	add    DWORD PTR [eax],eax
  40fcf4:	(bad)  
  40fcf6:	and    DWORD PTR [edx+0x144f7],esi
  40fcfc:	adc    bh,bh
  40fcfe:	out    dx,eax
  40fcff:	pop    ss
  40fd00:	inc    edi
  40fd01:	mov    WORD PTR [eax],es
  40fd03:	shl    al,0xff
  40fd06:	add    bh,al
  40fd08:	mov    ecx,DWORD PTR [ebx+0x26ba43f0]
  40fd0e:	inc    DWORD PTR [ecx]
  40fd10:	int3   
  40fd11:	add    al,0x2e
  40fd13:	sub    eax,0xd42b
  40fd18:	add    al,al
  40fd1a:	call   0xee95fd1f
  40fd1f:	jmp    0xcccc7b73
  40fd24:	mov    ebp,ebx
  40fd26:	add    BYTE PTR [ecx+0x59],bl
  40fd29:	mov    bh,0x0
  40fd2b:	int3   
  40fd2c:	loopne 0x40fda3
  40fd2e:	inc    DWORD PTR [eax]
  40fd30:	mov    DWORD PTR [eax+0x5],edx
  40fd33:	retf   
  40fd34:	dec    ecx
  40fd35:	push   ebp
  40fd36:	inc    DWORD PTR [eax]
  40fd38:	mov    eax,DWORD PTR [eax]
  40fd3a:	ret    
  40fd3b:	test   al,0x73
  40fd3d:	pop    ss
  40fd3e:	adc    BYTE PTR [eax],al
  40fd40:	inc    ebp
  40fd41:	ffree  st(7)
  40fd43:	int3   
  40fd44:	add    BYTE PTR [ebx-0x7196c032],cl
  40fd4a:	add    BYTE PTR [ebx+0x45e38bff],cl
  40fd50:	mov    edx,0x10e8461d
  40fd55:	add    DWORD PTR [ebp+0x75],ebx
  40fd58:	or     al,0x0
  40fd5a:	add    DWORD PTR [edi+0x56],eax
  40fd5d:	mov    BYTE PTR [eax],0x4d
  40fd60:	jne    0x40fd62
  40fd62:	sbb    BYTE PTR [eax+0x4d009137],0x1
  40fd69:	jmp    0x40fd56
  40fd6b:	xor    eax,eax
  40fd6d:	mov    ecx,eax
  40fd6f:	lods   al,BYTE PTR ds:[esi]
  40fd70:	bound  ecx,QWORD PTR [ebx-0x18]
  40fd73:	add    BYTE PTR [eax],al
  40fd75:	mov    esp,ebp
  40fd77:	bound  esi,QWORD PTR [ecx+0x174000e]
  40fd7d:	dec    DWORD PTR [ebx-0x10f07300]
  40fd83:	jecxz  0x40fd3b
  40fd85:	xchg   ebx,eax
  40fd86:	int3   
  40fd87:	push   ebp
  40fd88:	mov    eax,eax
  40fd8a:	repz in al,dx
  40fd8c:	mov    BYTE PTR [ecx],ch
  40fd8e:	int3   
  40fd8f:	call   DWORD PTR [esi+0x33]
  40fd92:	mov    edi,edi
  40fd94:	mov    esi,DWORD PTR [esp+0x55]
  40fd98:	dec    esp
  40fd99:	sub    al,0x8b
  40fd9b:	inc    ebp
  40fd9c:	add    BYTE PTR [ecx],al
  40fd9e:	xchg   esi,eax
  40fd9f:	sub    DWORD PTR [edi],ebx
  40fda1:	(bad)  
  40fda2:	(bad)  
  40fda3:	je     0x40fd71
  40fda5:	or     BYTE PTR [esp+ecx*8-0x18],dh
  40fda9:	int3   
  40fdaa:	out    0x5f,eax
  40fdac:	rcl    DWORD PTR [esi+0x748b10],1
  40fdb2:	mov    esi,0xdd026190
  40fdb7:	add    DWORD PTR [eax],eax
  40fdb9:	inc    ebp
  40fdba:	lea    eax,[eax]
  40fdbc:	add    al,0x0
  40fdbe:	retf   0x7de5
  40fdc1:	xchg   ecx,eax
  40fdc2:	test   esp,ecx
  40fdc4:	int3   
  40fdc5:	int3   
  40fdc6:	inc    ebx
  40fdc7:	lds    esi,FWORD PTR [ebp-0xeaa2fd]
  40fdcd:	add    BYTE PTR [eax],dl
  40fdcf:	add    BYTE PTR [ebp+0x4e95656a],cl
  40fdd5:	sub    al,ah
  40fdd7:	fisttp QWORD PTR [ebx-0x2a301f15]
  40fddd:	dec    eax
  40fdde:	mov    DWORD PTR [ebx+0x4d0101],0x1c6700cc
  40fde8:	or     dl,BYTE PTR [ecx]
  40fdea:	mov    eax,DWORD PTR [eax]
  40fdec:	jmp    0x40fdee
  40fdee:	into   
  40fdef:	mov    ds:0xcc50f040,al
  40fdf4:	mov    ebx,ebp
  40fdf6:	push   ebp
  40fdf7:	adc    al,ch
  40fdf9:	test   DWORD PTR [edx+0x6a115589],ebp
  40fdff:	int3   
  40fe00:	je     0x40fe06
  40fe02:	fs push edx
  40fe04:	add    BYTE PTR [ebx-0x338bf734],ah
  40fe0a:	jne    0x40fe51
  40fe0c:	dec    esp
  40fe0e:	sub    BYTE PTR [ebx+0x89a99a],dh
  40fe14:	mov    ecx,esp
  40fe16:	pop    ebp
  40fe17:	xchg   edx,eax
  40fe18:	(bad)  
  40fe19:	dec    esi
  40fe1a:	int3   
  40fe1b:	inc    DWORD PTR [eax]
  40fe1d:	(bad)  
  40fe1e:	mov    edx,DWORD PTR [eax-0x34]
  40fe21:	je     0x40fe16
  40fe23:	addr16 retf 0xff79
  40fe27:	add    bh,bh
  40fe29:	frstor [edi]
  40fe2b:	jmp    0x40fe92
  40fe2d:	xor    al,BYTE PTR [eax]
  40fe2f:	add    BYTE PTR [edx+0x8],ch
  40fe32:	lea    eax,[eax+eax*1]
  40fe35:	int3   
  40fe36:	rol    esp,cl
  40fe38:	mov    dl,0xed
  40fe3a:	mov    eax,DWORD PTR [eax]
  40fe3c:	int3   
  40fe3d:	add    BYTE PTR [edx+edx*1-0x14fef115],bh
  40fe44:	rol    BYTE PTR [eax],0xc0
  40fe47:	xor    ecx,DWORD PTR [ebx-0x7ab8f9ff]
  40fe4d:	dec    edi
  40fe4e:	or     BYTE PTR [eax],al
  40fe50:	xor    DWORD PTR [ebp+ebx*8+0x49],0x9
  40fe55:	pop    ss
  40fe56:	pop    ebp
  40fe57:	mov    edi,edi
  40fe59:	push   eax
  40fe5a:	je     0x40fe28
  40fe5c:	rol    BYTE PTR [eax],0x8d
  40fe5f:	xor    edx,DWORD PTR [esi]
  40fe61:	nop
  40fe62:	call   DWORD PTR [esi+0x0]
  40fe65:	add    edi,edi
  40fe67:	lock call 0x8b41cadd
  40fe6d:	add    BYTE PTR [ecx-0x1e340000],cl
  40fe73:	in     al,0x58
  40fe75:	sbb    ah,cl
  40fe77:	in     al,dx
  40fe78:	add    DWORD PTR [eax],eax
  40fe7a:	(bad)  
  40fe7b:	adc    al,BYTE PTR [ebx-0x2c]
  40fe7e:	add    al,0x0
  40fe80:	add    al,0xe8
  40fe82:	add    DWORD PTR [ebp+edx*2+0x0],esi
  40fe86:	sbb    DWORD PTR [esi],ebx
  40fe88:	mov    edx,0x8b748b2d
  40fe8d:	shr    ch,0x59
  40fe90:	xor    BYTE PTR [edi-0x77],ah
  40fe93:	mov    edi,edi
  40fe95:	add    DWORD PTR [ebp+0x4],esi
  40fe98:	add    al,al
  40fe9a:	xchg   esi,eax
  40fe9b:	dec    esi
  40fe9c:	dec    ebp
  40fe9d:	jnp    0x40fe6b
  40fe9f:	add    BYTE PTR [ebx+0x53256456],cl
  40fea5:	ja     0x40fe84
  40fea7:	mov    ebp,ebx
  40fea9:	add    BYTE PTR [eax],dl
  40feab:	je     0x40fead
  40fead:	add    ah,al
  40feaf:	mov    ch,0x50
  40feb1:	mov    al,BYTE PTR [eax]
  40feb3:	mov    edi,edi
  40feb5:	int3   
  40feb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40feb7:	mov    al,0xa7
  40feb9:	pop    es
  40feba:	mov    eax,DWORD PTR [eax]
  40febc:	dec    ebp
  40febd:	mov    esp,ecx
  40febf:	add    bh,bh
  40fec1:	add    DWORD PTR [eax],ebx
  40fec3:	mov    bh,0x61
  40fec5:	test   al,0x83
  40fec7:	fld    QWORD PTR [ecx]
  40fec9:	mov    esp,DWORD PTR [esi+eiz*8-0x46]
  40fecd:	aaa    
  40fece:	push   ebp
  40fecf:	rol    BYTE PTR [eax],0x0
  40fed2:	add    BYTE PTR [eax],al
  40fed4:	je     0x40fea2
  40fed6:	or     BYTE PTR [ecx+0x4d],dl
  40fed9:	pop    esp
  40feda:	int3   
  40fedb:	push   0xf
  40fedd:	adc    eax,0x1dfa929e
  40fee2:	int3   
  40fee3:	add    BYTE PTR [eax],al
  40fee5:	mov    eax,DWORD PTR [ebp+0x3]
  40fee8:	add    BYTE PTR [eax],al
  40feea:	in     al,0x74
  40feec:	mov    ch,0xf6
  40feee:	add    DWORD PTR [eax],edx
  40fef0:	add    ah,cl
  40fef2:	lods   eax,DWORD PTR ds:[esi]
  40fef3:	sub    al,0x4c
  40fef5:	adc    BYTE PTR [esi+0x1],al
  40fef8:	mov    eax,DWORD PTR [eax]
  40fefa:	add    BYTE PTR [ecx+eax*1],al
  40fefd:	xor    ebx,esi
  40feff:	ja     0x40ff2e
  40ff01:	jle    0x40fe90
  40ff03:	test   edi,edi
  40ff05:	push   DWORD PTR [esi]
  40ff07:	cmc    
  40ff08:	pop    ss
  40ff09:	mov    bl,0xc
  40ff0b:	push   esi
  40ff0c:	fnsave [esp+ecx*1+0x0]
  40ff10:	add    BYTE PTR [ebx+0x3d36d383],cl
  40ff16:	add    BYTE PTR [eax],al
  40ff18:	add    BYTE PTR [esi+ebp*4+0x62],dh
  40ff1c:	not    BYTE PTR [edi+0x7500e003]
  40ff22:	add    bh,bh
  40ff24:	int3   
  40ff25:	mov    DWORD PTR [eax],ebp
  40ff27:	popf   
  40ff28:	jecxz  0x40ff5f
  40ff2a:	int3   
  40ff2b:	add    BYTE PTR [ebp-0x34],al
  40ff2e:	push   cs
  40ff2f:	iret   
  40ff30:	rcl    BYTE PTR [esi-0x33efa300],1
  40ff36:	inc    esi
  40ff37:	add    BYTE PTR [ebp-0x78013cfd],al
  40ff3d:	sbb    ecx,DWORD PTR ds:0x830000ff
  40ff43:	xor    al,0xde
  40ff45:	fisubr DWORD PTR [ebx+0x1c70045]
  40ff4b:	inc    ebp
  40ff4c:	add    bh,al
  40ff4e:	mov    edx,DWORD PTR [ebp+ebp*4-0x16]
  40ff52:	mov    eax,ds:0x4d8b0400
  40ff57:	xor    al,0xfe
  40ff59:	clc    
  40ff5a:	mov    ds:0x8b0374cc,eax
  40ff5f:	mov    ebx,ebp
  40ff61:	int3   
  40ff62:	pop    ebp
  40ff63:	leave  
  40ff64:	cwde   
  40ff65:	rcr    BYTE PTR [eax-0x3fffffbb],0x49
  40ff6c:	shl    BYTE PTR [esi+0x5dc080],1
  40ff72:	inc    ebp
  40ff73:	dec    esp
  40ff75:	lea    eax,[esi-0x5a]
  40ff78:	mov    dl,0xa6
  40ff7a:	or     BYTE PTR [ecx-0x3f387500],0xfe
  40ff81:	pop    ecx
  40ff82:	adc    BYTE PTR [eax],al
  40ff84:	adc    eax,0xebffe800
  40ff89:	inc    ebp
  40ff8a:	dec    DWORD PTR [ecx+ecx*8]
  40ff8d:	ins    BYTE PTR es:[edi],dx
  40ff8e:	mov    bl,0x8d
  40ff90:	jne    0x40ff1b
  40ff92:	mov    edi,DWORD PTR [ebp-0x3f547f83]
  40ff98:	add    BYTE PTR [ecx],al
  40ff9a:	add    ah,cl
  40ff9c:	add    BYTE PTR [ebx-0x302e4101],al
  40ffa2:	daa    
  40ffa3:	add    BYTE PTR [ecx-0x26dafd00],cl
  40ffa9:	jg     0x40ffb5
  40ffab:	mov    ecx,DWORD PTR [esp+esi*2]
  40ffae:	add    BYTE PTR [esi-0x75],al
  40ffb1:	push   esi
  40ffb2:	add    DWORD PTR [ecx],edx
  40ffb4:	push   ss
  40ffb5:	sub    eax,0xcccc156f
  40ffba:	(bad)  
  40ffbb:	js     0x40ff55
  40ffbd:	mov    BYTE PTR [esi+0x0],dl
  40ffc0:	je     0x41002c
  40ffc2:	add    BYTE PTR [eax],cl
  40ffc4:	add    BYTE PTR [ebp-0x77],cl
  40ffc7:	icebp  
  40ffc8:	fadd   DWORD PTR [ebp+esi*2-0x1474aa01]
  40ffcf:	les    eax,FWORD PTR [edx-0x74002180]
  40ffd5:	int3   
  40ffd6:	xor    ebx,ebp
  40ffd8:	add    BYTE PTR [eax],al
  40ffda:	add    edi,ecx
  40ffdc:	sub    al,0xcd
  40ffde:	(bad)  
  40ffdf:	int3   
  40ffe0:	dec    DWORD PTR [ebx-0x73bd2300]
  40ffe6:	rcr    DWORD PTR [ebp-0x75],0x0
  40ffea:	test   edi,edi
  40ffec:	inc    DWORD PTR [ebp+0x17752e6a]
  40fff2:	outs   dx,DWORD PTR ds:[esi]
  40fff3:	push   esi
  40fff4:	jmp    0x40ffe2
  40fff6:	add    BYTE PTR [eax-0x60],bl
  40fff9:	push   eax
  40fffa:	aad    0x3
  40fffc:	add    BYTE PTR [eax],al
  40fffe:	add    BYTE PTR [ebp+0x0],dl
  410001:	or     BYTE PTR [ebx+0x4742e42],cl
  410007:	add    BYTE PTR [ebx],dh
  410009:	jmp    0x40ffd7
  41000b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41000c:	test   al,0x66
  41000e:	scas   al,BYTE PTR es:[edi]
  41000f:	add    BYTE PTR [eax],al
  410011:	int3   
  410012:	add    BYTE PTR [eax],al
  410014:	add    BYTE PTR [eax],al
  410016:	shl    dl,0x68
  410019:	inc    BYTE PTR [ebx+0x75]
  41001c:	test   DWORD PTR [ebp-0x7d],eax
  41001f:	mov    edi,0xacaf02
  410024:	or     DWORD PTR [ecx-0x740023],0xffffffcc
  41002b:	xchg   esi,eax
  41002c:	push   ebp
  41002d:	jmp    0x104201d8
  410032:	loopne 0x410068
  410034:	mov    cl,0xe8
  410036:	jnp    0x410038
  410038:	str    WORD PTR [ecx+0x1dd0101]
  41003f:	xchg   esi,eax
  410040:	sbb    al,0x6e
  410042:	add    BYTE PTR [eax],0xff
  410045:	mov    eax,eax
  410047:	cmp    eax,0x8b0f62b8
  41004c:	shl    BYTE PTR [eax+edx*1+0x0],0x89
  410051:	jmp    0x4100c7
  410053:	outs   dx,DWORD PTR ds:[esi]
  410054:	xchg   edi,eax
  410055:	push   edx
  410056:	pcmpeqb mm7,mm7
  410059:	int3   
  41005a:	int3   
  41005b:	xchg   ebp,eax
  41005c:	int3   
  41005d:	adc    BYTE PTR [eax+0x3],bh
  410060:	int3   
  410061:	add    bl,ch
  410063:	or     esp,0xffffff8d
  410066:	add    DWORD PTR [eax+ebx*4],edi
  410069:	icebp  
  41006a:	push   0xffffffcc
  41006c:	add    bh,bh
  41006e:	add    al,0x8c
  410070:	and    eax,0x15013303
  410075:	or     BYTE PTR [eax],al
  410077:	adc    BYTE PTR [ebx-0x747976f4],cl
  41007d:	jg     0x4100a6
  41007f:	inc    ebp
  410080:	mov    ecx,esp
  410082:	dec    ebp
  410083:	jno    0x410063
  410085:	push   cs
  410086:	test   eax,0xff89008b
  41008b:	je     0x41008d
  41008d:	jne    0x4100e5
  41008f:	(bad)  
  410090:	xchg   ebx,eax
  410091:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410092:	(bad)  
  410093:	push   eax
  410094:	int3   
  410095:	pop    ebp
  410096:	mov    ebp,DWORD PTR [eax+0x743f35cb]
  41009c:	add    BYTE PTR [ebx+ecx*4],cl
  41009f:	add    ecx,DWORD PTR [ebx+0x1096048b]
  4100a5:	jmp    0xff83:0x34dcc3c
  4100ac:	das    
  4100ad:	repnz sub DWORD PTR [ecx],eax
  4100b0:	int3   
  4100b1:	add    BYTE PTR [ebp-0x34],dl
  4100b4:	mov    eax,DWORD PTR [eax]
  4100b6:	call   0x251e8fc9
  4100bb:	add    BYTE PTR [ecx+0xa488300],cl
  4100c1:	cmp    ecx,DWORD PTR [edx-0xff0000]
  4100c7:	add    bh,al
  4100c9:	verw   WORD PTR [ecx+ebx*4+0x4c]
  4100ce:	icebp  
  4100cf:	add    BYTE PTR [ebp+edx*2-0x1],dh
  4100d3:	xlat   BYTE PTR ds:[ebx]
  4100d4:	push   0xffffffc6
  4100d6:	ja     0x4100d7
  4100d8:	call   DWORD PTR [eax]
  4100da:	in     al,dx
  4100db:	fld    QWORD PTR [eax]
  4100dd:	adc    al,al
  4100df:	mov    edi,0x8dfcd742
  4100e4:	int3   
  4100e5:	add    DWORD PTR [eax],eax
  4100e7:	neg    DWORD PTR [ecx]
  4100e9:	adc    BYTE PTR [esp+esi*2-0x148b0000],cl
  4100f0:	adc    eax,0x6dcb45dd
  4100f5:	fdivr  st(1),st
  4100f7:	add    BYTE PTR [eax],al
  4100f9:	add    al,ch
  4100fb:	sti    
  4100fc:	sub    dl,ch
  4100fe:	fist   DWORD PTR [eax-0x7b]
  410101:	int3   
  410102:	mov    ecx,esp
  410104:	add    BYTE PTR [ebp+0x0],al
  410107:	fiadd  WORD PTR [edx]
  410109:	lods   al,BYTE PTR ds:[esi]
  41010a:	daa    
  41010b:	add    BYTE PTR [eax],al
  41010d:	mov    eax,eax
  41010f:	inc    ebx
  410110:	imul   eax,esi,0x13
  410113:	loopne 0x410115
  410115:	add    BYTE PTR [eax],al
  410117:	add    bh,bh
  410119:	inc    ebp
  41011a:	or     al,0x55
  41011c:	aas    
  41011d:	dec    DWORD PTR [eax+0xc0e800]
  410123:	int3   
  410124:	mov    eax,ds:0xcc006c49
  410129:	add    bh,bh
  41012b:	int3   
  41012c:	add    DWORD PTR [eax+eax*1+0x62],esi
  410130:	jne    0x4101a5
  410132:	add    BYTE PTR [eax],0x0
  410135:	in     al,dx
  410136:	add    DWORD PTR [ecx+edi*4],eax
  410139:	jnp    0x410166
  41013b:	test   DWORD PTR [eax],eax
  41013d:	add    al,0xc
  41013f:	or     ch,bl
  410141:	push   ebp
  410142:	int3   
  410143:	dec    ecx
  410144:	mov    eax,0xe43f
  410149:	mov    eax,eax
  41014b:	ss inc edx
  41014d:	test   eax,0x1510337f
  410152:	loopne 0x410154
  410154:	lea    eax,[eax]
  410156:	add    dh,bl
  410158:	fisttp WORD PTR [edi-0x7c7c8a7f]
  41015e:	mov    esp,DWORD PTR [ebx]
  410160:	xchg   edx,eax
  410161:	je     0x4101af
  410163:	pop    ebp
  410164:	adc    al,ch
  410166:	add    al,0xcc
  410168:	int3   
  410169:	mov    ecx,DWORD PTR [ebx+0x63adfddb]
  41016f:	je     0x4100fc
  410171:	dec    ebp
  410172:	mov    esi,DWORD PTR [edx]
  410174:	xor    ch,BYTE PTR [ebx-0x33ffff39]
  41017a:	add    BYTE PTR [ebp+ebx*8-0x77],dh
  41017e:	mov    edi,ecx
  410180:	std    
  410181:	ins    DWORD PTR es:[edi],dx
  410182:	mov    ch,0x74
  410184:	or     BYTE PTR [ebp-0x40],dh
  410187:	sbb    ebp,DWORD PTR ds:0x740078c6
  41018d:	mov    eax,DWORD PTR [ecx]
  41018f:	(bad)  
  410190:	dec    DWORD PTR [ebx-0x6c3b2a34]
  410196:	adc    BYTE PTR [ebp-0x77],dh
  410199:	mov    eax,DWORD PTR [esi+0x41]
  41019c:	pop    es
  41019d:	cwde   
  41019e:	out    0x50,al
  4101a0:	mov    ecx,esp
  4101a2:	add    DWORD PTR ds:0x5d008b15,edx
  4101a8:	(bad)  
  4101a9:	jle    0x41018b
  4101ab:	int3   
  4101ac:	in     al,dx
  4101ad:	jmp    0x4101ae
  4101af:	mov    ch,0xd6
  4101b1:	jmp    0x10d022b
  4101b6:	inc    esi
  4101b7:	dec    esp
  4101b9:	adc    eax,0x26798d8d
  4101be:	add    BYTE PTR fs:[eax],cl
  4101c1:	mov    eax,DWORD PTR [eax]
  4101c3:	mov    esi,0x468f18f0
  4101c8:	int3   
  4101c9:	add    al,ah
  4101cb:	mov    ecx,DWORD PTR [ebx+ecx*4]
  4101ce:	inc    ebp
  4101cf:	inc    ebx
  4101d0:	add    dh,BYTE PTR [eax]
  4101d2:	sbb    BYTE PTR [eax],al
  4101d4:	test   edi,edi
  4101d6:	int3   
  4101d7:	stos   DWORD PTR es:[edi],eax
  4101d8:	mov    edx,0xec45f52f
  4101dd:	and    eax,0xffffffdd
  4101e0:	add    BYTE PTR [eax],al
  4101e2:	in     al,dx
  4101e3:	jae    0x410205
  4101e5:	push   eax
  4101e6:	jns    0x41022d
  4101e8:	dec    DWORD PTR [ebx+0x22de7600]
  4101ee:	mov    eax,DWORD PTR [eax]
  4101f0:	rcl    BYTE PTR [eax],0x0
  4101f3:	int3   
  4101f4:	inc    esi
  4101f5:	jne    0x41017a
  4101f7:	mov    ch,BYTE PTR [ebx-0x54]
  4101fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101fb:	mov    DWORD PTR [eax],0xaa90c000
  410201:	cs lea ecx,cs:[ebx+0x8901]
  410209:	int3   
  41020a:	add    bl,al
  41020c:	(bad)  [ebp+0xfff780]
  410212:	je     0x410214
  410214:	mov    bh,0x62
  410216:	xor    al,0x87
  410218:	mov    eax,DWORD PTR [eax]
  41021a:	mov    ebp,ebx
  41021c:	or     al,0x8
  41021e:	pop    ebp
  41021f:	push   eax
  410220:	add    BYTE PTR [edx+0x76],bh
  410223:	xchg   edi,eax
  410224:	add    bh,bh
  410226:	je     0x410214
  410228:	add    bh,bh
  41022a:	popf   
  41022b:	icebp  
  41022c:	adc    eax,0x5d
  410231:	jne    0x410233
  410233:	add    DWORD PTR [edi-0x74a17ba9],edx
  410239:	add    BYTE PTR [ebp+ecx*4-0x45],dh
  41023d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41023e:	in     eax,dx
  41023f:	add    cl,ah
  410241:	loopne 0x410243
  410243:	add    BYTE PTR [ecx],al
  410245:	or     al,0xc0
  410247:	lea    ecx,[edx+0x7b]
  41024a:	sub    al,0xac
  41024c:	dec    DWORD PTR [ecx+0x3860ffff]
  410252:	lock ss or ah,cl
  410256:	je     0x4101e3
  410258:	mov    DWORD PTR [eax],eax
  41025a:	inc    ebp
  41025b:	or     al,0x91
  41025d:	sti    
  41025e:	lds    edi,FWORD PTR [esi]
  410260:	je     0x410262
  410262:	int3   
  410263:	int3   
  410264:	shl    DWORD PTR [eax+0x550067d7],0x83
  41026b:	mov    edi,edi
  41026d:	inc    DWORD PTR [eax]
  41026f:	test   DWORD PTR [edx-0x744e76f7],ebp
  410275:	adc    eax,0x99b874ff
  41027a:	test   DWORD PTR [ebp+eax*4-0x7633b2ba],ecx
  410281:	int3   
  410282:	add    BYTE PTR [eax],al
  410284:	enter  0x5f7a,0xf7
  410288:	add    esp,ecx
  41028a:	jne    0x4102d1
  41028c:	int3   
  41028d:	ja     0x410234
  41028f:	int3   
  410290:	add    BYTE PTR [ebx+0x7508008d],al
  410296:	mov    DWORD PTR [ebp-0x75707331],ecx
  41029c:	or     ah,cl
  41029e:	in     al,dx
  41029f:	(bad)  
  4102a0:	repz pop ebp
  4102a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102a4:	mov    eax,DWORD PTR [ebx-0xfb3375]
  4102aa:	add    BYTE PTR [ebx-0x39fabef],al
  4102b0:	add    ah,cl
  4102b2:	add    BYTE PTR [edi],cl
  4102b4:	stos   BYTE PTR es:[edi],al
  4102b5:	outs   dx,DWORD PTR ds:[esi]
  4102b6:	repz push ds
  4102b8:	int3   
  4102b9:	adc    eax,0x0
  4102be:	int3   
  4102bf:	int3   
  4102c0:	xchg   ebx,eax
  4102c1:	push   ebx
  4102c2:	pop    ss
  4102c3:	fadd   DWORD PTR [eax]
  4102c5:	sar    bh,0x8d
  4102c8:	outs   dx,DWORD PTR ds:[esi]
  4102c9:	ss imul edx,eax,0xffffff85
  4102cd:	mov    ecx,DWORD PTR [ebx+0x855d]
  4102d3:	int3   
  4102d4:	mov    eax,ds:0x758563c2
  4102d9:	fld    QWORD PTR [eax]
  4102db:	adc    dh,bl
  4102dd:	or     eax,0xe0c0b8cd
  4102e2:	jnp    0x41035d
  4102e8:	push   esp
  4102e9:	xor    DWORD PTR [edx+ebp*2-0x72ff7415],esp
  4102f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102f1:	inc    esi
  4102f2:	jmp    DWORD PTR [ebx]
  4102f4:	xor    ecx,DWORD PTR [ebx+0x40ce0e8]
  4102fa:	push   eax
  4102fb:	adc    ebp,0x23
  4102fe:	(bad)  
  4102ff:	push   ecx
  410300:	xor    edi,edi
  410302:	inc    DWORD PTR [eax]
  410304:	push   esi
  410305:	(bad)  
  410306:	icebp  
  410307:	data16 rol BYTE PTR [ecx],0xec
  41030b:	add    BYTE PTR [ebx+0x2674ff83],cl
  410311:	std    
  410312:	inc    edi
  410313:	or     ah,cl
  410315:	add    DWORD PTR [ebp-0x34],0xffffffa3
  410319:	dec    ebx
  41031a:	mov    ?,WORD PTR [eax-0x1]
  41031d:	int3   
  41031e:	add    eax,esp
  410320:	mov    eax,DWORD PTR [eax]
  410322:	add    bh,bh
  410324:	and    BYTE PTR [eax-0x23],dl
  410327:	cld    
  410328:	mov    DWORD PTR [ecx],eax
  41032a:	add    BYTE PTR [esi-0x2a],al
  41032d:	push   ebx
  41032e:	int3   
  41032f:	cmp    eax,DWORD PTR [ecx*2+0x1ff0855]
  410336:	mov    eax,DWORD PTR [eax]
  410338:	scas   eax,DWORD PTR es:[edi]
  410339:	mov    ebx,DWORD PTR [eax+0x8c9]
  41033f:	mov    DWORD PTR [esi-0x9ca6c9],edi
  410345:	int3   
  410346:	mov    esp,ecx
  410348:	jne    0x41034a
  41034a:	add    BYTE PTR [eax],al
  41034c:	xor    ebx,DWORD PTR [edi-0x52]
  41034f:	pop    esi
  410350:	add    BYTE PTR [eax],al
  410352:	add    ah,cl
  410354:	stc    
  410355:	clc    
  410356:	lods   al,BYTE PTR ds:[esi]
  410357:	out    0x0,eax
  410359:	add    bh,al
  41035b:	adc    ah,cl
  41035d:	inc    ebp
  41035e:	mov    eax,DWORD PTR [eax]
  410360:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410361:	pop    esp
  410362:	pop    ebx
  410363:	cmp    eax,DWORD PTR [ebp+0x90fcc6a]
  410369:	imul   eax,DWORD PTR [eax+edi*8+0xc074c7],0xffffffcc
  410371:	xor    edx,DWORD PTR [eax]
  410373:	shl    BYTE PTR [eax+0x36],0xe2
  410377:	nop
  410378:	int3   
  410379:	mov    eax,DWORD PTR [eax]
  41037b:	add    DWORD PTR [eax],ebp
  41037d:	imul   edi,DWORD PTR [ecx+0x47],0x5004cc01
  410384:	int3   
  410385:	jne    0x410347
  410387:	add    ecx,esp
  410389:	test   al,0x40
  41038b:	and    edi,edi
  41038d:	add    DWORD PTR [esi+0x10],edx
  410390:	hlt    
  410391:	inc    esi
  410392:	inc    BYTE PTR [ecx]
  410394:	add    DWORD PTR [eax],eax
  410396:	or     BYTE PTR [ebp-0x7d],bl
  410399:	add    BYTE PTR [edi],cl
  41039b:	add    dh,dl
  41039d:	pop    ss
  41039e:	js     0x4103fe
  4103a0:	add    al,al
  4103a2:	add    DWORD PTR [ebp+0x22],edx
  4103a5:	nop
  4103a6:	mov    dl,0x59
  4103a8:	add    BYTE PTR [eax],cl
  4103aa:	mov    eax,DWORD PTR [ebx]
  4103ac:	je     0x4103fe
  4103ae:	add    DWORD PTR [esi-0xe],eax
  4103b1:	cli    
  4103b2:	mov    bl,0xde
  4103b4:	dec    DWORD PTR [eax]
  4103b6:	mov    eax,DWORD PTR [eax]
  4103b8:	cs call 0xdd55:0xcc33229e
  4103c0:	add    DWORD PTR [eax],ecx
  4103c2:	jne    0x4103c4
  4103c4:	adc    DWORD PTR [eax-0x2f],eax
  4103c7:	scas   eax,DWORD PTR es:[edi]
  4103c8:	dec    esp
  4103ca:	mov    eax,eax
  4103cc:	push   ebp
  4103cd:	imul   edi,DWORD PTR [ecx-0x19],0x0
  4103d1:	jne    0x4103d3
  4103d3:	jne    0x41035e
  4103d5:	mov    eax,DWORD PTR [ebp+0x0]
  4103d8:	adc    dl,BYTE PTR [ebp-0x74ff5baa]
  4103de:	add    bh,bh
  4103e0:	mov    esi,0xc0763e2f
  4103e5:	test   DWORD PTR [eax],edx
  4103e7:	add    ah,cl
  4103e9:	push   ebp
  4103ea:	mov    DWORD PTR [ecx-0x1a33f320],ecx
  4103f0:	push   esi
  4103f1:	add    al,0x0
  4103f3:	je     0x41040a
  4103f5:	loop   0x410470
  4103f7:	ds inc edi
  4103fa:	add    edi,edi
  4103fc:	bswap  esp
  4103fe:	add    bh,al
  410400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410401:	inc    ebx
  410402:	rcr    DWORD PTR [edx-0x75],1
  410405:	int3   
  410406:	add    BYTE PTR [ebx+0x6944c1e8],cl
  41040c:	adc    eax,0x1458b74
  410411:	add    BYTE PTR [ebx],al
  410413:	inc    ebp
  410414:	mov    cl,0xc1
  410416:	ins    DWORD PTR es:[edi],dx
  410417:	jae    0x410419
  410419:	inc    ebp
  41041a:	mov    ecx,esp
  41041c:	hlt    
  41041d:	adc    DWORD PTR [ecx],eax
  41041f:	push   edi
  410420:	add    BYTE PTR [ebp+0x33],al
  410423:	int3   
  410424:	push   0x4
  410426:	add    edi,edi
  410428:	das    
  410429:	and    al,BYTE PTR [edx-0x7c72ff4d]
  41042f:	push   ebp
  410430:	shl    esi,0xb3
  410433:	mov    edx,0xcc00008b
  410438:	add    al,al
  41043a:	test   esp,ecx
  41043c:	fld    QWORD PTR [ecx+0x8554f21]
  410442:	dec    DWORD PTR [ebx+0x3448cdc6]
  410448:	int3   
  410449:	add    edi,edi
  41044b:	mov    DWORD PTR [eax],eax
  41044d:	je     0x410494
  41044f:	add    al,al
  410451:	fadd   DWORD PTR [eax+0x75]
  410454:	add    BYTE PTR [ebx-0x6f4eff75],cl
  41045a:	push   0x2a
  41045c:	add    BYTE PTR [eax+eax*1],al
  41045f:	inc    DWORD PTR [eax]
  410461:	add    edi,edi
  410463:	mov    esp,DWORD PTR [ebx+0x10ae1430]
  410469:	add    ecx,DWORD PTR [edi]
  41046b:	jmp    DWORD PTR [ecx]
  41046d:	sbb    al,0x58
  41046f:	jae    0x410471
  410471:	add    bh,bh
  410473:	add    BYTE PTR [eax],al
  410475:	rol    BYTE PTR [eax],0xdd
  410478:	xchg   edi,eax
  41047a:	ror    DWORD PTR [ebx],0xcc
  41047d:	add    eax,esp
  41047f:	add    eax,esi
  410481:	daa    
  410482:	xchg   edi,eax
  410483:	sbb    BYTE PTR [eax],al
  410485:	adc    eax,0xcc0385
  41048a:	int3   
  41048b:	jne    0x41042b
  41048d:	jo     0x4104e7
  41048f:	jg     0x41041c
  410491:	push   eax
  410492:	int3   
  410493:	inc    ebp
  410494:	add    al,BYTE PTR [edx]
  410496:	and    ecx,esp
  410498:	int3   
  410499:	mov    esi,DWORD PTR [ebp+0x0]
  41049c:	mov    eax,eax
  41049e:	push   eax
  41049f:	add    BYTE PTR [ebx+0x2e928a],ah
  4104a5:	push   ebp
  4104a6:	add    ah,cl
  4104a8:	out    0xa6,al
  4104aa:	aad    0x85
  4104ac:	adc    BYTE PTR [ecx+0x4d01],cl
  4104b2:	mov    ecx,DWORD PTR [ebp-0x57f27524]
  4104b8:	int3   
  4104b9:	add    BYTE PTR [ebx+0x34a6b501],cl
  4104bf:	retf   
  4104c0:	add    BYTE PTR [ecx+0x1ecec],cl
  4104c6:	mov    eax,DWORD PTR [eax]
  4104c8:	dec    ecx
  4104c9:	mov    ds:0x801b845,al
  4104ce:	ffree  st(0)
  4104d0:	pop    ds
  4104d1:	mov    al,ds:0x8cc1624
  4104d6:	or     al,0xcc
  4104d8:	dec    ebp
  4104d9:	inc    esi
  4104da:	adc    eax,0x2aa7a574
  4104df:	cdq    
  4104e0:	mov    ebp,ebx
  4104e2:	call   DWORD PTR [eax]
  4104e4:	push   esp
  4104e5:	push   0xe008c0
  4104ea:	mov    eax,DWORD PTR [eax]
  4104ec:	mov    ecx,DWORD PTR [ebx-0x50cb74ab]
  4104f2:	clc    
  4104f3:	das    
  4104f4:	inc    DWORD PTR [ecx]
  4104f6:	add    bh,bh
  4104f8:	(bad)  
  4104f9:	retf   
  4104fa:	(bad)  
  4104fb:	popf   
  4104fc:	add    DWORD PTR [ebp-0x40],ebx
  4104ff:	mov    ecx,esp
  410501:	add    BYTE PTR [ebx-0x3ba97801],cl
  410507:	arpl   sp,cx
  410509:	add    al,0x6a
  41050b:	inc    ebp
  41050c:	mov    bl,0x8e
  41050e:	sub    bl,BYTE PTR [ebp+ecx*4+0x0]
  410512:	add    al,0x1
  410514:	add    DWORD PTR [eax],eax
  410516:	mov    eax,DWORD PTR [eax]
  410518:	mov    eax,ds:0x10f1d776
  41051d:	add    edi,eax
  41051f:	mov    ecx,DWORD PTR [ebx+0x663c2f]
  410525:	call   DWORD PTR [esi+0x0]
  410528:	mov    DWORD PTR [ebx+0x4ae8b00],ecx
  41052e:	ins    DWORD PTR es:[edi],dx
  41052f:	ret    
  410530:	mov    eax,DWORD PTR [eax]
  410532:	push   ebp
  410533:	dec    ebp
  410534:	dec    ebx
  410535:	int    0x4a
  410537:	bound  edx,QWORD PTR ds:0x758900cc
  41053d:	add    al,0x0
  41053f:	int3   
  410540:	inc    esi
  410541:	add    ch,BYTE PTR [edi-0x33feff66]
  410547:	push   eax
  410548:	(bad)  
  410549:	pop    edi
  41054a:	adc    al,0x97
  41054c:	add    DWORD PTR [eax],eax
  41054e:	add    bh,bh
  410550:	jne    0x50820e3e
  410556:	xchg   edx,eax
  410557:	int    0x0
  410559:	mov    eax,DWORD PTR [ebp+0x0]
  41055c:	sbb    al,0x72
  41055e:	jo     0x4105c9
  410560:	int3   
  410561:	int3   
  410562:	loopne 0x410564
  410564:	call   0xa045056a
  410569:	arpl   di,bp
  41056b:	ret    0x8b8b
  41056e:	or     BYTE PTR [ecx],al
  410570:	lods   al,BYTE PTR ds:[esi]
  410571:	cmp    DWORD PTR [ecx-0x33ff7466],ebp
  410577:	push   ebp
  410578:	mov    ebx,ebp
  41057a:	inc    DWORD PTR [ecx]
  41057c:	imul   ah
  41057e:	outs   dx,BYTE PTR ss:[esi]
  410580:	add    BYTE PTR [esi*2+0x17fcd01],al
  410587:	cdq    
  410588:	push   0x55
  41058a:	add    bh,bh
  41058c:	mov    DWORD PTR [eax],eax
  41058e:	add    BYTE PTR [eax+eiz*2],cl
  410591:	lods   eax,DWORD PTR ds:[esi]
  410592:	jle    0x410537
  410594:	add    bh,al
  410596:	add    al,ch
  410598:	fbstp  TBYTE PTR ds:0x8debb
  41059e:	(bad)  
  41059f:	int3   
  4105a0:	add    BYTE PTR [ebx-0x62e4ffb3],cl
  4105a6:	and    DWORD PTR [edi-0x33ff1400],eax
  4105ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105ad:	out    0xf6,al
  4105af:	xor    eax,DWORD PTR [eax]
  4105b1:	add    BYTE PTR [ebx],dh
  4105b3:	add    DWORD PTR [eax],eax
  4105b5:	mov    eax,DWORD PTR [eax]
  4105b7:	add    BYTE PTR [edx+0x98e0de],bh
  4105bd:	ror    ah,0x8b
  4105c0:	sbb    al,0xf5
  4105c2:	mov    ds:0x8b01b3,al
  4105c7:	add    BYTE PTR [ebx-0x3c740100],al
  4105cd:	mov    DWORD PTR ss:[ebx+0x55330072],edi
  4105d4:	(bad)  
  4105d5:	fstp   TBYTE PTR [edi-0x3d]
  4105d8:	test   DWORD PTR [ebx-0x17ea75],ecx
  4105de:	mov    edi,edi
  4105e0:	add    BYTE PTR [ebx+0x880823],cl
  4105e6:	(bad)  
  4105e7:	fstp   QWORD PTR [ebp+0x54]
  4105ea:	fcomip st,st(5)
  4105ec:	rol    DWORD PTR [eax],0xdd
  4105ef:	int3   
  4105f0:	mov    esp,ecx
  4105f2:	add    BYTE PTR [ebx-0x1d5ca2f8],cl
  4105f8:	mov    WORD PTR [eax],es
  4105fa:	add    DWORD PTR [eax],eax
  4105fc:	mov    ebx,edx
  4105fe:	and    dl,0x55
  410601:	add    BYTE PTR [ebp+0x5600ec56],cl
  410607:	mov    edx,DWORD PTR [eax]
  410609:	out    0xec,al
  41060b:	adc    BYTE PTR [edx],0x50
  41060e:	mov    ecx,DWORD PTR [ebx+0x43a15100]
  410614:	mov    ds:0xcc00018b,al
  410619:	enclv  
  41061c:	fisttp QWORD PTR [edx+edx*4+0x15ff2ee4]
  410623:	add    BYTE PTR [esp+ebp*1],al
  410626:	stc    
  410627:	shr    DWORD PTR [ebp-0x77],cl
  41062a:	add    BYTE PTR [eax],al
  41062c:	add    al,0xff
  41062e:	add    bh,bh
  410630:	mov    ebp,DWORD PTR [ebx+esi*2-0x14b9d0ce]
  410637:	mov    eax,DWORD PTR [eax]
  410639:	inc    esi
  41063a:	sub    BYTE PTR cs:[edi+0x74],dl
  41063e:	int3   
  41063f:	je     0x4105cc
  410641:	or     BYTE PTR [ebx+0x45148b75],cl
  410647:	mov    ds:0xff008d72,eax
  41064c:	int3   
  41064d:	push   ebp
  41064e:	dec    esi
  41064f:	es pushf 
  410651:	add    BYTE PTR [ecx],al
  410653:	mov    eax,DWORD PTR [eax]
  410655:	add    ah,cl
  410657:	or     DWORD PTR [ebx-0x594f1037],0x46
  41065e:	in     al,dx
  41065f:	mov    ebp,DWORD PTR [edx-0x39]
  410662:	aad    0x69
  410664:	cmp    ecx,esp
  410666:	add    BYTE PTR [eax],al
  410668:	int3   
  410669:	mov    eax,DWORD PTR [eax]
  41066b:	je     0x4106e1
  41066d:	adc    al,0xd5
  41066f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410670:	clc    
  410671:	mov    ebp,ebx
  410673:	lea    eax,[eax]
  410675:	cmp    ebp,DWORD PTR [edx-0x74225e90]
  41067b:	inc    esi
  41067c:	add    BYTE PTR [eax],al
  41067e:	test   DWORD PTR [eax],eax
  410680:	add    BYTE PTR [ebx+0xcfc188],cl
  410686:	add    BYTE PTR [ebx-0x4d0c5d34],al
  41068c:	sahf   
  41068d:	je     0x410693
  41068f:	mov    DWORD PTR [eax],eax
  410691:	mov    eax,DWORD PTR [eax]
  410693:	inc    DWORD PTR [eax]
  410695:	comiss xmm6,xmm6
  410698:	repnz mov eax,DWORD PTR [eax]
  41069b:	mov    ecx,DWORD PTR [eax*2-0x76f3bd82]
  4106a2:	push   eax
  4106a3:	add    BYTE PTR [ebx+ecx*4],cl
  4106a6:	int3   
  4106a7:	add    BYTE PTR [ebx],al
  4106a9:	adc    DWORD PTR [eax+edi*2],ecx
  4106ac:	or     al,al
  4106ae:	or     ah,cl
  4106b0:	mov    esp,DWORD PTR [eax+0x0]
  4106b3:	imul   eax,eax,0x18b0100
  4106b9:	mov    ecx,esp
  4106bb:	mov    eax,DWORD PTR [eax]
  4106bd:	test   DWORD PTR gs:[edx-0x728b744a],ecx
  4106c4:	add    BYTE PTR [ecx+ebx*2-0x76ffe556],cl
  4106cb:	or     BYTE PTR [eax],al
  4106cd:	(bad)  
  4106ce:	inc    DWORD PTR [esi-0x75]
  4106d1:	fdiv   QWORD PTR [esi+0x4]
  4106d4:	or     al,0xc0
  4106d6:	mov    ecx,DWORD PTR [ebx-0x3c587d14]
  4106dc:	imul   eax,DWORD PTR [ebp+0x40103ec],0x2c006a01
  4106e6:	(bad)  
  4106e7:	and    DWORD PTR [esi],edx
  4106e9:	add    BYTE PTR [ebx+0x6e59cc00],cl
  4106ef:	or     eax,0x155d5083
  4106f4:	push   esi
  4106f5:	or     al,0xe8
  4106f7:	add    al,0xcc
  4106f9:	(bad)  
  4106fa:	cmp    ebp,ebp
  4106fc:	out    dx,al
  4106fd:	adc    BYTE PTR [eax],al
  4106ff:	fisttp QWORD PTR [ebx+0x37bae22c]
  410705:	test   DWORD PTR [edx+0x0],ebp
  410708:	add    BYTE PTR [eax],al
  41070a:	loopne 0x4106e9
  41070c:	jne    0x4106b8
  41070e:	pop    ebx
  41070f:	fwait
  410710:	cmp    esp,ecx
  410712:	dec    DWORD PTR [ebx-0x90a9900]
  410718:	sub    eax,0x46000f
  41071d:	or     bh,bh
  41071f:	push   esi
  410720:	add    BYTE PTR [edi],bl
  410722:	clc    
  410723:	in     al,0x6c
  410725:	mov    eax,DWORD PTR [eax]
  410727:	add    ecx,DWORD PTR [ebx+0x61e88117]
  41072d:	inc    esi
  41072e:	dec    ebp
  41072f:	int3   
  410730:	jmp    0x410732
  410732:	add    BYTE PTR [edx+0x6a],ch
  410735:	loop   0x41078b
  410737:	mov    edi,0x4575dda6
  41073c:	je     0x4107ae
  41073e:	imul   esi,DWORD PTR cs:[ebp+0x0],0xcc000075
  410746:	ud0    eax,DWORD PTR [eax]
  410749:	pop    ds
  41074a:	mov    bl,ch
  41074c:	pop    ds
  41074d:	add    BYTE PTR [ebp-0x14],dh
  410750:	adc    BYTE PTR [eax],al
  410752:	sbb    edx,esp
  410754:	icebp  
  410755:	ror    ah,0x55
  410758:	inc    DWORD PTR [eax]
  41075a:	dec    DWORD PTR [ebp-0x45cfd800]
  410760:	int3   
  410761:	or     BYTE PTR [ebx+0x455d00ff],cl
  410767:	pop    esi
  410768:	shl    BYTE PTR [ebx+eax*1+0x4],1
  41076c:	mov    eax,DWORD PTR [eax]
  41076e:	je     0x410770
  410770:	or     al,0x93
  410772:	leave  
  410773:	push   ebp
  410774:	or     DWORD PTR [ebx+0x72cc0015],ecx
  41077a:	daa    
  41077b:	ja     0x410772
  41077d:	call   0xec420682
  410782:	add    BYTE PTR [eax],al
  410784:	add    al,0x36
  410786:	inc    edx
  410787:	jnp    0x4107f6
  410789:	int3   
  41078a:	add    BYTE PTR [esi-0x34],dl
  41078d:	dec    edx
  41078e:	and    BYTE PTR ds:0x8cce7,cl
  410794:	jne    0x410796
  410796:	add    DWORD PTR [eax],eax
  410798:	mov    edi,cr2
  41079b:	adc    esp,DWORD PTR [eax+0x40075cc]
  4107a1:	retf   0x6693
  4107a4:	xor    eax,0x56554608
  4107a9:	int3   
  4107aa:	inc    ebp
  4107ab:	add    DWORD PTR [ebp-0x51],esi
  4107ae:	add    BYTE PTR ds:0x133ea,al
  4107b4:	jne    0x4107bd
  4107b6:	cmp    eax,0x100ebbe
  4107bb:	(bad)  
  4107bc:	(bad)  
  4107bd:	inc    DWORD PTR [eax]
  4107bf:	jmp    0x410746
  4107c1:	rcl    BYTE PTR [ebp+0x7b],0xe8
  4107c5:	inc    ebp
  4107c6:	or     al,0x8b
  4107c8:	add    BYTE PTR [edi+0x728641],ch
  4107ce:	test   edi,edi
  4107d0:	je     0x4107b2
  4107d2:	inc    esi
  4107d3:	pop    ebp
  4107d4:	inc    DWORD PTR [edi]
  4107d6:	inc    ecx
  4107d7:	xchg   ecx,eax
  4107d8:	cmp    al,BYTE PTR [esp+ecx*8]
  4107db:	add    bh,bh
  4107dd:	inc    esp
  4107de:	in     al,0xf4
  4107e0:	test   DWORD PTR [eax],eax
  4107e2:	int3   
  4107e3:	adc    BYTE PTR [ebx-0x74750000],cl
  4107e9:	popa   
  4107ea:	adc    al,BYTE PTR [ecx+0x4566]
  4107f0:	int3   
  4107f1:	add    al,0x53
  4107f3:	inc    esi
  4107f4:	inc    esp
  4107f5:	dec    ebp
  4107f6:	add    BYTE PTR [eax],al
  4107f8:	mov    eax,DWORD PTR [ecx]
  4107fa:	add    DWORD PTR [ecx],eax
  4107fc:	add    BYTE PTR [edi-0x14],cl
  4107ff:	sbb    al,0x6
  410801:	mov    DWORD PTR [eax],eax
  410803:	mov    esi,DWORD PTR [esp+ecx*8-0x3e]
  410807:	pop    esp
  410808:	jg     0x4107d6
  41080a:	add    al,0x0
  41080c:	mov    ecx,DWORD PTR [ecx-0x66b900ba]
  410812:	mov    ah,0x33
  410814:	test   esp,0xc00174cc
  41081a:	xor    eax,DWORD PTR [esi+0xb]
  41081d:	int3   
  41081e:	mov    ecx,DWORD PTR [ebp+0x0]
  410821:	int3   
  410822:	fld    QWORD PTR [ebx+0x6d96d68b]
  410828:	test   al,0xdd
  41082a:	mov    eax,DWORD PTR [esi-0x34]
  41082d:	or     BYTE PTR [edx],cl
  41082f:	and    al,BYTE PTR fs:[ecx]
  410832:	add    BYTE PTR [edx*2-0x177476ff],al
  410839:	scas   eax,DWORD PTR es:[edi]
  41083a:	sub    al,0x6
  41083c:	pusha  
  41083d:	(bad)  
  41083e:	in     al,dx
  41083f:	push   eax
  410840:	dec    edi
  410842:	repnz in eax,0xa1
  410845:	mov    DWORD PTR [ecx-0x7474ffff],ecx
  41084b:	int3   
  41084c:	int3   
  41084d:	add    dh,BYTE PTR [edi+edx*8]
  410850:	or     ecx,esp
  410852:	dec    DWORD PTR [ecx-0x7ec2d3a3]
  410858:	mov    ebp,0x5075758d
  41085d:	inc    ebp
  41085e:	add    BYTE PTR [ecx],al
  410860:	jmp    0x410835
  410862:	shl    edi,cl
  410864:	push   ebp
  410865:	xor    ecx,DWORD PTR [ebp+0x0]
  410868:	inc    ebp
  410869:	pop    ss
  41086a:	adc    ch,ah
  41086c:	aaa    
  41086d:	rol    BYTE PTR [ecx],0xff
  410870:	add    BYTE PTR [ebp+0x22000100],al
  410876:	jo     0x4108a4
  410878:	xor    DWORD PTR [esi+0x0],edx
  41087b:	add    ch,bl
  41087d:	pop    ss
  41087e:	sbb    BYTE PTR [ebx],0x8e
  410881:	sldt   eax
  410884:	push   esi
  410885:	mov    ecx,DWORD PTR [esp+ecx*8]
  410888:	add    al,0xc7
  41088a:	std    
  41088b:	xchg   ebp,eax
  41088c:	call   0x8bc69192
  410891:	jmp    FWORD PTR [edi]
  410893:	cmp    eax,0x8740053
  410898:	add    DWORD PTR [eax],eax
  41089a:	int3   
  41089b:	add    BYTE PTR [eax],al
  41089d:	jo     0x410914
  41089f:	or     DWORD PTR [edi+0x8],0xd3460000
  4108a6:	gs (bad) 
  4108a8:	std    
  4108a9:	lea    eax,[ebp-0x1]
  4108ac:	add    BYTE PTR [edi],cl
  4108ae:	add    BYTE PTR [eax+eax*1+0x39],dh
  4108b2:	xor    BYTE PTR [ebx-0x66],dl
  4108b5:	push   eax
  4108b6:	add    BYTE PTR [eax],al
  4108b8:	add    DWORD PTR [esi+0x155a5b68],eax
  4108be:	mov    esp,ecx
  4108c0:	or     BYTE PTR [edi],cl
  4108c2:	(bad)  
  4108c3:	call   DWORD PTR ds:0x21aa59b1
  4108c9:	int3   
  4108ca:	inc    esi
  4108cb:	fld    QWORD PTR [eax]
  4108cd:	add    esi,DWORD PTR [ebx-0x7433ed6e]
  4108d3:	push   ebp
  4108d4:	je     0x4108d5
  4108d6:	add    esi,DWORD PTR [eax+ecx*1+0x40]
  4108da:	xor    al,0x4c
  4108dc:	push   eax
  4108dd:	mov    edi,edi
  4108df:	push   ebp
  4108e0:	add    al,0xbe
  4108e2:	test   eax,0x4cc1b9a
  4108e7:	add    DWORD PTR [esi-0x75],edx
  4108ea:	loopne 0x4108ec
  4108ec:	mov    ecx,eax
  4108ee:	ret    0xe665
  4108f1:	int3   
  4108f2:	push   0xffffff85
  4108f4:	jmp    edx
  4108f6:	push   0x65
  4108f8:	and    DWORD PTR [eax],eax
  4108fa:	mov    ecx,DWORD PTR [ebx+ecx*4]
  4108fd:	add    BYTE PTR [eax],al
  4108ff:	je     0x410900
  410901:	ret    
  410902:	lahf   
  410903:	hlt    
  410904:	mov    eax,ds:0x8b75ccc0
  410909:	push   esi
  41090a:	ins    BYTE PTR es:[edi],dx
  41090b:	into   
  41090c:	push   eax
  41090d:	or     eax,DWORD PTR [eax]
  41090f:	int3   
  410910:	add    DWORD PTR [eax],0xffffffff
  410913:	push   ebp
  410914:	je     0x410916
  410916:	mov    dl,bl
  410918:	push   eax
  410919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41091a:	adc    BYTE PTR [eax],al
  41091c:	add    BYTE PTR [ebp-0x55],dh
  41091f:	fwait
  410920:	sar    DWORD PTR [ebp+0x751500],cl
  410926:	xor    eax,DWORD PTR [ecx]
  410928:	adc    BYTE PTR [eax],al
  41092a:	mov    ecx,0xccf448af
  41092f:	mov    eax,DWORD PTR [ebx]
  410931:	add    BYTE PTR [edi-0x65],al
  410934:	lock mov ebx,0x8301088b
  41093a:	dec    DWORD PTR [ebx+0x7a8b0083]
  410940:	pop    ecx
  410941:	icebp  
  410942:	add    BYTE PTR [ebp+0x8],dh
  410945:	adc    dl,dh
  410947:	jnp    0x410985
  410949:	addr16 int3 
  41094b:	add    BYTE PTR [eax],al
  41094d:	add    BYTE PTR [ebp-0x5a1f8a8b],cl
  410953:	add    eax,0x56034f8a
  410958:	int3   
  410959:	add    al,dl
  41095b:	std    
  41095c:	push   ebp
  41095d:	fiadd  DWORD PTR [eax]
  41095f:	add    DWORD PTR [eax],eax
  410961:	adc    eax,0xff008b00
  410966:	mov    ebp,ecx
  410968:	mov    al,0x37
  41096a:	add    al,ch
  41096c:	mov    ecx,DWORD PTR [eax]
  41096e:	mov    dl,BYTE PTR [edx-0x7474bc90]
  410974:	mov    ebx,ebp
  410976:	add    BYTE PTR [ecx],al
  410978:	add    BYTE PTR [ebx+0x279d28e],cl
  41097e:	int3   
  41097f:	mov    eax,DWORD PTR [eax+eax*1]
  410982:	adc    bl,BYTE PTR [ebx]
  410984:	sub    al,0xa3
  410986:	inc    DWORD PTR [eax]
  410988:	mov    DWORD PTR [ebp-0x7474ff34],0x396dd7de
  410992:	mov    edx,DWORD PTR [eax-0x75]
  410995:	add    BYTE PTR [edx-0xe],bh
  410998:	ins    BYTE PTR es:[edi],dx
  410999:	and    eax,0x8d830056
  41099e:	bswap  esp
  4109a0:	fld    QWORD PTR [eax]
  4109a2:	pop    esi
  4109a3:	std    
  4109a4:	outs   dx,BYTE PTR ds:[esi]
  4109a5:	pop    ecx
  4109a6:	mov    ecx,esp
  4109a8:	add    al,0xff
  4109aa:	stos   BYTE PTR es:[edi],al
  4109ab:	dec    edi
  4109ac:	or     al,BYTE PTR [edi+edi*8+0x838d]
  4109b3:	jne    0x41093a
  4109b5:	pop    ebp
  4109b6:	pop    es
  4109b7:	sar    DWORD PTR [esi],cl
  4109b9:	adc    BYTE PTR [ebp-0x75],dh
  4109bc:	dec    DWORD PTR [ebx+0x58893765]
  4109c2:	add    esp,ecx
  4109c4:	mov    eax,DWORD PTR [eax]
  4109c6:	add    ah,ch
  4109c8:	dec    esp
  4109ca:	pop    eax
  4109cb:	xor    ecx,DWORD PTR [ebx+0x44]
  4109ce:	adc    ah,cl
  4109d0:	rol    BYTE PTR [eax],0xd2
  4109d3:	sbb    edi,eax
  4109d5:	or     DWORD PTR [ebx+0x46000000],0x75
  4109dc:	push   0xc
  4109de:	arpl   WORD PTR ds:0x3984,di
  4109e4:	mov    ecx,DWORD PTR [ebx+0x30b32fb2]
  4109ea:	in     al,dx
  4109eb:	add    al,ch
  4109ed:	call   0x46cc1201
  4109f2:	div    al
  4109f4:	(bad)
  4109f8:	add    al,0x0
  4109fa:	cwde   
  4109fb:	cdq    
  4109fc:	mov    dh,0x1c
  4109fe:	mov    eax,DWORD PTR [ecx]
  410a00:	(bad)  
  410a02:	mov    DWORD PTR [eax+eax*1+0x0],esi
  410a06:	ss lahf 
  410a08:	int    0x8c
  410a0a:	adc    eax,0x6c450085
  410a0f:	loopne 0x410997
  410a11:	mov    eax,ds:0xffcc7483
  410a16:	add    BYTE PTR [ebx-0x4fe4ef34],cl
  410a1c:	inc    ebx
  410a1d:	pop    esi
  410a1e:	or     ah,cl
  410a20:	int3   
  410a21:	pop    ebp
  410a22:	(bad)  
  410a23:	sbb    edi,DWORD PTR [esi*8+0xc0000dd]
  410a2a:	add    BYTE PTR [eax],al
  410a2c:	mov    ecx,DWORD PTR [eax]
  410a2e:	jae    0x4109d2
  410a30:	imul   edi,DWORD PTR [ecx],0xffffff83
  410a33:	jmp    0x410a7b
  410a35:	add    BYTE PTR [ecx-0xca90de],cl
  410a3b:	adc    BYTE PTR [ebp-0x75],al
  410a3e:	str    WORD PTR [ecx+0x2e94ec45]
  410a45:	xor    eax,DWORD PTR [eax]
  410a47:	add    BYTE PTR [eax],al
  410a49:	fst    QWORD PTR [edi-0x33fc3e1f]
  410a4f:	mov    ecx,DWORD PTR [ecx+0x1450f0c]
  410a55:	mov    esp,DWORD PTR [eax-0x22]
  410a58:	mov    WORD PTR [edx],gs
  410a5a:	inc    esi
  410a5b:	add    DWORD PTR [eax],eax
  410a5d:	adc    eax,0x719ca1cc
  410a62:	(bad)  
  410a63:	int3   
  410a64:	int3   
  410a65:	add    BYTE PTR [ebp-0x1],al
  410a68:	inc    ebp
  410a69:	mov    edi,DWORD PTR [esi]
  410a6b:	lock out 0xcc,al
  410a6e:	test   DWORD PTR [ebx],eax
  410a70:	mov    eax,DWORD PTR [esi-0x39]
  410a73:	shr    BYTE PTR [eax+0x40],1
  410a76:	lea    ecx,[eax]
  410a78:	add    DWORD PTR [edx+0x56],ebp
  410a7b:	(bad)  
  410a7c:	mov    eax,esp
  410a7e:	xchg   DWORD PTR [ebx+0x1],esp
  410a81:	scas   eax,DWORD PTR es:[edi]
  410a82:	mov    eax,DWORD PTR [eax]
  410a84:	or     al,0x4d
  410a86:	pop    es
  410a87:	fld    QWORD PTR [edi+0x26]
  410a8a:	(bad)  
  410a8b:	jmp    eax
  410a8d:	add    BYTE PTR ds:0xc8000145,dl
  410a93:	fs and cl,bl
  410a96:	je     0x410a58
  410a98:	inc    ebp
  410a99:	add    BYTE PTR [eax-0x17],bh
  410a9c:	adc    cl,BYTE PTR ds:0x85007446
  410aa2:	jne    0x410aa7
  410aa4:	or     al,0x45
  410aa6:	ins    DWORD PTR es:[edi],dx
  410aa7:	leave  
  410aa8:	cdq    
  410aa9:	push   ds
  410aaa:	rol    al,0x50
  410aad:	int3   
  410aae:	xor    al,0x32
  410ab0:	in     al,dx
  410ab1:	push   esi
  410ab2:	add    BYTE PTR [ebx+0x455d10cc],cl
  410ab8:	add    ch,bl
  410aba:	mov    esi,esi
  410abc:	jno    0x410ae7
  410abe:	add    BYTE PTR [ebp-0x7b],al
  410ac1:	add    BYTE PTR [ecx-0x3d],bl
  410ac4:	in     al,dx
  410ac5:	daa    
  410ac6:	add    BYTE PTR [esi-0x34],dl
  410ac9:	add    DWORD PTR [ebx*8-0xe82ff34],0xffffffef
  410ad1:	daa    
  410ad2:	int3   
  410ad3:	jne    0x410ad5
  410ad5:	jne    0x410af6
  410ad7:	push   ds
  410ad8:	pusha  
  410ad9:	jmp    0x410aa7
  410adb:	mov    ecx,esp
  410add:	add    DWORD PTR [eax],0xffffffff
  410ae0:	add    bh,bh
  410ae2:	lds    edi,FWORD PTR gs:[ecx+0x7]
  410ae6:	int3   
  410ae7:	add    DWORD PTR [ebx+0x3cae7000],ecx
  410aed:	push   0x0
  410aef:	push   ebp
  410af0:	xor    eax,DWORD PTR [eax]
  410af2:	int3   
  410af3:	add    eax,0x4d
  410af6:	dec    edx
  410af7:	into   
  410af8:	inc    eax
  410af9:	call   DWORD PTR fs:[eax]
  410afc:	lea    eax,[eax]
  410afe:	mov    ebx,ecx
  410b00:	loopne 0x410b62
  410b02:	test   edi,edi
  410b04:	je     0x410b12
  410b06:	inc    DWORD PTR [ebp-0x36181f34]
  410b0c:	xor    ah,BYTE PTR [ebx-0x77]
  410b0f:	(bad)  
  410b10:	push   DWORD PTR [ebp-0x51]
  410b13:	xchg   ecx,eax
  410b14:	sub    dl,BYTE PTR [ecx-0x23]
  410b17:	add    DWORD PTR [ecx],eax
  410b19:	push   0xffffff83
  410b1b:	(bad)  
  410b1c:	inc    eax
  410b1e:	sbb    al,0x1b
  410b20:	dec    esi
  410b21:	pop    esp
  410b22:	mov    DWORD PTR [ebx-0x554ffffc],ecx
  410b28:	pop    DWORD PTR [ebx-0x75]
  410b2b:	add    BYTE PTR [ebx+0x1010000],cl
  410b31:	mov    ebx,DWORD PTR [edx+0x4523f497]
  410b37:	mov    eax,DWORD PTR [eax+edx*1]
  410b3a:	push   esi
  410b3b:	loope  0x410ae9
  410b3d:	push   ss
  410b3e:	cmp    edi,0x0
  410b41:	int3   
  410b42:	mov    edi,edi
  410b44:	add    BYTE PTR [ecx+0x5df1c1a6],cl
  410b4a:	add    BYTE PTR [ebp+0x0],al
  410b4d:	xor    ecx,DWORD PTR [edx+0x10f972aa]
  410b53:	lea    edx,[esi+0x15]
  410b56:	add    ah,cl
  410b58:	je     0x410b5b
  410b5a:	ins    DWORD PTR es:[edi],dx
  410b5b:	cmc    
  410b5c:	adc    dh,bl
  410b5e:	add    DWORD PTR [ebx+0x2ec68b0f],eax
  410b64:	popa   
  410b65:	(bad)  
  410b66:	ror    BYTE PTR [ebx+0x8b8b8b],0xcc
  410b6d:	mov    esi,ebx
  410b6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b70:	inc    edi
  410b71:	inc    esi
  410b72:	mov    ebx,DWORD PTR [ebp+0x74]
  410b75:	mov    edx,DWORD PTR [esp+eax*8+0x20]
  410b79:	sbb    eax,0xcc000000
  410b7e:	add    BYTE PTR [ecx],al
  410b80:	je     0x410b4e
  410b82:	iret   
  410b83:	or     dh,BYTE PTR [bx]
  410b86:	mov    DWORD PTR [eax],0x177bec03
  410b8c:	pushf  
  410b8d:	sti    
  410b8e:	int3   
  410b8f:	add    BYTE PTR [eax],al
  410b91:	add    BYTE PTR [ebx+0x1a000045],cl
  410b97:	cdq    
  410b98:	dec    esp
  410b99:	clc    
  410b9a:	add    BYTE PTR [ebx-0x66cc3900],al
  410ba0:	jo     0x410bcc
  410ba2:	adc    BYTE PTR [eax],al
  410ba4:	add    BYTE PTR [edi+edi*8-0x7b],dh
  410ba8:	xor    eax,DWORD PTR [eax]
  410baa:	dec    edi
  410bab:	lahf   
  410bac:	xor    al,0xe
  410bae:	int3   
  410baf:	mov    ecx,DWORD PTR [eax]
  410bb1:	add    dh,al
  410bb3:	adc    al,0x92
  410bb5:	and    eax,eax
  410bb7:	add    BYTE PTR [ecx],al
  410bb9:	push   0x45
  410bbb:	inc    DWORD PTR [ecx]
  410bbd:	add    BYTE PTR [edx-0xa],bl
  410bc0:	dec    esp
  410bc1:	mov    esi,0x56018d74
  410bc6:	pushf  
  410bc7:	mov    ch,0xcb
  410bc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bca:	inc    ebp
  410bcb:	add    BYTE PTR [ebx+0x801cc],al
  410bd1:	mov    esi,esi
  410bd3:	sbb    bh,BYTE PTR [ebp-0x3fffff7c]
  410bd9:	dec    ebp
  410bda:	add    ch,ah
  410bdc:	cdq    
  410bdd:	push   ds
  410bde:	lea    eax,[eax]
  410be0:	test   DWORD PTR [eax],eax
  410be2:	add    esp,ecx
  410be4:	add    DWORD PTR [ecx],eax
  410be6:	mov    edx,0xc0c0947f
  410beb:	mov    edi,edi
  410bed:	push   ebp
  410bee:	and    ah,BYTE PTR fs:[ebp+0x53]
  410bf2:	add    BYTE PTR [ebx-0x137c7475],cl
  410bf8:	int3   
  410bf9:	add    BYTE PTR [ecx-0x13],al
  410bfc:	fwait
  410bfd:	pop    ss
  410bfe:	int3   
  410bff:	int3   
  410c00:	jne    0x410c02
  410c02:	bound  ecx,QWORD PTR [ebx-0x4]
  410c05:	add    ecx,esp
  410c07:	mov    ecx,esp
  410c09:	ud0    eax,DWORD PTR [eax]
  410c0c:	int3   
  410c0d:	adc    dh,cl
  410c0f:	xrelease xchg BYTE PTR [edx+0x0],ch
  410c13:	add    BYTE PTR [ebx+0x370fc6ff],cl
  410c19:	push   cs
  410c1a:	unpckhps xmm0,XMMWORD PTR [eax]
  410c1d:	or     al,0x45
  410c1f:	or     ch,bl
  410c21:	add    bl,al
  410c23:	inc    ebp
  410c24:	imul   edi,DWORD PTR [esi],0x8ec
  410c2a:	je     0x410c15
  410c2c:	fild   DWORD PTR [edi-0x5c]
  410c2f:	xor    eax,DWORD PTR [ecx]
  410c31:	rol    BYTE PTR [ebx+0x400c06a],0xfc
  410c38:	aas    
  410c39:	jno    0x410c38
  410c3b:	jmp    eax
  410c3d:	call   0x5f91d59f
  410c42:	fimul  WORD PTR [edi]
  410c44:	loopne 0x410c46
  410c46:	add    DWORD PTR [eax],eax
  410c48:	push   0xffffffe8
  410c4a:	test   DWORD PTR ds:0xd10327,ecx
  410c50:	add    DWORD PTR [ecx],eax
  410c52:	add    DWORD PTR [edx],edi
  410c54:	pop    es
  410c55:	xchg   edi,eax
  410c56:	popa   
  410c57:	add    BYTE PTR [ebx-0x741f7500],cl
  410c5d:	int3   
  410c5e:	jne    0x410c84
  410c60:	jmp    0x410c35
  410c62:	jl     0x410c64
  410c64:	in     al,dx
  410c65:	push   ebp
  410c66:	mov    DWORD PTR [eax+0xebfe30],0xcccc0845
  410c70:	add    BYTE PTR [eax+eax*1],cl
  410c73:	popa   
  410c74:	daa    
  410c75:	ja     0x410c66
  410c77:	inc    DWORD PTR [eax]
  410c79:	add    BYTE PTR [eax],al
  410c7b:	sbb    eax,0x74aefae3
  410c80:	add    BYTE PTR [ebx+0x8b018b],cl
  410c86:	add    DWORD PTR [ebx-0x74f04efc],ebp
  410c8c:	dec    DWORD PTR [ebx-0x12d3fe01]
  410c92:	sbb    bh,bh
  410c94:	int3   
  410c95:	add    BYTE PTR [ebp-0x1],bl
  410c98:	int3   
  410c99:	int3   
  410c9a:	int3   
  410c9b:	aaa    
  410c9c:	outs   dx,BYTE PTR ds:[esi]
  410c9d:	sbb    esi,ecx
  410c9f:	add    eax,DWORD PTR [eax]
  410ca1:	inc    ebp
  410ca2:	adc    dh,cl
  410ca4:	cmp    al,0x23
  410ca6:	aaa    
  410ca7:	int3   
  410ca8:	inc    esi
  410ca9:	add    esp,ecx
  410cab:	or     al,0x0
  410cad:	or     DWORD PTR [eax],0x29
  410cb0:	xor    eax,0x1c171
  410cb5:	mov    eax,DWORD PTR [eax]
  410cb7:	fbld   TBYTE PTR [esi+0x33151cf7]
  410cbd:	(bad)  
  410cbe:	mov    esp,ecx
  410cc0:	add    ah,cl
  410cc2:	adc    BYTE PTR [ebx-0x33052fd0],al
  410cc8:	add    ecx,DWORD PTR [ecx+0x7098c1ff]
  410cce:	jae    0x410c59
  410cd0:	int3   
  410cd1:	or     al,0x8b
  410cd3:	je     0x410cd5
  410cd5:	add    DWORD PTR [ebx+0x1c3a5af6],ecx
  410cdb:	(bad)  
  410cdc:	dec    DWORD PTR [eax+edx*2]
  410cdf:	sbb    ah,bh
  410ce1:	adc    DWORD PTR [esi+0x0],ecx
  410ce4:	mov    ebp,esp
  410ce6:	loopne 0x410c73
  410ce8:	add    BYTE PTR [ebx+0x447e3b89],al
  410cee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cef:	add    BYTE PTR [eax],al
  410cf1:	test   DWORD PTR [ebx+0x7131f079],ecx
  410cf7:	(bad)  
  410cf9:	add    BYTE PTR [esi+eax*2-0x75],dh
  410cfd:	mov    ecx,DWORD PTR [ecx-0x513dd7dc]
  410d03:	sar    bh,0xdd
  410d06:	add    al,0x12
  410d08:	xor    DWORD PTR [edx-0x3ff7fff6],eax
  410d0e:	add    DWORD PTR [eax+eax*1],ecx
  410d11:	or     BYTE PTR [eax],al
  410d13:	jmp    FWORD PTR [edx-0x16]
  410d16:	and    al,0x0
  410d18:	mov    ecx,DWORD PTR [ebx+0x1b3ed600]
  410d1e:	inc    eax
  410d1f:	int3   
  410d20:	inc    DWORD PTR [ebp+0x0]
  410d23:	inc    ebp
  410d24:	mov    DWORD PTR [eax+0x0],edx
  410d27:	xchg   edx,eax
  410d28:	outs   dx,BYTE PTR ds:[esi]
  410d29:	and    BYTE PTR ds:0x800c700,dh
  410d2f:	stos   BYTE PTR es:[edi],al
  410d30:	js     0x410ce7
  410d32:	inc    ecx
  410d33:	je     0x410cf5
  410d35:	add    BYTE PTR [eax-0x34],dl
  410d38:	jne    0x410dae
  410d3a:	push   ebp
  410d3b:	(bad)  
  410d3d:	lahf   
  410d3e:	jno    0x410db5
  410d40:	jne    0x410d92
  410d42:	add    BYTE PTR [eax-0x37],dh
  410d45:	xchg   BYTE PTR fs:[eax],al
  410d48:	int3   
  410d49:	verw   bx
  410d4c:	int3   
  410d4d:	add    DWORD PTR [ebp+0x8],ecx
  410d50:	popa   
  410d51:	mov    edx,edi
  410d53:	inc    esi
  410d54:	(bad)  
  410d55:	int3   
  410d56:	add    BYTE PTR [ebx+eax*4+0x5dccfc82],dl
  410d5d:	push   esi
  410d5e:	test   edi,edi
  410d60:	mov    ecx,DWORD PTR [ebx-0xde37a75]
  410d66:	inc    DWORD PTR [eax]
  410d68:	mov    ecx,DWORD PTR [ebp-0x1]
  410d6b:	or     DWORD PTR [ebx+0x35],ebp
  410d6e:	(bad)  
  410d6f:	je     0x410d71
  410d71:	add    DWORD PTR [eax],0x0
  410d74:	jmp    0x410d75
  410d76:	push   eax
  410d77:	cld    
  410d78:	adc    ecx,DWORD PTR [edi+0x5656ff1d]
  410d7e:	push   eax
  410d7f:	fist   DWORD PTR [edi]
  410d81:	jecxz  0x410d4f
  410d83:	mov    eax,DWORD PTR [eax]
  410d85:	int3   
  410d86:	add    DWORD PTR [ebp+eax*2-0x34],esi
  410d8a:	int3   
  410d8b:	imul   eax,DWORD PTR [edi-0x33a27c6a],0x90ae0055
  410d95:	leave  
  410d96:	sbb    ecx,DWORD PTR [ebx-0x337d0000]
  410d9c:	xor    ecx,DWORD PTR [ecx-0x480d0c00]
  410da2:	mov    dl,BYTE PTR [ebp+0x0]
  410da5:	add    BYTE PTR [eax],al
  410da7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410da8:	imul   ecx,DWORD PTR [ebp+0x7400080b],0xffffffcc
  410daf:	add    BYTE PTR [ebp+0x0],al
  410db2:	inc    ebp
  410db3:	fdivr  QWORD PTR [ebx-0x1a]
  410db6:	mov    ebx,0x10004c0
  410dbb:	or     ax,0x3cf6
  410dbf:	cmovge ecx,DWORD PTR [ecx+0x75cc00ec]
  410dc6:	push   DWORD PTR [edi+0x2a]
  410dc9:	daa    
  410dca:	stos   BYTE PTR es:[edi],al
  410dcb:	inc    DWORD PTR [eax]
  410dcd:	inc    DWORD PTR [eax]
  410dcf:	adc    BYTE PTR [esi-0x741321d6],cl
  410dd5:	mov    eax,DWORD PTR [ebp+0x0]
  410dd8:	dec    DWORD PTR [ebx-0x2c28d200]
  410dde:	pop    ebp
  410ddf:	add    ah,cl
  410de1:	add    BYTE PTR [ebp+0x14],dl
  410de4:	repz or eax,0xcc8bb1
  410dea:	dec    esp
  410dec:	dec    DWORD PTR [edi]
  410dee:	add    BYTE PTR [eax],bh
  410df0:	xchg   BYTE PTR [edx],ch
  410df2:	pop    ecx
  410df3:	add    BYTE PTR [ebp+0x0],dl
  410df6:	je     0x410dc4
  410df8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410df9:	xchg   ebx,eax
  410dfa:	push   esi
  410dfb:	int3   
  410dfc:	inc    DWORD PTR [ecx]
  410dfe:	add    ah,cl
  410e00:	add    BYTE PTR [ebp-0x360d0901],cl
  410e06:	inc    edi
  410e07:	dec    esp
  410e09:	fnsave [ebx]
  410e0b:	stos   BYTE PTR es:[edi],al
  410e0c:	test   al,0x36
  410e0e:	in     al,0x0
  410e10:	adc    eax,0xc0ff00c0
  410e15:	adc    eax,0xec377dc7
  410e1a:	adc    eax,0x7404cc00
  410e1f:	mov    al,ds:0xcc0fb4a4
  410e24:	mov    DWORD PTR [ebx-0x76ff7700],ecx
  410e2a:	or     BYTE PTR ds:0x85e5b76,dh
  410e30:	mov    esi,DWORD PTR [ebp-0x75]
  410e33:	sbb    cl,BYTE PTR [esi]
  410e35:	in     al,dx
  410e36:	pop    esi
  410e37:	(bad)  
  410e38:	mov    eax,DWORD PTR [ecx]
  410e3a:	pop    ebp
  410e3b:	add    BYTE PTR [ebx+0x9fb8be0],cl
  410e41:	shl    DWORD PTR [ebx+0x0],0x8b
  410e45:	call   DWORD PTR ds:0xf43ba96a
  410e4b:	mov    eax,DWORD PTR [eax]
  410e4d:	mov    eax,DWORD PTR [ecx]
  410e4f:	mov    DWORD PTR [eax],eax
  410e51:	or     BYTE PTR [eax],al
  410e53:	mov    ebp,0xe810935f
  410e58:	inc    ebp
  410e59:	dec    ebp
  410e5a:	add    BYTE PTR [ebx+ebp*2],bh
  410e5d:	xchg   ebp,eax
  410e5e:	jp     0x410e2c
  410e60:	add    BYTE PTR [eax],cl
  410e62:	mov    DWORD PTR [ebx+0x6401ff6a],ecx
  410e68:	bnd je 0x410e6c
  410e6b:	add    al,0x8b
  410e6d:	add    BYTE PTR [eax],al
  410e6f:	lods   al,BYTE PTR ds:[esi]
  410e70:	sub    edi,ebx
  410e72:	add    BYTE PTR [eax],0x0
  410e75:	add    ecx,DWORD PTR [ebx-0x7674ff75]
  410e7b:	and    cl,cl
  410e7d:	add    BYTE PTR [edi-0x723fff01],bl
  410e83:	dec    ecx
  410e84:	shl    DWORD PTR [edx+eiz*2+0x55],0x8b
  410e89:	add    BYTE PTR [eax],cl
  410e8b:	call   0xb341ec57
  410e90:	out    dx,al
  410e91:	pop    ss
  410e92:	hlt    
  410e93:	adc    eax,0x4a00045d
  410e98:	mov    ds:0x89000b60,al
  410e9d:	add    BYTE PTR [esi+0x74],dl
  410ea0:	je     0x410ea2
  410ea2:	int3   
  410ea3:	pop    ebp
  410ea4:	sub    eax,0x10004fa4
  410ea9:	add    DWORD PTR [ebp-0x570f1c45],eax
  410eaf:	mov    eax,DWORD PTR [ecx]
  410eb1:	inc    DWORD PTR [ebp-0x74fffff8]
  410eb7:	bound  esp,QWORD PTR [ecx]
  410eb9:	int3   
  410eba:	mov    cs,WORD PTR [ebx+0x2200006a]
  410ec0:	dec    eax
  410ec1:	sub    eax,0xcc5003eb
  410ec6:	inc    DWORD PTR [ebp+0x0]
  410ec9:	(bad)  
  410eca:	int3   
  410ecb:	scas   eax,DWORD PTR es:[edi]
  410ecc:	stos   DWORD PTR es:[edi],eax
  410ecd:	jbe    0x410f10
  410ecf:	add    DWORD PTR [ebp-0x7b],esi
  410ed2:	mov    eax,ebx
  410ed4:	push   ss
  410ed5:	cmc    
  410ed6:	adc    DWORD PTR [ecx],0x55088500
  410edc:	bound  edx,QWORD PTR [ebp-0x7a17d02d]
  410ee2:	add    DWORD PTR [eax],eax
  410ee4:	(bad)  
  410ee5:	call   0xeeacdb5e
  410eea:	enter  0x8bc0,0x0
  410eee:	adc    eax,0x7e431a01
  410ef3:	adc    eax,0x335546
  410ef8:	push   0xffffffff
  410efa:	add    DWORD PTR [ebx-0x748e503e],ecx
  410f00:	inc    DWORD PTR [eax]
  410f02:	add    eax,eax
  410f04:	jmp    0xcc:0x8bf3f306
  410f0b:	add    BYTE PTR [ebx+0x70004500],al
  410f11:	jae    0x410f68
  410f13:	adc    eax,0xffc70003
  410f18:	dec    ebp
  410f19:	push   ebx
  410f1a:	jg     0x410f30
  410f1c:	add    DWORD PTR [ebp+0x55],esi
  410f1f:	or     BYTE PTR [eax+eax*1+0x0],dh
  410f23:	loopne 0x410f8a
  410f25:	icebp  
  410f26:	js     0x410efd
  410f28:	add    BYTE PTR [eax],al
  410f2a:	rcr    ch,0xe6
  410f2d:	paddsw mm5,QWORD PTR [ecx+0x1]
  410f31:	add    al,al
  410f33:	jne    0x410f7b
  410f35:	dec    DWORD PTR [eax]
  410f37:	int3   
  410f38:	mov    eax,ds:0xcc414158
  410f3d:	mov    eax,DWORD PTR [ebp-0x75]
  410f40:	cmc    
  410f41:	std    
  410f42:	into   
  410f43:	sbb    dl,BYTE PTR ds:0xcc15c783
  410f49:	add    BYTE PTR [eax],al
  410f4b:	add    eax,esi
  410f4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f4e:	ins    BYTE PTR es:[edi],dx
  410f4f:	jl     0x410edc
  410f51:	jne    0x410edc
  410f53:	loopne 0x410fc3
  410f55:	(bad)  
  410f56:	sbb    eax,0xcc858bf4
  410f5b:	add    BYTE PTR [eax],al
  410f5d:	int3   
  410f5e:	or     bl,ch
  410f60:	int3   
  410f61:	nop
  410f62:	mov    al,0xcf
  410f64:	test   edi,edi
  410f66:	mov    DWORD PTR [ebx],esi
  410f68:	and    al,BYTE PTR [ebx]
  410f6a:	(bad)  
  410f6f:	loopne 0x410f70
  410f71:	inc    ebp
  410f72:	int3   
  410f73:	add    BYTE PTR [ebx-0x2f],ch
  410f76:	jo     0x410f07
  410f78:	add    BYTE PTR [eax],dl
  410f7a:	dec    esp
  410f7c:	push   esp
  410f7d:	mov    bl,0x17
  410f7f:	add    BYTE PTR [ebp-0x7c00ff75],0xcc
  410f86:	or     al,0xff
  410f88:	pop    edx
  410f89:	push   cs
  410f8a:	js     0x410fd8
  410f8c:	int3   
  410f8d:	mov    eax,eax
  410f8f:	add    BYTE PTR [ecx-0x4d],bl
  410f92:	sbb    BYTE PTR [ebx-0x75],ch
  410f95:	mov    ecx,esp
  410f97:	int3   
  410f98:	add    DWORD PTR ds:0x8be9758b,edx
  410f9e:	adc    cl,BYTE PTR [edx]
  410fa0:	push   eax
  410fa1:	add    DWORD PTR [eax],0xffffffcc
  410fa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fa5:	ret    0xffd5
  410fa8:	add    BYTE PTR [ecx],al
  410faa:	mov    eax,DWORD PTR [ebp+0x4501890f]
  410fb0:	shl    BYTE PTR [eax-0x17],cl
  410fb3:	jno    0x410f40
  410fb5:	add    BYTE PTR [eax],al
  410fb7:	add    ch,dl
  410fb9:	xchg   esi,eax
  410fba:	or     DWORD PTR [esi-0x1],edx
  410fbd:	dec    DWORD PTR [ebx+0x458bcc00]
  410fc3:	int3   
  410fc4:	jp     0x410fcd
  410fc6:	mov    dh,0x1d
  410fc8:	je     0x410f57
  410fca:	add    DWORD PTR [ebp-0x4d],esi
  410fcd:	cdq    
  410fce:	mov    WORD PTR [bp+di],?
  410fd1:	call   0x142104b
  410fd6:	add    al,al
  410fd8:	pop    es
  410fd9:	push   ds
  410fda:	into   
  410fdb:	jg     0x410fdc
  410fdd:	int3   
  410fde:	add    DWORD PTR [esi-0x32],edx
  410fe1:	cmc    
  410fe2:	mov    ebx,0x838b77
  410fe7:	add    BYTE PTR [esi-0x77],dl
  410fea:	call   DWORD PTR [eax-0x78]
  410fed:	mov    cl,BYTE PTR [esp+ebx*4-0x23]
  410ff1:	or     BYTE PTR [eax],al
  410ff3:	inc    ebp
  410ff4:	ror    DWORD PTR [ecx+0x50],0x71
  410ff8:	add    BYTE PTR [edi],cl
  410ffa:	int3   
  410ffb:	mov    edx,DWORD PTR [ebp-0x75]
  410ffe:	int3   
  410fff:	in     al,dx
  411000:	jbe    0x410fdd
  411002:	aad    0x76
  411004:	inc    edi
  411006:	mov    esp,ecx
  411008:	sub    al,0xd3
  41100a:	ret    0xff78
  41100d:	add    BYTE PTR [eax],al
  41100f:	mov    ecx,DWORD PTR [ebx+0x8d0075]
  411015:	rcl    DWORD PTR [eax-0x5f],1
  411018:	add    BYTE PTR [esi-0x77],dl
  41101b:	mov    esp,DWORD PTR [ecx]
  41101d:	aad    0x0
  41101f:	inc    ecx
  411020:	call   0xff4110f1
  411025:	inc    DWORD PTR [eax]
  411027:	add    al,0x7c
  411029:	mov    bl,0xdf
  41102b:	xor    al,0xcc
  41102d:	int3   
  41102e:	add    al,ch
  411030:	cs jl  0x410fd3
  411033:	rol    DWORD PTR [eax],cl
  411035:	add    ah,cl
  411037:	add    BYTE PTR [eax],al
  411039:	call   0x1ab8104e
  41103e:	push   edi
  41103f:	jmp    0x411040
  411041:	add    DWORD PTR [ebp+0x7fc785ff],ecx
  411047:	or     al,0x33
  411049:	in     al,dx
  41104a:	add    edi,edi
  41104c:	je     0x41104d
  41104e:	add    ah,cl
  411050:	out    0xa8,eax
  411052:	lock pushf 
  411054:	call   0xee40dd25
  411059:	mov    ah,0xe0
  41105b:	iret   
  41105c:	add    BYTE PTR [eax],al
  41105e:	dec    DWORD PTR [ecx+0xc00ffcc]
  411064:	inc    esp
  411065:	out    dx,al
  411066:	mov    WORD PTR [edx],ss
  411068:	add    BYTE PTR [eax],al
  41106a:	jnp    0xb88eea63
  411070:	jne    0x411073
  411072:	int3   
  411073:	jne    0x411076
  411075:	int3   
  411076:	mov    esp,ecx
  411078:	es pop esp
  41107a:	leave  
  41107b:	mov    ch,0x0
  41107d:	mov    eax,DWORD PTR [esi-0x1]
  411080:	xchg   ecx,eax
  411081:	mov    ch,0x41
  411083:	inc    esi
  411084:	int3   
  411085:	mov    eax,DWORD PTR [ecx+eax*1]
  411088:	jmp    0x411015
  41108a:	add    bh,bh
  41108c:	dec    ebp
  41108d:	repnz cmp BYTE PTR [ecx],0xcc
  411091:	inc    DWORD PTR [ebx]
  411093:	or     BYTE PTR [ebx+edi*4+0x330fb880],bl
  41109a:	test   DWORD PTR [ebx-0x7674f100],ecx
  4110a0:	ins    DWORD PTR es:[edi],dx
  4110a1:	jo     0x411120
  4110a3:	push   ss
  4110a4:	dec    esp
  4110a6:	push   ebp
  4110a7:	add    DWORD PTR [edx+0x3b],ebp
  4110aa:	loope  0x4110f6
  4110ac:	or     esp,0x0
  4110af:	add    DWORD PTR [ebx+0x10089dd],ecx
  4110b5:	cs mov ebx,0x8b0015aa
  4110bb:	call   0x8debd517
  4110c0:	push   0xffffff8d
  4110c2:	add    BYTE PTR [ebp+0x46],dl
  4110c5:	or     al,0xff
  4110c7:	int3   
  4110c8:	scas   al,BYTE PTR es:[edi]
  4110c9:	push   ds
  4110ca:	std    
  4110cb:	jecxz  0x411099
  4110cd:	mov    ecx,DWORD PTR [ebp+0x44d3498b]
  4110d3:	mov    bh,0xff
  4110d5:	mov    eax,DWORD PTR [eax]
  4110d7:	mov    eax,DWORD PTR [eax]
  4110d9:	adc    eax,0xa384dd33
  4110de:	retf   0x37
  4110e1:	mov    ecx,DWORD PTR [ebx-0x643a2cb3]
  4110e7:	pop    ebp
  4110e8:	jmp    0x4110b6
  4110ea:	mov    edi,edi
  4110ec:	mov    eax,DWORD PTR [eax]
  4110ee:	add    BYTE PTR [edx+esi*8+0x54],dh
  4110f2:	cmp    ebp,DWORD PTR [eax-0x1]
  4110f5:	add    bh,bh
  4110f7:	add    al,0xf7
  4110f9:	outs   dx,DWORD PTR ds:[esi]
  4110fa:	or     ebx,DWORD PTR [esi+0xc]
  4110fd:	loopne 0x411173
  4110ff:	add    DWORD PTR [edx+0x1],ebp
  411102:	dec    esp
  411104:	aad    0xa
  411106:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411107:	adc    ecx,DWORD PTR [ebx+0x31000000]
  41110d:	scas   al,BYTE PTR es:[edi]
  41110e:	pop    ebp
  41110f:	cs int3 
  411111:	or     DWORD PTR [eax],0xffffff8b
  411114:	int3   
  411115:	push   ebp
  411116:	add    BYTE PTR [ebp+0x73],al
  411119:	inc    eax
  41111a:	std    
  41111b:	sub    ah,cl
  41111d:	test   DWORD PTR [ebp-0x75],eax
  411120:	push   edi
  411121:	out    dx,al
  411122:	dec    ecx
  411123:	es push ebp
  411125:	add    BYTE PTR [ebp-0x75],dh
  411128:	in     al,dx
  411129:	add    DWORD PTR [ebp-0x4aee8875],0xffffffe7
  411130:	dec    esp
  411132:	(bad)  
  411133:	in     al,dx
  411134:	ud0    edi,DWORD PTR [ebx+0x300dd2a]
  41113b:	add    BYTE PTR [ebx-0x6776aff0],cl
  411141:	jae    0x4110d7
  411143:	or     ebp,DWORD PTR [edx+0x0]
  411146:	mov    DWORD PTR [esi-0x62],eax
  411149:	(bad)  
  41114a:	pop    edx
  41114b:	bnd call 0x840d115d
  411151:	mov    ecx,DWORD PTR [ebx-0x62af7601]
  411157:	cli    
  411158:	add    BYTE PTR [ecx-0x4bf1fe77],cl
  41115e:	xor    BYTE PTR [ebp+eax*2-0x76fc2223],ah
  411165:	in     al,dx
  411166:	push   ebp
  411167:	inc    ebp
  411168:	mov    esp,0x8ba37c48
  41116d:	or     ah,cl
  41116f:	add    al,ch
  411171:	mov    eax,0x8b0aa6
  411176:	int3   
  411177:	adc    DWORD PTR [eax-0x77],0x1
  41117b:	int3   
  41117c:	mov    ch,0x80
  41117e:	loop   0x411154
  411180:	pop    ebp
  411181:	mov    DWORD PTR [eax],eax
  411183:	or     al,0x44
  411185:	aas    
  411186:	fmul   DWORD PTR [ebp+0x0]
  411189:	adc    eax,0xcc031000
  41118e:	add    bh,bh
  411190:	(bad)  
  411191:	cli    
  411192:	dec    ecx
  411193:	leave  
  411194:	add    BYTE PTR [eax],al
  411196:	add    DWORD PTR [ecx],eax
  411198:	pop    edx
  411199:	test   DWORD PTR [ebp+edi*4+0x75],eax
  41119d:	inc    DWORD PTR [eax]
  41119f:	fld    QWORD PTR [eax]
  4111a1:	add    BYTE PTR [eax],al
  4111a3:	or     al,0x35
  4111a5:	rcl    dl,cl
  4111a7:	repz lea eax,[eax]
  4111aa:	add    BYTE PTR [eax],al
  4111ac:	sbb    ebp,edx
  4111ae:	stc    
  4111af:	inc    BYTE PTR [esi-0x75]
  4111b2:	rol    BYTE PTR [eax],0xc
  4111b5:	add    BYTE PTR [ecx],al
  4111b7:	add    BYTE PTR [edi-0x1c9f50],ah
  4111bd:	or     al,0xcc
  4111bf:	or     bh,cl
  4111c1:	loope  0x41117f
  4111c3:	cmp    al,BYTE PTR [eax]
  4111c5:	jne    0x411152
  4111c7:	add    DWORD PTR [ebx+0x1cc0ccff],ecx
  4111cd:	xlat   BYTE PTR ds:[ebx]
  4111ce:	outs   dx,BYTE PTR ds:[esi]
  4111cf:	fcmovne st,st(4)
  4111d1:	inc    ebp
  4111d2:	push   esi
  4111d3:	jmp    FWORD PTR [eax+0x10c30aa]
  4111d9:	mov    ecx,esp
  4111db:	add    BYTE PTR [eax],al
  4111dd:	dec    ebp
  4111de:	push   eax
  4111df:	inc    esi
  4111e0:	dec    eax
  4111e1:	and    dl,BYTE PTR [edx+eax*8-0x23]
  4111e5:	int3   
  4111e6:	adc    eax,0x1a12c483
  4111eb:	or     eax,0xc08d018b
  4111f0:	add    BYTE PTR [ebp+0x10],bl
  4111f3:	int3   
  4111f4:	lahf   
  4111f5:	out    dx,eax
  4111f6:	sar    DWORD PTR [eax+eax*1-0x24f774bb],1
  4111fd:	or     BYTE PTR [esi+0xa],dh
  411200:	dec    ebp
  411201:	inc    DWORD PTR [eax]
  411203:	jne    0x411190
  411205:	add    BYTE PTR [ebx-0x2cce3cb3],al
  41120b:	adc    dh,0xff
  41120e:	int3   
  41120f:	fisttp QWORD PTR [ebx+0x2630895a]
  411215:	add    BYTE PTR [ecx],al
  411217:	add    BYTE PTR [ebx],al
  411219:	add    ah,cl
  41121b:	mov    ecx,esp
  41121d:	pop    esi
  41121e:	out    0xeb,al
  411220:	fwait
  411221:	test   DWORD PTR [ebp-0x675f7439],eax
  411227:	ins    DWORD PTR es:[edi],dx
  411228:	fcmove st,st(4)
  41122a:	add    BYTE PTR [ecx],al
  41122c:	rol    BYTE PTR [esp+ecx*1],0x8b
  411230:	or     BYTE PTR [esi+0x5],cl
  411233:	(bad)  
  411234:	data16 (bad) 
  411236:	inc    DWORD PTR [eax]
  411238:	int3   
  411239:	gs daa 
  41123b:	mov    ah,0xa6
  41123d:	xor    ebp,DWORD PTR [edx+0x0]
  411240:	call   DWORD PTR [eax]
  411242:	add    BYTE PTR [ebp-0x34],bl
  411245:	push   0xcc60b7eb
  41124a:	add    BYTE PTR [ebx+0x3beeb58b],cl
  411250:	pop    edx
  411251:	add    BYTE PTR [eax],al
  411253:	inc    esi
  411254:	add    BYTE PTR [eax],cl
  411256:	(bad)  
  411257:	call   0x4935345c
  41125c:	xchg   edx,eax
  41125d:	push   ebp
  41125e:	add    bh,bh
  411260:	int3   
  411261:	bound  ebx,QWORD PTR [edx]
  411263:	and    al,0xb
  411265:	or     BYTE PTR [esp+ecx*8],cl
  411268:	add    BYTE PTR [eax],al
  41126a:	add    ah,cl
  41126c:	add    BYTE PTR [edx+0x39],cl
  41126f:	arpl   WORD PTR [eax],bp
  411271:	loopne 0x411273
  411273:	push   esi
  411274:	int3   
  411275:	pusha  
  411276:	retf   
  411277:	cmp    eax,0xff080021
  41127c:	dec    ebp
  41127d:	add    BYTE PTR [eax],al
  41127f:	int3   
  411280:	psadbw mm5,QWORD PTR [eax-0x35]
  411284:	jne    0x411286
  411286:	add    ecx,DWORD PTR [eax]
  411288:	add    DWORD PTR [ebx],eax
  41128a:	into   
  41128b:	iret   
  41128c:	sub    al,0x8b
  41128e:	add    DWORD PTR [ebx+0xf468b],eax
  411294:	add    DWORD PTR [edx],eax
  411296:	ins    BYTE PTR es:[edi],dx
  411297:	sub    ah,BYTE PTR [edi+0x0]
  41129d:	(bad)  
  41129e:	call   0x8b414189
  4112a3:	mov    DWORD PTR [eax],eax
  4112a5:	inc    DWORD PTR [eax]
  4112a7:	ror    ah,0x3a
  4112aa:	in     eax,dx
  4112ab:	std    
  4112ac:	or     bl,ch
  4112ae:	or     al,0xff
  4112b0:	int3   
  4112b1:	imul   ebp,esp,0x2f
  4112b4:	push   edi
  4112b5:	mov    eax,DWORD PTR [eax]
  4112b7:	inc    ebp
  4112b8:	add    DWORD PTR [esi+0x0],eax
  4112bb:	or     al,0x8b
  4112bd:	jb     0x4112d9
  4112bf:	out    0x4d,eax
  4112c1:	dec    DWORD PTR [ebx+0x7336758b]
  4112c7:	mov    esi,0xc00889a9
  4112cc:	mov    eax,DWORD PTR [eax]
  4112ce:	mov    ebp,esp
  4112d0:	mov    ecx,DWORD PTR [esi+0xf30e70]
  4112d6:	call   FWORD PTR [ebp+0x4d]
  4112d9:	ds cld 
  4112db:	jbe    0x4112c2
  4112dd:	inc    DWORD PTR [ebx]
  4112df:	add    BYTE PTR [ebx-0x7422cc34],cl
  4112e5:	adc    BYTE PTR [edx],al
  4112e7:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112e9:	jmp    0x4112eb
  4112eb:	mov    DWORD PTR [eax+edi*1-0x50],esi
  4112ef:	stos   DWORD PTR es:[edi],eax
  4112f0:	push   cs
  4112f1:	add    BYTE PTR [edx-0x18],ch
  4112f4:	add    BYTE PTR [eax+eax*1-0x15],dh
  4112f8:	add    al,0x7a
  4112fa:	push   eax
  4112fb:	jb     0x411317
  4112fd:	add    BYTE PTR [eax],al
  4112ff:	int3   
  411300:	xor    edi,DWORD PTR [esi+ebp*2]
  411303:	add    al,0x63
  411305:	add    BYTE PTR [eax],al
  411307:	mov    esi,DWORD PTR [ebp-0x14]
  41130a:	add    BYTE PTR [eax],al
  41130c:	int3   
  41130d:	sbb    DWORD PTR es:[esi],0xffcc08d3
  411314:	int3   
  411315:	xor    al,0xcd
  411317:	or     BYTE PTR [edx],dh
  411319:	mov    eax,DWORD PTR [eax]
  41131b:	adc    eax,0x83ff04
  411320:	add    DWORD PTR [edx-0x66],ebx
  411323:	cmp    BYTE PTR [esi],al
  411325:	push   esi
  411326:	je     0x4112ab
  411328:	adc    DWORD PTR [edi+0x336fcf92],0x8
  41132f:	inc    esi
  411330:	add    BYTE PTR [ecx],al
  411332:	int3   
  411333:	add    DWORD PTR [eax+eax*4],0x4e
  411337:	sbb    DWORD PTR [edi],0x0
  41133a:	inc    DWORD PTR [eax]
  41133c:	add    al,0x42
  41133e:	aas    
  41133f:	(bad)  
  411340:	fisttp WORD PTR [ecx-0x7cffffff]
  411346:	push   ebp
  411347:	push   esi
  411348:	fisttp QWORD PTR [edx]
  41134a:	pop    ss
  41134b:	adc    BYTE PTR [eax],ch
  41134d:	(bad)  
  41134e:	call   0x5abe1353
  411353:	jnp    0x4112e6
  411355:	add    BYTE PTR [eax],al
  411357:	adc    eax,0x89cc0003
  41135c:	add    ecx,DWORD PTR [ecx-0x7412379c]
  411362:	add    DWORD PTR [ecx],eax
  411364:	add    al,0x21
  411366:	jb     0x411367
  411368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411369:	add    al,0x0
  41136b:	int3   
  41136c:	inc    DWORD PTR [eax]
  41136e:	int3   
  41136f:	mov    eax,DWORD PTR [eax]
  411371:	cmp    eax,DWORD PTR [esp+edx*4-0x338bd4]
  411378:	int3   
  411379:	mov    ebx,0x75a3dfbd
  41137e:	dec    esp
  411380:	lea    eax,[ecx]
  411382:	dec    esp
  411384:	je     0x4113ee
  411386:	jmp    0x4113bf
  411388:	xchg   edi,eax
  411389:	add    DWORD PTR ds:0x3dc88b33,edx
  41138f:	and    bh,BYTE PTR ds:0x74018b
  411395:	mov    edi,edi
  411397:	add    esp,ecx
  411399:	aas    
  41139a:	arpl   WORD PTR [eax-0x74ffb3],di
  4113a0:	int3   
  4113a1:	stos   DWORD PTR es:[edi],eax
  4113a2:	inc    esp
  4113a3:	(bad)  
  4113a4:	es int3 
  4113a6:	mov    DWORD PTR [ecx+eax*1],ecx
  4113a9:	mov    esi,DWORD PTR [ebx]
  4113ab:	inc    esi
  4113ac:	int3   
  4113ad:	jb     0x411409
  4113af:	rol    DWORD PTR ds:0x89080000,0x25
  4113b6:	int3   
  4113b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113b8:	cmp    BYTE PTR [eax],al
  4113ba:	jmp    eax
  4113bc:	or     BYTE PTR [eax],dl
  4113be:	mov    ecx,esp
  4113c0:	or     BYTE PTR [eax],cl
  4113c2:	clc    
  4113c3:	cld    
  4113c4:	or     BYTE PTR [ebx+0x4674005d],cl
  4113ca:	in     eax,dx
  4113cb:	add    DWORD PTR [ebx],ebx
  4113cd:	je     0x4113cf
  4113cf:	inc    ebp
  4113d0:	test   DWORD PTR [ebx+0x417500c0],ecx
  4113d6:	rcr    edx,0xda
  4113d9:	add    BYTE PTR [eax],al
  4113db:	add    bh,bh
  4113dd:	ret    
  4113de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113df:	mov    BYTE PTR [edi],0x75
  4113e2:	add    BYTE PTR [ebp+0xc],bl
  4113e5:	add    BYTE PTR [ebp+0x0],bl
  4113e8:	push   eax
  4113e9:	jge    0x41141f
  4113eb:	clc    
  4113ec:	(bad)  
  4113ed:	add    BYTE PTR [ebx-0x2874ff01],cl
  4113f3:	sub    BYTE PTR [ebp-0x75],0x8b
  4113f7:	push   esi
  4113f8:	loopne 0x41146e
  4113fa:	int3   
  4113fb:	push   DWORD PTR [ebp+0x3d]
  4113fe:	(bad)  
  411400:	cdq    
  411401:	mov    eax,eax
  411403:	add    BYTE PTR [ecx+0x2708b250],cl
  411409:	add    BYTE PTR [ebp+ecx*2-0x34],dh
  41140d:	add    DWORD PTR [ebp+0x1],esi
  411410:	add    dl,dl
  411412:	sub    eax,0x74080fc2
  411417:	or     ah,cl
  411419:	add    dh,bl
  41141b:	fisttp WORD PTR [edi+0x8b8bff]
  411421:	add    BYTE PTR [ebx-0x3c037401],cl
  411427:	lds    edi,FWORD PTR [edx]
  411429:	add    ch,bl
  41142b:	int3   
  41142c:	paddw  mm1,QWORD PTR [ebp-0x227439f9]
  411433:	add    BYTE PTR [ebp+0x0],dl
  411436:	rcl    BYTE PTR [eax],0x83
  411439:	mov    fs,edx
  41143b:	ror    ebx,0x89
  41143e:	add    BYTE PTR [ebx-0x787124f8],cl
  411444:	mov    esi,0x8be08375
  411449:	inc    ebp
  41144a:	je     0x41145c
  41144c:	mov    ebp,DWORD PTR [esi]
  41144e:	pop    DWORD PTR [esi-0x4d]
  411451:	mov    ebp,eax
  411453:	mov    eax,DWORD PTR [ebp+0x51201dc1]
  411459:	inc    esi
  41145a:	jne    0x41145c
  41145c:	or     DWORD PTR [eax+edx*1],0x0
  411460:	int3   
  411461:	gs or  eax,0x3009871
  411467:	int3   
  411468:	int3   
  411469:	into   
  41146a:	cmp    esi,DWORD PTR [edi+ecx*2-0x227aa9ff]
  411471:	mov    ecx,DWORD PTR [eax]
  411473:	mov    DWORD PTR [ebp-0x32],eax
  411476:	aaa    
  411477:	cmp    ebp,esp
  411479:	(bad)  
  41147a:	int3   
  41147b:	add    esp,ecx
  41147d:	mov    ebx,0x507747ab
  411482:	add    DWORD PTR [eax+ebp*8],eax
  411485:	fisttp QWORD PTR [ebx+0x7d98c00c]
  41148b:	pop    edx
  41148c:	cli    
  41148d:	test   DWORD PTR [esi-0x75],eax
  411490:	(bad)  
  411491:	(bad)  
  411492:	mov    esi,0xff0091d2
  411497:	adc    eax,0xff89c0
  41149c:	push   DWORD PTR [esi-0x76b5541e]
  4114a2:	add    BYTE PTR [ebx+0x60be2e00],cl
  4114a8:	sub    dl,BYTE PTR [eax]
  4114aa:	mov    eax,DWORD PTR [eax]
  4114ac:	or     BYTE PTR [eax],al
  4114ae:	loopne 0x411525
  4114b0:	add    BYTE PTR [ecx],dh
  4114b2:	inc    esi
  4114b3:	pop    ss
  4114b4:	add    BYTE PTR ss:[ecx-0x3d30000],cl
  4114bb:	or     DWORD PTR [ebx+0x8bcc],esp
  4114c1:	mov    esi,DWORD PTR [ecx+eax*1+0x0]
  4114c5:	jg     0x41149a
  4114c7:	fstp   QWORD PTR [ebp+0x55]
  4114ca:	int3   
  4114cb:	add    BYTE PTR [ebx+0x5144cfca],cl
  4114d1:	add    BYTE PTR [ecx+0xcc748b],cl
  4114d7:	add    BYTE PTR [ebx],al
  4114d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114da:	aam    0x44
  4114dc:	inc    esp
  4114dd:	add    BYTE PTR [eax],al
  4114df:	add    BYTE PTR [eax],al
  4114e1:	sahf   
  4114e2:	(bad)  
  4114e3:	mov    WORD PTR [esi],?
  4114e5:	int3   
  4114e6:	je     0x4114e8
  4114e8:	xor    edi,edi
  4114ea:	bswap  esp
  4114ec:	mov    esp,DWORD PTR [ecx-0x332e1a2c]
  4114f2:	add    DWORD PTR [ebx+0x44f1f85],ecx
  4114f8:	xchg   ecx,eax
  4114f9:	or     DWORD PTR [eax],0xffffffff
  4114fc:	add    ah,cl
  4114fe:	inc    ebp
  4114ff:	add    al,al
  411501:	stos   BYTE PTR es:[edi],al
  411502:	push   0x74ff2980
  411507:	jne    0x411509
  411509:	cmp    eax,0x46bff6
  41150e:	add    DWORD PTR [ecx+ecx*4+0x55],esi
  411512:	int3   
  411513:	in     al,dx
  411514:	xor    ebx,DWORD PTR [ecx-0x25]
  411517:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411518:	jle    0x4114a7
  41151a:	int3   
  41151b:	add    BYTE PTR [eax],al
  41151d:	shl    bl,0xd4
  411520:	in     al,dx
  411521:	mov    eax,edi
  411523:	add    BYTE PTR [eax+eax*1],al
  411526:	mov    ecx,DWORD PTR [eax]
  411528:	int3   
  411529:	in     eax,0xc
  41152b:	or     dh,BYTE PTR [eax]
  41152d:	mov    eax,DWORD PTR [ecx]
  41152f:	mov    DWORD PTR [eax],eax
  411531:	jge    0x41154e
  411533:	in     al,dx
  411534:	or     al,0x8b
  411536:	str    esp
  411539:	int3   
  41153a:	or     BYTE PTR [ebx+0x431f2101],cl
  411540:	sub    eax,0x44600
  411545:	test   BYTE PTR [ebp-0x3374473a],dh
  41154b:	add    esp,ecx
  41154d:	mov    eax,DWORD PTR [eax]
  41154f:	adc    BYTE PTR [ebx-0x7e76099f],cl
  411555:	rol    BYTE PTR [eax],0x5d
  411558:	mov    esp,DWORD PTR [ecx+0x4ef44]
  41155e:	add    BYTE PTR [ebx-0xff72f8],cl
  411564:	inc    esi
  411565:	ret    
  411566:	clc    
  411567:	dec    edi
  411568:	inc    ebx
  411569:	add    DWORD PTR [eax],eax
  41156b:	je     0x4115e1
  41156d:	jl     0x4115bf
  41156f:	les    eax,FWORD PTR [eax]
  411571:	test   DWORD PTR ds:0x45838b89,edx
  411577:	push   0x0
  411579:	and    esi,esp
  41157b:	test   BYTE PTR [edx-0x75],bh
  41157e:	int3   
  41157f:	add    al,0x1
  411581:	jg     0x411504
  411583:	jnp    0x41150e
  411585:	int3   
  411586:	int3   
  411587:	je     0x411589
  411589:	push   0xf
  41158b:	or     ah,cl
  41158d:	(bad)  
  41158e:	or     al,0x4a
  411590:	pushf  
  411591:	mov    eax,DWORD PTR [ecx]
  411593:	je     0x411609
  411595:	ret    
  411596:	daa    
  411597:	retf   
  411598:	cld    
  411599:	push   ds
  41159a:	add    DWORD PTR [ecx],eax
  41159c:	adc    eax,0x4fd2a333
  4115a1:	test   DWORD PTR [eax],eax
  4115a3:	int3   
  4115a4:	add    ah,cl
  4115a6:	or     BYTE PTR [ebx-0x4e103400],cl
  4115ac:	in     eax,dx
  4115ad:	rol    BYTE PTR [eax],1
  4115af:	int3   
  4115b0:	mov    eax,DWORD PTR [esi+0x1c]
  4115b3:	mov    edi,0xffc70b38
  4115b8:	bswap  esp
  4115ba:	or     BYTE PTR [ebp+0x4443755d],al
  4115c0:	push   esp
  4115c1:	jbe    0x4115c3
  4115c3:	inc    esi
  4115c4:	add    BYTE PTR [eax],al
  4115c6:	mov    ch,0xc
  4115c8:	outs   dx,BYTE PTR ds:[esi]
  4115c9:	arpl   WORD PTR [esi+0x1],ax
  4115cc:	mov    ecx,esp
  4115ce:	(bad)  
  4115cf:	mov    eax,0xf0c6608b
  4115d5:	ret    0xcc
  4115d8:	mov    eax,DWORD PTR [eax]
  4115da:	mov    cl,0x33
  4115dc:	jecxz  0x411589
  4115de:	add    BYTE PTR [eax],al
  4115e0:	add    BYTE PTR [eax],al
  4115e2:	mov    eax,DWORD PTR [eax]
  4115e4:	mov    esi,DWORD PTR [ebp-0x78]
  4115e7:	arpl   WORD PTR [ebx-0x5b],sp
  4115ea:	inc    edi
  4115ec:	push   esi
  4115ed:	push   0x44
  4115ef:	test   eax,0x33832bb1
  4115f4:	add    BYTE PTR [eax],cl
  4115f6:	add    DWORD PTR [ebx-0x7ea8ff34],0x6d
  4115fd:	jp     0x4115ff
  4115ff:	add    bh,al
  411601:	lea    edx,[eax+ecx*2]
  411604:	add    bl,ch
  411606:	add    BYTE PTR [eax],al
  411608:	punpckhdq mm1,QWORD PTR [eax]
  41160b:	sar    bh,0x8b
  41160e:	mov    edi,0xcb6eac
  411613:	push   eax
  411614:	add    al,0x8b
  411616:	adc    edi,ecx
  411618:	repnz add BYTE PTR ss:[ebp-0x75],al
  41161d:	test   esp,ecx
  41161f:	call   0x5c6aa1f0
  411624:	sar    DWORD PTR [eax+0x0],cl
  411627:	adc    eax,0x204f0001
  41162c:	mov    ah,0x71
  41162e:	cmovne ecx,DWORD PTR [ebp+0x45]
  411632:	jne    0x411635
  411634:	add    al,ch
  411636:	xchg   DWORD PTR [esi-0x338b1d5c],esi
  41163c:	fld    QWORD PTR [eax]
  41163e:	inc    edi
  41163f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411640:	fidivr DWORD PTR [eax+0x0]
  411643:	mov    eax,DWORD PTR [eax]
  411645:	test   DWORD PTR [eax],eax
  411647:	add    DWORD PTR [ebx-0x430d3014],ecx
  41164d:	mov    ebp,0xff0ceb01
  411652:	bound  ebp,QWORD PTR [ebp+0x70]
  411655:	mov    ah,0x8d
  411657:	mov    eax,eax
  411659:	jne    0x411643
  41165b:	rcl    BYTE PTR [esi+0x0],0x6c
  41165f:	xchg   edi,eax
  411660:	inc    edx
  411661:	mov    WORD PTR [ebx+0x7bcc8b00],es
  411667:	in     al,0xcc
  411669:	js     0x4116c1
  41166b:	int3   
  41166c:	add    esp,ecx
  41166e:	mov    esi,DWORD PTR [ebp-0x15]
  411671:	and    DWORD PTR [esi+ebp*4],0xffffff9f
  411675:	mov    ebp,0x338b8d03
  41167a:	jnp    0x41161b
  41167c:	cmp    ebx,ebp
  41167e:	int3   
  41167f:	add    ah,ch
  411681:	adc    eax,0x8b8b15
  411686:	pop    ebp
  411687:	inc    eax
  411688:	jae    0x4116ed
  41168a:	adc    BYTE PTR [ecx+0x7f50cc00],cl
  411690:	sub    DWORD PTR [esi],edx
  411692:	add    BYTE PTR [ebx-0x1f140000],cl
  411698:	mov    eax,DWORD PTR [eax]
  41169a:	mov    eax,ds:0x3750b9f
  41169f:	add    BYTE PTR [ebx+0x5a408608],al
  4116a5:	jmp    0x40dd7a9
  4116aa:	add    edi,edi
  4116ac:	add    BYTE PTR [ebp+0x8],dl
  4116af:	into   
  4116b0:	dec    eax
  4116b1:	(bad)  
  4116b3:	lea    eax,[eax]
  4116b5:	je     0x41170d
  4116b7:	cmp    dh,BYTE PTR [eax+0x4c000e8]
  4116bd:	add    BYTE PTR [ebx-0x8fe9514],cl
  4116c3:	stos   DWORD PTR es:[edi],eax
  4116c4:	inc    edx
  4116c5:	imul   eax,DWORD PTR [eax],0x0
  4116c8:	add    bh,bh
  4116ca:	fiadd  DWORD PTR [ebp+0x45ff3be4]
  4116d0:	add    bh,al
  4116d2:	int3   
  4116d3:	rol    BYTE PTR [esi-0x77],0x6f
  4116d7:	lahf   
  4116d8:	scas   eax,DWORD PTR es:[edi]
  4116d9:	pop    esi
  4116da:	pop    ebp
  4116db:	xor    eax,DWORD PTR [eax]
  4116dd:	mov    ebp,esp
  4116df:	inc    eax
  4116e0:	iret   
  4116e1:	js     0x4116ce
  4116e3:	mov    edx,DWORD PTR ds:0x8bccc089
  4116e9:	add    BYTE PTR [ecx-0xb],cl
  4116ec:	sub    BYTE PTR [edx],bl
  4116ee:	push   ebp
  4116ef:	add    bl,ch
  4116f1:	call   FWORD PTR [ecx]
  4116f3:	mov    edx,0x845b742
  4116f8:	mov    eax,DWORD PTR [eax]
  4116fa:	fld    QWORD PTR [eax]
  4116fc:	add    al,0x0
  4116fe:	push   ebx
  4116ff:	pusha  
  411700:	jg     0x411774
  411702:	shl    BYTE PTR [ebx],0x0
  411705:	add    ah,al
  411707:	sbb    BYTE PTR [ebx],dh
  411709:	adc    eax,DWORD PTR [ecx]
  41170b:	add    DWORD PTR [eax],eax
  41170d:	je     0x411754
  41170f:	add    bh,bh
  411711:	int3   
  411712:	cmp    al,0xf0
  411714:	outs   dx,DWORD PTR es:[esi]
  411716:	add    DWORD PTR [eax],ecx
  411718:	fisttp QWORD PTR [edi]
  41171a:	outs   dx,DWORD PTR ds:[esi]
  41171b:	push   ecx
  41171c:	inc    eax
  41171d:	xchg   DWORD PTR [eax],ecx
  41171f:	pop    ebp
  411720:	add    ecx,DWORD PTR [ebp-0x18]
  411723:	test   DWORD PTR [ebx-0x70f4c6f8],eax
  411729:	leave  
  41172a:	int3   
  41172b:	add    al,ch
  41172d:	jmp    FWORD PTR [ebp-0x7645930a]
  411733:	call   DWORD PTR [eax]
  411735:	int3   
  411736:	mov    eax,eax
  411738:	add    ah,cl
  41173a:	mov    bh,0x2c
  41173c:	push   edx
  41173d:	mov    cl,0x1
  41173f:	add    ah,cl
  411741:	fld    QWORD PTR [ebx]
  411743:	cli    
  411744:	add    BYTE PTR [eax+ecx*1],ch
  411747:	mov    DWORD PTR [eax],eax
  411749:	loopne 0x411717
  41174b:	push   0x45
  41174d:	add    BYTE PTR [eax+0xe],cl
  411750:	jmp    0x8c0da080
  411755:	call   FWORD PTR [esp+ebx*8]
  411758:	stos   BYTE PTR es:[edi],al
  411759:	add    BYTE PTR [eax+edx*2],0x83
  41175d:	je     0x41175e
  41175f:	add    ch,bl
  411761:	add    DWORD PTR [eax-0x21],esp
  411764:	mov    ebx,0xc0080062
  411769:	mov    esp,ecx
  41176b:	cmp    al,0x3d
  41176d:	pop    ss
  41176e:	inc    DWORD PTR [ebp+0x748b50]
  411774:	add    BYTE PTR [ebp-0x5b45e5b9],cl
  41177a:	or     DWORD PTR [ebp-0x20],0xffffff83
  41177e:	jne    0x411729
  411780:	sub    eax,0x8ffa5
  411785:	add    BYTE PTR [eax],al
  411787:	add    DWORD PTR [esi-0x75],eax
  41178a:	shr    BYTE PTR [edx+0x3008ac0],cl
  411790:	add    DWORD PTR [ebp-0x7bd05587],ecx
  411796:	inc    ebp
  411797:	add    eax,DWORD PTR [ebx]
  411799:	je     0x411810
  41179b:	add    BYTE PTR [ebx-0x4323fe00],cl
  4117a1:	data16 add BYTE PTR [ebx],dh
  4117a4:	add    DWORD PTR [ebx-0x35301459],ecx
  4117aa:	add    BYTE PTR [eax],al
  4117ac:	jne    0x4117af
  4117ae:	je     0x4117fd
  4117b0:	add    BYTE PTR [ebx+ebp*8-0x59],dh
  4117b4:	add    DWORD PTR [esi-0x75],0xffffff8b
  4117b8:	mov    esi,DWORD PTR [eax+edi*2-0x26]
  4117bc:	xchg   edi,eax
  4117bd:	inc    edi
  4117be:	add    BYTE PTR [ebx+0x558b01],cl
  4117c4:	int3   
  4117c5:	jmp    DWORD PTR [ecx-0x10]
  4117c8:	cmc    
  4117c9:	enter  0x1,0x10
  4117cd:	push   ebp
  4117ce:	mov    ss,WORD PTR [ecx]
  4117d0:	or     al,0xcc
  4117d2:	inc    ebp
  4117d3:	add    BYTE PTR [ecx],al
  4117d5:	je     0x4117d6
  4117d7:	mov    esi,DWORD PTR [esp+esi*2-0x55]
  4117db:	lds    edi,FWORD PTR [edi+0x4d018bf8]
  4117e1:	or     BYTE PTR [ecx+0x40f8ec],ah
  4117e7:	or     bh,bh
  4117e9:	add    ah,cl
  4117eb:	add    BYTE PTR ds:0x99a5d185,dl
  4117f1:	jmp    0x9dc5:0x8983030c
  4117f8:	outs   dx,BYTE PTR ds:[esi]
  4117f9:	mov    al,0x45
  4117fb:	push   ebp
  4117fc:	(bad)  
  4117fe:	or     BYTE PTR [ebx-0x7b9f7c34],cl
  411804:	cmp    al,0x79
  411806:	mov    eax,DWORD PTR [ebx-0x3d0e33aa]
  41180c:	inc    ebp
  41180d:	xlat   BYTE PTR ds:[ebx]
  41180e:	dec    esp
  411810:	add    BYTE PTR [eax],al
  411812:	or     al,0x3
  411814:	add    al,0xcc
  411816:	in     eax,dx
  411817:	lds    edx,FWORD PTR [eax+0x4574cc16]
  41181d:	add    al,0x5b
  41181f:	cli    
  411820:	inc    edx
  411821:	test   BYTE PTR [ebp+0xff00],al
  411827:	int3   
  411828:	add    BYTE PTR [ebx-0x729187a8],cl
  41182e:	int3   
  41182f:	call   0x9ea07600
  411834:	outs   dx,BYTE PTR ds:[esi]
  411835:	outs   dx,DWORD PTR ds:[esi]
  411836:	je     0x41187d
  411838:	push   esi
  411839:	rol    BYTE PTR [eax],0x0
  41183c:	add    BYTE PTR [ebx],dh
  41183e:	pop    edi
  41183f:	je     0x4118b1
  411841:	inc    ecx
  411842:	pop    ebp
  411843:	add    BYTE PTR [eax],dl
  411845:	add    BYTE PTR [ebx+0xd],ah
  411848:	mov    ah,0x58
  41184a:	add    al,al
  41184c:	(bad)  
  41184d:	int3   
  41184e:	int3   
  41184f:	mov    edx,DWORD PTR [esi-0x39]
  411852:	or     ecx,ebp
  411854:	cvtdq2ps xmm0,XMMWORD PTR [eax]
  411857:	push   0x0
  411859:	add    DWORD PTR [edi+edx*4],esp
  41185c:	cmp    ah,ch
  41185e:	add    BYTE PTR [ebp+0x5600cc00],cl
  411864:	dec    ebp
  411865:	mov    eax,ebx
  411867:	jns    0x411849
  411869:	sti    
  41186a:	ror    DWORD PTR [ebx+eax*4],cl
  41186d:	mov    eax,DWORD PTR [eax]
  41186f:	mov    bl,0xb0
  411871:	and    edi,ebx
  411873:	int3   
  411874:	or     al,0x8b
  411876:	mov    ecx,DWORD PTR [ebx-0xa33ba15]
  41187c:	xor    BYTE PTR [edx+0xc7cc61],dl
  411882:	mov    DWORD PTR [edx-0x24],esi
  411885:	gs push ds
  411887:	add    ah,cl
  411889:	ror    BYTE PTR [ebp-0x75],0x1
  41188d:	mov    edi,edi
  41188f:	jmp    0x33:0xe05aa952
  411896:	adc    BYTE PTR [edi+esi*2],al
  411899:	jo     0x4118f2
  41189b:	push   0x0
  41189d:	(bad)  
  41189e:	adc    ah,cl
  4118a0:	call   0x887ea430
  4118a5:	retf   
  4118a6:	xchg   ebp,eax
  4118a7:	add    BYTE PTR [edx+0x50],ch
  4118aa:	add    BYTE PTR [edi+0x148db2a],dh
  4118b0:	add    BYTE PTR [ebx+0x10fcc],cl
  4118b6:	add    ch,ch
  4118b8:	adc    al,0x99
  4118ba:	or     al,0x8b
  4118bc:	int3   
  4118bd:	inc    DWORD PTR [eax]
  4118bf:	add    esp,eax
  4118c1:	test   eax,0x10004b
  4118c6:	int3   
  4118c7:	mov    eax,DWORD PTR [ecx]
  4118c9:	or     BYTE PTR [ebx-0x4f9f654e],cl
  4118cf:	add    DWORD PTR [eax],eax
  4118d1:	mov    esi,DWORD PTR [ebp+ecx*4-0x60]
  4118d5:	mov    al,ds:0x74e88566
  4118da:	int3   
  4118db:	add    esp,ecx
  4118dd:	add    BYTE PTR [ebx],dh
  4118df:	cmp    BYTE PTR [ecx],bh
  4118e1:	iret   
  4118e2:	(bad)  
  4118e3:	mov    DWORD PTR [esi+0x0],eax
  4118e6:	add    cl,cl
  4118e8:	hlt    
  4118e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118ea:	xchg   esp,eax
  4118eb:	dec    DWORD PTR [ebx-0x33f3bab3]
  4118f1:	add    al,0x0
  4118f3:	ret    
  4118f4:	mov    cs,WORD PTR [eax-0x73]
  4118f7:	or     DWORD PTR [ecx+0x649cc00],0x1c
  4118fe:	mov    ch,0xc
  411900:	add    al,0xff
  411902:	add    al,al
  411904:	push   esi
  411905:	int3   
  411906:	add    al,0xdf
  411908:	sub    al,0x29
  41190a:	xor    eax,0x8b08008b
  41190f:	aas    
  411910:	sahf   
  411911:	sbb    al,0x9c
  411913:	je     0x411924
  411915:	ror    ah,0x45
  411918:	int3   
  411919:	mov    DWORD PTR [ebx],esi
  41191b:	retf   
  41191c:	je     0x411941
  41191e:	test   DWORD PTR [ecx-0x4c7ab934],ecx
  411924:	es pushf 
  411926:	and    al,BYTE PTR [eax]
  411928:	int3   
  411929:	test   DWORD PTR [ebp-0x34],eax
  41192c:	add    al,ah
  41192e:	int3   
  41192f:	cmp    eax,0xddf2d893
  411934:	je     0x411935
  411936:	mov    ecx,DWORD PTR [edi+0x562ac0fe]
  41193c:	str    WORD PTR [eax]
  41193f:	adc    BYTE PTR [ebp+0x1],dl
  411942:	mov    esp,DWORD PTR [edx-0x74de0d3e]
  411948:	int3   
  411949:	int3   
  41194a:	int3   
  41194b:	and    al,ah
  41194d:	mov    BYTE PTR [ebx],dl
  41194f:	mov    DWORD PTR [ebx-0x72ff14],ecx
  411955:	add    BYTE PTR [ecx+0x1db165de],cl
  41195b:	add    al,0x1
  41195d:	int3   
  41195e:	push   ebp
  41195f:	jns    0x411941
  411961:	sbb    BYTE PTR [ecx+eax*1],ah
  411964:	(bad)  
  411965:	dec    esp
  411967:	dec    esp
  411969:	adc    BYTE PTR [ebp-0x71],dl
  41196c:	(bad)  
  41196d:	cmc    
  41196e:	stos   BYTE PTR es:[edi],al
  41196f:	int3   
  411970:	add    BYTE PTR [eax],al
  411972:	push   eax
  411973:	rcr    DWORD PTR [eax+0x28],0x65
  411977:	int3   
  411978:	add    ah,ch
  41197a:	add    bh,bh
  41197c:	add    DWORD PTR [eax],eax
  41197e:	(bad)  
  41197f:	out    dx,al
  411980:	es push es
  411982:	scas   eax,DWORD PTR es:[edi]
  411983:	mov    eax,DWORD PTR [eax]
  411985:	add    BYTE PTR [eax],al
  411987:	jae    0x411937
  411989:	retf   
  41198a:	test   al,0x8b
  41198c:	jmp    0x4119a3
  41198e:	jmp    eax
  411990:	mov    eax,DWORD PTR [ebp+0x0]
  411993:	push   edi
  411995:	lsl    eax,WORD PTR [edx+ebp*2]
  411999:	add    DWORD PTR [eax],eax
  41199b:	dec    esi
  41199c:	push   ds
  41199d:	imul   DWORD PTR [ebx-0x75]
  4119a0:	push   ebp
  4119a1:	add    DWORD PTR [eax],eax
  4119a3:	inc    ebp
  4119a4:	add    BYTE PTR [ebx-0x9ec0315],cl
  4119aa:	xchg   ebp,eax
  4119ab:	int3   
  4119ac:	call   DWORD PTR [ebp-0x40]
  4119af:	lds    edx,FWORD PTR [esp+edi*2-0x74ef721e]
  4119b6:	je     0x4119b9
  4119b8:	int3   
  4119b9:	add    BYTE PTR [eax],al
  4119bb:	xchg   edi,eax
  4119bc:	fdivr  QWORD PTR [ecx]
  4119be:	dec    ebx
  4119bf:	int3   
  4119c0:	add    BYTE PTR [ecx+ecx*4],al
  4119c3:	enter  0x83b4,0x3
  4119c7:	(bad)  
  4119c8:	(bad)  
  4119c9:	in     al,dx
  4119ca:	adc    BYTE PTR [eax],al
  4119cc:	int3   
  4119cd:	add    BYTE PTR [eax],al
  4119cf:	mov    cl,0x73
  4119d1:	xor    edx,DWORD PTR [eax+eax*1-0x75]
  4119d5:	int3   
  4119d6:	or     BYTE PTR [edi+0x1b],ch
  4119d9:	jmp    0x89ff:0x505685
  4119e0:	or     BYTE PTR [eax],al
  4119e2:	jmp    0x411979
  4119e4:	sbb    al,0x67
  4119e6:	std    
  4119e7:	int3   
  4119e8:	add    BYTE PTR [ebp-0x43d93473],al
  4119ee:	clc    
  4119ef:	add    BYTE PTR [eax],al
  4119f1:	inc    esi
  4119f2:	fld    QWORD PTR [ebp+0x13450075]
  4119f8:	fwait
  4119f9:	js     0x411a65
  4119fb:	int3   
  4119fc:	add    DWORD PTR [eax],eax
  4119fe:	add    BYTE PTR [ecx+0x6f],dl
  411a01:	test   edx,esi
  411a03:	lea    eax,[eax]
  411a05:	push   esi
  411a06:	mov    edi,edi
  411a08:	mov    ecx,DWORD PTR [ebx+0x7de1218b]
  411a0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a0f:	add    BYTE PTR [ecx],al
  411a11:	call   0x3a9a4b16
  411a16:	rol    DWORD PTR [eax],1
  411a18:	rol    BYTE PTR [ecx],0x0
  411a1b:	dec    esp
  411a1d:	push   eax
  411a1e:	mov    ebx,DWORD PTR [esi+0x47]
  411a21:	loopne 0x411a88
  411a23:	add    edi,edi
  411a25:	mov    DWORD PTR [ecx],eax
  411a27:	cwde   
  411a28:	cmp    ebp,DWORD PTR [esi+0x89ec36]
  411a2e:	or     bh,al
  411a30:	test   DWORD PTR [ebp-0x75],eax
  411a33:	mov    al,0x75
  411a35:	dec    ebx
  411a36:	je     0x411a04
  411a38:	int3   
  411a39:	mov    eax,DWORD PTR [eax]
  411a3b:	outs   dx,DWORD PTR ds:[esi]
  411a3c:	jo     0x411a31
  411a3e:	test   BYTE PTR [eax+ebp*8],cl
  411a41:	mov    eax,DWORD PTR [eax]
  411a43:	dec    DWORD PTR [eax]
  411a45:	mov    ecx,DWORD PTR [ebx-0x9f00516]
  411a4b:	mov    DWORD PTR [eax],eax
  411a4d:	or     al,0x0
  411a4f:	retf   
  411a50:	test   DWORD PTR [ecx+0x33],eax
  411a53:	or     BYTE PTR [eax],cl
  411a55:	add    BYTE PTR [ecx],al
  411a57:	push   DWORD PTR [ebx]
  411a59:	in     al,dx
  411a5a:	call   FWORD PTR [edx-0x2]
  411a5d:	mov    ah,0x93
  411a5f:	dec    ebp
  411a60:	call   FWORD PTR [ebp+0x15]
  411a63:	jmp    0x0:0x7d9827
  411a6a:	inc    DWORD PTR [ebp+0x0]
  411a6d:	adc    BYTE PTR [ebp+0x421c265f],cl
  411a73:	mov    eax,DWORD PTR [eax]
  411a75:	mov    DWORD PTR [ebx+0x7d6ccfaa],ecx
  411a7b:	fld    QWORD PTR [eax]
  411a7d:	add    BYTE PTR [eax],al
  411a7f:	inc    ebp
  411a80:	int3   
  411a81:	int3   
  411a82:	or     ch,dl
  411a84:	sub    al,0xfb
  411a86:	push   edi
  411a87:	add    BYTE PTR [ebp+0x56],dh
  411a8a:	loopne 0x411ad8
  411a8c:	out    0xd1,eax
  411a8e:	sbb    al,0x8
  411a90:	mov    edx,DWORD PTR [ebp+0x55]
  411a93:	add    BYTE PTR [eax],al
  411a95:	add    BYTE PTR [ebp+0x25],dh
  411a98:	fld    QWORD PTR [ebx]
  411a9a:	xor    al,0x5d
  411a9c:	mov    DWORD PTR [eax],eax
  411a9e:	mov    eax,DWORD PTR [esp+edi*1]
  411aa1:	or     eax,0xc083ff67
  411aa6:	add    al,ch
  411aa8:	in     al,dx
  411aa9:	int3   
  411aaa:	rcl    BYTE PTR [esp+edi*4+0x56dd52d1],0x10
  411ab2:	jne    0x411af5
  411ab4:	out    0x8d,al
  411ab6:	pop    esi
  411ab7:	int3   
  411ab8:	add    BYTE PTR [ebx+0x46e08b89],cl
  411abe:	or     BYTE PTR [eax-0x1a481b],bh
  411ac4:	inc    DWORD PTR [ebx-0xd298e75]
  411aca:	ret    0x8b01
  411acd:	add    ah,cl
  411acf:	mov    ebx,DWORD PTR [ebp-0x23]
  411ad2:	int3   
  411ad3:	imul   ecx,esi,0xffffffdb
  411ad6:	retf   
  411ad7:	int3   
  411ad8:	add    BYTE PTR [eax+eax*1],cl
  411adb:	(bad)  
  411add:	sbb    al,0xac
  411adf:	mov    eax,DWORD PTR [eax]
  411ae1:	inc    DWORD PTR [eax]
  411ae3:	add    BYTE PTR [eax+eax*1],cl
  411ae6:	add    al,0xc4
  411ae8:	adc    al,0x82
  411aea:	imul   eax,DWORD PTR [eax],0x5b6a0f04
  411af0:	add    DWORD PTR [ecx+0x6a],ebp
  411af3:	add    BYTE PTR [eax],cl
  411af5:	add    BYTE PTR [eax],cl
  411af7:	dec    DWORD PTR [ecx+0x52190001]
  411afd:	cmp    al,ah
  411aff:	mov    DWORD PTR [ebx+0x4bcdd8b],ecx
  411b05:	repz dec esi
  411b07:	add    BYTE PTR [eax],al
  411b09:	mov    ebp,DWORD PTR [edx+0x0]
  411b0c:	mov    DWORD PTR [eax],eax
  411b0e:	sar    BYTE PTR [eax],0x1d
  411b11:	pop    ds
  411b12:	dec    esp
  411b13:	in     al,dx
  411b14:	add    BYTE PTR [ebp-0x75],bl
  411b17:	std    
  411b18:	jmp    0x411aa0
  411b1a:	loope  0x411b1b
  411b1c:	test   DWORD PTR [eax],ecx
  411b1e:	add    BYTE PTR [eax],al
  411b20:	mov    DWORD PTR [ebp+0x0],esi
  411b23:	fisttp QWORD PTR [edx+ecx*2]
  411b26:	and    eax,0xcc0400cc
  411b2b:	and    ch,bh
  411b2d:	mov    eax,ds:0x1000cc32
  411b32:	int3   
  411b33:	add    al,0x1
  411b35:	add    BYTE PTR [edi],cl
  411b37:	pushf  
  411b38:	rcr    BYTE PTR [eax-0x77],1
  411b3b:	add    eax,0xffffff8b
  411b3e:	or     al,0xd7
  411b40:	cs sbb eax,esp
  411b43:	add    BYTE PTR [eax],dl
  411b45:	int3   
  411b46:	rcl    BYTE PTR [ebp-0x75],0x10
  411b4a:	push   0xffffffc3
  411b4c:	daa    
  411b4d:	retf   0xec90
  411b50:	add    BYTE PTR [eax],al
  411b52:	or     ah,cl
  411b54:	sahf   
  411b55:	lahf   
  411b56:	sub    BYTE PTR [ebx+ecx*4+0x1],0x85
  411b5b:	test   ebp,ebx
  411b5d:	call   0x9c3c60e5
  411b62:	push   ss
  411b63:	test   bh,bh
  411b65:	fld    QWORD PTR [eax]
  411b67:	(bad)  
  411b69:	inc    esp
  411b6a:	or     esi,esi
  411b6c:	mov    eax,DWORD PTR [eax]
  411b6e:	mov    eax,DWORD PTR [ecx]
  411b70:	add    esp,ecx
  411b72:	push   DWORD PTR [ecx+edi*2-0x25]
  411b76:	lods   eax,DWORD PTR ds:[esi]
  411b77:	xchg   esp,eax
  411b78:	add    DWORD PTR [eax],eax
  411b7a:	add    BYTE PTR [ebp+0x3b24e2d1],al
  411b80:	push   ebp
  411b81:	lea    eax,[eax]
  411b83:	int3   
  411b84:	add    BYTE PTR [eax+0x15],dl
  411b87:	mov    DWORD PTR [ebx-0x4a],eax
  411b8a:	push   ecx
  411b8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b8c:	lea    ecx,[edi]
  411b8e:	add    bh,bh
  411b90:	shl    DWORD PTR [eax],1
  411b92:	mov    ds:0x1eb08e9,eax
  411b97:	ror    BYTE PTR [ebp+0x3be808ff],0x45
  411b9e:	int3   
  411b9f:	mov    WORD PTR [esp+ecx*8-0x34],?
  411ba3:	call   0xcc893aec
  411ba8:	add    BYTE PTR [ebx],dh
  411baa:	add    esp,ecx
  411bac:	add    BYTE PTR [ebx-0x51373400],cl
  411bb2:	bound  edx,QWORD PTR [eax-0x72fbb218]
  411bb8:	mov    bh,0x40
  411bba:	xchg   esi,eax
  411bbb:	or     cl,ah
  411bbd:	loopne 0x411bbe
  411bbf:	or     ah,cl
  411bc1:	inc    DWORD PTR [eax]
  411bc3:	add    DWORD PTR [ecx+ecx*1+0xce84f44],ebp
  411bca:	mov    DWORD PTR [eax],eax
  411bcc:	mov    bl,0x10
  411bce:	arpl   WORD PTR [eax],cx
  411bd0:	or     al,0x1
  411bd2:	int3   
  411bd3:	inc    DWORD PTR [ebx-0x52b30000]
  411bd9:	inc    eax
  411bda:	nop    ebp
  411bdd:	dec    esp
  411bdf:	add    cl,al
  411be1:	loop   0x411bfd
  411be3:	nop
  411be4:	add    BYTE PTR [ecx],al
  411be6:	loopne 0x411be7
  411be8:	add    BYTE PTR [eax],al
  411bea:	fld    QWORD PTR [ebp-0x218e7d7b]
  411bf0:	add    BYTE PTR [ebp-0x1],dh
  411bf3:	add    ch,dl
  411bf5:	and    DWORD PTR [esi],esp
  411bf7:	add    al,BYTE PTR [eax]
  411bf9:	add    bh,bh
  411bfb:	int3   
  411bfc:	add    BYTE PTR [ebp-0x20],cl
  411bff:	(bad)  
  411c00:	mov    edi,0x3ce8f2a
  411c05:	inc    DWORD PTR [eax]
  411c07:	add    bl,bh
  411c09:	push   ebx
  411c0a:	shl    eax,1
  411c0c:	lea    ecx,[ebx+0x4018b50]
  411c12:	in     al,dx
  411c13:	adc    eax,0x875b0bc3
  411c18:	lea    eax,[ecx]
  411c1a:	mov    eax,DWORD PTR [eax]
  411c1c:	dec    ebx
  411c1d:	iret   
  411c1e:	je     0x411bf0
  411c20:	adc    DWORD PTR [ebp+0x0],0x8
  411c24:	add    BYTE PTR [edi],cl
  411c26:	add    BYTE PTR [ecx],al
  411c28:	call   ebx
  411c2a:	or     al,0xe8
  411c2d:	add    BYTE PTR [ebx-0x688b2275],cl
  411c33:	rol    DWORD PTR [eax],0xcc
  411c36:	mov    eax,DWORD PTR [eax]
  411c38:	int3   
  411c39:	add    BYTE PTR [ebp-0x6d764c8c],cl
  411c3f:	dec    ecx
  411c40:	or     ch,bl
  411c42:	add    al,ch
  411c44:	(bad)  
  411c45:	lea    edi,[ebx]
  411c47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c48:	call   0x10de94c
  411c4d:	add    BYTE PTR [ebp-0x34],al
  411c50:	xor    eax,0x8b9a9a79
  411c55:	add    BYTE PTR [ecx],al
  411c57:	add    dh,cl
  411c59:	fidiv  WORD PTR [edx]
  411c5b:	ror    BYTE PTR [ebx-0x8b7700],1
  411c61:	int3   
  411c62:	inc    DWORD PTR [ecx]
  411c64:	cmc    
  411c65:	jmp    0xcc:0xffd191
  411c6c:	add    DWORD PTR [ebx+0x4],0x8b8b00d2
  411c73:	int3   
  411c74:	je     0x411c42
  411c76:	add    DWORD PTR [edx+ebp*2],0x68
  411c7a:	push   0xffffffd2
  411c7c:	add    BYTE PTR [ebx+0x18050001],cl
  411c82:	(bad)  
  411c84:	add    BYTE PTR [eax],al
  411c86:	call   0x8b4d2557
  411c8b:	add    BYTE PTR [ecx],ah
  411c8d:	cmp    bh,bh
  411c8f:	add    al,0xcc
  411c91:	add    BYTE PTR [eax],al
  411c93:	add    BYTE PTR [eax],bl
  411c95:	and    BYTE PTR [ecx+0x7],al
  411c98:	add    eax,esp
  411c9a:	(bad)  
  411c9b:	int3   
  411c9c:	mov    edi,edi
  411c9e:	or     DWORD PTR [eax],0xffffffdf
  411ca1:	xor    al,0x34
  411ca3:	xchg   edx,eax
  411ca4:	loopne 0x411c2b
  411ca6:	add    DWORD PTR [ecx-0x10ad4d45],ecx
  411cac:	add    BYTE PTR [eax],al
  411cae:	add    DWORD PTR [ebx],eax
  411cb0:	adc    eax,0x6601038b
  411cb5:	enter  0x9048,0xff
  411cb9:	int3   
  411cba:	inc    ebp
  411cbb:	adc    eax,0xa93658cf
  411cc0:	add    BYTE PTR [ebx+ecx*4],al
  411cc3:	add    ah,cl
  411cc5:	add    ch,bl
  411cc7:	add    BYTE PTR [esi-0x7a5c64c8],cl
  411ccd:	mov    esi,DWORD PTR [ebp-0x15]
  411cd0:	dec    esp
  411cd1:	sbb    eax,0x8be84339
  411cd6:	adc    eax,0x8b858d
  411cdb:	mov    esi,ebx
  411cdd:	(bad)  [ebp+0xd]
  411ce0:	add    al,0xc0
  411ce2:	add    al,al
  411ce4:	rol    DWORD PTR [edx+0x42],1
  411ce7:	xor    al,0x8b
  411ce9:	add    BYTE PTR [ecx],al
  411ceb:	dec    esp
  411ced:	inc    ebp
  411cee:	fld    QWORD PTR [eax]
  411cf0:	in     eax,0x9b
  411cf2:	or     DWORD PTR [ebp-0x76ff7434],ecx
  411cf8:	inc    BYTE PTR [esi+edi*8+0x7d]
  411cfc:	add    BYTE PTR [ebp+0x6a],al
  411cff:	add    BYTE PTR [ebp+0x0],dl
  411d02:	adc    eax,0x1d1aac46
  411d07:	or     al,0x8d
  411d09:	adc    eax,0x48490000
  411d0e:	sbb    dh,BYTE PTR [ebx*8+0x45cc00]
  411d15:	add    al,0x1
  411d17:	add    ecx,DWORD PTR [edx-0x74f19a14]
  411d1d:	inc    ebp
  411d1e:	inc    esi
  411d1f:	getsec 
  411d21:	or     al,0xd5
  411d23:	pop    esi
  411d24:	or     al,0x0
  411d26:	ror    ah,0xcc
  411d29:	add    BYTE PTR [eax],al
  411d2b:	btr    DWORD PTR ds:0xcc55f536,ebx
  411d32:	add    BYTE PTR [eax],al
  411d34:	add    eax,0x56120d9c
  411d39:	int3   
  411d3a:	push   esi
  411d3b:	mov    ecx,esp
  411d3d:	add    BYTE PTR [eax+eax*1],cl
  411d40:	push   0x46d3116b
  411d45:	inc    DWORD PTR [eax]
  411d47:	in     al,dx
  411d48:	mov    dl,0x50
  411d4a:	dec    ebx
  411d4b:	dec    esi
  411d4c:	mov    eax,DWORD PTR [ecx]
  411d4e:	or     ah,cl
  411d50:	int3   
  411d51:	int3   
  411d52:	int3   
  411d53:	mov    ebp,ebx
  411d55:	imul   esi,DWORD PTR [edi-0xffff7e],0x0
  411d5c:	mov    bl,0x6f
  411d5e:	cmp    DWORD PTR [edi-0x39],ebx
  411d61:	jne    0x411dd8
  411d63:	add    DWORD PTR [ebx-0x97200ff],ecx
  411d69:	jl     0x411d06
  411d6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d6c:	or     BYTE PTR [ebp+0xd855008],al
  411d72:	(bad)  
  411d73:	loope  0x411d75
  411d75:	int3   
  411d76:	adc    BYTE PTR [eax],dl
  411d78:	add    BYTE PTR [ecx],al
  411d7a:	rol    BYTE PTR [eax],0xdb
  411d7d:	outs   dx,DWORD PTR ds:[esi]
  411d7e:	pop    edi
  411d7f:	mov    eax,0x1008b01
  411d84:	test   DWORD PTR [ebp-0x3ff7883e],ebx
  411d8a:	int3   
  411d8b:	add    BYTE PTR [eax],cl
  411d8d:	or     BYTE PTR [eax],al
  411d8f:	(bad)  
  411d91:	out    dx,al
  411d92:	and    cl,BYTE PTR ds:0x8b8b00c0
  411d98:	sar    BYTE PTR [edi],0x97
  411d9b:	mov    eax,0xff008b01
  411da0:	adc    eax,0x87838be0
  411da5:	cs inc esp
  411da7:	cld    
  411da8:	mov    ecx,DWORD PTR [ebx-0x5d53ff77]
  411dae:	shl    dh,cl
  411db0:	jnp    0x8bcc2a2a
  411db6:	xor    ebp,ebx
  411db8:	daa    
  411db9:	in     al,dx
  411dba:	aaa    
  411dbb:	add    al,0x1
  411dbd:	mov    DWORD PTR [eax],eax
  411dbf:	mov    eax,eax
  411dc1:	aas    
  411dc2:	push   ds
  411dc3:	dec    eax
  411dc4:	test   DWORD PTR [eax+edx*2-0x18],esi
  411dc8:	loopne 0x411d55
  411dca:	add    ah,cl
  411dcc:	mov    dh,0x11
  411dce:	mov    ah,0xef
  411dd0:	inc    ebp
  411dd1:	int3   
  411dd2:	mov    eax,DWORD PTR [eax]
  411dd4:	neg    DWORD PTR [esi]
  411dd6:	inc    eax
  411dd7:	push   ds
  411dd8:	xor    eax,DWORD PTR [esi-0x34]
  411ddb:	int3   
  411ddc:	add    BYTE PTR [eax],al
  411dde:	add    BYTE PTR [eax],al
  411de0:	cmp    DWORD PTR [ebx-0x52],ecx
  411de3:	mov    ebx,0x85008b89
  411de8:	ret    
  411de9:	pusha  
  411dea:	pop    esi
  411deb:	or     eax,0xcc450000
  411df0:	mov    eax,DWORD PTR [eax]
  411df2:	in     al,dx
  411df3:	or     al,0xaa
  411df5:	arpl   WORD PTR [edi],cx
  411df7:	rol    DWORD PTR [ecx],1
  411df9:	int3   
  411dfa:	(bad)  
  411dfb:	jmp    0x411de2
  411dfd:	push   0x7a
  411dff:	cwde   
  411e00:	dec    esp
  411e02:	add    BYTE PTR [ebp+0xcc55cc],cl
  411e08:	out    dx,eax
  411e09:	mov    eax,0xc5c71
  411e0e:	test   DWORD PTR [eax],eax
  411e10:	popf   
  411e11:	lahf   
  411e12:	ds test al,0x85
  411e15:	dec    DWORD PTR [ebx+0x8454d8b]
  411e1b:	add    ebx,esp
  411e1d:	and    BYTE PTR [esi+0xd],cl
  411e20:	mov    eax,DWORD PTR [eax]
  411e22:	dec    DWORD PTR [ebx-0x38f0861a]
  411e28:	lea    esi,[ebx]
  411e2a:	add    DWORD PTR [ecx],0x0
  411e2d:	mov    eax,DWORD PTR [eax]
  411e2f:	add    DWORD PTR [edi+0x3748a6d],edi
  411e35:	fst    QWORD PTR ds:0xb2ea2e74
  411e3b:	inc    ebx
  411e3c:	add    BYTE PTR [ecx+0xcff5d00],cl
  411e42:	je     0x411e44
  411e44:	fwait
  411e45:	adc    BYTE PTR [eax+0xc01ff9c],bh
  411e4b:	push   0xffffffe3
  411e4d:	sar    BYTE PTR [ecx],cl
  411e4f:	outs   dx,DWORD PTR ds:[esi]
  411e50:	int3   
  411e51:	int3   
  411e52:	add    BYTE PTR ds:0x8b000000,dl
  411e58:	ret    
  411e59:	mov    eax,0xce6d38d
  411e5e:	add    bh,bh
  411e60:	add    BYTE PTR [edi+0x48],ah
  411e63:	je     0x411ee2
  411e65:	add    DWORD PTR [ebp+0x0],ecx
  411e68:	int3   
  411e69:	or     BYTE PTR [ebx+0x36744d01],cl
  411e6f:	adc    BYTE PTR [edx-0x33ff3334],bh
  411e75:	mov    eax,ds:0x17d4db
  411e7a:	add    ah,cl
  411e7c:	adc    BYTE PTR [ebp-0x4cff33b0],cl
  411e82:	test   eax,0x8b8b02c5
  411e87:	add    al,0x0
  411e89:	jge    0x411eb8
  411e8b:	push   edi
  411e8c:	jo     0x411f02
  411e8e:	add    esp,ecx
  411e90:	add    BYTE PTR [ebp+0x0],al
  411e93:	lea    eax,[ebx-0x5fd71b46]
  411e99:	dec    DWORD PTR [ecx-0x262f74f8]
  411e9f:	icebp  
  411ea0:	jns    0x411e2d
  411ea2:	add    edi,edi
  411ea4:	mov    eax,DWORD PTR [eax]
  411ea6:	push   eax
  411ea7:	push   ebp
  411ea8:	add    BYTE PTR [ebp+0x1],bh
  411eab:	ins    BYTE PTR es:[edi],dx
  411eac:	cmp    BYTE PTR [ebp-0x39],bl
  411eaf:	int3   
  411eb0:	push   esi
  411eb1:	or     ah,ch
  411eb3:	xlat   BYTE PTR ds:[ebx]
  411eb4:	cmc    
  411eb5:	mov    DWORD PTR [ecx],eax
  411eb7:	add    BYTE PTR [ebp-0x77],cl
  411eba:	rcr    ch,0x56
  411ebd:	pop    edx
  411ebe:	sbb    eax,0xccbcb2
  411ec3:	add    DWORD PTR [eax],eax
  411ec5:	mov    ebx,0x45eb16e7
  411eca:	loopne 0x411f40
  411ecc:	add    BYTE PTR [ebx-0x7d8bff77],cl
  411ed2:	cli    
  411ed3:	xor    DWORD PTR [ecx],0x8b0cff00
  411ed9:	stos   DWORD PTR es:[edi],eax
  411eda:	mov    cl,0xdd
  411edc:	inc    esi
  411edd:	mov    ecx,DWORD PTR [eax]
  411edf:	dec    DWORD PTR [ebx+0x74000c00]
  411ee5:	mov    ch,0x3c
  411ee7:	xchg   ebx,edi
  411ee9:	add    ah,cl
  411eeb:	mov    DWORD PTR [ecx],0x701b5eac
  411ef1:	adc    BYTE PTR [ebp+0x55],dh
  411ef4:	int3   
  411ef5:	(bad)  
  411ef6:	xor    edi,edi
  411ef8:	(bad)  
  411efa:	ds push esp
  411efc:	push   edx
  411efd:	add    BYTE PTR [eax],al
  411eff:	add    bh,bh
  411f01:	addr16 nop
  411f03:	sbb    DWORD PTR [edx],esp
  411f05:	jmp    0x411f07
  411f07:	add    BYTE PTR [esi-0x75],al
  411f0a:	dec    esp
  411f0c:	add    BYTE PTR [eax],bh
  411f0e:	aam    0x96
  411f10:	mov    eax,ds:0xcc000083
  411f15:	mov    bl,0xf7
  411f17:	ds push ds
  411f19:	or     BYTE PTR [eax],cl
  411f1b:	jne    0x411f21
  411f1d:	(bad)  
  411f1e:	int3   
  411f1f:	mov    ecx,DWORD PTR [ebp-0x3a]
  411f22:	call   0x4d89:0x8bcc8227
  411f29:	or     BYTE PTR ds:0x74003914,bl
  411f2f:	call   DWORD PTR ds:0xcccc0ccc
  411f35:	leave  
  411f36:	and    bh,BYTE PTR [edx]
  411f38:	dec    ecx
  411f39:	add    DWORD PTR [eax],0x1
  411f3c:	in     al,dx
  411f3d:	xchg   edi,eax
  411f3e:	jno    0x411fbf
  411f40:	sub    BYTE PTR [ecx],al
  411f42:	add    ah,cl
  411f44:	int3   
  411f45:	add    DWORD PTR [eax],0xffffff8b
  411f48:	add    BYTE PTR [ebx],ch
  411f4a:	dec    ebx
  411f4b:	ja     0x411efe
  411f4d:	mov    eax,DWORD PTR [eax]
  411f4f:	add    BYTE PTR [ebp-0x2e],bl
  411f52:	xor    edi,ebp
  411f54:	(bad)
  411f57:	mov    ebp,DWORD PTR [edx+0xc]
  411f5a:	int3   
  411f5b:	add    al,0x0
  411f5d:	xchg   ebx,eax
  411f5e:	and    al,0xea
  411f60:	out    0xff,al
  411f62:	xadd   BYTE PTR [ebx-0x4ffada3],al
  411f69:	add    BYTE PTR [eax],al
  411f6b:	int3   
  411f6c:	call   0x42ff71
  411f71:	or     BYTE PTR [edx+0x1ff2dea],bh
  411f77:	jnp    0xb79554f
  411f7d:	adc    BYTE PTR [ebp-0x77],bl
  411f80:	add    BYTE PTR [eax],al
  411f82:	add    BYTE PTR [eax],al
  411f84:	int3   
  411f85:	mov    bl,0xe
  411f87:	cld    
  411f88:	sub    al,0x8
  411f8a:	call   0x44dbaa93
  411f8f:	(bad)  
  411f90:	jp     0x411f5e
  411f92:	adc    BYTE PTR [eax],al
  411f94:	add    BYTE PTR [ebx+0x5f890000],cl
  411f9a:	scas   al,BYTE PTR es:[edi]
  411f9b:	push   DWORD PTR [edi+0x75ffccec]
  411fa1:	jns    0x411f56
  411fa3:	loope  0x411fca
  411fa5:	int3   
  411fa6:	int3   
  411fa7:	add    BYTE PTR [eax],al
  411fa9:	dec    ebp
  411faa:	add    BYTE PTR [esp+ecx*1],cl
  411fad:	frstor [ebp-0x36]
  411fb0:	fild   DWORD PTR [ebx+0x25005600]
  411fb6:	xor    al,0xfc
  411fb8:	cs push 0xffffffcc
  411fbb:	int3   
  411fbc:	fld    QWORD PTR [eax]
  411fbe:	pop    ebp
  411fbf:	add    al,ah
  411fc1:	popf   
  411fc2:	xor    al,0x60
  411fc4:	mov    al,0x89
  411fc6:	lea    eax,[ebp-0x5c2c1bff]
  411fcc:	stos   DWORD PTR es:[edi],eax
  411fcd:	or     DWORD PTR [ebx+0x5d8900dd],0x56
  411fd4:	int3   
  411fd5:	push   cs
  411fd6:	sub    BYTE PTR [eax-0x38aa7422],dl
  411fdc:	lea    eax,[ecx+0x114cd31]
  411fe2:	je     0x411f6f
  411fe4:	add    bh,bh
  411fe6:	add    BYTE PTR [eax],al
  411fe8:	add    DWORD PTR [ecx-0x2207ddce],ecx
  411fee:	add    BYTE PTR [eax],al
  411ff0:	int3   
  411ff1:	mov    eax,0xcc1489b1
  411ff6:	jne    0x411f83
  411ff8:	add    DWORD PTR [ecx],eax
  411ffa:	mov    eax,DWORD PTR [ebx+0x7bb442ff]
  412000:	(bad)  [ebx]
  412002:	add    DWORD PTR [ecx],eax
  412004:	mov    DWORD PTR [edx+0x89cba6b],eax
  41200a:	push   DWORD PTR [ebp+0x45]
  41200d:	add    DWORD PTR [ecx],eax
  41200f:	mov    ecx,DWORD PTR [ebp-0x68]
  412012:	xor    dl,BYTE PTR [eax]
  412014:	scas   al,BYTE PTR es:[edi]
  412015:	add    BYTE PTR [edi],cl
  412017:	adc    bl,ch
  412019:	call   0x8b08:0x6a36e4d2
  412020:	int3   
  412021:	inc    DWORD PTR [eax]
  412023:	mov    eax,DWORD PTR [ecx]
  412025:	rol    DWORD PTR [edx],1
  412027:	mov    edi,0x8b6ad0
  41202c:	in     al,dx
  41202d:	mov    ah,0x63
  41202f:	fisttp QWORD PTR [ecx-0x75]
  412032:	add    BYTE PTR [ebp-0x7474748b],al
  412038:	(bad)  
  412039:	jp     0x41203d
  41203b:	push   esi
  41203c:	xchg   BYTE PTR [eax],al
  41203e:	jmp    0x412040
  412040:	add    ch,ch
  412042:	popf   
  412043:	not    DWORD PTR [esi+0x0]
  412046:	add    BYTE PTR [eax],cl
  412048:	mov    eax,DWORD PTR [eax]
  41204a:	add    BYTE PTR [ecx],al
  41204c:	cmp    DWORD PTR [ebx+0xc],0xffffffb3
  412050:	and    BYTE PTR [esi+0x0],al
  412053:	add    al,0x45
  412055:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412056:	into   
  412057:	bound  edi,QWORD PTR [edx]
  412059:	int3   
  41205a:	int3   
  41205b:	add    BYTE PTR [esi+0x3],dl
  41205e:	dec    ebp
  41205f:	mov    DWORD PTR [eax],eax
  412061:	xchg   BYTE PTR [edi],ah
  412063:	fldenv [edx-0x8b7c8c]
  412069:	(bad)  
  41206a:	dec    ecx
  41206b:	test   eax,0x8375e0c9
  412070:	add    al,0x46
  412072:	or     al,0xeb
  412074:	add    BYTE PTR [esi+0x31],bl
  412077:	cld    
  412078:	push   ecx
  412079:	add    bh,bh
  41207b:	add    BYTE PTR [eax],al
  41207d:	sub    DWORD PTR [edx],0x854ff
  412083:	dec    DWORD PTR [ebx-0x3317ff01]
  412089:	dec    esi
  41208a:	pop    ecx
  41208b:	aas    
  41208c:	xchg   ebp,eax
  41208d:	int3   
  41208e:	add    BYTE PTR [eax],al
  412090:	or     BYTE PTR [ebp+0xcca913],bh
  412096:	int3   
  412097:	int3   
  412098:	int3   
  412099:	int3   
  41209a:	mov    DWORD PTR [ecx],eax
  41209c:	mov    DWORD PTR [ecx+0x7bbb86],eax
  4120a2:	add    BYTE PTR [ebx+0x33de575],cl
  4120a8:	repz add BYTE PTR [ebp+0x1],cl
  4120ac:	int3   
  4120ad:	or     BYTE PTR [eax],al
  4120af:	push   0xffffff8b
  4120b1:	je     0x4120ec
  4120b3:	cmc    
  4120b4:	or     BYTE PTR fs:[eax],al
  4120b7:	add    BYTE PTR [esi+0x41],dl
  4120ba:	cmp    esp,DWORD PTR [ebx+eax*2-0x1]
  4120be:	jne    0x4120bf
  4120c0:	mov    eax,DWORD PTR [ebx]
  4120c2:	mov    ecx,esp
  4120c4:	add    BYTE PTR [esp+esi*1-0x79],bh
  4120c8:	sbb    eax,0xff005589
  4120cd:	inc    ebp
  4120ce:	cmp    ch,dl
  4120d0:	sti    
  4120d1:	dec    DWORD PTR [ebx-0x22ffffba]
  4120d7:	mov    eax,DWORD PTR [eax]
  4120d9:	test   DWORD PTR [ebx+0x1d],edx
  4120dc:	jp     0x4120de
  4120de:	add    BYTE PTR [esi+0x50],al
  4120e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120e2:	cld    
  4120e3:	ror    ah,cl
  4120e5:	inc    DWORD PTR [eax]
  4120e7:	add    bh,bh
  4120e9:	mov    ecx,DWORD PTR [ecx+0x407b000c]
  4120ef:	adc    al,0x8e
  4120f1:	jne    0x4120f3
  4120f3:	int3   
  4120f4:	mov    ebx,DWORD PTR [esi]
  4120f6:	adc    bx,dx
  4120f9:	int3   
  4120fa:	int3   
  4120fb:	mov    eax,DWORD PTR [esi-0x77]
  4120fe:	add    ah,cl
  412100:	inc    ebp
  412101:	mov    eax,ds:0x1f8e22
  412106:	or     DWORD PTR [ebx+0x68e63f00],0xfffffff9
  41210d:	inc    DWORD PTR [eax]
  41210f:	test   DWORD PTR [ebp+0x33834dff],eax
  412115:	push   cs
  412116:	xor    esi,DWORD PTR [ecx+0x750100db]
  41211c:	add    BYTE PTR [edx+edi*1+0x17e7],dl
  412123:	dec    ebp
  412124:	or     ah,cl
  412126:	add    DWORD PTR [eax],edx
  412128:	(bad)  
  412129:	cmp    BYTE PTR [ebx+0x45000a7f],ch
  41212f:	add    BYTE PTR [ebp+0x65],dh
  412132:	scas   eax,DWORD PTR es:[edi]
  412133:	pusha  
  412134:	clc    
  412135:	int3   
  412136:	inc    DWORD PTR [eax]
  412138:	call   0x12d8b45
  41213d:	(bad)  
  41213e:	repnz sbb BYTE PTR [edx],ah
  412141:	jne    0x412123
  412143:	(bad)  
  412144:	int3   
  412145:	inc    edx
  412146:	xor    ah,BYTE PTR [esi-0x14]
  412149:	add    BYTE PTR [eax],al
  41214b:	rol    al,0xff
  41214e:	or     al,0x8b
  412150:	int3   
  412151:	fwait
  412152:	xor    bh,BYTE PTR [ebp+0x1b]
  412155:	int3   
  412156:	add    DWORD PTR [eax+0x0],edx
  412159:	ret    
  41215a:	sub    DWORD PTR [ecx+0x4],esp
  41215d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41215e:	jne    0x412161
  412160:	and    eax,0xb
  412163:	popa   
  412164:	mov    dl,0xa4
  412166:	or     BYTE PTR [eax],al
  412168:	int3   
  412169:	inc    ebp
  41216a:	add    DWORD PTR [eax],eax
  41216c:	or     BYTE PTR [ebx+0x1032c957],cl
  412172:	add    BYTE PTR [ebx-0x5cc33b0],cl
  412178:	(bad)  
  412179:	out    dx,al
  41217a:	je     0x412105
  41217c:	add    DWORD PTR [eax],eax
  41217e:	add    BYTE PTR [ecx-0x5d7fa300],cl
  412184:	bound  edx,QWORD PTR [ecx+0xfff0174]
  41218a:	dec    ecx
  41218b:	cli    
  41218c:	mov    dl,0xae
  41218e:	adc    BYTE PTR [ebx-0xea387b],cl
  412194:	dec    DWORD PTR [ebp-0x787e374a]
  41219a:	add    BYTE PTR [eax+eax*1-0x34],dh
  41219e:	test   DWORD PTR [eax+0x8ec9a8b],edx
  4121a4:	ror    BYTE PTR [ebp+0x458b0800],0xf5
  4121ab:	xchg   edi,eax
  4121ac:	scas   al,BYTE PTR es:[edi]
  4121ad:	and    esp,ecx
  4121af:	mov    eax,DWORD PTR [ebx+0x4fff2900]
  4121b5:	pusha  
  4121b6:	mov    eax,DWORD PTR [eax]
  4121b8:	add    al,al
  4121ba:	or     al,0x8b
  4121bc:	ror    ah,0x1f
  4121bf:	mov    ch,0x78
  4121c1:	inc    esi
  4121c2:	je     0x4121d3
  4121c4:	dec    ebp
  4121c5:	(bad)  
  4121c6:	jmp    0xe7b46c
  4121cb:	jmp    0x412158
  4121cd:	mov    ecx,esp
  4121cf:	je     0x412156
  4121d1:	add    DWORD PTR [edi],0x7f
  4121d4:	xor    ebx,esi
  4121d6:	adc    eax,0xacffcc75
  4121db:	pop    edi
  4121dc:	sub    eax,0x8b568bff
  4121e1:	add    BYTE PTR [ebx],dh
  4121e3:	add    ah,cl
  4121e5:	add    al,0xb7
  4121e7:	loopne 0x4121d0
  4121e9:	pusha  
  4121ea:	or     esp,0x45
  4121ed:	add    ebx,0x6b
  4121f0:	cmc    
  4121f1:	mov    edx,0xc
  4121f6:	adc    BYTE PTR [eax],al
  4121f8:	fst    QWORD PTR [eax]
  4121fa:	adc    eax,0x8b205808
  4121ff:	int3   
  412200:	fucomp st(3)
  412202:	mov    BYTE PTR ss:[ebx-0xd],bl
  412206:	add    BYTE PTR [eax],al
  412208:	add    BYTE PTR [ebp-0x75],bl
  41220b:	inc    DWORD PTR [eax]
  41220d:	mov    eax,ebp
  41220f:	pop    ss
  412210:	jbe    0x412208
  412212:	inc    ebp
  412213:	add    bh,bh
  412215:	loopne 0x4121df
  412217:	add    DWORD PTR [edi],esi
  412219:	xor    eax,0x468bffcc
  41221e:	inc    esi
  41221f:	add    BYTE PTR [eax],al
  412221:	jmp    FWORD PTR [ebx-0xc6ce7b]
  412227:	jmp    0x412286
  412229:	inc    ebp
  41222a:	das    
  41222b:	cmp    al,0xd5
  41222d:	arpl   WORD PTR [eax*4-0x74fe1775],cx
  412234:	add    BYTE PTR [ecx],al
  412236:	mov    ds:0x55321238,eax
  41223b:	add    BYTE PTR [ebp-0x57005700],cl
  412241:	popf   
  412242:	add    BYTE PTR [ebx-0xff3301],cl
  412248:	or     esp,0xffffffda
  41224b:	imul   ebx,DWORD PTR [eax-0x50],0x8301
  412252:	adc    dl,bh
  412254:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412255:	xor    al,BYTE PTR [ebp-0x34]
  412258:	inc    DWORD PTR [ecx]
  41225a:	inc    ebp
  41225b:	dec    DWORD PTR [ebx+0x4feb0415]
  412261:	ins    DWORD PTR es:[edi],dx
  412262:	pop    ebp
  412263:	add    BYTE PTR [ebp-0x6cc02977],al
  412269:	mov    edx,0x44d0074
  41226e:	int3   
  41226f:	or     al,0x0
  412271:	add    BYTE PTR ds:0xcc092ed0,bl
  412277:	jmp    0x412204
  412279:	mov    ebx,DWORD PTR [ebp+0x48]
  41227c:	test   DWORD PTR [edi-0x33340000],ebx
  412282:	add    DWORD PTR [eax],eax
  412284:	mov    ecx,esp
  412286:	in     al,0x7a
  412288:	dec    esi
  412289:	xchg   ah,cl
  41228b:	add    DWORD PTR [ebx-0x52d48173],ecx
  412291:	fwait
  412292:	(bad)  
  412293:	xor    edi,edi
  412295:	lea    ecx,[ecx+eax*1]
  412298:	inc    DWORD PTR [eax]
  41229a:	das    
  41229b:	mov    bl,0xad
  41229d:	pop    ebp
  41229e:	push   ebp
  41229f:	call   0x6e4f232f
  4122a4:	push   es
  4122a5:	dec    esi
  4122a6:	add    esp,ecx
  4122a8:	add    BYTE PTR [eax+eax*1+0x45],dh
  4122ac:	int3   
  4122ad:	int3   
  4122ae:	in     al,0x62
  4122b0:	pop    esi
  4122b1:	test   DWORD PTR [eax],0x7ccc8533
  4122b7:	sbb    DWORD PTR [edi],eax
  4122b9:	xchg   edx,eax
  4122ba:	add    DWORD PTR [ecx],0xffffffff
  4122bd:	int3   
  4122be:	add    BYTE PTR [esp+eax*1],al
  4122c1:	adc    eax,0x37e7cf75
  4122c6:	int3   
  4122c7:	add    BYTE PTR [ebx+0x68a10575],cl
  4122cd:	daa    
  4122ce:	or     ah,cl
  4122d0:	add    BYTE PTR [ebx+0x8d8d56],cl
  4122d6:	sahf   
  4122d7:	push   ds
  4122d8:	mov    ch,0x9d
  4122da:	add    BYTE PTR [eax],al
  4122dc:	int3   
  4122dd:	add    BYTE PTR [ebp-0x33eb4bcd],ch
  4122e3:	add    eax,DWORD PTR [eax]
  4122e5:	add    eax,DWORD PTR [ecx]
  4122e7:	add    BYTE PTR [eax],dl
  4122e9:	add    edi,ebx
  4122eb:	inc    ecx
  4122ec:	or     DWORD PTR [eax+0x8],ebp
  4122ef:	push   eax
  4122f0:	push   eax
  4122f1:	shl    ah,0x72
  4122f4:	cmp    eax,0xff8b0400
  4122f9:	(bad)  
  4122fa:	dec    DWORD PTR [ebx-0x5f0fab00]
  412300:	stc    
  412301:	cmc    
  412302:	test   DWORD PTR [eax],eax
  412304:	in     al,dx
  412305:	add    bl,ah
  412307:	dec    edi
  412308:	or     al,0x4
  41230a:	int3   
  41230b:	inc    DWORD PTR [eax]
  41230d:	add    BYTE PTR [ebx+ecx*4],al
  412310:	add    BYTE PTR [ebp+0xc],bl
  412313:	aas    
  412314:	cld    
  412315:	mov    cl,0x4d
  412317:	xor    eax,DWORD PTR [eax]
  412319:	int3   
  41231a:	jno    0x4122b2
  41231c:	call   0x568b:0x838bff68
  412323:	add    BYTE PTR [ebp+0x0],cl
  412326:	mov    bh,0xf
  412328:	in     al,0x56
  41232a:	int3   
  41232b:	xor    ecx,esp
  41232d:	add    al,0xbd
  41232f:	popa   
  412330:	add    cl,ah
  412332:	add    BYTE PTR [eax],al
  412334:	(bad)  [edx+0x0]
  412337:	int3   
  412338:	add    DWORD PTR [ebx],esi
  41233a:	test   DWORD PTR [ebp-0x80],edi
  41233d:	aad    0xcc
  41233f:	rol    BYTE PTR [eax],0xc
  412342:	push   ebx
  412343:	pop    ebp
  412344:	fsub   DWORD PTR [edx+0x74]
  412347:	int3   
  412348:	rol    BYTE PTR [eax],0x0
  41234b:	ror    ah,0x8
  41234e:	cs ins DWORD PTR es:[edi],dx
  412350:	clc    
  412351:	pop    ebp
  412352:	add    BYTE PTR [ebp+0x0],bl
  412355:	mov    edx,DWORD PTR [eax-0x746285cb]
  41235b:	inc    DWORD PTR [eax+eax*1]
  41235e:	add    BYTE PTR [ebx+0x6d1a8500],cl
  412364:	dec    esp
  412365:	mov    BYTE PTR [ecx],al
  412367:	add    BYTE PTR [eax],al
  412369:	mov    edi,DWORD PTR [esp+edx*2-0x78]
  41236d:	call   0x108d:0x500001cc
  412374:	add    al,0x0
  412376:	sbb    dl,BYTE PTR [ebp-0x6e]
  412379:	push   ebp
  41237a:	add    BYTE PTR [ebp-0x20],cl
  41237d:	lea    esp,[ecx]
  41237f:	and    ebp,edi
  412381:	(bad)  
  412382:	int3   
  412383:	inc    esi
  412384:	add    al,ch
  412386:	int3   
  412387:	add    DWORD PTR [ebp-0x165f6875],eax
  41238d:	mov    ebx,0x18b0008
  412392:	push   esi
  412393:	call   0xde0d5e17
  412398:	or     esp,0x1
  41239b:	add    BYTE PTR [eax],al
  41239d:	adc    eax,0xd751a553
  4123a2:	add    BYTE PTR [ebx-0x60100000],cl
  4123a8:	imul   DWORD PTR [edi-0x34]
  4123ab:	mov    ecx,DWORD PTR [ebx-0x748a7500]
  4123b1:	minps  xmm1,xmm6
  4123b4:	mov    al,0xa1
  4123b6:	add    BYTE PTR [eax+eax*1],cl
  4123b9:	inc    ebp
  4123ba:	mov    ds:0x8bc142ff,al
  4123bf:	int3   
  4123c0:	inc    DWORD PTR [eax]
  4123c2:	xor    DWORD PTR [eax+eax*1+0x0],0xffffffb6
  4123c7:	lahf   
  4123c8:	aad    0x51
  4123ca:	or     ch,bl
  4123cc:	int3   
  4123cd:	inc    esi
  4123ce:	lds    edx,FWORD PTR [edi]
  4123d0:	dec    eax
  4123d1:	sbb    eax,0x74ccff00
  4123d6:	inc    DWORD PTR [eax]
  4123d8:	rol    BYTE PTR [ecx],0xd6
  4123db:	loop   0x4123c3
  4123dd:	push   0xffffffcc
  4123df:	or     DWORD PTR [edi],0x0
  4123e2:	fcmovb st,st(6)
  4123e4:	xor    al,0xc8
  4123e6:	add    ecx,DWORD PTR [ebx-0xaa8c00]
  4123ec:	add    BYTE PTR [eax],cl
  4123ee:	push   ebp
  4123ef:	add    dl,BYTE PTR [ebp+eiz*8+0x6aeb8b00]
  4123f6:	push   ds
  4123f7:	cmp    eax,0xcc15b811
  4123fc:	je     0x4123fd
  4123fe:	add    BYTE PTR [ebp-0x15],bl
  412401:	add    BYTE PTR [edi-0x9],cl
  412404:	or     BYTE PTR [ebx],0x45
  412407:	mov    DWORD PTR [ecx-0x707faf01],ecx
  41240d:	rol    BYTE PTR [eax],cl
  41240f:	inc    eax
  412411:	add    DWORD PTR [ebx-0x4747675],ecx
  412417:	in     eax,dx
  412418:	ins    BYTE PTR es:[edi],dx
  412419:	stc    
  41241a:	add    BYTE PTR [ebp-0x513c7634],al
  412420:	adc    BYTE PTR [esi],dh
  412422:	je     0x412439
  412424:	(bad)  
  412425:	fld    QWORD PTR [eax]
  412427:	and    DWORD PTR [eax],0x8b15e77a
  41242d:	call   0x8c40a73a
  412432:	add    DWORD PTR [ebp+0x4b0fc19],ecx
  412438:	inc    DWORD PTR [eax]
  41243a:	inc    esi
  41243b:	push   cs
  41243c:	aad    0xe
  41243e:	jbe    0x412440
  412440:	int3   
  412441:	add    BYTE PTR [eax],al
  412443:	mov    eax,DWORD PTR [esi+0x46]
  412446:	or     BYTE PTR [edi+0xbd1d11],ch
  41244c:	test   DWORD PTR [eax],eax
  41244e:	test   DWORD PTR [ebx],ebp
  412450:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412451:	shl    DWORD PTR [ebp+0xf0000ff],1
  412457:	int3   
  412458:	inc    DWORD PTR [ecx]
  41245a:	add    dh,cl
  41245c:	add    eax,0x8b00381d
  412461:	inc    esi
  412462:	add    BYTE PTR [ebx+0x10fadb97],al
  412468:	push   eax
  412469:	push   esi
  41246a:	add    ah,cl
  41246c:	add    BYTE PTR [ebp+0x683abdcc],cl
  412472:	loopne 0x412475
  412474:	add    BYTE PTR [edx-0x34],ch
  412477:	jno    0x412490
  412479:	test   al,0x64
  41247b:	int3   
  41247c:	add    BYTE PTR [eax],dl
  41247e:	add    BYTE PTR [ebp-0x2fffff34],al
  412484:	mov    ebp,0x8b8ba653
  412489:	jnp    0x3bcdab3f
  41248f:	jmp    0x41246e
  412491:	add    BYTE PTR [eax],al
  412493:	int3   
  412494:	mov    edi,edi
  412496:	or     cl,dl
  412498:	sahf   
  412499:	and    al,0xb7
  41249b:	test   DWORD PTR [eax],eax
  41249d:	mov    DWORD PTR [ebp-0x4ccfb12],eax
  4124a3:	add    BYTE PTR [eax],al
  4124a5:	mov    DWORD PTR [ebx-0x7474ffff],ecx
  4124ab:	retf   0x3bc9
  4124ae:	(bad)  
  4124af:	add    al,al
  4124b1:	add    BYTE PTR [ecx],al
  4124b3:	imul   ebp,DWORD PTR [edi-0xff51e8],0x3cc01cc
  4124bd:	add    BYTE PTR [ebx+0x360fa7b8],cl
  4124c3:	rol    BYTE PTR [ecx+ecx*4],0x1
  4124c7:	and    eax,0xe002c687
  4124cc:	test   DWORD PTR [edi+edi*8+0x10],esi
  4124d0:	loopne 0x41249e
  4124d2:	xor    ebx,DWORD PTR [ebx]
  4124d4:	cmp    dh,BYTE PTR [esi+ecx*8]
  4124d7:	mov    edi,edi
  4124d9:	inc    ebp
  4124da:	mov    ebx,edi
  4124dc:	sbb    DWORD PTR [edi+0x450074f3],eax
  4124e2:	or     BYTE PTR [eax],al
  4124e4:	(bad)  
  4124e5:	(bad)  
  4124e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124e8:	cli    
  4124e9:	imul   ebp,DWORD PTR [eax+0x45e8748b],0xecaaeb6
  4124f3:	add    al,0x5d
  4124f5:	loopne 0x4124c3
  4124f7:	add    BYTE PTR [ecx-0x114000b3],cl
  4124fd:	outs   dx,DWORD PTR ds:[esi]
  4124fe:	scas   al,BYTE PTR es:[edi]
  4124ff:	mov    edx,DWORD PTR [eax-0x75]
  412502:	mov    edx,ecx
  412504:	and    BYTE PTR [ebx],ch
  412506:	and    bh,bh
  412508:	add    ah,cl
  41250a:	add    al,0x74
  41250c:	add    BYTE PTR [ebx-0x270a1775],cl
  412512:	or     al,0xcc
  412514:	rol    BYTE PTR [eax],0x1
  412517:	(bad)  
  412519:	xor    al,BYTE PTR [edi]
  41251b:	dec    ebp
  41251c:	add    BYTE PTR [esp+eax*1-0x77],dh
  412520:	add    BYTE PTR [eax],al
  412522:	add    al,dh
  412524:	aam    0x24
  412526:	leave  
  412527:	int3   
  412528:	add    BYTE PTR [eax],al
  41252a:	add    bh,ch
  41252c:	xchg   ebx,eax
  41252d:	pop    edi
  41252e:	scas   eax,DWORD PTR es:[edi]
  41252f:	mov    edi,edi
  412531:	add    DWORD PTR [esi-0x7d],eax
  412534:	mov    ecx,DWORD PTR [edi]
  412536:	dec    esi
  412538:	loopne 0x412583
  41253a:	imul   edx,DWORD PTR [ebp+0x6a],0xffffffff
  41253e:	mov    esp,DWORD PTR [edi]
  412540:	clc    
  412541:	and    cl,BYTE PTR [esi+0x1]
  412544:	adc    eax,0xcc8b5683
  412549:	mov    ecx,esp
  41254b:	fiadd  WORD PTR [ecx+eiz*2]
  41254e:	ja     0x412550
  412550:	inc    DWORD PTR [ebp+0x17f7ae00]
  412556:	push   esi
  412557:	int3   
  412558:	push   DWORD PTR [ebx+ecx*4+0x45]
  41255c:	mov    eax,DWORD PTR [ebx]
  41255e:	add    DWORD PTR [edi-0x72a6115a],ecx
  412564:	mov    esp,eax
  412566:	add    ebp,esi
  412568:	icebp  
  412569:	adc    al,0xdb
  41256b:	or     al,0x89
  41256d:	add    BYTE PTR [esp+eax*1],cl
  412570:	mov    ecx,DWORD PTR [ebx-0x1ace2839]
  412576:	pop    ebx
  412577:	test   DWORD PTR [ebx],esi
  412579:	test   DWORD PTR [ebp-0x514afc3b],eax
  41257f:	inc    esi
  412580:	je     0x412582
  412582:	(bad)  
  412583:	(bad)  
  412584:	dec    DWORD PTR [eax]
  412586:	push   esi
  412587:	mov    edx,0xff8f4ab8
  41258c:	add    ah,cl
  41258e:	adc    eax,0x6961960b
  412593:	je     0x4125c8
  412595:	add    ah,cl
  412597:	add    BYTE PTR [ebx],al
  412599:	add    BYTE PTR [eax],al
  41259b:	mov    eax,0xdb854b
  4125a0:	dec    DWORD PTR [eax]
  4125a2:	add    BYTE PTR [ebx],al
  4125a4:	ret    0x4862
  4125a7:	jne    0x412575
  4125a9:	mov    ecx,DWORD PTR [ebx+0x4cc005d]
  4125af:	sub    DWORD PTR [ebx],ebx
  4125b1:	daa    
  4125b2:	pop    es
  4125b3:	inc    esi
  4125b4:	loopne 0x412582
  4125b6:	add    BYTE PTR [eax+0x1ec38ad],ah
  4125bc:	adc    BYTE PTR [eax],al
  4125be:	xor    ebp,esp
  4125c0:	inc    DWORD PTR [eax]
  4125c2:	(bad)  
  4125c3:	jge    0x41259e
  4125c5:	add    dh,BYTE PTR [ebp+0x0]
  4125c8:	adc    BYTE PTR [ebx+0x15302bcc],cl
  4125ce:	(bad)  [eax]
  4125d0:	pop    ebp
  4125d1:	adc    eax,0x8b746a00
  4125d6:	adc    BYTE PTR [eax+0x34b947b],ah
  4125dc:	push   eax
  4125dd:	add    ah,cl
  4125df:	cmp    eax,0x89bbebad
  4125e4:	int3   
  4125e5:	add    al,0x8b
  4125e7:	dec    esp
  4125e9:	add    ch,bl
  4125eb:	aam    0xfc
  4125ed:	xchg   DWORD PTR [ebx-0x33ff7500],ebp
  4125f3:	in     eax,dx
  4125f4:	inc    esi
  4125f5:	jnp    0x4125b0
  4125f7:	or     al,0xec
  4125f9:	add    al,0x83
  4125fb:	pop    ebp
  4125fc:	add    bh,bh
  4125fe:	add    BYTE PTR [edi],bh
  412600:	pushaw 
  412602:	into   
  412603:	int3   
  412604:	rol    BYTE PTR [eax],0x8b
  412607:	add    DWORD PTR [ecx-0x7cfe466a],edx
  41260d:	in     al,dx
  41260e:	dec    ebp
  41260f:	inc    DWORD PTR [eax]
  412611:	add    BYTE PTR [ebp-0x46],dh
  412614:	adc    ecx,ecx
  412616:	jg     0x41266e
  412618:	call   DWORD PTR [esi+0x8]
  41261b:	ds xchg ebp,eax
  41261d:	into   
  41261e:	test   eax,0x5003ff00
  412623:	loopne 0x4125f1
  412625:	adc    BYTE PTR [ecx-0x2b1e7045],cl
  41262b:	add    BYTE PTR [ebx],dh
  41262d:	test   DWORD PTR [esi+0x58],eax
  412630:	mov    eax,0x33f97c
  412635:	push   0x0
  412637:	add    al,0x0
  412639:	or     al,0x0
  41263b:	call   0x0:0x20357a
  412642:	mov    ebp,DWORD PTR [eax-0x381f6843]
  412648:	rcr    ch,0x0
  41264b:	mov    eax,DWORD PTR [eax]
  41264d:	add    BYTE PTR [ecx+esi*2+0x57],dh
  412651:	cmp    al,0xaf
  412653:	mov    eax,DWORD PTR [eax]
  412655:	add    BYTE PTR [eax],cl
  412657:	jnp    0x41269d
  412659:	and    al,0xdb
  41265b:	je     0x4126a3
  41265d:	or     DWORD PTR [ebx+0x1040445],0x1
  412664:	idiv   DWORD PTR [edi+0x45cc00ad]
  41266a:	xor    DWORD PTR ds:0xcc6b8a7d,0xffffff8d
  412671:	or     DWORD PTR [ebx-0x33fb0075],0xffffffce
  412678:	clc    
  412679:	retf   0xc07f
  41267c:	dec    esp
  41267e:	int3   
  41267f:	push   esi
  412680:	call   0x1:0x4ff15a2
  412687:	add    ah,cl
  412689:	rol    BYTE PTR [ebp+0x23e16a55],0x50
  412690:	add    BYTE PTR [eax+eax*1],cl
  412693:	mov    ebx,0xf6dfa8
  412698:	int3   
  412699:	or     BYTE PTR [eax],al
  41269b:	je     0x41269d
  41269d:	add    ah,cl
  41269f:	push   cs
  4126a0:	jecxz  0x41269e
  4126a2:	adc    cl,BYTE PTR [ebx-0x5f748b40]
  4126a8:	add    ah,dl
  4126aa:	mov    al,ds:0xccff855d
  4126af:	add    BYTE PTR [eax],al
  4126b1:	mov    DWORD PTR [ecx],eax
  4126b3:	cmp    eax,DWORD PTR [edx]
  4126b5:	add    DWORD PTR [edx],ecx
  4126b7:	int3   
  4126b8:	add    BYTE PTR [ecx],al
  4126ba:	inc    ebp
  4126bb:	pop    ecx
  4126bc:	xchg   DWORD PTR [eax+eiz*2-0x40],ebp
  4126c0:	call   0xb63ca5
  4126c5:	inc    DWORD PTR [ecx]
  4126c7:	xchg   ecx,eax
  4126c8:	retf   0xf644
  4126cb:	add    ecx,DWORD PTR [ebx+0x66f48b85]
  4126d1:	mov    ecx,0xcc33ff60
  4126d6:	add    ah,cl
  4126d8:	mov    eax,ebp
  4126da:	call   0xc7599498
  4126df:	mov    DWORD PTR [ebx+0x66158bdd],ecx
  4126e5:	or     BYTE PTR [esi-0x8b3301],0x8
  4126ec:	add    BYTE PTR [eax],al
  4126ee:	loopne 0x412692
  4126f0:	out    0x79,eax
  4126f2:	xor    ebp,esp
  4126f4:	mov    eax,DWORD PTR [ecx]
  4126f6:	or     BYTE PTR [ecx],dh
  4126f8:	ins    BYTE PTR es:[edi],dx
  4126f9:	jno    0x412743
  4126fb:	int3   
  4126fc:	add    BYTE PTR [ecx+ecx*4+0x4],dh
  412700:	add    ah,cl
  412702:	add    ch,bl
  412704:	test   ch,cl
  412706:	scas   al,BYTE PTR es:[edi]
  412707:	or     al,0x85
  412709:	or     BYTE PTR [eax],al
  41270b:	jmp    0x456c7baa
  412710:	or     al,0x75
  412712:	add    esp,ecx
  412714:	mov    eax,DWORD PTR [eax]
  412716:	add    ch,ah
  412718:	xor    DWORD PTR [ebx+0x6e],ebp
  41271b:	inc    DWORD PTR [ebp-0x2dea0000]
  412721:	pop    esp
  412722:	(bad)  
  412723:	in     al,dx
  412724:	add    ecx,DWORD PTR [ebx-0x33ff7434]
  41272a:	add    DWORD PTR [ebx+0x8718223],ebp
  412730:	fnsave [ebp+0x0]
  412733:	and    esp,edx
  412735:	ins    BYTE PTR es:[edi],dx
  412736:	rcr    ebp,0xc7
  412739:	add    BYTE PTR [esp+ecx*8+0x0],dh
  41273d:	push   DWORD PTR [ebp+0x21]
  412740:	daa    
  412741:	sub    esi,DWORD PTR [esp+ecx*8]
  412744:	or     bh,bh
  412746:	fucom  st(5)
  412748:	sbb    al,BYTE PTR [ebx]
  41274a:	les    ebx,FWORD PTR [ebp+0x45]
  41274d:	mov    edx,DWORD PTR [ebp+0x0]
  412750:	xor    DWORD PTR [ebx],0x0
  412753:	xor    edx,DWORD PTR [edi-0x61c8]
  412759:	or     ch,bl
  41275b:	xchg   DWORD PTR [ebx-0x74ff272d],ebp
  412761:	mov    ecx,esp
  412763:	add    BYTE PTR [edi],cl
  412765:	call   0x47c9f847
  41276a:	aad    0x5d
  41276c:	add    al,0x8b
  41276e:	shl    BYTE PTR [edx+0x45ac5ee5],0x46
  412775:	inc    ebp
  412776:	adc    eax,0x338900
  41277b:	and    BYTE PTR [ebx-0x33a2ca3a],bh
  412781:	mov    esi,DWORD PTR [edi+edi*4-0x25]
  412785:	sar    BYTE PTR [ebp-0x1],0x4
  412789:	je     0x412777
  41278b:	add    ah,cl
  41278d:	inc    esi
  41278e:	add    DWORD PTR [ebx+0x7],esp
  412791:	pop    esp
  412792:	ins    BYTE PTR es:[edi],dx
  412793:	int3   
  412794:	adc    BYTE PTR [ebx+0x2d10c3cc],cl
  41279a:	into   
  41279b:	retf   
  41279c:	mov    ecx,esp
  41279e:	mov    eax,DWORD PTR [ebp+0x31]
  4127a1:	in     eax,0xce
  4127a3:	out    0x0,eax
  4127a5:	or     al,0x85
  4127a7:	mov    eax,DWORD PTR [ecx]
  4127a9:	add    BYTE PTR [eax],dl
  4127ab:	push   esi
  4127ac:	sbb    al,0x1
  4127ae:	mov    ecx,0x455583a0
  4127b3:	inc    esi
  4127b4:	std    
  4127b5:	scas   al,BYTE PTR es:[edi]
  4127b6:	xchg   edi,eax
  4127b7:	ud0    eax,DWORD PTR [ebx+0x338bc75d]
  4127be:	inc    DWORD PTR [eax]
  4127c0:	in     eax,0xc4
  4127c2:	xchg   esi,eax
  4127c3:	dec    ebx
  4127c4:	je     0x41283b
  4127c6:	inc    ebp
  4127c7:	add    dh,ah
  4127c9:	push   0x6a8ba8f4
  4127ce:	test   DWORD PTR [eax],eax
  4127d0:	adc    BYTE PTR [ecx],al
  4127d2:	test   DWORD PTR [eax],eax
  4127d4:	ss mov dh,0xac
  4127d7:	sbb    BYTE PTR [ebx-0x2bff8b75],al
  4127dd:	std    
  4127de:	test   BYTE PTR [ebx+ecx*4-0x7a3f8a34],dl
  4127e5:	or     BYTE PTR [ecx+0x1465e90f],cl
  4127eb:	ror    DWORD PTR [ebx+0x21898b0c],cl
  4127f1:	add    al,0xeb
  4127f3:	mov    ebx,0x8ccff
  4127f8:	adc    BYTE PTR [ebp-0x7b],dl
  4127fb:	adc    eax,0xd0f9f0c6
  412800:	mov    eax,DWORD PTR [eax]
  412802:	in     al,dx
  412803:	or     BYTE PTR [ecx+0x7d],al
  412806:	cwde   
  412807:	test   BYTE PTR [eax],0x10
  41280a:	mov    edi,edi
  41280c:	mov    edx,DWORD PTR [ebp+0x0]
  41280f:	or     al,cl
  412811:	cbw    
  412813:	loopne 0x4127a0
  412815:	add    BYTE PTR [ecx],al
  412817:	push   DWORD PTR [ecx+0xcd9e12]
  41281d:	mov    ecx,esp
  41281f:	jne    0x4127ed
  412821:	add    bh,bh
  412823:	mov    ebp,DWORD PTR [ebx]
  412825:	outs   dx,BYTE PTR ds:[esi]
  412826:	rcl    DWORD PTR [edi],1
  412828:	xor    eax,DWORD PTR [ebp+0x0]
  41282b:	loopne 0x4127e1
  41282d:	sbb    DWORD PTR [esi+0x5d94],esp
  412833:	jne    0x412801
  412835:	add    BYTE PTR [ecx],al
  412837:	add    ah,bl
  412839:	gs test al,0xc8
  41283c:	add    BYTE PTR [ebx+0x65e45650],cl
  412842:	fmul   st,st(0)
  412844:	inc    ebp
  412845:	add    al,0xe8
  412847:	add    BYTE PTR [eax+eax*1-0x75],dh
  41284b:	je     0x412809
  41284d:	jo     0x4127fb
  41284f:	fld    DWORD PTR [eax]
  412851:	add    BYTE PTR [eax],al
  412853:	adc    eax,0xd3a80ad0
  412858:	add    DWORD PTR [esi+0xf],eax
  41285b:	xor    edi,edi
  41285d:	add    ah,cl
  41285f:	add    dl,ah
  412861:	jne    0x41281b
  412863:	aaa    
  412864:	inc    DWORD PTR [eax]
  412866:	(bad)  
  412867:	jmp    DWORD PTR ds:0xccf47391
  41286d:	inc    DWORD PTR [edx+ebp*2]
  412870:	inc    esi
  412871:	push   eax
  412872:	add    BYTE PTR [ebp+0x1c],al
  412875:	xor    esp,0x8300040f
  41287b:	add    DWORD PTR [esp+edx*8-0x74aab831],esi
  412882:	mov    ebp,DWORD PTR [edx+0x50]
  412885:	add    DWORD PTR [ebp+0x3],0x30
  412889:	ins    BYTE PTR es:[edi],dx
  41288a:	hlt    
  41288b:	clc    
  41288c:	add    BYTE PTR [ebp+0x24d4cc00],al
  412892:	adc    eax,0x8d
  412897:	pop    ebp
  412898:	in     al,dx
  412899:	add    BYTE PTR [eax],cl
  41289b:	mov    ebx,DWORD PTR [eax]
  41289d:	jbe    0x412868
  41289f:	bound  ecx,QWORD PTR [eax]
  4128a1:	add    BYTE PTR [eax],al
  4128a3:	mov    ebp,DWORD PTR [ecx-0xb]
  4128a6:	scas   al,BYTE PTR es:[edi]
  4128a7:	add    ecx,DWORD PTR [eax]
  4128a9:	push   ebp
  4128aa:	or     BYTE PTR [edi+edi*8],al
  4128ad:	je     0x4128af
  4128af:	add    BYTE PTR [ecx+edi*8],ah
  4128b2:	adc    DWORD PTR [ecx+eax*1+0x56],edi
  4128b6:	add    ch,bl
  4128b8:	push   esp
  4128b9:	add    BYTE PTR gs:[esp+esi*2-0x34],dh
  4128be:	lea    ecx,[ebx-0x3fafaf8b]
  4128c4:	lock sub al,0x90
  4128c8:	mov    eax,DWORD PTR [eax]
  4128ca:	je     0x412857
  4128cc:	xor    al,0xed
  4128ce:	js     0x412944
  4128d0:	add    BYTE PTR [ebx-0x7a330034],al
  4128d6:	int3   
  4128d7:	jmp    0x41294e
  4128d9:	aaa    
  4128da:	fcmovnbe st,st(4)
  4128dc:	push   0xffffffff
  4128de:	mov    DWORD PTR [eax],eax
  4128e0:	and    ebp,ebp
  4128e2:	add    BYTE PTR [ebx+0x46],dl
  4128e5:	int3   
  4128e6:	add    BYTE PTR [ebp-0x77],al
  4128e9:	inc    ebp
  4128ea:	or     al,0x8b
  4128ec:	inc    ebp
  4128ed:	sbb    al,0xde
  4128ef:	iret   
  4128f0:	inc    DWORD PTR [eax]
  4128f2:	add    BYTE PTR [ebp+0x34],dl
  4128f5:	jb     0x412884
  4128f7:	ret    
  4128f8:	int3   
  4128f9:	mov    ebx,DWORD PTR [ebp-0x1]
  4128fc:	add    bh,bh
  4128fe:	int3   
  4128ff:	inc    ebp
  412900:	or     al,BYTE PTR [ebp-0x33f7edd3]
  412906:	int3   
  412907:	or     ch,al
  412909:	pusha  
  41290a:	or     eax,0xcc897414
  41290f:	inc    DWORD PTR [eax]
  412911:	mov    edi,edi
  412913:	add    BYTE PTR [ecx+eax*2-0x747ce58f],bh
  41291a:	int3   
  41291b:	add    esp,eax
  41291d:	popf   
  41291e:	and    BYTE PTR [ecx+0x0],dl
  412921:	push   eax
  412922:	add    DWORD PTR ds:0x5d564589,edx
  412928:	cdq    
  412929:	(bad)  
  41292a:	xchg   ecx,eax
  41292b:	pop    DWORD PTR [ecx]
  41292d:	je     0x41291b
  41292f:	mov    ebx,esp
  412931:	icebp  
  412932:	adc    DWORD PTR [ebx],eax
  412934:	add    BYTE PTR [eax],al
  412936:	int3   
  412937:	add    BYTE PTR [eax],al
  412939:	push   ebp
  41293a:	add    BYTE PTR [ebp-0x14],cl
  41293d:	sahf   
  41293e:	cwde   
  41293f:	or     BYTE PTR [ecx],al
  412941:	int3   
  412942:	add    BYTE PTR [eax],al
  412944:	mov    ecx,0xd655f6
  412949:	xor    ecx,DWORD PTR [ecx+0x1005645]
  41294f:	add    ah,ch
  412951:	call   0x3ca782a
  412956:	push   ebp
  412957:	mov    DWORD PTR [eax],0x85e30480
  41295d:	dec    DWORD PTR [ebx-0x33330075]
  412963:	add    al,bl
  412965:	jg     0x41293b
  412967:	loopne 0x412929
  412969:	int3   
  41296a:	mov    eax,DWORD PTR [eax]
  41296c:	push   eax
  41296d:	scas   eax,DWORD PTR es:[edi]
  41296e:	mov    esi,0x10000f3
  412973:	sar    bh,0x1
  412976:	add    edi,edi
  412978:	mov    ah,0xe4
  41297a:	jge    0x412999
  41297c:	add    BYTE PTR [eax],al
  41297e:	add    bh,bh
  412980:	sbb    al,0x3f
  412982:	shl    BYTE PTR [ebx+0x7500cc8b],0x0
  412989:	add    BYTE PTR [ebp+0x2c870445],cl
  41298f:	add    cl,BYTE PTR [ebx+0x28dd8900]
  412995:	in     eax,dx
  412996:	loope  0x4129eb
  412998:	add    BYTE PTR [ebx-0x17b9ba00],cl
  41299e:	add    DWORD PTR [ebx-0xc6a0842],eax
  4129a4:	add    BYTE PTR [ecx],al
  4129a6:	loopne 0x412933
  4129a8:	mov    eax,0x8bf69d9e
  4129ad:	int3   
  4129ae:	inc    ebp
  4129af:	add    BYTE PTR [eax],al
  4129b1:	mov    eax,DWORD PTR [eax]
  4129b3:	add    ch,ch
  4129b5:	popa   
  4129b6:	int3   
  4129b7:	out    0xff,al
  4129b9:	int3   
  4129ba:	test   DWORD PTR [esp+esi*4-0x55],esi
  4129be:	popf   
  4129bf:	(bad)  
  4129c0:	mov    ecx,DWORD PTR [ebp-0xff95bb]
  4129c6:	int3   
  4129c7:	add    BYTE PTR [esp+ebp*8-0x7abaa550],ch
  4129ce:	inc    DWORD PTR [eax]
  4129d0:	test   al,0x9f
  4129d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129d3:	jecxz  0x4129d5
  4129d5:	or     al,0x0
  4129d7:	mov    ebx,ebp
  4129d9:	mov    edi,edi
  4129db:	int3   
  4129dc:	repz inc BYTE PTR [esp+eiz*2]
  4129e0:	add    BYTE PTR [ebp+0x0],dl
  4129e3:	pop    ebp
  4129e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129e5:	loop   0x4129fc
  4129e7:	call   0x446:0x8b757500
  4129ee:	add    BYTE PTR [ebx-0x3c606317],cl
  4129f4:	adc    BYTE PTR [eax],al
  4129f6:	add    DWORD PTR [ebp-0x1e],eax
  4129f9:	xchg   esp,eax
  4129fa:	mov    eax,0x2f
  4129ff:	add    BYTE PTR [ebp+0x3c008b75],cl
  412a05:	clc    
  412a06:	jnp    0x412a5c
  412a08:	mov    DWORD PTR [ebp-0x8f37a39],eax
  412a0e:	mov    esp,0xc00ccda
  412a13:	adc    eax,0xec560074
  412a18:	lods   al,BYTE PTR ds:[esi]
  412a19:	loope  0x4129de
  412a1b:	sbb    eax,DWORD PTR [eax]
  412a1d:	mov    ecx,DWORD PTR [ebx-0xe2e9501]
  412a23:	rol    edi,0x8b
  412a26:	inc    ebp
  412a27:	add    BYTE PTR [eax],al
  412a29:	add    DWORD PTR [ebx+0x2dd4c98b],ecx
  412a2f:	add    BYTE PTR [ebx+0x10ff8b50],cl
  412a35:	add    BYTE PTR [ecx-0x3f7aff1f],ah
  412a3b:	mov    ecx,DWORD PTR [ebx-0x23ffff77]
  412a41:	loop   0x4129e3
  412a43:	push   eax
  412a44:	je     0x412a46
  412a46:	fnsave [edx+edi*4-0x57]
  412a4a:	pop    ebp
  412a4b:	retf   
  412a4c:	je     0x412a4e
  412a4e:	mov    esp,ecx
  412a50:	mov    DWORD PTR [eax],0x9f2c00cc
  412a56:	cwde   
  412a57:	sub    BYTE PTR [eax+eax*1+0xc],dh
  412a5b:	dec    eax
  412a5d:	jo     0x412a09
  412a5f:	push   ss
  412a60:	add    BYTE PTR [eax],al
  412a62:	int3   
  412a63:	add    DWORD PTR [ecx*4-0x3f1f7475],ecx
  412a6a:	hlt    
  412a6b:	dec    eax
  412a6c:	lea    eax,[esi-0x34]
  412a6f:	mov    esp,DWORD PTR [edx+ebp*1]
  412a72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a73:	fadd   QWORD PTR [eax]
  412a75:	adc    eax,0x568b45cc
  412a7a:	push   eax
  412a7b:	test   DWORD PTR [edx+esi*2-0x74aa1828],edi
  412a82:	jge    0x9ed79770
  412a88:	xadd   bh,bh
  412a8b:	or     BYTE PTR [ebx-0x65ffb934],cl
  412a91:	scas   al,BYTE PTR es:[edi]
  412a92:	stos   BYTE PTR es:[edi],al
  412a93:	mov    dl,0xff
  412a95:	add    al,0x8d
  412a97:	add    BYTE PTR [edi+0x157b9957],dl
  412a9d:	add    DWORD PTR [ebp+0x75],esi
  412aa0:	add    BYTE PTR [eax+eax*1-0x73],dh
  412aa4:	adc    dl,ah
  412aa6:	sub    al,0xc3
  412aa8:	mov    esp,eax
  412aaa:	push   eax
  412aab:	(bad)  
  412aac:	jnp    0x412b2b
  412aae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412aaf:	inc    ebx
  412ab0:	add    ah,cl
  412ab2:	add    DWORD PTR [ecx],eax
  412ab4:	rol    BYTE PTR [eax],0x4
  412ab7:	or     ah,al
  412ab9:	jnp    0x412a73
  412abb:	call   0xebcc2b1d
  412ac0:	mov    ah,0x14
  412ac2:	fmulp  st(3),st
  412ac4:	mov    esp,eax
  412ac6:	je     0x412a53
  412ac8:	or     ah,cl
  412aca:	mov    DWORD PTR [eax],edx
  412acc:	mov    ebp,0xd39432
  412ad1:	inc    esi
  412ad2:	add    DWORD PTR [ecx+0x60b3a568],ecx
  412ad8:	add    ah,cl
  412ada:	test   DWORD PTR [eax],eax
  412adc:	mov    eax,DWORD PTR [eax]
  412ade:	call   0xd6c9d730
  412ae3:	xchg   DWORD PTR [eax+eax*8],eax
  412ae6:	test   esp,ecx
  412ae8:	in     al,dx
  412ae9:	nop
  412aea:	sbb    eax,0xc77446e4
  412aef:	mov    DWORD PTR [eax],eax
  412af1:	int3   
  412af2:	int3   
  412af3:	mov    esi,eax
  412af5:	jbe    0x412a9f
  412af7:	daa    
  412af8:	mov    eax,DWORD PTR [eax]
  412afa:	dec    DWORD PTR [eax]
  412afc:	mov    ebx,0x11a1180
  412b01:	mov    eax,DWORD PTR [ecx]
  412b03:	dec    DWORD PTR [ebx+0x45ffcc]
  412b09:	(bad)  
  412b0a:	mov    ds:0xcccccceb,al
  412b0f:	add    DWORD PTR [ecx-0x2a],esi
  412b12:	add    al,0x90
  412b14:	add    DWORD PTR [ebx+0x4500cc8b],ecx
  412b1a:	adc    al,al
  412b1c:	enter  0x289f,0x6
  412b20:	add    DWORD PTR [ebp+0x5d],edx
  412b23:	in     al,dx
  412b24:	adc    BYTE PTR ds:0x8b749e11,ch
  412b2a:	dec    DWORD PTR [ebx-0x33ff00ba]
  412b30:	leave  
  412b31:	mov    BYTE PTR [ebp+0xc898b6b],ch
  412b37:	add    DWORD PTR [ecx-0x57],eax
  412b3a:	aam    0x2f
  412b3c:	fld    QWORD PTR [eax+edx*1]
  412b3f:	add    DWORD PTR [ebp+0x1],edx
  412b42:	add    bh,bh
  412b44:	ret    
  412b45:	test   eax,0x5bf7a7
  412b4a:	pop    ebp
  412b4b:	add    edi,edi
  412b4d:	xchg   edx,eax
  412b4e:	in     eax,0xd2
  412b50:	xor    al,BYTE PTR [ecx]
  412b52:	push   DWORD PTR [eax+ecx*1-0x7d]
  412b56:	int3   
  412b57:	add    al,0x85
  412b59:	fsub   DWORD PTR [esi+0x17453aa]
  412b5f:	int3   
  412b60:	add    BYTE PTR [esi+0x6f],ch
  412b63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b64:	jbe    0x412af1
  412b66:	or     esp,0x1
  412b69:	shr    BYTE PTR [edx-0x34],0x8b
  412b6d:	fnstenv [eax-0x2c]
  412b70:	test   al,0x8b
  412b73:	add    ah,cl
  412b75:	jae    0x412b43
  412b77:	and    al,0x4e
  412b79:	mov    eax,DWORD PTR [ebx+0x1dd8501]
  412b7f:	je     0x412bb4
  412b81:	inc    ebp
  412b82:	int3   
  412b83:	lods   eax,DWORD PTR ds:[esi]
  412b84:	adc    esp,ecx
  412b86:	mov    eax,DWORD PTR [eax]
  412b88:	push   ebp
  412b89:	fcmovnu st,st(3)
  412b8b:	jnp    0x412b90
  412b8d:	dec    DWORD PTR [ebx-0x3f3333ff]
  412b93:	int3   
  412b94:	(bad)  
  412b95:	jns    0x412b74
  412b97:	sbb    eax,0xeb8b4513
  412b9c:	add    BYTE PTR [ebp-0x7d],cl
  412b9f:	sbb    ebp,DWORD PTR [ebx-0x74fffd00]
  412ba5:	add    ah,cl
  412ba7:	mov    eax,DWORD PTR [ebp-0x54e82e1b]
  412bad:	add    BYTE PTR [edx-0x77],ch
  412bb0:	or     bh,ah
  412bb2:	fwait
  412bb3:	dec    ebx
  412bb4:	das    
  412bb5:	add    al,al
  412bb7:	mov    eax,DWORD PTR [esi-0x1]
  412bba:	add    BYTE PTR [eax],al
  412bbc:	inc    ebp
  412bbd:	gs in  eax,0x79
  412bc0:	adc    cl,BYTE PTR [ebp+0x4389c745]
  412bc6:	jecxz  0x412ba2
  412bc8:	data16 add BYTE PTR [ebp-0x75],al
  412bcc:	fnsave [ebx]
  412bce:	int3   
  412bcf:	add    BYTE PTR [eax],al
  412bd1:	push   cs
  412bd2:	mov    ebx,0xb3b6
  412bd7:	lea    ecx,[edi]
  412bd9:	bnd jle 0x412c06
  412bdc:	data16 add BYTE PTR [ebx+0xfec04],cl
  412be3:	int3   
  412be4:	push   eax
  412be5:	std    
  412be6:	mov    DWORD PTR [esi],edi
  412be8:	push   ebp
  412be9:	int3   
  412bea:	adc    eax,0xdb5e00ff
  412bef:	mov    dh,0x94
  412bf1:	int3   
  412bf2:	adc    BYTE PTR [esp+ecx*8],al
  412bf5:	jmp    0x412b82
  412bf7:	push   ebp
  412bf8:	mov    edi,DWORD PTR [edx-0x14edf3b0]
  412bfe:	mov    eax,DWORD PTR [ecx]
  412c00:	add    BYTE PTR [edi+0x4578dec2],ah
  412c06:	int3   
  412c07:	add    DWORD PTR [eax],eax
  412c09:	add    ch,bl
  412c0b:	mov    eax,DWORD PTR [eax]
  412c0d:	cmp    esi,DWORD PTR [edx+0x45744729]
  412c13:	int3   
  412c14:	inc    DWORD PTR [edi+0xd]
  412c17:	in     al,dx
  412c18:	add    DWORD PTR [eax],0xffcc0000
  412c1e:	je     0x412c1f
  412c20:	add    BYTE PTR [ebx],ch
  412c22:	pop    esi
  412c23:	push   cs
  412c24:	out    dx,al
  412c25:	inc    DWORD PTR [ecx]
  412c27:	or     BYTE PTR [ebp+0x7b],al
  412c2a:	xlat   BYTE PTR ds:[ebx]
  412c2b:	std    
  412c2c:	push   ebp
  412c2d:	pop    ebp
  412c2e:	add    BYTE PTR [ebp-0x14],al
  412c31:	test   DWORD PTR [ebp+edx*2+0xf],esi
  412c35:	sbb    ch,BYTE PTR [edx-0x79]
  412c38:	jge    0x412ca4
  412c3a:	jmp    0x412c08
  412c3c:	xor    esi,eax
  412c3e:	xchg   edi,eax
  412c3f:	pop    ebx
  412c40:	jl     0x412c98
  412c42:	add    eax,esp
  412c44:	add    BYTE PTR [esi-0x77],dl
  412c47:	or     BYTE PTR [ebp+0x3e],dl
  412c4a:	ins    BYTE PTR es:[edi],dx
  412c4b:	out    dx,al
  412c4c:	and    DWORD PTR [eax],eax
  412c4e:	dec    ebp
  412c4f:	add    bh,bh
  412c51:	test   DWORD PTR [edi+0x55006843],eax
  412c57:	je     0x412c20
  412c59:	add    DWORD PTR [eax],eax
  412c5b:	or     al,0xc
  412c5d:	fisubr DWORD PTR [esi-0x13ead498]
  412c63:	jmp    0x412bf0
  412c65:	or     DWORD PTR [ebx-0x7cff295c],esi
  412c6b:	lea    ecx,[ecx-0x7cffefa3]
  412c71:	sbb    dh,BYTE PTR [eax+0x7a]
  412c74:	jae    0x412c76
  412c76:	jnp    0xf25600ff
  412c7c:	sub    dl,BYTE PTR ds:0x7400e050
  412c82:	xor    DWORD PTR [eax+eiz*8+0x6c],0xffffffbe
  412c87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c88:	int3   
  412c89:	push   0xffffffcc
  412c8b:	push   esi
  412c8c:	or     BYTE PTR [ebx],ah
  412c8e:	jno    0x412c50
  412c90:	jnp    0x412c92
  412c92:	inc    DWORD PTR [eax]
  412c94:	push   esi
  412c95:	add    BYTE PTR [ecx+ecx*4],al
  412c98:	add    al,0x34
  412c9a:	xchg   edi,eax
  412c9b:	stos   DWORD PTR es:[edi],eax
  412c9c:	inc    ecx
  412c9d:	or     BYTE PTR [eax],al
  412c9f:	add    BYTE PTR [eax],cl
  412ca1:	sub    BYTE PTR [eax+0x34],dh
  412ca4:	add    DWORD PTR [ecx],0x46000800
  412caa:	je     0x412c31
  412cac:	add    ah,dl
  412cae:	mov    bh,ch
  412cb0:	sub    al,0x74
  412cb2:	int3   
  412cb3:	add    ah,cl
  412cb5:	and    BYTE PTR [esi-0x74ff4e93],dh
  412cbb:	push   ebp
  412cbc:	call   0x421907
  412cc1:	fmul   st,st(1)
  412cc3:	mov    bl,0xa7
  412cc5:	xor    ebx,DWORD PTR [ebp+0x75]
  412cc8:	add    dl,ah
  412cca:	jo     0x412ccb
  412ccc:	cmp    bl,ch
  412cce:	add    BYTE PTR [eax],al
  412cd0:	add    bh,bh
  412cd2:	int3   
  412cd3:	add    BYTE PTR [ebx],al
  412cd5:	ror    esp,cl
  412cd7:	les    ebx,FWORD PTR [edx-0x77]
  412cda:	inc    ebp
  412cdb:	mov    edi,edi
  412cdd:	repnz std 
  412cdf:	add    al,0xcc
  412ce1:	add    BYTE PTR [eax],al
  412ce3:	dec    esp
  412ce5:	add    esp,ecx
  412ce7:	int3   
  412ce8:	add    bl,bl
  412cea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ceb:	stos   BYTE PTR es:[edi],al
  412cec:	mov    ecx,0xcc50c000
  412cf1:	xchg   edx,eax
  412cf2:	cli    
  412cf3:	jecxz  0x412c85
  412cf5:	add    BYTE PTR [ecx-0x74ff748c],cl
  412cfb:	lea    eax,[eax]
  412cfd:	fsub   DWORD PTR [ebx-0x55]
  412d00:	dec    eax
  412d01:	inc    esi
  412d02:	mov    eax,DWORD PTR [esp+ebp*8]
  412d05:	adc    eax,0xcc97c2d8
  412d0a:	bswap  esp
  412d0c:	add    DWORD PTR [ebp-0x75],edx
  412d0f:	int3   
  412d10:	fnstsw WORD PTR [esi]
  412d12:	mov    ?,WORD PTR [eax+0x4eccc98]
  412d18:	dec    ebp
  412d19:	push   ss
  412d1a:	les    esp,FWORD PTR [eax-0x4f]
  412d1d:	je     0x412ce6
  412d1f:	add    BYTE PTR [eax],cl
  412d21:	inc    ebp
  412d22:	add    BYTE PTR [eax],al
  412d24:	pop    ebp
  412d25:	jecxz  0x412d07
  412d27:	and    eax,DWORD PTR [edx+0x83cc85]
  412d2d:	jecxz  0x412d27
  412d2f:	pop    ds
  412d30:	sub    al,BYTE PTR [eax]
  412d32:	mov    edi,edi
  412d34:	add    BYTE PTR [eax],al
  412d36:	add    BYTE PTR [ecx-0x5c11987d],cl
  412d3c:	mov    WORD PTR [eax],es
  412d3e:	mov    eax,DWORD PTR [eax]
  412d40:	(bad)  
  412d41:	push   ebx
  412d42:	(bad)  
  412d43:	xchg   ebx,eax
  412d44:	mov    dh,0x74
  412d46:	inc    ebp
  412d47:	dec    ebp
  412d48:	je     0x412d4a
  412d4a:	add    al,al
  412d4c:	add    dl,ah
  412d4e:	call   0xff00:0x35a30
  412d55:	mov    ah,0x77
  412d57:	or     bh,BYTE PTR [eax+0x1ff00]
  412d5d:	dec    DWORD PTR [ecx+0x5bd40015]
  412d63:	lds    ebx,FWORD PTR [ebp+ebx*2+0x620c8bcc]
  412d6a:	jb     0x412d0c
  412d6c:	ins    DWORD PTR es:[edi],dx
  412d6d:	int3   
  412d6e:	jne    0x412d71
  412d70:	je     0x412cfb
  412d72:	inc    DWORD PTR [eax]
  412d74:	add    BYTE PTR [edx-0x1],dh
  412d77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d78:	inc    esi
  412d79:	call   FWORD PTR [ebp-0x20]
  412d7c:	add    BYTE PTR [esi+esi*2+0x1a],ah
  412d80:	mov    edx,0x38500
  412d85:	add    DWORD PTR [eax],ecx
  412d87:	mov    esi,DWORD PTR [ebp+eax*4+0x7e]
  412d8b:	add    al,0xc1
  412d8d:	adc    BYTE PTR [ecx+0x56e20000],cl
  412d93:	inc    eax
  412d94:	cmp    DWORD PTR [ecx+0x183018d],ecx
  412d9a:	or     al,0xc0
  412d9c:	add    esp,ebp
  412d9e:	or     esi,DWORD PTR [ebx-0x33f0746b]
  412da4:	inc    ebp
  412da5:	and    ebp,0xffccf82b
  412dab:	mov    eax,DWORD PTR [ebx-0x7c74f775]
  412db1:	jecxz  0x412d79
  412db3:	push   edx
  412db4:	sub    eax,DWORD PTR [esp+esi*2]
  412db7:	je     0x412da5
  412db9:	pop    esp
  412dba:	xchg   edx,eax
  412dbb:	pop    ebp
  412dbc:	jno    0x412dbd
  412dbe:	inc    DWORD PTR [eax]
  412dc0:	mov    eax,DWORD PTR [eax]
  412dc2:	add    ah,cl
  412dc4:	int3   
  412dc5:	mov    esi,0x1d9eff6
  412dca:	int3   
  412dcb:	mov    ecx,DWORD PTR [eax]
  412dcd:	ficom  DWORD PTR [edi-0x33c5ac]
  412dd3:	mov    edi,edi
  412dd5:	add    BYTE PTR ds:0xa886ff45,dl
  412ddb:	xor    cl,ch
  412ddd:	add    BYTE PTR [eax],al
  412ddf:	push   esi
  412de0:	rcr    cl,0xad
  412de3:	push   edi
  412de4:	jb     0x412e36
  412de6:	add    BYTE PTR [eax],al
  412de8:	cmovne ecx,DWORD PTR [edi]
  412deb:	push   esi
  412dec:	mov    ebx,DWORD PTR [ebx+0x2f]
  412def:	mov    ah,0x4c
  412df1:	push   esi
  412df2:	or     al,0x8
  412df4:	inc    ebp
  412df5:	mov    DWORD PTR [eax+0x24],esi
  412df8:	dec    ebp
  412df9:	(bad)  
  412dfa:	mov    esi,DWORD PTR [ecx+eax*1+0x1]
  412dfe:	add    BYTE PTR [eax],al
  412e00:	mov    ebp,eax
  412e02:	mov    dl,0xb0
  412e04:	loope  0x412d8f
  412e06:	mov    ecx,DWORD PTR [eax]
  412e08:	add    dl,bl
  412e0a:	cmc    
  412e0b:	xor    ebp,esp
  412e0d:	je     0x412e0f
  412e0f:	int3   
  412e10:	add    BYTE PTR [eax+eax*1],cl
  412e13:	inc    DWORD PTR [eax]
  412e15:	loop   0x412db1
  412e17:	pop    edi
  412e18:	dec    ebx
  412e19:	mov    esp,eax
  412e1b:	mov    eax,DWORD PTR [eax]
  412e1d:	popa   
  412e1e:	mov    es,WORD PTR [ebx]
  412e20:	jmp    0x5500:0x454500
  412e27:	add    DWORD PTR ds:0x6765d9f2,edx
  412e2d:	add    BYTE PTR [ebx+0x337b1083],cl
  412e33:	std    
  412e34:	xchg   ecx,eax
  412e35:	rol    BYTE PTR [eax],0x46
  412e38:	loopne 0x412e39
  412e3a:	add    al,al
  412e3c:	add    eax,ecx
  412e3e:	cdq    
  412e3f:	ror    DWORD PTR [eax+eax*1+0xc],cl
  412e43:	or     al,0x15
  412e45:	repnz mov ch,0x7
  412e48:	dec    ah
  412e4a:	mov    ecx,esp
  412e4c:	add    ah,cl
  412e4e:	add    BYTE PTR [ecx-0x8f6ecab],cl
  412e54:	imul   eax,DWORD PTR [ebx-0x64fe8b34],0x45676c3
  412e5e:	test   ebp,ebx
  412e60:	call   0x403764
  412e65:	sbb    edi,DWORD PTR [ebp-0x11]
  412e68:	js     0x412e31
  412e6a:	int3   
  412e6b:	(bad)  
  412e6c:	jmp    0x412e8f
  412e6e:	rcr    BYTE PTR [edi],0x23
  412e71:	add    DWORD PTR [eax],eax
  412e73:	add    ah,cl
  412e75:	add    DWORD PTR [ebp-0x39],edx
  412e78:	or     DWORD PTR [edx],0xffffffb9
  412e7b:	(bad)  
  412e7c:	dec    ebp
  412e7d:	je     0x412e87
  412e7f:	add    BYTE PTR [edx+0x43],ch
  412e82:	fld    QWORD PTR [edi-0x47]
  412e85:	xor    DWORD PTR [ebp+0x74],0xffffffcc
  412e89:	add    BYTE PTR [ebx-0x1df53314],cl
  412e8f:	adc    al,0xbd
  412e91:	add    BYTE PTR [ebp-0x1],dh
  412e94:	mov    ebx,DWORD PTR ds:0xae1b8b
  412e9a:	inc    ebp
  412e9b:	int3   
  412e9c:	add    BYTE PTR [ebp+0x3d5645cc],al
  412ea2:	pushf  
  412ea3:	add    al,0xfc
  412ea5:	loopne 0x412e2a
  412ea7:	inc    esi
  412ea8:	or     BYTE PTR [ebx],cl
  412eaa:	ja     0x412edb
  412eac:	and    al,BYTE PTR [eax]
  412eae:	cmp    edi,0x45
  412eb1:	dec    DWORD PTR [ebx-0x1bab7b00]
  412eb7:	enter  0xff48,0x1
  412ebb:	jne    0x412f31
  412ebd:	or     al,0x35
  412ebf:	rcr    BYTE PTR [ecx+0x8ff45dd],0x8b
  412ec6:	push   ebp
  412ec7:	add    BYTE PTR [ebp+0x49],dl
  412eca:	sub    BYTE PTR ds:0xc70f89b4,0x75
  412ed1:	inc    edi
  412ed2:	jge    0x412ef6
  412ed4:	lock add DWORD PTR [eax],eax
  412ed7:	inc    DWORD PTR [ebp-0x77]
  412eda:	add    BYTE PTR [eax],al
  412edc:	add    edi,esi
  412ede:	sahf   
  412edf:	pop    edi
  412ee0:	inc    edx
  412ee1:	add    ah,cl
  412ee3:	add    bh,bh
  412ee5:	scas   al,BYTE PTR es:[edi]
  412ee6:	xlat   BYTE PTR ds:[ebx]
  412ee7:	or     BYTE PTR [eax],cl
  412ee9:	or     BYTE PTR [ebp-0x40],bl
  412eec:	mov    edx,DWORD PTR [eax+0xc]
  412eef:	add    BYTE PTR [eax],al
  412ef1:	ret    
  412ef2:	sbb    dl,BYTE PTR [edx+0x1834e6d]
  412ef8:	int3   
  412ef9:	mov    edx,eax
  412efb:	dec    ebx
  412efc:	push   esp
  412efd:	sbb    al,0xff
  412eff:	adc    eax,0xe00000
  412f04:	lea    eax,[eax]
  412f06:	sbb    eax,0xcc11f74e
  412f0b:	add    BYTE PTR [eax],cl
  412f0d:	test   DWORD PTR [ebx+0x42],ecx
  412f10:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  412f12:	push   0xffffff89
  412f14:	mov    DWORD PTR [eax],eax
  412f16:	mov    esi,DWORD PTR [ebp+0x45]
  412f19:	add    BYTE PTR [edi],al
  412f1b:	rol    al,0x64
  412f1e:	or     al,0x0
  412f20:	dec    DWORD PTR [edx+ecx*2]
  412f23:	dec    BYTE PTR [ebp+0x3d]
  412f26:	inc    ebp
  412f27:	add    BYTE PTR [ebx+0xeb8b00],cl
  412f2d:	add    BYTE PTR [edx+0x8074977],ch
  412f33:	mov    ecx,esp
  412f35:	loopne 0x412ed4
  412f37:	pushf  
  412f38:	out    0xe2,al
  412f3a:	mov    eax,DWORD PTR [eax]
  412f3c:	inc    ebp
  412f3d:	je     0x412f84
  412f3f:	xor    eax,DWORD PTR [eax]
  412f41:	int3   
  412f42:	(bad)
  412f46:	add    BYTE PTR [ebx+eax*1],cl
  412f49:	fnstsw WORD PTR [eax+0x15]
  412f4c:	dec    edi
  412f4d:	xchg   BYTE PTR [ebp+0x10],cl
  412f50:	(bad)  
  412f51:	inc    DWORD PTR [ebp-0x39ff76ff]
  412f57:	shl    DWORD PTR [ebx],1
  412f59:	fild   DWORD PTR [eax]
  412f5b:	or     al,ch
  412f5d:	adc    eax,0xc0ac4ba7
  412f62:	or     BYTE PTR [eax+ebp*8+0x1],dh
  412f66:	int3   
  412f67:	add    BYTE PTR [eax],al
  412f69:	or     al,bh
  412f6b:	cmc    
  412f6c:	shl    BYTE PTR [esi+0x50],1
  412f6f:	mov    edx,DWORD PTR [eax]
  412f71:	add    dh,ch
  412f73:	scas   eax,DWORD PTR es:[edi]
  412f74:	push   ds
  412f75:	xchg   DWORD PTR [eax],eax
  412f77:	or     al,0x0
  412f79:	pop    ebp
  412f7a:	mov    eax,DWORD PTR [ebx+0x5fbf5d00]
  412f80:	push   edx
  412f81:	push   es
  412f82:	add    BYTE PTR [eax],al
  412f84:	inc    DWORD PTR [eax]
  412f86:	sbb    BYTE PTR [ebp+0x38],dl
  412f89:	inc    BYTE PTR [eax]
  412f8b:	int3   
  412f8c:	push   ebp
  412f8d:	mov    DWORD PTR [ebx-0x2276ff23],eax
  412f93:	jl     0x412ff8
  412f95:	fld1   
  412f97:	add    bh,bh
  412f99:	in     al,dx
  412f9a:	mov    ds:0xd1eb2,al
  412f9f:	add    BYTE PTR [eax],al
  412fa1:	add    BYTE PTR [ebx],dh
  412fa3:	add    BYTE PTR [eax],al
  412fa5:	int3   
  412fa6:	int3   
  412fa7:	push   eax
  412fa8:	sti    
  412fa9:	mov    DWORD PTR [eax],ecx
  412fab:	je     0x412ff3
  412fad:	mov    ebx,DWORD PTR ds:0x1dee9c5
  412fb3:	or     DWORD PTR [ebx+0x5601008b],0x0
  412fba:	xchg   BYTE PTR [eax],ch
  412fbc:	and    ch,cl
  412fbe:	test   esp,ecx
  412fc0:	inc    esi
  412fc1:	mov    DWORD PTR [edi],edx
  412fc3:	mov    ch,0x77
  412fc5:	mov    esi,DWORD PTR [ebp-0x15]
  412fc8:	adc    BYTE PTR [ebp+0x56],dh
  412fcb:	mov    eax,DWORD PTR [eax]
  412fcd:	adc    al,ch
  412fcf:	pop    es
  412fd0:	imul   esp,DWORD PTR ds:0x838b0000,0xfffffff8
  412fd7:	scas   eax,DWORD PTR es:[edi]
  412fd8:	pop    edx
  412fd9:	pop    ebx
  412fda:	bswap  esp
  412fdc:	int3   
  412fdd:	add    al,ah
  412fdf:	mov    DWORD PTR [eax],eax
  412fe1:	mov    eax,edi
  412fe3:	pop    ss
  412fe4:	jo     0x412fa9
  412fe6:	inc    ebp
  412fe7:	push   0xffffff83
  412fe9:	int3   
  412fea:	icebp  
  412feb:	fwait
  412fec:	add    eax,0xffc000fc
  412ff1:	push   0xffffff83
  412ff3:	mov    eax,DWORD PTR [ebp-0x20]
  412ff6:	xor    BYTE PTR [esi+0x183c33e],ch
  412ffc:	add    ch,bl
  412ffe:	fwait
  412fff:	mov    esp,0x8b089e
  413005:	add    ah,cl
  413007:	add    ah,cl
  413009:	or     BYTE PTR [ecx-0x1b],ah
  41300c:	je     0x412ffa
  41300e:	add    edi,edi
  413010:	mov    eax,DWORD PTR [ebx+eiz*4]
  413013:	data16 aam 0x67
  413016:	test   DWORD PTR [eax],ecx
  413018:	int3   
  413019:	add    ah,cl
  41301b:	push   ebp
  41301c:	add    DWORD PTR [eax],eax
  41301e:	lahf   
  41301f:	arpl   WORD PTR [edx-0x26],dx
  413022:	inc    DWORD PTR [ecx]
  413024:	inc    ebp
  413025:	add    DWORD PTR [edi+0x4c],edi
  413028:	or     esp,DWORD PTR [ebx-0x1]
  41302b:	(bad)  
  41302c:	inc    DWORD PTR [esi+0x0]
  41302f:	add    BYTE PTR ds:0xb7f8bf15,dl
  413035:	fs int3 
  413037:	rol    BYTE PTR [eax],0x0
  41303a:	stos   DWORD PTR es:[edi],eax
  41303b:	push   edi
  41303c:	add    bl,0xcc
  41303f:	jmp    0x412fce
  413041:	add    DWORD PTR [ebp+0x0],eax
  413044:	in     al,dx
  413045:	add    BYTE PTR [ebp-0x1f],ah
  413048:	xchg   esi,eax
  413049:	mov    ds:0x81500,al
  41304e:	inc    edx
  41304f:	out    dx,al
  413050:	sub    al,0xd9
  413052:	add    ah,cl
  413054:	add    edi,edi
  413056:	add    DWORD PTR [ebp+0x45],edx
  413059:	add    BYTE PTR [edi+0x2a],bl
  41305c:	and    al,0x7c
  41305e:	xor    ebp,esp
  413060:	add    BYTE PTR [eax],al
  413062:	sub    DWORD PTR [edx-0x1374a796],0x80883cc
  41306c:	add    DWORD PTR [ebp-0x2],ebx
  41306f:	jbe    0x4130aa
  413071:	dec    ebx
  413072:	add    al,ch
  413074:	int3   
  413075:	or     dh,ch
  413077:	div    BYTE PTR [edi]
  413079:	cmp    edi,edi
  41307b:	dec    DWORD PTR [eax]
  41307d:	push   ebp
  41307e:	add    BYTE PTR [ebp-0x2b9ff01],al
  413084:	loope  0x41306a
  413086:	add    BYTE PTR [ebx+0x511a08c7],cl
  41308c:	outs   dx,BYTE PTR ds:[esi]
  41308d:	pop    ecx
  41308e:	pavgb  mm0,QWORD PTR [eax]
  413091:	add    BYTE PTR [ebx-0x70ffff34],cl
  413097:	pusha  
  413098:	retf   
  413099:	jo     0x4130e8
  41309b:	add    DWORD PTR [eax],0x46
  41309e:	iret   
  41309f:	imul   eax,DWORD PTR [ebp-0x74f7f3f7],0xff088b8b
  4130a9:	add    DWORD PTR [ecx],edx
  4130ab:	fsub   QWORD PTR [eax+0xcccc6d]
  4130b1:	mov    esp,DWORD PTR [ebp-0x15]
  4130b4:	inc    esp
  4130b5:	xor    bh,bh
  4130b7:	add    BYTE PTR [edx+0x8],ch
  4130ba:	or     BYTE PTR [eax],al
  4130bc:	add    DWORD PTR ds:0xe5ee9bad,edx
  4130c2:	inc    ebp
  4130c3:	add    BYTE PTR [eax],al
  4130c5:	add    ch,ch
  4130c7:	pop    esi
  4130c8:	into   
  4130c9:	pushf  
  4130ca:	add    BYTE PTR [eax],cl
  4130cc:	jne    0x4130ce
  4130ce:	push   ebp
  4130cf:	int3   
  4130d0:	test   DWORD PTR [esi+0x4],edx
  4130d3:	mov    eax,ds:0xff555cb2
  4130d8:	mov    eax,DWORD PTR [ebp-0x2f5e5876]
  4130de:	add    BYTE PTR [eax],al
  4130e0:	cmp    edi,0x0
  4130e3:	ror    BYTE PTR [eax+eax*1],0x95
  4130e7:	push   ss
  4130e8:	xor    esp,eax
  4130ea:	add    ah,cl
  4130ec:	push   esi
  4130ed:	inc    ebp
  4130ee:	xchg   esp,eax
  4130ef:	and    eax,0x18dbec1
  4130f4:	or     al,0x74
  4130f6:	add    bh,bh
  4130f8:	add    BYTE PTR [ebx+0x78c61497],cl
  4130fe:	add    BYTE PTR [ecx],al
  413100:	add    BYTE PTR [eax],cl
  413102:	mov    esp,0xcc82caf6
  413107:	mov    eax,DWORD PTR [eax]
  413109:	add    BYTE PTR [esp+ecx*8+0x56],dh
  41310d:	add    BYTE PTR [edi+eiz*1],dh
  413110:	jp     0x4130e7
  413112:	fstp   st(5)
  413114:	or     bh,bh
  413116:	mov    bl,0xa0
  413118:	mov    ah,0xd6
  41311a:	mov    ecx,DWORD PTR [esp+ecx*1]
  41311d:	add    BYTE PTR [eax],al
  41311f:	pop    ebp
  413120:	add    BYTE PTR [ebp+0x4c6a13cb],al
  413126:	or     al,0x1
  413128:	mov    eax,DWORD PTR [eax]
  41312a:	and    al,0x1a
  41312c:	cmp    DWORD PTR [ebp+0x338b1504],esp
  413132:	add    BYTE PTR [ebp-0x75],al
  413135:	add    al,bl
  413137:	adc    esp,DWORD PTR [ebx]
  413139:	cmp    eax,0x850c0004
  41313e:	push   edi
  41313f:	pushf  
  413140:	stos   DWORD PTR es:[edi],eax
  413141:	in     eax,dx
  413142:	lea    esi,[ebx]
  413144:	add    BYTE PTR [ebx-0x3333ffb3],cl
  41314a:	sbb    al,0x49
  41314c:	xor    dh,ch
  41314e:	add    BYTE PTR [eax],al
  413150:	mov    eax,eax
  413152:	stc    
  413153:	push   edx
  413154:	lods   al,BYTE PTR ds:[esi]
  413155:	add    cl,ah
  413157:	test   DWORD PTR [eax],eax
  413159:	int3   
  41315a:	jne    0x413128
  41315c:	add    bh,bh
  41315e:	inc    edi
  41315f:	jmp    0xcc00:0x88b03e1
  413166:	(bad)
  41316a:	dec    DWORD PTR [ebx+0x45ff008b]
  413170:	inc    ebp
  413171:	dec    ebp
  413172:	jmp    0xfc56947
  413177:	int3   
  413178:	mov    ecx,DWORD PTR [ebx+0x28ee054c]
  41317e:	add    BYTE PTR [ebx-0x383f7500],al
  413184:	add    BYTE PTR [ebx+0x70938348],cl
  41318a:	je     0x41318b
  41318c:	add    BYTE PTR [eax],al
  41318e:	push   ss
  41318f:	mov    ah,0x61
  413191:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413192:	mov    ecx,esp
  413194:	add    BYTE PTR [ecx-0x7472baeb],cl
  41319a:	or     al,0xa8
  41319c:	fmul   QWORD PTR [ebx+eax*4]
  41319f:	add    BYTE PTR [ebx+0x5207f100],cl
  4131a5:	inc    ebx
  4131a6:	int3   
  4131a7:	add    DWORD PTR [ebp-0x75],ebx
  4131aa:	add    al,0xff
  4131ac:	jnp    0x1127d24f
  4131b2:	add    esp,ecx
  4131b4:	add    bh,bh
  4131b6:	mov    eax,ds:0x364df3
  4131bb:	add    BYTE PTR [esi+0x3],al
  4131be:	add    BYTE PTR [ecx+0x39cfc78b],cl
  4131c4:	push   eax
  4131c5:	xchg   edi,eax
  4131c6:	push   DWORD PTR [ebp+ebx*2+0x0]
  4131ca:	idiv   BYTE PTR [eax]
  4131cc:	pop    es
  4131cd:	dec    eax
  4131ce:	add    ch,bl
  4131d0:	mov    edx,DWORD PTR [ebp-0x15]
  4131d3:	add    BYTE PTR [eax+eax*1-0xf],dh
  4131d7:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131d9:	or     eax,0x89e089cc
  4131de:	addr16 mov edx,0xffcc85f6
  4131e4:	mov    eax,DWORD PTR [ebp+0x0]
  4131e7:	add    BYTE PTR [ebx+0x17175808],cl
  4131ed:	test   ah,cl
  4131ef:	mov    eax,DWORD PTR [eax]
  4131f1:	add    BYTE PTR [ebx+ecx*4+0x3a],dl
  4131f5:	fld    DWORD PTR [eax]
  4131f7:	lea    eax,[eax]
  4131f9:	fld    QWORD PTR [eax]
  4131fb:	je     0x413205
  4131fd:	add    bl,ch
  4131ff:	and    ecx,esp
  413201:	push   ecx
  413202:	add    BYTE PTR [eax],al
  413204:	or     DWORD PTR [ebx-0x6c4fb395],0x0
  41320b:	add    DWORD PTR [ebx+0x45cc5645],ecx
  413211:	dec    edx
  413213:	cmp    DWORD PTR [esi+eax*1],eax
  413216:	dec    DWORD PTR [ebx+0x43bf7504]
  41321c:	push   edx
  41321d:	jmp    0x41321e
  41321f:	call   0xffcabdb1
  413224:	call   0x7fe11d29
  413229:	ins    BYTE PTR es:[edi],dx
  41322a:	add    DWORD PTR [eax],eax
  41322c:	or     al,0xcc
  41322e:	scas   al,BYTE PTR es:[edi]
  41322f:	mov    al,ds:0x858be6ff
  413234:	int3   
  413235:	pop    ebp
  413236:	add    BYTE PTR [eax],al
  413238:	add    BYTE PTR [ebp+0x5d],bl
  41323b:	sbb    DWORD PTR [eax+0x69],esi
  41323e:	test   DWORD PTR [eax],eax
  413240:	add    BYTE PTR [eax],al
  413242:	lock lods eax,DWORD PTR ds:[esi]
  413244:	icebp  
  413245:	repz mov ecx,DWORD PTR [ecx-0x177a7aba]
  41324c:	lea    eax,[ebp-0x2a]
  41324f:	inc    ebp
  413250:	and    BYTE PTR ds:0xfcc50cc,0x99
  413257:	adc    eax,0x8beea6
  41325c:	dec    ebp
  41325d:	loopne 0x41322b
  41325f:	or     BYTE PTR [ecx+ecx*4],al
  413262:	inc    esp
  413263:	or     BYTE PTR [edi+0x28],0xcc
  413267:	add    BYTE PTR [eax],cl
  413269:	add    al,0x45
  41326b:	mov    cl,0xec
  41326d:	mov    bh,0x8
  41326f:	add    ah,cl
  413271:	add    BYTE PTR [ebp-0x75],dh
  413274:	mov    eax,eax
  413276:	and    eax,0x83a683cc
  41327b:	mov    DWORD PTR [ebx+0x38d5f8b],ecx
  413281:	adc    eax,0xc044d01
  413286:	inc    ebp
  413287:	add    DWORD PTR [eax],0x0
  41328a:	test   BYTE PTR [edx-0x67],0x5
  41328e:	int3   
  41328f:	add    BYTE PTR [eax],dl
  413291:	add    ebx,eax
  413293:	push   ebp
  413294:	mov    ebp,esp
  413296:	sub    esp,0x64
  413299:	push   ebx
  41329a:	push   esi
  41329b:	push   edi
  41329c:	lea    eax,[ebp-0x24]
  41329f:	push   eax
  4132a0:	call   DWORD PTR ds:0x418060
  4132a6:	lea    eax,[ebp-0x24]
  4132a9:	push   eax
  4132aa:	call   DWORD PTR ds:0x418034
  4132b0:	lea    eax,[ebp-0x64]
  4132b3:	push   eax
  4132b4:	xor    ebx,ebx
  4132b6:	push   ebx
  4132b7:	call   DWORD PTR ds:0x418090
  4132bd:	mov    esi,eax
  4132bf:	lea    eax,[ebp-0x8]
  4132c2:	push   eax
  4132c3:	push   0x1
  4132c5:	call   DWORD PTR ds:0x4180c4
  4132cb:	mov    eax,ds:0x419054
  4132d0:	push   ebx
  4132d1:	push   esi
  4132d2:	mov    ds:0x41919c,eax
  4132d7:	call   DWORD PTR ds:0x418018
  4132dd:	mov    eax,DWORD PTR [ebp-0x8]
  4132e0:	mov    ecx,DWORD PTR [eax]
  4132e2:	lea    edx,[ebp-0xc]
  4132e5:	push   edx
  4132e6:	push   0x4181e0
  4132eb:	push   eax
  4132ec:	call   DWORD PTR [ecx]
  4132ee:	mov    ds:0x4194b8,eax
  4132f3:	call   DWORD PTR ds:0x41803c
  4132f9:	push   0x3
  4132fb:	pop    esi
  4132fc:	push   ebx
  4132fd:	push   0x23
  4132ff:	push   ebx
  413300:	mov    edi,esi
  413302:	call   DWORD PTR ds:0x418098
  413308:	xor    eax,eax
  41330a:	mov    ecx,DWORD PTR ds:0x41944c
  413310:	mov    ecx,DWORD PTR [ecx+eax*4]
  413313:	mov    edx,DWORD PTR ds:0x4194b8
  413319:	lea    ecx,[ecx+edx*1+0xa8b2e39]
  413320:	mov    edx,DWORD PTR ds:0x41939c
  413326:	mov    DWORD PTR [edx],ecx
  413328:	add    DWORD PTR ds:0x41939c,0x4
  41332f:	xor    ecx,ecx
  413331:	cmp    edi,esi
  413333:	setne  cl
  413336:	lea    edi,[ecx+0x2]
  413339:	add    eax,edi
  41333b:	cmp    eax,0xb1
  413340:	jb     0x41330a
  413342:	mov    eax,ds:0x4194b8
  413347:	mov    edi,DWORD PTR ds:0x41939c
  41334d:	push   ebx
  41334e:	xor    eax,0x6709589b
  413353:	push   ebx
  413354:	sub    eax,0x5679b47c
  413359:	push   ebx
  41335a:	mov    DWORD PTR [edi],eax
  41335c:	call   DWORD PTR ds:0x418088
  413362:	add    edi,0x4
  413365:	mov    DWORD PTR [ebp-0x4],esi
  413368:	mov    eax,ebx
  41336a:	shl    eax,0x2
  41336d:	add    eax,0x4149dc
  413372:	mov    eax,DWORD PTR [eax]
  413374:	sub    eax,DWORD PTR ds:0x4194b8
  41337a:	push   0x1d
  41337c:	add    eax,0xd27d11b
  413381:	mov    DWORD PTR [edi],eax
  413383:	push   0x0
  413385:	add    edi,0x4
  413388:	call   DWORD PTR ds:0x4180b0
  41338e:	xor    eax,eax
  413390:	cmp    DWORD PTR [ebp-0x4],esi
  413393:	setne  al
  413396:	add    eax,0x2
  413399:	add    ebx,eax
  41339b:	mov    DWORD PTR [ebp-0x4],eax
  41339e:	cmp    ebx,0xcd
  4133a4:	jb     0x413368
  4133a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4133a9:	mov    ebx,ecx
  4133ab:	shr    ebx,1
  4133ad:	lea    ecx,[ebx+ecx*2]
  4133b0:	xor    eax,eax
  4133b2:	mov    edx,esi
  4133b4:	test   ecx,ecx
  4133b6:	je     0x4133e2
  4133b8:	mov    ebx,DWORD PTR ds:0x4194dc
  4133be:	mov    ebx,DWORD PTR [ebx+eax*4]
  4133c1:	sub    ebx,DWORD PTR ds:0x4194b8
  4133c7:	sub    ebx,0x484977ee
  4133cd:	mov    DWORD PTR [edi],ebx
  4133cf:	xor    ebx,ebx
  4133d1:	add    edi,0x4
  4133d4:	cmp    edx,esi
  4133d6:	setne  bl
  4133d9:	lea    edx,[ebx+0x2]
  4133dc:	add    eax,edx
  4133de:	cmp    eax,ecx
  4133e0:	jb     0x4133b8
  4133e2:	call   DWORD PTR ds:0x41808c
  4133e8:	mov    ecx,esi
  4133ea:	xor    eax,eax
  4133ec:	mov    edx,DWORD PTR ds:0x41938c
  4133f2:	mov    edx,DWORD PTR [edx+eax*4]
  4133f5:	mov    ebx,DWORD PTR ds:0x4194b8
  4133fb:	lea    edx,[edx+ebx*1-0x59665efb]
  413402:	mov    DWORD PTR [edi],edx
  413404:	xor    edx,edx
  413406:	add    edi,0x4
  413409:	cmp    ecx,esi
  41340b:	setne  dl
  41340e:	lea    ecx,[edx+0x2]
  413411:	add    eax,ecx
  413413:	cmp    eax,0xac
  413418:	jb     0x4133ec
  41341a:	call   DWORD PTR ds:0x41804c
  413420:	mov    ecx,esi
  413422:	xor    eax,eax
  413424:	mov    edx,DWORD PTR ds:0x4193c8
  41342a:	mov    edx,DWORD PTR [edx+eax*4]
  41342d:	sub    edx,DWORD PTR ds:0x4194b8
  413433:	sub    edx,0x3b62104
  413439:	mov    DWORD PTR [edi],edx
  41343b:	xor    edx,edx
  41343d:	add    edi,0x4
  413440:	cmp    ecx,esi
  413442:	setne  dl
  413445:	lea    ecx,[edx+0x2]
  413448:	add    eax,ecx
  41344a:	cmp    eax,0xa5
  41344f:	jb     0x413424
  413451:	lea    eax,[ebp-0x24]
  413454:	push   eax
  413455:	call   DWORD PTR ds:0x418040
  41345b:	lea    eax,[ebp-0x24]
  41345e:	push   eax
  41345f:	call   DWORD PTR ds:0x418044
  413465:	lea    eax,[ebp-0x64]
  413468:	push   eax
  413469:	push   0x0
  41346b:	call   DWORD PTR ds:0x4180a0
  413471:	pop    edi
  413472:	pop    esi
  413473:	pop    ebx
  413474:	leave  
  413475:	ret    
  413476:	cmp    eax,0x89344431
  41347b:	mov    eax,eax
  41347d:	add    BYTE PTR [esi],cl
  41347f:	add    edx,DWORD PTR [ecx+0xc00503c]
  413485:	mov    eax,DWORD PTR [ecx]
  413487:	push   ebp
  413488:	mov    DWORD PTR [ebp-0x4b],esi
  41348b:	pcmpgtw mm1,QWORD PTR [eax+eax*1-0x40]
  413490:	add    BYTE PTR [ecx],al
  413492:	pop    ds
  413493:	sbb    ebx,DWORD PTR [edx]
  413495:	pop    eax
  413496:	loopne 0x413502
  413498:	int3   
  413499:	adc    DWORD PTR [ebp-0x18],0xffffff89
  41349d:	add    cl,bh
  41349f:	xchg   DWORD PTR es:[ebx],esp
  4134a2:	mov    eax,DWORD PTR [ecx]
  4134a4:	add    BYTE PTR [eax],al
  4134a6:	ins    DWORD PTR es:[edi],dx
  4134a7:	int3   
  4134a8:	test   BYTE PTR [eax+0x8],dh
  4134ab:	mov    eax,DWORD PTR [eax]
  4134ad:	int3   
  4134ae:	int3   
  4134af:	int3   
  4134b0:	add    BYTE PTR [ebx+0x44917375],cl
  4134b6:	mov    DWORD PTR ds:0xdd81cc85,edx
  4134bc:	cwde   
  4134bd:	stc    
  4134be:	add    bh,bh
  4134c0:	push   0x75
  4134c2:	pop    ebp
  4134c3:	mov    eax,DWORD PTR [eax]
  4134c5:	mov    ecx,DWORD PTR [ecx+0x866a0b7]
  4134cb:	push   esi
  4134cc:	mov    eax,DWORD PTR [ebp+0x30]
  4134cf:	dec    edi
  4134d0:	and    cl,BYTE PTR [eax-0x7afe1434]
  4134d6:	add    ah,cl
  4134d8:	ror    BYTE PTR [ebx-0x6f36a883],0x74
  4134df:	push   esi
  4134e0:	add    BYTE PTR [ebx-0x53b4a0af],cl
  4134e6:	or     al,0x8b
  4134e8:	add    BYTE PTR [eax],cl
  4134ea:	add    BYTE PTR [ebx+0x2ee01e8],cl
  4134f0:	mov    WORD PTR [eax+eax*1],fs
  4134f3:	xor    eax,DWORD PTR [eax]
  4134f5:	mov    DWORD PTR [eax],edi
  4134f7:	iret   
  4134f8:	in     al,dx
  4134f9:	cmp    al,0x8b
  4134fb:	ror    BYTE PTR [edi],0x85
  4134fe:	loopne 0x41348b
  413500:	jne    0x413552
  413502:	lock lods al,BYTE PTR ds:[esi]
  413504:	jge    0x4134ee
  413506:	mov    ebp,eax
  413508:	int3   
  413509:	adc    eax,0xf2850fa5
  41350e:	int3   
  41350f:	inc    ebp
  413510:	add    esp,ecx
  413512:	mov    ecx,DWORD PTR [ebx-0x44b776f8]
  413518:	sbb    al,BYTE PTR [esp+ecx*8+0x3501cc00]
  41351f:	lods   eax,DWORD PTR ds:[esi]
  413520:	push   ebx
  413521:	mov    esp,0x74ffec
  413526:	mov    eax,DWORD PTR [ecx]
  413528:	add    BYTE PTR [eax],al
  41352a:	dec    ebx
  41352b:	int3   
  41352c:	inc    esp
  41352d:	lock inc ebp
  41352f:	inc    esi
  413530:	add    ah,cl
  413532:	xor    eax,0x80051b1
  413537:	inc    ebp
  413538:	add    BYTE PTR [ebp+0x30075cc],cl
  41353e:	add    al,0xa3
  413540:	push   edx
  413541:	and    BYTE PTR [ebx-0xfe3375],cl
  413547:	mov    ah,0x31
  413549:	sbb    eax,0xdde004
  41354e:	add    DWORD PTR [eax],0x0
  413551:	or     al,0x1a
  413553:	inc    ecx
  413554:	inc    DWORD PTR gs:[eax]
  413557:	push   esi
  413558:	je     0x4135cf
  41355a:	stc    
  41355b:	and    DWORD PTR ds:0x835de1,eax
  413561:	mov    edi,edi
  413563:	inc    esi
  413564:	mov    edi,edi
  413566:	pop    ds
  413567:	mov    ecx,0x1852314
  41356c:	mov    ebp,DWORD PTR [edx-0x11]
  41356f:	retf   
  413570:	adc    BYTE PTR [esi],ch
  413572:	mov    edx,DWORD PTR ds:0x889dd00
  413578:	call   0x13b4b308
  41357d:	xor    ecx,DWORD PTR [esi*2-0x22367c75]
  413584:	adc    al,0xf4
  413586:	add    BYTE PTR [eax],al
  413588:	add    BYTE PTR [ebx+0x156cc],al
  41358e:	xor    BYTE PTR [ebx-0x337c09df],bh
  413594:	mov    DWORD PTR [eax],eax
  413596:	xor    ebx,ecx
  413598:	xor    bh,al
  41359a:	add    ah,cl
  41359c:	push   esi
  41359d:	add    BYTE PTR [ebx+ecx*4],cl
  4135a0:	test   DWORD PTR [ecx+eax*1-0x12],esi
  4135a4:	inc    eax
  4135a5:	add    DWORD PTR [eax],eax
  4135a7:	int3   
  4135a8:	fisttp QWORD PTR [ebx+0x1280ef07]
  4135ae:	mov    esi,DWORD PTR [eax+eax*1+0x0]
  4135b2:	add    BYTE PTR ds:0xdb090108,dl
  4135b8:	xor    ebp,DWORD PTR [ecx+0x0]
  4135be:	cs call 0xc420c44
  4135c4:	test   esp,ecx
  4135c6:	fld    QWORD PTR [eax]
  4135c8:	pop    ebp
  4135c9:	add    ah,bh
  4135cb:	inc    edi
  4135cc:	ret    0x106d
  4135cf:	call   0xb47a35d4
  4135d4:	cmp    edi,esi
  4135d6:	test   esp,ecx
  4135d8:	je     0x41362a
  4135da:	mov    DWORD PTR [eax],eax
  4135dc:	add    bl,ch
  4135de:	js     0x4135dd
  4135e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135e1:	cli    
  4135e2:	int3   
  4135e3:	loopne 0x4135b1
  4135e5:	add    BYTE PTR [esi-0x39],ch
  4135e8:	fld    QWORD PTR [ecx+0x1]
  4135eb:	mov    eax,DWORD PTR [eax]
  4135ed:	dec    esp
  4135ef:	int3   
  4135f0:	add    BYTE PTR [ebp+0x58],dl
  4135f3:	enter  0xabfb,0x45
  4135f7:	add    DWORD PTR [ebx+0x13e9fd00],ecx
  4135fd:	imul   ebx,DWORD PTR [ebp-0x73],0xffcc56
  413604:	adc    eax,0xdc39ee0
  413609:	and    BYTE PTR [ebp+0x74],dh
  41360c:	add    al,0x8b
  41360e:	mov    ah,0xff
  413610:	push   ss
  413611:	add    dl,BYTE PTR [eax-0x34]
  413614:	or     BYTE PTR [ebx-0x7af333eb],cl
  41361a:	mov    bh,0x34
  41361c:	mov    ds:0xc74689f7,al
  413621:	or     BYTE PTR [eax+0x27],dh
  413624:	and    eax,0xcccc83e3
  413629:	mov    DWORD PTR [ecx+0x7855cce8],ecx
  41362f:	nop
  413630:	add    esp,edi
  413632:	pop    ebp
  413633:	mov    DWORD PTR [ebx],0x8ab66100
  413639:	loope  0x413681
  41363b:	int3   
  41363c:	inc    DWORD PTR [ebp-0xf0b201]
  413642:	out    dx,eax
  413643:	jecxz  0x413605
  413645:	fimul  WORD PTR [ebx+0x288bff01]
  41364b:	xor    esp,DWORD PTR [ebx+0x5d]
  41364e:	add    DWORD PTR [ebx+0xccff46],ecx
  413654:	inc    ebp
  413655:	(bad)  
  413656:	mov    ebp,0x892397cc
  41365b:	add    ah,cl
  41365d:	add    ebp,edx
  41365f:	jmp    0x454d78b0
  413664:	or     BYTE PTR [ebp-0x34],dl
  413667:	add    BYTE PTR [eax],dl
  413669:	or     BYTE PTR [eax-0x74adcfae],dh
  41366f:	mov    ecx,esp
  413671:	add    BYTE PTR [esi],bl
  413673:	push   ss
  413674:	les    eax,FWORD PTR [edx]
  413676:	mov    edi,edi
  413678:	add    DWORD PTR [ecx],eax
  41367a:	fisttp QWORD PTR [ebx+0x1f80cc83]
  413680:	popa   
  413681:	xor    al,0x0
  413683:	add    bh,bh
  413685:	xor    ebp,0xffffffff
  413688:	push   esi
  413689:	aaa    
  41368a:	test   DWORD PTR [eax],eax
  41368c:	add    BYTE PTR [ebp+0x0],bl
  41368f:	add    DWORD PTR [eax],0xffffff8b
  413692:	and    bl,al
  413694:	imul   BYTE PTR [ebp+0x0]
  413697:	ror    ah,0x83
  41369a:	ss jmp 0x75b59a98
  4136a0:	add    BYTE PTR [ecx],al
  4136a2:	inc    DWORD PTR [ecx]
  4136a4:	int3   
  4136a5:	xor    esi,esp
  4136a7:	xchg   ecx,eax
  4136a8:	add    dh,BYTE PTR [ecx+0xc000f8b]
  4136ae:	aad    0xf1
  4136b0:	mov    dl,0xf4
  4136b2:	add    BYTE PTR [ebx-0x3f3372a3],cl
  4136b8:	mov    esi,DWORD PTR [esp+eax*2-0x5e]
  4136bc:	sub    BYTE PTR [ecx],ah
  4136be:	mov    ecx,DWORD PTR [ebx-0x6d22fb75]
  4136c4:	out    dx,eax
  4136c5:	(bad)  
  4136c6:	int3   
  4136c7:	int3   
  4136c8:	mov    eax,DWORD PTR [esi-0x1]
  4136cb:	inc    ebp
  4136cc:	add    BYTE PTR [eax],cl
  4136ce:	stos   BYTE PTR es:[edi],al
  4136cf:	dec    edi
  4136d0:	xchg   ebx,eax
  4136d1:	ins    DWORD PTR es:[edi],dx
  4136d2:	int3   
  4136d3:	inc    DWORD PTR [eax]
  4136d5:	mov    esi,eax
  4136d7:	daa    
  4136d8:	or     dl,BYTE PTR [ebp+eax*2-0x75]
  4136dc:	add    bh,bh
  4136de:	push   ebp
  4136df:	(bad)  
  4136e0:	dec    esp
  4136e2:	pop    edi
  4136e3:	dec    BYTE PTR [ebx+0xcc0fbf]
  4136e9:	add    dl,dl
  4136eb:	push   esp
  4136ec:	push   es
  4136ed:	das    
  4136ee:	int3   
  4136ef:	add    BYTE PTR [ebx+0x8d8b],cl
  4136f5:	add    bl,al
  4136f7:	push   ebp
  4136f8:	mov    ebp,esp
  4136fa:	sub    esp,0x24
  4136fd:	push   ebx
  4136fe:	push   esi
  4136ff:	push   edi
  413700:	lea    eax,[ebp-0x24]
  413703:	push   eax
  413704:	call   DWORD PTR ds:0x418060
  41370a:	lea    eax,[ebp-0x24]
  41370d:	push   eax
  41370e:	call   DWORD PTR ds:0x418034
  413714:	lea    eax,[ebp-0x8]
  413717:	push   eax
  413718:	push   0x1
  41371a:	call   DWORD PTR ds:0x4180c4
  413720:	mov    eax,DWORD PTR [ebp-0x8]
  413723:	mov    ecx,DWORD PTR [eax]
  413725:	lea    edx,[ebp-0xc]
  413728:	push   edx
  413729:	push   0x4181e0
  41372e:	push   eax
  41372f:	call   DWORD PTR [ecx]
  413731:	mov    edi,DWORD PTR [ebp+0x8]
  413734:	push   0x3
  413736:	pop    ebx
  413737:	mov    ds:0x4194b8,eax
  41373c:	mov    DWORD PTR [ebp-0x4],ebx
  41373f:	xor    esi,esi
  413741:	push   0x0
  413743:	push   ebx
  413744:	push   0x0
  413746:	call   DWORD PTR ds:0x418088
  41374c:	mov    ecx,DWORD PTR ds:0x419480
  413752:	xor    eax,eax
  413754:	cmp    DWORD PTR ds:0x4194b8,0x80004002
  41375e:	setne  al
  413761:	dec    eax
  413762:	and    eax,0x66edf233
  413767:	add    eax,0xda04
  41376c:	add    eax,DWORD PTR [ecx+esi*4]
  41376f:	mov    DWORD PTR [edi],eax
  413771:	xor    eax,eax
  413773:	add    edi,0x4
  413776:	cmp    DWORD PTR [ebp-0x4],ebx
  413779:	setne  al
  41377c:	add    eax,0x2
  41377f:	add    esi,eax
  413781:	mov    DWORD PTR [ebp-0x4],eax
  413784:	cmp    esi,0xe6
  41378a:	jb     0x413741
  41378c:	call   DWORD PTR ds:0x41804c
  413792:	mov    DWORD PTR [ebp-0x4],ebx
  413795:	xor    esi,esi
  413797:	mov    eax,ds:0x4193fc
  41379c:	mov    eax,DWORD PTR [eax+esi*4]
  41379f:	sub    eax,DWORD PTR ds:0x4194b8
  4137a5:	sub    eax,0x5bafb052
  4137aa:	mov    DWORD PTR [edi],eax
  4137ac:	call   DWORD PTR ds:0x418054
  4137b2:	push   0x1
  4137b4:	push   0x1
  4137b6:	push   0x0
  4137b8:	add    edi,0x4
  4137bb:	call   DWORD PTR ds:0x418098
  4137c1:	xor    eax,eax
  4137c3:	cmp    DWORD PTR [ebp-0x4],ebx
  4137c6:	setne  al
  4137c9:	add    eax,0x2
  4137cc:	add    esi,eax
  4137ce:	mov    DWORD PTR [ebp-0x4],eax
  4137d1:	cmp    esi,0xc0
  4137d7:	jb     0x413797
  4137d9:	mov    DWORD PTR [ebp-0x4],ebx
  4137dc:	xor    esi,esi
  4137de:	mov    eax,ds:0x41940c
  4137e3:	mov    eax,DWORD PTR [eax+esi*4]
  4137e6:	mov    ecx,DWORD PTR ds:0x4194b8
  4137ec:	lea    eax,[eax+ecx*1+0x15bd878d]
  4137f3:	mov    DWORD PTR [edi],eax
  4137f5:	call   DWORD PTR ds:0x41803c
  4137fb:	push   0xfffffff8
  4137fd:	push   0x8be0
  413802:	add    edi,0x4
  413805:	call   DWORD PTR ds:0x418094
  41380b:	xor    eax,eax
  41380d:	cmp    DWORD PTR [ebp-0x4],ebx
  413810:	setne  al
  413813:	add    eax,0x2
  413816:	add    esi,eax
  413818:	mov    DWORD PTR [ebp-0x4],eax
  41381b:	cmp    esi,0xaf
  413821:	jb     0x4137de
  413823:	lea    eax,[ebp-0x24]
  413826:	push   eax
  413827:	call   DWORD PTR ds:0x418040
  41382d:	lea    eax,[ebp-0x24]
  413830:	push   eax
  413831:	call   DWORD PTR ds:0x418044
  413837:	pop    edi
  413838:	pop    esi
  413839:	pop    ebx
  41383a:	leave  
  41383b:	ret    
  41383c:	mov    esp,0x55c9d2ad
  413841:	mov    eax,DWORD PTR [ebp-0x68b9dfba]
  413847:	xor    edi,edi
  413849:	mov    eax,DWORD PTR [eax]
  41384b:	mov    esi,DWORD PTR [ecx+ecx*4-0x75]
  41384f:	jmp    DWORD PTR [ecx]
  413851:	dec    esi
  413852:	int    0x4b
  413854:	mov    eax,DWORD PTR [eax]
  413856:	add    BYTE PTR [eax],al
  413858:	mov    ds:0xe0c17ab8,al
  41385d:	add    ah,cl
  41385f:	inc    esi
  413860:	inc    DWORD PTR [eax]
  413862:	mov    esi,DWORD PTR [edi+eax*8-0x29]
  413866:	mov    eax,ds:0x88b000d
  41386b:	add    BYTE PTR [esi+0x343817],dh
  413871:	in     al,dx
  413872:	add    ah,cl
  413874:	jns    0x375fa27a
  41387a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41387b:	mov    ecx,0x10ccddff
  413880:	imul   edx,DWORD PTR [ecx],0x67
  413883:	aam    0x8d
  413885:	or     bh,al
  413887:	add    BYTE PTR [ebx-0x333ff40],cl
  41388d:	pop    edi
  41388e:	int3   
  41388f:	(bad)  
  413890:	(bad)  
  413891:	push   ebp
  413892:	jmp    0x413894
  413894:	and    al,0x4b
  413896:	mov    ah,0x1
  413898:	add    bh,bh
  41389a:	add    BYTE PTR [eax],al
  41389c:	add    BYTE PTR [eax],al
  41389e:	mov    eax,DWORD PTR [eax]
  4138a0:	or     ecx,DWORD PTR [ebx]
  4138a2:	inc    ebx
  4138a3:	clc    
  4138a4:	xor    ecx,DWORD PTR [ebp+0xc]
  4138a7:	int3   
  4138a8:	pushf  
  4138a9:	xchg   esi,eax
  4138aa:	xchg   edi,eax
  4138ab:	mov    eax,0xcc001000
  4138b0:	mov    ecx,esp
  4138b2:	mov    ecx,esp
  4138b4:	push   ds
  4138b5:	dec    edi
  4138b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138b7:	enter  0x8b,0x0
  4138bb:	dec    DWORD PTR [ebx+eax*2]
  4138be:	ja     0x413916
  4138c0:	dec    DWORD PTR [ebx+0x4744500]
  4138c6:	fisttp QWORD PTR [ebx+0x74009bc]
  4138cc:	pop    ebp
  4138cd:	add    edi,edi
  4138cf:	or     al,0xa6
  4138d1:	hlt    
  4138d2:	ficomp WORD PTR [edx]
  4138d4:	pop    ebp
  4138d5:	int3   
  4138d6:	lea    edx,ds:0x80c
  4138dc:	and    eax,0x85dcddf4
  4138e1:	(bad)  
  4138e2:	je     0x413929
  4138e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138e5:	add    eax,0x40121bd
  4138ea:	adc    eax,0x8080800
  4138ef:	mov    eax,ebx
  4138f1:	add    DWORD PTR [ebp+0x8b0000],eax
  4138f7:	mov    eax,DWORD PTR [edi+0x8e5dfe]
  4138fd:	int3   
  4138fe:	add    BYTE PTR [eax],al
  413900:	add    bh,al
  413902:	push   0x74
  413904:	push   esp
  413905:	sub    esp,ecx
  413907:	xchg   ebp,eax
  413908:	add    BYTE PTR [ebp+0xc],al
  41390b:	or     BYTE PTR [edx],cl
  41390d:	lock into 
  41390f:	or     eax,0xff0833
  413914:	inc    DWORD PTR [eax]
  413916:	lea    eax,[ebp-0x58]
  413919:	imul   eax,DWORD PTR [ecx+0x3f],0x10
  41391d:	mov    ecx,esp
  41391f:	dec    ebp
  413920:	xor    bh,0xd2
  413923:	or     ecx,DWORD PTR [ebx-0x763f0100]
  413929:	add    al,al
  41392b:	mov    esi,esi
  41392d:	icebp  
  41392e:	iret   
  41392f:	data16 int3 
  413931:	add    BYTE PTR [ebx+0x45b0be00],cl
  413937:	sub    al,0xff
  413939:	int3   
  41393a:	adc    eax,0x5601dd00
  41393f:	xor    eax,DWORD PTR [edx+0x3e]
  413942:	pop    eax
  413943:	retf   0xcc00
  413946:	jmp    0x4139a5
  413948:	mov    ah,0x3
  41394a:	or     eax,0xc0cc8d83
  41394f:	adc    ah,cl
  413951:	add    DWORD PTR [ebx-0x75f92375],ecx
  413957:	fadd   DWORD PTR [eax]
  413959:	add    BYTE PTR [ebp-0x34],dh
  41395c:	div    ecx
  41395e:	(bad)  
  41395f:	aam    0x33
  413961:	unpckhps xmm6,XMMWORD PTR [eax+eax*1+0x0]
  413966:	add    BYTE PTR [eax],al
  413968:	cmp    bl,0xe3
  41396b:	sahf   
  41396c:	loopne 0x41393a
  41396e:	inc    DWORD PTR [ebp-0x15b0cc1]
  413974:	add    BYTE PTR [eax],al
  413976:	add    BYTE PTR [eax+eax*1-0x1],dh
  41397a:	or     BYTE PTR [eax],al
  41397c:	aam    0x4a
  41397e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41397f:	push   edi
  413980:	(bad)  
  413981:	fld    QWORD PTR [ebp+0xf]
  413984:	pop    esp
  413985:	cli    
  413986:	mov    al,ds:0x88bff00
  41398b:	mov    edi,edi
  41398d:	mov    eax,DWORD PTR [eax]
  41398f:	adc    BYTE PTR [esi-0x7b],dl
  413992:	xlat   BYTE PTR ds:[ebx]
  413993:	test   ebp,ebx
  413995:	int3   
  413996:	inc    esi
  413997:	mov    ebx,DWORD PTR [ebp+0x4ff0a09]
  41399d:	in     al,dx
  41399e:	inc    esi
  41399f:	test   DWORD PTR [eax],eax
  4139a1:	int3   
  4139a2:	je     0x4139a4
  4139a4:	xchg   ebx,eax
  4139a5:	push   edx
  4139a6:	adc    bh,BYTE PTR [edi+0x465574cc]
  4139ac:	sbb    al,0xf8
  4139ae:	pushf  
  4139af:	sub    al,0x6a
  4139b1:	je     0x4139b4
  4139b3:	or     BYTE PTR [eax],al
  4139b5:	sar    bh,0x8b
  4139b8:	pop    edx
  4139b9:	sub    DWORD PTR [eax-0x4b],ebp
  4139bc:	(bad)  
  4139bd:	int3   
  4139be:	test   DWORD PTR [ecx],eax
  4139c0:	xchg   ebx,eax
  4139c1:	pop    eax
  4139c2:	xchg   DWORD PTR [ebx+0x1],ecx
  4139c5:	push   DWORD PTR [ebp+0x0]
  4139c8:	jmp    0x4139c9
  4139ca:	mov    edi,edi
  4139cc:	jne    0x4139ed
  4139ce:	enter  0x8584,0x0
  4139d2:	mov    esi,DWORD PTR [edx+edx*4-0x47]
  4139d6:	add    ecx,DWORD PTR [eax]
  4139d8:	dec    ebp
  4139d9:	mov    esp,eax
  4139db:	add    BYTE PTR [eax],al
  4139dd:	or     al,0x8b
  4139df:	je     0x413a34
  4139e1:	or     eax,0x8b005098
  4139e6:	add    eax,DWORD PTR [ebp+0x495f222e]
  4139ec:	add    BYTE PTR [eax],al
  4139ee:	adc    eax,0x8b008500
  4139f3:	int3   
  4139f4:	ins    DWORD PTR es:[edi],dx
  4139f5:	mov    dl,0x37
  4139f7:	inc    edi
  4139f8:	mov    DWORD PTR [eax],eax
  4139fa:	int3   
  4139fb:	je     0x413a27
  4139fd:	mov    al,0xe3
  4139ff:	bound  eax,QWORD PTR [ecx]
  413a01:	loopne 0x413a02
  413a03:	mov    DWORD PTR [eax],0x4c75cccc
  413a09:	dec    edi
  413a0a:	or     DWORD PTR [esp+esi*2],ebx
  413a0d:	int3   
  413a0e:	mov    eax,eax
  413a10:	mov    esp,0x1166b87
  413a15:	call   FWORD PTR [ebp+0x6a]
  413a18:	jmp    0x413a29
  413a1a:	call   DWORD PTR [esi-0xd]
  413a1d:	scas   eax,DWORD PTR es:[edi]
  413a1e:	add    ecx,DWORD PTR [ebp+0x0]
  413a21:	mov    eax,DWORD PTR [eax]
  413a23:	add    BYTE PTR [eax],dh
  413a25:	or     eax,0x3bc3
  413a2a:	int3   
  413a2b:	int3   
  413a2c:	int3   
  413a2d:	or     al,ch
  413a2f:	push   ebp
  413a30:	mov    ecx,0xec0ede5d
  413a35:	add    BYTE PTR [eax],cl
  413a37:	int3   
  413a38:	and    dl,BYTE PTR [ebx-0x17ff4cfa]
  413a3e:	mov    eax,DWORD PTR [ebp-0x73]
  413a41:	inc    esi
  413a42:	mov    ebp,DWORD PTR [edx-0x4]
  413a45:	sbb    eax,0x46035bee
  413a4a:	or     al,0x8
  413a4c:	popf   
  413a4d:	rol    DWORD PTR [ecx+0x68],0xf
  413a51:	je     0x413a53
  413a53:	add    DWORD PTR [eax],eax
  413a55:	or     BYTE PTR [esp+ecx*8+0x19],dh
  413a59:	aam    0x42
  413a5b:	or     BYTE PTR [ebx-0x357a4000],0xa5
  413a62:	xchg   ecx,eax
  413a63:	inc    esi
  413a64:	mov    eax,DWORD PTR [eax]
  413a66:	mov    edx,DWORD PTR [eax-0x1]
  413a69:	int3   
  413a6a:	add    BYTE PTR [ebx-0x2161cb6e],al
  413a70:	int3   
  413a71:	add    BYTE PTR [ebp+0x0],al
  413a74:	cmp    ebx,DWORD PTR [ecx]
  413a76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a77:	sub    DWORD PTR [eax],eax
  413a79:	add    BYTE PTR [eax],al
  413a7b:	xor    ecx,esp
  413a7d:	mov    DWORD PTR [eax],eax
  413a7f:	int3   
  413a80:	loop   0x413afd
  413a82:	cli    
  413a83:	mov    dh,0xcc
  413a85:	add    BYTE PTR [edi],cl
  413a87:	add    BYTE PTR [eax+0x7],ch
  413a8a:	cmc    
  413a8b:	test   BYTE PTR [eax],al
  413a8d:	(bad)  
  413a8f:	int3   
  413a90:	add    BYTE PTR [eax],al
  413a92:	inc    esi
  413a93:	mov    edi,eax
  413a95:	mov    ecx,0xec00e70b
  413a9a:	dec    DWORD PTR [esp+eiz*8]
  413a9d:	clc    
  413a9e:	nop
  413a9f:	dec    esp
  413aa0:	loopne 0x413b0c
  413aa2:	int3   
  413aa3:	mov    edx,DWORD PTR [ebp-0x15]
  413aa6:	mov    ecx,DWORD PTR [edi+ebp*1]
  413aa9:	test   ch,ah
  413aab:	fadd   QWORD PTR [ecx]
  413aad:	push   ebp
  413aae:	mov    esp,ecx
  413ab0:	aas    
  413ab1:	mov    eax,eax
  413ab3:	adc    eax,0x1000075
  413ab8:	jne    0x413aba
  413aba:	mov    edi,eax
  413abc:	fcomip st,st(2)
  413abe:	test   al,0x28
  413ac0:	lea    eax,[ebx]
  413ac2:	adc    BYTE PTR [ebp+0x6e],dl
  413ac5:	adc    BYTE PTR [ecx+0xf8b45fa],bl
  413acb:	add    BYTE PTR [eax+ecx*1],al
  413ace:	mov    eax,DWORD PTR [eax]
  413ad0:	loopne 0x413aeb
  413ad2:	inc    esp
  413ad3:	jmp    0x54d1:0x74c0ff4d
  413ada:	mov    ah,0x9f
  413adc:	add    ah,cl
  413ade:	int3   
  413adf:	or     al,0x8b
  413ae1:	add    BYTE PTR [ecx],al
  413ae3:	int3   
  413ae4:	cdq    
  413ae5:	je     0x413abc
  413ae7:	(bad)  
  413ae8:	adc    BYTE PTR [ebx+0x13e10000],cl
  413aee:	add    eax,0xc08dc0
  413af3:	mov    edi,edi
  413af5:	call   0x3814affa
  413afa:	jmp    0x9acc:0x10c00f1
  413b01:	sbb    ecx,DWORD PTR [edx-0x38ba89]
  413b07:	test   DWORD PTR [ebx-0x4e00ff34],ecx
  413b0d:	icebp  
  413b0e:	mov    DWORD PTR [esp+ecx*8+0x65c00074],0xab7938
  413b19:	dec    ebp
  413b1a:	mov    DWORD PTR [eax],eax
  413b1c:	or     al,0xcc
  413b1e:	add    eax,eax
  413b20:	pusha  
  413b21:	jge    0x413b07
  413b23:	push   eax
  413b24:	add    BYTE PTR [eax],al
  413b26:	add    BYTE PTR [ebp-0x1a],al
  413b29:	ror    al,0x3f
  413b2c:	mov    DWORD PTR [edx+0x4d],ebp
  413b2f:	in     al,dx
  413b30:	int3   
  413b31:	inc    ebp
  413b32:	add    DWORD PTR [eax],ecx
  413b34:	shl    DWORD PTR [eax-0x7239d6],cl
  413b3a:	(bad)  
  413b3b:	inc    DWORD PTR [ebp+0x74953e91]
  413b41:	jne    0x413b0f
  413b43:	mov    eax,DWORD PTR [eax]
  413b45:	or     ah,cl
  413b47:	add    DWORD PTR [eax+0xf0618f],0xffffff8b
  413b4e:	mov    edi,edi
  413b50:	ret    
  413b51:	cmp    BYTE PTR [eax+edi*1],ah
  413b54:	xchg   ebp,eax
  413b55:	adc    DWORD PTR [eax],0xffffff89
  413b58:	(bad)  
  413b59:	xchg   edx,eax
  413b5a:	mov    esi,0xe0305d
  413b5f:	add    BYTE PTR [ebx+0x754583],al
  413b65:	mov    dh,0xfc
  413b67:	stos   BYTE PTR es:[edi],al
  413b68:	cmp    eax,0x89cc
  413b6d:	loop   0x413b2c
  413b6f:	scas   eax,DWORD PTR es:[edi]
  413b70:	push   esp
  413b71:	(bad)  
  413b72:	or     al,0x83
  413b74:	je     0x413b01
  413b76:	or     esp,0x1
  413b79:	sbb    al,0xca
  413b7b:	cmp    dl,BYTE PTR ds:0xc0550174
  413b81:	and    cl,dh
  413b83:	out    0x8c,eax
  413b85:	int3   
  413b86:	mov    DWORD PTR [eax],eax
  413b88:	dec    DWORD PTR [ecx-0xaff728b]
  413b8e:	add    esi,esi
  413b90:	adc    eax,DWORD PTR [ebp-0x34]
  413b93:	add    DWORD PTR [eax],eax
  413b95:	fs xor eax,0xebcc9d2a
  413b9b:	add    BYTE PTR [ebx-0x74ba3301],al
  413ba1:	std    
  413ba2:	aas    
  413ba3:	int3   
  413ba4:	lods   eax,DWORD PTR ds:[esi]
  413ba5:	jae    0x5c7a0877
  413bab:	push   0xffffff95
  413bad:	int3   
  413bae:	add    BYTE PTR [eax],al
  413bb0:	add    BYTE PTR [ebp-0x3b33ff75],al
  413bb6:	mov    esi,0xa78b
  413bbb:	int3   
  413bbc:	call   FWORD PTR [eax]
  413bbe:	cs in  eax,dx
  413bc0:	pushf  
  413bc1:	int3   
  413bc2:	mov    eax,DWORD PTR [ebp+0x8b89ec]
  413bc8:	sar    ah,0xc7
  413bcb:	mov    ebx,0x748b8b3b
  413bd0:	dec    DWORD PTR [ebp+0x101dfbb8]
  413bd6:	add    al,0x0
  413bd8:	add    BYTE PTR [eax],al
  413bda:	dec    ebp
  413bdb:	adc    BYTE PTR [ebx+0x1513d252],cl
  413be1:	dec    esp
  413be3:	adc    BYTE PTR [eax],al
  413be5:	cmp    BYTE PTR [edx],ah
  413be7:	sub    dh,BYTE PTR [edx+0xc75cc8b]
  413bed:	add    BYTE PTR [ebx-0xff322ff],al
  413bf3:	inc    ecx
  413bf4:	mov    al,0xff
  413bf6:	je     0x413bb8
  413bf8:	add    BYTE PTR [ebp+0x60],bh
  413bfb:	mov    esp,0x8b8bccc9
  413c00:	je     0x413c02
  413c02:	mov    eax,DWORD PTR [ebx-0x98be800]
  413c08:	loope  0x413b95
  413c0a:	add    BYTE PTR [ecx],al
  413c0c:	add    ch,bh
  413c0e:	mov    DWORD PTR [ebx],esi
  413c10:	hlt    
  413c11:	inc    ebp
  413c12:	add    DWORD PTR [ebp+0x0],edx
  413c15:	mov    eax,DWORD PTR [ecx]
  413c17:	int3   
  413c18:	add    DWORD PTR [esi],eax
  413c1a:	pushf  
  413c1b:	into   
  413c1c:	or     DWORD PTR [eax],eax
  413c1e:	or     BYTE PTR [ebx-0x66fff78c],cl
  413c24:	mov    eax,0x5d008975
  413c29:	int3   
  413c2a:	int3   
  413c2b:	fucomp st(0)
  413c2d:	xor    DWORD PTR [ebp-0x3800bfeb],ecx
  413c33:	mov    eax,DWORD PTR [eax]
  413c35:	stc    
  413c36:	push   0x458543b3
  413c3b:	int3   
  413c3c:	je     0x413bc9
  413c3e:	add    BYTE PTR [eax],al
  413c40:	test   DWORD PTR ds:0xdd0ddc1e,esi
  413c46:	or     DWORD PTR [ebp+0x0],0x46
  413c4a:	(bad)  
  413c4b:	or     eax,0x45005598
  413c50:	xor    ebp,esp
  413c52:	mov    edi,edi
  413c54:	mov    eax,DWORD PTR [eax]
  413c56:	loopne 0x413c24
  413c58:	lea    eax,[ebp-0x2d8bbacd]
  413c5e:	lods   eax,DWORD PTR ds:[esi]
  413c5f:	cmp    al,0x54
  413c61:	add    BYTE PTR [eax],al
  413c63:	mov    DWORD PTR [eax],eax
  413c65:	push   esi
  413c66:	dec    esp
  413c68:	and    DWORD PTR [ebp-0x74d4d526],0xffffff8b
  413c6f:	push   ebp
  413c70:	add    bh,ch
  413c72:	scas   al,BYTE PTR es:[edi]
  413c73:	add    BYTE PTR [esi+0x1],bh
  413c76:	adc    eax,0x558b008b
  413c7b:	or     ah,cl
  413c7d:	pop    ebp
  413c7e:	cmc    
  413c7f:	ror    bl,1
  413c81:	call   0x1144c586
  413c86:	scas   eax,DWORD PTR es:[edi]
  413c87:	xchg   esp,eax
  413c88:	dec    edx
  413c89:	int3   
  413c8a:	add    DWORD PTR [esi+0xf],0xffffffff
  413c8e:	je     0x413c90
  413c90:	dec    ebp
  413c91:	jp     0x413c94
  413c93:	mov    esp,0x83850c73
  413c98:	mov    esp,DWORD PTR [edx+0xe]
  413c9b:	push   esi
  413c9c:	pop    ds
  413c9d:	rol    BYTE PTR [ebx+0x740133c0],0xff
  413ca4:	add    ch,dh
  413ca6:	mov    gs,WORD PTR [ebx+0x56dd8538]
  413cac:	inc    ebp
  413cad:	inc    eax
  413cae:	ja     0x413cf9
  413cb0:	mov    es,WORD PTR [eax]
  413cb2:	int3   
  413cb3:	mov    DWORD PTR [ecx],eax
  413cb5:	mov    eax,DWORD PTR [eax]
  413cb7:	add    BYTE PTR [eax],al
  413cb9:	stos   DWORD PTR es:[edi],eax
  413cba:	inc    esp
  413cbb:	mov    eax,0x8bff60
  413cc0:	jmp    DWORD PTR [edx-0x65]
  413cc3:	sti    
  413cc4:	sbb    ecx,DWORD PTR [ebx-0x74007c75]
  413cca:	add    BYTE PTR [ebp-0x75],cl
  413ccd:	call   0x8571547f
  413cd2:	mov    ecx,DWORD PTR [ecx-0x33649d75]
  413cd8:	mov    ecx,0x8838b01
  413cdd:	push   esi
  413cde:	dec    DWORD PTR [ebp-0x49c11c00]
  413ce4:	mov    bh,bh
  413ce6:	add    al,0x83
  413ce8:	mov    eax,DWORD PTR [edi]
  413cea:	scas   eax,DWORD PTR es:[edi]
  413ceb:	sar    DWORD PTR [edi],cl
  413ced:	add    BYTE PTR [eax],cl
  413cef:	mov    DWORD PTR [eax],eax
  413cf1:	in     al,dx
  413cf2:	(bad)  
  413cf3:	push   DWORD PTR [ebp+0xd]
  413cf6:	lock fwait
  413cf8:	jl     0x413c85
  413cfa:	add    BYTE PTR [eax],cl
  413cfc:	(bad)  
  413cfd:	cmp    BYTE PTR ds:0xcc4dafbd,ah
  413d03:	je     0x413d05
  413d05:	mov    ecx,esp
  413d07:	add    al,0xff
  413d09:	add    BYTE PTR [edi],ch
  413d0b:	xor    BYTE PTR [edi],bh
  413d0d:	add    BYTE PTR [ebx-0x3cf23fbb],cl
  413d13:	sub    eax,0xcccc8b71
  413d18:	dec    esp
  413d1a:	int3   
  413d1b:	add    BYTE PTR [eax],al
  413d1d:	(bad)  
  413d1f:	ss stc 
  413d21:	rcl    BYTE PTR [ebp+0x0],0xf
  413d25:	sbb    cl,BYTE PTR [ecx-0x3374c8f4]
  413d2b:	mov    eax,DWORD PTR [eax]
  413d2d:	add    al,al
  413d2f:	add    DWORD PTR [eax],0x0
  413d32:	cmp    bl,BYTE PTR ds:0xc7ec0039
  413d38:	or     BYTE PTR [ecx-0x74ab8fbf],dl
  413d3e:	add    DWORD PTR [esi+0x0],0xc
  413d42:	add    BYTE PTR [eax],al
  413d44:	add    BYTE PTR [ebx-0x337e5013],dl
  413d4a:	push   eax
  413d4b:	or     BYTE PTR [edx+0x5e],ch
  413d4e:	jae    0x413da2
  413d50:	xchg   ebp,eax
  413d51:	add    ah,cl
  413d53:	dec    DWORD PTR [ebx-0x33f7f37b]
  413d59:	repnz sbb dl,BYTE PTR [ecx+0x5]
  413d5d:	int3   
  413d5e:	add    BYTE PTR [ecx],al
  413d60:	je     0x413d3c
  413d62:	pop    esi
  413d63:	in     eax,0x27
  413d65:	inc    DWORD PTR [ecx]
  413d67:	int3   
  413d68:	add    DWORD PTR [ecx],eax
  413d6a:	add    BYTE PTR [ebp-0x34],al
  413d6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d6e:	fdivp  st(4),st
  413d70:	fdiv   st(7),st
  413d72:	test   DWORD PTR [ebx+0x76406e89],ecx
  413d78:	dec    edx
  413d79:	int3   
  413d7a:	adc    eax,0x5dcc00ff
  413d7f:	push   ebp
  413d80:	inc    esp
  413d82:	sahf   
  413d83:	test   DWORD PTR [edx-0x74ffff18],0xc3f35701
  413d8d:	adc    BYTE PTR [esi+0x0],al
  413d90:	jnp    0x760d3e1b
  413d96:	fild   QWORD PTR [ebx-0x7cffffdc]
  413d9c:	add    al,0x4a
  413d9e:	mov    WORD PTR [edi],cs
  413da0:	cmp    edi,0x0
  413da3:	add    DWORD PTR [ebx+0x8b0115],ecx
  413da9:	inc    ebx
  413daa:	dec    DWORD PTR [edi]
  413dac:	into   
  413dad:	or     DWORD PTR [ebx+0x7f08ec8b],0xffffffac
  413db4:	lods   eax,DWORD PTR ds:[esi]
  413db5:	add    edx,DWORD PTR [ebp+0x0]
  413db8:	add    BYTE PTR [esi-0x7d],al
  413dbb:	call   DWORD PTR [eax]
  413dbd:	sbb    eax,0x45f0bc19
  413dc2:	mov    DWORD PTR [esi-0x7b],edx
  413dc5:	fdivp  st(4),st
  413dc7:	inc    edi
  413dc8:	push   es
  413dc9:	int3   
  413dca:	inc    ebp
  413dcb:	add    BYTE PTR [ecx+0x56008b83],cl
  413dd1:	push   0x157e8e75
  413dd6:	add    BYTE PTR [ebp-0x23a20f01],al
  413ddc:	lock dec ebp
  413dde:	add    edi,edi
  413de0:	add    DWORD PTR [esi+0x0],0xffffff89
  413de4:	add    BYTE PTR [edi+0x37],al
  413de7:	add    BYTE PTR [esi-0x40],ah
  413dea:	add    DWORD PTR ds:0xc54c3ff,edx
  413df0:	jbe    0x413e49
  413df2:	mov    DWORD PTR [ebx+0x4ccd8501],eax
  413df8:	inc    eax
  413df9:	mov    eax,DWORD PTR gs:[eax]
  413dfc:	or     al,0x83
  413dfe:	mov    ecx,DWORD PTR [eax]
  413e00:	add    BYTE PTR ds:0x3361d915,dl
  413e06:	or     BYTE PTR [ebx-0x981fb01],cl
  413e0c:	test   DWORD PTR ds:0x740101cc,ebp
  413e12:	mov    eax,DWORD PTR [eax]
  413e14:	inc    ebp
  413e15:	or     BYTE PTR [edx],cl
  413e17:	aam    0x78
  413e19:	retf   0xc0
  413e1c:	mov    DWORD PTR [eax],eax
  413e1e:	inc    edi
  413e1f:	inc    edi
  413e20:	mov    ebp,0x55010065
  413e25:	mov    ecx,esp
  413e27:	add    eax,DWORD PTR [eax]
  413e29:	or     BYTE PTR [edi-0x54],dl
  413e2c:	inc    ecx
  413e2d:	sub    al,BYTE PTR [eax]
  413e2f:	in     al,dx
  413e30:	adc    eax,0x656065cc
  413e35:	xor    ecx,DWORD PTR [ebx+0xc080c]
  413e3b:	call   DWORD PTR [eax+0x0]
  413e3e:	pop    esi
  413e3f:	mov    eax,DWORD PTR [ebp-0x7afffeda]
  413e45:	add    dh,bl
  413e47:	popf   
  413e48:	jbe    0x413dcd
  413e4a:	test   DWORD PTR [ebp+0x7500],eax
  413e50:	je     0x413e32
  413e52:	xor    dl,ah
  413e54:	clc    
  413e55:	mov    dl,0xec
  413e57:	mov    eax,DWORD PTR [ebp+0x29608e00]
  413e5d:	add    BYTE PTR [bp+di+0x0],al
  413e62:	sbb    DWORD PTR [ebp+0x8],0x8
  413e66:	add    eax,0xc79860
  413e6b:	or     BYTE PTR [eax+edx*2],cl
  413e6e:	dec    edi
  413e6f:	call   0xb55daf
  413e74:	lea    eax,[eax]
  413e76:	add    BYTE PTR [ebp+0x0],al
  413e79:	push   DWORD PTR [ecx-0x22288a66]
  413e7f:	in     al,dx
  413e80:	call   0xc683d695
  413e85:	mov    ah,0x8b
  413e87:	add    bh,bh
  413e89:	in     al,dx
  413e8a:	mov    ebp,eax
  413e8c:	add    BYTE PTR [eax],al
  413e8e:	xchg   ebx,eax
  413e8f:	pop    edi
  413e90:	push   0x5d86
  413e95:	mov    edx,DWORD PTR [edx-0x2e]
  413e98:	cld    
  413e99:	ror    esp,cl
  413e9b:	int3   
  413e9c:	ud0    ecx,esp
  413e9f:	add    BYTE PTR [eax],al
  413ea1:	ror    al,0x56
  413ea4:	int    0xba
  413ea6:	or     al,0x8b
  413ea8:	add    BYTE PTR [ebp+0xafb4ea8],al
  413eae:	int3   
  413eaf:	add    BYTE PTR [eax],al
  413eb1:	adc    eax,0x33004500
  413eb6:	push   0x461cf96d
  413ebb:	jne    0x413ebd
  413ebd:	add    al,0xf
  413ebf:	data16 add BYTE PTR [esi+0x48b5601],dl
  413ec6:	je     0x413ec8
  413ec8:	rol    BYTE PTR [eax],0xa3
  413ecb:	mov    gs,WORD PTR [eax]
  413ecd:	add    BYTE PTR ds:[eax],al
  413ed0:	inc    esi
  413ed1:	push   ebp
  413ed2:	std    
  413ed3:	vdivps xmm0,xmm6,XMMWORD PTR [eax]
  413ed7:	add    DWORD PTR [ebp+0x0],esi
  413eda:	push   ebp
  413edb:	add    BYTE PTR [ebx+0x19e3a700],cl
  413ee1:	dec    esp
  413ee2:	mov    ecx,esp
  413ee4:	int3   
  413ee5:	cmp    ecx,0xffffffa1
  413ee8:	mov    DWORD PTR [ebx+0x0],edi
  413eeb:	inc    DWORD PTR [eax]
  413eed:	inc    esi
  413eee:	int3   
  413eef:	dec    ebp
  413ef0:	int3   
  413ef1:	push   esi
  413ef2:	sbb    al,0x27
  413ef4:	dec    eax
  413ef5:	fmul   DWORD PTR [eax]
  413ef7:	add    bl,ch
  413ef9:	add    DWORD PTR [ebx-0x5e],edx
  413efc:	lea    esi,[edx-0x34]
  413eff:	je     0x413f01
  413f01:	push   esi
  413f02:	mov    DWORD PTR [eax+eiz*8],eax
  413f05:	add    DWORD PTR [ecx-0xaf3f67],edi
  413f0b:	int3   
  413f0c:	int3   
  413f0d:	int3   
  413f0e:	(bad)  
  413f0f:	ins    BYTE PTR es:[edi],dx
  413f10:	call   0xff8b:0x74ccd5
  413f17:	fnsave [ebp-0x34]
  413f1a:	fwait
  413f1b:	push   esi
  413f1c:	(bad)  
  413f1d:	jp     0x413ea8
  413f1f:	inc    ebp
  413f20:	push   0x10
  413f22:	mov    WORD PTR [edi-0x18],cs
  413f25:	dec    esp
  413f26:	or     BYTE PTR [ebp+0x0],dl
  413f29:	add    BYTE PTR [eax],al
  413f2b:	add    DWORD PTR [edx-0x7d],ebp
  413f2e:	(bad)  
  413f2f:	out    0x6b,eax
  413f31:	mov    ebx,0xccc00ec
  413f36:	shl    DWORD PTR [edx-0x70],1
  413f39:	ret    0x898b
  413f3c:	(bad)  
  413f3e:	jne    0x413f85
  413f40:	mov    DWORD PTR [edi+ecx*2],eax
  413f43:	(bad)  
  413f44:	imul   eax
  413f46:	mov    ecx,esp
  413f48:	add    BYTE PTR [ecx+0x76b7afaf],cl
  413f4e:	xor    ecx,DWORD PTR [ebx+0x56ff45cc]
  413f54:	inc    DWORD PTR [esi-0xd]
  413f57:	sahf   
  413f58:	inc    ebx
  413f59:	dec    esp
  413f5a:	mov    ecx,esp
  413f5c:	push   DWORD PTR [ebx+edi*2-0x69]
  413f60:	aas    
  413f61:	mov    ebp,0x45ff8500
  413f66:	inc    DWORD PTR [eax]
  413f68:	or     al,0xcc
  413f6a:	cs jmp 0x100:0x8bcad2
  413f72:	rcr    BYTE PTR [edx+0xcc2376],cl
  413f78:	je     0x413fee
  413f7a:	je     0x413f7c
  413f7c:	add    DWORD PTR ds:0x4b65abdc,edx
  413f82:	adc    eax,0x8ee84d00
  413f87:	mov    bh,0xa9
  413f89:	mov    edi,0x4ffc75d
  413f8e:	push   0xffffffcc
  413f90:	mov    eax,DWORD PTR [esi-0x31]
  413f93:	loope  0x413f83
  413f95:	mov    esi,0x4850c56
  413f9a:	dec    ebp
  413f9b:	rol    DWORD PTR [ecx-0x22fe1f4b],1
  413fa1:	ror    BYTE PTR [ebx-0x21f333aa],0x17
  413fa8:	test   BYTE PTR [edi],0xff
  413fab:	add    DWORD PTR [eax],eax
  413fad:	push   ebp
  413fae:	fcomp  st(2)
  413fb0:	je     0x413f7a
  413fb2:	mov    ecx,esp
  413fb4:	push   0xffffff89
  413fb6:	mov    edx,DWORD PTR [eax]
  413fb8:	mov    eax,DWORD PTR [ecx]
  413fba:	mov    ah,0xda
  413fbc:	push   esp
  413fbd:	cmp    bh,0x8b
  413fc0:	test   DWORD PTR [ebp-0x66],ebx
  413fc3:	push   0x5b
  413fc5:	loop   0x413fca
  413fc7:	call   DWORD PTR [eax]
  413fc9:	add    al,ch
  413fcb:	int3   
  413fcc:	mov    ecx,DWORD PTR [ebp-0x64b20e55]
  413fd2:	add    BYTE PTR [eax],al
  413fd4:	adc    eax,0x62587701
  413fd9:	pop    edx
  413fda:	or     ah,cl
  413fdc:	add    BYTE PTR [eax+0x15],dl
  413fdf:	je     0x413f6c
  413fe1:	add    BYTE PTR ds:0x8bcacb7a,al
  413fe7:	lea    eax,[eax]
  413fe9:	fst    QWORD PTR [edi+ebp*2]
  413fec:	jbe    0x414016
  413fee:	dec    DWORD PTR [ecx+0xcc03eb]
  413ff4:	pop    ebp
  413ff5:	add    dh,dl
  413ff7:	jb     0x413fed
  413ff9:	dec    esi
  413ffa:	add    BYTE PTR [eax],al
  413ffc:	add    BYTE PTR [eax],al
  413ffe:	push   edx
  413fff:	repz scas al,BYTE PTR es:[edi]
  414001:	inc    esi
  414002:	or     DWORD PTR [ebp+0x758b00],0xffffff8b
  414009:	add    BYTE PTR [edx+0x81a588],dl
  41400f:	add    BYTE PTR [esi+0x0],al
  414012:	ins    DWORD PTR es:[edi],dx
  414013:	dec    ecx
  414014:	call   0x474:0xcc758bc3
  41401b:	add    BYTE PTR [eax],al
  41401d:	add    DWORD PTR [edx+0x563b9a65],edx
  414023:	add    BYTE PTR [eax],al
  414025:	add    BYTE PTR [ecx],dh
  414027:	leave  
  414028:	retf   0x894e
  41402b:	int3   
  41402c:	int3   
  41402d:	adc    eax,0x8b8d0100
  414032:	aad    0x94
  414034:	ja     0x413fd8
  414036:	mov    eax,DWORD PTR [ecx]
  414038:	add    DWORD PTR [ebp+0x2b],0x21
  41403c:	aam    0x3e
  41403e:	mov    eax,DWORD PTR [eax]
  414040:	mov    eax,DWORD PTR [esi+0x55]
  414043:	add    BYTE PTR [eax],dl
  414045:	add    dh,bl
  414047:	stos   DWORD PTR es:[edi],eax
  414048:	sti    
  414049:	adc    BYTE PTR [ecx],al
  41404b:	inc    ebp
  41404c:	adc    eax,0x83c15485
  414051:	outs   dx,DWORD PTR ds:[esi]
  414052:	add    BYTE PTR [eax],al
  414054:	pop    ebp
  414055:	add    DWORD PTR [eax],0x50
  414058:	add    eax,ebp
  41405a:	(bad)  
  41405b:	and    al,0x7a
  41405d:	mov    esp,0x0
  414062:	arpl   WORD PTR [edx+edi*8-0x7233ff85],di
  414069:	add    BYTE PTR [ebx+0x590ccc8b],cl
  41406f:	js     0x41405b
  414071:	and    bh,bh
  414073:	add    BYTE PTR [ecx],al
  414075:	add    dl,dh
  414077:	add    dl,BYTE PTR [esi+0x89ff96]
  41407d:	(bad)  
  41407e:	push   DWORD PTR [ebp-0x77]
  414081:	mov    eax,ebx
  414083:	push   ebp
  414084:	mov    ebp,esp
  414086:	sub    esp,0x24
  414089:	push   ebx
  41408a:	push   esi
  41408b:	push   edi
  41408c:	lea    eax,[ebp-0x24]
  41408f:	push   eax
  414090:	call   DWORD PTR ds:0x418060
  414096:	lea    eax,[ebp-0x24]
  414099:	push   eax
  41409a:	call   DWORD PTR ds:0x418034
  4140a0:	lea    eax,[ebp-0x8]
  4140a3:	push   eax
  4140a4:	push   0x1
  4140a6:	call   DWORD PTR ds:0x4180c4
  4140ac:	mov    eax,DWORD PTR [ebp-0x8]
  4140af:	mov    ecx,DWORD PTR [eax]
  4140b1:	lea    edx,[ebp-0xc]
  4140b4:	push   edx
  4140b5:	push   0x4181e0
  4140ba:	push   eax
  4140bb:	call   DWORD PTR [ecx]
  4140bd:	push   0x3
  4140bf:	pop    esi
  4140c0:	xor    ebx,ebx
  4140c2:	push   ebx
  4140c3:	push   0x8
  4140c5:	push   ebx
  4140c6:	mov    ds:0x4194b8,eax
  4140cb:	mov    DWORD PTR ds:0x419068,0x10
  4140d5:	mov    edi,esi
  4140d7:	call   DWORD PTR ds:0x418098
  4140dd:	xor    eax,eax
  4140df:	mov    ecx,DWORD PTR [ebp+0x8]
  4140e2:	mov    ecx,DWORD PTR [ecx+eax*4]
  4140e5:	sub    ecx,DWORD PTR ds:0x4194b8
  4140eb:	mov    edx,DWORD PTR ds:0x41943c
  4140f1:	sub    ecx,0x66b5e4c8
  4140f7:	mov    DWORD PTR [edx],ecx
  4140f9:	add    DWORD PTR ds:0x41943c,0x4
  414100:	xor    ecx,ecx
  414102:	cmp    edi,esi
  414104:	setne  cl
  414107:	lea    edi,[ecx+0x2]
  41410a:	add    eax,edi
  41410c:	cmp    eax,0xde
  414111:	jb     0x4140df
  414113:	push   ebx
  414114:	push   esi
  414115:	push   ebx
  414116:	mov    edi,esi
  414118:	call   DWORD PTR ds:0x418088
  41411e:	mov    eax,ds:0x4193e4
  414123:	mov    edx,eax
  414125:	shr    edx,1
  414127:	lea    eax,[edx+eax*2]
  41412a:	xor    ecx,ecx
  41412c:	test   eax,eax
  41412e:	je     0x41416e
  414130:	mov    eax,ds:0x419464
  414135:	mov    eax,DWORD PTR [eax+ecx*4]
  414138:	sub    eax,DWORD PTR ds:0x4194b8
  41413e:	mov    edx,DWORD PTR ds:0x419388
  414144:	add    eax,0x993e873
  414149:	mov    DWORD PTR [edx],eax
  41414b:	add    DWORD PTR ds:0x419388,0x4
  414152:	xor    eax,eax
  414154:	cmp    edi,esi
  414156:	setne  al
  414159:	lea    edi,[eax+0x2]
  41415c:	mov    eax,ds:0x4193e4
  414161:	mov    edx,eax
  414163:	shr    edx,1
  414165:	add    ecx,edi
  414167:	lea    eax,[edx+eax*2]
  41416a:	cmp    ecx,eax
  41416c:	jb     0x414130
  41416e:	mov    edx,DWORD PTR [ebp+0xc]
  414171:	mov    ecx,DWORD PTR ds:0x419388
  414177:	mov    edi,edx
  414179:	shr    edi,1
  41417b:	lea    edi,[edi+edx*2]
  41417e:	xor    eax,eax
  414180:	mov    DWORD PTR [ebp-0x4],esi
  414183:	cmp    edi,ebx
  414185:	jbe    0x4141c7
  414187:	mov    ebx,DWORD PTR ds:0x419384
  41418d:	mov    ebx,DWORD PTR [ebx+eax*4]
  414190:	xor    edx,edx
  414192:	cmp    DWORD PTR ds:0x4194b8,0x80004002
  41419c:	setne  dl
  41419f:	dec    edx
  4141a0:	and    edx,0x2a55dc8d
  4141a6:	add    edx,0x6fed
  4141ac:	sub    ebx,edx
  4141ae:	xor    edx,edx
  4141b0:	mov    DWORD PTR [ecx],ebx
  4141b2:	add    ecx,0x4
  4141b5:	cmp    DWORD PTR [ebp-0x4],esi
  4141b8:	setne  dl
  4141bb:	add    edx,0x2
  4141be:	add    eax,edx
  4141c0:	mov    DWORD PTR [ebp-0x4],edx
  4141c3:	cmp    eax,edi
  4141c5:	jb     0x414187
  4141c7:	mov    ebx,ecx
  4141c9:	mov    DWORD PTR [ebp-0x4],esi
  4141cc:	call   DWORD PTR ds:0x418054
  4141d2:	xor    edi,edi
  4141d4:	push   0xfffffff8
  4141d6:	push   0x894d
  4141db:	call   DWORD PTR ds:0x418094
  4141e1:	mov    eax,ds:0x41949c
  4141e6:	mov    eax,DWORD PTR [eax+edi*4]
  4141e9:	sub    eax,DWORD PTR ds:0x4194b8
  4141ef:	push   0xcd
  4141f4:	add    eax,0x63445cc9
  4141f9:	push   0x0
  4141fb:	mov    DWORD PTR [ebx],eax
  4141fd:	call   DWORD PTR ds:0x4180b0
  414203:	xor    eax,eax
  414205:	add    ebx,0x4
  414208:	cmp    DWORD PTR [ebp-0x4],esi
  41420b:	setne  al
  41420e:	add    eax,0x2
  414211:	add    edi,eax
  414213:	mov    DWORD PTR [ebp-0x4],eax
  414216:	cmp    edi,0xe3
  41421c:	jb     0x4141d4
  41421e:	mov    DWORD PTR [ebp-0x4],esi
  414221:	xor    edi,edi
  414223:	call   DWORD PTR ds:0x41803c
  414229:	mov    ecx,DWORD PTR ds:0x4193e8
  41422f:	xor    eax,eax
  414231:	cmp    DWORD PTR ds:0x4194b8,0x80004002
  41423b:	setne  al
  41423e:	dec    eax
  41423f:	and    eax,0xf6988c68
  414244:	add    eax,0x6816
  414249:	add    eax,DWORD PTR [ecx+edi*4]
  41424c:	mov    DWORD PTR [ebx],eax
  41424e:	add    ebx,0x4
  414251:	call   DWORD PTR ds:0x41804c
  414257:	xor    eax,eax
  414259:	cmp    DWORD PTR [ebp-0x4],esi
  41425c:	setne  al
  41425f:	add    eax,0x2
  414262:	add    edi,eax
  414264:	mov    DWORD PTR [ebp-0x4],eax
  414267:	cmp    edi,0xdc
  41426d:	jb     0x414223
  41426f:	mov    edi,esi
  414271:	xor    eax,eax
  414273:	mov    ecx,DWORD PTR ds:0x4194e0
  414279:	mov    ecx,DWORD PTR [ecx+eax*4]
  41427c:	mov    edx,DWORD PTR ds:0x4194b8
  414282:	lea    ecx,[ecx+edx*1+0x5d91b32d]
  414289:	mov    DWORD PTR [ebx],ecx
  41428b:	xor    ecx,ecx
  41428d:	add    ebx,0x4
  414290:	cmp    edi,esi
  414292:	setne  cl
  414295:	lea    edi,[ecx+0x2]
  414298:	add    eax,edi
  41429a:	cmp    eax,0xe1
  41429f:	jb     0x414273
  4142a1:	mov    DWORD PTR ds:0x41914c,0xc
  4142ab:	mov    edi,esi
  4142ad:	xor    eax,eax
  4142af:	mov    ecx,DWORD PTR ds:0x419368
  4142b5:	mov    ecx,DWORD PTR [ecx+eax*4]
  4142b8:	sub    ecx,DWORD PTR ds:0x4194b8
  4142be:	add    ecx,0x79baff23
  4142c4:	mov    DWORD PTR [ebx],ecx
  4142c6:	xor    ecx,ecx
  4142c8:	add    ebx,0x4
  4142cb:	cmp    edi,esi
  4142cd:	setne  cl
  4142d0:	lea    edi,[ecx+0x2]
  4142d3:	add    eax,edi
  4142d5:	cmp    eax,0xa5
  4142da:	jb     0x4142af
  4142dc:	lea    eax,[ebp-0x24]
  4142df:	push   eax
  4142e0:	call   DWORD PTR ds:0x418040
  4142e6:	lea    eax,[ebp-0x24]
  4142e9:	push   eax
  4142ea:	call   DWORD PTR ds:0x418044
  4142f0:	pop    edi
  4142f1:	pop    esi
  4142f2:	pop    ebx
  4142f3:	leave  
  4142f4:	ret    
  4142f5:	push   eax
  4142f6:	es jmp 0x9b74:0xcc468be8
  4142fe:	call   0x8b514b0f
  414303:	add    BYTE PTR [eax],al
  414305:	add    DWORD PTR [edx+0x0],ebp
  414308:	add    DWORD PTR [ebp-0x50],0xffffff8d
  41430c:	call   0xa9c4:0x4898bec
  414313:	xchg   DWORD PTR [esi-0x22effffd],eax
  414319:	mov    eax,DWORD PTR [eax]
  41431b:	int3   
  41431c:	add    BYTE PTR [edi-0x22],cl
  41431f:	sub    eax,0x8bcc8ba2
  414324:	add    BYTE PTR [edx-0x7],ch
  414327:	or     DWORD PTR [ebx+0xcccc00],edx
  41432d:	mov    eax,DWORD PTR [ebp-0x4177f3ba]
  414333:	push   ecx
  414334:	retf   0xff00
  414337:	int3   
  414338:	inc    esi
  414339:	cmp    ch,al
  41433b:	and    DWORD PTR [ebx+ecx*4],esp
  41433e:	inc    DWORD PTR [eax]
  414340:	je     0x414341
  414342:	add    BYTE PTR [ebx+ecx*4-0x4a],dh
  414346:	es jmp 0xf42538a
  41434c:	push   ebp
  41434d:	(bad)  
  41434e:	std    
  41434f:	not    al
  414351:	add    BYTE PTR [ecx],al
  414353:	int3   
  414354:	add    BYTE PTR [eax],al
  414356:	(bad)  
  414357:	(bad)  
  414358:	mov    edx,ecx
  41435a:	sub    DWORD PTR [ecx+0x7b],ecx
  41435d:	mov    DWORD PTR [eax],eax
  41435f:	add    eax,DWORD PTR [eax]
  414361:	stos   DWORD PTR es:[edi],eax
  414362:	add    ebp,edi
  414364:	add    ebp,ebx
  414366:	add    BYTE PTR [esi+0x74],al
  414369:	call   DWORD PTR ds:0x162d0408
  41436f:	stc    
  414370:	pop    es
  414371:	inc    ebp
  414372:	add    ch,bl
  414374:	push   esp
  414376:	mov    edi,0xcc0c6296
  41437b:	int3   
  41437c:	je     0x41437e
  41437e:	mov    eax,DWORD PTR [ebp+0x38abec8b]
  414384:	pop    esi
  414385:	jne    0x414396
  414387:	pop    ebp
  414388:	mov    eax,DWORD PTR [esi+0x53]
  41438b:	mov    edx,0x838b1d
  414390:	mov    ebx,ebp
  414392:	add    BYTE PTR [eax],dl
  414394:	call   FWORD PTR [eax+0x50]
  414397:	add    DWORD PTR [eax+0x8b0008],edi
  41439d:	int    0xed
  41439f:	les    ecx,FWORD PTR [ebx-0x75]
  4143a2:	mov    ebx,ebp
  4143a4:	mov    ecx,esp
  4143a6:	je     0x41441c
  4143a8:	int3   
  4143a9:	push   ss
  4143aa:	(bad)  
  4143ab:	aad    0xdc
  4143ad:	int3   
  4143ae:	mov    DWORD PTR [eax],ecx
  4143b0:	or     BYTE PTR [ebx+0x43],al
  4143b3:	sub    ah,BYTE PTR [ebp+0x8]
  4143b6:	add    BYTE PTR [eax],al
  4143b8:	add    bh,bh
  4143ba:	push   ebp
  4143bb:	push   0x0
  4143bd:	mov    BYTE PTR [ebp+0x7400a5f5],al
  4143c3:	inc    ebp
  4143c4:	loopne 0x41440b
  4143c6:	inc    ecx
  4143c7:	push   0x1cc56c6
  4143cc:	add    BYTE PTR [ebp+0x0],bl
  4143cf:	add    DWORD PTR [ecx+ecx*4],eax
  4143d2:	outs   dx,BYTE PTR ds:[esi]
  4143d3:	outs   dx,DWORD PTR ds:[esi]
  4143d4:	pop    ds
  4143d5:	call   0xf442b927
  4143da:	ins    BYTE PTR es:[edi],dx
  4143db:	mov    edx,0x8b008b1c
  4143e0:	mov    eax,DWORD PTR [eax]
  4143e2:	call   0xedef52ea
  4143e7:	sbb    eax,DWORD PTR [ebp+edx*1-0x34]
  4143eb:	lea    eax,[eax]
  4143ed:	(bad)  [edx+edx*2]
  4143f0:	or     BYTE PTR fs:0x46460c00,dl
  4143f7:	lea    ecx,[ecx+0x26598f78]
  4143fd:	adc    BYTE PTR [eax],al
  4143ff:	inc    esi
  414400:	add    al,0x15
  414402:	sub    eax,0x890190be
  414407:	int3   
  414408:	in     al,dx
  414409:	loopne 0x41440c
  41440b:	or     BYTE PTR [ebp-0x1947ebac],al
  414411:	mov    eax,DWORD PTR [eax]
  414413:	in     al,dx
  414414:	rcr    BYTE PTR [eax],0xbf
  414417:	or     DWORD PTR [eax+0x155088b],edi
  41441d:	add    bh,bh
  41441f:	int3   
  414420:	or     ch,ch
  414422:	test   DWORD PTR [esi+0x8bddfb],edi
  414428:	add    bl,cl
  41442a:	fdivrp st(7),st
  41442c:	dec    edx
  41442d:	inc    DWORD PTR [eax]
  41442f:	loopne 0x4143b4
  414431:	dec    DWORD PTR [ebx-0x50517cff]
  414437:	xlat   BYTE PTR ds:[ebx]
  414438:	add    DWORD PTR [eax],0x96508b33
  41443e:	test   al,0x50
  414440:	rol    BYTE PTR [ecx],0x0
  414443:	push   esi
  414444:	mov    ecx,esp
  414446:	inc    ebp
  414447:	adc    eax,0xb93522cc
  41444c:	xchg   esp,eax
  41444d:	dec    ebp
  41444e:	pcmpeqb mm0,QWORD PTR [eax]
  414451:	or     DWORD PTR [esi-0x49],esp
  414454:	sbb    BYTE PTR [esp+ecx*1],cl
  414457:	add    esp,ecx
  414459:	mov    ecx,DWORD PTR [ebx+0x7fd3cc5d]
  41445f:	scas   al,BYTE PTR es:[edi]
  414460:	popf   
  414461:	add    DWORD PTR [eax],edx
  414463:	push   0x0
  414465:	jl     0x4143f3
  414467:	pop    ebp
  414468:	loop   0x41446a
  41446a:	add    al,ah
  41446c:	inc    ebp
  41446d:	mov    ecx,esp
  41446f:	add    BYTE PTR [ebx-0x23d9c177],cl
  414475:	add    BYTE PTR [ecx],al
  414477:	add    BYTE PTR [ecx-0x687bbb23],cl
  41447d:	push   0xffffffc7
  41447f:	mov    edi,edi
  414481:	je     0x41440e
  414483:	add    BYTE PTR [ebx-0x55b8d318],al
  414489:	add    BYTE PTR [eax],al
  41448b:	int3   
  41448c:	shl    BYTE PTR [ebx+0x2f],0x4d
  414490:	adc    DWORD PTR [ebp+0x1ff10],eax
  414496:	rol    BYTE PTR [eax],0x0
  414499:	sbb    DWORD PTR [ebp+0x42],ebp
  41449c:	retf   0x855d
  41449f:	add    esp,ebp
  4144a1:	add    ah,BYTE PTR [ebx+ebp*1-0x33fbf32a]
  4144a8:	adc    BYTE PTR [eax],al
  4144aa:	inc    ebp
  4144ab:	or     BYTE PTR [ecx-0x472d5072],cl
  4144b1:	inc    DWORD PTR [eax+eax*1]
  4144b4:	test   esi,esi
  4144b6:	les    edi,FWORD PTR [edi+0x8d89b5]
  4144bc:	mov    edi,edi
  4144be:	add    DWORD PTR [eax],edx
  4144c0:	add    DWORD PTR [eax],esi
  4144c2:	pop    ss
  4144c3:	jp     0x414461
  4144c5:	shl    BYTE PTR [esp+esi*2+0x0],0x67
  4144ca:	test   cl,bl
  4144cc:	mov    ebp,0x8e0108b
  4144d1:	add    ah,cl
  4144d3:	add    BYTE PTR [eax],al
  4144d5:	adc    BYTE PTR [edx+0x8b0cac],ah
  4144db:	inc    DWORD PTR [eax]
  4144dd:	outs   dx,BYTE PTR ds:[esi]
  4144de:	jb     0xe841ca23
  4144e4:	lea    eax,[esi*2-0x3f94ffff]
  4144eb:	std    
  4144ec:	jp     0x414479
  4144ee:	rol    BYTE PTR [esp+ecx*8],0x7a
  4144f2:	mov    ds:0x75ffdf8c,al
  4144f7:	mov    ebp,DWORD PTR [edx+0x55]
  4144fa:	mov    eax,DWORD PTR [eax]
  4144fc:	pop    ebp
  4144fd:	sar    bh,cl
  4144ff:	or     cl,0xdd
  414502:	mov    edx,DWORD PTR [eax]
  414504:	mov    ebp,DWORD PTR [esi]
  414506:	aaa    
  414507:	pop    edx
  414508:	pop    esi
  414509:	inc    esi
  41450a:	rcl    BYTE PTR ds:0xcc0f0000,0x8b
  414511:	ficomp WORD PTR [eax+0x8bf0ed]
  414517:	add    DWORD PTR [eax],eax
  414519:	stc    
  41451a:	aaa    
  41451b:	fs xor eax,DWORD PTR ds:[ebx]
  41451f:	int3   
  414520:	inc    DWORD PTR [eax]
  414522:	xor    ecx,DWORD PTR [ebp+0x3accf100]
  414528:	and    al,BYTE PTR [ebx]
  41452a:	mov    eax,DWORD PTR [eax]
  41452c:	add    DWORD PTR [ecx],esp
  41452e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41452f:	fcomp  DWORD PTR [ebx+0x1005dcc]
  414535:	xor    eax,DWORD PTR [ebp+0x32ed8bcc]
  41453b:	aas    
  41453c:	mov    esi,0xccff00c0
  414541:	mov    ch,0x32
  414543:	clc    
  414544:	popa   
  414545:	add    BYTE PTR [ebx],al
  414547:	add    BYTE PTR [eax],al
  414549:	add    BYTE PTR [ebx+0x505f8bcc],al
  41454f:	push   edx
  414550:	retf   
  414551:	(bad)  
  414553:	int3   
  414554:	or     BYTE PTR [ecx+0x74e1b5db],ch
  41455a:	add    BYTE PTR [eax],al
  41455c:	add    DWORD PTR [ebx+0x48cc0800],eax
  414562:	mov    ecx,0x8b85ffe7
  414567:	add    ah,cl
  414569:	inc    esi
  41456a:	cmp    BYTE PTR [esi-0x337c7ad5],bh
  414570:	add    al,0x0
  414572:	(bad)  
  414573:	inc    DWORD PTR [eax]
  414575:	xchg   edi,edi
  414577:	cvtps2pd xmm1,QWORD PTR [ecx+0xb1510c0]
  41457e:	add    edx,DWORD PTR [ebp+0x1508b6a]
  414584:	int3   
  414585:	inc    DWORD PTR [eax]
  414587:	add    bh,bh
  414589:	push   eax
  41458a:	sbb    BYTE PTR [eax+0x560823],dh
  414590:	jne    0x414547
  414592:	inc    esp
  414593:	sbb    eax,0x89dd75e5
  414598:	in     al,dx
  414599:	or     ah,cl
  41459b:	add    BYTE PTR [eax],al
  41459d:	cmc    
  41459e:	hlt    
  41459f:	inc    ebx
  4145a0:	jecxz  0x41456e
  4145a2:	mov    eax,DWORD PTR [eax]
  4145a4:	int3   
  4145a5:	ret    
  4145a6:	push   ebp
  4145a7:	mov    ebp,esp
  4145a9:	sub    esp,0x20
  4145ac:	push   esi
  4145ad:	push   edi
  4145ae:	lea    eax,[ebp-0x20]
  4145b1:	push   eax
  4145b2:	call   DWORD PTR ds:0x418060
  4145b8:	lea    eax,[ebp-0x20]
  4145bb:	push   eax
  4145bc:	call   DWORD PTR ds:0x418034
  4145c2:	xor    edi,edi
  4145c4:	push   edi
  4145c5:	push   edi
  4145c6:	push   edi
  4145c7:	call   DWORD PTR ds:0x418038
  4145cd:	lea    eax,[ebp-0x4]
  4145d0:	push   eax
  4145d1:	push   0x1
  4145d3:	call   DWORD PTR ds:0x4180c4
  4145d9:	push   edi
  4145da:	call   DWORD PTR ds:0x4180b8
  4145e0:	mov    eax,DWORD PTR [ebp-0x4]
  4145e3:	mov    ecx,DWORD PTR [eax]
  4145e5:	lea    edx,[ebp-0x8]
  4145e8:	push   edx
  4145e9:	push   0x4181e0
  4145ee:	push   eax
  4145ef:	call   DWORD PTR [ecx]
  4145f1:	push   0x4193ac
  4145f6:	mov    ds:0x4194b8,eax
  4145fb:	call   DWORD PTR ds:0x4180bc
  414601:	mov    edi,DWORD PTR [ebp+0x8]
  414604:	push   0x3
  414606:	pop    esi
  414607:	mov    ecx,esi
  414609:	xor    eax,eax
  41460b:	push   ebx
  41460c:	mov    edx,DWORD PTR ds:0x4194b8
  414612:	mov    ebx,DWORD PTR ds:0x4194d4
  414618:	add    edx,0xe42c79db
  41461e:	xor    edx,DWORD PTR [ebx+eax*4]
  414621:	mov    DWORD PTR [edi],edx
  414623:	xor    edx,edx
  414625:	add    edi,0x4
  414628:	cmp    ecx,esi
  41462a:	setne  dl
  41462d:	lea    ecx,[edx+0x2]
  414630:	add    eax,ecx
  414632:	cmp    eax,0xb6
  414637:	jb     0x41460c
  414639:	mov    ebx,esi
  41463b:	call   DWORD PTR ds:0x41803c
  414641:	xor    eax,eax
  414643:	mov    ecx,DWORD PTR [ebp+0xc]
  414646:	mov    ecx,DWORD PTR [ecx+eax*4]
  414649:	mov    edx,DWORD PTR ds:0x4194b8
  41464f:	lea    ecx,[ecx+edx*1-0x5de7288]
  414656:	mov    DWORD PTR [edi],ecx
  414658:	xor    ecx,ecx
  41465a:	add    edi,0x4
  41465d:	cmp    ebx,esi
  41465f:	setne  cl
  414662:	lea    ebx,[ecx+0x2]
  414665:	add    eax,ebx
  414667:	cmp    eax,0xbb
  41466c:	jb     0x414643
  41466e:	push   0x0
  414670:	push   0x0
  414672:	mov    ebx,esi
  414674:	call   DWORD PTR ds:0x4180c0
  41467a:	mov    edi,DWORD PTR [ebp+0x10]
  41467d:	xor    eax,eax
  41467f:	mov    ecx,DWORD PTR ds:0x419484
  414685:	mov    ecx,DWORD PTR [ecx+eax*4]
  414688:	mov    edx,DWORD PTR ds:0x4194b8
  41468e:	lea    ecx,[ecx+edx*1+0x5ef7ec51]
  414695:	mov    DWORD PTR [edi],ecx
  414697:	xor    ecx,ecx
  414699:	add    edi,0x4
  41469c:	cmp    ebx,esi
  41469e:	setne  cl
  4146a1:	lea    ebx,[ecx+0x2]
  4146a4:	add    eax,ebx
  4146a6:	cmp    eax,0xb9
  4146ab:	jb     0x41467f
  4146ad:	mov    ecx,esi
  4146af:	xor    eax,eax
  4146b1:	pop    ebx
  4146b2:	mov    edx,DWORD PTR ds:0x4194c0
  4146b8:	mov    edx,DWORD PTR [edx+eax*4]
  4146bb:	sub    edx,DWORD PTR ds:0x4194b8
  4146c1:	add    edx,0x3fa1dde0
  4146c7:	mov    DWORD PTR [edi],edx
  4146c9:	xor    edx,edx
  4146cb:	add    edi,0x4
  4146ce:	cmp    ecx,esi
  4146d0:	setne  dl
  4146d3:	lea    ecx,[edx+0x2]
  4146d6:	add    eax,ecx
  4146d8:	cmp    eax,0xc3
  4146dd:	jb     0x4146b2
  4146df:	push   0x4193ac
  4146e4:	call   DWORD PTR ds:0x4180bc
  4146ea:	mov    ecx,esi
  4146ec:	xor    eax,eax
  4146ee:	mov    edx,DWORD PTR ds:0x419400
  4146f4:	mov    edx,DWORD PTR [edx+eax*4]
  4146f7:	sub    edx,DWORD PTR ds:0x4194b8
  4146fd:	add    edx,0x42cbc524
  414703:	mov    DWORD PTR [edi],edx
  414705:	xor    edx,edx
  414707:	add    edi,0x4
  41470a:	cmp    ecx,esi
  41470c:	setne  dl
  41470f:	lea    ecx,[edx+0x2]
  414712:	add    eax,ecx
  414714:	cmp    eax,0xe1
  414719:	jb     0x4146ee
  41471b:	lea    eax,[ebp-0x20]
  41471e:	push   eax
  41471f:	call   DWORD PTR ds:0x418040
  414725:	lea    eax,[ebp-0x20]
  414728:	push   eax
  414729:	call   DWORD PTR ds:0x418044
  41472f:	pop    edi
  414730:	pop    esi
  414731:	leave  
  414732:	ret    
  414733:	fcomp  DWORD PTR ds:0x898b4ed3
  414739:	or     ah,cl
  41473b:	mov    cl,0xcc
  41473d:	pusha  
  41473e:	ss or  al,al
  414741:	loopne 0x414743
  414743:	xor    ecx,DWORD PTR [eax]
  414745:	add    ah,cl
  414747:	sub    DWORD PTR [ecx],ecx
  414749:	mov    ch,0x7d
  41474b:	add    BYTE PTR [eax],al
  41474d:	je     0x41474f
  41474f:	dec    esi
  414750:	jmp    0x41471f
  414752:	pop    eax
  414753:	add    BYTE PTR [esi+0x46],dl
  414756:	mov    eax,DWORD PTR [eax]
  414758:	int3   
  414759:	push   ebp
  41475a:	add    BYTE PTR [ebp-0x44],al
  41475d:	push   esp
  41475e:	ds int3 
  414760:	inc    ebp
  414761:	int3   
  414762:	add    BYTE PTR [edx+esi*1],ah
  414765:	rcl    BYTE PTR [edx-0x768bff75],cl
  41476b:	mov    ebp,esp
  41476d:	mov    eax,DWORD PTR [ecx]
  41476f:	scas   eax,DWORD PTR es:[edi]
  414770:	xor    eax,DWORD PTR ds:0xcc8bb8
  414776:	jmp    0x414738
  414778:	jecxz  0x41474f
  41477a:	out    dx,al
  41477b:	int3   
  41477c:	add    DWORD PTR [ebx-0x748ab0],ecx
  414782:	add    esi,esi
  414784:	adc    DWORD PTR [ecx+0x164],ecx
  41478a:	add    BYTE PTR [ebp+0x30],ch
  41478d:	adc    al,0x66
  41478f:	call   0xfc44871
  414794:	mov    edx,DWORD PTR [esi-0x34]
  414797:	jo     0x41471d
  414799:	or     eax,0x8b010081
  41479e:	inc    ebp
  41479f:	push   ds
  4147a0:	sahf   
  4147a1:	(bad)  
  4147a2:	dec    eax
  4147a3:	mov    eax,DWORD PTR [ebx+0xc075ff]
  4147a9:	add    DWORD PTR [edi],ecx
  4147ab:	and    esi,DWORD PTR [edi+ebp*1-0x5c]
  4147af:	fld    QWORD PTR [eax]
  4147b1:	(bad)  
  4147b3:	sub    BYTE PTR [ecx],0x3b
  4147b6:	sub    al,BYTE PTR [ecx]
  4147b8:	xor    DWORD PTR [ebp-0x73],0x4
  4147bc:	add    BYTE PTR [ebp+0x0],al
  4147bf:	mov    ah,0x48
  4147c1:	pushf  
  4147c2:	lea    ecx,[ebx-0x338a4000]
  4147c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147c9:	mov    ebp,0x8b0382
  4147ce:	add    esp,ecx
  4147d0:	mov    edi,edi
  4147d2:	pop    ebp
  4147d3:	mov    ah,dh
  4147d5:	cmp    DWORD PTR [esi-0x74b97434],ebx
  4147db:	mov    ebx,0xccff461b
  4147e0:	mov    ebx,ebp
  4147e2:	mov    eax,eax
  4147e4:	test   DWORD PTR [eax],eax
  4147e6:	add    BYTE PTR [eax+0x8ca0757],cl
  4147ec:	jne    0x4147ba
  4147ee:	mov    ebx,esp
  4147f0:	mov    esp,0x8bff08d0
  4147f5:	add    esp,ecx
  4147f7:	adc    eax,0x8200748b
  4147fc:	mov    eax,ds:0xcc33c05d
  414801:	inc    ebp
  414802:	test   DWORD PTR [edx-0x69],esp
  414805:	popf   
  414806:	add    BYTE PTR ds:[eax],cl
  414809:	add    BYTE PTR [ebp+0x0],dh
  41480c:	mov    eax,esp
  41480e:	or     ch,bh
  414810:	adc    esp,DWORD PTR [esi+0xf]
  414813:	add    DWORD PTR [eax],0xf
  414816:	add    eax,DWORD PTR [eax-0x339afa5f]
  41481c:	inc    ebp
  41481d:	add    BYTE PTR [ebp-0x1],cl
  414820:	pop    ebp
  414821:	jmp    0x414823
  414823:	lahf   
  414824:	mov    eax,ds:0x8be8dd05
  414829:	add    eax,ebp
  41482b:	(bad)  
  41482c:	ds add eax,0xc005524
  414832:	add    DWORD PTR [eax],0xffffffec
  414835:	dec    ebp
  414836:	add    BYTE PTR [eax+0x75171d66],al
  41483c:	int3   
  41483d:	mov    eax,DWORD PTR [eax]
  41483f:	and    BYTE PTR [eax+0xccc552],dh
  414845:	mov    eax,DWORD PTR [ebp+0x55]
  414848:	add    ah,cl
  41484a:	int3   
  41484b:	cmp    BYTE PTR [esp+eiz*4+0x41],0x75
  414850:	mov    eax,DWORD PTR [eax]
  414852:	mov    eax,DWORD PTR [esi-0x30]
  414855:	gs sbb ah,cl
  414858:	int3   
  414859:	add    BYTE PTR [ebp-0x13ba3334],cl
  41485f:	out    dx,al
  414860:	ja     0x414863
  414862:	sbb    eax,0x883
  414867:	mov    al,es:0x8383c775
  41486d:	add    bh,bh
  41486f:	loopne 0x414872
  414871:	mov    ecx,DWORD PTR [ebx+0x7524e6f7]
  414877:	test   DWORD PTR ds:0x820ddd04,edx
  41487d:	sub    eax,0xc000001a
  414882:	add    BYTE PTR [esi+0x0],al
  414885:	shl    BYTE PTR [ebp+0x58],0x48
  414889:	ins    DWORD PTR es:[edi],dx
  41488a:	hlt    
  41488b:	mov    DWORD PTR [ebx-0x39f80000],ecx
  414891:	fst    QWORD PTR [ebx+esi*1-0x74740075]
  414898:	add    esp,ecx
  41489a:	int3   
  41489b:	outs   dx,DWORD PTR ds:[esi]
  41489c:	stc    
  41489d:	pop    edi
  41489e:	test   DWORD PTR [ecx],0x60000000
  4148a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148a5:	cld    
  4148a6:	imul   eax,DWORD PTR [eax],0x85450100
  4148ac:	mov    esp,ecx
  4148ae:	add    dl,dh
  4148b0:	jns    0x41490d
  4148b2:	or     eax,0xcc008900
  4148b7:	add    ecx,esi
  4148b9:	shl    BYTE PTR [ebp-0x1],cl
  4148bc:	mov    esi,DWORD PTR [ebp-0x34]
  4148bf:	int3   
  4148c0:	mov    edi,edi
  4148c2:	and    DWORD PTR [edx+0x47702a3],0xffffff8b
  4148c9:	add    BYTE PTR [eax],cl
  4148cb:	sbb    eax,0xcc619a0f
  4148d0:	mov    eax,DWORD PTR [ecx]
  4148d2:	add    ah,cl
  4148d4:	in     al,dx
  4148d5:	je     0x414860
  4148d7:	jbe    0x41487f
  4148d9:	or     esp,DWORD PTR [ebx+eax*4+0x0]
  4148dd:	push   0xffffffdd
  4148df:	xchg   esp,eax
  4148e0:	sbb    BYTE PTR [eax],0xd5
  4148e3:	push   eax
  4148e4:	mov    eax,eax
  4148e6:	jmp    0x4148e9
  4148e8:	push   ebp
  4148e9:	add    BYTE PTR [eax],al
  4148eb:	mov    ds:0xcaee148,al
  4148f0:	int3   
  4148f1:	inc    DWORD PTR [eax]
  4148f3:	jl     0x41493b
  4148f5:	pop    edi
  4148f6:	loop   0x414883
  4148f8:	add    bh,bh
  4148fa:	or     BYTE PTR ds:0x56cc008b,dl
  414900:	sub    al,0x70
  414902:	dec    ebp
  414903:	add    DWORD PTR [ebx+esi*1+0x10],esi
  414907:	sub    esp,edx
  414909:	jae    0x4148e1
  41490b:	mov    eax,DWORD PTR [ebp+0x0]
  41490e:	lea    ecx,[ebx+0x20cc0801]
  414914:	adc    edi,DWORD PTR [edi+ebx*2+0x45]
  414918:	int3   
  414919:	add    BYTE PTR [ebp+0x13],dl
  41491c:	int    0x71
  41491e:	retf   
  41491f:	int3   
  414920:	mov    ecx,esp
  414922:	mov    eax,DWORD PTR [eax]
  414924:	mov    eax,DWORD PTR [ebp-0x47cc4001]
  41492a:	cmc    
  41492b:	push   ebp
  41492c:	push   ebp
  41492d:	add    DWORD PTR [eax],eax
  41492f:	stc    
  414930:	rcr    DWORD PTR [edx+0x32],cl
  414933:	adc    eax,0x4d858b00
  414938:	rol    al,0x74
  41493b:	ds pop ebp
  41493d:	test   al,0x1c
  41493f:	add    BYTE PTR [eax],al
  414941:	push   eax
  414942:	add    BYTE PTR [ecx],ch
  414944:	dec    edi
  414945:	xchg   al,ch
  414947:	test   edi,edi
  414949:	mov    ecx,DWORD PTR [ebp+0x33000ccc]
  41494f:	call   0x49a6bd
  414954:	add    ch,bl
  414956:	inc    esi
  414957:	sbb    eax,0x1fea50d
  41495c:	or     al,0xff
  41495e:	add    eax,DWORD PTR [eax]
  414960:	push   esi
  414961:	add    BYTE PTR [ebp-0x4d],al
  414964:	imul   BYTE PTR [ebx+edx*8-0x3333ffff]
  41496b:	out    0x1a,al
  41496d:	mov    dh,dl
  41496f:	add    DWORD PTR [ebx-0x76fb3375],ecx
  414975:	jne    0x414977
  414977:	ficomp DWORD PTR [edi]
  414979:	and    al,0xf0
  41497b:	mov    DWORD PTR [eax],eax
  41497d:	mov    edi,edi
  41497f:	mov    al,ds:0x346c0c
  414984:	mov    ecx,esp
  414986:	mov    DWORD PTR [eax],eax
  414988:	or     BYTE PTR [eax],al
  41498a:	adc    bh,dh
  41498c:	cli    
  41498d:	(bad)  
  41498e:	(bad)  
  41498f:	mov    DWORD PTR [ebp-0x75],eax
  414992:	push   0xffffff8c
  414994:	add    eax,DWORD PTR [edx]
  414996:	mov    BYTE PTR [edx+0xc],ch
  414999:	add    DWORD PTR [ebp+0x0],ecx
  41499c:	ror    BYTE PTR [ebx+0x5383c20f],0x4a
  4149a3:	add    BYTE PTR [ebp+0x74],dl
  4149a6:	add    BYTE PTR [esi-0x337f6a5d],bl
  4149ac:	adc    BYTE PTR [ecx],al
  4149ae:	jmp    0x414a24
  4149b0:	(bad)  
  4149b1:	(bad)  
  4149b3:	adc    cl,BYTE PTR [ebx+0x31]
  4149b6:	jmp    0xc9df:0x8b8dcc00
  4149bd:	lea    ebx,[ebx-0x75]
  4149c0:	int3   
  4149c1:	push   0x0
  4149c3:	je     0x41494e
  4149c5:	add    BYTE PTR [ebp-0x1c],al
  4149c8:	fwait
  4149c9:	push   esi
  4149ca:	pop    ebx
  4149cb:	jne    0x4149cd
  4149cd:	inc    ebp
  4149ce:	push   eax
  4149cf:	mov    al,ds:0x151dcc99
  4149d4:	int3   
  4149d5:	in     al,dx
  4149d6:	add    al,al
  4149d8:	or     al,0x45
  4149da:	add    bl,al
  4149dc:	lods   al,BYTE PTR ds:[esi]
  4149dd:	aaa    
  4149de:	lds    esi,FWORD PTR [edi]
  4149e0:	xor    ecx,DWORD PTR [ebx-0x14abef75]
  4149e6:	cmp    cl,0x83
  4149e9:	or     BYTE PTR [eax],al
  4149eb:	int3   
  4149ec:	add    ah,cl
  4149ee:	or     ah,cl
  4149f0:	(bad)  
  4149f1:	test   al,ch
  4149f3:	call   0xb727:0x4d8d4503
  4149fa:	adc    edx,DWORD PTR [edi+0x15ff010f]
  414a00:	add    eax,DWORD PTR [ecx]
  414a02:	je     0x4149d0
  414a04:	xor    BYTE PTR [eax-0x38337a5c],ah
  414a0a:	or     al,0x6a
  414a0c:	daa    
  414a0d:	lock sar BYTE PTR [edi+0x0],0x46
  414a12:	add    al,0x8b
  414a14:	inc    ebp
  414a15:	add    BYTE PTR [ebx+0x40df1ecc],cl
  414a1b:	push   es
  414a1c:	mov    ecx,DWORD PTR [ebx-0x7c8f777]
  414a22:	jo     0x414a6c
  414a24:	push   eax
  414a25:	pop    ebp
  414a26:	mov    eax,DWORD PTR [eax]
  414a28:	push   ebp
  414a29:	inc    ebp
  414a2a:	or     BYTE PTR [ebx-0x61dcf3c3],cl
  414a30:	add    BYTE PTR [ebp-0x7129ffff],al
  414a36:	jl     0x4149ea
  414a38:	or     al,0xc0
  414a3a:	inc    DWORD PTR [eax]
  414a3c:	mov    ecx,DWORD PTR [edi]
  414a3e:	in     al,dx
  414a3f:	cmovb  edx,DWORD PTR [eax+0x33350f5]
  414a46:	add    al,al
  414a48:	js     0x414a9d
  414a4a:	mov    eax,ds:0xccddcc43
  414a4f:	int3   
  414a50:	pop    ebp
  414a51:	pop    ebp
  414a52:	int3   
  414a53:	add    BYTE PTR [edx+0x48],al
  414a56:	push   es
  414a57:	dec    ebx
  414a58:	inc    DWORD PTR [eax]
  414a5a:	int3   
  414a5b:	add    BYTE PTR [eax-0x5c],al
  414a5e:	lds    edx,FWORD PTR [ebp+0x1008310]
  414a64:	call   0xd5419fbe
  414a69:	and    cl,BYTE PTR [ebx]
  414a6b:	dec    esi
  414a6c:	add    ah,cl
  414a6e:	add    al,0x74
  414a70:	dec    BYTE PTR [edx+0x73]
  414a73:	jmp    0x15ccd655
  414a78:	test   DWORD PTR [ebx+0x17f700cc],eax
  414a7e:	xlat   BYTE PTR ds:[ebx]
  414a7f:	sub    al,BYTE PTR [eax]
  414a81:	add    BYTE PTR [ebp+0x3c468beb],al
  414a87:	xor    al,BYTE PTR [ebp+0x0]
  414a8a:	add    esp,ecx
  414a8c:	int3   
  414a8d:	mov    ecx,esp
  414a8f:	or     al,0xb3
  414a91:	ror    BYTE PTR [edi+0x1],1
  414a94:	int3   
  414a95:	add    BYTE PTR [esi+0x0],dl
  414a98:	and    DWORD PTR [ecx+ecx*2-0x74f70088],ebp
  414a9f:	int3   
  414aa0:	inc    ebp
  414aa1:	push   ebp
  414aa2:	int3   
  414aa3:	add    BYTE PTR [edx-0x3fcf6c30],ch
  414aa9:	add    BYTE PTR [esi+0xc],al
  414aac:	mov    esp,0x858565e5
  414ab1:	push   esi
  414ab2:	adc    eax,0x8bff00ff
  414ab7:	or     BYTE PTR [edx+0x8a4d485],dh
  414abd:	int3   
  414abe:	call   DWORD PTR [eax]
  414ac0:	(bad)
  414ac3:	dec    eax
  414ac4:	inc    ebp
  414ac5:	add    DWORD PTR [eax],ecx
  414ac7:	test   DWORD PTR [eax],ecx
  414ac9:	int3   
  414aca:	add    al,al
  414acc:	shl    DWORD PTR [ecx+0x55cccde5],1
  414ad2:	test   DWORD PTR [eax],eax
  414ad4:	idiv   DWORD PTR [eax-0x11]
  414ad7:	dec    BYTE PTR [eax]
  414ad9:	mov    DWORD PTR [eax],eax
  414adb:	inc    DWORD PTR [eax]
  414add:	mov    ecx,esp
  414adf:	je     0x414aea
  414ae1:	mov    cl,0xd5
  414ae3:	mov    edx,0x8bff560c
  414ae8:	sbb    DWORD PTR [ecx+0x4675060d],edx
  414aee:	inc    esi
  414aef:	adc    bh,bh
  414af1:	int3   
  414af2:	je     0x414af4
  414af4:	ret    
  414af5:	clc    
  414af6:	cdq    
  414af7:	dec    eax
  414af8:	mov    DWORD PTR [ebp+0xddb8985],eax
  414afe:	sub    ebp,DWORD PTR [ebp-0x748bff75]
  414b04:	call   0xc7496094
  414b09:	enter  0x7c65,0xc
  414b0d:	test   DWORD PTR [ebx-0x2a9ba014],ecx
  414b13:	lods   eax,DWORD PTR ds:[esi]
  414b14:	add    DWORD PTR [ecx],eax
  414b16:	mov    eax,DWORD PTR [eax]
  414b18:	push   eax
  414b19:	adc    BYTE PTR [ebp-0x75],al
  414b1c:	mov    bh,0x7e
  414b1e:	pop    esp
  414b1f:	int    0xc7
  414b21:	int3   
  414b22:	mov    eax,DWORD PTR [ecx]
  414b24:	pop    es
  414b25:	rcl    BYTE PTR [ebx],1
  414b27:	mov    eax,0x55cc4600
  414b2c:	add    BYTE PTR [eax],al
  414b2e:	pop    ebp
  414b2f:	mov    ecx,ecx
  414b31:	jnp    0x414b1b
  414b33:	add    eax,DWORD PTR [eax]
  414b35:	int3   
  414b36:	xor    eax,DWORD PTR [ebx+0x550ed48e]
  414b3c:	add    ah,cl
  414b3e:	mov    ecx,DWORD PTR [edx*2+0x41008333]
  414b45:	mov    eax,0x15ff8e2f
  414b4a:	add    DWORD PTR [ebx],eax
  414b4c:	dec    edi
  414b4d:	push   es
  414b4e:	xchg   esi,eax
  414b4f:	(bad)  
  414b51:	add    BYTE PTR [ebx-0x137a0034],cl
  414b57:	test   DWORD PTR ds:0x352c7a,edx
  414b5d:	jne    0x414ae8
  414b5f:	int3   
  414b60:	cmp    ecx,DWORD PTR [ecx+0x4a]
  414b63:	xor    al,0xcc
  414b65:	loopne 0x414b67
  414b67:	add    DWORD PTR [eax],ecx
  414b69:	mov    eax,DWORD PTR [eax]
  414b6b:	int3   
  414b6c:	jge    0x414b2d
  414b6e:	mov    al,ds:0x46cc8dac
  414b73:	jmp    DWORD PTR [edx-0x74e109b3]
  414b79:	add    BYTE PTR [ecx-0x7495ff8b],cl
  414b7f:	adc    BYTE PTR [eax-0x2b],al
  414b82:	push   0x6c
  414b84:	or     ah,cl
  414b86:	dec    esp
  414b88:	in     eax,0x8e
  414b8a:	adc    DWORD PTR [edx-0x75],0xffffffcc
  414b8e:	add    BYTE PTR [ebx-0x7a747434],cl
  414b94:	mov    edx,0x857e1b89
  414b99:	add    BYTE PTR [ebx-0x24c8e0ba],cl
  414b9f:	mov    dh,0x10
  414ba1:	int3   
  414ba2:	dec    ebp
  414ba3:	add    DWORD PTR [eax],ecx
  414ba5:	int3   
  414ba6:	test   esp,ecx
  414ba8:	add    ebx,ebx
  414baa:	pop    ebx
  414bab:	clc    
  414bac:	push   ebp
  414bad:	or     BYTE PTR [ebp+0x0],bl
  414bb0:	ja     0x414b7b
  414bb2:	pop    esp
  414bb3:	pop    edx
  414bb4:	test   DWORD PTR [ebp-0x75],ecx
  414bb7:	int3   
  414bb8:	mov    DWORD PTR [ebp-0x75],eax
  414bbb:	add    BYTE PTR [ebp-0x33dc4543],bh
  414bc1:	add    BYTE PTR [edi+ecx*1],cl
  414bc4:	leave  
  414bc5:	xor    al,0x91
  414bc7:	jecxz  0x414bca
  414bc9:	push   ebp
  414bca:	call   0x83b55bcf
  414bcf:	add    bl,cl
  414bd1:	dec    eax
  414bd2:	or     WORD PTR [ebx+0x32ccc089],0x21
  414bda:	sti    
  414bdb:	add    DWORD PTR [ebx],0x0
  414bde:	add    BYTE PTR [ecx],al
  414be0:	jne    0x414be2
  414be2:	bswap  esp
  414be4:	xchg   esi,eax
  414be5:	mov    cl,0x10
  414be7:	sbb    eax,0xccccff85
  414bec:	cld    
  414bed:	nop
  414bee:	dec    eax
  414bef:	(bad)  
  414bf0:	int3   
  414bf1:	test   DWORD PTR [ecx],eax
  414bf3:	add    BYTE PTR [eax],al
  414bf5:	or     al,0x8
  414bf7:	add    edx,DWORD PTR [ebx-0x33795f59]
  414bfd:	add    BYTE PTR [ebx-0x28a6c07b],cl
  414c03:	cld    
  414c04:	add    BYTE PTR [eax],al
  414c06:	add    BYTE PTR [eax],al
  414c08:	inc    esi
  414c09:	add    esp,ecx
  414c0b:	mov    ebx,DWORD PTR [esi+0x77]
  414c0e:	dec    edx
  414c0f:	cld    
  414c10:	mov    eax,DWORD PTR [eax]
  414c12:	add    BYTE PTR [eax],al
  414c14:	dec    edi
  414c15:	pop    eax
  414c16:	lock retf 0x4500
  414c1a:	add    BYTE PTR [ecx],al
  414c1c:	mov    DWORD PTR [ecx],eax
  414c1e:	inc    DWORD PTR [eax]
  414c20:	xlat   BYTE PTR ds:[ebx]
  414c21:	popa   
  414c22:	das    
  414c23:	dec    esp
  414c24:	or     BYTE PTR [eax],al
  414c26:	je     0x414c28
  414c28:	or     BYTE PTR [eax-0x33fb7b5f],dl
  414c2e:	cmovne ecx,DWORD PTR [ebx+0x3d508985]
  414c35:	scas   eax,DWORD PTR es:[edi]
  414c36:	out    dx,eax
  414c37:	shr    BYTE PTR [edx+0x0],0xf
  414c3b:	(bad)  
  414c3c:	fsubr  DWORD PTR [ebp-0x7c74f35a]
  414c42:	add    al,al
  414c44:	inc    ebp
  414c45:	je     0x414c47
  414c47:	mov    edx,DWORD PTR [esi]
  414c49:	arpl   bx,ax
  414c4b:	pop    ecx
  414c4c:	je     0x414bd9
  414c4e:	inc    esi
  414c4f:	mov    ecx,ebp
  414c51:	xchg   ecx,eax
  414c52:	cmc    
  414c53:	inc    esi
  414c54:	inc    edi
  414c56:	add    BYTE PTR [ecx+eax*1+0x0],dh
  414c5a:	lea    eax,[ebp+0x57700f33]
  414c60:	add    BYTE PTR [ecx],al
  414c62:	mov    ebx,DWORD PTR [ebp+0x6e]
  414c65:	nop
  414c66:	sbb    cl,BYTE PTR [ecx+0x0]
  414c69:	add    BYTE PTR [ebp+0x0],dh
  414c6c:	(bad)  
  414c6d:	rcl    BYTE PTR [eax],0x3
  414c70:	(bad)  
  414c71:	retfw  
  414c73:	in     eax,dx
  414c74:	push   eax
  414c75:	mov    DWORD PTR [ebx],eax
  414c77:	mov    eax,DWORD PTR [ecx-0x4d]
  414c7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c7b:	xchg   ebx,eax
  414c7c:	adc    BYTE PTR [eax],al
  414c7e:	jne    0x414c80
  414c80:	int3   
  414c81:	add    bh,al
  414c83:	add    BYTE PTR [ebx+0x6a],dh
  414c86:	push   cs
  414c87:	pop    edi
  414c88:	mov    eax,DWORD PTR [eax]
  414c8a:	int3   
  414c8b:	add    bh,bl
  414c8d:	call   0x10e36ef
  414c92:	add    BYTE PTR [ebx+0x890801],al
  414c98:	hlt    
  414c99:	push   esp
  414c9a:	sbb    eax,0x558b8b95
  414c9f:	int3   
  414ca0:	jno    0x414c88
  414ca2:	ret    
  414ca3:	adc    al,0x8b
  414ca5:	call   0x8c2d9a1f
  414caa:	add    ah,ch
  414cac:	pop    es
  414cad:	push   0xfffffffd
  414caf:	or     eax,0x3cc4685
  414cb4:	push   ecx
  414cb5:	out    0x0,al
  414cb7:	mov    eax,ds:0xc
  414cbc:	rcl    BYTE PTR [eax],0x89
  414cbf:	call   FWORD PTR [eax]
  414cc1:	dec    ecx
  414cc2:	imul   ebx,DWORD PTR [esi+0x0],0xffffff8b
  414cc6:	add    BYTE PTR [edi],cl
  414cc8:	scas   eax,DWORD PTR es:[edi]
  414cc9:	repz inc edx
  414ccb:	lea    esi,[eax+eax*1-0x34]
  414ccf:	add    BYTE PTR [eax],al
  414cd1:	(bad)  
  414cd2:	ffree  st(0)
  414cd4:	aad    0x90
  414cd6:	imul   edx,DWORD PTR [ebx+0xc000],0xffffffec
  414cdd:	add    BYTE PTR [eax-0xa],0x56
  414ce1:	mov    DWORD PTR [eax],eax
  414ce3:	add    DWORD PTR [ebx+0x3dcccc46],ecx
  414ce9:	add    esi,ebx
  414ceb:	test   DWORD PTR [ebp-0x40],eax
  414cee:	test   esp,ecx
  414cf0:	popf   
  414cf1:	dec    eax
  414cf2:	or     edx,DWORD PTR [edx+0xc00cc8b]
  414cf8:	add    al,0x0
  414cfa:	je     0x414d0c
  414cfc:	cmp    BYTE PTR [eax-0x13ffb005],al
  414d02:	add    BYTE PTR [edi],cl
  414d04:	jmp    0x454b4695
  414d09:	add    BYTE PTR [eax],cl
  414d0b:	adc    BYTE PTR [ebx-0x3cfff77b],cl
  414d11:	call   0x853f33c
  414d16:	add    ah,cl
  414d18:	add    BYTE PTR [esi+0x31],ah
  414d1b:	cmp    DWORD PTR [edx-0x34],edi
  414d1e:	mov    eax,DWORD PTR [eax]
  414d20:	ror    BYTE PTR [ebp-0x4d008ab3],0xe0
  414d27:	or     DWORD PTR [edx],ecx
  414d29:	inc    ebp
  414d2a:	mov    ecx,DWORD PTR [ecx+0x229724cc]
  414d30:	clc    
  414d31:	mov    ecx,esp
  414d33:	add    ah,ch
  414d35:	add    BYTE PTR [ebx-0x6b79fc75],cl
  414d3b:	push   esp
  414d3c:	add    al,0x8b
  414d3e:	inc    ebp
  414d3f:	add    ah,cl
  414d41:	leave  
  414d42:	retf   
  414d43:	adc    bh,BYTE PTR [ebx-0x75]
  414d46:	mov    eax,DWORD PTR [eax]
  414d48:	int3   
  414d49:	push   DWORD PTR [ebp+0x75]
  414d4c:	test   DWORD PTR [ecx+0xc71c59c],ebx
  414d52:	rol    BYTE PTR [eax],0x0
  414d55:	mov    ch,0x33
  414d57:	(bad)  
  414d58:	mov    ecx,0x146ff85
  414d5d:	inc    DWORD PTR [ecx]
  414d5f:	add    DWORD PTR [eax],eax
  414d61:	fnsave [esi+ebp*1-0xbaf0b7]
  414d68:	int3   
  414d69:	bound  ebp,QWORD PTR [esi]
  414d6b:	sbb    ebx,eax
  414d6d:	jne    0x414cfa
  414d6f:	jnp    0x842a300
  414d75:	sbb    ebp,eax
  414d77:	add    BYTE PTR [esi-0x1],dl
  414d7a:	add    bh,bh
  414d7c:	jmp    FWORD PTR [edx+0x7401def8]
  414d82:	ror    BYTE PTR [ebp+0x74cc008d],0x0
  414d89:	leave  
  414d8a:	and    ebx,DWORD PTR [ebp+0x3b]
  414d8d:	adc    ah,cl
  414d8f:	inc    DWORD PTR [eax]
  414d91:	out    0xcc,al
  414d93:	(bad)  
  414d94:	lods   al,BYTE PTR ds:[esi]
  414d95:	mov    ecx,DWORD PTR [ebx-0x3fff8a7b]
  414d9b:	add    BYTE PTR [eax],al
  414d9d:	jo     0x414dcb
  414d9f:	adc    bh,BYTE PTR [ebx+0x4d]
  414da2:	je     0x414e01
  414da4:	mov    eax,ebx
  414da6:	fcom   QWORD PTR [esi]
  414da8:	sub    DWORD PTR ds:0xeb00dd00,edx
  414dae:	(bad)  
  414db0:	inc    edx
  414db2:	rcl    dh,cl
  414db4:	std    
  414db5:	dec    DWORD PTR [eax]
  414db7:	or     BYTE PTR [ebp+0x5d],al
  414dba:	mov    edx,0x89c09735
  414dbf:	mov    eax,DWORD PTR [eax]
  414dc1:	add    DWORD PTR [eax],0xffffff83
  414dc4:	or     dl,bl
  414dc6:	xor    al,dl
  414dc8:	ja     0x414dcd
  414dca:	mov    ebx,DWORD PTR [ebp+0x3]
  414dcd:	bnd ret 0xfde1
  414dd1:	rol    BYTE PTR [eax],0x8b
  414dd4:	in     al,dx
  414dd5:	add    BYTE PTR [ebp-0x75],dh
  414dd8:	add    dh,dl
  414dda:	and    al,0x10
  414ddc:	dec    BYTE PTR [ecx-0x3574ffff]
  414de2:	pushf  
  414de3:	sbb    BYTE PTR [eax],bh
  414de5:	mov    ecx,DWORD PTR [ecx+0xffff00]
  414deb:	inc    ebp
  414dec:	add    BYTE PTR [eax+edi*1-0x76fe60a8],al
  414df3:	jmp    0x414df6
  414df5:	xchg   esp,eax
  414df6:	cmp    al,0x42
  414df8:	data16 loopne 0x414e6f
  414dfb:	mov    eax,DWORD PTR [ebp-0x13fef100]
  414e01:	pop    edi
  414e02:	fsubp  st(1),st
  414e04:	inc    DWORD PTR [ecx]
  414e06:	int3   
  414e07:	add    BYTE PTR [esi+0x6],al
  414e0a:	xlat   BYTE PTR ds:[ebx]
  414e0b:	or     DWORD PTR [edx-0x40],esi
  414e0e:	mov    edx,DWORD PTR ds:0xcc010446
  414e14:	je     0x414e38
  414e16:	in     eax,dx
  414e17:	dec    edi
  414e18:	idiv   edi
  414e1a:	int3   
  414e1b:	je     0x414e6a
  414e1d:	dec    esi
  414e1e:	xchg   esi,eax
  414e1f:	and    BYTE PTR [ecx-0x76ff7475],dl
  414e25:	add    DWORD PTR ds:0x34960000,edx
  414e2b:	push   edi
  414e2c:	icebp  
  414e2d:	mov    eax,DWORD PTR [ecx]
  414e2f:	int3   
  414e30:	jmp    DWORD PTR [edi]
  414e32:	mov    ch,0x98
  414e34:	gs int3 
  414e36:	or     al,0xdd
  414e38:	mov    eax,DWORD PTR [ebx]
  414e3a:	int3   
  414e3b:	add    BYTE PTR [edi],cl
  414e3d:	adc    BYTE PTR [esi+0x2c],bl
  414e40:	fmul   DWORD PTR [ebx+0x2d000100]
  414e46:	lods   eax,DWORD PTR ds:[esi]
  414e47:	cwde   
  414e48:	(bad)  
  414e4a:	xor    esi,DWORD PTR [ebp-0x1]
  414e4d:	inc    ebp
  414e4e:	add    DWORD PTR [ecx-0x3138ae00],ecx
  414e54:	mov    ds:0x8bff8b33,eax
  414e59:	in     eax,0x65
  414e5b:	test   BYTE PTR [esp+ecx*8-0x76ef33f1],0x0
  414e63:	add    BYTE PTR [ebp+0x1b],al
  414e66:	cmp    esi,esi
  414e68:	js     0x414e6a
  414e6a:	push   0x0
  414e6c:	fstp   QWORD PTR [esi+0xf9eed5]
  414e72:	add    DWORD PTR [eax],edx
  414e74:	jne    0x414e76
  414e76:	push   eax
  414e77:	add    BYTE PTR [eax+edi*2],al
  414e7a:	and    ebp,edx
  414e7c:	push   ebx
  414e7d:	jne    0x414e7e
  414e7f:	mov    ecx,DWORD PTR [edi]
  414e81:	pop    eax
  414e82:	add    ebx,esp
  414e84:	and    DWORD PTR [ebp-0x74b97475],eax
  414e8a:	mov    eax,DWORD PTR [eax]
  414e8c:	inc    ebp
  414e8d:	ja     0x414e79
  414e8f:	xor    DWORD PTR [esi],ebp
  414e91:	mov    DWORD PTR [eax],eax
  414e93:	int3   
  414e94:	or     al,0x88
  414e96:	push   0x7f
  414e98:	sub    esp,ecx
  414e9a:	add    BYTE PTR [edi],cl
  414e9c:	add    BYTE PTR [ebp-0x2d8a0001],cl
  414ea2:	shl    DWORD PTR ds:0x189ff02,cl
  414ea8:	or     al,al
  414eaa:	clc    
  414eab:	daa    
  414eac:	pop    edi
  414ead:	int3   
  414eae:	int3   
  414eaf:	inc    ebp
  414eb0:	add    edi,edi
  414eb2:	int3   
  414eb3:	jne    0x414eb5
  414eb5:	inc    ebp
  414eb6:	jns    0x414eb6
  414eb8:	cwde   
  414eb9:	int3   
  414eba:	add    ah,cl
  414ebc:	add    BYTE PTR [edx],ah
  414ebe:	mov    dl,0xf9
  414ec0:	sbb    BYTE PTR [esp+ecx*8],al
  414ec3:	ror    ah,0x56
  414ec6:	add    BYTE PTR [ebx+0x59b238cc],cl
  414ecc:	sub    bh,bh
  414ece:	add    al,0xf
  414ed0:	add    BYTE PTR [edi+0x5],ah
  414ed3:	loop   0x414f3e
  414ed5:	or     DWORD PTR [ebx-0x74fe75],0x0
  414edc:	add    BYTE PTR [edx],cl
  414ede:	add    eax,0x8b69da
  414ee3:	mov    eax,DWORD PTR [eax]
  414ee5:	ss push ds
  414ee7:	stos   DWORD PTR es:[edi],eax
  414ee8:	or     eax,DWORD PTR [eax]
  414eea:	int3   
  414eeb:	int3   
  414eec:	pop    ebp
  414eed:	mov    eax,DWORD PTR [ecx]
  414eef:	or     esp,0xffffff82
  414ef2:	hlt    
  414ef3:	test   al,0x26
  414ef5:	add    BYTE PTR [ebp-0x5ae20000],cl
  414efb:	stc    
  414efc:	test   BYTE PTR [eax],0xcc
  414eff:	add    BYTE PTR [eax+eax*1],al
  414f02:	add    DWORD PTR [edi+edi*8+0x3],esi
  414f06:	sbb    eax,0x8b45379e
  414f0b:	pcmpeqb mm2,QWORD PTR [esi+0x453322f8]
  414f12:	inc    esi
  414f13:	or     al,0x8b
  414f15:	add    BYTE PTR [ecx],al
  414f17:	mov    ecx,DWORD PTR [ecx+0x9ea5c86]
  414f1d:	xor    DWORD PTR [edi+edi*8-0x75],0xffffffcc
  414f22:	sar    bh,1
  414f24:	adc    eax,0xcc890174
  414f29:	dec    ebp
  414f2a:	add    BYTE PTR [ebx],dh
  414f2c:	movsx  ecx,dh
  414f2f:	mov    eax,ds:0xe0007d
  414f34:	add    BYTE PTR [edi],cl
  414f36:	cmc    
  414f37:	fild   QWORD PTR ds:0xcc008bcc
  414f3d:	rcl    BYTE PTR [esi-0x40],0x45
  414f41:	sar    DWORD PTR [esi+eax*4-0x18],0x8
  414f46:	pop    ebp
  414f47:	add    BYTE PTR [ecx],al
  414f49:	psrlw  mm1,mm5
  414f4c:	add    eax,0xcc001000
  414f51:	jne    0x414f53
  414f53:	or     BYTE PTR [ebx+0x398277bb],cl
  414f59:	pop    ebp
  414f5a:	fnsave [ebp+0x0]
  414f5d:	xchg   ah,dh
  414f5f:	dec    ebp
  414f60:	push   cs
  414f61:	add    BYTE PTR [edi+edi*8+0x75],dh
  414f65:	int3   
  414f66:	mov    ecx,DWORD PTR [ebx-0x1e288f7d]
  414f6c:	popa   
  414f6d:	add    BYTE PTR [eax],al
  414f6f:	(bad)  
  414f70:	int3   
  414f71:	(bad)  
  414f72:	mov    ah,0x36
  414f74:	add    BYTE PTR [eax],0x8b
  414f77:	add    BYTE PTR [eax+ecx*1],al
  414f7a:	add    DWORD PTR [eax],0x5d
  414f7d:	nop
  414f7e:	or     dl,ah
  414f80:	xor    eax,esp
  414f82:	add    ecx,DWORD PTR [ebx-0x26345ff]
  414f88:	cmp    DWORD PTR [ebx+0x45dd000c],ecx
  414f8e:	xor    ecx,esp
  414f90:	dec    DWORD PTR [esi]
  414f92:	sbb    edx,ebp
  414f94:	test   BYTE PTR [eax],0x8b
  414f97:	or     BYTE PTR [ebx-0x4010b369],cl
  414f9d:	add    BYTE PTR [ecx],al
  414f9f:	add    ah,cl
  414fa1:	add    BYTE PTR [eax],al
  414fa3:	inc    ebp
  414fa4:	int3   
  414fa5:	setp   BYTE PTR [ebx-0x7cf774e8]
  414fac:	or     BYTE PTR [edx-0x2b],ah
  414faf:	lods   eax,DWORD PTR ds:[esi]
  414fb0:	repnz in al,dx
  414fb2:	mov    DWORD PTR [eax],eax
  414fb4:	mov    ecx,DWORD PTR [eax]
  414fb6:	xor    eax,DWORD PTR [ebp-0x34]
  414fb9:	push   es
  414fba:	fwait
  414fbb:	cld    
  414fbc:	jbe    0x414fbe
  414fbe:	inc    ebp
  414fbf:	adc    eax,0xe3a29883
  414fc4:	sbb    DWORD PTR [ebx+0x88b8b01],ecx
  414fca:	je     0x414fcc
  414fcc:	adc    BYTE PTR [edx-0x33790228],dh
  414fd2:	(bad)  
  414fd3:	int3   
  414fd4:	mov    ecx,edx
  414fd6:	mov    dl,0x1f
  414fd8:	cmp    al,BYTE PTR [eax]
  414fda:	pop    ebp
  414fdb:	loopne 0x415047
  414fdd:	mov    ecx,esp
  414fdf:	test   DWORD PTR [eax],eax
  414fe1:	cld    
  414fe2:	sbb    al,0x47
  414fe4:	cwde   
  414fe5:	pop    ebp
  414fe6:	add    DWORD PTR [eax],0x33
  414fe9:	nop
  414fea:	inc    edx
  414feb:	loop   0x414fa6
  414fed:	add    BYTE PTR [eax+edx*2+0x8],dh
  414ff1:	inc    DWORD PTR [ebx+0x64c68b00]
  414ff7:	dec    edi
  414ff8:	fmul   st(4),st
  414ffa:	add    BYTE PTR [ebx-0x21795ffd],cl
  415000:	dec    DWORD PTR [ebp+0x0]
  415003:	mov    eax,DWORD PTR [eax]
  415005:	add    DWORD PTR [ecx],eax
  415007:	mov    ecx,esp
  415009:	mov    esi,0x1fd5d4
  41500e:	inc    ebp
  41500f:	add    BYTE PTR [ecx+0x3bcfc707],cl
  415015:	add    ecx,DWORD PTR [esp+ecx*8]
  415018:	add    BYTE PTR [ebx-0x5defba34],cl
  41501e:	loop   0x415025
  415020:	pop    esp
  415021:	add    BYTE PTR [eax],al
  415023:	inc    edi
  415025:	ud2    
  415027:	loopne 0x4150a8
  415029:	add    BYTE PTR [eax],al
  41502b:	or     BYTE PTR [ebx-0x7c33fffd],cl
  415031:	ret    0x6a2c
  415034:	jg     0x41503a
  415036:	inc    ebp
  415037:	pop    ebp
  415038:	add    BYTE PTR [edx-0x5d],al
  41503b:	popf   
  41503c:	sbb    bl,BYTE PTR [ebp+0x45]
  41503f:	add    BYTE PTR [ebx-0x7c00feb3],cl
  415045:	je     0x41501e
  415047:	retf   
  415048:	inc    DWORD PTR ss:[eax]
  41504b:	dec    DWORD PTR [eax]
  41504d:	addr16 pop ecx
  41504f:	(bad)  
  415050:	xor    DWORD PTR [eax],eax
  415052:	jne    0x4150a1
  415054:	or     BYTE PTR [eax],al
  415056:	dec    DWORD PTR [ebx-0x201af015]
  41505c:	popa   
  41505d:	call   FWORD PTR [ebp-0x18]
  415060:	int3   
  415061:	ret    
  415062:	cmp    DWORD PTR [esi-0x4a],0x18
  415066:	add    BYTE PTR [ebx-0x6226ffff],cl
  41506c:	outs   dx,BYTE PTR ds:[esi]
  41506d:	mov    bh,0x50
  41506f:	add    ch,bl
  415071:	add    BYTE PTR ds:0xb304ffcc,dl
  415077:	daa    
  415078:	ret    
  415079:	sbb    DWORD PTR [ebx-0x78743400],ecx
  41507f:	mov    ebx,0x4757f
  415084:	adc    BYTE PTR [eax],al
  415086:	push   ebp
  415087:	int3   
  415088:	mov    eax,DWORD PTR [eax]
  41508a:	and    BYTE PTR [ecx+0x2b],dh
  41508d:	out    0x6a,al
  41508f:	add    ah,cl
  415091:	add    DWORD PTR [ebx+esi*2+0x6e],edi
  415095:	int3   
  415096:	lea    ecx,[eax]
  415098:	int3   
  415099:	inc    esi
  41509a:	je     0x41509c
  41509c:	mov    DWORD PTR [esi+0x5],eax
  41509f:	out    0xbb,eax
  4150a1:	sbb    eax,0xc08b33ff
  4150a6:	pusha  
  4150a7:	lds    ebx,FWORD PTR [edx]
  4150a9:	inc    edi
  4150aa:	jmp    0x415035
  4150ac:	jmp    0x4150f3
  4150ae:	lea    edx,ds:0x49a089cc
  4150b4:	xor    al,0x83
  4150b6:	int3   
  4150b7:	add    esp,ecx
  4150b9:	int3   
  4150ba:	ror    BYTE PTR [edi],1
  4150bc:	jo     0x41506f
  4150be:	int3   
  4150bf:	adc    BYTE PTR [eax],al
  4150c1:	int3   
  4150c2:	inc    DWORD PTR [eax]
  4150c4:	add    BYTE PTR [eax],al
  4150c6:	test   eax,0xd93bdc
  4150cb:	or     esp,0x55
  4150ce:	jmp    0xc:0x8be1428b
  4150d5:	add    BYTE PTR [ecx],al
  4150d7:	mov    eax,DWORD PTR [eax]
  4150d9:	add    ch,al
  4150db:	(bad)  
  4150dc:	lods   eax,DWORD PTR ds:[esi]
  4150dd:	ret    
  4150de:	adc    eax,0x4a8900cc
  4150e3:	jnp    0x415158
  4150e5:	or     dl,BYTE PTR ds:0x8b0089
  4150eb:	call   0x4e4ba17b
  4150f0:	adc    DWORD PTR [ecx],esp
  4150f2:	add    ah,cl
  4150f4:	mov    eax,DWORD PTR [ebp+0x4c1cecbf]
  4150fa:	mov    esi,DWORD PTR [ebp+0x10]
  4150fd:	mov    eax,DWORD PTR [ecx]
  4150ff:	add    BYTE PTR [esi-0x1],dl
  415102:	sub    al,dl
  415104:	pop    edx
  415105:	fisttp WORD PTR [ebx-0x2ffffb3]
  41510b:	pop    ebp
  41510c:	lods   al,BYTE PTR ds:[esi]
  41510d:	inc    ecx
  41510e:	loopne 0x415099
  415110:	jne    0x415097
  415112:	mov    edx,DWORD PTR [eax]
  415114:	je     0x41515b
  415116:	xchg   edx,eax
  415117:	pop    ss
  415118:	fisttp QWORD PTR [edx-0x40]
  41511b:	int3   
  41511c:	mov    eax,DWORD PTR [eax]
  41511e:	inc    esi
  41511f:	shl    DWORD PTR ds:0x4d00ff9f,0x8
  415126:	int3   
  415127:	add    BYTE PTR [eax],al
  415129:	or     BYTE PTR [ecx+ebx*4-0x74226803],ch
  415130:	int3   
  415131:	je     0x415163
  415133:	jmp    0x46abc11e
  415138:	add    BYTE PTR [ebx+0x8b89],al
  41513e:	(bad)  
  41513f:	adc    dl,dh
  415141:	dec    ebx
  415142:	inc    edi
  415144:	int3   
  415145:	mov    esi,DWORD PTR [ebp+0x76f55a]
  41514b:	add    BYTE PTR [eax],al
  41514d:	inc    DWORD PTR [esi-0x34]
  415150:	rol    BYTE PTR [ecx],0x30
  415153:	pop    esp
  415154:	(bad)  
  415155:	lods   al,BYTE PTR ds:[esi]
  415156:	mov    ecx,DWORD PTR [edi]
  415158:	mov    DWORD PTR [edi+edx*4-0x64],esi
  41515c:	test   eax,0x30fecd1
  415161:	loopne 0x415172
  415163:	add    BYTE PTR [eax],al
  415165:	lea    edi,[ecx+edi*8-0x17fc19e2]
  41516c:	int3   
  41516d:	loopne 0x4151bf
  41516f:	shl    DWORD PTR [eax-0x33ffb970],1
  415175:	inc    DWORD PTR [eax]
  415177:	mov    esi,DWORD PTR [esp+ecx*8+0x2]
  41517b:	test   DWORD PTR [ebp+0x33],eax
  41517e:	int3   
  41517f:	rol    BYTE PTR [eax],0x8b
  415182:	cmp    cl,BYTE PTR [edi]
  415184:	inc    ecx
  415185:	dec    edi
  415186:	inc    ebp
  415187:	add    eax,ebp
  415189:	mov    eax,DWORD PTR [eax]
  41518b:	or     al,0x15
  41518d:	add    edi,eax
  41518f:	cld    
  415190:	sbb    al,0xff
  415192:	int3   
  415193:	int3   
  415194:	add    DWORD PTR [eax],eax
  415196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415197:	sbb    DWORD PTR [edi],ebx
  415199:	jle    0x41519c
  41519b:	add    ah,cl
  41519d:	str    esp
  4151a0:	add    BYTE PTR [eax],dl
  4151a2:	retf   0x535
  4151a5:	add    BYTE PTR gs:[ebx-0x53363340],cl
  4151ac:	cmp    al,0x3c
  4151ae:	add    BYTE PTR [ebx],al
  4151b0:	add    BYTE PTR [eax],al
  4151b2:	add    ah,cl
  4151b4:	jne    0x415182
  4151b6:	inc    ebp
  4151b7:	sbb    edi,DWORD PTR [edi]
  4151b9:	arpl   WORD PTR [eax],ax
  4151bb:	add    BYTE PTR [esi-0x34],al
  4151be:	and    eax,DWORD PTR [edi+edi*4-0x2b]
  4151c2:	je     0x41514f
  4151c4:	add    BYTE PTR [ebx-0x7423],al
  4151ca:	outs   dx,DWORD PTR ds:[esi]
  4151cb:	sbb    esp,esp
  4151cd:	in     eax,0x8b
  4151cf:	add    BYTE PTR [ebx+eax*4+0x42],dh
  4151d3:	pop    ebx
  4151d4:	imul   edi,DWORD PTR [ebx],0x8d00cc8b
  4151da:	add    BYTE PTR [eax],cl
  4151dc:	int3   
  4151dd:	xor    esi,DWORD PTR [edi+ebp*1]
  4151e0:	(bad)  
  4151e1:	pop    DWORD PTR [eax]
  4151e3:	add    bh,bh
  4151e5:	add    eax,DWORD PTR [ecx+ebp*4-0x74744894]
  4151ec:	int3   
  4151ed:	(bad)  
  4151ee:	fisttp QWORD PTR [ebx-0x5224ffab]
  4151f4:	mov    WORD PTR [ebx+0x758b8b],?
  4151fa:	les    esi,FWORD PTR [ecx-0x147ac0bb]
  415200:	mov    esi,DWORD PTR [ebp+0x0]
  415203:	test   DWORD PTR [ecx],eax
  415205:	int3   
  415206:	ret    0x1b84
  415209:	mov    ecx,0x1ff00
  41520e:	fcom   QWORD PTR [edx+0x39]
  415211:	retf   
  415212:	inc    DWORD PTR [ebx+0x8b89]
  415218:	add    al,al
  41521a:	mov    esp,0x8b9dc19c
  41521f:	inc    ebp
  415220:	add    BYTE PTR [ebx*1-0x429162],cl
  415227:	ror    BYTE PTR [ebp-0x75000000],0x0
  41522e:	std    
  41522f:	cwde   
  415230:	jge    0x4151eb
  415232:	mov    ecx,DWORD PTR [ebx-0x6c9ffb0]
  415238:	je     0x4152a7
  41523a:	add    BYTE PTR [eax],al
  41523c:	int3   
  41523d:	add    BYTE PTR [ebx-0x576fe20],cl
  415243:	xor    ecx,DWORD PTR ds:0xc0016af9
  415249:	add    DWORD PTR [edi+0x13a2f1e],esp
  41524f:	inc    DWORD PTR [eax]
  415251:	mov    ecx,DWORD PTR [ebx+0x52c0e889]
  415257:	mov    ebx,0xffcc9a42
  41525c:	mov    eax,DWORD PTR [ebp+0x1]
  41525f:	jmp    0x83:0x458b1b8a
  415266:	mov    edx,DWORD PTR ds:0xa19f0075
  41526c:	push   ebp
  41526d:	xchg   ebp,ebx
  41526f:	(bad)  
  415271:	add    dh,cl
  415273:	mov    ch,0xbc
  415275:	push   ecx
  415276:	inc    ebp
  415277:	add    DWORD PTR [eax],eax
  415279:	add    al,al
  41527b:	dec    esp
  41527d:	add    BYTE PTR [edi],bh
  41527f:	xor    DWORD PTR [ebx],esi
  415281:	stc    
  415282:	add    edi,0x75
  415285:	add    al,bh
  415287:	fisttp QWORD PTR [esp+ebp*1]
  41528a:	int3   
  41528b:	inc    ebp
  41528c:	mov    ecx,DWORD PTR [ebx-0x743f3375]
  415292:	cmp    ecx,DWORD PTR [edi]
  415294:	add    al,0xdb
  415296:	add    BYTE PTR [ecx],al
  415298:	add    DWORD PTR [ebx-0x2843080b],ecx
  41529e:	fld    QWORD PTR [eax]
  4152a0:	add    BYTE PTR [ecx],al
  4152a2:	mov    edi,edi
  4152a4:	add    DWORD PTR [ebx+0x6f135bb0],ecx
  4152aa:	int3   
  4152ab:	int3   
  4152ac:	dec    DWORD PTR [ebx-0x5cc51c7b]
  4152b2:	add    ebp,ebx
  4152b4:	int3   
  4152b5:	test   edi,edi
  4152b7:	add    BYTE PTR [eax],al
  4152b9:	call   0xc0462c06
  4152be:	add    BYTE PTR [eax],al
  4152c0:	mov    edx,DWORD PTR [eax]
  4152c2:	inc    eax
  4152c3:	cdq    
  4152c4:	or     eax,0xcccc43
  4152c9:	add    BYTE PTR [eax+ebp*8+0x0],dh
  4152cd:	jne    0x4152bd
  4152cf:	fnstsw WORD PTR [edi-0x3a]
  4152d2:	add    DWORD PTR [ebp+0xe410008],0xffffffe9
  4152d9:	cmp    bh,bh
  4152db:	int3   
  4152dc:	push   DWORD PTR [ebx]
  4152de:	int3   
  4152df:	add    ah,cl
  4152e1:	add    BYTE PTR [edi+0x21],cl
  4152e4:	int    0x2f
  4152e6:	add    DWORD PTR [eax],eax
  4152e8:	inc    DWORD PTR [eax]
  4152ea:	pop    esi
  4152eb:	pop    esp
  4152ec:	inc    esi
  4152ed:	mov    edi,0xe8ff8bcc
  4152f2:	mov    ecx,DWORD PTR [ebx-0x1e60f734]
  4152f8:	je     0x415320
  4152fa:	mov    ecx,esp
  4152fc:	add    BYTE PTR [ebp+0x36],al
  4152ff:	jbe    0x415301
  415301:	outs   dx,BYTE PTR ds:[esi]
  415302:	mov    ebp,eax
  415304:	int3   
  415305:	add    BYTE PTR [eax],cl
  415307:	inc    DWORD PTR [eax]
  415309:	push   DWORD PTR [eax]
  41530b:	mov    dh,dh
  41530d:	cmp    ebx,ebp
  41530f:	add    BYTE PTR [eax],al
  415311:	add    BYTE PTR [ebx],ah
  415313:	int    0xc3
  415315:	div    DWORD PTR [ebp-0x40]
  415318:	pop    ebp
  415319:	inc    esi
  41531a:	push   esi
  41531b:	add    BYTE PTR [eax],al
  41531d:	dec    edi
  41531f:	int    0x2f
  415321:	fs add esp,ecx
  415324:	jne    0x4152f2
  415326:	xchg   edx,eax
  415327:	pop    eax
  415328:	or     al,cl
  41532a:	add    BYTE PTR [ebx-0x7672f034],cl
  415330:	call   0xc2678bc0
  415335:	ret    0x8d00
  415338:	call   0xb61cc8d
  41533d:	lods   eax,DWORD PTR ds:[esi]
  41533e:	add    esp,ecx
  415340:	add    ah,cl
  415342:	(bad)  
  415343:	int3   
  415344:	mov    ecx,DWORD PTR [ebx+0x2e129d5a]
  41534a:	int3   
  41534b:	or     BYTE PTR [ecx-0xfcc67b],cl
  415351:	mov    BYTE PTR [eax],0xcc
  415354:	add    BYTE PTR [ebx+0x1000f01],cl
  41535a:	xor    DWORD PTR [edi],0xffffff9e
  41535d:	mov    ecx,0x7474e8ff
  415362:	jmp    0xff4d:0x18b3b62
  415369:	push   DWORD PTR [ebp+0x0]
  41536c:	test   DWORD PTR [edi+ebp*1+0x55],esi
  415370:	pop    ebx
  415371:	mov    ah,0x45
  415373:	test   edi,edi
  415375:	dec    DWORD PTR [esp+ebp*8-0xea3e7d]
  41537c:	sldt   WORD PTR [ebx+0x5890045]
  415383:	mov    bl,0x48
  415385:	scas   eax,DWORD PTR es:[edi]
  415386:	mov    eax,DWORD PTR [eax]
  415388:	dec    ebp
  415389:	cmp    ecx,0xffffff81
  41538c:	fwait
  41538d:	or     eax,eax
  41538f:	add    BYTE PTR [ebp-0x7b],dh
  415392:	or     BYTE PTR [ebx+0x588b0000],cl
  415398:	sahf   
  415399:	(bad)  
  41539a:	mov    ecx,esp
  41539c:	add    BYTE PTR [ebx+ebp*2],cl
  41539f:	repnz mov ds:0x8d0800,al
  4153a5:	pop    ebp
  4153a6:	mov    DWORD PTR [eax],0xab0100e0
  4153ac:	popf   
  4153ad:	inc    edi
  4153ae:	cmp    edi,0x1
  4153b1:	add    BYTE PTR [esi+eiz*2+0x12],dh
  4153b5:	aam    0x8b
  4153b7:	test   DWORD PTR [ebp-0x1],esi
  4153ba:	add    BYTE PTR [ecx+0x1110ff00],cl
  4153c0:	xchg   BYTE PTR [edi+edi*8-0x3cf0f000],dh
  4153c7:	sub    esp,0xc
  4153ca:	push   ebx
  4153cb:	push   ebp
  4153cc:	push   esi
  4153cd:	push   edi
  4153ce:	lea    eax,[esp+0x14]
  4153d2:	push   eax
  4153d3:	push   0x1
  4153d5:	call   DWORD PTR ds:0x4180c4
  4153db:	mov    eax,DWORD PTR [esp+0x14]
  4153df:	mov    ecx,DWORD PTR [eax]
  4153e1:	lea    edx,[esp+0x18]
  4153e5:	push   edx
  4153e6:	push   0x4181e0
  4153eb:	push   eax
  4153ec:	call   DWORD PTR [ecx]
  4153ee:	xor    edi,edi
  4153f0:	push   edi
  4153f1:	push   0x1
  4153f3:	push   edi
  4153f4:	mov    ds:0x4194b8,eax
  4153f9:	call   DWORD PTR ds:0x418088
  4153ff:	push   0x3
  415401:	pop    ebx
  415402:	mov    DWORD PTR [esp+0x10],ebx
  415406:	mov    DWORD PTR ds:0x419008,0xd
  415410:	call   DWORD PTR ds:0x41803c
  415416:	mov    esi,DWORD PTR ds:0x418070
  41541c:	mov    ebp,DWORD PTR [esp+0x20]
  415420:	push   0x4181a4
  415425:	push   0x0
  415427:	call   esi
  415429:	mov    eax,ds:0x4193e0
  41542e:	mov    eax,DWORD PTR [eax+edi*4]
  415431:	mov    ecx,DWORD PTR ds:0x4194b8
  415437:	lea    eax,[eax+ecx*1+0x27fd166]
  41543e:	mov    DWORD PTR [ebp+0x0],eax
  415441:	xor    eax,eax
  415443:	add    ebp,0x4
  415446:	cmp    DWORD PTR [esp+0x10],ebx
  41544a:	setne  al
  41544d:	add    eax,0x2
  415450:	add    edi,eax
  415452:	mov    DWORD PTR [esp+0x10],eax
  415456:	cmp    edi,0xc5
  41545c:	jb     0x415420
  41545e:	push   0x418194
  415463:	mov    edi,ebp
  415465:	push   0x0
  415467:	mov    ebp,ebx
  415469:	call   esi
  41546b:	xor    eax,eax
  41546d:	mov    ecx,DWORD PTR ds:0x41947c
  415473:	mov    ecx,DWORD PTR [ecx+eax*4]
  415476:	sub    ecx,DWORD PTR ds:0x4194b8
  41547c:	sub    ecx,0x589097fc
  415482:	mov    DWORD PTR [edi],ecx
  415484:	xor    ecx,ecx
  415486:	add    edi,0x4
  415489:	cmp    ebp,ebx
  41548b:	setne  cl
  41548e:	lea    ebp,[ecx+0x2]
  415491:	add    eax,ebp
  415493:	cmp    eax,0xd4
  415498:	jb     0x41546d
  41549a:	mov    eax,DWORD PTR [esp+0x24]
  41549e:	mov    ecx,eax
  4154a0:	shr    ecx,1
  4154a2:	lea    eax,[ecx+eax*2]
  4154a5:	xor    esi,esi
  4154a7:	mov    ebp,ebx
  4154a9:	mov    DWORD PTR [esp+0x20],eax
  4154ad:	test   eax,eax
  4154af:	je     0x4154fb
  4154b1:	call   DWORD PTR ds:0x41804c
  4154b7:	mov    ecx,DWORD PTR ds:0x4193c0
  4154bd:	xor    eax,eax
  4154bf:	cmp    DWORD PTR ds:0x4194b8,0x80004002
  4154c9:	push   0x36
  4154cb:	setne  al
  4154ce:	push   0x0
  4154d0:	dec    eax
  4154d1:	and    eax,0x55049d31
  4154d6:	add    eax,0xc957
  4154db:	add    eax,DWORD PTR [ecx+esi*4]
  4154de:	mov    DWORD PTR [edi],eax
  4154e0:	add    edi,0x4
  4154e3:	call   DWORD PTR ds:0x4180b0
  4154e9:	xor    eax,eax
  4154eb:	cmp    ebp,ebx
  4154ed:	setne  al
  4154f0:	lea    ebp,[eax+0x2]
  4154f3:	add    esi,ebp
  4154f5:	cmp    esi,DWORD PTR [esp+0x20]
  4154f9:	jb     0x4154b1
  4154fb:	push   0x1
  4154fd:	push   0x5f
  4154ff:	push   0x0
  415501:	mov    ebp,ebx
  415503:	call   DWORD PTR ds:0x418098
  415509:	xor    esi,esi
  41550b:	mov    eax,ds:0x4194b8
  415510:	mov    ecx,DWORD PTR ds:0x41945c
  415516:	xor    eax,0xfff1a75f
  41551b:	add    eax,DWORD PTR [ecx+esi*4]
  41551e:	mov    DWORD PTR [edi],eax
  415520:	add    edi,0x4
  415523:	call   DWORD PTR ds:0x418054
  415529:	xor    eax,eax
  41552b:	cmp    ebp,ebx
  41552d:	setne  al
  415530:	lea    ebp,[eax+0x2]
  415533:	add    esi,ebp
  415535:	cmp    esi,0xc3
  41553b:	jb     0x41550b
  41553d:	mov    ebp,ebx
  41553f:	xor    esi,esi
  415541:	mov    eax,ds:0x4193d4
  415546:	mov    eax,DWORD PTR [eax+esi*4]
  415549:	sub    eax,DWORD PTR ds:0x4194b8
  41554f:	add    eax,0x67c3fe21
  415554:	mov    DWORD PTR [edi],eax
  415556:	call   DWORD PTR ds:0x418054
  41555c:	push   0xf5
  415561:	push   0x0
  415563:	add    edi,0x4
  415566:	call   DWORD PTR ds:0x4180b0
  41556c:	xor    eax,eax
  41556e:	cmp    ebp,ebx
  415570:	setne  al
  415573:	lea    ebp,[eax+0x2]
  415576:	add    esi,ebp
  415578:	cmp    esi,0xaa
  41557e:	jb     0x415541
  415580:	call   DWORD PTR ds:0x41804c
  415586:	mov    esi,ebx
  415588:	xor    eax,eax
  41558a:	mov    ecx,DWORD PTR ds:0x419444
  415590:	mov    ecx,DWORD PTR [ecx+eax*4]
  415593:	sub    ecx,DWORD PTR ds:0x4194b8
  415599:	sub    ecx,0x376c5ded
  41559f:	mov    DWORD PTR [edi],ecx
  4155a1:	xor    ecx,ecx
  4155a3:	add    edi,0x4
  4155a6:	cmp    esi,ebx
  4155a8:	setne  cl
  4155ab:	lea    esi,[ecx+0x2]
  4155ae:	add    eax,esi
  4155b0:	cmp    eax,0xa7
  4155b5:	jb     0x41558a
  4155b7:	pop    edi
  4155b8:	pop    esi
  4155b9:	pop    ebp
  4155ba:	pop    ebx
  4155bb:	add    esp,0xc
  4155be:	ret    
  4155bf:	sahf   
  4155c0:	inc    ebx
  4155c1:	in     al,dx
  4155c2:	outs   dx,DWORD PTR ds:[esi]
  4155c3:	add    al,0xcc
  4155c5:	mov    DWORD PTR [eax],eax
  4155c7:	imul   esi,DWORD PTR [ecx+0x1f394],0xcccc00
  4155d1:	mov    eax,DWORD PTR [eax]
  4155d3:	or     BYTE PTR [edx+esi*2-0x66],0xff
  4155d8:	add    BYTE PTR [eax],al
  4155da:	add    BYTE PTR [edx-0x242e8e],ch
  4155e0:	add    BYTE PTR [ebx+0x74014d],cl
  4155e6:	add    ebp,esp
  4155e8:	(bad)  
  4155e9:	fcomp  DWORD PTR [ebp-0x3313f000]
  4155ef:	sar    esi,cl
  4155f1:	xor    al,0xf0
  4155f3:	test   eax,esp
  4155f5:	(bad)  
  4155f6:	fld    QWORD PTR [eax]
  4155f8:	add    al,0x74
  4155fa:	add    dh,ah
  4155fc:	(bad)  
  4155fd:	xchg   ebx,eax
  4155fe:	and    edi,edi
  415600:	mov    DWORD PTR [ebp+0x0],ecx
  415603:	inc    esp
  415604:	adc    eax,0x33f7d9
  415609:	add    bh,bh
  41560b:	add    DWORD PTR [ecx],eax
  41560d:	add    DWORD PTR [eax],0xffffffdc
  415610:	mov    ah,0x8b
  415612:	loope  0x415613
  415614:	inc    esi
  415615:	add    BYTE PTR [eax],cl
  415617:	scas   al,BYTE PTR es:[edi]
  415618:	xor    dl,BYTE PTR [edx]
  41561a:	xchg   DWORD PTR [eax],eax
  41561c:	mov    eax,DWORD PTR [eax]
  41561e:	mov    eax,DWORD PTR [eax]
  415620:	rol    BYTE PTR [eax],0x8d
  415623:	(bad)  
  415624:	pop    ebx
  415625:	lods   eax,DWORD PTR ds:[esi]
  415626:	push   ecx
  415627:	add    DWORD PTR [eax+eax*1+0x0],esi
  41562b:	or     ch,dl
  41562d:	or     BYTE PTR [edx-0x338bfe40],0x1
  415634:	or     BYTE PTR [ebx+0x526ce00],cl
  41563a:	xchg   ecx,eax
  41563b:	mov    ebp,DWORD PTR [edx-0x34]
  41563e:	int3   
  41563f:	dec    esi
  415640:	popf   
  415641:	inc    esp
  415642:	adc    DWORD PTR [eax],eax
  415644:	adc    eax,0x55cc0808
  415649:	or     DWORD PTR [ebx-0xa52b999],0xffffffc7
  415650:	add    ah,ch
  415652:	shl    BYTE PTR [edx-0x8a98d3],0x8b
  415659:	or     BYTE PTR [eax],al
  41565b:	test   DWORD PTR [eax],eax
  41565d:	add    BYTE PTR ds:0xd7aa14a6,dl
  415663:	jne    0x415665
  415665:	mov    ecx,esp
  415667:	xchg   edi,eax
  415668:	imul   esp,DWORD PTR [eax-0x74a9ff68],0xffffffcc
  41566f:	rol    BYTE PTR [eax],0xe8
  415672:	add    al,0xc8
  415674:	fisubr WORD PTR [edi+0x68]
  415677:	test   DWORD PTR [ebx-0x1c2722f0],ecx
  41567d:	pop    edi
  41567e:	pushf  
  41567f:	push   esi
  415680:	jmp    0x415607
  415682:	je     0x41560f
  415684:	inc    DWORD PTR [eax]
  415686:	mov    esp,ebx
  415688:	mov    al,0xbf
  41568a:	out    dx,al
  41568b:	adc    bh,bh
  41568d:	int3   
  41568e:	add    ch,cl
  415690:	or     ebp,esp
  415692:	call   0x8b:0xcff8b45
  415699:	int3   
  41569a:	mov    esp,ebx
  41569c:	push   ds
  41569d:	(bad)  
  41569e:	call   0xcc56b8
  4156a3:	jae    0x415708
  4156a5:	scas   eax,DWORD PTR es:[edi]
  4156a6:	(bad)  
  4156a7:	inc    DWORD PTR [ebp+0x0]
  4156aa:	int3   
  4156ab:	adc    BYTE PTR [eax],al
  4156ad:	or     BYTE PTR [eax],dl
  4156af:	cmp    BYTE PTR [eax],0xe3
  4156b2:	call   0xf1e9:0xf0000
  4156b9:	xor    al,0xd3
  4156bb:	or     al,0x3
  4156bd:	mov    DWORD PTR [eax],eax
  4156bf:	int3   
  4156c0:	mov    esp,ecx
  4156c2:	je     0x415721
  4156c4:	xchg   esi,eax
  4156c5:	jp     0x4156e2
  4156c7:	push   eax
  4156c8:	adc    DWORD PTR [eax-0x34],0xffffff83
  4156cc:	add    DWORD PTR [ecx+0x75008b80],ebx
  4156d2:	add    BYTE PTR [ebx-0x71ff3375],cl
  4156d8:	shl    DWORD PTR [esi+eiz*1-0xff8b00],1
  4156df:	ss push esi
  4156e1:	add    ch,BYTE PTR [eax+eax*1+0x8b8300]
  4156e8:	int3   
  4156e9:	add    BYTE PTR [edi],cl
  4156eb:	add    BYTE PTR [ebp+0x21],0xfb
  4156ef:	int3   
  4156f0:	inc    ebp
  4156f1:	mov    edx,DWORD PTR [eax]
  4156f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156f4:	mov    al,dl
  4156f6:	jp     0x4156f8
  4156f8:	call   DWORD PTR [eax-0x34]
  4156fb:	add    BYTE PTR [ecx],al
  4156fd:	adc    BYTE PTR [eax],dl
  4156ff:	sbb    BYTE PTR [edx-0xffb83d],ah
  415705:	or     DWORD PTR [ebp-0x4c],0xffffff90
  415709:	push   esp
  41570a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41570b:	or     BYTE PTR [eax+edx*1],al
  41570e:	add    BYTE PTR [ebx+0x5150000],cl
  415714:	ret    0xd1aa
  415717:	or     BYTE PTR ds:0x6b8cff8b,dl
  41571d:	mov    ebp,0x55155641
  415722:	add    BYTE PTR [eax],al
  415724:	or     BYTE PTR [eax],al
  415726:	je     0x4156bd
  415728:	cmp    dh,BYTE PTR [eax-0x21]
  41572b:	add    BYTE PTR [ebx+0x52850000],cl
  415731:	add    bl,dl
  415733:	jmp    0x415701
  415735:	je     0x4156c2
  415737:	add    bh,bh
  415739:	add    BYTE PTR [ecx+ebp*1+0x17],dh
  41573d:	jl     0x415733
  41573f:	mov    DWORD PTR [ebx-0x76f73377],ecx
  415745:	sub    ch,BYTE PTR [edi-0x14ff7a15]
  41574b:	add    BYTE PTR [ebx+ecx*4],al
  41574e:	jne    0x4156e2
  415750:	addr16 sub esi,esp
  415753:	add    esi,DWORD PTR [ebx]
  415755:	int3   
  415756:	xor    esi,DWORD PTR [ebp+0x13]
  415759:	dec    eax
  41575a:	imul   BYTE PTR [edx-0x1]
  41575d:	mov    eax,DWORD PTR [ebx]
  41575f:	add    BYTE PTR [ebp+0x0],cl
  415762:	or     al,0xdc
  415764:	daa    
  415765:	mov    dh,0xa9
  415767:	mov    eax,DWORD PTR [ebx-0x485574ff]
  41576d:	sub    ah,dl
  41576f:	mov    eax,DWORD PTR [eax]
  415771:	or     BYTE PTR [ecx],al
  415773:	add    BYTE PTR [eax],al
  415775:	int3   
  415776:	add    BYTE PTR [ebp-0x43],ah
  415779:	ss stc 
  41577b:	add    bh,bh
  41577d:	pop    ebp
  41577e:	add    ebx,DWORD PTR [eax]
  415780:	pop    esi
  415781:	test   eax,0x8008596
  415786:	cmp    edi,0xffffff8b
  415789:	jne    0x41576b
  41578b:	out    dx,eax
  41578c:	ror    BYTE PTR [ebp-0x28],0x8d
  415790:	add    BYTE PTR [edi+edi*8-0x18],dh
  415794:	nop
  415795:	std    
  415796:	sub    eax,DWORD PTR [eax]
  415798:	add    DWORD PTR [eax],0x0
  41579b:	add    bh,bh
  41579d:	add    BYTE PTR [eax],al
  41579f:	shr    cl,0xd6
  4157a2:	push   0x8b00cc00
  4157a7:	not    DWORD PTR [edx+0x550367eb]
  4157ad:	mov    eax,DWORD PTR [eax]
  4157af:	mov    DWORD PTR [eax],eax
  4157b1:	rol    BYTE PTR [edi+edx*2],0xe2
  4157b5:	or     al,0x81
  4157b7:	add    BYTE PTR [ebx+0xfb555cc],cl
  4157bd:	dec    esp
  4157be:	ins    DWORD PTR es:[edi],dx
  4157bf:	push   ebp
  4157c0:	inc    DWORD PTR [eax]
  4157c2:	(bad)  
  4157c3:	dec    esp
  4157c5:	add    BYTE PTR [esi-0x9],dl
  4157c8:	sbb    BYTE PTR [edi],dh
  4157ca:	mov    BYTE PTR [eax],0x0
  4157cd:	or     BYTE PTR [eax],cl
  4157cf:	pop    ebx
  4157d0:	mov    edx,0xffebdac0
  4157d5:	dec    DWORD PTR [ebx+0x8b8b00]
  4157db:	jecxz  0x4157ce
  4157dd:	lahf   
  4157de:	jo     0x4157e0
  4157e0:	add    BYTE PTR [eax],al
  4157e2:	int3   
  4157e3:	cmp    edi,ebp
  4157e5:	lods   al,BYTE PTR ds:[esi]
  4157e6:	mov    edx,0x8c7ff85
  4157eb:	jmp    0x4157ec
  4157ed:	xrstors [edx+0xdbb07f]
  4157f4:	xor    eax,DWORD PTR [ebx+0x40648101]
  4157fa:	repz int3 
  4157fc:	mov    eax,DWORD PTR [ecx]
  4157fe:	mov    DWORD PTR [eax],eax
  415800:	(bad)  
  415801:	inc    DWORD PTR [eax]
  415803:	inc    ebx
  415804:	retf   
  415805:	lods   eax,DWORD PTR ds:[esi]
  415806:	scas   eax,DWORD PTR es:[edi]
  415807:	mov    ecx,DWORD PTR [ebx+0x6bbacc83]
  41580d:	popf   
  41580e:	cld    
  41580f:	(bad)  
  415810:	inc    DWORD PTR [eax]
  415812:	add    BYTE PTR [eax],al
  415814:	mov    DWORD PTR [ebx-0x2e875001],ecx
  41581a:	inc    BYTE PTR [esi-0x34]
  41581d:	int3   
  41581e:	int3   
  41581f:	iret   
  415820:	add    BYTE PTR [ebx+0xf018bc3],ah
  415826:	inc    ebp
  415827:	add    BYTE PTR [ecx],al
  415829:	mov    edx,DWORD PTR [ebp-0x6e]
  41582c:	push   ds
  41582d:	mov    ds:0x6ac000a4,eax
  415832:	dec    ebp
  415833:	enter  0xe909,0x40
  415837:	inc    DWORD PTR [eax]
  415839:	add    BYTE PTR [eax*4-0x6ef37a8c],al
  415840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415841:	mov    dh,0x31
  415843:	add    BYTE PTR [ebx+0xdad0100],cl
  415849:	fidiv  DWORD PTR [ebx+0x0]
  41584c:	int3   
  41584d:	dec    DWORD PTR [ebx+0x50560010]
  415853:	scas   eax,DWORD PTR es:[edi]
  415854:	and    al,dh
  415856:	test   ah,0xff
  415859:	add    BYTE PTR [ebp+0x27],bl
  41585c:	or     al,0x9c
  41585e:	mov    esi,0xff0045c0
  415863:	adc    BYTE PTR [eax],al
  415865:	add    ah,cl
  415867:	xlat   BYTE PTR ds:[ebx]
  415868:	dec    edi
  415869:	loope  0x41580a
  41586b:	add    BYTE PTR [ecx+eax*1],cl
  41586e:	adc    ch,ch
  415870:	inc    ebx
  415871:	cmp    al,0x2d
  415873:	push   ebp
  415874:	mov    ebp,ebx
  415876:	mov    edx,DWORD PTR [ebp-0x75]
  415879:	mov    eax,DWORD PTR [eax]
  41587b:	aad    0x83
  41587d:	mov    al,0x9b
  41587f:	jne    0x41580c
  415881:	mov    DWORD PTR [edx-0x12],ebp
  415884:	imul   edi,DWORD PTR [ebp+0x45cc0c8a],0xff8b0315
  41588e:	int3   
  41588f:	call   0xc08d:0x109ea73e
  415896:	push   ebp
  415897:	test   eax,0x66d116
  41589c:	inc    DWORD PTR [ecx+ecx*4]
  41589f:	mov    esi,DWORD PTR [ebp-0x34]
  4158a2:	jmp    DWORD PTR [ebx]
  4158a4:	ds dec eax
  4158a6:	xchg   BYTE PTR [ebp-0x1],dh
  4158a9:	push   0x1
  4158ab:	and    eax,0x8dc0dc36
  4158b0:	add    DWORD PTR [eax],eax
  4158b2:	mov    eax,DWORD PTR [eax]
  4158b4:	push   eax
  4158b5:	xor    ebx,ebp
  4158b7:	cmp    BYTE PTR [edx-0x74fb8e8d],ch
  4158bd:	(bad)  
  4158be:	(bad)  
  4158bf:	out    dx,al
  4158c0:	ds retf 0x45e5
  4158c4:	int3   
  4158c5:	test   eax,eax
  4158c7:	or     ah,cl
  4158c9:	test   eax,eax
  4158cb:	in     eax,0xa1
  4158cd:	pop    DWORD PTR [esi-0x3fffff34]
  4158d3:	ins    DWORD PTR es:[edi],dx
  4158d4:	shl    DWORD PTR [ecx],cl
  4158d6:	xchg   edx,eax
  4158d7:	adc    eax,0x458b8b00
  4158dc:	add    BYTE PTR [ebx],dh
  4158de:	int3   
  4158df:	aas    
  4158e0:	mov    ds,edx
  4158e2:	ret    0x10
  4158e5:	int3   
  4158e6:	add    BYTE PTR [edx+0x31],ch
  4158e9:	mov    bl,0x63
  4158eb:	add    BYTE PTR [ebx-0x3f00ff],cl
  4158f1:	dec    ebp
  4158f2:	int3   
  4158f3:	mov    bh,0x17
  4158f5:	test   eax,0xf50e0d5
  4158fa:	lea    esi,[ebx+0x23]
  4158fd:	lea    ebp,[edx-0x33ccba00]
  415903:	in     al,dx
  415904:	inc    DWORD PTR [eax]
  415906:	mov    esp,DWORD PTR [eax+0x2a]
  415909:	jo     0x41592b
  41590b:	int3   
  41590c:	int3   
  41590d:	mov    DWORD PTR [ebx],esi
  41590f:	mov    edi,0x55e5a643
  415914:	xor    ebp,eax
  415916:	or     ah,cl
  415918:	add    BYTE PTR [edx+0x74],ch
  41591b:	aad    0x57
  41591d:	push   cs
  41591e:	std    
  41591f:	push   esi
  415920:	test   edi,edi
  415922:	add    BYTE PTR [ecx+0x6],bl
  415925:	push   edi
  415926:	(bad)  
  415927:	(bad)  
  415928:	fucomp st(0)
  41592a:	mov    DWORD PTR [ebx-0x3cffb275],ecx
  415930:	pop    eax
  415931:	outs   dx,BYTE PTR ds:[esi]
  415932:	mov    cl,0xd7
  415934:	int3   
  415935:	rol    BYTE PTR [esi+0x1],0x0
  415939:	sub    al,BYTE PTR [ebx]
  41593b:	ins    DWORD PTR es:[edi],dx
  41593c:	mov    eax,DWORD PTR [ecx]
  41593e:	add    BYTE PTR [eax],al
  415940:	add    BYTE PTR [ecx+0x5ff500cc],cl
  415946:	outs   dx,DWORD PTR ds:[esi]
  415947:	jbe    0x415948
  415949:	mov    DWORD PTR [eax],eax
  41594b:	add    BYTE PTR [edx-0x3a],ah
  41594e:	in     al,dx
  41594f:	and    BYTE PTR [eax],al
  415951:	mov    DWORD PTR [eax],eax
  415953:	int3   
  415954:	add    BYTE PTR [eax],al
  415956:	inc    ebp
  415957:	mov    ebp,DWORD PTR [edx+0x61]
  41595a:	pusha  
  41595b:	xchg   edx,eax
  41595c:	mov    eax,DWORD PTR [eax]
  41595e:	mov    eax,DWORD PTR [eax]
  415960:	mov    bl,0x15
  415962:	mov    BYTE PTR [esi+0xf0000],0xcc
  415969:	dec    DWORD PTR [ebx+0x4137ed01]
  41596f:	bound  edx,QWORD PTR [eax]
  415971:	int3   
  415972:	in     al,dx
  415973:	or     BYTE PTR [ebp+0x6f1125],dh
  415979:	call   0x8b91e481
  41597e:	add    bh,bh
  415980:	ret    
  415981:	xor    eax,0x45d734
  415986:	mov    ebp,ebx
  415988:	dec    ebx
  415989:	gs add eax,0x45cc00d2
  41598f:	inc    ebp
  415990:	jmp    0x41597d
  415992:	add    BYTE PTR [ebx+0x5b3b3576],cl
  415998:	int3   
  415999:	or     al,0x0
  41599b:	add    ah,al
  41599d:	sbb    eax,0x103b3ad
  4159a2:	push   eax
  4159a3:	push   0xffffffeb
  4159a5:	add    BYTE PTR [edi+edi*8],cl
  4159a8:	sub    bl,BYTE PTR [edx+eax*4-0x13b9fec1]
  4159af:	punpckldq mm2,DWORD PTR [edx-0x1a]
  4159b3:	adc    al,0x0
  4159b5:	add    BYTE PTR [esi+0x50],al
  4159b8:	add    BYTE PTR [eax],al
  4159ba:	mov    eax,DWORD PTR [ecx]
  4159bc:	sub    DWORD PTR [edx+0x65],esp
  4159bf:	adc    eax,DWORD PTR [ebp-0x34]
  4159c2:	add    DWORD PTR ds:0x5c717e15,edx
  4159c8:	add    BYTE PTR [eax],al
  4159ca:	push   ebp
  4159cb:	add    esp,ecx
  4159cd:	mov    eax,DWORD PTR [eax]
  4159cf:	int3   
  4159d0:	lods   al,BYTE PTR ds:[esi]
  4159d1:	enter  0x3069,0x75
  4159d5:	int3   
  4159d6:	push   ebp
  4159d7:	call   0xdd777b96
  4159dc:	add    BYTE PTR [eax],cl
  4159de:	int3   
  4159df:	add    al,0x0
  4159e1:	or     al,0xff
  4159e3:	int3   
  4159e4:	jmp    0xdd4d:0xa6c19e
  4159eb:	add    BYTE PTR [edi+esi*8+0xdd7037],dh
  4159f2:	int3   
  4159f3:	mov    ecx,esp
  4159f5:	adc    BYTE PTR [eax],al
  4159f7:	jmp    0x4159ee
  4159f9:	adc    eax,0x8b892c79
  4159fe:	add    BYTE PTR [esp-0x11],dh
  415a02:	and    edx,0x8945ff8b
  415a08:	add    al,ah
  415a0a:	loopne 0x415a14
  415a0c:	pop    es
  415a0d:	ins    BYTE PTR es:[edi],dx
  415a0e:	(bad)  
  415a0f:	sbb    ah,cl
  415a11:	test   DWORD PTR [ebx-0xee4a00],eax
  415a17:	loope  0x4159e5
  415a19:	or     al,0x89
  415a1b:	pop    ebp
  415a1c:	add    ah,cl
  415a1e:	add    BYTE PTR [eax],al
  415a20:	bound  edx,QWORD PTR [ecx-0x33f798ea]
  415a26:	int3   
  415a27:	int3   
  415a28:	jb     0x415a2c
  415a2a:	retf   0x8952
  415a2d:	add    BYTE PTR [ebx+0x808000c],cl
  415a33:	mov    esp,esp
  415a35:	sbb    DWORD PTR [ebp-0x22fffb89],edi
  415a3b:	add    BYTE PTR [ebp-0x743db9eb],ch
  415a41:	add    BYTE PTR [ebx+0x74cc04ff],cl
  415a47:	add    BYTE PTR [eax],ch
  415a49:	pushf  
  415a4a:	cmc    
  415a4b:	out    dx,eax
  415a4c:	mov    ecx,DWORD PTR [ecx+0xc8b4dff]
  415a52:	sbb    bl,BYTE PTR [eax]
  415a54:	inc    DWORD PTR [ecx]
  415a56:	mov    esi,DWORD PTR [ebp-0x7d]
  415a59:	test   DWORD PTR [ebx+0x83b0883],ecx
  415a5f:	xchg   ecx,eax
  415a60:	push   ebp
  415a61:	add    ch,bl
  415a63:	add    ebx,esp
  415a65:	popa   
  415a66:	out    dx,eax
  415a67:	js     0x415a69
  415a69:	int3   
  415a6a:	add    BYTE PTR [eax],al
  415a6c:	dec    ebp
  415a6d:	add    BYTE PTR [eax],al
  415a6f:	push   0xffffffdb
  415a71:	add    BYTE PTR [esi-0x76],al
  415a74:	xor    DWORD PTR [ebx],0xffffff89
  415a77:	add    BYTE PTR [esi],ah
  415a79:	mov    esi,DWORD PTR [eax-0x7a]
  415a7c:	loopne 0x415ad4
  415a7e:	dec    esp
  415a80:	add    BYTE PTR [ebx-0x7c9bff8c],cl
  415a86:	pop    edi
  415a87:	mov    ecx,0x5685e001
  415a8c:	scas   eax,DWORD PTR es:[edi]
  415a8d:	mov    ds:0x8ccd46f,al
  415a92:	add    BYTE PTR [ebx+0x150050],cl
  415a98:	xchg   edi,eax
  415a99:	popa   
  415a9a:	fs repz adc eax,0xee00008b
  415aa1:	mov    ds:0x883ff06,eax
  415aa6:	add    DWORD PTR [ecx],eax
  415aa8:	xor    DWORD PTR [ebp-0x7d],0xffffffcc
  415aac:	mov    eax,0x45f25f13
  415ab1:	add    bl,ch
  415ab3:	mov    esp,edi
  415ab5:	mov    ?,WORD PTR [ecx+0x3e]
  415ab8:	add    BYTE PTR [ebx-0x33ff74ff],cl
  415abe:	add    BYTE PTR [eax],al
  415ac0:	pop    eax
  415ac1:	ret    0xf562
  415ac4:	add    BYTE PTR [eax],al
  415ac6:	in     al,dx
  415ac7:	adc    eax,0xda807246
  415acc:	adc    BYTE PTR [eax],dl
  415ace:	add    BYTE PTR [eax],al
  415ad0:	loopne 0x415ad6
  415ad2:	int3   
  415ad3:	mov    edi,DWORD PTR [edi+eax*8]
  415ad6:	pop    edi
  415ad7:	loope  0x415ad8
  415ad9:	int3   
  415ada:	add    DWORD PTR [esi+edi*2],ecx
  415add:	call   0x6a42f674
  415ae2:	mov    ecx,DWORD PTR [ebx+0x1ff8b74]
  415ae8:	push   ebp
  415ae9:	add    al,bl
  415aeb:	sbb    al,0x3
  415aed:	inc    DWORD PTR [eax]
  415aef:	add    BYTE PTR [esi-0x7460f51e],al
  415af5:	add    DWORD PTR [ecx],eax
  415af7:	int3   
  415af8:	in     al,dx
  415af9:	adc    bh,bh
  415afb:	loopne 0x415b4f
  415afd:	ret    0x5c96
  415b00:	fld    QWORD PTR [eax]
  415b02:	add    edx,DWORD PTR [eax]
  415b04:	add    ch,cl
  415b06:	mul    ecx
  415b08:	int3   
  415b09:	add    BYTE PTR [ebp+0x75],dh
  415b0c:	add    DWORD PTR [eax],0xffffff8b
  415b0f:	mov    ecx,DWORD PTR [edi-0x55]
  415b12:	rcr    DWORD PTR [ebx+eax*4+0x3646cc75],0x79
  415b1a:	int3   
  415b1b:	dec    ebp
  415b1c:	mov    ecx,DWORD PTR [ebx-0x33f73314]
  415b22:	mov    ecx,esp
  415b24:	fwait
  415b25:	cmp    DWORD PTR ds:0xc05d004d,esp
  415b2b:	add    bh,dl
  415b2d:	inc    edx
  415b2e:	(bad)
  415b32:	add    ah,cl
  415b34:	inc    esi
  415b35:	push   esi
  415b36:	loopne 0x415b3c
  415b38:	sti    
  415b39:	ins    DWORD PTR es:[edi],dx
  415b3a:	dec    ebx
  415b3b:	out    dx,eax
  415b3c:	mov    eax,DWORD PTR [eax]
  415b3e:	call   DWORD PTR ds:0xd751ed97
  415b44:	push   eax
  415b45:	push   ebp
  415b46:	dec    ebp
  415b47:	add    BYTE PTR [ebp-0x1],cl
  415b4a:	xor    eax,DWORD PTR [eax]
  415b4c:	fs repz cwde 
  415b4f:	or     DWORD PTR [ebx-0x1133ff34],ecx
  415b55:	jnp    0x415b8b
  415b57:	sbb    DWORD PTR [ecx-0x17f7ff75],ecx
  415b5d:	mov    ebp,DWORD PTR [edx-0x1]
  415b60:	xor    ebp,DWORD PTR [eax]
  415b62:	jns    0x415ba0
  415b64:	mov    eax,DWORD PTR [eax]
  415b66:	inc    ebp
  415b67:	int3   
  415b68:	ror    BYTE PTR [edx+0xfc9b],0xff
  415b6f:	mov    eax,DWORD PTR [eax]
  415b71:	mov    eax,edi
  415b73:	add    DWORD PTR [edx+ebp*2-0x51],esi
  415b77:	pop    esp
  415b78:	inc    DWORD PTR [ebx+0x5b4a0075]
  415b7e:	adc    BYTE PTR [edx],0x0
  415b81:	inc    ebp
  415b82:	push   eax
  415b83:	dec    esp
  415b85:	in     al,dx
  415b86:	push   ebp
  415b87:	mov    ebp,DWORD PTR [ebx-0xf]
  415b8a:	sbb    cl,BYTE PTR [esi-0x7cefa934]
  415b90:	enter  0x1761,0x12
  415b94:	int3   
  415b95:	lea    eax,[eax]
  415b97:	add    DWORD PTR [eax],0x0
  415b9a:	int3   
  415b9b:	or     al,0x84
  415b9d:	mov    ds:0x50cce53e,eax
  415ba2:	or     BYTE PTR [eax],al
  415ba4:	mov    bh,0x16
  415ba6:	pop    ebx
  415ba7:	pop    eax
  415ba8:	int3   
  415ba9:	add    BYTE PTR [ebx-0x7aba2234],cl
  415baf:	test   ebx,eax
  415bb1:	(bad)  
  415bb2:	mov    eax,DWORD PTR [edx-0x7c14ff5c]
  415bb8:	add    BYTE PTR [esi-0x7cbe50fd],ch
  415bbe:	mov    DWORD PTR [eax],0x1754510
  415bc4:	lea    edi,[esi+0x24e13a]
  415bca:	add    BYTE PTR [esp+ecx*8],al
  415bcd:	and    al,0x13
  415bcf:	ret    0xbd
  415bd2:	mov    DWORD PTR [ebx+0xccc89],ecx
  415bd8:	dec    ebp
  415bd9:	xchg   esp,eax
  415bda:	push   0xffffffc6
  415bdc:	mov    cl,0x0
  415bde:	push   ebp
  415bdf:	int3   
  415be0:	inc    ebp
  415be1:	mov    ebp,DWORD PTR [ebx-0x4e]
  415be4:	pop    ss
  415be5:	add    BYTE PTR [ebp-0x74aaf800],cl
  415beb:	inc    esi
  415bec:	mov    ebp,DWORD PTR [eax-0x2d]
  415bef:	(bad)  
  415bf0:	fidiv  WORD PTR [ebp-0x15]
  415bf3:	int3   
  415bf4:	mov    ebp,ebx
  415bf6:	pop    ebx
  415bf7:	xlat   BYTE PTR ds:[ebx]
  415bf8:	mov    edx,0x4565000
  415bfd:	mov    DWORD PTR [ebp-0x77],eax
  415c00:	mov    ebx,esi
  415c02:	dec    esp
  415c03:	in     eax,dx
  415c04:	dec    ebx
  415c05:	mov    esp,eax
  415c07:	add    ah,cl
  415c09:	dec    eax
  415c0a:	and    al,0xa4
  415c0c:	inc    ebx
  415c0d:	add    ah,cl
  415c0f:	add    ah,cl
  415c11:	test   DWORD PTR [eax],eax
  415c13:	xor    ecx,DWORD PTR [ebx+ebp*8]
  415c16:	jb     0x415bda
  415c18:	mov    edx,0x0
  415c1d:	mov    edx,0x8bd1b52d
  415c22:	add    al,al
  415c24:	mov    eax,DWORD PTR [eax]
  415c26:	add    BYTE PTR [eax],al
  415c28:	add    bh,bl
  415c2a:	sub    ah,bh
  415c2c:	xlat   BYTE PTR ds:[ebx]
  415c2d:	add    esp,ecx
  415c2f:	call   0xe88c3534
  415c34:	icebp  
  415c35:	jne    0x415bbc
  415c37:	dec    DWORD PTR [eax]
  415c39:	pop    ebp
  415c3a:	or     BYTE PTR [eax],al
  415c3c:	push   ebp
  415c3d:	test   BYTE PTR [eax+0x38],bl
  415c40:	lods   al,BYTE PTR ds:[esi]
  415c41:	mov    ecx,esp
  415c43:	add    BYTE PTR [eax],al
  415c45:	adc    al,0x37
  415c47:	jl     0x415c0c
  415c49:	fld    QWORD PTR [eax]
  415c4b:	inc    DWORD PTR [eax]
  415c4d:	add    al,0x8b
  415c4f:	add    BYTE PTR [eax],al
  415c51:	cmc    
  415c52:	adc    BYTE PTR [ebp+0x33cc0032],bl
  415c58:	loopne 0x415bfd
  415c5a:	retf   0x6996
  415c5d:	add    BYTE PTR [eax],al
  415c5f:	add    BYTE PTR [eax],al
  415c61:	ror    BYTE PTR [ebp-0x18],0xe8
  415c65:	mov    ah,0xd8
  415c67:	mov    eax,0x8bcc00d9
  415c6c:	add    cl,dl
  415c6e:	jge    0x415ca5
  415c70:	add    al,BYTE PTR [ebx-0x74eaf800]
  415c76:	add    al,ah
  415c78:	add    BYTE PTR [ecx+0x4],ch
  415c7b:	int3   
  415c7c:	cli    
  415c7d:	rol    BYTE PTR [eax],0x8b
  415c80:	or     BYTE PTR [ebp-0x5b],dl
  415c83:	xlat   BYTE PTR ds:[ebx]
  415c84:	out    dx,eax
  415c85:	jnp    0x8bc45d4b
  415c8b:	mov    eax,DWORD PTR [eax]
  415c8d:	dec    ebx
  415c8e:	push   edi
  415c8f:	aaa    
  415c90:	ins    BYTE PTR es:[edi],dx
  415c91:	add    esp,ecx
  415c93:	(bad)  
  415c94:	push   eax
  415c96:	add    BYTE PTR [eax+0x8b8b5a],ch
  415c9c:	je     0x415caa
  415c9e:	add    BYTE PTR [ebx+0x3ae1a200],cl
  415ca4:	inc    eax
  415ca5:	jne    0x415cb3
  415ca7:	mov    ecx,esp
  415ca9:	in     al,0x30
  415cab:	adc    al,0x62
  415cad:	or     al,0xff
  415caf:	add    esp,ecx
  415cb1:	add    bl,ch
  415cb3:	int3   
  415cb4:	jmp    DWORD PTR [edx-0x141829fc]
  415cba:	mov    DWORD PTR [ebp-0x1],eax
  415cbd:	ret    0x64f0
  415cc0:	pop    edi
  415cc1:	add    BYTE PTR [eax],dl
  415cc3:	je     0x415cc5
  415cc5:	mov    edi,edi
  415cc7:	inc    ebp
  415cc8:	or     DWORD PTR [esi+0x26],0x50
  415ccc:	jnp    0x415c59
  415cce:	inc    DWORD PTR [ebp-0x75]
  415cd1:	xchg   DWORD PTR [edx+0x1e431],ebx
  415cd7:	mov    edi,edi
  415cd9:	add    DWORD PTR [eax],0x10
  415cdc:	add    BYTE PTR [esi+ebp*8+0xffecec],ch
  415ce3:	xor    ecx,DWORD PTR [esi+ecx*1]
  415ce6:	call   0xc7512e
  415ceb:	int3   
  415cec:	adc    DWORD PTR [eax],0xffffff8b
  415cef:	dec    DWORD PTR [ebx-0x207b921b]
  415cf5:	mov    eax,DWORD PTR [eax]
  415cf7:	or     BYTE PTR [ebx+0x22549e8f],cl
  415cfd:	mov    DWORD PTR [eax],eax
  415cff:	call   0x42e88f
  415d04:	dec    ebp
  415d05:	(bad)  [ecx]
  415d07:	lea    esp,[ecx-0x133333aa]
  415d0d:	sub    edi,DWORD PTR [eax+0x29]
  415d10:	hlt    
  415d11:	add    ah,cl
  415d13:	inc    ebp
  415d14:	add    BYTE PTR [ebx-0x34f7ffff],cl
  415d1a:	adc    ah,bh
  415d1c:	gs jmp 0x415ceb
  415d1f:	test   esp,ecx
  415d21:	mov    ds:0xee0556,al
  415d26:	mov    eax,DWORD PTR [eax]
  415d28:	xor    edi,edi
  415d2a:	mov    esp,eax
  415d2c:	push   ebp
  415d2d:	inc    edi
  415d2e:	xchg   ebp,eax
  415d2f:	cmp    edx,DWORD PTR [ebp+0x15]
  415d32:	int3   
  415d33:	int3   
  415d34:	je     0x415ccd
  415d36:	ficomp WORD PTR ds:0x8bff33
  415d3c:	add    DWORD PTR [eax],eax
  415d3e:	mov    eax,DWORD PTR [eax]
  415d40:	jmp    FWORD PTR [eax+0x8ebb258]
  415d46:	fisttp QWORD PTR [ecx+0x713b3b00]
  415d4c:	pop    es
  415d4d:	add    BYTE PTR [ebp-0x75],dl
  415d50:	inc    DWORD PTR [eax]
  415d52:	int3   
  415d53:	adc    eax,0x24a83200
  415d58:	fs inc ebp
  415d5a:	add    BYTE PTR [eax],cl
  415d5c:	mov    ebx,DWORD PTR [eax+0x11]
  415d5f:	xchg   ecx,eax
  415d60:	xchg   edi,eax
  415d61:	inc    ebp
  415d62:	or     BYTE PTR [edi+edi*8],al
  415d65:	mov    ecx,DWORD PTR [ebx+0x4eebff89]
  415d6b:	ins    BYTE PTR es:[edi],dx
  415d6c:	fs jne 0x415d6f
  415d6f:	mov    edx,DWORD PTR [eax-0x8]
  415d72:	mov    DWORD PTR [ebp+0x8b4619],ebx
  415d78:	mov    ecx,DWORD PTR [ebx+0x1e8589ec]
  415d7e:	adc    eax,0x89103b56
  415d83:	add    BYTE PTR [ebp+edi*4-0x1f],dh
  415d87:	les    edx,FWORD PTR [edx+0x4000083]
  415d8d:	call   DWORD PTR ds:0x7f470000
  415d93:	loopne 0x415d73
  415d95:	mov    ecx,DWORD PTR [eax]
  415d97:	rol    BYTE PTR [ebx-0x3d57cb2a],0xff
  415d9e:	add    BYTE PTR [ebx+0x16a8b00],cl
  415da4:	int3   
  415da5:	scas   eax,DWORD PTR es:[edi]
  415da6:	repnz xor dh,BYTE PTR [eax-0x741f3375]
  415dad:	mov    bl,0x34
  415daf:	in     eax,0x71
  415db1:	mov    ecx,esp
  415db3:	inc    ebp
  415db4:	mov    edx,DWORD PTR [eax]
  415db6:	dec    ebp
  415db7:	push   ebp
  415db8:	jmp    0x415ddb
  415dba:	jns    0x415d5f
  415dbc:	test   al,0xff
  415dbe:	je     0x415dcc
  415dc0:	add    DWORD PTR [ebx-0x74e4f821],ecx
  415dc6:	add    edi,eax
  415dc8:	or     bh,bh
  415dca:	add    bh,bh
  415dcc:	add    BYTE PTR [edi-0xd86892],dh
  415dd2:	add    BYTE PTR [ebx+0xd83a00],cl
  415dd8:	jne    0x415dea
  415dda:	adc    eax,0xff000000
  415ddf:	adc    BYTE PTR [ebx+0x6197ca93],cl
  415de5:	rol    BYTE PTR [eax],0x0
  415de8:	jne    0x415e23
  415dea:	icebp  
  415deb:	repz push esp
  415ded:	push   esi
  415dee:	mov    DWORD PTR [ebx+0x8b8b15],ecx
  415df4:	inc    ebp
  415df5:	loope  0x415e5e
  415df7:	sub    BYTE PTR [esi-0x77],0x0
  415dfb:	mov    esi,DWORD PTR [eax+ecx*4+0x1b]
  415dff:	sbb    cl,cl
  415e01:	add    BYTE PTR [ebx-0x33ff0001],cl
  415e07:	movups xmm3,xmm6
  415e0a:	loopne 0x415d99
  415e0c:	adc    eax,DWORD PTR [ecx]
  415e0e:	je     0x415e0f
  415e10:	mov    esi,DWORD PTR ds:0xff743b26
  415e16:	test   DWORD PTR [ebx+0x458dff],ecx
  415e1c:	mov    edx,DWORD PTR [eax]
  415e1e:	mov    esp,0x8b744c0e
  415e23:	add    ah,ch
  415e25:	in     al,dx
  415e26:	push   0xcc00f6f8
  415e2b:	add    BYTE PTR [ebx],dh
  415e2d:	add    al,0xec
  415e2f:	add    ah,cl
  415e31:	pop    esi
  415e32:	sbb    eax,0x8b010755
  415e37:	inc    ebp
  415e38:	int3   
  415e39:	sbb    al,0xdc
  415e3b:	and    eax,0x8b757541
  415e40:	add    BYTE PTR [eax],dl
  415e42:	add    al,al
  415e44:	test   DWORD PTR ds:0x60c643,ebx
  415e4a:	add    ch,bl
  415e4c:	mov    esi,DWORD PTR ds:0xf7a59a
  415e52:	in     al,dx
  415e53:	add    bh,bh
  415e55:	mov    ecx,DWORD PTR [ebx-0x7c3c0034]
  415e5b:	in     al,dx
  415e5c:	xor    BYTE PTR [ebp+0x56],dl
  415e5f:	push   edi
  415e60:	lea    eax,[esp+0x14]
  415e64:	push   eax
  415e65:	push   0x1
  415e67:	call   DWORD PTR ds:0x4180c4
  415e6d:	mov    eax,DWORD PTR [esp+0x14]
  415e71:	mov    ecx,DWORD PTR [eax]
  415e73:	lea    edx,[esp+0x18]
  415e77:	push   edx
  415e78:	push   0x4181e0
  415e7d:	push   eax
  415e7e:	call   DWORD PTR [ecx]
  415e80:	push   0x3
  415e82:	pop    ebp
  415e83:	mov    ds:0x4194b8,eax
  415e88:	xor    edx,edx
  415e8a:	mov    ecx,ebp
  415e8c:	xor    eax,eax
  415e8e:	push   ebx
  415e8f:	mov    esi,DWORD PTR ds:0x419494
  415e95:	mov    esi,DWORD PTR [esi+eax*4]
  415e98:	mov    edi,DWORD PTR ds:0x4194b8
  415e9e:	lea    esi,[esi+edi*1-0x14e5119b]
  415ea5:	mov    edi,DWORD PTR ds:0x4193a0
  415eab:	xor    ebx,ebx
  415ead:	mov    DWORD PTR [edi],esi
  415eaf:	add    DWORD PTR ds:0x4193a0,0x4
  415eb6:	cmp    ecx,ebp
  415eb8:	setne  bl
  415ebb:	lea    ecx,[ebx+0x2]
  415ebe:	add    eax,ecx
  415ec0:	cmp    eax,0xaf
  415ec5:	jb     0x415e8f
  415ec7:	mov    esi,DWORD PTR ds:0x4193a0
  415ecd:	mov    DWORD PTR ds:0x4191bc,0x7
  415ed7:	mov    DWORD PTR [esp+0x10],ebp
  415edb:	mov    DWORD PTR [esp+0x14],edx
  415edf:	mov    edi,0x80000000
  415ee4:	jmp    0x415ee8
  415ee6:	xor    edx,edx
  415ee8:	push   edx
  415ee9:	push   edx
  415eea:	push   edx
  415eeb:	push   edx
  415eec:	push   edi
  415eed:	push   edi
  415eee:	push   edi
  415eef:	push   edi
  415ef0:	push   0xcf0000
  415ef5:	push   0x4180dc
  415efa:	push   0x4180d0
  415eff:	push   edx
  415f00:	call   DWORD PTR ds:0x418084
  415f06:	mov    ebx,eax
  415f08:	test   ebx,ebx
  415f0a:	je     0x415f4a
  415f0c:	push   0x1
  415f0e:	push   ebx
  415f0f:	call   DWORD PTR ds:0x418080
  415f15:	push   ebx
  415f16:	call   DWORD PTR ds:0x41807c
  415f1c:	mov    ebx,DWORD PTR ds:0x418078
  415f22:	jmp    0x415f3a
  415f24:	lea    eax,[esp+0x24]
  415f28:	push   eax
  415f29:	call   DWORD PTR ds:0x418074
  415f2f:	lea    eax,[esp+0x24]
  415f33:	push   eax
  415f34:	call   DWORD PTR ds:0x41809c
  415f3a:	xor    eax,eax
  415f3c:	push   eax
  415f3d:	push   eax
  415f3e:	push   eax
  415f3f:	lea    eax,[esp+0x30]
  415f43:	push   eax
  415f44:	call   ebx
  415f46:	test   eax,eax
  415f48:	jne    0x415f24
  415f4a:	mov    eax,DWORD PTR [esp+0x14]
  415f4e:	mov    ecx,DWORD PTR ds:0x4194a8
  415f54:	mov    ecx,DWORD PTR [ecx+eax*4]
  415f57:	sub    ecx,DWORD PTR ds:0x4194b8
  415f5d:	add    ecx,0x358ae1af
  415f63:	mov    DWORD PTR [esi],ecx
  415f65:	xor    ecx,ecx
  415f67:	add    esi,0x4
  415f6a:	cmp    DWORD PTR [esp+0x10],ebp
  415f6e:	setne  cl
  415f71:	add    ecx,0x2
  415f74:	add    eax,ecx
  415f76:	mov    DWORD PTR [esp+0x10],ecx
  415f7a:	mov    DWORD PTR [esp+0x14],eax
  415f7e:	cmp    eax,0xa5
  415f83:	jb     0x415ee6
  415f89:	mov    eax,0x2b1554c9
  415f8e:	sub    eax,DWORD PTR ds:0x4194b8
  415f94:	mov    DWORD PTR [esi],eax
  415f96:	mov    eax,ds:0x4194b8
  415f9b:	add    eax,0x26f000cd
  415fa0:	mov    DWORD PTR [esi+0x4],eax
  415fa3:	mov    eax,ds:0x4190f8
  415fa8:	mov    ds:0x4191f4,eax
  415fad:	lea    eax,[esi+0x8]
  415fb0:	mov    esi,ebp
  415fb2:	xor    ecx,ecx
  415fb4:	mov    edx,DWORD PTR ds:0x4193f8
  415fba:	mov    edx,DWORD PTR [edx+ecx*4]
  415fbd:	mov    edi,DWORD PTR ds:0x4194b8
  415fc3:	lea    edx,[edx+edi*1+0x52c6ac45]
  415fca:	mov    DWORD PTR [eax],edx
  415fcc:	xor    edx,edx
  415fce:	add    eax,0x4
  415fd1:	cmp    esi,ebp
  415fd3:	setne  dl
  415fd6:	lea    esi,[edx+0x2]
  415fd9:	add    ecx,esi
  415fdb:	cmp    ecx,0xc8
  415fe1:	jb     0x415fb4
  415fe3:	mov    edi,eax
  415fe5:	mov    ebx,ebp
  415fe7:	xor    esi,esi
  415fe9:	mov    eax,ds:0x4194cc
  415fee:	mov    eax,DWORD PTR [eax+esi*4]
  415ff1:	sub    eax,DWORD PTR ds:0x4194b8
  415ff7:	add    eax,0x711c9da8
  415ffc:	mov    DWORD PTR [edi],eax
  415ffe:	lea    eax,[esp+0x20]
  416002:	push   eax
  416003:	push   0x0
  416005:	call   DWORD PTR ds:0x4180c8
  41600b:	xor    eax,eax
  41600d:	add    edi,0x4
  416010:	cmp    ebx,ebp
  416012:	setne  al
  416015:	lea    ebx,[eax+0x2]
  416018:	add    esi,ebx
  41601a:	cmp    esi,0xb1
  416020:	jb     0x415fe9
  416022:	mov    ecx,ebp
  416024:	xor    eax,eax
  416026:	pop    ebx
  416027:	mov    edx,DWORD PTR ds:0x419418
  41602d:	mov    edx,DWORD PTR [edx+eax*4]
  416030:	mov    esi,DWORD PTR ds:0x4194b8
  416036:	lea    edx,[edx+esi*1+0x106e7a5]
  41603d:	mov    DWORD PTR [edi],edx
  41603f:	xor    edx,edx
  416041:	add    edi,0x4
  416044:	cmp    ecx,ebp
  416046:	setne  dl
  416049:	lea    ecx,[edx+0x2]
  41604c:	add    eax,ecx
  41604e:	cmp    eax,0xe3
  416053:	jb     0x416027
  416055:	pop    edi
  416056:	pop    esi
  416057:	pop    ebp
  416058:	add    esp,0x30
  41605b:	ret    
  41605c:	jecxz  0x416087
  41605e:	push   cs
  41605f:	push   cs
  416060:	add    BYTE PTR [ebx-0x2d5633ff],cl
  416066:	shl    dl,1
  416068:	add    BYTE PTR [ecx+0x10000],cl
  41606e:	or     BYTE PTR [eax],cl
  416070:	(bad)  
  416071:	fsubr  DWORD PTR [ebx-0x1733f358]
  416077:	push   esi
  416078:	(bad)
  41607b:	test   DWORD PTR [esi+0x46],edx
  41607e:	mov    ecx,esp
  416080:	inc    DWORD PTR [eax]
  416082:	mov    ecx,DWORD PTR [ecx-0x5c8a4dd3]
  416088:	int3   
  416089:	int3   
  41608a:	mov    DWORD PTR [edi+ebp*1-0x66],esi
  41608e:	in     al,dx
  41608f:	add    DWORD PTR [eax],ecx
  416091:	or     BYTE PTR [eax],al
  416093:	push   eax
  416094:	int3   
  416095:	add    BYTE PTR [ebp-0x5a111e40],al
  41609b:	cld    
  41609c:	int3   
  41609d:	add    DWORD PTR [ebx+0x6b656850],eax
  4160a3:	clc    
  4160a4:	add    BYTE PTR [ebp-0x74ffba75],cl
  4160aa:	add    DWORD PTR [ebx+0x3538454f],ecx
  4160b0:	adc    BYTE PTR [eax],al
  4160b2:	jmp    0x416129
  4160b4:	gs or  edi,0x8b0c018c
  4160bb:	add    BYTE PTR [eax],al
  4160bd:	test   DWORD PTR [ebp-0x75],edx
  4160c0:	mov    al,ds:0xffba8dff
  4160c5:	push   0x0
  4160c7:	fnsave [ecx-0x7af40445]
  4160cd:	add    BYTE PTR [eax],al
  4160cf:	adc    eax,0x10858b
  4160d4:	xchg   edx,eax
  4160d5:	inc    ebp
  4160d6:	mov    WORD PTR [edi+eax*8],fs
  4160d9:	add    DWORD PTR [esp+ebp*8],ecx
  4160dc:	in     eax,dx
  4160dd:	jecxz  0x4160b5
  4160df:	push   cs
  4160e0:	xor    eax,DWORD PTR [eax]
  4160e2:	je     0x4160ec
  4160e4:	add    al,0x8d
  4160e6:	inc    ebp
  4160e7:	cmove  eax,DWORD PTR [ebx+0x24]
  4160eb:	jo     0x4160ed
  4160ed:	jne    0x4160ef
  4160ef:	add    BYTE PTR [ecx-0x7a8d7e67],ah
  4160f5:	pop    ebp
  4160f6:	mov    eax,DWORD PTR [ecx]
  4160f8:	mov    ebp,esp
  4160fa:	dec    esp
  4160fc:	sbb    bl,bl
  4160fe:	add    edx,DWORD PTR [esi]
  416100:	int3   
  416101:	int3   
  416102:	add    DWORD PTR [ebx+0xe469da2],ecx
  416108:	add    BYTE PTR [ebx+0x331001],cl
  41610e:	add    BYTE PTR [ebx+0x7e674e90],cl
  416114:	add    BYTE PTR [ecx],al
  416116:	inc    DWORD PTR [ebx+esi*8]
  416119:	inc    ecx
  41611a:	(bad)  
  41611b:	(bad)  
  41611c:	dec    DWORD PTR [ecx+0x450000]
  416122:	add    BYTE PTR [ebx+0x3d6faf5a],cl
  416128:	add    al,al
  41612a:	add    BYTE PTR [ebx+0x10ad26d3],cl
  416130:	add    al,al
  416132:	add    BYTE PTR [esp+esi*2+0x0],dh
  416136:	add    BYTE PTR [ecx-0x7e1df81f],cl
  41613c:	add    BYTE PTR [eax],cl
  41613e:	add    BYTE PTR [ecx],al
  416140:	in     eax,0x77
  416142:	neg    BYTE PTR [edx]
  416144:	dec    DWORD PTR [edi]
  416146:	push   0xffffffcc
  416148:	add    al,0x85
  41614a:	rol    BYTE PTR [eax],0x57
  41614d:	(bad)  
  41614e:	std    
  41614f:	arpl   WORD PTR [ebp-0x70b2fd00],cx
  416155:	sbb    DWORD PTR [ebp-0x14],esi
  416158:	int3   
  416159:	or     bh,bh
  41615b:	inc    ebp
  41615c:	adc    BYTE PTR [ecx+0x3282005d],cl
  416162:	jo     0x41611e
  416164:	add    BYTE PTR [eax],al
  416166:	mov    DWORD PTR [ebx+eax*4+0xb],esi
  41616a:	ficom  WORD PTR [eax+0x55]
  41616d:	lea    ecx,[ebp+0x100cc89]
  416173:	add    BYTE PTR [ebp+0x10ccc95b],cl
  416179:	add    BYTE PTR [eax],al
  41617b:	je     0x4160fe
  41617d:	cwde   
  41617e:	jb     0x4161e4
  416180:	add    BYTE PTR [ebp-0x40],al
  416183:	add    BYTE PTR [eax],al
  416185:	rcl    BYTE PTR [esi+0x6a],0xd3
  416189:	adc    cl,ah
  41618b:	ror    esp,cl
  41618d:	int3   
  41618e:	add    BYTE PTR [edi*1-0x76ad4f1c],cl
  416195:	jne    0x416174
  416197:	push   esi
  416198:	dec    DWORD PTR [ebx-0x18cf0000]
  41619e:	adc    dl,bl
  4161a0:	push   esi
  4161a1:	call   0x71e2d6a5
  4161a6:	add    al,0x92
  4161a8:	mov    DWORD PTR [eax],0x750045e8
  4161ae:	jne    0x41613b
  4161b0:	xor    eax,0xc8638c1
  4161b5:	add    BYTE PTR [edi],cl
  4161b7:	add    al,0x71
  4161b9:	call   0x1:0x8bc70037
  4161c0:	add    BYTE PTR [edi],cl
  4161c2:	add    BYTE PTR [ebx+0x6013894],al
  4161c8:	test   esp,ecx
  4161ca:	(bad)  
  4161cb:	jmp    0x4161dd
  4161cd:	inc    ecx
  4161ce:	pop    eax
  4161cf:	inc    eax
  4161d0:	add    ah,cl
  4161d2:	add    BYTE PTR [eax],al
  4161d4:	add    eax,DWORD PTR [ecx]
  4161d6:	adc    eax,0xa23b2e50
  4161db:	cmp    al,BYTE PTR [eax]
  4161dd:	int3   
  4161de:	jne    0x4161e0
  4161e0:	scas   eax,DWORD PTR es:[edi]
  4161e1:	jle    0x4161d3
  4161e3:	aas    
  4161e4:	add    BYTE PTR [eax],al
  4161e6:	mov    eax,DWORD PTR [eax]
  4161e8:	inc    ebp
  4161e9:	or     al,0x10
  4161eb:	or     BYTE PTR [ecx-0x7c],cl
  4161ee:	outs   dx,DWORD PTR ds:[esi]
  4161ef:	or     edi,edi
  4161f1:	add    ch,bl
  4161f3:	add    BYTE PTR ds:0xc0245843,dh
  4161f9:	int3   
  4161fa:	fisttp QWORD PTR [ebx-0x3300fef0]
  416200:	arpl   WORD PTR [ebp+0x458b3be4],ax
  416206:	mov    edi,edi
  416208:	inc    ecx
  416209:	sub    ecx,DWORD PTR ss:[edi]
  41620c:	push   eax
  41620d:	je     0x416210
  41620f:	(bad)  
  416210:	dec    DWORD PTR [ecx+0x54e10008]
  416216:	loope  0x4161f0
  416218:	int3   
  416219:	(bad)  
  41621a:	mov    DWORD PTR [ebx-0x2c7f32d3],ecx
  416220:	dec    ebp
  416221:	add    DWORD PTR [eax],eax
  416223:	add    BYTE PTR [ecx+0x188b0001],cl
  416229:	and    eax,0x1c01911
  41622e:	add    DWORD PTR [eax],eax
  416230:	xchg   ebx,eax
  416231:	shl    DWORD PTR [ecx-0x2b],0x75
  416235:	add    BYTE PTR [ebp+0x0],bl
  416238:	or     esp,0x0
  41623b:	prefetch BYTE PTR [esp+ebp*2-0x3c]
  416240:	test   DWORD PTR [eax],eax
  416242:	mov    eax,DWORD PTR [eax]
  416244:	stos   DWORD PTR es:[edi],eax
  416245:	sub    eax,0xcc895ebe
  41624a:	mov    eax,DWORD PTR [eax]
  41624c:	rol    BYTE PTR [eax],0x5d
  41624f:	int3   
  416250:	arpl   WORD PTR [eax-0x61],ax
  416253:	sahf   
  416254:	add    esp,ecx
  416256:	mov    DWORD PTR [eax],eax
  416258:	(bad)  
  416259:	mov    edx,0x155910
  41625e:	add    DWORD PTR [eax],0xffffffff
  416261:	push   eax
  416262:	je     0x416264
  416264:	mov    dl,0x5e
  416266:	loopne 0x4161f1
  416268:	push   esi
  416269:	push   0x0
  41626b:	add    DWORD PTR [ebp+0x7f],ebx
  41626e:	adc    dl,BYTE PTR [esi]
  416270:	mov    ecx,DWORD PTR [ebx+0x10cc00c0]
  416276:	cmp    edi,0x60
  416279:	div    ch
  41627b:	jmp    0xd155:0x8bcc4d74
  416282:	test   DWORD PTR [eax-0x34],ebp
  416285:	dec    esp
  416287:	add    BYTE PTR [ebp+0x55],al
  41628a:	add    DWORD PTR [ebp-0x80],eax
  41628d:	xor    DWORD PTR [edx],edx
  41628f:	mov    bh,bh
  416291:	add    ebp,ebx
  416293:	jmp    FWORD PTR ds:0x73dc36
  416299:	mov    eax,DWORD PTR [eax]
  41629b:	mov    ebp,ebx
  41629d:	fld    QWORD PTR [eax]
  41629f:	add    BYTE PTR [edx+0x21],cl
  4162a2:	jo     0x41629a
  4162a4:	add    BYTE PTR [ecx],al
  4162a6:	inc    ebp
  4162a7:	or     BYTE PTR [esi-0x5c],dl
  4162aa:	dec    edi
  4162ab:	or     DWORD PTR [eax],eax
  4162ad:	add    BYTE PTR [eax],al
  4162af:	rol    BYTE PTR [ebx+ebp*8],0x0
  4162b3:	dec    DWORD PTR [edi]
  4162b5:	sub    al,0x3f
  4162b7:	les    eax,FWORD PTR [eax]
  4162b9:	xor    ebp,esp
  4162bb:	movlps xmm2,QWORD PTR [eax-0x33143c92]
  4162c2:	add    BYTE PTR [eax],cl
  4162c4:	add    BYTE PTR [eax],dl
  4162c6:	dec    DWORD PTR [ebx-0x2a585bf0]
  4162cc:	add    ch,bl
  4162ce:	rol    BYTE PTR [eax],0x30
  4162d1:	and    BYTE PTR [ebx-0x33f7fc41],bh
  4162d7:	push   ebp
  4162d8:	add    bh,bh
  4162da:	fisttp QWORD PTR [ebx-0x54670249]
  4162e0:	int3   
  4162e1:	dec    DWORD PTR [ebp+0x7001308b]
  4162e7:	mov    ds:0xcccff,al
  4162ec:	int3   
  4162ed:	int3   
  4162ee:	inc    ebp
  4162ef:	add    BYTE PTR [ecx+ebx*8],dl
  4162f2:	add    DWORD PTR [ebp-0x740000b0],edx
  4162f8:	cmp    DWORD PTR [eax+0x503daf],eax
  4162fe:	add    BYTE PTR [ecx+0x8108d45],cl
  416304:	lods   eax,DWORD PTR ds:[esi]
  416305:	and    eax,0xebc04ba1
  41630a:	lea    ebx,[ebp-0x54]
  41630d:	sub    eax,ebp
  41630f:	sub    eax,0x8b040f01
  416314:	dec    DWORD PTR [eax]
  416316:	add    BYTE PTR [eax],al
  416318:	mov    ebx,0x4551525b
  41631d:	push   ebp
  41631e:	add    BYTE PTR [ebx+0x17824a43],cl
  416324:	add    BYTE PTR [ecx],al
  416326:	add    BYTE PTR [eax],al
  416328:	push   esi
  416329:	adc    BYTE PTR [ebp+0x7db3aa55],al
  41632f:	sldt   WORD PTR [eax]
  416332:	in     al,dx
  416333:	add    DWORD PTR [edx],esi
  416335:	inc    ebx
  416336:	maskmovq mm0,(bad)
  416337:	test   DWORD PTR [eax],0x8b0100ff
  41633d:	inc    esi
  41633e:	add    DWORD PTR [ecx],eax
  416340:	arpl   WORD PTR [edx-0x74fe81f6],si
  416346:	mov    eax,DWORD PTR [ebp-0x37]
  416349:	call   0xc0ff:0xff009138
  416350:	add    DWORD PTR [ebx+0x2c3c08b],ecx
  416356:	shl    DWORD PTR [esi+eax*8-0x7d],0x8b
  41635b:	mov    eax,DWORD PTR [ebx-0x378db51d]
  416361:	ffree  st(0)
  416363:	int3   
  416364:	add    BYTE PTR [edx-0x7b],ch
  416367:	add    BYTE PTR [eax],cl
  416369:	pop    ds
  41636a:	cdq    
  41636b:	mov    ebx,0x898b859c
  416370:	(bad)  
  416371:	out    dx,al
  416372:	leave  
  416373:	pop    ecx
  416374:	mov    WORD PTR [ebx-0xff74ff],cs
  41637a:	str    esp
  41637d:	sub    DWORD PTR [edi+0x76],0xffffffc3
  416381:	add    DWORD PTR [eax],eax
  416383:	add    BYTE PTR [esi+ebx*1],al
  416386:	mov    cl,0x2e
  416388:	mov    ebp,0x8b89cc01
  41638d:	add    BYTE PTR [ecx],al
  41638f:	in     al,dx
  416390:	inc    ebp
  416391:	cmp    al,0xf
  416393:	and    eax,DWORD PTR [esi]
  416395:	add    esp,ecx
  416397:	add    bl,ch
  416399:	cmp    BYTE PTR [edi+eiz*2],0x3d
  41639d:	mov    edx,DWORD PTR [ebp+0x0]
  4163a0:	add    BYTE PTR [esi+0x15],al
  4163a3:	inc    esi
  4163a4:	test   edx,ecx
  4163a6:	pop    ebp
  4163a7:	repnz retf 
  4163a9:	xor    DWORD PTR [ebp+eax*2+0x0],0x9
  4163ae:	adc    dh,BYTE PTR [edx]
  4163b0:	cmp    eax,0xc00fcc00
  4163b5:	mov    DWORD PTR [ecx],eax
  4163b7:	int3   
  4163b8:	int3   
  4163b9:	or     eax,0x74fa1b94
  4163be:	int3   
  4163bf:	mov    ecx,esp
  4163c1:	push   es
  4163c2:	xchg   esi,eax
  4163c3:	jb     0x416413
  4163c5:	jge    0xc741b428
  4163cb:	add    ebp,ebx
  4163cd:	jns    0x4163ee
  4163cf:	xor    eax,DWORD PTR [esi-0x34]
  4163d2:	add    BYTE PTR [eax],al
  4163d4:	lea    ecx,[edx]
  4163d6:	data16 data16 sbb BYTE PTR [eax+eax*1+0x4],dh
  4163dc:	inc    ebp
  4163dd:	add    BYTE PTR [ebx+0x60a64550],al
  4163e3:	enter  0x87c,0x45
  4163e7:	add    BYTE PTR [ebx-0xe2fa03b],cl
  4163ed:	int3   
  4163ee:	or     BYTE PTR [eax],al
  4163f0:	or     BYTE PTR [ecx*4+0x2ce88b45],al
  4163f7:	or     al,0xb6
  4163f9:	test   esp,ecx
  4163fb:	mov    esi,DWORD PTR [ebx]
  4163fd:	mov    al,ds:0x8257546
  416402:	in     al,dx
  416403:	add    DWORD PTR [ecx],0x0
  416406:	minps  xmm1,XMMWORD PTR [ebx-0x4af44e55]
  41640d:	int3   
  41640e:	add    DWORD PTR [eax],0xffffff8b
  416411:	jno    0x416469
  416413:	dec    ebp
  416414:	adc    cl,BYTE PTR [ecx+0x4105d00]
  41641a:	xor    esp,eax
  41641c:	call   DWORD PTR ds:0x89756a03
  416422:	dec    ebp
  416423:	inc    DWORD PTR [eax]
  416425:	cli    
  416426:	sub    BYTE PTR [ecx-0x74f7ff5f],ch
  41642c:	call   DWORD PTR [esi-0x40]
  41642f:	add    BYTE PTR [eax],al
  416431:	sti    
  416432:	bound  ebp,QWORD PTR [edi]
  416434:	xchg   esi,eax
  416435:	or     al,0x55
  416437:	or     esp,0xffffffc1
  41643a:	scas   al,BYTE PTR es:[edi]
  41643b:	stc    
  41643c:	mov    es,WORD PTR [eax]
  41643e:	inc    ebp
  41643f:	(bad)  
  416440:	mov    DWORD PTR [eax],eax
  416442:	test   ebp,ebx
  416444:	add    BYTE PTR [eax-0x74173c03],bh
  41644a:	int3   
  41644b:	add    DWORD PTR [edx+eiz*2],ecx
  41644e:	push   edx
  41644f:	(bad)  
  416450:	jmp    0x456455
  416455:	or     al,0x0
  416457:	mov    ecx,DWORD PTR [ecx-0x85a307d]
  41645d:	int3   
  41645e:	add    BYTE PTR [ebp+0x0],al
  416461:	sbb    dl,BYTE PTR [edi-0x33ff998a]
  416467:	mov    eax,edi
  416469:	add    ah,cl
  41646b:	sub    ebx,0xffffffd7
  41646e:	jmp    0xcc75:0x468bbf9f
  416475:	dec    ebp
  416476:	sub    DWORD PTR [ecx+0xcc96],0xffffffe8
  41647d:	add    DWORD PTR [ebx-0x21adfef0],ecx
  416483:	lahf   
  416484:	outs   dx,DWORD PTR ds:[esi]
  416485:	add    bh,bh
  416487:	add    eax,DWORD PTR [eax]
  416489:	test   eax,0xb6d453
  41648e:	add    ah,cl
  416490:	add    BYTE PTR [eax],al
  416492:	mov    ecx,DWORD PTR [eax]
  416494:	add    ch,dh
  416496:	dec    esi
  416497:	pop    ebx
  416498:	xlat   BYTE PTR ds:[ebx]
  416499:	dec    ebp
  41649a:	add    BYTE PTR [ecx+0x4aeb3256],cl
  4164a0:	lahf   
  4164a1:	add    DWORD PTR [ebp+0x101cc0c],eax
  4164a7:	int3   
  4164a8:	loopne 0x4164b4
  4164aa:	mov    dl,0xed
  4164ac:	mov    dl,0x1
  4164ae:	add    BYTE PTR [eax],al
  4164b0:	inc    esi
  4164b1:	push   ecx
  4164b2:	dec    edx
  4164b3:	cmp    DWORD PTR [edx+0x3c00410],0x1
  4164ba:	inc    esi
  4164bb:	mov    ecx,DWORD PTR [ebx+0x179d9c1c]
  4164c1:	(bad)  
  4164c3:	mov    eax,DWORD PTR [ebx+0x5fe8dd3]
  4164c9:	call   0xd0864da
  4164ce:	push   ebp
  4164cf:	mov    eax,DWORD PTR [eax]
  4164d1:	push   esi
  4164d2:	dec    ebx
  4164d3:	jle    0x416498
  4164d5:	add    BYTE PTR [ebx-0x6216f334],cl
  4164db:	(bad)  
  4164dc:	fadd   DWORD PTR [eax]
  4164de:	in     al,dx
  4164df:	in     al,dx
  4164e0:	push   ebp
  4164e1:	mov    eax,DWORD PTR [ebp-0x3edcb975]
  4164e7:	cmp    ebx,ebx
  4164e9:	lea    ecx,[ebx-0x427c33ab]
  4164ef:	ja     0x4164a7
  4164f1:	invd   
  4164f3:	call   0xddab7400
  4164f8:	add    BYTE PTR [ebx+0x84c21b],bl
  4164fe:	dec    DWORD PTR [ecx+0x6a69408b]
  416504:	mov    esi,0x89ff0889
  416509:	jne    0x4164d7
  41650b:	adc    BYTE PTR [eax],al
  41650d:	push   ebx
  41650e:	lods   al,BYTE PTR ds:[esi]
  41650f:	xor    esp,edi
  416511:	mov    ecx,esp
  416513:	add    DWORD PTR [eax],eax
  416515:	sbb    al,0x78
  416517:	outs   dx,DWORD PTR ds:[esi]
  416518:	fisttp DWORD PTR [eax+eax*1]
  41651b:	dec    DWORD PTR [ebx-0x74ff2300]
  416521:	out    0xde,eax
  416523:	fistp  DWORD PTR [esi]
  416525:	int3   
  416526:	add    BYTE PTR [eax],al
  416528:	call   0x84de1869
  41652d:	int3   
  41652e:	or     al,0xcc
  416530:	push   esi
  416531:	add    BYTE PTR [eax],al
  416533:	add    BYTE PTR [eax],dl
  416535:	std    
  416536:	lea    ecx,[edi+edi*8-0x75]
  41653a:	add    al,al
  41653c:	dec    DWORD PTR [ebx-0x28]
  41653f:	shl    DWORD PTR [esi+0x18b0015],0x45
  416546:	push   ebp
  416547:	or     al,0xcc
  416549:	stc    
  41654a:	test   eax,0xecccba50
  41654f:	je     0x416551
  416551:	leave  
  416552:	fwait
  416553:	sar    BYTE PTR [eax+0x158b00],cl
  416559:	dec    DWORD PTR [ebx+0x551e55cc]
  41655f:	sbb    BYTE PTR [esi],cl
  416561:	inc    ebp
  416562:	mov    DWORD PTR [ebx-0x42f53800],ecx
  416568:	rol    BYTE PTR [ecx],cl
  41656a:	call   0x9edac5
  41656f:	push   ebp
  416570:	sbb    DWORD PTR [edx+0xd5049a],0x0
  416577:	add    bl,ch
  416579:	push   ebp
  41657a:	dec    ecx
  41657b:	imul   edi,DWORD PTR [ebx-0x7d],0x8515
  416582:	jne    0x4165e1
  416584:	add    BYTE PTR [esi-0x4],ah
  416587:	jmp    0xcccd64f1
  41658c:	add    al,al
  41658e:	clc    
  41658f:	add    BYTE PTR [ebx-0x7afe0034],bh
  416595:	int3   
  416596:	add    BYTE PTR [ecx+0x44123e00],cl
  41659c:	fwait
  41659d:	jne    0x41657c
  41659f:	jmp    0x416524
  4165a1:	cs call 0xcc00:0x46841d
  4165a9:	rol    BYTE PTR [ebp+0x0],0x89
  4165ad:	or     DWORD PTR [ecx],edi
  4165af:	jo     0x416581
  4165b1:	(bad)  
  4165b2:	inc    DWORD PTR [eax]
  4165b4:	mov    edi,ebx
  4165b6:	mov    ch,0x2a
  4165b8:	retf   
  4165b9:	push   0xffffff8b
  4165bb:	jne    0x4165c1
  4165bd:	inc    DWORD PTR [esi+0x0]
  4165c0:	xor    ebx,DWORD PTR [esi-0x52]
  4165c3:	push   eax
  4165c4:	add    BYTE PTR [esi-0x34],0xcc
  4165c8:	inc    esi
  4165c9:	icebp  
  4165ca:	jmp    0x4165b1
  4165cc:	push   ds
  4165cd:	int3   
  4165ce:	add    BYTE PTR [ebp-0x7413ff75],cl
  4165d4:	inc    esi
  4165d5:	lahf   
  4165d6:	mov    esi,DWORD PTR [ebx+0x8b0136]
  4165dc:	int3   
  4165dd:	or     ebx,DWORD PTR [ecx+0x4a]
  4165e0:	pop    ecx
  4165e1:	pop    ebp
  4165e2:	add    BYTE PTR [ebp+0xff10cc],cl
  4165e8:	mov    DWORD PTR [esi],edi
  4165ea:	imul   esi,DWORD PTR [edx],0x6e
  4165ed:	mov    ecx,DWORD PTR [edi]
  4165ef:	mov    ecx,DWORD PTR [ebx-0x46aa6efa]
  4165f5:	mov    ecx,DWORD PTR [ebx-0x33fe13fc]
  4165fb:	add    eax,DWORD PTR [esp]
  4165fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165ff:	jne    0x41660e
  416601:	add    ah,cl
  416603:	push   eax
  416604:	frstor [esi]
  416606:	and    bh,BYTE PTR [ecx-0x74337426]
  41660c:	or     al,0x1
  41660e:	add    BYTE PTR [ebp+0x56],dl
  416611:	lds    ebp,FWORD PTR [ecx+edi*1+0x88b0048]
  416618:	add    eax,ebx
  41661a:	js     0x416645
  41661c:	jmp    0x9fe8:0xcc081a
  416623:	ret    
  416624:	in     eax,0x58
  416626:	add    DWORD PTR [ebp+0xc],edx
  416629:	int3   
  41662a:	add    BYTE PTR ds:0x59fd8975,dl
  416630:	es inc ecx
  416632:	add    BYTE PTR [ecx],al
  416634:	add    DWORD PTR [eax],eax
  416636:	mov    BYTE PTR [ecx],ah
  416638:	outs   dx,DWORD PTR ds:[esi]
  416639:	or     esp,0xffffffcc
  41663c:	rcl    BYTE PTR [ebp+0xf],0x83
  416640:	or     al,0x8d
  416642:	jne    0x41666d
  416644:	hlt    
  416645:	cmp    BYTE PTR [eax],al
  416647:	add    DWORD PTR [ebx-0x7fafd901],ecx
  41664d:	loope  0x416650
  41664f:	add    ah,cl
  416651:	call   0x8a0d7256
  416656:	test   eax,0x85ab24
  41665b:	push   ebp
  41665c:	adc    eax,0x875d9f00
  416661:	cld    
  416662:	mov    ebx,ebp
  416664:	add    bl,ch
  416666:	push   eax
  416667:	adc    eax,0x8c230000
  41666c:	mov    edi,0x10075fa
  416671:	add    BYTE PTR [edi-0x4f],cl
  416674:	ret    0x182
  416677:	add    BYTE PTR [eax],al
  416679:	mov    eax,DWORD PTR [ecx]
  41667b:	mov    ecx,DWORD PTR [ebx-0x3c3c1e77]
  416681:	jns    0x416682
  416683:	int3   
  416684:	mov    eax,DWORD PTR [eax]
  416686:	mov    BYTE PTR [edi],cl
  416688:	add    edi,DWORD PTR [esp+ecx*8-0x18]
  41668c:	push   ebp
  41668d:	jne    0x41667a
  41668f:	mov    DWORD PTR [ebx-0x11f2ee00],ecx
  416695:	clc    
  416696:	mov    esp,ecx
  416698:	or     BYTE PTR [eax],al
  41669a:	jne    0x41665f
  41669c:	fist   WORD PTR [esi+0x84d46ff]
  4166a2:	add    BYTE PTR [ebp+0x56],dh
  4166a5:	add    BYTE PTR [ebx],bh
  4166a7:	(bad)  
  4166a8:	es pop ecx
  4166aa:	inc    DWORD PTR [eax]
  4166ac:	push   ebp
  4166ad:	int3   
  4166ae:	or     al,BYTE PTR [ecx]
  4166b0:	lods   eax,DWORD PTR ds:[esi]
  4166b1:	mov    bh,0x0
  4166b3:	int3   
  4166b4:	jnp    0x10dabba
  4166ba:	test   DWORD PTR [eax+0x1a],0x8b000865
  4166c1:	mov    DWORD PTR ds:0x8b593706,ebp
  4166c7:	add    BYTE PTR [eax],dl
  4166c9:	push   ebp
  4166ca:	or     al,0x8
  4166cc:	add    ah,ch
  4166ce:	lock enter 0xbc3f,0x89
  4166d3:	add    BYTE PTR [eax],al
  4166d5:	or     al,0x60
  4166d7:	mov    ch,cl
  4166d9:	fld    DWORD PTR [eax]
  4166db:	int3   
  4166dc:	mov    esp,ecx
  4166de:	add    DWORD PTR [ebx-0x594b338b],ecx
  4166e4:	test   eax,0xff74eb3d
  4166e9:	add    BYTE PTR [eax],ch
  4166eb:	adc    bh,BYTE PTR [ebx]
  4166ed:	push   0xffffff8b
  4166ef:	add    DWORD PTR [ebx+0xffc0],ecx
  4166f5:	dec    ebp
  4166f6:	aam    0xce
  4166f8:	out    dx,al
  4166f9:	inc    ebx
  4166fa:	int3   
  4166fb:	add    BYTE PTR [ebx+eax*1],cl
  4166fe:	push   0xffffffbb
  416700:	push   ds
  416701:	jl     0x416702
  416703:	add    ah,cl
  416705:	inc    DWORD PTR [esi-0x77]
  416708:	mov    edi,edi
  41670a:	dec    eax
  41670b:	jp     0x4166e4
  41670d:	mov    al,0x0
  41670f:	inc    esi
  416710:	add    BYTE PTR [esp+esi*1-0x31],dh
  416714:	imul   eax,DWORD PTR [ebx],0xffffff8b
  416717:	int3   
  416718:	xor    ebx,ebp
  41671a:	add    ah,cl
  41671c:	adc    BYTE PTR [eax],al
  41671e:	jae    0x41671f
  416720:	xor    esi,0xffffff89
  416723:	add    bh,bh
  416725:	add    bl,cl
  416727:	jle    0x41678b
  416729:	jb     0x41672b
  41672b:	jne    0x4166f9
  41672d:	add    BYTE PTR [ebx-0x4bffffbb],cl
  416733:	mov    dh,0x95
  416735:	jnp    0x41673f
  416737:	add    BYTE PTR [eax],al
  416739:	test   DWORD PTR [esi-0x76d41512],ebp
  41673f:	add    BYTE PTR [eax],al
  416741:	je     0x41672e
  416743:	or     al,0x0
  416745:	jmp    DWORD PTR [esi-0x74597816]
  41674b:	add    BYTE PTR [ebx-0x78aa8900],cl
  416751:	mov    ds:0x874cc89,eax
  416756:	mov    ebp,ebx
  416758:	or     ah,cl
  41675a:	and    eax,0xccda93b3
  41675f:	push   ebp
  416760:	mov    DWORD PTR [esi+0x20],eax
  416763:	inc    esp
  416764:	sub    BYTE PTR [edx+0x50],bh
  416767:	adc    eax,0xdd000f8b
  41676c:	or     BYTE PTR [ebp+0x49],cl
  41676f:	dec    ebp
  416770:	arpl   WORD PTR [eax],cx
  416772:	adc    BYTE PTR [ebx+0x56d60174],cl
  416778:	loopne 0x41678b
  41677a:	loopne 0x416707
  41677c:	inc    DWORD PTR [ebp-0x7a337439]
  416782:	mov    dl,0xf0
  416784:	pop    ebp
  416785:	inc    BYTE PTR [ebx+0x7e8b01cc]
  41678b:	jb     0x4167b6
  41678d:	sbb    cl,ah
  41678f:	int3   
  416790:	add    ecx,DWORD PTR [ebp-0x7a8b75]
  416796:	sub    al,0x3
  416798:	cli    
  416799:	xchg   ebp,eax
  41679a:	cmp    edi,0x0
  41679d:	mov    ebp,ebp
  41679f:	push   ebp
  4167a0:	std    
  4167a1:	push   ss
  4167a2:	add    ebp,ebx
  4167a4:	xor    ecx,DWORD PTR [ebx+0x18bff00]
  4167aa:	cdq    
  4167ab:	pop    es
  4167ac:	out    dx,eax
  4167ad:	pop    eax
  4167ae:	add    BYTE PTR [ebp+0x30c400ff],al
  4167b4:	test   BYTE PTR [edi+0xc850100],dh
  4167ba:	or     BYTE PTR [ecx+eax*1+0xf],dh
  4167be:	add    cl,BYTE PTR [ecx]
  4167c0:	call   0x8b66fd9
  4167c5:	dec    ebp
  4167c6:	mov    esi,0x6a7c80f1
  4167cb:	inc    DWORD PTR [eax]
  4167cd:	add    ebp,ebx
  4167cf:	add    ah,cl
  4167d1:	push   ebp
  4167d2:	std    
  4167d3:	mov    ecx,0xcc003c27
  4167d8:	fld    QWORD PTR [eax]
  4167da:	outs   dx,DWORD PTR ds:[esi]
  4167db:	xor    DWORD PTR [esi],edi
  4167dd:	retf   
  4167de:	shl    al,0xec
  4167e1:	(bad)  
  4167e2:	inc    DWORD PTR [eax]
  4167e4:	add    BYTE PTR [esi+eiz*2],cl
  4167e7:	cwde   
  4167e8:	pop    esi
  4167e9:	mov    ds:0x7401ccff,eax
  4167ee:	mov    bh,0x12
  4167f0:	jne    0x416871
  4167f2:	add    BYTE PTR ds:0x45ff8501,dl
  4167f8:	or     al,0x0
  4167fa:	sbb    al,0xcc
  4167fc:	mul    BYTE PTR [esi-0x75]
  4167ff:	(bad)  
  416801:	(bad)  
  416802:	loope  0x416820
  416804:	cmp    BYTE PTR [eax+eax*1],0xcc
  416808:	shr    al,0xcc
  41680b:	add    BYTE PTR [eax],al
  41680d:	je     0x4167e7
  41680f:	jmp    0xcd2d9022
  416814:	add    BYTE PTR [ecx+0x74d3eeb0],cl
  41681a:	add    al,0x8b
  41681c:	add    al,ch
  41681e:	add    BYTE PTR [ebx-0x692acd00],cl
  416824:	or     ch,BYTE PTR [ebp-0x74aa7500]
  41682a:	push   eax
  41682b:	shl    BYTE PTR [eax-0x3fa2ffd5],0x8b
  416832:	int3   
  416833:	add    DWORD PTR [ebx+0x6d8b400],ecx
  416839:	rol    BYTE PTR gs:[ebp-0x34],0x8b
  41683e:	scas   eax,DWORD PTR es:[edi]
  41683f:	jmp    0x416845
  416841:	ja     0x416889
  416843:	add    al,0x0
  416845:	add    al,al
  416847:	add    DWORD PTR [eax],0xc
  41684a:	test   DWORD PTR [edi-0x33ffdf3b],eax
  416850:	mov    ecx,DWORD PTR [ebx-0x1cad5fe5]
  416856:	mov    DWORD PTR [eax],0x3dd6a8b
  41685c:	inc    DWORD PTR [eax]
  41685e:	push   ds
  41685f:	aas    
  416860:	call   0x8640f45a
  416865:	add    BYTE PTR [eax+0x33],bh
  416868:	nop
  416869:	xchg   esi,eax
  41686a:	(bad)  
  41686c:	int3   
  41686d:	in     al,dx
  41686e:	add    DWORD PTR [eax],eax
  416870:	lea    ecx,[ebx+0x7047f9bb]
  416876:	mov    DWORD PTR [ecx],eax
  416878:	dec    ebp
  416879:	add    BYTE PTR [ecx+0x330990],bh
  41687f:	add    BYTE PTR [ebp-0x75],dl
  416882:	or     al,0x0
  416884:	mov    eax,DWORD PTR [eax]
  416886:	shl    edi,0x58
  416889:	mov    esp,ecx
  41688b:	or     BYTE PTR [ebp+0x7025b500],cl
  416891:	mov    bl,0xcc
  416893:	mov    esi,DWORD PTR [ebp+0x10]
  416896:	inc    esi
  416897:	inc    DWORD PTR [ecx]
  416899:	je     0x416842
  41689b:	inc    edx
  41689c:	cmp    esi,edx
  41689e:	pcmpeqw mm1,QWORD PTR [ebx-0x2dcef4]
  4168a5:	adc    al,BYTE PTR [eax]
  4168a7:	add    bh,bh
  4168a9:	mov    ecx,DWORD PTR [ecx-0x5033ea73]
  4168af:	xor    al,0xf4
  4168b1:	push   esp
  4168b2:	or     al,0x0
  4168b4:	mov    eax,DWORD PTR [ecx]
  4168b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168b7:	or     DWORD PTR [edi-0x76fe13c0],esi
  4168bd:	(bad)  
  4168be:	jmp    0x416845
  4168c0:	mov    ecx,esp
  4168c2:	lods   eax,DWORD PTR ds:[esi]
  4168c3:	or     BYTE PTR [esi-0x72eaffc8],ch
  4168c9:	push   ebp
  4168ca:	(bad)  
  4168cc:	fist   DWORD PTR [edi-0x10000]
  4168d2:	(bad)  
  4168d3:	jmp    0x41694a
  4168d5:	je     0x4168cb
  4168d7:	out    0x84,eax
  4168d9:	adc    al,al
  4168db:	int3   
  4168dc:	add    BYTE PTR [ecx-0x38a327d9],cl
  4168e2:	jne    0x4168cc
  4168e4:	add    bl,ch
  4168e6:	add    BYTE PTR [eax],al
  4168e8:	add    BYTE PTR [eax],al
  4168ea:	leave  
  4168eb:	cmp    DWORD PTR [ecx],ebp
  4168ed:	push   esi
  4168ee:	add    BYTE PTR [ebp+0x74],al
  4168f1:	add    esp,eax
  4168f3:	push   cs
  4168f4:	pop    eax
  4168f5:	stc    
  4168f6:	mov    ebx,DWORD PTR [ebp+0x4]
  4168f9:	add    DWORD PTR [eax],eax
  4168fb:	pop    ebp
  4168fc:	je     0x4168fe
  4168fe:	(bad)  
  4168ff:	loope  0x4168ec
  416901:	cli    
  416902:	mov    ecx,DWORD PTR [ecx+0x4ff58b74]
  416908:	inc    ecx
  416909:	mov    esi,0x748b8b00
  41690e:	or     DWORD PTR [eax+eax*1],0xffffff89
  416912:	jecxz  0x4168de
  416914:	imul   ecx,DWORD PTR [edx],0x46
  416917:	or     BYTE PTR [edx+0x0],ch
  41691a:	cs lods eax,DWORD PTR gs:[esi]
  41691d:	ret    
  41691e:	int3   
  41691f:	rol    BYTE PTR [ecx],0xcc
  416922:	mov    DWORD PTR [ebx+0x1a0800cc],ecx
  416928:	pop    ss
  416929:	test   DWORD PTR [ebx+0x71ff8b8b],ecx
  41692f:	dec    ebp
  416930:	stos   BYTE PTR es:[edi],al
  416931:	pop    esi
  416932:	inc    ebp
  416933:	or     al,0x45
  416935:	jne    0x4168f7
  416937:	int3   
  416938:	push   eax
  416939:	(bad)  
  41693a:	jge    0x416961
  41693c:	mov    eax,ds:0x85000086
  416941:	mov    edx,DWORD PTR [esi+ebp*8-0x4f]
  416945:	cli    
  416946:	add    BYTE PTR ds:0x150083ff,dl
  41694c:	dec    DWORD PTR [eax]
  41694e:	bound  ecx,QWORD PTR [edi-0x10]
  416951:	mov    bh,0x0
  416953:	add    esp,ecx
  416955:	(bad)  
  416956:	mov    ebx,0x7eb04d
  41695b:	call   DWORD PTR [eax-0x73]
  41695e:	mov    eax,DWORD PTR [eax]
  416960:	or     al,0x74
  416962:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416963:	ret    0x5a57
  416966:	int3   
  416967:	or     BYTE PTR [ebx+0x3ce0c88b],cl
  41696d:	cmp    al,BYTE PTR [ecx]
  41696f:	add    bh,bh
  416971:	mov    DWORD PTR [ecx-0x1ef80000],ecx
  416977:	add    eax,0x75c7fc22
  41697c:	push   ebp
  41697d:	mov    esp,DWORD PTR [ebp+esi*1+0x3e]
  416981:	je     0x41690e
  416983:	mov    ecx,esp
  416985:	or     ch,bl
  416987:	push   esi
  416988:	jmp    0x41696a
  41698a:	adc    DWORD PTR [esi],ecx
  41698c:	call   0x75466946
  416991:	add    ebx,0xfffffff4
  416994:	inc    eax
  416995:	sha1rnds4 xmm0,XMMWORD PTR [eax],0x0
  41699a:	or     al,0xea
  41699c:	cmc    
  41699d:	leave  
  41699e:	or     eax,0x46cccccc
  4169a3:	(bad)  
  4169a4:	dec    DWORD PTR [ebx+0x38466000]
  4169aa:	mov    ebp,0x4500cccc
  4169af:	cli    
  4169b0:	add    al,0x71
  4169b2:	jbe    0x4169b4
  4169b4:	add    BYTE PTR [eax],al
  4169b6:	(bad)  
  4169b7:	jmp    0x416985
  4169b9:	add    BYTE PTR [eax],al
  4169bb:	jno    0x416a14
  4169bd:	jge    0x416a39
  4169bf:	add    DWORD PTR [ebp+0x55],edx
  4169c2:	add    ecx,ebp
  4169c4:	imul   esi,DWORD PTR [ecx+0xc005d5f],0x0
  4169cb:	int3   
  4169cc:	int3   
  4169cd:	add    BYTE PTR [ecx],al
  4169cf:	inc    ecx
  4169d0:	adc    BYTE PTR [eax*8-0xff76f0],cl
  4169d7:	loop   0x416963
  4169d9:	stos   DWORD PTR es:[edi],eax
  4169da:	ror    BYTE PTR [ebx+0x7550088b],1
  4169e0:	mov    ecx,DWORD PTR [ecx-0x64d80000]
  4169e6:	sub    eax,0xcc158b45
  4169eb:	sti    
  4169ec:	xchg   ebp,eax
  4169ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169ee:	inc    esi
  4169ef:	inc    DWORD PTR [eax]
  4169f1:	add    ah,cl
  4169f3:	jne    0x4169f5
  4169f5:	je     0x4169f7
  4169f7:	xchg   esi,eax
  4169f8:	fbld   TBYTE PTR [edx+0x454d4d71]
  4169fe:	or     al,0x92
  416a00:	sub    DWORD PTR [ebp-0x7a3333da],esp
  416a06:	adc    eax,0x75ccebff
  416a0b:	(bad)  
  416a0c:	outs   dx,BYTE PTR ds:[esi]
  416a0d:	call   DWORD PTR [esi-0x33ff7475]
  416a13:	xor    al,0x9e
  416a15:	or     esi,DWORD PTR [edi-0x1]
  416a18:	add    BYTE PTR [ebp+0x15500400],al
  416a1e:	call   DWORD PTR [edi]
  416a20:	add    eax,0xcc008a62
  416a25:	mov    ecx,esp
  416a27:	gs (bad) 
  416a2a:	xor    BYTE PTR [ebx],dh
  416a2c:	mov    ebp,eax
  416a2e:	inc    DWORD PTR [eax]
  416a30:	add    DWORD PTR [ecx],eax
  416a32:	call   FWORD PTR [eax-0x33f296b8]
  416a38:	jne    0x4169bf
  416a3a:	add    DWORD PTR [esp+esi*2],esi
  416a3d:	gs pop ss
  416a3f:	add    BYTE PTR [eax+eax*1],al
  416a42:	add    eax,DWORD PTR [eax]
  416a44:	adc    eax,0x72490001
  416a49:	xor    dl,dh
  416a4b:	add    ah,cl
  416a4d:	jnp    0xc575e4e8
  416a53:	(bad)  
  416a55:	add    DWORD PTR [eax],ecx
  416a57:	call   0xfc884a5d
  416a5c:	inc    ebp
  416a5d:	das    
  416a5e:	retf   
  416a5f:	je     0x416acb
  416a61:	xor    ebp,DWORD PTR [edx-0x6a]
  416a64:	and    cl,BYTE PTR [esi]
  416a66:	mov    ebx,0xffccdd00
  416a6b:	add    BYTE PTR [ecx+0x4896898b],cl
  416a71:	mov    ebx,0xcc01500e
  416a76:	test   ecx,esi
  416a78:	inc    eax
  416a79:	or     al,0xe4
  416a7b:	mov    DWORD PTR [eax],eax
  416a7d:	shr    bl,0xc0
  416a80:	add    BYTE PTR [ebx*8-0x31564b1f],al
  416a87:	int3   
  416a88:	int3   
  416a89:	jne    0x416a16
  416a8b:	and    al,0x41
  416a8d:	or     dh,BYTE PTR [esi-0x34]
  416a90:	int3   
  416a91:	mov    edi,edi
  416a93:	add    BYTE PTR [eax],al
  416a95:	inc    ebp
  416a96:	add    BYTE PTR [ebx-0x74222689],cl
  416a9c:	add    eax,ebp
  416a9e:	add    BYTE PTR [ebx],ch
  416aa0:	fild   WORD PTR [edx+0x748562]
  416aa6:	mov    ebx,ebp
  416aa8:	inc    DWORD PTR [eax]
  416aaa:	(bad)  
  416aab:	mov    bh,0xcc
  416aad:	push   ecx
  416aae:	cwde   
  416aaf:	add    BYTE PTR [eax],al
  416ab1:	ror    ah,0xb5
  416ab4:	adc    DWORD PTR [ecx+0x77],edx
  416ab7:	add    BYTE PTR [eax],al
  416ab9:	add    DWORD PTR [eax],eax
  416abb:	adc    ah,cl
  416abd:	mov    eax,DWORD PTR [eax]
  416abf:	cmp    eax,0x8bb74359
  416ac4:	add    BYTE PTR [eax],al
  416ac6:	mov    edi,DWORD PTR ds:0x9809c2
  416acc:	mov    ebp,ebx
  416ace:	inc    ebp
  416acf:	inc    ebp
  416ad0:	add    bl,ch
  416ad2:	push   ebp
  416ad3:	mov    ecx,0x8b0e2cf6
  416ad8:	add    ah,cl
  416ada:	add    BYTE PTR [edx+ebx*1-0x3374882f],bh
  416ae1:	int3   
  416ae2:	add    DWORD PTR [ebp+0x0],eax
  416ae5:	add    bh,bh
  416ae7:	mov    ecx,0x5518eeb9
  416aec:	int3   
  416aed:	add    DWORD PTR [eax],eax
  416aef:	xor    BYTE PTR [esi],cl
  416af1:	cmp    ebx,edx
  416af3:	(bad)  
  416af5:	mov    ecx,DWORD PTR [ebp-0x73]
  416af8:	jne    0x416afa
  416afa:	add    cl,ch
  416afc:	sub    bl,BYTE PTR [esi+0x18dff8d]
  416b02:	push   eax
  416b03:	pop    DWORD PTR [eax]
  416b05:	sub    al,0xe1
  416b07:	cmp    edi,0xffffff83
  416b0a:	rol    BYTE PTR [eax],0xc
  416b0d:	add    BYTE PTR [eax],al
  416b0f:	pop    ds
  416b10:	jne    0x416b7d
  416b12:	mov    DWORD PTR es:[ecx],eax
  416b15:	mov    ecx,esp
  416b17:	jl     0x416b6f
  416b19:	loope  0x416ad9
  416b1b:	or     BYTE PTR [edx+ebp*2],al
  416b1e:	test   DWORD PTR [ebx-0x64ff7675],ecx
  416b24:	mov    eax,ds:0xcc2e09
  416b29:	jmp    eax
  416b2b:	cwde   
  416b2c:	sahf   
  416b2d:	dec    edi
  416b2e:	dec    edi
  416b2f:	mov    eax,DWORD PTR [eax]
  416b31:	lea    ecx,[ebx+0x45010800]
  416b37:	test   al,0x9a
  416b39:	pop    ebp
  416b3a:	or     ah,cl
  416b3c:	add    BYTE PTR [eax],al
  416b3e:	add    eax,DWORD PTR [edx-0x33c6873d]
  416b44:	add    ch,bl
  416b46:	adc    BYTE PTR [ecx+0x16c7c08b],cl
  416b4c:	test   BYTE PTR [ebx-0x743f749a],dh
  416b52:	add    BYTE PTR [ebx-0x1c],cl
  416b55:	jno    0x416bc3
  416b57:	add    bh,bh
  416b59:	jne    0x416b5c
  416b5b:	adc    al,al
  416b5d:	inc    ebp
  416b5e:	add    BYTE PTR [eax+0x62],cl
  416b61:	add    cl,bl
  416b63:	(bad)  
  416b64:	inc    DWORD PTR [eax]
  416b66:	int3   
  416b67:	cld    
  416b68:	inc    edx
  416b69:	mov    ds:0x10f835d,eax
  416b6e:	add    BYTE PTR [eax],al
  416b70:	dec    ebp
  416b71:	add    BYTE PTR [esi+0x45],al
  416b74:	add    eax,0xfc770af
  416b79:	add    esp,ecx
  416b7b:	xlat   BYTE PTR ds:[ebx]
  416b7c:	cld    
  416b7d:	sbb    ch,bl
  416b7f:	mov    DWORD PTR [ebx-0x3fea95f1],ecx
  416b85:	add    BYTE PTR [edi+ecx*4],cl
  416b88:	adc    ah,dh
  416b8a:	imul   ecx,esp,0xe16acc8b
  416b90:	adc    DWORD PTR [eax],esi
  416b92:	or     esi,DWORD PTR [eax+eax*1+0x0]
  416b96:	mov    DWORD PTR [ebx-0x623f228b],ecx
  416b9c:	jl     0x416baa
  416b9e:	lahf   
  416b9f:	int3   
  416ba0:	add    al,ch
  416ba2:	int3   
  416ba3:	and    DWORD PTR gs:[edi-0x55],ecx
  416ba7:	je     0x416bef
  416ba9:	inc    ebp
  416baa:	adc    BYTE PTR [ebx-0x4dea8a01],cl
  416bb0:	cld    
  416bb1:	das    
  416bb2:	mov    ds:0x5600ffcc,al
  416bb7:	outs   dx,DWORD PTR ds:[esi]
  416bb8:	mov    cl,0x3a
  416bba:	(bad)  [edx*1+0xcc1556]
  416bc1:	pop    ebp
  416bc2:	push   ebp
  416bc3:	ins    BYTE PTR es:[edi],dx
  416bc4:	push   esp
  416bc5:	dec    edi
  416bc6:	jns    0xf651f6cc
  416bcc:	(bad)  
  416bcd:	push   edx
  416bce:	ret    
  416bcf:	add    BYTE PTR [ebp+0x45],al
  416bd2:	push   0xffffff85
  416bd4:	add    DWORD PTR [eax],0x45
  416bd7:	adc    ah,BYTE PTR [ebx+0x7]
  416bda:	add    cx,WORD PTR [ecx+ecx*4]
  416bde:	or     BYTE PTR [eax],ah
  416be0:	mov    eax,ds:0x1dd8cce
  416be5:	push   esi
  416be6:	mov    DWORD PTR [eax],edx
  416be8:	(bad)  
  416be9:	dec    esp
  416beb:	xchg   esp,eax
  416bec:	icebp  
  416bed:	add    dh,ah
  416bef:	(bad)  
  416bf0:	mov    ecx,esp
  416bf2:	add    BYTE PTR [eax-0x7699394f],dl
  416bf8:	or     BYTE PTR [ebx-0x33ff0100],cl
  416bfe:	loopne 0x416b8d
  416c00:	add    eax,0xff45f0ce
  416c05:	inc    ebp
  416c06:	xor    edx,DWORD PTR [ebx+0x1d2119]
  416c0c:	inc    DWORD PTR [ebp-0x40]
  416c0f:	mov    edi,edi
  416c11:	int3   
  416c12:	add    BYTE PTR [ebx-0x22],bh
  416c15:	imul   ecx,DWORD PTR [edi],0x4
  416c18:	add    BYTE PTR [eax],al
  416c1a:	mov    esp,DWORD PTR [eax+0x77]
  416c1d:	cwde   
  416c1e:	inc    esi
  416c1f:	int3   
  416c20:	mov    eax,DWORD PTR [eax]
  416c22:	add    DWORD PTR [eax],0xffffff8b
  416c25:	inc    esi
  416c26:	add    BYTE PTR [edx],bh
  416c28:	mov    al,ds:0x5d00dcf7
  416c2d:	add    esp,eax
  416c2f:	xchg   esi,eax
  416c30:	fisubr WORD PTR [edi+ecx*1]
  416c33:	push   ebp
  416c34:	in     al,dx
  416c35:	push   ebp
  416c36:	adc    ah,cl
  416c38:	call   0x48a7f53e
  416c3d:	stc    
  416c3e:	or     esp,eax
  416c40:	lea    edx,[ebp+0x0]
  416c43:	cmc    
  416c44:	(bad)  
  416c45:	fbstp  TBYTE PTR [edx+0x10]
  416c48:	inc    ebp
  416c49:	jne    0x416c57
  416c4b:	mov    edi,edi
  416c4d:	add    ah,cl
  416c4f:	jmp    0x89fcfba8
  416c54:	mov    DWORD PTR [eax],eax
  416c56:	(bad)  
  416c57:	in     eax,dx
  416c58:	ss dec edx
  416c5a:	(bad)  
  416c5c:	add    BYTE PTR [ebp-0x34],dl
  416c5f:	add    bh,bh
  416c61:	add    BYTE PTR [esi+esi*8],al
  416c64:	stos   DWORD PTR es:[edi],eax
  416c65:	dec    ecx
  416c66:	dec    ebp
  416c67:	add    DWORD PTR [edi+edi*8+0x4],esi
  416c6b:	or     ecx,esp
  416c6d:	inc    ecx
  416c6e:	mov    ch,0x0
  416c70:	je     0x416bff
  416c72:	add    bh,bh
  416c74:	test   DWORD PTR [ebx-0x1cd98f4],ecx
  416c7a:	inc    eax
  416c7b:	mov    eax,DWORD PTR [ebp-0x34]
  416c7e:	add    al,0x8c
  416c80:	xchg   DWORD PTR ds:0x1450009,ebp
  416c86:	mov    ebx,ebp
  416c88:	add    ah,cl
  416c8a:	xor    esi,ebx
  416c8c:	and    al,0x1f
  416c8e:	fwait
  416c8f:	add    DWORD PTR [eax],eax
  416c91:	inc    DWORD PTR [eax]
  416c93:	push   0x3fcbe0a
  416c98:	fstp   st(5)
  416c9a:	int3   
  416c9b:	je     0x416c9c
  416c9d:	cmovge ebp,DWORD PTR [ebp-0x3f37e667]
  416ca4:	push   0xffffff83
  416ca6:	test   DWORD PTR [ebx],ebx
  416ca8:	pushf  
  416ca9:	mov    esp,0xc700bd
  416cae:	add    BYTE PTR [esi+edx*2],al
  416cb1:	int3   
  416cb2:	add    BYTE PTR [ecx-0x67],cl
  416cb5:	dec    edx
  416cb6:	xor    DWORD PTR [eax],eax
  416cb8:	mov    ecx,DWORD PTR [eax]
  416cba:	rol    bl,0x6d
  416cbd:	mov    al,ds:0x88bbb7c
  416cc2:	add    BYTE PTR [eax],al
  416cc4:	in     al,dx
  416cc5:	and    ecx,edi
  416cc7:	push   0x8b8300cc
  416ccc:	add    ah,cl
  416cce:	mov    eax,DWORD PTR [ebp-0x2a]
  416cd1:	loope  0x416cc2
  416cd3:	jl     0x416c9c
  416cd5:	lsl    ecx,WORD PTR [ebp+0x7ec00f07]
  416cdc:	mov    eax,DWORD PTR [eax]
  416cde:	rol    BYTE PTR [eax],0x0
  416ce1:	add    BYTE PTR [eax+0x55],dl
  416ce4:	fdivr  DWORD PTR ds:0xf832685
  416cea:	fisttp QWORD PTR [ebx+0x5f6138f4]
  416cf0:	add    DWORD PTR [ecx],eax
  416cf2:	add    edi,edi
  416cf4:	or     al,0x4d
  416cf6:	push   ebp
  416cf7:	int3   
  416cf8:	mov    bl,0x49
  416cfa:	pop    es
  416cfb:	pop    ss
  416cfc:	mov    eax,DWORD PTR [ecx]
  416cfe:	add    al,0x1
  416d00:	jbe    0x416d0e
  416d02:	clc    
  416d03:	jmp    0x0:0xcc83ff00
  416d0a:	add    BYTE PTR [ebp+0x2b],al
  416d0d:	xchg   BYTE PTR [esi-0x51],bl
  416d10:	ror    BYTE PTR [ecx-0xd647475],0x63
  416d17:	(bad)  
  416d18:	add    BYTE PTR [edi+edi*8+0x55],dh
  416d1c:	add    al,al
  416d1e:	je     0x416d0b
  416d20:	pop    eax
  416d21:	cmp    ebx,edi
  416d23:	mov    ss,WORD PTR ds:0xbbff0074
  416d29:	mov    al,ds:0x566ca4
  416d2e:	add    BYTE PTR [eax],al
  416d30:	mov    ecx,DWORD PTR [eax]
  416d32:	int3   
  416d33:	test   DWORD PTR [ebx+0x33b3e2],ecx
  416d39:	push   esi
  416d3a:	add    BYTE PTR [eax],al
  416d3c:	xchg   esi,eax
  416d3d:	pushf  
  416d3e:	xor    DWORD PTR [ebp+0x0],ecx
  416d41:	add    BYTE PTR [ebp-0x34],dl
  416d44:	or     BYTE PTR [ebx+0x44658be8],al
  416d4a:	inc    ebp
  416d4b:	icebp  
  416d4c:	add    DWORD PTR [ebp-0x73],esi
  416d4f:	add    BYTE PTR [esi+ebx*2+0x87d08],ch
  416d56:	int3   
  416d57:	add    BYTE PTR [ecx],al
  416d59:	add    BYTE PTR ds:0x7da28500,dl
  416d5f:	add    al,BYTE PTR [eax]
  416d61:	add    BYTE PTR [ecx+0x1ad7d5dd],cl
  416d67:	cmp    al,0xf
  416d69:	add    BYTE PTR ds:0xcce00089,dl
  416d6f:	mov    eax,eax
  416d71:	sbb    bl,0x82
  416d74:	add    edi,eax
  416d76:	inc    esi
  416d77:	mov    ebx,DWORD PTR [eax-0x7cf6b3a2]
  416d7d:	push   eax
  416d7e:	(bad)  
  416d7f:	dec    DWORD PTR [ebx-0x1f7cff01]
  416d85:	push   0xe0838595
  416d8a:	dec    DWORD PTR [ebp-0x565c5d2]
  416d90:	inc    ebp
  416d91:	add    BYTE PTR [ebx-0x76fe7d00],cl
  416d97:	inc    DWORD PTR [edx+0x47a481]
  416d9d:	add    BYTE PTR [eax],al
  416d9f:	add    BYTE PTR [edx+0x6a86a366],dh
  416da5:	mov    DWORD PTR [eax],eax
  416da7:	fisttp QWORD PTR [ecx+0x38d5d00]
  416dad:	sbb    bh,dh
  416daf:	rol    DWORD PTR [ecx+eax*1],1
  416db2:	int3   
  416db3:	add    BYTE PTR [ecx-0x4d],al
  416db6:	adc    eax,0x89838591
  416dbb:	add    DWORD PTR [ebx+0x4a740401],ecx
  416dc1:	jmp    0x416d4f
  416dc3:	xor    ebp,DWORD PTR [edx+0x1]
  416dc6:	mov    DWORD PTR [eax],eax
  416dc8:	retf   0x4718
  416dcb:	and    BYTE PTR [ebp+0x0],al
  416dce:	add    ah,cl
  416dd0:	mov    eax,DWORD PTR [ecx]
  416dd2:	mov    ecx,DWORD PTR [ecx+0x54e8d6dd]
  416dd8:	add    al,0x10
  416dda:	add    BYTE PTR [eax],al
  416ddc:	mov    eax,ds:0x8dbb6d97
  416de1:	inc    ebp
  416de2:	add    BYTE PTR [ebp+0x0],cl
  416de5:	inc    esi
  416de6:	test   DWORD PTR ds:0xfa0738b8,edx
  416dec:	push   eax
  416ded:	dec    DWORD PTR [ebx-0x43026e34]
  416df3:	data16 rol BYTE PTR [eax],0x56
  416df7:	dec    esp
  416df9:	add    BYTE PTR [eax],al
  416dfb:	(bad)  
  416dfc:	imul   BYTE PTR [esi+0x834529]
  416e02:	lea    eax,[eax]
  416e04:	(bad)  
  416e05:	clc    
  416e06:	test   BYTE PTR [edi-0x14],cl
  416e09:	add    al,0xcc
  416e0b:	dec    DWORD PTR [edi]
  416e0d:	mov    edi,edi
  416e0f:	add    al,0x29
  416e11:	scas   al,BYTE PTR es:[edi]
  416e12:	std    
  416e13:	mov    ecx,esp
  416e15:	push   esi
  416e16:	mov    DWORD PTR [eax],0x54db0132
  416e1c:	push   ebp
  416e1d:	int3   
  416e1e:	call   0xc882e27
  416e23:	int3   
  416e24:	popa   
  416e25:	pop    ecx
  416e26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e27:	add    eax,0xcc005d
  416e2c:	add    esp,DWORD PTR [eax+0xfd920]
  416e32:	int3   
  416e33:	add    BYTE PTR [ebx-0x6074cc34],cl
  416e39:	repnz arpl bp,dx
  416e3c:	(bad)  
  416e3d:	jmp    0x416e3e
  416e3f:	int3   
  416e40:	out    dx,al
  416e41:	xor    BYTE PTR [esi],0x1b
  416e44:	add    BYTE PTR [ebp-0x23],dl
  416e47:	add    al,0x85
  416e49:	add    BYTE PTR [ebp-0x669d5200],al
  416e4f:	cmp    eax,0xc838345
  416e54:	add    ebp,DWORD PTR [ebp+0x5]
  416e57:	cmp    eax,DWORD PTR [ebx+ecx*4]
  416e5a:	mov    ecx,esp
  416e5c:	jmp    FWORD PTR [edx+0x74]
  416e5f:	add    BYTE PTR [eax-0x740885c6],bh
  416e65:	mov    DWORD PTR [eax],eax
  416e67:	int3   
  416e68:	pop    edi
  416e69:	sub    esp,ebx
  416e6b:	dec    ebx
  416e6c:	add    ch,bl
  416e6e:	test   DWORD PTR [ebp-0x77],esi
  416e71:	int3   
  416e72:	add    BYTE PTR [ebx+0x202fbfcd],cl
  416e78:	xor    edx,DWORD PTR [esi-0x34]
  416e7b:	add    BYTE PTR [edi-0x76d26948],ah
  416e81:	add    BYTE PTR [eax],al
  416e83:	int3   
  416e84:	add    BYTE PTR [ebp-0x1],dh
  416e87:	test   DWORD PTR [ebx+0xc],esi
  416e8a:	push   ecx
  416e8b:	mov    WORD PTR [ecx],es
  416e8d:	call   0x3f1b7692
  416e92:	(bad)  
  416e94:	push   0x6a
  416e96:	test   DWORD PTR [ebx-0x7a763400],ecx
  416e9c:	sub    al,0xdd
  416e9e:	lahf   
  416e9f:	fiadd  WORD PTR [eax]
  416ea1:	add    BYTE PTR [ebx],al
  416ea3:	add    BYTE PTR [ebp+0x47],ah
  416ea6:	push   ebp
  416ea7:	fdiv   st(7),st
  416ea9:	add    bh,bh
  416eab:	jne    0x416ead
  416ead:	mov    edx,DWORD PTR [eax+0x56]
  416eb0:	or     DWORD PTR [esi],0xc9e0f
  416eb6:	(bad)  
  416eb7:	jmp    DWORD PTR [esi]
  416eb9:	js     0x416ec0
  416ebb:	dec    ah
  416ebd:	add    BYTE PTR [ecx],al
  416ebf:	dec    DWORD PTR [ecx+0x69000800]
  416ec5:	add    al,0x5
  416ec7:	push   esp
  416ec8:	inc    DWORD PTR [ebx+0x65e00f15]
  416ece:	pop    esp
  416ecf:	fimul  DWORD PTR [ebx+0xff]
  416ed5:	int3   
  416ed6:	int3   
  416ed7:	int3   
  416ed8:	adc    al,0x10
  416eda:	pushf  
  416edb:	mov    al,0xc7
  416edd:	xor    edi,edi
  416edf:	int3   
  416ee0:	fidivr DWORD PTR [eax]
  416ee2:	xlat   BYTE PTR fs:[ebx]
  416ee4:	int3   
  416ee5:	int3   
  416ee6:	inc    DWORD PTR [ecx]
  416ee8:	mov    DWORD PTR [ecx],eax
  416eea:	call   0xe835867a
  416eef:	call   0x5a1f:0x55cc00
  416ef6:	(bad)  
  416ef7:	add    BYTE PTR [ecx],al
  416ef9:	add    DWORD PTR [eax],edx
  416efb:	adc    eax,0x483ff85
  416f00:	mov    BYTE PTR [edx-0x74767641],ah
  416f06:	je     0x416f08
  416f08:	aaa    
  416f09:	add    BYTE PTR [esi-0x46],dl
  416f0c:	(bad)  
  416f0e:	mov    eax,DWORD PTR [eax]
  416f10:	add    ah,cl
  416f12:	int3   
  416f13:	mov    eax,esi
  416f15:	jge    0x416f09
  416f17:	rol    DWORD PTR [eax],1
  416f19:	add    BYTE PTR [ecx],al
  416f1b:	mov    DWORD PTR [ebx],ecx
  416f1d:	iret   
  416f1e:	jp     0x416ea2
  416f20:	mov    DWORD PTR [ecx],eax
  416f22:	add    DWORD PTR [eax],eax
  416f24:	mov    ecx,DWORD PTR [ebx-0x31c9ef77]
  416f2a:	adc    eax,ebp
  416f2c:	mov    DWORD PTR [ebx],eax
  416f2e:	add    BYTE PTR [ecx-0x57aebf32],cl
  416f34:	xor    eax,DWORD PTR [eax]
  416f36:	loopne 0x416f37
  416f38:	int3   
  416f39:	mov    eax,DWORD PTR [ebp+0x0]
  416f3c:	sub    bh,BYTE PTR [ecx-0x1372f377]
  416f42:	mov    DWORD PTR [eax],eax
  416f44:	or     DWORD PTR [ecx-0xba82d3],esi
  416f4a:	add    BYTE PTR [eax],al
  416f4c:	int3   
  416f4d:	add    ah,cl
  416f4f:	add    BYTE PTR [ebp+0x3cccf8],al
  416f55:	add    DWORD PTR [eax],eax
  416f57:	adc    eax,0x3e2bf2cc
  416f5c:	add    al,0x0
  416f5e:	(bad)  
  416f5f:	dec    DWORD PTR [eax]
  416f61:	mov    ecx,DWORD PTR [eax]
  416f63:	add    DWORD PTR [esi],esi
  416f65:	inc    esp
  416f66:	leave  
  416f67:	pop    ebx
  416f68:	(bad)  
  416f6a:	add    BYTE PTR [ebp-0x61a7e1c],al
  416f70:	add    BYTE PTR [ebx+0x458b8b],cl
  416f76:	jne    0x416f58
  416f78:	in     eax,dx
  416f79:	xchg   edi,eax
  416f7a:	push   ebx
  416f7b:	pop    esi
  416f7c:	mov    DWORD PTR [eax+0x0],edx
  416f7f:	or     BYTE PTR [eax],bh
  416f81:	and    edi,DWORD PTR [edi-0x59]
  416f84:	int3   
  416f85:	sar    bh,0x55
  416f88:	mov    edi,edi
  416f8a:	add    BYTE PTR [ebp-0x687fff43],cl
  416f90:	mov    DWORD PTR [ebx+0x3c027401],ecx
  416f96:	in     eax,dx
  416f97:	xchg   esp,eax
  416f98:	add    bh,bh
  416f9a:	add    ah,cl
  416f9c:	int3   
  416f9d:	add    DWORD PTR [ebx+0x893f800],ecx
  416fa3:	jle    0x417019
  416fa5:	add    BYTE PTR [eax],dl
  416fa7:	adc    eax,0x25f6ba06
  416fac:	inc    ebp
  416fad:	push   0xffffff8b
  416faf:	adc    eax,0xff006aff
  416fb4:	ret    
  416fb5:	push   ebp
  416fb6:	mov    ebp,esp
  416fb8:	sub    esp,0xc
  416fbb:	push   ebx
  416fbc:	push   esi
  416fbd:	mov    esi,DWORD PTR ds:0x418068
  416fc3:	push   edi
  416fc4:	mov    ebx,0x80
  416fc9:	push   ebx
  416fca:	call   esi
  416fcc:	lea    edi,[eax-0x1]
  416fcf:	neg    edi
  416fd1:	sbb    edi,edi
  416fd3:	push   ebx
  416fd4:	and    edi,0x40000
  416fda:	call   esi
  416fdc:	lea    esi,[eax-0x1]
  416fdf:	neg    esi
  416fe1:	sbb    esi,esi
  416fe3:	push   0x0
  416fe5:	and    esi,0x19c54
  416feb:	push   esi
  416fec:	push   edi
  416fed:	call   DWORD PTR ds:0x41805c
  416ff3:	mov    edi,eax
  416ff5:	lea    eax,[ebp-0x8]
  416ff8:	push   eax
  416ff9:	push   0x1
  416ffb:	call   DWORD PTR ds:0x4180c4
  417001:	mov    eax,DWORD PTR [ebp-0x8]
  417004:	mov    ecx,DWORD PTR [eax]
  417006:	lea    edx,[ebp-0xc]
  417009:	push   edx
  41700a:	push   0x4181e0
  41700f:	push   eax
  417010:	call   DWORD PTR [ecx]
  417012:	push   esi
  417013:	push   0x0
  417015:	push   edi
  417016:	mov    ds:0x4194b8,eax
  41701b:	call   DWORD PTR ds:0x418058
  417021:	push   0x405e6b
  417026:	mov    esi,eax
  417028:	push   0x4b
  41702a:	lea    eax,[esi+0x4424]
  417030:	push   eax
  417031:	lea    eax,[esi+0x42f4]
  417037:	push   eax
  417038:	push   0x4c
  41703a:	push   0x416cbc
  41703f:	mov    DWORD PTR ds:0x419448,esi
  417045:	mov    DWORD PTR ds:0x419414,0x410ed4
  41704f:	mov    DWORD PTR ds:0x419434,0x409bcf
  417059:	mov    DWORD PTR ds:0x4193a8,0x4056bb
  417063:	call   0x401000
  417068:	lea    eax,[esi+0x499c]
  41706e:	mov    ds:0x419428,eax
  417073:	lea    eax,[esi+0x4c3c]
  417079:	push   eax
  41707a:	push   0x59
  41707c:	push   0x41241f
  417081:	push   0x40e757
  417086:	mov    DWORD PTR ds:0x419420,0x40a973
  417090:	call   0x4024b6
  417095:	lea    eax,[esi+0x7bf4]
  41709b:	mov    ds:0x41936c,eax
  4170a0:	mov    DWORD PTR ds:0x4194c8,0x40b1be
  4170aa:	mov    DWORD PTR ds:0x4194d0,0x40ea80
  4170b4:	call   0x40293d
  4170b9:	lea    eax,[esi+0x73b0]
  4170bf:	push   0x5e
  4170c1:	push   0x412b45
  4170c6:	mov    DWORD PTR ds:0x41941c,0x4043e7
  4170d0:	mov    ds:0x4194e4,eax
  4170d5:	mov    DWORD PTR ds:0x41948c,0x401b0f
  4170df:	mov    DWORD PTR ds:0x4193ec,0x412798
  4170e9:	mov    DWORD PTR ds:0x419410,0x414d11
  4170f3:	mov    DWORD PTR ds:0x4193d0,0x413b51
  4170fd:	call   0x404238
  417102:	push   0x406cdf
  417107:	mov    DWORD PTR ds:0x419404,0x40ff3b
  417111:	mov    DWORD PTR ds:0x419470,0x406591
  41711b:	mov    DWORD PTR ds:0x4193c4,0x415bb1
  417125:	push   0x414733
  41712a:	lea    eax,[esi+0x2910]
  417130:	push   eax
  417131:	call   0x405478
  417136:	lea    eax,[esi+0x2144]
  41713c:	mov    ds:0x4193a4,eax
  417141:	lea    eax,[esi+0x2500]
  417147:	push   eax
  417148:	lea    eax,[esi+0x2024]
  41714e:	push   0x404788
  417153:	push   eax
  417154:	mov    DWORD PTR ds:0x419458,0x411596
  41715e:	mov    DWORD PTR ds:0x419438,0x40c246
  417168:	mov    DWORD PTR ds:0x419498,0x41215a
  417172:	mov    DWORD PTR ds:0x4193d8,0x412ef2
  41717c:	mov    DWORD PTR ds:0x4193dc,0x416993
  417186:	mov    DWORD PTR ds:0x419488,0x4035cc
  417190:	call   0x4059a8
  417195:	add    esp,0x48
  417198:	push   0x4f
  41719a:	push   0x40d470
  41719f:	lea    eax,[esi+0x1268]
  4171a5:	push   0x46
  4171a7:	mov    ds:0x4194a0,eax
  4171ac:	lea    eax,[esi+0x1114]
  4171b2:	push   0x59
  4171b4:	push   eax
  4171b5:	mov    DWORD PTR ds:0x4194b0,0x409f7c
  4171bf:	mov    DWORD PTR ds:0x419478,0x41661a
  4171c9:	mov    DWORD PTR ds:0x419408,0x40692a
  4171d3:	mov    DWORD PTR ds:0x419474,0x40b447
  4171dd:	mov    DWORD PTR ds:0x41937c,0x40be85
  4171e7:	mov    DWORD PTR ds:0x419490,0x407008
  4171f1:	call   0x407696
  4171f6:	push   0x407bd3
  4171fb:	lea    eax,[esi+0x6078]
  417201:	push   eax
  417202:	lea    eax,[esi+0x5f5c]
  417208:	push   eax
  417209:	mov    DWORD PTR ds:0x419468,0x40153d
  417213:	mov    DWORD PTR ds:0x419380,0x408eb9
  41721d:	mov    DWORD PTR ds:0x419374,0x405bea
  417227:	mov    DWORD PTR ds:0x419390,0x40f0a2
  417231:	call   0x4083ae
  417236:	add    esp,0x20
  417239:	push   0x3
  41723b:	pop    edi
  41723c:	lea    eax,[esi+0x4da0]
  417242:	mov    edx,edi
  417244:	xor    ecx,ecx
  417246:	mov    ebx,ecx
  417248:	shl    ebx,0x2
  41724b:	add    ebx,0x40622c
  417251:	mov    ebx,DWORD PTR [ebx]
  417253:	sub    ebx,DWORD PTR ds:0x4194b8
  417259:	sub    ebx,0x7cf840f2
  41725f:	mov    DWORD PTR [eax],ebx
  417261:	xor    ebx,ebx
  417263:	add    eax,0x4
  417266:	cmp    edx,edi
  417268:	setne  bl
  41726b:	lea    edx,[ebx+0x2]
  41726e:	add    ecx,edx
  417270:	cmp    ecx,0xd9
  417276:	jb     0x417246
  417278:	lea    eax,[esi+0x4efc]
  41727e:	push   eax
  41727f:	mov    DWORD PTR ds:0x4193f4,0x401ed0
  417289:	mov    DWORD PTR ds:0x419440,0x40bb78
  417293:	mov    DWORD PTR ds:0x41942c,0x40c928
  41729d:	call   0x409ab1
  4172a2:	pop    ecx
  4172a3:	lea    eax,[esi+0x65f0]
  4172a9:	mov    DWORD PTR [ebp-0x4],edi
  4172ac:	xor    ecx,ecx
  4172ae:	mov    ebx,DWORD PTR ds:0x4194b8
  4172b4:	mov    edx,ecx
  4172b6:	shl    edx,0x2
  4172b9:	add    edx,0x402614
  4172bf:	mov    edx,DWORD PTR [edx]
  4172c1:	lea    edx,[edx+ebx*1-0x36317339]
  4172c8:	mov    DWORD PTR [eax],edx
  4172ca:	xor    edx,edx
  4172cc:	add    eax,0x4
  4172cf:	cmp    DWORD PTR [ebp-0x4],edi
  4172d2:	setne  dl
  4172d5:	add    edx,0x2
  4172d8:	add    ecx,edx
  4172da:	mov    DWORD PTR [ebp-0x4],edx
  4172dd:	cmp    ecx,0xca
  4172e3:	jb     0x4172ae
  4172e5:	lea    eax,[esi+0x6c58]
  4172eb:	push   eax
  4172ec:	lea    eax,[esi+0x6734]
  4172f2:	push   0x409483
  4172f7:	push   eax
  4172f8:	mov    DWORD PTR ds:0x419370,0x40c567
  417302:	mov    DWORD PTR ds:0x4194d8,0x4155bf
  41730c:	mov    DWORD PTR ds:0x4194c4,0x410902
  417316:	mov    DWORD PTR ds:0x419378,0x408b90
  417320:	mov    DWORD PTR ds:0x4193cc,0x51
  41732a:	mov    DWORD PTR ds:0x4194bc,0x403c7a
  417334:	mov    DWORD PTR ds:0x419398,0x416355
  41733e:	call   0x40acbc
  417343:	lea    eax,[esi+0x52d4]
  417349:	push   eax
  41734a:	mov    DWORD PTR ds:0x41946c,0x4142f5
  417354:	mov    DWORD PTR ds:0x4193f0,0x402221
  41735e:	mov    DWORD PTR ds:0x419460,0x40792a
  417368:	mov    DWORD PTR ds:0x419450,0x413476
  417372:	mov    DWORD PTR ds:0x4193bc,0x40e101
  41737c:	call   0x40b999
  417381:	push   0x4051f7
  417386:	push   0x404af9
  41738b:	push   0x415930
  417390:	lea    eax,[esi+0x3190]
  417396:	push   0x47
  417398:	push   eax
  417399:	mov    DWORD PTR ds:0x419430,0x409704
  4173a3:	mov    DWORD PTR ds:0x419424,0x41605c
  4173ad:	mov    DWORD PTR ds:0x419394,0x407e54
  4173b7:	mov    DWORD PTR ds:0x4194ac,0x402a50
  4173c1:	call   0x40de83
  4173c6:	lea    eax,[esi+0xc08]
  4173cc:	push   eax
  4173cd:	mov    DWORD PTR ds:0x4194b4,0x4105cd
  4173d7:	mov    DWORD PTR ds:0x4194a4,0x40f5c8
  4173e1:	mov    DWORD PTR ds:0x419454,0x40e3be
  4173eb:	call   0x40ee22
  4173f0:	lea    eax,[esi+0x1a94]
  4173f6:	push   0x43
  4173f8:	mov    DWORD PTR ds:0x41944c,0x402f82
  417402:	mov    ds:0x41939c,eax
  417407:	mov    DWORD PTR ds:0x4194dc,0x40f32b
  417411:	mov    DWORD PTR ds:0x41938c,0x410c23
  41741b:	mov    DWORD PTR ds:0x4193c8,0x40b704
  417425:	call   0x413293
  41742a:	lea    eax,[esi+0x6ff4]
  417430:	push   eax
  417431:	mov    DWORD PTR ds:0x419480,0x40ea89
  41743b:	mov    DWORD PTR ds:0x4193fc,0x411e59
  417445:	mov    DWORD PTR ds:0x41940c,0x4085fa
  41744f:	call   0x4136f7
  417454:	lea    eax,[esi+0x39cc]
  41745a:	mov    ds:0x41943c,eax
  41745f:	lea    eax,[esi+0x3b30]
  417465:	push   0x42
  417467:	push   0x404e7e
  41746c:	mov    DWORD PTR ds:0x419464,0x41020c
  417476:	mov    DWORD PTR ds:0x4193e4,0x60
  417480:	mov    ds:0x419388,eax
  417485:	mov    DWORD PTR ds:0x419384,0x408119
  41748f:	mov    DWORD PTR ds:0x41949c,0x411209
  417499:	mov    DWORD PTR ds:0x4193e8,0x40db12
  4174a3:	mov    DWORD PTR ds:0x4194e0,0x403247
  4174ad:	mov    DWORD PTR ds:0x419368,0x40fca6
  4174b7:	call   0x414083
  4174bc:	lea    eax,[esi+0x840]
  4174c2:	push   eax
  4174c3:	lea    eax,[esi+0x5f0]
  4174c9:	push   0x4073a9
  4174ce:	push   eax
  4174cf:	mov    DWORD PTR ds:0x4194d4,0x4088b7
  4174d9:	mov    DWORD PTR ds:0x419484,0x411867
  4174e3:	mov    DWORD PTR ds:0x4194c0,0x401802
  4174ed:	mov    DWORD PTR ds:0x419400,0x40a5ee
  4174f7:	call   0x4145a6
  4174fc:	add    esp,0x44
  4174ff:	mov    DWORD PTR ds:0x4193e0,0x41383c
  417509:	mov    DWORD PTR ds:0x41947c,0x403929
  417513:	mov    DWORD PTR ds:0x4193c0,0x415062
  41751d:	mov    DWORD PTR ds:0x41945c,0x411b4c
  417527:	lea    eax,[esi+0x581c]
  41752d:	push   0x57
  41752f:	push   eax
  417530:	mov    DWORD PTR ds:0x4193d4,0x403f8f
  41753a:	mov    DWORD PTR ds:0x419444,0x40cc65
  417544:	call   0x4153c7
  417549:	mov    DWORD PTR ds:0x419494,0x4091c6
  417553:	mov    DWORD PTR ds:0x4193a0,esi
  417559:	mov    DWORD PTR ds:0x4194a8,0x413dee
  417563:	mov    DWORD PTR ds:0x4193f8,0x40a2cd
  41756d:	mov    DWORD PTR ds:0x4194cc,0x40d1ab
  417577:	mov    DWORD PTR ds:0x419418,0x40d785
  417581:	call   0x415e5a
  417586:	push   0xc
  417588:	push   0x28
  41758a:	call   DWORD PTR ds:0x419448
  417590:	add    esp,0x10
  417593:	push   0x1
  417595:	push   0xa
  417597:	push   0x0
  417599:	call   DWORD PTR ds:0x418098
  41759f:	pop    edi
  4175a0:	pop    esi
  4175a1:	xor    eax,eax
  4175a3:	pop    ebx
  4175a4:	leave  
  4175a5:	ret    
